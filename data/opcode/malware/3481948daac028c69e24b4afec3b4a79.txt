mov
or
add
add
dec
add
add
add
add
add
add
add
add
push
mov
jmp
add
(bad)
and
add
add
and
add
add
add
add
add
sbb
add
lea
ror
add
add
add
add
or
add
add
push
add
add
add
sub
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
pop
add
add
add
add
add
add
add
ja
add
mov
add
add
add
add
add
mov
add
add
add
add
adc
add
add
add
mov
or
adc
stos
add
popa
pop
push
pop
push
popa
inc
add
add
add
adc
xchg
adc
pop
push
xchg
and
add
pop
sub
rcl
add
sub
add
or
pop
or
add
jae
(bad)
inc
mov
add
sbb
add
add
or
or
add
pop
(bad)
(bad)
inc
pop
pop
or
and
pop
or
push
pop
or
add
pop
adc
inc
(bad)
(bad)
dec
sbb
or
add
xor
(bad)
call
push
pop
adc
pop
sub
pop
je
add
add
push
adc
pop
(bad)
(bad)
inc
add
adc
add
add
add
adc
add
add
sbb
inc
or
add
add
add
add
add
add
das
add
add
add
add
add
add
add
or
push
jne
add
add
and
add
add
pop
add
add
add
push
and
add
add
ret
add
add
add
sbb
stos
push
jne
add
add
outs
add
add
add
add
adc
adc
add
and
xchg
add
add
add
add
sbb
jns
(bad)
inc
jne
add
add
pop
add
or
xor
push
or
arpl
(bad)
dec
pop
pop
xchg
and
add
pop
sub
push
jne
add
add
add
or
sbb
inc
(bad)
(bad)
jmp
add
add
sbb
add
sub
add
and
nop
add
add
add
add
sub
pop
sbb
aam
mov
rol
add
add
adc
adc
add
sub
and
add
sub
add
push
outs
pop
add
push
sub
add
push
sub
add
push
and
add
add
rol
add
sub
add
sub
add
mov
rol
add
add
adc
adc
add
sub
add
push
and
enter
sub
add
sub
sub
add
xor
add
add
adc
or
inc
push
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
cmps
add
add
add
and
add
inc
and
add
jae
add
or
lods
add
add
test
add
sub
add
sub
or
scas
add
and
add
add
pop
add
sub
pop
and
mov
rcl
add
add
add
add
adc
adc
add
and
add
add
push
add
add
or
add
sbb
cmp
(bad)
inc
pop
or
push
jae
add
or
or
add
add
sub
add
sub
and
add
add
or
add
sub
add
and
mov
ror
add
sub
add
or
adc
add
sub
sub
add
sub
add
sbb
dec
add
add
add
add
adc
adc
add
and
popf
add
add
or
add
sub
add
adc
add
add
add
jle
add
add
movd
add
add
adc
adc
inc
adc
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
dec
add
add
add
add
add
add
add
cdq
add
add
add
add
add
adc
add
adc
pop
sbb
add
pop
adc
sub
push
add
jle
add
add
or
add
and
sbb
pop
popa
or
mov
add
add
pop
adc
cmp
(bad)
(bad)
jle
add
add
add
add
pop
call
sbb
add
pop
adc
cmp
(bad)
call
sub
or
add
sub
je
add
sbb
add
add
add
add
push
adc
or
or
adc
cmp
(bad)
push
add
or
add
or
add
adc
adc
add
sbb
or
pop
xchg
adc
adc
cmp
(bad)
(bad)
call
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
arpl
pop
adc
and
and
repz
pop
adc
cmp
(bad)
(bad)
call
push
pop
and
adc
adc
xchg
and
add
pop
adc
cmp
adc
scas
add
add
add
jmp
bound
or
add
adc
xchg
adc
adc
and
add
add
add
push
cmp
call
or
add
sbb
adc
push
adc
cmp
(bad)
call
add
sbb
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
jne
add
sbb
or
or
pop
adc
or
popa
shr
add
or
pop
movlps
cmp
(bad)
(bad)
call
or
pop
adc
push
adc
cmp
(bad)
(bad)
call
or
pop
xor
adc
pop
adc
add
push
cmp
std
(bad)
call
adc
aaa
xchg
and
pop
add
pop
sub
adc
sbb
add
outs
sldt
or
add
add
add
pop
or
add
add
add
add
pop
adc
cmp
je
add
add
add
ror
add
add
add
add
sub
sub
add
push
sub
scas
sub
add
push
sbb
leave
add
add
add
add
adc
adc
add
and
test
add
add
add
sub
rol
add
add
sub
and
mov
rcl
add
add
add
add
adc
adc
add
sub
pop
and
add
add
fadd
add
sub
add
sub
add
mov
ror
add
add
add
add
adc
adc
add
sub
add
push
and
add
add
inc
add
add
add
add
sub
sub
add
and
mov
rcl
add
add
add
add
adc
adc
add
sub
rcl
add
add
sub
sub
add
sbb
test
add
and
add
add
sub
adc
add
test
add
adc
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
mov
je
add
sbb
call
add
test
std
add
add
or
add
sbb
add
xchg
or
pop
or
add
add
add
add
js
(bad)
dec
pop
jne
add
sbb
adc
gs
(bad)
call
sub
sub
add
push
sub
add
sub
add
jle
add
add
and
add
add
add
add
adc
adc
add
sub
add
push
and
mov
add
sub
add
push
sub
add
xor
add
add
adc
add
add
jle
add
add
add
or
inc
or
add
ins
add
add
add
cmp
add
xchg
add
add
add
add
add
add
add
add
add
or
push
je
add
add
and
add
or
add
sub
add
push
and
mov
add
add
or
int
add
xchg
and
xor
add
sub
add
sbb
outs
add
add
add
add
adc
adc
add
and
add
and
add
sub
add
sub
or
ins
(bad)
(bad)
inc
jne
add
add
outs
pop
add
or
xor
add
test
add
xchg
and
add
pop
or
dec
(bad)
(bad)
call
test
add
add
or
sbb
cmp
(bad)
jmp
adc
add
add
add
adc
add
add
jle
add
add
add
or
inc
or
add
sub
add
lahf
add
add
add
out
add
add
add
or
add
add
add
add
add
rol
add
add
add
or
add
add
add
add
add
adc
add
or
add
add
je
add
add
add
add
or
stos
add
inc
add
and
add
add
add
and
add
inc
and
add
jae
add
or
inc
add
add
ins
add
add
push
add
sub
or
je
(bad)
inc
pop
and
retf
add
pop
add
sub
pop
or
or
add
or
xlat
add
add
jmp
or
add
or
mov
and
mov
add
cmp
(bad)
(bad)
inc
push
and
mov
add
sub
pop
and
add
add
scas
add
add
push
add
sub
add
aaa
xchg
and
add
pop
or
add
(bad)
inc
sbb
sbb
or
add
sub
add
or
adc
add
sub
add
or
and
add
add
add
add
adc
add
sbb
sar
(bad)
inc
push
sub
push
sub
add
or
push
sub
add
sub
sub
adc
dec
add
and
mov
add
sub
add
sub
add
mov
rol
add
add
adc
adc
add
sub
inc
add
add
pop
add
add
add
add
sub
xor
add
add
adc
adc
add
add
add
add
add
jbe
add
jbe
add
add
add
jae
add
or
push
jne
add
add
and
add
and
add
add
sldt
sub
je
add
add
and
mov
rol
add
add
add
add
adc
adc
add
add
add
or
add
jnp
add
add
jge
add
add
mov
add
add
xchg
add
add
les
add
sub
add
sub
add
or
adc
outs
(bad)
(bad)
inc
je
add
add
add
or
add
add
mov
or
add
mov
jle
add
add
inc
xchg
pop
pop
and
sub
add
jle
add
add
sub
add
sub
add
add
add
sub
add
add
add
sub
xor
add
add
add
add
adc
add
add
add
add
add
add
or
add
mov
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
adc
or
add
xchg
and
jmp
add
sub
or
popa
pop
push
add
add
push
add
add
add
cmp
sub
or
or
inc
sub
add
or
pop
or
inc
pop
pop
or
and
jle
add
add
cmp
add
jle
add
add
cmp
add
xchg
jle
add
add
xor
add
pop
popf
pop
sub
push
or
call
add
mov
and
add
pop
sub
pop
or
inc
je
add
add
adc
rol
add
xchg
and
or
inc
adc
push
add
add
add
add
adc
add
add
add
add
add
add
inc
or
add
cmp
add
sub
add
sub
add
push
add
add
add
pop
add
add
add
add
add
jp
add
add
add
push
or
or
popa
pop
pop
pop
push
popa
inc
add
add
add
add
pop
or
pop
inc
xchg
and
adc
add
lock
or
add
add
add
sbb
add
push
pop
jle
add
add
dec
jle
add
add
xchg
add
add
and
pop
or
or
inc
sbb
pop
push
or
call
add
add
pop
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
das
add
push
sub
popa
(bad)
(bad)
call
xor
add
add
add
add
adc
add
add
add
add
or
add
aas
add
add
add
jb
add
add
add
adc
add
jb
add
dec
add
add
add
add
add
push
or
add
add
pop
adc
rol
push
popa
inc
add
add
add
adc
stos
adc
add
pop
sub
sbb
add
xchg
add
sub
pop
pop
or
mov
cmp
add
or
arpl
add
pop
sbb
pop
xor
sbb
add
data16
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
xor
add
sub
ja
(bad)
inc
add
xor
add
add
adc
add
add
add
or
add
add
or
add
jno
add
add
add
enter
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xor
add
adc
lods
add
add
pop
or
adc
fwait
add
add
pop
or
popa
pop
and
push
popa
inc
add
add
adc
add
adc
in
add
add
pop
or
call
sub
ror
add
add
or
add
add
add
cmp
(bad)
inc
mov
add
sbb
mov
push
add
or
adc
add
add
xchg
and
add
pop
or
inc
pop
pop
or
sbb
adc
add
jecxz
add
xchg
and
add
pop
or
call
add
add
add
jmp
(bad)
inc
jne
add
add
pop
or
inc
add
push
add
add
add
sub
xor
add
add
add
add
sub
add
push
sub
push
add
add
test
add
cmps
add
add
add
add
sbb
push
sub
add
sub
adc
add
sbb
ins
sub
push
adc
add
sub
add
or
adc
add
jle
add
add
pop
add
or
add
or
and
add
je
add
add
sub
add
add
add
sub
xor
add
add
add
add
add
add
or
add
add
or
add
add
add
push
add
add
add
jbe
add
add
add
inc
add
add
add
add
add
arpl
add
push
or
or
popa
pop
ds
push
popa
inc
add
add
add
add
sbb
pop
or
add
jle
add
add
repz
add
add
add
repz
add
pop
popf
pop
sub
adc
sub
and
or
inc
mov
add
sbb
sub
add
or
pop
pop
or
pop
pop
or
(bad)
inc
sbb
pop
sbb
cmp
(bad)
call
add
add
add
jmp
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sub
dec
(bad)
(bad)
inc
adc
add
add
add
adc
add
add
jle
add
add
add
or
inc
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
or
or
int3
add
pop
push
popa
inc
add
add
add
add
sbb
mov
pop
ins
xchg
and
cmp
add
icebp
sbb
cmps
add
sub
add
or
pop
pop
or
sbb
or
add
jmp
add
jle
add
add
jmp
add
xchg
add
pop
sub
sub
adc
sub
add
xchg
and
inc
add
pop
or
pop
(bad)
(bad)
call
add
jl
add
xchg
and
sub
adc
popf
add
add
add
add
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sub
inc
(bad)
(bad)
inc
add
xor
add
add
add
add
adc
add
add
jle
add
add
add
or
inc
or
add
imul
add
add
add
add
add
add
add
add
js
add
and
xchg
add
and
add
add
add
add
add
lea
push
jne
add
sbb
and
or
stos
add
add
add
sub
sbb
add
add
push
and
or
mov
add
xchg
and
out
add
cmp
(bad)
inc
je
add
sbb
and
push
je
add
sbb
stos
cmp
add
(bad)
(bad)
inc
je
add
sbb
and
add
popf
push
je
add
sbb
and
adc
or
add
pop
or
and
(bad)
inc
je
add
sbb
and
adc
add
add
add
push
je
add
sbb
sub
cmp
add
sub
xor
add
add
adc
adc
add
sub
add
or
and
mov
ror
add
sub
add
or
adc
add
pop
lea
add
add
push
jne
add
sbb
rol
add
sbb
add
add
mov
add
sub
add
sub
add
push
add
add
add
sub
add
add
add
sub
sldt
push
je
add
add
sub
add
push
add
add
add
sub
xor
add
add
add
add
adc
add
add
add
add
or
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
push
or
add
add
pop
adc
rol
push
popa
inc
add
add
add
adc
stos
sbb
add
mov
add
add
and
pop
pop
or
mov
add
or
cld
add
add
xchg
add
add
sbb
pop
xor
sbb
add
jae
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
sub
test
(bad)
inc
add
adc
add
fld
add
adc
add
jle
add
add
push
sub
adc
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
rol
add
es
push
or
adc
popa
pop
push
pop
push
popa
inc
add
add
push
add
add
or
add
stc
adc
sbb
add
add
mov
add
sbb
add
or
sbb
add
inc
pop
pop
or
push
add
add
mov
add
or
add
sbb
pop
xor
add
add
pop
adc
call
push
and
add
add
pop
sub
pop
jne
add
add
push
adc
inc
add
adc
add
or
add
adc
add
jle
add
add
add
add
push
sub
add
or
add
xchg
add
add
add
or
add
add
add
movs
add
add
add
cmp
add
adc
add
lods
add
add
add
add
inc
add
push
sbb
add
mov
add
mov
push
add
sbb
popa
inc
add
add
add
adc
mov
add
add
add
in
adc
sbb
add
xchg
(bad)
inc
mov
mov
add
sbb
or
add
sub
add
or
adc
and
and
add
pop
adc
pop
(bad)
(bad)
inc
pop
pop
or
add
pop
or
add
pop
or
push
and
add
add
add
xchg
pop
adc
xor
(bad)
dec
sbb
or
adc
daa
(bad)
(bad)
call
sub
pop
je
add
add
adc
add
add
add
or
(bad)
call
add
add
add
sub
xor
add
add
add
add
adc
add
add
add
add
or
add
imul
add
sub
add
add
add
add
add
add
add
add
add
xor
add
push
or
adc
into
add
popa
pop
sub
popa
inc
add
add
adc
add
adc
add
add
add
stos
push
sub
sbb
add
mov
add
add
sub
add
push
pop
pop
or
jle
pop
or
aas
pop
sbb
pop
xor
push
adc
jl
(bad)
call
add
add
add
jmp
adc
inc
add
add
add
add
add
inc
add
push
sub
jae
(bad)
inc
add
adc
add
add
add
or
add
jle
add
add
add
add
add
add
or
add
push
add
adc
add
cdq
add
add
add
cdq
add
add
add
jb
add
jge
add
add
add
pop
add
add
or
add
retf
add
add
add
sub
inc
pop
push
popa
inc
add
add
adc
add
adc
lea
add
xchg
and
or
pop
sub
pop
sub
adc
mov
adc
mov
pop
or
inc
mov
add
sbb
mov
adc
add
push
pop
pop
or
pop
pop
or
(bad)
inc
sbb
pop
sbb
call
add
add
pop
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
inc
add
push
sub
dec
(bad)
(bad)
inc
add
xor
add
add
add
add
jle
add
add
add
add
push
sbb
add
add
or
add
jno
add
adc
add
inc
add
add
add
add
add
add
add
add
data16
add
add
scas
add
add
or
add
add
pop
adc
mov
push
pop
push
popa
inc
add
add
add
add
add
adc
mov
add
stos
fadd
add
in
push
adc
mov
(bad)
inc
mov
add
sbb
sub
add
adc
and
add
xchg
and
adc
imul
inc
mov
add
sbb
add
or
pop
pop
or
clc
or
add
and
and
add
add
sbb
pop
xor
add
add
add
add
das
(bad)
(bad)
call
add
cmp
add
pop
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
sub
cmp
(bad)
inc
add
xor
sbb
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
dec
add
push
es
adc
adc
and
add
add
pop
adc
popa
pop
push
pop
push
popa
inc
add
add
adc
pop
and
add
xchg
and
adc
call
pop
and
add
add
add
jmp
and
add
xchg
and
inc
add
pop
adc
inc
mov
mov
add
sbb
sub
add
or
(bad)
(bad)
inc
pop
pop
or
inc
add
or
add
aaa
sbb
pop
or
xor
sbb
add
call
push
and
add
add
pop
sub
sbb
add
inc
jne
add
add
sbb
add
inc
add
sbb
adc
add
sub
add
push
add
add
add
add
sub
add
sbb
xor
pop
add
add
add
add
adc
adc
add
and
add
add
inc
add
sub
add
sub
add
add
es
add
add
es
jle
add
add
clc
add
add
add
add
add
add
add
sub
xor
fadd
add
push
add
adc
add
add
add
add
push
sbb
add
add
or
add
adc
add
aaa
add
add
add
add
add
ins
add
add
add
inc
add
add
add
add
add
add
add
or
add
add
adc
rol
pop
es
push
popa
inc
add
add
add
adc
stos
adc
and
add
add
pop
sub
sbb
add
xchg
add
sub
add
push
pop
pop
or
adc
sbb
pop
xor
or
pop
pop
xor
push
adc
outs
(bad)
(bad)
call
sub
push
adc
fs
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
dec
add
push
sub
jns
(bad)
call
xor
add
add
adc
add
add
add
inc
or
add
add
add
or
add
arpl
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
jb
add
adc
add
ror
add
es
or
pop
or
popa
push
pop
push
popa
inc
add
add
add
add
sbb
cli
adc
sbb
mov
add
sbb
sub
add
or
(bad)
inc
pop
pop
or
pop
sub
adc
cmp
and
dec
add
pop
or
call
or
neg
or
inc
jne
add
sbb
pop
or
inc
add
push
add
add
add
sub
jae
add
push
jge
add
add
sub
add
or
sub
add
push
sub
add
adc
add
outs
add
add
add
adc
add
add
push
or
inc
pop
add
add
add
add
add
add
add
and
add
cmp
add
and
add
xor
add
add
or
sub
add
xchg
and
add
pop
or
retf
or
rol
add
xchg
and
xchg
add
pop
sub
add
add
add
add
or
mov
sub
add
add
add
sub
add
add
or
add
jb
and
add
add
add
add
adc
adc
add
or
add
add
add
add
add
add
sub
and
mov
rol
add
add
add
add
adc
adc
add
adc
add
add
add
sub
adc
add
das
add
or
sub
add
sub
add
xor
add
add
sbb
add
jle
add
add
sbb
pop
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
xchg
and
add
pop
or
into
pop
sub
add
add
add
add
add
or
mov
jl
add
add
add
add
sub
add
xor
add
sub
add
adc
push
add
add
add
add
adc
add
add
jle
add
add
add
or
inc
or
add
imul
add
jp
add
add
add
sahf
add
add
add
add
add
mov
add
push
add
add
or
sub
add
add
add
add
jle
add
add
add
add
xchg
add
add
pop
popf
popa
pop
outs
pop
push
popa
inc
add
add
adc
add
or
xchg
add
add
add
sub
add
add
pop
sub
adc
mov
and
or
imul
add
add
add
xor
add
push
pop
pop
or
pop
sub
adc
sgdtd
add
pop
or
aaa
(bad)
(bad)
call
sub
or
and
add
xchg
and
cwde
add
pop
or
and
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sub
sub
(bad)
inc
add
adc
add
add
add
sbb
add
jle
add
add
pop
or
inc
or
add
jbe
add
add
add
add
add
add
sahf
add
add
add
add
add
inc
add
add
add
add
add
add
or
or
mov
add
add
adc
add
adc
add
or
push
and
xlat
add
pop
or
mov
sub
or
dec
add
add
pop
or
mov
(bad)
inc
mov
mov
add
sbb
add
or
pop
ss
or
ss
pop
or
imul
add
mov
add
sbb
add
or
pop
pop
or
pop
sub
sbb
inc
(bad)
(bad)
dec
pop
cmp
pop
sub
pop
or
xor
(bad)
jmp
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
sub
ds
(bad)
call
xor
add
add
adc
inc
or
add
add
add
add
add
dec
add
add
add
add
add
popa
add
add
add
add
add
dec
add
add
add
add
add
add
add
rcr
add
es
or
pop
or
popa
pop
and
popa
inc
add
add
add
add
sbb
cli
adc
sbb
add
mov
add
sbb
and
add
or
or
inc
pop
pop
or
pop
sub
sbb
call
or
neg
or
inc
jne
add
add
pop
or
call
xor
add
jle
add
add
adc
jle
add
add
adc
add
add
adc
outs
xor
add
es
sub
push
sub
or
or
adc
and
or
add
pop
sub
sub
add
sub
pop
inc
pop
sub
pop
push
bound
add
add
and
pop
or
xor
pop
pop
pop
pop
sbb
adc
and
pop
adc
jle
add
add
and
push
bound
adc
and
pop
or
add
or
add
add
pop
outs
aaa
add
or
cmp
add
adc
add
or
add
adc
imul
cmp
add
adc
add
adc
add
add
adc
or
add
fiadd
adc
es
push
fiadd
adc
sub
add
add
add
add
fld
add
add
add
add
push
push
add
add
xor
mov
add
adc
add
jo
adc
add
add
adc
add
adc
pop
add
add
sbb
add
adc
add
or
cmp
add
sub
pop
adc
add
cmp
add
adc
add
adc
add
cmp
sbb
add
add
or
push
jb
add
jo
aas
add
or
pop
outs
inc
add
or
inc
add
or
lea
adc
jle
add
add
or
add
or
pop
outs
inc
add
or
or
sub
pop
outs
sub
sub
adc
add
add
sub
add
add
add
add
add
sub
add
inc
add
or
push
add
inc
add
or
push
add
inc
add
or
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
add
add
adc
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
add
adc
dec
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
es
add
inc
dec
es
add
add
add
add
add
add
add
mov
add
add
sbb
les
add
les
add
call
sub
fnstenv
inc
sahf
in
loope
rcl
and
push
in
test
mov
push
in
push
xchg
and
cld
mov
loopne
fild
es
sar
idiv
test
shl
jmp
sub
rcl
test
dec
inc
xchg
leave
ins
and
jo
(bad)
in
dec
mov
int3
scas
stos
mul
aaa
add
xchg
pop
or
cdq
push
dec
cmc
ret
pop
dec
sub
out
pop
push
test
jns
pop
sti
jmp
mov
loopne
aaa
or
loop
mov
jbe
(bad)
fstp
mov
call
int
sar
mov
mov
enter
in
shl
inc
clc
fisubr
xchg
pushf
cmp
fwait
aad
pushf
inc
jo
fucomip
sbb
add
pop
add
aas
leave
call
adc
rcr
ret
sbb
pusha
push
jmp
mov
dec
sbb
sub
aam
dec
ret
sub
fidivr
retf
das
inc
mov
mov
add
mov
test
aad
inc
or
sbb
enter
scas
push
(bad)
test
sub
bnd
cli
test
popf
and
sbb
ja
cmps
outs
shl
and
test
jo
retf
sub
push
test
jp
fnstenv
call
cmp
dec
sub
jae
or
mul
dec
(bad)
cmp
jmp
scas
js
out
sbb
ds
std
cmp
cli
mov
xchg
xor
movs
cmp
sbb
jno
fwait
rol
nop
push
mov
and
or
pop
out
test
add
fcom
test
outs
arpl
fwait
imul
mov
pop
mov
test
(bad)
xlat
mov
adc
jge
inc
scas
push
xchg
inc
mov
cli
push
cmp
xchg
std
sbb
and
jle
rcr
cmc
lods
dec
shl
push
or
lods
push
jmp
popf
pop
sbb
aad
clc
or
cmp
jno
mov
dec
add
pop
mov
pop
daa
or
jp
jle
push
xchg
push
lock
pop
sub
dec
sub
mov
xor
add
scas
loopne
les
sbb
add
gs
fld
bound
test
lds
ja
lds
mov
and
out
lahf
mov
inc
cmp
add
fistp
and
add
cli
lea
std
push
mov
ja
pop
aas
or
or
test
cld
jbe
enter
jp
mov
lods
jnp
jecxz
push
imul
xor
mov
sub
jmp
sahf
jae
xchg
jmp
enter
sti
add
or
test
lods
pop
fwait
mov
movs
popf
mov
xlat
inc
(bad)
aam
pushf
cwde
dec
in
xchg
dec
pop
jo
cmps
retf
sub
mov
xchg
pop
adc
mov
(bad)
out
and
rcl
in
inc
or
sbb
into
or
inc
inc
and
out
adc
adc
(bad)
mov
sbb
aaa
enter
jne
jecxz
push
push
cmp
cmp
cs
xchg
mov
inc
aad
jno
sub
fcmovnbe
cmp
xchg
sub
test
pushf
nop
sub
pop
cmp
addr16
xchg
xlat
inc
push
mov
jno
xchg
in
mov
outs
sub
es
daa
nop
clc
loopne
(bad)
sub
jae
(bad)
mov
dec
call
mov
mov
xor
sbb
ds
mov
int3
push
push
and
fsub
cmp
movs
add
and
dec
ins
mov
mov
pushf
or
or
gs
xlat
push
sbb
jg
xor
pop
pop
dec
pop
mov
cmp
or
into
sub
int
enter
add
std
xchg
fld
mov
add
mov
pop
jb
mov
xchg
ficomp
and
fimul
repz
bound
je
cmp
enter
push
out
mov
cmp
icebp
cmps
push
loope
pop
push
test
pusha
xchg
mov
jnp
lods
adc
jne
and
sar
mov
adc
xor
cmp
ins
and
inc
add
mov
(bad)
shl
xchg
inc
fstp
enter
daa
fcmovnbe
retf
dec
inc
add
scas
and
xchg
mov
push
sbb
sbb
cmp
xchg
jb
pop
add
movs
lds
pop
mov
test
dec
xchg
cmp
sbb
xchg
jl
jg
pushf
jnp
jbe
pop
loop
paddq
push
bound
mov
sahf
mov
pop
push
jecxz
pop
push
data16
inc
aas
push
mov
int3
cmp
aad
fucom
inc
ss
(bad)
mov
sub
out
pop
sbb
dec
lds
push
jmp
mov
mov
fcomp
(bad)
jno
outs
mov
cmp
invd
pop
jge
dec
loopne
jno
sub
out
mov
(bad)
retf
shl
xlat
les
bound
mov
pop
es
mov
pop
lods
inc
jmp
xor
add
fild
adc
(bad)
repnz
jnp
mul
sub
jo
and
pusha
mov
mov
cld
hlt
iret
fs
cmp
fld
out
or
inc
fisub
fwait
pop
test
push
ds
bnd
bound
mov
or
sub
bound
mov
jmp
xchg
int3
sub
fimul
push
cmps
ret
nop
test
fisub
xchg
retf
les
stos
xor
sahf
aad
inc
xchg
xchg
retf
inc
jbe
dec
hlt
inc
pop
aaa
leave
lea
iret
int
stos
sub
(bad)
cwde
outs
sbb
dec
mov
iret
aad
cmp
sbb
jmp
jle
xchg
jmp
jl
xchg
xor
out
xor
sub
mov
jl
push
cli
mov
push
jbe
mov
repnz
loopne
pop
mov
jno
fdiv
dec
mov
xchg
loope
pop
jo
movs
(bad)
test
ss
out
retf
call
int
pop
and
pop
mov
jns
retf
jg
loopne
jne
jno
or
dec
sbb
lea
sbb
push
(bad)
das
dec
aaa
int
sbb
ins
(bad)
scas
push
hlt
sub
xchg
in
mov
outs
push
sbb
adc
popa
push
das
ss
gs
inc
in
pop
out
in
retf
jbe
sbb
repz
aam
adc
(bad)
xchg
pop
adc
sbb
clc
iret
movs
sub
ret
jg
ret
in
out
(bad)
pushf
cmps
inc
push
cs
popf
push
dec
mov
xor
test
es
sub
loope
outs
cmp
ins
mov
(bad)
sub
loop
stc
mov
cdq
mov
jae
dec
mov
int
mov
dec
xchg
push
sbb
ror
xchg
mov
js
into
inc
in
cli
push
xchg
or
jmp
mov
test
repz
mov
scas
cmps
sub
ret
sub
in
mov
mov
cmp
cwde
pop
stos
ins
outs
test
xlat
outs
scas
mov
or
pop
pushf
push
add
xchg
mov
mov
neg
push
mov
push
outs
push
inc
jecxz
pop
in
mov
arpl
outs
adc
sub
mov
(bad)
and
jle
sub
out
or
fdiv
icebp
pop
ffree
(bad)
push
fmul
inc
(bad)
bound
xchg
push
sbb
mov
fucomi
mov
lds
fwait
aas
pop
out
jp
and
push
push
dec
xlat
adc
xor
xchg
mov
mov
dec
dec
(bad)
cmc
(bad)
fucom
ja
jmp
push
divps
sub
out
fld
xor
mov
pop
add
ds
les
mov
cmp
inc
cld
fstp
addr16
push
mov
jo
in
out
vmovlps
imul
inc
arpl
movs
inc
rol
test
add
mov
sbb
out
pop
adc
dec
arpl
aaa
pop
add
inc
lea
test
mov
std
xor
mov
pop
inc
hlt
not
mov
(bad)
(bad)
out
jno
loop
push
sub
je
dec
push
push
jne
inc
shl
xor
adc
in
rcr
fadd
lods
inc
call
out
sub
(bad)
pop
daa
mov
mov
pop
push
loope
jge
(bad)
cmp
cli
mov
mov
or
add
pop
sub
nop
fnstenv
aaa
popa
shr
movs
mov
adc
ret
jp
stc
call
push
and
pop
add
lds
pop
dec
aas
jmp
and
fcomp
dec
stc
inc
mov
call
pop
rcl
mov
dec
repz
sub
das
xchg
push
int
and
pop
mov
ss
iret
mov
adc
aad
jmp
pop
cli
cmp
mov
cmp
xchg
mov
pusha
cmp
pop
outs
cmp
std
enter
inc
call
jb
add
jns
mov
push
xchg
sub
repz
or
inc
add
dec
cdq
movs
lods
clc
js
hlt
mov
mov
cmc
(bad)
(bad)
int
aas
cdq
jo
mov
ficomp
(bad)
xor
mov
inc
inc
adc
sub
jmp
outs
js
call
or
fimul
mov
dec
movs
or
cli
xchg
psubd
xchg
test
or
sub
xor
and
fwait
outs
add
jns
mov
bound
call
or
mov
jae
xor
ss
into
jmp
and
dec
sbb
add
and
or
mov
loopne
in
test
mov
jge
xlat
jmp
jg
hlt
dec
inc
jg
scas
mov
push
adc
and
mov
out
es
out
xor
or
xchg
(bad)
mov
adc
push
mov
dec
imul
sub
xor
push
cmp
shr
mov
add
mov
das
outs
mov
rcl
pusha
test
aam
and
mov
inc
push
ja
or
lods
mov
pop
jmp
xchg
inc
xchg
xchg
pushf
add
int
mov
xchg
xor
lods
retf
sub
and
adc
xchg
sub
lods
mov
(bad)
xor
push
sub
lea
xchg
jle
data16
dec
mov
test
xor
pop
pop
dec
mov
out
call
push
pop
dec
lds
cmp
stos
and
xor
rcr
push
xchg
out
jae
retf
mov
jns
ins
ins
icebp
sbb
pop
push
js
in
xor
cld
popa
mov
dec
add
jnp
aam
adc
aam
iret
les
fadd
or
inc
jl
dec
popf
jns
mov
xchg
cmp
ins
pop
repz
das
adc
in
mov
das
mov
retf
xor
rcl
test
daa
mov
test
ins
fisubr
sar
aam
jmp
movs
xor
xor
repz
xor
frstor
sbb
or
sbb
cmp
xchg
jbe
popa
mov
jle
inc
inc
sub
and
lea
mov
lea
and
mov
sub
mov
movs
mov
and
out
and
cs
retf
dec
imul
fst
iret
inc
mov
stos
cmp
dec
mov
ret
push
stos
repz
movs
dec
push
clc
pop
pop
and
out
push
(bad)
pop
sbb
out
(bad)
jle
jmp
pop
arpl
fcom
test
outs
jo
mov
mov
je
rcr
add
ds
jb
out
mov
mov
into
std
xor
pop
hlt
add
js
cmp
leave
xor
and
jno
cld
cmp
xor
mov
inc
push
stos
lods
adc
adc
(bad)
xchg
and
call
stos
adc
push
fisttp
adc
sahf
aad
inc
popf
jg
sbb
imul
(bad)
pop
outs
add
jmp
mov
cmp
arpl
dec
push
ret
inc
push
and
stos
lock
(bad)
pop
loop
sahf
cmp
mov
cmp
rcr
jmp
lock
jmp
jbe
inc
out
dec
cli
adc
or
nop
dec
scas
int
pop
or
dec
push
aas
div
cmc
dec
pop
push
mov
outs
xchg
inc
outs
pushf
not
adc
push
imul
outs
xor
out
xor
push
cmc
pop
add
xor
call
call
mov
repnz
adc
gs
mov
lds
call
out
movntq
movs
sub
add
out
nop
push
or
mov
or
mov
xor
dec
test
push
xchg
popa
test
sbb
ret
mov
scas
cmc
sbb
jne
mov
fimul
arpl
cdq
mov
push
push
fild
jmp
inc
data16
rcl
jne
loopne
push
sub
adc
xor
es
jae
fsub
or
scas
push
add
inc
call
xor
add
lock
bnd
aam
in
xchg
push
mov
into
or
(bad)
out
cvtdq2ps
les
in
jno
jb
ins
rcl
sbb
ror
cs
push
es
outs
mov
jo
mov
sar
je
stos
into
push
jecxz
stos
push
and
(bad)
shl
dec
es
xor
sbb
and
(bad)
call
test
push
and
xor
scas
jp
cdq
sub
mov
sub
lods
push
sahf
jle
mov
cmp
mov
push
mov
ja
jno
or
cmp
(bad)
sub
into
and
(bad)
mov
adc
cs
stos
pop
shl
jl
push
in
sub
aaa
and
mov
hlt
test
inc
ds
test
test
(bad)
(bad)
rcr
xor
dec
jo
sbb
sub
(bad)
int3
in
cmc
adc
mov
add
jbe
add
inc
fisttp
inc
vorps
lods
mov
sub
cmp
leave
test
and
iret
jmp
sti
cld
int3
test
xor
cld
sahf
xchg
and
pop
rol
ds
sar
mov
mov
mov
fistp
pop
and
xchg
cld
(bad)
cwde
xor
mov
sbb
in
ins
mov
sub
scas
cmc
xlat
je
or
pop
adc
(bad)
daa
dec
push
mov
fwait
rcl
call
xchg
movhps
out
push
dec
jb
add
xor
jecxz
jl
add
dec
add
xor
add
pop
jg
test
add
cmp
inc
xchg
aaa
daa
dec
addr16
scas
mov
repz
dec
sub
popa
icebp
int3
lahf
loope
into
or
pushf
clc
repnz
xchg
inc
lea
in
sub
mov
stc
mov
clc
clc
push
sub
or
mov
mov
xchg
pop
fild
sub
ret
ins
repnz
mov
dec
inc
xchg
aam
bound
stos
popa
cli
imul
imul
adc
call
fdiv
mov
clc
push
mov
aas
push
nop
test
jbe
movs
ds
sahf
mov
pop
popf
enter
das
cmp
mov
scas
sub
pop
repnz
loopne
or
popa
or
or
add
pop
dec
jno
bnd
repnz
push
test
pop
(bad)
mov
pop
jbe
jmp
mov
dec
ret
(bad)
mov
(bad)
ret
push
popf
je
cmp
and
mov
sbb
(bad)
je
sbb
adc
out
xchg
je
push
stos
mov
lea
add
mov
lds
jno
hlt
xor
scas
(bad)
in
or
mov
nop
call
jae
or
sar
int3
hlt
add
dec
(bad)
mov
dec
shl
test
mov
sti
mov
inc
dec
call
inc
ret
sbb
es
lds
or
mov
stos
and
mov
fs
mov
mov
dec
cs
add
in
outs
sub
pop
mov
mov
cs
and
push
jmp
bound
xlat
not
add
cmp
jb
xchg
dec
push
(bad)
ror
mov
shl
push
lods
lock
xor
in
cld
or
add
mov
push
pop
lock
xchg
dec
daa
jge
adc
jge
jg
cli
lods
call
ins
in
inc
lahf
adc
imul
pop
call
stc
xchg
into
aad
push
sti
push
and
dec
test
loope
mov
pop
dec
pop
pop
dec
call
mov
and
lods
ins
lods
add
jl
push
cwde
dec
ret
smsw
xor
fcmovnbe
jp
and
int3
aad
push
leave
scas
cli
ror
loop
dec
ret
test
or
jg
out
dec
push
add
sbb
test
scas
fmul
sub
and
pushf
jmp
xchg
loopne
into
mov
mov
mov
cmps
pop
fninit
xchg
cmp
outs
xor
pop
jno
retf
mov
ins
pop
mov
jns
xchg
(bad)
iret
loope
inc
xor
sub
push
mov
in
retf
pop
jnp
dec
xchg
cmp
fwait
or
jmp
pop
mov
pop
cmp
jbe
cmp
jmp
xor
and
cmps
arpl
fcomp
nop
les
int
cmp
inc
jno
rol
dec
pop
movs
cwde
add
rol
fwait
in
in
aaa
sbb
icebp
scas
dec
movs
in
mov
sbb
sbb
push
or
lock
pop
js
xor
imul
mov
mov
add
aad
aaa
mov
ror
and
mov
fisttp
(bad)
jecxz
movs
sbb
fistp
and
mov
cld
fdivr
gs
or
mov
inc
pop
imul
jecxz
pop
xchg
hlt
(bad)
xchg
xchg
push
in
cld
fdivr
add
mov
jb
cli
push
ins
push
xchg
lahf
or
adc
sbb
iret
enter
xchg
fwait
push
es
imul
(bad)
sar
mov
inc
call
mov
inc
fistp
pop
pop
sar
ret
(bad)
fist
inc
xchg
adc
enter
inc
xlat
cli
mov
mov
dec
mov
jp
scas
pop
gs
retf
mov
and
mov
jecxz
stos
push
ds
cwde
test
xchg
fisubr
sub
cmp
(bad)
in
and
xor
cmp
mov
inc
in
jns
jmp
(bad)
(bad)
rol
addr16
push
jecxz
inc
sar
adc
mov
fidivr
ficom
out
mov
(bad)
lds
mov
scas
jns
ins
imul
mov
and
(bad)
cli
mov
sbb
xor
jge
out
add
ss
xor
pcmpeqw
push
ret
in
das
leave
mov
imul
mov
push
push
out
test
adc
aad
fwait
push
xor
pop
mov
daa
mov
push
test
inc
add
je
mov
jmp
call
xchg
pop
add
pop
je
ins
mov
jp
cld
jbe
outs
sbb
sbb
push
ins
out
add
cwde
fst
or
scas
cli
mov
iret
inc
aaa
test
inc
xchg
leavew
or
stos
mov
stos
xchg
dec
dec
mov
adc
lods
push
cmp
jnp
push
add
dec
push
loope
scas
push
shr
je
xchg
dec
hlt
out
out
pop
mov
sub
mov
loope
shl
je
xchg
in
pop
cmp
add
inc
xor
inc
loope
std
inc
(bad)
daa
adc
aam
mul
imul
cmp
inc
inc
xchg
lea
test
jmp
mov
add
dec
rol
inc
jl
xchg
xor
and
jb
pop
pop
movs
xlat
push
push
xchg
inc
pop
adc
std
mov
mov
jge
rcr
mov
cmp
imul
push
cld
mov
and
test
pushf
mov
stc
push
sub
mov
mov
lods
jno
outs
lods
mov
(bad)
call
call
pop
cmc
jno
fwait
mov
inc
sub
movs
push
mov
jb
and
xchg
add
out
retf
pop
int3
test
rcr
les
fstp
adc
in
imul
adc
cmp
xchg
mov
(bad)
mov
inc
cmp
dec
ja
rcr
mov
pushf
(bad)
push
in
int
xlat
sar
push
inc
push
xchg
loopne
mov
inc
ins
loop
lods
xchg
ret
clc
scas
imul
mov
mov
cwde
push
bswap
movs
loope
cld
ds
(bad)
cmp
(bad)
jne
loope
push
outs
lea
mov
sub
lds
dec
ds
repz
stos
xchg
push
int
xor
mov
clc
arpl
lahf
mov
js
xor
mov
mov
or
xlat
sbb
adc
dec
mov
scas
sub
add
test
fs
inc
add
fcomp
xchg
mov
shl
jo
mov
ins
sti
fidivr
jl
sub
pop
jns
dec
setg
enter
pop
dec
add
(bad)
leave
ja
inc
retf
mov
add
jo
xchg
sbb
adc
and
xor
int3
or
inc
sub
push
and
scas
pushf
fwait
movs
dec
and
mov
jp
rol
(bad)
icebp
fnstsw
xchg
retf
sbb
or
mov
movs
push
adc
pop
mov
inc
or
sub
sub
dec
mov
popf
cs
fmul
or
ror
(bad)
xchg
push
sub
mov
pop
dec
push
jne
popa
stos
xor
push
jno
cs
jg
or
popf
pop
outs
sti
test
push
sbb
call
cmp
int
dec
cwde
sbb
gs
les
sub
(bad)
es
mov
pop
xlat
or
adc
sar
cmp
jne
pop
and
mov
call
stos
dec
dec
mov
inc
iret
pusha
add
dec
push
ins
fild
lock
(bad)
dec
and
mov
jo
xchg
inc
clc
cmps
int
add
and
add
stos
test
jmp
sbb
out
xchg
neg
mov
add
cmc
ror
and
or
jle
jnp
mov
iret
jg
add
fisubr
retf
xchg
adc
sbb
iret
jo
mov
out
and
(bad)
mov
adc
in
mov
sbb
and
lods
dec
fisttp
sahf
push
mov
shr
inc
fucom
pop
xor
icebp
leave
inc
xor
sub
fwait
out
ds
fwait
mov
ds
mov
fstp
xor
and
or
xor
sbb
shr
or
div
movs
jns
or
daa
or
sbb
sub
sub
cmp
shl
retf
aas
mov
in
sar
mov
push
push
in
push
loopne
xor
mov
bound
mov
and
push
dec
int3
fdiv
aad
lahf
xchg
sbb
test
jne
jg
or
out
into
ins
mov
cdq
adc
into
cmc
xchg
hlt
jg
mov
stos
scas
inc
(bad)
mov
fs
jle
sar
mov
mov
cmc
lea
push
pop
mov
xor
int
dec
addr16
push
(bad)
(bad)
fs
neg
push
lock
inc
or
dec
inc
xchg
cmp
sbb
sub
pushf
sar
leave
push
data16
jg
(bad)
neg
push
pop
cmc
call
addr16
pop
bound
mov
jae
ja
outs
sub
mov
leave
movs
cmp
add
adc
dec
push
cli
mov
hlt
out
into
popf
imul
in
in
sub
inc
lahf
imul
cmp
nop
pop
cdq
clc
mov
xchg
fsubrp
xchg
jmp
js
mov
add
ins
ss
bnd
cs
cli
outs
lea
mov
mov
jl
popf
cmc
adc
loope
mov
leave
jns
pop
outs
test
jnp
xor
mov
data16
ds
in
mov
sub
shl
imul
in
cmp
pop
mov
cmps
lods
mov
ficomp
mov
mov
arpl
clc
or
ss
sub
add
jecxz
ins
sbb
out
push
lods
jno
nop
mov
int3
(bad)
clc
es
mov
int3
sbb
and
aad
or
arpl
push
int
xor
push
mov
clc
sbb
push
jmp
idiv
rol
mov
movs
aad
loopne
mov
sub
push
or
popa
mov
(bad)
test
int
adc
cmp
mov
outs
push
sbb
movs
cmp
sbb
ss
jnp
mov
dec
adc
lods
xchg
ss
sub
mov
push
xchg
cli
scas
nop
fst
jo
lds
jne
cs
pop
cmp
pop
in
sub
scas
sti
inc
dec
jbe
adc
mov
dec
mov
js
cmp
repnz
mov
pop
repz
push
inc
and
xchg
inc
push
cmc
das
bound
pop
cmps
cs
cmp
sub
arpl
cmps
jae
jp
or
bound
cmp
int
loopne
js
fcom
jae
lds
call
gs
and
sahf
arpl
mov
je
call
div
std
adc
add
and
fwait
div
jo
sbb
in
retf
lea
and
cmc
pop
fwait
pop
dec
sub
cld
push
mov
push
(bad)
push
in
jge
and
mov
cmp
xor
mul
xor
shl
lahf
clc
dec
hlt
nop
aas
pushf
mov
out
adc
repz
xor
sar
rcl
jbe
cwde
neg
adc
xlat
pop
call
rcr
pop
sub
fist
jl
bound
clc
cwde
cmps
cmps
stos
jp
ins
stc
sub
enter
adc
(bad)
mov
cmp
ja
dec
xchg
fwait
push
fcomp
pushf
jae
push
int3
ror
xor
div
xchg
jbe
nop
ffreep
push
and
cwde
and
mov
popf
jo
jbe
pop
sti
sub
cli
pop
jge
mov
mov
and
ss
jp
out
int3
in
mov
aad
retf
jae
sti
inc
dec
(bad)
push
call
adc
push
pop
nop
mov
addr16
cmp
pop
adc
popf
movs
(bad)
clc
jbe
mov
mov
mov
inc
cmp
cmp
push
sahf
dec
cmps
push
push
ret
inc
retf
and
and
cli
pop
inc
sahf
mov
int3
mov
bound
jns
sub
lds
mov
sbb
adc
push
pop
dec
mov
aam
sbb
dec
mov
adc
jle
aaa
scas
cmp
mov
dec
jb
lahf
xchg
pop
gs
sbb
jb
xchg
sbb
cmc
xchg
pusha
repz
movs
das
test
xchg
dec
mov
in
mov
ficom
jmp
mov
repnz
inc
sbb
push
adc
popfw
stos
mov
jmp
or
mov
mov
aas
inc
shl
or
das
stos
xchg
mov
es
stc
sti
aaa
and
pop
jecxz
paddd
jb
nop
mov
xlat
mov
jg
or
mov
dec
sub
mov
dec
ins
loopne
imul
sahf
jmp
xor
add
jle
inc
mov
les
ss
mov
test
jle
xchg
popa
rcr
stos
in
mov
push
sbb
ret
fs
nop
popa
push
and
xchg
pop
aas
cdq
clc
mov
test
imul
add
inc
cli
mov
xor
out
int3
aas
stos
sbb
sar
mov
cmp
jae
pop
mov
push
add
dec
lea
sbb
(bad)
mov
out
pop
cmp
nop
js
mov
pop
sti
outs
xchg
outs
(bad)
lock
inc
repz
or
mov
lods
mov
xlat
mov
jnp
dec
in
dec
fadd
cmps
mov
out
push
fadd
fmul
test
pop
sub
adc
adc
dec
pop
stos
sti
xchg
in
repz
clc
mov
(bad)
xchg
sbb
cs
inc
sub
lea
sti
xor
aam
sti
pop
mov
mov
ficom
pop
dec
mov
jne
(bad)
mov
retf
and
cmp
popa
int3
xor
xlat
sbb
adc
fwait
push
inc
repz
mov
sub
inc
xor
mov
sahf
lock
push
es
mov
cmp
(bad)
mov
push
xchg
in
(bad)
mov
pop
enter
fist
xor
movs
jb
ds
xchg
pop
das
inc
ret
pop
data16
push
inc
inc
inc
sub
and
nop
sahf
mov
mov
add
dec
xchg
mov
jns
movs
mov
sahf
scas
movs
out
sub
(bad)
(bad)
fwait
ss
retf
test
or
iret
sub
arpl
jp
mov
add
inc
das
test
push
or
xor
jge
jle
pop
jmp
int3
scas
jne
fld
call
movs
or
jae
cmp
adc
ror
xchg
adc
mov
jb
xor
or
test
ja
push
popa
xchg
je
xor
inc
cmps
loope
lahf
into
sub
push
ret
loop
cmp
or
mov
(bad)
in
push
hlt
mov
and
push
ret
cdq
ss
jg
mov
xchg
test
mov
in
or
imul
loope
sub
mov
popf
lods
movs
(bad)
arpl
outs
dec
pop
sub
or
into
push
loope
and
mov
xchg
popf
mov
stos
and
cmc
jns
das
call
xor
push
dec
cmp
into
pop
ja
loop
sbb
shl
mov
cdq
jne
sub
pop
cmp
int
pop
std
es
movd
mov
scas
call
iret
ja
(bad)
pop
out
sub
ret
shr
add
data16
sub
das
aas
sbb
fidiv
adc
push
push
push
or
inc
jno
ror
rcl
ja
mov
xchg
(bad)
fidivr
lods
inc
and
pop
adc
xor
pop
add
push
inc
xchg
cs
hlt
cmps
mov
sti
mov
inc
mov
xlat
jle
shl
les
jbe
mov
imul
call
mov
cmc
neg
test
mov
push
cs
ret
bound
jmp
shl
inc
push
push
and
cld
xchg
sub
cwde
lea
cli
sahf
out
imul
lods
scas
pop
jle
imul
mov
jnp
sub
sbb
lock
push
push
push
je
xor
push
jmp
data16
enter
push
leave
adc
clc
ss
or
dec
xor
dec
rol
sbb
scas
dec
test
mov
push
cmp
fidiv
(bad)
je
or
pushf
jecxz
repnz
add
add
lahf
je
lea
push
cld
sahf
lods
cwde
lahf
sub
(bad)
sahf
xor
and
lock
inc
(bad)
mov
jo
fstp
push
sbb
bound
hlt
scas
mov
dec
pushf
repnz
push
and
or
sub
sbb
cmp
jl
scas
cmps
xchg
add
push
cmp
call
mov
xchg
adc
mov
xchg
loopne
sub
movs
inc
cmp
mov
pop
fnsave
aad
push
ficom
cmp
xor
sub
jnp
ret
mov
and
out
mov
mov
pop
cld
push
adc
and
inc
outs
push
adc
cdq
cli
lods
jb
push
push
push
xchg
int
cs
mov
cmp
push
mov
test
xor
and
sbb
lods
pop
and
sub
sti
ins
loopne
dec
adc
and
sbb
data16
xchg
js
dec
inc
pop
pop
in
cmp
int3
fistp
bound
mov
jb
cmp
jns
arpl
out
in
jmp
adc
xchg
fs
dec
push
loopne
jo
xchg
adc
scas
mov
out
out
xchg
daa
pop
jge
mov
shl
pop
mov
jle
ja
popf
push
sbb
or
(bad)
and
lock
clc
addr16
jge
jmp
add
fld
jl
fnop
lea
mov
aam
xchg
dec
lds
cld
mov
rol
call
int
mov
xchg
inc
mov
stc
and
hlt
stc
adc
mov
in
jae
xchg
or
xchg
fisub
mov
mov
add
scas
cmp
sub
cmp
cs
mov
fcmove
icebp
bound
mov
sub
push
ret
cmp
mov
jo
xchg
sbb
in
add
push
outs
pop
lds
mov
out
cmps
inc
sar
repz
jo
inc
push
sbb
xor
into
xchg
mov
cmp
sub
sbb
loop
jae
adc
push
imul
ret
retf
pop
shl
push
loopne
dec
xor
and
fsub
mov
mov
sub
adc
fs
imul
sbb
lahf
into
rcl
fbstp
sbb
movs
cs
test
test
icebp
add
in
fild
ror
rcr
dec
ins
loope
(bad)
or
lock
jp
xor
fs
popa
aad
cli
test
adc
xor
pop
inc
(bad)
jmp
in
mov
pop
mov
pop
int
fadd
test
pop
cld
dec
jl
out
xor
mov
out
dec
dec
test
and
test
call
add
in
adc
mov
test
test
icebp
inc
fcom
fisub
push
mov
test
mov
ffreep
rcl
sub
icebp
repnz
and
pop
fld
jmp
inc
xchg
lods
sbb
call
inc
imul
jo
inc
cli
inc
adc
out
mov
xor
test
sbb
mov
and
aad
mov
arpl
sar
call
dec
add
xchg
sub
jl
mov
or
mov
inc
cdq
idiv
loop
adc
inc
jle
enter
push
cmp
sbb
and
int3
xchg
push
or
lds
mov
fcomp
sub
push
jmp
leave
sub
jo
sbb
dec
fwait
push
inc
jl
add
cmp
out
cdq
int3
and
mov
mov
repz
xor
out
outs
mov
movs
dec
imul
mov
loope
dec
xchg
jmp
cli
shr
sbb
and
push
ret
push
xchg
xchg
sbb
dec
mov
es
mov
add
retf
mov
loop
scas
ret
xor
mov
pop
into
(bad)
pop
push
push
sub
rol
dec
shl
fst
shl
push
test
mov
bsf
mov
dec
push
jmp
xchg
fs
outs
scas
xor
jecxz
je
int
or
and
xor
(bad)
cmp
lock
stos
dec
push
iret
call
add
dec
adc
inc
fld
test
and
nop
sub
cmp
push
ss
pop
movs
hlt
push
(bad)
pop
ins
mov
int
dec
std
imul
stos
test
cmps
test
js
icebp
test
sahf
add
dec
add
cmp
and
jb
mov
xor
sbb
jo
xlat
dec
sub
xor
sub
mov
ficom
popa
movs
outs
xor
xor
lods
out
imul
dec
jns
icebp
daa
rcr
mov
(bad)
mov
dec
mov
aam
add
push
adc
pusha
xor
mov
inc
jae
inc
fiadd
iret
jmp
mov
icebp
int
mov
jle
sub
pop
inc
repnz
shl
mov
inc
mov
cld
fadd
stos
xchg
jno
fmul
dec
inc
cmps
(bad)
push
lods
xor
push
or
mov
add
addr16
pop
or
and
mov
sbb
ja
stos
sub
or
lds
sub
or
int
stos
push
aas
mov
fbstp
dec
popf
test
push
cmp
adc
aam
xchg
mov
inc
mov
rol
cmp
nop
adc
cmp
fs
mov
sbb
test
mov
dec
ja
and
nop
adc
inc
and
pop
cmp
pop
adc
and
add
and
int
scas
push
inc
mov
ret
rcr
outs
stos
imul
out
push
clc
mov
sbb
popw
std
mov
lea
xchg
shl
mov
xchg
sub
hlt
call
push
sbb
cdq
push
mov
sbb
or
cmp
push
loope
daa
nop
dec
jbe
pop
push
sub
add
dec
fild
rcr
mov
out
(bad)
mov
rcl
mov
mov
cli
pop
inc
or
addr16
mov
inc
das
cmps
(bad)
test
mov
adc
clc
sar
jno
mov
stc
shl
(bad)
fwait
xchg
cmps
sbb
or
aas
xchg
fwait
sub
pop
test
jge
loop
(bad)
leave
mov
sbb
call
mov
xchg
ins
sbb
add
xchg
(bad)
cli
je
mov
sub
mov
pop
pop
mov
jmp
rol
test
and
ins
ins
fsubr
push
sub
clc
ins
cmp
add
dec
dec
mov
and
xor
into
pop
(bad)
cmp
loopne
or
or
nop
sub
into
popf
add
out
fisubr
(bad)
jns
push
lods
mov
dec
adc
sbb
fstp
or
adc
test
repnz
xor
mov
push
add
cmp
movs
mov
es
or
and
jno
scas
ds
sahf
pushf
jo
ins
daa
fcom
aas
imul
in
sahf
mov
loopne
pop
cmp
xchg
cli
push
or
jecxz
loopne
test
stos
jmp
push
cmp
lea
adc
aad
sub
mov
pop
or
add
shrd
mov
and
pop
and
pop
outs
or
mov
arpl
or
in
mov
push
(bad)
das
pop
enter
ins
cmp
cmp
xor
sub
inc
(bad)
test
je
sub
cli
ja
clc
fisttp
ffreep
dec
inc
arpl
add
lods
aaa
jmp
add
or
push
mov
cmp
inc
add
mov
mov
imul
loope
and
jmp
lods
pop
xchg
mov
(bad)
addr16
sahf
cmp
sahf
jae
ja
lock
push
in
xchg
pop
fsub
inc
enter
mov
loope
stos
pop
test
and
cmp
gs
and
add
cld
xor
test
fmul
sbb
push
int3
or
rcl
lods
mov
cmp
aaa
mov
loop
js
je
out
out
xor
pop
lods
lea
add
bound
retf
loopne
dec
(bad)
jl
pop
pushf
cmps
test
xor
dec
mov
sbb
fdivr
mov
push
test
adc
or
fst
push
retf
xor
inc
repnz
jmp
loop
sub
inc
xchg
(bad)
mov
std
cwde
ins
mov
push
ins
inc
imul
push
ret
xchg
dec
push
inc
xor
loop
push
xchg
les
mov
push
jbe
sub
jns
xor
mov
xchg
push
int
in
mov
inc
jl
inc
dec
fwait
or
cmp
or
mov
push
js
pop
jl
in
fistp
xor
xlat
sti
cmps
cmp
sub
xchg
repnz
not
jmp
aaa
into
das
popa
mov
lods
js
jmp
iret
fwait
xchg
inc
div
push
adc
daa
iret
mov
fstp
pop
push
cmp
dec
jl
inc
jno
sub
pusha
shl
mov
ds
lds
pop
pop
dec
lods
rcr
retf
out
dec
inc
ret
hlt
(bad)
push
jle
jg
xor
popa
mov
mov
cdq
loope
retf
ja
dec
fbstp
dec
ret
push
div
sbb
xchg
scas
push
lds
pop
sub
push
sub
test
call
clc
sbb
pushf
or
mov
push
and
xchg
loope
stos
sahf
in
push
add
call
ret
std
xchg
push
mov
es
stos
in
dec
jns
call
ret
cmp
sub
mov
scas
out
and
jmp
popf
mov
pop
push
leave
cmc
pop
cli
mov
fld
jle
jmp
aaa
aas
mov
push
lods
les
ds
dec
cmp
(bad)
adc
jecxz
mov
cmp
fisttp
dec
push
adc
imul
clc
xchg
or
pop
inc
jmp
popf
test
jle
neg
rcl
cld
cmp
mov
mov
imul
inc
loopne
stos
add
add
cmc
bound
pop
lods
gs
inc
adc
cdq
loopne
icebp
(bad)
aam
sub
imul
xlat
imul
pop
call
xchg
mov
mov
outs
stc
mov
clc
bound
sub
adc
mov
mov
mov
bound
xchg
push
sbb
mov
dec
shr
outs
push
or
xlat
test
or
or
jns
pop
mov
jo
push
sbb
and
repz
inc
mov
xchg
popa
out
(bad)
stos
aaa
push
test
cmps
sub
jecxz
loope
push
(bad)
pop
(bad)
popf
jecxz
loope
ins
hlt
jae
stos
jmp
ror
rol
mov
js
cdq
inc
clc
inc
jns
sub
(bad)
mov
inc
inc
(bad)
lods
es
out
cmps
adc
setbe
fnstsw
dec
cmc
xor
mov
mov
jb
pop
wrmsr
push
push
sti
movs
jmp
push
pop
cmp
(bad)
test
jno
inc
test
retf
out
pop
and
enter
add
xchg
retf
or
dec
(bad)
sbb
int3
mov
cmc
mov
add
xor
adc
push
xor
outs
fdiv
outs
mov
pop
ret
aaa
mov
dec
(bad)
cmp
popf
jp
cmc
mov
jg
jmp
sbb
pop
retf
xor
rcr
pop
add
fprem
(bad)
jp
mov
push
sbb
jp
pop
movs
lock
lds
dec
adc
pop
es
ror
dec
sub
in
lahf
cmps
xchg
push
test
sbb
mov
cmp
aas
call
lahf
into
out
push
pusha
xor
mov
dec
mov
sub
daa
inc
shr
jnp
pop
sbb
(bad)
mov
inc
xchg
(bad)
loope
es
repz
out
mov
shl
loopne
sahf
shl
aam
jmp
adc
bound
mov
xchg
mov
mov
ret
dec
ss
and
mov
(bad)
xor
mov
int
icebp
pop
repz
stc
xchg
adc
mov
retf
data16
cmp
mov
cli
sub
mov
out
je
or
mov
mov
xor
in
and
mov
inc
js
rcl
repnz
xor
cld
xlat
cdq
in
jmp
aam
shl
fnstsw
fild
sbb
fs
xchg
sbb
arpl
push
lock
jno
push
popf
fsub
mov
and
dec
adc
gs
loope
push
fcmovbe
scas
sub
cmps
push
jecxz
cli
int
sti
lock
sub
lahf
sbb
cmp
(bad)
in
stc
daa
adc
mov
mov
pmulhw
addr16
add
jns
js
sub
pop
inc
popa
gs
push
dec
xchg
sub
lds
adc
mov
add
or
bound
cmp
or
or
push
push
out
ins
popa
popf
lods
bound
sub
paddw
shr
mov
popf
aas
adc
push
adc
mov
fisub
push
in
mov
jmp
adc
into
pop
sbb
gs
div
pop
push
mov
das
pushf
push
imul
repz
aad
jns
(bad)
inc
jmp
pop
inc
xor
das
add
xchg
popf
repz
out
leave
add
mov
or
cmp
mov
out
nop
aas
gs
jae
xor
aas
scas
(bad)
dec
jl
fdecstp
stc
mov
icebp
in
out
in
xlat
add
dec
xor
or
ja
rol
loop
pop
ret
or
jecxz
rcl
dec
jno
push
jmp
push
xchg
jl
ja
sub
and
jno
retf
ret
cli
movs
test
test
(bad)
mov
fisub
xor
lock
and
push
scas
rdtsc
mov
test
sub
sub
test
mov
loop
push
jg
mov
out
mov
bound
movs
repnz
mov
xchg
loopne
mov
pop
inc
das
(bad)
jg
inc
or
xchg
stos
mov
mov
jo
mov
sar
jbe
popa
mov
push
cmp
outs
push
aam
xchg
ret
mov
cwde
mov
repnz
jno
mov
jnp
rol
jg
dec
fs
push
cmp
std
pop
inc
(bad)
push
mov
in
fwait
outs
mov
inc
es
les
sar
rcl
push
dec
int3
jmp
gs
fbld
imul
je
cld
stc
jg
mov
ins
int
fiadd
scas
pop
cmp
mov
inc
fwait
stos
icebp
mov
js
js
adc
inc
xchg
mov
pusha
repz
test
mov
jmp
pop
xor
sbb
inc
inc
cmp
aaa
cmp
pushf
imul
repnz
cmp
imul
cld
sub
or
inc
adc
xchg
pop
inc
inc
cmp
adc
or
retf
jae
mov
xchg
ins
jns
das
jb
ffreep
aaa
(bad)
in
into
adc
icebp
cmp
int3
pop
jns
jg
mov
push
sub
das
enter
lock
retf
jno
fidivr
int
das
cdq
retf
adc
xchg
pop
scas
sti
in
cwde
movs
aas
ins
sub
cwde
test
jae
fimul
jae
fcmove
push
call
sbb
mov
mov
lahf
push
dec
(bad)
sub
jecxz
je
out
push
jne
mov
pop
and
dec
pop
jg
xor
mov
add
inc
inc
test
sub
cmp
and
ss
jnp
cli
sub
xor
sub
in
popf
pop
cmp
or
jge
adc
add
pop
mov
aam
outs
in
loopne
xor
dec
add
xchg
jo
imul
repz
push
in
lods
repz
jmp
test
lds
sbb
jmp
mov
fimul
(bad)
stc
(bad)
lahf
pop
pop
inc
into
test
rcl
mov
shl
mov
rcr
sub
jae
test
push
fs
ror
in
das
(bad)
fidivr
arpl
in
ret
stos
or
mov
jecxz
jns
jo
cmp
adc
xlat
stos
mov
lds
xor
mov
daa
inc
cmp
int
ja
les
xor
dec
mov
jbe
mov
push
aaa
popa
adc
lahf
in
jns
adc
and
fmul
inc
sbb
fisubr
ins
sbb
push
xchg
dec
mov
lds
xchg
shl
popf
push
jo
add
jl
pop
push
shr
jp
add
js
xchg
cli
ds
sti
sbb
dec
xor
push
addr16
xor
inc
int3
fist
fcomp
ror
es
mov
in
cdq
jbe
popa
in
(bad)
pushf
call
dec
push
and
add
int
inc
imul
mov
sbb
pop
jmp
sahf
lds
push
xchg
fwait
lds
iret
div
ds
inc
gs
pop
es
ds
movs
mov
push
outs
adc
(bad)
adc
loop
out
test
lea
lea
pop
cld
xchg
and
out
mov
dec
cmc
inc
jmp
ror
in
mov
es
mov
mov
icebp
jnp
dec
mov
out
mov
mov
lea
aad
imul
mov
js
loopne
pop
jge
add
jp
push
sub
pop
test
scas
jp
pop
sahf
mov
rol
je
(bad)
mov
stos
xchg
fcmovne
or
sbb
or
cli
cld
test
pop
pop
cld
sub
or
mov
fidiv
adc
cld
bound
psllw
mov
sub
test
lock
mov
popf
jns
lds
push
xor
ret
and
inc
gs
sbb
(bad)
cli
mov
aas
dec
add
in
jecxz
or
dec
daa
cmp
fst
mov
imul
stos
pop
leave
and
mov
mov
mov
sbb
cmp
inc
out
lods
aad
pop
(bad)
into
xlat
packsswb
aad
int3
mov
repnz
jecxz
ins
dec
or
in
lock
pusha
xchg
mov
rcr
add
mov
mov
push
and
popf
push
add
or
movs
es
int
in
ret
adc
test
pop
pop
in
xor
aam
jo
loope
sahf
sbb
sbb
sti
in
aam
ss
push
shl
loope
push
loope
in
pop
xchg
pop
(bad)
ss
fsub
mov
ins
and
jg
pop
daa
mov
mov
retf
iret
cs
cli
ins
jl
retf
test
lahf
xor
xor
scas
push
iret
jbe
shl
mov
neg
adc
lea
cli
mov
sub
in
test
out
cdq
xchg
aaa
arpl
xchg
or
(bad)
mov
popa
ja
or
shl
add
jne
cwde
jns
dec
or
sbb
pushf
js
test
test
aaa
mov
repnz
js
movs
ret
cmp
mov
hlt
add
and
mov
push
adc
sub
push
mov
xchg
arpl
mov
sub
xor
jecxz
xchg
pop
mov
mov
int3
jmp
jg
or
or
cli
inc
and
sahf
cmp
adc
push
lahf
cli
xlat
mov
rcl
ss
mov
stos
cmp
call
out
mov
cmc
inc
adc
sub
mul
dec
or
push
xchg
imul
aam
ret
outs
fadd
or
cmp
pop
mov
loop
aad
push
leave
sbb
repnz
ja
fcom
xchg
add
inc
aad
and
cwde
sub
adc
sub
cdq
add
sbb
inc
push
movs
iret
mov
sbb
inc
mov
mov
int3
mov
sub
shl
pop
stos
lahf
cmp
imul
mul
(bad)
xor
push
retf
xor
jl
in
fwait
xor
xchg
mov
add
pop
add
ja
pop
dec
into
inc
jl
into
(bad)
lea
loop
mov
scas
add
push
cwde
fstp
lods
mov
push
adc
sbb
arpl
push
xor
and
mov
dec
add
push
test
imul
xchg
cmc
cmp
aad
inc
cs
out
stos
mov
loope
fndisi(8087
adc
(bad)
ins
and
stc
jecxz
dec
imul
pop
inc
inc
or
mov
inc
scas
cmp
xchg
jmp
(bad)
(bad)
jnp
xlat
out
out
push
mov
mov
and
das
push
dec
cmp
push
xchg
sub
push
mov
sbb
mov
loop
mov
lock
push
dec
fnstenv
inc
dec
ins
sub
add
ja
ins
rcl
mov
arpl
inc
push
mov
retf
repz
fiadd
std
pusha
(bad)
pop
mov
aam
daa
enter
pop
dec
stos
test
add
and
rcl
pop
dec
push
mov
repz
add
xchg
cmps
mov
fbstp
jge
jge
mov
adc
mov
jge
mov
ins
jecxz
dec
push
xor
(bad)
ja
mov
outs
cmp
cmps
adc
inc
cmp
mov
push
xor
or
pop
mov
test
test
xor
mov
jmp
fst
fsubr
inc
stc
sub
sbb
mov
addr16
popa
sar
pop
sub
or
out
scas
cs
pop
dec
mov
or
sar
mov
mov
mov
mov
adc
jge
das
jmp
cmc
ret
gs
jg
sbb
movs
sbb
(bad)
repnz
jbe
push
jb
mov
jns
hlt
xchg
jg
outs
mov
xor
lds
and
push
dec
(bad)
sti
adc
pop
cwde
cmp
xor
mov
mov
bnd
xchg
stc
xor
sbb
lea
repz
inc
fucom
clc
add
jnp
jne
les
jp
out
and
jmp
loop
ret
sti
iret
mov
jmp
ret
out
arpl
fwait
and
adc
imul
fwait
dec
retf
aad
add
mov
and
ss
inc
sub
sbb
cmp
push
addr16
cmp
fst
sbb
mov
sbb
push
pop
adc
aad
gs
push
or
shl
dec
pop
inc
sub
fiadd
jl
mov
adc
test
imul
or
movs
xchg
iret
lock
xor
mov
ret
cs
cmp
out
ja
outs
repnz
iret
mov
or
sbb
mov
int
loop
mov
lahf
add
xor
adc
int
mov
(bad)
mov
arpl
movs
add
and
xchg
mov
fisttp
lods
inc
jb
pop
push
or
xor
inc
stc
pop
or
xor
lods
jo
mov
call
lock
ins
(bad)
fiadd
push
mov
mov
cs
and
fild
fimul
cmovg
add
dec
pop
jecxz
popf
loope
lock
mov
imul
cmc
cmp
test
push
ins
nop
loop
sub
sub
and
iret
mov
ins
mov
dec
inc
aas
dec
cmp
data16
fimul
push
xchg
int3
test
rol
in
stos
jmp
xchg
pop
std
lods
outs
inc
cmp
mov
(bad)
mov
fidiv
sbb
adc
cld
(bad)
cli
dec
mov
mov
push
mov
leave
stos
xchg
into
mov
stos
adc
cmps
xor
xchg
cmovb
lds
xchg
or
cmp
sbb
leave
xlat
xchg
shl
jne
pmuludq
mov
adc
xor
pusha
push
jmp
lods
(bad)
pop
adc
pop
out
stc
mov
add
bound
xchg
dec
ins
int
repz
enter
enter
xchg
ss
inc
sbb
mov
jg
scas
sbb
jae
inc
out
jbe
mov
sbb
sahf
cmp
push
add
(bad)
mov
aas
cmp
stc
jmp
test
sub
(bad)
sub
and
loope
sub
xchg
or
inc
mov
sbb
mov
mov
loop
inc
dec
(bad)
ret
and
fdiv
xor
vmaxps
xor
nop
sahf
(bad)
into
cmc
ins
gs
rol
dec
aaa
mov
inc
out
psubusw
es
and
sub
(bad)
mov
aaa
ret
sbb
aad
mov
pop
movs
mov
ja
or
int3
sbb
push
mov
outs
push
ds
xor
xchg
cli
xor
scas
stc
scas
cmc
mov
retf
dec
add
fwait
add
jg
xchg
mov
jecxz
sbb
pop
cmc
dec
xlat
js
push
cld
fstp
scas
test
and
popa
and
shl
dec
ret
retf
retf
out
pushf
mov
mov
push
add
lods
push
out
cmps
or
jge
dec
dec
cli
adc
push
lahf
jmp
fwait
inc
add
mul
dec
jge
push
js
cmp
movs
mov
addr16
mov
add
rcl
loopne
xor
jg
ret
mov
out
or
mov
popa
in
fsub
push
(bad)
nop
pop
mov
jmp
mov
daa
call
clc
scas
xlat
push
jmp
nop
add
ins
lidtd
lods
jae
ins
mov
jmp
cli
aas
leave
scas
lahf
or
inc
and
fcomip
jbe
push
(bad)
enter
adc
mov
push
and
mov
push
loope
mov
pop
fwait
loop
add
push
div
mov
add
add
sbb
mov
stc
div
jnp
xchg
cmp
push
mul
pushf
cmc
lock
gs
cmp
fst
mov
arpl
jmp
push
loop
mov
dec
add
or
and
dec
lods
xchg
mov
(bad)
cmp
cmp
rcl
push
aad
adc
test
add
mov
xor
gs
ins
mov
push
ja
cmp
mov
add
cmp
push
or
mov
test
dec
sbb
(bad)
or
(bad)
pop
ins
sbb
je
(bad)
pushf
xor
mov
jg
lods
pop
out
repnz
addr16
lds
adc
mov
sub
test
xor
xor
adc
push
or
aaa
push
enter
loopne
test
dec
add
push
push
pop
das
sahf
repnz
ds
loopne
fbstp
ret
into
lea
inc
mov
inc
push
and
jnp
sbb
lock
sub
mov
add
mov
sub
fsubr
inc
push
adc
lea
add
mov
push
mov
mov
gs
xchg
inc
stc
jne
add
scas
or
dec
icebp
daa
pop
fbstp
sub
xchg
mov
loope
dec
mov
fdivr
xor
cmp
mov
inc
sbb
mov
jl
int
(bad)
jo
cmp
in
lods
push
xlat
ds
pop
mov
inc
sbb
ds
mov
push
popf
rol
or
in
sbb
inc
cmps
fisubr
mov
xor
xchg
fnstcw
inc
inc
scas
test
std
(bad)
fs
popa
mov
mov
and
sar
mov
inc
pop
sbb
mov
(bad)
cmp
std
inc
and
fdivr
cmps
mov
sub
retf
(bad)
push
push
push
mov
mov
and
xor
pop
jo
mov
test
xlat
repnz
jle
dec
stos
dec
in
aaa
push
add
fist
mov
sbb
retf
test
imul
(bad)
sub
cmp
pusha
push
jecxz
jnp
sub
fst
dec
cmp
loop
sub
sub
and
(bad)
(bad)
ja
sar
rol
xchg
cs
pop
into
push
cmp
xor
mov
pop
inc
mov
dec
repnz
fucomip
mov
pop
cmp
sbb
push
scas
lea
iret
push
inc
push
sar
lea
loop
mov
add
jbe
mov
mov
repnz
xchg
add
push
push
jge
ffree
call
es
mov
mov
mov
mov
sbb
mov
jnp
loop
dec
leave
xchg
lock
jmp
cmp
(bad)
mov
mov
cmp
(bad)
bound
(bad)
jae
sbb
sub
popa
ins
test
add
fisub
outs
and
repz
inc
repz
stos
xchg
mov
xor
jge
fwait
mov
and
int3
pop
aas
sub
sub
xchg
int
mov
or
pop
fs
jne
mov
(bad)
cwde
loop
sbb
js
dec
std
cmp
inc
sub
inc
into
xchg
ja
ja
add
xor
ins
out
sbb
(bad)
imul
sbb
add
out
or
sbb
mov
and
or
gs
imul
push
xchg
cmp
xor
cwde
xchg
je
fs
stc
and
stos
out
(bad)
inc
inc
cmp
test
aaa
fwait
push
jmp
stos
outs
or
push
push
arpl
adc
sbb
adc
movs
cmps
push
pop
mov
test
out
mov
inc
nop
test
sub
cmp
xchg
push
ja
xchg
jns
mov
xor
imul
rcr
pop
xchg
les
clc
popf
sbb
push
pop
es
ror
jnp
sub
lds
jmp
xchg
jbe
repnz
jne
pop
inc
pop
and
push
das
out
iret
or
fsubr
(bad)
mov
repz
sbb
xchg
jecxz
inc
(bad)
xchg
hlt
and
add
pusha
(bad)
adc
arpl
mov
mov
sub
mov
out
lahf
rcr
je
outs
aas
push
xor
popf
dec
xchg
inc
jbe
push
dec
mov
dec
add
xor
inc
popf
out
stos
adc
neg
push
popa
jae
pop
outs
pop
dec
or
stos
mov
push
pop
cwde
add
ret
imul
fild
or
jg
aad
cdq
sbb
xor
(bad)
lds
call
pop
jl
into
fadd
push
inc
xchg
ret
sub
rcr
pop
loop
and
mov
das
push
je
int3
inc
ret
pop
and
aad
jae
xor
jl
push
gs
mov
int3
mov
daa
aaa
iret
es
retf
cmp
cmp
fld
jmp
cs
mov
sbb
adc
push
add
bound
add
mov
movs
cmps
in
push
xor
out
cmp
mov
into
pop
faddp
and
repz
push
or
mov
cwde
popf
or
movs
cdq
call
jns
jge
icebp
cmp
rol
cmc
in
outs
jbe
pop
and
cmp
xchg
inc
fisub
lea
std
cmp
pop
and
jl
inc
add
inc
pop
scas
xor
ins
lds
lods
ret
mov
mov
(bad)
mov
push
mov
cld
push
xchg
or
idiv
stc
xchg
mov
cmps
push
pushw
lahf
pop
cmps
and
mov
cwde
push
pop
and
(bad)
scas
test
inc
add
cmps
ret
pop
dec
push
sub
clc
adc
sub
inc
add
jo
outs
(bad)
pop
mov
inc
add
mov
outs
mov
rcl
sbb
aam
outs
iret
std
mov
pusha
cmp
popa
jno
cwde
xchg
cwde
cli
and
or
mov
pop
pop
movs
or
das
jecxz
test
dec
sub
push
jg
das
les
test
xor
ret
sub
mov
repnz
ficomp
outs
test
cmps
in
xor
(bad)
loopne
(bad)
xor
push
lahf
das
cmp
mov
sub
adc
adc
and
jecxz
ret
mov
jae
imul
call
xor
sar
mov
std
sbb
gs
lds
rol
ror
jmp
adc
loop
pop
push
pop
jg
cmp
jge
mov
mov
xchg
jo
outs
(bad)
and
daa
inc
loopne
popa
(bad)
cmc
stc
movs
xor
mov
inc
out
xor
xor
or
in
dec
xchg
loop
cmp
arpl
inc
std
xor
jno
leave
je
add
or
das
xchg
hlt
xchg
ret
xchg
icebp
es
fwait
jl
stos
iret
scas
popf
pop
sub
(bad)
push
sar
cld
jno
fstp
scas
scas
add
push
mov
push
adc
xor
or
data16
hlt
fsub
adc
xor
or
rol
repnz
(bad)
int3
adc
out
mov
inc
jno
xor
mov
or
push
mov
movs
and
pop
and
sahf
imul
and
pop
mov
repnz
fidivr
ror
pshufw
popf
or
adc
dec
xchg
and
pop
cmp
or
xor
sbb
xchg
jg
es
rcr
xor
in
push
rol
cmp
mov
mov
stc
jae
int
and
shl
out
(bad)
xchg
gs
clc
add
out
repz
mov
sub
dec
shr
fs
inc
and
or
int
iret
push
mov
push
dec
es
test
loopne
cmp
mov
xchg
mov
xchg
sbb
inc
and
cmp
push
inc
pusha
in
mov
scas
lods
cmp
loop
cld
popa
enter
scas
mov
ja
int3
retf
mov
mov
dec
lahf
cmp
imul
and
retf
js
mov
lods
add
sub
jno
dec
aam
sbb
dec
ins
pop
add
cmp
aad
adc
popa
(bad)
hlt
mov
ds
mov
or
cmp
mov
lock
cmps
test
mov
inc
pop
mov
scas
inc
dec
mov
ror
hlt
cmp
or
jbe
cwde
shr
cmp
mov
movs
cmps
cwde
dec
and
std
pop
cmp
loop
mov
mov
and
mov
xchg
ret
jo
mov
mov
jge
in
(bad)
fwait
pop
mov
lods
adc
sbb
pop
xor
add
mov
iret
jl
test
add
sti
mov
inc
loope
sub
add
xor
sub
push
mov
jmp
sub
ret
cmc
pusha
adc
pop
add
ins
adc
sbb
cs
add
jecxz
out
jmp
adc
mov
jo
xor
jecxz
aam
ins
mov
xchg
test
int3
stos
es
shr
dec
ret
mov
and
push
push
cwde
add
push
fadd
add
pop
call
cmp
mov
in
fcmovnu
inc
add
ret
mov
je
or
call
xlat
mov
int
add
mov
mov
pushf
or
mov
sti
push
lods
inc
ss
enter
leave
test
ret
or
add
mov
call
jb
push
and
(bad)
pop
fdivr
inc
ins
les
mov
dec
inc
and
mov
mov
xor
into
xchg
aam
mov
lods
lods
jecxz
inc
sbb
lock
popa
mov
rcr
add
rol
fadd
dec
data16
sub
sub
cmp
pop
push
mov
xor
xchg
test
in
xor
xchg
adc
inc
jge
xchg
imul
repnz
je
test
dec
mov
add
rol
inc
call
sub
rcl
or
dec
pop
and
mov
retf
test
mov
popa
fsub
pop
xchg
fwait
aam
outs
jmp
scas
rcr
or
movs
fucomip
mov
sub
(bad)
fdivp
xor
stc
add
ret
lock
dec
(bad)
dec
shl
imul
lock
adc
jg
and
sub
xor
in
dec
shr
pushf
sbb
inc
js
stc
add
xchg
sub
ret
sub
out
shl
leave
inc
sbb
mov
xchg
jns
mov
xor
pop
cmp
cs
lock
(bad)
mov
xchg
lds
cmp
xchg
jae
add
inc
xor
or
add
sub
mov
gs
or
iret
(bad)
add
mov
sbb
std
sub
repnz
imul
(bad)
jnp
inc
pop
shr
add
leave
adc
repnz
xor
pusha
loop
inc
ds
jbe
adc
sbb
fs
xor
jo
fidivr
xor
mov
in
por
inc
mov
and
test
cmp
pop
push
test
mov
cmps
xor
ins
movs
call
mov
js
push
ret
or
xor
push
mov
leave
enter
mov
xchg
pushf
xor
add
mov
cld
xchg
str
mov
(bad)
ins
iret
ins
sahf
(bad)
dec
retf
aam
adc
sbb
clc
(bad)
neg
xchg
repz
ins
daa
push
sub
std
mov
dec
loopne
jnp
fsubp
pop
(bad)
add
shl
push
fmul
mov
pusha
aaa
std
sbb
(bad)
mov
inc
xor
sub
cmc
lea
or
sbb
aas
jnp
or
cdq
in
adc
stos
push
gs
fstp
or
int3
pushf
jg
das
mov
arpl
dec
add
test
mov
cmp
loop
xor
jl
fadd
push
(bad)
xchg
rcl
mov
and
clc
pop
shl
iret
ror
jb
mov
or
out
scas
enter
sahf
cld
lods
pushf
sub
icebp
retf
mov
pop
popf
mov
sbb
in
call
adc
inc
imul
jo
ja
dec
pop
popa
xor
imul
dec
shl
push
in
push
pop
std
out
cmp
sti
mov
neg
add
stc
cmp
out
aaa
cli
cli
cmp
ret
and
imul
ss
jge
push
and
xchg
rcr
xchg
lods
int
mov
jecxz
(bad)
(bad)
out
cmps
dec
popf
inc
and
push
ja
les
lea
sbb
inc
push
add
imul
pop
lea
sbb
sub
call
cmps
ret
dec
jne
mov
leave
pop
or
std
sub
mul
scas
into
xchg
push
setp
push
test
and
xchg
sub
adc
xor
aad
mov
ja
dec
jmp
pop
cld
dec
shl
mov
(bad)
aam
xor
mov
cmp
ds
dec
ret
mov
rol
(bad)
mov
hlt
inc
or
(bad)
dec
push
cs
sti
push
mov
jne
fucomip
push
cmp
xor
pop
lods
lea
push
and
and
data16
inc
mov
jecxz
loope
dec
imul
pop
fwait
jge
outs
(bad)
js
add
cmp
mov
jg
sbb
adc
nop
mov
dec
xchg
push
loopne
cmps
jne
int
inc
loop
xor
xchg
loop
int
jo
scas
lea
loop
sbb
out
pop
jmp
and
or
lahf
pop
mov
or
push
pop
xchg
jp
jns
mov
sbb
mov
xchg
inc
mov
pop
leave
mov
arpl
push
fcmovb
je
add
sub
mov
or
sbb
mov
repnz
test
es
cwde
mov
fwait
lods
xor
inc
adc
add
jecxz
dec
std
ret
hlt
cwde
pop
(bad)
leave
inc
adc
inc
movs
sbb
mov
inc
jge
add
dec
adc
fstp
cmp
lahf
mov
cmps
test
dec
repz
retf
mov
xor
aaa
mov
call
adc
mov
aas
int
push
xchg
add
xchg
cmp
int
(bad)
or
call
xchg
leave
add
test
(bad)
dec
mov
sbb
mov
lea
fst
fdiv
or
jns
mov
cmp
rcr
dec
and
cmp
retf
test
adc
gs
jb
(bad)
(bad)
cmp
or
mov
push
ret
xchg
hlt
aam
sub
mov
std
mov
mov
cdq
mov
addr16
dec
ins
add
ror
(bad)
cmp
push
xchg
cld
pop
push
xchg
not
sbb
ds
fisubr
outs
mov
std
pop
push
and
cli
jno
mov
mov
lahf
into
xor
mov
push
loope
rcr
mov
xor
mov
stos
addr16
xlat
cmp
pop
dec
shl
cmp
and
lods
mov
cmp
imul
ret
scas
(bad)
fsub
repnz
ss
js
xchg
lods
in
adc
out
dec
push
adc
test
adc
fwait
inc
mov
pop
loop
cmps
retf
jno
cld
cli
addr16
loop
jb
xchg
(bad)
jge
xor
call
shr
retf
mov
fmul
sbb
repnz
out
xchg
pop
and
pop
mov
sbb
xor
push
dec
loopne
push
ret
and
in
adc
aad
ds
sbb
push
inc
fcmovu
in
leave
fisubr
repz
das
jnp
test
jecxz
sbb
mov
or
pop
cs
jecxz
sahf
sub
mov
ret
cmp
and
or
daa
retf
push
ins
sar
and
dec
cmp
add
test
dec
outs
or
jmp
test
loopne
push
out
push
jns
push
jb
stos
cmc
test
push
not
adc
sti
mov
dec
fmul
in
dec
test
sub
xchg
fwait
dec
loope
sahf
call
lods
mov
pop
aam
mov
hlt
pop
pop
xor
ret
movs
std
(bad)
retf
cmp
sub
ret
in
call
mov
xlat
pop
(bad)
mov
dec
(bad)
sbb
add
mov
les
lds
cld
sub
dec
or
and
push
mov
arpl
jecxz
(bad)
scas
cmps
sub
mov
adc
cmp
or
and
mov
dec
call
test
pop
and
in
inc
lahf
int
inc
jmp
add
sbb
arpl
mov
xchg
mov
and
ds
out
cmps
mov
or
cwde
jge
jl
jne
push
fwait
dec
ds
pop
jcxz
push
popf
lds
and
inc
add
ret
lods
and
(bad)
(bad)
std
jbe
or
or
and
rcr
sub
xor
xchg
sub
ficomp
sbb
mov
push
mov
test
fs
cmp
or
pop
fsub
jp
adc
and
std
sub
sbb
(bad)
shl
retf
cmp
daa
push
fistp
xor
add
push
lods
mov
sbb
dec
cli
or
inc
sahf
(bad)
fstp
mov
lds
pop
aam
call
mov
adc
jl
pop
dec
sti
sub
pop
fsub
test
adc
lods
xchg
ins
xchg
pop
ss
push
xor
lods
push
sbb
popa
mov
dec
mov
call
out
mov
or
mov
add
out
(bad)
add
jl
cwde
cld
(bad)
push
inc
pop
xor
sbb
push
mov
aas
sti
jnp
pop
and
mov
mov
inc
jl
in
jg
mov
sbb
in
fsub
and
loop
lea
mov
cmps
movs
inc
es
sub
pop
outs
and
sub
xchg
ins
stc
scas
int
jle
popa
dec
or
rol
jmp
out
leave
mov
sbb
pop
dec
sub
sbb
cmps
dec
and
leave
test
bound
sub
inc
adc
nop
leave
sub
push
push
mov
or
ja
or
js
cmp
mov
xor
inc
dec
pop
sub
push
lea
inc
mov
and
sbb
ror
jo
or
jmp
loop
sub
push
pop
pop
(bad)
in
jge
data16
and
pop
inc
test
jbe
(bad)
in
jmp
sub
sub
mov
movs
adc
int
sub
pop
jg
rep
aad
cmp
in
lea
inc
faddp
jle
bound
mov
(bad)
leave
int
xchg
cmp
push
pushw
movs
mov
pop
push
or
push
push
jb
stc
shl
pop
mov
adc
or
or
push
addr16
mov
ins
out
je
dec
vpunpcklwd
jne
fs
stos
je
outs
(bad)
outs
rol
je
xchg
bound
inc
ins
outs
inc
cwde
ins
push
push
fdivp
pop
mov
out
loop
xor
loope
movs
aas
xor
outs
loopne
into
imul
adc
mov
pushf
cwde
stos
adc
pop
cmp
ret
sahf
enter
std
mov
and
cld
dec
sbb
adc
pop
loop
retf
push
dec
arpl
pushf
dec
pusha
mov
xchg
cmp
xor
jmp
stc
ins
and
mov
sbb
dec
pop
sub
mov
pusha
out
pop
loopne
push
or
pop
ret
sti
ret
loopne
add
frstor
cmps
je
adc
dec
push
sar
dec
es
sti
push
sub
xor
scas
sub
nop
sbb
outs
or
or
pop
lock
arpl
push
mov
movs
cld
dec
jg
fdivr
cmp
push
adc
push
ins
mov
push
(bad)
xlat
mov
mov
jb
add
or
aas
cli
retf
dec
push
dec
data16
test
out
sbb
and
repz
(bad)
out
mov
fcos
data16
xor
sbb
mov
xchg
idiv
jle
movs
fidiv
into
call
or
rol
adc
pop
int3
out
clc
fs
xor
jno
adc
mov
sbb
lods
leave
in
loopne
jp
mov
in
xor
shr
into
out
aaa
imul
scas
pop
jmp
dec
adc
and
adc
inc
ins
mov
cwde
mov
sub
push
sbb
in
retf
inc
repz
inc
cmp
(bad)
adc
add
inc
jbe
and
inc
sbb
mov
mov
pop
out
inc
in
jnp
ss
mov
repz
(bad)
retf
lea
lock
inc
push
call
int3
push
(bad)
push
push
stos
(bad)
cwde
pop
(bad)
iret
pusha
fdiv
jge
add
cli
mov
shr
sub
shl
fistp
and
out
sub
leave
test
xchg
or
fld
ins
clc
ins
mov
in
dec
jb
shl
fst
ret
outs
fnsetpm(287
cmp
mov
sub
push
mov
fwait
iret
pop
test
mov
push
push
jno
movs
pop
cs
push
adc
scas
daa
enter
sub
test
dec
lods
mov
inc
mov
cld
test
xchg
push
xor
push
xlat
data16
ins
aad
or
mov
adc
sete
shl
fidivr
dec
mov
(bad)
addr16
cmps
test
xor
lods
pop
add
sbb
mov
xchg
call
inc
pop
sbb
push
and
push
mov
jge
add
clc
xchg
mov
dec
ficomp
scas
scas
in
adc
sbb
lock
fsub
inc
and
cmp
and
enter
cmp
add
sbb
dec
(bad)
cs
cli
mov
dec
or
push
les
sub
leave
adc
pop
in
xchg
push
xchg
ffree
lahf
dec
rcr
call
mov
xor
push
fbstp
das
in
xor
dec
sub
and
dec
cmp
enter
and
lahf
dec
call
enter
ss
loop
es
adc
pop
mov
xor
push
sbb
mov
mov
mov
cmps
or
push
movs
mov
cmp
stos
push
sub
or
and
aam
xor
pop
(bad)
adc
movs
inc
jg
cmps
mov
cmc
test
cmp
fwait
out
dec
dec
inc
pop
xor
aas
loop
pop
xchg
mov
aad
stos
(bad)
sti
rol
les
jge
dec
xchg
ss
cmps
jl
dec
xchg
mov
mov
inc
xchg
fiadd
push
sub
jle
push
out
cld
xor
jb
pop
push
sbb
pop
or
test
mov
cli
cmp
xor
arpl
cmp
lods
push
lea
add
movs
shr
sbb
pop
mov
dec
jnp
push
push
sti
lock
push
jno
jge
dec
mov
(bad)
test
cwde
push
xchg
adc
es
and
mov
test
xor
addr16
sbb
fnstcw
jp
outs
jp
sub
mov
or
mov
jmp
add
popa
gs
rcr
movs
sbb
iret
push
cmps
inc
mov
push
sbb
daa
or
xor
and
popf
push
or
sbb
retf
push
add
not
out
cld
mov
xchg
mov
sub
cmp
xchg
dec
jnp
xchg
(bad)
shl
inc
stc
push
add
add
mov
imul
(bad)
stc
std
mov
retf
sub
xor
sub
and
jae
cmp
xchg
dec
push
jae
and
mov
or
rcl
add
mov
adc
mov
out
cmp
lds
cs
cs
jge
cmp
jne
add
pop
shl
mov
sub
es
pop
mov
sub
lds
mov
aad
lock
inc
in
lods
lock
out
mov
cmp
xchg
and
pop
pop
push
adc
in
stos
mov
sbb
fwait
mov
jmp
(bad)
nop
pop
pop
or
push
cmp
push
cmp
ins
mov
lock
sbb
jecxz
gs
lock
xchg
xchg
retf
repnz
sub
adc
and
inc
rcr
jmp
mov
mov
fistp
or
xor
(bad)
in
fsub
sbb
ret
xchg
or
hlt
xor
dec
ror
adc
pop
sub
jmp
adc
(bad)
(bad)
ins
mov
scas
test
jnp
mov
mov
sbb
jge
push
loopne
mov
push
outs
pop
mov
addr16
sbb
enter
aas
mov
jle
test
or
icebp
int3
es
jb
push
dec
push
mov
cmp
xchg
xchg
das
sub
jg
std
inc
add
push
and
enter
ja
out
cs
ins
aam
mov
and
xor
sar
adc
push
xor
xchg
clc
or
(bad)
jmp
adc
fst
and
aam
mov
imul
outs
push
push
fdiv
clc
dec
sbb
xor
pop
ror
test
add
jbe
or
inc
scas
fisub
mov
sbb
cld
mov
pop
addr16
pop
sbb
xor
std
mov
iret
(bad)
mov
or
jp
sub
outs
or
cmp
inc
jge
leave
pop
bnd
and
lea
mov
and
(bad)
and
pop
mov
pop
sar
scas
fadd
jbe
cmp
jmp
pop
pop
jg
and
stc
mov
cs
push
inc
xchg
push
in
cmps
xchg
jle
or
lahf
sub
dec
movs
push
push
sti
xchg
push
cwde
add
jno
add
dec
cmp
inc
adc
inc
and
int3
stos
mov
shl
inc
js
mov
pop
popf
dec
mov
in
mov
xor
xchg
dec
(bad)
cmp
add
jne
(bad)
mov
icebp
jl
lods
mov
mov
xor
mov
or
xlat
and
test
sahf
mov
cli
loopne
out
test
jge
adc
icebp
ss
xchg
sbb
mov
fidivr
add
aaa
or
test
mov
mov
or
mov
or
mov
nop
sub
cmp
jnp
movs
and
xchg
add
xor
into
(bad)
cs
push
xchg
xor
sub
jecxz
test
hlt
jmp
inc
lods
adc
pop
cwde
(bad)
popf
sub
push
push
inc
jp
dec
mov
lea
es
(bad)
je
lahf
push
jnp
mov
movs
idiv
mov
enter
adc
loop
stos
shl
les
push
push
sahf
mov
inc
mov
neg
add
cld
mov
adc
push
and
cli
test
ja
ins
and
sbb
cmp
jecxz
js
fadd
fstp
pop
out
cmp
int
ret
mov
test
nop
mov
inc
add
inc
out
push
js
adc
xchg
mul
daa
inc
or
push
mov
(bad)
repz
call
ss
add
jbe
push
nop
mov
aam
push
aad
push
sbb
sub
mov
xchg
daa
sub
jb
cmp
shr
pushf
movs
call
stos
mov
sub
sub
xchg
leave
scas
or
cwde
lock
into
scas
(bad)
push
push
push
repz
pop
sbb
fdiv
mov
cmp
jns
ret
xchg
mov
scas
or
add
or
stos
fcom
ss
fcmove
in
sti
push
adc
xchg
mov
inc
js
adc
xchg
pop
add
lock
inc
in
sub
lea
jecxz
push
test
fsub
push
pop
add
fucomip
push
push
cmp
lds
mov
cmp
(bad)
test
cmps
inc
enter
scas
(bad)
jle
ins
retf
xchg
cmp
enter
push
inc
cmp
imul
in
mov
lea
test
sub
add
lea
mov
movs
leave
push
repz
add
jne
pop
mov
adc
rol
dec
sbb
sti
inc
sbb
dec
(bad)
push
jb
outs
popf
push
xchg
xchg
stc
push
jp
cmps
cwde
in
push
bswap
das
int3
fimul
aad
dec
xchg
in
aad
push
lock
or
mov
test
sub
xchg
clc
cmp
outs
xor
popf
or
or
adc
out
sbb
(bad)
(bad)
adc
sahf
lock
ins
lods
adc
cmps
cmp
jp
popf
sub
fbstp
mov
dec
ins
punpckhwd
mov
sub
test
mov
sub
sub
cmp
fild
sbb
inc
mov
jbe
push
push
jns
fs
movs
in
ja
cld
movs
xor
loopne
psubusb
imul
stos
jnp
sbb
xchg
mov
jl
pop
std
push
aam
dec
xchg
imul
fidivr
gs
out
mov
(bad)
lods
aam
add
shl
add
(bad)
jmp
sub
push
sbb
rol
js
addr16
add
out
xchg
add
movs
pop
aaa
push
pop
push
add
int
adc
sbb
cmp
loop
or
mov
or
mov
(bad)
daa
es
fild
out
cmp
cwde
inc
in
bound
xor
aam
xchg
hlt
(bad)
aad
scas
mov
ret
ret
lods
mov
js
pop
add
or
out
mov
mov
cmp
cmp
and
enter
push
cmp
in
stos
xor
nop
adc
sbb
hlt
imul
call
or
ret
pop
pop
mov
adc
or
mov
cmp
div
lea
and
jbe
outs
movs
outs
in
mov
jmp
(bad)
in
into
mov
retf
cld
mov
or
sub
sahf
test
cmp
or
int3
cmps
int3
cmp
stc
test
cdq
(bad)
in
retf
ficom
and
js
jne
lods
xor
les
pop
movs
daa
imul
sub
int
sbb
out
or
loop
mov
mov
movs
scas
pop
dec
int3
dec
push
sahf
fs
call
inc
call
add
loope
xor
dec
sbb
retf
daa
test
fs
mov
adc
dec
stos
test
lods
xlat
cmp
popf
xor
out
cli
pop
jl
push
repnz
cmp
cmp
xor
sub
push
jecxz
mov
push
mov
loope
mov
lahf
xor
mov
ds
mov
mov
lock
mov
cmps
lea
mul
and
mov
or
pop
loop
aam
(bad)
std
mov
aad
push
test
inc
mov
sbb
inc
push
loopne
ret
xchg
dec
jbe
popf
inc
jo
jno
dec
push
stc
pop
jns
inc
lods
or
cmps
cli
cdq
mov
cmc
inc
cmp
ret
sbb
xchg
jmp
(bad)
out
jnp
dec
or
jmp
loop
pop
cmp
xchg
mov
add
jns
(bad)
mov
inc
mov
mov
push
add
push
dec
cmp
dec
out
push
inc
lds
mov
adc
test
jmp
jne
xor
fs
or
mov
ja
pop
push
imul
scas
hlt
fistp
cdq
les
and
in
call
lds
inc
mov
push
jae
push
sub
fcmovnb
add
loop
ja
fwait
cmps
push
push
dec
jmp
jl
mov
push
imul
lods
stos
push
mov
dec
adc
or
sbb
cli
mul
outs
icebp
mov
pop
or
adc
inc
(bad)
std
imul
inc
int3
test
sub
aad
sti
(bad)
enter
inc
mov
mov
fld
imul
cmps
xchg
push
or
stos
mov
shl
cmp
scas
mov
fmulp
fnstcw
lods
mov
aas
int3
cmp
push
lahf
gs
jge
retf
rcr
mov
dec
fcom
xchg
and
int
loopne
cli
xchg
int3
xor
aam
pusha
sar
dec
movs
imul
sbb
mov
add
xchg
add
add
and
xchg
dec
nop
shr
mov
sub
stc
mov
lea
mov
adc
test
and
add
cdq
push
lahf
push
push
cmp
push
cld
mov
xchg
dec
sbb
popa
sub
xor
lods
repz
pop
out
mov
jecxz
mov
jp
add
in
jge
enter
fdivr
jbe
cmp
int3
ins
xlat
adc
pushf
fwait
pop
dec
xor
sbb
setb
sbb
mov
jae
push
or
outs
scas
and
fisub
out
fwait
es
mov
popf
adc
mov
mov
jg
shl
jbe
add
dec
fbld
pop
inc
adc
ror
jno
pop
dec
ds
out
jl
jns
mov
pop
scas
enter
movs
push
in
sahf
pushf
mov
xor
xchg
dec
jmp
mov
xchg
push
fnstenv
mov
ret
pop
dec
push
mov
int
cmp
and
sbb
mul
jmp
or
pop
xchg
repz
nop
cmp
popf
inc
push
cmp
sub
in
jns
cmp
cdq
cmp
push
sahf
outs
ins
xchg
xchg
into
xor
jl
dec
cmps
imul
inc
pushf
inc
or
cmc
mov
retf
dec
(bad)
xchg
cmp
inc
rol
fmul
inc
xor
jo
jl
pop
mov
jne
cmc
jecxz
popf
sub
imul
or
adc
adc
retf
les
jecxz
push
adc
(bad)
xchg
int3
fsubr
into
or
pop
or
or
fidivr
movs
or
jge
push
xor
in
addr16
(bad)
mov
and
jle
shr
mov
pop
mov
shr
movs
out
les
shl
sbb
pop
imul
rol
lods
inc
and
mov
call
int3
repz
mov
jl
aas
dec
and
jmp
stc
scas
leave
mov
xchg
xor
sbb
(bad)
xlat
mov
and
dec
push
movs
lds
cmc
lods
movs
inc
js
and
mov
push
fnstsw
sar
cwde
(bad)
imul
lods
arpl
sti
loope
mov
sub
xor
pushw
dec
retf
sub
ror
repz
std
aas
cmp
aaa
in
iret
xor
bound
fdivr
outs
and
mov
imul
in
fcom
data16
jbe
jp
cmps
stos
inc
stos
xchg
and
in
push
jmp
and
fistp
ins
lods
daa
ficom
dec
mov
pop
sub
es
rcl
test
mov
push
cmc
pop
stos
dec
cmp
push
mov
or
push
cwde
xor
pop
fldcw
std
dec
scas
das
inc
scas
(bad)
fadd
ret
in
jae
pop
push
in
jg
retf
in
imul
adc
adc
pop
xor
stos
sti
sub
imul
dec
or
and
and
dec
jp
mov
mov
shl
cmp
cli
cs
add
xchg
shl
in
xchg
mov
lahf
not
pop
test
sbb
test
mov
stos
cmc
loop
xlat
mov
or
add
in
fcomp
fcomp
inc
jo
pop
aaa
add
cli
and
rcr
jbe
cs
push
ror
cmp
mov
push
(bad)
jnp
adc
das
cwde
icebp
mov
xor
dec
xchg
sbb
daa
jp
mov
or
lds
add
xor
inc
outs
int
jecxz
ins
outs
xchg
push
test
or
sti
xchg
and
cmps
data16
push
std
xchg
pusha
or
cmps
lods
push
xor
adc
adc
push
js
(bad)
cli
mov
push
adc
add
test
sbb
mov
shl
add
xchg
js
test
pop
adc
sti
out
imul
sbb
pop
retf
pusha
cwde
scas
add
cmp
retf
mov
cmps
fst
jns
jbe
jle
xlat
jbe
test
fnsave
(bad)
sti
or
lds
in
je
jge
shr
ja
jo
in
jge
push
dec
loope
xor
adc
hlt
in
add
mov
popa
cmp
jne
lods
hlt
push
mov
repnz
dec
sbb
inc
leave
(bad)
rcl
or
push
push
rcl
xchg
pop
pop
add
add
ficomp
outs
test
fmul
mov
pop
test
sub
inc
scas
int
xor
and
(bad)
xlat
in
xchg
shl
adc
test
cmps
or
ss
sar
cmp
in
lods
pop
mul
sbb
dec
push
out
fild
adc
mov
mov
cmp
es
inc
or
inc
es
inc
push
sbb
push
dec
mov
adc
not
jge
xchg
scas
test
xor
jl
leave
out
pushf
sbb
mov
add
jne
xor
repz
(bad)
mov
les
into
and
mov
in
test
mov
fdivr
mov
std
xchg
xchg
pushf
repnz
jbe
ins
lea
cli
mov
mov
jp
pop
dec
(bad)
int3
sbb
dec
cmc
ins
mov
pusha
or
push
adc
into
sub
cld
jp
(bad)
xor
ds
out
jmp
sub
sub
pop
xchg
bound
cmp
cdq
mov
fst
push
add
rcr
mov
xchg
sbb
rcl
sbb
es
push
rcr
(bad)
pop
mov
pop
lods
jge
fiadd
jae
jae
fldenv
(bad)
push
mov
hlt
mov
xchg
sar
ds
adc
cwde
cmp
repnz
cmp
jae
pop
jp
ret
lahf
jl
xlat
les
fst
mov
leave
mov
lods
jl
pop
pop
(bad)
mov
popa
(bad)
pop
enter
xchg
push
popa
out
cmc
call
and
div
and
inc
popf
call
push
xchg
xor
push
mov
pusha
ins
push
ss
ds
pop
jl
mov
add
fwait
je
scas
out
jmp
or
sbb
out
enter
and
xchg
dec
scas
arpl
fidiv
push
loope
xor
jp
lahf
fldenv
out
fadd
pop
mov
and
inc
and
leave
js
fucomi
xchg
push
imul
dec
add
fnstcw
imul
call
mov
stos
and
dec
or
daa
mov
arpl
sub
mov
aad
fbld
jle
jb
(bad)
fist
jbe
add
fbstp
aas
mov
popf
add
push
push
retf
data16
scas
pop
js
cmp
cs
mov
pop
push
add
cmp
shr
inc
bound
adc
mov
fisttp
cmps
shr
inc
pmulhw
push
pop
fucom
jg
mov
and
and
inc
scas
test
mov
fistp
or
stos
pusha
aas
fld
outs
cmp
dec
jg
jg
xor
dec
inc
cmp
idiv
les
dec
xchg
adc
in
bound
cdq
cmp
rol
clc
mov
mov
jmp
pusha
xchg
add
xor
dec
shl
adc
call
fsubr
dec
pop
clc
test
ds
or
addr16
sub
mov
and
sbb
les
cs
cwde
call
or
adc
out
mov
push
(bad)
lds
jl
enter
sbb
cmps
dec
retf
pop
and
or
inc
movs
fild
mov
cwde
sbb
int
jmp
imul
push
jmp
dec
push
in
cwde
pop
push
pusha
test
pop
aas
(bad)
xor
push
add
and
cmp
cmp
cmp
xor
jp
inc
xchg
sub
and
je
adc
stos
jle
call
mov
enter
jo
call
aaa
pop
sub
ds
add
outs
out
add
and
cli
xchg
or
ss
imul
dec
adc
mov
dec
mov
int3
add
mov
and
aaa
pop
cs
adc
or
cmp
lods
clc
push
jl
cdq
lods
jnp
cwde
aas
add
sub
xor
or
sub
inc
mov
imul
mov
cwde
loopne
fcmovnu
mov
jmp
mov
cmp
and
inc
fucomp
push
dec
jle
std
push
mov
les
and
lods
sbb
push
or
fisubr
mov
jl
xor
push
push
js
repz
mov
loopne
imul
xor
sub
fisttp
xor
xchg
add
jle
lods
sub
loop
pop
je
bound
mov
xchg
sbb
das
sub
dec
je
sti
loop
daa
test
daa
mov
sti
or
mov
dec
cmp
pop
xchg
adc
mov
jmp
sbb
add
daa
or
hlt
lods
(bad)
mov
test
jl
cmp
sub
sbb
jg
ins
nop
inc
out
adc
clc
scas
push
xchg
sti
std
je
sub
les
fwait
sbb
add
frstor
fadd
aad
nop
xor
loope
jnp
xchg
xchg
ret
sbb
pop
mov
xchg
xor
das
xor
fisubr
out
inc
push
mov
inc
inc
popf
cmp
pop
fidivr
sbb
cli
shl
pop
(bad)
mov
and
jb
fmul
fsub
mov
shl
and
pusha
(bad)
jo
pop
sahf
or
sete
sub
loopne
inc
popa
dec
adc
and
mov
push
jp
ja
fisubr
jno
push
lock
mov
mov
dec
test
push
mov
outs
inc
dec
pop
cmp
mov
lods
into
(bad)
dec
das
cmova
mov
add
pop
and
pop
jmp
fmul
cmc
mov
lea
test
fucomip
jmp
addr16
enter
push
nop
pop
sbb
jge
inc
mov
mov
ret
gs
stc
aaa
sahf
(bad)
mov
outs
cmp
mov
dec
jns
push
imul
cmp
mul
cmp
test
push
xchg
enter
ins
push
icebp
jmp
ja
scas
xor
inc
aas
stos
fadd
out
popa
(bad)
das
js
daa
push
out
cmc
mov
enter
and
into
test
mov
add
lods
call
push
inc
inc
adc
scas
pop
lahf
adc
push
out
(bad)
outs
jle
(bad)
push
fstp
inc
jae
push
adc
retf
js
lock
ror
sahf
push
retf
cdq
test
mul
xchg
mov
sbb
cwde
repz
xor
cmp
stc
sub
jnp
in
dec
(bad)
std
jl
mov
push
ss
push
or
aam
sbb
iret
sbb
es
(bad)
jo
lock
rol
mov
sbb
imul
out
mov
add
ins
dec
imul
cmp
in
ds
xchg
(bad)
mov
stos
pop
sbb
mul
lahf
cmp
push
clc
dec
mov
ffree
fstp
mov
fnstcw
into
imul
fld
cmps
mov
js
sahf
pop
jbe
sub
test
sbb
cmps
cdq
and
sub
push
cmp
(bad)
pop
xchg
inc
gs
in
push
cdq
push
cmp
pop
mov
adc
lods
cmp
aas
pushf
mov
sub
mov
ficom
mov
ror
pop
xchg
xlat
inc
out
push
pop
cmp
repnz
js
cli
pop
mov
mov
pop
and
stc
stos
(bad)
call
cmp
mov
jmp
add
mov
or
aad
mov
ins
jl
pop
loope
test
div
bnd
add
int3
jae
xor
pop
and
bsr
(bad)
mov
outs
data16
pop
retf
cmp
into
ds
sub
mov
loope
adc
push
xchg
pop
add
cdq
test
push
test
mov
sub
push
cmps
shr
xor
push
inc
add
jle
inc
mov
push
pop
and
aam
outs
or
sub
idiv
inc
enter
cmp
jbe
dec
jo
dec
jmp
iret
jnp
ret
xchg
mov
jecxz
or
and
(bad)
and
ins
xchg
test
jae
or
fsubp
arpl
push
ja
inc
call
mov
outs
mov
dec
data16
inc
push
iret
dec
imul
ins
clc
xor
xchg
imul
outs
sub
cmp
pop
sub
jns
fild
or
popf
or
jbe
loop
leave
aaa
lock
or
fcom
or
jno
sub
ror
call
jecxz
inc
lods
repnz
test
pop
retf
scas
stc
mov
aaa
ss
data16
dec
sbb
push
pusha
push
xchg
cmp
stos
popf
mov
and
fadd
dec
jmp
fcom
(bad)
jmp
ficom
sub
add
scas
in
cmp
sub
loopne
cwde
mov
inc
jae
js
ss
jbe
xlat
adc
xlat
push
lods
push
cmps
push
hlt
cmps
xchg
sbb
fild
mov
mov
jnp
sub
mov
mov
add
adc
retf
daa
out
into
ins
dec
jb
loopne
rcl
inc
mov
pop
sbb
test
leave
inc
cld
jge
addr16
popf
pop
jae
(bad)
out
xchg
in
push
mov
sti
or
(bad)
in
fcomp
mov
repnz
shr
jmp
test
scas
dec
mov
push
cmps
or
cmps
jl
(bad)
cli
add
xor
cmp
add
test
cli
mov
cmc
int
add
add
sbb
cmp
in
cs
test
jb
jecxz
fidiv
in
push
or
jecxz
jo
aaa
sbb
test
xor
cmc
ret
xchg
xchg
scas
cli
std
sbb
dec
inc
lahf
inc
cmc
mov
or
mov
lea
jg
cmps
repz
mov
fwait
push
ror
leave
xchg
hlt
adc
sub
jmp
dec
and
sub
add
addr16
gs
jno
sbb
test
sub
add
adc
inc
in
add
out
dec
int3
push
(bad)
jnp
or
cwde
push
xchg
mov
popf
inc
icebp
push
(bad)
pop
lods
jae
cwde
dec
dec
jl
dec
cmp
stos
sub
jl
repnz
imul
pop
pop
mov
pop
dec
mov
xchg
(bad)
xchg
fdiv
push
xor
idiv
push
push
in
pop
cmc
hlt
shr
retf
mov
and
lods
int3
xchg
or
add
stos
jp
and
lock
and
repz
jnp
pop
in
mov
jb
push
scas
call
push
bound
and
daa
xchg
jge
sbb
(bad)
push
mov
add
mov
daa
jbe
mov
std
cmp
ja
xchg
inc
xor
imul
rcl
jl
scas
movs
jbe
mov
fucomi
sbb
arpl
imul
sbb
mov
(bad)
mov
cmp
jle
je
jl
lods
dec
adc
inc
sbb
in
out
mov
stos
sub
std
clc
ret
(bad)
jmp
xchg
jecxz
in
jmp
sub
cmp
packsswb
inc
fmul
or
lds
sbb
ss
and
hlt
mov
or
pushf
int
shl
test
mov
pop
xor
push
cdq
mov
hlt
clc
mov
mov
ret
inc
fidivr
dec
ret
out
loop
call
jg
push
sti
or
fisubr
and
adc
(bad)
cli
adc
es
mov
dec
mov
and
lods
mul
outs
adc
xchg
mov
jmp
mov
push
cmp
daa
retf
(bad)
idiv
fdiv
jg
in
lods
mov
loopne
xchg
retf
int3
mov
mov
dec
sti
push
in
xlat
stos
int
test
addr16
xor
mov
jmp
push
(bad)
mov
leave
cmps
test
out
dec
out
mov
sub
in
and
sahf
push
mov
dec
or
fnsave
mov
lahf
stos
enter
jnp
mov
fucom
add
inc
pop
or
mov
adc
mov
fstp
(bad)
mov
shl
cmps
adc
push
lea
inc
add
or
and
addr16
loop
iret
std
mov
sti
and
jmp
adc
xlat
repnz
mov
adc
cmp
aas
pop
dec
pop
int3
pop
int
add
dec
jo
jp
cdq
dec
stos
test
stos
jmp
sub
adc
and
sahf
dec
adc
test
push
mov
xor
inc
pop
sbb
adc
pop
xor
mov
pop
imul
aas
mov
cdq
or
lods
or
mov
in
cmp
dec
mov
cdq
cdq
(bad)
cmp
mov
push
mov
cmps
test
mov
in
mov
adc
stos
add
fild
call
hlt
inc
pop
inc
dec
mov
(bad)
rol
ins
dec
iret
xor
fadd
cmp
push
mov
mov
loopne
jle
jns
fild
push
pop
neg
stc
lock
(bad)
addr16
dec
out
pop
xlat
ror
pop
scas
and
into
inc
or
pop
gs
test
loope
test
push
ja
add
loop
sub
adc
outs
dec
(bad)
les
mov
shl
dec
push
adc
mov
mov
mov
lds
and
sbb
add
fnsave
icebp
js
aas
lahf
mov
and
cmp
movs
and
retf
xor
push
add
retf
daa
sti
xchg
add
sbb
inc
xor
sub
push
sub
jbe
ins
cwde
imul
jge
adc
or
add
mov
push
popf
ds
mov
cmp
xor
and
scas
scas
xchg
daa
not
movs
stc
cmp
icebp
int3
mov
push
and
int
sub
dec
fild
and
cmc
mov
dec
mov
pop
test
ret
cs
std
inc
call
or
and
ror
jg
test
or
push
mov
xor
int
retf
add
pop
retf
fsub
sbb
or
xchg
pop
xchg
lea
lahf
adc
addr16
xchg
out
fmul
sub
sbb
pusha
idiv
xor
hlt
in
add
push
mov
fnstsw
push
out
fcmovbe
nop
mov
sub
and
cs
push
push
out
adc
xor
retf
test
inc
mov
jnp
pop
xchg
stos
sub
(bad)
test
dec
jo
ins
ins
leave
loope
dec
stc
xchg
xor
js
mov
pop
iret
in
fsub
cli
shl
push
retf
scas
or
push
push
repnz
outs
mov
inc
sub
adc
or
cmp
test
mov
xor
cld
inc
cmp
push
jo
cmp
dec
mov
jl
ud1
(bad)
jmp
cmp
mov
mul
jo
fnstcw
sbb
enter
push
neg
outs
das
shl
adc
rol
fsub
fadd
hlt
or
cmps
scas
inc
cmp
into
sti
cmp
repz
and
aad
dec
add
fs
mov
dec
push
test
push
shr
mov
add
jno
shl
aaa
sbb
mov
sar
dec
or
cs
out
lds
adc
movs
aas
fild
fcomp
mov
or
dec
sub
jg
cld
push
loopne
stc
mov
(bad)
into
ins
enter
jmp
mov
mov
or
or
mov
repz
test
sub
in
test
ret
mov
mov
out
mov
call
dec
cmp
xchg
sub
xchg
ret
mov
dec
test
xchg
loope
dec
into
cmps
(bad)
cmp
cld
mov
or
cld
sbb
add
arpl
jns
xlat
fdivrp
ss
movs
and
test
stos
or
aaa
push
les
mov
jo
(bad)
shl
cmp
jb
inc
sbb
loopne
mov
pop
in
dec
xchg
cdq
cmps
in
js
aam
lods
cmp
out
lods
or
aaa
xchg
and
movs
sbb
iret
enter
or
outs
inc
dec
outs
hlt
mov
nop
ins
dec
xchg
and
das
dec
dec
xor
pop
xchg
clc
or
pop
cmp
das
adc
mov
jecxz
ret
imul
cdq
clc
inc
div
test
cdq
cmps
test
aad
jb
loopne
mov
lods
mov
sub
mov
xor
sbb
(bad)
js
mov
outs
out
lock
xor
xchg
adc
adc
pop
sbb
ds
mov
out
out
xor
jl
pop
mov
arpl
call
mov
xchg
cmp
push
push
cdq
xchg
bound
inc
or
adc
sahf
es
or
pusha
sbb
(bad)
stos
leave
xchg
xor
pusha
aaa
call
push
or
mov
xor
enter
mov
jecxz
dec
adc
gs
add
adc
nop
fxtract
test
adc
xor
push
sbb
sbb
xchg
xchg
adc
pop
jecxz
cld
cld
mov
ja
pop
bnd
ja
test
jg
imul
retf
adc
and
adc
pop
cmps
mov
mov
enter
cmp
aam
mov
clc
add
cli
fistp
or
ror
dec
jbe
jmp
lock
lahf
pusha
loopne
addr16
std
add
mov
cdq
scas
out
and
dec
std
pop
loopne
sub
sbb
pusha
inc
cmps
jle
adc
sahf
loop
(bad)
xchg
push
inc
mov
cmp
enter
cmp
stos
in
cs
int3
ss
mov
cs
pop
fwait
aas
sub
cwde
ret
xor
add
push
mov
dec
test
pop
jns
arpl
or
int
inc
stos
(bad)
pop
jbe
add
cmp
mov
shl
out
loopne
mov
test
cwde
bound
xor
movs
std
(bad)
xchg
aas
call
add
adc
or
stos
lock
mov
fwait
test
inc
(bad)
jmp
push
sbb
and
out
jnp
in
jge
cmp
sbb
cld
leave
xor
pop
mov
mov
push
mov
aam
mov
movs
push
fnstenv
push
add
cli
dec
sbb
(bad)
jmp
mov
pop
jb
aas
mov
mov
movs
mov
mov
stos
push
jne
jp
mov
sub
hlt
(bad)
xlat
mov
add
mov
mov
jns
adc
out
mov
idiv
(bad)
xlat
shr
int
test
pop
loope
fsub
pop
jb
mov
minps
cmp
jle
jp
out
and
jae
jge
cld
mov
adc
and
sti
repnz
adc
test
fsub
mov
inc
or
jo
jae
inc
mov
jb
jge
in
xor
lahf
dec
rcr
pop
adc
ins
out
lds
in
call
mov
inc
lds
popa
or
or
scas
stos
ret
aam
outs
adc
aam
jmp
int
mov
loopne
mov
jle
popf
adc
sub
test
inc
or
dec
leave
inc
cli
movs
push
rcl
aad
lds
popa
dec
inc
fscale
or
xchg
popf
and
test
jl
ret
icebp
inc
pop
jae
push
xlat
(bad)
movs
push
popa
cmp
xchg
cwde
push
pop
sbb
push
mov
mov
push
hlt
mov
sub
xor
jl
xor
adc
pop
jne
mov
(bad)
inc
fdiv
jnp
outs
cmp
or
aam
lahf
add
outs
lahf
add
mov
mov
sbb
mov
mov
jg
inc
pop
pop
xor
mov
cdq
pop
out
(bad)
das
inc
or
shl
in
call
cmp
inc
pop
and
iret
lods
popa
outs
shl
xchg
test
cmp
lods
mov
loop
xor
push
cmp
xchg
cli
jne
or
test
xor
scas
mov
in
xor
pop
div
add
stos
push
inc
jno
and
xor
adc
xchg
xor
icebp
or
sub
dec
jecxz
movs
pop
ja
sub
fnstenv
scas
push
pop
sahf
repz
dec
aaa
pop
inc
adc
mov
cwde
gs
add
jns
ret
jecxz
fsubr
dec
sub
inc
call
and
mov
push
sbb
ja
jmp
(bad)
ins
inc
ret
sbb
sbb
pop
cmps
test
daa
mov
(bad)
pop
cli
mov
mov
xchg
test
fiadd
nop
pop
dec
inc
xor
inc
push
arpl
aad
xchg
sbb
les
jno
scas
sbb
mov
rol
addr16
add
test
sub
pop
dec
push
out
add
pushf
adc
or
cmps
out
xchg
out
cmp
push
es
and
rcl
adc
ins
mov
xchg
test
adc
mov
mov
ss
jne
sbb
dec
pop
dec
or
mov
inc
add
(bad)
cmp
in
pop
inc
sbb
xor
add
movd
jg
push
test
and
je
aam
rol
int
and
sub
mov
push
pop
jecxz
mov
cmc
add
loop
cmps
push
cmp
das
jne
mov
repz
inc
mov
in
test
stos
(bad)
mov
mov
popa
jns
(bad)
clc
imul
imul
cmp
les
and
shl
add
int3
stc
mov
push
ins
push
ins
xchg
sub
push
test
(bad)
repnz
add
jb
mov
in
jae
jmp
into
pop
in
imul
sub
ss
jae
fidivr
inc
popf
sub
inc
pusha
xor
mov
sub
bound
enter
push
jb
cmp
stos
mov
sub
sub
aad
jne
loopne
xlat
inc
out
add
hlt
mov
mov
(bad)
dec
outs
mov
lock
cmc
gs
dec
mov
push
leave
xlat
inc
push
in
mov
fwait
movs
mov
add
jae
push
aad
sub
les
mov
cmp
retf
xor
mov
mov
inc
xor
sbb
mov
clc
jbe
div
mov
xchg
push
cmp
xor
inc
pop
in
aam
xor
data16
mov
cmps
xchg
inc
mov
push
fadd
xchg
bound
sub
push
cmps
cmps
fnstcw
sbb
dec
das
hlt
add
scas
inc
inc
dec
cmp
push
or
jo
imul
out
repz
adc
popa
cli
adc
mov
aas
sub
and
or
stc
xchg
sbb
push
sub
jne
test
lahf
dec
fs
fisttp
popf
dec
sbb
retf
inc
xor
ret
cmc
sti
mov
inc
in
jo
cmp
bound
pop
div
sub
nop
adc
push
pop
repnz
fucompp
nop
outs
add
mov
inc
xor
ret
jmp
retf
sahf
sbb
xchg
xchg
ror
jecxz
xchg
dec
cmp
loop
jp
cmp
xchg
int
(bad)
div
int3
(bad)
mov
xchg
mov
jnp
int
jb
repz
push
push
push
mov
cmp
int3
bound
adc
mov
ins
jnp
jecxz
repnz
inc
out
cld
mov
aaa
das
push
jmp
mov
sar
dec
outs
inc
movs
xchg
out
(bad)
into
jecxz
std
imul
inc
adc
shl
pusha
leavew
adc
or
pop
lods
inc
xchg
test
nop
xchg
stos
frstor
int3
mov
dec
loope
mov
mov
pop
or
cld
dec
cmp
ror
mov
out
add
pop
adc
fistp
loop
mov
daa
jbe
push
sbb
fcom
bound
pop
add
cmp
add
rcl
loop
adc
add
pop
jg
movs
stc
jmp
(bad)
mov
xlat
inc
or
jle
dec
arpl
or
stos
push
test
sbb
adc
mov
xor
sahf
in
and
shl
imul
es
sahf
or
fdiv
loope
outs
stos
hlt
or
mov
(bad)
pop
(bad)
and
xor
call
ja
sub
jecxz
cmp
inc
scas
inc
pushf
mov
sbb
pop
dec
xchg
test
pop
lock
icebp
pusha
cmp
(bad)
(bad)
repnz
inc
(bad)
hlt
xor
add
jmp
push
mov
dec
vphadduwq
movs
das
and
mov
pop
pushf
fdivr
sub
push
dec
aad
fsubr
call
punpcklbw
sub
int3
xchg
movs
cmps
retf
mov
out
mov
fcom
in
or
cwde
push
fimul
mov
xchg
in
out
ror
fld
xchg
fstp
ins
das
adc
mov
aam
scas
(bad)
inc
or
cmps
or
mov
ror
into
je
jge
and
dec
sbb
fcomp
dec
movs
not
(bad)
push
xchg
shr
lods
shl
cmps
pop
scas
push
aam
into
cmp
retf
jnp
scas
test
movs
imul
rcr
mov
sbb
adc
stos
mov
not
nop
sub
(bad)
test
pop
bound
leave
cdq
jb
rcl
add
mov
sub
jmp
(bad)
push
or
in
aam
and
cmp
frstor
call
outs
or
mov
dec
jl
pop
xlat
inc
daa
retf
add
pop
xchg
cdq
stos
and
sbb
mov
repnz
mov
sub
or
retf
shl
scas
lock
movs
and
mov
jmp
and
fnstcw
xchg
xor
dec
push
cmps
mov
or
into
mov
jnp
and
xor
popa
sbb
jl
popa
push
imul
test
shl
cmp
xor
sbb
inc
call
inc
bound
mov
xor
aam
test
out
pop
jmp
inc
lahf
call
jae
lock
cmc
sti
fs
gs
ficom
mov
pushf
int
sub
push
imul
push
lahf
jmp
retf
mov
xchg
shl
push
rcl
cmp
test
sbb
mov
push
in
stos
xor
mov
dec
fidivr
adc
jmp
cmp
pusha
inc
jmp
call
out
in
aad
ror
xor
inc
jbe
jne
scas
jge
cwde
cld
xchg
rcl
je
adc
lds
iret
adc
vorps
sbb
cmovge
jns
cmp
outs
fwait
aas
out
loopne
push
pop
mov
les
jl
inc
cdq
dec
xor
xchg
xor
ins
mov
rcr
js
pop
in
(bad)
imul
outs
enter
ret
jns
test
sbb
push
(bad)
jmp
xlat
jne
jle
call
jno
das
jmp
mov
jmp
pop
imul
lahf
mov
ja
pushf
dec
and
xor
push
dec
push
xor
push
xchg
hlt
jb
repz
ret
cs
jnp
pop
ss
movs
fstp
daa
ret
shl
(bad)
pop
lods
aam
call
(bad)
repnz
jo
ins
mov
cmp
(bad)
shl
dec
xchg
(bad)
shl
or
mov
cmp
popf
push
sub
xchg
jno
loope
shr
rol
(bad)
bound
sbb
sar
and
sbb
jo
and
test
scas
inc
inc
jmp
test
shl
dec
inc
jae
mov
vpextrw
lds
sub
and
(bad)
and
lahf
or
movs
loope
sti
mov
lahf
and
xchg
dec
cmp
xchg
dec
or
inc
outs
(bad)
cld
pop
mov
jno
out
pop
cmps
inc
dec
xchg
into
sti
mov
and
xchg
je
in
xor
sub
(bad)
push
retf
in
jae
into
mov
repnz
sbb
dec
test
push
enter
repz
cmp
mov
mov
adc
(bad)
test
push
push
bound
push
inc
mov
inc
adc
adc
loope
jle
les
movs
xor
lds
cmp
adc
shl
in
push
jb
ja
(bad)
arpl
push
ret
cmp
cmc
jge
rol
daa
push
push
adc
adc
or
sub
fs
xchg
sub
mov
jmp
(bad)
scas
dec
call
mov
add
loopne
sbb
jb
(bad)
std
xchg
jnp
pop
mov
add
ins
gs
nop
movs
pop
push
cmp
cld
xchg
add
jb
rcl
mov
inc
and
inc
mov
cmp
loop
cwde
push
jo
enter
leave
or
test
(bad)
push
adc
jns
mov
push
sbb
jns
dec
pop
jb
sbb
cmp
inc
cmp
loopne
in
addr16
fistp
(bad)
test
lea
and
dec
jnp
push
iret
rol
cmp
sbb
icebp
mov
ds
pop
rol
lds
(bad)
push
mov
inc
inc
or
sub
push
adc
dec
pop
dec
loopne
out
stc
pop
mov
mov
push
outs
mov
mov
scas
jmp
xchg
gs
xlat
into
lods
idiv
int3
arpl
enter
rcr
cli
add
in
mov
cmp
sub
aad
mov
dec
cmp
jae
gs
ret
(bad)
jb
push
add
xchg
push
test
in
sbb
lods
iret
fs
or
sbb
out
lods
mov
pop
mov
cdq
cmp
mov
xchg
cmp
ret
mov
and
or
sub
lods
jnp
ret
rcl
test
dec
lahf
mov
(bad)
int3
push
loope
jmp
outs
fxam
xchg
dec
mov
aad
lock
pop
xor
(bad)
fwait
scas
add
stc
push
mov
pop
xchg
pop
clc
fist
jge
retf
rol
sub
mov
pop
xor
pusha
push
jnp
ins
jns
sbb
movs
bound
inc
xchg
icebp
sub
movs
mov
into
test
mov
seto
add
xchg
fisubr
test
imul
ins
mov
and
sti
mov
push
push
cmp
pop
popa
fisttp
cmp
mov
int3
or
ins
xlat
mov
cli
jl
rcl
add
repz
(bad)
imul
sub
fcomp
xor
xchg
sub
cli
sbb
sbb
lds
pop
sub
push
in
aam
xor
mov
mov
ret
fdivp
or
fwait
int
or
jnp
mov
ret
push
cmp
fisub
fucomi
enter
retf
sbb
jbe
push
pop
or
pop
rcl
int
stos
out
fs
fwait
mov
ror
add
cmc
lods
add
gs
jnp
lods
xor
(bad)
mov
(bad)
imul
dec
mov
aaa
cmp
add
outs
std
or
mov
jge
outs
jo
js
outs
mov
repz
ss
inc
jecxz
lods
add
pcmpeqb
or
shl
test
sub
call
nop
aam
xchg
movs
or
mov
ja
mov
pop
sub
into
shl
push
add
and
dec
jp
das
and
xchg
xor
(bad)
jecxz
pop
xchg
sbb
gs
mov
mov
mov
push
and
cmp
nop
(bad)
ror
ror
lock
mov
dec
aad
ins
dec
in
jbe
mov
fcom
add
fcom
arpl
jl
repz
loopne
cwde
dec
inc
sub
into
mov
mov
dec
nop
xor
xor
dec
jbe
and
cld
sbb
mov
jb
cmc
or
mov
(bad)
ins
adc
pop
jge
popf
out
jp
cmc
xor
gs
in
cmp
outs
data16
push
xchg
adc
not
push
mov
xor
aad
or
test
inc
iret
jae
int3
pusha
mov
out
xchg
int3
add
in
jbe
imul
iret
sbb
mov
push
jmp
pop
sbb
stos
clc
fild
out
call
push
mov
add
fs
test
sti
mov
xor
popf
dec
cli
ss
add
push
sbb
fdiv
cmp
adc
dec
test
pop
pop
cwde
js
inc
lods
xlat
xchg
xchg
into
or
add
mov
stos
pop
inc
adc
adc
cld
mov
pop
and
repnz
lds
mov
inc
stos
adc
stc
adc
cmp
hlt
pusha
rcr
jae
adc
ss
jns
repz
mov
mov
xlat
xor
daa
add
add
arpl
push
add
mov
imul
or
lods
mov
fbld
jbe
pop
call
or
adc
popa
lock
sbb
shl
test
scas
stos
or
add
push
rcl
inc
aad
in
or
pop
dec
(bad)
fisttp
imul
imul
bound
jbe
dec
add
fisttp
dec
sbb
cdq
jecxz
cli
and
push
out
mov
ins
into
sub
sti
fistp
and
push
mov
xchg
ds
in
je
pop
cmp
cmps
(bad)
popa
cmp
ret
or
aam
push
add
cmp
mov
pop
mov
sar
sub
jge
hlt
lahf
push
loop
in
xchg
jmp
and
mov
push
mov
push
pop
fistp
lods
push
mov
dec
dec
push
fadd
or
sbb
cmp
lds
mov
out
jbe
enter
mov
gs
dec
or
push
and
movs
jno
jmp
sub
sar
aad
clc
mov
aaa
cli
cmp
push
shl
push
pop
sub
movs
cmp
test
xor
or
cmp
ror
lock
in
add
popf
and
mov
pusha
jg
mov
pop
sbb
scas
inc
cmp
or
add
rcr
outs
lahf
xchg
cmp
ds
jge
mov
rol
jg
adc
sbb
retf
adc
jo
and
mov
(bad)
pop
repnz
js
cld
in
ja
push
pushf
aam
or
jns
je
data16
and
stos
dec
xor
ror
aam
ror
(bad)
dec
ja
bound
popf
mov
mov
cld
mov
ret
jbe
sbb
pushf
and
into
mov
mov
xor
inc
retf
hlt
push
or
sbb
stc
stos
stc
mov
fidiv
jl
cmp
xchg
push
mov
mov
pop
dec
cmp
inc
xchg
xor
iret
jg
loopne
aaa
aas
jnp
push
imul
ss
mov
and
cld
mov
in
rcr
add
hlt
outs
jns
mov
add
ret
add
inc
cmc
aas
xchg
adc
adc
call
pusha
shrd
lock
(bad)
xchg
jo
cs
mov
dec
xchg
sbb
call
xor
push
adc
sbb
jns
test
mov
inc
movs
mov
cmp
dec
les
pop
leave
ror
cmc
pop
xchg
jl
test
test
xor
xchg
push
add
inc
lods
jmp
fild
adc
arpl
dec
and
mov
das
mov
stc
inc
xor
rcl
jbe
into
ror
fidivr
and
cmps
or
aam
iret
sbb
iret
jp
imul
mov
xchg
push
(bad)
xor
or
push
or
jg
sbb
sbb
mov
pop
aam
adc
dec
jp
jle
les
std
loop
mov
outs
mov
ins
add
xchg
mov
idiv
add
aaa
inc
xor
sub
dec
leave
rdpmc
pop
pop
das
adc
or
xchg
aaa
adc
outs
cmp
ror
xchg
call
xor
or
xchg
stos
or
mov
hlt
leave
nop
mov
jle
and
popf
adc
mov
fbstp
mov
and
jae
enter
dec
cmc
add
adc
fimul
dec
mov
mul
adc
stos
push
dec
jp
ret
into
sub
repz
pop
int3
dec
dec
push
cdq
fcmovu
movs
fiadd
sub
lahf
or
movs
mov
clc
lods
jnp
aad
enter
inc
in
mov
in
fsub
or
mov
outs
mov
cmps
in
rcr
fs
sti
imul
stc
mov
mov
pop
stos
in
pop
and
fld
mov
mov
dec
ss
and
sahf
test
out
popa
push
test
je
mov
test
inc
cmp
jb
mov
int3
repz
cld
sub
jl
fdivr
fisttp
push
loop
cmp
pusha
mov
sub
inc
xchg
jle
fistp
daa
fsubp
push
pop
outs
scas
jns
enter
retf
pop
mov
nop
call
inc
sti
add
sahf
int
and
add
xor
adc
outs
daa
add
fld
adc
test
mov
inc
sbb
fisttp
xor
lds
pop
paddq
jecxz
retf
and
mov
sub
in
adc
int
push
pop
aaa
push
gs
aam
std
pand
clc
(bad)
fdiv
cdq
push
test
xor
jbe
mov
pop
add
pop
cmps
jmp
add
ins
fstp
mov
je
mov
test
in
les
sbb
dec
push
pop
jl
push
add
into
call
push
jl
or
addr16
jmp
daa
addr16
mov
mov
inc
call
aam
jns
fst
out
and
jge
mov
jbe
push
call
out
retf
sub
cmp
dec
pop
mov
retf
cmc
mov
in
pop
mov
test
mov
sub
inc
add
cmp
dec
(bad)
push
sbb
lock
push
adc
pop
iret
ds
cwde
xor
fwait
pop
cld
pop
inc
test
push
in
fsub
(bad)
mov
jl
push
lds
rcl
xor
sbb
and
lods
mov
mov
cmp
or
adc
pop
push
div
sub
mov
lock
fdiv
ror
cdq
(bad)
pop
int
xchg
loope
lods
aas
ja
push
(bad)
push
cdq
mov
cli
iret
push
(bad)
xlat
or
mov
or
mov
neg
into
sbb
clc
adc
jge
movs
repz
mov
ss
call
int
pop
into
pushf
fdivr
pop
cmp
pushf
jmp
fdivr
into
dec
repnz
cmps
inc
adc
pop
push
inc
data16
adc
loopne
fiadd
sub
sbb
(bad)
sar
or
xchg
pop
add
in
inc
test
xchg
pop
imul
pop
(bad)
in
or
rcr
dec
push
mov
add
outs
pusha
call
in
push
neg
ins
dec
js
jp
jecxz
jl
cld
mov
ins
sbb
push
xchg
mov
into
xchg
fld
popf
aas
jno
lds
push
loope
hlt
je
nop
dec
movs
add
xchg
test
dec
leave
cmp
or
test
sbb
push
out
mov
shl
sub
pop
inc
retf
inc
pop
dec
push
mov
xor
(bad)
sbb
fsub
pop
fwait
cwde
test
sbb
scas
in
xchg
or
jg
imul
gs
fstp
adc
or
test
cmp
mov
cmp
retf
adc
mov
cmp
outs
cmp
jl
mov
jmp
scas
pop
push
add
lods
ja
and
lods
inc
fsub
in
arpl
mov
rcl
xlat
mov
mov
jecxz
dec
push
loopne
je
in
fld
push
xlat
out
xor
into
imul
inc
cmp
xchg
in
cmp
sbb
stos
jne
dec
dec
mov
jcxz
jb
arpl
dec
mul
and
sbb
cdq
jp
das
xor
jle
or
not
dec
and
fmul
ds
loopne
pushf
cmp
iret
jmp
lods
cmp
cmp
int3
push
or
pop
sbb
sub
push
jmp
dec
outs
popf
mov
fs
pop
minps
lods
pop
mov
scas
lods
or
or
mov
scas
pop
mov
pop
ja
push
test
(bad)
push
sbb
not
jmp
out
mov
or
(bad)
int3
pop
xchg
mul
popa
mov
mov
ret
loope
mov
pop
dec
jmp
or
and
jp
int
ja
div
and
push
pop
in
std
addps
repz
cmp
test
(bad)
aaa
dec
push
cmp
pop
mov
cmps
aad
sbb
aam
xlat
add
and
adc
std
xor
imul
icebp
add
and
cdq
mov
inc
mov
jl
rol
popa
movs
xor
sar
es
lock
(bad)
js
mov
mov
clc
jbe
jge
lods
jmp
out
jo
icebp
jo
sbb
push
cmps
in
xor
fisttp
xchg
iret
scas
ret
inc
mov
cmps
out
dec
sbb
in
dec
hlt
push
movs
cmp
jns
mov
and
inc
ret
add
push
cmps
outs
repnz
sbb
adc
fwait
xchg
ret
(bad)
mov
dec
pop
sbb
cmps
add
in
pop
(bad)
aam
xchg
enter
int3
loop
or
addr16
mov
jecxz
add
aad
dec
imul
jl
mov
mov
add
outs
cdq
fimul
icebp
mov
jmp
add
fnsave
scas
fsub
dec
in
(bad)
hlt
pushf
(bad)
call
(bad)
and
sbb
pop
xor
or
ret
inc
mov
aam
inc
repz
cli
mov
xor
pop
fcomi
mov
sahf
or
aad
add
pop
xor
lds
xchg
cmp
xlat
ret
add
aam
outs
push
out
out
rol
into
data16
mov
and
imul
or
and
cmp
inc
out
and
sar
aaa
adc
int
das
test
cmp
xor
cwde
mov
movs
(bad)
cmp
jne
icebp
fistp
adc
pop
je
pop
ds
xor
add
ret
cwde
inc
xchg
cld
add
add
retf
fld
mov
iret
cld
outs
psrlw
xchg
mov
or
add
stc
ss
add
jae
iret
xor
test
pop
mov
cmp
pop
jle
mov
shr
adc
cli
cmp
cmc
fst
scas
add
scas
loop
xor
pop
dec
and
sbb
icebp
dec
jno
mov
push
loopne
js
in
and
jne
lods
loop
dec
pop
and
jbe
jne
aas
add
xor
fcom
fwait
aaa
cmps
into
push
push
repnz
test
jle
or
out
sbb
and
mov
movs
in
sbb
jbe
mov
mov
dec
hlt
mov
xchg
mov
je
push
dec
pop
movs
lods
pop
lods
dec
pop
leave
mov
xchg
xchg
jmp
in
xchg
or
add
mov
push
fsubr
lods
inc
and
(bad)
fnsave
lock
or
mov
and
sti
sti
stos
popa
or
ret
push
and
jge
mov
and
lods
push
cmp
dec
fdivr
and
mov
mov
mov
mov
xchg
jp
ins
outs
mov
pop
stos
xor
leave
lahf
into
sbb
push
xlat
shl
ins
lea
mov
in
push
mov
gs
mov
mov
mov
fstp
add
mov
pop
jg
adc
inc
push
rcl
stos
adc
(bad)
aaa
push
cs
and
loop
test
mov
clc
adc
cmp
jg
pop
mov
push
cmp
es
and
scas
mov
pusha
std
jg
outs
pop
ins
ss
pop
push
mov
sbb
retf
add
loop
inc
jg
cld
jno
jb
lds
xlat
add
jmp
ficom
xor
mov
arpl
pop
jno
jp
dec
pop
outs
in
xor
das
mov
dec
call
dec
movs
shl
fisub
sub
pushf
call
pop
leave
cmp
mov
sub
scas
or
cwde
pushf
and
xchg
xchg
push
shl
data16
stc
pop
fmul
scas
mov
xor
mov
call
add
aad
fwait
push
jmp
add
out
stos
sub
cli
xlat
std
sub
ds
fidivr
test
(bad)
std
ror
inc
dec
aaa
xchg
fucomip
pop
mov
inc
fucomi
test
pop
es
sub
ins
in
jmp
mov
mov
xchg
adc
imul
mov
and
jge
test
movs
cmp
mov
loop
(bad)
jno
test
cs
jle
rcl
gs
mov
jge
shl
fistp
into
in
mov
lods
jl
cmp
push
rcr
lods
mov
adc
push
jne
inc
pop
(bad)
mov
mov
dec
nop
push
mov
test
push
aad
fmul
mov
mov
push
ss
(bad)
push
adc
(bad)
or
push
pop
gs
inc
test
out
imul
add
out
sbb
jle
xchg
sub
mov
jbe
std
and
(bad)
fnstsw
retf
mov
inc
fistp
int
(bad)
push
stos
xchg
lods
dec
aam
lsl
pop
inc
pop
dec
(bad)
imul
cld
or
jb
and
fist
sub
call
leave
mov
stos
scas
hlt
rcr
push
rcr
push
call
sub
push
mov
popa
ret
pop
sbb
ins
lea
cld
inc
xor
adc
ret
dec
out
clc
iret
dec
push
lods
pop
out
jp
pusha
jae
ins
add
std
loopne
jecxz
sti
dec
sbb
das
jno
in
iret
dec
ror
mov
dec
mov
movs
fst
(bad)
push
sub
cmps
popa
popf
push
not
into
add
mov
push
in
inc
xlat
stc
inc
jbe
jno
test
loopne
mov
fimul
test
inc
std
mov
push
fistp
movs
stos
mov
test
int3
jo
test
aad
loopne
ss
mov
mov
mov
sub
in
cmps
lods
outs
jns
popf
xchg
lahf
and
mov
mov
stos
and
inc
sbb
mov
aaa
loopne
in
sahf
out
sbb
mov
or
test
gs
fsubr
mov
cmc
pop
adc
mov
arpl
aam
(bad)
fbstp
lea
inc
dec
stc
xchg
cmp
xor
clc
shl
dec
mov
shl
sub
cmp
sub
dec
dec
les
(bad)
repz
imul
loope
mov
mov
push
dec
in
outs
(bad)
aad
dec
mov
cmp
mov
repz
jne
mov
push
pextrw
aas
push
icebp
clc
mov
inc
mov
(bad)
test
add
(bad)
jnp
jno
jl
xchg
push
mov
adc
mov
movs
push
imul
and
xlat
mov
pop
leave
inc
cmp
add
ret
inc
jp
xchg
iret
ror
es
in
and
jmp
add
xor
adc
pop
mov
mov
sbb
xchg
xchg
(bad)
adc
adc
or
(bad)
imul
pop
dec
adc
push
fiadd
jecxz
loopne
ficomp
xchg
jb
sub
ret
mov
jae
outs
std
cs
push
shl
repz
mov
mov
js
xlat
inc
mov
lea
clc
xlat
pop
cmc
push
call
push
push
mov
mov
sti
add
sbb
neg
xchg
dec
cdq
cmp
xchg
jbe
pop
jl
mov
fwait
ds
inc
jmp
sahf
fs
stos
imul
out
(bad)
std
xlat
dec
test
push
mov
nop
fdiv
repnz
aas
mov
mov
inc
ds
inc
push
mov
inc
std
cli
mov
mov
push
pop
das
mov
pop
mov
jmp
dec
cmp
and
ds
outs
shr
movs
test
gs
psllw
psubb
jl
xchg
out
mov
dec
stos
mov
xor
loop
jg
cmps
imul
stos
shl
or
mov
dec
mov
dec
push
xor
movs
adc
cmps
push
push
cwde
pop
test
pop
aaa
test
mov
jnp
inc
int
push
xchg
jg
ret
jmp
movs
jbe
jge
jne
popa
dec
xor
aad
jl
(bad)
jo
lods
rcr
clc
movs
(bad)
aam
mul
popf
inc
xlat
and
xor
out
repnz
outs
test
in
aam
cdq
fbstp
pop
sub
fidiv
pushf
pop
push
mov
pop
add
pop
push
pop
pop
inc
cmp
inc
retf
int3
dec
sbb
mov
mov
xor
push
neg
popa
mov
xor
mov
cmp
mov
cs
stc
push
dec
pop
add
add
and
mov
cmp
dec
xor
cs
or
mov
sbb
inc
or
inc
jle
pop
inc
pop
mov
adc
mov
sbb
cs
mov
mov
fimul
xor
test
cld
fs
out
in
and
pusha
inc
and
push
sbb
sbb
sbb
fst
test
or
loop
mov
pop
inc
sbb
in
pop
pop
out
cs
xchg
test
jns
popa
repnz
inc
inc
adc
dec
call
mov
sub
out
push
clc
dec
and
into
mov
das
mov
inc
(bad)
xchg
ficom
xor
jge
test
aaa
cmps
cmp
in
fsub
or
shl
push
popa
imul
lds
push
fldenv
add
jns
dec
or
push
xor
in
mov
jmp
jp
cmp
xor
push
movs
aas
adc
fdivr
scas
jle
xor
push
sbb
sbb
mov
loop
pop
mov
out
cmp
std
mov
rcr
xchg
mov
lock
adc
mov
pop
shl
and
inc
inc
pop
in
popw
adc
sub
jl
dec
inc
cs
out
std
test
jo
dec
xchg
lds
or
jecxz
mov
jae
lock
(bad)
lds
xchg
neg
add
in
cld
movs
(bad)
fcomp
pushf
add
loopne
mov
retf
push
add
lahf
push
xchg
cmc
mov
push
push
outs
lods
movs
push
add
ins
xchg
sub
rcl
movs
or
sbb
and
cmp
dec
mov
out
mov
imul
icebp
sar
in
cwde
es
jl
adc
cli
push
xor
popf
mov
mov
lods
add
cmp
into
xchg
(bad)
sub
pop
in
mov
mov
ror
popa
dec
mov
dec
invd
xchg
shl
(bad)
cmc
jo
adc
cmc
or
into
jp
and
jns
inc
dec
mov
inc
out
xor
jb
(bad)
daa
je
sar
and
(bad)
pop
xchg
mov
mov
ds
imul
imul
bound
aad
sbb
xchg
popa
or
int
jmp
pusha
dec
je
stc
and
push
jo
pop
scas
outs
mov
push
sub
inc
mov
xchg
fmulp
pop
pop
and
outs
mov
ret
mov
inc
mov
inc
fs
adc
jo
mov
jge
fcom
mov
inc
adc
dec
imul
cmp
in
sbb
dec
inc
mov
pop
xchg
adc
sti
call
cmp
and
(bad)
sub
test
push
cmps
popa
fld
pusha
mov
mov
mov
ins
lods
div
xchg
out
ins
pop
into
retf
add
icebp
xchg
dec
movs
stos
xchg
aaa
cmp
(bad)
xor
js
lods
lds
iret
push
jg
jmp
(bad)
mov
mov
or
dec
and
mov
push
sahf
add
mov
(bad)
retf
fucomp
idiv
nop
js
mov
jge
adc
into
push
xchg
or
adc
stos
push
push
sti
cmp
or
dec
mov
rcr
enter
arpl
add
in
dec
adc
mov
inc
mov
cmp
loope
and
cmp
call
js
xor
jp
sbb
sub
dec
(bad)
stos
in
mul
and
inc
xor
movs
(bad)
dec
xchg
push
mov
clc
loop
lock
push
xchg
xchg
fwait
call
mov
jne
sub
or
cli
js
fst
aad
inc
adc
jge
rol
xchg
xchg
and
fst
inc
aaa
aas
lahf
and
inc
jno
(bad)
(bad)
ss
adc
push
in
lods
fwait
xchg
dec
frstor
cdq
mov
neg
push
jmp
add
jecxz
pusha
jno
sub
arpl
inc
nop
sti
and
sti
call
rol
movs
xchg
nop
mov
aaa
outs
pop
pushf
add
jge
cs
lds
mov
std
inc
adc
mov
mov
mov
cmp
adc
dec
xchg
clc
mov
arpl
popa
std
int3
adc
mov
cwde
fstp
dec
add
inc
(bad)
call
rcl
cmp
test
lds
jmp
add
sahf
and
push
repnz
call
sbb
pop
cs
adc
mov
mov
adc
dec
frstor
sahf
cdq
jle
sub
sbb
cmp
xchg
in
xor
pop
or
push
cli
xlat
jo
xor
jl
stos
mov
mov
add
mov
mov
dec
shl
(bad)
xchg
(bad)
xchg
jne
pop
mov
cdq
(bad)
or
push
push
mov
inc
xor
ins
push
mov
pop
cmp
shl
sub
dec
es
(bad)
movs
and
ds
pop
daa
jmp
mov
cld
xchg
cs
inc
jb
pusha
ds
aaa
in
dec
adc
sub
fmul
(bad)
jmp
jns
into
push
int
test
outs
test
mov
pop
psllw
sbb
cld
ins
jne
pop
inc
mov
ret
test
aaa
push
mov
enter
xlat
movs
jge
int3
pop
outs
inc
cmp
aad
fdivrp
push
inc
sbb
xchg
lods
xor
inc
fnstsw
je
inc
cmp
in
loop
dec
sbb
jbe
cmp
sahf
repnz
mov
sti
cmp
dec
cmp
jbe
sub
repz
pop
pop
or
add
push
popa
jg
xchg
mov
or
inc
push
fsubr
push
jns
pop
clc
xchg
pop
sbb
je
in
pop
cmp
push
xchg
mov
mov
cdq
stc
mov
jnp
xor
call
jno
add
call
ins
aam
cdq
add
in
mov
and
dec
and
xlat
cmp
jmp
aaa
out
jb
push
mov
iret
ret
fistp
enter
add
dec
dec
dec
dec
jns
fsub
dec
ret
jo
ret
pop
sub
cmp
ficom
add
cld
push
(bad)
hlt
lds
sub
mov
lahf
pop
fs
mul
mov
ins
call
frstor
xchg
adc
adc
and
je
push
inc
iret
mov
add
movs
pop
dec
push
or
jae
ds
outs
push
inc
add
imul
outs
push
loop
inc
dec
out
jge
lock
dec
and
repnz
les
mov
pop
call
(bad)
jne
cmp
push
js
mov
cmps
movs
addr16
call
mov
stos
jle
loopne
mov
sub
add
mov
pop
in
xlat
lahf
mov
int
jge
mov
dec
imul
adc
fidiv
enter
mov
mov
jmp
adc
add
pop
js
cld
cmp
inc
pop
shr
outs
mov
xchg
or
mov
mov
xor
add
dec
cs
mov
add
push
les
push
xor
and
mov
and
push
cmp
sub
mov
stos
scas
mov
fisubr
cmc
pop
jae
sub
loop
mov
(bad)
jns
xor
mov
sbb
cmp
cmc
or
std
mov
adc
outs
mov
repz
mov
dec
scas
adc
or
push
shrd
mov
ja
ins
lea
scas
cmp
aad
mov
adc
and
adc
cli
mov
es
push
(bad)
out
lods
aaa
jle
and
out
or
sub
push
and
push
cmp
cwde
jae
call
mov
sub
cdq
retf
ret
hlt
je
xor
movs
outs
ss
ins
pop
and
mov
retf
or
cmc
ja
mov
cmp
pop
test
and
dec
lea
adc
ins
scas
sbb
inc
lock
addr16
and
retf
jns
lea
xchg
mov
in
dec
loop
pusha
popf
mov
fbld
pop
push
pusha
jns
xor
add
adc
stos
mov
mov
adc
push
dec
pop
mov
pop
jmp
jecxz
sub
jl
inc
inc
stos
repnz
js
into
fs
adc
push
hlt
je
bnd
ja
int3
popf
lock
shl
add
or
iret
mov
idiv
cs
pop
stos
cld
imul
lods
inc
cmp
mov
mov
push
mov
mov
jae
inc
repz
cwde
cmp
cmp
or
push
and
push
sti
(bad)
or
pop
pop
jb
inc
jmp
mov
xor
bound
aad
adc
mov
std
mov
movs
dec
in
inc
imul
push
push
sub
sub
cmc
xchg
in
dec
fld
les
js
je
jne
pushf
sub
add
je
inc
cdq
inc
dec
push
dec
(bad)
adc
jmp
dec
(bad)
xor
dec
cld
mov
or
dec
xor
inc
(bad)
cmp
xor
pop
es
inc
pop
cmc
xchg
sar
push
and
mov
mov
add
cwde
mov
jg
nop
inc
push
xchg
imul
ins
xor
push
push
les
lea
pop
or
aas
jge
mov
addr16
jbe
mov
mov
out
mov
out
popf
mov
mov
sbb
xor
addr16
enter
mov
adc
into
(bad)
dec
daa
push
jle
mov
es
hlt
xchg
cmp
pushf
pop
gs
jmp
inc
pop
jl
ficomp
xor
mov
or
mov
fucomip
xchg
push
xor
aam
jmp
(bad)
out
lahf
lods
cld
cmp
add
push
adc
mov
icebp
inc
scas
(bad)
sbb
pop
popa
mov
addr16
pushf
jo
mov
and
cmc
pop
and
mov
outs
jp
push
sbb
pusha
or
sti
dec
call
pusha
lds
clc
mov
bound
mov
inc
mov
fidiv
lods
out
inc
shl
out
cmp
mov
add
xchg
neg
xchg
pop
dec
mov
jecxz
addr16
shr
in
ins
daa
ins
xor
loope
add
hlt
xor
xor
xchg
cli
fisub
add
imul
mov
add
imul
leave
inc
push
jl
hlt
pop
scas
push
jg
mov
jno
push
pushf
mov
mov
movs
or
jnp
or
outs
jbe
or
push
fld
add
outs
movs
jg
mov
mov
push
repz
sbb
push
cmp
test
mov
add
pop
(bad)
pop
out
push
and
test
xlat
test
xor
int
jnp
dec
les
push
jl
sbb
scas
in
xor
test
or
arpl
test
imul
xor
loope
inc
int
mov
adc
push
mov
and
xor
jb
fadd
(bad)
pop
sti
fbstp
std
push
cld
sti
shr
enter
sar
pop
cmp
fst
stc
mov
and
jl
aam
inc
clc
sti
dec
add
xchg
jnp
or
pop
sar
xlat
sub
ret
or
sbb
js
gs
dec
and
mov
jmp
test
sub
movs
repnz
mov
inc
jns
jb
cdq
(bad)
pop
cmp
or
or
repnz
loope
sbb
fisub
lods
je
mov
into
sar
mov
sub
pshufw
pop
jb
mov
fsub
iret
jbe
mov
adc
inc
inc
loope
arpl
cmp
aaa
gs
mov
mov
stos
cli
mov
mov
mov
(bad)
mov
aas
test
jae
fnsave
adc
(bad)
sahf
push
fsub
push
inc
and
daa
push
mov
fcmovu
sbb
sbb
pop
inc
push
mov
clc
test
adc
in
mov
imul
sub
pop
dec
cmps
adc
mov
cmp
sub
jp
(bad)
popa
sub
or
cmp
or
int3
sti
sub
das
movs
sbb
icebp
push
push
sahf
xchg
sbb
pushf
dec
aam
dec
cmps
mov
mov
out
in
arpl
mov
ret
ds
fidiv
test
movs
inc
adc
push
(bad)
push
movs
aad
push
jns
loopne
xlat
in
lea
popf
pop
xor
sahf
xor
fld
data16
xchg
std
cdq
xor
dec
cmps
in
(bad)
pusha
and
dec
das
or
imul
sub
sbb
stc
movs
sub
fild
or
mov
popa
and
out
inc
jmp
test
int
movs
jae
imul
test
adc
jb
nop
out
retf
inc
adc
sbb
xchg
out
mov
in
ds
mov
sub
pop
or
test
adc
push
es
pop
stos
or
gs
sbb
lods
dec
out
test
imul
mov
out
jo
cdq
cwde
loop
xchg
fcom
xchg
cmps
cdq
or
sbb
outs
ins
aaa
sub
mov
hlt
mov
inc
out
retf
sti
gs
pop
cs
dec
jl
adc
adc
iret
xchg
or
adc
xchg
jmp
mov
mov
jmp
mov
dec
or
jbe
push
dec
clc
cld
aaa
dec
pushf
mov
arpl
mov
pop
or
loopne
les
mov
cmp
sar
and
pop
test
mov
dec
push
pop
xchg
xor
push
(bad)
int
jle
movs
xlat
enter
mov
pop
sub
xchg
outs
and
xlat
scas
jae
cmc
aad
mov
fcomp
pop
addr16
mov
sbb
xchg
push
xor
pop
sbb
sete
sub
jl
ds
mov
sbb
stc
popf
mov
dec
mov
ja
je
cmc
test
adc
jle
dec
pop
xor
dec
stos
or
aaa
push
es
leave
mov
neg
scas
out
mul
fimul
push
pop
jmp
mov
test
lds
neg
enter
int
xor
(bad)
xchg
(bad)
xlat
mov
shl
mov
(bad)
std
cli
add
not
jne
mov
push
mov
or
lahf
je
and
rcl
in
std
push
out
jno
ja
scas
pop
xchg
or
dec
xor
ins
cmp
jb
mov
pop
and
cld
mov
dec
sbb
mov
push
pop
or
jmp
(bad)
fdiv
xor
adc
ret
stos
push
scas
jle
xchg
mov
dec
mov
push
and
mov
or
jo
add
mov
icebp
sub
shl
movs
or
xor
cmps
sub
scas
cdq
fsubr
cmp
adc
push
mov
int
bound
mov
cmp
push
fs
and
pop
xchg
test
sbb
push
and
icebp
loopne
sti
sahf
iret
lahf
(bad)
stos
imul
out
addr16
int
aam
cmp
ss
push
xor
out
inc
push
jmp
ins
add
sub
pop
adc
(bad)
dec
cld
sahf
movs
(bad)
out
jecxz
je
xor
sbb
push
push
xchg
and
fst
or
fistp
(bad)
es
jl
add
mov
push
fadd
sbb
or
pop
push
sbb
jbe
inc
test
pop
arpl
adc
aas
xchg
in
or
pop
cmps
cli
stos
pop
sub
das
out
scas
in
mov
xchg
in
sbb
mov
out
je
sbb
pop
or
jns
out
retf
sub
dec
mov
push
add
jae
xchg
popf
adc
movs
mov
ja
sbb
(bad)
add
int3
add
and
stos
mov
and
cmp
pop
mov
inc
sbb
mov
into
push
xor
shr
push
mov
js
sub
push
push
ret
xor
shl
js
inc
test
xchg
pop
in
push
jae
ror
sbb
pop
cli
and
lds
sbb
mov
or
std
loopne
inc
(bad)
int3
lock
in
popa
inc
jno
mov
xchg
mov
sub
(bad)
push
enter
retf
rol
jmp
aad
xchg
jmp
fwait
pop
and
sub
add
ss
pushf
mov
stos
(bad)
leave
pop
(bad)
pop
xor
outs
pop
sbb
push
stos
xchg
mov
ret
jecxz
fisubr
clc
lds
jnp
mov
cmps
xchg
sbb
ret
out
mov
cld
push
jne
xor
sub
push
adc
arpl
imul
pop
jmp
and
pop
loopne
movs
mov
pop
pop
das
jb
fstp
mov
push
push
lock
push
jp
jmp
loope
mov
loope
jl
retf
add
enter
mov
adc
adc
cmc
pop
xor
test
xchg
fwait
mov
sub
sbb
mov
daa
imul
jl
pop
lods
nop
mov
dec
xchg
or
int3
xor
push
fwait
stos
in
shl
stc
cmps
les
pop
movs
or
(bad)
jle
scas
das
sbb
or
inc
mov
sbb
push
pop
popf
xlat
int
(bad)
test
or
or
jge
mov
xchg
or
shr
retf
cmp
scas
dec
add
clc
lods
or
xchg
fld
push
shl
mov
mov
call
push
mov
jmp
jnp
pop
jl
mov
mov
dec
(bad)
add
sahf
jbe
fiadd
jmp
cli
ins
test
cmp
xor
and
and
in
mov
stos
mov
outs
pop
movs
sbb
mov
imul
xchg
sub
jmp
pop
or
mov
xor
lock
popf
fbld
icebp
fsub
popa
popa
pop
cld
in
cdq
sbb
and
cmc
dec
retf
push
jns
cmp
repz
pop
fidiv
cmps
mov
mov
jbe
mov
loopne
aam
mov
push
leave
mov
test
(bad)
stos
jo
jmp
push
mov
lock
cdq
mov
push
clc
bswap
cmp
adc
repz
add
sbb
stos
sti
sub
ficomp
loope
lods
jmp
xor
pop
jnp
pop
mov
cwde
loop
hlt
inc
aas
popf
push
leave
int
lea
pop
mov
jb
xor
cmp
xor
in
jmp
adc
push
dec
lea
gs
adc
ficomp
fld
pop
mov
lock
adc
xor
fs
xor
xchg
push
xlat
dec
in
js
sbb
stos
mov
pop
rcl
mov
and
dec
pop
fwait
bound
rcr
enter
std
push
fnstsw
xchg
jg
sub
daa
sbb
fisttp
dec
fld
sahf
mov
pop
dec
or
jp
fdiv
adc
fcmovu
std
imul
mov
push
push
call
mov
or
fmul
pusha
inc
fist
(bad)
mov
setbe
mov
pop
or
test
or
push
xlat
scas
inc
xor
fsub
mov
cmp
pop
mov
cli
add
sbb
lock
icebp
arpl
and
adc
popaw
and
mov
pop
ds
inc
inc
sub
rcl
push
adc
out
out
in
push
dec
xchg
rcr
fwait
xchg
fimul
movs
sub
and
dec
jnp
test
xor
arpl
sub
(bad)
jo
mov
add
(bad)
jge
sbb
inc
push
push
mov
push
mov
dec
iret
pop
(bad)
sbb
jmp
stc
mov
aas
jmp
inc
mov
push
push
xchg
loopne
sub
mov
sti
inc
lahf
pushf
int
inc
mov
je
rol
mov
test
jne
xor
sti
sub
lds
div
test
or
test
dec
jnp
out
inc
(bad)
bound
mov
mov
push
mov
xor
cmc
cli
jmp
jg
mov
xchg
sti
(bad)
iret
and
das
dec
jl
lea
(bad)
lea
fmulp
gs
jp
mov
inc
out
mov
or
dec
sbb
cmc
jg
push
das
popf
(bad)
sub
mov
(bad)
xor
xor
test
cmps
dec
add
cmps
stos
cmp
cli
jb
(bad)
js
mov
xchg
mov
jmp
out
sar
or
ret
mov
cwde
cmps
imul
inc
shl
pop
jmp
cmp
or
sti
daa
add
mov
push
xor
ret
inc
repnz
push
adc
(bad)
mov
xchg
adc
shr
inc
repz
sub
adc
cmp
add
sub
fcmovne
mov
lock
push
mov
mov
lods
jns
gs
popa
pop
sub
gs
dec
jle
xchg
mov
mov
mov
mov
lea
push
mov
test
and
mov
jmp
lea
lods
ficom
pop
jl
jnp
movs
sbb
dec
or
or
aas
test
dec
mov
pop
add
sbb
cmp
sbb
nop
vphadduwd
ins
(bad)
fcmovu
daa
xchg
push
cli
push
les
pop
sub
mov
pop
bound
sbb
inc
pop
fisttp
jne
test
clc
(bad)
inc
sar
or
or
xchg
adc
mov
(bad)
cmp
rcl
sub
push
sub
enter
(bad)
out
and
jae
rol
mov
dec
mov
fcmovnu
mov
or
leave
push
mov
fcom
jns
mov
jg
mov
leave
retf
stc
int3
sub
adc
fbld
pop
jmp
nop
mov
icebp
jg
fs
inc
xchg
pop
nop
movs
and
dec
int
sub
aam
stos
adc
adc
test
adc
stos
fisubr
(bad)
movs
cmp
and
clc
sub
fwait
leave
mov
std
mov
push
sbb
dec
inc
ror
movs
push
jmp
call
xlat
shl
jge
cmp
imul
leave
aaa
mov
xchg
ins
mov
jnp
or
jmp
mov
sbb
jmp
hlt
mov
retf
call
push
pop
dec
mov
mov
push
aad
fistp
cmp
bound
xor
push
and
mov
sub
clc
cmp
cli
dec
inc
(bad)
popa
mov
jmp
jno
int3
repz
or
jge
dec
test
pop
xor
ror
aas
inc
rcl
pushw
xchg
fistp
mov
pop
cmp
add
stos
test
ja
cmps
jge
inc
or
mov
das
test
mov
xchg
js
or
mov
jp
out
cmps
in
inc
shl
pop
mov
jecxz
cmp
xchg
push
jbe
pop
inc
push
dec
jbe
(bad)
push
inc
dec
into
xchg
add
pusha
enter
add
or
imul
test
mov
cmps
adc
int3
mov
out
jecxz
clc
push
push
jl
add
or
pop
rcl
mov
jecxz
xchg
xor
mov
cmp
ins
sbb
lods
pusha
mov
sbb
mov
neg
cmp
mov
repz
push
in
push
lods
popa
sub
inc
inc
push
ins
loope
ins
jne
and
repnz
and
xchg
call
ret
xor
addr16
inc
lods
fst
(bad)
ffreep
add
(bad)
or
mov
fist
push
fbld
je
mov
pop
xor
pusha
cdq
mov
lds
and
pop
or
or
out
mov
and
push
stos
push
int3
sti
iret
out
rol
stc
je
dec
test
add
jecxz
jge
adc
and
movs
std
mov
push
lds
or
int
test
mov
rcr
push
idiv
aad
js
hlt
popa
fmul
add
push
push
rol
push
or
inc
dec
mov
ror
dec
xor
mov
and
aas
lods
sub
sbb
cmc
popa
js
scas
stos
push
sub
repz
adc
mov
xchg
lds
fild
inc
int
retf
aas
mov
pop
retf
sub
jp
mov
push
lea
jmp
(bad)
xchg
gs
jmp
(bad)
mov
mov
mov
mov
lods
inc
rcl
retf
xlat
lock
out
pop
xlat
xor
adc
out
fistp
bound
mov
adc
aam
sub
cdq
jae
es
mov
cs
mov
cs
push
bound
dec
cdq
jae
int
sub
xchg
inc
mov
ja
repz
push
sbb
sub
jo
add
lods
sbb
cli
pushf
mov
mov
push
pop
mov
aaa
cli
cmp
sub
clc
scas
pop
add
mov
cwde
dec
push
jb
sub
(bad)
out
mov
(bad)
jle
pmaxsw
pop
lods
jl
cmps
sar
iret
je
dec
and
and
xor
and
mov
or
shl
aaa
adc
scas
push
jns
push
dec
gs
mov
sbb
imul
mov
rol
movs
int3
(bad)
mov
mov
sub
jnp
jmp
call
out
push
mov
jae
loopne
jle
lea
nop
icebp
mov
cmp
inc
push
pop
sbb
loope
out
pop
pop
adc
sbb
pop
push
retf
lahf
pop
js
cmp
fsub
xchg
fwait
and
mov
xor
jbe
data16
mov
cld
xchg
nop
pop
mov
arpl
sbb
pop
fwait
mov
inc
push
out
ins
push
cmps
push
cmps
out
mov
sub
mov
push
inc
mov
inc
(bad)
cld
mov
les
xchg
repz
out
or
xor
aas
mov
pop
jbe
cwde
retf
les
jno
dec
jnp
jb
aad
jmp
xlat
pop
jl
or
fist
sbb
call
pushf
push
ja
and
ins
and
jb
shl
xchg
pop
push
(bad)
icebp
shl
xchg
add
mov
(bad)
(bad)
movs
pop
inc
cmp
in
inc
outs
cmp
mov
inc
inc
cmp
dec
dec
dec
add
out
icebp
out
test
ret
push
bound
out
sub
pop
or
(bad)
call
cmp
sbb
gs
in
arpl
movs
jmp
(bad)
mov
inc
inc
imul
cmp
inc
xor
mov
lahf
pop
jmp
dec
jp
push
inc
and
xchg
clc
ss
cmp
cmp
call
mov
sbb
icebp
mov
fist
and
inc
mov
sub
js
push
dec
je
ror
daa
jge
fmul
mov
or
dec
dec
sbb
(bad)
jnp
div
les
and
data16
cli
adc
cmp
dec
cmp
cmp
and
in
sub
loop
jmp
pop
jle
dec
xchg
inc
aam
retf
pop
sub
or
das
or
std
inc
xchg
std
sbb
lods
push
mov
das
mov
xchg
movs
ret
(bad)
lahf
jo
lds
sar
fld
inc
in
movs
repz
retf
cld
aad
not
ja
sar
xor
outs
xchg
adc
(bad)
adc
mov
sub
push
stc
push
nop
push
hlt
mov
rcr
cs
or
mov
out
xor
sbb
push
cmp
sbb
push
jb
shr
and
(bad)
neg
jle
lods
sbb
or
pop
js
(bad)
sub
jmp
neg
shl
inc
fst
and
jbe
push
fstp
popf
xor
adc
dec
leave
jg
jns
js
shr
ret
add
scas
push
pop
mov
leave
jmp
stc
dec
push
jmp
rol
out
sub
sbb
and
mov
xchg
scas
jle
in
push
test
rcl
push
xchg
sar
fidiv
sub
inc
mov
sub
mov
pushf
(bad)
lods
jg
push
mov
or
(bad)
mov
xchg
ds
popf
clc
add
mov
inc
push
outs
add
pop
mov
aad
jg
and
scas
in
clc
xor
sbb
sbb
mov
(bad)
fisttp
lods
lock
stos
(bad)
or
mov
pop
jle
in
mov
in
xchg
(bad)
lea
mov
push
leave
fsubr
loope
popf
adc
int3
lods
xor
popf
push
out
(bad)
test
lock
in
repz
test
jns
push
jp
sahf
add
inc
mul
fwait
nop
dec
mov
shl
mov
pop
in
jne
add
adc
gs
inc
idiv
hlt
stos
cmp
mov
das
and
repnz
adc
sub
adc
xchg
movs
lods
cmp
xor
jae
push
xchg
outs
bnd
mov
sub
and
lahf
not
int
jp
jl
adc
cmp
jb
hlt
jae
adc
fwait
sar
pop
popa
mov
nop
push
push
add
arpl
rcl
pop
mov
mov
inc
push
pusha
stos
xchg
xor
mov
ds
cs
dec
sub
ja
xor
(bad)
jo
lods
jmp
loopne
push
imul
ins
fcomp
add
pop
(bad)
bound
(bad)
scas
outs
sti
psubq
stos
clc
sub
scas
arpl
push
ret
sahf
out
sar
enter
daa
iret
cld
push
cwde
imul
xor
or
adc
mov
jmp
jo
jne
or
xchg
cmovs
push
stos
adc
jb
ror
pop
das
dec
mov
jmp
pop
sub
dec
inc
jne
xor
inc
cmp
adc
mov
imul
ins
loope
cwde
xlat
stc
and
cmps
pusha
push
mov
xchg
xchg
or
leave
jp
aaa
pop
stos
mov
xchg
hlt
dec
loop
fistp
test
mov
sar
xchg
cs
mov
mov
mov
loope
rcl
xor
add
in
leave
push
mov
mov
in
dec
(bad)
pusha
mov
fimul
ins
sbb
xchg
sub
or
sub
fsub
lds
jle
jns
adc
jmp
xor
outs
div
pusha
and
ror
mov
sub
push
push
jae
adc
push
imul
sbb
enter
in
loope
xor
xchg
daa
sbb
(bad)
push
pushf
xchg
xchg
dec
dec
push
pop
or
out
xor
shr
mov
or
add
xchg
inc
aam
jae
jns
pop
mov
mov
arpl
fs
fisub
sub
inc
fisub
pop
jge
pop
(bad)
xchg
sbb
xchg
inc
push
daa
sub
cmc
pusha
fild
cmps
pop
jns
movs
lahf
jb
push
xor
ror
ins
xchg
daa
xor
pop
lods
sub
mov
pop
jl
test
inc
pusha
ins
add
mov
sbb
sbb
aad
push
push
adc
aas
loope
push
dec
add
pop
mov
push
test
mov
cmp
call
lods
mov
push
dec
ret
iret
xchg
repnz
scas
push
mov
call
std
aad
ds
or
or
jge
xor
adc
or
fist
sbb
std
lea
dec
cmp
popf
adc
mov
ja
gs
mov
hlt
cmp
shl
adc
sub
ins
mov
aam
mov
pop
xor
mov
mov
mov
pop
les
dec
shl
cmp
in
add
retf
test
out
ds
jg
push
movs
lds
mov
rcl
xchg
repnz
push
in
xchg
fdiv
cmp
pop
cmp
imul
xor
or
pop
rcl
cmps
jle
and
push
(bad)
and
pop
pop
adc
jg
dec
mov
stc
xchg
adc
jmp
outs
mov
mov
mov
xchg
mov
in
ins
ins
int
mov
cmp
sbb
add
les
inc
retf
xchg
test
ds
rcr
xor
fs
fs
xchg
dec
jp
xchg
lods
call
loopne
fistp
js
xor
data16
ds
and
sar
jp
dec
pop
movs
or
dec
xchg
xchg
and
push
fstp
icebp
mov
test
adc
push
add
aam
or
in
out
push
retf
(bad)
ficomp
adc
test
xchg
mov
enter
mov
jecxz
pop
sbb
push
loop
(bad)
and
inc
movs
add
jmp
fldcw
stos
inc
daa
pop
mov
adc
scas
(bad)
mov
push
int
push
pop
xchg
leave
shl
push
sbb
mov
aam
cmp
call
dec
sub
sub
xchg
push
clc
inc
cmc
jno
pop
shl
or
sub
push
sub
int
movs
in
jp
jo
pushf
shl
lahf
into
cmps
(bad)
push
aam
pop
outs
dec
push
ficomp
add
dec
int
cmp
pop
std
shl
xchg
repnz
ins
xchg
pop
mov
adc
test
jbe
dec
cld
inc
or
adc
xor
jbe
mov
mov
dec
scas
ds
aaa
push
fisttp
fwait
pop
movs
push
push
adc
mov
std
inc
push
ds
cmp
cmp
push
jle
fnstsw
cmp
cmp
out
movs
mov
cld
dec
jbe
scas
fiadd
ret
jecxz
aam
push
mov
pop
cli
jb
mov
dec
mov
leave
clc
fadd
cld
mov
pop
cmc
fisttp
dec
jo
mov
repnz
(bad)
sar
adc
or
mov
daa
add
pop
pop
jnp
ja
js
(bad)
mov
ss
push
out
dec
xlat
jge
out
mov
cli
ja
sar
sub
ret
enter
stos
xor
das
push
sub
adc
arpl
push
stos
cmp
movs
jmp
push
jns
daa
and
test
ss
call
inc
and
xchg
dec
sbb
sub
push
mov
sub
into
movs
cmp
je
push
mov
cmps
jb
xor
and
jnp
sub
push
(bad)
fsub
xor
jb
das
sub
dec
push
jecxz
lods
xor
fdiv
iret
jne
pop
pop
inc
mov
fnsave
jb
inc
pop
sub
dec
in
call
repnz
(bad)
xchg
pop
dec
sbb
jnp
mov
xor
pop
stos
pushw
pop
pop
shl
add
pop
es
fstp
(bad)
dec
mov
push
daa
cs
pop
lods
add
push
inc
sub
clc
xchg
ficom
add
mov
jp
jae
test
(bad)
mov
and
addr16
push
sbb
data16
jno
icebp
inc
cwde
cmp
(bad)
sti
mov
pop
xlat
jb
popf
(bad)
push
imul
add
sub
(bad)
sub
mov
not
mov
int
sub
xor
adc
mov
ins
rol
psubusb
pop
ins
stos
jmp
stos
fdiv
(bad)
iret
add
inc
mov
sub
movs
push
loopne
aaa
mov
nop
cs
mov
adc
xor
aaa
ins
(bad)
ja
je
push
ja
inc
xchg
fisttp
push
loope
push
inc
push
nop
outs
mov
mov
dec
adc
ja
adc
cli
mov
mov
sub
enter
cmp
ret
aam
ins
dec
mov
mov
adc
(bad)
retf
mov
shr
cmp
loopne
adc
rcl
les
sub
cli
xor
popa
add
pop
jo
inc
inc
sub
xor
pop
mov
sbb
in
mov
repz
lods
(bad)
cli
dec
out
or
lahf
jle
sbb
or
jecxz
aaa
and
popa
cwde
or
es
pop
push
mov
push
mov
cmp
cmp
ds
jne
rcr
mov
ret
inc
cmps
mov
pushf
outs
mov
cmp
dec
xchg
mov
push
mov
xchg
call
aam
stc
mov
add
xor
xchg
mov
(bad)
mov
adc
rcr
jnp
sbb
xor
movs
pop
fwait
in
retf
cmp
aad
rcr
jb
cmp
pop
cdq
scas
jo
dec
mov
out
inc
cmc
cdq
fiadd
stos
movs
and
mov
cld
mov
pop
ja
xor
add
xor
mov
lods
push
test
or
dec
xor
jmp
pop
xchg
mov
sbb
and
mov
cmps
xchg
dec
adc
dec
ret
lea
push
sbb
hlt
add
mov
mov
or
and
add
cmc
jmp
inc
fbstp
add
jl
fld
sbb
xor
jo
or
cmp
ret
pop
(bad)
cmp
dec
mov
inc
lea
push
inc
sub
test
sbb
stos
mov
mov
(bad)
leave
mov
and
push
sar
and
inc
test
pop
xchg
jecxz
mov
movs
mov
(bad)
xor
cs
adc
call
sub
pop
xor
fnstcw
jge
mov
imul
nop
std
dec
mov
data16
stos
lock
in
movs
fucomip
jb
sti
mov
mov
mov
inc
(bad)
out
push
shr
bound
cmps
jnp
or
add
repz
inc
aad
(bad)
push
jae
pop
popa
mov
sub
test
xchg
pusha
fxam
xchg
push
mov
adc
ret
test
ss
sub
and
test
pop
sbb
pop
addr16
push
cmp
jo
sub
retf
call
or
mov
lock
sbb
mov
repnz
fdiv
or
into
inc
and
mov
cmps
push
adc
sbb
stos
shl
mov
jp
and
cwde
jne
pop
add
ins
cli
in
popf
mov
ficomp
mov
in
sahf
sub
neg
fiadd
xchg
add
dec
movs
fiadd
retf
push
mov
pushf
outs
pop
aas
(bad)
out
push
scas
push
sbb
pop
dec
dec
scas
xor
xor
not
or
lahf
shr
(bad)
inc
in
iret
mov
dec
dec
std
pushf
test
dec
sti
imul
sub
sub
pop
push
mov
xchg
xchg
(bad)
aaa
cmc
rol
movs
add
sti
sub
push
test
sbb
ja
(bad)
cmp
xor
mov
add
jb
aaa
push
xchg
retf
sub
mov
sbb
push
dec
mov
fadd
inc
es
loopne
pop
and
ja
adc
(bad)
bound
popf
out
out
icebp
cmp
test
adc
and
mov
pusha
mov
or
or
adc
dec
retf
stos
scas
mov
stos
jne
push
cwde
lea
add
cmp
inc
jg
retf
outs
int
xchg
or
repz
pop
ret
add
lock
lods
push
retf
xchg
mov
mov
icebp
add
mov
(bad)
adc
and
and
sub
pop
adc
dec
mov
mov
out
int
imul
inc
xlat
xchg
and
int
outs
hlt
repz
ror
fmul
sub
hlt
xchg
sar
and
dec
test
xchg
fsubr
add
in
lds
jb
sbb
or
pusha
push
cmps
jb
dec
loop
inc
fiadd
adc
xchg
push
cmc
jl
scas
mov
inc
fidiv
mov
and
cmp
ret
popf
das
imul
das
jb
aas
lea
stos
jle
rol
sub
ins
sti
dec
sbb
xchg
mov
(bad)
jmp
in
sbb
mov
xor
lds
js
addr16
fsub
fisub
mov
ins
mov
int
addr16
or
arpl
sahf
(bad)
out
xor
pop
mov
sub
js
sbb
inc
les
(bad)
xor
mov
pop
lss
push
cmp
xor
push
sub
and
aas
mov
mul
mov
call
(bad)
aad
mov
and
adc
adc
adc
mov
movs
ja
fdivr
or
shl
test
sahf
push
dec
cmp
mov
jle
lods
xchg
dec
pop
shl
pop
(bad)
lahf
jae
mov
arpl
mov
aam
xchg
and
fsubr
xor
loop
inc
ret
jb
pusha
pop
lods
sub
xchg
int
sar
ds
dec
fstp
pop
js
mov
lods
call
fadd
dec
lock
add
loope
std
stc
das
xor
pop
aad
dec
loope
jl
cmc
(bad)
fdiv
enter
pusha
or
cmp
call
and
or
xor
clc
inc
imul
retf
inc
fst
mov
mov
cmps
add
cmp
repnz
std
mul
pop
xchg
mov
mov
adc
and
rcl
(bad)
jecxz
add
cmps
dec
out
and
pop
fld
arpl
push
push
mov
mov
sbb
jmp
or
aas
cmc
cmp
pop
scas
lds
sub
je
dec
iret
out
pushf
mov
jns
pop
mov
outs
and
xchg
dec
jne
jno
jns
or
mov
xchg
and
sub
fcomp
(bad)
xchg
pop
rcr
jmp
jmp
add
jmp
cs
cmp
sub
out
adc
xchg
repnz
div
mov
xchg
aam
lods
iret
sahf
cmp
jnp
or
pop
adc
lahf
jecxz
pop
add
cmp
and
push
inc
ds
inc
(bad)
xchg
shr
push
jg
mov
popf
jne
dec
pop
das
or
inc
pop
call
jecxz
gs
push
mov
scas
ret
xchg
jno
jns
movs
dec
push
mov
jle
sahf
cld
gs
inc
push
sbb
push
sbb
xlat
adc
test
xor
ss
retf
arpl
pop
mov
xchg
jle
push
call
aas
loop
outs
ret
fist
lea
nop
call
inc
(bad)
out
push
repnz
adc
mov
cmp
daa
pop
mov
cmp
ss
mov
add
repnz
mov
xchg
mov
jbe
mov
jne
cld
sahf
jno
sub
mov
sar
push
sub
lds
or
mov
xor
fld
fisubr
pop
movs
push
shl
pop
mov
xchg
lds
pop
(bad)
sbb
inc
jp
mov
cmp
xchg
dec
or
fist
mov
inc
in
stc
movs
fbld
sbb
xchg
jo
retf
sahf
enter
lea
ins
sub
xchg
add
push
fmul
ror
sub
cmp
pop
stos
lds
cmp
sahf
rol
xchg
pop
fcomp
(bad)
rcl
mov
ins
pop
stos
popa
fistp
(bad)
movs
frstor
in
jmp
mov
and
bound
adc
cmp
xor
xor
aad
jg
mov
add
fcmove
jge
add
fdivr
inc
mov
fwait
or
pop
add
cmp
pop
ret
pop
adc
sti
lock
dec
in
pop
dec
push
into
cld
xchg
stos
(bad)
icebp
data16
xchg
shr
addr16
mov
sub
fiadd
int
pop
jmp
fs
jo
call
cmp
dec
pop
and
sbb
pop
fldcw
xlat
loopne
bound
push
(bad)
mov
mov
aad
in
jmp
and
popf
test
ins
pop
popf
and
(bad)
loopne
in
pop
jmp
pop
lock
stc
sub
cmp
pop
dec
ds
test
cld
push
(bad)
xchg
sbb
jmp
lock
xor
inc
jg
(bad)
cli
mov
mov
popa
pop
movs
sub
in
sahf
enter
ficomp
adc
not
adc
xor
sar
hlt
(bad)
cli
or
retf
dec
fs
jb
cmps
jbe
cmc
cs
lahf
stc
jmp
mov
push
push
into
pop
fbstp
mov
mov
rol
cmp
imul
jle
dec
dec
adc
cmps
adc
lds
stos
add
(bad)
call
mov
inc
lahf
and
push
loopne
sahf
mov
mov
push
fldcw
mov
nop
inc
dec
stc
add
cmp
sub
sahf
inc
fild
pop
xchg
mov
mov
cdq
enter
adc
sahf
xor
pop
mov
fdivr
jmp
adc
jo
mov
cs
in
adc
jge
fidivr
shl
add
dec
xlat
pop
push
jnp
xor
outs
arpl
jg
push
mov
loop
inc
and
stc
pop
jge
or
jmp
mov
cwde
popf
pop
fisttp
mov
pop
rcr
add
jmp
dec
ss
xchg
pop
rcr
add
jl
xor
nop
mov
adc
ret
mov
(bad)
test
fild
ja
je
mov
dec
push
es
jge
and
adc
or
lods
das
es
or
jns
cmp
aad
hlt
int3
xchg
add
mov
cmps
dec
ret
dec
pop
aam
inc
xchg
aam
inc
ins
gs
jge
loopne
loope
rcr
int3
aam
mov
mov
pop
push
std
mov
sbb
pop
adc
popf
inc
xchg
into
retf
inc
adc
xchg
and
ins
adc
sub
scas
mov
test
add
and
aam
inc
sub
arpl
scas
jns
mov
arpl
push
sbb
mov
dec
inc
out
sbb
push
sub
xchg
loopne
call
test
clc
sbb
ins
fcomi
test
hlt
jp
sbb
ja
(bad)
adc
jmp
add
sbb
push
jecxz
pop
mov
mov
popf
inc
ret
xor
lock
enter
sbb
jmp
cmc
dec
(bad)
int
mov
outs
push
mov
mov
aas
enter
lods
mov
in
ins
inc
mov
loopne
clc
dec
sbb
jb
push
test
mov
inc
adc
cmc
sti
and
jo
dec
retf
aad
jle
out
cmp
pushf
mov
mov
dec
je
(bad)
fbld
mov
mov
mov
(bad)
loop
test
add
jne
cwde
pop
sbb
in
imul
(bad)
pop
addr16
and
or
(bad)
shl
cdq
mov
sbb
ds
scas
mov
ds
popa
xor
mov
shl
jnp
int3
gs
fisubr
dec
clc
shl
enter
in
xlat
and
and
sub
or
cmp
cmps
movs
sub
enter
xchg
test
std
ins
mov
aad
mov
jmp
adc
sub
pop
push
dec
sar
push
cli
(bad)
or
xchg
xlat
pop
mov
or
cdq
fwait
test
jecxz
jns
push
imul
push
sub
in
cmc
mov
jb
sti
stos
sbb
pop
clc
ds
or
int
out
pop
shl
cmps
mov
mov
popa
xchg
in
pop
test
cs
or
imul
jmp
ret
dec
icebp
adc
lea
test
inc
lea
shl
repnz
es
fidiv
lea
and
enter
mov
xor
shl
ss
pop
pop
aaa
and
aas
pop
out
xlat
push
pushf
cmp
pusha
inc
jl
icebp
push
jge
xchg
popf
gs
call
sub
adc
lock
sub
retf
xchg
dec
mov
xor
psrlq
push
xchg
mov
(bad)
fsub
int
out
pop
arpl
push
xchg
adc
inc
pop
out
mov
out
lods
cmp
shl
(bad)
(bad)
mov
mov
and
enter
dec
stc
sbb
ficomp
mov
xor
dec
or
int
add
push
pusha
mov
mov
(bad)
jmp
sub
stos
or
aam
pop
jle
mov
(bad)
lea
or
mov
sub
scas
inc
hlt
aam
jb
jo
and
(bad)
xchg
xchg
lea
dec
mov
(bad)
fs
xchg
int
pop
sbb
inc
inc
or
les
in
leave
push
mov
inc
adc
fild
adc
add
aas
neg
adc
dec
iret
mov
test
movs
dec
push
repz
mov
hlt
aas
dec
adc
popf
fisttp
enter
adc
add
xchg
je
mov
sub
mov
push
xchg
sbb
jmp
mov
retf
fmul
popf
(bad)
pop
nop
int3
push
ror
(bad)
cdq
push
retf
fst
loop
and
inc
in
hlt
cmp
sub
lods
(bad)
(bad)
int3
sbb
ret
fs
ja
icebp
push
pop
and
sbb
jmp
scas
test
ins
push
out
cwde
mov
ficom
jle
aam
mov
jns
fwait
xchg
xor
sbb
scas
mov
jmp
imul
adc
add
add
add
and
stc
(bad)
inc
scas
out
mov
xor
mov
pop
cmp
retf
jge
inc
mov
mov
xchg
push
fbstp
in
fimul
fsub
push
rcl
or
mov
fdivr
mov
dec
xor
dec
dec
jbe
mov
and
pop
jmp
loop
add
scas
pop
loop
jb
mov
scas
sbb
repnz
movs
jp
aad
push
pop
fnstenv
movs
or
call
scas
(bad)
(bad)
bound
(bad)
call
mov
push
push
nop
push
adc
adc
(bad)
rcl
add
mov
ds
aad
sub
mov
cli
mov
enter
pop
and
es
std
sar
mov
push
scas
pop
adc
icebp
aad
mov
popf
cmp
test
in
lea
cli
dec
xchg
cmc
jns
adc
popf
mov
(bad)
stc
mov
xchg
test
rol
outs
or
fnstcw
out
into
push
and
cmp
repz
cs
mov
sub
fwait
cmps
mov
shr
in
inc
ror
xor
test
pop
pop
imul
push
out
cmp
in
les
push
xchg
gs
or
mov
or
lahf
mov
mov
pop
inc
daa
xchg
mov
pop
mov
adc
imul
ja
mov
push
cld
stos
mov
nop
fwait
cmp
cld
loop
aam
test
je
pop
call
into
xchg
mov
or
(bad)
std
push
sbb
test
dec
and
or
push
mov
outs
enter
repnz
jns
(bad)
add
xor
sbb
retf
push
jns
mov
shr
stc
xor
dec
lods
retf
repz
loope
(bad)
int3
add
and
jmp
jmp
pop
ficom
fidiv
aam
pop
cmp
jnp
xor
mov
push
lock
inc
jge
push
jp
adc
bnd
or
arpl
inc
adc
jg
add
and
fcmovu
loope
lahf
dec
mov
pop
jb
push
xor
push
xchg
popaw
jno
cwde
add
cmp
lahf
das
clc
loope
sub
mov
push
inc
movs
mov
ficom
push
sub
pop
aam
push
adc
mov
jp
int
jmp
cmp
jnp
and
in
push
mov
xor
pop
jmp
ins
xor
cmp
pop
repnz
mov
aaa
ret
shr
std
sti
outs
outs
sbb
cdq
adc
ins
in
or
call
mov
jne
and
push
inc
loop
mov
jno
mov
ds
adc
fldcw
dec
mov
pop
mov
out
enter
add
int3
and
icebp
int3
inc
jnp
lods
repz
mov
sub
pop
in
jno
xchg
mov
inc
pop
test
sahf
pop
pop
sar
pop
inc
inc
and
dec
mov
lods
mov
pop
mov
and
cmp
bswap
pusha
mov
addr16
enter
mov
cmp
mov
fisub
(bad)
adc
xchg
(bad)
loopne
ja
xor
cmp
lock
mov
add
mov
test
mov
call
mov
adc
sub
fsubr
push
push
push
sub
xchg
pop
adc
mov
xchg
pop
sbb
push
mov
pop
mov
pushf
jmp
test
clc
pop
and
dec
movs
mov
pop
xchg
icebp
(bad)
mov
mov
push
sbb
xchg
(bad)
and
pop
lea
cmp
sub
xchg
sub
push
jbe
cmc
mov
inc
mov
mov
jns
stos
retf
or
(bad)
fidiv
xor
sub
or
mov
aam
repnz
out
addr16
xor
ret
out
aaa
into
mov
scas
ins
fld
or
xor
aaa
inc
iret
jae
xchg
dec
sub
icebp
fmul
stos
sub
in
fistp
cmp
pop
je
inc
add
sar
shl
xchg
pop
sub
ficomp
inc
(bad)
aad
sub
cmp
adc
push
mov
cli
cmp
dec
and
stos
imul
mov
(bad)
adc
std
and
jle
loope
mov
and
jae
push
dec
dec
push
loopne
call
push
push
sbb
mov
gs
(bad)
mov
gs
sub
cmc
adc
test
pop
bound
xchg
(bad)
cmp
cmps
les
mov
push
shl
je
mov
push
dec
test
stos
test
pop
scas
sahf
lahf
jae
pop
mov
lods
adc
or
cli
jecxz
retf
push
js
les
cdq
(bad)
cdq
fdiv
cmp
lds
jnp
push
pop
ret
call
inc
loopne
in
popa
(bad)
lahf
mov
daa
stos
fimul
jg
inc
inc
pop
cmp
imul
and
or
js
jp
(bad)
outs
and
lea
cmp
cmps
jg
or
sar
mov
mov
(bad)
ss
sub
pop
or
push
mov
jmp
popf
pop
adc
mov
jnp
call
popf
add
xor
faddp
push
mov
cdq
pop
jp
rcl
int
sbb
cmovbe
or
leave
test
jecxz
cmps
call
movs
adc
aas
mov
enter
mov
xchg
sar
or
xlat
sbb
repnz
outs
int
jge
jmp
push
pop
retf
mov
outs
add
xchg
xrelease
lock
stos
and
fist
fwait
ss
call
and
mov
or
and
sti
inc
and
sbb
inc
mov
jmp
(bad)
pop
inc
sbb
lds
ins
and
push
nop
pusha
(bad)
push
xchg
or
mov
stos
and
fsub
out
fist
ror
and
lock
cmc
popa
push
jle
inc
or
fadd
mov
or
sbb
test
imul
ss
cmp
xchg
fsub
(bad)
in
mov
pop
mov
fsin
or
xlat
jl
adc
xlat
nop
push
ficomp
cmp
mov
and
outs
arpl
popa
push
adc
mov
cld
idiv
mov
daa
xchg
ror
sahf
sbb
(bad)
cld
hlt
stos
mov
mov
mov
cmp
cmp
cmc
lds
or
push
jmp
pop
loope
adc
and
aaa
(bad)
icebp
push
lea
inc
adc
jmp
(bad)
and
cmp
outs
gs
out
mov
pmaxub
pop
pop
rol
mov
aad
dec
jl
mov
fcom
cmp
std
fiadd
xchg
jb
mov
mov
mov
int3
imul
cmps
mov
fstp
jmp
(bad)
sub
sub
push
lahf
movs
jmp
adc
jnp
imul
pop
lea
cmp
sbb
(bad)
xchg
imul
jmp
movs
mov
fild
push
pop
add
mov
hlt
cwde
loopne
sub
lahf
cmps
xchg
out
and
push
popa
(bad)
mov
adc
inc
test
movs
pop
lods
js
xchg
aad
mov
cmp
mov
push
shr
push
sbb
or
pop
sub
iret
inc
cmp
das
bound
loope
push
cmp
imul
or
sbb
push
in
cmp
and
sbb
jle
push
xor
inc
push
sub
cmps
loop
mov
inc
out
(bad)
sub
xor
stos
pop
xchg
popf
cmp
stc
sbb
cwde
aas
push
xor
xor
inc
add
xor
lahf
lahf
mov
mov
rol
cmp
sub
into
cmp
jle
mov
adc
jmp
cmp
mov
pop
xor
push
cmp
pop
int3
inc
enter
loop
(bad)
aaa
daa
sub
fdiv
jmp
jno
adc
adc
xchg
inc
mov
adc
mov
add
pop
xor
jp
or
lock
ja
ja
pop
dec
jp
sbb
popa
inc
push
pop
test
retf
sbb
cmps
adc
rcr
repz
fidivr
aas
lods
add
dec
ficomp
pop
mov
xchg
stos
mov
retf
and
mov
movs
jo
jmp
loopne
(bad)
mov
scas
mov
sbb
(bad)
add
mov
repnz
push
aam
add
imul
mov
xor
pop
mov
push
imul
and
jmp
jmp
or
fild
pushf
retf
fsub
adc
hlt
call
dec
jp
pop
or
icebp
dec
int3
adc
call
mov
adc
fldcw
ins
in
inc
sub
jo
rol
inc
bound
ss
sbb
inc
das
jns
cmps
push
xor
mov
jg
inc
dec
rol
scas
cmp
nop
sbb
repnz
pop
push
sub
idiv
sbb
sbb
pushf
mov
jmp
mov
mov
fidiv
mov
jae
mov
jno
ret
mov
mov
sub
les
scas
sub
sbb
push
xchg
lock
push
fsub
dec
sub
push
sbb
nop
adc
or
ins
inc
es
test
xchg
mov
xchg
ja
out
mov
rcl
dec
out
hlt
call
retf
in
je
jb
push
outs
js
sub
push
retf
pop
pop
adc
jae
repz
dec
outs
iret
(bad)
mov
inc
pop
mov
mov
add
and
in
jge
out
inc
pop
pop
cdq
pop
loopne
lea
cmps
and
sub
adc
icebp
jnp
retf
sahf
mov
push
outs
adc
xor
jecxz
fimul
cdq
stos
sbb
outs
in
jae
pusha
popf
fdivrp
int3
in
mov
das
nop
xor
xor
and
xor
cmp
(bad)
test
fnstsw
icebp
mov
pushf
icebp
sbb
ss
xchg
jp
inc
(bad)
sbb
jecxz
sar
jmp
mov
repnz
ja
mov
and
or
dec
stos
cmp
out
add
xor
int3
mov
pop
push
pop
add
popa
shl
cs
push
pop
add
mov
(bad)
pop
sub
lock
loopne
xor
or
(bad)
pop
cmp
mov
mov
fwait
iret
fld
xchg
shl
pop
jno
add
out
enter
dec
mov
push
dec
sub
(bad)
das
scas
mov
xchg
mov
out
into
xlat
aaa
xchg
sbb
jg
jnp
ror
adc
in
xor
call
xchg
scas
stos
and
jecxz
into
jns
shl
inc
xchg
je
jge
inc
push
loopne
(bad)
sahf
ja
lea
jl
cmps
rcr
sbb
push
push
adc
shr
pop
xlat
mov
mov
icebp
add
sbb
ja
test
ins
inc
dec
fdiv
inc
js
mov
imul
mov
sbb
adc
imul
rcl
test
outs
popa
test
out
mov
fs
sbb
mov
cmps
pop
add
shr
sbb
dec
aam
lahf
mov
sar
jns
dec
or
cli
xchg
mov
ret
mov
in
xchg
outs
js
ror
arpl
in
or
jne
mov
fcmovnb
sti
adc
push
aam
shl
inc
sahf
int
pop
ss
movs
out
out
push
adc
or
push
(bad)
mov
dec
push
jne
pop
dec
inc
xchg
in
out
and
pop
(bad)
sub
dec
jb
or
out
inc
xchg
fisttp
pop
sub
ja
sub
test
sub
test
ss
xchg
push
pop
mov
jb
adc
enter
mov
sub
loopne
pop
fist
inc
popa
sub
sub
xor
addr16
xchg
fcomp
pop
or
fsubr
add
jl
mov
loopne
ret
mov
jmp
shr
or
add
mov
push
dec
dec
call
ja
add
nop
fist
cmps
popa
pop
inc
std
iret
jge
jg
adc
test
js
(bad)
(bad)
nop
or
pushf
lds
and
ret
ror
and
mov
imul
jmp
jne
pop
jns
jns
sti
ror
test
inc
adc
das
sub
sbb
inc
jbe
pop
fdiv
data16
sbb
fisttp
and
push
retf
pushf
adc
dec
loopne
repnz
movs
mov
sbb
(bad)
mov
test
dec
cmps
mov
test
retf
inc
mov
sub
mov
push
add
stc
icebp
aas
add
xchg
dec
add
dec
add
sbb
dec
fisttp
scas
jmp
pop
and
mov
ret
add
inc
mov
stc
ret
sahf
xor
aad
dec
jecxz
jg
mov
sub
daa
fimul
xchg
cmp
fisttp
pop
mov
(bad)
add
jbe
outs
arpl
sub
mov
gs
mov
and
stos
xor
dec
popa
inc
jbe
loopne
mov
lea
or
xor
xor
mov
fwait
xchg
xchg
xchg
inc
lock
data16
inc
outs
and
mov
cmp
xchg
cwde
das
into
pop
sbb
jg
ror
mov
fadd
xchg
arpl
sub
mov
jl
cmc
(bad)
sahf
outs
ror
repz
push
dec
pop
sahf
push
cmp
pop
out
and
mov
daa
out
inc
mov
jns
mov
mov
in
jmp
cwde
cmp
je
fisttp
jmp
test
ret
mov
pop
in
and
or
cmps
add
ins
sbb
add
ss
ja
popf
cmps
in
mov
dec
ins
cmp
lea
push
mov
xor
sbb
xchg
ret
sbb
(bad)
loopne
xlat
int
loopne
adc
adc
(bad)
push
xor
or
push
mov
test
push
in
clc
pop
(bad)
in
jecxz
cld
inc
mov
push
jno
dec
rcr
movups
inc
mov
addr16
push
push
sbb
fst
loop
cmp
(bad)
mul
in
pop
dec
aas
ins
mov
mov
push
add
ss
xchg
or
push
out
call
imul
jecxz
aaa
xor
inc
fidiv
cmps
and
cwde
fisubr
sbb
not
xor
in
cs
jae
leave
loopne
in
fisttp
cmps
push
mov
jbe
cmps
pop
data16
add
in
xchg
or
mov
jmp
clc
add
test
add
paddusb
push
clc
and
adc
or
push
mov
pop
or
sub
adc
xchg
push
daa
lock
dec
pop
or
push
and
ds
cmp
aad
movs
jmp
pop
sub
cmp
sbb
lods
fcom
jg
push
cmp
ret
cwde
cmp
scas
inc
push
call
das
or
iret
loopne
bound
arpl
out
jno
dec
sbb
add
outs
xlat
arpl
ins
loope
pop
adc
jne
fild
jl
jmp
dec
jb
fild
push
fcmovnb
push
jne
dec
mov
push
aas
test
(bad)
lock
mov
test
les
stos
repz
cmp
xor
popf
xchg
and
xor
sub
jne
adc
xlat
in
dec
jecxz
test
push
cmps
jp
into
gs
imul
fst
inc
test
mov
adc
out
dec
sub
push
pop
js
xor
jns
xor
ss
pushf
and
gs
stos
leave
call
mov
jnp
adc
shl
imul
mov
into
jg
vucomisd
loope
inc
test
and
adc
test
addr16
jg
or
jle
jnp
add
retf
into
aad
mov
cmps
xchg
fistp
fist
jbe
nop
and
mov
pop
add
xchg
out
adc
mov
pop
sti
ret
mov
call
sub
test
out
ret
jb
mov
adc
xchg
pop
int3
sub
mov
cld
adc
(bad)
sbb
add
mov
mov
adc
adc
and
(bad)
xchg
sub
fistp
inc
data16
push
pop
fisttp
gs
dec
mov
and
and
pop
fiadd
imul
in
lock
jecxz
es
ins
jle
push
loopne
lods
sub
mov
push
push
fimul
cmp
movs
mov
mov
dec
mov
pop
xchg
xchg
xchg
popf
cmps
fidivr
les
mov
ja
or
pop
jo
push
ins
and
retf
cmps
mov
and
push
mov
or
pusha
adc
lock
in
lods
cwde
mov
(bad)
push
sar
jne
lds
sbb
out
retf
jbe
mov
push
cmp
add
mov
push
stc
push
jns
test
jae
add
add
push
pop
ret
push
sahf
movs
stos
inc
hlt
pop
fisttp
cs
sbb
push
or
stos
inc
inc
or
setno
mov
nop
mov
(bad)
aaa
mov
inc
aad
push
pusha
sub
outs
jecxz
out
sub
pop
cmps
adc
in
sub
sbb
sub
movs
out
pop
add
sub
xor
pop
adc
in
int
scas
pop
fcomp
add
out
cmps
jmp
sub
mov
xchg
adc
sub
int
mov
dec
div
cmp
and
repnz
aam
shl
jle
in
mov
cmc
ins
jae
pop
sahf
add
dec
dec
mov
adc
sbb
movs
clc
pusha
mov
scas
(bad)
ror
dec
xor
test
mov
cmp
add
jmp
pop
and
mov
test
mov
xor
rol
in
into
pushf
mov
cmps
popa
sti
ret
arpl
and
inc
or
pop
mov
hlt
jbe
sahf
fld
int3
xchg
push
add
int3
(bad)
jo
sti
lea
sub
mov
mov
adc
(bad)
movs
popf
nop
and
retf
inc
or
or
bound
or
ja
push
mov
mov
popa
push
out
int3
outs
adc
mov
pop
(bad)
shr
push
xor
jo
xchg
pop
lods
data16
repnz
js
and
hlt
cmp
fistp
rol
je
lahf
dec
cmp
and
fdiv
(bad)
jp
jmp
into
in
enter
dec
(bad)
out
loope
mov
cmp
jge
xchg
and
cld
cld
inc
mov
aas
push
and
cwde
sbb
ss
adc
sub
or
sbb
adc
xchg
jbe
int3
ins
aad
sub
fidivr
pop
test
pop
imul
sbb
dec
sub
adc
retf
retf
and
jmp
(bad)
or
ja
(bad)
pop
add
pushf
clc
fisttp
mov
xchg
jmp
popf
mov
imul
add
neg
lds
xchg
push
fadd
(bad)
cmp
lea
sbb
or
cmc
and
lahf
je
outs
pop
or
scas
sti
sbb
cmp
or
rcr
pop
push
aaa
icebp
stc
xchg
sbb
cmps
mov
cld
div
in
dec
inc
xlat
jbe
mov
cmp
fcmovb
adc
jne
dec
jae
pop
sbb
or
repz
lahf
xchg
pop
imul
(bad)
rol
xchg
ret
imul
retf
xchg
dec
and
add
sbb
jno
test
fucomi
adc
movs
(bad)
pop
inc
ret
pop
push
mov
aam
test
ja
cld
psrlw
cmps
cmp
(bad)
aad
jae
xor
out
pop
jecxz
arpl
sub
ret
pop
cmps
and
add
inc
pop
inc
cmp
out
jl
or
push
pop
cdq
dec
push
adc
popf
call
dec
and
imul
adc
imul
push
or
cs
push
out
jecxz
pop
cmc
je
mov
lods
xlat
aad
and
ins
jl
dec
xor
out
and
stos
out
mov
mov
xor
pusha
addr16
stos
pop
test
cmp
dec
jnp
sub
inc
icebp
imul
fucom
pop
mov
ror
sbb
mov
pop
in
out
push
nop
mov
movs
lds
sbb
nop
lea
fcomip
dec
cli
inc
stos
push
loope
jl
dec
les
inc
dec
xchg
fisub
mov
sbb
sbb
add
push
mov
jle
(bad)
ins
pop
adc
(bad)
pop
sbb
js
add
ins
push
imul
nop
push
sbb
in
jae
iret
inc
sbb
or
add
adc
push
out
mov
inc
cld
inc
push
mov
mov
aam
jmp
inc
mov
cld
out
(bad)
mov
cld
retf
xchg
jg
or
icebp
ins
fwait
out
popf
sahf
aaa
push
jmp
add
ret
pop
in
iret
mov
(bad)
xor
js
sbb
test
or
adc
sub
sub
mov
js
sbb
add
mov
iret
cmp
repnz
pop
sub
jnp
cmp
or
adc
mov
fwait
dec
fistp
aas
gs
test
jle
xor
jle
adc
xchg
cdq
jns
jno
sbb
pop
pop
addr16
popa
scas
fadd
mov
ficomp
cld
and
sub
add
sub
stos
inc
(bad)
loop
add
in
mov
pop
sbb
dec
adc
inc
fisubr
sbb
ds
fwait
sahf
cdq
inc
fldcw
(bad)
adc
outs
mov
cdq
cmp
into
push
and
inc
xlat
jne
sub
jge
and
fsubrp
rcl
or
mov
lea
jno
xchg
test
mov
out
std
push
cmp
adc
lock
pop
mov
cs
mov
scas
pop
out
rcl
add
inc
mov
mov
fwait
cmps
in
into
adc
in
call
or
cmc
test
mov
xchg
out
mov
fdivp
lock
das
pop
addr16
jmp
mov
js
push
dec
sub
pop
ss
jnp
jne
es
lds
mov
test
and
scas
mov
xlat
inc
jnp
sar
cli
mov
fcomp
mov
jl
jmp
pop
fstp
cdq
sbb
adc
cmps
das
xchg
(bad)
fcom
xchg
ins
aam
ins
ins
push
xchg
shl
mov
shr
cmp
jge
sub
stos
js
pop
daa
std
into
stos
outs
shr
movs
addr16
ss
add
xchg
dec
(bad)
adc
xchg
pop
enter
push
fiadd
jmp
pop
push
fiadd
mov
cwde
dec
or
out
cmp
jno
xchg
cmps
cli
mov
mov
aas
lea
(bad)
add
fld
pop
rol
sar
test
push
fisub
xchg
push
mov
pop
mov
ret
loop
mov
push
xchg
(bad)
fimul
mov
inc
adc
push
xchg
aaa
push
andnps
mov
arpl
addr16
add
jge
jae
inc
and
clc
or
scas
inc
dec
or
sub
fist
mov
mov
mov
je
dec
mov
cmp
add
test
jecxz
mov
mov
push
add
mov
mov
cli
mov
arpl
pop
cmp
push
pushf
je
jge
cdq
ret
imul
shl
pop
or
fcmovnu
xchg
push
sbb
inc
cmc
cwde
mov
add
in
int
mov
adc
and
jbe
mov
mov
or
fist
jge
dec
retf
mov
push
inc
int3
(bad)
fdivr
mov
loope
out
aaa
bound
fst
aas
push
int
xchg
pop
jnp
mov
fstp
push
mov
call
iret
(bad)
push
add
sub
sahf
mov
dec
jns
repnz
xchg
(bad)
dec
jg
retf
and
add
not
cld
inc
xor
jne
xchg
outs
push
sbb
mov
mov
popa
pop
rcr
cmp
jns
inc
push
xchg
cmp
ficomp
mov
sbb
rol
les
add
cmp
repz
push
(bad)
hlt
leave
cmp
out
dec
sbb
pop
rcr
popa
jp
dec
push
inc
pop
jns
mov
xchg
and
xor
outs
imul
ret
pop
ror
inc
es
test
aam
xor
push
push
arpl
movs
mov
jo
mov
fdiv
mov
xor
cmp
adc
push
sbb
lods
push
ret
les
out
xor
cs
jmp
and
cmp
arpl
arpl
stos
cmp
push
push
in
adc
cmp
sub
test
mov
mov
fsub
xor
add
xchg
retf
enter
pop
lods
mov
jns
(bad)
jnp
iret
fild
into
xor
mov
in
in
test
cmps
mov
adc
push
inc
xor
ror
pop
or
mov
cmp
cmps
or
inc
inc
(bad)
loope
jno
mov
int
stc
add
test
add
imul
xchg
add
add
sar
int3
aad
jmp
inc
call
inc
fstenv
pop
adc
es
hlt
int
lahf
and
aad
xchg
fs
sbb
movs
jle
aas
pop
dec
cmps
(bad)
repz
pop
into
mov
mov
mov
mov
adc
jno
ins
pop
mov
pop
fcom
js
sbb
and
mov
(bad)
jns
adc
jp
(bad)
sub
lgs
scas
repnz
aad
stos
cld
pop
jns
scas
add
ror
or
cmp
in
sub
mov
xchg
popa
xor
(bad)
sar
push
in
push
(bad)
sub
ss
call
add
mov
in
pop
push
sbb
lods
xor
imul
adc
or
cmps
loopne
push
loop
aas
mov
xchg
push
out
mov
mov
or
mov
cwde
jmp
cmp
aas
push
movs
ds
mov
adc
mov
sbb
and
aam
out
bound
sub
jns
xor
cli
mov
test
push
ret
cdq
add
sti
test
mov
fs
fldenv
adc
imul
jl
inc
int3
in
aam
int
add
jo
sub
out
jg
mov
(bad)
mov
inc
cmp
(bad)
stc
fisubr
inc
pop
xlat
mov
adc
push
scas
call
jo
jecxz
sub
loope
mov
imul
pusha
jl
(bad)
rol
inc
lea
and
sub
jmp
ins
ja
stc
jp
loopne
jmp
rol
fisubr
fwait
inc
xchg
adc
test
push
icebp
jno
add
in
push
loopne
mov
xor
rcl
pop
out
test
outs
repz
imul
fcom
mov
scas
push
retf
mov
mov
jb
adc
repz
(bad)
icebp
xchg
mov
xor
cmp
mov
add
fwait
or
repz
push
pop
push
xchg
mov
iret
xor
sub
xchg
xchg
stos
pop
aam
retf
pop
or
int
xchg
(bad)
jbe
mov
push
adc
xchg
inc
or
ja
add
inc
jno
mov
and
(bad)
pop
cmp
jg
movs
in
mov
mov
sub
add
and
enter
dec
mov
(bad)
loop
add
push
daa
lea
mov
inc
lods
(bad)
fdivr
out
mov
and
aad
jbe
loope
cmp
out
inc
stos
push
jle
mov
or
dec
and
call
dec
pop
data16
sub
jae
fild
push
pop
pop
push
pusha
mov
not
add
movs
push
ds
jnp
inc
mov
(bad)
mov
nop
pop
pop
xchg
mov
imul
pop
hlt
lods
test
or
xchg
add
pop
cs
and
pop
mov
sbb
mov
ds
jne
dec
xchg
cdq
aad
jecxz
shr
pop
xor
aaa
mov
push
dec
retf
sahf
loop
push
popa
nop
mov
add
mov
mov
test
push
inc
inc
xchg
enter
hlt
add
sar
or
pop
mov
mov
fisub
mov
clc
mov
nop
mov
push
adc
test
push
rcr
adc
jmp
push
mov
jns
addr16
addr16
int3
xchg
push
jge
scas
adc
adc
dec
clc
loopne
push
inc
push
aaa
in
dec
(bad)
out
cmp
mov
mov
mov
cld
lds
outs
pushf
xchg
add
and
jg
repnz
push
stos
or
pop
jle
jns
or
push
sar
das
mov
pop
mov
or
stos
mov
fnstcw
mov
adc
aad
nop
and
xor
mov
pop
cmp
or
add
push
push
push
push
imul
popf
jg
jle
cmps
mov
das
xchg
adc
rcl
push
sub
call
call
inc
jle
pop
icebp
sahf
cmp
imul
jno
mov
and
mov
sbb
stc
into
cwde
xchg
iret
adc
xchg
ss
or
lock
int
cmp
and
dec
push
sar
(bad)
push
out
fldcw
sbb
mov
movs
pusha
cs
mov
mov
xchg
enter
pop
btc
cmp
pop
fwait
cli
sub
push
or
or
les
adc
cmp
ins
sbb
out
test
mov
mov
hlt
inc
pop
test
jns
push
xor
pop
test
sub
mov
pop
inc
add
sub
or
jp
cmp
pop
dec
out
mov
and
cld
cli
into
adc
mov
gs
(bad)
mov
sahf
gs
cmp
add
ins
movs
ds
div
mov
adc
cli
popf
jecxz
pop
jp
mov
lds
sub
dec
(bad)
xchg
xchg
jb
shl
adc
(bad)
sahf
push
jo
sub
mov
push
jp
xchg
cmc
pop
jb
(bad)
(bad)
jmp
add
out
pop
mov
xlat
ins
pushf
mov
fbld
cmp
cmc
daa
xlat
inc
test
push
loope
dec
mov
shl
leave
mov
shl
in
dec
and
sbb
xor
mov
dec
shl
jnp
adc
mov
inc
inc
pop
cli
push
mov
and
outs
push
aam
cmp
pop
inc
sub
loope
inc
cs
mov
push
cmp
dec
iret
xchg
mov
cs
test
stos
aad
mov
ins
and
jecxz
xor
mov
je
js
jmp
and
int
mov
pop
adc
push
addr16
rol
sbb
outs
xchg
push
pop
xchg
jg
leave
ret
sbb
call
add
mov
loop
sub
mov
sbb
push
rol
mov
data16
(bad)
pop
xchg
scas
mov
shl
div
dec
enter
mov
sub
jnp
push
pushf
loop
fadd
arpl
pop
xchg
cmps
cdq
popf
adc
pop
or
das
arpl
iret
jg
add
or
jge
test
jns
mov
cmp
mov
scas
sbb
push
int
pop
jmp
mov
push
or
or
dec
(bad)
iret
inc
rcl
jmp
xchg
jns
adc
pop
in
mov
add
in
jp
clc
mov
clc
jp
mov
push
sbb
mov
mov
dec
in
xor
(bad)
push
inc
mov
mov
sbb
mov
sub
stos
and
cmp
aas
mov
lods
push
adc
cli
iret
inc
leave
hlt
(bad)
rcr
jb
loopne
pop
adc
and
adc
shl
mov
push
push
jmp
cmps
add
xchg
into
push
movs
pxor
add
pop
aad
xor
es
mov
imul
shl
xor
pop
cld
mov
out
or
mov
sar
mov
addr16
cmp
movs
cmp
push
loop
adc
xchg
sbb
cmp
movs
cli
sub
pop
xlat
mov
int
cs
out
add
ins
loop
cmps
sbb
jae
test
in
xor
mov
or
cmps
imul
xor
aas
adc
lods
cwde
addr16
mov
icebp
mov
call
cwde
xchg
mov
stos
addr16
mov
push
xor
(bad)
out
jge
lods
and
xchg
adc
rcr
push
fwait
outs
xor
aam
js
adc
out
pop
fnstcw
sbb
mov
mov
enter
jbe
xlat
fs
sbb
(bad)
call
xor
test
xchg
arpl
push
push
out
cli
sbb
inc
sub
jg
sbb
aas
pop
xchg
shl
dec
sub
pop
mov
aas
pop
adc
and
mov
fmul
bswap
rcl
int
cmps
jb
test
fnstenv
hlt
and
cmp
push
mov
test
xchg
fsubp
repz
mov
test
mov
pop
pop
mov
cmp
pop
les
add
jecxz
lea
ss
mov
outs
jl
call
cmps
jl
push
sbb
xchg
push
jbe
cli
mov
test
xor
dec
add
xchg
retf
adc
add
jbe
mov
add
(bad)
lahf
lea
imul
(bad)
and
fidivr
xor
jbe
sar
fwait
lds
push
clc
gs
adc
sbb
and
mov
pop
ja
scas
jnp
daa
xchg
in
xor
scas
mov
cmps
repz
aam
and
push
push
add
sbb
movs
xchg
ret
popa
adc
pop
jge
outs
cwde
cmps
test
inc
adc
inc
cmp
or
retf
add
jmp
sbb
outs
pushf
shl
inc
jns
cwde
movs
outs
pop
cmp
sub
int
dec
movs
and
and
shl
lods
mov
inc
cmps
pop
xor
xor
sahf
out
inc
sar
dec
mov
or
les
inc
pop
jmp
inc
push
mov
jge
aad
xor
inc
push
idiv
and
data16
and
or
lods
sub
sub
mov
nop
sahf
out
pop
nop
and
mov
popa
aad
jns
mov
dec
sub
out
fnstcw
arpl
lea
imul
mov
mov
gs
push
xchg
lods
cmp
shr
push
mov
fwait
cmp
jge
jg
pop
and
add
ror
sub
cmp
cmp
cmp
sub
icebp
sbb
mov
mov
add
mov
jno
jnp
push
jg
jae
jle
and
nop
mov
and
mov
or
and
out
stos
push
or
shr
pop
retf
data16
popf
mov
jb
dec
outs
mov
es
jnp
sub
mov
inc
dec
mov
call
(bad)
push
int3
mov
test
add
dec
mov
jnp
cmp
sub
xchg
stos
sahf
xor
arpl
xchg
sub
and
adc
xchg
ins
mov
adc
cmps
mov
call
int
popa
sub
test
add
fnstsw
outs
dec
sub
fidiv
and
idiv
ja
jg
or
(bad)
jg
addr16
dec
retf
push
repz
xchg
aad
jns
lds
mov
fld
and
fwait
adc
scas
sbb
mov
pushf
out
lods
jo
sub
jg
mov
paddsb
xor
imul
add
lock
fwait
inc
test
aam
pop
cmp
jnp
or
and
add
inc
mov
retf
or
mov
mov
jl
rol
jno
iret
lods
and
mov
mov
sub
mov
adc
dec
jb
repz
mov
popf
mov
jmp
mov
pop
dec
add
dec
test
jle
jbe
movs
sbb
movs
jns
or
sti
xchg
dec
push
and
jmp
arpl
or
stos
mov
xchg
mov
sbb
loope
stc
std
sbb
or
inc
mov
xchg
cmps
(bad)
jae
pop
push
mov
pop
xlat
mov
enter
or
(bad)
sub
jno
out
or
mov
rcl
sub
dec
inc
fiadd
mov
xchg
neg
lods
hlt
call
imul
cmp
add
and
bound
std
daa
test
pop
test
(bad)
mov
xchg
cmc
aad
sbb
pop
dec
jo
test
inc
mov
add
adc
cmp
push
add
mov
dec
sar
adc
ret
adc
std
xor
jo
adc
cmp
inc
inc
cli
cmp
push
out
xchg
adc
mov
aam
mov
sbb
cmp
jge
in
ret
mov
mov
mov
imul
xor
mov
imul
loope
test
leave
(bad)
inc
lds
test
adc
cdq
mov
iret
xchg
add
or
add
dec
sub
jge
mov
and
ret
(bad)
popa
push
outs
shl
aad
adc
das
outs
sub
popa
leave
push
xchg
ret
fldcw
imul
(bad)
or
mov
push
pop
xor
imul
xchg
sbb
je
cmp
jne
push
leave
push
mov
aas
in
pop
add
xor
cli
mov
popa
jno
jno
xchg
das
fild
call
xor
cmp
and
sbb
mov
jg
int3
jp
cdq
add
dec
aaa
mov
stos
pop
stos
test
dec
mov
aad
fwait
sub
leave
pushf
and
inc
cmps
jae
mov
xchg
cmp
fidiv
dec
fdivr
sbb
popf
retf
push
fcmovne
jo
sub
(bad)
and
(bad)
mov
xchg
sbb
fldcw
out
lds
js
mov
add
sti
mov
test
loopne
pop
cmps
popa
mov
sbb
pop
call
sbb
jae
or
cmps
rcl
arpl
(bad)
jns
test
pop
pop
sbb
fdiv
dec
push
mov
sbb
in
dec
inc
xor
pop
addr16
ror
push
mov
ins
ret
sbb
mov
jns
cmp
fwait
or
mov
dec
loope
lea
or
mov
retf
repnz
lods
pop
arpl
pop
mov
jb
test
stc
and
jo
lahf
out
cmp
add
cmc
mov
pop
fs
into
mov
mov
jmp
xor
sbb
int3
in
hlt
push
mov
out
jmp
std
cmp
xchg
idiv
push
sub
je
sti
popf
adc
mov
push
xchg
cmc
pop
adc
cmp
cmp
inc
scas
sub
cld
das
aaa
mov
fs
shr
jne
pop
in
int
shl
ret
das
sub
pop
retf
inc
jg
rol
test
(bad)
mov
ret
push
push
push
je
imul
xchg
xchg
pop
push
sub
jp
cmp
fmulp
in
cmp
or
mov
mov
inc
mov
add
adc
jmp
and
shr
call
ins
mov
adc
or
cmp
fcomi
xor
idiv
hlt
into
ins
dec
test
adc
out
xchg
in
fucomi
jo
getsec
or
dec
iret
fisttp
add
scas
pop
dec
ja
outs
rcr
fsubr
xor
out
shl
test
inc
or
pop
xlat
stc
pop
enter
pop
dec
push
mov
movs
adc
xor
out
xor
stos
sbb
call
in
sbb
ins
imul
pop
shl
arpl
jle
adc
xchg
fisubr
jns
repnz
call
adc
outs
xchg
mul
(bad)
mov
pop
div
or
lahf
stos
clc
adc
push
sub
jns
mov
add
inc
xor
inc
dec
xlat
dec
jne
pop
push
lea
mov
adc
xor
int
mov
fisub
ret
dec
sub
dec
pop
or
aam
ins
xor
(bad)
sub
xor
js
mov
and
or
lahf
clc
scas
icebp
lods
adc
mov
gs
loope
mov
cs
xchg
xchg
outs
push
dec
clc
cmc
lods
sub
and
mov
out
bound
sub
push
shl
push
push
cli
ds
es
pop
dec
pop
movs
clc
repz
movs
mov
dec
jns
mov
inc
xchg
push
mov
aam
lock
les
lds
sbb
addr16
xchg
push
dec
in
mov
mov
lods
xor
(bad)
lods
mov
fwait
jno
stc
ds
dec
xlat
shr
and
in
sub
pop
int
inc
addr16
cmp
outs
lods
fild
sbb
outs
xor
sti
leave
les
jne
adc
xchg
or
lea
inc
out
pusha
jns
xor
xor
and
xchg
cmc
pop
and
cmp
retf
cdq
cmc
cli
cmc
inc
add
and
ja
mov
lds
nop
mov
into
pop
or
mov
clc
push
adc
(bad)
mov
push
jge
xchg
popf
lock
xor
les
xor
test
loopne
sti
ffreep
stc
iret
movs
jbe
push
sub
int
cmp
fist
and
inc
dec
inc
and
nop
arpl
inc
fiadd
outs
in
sub
pop
sti
pop
in
scas
xchg
mov
push
mov
cs
ret
dec
adc
add
cmps
leave
mov
enter
and
dec
test
lods
movs
xchg
cdq
pop
and
ja
sbb
adc
adc
fld
cld
cwde
add
fwait
sbb
push
push
sbb
inc
fiadd
fstp
and
sbb
pusha
data16
xor
rcl
lahf
xchg
rcr
ja
fbstp
cmc
(bad)
int3
iret
mov
fst
sbb
stos
pop
fadd
push
inc
cld
and
or
sub
out
dec
aam
mov
push
push
jl
int3
je
xor
repz
adc
or
mov
fist
call
pop
cld
mov
lock
mov
and
in
ud2
push
mov
add
in
sub
xor
jge
or
test
cs
mov
xor
xchg
sub
and
(bad)
sub
or
out
fild
or
and
or
scas
mov
jg
mul
adc
pushf
adc
mov
lods
xchg
sbb
adc
das
inc
mov
mov
xor
or
test
inc
fimul
stc
inc
mov
jo
sbb
push
cs
scas
popa
jle
xor
inc
dec
popf
jmp
outs
adc
call
movs
repnz
lea
iret
cli
sub
sbb
mov
jae
cdq
ja
out
pop
daa
ss
test
lahf
(bad)
std
push
push
loop
enter
retf
fwait
repz
ret
ret
sub
mov
bound
mov
inc
sbb
adc
adc
std
dec
inc
xchg
jmp
loop
gs
jae
sbb
neg
xchg
mov
xchg
mov
xchg
div
cmp
(bad)
pop
movs
(bad)
(bad)
gs
sbb
call
mov
xchg
and
or
dec
gs
push
shr
add
mov
sbb
pop
in
jno
fdiv
popf
sub
sub
test
sbb
xlat
arpl
cmp
xor
fmul
cmc
cmp
cmp
sub
and
sbb
adc
or
repz
outs
cmp
jb
or
adc
and
xchg
mov
mov
out
scas
fdivr
sbb
adc
enter
jne
xlat
mov
je
inc
push
test
ins
add
mov
mov
mov
(bad)
sub
cmp
or
je
pop
add
xor
add
rol
imul
lahf
gs
and
xor
jmp
cmps
adc
pop
aad
push
aas
inc
dec
jo
jge
mov
call
push
mov
imul
popf
jl
mov
inc
mov
cmps
enter
ficomp
call
add
mov
je
jg
(bad)
jns
dec
dec
div
mov
jp
mov
pushf
icebp
xchg
test
cmp
mov
cmps
push
das
fld
cmps
adc
hlt
sub
inc
or
inc
std
jbe
jmp
enter
stos
pop
inc
jno
mov
and
inc
mov
int
call
jmp
and
lahf
ins
fstp
test
in
daa
pop
rcl
jbe
xor
data16
(bad)
das
outs
add
pop
test
cwde
repnz
and
mov
outs
dec
push
xor
pop
add
stos
mov
sbb
fmul
inc
mov
add
adc
sbb
pop
iret
movs
bound
repnz
loopne
pop
ds
or
jae
mov
retf
out
test
cmp
lock
cmc
rol
int3
pop
inc
leave
loop
into
test
dec
lahf
xchg
sar
cmp
xchg
xchg
pop
push
mov
(bad)
mov
rcl
jno
pop
lahf
add
mov
sahf
std
sub
mov
mov
xchg
mov
mov
scas
jne
rcl
cmp
jp
push
aaa
dec
adc
push
sbb
ret
xor
clc
push
jno
mov
aas
popf
add
fwait
xor
out
inc
cmp
mov
(bad)
mov
jno
sbb
xor
out
add
push
dec
mov
mov
pop
rdmsr
pop
repnz
lds
push
add
lea
pop
inc
and
jmp
stos
jbe
mov
add
adc
jae
push
scas
mov
stos
jo
outs
sub
ds
out
pop
fcmovbe
rcl
push
pop
stos
lahf
xor
fild
push
xchg
stos
inc
push
pop
sbb
pop
jp
inc
scas
cli
pop
ror
cmp
mov
ds
or
sbb
out
in
add
xchg
xor
aam
pop
cmp
mov
lds
inc
jp
test
push
aaa
jmp
sbb
dec
std
repz
mov
jae
xor
dec
mov
je
jmp
jno
inc
inc
add
std
aas
retf
mov
fisub
sub
jl
fstp
mov
dec
int3
inc
jns
dec
push
sub
dec
push
imul
dec
lods
or
fist
or
xor
xor
outs
cmp
movs
or
jo
xor
adc
adc
arpl
push
cmp
stos
test
sbb
int
je
aam
call
scas
inc
gs
dec
xchg
ja
sub
cmp
jnp
pop
(bad)
mov
dec
arpl
xlat
test
aaa
fimul
xchg
es
pop
icebp
push
push
sbb
(bad)
int
(bad)
neg
aad
std
ret
aas
pop
retf
or
cmp
bound
sub
ficom
mov
(bad)
test
xchg
or
push
(bad)
sahf
xlat
mov
mov
adc
rol
and
xchg
and
and
repz
mov
mov
aad
(bad)
mov
xchg
mov
or
jb
xchg
sub
dec
stc
push
jmp
(bad)
xchg
sub
jae
ret
iret
mov
es
je
mov
adc
mov
jp
test
jbe
ins
mov
pushf
sbb
sub
or
jb
packsswb
or
pop
repnz
lock
add
pop
mov
dec
(bad)
or
sub
mov
xor
shl
cwde
adc
bound
inc
sub
sub
into
push
adc
retf
cmp
repz
dec
sti
test
mov
pop
arpl
sub
jle
lahf
daa
rol
xor
nop
jmp
add
mov
test
push
lds
xchg
scas
mov
pop
pop
rcl
test
inc
es
push
xor
pop
cmp
fcomip
int3
or
loope
jne
sub
add
xchg
out
(bad)
outs
or
sbb
mul
ret
jae
mov
imul
mov
jl
or
retf
adc
fdivr
inc
test
cs
mov
test
jno
dec
test
in
inc
sub
test
ds
in
xor
or
add
pop
mov
inc
sahf
push
cli
pushf
in
daa
pop
stc
(bad)
(bad)
les
icebp
cmps
cmc
shl
ret
jno
cmc
fcomi
xchg
cwde
sbb
push
inc
rcl
cdq
(bad)
mul
pop
mov
mov
imul
sar
jns
mov
enter
mov
call
mov
les
mov
test
sar
retf
int3
stos
fsubr
xor
mov
cmps
dec
mov
dec
leave
or
sbb
addr16
sbb
inc
pusha
loop
test
dec
scas
repnz
mov
in
addr16
sbb
stos
into
or
call
or
stos
jmp
sub
adc
push
lahf
movs
pop
fwait
cmps
rcr
cli
push
xor
ins
test
stc
mov
add
cmp
adc
outs
pop
xchg
test
mov
push
cs
enter
sub
dec
jno
retf
ja
cmp
das
dec
pop
pushf
test
or
lods
mov
jmp
ins
inc
jmp
test
or
rcr
cdq
dec
xchg
and
dec
pop
xchg
rcl
stos
sbb
sub
mov
push
ror
clc
test
loop
fisub
pop
xchg
adc
(bad)
outs
jo
pop
inc
leave
ret
adc
push
push
adc
pop
mov
adc
loope
ins
hlt
lahf
jae
jb
jb
lea
cld
faddp
jbe
and
mul
mov
xchg
mov
pop
and
out
mov
dec
xor
add
xor
mov
sahf
mov
(bad)
jg
xlat
or
mov
aas
popf
jno
push
sar
or
dec
mov
in
mov
into
push
inc
or
mov
ret
mul
movs
ror
sahf
jmp
or
inc
fist
cmp
push
or
push
mov
test
mov
inc
lods
xchg
jp
imul
xchg
popf
cwde
xor
jb
rol
outs
pop
lock
loope
mov
mov
test
lahf
fsub
movs
push
mov
bound
push
enter
enter
push
xchg
inc
and
add
inc
and
stos
xchg
jne
push
xor
lods
pop
inc
(bad)
pop
mov
push
jns
xchg
loop
pushf
inc
icebp
das
cwde
enter
mov
imul
pop
fnstsw
pop
inc
cmps
push
sub
mov
jbe
xor
mov
xchg
mov
ja
pop
inc
movs
push
movs
pop
lock
adc
push
les
push
jmp
cmps
rcl
jmp
bound
cmp
fadd
adc
sbb
out
std
sbb
sbb
adc
adc
cmp
sub
mov
(bad)
lahf
jo
lods
add
add
mov
fld
arpl
fs
adc
xor
repz
cmps
ds
inc
and
fcomp
dec
cmp
scas
imul
pop
push
retf
inc
pop
push
sbb
stos
ja
xlat
sar
aad
mov
cmps
iret
inc
jg
inc
aas
mov
leave
xchg
push
push
jne
pop
xchg
lock
jmp
in
(bad)
int
add
(bad)
(bad)
mov
xchg
test
popa
adc
jmp
mov
shl
pop
outs
or
adc
out
xor
sbb
loop
dec
stos
cmp
fbstp
outs
add
(bad)
and
arpl
psubb
pop
test
pop
movs
cmp
push
loope
inc
jecxz
mov
pop
cmp
sub
fucomi
jno
adc
lahf
in
add
cmp
mov
jecxz
cwde
or
fs
dec
add
push
dec
(bad)
sbb
mov
std
(bad)
cld
(bad)
shr
and
jecxz
push
or
stos
xor
fisubr
push
in
push
pop
xchg
xchg
dec
xor
dec
mov
xchg
mov
sbb
xlat
xchg
xchg
mov
bound
inc
ss
and
cli
es
dec
icebp
add
(bad)
out
push
sub
xor
push
sbb
not
neg
pop
inc
ror
call
(bad)
adc
add
add
bnd
ret
rcr
mov
xchg
cmps
cs
ret
adc
call
and
(bad)
movs
xchg
scas
lahf
lds
mov
xor
cmp
ja
aam
or
cli
xor
aad
sbb
and
daa
in
addr16
pop
xor
imul
and
lods
mov
rol
mov
sub
cmp
sbb
xchg
pop
shr
cdq
xor
adc
xchg
cmps
pusha
sub
lock
push
outs
mov
xor
xchg
sbb
pop
xor
mov
pop
test
and
scas
imul
lods
or
pop
xchg
jae
cmp
stos
nop
jnp
adc
in
jmp
stc
arpl
dec
ins
dec
and
cdq
fs
ret
(bad)
(bad)
cmc
sbb
cmp
imul
xor
mov
mov
push
loop
cmp
mov
(bad)
fdivr
cli
adc
sub
cmc
adc
jo
adc
mov
enter
call
mov
xchg
clc
or
mov
stos
in
test
xchg
clc
cmp
cmp
push
sub
jae
icebp
icebp
cld
push
out
pop
cmp
gs
sub
faddp
aad
jp
scas
push
adc
dec
push
(bad)
fdivr
pop
out
jmp
repnz
push
cmps
outs
(bad)
xchg
mov
enter
xchg
sub
outs
loope
inc
comiss
mov
mov
mov
scas
pavgb
push
xor
popf
cld
jp
xor
xchg
xor
mov
mov
sahf
test
xor
xor
daa
mov
or
dec
(bad)
in
xor
movs
ficomp
xchg
add
popf
retf
aaa
popa
int
imul
or
inc
jmp
push
dec
fwait
cld
push
sahf
adc
adc
jp
mov
cmps
mov
les
neg
retf
repz
cld
xchg
jg
cmp
popf
cli
test
mov
xor
dec
shr
retf
jnp
mov
mov
push
push
sbb
jecxz
iret
or
xlat
jno
pop
movs
std
pop
sub
cs
cdq
adc
ins
jno
cli
or
and
push
xor
popa
pushf
adc
inc
shl
inc
loope
add
mov
xor
ds
fldcw
sbb
or
pop
mov
ss
inc
inc
lds
lock
in
lods
daa
jecxz
push
mov
pop
xchg
inc
push
call
ret
loopne
sahf
call
cmp
call
int
and
cmps
mov
pop
ret
adc
stos
adc
pop
cli
cli
xchg
and
imul
test
fidivr
xor
fnstcw
mov
mov
imul
sub
mov
xchg
xchg
sub
stc
sbb
cmps
shl
pop
xor
adc
xlat
adc
mov
dec
(bad)
push
retf
pop
pushf
iret
add
mov
mov
sbb
and
adc
ins
test
pop
iret
adc
cmp
sbb
in
jle
loop
stos
mov
inc
sbb
xor
fisubr
and
and
pop
sbb
pop
test
daa
mov
push
mov
add
dec
inc
ret
xchg
pop
mov
js
jmp
imul
push
jb
daa
dec
xchg
push
cmp
(bad)
das
inc
push
sahf
push
loop
xor
aad
mov
test
shr
out
cmp
mov
sbb
cs
adc
dec
cmps
xchg
jecxz
dec
dec
inc
retf
or
push
xchg
inc
scas
and
dec
adc
bound
mov
sub
movs
mov
mov
cdq
push
out
add
jmp
dec
cdq
add
out
jp
repz
or
xchg
xor
xchg
cli
push
shr
inc
dec
scas
nop
ret
and
pop
fld
mov
lahf
jno
cmp
test
cld
push
or
adc
xchg
mov
adc
nop
sub
pop
xor
lahf
cmp
xor
cmps
jle
les
add
(bad)
lss
mov
xlat
jge
sub
and
or
adc
out
sub
pop
fild
in
outs
ret
xor
cmp
pop
cmp
fcomp
nop
mov
sub
xchg
mov
push
push
jns
in
js
repz
clc
sub
repz
pop
and
loopne
or
enter
sub
or
retf
shr
adc
ror
rcl
or
push
or
movs
xchg
icebp
xor
push
sar
mov
lahf
popa
fidivr
mov
fadd
and
inc
jmp
jo
pop
jge
pushf
jecxz
or
gs
cmp
fld
cli
jl
sub
and
inc
sub
xor
outs
shr
dec
mov
add
mov
push
not
or
inc
fwait
jge
out
loopne
pop
dec
or
pop
mov
loope
ja
shl
shl
arpl
daa
cmp
and
rcr
jmp
mov
sar
and
sbb
push
dec
in
sub
adc
pshufw
or
pop
in
adc
dec
rcr
sub
es
out
push
shr
inc
and
xchg
(bad)
icebp
shl
inc
jg
outs
fwait
xor
mov
push
int
cld
mov
into
cli
fs
sub
xchg
sbb
xlat
loopne
(bad)
ins
xchg
lea
add
fldenv
pop
movs
repz
rcl
mov
xchg
(bad)
mov
xor
sbb
mov
idiv
scas
mov
jmp
shl
adc
pop
pop
not
dec
fidiv
mov
cmp
inc
or
dec
cmp
in
fcom
adc
stos
out
add
outs
lods
retf
je
int3
ficom
and
test
ins
cmp
cli
dec
int
movs
icebp
xchg
leave
xor
sub
shr
xchg
mov
xlat
mov
mov
inc
mov
(bad)
ins
sbb
inc
xor
loopne
mov
sub
mov
inc
inc
cmp
ret
gs
sti
or
mov
sub
rcl
jbe
out
sbb
out
es
dec
imul
cld
rcl
push
cmps
fwait
dec
jl
cmp
(bad)
pop
addr16
push
dec
adc
or
xchg
mov
outs
outs
adc
retf
cmps
sub
loope
icebp
pop
ins
fadd
mov
mov
sub
inc
frstor
or
mov
test
loop
mov
or
pop
lods
xor
lds
ret
xchg
inc
sbb
or
jecxz
rcl
(bad)
jmp
or
outs
into
in
retf
sub
or
test
or
sub
add
push
retf
pop
mov
and
jle
and
pusha
mov
rol
add
fistp
xor
int
iret
ffree
(bad)
ins
jb
arpl
inc
mov
int3
fsubrp
inc
scas
aaa
xor
xor
aas
in
xchg
xor
xchg
xor
mov
push
add
adc
inc
cmp
jle
out
sbb
out
stos
mov
icebp
xchg
(bad)
xchg
movs
push
mov
adc
movs
pop
mov
call
pop
lahf
jle
mov
mov
js
mov
mov
xchg
loope
retf
cmp
sbb
xor
mul
or
popf
ss
data16
jae
test
fwait
pop
das
mov
mov
cmps
pop
les
jecxz
imul
(bad)
jmp
xchg
call
lock
cli
ins
xchg
xchg
scas
xor
test
pop
xsavec
and
jbe
jb
adc
push
inc
push
add
xor
xchg
sbb
lods
sbb
aam
mov
mov
dec
test
xacquire
or
adc
stos
inc
or
ja
pop
scas
test
lea
mov
sar
shl
dec
ins
jbe
sub
test
std
test
cmp
push
ret
dec
sbb
and
and
add
and
out
sub
fmulp
outs
xchg
aam
cmp
dec
pop
aad
push
mov
cli
xchg
pushf
(bad)
fsubr
pop
es
mov
and
add
data16
das
adc
daa
not
push
in
pop
nop
fdivr
push
mov
push
lds
sbb
fnsave
scas
outs
jo
rol
jl
sbb
dec
out
lds
mov
ror
fwait
adc
fld
add
and
loope
in
je
inc
or
xor
mov
cmp
outs
stos
pushf
jle
jb
aas
xor
mov
mov
cmp
mov
adc
les
xor
neg
aaa
mov
adc
lea
ja
loope
xor
xchg
rcr
cld
dec
mov
loop
cli
lods
out
adc
push
jnp
scas
pop
jno
std
mov
ret
(bad)
test
and
ss
pusha
cmp
cmps
pop
jnp
dec
or
mov
into
ret
mov
jge
in
fcmovu
push
lock
fild
sub
or
dec
and
repnz
inc
nop
sahf
dec
(bad)
mov
(bad)
jecxz
les
fmul
dec
ror
out
leave
inc
mov
fld
int3
sti
sbb
pop
mov
jns
pusha
hlt
lock
sbb
mov
cmc
call
stos
adc
dec
pop
ss
ins
xor
pop
jp
aam
retf
or
inc
cmp
call
ss
call
mov
mul
call
jle
pop
test
mov
mov
inc
call
push
call
popf
or
pop
jae
out
outs
ins
aaa
gs
xchg
and
push
xor
out
jne
gs
cld
es
sbb
fsubp
fmulp
mov
jae
test
push
ss
das
fdiv
mov
movs
jb
loope
cmp
and
dec
sub
aad
outs
enter
es
xchg
int3
jne
xor
mov
in
popa
scas
clc
ret
shl
pop
add
rcr
or
sub
sahf
dec
mov
adc
pushf
mul
and
fdivr
lea
pop
mov
inc
xchg
scas
ss
das
mov
ret
data16
jl
push
inc
push
cmps
push
jecxz
lods
push
add
imul
jg
jge
dec
and
cmps
mov
stos
sbb
idiv
in
mov
out
cmp
sub
jg
xchg
pop
or
sbb
sbb
cld
sub
shl
inc
lds
or
push
test
sbb
add
mov
xchg
adc
sub
retf
cmove
xchg
out
out
inc
cli
xchg
aaa
inc
or
out
xchg
push
adc
adc
hlt
ins
jmp
adc
fimul
ret
lock
mov
xor
es
push
jno
fucomi
in
cmps
(bad)
add
test
jle
aas
mov
mov
cdq
addr16
in
or
adc
jno
xchg
mov
inc
imul
push
xor
fwait
mov
add
inc
fild
data16
jbe
js
(bad)
pop
cdq
test
push
fwait
jecxz
scas
xor
aad
outs
and
push
fistp
mov
scas
xor
inc
das
add
sub
mov
cmp
cli
push
adc
repnz
cdq
mov
sbb
cmp
lds
push
xor
out
ja
ins
fimul
and
pop
cdq
movs
push
jmp
rcl
mov
pop
stos
adc
adc
jno
push
ss
mov
cmc
jg
dec
fmul
inc
dec
(bad)
mov
sar
in
add
jp
sbb
jmp
icebp
test
mov
frstor
les
mov
nop
(bad)
cmp
inc
mov
out
fbld
pusha
test
fisttp
add
mov
mov
mov
jbe
or
and
ret
sub
mov
inc
rep
inc
sub
inc
je
mov
nop
ss
jmp
retf
adc
mov
adc
dec
sub
mov
repz
mov
xchg
add
fld
xchg
mov
push
shrd
xchg
sub
pop
xor
fs
pop
cmps
xor
es
add
adc
cwde
fisttp
mov
push
ins
push
enter
inc
fist
loopne
xchg
and
test
mov
imul
je
push
loop
or
sub
enter
fnstcw
(bad)
leave
fld
retf
pop
loopne
pop
pop
add
pop
jno
and
cmp
icebp
(bad)
call
dec
mov
xor
out
mov
bound
sbb
xchg
pop
sbb
(bad)
mov
push
inc
movs
movs
and
cld
mov
fst
inc
push
xlat
jne
retf
std
mov
cmp
xchg
fldenv
dec
scas
sub
mov
adc
cmc
and
ret
ins
in
outs
and
sbb
pusha
fisubr
ror
div
xor
inc
adc
xor
or
jmp
push
popw
mov
movs
inc
xchg
adc
and
mov
pop
(bad)
nop
push
push
loop
pop
inc
mov
jo
fild
aam
dec
dec
jmp
in
scas
jl
enter
jmp
loope
jns
std
pop
aaa
fwait
mov
push
mov
push
sar
dec
sub
push
xchg
cmps
pop
sbb
mov
cmp
stos
(bad)
icebp
icebp
sbb
fwait
xchg
call
jmp
adc
cmc
adc
inc
cmp
jmp
lds
(bad)
pop
fild
fs
dec
push
out
sbb
push
jl
nop
cld
sbb
mov
or
pop
lds
or
hlt
adc
jge
jbe
jge
test
mov
mov
dec
and
loope
data16
imul
int3
jle
mov
and
cdq
scas
push
jno
lods
inc
aad
das
dec
push
mov
aaa
test
ss
daa
adc
mov
in
pop
dec
and
dec
stos
test
mov
lods
jl
xchg
movs
sbb
sub
dec
inc
pusha
xchg
stos
xchg
dec
jmp
mov
leave
jne
test
int
aas
inc
inc
in
jae
jle
mov
xor
jg
mov
pop
aaa
mov
mov
sbb
inc
in
int
ret
test
jb
xchg
imul
mov
cs
mov
and
stos
sub
js
scas
sub
add
cmp
fistp
jmp
pop
mov
stos
sub
sbb
out
movs
nop
jne
sbb
mov
and
mov
movs
ins
xlat
je
mov
repnz
enter
or
jg
mov
pop
fdiv
pop
cmps
shr
push
enter
cmovno
mov
or
sub
xor
outs
clc
sub
cmp
stos
pop
enter
(bad)
cld
out
mov
leave
iret
mov
jecxz
sub
(bad)
push
idiv
sub
xor
sbb
dec
jne
sbb
pushf
pop
xlat
mov
das
les
sbb
mov
movs
je
rol
mov
jmp
sbb
scas
frstor
add
addr16
jo
js
enter
xor
dec
xor
inc
mov
rcl
dec
cmps
or
pop
dec
popa
add
sbb
or
test
js
cvtpi2ps
pop
pop
dec
in
xor
cdq
iret
xchg
shr
mov
pop
sbb
call
sub
pop
jle
sub
repz
xor
pop
pushf
cmp
pop
mov
cmps
or
mov
ret
sub
adc
stos
dec
xlat
(bad)
jbe
cli
push
push
sub
mov
xchg
pushf
jge
mov
push
push
adc
sub
aaa
mul
aaa
dec
adc
nop
add
jo
xor
push
popf
in
(bad)
bound
cwde
int
jne
cld
data16
push
push
dec
fwait
out
and
(bad)
lock
pop
and
mov
xchg
sub
sub
xchg
js
cmps
cmc
mov
shl
sar
add
test
test
ror
xor
mov
xlat
out
mov
test
movs
into
xor
call
mov
mov
mov
stos
jp
mov
mov
outs
outs
inc
mov
adc
jp
arpl
inc
sub
sahf
pop
xor
cmps
push
ds
mov
cmp
pop
mov
sbb
enter
popa
jne
int
hlt
cmps
xlat
cmc
adc
xor
sub
inc
retf
ins
pop
sbb
fcomp
data16
jg
inc
xor
test
cld
xchg
add
popa
and
movs
inc
fcomp
pop
cmp
pop
jmp
js
test
dec
xor
adc
les
xchg
(bad)
sub
sbb
retf
cdq
push
xlat
fs
(bad)
mov
dec
mov
pop
nop
cmp
and
jne
dec
push
jmp
ins
ror
rcl
or
stos
mov
leave
push
lahf
loopne
cld
cmps
and
pop
cld
jmp
inc
mov
ret
and
imul
fsubrp
cmps
jg
lods
push
test
out
jmp
arpl
shr
xchg
pop
mov
push
xor
mov
mov
inc
not
cmp
add
sub
inc
in
(bad)
xor
pushf
xor
mov
or
mov
inc
movaps
cld
xor
cmps
and
add
and
enter
inc
addr16
mov
adc
std
scas
fs
cmp
outs
fstp
neg
inc
mov
sbb
dec
out
cli
out
into
xor
enter
outs
cmp
leave
ins
fnstenv
shl
into
xchg
cs
sbb
(bad)
and
cwde
xchg
add
cs
push
dec
arpl
mov
scas
aam
lahf
test
in
sub
jmp
push
in
pop
xor
mov
rcl
mov
retf
push
pop
out
out
gs
mul
and
xor
mov
or
xor
pop
cmp
fcom
push
add
retf
and
or
and
xchg
cmps
xchg
pushf
aam
sbb
jbe
inc
jne
lods
int
cdq
mov
cmpxchg
fnstenv
fidivr
add
pop
repz
in
(bad)
movs
aas
aaa
xor
mov
push
dec
fsub
mov
dec
sbb
cli
xchg
xchg
clc
call
and
dec
fwait
rcr
fwait
push
scas
jns
push
push
sub
enter
mov
push
popf
stos
test
out
mov
test
lods
dec
in
cmc
aam
add
push
and
mov
aad
xchg
call
mov
mov
mov
dec
fldcw
pusha
(bad)
jns
test
adc
rcl
push
push
sub
cmps
push
cmp
push
pop
mov
lea
in
icebp
mov
mov
loop
xor
xchg
pop
iret
hlt
adc
mov
and
pop
or
and
sti
xchg
call
mov
push
adc
fistp
xor
inc
mov
not
mov
xchg
pop
les
or
push
and
mov
pop
cmp
xor
aas
lods
push
test
cli
push
sbb
jl
sub
push
cmc
adc
(bad)
pop
movs
mov
pop
mov
and
neg
mov
sbb
jg
jl
sbb
cmps
in
pop
cdq
test
lds
mov
xchg
dec
cmp
mov
shl
daa
sbb
bound
push
test
sbb
xor
in
or
cmp
adc
push
movs
mov
dec
mov
fistp
pusha
pop
mov
int
adc
pop
or
and
dec
mov
add
push
xchg
lea
xchg
pop
cmps
cmp
adc
xchg
lods
jle
retf
push
sub
iret
repz
pop
shl
xor
xor
jecxz
or
mov
inc
(bad)
mov
jl
test
scas
or
int3
(bad)
outs
les
sbb
jo
addr16
cmp
xor
xchg
loop
and
mov
mov
adc
xchg
xor
and
stos
daa
and
jle
sub
daa
cmc
ret
add
add
push
jg
mov
in
mov
jbe
cmp
dec
test
fldcw
xor
in
adc
fstp
cmp
mov
and
pusha
neg
cdq
jg
ss
pop
in
cld
mov
mov
dec
cmp
inc
jns
mov
shl
imul
lods
dec
ds
and
or
push
popa
or
jle
xchg
jbe
cmc
pop
jmp
aad
xor
shl
(bad)
fist
das
dec
inc
test
notrack
adc
outs
nop
into
dec
jmp
repz
pop
iret
sbb
xor
fldenv
rcr
cmc
pusha
pop
xchg
mov
outs
mov
dec
xor
fsubr
add
int3
cdq
or
add
xchg
repnz
mov
(bad)
adc
lahf
jecxz
ins
xchg
mov
jmp
and
and
pop
push
std
xchg
lods
or
dec
fld
(bad)
mov
jbe
xor
arpl
(bad)
jae
pushf
icebp
sbb
(bad)
lods
jl
daa
(bad)
pop
arpl
dec
inc
ins
and
stos
jmp
adc
jecxz
mov
jae
dec
mov
mov
ror
(bad)
lods
cmp
xlat
shl
cmp
cwde
lahf
pushf
loope
aad
(bad)
repz
hlt
jnp
sbb
cmp
xor
xchg
or
mov
out
ins
mov
sub
xchg
or
inc
ss
clc
fsqrt
sub
ss
mov
add
pop
mov
xor
fsub
in
cmp
dec
or
mov
jbe
mov
fild
aam
sbb
dec
or
push
ins
pushf
mov
sti
call
jmp
mov
out
cwde
lds
or
inc
and
aaa
(bad)
sahf
lahf
cdq
fisttp
pop
fcomp
sbb
xlat
gs
pop
ins
rcl
pusha
push
stos
lods
dec
dec
loop
mov
outs
mov
dec
or
imul
inc
inc
xchg
push
ds
int3
jae
mov
fsubr
mov
jbe
jp
rol
jae
pop
cdq
add
push
idiv
mov
rcl
mov
cmps
and
sub
jmp
dec
cmc
and
scas
pushf
(bad)
mov
mov
call
test
pop
popa
add
sahf
xchg
test
(bad)
push
es
test
push
arpl
dec
movq
mov
jge
sbb
push
mov
inc
lds
data16
loopne
xchg
mov
dec
add
sahf
or
retf
inc
gs
mov
out
lea
repnz
lahf
int3
cwde
into
jbe
gs
pop
test
inc
add
daa
movs
lods
and
in
ret
push
jl
call
clc
push
aas
outs
xchg
pop
popa
cmp
loopne
pop
mov
test
pop
movs
retf
movs
sub
push
sbb
leave
inc
push
fld
js
mov
xchg
in
push
inc
ss
sbb
fnstenv
xor
jmp
mov
enter
pop
push
shl
loopne
dec
dec
jg
push
cdq
xchg
xchg
movs
in
stc
adc
or
dec
sub
in
lock
jb
push
xor
repz
mov
cmp
cmc
jno
js
dec
jae
test
or
mov
icebp
cmp
fnsave
inc
mov
cwde
inc
add
jno
cdq
add
sar
sbb
add
aaa
dec
and
ret
aaa
daa
dec
mov
ss
(bad)
push
outs
mov
push
dec
mov
ficomp
sub
retf
dec
or
cmp
call
in
cmp
mov
popa
mov
push
out
or
cdq
mov
inc
sbb
jns
fisub
js
mov
retf
add
jg
clc
pop
jo
cmp
push
sbb
or
push
lea
int3
sbb
or
ins
addr16
xchg
cmp
std
xchg
mov
sub
xchg
test
rcl
fisub
iret
push
(bad)
outs
or
ss
fstp
(bad)
into
add
repnz
ret
adc
jo
pop
push
dec
popa
cs
inc
mov
arpl
and
mov
mov
cmps
loop
clc
fsub
in
push
pop
pop
retf
mov
ds
jecxz
fsub
dec
pop
repz
pop
vmovaps
pop
ds
cmp
pop
cs
inc
cmp
lea
inc
and
dec
pop
sbb
mov
inc
mov
inc
cld
aaa
push
shl
data16
cmp
lds
call
(bad)
dec
sub
movs
sub
test
xchg
sbb
sahf
sub
sbb
lahf
and
pusha
dec
jb
jo
adc
adc
into
sbb
xor
adc
and
dec
test
pop
pop
xor
movs
fstp
punpcklwd
and
ja
test
call
mov
jp
das
mov
(bad)
mov
jle
pop
call
push
sub
cmp
lock
pop
inc
mov
pop
lahf
(bad)
and
pop
ret
popa
test
bound
xor
and
call
aaa
lods
mov
test
adc
pop
and
xchg
sub
mov
add
fisttp
imul
add
ficomp
push
and
out
cmp
imul
push
and
cli
dec
adc
lock
push
cmp
pop
(bad)
mov
inc
cmps
mov
add
call
ror
jo
out
xchg
loop
inc
jmp
adc
dec
lahf
loopne
cli
es
mov
adc
mov
xchg
sub
out
inc
jnp
rol
pop
xor
mov
ret
mov
ss
iret
rcr
test
movs
fnstsw
jbe
add
jmp
sub
sub
add
sub
shl
ds
loop
adc
fdiv
pop
enter
mov
scas
loop
imul
cli
stc
add
clc
or
into
xchg
retf
add
imul
aaa
rol
mov
jne
(bad)
aad
xor
stc
repnz
sbb
cmps
(bad)
test
push
cmc
or
dec
xor
mul
xor
fyl2xp1
xor
js
jnp
add
es
stos
daa
pop
shl
adc
push
outs
cmp
cmp
test
sbb
mov
or
and
and
xor
xchg
sub
add
mov
mov
dec
pop
stc
cmovo
ds
stc
in
in
stos
int
shl
or
dec
sbb
push
sub
add
(bad)
mov
call
sbb
shl
push
pop
iret
xchg
mov
rol
jmp
mov
psubw
mov
xchg
imul
call
jns
and
arpl
pushf
inc
sub
lea
lea
(bad)
ret
jo
mov
movs
rcr
adc
cmps
aaa
xchg
adc
or
fild
push
and
fmul
in
xchg
or
test
scas
lods
jmp
or
push
outs
imul
ror
push
mov
lds
mov
imul
fwait
xchg
adc
jno
xor
lods
pop
push
rol
inc
jg
data16
and
daa
and
bound
leave
mov
(bad)
xchg
mov
jns
inc
and
jle
mov
and
pop
cmc
push
clc
xor
call
clc
push
pop
arpl
adc
fwait
cmp
xor
ficomp
and
popf
outs
xchg
dec
or
dec
out
cmp
xchg
jle
hlt
ret
(bad)
mov
fs
dec
movs
sbb
(bad)
fsub
mov
popf
jg
push
addr16
and
retf
(bad)
out
or
cdq
out
mov
jbe
pop
push
mov
xchg
pop
dec
mov
sbb
inc
xchg
(bad)
xor
mov
je
jle
jne
jle
es
adc
lods
ret
lods
mov
mov
pop
add
out
cmc
jne
cmp
mov
int
cmps
rcr
aam
sub
pusha
lods
call
mov
mov
popa
mov
(bad)
push
mov
sar
and
sbb
aad
sahf
out
mov
dec
add
dec
cmps
xchg
add
int
and
repz
push
push
into
xor
loope
add
rol
push
xchg
stos
sub
dec
inc
lea
xchg
add
xchg
and
sub
retf
mov
loopne
imul
pop
mov
jmp
popf
add
ins
add
imul
add
retf
sbb
sar
xor
cmc
and
xchg
adc
xor
test
fsubr
jbe
sahf
ins
pcmpeqw
pusha
in
ins
hlt
mov
iret
imul
ss
add
sub
or
inc
sbb
xchg
sub
ss
shl
fwait
dec
cmp
sub
iret
sbb
fmul
retf
ror
sub
xchg
bnd
test
dec
mov
mov
imul
ror
dec
lods
mov
cld
mov
faddp
mov
sub
daa
scas
das
daa
retf
test
sub
jo
and
(bad)
call
mov
dec
inc
les
adc
cmp
stos
cmp
out
hlt
sbb
lds
std
jg
xchg
add
adc
jae
add
popa
sub
lock
xor
js
(bad)
hlt
imul
pop
xchg
xchg
fstp
stos
and
cmps
sub
leave
and
inc
fsubr
adc
out
push
sbb
dec
aas
and
push
cs
inc
inc
hlt
inc
xchg
dec
and
(bad)
cld
jmp
movs
dec
(bad)
xor
stc
sbb
xor
imul
cmp
jmp
pop
xchg
mov
es
das
mov
in
outs
sub
jecxz
cmp
ret
mov
retf
test
fwait
adc
cli
dec
xchg
cld
pop
cmp
mov
(bad)
in
bound
mov
mov
push
sti
(bad)
cmp
and
mov
jne
pop
xchg
outs
adc
out
jne
imul
sar
dec
dec
sbb
rol
in
push
mov
cs
dec
xchg
mov
jle
pop
mov
cmp
mov
(bad)
ror
clc
fst
xor
jno
outs
loope
sub
xchg
push
popf
jo
leave
pop
push
push
xlat
inc
push
jl
in
xlat
inc
inc
outs
cmp
jne
test
stos
dec
mov
push
cmp
aas
leave
jle
dec
sbb
push
xchg
fwait
jecxz
cmp
lods
or
lea
fisttp
xchg
push
cmp
fs
sub
adc
and
dec
jo
dec
into
adc
cmp
jmp
adc
mov
sub
pusha
xlat
jb
adc
mov
fs
mov
pop
pop
das
out
pushf
(bad)
jle
shld
ins
mov
mov
push
inc
movs
mov
cmc
xor
(bad)
(bad)
jmp
pop
shl
fdecstp
lods
adc
bound
fsub
adc
dec
adc
jno
shl
jg
ja
adc
call
jg
dec
ficomp
aam
jbe
test
outs
fwait
push
clc
cmp
cmc
jno
fst
and
xchg
cmp
cld
into
jb
mov
xor
mov
inc
push
sbb
add
push
ins
sbb
pop
or
xchg
loope
int3
lods
add
mov
inc
jmp
lahf
leave
jbe
call
adc
xchg
mov
push
xor
out
(bad)
(bad)
in
pop
cmps
lock
pop
mov
stc
xchg
loop
(bad)
push
xchg
cdq
mov
daa
xor
push
fld
sub
cmp
mov
aam
xcrypt-cfb
cmps
cmps
fld
std
retf
aad
jno
dec
inc
mov
xchg
inc
fwait
retf
adc
ins
jnp
and
(bad)
cld
call
ds
fstp
test
pusha
(bad)
in
dec
cmp
mov
xchg
jmp
xchg
mov
test
inc
sar
aaa
enter
jmp
scas
mov
push
pop
jbe
mov
ja
xlat
sahf
ins
adc
mov
imul
mov
in
imul
xchg
lods
scas
push
repz
xchg
fcmovnu
retf
mov
push
(bad)
push
sar
add
mov
or
mov
rol
push
pop
and
ins
outs
(bad)
retf
push
fidiv
dec
stos
xchg
xchg
stc
add
repz
push
push
dec
sahf
test
popa
aaa
cdq
mov
aaa
xchg
and
sbb
(bad)
test
dec
or
ror
xor
fcmovnbe
aad
ret
pop
mov
fimul
jne
(bad)
in
push
or
or
jmp
fnstcw
or
sahf
hlt
adc
(bad)
dec
das
arpl
jbe
jae
add
jg
scas
xor
sub
dec
sti
jmp
push
dec
(bad)
push
aam
mov
push
lds
jmp
mov
loop
clc
das
adc
sbb
push
fucomp
xor
adc
retf
popa
add
sti
retf
mov
xlat
(bad)
inc
jmp
cdq
mov
loopne
mov
mov
daa
mov
xchg
mov
lods
jb
xor
mov
add
(bad)
fisubr
mov
sub
xchg
mov
aas
jle
jns
(bad)
neg
frstor
and
(bad)
(bad)
xchg
xor
xchg
test
mov
jp
lahf
mov
jmp
mov
jp
and
xchg
sub
cmp
shl
cmps
xchg
fcomip
jl
gs
mov
shr
in
popa
add
cmps
shr
ja
xor
mov
dec
pop
xor
xchg
(bad)
xor
dec
sbb
jp
ins
cli
push
(bad)
mov
adc
add
nop
pop
mov
inc
hlt
mov
leave
pop
push
sbb
push
inc
sahf
jle
or
jns
std
jmp
push
or
mov
fsub
dec
clc
cmps
mov
lock
(bad)
pushf
ja
sub
adc
(bad)
pop
test
mov
add
jbe
test
stos
retf
repz
(bad)
dec
fsub
(bad)
mov
mov
cmps
loop
dec
sub
test
sbb
add
es
hlt
xchg
add
xor
hlt
adc
pop
jmp
hlt
cmp
or
stc
jmp
xor
aas
mov
lods
std
push
xchg
movs
and
mov
movs
adc
adc
in
mov
data16
mov
imul
or
adc
adc
xchg
dec
mov
popf
sbb
push
mov
jmp
jp
mov
mov
and
add
sub
jne
nop
and
scas
out
aas
mov
adc
pextrw
xchg
sahf
jmp
mov
inc
cmc
(bad)
call
xor
daa
ret
int3
push
(bad)
cmc
sbb
xchg
and
dec
repnz
imul
jmp
outs
fadd
mov
sar
adc
mov
cmp
int3
jge
cld
mov
xchg
cmc
mov
cmp
jl
cs
outs
(bad)
into
xor
pop
ja
jmp
sbb
and
int
jecxz
inc
scas
imul
sub
mov
cmc
xchg
jmp
push
repz
adc
fist
in
div
and
les
aad
mov
sbb
sbb
std
sub
repnz
cmc
std
push
ja
xor
arpl
(bad)
out
clc
jmp
test
addr16
and
sbb
mov
rol
mov
lea
and
leave
or
icebp
rol
test
movs
xchg
mov
(bad)
js
xor
jecxz
gs
jecxz
je
xchg
mov
cmp
push
xor
push
pop
jnp
sub
scas
adc
into
pop
sbb
cli
stc
rol
inc
mov
gs
sbb
test
xlat
(bad)
stc
test
fcomp
sub
fidiv
adc
in
pop
inc
call
push
(bad)
jns
bound
push
call
btr
(bad)
jmp
dec
retf
push
mov
clc
jl
in
test
pop
ds
jns
cmps
dec
inc
retf
adc
xchg
sub
mov
inc
jmp
push
sbb
pop
repnz
lds
or
mov
aad
es
rep
push
inc
cwde
add
retf
mov
lock
retf
call
lea
push
sub
and
push
cli
sbb
xchg
mov
pop
mov
push
loopne
xor
xchg
and
inc
jb
mov
ins
test
ret
in
imul
rcr
xchg
test
scas
sub
rol
sub
jae
and
test
popf
jmp
mov
xchg
add
xchg
dec
sbb
pop
add
mov
sub
mov
les
lods
std
fdivr
and
pop
cmp
pmulhuw
mov
mov
jbe
mov
loop
adc
pop
sub
jns
inc
into
es
jecxz
xlat
fidiv
ror
leave
cmc
pop
ror
test
mov
fbstp
scas
fisubr
mov
std
lods
dec
sbb
(bad)
rcr
gs
xchg
ret
sub
cdq
pop
push
mov
call
aam
mov
push
xchg
out
into
xor
sbb
out
ret
aam
sub
(bad)
pop
clc
addr16
fisttp
jb
div
jecxz
push
shrd
adc
outs
jne
xor
or
push
jbe
ds
sub
cmp
stc
and
inc
add
mov
mov
mul
inc
aaa
lock
xor
push
stc
shl
in
xor
cmp
outs
fiadd
mov
dec
push
mov
es
int
xor
xchg
sbb
jecxz
push
test
mov
cmp
xchg
in
shl
jp
dec
cs
mov
iret
dec
fs
scas
inc
lods
pop
test
in
dec
pop
jne
dec
inc
xor
jno
ins
lods
and
pop
xor
cmps
xchg
les
dec
scas
xchg
push
pop
dec
and
gs
in
jge
in
ret
jns
pusha
in
repnz
jp
add
adc
xchg
mov
ret
push
jns
pop
fistp
dec
push
es
xchg
(bad)
cmps
fnsave
mov
bound
and
clc
and
(bad)
mov
cmp
aaa
fild
cmp
push
adc
cmp
jns
push
adc
push
dec
call
movs
aad
ins
adc
lahf
ret
push
repz
adc
mov
jb
imul
movs
ss
ret
mov
hlt
adc
mov
ins
jmp
push
push
test
push
into
cmps
ret
loope
js
or
pop
fsub
retf
adc
mov
and
cmp
dec
out
fisubr
pop
mov
lahf
frstor
and
(bad)
push
out
rol
hlt
enter
rcr
and
cli
add
or
or
pop
add
inc
stos
neg
loop
cwde
enter
ret
xor
jmp
dec
(bad)
lock
mov
jecxz
stos
leave
and
or
test
jne
mov
mov
mov
retf
addr16
test
les
das
push
sbb
std
or
ins
cli
ds
pop
xchg
jge
std
mov
push
sub
and
retf
inc
inc
pop
outs
lock
sub
aad
in
jne
ds
sbb
xchg
xor
cmp
adc
sbb
mov
stos
add
cld
outs
push
call
in
(bad)
xchg
mov
aad
popa
jo
pop
and
(bad)
push
int
fld
rcl
push
das
pusha
mov
je
sbb
or
mov
dec
mov
mov
jnp
cwde
cdq
fsubr
adc
test
mov
inc
xor
adc
mov
add
add
ret
jecxz
mov
clc
jmp
pop
retf
adc
test
movs
scas
in
cs
or
hlt
xchg
jg
scas
xchg
cli
dec
test
bound
out
das
jnp
aad
xor
pop
mov
outs
pushf
push
inc
test
pop
cwde
push
aas
push
adc
xor
in
pop
shl
es
pop
pop
dec
or
popa
outs
addr16
xchg
and
out
inc
test
ss
mov
inc
cmc
jecxz
and
imul
int3
test
xchg
loopne
or
cdq
dec
(bad)
cmp
mov
(bad)
mov
lahf
pop
and
xchg
mov
dec
pop
mov
scas
sub
loope
xor
fidivr
or
mov
imul
lods
or
inc
aas
mov
ret
out
cs
sbb
(bad)
or
ror
loopne
jmp
push
cli
push
lods
sub
retf
mov
and
sar
js
adc
xchg
sbb
push
ret
out
(bad)
repnz
imul
inc
xchg
shl
and
stos
sub
std
sbb
mov
jge
(bad)
pop
jo
out
out
xor
dec
movs
call
jle
jecxz
adc
sub
pop
push
sub
inc
movs
ds
out
shr
sbb
cmp
xor
jnp
jmp
pusha
and
pop
add
xor
fdivr
jg
pop
or
pop
mov
push
cmp
sbb
aas
jle
fimul
pushf
mov
sbb
cmp
(bad)
bsf
nop
mov
inc
cmp
jnp
and
sti
mov
js
lock
cmp
sar
out
cs
pop
in
xchg
pusha
data16
sti
je
pop
or
inc
mov
and
push
mov
pusha
or
movs
loopne
in
add
in
xchg
dec
xor
mov
push
mov
paddusw
pextrw
or
mov
out
push
or
and
jecxz
push
pop
int3
or
pop
cmps
ror
mov
out
sbb
aaa
fmul
and
xchg
xor
loop
(bad)
rcr
loopne
imul
aaa
dec
shr
arpl
dec
sbb
jle
mov
mov
sbb
mov
jnp
adc
shr
or
cli
mov
mov
mov
inc
jb
pop
jecxz
push
in
xor
mov
fadd
jnp
shl
aas
xchg
jmp
push
jnp
add
xor
or
adc
test
and
scas
adc
neg
sub
imul
loop
push
int3
inc
cmp
push
loope
sub
fisub
sbb
inc
xchg
mov
xchg
push
pop
js
mov
pop
mov
and
loope
pop
ja
mov
inc
or
xchg
in
adc
(bad)
jecxz
ja
push
adc
aam
mov
mov
(bad)
retf
dec
dec
xor
retf
fdiv
xchg
test
nop
mov
retf
and
push
and
xor
sbb
(bad)
xor
imul
(bad)
stos
mov
dec
ror
push
adc
fiadd
cmp
jle
scas
push
in
repnz
and
hlt
outs
loop
call
outs
cmp
or
imul
stos
add
mov
retf
sub
out
sub
test
clc
or
out
loopne
add
cld
je
dec
ds
jecxz
cwde
mov
fwait
(bad)
xchg
or
lock
dec
dec
push
jle
jmp
and
fidivr
mov
xor
jle
call
and
mov
div
fisttp
mov
es
into
gs
and
adc
xor
jne
mov
jo
adc
retf
push
fcomp
outs
aas
sub
sub
inc
inc
sbb
sub
shl
sbb
push
outs
add
pop
add
sbb
pusha
cmps
xrelease
sbb
ins
sahf
adc
loopne
cmc
dec
pop
dec
imul
dec
dec
and
inc
xchg
popa
xchg
jae
and
jle
inc
fdivrp
fs
shl
add
pop
dec
add
out
mov
loope
ds
pop
inc
or
scas
leave
neg
fst
dec
mov
es
loopne
mov
inc
push
inc
push
add
mov
outs
inc
bound
enter
in
pushf
push
add
dec
lock
ja
repz
push
mov
clc
mov
aad
das
test
xchg
leave
push
jg
jmp
push
retf
cmp
jmp
push
mov
test
push
xor
pop
push
adc
(bad)
mov
inc
ds
push
mov
xchg
lds
test
movs
test
scas
ret
inc
retf
adc
push
arpl
shl
dec
dec
sti
jl
sbb
mov
pusha
fisubr
cmp
xchg
jno
div
jl
inc
xor
mov
pop
mov
sub
call
in
or
bound
pop
enter
dec
sub
in
enter
push
lds
(bad)
push
adc
(bad)
pop
cld
add
pop
repz
mov
cmp
sbb
test
ja
mov
dec
and
push
mov
jp
xlat
inc
aas
push
push
inc
(bad)
push
aas
leave
mov
dec
xacquire
lea
retf
mov
std
retf
int3
test
stc
jns
cmp
ds
xchg
ficom
xchg
inc
mov
dec
and
cdq
ins
imul
mov
xchg
adc
(bad)
and
mov
movs
aas
mov
loope
dec
mov
aad
push
retf
cli
ins
xchg
mov
mov
pop
push
push
cli
mov
mov
jle
cmp
aaa
pop
lods
mov
inc
loopne
jne
sahf
test
push
int3
push
outs
stos
add
mov
cld
into
pop
ja
outs
cs
ds
cmovbe
xlat
into
sahf
int3
jno
sbb
aas
xchg
dec
jl
int3
or
add
and
mov
push
xchg
rcl
fwait
jb
mov
in
push
stos
pop
xchg
repnz
pushf
and
inc
push
add
sub
mov
call
adc
scas
popf
adc
and
jl
mov
fnstcw
sbb
mov
cmp
adc
pop
mov
xchg
mov
mov
jmp
out
(bad)
sbb
push
shr
add
push
sbb
sub
pusha
cmps
retf
dec
loop
mov
sub
and
ret
xchg
addr16
neg
in
mov
loopne
lods
pop
fadd
repnz
cwde
(bad)
push
xor
pop
fcom
cwde
cli
nop
inc
mov
cmp
push
dec
mov
or
pop
retf
adc
jmp
outs
mov
shl
and
movs
and
pop
xchg
and
sbb
data16
repz
sub
push
call
jle
xor
mov
das
cmp
dec
adc
lds
adc
xchg
dec
js
aad
ret
test
cdq
shr
pop
movs
mov
popaw
or
loop
int3
gs
sub
inc
call
xchg
loop
add
cmp
mov
xor
push
fcmovne
inc
(bad)
fnstcw
sub
push
pop
out
lahf
pop
stc
(bad)
adc
ja
loop
cmp
repz
cwde
xchg
mov
imul
or
popa
cmp
test
cmp
lea
daa
adc
mov
scas
rcl
add
mov
sbb
ss
scas
push
and
jecxz
in
sti
sbb
clc
xor
lahf
je
nop
cs
jp
dec
dec
xor
cs
mov
xor
ja
aam
jno
add
xchg
jg
pop
jl
pop
cdq
xor
jae
jnp
sub
inc
jno
or
xchg
xor
xchg
les
push
jae
xchg
nop
data16
push
retf
push
loope
int
js
inc
jecxz
adc
and
inc
outs
inc
outs
fidiv
es
outs
sub
pop
pop
jns
(bad)
(bad)
(bad)
call
or
cwde
add
arpl
sbb
push
repnz
jg
adc
movs
push
push
sub
mov
in
mov
ror
mov
jb
push
fdiv
sti
mov
rcr
push
and
pop
std
inc
fisttp
push
push
ss
fidivr
mov
imul
(bad)
jp
mov
push
inc
sub
sti
scas
pop
imul
out
ins
mov
inc
mov
mov
adc
cmp
cmp
sbb
ja
movs
dec
dec
(bad)
test
ror
jmp
popa
add
or
loope
adc
addr16
bound
pop
mov
inc
fcom
ror
pop
push
pop
and
or
cmp
xor
push
push
jecxz
cs
in
push
and
repnz
lock
int
dec
movs
in
div
mov
ja
in
xchg
sbb
mov
jmp
fisub
and
or
xchg
cmc
mov
mov
outs
(bad)
pop
stos
(bad)
lods
ins
add
inc
xor
repz
outs
xchg
stc
sbb
jae
lock
xor
ss
hlt
sub
lods
popf
xchg
sbb
rcr
inc
cdq
jae
fdiv
jns
pop
scas
and
or
dec
dec
ficom
add
stos
arpl
movs
out
jae
push
dec
fidivr
dec
jl
xor
add
stc
xchg
movs
sub
in
out
xchg
jne
imul
jb
xchg
lds
shl
gs
jecxz
enter
or
(bad)
lahf
pop
xchg
inc
cmp
xchg
aad
xor
jmp
ror
xor
outs
jmp
rol
mov
xchg
jle
movs
push
add
mov
jmp
fcmovnb
in
or
(bad)
and
sar
ret
and
stos
test
sbb
and
and
dec
jae
push
loope
test
mov
fdiv
popf
(bad)
fnstcw
bnd
pop
test
pop
and
inc
xchg
aad
cmp
imul
inc
aam
jb
sbb
dec
in
mov
js
cs
adc
pop
xor
jne
mov
iret
xchg
(bad)
dec
cld
je
mov
xor
out
dec
aas
iret
ja
paddsw
loop
mov
sbb
popfw
inc
mov
push
(bad)
dec
repnz
dec
cmp
xchg
jp
cmc
ja
jmp
jmp
cld
(bad)
cmps
mov
mov
pop
retf
int3
jae
sti
sbb
cmp
sub
dec
js
sti
sub
test
(bad)
shl
shl
mov
ja
lds
dec
fisub
in
ret
loope
add
cli
push
mov
fnstsw
mov
je
in
mov
cmp
fnsave
push
shr
jnp
andps
xchg
repz
sbb
dec
xchg
lahf
(bad)
or
bound
les
and
mov
cli
push
or
add
and
mov
int3
lods
std
jmp
popf
and
sub
jmp
ds
cmc
(bad)
cmp
pop
fs
mov
add
loope
pop
mov
mov
mov
xor
sub
jmp
add
scas
icebp
loopne
mov
sub
rol
call
int3
xchg
xchg
push
adc
sub
fnsave
cmp
jle
add
not
xor
jnp
pusha
push
mov
scas
add
xor
sub
retf
push
mov
sub
sbb
retf
xor
inc
jns
cmps
xchg
and
or
(bad)
cmovo
in
push
xchg
je
dec
sbb
xor
das
outs
sub
hlt
push
std
pushf
inc
call
lds
shl
retf
rcl
outs
xchg
jbe
and
les
pushf
iret
cwde
sbb
stos
in
push
jge
mov
inc
pusha
jbe
aaa
fild
mov
scas
fcomip
aad
sbb
adc
in
shl
sar
push
ret
cmps
loopne
cmp
add
cmp
pop
cs
std
les
mov
mov
sahf
sub
pushf
mov
push
sahf
leave
repz
and
adc
std
mov
push
sub
push
fcom
shl
push
enter
mov
rcr
sbb
sbb
test
adc
sub
push
jmp
jne
xlat
mov
inc
jnp
movs
mov
sub
pop
xchg
add
or
jle
sbb
std
aaa
ins
jnp
cmc
pop
sub
inc
dec
arpl
out
ss
cmp
inc
mov
jp
ficomp
rcr
sbb
pop
push
pop
std
test
adc
cmc
in
aam
in
dec
ret
int3
xor
cmp
cdq
mov
sub
test
lods
inc
cld
cmc
outs
imul
(bad)
outs
add
inc
jg
sub
xlat
jns
cmp
js
shr
mov
push
ficom
int
xor
xchg
cmps
add
mov
gs
dec
aam
xor
add
xor
inc
daa
mov
js
(bad)
fadd
mov
js
pop
call
and
cmp
mov
sub
push
pop
mov
cmp
jl
outs
ror
push
cmp
lds
sbb
les
lods
inc
les
inc
add
retf
aad
gs
inc
int
xor
and
mov
stos
push
push
addr16
mov
mov
mov
mov
mov
jl
test
mov
push
imul
xchg
arpl
inc
test
jmp
sub
shl
cld
xchg
dec
dec
jno
das
sbb
fbstp
sbb
gs
dec
pop
inc
mov
sub
xchg
out
mov
sbb
xchg
ret
sahf
xchg
pop
rol
adc
xor
repz
imul
jmp
enter
repnz
das
inc
outs
bound
push
sub
and
ror
cmc
out
xchg
mov
push
ror
mov
sahf
lods
fild
push
movs
and
sbb
imul
mov
sub
sub
scas
and
scas
pop
xchg
shr
aaa
out
or
in
mov
pop
mov
push
jnp
jge
sbb
pop
pusha
stc
inc
std
jge
pop
jne
retf
sub
les
aaa
sar
sub
mov
jae
xchg
mov
fnsave
sub
mov
das
jecxz
dec
jmp
adc
pop
jle
dec
retf
inc
cmp
and
lea
iret
or
xchg
mov
cmc
sub
fstp
pop
jg
icebp
iret
rcl
ds
pop
jne
aas
ins
and
les
and
xor
neg
push
icebp
mov
xor
add
and
mov
mov
mov
push
fs
leave
or
jp
mov
repz
pop
loop
jb
mov
js
lea
fidiv
int
pop
inc
pop
jle
loope
adc
cdq
inc
add
adc
jecxz
push
lahf
cmp
scas
sbb
sbb
xchg
cmp
fst
loopne
jnp
mov
rol
push
mov
idiv
aas
and
(bad)
movs
scas
and
mov
mov
add
outs
les
jmp
sub
mov
(bad)
mov
fstp
inc
mov
mov
mov
xor
int
outs
idiv
mov
cmp
fst
repnz
xchg
pushf
push
fistp
jnp
mov
pcmpgtb
and
xlat
dec
shl
sub
les
ror
loop
(bad)
mov
loope
jae
mov
dec
jge
retf
jno
out
pop
or
idiv
mov
fadd
mov
es
push
lods
adc
ja
mov
mov
xchg
mov
jmp
mov
push
push
call
sub
inc
xchg
in
aam
pop
pop
dec
pop
out
mov
pop
(bad)
dec
mov
popa
and
(bad)
sahf
fs
pop
imul
and
leave
ret
mov
jp
fdiv
jle
pop
daa
fisubr
push
pop
jle
daa
dec
and
push
cdq
and
adc
cdq
mov
cdq
movs
add
cmps
(bad)
push
adc
cmc
adc
jle
push
jmp
add
add
fcom
and
add
adc
scas
or
test
rcr
push
mov
test
mov
adc
pop
pop
cwde
mov
jo
add
into
mov
fdivp
movs
jmp
xchg
shr
add
mov
rol
mov
icebp
mov
push
jnp
repnz
popa
jo
mov
dec
and
shl
push
stc
cmp
pusha
popa
movs
test
test
test
(bad)
out
mov
lods
in
pop
test
jae
iret
repz
inc
adc
fisubr
pop
mov
pop
mov
dec
adc
xor
ss
pop
hlt
(bad)
mov
mov
dec
sbb
sub
fisub
es
mov
(bad)
mov
mov
pop
lahf
sbb
data16
mov
test
repnz
aad
inc
xchg
xchg
in
cmps
outs
push
test
inc
push
fwait
dec
sub
sbb
mov
movs
aaa
retf
push
js
jb
mov
not
lods
das
mov
jae
(bad)
retf
imul
rcr
shl
imul
pop
sbb
in
and
jge
sahf
xor
ss
xor
not
push
adc
sub
ror
push
stos
xchg
or
lods
aaa
jns
mov
in
xchg
xchg
mov
bswap
jns
push
daa
dec
mov
into
add
nop
sub
imul
stos
push
loopne
lock
adc
dec
jmp
jp
dec
ss
mov
hlt
mov
xchg
jb
ins
loopne
shr
xchg
pop
loopne
aad
stc
xor
mov
pop
mov
aaa
fisub
or
fisttp
arpl
mov
retf
divps
bound
loopne
cmp
mov
mov
sbb
les
(bad)
push
cmp
lahf
loopne
cmp
adc
icebp
lods
les
pop
loopne
(bad)
cmp
arpl
fwait
jo
mov
sbb
adc
iret
retf
push
cmp
or
lock
mov
jbe
mov
int
jbe
inc
adc
xchg
cwde
sub
push
xor
shr
sub
inc
int3
in
mov
mov
push
and
call
sbb
out
xor
out
gs
pop
sub
movs
cmps
adc
push
into
mov
rcl
into
cmp
icebp
scas
js
cmp
dec
sahf
stos
loop
jecxz
aaa
jne
out
or
sbb
pop
dec
test
and
loop
cwde
inc
pop
iret
pop
or
ins
xchg
pop
scas
push
outs
cli
jge
into
mov
cmp
xor
pop
mov
and
movs
dec
mov
xor
mov
xchg
cmc
fcom
or
les
shr
jae
gs
add
les
je
imul
cmc
add
aas
(bad)
jns
shr
in
add
sub
mov
fs
push
out
mov
and
shl
out
mov
mov
in
and
aas
cmc
mov
sub
ins
pop
push
mov
push
add
sbb
aad
sbb
pop
pop
or
lock
adc
hlt
jecxz
cmps
loopne
add
jge
jle
int3
and
icebp
popf
jno
ins
out
ret
sbb
xor
mov
jmp
int
fcom
popf
in
cmps
jmp
push
cmp
test
xchg
pushf
sbb
outs
mov
sbb
test
jne
push
in
(bad)
cld
fadd
or
push
daa
mov
dec
mov
je
mov
sar
out
loop
int3
fisubr
cdq
stc
xor
pop
xor
inc
dec
nop
ins
mov
or
bound
and
ja
xor
lods
pop
xor
cmp
in
pop
adc
ins
and
bound
push
icebp
repz
mov
dec
sahf
icebp
jmp
enter
loope
ror
pop
mov
bound
call
mov
in
xchg
fidivr
add
pop
dec
fadd
es
lods
cmp
cmp
add
mov
dec
jl
movs
js
aaa
push
adc
add
sbb
mov
and
shr
jns
mov
ret
shl
jns
enter
fmul
int3
out
mov
fwait
xchg
mov
xchg
into
call
js
fisttp
jnp
retf
(bad)
dec
push
push
pop
jmp
push
push
sar
aaa
mov
pop
inc
loop
push
sub
or
mov
syscall
jge
loope
fisttp
cmp
mov
xor
cmps
push
jo
mov
ret
or
inc
fdivp
jl
xchg
cmps
push
jle
push
pop
xchg
stc
or
jle
add
mov
(bad)
fbstp
data16
jns
and
hlt
outs
div
pop
and
mov
dec
mov
pop
jle
jnp
sti
aas
std
push
(bad)
jl
inc
mov
pop
into
movs
xor
adc
inc
das
iret
sub
stos
popa
mov
stc
jp
push
imul
and
mov
shr
or
sbb
cmc
xchg
jle
pop
or
ja
sbb
aaa
scas
mov
dec
lea
out
or
ins
loopne
inc
mov
jo
fwait
out
ja
jp
fwait
ret
xlat
mov
int
adc
in
movs
ror
push
mov
push
push
icebp
out
popf
push
sub
mov
in
adc
cmp
mov
push
dec
mov
aad
sub
xor
dec
ins
xchg
shl
outs
pop
aaa
sti
sub
mov
fidivr
repz
mov
sub
es
xchg
jb
fadd
stos
inc
push
inc
out
and
mov
sub
fistp
cwde
enter
ins
jmp
push
aaa
adc
adc
or
xchg
pop
mov
inc
sub
popf
fwait
aam
scas
(bad)
dec
dec
jle
inc
xor
jp
aaa
ja
sar
pushf
and
movs
add
mov
sub
popf
xchg
and
cs
mov
mov
jmp
or
popa
adc
and
(bad)
icebp
cmp
sbb
mov
pop
xor
cdq
xor
inc
mov
ror
imul
adc
setl
add
or
popa
adc
out
test
push
sbb
sbb
test
repz
adc
mov
gs
das
push
mov
pusha
and
mov
xlat
sbb
into
jecxz
int3
ds
sub
fadd
(bad)
xchg
or
enter
pop
adc
sub
int3
into
inc
xchg
or
sti
xchg
pop
pop
into
fs
or
cli
fsub
ja
in
fwait
push
xchg
pop
jmp
xchg
test
aaa
cmp
mov
xor
movhps
mov
bound
and
scas
pop
ins
jmp
push
sbb
and
cwde
add
mov
mov
dec
mov
mov
cs
(bad)
xor
mov
xor
cmp
fsub
bound
and
int3
dec
stc
cmps
retf
ins
into
aad
(bad)
push
ret
adc
jae
sub
dec
sahf
jg
xchg
jmp
fwait
dec
push
scas
into
inc
push
aam
das
push
lods
jne
in
jbe
test
into
ins
rol
jp
dec
fwait
sahf
call
outs
jecxz
call
mov
fdivr
or
arpl
(bad)
dec
(bad)
shr
adc
cdq
retf
ja
lahf
pop
inc
pop
xchg
scas
inc
repz
inc
lods
xchg
mov
les
data16
dec
xchg
test
cdq
fdiv
push
stc
mov
inc
jno
js
mov
and
pop
stc
inc
retf
push
pop
push
fild
stos
add
fs
pop
ss
and
fdivr
pop
push
push
repnz
sub
lahf
nop
cmp
pop
mov
or
(bad)
adc
cmps
repnz
dec
rcr
xlat
mov
outs
ror
pushf
fdivr
mov
pop
xchg
rol
into
mov
cmps
into
outs
imul
ds
cmc
shl
inc
ror
loopne
in
mov
fs
scas
pop
ja
mov
mov
jbe
scas
retf
mov
icebp
enter
inc
mov
push
das
adc
stos
xchg
dec
jae
sbb
add
popa
lods
jl
rcr
dec
mov
movs
hlt
pop
sbb
jmp
jge
mov
(bad)
out
mov
cmps
dec
inc
dec
xchg
add
mov
repz
sbb
jmp
inc
pop
xchg
sti
jno
repnz
scas
dec
dec
pop
sbb
push
lock
cmp
push
mov
inc
std
lock
xchg
dec
pop
push
nop
fnsave
arpl
js
in
add
jo
cmp
jne
sbb
fdiv
idiv
mov
adc
js
mov
adc
outs
pop
mov
ss
sar
xor
je
das
test
in
adc
and
xchg
inc
jnp
mov
jge
ds
mov
mov
ret
fst
test
aas
ds
mov
and
int3
cli
(bad)
lock
pop
fsubr
pushw
dec
inc
mov
sub
call
fidiv
mov
xor
mov
bound
push
jl
shr
repnz
mov
imul
mov
inc
adc
adc
aad
dec
jnp
pusha
bound
sti
sbb
xchg
lods
cmp
bnd
mov
adc
call
and
rcl
das
ins
mov
pop
lods
call
loopne
dec
mul
jmp
loop
outs
push
(bad)
fld
jge
mov
mov
into
push
(bad)
adc
mov
pop
xchg
sub
shl
and
sbb
sub
pop
iret
xor
int3
push
or
dec
mov
dec
lea
and
add
cmp
mov
addr16
imul
pushf
or
jno
push
and
js
retf
popa
js
fldcw
int3
and
sbb
adc
into
pop
fcomp
iret
pusha
push
inc
adc
out
inc
jae
and
xchg
sub
ja
and
icebp
and
leave
call
jg
cmp
test
ins
(bad)
mov
(bad)
jmp
out
stos
pop
sub
inc
push
xchg
aas
retf
jge
sub
xchg
ja
movs
and
(bad)
popf
cld
fs
xlat
and
xor
rol
out
(bad)
jne
xor
mov
xor
push
loope
xchg
mov
cmps
fld
fcmove
mov
sahf
daa
or
aad
mov
jp
xor
inc
adc
or
dec
std
ds
imul
loope
mov
and
mov
scas
mov
add
lahf
jne
xor
cdq
call
pop
mov
jnp
cwde
dec
daa
(bad)
jle
adc
ins
lahf
sub
out
cmp
pop
ret
sbb
outs
pop
loope
add
test
cs
adc
or
stos
jne
cli
push
clc
repnz
cmp
leave
in
test
test
add
push
inc
(bad)
fist
shr
sbb
inc
cs
hlt
pop
or
packuswb
fwait
retf
or
out
xor
cmp
sub
adc
das
test
add
jg
cmps
(bad)
daa
mov
imul
cli
adc
lock
lods
and
jp
icebp
outs
rcl
repz
movs
sbb
mov
dec
jae
daa
retf
push
fdivr
retf
fadd
push
mov
and
out
xchg
fwait
out
jae
sbb
push
sbb
mov
data16
pop
cbw
ins
xchg
dec
bound
adc
movs
(bad)
popa
cmp
or
cdq
mov
mov
jg
mov
pop
add
and
pop
in
xlat
cmp
ds
test
cmp
cmp
sbb
fcmovu
out
mov
popf
push
cmp
addr16
pop
mov
scas
jbe
test
sbb
or
ja
daa
ss
jmp
jl
movs
sbb
push
mov
mov
jmp
cld
cmp
mov
in
imul
xchg
sti
std
xchg
mov
mov
out
cmp
ss
cmp
pusha
cwde
fcomp
push
loopne
(bad)
mov
test
jbe
jno
dec
test
fdivp
xchg
sub
call
mov
pop
mov
xchg
dec
lds
shl
cmc
sahf
dec
push
sbb
xchg
sub
mov
and
xor
sbb
neg
inc
cmps
push
dec
cld
mov
sahf
jb
pop
mov
adc
xor
jmp
enter
pop
mov
dec
jmp
xor
int
or
sar
inc
ret
mov
inc
push
mov
jbe
fmul
fisubr
call
into
adc
adc
xchg
clc
inc
ret
mov
dec
dec
shl
jmp
call
inc
aam
push
push
or
and
add
mov
xchg
call
lahf
sti
in
ins
sbb
inc
iret
retf
lods
xchg
minps
add
sub
cmp
imul
jnp
mov
pop
or
out
inc
pushf
(bad)
or
inc
inc
and
lahf
jne
mov
lock
cmp
mov
xor
lds
xor
pop
adc
lods
mov
(bad)
loope
ins
cmp
jp
fadd
lahf
jle
fiadd
inc
mov
je
shr
jmp
mov
push
add
and
cwde
hlt
sbb
jmp
xor
dec
add
mov
movs
cmps
outs
push
cmp
sub
arpl
and
aaa
aad
(bad)
jmp
pop
std
(bad)
jmp
or
jp
xor
leave
in
xor
pop
add
xchg
repz
add
repnz
je
xor
addr16
movs
or
call
(bad)
xor
imul
test
movs
arpl
lea
dec
mov
jo
or
push
fcomp
sub
mov
jl
aad
sbb
mov
std
mov
push
pop
or
fwait
push
pop
cdq
xchg
mov
iret
outs
xchg
pop
mov
jo
adc
std
or
cwde
xchg
iret
imul
pop
ret
sub
dec
pop
sbb
mov
dec
nop
out
ins
test
jbe
sti
or
cmps
adc
push
and
fstp
lods
jne
lods
sub
retf
mov
pushf
pop
hlt
test
jmp
enter
test
rcr
sbb
aam
call
(bad)
pushf
mov
xchg
gs
icebp
push
mov
pop
fsubr
xchg
hlt
ins
lods
jae
cmp
int3
loope
cmps
outs
pop
mov
mov
hlt
push
fistp
jnp
dec
mov
lea
xlat
sbb
mov
fcmove
lods
js
dec
cmp
aad
adc
jmp
mov
inc
mov
xor
int
stc
xchg
mov
cmp
inc
jne
mov
sbb
(bad)
cmc
das
jl
jg
jl
ds
mov
dec
aam
add
xor
std
jp
and
mov
push
xlat
xor
mov
dec
rcr
lahf
stc
fdivp
pop
mov
ret
scas
adc
sbb
test
dec
and
mov
inc
jge
and
jle
cld
sub
pop
adc
mov
jnp
sbb
call
inc
fdiv
cmp
fcmovnu
(bad)
or
mov
mov
sub
in
in
xchg
xchg
into
dec
shl
add
mov
test
dec
data16
and
aaa
xchg
lods
inc
cmps
icebp
setg
xchg
mov
sub
and
ja
cld
cdq
xchg
jle
pop
jmp
jno
push
inc
push
cmp
push
and
ins
mov
stos
mov
fbstp
xlat
sbb
jl
iret
ja
stos
test
aad
xchg
push
call
cmps
(bad)
sbb
loopne
mov
loopne
ss
ds
in
sub
xchg
mov
mov
bound
xor
cmp
xor
xchg
pop
cld
sbb
imul
mov
dec
ins
bound
inc
les
push
or
stc
adc
or
push
fdiv
test
push
xchg
out
mov
imul
test
sbb
scas
call
call
in
cdq
cmp
push
sub
and
pop
retf
out
dec
and
dec
jecxz
dec
xchg
inc
inc
gs
adc
les
test
sbb
and
mov
mov
and
and
cmp
sub
sbb
cmp
mov
and
push
sbb
jae
mov
loop
mov
fcom
mov
or
push
pop
adc
leave
sbb
sub
clc
fisub
in
fs
cmp
xchg
outs
int
push
sbb
pop
push
or
sbb
pop
es
push
mov
add
inc
sub
jb
shr
inc
lock
mov
dec
iret
outs
int3
or
in
adc
push
cdq
ds
inc
rsm
pop
add
cmps
xor
popa
pop
push
mov
xchg
dec
fcomp
jp
cli
out
ins
inc
jo
pop
mov
push
jge
or
mov
pushf
ficomp
stc
mov
mov
rcl
popa
sar
cmp
lahf
repz
in
jns
(bad)
and
pop
push
mov
mov
cmps
imul
jg
pop
jmp
rcl
fs
adc
shl
adc
jecxz
outs
push
div
push
cmc
fwait
xchg
xchg
(bad)
shl
or
hlt
bound
jge
iret
mov
mov
push
aad
dec
dec
mov
ret
mov
(bad)
inc
shl
je
mov
leave
ja
mov
pusha
inc
sbb
mov
mov
mov
xchg
ins
lds
push
mov
inc
jae
jecxz
xchg
ins
cmp
inc
mov
call
frstor
ss
mov
inc
and
jae
jns
cmps
das
test
push
inc
lahf
push
push
add
xchg
add
mov
lock
icebp
cld
or
dec
mov
jb
arpl
lock
cmps
movs
adc
fs
inc
add
into
mov
add
sbb
mov
jp
xchg
xchg
sub
xor
sbb
push
mov
cmc
pop
pop
adc
les
inc
out
arpl
inc
cdq
add
push
pop
retf
mov
imul
stos
mov
push
call
dec
jle
fldlg2
xchg
dec
jbe
loope
jl
sbb
mov
push
or
cmp
shl
std
lds
sbb
nop
jo
pop
dec
cdq
add
xor
push
jp
push
mov
adc
ret
shl
call
mov
push
push
data16
lods
xor
sub
mov
loop
jb
loope
fdiv
adc
out
xlat
cs
hlt
sti
inc
test
add
shr
test
sbb
pop
pop
cmp
mov
(bad)
pop
pusha
aas
lods
fsub
add
sub
stc
ret
sahf
ficom
dec
in
xor
aad
sub
push
mov
or
jns
dec
icebp
cmp
pop
(bad)
xlat
leave
sti
dec
fnsave
mov
sbb
ror
aas
cwde
aaa
ins
inc
sub
mov
or
mov
(bad)
retf
(bad)
test
ja
mov
cmp
sub
es
add
into
adc
or
xor
mov
loop
ins
inc
hlt
and
push
lock
out
push
out
pop
repz
nop
mov
fstp
xchg
and
adc
pop
fs
test
xor
cmps
adc
jns
clc
cmp
fdivr
daa
mov
dec
and
or
jmp
retf
inc
inc
rol
sahf
(bad)
pop
jo
std
outs
adc
xchg
and
jle
loopne
push
xchg
loope
rcr
xor
pop
push
into
jle
jmp
inc
fnsave
sbb
xchg
bound
add
ss
dec
ja
call
or
sbb
push
lods
cmp
mul
sahf
loopne
adc
xchg
int3
add
xor
push
(bad)
fisub
mov
ins
es
ret
xchg
into
loope
cwde
xchg
sti
out
and
pushaw
cld
jl
loop
outs
inc
add
xchg
mov
cwde
btr
dec
push
jg
push
mov
(bad)
cmp
and
mov
mov
popf
dec
push
push
pop
xchg
add
lahf
and
jbe
adc
movs
mul
inc
sub
mov
in
jg
stos
pop
loopne
fbstp
call
jg
sbb
test
loopne
sbb
dec
mov
cmp
jns
inc
xchg
cmp
push
fs
jmp
jne
das
jp
push
or
dec
leave
fiadd
aaa
sti
dec
icebp
fistp
sub
sub
mov
xor
sub
je
sbb
fiadd
dec
inc
outs
ss
popa
hlt
sub
stos
sbb
test
sub
mov
adc
sbb
ins
ret
mov
cmp
or
enter
mov
sub
xor
jbe
dec
(bad)
hlt
sub
scas
cmp
(bad)
fisub
mov
jno
sub
lds
stc
js
test
std
test
nop
adc
stos
mov
cmp
add
jnp
dec
and
mov
cmp
jecxz
adc
add
cmp
push
jecxz
aad
ins
je
jmp
and
jg
cmp
popf
mov
nop
push
sbb
dec
into
mov
movs
push
add
das
ins
outs
loopne
sahf
repz
sbb
ja
fbstp
mov
mov
sti
or
jae
test
adc
inc
inc
xlat
cmp
xor
into
jmp
gs
js
das
mov
jb
lea
add
loope
sub
mov
bound
lods
xchg
inc
arpl
and
mov
xor
add
sub
int3
mov
imul
cmc
pop
(bad)
push
retf
repnz
dec
pop
into
scas
sbb
cwde
xchg
fnstcw
shl
xchg
sar
(bad)
and
inc
inc
sti
mov
pop
(bad)
mov
sub
es
cmp
addr16
dec
sbb
or
ja
push
(bad)
lahf
sahf
inc
jae
mov
add
cmp
not
(bad)
sub
jnp
retf
dec
adc
sti
push
outs
jbe
xchg
int
(bad)
pop
rcr
mov
add
ret
(bad)
lock
adc
mov
mov
shr
jb
xchg
adc
xchg
add
xchg
inc
mov
mov
out
aam
inc
inc
mov
jnp
lahf
or
mov
retf
(bad)
jg
out
fmul
cmp
add
dec
add
ins
mov
in
adc
in
dec
cmp
dec
rol
aaa
retf
and
imul
into
push
or
int3
bound
jmp
mov
jle
pop
out
mov
fimul
adc
loop
mov
unpcklps
push
adc
jb
into
psllq
inc
hlt
jno
inc
fnstenv
stc
pusha
inc
and
out
mov
mov
imul
call
jge
repz
sbb
stos
aam
add
sbb
jle
repnz
mov
cs
or
push
imul
cdq
fist
(bad)
sbb
pusha
push
sbb
fs
adc
dec
test
sbb
push
retf
and
xchg
retf
out
hlt
pop
sub
pop
lea
dec
pop
jl
cmp
add
lds
jmp
in
mov
fnstcw
jl
leave
test
(bad)
push
iret
pop
mov
pop
mul
clc
adc
adc
in
icebp
cmp
and
push
sbb
dec
add
lahf
mov
in
mov
push
out
mov
cmp
cmp
sub
pop
cld
popa
push
add
cwde
test
sub
mov
pop
jg
test
js
repnz
sbb
enter
cmps
leave
mov
mov
out
xor
popa
aad
mov
and
inc
and
jno
dec
das
or
shl
inc
adc
and
rcl
sub
jmp
cmp
movs
cmp
add
mov
scas
das
inc
das
ss
cmp
dec
push
inc
and
into
fstp
icebp
xchg
fcom
and
fbstp
or
inc
add
sti
xchg
push
jg
dec
pop
ret
add
out
mov
sbb
ror
mov
arpl
jns
sub
push
jle
dec
inc
pusha
mov
mov
xor
mov
xchg
pop
fadd
sub
push
and
aaa
push
ret
(bad)
mov
arpl
inc
mov
push
jg
neg
or
test
daa
sbb
neg
out
and
es
jecxz
shl
add
xor
imul
mov
cmp
push
lods
data16
mov
ret
xchg
mov
(bad)
push
in
jno
mov
stos
pop
gs
xor
pushf
or
xchg
inc
cmps
fnstsw
call
es
add
sbb
mov
divps
and
jl
add
mov
xlat
mov
pop
ins
scas
push
clc
or
int3
push
push
iret
xchg
dec
pop
mov
shl
pop
ficom
jge
jmp
out
lods
adc
(bad)
shl
jbe
jg
dec
nop
in
xor
mov
test
imul
xchg
int3
loop
cld
ins
std
xor
adc
out
sub
sar
clc
mov
push
push
scas
mov
shr
lods
scas
cmp
ds
in
xor
or
jno
sub
jl
or
data16
data16
fcom
sar
in
mov
or
add
leave
pop
cmp
test
(bad)
clc
push
je
pop
sub
dec
xlat
sub
imul
or
(bad)
scas
add
or
pop
fdivr
mov
mov
call
mov
out
mov
xor
call
lock
enter
daa
sbb
or
ds
sub
or
jb
inc
ret
jle
mov
(bad)
mov
lock
lahf
in
into
ss
sub
bound
inc
test
fbstp
stos
inc
cmp
shr
fdiv
(bad)
jno
mov
cwde
retf
fadd
or
inc
aaa
ret
je
mov
cmp
jae
xchg
fadd
cmp
inc
leave
mov
call
scas
outs
xchg
xor
fs
div
push
ss
mov
pop
call
out
or
mov
mov
fidivr
sub
sbb
lahf
mov
sub
mov
dec
mov
int
retf
shl
or
jae
add
aad
pushf
xchg
std
stc
or
dec
call
cmp
dec
push
sub
push
pushf
cmp
aam
jecxz
icebp
je
dec
mov
sbb
fwait
ret
mov
mov
lock
and
sar
xchg
and
pop
stc
ds
jge
sti
out
pop
mov
pop
ins
inc
stos
repnz
push
loop
outs
xchg
je
out
lea
sbb
or
mov
(bad)
cmp
dec
in
scas
fisttp
mov
pop
movs
jge
push
pop
pop
dec
scas
dec
call
pop
mov
ffreep
lds
mov
dec
dec
cwde
sbb
sbb
shr
scas
jo
in
(bad)
push
jnp
out
push
sub
xor
mov
and
ror
xlat
mov
inc
addr16
adc
inc
ins
mov
shl
push
xchg
xor
(bad)
pop
fdivr
sub
cmp
in
(bad)
ins
repnz
adc
pop
inc
adc
pop
imul
or
nop
(bad)
mov
mov
popf
clc
jb
or
fdiv
jb
sub
mov
dec
mov
js
or
add
jmp
jmp
inc
xor
aaa
test
fcomp
push
daa
daa
jns
pop
mov
xchg
cwde
cmp
push
sar
scas
mov
outs
mov
aaa
sub
pop
pop
ds
add
inc
test
std
popf
pop
mov
pushf
sbb
sti
xchg
and
inc
iret
fidivr
and
mov
dec
nop
sbb
xchg
mov
mov
rep
add
int3
jge
and
dec
mov
push
sbb
push
fild
hlt
inc
shl
daa
push
jg
out
loopne
xor
cmp
data16
cld
aas
scas
xor
ja
call
les
daa
repnz
adc
in
scas
push
adc
cmp
repz
jmp
pop
or
jl
xchg
dec
jnp
mov
out
scas
inc
jg
or
outs
data16
fcomip
jp
jno
push
mov
dec
lds
inc
jnp
adc
shr
and
dec
xor
mov
scas
aas
lock
xchg
icebp
xor
mov
lahf
sub
pop
cmps
and
push
dec
loop
leave
pushf
retf
into
fnstsw
icebp
xor
push
dec
(bad)
xchg
stos
popf
lds
cmps
hlt
hlt
adc
lods
xchg
fisubr
outs
adc
pop
out
jmp
pop
fst
cmp
pop
loop
arpl
adc
xchg
pop
xor
ins
(bad)
in
shl
add
fbstp
lods
sbb
pop
sub
in
sbb
cwde
fadd
jge
jle
iret
xor
mov
retf
cdq
jl
dec
imul
or
jmp
not
add
les
xlat
aam
push
xchg
sahf
or
ss
inc
xor
xchg
jecxz
inc
test
adc
jmp
push
jnp
jge
xor
push
fadd
ins
repz
and
push
pop
sbb
push
sbb
outs
sbb
cmp
jl
sahf
xchg
jg
imul
pop
mov
pop
and
sub
outs
mov
pop
dec
push
push
loope
xchg
xchg
jnp
test
in
jmp
xlat
movs
aaa
dec
lods
out
cmp
(bad)
push
(bad)
sub
mov
cli
adc
cld
outs
and
fild
lods
and
adc
xchg
push
or
scas
shl
or
out
(bad)
stos
inc
ret
pushw
and
addr16
rcr
jg
fild
sbb
jle
cwde
test
jne
adc
pop
aam
mov
outs
or
xlat
std
push
pop
dec
xchg
pop
xchg
sbb
adc
inc
sti
stos
mov
mov
jae
not
test
pop
push
push
sub
sbb
ror
and
das
xor
xor
jae
push
je
cmp
lods
sbb
or
shl
lock
mov
jne
mov
neg
hlt
repz
scas
retf
push
mov
leave
out
mov
mov
mov
push
push
stos
push
js
shl
out
xchg
dec
outs
jl
xor
fldcw
adc
ins
call
dec
adc
pop
or
aad
mov
dec
dec
inc
mov
in
aad
pushf
sub
xchg
(bad)
and
mov
add
pop
out
sub
mov
daa
ror
dec
sub
jmp
sub
dec
jle
push
or
rcl
ins
jecxz
cli
push
xchg
movs
pop
sbb
and
imul
pop
rcr
inc
push
mov
pop
sub
loopne
mov
scas
cmc
jno
loopne
push
repz
sbb
jb
or
lods
adc
cmps
inc
in
sti
test
into
out
mov
mov
xchg
xor
xchg
adc
jmp
sub
(bad)
mov
or
cmp
ja
sbb
iret
pop
inc
jno
inc
vmwrite
aam
leave
lahf
inc
aaa
stos
int3
(bad)
shr
sbb
and
lahf
dec
stc
(bad)
out
lahf
gs
es
mov
jmp
mov
imul
cdq
xchg
movs
or
pushf
cmp
aam
adc
xor
jmp
and
adc
mov
hlt
inc
push
mov
dec
pop
test
mov
sub
jb
cmp
cmp
or
adc
mov
out
retf
enter
test
push
sbb
jl
xchg
stos
leave
fnclex
xchg
push
int3
ret
dec
xchg
stc
push
mov
in
cmp
or
shl
mov
loop
aaa
mov
dec
test
jp
or
dec
loope
movs
dec
pusha
scas
ds
imul
mov
push
jmp
scas
(bad)
(bad)
int
fs
ins
and
pop
test
and
inc
ins
dec
js
jmp
sahf
dec
loopne
xor
mov
not
xchg
ins
xchg
(bad)
in
xchg
jecxz
sub
mov
scas
loopne
dec
sub
mov
cld
cs
out
inc
nop
inc
push
out
pop
je
imul
or
cmp
inc
sbb
retf
(bad)
aad
jno
ficom
jl
shl
outs
sbb
xchg
(bad)
imul
and
hlt
(bad)
sub
adc
aaa
jg
cwde
retf
hlt
cmp
sbb
mov
cdq
loop
dec
das
dec
xchg
std
(bad)
(bad)
jecxz
pop
and
outs
pop
fcomp
es
adc
pop
xchg
mov
mov
mov
pop
data16
rol
movs
outs
inc
cmc
outs
rcl
(bad)
call
lds
(bad)
adc
retf
pop
pop
or
repz
sbb
movs
mov
imul
sahf
pop
mov
sbb
outs
or
ins
je
loopne
xchg
dec
adc
mov
inc
aad
mov
push
or
in
and
jns
mov
sahf
sbb
fst
add
cmps
lahf
adc
sub
imul
(bad)
arpl
dec
aad
lock
retf
and
call
ins
(bad)
shl
pop
mov
mov
xor
ds
or
mov
enter
mov
xor
inc
and
jo
movs
jae
dec
jecxz
pop
or
mov
and
xchg
std
xlat
sbb
div
clc
push
sub
push
cdq
outs
add
or
fisub
and
adc
enter
movs
into
int
mov
ret
pop
out
in
outs
add
sub
arpl
movs
lds
and
lahf
je
popa
and
mov
fs
jb
adc
loop
and
jne
adc
or
pop
(bad)
push
mov
jb
and
push
hlt
jns
inc
and
out
mov
pop
call
add
fincstp
lods
rol
loopne
ret
pop
stc
(bad)
cdq
jle
popa
lahf
shl
into
aad
in
std
shl
in
lock
adc
lahf
adc
mov
or
pop
ins
and
mov
sbb
add
and
aam
xchg
or
xchg
jae
scas
dec
pop
ss
fcmovne
das
push
fstp
(bad)
shr
shr
shr
mov
push
popf
je
outs
and
in
jmp
in
aas
adc
pop
mov
add
daa
push
jle
out
sub
std
adc
scas
inc
pop
mov
outs
inc
(bad)
in
pmaxub
adc
jb
cmps
gs
mov
push
cdq
pop
mov
push
mov
lock
mov
jg
xor
aas
movs
retf
push
das
sahf
in
jecxz
pop
cli
jmp
pop
out
inc
(bad)
mul
cwde
xor
cld
fisubr
ins
or
jecxz
sub
xchg
in
mov
nop
call
inc
sahf
inc
pop
rcl
pop
imul
add
xchg
retf
xor
test
clc
xchg
cmp
movs
push
jb
fadd
repz
lahf
push
or
imul
add
sar
stos
enter
cmp
adc
jmp
jl
not
xchg
div
pop
in
pop
adc
outs
xchg
nop
push
dec
mov
les
pop
xchg
loop
into
adc
test
and
and
inc
loopne
or
call
cmp
sbb
pop
pop
mov
push
cmp
mov
ins
cli
loop
push
jmp
pusha
or
gs
loope
cmp
out
dec
and
test
sub
add
fidivr
cmp
rcr
(bad)
(bad)
loope
aas
mov
mov
pop
jo
fidiv
fnsetpm(287
and
sahf
daa
bnd
and
sete
loope
jnp
cmps
rcr
(bad)
arpl
adc
test
in
arpl
cmp
fnsetpm(287
add
mov
mov
inc
mov
int3
test
test
add
dec
fucomp
push
std
enter
clc
dec
idiv
popf
js
sahf
sbb
pop
repnz
dec
mov
(bad)
(bad)
mov
fcomp
mov
xchg
xor
mov
fimul
adc
ss
ja
and
(bad)
jnp
mov
fistp
mov
jbe
js
push
pop
xchg
(bad)
pop
lahf
push
push
add
(bad)
sbb
cmp
jbe
inc
fstp
push
xor
cli
xor
leave
dec
mov
cmc
pushf
pop
call
imul
sbb
add
inc
ins
jae
sar
popf
popa
cld
adc
pop
pop
cdq
das
rcr
add
jne
push
adc
jbe
in
inc
daa
scas
add
stc
xchg
arpl
fwait
or
adc
sub
sbb
adc
into
mov
push
push
or
mov
cmps
sti
xchg
dec
xchg
loope
imul
cmps
sub
imul
popf
inc
out
pop
push
sar
rcr
adc
imul
call
fwait
shr
push
shl
sub
pop
add
loopne
lock
cmp
hlt
sahf
xchg
dec
xor
pop
cdq
jmp
test
into
mov
sahf
loopne
dec
cli
cmps
jl
mov
scas
or
mov
in
call
scas
lds
add
xchg
aas
shl
les
sbb
add
dec
xor
push
mov
push
stc
cmp
mov
jmp
lods
outs
or
push
out
aad
adc
test
imul
mov
dec
jg
and
(bad)
xor
setne
sti
or
adc
js
fsub
lea
in
lock
dec
imul
xchg
lahf
add
popa
dec
lods
popa
sbb
mov
xor
inc
lock
xchg
cmp
dec
enter
mov
push
das
movs
loopne
xchg
cmp
aad
popa
(bad)
repz
push
ret
mov
popa
mov
mov
jg
test
mov
retf
cmp
dec
mov
loopne
pop
pushf
sbb
call
pushf
jecxz
ret
jo
sbb
xor
xchg
dec
or
jl
jo
loop
ficomp
into
sbb
popa
pushf
pop
sbb
in
repnz
mov
jne
mov
push
mov
dec
out
dec
cmp
sub
cs
xor
loope
adc
ins
dec
sub
pop
fucomip
xchg
sub
pop
(bad)
cmps
inc
(bad)
shr
cmp
push
and
sahf
and
aas
mov
fwait
or
clc
jbe
pushf
scas
push
xchg
lods
xor
addr16
xor
aas
mov
mov
mov
xchg
ror
fs
jp
mov
fwait
sbb
scas
sub
add
leave
or
or
cmp
data16
sti
xchg
(bad)
inc
out
iret
jp
push
repnz
call
call
clc
xor
aad
call
in
sbb
jnp
outs
retf
and
jp
pushf
inc
ret
aad
jmp
xlat
rcr
enter
je
cmp
pushf
clc
pop
cdq
popf
out
sbb
jnp
and
idiv
xchg
pop
pop
neg
jmp
mov
jg
xchg
fs
mov
mov
ins
pop
pushf
movs
dec
sub
mov
gs
repnz
imul
jnp
(bad)
clc
(bad)
loop
push
shr
dec
in
inc
mov
jmp
retf
fisubr
jmp
dec
test
xor
mov
adc
jle
out
xor
xchg
adc
inc
inc
scas
sar
fucom
aad
repz
dec
fsubrp
or
in
movs
popa
es
adc
push
xor
loopne
sub
xor
xchg
dec
xchg
dec
loope
mov
ret
ret
ss
cs
jb
push
xor
sbb
cld
dec
fcomi
js
test
cmc
cmps
iret
(bad)
loope
call
sahf
leave
xor
mov
cmc
stc
aaa
js
add
in
sbb
xchg
inc
and
dec
sbb
out
sbb
loopne
or
dec
neg
sbb
iret
sbb
mov
sub
inc
add
cwde
call
idiv
mov
pop
in
les
push
arpl
xor
inc
push
mov
xor
outs
mov
sti
and
mov
mov
aam
out
mov
mov
push
push
inc
and
call
mov
push
jne
retf
xchg
div
imul
push
shr
xchg
jns
push
sti
push
sti
push
add
fmul
jnp
(bad)
cmp
pop
bound
xlat
push
push
and
inc
fimul
lods
inc
dec
and
sahf
jg
mov
cld
(bad)
push
je
jb
push
int
mov
jns
dec
cmp
loope
or
cmp
mov
lods
fld
in
arpl
je
out
stc
xchg
add
xchg
adc
leave
in
enter
(bad)
mov
lea
xor
call
push
vandps
fst
and
out
or
push
fbld
pop
test
jmp
and
xor
push
mov
inc
cmp
cwde
and
mov
pushf
add
test
sub
arpl
add
or
arpl
nop
sbb
and
les
test
aam
stos
dec
dec
aas
push
div
add
std
mov
jne
inc
arpl
xchg
and
in
mov
aam
(bad)
push
arpl
xchg
stc
cmp
xchg
jecxz
cmp
xchg
test
pop
mov
dec
cmp
aam
push
cwde
xor
les
inc
bound
xchg
inc
out
sbb
cmp
jg
lods
dec
add
adc
cmps
pop
mov
cli
push
scas
add
test
mov
jmp
push
loopne
or
in
mov
sub
cs
sti
xor
sahf
push
ss
dec
xchg
cli
fst
mov
adc
add
and
adc
xchg
dec
mov
push
jmp
ror
ss
or
imul
mov
shl
and
leave
cmp
jmp
sahf
xchg
sbb
push
ss
int3
cmps
call
repnz
adc
outs
mov
jp
fs
sti
or
int
pushf
js
ret
xchg
(bad)
retf
scas
fs
or
scas
(bad)
dec
dec
adc
fnstenv
std
mov
xor
mov
mov
fs
dec
call
dec
pop
cmp
adc
mov
or
(bad)
jnp
mov
xor
or
sub
inc
add
cwde
add
ret
jo
in
xchg
movs
pop
sbb
popf
add
cdq
ja
cwde
aas
xlat
cmc
aas
jb
adc
mov
cdq
nop
adc
data16
push
mov
ret
retf
xchg
jne
cmp
out
shl
jo
mov
rol
aaa
push
dec
pop
inc
out
jae
pop
loopne
xor
fst
rol
aas
pop
push
cmps
cmc
clc
jo
int3
adc
inc
xchg
adc
and
lods
push
leave
cmps
or
mov
jmp
leave
xchg
xchg
mov
shl
jns
shrd
test
cmc
cmp
mov
mov
(bad)
sub
sti
push
sbb
movs
mov
inc
and
shr
push
or
cmp
xchg
ficomp
rcr
cdq
xchg
out
inc
nop
cvttps2pi
or
call
hlt
sbb
in
fidiv
add
adc
inc
mov
xchg
sub
push
cmc
push
popf
dec
pop
xor
lahf
int3
push
or
shl
push
add
scas
or
fld
retf
in
push
push
mov
add
(bad)
loope
(bad)
xlat
mov
mov
add
rol
xor
jae
arpl
jecxz
inc
cwde
or
or
sar
test
cmp
ja
stc
popa
push
adc
xor
xor
or
gs
xchg
mov
and
xor
inc
cld
ins
xor
test
icebp
pushf
xchg
cld
dec
mov
test
mov
mov
mov
xchg
xor
sub
jp
add
call
mov
aaa
(bad)
mov
or
inc
inc
cmps
ret
clc
push
and
sahf
fst
and
fsubr
aaa
pop
in
loope
fcmovb
jecxz
fs
outs
test
mov
jg
fs
cmp
repz
jae
sbb
jl
clc
ins
mov
inc
popf
into
scas
adc
mov
nop
add
in
mov
and
inc
retf
fimul
popf
xchg
cwde
cli
mov
pcmpgtd
xchg
int
dec
inc
lahf
in
mov
nop
push
lea
xchg
test
mov
jecxz
ds
mov
cmp
fcomp
dec
fs
mov
pop
add
out
daa
fbld
xor
dec
push
pop
sbb
cmp
mov
movs
das
ds
add
push
aad
fsub
out
push
jns
mov
inc
and
rol
dec
ror
leave
loope
sbb
jae
mov
jp
fstp
pop
sbb
cmp
push
xor
in
call
jae
mov
rcr
(bad)
clc
lahf
test
push
push
inc
mov
adc
push
xor
retf
or
cmp
popa
stos
(bad)
call
sar
scas
inc
loop
mov
adc
jp
stc
sub
sbb
xchg
xor
bound
cmp
pop
mov
aas
(bad)
mov
addr16
push
sub
xchg
cmp
inc
adc
aam
mov
jb
sbb
lock
mov
jno
inc
(bad)
repnz
push
pop
lea
jle
mov
or
test
jbe
mov
adc
xor
fs
aad
lds
leave
movs
adc
mov
mov
pop
pop
rcr
and
ja
scas
mov
push
adc
call
pop
mov
adc
les
das
mov
(bad)
adc
popa
push
ins
retf
test
lahf
cmp
and
dec
push
scas
rcl
mov
loopne
cmp
arpl
mov
xor
nop
jl
add
jle
icebp
jmp
test
icebp
mov
rcl
call
dec
mov
repz
outs
sbb
out
ins
mov
inc
adc
lds
leave
fs
inc
sbb
call
movs
or
ret
cs
cmp
aad
mov
ret
pop
or
or
jle
pop
shl
pop
add
fcmovbe
inc
dec
repz
add
mov
aas
icebp
out
iret
out
sub
jge
sar
lods
fsubr
xchg
sbb
fwait
add
enter
xchg
push
push
jne
mov
pop
clc
lea
ror
cld
into
pop
inc
dec
outs
pop
mov
daa
cmp
rol
mov
sbb
dec
xchg
jo
mov
adc
aaa
and
jp
xchg
dec
arpl
jecxz
sub
xchg
stc
xchg
or
add
repnz
or
test
add
sub
imul
mov
icebp
daa
fadd
loopne
xchg
sti
mov
dec
cmp
xchg
arpl
xor
call
adc
mov
(bad)
adc
mov
push
mul
or
and
out
loop
jbe
cmovl
add
inc
adc
and
nop
jae
lahf
js
xor
in
addr16
or
pop
and
sub
dec
xchg
imul
adc
dec
inc
add
xor
mov
loop
jp
or
je
into
(bad)
loop
js
sbb
gs
push
dec
dec
push
push
adc
mov
out
test
xor
test
(bad)
ins
pusha
mov
xchg
or
sbb
js
cmp
adc
jmp
stc
shl
dec
sbb
outs
pop
push
js
xor
cmp
scas
(bad)
sbb
sbb
xor
sbb
or
pop
sub
jno
cmp
push
pop
ss
aas
jp
lahf
ja
sti
mov
inc
mov
xchg
rcl
and
sbb
adc
mov
fadd
fs
(bad)
call
test
or
stos
arpl
aaa
mov
jp
ins
jp
cmp
or
hlt
sub
sub
ror
loopne
xor
mov
xor
inc
inc
cwde
xchg
lea
int3
adc
aas
jo
inc
nop
cwde
sbb
mov
inc
enter
cld
dec
jp
out
dec
fistp
loopne
test
xor
mov
imul
ins
(bad)
mov
adc
add
jg
imul
jle
xor
(bad)
je
lea
push
pop
jp
popf
lods
pop
(bad)
icebp
xchg
out
dec
out
fcom
into
dec
dec
mov
dec
ficomp
loopne
cmp
fistp
xchg
hlt
inc
(bad)
popf
push
push
ins
xor
mov
and
ja
nop
dec
xchg
sbb
add
adc
enter
ja
jno
aaa
aaa
nop
(bad)
xchg
inc
cmp
jg
lds
ficomp
jb
jp
dec
sti
ret
pop
cli
cmp
leave
pushf
or
mov
adc
inc
out
push
iret
mov
into
mov
xchg
pop
inc
out
je
xchg
sub
mov
lods
mov
and
xchg
stc
mov
pop
movs
in
ror
unpckhps
icebp
adc
mov
gs
sbb
mov
xchg
fmul
dec
repnz
push
dec
mov
jmp
cwde
jge
dec
or
pusha
mov
cmp
imul
mov
adc
sbb
dec
xchg
inc
pop
dec
xlat
ins
imul
push
or
adc
fcom
dec
mov
mov
das
dec
xor
in
inc
cmp
sub
mov
gs
fisttp
jg
mov
add
push
fisub
mov
inc
inc
gs
retf
xor
nop
pop
inc
jo
outs
mov
fist
pop
enter
loope
cwde
add
jmp
inc
ds
leave
and
lea
mov
movs
inc
aas
ret
(bad)
fisubr
or
shr
mov
mov
cs
jae
popf
in
mov
mov
pop
push
cmps
mul
xchg
inc
push
pop
sbb
test
cmps
xchg
cmc
cmp
dec
inc
mov
xlat
jnp
push
cld
or
inc
push
cmp
test
add
mov
push
das
xchg
xchg
mov
aaa
cdq
aaa
add
add
ror
sbb
adc
lods
jge
xchg
sahf
push
xchg
popa
mov
pop
fld
add
push
mov
repz
and
cmp
push
mov
test
in
cmp
fisub
in
pop
xchg
mov
mov
push
(bad)
fidiv
or
out
push
jno
mov
dec
leave
inc
sti
add
sub
ins
xor
jge
shl
xchg
fiadd
ss
or
je
mov
repz
mov
inc
push
or
stc
jmp
sub
loopne
inc
xor
mov
xchg
mov
loope
mov
lahf
adc
lock
push
out
xchg
mov
in
jge
mov
es
push
push
sbb
fs
shr
sti
jp
fcom
mov
rol
or
xchg
jno
pop
pop
add
jo
imul
add
(bad)
ret
inc
ja
jg
repz
sbb
and
jno
cs
mov
dec
mov
cli
loop
clc
test
xor
add
mov
ret
lea
jae
push
cmp
mov
lahf
dec
das
jbe
jecxz
out
jmp
outs
xchg
ins
retf
mov
jno
imul
enter
movsx
lea
inc
push
cmp
(bad)
(bad)
or
xlat
rol
arpl
inc
pusha
cmp
aaa
adc
repz
cdq
push
cmp
stc
out
cdq
call
inc
outs
movs
sbb
retf
inc
test
or
mov
cmp
test
or
je
out
sbb
mov
fcomip
call
les
xchg
adc
lea
lods
mov
and
mov
leave
out
push
in
and
pop
addr16
ds
int
mov
sbb
dec
daa
cli
pop
and
xchg
pushf
idiv
je
xchg
cs
movs
fist
aad
xchg
ja
gs
mov
sar
mov
daa
adc
popf
(bad)
xchg
push
add
sbb
std
inc
jg
test
clc
out
mov
out
std
dec
inc
(bad)
out
mov
mov
and
(bad)
xor
push
cwde
lahf
adc
cli
call
shl
sub
(bad)
in
adc
lods
pop
arpl
pop
mov
xchg
inc
and
clc
pushf
out
jae
shl
lea
inc
fnstcw
into
cli
scas
call
inc
mov
jecxz
and
adc
emms
lea
and
ins
mov
xlat
push
mov
jecxz
int
inc
into
addr16
(bad)
out
movs
das
jmp
add
shl
add
xchg
sbb
in
or
sbb
into
ins
jmp
imul
adc
mov
div
mov
inc
ror
ins
shr
adc
addr16
(bad)
dec
fcom
(bad)
dec
mov
test
dec
in
mov
or
ins
jns
push
imul
test
rcl
push
(bad)
loope
aas
pusha
jae
mov
cmp
xor
mov
mov
sub
mov
(bad)
sbb
ins
dec
dec
pmulhuw
xchg
mov
cmp
test
jge
sbb
push
mov
jge
rol
addr16
call
inc
xchg
loope
(bad)
(bad)
in
jo
pop
push
and
push
inc
jnp
dec
mov
fbld
mov
or
sub
sbb
pusha
imul
add
fcomp
or
fcomp
cmp
fsubr
dec
or
jb
and
xor
jae
in
fwait
outs
js
mov
fs
je
pop
nop
xchg
mov
js
mov
sub
data16
movs
or
mov
sbb
adc
sbb
xchg
mov
int3
jle
das
nop
cmp
repz
jg
mov
mov
aaa
dec
xchg
sti
push
and
jo
jns
cmps
jl
jae
or
jle
mov
jle
sar
stc
dec
xchg
mov
pop
sub
add
pop
or
(bad)
cli
mov
fcom
and
mov
test
xchg
and
iret
mov
(bad)
adc
out
int
mov
and
out
(bad)
call
dec
cmp
mov
pop
mov
jbe
xchg
les
xor
addr16
push
scas
dec
adc
adc
fs
mov
aaa
stc
mov
popa
push
bound
sbb
stc
in
sub
ins
jg
mov
pop
push
fs
arpl
adc
aas
mov
inc
(bad)
sbb
dec
or
retf
pop
push
test
jp
stc
xor
mov
stos
and
xchg
xor
dec
das
aaa
push
mov
sub
add
leave
and
jmp
cld
pop
mov
outs
enter
js
jb
jp
add
mov
in
sbb
das
das
int3
(bad)
lds
push
xchg
outs
dec
pop
es
mov
lods
stos
dec
lds
pusha
mov
or
aaa
sbb
mov
xchg
and
(bad)
(bad)
into
sub
pop
mov
xor
xor
in
data16
pop
lds
fstp
daa
xor
xcrypt-cfb
cmps
and
add
js
arpl
pusha
cmc
mov
hlt
in
int3
mov
push
mov
jo
adc
bound
aad
imul
push
adc
cmp
xchg
fist
ins
cmp
mov
shl
jns
pop
and
fs
inc
inc
sub
jne
cmp
xor
cmp
push
mov
mov
mov
icebp
and
in
jne
inc
adc
push
hlt
fsub
push
loope
ror
inc
into
jae
xor
js
cmps
lods
jb
pusha
(bad)
pusha
popf
test
adc
lods
push
adc
mov
out
mov
xchg
inc
js
mov
cmp
add
int3
cmps
dec
mov
test
xchg
jns
sub
movs
icebp
sbb
call
adc
popa
inc
xchg
sbb
cmps
fimul
(bad)
pop
mov
rcl
(bad)
inc
int
dec
jmp
test
and
stos
mov
jp
adc
push
jne
jnp
(bad)
inc
outs
push
mov
into
cmp
xor
cmc
dec
pushf
stos
sbb
in
xchg
xchg
neg
shl
mov
cmps
push
call
adc
jl
push
rcl
mov
das
(bad)
mov
jmp
popa
ss
and
xchg
sub
mov
sub
sbb
mov
imul
ficomp
in
call
loop
loopne
xchg
sbb
mov
inc
adc
ret
mov
getsec
xchg
inc
pop
cdq
dec
lds
cmp
daa
int
repz
dec
adc
add
clc
cli
add
ret
jns
push
or
jne
xchg
push
jne
mov
mov
xor
jle
jp
cmps
push
sub
push
or
mov
jne
mov
int3
aam
test
jp
cmp
aas
xchg
xchg
xor
adc
fs
lock
sub
xchg
stc
mov
pop
cs
iret
inc
jmp
adc
addr16
sub
shr
retfw
idiv
mov
mov
rcl
test
lods
mov
or
sbb
mov
adc
jge
rcr
lods
rol
(bad)
int3
inc
movs
or
mov
xor
cdq
mov
xor
cmp
cmp
cmp
frstor
push
xchg
mov
adc
iret
mov
leave
jmp
jbe
les
xchg
(bad)
jne
les
xor
mov
dec
push
jecxz
and
aad
movs
mov
dec
mov
iret
xchg
loop
pop
movs
scas
nop
dec
xchg
jmp
mov
dec
aaa
je
fldcw
(bad)
in
inc
outs
sysexit
mov
mov
jns
out
in
int
xor
test
dec
ror
in
jns
jne
das
lea
lds
mov
gs
aad
mov
not
cmps
nop
sub
sbb
loope
mov
sti
add
cmp
out
imul
cmp
push
add
sub
inc
jae
push
mov
test
fist
popa
test
clc
sub
and
in
jle
loope
out
mov
leave
les
add
inc
sub
bound
or
sbb
dec
inc
in
js
aaa
or
xchg
inc
loope
imul
adc
jp
cld
pop
mov
loope
or
fcmovne
pop
sbb
ds
and
sbb
adc
fnstsw
shl
(bad)
mov
popf
or
pop
and
mov
adc
or
imul
enter
js
add
ret
fild
mov
icebp
push
or
test
loopne
cld
out
aas
rcl
stos
loope
mov
xchg
fstp
xchg
dec
add
cld
add
mov
test
cdq
mov
adc
mov
inc
outs
xchg
sbb
fimul
aas
into
inc
adc
and
pop
lods
aam
mov
gs
cmp
test
add
add
sbb
mov
dec
mov
cmp
retf
fistp
retf
pop
arpl
pop
iret
sub
call
dec
xchg
mov
jae
fisubr
inc
pop
jbe
or
fwait
stos
cs
push
mov
sbb
shl
pop
fcomp
pop
xchg
cmp
mov
adc
adc
push
lock
nop
jmp
gs
pop
in
popa
lds
jbe
loope
sub
and
fwait
sbb
es
ss
add
pop
call
sub
adc
lods
sub
sti
xor
aas
dec
sub
mov
xchg
in
push
xchg
mov
or
retf
cmp
mov
sub
sub
mov
out
ds
pop
mov
and
adc
push
mov
push
dec
jbe
sub
popa
dec
out
pop
test
xchg
ret
add
dec
pop
je
call
pop
inc
int3
cmp
cli
jg
inc
(bad)
push
in
mov
or
adc
imul
mov
or
(bad)
popa
dec
jl
aas
pop
in
lock
leave
mov
out
mov
out
mul
int3
push
xchg
out
pop
aad
call
push
dec
div
int3
in
int
(bad)
mov
out
cmp
pop
into
jmp
adc
pop
pop
and
es
int3
test
xor
sub
sub
and
(bad)
mov
mov
sbb
xlat
dec
retf
push
xchg
movs
xchg
fwait
push
mov
adc
add
and
cmc
cmp
mov
add
ss
ret
fiadd
aaa
mov
test
icebp
pop
stos
pop
retf
inc
rcl
cmc
daa
cwde
jno
mov
loop
test
arpl
inc
pop
xchg
(bad)
lds
hlt
in
or
inc
dec
xor
inc
addr16
imul
arpl
xchg
jns
inc
popf
aam
lahf
xchg
mov
cld
jmp
sbb
leave
pop
ds
fnsave
or
call
dec
sbb
dec
pop
inc
sbb
add
cmp
or
mov
inc
aas
and
cmp
ret
sar
sahf
aam
icebp
sar
push
jle
or
inc
and
jmp
xor
outs
sub
pop
and
inc
sbb
ins
loop
jb
jp
xor
xor
xchg
jge
pusha
adc
jle
mov
dec
shl
f2xm1
call
inc
and
mov
and
cdq
mov
sbb
(bad)
fnstcw
jecxz
ret
mov
nop
jl
add
movs
push
adc
jle
dec
add
push
pop
xchg
push
mov
xchg
mov
and
mov
push
mov
or
dec
jns
sbb
mov
mov
adc
and
push
test
push
dec
push
sub
push
cmp
xor
fdiv
clc
movs
stos
mov
push
adc
adc
mov
popf
xor
sbb
les
xchg
dec
add
loope
jnp
jmp
(bad)
loopne
fucomi
jge
xchg
push
pop
std
and
jge
fdivp
push
pop
js
xchg
mov
cs
xchg
xchg
and
fdivr
lds
pop
icebp
jge
add
push
jg
dec
or
lahf
mov
dec
xchg
leave
push
(bad)
repnz
sub
adc
mov
movs
test
cmp
adc
sahf
repnz
lods
fldenv
or
pop
into
mov
jp
inc
pop
mov
xchg
test
cmp
and
gs
dec
leave
pop
jg
inc
sti
into
sbb
call
dec
sbb
scas
mov
rcl
and
cmp
sub
push
pop
push
neg
add
and
(bad)
or
cmp
les
add
dec
retf
leave
pop
inc
cmps
and
lahf
adc
pop
clc
mov
and
mov
into
pop
into
das
inc
add
adc
daa
mov
xlat
cmp
jecxz
sub
sub
retf
mov
movs
mul
and
clc
adc
mov
outs
imul
or
out
sub
pop
jne
mov
data16
sti
movs
sub
and
inc
clc
jo
sub
fucomp
xchg
retf
ret
cmp
or
jbe
push
adc
push
repnz
into
mov
sub
stc
aaa
outs
mov
call
sub
(bad)
mov
es
fwait
cmp
add
xor
in
scas
jae
ret
loope
scas
imul
mov
fs
push
(bad)
sub
xchg
retf
push
aam
sub
ins
xchg
jmp
rol
js
retf
sub
push
adc
add
mov
inc
aaa
jecxz
cmc
jnp
adc
xchg
pushf
sub
das
(bad)
ds
not
mov
daa
call
push
sub
jmp
pop
test
das
pop
add
xchg
xor
inc
call
loopne
mov
add
pop
test
xor
pop
sahf
fild
inc
mov
or
jecxz
test
clc
aad
cmp
fisttp
(bad)
nop
dec
retf
cli
stc
and
xor
jecxz
or
call
lods
ror
movs
outs
jge
loop
enter
jecxz
pushf
sub
in
fwait
mov
sub
pop
mov
xchg
aaa
push
je
arpl
push
int
or
and
movs
and
push
inc
and
aam
inc
popw
js
rcl
xchg
sbb
adc
imul
xchg
add
xchg
sub
test
fcmovnu
mov
push
into
es
shl
cs
das
and
call
loope
pop
push
(bad)
mov
push
pop
(bad)
cli
cmps
inc
and
sar
mov
(bad)
xchg
or
xchg
sbb
jno
ins
out
xchg
add
(bad)
(bad)
ror
push
fld
mov
stos
mov
push
push
mov
(bad)
je
mov
shl
nop
std
cmps
lods
ror
aas
lods
or
adc
push
movs
shl
sub
ins
ficom
mov
repnz
adc
aam
jle
repnz
pop
aad
daa
mov
sub
movs
(bad)
sbb
aam
pop
fist
mov
lahf
jge
mov
mov
ret
pop
mov
push
ret
call
sbb
icebp
dec
hlt
and
mov
adc
adc
push
enter
push
inc
pop
mov
jmp
and
mov
mov
outs
jnp
cwde
mov
addr16
mov
je
sbb
xchg
shl
mov
and
mov
mov
in
sub
push
test
je
fmul
mov
test
push
out
hlt
xor
mov
dec
cdq
jecxz
test
pmullw
outs
sub
push
add
xor
jmp
or
xchg
inc
jmp
pop
daa
jo
out
fld
xor
pop
ret
cmp
shl
data16
loopne
jge
es
cli
mov
inc
jae
jnp
jne
dec
xchg
(bad)
jnp
fcom
out
ret
cmp
dec
lock
xchg
jmp
pop
jno
outs
sub
popf
sub
fs
push
dec
retf
mov
sahf
add
into
sub
pop
and
xor
xor
pop
cmc
and
mov
sbb
cmp
sub
or
(bad)
cwde
push
pop
icebp
cmp
dec
into
(bad)
mov
xor
jne
jnp
shl
cmps
pop
sbb
dec
out
jg
mov
xchg
xor
cmps
imul
mov
iret
push
and
test
pop
ror
into
pop
lock
outs
cld
jae
(bad)
jbe
add
pop
stos
jmp
bound
arpl
cmp
fnstsw
xchg
ins
fsubr
outs
sub
icebp
xchg
ficomp
mov
push
imul
push
out
shr
mov
aas
mov
inc
jmp
pop
sahf
rcl
movs
or
pop
dec
mov
icebp
jmp
ror
mov
xchg
sub
cmc
xor
push
cmp
test
jb
add
xchg
retf
and
or
or
push
jle
xchg
test
xor
jle
push
cmp
bound
mov
stos
leave
sbb
ja
out
les
gs
push
(bad)
adc
rol
out
push
popa
sbb
popa
cmps
lds
cmps
pusha
(bad)
ss
lock
pop
mov
ds
test
retf
pop
add
mov
add
test
pop
or
ja
fisttp
dec
imul
imul
mov
jl
adc
inc
repz
jno
mov
xlat
jne
call
mov
leave
ss
outs
pop
xchg
sub
fs
adc
mov
jbe
xchg
jmp
mov
mov
ds
cwde
mov
mov
dec
mov
dec
ret
ss
mov
pushf
call
retf
jecxz
clc
(bad)
in
mov
and
xchg
lahf
pop
mul
pop
rcr
arpl
jns
add
ror
scas
mov
fcomip
ss
adc
mov
xchg
jno
fld
push
mov
or
xlat
outs
pusha
sub
sahf
loopne
xchg
xchg
mov
xchg
pop
and
pusha
adc
push
int3
je
and
fild
pushf
aam
fdivr
dec
jnp
and
outs
mov
dec
adc
adc
aaa
stc
xor
jle
pop
es
mov
ret
(bad)
retf
nop
push
stos
jge
(bad)
scas
xchg
out
fnstsw
adc
(bad)
bound
dec
mov
dec
push
jge
pushf
nop
hlt
add
xor
frstor
or
xor
jecxz
in
inc
jbe
scas
push
mov
or
aad
sbb
mov
push
aas
add
add
cld
inc
pop
sbb
mov
jge
mov
lods
aam
std
pop
xchg
xchg
addr16
daa
inc
xchg
mov
inc
(bad)
aas
mov
sbb
popf
pop
sub
xchg
mov
aas
pop
loop
aam
pushf
pop
cmp
jecxz
jno
imul
jecxz
shl
les
mov
fnstcw
jecxz
bound
cmp
jae
pop
add
in
out
sub
(bad)
dec
gs
movs
mov
xchg
jns
dec
and
xchg
test
mov
(bad)
fadd
idiv
or
sub
mov
dec
sub
xchg
mov
cmp
loope
jp
out
add
out
mov
xlat
xlat
add
jmp
fisubr
pop
cli
cli
or
xchg
adc
xchg
adc
loop
fdivp
fidiv
xchg
xchg
push
jae
sbb
fstp
in
inc
mov
mov
push
stos
outs
shr
pop
mov
fisubr
sub
adc
push
rcl
jp
xchg
pusha
lahf
adc
cld
leave
loopne
adc
mov
jmp
cmp
add
(bad)
lods
std
popa
movs
data16
mov
fidiv
or
xchg
or
in
dec
mov
call
or
mov
push
lds
ins
xor
mov
add
dec
fdiv
ret
into
imul
daa
gs
in
push
mov
popf
ror
sbb
shr
adc
movlps
jne
mov
fs
es
scas
addr16
popf
mov
retf
dec
and
retf
daa
pop
rcr
jecxz
mov
xchg
add
adc
std
ror
add
mov
ror
out
std
mov
push
and
outs
jl
(bad)
arpl
add
cmc
shr
(bad)
mov
iret
xchg
(bad)
in
mov
test
mov
cli
ds
test
or
(bad)
scas
int
jo
(bad)
lahf
and
jo
jae
jmp
jae
dec
stc
push
bound
inc
xchg
dec
movs
(bad)
fild
push
or
fucomip
(bad)
adc
mov
jnp
test
xor
xor
xor
add
test
js
jns
div
push
repz
and
loop
xchg
sub
jl
pop
fimul
mov
fidiv
mov
push
inc
fnstsw
data16
inc
jnp
not
movs
or
xor
sar
daa
xor
cmp
pop
fisubr
fadd
enter
push
into
xchg
cmp
addr16
jo
pushf
mov
leave
xor
add
(bad)
sti
cmp
int
inc
addr16
in
mov
or
inc
lea
js
movs
aaa
xor
fsubr
test
cs
pop
and
or
pop
fwait
jns
std
pushf
pop
inc
rol
lock
fnstenv
imul
test
mov
inc
adc
xchg
mov
and
sub
ins
fdivr
sbb
xor
out
adc
ins
mov
das
jmp
scas
add
and
add
pop
jg
xlat
add
mov
rol
push
pop
dec
sub
jge
pusha
aas
shl
pop
inc
and
adc
or
mov
es
(bad)
xchg
xchg
xor
mov
dec
sub
adc
cmp
hlt
mov
fwait
out
out
mov
mov
(bad)
dec
or
and
xchg
rcr
xchg
test
mov
push
mov
popa
fistp
and
or
add
pop
lods
pop
and
pop
sub
cld
jns
fucomi
dec
pop
inc
enter
ins
sbb
mov
ins
mov
xor
loop
pushf
mov
sbb
outs
daa
fild
call
ror
test
mov
inc
outs
or
icebp
lahf
repnz
and
xor
in
es
int3
outs
xor
not
push
ins
dec
sbb
fisub
jae
iret
xchg
jns
push
sbb
fsubrp
and
or
icebp
aam
rcl
scas
rcl
inc
cmp
rcr
shr
jne
mov
or
jo
adc
push
and
xor
scas
or
sub
fsub
dec
jns
mov
lods
add
lods
jmp
aad
inc
inc
add
mov
cmps
div
cmp
test
fcomp
cmps
mov
inc
push
fisttp
iret
pop
xchg
mov
out
retf
mov
outs
push
mov
test
iret
sbb
jge
daa
pop
inc
dec
lahf
jmp
sub
push
sub
mov
in
inc
shl
out
iret
cmps
jns
sahf
es
(bad)
aaa
add
jecxz
adc
rep
cs
cmp
add
inc
xchg
imul
lods
loop
fistp
mov
mov
pop
test
sub
inc
lea
pop
sub
mov
bound
stc
jnp
outs
or
hlt
push
(bad)
aas
dec
into
mov
call
mov
pop
shl
loopne
adc
out
test
mov
gs
inc
cmp
jge
pop
scas
nop
ins
sub
xor
push
shr
add
(bad)
ss
push
fcmovnb
out
(bad)
pop
mov
in
outs
fimul
ficomp
adc
mov
push
enter
(bad)
not
mov
or
sbb
xchg
fmul
ja
jmp
and
sbb
lods
and
jl
test
dec
xchg
icebp
push
shr
jmp
sbb
fbld
sub
iret
xor
and
fsub
and
aas
xor
lock
jno
neg
add
icebp
jp
pop
(bad)
jae
add
xchg
scas
pop
sbb
popf
popf
test
pop
dec
popf
or
lods
mov
ror
adc
push
test
and
mov
adc
or
mov
ret
cmp
int3
mov
arpl
lahf
loope
xor
dec
popf
lock
enter
pop
sub
lds
stos
or
mov
stos
das
jb
ja
enter
ins
outs
mov
bound
enter
(bad)
push
pop
xchg
pop
test
ja
or
jecxz
add
mul
(bad)
pop
inc
hlt
int3
mov
xchg
ret
daa
mov
xchg
stos
xchg
stc
cmps
ss
enter
fdivr
cmp
ins
jle
mov
jb
lds
inc
add
sbb
xor
mov
fisubr
int3
adc
ror
pusha
push
cmp
in
mov
jnp
and
sahf
and
leave
add
or
push
pop
rcr
inc
(bad)
not
je
mov
jmp
mov
lock
jne
ja
xor
les
push
mov
xchg
jp
mov
int3
(bad)
cmps
loopne
mov
jb
jmp
jmp
add
mov
xor
(bad)
inc
sti
inc
jmp
xchg
push
popf
cmps
inc
clc
push
push
dec
loopne
(bad)
das
lds
dec
aam
sub
add
cmp
out
mov
sar
icebp
out
iret
xlat
jp
ins
test
push
cmp
enter
mov
push
mov
cmp
neg
mov
sahf
ja
pop
cli
std
sahf
inc
pop
push
xchg
adc
enter
push
xor
cmp
fist
jg
adc
dec
add
loope
dec
out
xchg
call
lods
mov
test
retf
pusha
enter
mov
cmp
imul
popf
inc
add
sub
add
ret
add
ret
fmul
or
push
pop
and
in
dec
mov
(bad)
call
(bad)
(bad)
jp
mov
scas
xchg
cmp
jecxz
jns
cmps
mov
jecxz
xchg
sub
frstor
lods
add
and
das
(bad)
adc
test
fcomp
leave
ds
ret
add
stos
fnstenv
test
and
inc
sub
retf
or
movs
jmp
mov
mov
mov
lods
iret
jb
je
ins
dec
imul
mov
imul
or
pop
lahf
shl
dec
cs
mov
js
fstp
xchg
add
or
mov
add
cmps
sbb
pop
test
movs
pop
jp
(bad)
mov
stos
leave
inc
mov
gs
jmp
pop
push
jnp
cmp
sbb
adc
sti
(bad)
sub
xchg
mov
push
push
inc
add
mov
jge
push
fdivr
push
arpl
mov
adc
mov
xchg
inc
push
out
cmps
inc
pop
dec
add
jg
ja
and
jle
push
dec
cmp
xchg
bound
nop
dec
and
adc
iret
pop
sbb
pop
add
(bad)
push
sbb
xchg
cmp
mov
mov
test
jg
psubb
mov
stos
inc
sahf
mov
jle
pushf
mov
(bad)
call
les
daa
push
or
hlt
mov
sbb
jmp
pop
ss
pop
sbb
in
or
cs
cmps
inc
leave
add
dec
xor
sahf
cmp
aad
sbb
mov
lods
sub
arpl
xchg
retf
adc
pop
xor
ret
stos
in
mov
(bad)
jmp
push
mov
bound
xor
sub
inc
and
dec
pop
ret
or
cmp
push
jle
pop
out
dec
mov
add
jne
mov
push
hlt
push
in
test
sahf
mov
push
adc
adc
sbb
mov
mul
nop
push
push
mov
cs
stos
in
mov
or
mov
jge
sub
scas
mov
mov
jo
cmp
pop
jns
jg
sbb
outs
lods
aad
inc
lods
jp
cmp
stos
test
dec
out
je
mov
mov
movs
repnz
sub
jnp
mov
out
adc
jae
xchg
xor
mov
adc
mov
inc
aam
gs
xlat
jns
cmps
and
call
sahf
inc
cmp
pop
(bad)
fbld
add
jg
sbb
xchg
xchg
and
jmp
enter
cmps
push
aad
jno
or
fimul
lds
sub
mov
mov
pop
sbb
cmp
cmp
mov
ss
rcl
add
ins
push
ins
out
inc
in
pop
push
cdq
adc
test
sub
jg
mov
and
std
test
cmp
(bad)
ret
or
inc
in
rcl
xchg
ins
adc
inc
xor
cmp
ins
sub
lea
xchg
scas
cmp
sbb
adc
test
fdivp
mov
fdiv
aad
mov
outs
jb
imul
stos
ficomp
jmp
jge
dec
inc
inc
leave
out
(bad)
fcom
call
xor
add
lods
aaa
xchg
push
movs
or
jbe
lds
add
mov
add
hlt
daa
pop
mov
or
jl
adc
sub
iret
xor
stc
iret
icebp
adc
loope
pop
mov
sbb
jp
adc
aaa
cmp
inc
in
jne
mov
fadd
push
jb
pop
jo
rcl
in
ins
addr16
cmp
adc
retf
ja
and
or
enter
jmp
sub
retf
jbe
and
lods
loopne
shr
loope
test
ret
inc
movs
lahf
adc
push
ja
int3
cmp
cli
push
(bad)
popf
aad
inc
mov
std
scas
xchg
pop
push
add
adc
xor
cld
jne
lods
ss
push
and
mov
dec
fs
xor
retf
mov
out
adc
adc
fdiv
rcl
cmc
cmp
js
test
mov
ret
imul
inc
and
les
xchg
stc
jmp
lahf
mov
pushf
mov
ins
repnz
loope
dec
fwait
jecxz
jne
int
ret
xchg
loop
mov
ror
push
sub
sbb
shl
xor
cmp
ins
(bad)
and
call
outs
mov
ds
fidivr
xchg
aad
ins
(bad)
mov
ja
xor
add
nop
and
or
loopne
retf
into
cmps
jg
cmp
mov
shr
ins
cli
pop
push
in
fcmove
lock
out
aaa
das
sub
mov
jb
in
push
mov
pop
push
mov
push
pop
loope
cmp
inc
mov
mov
xor
(bad)
into
xlat
stos
outs
push
aam
das
sbb
jge
call
pop
mov
pop
sbb
jne
mov
dec
sbb
test
dec
loopne
jmp
push
bound
mov
hlt
lea
push
into
in
inc
mov
shr
mov
xchg
push
ds
repnz
push
jae
in
sbb
mov
mov
popa
fiadd
out
xor
shl
xchg
ds
pop
xor
movs
mov
lahf
push
(bad)
cmp
mov
add
aad
push
push
add
lds
rol
or
cmc
fisttp
ja
call
push
cmp
xchg
pop
mov
mov
sub
add
rol
js
adc
rol
mov
retf
mov
mov
mov
lahf
repz
(bad)
push
or
inc
test
mov
mov
fdivr
cwde
fs
in
pop
ins
jmp
sub
nop
xchg
shl
cmps
jecxz
jecxz
jecxz
inc
pop
aad
leave
xlat
pop
sti
pushf
pusha
ja
adc
pop
and
mov
xor
shl
pop
dec
stc
sub
(bad)
pop
(bad)
cwde
and
outs
sbb
icebp
xor
std
mov
out
jmp
or
(bad)
push
popf
les
mov
cli
outs
push
sub
mov
int3
mov
mov
mov
mov
add
(bad)
icebp
stc
je
cli
movs
inc
or
jns
mov
add
sub
out
jnp
mov
jne
outs
mov
outs
popf
xchg
sub
div
pop
mov
rcl
or
cld
jecxz
xor
lods
shr
lods
dec
push
cmp
pop
cmc
imul
pushf
add
and
scas
mov
popa
mov
pusha
cmps
iret
ins
push
sbb
xor
pop
dec
mov
or
test
arpl
mov
stos
xor
fiadd
and
or
dec
cmp
test
aam
jp
push
test
dec
mov
test
out
cmp
jmp
add
icebp
daa
das
and
jmp
cmp
imul
or
or
cld
push
ins
loop
mov
mov
scas
lods
adc
ucomiss
xor
sbb
int3
inc
dec
add
or
sbb
icebp
aas
enter
mov
pop
jmp
aaa
jle
sbb
pop
dec
mov
and
mov
push
fild
xor
mov
or
push
add
fwait
jb
movs
fsub
jg
bound
push
mov
pop
or
mul
leave
mov
in
or
xor
sar
push
ja
add
loopne
or
or
xchg
je
mov
sub
mov
pop
fistp
dec
imul
xor
call
and
adc
aas
jmp
dec
mov
xor
sbb
push
mov
add
adc
loop
out
adc
push
movs
xchg
in
jb
inc
in
hlt
and
push
xchg
jl
inc
sbb
adc
fst
fsub
(bad)
cs
push
jmp
std
mov
dec
into
imul
sub
and
adc
rcl
out
xchg
jmp
xchg
xor
cmc
inc
pushf
(bad)
and
sti
pop
rol
jge
push
adc
xor
lock
scas
sbb
das
adc
adc
daa
push
push
mov
mov
push
out
call
push
sbb
pop
bound
ss
xor
mov
jno
int3
ror
mov
mov
outs
sar
mov
ja
dec
dec
outs
jnp
idiv
dec
and
pop
xchg
adc
mov
stos
movs
out
aam
stos
add
push
dec
jmp
cmp
pop
inc
xor
mov
ins
mov
xchg
shr
add
xlat
sti
rcr
add
adc
jae
cwde
out
mov
mov
in
add
sub
fs
popf
sub
daa
mov
ror
mov
inc
pop
sbb
push
mov
movs
xchg
jns
xchg
movs
les
enter
xor
stc
and
or
retf
mov
arpl
rcl
sub
into
scas
lahf
(bad)
fnstcw
add
jp
adc
and
xor
mov
mov
jbe
inc
pop
(bad)
dec
or
pop
sbb
retf
cmp
jmp
pusha
or
mov
sbb
movs
add
hlt
push
lods
mov
cld
repnz
sahf
shl
mov
cmp
ficomp
or
or
adc
sub
iret
fst
call
es
cmp
fwait
jle
pop
and
xchg
push
std
cmps
inc
shl
gs
leave
mov
dec
push
arpl
lods
mov
sbb
es
push
xchg
xchg
ins
into
inc
rcr
pop
mov
icebp
jb
xchg
mov
ins
cmp
and
pushf
mov
data16
jmp
imul
lock
xadd
push
or
pop
movs
fdiv
sub
xchg
xor
cmp
stos
fld
mov
and
jns
jmp
shld
shl
pushf
jne
aas
inc
add
shl
jb
loopne
jle
pusha
jnp
ret
adc
(bad)
stos
xchg
pop
push
iret
dec
inc
and
inc
sbb
xchg
pop
js
test
mov
test
scas
mov
push
je
bound
stc
mov
pop
stos
fistp
arpl
mov
jo
mov
ins
out
xchg
inc
outs
fidivr
lock
add
cmp
rcr
jne
ror
out
or
les
pop
jecxz
popf
and
adc
mov
and
ret
arpl
sbb
ret
adc
mov
into
pusha
jle
sti
lds
dec
dec
test
or
adc
in
and
das
idiv
imul
xchg
xor
scas
lds
jmp
xlat
or
push
cwde
dec
imul
movs
(bad)
iret
mov
dec
xchg
imul
(bad)
ins
dec
push
push
add
mov
loop
leave
add
mov
fcmovnb
das
loopne
loopne
xchg
adc
mov
mov
and
mov
fld
and
loop
mov
dec
push
inc
or
fs
mov
jns
rcr
arpl
inc
xchg
gs
add
imul
test
retf
cmps
xlat
sar
rcr
scas
lahf
fcomip
shl
inc
lock
aaa
lods
fbld
adc
ret
mov
mov
add
popa
cs
imul
ins
and
test
push
mov
jno
lock
dec
call
jb
xchg
sub
and
add
or
stos
xor
mov
or
and
loopne
fdiv
stos
jge
sbb
sbb
push
xor
repnz
icebp
test
ficomp
rol
repnz
xor
and
xchg
sbb
push
xor
inc
inc
aaa
adc
xchg
imul
jmp
mov
xchg
cmp
cwde
push
cmp
aas
mov
bound
jb
lods
mov
xor
cmp
push
ficom
adc
xchg
push
inc
aas
xlat
lahf
sbb
and
jns
data16
stc
test
sbb
mov
dec
pop
scas
popf
loopne
stos
outs
cdq
xor
pop
lahf
imul
dec
adc
movs
xor
mov
and
xchg
push
mov
xchg
add
ins
out
sbb
popa
cmp
mov
sbb
pop
aas
xchg
cmp
xchg
ds
xor
mov
pop
inc
repz
sub
add
fild
sbb
jmp
xchg
pop
sbb
fstp
cmp
dec
cli
call
fcom
and
sbb
mov
inc
adc
dec
and
jmp
jge
out
cmp
neg
pusha
push
and
jp
or
hlt
in
cmp
scas
retf
inc
test
mov
rcr
loop
pop
xor
sub
inc
add
mov
mov
dec
clc
arpl
sbb
aaa
(bad)
sbb
enter
push
retf
cmp
fs
and
das
add
push
inc
push
sti
or
sbb
or
(bad)
call
cmps
pop
push
loop
jbe
mov
adc
jmp
and
sub
mov
add
cmp
inc
rol
mov
cmps
jo
sahf
fs
ins
mov
inc
ss
outs
pusha
push
aas
call
or
lock
stos
xor
sbb
das
imul
cmps
clc
lods
icebp
mov
int3
imul
pop
or
add
mov
and
ss
out
es
js
cmps
inc
or
xlat
or
push
fsubp
icebp
mov
adc
iret
lods
(bad)
imul
inc
cmp
push
stos
js
dec
scas
cmps
mov
lods
scas
dec
sub
cmp
ja
push
popa
mov
in
pop
xor
sbb
(bad)
or
push
or
sbb
nop
xchg
out
test
inc
sub
enter
sbb
or
inc
mov
pop
int3
mov
dec
retf
push
pop
jo
mov
or
scas
cmp
push
inc
jb
in
dec
mov
inc
imul
sub
retf
jp
sub
mov
pop
push
js
xor
push
xchg
mov
mov
fsubr
in
push
mov
shl
mov
call
sub
jg
daa
sub
xor
jne
xor
mov
ins
sub
xor
ins
add
mov
add
sti
push
in
push
imul
mov
rcr
rep
ret
cmp
sbb
je
arpl
bound
into
cdq
sub
and
out
lods
in
gs
or
push
xor
shr
std
lds
(bad)
int3
retf
popa
bound
or
loop
mov
enter
les
cmc
rol
cdq
mov
cdq
nop
jb
in
push
jmp
push
sub
push
test
cdq
(bad)
pushf
sub
add
pop
popa
cld
adc
push
xor
arpl
inc
add
jne
in
(bad)
loop
xchg
xor
pop
test
(bad)
jmp
inc
lods
xlat
inc
pop
fnstsw
in
shl
sahf
sub
mov
push
mov
mov
aad
mov
shr
jecxz
mov
lds
cmps
xchg
push
jnp
loope
add
mov
xchg
inc
rcl
push
pop
push
jp
or
mov
sbb
sub
es
pop
jns
repnz
fnstenv
mov
push
aad
cmp
shl
mov
outs
ins
out
adc
out
sub
inc
mov
inc
mov
cmp
mov
adc
mov
ja
jmp
into
fistp
daa
hlt
jmp
add
push
inc
pop
mov
xchg
sbb
call
mov
je
pop
inc
mov
ss
jnp
mov
call
outs
inc
xchg
sub
push
aaa
outs
loopne
xchg
cs
jp
jmp
ds
inc
int3
dec
call
jg
xor
inc
xchg
icebp
shl
cmp
xor
enter
cmps
xor
adc
cmp
inc
fimul
(bad)
push
adc
xchg
dec
imul
das
jmp
cdq
pusha
pop
xlat
popf
jo
xchg
sahf
mov
lods
(bad)
in
jge
aaa
cmp
jb
les
inc
rol
push
aaa
outs
push
arpl
jns
retf
cs
sbb
xchg
mov
mov
scas
sbb
div
mov
and
sub
aaa
and
sub
cmp
add
xchg
leave
leave
ret
push
xchg
ds
cmps
cmp
cmps
push
gs
pop
inc
aas
dec
push
test
(bad)
sbb
pop
xor
mov
movs
ja
pop
std
mov
xor
das
push
push
outs
pop
in
fnstsw
mov
mov
call
les
inc
mov
outs
mov
add
out
and
add
repz
sub
mov
mov
sar
or
dec
adc
div
dec
add
xchg
push
cmc
pop
outs
or
jp
test
popf
hlt
les
movs
into
enter
push
enter
jl
pop
sub
lods
push
and
push
adc
jg
jne
lods
add
and
mov
xchg
mov
jecxz
js
sbb
pop
mov
mov
int3
pop
je
shl
dec
add
dec
sahf
cs
enter
fs
pcmpgtw
xor
inc
jns
add
bound
popf
pop
ja
lods
or
std
push
and
sbb
jmp
pop
enter
loop
xchg
xor
sub
inc
mov
pop
and
call
xor
out
cmp
push
ret
jmp
xor
adc
call
inc
push
xor
retf
cmp
sahf
sbb
pop
xor
loope
test
pop
out
adc
jnp
fcom
jb
test
imul
mov
adc
mov
dec
push
retf
xor
cmp
mov
jl
jnp
jp
adc
sub
xor
mov
imul
mov
or
jmp
and
jnp
push
cmp
mov
cmp
jbe
loope
js
sub
mov
or
je
adc
(bad)
clc
ss
push
push
std
fiadd
jb
jbe
dec
aaa
inc
jl
outs
pop
cli
xlat
sti
into
mov
scas
dec
retf
mov
jmp
fisubr
mov
adc
test
popa
and
mov
jo
sub
scas
push
add
jmp
push
int
ins
adc
xor
movs
fcom
jle
out
inc
lahf
inc
iret
mov
or
ss
sbb
into
add
xor
jae
and
mov
cmc
out
stos
pop
push
call
lods
xchg
mov
dec
pusha
xchg
call
cs
iret
xchg
or
or
inc
mov
(bad)
clc
daa
xchg
vmptrst
outs
mov
sbb
adc
jns
(bad)
mov
sub
add
stc
xor
and
rcl
outs
xchg
add
push
adc
sub
sbb
inc
into
inc
sbb
xlat
(bad)
mov
xchg
stos
cdq
popa
pusha
out
cmc
shl
dec
pop
das
hlt
pop
mov
inc
mov
jns
dec
cwde
dec
imul
sub
push
sbb
(bad)
xchg
outs
ret
rcr
out
ja
sub
xor
cmp
fiadd
int3
xchg
sub
cmps
pop
fisub
push
xchg
mov
push
loope
mov
enter
xor
retf
jg
shr
stos
mov
cmp
in
imul
mov
mov
(bad)
rcr
movs
inc
mov
mov
mov
pop
mov
jne
fsubr
pop
loop
sub
popa
aaa
inc
sti
ins
cmp
xchg
nop
pop
out
in
add
cld
out
push
sub
pop
dec
inc
or
inc
jmp
popf
aaa
arpl
dec
mov
pop
and
push
das
sbb
add
sub
out
addr16
call
aad
jle
fild
je
fistp
(bad)
inc
arpl
js
mov
pushf
dec
(bad)
sti
cmp
or
push
inc
fidiv
and
pop
mov
clc
adc
mov
cmp
clc
push
sub
add
daa
lds
and
jbe
movs
inc
scas
pushf
xchg
cmp
cmp
inc
cmp
cdq
(bad)
jno
leave
fadd
movs
and
mov
jp
gs
sahf
outs
mov
inc
ins
(bad)
mov
repz
and
jnp
mov
push
add
cli
pop
mov
dec
sbb
inc
shl
sbb
daa
pushf
mov
lods
jbe
mov
shr
cmps
dec
out
pop
push
xlat
dec
sbb
bound
push
das
add
fisttp
jmp
repnz
in
jmp
push
test
mov
fs
mov
shl
or
(bad)
adc
add
xchg
sbb
(bad)
por
fbstp
scas
mov
popa
jno
jno
add
cmps
jns
jecxz
push
outs
hlt
out
jle
adc
cmp
jmp
fcomi
sub
stc
inc
(bad)
jge
push
in
or
test
push
dec
pop
inc
test
call
nop
mov
pop
rol
xchg
mov
pop
cmp
mov
in
scas
outs
mov
push
sub
daa
adc
push
cs
cli
add
out
pop
push
cmp
aad
pushf
sbb
into
push
adc
or
push
sbb
pop
mov
fld
test
dec
imul
into
out
pushf
fs
xchg
loopne
mov
int
stc
(bad)
xchg
xchg
pop
dec
lahf
inc
and
inc
jns
(bad)
arpl
inc
or
out
repnz
test
test
shl
sub
and
(bad)
in
imul
xchg
xchg
cmp
push
scas
push
dec
jne
mov
pop
add
cmp
das
ret
jne
mov
imul
push
cmp
add
dec
es
arpl
mov
lods
mov
add
arpl
mov
push
sub
cmp
sub
xchg
enter
or
push
retf
or
xor
cmp
popa
add
lea
mov
cmp
gs
mov
push
xor
lahf
(bad)
frstor
pop
je
stc
test
fisubr
in
sahf
ror
inc
int
iret
adc
or
mov
sar
aad
shl
pop
xor
test
aas
mov
mov
fld
sar
ds
sub
and
addr16
arpl
and
push
out
in
fdiv
jmp
mov
or
loope
push
mov
mov
daa
imul
jp
sbb
and
sbb
call
mov
push
lock
pop
sbb
xchg
xor
dec
dec
jns
or
dec
adc
jecxz
add
mov
es
(bad)
int
xchg
xor
inc
cmp
xor
pushf
ret
push
pop
aas
cmc
mov
cmp
data16
inc
sub
push
cmp
push
into
jnp
jmp
pop
xchg
daa
cmc
add
loopne
movs
adc
out
jb
cmps
or
xchg
sar
sbb
fisub
in
xchg
add
(bad)
cmps
arpl
pushf
lahf
pushf
cmc
adc
daa
mov
jge
leave
sub
or
add
pop
mov
and
adc
fcomp
mov
test
lods
push
ficomp
pop
jge
cmove
repz
sbb
xor
adc
and
outs
in
gs
daa
xor
add
(bad)
xchg
in
loop
add
jmp
call
mov
dec
jb
aaa
mov
cdq
xchg
arpl
mov
out
pop
xchg
mov
xchg
jo
rcl
inc
daa
inc
retf
mov
pop
cli
pop
or
jmp
setns
cmps
mov
xchg
bound
xchg
fisttp
mov
mov
scas
jmp
rcl
lods
popf
mov
std
dec
mov
xor
fidivr
retf
outs
clc
jo
mov
mov
inc
sbb
mov
and
jbe
xchg
or
or
cmp
(bad)
retf
xchg
outs
xchg
clc
mov
in
mov
repnz
and
lds
sub
lods
cmps
bound
repnz
jmp
js
hlt
inc
sub
adc
sbb
mov
jo
cmp
and
xor
popa
inc
push
dec
push
in
(bad)
and
(bad)
add
sub
xor
push
jge
sub
dec
push
ins
iret
cdq
std
int3
dec
jno
jge
scas
or
(bad)
or
push
fsubr
leave
jmp
loop
xchg
les
jmp
clc
lds
jl
cmp
mov
xor
pop
xchg
cmovo
mov
inc
sbb
inc
imul
mov
push
xchg
je
inc
dec
leave
mov
or
in
push
mov
xchg
mov
jnp
jecxz
add
pop
ss
in
nop
lea
in
adc
inc
dec
and
imul
scas
inc
shl
je
hlt
or
bound
shr
loopne
imul
sbb
movs
mov
inc
push
adc
je
pop
int
xchg
and
ja
jecxz
cmp
sbb
int3
or
test
adc
mov
dec
int3
mov
in
es
adc
xchg
es
mov
fdivr
cmp
push
adc
push
xchg
push
sub
into
and
mov
movs
dec
aam
adc
push
or
pop
sub
ja
imul
or
sar
inc
sar
lea
mov
out
jae
and
cld
dec
sub
jl
jnp
fisubr
jle
push
mov
test
pop
lods
sbb
xchg
int3
iret
rol
imul
push
jge
sar
inc
loop
popa
pop
adc
cmps
mov
sbb
add
loope
and
jmp
ret
pusha
mul
mov
xchg
push
pop
push
or
fisttp
push
lods
popa
push
mov
adc
push
scas
and
(bad)
std
add
mov
stos
xchg
pop
imul
call
mov
mov
loope
cmp
fisub
xchg
jne
inc
jns
loope
sub
mov
pushf
sub
sbb
push
shl
popa
test
xchg
mov
pop
imul
fiadd
dec
data16
xchg
int3
or
loope
adc
mov
adc
daa
cdq
(bad)
pop
movnti
pop
fild
mov
rcl
lods
push
xor
out
or
xchg
daa
aad
add
xchg
stos
popf
push
mov
and
aaa
ret
lods
mov
adc
xor
mov
sbb
out
leave
dec
cmps
test
dec
(bad)
mov
icebp
pop
dec
pusha
xchg
mov
mov
(bad)
pop
dec
int3
mov
dec
scas
out
pop
clc
loopne
fs
imul
cmp
jb
and
loopne
js
sub
dec
inc
jbe
out
aad
adc
prefetch
jp
out
mov
add
repnz
repnz
sub
and
int3
sub
dec
adc
add
(bad)
std
sub
fnsave
pop
jle
push
sahf
cmp
dec
xlat
ins
push
fnstsw
mov
test
cmp
sub
bnd
jmp
sub
out
clc
ds
out
pusha
adc
mov
loope
pop
call
cmp
iret
pushf
mov
dec
test
mov
inc
mov
in
xchg
cmps
push
xchg
jbe
loope
pshufw
sub
mov
xlat
leave
pop
repnz
sar
in
xchg
mov
scas
out
(bad)
in
lds
jl
mov
cmp
cmps
fadd
or
(bad)
fidiv
jmp
mov
arpl
outs
inc
(bad)
call
push
lds
mov
push
(bad)
dec
mov
add
mov
sahf
out
inc
or
(bad)
and
dec
mov
inc
mov
jl
jecxz
xor
(bad)
mov
push
and
mov
adc
ja
test
cmc
mov
sbb
lods
push
push
(bad)
cmp
cli
mov
add
mov
fstp
adc
add
push
dec
mov
loop
fdiv
(bad)
xchg
gs
cmps
fs
mov
gs
clc
push
stos
inc
sub
inc
xor
aaa
ret
xor
adc
in
inc
pop
shl
sub
jb
in
xchg
leave
lds
movs
retf
push
stos
rcl
mov
adc
fwait
jle
xchg
in
icebp
je
inc
cmps
xchg
(bad)
lock
lods
xchg
test
scas
xor
sti
push
push
je
cs
data16
xor
cli
sub
(bad)
push
test
movs
jbe
add
mov
push
bound
and
and
js
adc
mov
add
mov
movs
dec
jae
push
push
pop
push
sbb
inc
mov
ins
iret
ret
push
pusha
inc
mov
loope
stc
scas
adc
lahf
enter
lock
or
shl
add
xchg
mov
neg
cld
ja
lds
in
sti
xchg
mov
mov
icebp
(bad)
outs
cmp
cmp
sbb
jae
ins
or
jmp
jge
icebp
and
and
mov
xchg
rcl
cwde
add
sub
cmp
retf
fs
adc
pop
mov
rol
push
cmp
ret
mov
sub
sbb
xchg
test
ret
bound
mov
cmp
sub
and
or
sub
stos
push
dec
fiadd
pop
ret
movs
mov
or
add
xor
sti
dec
or
stos
mov
fcom
out
sbb
xchg
add
addr16
xchg
xchg
popf
adc
and
cmp
mov
inc
add
movs
inc
sub
(bad)
iret
add
mov
inc
inc
out
shr
adc
inc
inc
jmp
pop
call
xchg
sahf
loope
cmp
iret
xchg
pop
lahf
addr16
mov
xor
js
sbb
jae
cmp
ficom
js
sub
adc
or
int
enter
aad
clc
mov
jno
or
adc
xchg
push
scas
push
dec
fcomp
mov
jmp
or
fstp
int3
xchg
shl
mov
scas
or
mov
je
call
add
cmp
out
mov
xor
sub
iret
addr16
adc
pop
add
mov
leave
fld
xchg
das
jl
loop
stc
mov
push
push
mov
mov
in
mov
adc
pop
dec
or
dec
pop
sbb
inc
fdiv
add
ja
ja
into
test
xor
pop
out
jecxz
sbb
fdivr
push
push
adc
loop
movs
and
jbe
in
jmp
mov
xchg
das
mov
sbb
hlt
test
mov
ins
movs
pop
push
add
jne
push
call
add
mov
into
dec
mov
cmp
cdq
inc
in
mov
mov
adc
imul
test
popa
xor
xlat
dec
rol
xchg
xor
movs
jbe
or
push
dec
scas
mov
cmc
cmp
mov
mov
mov
push
xlat
inc
mov
clc
jae
inc
jl
mov
in
pop
nop
add
lock
jp
push
push
adc
aaa
(bad)
push
mov
add
(bad)
mov
mov
jmp
or
(bad)
xor
cli
test
aad
aam
push
sar
fsub
and
mov
bound
jb
ror
xchg
xchg
leave
retf
in
ror
in
mov
ds
js
lahf
mov
add
adc
pop
xor
sahf
adc
repnz
repnz
sbb
stos
(bad)
push
mov
lods
aaa
inc
ds
adc
rol
movs
scas
pand
in
fs
aam
push
adc
test
adc
iret
shl
mov
pop
dec
retf
mov
pop
ja
cld
ins
jmp
lods
mov
xchg
scas
call
adc
mov
cmp
retf
(bad)
jns
mov
scas
loop
das
(bad)
mov
jmp
dec
enter
out
enter
push
inc
cld
cs
daa
cmp
ss
pop
js
in
or
fwait
mov
cmp
and
pop
data16
mov
cmp
fs
inc
clc
pop
in
les
es
pop
or
xlat
mov
xchg
pusha
add
jmp
lea
(bad)
fcomp
xchg
xor
push
pmullw
push
xchg
inc
int3
mov
mov
xor
scas
daa
push
outs
inc
into
and
jle
movs
push
aad
dec
cmp
adc
gs
retf
loopne
(bad)
fnsave
inc
mov
ds
push
jne
and
cmps
cli
leave
jmp
inc
nop
dec
dec
lea
jmp
xor
fcomp
mov
xchg
mov
test
mov
dec
ins
xor
or
pop
scas
icebp
(bad)
jo
jecxz
cdq
je
std
lahf
inc
mov
jge
hlt
movs
nop
or
jmp
push
or
mov
push
jbe
sbb
xchg
retf
bound
gs
outs
jge
out
sub
call
shl
xchg
(bad)
rcl
retf
mov
jo
icebp
mov
dec
xor
push
dec
fdivr
push
xor
add
shr
mov
cmps
dec
movs
test
add
push
pavgb
sbb
popa
cli
jge
int
adc
(bad)
fwait
add
push
int
lods
out
add
mov
ficom
dec
mov
sbb
icebp
loopne
mov
or
adc
and
pop
add
ja
and
scas
into
xchg
fcom
movs
sahf
cs
std
sub
pop
rcl
pop
leave
(bad)
pop
scas
cmp
cld
or
mov
xor
xor
imul
leave
sahf
cwde
push
cmp
hlt
test
pop
iret
test
pop
ja
imul
push
scas
ja
lds
and
cwde
fld
pop
add
dec
stos
or
cld
enter
js
fnstenv
jle
pop
push
jl
int3
pop
(bad)
arpl
inc
(bad)
xlat
idiv
add
mov
dec
inc
jns
dec
fsubr
sbb
rol
pop
stc
mov
dec
or
cdq
ret
enter
fwait
mov
pop
mov
data16
ss
xchg
push
pusha
xor
shr
cld
adc
xlat
cmps
sub
loop
retf
cdq
ins
sbb
es
and
stos
fisubr
push
push
arpl
xor
(bad)
xor
std
movs
adc
jecxz
xchg
jl
push
and
sbb
push
xchg
lds
std
and
add
dec
adc
cmp
iret
sahf
mov
cmp
aam
inc
ret
cld
and
pop
xor
popf
xchg
or
dec
jmp
lds
sub
xor
push
jl
pop
(bad)
arpl
fsub
push
dec
dec
int
inc
pop
aad
ins
push
xchg
mov
popa
aam
jno
test
sbb
iret
mov
fisttp
mov
xchg
mov
sbb
adc
mov
(bad)
pushf
call
push
inc
outs
push
and
loop
stc
jle
lds
mov
cli
hlt
jo
xor
mov
je
test
mov
push
sbb
sbb
rcl
movs
mov
jg
int3
ror
mov
les
in
sti
(bad)
push
jmp
in
xor
jne
cmp
(bad)
mov
jns
sahf
sub
adc
lods
mov
out
bound
add
adc
push
push
loope
sub
mov
sbb
(bad)
jno
push
cli
lock
push
mov
daa
mov
les
loop
cmp
arpl
mov
mov
xchg
out
cmps
mov
mov
fst
bound
push
es
scas
repnz
cmps
loop
into
stos
rol
fs
lods
inc
mov
mov
neg
jle
mov
mov
leave
in
or
jmp
jbe
iret
loopne
pop
popa
pop
jle
stos
cmps
outs
pop
fsubr
shl
retf
and
mul
es
out
pushf
mov
cmps
jnp
(bad)
(bad)
out
fdivr
adc
xchg
cmps
out
or
outs
aad
push
xor
jae
add
mov
jbe
inc
mov
cwde
fstp
inc
sbb
lods
stc
jl
add
pop
sub
nop
call
(bad)
jno
push
xchg
jo
mov
xor
mov
out
cmc
das
xor
jo
lar
mov
adc
xchg
inc
push
aaa
bound
cmps
and
jns
fsubr
test
sub
cwde
fwait
cld
sub
sub
xchg
sbb
cmps
fucompp
pop
push
sub
stc
mov
dec
inc
mov
pushf
ret
adc
xor
adc
mov
inc
xor
inc
in
pop
(bad)
fcmovnb
push
out
push
mov
sbb
mov
mov
and
cmc
xor
push
aaa
(bad)
aaa
pushf
fwait
jnp
cld
cmp
sbb
sub
call
gs
dec
mov
jecxz
into
cs
popa
and
xor
add
mov
xchg
js
xor
mov
adc
pop
mov
mov
jbe
adc
inc
fmul
(bad)
in
inc
movs
lods
sahf
and
jno
push
dec
inc
pop
cmp
mov
inc
cmp
ss
pop
cmp
mov
pop
mov
outs
push
mov
adc
(bad)
push
adc
iret
pop
dec
push
add
call
or
dec
dec
ss
pop
xlat
mov
les
nop
out
add
add
pop
lds
fwait
pop
sbb
ss
leave
(bad)
xor
xor
pop
inc
push
movs
ja
sbb
nop
or
(bad)
cmc
sti
call
cs
push
pop
jp
popf
jl
add
xchg
cs
test
inc
sbb
adc
fdivp
inc
pop
lods
xchg
pushf
into
push
inc
mov
outs
jp
outs
dec
sbb
arpl
or
lds
outs
cmp
rcl
jp
sbb
dec
mov
dec
and
icebp
mov
add
dec
jbe
sub
outs
mov
out
aam
and
jne
div
cwde
or
mov
pop
push
mov
in
(bad)
jge
int3
mov
retf
int
or
pop
adc
xchg
pop
pop
sub
cmp
mov
out
or
sar
and
xchg
fidivr
mov
or
mov
add
mov
dec
sub
fst
and
cs
fisttp
jg
dec
das
jl
jo
es
addr16
adc
cmp
sub
jo
mov
pop
mov
add
ror
pusha
data16
cwde
in
nop
pop
les
shr
ret
cmc
movs
mov
mov
cmp
shl
mov
imul
mov
data16
add
mov
fstp
clc
sub
addr16
inc
dec
mov
imul
fadd
dec
jmp
ins
xor
pop
push
pop
cmp
call
push
xchg
fidivr
in
pop
or
stos
pop
jmp
fisttp
int
div
fwait
add
xchg
nop
out
sbb
lods
jae
mov
xchg
push
sbb
pop
shl
into
bound
mov
lods
mov
push
add
(bad)
xor
sbb
mov
mov
pop
mov
and
adc
jge
jg
outs
sub
push
push
or
in
enter
adc
pushf
gs
xchg
push
push
fsub
mov
jge
add
add
pop
cmps
jecxz
mov
mul
adc
in
mov
mov
cmove
cmp
not
in
loopne
sub
loopne
inc
fld
dec
ret
ror
mov
icebp
int3
pop
dec
push
repz
int3
sahf
push
mov
jo
bound
adc
lahf
pop
jecxz
test
cdq
xor
add
lahf
stos
sbb
pushf
inc
xchg
stos
dec
xor
mov
sub
pop
mov
fldcw
dec
mov
add
inc
mov
adc
adc
cli
push
loopne
hlt
pop
push
dec
xchg
xor
mov
or
lock
adc
push
add
loopne
xchg
mov
inc
mov
xor
std
mov
jge
sbb
inc
in
lea
pop
stos
cli
and
xchg
push
dec
sahf
loopne
sub
push
push
inc
mov
mov
shr
jle
int3
clc
xor
xchg
dec
test
ja
push
sub
sub
sub
inc
test
out
pusha
cli
push
je
mov
addr16
ror
jae
push
ins
cmp
ret
outs
cmp
xchg
cwde
sbb
nop
pushf
fild
not
fs
push
js
inc
call
cmp
neg
mov
push
std
add
jl
xchg
(bad)
xor
outs
arpl
stos
aam
mov
xor
xchg
test
xlat
pushf
and
lahf
xchg
imul
jmp
add
in
pop
popa
(bad)
mov
mov
ja
mov
cwde
cmp
dec
stc
pop
in
inc
call
iret
cmp
cmp
shl
cmp
add
(bad)
xchg
mov
jo
cmp
cmps
out
shr
add
out
jge
test
fstp
jp
sub
lods
pushf
fidiv
jecxz
jno
addr16
mov
nop
adc
ret
cmp
sahf
sbb
sti
shl
adc
sbb
ror
jp
icebp
mov
test
add
sub
adc
sbb
or
stc
scas
outs
jae
ret
cmp
les
test
and
add
pushf
sbb
jge
popa
not
cwde
mov
movs
fsubp
xchg
aaa
pop
jne
jns
int
ds
cmp
mov
and
inc
pop
cmp
cmp
adc
mov
push
xchg
(bad)
gs
and
jmp
test
mov
mov
adc
push
push
mov
(bad)
nop
mov
in
shl
popf
int3
xchg
pusha
das
pop
xor
inc
fsubr
xor
xchg
mul
sub
lods
pop
ret
shl
test
mov
sbb
movs
(bad)
arpl
ss
cli
loope
mov
jne
std
cli
sbb
xchg
adc
enter
(bad)
mov
icebp
jns
cld
inc
add
rcl
sub
xchg
sub
lods
in
dec
cwde
cdq
mov
sti
mov
mov
popf
sbb
scas
or
mov
int
xor
sub
pop
mov
xchg
fdivrp
pop
iret
and
movs
and
cmc
data16
stc
ret
repz
sub
mov
and
cmps
in
or
mov
das
rol
pusha
rcr
inc
leave
rol
xor
push
sbb
push
pop
push
out
mov
mov
mov
aas
or
xchg
ins
out
scas
mov
push
mov
das
fdivr
cs
jg
push
add
jns
in
dec
add
lods
mov
outs
cmp
xor
out
adc
in
xor
inc
pop
popf
shr
mov
bound
mov
or
cmp
cli
add
inc
js
add
jo
shr
or
scas
hlt
xor
add
jmp
mov
jmp
xchg
or
sub
sub
and
hlt
out
pushf
mov
xor
loopne
inc
inc
(bad)
mov
call
pop
mov
imul
test
dec
iret
add
and
lahf
mov
bound
jmp
mov
mov
iret
lock
push
jbe
cmc
inc
les
mov
jmp
inc
repz
popf
jae
sub
mov
fisttp
xchg
push
out
cmp
or
sub
mov
(bad)
mov
das
je
aam
dec
jg
jno
and
(bad)
(bad)
fcomp
jge
xchg
add
add
call
scas
jo
iret
mov
imul
sti
ret
aam
test
scas
das
cmp
icebp
or
or
test
rcr
and
arpl
adc
(bad)
xor
sbb
lock
jae
retf
jae
cmp
(bad)
pop
(bad)
or
push
sub
cld
mov
int3
mov
and
inc
jo
inc
xor
aam
js
imul
cmp
(bad)
fmul
or
cli
pushf
aaa
or
fidivr
ins
mov
and
xor
fs
out
sbb
dec
jmp
mov
inc
cwde
cdq
add
mov
fdiv
ss
xchg
scas
inc
pop
and
jns
dec
cmp
jecxz
cmp
sbb
adc
test
sbb
jo
mov
(bad)
push
mov
fucomp
xor
icebp
sub
sbb
cmp
xchg
jae
scas
sub
sub
sbb
pop
sbb
cmps
data16
in
int
enter
cmp
(bad)
adc
push
test
mov
and
cmp
cmp
(bad)
lock
inc
jmp
mov
mov
or
les
sbb
inc
sbb
enter
jnp
bound
loope
and
mov
imul
adc
xlat
fst
loop
outs
xchg
xchg
ret
(bad)
lock
xchg
retf
jb
adc
popf
jecxz
gs
fwait
xchg
(bad)
repnz
cli
neg
add
outs
mov
jne
(bad)
cmps
or
xchg
imul
in
jp
in
cmp
lahf
dec
jnp
lds
xor
icebp
push
and
add
lods
push
je
mov
outs
call
mov
fnstcw
ds
retf
or
jns
lods
xor
inc
shl
leave
and
nop
sub
ror
push
or
inc
stos
inc
js
mov
xor
(bad)
mov
dec
shl
mov
test
int3
idiv
adc
repnz
and
add
xchg
inc
iret
cdq
mov
arpl
push
rep
(bad)
aas
repnz
or
push
stc
inc
aad
movs
mov
clc
mov
adc
cmps
mov
add
dec
inc
imul
cmc
in
jmp
cld
(bad)
clc
and
adc
cmc
std
repz
fistp
jb
adc
dec
pop
xchg
dec
mov
mov
adc
cdq
xchg
js
nop
in
mov
addr16
mov
jo
inc
pop
ret
add
shl
cmp
sub
iret
int3
int
cmp
cmc
sbb
push
push
or
xor
repnz
out
dec
loopne
aaa
scas
mov
sbb
ins
dec
add
inc
xchg
mov
sub
fistp
inc
jmp
stc
push
pop
sar
add
in
lock
dec
push
add
pop
add
xchg
retf
sub
jno
jmp
nop
rcl
xchg
or
jb
mov
push
pusha
pusha
dec
dec
cli
imul
jmp
ret
into
sbb
in
jl
mov
repnz
sub
out
je
fsubr
inc
repz
mov
daa
test
call
imul
add
adc
and
inc
sbb
test
clc
les
gs
dec
inc
stos
call
dec
jge
fst
adc
jecxz
or
xor
or
mov
into
and
cmp
cmp
xchg
pop
out
aad
xor
aad
lods
mov
adc
fcomp
fs
dec
test
xchg
rep
push
inc
sbb
mov
out
xchg
pop
inc
inc
inc
ds
push
xor
xchg
cwde
out
(bad)
les
(bad)
out
mov
(bad)
sub
sbb
add
sub
lds
mov
add
shl
int3
inc
lds
fild
fs
sub
push
add
xchg
push
mov
idiv
das
xor
scas
test
mov
lods
ins
inc
xor
stc
repnz
dec
sar
pop
sub
gs
int3
xor
movs
dec
sub
sbb
ficom
xchg
jp
test
mov
ins
sbb
popf
rcl
lea
cmp
in
sbb
xchg
add
pop
scas
jp
lds
loopne
(bad)
stc
retf
jge
jno
jg
pop
pop
xchg
mov
lods
push
(bad)
shl
mov
inc
sti
cmp
sbb
shl
push
mov
push
rcl
add
xchg
pop
inc
ror
in
cmp
sbb
loopne
pop
loope
cli
sahf
retf
sbb
pop
out
xchg
dec
loope
les
and
inc
mov
js
fst
mov
jne
dec
imul
rol
push
sbb
icebp
xlat
push
mov
iret
or
lds
fiadd
pop
ins
ror
fnstenv
or
aaa
mov
add
imul
cmp
fist
mov
(bad)
add
or
or
movs
push
pop
out
pop
cmp
adc
push
cmc
adc
ds
(bad)
aam
mov
pop
popf
outs
out
or
or
mov
daa
jmp
push
push
scas
aaa
jle
ds
ja
popa
and
mov
sbb
push
adc
jmp
scas
or
out
cmc
push
mov
mov
adc
ret
rcl
mov
xchg
jg
dec
sti
lds
and
xor
mov
add
dec
mov
push
cmp
xor
lods
sbb
pusha
pop
or
outs
fimul
into
shl
pusha
dec
mov
out
xor
sub
jmp
adc
js
aaa
call
push
out
sbb
mov
sbb
pop
mov
addr16
adc
cli
fimul
into
call
mov
pop
std
mov
in
aaa
jle
pop
xchg
jmp
dec
ins
stos
and
xor
mov
popf
cmp
daa
add
aaa
ret
xor
stos
pop
lahf
into
ret
inc
mov
sub
pop
dec
mov
fisttp
rcl
fucomp
lds
into
jns
(bad)
pop
cmp
call
adc
xlat
push
adc
aam
cmp
ss
push
jb
ror
(bad)
jp
xor
in
or
jmp
pop
jne
pop
aaa
add
adc
push
bound
(bad)
in
xor
sub
lea
or
or
fmul
sar
inc
jge
test
pop
retf
out
add
aad
xor
fsubr
in
test
int
or
dec
unpckhps
call
ins
retf
pusha
cmp
outs
rol
xchg
jmp
popf
mov
ja
aad
mov
lods
inc
sub
pop
mov
rcr
clc
sub
and
adc
addr16
xchg
retf
pop
ja
cli
xor
or
nop
daa
rcl
aas
cdq
in
add
mov
cli
adc
jp
test
ss
xchg
push
jg
push
shl
xchg
add
paddsw
sub
fst
in
dec
mov
pop
movs
add
jmp
jb
imul
adc
adc
push
in
mov
fwait
repz
sub
jne
in
fisubr
dec
add
aad
repz
ja
mov
jp
leave
add
jle
cmp
and
mov
shl
imul
cmp
rcr
mov
push
inc
stc
adc
ret
dec
mov
sub
repz
scas
mov
mov
jecxz
xor
in
out
jl
rep
je
jb
addr16
imul
xchg
outs
mov
call
mov
int3
cdq
xchg
cmp
movs
cmp
cmps
imul
jo
int3
int
jmp
idiv
jbe
mov
push
push
outs
loopne
sub
push
push
xchg
std
and
test
js
fstp
cmp
mov
xor
movups
cli
test
fwait
aam
rcl
ds
mov
xchg
cmc
xchg
add
mov
pop
xchg
pop
cmp
mov
call
mov
mov
mov
fnstenv
xchg
add
add
push
mov
sub
xor
stos
pop
(bad)
pop
daa
mov
shr
(bad)
sti
sub
es
dec
test
and
mov
add
jne
jl
mov
add
sbb
pop
xchg
retf
xchg
jl
jle
jecxz
div
nop
xchg
sub
inc
in
ds
mov
sbb
mov
mov
and
dec
into
fwait
bswap
add
sahf
retf
jno
jae
cmp
pusha
add
sahf
js
fcomp
test
ret
push
dec
xchg
or
sbb
xchg
inc
and
arpl
sahf
call
pop
jge
dec
add
jnp
repnz
std
pushf
cdq
loope
ins
sub
or
push
inc
push
adc
jno
pop
jae
mov
mov
daa
movs
mov
or
popf
inc
jmp
stos
sbb
jg
mov
add
repnz
cmp
cld
adc
pop
nop
call
cmp
mov
cmp
in
pop
xchg
or
jae
jno
daa
inc
pop
mov
aad
pop
aam
adc
bound
add
out
mov
xlat
hlt
adc
test
dec
jne
ret
sbb
fs
cli
sub
ss
scas
add
aam
xchg
mov
std
data16
fcmove
sbb
scas
inc
or
fistp
movs
fistp
mov
mov
dec
jne
int3
xchg
test
test
inc
in
cmps
mov
jnp
add
push
bound
mov
xor
dec
dec
add
dec
and
lods
(bad)
div
test
movs
jmp
mov
dec
add
dec
jne
jmp
inc
inc
fstp
rcl
fdivr
cmps
clc
or
push
mov
(bad)
pop
sub
jno
mov
jnp
imul
push
or
icebp
int
fs
push
add
xchg
mov
cld
or
pop
addr16
nop
outs
mov
or
xor
xchg
pop
mov
add
cmp
push
and
xchg
adc
xchg
sti
sub
mov
arpl
cmp
mov
cmps
inc
push
fsubp
push
adc
pusha
push
in
popa
mov
add
nop
ins
sbb
movs
jecxz
add
inc
cmps
loopne
outs
jns
rcl
mov
xor
clc
mul
mov
div
cmp
sar
test
cmc
adc
and
jmp
dec
lods
or
mov
nop
push
mov
sub
(bad)
push
dec
or
aas
les
add
mov
sub
mov
dec
push
les
push
add
mul
addr16
xchg
sub
jno
arpl
push
mul
aaa
xlat
mov
stc
mov
stc
clc
pushf
jmp
sub
lods
paddsw
movs
cld
xor
imul
sbb
cmc
adc
fisubr
mov
jecxz
sbb
push
movs
outs
xchg
dec
push
sbb
and
xor
xchg
jg
fwait
test
into
cmp
jp
sahf
and
fimul
stc
pop
stos
pushf
arpl
dec
retf
stos
movs
mov
xchg
in
cld
addr16
mov
jns
mov
jnp
or
fisttp
rcl
stc
ds
rol
jmp
stos
stc
add
sub
mov
daa
cmp
out
inc
jecxz
les
xchg
sbb
fld
cmp
add
lock
sub
inc
and
cmp
xor
stos
mov
test
jle
cmp
out
mov
jecxz
gs
adc
pop
pop
cmp
mov
cmp
pop
call
nop
repz
and
or
js
ficomp
inc
adc
adc
loope
mov
and
add
loopne
and
push
mov
les
mov
leave
ds
jle
or
js
fsub
ins
aas
std
push
arpl
inc
cwde
ja
test
mov
push
push
stos
xor
pop
cwde
ss
jmp
test
idiv
mov
xor
mov
mov
mov
(bad)
in
(bad)
mov
pop
adc
shl
and
push
stos
je
leave
mov
daa
fld
sub
inc
ss
add
call
push
movs
in
ja
sbb
add
sub
test
cmp
vmread
sub
jp
mov
ins
aad
cmp
stos
mov
in
int
pop
add
sahf
xor
push
xor
popa
jecxz
mov
jl
add
add
retf
mov
xor
xor
jmp
imul
in
jno
fisubr
nop
hlt
cdq
fisubr
popf
or
mov
dec
lahf
jns
jge
lods
push
aaa
jb
mov
xor
retf
fidivr
pop
xchg
repz
fmul
jno
xchg
jp
pop
icebp
push
mov
add
adc
add
mov
mov
inc
out
mov
push
mov
mov
dec
aaa
xlat
(bad)
mov
mov
retf
xchg
in
fadd
int3
inc
xor
out
add
adc
test
pop
xor
ret
sub
popa
test
out
(bad)
jmp
push
mov
ds
fdiv
imul
fcomp
inc
xor
jle
cmc
adc
test
adc
and
jp
out
lahf
cmp
repz
adc
jne
sub
(bad)
ja
fidivr
pushf
xor
loop
(bad)
(bad)
cmp
ret
push
pop
inc
test
and
out
mov
or
test
xor
and
push
and
sub
lea
mov
adc
add
movs
xchg
xor
jnp
jg
lahf
mov
test
call
daa
adc
std
clc
mov
test
(bad)
sar
add
test
mov
jnp
push
cmp
icebp
pusha
psubd
mul
push
hlt
loop
mov
mov
and
pop
push
jecxz
cmp
scas
jp
outs
shl
aaa
add
movs
ret
mov
lds
out
ds
aaa
sbb
retf
jecxz
mov
or
ins
push
mov
jno
clc
cmps
cmc
mov
push
and
in
mov
dec
add
in
adc
shr
test
push
in
loope
fld
in
mov
inc
sub
out
jecxz
mov
loopne
imul
aas
leave
add
or
sub
push
pop
jle
add
out
pop
stos
ins
mov
fnstsw
into
xchg
pop
lds
(bad)
in
cmp
pop
adc
ds
dec
pop
inc
popa
ret
inc
iret
pop
movs
test
mov
stos
jmp
push
push
xchg
out
push
lods
or
jns
mov
repnz
data16
movs
sub
cli
add
ins
loop
dec
sub
fild
cld
mov
aaa
mov
in
stos
cmps
enter
and
call
jne
test
adc
cmp
movs
in
add
xchg
sbb
xor
dec
pop
fcomi
in
pop
loopne
out
and
out
ins
sbb
xchg
jg
mov
pusha
in
mov
cmp
xor
pop
add
cdq
inc
dec
mov
adc
add
xchg
icebp
std
fldenv
xchg
xor
mov
push
loope
ror
and
mov
push
cmp
enter
call
sbb
pop
jbe
dec
lahf
inc
movs
repz
fcomp
ror
fwait
xchg
retf
jmp
outs
loopne
ins
addr16
sar
ins
pusha
jbe
pop
fcom
ffreep
add
pop
mov
adc
inc
into
jge
fistp
or
in
mov
cmps
arpl
or
popa
(bad)
es
leave
ins
in
lods
mov
aas
inc
call
or
dec
xchg
pop
jmp
pop
movs
mul
stos
xchg
stc
jge
mov
scas
sub
test
xchg
shr
xchg
std
sbb
fstp
retf
aam
adc
retf
sub
es
out
int3
and
not
push
lods
and
xor
or
mov
popa
sbb
cmp
sub
sbb
out
cmps
repz
sub
jmp
ret
rcl
pop
inc
fsincos
mov
jmp
retf
mov
sub
pop
lods
or
push
loop
add
pop
dec
cmp
push
loop
in
rcl
test
lods
imul
or
adc
lods
xchg
xchg
jg
ret
ins
or
rcr
fdivr
mov
fdivr
xchg
cld
mov
pop
fwait
push
mov
and
and
iret
imul
mov
sbb
mov
push
movs
sbb
data16
mov
lahf
outs
push
loopne
test
es
les
(bad)
mov
repnz
popf
aaa
pop
les
fild
repz
daa
jb
out
sbb
neg
in
je
xchg
sbb
fsubr
(bad)
rcr
add
or
mov
xor
or
aad
mov
ss
sbb
fstp
inc
mov
daa
test
out
pop
push
pop
mov
dec
mov
sub
jmp
movs
mov
cdq
inc
and
sub
iret
sahf
push
xor
mov
out
mov
sub
cmps
retf
pop
lods
cmps
jne
jnp
ins
movs
(bad)
fcmovnb
test
or
outs
mov
jo
adc
jnp
cld
fs
lock
test
mov
ret
popf
jbe
pop
pop
mov
mov
xchg
add
mov
inc
cmp
jnp
retf
push
push
mov
addr16
nop
loopne
adc
cld
mov
or
pusha
clc
aad
popf
inc
sbb
out
cld
pop
sbb
jae
in
pop
pusha
adc
jno
xor
repz
push
pop
fsqrt
fisttp
imul
xor
jmp
cwde
fisubr
shl
mov
push
imul
mov
paddusb
(bad)
xor
je
pusha
or
mov
adc
cmp
cmp
imul
and
gs
loop
int3
add
pop
das
push
push
mov
and
cmp
xor
retf
sahf
int
cmp
pop
arpl
and
adc
out
ja
test
shr
aad
daa
jo
xor
inc
sub
dec
test
add
mov
cli
cs
in
out
or
xchg
sbb
loop
arpl
xchg
mov
(bad)
retf
inc
dec
xchg
mov
xor
push
mov
inc
cmp
inc
mov
les
movs
dec
pop
sub
jnp
ret
mov
push
loope
fcomp
jp
je
outs
out
jmp
pop
and
scas
cmp
sti
fdiv
cmc
push
aad
sti
jae
or
test
ret
out
cdq
dec
in
dec
xor
imul
and
push
(bad)
adc
adc
and
push
shr
clc
leave
jno
cmps
aaa
xchg
lods
cmp
ins
xor
in
pop
cwde
xchg
fisttp
push
cwde
and
lock
jne
sub
jmp
sub
out
dec
add
sub
mov
sbb
adc
icebp
mov
mov
mov
int
mov
repz
and
stc
inc
mov
in
pop
sub
mov
dec
mov
popf
add
mov
pop
aaa
push
fstp
cli
lds
push
xor
xor
aaa
ins
lock
stc
cmp
pop
shl
inc
into
test
xchg
test
mov
pop
dec
outs
inc
enter
jae
mov
dec
in
iret
mov
inc
inc
les
fs
mov
(bad)
jns
and
ror
push
retf
jg
(bad)
call
cmp
mov
jl
(bad)
push
cmp
cdq
stos
mov
xchg
dec
retf
dec
mov
push
aas
mov
nop
pushf
sub
iret
xlat
and
xor
jns
cli
fiadd
xchg
add
pusha
and
fimul
and
jo
(bad)
gs
or
inc
ds
shl
mov
jge
icebp
jns
mov
mov
adc
cmp
jmp
sbb
loopne
jecxz
sbb
mov
pop
aaa
sub
jns
inc
jg
mov
test
lahf
xchg
or
jb
or
rcr
and
or
sbb
(bad)
loope
xlat
hlt
test
inc
enter
(bad)
ficomp
mov
ins
mov
in
and
jg
(bad)
rcl
jns
add
das
or
and
or
push
xchg
(bad)
popf
repnz
call
sbb
pop
icebp
sub
push
outs
cmps
mov
inc
in
push
rcr
xor
cld
fwait
std
xchg
mov
or
sub
cmp
in
adc
(bad)
add
les
fmul
pop
shl
(bad)
out
xchg
pop
addr16
fdiv
xor
or
inc
(bad)
lds
rcl
xchg
adc
and
test
enter
mov
rol
cs
pop
xor
push
push
or
in
call
cmc
inc
pop
sbb
(bad)
fdivp
scas
(bad)
cmp
loopne
pop
adc
xchg
mov
loope
adc
dec
sbb
push
in
inc
jne
dec
shr
or
gs
out
call
or
xor
mov
cld
xchg
out
jo
popf
ret
aas
sbb
and
arpl
xchg
sub
fimul
xchg
mov
std
scas
mov
ror
xor
ret
jb
ja
adc
xchg
(bad)
inc
pop
mov
xchg
fnstenv
and
ins
retf
(bad)
(bad)
cli
adc
pop
or
les
imul
shr
cmp
inc
adc
out
outs
mov
and
add
ins
inc
xchg
test
das
inc
(bad)
loopne
cli
dec
xor
int
xchg
sub
bound
daa
cwde
(bad)
push
and
lock
lods
ins
les
push
ds
jmp
sub
inc
pop
xchg
or
pop
js
xlat
dec
lock
push
dec
je
mov
mov
sub
push
cmps
test
fistp
sub
call
(bad)
fisub
mul
jbe
jmp
xor
push
adc
cdq
add
mov
push
cmc
int
(bad)
test
dec
movs
inc
pop
and
adc
addr16
aaa
loope
loope
imul
jbe
mov
cmp
add
out
jne
imul
mov
icebp
sbb
cmps
clc
cld
jbe
pop
and
ins
push
or
dec
dec
js
es
mov
lods
mov
rcr
mov
or
cmps
adc
sar
mov
push
xor
dec
sti
imul
mov
mov
call
mov
repz
inc
adc
lahf
jb
repz
cmp
inc
daa
fs
ss
dec
adc
and
mov
sub
add
pop
push
les
es
jg
leave
fwait
fwait
das
in
and
int
jns
mov
stos
jbe
fs
loopne
adc
xor
push
or
pusha
sbb
xchg
loop
dec
loop
pop
stos
ret
(bad)
push
xor
dec
mov
repz
movs
push
outs
xchg
mov
pop
call
and
inc
mov
pop
push
xchg
add
ds
xor
movs
add
popa
enter
arpl
shl
mov
inc
ja
pop
(bad)
fbld
push
stos
sbb
fnstcw
(bad)
mov
retf
into
and
cli
and
retf
ja
push
fwait
daa
dec
gs
int
into
retf
dec
pop
loope
sbb
ficom
mov
int3
push
lods
cs
xor
and
pop
aad
or
pop
or
push
or
xchg
stos
in
inc
fs
pop
inc
je
into
out
lds
jae
fistp
add
dec
mov
imul
shl
(bad)
icebp
std
test
jb
mov
jne
jle
xchg
hlt
fcmovb
pop
sbb
pop
lods
aas
dec
xchg
call
push
(bad)
scas
test
xlat
or
je
push
sbb
repz
shr
icebp
loop
add
pop
and
(bad)
rcr
popa
and
jecxz
sar
adc
mov
push
ret
dec
cmp
enter
push
fidivr
mov
enter
mov
jg
push
and
ficom
scas
scas
popf
sbb
inc
adc
mov
xchg
stos
or
ret
mov
and
cmps
inc
lea
dec
jmp
and
imul
test
sub
xor
out
mov
xor
idiv
out
mov
pop
dec
and
movs
lods
cmp
iret
cmps
inc
pusha
inc
hlt
sub
add
sbb
xor
cmp
(bad)
mov
cs
fsubr
fwait
jb
or
sub
sbb
stos
adc
(bad)
mov
xchg
jae
pop
dec
mov
adc
mov
jno
out
jmp
jae
adc
mov
sub
rcr
sbb
dec
(bad)
jecxz
add
fsubrp
inc
call
in
add
or
dec
enter
(bad)
or
mov
mov
out
es
add
aaa
cli
and
mov
mov
lock
lods
jmp
jb
enter
xchg
pop
dec
mov
ins
in
xor
data16
out
call
mov
xchg
fucomip
in
ror
xchg
scas
ficomp
dec
cld
jle
adc
fsubr
or
icebp
stos
mov
test
cmps
cmp
rcl
adc
inc
push
(bad)
jno
mov
push
rcr
adc
or
jmp
xor
sar
retf
es
inc
ret
fcmove
adc
add
sub
mov
addr16
test
xchg
leave
in
dec
test
xchg
aad
stos
jbe
int
lock
or
inc
adc
dec
mov
fistp
pop
cld
call
lods
int
out
jmp
xchg
ins
jae
outs
jno
mov
movs
adc
add
(bad)
push
ficomp
xor
in
add
or
pop
mov
adc
or
test
and
xlat
fcomi
mov
push
je
lea
cwde
sbb
out
xchg
push
sub
push
nop
push
ja
nop
stos
xchg
pop
ins
lea
aad
push
imul
mov
dec
(bad)
mov
mov
pop
sub
inc
xchg
aaa
mov
cli
push
mov
leave
inc
mov
mov
add
dec
fs
aas
test
xchg
(bad)
sub
mov
sub
dec
mov
lea
retf
out
sub
jecxz
sub
shl
add
sbb
jae
aas
xchg
movs
pushf
jb
dec
cmp
jb
xor
inc
popf
lods
cmp
cmp
outs
out
pop
push
ret
dec
test
push
mov
je
(bad)
adc
in
jmp
pusha
leave
sbb
xor
iret
mov
(bad)
cmp
aas
lea
xchg
inc
sahf
mov
adc
pop
repz
arpl
pop
out
dec
cmc
pop
pop
or
outs
cmps
dec
sub
imul
or
fdiv
add
xchg
mov
add
inc
xchg
mov
jne
jo
inc
and
fimul
repz
cmps
popa
rol
popf
popa
ret
mov
mov
pop
fnstenv
movs
test
mov
cmp
dec
mov
sbb
sub
xchg
jl
xchg
fs
pop
cdq
jl
imul
leave
mov
sbb
fwait
repnz
je
pop
dec
cmps
int3
xor
cmps
xchg
pop
push
mov
shl
fbstp
inc
(bad)
mov
repnz
xchg
addr16
pop
int
aad
test
repz
lods
lahf
xchg
mov
inc
mov
jo
jmp
rol
idiv
dec
cld
push
(bad)
jb
mov
mov
rol
xchg
cpuid
adc
or
out
enter
in
jo
sub
ds
cmp
sub
add
sub
mov
cdq
aas
ja
mov
fwait
jbe
mov
daa
dec
icebp
mov
mov
pop
mov
sbb
xchg
mov
and
add
mov
inc
xlat
es
jecxz
mov
mov
xchg
sub
mov
or
inc
mov
in
(bad)
lods
xor
mov
cmp
adc
mov
loope
pusha
jmp
jb
icebp
iret
or
adc
pushf
push
and
popa
icebp
call
jae
imul
and
or
jae
cdq
push
popf
(bad)
push
push
pop
mov
stc
mov
call
or
ret
add
sub
out
fadd
call
adc
xor
push
push
ins
scas
adc
icebp
arpl
inc
fsubr
dec
call
mov
or
xchg
cmps
shl
scas
or
loop
push
adc
leave
mov
add
jns
add
ins
leave
jmp
cmps
add
push
mov
sbb
xor
or
pop
iret
jnp
push
cmp
xchg
lahf
sub
dec
fcmove
xchg
and
inc
int3
pop
sbb
daa
icebp
rol
pop
ins
push
mul
sub
retf
ret
inc
mov
mov
cmp
xor
inc
sbb
xor
sbb
or
aam
das
push
scas
mov
mov
xor
add
loope
add
add
sahf
and
frstor
add
ror
dec
mov
mov
addr16
mov
add
mov
(bad)
adc
nop
dec
push
ret
jl
outs
mov
adc
pop
jae
loop
cmps
sbb
push
dec
das
xchg
lods
mov
scas
jp
daa
sbb
rcr
int3
int3
retf
fstp
sahf
cmps
xor
xchg
addr16
pusha
cmps
push
jo
mov
pop
cmp
dec
mov
scas
js
pop
nop
divps
jp
lock
cld
push
add
sbb
sbb
push
inc
jge
dec
push
push
inc
fiadd
xor
mov
loop
sub
sub
cmps
mov
nop
and
imul
arpl
jecxz
xchg
pop
pop
imul
call
test
lahf
adc
imul
loope
dec
xor
fwait
and
xchg
es
cmp
pushf
sbb
pop
xchg
iret
retf
adc
test
dec
dec
jmp
inc
iret
adc
xor
sbb
mov
pandn
xchg
mov
mov
add
hlt
mov
rcl
push
xchg
fcmovbe
sub
push
mov
dec
dec
inc
test
popa
jge
call
mov
ror
lods
and
jg
or
adc
fimul
xor
jecxz
sbb
pop
cmps
jb
xchg
fs
push
popa
popa
loopne
sbb
into
xchg
lods
cmp
dec
jns
retf
cmps
(bad)
cli
add
add
push
mov
sub
or
push
inc
sub
and
sbb
(bad)
add
or
data16
call
xchg
cmp
(bad)
into
cli
jns
dec
pop
ss
mov
mov
cmp
add
dec
jmp
js
loop
xchg
push
imul
cli
outs
es
inc
shr
sbb
sub
out
int3
cmp
out
fucomip
sbb
cmp
loop
inc
xchg
sbb
cmp
add
aam
lahf
pop
jmp
jne
movs
jno
jecxz
lock
daa
fwait
jecxz
jecxz
add
mov
(bad)
popa
dec
adc
fnstsw
dec
in
push
push
cli
aad
int3
mov
in
jge
fisubr
sub
ss
aad
xlat
xchg
jbe
and
movs
jge
out
add
push
pop
add
jae
fidivr
pop
fwait
adc
fist
jmp
sbb
push
pop
adc
addr16
sar
mov
mov
rol
cmc
cwde
(bad)
leave
imul
(bad)
movs
push
pop
ins
sti
(bad)
push
(bad)
adc
out
xchg
out
imul
fcmove
push
add
xchg
mov
retf
mov
lahf
(bad)
ss
or
cmp
stc
cli
sahf
cmp
xlat
fcmove
xlat
jae
jg
(bad)
cmps
into
mov
jl
mov
rol
inc
inc
(bad)
icebp
mov
out
ficomp
mov
dec
sub
arpl
fistp
aad
loopne
cmp
in
push
repnz
enter
jecxz
dec
fdiv
adc
add
cmc
xor
sub
int3
retf
jbe
xor
xlat
imul
push
push
jo
fisttp
push
push
xchg
inc
jno
dec
aaa
test
mov
and
add
cmp
xor
ror
mov
xchg
jle
mov
xchg
cmp
(bad)
sti
mov
mov
cli
rcr
in
or
call
push
arpl
stos
sbb
scas
into
std
out
mov
test
repnz
mov
aaa
cmp
pop
mov
ds
ins
sbb
les
sbb
sti
push
test
(bad)
pop
mov
or
sahf
rcr
(bad)
cwde
imul
push
fcom
add
cmps
ja
mov
pop
push
adc
in
pop
dec
pop
xchg
cmp
fwait
(bad)
test
gs
push
bound
js
sbb
cwde
push
lods
out
jmp
xchg
mov
enter
xor
(bad)
imul
fisub
outs
mov
aad
lds
mov
mov
test
test
push
cmps
dec
cmc
stos
scas
adc
add
mov
push
cmp
sahf
scas
movs
and
mov
pop
ret
pushf
(bad)
stos
jnp
neg
dec
sbb
mov
pushf
jbe
rcl
adc
and
addr16
sub
fwait
adc
mov
sbb
add
add
repnz
int
mov
test
stc
and
scas
cmp
adc
ss
movs
mov
(bad)
mov
mov
enter
push
cmps
fwait
test
repz
(bad)
fnstcw
sub
ds
sbb
sbb
fcmovu
push
xor
mov
scas
mov
push
mov
mov
mov
xchg
sub
or
popa
add
call
sbb
pop
cmps
jb
mov
into
mov
adc
(bad)
and
lahf
cli
cmp
xor
into
push
adc
stc
mov
es
lods
mov
mov
scas
imul
in
es
pusha
mov
lea
(bad)
dec
mov
cmp
pop
addr16
cli
add
aaa
ins
mov
pop
push
call
xchg
xchg
push
xor
xor
mov
mov
xor
stc
dec
sbb
cmp
jno
inc
mov
outs
adc
pop
push
fiadd
pop
bound
xchg
dec
call
movs
adc
rol
fstp
push
cmp
mov
or
enter
daa
cmp
jge
add
mov
jnp
pusha
or
(bad)
jmp
or
jo
add
jbe
cdq
mov
sahf
data16
lds
or
pop
test
mov
out
test
and
adc
adc
or
xchg
add
xor
cmps
icebp
adc
aas
inc
popf
mov
ret
push
pop
lahf
add
fcom
mov
dec
in
call
jns
(bad)
repz
cld
push
sbb
(bad)
aam
mov
pop
sub
ror
mov
js
dec
xlat
push
test
jno
pop
imul
test
inc
fdiv
mov
push
out
mov
and
fwait
movs
inc
inc
jo
std
xchg
or
cs
shr
pop
not
push
div
cmps
iret
jnp
sub
daa
cmp
mov
or
sub
mov
add
mov
adc
lea
fidiv
sti
xchg
jecxz
(bad)
retf
leave
addr16
jbe
adc
add
ss
or
ret
jl
dec
icebp
stc
add
mov
sub
ins
push
popf
add
lods
jecxz
xchg
test
iret
(bad)
and
cdq
sub
push
movs
dec
add
push
add
add
dec
pop
shl
xor
mov
cmp
xchg
rcl
jnp
push
test
jmp
jbe
mov
add
jno
mov
mov
adc
xchg
inc
aas
or
ins
loope
mov
out
mov
lods
xor
stos
ss
je
cli
or
cs
push
in
ja
or
xor
lods
xor
punpckldq
push
mov
dec
mov
adc
in
adc
aam
pop
popa
mov
shl
xchg
xchg
sbb
nop
and
repz
popa
lahf
jae
popa
(bad)
(bad)
push
adc
stos
push
jb
and
add
inc
mov
jnp
sbb
jo
ss
enter
inc
call
rcl
add
adc
aam
lods
(bad)
call
sbb
and
mov
push
xor
scas
int3
pop
test
ja
lods
adc
cmps
int3
aaa
ins
hlt
les
fld
adc
inc
sbb
(bad)
pushf
popf
cmp
jns
rcr
adc
jbe
lea
push
popf
fwait
push
adc
jnp
aad
imul
dec
jmp
lods
add
jns
xor
or
cli
shr
xor
ret
test
mov
xchg
and
sar
or
in
cli
push
or
fldenv
and
xchg
mov
or
nop
cs
sbb
outs
and
(bad)
enter
dec
xlat
in
sub
(bad)
mov
jbe
out
jle
adc
pop
loop
ret
adc
fistp
mov
not
les
nop
gs
ins
loopne
cmp
push
xlat
test
stos
pop
stos
push
call
fst
dec
jns
sub
push
mov
test
repnz
dec
imul
mov
sbb
mov
movs
adc
jne
ret
mov
lods
adc
imul
push
adc
fidivr
inc
dec
adc
jb
add
sub
mov
lods
mov
aaa
adc
pop
or
mov
sbb
mov
xchg
xlat
enter
neg
in
mov
jnp
and
es
test
adc
adc
pop
pop
mov
ds
movs
fiadd
call
cmps
pop
xchg
fwait
dec
fs
xchg
mov
popf
movs
imul
retf
xor
pop
cmp
stos
pop
push
(bad)
sub
lsl
jmp
xor
pop
mov
test
xor
popf
das
ret
sbb
int3
addr16
retf
dec
adc
mov
xchg
outs
test
cli
and
movs
ins
pop
fisubr
jb
cwde
or
cdq
das
out
into
ins
or
inc
or
mov
push
dec
or
lods
sti
dec
xchg
mov
adc
and
jns
add
lea
jbe
mov
sub
adc
repz
test
inc
loope
jecxz
imul
sahf
adc
sub
mov
sbb
jmp
popf
add
mov
cmc
bound
dec
cmp
sub
je
ins
add
fs
mov
xor
pop
loope
outs
fcmovbe
mov
imul
jecxz
xchg
sub
loope
and
add
sub
xchg
sbb
imul
adc
leave
pop
(bad)
jmp
jo
sub
push
enter
cmp
fld
sahf
mov
rcl
test
jne
dec
mov
pop
out
std
outs
adc
out
sbb
dec
push
int3
test
repnz
xchg
sbb
sbb
xchg
push
or
ror
sub
push
call
jmp
xor
(bad)
pusha
push
cmp
fdivrp
lahf
pop
mov
inc
into
outs
int3
xlat
mov
push
push
jmp
sbb
(bad)
mov
xchg
pop
leave
outs
shl
daa
nop
leave
ret
dec
mov
add
mov
fmul
mov
ds
pop
ret
xor
sbb
dec
adc
das
repnz
jne
int3
(bad)
lock
outs
call
dec
inc
adc
xchg
out
lahf
outs
sbb
mov
ret
lahf
lds
mov
rol
loop
push
mov
or
and
mov
inc
in
arpl
aaa
cmps
ficomp
jne
adc
and
dec
jge
into
add
out
movs
rcl
mov
push
dec
and
inc
and
nop
in
xchg
jl
je
mov
xchg
jbe
nop
lds
sbb
push
fisttp
repz
push
call
outs
pop
mov
movs
jg
adc
retf
nop
and
xor
xor
fsubrp
outs
cmp
ds
int
xchg
sti
aad
and
fnstsw
lock
addr16
jnp
test
cmps
mov
jp
int3
mov
mov
push
fwait
dec
cdq
jae
popf
fiadd
cs
lock
xchg
adc
out
icebp
xchg
push
(bad)
stc
popa
pop
or
push
inc
adc
mov
cmps
push
sbb
pop
push
mov
jmp
xchg
call
fisub
pop
dec
mov
cdq
adc
mov
dec
popa
xchg
and
(bad)
pop
xchg
add
cmps
xchg
pop
not
and
ja
es
cmp
pop
fstp
jmp
jmp
cmp
xchg
(bad)
fld
clc
inc
mov
fcom
div
lods
xor
push
inc
cmc
pop
addr16
mov
sbb
adc
js
lds
or
adc
js
sbb
in
loopne
xor
sub
cmp
mov
mul
sbb
jo
pop
daa
adc
stos
movs
mov
xor
retf
mov
jecxz
fcomp
retf
cmc
mov
mov
popf
jb
lods
les
int
xchg
(bad)
xor
je
daa
dec
ret
mov
pop
icebp
sbb
cmp
or
iret
mov
out
outs
retf
call
jne
mov
rcl
lods
cld
fwait
xor
jmp
dec
(bad)
xchg
push
pop
push
retf
lock
pushf
push
mov
push
addr16
or
je
fisubr
in
inc
aaa
lock
and
pop
test
popf
xor
dec
mov
mov
ret
mov
xor
(bad)
sti
jecxz
sbb
cwde
jl
imul
rcr
or
push
xchg
into
jle
inc
sub
sub
imul
adc
push
jg
dec
lea
mov
pusha
cmp
adc
or
popa
jmp
dec
adc
call
sbb
je
cmp
pop
pop
test
push
push
cwde
push
cli
scas
jecxz
cmp
sbb
test
push
jp
ss
lahf
lds
sbb
jmp
popf
xor
sub
out
(bad)
(bad)
loopne
movs
fsubr
call
and
jg
mov
fistp
loop
and
cmp
mov
rcr
fdiv
push
push
push
or
shl
mov
dec
and
gs
(bad)
clc
sti
ins
mov
popa
(bad)
mov
jmp
mov
push
push
in
pop
mov
and
js
test
and
xor
(bad)
pop
pushf
aas
jl
lock
mov
mov
stos
add
sbb
xchg
jl
pusha
icebp
popf
push
push
cli
add
in
jne
stos
fs
mov
jnp
pop
imul
sbb
int3
pop
jecxz
and
mov
jb
sbb
test
inc
pop
les
jge
push
and
pop
fs
fst
xor
mov
fcomp
pop
hlt
mov
mov
out
retf
in
jae
lock
and
push
outs
pop
jae
mov
movaps
pushf
pop
rcr
xchg
push
stc
jnp
das
sub
mov
push
in
out
xor
movhlps
cmovs
mov
repnz
pop
aam
push
repz
out
movs
sub
lods
das
int3
pop
xlat
inc
iret
adc
jns
pxor
sahf
cmp
push
jg
push
mov
and
jnp
sbb
pushf
jg
and
and
aam
jmp
repnz
or
mov
push
adc
lahf
fisubr
fmul
loope
xchg
sub
dec
in
loopne
pop
inc
jno
or
(bad)
push
(bad)
lea
xor
mov
(bad)
jmp
sbb
cmps
gs
dec
aaa
ficomp
xchg
out
in
cmp
mov
lods
and
into
sub
out
lods
mov
xchg
cmp
add
test
imul
fs
outs
push
clc
xor
je
cmc
(bad)
jo
loopne
lds
cmp
cdq
dec
fdiv
xchg
jb
xor
out
(bad)
(bad)
xor
mov
(bad)
jo
push
dec
add
push
ss
cmp
mov
pop
or
(bad)
pop
pop
jmp
xchg
inc
shl
jb
int
pushf
adc
mov
cmp
mov
push
jg
add
mov
scas
imul
div
adc
test
sar
pop
addr16
fiadd
dec
lea
push
push
imul
sub
add
in
adc
mov
inc
cmp
pop
mov
mov
ret
mov
inc
jmp
dec
adc
int3
adc
fst
sbb
pop
int3
add
push
push
add
pop
cmc
arpl
in
loop
mov
enter
jl
xchg
mov
leave
adc
hlt
mov
pop
je
push
dec
outs
popf
(bad)
mov
mov
int3
in
mov
xchg
or
sub
sahf
lock
dec
pop
ds
push
fs
ja
outs
mov
push
test
in
xor
and
push
mov
leave
lds
ja
icebp
mov
mov
xor
cld
out
call
dec
retf
shl
aad
push
test
je
add
cmp
push
add
pop
clc
fnstcw
test
sar
and
sbb
icebp
dec
lock
pushf
and
pop
or
cmp
jne
retf
mov
push
test
retf
sub
push
ins
jae
mov
sub
bound
stos
or
and
cwde
sar
mov
xor
rcr
loope
or
pusha
sahf
push
fnstenv
sahf
jmp
mov
adc
sub
adc
mov
repz
adc
test
fisub
sbb
push
sub
dec
fs
(bad)
fcmovbe
enter
mov
mov
lahf
loope
loope
test
stos
inc
add
iret
aaa
shl
and
xchg
xor
mov
test
dec
dec
or
add
adc
fld
pop
std
daa
add
xor
push
fnsave
mov
jnp
scas
mov
cmps
sub
stos
xor
push
mov
pushf
push
pop
push
rcl
push
repz
out
call
sub
mov
mov
es
dec
ja
inc
jp
cmp
(bad)
pop
and
push
fmul
stc
nop
pop
jmp
cs
cwde
into
mov
mov
xchg
adc
daa
pop
xchg
arpl
clc
inc
inc
xor
(bad)
pop
or
pop
out
or
sbb
and
mov
sub
es
test
scas
sbb
pushf
cmps
cwde
push
shl
dec
jbe
dec
int
pop
sub
retf
retf
xor
push
adc
lahf
fst
push
mov
hlt
ds
ins
push
out
movs
mov
dec
or
test
int
cmps
bound
pop
retf
pusha
xor
lock
add
sbb
int
repnz
call
inc
pop
push
inc
jo
xchg
js
and
xor
and
popa
sbb
std
cmps
or
push
rcr
mov
pop
push
neg
or
lea
rol
mov
jo
mov
ins
fidiv
inc
cmps
out
sahf
jmp
jbe
daa
push
cmp
lods
cmp
sbb
or
(bad)
into
mov
dec
retf
sub
das
loope
sti
(bad)
adc
lods
jge
add
test
lods
dec
fadd
push
or
movs
sbb
push
adc
or
jmp
loope
ins
je
stos
push
nop
data16
inc
mov
lods
push
inc
jl
xchg
aaa
scas
and
cld
mov
mov
clc
sahf
mov
xchg
ret
push
xor
mov
inc
jae
jno
push
ficom
and
fnstsw
(bad)
data16
mov
sbb
pop
pop
jmp
or
addr16
or
(bad)
out
add
pushf
or
ficom
int
dec
cmp
fcom
dec
mov
in
fs
mov
fistp
lds
lods
inc
inc
mov
pop
adc
mov
ret
shl
cmp
std
iret
inc
sahf
clc
fisub
and
cmp
jmp
dec
sub
imul
pusha
mov
xchg
adc
dec
pop
sub
addr16
icebp
cld
pop
addr16
sar
mov
out
sub
or
fidivr
pushf
dec
push
xchg
push
outs
ins
sbb
jo
mov
pop
xchg
and
cmp
scas
(bad)
cmps
(bad)
push
or
aam
sbb
pop
add
idiv
stos
(bad)
fucom
pop
shr
jns
out
adc
mov
sub
sti
iret
fisttp
ins
xor
xchg
or
bound
sub
push
xchg
mov
push
loope
xchg
mov
out
jb
inc
fisubr
ret
cmp
js
push
jge
sbb
sbb
xor
inc
xlat
mov
cmp
popa
inc
sti
call
scas
or
xchg
mov
(bad)
and
cmp
call
imul
push
stc
call
out
movs
out
call
or
cmp
test
das
aas
je
and
stc
rep
fcom
mov
daa
pop
push
or
cmp
pop
and
data16
out
xlat
ins
out
stc
push
xor
(bad)
fiadd
aaa
sahf
pop
es
jns
or
icebp
and
ins
mov
xchg
xor
mov
inc
aaa
pop
int
pop
xchg
pop
lea
repnz
daa
cmp
ror
mov
adc
dec
adc
cmp
xor
repnz
add
sub
scas
leave
sub
xor
adc
lds
mov
div
or
push
mov
inc
lds
pop
xor
pop
cmp
and
mov
xchg
jo
inc
movs
call
push
pushf
push
inc
jle
pop
shl
fcomp
fbstp
push
and
lds
pop
jge
mov
mov
jae
mov
sub
sti
cmps
or
aaa
adc
or
mov
xor
fisttp
stos
mov
pop
or
out
push
hlt
in
xchg
scas
or
dec
mov
outs
pop
adc
xor
cmps
xlat
jno
xchg
jb
call
or
push
jmp
jno
repnz
cmc
mov
test
jo
test
xchg
sbb
(bad)
leave
mov
test
pop
enter
add
out
inc
jg
sbb
xor
mov
rcr
pop
xor
dec
fisubr
push
push
push
and
fmul
sub
cmp
(bad)
stc
push
sbb
(bad)
retf
shl
jno
jmp
adc
add
fs
(bad)
aam
inc
or
push
inc
jns
jmp
mov
add
sbb
cld
dec
pop
aad
ret
sbb
xor
lods
xor
enter
iret
add
pop
imul
imul
mov
push
push
mov
mov
or
movs
xchg
xchg
pop
fisubr
or
stos
mov
jge
test
pop
push
lock
cmp
inc
jae
mov
popf
clc
rol
pusha
cmp
or
pop
imul
icebp
std
pop
jmp
and
pop
fnstsw
or
jmp
in
mov
mov
xor
out
jnp
fiadd
enter
test
and
shr
repz
dec
es
shl
adc
bound
in
lock
dec
sub
inc
add
jle
pop
xchg
mov
xor
arpl
xlat
ror
(bad)
mov
pop
ins
dec
(bad)
in
cmp
sbb
push
iret
in
test
loop
test
push
jb
imul
pop
pusha
cmp
ficomp
mov
loopne
push
out
cmp
icebp
cmp
adc
sub
mov
aaa
mov
outs
add
lahf
ins
dec
xchg
sub
jno
(bad)
pop
dec
xchg
mov
ret
leave
sub
mov
clc
call
shr
call
pop
pushf
jnp
dec
arpl
cmp
in
mov
xor
nop
test
or
and
adc
(bad)
sub
pop
pop
mov
mov
add
jo
shl
mov
pop
ss
call
loope
dec
inc
fwait
cwde
ret
jle
mov
adc
xor
in
ins
push
mov
xor
pop
dec
xor
push
push
bnd
stos
add
std
(bad)
jbe
pop
mov
scas
ss
popa
push
jmp
mov
mov
mov
push
xor
pop
int
mov
cmp
and
les
xor
mov
ret
or
cli
jne
mov
xor
cmp
les
ins
mov
cmp
aaa
out
mov
retf
enter
jne
xor
fs
pop
mov
sahf
mov
and
cdq
pop
cmps
aad
lock
add
sub
sub
lds
xchg
jle
push
(bad)
test
fisubr
jb
scas
cmps
out
sbb
stos
cmp
cld
aas
jnp
sbb
or
mov
retf
and
push
mov
cmc
add
bound
add
mov
test
fdiv
pop
data16
xor
push
and
sti
cmps
popa
mov
pusha
dec
(bad)
fwait
int
mov
cs
sbb
jp
stc
enter
movs
mov
ror
xchg
fisub
fwait
or
jae
mov
inc
ret
jmp
sbb
bound
mov
stos
cmc
sbb
pop
pop
clc
sbb
mov
into
iret
sbb
(bad)
jns
rcl
loope
cmc
sar
sub
mov
addr16
add
cdq
fnstcw
sbb
pop
xchg
sbb
inc
iret
leave
addr16
mov
fmulp
add
mov
sbb
mov
or
daa
cmp
cmp
xor
dec
retf
add
jnp
imul
xor
xchg
dec
in
cwde
mov
push
jmp
dec
push
add
mov
sti
pop
xor
lahf
add
ret
pusha
stc
pop
call
(bad)
push
add
jle
retf
in
enter
bound
pop
or
cld
xor
mov
shr
ins
sub
in
pop
test
pusha
and
xchg
(bad)
fcmovu
xchg
js
xchg
xor
add
jl
xchg
push
ds
inc
call
faddp
rcr
pushf
stos
jl
jg
mov
stos
cmp
xor
shr
imul
imul
outs
iret
jbe
std
aam
or
sbb
retf
ins
push
adc
cmp
cli
mov
sbb
cmp
push
data16
aam
adc
cli
movs
loope
push
sub
inc
pusha
ds
push
fsubrp
push
pusha
ror
fdiv
cs
xor
sahf
ja
outs
stos
fdiv
xor
movs
jl
jle
lock
jge
lods
jae
add
mov
mov
in
xor
xor
lock
jo
fwait
fwait
or
pop
jl
add
xchg
call
mov
mov
add
movs
sbb
jo
inc
adc
inc
call
sub
dec
sbb
fdivrp
mov
into
mov
jne
add
aam
mov
and
jg
lods
fsub
leave
cmp
xor
jne
sbb
loope
loope
lock
jns
push
mov
popf
mov
mov
mov
xchg
xor
retf
ins
clc
icebp
shl
pushw
ss
mov
mov
dec
out
push
and
fcmovnu
call
adc
call
fwait
mov
xor
outs
sbb
add
and
mov
ja
mov
mov
fld
fst
cli
or
and
int
repnz
call
pusha
sbb
xchg
mov
arpl
push
out
ds
dec
mov
lds
add
cmp
jnp
jmp
mov
stos
int
fldenv
iret
cld
ret
mov
sar
pop
xchg
es
cmp
and
(bad)
pop
xchg
jo
inc
popa
data16
push
ror
cmp
test
mov
scas
in
push
inc
xchg
ficomp
adc
pop
fistp
cmp
inc
pop
fcom
std
push
aam
or
inc
dec
add
jmp
adc
sbb
rcl
jl
sbb
nop
or
jnp
xchg
pushf
cmc
inc
xor
mov
xchg
xor
(bad)
int
push
sbb
adc
and
mov
mov
repz
imul
std
cmp
daa
retf
jb
mov
sbb
pusha
pop
stc
mov
inc
jecxz
in
ins
nop
js
mov
pushf
dec
xchg
movs
nop
cmps
outs
sub
ss
push
dec
and
cmp
retf
outs
jg
pushf
mov
sbb
inc
clc
xor
ret
push
ss
cmp
xor
das
sar
adc
add
movs
adc
and
push
jae
bound
cmp
xor
bound
sbb
aaa
dec
imul
fs
xchg
repnz
jle
leave
cmps
cmp
out
loope
aam
jle
xchg
push
aam
mov
mov
fisubr
pop
mov
adc
mov
add
jae
movs
ja
inc
rol
aad
ins
into
jp
push
cmp
(bad)
loop
idiv
jns
ret
ins
adc
jp
and
mov
lea
dec
mov
adc
pop
ds
pop
sub
adc
in
mov
lds
mov
cmp
(bad)
or
in
dec
adc
cmp
cmps
pop
cmp
mov
dec
pop
test
mov
inc
mov
xchg
je
xchg
push
out
push
test
pop
dec
cwde
cmc
xor
mov
xor
xchg
xor
test
stos
jne
jge
inc
jo
stos
and
imul
push
cmp
mov
ret
adc
into
push
mov
jp
mov
call
pop
out
out
fucom
xchg
call
mov
sub
(bad)
addr16
aam
xor
imul
mov
leave
sbb
retf
(bad)
ss
pop
push
pop
pop
jge
mov
mov
test
jmp
jle
jmp
(bad)
aas
rol
inc
out
loope
aas
popa
aam
sbb
push
xor
add
lahf
xlat
std
xchg
mov
mov
dec
movs
pop
add
pop
jne
and
movs
cmp
inc
dec
imul
(bad)
imul
stos
lods
lds
mul
jb
push
jmp
out
and
cvtps2pi
xor
sub
inc
fdivr
xor
ret
rcr
push
pop
sti
jne
pop
add
and
(bad)
(bad)
mov
pop
call
(bad)
dec
test
mov
and
jo
data16
inc
(bad)
scas
daa
mov
mov
or
xor
push
add
sahf
sub
inc
out
jno
jae
lods
add
gs
iret
ja
and
xor
ret
ror
fs
imul
push
fisub
aas
xchg
sar
pushf
adc
and
imul
mov
jae
dec
daa
lock
cmp
icebp
xchg
(bad)
mov
cmc
imul
outs
imul
dec
scas
data16
jge
and
aas
sub
sub
cmps
frstor
add
dec
add
imul
and
mov
mov
imul
lods
pop
int
loope
mov
sbb
cmp
cmp
rdmsr
jge
fs
scas
cmp
lea
jge
sbb
out
es
stos
cs
test
imul
inc
push
pop
imul
push
cmp
inc
and
fdivr
inc
gs
ret
pop
mov
xchg
adc
inc
sub
aam
fsubp
mov
neg
adc
jmp
mov
mov
lock
or
adc
xor
mov
ror
inc
leave
sub
fsubp
pop
pushf
cmp
lahf
xchg
push
fiadd
xor
idiv
pop
inc
in
xchg
mov
sbb
cwde
scas
sub
jp
jns
jmp
div
(bad)
jbe
scas
mul
push
sbb
push
mov
pop
add
nop
je
(bad)
jo
mov
adc
fcmovnbe
pop
add
sub
sbb
jo
pop
jo
inc
xchg
adc
mov
mov
xchg
repz
outs
and
daa
icebp
jmp
adc
sbb
jo
jb
in
add
mov
cmp
out
fs
js
jae
or
(bad)
test
cmp
test
in
(bad)
sub
sub
sub
repz
push
jmp
shl
mov
or
pop
mov
cmp
cdq
in
mov
stos
or
jl
cmp
cmp
out
xor
mov
pop
xchg
icebp
das
mov
sub
mov
icebp
sahf
xchg
pop
sub
pop
push
ret
cs
test
xor
data16
lahf
fld
adc
add
js
add
push
(bad)
mov
sbb
jl
js
add
push
add
add
loopne
xchg
xchg
frstor
mov
test
or
lods
add
and
stc
mov
xor
jns
sbb
xchg
(bad)
mov
cmps
adc
jb
scas
ja
iret
mov
das
movs
adc
(bad)
out
push
fiadd
dec
test
hlt
scas
add
les
dec
xor
data16
xor
xchg
mov
or
jmp
popa
outs
xchg
rcr
fild
das
dec
(bad)
in
ins
sub
dec
jmp
cmp
xchg
dec
data16
mov
popa
cmp
loope
sbb
fdivr
xchg
dec
push
sub
call
mov
mov
(bad)
pop
(bad)
pop
xor
outs
rcr
cmps
inc
sar
rcr
jge
out
lahf
mov
ds
inc
sub
fdivr
xchg
inc
xor
or
xchg
xchg
sbb
add
daa
repz
sahf
out
(bad)
cmp
add
xor
pushf
aad
lods
addr16
imul
dec
sub
or
lea
clc
pavgw
pop
fdivr
imul
cmp
movs
icebp
ret
iret
inc
(bad)
sti
addr16
cmp
xor
pusha
std
ss
push
dec
sub
and
inc
dec
nop
cmp
mov
stos
lds
pop
mov
jl
ins
push
pop
fisubr
xchg
adc
ins
test
das
sub
into
pushf
int3
push
in
movs
inc
push
lds
fisttp
in
sub
sbb
mov
cmp
mov
stos
retf
cld
mov
sbb
and
retf
test
xlat
cmp
pushf
(bad)
adc
(bad)
aas
jl
call
jb
sbb
mov
movs
mov
xor
aad
xor
clc
add
in
xor
fimul
outs
in
jmp
sub
add
(bad)
mov
ret
pop
dec
pop
inc
mov
ds
cld
idiv
mov
xlat
pop
iret
sub
out
aaa
std
sbb
adc
pop
std
loopne
loope
cmp
jno
clc
imul
aad
push
jns
cmp
cmp
loope
imul
push
cmp
xchg
out
or
mov
pop
ja
pop
sub
lahf
push
ss
dec
pushf
dec
mov
jns
aaa
outs
push
out
mov
push
(bad)
lahf
sbb
es
int3
cld
(bad)
loopne
jbe
dec
jmp
jmp
or
retf
and
int
dec
ret
jmp
sbb
cmc
es
aas
jecxz
sub
(bad)
dec
xchg
mov
cmp
xor
sub
test
in
xchg
rol
and
aam
jl
sbb
dec
cdq
adc
hlt
loop
in
test
cmp
adc
test
in
push
(bad)
mov
ins
mov
inc
sbb
int
(bad)
arpl
(bad)
movs
push
sbb
sbb
repz
retf
xor
sub
add
mov
rcr
mov
cld
stos
push
mov
jge
inc
add
pop
pop
repz
lea
ret
mov
fiadd
cmps
icebp
sar
xchg
inc
and
pushf
sub
jg
sub
imul
add
pop
enter
pop
loopne
pop
xor
fimul
aam
sbb
mov
jl
mov
cmp
cmp
xchg
fst
nop
rcr
xor
icebp
add
test
and
or
ficomp
and
shl
repnz
sbb
and
jno
or
je
inc
fs
mov
push
fistp
dec
mov
fcomp
(bad)
addr16
mov
shl
jns
loopne
ja
ror
jmp
lahf
fdiv
xchg
(bad)
cmp
dec
sub
sbb
int
enter
movs
mov
and
jl
in
adc
ror
dec
xchg
in
push
xor
push
js
pop
movs
mul
loope
xlat
daa
and
inc
inc
xchg
cmp
mov
dec
cmps
mov
aaa
lock
enter
lock
pop
xchg
call
lahf
xchg
int3
mov
sub
sub
add
or
(bad)
pop
xlat
popf
jnp
cmc
mov
adc
cld
mov
mov
repnz
ss
cmp
pop
rcr
push
fisubr
push
ret
and
imul
or
hlt
cmp
jecxz
call
fwait
and
and
dec
dec
test
push
loope
pop
mov
pop
and
scas
aaa
mov
ss
jae
dec
xor
mov
cwde
inc
mov
adc
mov
dec
(bad)
adc
or
shl
loop
stos
sub
xchg
xlat
sub
jae
mov
pop
sbb
inc
pop
(bad)
sub
sub
shl
inc
xchg
pop
fnstsw
xchg
pop
(bad)
scas
cmp
cwde
xchg
aam
jle
or
add
inc
movs
mov
push
scas
pop
jo
cdq
clc
test
dec
les
or
adc
xchg
jecxz
enter
(bad)
outs
mov
mov
lods
dec
xchg
cwde
jnp
push
dec
hlt
fcmovb
js
clc
es
lahf
call
mov
repz
pusha
and
add
cmps
popf
arpl
xor
add
pop
dec
jo
stos
dec
inc
hlt
dec
movs
lods
cmps
shl
jns
jmp
movs
cmps
add
fcmovbe
inc
movs
out
das
mov
ret
pop
inc
or
cmp
idiv
xchg
xor
mov
jmp
pop
mov
fbstp
add
xchg
sbb
pusha
in
nop
mov
push
popf
int
xchg
cmps
or
adc
ins
shl
xchg
sbb
les
test
add
mov
pop
mov
(bad)
mov
add
push
xor
mov
ins
inc
(bad)
int
shr
call
data16
jle
mov
into
fwait
dec
scas
lahf
lods
add
movs
mov
pop
in
sahf
retf
xchg
xchg
shl
add
mov
jae
mov
popf
sub
or
sti
add
loop
cmp
push
jg
mov
cmp
cmp
(bad)
push
cmp
xchg
(bad)
rcr
push
mov
lock
dec
mov
cmp
mov
adc
shl
and
jmp
repz
cmp
loop
scas
jae
cmp
jo
lds
pushf
xor
jl
das
stos
sar
add
stos
fcomip
inc
je
inc
scas
dec
repz
adc
stos
or
pop
lds
xchg
mov
sbb
popa
repnz
jge
fld
jge
icebp
aad
int3
gs
sti
push
mov
pop
scas
xchg
xor
cs
and
jb
xor
mov
or
scas
xor
push
loop
fld
mov
popf
int3
leave
call
int
or
sahf
ds
xchg
inc
stos
rcl
pop
out
sbb
mov
fmul
nop
push
xchg
pop
jmp
push
ret
cmp
mov
repnz
rcl
loop
and
fisubr
xchg
push
clc
dec
mov
sub
(bad)
fwait
lahf
mov
cmc
and
iret
cld
call
test
mov
mov
hlt
inc
adc
ror
in
lds
jecxz
pop
xor
ins
shl
repz
xchg
in
pop
arpl
sub
jl
mov
mov
inc
sub
inc
je
xchg
dec
cwde
fiadd
scas
bound
std
jp
fild
lods
add
inc
js
mov
(bad)
mov
or
add
and
adc
sub
in
les
retf
and
sub
jns
sar
add
push
cld
js
jle
inc
mov
pop
and
clc
or
mov
test
iret
ror
bound
dec
mov
aaa
mov
xchg
inc
sub
icebp
mov
adc
mov
mov
add
adc
popa
jno
fist
ss
lea
push
mov
mov
repnz
cmp
xchg
jp
cmp
repnz
sbb
xchg
(bad)
ja
dec
out
ss
sti
inc
cmc
jg
data16
and
cmc
mov
jl
dec
out
inc
jns
fnstcw
movs
std
enter
adc
(bad)
xchg
xchg
xor
retf
shr
lea
adc
fwait
push
push
popa
xchg
mov
mov
enter
in
add
(bad)
sti
jmp
cmp
cs
(bad)
inc
push
dec
adc
test
mov
test
sbb
scas
mov
mov
outs
aam
mov
inc
test
mov
push
jecxz
lahf
pop
(bad)
xor
push
into
bound
in
mov
out
xchg
mov
xchg
bound
fild
inc
push
mov
inc
(bad)
mov
push
ret
mov
xlat
nop
mov
imul
out
pop
fs
mov
xor
push
push
xor
ds
cmp
sub
or
cli
(bad)
mov
mov
dec
jge
adc
cmc
jg
idiv
in
dec
jb
aad
dec
gs
ins
pop
mov
sub
cmp
mov
mov
push
repz
js
mov
pop
xlat
and
daa
xchg
inc
rcl
pop
ja
ret
or
jno
and
lods
fwait
cmc
jbe
push
ins
mov
xchg
push
fiadd
out
xlat
outs
inc
inc
mov
fstp
pop
hlt
mov
mov
(bad)
mov
xchg
out
jmp
scas
bt
aad
xchg
mov
pop
mov
(bad)
add
enter
fldln2
pop
pusha
pop
stos
fsubr
and
retf
push
test
shl
or
mov
(bad)
test
popa
cs
mov
ror
aam
jb
mov
neg
dec
push
shl
jne
sub
stos
cmp
mov
or
daa
inc
pop
xchg
pop
inc
push
mov
ss
and
into
icebp
or
jmp
mov
bound
loope
lea
jmp
loope
push
jo
sub
jo
arpl
mov
fistp
mov
xchg
sbb
int
pusha
jbe
cmps
arpl
je
add
aad
mov
aas
fisub
pop
jle
ss
xchg
retf
mov
jmp
leave
lahf
jnp
test
fwait
js
push
pop
jb
and
out
cmps
cs
enter
inc
movs
stos
dec
shr
out
pop
inc
(bad)
jg
popa
imul
aad
or
dec
ror
jle
repz
ja
or
stos
repnz
or
xchg
or
or
push
xchg
sub
test
xchg
cli
pop
add
sbb
pop
and
sub
mov
push
sub
not
push
pop
and
sbb
je
cmp
mov
mov
fstp
(bad)
mov
lock
xchg
pop
add
test
jmp
in
ins
ret
repnz
pop
ds
imul
and
stos
adc
cmp
push
pop
fisttp
jge
std
jg
les
adc
cmp
fidiv
in
add
retf
mov
cmp
repnz
(bad)
cwde
imul
xchg
inc
jnp
sub
cdq
xchg
loop
xchg
pop
add
sub
cmp
or
add
and
push
adc
jb
test
inc
jae
jmp
test
ret
xchg
(bad)
in
repz
lahf
ds
cld
into
sub
add
int3
push
and
retf
out
xchg
push
jne
fwait
rcr
sbb
sub
test
in
int3
dec
xchg
add
lahf
jns
push
mov
test
push
pop
in
(bad)
shr
mov
and
adc
mov
stos
sar
jg
fstp
and
hlt
dec
sub
movs
mov
outs
retf
loop
out
pop
jo
loope
and
(bad)
xchg
mov
mov
(bad)
lahf
repz
retf
sbb
pop
and
bound
in
pop
pop
inc
add
jmp
out
fs
inc
loopne
test
in
div
mov
cwde
test
and
push
adc
addr16
shr
sahf
out
jg
mov
shr
jp
movs
inc
mov
sub
xchg
xchg
mov
data16
adc
cmp
lea
dec
rcl
shl
hlt
and
mov
mov
cmp
jge
stos
ss
mov
fpatan
lahf
and
ss
icebp
push
pushf
sub
jecxz
cmp
adc
push
addr16
adc
mov
xchg
mov
push
ret
mov
not
sbb
mov
mov
ss
out
xchg
lods
adc
push
pop
inc
jb
rol
mov
or
jns
arpl
ror
mov
pop
adc
and
adc
lea
jecxz
jae
ins
(bad)
mov
sub
jg
jo
lods
movs
push
gs
jnp
out
xchg
sub
mov
lods
push
add
mov
pushw
xor
pushf
call
or
inc
sub
mov
mov
and
lahf
leave
imul
retf
jmp
mov
(bad)
hlt
loopne
jne
cmps
(bad)
rcl
das
std
(bad)
out
adc
jo
push
imul
inc
std
cmps
fsub
(bad)
stos
jg
dec
xchg
adc
leave
int
mov
nop
adc
pushf
adc
jl
in
adc
xor
fisttp
sub
jbe
mov
arpl
cmps
push
out
shr
rol
(bad)
cmp
pushf
shl
adc
enter
(bad)
jmp
dec
ja
pop
pusha
dec
(bad)
mov
test
cmp
mov
or
test
lahf
mov
fsubr
sub
rcl
ret
xor
js
cmc
dec
xlat
xchg
pop
movs
add
and
test
lahf
es
adc
ds
stos
push
shl
mov
xchg
in
push
xor
arpl
cmp
pop
mov
div
xchg
cwde
inc
xchg
call
pop
in
fst
or
les
call
sbb
pop
cmp
sbb
inc
push
jae
sub
push
add
in
push
mov
das
adc
inc
dec
mov
xchg
arpl
dec
mov
lods
jmp
fdivr
sahf
or
addr16
(bad)
cmp
ror
hlt
and
xchg
sbb
mov
or
or
sbb
push
xor
cmc
cwde
dec
pusha
jecxz
dec
(bad)
jmp
in
(bad)
repz
mov
cmp
pop
xchg
sub
push
(bad)
sti
pusha
sbb
icebp
cmp
pop
cmp
inc
ror
frstor
sbb
jg
dec
mov
sub
jmp
sub
rol
push
int
mov
cwde
scas
or
add
mov
movs
push
add
mov
test
push
mov
jnp
imul
imul
mov
xlat
xchg
mov
push
xchg
mov
jmp
xor
in
add
mov
add
xchg
aaa
jmp
popa
dec
in
sbb
pushf
pop
jns
hlt
add
in
test
dec
cmp
mov
or
cmps
or
pop
sbb
sbb
test
mov
in
(bad)
stc
imul
loop
dec
xchg
repz
mov
hlt
dec
mov
jae
inc
ins
hlt
sti
inc
and
rcl
imul
xchg
or
cli
xor
xchg
repz
mov
and
in
xor
test
cmps
jmp
outs
add
fucomp
movs
cs
inc
retf
jg
xor
xchg
rol
ins
mov
out
dec
sub
mov
xlat
adc
in
mov
add
fimul
lahf
fsub
xchg
jne
addr16
enter
cmps
sub
fldcw
push
cli
hlt
mov
sbb
cmp
repnz
(bad)
stc
(bad)
jne
mov
cmp
imul
call
jno
jg
sbb
outs
jle
and
ret
jns
(bad)
push
cmp
fadd
icebp
mov
cmps
mov
jns
hlt
fisub
ins
fs
ja
loopne
cwde
mov
in
cmp
mov
inc
jmp
(bad)
es
popf
clc
jmp
mov
push
iret
popa
(bad)
mov
inc
hlt
mov
cdq
mov
mov
xchg
mov
xor
add
push
jmp
fcmove
ins
jmp
mov
je
mov
push
jns
repz
aas
nop
out
icebp
mov
and
mov
pop
cmp
(bad)
xchg
sbb
test
loop
mov
and
repz
xchg
lea
or
pop
addr16
push
arpl
jbe
adc
sbb
lahf
hlt
popa
rcr
jbe
cs
pop
jp
das
mov
in
in
cmps
cmp
mov
in
std
and
and
fs
es
repz
jmp
das
pushf
push
push
cdq
pop
rcr
mov
enter
push
cmp
sti
sub
sbb
mov
ds
adc
in
in
mov
and
inc
test
dec
imul
cmc
ins
mov
ret
xchg
xchg
push
adc
popf
out
int3
push
je
stos
inc
dec
and
inc
js
retf
inc
adc
push
adc
sub
adc
or
jbe
sub
cdq
cmp
aaa
dec
cwde
mov
sbb
mov
mov
(bad)
and
or
ss
xchg
or
adc
add
es
inc
push
cdq
pusha
jo
adc
lods
adc
push
or
loop
dec
push
(bad)
js
jle
lock
adc
push
cmp
xchg
sbb
mov
movs
mov
pusha
xor
aam
xchg
mov
data16
mov
fdivr
jle
ja
jb
pop
dec
mov
and
jnp
pop
sti
jmp
or
pop
pop
pop
shr
fld
fcomp
in
mov
mov
pop
out
push
pop
aaa
ins
stos
gs
les
fild
jge
ret
mov
int
inc
movs
pop
cmp
xor
not
cmp
cmp
hlt
sub
add
add
(bad)
repnz
add
repnz
fldcw
add
loope
shl
cld
sbb
retf
mov
retf
pusha
outs
std
icebp
iret
or
test
cdq
jb
add
cli
mov
fmul
sahf
movs
(bad)
mov
ffree
lock
push
sbb
dec
bnd
or
add
mov
add
jmp
(bad)
push
pop
ror
mov
imul
push
dec
push
add
dec
pop
jns
jp
ret
repnz
jle
cmp
loop
xor
add
je
es
adc
dec
dec
push
pop
ja
push
das
push
jecxz
addr16
push
dec
sub
aaa
mov
push
mov
cli
int
mov
data16
mov
jbe
or
fsub
ss
repnz
or
push
cmp
push
cmp
nop
aam
aaa
xacquire
xor
mov
fsub
mov
mov
xor
mov
cmp
in
xor
inc
pusha
in
ja
and
or
xchg
enter
push
sti
mov
pop
cmp
jmp
push
mov
scas
(bad)
fsubr
fistp
pop
mov
xor
xor
movs
and
shl
mov
call
aaa
repz
mov
imul
ja
push
mov
xor
js
mov
test
pop
xchg
sub
sbb
pop
inc
stos
mov
pop
sub
or
dec
dec
mov
test
xor
jp
sub
jb
outs
cli
dec
ficom
imul
jbe
mov
fidivr
pop
loope
push
test
and
mov
inc
cs
adc
sub
mov
addr16
pop
adc
out
arpl
add
call
popa
int3
mov
sub
xchg
cmps
aam
jg
push
mov
dec
mov
ret
xor
cmp
fs
jle
fadd
loop
in
jecxz
mov
mov
sub
popa
jne
jo
adc
stc
jno
clc
mov
leave
pop
ds
mov
jne
bound
pop
add
xchg
pop
rcr
push
inc
loope
push
mov
test
xchg
ret
inc
mov
or
mov
cmp
fdiv
ret
dec
pop
call
ins
in
add
dec
or
add
adc
(bad)
cdq
pop
add
movs
pop
out
jecxz
daa
adc
movs
jp
sti
mov
(bad)
mov
std
pushf
sbb
dec
shl
fs
dec
(bad)
pusha
leave
sbb
sahf
fsubr
push
aad
call
sub
clc
int
xor
in
sub
jbe
push
mov
clc
mov
rcl
mov
rcr
lods
dec
dec
sub
pop
aam
(bad)
mov
pop
(bad)
xor
ret
and
mov
sti
and
xlat
mov
sar
adc
sahf
dec
ret
test
out
mov
mov
mov
sub
into
(bad)
xchg
(bad)
aas
jo
xor
mov
xor
pop
cmp
sbb
mov
mov
pop
mov
gs
jmp
inc
inc
cmp
in
adc
outs
jge
pop
push
inc
or
test
ds
frstor
pusha
dec
pop
(bad)
out
push
ins
jecxz
aas
jle
mov
sti
mov
fsub
imul
data16
shufps
mov
data16
cmps
push
xchg
jno
(bad)
jno
adc
adc
icebp
jmp
test
push
scas
into
fst
and
ds
mov
mov
adc
mov
push
jmp
retf
fisttp
pop
out
nop
test
(bad)
jae
stos
mov
sub
mov
int
fsubp
jno
inc
les
(bad)
pop
sub
test
or
cmp
mov
sub
cmc
jo
lahf
inc
sti
repz
xchg
push
push
add
xor
jno
lea
hlt
mov
cmp
rol
sbb
cmp
push
adc
pop
outs
int
mov
enter
cmp
sub
lock
int
sar
fisubr
icebp
lds
and
call
leave
cli
cwde
sub
(bad)
xor
xchg
test
push
sub
sub
lods
mov
mov
push
rol
sahf
aaa
call
or
mov
mov
mov
or
mov
adc
jnp
sbb
mov
movs
adc
test
dec
add
xchg
neg
out
mov
inc
or
arpl
iret
iret
call
mov
mov
xchg
pop
nop
xor
int
add
adc
loopne
sub
stos
retf
mov
ds
ins
mov
js
and
arpl
inc
movs
cmp
lods
inc
xchg
(bad)
jmp
push
sbb
(bad)
int3
int
and
pop
push
cmp
jne
xlat
xchg
push
xor
out
sub
mov
retf
hlt
mov
imul
pop
cmps
(bad)
(bad)
inc
test
sbb
repz
xor
movs
dec
int
mov
cmp
frstpm(287
ficom
in
icebp
dec
nop
es
rol
cmp
jmp
push
out
es
dec
or
jmp
pushf
jne
in
outs
push
fcmove
and
cld
or
aas
fsub
xlat
cmp
cdq
xor
fiadd
fldenv
scas
inc
sbb
jo
sub
call
xor
xor
out
pop
or
jmp
push
sahf
iret
jecxz
adc
mov
clc
adc
cli
fisttp
ror
adc
cmps
add
rol
pop
dec
pop
addr16
mov
sbb
mov
add
mov
mov
lahf
in
loopne
adc
mov
xchg
into
mov
ins
js
fisub
push
sahf
pop
shl
popf
cs
rol
cmp
jb
inc
mul
(bad)
dec
mov
cmps
ror
push
add
pop
ret
mov
gs
add
nop
loope
sbb
and
xchg
xor
jge
lahf
test
int
cdq
stc
mov
ret
jbe
dec
xor
xchg
or
fcomp
rcl
clc
pop
mov
adc
js
test
bound
bound
jl
jmp
mov
scas
xchg
dec
mov
in
cli
and
xchg
fsubr
mov
fbstp
dec
shr
das
mov
pop
mov
arpl
sbb
cmc
ret
sbb
inc
das
imul
jmp
and
mov
mov
mov
sbb
jnp
fstp
and
jl
adc
div
adc
(bad)
retf
dec
lods
rcl
adc
jecxz
repnz
cs
or
or
fistp
mov
jge
dec
or
nop
xor
push
fcom
stos
(bad)
ins
sbb
inc
outs
xchg
jg
mov
xor
daa
lods
mov
pop
add
jle
ds
pop
cdq
ret
xor
in
mov
add
hlt
and
push
mov
push
mov
fst
loopne
lods
mov
adc
or
jle
cmp
repnz
add
adc
sub
add
xchg
adc
gs
jle
mov
fwait
repz
xchg
fs
push
push
fs
sbb
loop
jne
sub
xchg
loope
daa
mov
add
jnp
sub
out
pop
mov
inc
sti
imul
push
sub
mov
je
mov
cli
jg
push
arpl
out
or
stos
push
mov
adc
fwait
xor
lock
ss
or
pop
ja
dec
(bad)
daa
sar
test
(bad)
outs
stos
call
xchg
rcr
mov
sub
repnz
ds
xlat
ins
fwait
and
jmp
mov
jbe
int3
inc
mov
push
and
sub
or
push
dec
jo
cmp
dec
adc
jecxz
or
xchg
or
pop
sbb
lods
cmp
ficom
outs
mov
add
popa
or
movs
cmp
(bad)
iret
mov
xchg
sub
inc
pusha
shl
mov
mov
test
sub
dec
loop
jae
push
imul
jp
and
gs
loope
cli
sub
add
stos
push
shl
cmp
loope
call
cli
lock
sbb
inc
push
arpl
retf
addr16
pop
je
xchg
lahf
inc
enter
(bad)
out
in
jns
call
jecxz
add
sbb
in
rol
push
xor
cmp
lahf
add
neg
mov
rcl
push
adc
inc
jns
iret
imul
out
sbb
cmps
sbb
cmp
dec
outs
out
lods
div
popa
cmp
mov
inc
jnp
outs
movs
and
sbb
sub
pop
add
outs
or
call
inc
jge
mov
inc
call
mov
int
xor
and
pop
dec
data16
aam
ret
sbb
lods
and
push
(bad)
xchg
jae
add
fnsave
add
and
stos
jmp
sub
xor
dec
mov
repz
pusha
retf
sbb
jecxz
cld
cmovns
gs
mov
or
cmp
add
mov
ja
cmc
ins
iret
repnz
cwde
push
and
sti
adc
sub
aas
add
push
shr
or
pop
fild
sbb
push
jae
pop
into
xchg
test
es
inc
loopne
dec
das
enter
ss
fisttp
or
add
(bad)
stc
ficomp
loop
and
jmp
ins
ja
sbb
or
pop
inc
movs
popf
xchg
push
push
mov
xchg
or
sbb
stc
imul
test
mov
movs
pop
ins
pusha
xor
dec
mov
sub
jge
push
mov
aam
adc
lods
ror
sbb
aam
and
jmp
idiv
cmps
mov
cmp
je
out
shl
cmp
jle
js
and
xchg
push
add
(bad)
xchg
ret
jmp
iret
ins
lock
add
push
xchg
sub
scas
lods
rcl
inc
dec
movs
mov
add
mov
icebp
imul
test
lods
cld
mov
dec
adc
(bad)
rcl
pop
mov
push
pop
dec
inc
push
cwde
and
xlat
fwait
xchg
pop
imul
jmp
inc
mov
sub
push
arpl
ja
popa
and
jl
test
xchg
jle
arpl
jge
sbb
xchg
fstp
dec
aad
add
jmp
shl
push
rcr
aaa
dec
scas
xchg
lds
sub
fdiv
mov
mov
(bad)
mov
xchg
repnz
(bad)
adc
inc
ja
fmul
fist
and
idiv
jp
adc
(bad)
or
sbb
jbe
rcr
sub
pop
sbb
ror
mov
mov
cmc
jge
pop
aaa
pop
fidiv
xor
data16
cmc
dec
mov
dec
inc
int3
jmp
sbb
mov
mov
lock
add
mov
sbb
(bad)
addr16
push
scas
jno
jno
jnp
sub
jmp
std
enter
ss
imul
push
nop
and
popf
or
pop
(bad)
in
fisttp
push
pop
xchg
and
or
dec
cmp
or
pusha
out
pop
lods
push
dec
scas
mov
cld
inc
xor
sub
push
sub
enter
jnp
in
sbb
inc
out
mov
jo
fstp
int
and
mov
add
rcr
add
add
mov
mov
mov
or
add
xor
popa
mov
adc
jne
in
add
(bad)
ficom
adc
lods
outs
fidivr
jb
icebp
pop
push
adc
dec
push
imul
sbb
mov
lods
js
mov
sar
pop
mov
rol
add
xchg
pushf
sub
out
mov
xchg
add
dec
lods
test
pushf
dec
sub
scas
sbb
push
or
dec
enter
pop
or
mov
fxam
shr
bound
push
stc
aas
sbb
xchg
loope
xlat
push
aaa
leave
jbe
jo
ins
rol
xor
mov
mov
cmps
xor
loopne
xchg
and
jp
xchg
adc
jg
pop
test
test
(bad)
or
and
outs
retf
xchg
js
or
lahf
push
inc
int3
mov
sbb
cmp
mov
mov
xor
sbb
xchg
aad
sub
xor
xchg
mov
ret
cmc
cmp
xchg
push
test
out
xor
and
sbb
sahf
loope
push
call
ja
cmp
outs
sbb
data16
jle
pop
pop
aam
mov
jbe
mov
cwde
sar
daa
adc
loope
pop
cwde
(bad)
jae
cmps
mov
sbb
punpckhwd
retf
jno
mov
fs
lea
aam
cmps
and
inc
lock
and
inc
inc
scas
jmp
jge
jno
stc
xor
cld
sti
je
imul
pop
fsubr
test
sbb
loop
xlat
test
add
add
mov
xor
dec
mov
test
xchg
pop
jl
xchg
xchg
sti
data16
cli
dec
shl
test
mov
or
aad
adc
cmps
es
xchg
mov
aas
cwde
repz
jae
retf
pop
push
mov
lock
repz
iret
push
cmp
xchg
or
xchg
jl
and
add
lock
cdq
imul
pop
push
cmps
ins
cli
sbb
jmp
jecxz
addr16
adc
outs
cmp
dec
js
cmp
ins
out
pop
pop
inc
cmp
jns
stos
imul
mov
ja
sub
int3
push
mov
icebp
out
imul
mov
sbb
arpl
cdq
pusha
aaa
repnz
push
into
xchg
cdq
shl
jo
push
dec
neg
mov
or
jecxz
and
addr16
pushf
lock
adc
pop
xchg
xor
pop
adc
out
inc
add
ja
push
retf
pop
jecxz
mov
fcmovnb
cmc
call
pop
sbb
movs
xor
jb
scas
sub
pop
rcl
jo
sbb
jge
mov
push
mov
dec
test
fadd
mov
inc
in
ins
scas
adc
imul
jmp
or
sbb
ret
psllq
fcom
inc
xchg
mov
inc
push
and
dec
sub
cmps
mov
pop
cwde
xor
and
cmp
pop
cmps
xor
mov
(bad)
sbb
addr16
shr
add
inc
loopne
adc
mov
fld
out
push
ret
mov
(bad)
mov
push
in
bound
mov
cmp
cwde
fwait
loopne
hlt
fbld
aad
and
daa
int3
js
cwde
in
fsubr
or
hlt
clc
popf
les
icebp
stos
(bad)
jb
rol
or
add
fild
retf
icebp
in
sbb
xor
push
inc
fwait
sub
push
test
xor
or
out
sahf
aaa
jl
xchg
fisub
inc
pop
xchg
push
shl
cld
jbe
or
mov
sbb
stos
mov
aad
movs
std
ret
xor
std
sub
and
adc
cmp
in
xor
or
scas
xchg
repz
movs
jne
adc
jbe
sar
add
ins
sbb
in
cli
mov
xor
xor
add
add
ret
add
sahf
cs
cmp
push
mov
dec
cmp
jle
or
add
es
fisub
(bad)
arpl
jo
test
dec
je
and
sahf
push
fistp
das
pushf
mov
push
mov
mov
ret
ret
jne
ret
xchg
and
xlat
cmps
inc
mov
xchg
and
pop
imul
nop
dec
(bad)
and
pop
mov
retf
jnp
pop
mov
mov
daa
dec
pop
push
xor
add
retf
inc
mov
ret
or
mov
mov
sar
jmp
push
je
repnz
add
xchg
popa
repz
jns
or
dec
shl
inc
sub
dec
adc
ins
adc
jg
add
out
dec
mov
(bad)
icebp
xor
and
pushf
lods
dec
jnp
repz
idiv
mov
pop
or
mov
ds
xchg
inc
adc
xchg
scas
pop
and
daa
xor
add
stos
pushf
xor
stos
push
in
push
lods
fld
ins
out
(bad)
add
imul
or
adc
test
movs
dec
(bad)
push
popf
jmp
in
test
dec
test
push
stc
fidiv
sbb
ja
pop
mov
jecxz
fisttp
pop
mov
popf
in
sti
in
rcr
mov
aaa
ins
test
add
xor
jae
push
(bad)
into
pop
cmc
mov
mov
sbb
fidivr
frstor
adc
cli
outs
int
push
lds
jae
cwde
icebp
not
ins
xlat
add
sahf
fisub
and
outs
sub
test
inc
xor
nop
daa
pop
leave
in
push
mov
sbb
mov
imul
sub
pushf
mov
cmp
jg
pmaxsw
ds
(bad)
mov
into
cmp
mov
lods
adc
ins
cmp
mov
dec
jns
into
ror
inc
int3
scas
pop
mov
and
imul
popf
xchg
dec
test
and
daa
add
mov
jo
ins
mov
sub
push
imul
int3
int
dec
push
outs
fwait
leave
mov
jmp
icebp
adc
push
or
int
cmps
ret
(bad)
sbb
jae
dec
enter
(bad)
add
inc
mov
xchg
dec
sbb
jle
dec
lods
pop
inc
adc
push
int3
ja
rcl
inc
inc
cli
mov
leave
cmp
dec
mov
mov
mov
les
cdq
inc
lods
out
or
xor
sub
ins
scas
pusha
cmps
lock
jo
xor
mov
fcomp
pop
stos
mov
dec
and
adc
js
js
inc
or
out
pop
xchg
jne
adc
add
(bad)
sub
cs
std
adc
pushf
adc
movs
cmps
sahf
jmp
add
repnz
fld
test
add
add
xor
mov
clc
out
mov
cmp
dec
aam
je
test
inc
push
repz
mov
mov
pop
in
adc
fld
sub
lods
fcmovbe
mov
pusha
push
jl
call
jg
or
sar
fistp
rol
mov
or
jmp
loopne
js
jne
icebp
stc
in
pop
mov
inc
push
icebp
mov
xor
ins
(bad)
pop
(bad)
xchg
mov
jnp
push
sub
and
mov
mov
dec
pop
test
sahf
loopne
test
push
idiv
pop
(bad)
push
(bad)
or
inc
mov
ficom
cmp
inc
arpl
push
cld
cmp
test
mov
icebp
sar
clts
xor
xor
out
les
aas
sbb
shr
mov
pop
jge
adc
ss
out
mov
pusha
mov
aas
or
jl
scas
jno
mov
push
cvtps2pi
pop
dec
inc
pop
xchg
sbb
inc
pusha
cmp
push
xor
in
cmp
cmps
(bad)
imul
fs
out
(bad)
pop
lods
mov
pusha
cmp
push
popf
push
je
(bad)
jae
cmp
outs
pop
xchg
(bad)
xchg
sub
pop
and
mov
rol
(bad)
adc
adc
out
xchg
std
xchg
jbe
data16
xor
into
imul
shl
sub
fcom
call
ficom
xor
outs
test
add
ficomp
inc
cmp
fistp
(bad)
cs
push
das
(bad)
mov
sahf
test
mov
sti
sbb
xor
cwde
shl
fisttp
jl
mov
pop
pop
inc
out
shl
sahf
adc
fs
leave
pop
jnp
(bad)
mov
mov
test
lahf
loopne
mov
cs
dec
push
or
mov
and
test
popf
fistp
cmp
stos
and
data16
add
sub
adc
(bad)
cmp
xlat
xchg
retf
cmp
loopne
add
(bad)
or
stc
mov
add
or
add
mov
or
pop
dec
and
sbb
and
int3
jle
loope
xchg
xor
xlat
jo
mov
jno
ins
dec
retf
xor
imul
mov
sbb
push
iret
adc
out
xor
xchg
cdq
xor
hlt
sti
and
cs
mov
gs
cmp
scas
lods
sub
mov
sub
and
fstp
rcl
jb
pusha
xchg
call
fbstp
sub
add
jbe
daa
mov
aad
mov
scas
jo
mov
adc
adc
stos
gs
mov
stos
and
fimul
ds
sbb
jge
aad
dec
jle
shr
das
(bad)
jecxz
out
iret
mov
enter
retf
jle
leave
push
retf
sar
xchg
(bad)
fcom
dec
outs
jecxz
pusha
ss
ret
loope
cmp
and
jl
movs
mov
fimul
dec
pop
pop
and
or
add
in
xchg
aaa
dec
inc
dec
test
inc
fiadd
movs
fld
jns
fs
imul
dec
dec
cmp
imul
xchg
sbb
mov
add
lods
fstp
jge
mov
loope
and
imul
mov
repz
mov
dec
clc
xchg
mov
sti
and
sub
jmp
dec
mov
ds
(bad)
mov
xor
push
mov
in
aaa
adc
in
(bad)
cmc
xor
test
cmps
inc
jle
pop
cs
inc
lods
std
fs
dec
test
aaa
and
cmp
int3
scas
inc
(bad)
jle
icebp
pop
push
out
mov
mov
sbb
adc
ds
xor
mov
popa
std
pusha
dec
stos
xor
cld
stos
mov
ins
push
fsubr
pop
or
sub
pop
(bad)
xchg
popa
sti
push
pop
adc
add
aam
cdq
aad
imul
add
adc
mov
cli
lahf
inc
adc
test
mov
cmps
fdiv
adc
xchg
jge
push
clc
pop
(bad)
fld
stos
xchg
xchg
and
pop
pop
mov
shl
jno
jns
out
mov
dec
mov
aas
or
scas
xor
hlt
pop
lea
pop
in
lock
jns
dec
popf
and
pop
(bad)
pop
and
bound
sbb
mov
leave
dec
adc
movs
and
mov
adc
out
pop
dec
aaa
loope
sub
inc
out
dec
arpl
xor
cmp
adc
js
sbb
cmp
aam
push
out
mov
mov
(bad)
imul
sub
add
dec
out
jmp
mov
movs
sub
inc
sbb
fmul
pop
mov
adc
mov
xor
inc
cmp
pusha
sar
mov
sub
dec
test
xor
pop
fs
mov
stos
add
jo
dec
mov
not
adc
ret
pop
mov
inc
test
push
pop
fsubr
inc
and
inc
cmp
add
pop
(bad)
jns
iret
fimul
sub
inc
sti
xor
cmc
jno
pop
repz
mov
imul
mov
dec
push
push
adc
in
subps
and
mov
ror
xor
jno
ds
movs
cwde
ja
fwait
adc
imul
iret
fdivr
push
mov
ins
xor
loope
jbe
imul
xor
jp
or
sub
mov
fsubr
lds
lock
pop
shl
mov
mov
(bad)
add
jbe
add
sbb
xchg
dec
js
jmp
aam
mov
in
lods
rcr
add
movs
shl
jle
jmp
mov
mov
mov
sub
dec
mov
and
xchg
scas
adc
jbe
mov
push
push
pop
(bad)
xchg
xor
in
mov
mov
mov
pop
je
lods
push
mov
sbb
rcr
dec
test
sub
lock
stc
sub
fdiv
adc
cmp
sub
popa
fdiv
int
pop
imul
in
mov
dec
call
xchg
js
pop
xor
test
loopne
and
cmp
jno
push
cwde
xor
cmc
xor
rcr
push
jne
fwait
mov
adc
inc
cmp
xchg
icebp
fstp
push
icebp
retf
adc
sub
sub
push
scas
adc
mov
xor
mov
push
lahf
mov
add
cmc
(bad)
adc
leave
test
sub
jmp
add
xor
push
ret
dec
fsub
xor
iret
or
ja
stos
push
adc
adc
outs
jp
mov
int
lahf
sbb
outs
in
frstor
movs
jns
les
bound
mov
ins
ror
jo
or
sbb
shl
push
dec
frstor
adc
mov
out
out
les
and
ins
jbe
and
or
bound
lods
inc
adc
xor
cmps
xchg
pop
in
cmp
ins
pop
jno
push
sub
sub
cmp
ffreep
push
cmp
pop
push
pop
stc
adc
out
imul
mov
add
lds
ins
daa
inc
mov
cmp
popa
retf
pop
aad
pop
xchg
push
ret
sbb
dec
call
jmp
nop
scas
div
push
imul
inc
leave
cli
jmp
lds
push
push
fcom
clc
sub
lods
cmp
push
xor
lods
sub
fistp
out
sub
mov
fs
loop
scas
ins
mov
fidiv
call
je
enter
mov
mov
in
or
pop
xor
mov
ds
adc
in
cmc
cs
inc
sti
nop
pop
xchg
sti
and
sti
jmp
jle
sub
fcomp
fs
scas
xor
aas
inc
sbb
rol
mov
xor
(bad)
mov
adc
out
push
xor
mov
pop
sub
xor
jns
and
dec
dec
out
pushw
ret
jmp
(bad)
pop
stos
jl
adc
in
loopne
cmp
mov
fidivr
scas
jmp
movs
add
mov
pushf
push
push
mov
inc
data16
jl
imul
cmp
adc
push
out
frstor
xor
popf
leave
cmc
xor
outs
cs
pop
mov
dec
pop
xor
stos
out
inc
das
addr16
mov
test
fpatan
shl
dec
cmp
mov
xchg
repz
or
inc
sbb
repnz
cmc
cdq
and
push
bound
lods
(bad)
iret
jne
xor
les
out
mov
pop
sbb
(bad)
cmp
cmp
std
jbe
(bad)
mov
stos
imul
or
inc
push
add
dec
arpl
loope
cmp
adc
mov
pop
movs
jbe
in
pop
cmp
adc
add
adc
pushf
imul
repz
jge
repnz
inc
push
ret
or
cmp
jo
arpl
mov
xor
jae
add
dec
call
stos
imul
or
clc
jb
test
sbb
fs
fsub
dec
les
popa
jbe
cwde
adc
fcmovne
daa
(bad)
mov
pop
call
mov
fcomip
inc
mov
mov
dec
fucomip
jl
inc
pop
push
mov
pop
mov
fdiv
sbb
pop
jbe
and
outs
or
inc
jle
std
and
sbb
pop
cwde
dec
or
pop
fbstp
in
cmp
dec
and
mov
popf
jecxz
loop
add
push
or
out
or
xor
or
addr16
push
push
fcmovnbe
cmps
jmp
inc
or
mov
add
enter
and
mov
and
push
mov
add
loope
xor
mov
xor
cmp
clc
lahf
dec
fwait
push
aaa
ins
xor
mov
mov
inc
pop
inc
int
pop
or
and
push
repnz
jmp
into
or
outs
or
arpl
and
in
jmp
sub
mov
pop
cmps
add
lahf
imul
sbb
add
push
xor
fst
cs
in
ins
xlat
sbb
inc
int3
or
dec
sbb
int
sub
jae
int
inc
sub
call
xchg
mov
ficomp
out
fnsave
pop
and
sbb
and
(bad)
retf
sub
or
sbb
nop
sar
sbb
loop
in
daa
sar
imul
hlt
pop
inc
popf
mov
sbb
cmp
xor
stos
and
and
cld
lods
popf
in
into
mov
push
jge
sbb
mov
mov
sub
jmp
jmp
add
out
rol
out
pop
jae
lods
je
or
ret
fild
pop
push
not
fst
stc
aam
jmp
mov
es
xor
mov
mov
add
mov
add
cld
pop
outs
pop
daa
pop
or
adc
adc
sar
push
fistp
rcr
xor
jle
stc
loopne
shl
cmps
sub
lahf
mov
pop
and
xchg
sub
mov
sbb
mov
push
mov
or
ret
adc
jg
mov
test
fs
dec
push
mov
(bad)
fcmovb
and
mov
je
enter
xor
xlat
add
xchg
jno
adc
ins
xchg
dec
xor
push
movs
aam
and
jecxz
outs
mov
loop
test
shl
call
adc
or
pop
jns
cmc
sub
adc
hlt
jno
push
pop
call
mov
jae
push
mov
push
xor
adc
call
aaa
and
pop
mov
aad
loope
mov
mov
xchg
and
imul
mov
rol
xlat
inc
addr16
sub
outs
mov
rcl
adc
aad
pop
inc
aad
jle
repz
cmps
adc
mov
das
xlat
inc
lea
test
les
sbb
mov
test
push
sbb
mov
test
bound
retf
pop
(bad)
aaa
mov
sbb
adc
adc
fs
mov
fld
xor
jmp
stos
inc
fwait
stos
or
ror
ja
lahf
icebp
mov
call
xchg
sbb
pop
(bad)
popf
cli
(bad)
jecxz
push
das
cmp
out
and
sbb
push
outs
jno
(bad)
mov
pop
cmp
popf
out
inc
mov
fs
adc
inc
mov
mov
fucomi
mov
lods
or
lock
in
sahf
add
pop
cmp
int
add
ficom
(bad)
jmp
push
sbb
sbb
ficom
pop
mov
or
pop
in
mov
adc
repnz
sar
fsubr
fdiv
or
lahf
sbb
dec
jmp
xlat
sub
mov
sub
cmps
lods
out
retf
int3
mov
adc
in
dec
test
push
pop
cmc
out
xor
in
adc
mov
mov
ins
sbb
mov
pop
mov
cmp
xor
mov
mov
inc
push
in
add
test
push
sub
mov
adc
xor
rcl
jmp
rcr
inc
push
fnstcw
mov
and
and
test
(bad)
retf
call
pop
jl
pop
fsubr
mov
clc
(bad)
sub
xor
lea
ds
fmul
aaa
and
ds
loop
cmp
movs
iret
les
or
retf
scas
jo
sbb
push
cmp
test
xchg
jmp
imul
icebp
pop
mov
adc
mov
and
sar
xchg
jo
xchg
ins
out
push
xchg
sbb
sbb
inc
push
psubusw
jmp
outs
mov
xchg
mov
adc
jle
leave
cmps
add
aaa
jp
stc
in
push
dec
push
adc
mov
push
in
or
add
addr16
xor
mov
inc
sbb
ins
dec
popf
inc
adc
das
jecxz
icebp
mov
or
movs
test
fidiv
jnp
sub
inc
loop
int3
pop
jmp
inc
mov
call
repnz
(bad)
push
sbb
imul
dec
lods
xchg
mov
je
adc
lock
mov
mov
cmp
dec
(bad)
call
pop
xor
mov
test
push
dec
daa
fcmovbe
mul
dec
scas
(bad)
nop
mov
or
xor
aad
or
and
add
xchg
cmp
mov
jns
pop
cmp
mov
push
adc
fimul
sub
cmp
jmp
outs
(bad)
ret
jg
in
cmc
sub
push
sub
cmp
leave
mov
out
loop
adc
nop
add
retf
dec
xchg
add
and
jb
mov
dec
mov
add
mov
aas
xchg
es
dec
jmp
add
jae
xor
mov
aas
jmp
xor
fbstp
scas
mov
mov
push
pop
repnz
(bad)
push
retf
idiv
push
ja
jmp
fmul
ret
pop
es
in
pop
pop
mov
mov
cwde
push
xchg
jmp
inc
cmp
dec
pop
in
mov
sub
adc
push
mov
or
xchg
adc
sbb
push
ds
xchg
mov
inc
adc
call
adc
dec
adc
or
lods
fwait
cs
cmc
daa
cwde
cld
add
fisubr
das
lea
mov
out
or
popa
cld
ficom
neg
jp
jl
push
xlat
ins
inc
sahf
xchg
daa
clc
xlat
pop
das
push
sbb
cdq
mov
push
mov
cli
inc
mov
add
push
bound
je
cwde
int3
mov
pop
and
dec
dec
xor
cmp
push
jmp
test
ja
or
xchg
ret
xor
inc
mov
jae
sahf
jle
jo
sbb
dec
mov
jmp
(bad)
mov
lock
push
(bad)
and
in
mov
popa
ja
mov
and
push
pop
fadd
in
mov
fbstp
mov
cli
loope
pop
loope
sbb
pop
fcomp
jle
mov
inc
jno
xchg
dec
adc
cwde
pusha
and
adc
inc
lahf
sub
adc
xor
call
push
mov
xor
mov
sub
outs
inc
push
xor
xor
and
mov
push
dec
(bad)
rcr
repz
jle
xchg
ja
lahf
sbb
mov
dec
(bad)
movs
fld
mov
not
sub
fcom
call
repnz
xchg
mov
add
cld
push
xchg
in
cmp
push
sbb
inc
mov
dec
ds
fnstsw
loop
xchg
adc
dec
push
je
in
arpl
push
mov
imul
lods
inc
mov
out
push
pop
xor
es
mov
pop
mov
das
sub
sub
mov
(bad)
pop
aad
jmp
scas
jle
(bad)
or
std
aas
outs
xchg
xor
mov
test
cwde
mov
inc
sub
cmc
sbb
pop
mov
popa
dec
div
arpl
pop
pop
iret
fsub
jmp
mov
in
jge
ror
pop
cs
xchg
pop
out
shl
pop
inc
aam
pop
xlat
and
mov
mov
mov
push
retf
or
outs
rcr
stc
int3
int
mov
dec
(bad)
imul
shl
push
das
(bad)
cmps
aaa
xlat
push
out
adc
mov
jl
adc
aaa
ret
les
xor
inc
cmp
push
mov
and
fstp
movs
pushf
push
mov
lods
das
adc
xor
mov
push
push
sbb
sub
inc
idiv
pop
cld
pop
fild
mov
jl
xchg
mov
cmp
push
scas
lahf
adc
ret
(bad)
mov
pop
sub
retf
jbe
mov
jg
sbb
in
sbb
test
in
outs
mov
or
and
and
sbb
push
in
popa
sbb
ret
(bad)
mov
(bad)
pushf
scas
out
int
pop
repnz
jp
xchg
out
sub
lahf
inc
jg
fs
jmp
push
sti
mov
add
nop
push
(bad)
adc
or
pushf
cmp
cwde
loope
cld
repnz
cmp
loope
stos
and
leave
mov
jg
iret
add
mov
aam
sahf
jle
sti
int
sbb
mov
je
pop
jae
sti
sbb
push
fcomp
cmps
mov
sbb
adc
sub
ja
pop
std
push
leave
pushf
inc
jecxz
dec
cmp
mov
in
inc
loop
xor
mov
stc
push
out
cmp
dec
xchg
clc
pop
cmp
cdq
mov
or
rol
cmp
out
or
add
mov
adc
(bad)
jbe
mov
add
daa
gs
fld
movs
xlat
and
xchg
test
icebp
stos
mov
jg
(bad)
into
mov
ss
jae
rol
pop
mov
mov
retf
cmp
adc
cmps
ret
stc
jp
jb
xchg
in
daa
pop
ror
dec
push
sub
and
call
icebp
jns
stos
sub
jecxz
and
lods
mov
(bad)
jo
lods
cs
cmp
cmc
pop
push
popa
dec
sub
mov
sbb
pop
xlat
clc
lock
sbb
xchg
fimul
pop
mov
and
cmps
jle
add
dec
mov
jns
jg
push
and
push
mov
jp
push
add
aam
nop
outs
out
mov
push
test
popf
jg
mov
add
(bad)
pop
sub
mov
mov
push
xlat
inc
loope
adc
push
ins
dec
pop
lahf
jne
add
ins
or
repz
test
inc
mov
jo
mov
nop
in
in
stos
dec
lods
cmp
dec
jne
dec
fwait
mov
or
xchg
rcl
inc
in
sbb
or
in
mov
adc
inc
fyl2x
xchg
dec
fld
xor
xchg
sbb
pop
dec
jmp
sbb
xor
jbe
or
dec
add
jae
data16
push
push
(bad)
aaa
imul
dec
mov
fbstp
mov
add
cld
fst
cmp
cmps
scas
push
cwde
jecxz
test
(bad)
or
fld
mov
xlat
mov
outs
add
test
out
and
or
add
mov
push
dec
loop
aaa
sbb
cmp
ins
out
js
xchg
inc
mov
jmp
adc
call
ret
nop
dec
and
dec
sti
jb
gs
pop
mov
push
push
and
jg
fnstsw
adc
mov
or
xchg
pop
cmp
sub
mov
dec
jmp
add
mov
mov
fs
pop
cmc
mov
pop
jbe
cmp
mov
daa
push
xchg
lds
adc
mov
mov
mov
and
sub
push
mov
xor
into
pop
sbb
sub
loope
addr16
xchg
sbb
aaa
xchg
mov
rcr
out
push
sbb
mov
xchg
inc
fisttp
js
shr
sub
mov
out
mov
xor
call
add
cmps
aaa
mov
sbb
push
movs
mov
mov
dec
pop
mov
push
stos
outs
xor
outs
push
or
or
and
(bad)
mov
xchg
addr16
loope
xlat
pushf
cmp
gs
cmps
cmp
cmp
dec
aas
in
daa
jmp
sub
mov
push
pop
pop
mov
xchg
cmps
jmp
push
mov
and
push
sub
fsubp
mov
jle
push
popf
mov
mov
movs
bound
imul
add
into
and
and
aad
jbe
adc
cmp
cwde
xor
mov
inc
mov
sub
jle
or
repnz
(bad)
aas
into
jbe
ins
lods
sub
dec
pop
dec
cmp
fild
jbe
cmp
scas
and
(bad)
cld
adc
sbb
pop
push
call
call
and
xchg
xor
and
sub
in
adc
icebp
jp
retf
sbb
popa
movs
jo
rol
test
sub
mov
add
inc
outs
test
sub
push
and
ins
inc
mov
leave
and
adc
frstor
loope
fsub
test
ins
dec
mov
ss
push
dec
jbe
hlt
(bad)
movs
pusha
jnp
pop
push
pop
mov
popa
xchg
retf
ds
add
push
in
and
dec
cmp
add
aaa
jle
es
mov
aad
clc
cdq
mov
jg
retf
lock
lea
push
pop
stos
jmp
cmp
jns
cmp
xor
retf
les
cwde
dec
rcr
fst
dec
push
mov
inc
sbb
dec
inc
adc
lahf
aaa
ins
imul
mov
dec
xchg
sub
mov
ins
jp
xchg
add
dec
inc
out
xchg
cmp
mov
sbb
add
pop
(bad)
mov
ss
gs
dec
les
loope
dec
cmp
jle
popf
xor
mov
neg
xchg
add
cmp
mov
push
test
(bad)
inc
stc
sbb
into
pop
imul
sub
aas
daa
popf
mov
popf
or
mov
push
jmp
(bad)
xchg
sub
mov
mov
xchg
call
cwde
inc
jae
imul
bound
in
add
stc
sbb
push
and
jecxz
fcmovnbe
pop
jmp
gs
fdiv
scas
pop
fisttp
jbe
popa
test
fisttp
mov
pushf
xor
mov
mov
xchg
shl
outs
retf
stos
xor
push
add
mov
fsub
push
sbb
dec
stos
stc
(bad)
pop
push
dec
stc
sub
dec
pop
in
sti
fdivr
adc
adc
mov
cmp
mov
mov
ficom
sub
clc
pop
jns
sbb
imul
sub
ror
mov
in
jns
or
push
xor
mov
sbb
adc
push
stos
out
inc
int
test
test
js
pop
(bad)
or
into
adc
into
add
imul
or
fsubrp
adc
stos
cli
xchg
ror
test
mov
or
loopne
mov
in
mov
nop
movs
jmp
ds
inc
adc
mov
mov
or
xchg
sbb
clc
(bad)
xlat
(bad)
repz
inc
fwait
leave
das
cmp
es
outs
sub
xchg
xchg
leave
and
or
xchg
(bad)
jge
or
push
dec
jmp
jg
out
rol
daa
adc
bound
xlat
pop
mov
or
sbb
push
icebp
or
adc
pop
mov
cmp
aad
(bad)
cmc
in
fcom
add
loopne
mov
call
push
mov
jo
shl
ins
adc
sbb
out
sbb
push
mov
hlt
hlt
sahf
inc
in
pop
or
cmp
retf
or
je
retf
pop
jnp
jo
mov
les
cwde
mov
cs
cmp
jns
rcl
lods
mov
cmp
sbb
mov
sbb
sbb
repnz
xchg
(bad)
fcom
sar
jne
dec
jno
sbb
jmp
pusha
stos
scas
mov
pop
mov
les
ud1
mov
iret
xor
pop
pop
(bad)
fist
in
mov
xchg
aaa
mov
adc
cs
sbb
aas
retf
mov
neg
sbb
dec
call
pop
add
sub
cmp
push
jo
xchg
dec
rcr
ror
outs
dec
add
stos
push
aad
jl
call
fs
retf
sub
call
push
stos
in
xor
dec
cli
ins
fcmovnu
sub
and
retf
xchg
sti
jmp
jl
(bad)
sti
fldenv
cmp
into
imul
ins
fbld
aad
int
jmp
sbb
div
add
lods
sub
mov
push
xor
lods
push
mov
inc
ins
push
icebp
into
retf
pop
mov
pop
mov
mov
xor
mov
cmps
xlat
loopne
mov
sbb
or
inc
adc
dec
xor
mov
push
adc
call
mov
mov
cmp
jnp
lods
out
es
pop
jle
inc
add
pop
mov
xlat
mov
repz
jecxz
add
pop
cmp
imul
mov
pop
add
iret
lods
cld
sub
ret
popa
cli
(bad)
int3
add
xlat
stos
pop
xchg
aad
cmp
mov
mov
and
sbb
in
push
lock
mul
ins
mov
cmp
dec
icebp
adc
dec
jbe
retf
into
mov
push
mov
(bad)
xor
std
cld
sbb
mov
ss
mov
mov
add
jmp
jecxz
js
pusha
lds
test
jae
fwait
pop
mov
aaa
(bad)
out
ret
mov
dec
out
dec
movs
adc
popa
fisttp
or
test
outs
mov
inc
and
test
stos
mov
mov
mov
xchg
lea
aas
mov
push
push
jae
sbb
pop
and
xor
sub
gs
dec
dec
sub
cmp
cs
leave
ins
int3
ins
push
jge
jmp
fdivr
and
retf
cmp
xor
sbb
in
fnstsw
mov
in
test
shl
sbb
xchg
xchg
jl
jno
(bad)
jns
jnp
pop
xchg
fadd
hlt
std
ins
inc
in
mov
push
mov
in
pop
rcr
sub
pop
fwait
pop
xchg
cmp
cmp
mov
getsec
mov
jle
cmp
dec
pop
lods
xchg
cmp
xchg
mov
push
std
fldlg2
lea
fldenv
mov
push
xor
fld
mov
add
cmps
dec
mov
adc
jecxz
fisubr
pop
xor
dec
inc
xor
leave
std
or
xchg
pop
jge
mov
xor
int3
inc
inc
jl
adc
push
nop
and
je
(bad)
dec
pop
fwait
ror
jle
pushf
retf
jmp
xchg
add
pop
dec
(bad)
rcl
scas
cmp
pop
test
in
gs
mov
(bad)
or
call
clc
lock
f2xm1
add
push
and
inc
cli
imul
xchg
or
es
mov
mov
xchg
xor
and
mov
pop
shl
mov
outs
les
jns
ret
cwde
adc
adc
imul
inc
push
mov
cmp
xor
dec
inc
jge
out
call
ficom
mov
cmc
push
lds
inc
jns
mov
test
retf
xchg
mov
rcr
out
inc
in
pop
jge
adc
adc
dec
pop
cmc
push
adc
jb
push
sbb
cli
mov
icebp
mov
push
stos
sbb
loope
dec
inc
and
lds
test
sahf
and
xlat
sbb
clc
cmps
mov
and
repnz
dec
add
mov
cdq
mov
mov
or
jae
and
jmp
add
loop
or
cmp
dec
scas
inc
push
ja
add
fsub
ror
xchg
in
stos
push
mov
add
pushf
push
sti
mov
(bad)
mov
sub
adc
cmps
loopne
sbb
dec
sub
push
jne
xchg
daa
inc
stos
mov
ins
xor
movs
add
dec
loope
(bad)
adc
or
dec
sbb
cld
lods
test
or
je
xchg
cmp
mov
mov
arpl
add
pop
push
mov
pop
bnd
pusha
adc
int3
cmps
pushf
xor
jecxz
pop
pop
(bad)
arpl
pop
mov
ins
movs
daa
popa
out
ins
pop
ret
popa
div
cmp
or
jns
sbb
fstp
fwait
xor
fisubr
adc
inc
pmaxub
cwde
cmp
sbb
dec
fwait
in
xor
cmc
jle
ins
mov
cmp
mov
out
std
pop
fsub
add
or
pusha
add
sti
push
test
cwde
nop
mov
adc
retf
sbb
xor
iret
das
add
popa
or
call
xchg
push
add
es
or
out
call
mov
mov
push
arpl
gs
xor
dec
mov
xchg
fdivr
mov
push
mov
xchg
pop
and
(bad)
xor
push
aad
add
aad
test
push
aam
jno
ja
cmp
mov
int
cdq
movs
cli
jnp
push
xchg
idiv
stos
pop
fwait
or
sub
dec
outs
xchg
gs
cmc
jne
in
jo
push
outs
fisttp
(bad)
movs
xor
and
sar
or
add
sub
sbb
xchg
test
mov
scas
adc
pop
stc
(bad)
hlt
enter
mov
push
ins
idiv
jg
dec
xchg
scas
pop
mov
push
pop
xor
es
and
pop
sbb
js
or
aad
iret
fadd
(bad)
into
sub
retf
test
jno
lods
push
nop
or
push
mov
mov
data16
rol
sbb
lods
adc
push
repz
je
bound
mov
cld
aaa
int3
mov
cmp
push
int3
sbb
xor
cmp
inc
dec
stos
and
mov
jg
xor
push
bound
push
pushf
and
dec
xlat
cmp
jp
mov
xor
(bad)
jge
push
mov
pop
adc
mov
cli
jnp
in
push
out
(bad)
fisub
in
pop
mov
ret
pop
push
stc
retf
cmp
repz
stc
fist
pop
shl
or
std
xchg
mov
ins
out
jae
addr16
rcr
loopne
add
shl
mov
stos
(bad)
inc
pusha
adc
sti
push
jno
fwait
aas
mov
cmp
jne
(bad)
int
or
dec
mov
inc
mov
xor
adc
fcomp
mov
popf
xchg
test
jae
jne
xor
add
imul
jns
pop
cs
or
(bad)
sbb
int
call
push
sbb
loopne
add
push
xchg
outs
jae
cmp
add
mov
sub
(bad)
xchg
fistp
test
jo
inc
jp
xchg
pop
cmp
lea
js
push
sub
dec
push
call
inc
mov
xlat
mov
inc
movs
nop
dec
or
xor
jnp
rcl
mov
sub
lock
stc
rcl
imul
sbb
add
movq
call
lock
cmp
je
mov
push
jmp
in
popf
enter
lahf
outs
(bad)
out
jne
push
inc
in
hlt
repz
loope
inc
jmp
cmp
push
jg
pop
cwde
inc
sub
jne
das
arpl
test
push
scas
add
pop
lds
movs
arpl
jmp
movs
add
in
mov
xchg
add
sub
(bad)
jmp
pop
aad
ror
cmps
loop
jne
aam
icebp
lock
mov
movs
pushf
pusha
scas
lods
mov
add
aaa
add
test
jns
aad
leave
dec
xchg
mov
outs
pop
jns
fwait
das
imul
ds
clc
aas
push
repz
jmp
cwde
mov
inc
xor
xchg
cs
cmp
imul
push
mov
adc
enter
cli
sbb
call
xlat
inc
adc
shr
jmp
pusha
mov
cmp
shl
iret
mov
xor
test
test
mov
lock
mov
xor
out
xchg
lods
xchg
sti
mov
xor
xlat
mov
cwde
fwait
aas
shl
mov
cmp
xor
mov
jnp
test
jle
ja
adc
dec
lds
movs
mov
fsub
jle
ficom
mov
sub
test
sbb
mov
mov
rcl
ror
lock
pop
inc
xlat
inc
cmp
mov
jnp
inc
std
add
dec
jmp
inc
test
stos
test
popf
out
das
lock
in
mov
rcl
push
pop
xor
or
push
aaa
clc
inc
push
dec
xchg
inc
fdiv
int3
and
mov
xchg
pop
mov
gs
arpl
jl
aam
aad
jo
rcl
mov
fs
mov
sar
fcmovnu
rcl
push
test
sti
sbb
fisttp
inc
sbb
dec
sbb
sub
jns
sub
and
(bad)
jl
mov
mov
aad
lea
stos
cmp
mov
mov
mov
jbe
or
mov
mov
xor
enter
fsubr
cmp
stc
jp
mov
aas
jne
(bad)
mov
or
icebp
lea
sbb
out
mov
or
fidivr
lds
out
jl
sbb
arpl
adc
push
clc
ins
pop
ins
arpl
arpl
gs
sub
leave
jmp
sub
ins
icebp
jo
dec
ficom
cmp
test
imul
pop
adc
jp
mov
adc
add
scas
cmp
push
fnsave
sbb
pop
xchg
mov
xor
add
arpl
(bad)
fnstcw
or
lock
add
outs
scas
pop
xchg
mov
cmp
jmp
lods
sub
sub
fcom
data16
(bad)
push
pusha
ss
push
aad
mov
dec
mov
enter
push
pop
addr16
daa
cmp
mov
fistp
icebp
mov
cmp
mov
test
push
mov
fwait
jbe
sbb
loope
fnstenv
adc
retf
clc
mov
mov
ins
movs
inc
pushw
xchg
fld
ficom
outs
jno
sahf
int
mov
out
ja
sti
inc
sbb
les
mov
lock
dec
sbb
retf
loop
jo
cld
loopne
mov
popa
das
cmp
pop
(bad)
daa
mov
push
popf
jnp
mov
mov
pop
imul
fwait
outs
shr
and
inc
cmp
mov
adc
dec
cmp
jns
pop
jno
add
push
mov
scas
jmp
add
inc
adc
jns
ret
jge
ja
mov
in
dec
fs
xor
cmp
es
call
cmp
jle
cmp
nop
push
push
push
jns
std
pop
sbb
jbe
(bad)
mov
loop
cmps
mov
inc
jmp
sub
push
ds
ja
stos
xchg
jne
bnd
repz
dec
mov
mov
out
push
jns
jp
push
add
aas
inc
test
fcom
push
js
xchg
addr16
movs
loop
and
push
xchg
push
adc
aaa
pop
add
push
dec
jecxz
push
push
or
push
mov
push
mov
pop
sbb
repnz
and
xor
(bad)
(bad)
jmp
xor
sbb
cli
xchg
imul
dec
pop
fcomp
test
push
dec
sub
rol
inc
and
mov
push
stc
fld
jmp
xor
adc
add
sbb
ja
xor
dec
push
xor
ss
es
xor
pop
pop
out
fisubr
xchg
cmp
(bad)
mov
push
outs
pop
call
mov
neg
test
movs
outs
cli
fs
mov
jae
sbb
mov
(bad)
js
dec
addr16
fdivr
sbb
jle
mov
xor
cmp
fild
cs
push
adc
sbb
sub
pop
push
push
mov
jp
adc
sar
pop
inc
mov
inc
sbb
out
mov
stos
cwde
ja
xor
outs
jne
push
gs
das
pop
cmp
call
nop
mov
bound
adc
xlat
cli
fidiv
dec
pop
jo
dec
and
mov
cmp
inc
sbb
and
pop
lods
and
adc
retf
lock
cmp
sub
ins
ins
jecxz
fsubrp
(bad)
loop
cmp
or
add
or
js
pop
loope
mov
and
xchg
mov
shl
xor
xor
inc
and
je
xchg
(bad)
into
dec
jns
ja
mov
xor
int3
xchg
mov
ret
adc
call
xlat
out
fidivr
fwait
xchg
add
retf
loop
xchg
adc
(bad)
cmp
dec
outs
pop
shl
and
scas
add
movs
lea
(bad)
stc
mov
add
mov
jno
fs
retf
add
jmp
clc
fcomp
enter
fimul
add
and
ss
or
lods
mov
fdivp
lds
lahf
cld
pop
adc
sbb
mov
mov
pop
dec
retf
arpl
mov
dec
std
mov
or
mov
lea
icebp
loopne
out
in
mov
cld
cs
sbb
adc
pop
xor
sub
movs
shl
(bad)
push
pop
aaa
fst
sub
push
inc
daa
adc
sub
push
sar
or
sbb
mov
popf
adc
dec
adc
pop
mov
sbb
call
pusha
dec
jno
jae
cmps
pop
cdq
mov
jnp
iret
aaa
xchg
mov
add
scas
pusha
sub
popa
pop
and
sbb
xor
imul
jmp
xor
pop
mul
neg
(bad)
push
sahf
cmp
xchg
push
(bad)
or
call
inc
fstp
mov
ins
jo
mov
and
fwait
retf
sub
cs
add
xchg
movs
scas
pop
fist
lea
aam
cli
adc
popf
clc
or
icebp
adc
xchg
push
xchg
mov
cld
push
push
ret
gs
icebp
aas
sbb
and
push
and
neg
xor
sub
dec
fisub
or
add
lahf
std
lods
mov
adc
xchg
js
jg
and
lods
mov
retf
fmul
xchg
test
call
stos
cmp
cmc
in
rcr
rep
jmp
mov
aas
add
aas
push
jle
or
xchg
push
pop
cmp
rcr
(bad)
outs
into
ins
jb
dec
xor
sub
cli
pop
pushf
jge
shl
imul
inc
(bad)
jge
in
push
sti
out
rol
div
and
mov
addr16
std
cli
dec
cdq
pushf
stos
loopne
jge
scas
add
push
jge
add
imul
cli
mov
out
push
sub
adc
add
dec
jecxz
push
push
sub
xchg
cdq
dec
rol
cmp
or
mov
sbb
retfw
in
in
push
dec
lahf
xor
ds
inc
add
cld
jbe
nop
hlt
inc
jbe
inc
pop
push
cdq
int3
sbb
cs
sbb
xchg
mov
mov
fadd
sbb
push
sub
xor
sti
add
ss
cmp
jae
push
add
cmp
nop
out
mov
and
and
(bad)
mov
rcl
out
adc
push
ss
push
jmp
pop
(bad)
leave
test
cmc
int3
fisttp
out
int
pop
aad
outs
ins
push
cwde
stos
adc
ins
mov
jecxz
jmp
and
fisubr
mov
test
imul
push
rcl
pop
jp
aas
aas
inc
xchg
sahf
xchg
mov
fidiv
shl
call
shl
popf
and
rol
test
sub
pop
and
in
push
add
inc
lahf
xor
mov
fnstenv
mov
push
repnz
mov
push
mov
dec
movs
jno
inc
jnp
mov
cmp
cmp
jae
push
or
js
jl
mov
push
cmp
fdiv
sub
jns
cdq
push
adc
nop
leave
out
inc
sti
pop
jbe
movs
out
or
xchg
scas
xor
cmp
nop
ficomp
xor
sub
pushf
mov
mov
cmp
movs
in
pusha
push
sbb
shr
mov
div
cli
pop
imul
repz
outs
sahf
xchg
in
retf
icebp
fld
push
iret
test
xlat
xor
retf
mov
sub
sbb
mov
cmp
sbb
jns
in
loopne
mov
into
mov
add
movs
add
mov
(bad)
fwait
jmp
int
dec
mov
lahf
jnp
in
ja
pop
jnp
test
push
mov
inc
pop
out
out
jg
jo
mov
sub
cmp
repnz
cld
js
jp
push
arpl
(bad)
ret
frstor
popa
es
sti
cmp
ss
or
dec
imul
cmp
pop
inc
sub
mov
jge
repz
push
out
xchg
pop
lock
adc
and
mov
fsub
cmp
xchg
inc
test
or
mov
inc
ret
sub
jg
push
fidiv
adc
mov
fild
mov
lods
dec
(bad)
arpl
add
leave
scas
outs
cmps
pop
mov
xchg
out
jmp
inc
xor
or
pop
push
push
gs
pop
xchg
aad
rcl
iret
shr
rcl
pop
push
repz
cmps
or
jb
jmp
idiv
mov
int3
icebp
iret
xchg
jle
ins
inc
mov
mov
pop
mov
out
loope
or
std
and
sub
add
out
aad
xchg
or
mov
push
in
mov
cmp
jl
movs
test
sub
jnp
sahf
(bad)
xor
sub
pop
jno
adc
mov
test
push
or
fbstp
dec
cmp
and
mov
(bad)
xor
xor
cs
test
sub
and
xchg
xchg
and
jmp
xchg
into
aas
pop
add
stos
dec
adc
ins
mov
xor
and
lds
and
xchg
sub
jmp
adc
(bad)
int
push
cmp
fs
add
pop
jns
fs
xor
mov
fstp
je
jmp
xchg
or
xchg
sbb
xchg
hlt
aam
call
xor
cmps
adc
out
leave
push
xchg
dec
imul
mov
(bad)
mov
pop
cmp
js
or
sbb
pop
and
push
fs
push
cmp
xchg
call
dec
jo
or
test
jno
pop
push
lock
push
cmp
push
neg
ss
xor
and
dec
jg
sti
and
jmp
jb
jmp
add
in
(bad)
fisttp
mov
mov
int3
leave
cld
or
push
fstp
stos
lds
mul
xor
inc
push
(bad)
xor
pop
inc
mov
scas
jl
adc
idiv
sbb
xchg
in
xor
ins
xchg
xchg
xor
(bad)
cli
cmp
sbb
out
mov
aam
and
call
pop
mov
and
sub
(bad)
les
popf
test
cmps
rcr
add
jmp
xor
pop
dec
push
aas
arpl
sbb
(bad)
fdivr
push
lock
inc
xor
lds
in
inc
addr16
dec
mov
sub
xor
mov
daa
or
cdq
dec
sub
mov
outs
call
sar
aaa
int
cmp
and
addr16
sub
jmp
jns
loop
xor
das
pop
and
pop
pop
cmp
loop
imul
mov
fcompp
mov
push
push
jns
mov
jo
mov
lock
pop
lock
sbb
das
aaa
ja
mul
adc
sub
cli
adc
jo
out
cli
enter
xor
or
dec
mov
dec
in
sub
(bad)
int
cmp
popf
aam
repnz
sub
dec
sub
jae
loopne
pop
add
mov
jge
jne
sbb
jg
popf
mov
adc
(bad)
fsub
test
push
cdq
nop
loope
xor
mov
(bad)
dec
add
rcr
cmp
pop
inc
mov
icebp
addr16
xor
push
add
adc
out
sub
ins
and
pop
sub
fucomp
les
xchg
jmp
bnd
in
test
xor
mov
cld
ror
stos
or
jo
je
hlt
adc
or
mov
icebp
scas
enter
shl
cwde
dec
ss
lahf
(bad)
inc
outs
fisub
inc
push
(bad)
or
inc
pop
sar
or
lock
pop
test
cwde
lods
lods
test
push
cmp
leave
jle
xlat
loop
push
pop
jno
dec
jnp
xor
or
pop
jg
lock
test
pop
fild
sbb
adc
xchg
not
pop
dec
add
stos
dec
icebp
push
aas
ffree
pop
xchg
je
push
xor
loope
ins
dec
add
outs
sub
push
test
int
mov
xor
mov
pmulhw
push
inc
cdq
pop
dec
(bad)
cdq
shr
push
in
cmp
(bad)
imul
(bad)
shrd
sti
fimul
xlat
cmp
das
ficomp
test
fs
in
ret
cmps
(bad)
fisttp
jle
push
test
add
pop
loopne
out
outs
mov
push
xchg
cmp
adc
dec
movs
xor
cld
adc
movs
xor
repnz
xchg
push
mov
cmp
pop
mov
lods
sub
jae
sub
xchg
hlt
dec
mov
dec
push
inc
loope
out
mov
push
add
pop
fbld
push
shl
jl
lds
push
adc
or
xchg
sti
dec
push
mov
out
test
and
shr
mov
jp
push
jbe
xchg
fwait
sub
sub
fidivr
mov
xlat
leave
inc
or
pop
sbb
mov
push
mov
xchg
ficom
fld
jns
js
mov
inc
pop
into
hlt
fwait
or
cmp
fisubr
les
imul
pop
xchg
push
or
push
sub
mov
pop
dec
mov
ins
popf
add
sahf
inc
xlat
clc
and
lea
mov
mov
sar
nop
pop
test
add
sbb
xor
pop
jbe
push
lahf
or
fild
mov
or
jb
cmp
dec
adc
mov
sbb
sbb
stc
and
push
inc
ja
xor
loope
lahf
in
mov
and
or
cld
xchg
pop
js
inc
movs
and
jb
sub
ja
jl
in
add
es
(bad)
imul
sbb
xor
stos
dec
sar
bound
enter
xchg
jmp
adc
fs
sar
aaa
pop
sub
gs
and
xchg
mov
push
push
loop
xchg
lahf
lds
repnz
adc
inc
add
lahf
cmp
inc
or
repz
cmp
add
dec
push
add
in
ins
cdq
aaa
sbb
sti
in
pop
jo
push
stc
mov
nop
frstor
je
sti
shr
and
call
dec
fwait
jle
repz
scas
addr16
and
xor
mov
mov
or
pop
loope
sti
pop
push
gs
cmp
in
pusha
xor
mov
xchg
gs
dec
mov
out
add
and
stos
push
mov
mov
push
inc
dec
bound
xlat
or
sahf
(bad)
and
xchg
enter
inc
xor
dec
jmp
in
and
push
push
movups
ucomiss
xor
(bad)
loope
(bad)
add
rcr
fldenv
cmc
sahf
fsubr
push
xor
rcr
jnp
pushf
mov
push
adc
mov
mov
das
or
js
mov
cli
mov
inc
xor
ss
dec
cld
xor
(bad)
pop
dec
mov
lea
dec
or
mov
inc
dec
xor
ret
mov
mov
sub
iret
iret
mov
sub
xchg
pop
push
xlat
outs
fsub
rol
and
inc
call
daa
add
lds
pop
lock
aaa
adc
pusha
arpl
das
ins
adc
mov
call
pop
call
enter
jnp
ss
pop
(bad)
jg
sub
lds
gs
and
loope
xor
push
int
jmp
mov
inc
(bad)
ins
(bad)
fistp
clc
push
arpl
es
lds
out
in
cmps
sbb
nop
outs
pop
jl
or
ss
mov
mov
adc
xchg
xchg
jnp
cld
aaa
add
imul
in
jnp
outs
sbb
jns
lods
sti
adc
mov
pop
sub
xchg
jne
imul
sbb
ror
and
pop
out
addr16
cwde
cmp
xchg
or
cwde
retf
xchg
jae
dec
fadd
pop
add
and
retf
dec
push
fsubr
ins
dec
jns
ret
mov
pop
pop
in
fadd
push
sar
inc
pop
bnd
mov
jmp
jae
xchg
ret
mov
or
test
cwde
int
sub
push
mov
clc
fadd
xor
push
dec
or
mov
out
xor
mov
sbb
pop
sbb
mov
mov
adc
pushf
jp
sub
loope
jmp
retf
mov
or
cmp
outs
popf
xor
mov
inc
pushf
inc
xchg
jle
stos
adc
aam
imul
sub
test
loop
cmp
fwait
sub
dec
push
fbld
xor
daa
push
shl
ret
dec
repz
fsubr
push
mov
cmc
pop
fist
call
inc
idiv
in
jmp
jle
sbb
jmp
or
adc
mov
jg
fcmovnu
repz
add
inc
mov
mov
mov
mov
loop
outs
push
stc
sub
arpl
mov
mov
repz
ins
ja
aad
sbb
lods
sti
or
shl
pop
dec
div
stc
mov
rcl
test
pop
es
lods
popf
mov
pop
xor
inc
cmp
pop
jle
std
inc
and
pop
out
sub
xor
adc
fstp
jle
push
mov
pop
pop
aas
push
dec
movs
and
aad
dec
mov
popa
push
fnstcw
pop
add
cmp
push
push
fisttp
adc
dec
out
push
jg
js
or
ins
xor
pop
sub
fld
and
(bad)
loopne
sbb
push
adc
push
sub
lock
dec
test
imul
stos
sbb
aam
icebp
inc
sbb
jns
pop
out
or
lods
and
fidivr
fsub
out
jp
mov
out
movs
(bad)
lea
inc
xlat
mov
and
repnz
dec
xlat
and
mov
cmp
fbstp
loop
xchg
scas
mov
(bad)
inc
sti
cmp
jo
aas
pusha
rcl
stc
aaa
cmp
inc
mov
add
jbe
pop
leave
mov
add
or
rcl
or
xchg
into
popf
cmp
(bad)
repz
cmp
xchg
popf
loop
scas
jb
test
adc
(bad)
pop
dec
pop
sub
out
ins
in
cmc
mov
retf
pop
push
mov
sahf
idiv
xor
icebp
shl
xor
daa
mov
mov
(bad)
hlt
cmp
pop
jno
inc
inc
into
push
push
xchg
sbb
dec
xchg
cmp
sbb
sub
repz
jb
xor
and
es
and
xor
cmps
aas
(bad)
rol
xchg
scas
cli
in
stos
outs
or
popa
mov
outs
sub
pop
sti
cmp
mov
inc
out
ins
cld
and
dec
lea
jns
dec
popa
stos
cmp
test
dec
out
jo
or
daa
scas
xchg
push
push
push
mov
xor
mov
push
stos
dec
add
test
repz
call
movs
idiv
jae
cmp
push
cli
pop
sub
xchg
inc
cli
push
xor
pop
movs
xor
(bad)
call
outs
ret
lahf
mov
pop
jg
push
jg
imul
mov
stc
fldcw
jne
shr
pop
fild
ja
add
cli
dec
ds
mov
sub
cmp
fcomp
inc
stos
cmp
int3
sahf
scas
mov
out
out
push
push
popf
inc
sahf
fst
and
lahf
jmp
adc
push
adc
out
xchg
sub
test
arpl
add
bound
(bad)
in
movs
cmp
jmp
ins
cmp
repnz
or
(bad)
jae
stc
cmp
sbb
enter
xlat
cs
stos
xor
pop
mov
pop
mov
std
or
sbb
cmp
rcr
imul
pop
jne
sbb
mov
repz
cmps
and
pusha
sbb
rcl
(bad)
fsubr
push
stc
inc
fsub
jbe
loopne
pushf
pop
xchg
cmp
xchg
aam
out
hlt
leave
(bad)
cmp
mov
sahf
xchg
mov
sub
lods
jno
ret
or
rcl
jo
mul
adc
add
leave
lods
cdq
dec
cs
push
mov
repnz
movs
out
dec
test
and
leave
jp
mov
dec
dec
dec
leave
cmp
repz
pop
mov
fs
mov
pop
xlat
push
sbb
xchg
test
xchg
mov
xchg
and
cmp
aaa
mov
and
(bad)
cwde
sub
add
mov
(bad)
jns
repz
gs
lods
cli
in
pop
(bad)
stos
lods
xchg
call
ret
fwait
xor
(bad)
sbb
sbb
sti
inc
cmp
fidiv
or
fistp
push
in
imul
or
sub
stc
fst
push
in
repnz
cmp
inc
mov
sbb
inc
jp
jl
jo
(bad)
adc
mov
dec
mov
xchg
and
sbb
xchg
pop
rol
ins
jp
test
inc
mov
push
iret
fs
out
mov
sahf
test
jmp
or
or
add
loopne
inc
push
sar
inc
lock
pop
or
test
ret
pop
loope
rol
or
cmp
mov
test
loope
je
out
push
or
cmp
shr
jecxz
fstp
xchg
add
stos
dec
cwde
cmp
call
cdq
call
pop
mov
movs
sub
and
in
pop
retf
das
mov
sahf
shr
imul
pop
inc
sub
sbb
jo
add
xchg
ins
movs
loopne
sub
xchg
inc
xor
mov
pop
out
sub
outs
adc
xchg
pop
imul
test
or
sbb
mov
fst
adc
cmp
jl
and
(bad)
adc
rcl
out
inc
inc
pop
pushf
shl
jmp
outs
adc
imul
jmp
sbb
nop
imul
in
and
jmp
mov
gs
mov
cmp
jo
jae
jno
jle
repnz
mov
sub
dec
push
or
push
test
xor
lods
adc
xchg
sbb
jne
or
stos
inc
cmp
sbb
and
ss
cs
xor
pop
int
aam
inc
add
fidivr
js
sbb
call
(bad)
push
test
inc
scas
add
mov
push
cld
cli
cmp
inc
popf
(bad)
leave
dec
pop
jle
call
xor
mov
(bad)
fs
(bad)
sub
or
pop
jae
adc
mov
mov
sbb
sub
cli
bound
mov
out
outs
or
(bad)
cld
jle
or
mov
dec
dec
test
(bad)
mov
mov
ror
pop
(bad)
retf
xor
xor
fnstsw
push
mov
test
stos
push
xor
call
cmp
pop
adc
scas
lods
inc
pop
adc
aad
movs
add
or
mov
sub
sbb
stos
and
cli
in
dec
aaa
inc
mov
sbb
mov
arpl
int
fiadd
ins
jne
xor
push
sub
scas
das
fist
outs
cdq
pop
arpl
test
addr16
je
mov
cwde
sbb
loop
fimul
aas
cmps
shr
test
cmc
and
pop
imul
mov
mov
or
lods
lds
push
pop
xchg
cmps
bnd
mov
lahf
adc
cld
test
lods
xchg
mov
dec
push
cmc
sub
call
(bad)
fist
movs
(bad)
jmp
or
das
(bad)
mov
call
xchg
jne
or
or
cmps
dec
ffree
pop
shl
loopne
mov
push
push
push
xor
sbb
dec
bound
cmp
cmp
sub
mov
mov
mov
mov
stos
inc
nop
sbb
fs
mov
jne
cmp
outs
test
dec
and
out
(bad)
dec
dec
aam
mov
mov
push
mov
fdivr
ror
outs
fild
fcomp
shl
pop
mov
or
pop
out
pop
xchg
jne
jbe
fild
xor
xchg
adc
and
push
stos
and
or
sbb
fs
lods
arpl
cwde
mov
push
icebp
lea
call
jbe
out
sub
lahf
loopne
inc
push
pop
stos
ja
jne
xchg
and
scas
sti
adc
cwde
dec
cmc
jne
push
je
js
dec
sub
mov
jle
adc
data16
or
cdq
cmps
repz
mov
or
mov
adc
and
or
pop
and
push
add
(bad)
fwait
xchg
cld
mov
adc
movs
mov
out
aaa
stos
cmc
xchg
and
push
adc
push
fwait
clc
cmc
sahf
adc
ins
popf
dec
ret
lock
fld
add
push
jmp
adc
aaa
adc
pop
xchg
jbe
in
loopne
int
outs
mov
ss
add
ret
arpl
leave
leave
std
repz
dec
jg
popf
icebp
cmps
in
cmp
sti
jge
int3
out
movs
scas
pusha
(bad)
ss
aad
fisttp
pop
sub
fist
pop
pop
das
lods
mov
nop
inc
push
test
je
lods
daa
sbb
and
add
mov
int
call
lods
movntq
dec
call
test
and
enter
gs
push
int
repz
ret
mov
adc
outs
jb
add
(bad)
mov
daa
push
int3
xor
cmc
fnstenv
or
cmp
test
imul
jl
fisttp
mov
lods
in
adc
ja
jge
(bad)
mov
mov
aad
xor
cld
jnp
cmp
repnz
ret
pop
adc
mov
push
cmp
and
push
jl
aas
and
sub
mov
xor
jecxz
repnz
mov
popa
hlt
and
mov
mov
mov
rol
fcom
or
nop
lods
fs
xor
fild
push
test
xlat
add
out
mov
aas
mov
inc
aaa
xchg
mov
xchg
jne
mov
sub
dec
dec
push
and
add
iret
out
xchg
stos
stos
cmc
push
or
mov
pop
xor
aas
popa
mov
and
jo
fst
stc
mov
icebp
xchg
stos
pop
pop
(bad)
adc
arpl
xlat
loope
fisubr
sub
xor
xchg
jle
pop
pop
dec
push
pop
fwait
std
int
rcl
and
xchg
hlt
sub
push
dec
cmp
pop
inc
repnz
and
(bad)
adc
xchg
mov
out
xor
out
xor
(bad)
dec
xor
adc
mov
imul
inc
mov
mov
mov
xchg
jg
push
clc
pop
dec
cwde
mov
pushf
or
loope
icebp
adc
inc
or
adc
pop
retf
inc
inc
mov
std
retf
mov
test
aaa
test
mov
mov
jnp
adc
out
repz
lds
jp
add
lds
xor
test
and
mov
xor
sti
jns
fs
mov
xchg
adc
jbe
ret
popf
or
cs
push
inc
xor
mov
cli
ins
add
fiadd
inc
loop
xchg
sbb
out
ins
scas
push
gs
ret
sti
mov
loopne
repz
cmp
ja
pop
mov
xlat
cmovno
repz
int3
xchg
inc
(bad)
jp
push
push
loopne
int3
jge
fldln2
js
or
prefetchw
(bad)
cmc
shr
popf
mov
in
adc
pop
jle
xlat
je
shr
fwait
ds
mov
pop
xchg
lds
ror
adc
cmp
lds
popf
mov
jae
imul
cmp
mov
dec
je
add
mov
ins
loope
test
push
out
popf
pop
std
sbb
or
add
dec
mov
mov
inc
xchg
std
cmps
pop
sbb
lahf
test
dec
dec
fxch
stc
sbb
ja
into
and
push
cmp
sub
es
inc
test
outs
dec
data16
enter
daa
or
addr16
es
aad
sbb
mov
gs
fsub
sub
or
xchg
dec
mov
movs
stos
(bad)
pop
ror
add
pop
inc
push
inc
xchg
mov
cs
ficom
call
rep
std
fld
mov
mov
mov
sbb
cmp
sti
mov
sbb
mov
ss
es
push
es
fwait
adc
push
rcl
push
push
jl
mov
mov
mov
mov
push
push
call
pop
int3
rcr
adc
imul
pop
out
sub
mov
sahf
fstp
and
in
leave
xchg
icebp
jno
push
push
inc
adc
add
mov
das
adc
or
push
aam
inc
arpl
or
cmp
pop
sbb
mov
mov
push
or
adc
aas
push
xor
jp
dec
call
mov
mov
sbb
jno
pop
pop
jg
jge
fcmovne
jnp
xchg
inc
jb
adc
rcl
pop
jne
popf
bound
popa
(bad)
xchg
loop
hlt
inc
push
ret
in
in
loope
fcom
inc
adc
cmps
je
data16
pop
cwde
lods
push
stos
(bad)
stc
mul
and
adc
cwde
cs
loope
xchg
jecxz
xor
add
aas
adc
retf
jg
mov
rcr
int3
cld
scas
scas
adc
jae
cmp
or
in
jle
in
sbb
mov
in
addr16
jbe
scas
out
or
push
or
mov
xchg
out
ja
aas
xchg
ins
add
sbb
push
outs
(bad)
and
dec
and
in
pop
add
add
inc
fs
push
mov
repz
loopne
icebp
inc
in
idiv
mov
adc
aad
repz
adc
test
jle
fwait
lea
jge
out
pop
jb
sub
mov
iret
pusha
imul
pop
dec
mov
adc
imul
ja
xchg
shr
dec
dec
and
lock
ret
aas
adc
call
loope
jmp
sbb
clc
sub
cmp
in
jg
adc
or
sbb
jg
js
xchg
xchg
rcr
sub
mov
inc
mov
pop
jnp
movaps
xor
lods
push
(bad)
jne
mov
mov
outs
cmp
ficom
sbb
mov
adc
mov
mov
push
or
jns
add
pop
(bad)
call
xor
dec
add
xchg
shl
dec
add
mov
add
(bad)
repnz
xchg
dec
ins
pop
lock
cmps
(bad)
loope
and
daa
sahf
mov
push
repz
pop
mov
cmp
sbb
inc
cmp
lock
push
call
es
test
adc
adc
loope
dec
mov
loop
mov
jo
lods
add
push
mov
les
rcr
out
js
in
mov
out
sti
pop
and
sub
mov
daa
dec
mov
fcmovne
add
xchg
test
(bad)
sbb
loopne
jge
imul
imul
pushf
fsub
cmp
or
add
ds
mov
push
add
mov
iret
lahf
sub
into
ds
ss
call
jmp
adc
pop
adc
retf
(bad)
js
scas
mov
inc
sahf
jno
adc
and
iret
daa
mov
hlt
or
jmp
sub
mul
jno
lock
fmul
xor
leave
mov
div
xchg
dec
outs
mov
cmps
cmps
cmc
mov
js
xchg
add
add
outs
xchg
and
in
imul
or
and
mov
adc
out
push
fbld
xlat
iret
fld
js
sub
jp
add
fild
pmaxub
repnz
in
cmp
jle
xor
mov
out
out
mov
fstp
lahf
(bad)
fsubrp
inc
cmps
xor
loopne
mov
sub
ins
sub
xchg
cdq
mov
xchg
xchg
jo
add
or
push
into
(bad)
popf
fwait
jecxz
dec
inc
pushf
dec
ja
inc
and
dec
std
gs
es
xor
retf
push
fnstenv
out
je
test
sub
sbb
inc
add
mov
push
(bad)
mov
cmp
and
push
mov
push
std
out
addr16
pop
inc
pusha
stos
test
mov
call
in
jae
outs
repz
in
call
jp
jmp
out
inc
push
pop
jp
mov
outs
and
sub
jmp
stos
(bad)
xor
mov
mov
jmp
sub
gs
pop
aas
aam
stos
xlat
in
dec
test
add
jmp
or
dec
lock
dec
inc
jmp
lods
and
xor
int3
adc
mov
mov
sub
xor
out
lock
push
adc
iret
push
xchg
sub
sbb
and
adc
xor
push
jmp
sub
or
or
(bad)
mov
ss
sub
aaa
xchg
pop
fimul
inc
sub
bt
xor
sbb
shl
in
les
sti
out
loopne
add
sbb
imul
mov
add
xlat
or
xchg
and
and
ret
and
add
mov
mov
fwait
or
icebp
(bad)
mov
pop
jp
fcomip
adc
fldlg2
and
jecxz
adc
sub
fs
add
shl
test
data16
add
cmp
(bad)
and
mov
call
xor
fwait
test
popf
and
scas
cmp
popa
ja
xor
lods
add
retf
push
xchg
inc
adc
out
popa
sub
xor
sub
hlt
jbe
jle
cld
mov
xchg
iret
lahf
ror
jns
mul
cmps
imul
add
clc
xchg
int3
inc
lea
ret
ins
push
out
xor
xchg
ror
retf
ss
dec
cld
push
sti
inc
xor
aas
(bad)
jp
cmp
mov
sbb
popf
test
add
mov
mov
(bad)
xchg
mov
rol
mov
mov
cdq
lds
inc
or
cmps
cmp
push
mov
pusha
push
inc
or
sahf
xor
push
sbb
jb
push
sbb
mov
pop
sbb
lods
pusha
fadd
add
pop
(bad)
fwait
scas
dec
cmc
jg
or
xor
stc
sub
mov
aad
call
inc
cmp
shl
push
xchg
mov
scas
sbb
jg
adc
lahf
ds
push
and
pop
xchg
test
mov
shl
mov
fisttp
sub
sub
mov
xchg
xor
call
cmp
dec
dec
into
iret
or
xor
xchg
mov
retf
outs
add
mov
sahf
inc
pop
push
mov
inc
push
js
call
sahf
out
adc
outs
lods
ss
push
add
and
push
nop
in
xor
(bad)
mov
pop
push
or
cmp
inc
cmp
pop
test
push
das
ins
pop
(bad)
pop
mov
pop
aaa
and
movs
push
mov
mov
and
(bad)
cmps
mov
push
scas
iret
xchg
retf
inc
(bad)
in
mov
mov
dec
inc
sbb
(bad)
mov
outs
leave
push
pop
jl
pusha
(bad)
mov
inc
pop
dec
pop
retf
popa
fimul
push
push
sahf
std
push
fs
xchg
dec
nop
push
stos
(bad)
and
ret
inc
push
mov
push
into
outs
push
and
and
xor
jle
pop
in
stos
jmpw
mov
xchg
lahf
inc
loope
sub
mov
call
xchg
pushf
hlt
int
outs
imul
call
sti
pop
xchg
push
inc
out
jmp
iret
mov
xchg
xchg
xor
jbe
push
lahf
inc
jmp
adc
loop
dec
mov
ins
stos
sti
jl
call
xchg
retf
xchg
hlt
sbb
fstp
dec
pop
out
cmp
adc
cmc
jno
test
sbb
dec
(bad)
sahf
xor
je
loopne
adc
xchg
shl
aas
cli
ins
data16
and
mov
fisubr
or
mov
or
and
sub
dec
movs
sbb
add
test
test
add
jl
fs
cli
or
dec
pop
imul
mov
in
repnz
out
shl
sbb
xlat
sar
mov
sbb
clc
jmp
jmp
lods
xlat
pusha
add
sub
pop
test
mov
xchg
jb
push
mov
xchg
or
pop
inc
adc
clc
pop
sar
or
aam
scas
fistp
mov
inc
or
dec
arpl
cmp
sub
out
lods
xlat
adc
loopne
lds
clc
sub
rol
xchg
cmp
out
scas
or
rcl
push
int
jp
mov
(bad)
popa
das
bound
int
faddp
push
jnp
neg
loope
fsubr
mov
hlt
int3
dec
jo
popa
(bad)
mov
xor
adc
clc
scas
(bad)
cs
ds
stos
mov
cmp
pop
dec
or
ds
ins
xchg
cmp
dec
stos
dec
mov
mov
mov
shl
push
stc
nop
fstp
dec
jo
sbb
cmc
out
icebp
sbb
xchg
aam
sub
ja
jno
or
inc
inc
inc
sub
sub
call
out
jbe
jns
xor
fbstp
jl
cdq
cmps
ins
mov
repnz
mov
xor
jb
cmps
arpl
pop
jnp
jp
rcr
stc
jge
imul
fisttp
stc
sub
inc
push
aaa
(bad)
mov
mov
mov
inc
push
das
dec
pop
fistp
out
scas
push
xchg
lea
loop
cld
cmp
in
and
cmp
sbb
ret
fsub
mov
mov
dec
enter
xchg
adc
popf
fs
jns
or
xchg
je
mov
mov
repnz
ins
jmp
adc
cli
mov
jmp
sbb
jg
in
out
out
pusha
add
mov
xor
es
or
xor
pop
dec
sbb
dec
sub
cmp
je
sti
bound
sub
ror
xchg
cmps
rcl
es
mov
push
xchg
cmp
js
xchg
xor
cs
jmp
idiv
es
lds
mov
ret
lahf
sub
jmp
adc
mov
je
cld
out
or
mov
or
in
imul
or
(bad)
nop
pop
test
fldenvw
aaa
cld
test
xor
adc
and
iret
cmp
ja
dec
call
lods
and
lock
or
out
fidiv
and
popa
cmp
test
mov
sahf
adc
call
cmps
dec
and
hlt
push
sbb
lahf
mov
int3
cmps
pusha
mov
adc
lds
hlt
push
loopne
test
mov
and
enter
scas
push
es
push
cmp
popa
sbb
sar
retf
jbe
mov
or
outs
mov
repz
inc
cmc
pop
pop
jmp
fldenv
test
xchg
sbb
pop
push
sbb
mov
mov
cmp
leave
fld
xchg
aaa
repz
cmc
inc
add
fwait
(bad)
cli
sub
dec
popa
es
xor
or
out
ret
add
call
les
fs
arpl
dec
pop
lds
and
sub
fist
(bad)
mov
nop
out
xchg
retf
stc
fs
xlat
mov
imul
movs
push
cmps
inc
jmp
sub
and
mov
adc
pop
jle
lea
jns
pop
mov
lea
mov
(bad)
les
sar
sbb
dec
daa
call
mov
out
jmp
aas
add
popf
dec
add
ins
icebp
ja
or
mov
mov
xor
mov
mov
xchg
xchg
push
xchg
add
mov
xor
ja
int3
ins
ins
jnp
mov
frstor
rcr
fs
fbstp
imul
stos
xlat
sahf
idiv
jmp
xor
sub
dec
fisttp
ins
mov
mov
and
inc
repz
loopne
jp
cmp
cmc
mov
inc
je
sbb
out
cmps
repnz
jno
jb
adc
pop
sub
adc
popa
dec
mov
and
pop
pusha
adc
imul
xchg
xlat
aas
idiv
sahf
ror
push
les
cmp
(bad)
lock
mov
rcl
inc
mov
ret
add
and
jg
clc
fstp
ins
cld
push
pop
mov
pop
aas
sub
bound
ins
sbb
mov
cmp
xlat
cli
sub
es
adc
mov
(bad)
retf
lods
popa
push
push
or
pop
push
sub
sbb
push
(bad)
es
scas
gs
pop
(bad)
dec
adc
mov
xchg
sbb
rcl
jb
test
shl
aaa
push
jb
dec
movs
xchg
mov
sub
and
add
fnstenv
sbb
shl
pop
xor
cwde
sub
sub
jbe
fsubr
or
in
mov
push
daa
inc
dec
sub
test
sbb
mov
cli
mov
fcomp
es
ret
jge
mov
push
inc
idiv
adc
bound
xchg
push
jno
dec
dec
add
pop
jnp
aaa
repnz
cmp
inc
in
fimul
in
int3
mov
into
popa
mov
mov
sbb
jne
push
cmps
jno
mov
lea
mov
stc
mov
daa
es
sbb
popf
inc
push
test
inc
pop
imul
movs
cld
pop
aam
aas
into
xchg
adc
popf
(bad)
ss
adc
jmp
jo
out
sahf
lahf
imul
inc
lods
movs
sahf
mov
or
popa
aad
sub
xchg
xor
sahf
pusha
cmp
jnp
fild
cmp
mov
movs
push
sub
xor
xchg
jl
mov
pop
vunpcklpd
cdq
popa
jg
pushf
hlt
xor
sub
xchg
imul
popa
mul
jno
std
jle
retf
loopne
mov
in
scas
inc
xor
or
mov
(bad)
sbb
inc
jmp
xchg
sbb
mov
cmp
jno
ret
push
neg
addr16
in
pop
fcmovb
xor
arpl
mov
retf
mov
(bad)
repz
sub
inc
and
idiv
xchg
movs
mov
mov
scas
mov
loop
lea
pop
daa
cmp
inc
or
mov
add
or
cmps
xchg
mov
cmp
cmp
xlat
xor
xchg
lea
pushf
fisttp
ror
fs
fstp
xchg
mov
mov
loop
add
or
xchg
dec
push
xchg
scas
ficom
sub
pop
mov
jne
pop
out
cmp
xor
(bad)
cwde
hlt
pop
jmp
cmps
cmp
fisttp
sti
pop
imul
mov
sub
mov
sbb
pushf
aaa
aam
push
sub
in
shr
adc
and
mov
mov
push
push
and
mov
js
push
mov
mov
xor
ins
jmp
mov
mov
into
je
mov
adc
ret
aas
(bad)
and
call
lds
cmp
popa
daa
daa
mov
push
retf
stos
xchg
and
add
push
mov
xor
es
sbb
int
push
mov
mov
inc
xor
scas
in
mov
pop
inc
sbb
out
sbb
jle
test
sub
dec
pop
lods
(bad)
mov
push
add
mov
jp
(bad)
call
bound
cmp
pop
in
pushf
in
xor
repz
(bad)
and
xor
in
sbb
outs
cli
xchg
jl
mov
into
mov
or
mov
movs
add
or
cmp
adc
sub
xchg
inc
ret
ins
push
lds
mov
xor
aaa
inc
aas
and
(bad)
mov
xor
mov
mov
jmp
add
xor
cmp
adc
jo
or
(bad)
mov
jg
push
ret
aad
push
inc
cmps
adc
inc
cmp
jg
(bad)
daa
xchg
outs
adc
adc
xor
mov
scas
sti
pop
inc
das
jnp
sub
jbe
in
sahf
mov
pop
push
sub
mov
or
loopne
ja
aas
into
fwait
stos
popf
rcl
ror
cli
push
js
or
mov
adc
mov
dec
add
xor
sub
xor
enter
imul
and
mov
cmc
mov
sub
jns
xchg
int3
popf
mov
push
mov
jmp
dec
scas
mov
jnp
or
xor
xchg
cmp
mov
sub
mov
icebp
or
xchg
or
adc
cld
or
xchg
pop
(bad)
mov
lods
push
and
ins
lods
mov
push
out
scas
add
idiv
icebp
data16
pop
jne
inc
xlat
jle
jnp
pop
shl
mov
push
mov
xor
add
addr16
popf
push
scas
out
ror
sahf
xchg
int3
and
push
bound
movs
add
push
xor
mov
pusha
sahf
fist
scas
sub
adc
jmp
adc
dec
cmps
dec
das
popf
lahf
test
lahf
mov
mov
mov
(bad)
in
dec
and
inc
inc
adc
pop
rol
or
mov
add
and
sub
jae
xor
loop
jge
mov
add
add
gs
xor
(bad)
mov
jbe
aad
and
idiv
sub
mov
jns
mov
ins
or
aam
(bad)
pusha
push
(bad)
sbb
in
mov
mov
leave
jecxz
pop
pop
jmp
bound
pushf
cmp
jge
mov
aaa
je
and
push
or
sbb
push
jns
sub
cmp
pop
ret
stc
adc
sbb
imul
(bad)
imul
clc
inc
mov
xchg
fsubr
jl
push
movs
jmp
jbe
dec
pop
adc
mov
pop
sub
lahf
stos
rcl
jmp
adc
adc
fwait
pop
leave
mov
sti
out
and
adc
pop
dec
cmps
xchg
and
test
add
jge
xchg
and
icebp
sti
popa
ret
aas
mov
jg
out
mov
and
jbe
push
scas
xor
imul
sub
cdq
cmp
adc
pop
pop
mov
ins
xor
shr
cmp
pop
push
and
pushf
adc
mov
inc
dec
popf
icebp
fiadd
inc
add
mov
ror
pusha
hlt
mov
dec
pop
mov
add
adc
push
jmp
mov
das
jmp
and
mov
xchg
icebp
stc
fcom
fistp
out
xchg
adc
pusha
jecxz
sbb
ja
or
push
in
scas
ss
sbb
les
pop
add
jg
pop
xlat
mov
jl
mov
inc
push
(bad)
in
shl
mov
xchg
adc
add
adc
and
repnz
scas
cmp
aam
scas
mov
stc
(bad)
sub
stos
(bad)
les
xchg
faddp
pop
xor
add
int
dec
sbb
std
pop
jle
pop
mov
add
pusha
jmp
ss
je
mov
int
sub
mov
nop
js
ficom
mov
cmp
jp
push
shl
scas
push
shl
retf
add
xor
add
out
rcl
fnsave
lds
push
enter
pop
ret
mov
xchg
cmp
jae
xchg
out
or
push
bound
sti
std
in
repnz
mov
mov
mov
sub
push
mov
adc
mov
test
das
mov
jno
scas
cmp
or
push
icebp
add
lds
xor
fnstsw
repz
push
xor
ret
es
stc
inc
or
iret
in
aam
dec
(bad)
inc
aad
mov
and
push
repz
imul
xor
fnstenv
sbb
mov
das
test
jge
cmp
cmp
sbb
or
pop
jne
outs
mov
ins
rcl
ffree
cmp
push
dec
push
push
test
shl
scas
test
xchg
loopne
mov
fimul
sub
jecxz
sub
cmp
or
adc
fs
dec
test
jb
mov
leave
inc
and
fiadd
loope
movs
rcl
popf
sbb
hlt
mov
dec
(bad)
jmp
push
mov
sbb
in
or
cmp
shr
jmp
mov
xchg
ror
inc
jns
mov
es
xor
push
xor
in
push
sbb
adc
ins
push
jecxz
and
lock
and
push
adc
mov
in
scas
xor
sti
inc
add
jae
dec
pop
cld
mov
ja
xchg
or
cld
push
mov
sbb
std
test
stc
add
mov
adc
mov
je
pop
add
xchg
aas
or
repz
lods
outs
aad
xchg
sti
or
movs
mov
(bad)
ss
pusha
xor
inc
retf
or
int
mov
dec
scas
repnz
hlt
jmp
xchg
cmc
inc
cmps
out
in
cmp
mov
fidiv
mov
mov
mov
adc
pop
jmp
cmp
adc
test
inc
cld
dec
xlat
and
inc
mov
xchg
adc
push
dec
gs
fs
pusha
(bad)
fidiv
call
add
int
cmp
push
clts
popf
lds
sti
loope
ror
sbb
fimul
xchg
or
daa
out
rcr
dec
mov
nop
lock
push
popa
and
mov
pop
add
adc
push
shl
jb
in
(bad)
mov
cli
jge
(bad)
aam
sub
inc
dec
cmp
mov
in
test
dec
add
jecxz
jg
and
pusha
mov
out
stos
fldcw
and
test
inc
and
push
out
cli
out
push
repz
idiv
jnp
cld
push
fimul
inc
aaa
leave
cmp
call
xor
xlat
cmps
mov
mov
enter
mov
xor
int3
sbb
lds
fadd
jecxz
add
push
or
and
movs
and
outs
ret
pop
jno
aad
mov
push
fisub
xor
and
cmp
outs
pop
(bad)
fnstcw
and
fisubr
pop
jmp
jmp
test
xor
jle
lahf
pop
(bad)
popf
sbb
icebp
mov
xor
mov
stc
call
add
in
pop
nop
stc
inc
push
frstor
retf
jl
and
nop
push
rcr
pop
add
adc
loop
into
dec
push
loope
movs
cs
sahf
iret
cmp
cmp
mov
out
je
inc
xor
sub
sub
mov
xor
stc
je
pusha
stc
jae
pushf
cwde
cmp
(bad)
or
gs
cwde
ror
cmc
push
adc
sbb
add
pop
je
clc
sahf
and
aam
test
push
add
out
imul
movs
xchg
mov
mov
xor
mov
and
mov
push
xlat
xchg
xor
jecxz
js
ret
test
adc
pop
repnz
icebp
dec
jecxz
sti
sbb
sbb
pop
leave
aaa
jmp
lods
icebp
lds
inc
or
adc
cdq
adc
(bad)
out
sub
daa
js
cmp
ss
call
lods
xchg
dec
mov
push
add
jle
mov
scas
pop
je
and
add
lods
push
mov
lods
bound
and
pop
ror
jle
pop
adc
push
cmp
lods
or
in
pop
sbb
adc
call
sub
outs
xor
gs
xor
xor
pop
data16
les
jns
inc
add
pop
jb
push
and
jmp
add
scas
add
lods
retf
xor
aad
cmovle
mov
adc
scas
aad
int3
ret
hlt
jnp
push
rcl
jmp
jne
test
xor
xchg
js
rcl
sahf
pop
popf
iret
(bad)
sub
leave
jbe
mov
ret
ds
adc
rol
in
jle
pop
mov
and
pop
loop
ror
shr
dec
cli
cmps
fs
cmc
push
add
xor
mov
fidiv
mov
int3
adc
repz
push
mov
xchg
sub
adc
dec
popa
adc
mov
fwait
icebp
or
sbb
cmp
fwait
mov
test
xor
loop
or
repnz
retf
add
and
arpl
ds
xlat
push
sub
imul
dec
mov
fsub
inc
mov
mov
jae
(bad)
fcmovnbe
mov
call
mov
add
xor
push
imul
dec
xchg
mov
dec
dec
pop
imul
mov
(bad)
(bad)
sti
jno
sahf
dec
mov
fs
daa
jecxz
jmp
or
stc
stos
scas
push
popa
mov
or
inc
push
out
inc
jmp
dec
out
pop
inc
push
outs
push
out
out
ins
xchg
jne
or
and
test
repz
mov
pop
mov
push
dec
mov
or
jl
cmp
popa
enter
daa
(bad)
adc
sahf
pop
sub
sbb
cs
sar
pusha
xchg
xor
dec
and
sbb
test
xor
sar
sub
xchg
xchg
sbb
test
add
mov
xor
ss
test
dec
adc
arpl
in
repnz
int
retf
retf
add
xchg
xor
inc
push
into
mov
pop
or
outs
xchg
xor
xor
aaa
les
loope
int
cld
sbb
idiv
cmp
fild
fnstsw
inc
mov
fnsave
mov
inc
shl
adc
hlt
scas
rol
add
sub
adc
mov
push
jecxz
test
push
jecxz
jbe
or
push
jle
jnp
retf
call
adc
jns
les
fdivp
push
add
fdivrp
ins
xor
inc
mov
push
lods
mov
or
xchg
addr16
cmps
inc
ins
enter
mov
loop
pop
pop
fmul
mov
push
xor
lods
mov
stos
adc
xor
div
shr
jecxz
pushf
push
jge
in
test
rcl
in
or
or
out
fsqrt
inc
in
or
dec
inc
rcr
mov
sub
lds
and
pop
ffreep
mov
push
mov
sbb
loop
aaa
fwait
pop
(bad)
cmp
shl
xchg
not
jno
and
jmp
add
es
(bad)
jno
sti
pop
inc
xor
clc
pop
lahf
xchg
and
popf
fwait
lahf
inc
test
sbb
pusha
sub
add
retf
mov
sbb
and
out
dec
jle
ja
pusha
cdq
jp
popa
test
out
cli
push
les
jae
or
lock
mov
loopne
iret
mov
jg
shl
lock
retf
push
(bad)
jno
xchg
push
clc
jmp
or
pop
pushf
xor
cmp
(bad)
test
call
aas
inc
adc
jne
add
pop
enter
(bad)
aam
test
xchg
add
aam
pop
out
ins
dec
push
imul
push
in
sbb
or
fwait
and
mov
fild
repz
xor
push
mov
sub
mov
jae
or
mov
cmp
rcl
retf
jbe
pop
pop
rcr
inc
jmp
mov
cld
loope
adc
test
cli
adc
ins
cmps
outs
inc
shr
dec
inc
xor
xchg
add
add
dec
outs
imul
fidivr
and
jle
pop
inc
(bad)
jecxz
loop
jne
popf
dec
aaa
mov
mov
mov
push
stc
retf
outs
adc
retf
int3
mov
cmp
addr16
inc
mov
fsub
jns
mov
jmp
ins
sahf
push
hlt
and
pushf
inc
out
dec
pushf
jb
mov
mov
arpl
mov
retf
add
pop
addr16
fstp
test
out
jne
mov
sub
mov
and
sbb
xchg
stos
and
lods
and
add
popf
push
pop
xchg
nop
ret
jb
out
ss
sbb
jg
inc
jne
sti
push
fwait
pushf
jecxz
cmp
pop
bound
mov
in
scas
sbb
test
mov
fld
adc
or
(bad)
std
imul
and
cmp
not
into
stos
jp
repnz
mov
bound
in
cmp
add
(bad)
xor
test
loopne
movs
pop
push
lea
mov
push
idiv
in
pop
shl
sbb
cmp
bound
pop
aad
in
in
adc
iret
pop
or
xor
add
mov
sbb
mov
adc
movs
ins
ins
clc
fwait
xchg
inc
cli
or
aad
mov
movs
aaa
dec
and
int3
hlt
sbb
clc
jmp
outs
cwde
cmps
dec
loop
ja
test
out
call
push
stc
pop
fs
fwait
xchg
xor
aam
pop
mov
stos
inc
push
test
(bad)
jne
cmps
repnz
jne
or
hlt
jne
rcl
stos
xor
sbb
xor
loopne
xchg
pop
repz
repz
sbb
in
sub
mov
mov
sbb
jo
sbb
inc
call
push
add
mov
or
and
push
and
xchg
sbb
sahf
xor
movs
fst
inc
mov
ret
shl
sub
sbb
bnd
stos
sub
lock
in
and
popf
idiv
or
jne
cmp
ret
aam
sbb
movs
pop
push
cmps
dec
cli
lock
outs
sbb
dec
xchg
sub
ror
sbb
xor
(bad)
dec
test
push
push
sti
cld
ret
pop
js
retf
iret
stos
es
fcmovbe
cmp
(bad)
fwait
pop
cli
xchg
jmp
sbb
bound
mov
div
push
aad
push
push
pop
jb
mov
popf
inc
inc
fisttp
jge
and
add
adc
dec
push
(bad)
pop
(bad)
push
aaa
cmp
cmp
and
aas
ret
jns
loope
loopne
adc
(bad)
ds
loope
add
inc
in
push
jl
mov
and
xchg
loopne
shl
scas
xchg
je
xlat
jb
pop
xor
ror
bound
cmp
mov
push
or
fsub
call
mov
div
lds
in
and
and
stos
leave
xchg
push
jp
inc
or
xor
ins
jae
push
inc
mov
and
jmp
in
xchg
cmc
mov
shl
movs
iret
and
cmps
jns
(bad)
sti
push
out
lods
dec
dec
lods
loopne
shl
arpl
test
push
pusha
js
and
retf
sub
mov
mov
test
rcl
fdivr
jmp
inc
and
mov
mov
add
dec
popf
adc
push
inc
xor
sbb
mov
loop
pop
xchg
aaa
jbe
fidiv
jecxz
adc
mov
popf
repz
push
sub
adc
add
push
cli
and
sahf
dec
jno
enter
(bad)
lods
mov
jg
mov
into
rcl
jb
inc
inc
icebp
psllq
push
lds
daa
sti
inc
ins
sub
jp
test
dec
push
inc
xor
popf
mov
test
jmp
inc
shr
es
mov
xchg
das
cmp
cmps
push
cmp
movs
xor
jle
push
add
mov
hlt
mov
int3
sbb
push
xor
call
lds
push
test
cmps
mov
cmp
jno
and
mov
(bad)
dec
jge
adc
in
dec
pop
pop
pushf
xchg
xchg
push
das
xor
sbb
and
fs
push
push
test
movs
inc
push
jno
(bad)
cld
rcr
xor
pop
mov
test
test
sub
bound
jge
mov
xlat
pop
pop
cmps
pop
cmps
fisub
sbb
les
arpl
inc
push
imul
pop
jp
hlt
out
(bad)
iret
jmp
mov
xlat
add
mov
jbe
add
es
arpl
sbb
int
xchg
lds
xchg
or
aam
inc
pop
cli
call
loopne
jo
and
push
cmp
xchg
outs
loope
pop
adc
cmp
popa
xor
dec
(bad)
leave
ins
popa
lahf
push
leave
sub
cmp
push
sbb
mov
or
add
xchg
pop
push
mov
xor
cmp
cmp
mov
mov
sbb
jecxz
cld
lea
aaa
sbb
fldcw
jns
dec
jmp
loope
mov
out
jne
push
mov
mov
outs
pusha
add
mov
test
cmps
stc
push
or
sub
push
sub
int
fidiv
add
dec
add
lahf
push
enter
imul
cs
mov
cmp
shl
ins
push
xlat
mov
jecxz
dec
jp
ss
out
xor
bnd
daa
icebp
cmps
cmp
push
out
das
mov
icebp
test
test
sbb
loopne
xlat
ins
cwde
pop
sbb
and
cwde
add
icebp
add
repnz
jo
arpl
int
add
loopne
pop
push
sbb
sar
push
aam
retf
cmp
or
lahf
jmp
cs
dec
repnz
loop
sbb
jmp
push
jle
cmp
in
jl
loop
sti
push
fld
mov
sbb
inc
mov
and
jge
pop
adc
dec
sub
sbb
(bad)
daa
test
js
mov
adc
in
pop
scas
sbb
push
push
sar
(bad)
cmc
stos
push
cdq
stos
adc
loopne
add
test
pop
es
adc
fisub
mov
mov
outs
xchg
sbb
mov
jmp
and
in
or
hlt
inc
xchg
les
jns
(bad)
or
jno
shl
xor
lea
jp
das
test
inc
dec
dec
repz
scas
sbb
push
in
rol
daa
mov
in
(bad)
mov
mov
and
idiv
sbb
and
cwde
dec
mov
pop
xchg
clc
adc
and
or
mov
mov
dec
adc
mov
pop
push
mov
sti
in
sub
movs
adc
jbe
push
call
hlt
not
xor
fbld
mov
out
xor
push
pop
movs
bound
scas
jne
add
dec
jnp
cmp
aaa
push
test
and
cld
cmp
push
mov
fs
mov
pushf
jge
in
(bad)
sahf
(bad)
out
imul
(bad)
jo
mov
out
cmp
add
pop
jnp
push
aas
adc
mov
jae
xchg
enter
fwait
les
shl
cmp
shl
(bad)
jmp
sub
jne
test
xchg
and
pop
inc
xchg
sbb
out
in
es
jg
rcr
sti
in
push
inc
clc
sub
xchg
jmp
xchg
outs
fidivr
inc
fwait
add
test
mov
outs
adc
cmps
(bad)
sar
inc
aam
xchg
aaa
cs
mov
ins
cli
jno
loopne
call
fstp
pop
fs
jbe
add
jno
fabs
retf
ja
(bad)
scas
inc
jbe
mov
pop
pushf
jle
mov
jmp
dec
dec
mov
stc
cmp
cmp
stos
pop
fs
sub
adc
and
stos
sbb
aam
jne
call
mov
push
mov
dec
xor
nop
inc
mov
pop
fst
dec
cmp
ja
pop
mov
aam
xor
push
push
or
or
xor
jo
stos
(bad)
in
cmp
mov
or
mov
push
les
imul
rcl
jmp
xchg
int3
inc
adc
and
mov
push
pop
fild
fdiv
or
loope
push
and
mov
lods
push
and
mov
adc
(bad)
stos
pop
mov
push
aam
push
pushf
inc
mov
pop
inc
js
fcmovb
ins
mov
daa
adc
ret
jae
clc
add
enter
iret
cdq
push
push
push
adc
push
shl
ret
jmp
jl
fisttp
sbb
fstp
mov
lahf
(bad)
out
cmp
jae
pop
loope
scas
add
adc
mov
sar
std
mov
ds
cmp
stos
pusha
daa
fisubr
dec
fdiv
(bad)
ficom
movhps
or
xchg
fst
mov
push
push
(bad)
dec
mov
gs
jg
jp
daa
or
pop
iret
pop
mov
mov
fcomp
pop
scas
retf
jmp
mov
jle
fwait
sub
push
(bad)
add
loop
sbb
dec
mov
pusha
ja
rcl
repz
ror
imul
pop
repz
jbe
mov
inc
fs
push
xor
jne
cmp
or
and
js
push
scas
retf
fnstcw
jns
ret
sbb
aam
fnstenv
cmp
int
inc
cmp
and
xor
cdq
xor
jne
cmps
inc
or
mov
and
jecxz
int
sar
test
imul
aas
mov
bound
retf
push
sub
push
gs
or
daa
mov
mov
(bad)
add
adc
hlt
add
popf
sbb
add
outs
xchg
movs
jp
pop
outs
mov
dec
test
js
sbb
mov
in
pop
cmp
aaa
icebp
mov
mov
mov
ror
xchg
repnz
aaa
mov
mov
mov
jbe
mov
pop
push
in
mov
bswap
shl
or
cmc
(bad)
jmp
popa
daa
test
cmps
inc
(bad)
rol
sbb
retf
pop
retf
scas
jns
pop
and
fiadd
xchg
jmp
adc
inc
out
inc
loope
out
xchg
popf
mov
scas
call
retf
jg
cli
cmp
sbb
pop
into
outs
lds
sub
call
jmp
mov
jl
addr16
fsub
jns
dec
pop
sti
dec
sbb
pop
push
adc
jb
pop
pop
lods
retf
sbb
cli
ja
jmp
push
jmp
add
xor
test
daa
sub
xlat
cmps
pop
mov
ja
xchg
and
into
pop
fst
inc
inc
lock
addr16
mov
mov
mov
sar
and
(bad)
xchg
loope
prefetchnta
(bad)
mov
lea
inc
pop
mov
dec
or
retf
mov
dec
das
xchg
mov
jcxz
push
das
sbb
adc
xor
sub
jl
jbe
jp
cmp
jo
test
adc
stos
(bad)
pop
cmp
pusha
mov
cdq
mov
adc
ret
aaa
xor
inc
xchg
aas
mov
mov
mov
mov
lock
jmp
out
not
dec
ss
mov
std
out
(bad)
fs
dec
sbb
xchg
inc
push
adc
shr
lds
in
push
dec
repz
jnp
jb
stc
fwait
cmc
cdq
or
xchg
test
sti
jl
mov
sub
xor
push
ja
shl
mov
div
xor
neg
into
cmps
test
pushf
sub
outs
test
mov
div
or
add
inc
retf
ret
cmp
jge
div
sahf
rol
cmp
xchg
call
push
lds
(bad)
sbb
cld
pop
push
cmps
aas
call
out
inc
loop
ins
mov
mov
push
push
add
and
add
mov
sub
repnz
stc
fisub
mov
mov
loop
loope
mov
bound
mov
push
xor
dec
and
sti
or
retf
mov
dec
inc
mov
scas
push
xor
leave
pop
int3
ins
test
(bad)
popf
dec
popa
mov
lock
push
jne
mov
mov
sub
loopne
or
inc
inc
sbb
int
pop
(bad)
ins
aam
arpl
or
lods
scas
(bad)
pop
pop
sbb
rcr
daa
sub
test
rcr
push
js
cmp
sub
sub
popf
cmps
daa
cld
stos
adc
or
add
lahf
stos
mov
out
push
int
mov
cmp
es
jae
xchg
pop
mov
mov
in
sbb
fisttp
and
outs
mov
loop
fisubr
data16
mov
imul
out
xchg
xor
jnp
pop
sub
mov
and
(bad)
fwait
pushf
push
and
test
rol
and
sub
jmp
ret
jmp
or
out
jmp
arpl
lods
sahf
adc
pop
jge
out
ret
mov
pop
js
mov
or
and
pop
mov
or
inc
cmps
fnstcw
mov
pop
ss
(bad)
cmp
cmp
sbb
push
fisub
cmp
xchg
mov
or
add
xchg
je
adc
mov
nop
mov
adc
imul
mov
imul
cmp
neg
pop
mov
movs
mov
sbb
bound
jle
mov
add
mov
cs
inc
mov
pop
add
lds
movs
dec
xlat
imul
cmc
adc
inc
movs
adc
adc
and
arpl
push
dec
sar
and
and
sub
jno
sar
and
adc
sbb
test
mov
xchg
call
xor
cmp
daa
adc
xchg
xchg
mov
cmp
inc
arpl
aad
xchg
inc
inc
ja
inc
(bad)
jmp
(bad)
out
xlat
push
outs
pop
and
or
gs
dec
xchg
push
mov
cmc
mov
xor
sub
ficom
jecxz
and
mov
fidiv
cdq
or
je
ja
mov
popf
xor
loope
mov
xchg
ss
in
sub
and
outs
lahf
mov
jg
jbe
cmp
add
wbinvd
dec
xor
mov
push
or
test
mov
les
inc
cmc
inc
xchg
(bad)
dec
scas
bound
jnp
pop
mov
enter
in
cmps
ffree
out
mov
leave
fbld
jae
cmp
loope
adc
ds
nop
lea
loopne
xchg
xchg
in
lock
enter
(bad)
test
add
out
xchg
retf
xor
imul
fst
std
jge
mov
and
fild
sbb
add
ret
(bad)
loop
pop
in
inc
xchg
jmp
push
(bad)
lods
stos
movs
in
pop
sub
movs
add
(bad)
jmp
pop
(bad)
cld
dec
scas
jae
mov
xchg
retf
movs
or
mov
movs
icebp
jmp
mov
js
jge
sub
dec
(bad)
dec
or
in
pop
adc
xor
or
jno
out
sbb
mov
rcr
fld
xor
xlat
in
jg
out
nop
lods
dec
mov
xor
(bad)
inc
in
sub
(bad)
int
pop
push
add
(bad)
pop
cmp
pop
and
and
ja
out
or
and
xchg
mov
aaa
mov
loopne
(bad)
xchg
xor
aaa
push
test
and
cmp
mov
daa
fs
mov
or
es
lds
dec
nop
enter
sub
xchg
call
jecxz
adc
push
or
andnps
test
int
dec
daa
jg
pop
mov
mov
xor
rcl
(bad)
sahf
mov
cwde
xor
inc
and
(bad)
sahf
push
lods
in
stc
std
jb
lahf
inc
xor
lds
inc
push
fidiv
iret
ins
jmp
sub
mul
jae
jmp
inc
je
stos
dec
sti
lock
cmps
das
(bad)
leave
xchg
(bad)
das
loopne
mov
clc
adc
enter
or
popf
ret
jmp
(bad)
mov
or
mov
adc
arpl
mov
dec
adc
in
int
daa
dec
ins
dec
icebp
mov
inc
mov
ret
rol
jo
jge
mov
jmp
jbe
ja
movs
fld
in
jg
movs
clc
in
stos
inc
xchg
push
cmp
repz
aam
add
cld
test
mov
jl
ret
nop
fiadd
sbb
inc
xor
in
dec
movs
imul
adc
sbb
fs
add
jae
cld
shl
sub
adc
sub
xchg
stos
rcl
daa
mov
and
in
fstp
imul
and
cmp
jg
dec
mov
inc
sbb
ins
out
add
sbb
add
in
movs
add
mov
aad
inc
push
ret
lahf
ja
dec
dec
mov
outs
cwde
mov
rol
and
cmp
(bad)
loope
lock
push
enter
cmps
sub
shr
dec
shl
vpsrlq
lock
stos
in
sti
or
test
mov
sub
in
jb
lea
mov
fwait
xchg
cmp
stos
retf
dec
mov
fistp
sbb
movs
inc
rcr
inc
jg
xchg
add
dec
push
pop
mov
mov
arpl
nop
mov
pop
fidiv
fisub
fisub
mov
push
test
ds
bound
mov
and
repz
mov
je
add
dec
mov
mov
inc
cmp
(bad)
call
inc
or
(bad)
imul
dec
daa
js
pop
daa
xor
or
fistp
jnp
scas
pushf
add
or
test
jne
mov
inc
mov
inc
mov
cmp
and
nop
mov
sub
push
fs
aam
out
push
cwde
sahf
mov
fwait
ins
pop
aad
fiadd
sub
cs
or
sbb
jbe
sub
mov
out
push
cmps
or
leave
leave
mov
xor
or
in
pop
jmp
xor
in
push
mov
add
call
pop
fistp
pop
or
sbb
mov
mov
aaa
out
adc
push
in
xor
repnz
sahf
push
jb
in
leave
pop
cli
popa
fmul
icebp
xor
pop
adc
mov
cwde
inc
dec
outs
mov
add
stos
mov
xchg
pop
cwde
mov
lods
aad
test
sbb
xlat
movs
xor
ja
jmp
jno
sub
loope
adc
in
jo
pop
dec
stos
xchg
daa
call
in
add
movnti
jnp
adc
lahf
pop
imul
ins
dec
adc
call
pushf
or
sub
sahf
hlt
pop
cmp
test
into
lods
cs
mov
outs
(bad)
in
adc
jecxz
mov
call
add
fwait
repnz
repnz
and
jge
cdq
cmp
or
ins
movs
xchg
xor
push
pop
repnz
nop
xlat
mov
adc
mov
das
fs
adc
inc
hlt
cmps
sbb
(bad)
shr
cdq
data16
lods
xor
pop
mov
dec
imul
jns
push
push
jns
scas
add
or
and
loope
cmp
aaa
sbb
cwde
sar
cbw
xor
jmp
ds
mov
dec
mov
out
mov
aam
imul
pushf
stos
fadd
mov
out
jmp
loop
push
imul
mov
neg
xchg
xchg
retf
jge
push
lahf
popa
leave
scas
xlat
cmp
jae
inc
add
or
and
mov
cmps
jns
into
push
ja
ja
and
dec
inc
xor
into
adc
mov
adc
pop
xor
pop
js
leave
out
imul
pop
jmp
and
inc
cmps
lods
dec
cli
test
into
xchg
daa
(bad)
mul
cmp
retf
call
jae
call
mov
js
loope
fstp
jno
inc
int3
inc
jmp
stos
call
mov
xchg
(bad)
sahf
gs
sbb
retf
mov
mov
out
mov
leave
jno
icebp
sub
jnp
adc
push
out
jne
inc
loopne
mov
es
sub
scas
inc
push
daa
pop
call
addr16
jmp
cmp
or
lods
(bad)
push
pop
xchg
repz
jmp
add
push
mov
ror
mov
jecxz
add
mov
in
rcr
ins
scas
addr16
into
mov
stos
mov
mov
cmps
pop
scas
mov
popf
jl
fst
cmp
mov
jbe
retf
fdivr
dec
cld
lods
popa
into
xor
push
fidiv
and
pop
cmp
js
pushf
xor
clc
add
sub
jmp
lea
ss
mov
push
stc
and
cmp
sbb
push
cld
inc
(bad)
jl
cmp
daa
retf
push
dec
cli
outs
loopne
add
dec
out
repnz
xchg
mov
adc
fs
mov
ss
mov
sbb
cdq
sbb
dec
adc
push
lods
movs
mov
mov
cmp
pop
sbb
mov
push
lea
pop
fldcw
out
mov
arpl
sub
ins
add
and
push
jmp
outs
cld
das
(bad)
stos
pusha
inc
imul
es
fdiv
in
mov
sahf
xlat
mov
clc
lds
jge
mov
fwait
xchg
sbb
rcr
loopne
(bad)
rcr
int3
sar
dec
cdq
cmp
sub
test
jmp
outs
mov
add
daa
adc
push
stos
js
retf
and
(bad)
and
pop
dec
(bad)
pop
xor
(bad)
xor
cmps
das
mov
sbb
and
and
add
xchg
push
pop
mov
out
mov
xlat
test
ror
mov
jl
mov
push
mov
dec
and
shl
sub
test
add
loop
pop
or
inc
ins
dec
out
mov
push
fdivrp
jae
retf
movs
loope
add
mov
sbb
adc
repnz
loope
pushf
ret
popa
jne
lds
cwde
jp
fiadd
movs
cwde
bound
xchg
or
mov
push
addr16
and
(bad)
cmp
out
mov
dec
retf
fnstcw
popf
sbb
enter
pop
sub
movs
sub
loope
adc
imul
out
jno
outs
dec
scas
pop
push
push
cmp
outs
sar
mov
sub
adc
mov
adc
mov
ja
test
adc
fst
mov
mov
cmps
sbb
call
ret
dec
cdq
add
mov
push
imul
mul
fistp
cmp
data16
je
fbstp
or
xor
fs
cmps
pop
scas
mov
(bad)
fist
stos
adc
pop
in
loopne
jmp
inc
mov
lods
mov
and
pop
ins
mov
fcomp
pusha
aaa
jp
inc
lods
in
mov
jo
cld
les
inc
aam
and
popf
dec
sub
push
imul
mov
inc
aam
(bad)
(bad)
jno
and
je
out
outs
neg
pop
xor
inc
cmp
adc
mov
push
gs
jg
pop
sub
xor
lea
dec
lahf
dec
pusha
rcl
cmp
lds
out
repz
scas
or
push
cmps
fcomp
in
(bad)
mov
or
call
or
and
push
cs
loope
retf
pop
mov
xor
sbb
mov
mov
push
cmp
jmp
inc
mov
das
pop
push
adc
test
out
inc
ins
add
cmps
sub
ror
popf
ins
sub
(bad)
int3
out
shr
jae
pop
mov
dec
das
mov
push
enter
mov
scas
ss
jmp
div
cli
es
outs
rol
mov
adc
mov
lods
ret
inc
inc
sbb
add
dec
addr16
iret
adc
xor
add
scas
outs
in
adc
ins
mov
mov
mov
ins
mov
dec
add
fidivr
adc
enter
xor
sub
enter
xchg
xor
inc
jl
lock
xor
ins
xchg
ins
sti
xchg
shr
scas
push
loop
rcr
xchg
hlt
cmp
pop
adc
ins
sub
or
or
jnp
clc
pop
in
mov
into
cld
push
rcl
mov
or
ja
adc
ja
in
aad
add
push
mov
inc
jne
mov
dec
pop
inc
mov
mov
stos
retf
dec
mov
inc
xor
imul
cmc
xor
(bad)
enter
pop
call
push
sub
jge
mov
push
ss
(bad)
jo
test
dec
jle
repnz
leave
jb
or
fist
into
cmp
adc
lahf
retf
mov
jae
lds
rcr
sub
push
cli
xor
cmp
sbb
mov
hlt
mov
out
add
push
xchg
mov
adc
jmp
loopne
xor
das
pop
mov
aaa
lock
mov
dec
xor
into
pop
xchg
pop
pop
mov
pop
push
jne
jo
sbb
mov
inc
mov
test
sub
pop
pop
sub
lods
jl
inc
mov
sete
(bad)
btr
fdiv
jae
cmps
push
les
test
adc
std
adc
daa
pop
lods
or
jmp
pop
(bad)
out
jb
inc
pop
scas
jnp
addr16
dec
aad
mov
retf
sub
iret
pop
mov
je
cmp
out
sbb
call
not
push
sbb
adc
xor
adc
xor
push
imul
push
(bad)
cmp
nop
dec
add
dec
arpl
cmp
pop
repnz
test
jle
jae
outs
cmp
jp
fldenv
dec
mov
retf
out
jmp
std
fwait
stc
xor
nop
sbb
(bad)
jno
push
aam
fwait
pop
xchg
ret
cmp
in
adc
sub
mov
(bad)
js
push
lods
jmp
xchg
nop
jecxz
jno
shl
and
test
cmp
mov
out
push
sti
sub
xor
xchg
pop
loope
mov
sub
inc
cmps
or
cmps
cmc
jno
cmc
ins
jp
add
mov
adc
test
cmp
adc
mov
sti
imul
mov
leave
xchg
pop
fisubr
mov
repz
iret
or
xchg
out
mov
and
mov
cmp
loope
push
out
xchg
ror
mov
pushf
aaa
mov
aas
rcr
xor
mov
push
sbb
lods
and
mov
repz
jecxz
sub
mov
cld
pop
mov
sbb
stos
fwait
jl
lock
repnz
push
out
inc
fisttp
xchg
jo
push
aad
cmps
fcom
int
mov
xchg
cmp
test
pop
cmps
adc
xor
adc
or
sub
scas
shl
test
lods
mov
idiv
fdivp
icebp
and
popf
mov
gs
mov
fmul
aad
sub
jl
fild
aad
int
arpl
int3
outs
aaa
cdq
push
mov
and
mov
inc
mov
ret
ja
sbb
mov
mov
loope
test
pop
sti
jp
jb
fimul
mov
sbb
adc
bnd
dec
repz
sub
cmp
fisttp
sub
jnp
(bad)
outs
ins
dec
in
sahf
push
data16
push
fcomp
or
cmps
jecxz
ins
(bad)
push
nop
in
addr16
cmp
int
jne
jecxz
mov
out
inc
jg
(bad)
std
or
add
ret
scas
daa
ins
mov
xchg
jae
xchg
sbb
mov
push
nop
iret
mov
cmp
xchg
stc
or
add
or
mov
push
sub
lds
daa
in
jp
mov
ja
das
dec
dec
leave
cs
ffree
rcl
retf
ins
bound
push
dec
xor
jge
and
popf
jae
pop
push
outs
lock
ss
cmp
adc
mov
das
shl
jne
cmp
inc
in
cld
or
xor
add
mov
loopne
cmp
add
popa
xchg
stos
jbe
and
ins
adc
data16
(bad)
pop
mov
jmp
(bad)
dec
pop
mov
cmp
xor
movs
loop
lahf
mov
sbb
test
push
jl
pop
mov
mov
aas
mov
repnz
mov
lods
push
add
jle
test
imul
mov
mov
mov
and
scas
jbe
inc
jecxz
call
jecxz
xchg
hlt
sbb
aad
stos
bound
imul
xchg
mov
loopne
div
xlat
sub
aam
inc
sahf
jae
dec
jmp
pop
retf
aas
pop
xchg
imul
sbb
lahf
pop
pop
mov
(bad)
cmc
cli
into
out
out
addr16
aas
dec
push
imul
xchg
fwait
ret
xor
pop
mov
ins
repnz
adc
adc
daa
imul
pop
cmp
fcmovb
sub
adc
push
inc
inc
mov
add
pop
inc
jae
inc
adc
pop
iret
lods
or
sahf
sbb
push
and
mov
in
adc
push
retf
pop
je
repnz
test
dec
pop
xchg
mov
dec
xor
xor
push
push
xor
scas
(bad)
retf
int3
cmc
loope
mov
pop
jmp
xchg
hlt
retf
inc
add
pop
cld
rcr
push
adc
fistp
fidiv
aam
imul
out
mov
(bad)
and
(bad)
mov
jmp
jle
into
jns
jge
loopne
mov
addr16
fisubr
iret
sar
bound
clts
adc
movs
inc
out
out
les
push
jg
outs
icebp
and
mov
mov
setle
push
mov
gs
sub
add
jo
inc
push
push
ret
mov
cli
jmp
stos
cld
cmp
inc
inc
lods
cmp
dec
imul
icebp
pop
iret
fwait
xor
jno
xor
sbb
rcl
addr16
mov
nop
cmc
push
pop
lods
mov
jnp
mov
in
(bad)
dec
out
and
faddp
add
out
mov
dec
(bad)
sar
or
xchg
bound
inc
icebp
mov
mov
stc
or
pop
sub
retf
clc
js
out
mov
gs
rcr
aam
jb
fsubr
pop
outs
rol
jl
int3
out
pop
retf
jge
xchg
mov
std
adc
test
sub
into
jb
lods
in
xor
bound
fs
ror
mov
and
add
mov
and
pop
push
mov
sti
(bad)
jns
push
pop
and
add
sbb
adc
outs
dec
jmp
ret
sbb
aam
(bad)
shl
xchg
ins
retf
ds
mov
xchg
push
hlt
dec
add
lock
imul
or
movs
rcl
or
shl
xchg
stc
inc
lds
ror
test
or
inc
xor
xlat
scas
loopne
loop
std
push
out
add
fld
pusha
leave
adc
push
loopne
xchg
cmps
fidivr
mov
cmp
xor
cmp
jmp
xchg
aaa
jmp
push
retf
xlat
adc
je
outs
or
mov
js
mov
mov
aas
add
xor
and
adc
mov
clc
mov
mov
ins
and
push
jmp
push
stos
(bad)
iret
sbb
iret
ins
mov
jg
pop
ins
sahf
inc
add
sti
call
sbb
adc
pop
(bad)
dec
jle
dec
aam
aam
neg
rol
(bad)
mov
cmp
scas
mov
adc
push
repnz
and
cld
rcr
push
xchg
lahf
inc
cli
jmp
fbstp
sub
pop
jbe
inc
push
sbb
jo
ficomp
jo
xor
dec
fisub
xor
cmps
jge
push
sub
push
retf
movs
cld
ret
cmp
outs
and
mov
jns
xor
jo
mov
ds
call
push
aaa
mov
jge
add
sub
mov
repnz
test
inc
(bad)
xchg
inc
loop
mov
outs
mov
xor
(bad)
cld
and
stos
js
jns
ins
retf
mov
or
sub
jns
pop
test
in
outs
mov
sbb
sub
cmp
fsubr
ds
inc
adc
mov
ja
and
bound
cmp
not
mov
pop
mov
mov
rcl
daa
sub
cs
or
fsub
cmp
mov
add
cmp
call
ins
iret
ja
jne
pop
mov
test
mov
or
sahf
and
push
or
sub
retf
cmp
xchg
aas
push
and
pop
pop
ins
shl
or
sub
outs
and
mov
sub
(bad)
sub
or
xor
fwait
retf
sub
lock
xor
inc
setbe
mov
jp
das
and
add
retf
jae
lods
fsubrp
push
(bad)
cmp
lds
sbb
arpl
(bad)
aas
sbb
or
pop
ret
jmp
test
jle
bswap
inc
pop
ret
jge
xor
(bad)
(bad)
or
sbb
dec
fcomp
iret
sti
pushf
mov
(bad)
cld
inc
and
(bad)
mov
cmp
sub
push
jbe
fistp
add
mov
xchg
sub
adc
imul
fstp
lea
daa
jns
sub
mov
cmps
ds
mov
lock
popf
int
adc
dec
nop
daa
jbe
sbb
cmp
mov
pop
pop
cdq
arpl
enter
daa
mov
pop
pop
dec
or
xor
fstp
mov
cmp
std
mov
xor
loopne
sbb
dec
push
dec
push
jecxz
imul
scas
or
test
and
fnsave
jg
pop
sub
jp
dec
fwait
xor
or
ret
ja
(bad)
call
in
out
and
mov
push
mov
adc
mov
cmp
sub
jl
xchg
ret
mov
inc
pusha
repz
and
jecxz
jle
sahf
sti
xchg
and
xchg
arpl
sbb
fisttp
sti
icebp
(bad)
(bad)
sub
push
sbb
jbe
inc
fidiv
adc
int3
inc
mov
xor
clc
stc
lods
cmp
in
jb
mov
pop
push
ret
sahf
inc
stos
dec
fbld
inc
ror
add
dec
js
fnstsw
cmp
adc
xchg
dec
push
cmp
xchg
jmp
xchg
jbe
xchg
push
jmp
lods
inc
jmp
rol
pop
or
lods
mov
repz
in
cmps
jmp
mov
int
scas
(bad)
cmp
fisub
lds
push
test
mov
cwde
ret
fadd
dec
jg
xchg
mov
and
jge
cmps
jp
xor
adc
and
cmp
sub
mov
mov
cmp
cmp
dec
pop
xor
pop
add
mov
sar
and
dec
bnd
fidivr
xchg
ins
sub
jnp
xchg
test
dec
xchg
add
out
push
scas
sbb
and
add
and
xor
fcomip
std
out
sub
inc
ror
mov
test
inc
mov
cmp
movs
sbb
cmc
push
stos
add
xchg
hlt
ss
pop
into
div
mov
enter
inc
sub
mov
imul
cmp
in
sti
mov
adc
cdq
ss
icebp
rcl
js
adc
(bad)
stos
mov
popa
mov
pop
mul
add
not
loope
mov
mov
jmp
cld
push
iret
stos
shl
fsubp
jmp
mov
or
and
and
xchg
inc
jno
popf
cs
inc
repnz
sub
adc
imul
cld
mov
xor
sbb
pop
mov
dec
xor
sbb
mov
xlat
push
pop
jmp
jl
shr
stc
mov
jle
in
or
pop
mov
pop
stc
mov
xchg
mov
fs
xchg
push
outs
push
mov
xchg
jg
and
cmp
iret
jle
push
ja
inc
in
in
imul
add
outs
(bad)
out
repnz
sbb
int
mov
xor
(bad)
hlt
push
xchg
jnp
or
loope
xor
mov
xor
dec
or
pop
neg
push
int3
sub
cmc
and
xchg
fdiv
(bad)
pop
repnz
pop
jne
mov
(bad)
cmp
cdq
mov
push
xor
inc
pop
stc
xchg
loope
push
fldcw
lahf
pop
push
mov
adc
das
imul
in
int
jbe
sub
in
xchg
or
int3
sub
mov
mov
push
lock
xor
dec
adc
out
out
jp
mov
push
sbb
xor
jg
jb
pushf
dec
inc
fs
and
nop
dec
mov
(bad)
mov
test
imul
mov
js
add
sar
sbb
lods
shl
push
icebp
enter
and
jae
xlat
pop
movs
inc
ffree
std
popa
dec
push
movs
sbb
call
std
loopne
cs
sti
push
mov
enter
sti
pusha
pushf
dec
jmp
cmc
dec
repz
mov
jle
in
push
and
cmps
in
imul
and
test
stc
imul
mov
add
jbe
repz
adc
dec
cmc
adc
lock
jge
mov
dec
popa
inc
dec
dec
ror
addr16
(bad)
mov
xor
fild
dec
mov
sub
popa
repnz
loopne
cmp
das
clc
jmp
cmp
sbb
gs
cmps
xchg
(bad)
ins
gs
add
(bad)
mov
sar
and
jmp
cmp
test
scas
xchg
or
cli
mov
inc
add
hlt
pop
in
mov
add
pop
data16
fistp
gs
mov
xchg
pop
sub
into
xor
add
cld
cmp
and
subps
xor
imul
jecxz
hlt
add
jle
repz
scas
ss
jbe
jns
into
movs
(bad)
mov
xor
shl
pop
mov
ds
outs
or
fs
frstor
xchg
loop
test
(bad)
cmp
ins
(bad)
aam
cmp
fimul
mov
push
lock
repz
sti
fstp
lods
sbb
and
outs
push
cmp
dec
ret
fs
push
and
iret
cmps
adc
cmp
and
jo
jmp
sbb
push
pop
ins
cwde
push
sbb
sub
xor
xchg
pop
arpl
int
ficom
shl
ds
mov
mov
loop
fs
out
jmp
sti
arpl
test
std
(bad)
stos
pushf
cli
push
push
pop
rcl
ret
out
adc
int3
leave
ror
cdq
es
arpl
jge
retf
cmp
cmc
mov
test
pop
push
jno
stos
pushf
add
nop
call
outs
adc
hlt
add
or
ret
sti
rcl
ds
and
and
inc
mov
test
loope
into
fdivr
jnp
dec
inc
fdiv
mov
js
icebp
push
dec
std
or
call
mov
shr
and
ss
iret
push
call
mov
jae
imul
inc
ficom
out
sub
mov
rcl
imul
(bad)
retf
ror
pop
adc
xchg
clc
jp
call
jl
mov
sub
xchg
stc
sub
jg
push
cli
shr
push
mov
clc
push
add
mov
adc
dec
repz
into
pop
leave
loopne
loopne
dec
test
add
inc
and
pop
mov
in
and
dec
push
jb
es
sbb
push
push
shl
pop
rcr
rcl
adc
mov
lock
dec
pop
jmp
lahf
outs
out
repz
jo
imul
divps
(bad)
mov
xchg
test
out
icebp
xlat
rcl
or
xlat
push
outs
mov
add
pop
(bad)
or
mov
out
enter
(bad)
jg
cmc
cmp
or
mov
mov
sbb
test
(bad)
jo
test
pop
dec
pop
inc
cmp
loope
lock
scas
mov
fdivr
adc
pop
add
pop
cmp
inc
cmps
int
bound
mov
push
rcl
shl
cdq
addr16
jae
sbb
inc
scas
mov
jb
leave
mov
lods
popf
inc
cmp
pop
push
loope
jg
shl
mov
mov
ins
jmp
mov
jmp
mov
in
out
xchg
cdq
inc
iret
push
xchg
fild
push
adc
scas
sub
ffree
(bad)
sub
add
(bad)
mov
shl
pop
xor
or
test
ja
lahf
adc
adc
xchg
mov
pop
stc
imul
mov
je
xor
jns
mov
stc
adc
movs
jle
mov
jle
mov
jp
jnp
dec
call
pop
dec
sar
fwait
pop
adc
out
sahf
jle
in
jb
loope
sbb
mov
loope
data16
sub
jmp
push
jg
gs
out
xchg
sub
sbb
ror
push
jae
arpl
imul
ins
push
fs
dec
movs
and
dec
cmc
lea
imul
dec
dec
scas
fs
imul
or
sahf
mov
xchg
pop
dec
mov
inc
dec
pop
jb
cdq
mov
cli
or
and
fwait
sub
cmps
xor
xor
mov
dec
ss
xchg
ins
popf
lds
push
jbe
imul
into
mov
cmp
inc
mov
mov
je
mov
movs
push
inc
aas
movs
sub
aad
push
arpl
add
sub
pop
sbb
lods
inc
lods
sub
add
scas
test
xlat
cdq
mov
call
jmp
push
add
test
into
push
jg
scas
shl
and
jb
sub
(bad)
mov
pop
dec
xchg
dec
rol
test
sbb
push
mov
or
hlt
dec
push
data16
popf
xchg
aad
dec
arpl
fisttp
subps
and
sub
dec
adc
push
jecxz
in
or
pop
cld
test
out
pop
push
and
jb
xchg
out
push
icebp
call
mov
mov
inc
push
cmp
jecxz
int
pop
loop
mov
lea
lods
std
or
xchg
or
or
mov
popa
jecxz
mov
add
hlt
int3
push
pop
cli
inc
mov
fwait
add
(bad)
pop
movs
dec
fstp
sub
mov
jmp
push
aad
add
mov
fst
mov
in
or
push
mov
fwait
int3
loope
jmp
lods
loope
xor
add
cmp
cwde
test
dec
ins
outs
add
sbb
and
dec
outs
fmul
jp
dec
inc
dec
mov
sbb
jmp
cs
stos
fisub
add
iret
jb
push
ds
and
hlt
sub
jl
test
sub
mov
push
or
mov
jo
mov
mov
mov
imul
push
(bad)
arpl
push
push
out
imul
jne
pop
mov
lea
mov
push
arpl
shl
pop
fidivr
xchg
and
pop
inc
nop
fcomp
fild
jbe
data16
sti
stc
xor
arpl
(bad)
xchg
les
push
(bad)
mov
jo
out
mov
and
mov
add
pushf
xchg
loop
adc
pop
test
push
repnz
or
sub
xchg
add
les
xor
add
adc
mov
xor
cmp
in
in
xor
xchg
sbb
add
sbb
add
mov
repz
hlt
xchg
xor
rcr
jnp
cld
jno
ins
retf
lahf
repz
loop
xchg
push
jge
jnp
cmp
mov
nop
enter
stos
cmps
mov
or
ja
rol
mov
mov
xchg
test
fsubr
out
fld
les
mov
ret
lods
inc
jl
lods
xlat
frstor
add
push
(bad)
scas
mov
jle
inc
cmps
clc
jg
out
(bad)
mov
mov
rol
jbe
or
mov
push
bound
mov
movs
pop
idiv
jp
movs
mov
sysret
pop
cwd
sbb
cmp
sbb
sbb
and
mov
mov
out
out
int3
jne
adc
push
aaa
pop
fbld
xchg
nop
loope
fstp
cmp
arpl
lahf
fiadd
mov
out
pushf
inc
movs
xor
retf
outs
push
inc
rol
mov
cmp
jge
popf
repnz
pop
out
fst
ss
adc
mov
nop
mov
pop
mov
loop
cwde
imul
or
arpl
xchg
je
mov
scas
sub
and
push
nop
pop
adc
call
sbb
push
mov
stos
pop
jo
pop
cwde
retf
scas
and
mov
sahf
out
movs
sub
icebp
pop
xor
ret
leave
shl
jb
leave
cmc
mov
inc
mov
dec
lea
lods
mov
or
push
mov
pop
enter
sar
and
adc
adc
pop
dec
mov
mov
lods
cld
in
es
sbb
cmp
mov
and
xlat
ficomp
push
and
pop
pop
add
xor
or
and
push
test
fimul
and
lahf
dec
xor
outs
lods
cmc
sbb
push
push
imul
xchg
loop
jns
fnsave
jge
popf
adc
mov
lods
or
imul
adc
fcom
mov
dec
cwde
rcr
pop
(bad)
dec
(bad)
xchg
add
sahf
push
sub
jb
cwde
sbb
stc
dec
inc
mov
ret
ins
sub
test
ret
ret
mov
jl
push
test
jmp
jmp
aaa
push
fld
cmp
push
adc
adc
fcmovb
pop
fst
test
in
xor
xchg
mov
pop
in
xchg
popf
out
popa
jecxz
call
or
jge
cmp
push
(bad)
fdivr
lods
dec
xchg
aam
lods
sub
fadd
push
je
mov
pop
ins
das
je
fwait
push
push
loop
call
inc
or
xor
in
cmp
stc
out
push
pop
mov
test
sar
xor
test
repz
mov
js
push
push
and
push
stos
and
ficom
xchg
mov
(bad)
xchg
(bad)
lods
xor
mov
sti
push
enter
je
or
dec
repz
iret
call
add
dec
mov
and
cmp
mov
jnp
sbb
sub
clc
sub
je
mov
ret
cmp
aaa
rcl
nop
xchg
sbb
mov
ret
cs
pop
es
adc
sbb
(bad)
pushf
cmp
mov
mov
xchg
dec
jp
lods
pushf
inc
cmp
pusha
adc
scas
adc
add
dec
pusha
(bad)
fsub
dec
pop
cli
mov
jns
mov
mov
adc
and
mov
xor
xchg
(bad)
xlat
call
jb
ror
jge
cwde
fldenv
loope
outs
test
movs
push
lods
les
fs
cmp
jmp
and
mov
mov
adc
out
sbb
mov
ret
xchg
pushf
jae
push
and
and
push
jle
xor
mov
xchg
and
sbb
mov
inc
cmp
push
fdivr
lods
sar
sub
inc
push
mov
rol
call
pop
cmp
add
xor
cmp
inc
out
in
dec
jecxz
jno
mov
dec
repz
shl
cwde
xor
outs
test
aam
sbb
push
mov
xchg
call
fimul
dec
inc
jo
hlt
bnd
xchg
aas
(bad)
mov
sbb
rol
(bad)
sbb
sbb
shl
sbb
mov
cli
or
arpl
fstp
pop
jle
jl
aad
rcr
jb
leave
fdivr
aam
fdivr
(bad)
daa
sbb
das
shl
je
pop
test
not
adc
sbb
into
jg
sbb
push
jecxz
mov
mov
push
xchg
mov
pop
retf
out
add
arpl
pop
dec
add
nop
inc
dec
(bad)
leave
lock
out
jmp
xchg
dec
frndint
arpl
sbb
jnp
jp
xchg
pop
jmp
xor
and
cmp
mov
sbb
dec
cld
sub
div
sbb
push
mov
call
sub
xchg
lahf
push
mul
sub
fist
cmp
imul
inc
add
repnz
test
popa
(bad)
ror
pop
push
cdq
mov
sub
and
mov
xor
xchg
cld
mov
jg
inc
fimul
or
gs
popf
xchg
jne
in
pop
cmp
jmp
std
pop
cs
out
outs
rcr
ret
out
adc
sbb
fwait
jmp
adc
pop
or
fimul
js
dec
(bad)
div
mov
pop
xchg
jp
fistp
shl
or
ret
bound
pop
xchg
test
clc
xor
idiv
in
xor
les
inc
push
cdq
mov
fsubr
test
fsubr
leave
dec
sbb
(bad)
rcl
pusha
cmps
xchg
mov
mov
add
add
es
lods
aad
mov
fdiv
and
pop
es
adc
or
adc
xor
mov
into
push
ficom
rcr
mov
sub
dec
xchg
push
mov
stos
mov
push
rol
xor
std
mov
call
ret
push
idiv
(bad)
cmp
rcl
imul
pop
jnp
mov
jge
(bad)
push
mov
pop
aam
fstp
ja
jmp
xchg
add
fnstsw
push
mov
push
xchg
mov
dec
out
in
clc
xchg
pop
adc
test
inc
es
inc
add
jnp
jns
(bad)
ins
rcl
inc
push
(bad)
sub
adc
fsubr
out
xor
push
pop
jnp
clc
clc
mov
add
imul
cmps
pop
das
je
or
cmp
xor
imul
jg
mov
nop
(bad)
test
or
stos
stos
pop
xor
sbb
enter
gs
test
loopne
mov
stos
cmp
jmp
mov
popa
and
inc
das
out
retf
(bad)
repz
gs
mov
repnz
call
lds
les
pop
adc
mov
stos
jmp
repz
mov
sar
mov
sub
enter
pop
push
mov
adc
lods
inc
inc
fsubr
out
mov
mov
mov
and
push
ins
pop
cmp
xchg
outs
hlt
jno
data16
test
ret
outs
stos
outs
xor
arpl
xor
dec
and
adc
scas
xor
pop
mov
pop
pushf
adc
xor
in
lea
sub
sahf
push
mov
int
cwde
(bad)
mov
jecxz
jg
lock
adc
pop
imul
in
lds
iret
lock
cmp
lods
mov
int
inc
shl
bound
or
pop
(bad)
and
icebp
dec
leave
jp
fmul
cmps
or
sub
imul
mov
mov
add
add
sti
movs
pushf
add
cli
pop
push
xchg
dec
xchg
pop
add
or
imul
mov
mov
loop
add
or
fadd
mov
jae
loop
pop
addr16
jbe
outs
stos
xchg
icebp
(bad)
dec
xor
jp
adc
dec
aam
xchg
xor
cmps
pop
retf
dec
push
outs
icebp
cli
out
jae
inc
js
xchg
call
retf
dec
push
(bad)
jle
and
mov
mov
inc
xchg
(bad)
dec
mov
mov
xor
xchg
outs
sbb
jmp
inc
mov
lds
xchg
(bad)
ret
and
sub
hlt
push
fxam
adc
pop
xchg
ror
mov
mov
rol
cli
inc
push
jo
(bad)
pop
je
test
inc
ret
fld
and
(bad)
lods
into
mov
dec
fmulp
mov
pop
call
nop
shl
daa
daa
xchg
(bad)
lods
not
or
sbb
mov
xchg
cmp
inc
inc
inc
push
dec
ror
jl
outs
(bad)
sub
jp
inc
fwait
mov
sub
leave
mov
loopne
add
xchg
add
cmp
pushf
xor
das
shl
or
cmp
inc
loope
sar
sub
aad
push
inc
dec
sbb
(bad)
fs
cli
into
pop
or
mov
dec
adc
cmps
(bad)
loope
sub
jns
stos
(bad)
sahf
mov
hlt
jnp
sbb
cdq
add
fisttp
jp
inc
cmp
mov
adc
sub
rcr
mov
or
xchg
lods
or
cmp
jle
pusha
pop
xor
mov
fist
aad
loopne
pop
inc
ror
mov
or
mov
lods
hlt
push
outs
push
adc
jns
jl
xor
xor
aaa
and
cmp
out
(bad)
int3
jg
dec
std
ins
xchg
shl
out
sahf
imul
iret
fist
add
inc
dec
mov
pop
xchg
sub
adc
pop
xchg
jmp
mov
mov
dec
mov
imul
lock
call
stos
scas
add
addr16
jp
xor
push
mov
xlat
dec
aaa
sar
sbb
cmp
dec
inc
in
push
fstp
and
lds
loop
mov
stc
and
(bad)
xchg
jo
fwait
sub
mov
sub
fdivr
cmp
push
dec
call
mov
mov
pop
std
or
mov
lods
mov
cmps
cmps
cmp
jmp
xchg
fisttp
sub
ret
inc
repnz
cdq
mov
or
cli
aas
lods
shr
cli
icebp
jb
or
out
es
add
mov
aam
sbb
iret
cmp
in
iret
iret
stos
pop
aam
and
mov
jecxz
mov
and
mov
cmps
cmp
pop
cmp
(bad)
(bad)
imul
add
out
xchg
repz
and
aam
test
xor
fs
jle
inc
hlt
shl
inc
push
stos
retf
ret
shl
push
test
dec
xchg
aam
mov
fbld
in
xor
mov
push
pop
jnp
push
scas
cbw
and
jg
or
mov
inc
cli
dec
push
mov
fstp
fadd
clts
adc
pop
sub
in
dec
xor
dec
repnz
lahf
jnp
sbb
xchg
sub
fsub
mov
push
xchg
outs
or
push
or
push
dec
cld
outs
adc
out
neg
rcr
test
fisttp
inc
scas
ret
push
test
idiv
sbb
xchg
adc
stc
jecxz
es
sbb
inc
inc
fsub
aam
js
aas
sti
jmp
fdiv
pop
adc
ret
in
xor
cmp
gs
sbb
mov
sub
scas
(bad)
mov
jne
inc
in
repnz
fnstsw
sub
out
outs
mov
mov
push
jmp
test
xor
or
xor
pop
jno
add
xor
inc
mov
push
xchg
ret
or
enter
and
imul
sub
lods
sbb
(bad)
imul
repz
push
mov
pop
js
sub
fisub
cmp
scas
fld
sti
dec
mov
sti
xor
cmps
xchg
push
out
out
or
xor
push
mov
add
loopne
jge
push
add
inc
movs
sub
(bad)
pop
mov
cmps
dec
out
jnp
jmp
pop
inc
cmovns
pop
jmp
dec
mov
push
or
rol
sub
dec
dec
ins
add
mov
js
xor
scas
call
jge
sbb
sbb
call
mov
call
shr
and
jmp
jae
or
(bad)
popa
scas
xor
(bad)
outs
mov
ss
cmps
add
mov
test
pop
xor
loop
in
lds
out
xchg
(bad)
mov
cmp
in
inc
mov
dec
cwde
mov
addr16
movs
jb
jne
rol
push
mov
enter
cmp
fistp
fild
lea
(bad)
cmp
pop
mov
ss
adc
mov
cmp
imul
inc
or
lods
loopne
pop
fild
dec
and
(bad)
es
jmp
push
push
xor
sti
dec
packssdw
and
gs
and
mov
mov
inc
dec
add
mov
dec
js
or
stos
adc
mov
clc
hlt
mov
sbb
adc
(bad)
jmp
outs
fidiv
imul
aam
in
cmps
sub
push
add
mov
gs
loopne
popa
push
adc
dec
imul
xchg
dec
ficom
test
adc
les
cwde
add
test
adc
nop
push
or
mov
pop
or
push
adc
data16
jno
sbb
push
aam
mov
fstp
sbb
dec
inc
or
loopne
mov
shl
cld
xchg
jg
push
ins
pop
ss
sub
cmp
movs
push
loopne
ja
lds
ret
mov
adc
movs
ds
xchg
imul
rol
addr16
jb
bound
xor
pop
xchg
fnstsw
dec
pop
dec
aas
and
fild
mov
stc
mov
dec
(bad)
mov
add
int
arpl
xor
mov
or
cmp
jmp
add
cli
sahf
cmp
cmp
nop
out
xchg
repz
shl
and
mov
sbb
cmp
mov
rep
das
dec
in
adc
call
jno
pop
and
aam
adc
cli
bound
push
mov
adc
cmp
cmp
bound
in
xor
push
inc
dec
call
xor
iret
shl
fs
jmp
adc
ins
xchg
inc
mov
push
add
das
icebp
nop
or
(bad)
or
or
add
xchg
int
das
fdiv
dec
cli
loopne
sub
sahf
(bad)
sub
nop
cmp
int3
and
cmp
lods
sub
addr16
mov
sbb
hlt
clc
jl
std
jg
std
mov
sbb
out
xlat
shl
and
sbb
pop
add
xor
(bad)
or
test
mov
push
test
fild
in
sub
icebp
push
cmps
mov
repnz
mov
movs
jp
or
xor
daa
pop
imul
jle
daa
(bad)
aaa
sub
fbld
push
and
popf
jns
ret
sbb
pop
sbb
ror
pop
cmp
or
ja
ja
inc
xor
sbb
(bad)
lods
out
call
rcl
push
dec
loop
fidivr
mov
(bad)
mov
xor
ins
mov
rcl
int3
gs
sub
pop
rol
push
add
push
and
and
aaa
or
sti
ficom
push
imul
fwait
je
out
int3
icebp
cwde
imul
xchg
xor
mov
mov
xchg
sub
call
cmp
cmp
jle
ds
sbb
out
push
add
pop
test
mov
push
pop
mov
jp
and
add
cli
pop
cmps
test
fwait
and
movs
pop
mov
xor
push
mov
loopne
leave
mov
mov
jns
jp
cmc
fcmove
(bad)
clc
add
int
paddusb
es
and
mov
adc
mov
dec
jge
mov
repnz
retf
mov
dec
sub
push
add
test
ds
or
aad
or
mov
jp
jl
cmc
mov
jl
or
call
jmp
cmp
jmp
pop
xor
(bad)
sub
jg
ficom
and
push
mov
dec
add
fistp
clc
jl
jl
add
ficom
out
in
fcom
pusha
adc
or
pushf
and
loope
mov
pop
jno
rcl
fld
out
or
ror
fdiv
ret
je
cmp
comiss
loopne
ja
rcr
mov
ret
jb
test
mov
inc
xor
je
xchg
inc
push
sbb
sar
clc
jmp
inc
fiadd
cli
scas
loop
xchg
retf
add
ja
int3
and
pop
daa
mov
or
hlt
cdq
push
pop
mov
xchg
sub
fpatan
ins
lods
push
mov
daa
adc
push
lods
add
inc
enter
jg
and
(bad)
pop
test
popf
or
popa
scas
mov
ins
mov
and
loop
mov
inc
mov
jge
adc
pop
cmp
movs
sbb
cli
shr
mov
fwait
addr16
imul
pop
dec
cmp
pop
ret
adc
or
inc
xchg
(bad)
xlat
push
pushf
jp
jne
pop
call
xor
push
push
inc
and
repnz
or
xor
pop
dec
(bad)
mov
add
sub
jnp
loope
add
hlt
fcomp
mov
jge
lods
pop
push
inc
movs
addr16
xchg
xchg
out
sbb
lock
or
fdivr
xchg
gs
adc
ret
add
or
push
jmp
push
push
mov
leave
and
pop
add
add
mov
sbb
int
dec
scas
sub
aad
dec
shl
mov
in
(bad)
push
push
mov
add
test
in
xchg
mov
push
call
fidiv
rcr
aad
mov
jmp
mov
jmp
and
rcr
cmps
std
xor
mov
and
sbb
leave
bound
lahf
push
imul
dec
sbb
mov
mov
sbb
jno
add
jecxz
(bad)
aaa
and
outs
in
mov
scas
retf
iret
jno
xchg
call
pop
push
fwait
pop
pop
arpl
fidiv
mov
jnp
pop
stos
mov
push
add
stc
sub
adc
adc
in
push
aad
std
cmp
jnp
fs
xchg
mov
push
sti
aaa
fnsave
add
scas
lds
sub
and
pop
aaa
dec
into
fwait
call
jb
aam
out
mov
push
pmaxsw
aas
popf
sub
fimul
xchg
jecxz
out
not
sbb
scas
sbb
cmps
xchg
cmps
cmps
hlt
jo
xor
aas
(bad)
push
(bad)
sub
mov
pop
cs
add
mov
cmp
adc
mov
xchg
sti
push
dec
loope
and
inc
push
arpl
lahf
mov
les
xor
dec
repz
shl
std
iret
data16
and
ret
add
fwait
cmps
call
add
mov
cmp
retf
shl
xchg
adc
test
pusha
jecxz
add
jle
xor
sub
retf
xor
outs
jp
sub
sbb
aam
scas
sbb
push
cmp
ja
xchg
pushf
xor
aad
adc
(bad)
inc
mov
stos
push
retf
and
or
aam
dec
xchg
pushf
add
cld
cmp
or
cs
adc
cmp
clc
cmc
std
xor
repnz
dec
and
sar
es
mov
jmp
fist
pusha
mov
mov
push
fnstsw
fcom
ror
and
ins
dec
das
jmp
div
mov
lods
or
mov
outs
nop
movs
inc
pop
and
fbld
inc
xor
dec
adc
es
pop
ss
mov
add
pop
repnz
aam
add
adc
mov
inc
xlat
std
cmps
hlt
mov
sar
and
ins
jmp
add
lock
ret
or
pop
inc
push
mov
or
sub
pushf
dec
fidivr
xchg
push
add
popa
es
call
pop
sar
imul
stos
fwait
movs
int3
mov
outs
jl
jmp
sub
mov
cmp
dec
out
enter
(bad)
ret
int
and
add
iret
jo
das
mov
xchg
jecxz
inc
fdivr
fdivr
pop
mov
cmps
das
cmp
je
mov
and
in
or
shl
jae
or
loop
xchg
aam
mov
ret
cpuid
inc
das
or
shl
(bad)
jnp
bound
adc
test
fdiv
scas
mov
fwait
dec
push
cmp
repnz
sbb
xor
inc
sbb
stos
push
or
imul
push
addr16
pop
mov
jne
ucomiss
or
out
mov
addr16
pop
ins
out
(bad)
outs
jle
sti
push
jae
loop
pop
mov
aas
outs
dec
jge
jp
inc
imul
out
or
cmc
sti
inc
mov
mov
dec
cmp
das
sub
adc
push
pusha
clc
(bad)
sub
shl
or
dec
sbb
mov
pusha
retf
test
cmp
inc
cli
int
cli
jg
loop
pop
jo
inc
sti
icebp
xchg
das
fidivr
ins
push
mov
stos
adc
dec
adc
repz
mov
das
add
montmul
cmps
add
imul
iret
aas
inc
jp
jp
pop
mov
add
adc
daa
push
sub
pop
pop
fmul
cdq
cmps
test
cmp
adc
fwait
call
push
mov
jns
fdiv
jecxz
cli
movs
sahf
sub
push
jl
daa
jb
repz
retf
pop
jmp
sub
pop
into
cmp
arpl
sahf
mov
mov
mov
or
and
or
sbb
cmps
xchg
mov
mov
fnsetpm(287
ret
cmp
sub
fs
sbb
lahf
sbb
cmp
cwde
adc
inc
mov
jl
nop
enter
sbb
das
ins
ret
cld
ins
lock
test
out
sub
mov
inc
jecxz
xchg
call
int
adc
ins
jnp
leave
cmps
and
cwde
jb
sti
(bad)
cmp
call
pop
scas
sub
popf
cmp
idiv
pop
push
sahf
and
dec
push
(bad)
int
imul
xchg
sub
mov
xchg
inc
jbe
and
lods
in
adc
dec
jl
push
cmp
arpl
aad
(bad)
js
sbb
ja
mov
cld
arpl
sub
mov
or
xchg
dec
dec
push
xor
aas
and
inc
sahf
xchg
jno
imul
int3
aad
pop
and
push
stos
scas
dec
jbe
push
lds
push
out
cmp
call
(bad)
xchg
mov
add
leave
adc
fdivr
(bad)
mov
cmp
mov
ror
outs
cmp
enter
cmp
int3
sub
or
cmp
sbb
addr16
or
loop
fst
or
jmp
ja
pshufw
loopne
xor
rcr
sub
imul
aam
addr16
enter
outs
push
mov
sub
fst
outs
cmc
inc
lahf
repnz
xor
test
mov
jae
fucomip
call
(bad)
cs
and
bswap
cdq
add
sbb
add
movs
pop
adc
adc
pop
in
cs
mov
aad
(bad)
pop
enter
fld
je
mov
sbb
mov
lods
mov
mov
add
mov
add
mov
inc
sub
mov
mov
out
push
int
adc
inc
xlat
cdq
hlt
data16
pop
and
add
xor
mov
(bad)
xor
cmps
mov
jb
es
(bad)
ins
out
and
test
mov
mov
aas
jb
mov
pop
mov
icebp
adc
loope
inc
fiadd
mov
cmp
sub
ins
and
rcr
inc
push
push
mov
out
sub
jb
(bad)
cmp
sub
xor
repnz
push
inc
in
les
jb
test
pop
fmulp
adc
lds
push
sar
inc
stos
fst
jecxz
movs
sub
fwait
cmps
push
adc
inc
xchg
js
or
jp
cmp
(bad)
jbe
je
sub
xchg
cmp
jno
mov
shr
ret
fmul
ss
add
and
or
pop
out
dec
in
sbb
repz
xor
adc
retf
pop
(bad)
mov
out
data16
aam
sub
jg
sub
arpl
nop
imul
dec
aaa
mov
sbb
adc
mov
and
jmp
mov
xchg
loope
dec
cmps
mov
add
pop
neg
out
fsubr
inc
aaa
add
lea
pop
mov
mov
adc
add
mov
jnp
inc
(bad)
push
xchg
pop
adc
mov
sub
pop
sbb
add
loop
adc
inc
(bad)
cmp
pop
jmp
pop
or
or
fisubr
mov
sub
outs
mov
cld
clc
jb
pop
std
inc
shl
js
in
xchg
mov
aas
cwde
push
jno
xor
xchg
sub
dec
mov
cdq
jnp
in
dec
jmp
cs
xchg
inc
aaa
lds
pop
adc
lahf
retf
push
or
mov
fild
mov
into
and
inc
sbb
inc
fwait
mov
retf
fs
les
push
imul
jbe
sub
jl
mov
jg
jmp
sbb
cmp
test
xor
fwait
retf
out
xchg
mov
add
mov
sar
mov
dec
or
shl
jno
out
cmp
test
or
jmp
or
dec
cli
ja
dec
(bad)
jmp
xor
ficom
jge
(bad)
fsubr
frstor
mov
pop
retf
ss
and
mov
xor
inc
rol
out
enter
sub
push
nop
mov
out
movs
adc
cmp
in
repz
lea
add
mov
push
mov
dec
imul
(bad)
xchg
push
test
jle
cmps
pusha
mov
scas
mov
ficomp
push
mov
test
hlt
add
push
jo
ja
xor
cmp
and
xor
add
jb
sar
popa
push
add
mov
jecxz
(bad)
inc
cmp
and
cmc
rol
ds
popa
and
xchg
test
mov
mov
(bad)
or
(bad)
or
repz
dec
adc
dec
mov
dec
push
inc
mov
jae
loop
call
pop
mov
xchg
in
add
and
sti
iret
je
sub
jmp
adc
cmp
fs
xchg
cmp
cld
repnz
xchg
addr16
xchg
imul
push
jns
fdiv
cli
push
int3
sbb
ret
mov
sbb
jge
loop
sub
out
mov
xchg
jmp
inc
sbb
push
lahf
fs
lods
test
lds
retf
repz
js
and
jmp
pop
sub
jle
pushf
ficom
mov
push
mov
jmp
arpl
cmp
mov
ret
rol
loopne
daa
pushf
in
mov
test
aad
repz
adc
cwde
cmp
jo
mov
cdq
imul
lahf
add
lea
jge
aam
sti
dec
scas
jge
mov
lods
add
xor
mov
jo
mov
sti
add
push
cmp
push
rcl
pop
jbe
arpl
adc
dec
cmp
nop
repnz
sub
sbb
inc
not
loope
daa
imul
xor
(bad)
ror
sbb
fs
imul
inc
adc
jo
mov
and
lods
ja
push
test
mov
jg
daa
daa
inc
adc
push
mov
push
shl
inc
xor
test
xor
jmp
mov
(bad)
mov
push
xor
aas
scas
call
lods
in
inc
clc
mov
sar
mov
into
js
adc
jae
mov
sub
and
jecxz
or
jne
push
das
int3
cli
scas
inc
cs
jp
push
adc
sub
cmp
shl
xor
inc
cmps
dec
dec
and
loop
push
sbb
push
fdivr
and
push
loope
arpl
ins
imul
(bad)
push
out
ins
jb
out
fadd
jmp
sub
mov
xlat
inc
xchg
cmp
iret
jge
mov
lock
addr16
push
lahf
push
bound
cmps
sbb
cmp
retf
inc
shr
inc
xchg
mov
inc
mov
dec
pop
sahf
sbb
rol
test
pop
(bad)
jge
xchg
(bad)
pushf
lahf
or
mov
mov
lods
nop
fistp
mov
mov
adc
cwde
mov
orps
aas
cmp
push
inc
mov
mov
adc
jge
cmps
stos
xor
jl
xchg
test
sbb
pop
pop
xchg
mov
jbe
popf
repnz
lahf
div
test
in
push
ja
jge
cmp
mov
dec
push
jo
bound
mov
pop
retf
jg
arpl
sbb
add
daa
xchg
outs
xchg
shl
pop
(bad)
dec
iret
jp
mov
jmp
push
movs
stos
and
je
push
test
je
test
mov
mov
retf
xor
mov
and
cmp
retf
jb
or
mov
and
je
or
mov
push
lock
leave
inc
cwde
ss
call
adc
add
ret
ret
mov
pop
cmp
xor
repnz
xchg
mov
rcr
push
leave
in
test
dec
dec
fwait
sub
call
out
sbb
jmp
daa
lahf
mov
adc
xchg
outs
into
jge
mov
mov
jae
sub
adc
test
inc
ja
imul
xor
ret
das
jbe
lock
in
sahf
lds
nop
mov
(bad)
lahf
sub
das
cdq
jg
ins
in
sub
adc
lahf
mov
fst
nop
repnz
sbb
ins
pop
jge
nop
test
jmp
sub
mov
sbb
xor
inc
popf
gs
mov
cmp
das
inc
pop
add
stc
(bad)
sub
dec
mov
cmp
push
xor
stc
xchg
add
dec
stos
ins
in
imul
jp
repz
sub
iret
loopne
js
leave
sub
xlat
add
adc
add
movs
jle
je
jl
mov
sti
movs
ja
jl
push
push
div
mov
mov
pop
push
pop
lods
aaa
push
add
xchg
test
cwde
movs
int3
dec
or
out
mov
inc
ss
pop
adc
shr
mov
jb
fldl2e
mov
cmps
jo
push
inc
loopne
dec
aam
not
mov
lds
in
sti
adc
retf
ret
jnp
popa
sahf
test
jg
add
ins
or
into
adc
sbb
dec
rol
push
dec
rol
sub
cmp
movs
or
leave
or
loope
or
xchg
xor
je
mul
(bad)
in
mov
xchg
retf
push
jg
dec
push
cmp
sbb
or
pop
jg
mov
icebp
xchg
fsubr
mov
in
mov
call
sub
sahf
leave
and
mov
xchg
mov
(bad)
jecxz
cmps
and
mov
mov
mov
pop
pushf
aad
cmp
movq
xor
loop
lock
mov
hlt
fcmovne
fiadd
mov
sbb
xchg
std
and
dec
pop
out
ss
xchg
bound
dec
sbb
dec
pop
and
cmc
movs
jmp
push
les
pop
idiv
fdiv
pop
jb
and
std
mov
xchg
stc
dec
jmp
fs
dec
xor
adc
mov
fxch
sub
dec
out
jmp
es
dec
xchg
jne
push
inc
rcr
popa
jge
or
nop
pop
sub
loopne
movs
jno
mov
mov
adc
neg
jg
out
pop
leave
aas
out
scas
mov
pop
mov
imul
sub
adc
pop
push
lock
mov
jns
dec
sub
push
fwait
out
stc
xchg
sbb
retf
inc
or
leave
mov
fsub
test
and
scas
mov
js
in
shr
inc
adc
int3
or
mov
xchg
inc
mov
ds
add
add
(bad)
stos
pop
stos
mov
push
xor
out
mov
fwait
lods
(bad)
retf
xchg
mul
sti
push
sbb
scas
out
lahf
cmp
ss
jp
test
jne
movs
mov
ds
out
scas
mov
outs
in
dec
sbb
scas
mov
clc
out
jle
adc
retf
fimul
ins
jnp
mov
xor
imul
lea
sub
pop
xchg
cdq
and
in
push
loopne
cmps
fcmovnb
retf
push
cmp
jmp
lock
ret
push
mov
lds
lahf
jb
bound
stos
movs
jle
sbb
int3
(bad)
dec
icebp
dec
fistp
fwait
outs
icebp
les
push
push
adc
inc
in
jp
pop
retf
pop
mov
and
popa
pop
inc
(bad)
stos
pop
aad
in
dec
inc
cmp
aam
mov
dec
xchg
jae
xor
cmp
out
push
outs
cmp
mov
xor
jg
sbb
pop
dec
loopne
add
not
mov
xchg
lahf
ret
inc
inc
mov
mov
and
dec
gs
pop
add
dec
pop
retf
push
repnz
xchg
add
movd
dec
push
mov
cmp
mov
scas
or
call
mov
rol
fisttp
enter
inc
ret
lock
mov
jmp
(bad)
adc
mov
sub
xchg
popf
cmp
cmp
hlt
cmp
out
inc
mov
xchg
shr
in
jl
aad
inc
lahf
cmp
xchg
fld
(bad)
daa
sub
repz
movs
cmp
pop
aad
pop
loope
push
jge
shl
sbb
movs
mov
sub
push
cli
(bad)
into
popf
jp
fstp
test
arpl
ret
inc
test
movs
mov
sbb
sub
sub
jmp
xor
(bad)
cmp
mov
add
sub
xor
xor
sbb
cwde
push
inc
stos
pop
sub
mov
out
cdq
push
adc
ret
dec
aas
sub
rcl
sbb
addr16
fsub
out
mov
sbb
stc
mov
xchg
inc
push
les
push
add
repnz
ror
or
dec
xchg
shl
rcl
mov
jle
jmp
retf
jl
jnp
pusha
jmp
ret
mov
cdq
mov
cmp
mov
push
hlt
cmp
(bad)
add
adc
cwde
push
push
bound
cs
sub
fistp
mov
out
dec
mov
mov
es
pop
cmp
xchg
div
cdq
loope
xchg
sub
mov
mov
imul
in
cmc
push
rcl
jecxz
jne
mov
nop
adc
xchg
(bad)
dec
test
rol
push
add
jecxz
and
call
xchg
push
pop
jl
mov
xor
(bad)
mov
sbb
fwait
pop
push
aaa
(bad)
mov
fwait
inc
mov
xchg
test
sar
dec
adc
jnp
mov
cmps
xchg
jmp
lds
(bad)
pop
adc
sbb
aad
mov
xchg
adc
bound
sar
test
sub
sbb
ret
sbb
mov
sub
retf
ret
iret
loope
jmp
lea
je
push
inc
cdq
imul
repz
push
outs
fsubr
mov
mov
push
mov
add
or
xor
in
fwait
adc
adc
add
or
shl
pop
retf
sbb
adc
aaa
hlt
adc
push
adc
dec
push
pop
jne
lods
mov
and
xor
and
mov
fs
ja
test
and
addr16
pop
mov
mov
push
leave
out
dec
adc
push
retf
shl
fidivr
mov
aad
push
out
scas
rsqrtps
sbb
fs
(bad)
sub
cli
stos
sbb
dec
mov
bound
jno
movlps
inc
nop
ret
sbb
data16
or
xor
call
outs
mov
fidivr
sub
jbe
adc
pop
mov
pop
or
mov
jno
push
push
fild
and
mov
add
jb
mov
sub
lock
xchg
addr16
fld
cmps
inc
mov
jo
add
mov
in
inc
sbb
xor
or
rol
fwait
aas
loop
leave
or
sbb
nop
fdiv
std
jle
cdq
sti
es
pop
aam
rol
mov
mov
cmp
inc
in
outs
in
daa
dec
xchg
into
mov
adc
xor
into
aam
xor
in
xchg
rol
mov
call
es
hlt
shr
cmps
cs
loope
mov
fcomp
cmp
fisub
fild
pop
xchg
into
ror
lock
sti
icebp
sub
neg
and
dec
inc
cmp
mov
mov
pop
push
(bad)
ss
sub
adc
cmp
pusha
imul
(bad)
push
dec
and
jne
pop
popf
hlt
popa
xchg
out
xor
les
loope
lahf
pop
enter
add
or
lds
jmp
sub
dec
je
fcom
mov
xor
out
shr
or
aad
scas
cmps
jnp
popa
inc
jmp
mov
pop
out
popf
pop
rcr
sbb
dec
scas
(bad)
sub
and
out
jl
repz
or
dec
sbb
dec
int
inc
pop
add
call
adc
es
lahf
out
jle
cmp
jbe
push
clc
ja
adc
xlat
push
dec
cli
test
addr16
sar
mov
out
dec
adc
aas
inc
(bad)
call
daa
je
movs
add
scas
and
xchg
aad
adc
aad
dec
ret
arpl
in
mov
outs
mov
push
pop
pop
int3
inc
loope
mov
(bad)
in
dec
and
add
add
int3
fisubr
mov
mov
dec
xor
shl
lods
test
cmps
jmp
mov
cs
fisubr
pop
cld
or
bound
das
ds
dec
not
cmps
lods
into
jnp
jb
je
popa
test
adc
test
daa
int3
mov
and
cld
sub
bound
add
hlt
push
stos
mov
push
mov
and
fisub
dec
sub
loop
pop
mov
push
mov
aad
lods
and
mov
sti
out
cmp
mov
push
and
lods
xchg
(bad)
sbb
pop
mov
(bad)
xchg
push
cmp
(bad)
movs
jno
xchg
mov
xchg
jmp
pop
(bad)
mov
cmp
lea
outs
xor
or
dec
sbb
test
daa
jecxz
inc
(bad)
sbb
jns
mov
mov
int
aam
int
pop
mov
popf
xchg
hlt
adc
(bad)
aaa
test
mov
add
mov
cmp
dec
cwde
repnz
pop
gs
das
shr
pop
mov
loop
popa
jp
cmp
(bad)
ret
(bad)
lods
in
outs
jmp
and
mov
push
adc
imul
inc
fmul
pop
xchg
or
mov
(bad)
push
mov
icebp
jp
push
loope
and
imul
mov
sub
imul
xchg
mov
es
dec
cmp
jl
mov
aas
fdivr
cmp
pusha
push
mov
sub
add
xor
test
or
rcl
inc
add
sub
adc
fwait
hlt
fmulp
cmp
fidiv
sub
or
push
adc
adc
mov
or
add
icebp
adc
sub
push
inc
xor
xor
xchg
repnz
idiv
add
xchg
sbb
cli
cli
and
push
mov
push
retf
jns
adc
mov
mov
xchg
jo
int3
push
ret
add
sahf
inc
or
cdq
sbb
mov
pop
rol
xor
inc
stos
iret
lods
lahf
xchg
outs
lods
mov
adc
push
aas
stc
pop
ja
cmp
or
gs
and
test
cmc
xchg
inc
(bad)
pop
imul
sbb
mov
mul
test
push
fs
sbb
loop
jo
daa
cmp
xchg
fldenv
mov
jno
sbb
jg
(bad)
iret
inc
sbb
movs
mov
sub
inc
fsub
mov
adc
xor
push
pusha
ret
inc
clc
mov
aaa
in
jae
(bad)
jecxz
jne
retf
cmp
sbb
sub
ret
cmp
add
xor
sbb
mov
iret
or
xchg
cmp
or
pop
test
cmps
add
fcom
shr
hlt
sbb
out
push
add
push
in
pop
jbe
loope
sbb
inc
cmps
and
fist
ret
sbb
ins
cmp
jo
int
cmp
test
adc
xchg
mov
sar
shr
movs
ss
inc
cmp
cmp
mov
sub
test
xor
mov
frstor
inc
add
pop
js
cmp
pop
sub
jb
mov
int3
mov
cli
mov
mov
add
or
test
push
(bad)
shl
pop
push
sbb
jb
pushf
les
mov
or
inc
in
outs
jnp
sub
pop
jmp
pfrcpit2
push
push
fisttp
push
out
sahf
inc
push
(bad)
jp
adc
scas
sbb
popa
lea
push
adc
inc
aas
inc
sbb
out
cmc
out
xchg
xchg
add
movs
push
in
xlat
popf
repz
ror
xchg
retf
push
cdq
scas
mov
push
pop
outs
inc
retf
pop
mov
call
sbb
pop
retf
inc
xor
mov
pop
mov
adc
fcmove
and
popf
ret
mov
jb
xchg
sub
cmp
xchg
aam
cdq
mov
je
test
ins
sub
jp
pop
mov
(bad)
push
out
and
iret
lock
sub
push
jle
mov
mov
or
sub
das
fldenv
pop
jbe
int
(bad)
aad
xor
lods
je
(bad)
shl
shr
scas
movs
lods
cld
repnz
sub
adc
cmps
sbb
shl
sbb
or
inc
jg
mov
pop
fwait
int
xor
loop
fsubr
xchg
(bad)
push
popa
movsx
fsubr
add
and
lds
lds
or
in
inc
xor
sbb
push
outs
dec
sub
adc
mov
(bad)
push
mov
out
repz
fsub
jmp
sbb
push
paddd
xchg
addr16
sub
mov
loop
xchg
call
lock
mov
loopne
mov
sbb
jmp
add
jb
js
jl
mov
add
aam
push
fsub
das
rol
ins
inc
fist
(bad)
imul
or
sbb
inc
dec
jne
jb
mov
ret
mov
arpl
into
sahf
mov
jnp
pop
sbb
push
cmp
xchg
scas
ins
ror
aas
pop
cmp
adc
inc
call
adc
mov
data16
jne
shl
or
shl
icebp
rcl
or
aaa
not
push
inc
bound
pusha
out
xor
out
pop
add
scas
mov
scas
push
and
mov
mov
imul
idiv
add
imul
mul
push
cmps
lds
inc
push
movs
clc
in
or
dec
in
sbb
bound
fmulp
adc
lock
rcl
rcr
(bad)
jle
ror
inc
arpl
sub
mov
loop
dec
or
pop
pop
(bad)
aad
dec
addr16
mov
xchg
ds
pop
mov
and
xchg
cmp
sbb
push
xchg
cs
test
mov
xchg
in
scas
mov
jae
sub
lods
xchg
mov
loopne
in
rol
xor
mov
dec
mov
rcl
jno
iret
xlat
(bad)
loopne
dec
xchg
iret
mov
call
test
std
aam
xchg
sbb
in
mov
sub
popa
and
cld
pop
rol
cmp
std
mov
push
scas
mov
dec
(bad)
pop
xor
cs
push
jge
add
cld
adc
add
fidiv
inc
scas
in
push
jnp
xor
and
out
or
jecxz
stos
mov
fild
and
mov
pop
loop
into
aad
pop
mov
pop
das
inc
int3
imul
pusha
sbb
rcr
jl
stos
sub
outs
int
mov
lock
mov
movs
fistp
sub
ds
adc
jne
fs
and
mov
lds
mov
fucomi
push
dec
arpl
ins
movs
push
nop
xchg
movs
idiv
inc
outs
jb
xchg
add
jmp
jge
arpl
xor
test
sbb
xor
outs
sub
rcr
and
sti
adc
ja
ret
sbb
fwait
ins
(bad)
push
js
arpl
cmps
push
stos
std
fnstcw
push
lods
iret
in
sub
mov
mov
dec
and
stc
dec
and
inc
adc
cwde
je
sub
add
pop
cmp
mov
mov
mov
js
jmp
jmp
jo
ror
cld
dec
sub
mov
sbb
pop
rol
push
mov
pop
and
out
retf
mov
xchg
test
mov
and
fiadd
mov
stc
mov
sbb
xor
hlt
aas
lahf
fst
adc
pushf
xchg
ds
into
cld
test
or
push
mov
and
add
int3
sti
bswap
add
fs
mov
ffreep
mul
and
gs
mov
cwde
jns
pop
js
adc
fsubp
inc
pushf
movd
das
adc
movs
mov
push
shl
xor
jno
ins
pusha
push
mov
test
pop
fwait
imul
push
pop
push
aam
jae
aaa
mov
add
stos
sti
test
inc
imul
pop
jmp
or
cmp
mov
jmp
mov
cmp
sub
repnz
fs
add
ret
out
mov
or
inc
or
jmp
fdivr
outs
push
icebp
push
in
mov
out
mov
jge
lahf
(bad)
mov
xor
cmp
and
out
(bad)
sub
xchg
jnp
or
inc
cli
dec
or
popf
xchg
movs
mov
push
sahf
ins
or
inc
data16
xor
imul
inc
and
jae
shl
sub
or
mov
mov
loope
or
dec
pop
mov
dec
test
movs
add
mov
add
mov
pop
and
cwde
pop
js
aas
adc
pushf
sub
movs
sbb
inc
mov
enter
sbb
xor
cmps
mov
cs
lds
(bad)
aad
jbe
mov
lea
sbb
sbb
call
ret
fdivr
imul
inc
pop
cmps
adc
adc
cmp
int
ds
dec
(bad)
mov
dec
jo
out
shl
movs
pop
sbb
xchg
fild
movs
ror
dec
xchg
out
fwait
movs
loopne
mov
cmp
jnp
scas
cmps
or
cmp
cmp
bound
sti
mov
pop
or
out
into
ds
pop
and
repz
cmps
sub
push
ret
retf
lds
je
adc
and
add
xor
push
dec
and
sbb
adc
pop
add
or
jne
jecxz
(bad)
inc
mov
in
imul
icebp
movs
and
mov
out
fs
push
jge
push
inc
sub
or
sbb
jnp
jle
jno
and
ror
mov
sti
jo
cmc
les
mov
jp
add
push
sbb
adc
and
sub
leave
cmp
mov
retf
fcmovnbe
xchg
retf
xor
inc
and
dec
add
dec
inc
mov
sbb
push
lock
in
ja
popf
ret
cli
in
shl
jmp
aaa
retf
mov
loope
push
cwde
push
out
ss
push
idiv
movs
jmp
sbb
adc
rcr
xor
fiadd
mov
(bad)
fistp
push
sub
retf
sahf
and
add
pop
and
movlps
lods
add
mov
mov
out
in
lds
push
jge
jmp
mov
addr16
ss
push
icebp
cmc
adc
retf
xor
sbb
mov
push
adc
mov
retf
popf
sbb
lock
push
and
push
lahf
sar
test
ret
pop
sbb
test
jns
sub
mov
imul
call
(bad)
shr
pop
out
push
fs
pushf
mov
xor
out
lods
add
push
mov
cmp
cli
pop
aam
xchg
stos
scas
xchg
aas
stc
das
pop
pop
enter
aad
mov
jnp
shr
push
mov
inc
(bad)
outs
adc
jl
std
aas
aaa
loop
movs
shl
sti
clc
push
adc
repnz
ficomp
in
std
sub
scas
xor
xor
sbb
push
in
enter
push
jmp
push
rcr
in
popa
jge
dec
repnz
mov
pop
popf
mov
in
ror
in
repz
aad
call
retf
cs
loope
mov
mov
push
sbb
vunpcklpd
dec
mov
fild
xchg
mov
sbb
in
and
inc
cld
pop
mov
xchg
jmp
(bad)
xor
mov
ins
(bad)
mov
mov
in
or
cmp
add
movs
push
nop
or
btr
arpl
jo
jg
inc
jo
cld
push
or
pop
pop
imul
iret
rep
push
scas
sbb
jb
cmp
popf
sub
ret
or
cwde
cmp
xchg
cmp
fdiv
push
iret
neg
xchg
sbb
cmps
fsubp
jno
adc
sub
xchg
cld
mov
adc
and
pop
mov
mov
mov
out
outs
sbb
pushf
iret
and
movs
sti
fs
inc
cmp
sub
dec
push
sub
daa
add
cwde
fwait
or
mov
dec
aaa
loop
mov
mov
jmp
lahf
inc
mov
push
dec
shl
sub
dec
and
cmp
jmp
mov
fst
push
sar
out
push
(bad)
mov
int3
push
lods
daa
push
dec
shr
cdq
cmp
jecxz
jle
mov
jle
in
adc
ja
lods
je
into
xlat
mov
pushf
lods
and
xchg
push
dec
pop
xor
aas
adc
test
hlt
(bad)
sbb
dec
fidiv
adc
call
add
jl
je
lds
icebp
jmp
sbb
je
mov
inc
inc
icebp
ins
fidivr
lea
mov
addr16
ret
pop
fadd
ins
adc
xchg
jge
addr16
sub
dec
inc
loope
rcl
cmp
aad
imul
sbb
xlat
test
ja
add
jl
gs
pop
mov
pop
shl
xor
inc
sbb
add
or
cmp
cmc
lds
xchg
scas
imul
pop
aam
sub
lock
push
ret
into
mov
lods
jmp
into
scas
xor
push
into
mov
lahf
jg
xchg
sbb
xor
xchg
cwde
je
inc
in
lds
ss
inc
in
(bad)
out
popf
(bad)
mov
xor
cmp
lods
cwde
in
imul
pop
loopne
aaa
std
mov
fs
jmp
icebp
(bad)
cmp
mov
js
(bad)
sub
mov
xchg
ror
mov
jb
xchg
call
push
out
pop
loopne
inc
mov
lds
push
daa
and
jae
adc
dec
xchg
sbb
adc
add
jmp
stos
sbb
cmp
pop
rdtsc
xchg
in
and
test
jl
push
or
xlat
mov
(bad)
sub
dec
sub
call
ja
ins
sbb
mov
(bad)
shr
jo
cmp
sbb
cmc
enter
cmc
aaa
pop
jp
mov
dec
(bad)
or
cmp
push
mov
dec
std
cmc
repz
push
ror
(bad)
cmc
clc
sub
lds
jge
call
add
ror
xlat
jecxz
scas
inc
sbb
pop
int3
shr
(bad)
mov
mov
sbb
cmp
fwait
mov
add
in
leave
adc
addr16
cmc
gs
mov
out
push
adc
push
mov
mov
aam
add
scas
pop
in
mov
ret
fld
sar
cmps
sub
popa
movs
dec
mov
pop
jl
cld
pop
fidiv
cdq
lods
push
popf
fadd
sub
sbb
jne
xor
div
push
jge
dec
sbb
jmp
outs
shl
push
stos
or
mov
dec
inc
cmp
gs
retf
pop
pop
mov
(bad)
xor
mov
movs
or
xchg
movaps
xor
push
cmp
mov
sbb
lds
ins
test
push
pop
adc
nop
push
dec
mov
in
jne
xchg
adc
inc
ds
add
xchg
repnz
into
inc
fmul
lahf
and
fldcw
sti
clc
jge
cmp
aaa
xlat
cmp
cmp
xchg
sbb
jmp
jae
dec
add
push
mov
dec
mov
mov
repnz
daa
je
sti
icebp
lods
xchg
mov
mov
dec
sti
movs
inc
inc
retf
jge
fs
icebp
inc
(bad)
(bad)
cmp
call
mov
ja
outs
cli
pop
cwde
je
iret
stc
cs
into
mov
cwde
ins
sub
rol
jae
add
(bad)
mov
inc
push
mov
fwait
stc
mov
ror
pushf
mov
shr
sbb
fs
hlt
fist
mov
jno
shl
call
mov
and
movs
jne
dec
cmps
cmp
jae
dec
adc
ror
mov
mov
lahf
jnp
in
into
and
lods
sbb
(bad)
push
mov
out
pop
fist
pop
push
pop
add
lods
dec
sub
stos
fst
add
or
mov
sub
pop
or
icebp
sub
call
dec
mov
ins
mov
push
mov
push
repz
sub
xchg
jns
and
dec
ret
sbb
sub
fisttp
sti
xlat
rol
add
mov
pop
pop
mov
retf
ret
jbe
inc
mov
gs
xchg
loop
fs
in
mov
adc
adc
addr16
inc
call
in
and
sub
add
test
repnz
rcr
idiv
mov
hlt
fs
xor
sar
ins
push
adc
xor
jno
fisttp
mov
add
mov
iret
jg
stos
cmp
inc
adc
xchg
(bad)
repnz
mov
in
shr
dec
mov
inc
shl
or
pop
ret
mov
cs
stc
push
inc
jmp
popa
mov
inc
add
pusha
xor
int
test
out
jno
add
lods
dec
dec
add
xor
push
xchg
dec
push
pusha
mov
inc
xchg
mov
cmp
dec
add
mov
or
(bad)
retf
add
lahf
fisubr
ins
out
fld
pop
cli
dec
mov
push
mov
push
jge
jecxz
loop
and
fistp
(bad)
fwait
and
or
mov
sbb
dec
cmc
or
std
and
cli
or
pop
sbb
jns
dec
and
cmc
popa
and
mov
jg
scas
(bad)
push
(bad)
stc
hlt
fs
je
or
ss
clc
adc
sbb
sub
inc
adc
push
call
mov
imul
out
loop
std
xor
mov
jne
mov
addr16
mov
xor
ret
neg
push
ret
gs
fbstp
sub
retf
in
arpl
ds
mov
out
pop
fnstcw
xchg
xor
mov
les
sbb
pushf
add
nop
enter
jmp
push
or
loop
push
pop
jb
push
cmp
dec
out
inc
out
inc
ret
aas
mov
or
push
shl
push
sub
cmp
les
push
push
cmp
fs
mov
(bad)
and
(bad)
add
sar
or
xor
push
cwde
or
in
push
cwde
pop
dec
push
add
not
pop
adc
push
push
sbb
pop
jl
sbb
movs
es
(bad)
data16
loop
ficomp
xchg
jge
sub
cwde
imul
add
loopne
mov
les
ret
push
dec
in
add
or
inc
rol
pop
adc
icebp
into
stos
aad
inc
mov
mov
daa
cmp
retf
xor
add
xchg
cmp
dec
jmp
inc
bound
cmp
mov
ins
lock
cmp
jae
or
jecxz
fdivr
xor
daa
nop
pusha
adc
mov
jnp
cwde
arpl
mov
cdq
and
dec
sbb
cs
fidivr
pop
test
sti
pop
push
or
xor
pop
fwait
rcr
jp
popa
jl
mov
ja
add
shl
inc
stos
inc
aaa
xor
pusha
mov
lock
dec
push
ins
push
jmp
cmp
dec
imul
fs
cmp
and
or
jmp
inc
cli
in
or
daa
ss
cdq
and
test
pop
ret
imul
mov
imul
(bad)
mul
nop
in
add
jno
mov
mov
je
ins
sbb
or
fsqrt
movs
pop
clc
fsub
xor
jae
jo
cmp
or
ret
or
cmp
gs
xchg
mov
jb
fimul
(bad)
jbe
xor
cdq
test
in
ror
mov
out
pop
div
mov
retf
adc
movs
pop
cli
mov
call
dec
jp
or
imul
test
jne
mov
and
shl
jmp
sub
test
jge
push
xchg
add
push
cmc
pop
retf
(bad)
mov
rol
cmps
mov
les
mov
push
jle
movs
iret
(bad)
icebp
outs
mov
xchg
pop
adc
add
loope
loop
cs
push
fisttp
retf
mov
out
das
mov
mov
cld
xlat
xchg
rol
dec
jle
xchg
lods
out
inc
pop
(bad)
xchg
sub
jmp
dec
loope
adc
shr
jb
bound
(bad)
(bad)
jnp
sub
mov
stos
mov
fnstcw
mov
and
sbb
into
clc
out
mov
lods
daa
fwait
mov
imul
jle
sahf
jb
add
call
xchg
cmp
mov
adc
out
sub
inc
mov
adc
bound
sbb
(bad)
fs
push
mov
das
cmp
push
ins
and
int3
daa
adc
push
jl
dec
inc
cdq
test
xchg
xor
jl
mov
jmp
push
cmp
bound
call
push
add
shr
addr16
xor
jmp
popf
inc
adc
out
mov
push
dec
ret
iret
sbb
loope
imul
mov
call
rol
pop
mov
xchg
and
dec
mov
push
ret
lahf
xor
add
shr
pusha
or
sub
fist
popf
hlt
sti
pop
call
xor
sub
loope
lahf
clc
in
not
sub
loopne
fnstcw
mov
lods
mov
ds
or
fcomp
add
mov
cs
push
inc
push
test
and
xchg
retf
and
push
jp
sbb
imul
cmp
fiadd
jle
std
es
add
xchg
lds
popa
sbb
push
test
in
(bad)
cld
es
inc
xchg
sti
jmp
push
mov
test
jbe
test
lods
jbe
out
out
loope
data16
loop
nop
push
(bad)
loop
test
dec
rcr
(bad)
sahf
loope
xchg
mov
fldcw
add
sbb
mov
data16
shl
aaa
ror
dec
jp
bound
cmp
leave
pop
add
fwait
stos
fstp
(bad)
push
in
cmc
iret
mov
setp
in
mov
cmp
push
rol
daa
(bad)
out
mov
adc
and
xor
ffree
daa
sbb
(bad)
mov
cwde
addr16
sub
nop
imul
fwait
mov
xor
loopne
lea
stos
push
xor
xchg
cmp
xchg
jne
xor
sahf
je
add
adc
jo
sbb
adc
test
daa
loope
cmp
sub
sub
add
mov
aad
cmc
sbb
pop
jmp
pop
in
jnp
adc
rcl
arpl
inc
sub
jbe
(bad)
cmc
cmp
add
mov
or
sbb
push
clc
pop
hlt
cmp
scas
xchg
xchg
je
dec
(bad)
das
dec
in
lods
cmp
in
dec
sbb
retf
in
sub
push
add
retf
mov
pop
jmp
mov
mov
push
je
xor
dec
clc
mov
sub
dec
sub
shl
fnstsw
jl
stos
mov
add
dec
in
push
les
int
push
cmp
sub
cld
addr16
stc
out
ins
(bad)
stc
dec
call
sub
cmc
inc
or
out
movs
dec
out
jbe
mov
mov
int3
cmps
dec
std
scas
mov
mov
mov
sbb
aas
cs
add
adc
je
dec
in
mov
or
jecxz
xor
add
sub
fs
nop
adc
and
jge
adc
and
outs
add
out
mov
dec
stos
add
sub
pand
push
sbb
and
xchg
jg
scas
push
fnsave
(bad)
into
imul
repnz
xor
mov
(bad)
jmp
(bad)
daa
dec
lods
add
and
jg
jbe
jnp
loopne
pop
xchg
push
dec
nop
mov
push
mov
jo
shl
std
pop
or
sbb
sub
mov
sar
shl
mov
pop
fild
inc
push
stos
mov
or
cmp
fsub
push
jmp
or
mov
into
add
dec
fwait
into
dec
rol
or
mov
or
jge
mov
cmp
dec
rcr
mov
test
mov
pop
stc
loope
jg
(bad)
loop
lahf
ds
mov
cld
adc
fiadd
push
pop
mov
in
bound
mov
jp
jmp
imul
add
xchg
into
in
test
xchg
adc
out
xchg
into
or
pop
dec
mov
sub
sbb
cmp
in
lods
mov
pusha
loopne
(bad)
push
pop
icebp
pusha
rol
or
fnstcw
addr16
cmc
jmp
xor
jae
mov
mov
inc
sub
jbe
push
xchg
mov
xor
jmp
mov
xor
and
cli
mov
lock
and
fidiv
in
lds
sbb
std
sub
fiadd
or
std
ret
adc
xor
mov
mov
mov
cmps
cs
fistp
mov
sub
xor
xor
xor
lock
or
xchg
xor
mov
imul
push
and
jmp
mov
in
leave
movs
xchg
push
js
aaa
in
call
jecxz
push
addr16
neg
or
rcl
sti
inc
loopne
sbb
in
aas
(bad)
clc
pop
stos
cli
inc
test
push
sbb
scas
rol
mov
loopne
pop
data16
sub
fdiv
aas
retf
mov
ret
cmp
mov
nop
mov
jp
inc
jle
in
sti
adc
push
or
pop
adc
add
dec
pushw
pop
scas
xor
cmc
je
xor
or
pop
jge
xor
in
iret
nop
mov
punpcklbw
fdivr
pop
inc
jle
or
push
jmp
jge
shl
dec
sbb
lds
add
imul
xlat
cmp
aam
sub
sbb
pushf
mov
je
push
cs
popa
mov
and
out
je
popf
mov
sbb
push
cmp
sbb
ret
aas
xchg
mov
cmc
jl
lods
loope
sbb
inc
dec
jbe
push
cmp
fisubr
pushf
cmp
fdiv
sub
dec
lahf
pop
fstp
xchg
hlt
push
mov
sub
mov
pop
adc
mov
adc
push
in
ja
add
cmp
jno
cmp
out
call
mov
push
loope
push
test
es
or
lock
scas
fsubr
mov
data16
sbb
inc
in
jo
jo
in
rol
lock
enter
outs
push
sub
cld
mov
xchg
inc
stc
pushf
sub
sub
ret
into
fld
addr16
adc
mov
adc
aam
or
pop
rcl
in
pop
and
and
jge
xchg
or
pusha
mov
shr
dec
out
push
mov
sub
lods
jno
mov
rcr
push
rcl
das
jne
pop
push
mov
and
movs
adc
ret
xor
push
mov
xchg
cmc
int
push
shr
push
pop
cmp
xchg
fstp
mov
nop
mov
out
mov
(bad)
int
sahf
xchg
std
mov
xor
or
lods
ja
fs
mov
inc
inc
cmp
add
xchg
scas
and
inc
push
jne
sub
cdq
mov
lea
push
fwait
add
adc
movs
cmp
shl
fistp
and
rcr
rol
je
shl
adc
into
fild
cmp
or
aas
sub
pop
outs
or
and
fcom
shl
addr16
xchg
mov
mov
mov
push
jecxz
fisttp
ror
jmp
(bad)
cmps
ror
aas
pop
repnz
push
mov
icebp
pop
hlt
call
aam
scas
popf
cs
(bad)
stc
jmp
lock
jp
fild
mov
dec
xchg
push
jecxz
sbb
xchg
dec
xchg
pop
sbb
or
repnz
sub
jo
pxor
cmp
jne
jns
fs
add
aaa
leave
sub
in
xchg
dec
(bad)
shl
dec
inc
(bad)
loop
ret
adc
adc
push
aam
lahf
loope
cmp
nop
xor
and
lods
cwde
lods
popf
into
outs
xor
xor
ret
push
jo
js
repnz
pop
add
add
ins
mov
or
jnp
cmps
cmp
leave
nop
stos
and
stc
ret
stos
push
pop
addr16
inc
sbb
pop
push
xchg
(bad)
jmp
test
repz
div
(bad)
jmp
or
mov
(bad)
lock
add
fistp
adc
inc
and
dec
scas
mov
dec
jp
xchg
iret
push
outs
repnz
mov
sbb
popf
(bad)
cs
mov
pop
fld
imul
idiv
out
xchg
push
cmc
inc
mov
retf
sbb
mov
pop
jge
scas
fsubr
mov
cmp
(bad)
jo
add
inc
adc
jnp
leave
add
sub
inc
adc
or
push
sbb
mov
aad
out
inc
dec
mov
es
push
add
inc
jno
mov
loopne
sub
dec
movs
sbb
mov
or
hlt
dec
mov
add
fs
add
mov
in
(bad)
jae
jne
fisub
cmp
es
and
sbb
cmp
shr
ficom
fmul
jnp
fild
lods
push
jns
inc
xchg
mov
jns
sub
leave
dec
or
inc
cmp
xor
xor
or
xchg
sbb
xor
(bad)
mov
lods
adc
sub
mov
xchg
add
sbb
inc
push
mov
jmp
mov
inc
das
xchg
xchg
and
xchg
repnz
sub
push
xchg
push
das
xor
push
iret
cmp
loopne
mov
jb
jb
cs
psraw
xchg
sbb
mov
adc
pop
mov
xor
xchg
cmp
nop
pop
hlt
retf
mov
out
mov
and
or
shl
fsubr
sti
jns
add
in
movs
loopne
jecxz
(bad)
les
test
mov
adc
or
aas
jns
movs
fild
jge
mov
jnp
xlat
adc
call
(bad)
jo
push
ins
cs
fwait
dec
pop
xchg
test
sub
add
mov
gs
mov
fcomp
sub
outs
scas
cmps
jo
cmp
pop
int3
repz
fcom
scas
fsub
cmp
mov
sti
mov
(bad)
mov
aaa
push
int3
pop
fbld
dec
cmc
nop
test
or
adc
gs
jae
ficomp
pop
imul
imul
mul
xchg
mov
je
cmps
mov
jg
pop
mov
mov
push
xor
scas
cmps
jle
inc
adc
(bad)
mov
ins
sub
pop
sbb
xor
adc
das
mov
cmp
shl
in
imul
mov
in
add
test
push
hlt
push
repnz
dec
scas
xchg
nop
mov
inc
daa
sbb
jmp
into
stos
rcr
sti
test
outs
mov
mov
sbb
xchg
(bad)
push
pop
pop
(bad)
push
push
inc
jp
add
push
inc
mov
dec
inc
lods
cwde
je
sbb
mov
xor
inc
xor
popa
inc
lahf
add
jg
xchg
fstp
test
jno
cmp
dec
pop
adc
jl
mov
mov
dec
ins
jb
inc
mov
fs
(bad)
in
lea
cmp
daa
xchg
xchg
sbb
pop
inc
mov
sub
popa
xlat
inc
and
mov
mov
mov
xchg
je
sub
int
fwait
sub
inc
cdq
pop
clc
loope
jne
ret
(bad)
mov
icebp
popf
shl
popa
aaa
xor
mov
mov
scas
and
adc
(bad)
scas
xchg
pusha
cmp
mov
dec
mov
push
stos
xchg
test
jb
mov
sub
or
jb
pop
xchg
xchg
aas
mov
test
mov
cmp
cmp
shl
aam
out
popa
pop
sub
ret
dec
xor
fwait
mov
sub
jmp
dec
add
pop
iret
imul
xchg
into
fdiv
popf
std
push
ror
cmp
retf
jns
jne
inc
cli
icebp
test
adc
out
fsubr
mov
data16
mov
stos
add
jp
pop
outs
ins
and
xor
rcr
retf
pusha
int
sar
mov
ret
mov
or
add
mov
outs
cmp
or
mov
mov
in
dec
push
outs
fimul
dec
je
mov
std
mov
xlat
out
aam
int3
lods
jno
adc
jle
inc
jnp
sbb
(bad)
or
mov
repz
and
les
jge
pop
daa
sahf
aad
mov
cld
inc
cmp
and
lods
scas
mov
mov
cmp
fdiv
inc
jmp
jmp
fld
and
pop
out
sub
or
mov
inc
sub
scas
shl
add
adc
dec
dec
lock
test
pop
xchg
jg
add
aas
lods
mov
into
sub
arpl
push
lock
call
out
pushf
mov
pop
mov
sub
cmp
les
xchg
push
imul
sub
and
xchg
inc
mov
fst
push
push
aaa
cli
xor
cmc
sbb
into
mov
xor
dec
arpl
and
test
jle
lods
inc
out
and
xor
repnz
mov
or
sub
and
push
cmps
bound
stos
jl
ficomp
mov
loop
jp
push
xchg
mov
jnp
xor
cmps
pop
fs
xor
das
ficomp
push
sti
ja
movs
inc
sub
mov
stos
pop
rcl
dec
add
fistp
or
cmp
stos
jae
jbe
daa
adc
cli
push
out
mov
or
xacquire
lods
mov
cs
cmp
push
enter
mov
popf
test
pop
mov
enter
dec
mov
dec
xor
inc
xor
mov
mov
jle
hlt
pop
hlt
mov
dec
ret
xor
sbb
cmp
ret
xchg
test
pop
sti
push
mov
std
imul
leave
mov
sbb
loope
out
aas
or
pop
adc
stc
dec
loopne
push
xchg
push
out
push
adc
sub
ins
call
jnp
inc
pop
cmp
xor
test
cwd
iret
xor
adc
cdq
adc
popf
fcmovne
call
and
cli
into
test
adc
xlat
xchg
daa
push
popf
jnp
and
dec
or
imul
jbe
mov
(bad)
cmp
sub
clc
inc
sub
mov
loop
xchg
cmp
add
sbb
sbb
jl
cmp
and
movs
mov
out
mov
inc
adc
cdq
jmp
mov
test
push
xchg
stos
sbb
fidiv
inc
or
lds
mov
mov
sbb
xchg
adc
jg
mov
xchg
push
xchg
stos
mov
and
loope
movs
arpl
jno
push
lea
scas
jno
inc
jae
inc
iret
lods
out
outs
mov
jno
inc
push
pop
arpl
jge
dec
mov
cmp
mov
pop
push
push
nop
pop
or
ins
sub
xchg
mov
mov
(bad)
popf
dec
ror
(bad)
mov
add
in
dec
pusha
lea
cs
fisttp
cmps
in
dec
push
hlt
add
sbb
int
std
xor
(bad)
iret
xchg
mov
push
mov
test
jg
inc
adc
scas
(bad)
aad
jmp
call
or
sub
mov
fbstp
std
pushf
push
cmc
mov
in
ja
jb
xchg
xchg
(bad)
add
jmp
mov
in
or
jg
loop
cmp
dec
sub
(bad)
(bad)
scas
sbb
ja
cmps
cs
fcomp
push
jmp
addr16
loopne
lahf
je
cmp
adc
jecxz
sbb
pop
fucom
hlt
or
outs
or
clc
inc
xor
and
mov
or
jg
mov
scas
jmp
inc
pop
xor
mov
and
clc
sbb
xchg
push
fisubr
sub
(bad)
or
outs
push
adc
xchg
jp
mov
mov
mov
push
dec
in
call
outs
mov
cld
stc
mov
cmps
mov
push
inc
xlat
or
les
sub
cmp
mov
mov
mov
xor
xor
loope
sbb
fisubr
aam
lds
xor
mov
sahf
jmp
xchg
mov
les
rcl
sahf
sbb
add
mov
xor
and
rcr
and
stos
push
icebp
shl
xor
xchg
ds
repz
xor
cdq
adc
mov
in
adc
xor
icebp
mov
bound
lods
pop
stos
nop
in
mov
gs
xchg
xchg
xor
mov
sub
repnz
out
or
push
fld
sbb
adc
pop
xor
hlt
jmp
mov
jge
inc
jb
sbb
enter
push
jnp
into
or
sub
add
or
add
jbe
in
mov
lock
cmps
mov
jb
fbstp
test
jge
(bad)
cs
dec
into
pop
dec
xor
dec
leave
cmp
add
xor
pushf
sub
shr
test
xchg
fnstenv
inc
sub
xchg
int3
mov
pmulhw
cwde
mov
mov
jae
pop
jmp
dec
jo
not
les
bound
test
mov
adc
fst
push
pop
sub
mov
rcr
and
pusha
rol
sub
dec
stos
jmp
push
jge
or
shr
fisubr
ret
sbb
fs
cmps
and
push
enter
mov
scas
push
xor
jecxz
mov
pop
sub
adc
ror
into
push
xor
push
mov
and
push
or
sub
rcl
dec
adc
and
jne
xchg
ins
adc
and
push
push
cmp
sbb
cli
out
jno
mov
sub
in
imul
shl
xor
dec
ror
mov
jne
xchg
add
mov
scas
or
dec
out
xor
loop
and
or
pop
mov
jecxz
ins
and
movs
rcl
xchg
lock
sahf
dec
mov
aam
dec
cmp
les
mov
hlt
ja
cmp
std
cvttps2pi
mov
pop
cmp
fwait
inc
or
dec
cmp
or
xor
imul
sbb
ins
pop
dec
fsubrp
pop
jne
(bad)
and
mov
xor
pop
pop
shl
push
std
push
inc
std
(bad)
cs
dec
loopne
adc
cmps
loop
nop
adc
dec
sbb
(bad)
outs
mov
(bad)
jne
popf
movs
out
fbstp
(bad)
shr
inc
jns
stos
mov
xchg
inc
and
icebp
aas
sbb
das
sahf
inc
pop
ss
shr
int3
imul
imul
aad
cld
sub
popa
lods
jno
fs
call
fwait
push
sub
push
arpl
inc
pop
ds
add
fs
mov
add
sub
(bad)
sti
cs
into
cmp
xchg
out
out
sti
xor
xor
push
nop
sbb
push
test
call
add
(bad)
and
imul
mov
adc
pop
mov
xchg
cmp
cmp
adc
sub
cwde
pop
fisub
mov
cmp
add
dec
fidivr
in
loop
adc
or
in
mov
inc
and
sub
test
dec
pusha
test
fcomp
leave
ror
sub
sbb
or
bound
lahf
in
in
adc
sub
jno
jle
add
mov
dec
(bad)
gs
cli
and
not
xchg
lea
xor
out
add
sbb
loop
adc
mov
outs
cmp
les
clc
scas
pusha
push
jle
or
pop
pop
mov
jmp
push
mov
mov
shl
imul
mov
popa
sub
ins
ins
in
or
jbe
mov
sbb
(bad)
std
pop
cmps
out
inc
stc
(bad)
bound
fninit
data16
stc
out
cmps
dec
jae
gs
mov
jmp
add
cmc
scas
rcr
arpl
inc
jg
repz
xor
call
(bad)
jbe
add
popf
adc
and
sar
xchg
sub
dec
jmp
cwde
jmp
inc
mov
cmps
dec
add
and
ds
sahf
fst
or
jne
mov
ins
ja
outs
cmps
or
repz
lods
out
mov
popf
adc
mul
mov
imul
add
div
ds
mov
repz
shr
inc
pop
fistp
adc
mov
bound
xchg
push
xchg
(bad)
call
jb
sbb
ins
das
xchg
iret
outs
ins
cmp
inc
cld
xlat
cdq
and
mov
pop
cmp
ror
pop
call
mov
xchg
mov
xchg
js
sub
shr
inc
xchg
sahf
push
adc
jnp
ins
pop
aas
xchg
pop
rol
retf
daa
mov
popa
add
push
pop
cmp
call
cli
add
rcl
mov
adc
cdq
rcr
xchg
and
je
es
inc
or
jo
lods
dec
ins
xor
les
push
in
mov
out
ret
or
push
push
loopne
or
iret
xor
adc
or
aam
fsub
dec
sbb
arpl
mov
test
rcr
or
sbb
ror
xor
pop
iret
adc
lods
xor
cmps
dec
nop
sub
rdtsc
int
or
daa
ss
add
dec
in
cs
push
imul
rcr
retf
ret
scas
call
fsubr
push
xor
mov
mov
mov
jge
push
stc
pop
inc
pusha
jp
stos
test
add
js
out
xor
sbb
icebp
jno
in
mov
in
jecxz
mov
sub
js
iret
leave
sbb
cmp
sub
dec
pop
dec
jecxz
xchg
and
shr
jmp
xchg
aad
mov
lds
shr
ret
ds
scas
add
mov
add
lahf
test
and
or
inc
jecxz
adc
repz
adc
inc
cmps
(bad)
jbe
or
mov
std
iret
mov
mov
les
sub
and
lahf
sbb
lds
xchg
scas
push
not
les
pop
and
add
imul
jmp
xchg
test
pop
and
mov
cmp
cmp
shl
ror
mov
add
add
or
cmps
jbe
rcl
mov
jbe
jae
shr
(bad)
cmps
jb
(bad)
test
lds
popa
xchg
push
repnz
lds
or
mov
dec
adc
jo
lods
ins
fnstsw
xor
sub
cs
mov
adc
xor
mov
mov
addr16
cmps
mov
sub
adc
mov
arpl
xor
cmp
out
aad
and
inc
sti
aam
nop
in
aad
les
pop
xchg
dec
sub
enter
lods
ror
mov
std
xor
scas
sbb
push
fcomp
add
xor
popf
ins
mov
xchg
or
inc
push
stos
jle
leave
cmp
sbb
mov
jg
into
popf
sti
jg
(bad)
xchg
or
std
int3
adc
adc
test
jns
mov
push
lods
or
inc
jo
jle
es
inc
adc
mov
jae
ins
iret
aam
xor
ret
xor
(bad)
sti
test
xchg
sbb
das
xchg
cmp
enter
scas
ror
(bad)
rcl
or
xor
jb
mov
sbb
inc
je
or
ret
test
cmp
sub
sub
imul
cmp
mov
xchg
call
xor
sub
clc
imul
jle
test
inc
push
jmp
or
nop
jo
nop
sbb
and
xchg
repz
test
retf
cmp
cs
movs
out
icebp
mov
and
enter
jl
mov
mov
movs
popa
cmp
fild
add
adc
das
(bad)
cmc
sar
sbb
test
shl
dec
cmp
call
jno
mov
popf
icebp
and
add
jo
xchg
jle
dec
pop
jle
jbe
xor
out
in
inc
mov
test
ror
or
pop
pusha
lods
addr16
loope
jno
(bad)
loop
adc
lods
push
dec
ins
call
aaa
xchg
xchg
jmp
mov
out
mov
or
cmp
adc
dec
or
in
js
push
in
mov
xchg
add
pop
ficom
inc
jae
pop
xchg
xchg
fcmovnbe
mov
xchg
not
pop
retf
lds
push
cmp
inc
push
outs
ficom
sub
cmc
out
push
mov
movs
jo
adc
in
push
cwde
retf
mov
lea
js
dec
mov
dec
add
mov
ror
sahf
xchg
sbb
cld
icebp
mov
test
push
inc
mov
rcr
std
mov
pop
mov
stos
mov
or
sub
mov
scas
jmp
(bad)
lods
xchg
or
enter
jmp
mov
jmp
inc
lea
sub
jmp
push
jle
jl
hlt
into
sti
nop
sbb
and
sbb
mov
inc
(bad)
jmp
mov
scas
push
add
dec
das
jmp
mov
mov
sub
and
dec
(bad)
clc
int
inc
repnz
xchg
outs
imul
cli
add
mov
cmp
rcr
pop
pop
adc
adc
in
bnd
mov
mov
fucomp
xchg
jg
xchg
xor
aad
cld
sbb
mov
ficom
and
aas
jge
inc
xchg
jbe
xchg
mov
mov
sbb
clc
sub
and
fiadd
dec
sbb
rcl
or
(bad)
bnd
pop
or
and
jo
mov
nop
sbb
(bad)
sub
aad
cmp
pushf
test
daa
fstp
enter
scas
add
adc
xor
nop
das
not
cmp
imul
and
xor
adc
mov
ins
pop
push
and
and
jecxz
sbb
lahf
arpl
rol
jae
into
lds
in
rcr
(bad)
mov
mov
scas
xor
pop
jmp
in
shl
mov
pop
dec
pcmpeqw
xor
enter
enter
popf
xlat
or
into
rol
pop
idiv
aas
stos
(bad)
lods
sub
(bad)
jno
inc
div
dec
xchg
adc
mov
test
xchg
xchg
imul
in
mov
aas
call
sub
pop
outs
cmp
mov
mov
call
mov
inc
pop
ins
test
cmp
mov
inc
add
inc
jmp
dec
scas
xor
or
fdiv
stc
add
jnp
sub
mov
dec
xchg
call
(bad)
data16
xor
dec
or
jno
pop
mov
add
aam
xchg
sbb
pop
clc
xor
mov
mov
mov
pushf
call
retf
jb
rol
push
dec
sahf
dec
fnstsw
add
sbb
cmp
and
xchg
call
cs
mov
sbb
add
mov
nop
call
push
mov
ds
movs
push
jmp
fidivr
out
jbe
imul
sbb
cdq
movs
les
int
pop
ss
cmp
mov
in
dec
aas
call
test
ret
dec
mov
and
stos
daa
mov
(bad)
pop
retf
fwait
cmp
jno
and
mov
mov
fistp
and
int3
jnp
(bad)
fisttp
es
adc
addr16
daa
pop
or
stc
mov
test
ins
add
imul
inc
std
sub
push
test
add
les
clc
or
adc
xor
mov
add
test
mov
into
push
cld
ss
ss
and
sub
imul
gs
out
sub
inc
shl
mov
inc
mov
in
test
and
iret
push
fcmovnb
clc
inc
inc
je
jg
scas
dec
sub
stos
jg
ss
bound
sub
jns
repz
test
cmp
pop
dec
fld
outs
jmp
mov
sbb
ror
add
test
test
xchg
test
in
mov
pop
pop
and
push
xchg
hlt
aam
xchg
inc
xchg
lds
fsubr
aaa
push
sbb
push
push
push
je
xor
lea
push
push
add
popa
jge
(bad)
repnz
dec
push
sub
popa
inc
iret
sub
or
lods
cmp
cmp
jp
repz
popf
dec
ficom
push
pop
mov
adc
or
lahf
pmaddwd
add
mov
enter
(bad)
or
ror
mov
and
mov
sub
repz
sub
fdiv
call
aad
jns
arpl
cli
(bad)
mov
cmp
or
jae
xchg
out
cmp
test
pushf
cmp
or
nop
retf
mov
inc
ds
jmp
stc
mov
enter
aam
pusha
pop
xchg
add
xchg
xor
pop
lods
arpl
lahf
dec
(bad)
xor
pop
pushf
cmp
outs
cld
repnz
mov
les
xchg
mov
xor
jmp
jnp
pop
xor
imul
mov
push
fiadd
out
lahf
pop
loope
test
mov
int3
sub
or
ins
outs
xor
adc
test
jmp
and
shl
repz
(bad)
(bad)
pop
rcl
stos
imul
xchg
jmp
ret
mov
into
into
hlt
int3
cmp
jno
and
mov
cmp
cmp
jbe
push
jecxz
xchg
or
fistp
mov
jns
in
adc
dec
jg
arpl
(bad)
addr16
test
and
out
sub
clc
cmp
sti
les
ret
sbb
ds
push
in
mov
cmp
ins
pop
dec
int
pusha
push
mov
into
popa
mov
sub
ja
into
xchg
imul
and
mov
mov
(bad)
arpl
stos
add
jb
dec
xor
sub
rcl
gs
sbb
clc
cdq
inc
dec
push
jne
out
xchg
sub
add
jb
push
fbstp
cld
inc
mov
out
inc
inc
xor
fiadd
add
dec
xchg
mov
add
test
enter
adc
shl
rol
mov
fwait
cmp
xor
add
gs
paddsb
or
inc
(bad)
out
lods
mov
add
or
sub
lds
inc
fldl2e
and
fcom
mov
xchg
sbb
xchg
or
sbb
jp
push
and
mov
lea
test
cmp
push
movs
jb
pop
icebp
push
ins
pop
mov
pop
or
inc
pop
enter
out
mov
out
sahf
and
mov
add
pop
xchg
cmp
pushf
inc
clc
inc
add
out
loope
dec
call
sbb
jg
outs
or
push
aam
xor
jge
xor
cs
xchg
dec
retf
imul
add
cmp
or
lods
cli
dec
out
and
sbb
jge
sub
inc
in
imul
(bad)
jbe
xchg
xchg
fdivr
inc
push
jmp
imul
rcl
push
jnp
(bad)
cmp
(bad)
pop
ins
mov
adc
xor
bnd
enter
nop
mov
adc
daa
mov
popf
dec
retf
or
xchg
jecxz
dec
push
fwait
movs
loope
fist
sahf
es
inc
fs
cli
mov
or
push
lea
xchg
(bad)
mov
nop
rcr
push
ja
mov
sub
lods
or
(bad)
retf
mov
scas
scas
push
mov
xchg
ins
into
mov
push
mov
adc
out
mov
dec
retf
fisttp
sub
add
les
sub
or
jns
mov
fsub
div
add
lods
mov
rcr
out
fsubr
sbb
jmp
jmp
les
iret
out
cmp
cmps
xlat
push
data16
jae
cmp
xor
bound
int
mov
aam
ret
jmp
inc
call
or
test
or
mov
push
stc
add
leave
cmp
imul
or
sar
bound
repz
sbb
es
inc
mov
enter
xor
sbb
ja
or
mov
push
(bad)
(bad)
pop
lods
loopne
cmps
mov
(bad)
iret
in
leave
in
sbb
aam
inc
adc
mov
dec
test
dec
out
push
jbe
cld
xchg
add
(bad)
(bad)
push
call
and
mov
push
cwde
sub
dec
mov
into
imul
jno
pushf
xchg
cli
sbb
cmp
push
fist
iret
mov
imul
repnz
lods
das
pop
cmp
pop
cmp
mov
test
loope
mov
retf
into
push
popf
cmc
adc
pop
in
stc
adc
into
push
scas
cmp
js
adc
jmp
sti
lahf
mov
dec
cld
dec
mov
lahf
test
and
push
mov
aaa
push
ja
sbb
enter
add
pop
dec
minps
imul
outs
xchg
xlat
dec
jo
xlat
stos
dec
xor
mov
push
xchg
mov
popa
push
and
ins
and
pushf
data16
mov
push
push
(bad)
lahf
addr16
es
pushf
push
mov
(bad)
and
inc
fnstenv
mov
cld
adc
or
retf
or
lea
fistp
(bad)
sti
fst
jp
cmc
mov
fidivr
and
xor
ds
int
add
call
les
fisubr
inc
mov
adc
sub
adc
mov
daa
in
stos
pusha
sbb
sahf
jge
repz
cmp
xchg
add
in
stos
fnstcw
fnstsw
pushf
sbb
frstor
push
mov
fidivr
pop
xchg
fnstcw
fistp
push
sbb
bound
inc
push
mov
cmp
outs
out
dec
leave
hlt
add
add
push
fistp
loopne
cmps
push
mov
cmps
cmp
jmp
aaa
(bad)
call
(bad)
retf
jmp
sbb
mov
retf
add
mov
add
pop
shr
jbe
pushf
or
imul
xor
stos
sbb
inc
sub
or
sub
or
sahf
xor
xchg
fwait
ret
cli
pop
aaa
jl
cmp
and
lock
retf
repnz
sub
mov
into
jne
mov
jbe
or
bnd
call
test
das
in
dec
mov
(bad)
jg
pusha
xor
jl
leave
je
xchg
adc
xchg
push
test
jle
scas
sbb
push
cld
lds
cmp
and
(bad)
popa
scas
sbb
xlat
in
movs
mov
mov
call
or
cmp
sbb
shl
shl
jno
shl
data16
es
pop
jnp
iret
sbb
fadd
sbb
sub
lahf
sbb
cli
fimul
add
cmps
inc
(bad)
pushf
popa
mov
ds
movs
(bad)
repz
mov
sahf
adc
xor
or
xchg
sahf
xchg
or
adc
sbb
jmp
sbb
push
fidiv
jb
enter
cmp
daa
inc
(bad)
je
in
call
pop
xor
dec
mov
push
pop
mov
test
jp
mov
fucomp
push
mov
repz
mov
(bad)
adc
xchg
adc
daa
xchg
dec
cmp
jnp
test
stc
sbb
jbe
test
lods
cmp
xchg
cmp
add
adc
repnz
hlt
je
mov
pop
push
cdq
cmp
out
int
arpl
jno
daa
loopne
sbb
xchg
hlt
fst
jne
enter
cmps
mov
jg
movs
int
jbe
test
or
nop
dec
sahf
in
ja
neg
jns
add
dec
jnp
inc
push
clc
jnp
sbb
aaa
inc
jo
in
sbb
pop
fwait
jp
jmp
in
cmps
xchg
out
adc
les
pushf
add
mov
pop
in
push
mov
loope
jp
jmp
mov
push
jbe
inc
pushf
pop
mov
pop
mov
ss
push
sti
ror
xor
inc
jbe
fisub
mov
outs
dec
call
daa
into
jo
rol
lock
jmp
mov
sub
push
pop
imul
and
cld
mov
dec
div
sbb
add
cli
inc
mov
test
mov
inc
mov
cmp
sub
rol
call
iret
or
out
daa
daa
repnz
lds
push
imul
push
cdq
push
jp
lea
enter
ret
ins
xor
icebp
add
addr16
aam
cli
jb
mov
scas
xor
pop
inc
push
ret
mov
cmp
test
push
jns
add
jno
(bad)
mov
and
inc
dec
inc
scas
aad
(bad)
jb
les
push
mov
pop
mov
daa
add
pop
sahf
sbb
push
addr16
fwait
ja
adc
jb
mov
out
xchg
daa
push
cmp
xor
int3
scas
and
out
scas
ror
ja
add
cmp
cmp
imul
mov
aaa
add
xor
stc
cmps
adc
js
lods
jnp
and
les
icebp
adc
repnz
out
das
sub
pushf
dec
daa
int
fbstp
(bad)
out
pop
xchg
movs
dec
adc
mov
pop
inc
mov
xchg
or
jecxz
mov
sub
test
fld
pusha
and
ret
repnz
sar
ja
mov
dec
mov
xchg
xchg
cmp
dec
jbe
stos
pushf
cmp
and
sbb
jl
xchg
pop
nop
fwait
adc
mov
xlat
lods
mov
mov
int
xor
jno
pop
xchg
scas
add
sbb
cwde
clc
mov
xor
mov
dec
or
sub
fwait
movs
or
xchg
ins
sbb
cmp
pop
pop
mov
shl
sti
xchg
lods
test
xchg
in
sub
xchg
repz
cdq
cwde
mov
pop
cs
sbb
test
inc
jno
loope
mov
and
sahf
push
popf
mov
push
jge
add
cs
sub
stc
nop
mov
xchg
sub
or
cmp
ins
ror
outs
inc
sar
movs
xchg
call
div
lods
jns
push
adc
sbb
imul
jg
pop
lods
xor
mov
sahf
popf
mov
jmp
adc
std
or
les
and
ja
dec
jecxz
add
stos
stc
dec
inc
rcl
sub
in
mov
add
adc
jl
ins
fwait
mov
pop
sbb
jae
iret
lods
pop
in
js
mov
out
mov
mov
pop
push
das
push
mov
add
or
sub
lock
dec
sub
add
inc
and
or
aas
inc
aad
imul
pop
adc
mov
ja
push
jg
dec
dec
cmp
mov
push
mov
jnp
iret
into
dec
popa
pcmpgtw
cmp
pop
jg
pop
xor
mov
xor
lea
lahf
lds
xor
test
dec
jle
mov
std
mov
sub
repnz
out
and
add
inc
inc
mov
call
test
in
mov
out
xor
pushf
mov
mov
(bad)
pop
dec
sbb
shl
fld1
inc
test
clc
mov
cmp
imul
push
js
cmp
jno
scas
ins
cmps
sub
ds
jmp
cmp
jno
jp
jbe
cmp
leave
fdivp
ret
mov
fsubr
xor
not
inc
pop
mov
pushf
jae
loope
arpl
xchg
sbb
or
xchg
cdq
test
nop
lds
fld
and
pop
mov
mov
jecxz
je
xchg
add
addr16
push
mov
out
leave
sub
mov
aam
sahf
cmp
ds
out
cs
(bad)
jl
repnz
jbe
fiadd
outs
jae
xor
retf
stc
pop
data16
dec
(bad)
jne
enter
pushf
loop
mov
push
and
scas
dec
jge
movs
mov
mov
cli
mov
mov
or
cdq
loop
pop
addr16
pop
cwde
push
(bad)
mov
ret
aam
dec
adc
xchg
loope
mov
or
ret
shl
outs
mov
in
xor
in
xor
pop
add
dec
call
pusha
iret
push
mov
test
test
int
clc
xchg
add
sbb
mov
xchg
lea
jge
ss
int3
mov
pop
push
push
xchg
push
in
inc
fs
mov
inc
pop
mov
imul
mov
mov
cli
xchg
in
out
xor
mov
(bad)
div
dec
call
nop
fcom
jecxz
sub
int
mov
(bad)
sbb
rcl
loopne
push
rdmsr
pusha
cmps
add
mov
cmp
mov
push
(bad)
movs
scas
(bad)
js
pushf
add
shl
(bad)
xchg
icebp
xor
dec
xchg
ret
push
in
fwait
push
or
out
dec
lods
xchg
and
stos
sbb
les
ret
mov
loop
push
and
xor
adc
mov
or
pop
fild
mov
setnp
nop
xor
(bad)
lods
xor
xchg
xchg
outs
xor
cdq
out
mov
pop
add
push
dec
mov
std
ss
loopne
push
in
inc
xor
pop
test
aas
xchg
and
in
leave
push
ja
sar
dec
leave
retf
leave
data16
fwait
(bad)
rcr
adc
fldcw
test
ret
fadd
adc
sbb
bound
das
mov
rcr
es
out
int3
mov
test
stos
cmps
lahf
out
sbb
push
sbb
into
imul
(bad)
jmp
dec
adc
dec
sub
ret
inc
sub
sub
and
push
sti
loop
mov
and
enter
jno
or
cwde
out
aas
cmps
sub
jmp
inc
push
adc
mov
or
pop
dec
shr
sahf
stos
inc
sbb
cwde
je
cmp
jge
sete
adc
cmp
sbb
adc
int3
and
pop
sbb
pop
adc
dec
mov
jmp
int3
repnz
test
adc
shr
ficomp
rcl
pop
in
int
cmc
cmp
xchg
leave
out
out
pop
and
xor
push
lock
pop
jnp
xor
and
add
mov
cmc
into
or
ret
(bad)
in
imul
stos
adc
fwait
into
adc
movs
mov
fwait
outs
and
push
retf
add
push
dec
or
mov
mov
sub
fld
jle
xchg
stos
int3
and
in
xchg
mov
add
sbb
cwde
pop
retf
xchg
scas
mov
dec
xchg
or
cwde
dec
cmc
mov
pop
pop
jge
inc
or
cmps
mov
retf
jo
sbb
or
retf
in
dec
sar
(bad)
dec
cwde
or
call
std
pusha
adc
loope
cmp
jbe
add
push
in
aam
sub
push
xchg
mov
outs
pusha
inc
out
mov
or
add
(bad)
in
and
pop
(bad)
or
sub
loope
std
sbb
fdivr
paddd
in
mov
fld
and
rcl
cmp
mov
ss
xchg
and
fbstp
aas
in
popa
push
jne
data16
je
ja
mov
and
mov
jno
mov
push
scas
jg
call
pop
outs
add
push
lock
xchg
sbb
test
aaa
add
and
sbb
sub
(bad)
out
in
or
push
and
inc
div
sub
or
mov
ins
inc
adc
out
mov
hlt
iret
(bad)
pop
cmps
sub
arpl
sub
pop
test
loopne
shl
inc
mov
and
inc
xor
into
pop
xchg
jge
or
fucom
rcl
sub
retf
mov
and
xchg
js
push
fs
or
push
cdq
mov
inc
mov
cmc
(bad)
imul
aad
ret
cmp
push
xchg
xchg
das
ret
ds
loop
jge
popf
or
retf
push
xchg
ins
imul
jb
cmp
mov
hlt
or
pop
hlt
xor
cmps
inc
mul
in
nop
out
mov
adc
sub
dec
stc
mov
aad
mov
push
adc
mov
movs
shl
xchg
loop
mov
add
inc
adc
sbb
pushf
es
lea
xchg
retf
repz
js
xchg
jae
fs
stos
dec
data16
xchg
push
ss
test
cmp
lea
rcr
push
push
and
vmovd
cmp
arpl
sbb
repz
pop
inc
xor
lods
clc
addr16
push
xor
mov
adc
mov
xchg
ret
jns
enter
in
mov
cmps
push
dec
adc
jecxz
(bad)
sub
pop
lods
aam
sub
and
test
mov
les
in
cmc
sub
test
add
cli
rcr
pop
gs
sub
retf
dec
test
cmp
mov
xchg
sub
gs
inc
ds
or
and
ss
int
(bad)
(bad)
scas
sub
lds
push
fucomp
dec
outs
int3
in
lods
neg
dec
sbb
push
jne
push
(bad)
jge
iret
sub
sbb
sub
xchg
ins
shl
mov
and
out
loope
add
mov
push
mov
int
mov
or
dec
mov
repz
das
ror
pop
jmp
fidiv
xchg
icebp
jno
push
call
xchg
xchg
push
dec
inc
test
jb
test
add
pushf
sub
scas
and
ret
in
push
adc
retf
cmp
mov
je
mov
ret
neg
(bad)
dec
sbb
repz
fld
pop
test
fstp
call
dec
int3
stos
clc
icebp
or
and
inc
pop
adc
xchg
push
shl
gs
or
jecxz
xchg
hlt
pushf
xchg
sbb
dec
adc
jge
mov
mov
xchg
out
inc
push
dec
mov
push
ffree
cmp
frstor
fld
loope
je
lods
jecxz
div
pop
cmp
and
cdq
enter
ins
jl
sbb
xchg
cmp
mov
xor
test
rol
push
cmp
adc
retf
jb
outs
or
hlt
mov
shl
mov
cmp
xchg
push
sub
pushf
push
retf
pushf
mov
or
adc
xlat
adc
sub
and
aam
cwde
mov
ret
and
pop
inc
pusha
cmp
in
mov
adc
lock
aas
xlat
push
jmp
daa
lahf
sub
gs
rcr
retf
das
add
mov
fwait
push
dec
inc
lea
shl
inc
test
pop
dec
pop
inc
enter
jbe
jae
dec
push
hlt
jbe
xor
lahf
hlt
call
push
or
cwde
jg
addr16
jns
jecxz
in
mov
frstor
cmps
test
call
jnp
inc
jns
into
xor
addr16
cmp
pop
inc
xchg
(bad)
scas
ins
sub
mov
jp
mov
scas
inc
cli
sub
inc
adc
aaa
mov
add
retf
shr
push
lds
aam
cli
in
dec
adc
dec
daa
outs
movs
or
mov
out
mov
sbb
pop
fisttp
mov
(bad)
repnz
push
in
push
push
cwde
push
outs
dec
ret
popf
out
dec
push
jmp
jmp
cmp
outs
mov
jle
fs
iret
into
pop
sbb
xor
jb
psubusw
int3
push
jnp
loop
(bad)
cmc
inc
and
in
mov
mov
mov
pop
push
lods
adc
jnp
cld
loopne
mov
push
dec
mov
ins
pop
fistp
cmps
fcom
pop
stc
xchg
nop
push
sub
in
inc
cmp
push
ja
sbb
sbb
mov
cmp
fld
adc
imul
ret
jge
push
mov
leave
push
xchg
dec
inc
pop
dec
cmp
pop
pop
ja
aam
pushf
push
dec
popf
sahf
fisubr
les
data16
or
mov
and
mov
shr
add
pop
cmp
addr16
nop
je
push
lock
jnp
jns
fadd
pusha
pop
je
sub
bound
sbb
mov
sbb
push
fild
jl
mov
dec
cmp
test
hlt
pop
jmp
das
fwait
mov
call
pop
inc
cmp
jle
inc
push
jge
jae
mov
jns
mov
jecxz
es
sti
mov
retf
mov
add
addr16
jmp
pop
mov
dec
ffreep
adc
cmp
rol
aam
fisttp
mov
pusha
push
mov
lahf
xchg
fidivr
pop
int
ret
bound
push
je
repnz
xchg
sub
imul
or
into
cmp
dec
xor
xchg
pop
sbb
adc
ins
dec
pop
pop
inc
leave
pop
in
imul
add
popa
mov
cmp
pop
add
mov
test
mov
mov
cli
js
add
adc
add
pop
cld
inc
dec
adc
inc
daa
xchg
adc
repz
adc
push
ins
push
addr16
scas
adc
sar
mov
mov
std
lahf
enter
and
xor
cmps
(bad)
ror
mov
fidiv
in
stos
lods
cmp
add
stc
stos
push
fdivr
cmp
test
jp
and
aam
adc
pop
sub
push
call
and
jl
xor
dec
and
mov
popf
sub
inc
mov
adc
nop
cwde
sbb
jecxz
shr
mov
scas
inc
test
mov
dec
xor
inc
popa
and
cmps
imul
fs
adc
arpl
int3
xor
in
cwde
mov
rol
es
mov
test
mov
inc
xchg
fld
jns
aad
jl
nop
jno
cmp
mov
out
jecxz
sub
inc
in
mov
sti
int
and
xor
pop
mov
dec
js
mov
hlt
daa
push
adc
int3
push
cmp
in
cmp
sub
fsub
and
inc
sbb
jno
sbb
fwait
cwde
loop
pop
scas
pop
(bad)
adc
and
dec
xchg
pop
cwde
adc
adc
push
sbb
stc
and
mov
jmp
cdq
(bad)
xor
movs
mov
cmp
xor
iret
mov
sahf
cmc
jg
jmp
shl
(bad)
dec
sahf
xlat
sbb
repz
mov
mov
sub
call
je
pop
jecxz
in
ins
mov
popf
mov
mov
repz
jl
push
test
add
push
mov
inc
and
add
push
or
or
xchg
or
outs
cmc
retf
clc
in
jmp
in
fild
sub
jmp
jmp
dec
outs
ss
xcrypt-ctr
cmps
popf
(bad)
pusha
daa
inc
jbe
push
inc
jecxz
pop
jb
pop
int3
inc
sbb
lahf
lahf
test
mov
xchg
rcr
cmp
dec
loopne
sub
inc
dec
and
call
cmp
mov
lahf
leave
push
pop
scas
mov
xor
iret
dec
mov
cmp
push
jo
sahf
xchg
mov
mov
mov
inc
retf
cwde
add
popf
es
icebp
fiadd
sbb
pop
sbb
cmp
cmp
xor
cld
pop
dec
aaa
and
mov
xor
mov
(bad)
ja
inc
rcl
adc
add
call
pop
xchg
xchg
fs
scas
imul
push
mov
push
jmp
xchg
jne
jns
call
cs
out
rcr
(bad)
aaa
sahf
xchg
int
ret
cmp
xchg
xor
cmps
sub
ror
rol
neg
loope
in
addr16
pusha
add
adc
mov
cmp
push
imul
je
adc
ret
cdq
dec
scas
inc
and
mov
ror
imul
clc
mov
rcl
and
add
(bad)
inc
icebp
hlt
xor
mov
sbb
mov
or
or
add
cwde
jb
pop
mov
stos
or
mov
or
pop
data16
pushf
cmc
inc
popa
lock
adc
pop
push
(bad)
sub
push
xor
or
jmp
jmp
popa
ror
adc
cmp
fldcw
dec
push
push
pop
fist
rcr
jmp
ss
inc
xor
addr16
pusha
sti
fadd
or
mov
dec
ss
nop
mov
loop
lods
popf
push
xchg
ss
pop
xor
and
lods
movs
sahf
xlat
xchg
or
mov
sub
push
mov
inc
sub
jo
mov
adc
mov
retf
out
aam
adc
(bad)
ins
pop
call
dec
popa
xor
jns
int3
fdiv
call
loopne
test
xchg
aas
lods
dec
jb
push
jns
xor
rcr
jae
pop
rol
push
mov
add
mov
imul
inc
push
aas
adc
inc
enter
mov
xor
and
data16
cmp
adc
mov
or
aaa
sub
fwait
call
(bad)
adc
and
sub
lods
js
jmp
sbb
retf
int3
addr16
and
aad
leave
xor
mov
xor
xor
pop
daa
les
repz
dec
fadd
in
cmp
repz
jo
iret
inc
stc
loopne
arpl
retf
sahf
cld
or
(bad)
test
ror
jl
or
out
call
sub
adc
lds
test
sbb
cwde
mov
je
lods
mov
ds
bound
sbb
out
or
sub
pop
loop
out
adc
movs
dec
in
cmc
mov
icebp
jmp
xor
xchg
jg
neg
cmp
jae
das
and
inc
add
es
or
shr
daa
cmp
pop
mov
jo
xchg
dec
call
outs
lahf
dec
cld
add
pop
and
mov
(bad)
push
xchg
shl
push
iret
out
push
jge
cmps
push
dec
jns
lods
ja
pop
movs
sub
mov
test
js
xchg
xor
popf
pop
movs
rol
lock
xor
jl
sbb
sub
xor
push
jl
add
inc
gs
ret
sahf
loopne
sub
xchg
inc
cmp
test
in
xchg
add
cmps
scas
(bad)
mov
inc
retf
or
cmc
pop
fimul
dec
add
out
outs
push
jae
in
pop
loop
ja
push
mov
fist
sub
fist
int
inc
inc
pop
out
ficom
dec
aas
out
xchg
leave
mov
mov
jo
fidivr
imul
jae
sub
pop
lds
rcr
mov
xlat
sahf
sub
call
inc
adc
push
sub
or
out
movs
sbb
aad
jge
inc
scas
stos
push
out
js
lahf
popa
div
shr
or
mov
call
stos
jmp
cwde
loopne
sbb
pushf
and
xchg
xor
clc
dec
mov
enter
sbb
loopne
cdq
(bad)
jb
jb
xor
and
mov
push
or
inc
(bad)
lods
xor
call
jno
cmp
mov
mov
ss
inc
xlat
enter
dec
ret
lods
dec
or
pop
jle
sub
push
repnz
mov
fs
mov
mov
test
test
test
mov
add
push
push
ret
addr16
inc
(bad)
sub
shl
lea
lock
leave
stos
loopne
int3
and
sbb
sub
jg
ja
mov
retf
mov
out
or
xchg
js
out
push
leave
(bad)
(bad)
imul
cmp
(bad)
xor
push
and
aas
adc
ss
xchg
pushf
sti
push
cli
adc
xor
mov
jl
mov
xchg
pop
into
adc
div
mov
mov
std
(bad)
call
jns
jg
cmp
rcr
in
icebp
in
cmp
fldcw
ja
fstp
lods
or
arpl
mov
jmp
in
ret
(bad)
in
aad
jo
pop
push
and
mov
sbb
jnp
cmp
je
sub
and
fisttp
xchg
and
aam
dec
add
push
stos
adc
ds
sbb
push
imul
scas
push
push
cli
jo
xlat
int3
daa
sub
xor
push
popa
imul
fmul
jae
jno
movs
cmp
sub
pop
pop
or
xlat
sub
and
push
pop
ret
sub
mov
add
mov
inc
arpl
imul
sbb
nop
test
push
push
js
jl
(bad)
xchg
fst
add
push
or
in
sbb
xor
fs
cmp
xchg
mov
sub
add
imul
inc
das
or
pusha
outs
jg
cdq
adc
push
cwde
add
iret
movs
mov
xchg
aaa
inc
in
adc
out
jae
jno
mov
sub
rol
repnz
adc
push
les
cmp
or
adc
popf
mov
outs
sub
aas
in
in
inc
aaa
mov
cmp
adc
imul
pop
test
out
repnz
cli
jae
pop
sub
gs
add
xchg
es
sub
add
stos
mov
int
mov
ds
ins
push
xor
sub
cs
cmp
mov
fstp
in
out
lahf
ins
push
add
sub
add
xor
les
shr
clc
inc
sbb
push
lea
jl
clc
mov
adc
adc
out
sbb
(bad)
test
int3
cmp
ds
mov
push
lock
data16
outs
in
mov
or
sbb
data16
sbb
lods
sbb
pop
sbb
push
fucomp
ja
dec
pop
das
pop
mov
jmp
adc
jb
xchg
jb
(bad)
cmp
jne
push
outs
mov
int3
inc
push
jbe
int3
mov
inc
fld
test
push
xor
xor
in
(bad)
stc
or
loop
jp
ret
fs
push
bound
pop
push
in
adc
inc
xor
cs
and
or
int
and
fcom
pop
shr
popf
mov
dec
icebp
mov
pushf
mov
jne
(bad)
cmp
scas
pop
mov
shl
stos
div
xor
pop
lods
pop
sahf
xchg
dec
or
sbb
lock
pop
jb
daa
adc
mov
add
das
xor
pop
xchg
mov
ins
sahf
add
inc
push
sub
pop
cmp
mov
push
(bad)
cli
add
lahf
lahf
in
and
jo
pusha
call
ficom
sub
fwait
clc
push
in
add
xchg
fsubr
add
sub
sbb
add
pushf
mov
adc
ss
lahf
call
dec
sub
or
dec
mov
imul
and
xchg
push
adc
mov
xlat
aaa
jnp
out
(bad)
mov
ret
pop
sub
or
xchg
xor
sahf
mov
stc
data16
jmp
outs
imul
jle
leave
cmp
movs
xchg
and
in
lahf
(bad)
es
mov
mov
(bad)
arpl
movs
shl
fldenv
cmp
div
icebp
scas
fwait
ins
sbb
adc
add
sub
pop
sub
pop
ins
dec
mov
xchg
dec
push
(bad)
push
je
mov
inc
xchg
mov
dec
mov
cmp
jno
mov
arpl
cmp
js
or
fnstenv
test
mov
dec
inc
jg
xor
lods
loope
sbb
jmpw
retf
mov
xor
cdq
outs
movs
and
cdq
inc
mov
inc
shr
mov
mov
shr
aad
sbb
pop
outs
fucom
mov
or
add
out
xchg
xor
ja
aas
sub
cli
ret
loop
pop
mov
jae
jne
push
hlt
stc
fisub
sbb
push
and
and
(bad)
scas
pop
dec
cwde
fist
fisub
leave
mov
icebp
push
xchg
mov
cmovle
push
pusha
cli
and
sti
shl
nop
sub
mov
gs
push
and
push
in
ret
cli
fimul
sbb
jne
xchg
in
xor
jge
inc
add
push
iret
lahf
sub
mov
sti
pop
pop
lds
push
ror
fcomp
pop
mov
outs
or
clc
dec
popf
xor
mul
rcl
sbb
jecxz
sbb
ins
inc
mov
ja
jge
fwait
idiv
dec
push
cmp
mov
jnp
mov
cs
jae
pop
fwait
and
mov
mov
fstp
test
iret
pop
leave
jmp
sbb
dec
jg
imul
jge
in
lahf
sbb
inc
pop
addr16
and
jae
add
retf
xor
inc
aam
sar
rcr
cmp
jb
hlt
(bad)
push
jg
loopne
in
pop
inc
pop
push
cmp
mov
mov
(bad)
lods
js
cmp
add
push
and
ror
adc
scas
inc
jnp
push
cld
pop
sub
(bad)
cmps
retf
pop
dec
sub
out
cmps
hlt
stos
mov
xor
rol
arpl
mov
data16
int
xchg
jg
cmp
inc
adc
fild
cld
dec
fimul
or
dec
mov
mov
xor
lea
repnz
push
dec
sub
and
pop
lods
add
push
enter
test
mov
or
aas
out
mov
lahf
sti
test
mov
iret
imul
ficom
lods
push
inc
adc
or
out
xchg
xor
sbb
dec
mov
mov
clc
mov
fdiv
xchg
cmp
ret
retf
pop
mov
sub
enter
or
mov
test
lods
inc
pop
icebp
jae
cmp
sub
sar
push
inc
mov
icebp
mov
in
xchg
rcr
mov
mov
sbb
mov
cmp
sbb
aas
adc
xchg
inc
pop
enter
xchg
mov
rcl
mov
gs
lds
out
push
js
ins
jae
sbb
data16
inc
push
sub
inc
push
outs
shl
les
stc
xchg
iret
mov
inc
cdq
adc
push
pop
inc
out
fsubr
jno
mov
sbb
lahf
mov
jbe
jp
mov
pop
mov
in
pusha
es
shl
push
call
pushf
(bad)
jb
imul
fld
arpl
arpl
push
int3
push
cdq
je
outs
dec
xor
and
xchg
cmc
mov
fwait
mov
inc
mov
add
xchg
pop
xchg
dec
dec
das
das
enter
loope
push
xchg
outs
lock
jns
inc
and
out
cmp
jle
dec
adc
fwait
rol
fnstenv
push
cmp
inc
je
fistp
xchg
retf
add
mov
call
popf
adc
imul
jb
xchg
lock
std
rcl
and
lds
mov
jmp
pop
cld
call
jg
aad
xor
mov
in
aam
xor
pop
mov
mov
inc
lods
sbb
mov
or
add
sub
pushf
push
mul
outs
or
xor
mov
xor
sub
pop
rcr
mov
stos
cmp
retf
push
ret
popa
inc
(bad)
cmp
mov
les
push
push
pushaw
adc
(bad)
sbb
mul
out
xchg
cwde
test
icebp
mov
push
jecxz
and
enter
or
mov
or
and
adc
retf
ret
outs
jl
popf
stos
je
mov
repnz
mov
aas
outs
and
fbstp
or
in
jl
clc
mov
jl
cmp
xchg
jmp
mov
cwde
or
pop
xor
lea
lods
mov
rcr
jp
stos
aam
sub
and
adc
iret
cmp
xchg
fistp
test
xchg
test
loopne
pop
adc
data16
and
xor
retf
sub
neg
ficom
mov
add
or
out
test
fldcw
fst
loop
movs
mov
fs
jno
mov
or
push
aas
sahf
xor
cmps
or
rol
jg
xchg
ror
adc
cmp
dec
ffree
push
xchg
icebp
inc
push
adc
ret
or
jl
adc
shufps
sub
outs
je
(bad)
stos
sti
push
dec
aaa
jne
retf
and
mov
hlt
rol
mov
jecxz
(bad)
jnp
cmp
sbb
jno
jnp
cmp
xor
cmp
or
int3
pop
das
or
xor
xor
jmp
loope
repz
jne
add
loopne
mov
add
and
fstp
nop
pop
mov
fisubr
loop
bound
stos
xchg
arpl
(bad)
add
push
push
jmp
cmps
inc
xor
aas
sbb
scas
icebp
inc
xor
stc
icebp
xor
ins
inc
enter
cmp
mov
hlt
cvtdq2ps
leave
fld
aas
je
adc
icebp
mov
mul
xchg
pop
sti
out
xor
jle
jae
push
call
movs
push
cmp
imul
loopne
push
aam
adc
mov
(bad)
dec
enter
cmp
push
es
mov
movs
cmp
sbb
adc
xchg
fnstcw
fldenv
xor
cli
(bad)
or
mov
loopne
ins
add
mov
xchg
mov
out
ds
movs
cmp
jmp
pop
mov
cmp
cmp
test
popa
sub
mov
mov
fidiv
dec
outs
dec
xchg
xchg
jno
lock
jecxz
iret
clc
aaa
and
shl
push
jle
xor
cwde
imul
std
xchg
test
add
dec
ucomiss
adc
pushf
or
iret
sbb
mov
pop
jnp
pop
xor
ds
fist
mov
sub
cmp
fdivp
(bad)
pop
inc
fidiv
push
stos
adc
or
in
adc
icebp
sbb
add
imul
mov
xchg
mov
sub
xchg
push
push
cmp
sbb
cs
pop
iret
adc
cmp
push
cli
sbb
xchg
push
xchg
adc
mov
sbb
push
adc
clc
pop
mov
fadd
and
test
enter
mov
ret
mov
inc
fwait
lods
cwde
rcr
cmp
add
fld
mov
mov
pusha
xor
add
mov
cvtpi2ps
and
pop
mov
or
inc
xchg
arpl
mov
xchg
in
repnz
movs
int3
mov
dec
xor
and
stos
push
shr
inc
xor
in
std
push
(bad)
repnz
les
cdq
out
or
dec
inc
pop
inc
cmps
into
addr16
jmp
mov
daa
push
adc
sub
loop
sbb
push
leave
(bad)
aad
aam
hlt
and
pop
pushf
jmp
push
push
mov
data16
xchg
stos
call
mov
xor
jge
sbb
(bad)
in
fiadd
xabort
(bad)
int
jp
push
add
test
adc
or
pop
call
lods
mov
test
jns
pop
gs
dec
pop
shl
cmp
sahf
aaa
in
push
aaa
jl
push
fsubr
xchg
aad
xchg
mov
imul
sbb
mov
aas
pop
icebp
aaa
mov
xor
mov
sbb
enter
jecxz
imul
mov
fst
aaa
daa
fidivr
mov
xchg
dec
pop
js
jns
(bad)
stos
sbb
ret
mov
adc
mov
xor
jmp
lds
adc
jle
lock
cmps
pop
sbb
aas
add
and
pop
cmp
inc
stc
pop
push
xor
pushf
and
les
ins
sbb
fidivr
(bad)
fsub
cmps
(bad)
(bad)
pop
(bad)
mov
jl
dec
add
shl
(bad)
lock
call
sbb
push
or
(bad)
cmp
test
jp
xor
test
mov
sub
cli
or
popf
mov
scas
xchg
cld
std
je
lock
movs
aad
and
mov
pop
je
mov
sbb
push
cmp
mov
jmp
push
pusha
cmp
data16
cmp
xchg
sub
xor
sub
(bad)
fbstp
aam
adc
xchg
fisubr
test
retf
sub
out
cmc
mov
bound
push
in
imul
cmc
cmp
jns
sbb
fisub
push
fiadd
fbstp
es
nop
xchg
cld
pop
test
push
or
out
cs
lea
xchg
int
xor
in
or
or
out
mov
jg
popa
jbe
add
sbb
data16
adc
inc
push
out
cmp
xchg
mov
aaa
out
jb
retf
outs
push
shr
fidivr
dec
push
jae
out
fwait
movs
push
in
add
sbb
mov
js
loopne
cmc
mov
mov
jo
dec
ret
out
ficom
cmp
xchg
mov
dec
aaa
inc
pop
loop
or
dec
hlt
cmp
repnz
(bad)
aad
jns
jle
push
cdq
movs
lock
mov
inc
movs
push
add
sbb
sub
and
into
lock
add
mov
clc
fsub
add
repnz
ins
sbb
add
jbe
xor
sbb
add
cmp
fisub
cli
push
ror
push
adc
pop
ja
or
fsub
cmp
imul
push
add
aad
mov
and
mov
mov
ins
dec
mov
mov
dec
jne
or
out
clc
sub
ins
adc
mov
pop
adc
dec
test
add
push
es
cmp
fiadd
mov
ffree
dec
xchg
lahf
inc
shr
stos
jp
test
add
or
cmp
lahf
int
mov
mov
and
nop
pop
loop
cmp
mov
sub
mov
jb
daa
out
xlat
xchg
aad
cmp
(bad)
xor
mov
mov
lock
jns
or
in
or
je
adc
and
movs
sti
cmps
into
xlat
mov
mov
pop
sbb
push
mov
fimul
sub
jne
push
popa
or
dec
(bad)
push
inc
ret
daa
add
jb
sbb
ins
test
push
cmp
push
inc
sahf
sbb
mov
imul
inc
push
inc
or
repnz
ret
arpl
xchg
repnz
sbb
clc
jmp
retf
pop
push
out
mov
push
xlat
outs
rol
clc
jecxz
out
stos
mov
inc
(bad)
mov
jmp
jae
fisttp
sbb
test
mov
hlt
leave
mov
cld
sub
enter
and
adc
(bad)
rol
mov
(bad)
icebp
add
cmp
(bad)
xor
cmp
bound
inc
jb
icebp
mov
adc
sub
sbb
inc
and
cld
leave
mov
jae
inc
jmp
push
jbe
mov
dec
sub
clc
test
int
jecxz
(bad)
xlat
repnz
jmp
add
(bad)
cmp
fsubrp
pop
sti
fcmovb
out
stos
not
adc
into
sbb
xor
cmp
pop
leave
fsubr
mov
outs
sub
sub
push
xor
sub
je
(bad)
je
aam
xchg
(bad)
mov
dec
add
jle
dec
addr16
mov
shl
int3
in
pusha
xor
mov
(bad)
pop
rcl
stos
dec
xor
jno
(bad)
and
dec
dec
and
inc
jne
loopne
adc
mov
fld
inc
add
out
add
mov
imul
mov
nop
repnz
mov
dec
lea
fiadd
cmp
scas
mov
jae
xchg
push
sti
fsubr
in
pop
sub
pushf
ret
shl
test
adc
cdq
test
mov
adc
push
(bad)
jno
cmp
iret
int
inc
and
ds
frstor
enter
test
inc
push
push
ins
jmp
lock
jae
sub
iret
sbb
add
lock
inc
or
ins
cmp
lods
cdq
mov
rcr
leave
lods
jns
push
sub
ins
push
mov
jb
mov
push
xchg
into
inc
inc
mov
mov
js
dec
inc
xor
cld
std
sbb
nop
dec
cdq
adc
div
jg
mov
jmp
jns
mov
enter
ss
xchg
jmp
cmp
inc
pop
cwde
test
std
xor
(bad)
(bad)
ret
mov
retf
or
neg
hlt
adc
xor
sub
push
and
(bad)
pop
outs
jne
cld
jne
dec
pop
stc
cmp
mov
push
push
adc
stos
ss
xchg
sti
mov
push
aad
and
movs
hlt
dec
mov
or
xor
cmp
dec
xchg
fidiv
jnp
fnstenv
push
or
mov
and
push
jmp
aas
shr
and
push
mov
pop
dec
or
and
sbb
dec
mov
cmp
aam
fidiv
(bad)
leave
push
dec
xor
jl
push
sub
mov
mov
enter
and
enter
je
mov
pop
mov
call
idiv
adc
idiv
mov
lea
hlt
and
jae
push
ds
daa
xrelease
je
ret
loopne
(bad)
cwde
aad
mov
push
push
stos
mov
iret
js
push
in
jmp
or
int
adc
call
retf
xor
mov
fild
icebp
cmps
int3
jg
(bad)
mov
cs
xchg
imul
dec
mov
mov
mov
add
sub
hlt
div
es
data16
push
cmc
or
pop
pop
jmp
mov
sbb
dec
pop
mov
push
adc
stc
enter
test
stos
push
aas
fcom
stos
lahf
aad
scas
in
pop
lea
xchg
out
(bad)
pop
in
das
jno
out
stos
jae
xchg
mov
jne
outs
fimul
into
mov
adc
cmp
out
shr
mov
fwait
add
imul
nop
jo
imul
in
call
push
ja
in
push
lods
movs
gs
jmp
ins
shl
xchg
xor
mov
mov
leave
xor
(bad)
and
scas
pop
sar
daa
mov
jb
sahf
dec
mov
ror
imul
adc
loopne
outs
mov
push
shl
inc
adc
mov
fstp
mov
add
shl
sbb
add
imul
rol
outs
call
jecxz
es
mov
dec
fiadd
cmp
aaa
inc
imul
movs
mov
xor
bound
outs
or
and
jnp
xchg
and
push
push
cmp
aam
ss
movs
les
pop
shr
mov
xchg
push
push
xor
int3
bound
add
imul
and
mov
sub
cwde
sbb
movs
push
dec
enter
repnz
cdq
(bad)
inc
fst
mov
xchg
mov
and
fld
xor
push
test
sbb
loope
dec
pop
pop
cmp
add
mov
mov
mov
sub
ret
test
stos
xchg
sub
cld
pop
jecxz
lods
sub
rcl
pop
jge
aas
(bad)
loop
bound
ret
or
loopne
aam
push
ret
pop
cwde
bound
fidivr
test
(bad)
jo
dec
repnz
xor
test
(bad)
data16
mov
mov
stos
and
sub
pop
or
mov
cdq
test
in
sbb
cwde
pop
retf
xchg
inc
push
cmp
mov
xchg
add
lock
scas
cs
sahf
loopne
inc
or
push
repnz
cmp
mov
test
add
sub
or
pop
push
push
sbb
xchg
shl
icebp
inc
push
inc
shr
sbb
jge
mov
sub
and
imul
loope
mov
jp
mov
in
ja
inc
push
mov
dec
out
cmp
retf
sbb
sub
push
pop
sub
nop
fwait
ins
adc
or
fiadd
fdivr
mov
sub
adc
mov
lods
fld
dec
rcl
mov
push
leave
pop
lds
je
stc
add
xchg
rcl
xor
xor
pop
dec
jns
add
js
fiadd
out
lds
sub
pop
out
imul
das
ror
bound
sbb
or
jecxz
test
mov
stos
pushf
(bad)
cmps
fcom
adc
adc
and
cmp
call
sub
stos
xchg
xor
(bad)
mov
inc
or
mov
ja
fist
in
out
enter
fisub
fst
mov
(bad)
scas
sub
mul
xchg
mov
jp
sti
and
sbb
and
jp
inc
loope
mov
xor
fnstcw
and
aad
cdq
cmp
lds
sar
jle
xor
out
movs
aas
mov
aaa
enter
ror
push
xchg
cdq
clc
icebp
rcl
xchg
or
stc
hlt
pop
scas
scas
aam
icebp
inc
adc
adc
add
pop
adc
adc
aam
xchg
jmp
and
pop
pop
cmp
and
ret
es
std
xchg
aas
iret
leave
dec
int3
cld
mov
clc
mov
addr16
add
pop
jp
jo
mov
pop
sub
pop
sub
jns
in
pop
in
fisubr
mov
jo
jle
inc
js
push
sahf
aam
(bad)
or
jmp
adc
icebp
jb
adc
hlt
shl
fwait
sub
fnstsw
dec
daa
and
popf
popa
mov
mov
sub
lods
(bad)
push
cmp
fcomp
pop
popa
popa
xor
(bad)
pop
jl
sub
(bad)
jo
hlt
sbb
sub
add
shl
inc
mov
push
outs
sub
xchg
popf
mov
call
sub
xchg
cmp
or
cmp
xor
mov
aas
popf
push
sbb
iret
jge
or
sbb
loopne
jb
mov
cmc
mov
push
mov
adc
push
clc
scas
adc
lahf
hlt
adc
(bad)
(bad)
cmp
retf
aam
and
mov
pop
stc
das
xchg
lahf
pop
push
sahf
inc
adc
jne
xchg
sub
cmp
dec
stos
and
arpl
nop
dec
clc
sbb
call
out
std
xlat
fcomip
fistp
ins
sub
out
ret
or
cmp
push
push
pop
push
and
rol
test
cmp
ret
push
dec
xlat
xor
call
retf
repz
retf
or
and
mov
sub
lods
xchg
in
cmps
dec
xor
retf
ss
or
outs
loop
call
cmp
mov
data16
pop
jns
or
lea
pop
lock
das
adc
xor
fdivr
mov
das
in
push
push
cmp
mov
push
test
(bad)
lock
xchg
dec
addr16
push
mov
jne
push
clc
push
div
pop
fbstp
(bad)
and
xor
data16
mov
push
mov
icebp
mov
mov
popf
fistp
pushf
idiv
shr
lea
movs
stos
pop
mov
fdivr
jns
aam
mov
ret
sub
jle
sti
enter
test
call
add
push
frndint
jno
imul
ja
cmc
mov
xchg
loop
loopne
out
xchg
or
pop
jp
jo
and
pop
pop
popa
xor
sar
mov
jb
push
mov
xchg
in
cmp
repz
xor
in
movs
fild
repz
sub
dec
pop
mov
enter
xchg
and
xchg
jns
sbb
xor
or
ficom
ds
mov
or
fdivrp
imul
dec
jno
pop
dec
add
push
inc
cmc
cmp
adc
jecxz
loopne
jo
test
cmc
or
mov
out
sbb
fwait
xchg
rol
retf
xchg
dec
mov
ja
aas
pop
test
lea
aaa
mov
push
hlt
sbb
popf
xor
js
mov
hlt
mov
into
ror
push
fisub
or
shl
(bad)
retf
or
cwde
pop
cmp
shl
out
stos
jle
aam
adc
jge
repnz
shl
scas
div
jne
add
test
inc
aas
shl
(bad)
ja
leave
push
test
into
rcl
(bad)
xor
rcl
aaa
fcomip
and
fdiv
addr16
adc
test
push
sbb
cmp
fcom
scas
xor
pop
xchg
dec
repz
repnz
xor
xor
data16
sub
cld
pop
shr
fbld
xchg
xchg
jl
arpl
jge
mov
sub
fcom
push
jmp
cmp
jae
pop
cmp
add
nop
push
ins
fisub
xchg
mov
or
pop
ins
push
jmp
test
fwait
dec
and
jmp
jge
daa
jl
lods
idiv
test
pop
xlat
mov
addr16
or
ret
jnp
push
(bad)
dec
mov
lock
push
ja
dec
fist
mov
lds
sbb
jmp
ret
pop
lahf
xchg
cmps
sub
or
clc
jne
ds
je
cmc
pop
xchg
xor
(bad)
pop
lahf
inc
ss
nop
inc
je
loope
lea
inc
add
add
cmp
add
xchg
jno
mov
push
imul
push
or
xchg
push
ret
das
mov
jle
ss
sub
add
mov
add
xchg
mov
ret
cli
rol
imul
xrelease
(bad)
sbb
jnp
out
push
dec
out
lods
jns
xchg
scas
and
inc
jp
imul
xchg
cdq
cwde
call
pop
sbb
out
addr16
inc
mov
push
(bad)
cwde
xchg
adc
cmps
ss
daa
daa
outs
xchg
push
mov
sub
mov
jns
hlt
bnd
jbe
shr
mov
pop
xchg
lea
add
sbb
mov
jbe
sahf
ins
aam
in
int
jb
adc
mov
xlat
cmp
and
sbb
jae
jae
or
xchg
ret
mov
imul
nop
or
or
data16
mov
out
xor
test
pop
cli
leave
pop
and
loop
push
cmc
mov
stos
ins
popf
rcr
xchg
mov
aam
add
scas
jo
jo
ss
mov
lds
(bad)
sub
xor
icebp
mov
inc
add
pusha
push
(bad)
scas
cmps
and
mov
and
adc
mov
sub
jmp
cmp
xor
(bad)
add
ja
lahf
jecxz
jnp
pop
and
gs
fadd
mov
jnp
push
fcom
or
stos
xchg
rcr
dec
jge
es
xor
int3
inc
jecxz
data16
adc
not
sbb
test
adc
xchg
test
push
and
js
push
clc
aam
das
bound
mov
or
jle
pushf
es
cwde
popa
sbb
jmp
iret
popf
inc
sub
in
cwde
call
sti
(bad)
lahf
dec
mov
cmc
xchg
cmc
addr16
xchg
push
push
test
jmp
xlat
arpl
ret
jbe
cmc
out
pop
movs
dec
repz
retf
or
push
nop
leave
ins
cmp
inc
outs
ret
dec
movs
stos
mov
je
or
sub
fisub
js
fwait
xchg
out
xchg
pop
cdq
out
mov
imul
mov
int
sbb
mov
pop
inc
hlt
adc
into
mov
test
mov
out
mov
xor
retf
fs
pop
dec
gs
jmp
pop
mov
and
mov
xchg
in
outs
outs
push
and
mul
and
pop
ins
call
xchg
call
clc
(bad)
into
addr16
cmp
aas
sbb
loop
xchg
xor
xor
pop
xor
(bad)
stos
pop
jg
or
push
push
push
loop
pop
xor
pop
loop
mov
cmp
lods
jb
xchg
(bad)
out
(bad)
jmp
ins
sbb
xchg
jns
dec
jle
mov
mov
sub
adc
xchg
loope
adc
es
dec
fidiv
adc
or
je
mov
hlt
mov
pop
jb
or
add
ja
dec
mov
lds
sbb
and
std
add
add
cwde
mov
out
out
enter
xor
ins
cmp
and
pop
fwait
ret
cmp
inc
sbb
(bad)
jmp
fwait
mov
and
(bad)
add
sbb
call
xchg
jno
xchg
rol
xchg
sbb
cmp
xor
add
fcom
repnz
jl
or
or
jo
pop
aaa
and
add
cmp
push
jo
inc
inc
jo
sub
fnsave
loop
xor
push
test
mov
xor
inc
fisttp
fidiv
pmaxub
inc
inc
rcr
cmps
je
sub
retf
fnstsw
shl
jnp
mov
(bad)
test
jae
(bad)
jp
popf
bound
(bad)
pop
add
pop
jge
add
fistp
fwait
cmp
mov
cld
cli
mov
into
fild
mov
jle
pop
ficomp
sub
fdivp
mov
adc
sahf
and
xor
jl
in
cmp
shl
push
fnstsw
dec
out
sahf
pop
gs
lods
sbb
push
pop
icebp
mov
mov
aad
mov
xchg
loopne
push
xchg
ret
out
inc
test
loop
gs
out
sub
or
sar
mov
sub
addr16
and
or
sbb
aas
xor
and
pop
outs
jnp
ret
adc
sub
std
mov
mov
sub
outs
inc
ins
pop
adc
ret
xor
cmc
ret
add
stos
adc
icebp
mov
sub
add
or
fistp
cmp
ja
mov
jg
test
mov
jg
add
jnp
les
jmp
cld
loope
jbe
fs
loop
jns
or
sbb
push
out
sbb
mov
lods
xchg
push
sub
mov
rcl
das
fcom
dec
icebp
and
mov
gs
rcr
jp
xor
repz
(bad)
jo
cmp
sbb
daa
ds
mov
mov
mov
xor
jl
cmp
fwait
loope
mov
dec
cli
xor
sbb
push
push
adc
push
and
ret
xor
push
push
sahf
dec
mov
adc
jp
pop
inc
xor
fisubr
pop
addr16
aad
ins
in
call
jo
stos
mul
or
lods
xchg
movs
retf
rcr
lock
jnp
xchg
inc
xor
sbb
aas
push
aas
inc
jp
loop
mov
fist
dec
repnz
push
in
pop
fdivr
popf
or
repz
mov
cli
xchg
pusha
test
xchg
jns
jb
lock
push
cli
daa
retf
or
mov
sbb
in
pop
inc
in
xchg
mov
int3
jge
out
xchg
pop
xchg
sahf
imul
mov
inc
popf
mov
add
and
sahf
(bad)
inc
out
sbb
inc
(bad)
mov
lods
sub
and
add
inc
scas
iret
rcl
jns
fadd
sti
and
and
adc
cli
adc
sbb
aas
shl
arpl
les
push
sbb
dec
cwde
lds
cmp
shl
push
xchg
push
adc
(bad)
repz
inc
cld
mov
outs
inc
dec
outs
add
test
mov
ror
and
hlt
xor
mov
push
add
cmp
scas
hlt
arpl
test
fwait
xchg
into
je
adc
xor
(bad)
cmp
adc
call
(bad)
(bad)
adc
adc
cwde
inc
jmp
mov
cmps
push
and
aam
ins
test
or
lods
sbb
and
inc
popa
xchg
loop
push
jnp
adc
jp
push
out
mov
inc
xor
stc
pusha
add
push
loopne
iret
and
mov
fdiv
push
mov
cdq
leave
mov
jb
add
mov
fcomp
jne
mov
mov
call
xchg
jmp
xchg
shl
cdq
(bad)
iret
loop
mov
lock
outs
and
mov
test
outs
push
ja
push
xchg
xchg
mov
or
cmp
(bad)
scas
mov
jp
sub
ins
adc
int
stc
dec
test
icebp
icebp
std
dec
and
mul
iret
sbb
cld
(bad)
ficom
repnz
xchg
in
cs
xchg
addr16
(bad)
cmp
shl
into
push
xchg
(bad)
fs
jnp
cmps
mov
xlat
and
movntps
jno
add
adc
out
add
adc
daa
iret
or
aad
mov
mul
les
or
sbb
cwde
xor
mov
sar
inc
dec
cmp
xchg
loopne
popf
repz
test
cmps
outs
dec
jp
xor
jge
dec
stos
mov
mov
sahf
movs
fisttp
cmp
mov
mov
cs
push
sahf
pop
xchg
cmp
cli
xchg
cs
mov
jecxz
xor
test
ja
inc
push
adc
repz
push
xchg
jae
xor
or
aam
js
pop
(bad)
push
or
mov
jbe
popa
push
(bad)
pop
jnp
cmc
std
and
jnp
rcl
mov
add
cs
mov
repz
mov
jne
add
cmp
push
dec
dec
inc
mov
or
xchg
test
jg
mov
test
or
inc
leave
mov
fdiv
shl
add
cmp
daa
popa
or
pop
pop
sbb
mov
jp
cdq
gs
ret
(bad)
in
push
push
test
sub
retf
xchg
mov
mov
mov
push
scas
outs
mov
fdiv
or
adc
das
mov
mov
sbb
test
mov
mov
pushf
mov
push
sub
xchg
cdq
add
movs
mov
(bad)
jp
mov
inc
bound
scas
mov
fs
mov
hlt
dec
push
cmp
jmp
and
(bad)
(bad)
mov
xchg
or
icebp
imul
lds
sub
cmc
inc
adc
test
ret
mov
cmp
mov
jnp
cmps
xchg
mov
imul
shl
cmp
and
arpl
test
sub
cmp
mov
jno
pop
out
test
cmps
mov
jb
stc
add
int3
sub
mov
fs
or
lahf
pop
push
js
imul
nop
cmc
jb
xchg
adc
scas
cmps
inc
add
ins
pop
das
xor
push
nop
mov
sub
adc
or
jns
cmp
dec
sti
sar
fbld
out
jp
mov
xchg
cmp
imul
mov
in
jp
and
dec
(bad)
sub
fld
or
in
sbb
push
loope
ret
fcmovne
mov
pop
addr16
fsub
inc
push
jmp
ins
jge
imul
xor
les
pop
lods
jns
jno
(bad)
addr16
sub
fnstcw
pop
sar
jp
jle
(bad)
jp
pop
sbb
lahf
lods
mov
in
inc
mov
inc
ins
mov
and
sbb
inc
ja
push
dec
ins
stc
mov
popa
add
(bad)
pop
cmp
adc
ret
ins
mov
xor
pushf
xchg
repz
jle
cmp
push
ja
fisubr
pop
xchg
mov
iret
leave
bndstx
add
inc
cdq
scas
xchg
cmps
inc
and
sti
sbb
cwde
cmps
cmp
xor
inc
loopne
hlt
mov
dec
push
stos
sbb
push
inc
out
neg
jge
lock
repz
jg
aas
jo
fsubr
push
and
test
(bad)
rcr
xor
mov
aaa
jge
dec
aam
stos
xchg
scas
xchg
xchg
pop
push
pop
pop
mov
ret
xor
inc
sub
and
aam
push
mov
inc
mov
mov
dec
cmp
inc
lahf
aas
das
mov
pushf
out
mov
(bad)
xchg
mov
xchg
test
pop
mov
fisttp
mov
js
fisubr
dec
loop
cli
cmps
(bad)
adc
loopne
jne
and
gs
outs
icebp
or
pop
pop
lods
int
mov
shl
ret
mov
push
adc
repz
push
mov
addr16
nop
dec
add
mov
cmp
call
adc
inc
pop
xor
xchg
mov
jae
jae
jg
cmc
cdq
(bad)
dec
addr16
push
add
add
cmp
jne
cmp
jae
mov
push
or
jg
iret
adc
aam
adc
pop
or
call
fsubrp
xchg
mov
es
fdivr
mul
mov
mov
out
dec
and
dec
xchg
sbb
jbe
inc
call
push
and
push
mov
not
jmp
inc
pop
addr16
mov
test
xchg
pusha
aam
adc
mov
mov
adc
call
jmp
inc
and
sub
call
add
dec
mov
push
xchg
icebp
ror
xor
jns
movs
jbe
and
push
mov
mov
dec
movs
out
pop
pop
rol
mov
jne
cmps
aas
mov
adc
fistp
pop
cmp
mov
dec
sahf
cmp
pop
mov
inc
mov
push
bound
in
sbb
out
lds
inc
scas
pop
jne
inc
out
push
push
jno
out
test
jae
sbb
jns
sub
xchg
int3
mov
xor
(bad)
mov
or
outs
ins
repz
test
push
fsubr
dec
cdq
stos
mov
xchg
mov
sub
mov
test
out
push
inc
arpl
or
pop
cmps
pop
mov
pop
xor
fstp
not
aad
into
sbb
(bad)
sub
lods
push
adc
cmps
ds
sub
ds
movs
cmp
lock
repnz
fisubr
mov
push
repnz
jae
test
lahf
mov
cmp
mov
paddw
lods
enter
jo
gs
psubsb
fisttp
lds
or
mov
xchg
les
repnz
movs
loopne
sbb
mov
mov
xor
stc
arpl
fucomp
mov
scas
bound
movs
loope
jne
scas
jno
xor
jg
mov
aad
inc
pushf
cmp
mov
aad
shr
jg
xchg
xchg
jne
pop
pop
jnp
push
push
pop
jmp
xchg
xor
popa
shl
cmc
fstp
popa
pusha
and
and
add
pop
sahf
push
dec
mov
sub
ss
das
mov
adc
in
mov
js
test
fild
sub
inc
pop
repz
mov
int
xor
sub
jbe
sub
jnp
sub
aad
inc
inc
adc
xor
int3
xlat
cli
pop
mov
sub
fadd
mov
stc
ss
jle
fwait
ins
jae
xor
pop
mov
fwait
xor
sahf
push
add
shl
stos
outs
out
(bad)
repz
fbstp
ret
xchg
out
inc
enter
(bad)
arpl
xchg
dec
adc
fldenv
out
arpl
gs
jp
pop
mov
jl
(bad)
jle
mov
das
into
mov
jnp
fmul
xchg
leave
ja
fs
lods
push
retf
in
push
jb
rcl
pop
cmc
mov
loope
push
(bad)
push
pop
push
out
mov
pop
dec
mov
push
or
push
leave
iret
int3
ds
jae
ins
int
mov
fwait
xor
sub
ret
and
mov
lahf
jbe
inc
push
pop
jp
and
xchg
sbb
aad
addr16
jl
daa
into
xchg
push
pop
add
pop
inc
fs
bound
inc
movs
cmp
mov
jno
retf
jmp
arpl
cdq
movs
xchg
loopne
dec
and
add
lods
cmp
jnp
pop
addr16
retf
iret
and
inc
sar
adc
or
sub
xor
mov
cmp
xor
out
jge
rcr
cmp
test
rcr
push
cmps
jecxz
ss
es
dec
xchg
ja
cmp
movs
out
iret
push
in
mov
pop
sbb
pop
(bad)
outs
and
lea
fs
xlat
push
xor
pop
mov
icebp
loopne
shl
xchg
iret
cmps
dec
in
inc
pop
jge
leave
int3
das
and
ja
adc
movs
xchg
fst
pop
pop
xor
int
sub
push
in
and
cmp
gs
or
push
stos
add
mov
adc
mov
fbld
mov
add
ja
je
sahf
mov
sbb
rcl
mov
cmp
loopne
fdiv
fucom
mov
sub
cwde
popf
cmp
pop
add
xchg
fmul
dec
fcom
mov
jae
imul
push
ja
loop
sar
inc
and
push
add
and
aas
mov
dec
ss
push
(bad)
inc
popa
nop
mov
sub
mov
push
jb
lea
stos
mov
push
aad
aam
sti
add
mov
mov
test
fs
jns
ins
call
adc
hlt
jo
dec
in
lods
loope
js
xor
test
je
jb
pushf
fldcw
(bad)
das
add
mov
ins
test
inc
test
adc
aam
xchg
scas
outs
repnz
or
mov
mov
sub
aam
cmp
cmp
dec
inc
nop
dec
mov
cdq
xor
in
ja
outs
sti
jbe
ins
pop
mov
pop
lahf
movs
ja
jne
and
int
aas
repz
test
(bad)
fbstp
xchg
mov
popf
rcl
outs
push
push
adc
out
cmp
or
gs
mov
push
pop
cs
jmp
mov
pop
adc
push
push
xlat
cmps
mov
xchg
ret
fwait
popf
adc
shl
je
cdq
rol
or
adc
std
push
fs
dec
leave
int3
in
fistp
dec
jne
enter
fnstcw
pop
adc
fild
in
and
fisubr
fcomp
adc
xchg
int
push
inc
mov
je
repz
pop
or
xor
cmp
call
sar
cmp
in
xor
fcos
sti
movs
dec
push
or
iret
add
mov
pop
xchg
mov
gs
jmp
cld
shr
idiv
out
adc
fbstp
add
pop
xor
ret
add
call
cmp
call
mov
(bad)
icebp
pop
xchg
jae
cmps
add
add
fisubr
test
mov
das
fstp
and
push
scas
loop
push
mov
loopne
js
xchg
cwde
mov
movs
mov
adc
sub
mov
inc
adc
inc
inc
loop
xor
out
fst
mov
outs
test
idiv
jge
mov
ins
scas
aad
cmovno
stos
sbb
adc
leave
cmp
fwait
inc
sbb
and
clc
ret
inc
mov
enter
bound
adc
xchg
mov
adc
aas
dec
dec
popa
aad
loopne
(bad)
cli
shr
adc
dec
inc
or
mov
jns
je
ret
adc
dec
push
add
xchg
cmp
in
imul
add
into
mov
dec
push
(bad)
xchg
sub
clc
or
mov
jb
ins
jmp
movs
and
pop
mov
mov
mov
jno
mov
and
ret
inc
jmp
xchg
cmp
mov
stc
mov
jp
mov
pushf
fwait
pop
stos
sub
xor
ins
mov
push
sahf
xor
ds
xchg
adc
mov
pop
xchg
neg
push
ins
cmp
fwait
outs
out
movs
outs
sahf
xlat
lods
adc
sub
gs
xchg
loope
adc
test
sub
and
sbb
and
mov
lds
bound
js
gs
push
stc
mov
(bad)
jae
fisttp
and
and
addr16
jle
cwde
out
sbb
or
sub
dec
sbb
xchg
xor
adc
mov
in
cmp
mov
and
xchg
adc
xchg
add
xor
mov
popf
mov
mov
xchg
repz
dec
push
ins
and
xchg
sbb
sbb
retf
add
adc
rcl
ss
or
fisttp
out
pop
ins
mov
adc
(bad)
cmps
jmp
(bad)
dec
out
inc
(bad)
adc
xchg
mov
fs
ins
movs
sahf
repz
scas
mov
das
pop
mov
inc
sub
loop
cdq
aaa
adc
mov
shl
or
mov
pop
rcr
lahf
cwde
jle
jne
arpl
sub
mov
and
out
push
cmp
cdq
push
xor
jge
shl
inc
outs
repz
sub
xchg
mov
popf
push
addr16
jle
and
jmp
mov
xchg
or
sar
loopne
sub
pop
sbb
aas
test
lahf
fsubr
cdq
mov
jg
mov
mov
push
mov
dec
pusha
ins
shl
pop
ror
fbld
fld
dec
mov
cli
(bad)
js
xchg
dec
add
icebp
xlat
das
lods
sbb
mov
ins
lahf
mov
push
rol
das
sub
cmp
dec
ins
xchg
cmp
mov
and
(bad)
test
call
retf
scas
push
inc
shr
cmc
enter
lea
push
xor
push
daa
or
sbb
bound
jl
cmc
loope
fisub
cdq
xor
inc
fwait
rcr
mov
shl
arpl
aaa
sub
aad
data16
xchg
jb
add
imul
stos
pop
pop
pop
cs
push
xor
ins
clc
das
sub
jg
dec
pop
add
sbb
mov
jno
(bad)
outs
dec
mov
outs
pop
ins
adc
add
cli
sahf
and
sbb
xor
xor
xchg
enter
xchg
fiadd
xor
mov
mov
or
lods
ss
imul
cmps
jb
jmp
outs
popf
mov
loopne
push
clc
imul
sub
push
add
sub
movs
push
in
push
pop
inc
cli
not
mov
inc
mov
jmp
mov
push
jmp
sub
bound
outs
inc
ret
fiadd
in
enter
sbb
leave
frstor
dec
cmp
imul
add
in
std
lods
jmp
rol
call
fwait
push
fiadd
xchg
xchg
mov
adc
mov
dec
inc
lahf
into
mov
scas
enter
jg
sub
std
dec
mov
sub
cmps
rcr
xlat
inc
adc
cmp
jge
mov
push
xchg
fs
jns
std
jmp
lods
fidivr
adc
jmp
popf
xchg
dec
add
xchg
jle
out
sub
inc
icebp
test
jmp
mov
(bad)
push
and
mov
xchg
je
scas
sbb
(bad)
ficomp
ror
mov
ss
popf
xor
ror
mov
retf
outs
dec
sbb
xor
mov
xor
sub
mov
and
cwde
(bad)
adc
out
pushf
cmp
cs
out
and
jb
std
lods
scas
js
test
into
repnz
outs
cmp
dec
gs
mov
jmp
scas
hlt
jno
std
stos
ss
rcl
inc
ins
out
mov
sbb
icebp
xor
shl
sahf
lock
cmp
sti
xor
es
mov
dec
and
test
cmp
inc
jnp
sbb
bound
pop
bound
or
sub
or
dec
clc
fs
mov
iret
aam
(bad)
loope
sti
aad
xchg
adc
aaa
aas
jbe
mov
in
jo
sti
or
scas
xchg
call
fsub
int
add
jecxz
ror
push
test
jno
leave
out
ret
cs
add
pop
xlat
xchg
test
pusha
cmp
adc
stc
pop
lods
and
fwait
out
rcl
sti
inc
cmc
int
lock
imul
out
inc
out
mov
and
jb
mov
pop
adc
push
cmp
mov
push
aam
fs
pusha
(bad)
xor
adc
mov
or
dec
push
lahf
sub
jb
cli
mov
xor
mov
mov
in
(bad)
mov
aas
pop
sub
test
gs
sbb
fwait
inc
mov
mov
call
movs
mov
mov
mul
cli
push
or
mov
cmp
retf
jge
push
or
push
pop
pop
sub
pop
jg
sti
test
jge
cdq
xchg
mov
into
jge
std
ins
call
ins
xor
out
and
fstp
mov
mov
aaa
mov
out
je
pop
adc
addr16
pop
sbb
push
sub
xor
icebp
iret
xchg
add
fist
cmp
ret
sahf
daa
cmp
sub
iret
rol
cmp
push
leave
adc
jmp
pop
cmp
out
(bad)
push
adc
cmps
sbb
add
ins
inc
or
arpl
jne
and
aaa
or
or
jne
(bad)
jl
inc
jl
int
ins
sbb
xor
sub
mov
add
loopne
dec
push
lods
inc
das
mov
pushf
dec
pusha
pop
xor
(bad)
sbb
mov
out
lock
jl
cmp
std
ins
adc
in
stc
cmc
jb
cmp
cwde
push
mov
xor
mov
call
mov
mov
out
mov
push
inc
cmp
call
sub
sti
or
(bad)
mov
inc
xor
sbb
cwde
test
jl
rcr
xchg
or
(bad)
mov
inc
cmp
push
arpl
dec
mov
ds
nop
shl
adc
inc
sub
outs
test
jne
fucom
sbb
std
mul
iret
jne
scas
scas
and
pmaxsw
out
jge
gs
jmp
stos
cwde
es
dec
leave
push
cmps
aaa
cmps
jg
jmp
or
call
jbe
push
(bad)
(bad)
jecxz
ss
test
push
rcl
push
cmps
in
sub
add
ins
out
jmp
nop
mov
adc
mov
add
lock
jg
es
xchg
or
pop
aam
mov
xor
cs
pop
push
je
pop
mov
stos
mov
pop
or
or
sbb
rcl
inc
sbb
imul
shr
aad
mov
pop
dec
int
cdq
xor
stos
pop
push
aaa
adc
lods
pop
test
cmps
repnz
movs
outs
sahf
ret
pop
dec
or
leave
pop
ss
in
add
pop
scas
push
inc
sbb
aas
stos
out
sbb
popf
ins
dec
jge
call
sbb
mov
push
adc
xor
push
xchg
cmps
dec
aaa
and
inc
mov
dec
push
and
test
into
out
pop
lahf
outs
mov
sar
jge
ja
imul
movs
nop
mov
mov
mov
push
test
imul
pusha
mov
imul
fs
aaa
push
or
addr16
jecxz
dec
ins
fidiv
mov
mov
cld
sub
outs
dec
or
jmp
push
push
das
out
add
push
xchg
fstp
cs
sub
aas
or
adc
shr
cmps
adc
cmp
and
in
icebp
jp
aas
fsubrp
pop
jmp
(bad)
mov
ja
imul
adc
imul
sbb
jmp
inc
mov
ss
ins
sbb
xchg
push
fimul
sub
sbb
loopne
pop
das
fist
in
pop
add
mov
xor
outs
call
jno
aaa
dec
jne
dec
add
adc
pusha
mov
inc
call
sti
movs
ret
out
hlt
and
imul
sar
je
int3
jge
gs
test
std
dec
scas
jb
mov
daa
mov
ret
rcl
push
dec
adc
dec
adc
lahf
sahf
xchg
sbb
and
jmp
rcr
pop
add
popa
stc
pop
xor
je
addr16
daa
(bad)
sbb
adc
xor
repz
inc
cmp
fst
ds
xchg
jbe
ret
xchg
sub
add
call
and
ret
sub
(bad)
and
scas
retf
not
inc
adc
cmp
add
imul
push
dec
test
popf
(bad)
loope
aad
outs
(bad)
inc
test
mul
fcom
inc
sar
sub
call
mov
jmp
dec
retf
bound
ret
jbe
mov
cmp
dec
mov
sub
repz
push
mov
add
adc
sub
or
jecxz
leave
pushf
cmp
jo
jl
bound
cwde
jge
mov
rcl
push
xchg
rol
jae
repz
jae
scas
test
div
lock
adc
mov
fxch
push
lds
jbe
cli
ins
cmc
leave
sahf
xchg
mov
mov
test
adc
mov
or
sub
sbb
lods
pop
cwde
mov
push
cmps
inc
lahf
xchg
adc
loope
out
mov
xor
or
cmp
in
in
sub
(bad)
add
out
or
adc
jbe
jmp
lock
and
in
iret
cwde
xchg
adc
nop
mov
mov
addr16
or
scas
cmp
loope
pop
or
push
ds
pushf
add
imul
mov
popa
cmp
cmp
inc
in
(bad)
in
addr16
pop
cmc
xchg
dec
pushf
adc
jle
in
in
out
test
mov
mov
mov
sub
jg
or
lods
sbb
mov
fdiv
shr
aaa
sub
in
jnp
adc
add
mov
push
cld
sahf
daa
cmp
rol
add
pop
jnp
movs
das
jl
mov
daa
bound
xor
and
ds
cwde
stos
cmp
or
push
arpl
movs
call
inc
mov
xchg
mov
ins
mov
repnz
addr16
xchg
cdq
imul
inc
dec
xor
push
dec
add
jbe
mov
test
or
fdiv
mov
jmp
out
push
pop
loop
pusha
push
es
xor
std
rcr
pushf
mov
out
test
into
adc
xchg
rcr
jg
xchg
cmp
lock
je
fadd
rcr
sub
mov
popf
test
sahf
cmp
shl
mov
pop
in
lahf
int3
mov
hlt
mov
mov
cmp
mov
sti
ds
mov
xlat
(bad)
js
xor
jge
add
scas
mov
outs
mov
cs
or
in
inc
jae
sbb
add
lods
into
dec
cmps
jo
push
lods
pop
test
push
je
mov
arpl
hlt
pop
mov
ffreep
mov
xchg
cmps
call
int3
js
push
cmp
mov
mov
mov
mov
jmp
(bad)
push
gs
cwde
into
push
in
xchg
jbe
xchg
sub
mov
arpl
push
jno
dec
inc
hlt
jbe
adc
ret
mov
das
or
inc
sub
test
icebp
pop
jae
adc
pop
mov
xchg
mov
inc
adc
push
sub
sar
outs
xor
loope
mov
adc
push
loop
ins
push
cmc
sub
push
mov
pop
sar
fstp
(bad)
ss
pop
in
vmovq
out
inc
pop
dec
cmp
or
and
mov
(bad)
xor
std
lds
mov
fwait
jge
push
add
dec
xchg
jl
push
or
aas
jne
ds
aam
loopne
je
pop
(bad)
adc
(bad)
in
adc
cwde
pop
mov
mov
jne
(bad)
rcr
ins
push
cdq
jge
cmovo
icebp
jecxz
jmp
jae
add
push
add
pop
clc
mov
das
jmp
and
mov
pusha
inc
jecxz
cmp
jmp
xchg
scas
(bad)
mov
pop
cmp
clc
je
push
sub
sbb
jne
inc
and
cwde
mov
sub
jp
sti
ja
lea
mov
push
movs
mov
mov
outs
push
aas
push
pop
add
(bad)
pop
ret
ds
imul
hlt
add
in
fisttp
imul
out
xchg
adc
mov
shl
pop
aas
inc
mov
mov
push
neg
mov
mov
imul
call
lods
sub
sar
push
push
lods
push
sar
sbb
mov
test
aas
ds
push
pop
dec
mov
cmp
scas
lahf
inc
push
jno
add
cmp
pop
jmp
ds
adc
push
inc
add
pop
int3
in
jns
int3
lahf
and
jb
and
rcr
outs
mov
push
inc
mov
(bad)
pushf
test
and
pop
sub
repnz
int3
test
inc
mov
sbb
adc
cli
hlt
xor
mov
and
out
retf
lock
pop
mov
push
pop
jae
out
imul
jmp
shr
outs
jge
dec
pushf
cmp
scas
adc
aad
jae
addr16
ret
or
mov
dec
cmc
push
(bad)
jge
div
mov
cli
adc
ret
les
xchg
xor
pop
aas
fs
stos
loop
int3
mov
xor
mov
sub
ret
mov
push
pop
nop
mov
xor
icebp
shl
mov
(bad)
mov
xchg
iret
ins
mov
jae
test
stos
in
jmp
in
jno
jns
pop
test
dec
push
jo
and
xchg
fwait
out
shr
(bad)
pusha
loope
inc
sub
dec
cmp
retf
fs
rcr
and
stc
daa
sbb
clc
jl
sub
in
mov
cmps
lahf
(bad)
inc
sub
sbb
add
pop
push
das
xchg
rcl
or
(bad)
cli
fmul
xchg
inc
xor
(bad)
retf
sbb
cmps
clc
pop
pusha
and
cli
inc
and
and
pop
js
adc
or
or
xor
aas
gs
adc
mov
adc
push
jp
add
sbb
out
push
out
or
(bad)
mov
add
pop
pusha
inc
data16
arpl
sbb
data16
push
and
loopne
dec
pushf
icebp
xchg
add
mov
mov
lock
pop
mov
sti
xchg
dec
int3
ss
in
inc
ins
ret
scas
repz
jnp
mov
icebp
add
ret
test
inc
jmp
leave
and
lahf
push
mov
adc
pusha
and
pop
mov
cmp
adc
shr
rcl
sar
push
jecxz
jnp
mov
inc
cmp
sbb
ja
adc
out
inc
arpl
mov
in
out
iret
sub
div
stos
sub
test
mov
xor
lea
push
jge
pop
mov
int3
mov
xchg
into
imul
mov
sbb
mov
data16
cwde
add
xlat
cmp
stc
cmp
das
and
call
pop
popa
xchg
xchg
jne
pop
xchg
push
and
push
xor
pop
rcl
and
push
data16
and
mov
mov
dec
lahf
xor
inc
ins
dec
mov
mov
stc
jbe
pop
ja
add
mov
sahf
icebp
iret
jmp
call
dec
fcmovnbe
(bad)
cmc
rol
es
fld
repz
mov
ror
push
mov
popf
jb
es
xor
or
cmp
outs
push
test
xchg
pushf
xchg
imul
xor
push
imul
js
pop
jecxz
or
jmp
xor
stc
fwait
mov
cmp
pop
or
in
jg
xchg
retf
cmps
mov
mov
(bad)
rcl
movs
pop
aaa
and
sub
(bad)
loope
and
sbb
jns
fld
pop
adc
repz
addr16
(bad)
(bad)
gs
lds
pop
js
dec
add
sbb
movs
sub
cli
push
jb
mov
sbb
and
cdq
leave
xor
adc
scas
mov
mov
aam
test
shl
mov
(bad)
or
cmp
(bad)
push
sar
ds
jmp
(bad)
loopne
aaa
lods
aas
mov
mov
loope
rol
mov
mov
jge
leave
xchg
sub
pop
imul
loopne
mov
cmp
add
sbb
ret
adc
mov
iret
xor
pop
das
pop
in
dec
out
xchg
int3
or
ucomiss
jmp
outs
ficomp
xor
icebp
inc
and
mov
ss
ror
test
cmp
cli
mov
sub
cmp
sbb
pushf
rol
mov
das
stos
adc
popf
bound
pop
add
jp
push
inc
mov
adc
mov
and
retf
out
mov
xor
jae
mov
int3
inc
cmc
out
cmp
and
nop
xor
jne
jle
in
or
ret
or
fisttp
ja
test
leave
jmp
es
iret
jae
xor
aaa
push
fwait
cs
dec
xor
fild
cwde
out
pop
test
or
inc
pop
push
mov
call
jb
cmp
outs
dec
nop
call
pop
add
xor
pop
jno
(bad)
inc
push
stos
scas
mov
inc
sbb
jbe
pop
and
sub
xor
sbb
mov
add
sub
scas
aad
(bad)
test
mov
popf
pop
push
shl
mov
pop
(bad)
mov
inc
push
pushf
pop
cmp
out
xchg
jo
sbb
xchg
pop
jnp
ds
inc
cs
pop
xor
inc
ss
imul
(bad)
in
xchg
inc
adc
pop
out
xor
ds
int
loop
sub
or
xchg
(bad)
dec
add
jmp
xchg
sub
mov
jne
adc
pop
and
xchg
out
mov
jp
xor
cld
mov
lock
sub
mov
aaa
dec
inc
aaa
bound
push
repz
test
or
(bad)
adc
pop
imul
enter
imul
movs
fsub
mov
cmp
ss
or
or
test
push
(bad)
and
lds
dec
mov
sub
ret
lock
into
aas
mov
pop
push
jp
int3
mov
mov
pop
fsub
or
arpl
rcl
fsubr
mov
dec
ss
and
mov
int3
jg
fdivrp
hlt
mov
cmp
mul
popf
std
cdq
mov
fbld
pop
cwde
mov
sub
xor
sbb
lds
add
inc
rcr
inc
mov
ds
mov
popf
test
ror
cmp
jmp
(bad)
pop
sub
mov
imul
mov
jg
xchg
cmc
sub
jmp
push
mov
jne
arpl
push
dec
dec
xchg
out
and
push
sub
(bad)
movs
push
jp
xor
xor
xchg
cmp
ins
cdq
fs
into
test
data16
push
xchg
sti
popf
cld
out
addr16
mov
cmps
lods
or
pop
ficomp
jb
(bad)
retf
xor
dec
pop
mov
minps
fild
daa
inc
(bad)
adc
cld
push
jns
pop
adc
pop
mov
and
mov
or
pop
jmp
adc
lds
ins
lahf
sahf
sbb
pop
mov
call
jecxz
xor
in
inc
in
xchg
nop
and
test
ds
mov
push
xchg
nop
xor
mov
push
jb
outs
hlt
mov
jl
inc
push
xchg
into
bound
sub
push
xor
data16
xor
ret
mov
xchg
ret
mov
add
lock
inc
(bad)
mov
imul
hlt
xor
mov
enter
mov
lock
cmp
into
loope
mov
push
je
pop
xor
rol
in
pop
popf
sbb
ins
sahf
leave
or
cmp
xor
and
ins
jnp
mov
in
fld
imul
(bad)
xchg
cmp
mov
rol
cmp
mov
pop
or
push
test
hlt
xchg
loop
mov
inc
and
in
(bad)
jns
rol
int3
bound
jo
mov
add
fmul
lahf
test
in
les
cdq
mov
in
and
mov
push
mov
pusha
cmp
dec
loop
int3
push
je
fisttp
sub
loopne
scas
imul
mov
adc
out
int3
sub
mov
fmulp
lds
xlat
cmps
pushf
inc
popa
inc
(bad)
xchg
fimul
out
aas
cmps
pop
aam
out
lahf
adc
pop
loope
test
scas
iret
pop
cmps
mov
pop
push
das
cmp
cmps
loop
sub
pusha
xchg
mov
inc
xor
pop
aad
mov
push
mov
xchg
mov
outs
or
sub
ja
repz
fsubr
dec
or
or
inc
pop
pop
lods
mov
dec
repnz
lds
ja
mov
mov
out
mov
idiv
cld
dec
stos
add
jns
jne
or
mov
fdivr
push
dec
mov
sub
fwait
push
mov
dec
xor
jbe
ins
inc
arpl
ret
mov
arpl
pop
pop
sti
mov
mov
cmps
(bad)
and
mov
ret
cmp
jg
and
inc
gs
fild
js
je
lods
(bad)
fist
mov
mov
popf
mov
fdiv
dec
retf
mov
jnp
(bad)
jo
mov
mov
cdq
stos
sbb
cld
jl
(bad)
xchg
ins
mov
cmps
mov
xor
sbb
scas
jp
pop
mov
xor
inc
lods
retf
bound
xor
scas
or
push
ins
sub
test
push
push
pusha
pop
ja
fsubr
scas
popf
adc
push
(bad)
ror
mov
push
pop
jnp
xor
out
jmp
pop
jbe
mov
clc
push
cmp
and
dec
push
dec
mov
push
inc
jo
cmp
dec
cmps
inc
mov
jno
push
test
xor
cld
cmp
jle
sbb
rol
data16
add
loopne
loopne
dec
test
jmp
cmp
cli
xor
icebp
sub
ins
addr16
es
jmp
add
repnz
pop
call
sub
mov
(bad)
daa
add
jo
push
adc
push
cmp
pop
xlat
pop
pop
ret
xchg
pop
sub
and
cmp
ror
test
sahf
cwde
xchg
mov
sbb
dec
movs
mov
(bad)
push
(bad)
not
cmp
sar
into
mov
sbb
out
cmp
ds
push
inc
test
retf
push
js
dec
cmp
inc
mov
mov
and
jecxz
pop
mov
mov
push
arpl
mov
sbb
xchg
mov
cmp
ror
push
std
sub
push
jp
repz
mov
test
push
sbb
cdq
mov
fsub
pop
repnz
in
push
pop
and
fist
pop
ficomp
mov
or
fdivr
push
mov
aad
xor
es
jle
xchg
adc
out
adc
sub
aad
xchg
movs
jmp
lock
in
dec
into
ficomp
mov
inc
dec
shl
mov
sub
push
pop
shl
jo
jp
shr
mov
retf
mov
lock
push
xchg
lods
aaa
push
es
into
loop
pop
push
movs
fisubr
(bad)
ret
stc
retf
out
fnstcw
mov
pop
dec
std
add
add
cdq
fldcw
les
out
sub
sbb
push
mov
lds
call
outs
add
mov
push
ins
and
pop
cmp
int3
xor
and
or
mov
jl
retw
pop
push
outs
push
dec
xchg
push
sbb
fidiv
mov
xchg
mov
out
es
jmp
test
stc
call
outs
test
xchg
scas
push
mov
mov
mov
(bad)
fld
inc
mov
into
lea
pop
push
dec
mov
mov
call
xchg
imul
popf
pop
movs
nop
arpl
cs
shl
push
push
sub
dec
fidiv
aad
sub
test
xchg
lea
bnd
cs
xor
into
push
in
or
add
jae
test
repz
out
stos
pop
in
sbb
mov
mov
addr16
fwait
leave
lock
icebp
push
fwait
loopne
data16
jb
scas
pop
inc
inc
aad
jp
and
jno
xlat
push
sub
xchg
mov
pop
mov
mov
jge
dec
jo
aad
xor
shl
jbe
call
loopne
pop
fs
cwde
pop
jns
cmc
inc
sbb
mov
iret
xchg
sub
push
push
pusha
movs
rcl
xchg
mov
jl
adc
loop
hlt
dec
cwde
test
and
ret
adc
dec
and
test
loop
push
xor
popa
test
cmc
lahf
inc
imul
cmp
dec
mov
jns
idiv
int3
push
cmps
xchg
out
(bad)
jmp
add
out
loopne
aam
out
ret
mov
jnp
jae
jo
mov
(bad)
fstp
fwait
sbb
and
sub
jns
xchg
std
sbb
jge
cmp
push
fidiv
pop
loop
out
xchg
xlat
mov
(bad)
xchg
mov
(bad)
pop
sbb
cmp
mov
sub
jbe
push
and
setg
addr16
ds
out
pusha
dec
and
cmp
pop
pop
shl
push
repz
and
sbb
and
mov
sub
stc
jne
jne
lods
dec
push
bound
add
dec
pop
xchg
dec
jg
nop
jbe
push
xchg
lods
cmc
jno
cmp
mov
addr16
das
mov
push
xor
aas
(bad)
arpl
retf
inc
or
in
dec
and
cld
adc
mov
or
adc
dec
repz
movs
movs
int
fsubr
push
popf
ret
xor
data16
ins
aaa
(bad)
mov
pop
mov
sub
out
pop
jl
enter
data16
aam
in
outs
std
inc
shl
inc
daa
popa
cmc
arpl
imul
mov
or
adc
enter
push
arpl
dec
mov
or
cld
push
dec
ins
int3
sub
jmp
test
lea
add
pop
lea
pop
jmp
push
mov
pop
mov
pop
jp
repnz
(bad)
dec
xchg
retf
jle
test
dec
mov
inc
cwde
dec
int3
pop
mov
shl
mov
adc
int3
addr16
jmp
jecxz
and
mov
cwde
shr
mov
nop
out
lock
loop
sub
mov
fstp
popa
cmp
jo
dec
shr
fist
xor
push
xchg
shr
mov
shl
and
mul
xor
icebp
jno
dec
pop
retf
sbb
xlat
sbb
stos
pop
leave
imul
rcr
jmp
push
movs
in
loopne
cs
push
retf
bound
shl
mov
call
push
or
dec
arpl
add
(bad)
push
inc
jle
leave
xor
xchg
mov
push
ins
cmp
mov
cli
cmp
mov
mov
inc
loop
hlt
adc
or
dec
mov
mov
(bad)
(bad)
stc
ins
nop
fdivr
sbb
sub
mov
add
or
jle
jae
jae
rcr
lahf
jmp
imul
repnz
pop
stos
xor
xor
push
ret
xchg
jns
leave
xchg
(bad)
adc
sub
cmp
xchg
fsubrp
ds
pop
and
cli
push
mov
sbb
inc
lahf
hlt
mov
(bad)
iret
loop
test
or
cmp
int3
test
outs
shr
jno
sub
ficom
mul
xchg
retf
jb
icebp
popaw
retf
xchg
mov
ins
sbb
xchg
adc
int
clc
xchg
rcr
mov
push
sub
cmps
add
in
(bad)
(bad)
rcr
xchg
std
push
jbe
pushf
xchg
cmp
push
test
nop
out
xchg
ja
jmp
ret
mov
or
shl
sub
sub
xchg
(bad)
js
pop
leave
repz
jno
sar
push
or
push
add
fs
iret
adc
daa
and
out
test
push
sti
outs
popf
inc
cmc
repz
jne
(bad)
out
in
inc
inc
dec
sahf
dec
sbb
xor
(bad)
xor
mov
mov
push
mov
(bad)
nop
dec
inc
cmp
mov
ret
pop
adc
mov
xor
push
mov
jbe
test
cmp
mov
pop
mov
dec
jae
jmp
pop
retf
ds
fldenv
(bad)
(bad)
cmc
mov
mov
fcomp
lock
cdq
cmps
mov
pop
dec
pop
mov
push
xchg
ud2
jne
dec
retf
ror
test
xlat
push
jp
rcr
push
jnp
cmp
stc
mov
cmp
pop
adc
dec
mov
mov
add
lds
mov
inc
into
dec
push
jbe
lods
jo
mov
daa
pop
pop
mov
mov
cli
out
jle
and
push
neg
adc
int
and
das
inc
popf
(bad)
mov
pop
aad
push
xor
jae
mov
cld
arpl
fidivr
inc
out
inc
xor
push
test
fdivr
sub
and
ret
adc
pop
sbb
lahf
loopne
iret
adc
jecxz
out
dec
mov
jae
adc
inc
ret
or
sbb
fcom
xchg
xchg
mov
jmp
push
mov
push
lods
push
stc
sahf
jnp
inc
lods
or
sbb
jae
add
xor
sahf
and
inc
xor
in
jp
je
jno
test
sar
add
xor
cmp
mov
sbb
cmp
je
mov
push
or
mov
sub
sub
ds
cwde
jno
lahf
inc
push
inc
push
daa
add
pop
cld
jle
into
imul
jge
sbb
bound
mov
mov
mov
imul
cmp
dec
jae
jmp
leave
not
xchg
out
daa
sbb
scas
xor
shl
retf
stos
pop
pop
stc
jg
ss
gs
fcmovnu
mov
xor
aas
outs
add
cmp
stc
dec
sbb
add
mov
sub
pop
out
shl
mov
ss
hlt
add
movs
pop
loop
xchg
mov
xor
xchg
mov
popa
je
out
sbb
cmp
ret
xchg
and
aas
push
xchg
(bad)
int
add
addr16
in
dec
leave
push
jns
jb
fs
xchg
loop
cmp
leave
in
push
test
mov
imul
out
jp
mov
xor
mov
or
push
xor
inc
ins
fwait
jnp
aaa
iret
mov
aam
add
enter
xchg
mov
xchg
jbe
loope
or
ds
ret
int
inc
add
xchg
and
xor
push
sbb
leave
xor
pop
adc
pop
jb
add
xchg
pop
or
into
mov
or
inc
jns
inc
xchg
sti
jnp
out
and
sub
xchg
sub
jb
and
mov
mov
pusha
hlt
pop
retf
inc
jmp
jg
(bad)
push
call
imul
loopne
mov
cmp
xlat
and
or
add
push
popa
ins
and
xlat
push
pop
in
dec
aam
or
int
ja
popf
scas
pop
jge
out
fst
pusha
lods
fcom
add
jns
(bad)
call
aam
int3
out
mov
inc
mov
aad
add
mov
in
dec
retf
loop
or
sub
or
(bad)
retf
jo
dec
ret
leave
ins
xchg
and
xor
xchg
ret
pushf
xchg
sub
das
je
mov
push
mov
and
out
mov
pcmpeqd
clc
pop
pushf
leave
fcmovnu
jns
movs
scas
scas
cwde
mov
adc
in
mov
sub
aaa
mov
push
inc
mov
xchg
scas
pop
mov
sbb
add
fadd
retf
retf
dec
mov
pop
sbb
into
pop
gs
popa
lahf
fs
(bad)
mov
push
jns
xchg
das
dec
dec
popf
jno
out
add
push
jns
xchg
retf
fld
pop
retf
jns
dec
test
jmp
add
mov
fstp
ror
fsub
pusha
mov
loop
(bad)
mov
in
jecxz
cmps
jecxz
mov
sbb
ret
lods
jmp
daa
sbb
in
in
lock
fld
clc
nop
mov
inc
or
add
sub
adc
and
dec
rcl
out
push
mov
dec
or
scas
or
mov
test
sbb
dec
les
retf
mov
fwait
cmp
adc
call
rol
lods
loop
cmps
outs
out
sub
sahf
rcr
scas
test
out
mov
test
mov
mov
xchg
or
jmp
lods
in
or
aaa
jl
jnp
aas
into
inc
popf
pop
loope
mov
bound
dec
xchg
not
push
movs
jl
push
mov
mov
xchg
lahf
mov
fs
daa
fldenv
mov
mov
sbb
add
ins
cmps
inc
adc
dec
iret
bswap
add
dec
jg
add
inc
dec
shl
xchg
push
xlat
rcl
mov
stos
and
sub
into
push
lods
adc
in
mov
xchg
cld
xor
cmps
mov
inc
test
mov
int
pop
dec
mov
or
or
lds
test
xchg
fld
packsswb
fwait
mov
pop
not
aam
mov
pop
das
stos
fs
dec
cdq
xor
lea
lds
pop
push
es
cmps
or
and
out
loope
jle
fisttp
xchg
pop
aad
or
xor
mov
jmp
jl
out
mov
ss
push
cmp
je
js
repz
imul
mov
cli
test
call
pushf
push
xchg
or
pop
iret
xchg
in
cmp
fild
xchg
fisub
aaa
push
inc
jg
iret
pushf
popa
sbb
dec
xchg
sub
in
jmp
cmps
movs
cld
sbb
push
aam
sub
jecxz
outs
mov
sahf
loopne
pushf
jge
jne
dec
mov
les
mov
jbe
or
test
mov
mov
(bad)
mov
fiadd
xor
in
xor
jmp
adc
test
adc
inc
push
(bad)
pop
xchg
mov
or
or
rol
cli
xchg
ins
je
adc
nop
jne
and
bound
and
ret
mov
xor
je
add
mov
(bad)
cmps
pushf
icebp
xchg
test
popf
dec
test
(bad)
cmp
in
int3
sahf
or
inc
shl
jmp
lahf
test
pushf
leave
jbe
pop
nop
jl
movs
retf
jns
in
jmp
xchg
mov
adc
xchg
cmp
jbe
push
dec
pop
dec
call
mov
pop
jne
call
and
jg
xchg
xchg
jle
(bad)
neg
add
popf
push
in
cmp
(bad)
daa
test
mov
mov
sbb
mov
add
push
add
out
ret
xor
cmp
sbb
jl
loopne
les
jo
inc
jle
scas
mov
mov
jne
ret
ret
dec
add
loopne
les
(bad)
mov
sub
les
sahf
push
pushf
ja
rcl
fs
daa
cld
add
cs
mov
fs
inc
movs
and
repz
and
bound
sti
pop
(bad)
jns
xor
sbb
jae
arpl
mov
add
xchg
jmp
add
dec
fnstcw
(bad)
jmp
mov
add
dec
fisubr
fnstsw
nop
push
call
sub
push
sbb
xchg
aam
mov
pop
gs
push
push
retf
sub
cmp
(bad)
xchg
add
or
cmp
push
cmp
je
xchg
(bad)
xor
cmp
inc
add
fdiv
cld
fadd
mov
mov
mov
jle
pusha
xchg
push
add
jb
or
gs
xchg
dec
mov
dec
or
sub
test
cmps
cmp
dec
push
mov
jecxz
dec
in
jecxz
mov
dec
xchg
test
jo
sub
and
cwde
mov
mov
pop
push
dec
dec
cmp
xor
rcr
push
sbb
popf
cmps
cmp
movs
mov
cdq
(bad)
xchg
imul
(bad)
add
shr
push
test
cmps
mov
and
pop
in
dec
mov
jle
in
push
pop
inc
vmovhpd
call
fidiv
xchg
mov
shl
mov
xor
mov
mov
push
inc
add
out
outs
mov
std
sahf
repnz
mov
ds
pop
es
xor
hlt
loop
inc
shl
scas
and
or
sub
pop
mov
cld
or
ja
cli
mov
adc
(bad)
sub
dec
dec
aam
(bad)
push
cmps
adc
loopne
pop
std
mov
xchg
dec
dec
dec
aas
xchg
test
stos
ficomp
sbb
sbb
jg
jecxz
or
mov
xor
into
js
or
mov
pop
jge
mov
push
ret
adc
aas
xchg
mov
repz
cmp
ror
xchg
or
sub
outs
gs
adc
seta
int3
xor
sti
xchg
mov
push
dec
ds
push
mov
push
push
dec
adc
dec
out
repz
pop
fadd
add
sub
sbb
test
lahf
aas
pop
mov
hlt
outs
pop
pop
and
jle
push
mov
or
xchg
imul
into
frstor
push
addr16
rcl
adc
retf
lea
test
repnz
push
xor
and
pop
cwde
ret
pop
inc
cmp
inc
cld
cmps
inc
aas
aaa
enter
sar
push
outs
repz
inc
xchg
mov
inc
mov
and
mov
enter
xor
pop
sahf
inc
retf
rcl
pop
hlt
cwde
loop
icebp
imul
push
mov
mov
push
xor
shl
cdq
hlt
ret
and
cwde
mov
sar
xchg
das
dec
mov
add
jne
cmp
sbb
inc
mov
lods
dec
test
adc
repnz
add
inc
aad
adc
xor
cmp
ret
loope
mov
mov
push
lock
sbb
rcl
(bad)
dec
dec
mov
loopne
sub
inc
stc
es
xchg
and
jo
sub
sbb
dec
scas
icebp
(bad)
bound
loop
jae
aad
fistp
sti
push
call
int
sar
cmp
xor
xchg
iret
pop
sti
mov
xchg
pop
test
lea
rcl
mul
xor
aas
sti
xchg
pop
call
xor
in
push
adc
xchg
jp
sub
dec
pop
out
push
push
and
push
mov
ds
into
(bad)
out
xor
cdq
mov
push
dec
inc
mov
movsx
inc
daa
daa
in
fmul
xor
sbb
fild
sahf
xchg
xor
(bad)
shr
fwait
ret
mov
pushf
jmp
pop
jmp
shr
data16
sub
test
fld
adc
inc
push
aam
aam
cli
cmp
or
int3
or
ror
push
pop
jnp
jno
dec
popa
ror
dec
push
fistp
cld
sub
add
push
jg
cmp
fst
xchg
add
sbb
and
inc
ja
or
adc
out
xchg
and
push
cmp
(bad)
movs
in
daa
jbe
loop
jb
in
dec
scas
pop
pop
fbld
mov
mov
inc
xchg
sbb
pop
cdq
push
mov
adc
or
lahf
mov
push
lods
adc
mov
or
pusha
cwde
mov
inc
jle
dec
shl
mov
in
fsubr
aaa
stos
fldcw
sub
popa
inc
test
mov
mov
shl
mov
cmp
ret
ins
inc
unpcklps
inc
push
xchg
(bad)
dec
dec
cld
jg
dec
push
push
(bad)
xchg
call
scas
cli
jns
aas
add
mov
jbe
jge
mov
aas
addr16
shr
cmc
lock
push
in
fwait
jnp
mov
gs
call
daa
or
(bad)
ins
adc
mov
xor
dec
mov
push
cmp
push
xchg
scas
pop
ret
and
hlt
mov
or
bound
clc
mov
jbe
aaa
push
test
dec
jnp
xchg
stos
out
dec
adc
mov
aaa
iret
mov
inc
jp
ja
test
pushf
cmp
pop
neg
out
out
ins
outs
cmps
push
mov
daa
mov
mov
adc
mov
cmc
cmp
xor
or
and
push
pop
stc
retf
mov
mov
jmp
js
xlat
inc
sub
ret
mov
sbb
popa
cmp
push
pop
dec
dec
or
xor
xchg
dec
lods
out
xor
lock
das
dec
pop
arpl
pop
shr
dec
mov
int3
mov
hlt
xor
sbb
stos
ja
fnstsw
cmp
jg
scas
push
inc
leave
sub
dec
dec
dec
adc
jbe
dec
cli
lds
into
sub
imul
fistp
xor
stos
and
add
mov
mov
dec
mov
dec
mov
outs
fistp
or
mov
xlat
stc
les
ins
mov
push
lods
add
dec
cwde
mov
add
sbb
jnp
imul
jg
xchg
xchg
and
xchg
sbb
ins
rol
and
in
add
jb
retf
xor
jbe
sbb
adc
or
lods
mov
pop
sbb
inc
or
rol
xor
ins
push
xor
ficomp
inc
leave
dec
sbb
loopne
or
jecxz
repz
arpl
out
and
inc
xchg
addr16
lea
xor
push
cli
mov
test
into
jno
cmps
or
add
(bad)
std
das
retf
out
aaa
push
aas
add
jg
clc
stc
test
adc
mov
fisubr
pusha
mov
add
iret
mov
(bad)
mov
mov
dec
push
rcr
stos
sbb
(bad)
lahf
pop
sub
scas
jb
pop
hlt
push
inc
movs
jo
mov
leave
clc
sub
std
retf
test
cmp
cmp
iret
push
jae
aad
lea
push
ds
sbb
push
retf
mov
(bad)
(bad)
into
imul
mov
aam
and
or
leave
pop
clc
cmc
jmp
fcmovnbe
hlt
sub
stos
add
into
xor
scas
or
loopne
mov
mov
iret
test
pop
jle
add
pop
adc
or
test
cmc
mov
jbe
add
fimul
xchg
add
pushf
cmp
push
cmp
jo
and
cmp
fcom
(bad)
adc
mov
sbb
and
pop
jns
daa
cmp
out
outs
loop
push
add
fldenv
fist
inc
push
in
mov
pop
cmc
out
outs
jp
les
jnp
jmp
sub
mov
mov
mov
jecxz
jne
xchg
add
int3
inc
inc
fbld
jb
add
cmps
popa
sbb
imul
mov
in
imul
lods
test
jne
mov
cmps
inc
sar
lods
or
fidiv
jo
mov
shr
jno
sbb
push
push
mov
(bad)
xchg
rcl
(bad)
mov
pushf
mov
int
shr
fisubr
pop
div
push
xor
hlt
push
xchg
mov
int
mov
push
vphaddudq
inc
lods
ja
jo
mov
and
add
icebp
dec
or
cwde
add
or
stos
enter
icebp
cmp
push
cmp
cmp
loopne
retf
scas
mov
xchg
out
push
mov
fimul
jle
das
or
or
lods
jmp
in
xchg
pop
xor
clc
cmps
test
jns
in
mov
jne
and
fs
std
imul
xor
or
std
int
ret
inc
movs
push
loop
add
mov
jge
int3
pop
fs
and
mov
and
jp
add
inc
adc
leave
gs
xchg
cmps
inc
mov
mov
clc
ror
hlt
pop
sub
loope
and
loopne
and
nop
lock
jo
cmp
and
adc
cmp
test
or
push
in
loopne
push
std
xchg
in
fdiv
push
mov
mov
mov
mov
jmp
cmp
add
xor
gs
leave
mov
jae
adc
inc
outs
pop
mov
jae
sub
add
aam
xchg
je
cmps
mov
jmp
push
test
mov
pop
je
adc
and
(bad)
sbb
bound
xor
pop
cmps
paddusb
jmp
mov
ret
icebp
imul
sub
jg
xlat
jbe
ret
fnstsw
(bad)
addr16
cmp
jo
xchg
sub
and
dec
lods
out
shl
jp
lods
pop
sub
stc
inc
aam
leave
sbb
push
movs
mov
(bad)
(bad)
iret
shr
lahf
call
jbe
retf
pop
js
push
jno
movs
pop
and
add
and
adc
mov
or
loope
call
rol
inc
shr
mov
jg
dec
clc
or
dec
mov
(bad)
fbld
test
hlt
and
aas
push
pop
mov
fistp
jno
push
out
or
adc
mov
mov
inc
jg
inc
shr
arpl
pop
or
push
pop
sbb
xlat
jl
sahf
popa
push
sahf
or
sub
xor
inc
sahf
jl
retf
xchg
div
fdiv
out
sub
and
and
sbb
(bad)
repnz
(bad)
out
jp
fwait
psllw
xor
push
int
hlt
push
out
push
hlt
adc
in
fxch
enter
jnp
xchg
pop
sbb
push
leave
jge
sar
and
adc
push
xchg
jecxz
dec
imul
mov
sub
scas
jg
imul
mov
ret
mov
and
mov
cmp
pusha
pop
mov
fisttp
lds
push
xor
dec
inc
dec
cdq
mov
popa
xchg
sti
cmp
push
dec
and
inc
add
push
sub
xor
repz
hlt
mov
xor
adc
idiv
cmps
into
pop
rol
test
pop
adc
(bad)
fs
xchg
dec
test
out
jecxz
and
mov
scas
xchg
jmp
jbe
and
cwde
inc
dec
retf
hlt
jecxz
xor
cmp
jne
(bad)
mov
sbb
mov
pop
or
in
cdq
aad
cli
inc
stc
or
sbb
rcl
inc
ins
xchg
or
or
jnp
or
or
add
inc
xlat
jmp
test
imul
lods
int
push
das
cmp
ret
jmp
jno
aad
sahf
in
or
mov
loopne
pop
frstor
or
popf
into
adc
ror
inc
fldcw
mov
test
ins
mov
shl
mov
jp
loope
fwait
cld
mov
mov
cmp
push
ja
mov
dec
mov
adc
pusha
mov
mov
adc
mov
gs
adc
repz
outs
add
pop
lods
ss
leave
adc
jmp
arpl
pop
jno
push
mov
fdiv
push
or
add
mov
in
mov
leave
fcom
ins
xor
in
retf
fsubr
pusha
popa
lahf
xchg
test
xchg
in
sub
or
mov
loop
or
sti
fist
(bad)
rcl
sbb
imul
mov
lahf
nop
aas
not
dec
loopne
addr16
mov
add
arpl
or
xchg
xchg
aam
xchg
jb
xchg
stos
dec
mov
mov
leave
push
mov
jae
test
inc
out
call
enter
pop
push
ja
fadd
ins
mov
pop
push
push
sub
mov
push
mov
test
mov
imul
mov
in
(bad)
mov
out
loope
adc
ja
(bad)
cmp
cli
or
and
into
sub
add
rcl
dec
cmp
test
or
jle
lods
test
outs
in
or
dec
push
push
xchg
dec
pop
push
sbb
xor
bound
jp
retf
mov
int3
int
in
xchg
fistp
jno
in
sub
jge
push
inc
adc
push
and
adc
inc
loopne
add
xchg
and
fbld
push
jmp
fs
retf
inc
xchg
inc
je
jg
mov
aad
ins
push
mov
inc
adc
dec
loopne
jl
(bad)
xchg
das
inc
imul
loop
test
je
js
dec
loopne
mov
nop
repnz
shr
xor
popf
mov
stos
sub
(bad)
stos
add
lods
mov
cld
xor
in
mov
ins
ror
jae
sti
and
je
or
rcr
test
inc
mov
cmp
out
pop
push
jmp
inc
and
fistp
jmp
enter
ins
lea
js
push
(bad)
cmp
adc
sbb
dec
adc
(bad)
and
jbe
sub
jns
popa
lock
call
dec
push
mov
movzx
mov
mov
pushf
xchg
inc
fidiv
call
xchg
xchg
ins
arpl
ficom
out
cmp
ds
ja
test
(bad)
jp
loopne
ffree
fst
ret
push
push
test
push
sub
scas
push
mov
mov
aam
cmp
rcr
adc
dec
inc
aaa
test
popf
fdivrp
and
and
add
ret
repnz
push
(bad)
loop
fistp
mov
push
popf
rcl
mov
loop
imul
add
mov
or
inc
add
jbe
cdq
pop
cmc
and
mov
icebp
data16
(bad)
aad
outs
push
or
push
dec
fs
mov
mov
lock
pop
shl
xchg
add
adc
pop
cli
dec
mov
ja
aas
dec
push
es
adc
fimul
push
jecxz
add
call
jae
xlat
call
mov
inc
sub
rcl
addr16
mov
xchg
mov
rcr
and
fistp
cmp
cmp
popf
adc
hlt
and
popf
jmp
stos
sar
pop
icebp
sub
inc
(bad)
retf
mov
push
into
cmp
shl
mov
push
movs
fisub
xchg
add
xor
and
enter
bound
ja
outs
push
push
stc
ins
jno
lock
or
aad
scas
jae
adc
(bad)
(bad)
arpl
cmps
std
loope
sti
sub
mov
pushf
(bad)
push
fwait
int3
pop
ficomp
out
dec
cmp
pop
aaa
(bad)
inc
and
mov
sub
sub
add
dec
xchg
lahf
rcl
or
pop
adc
aam
out
cdq
sub
dec
push
enter
(bad)
mov
xor
cmp
aad
inc
jp
cmp
jmp
(bad)
mov
lahf
outs
inc
push
cmps
inc
cmps
movs
cmps
sub
jne
cwde
movs
or
arpl
dec
cmp
mov
out
test
int
push
sub
jae
fild
ficomp
mov
push
dec
test
jle
push
mov
lock
clc
scas
xchg
xor
inc
movs
sub
jae
fstp
stos
dec
jno
cdq
lds
or
enter
sbb
sub
cmp
adc
pop
test
sub
push
jno
cmc
dec
daa
inc
jae
xor
enter
or
jo
mov
daa
xchg
inc
sbb
stos
cmp
jnp
sub
repnz
adc
iret
cld
out
lock
in
fnsave
(bad)
in
xacquire
push
ret
mov
pop
hlt
lea
cld
in
or
and
dec
ret
push
fidiv
dec
dec
push
je
lahf
(bad)
and
inc
adc
test
fisttp
and
aas
outs
leave
pop
hlt
push
cmp
jge
ficomp
add
mov
mul
cdq
jno
int
mov
mov
xchg
cmp
fild
cmc
fcomi
xchg
jo
or
mov
push
cmp
mov
ins
nop
cdq
lea
stc
xor
in
punpckhbw
xor
rol
jecxz
(bad)
mov
dec
adc
ret
repnz
push
sub
inc
cmp
int
mov
or
enter
clc
(bad)
mov
hlt
add
cli
out
std
mov
xor
frstor
(bad)
mul
cs
into
retf
xor
ins
nop
movs
(bad)
xchg
mov
push
pop
xchg
pop
pop
lods
mov
sbb
je
sbb
or
push
push
int
dec
(bad)
push
and
in
and
aad
out
out
dec
fmul
(bad)
mov
cmps
inc
jge
fbld
out
mov
mov
xchg
sub
sar
lea
sbb
jb
add
imul
jbe
nop
xlat
sub
out
shl
ror
fldcw
aaa
add
push
dec
mov
js
xlat
mov
mov
sub
push
out
pop
jne
ficomp
push
stos
mov
fisttp
enter
ins
jne
daa
out
jae
mov
daa
mov
aad
lea
ficomp
push
jbe
add
std
cwde
inc
neg
int
sub
jmp
call
jne
xor
out
or
add
cmps
cmc
rcr
out
retf
enter
or
imul
(bad)
pushf
mov
xor
inc
mov
hlt
mov
out
hlt
inc
pushf
xor
(bad)
jle
mov
icebp
or
or
test
mov
jmp
dec
bound
pop
xor
dec
in
retf
hlt
dec
cmps
aam
pop
cmp
sub
adc
dec
jecxz
sub
aam
dec
xor
add
add
lods
adc
push
mov
xchg
push
loopne
pop
jns
xchg
jb
pop
xor
or
enter
fldcw
int3
push
push
mov
movs
stos
fcomp
sbb
or
jno
inc
ret
or
cmp
jle
mov
jecxz
adc
pop
js
and
scas
dec
fadd
or
inc
ret
push
cmp
call
stos
fwait
mov
or
ret
jbe
stos
mov
les
jle
out
in
push
and
xlat
xor
jb
stc
xor
pop
and
(bad)
pop
retf
mov
out
sub
ss
lock
aad
std
dec
or
hlt
mov
push
aad
gs
sub
push
push
outs
repz
or
in
fnstcw
mov
dec
ds
imul
movs
in
inc
or
inc
mov
xchg
test
adc
das
retf
mov
adc
fisubr
hlt
and
dec
xor
pusha
test
mov
mov
sub
mov
movs
add
pop
mov
call
sbb
cmps
scas
shr
mov
adc
add
stc
in
or
(bad)
cs
mov
fbstp
aaa
or
cmps
out
jmp
cdq
(bad)
test
xchg
or
cmps
leave
or
sub
adc
push
out
mov
xchg
pusha
test
in
cmp
ins
je
aad
test
dec
adc
sbb
das
lsl
mov
test
lods
cmp
fucomi
sub
dec
sbb
mov
retf
or
rcl
adc
add
mov
hlt
cmp
inc
mov
daa
js
sub
dec
stc
ret
das
addr16
popf
mov
gs
pop
loopne
test
stos
rcr
jb
es
call
cmp
mov
ins
fcom
je
mov
in
jmp
fwait
test
dec
cmp
mov
lods
cmp
cmps
lods
mov
lods
add
pushf
mov
adc
sbb
clc
xor
push
xchg
js
iret
sub
push
repz
dec
push
and
lock
stc
mov
ins
fcomp
test
lahf
xchg
enter
pop
push
(bad)
in
push
lahf
sbb
ror
test
test
cmp
cmp
das
mov
cwde
adc
pop
shr
push
xor
inc
(bad)
imul
sbb
cmps
ins
enter
outs
in
jg
in
push
adc
push
add
pop
popa
scas
jne
mov
and
mov
jb
xor
aaa
inc
bound
xor
sbb
leave
test
cmps
inc
loop
dec
retf
nop
mov
pop
and
fiadd
stos
fiadd
daa
jge
fimul
ret
sub
(bad)
mov
mov
in
test
jp
push
xchg
sub
adc
mov
outs
pushf
ret
pop
push
or
jnp
xor
mov
dec
and
dec
(bad)
xlat
lahf
test
push
adc
into
(bad)
xor
mov
pop
adc
push
in
dec
sub
sbb
fadd
(bad)
pop
jo
stos
leave
sub
and
xor
or
cwde
push
pop
dec
sub
mov
cmps
mov
jge
xor
mov
retf
xchg
dec
pusha
inc
fdiv
popa
mov
sbb
lods
and
hlt
sbb
mov
inc
mov
mov
leave
mov
leave
xchg
rol
jne
adc
aam
pop
sub
stos
pop
inc
add
jge
cmp
(bad)
in
mov
add
aad
int3
jle
ja
sub
das
jmp
call
call
movs
dec
pusha
mov
sbb
cmp
movs
out
sub
pop
test
mov
cs
pop
inc
fnstcw
std
sbb
cld
ja
mov
in
dec
fcmovb
adc
push
das
pop
sub
jae
dec
loop
dec
retf
test
adc
loopne
pop
jl
mov
out
sbb
xchg
add
dec
cmp
loopne
jge
repnz
test
and
xchg
test
xor
or
inc
(bad)
xor
ret
scas
mov
xor
xchg
adc
loope
stos
cli
das
outs
lahf
dec
ja
loopne
movs
rol
sbb
inc
sub
fiadd
or
xor
mov
inc
int
sbb
leave
(bad)
xlat
sbb
movs
ins
call
sti
adc
xor
scas
mov
fs
push
jge
iret
or
scas
push
stos
mov
loope
repz
cwde
jge
adc
fild
sahf
jae
jne
or
mov
xchg
sub
cld
lods
and
jmp
adc
push
add
pop
jbe
sbb
fsubr
cmp
mov
and
cmp
dec
in
movs
rol
push
test
aaa
jb
and
shl
mov
out
mov
(bad)
fnsave
and
(bad)
movs
xor
(bad)
and
aam
lahf
dec
pop
mov
cmc
mov
fld
push
daa
scas
mov
pop
sbb
enter
inc
mov
iret
xchg
mov
jg
lods
add
sub
xchg
sbb
aam
pusha
xchg
jmp
in
push
jge
inc
cmp
dec
and
pop
jbe
cli
push
pushf
dec
into
cmp
fnsave
push
jns
sahf
jb
test
lods
sub
cmp
mov
in
mov
cld
rep
and
popa
mov
into
pop
sub
mov
mov
sar
sbb
jmp
mov
or
inc
ror
(bad)
mov
fs
dec
lea
out
mov
sbb
fcmovnbe
adc
xlat
cmp
in
repz
cld
xor
mov
les
mov
iret
pop
push
jmp
jb
outs
mov
mov
inc
int
call
hlt
outs
popf
fadd
and
xor
les
in
sub
add
ins
jp
ror
mov
fs
dec
add
and
push
mov
or
or
or
and
out
mov
mov
out
xchg
in
pop
test
enter
push
cs
xor
lock
xchg
inc
out
xchg
ds
js
sti
push
scas
xor
lods
or
mov
es
and
adc
retf
(bad)
mov
adc
or
push
cwde
pushf
sub
inc
dec
push
xchg
cmp
jmp
ja
adc
xor
or
jbe
icebp
add
mov
jmp
jmp
addr16
inc
pop
add
mov
scas
out
push
xor
jns
jno
dec
fld
xchg
push
sbb
adc
dec
imul
xchg
pop
push
or
and
fmul
adc
pop
stos
in
into
add
int3
test
inc
xchg
mov
fild
aam
push
mov
fisubr
in
or
cmc
sbb
push
dec
xchg
xor
ins
push
cli
stc
xchg
out
pop
popa
sub
call
dec
movs
ret
dec
pop
pop
sbb
inc
mov
retf
push
shl
(bad)
sub
out
imul
mov
push
in
and
push
es
cmp
and
pop
aas
dec
sbb
add
imul
jp
bound
jge
sbb
or
lea
pop
sub
adc
pushf
mov
rcl
inc
xchg
je
ja
cmp
xor
std
xchg
shl
push
imul
rol
push
sar
xchg
mov
fisttp
add
sbb
stos
and
mov
jno
dec
fldenv
push
imul
adc
xor
icebp
lock
ror
mov
cld
push
dec
pusha
outs
in
mov
fnstenv
movs
push
xor
out
push
imul
mov
aam
fwait
jmp
mov
jp
fcmovu
pop
ins
sbb
mov
pop
popf
pusha
mov
adc
add
idiv
jl
dec
sbb
jne
lods
pusha
test
inc
icebp
pop
retf
jno
jle
and
outs
shl
pop
pushf
popa
gs
rcr
inc
mov
test
jo
loopne
jmp
and
addr16
pop
jo
lods
mov
sahf
out
loop
sub
dec
neg
fld
aad
mov
ret
outs
pusha
call
out
push
or
inc
push
ret
and
repnz
mov
xchg
jns
jg
hlt
icebp
(bad)
jb
and
mov
push
adc
pop
out
mov
jns
jmp
out
pop
mov
call
or
aad
lods
push
repz
sbb
ret
dec
loope
jle
dec
adc
jmp
(bad)
fcmovnb
out
sub
in
clc
or
inc
adc
call
aaa
int3
shl
cwde
cdq
cmp
sub
(bad)
call
xchg
xor
and
add
test
fs
inc
pop
or
mov
cwde
mov
sub
cmp
or
dec
sbb
aad
fstp
xlat
and
mov
pop
or
jl
inc
xor
add
jbe
(bad)
lods
pop
inc
sbb
sbb
mov
sub
push
mov
pushw
cmp
sub
jbe
lods
adc
popf
push
sbb
jecxz
bound
aad
push
mov
dec
sub
test
ins
or
jmp
dec
cs
test
push
(bad)
int
test
popa
add
div
add
hlt
sub
pop
push
ja
sub
aas
adc
push
xor
out
shl
int3
sub
das
mov
(bad)
pop
sbb
push
xor
cwde
leave
jge
mov
pop
outs
fmul
or
pop
xchg
pop
int3
push
adc
xor
dec
push
sar
adc
cmp
sub
mov
rcr
push
sub
pop
retf
sbb
(bad)
mov
pushf
mov
dec
mov
int
sub
pop
mov
cli
mov
aas
ins
mov
dec
mov
sbb
aam
pop
(bad)
adc
movs
add
xchg
js
retf
sahf
inc
cld
addr16
xchg
rcl
lea
retf
or
inc
dec
sar
push
test
add
xor
lea
xchg
fdivr
(bad)
repnz
shl
add
mov
add
int
test
(bad)
jmp
mov
imul
pushf
ins
repz
mov
add
cmp
outs
xor
stos
addr16
or
xchg
clc
gs
push
mov
or
adc
pop
imul
xchg
(bad)
push
test
dec
imul
pusha
jge
pop
add
mov
pop
outs
dec
xchg
inc
push
lods
cdq
(bad)
cmps
sar
or
and
dec
outs
in
xchg
and
jecxz
sub
dec
sub
sub
fistp
pop
mov
xchg
jne
mov
xchg
pop
rcl
pop
mov
cmp
xor
ret
push
retf
fwait
iret
or
bound
jae
loope
jmp
mov
movs
rep
sub
mov
imul
jge
fwait
ret
mov
ficomp
mov
xchg
xchg
(bad)
dec
cmp
jecxz
xlat
aam
push
pop
repnz
xchg
cs
push
xor
fwait
ret
mov
inc
dec
push
mov
pop
neg
aad
mov
movs
shl
adc
sub
cmp
xor
sub
das
retf
clc
cmp
inc
fs
jne
and
cmp
in
adc
nop
mov
and
and
jg
mov
nop
inc
pop
into
fidivr
dec
shl
dec
outs
mov
add
xor
xor
add
xchg
ret
jb
sub
mov
pop
or
push
test
icebp
imul
aas
daa
fisub
test
cmps
mov
or
pop
shl
mov
out
sub
aad
sub
aas
rol
or
sub
iret
cwde
sbb
pop
mov
fwait
out
jle
pop
ret
cmp
jne
inc
sbb
test
cld
and
push
cmp
fadd
xor
mov
add
jp
cli
xchg
mov
and
shl
sbb
js
fcomp
jbe
cmp
mov
sar
mov
in
or
inc
into
neg
loope
pop
aaa
jle
mov
jnp
cmp
jo
mov
idiv
popa
add
stc
movs
sbb
fidivr
sbb
pop
dec
mov
xor
(bad)
xchg
sub
ficomp
(bad)
bnd
fiadd
add
rcr
retf
mov
mov
lods
ja
mov
push
mov
shl
(bad)
jmp
xlat
xchg
ficom
xor
mov
mov
and
dec
sub
ficomp
or
lods
add
adc
push
add
push
dec
gs
retf
push
dec
mov
ss
cmp
push
xor
lds
add
das
aam
mov
fist
xchg
add
stos
call
int
jne
jmp
inc
leave
adc
lods
sub
inc
je
pop
pop
clc
cmp
les
dec
xor
push
jle
movs
sbb
and
test
xchg
pop
ds
icebp
push
sbb
jmp
pop
loope
dec
jmp
pop
fnstcw
lods
out
jb
in
pop
or
xor
in
sub
stos
sub
and
push
pop
dec
(bad)
popa
sbb
cmps
pop
sbb
add
jae
rcr
imul
sbb
mov
enter
push
sbb
cmp
push
fcomp
pop
(bad)
nop
out
ret
sub
ffreep
arpl
shl
pop
sub
stc
out
dec
lea
ja
in
rol
or
mov
dec
adc
add
dec
scas
jmp
mov
xor
into
push
add
arpl
mov
in
bound
cmps
cvtdq2ps
mov
sbb
mov
sbb
add
xchg
ror
test
and
lock
in
mov
and
lods
pop
mov
loop
test
je
cmp
aad
retf
into
or
inc
and
mov
mov
mov
in
push
add
lock
pop
shr
(bad)
mov
lds
retf
imul
aaa
and
jo
sub
js
adc
adc
mov
dec
ficomp
clc
stc
icebp
pop
test
jge
jmp
mov
adc
bound
xor
adc
jne
mov
sbb
mov
pop
inc
aam
fwait
mov
movs
sti
or
stos
sub
mov
inc
ds
leave
rol
sub
dec
push
(bad)
and
mov
inc
fs
stos
xchg
lods
sbb
sbb
inc
and
or
sbb
dec
and
mov
push
mov
test
pmaxsw
(bad)
lds
rol
aam
shr
add
adc
movs
pop
mov
fdiv
xor
scas
mov
and
mov
cmps
adc
dec
xchg
pop
xor
inc
nop
mov
push
sbb
add
sbb
(bad)
std
dec
mov
sub
push
push
loopne
not
pop
outs
scas
sbb
xchg
adc
push
shl
data16
jle
add
(bad)
sbb
enter
add
jmp
adc
xor
sbb
xchg
lods
fnstcw
retf
dec
sbb
aas
enter
push
push
and
adc
mov
popf
ds
loopne
or
pop
rcl
cmp
adc
inc
test
push
mov
in
cmc
movs
mov
mov
mov
retf
shl
hlt
inc
mov
or
push
into
repz
jo
jnp
cmc
ror
loope
add
jmp
or
mov
add
mov
jb
jp
mov
cld
repnz
push
xor
adc
cld
jnp
push
clc
xchg
fisubr
out
cld
rcl
sub
repnz
ret
loopne
jns
nop
ret
stc
fwait
add
push
mov
lods
dec
lahf
mov
or
inc
pop
mov
(bad)
arpl
mov
mov
push
or
push
(bad)
push
xchg
mov
pop
sub
int
mov
mov
sub
jmp
fdiv
daa
sbb
adc
sar
ins
dec
cld
rcr
lahf
hlt
cs
jne
mov
enter
outs
rcr
and
push
inc
or
push
adc
mov
repnz
ins
jecxz
mov
in
mov
pop
xor
cli
mov
jg
fs
movs
xor
rol
mov
movs
repz
mov
push
int
push
xor
lock
push
dec
addr16
jno
inc
mov
xlat
fs
sti
outs
repnz
mov
xchg
jp
and
cmps
enter
les
fdivr
xlat
fs
mov
hlt
adc
gs
jmp
test
xor
sub
inc
fimul
in
mov
sbb
adc
cli
cmps
adc
or
scas
dec
mov
push
push
jmp
aaa
fdivr
fbstp
mov
inc
mov
pusha
push
cwde
retf
xor
scas
adc
sbb
(bad)
pop
mov
push
adc
cmp
mov
lock
add
jmp
add
and
push
aaa
sahf
je
mov
inc
push
stos
out
mov
popa
cs
pop
in
icebp
xor
stos
adc
mov
stos
jne
shl
inc
mov
push
ret
pop
xor
nop
or
or
add
nop
fsubr
je
push
xchg
fisub
lahf
out
mov
sub
sbb
push
adc
cmc
or
and
jne
lea
mov
sub
movs
mov
fistp
cld
pop
mov
ins
mov
and
hlt
maskmovq
mul
ins
jnp
jl
mov
in
or
xor
sar
pop
mov
ss
mov
push
push
fst
lea
test
add
movs
push
mov
aaa
stos
and
xor
dec
jmp
bound
mov
xchg
mov
inc
ss
daa
fcomip
dec
sbb
dec
gs
test
mov
retf
mov
xchg
data16
xchg
cmps
mov
into
in
gs
cmp
pop
cmp
gs
jb
push
xchg
xor
cdq
stos
icebp
xchg
cmp
mov
loope
jnp
cld
and
jp
loopne
push
outs
xchg
test
inc
and
retf
rol
pop
pop
out
pop
push
fist
cmps
xchg
ja
fyl2x
ret
fst
dec
call
in
push
aam
(bad)
mov
dec
cwde
ffree
xor
lahf
pop
test
pop
mov
xchg
sub
out
pop
fisub
mov
and
in
dec
repz
fcom
push
sub
and
popf
jb
inc
addr16
jne
add
popa
push
inc
push
and
test
mov
icebp
xchg
or
dec
ret
mov
retf
xchg
aad
mov
pusha
xor
je
xchg
sub
xchg
in
icebp
sub
popf
cmp
loope
pop
mov
rcl
pop
adc
call
fiadd
jb
jae
xor
ins
scas
cs
lahf
retf
add
(bad)
loop
or
push
stos
add
xor
int
pusha
outs
mov
xlat
xor
pop
lds
pop
mov
mov
cdq
push
mov
ins
mov
out
je
mov
pop
call
mov
xchg
rol
inc
pop
jo
cld
aaa
hlt
add
stos
mov
mov
dec
dec
sbb
sahf
mov
call
fldcw
add
aam
xchg
sub
adc
adc
mov
inc
push
push
push
loopne
je
shr
adc
mov
xchg
push
xor
std
mov
scas
mov
mov
jae
sub
cmps
inc
xchg
mov
and
shl
xchg
dec
addr16
push
ss
ds
(bad)
in
xor
data16
shl
out
xchg
jmp
jp
mov
jne
sahf
lods
loop
xchg
repz
mov
mov
cmp
pushf
ror
(bad)
(bad)
mov
test
add
and
call
sti
loope
add
nop
lahf
popf
ss
test
call
enter
adc
push
scas
mov
cmp
dec
(bad)
stc
jmp
je
and
rcr
call
jno
mov
xchg
sub
mov
stos
mov
xchg
js
pop
xor
hlt
outs
jmp
fist
ins
pop
cmp
push
(bad)
push
fnstenv
add
imul
lods
mov
xchg
push
jnp
shr
sbb
adc
into
cmp
int
jns
and
arpl
mov
idiv
add
jbe
es
loope
movs
push
call
popa
jmp
pop
jne
jo
(bad)
mov
jne
or
sbb
cwde
ret
and
(bad)
arpl
mov
or
or
sbb
mov
jle
xchg
jge
out
in
fwait
pop
dec
adc
xor
arpl
xchg
jae
fimul
je
out
xor
std
inc
(bad)
push
daa
popa
aas
mov
xchg
clc
clc
lock
xchg
icebp
and
je
loopne
mov
push
mov
aaa
jmp
jmp
ret
sub
add
pop
push
and
jge
xchg
push
in
jg
ja
xchg
adc
mov
xchg
or
xchg
adc
or
cmp
jnp
push
pop
stos
sbb
pop
pop
mov
pop
jns
ins
jmp
and
lods
fsub
push
xchg
sbb
jno
mov
jb
popf
movs
add
push
push
lock
xchg
addr16
xor
fmul
cmp
add
lahf
mov
or
dec
ins
jnp
push
shr
pusha
xor
stc
das
mov
arpl
or
gs
push
(bad)
nop
push
push
add
push
push
fcmovu
leave
(bad)
mov
jb
sub
xlat
(bad)
movs
pop
cdq
(bad)
jle
mov
adc
add
add
in
rol
xor
pop
or
sub
mov
enter
jp
nop
lods
fisubr
int3
jl
and
mov
pop
shl
data16
jp
lds
mov
jmp
test
jo
sub
lods
mov
sub
cs
ins
add
out
(bad)
mov
add
push
push
ins
nop
call
or
cdq
mov
dec
pop
push
xchg
in
and
mov
aad
lds
sub
test
call
mov
lock
fiadd
mov
nop
enter
fs
xchg
stos
mov
cmps
cdq
sub
xchg
retf
out
jo
xchg
dec
ret
cmc
xchg
xchg
dec
pop
xchg
sub
in
jb
imul
js
imul
fdivr
dec
push
scas
fdivr
dec
(bad)
fcmovne
sbb
test
(bad)
rol
es
cmc
dec
mov
retf
(bad)
xchg
xor
pop
cwde
out
neg
rcl
std
(bad)
fst
stc
out
push
dec
inc
jb
cmp
add
sbb
shl
xchg
sub
mov
xchg
mov
mov
data16
fld
fild
or
xchg
or
jae
inc
cmps
and
jne
sub
je
pop
add
das
adc
(bad)
mov
mov
rcr
ss
clc
stos
movs
or
cld
sub
ins
movs
stc
inc
mov
movs
fdivr
lds
(bad)
adc
outs
xchg
cs
addr16
and
pusha
inc
push
call
popa
or
movs
xor
frstor
cmps
and
cli
repnz
cmc
cwde
ins
adc
and
xchg
push
inc
ja
cwde
dec
in
jnp
push
in
arpl
add
mov
stos
ins
js
shl
stc
test
repz
repz
and
pop
aam
xchg
jle
imul
push
scas
inc
inc
pop
pop
enter
push
lods
xor
xlat
ror
loop
cld
jo
cmp
in
into
push
arpl
leave
sub
ficom
cmp
pushf
adc
xchg
jae
iret
arpl
jne
mov
shl
inc
fwait
adc
call
sub
imul
xchg
call
lahf
dec
xor
dec
xchg
psubsw
inc
lods
fimul
dec
xor
aas
push
push
in
push
jmp
jb
call
and
or
js
fadd
(bad)
adc
mov
pop
sbb
(bad)
jg
sbb
hlt
pop
mov
dec
add
cmp
aam
fadd
imul
sti
push
clc
sub
and
out
or
ds
jno
outs
pop
jmp
xor
or
pop
outs
pusha
movs
(bad)
leave
pop
mov
push
movs
push
scas
adc
or
mov
and
hlt
xchg
scas
stos
cmp
mov
arpl
push
and
setb
mov
mov
inc
test
and
pusha
aaa
push
iret
xchg
sub
(bad)
push
xchg
in
lock
jae
cmp
loop
stos
movs
(bad)
data16
xor
pop
call
call
dec
retf
cli
ds
mov
iret
std
or
nop
aas
sbb
test
add
(bad)
iret
push
inc
int
adc
mov
adc
shl
jne
xor
dec
out
iret
mov
sub
or
sub
retf
mov
cli
mov
fdivr
xchg
pop
mov
repnz
adc
mov
clc
push
das
mov
push
sar
inc
ror
int
jp
mov
sbb
pop
data16
aam
js
(bad)
xchg
or
dec
out
xchg
inc
enter
inc
mov
push
sbb
mov
add
pushf
add
jle
(bad)
aas
cld
mov
adc
fwait
(bad)
fimul
(bad)
retf
(bad)
mov
repz
or
mov
idiv
add
popa
or
mov
jnp
add
and
daa
add
lahf
mov
cmps
jo
stos
xchg
cs
shl
faddp
out
stos
xchg
add
sbb
lods
mov
lea
cmp
test
sbb
push
repz
jmp
mov
add
cmps
mov
xor
enter
outs
adc
or
loopne
int
nop
mov
popf
test
retf
scas
or
cld
cmp
sbb
sbb
int3
outs
mov
shr
inc
pop
mov
psadbw
out
sbb
pminsw
push
cmps
jae
xor
(bad)
jne
jle
xor
mov
out
test
xor
js
imul
mov
mov
gs
dec
push
pop
xor
mov
sbb
idiv
shl
jle
pop
dec
push
cli
xchg
mov
inc
xchg
ja
cmp
and
popa
cmp
out
fnstsw
neg
sub
mov
or
stc
mov
cmp
add
xor
add
or
mov
pop
jl
xor
or
mov
enter
sub
xchg
std
jmp
repz
push
fwait
inc
mov
inc
call
xchg
jne
movs
stc
outs
add
pop
stos
add
js
ins
and
and
(bad)
or
pop
les
in
xchg
sar
and
mov
jmp
xchg
push
int3
jmp
imul
ret
(bad)
mov
fiadd
mov
in
fild
push
ins
mov
fiadd
mov
repz
shr
adc
call
jns
xchg
movs
sub
sti
popf
mov
mov
das
jnp
sbb
sahf
data16
popf
mov
popa
xchg
in
dec
(bad)
lock
iret
inc
mov
xchg
(bad)
fild
cwde
fldlg2
loope
(bad)
and
mov
push
pop
adc
inc
push
pop
aad
ja
mov
push
dec
dec
mov
out
sub
pop
rol
add
xchg
outs
mov
out
test
mov
ret
pop
aam
sbb
push
lea
mov
fiadd
mov
popf
mov
sub
pop
lahf
xchg
aas
fadd
xchg
jbe
pop
and
out
xchg
stos
mov
lods
inc
mov
and
jns
out
stc
mov
cmps
push
dec
ret
in
cdq
jnp
mov
stc
inc
outs
dec
shl
stc
sbb
push
in
cdq
lds
inc
or
loopne
adc
lock
in
lahf
xchg
xchg
pop
repz
(bad)
mov
ret
mov
jg
ja
mov
sbb
push
mov
dec
imul
xchg
sahf
sahf
aam
addr16
pop
lea
scas
push
inc
movs
fidivr
stos
addr16
pop
mov
pusha
mov
out
in
push
mov
xchg
jns
mov
inc
les
test
pusha
cmp
jg
inc
call
stos
shr
xor
cli
enter
sbb
sub
pop
pop
add
adc
add
nop
or
ret
mov
jne
mov
add
mov
rol
pop
adc
and
shr
mov
stc
adc
cs
test
jecxz
or
and
jnp
mov
sti
jo
jmp
xor
getsec
xchg
dec
pop
and
cdq
imul
sub
test
push
jge
pop
out
xchg
jmp
pusha
test
inc
mov
xchg
dec
pop
jmp
push
xor
nop
arpl
mov
into
out
sahf
xchg
pop
or
icebp
jno
int
mov
adc
sbb
mov
sub
pop
jnp
add
repz
push
shl
lock
ret
pop
mov
cmc
mov
daa
inc
loop
outs
push
mov
fsub
aas
sub
inc
test
les
dec
imul
mov
inc
call
rcr
push
(bad)
sub
ret
pop
aad
enter
and
sar
lock
ins
rol
pop
mov
sbb
gs
adc
in
out
cmps
mov
scas
sub
ror
test
(bad)
arpl
es
std
xchg
test
sub
ja
mov
shl
js
sbb
pop
ja
sti
test
lahf
ret
pop
jle
iret
in
mov
movs
dec
cmp
ins
jmp
test
sbb
imul
jne
les
(bad)
in
cmps
xor
pusha
cli
sub
cmp
push
push
pusha
mov
xor
adc
jecxz
fsubrp
js
mov
jle
mov
sbb
fld
gs
je
es
stos
fiadd
add
mov
add
mov
es
shr
xor
inc
push
lods
dec
stos
sub
inc
cmp
in
cwde
jo
int3
mov
pop
jmp
test
pop
not
iret
jns
arpl
cdq
jmp
mov
in
mov
jecxz
sbb
push
and
xor
cs
adc
out
mov
xchg
push
sbb
mov
in
adc
stos
sub
inc
fidivr
clc
shl
pop
out
push
or
xor
out
(bad)
fwait
mov
ins
cli
inc
hlt
jmp
mov
mov
or
xor
retf
pop
pop
adc
adc
mov
jmp
scas
sar
xchg
mov
jg
sar
sbb
pop
lods
std
cwde
mov
out
mov
test
jmp
cli
bsf
pop
lock
xchg
cmp
lds
loopne
jno
dec
pop
shl
mov
imul
add
add
in
pop
mov
cmp
xchg
and
cmp
nop
cmps
pop
jmp
mov
out
jmp
gs
push
xor
add
aad
sub
in
dec
inc
add
cmps
test
daa
or
xor
ficomp
xchg
adc
imul
(bad)
sub
mov
paddusw
and
aas
mov
xchg
or
ds
movs
pop
rol
icebp
rcl
cld
mov
daa
pop
inc
mov
scas
test
gs
or
xchg
mov
ret
clc
fisubr
hlt
outs
aam
jp
mov
mov
mov
and
das
jl
lods
jmp
scas
xchg
inc
dec
out
sbb
scas
movs
mov
pusha
dec
shl
mov
scas
mov
mov
daa
lahf
movs
pop
es
rcr
jl
pop
div
pop
mov
push
cld
push
adc
sar
mov
iret
add
fcmovb
enter
cmp
aad
sbb
and
cmps
add
or
hlt
cmp
add
or
pop
repz
jbe
add
pop
cmp
jp
aad
enter
mov
or
mov
aaa
inc
loopne
xor
in
retf
mov
xchg
mov
xchg
jno
lds
or
sub
out
cld
dec
and
iret
lock
pop
and
std
test
cmps
sbb
clc
push
jle
adc
bound
mov
gs
lahf
stos
cmps
push
dec
or
xchg
or
gs
loopne
jle
inc
xor
fdiv
std
mov
inc
cmps
cmp
bound
adc
or
or
add
jbe
jbe
adc
pop
inc
ret
add
jle
fcom
or
sub
mov
cmp
mov
xchg
mov
cmp
jl
ins
test
inc
iret
mov
push
ficom
shl
movs
sbb
js
jmp
pusha
dec
sub
ror
(bad)
shl
or
dec
jp
arpl
dec
add
mov
lods
mov
icebp
mov
test
sub
ins
stos
sub
pand
mov
stc
sub
sub
ja
xchg
loop
jmp
sbb
pop
lods
and
jg
sti
in
cmp
fs
cwde
pop
imul
mov
adc
or
pop
push
lock
add
xchg
xor
add
mov
mov
mov
stc
ret
lds
sub
rcr
ins
iret
scas
lds
sub
sub
lahf
pop
in
adc
dec
fucomi
in
and
dec
and
cdq
pop
retf
fwait
aaa
imul
pop
xchg
ds
jge
push
pushf
xor
dec
xor
or
xor
ror
pop
test
int3
cmp
mov
jecxz
ins
lds
lods
div
(bad)
and
pop
test
push
arpl
inc
mov
sub
stos
(bad)
aad
test
loope
in
in
sub
imul
adc
xchg
or
add
xor
inc
xor
sbb
jo
shl
mov
(bad)
out
cdq
daa
sub
loopne
push
jecxz
push
lock
je
aaa
out
shr
bound
hlt
ret
add
leave
dec
adc
mov
xlat
iret
fild
pop
icebp
push
test
shr
add
mov
retf
aas
jne
or
lahf
cwde
and
hlt
pop
inc
cwde
cmp
call
add
sub
jnp
mov
lahf
cld
ret
fst
shr
mov
stos
jnp
ficom
add
mov
push
iret
ror
adc
into
sbb
or
sub
xchg
mov
push
ror
cmps
call
mov
inc
push
or
jb
(bad)
in
cmp
push
sub
(bad)
add
mov
push
jns
movs
(bad)
mov
and
call
mov
inc
sub
and
inc
rcr
pop
test
aam
push
ds
mov
cwde
addr16
mov
xchg
push
fldcw
mov
pop
aas
xchg
add
daa
sahf
adc
(bad)
xchg
xchg
not
cld
dec
xor
leave
sbb
inc
in
inc
gs
mov
push
repz
daa
xlat
jmp
adc
js
pop
add
xchg
add
dec
xchg
pop
mov
stos
dec
xchg
mov
in
sbb
mov
fdiv
sub
(bad)
ror
movs
enter
push
or
xchg
sar
imul
pop
repz
int
sar
fstp
cmps
dec
retf
cmp
sub
and
inc
and
jo
fisttp
fcomp
cs
jg
jle
add
sub
imul
mov
mov
jmp
mov
or
xchg
into
push
test
fisttp
cmp
add
sub
push
mov
ficomp
call
mov
and
pop
jne
push
int
cmp
xor
addr16
push
lahf
ror
shl
test
pop
pop
push
ret
pop
dec
mov
push
push
mov
xor
dec
loopne
out
imul
or
scas
pop
icebp
mov
xchg
pop
gs
push
sar
add
aaa
out
nop
int3
fwait
mov
movs
sub
pop
push
or
scas
out
xchg
or
or
movs
popa
jmp
movs
out
mov
cmp
sub
pop
or
int
lahf
push
sbb
push
dec
jmp
mov
arpl
add
cmc
xor
leave
jb
retf
or
ds
fidivr
xor
ss
ret
pop
ror
cld
retf
fsub
shl
pop
(bad)
mov
leave
xchg
fidiv
mov
inc
data16
aas
movs
pop
mov
xor
iret
fmul
and
cmc
mov
pop
mov
inc
ror
(bad)
fsubrp
mov
ret
loope
iret
fs
mov
es
(bad)
pop
cwde
xor
jp
adc
(bad)
ret
dec
or
pop
test
sahf
in
dec
sbb
sub
adc
xchg
loop
xchg
ss
push
jp
push
dec
pop
(bad)
fistp
cmp
push
ss
aas
(bad)
xlat
or
xor
cld
adc
jnp
sub
push
test
pop
mov
addr16
add
sbb
push
add
(bad)
cmp
pop
xchg
jecxz
mov
(bad)
iret
pop
xchg
and
out
lods
xchg
or
shr
mov
mov
xchg
and
add
lods
jne
bound
jmp
ins
cmp
sbb
fptan
das
pop
scas
data16
(bad)
sbb
adc
dec
into
pop
ret
out
in
shl
jo
pop
xchg
shl
sub
mov
add
les
mov
loope
aaa
jg
stos
rcl
sub
jl
les
push
mov
mov
sysenter
test
xor
push
dec
cwde
into
push
jae
cmps
or
mov
loop
out
aad
mov
js
dec
adc
or
lahf
xchg
fnstcw
dec
repz
int3
or
mov
xchg
xlat
ja
mov
mov
or
shr
jg
xchg
shl
cwde
imul
lock
mov
ss
ins
sub
aad
pushf
sbb
test
pushf
arpl
out
and
aaa
lea
sub
sbb
aad
mov
add
mov
or
(bad)
(bad)
push
outs
aas
fcmovnb
shl
xchg
(bad)
push
cmps
shl
ja
scas
mov
cmp
jp
aaa
pop
fstp
mov
leave
(bad)
pusha
into
fbld
sahf
adc
into
cli
push
add
pop
sbb
mov
push
dec
movs
lahf
(bad)
sbb
push
pop
ret
(bad)
pop
outs
inc
neg
jl
push
mov
stos
sar
jns
and
pop
jl
jns
or
shl
(bad)
and
mov
pop
gs
cmp
loope
mov
cmp
push
sahf
sahf
inc
mov
fidiv
or
sbb
sbb
(bad)
pop
cmp
xchg
jecxz
xchg
int
pusha
add
mov
test
xchg
mov
mov
or
pop
gs
cmc
sub
mov
cs
gs
ret
or
sti
fisubr
mov
popf
or
jne
mov
shl
(bad)
pop
mov
in
xchg
or
pop
push
jmp
outs
pop
add
or
ds
push
cld
or
xor
sar
dec
pop
xor
jle
cmp
xor
jns
inc
stos
pop
cmp
les
sbb
add
xchg
std
loopne
lahf
cmp
xchg
in
pop
int3
ficomp
imul
pop
mov
fist
enter
fucomp
pop
lods
lock
push
or
fist
jecxz
and
adc
(bad)
shr
in
mov
test
mov
and
call
mov
push
fisub
mov
lods
psubusw
mov
xchg
cmp
scas
test
call
stos
mov
out
lds
std
fsubrp
sub
xlat
add
outs
out
pop
cmps
sub
retf
or
iret
inc
arpl
mov
daa
push
xchg
test
sub
push
adc
mul
xor
mov
jne
shl
cdq
ins
(bad)
std
outs
fdivp
cs
sub
in
push
sbb
inc
xchg
sub
push
sub
test
gs
jo
mov
lea
inc
ds
xor
and
shl
jmp
das
outs
push
push
inc
bnd
fisub
leave
popf
inc
cmp
mov
scas
out
jmp
in
or
iret
xchg
sahf
int3
push
mov
dec
movs
js
pop
push
aaa
cmp
out
mov
pop
lock
shl
push
push
xchg
stos
push
mov
retf
fsubr
cld
fist
add
mov
aad
and
outs
jne
or
mov
pop
fsubr
pop
inc
aaa
dec
sti
add
jecxz
jl
sahf
push
neg
outs
fdiv
fwait
add
ror
leave
or
dec
mov
xchg
sub
mov
test
inc
adc
push
out
push
jo
or
mov
lock
pusha
outs
in
jno
and
in
push
jns
(bad)
ss
sar
cmp
outs
push
data16
jns
movs
les
mov
jmp
imul
aas
adc
pop
add
scas
jns
cdq
sbb
add
fld
scas
xchg
dec
(bad)
adc
xchg
lods
in
imul
pop
sbb
adc
pop
sahf
jmp
jno
sub
adc
mov
hlt
pop
es
add
add
and
scas
test
dec
fldcw
icebp
mov
mov
fs
cmp
call
aad
ins
dec
xchg
cmp
lahf
dec
and
cli
xchg
xchg
jp
jmp
lahf
inc
cpuid
xchg
mov
add
into
ds
(bad)
jg
sub
inc
shl
xor
cmp
lods
add
push
mov
ins
(bad)
jle
fxch
add
jmp
rcl
call
inc
xchg
retf
mov
pop
adc
jae
ret
test
xor
ror
or
movs
push
mov
aas
sub
ret
into
aad
(bad)
fistp
xchg
rol
inc
stos
and
imul
lods
fisubr
mov
mov
int3
scas
loopne
in
jmp
addr16
push
outs
mov
arpl
sbb
mov
adc
lds
jmp
iret
mov
mov
lea
sahf
das
test
pusha
ret
dec
pinsrw
pop
push
push
jle
repz
outs
xchg
sbb
not
aaa
xchg
push
mov
int3
lods
jp
(bad)
sub
and
aas
fsubr
fsub
sub
ins
sbb
cdq
pop
mov
sub
or
mov
mov
and
enter
jmp
jp
loopne
mov
push
mov
add
retf
dec
fstp
push
lahf
addr16
movs
xchg
fst
xlat
into
sbb
int3
pop
dec
pop
mov
mov
pop
xor
sbb
out
in
ins
mov
into
dec
sbb
or
dec
mov
ret
add
out
xor
jno
xor
inc
cmc
or
mov
test
out
xchg
bnd
fbld
ja
push
aaa
aad
lods
mov
jp
je
dec
mov
lods
fbstp
test
repz
fnsave
push
mov
repnz
xchg
jmp
mov
dec
fwait
aad
xor
adc
iret
js
mov
mov
add
aas
jns
(bad)
dec
in
jns
and
xchg
jns
dec
cmp
add
aam
idiv
sub
push
outs
mov
bound
retf
cmp
pop
ffree
jle
jg
pop
test
dec
mov
mov
(bad)
popf
test
int
sbb
out
ja
xor
ins
and
and
in
sbb
jmp
add
inc
out
in
out
hlt
cmp
jne
lahf
inc
icebp
ins
push
xlat
inc
dec
dec
push
mov
dec
xor
sbb
mov
ins
jb
and
xchg
xchg
outs
int3
je
cmp
mov
mov
retf
nop
int
jl
imul
jge
xchg
sub
add
rcr
xor
dec
jo
inc
sbb
movs
popa
xlat
mul
xchg
sub
sub
(bad)
iret
clc
loop
ret
call
retf
inc
cli
and
loopne
push
dec
adc
int3
cmp
add
inc
add
adc
je
jae
dec
mov
mov
xor
in
jb
inc
mov
mov
mov
movs
int3
add
and
add
push
call
adc
popf
add
outs
shr
xchg
test
outs
push
jge
dec
pop
or
mov
and
test
jmp
push
xor
and
and
and
jnp
sbb
fstp
cli
cmps
pop
sub
xchg
icebp
imul
inc
pop
inc
mov
xor
jmp
and
mov
jno
daa
ret
mov
inc
sti
imul
and
pop
stc
pop
xor
out
pushf
adc
jno
push
enter
dec
mov
test
push
push
push
call
mov
loop
xor
sbb
sub
jae
imul
clc
imul
sub
jo
xchg
adc
or
stos
sub
sub
aas
mov
jl
repz
jbe
jb
test
jmp
cmp
popf
inc
outs
popa
xchg
sbb
push
pushf
shl
xor
leave
xor
call
sub
movs
sub
xlat
jb
std
add
hlt
mov
daa
imul
push
dec
add
sbb
cwde
enter
push
mov
push
push
out
icebp
inc
fucomi
xor
dec
ja
shl
jge
aaa
scas
sbb
or
sar
lahf
inc
out
call
jg
sub
movs
mov
push
rol
cmp
loopne
test
out
adc
je
mov
dec
mov
test
jne
cmps
imul
gs
mov
dec
add
clc
jmp
dec
imul
retf
mov
fstp
xchg
inc
push
ffreep
cmp
push
mov
dec
stos
lods
pop
and
cmps
mov
enter
jmp
pop
movs
sti
aad
cmp
xchg
mov
arpl
adc
xchg
outs
ds
movs
dec
lods
cli
push
sbb
mov
lds
or
adc
out
sbb
mov
cmp
cmp
imul
jne
bound
push
jnp
mov
fnstsw
std
add
mov
test
cwde
(bad)
push
dec
pop
test
adc
xchg
mov
mov
mov
dec
sbb
push
xlat
mov
mov
adc
or
(bad)
loop
das
ret
stc
cmp
pop
pop
test
add
mov
mov
push
cmp
push
jno
stos
cmp
(bad)
sbb
loopne
dec
xchg
(bad)
test
xchg
cmp
xlat
popf
mov
adc
push
adc
retf
pusha
ss
fisubr
dec
fnsave
mov
sub
xor
push
mul
push
pop
or
inc
xor
(bad)
ds
push
push
das
test
add
cld
out
cmps
add
aad
mov
retf
call
icebp
mul
in
pop
in
loope
sar
and
outs
jmp
xor
ds
add
loope
push
mov
and
rol
mov
out
test
lock
sahf
ror
es
sbb
je
dec
push
icebp
cmps
out
std
(bad)
rcr
mov
pop
cwde
sub
icebp
movzx
cmp
push
movs
inc
mov
mov
or
cmps
je
push
outs
(bad)
push
adc
xor
psubb
mov
ret
lods
repz
push
movs
clc
xchg
fisttp
pop
or
out
push
movs
add
sbb
cmp
dec
dec
cmps
push
push
pusha
test
mov
sahf
out
stos
and
test
xor
(bad)
mov
sbb
jbe
test
cmps
fdiv
xlat
scas
push
cmp
jmp
cmps
mov
xor
inc
mov
retf
ja
jbe
cmp
cwde
not
out
jge
ds
sub
mov
popf
inc
out
call
in
mov
call
push
and
dec
add
shr
outs
retf
xchg
push
enter
and
ror
xor
ds
add
adc
sbb
lock
in
cmps
xor
xchg
int
loopne
(bad)
mov
adc
xchg
ror
pop
pop
jecxz
inc
mov
xchg
pushf
jnp
sub
pop
cmps
les
adc
mov
xlat
ja
ret
mov
ja
popa
mov
xlat
popa
and
sub
push
paddsb
int
in
(bad)
in
rcl
les
pop
aas
sti
inc
mov
mov
bound
inc
adc
or
push
es
cli
xor
add
jp
shl
pushf
and
mov
sbb
movs
test
jmp
clc
loopne
pusha
retf
push
test
ins
mov
mov
xchg
xchg
test
inc
dec
jge
push
ret
and
mov
jb
and
push
xor
xor
adc
push
popa
out
jecxz
pop
pop
cmp
push
xchg
mov
jg
or
xchg
push
ja
lods
(bad)
rcr
out
(bad)
call
inc
mov
mov
add
sbb
cmps
xor
stos
in
push
mov
push
loop
sbb
sub
adc
push
in
and
(bad)
and
fsubrp
jnp
push
fwait
or
mov
jmp
test
adc
or
mov
out
fwait
xchg
jp
or
pop
addr16
inc
jo
pop
pop
out
sahf
repz
jae
das
jge
adc
xor
ffree
jbe
iret
mov
call
pop
aas
fwait
repz
adc
icebp
pop
mov
inc
xchg
pop
inc
add
hlt
xchg
call
sar
xchg
add
mov
pop
xchg
mov
retf
mov
push
jb
mov
mov
jns
or
and
mov
hlt
test
stos
(bad)
mov
jp
add
jbe
sub
les
sub
dec
and
stos
or
mov
retf
pop
pop
aaa
push
push
push
adc
or
pop
inc
cmp
pop
aas
dec
add
dec
jp
int3
test
fidivr
jo
lahf
mov
and
cli
stos
das
mov
retf
or
push
adc
mov
ins
retf
push
add
inc
or
movs
sub
dec
push
std
sahf
repz
fsub
jo
popa
push
or
or
add
mov
xchg
mov
add
sub
adc
cmc
add
dec
jecxz
cmp
mov
add
or
jo
jp
cmp
xor
mov
std
into
imul
mov
push
xor
enter
ret
dec
cmp
fild
push
arpl
cmp
jno
push
stos
in
jge
and
add
mov
movs
mov
jb
in
ret
jb
inc
fimul
mov
repz
push
test
loop
cdq
outs
bound
js
ins
mov
cmp
int3
pop
in
outs
mov
cmp
mov
sub
fsubr
and
lds
add
data16
pop
jg
add
mul
cmp
jne
in
push
xchg
ss
mov
cmp
sti
push
pop
push
xor
not
inc
not
pop
mov
adc
scas
mov
pop
or
aad
or
mov
dec
loop
inc
sbb
ret
aaa
sbb
mov
pop
adc
mov
repz
xchg
mov
call
jge
das
in
mov
inc
(bad)
sti
repnz
add
test
dec
jmp
jae
clc
dec
lods
inc
push
push
cmps
hlt
clc
pop
dec
xchg
test
shl
(bad)
(bad)
and
or
fwait
adc
push
add
call
out
xchg
jnp
sbb
pop
ja
idiv
ret
dec
push
mov
stos
xchg
cwde
sub
pop
mov
(bad)
sar
xchg
in
sub
push
jl
xor
pop
in
data16
(bad)
(bad)
lods
jno
retf
mov
(bad)
fs
pop
dec
cmp
aam
aad
test
dec
test
dec
pop
sbb
mov
out
adc
(bad)
shl
sub
and
iret
xchg
add
cmp
popa
dec
add
or
bound
fidivr
pop
xor
push
inc
and
scas
and
push
and
movs
imul
sub
cld
ja
or
or
dec
pop
adc
xchg
das
xor
or
xchg
mov
sbb
dec
push
and
xor
and
daa
into
xchg
push
push
pop
jmp
sbb
dec
cmps
xor
jp
shl
loope
add
jnp
imul
mov
mov
out
pop
dec
imul
scas
gs
cdq
cmp
xchg
data16
pop
test
cld
bound
lods
fs
test
and
mov
jbe
jmp
pop
shl
inc
call
or
fidiv
pushf
sbb
mov
ds
xchg
std
add
cmps
call
add
xor
cmp
cdq
push
xchg
test
fs
jg
call
mov
or
xchg
inc
inc
cmp
jo
jo
xchg
sub
and
jnp
retf
(bad)
sbb
(bad)
sbb
xchg
(bad)
(bad)
pop
lea
mov
xor
pusha
fld
int3
out
sahf
into
push
ret
dec
pushf
out
aam
mov
fild
mov
mov
mov
push
fnsave
mov
pop
or
jbe
cld
sbb
cmp
push
xchg
stos
sub
gs
fst
jle
test
jae
das
xchg
xchg
aam
cmp
lds
ss
lock
mov
aas
out
fild
cs
mov
ror
inc
or
xchg
or
popa
outs
ds
fcom
int
stc
in
mov
mov
daa
jp
lock
jl
inc
sahf
add
(bad)
es
push
dec
dec
mov
or
jb
push
adc
mov
sub
nop
jbe
stc
push
push
xor
mov
lea
repz
rcl
push
movs
in
jmp
shr
call
cs
xor
ret
out
or
or
push
push
dec
jb
pop
xchg
xchg
ja
mov
(bad)
jecxz
push
sub
daa
sbb
mov
push
fild
aad
test
mov
add
fcmove
jmp
outs
add
cmp
fisttp
aas
push
jae
ds
pusha
jl
addr16
cmp
cdq
xchg
fs
out
push
test
cmp
pop
jno
xor
imul
inc
aaa
cwde
jnp
xor
sar
cmp
xchg
loope
fldcw
call
or
jg
cmp
xchg
and
sub
adc
aaa
jns
or
sub
fidiv
push
iret
es
cmc
pop
(bad)
adc
mov
shl
gs
sbb
iret
ret
nop
iret
or
push
shr
imul
dec
mov
arpl
loope
mov
cmps
sar
jb
mov
ins
xchg
cwde
cdq
xchg
mov
(bad)
add
and
xlat
jmp
adc
div
jnp
mov
daa
xchg
mov
lea
add
xchg
loope
dec
or
push
imul
cmc
clc
mov
jne
stos
xlat
mov
fisubr
adc
adc
outs
sbb
mov
dec
iret
jns
mov
adc
ja
dec
outs
or
js
adc
das
cmp
idiv
rcr
std
ins
movs
(bad)
mov
sbb
xor
loop
xor
movs
int
mov
fsubr
cmp
in
(bad)
and
loopne
rcr
jb
jnp
mov
xor
mov
bound
sbb
ja
and
mov
(bad)
mov
push
ret
or
sub
(bad)
out
mov
pop
int3
mov
outs
sbb
loop
in
xor
mov
idiv
(bad)
dec
int
frstor
sbb
fsubr
mov
aaa
or
dec
stc
sub
or
aam
stos
data16
bound
xchg
jne
ds
in
enter
xor
sub
xor
(bad)
ror
clc
or
(bad)
push
xchg
das
dec
in
push
cmp
add
dec
ins
or
pop
cdq
out
arpl
add
push
ja
xor
xor
std
arpl
inc
jg
outs
imul
ins
pusha
fild
fwait
(bad)
and
out
mov
and
adc
pop
int
pop
pop
bound
imul
shl
sbb
aas
lock
scas
add
lock
xchg
xor
pop
mov
nop
cld
mov
dec
imul
aad
jl
mov
mov
ins
movs
into
out
push
loope
mov
dec
xor
(bad)
fsub
movs
jmp
jns
sbb
enter
out
clc
js
(bad)
in
xchg
test
pop
les
jns
xor
out
js
call
ss
push
push
int3
mov
ret
mov
ds
in
out
popf
cmp
shl
xchg
sbb
out
daa
ins
cmpps
xchg
pushf
mov
scas
out
dec
(bad)
jns
sbb
mov
jecxz
pop
jp
sbb
mov
mov
stc
cwde
sbb
out
fst
repnz
idiv
in
sar
inc
je
dec
das
call
jmp
div
cmp
adc
and
in
stc
sbb
fdiv
xor
(bad)
lea
(bad)
lds
daa
and
mov
pop
mov
loop
pop
retf
js
dec
mov
loop
ins
cmp
popa
or
push
push
aaa
setne
sbb
dec
repnz
bound
adc
jp
scas
shr
outs
jbe
pop
je
ss
pop
sbb
push
mov
mov
enter
xabort
dec
sar
pusha
dec
add
xchg
pop
jmp
jmp
pop
cs
cmp
xor
fistp
cli
push
xlat
add
push
mov
fdivr
(bad)
data16
(bad)
clc
or
cld
repnz
call
cwde
loopne
cmp
adc
cli
mov
dec
mov
faddp
mov
or
popf
mov
stos
cwde
addr16
pand
jmp
mov
call
fidiv
and
mov
push
out
not
ins
out
ins
fimul
fst
loopne
or
sahf
cwde
lds
sbb
sbb
jo
mov
pop
fld
sbb
in
mov
dec
xchg
fstp
adc
and
adc
scas
pop
rep
clc
xchg
xor
iret
sub
and
loope
xchg
mov
add
adc
cli
in
sub
retf
push
or
dec
(bad)
inc
and
sbb
test
daa
ss
rcl
cmp
inc
shl
add
cdq
cmp
mov
outs
xchg
inc
test
sbb
clc
xchg
mov
popa
lock
pop
pusha
xchg
popa
cmps
out
rol
push
sbb
sbb
jg
push
inc
or
mov
stos
pusha
fistp
outs
push
in
push
dec
fnstenv
aaa
and
inc
(bad)
bound
mov
loope
scas
sti
repz
and
mov
inc
call
sub
xor
stos
outs
xchg
addr16
jmp
push
scas
mov
adc
mov
sbb
mov
cmp
lods
shl
mov
(bad)
retf
push
sub
jbe
pusha
ins
xchg
pop
dec
pop
and
xor
pop
mov
lock
mov
add
xchg
div
clc
add
lds
out
jmp
cld
mov
and
or
jge
cs
in
(bad)
xor
lea
test
das
mov
jg
jno
pusha
push
jmp
je
mov
push
lods
and
adc
jno
inc
sahf
mov
add
cmc
mov
xchg
int
pop
mov
jecxz
pop
and
lods
arpl
ret
mov
push
xor
into
adc
addr16
jmp
in
xor
cmps
inc
xor
inc
xlat
loop
aam
or
dec
bound
and
pop
and
mov
les
mov
add
test
loop
push
jl
out
inc
int
das
xor
les
pop
jmp
lods
out
mov
xor
imul
push
push
movs
fsubr
sub
mov
stc
push
int
movs
cwde
movs
push
push
ret
(bad)
jo
(bad)
std
jg
loopne
int3
and
or
add
hlt
inc
nop
retf
add
add
movs
mov
ja
and
mov
jae
mov
icebp
xchg
int3
scas
or
inc
fimul
es
std
ins
ins
or
ss
movs
sub
add
(bad)
sbb
cli
pop
jl
mov
xor
or
sbb
fwait
popf
cmc
test
and
je
imul
fwait
xor
repnz
mov
jo
xor
in
push
jmp
mov
retf
mov
sbb
test
add
fldenv
push
mov
popf
add
sub
pop
mov
imul
push
cmp
pop
mov
xor
aaa
cwde
inc
mov
jb
adc
cli
push
push
(bad)
fadd
sbb
xchg
xchg
int
xchg
outs
das
add
push
xchg
mov
cmp
add
sar
shr
mov
sub
shr
inc
cmp
(bad)
in
(bad)
jo
fild
mov
cs
(bad)
out
into
fs
ret
into
add
pop
sar
scas
pop
sub
nop
pop
mov
test
aas
xchg
xor
inc
shl
push
and
xor
sbb
or
xchg
nop
ret
div
retf
div
mov
clc
cmp
mov
int3
sbb
xor
pop
sahf
dec
hlt
xchg
stos
mov
sbb
es
fwait
test
and
test
test
inc
sbb
adc
nop
popf
xor
mov
outs
xchg
(bad)
(bad)
jmp
popf
das
and
inc
push
(bad)
in
jle
and
sbb
xor
push
lods
jecxz
mov
sbb
mov
pop
mov
fbstp
fwait
adc
stos
inc
stos
add
xor
xchg
test
adc
lods
cmp
push
sub
sti
es
mov
lods
ja
dec
adc
call
lds
push
adc
jp
inc
push
sub
jbe
add
inc
inc
jo
test
push
pop
in
cs
pusha
add
es
xor
out
cmp
out
sbb
or
mov
test
loop
and
sbb
sbb
arpl
xor
fmulp
sub
jnp
cmp
sbb
nop
mov
stc
jbe
xor
fwait
jge
cdq
and
cmp
adc
out
ss
in
xchg
cmp
mov
stc
(bad)
cld
xor
cld
mov
jno
loope
and
jae
or
mov
(bad)
test
sub
aaa
and
mov
les
xchg
addr16
dec
arpl
sub
push
mov
dec
sar
rcl
mov
fcomi
(bad)
push
(bad)
pop
les
jae
pushf
imul
fninit
in
push
xor
fucomip
js
cmps
in
adc
push
xchg
add
jmp
and
popa
(bad)
jno
outs
xchg
enter
inc
xchg
and
pop
or
stos
add
cmp
mov
stos
pop
mov
pop
pop
adc
scas
inc
lods
push
adc
push
int
in
call
les
test
sbb
mov
fwait
lock
cmp
push
mov
mov
int
out
lahf
add
jl
push
ss
pop
into
test
sub
jmp
xlat
mov
(bad)
into
(bad)
xchg
ret
adc
add
enter
cmp
imul
cdq
ins
retf
cli
les
fsubrp
mov
push
sbb
lods
jg
add
out
cdq
cmp
sub
cli
and
das
mov
cmp
inc
scas
pusha
sbb
pop
cmp
and
shr
loop
(bad)
js
or
mov
int3
and
ins
sbb
fcmovu
and
xchg
dec
(bad)
mov
pop
inc
f2xm1
sub
xor
ds
rol
and
int
inc
fsub
in
inc
dec
sbb
sahf
adc
into
retf
scas
sbb
scas
dec
sbb
sbb
mov
enter
mov
add
or
aad
ds
pop
inc
(bad)
xor
push
mov
sahf
out
xchg
push
jb
test
xchg
cmc
mov
mov
jmp
push
inc
push
das
cmp
lea
iret
out
adc
or
push
ds
paddusb
pop
ins
leave
xor
popw
adc
sbb
push
and
push
sbb
or
pop
arpl
fs
xchg
call
loope
xlat
jl
fcmove
mov
stc
out
dec
sbb
pop
(bad)
into
xor
sbb
fsubr
sbb
dec
sar
cmp
xchg
adc
icebp
or
loop
mov
repz
aad
inc
les
popf
push
mov
ins
arpl
shld
repnz
dec
jne
stos
sub
scas
leave
dec
sbb
daa
or
xchg
sbb
clc
call
aad
push
lahf
jg
ret
mov
setbe
dec
add
mov
jne
inc
jns
sbb
add
jg
cmp
sub
and
push
(bad)
fcomp
lods
repnz
push
cli
sub
pushf
cmc
and
lods
pop
loopne
sahf
push
rcr
ficom
sbb
cmp
push
adc
push
mov
xchg
shl
imul
pop
cmp
sub
adc
jmp
mov
arpl
mov
mov
jg
sbb
rcl
push
mov
fst
mov
jg
stos
and
push
xor
lahf
xchg
xlat
push
shl
(bad)
sub
adc
jecxz
call
inc
out
mov
lock
lock
mov
retf
ins
sahf
cwde
jle
sbb
ja
mov
iret
sub
test
pop
adc
retf
mov
xchg
mov
mov
leave
loope
pusha
dec
mov
mov
push
stos
mov
inc
mov
leave
aaa
add
scas
mov
(bad)
and
sbb
jl
inc
adc
or
mov
mov
or
sbb
shl
cli
push
mov
ret
pop
jno
jmp
enter
das
sbb
mov
scas
lods
sub
inc
sbb
dec
outs
ja
lods
xchg
pusha
jmp
pop
scas
(bad)
pop
mov
out
hlt
pusha
sbb
add
lods
mov
mov
mov
stos
jmp
sub
cld
dec
mov
xchg
fadd
push
jo
xchg
je
in
ret
and
mov
mov
push
call
lods
(bad)
outs
jle
sahf
inc
or
xchg
repnz
inc
pop
cdq
lahf
jle
stos
push
icebp
add
ret
and
mov
pop
in
outs
lahf
jbe
add
dec
pusha
mov
mov
loope
inc
fs
mov
inc
jb
mov
push
add
fcom
sub
jns
cmp
jmp
mov
ins
cmp
out
jg
leave
cs
pushf
push
pop
outs
pop
ins
mov
loope
mov
pop
add
xchg
push
mov
retf
xchg
dec
sub
add
mov
enter
lods
and
xchg
pushf
xchg
sbb
pop
fwait
out
sahf
js
xor
inc
(bad)
fdiv
gs
dec
call
push
in
mov
push
add
fwait
and
mov
dec
mov
inc
pop
lea
repnz
add
push
jmp
add
stos
mov
or
push
push
dec
pusha
test
add
in
rcl
enter
ret
mov
jp
sbb
aaa
push
xchg
xor
dec
out
cmp
sub
je
cmp
adc
inc
and
popf
xlat
and
and
jae
push
fcom
test
pop
lds
mov
sbb
lds
fcom
nop
or
xchg
push
or
retf
pop
cld
frstor
lds
test
cmp
cmp
pop
in
pop
nop
push
xchg
shl
xchg
out
into
fsubr
jg
jecxz
mov
inc
rol
sbb
repnz
add
enter
push
jns
(bad)
(bad)
fsubr
inc
pop
pop
sub
int3
jno
cmp
push
fist
dec
lods
jb
jae
ret
mov
(bad)
dec
rol
or
push
cmps
repnz
cmps
xchg
cmp
jb
mov
or
xchg
(bad)
out
aas
lea
jno
cmps
xchg
xor
mov
in
je
cs
cmp
pop
rcl
xor
scas
xor
jmp
std
mov
and
retf
fcomp
jns
dec
in
mov
push
add
mov
xchg
push
pop
sbb
push
mov
fwait
add
sbb
enter
in
cwde
data16
mov
xchg
push
push
inc
pop
push
pop
idiv
and
jg
dec
shl
mov
mov
fdiv
mov
popa
sbb
xor
or
stc
cmp
add
test
mov
jb
xor
stos
xor
loopne
sbb
or
adc
outs
and
fwait
pop
mov
push
or
sti
clc
ror
leave
pop
cmc
cwde
repz
sbb
mov
jno
hlt
push
push
test
das
jbe
std
sub
rol
pop
or
push
push
push
adc
pop
xchg
mov
popa
mov
mov
inc
sub
sub
push
fimul
out
lds
or
int3
rol
out
push
out
test
mov
out
nop
xlat
jb
(bad)
movhlps
lock
xchg
bsr
mov
sub
pop
adc
iret
push
(bad)
or
scas
mov
out
leave
fsubr
jnp
add
jecxz
cmp
outs
jae
push
int3
pop
dec
fs
cmps
inc
ss
cmc
xchg
push
adc
pop
add
push
sar
sub
mov
jecxz
jo
push
nop
jno
stos
cmc
add
lea
cmp
jbe
fst
and
cmps
call
aas
mov
or
cmp
div
push
rcr
std
pop
push
xchg
outs
lea
fwait
jge
(bad)
ds
sahf
push
cld
jno
and
rcl
dec
pop
mov
jp
test
nop
jmp
and
and
jne
fnsave
dec
jmp
das
data16
mov
dec
mov
xchg
and
push
mov
int3
lea
jns
lea
lods
ja
push
outs
pop
(bad)
arpl
retf
jl
pop
movs
pop
xlat
test
out
out
push
and
pop
out
jmp
pop
jg
std
add
jle
lods
cld
push
int3
fsub
mul
retf
push
fwait
lea
dec
mov
push
lds
inc
push
pop
aad
movs
js
and
leave
fimul
mov
(bad)
adc
adc
pop
ret
rol
iret
ins
xchg
pop
(bad)
addr16
fist
cmps
add
and
std
in
aad
sti
mov
jae
je
inc
jg
cmp
pop
mov
cmp
cwde
daa
jge
into
in
inc
inc
jns
outs
mov
sbb
push
movs
sar
mov
data16
arpl
loop
xor
jb
jge
int
inc
push
ret
sbb
pop
ins
xchg
fcomp
into
repz
and
ror
jg
pop
or
sbb
ret
pop
xor
mov
push
jo
xlat
mov
call
jmp
dec
dec
ins
stos
stos
mov
pop
xchg
mov
mov
lods
mov
dec
push
mov
(bad)
std
xchg
dec
fld
loop
in
cmp
leave
inc
enter
add
xor
mov
mov
push
xchg
xchg
xchg
push
icebp
push
and
inc
push
je
push
aaa
cmp
add
stos
add
shl
dec
adc
jg
jmp
cmp
out
sbb
dec
jo
dec
pop
inc
mov
imul
xlat
jo
mov
pop
sti
mov
push
adc
add
add
or
pushf
inc
lods
mov
push
loope
mov
data16
aam
sub
imul
xchg
or
fs
add
lds
inc
ds
pop
rol
in
jmp
das
push
fincstp
repnz
sbb
sub
dec
lods
daa
xchg
sub
ss
mov
(bad)
hlt
or
push
mov
push
add
xor
and
or
or
out
mov
jp
pusha
xor
cmp
test
cs
out
add
repz
and
jno
test
outs
sbb
mov
call
cwde
pop
daa
je
mov
cmp
push
inc
xchg
push
and
add
cpuid
out
dec
mov
dec
jo
lods
xchg
int3
(bad)
icebp
add
fwait
js
stos
je
shl
xor
adc
aam
popa
sbb
dec
(bad)
es
sbb
dec
out
xchg
cli
imul
adc
lds
xchg
iret
mov
cmp
mov
jns
in
test
in
pop
lods
mov
(bad)
fdiv
ins
test
fidivr
adc
cli
jne
aam
jnp
popa
frstor
cmp
cmps
xchg
out
out
adc
fmul
xchg
daa
push
and
mov
adc
ins
add
jge
je
iret
mov
nop
add
cmp
xor
cmp
xor
and
in
jmp
adc
add
call
add
sub
push
sar
imul
jmp
js
add
push
xlat
mov
div
scas
hlt
mul
mov
add
xlat
scas
mov
rol
lds
lods
sbb
mov
cmc
in
data16
inc
sar
cmp
pop
rcr
rol
mov
push
mov
cmp
jno
xchg
jbe
mov
xchg
cmc
call
or
daa
scas
sahf
(bad)
jge
xor
frstor
les
test
fidivr
xchg
cmp
mov
inc
ror
xor
into
inc
std
(bad)
aas
das
test
dec
loop
call
imul
cs
push
mov
adc
cli
inc
mov
dec
xor
push
(bad)
cld
retf
jae
fdivr
cmp
mov
sbb
jmp
cmp
mov
movs
mov
cmps
cli
in
mov
movs
add
jns
push
push
cli
mov
pavgw
sahf
test
lock
xor
xchg
xchg
inc
add
pop
out
mul
xchg
cli
and
out
mov
loop
mov
retf
mov
xor
lahf
mov
imul
mov
das
test
add
add
and
cwde
sti
push
pop
sub
mov
int3
xor
push
test
dec
sbb
mov
sub
mov
inc
mov
xor
push
push
pop
bound
and
fbld
movs
enter
cmp
fbstp
shl
movs
inc
push
mov
cmp
and
sbb
sbb
dec
cmp
inc
daa
mov
pop
iret
add
repnz
stos
out
gs
mov
shl
push
pop
add
fiadd
mov
pop
ss
mov
movs
cli
cdq
pop
aam
dec
mov
inc
fisttp
aam
stos
inc
mov
adc
jns
push
sbb
and
xchg
xor
push
jno
dec
cmp
(bad)
pop
xchg
in
and
xchg
mov
dec
inc
adc
and
jnp
jnp
sub
out
test
test
loop
fild
pop
dec
jmp
inc
adc
xchg
lahf
push
push
or
add
sahf
fmul
xor
sub
aaa
in
mov
inc
add
cmps
dec
pusha
inc
mov
lea
add
xchg
ffree
sub
leave
jbe
ds
sub
cmp
in
cmp
hlt
call
sub
add
dec
sbb
jmp
pop
(bad)
mov
pop
and
jnp
jge
scas
lock
(bad)
mov
stc
lods
cmpxchg
jmp
adc
cld
mov
xchg
test
mov
jl
ret
gs
repnz
mov
out
ins
mov
cmp
fcomi
cmps
jno
cmp
sbb
push
push
mov
out
add
ins
xor
jb
ror
mov
push
xchg
xchg
lods
popf
mov
or
aad
cmps
stc
iret
jae
sbb
xor
cmp
(bad)
add
sub
lods
mov
jb
lds
ret
or
scas
pop
pop
(bad)
int
js
jp
sub
or
addr16
mov
mov
out
addr16
xchg
xor
iret
pop
(bad)
cli
movs
mov
out
(bad)
mov
test
cmc
adc
or
fs
sbb
dec
cmp
(bad)
mov
imul
jecxz
outs
in
aas
(bad)
xchg
lods
lds
cmps
jmp
adc
push
push
sbb
inc
inc
out
sub
ja
addr16
add
cmp
push
out
daa
mov
bound
pusha
std
(bad)
gs
pop
and
mov
shr
int3
fs
adc
push
jne
ficom
and
test
sub
addr16
rcl
mov
fs
add
cmp
call
mov
mov
jmp
add
pop
or
push
cmp
dec
not
xchg
stos
(bad)
addr16
sbb
sbb
dec
push
cld
or
jl
cmp
(bad)
popa
xchg
data16
aad
jns
jp
sub
inc
push
ror
mov
push
push
repz
sub
xor
or
jbe
fist
hlt
lods
mov
icebp
in
fdiv
in
dec
mov
cmp
push
and
popa
test
mov
adc
leave
iret
stc
fst
ins
inc
mov
fnstcw
pusha
stc
ss
retf
clc
add
fwait
cs
daa
(bad)
test
push
xor
and
bound
in
in
cmp
ds
stc
mov
ds
sub
(bad)
mov
or
aaa
and
lods
outs
stc
imul
add
ficom
mov
test
cmps
add
xor
fist
lea
mov
(bad)
mov
cmp
pushf
jge
mov
and
mov
or
fwait
add
aas
movs
cmps
lds
mov
out
stc
ror
repnz
inc
enter
mov
sub
mov
push
lahf
pop
cmp
jge
mov
push
cs
mov
sar
ss
idiv
jne
ins
adc
out
retf
pop
shl
fbld
adc
sub
jb
int
aad
cs
inc
mov
daa
test
mov
push
mov
out
xor
mov
push
mov
sahf
call
mov
cmp
adc
out
push
inc
shl
sub
sub
icebp
push
push
outs
cmc
xor
and
scas
sar
sbb
push
cmp
xor
fstp
cmp
inc
sub
xchg
outs
ret
push
shl
dec
xor
rcl
and
and
push
loopne
sub
imul
cmp
(bad)
push
xor
ins
mov
pop
call
add
mov
pop
leave
dec
pop
adc
or
sub
jl
inc
mov
arpl
sbb
fidivr
mov
sub
aaa
sar
test
adc
enter
fisub
cmps
sbb
test
ds
call
pop
mov
push
mov
int3
dec
dec
mov
loopne
push
test
bound
mov
in
add
mov
sub
push
out
cmp
adc
fsubr
in
or
outs
les
push
jl
popa
cld
sub
xchg
js
xor
xchg
cli
mov
xchg
sbb
clc
in
or
push
test
adc
scas
ror
jnp
pop
out
cmp
adc
pop
and
pop
and
retf
xor
dec
test
adc
xchg
arpl
pop
mov
stos
xor
xchg
cwde
or
mov
test
cmp
push
mov
call
mov
and
xchg
rol
add
call
cmp
dec
clc
call
ret
test
call
pop
int3
mov
sbb
into
cdq
or
out
xor
fnstenv
iret
dec
shl
xor
in
pop
push
jp
lds
or
into
(bad)
xlat
scas
add
out
repz
xor
dec
cmp
jle
inc
pop
and
xchg
or
adc
sbb
dec
rol
jge
adc
sbb
mov
push
jp
dec
movs
fistp
div
pop
pop
mov
dec
push
les
ficomp
test
loope
stos
sar
push
out
xor
xor
mov
sub
pusha
adc
dec
(bad)
fstp
addr16
test
adc
fsub
stos
data16
pop
test
mov
xor
out
sar
xor
add
or
daa
movs
mov
fidivr
mov
into
sub
mov
add
or
int
dec
or
sbb
mov
xor
dec
test
xor
mov
pop
push
mov
sbb
jle
mov
js
sub
es
cmp
jnp
jg
aaa
popf
pop
jne
add
push
push
add
pop
jns
lods
push
adc
pop
dec
daa
out
xchg
aas
cmp
dec
adc
out
inc
movs
xor
inc
ins
inc
outs
mov
add
mov
out
js
aam
adc
loopne
dec
mov
cmp
jge
leave
mov
jp
push
ja
add
test
inc
arpl
push
xor
jecxz
jae
or
aad
(bad)
mov
and
cmp
shl
repnz
loope
pop
jge
cmp
ds
fs
jb
out
mov
add
jecxz
movs
xor
fstp
pop
mov
push
clc
xchg
ds
xchg
jge
clc
push
data16
dec
loop
and
arpl
and
add
sub
sbb
mov
push
jmp
cmp
sub
jns
ss
add
add
inc
test
jl
repnz
stos
lods
cmc
ja
cmps
idiv
or
mov
test
ret
rcl
inc
add
fmul
mov
adc
ds
jle
inc
sti
mov
(bad)
xchg
out
or
mov
stos
test
scas
popf
imul
push
addr16
dec
xadd
in
inc
loope
int3
add
dec
or
jmp
test
mov
and
or
add
add
dec
aad
ss
cmp
ds
add
sbb
std
inc
imul
and
(bad)
sub
xchg
mov
int
dec
sub
xor
jmp
mov
pop
fisttp
aad
sti
push
or
jmp
jle
dec
scas
sub
push
add
test
jo
shl
and
push
out
test
outs
jecxz
shl
push
and
enter
push
icebp
mov
jae
loop
inc
cmp
push
jl
xor
or
repnz
fnstenv
add
fucomi
pop
jns
and
sub
add
repnz
mov
jp
xchg
call
xor
jne
pop
inc
out
mov
mov
leave
push
cld
sar
xchg
iret
ss
mov
xor
(bad)
jbe
sar
xchg
xor
(bad)
inc
pop
imul
adc
cmc
and
mov
int
je
shl
rol
and
jmp
mul
fwait
cdq
pop
xchg
cli
jo
out
stos
dec
dec
mov
retf
xchg
fnsave
jno
aas
in
in
sbb
xor
cmps
inc
mov
adc
div
lock
mov
rcr
xor
nop
adc
adc
mov
and
push
fisttp
repnz
es
mov
mov
sub
call
sar
xchg
mov
les
cli
push
bnd
mov
cmp
js
or
cmp
or
jo
hlt
imul
push
lods
add
mov
out
xchg
fwait
int
sub
xchg
shl
push
sub
or
adc
or
pushf
mov
mov
adc
and
mov
mov
push
pop
mov
jmp
pop
xchg
mov
in
shr
(bad)
adc
adc
inc
mov
dec
sti
retf
call
not
lahf
jp
pop
jae
mov
mov
xor
gs
pop
mov
jns
mov
fld
or
or
sub
scas
xor
push
sub
jp
fcomp
cmps
sub
push
das
jmp
add
lods
add
out
mov
call
movs
and
pop
sbb
push
lods
popa
vshufpd
sbb
or
out
push
les
push
leave
sbb
cli
imul
adc
push
xchg
rcl
cmp
dec
sahf
push
or
mov
addr16
push
inc
jp
call
pop
dec
xor
or
mov
dec
mov
mov
lahf
mov
mov
mov
test
dec
mov
pop
pop
xor
jne
mov
mov
adc
repnz
mov
xor
dec
lock
xchg
xor
xor
push
add
sub
fdiv
sbb
xchg
in
test
pop
mov
(bad)
cdq
sub
and
mov
lock
in
and
(bad)
in
cmp
xor
inc
mov
inc
and
ins
xchg
adc
fisttp
sub
sbb
cmp
sbb
jecxz
jnp
cmp
cmp
ja
pop
loopne
xor
inc
or
sar
ins
fwait
ins
(bad)
es
jb
mov
bound
adc
out
pop
sbb
adc
das
inc
js
jae
fsubr
movs
pop
loop
push
jp
test
inc
lods
push
mov
mov
sbb
shr
int3
ss
test
cmp
xchg
scas
or
and
cmp
mov
loopne
jbe
fcmovnb
mov
iret
pop
cmp
outs
enter
push
(bad)
dec
sahf
pop
xchg
mov
aad
ret
dec
xchg
test
lods
xchg
jp
sub
jno
in
mov
(bad)
xor
add
imul
or
adc
cmp
lahf
mov
xor
addr16
and
dec
jl
sbb
jecxz
lods
popf
daa
jns
out
inc
sbb
addr16
leavew
hlt
sar
sbb
add
shl
jne
sub
xchg
fild
cdq
xor
xor
push
mov
jecxz
add
dec
inc
loop
adc
mov
xchg
icebp
push
test
es
and
xchg
scas
cmps
push
retf
cmp
and
fs
ss
cmp
ror
sbb
retf
push
mov
les
into
std
and
adc
jmp
cdq
adc
push
inc
retf
mov
sub
cmp
je
jns
inc
cmp
je
jo
sub
jecxz
mov
cmp
sub
xor
adc
or
mov
mov
(bad)
jmp
sub
xor
fidiv
or
sbb
popf
mov
xor
and
ins
or
xor
stos
sub
pop
push
jmp
push
dec
fldenv
jne
jo
clc
stos
push
jmp
xchg
push
fs
push
mov
jne
addr16
sbb
mov
test
dec
dec
pop
mov
enter
dec
pop
xchg
cdq
cmc
pop
vmovntpd
jecxz
data16
lods
inc
inc
dec
je
fistp
(bad)
jmp
jge
and
cmps
push
out
pusha
lods
outs
or
pop
test
push
mov
dec
mov
adc
push
xchg
js
inc
scas
jmp
push
xor
idiv
lods
aaa
dec
dec
xchg
lahf
dec
not
adc
or
icebp
mov
pop
jge
popf
and
xchg
ss
mov
jns
pop
inc
mov
jne
fist
jmp
adc
iret
in
les
xor
ds
inc
sub
xor
inc
mov
xchg
cmps
mov
or
push
imul
(bad)
cmc
pop
dec
cmp
inc
dec
cli
push
mov
test
inc
aaa
push
rep
lock
out
or
jmp
cmp
push
ret
out
adc
pop
lea
cs
xchg
xor
dec
xchg
inc
jmp
jns
aam
retf
sbb
shl
clc
or
mov
jno
push
mov
mov
push
inc
das
shl
or
in
sub
fwait
ror
jmp
xchg
scas
xor
push
mov
shl
call
cmps
push
pmullw
retf
repnz
add
imul
jp
dec
bound
popf
popf
(bad)
pop
les
xlat
mov
retf
js
inc
add
sub
es
retf
adc
aam
mov
(bad)
mov
xchg
pop
or
adc
add
mov
into
xchg
and
and
push
adc
movs
(bad)
mov
fld
jns
cdq
xchg
call
imul
test
scas
shl
aas
mov
mov
sbb
jne
sub
cmp
data16
xchg
js
daa
push
sahf
pop
jmp
xor
mov
pop
adc
and
daa
cmp
out
fwait
or
movs
mov
jmp
popa
cmps
fcom
lea
mov
adc
or
and
mov
jno
in
mov
test
dec
int
rol
cmp
test
push
add
rcr
ret
inc
xchg
sar
(bad)
mov
fcom
in
or
loopne
push
fstp
shl
ret
clc
adc
sbb
fdivr
inc
jmp
out
ds
cmp
mov
mov
xor
push
dec
fst
xor
les
std
shr
popf
fisub
dec
push
ds
imul
jmp
or
adc
add
in
add
jae
push
pop
aaa
push
shr
xchg
xor
(bad)
call
loope
xchg
les
pop
jno
(bad)
popf
pop
int
cmps
cmp
dec
iret
jge
pop
lahf
addr16
dec
xchg
sub
inc
jae
popf
ja
adc
scas
xchg
sub
pop
sbb
sub
push
sbb
outs
and
mov
int
lea
fcom
outs
ret
inc
enter
sbb
loope
(bad)
mov
xchg
inc
shl
lahf
push
outs
mov
cmc
enter
int
js
dec
dec
fs
cmp
and
aaa
dec
fyl2xp1
and
pop
xchg
leave
mov
popf
dec
inc
mov
imul
mov
out
lahf
rol
jecxz
pop
jae
enter
movs
movs
cwde
mov
loope
and
ret
cmps
jne
cmp
mov
xchg
test
pop
cmp
cld
out
mov
adc
aas
adc
imul
gs
mov
fs
jmp
or
push
iret
ror
fs
jnp
pop
aam
mov
mov
sar
push
add
lea
stos
dec
push
sbb
sub
sub
ss
adc
cmp
psrld
or
stos
ja
xchg
sbb
rcl
out
sub
rcr
or
ds
and
sbb
pop
ins
mov
into
sahf
dec
mov
pop
dec
inc
scas
adc
pop
ds
xlat
sbb
int3
and
push
mov
cmc
push
jmp
xchg
sahf
inc
retf
push
cs
(bad)
cmc
jno
stc
lahf
dec
mov
bound
daa
cmp
dec
cmp
sub
arpl
popf
test
in
or
bound
mov
aam
fiadd
retf
jo
ret
dec
add
ror
sbb
mov
or
je
in
(bad)
nop
mov
test
repz
lahf
mov
ret
cld
adc
sub
jmp
out
jg
pop
sahf
int3
jo
mov
ja
xchg
dec
hlt
test
outs
cmp
arpl
or
dec
sub
push
lea
jns
mov
outs
(bad)
(bad)
push
dec
or
or
xor
int
xor
jno
in
mov
jecxz
div
mov
cs
jno
xchg
mov
test
fidiv
jne
nop
mov
stos
retf
mov
jnp
scas
jle
mov
push
repz
mov
add
mov
mov
lds
jns
inc
and
mov
adc
push
or
sar
test
xor
cmp
fcom
add
in
xchg
fst
and
add
sbb
add
(bad)
xor
ins
adc
xchg
test
retf
xchg
loop
test
inc
sar
dec
push
shl
mov
mov
(bad)
mov
or
add
mov
mov
clc
cmp
(bad)
adc
mov
fwait
push
loope
mov
pop
pop
push
jp
xchg
push
stos
pop
xor
iret
ret
or
test
pop
out
mov
pop
push
mov
sub
bound
mov
mov
repnz
test
not
cmp
fstp
xchg
sbb
xchg
ins
adc
or
stos
adc
xor
adc
pushf
dec
push
repz
cmp
sub
sub
scas
sub
dec
fcmovb
pop
loop
dec
lods
xchg
or
jmp
add
push
sbb
pop
es
sbb
dec
jg
lods
leave
jno
sub
int3
icebp
repnz
out
adc
pop
out
push
jmp
pop
ds
adc
lds
push
mov
xor
adc
or
mov
jmp
mov
mov
out
adc
jb
inc
sub
hlt
fsub
(bad)
cli
fldlg2
dec
jmp
cli
mov
jge
inc
push
rcr
adc
xchg
aad
sub
inc
fistp
sbb
and
pop
(bad)
out
push
data16
int
cs
mov
or
das
arpl
std
es
dec
lahf
dec
sbb
mov
retf
xor
mov
in
lock
pusha
mov
lods
into
xor
aad
mov
sbb
adc
lea
into
in
sbb
mov
inc
push
pusha
xchg
add
gs
nop
sub
into
pop
les
add
mov
ss
sub
sub
fwait
cmp
jae
jmp
sub
sbb
push
xchg
shl
xor
jecxz
mov
sbb
stos
adc
cmp
iret
xchg
ret
je
jle
dec
cmp
jae
sub
test
rcl
xor
scas
pop
pop
xor
stos
fmul
imul
xlat
retf
loopne
inc
inc
adc
cmp
es
loop
and
cmp
movs
(bad)
cmp
sbb
or
add
and
popf
ror
js
into
cmp
jo
test
xor
pop
dec
loop
call
addr16
sbb
dec
and
pop
jns
std
pop
mov
fist
sub
sub
jp
add
cli
mov
sbb
mov
sti
add
inc
fcomp
dec
(bad)
out
jg
jle
sahf
inc
pop
cdq
jbe
dec
fsub
fldenv
mov
test
push
dec
push
or
ins
in
jp
jl
jecxz
dec
and
jo
sbb
loope
test
rol
add
shl
(bad)
cli
push
fisttp
xor
(bad)
(bad)
jae
or
pop
movs
dec
js
(bad)
pop
stos
test
push
mov
or
iret
xchg
fmul
adc
or
ror
dec
mov
ret
dec
test
pusha
pop
mov
dec
ins
outs
ja
xchg
jbe
clc
aaa
mov
sahf
add
xor
neg
fcomi
mov
cmp
cmp
pop
hlt
pop
pop
cld
inc
jle
jle
or
lahf
mov
sub
mov
ret
add
mov
ins
clc
stos
(bad)
cmp
stos
outs
xchg
dec
xor
mov
sub
test
lock
push
pushf
imul
pop
(bad)
push
cmc
sbb
sahf
dec
xor
scas
cmps
das
ins
and
sub
(bad)
call
xchg
outs
xchg
push
pop
cmp
lea
adc
call
dec
or
mov
push
call
hlt
sub
stc
cdq
xchg
mov
jbe
aaa
dec
test
xchg
aaa
add
cwde
fwait
sub
xchg
mov
or
loopne
jl
popf
jge
xor
pop
pop
std
mov
pop
and
hlt
sar
call
cmp
fnsave
cmp
xor
out
imul
push
rol
and
lods
xchg
adc
pop
iret
add
pop
aaa
call
das
jne
or
pop
pushf
test
xor
lods
inc
mov
leave
mov
cdq
rcl
ret
inc
cmc
not
call
mov
into
jp
test
icebp
xchg
shl
lahf
outs
xchg
movs
cdq
cld
shl
addr16
jmp
sar
pop
test
pop
hlt
sahf
dec
mov
imul
repnz
push
sbb
imul
icebp
and
aad
xchg
(bad)
fisub
mov
and
into
(bad)
dec
inc
cs
mov
cmc
mov
mov
adc
(bad)
loope
ins
inc
mov
cmp
aad
or
mov
dec
inc
test
(bad)
and
test
(bad)
cmp
sub
add
mov
sbb
jae
sbb
sti
or
cdq
mov
and
mov
push
xchg
adc
into
sbb
repnz
rcr
sub
(bad)
rcr
ret
adc
sub
add
pop
cmps
sub
sbb
add
and
iret
sbb
and
mov
aas
nop
and
lahf
imul
dec
xor
pop
or
jmp
mov
outs
lock
pushf
dec
sbb
add
std
fwait
(bad)
xor
vminpd
jecxz
aad
sti
in
cwde
fs
inc
jmp
daa
shld
sbb
push
pop
cmp
push
movs
mov
retf
int3
sbb
aaa
push
cdq
lock
dec
cmp
loopne
repnz
jmp
xchg
and
shl
mov
and
cmp
call
mov
repnz
cs
fisttp
test
int3
dec
and
and
into
mov
std
xor
fdiv
sub
adc
(bad)
pusha
and
(bad)
int3
test
mov
fld
cmp
cwde
add
loope
jae
rcr
in
test
mov
ror
shr
ins
fcmovnu
retf
push
cmp
popa
or
fild
or
lock
std
mov
cmps
mov
cwde
pop
inc
ins
jo
or
inc
xor
mov
or
in
stos
inc
cmp
jp
mov
push
ds
push
sahf
adc
(bad)
jecxz
neg
push
sub
jl
dec
mul
jle
lods
ret
mov
adc
adc
cdq
cwde
ss
loope
cmc
inc
outs
in
mov
retf
bound
pop
clc
pop
pop
mov
pop
push
mov
out
iret
out
nop
jp
mov
add
adc
jbe
lock
mov
jo
cmp
pop
jmp
add
add
jp
jg
sahf
popa
mov
mov
mov
out
add
movs
inc
mov
addr16
and
xlat
dec
sub
mul
inc
in
xchg
push
in
inc
cmp
in
mov
dec
js
lahf
inc
in
out
fstp
ds
in
mov
(bad)
(bad)
cmp
mov
idiv
xlat
sub
xchg
lods
mov
xor
jae
into
xor
xchg
in
mov
ret
cwde
iret
mov
push
xor
pop
ret
data16
test
int3
and
jo
sbb
ja
arpl
cdq
iret
mov
cmp
xor
enter
daa
retf
(bad)
clc
mov
mov
mov
xor
adc
mov
lods
cmp
cmp
pop
cmp
in
cmp
mov
shl
rcr
lock
bound
fisub
addr16
int
test
add
mov
sbb
add
lea
push
ret
cmps
sub
out
loopne
xor
imul
or
nop
sbb
stos
imul
mov
adc
and
es
adc
rcl
or
mov
cmc
das
or
mov
test
xchg
adc
mov
jmp
movs
pop
xor
mov
fmul
xchg
xor
or
push
jns
ins
std
(bad)
xchg
out
adc
xchg
lea
imul
int
adc
xor
jg
push
ficomp
cdq
or
or
js
test
sub
test
cwde
add
sbb
inc
add
sbb
pop
add
jne
pop
inc
in
xchg
je
out
mov
ret
cmc
or
mov
xor
add
xchg
cdq
adc
data16
(bad)
lods
fisub
xchg
dec
test
inc
mov
dec
stc
and
retf
sub
mov
outs
mov
fdiv
mov
xor
and
jmp
fdiv
jno
lods
cmp
pop
call
inc
xor
add
adc
hlt
mov
jns
movs
jne
pop
dec
or
stc
xor
sar
shr
sar
mov
pop
aad
add
lea
mov
(bad)
sbb
inc
sub
or
jne
xchg
jnp
cmp
adc
scas
retf
mov
loop
inc
xor
jo
mov
adc
push
xchg
mov
and
fs
or
dec
jl
je
ins
add
cmp
mov
xor
push
mov
iret
jmp
xor
outs
xor
retf
mov
jecxz
xchg
jl
ret
retf
jo
out
pushf
retf
sbb
movs
stos
sbb
adc
test
(bad)
and
xchg
mov
ja
(bad)
loopne
or
scas
pushf
adc
stc
xor
nop
ret
xchg
mov
dec
ficomp
mov
push
push
mov
daa
pop
jo
in
packuswb
sub
es
lods
push
jae
jmp
push
fisttp
jno
push
imul
in
leave
push
mov
aad
sar
scas
xchg
xchg
jmp
repnz
test
pusha
call
jns
sahf
sahf
mov
cmp
(bad)
ror
sub
push
and
std
push
cmps
std
ins
inc
mov
and
out
test
inc
sbb
jae
lods
neg
cmps
mov
outs
push
pop
and
mov
out
jp
test
(bad)
mov
jg
fadd
pop
cmp
fs
(bad)
rol
clc
adc
rol
add
or
test
dec
xchg
add
test
and
inc
push
mov
int3
(bad)
imul
cmc
iret
xchg
mov
les
sbb
(bad)
test
ror
xchg
ret
shr
lea
jne
cs
sahf
pusha
retf
adc
fidivr
dec
loopne
push
dec
std
(bad)
mov
pop
push
sub
adc
or
dec
rcl
pop
jle
call
rep
inc
mov
adc
dec
and
add
cs
mov
out
movs
and
mov
(bad)
cdq
jmp
movs
or
fadd
add
push
sbb
movs
call
xchg
jmp
sbb
and
clc
sub
pop
shl
icebp
leave
(bad)
cli
js
pop
sub
daa
pop
xchg
rcl
jecxz
outs
sub
idiv
adc
mov
add
fisub
and
ds
aam
ja
out
dec
mov
xor
pop
clc
mov
pop
mov
movs
fwait
or
pusha
movs
aaa
mov
(bad)
mov
clc
inc
(bad)
imul
fwait
gs
sub
adc
shl
in
ds
stc
adc
inc
xor
pop
ret
xchg
ror
in
sub
stc
(bad)
or
cmp
into
sub
or
(bad)
xchg
mov
mov
ds
outs
cs
lods
sti
scas
cli
cwde
cld
test
call
xor
add
dec
adc
pop
jae
fiadd
cwde
cli
pop
lds
adc
test
sub
arpl
popa
add
mov
add
pop
inc
test
and
pusha
gs
pusha
mov
imul
lds
sub
jg
pop
scas
(bad)
dec
or
xor
sbb
xchg
and
mov
jnp
xchg
mov
je
stc
dec
neg
push
cmps
aas
pop
lock
mov
xchg
mov
popa
(bad)
sbb
ins
and
add
jmp
push
add
add
pop
scas
ins
push
mov
in
sti
mov
repz
jl
mov
and
push
je
pop
addr16
cmp
mov
fidiv
add
add
mov
outs
push
jae
push
jns
dec
icebp
hlt
pop
rol
inc
and
daa
push
mov
gs
inc
hlt
dec
out
pop
fbstp
push
loopne
adc
sahf
inc
and
in
cdq
clc
dec
cmps
shl
mov
pusha
mov
retf
jae
push
adc
mov
cli
jns
lea
push
and
daa
out
sub
mov
adc
push
(bad)
jl
call
xchg
jp
add
push
xor
nop
imul
ret
push
call
adc
xchg
fwait
add
adc
sbb
ja
ins
hlt
inc
jmp
arpl
pop
push
fs
inc
int
pop
cmps
adc
pop
fcomp
inc
jb
cwde
adc
lea
idiv
pop
mov
test
jmp
inc
add
dec
or
data16
add
fimul
call
adc
pushf
into
sbb
or
(bad)
imul
arpl
sub
cdq
jnp
les
or
or
xchg
aam
or
inc
xor
mov
repnz
mov
mov
mov
and
je
sti
js
popa
inc
jne
jae
call
add
mov
push
stc
push
add
mov
xor
pop
sbb
and
adc
xchg
cs
sti
ret
add
pop
xacquire
fwait
sti
mov
loopne
je
ror
add
pop
sbb
cs
sbb
loope
inc
cmp
cmp
lds
shr
mov
push
pop
test
jno
icebp
enter
jne
lods
inc
jnp
xor
in
jmp
sbb
add
out
mov
fcom
push
pop
push
inc
jo
or
xchg
and
xchg
adc
test
mov
cmp
mov
mov
popa
xor
inc
inc
push
and
leave
or
inc
inc
jg
fisub
push
jne
(bad)
xchg
fs
xchg
push
stos
rol
lock
pushf
fisub
pushf
(bad)
mov
dec
lahf
adc
pop
repz
outs
adc
jl
ficomp
imul
shl
add
add
or
fisubr
mov
adc
jbe
sbb
rcr
(bad)
test
test
jb
shl
shl
loopne
outs
rcl
test
gs
sbb
into
adc
jns
xlat
cmps
jecxz
dec
cmp
loop
adc
xchg
sub
fnsave
pop
loopne
loope
mov
nop
stos
mov
mov
inc
outs
icebp
loop
mov
mov
pop
mov
call
(bad)
leave
fs
fst
les
not
stc
inc
inc
mov
sbb
xchg
inc
enter
add
aaa
xchg
(bad)
loope
fidiv
pop
mov
scas
jl
xor
add
add
jns
in
popf
scas
or
mov
cwde
xchg
mov
cwde
or
aam
inc
push
(bad)
pushf
call
push
cmp
and
jg
xchg
push
and
in
mov
ret
jl
sub
div
pop
(bad)
cmc
movs
es
imul
(bad)
mov
ins
aam
nop
aad
outs
fisub
stos
call
xchg
stos
cmps
in
xor
lahf
push
cs
inc
mov
cmp
or
pop
cmps
pop
retf
gs
cwde
scas
xlat
mov
es
fidiv
cmp
std
sbb
xchg
fld
and
ja
and
mov
fsub
sar
movs
loop
bound
mov
fsub
test
hlt
sahf
fstp
inc
pop
outs
(bad)
inc
pop
int
gs
mov
mov
int3
lahf
xchg
repz
mov
sbb
xor
mov
mov
mov
lods
frstor
jle
push
cmps
jb
loope
jo
adc
cmp
cmps
lds
push
dec
dec
push
dec
fimul
xchg
js
into
lock
lds
shl
cs
rol
out
dec
xor
cwde
adc
shl
sahf
xchg
retf
(bad)
push
xchg
outs
nop
mov
and
sbb
(bad)
and
mov
sub
adc
jl
push
(bad)
(bad)
bound
jno
dec
cmp
push
ja
mov
or
pop
je
push
es
outs
test
cmp
outs
mov
daa
and
out
inc
cdq
sub
xchg
mov
cwde
sbb
ret
clc
ss
mov
mov
inc
mov
test
xchg
lods
cmp
dec
pop
sub
xchg
das
fsubr
xchg
les
jno
and
lock
(bad)
push
pusha
sub
pop
outs
sbb
xchg
jo
ins
xchg
das
call
cmp
xchg
lahf
add
mov
es
shr
retf
ret
mov
jo
adc
imul
and
call
cmc
fyl2xp1
mov
cmp
aas
pop
cwde
sbb
mov
pop
fs
retf
je
pop
jecxz
inc
push
mov
sub
imul
fwait
popf
loop
call
icebp
jecxz
cs
dec
jmp
mov
xchg
fisub
fistp
aaa
mov
xchg
jb
and
mov
ins
mov
movs
scas
retw
dec
xor
and
and
hlt
and
ds
clc
mov
sub
movs
lods
(bad)
stc
xchg
pop
loop
lods
sbb
arpl
fbld
enter
imul
cmps
aad
stos
gs
push
push
dec
adc
daa
mov
sbb
into
ins
nop
enter
scas
jmp
dec
push
ret
sub
pusha
imul
pop
neg
(bad)
push
cmps
jge
dec
mov
(bad)
fmul
inc
clc
scas
mov
add
add
out
jp
mov
test
lea
jo
loop
jns
shl
sub
imul
jecxz
movs
pop
sti
fstp
mov
adc
inc
inc
movs
pushw
adc
mov
pop
stos
into
cmp
shr
pop
dec
inc
shl
in
sbb
pop
inc
sbb
daa
jae
jmp
jecxz
outs
hlt
and
cdq
push
(bad)
fnstcw
test
pop
pop
and
outs
and
jecxz
pop
push
sbb
inc
add
shr
mov
test
pop
neg
icebp
out
pop
sub
loop
ds
mov
xchg
iret
sub
xor
fcom
dec
mov
ja
xlat
push
xlat
fdiv
adc
xchg
pop
xor
inc
dec
int
(bad)
push
mov
test
lds
int3
imul
inc
add
sahf
aas
je
shl
mov
pushf
dec
cmp
stos
jmp
sub
cs
mov
popa
push
mov
jmp
popf
in
sbb
(bad)
dec
cmp
push
inc
pop
push
rcr
loopne
cli
xchg
sub
push
adc
push
push
xchg
mov
cwde
xor
test
jo
add
adc
mov
xchg
gs
and
jmp
lds
dec
jmp
repnz
movs
lods
xor
imul
dec
jl
mov
rcl
adc
nop
or
(bad)
xor
std
push
pop
xchg
ss
das
jb
les
mov
push
iret
adc
and
(bad)
add
push
sbb
out
xor
and
push
mov
cmp
das
ss
daa
xchg
push
jle
cld
call
push
pop
cmp
leave
push
icebp
xchg
hlt
dec
sbb
adc
aaa
rol
xchg
xor
scas
rol
in
call
lock
inc
shl
es
test
sar
mov
lahf
inc
cli
addr16
sar
lds
dec
pop
fcomp
jae
stc
xor
out
cli
xchg
xor
mov
movs
sbb
ja
add
gs
inc
xor
or
sti
or
retf
hlt
cmp
xchg
mov
or
xor
dec
scas
sbb
jns
sub
add
xchg
cwde
imul
es
retf
jge
inc
test
jae
xchg
ds
add
aad
stos
cmp
xchg
pop
mov
pop
mov
mul
jno
(bad)
cmp
add
or
mov
xchg
(bad)
aas
ror
mov
clc
and
sub
xacquire
xchg
jns
retf
push
fdivr
sbb
shr
jb
lods
jl
jnp
xchg
mov
out
retf
mov
std
cli
lea
dec
out
in
sar
fsubr
das
adc
test
jb
shr
add
push
cmp
iret
mov
aas
lods
into
call
mov
ficom
push
pop
jp
adc
mov
mov
xchg
pop
clc
lahf
sbb
dec
sub
xchg
scas
mov
std
ds
sbb
mov
mov
retf
stos
mov
lea
les
dec
adc
movs
inc
sub
daa
pop
adc
dec
test
xchg
test
mov
pop
mov
add
mov
adc
jle
das
jbe
push
adc
add
fs
imul
sbb
test
mov
xor
and
sub
inc
and
and
xchg
mov
mov
pop
lea
jge
mov
lea
out
inc
sbb
ss
loope
cwde
clc
adc
repz
fild
inc
outs
jl
in
inc
pop
mov
xor
pop
not
nop
push
jmp
sub
inc
lea
mov
sub
mov
pop
mov
ret
ss
(bad)
sar
rcl
jno
and
mov
cmc
rcr
sbb
gs
sbb
rcr
push
gs
pusha
mov
or
(bad)
jmp
test
jne
imul
jo
adc
dec
jl
std
sub
sbb
push
and
inc
fadd
iret
cwde
xor
inc
xchg
pop
not
retf
dec
(bad)
test
cmp
mov
and
mov
inc
idiv
fmul
xor
sbb
call
lds
xor
xchg
jns
ffree
jle
es
mov
jmp
sub
pop
dec
aas
cmps
mov
int3
mov
cmp
mov
push
push
cmps
xor
jl
jmp
aam
add
adc
fwait
push
fs
dec
or
sub
popf
loop
xchg
mul
pop
loopne
or
ret
iret
push
aad
nop
outs
jg
lods
stos
into
ds
mov
fidivr
and
in
aaa
lea
fild
lds
and
adc
inc
xchg
ins
push
mov
test
pop
adc
xchg
dec
lods
jge
leave
xor
adc
rol
fs
rol
and
xor
cmp
gs
in
pop
popa
repz
xchg
fnstsw
dec
inc
jns
push
sub
rcl
sub
xchg
jge
sub
lds
sbb
daa
test
cli
xor
mov
call
je
jmp
ficomp
xor
out
add
mov
mov
neg
inc
push
shl
into
dec
or
bound
in
add
(bad)
push
leave
std
jmp
cmp
xor
rcl
inc
test
aam
push
xchg
jl
(bad)
jp
dec
std
fbld
jp
jo
jnp
aaa
fcmovnbe
aaa
in
xchg
dec
int
stos
push
lds
jp
push
push
je
cmps
xor
out
ret
scas
sar
jp
cmp
shl
test
pop
xor
and
push
int
aas
pop
nop
mov
inc
dec
repz
mov
inc
xchg
mov
pop
out
push
imul
(bad)
inc
adc
push
stos
push
div
into
stos
(bad)
imul
xor
or
imul
icebp
push
rcl
mov
inc
cmps
stos
or
mov
jne
sbb
jo
and
bound
jecxz
(bad)
pop
jg
in
cmps
sbb
pop
outs
mov
inc
aas
not
loope
mov
add
cmp
ret
mov
loop
sub
jae
and
imul
dec
test
fild
sub
cmc
lea
and
inc
sub
(bad)
leave
adc
inc
arpl
sub
(bad)
loopne
xchg
mov
je
test
jmp
arpl
loop
hlt
out
mov
sbb
dec
inc
and
add
push
jecxz
cmp
pop
add
ss
inc
in
and
pop
ins
mov
or
jp
cld
call
call
ja
push
outs
mov
fcom
and
inc
lea
sub
rsm
inc
push
or
xlat
mov
push
xor
cmp
push
add
sbb
lock
push
(bad)
shl
aaa
(bad)
cmp
or
adc
cmp
push
mov
scas
pop
dec
push
es
mov
fidivr
call
call
xlat
add
in
dec
lds
push
lods
into
arpl
mov
ja
mov
mov
pop
pop
xor
shr
push
stc
push
push
bound
and
adc
clc
les
js
movs
lock
stc
sbb
push
mov
stos
xlat
and
cs
loope
leave
xor
sar
pop
cmp
dec
ja
adc
push
gs
dec
ds
fistp
loopne
leave
les
cmp
lahf
sub
stos
ins
inc
lea
push
sbb
push
cmp
out
daa
or
test
(bad)
sub
xor
stos
add
jmp
xchg
xchg
xor
idiv
outs
add
fwait
mov
dec
js
scas
or
or
or
mov
cmc
pushf
adc
mov
pop
add
(bad)
jo
loopne
jno
adc
mov
push
or
test
aam
xor
sbb
imul
jbe
jmp
repnz
(bad)
pop
test
mov
jmp
sbb
int
(bad)
stos
adc
mov
enter
cdq
sub
cmp
mov
mov
pop
in
movs
and
in
jae
cmp
mov
mov
loop
jmp
sbb
fimul
enter
outs
repnz
fadd
and
push
test
(bad)
out
shr
mov
sub
or
ror
imul
ss
fs
stos
in
data16
adc
aaa
out
in
jbe
int
or
jne
push
jge
aas
adc
arpl
cmp
(bad)
nop
in
popa
cmps
push
aam
jno
xchg
gs
repz
jo
cld
sbb
stos
(bad)
xchg
jae
(bad)
es
inc
sub
lds
ds
loop
sbb
loope
sub
xchg
aad
stos
enter
nop
in
xor
shr
mov
sbb
rcr
jo
ss
add
fcomp
cmp
mov
loope
pop
(bad)
adc
xor
mov
jo
sti
sbb
sub
fnstcw
inc
stos
or
outs
and
xlat
stos
int
lea
cmp
jl
mov
aaa
adc
sub
push
fs
not
mov
(bad)
fwait
(bad)
jmp
and
dec
dec
jle
pop
rcr
je
stos
das
dec
cmp
push
aas
dec
pop
shr
ss
stos
or
cwde
cmp
mov
call
(bad)
in
popf
scas
pop
aas
inc
sbb
add
ins
adc
or
cmp
jne
fs
pop
sub
add
mov
out
xchg
xor
popa
aad
cs
scas
push
or
sbb
cmp
cmc
(bad)
adc
and
adc
in
out
push
retf
mov
mov
cwde
sbb
cmovs
repz
das
jmp
mov
mov
sbb
mov
(bad)
je
(bad)
ror
cmps
push
mov
das
cs
inc
cdq
fild
pop
jge
retf
jo
mov
(bad)
inc
repz
mov
mov
push
inc
je
nop
retf
fwait
out
pop
pop
sti
ja
cli
test
movs
inc
ds
rcr
bound
xchg
mov
or
arpl
cmp
pushf
mov
call
or
imul
mov
adc
shl
mov
out
inc
mov
cmc
or
jno
dec
xor
add
mov
xor
mov
pop
and
aas
xchg
out
in
inc
out
aaa
or
jo
jno
cmp
inc
test
cmp
lods
aam
mov
or
pusha
sti
adc
dec
xor
outs
in
fnstcw
pop
xchg
cmc
lea
shl
stc
das
push
cli
jge
sbb
aas
(bad)
test
sub
add
cmp
frstor
shr
ja
xor
mov
mov
popa
add
mov
push
xor
sub
into
cs
cmps
jecxz
das
(bad)
inc
icebp
loop
call
shl
and
mov
(bad)
and
cmp
(bad)
adc
add
inc
xchg
push
std
bound
xchg
out
or
push
sbb
mov
cmp
xchg
lock
jl
fisttp
jb
xchg
(bad)
xor
or
clc
cmp
shr
jle
cmp
jbe
(bad)
arpl
cld
sub
sti
mov
pop
sbb
mov
add
mov
push
jb
scas
xchg
bnd
in
(bad)
ins
in
cmp
scas
out
sub
cmp
movs
push
pop
retf
rcr
sbb
cmp
lock
mov
outs
add
pop
cmp
jmp
push
stos
add
out
(bad)
pop
mov
dec
jne
add
dec
out
test
(bad)
sub
ror
push
jecxz
jle
mov
and
dec
clc
mov
inc
aaa
mov
cli
call
mov
aad
sahf
jmp
or
hlt
dec
jl
out
into
or
add
jecxz
shl
push
push
jg
adc
or
and
push
adc
shl
test
jae
sahf
fidivr
mov
int3
loope
es
loopne
mov
lahf
and
cmps
mov
jmp
rcr
shr
fistp
adc
popf
in
push
mov
xchg
int
jp
mov
jg
adc
std
ret
or
aas
clc
mov
inc
fwait
out
daa
jmp
movs
sub
or
xor
std
push
je
adc
xchg
and
adc
jne
cmp
das
fisttp
inc
lods
pushf
push
stos
mov
dec
test
gs
and
cwde
icebp
mov
jp
xchg
mov
jge
sub
out
cmp
jl
jno
sbb
jp
imul
aas
loopne
push
jns
jne
sbb
jne
or
mov
pop
fcmovnb
(bad)
pop
cmps
ss
scas
sbb
pop
out
popa
jle
ss
and
iret
jge
(bad)
dec
sbb
jecxz
ror
aaa
call
dec
adc
inc
lea
mov
out
mov
pop
call
sbb
pop
push
shl
dec
sub
ror
rcl
loopne
test
(bad)
xor
pop
js
ins
xchg
push
js
xlat
push
icebp
jbe
in
dec
push
les
nop
push
imul
mov
hlt
xor
xchg
cmp
les
aaa
push
in
and
xchg
cs
jl
out
call
or
fnstcw
cld
adc
dec
jae
repnz
mov
sbb
lds
jp
inc
push
sbb
xor
mov
xchg
aas
nop
add
in
mov
fadd
jns
push
ds
and
mov
(bad)
cmp
clc
in
mov
out
and
mov
test
nop
or
ins
js
xor
jmp
adc
jo
and
std
add
imul
dec
fistp
dec
xchg
jne
inc
(bad)
jo
mov
out
movs
aam
daa
or
jg
push
(bad)
jne
int
arpl
pop
adc
fidivr
push
cld
mov
out
outs
sub
pop
or
pop
std
div
adc
or
dec
push
das
rcl
sub
pop
or
lods
inc
mov
ss
jmp
push
sti
in
enter
mov
inc
or
fist
leave
sti
push
pop
or
mov
add
push
das
sti
icebp
movs
dec
fcomp
xor
xchg
mov
cdq
imul
jmp
mov
pop
test
xor
cmp
jae
jae
xor
rol
enter
dec
jne
sti
(bad)
movs
add
add
pop
mov
adc
test
sbb
cmp
xchg
shl
or
push
js
shl
push
sti
sti
lds
pop
push
sub
in
push
add
inc
cmpps
cmp
shl
scas
clc
mov
lock
int3
out
lock
icebp
(bad)
mov
in
out
mov
icebp
in
mov
fs
push
repz
inc
popf
fisttp
out
cmp
cmp
inc
mov
mov
loop
mov
fld
ss
loopne
sbb
fld
std
jb
adc
add
or
ds
lds
ss
mov
xchg
sbb
sub
shl
ret
add
or
das
loopne
sbb
xor
jo
rcr
or
lahf
icebp
les
pop
mov
mov
retf
dec
pushf
jle
(bad)
jp
xchg
retf
inc
jnp
sub
cmp
popa
cmp
jmp
inc
jle
sub
inc
push
repz
xor
push
repnz
add
lods
fwait
pop
cmp
mov
sub
arpl
or
sbb
pop
hlt
inc
retf
mov
sbb
sbb
adc
lea
cli
push
sub
jl
pandn
pusha
and
test
mov
mov
xchg
cs
xor
ins
pop
adc
push
or
out
sub
jne
outs
ficom
mov
fsub
adc
and
sbb
ds
retf
clc
jmp
mov
out
xor
add
dec
(bad)
mov
les
sub
sub
mov
imul
in
les
test
jmp
push
cs
cmp
mov
cmp
mov
dec
sub
sbb
push
push
adc
xor
shr
adc
push
jg
push
cmps
cld
and
cmp
or
div
jns
xor
sbb
fsub
mov
ins
push
inc
adc
ret
jnp
rcl
cdq
sbb
(bad)
push
in
gs
or
fidivr
loope
and
shl
(bad)
dec
dec
imul
fbld
gs
mov
into
fmul
cmp
xchg
sbb
inc
mov
sbb
and
stos
mov
dec
cmc
fcmovbe
daa
js
ds
ror
cmp
pop
dec
and
addr16
gs
adc
xchg
xor
jge
xor
call
inc
xor
inc
test
loop
adc
bound
adc
xor
in
jl
sbb
pop
mov
lds
jl
lods
popa
and
mov
add
ins
rol
bswap
and
pushf
pop
je
stc
stc
adc
aas
fs
mov
xor
add
push
adc
push
inc
bound
push
daa
stc
repnz
push
jmp
mov
xor
add
pop
xor
pop
cmps
adc
mov
mov
cmps
adc
jmp
adc
ror
out
fdivr
in
dec
outs
fld
in
and
lea
cld
pop
dec
das
stos
jge
mov
and
pop
and
and
cld
dec
mov
dec
or
outs
arpl
and
xchg
mov
cmp
cmps
(bad)
inc
jns
pop
jg
dec
add
stos
mov
push
or
shl
scas
xchg
fidiv
ret
dec
adc
jb
aaa
pop
(bad)
jo
jmp
sbb
cmps
call
jmp
(bad)
and
xor
jge
mov
add
xor
dec
jnp
xchg
mov
xchg
jg
cdq
and
sub
aad
inc
push
xchg
addr16
add
and
jl
and
or
mov
lock
scas
mov
movs
(bad)
sbb
call
ror
sbb
sbb
sub
repnz
movs
sbb
xchg
leave
jno
int
call
pop
add
shr
outs
fldcw
or
mov
in
vmread
(bad)
adc
adc
cmp
dec
add
jg
ins
cld
sbb
add
mov
repnz
dec
fwait
mov
scas
sbb
jecxz
or
push
xchg
pop
retf
stos
mul
xor
(bad)
xchg
push
pop
inc
imul
push
hlt
je
cdq
(bad)
adc
mov
push
setbe
pop
into
stos
sbb
adc
xchg
adc
xor
cmp
jle
inc
aaa
sbb
xlat
xchg
dec
dec
lods
repz
movs
imul
scas
popf
icebp
sahf
inc
push
imul
les
hlt
mov
loop
pop
icebp
sub
dec
sbb
push
mov
xchg
in
cld
stos
push
lods
je
mov
nop
scas
gs
push
ja
(bad)
(bad)
js
mov
(bad)
mov
sbb
stos
das
lahf
ret
dec
dec
xchg
cmp
push
dec
cdq
adc
push
pop
pop
sbb
test
das
scas
or
xchg
and
mov
stos
or
and
xchg
or
sub
daa
jmp
add
dec
jno
popa
cmc
out
dec
test
push
jmp
add
cmc
adc
sbb
cmp
lea
scas
sar
(bad)
movs
(bad)
sbb
cwde
icebp
jns
or
aam
and
gs
rcr
dec
call
lods
(bad)
repnz
ds
(bad)
(bad)
jecxz
rol
or
sub
jae
xchg
pop
jmp
in
cmc
iret
jbe
mov
mov
cli
push
inc
jno
aam
cmps
mov
rol
fdiv
xor
ds
mov
cdq
sbb
pop
pop
pop
test
neg
(bad)
pushf
jno
mov
aaa
cmp
test
xchg
jecxz
idiv
and
cmp
xchg
push
test
pop
in
xchg
daa
mov
adc
jl
jmp
add
rcr
cmp
int
lock
movs
add
jmp
test
inc
aaa
push
lahf
sti
stos
repz
(bad)
sbb
sbb
dec
daa
mov
daa
rcr
stos
inc
push
fdiv
popf
and
mov
inc
dec
cmp
xor
in
cmps
add
aas
mov
push
ds
cmp
stos
mov
sub
jle
inc
xchg
ret
xchg
into
inc
pop
cmp
mov
add
loopne
xor
sbb
push
nop
stos
push
jmp
movs
inc
or
xor
dec
(bad)
cmp
cmp
xlat
mov
sbb
or
jge
xor
movs
retf
(bad)
std
scas
dec
int
ins
loope
mov
push
(bad)
xlat
xchg
stos
sbb
lods
mov
push
pop
(bad)
fcomi
mov
int
ror
iret
sbb
out
xchg
xor
dec
retf
pop
or
pop
loope
jl
add
push
inc
test
sub
ins
pcmpeqb
sub
xor
mov
sub
jno
jb
stos
or
shl
popf
add
xchg
mov
retf
fcomip
and
add
repz
jl
pop
clc
fsincos
or
cmp
pop
daa
mov
add
popf
pop
lods
rcl
sahf
mov
mov
fidivr
jno
es
push
lahf
push
jae
div
and
adc
pop
adc
ss
pop
or
add
iret
enter
xor
out
or
mov
mov
pop
mov
rol
sub
nop
stos
popf
ror
mov
mov
add
or
inc
or
aam
ret
(bad)
addr16
repnz
or
out
fstp
into
pushf
bound
pushf
ins
jg
fwait
xchg
sbb
jg
push
xor
sbb
in
push
sub
mov
mov
mov
and
inc
lock
popa
pop
pop
mov
in
dec
rol
aam
xchg
cmp
rcr
add
inc
bound
jmp
push
cmp
bound
dec
pop
cdq
ja
(bad)
dec
pop
adc
cmc
add
push
fcomp
jge
dec
xchg
jle
adc
cmp
pushf
mov
fwait
sub
or
mov
sbb
xor
cld
cmp
and
(bad)
dec
ins
and
das
mov
mov
push
dec
ss
pop
push
sub
xchg
mov
cmp
in
or
out
shr
mov
mov
xchg
retf
mov
loop
retf
xor
cld
or
daa
es
lds
in
xor
mov
adc
out
dec
xor
rcr
dec
std
and
(bad)
clc
ja
pop
(bad)
sbb
push
dec
movs
adc
mov
and
inc
add
or
xlat
jmp
push
mov
mov
mov
cmp
imul
clc
inc
dec
and
inc
mov
(bad)
and
dec
jg
inc
cmc
fidiv
scas
sbb
xlat
mov
xor
fs
mov
fwait
jns
push
sti
aaa
shl
push
jp
clc
sbb
add
or
loope
in
add
scas
pushf
jmp
add
sti
pop
jo
repnz
and
imul
ins
(bad)
in
add
or
push
jno
push
cmp
cmp
xchg
sbb
shl
repnz
mov
push
scas
in
cmc
out
aas
and
js
mov
and
shl
push
shl
and
xchg
fdiv
imul
int3
hlt
arpl
sbb
retf
push
and
pop
dec
(bad)
stc
or
pop
or
push
lds
pop
fmul
dec
jne
retf
cmp
je
xor
or
jae
retf
xlat
jl
rol
pusha
idiv
mov
jno
sub
div
lock
cmp
bound
repz
push
sub
stc
push
cdq
mov
push
push
inc
es
jg
dec
test
retf
jecxz
or
(bad)
stos
add
dec
mov
mov
cmc
cmc
popa
cld
bound
cmps
push
xchg
pop
adc
sbb
pop
mov
or
add
xor
sub
dec
dec
pop
and
std
loope
and
sti
push
ficomp
adc
outs
sbb
sub
out
sbb
xor
stos
cmp
xlat
mul
stos
pop
push
and
add
sbb
jmp
mov
pop
loopne
test
sbb
or
xor
pushf
xor
aam
(bad)
sbb
mov
jecxz
add
nop
lock
sbb
popf
les
es
repz
add
scas
xor
mov
rol
xchg
pop
sbb
jmp
test
jg
loopne
rcr
or
or
adc
mov
outs
nop
sar
imul
sbb
mov
inc
or
(bad)
arpl
inc
(bad)
pop
out
adc
sti
xor
lock
sub
pop
xor
mov
jo
fld
inc
xchg
jne
mov
pushf
xor
retf
add
add
dec
test
pmaxsw
lods
stos
lds
nop
dec
pop
push
hlt
push
cli
add
mov
mov
add
inc
or
fbstp
sti
lods
jmp
fstp
dec
lock
adc
mov
out
(bad)
push
add
pop
jno
lahf
retf
hlt
in
js
dec
daa
shl
xor
mov
sub
mov
jge
ret
sbb
dec
rol
out
je
xor
xchg
cmp
push
repnz
mov
push
pop
add
mov
cmp
ins
cmp
push
aad
mov
sti
jb
xchg
push
add
cs
out
inc
div
mov
(bad)
mov
pop
fnstenv
dec
cmp
dec
cmps
pop
imul
arpl
aaa
fbld
cmp
xchg
imul
aad
add
xlat
pop
dec
pop
loop
clc
mov
inc
jmp
and
test
ins
jno
dec
sbb
sub
rcr
lods
mov
call
gs
sbb
inc
lock
mov
call
cmps
stos
not
inc
mov
dec
sub
pop
aam
jecxz
inc
sbb
push
cmp
sub
xor
sub
or
or
(bad)
std
(bad)
mov
jb
fs
sbb
sbb
(bad)
loopne
jmp
mov
inc
jae
popa
cmps
cwde
into
mov
add
xlat
retf
(bad)
adc
adc
retf
xlat
pop
cmp
mov
ss
out
xchg
or
push
sbb
and
(bad)
cwde
cmp
xchg
or
or
ret
jg
cmp
cli
mov
rcl
mov
pop
aam
jp
pop
mov
jg
mov
mov
mov
lock
dec
pop
cmp
add
mov
pop
out
sbb
jmp
dec
mov
dec
cmp
enter
call
cs
js
imul
adc
or
aas
inc
jecxz
or
movs
sub
or
not
shr
sti
jnp
addr16
into
mov
sbb
sub
add
test
pop
ins
rcr
aaa
jae
xchg
push
jbe
inc
iret
icebp
and
call
xor
in
sti
jmp
std
cs
push
push
nop
cld
push
lahf
jbe
pop
jge
movs
aad
leave
retf
shl
dec
repnz
and
ror
ins
sub
or
adc
jb
outs
lds
(bad)
lods
cmp
fdiv
movs
push
push
gs
dec
push
enter
clc
and
sbb
xchg
iret
pop
jmp
test
add
and
das
add
jbe
scas
sub
push
jl
loopne
ror
sub
cmp
aam
push
retf
ja
rol
jmp
jg
and
daa
aad
je
pop
ficomp
dec
mov
mov
imul
fidiv
fld
and
xchg
sbb
pusha
xchg
jo
sahf
sub
dec
xchg
inc
push
pop
sbb
push
test
mov
push
scas
leave
adc
push
jmp
push
add
dec
push
sbb
icebp
dec
dec
ret
scas
ret
xchg
or
addr16
inc
cmc
(bad)
hlt
mov
aas
imul
push
fs
lds
xchg
inc
xor
push
fnsave
into
dec
inc
das
mov
mov
adc
fild
stos
push
mov
ret
push
sbb
xor
cmps
add
dec
jne
mov
push
pop
js
leave
dec
(bad)
out
jecxz
mov
mov
scas
cmps
xor
jl
mov
aam
inc
movs
dec
cld
cmps
adc
adc
in
mov
ss
pop
add
dec
mov
mov
mov
inc
jne
sub
(bad)
xor
mov
je
xchg
shl
(bad)
stos
sbb
jp
adc
push
pop
repnz
lds
aas
pop
xchg
push
cs
jle
cwde
in
mov
int
loop
jnp
sar
xchg
shr
neg
push
aas
(bad)
sub
sbb
sbb
hlt
mov
cli
fwait
xor
jmp
fsub
sbb
fwait
scas
pop
sar
leave
fsub
clc
(bad)
(bad)
push
mov
aam
mov
ds
adc
(bad)
ret
mov
stos
shr
pop
xor
and
and
and
nop
adc
dec
xchg
mov
mov
add
push
mov
dec
inc
dec
retf
ficom
or
pop
and
clc
pop
mov
mov
lds
sub
fs
xor
push
inc
fisubr
leave
dec
sub
out
test
call
mov
add
aas
add
sub
mov
je
jno
inc
push
ret
mov
popf
pop
pop
mov
outs
(bad)
mov
sub
ficom
push
cld
xchg
ret
pop
push
mov
out
add
aaa
cwde
mov
jo
ins
mov
jg
or
jge
mov
rcl
int3
fs
mov
xor
push
outs
or
mov
loope
lods
imul
ja
or
xchg
jmp
or
daa
cmp
movs
mov
inc
xor
sti
dec
into
xchg
gs
jle
add
adc
pop
pop
adc
jmp
rcl
cmc
aaa
sub
clc
and
js
mov
xor
imul
mov
les
shl
xor
add
ins
pop
jb
push
push
fisubr
mov
dec
xor
mov
inc
dec
push
mov
test
push
setnp
in
adc
fisttp
mov
shl
push
sbb
mov
sbb
inc
mov
push
xchg
jmp
and
push
loop
ror
or
xor
mov
hlt
cmp
sub
(bad)
(bad)
inc
mov
pop
push
inc
and
fdivr
add
out
or
adc
out
mov
mov
lods
nop
or
pop
mov
xchg
pop
cmp
dec
sbb
or
mov
push
mov
pop
cmp
jl
hlt
loop
in
mov
mov
fadd
iret
scas
retf
cld
clc
arpl
in
cwde
sub
test
cs
js
mov
jns
popa
(bad)
or
adc
mov
xchg
stos
mov
xchg
mov
ror
out
push
cli
and
test
(bad)
fld
mov
dec
mov
retf
(bad)
out
out
and
sbb
mov
imul
(bad)
push
dec
call
mov
es
aas
mov
push
out
mov
inc
test
ss
xchg
mov
pop
sar
dec
push
xchg
or
push
hlt
and
mov
shl
push
mov
dec
mov
push
cmp
call
enter
dec
cmps
dec
pop
test
xor
(bad)
fidiv
xor
mov
in
xor
lods
adc
pop
imul
pop
ficomp
dec
cmp
or
fdivrp
shr
jp
(bad)
mov
addr16
mov
fistp
cmp
xor
xchg
cmp
mov
lods
mov
fiadd
sub
push
xchg
mov
xchg
and
rcl
or
imul
enter
cmp
daa
nop
pusha
sbb
cmps
xchg
sbb
mov
sbb
add
cmp
jle
fs
lods
sti
sar
inc
call
add
push
shr
scas
jae
pop
enter
or
mov
mov
mov
in
mov
push
shr
je
add
in
dec
retf
leave
or
inc
imul
pop
iret
xor
(bad)
fdivr
pop
dec
das
fdivr
arpl
sub
xchg
mov
shl
push
mov
sbb
fsub
es
pop
imul
adc
ja
dec
xor
ja
push
sbb
and
imul
gs
cmp
cmp
adc
pop
(bad)
into
xchg
sbb
sbb
inc
lock
les
ret
stc
fwait
stc
xchg
mov
in
jne
jle
aad
imul
fstp
xchg
lods
retf
xchg
stos
ins
push
ins
add
in
push
out
cwde
repnz
outs
jmp
lods
jo
fisub
sub
pushf
ss
out
pop
movs
imul
loopne
sub
push
mov
push
cli
mov
ja
shl
jp
fisttp
bound
rcr
mov
aas
cli
cmc
popa
ins
leave
mov
cmp
sbb
inc
lods
add
(bad)
pop
xor
pop
stos
and
mov
dec
xchg
cmp
xchg
jbe
mov
loope
mov
pop
cdq
fbld
mov
leave
mov
and
ror
jmp
data16
loopne
push
out
aam
fmul
test
std
out
sbb
add
pmulhuw
pushf
je
jae
stos
mov
repz
inc
jecxz
lahf
or
mov
call
jl
push
or
loope
movs
mov
or
cmps
adc
and
stos
(bad)
push
cmps
addr16
pop
dec
jl
sub
jne
cmp
out
jecxz
dec
icebp
cmp
cmc
push
in
inc
out
xor
out
xchg
mov
scas
leave
(bad)
std
or
sbb
ja
inc
xlat
push
jecxz
adc
popa
xor
or
cwde
rcr
mov
mov
cmp
sub
call
mov
xchg
les
pop
push
addr16
dec
ficomp
sti
leave
ins
ja
push
xchg
loope
xchg
jbe
mov
enter
push
scas
sub
cmps
scas
sbb
imul
jl
jmp
in
mov
fldcw
mov
std
and
sub
scas
add
clc
pusha
(bad)
mov
or
sub
or
push
sbb
mov
pop
jae
xchg
or
dec
cmps
ins
imul
jbe
fdivr
xor
xor
je
add
add
scas
mov
bswap
mov
inc
fwait
enter
fild
jnp
pop
loop
retf
fdiv
sti
push
std
push
sbb
xlat
jle
add
push
shr
jmp
icebp
shl
mov
fmul
xlat
push
and
mov
dec
dec
jmp
mov
imul
lods
iret
fnstenv
into
test
das
into
xor
inc
and
mov
mov
movs
and
mov
fistp
(bad)
mov
xchg
cmp
ins
aaa
push
sub
sub
sub
add
push
xlat
js
lahf
and
into
in
ja
in
out
cmp
jne
stos
shr
shl
iret
cs
mov
out
or
xor
push
mov
push
mov
mov
jb
movs
data16
inc
jmp
rol
mov
(bad)
popa
sbb
inc
lods
or
cmps
daa
pushf
fadd
and
jns
std
or
xchg
fistp
movs
enter
mov
gs
loopne
mov
stos
into
cmc
gs
xchg
jmp
xor
cli
and
stos
mov
icebp
aaa
inc
push
(bad)
push
jle
add
inc
arpl
mov
pop
not
lods
xor
mov
out
push
les
mov
mov
xchg
ins
dec
push
outs
sti
dec
sti
mov
xchg
iret
arpl
adc
add
add
jnp
mov
xor
inc
push
cmps
enter
fucomip
jge
fsubr
jecxz
popa
pop
imul
icebp
mov
mov
push
cmp
enter
inc
loop
cmp
or
or
stc
ja
sti
enter
xor
cmp
inc
jnp
out
gs
scas
pop
or
popf
lds
lahf
aas
fs
fdiv
or
ss
nop
and
es
pop
lea
movs
clc
xchg
jmp
(bad)
jle
ins
and
stos
add
lods
sub
sub
stc
dec
repnz
mov
mov
aad
adc
pop
in
adc
repnz
lahf
ins
std
movs
jno
fwait
inc
shr
lea
xor
sbb
ss
fcom
sub
pop
mov
jo
push
dec
(bad)
cmp
jl
js
jg
add
ins
cdq
push
mov
je
(bad)
imul
ret
push
add
push
sbb
scas
mov
mov
ficom
fwait
pop
(bad)
dec
dec
fmulp
repz
and
cmps
cs
sbb
rcr
push
imul
fadd
lahf
in
leave
in
mov
mov
arpl
and
pavgw
adc
xor
fldcw
dec
inc
retf
xchg
sbb
call
jmp
or
lds
xor
int
cmp
arpl
dec
(bad)
mov
mov
xchg
and
push
adc
push
sbb
test
push
cmp
adc
aaa
js
inc
mov
ss
sub
inc
cld
dec
cmp
push
pop
daa
nop
mov
adc
in
cmp
fsubr
dec
nop
mov
fwait
js
test
and
stos
pop
add
xchg
pushf
ror
jl
mov
mov
outs
ror
jns
or
fs
jmp
test
loop
sti
shl
xor
rcl
outs
mov
fwait
leave
lds
test
jae
sub
out
push
ror
mov
dec
xor
les
leave
jae
aam
mov
xlat
jg
fwait
push
pop
iret
xchg
pushf
xlat
adc
dec
mov
stc
adc
lds
cwde
jecxz
call
es
scas
push
and
jmp
xchg
mov
mov
(bad)
or
mov
cdq
and
add
jno
ins
shl
ins
clc
into
mov
loop
cmp
push
and
pop
iret
frstor
in
les
push
xor
push
push
push
fs
jge
pop
pop
mov
aam
loopne
shl
mov
adc
test
(bad)
in
sbb
lods
jbe
push
mov
cld
stos
mov
add
add
stos
jb
pop
or
push
div
pop
or
adc
inc
rcr
xchg
out
retf
ja
xchg
cmp
out
sahf
xchg
cwde
or
pop
lods
jnp
pop
cmp
repz
push
jnp
or
mov
loope
sar
std
fdivr
mov
add
pop
mov
in
in
or
stc
ror
add
scas
mov
fst
add
sbb
pop
mov
jl
cld
add
rol
gs
rcl
loopne
dec
sbb
adc
js
sub
adc
test
push
stos
lods
fdivr
cmp
in
add
test
mov
das
sbb
jo
sti
mov
(bad)
mov
cmp
xor
lods
inc
fcmovnbe
cmp
pop
jbe
mov
mov
addr16
stos
addr16
jmp
fidiv
adc
adc
inc
aas
leave
(bad)
mov
mov
xor
mov
push
movs
daa
mov
stos
mov
std
and
addr16
aaa
or
mov
int3
jmp
cdq
shl
iret
test
ins
mov
imul
mov
fisub
sub
js
mov
jae
ficomp
jmp
sbb
jl
push
adc
dec
mov
pop
or
popa
call
and
jmp
dec
inc
sbb
mov
shl
imul
or
mov
or
sahf
jno
div
mov
fnstcw
movs
dec
pop
mov
retf
in
leave
fmulp
je
jmp
ret
sbb
mov
pop
mov
or
cmps
pop
xor
outs
stos
jmp
not
pop
xor
xchg
dec
mov
dec
add
shl
or
not
pop
and
les
dec
js
and
xor
movs
pop
pop
mov
pop
jbe
(bad)
(bad)
or
aam
xchg
test
and
or
add
xor
add
(bad)
and
cmps
loope
fwait
mov
in
pushf
xchg
das
sbb
ds
je
or
je
lea
mov
js
mov
sbb
repz
(bad)
repz
jmp
push
stc
inc
xor
or
pop
cwde
xchg
dec
test
xchg
ret
out
xor
mov
(bad)
dec
mov
inc
sbb
adc
in
dec
ds
add
inc
fcom
dec
xor
push
push
xor
xchg
int
dec
fs
in
das
ret
pop
mov
fcom
stos
push
inc
push
ficom
push
fdiv
or
aas
loopne
fild
xchg
pop
das
mov
jecxz
cmps
rcr
or
add
int
stos
iret
xchg
retf
std
setl
add
(bad)
lods
out
loop
mov
xor
mov
adc
push
mov
enter
jns
sub
sub
int
xor
xor
shl
xor
adc
fnstsw
inc
and
mov
mov
add
mov
daa
shl
ins
jl
and
icebp
mov
pop
pushf
or
mov
jo
sub
push
dec
adc
in
gs
sti
add
es
mov
mov
dec
mov
add
test
cmp
and
call
mov
or
sub
lods
mov
inc
sbb
or
mov
and
das
mov
cli
shl
aam
cmp
mov
mov
or
lods
jg
cmp
and
mov
cmp
dec
outs
retf
loope
sbb
fidiv
sbb
and
std
in
cmc
sub
imul
test
sar
in
jp
push
add
repz
cmps
arpl
jbe
retf
(bad)
fist
jecxz
or
les
imul
adc
out
loope
hlt
fs
fwait
mov
push
mov
mov
pop
cli
arpl
popf
movs
loope
push
xor
ins
sub
lahf
icebp
cmp
test
cld
mov
cmp
aad
shr
ins
repnz
push
icebp
mov
dec
movs
xchg
scas
ins
xor
retf
add
sar
or
xchg
cmc
movs
add
scas
and
pop
and
call
gs
fmul
cmc
and
in
sub
xor
mov
dec
push
std
idiv
cmps
inc
cwde
mov
push
mov
jae
mov
(bad)
xor
sbb
popa
(bad)
aas
(bad)
xor
dec
and
inc
jmp
xchg
xor
gs
jbe
aam
adc
es
cmps
mov
inc
dec
jne
adc
mov
out
and
cmps
mov
pusha
push
cmp
push
and
push
or
and
imul
sbb
leave
cmp
test
test
mov
out
sub
dec
jecxz
add
cmps
mov
jp
outs
pop
push
sub
mov
xchg
jg
mov
and
inc
push
and
pop
xor
test
mov
aam
int3
lods
mov
repz
sub
push
push
clc
or
xchg
xchg
xchg
int3
pop
leave
push
lock
fisttp
das
sbb
mov
dec
in
popa
call
xor
lods
popf
ins
adc
pop
push
cmp
inc
mov
pop
mov
pop
mov
repnz
shl
sbb
mov
jp
xor
lock
push
in
or
nop
inc
stos
je
fist
pushf
ja
and
das
push
ds
lds
sub
push
push
fcom
sub
rcl
(bad)
arpl
mov
pop
sub
sub
mov
and
adc
inc
gs
cld
aad
das
call
dec
ret
mov
enter
leave
and
sbb
add
and
jb
mov
daa
pop
sub
(bad)
int
pushf
fwait
ss
inc
jmp
push
es
mov
aam
out
scas
and
cld
mov
popa
shl
ret
pop
sub
stos
jp
pop
sbb
idiv
mov
rcr
mov
out
jle
out
std
jg
rcr
xor
cmps
or
in
out
sbb
sub
pop
repnz
cmp
(bad)
jnp
jne
sub
mov
jnp
mov
ds
fwait
enter
pop
out
cli
mov
cmp
push
xor
test
popf
arpl
add
in
xor
push
sub
sbb
fs
aas
arpl
loop
fimul
jmp
jecxz
cmps
jbe
stc
sbb
in
adc
bound
xchg
cmp
ss
xor
sub
mov
pusha
retf
je
push
or
fisub
sub
(bad)
fcomp
mov
test
push
adc
inc
ins
inc
add
(bad)
mov
js
lds
inc
pop
test
mov
aam
jmp
xchg
push
shl
and
sub
sti
cmp
cmp
sti
cmps
rol
fstp
es
jge
les
mov
dec
jg
ret
jmp
ja
in
sub
mov
(bad)
lods
loopne
addr16
fsub
mov
mov
mov
fsub
push
xor
fcmovnbe
mov
dec
loopne
ins
mov
stos
pusha
adc
shl
repnz
sbb
sbb
pushf
cwde
and
jns
inc
data16
xor
sbb
dec
rcl
jns
xchg
(bad)
cmp
xchg
repz
mov
fsub
div
les
xchg
shl
push
adc
pop
adc
pop
imul
or
retf
xchg
aam
xor
mul
cmp
adc
sbb
jecxz
icebp
adc
push
es
push
sbb
repnz
mul
and
jo
inc
ret
shr
jne
jmp
arpl
xchg
mov
sub
inc
gs
ja
stos
retf
cs
ret
adc
ss
mov
fcmove
mov
adc
mov
mov
lods
inc
test
or
or
push
mov
pop
sub
add
pop
or
dec
push
fiadd
fimul
sar
or
dec
leave
xchg
pop
pop
sub
add
mov
fwait
adc
mov
lods
stc
gs
fisubr
clc
inc
pop
(bad)
shl
jg
inc
movs
scas
lods
add
dec
and
inc
push
popa
inc
rcl
ret
cmp
or
adc
out
(bad)
push
jb
nop
sub
out
xor
push
into
fisubr
push
sub
aas
sbb
sub
mov
ds
nop
out
pop
lods
sub
xor
(bad)
adc
mov
push
adc
inc
imul
jl
jge
stos
push
jmp
call
push
mov
cmp
lods
fst
cmps
ins
icebp
inc
mov
clc
call
xlat
loope
loope
fmul
or
mov
add
xchg
xchg
mov
dec
in
and
mov
pushf
xchg
adc
push
rcr
cmp
mov
cli
or
in
or
aaa
ins
mov
cmp
mov
jg
fs
enter
lahf
inc
scas
movs
jno
mov
ja
adc
push
dec
inc
shr
in
arpl
pushf
(bad)
aam
push
ficomp
stos
(bad)
jmp
(bad)
sub
(bad)
adc
lods
and
inc
dec
fwait
adc
jmp
into
sub
dec
mov
push
fs
movs
pop
jo
int
pop
sahf
out
mov
test
sub
inc
or
(bad)
mov
xchg
test
cmc
sub
fcmovu
mov
in
ret
add
test
cmp
ret
mov
lea
sbb
in
scas
icebp
ds
dec
push
mov
inc
sub
lahf
int3
ja
and
add
xor
vphadduwd
mov
cmp
out
adc
adc
push
loope
add
sub
lds
repz
push
push
adc
add
jmp
iret
cmp
call
mov
lods
leave
cmp
bound
mov
cs
xchg
xchg
cmp
stos
adc
gs
lods
sbb
sbb
mov
xchg
test
or
lods
mul
adc
test
and
lods
test
mov
jmp
leave
aas
pop
loop
mov
adc
sti
dec
call
mov
nop
and
and
mov
repz
push
sahf
stos
add
xor
loopne
push
and
dec
and
xor
mov
bound
fs
xlat
(bad)
sahf
cmps
mov
push
or
es
or
popf
push
push
jno
ins
hlt
mov
les
jnp
pop
pusha
mov
cs
ret
dec
je
sahf
mov
repnz
addr16
in
xor
hlt
push
xor
imul
mov
push
fnstsw
jp
shl
xor
dec
or
pop
pop
mov
sub
pop
ficomp
fdivr
mov
xor
das
popa
push
in
pop
push
scas
and
pop
pop
inc
out
lods
mov
jnp
mov
and
test
lea
pop
cld
pop
das
jns
out
push
add
adc
out
push
cmps
sub
icebp
clc
rol
nop
push
jbe
das
mov
fisub
lods
mov
stos
xor
sbb
fiadd
je
pop
in
or
inc
(bad)
xchg
js
shr
or
sbb
mov
cwde
ja
out
pop
(bad)
push
ret
icebp
dec
mov
xchg
xchg
xor
out
ins
mov
jns
ret
mov
sar
nop
test
or
dec
sbb
cmp
adc
(bad)
pop
xchg
mov
adc
mov
outs
mov
push
fs
shr
sbb
icebp
(bad)
adc
mov
ror
push
jecxz
outs
mov
jp
jp
sahf
pop
loop
sbb
and
pop
loop
and
push
push
cmp
mov
cmp
dec
sbb
enter
shr
sub
push
sub
retf
mov
test
pop
pop
jp
xor
jle
lods
ret
dec
or
cmp
cmp
dec
cmp
cmps
adc
in
push
mov
inc
test
cmp
mov
pop
push
repz
adc
jp
aas
(bad)
repnz
push
inc
mov
call
sti
ss
mov
das
(bad)
mov
(bad)
fisttp
mov
loopne
cmp
sbb
xchg
dec
dec
pop
sbb
scas
jmp
mov
mov
dec
pop
adc
adc
leave
push
mov
or
mov
sbb
xor
or
pop
in
aaa
call
lods
inc
(bad)
lods
out
pop
adc
xor
adc
mov
cmpps
xchg
lea
icebp
fld
imul
add
mov
xor
test
pop
test
std
jecxz
pop
pop
loop
scas
repz
fwait
div
call
or
aaa
inc
inc
jnp
inc
sbb
mov
lods
mov
inc
xor
ficom
rol
add
stos
add
jecxz
ins
stc
aam
push
je
bound
lods
movs
int
pushf
sub
or
call
jge
or
xchg
sbb
out
or
pushf
test
cdq
jb
add
inc
(bad)
hlt
sub
fwait
ja
js
in
sub
repnz
cmps
cmp
sub
add
pushf
stos
xchg
scas
scas
fadd
sbb
arpl
pop
ret
sar
ins
cmp
jmp
xor
pop
mov
aam
xchg
jg
frstor
addr16
mov
push
mov
iret
inc
or
dec
push
cmp
inc
sti
mov
(bad)
pop
in
xor
call
xchg
into
repnz
inc
jno
inc
into
add
xchg
push
test
stos
and
sub
cmp
stos
xor
scas
cmc
jns
push
push
test
xor
sub
pop
movs
ins
repnz
mov
stos
scas
inc
xchg
or
jmp
add
xchg
push
inc
adc
xor
rcl
cmc
and
push
das
cmp
dec
mov
nop
aam
sar
hlt
stos
jns
push
xlat
cmp
inc
sar
mov
mov
cmp
jmp
mov
outs
sub
xor
inc
xchg
push
adc
aas
mov
sar
dec
jmp
xchg
and
dec
mov
test
and
(bad)
dec
jl
xchg
pop
mov
sar
repnz
and
ins
(bad)
retf
hlt
cmp
movs
popa
pop
inc
aas
xor
bnd
pop
cld
push
sub
retf
popf
jbe
nop
std
and
pushf
mov
sbb
mov
int3
or
xchg
or
dec
jecxz
ss
outs
into
arpl
xchg
adc
sbb
xor
aaa
inc
(bad)
nop
mov
mov
mov
mov
aam
movs
js
cli
in
pop
pop
inc
add
sub
lods
rol
pusha
sbb
retf
or
mov
into
(bad)
movs
adc
lds
popf
movs
popf
call
mov
shl
test
jecxz
or
test
inc
or
aas
ins
jae
aaa
movs
das
jg
inc
jmp
jg
js
dec
push
sbb
push
adc
(bad)
mov
push
dec
xor
(bad)
cmp
xor
cli
sti
dec
sbb
stc
sub
test
test
in
pop
ret
arpl
jge
(bad)
out
mov
ret
jo
out
mov
add
ret
(bad)
add
inc
add
xchg
pop
jl
sbb
push
sti
xchg
into
push
adc
shl
inc
push
pop
mov
push
jo
shl
push
cli
popf
jo
sbb
inc
mov
push
mov
dec
add
dec
test
loopne
loope
pop
mov
jecxz
xchg
lods
jbe
pop
ss
data16
mov
cwde
cmp
pop
aam
add
mov
pusha
int3
inc
pop
lods
mov
adc
mov
xor
xchg
stc
cmps
or
stos
das
add
mov
mov
xchg
cli
mov
xor
call
sub
mov
(bad)
popa
jge
rcl
mov
pop
lock
mov
loope
retf
jmp
mov
shl
sahf
or
mov
push
jmp
push
push
inc
jns
movs
(bad)
xor
mov
jp
ret
sbb
out
cmp
and
js
xor
sti
mov
mov
ret
mov
or
call
stos
mov
fs
mov
xchg
outs
cmp
sub
xor
pop
lods
pop
repnz
sub
mov
push
adc
movs
imul
and
mov
push
mov
adc
arpl
je
mov
cmps
out
nop
shl
pushf
mov
sbb
jns
fs
das
sahf
jmp
mov
jae
xchg
ret
adc
test
fisubr
sub
rcl
push
retf
test
dec
retf
lods
shr
inc
pop
jmp
mov
pop
xor
jns
mov
adc
repnz
jg
mov
add
out
jg
ins
ss
xor
cld
sub
fisubr
mov
loop
push
ja
aam
push
pop
mov
jno
and
leave
ins
push
mov
cmp
sub
jecxz
scas
ins
je
push
mov
shl
dec
fisub
lea
std
mov
xchg
push
sbb
int
bound
iret
jae
scas
scas
(bad)
adc
outs
pop
inc
loop
lock
fstp
add
push
repz
stos
dec
ins
rol
fst
mov
fmul
jo
sub
lock
popa
mov
or
dec
mov
sbb
mov
xchg
faddp
daa
xor
inc
iret
pop
inc
xor
int3
out
cwde
call
imul
arpl
add
mov
in
aaa
xchg
pushf
rol
shl
fld
shr
fmul
inc
cmc
mov
pop
and
movs
pop
scas
inc
test
pushf
add
adc
jge
clc
xor
out
sbb
pop
fstp
int
adc
lods
mov
test
js
outs
cmc
sahf
sbb
jg
sbb
inc
cmp
icebp
nop
jne
jbe
mov
inc
jno
das
dec
mov
xor
dec
mul
adc
push
imul
jnp
xlat
enter
and
mov
inc
bound
in
dec
sbb
fwait
(bad)
push
add
and
repnz
jae
mov
cdq
add
cli
loope
push
mov
cmp
adc
(bad)
data16
mov
add
dec
call
sub
ds
loop
ja
push
fwait
(bad)
enter
sbb
data16
jecxz
lods
clc
mov
(bad)
leave
(bad)
push
or
xchg
fst
leave
test
sub
pop
add
scas
les
jge
idiv
add
stos
add
add
mov
jns
popa
pop
jmp
das
(bad)
and
stos
test
test
into
cdq
pop
or
sbb
sub
xor
movs
sub
jne
adc
pop
pop
int3
mov
jnp
mov
mov
mov
dec
and
clc
ja
fstp
jb
call
fbld
dec
adc
lods
mov
or
or
dec
or
adc
shl
out
je
sub
push
gs
fist
fld
add
adc
push
xchg
xchg
fsubr
inc
cmp
push
mov
push
fwait
ret
fs
pop
jbe
stc
lods
in
jmp
loope
mov
cld
ins
sahf
sbb
push
or
daa
outs
rol
xchg
fldcw
lahf
rol
inc
shl
push
or
add
sbb
push
sbb
mov
cmp
popa
out
sbb
adc
clc
cdq
sbb
and
pop
mov
or
jecxz
pop
mov
jle
hlt
adc
add
mov
sub
adc
fisubr
xor
lock
mov
mov
cld
dec
aad
inc
cmps
cld
dec
lods
mov
mov
sub
jmp
cwde
(bad)
mov
and
call
push
adc
in
mov
add
(bad)
jb
xchg
dec
imul
movs
retf
mov
test
push
mov
dec
cwde
or
dec
cmc
push
rcr
mov
xchg
lahf
mov
lock
fcmovnu
iret
and
jecxz
loop
push
and
dec
push
call
ins
retf
xchg
nop
inc
ret
add
add
inc
pop
les
in
dec
scas
push
in
popa
mov
or
mov
ss
mov
neg
rol
adc
adc
mov
rcl
lods
mov
pop
shl
ds
push
cmp
gs
les
mov
mov
into
jb
xchg
ja
shl
movs
or
sahf
xchg
mov
jmp
mov
pop
int3
cli
xchg
sub
push
inc
mov
mov
or
sub
pop
mov
imul
xchg
sub
cmc
pushf
xor
dec
jmp
cmp
or
push
cmp
loope
inc
sbb
in
dec
test
retf
test
outs
arpl
lds
mov
push
pop
xor
stos
xor
jp
push
xor
xchg
popa
mov
pop
js
(bad)
cmps
push
cmps
xchg
push
mov
movs
sti
int3
(bad)
in
mov
cmps
pop
mov
jmp
pop
add
fmul
push
sub
mov
bound
test
or
add
call
dec
mov
les
xchg
pusha
test
fcom
test
sub
fisttp
adc
sahf
cmp
cli
popa
xor
inc
icebp
jae
sub
mov
pop
jmp
retf
push
xchg
(bad)
retf
adc
dec
xchg
pop
jns
dec
mov
push
or
test
dec
shl
cdq
dec
jp
aad
mov
fild
bound
jg
push
into
pop
fwait
jbe
jg
js
in
pop
cmp
pop
int
cmp
shl
out
in
inc
sbb
xor
stc
or
add
jl
test
mov
les
clc
pop
dec
out
cwde
jns
aam
jo
xchg
pop
pop
pop
scas
mov
fldenv
push
push
movs
ja
aaa
sub
out
jne
bnd
enter
sbb
pop
daa
xor
and
jnp
add
data16
je
add
inc
out
test
cdq
push
and
rol
cmps
add
mov
es
mov
leave
push
jns
dec
sahf
call
not
adc
sbb
xchg
cwde
mov
jge
adc
push
mov
xlat
adc
lods
lea
out
mov
push
test
bswap
add
repz
xor
ins
or
mov
dec
loope
popf
jmp
retf
rcl
aaa
cmp
sub
fisub
xchg
pop
sbb
les
test
sbb
movaps
mov
mov
or
pop
mov
in
xchg
mov
inc
dec
ficom
xchg
ret
or
xchg
test
or
jae
push
pushf
add
mov
retf
out
push
call
pop
mov
cmp
mov
push
enter
inc
mov
cmp
and
dec
std
imul
test
mov
mov
lahf
outs
push
mov
aam
stos
mov
dec
scas
mov
push
(bad)
fidivr
push
fsubr
lahf
cmp
sub
xor
mov
mov
iret
add
repnz
test
xor
ja
(bad)
pop
xor
das
and
push
inc
fstp
dec
jb
and
adc
aam
cmc
mov
cmp
pop
mov
fld
adc
(bad)
aaa
sbb
jmp
pop
call
adc
ret
retf
mov
lock
push
fwait
out
jge
repz
and
retf
fldenv
fsubr
sub
(bad)
pop
mov
or
jg
in
fwait
xor
jae
fs
les
sbb
mov
sbb
mov
cmp
push
jmp
pop
(bad)
popa
cmps
js
mov
test
push
mov
sub
pop
into
imul
dec
pop
leave
adc
inc
loope
fsub
or
sub
(bad)
or
sbb
rcl
sar
cmp
push
in
clc
popa
cmp
aad
and
aaa
mov
xchg
fbstp
cmp
jg
jns
ins
xor
pop
lods
inc
(bad)
add
in
mov
(bad)
sub
aad
adc
push
or
mov
sub
cmp
pop
stc
ret
dec
or
sbb
xchg
cmps
push
test
test
and
sub
xchg
rcl
sbb
sbb
fnsave
jae
dec
loopne
lods
in
es
pop
repz
and
sub
in
xchg
stos
cmp
aad
rcl
cmps
ins
xchg
jmp
or
cmps
in
lods
shr
xor
adc
push
dec
inc
aas
and
out
daa
sbb
arpl
mov
and
aas
aad
ds
stos
and
ja
pop
push
sub
push
sub
adc
push
jle
pusha
xor
ins
jge
popa
pop
mov
xchg
adc
hlt
mov
fcomp
int
push
ins
add
adc
jl
xlat
aam
into
out
inc
lds
stos
inc
xchg
xor
ss
leave
ja
std
outs
repz
add
push
icebp
(bad)
ja
retf
fistp
sub
popa
(bad)
jmp
mov
mov
iret
add
sbb
and
das
mov
pop
mov
add
pusha
es
sub
mov
ret
dec
push
mov
scas
imul
retf
mov
adc
push
aad
xor
ds
push
popf
mov
sar
aad
mov
mov
outs
push
ins
retf
or
mov
cli
or
sahf
loope
sub
dec
xor
out
repz
cli
cs
stc
sbb
cmc
mov
jg
repz
jl
dec
sahf
fcom
fmul
fisubr
popf
cmp
dec
xchg
xchg
sbb
(bad)
fistp
jns
imul
fld
mov
mov
rcr
jb
pop
out
aad
sbb
jnp
lods
xchg
lea
mov
clc
add
mov
xor
cmp
or
cs
or
(bad)
or
adc
xor
adc
lea
ja
dec
pop
loopne
sbb
out
xchg
loope
dec
mov
jle
test
lds
shl
movhps
adc
popa
xor
cmps
and
movs
jae
loop
ret
sub
jnp
adc
fstp
mov
jle
sub
or
mov
je
in
cmp
jo
xor
iret
(bad)
out
inc
cmc
mov
daa
adc
sub
les
sub
imul
jmp
mov
mov
cmp
xchg
jo
pop
mov
jle
bound
push
shl
aaa
test
sub
or
inc
call
jb
mov
out
cmp
or
addr16
fcmovu
jnp
sub
retfw
or
mov
ret
inc
sub
xchg
not
sbb
xor
ins
out
call
dec
clc
(bad)
(bad)
mov
shl
mov
sbb
add
sbb
pusha
hlt
movs
stos
or
mov
add
jo
cmp
ror
xchg
xchg
mov
je
sbb
pop
mov
mov
stc
sub
and
cdq
pushf
cmp
fimul
popf
outs
or
addr16
jecxz
in
mov
push
push
test
pop
and
movs
stos
cmp
out
or
pop
ins
add
in
add
mov
mov
mov
fs
fucomip
sahf
cmp
fimul
(bad)
cmp
mov
jo
jno
enter
mov
outs
out
fldenv
xlat
jge
sub
pushw
push
popf
xlat
fldenv
add
in
fstp
inc
in
xchg
lods
inc
xor
push
xchg
into
xor
cmc
rdmsr
ficom
dec
push
or
jne
(bad)
fwait
cmp
loop
pop
bound
xor
cmp
dec
loope
dec
lds
adc
adc
pop
push
sbb
add
push
push
cmc
add
clc
jl
mov
nop
fst
lds
loope
mov
dec
lds
mov
fst
xchg
repnz
push
xchg
mov
call
push
xor
daa
rcr
repz
sahf
mov
nop
sahf
push
jae
rcr
jne
int
mov
adc
cmp
out
loop
push
xlat
jmp
xchg
mov
test
sbb
nop
sbb
loop
push
dec
mov
std
sub
mov
lods
mov
inc
jmp
(bad)
sub
(bad)
add
pop
cmps
xor
cmps
jge
out
jg
idiv
or
(bad)
aas
bound
inc
mov
pop
retf
xlat
jno
sti
push
fmul
mov
or
mov
cmps
(bad)
adc
(bad)
inc
push
push
jnp
push
jecxz
inc
mov
pop
jo
push
ins
popf
(bad)
repnz
ins
mov
aad
push
repnz
jge
cld
push
add
and
mov
scas
lods
jmp
xchg
dec
xchg
fdivr
adc
inc
mov
call
arpl
xchg
inc
rcl
(bad)
outs
xchg
mov
jmp
mov
test
and
cdq
mov
adc
movs
or
cmc
push
sub
stos
sahf
pushf
mov
out
out
rcl
cmp
clc
loope
call
(bad)
div
mov
fnstcw
(bad)
dec
std
fnstenv
sar
in
mov
xchg
rcr
cmp
clc
cmp
sbb
bound
sbb
pop
aaa
or
std
stos
stos
pop
sahf
xchg
sub
jmp
neg
nop
and
mov
and
sbb
retf
inc
in
inc
jg
adc
adc
mov
(bad)
sub
push
mov
pushf
mov
pop
fdiv
push
mov
jmp
adc
arpl
and
aaa
sub
hlt
popf
lea
mov
dec
pop
pop
cmp
xlat
ja
(bad)
test
mov
pop
mov
shl
and
out
and
dec
dec
leave
test
mov
jae
scas
inc
jb
test
fs
cmps
add
aaa
in
xchg
test
in
int3
fcomp
and
inc
call
imul
push
cdq
or
pop
sub
xchg
push
add
aaa
add
fwait
movs
dec
cmp
pop
fisubr
xchg
cmps
mov
int
(bad)
test
inc
jecxz
aad
push
into
sub
mov
aas
mov
add
xor
imul
add
(bad)
mov
xor
imul
xlat
aad
and
fist
adc
mov
pop
(bad)
hlt
inc
mov
ins
ins
cmp
xchg
retf
push
pop
shr
jne
sub
(bad)
push
fwait
sti
add
out
lods
outs
call
pop
and
adc
mov
shl
rcr
es
xor
lds
ds
sbb
les
loopne
inc
sti
fs
sub
dec
je
fisttp
fnstsw
sbb
xchg
pushf
cmps
mov
mov
lods
inc
or
add
jmp
mov
jnp
xor
arpl
xchg
lds
dec
mov
ja
neg
add
mov
jne
(bad)
or
inc
jmp
cld
into
jg
stc
call
scas
jns
push
cwde
cld
lods
add
dec
xor
stos
ja
retf
loope
adc
stos
xchg
xchg
push
outs
and
out
movs
pop
jge
jae
inc
fwait
xchg
sub
(bad)
idiv
adc
loopne
or
xchg
inc
aam
mov
div
xor
dec
add
sbb
je
mov
sti
enter
test
jnp
fiadd
jg
lods
js
dec
or
and
add
aam
xchg
cmps
mov
mov
jl
mov
pop
js
mov
in
rcl
push
rol
ss
test
and
xchg
inc
xchg
mov
mov
int3
cmp
loop
fild
fiadd
sub
sbb
cld
stc
or
jecxz
xchg
add
movs
add
xchg
push
bound
int3
jns
sub
popa
pop
ret
xchg
mov
sub
pop
std
jmp
mov
jne
fdiv
test
sub
inc
xor
out
mov
or
push
arpl
dec
mov
sub
scas
into
call
mov
dec
pop
mov
sbb
or
out
mov
cli
jl
push
mov
hlt
fsub
xor
fdivr
sub
jecxz
cmp
xor
aas
movs
adc
push
push
adc
pop
inc
mov
mov
dec
adc
sub
sub
xchg
leave
and
inc
sbb
das
push
(bad)
jbe
or
test
aad
mov
jnp
dec
pusha
mov
add
test
inc
sbb
es
idiv
cdq
xchg
xchg
out
out
pop
xlat
push
das
xchg
sbb
mov
movs
mov
fsubr
call
pushf
xlat
aaa
sti
les
xlat
movs
xchg
mov
fdivr
in
into
hlt
test
aad
(bad)
in
adc
jb
test
mov
pop
mov
mov
jns
inc
jecxz
mov
cmps
cmp
inc
fs
iret
pop
cld
push
and
test
cmps
aaa
hlt
mov
xchg
mov
cmp
iret
jg
out
fisttp
pop
fidivr
mov
leave
neg
add
mov
xor
push
das
dec
cmps
(bad)
mov
shl
sbb
fwait
dec
out
mov
lahf
(bad)
or
dec
out
test
mov
inc
sub
mov
sbb
xchg
or
retf
inc
mov
xchg
(bad)
adc
cmps
push
xchg
push
out
popa
pop
inc
loopne
enter
mov
push
sbb
retf
jge
or
fs
test
and
sub
cmp
fist
repz
jmp
sub
or
(bad)
ds
mov
ins
jge
in
mov
gs
repz
es
push
push
stos
test
test
out
retf
adc
dec
rcr
jns
sar
test
retf
adc
jbe
inc
inc
mov
out
stc
lods
sub
aam
shl
popf
sbb
inc
xchg
mov
cdq
in
shr
mov
mov
mov
xor
jmp
test
push
adc
and
mov
and
push
push
mov
push
out
dec
sub
cmp
sub
pop
jns
mov
push
fimul
lea
and
cdq
sar
mov
popf
mov
test
mov
mov
arpl
pop
adc
jb
in
inc
adc
mov
add
push
shl
in
rcl
out
adc
xchg
sbb
jl
ja
js
mov
inc
mov
not
enter
ror
inc
imul
loope
ins
pop
sbb
and
nop
pop
out
addr16
jns
mov
mov
fdivrp
mov
or
repz
inc
sbb
jo
(bad)
sub
repz
xchg
dec
mov
mov
out
or
jne
push
imul
sub
cld
inc
sbb
lods
mov
add
aam
fs
sbb
pushf
(bad)
pusha
fcmove
sbb
mov
aad
sub
aaa
pop
mov
and
mov
or
in
sbb
aas
mov
imul
adc
retf
cld
xor
stos
xor
push
cmp
sahf
cmp
push
pop
jl
and
lea
xchg
push
lods
lods
popa
inc
je
and
cmps
sub
(bad)
adc
aad
or
jmp
retf
xlat
ss
test
dec
faddp
and
test
cmp
and
pop
add
sub
jae
mov
mov
sbb
loope
cmp
push
mov
loop
sbb
cmp
cld
scas
pop
(bad)
int3
lahf
sub
dec
retf
cmp
dec
into
xor
jae
lods
in
xchg
hlt
push
xor
jl
and
ret
inc
mov
xchg
fidiv
and
jecxz
adc
stos
pop
repnz
scas
mov
sti
rol
cmp
gs
shl
sbb
dec
mov
(bad)
cmps
or
inc
inc
push
cmp
inc
ds
lock
push
sbb
ds
fsubp
pop
les
mov
scas
sub
aad
pop
push
cmp
das
(bad)
jae
cmp
fcom
iret
cmps
in
xor
loope
mov
stc
push
aas
inc
int3
mov
add
push
fisttp
xchg
mov
pop
mov
in
test
mov
add
jp
jmp
push
or
imul
aam
push
gs
mov
xor
push
rcr
adc
repz
sub
fcomp
test
xchg
ins
push
retf
inc
mov
cmc
int3
pop
adc
adc
xchg
mov
aas
xchg
scas
ds
fild
jmp
add
in
push
sbb
push
sbb
pop
outs
xlat
das
xchg
pop
iret
pop
mov
xor
test
std
dec
sar
mov
add
mov
mov
inc
cmps
dec
push
mov
push
mov
xlat
adc
jmp
dec
pop
pop
jne
lds
lods
jl
push
fabs
cmp
sbb
add
inc
mov
rol
cmps
loopne
cli
mov
push
xchg
(bad)
cmc
repz
cmps
xlat
add
mov
sub
xor
jbe
loop
lea
lock
jle
fsincos
mov
push
scas
dec
push
push
test
mov
(bad)
pop
xchg
loope
(bad)
fcmovb
fmul
xchg
jmp
add
icebp
lds
adc
inc
xchg
pop
(bad)
out
fbld
inc
sub
pop
xchg
xchg
stos
or
aaa
enter
xchg
repnz
repnz
inc
icebp
pop
mov
cmp
leave
fnsave
lfs
rol
cmp
and
sub
mul
fidivr
sub
mov
stos
and
inc
aam
jno
adc
sbb
(bad)
or
xor
sbb
cmp
(bad)
or
lods
outs
ret
xchg
cwde
mov
or
inc
push
adc
xchg
cmp
adc
(bad)
push
mov
pop
jnp
fisubr
pop
sbb
xor
or
aaa
mov
jmp
repnz
add
nop
das
mov
movs
mov
aaa
xor
jno
push
inc
and
dec
jbe
ds
adc
fs
mov
adc
mov
dec
xor
mov
shl
xor
add
lahf
retf
sub
pusha
retf
out
jmp
imul
outs
adc
or
and
int3
mov
std
leave
jge
pop
(bad)
jbe
int3
jge
inc
cmp
xlat
sbb
adc
xchg
jb
fild
jecxz
(bad)
ror
jbe
inc
jnp
arpl
pop
mov
and
push
add
pusha
lods
test
bound
ds
push
push
mov
adc
loop
pop
lds
push
add
(bad)
stc
or
nop
mov
ret
shl
ds
and
push
xchg
sub
mov
push
retf
sub
fild
push
imul
mov
sub
das
mov
inc
mov
sbb
mov
jbe
mov
sbb
jmp
or
adc
jmp
push
scas
leave
xchg
xchg
(bad)
xchg
sbb
pop
mov
jb
or
mov
and
sbb
data16
pushf
pop
add
mov
fsubr
(bad)
or
dec
push
add
pop
lahf
jp
mov
xlat
xrelease
pushf
pop
xor
mov
(bad)
push
out
setno
xchg
jecxz
sbb
push
mov
(bad)
push
int3
or
ins
adc
inc
jnp
or
es
mov
out
mov
xchg
fcomi
fnstsw
out
xor
and
xchg
std
sub
cmp
push
mov
stos
dec
ds
push
add
adc
mov
jg
pusha
push
lddqu
mov
adc
push
(bad)
xor
lock
mov
es
rcl
in
or
scas
push
nop
or
adc
cdq
add
hlt
mov
add
and
mov
sbb
cdq
mul
clc
cmp
pop
bswap
sar
mov
(bad)
out
into
push
jp
aad
ret
test
into
call
ins
(bad)
xchg
sbb
jno
or
je
or
jmp
cmp
mov
or
std
sub
test
push
jmp
loope
clc
test
xor
push
cs
xor
add
dec
add
jg
push
fs
out
adc
xchg
in
shl
add
ss
mov
pop
ret
int3
jns
cs
sahf
mov
sbb
sub
jl
jbe
ins
mov
add
int
adc
adc
popf
xchg
ret
movs
imul
pop
push
push
jbe
xlat
inc
cdq
mov
and
mov
out
cmp
shr
jb
or
mov
sub
stos
lahf
push
ins
mov
push
das
xor
mov
fld
xchg
pop
jmp
(bad)
pop
xor
push
mov
cwde
inc
imul
mov
adc
mov
in
jmp
or
icebp
jne
enter
aam
push
(bad)
push
sar
pop
out
cmp
mov
jmp
(bad)
getsec
inc
retf
mov
add
movs
dec
jmp
dec
in
pop
xchg
xrelease
daa
xor
dec
dec
cmps
xlat
push
mov
push
xor
outs
xchg
movs
inc
fwait
std
add
movs
push
add
shr
neg
cmp
in
pop
jnp
call
jns
cmps
dec
sub
jae
out
movs
mov
sbb
pop
addr16
in
cs
xor
push
mov
stos
push
lock
xchg
inc
cmc
out
(bad)
test
or
dec
nop
lahf
dec
daa
ror
into
ds
retf
xor
fsub
or
push
fldcw
lea
ret
inc
loopne
je
sub
cmp
inc
das
nop
jne
test
data16
out
frstor
pop
mov
es
out
sbb
fmul
(bad)
sti
add
prefetchw
add
cmp
jnp
push
and
lods
mov
or
push
in
inc
mov
and
cmps
mov
cld
stos
ins
sar
cwde
push
or
pushf
pop
add
xchg
data16
mov
sub
dec
mov
lock
jbe
xor
xor
pop
adc
cmps
mov
sub
icebp
push
mov
mov
shl
mov
add
cmp
jmp
(bad)
adc
cmp
or
leave
or
sar
pop
dec
push
xchg
fs
retf
retf
adc
shr
fisttp
std
jnp
cmps
push
mov
pusha
mov
(bad)
mov
and
jnp
pop
(bad)
cwde
test
xor
mov
out
dec
push
cli
add
fst
xor
fiadd
mov
aaa
add
imul
or
test
int3
scas
gs
retf
and
out
stos
and
jmp
and
xor
adc
push
in
add
xchg
sbb
add
and
push
sub
sub
fwait
mov
in
or
mov
jmp
xor
inc
sar
dec
adc
fimul
(bad)
mov
test
loop
jg
lods
pop
(bad)
std
dec
std
mov
inc
mov
aad
add
xor
adc
xor
les
adc
sbb
jne
in
addr16
sbb
sub
push
cdq
adc
leave
stos
cmp
jb
js
xchg
sbb
ret
cmps
xchg
loopne
jmp
or
cld
hlt
fld
jecxz
sbb
mov
das
mov
add
(bad)
xor
sub
imul
call
adc
jo
adc
aam
call
sub
int3
sbb
cmp
aad
es
adc
jle
fisub
out
cmps
pop
lock
xchg
pusha
or
sbb
lods
inc
jmp
sbb
mov
sub
addr16
xchg
shr
xor
or
sti
pop
retf
jmp
sub
mov
xchg
add
push
pop
jle
push
fistp
jae
std
hlt
out
sbb
pop
inc
mov
hlt
or
mov
adc
xor
pcmpeqb
outs
dec
fs
inc
mov
jno
sar
and
ret
aaa
cmp
mov
jnp
stos
lods
mov
cmc
adc
(bad)
(bad)
xor
sbb
cmp
add
push
aas
mov
push
or
stos
aad
mov
xchg
jg
pop
pop
cmc
add
nop
push
movs
stc
pop
(bad)
cmp
push
adc
xor
push
inc
popa
add
bound
std
fidiv
aas
lods
cli
inc
pop
js
aas
nop
mov
hlt
ss
ror
pusha
dec
je
fst
xchg
adc
mov
sub
sub
xor
pop
xlat
cmc
ins
sub
ret
xor
out
cmovl
pop
push
(bad)
xchg
mov
je
ror
ret
add
rcr
scas
aam
into
push
sbb
loope
inc
dec
mov
adc
dec
out
adc
xor
shl
dec
test
mov
enter
and
xor
inc
js
mov
mov
cmp
or
or
or
sbb
ds
push
adc
repz
pop
int3
cmp
push
iret
inc
jg
ret
or
cs
fimul
shr
out
sub
add
scas
loope
data16
and
ja
mov
mov
mov
cli
jecxz
dec
pop
mov
les
jmp
mov
xor
jbe
jo
retf
xchg
lock
push
mov
inc
data16
jle
lods
and
jnp
cmp
inc
loopne
mov
sub
jle
add
mov
cmps
jmp
add
in
xor
imul
ror
sbb
enter
popa
or
repz
ret
lea
mov
adc
ret
hlt
ins
push
and
repz
aas
mov
cs
fldln2
cmps
sbb
xchg
adc
mov
mov
data16
movs
(bad)
mov
or
dec
(bad)
imul
neg
inc
je
mov
sub
jp
dec
sar
adc
leave
jg
fbstp
icebp
ffreep
inc
pop
mov
jmp
push
lods
mov
scas
pushf
ins
xchg
xor
sub
dec
fdiv
push
or
cmc
adc
sar
mov
pusha
jno
mov
adc
hlt
into
rcl
pop
(bad)
sbb
and
or
sub
mov
stc
loope
enter
js
adc
in
mov
in
outs
loop
add
rcr
push
push
and
cmp
popf
dec
aad
outs
inc
dec
add
cli
add
mov
pop
hlt
das
push
dec
fistp
lds
mov
mov
fcmove
fcom
idiv
inc
push
mov
nop
xchg
add
movs
pop
push
inc
sbb
pop
movs
and
inc
jae
push
mov
xor
mov
mov
fnstenv
aam
cmp
add
adc
push
dec
test
or
pop
sub
ja
fldenv
push
aam
aas
jl
sahf
into
popa
pop
mov
idiv
movs
sar
mov
data16
(bad)
sbb
xor
out
mov
scas
bound
xor
and
dec
mov
sub
lock
rcl
mov
lock
scas
ficom
mov
mov
pusha
pop
call
(bad)
fidiv
jg
not
ret
jo
(bad)
int3
xchg
add
aad
int3
or
xchg
jne
mov
stos
jecxz
das
test
mov
test
sub
adc
sub
cmp
in
mov
rol
(bad)
loopne
mov
add
into
jmp
or
out
gs
dec
pop
pop
xor
push
sbb
ret
jg
xor
cmp
fbld
shl
ds
aad
mov
jbe
jge
dec
mov
mov
push
mov
mov
jnp
mov
pop
adc
das
inc
pop
sbb
sbb
mov
test
ror
retf
mov
mov
mov
mov
(bad)
sti
add
fiadd
mov
adc
(bad)
fistp
call
std
jle
mov
xchg
fdiv
push
mov
test
imul
ins
push
int
dec
in
jnp
ja
(bad)
test
and
aad
hlt
aad
inc
jmp
in
or
es
cmp
scas
or
xor
push
out
sub
fadd
leave
and
std
je
dec
neg
fidiv
retf
sub
mov
das
fwait
xchg
mov
sar
aaa
and
push
xlat
xchg
xchg
mov
cmp
div
mov
ins
ret
out
mov
sahf
mov
add
test
mov
mov
pop
adc
add
add
pop
test
adc
inc
test
lock
idiv
or
lea
mov
push
pop
in
fnstsw
mov
lea
aas
xchg
mov
jb
iret
pop
sub
sti
cmp
in
pop
cld
arpl
mov
js
js
cmp
popf
int
in
sbb
in
das
(bad)
mov
in
lods
push
lock
push
pop
mov
loopne
iret
gs
mov
retf
ins
inc
icebp
sahf
sbb
pop
cmp
(bad)
in
mov
icebp
pop
aad
aaa
les
xor
add
adc
test
or
mov
inc
stos
in
(bad)
sub
add
movs
dec
fbstp
cmc
adc
ficomp
mov
clc
mov
std
push
cdq
in
jb
push
lea
fdivr
lods
add
ins
mov
adc
push
mov
in
add
mov
call
daa
ret
xchg
xor
(bad)
test
fisttp
xor
xor
cmps
adc
mov
or
outs
and
(bad)
loop
js
xlat
inc
xor
imul
push
lods
pop
dec
mov
push
popa
fistp
call
xchg
push
in
and
cwde
xor
jle
imul
rol
mov
mov
jp
les
shl
(bad)
jge
pop
mov
(bad)
sti
ins
mov
iret
add
mov
ja
sub
cmp
or
sbb
aam
pop
das
mov
faddp
xchg
mov
cwde
sub
mov
jle
mov
rcl
dec
add
cmp
and
mov
outs
push
xchg
sub
daa
xor
add
(bad)
loopne
cmp
out
in
gs
add
adc
pop
call
(bad)
out
test
sar
aam
dec
add
cld
dec
cmp
cmps
xor
adc
aam
add
sbb
jno
mov
in
and
jecxz
or
sub
mov
test
loope
fwait
ins
neg
fcom
inc
inc
sbb
adc
cmp
popa
dec
jg
lods
mov
cmp
inc
sbb
clc
stc
dec
jnp
into
call
cmps
repnz
push
xchg
xchg
ret
cmp
imul
addr16
clc
dec
shr
js
repnz
cmp
sbb
int
sub
mov
jbe
xchg
imul
cmp
mov
mov
pop
xor
pop
rcr
or
and
mov
je
pop
cs
mov
inc
out
fbld
in
(bad)
outs
push
mov
call
sub
sub
mov
dec
loopne
sbb
addr16
or
cmps
fisub
rol
pop
fst
je
fs
fimul
xchg
jnp
out
mov
scas
inc
jne
push
fcom
sbb
test
xchg
in
not
cmp
add
push
xchg
inc
or
int3
cmp
movs
xor
out
pop
add
inc
mov
int3
jle
outs
push
mov
or
push
jns
sbb
imul
adc
cmps
sub
dec
das
test
pop
xchg
sub
jnp
bound
shr
xor
repnz
mov
les
(bad)
push
aad
aad
call
jle
xor
sbb
or
ret
fmul
sti
or
leave
fild
jle
outs
xchg
adc
fist
mov
aas
in
lahf
push
lock
enter
ins
xchg
dec
fild
popf
xor
dec
and
sub
sub
stos
sub
or
rol
out
outs
push
xor
mov
repz
imul
sbb
or
pinsrw
retf
sub
mov
rcr
push
iret
push
sahf
cmp
mov
pop
xor
push
jle
jmp
push
inc
scas
mov
int3
push
adc
ret
and
xor
jmp
mov
cmp
repz
add
retf
sub
xchg
mov
repnz
in
stos
dec
(bad)
fs
out
mov
in
and
mov
push
lods
cmc
test
add
sar
out
jge
sbb
or
in
rol
xchg
div
sbb
mov
mov
xor
sub
cmps
sbb
shl
sar
dec
or
adc
(bad)
into
arpl
add
dec
rcr
imul
lods
retf
cmp
das
loope
inc
nop
xor
cmps
popa
outs
pop
adc
xor
fnsetpm(287
sub
icebp
and
mov
add
sar
jbe
xchg
or
js
pop
dec
cmp
cmps
in
popa
xlat
lds
add
cmp
inc
les
and
adc
nop
pop
pop
fwait
mov
addr16
mov
mov
and
jns
out
push
into
dec
inc
mov
jg
cmp
cmps
xchg
das
and
pop
sar
push
mov
test
mov
outs
or
retf
jnp
mov
xchg
in
lds
and
mov
arpl
in
dec
inc
gs
dec
int
mov
xor
das
push
call
dec
in
mov
daa
mov
jno
jg
pop
ja
loop
push
inc
xchg
mov
dec
adc
(bad)
in
(bad)
xchg
les
push
retf
ins
retf
fs
dec
or
cmp
pop
into
sbb
loope
xor
pop
inc
loope
fistp
ja
dec
out
aam
mov
out
or
icebp
lods
sub
enter
push
pop
and
fwait
das
out
dec
cdq
pop
lea
out
sbb
mov
mov
xor
shl
fs
dec
imul
call
mov
push
das
xchg
xor
pusha
jle
sar
mov
ss
scas
pop
sahf
mov
popf
adc
or
cld
mov
xlat
adc
ss
call
push
mov
sub
and
test
push
int
es
test
or
jl
out
lahf
xor
ret
cli
sub
sbb
in
push
inc
int3
and
xor
retf
(bad)
(bad)
scas
pop
adc
test
rol
rcl
stc
pop
mov
rcr
mov
cwde
jo
repz
xchg
adc
push
jl
jl
out
push
pop
data16
mov
sub
(bad)
int3
std
xlat
mov
push
xchg
cmps
sbb
push
xor
aam
hlt
and
dec
inc
fidiv
in
in
repnz
mov
loope
pusha
mov
or
fld
inc
or
leave
loope
scas
jge
pop
xchg
(bad)
into
jb
ins
rcl
movs
sub
jle
cld
fsubr
repnz
(bad)
xchg
dec
nop
jne
(bad)
wbinvd
test
mov
xchg
dec
std
mov
add
and
push
movs
mov
inc
push
iret
test
sub
cmp
jne
in
sub
sbb
dec
mov
dec
fstp
xor
retf
popf
fdivr
push
cwde
bnd
std
and
aad
mov
into
int
test
pusha
xchg
icebp
das
cmp
pop
adc
arpl
jne
xor
aaa
push
or
xor
mov
test
mov
loope
retf
jnp
pusha
lods
dec
lods
lods
repnz
inc
in
sub
inc
loope
shl
mov
stos
mov
sbb
retf
xchg
jmp
popa
pop
lods
idiv
or
fimul
sbb
stc
push
sub
ret
adc
cwde
xlat
test
sub
pop
ret
sbb
add
lods
shr
add
sub
scas
daa
fist
std
cmp
and
dec
pop
outs
lahf
cwde
(bad)
and
mov
mov
int3
push
and
(bad)
mov
pop
push
mov
sub
pop
dec
nop
dec
adc
xlat
push
shl
(bad)
imul
push
jle
ss
pop
(bad)
inc
push
jge
aad
out
int3
ins
arpl
ret
scas
pop
push
inc
fwait
int
xchg
inc
jmp
ins
stos
test
les
jmp
dec
pop
mov
pop
cmp
test
xor
xlat
cmc
cmp
jmp
stos
sbb
and
xchg
ror
shl
push
pop
mov
xchg
popa
or
rol
sub
test
mov
push
mov
mov
dec
repz
jo
nop
sbb
outs
es
mov
push
sub
sbb
xlat
cmp
mov
add
mov
xor
sbb
les
mov
(bad)
cwde
jno
aam
jecxz
ret
lea
stos
jae
and
nop
xchg
popa
(bad)
test
in
jmp
iret
out
leave
xchg
data16
adc
xchg
xchg
js
mov
mov
push
sbb
in
mov
lock
cmc
call
lds
rol
and
mov
mov
push
jne
push
inc
test
xchg
nop
gs
mov
adc
(bad)
imul
xor
sbb
dec
xor
imul
lahf
aas
rcr
retf
ficom
cs
jp
mov
or
in
loope
inc
xchg
cwde
cmp
fmulp
or
mov
pop
(bad)
jmp
xchg
sahf
jno
dec
jb
shl
jmp
lods
mov
xor
add
mov
addr16
loop
and
jle
cmps
shl
in
dec
icebp
xor
movs
push
push
addr16
mov
jecxz
mov
push
jle
mov
out
(bad)
jg
dec
jne
pop
xchg
adc
jle
pop
outs
inc
jns
jmp
add
cmps
xor
pop
mov
shl
clc
cmc
loopne
xchg
inc
xchg
popa
mov
shr
cmps
fdiv
or
fucomi
sbb
mov
aam
inc
add
push
cdq
cld
mov
cmp
pop
ds
std
add
and
add
add
jno
cmp
push
cdq
push
pop
pop
pop
hlt
shl
in
mov
mov
add
sahf
push
fs
mov
xlat
push
cmp
hlt
jg
or
mov
mov
jo
dec
cmp
dec
retf
iret
cmp
movs
inc
push
fidiv
jmp
cmc
cmc
push
out
sti
test
shl
sbb
jp
in
mov
jecxz
andps
and
mov
ror
xor
push
push
cmp
jbe
inc
push
bound
imul
sbb
xchg
sub
mov
mov
sub
add
shl
int3
sbb
std
mov
fbstp
jmp
or
sub
cdq
dec
sbb
dec
jnp
lods
test
adc
add
adc
jge
mov
retf
imul
(bad)
scas
mov
sub
cdq
push
push
push
add
mov
xchg
popf
outs
cli
xor
pop
xchg
xchg
jmp
sub
pop
xchg
(bad)
cs
sub
scas
or
cmp
popf
pusha
repz
repnz
dec
pop
inc
aaa
add
mov
mov
sbb
mov
mov
sub
es
xchg
dec
cmp
bnd
pop
sbb
retf
iret
jbe
sbb
mov
or
cdq
mov
jbe
push
inc
inc
pop
mov
cs
mov
xchg
xchg
cld
ds
cli
nop
test
mov
cld
pop
lods
jae
int3
ins
js
in
dec
and
imul
push
repnz
fimul
push
adc
mov
in
xor
and
fidiv
adc
push
mov
dec
dec
mov
lods
ss
mov
shl
sbb
addr16
js
dec
add
adc
ins
call
jns
mul
cmp
xlat
adc
adc
ins
jbe
movs
jbe
cmp
jbe
imul
push
vshufps
stos
xlat
push
push
xor
push
mov
or
or
inc
fld
out
jle
jg
out
xchg
leave
jge
clc
cmp
shl
into
bound
retf
inc
adc
cmps
xor
(bad)
jo
push
push
sar
shr
cmp
cmp
xchg
pop
sub
inc
loope
pop
je
mov
repz
adc
test
test
ror
adc
fs
lods
lods
pusha
sub
(bad)
retf
jnp
mov
iret
xchg
cmps
(bad)
int
xchg
adc
sbb
es
cli
inc
int3
adc
fwait
(bad)
xor
sahf
mov
push
mov
jg
push
ds
ds
mov
(bad)
(bad)
cmp
sbb
sbb
bound
jg
bound
inc
and
dec
add
hlt
cmp
lea
add
mov
push
loop
addr16
loopne
movs
icebp
int3
imul
int
sbb
adc
jl
push
mov
adc
(bad)
mov
aam
aaa
mov
add
push
aad
aas
setno
cli
pop
lods
cmp
xchg
daa
jno
dec
inc
sbb
xor
ja
rcl
cwde
stos
inc
sub
mov
(bad)
xor
std
or
add
sub
out
and
inc
aad
mov
dec
ss
cmps
add
ins
and
mov
jno
mov
aad
mov
mov
inc
loopne
cmc
adc
mov
mov
add
xor
js
jo
xchg
aas
pop
mov
or
gs
ja
rol
(bad)
das
pop
add
inc
stos
div
je
mov
int
jmp
sahf
ja
fwait
jecxz
push
psubb
scas
jns
sbb
pop
mov
(bad)
(bad)
scas
cmps
repz
xlat
pop
cmp
and
add
push
dec
pop
push
je
jle
push
sub
sbb
js
aam
pop
lahf
push
jnp
loopne
es
(bad)
(bad)
mov
fwait
nop
or
shl
pop
and
push
out
push
(bad)
mov
into
stos
cld
mov
or
lahf
dec
icebp
fcomip
mov
pop
adc
jge
fcom
ins
push
mov
pop
xchg
pop
popf
jns
in
push
into
int
in
syscall
adc
pop
packsswb
fwait
xor
or
aaa
repz
int
mov
es
stc
cmp
jmp
xchg
push
inc
sub
cmc
aam
lods
fdivp
sub
mov
(bad)
mov
aas
fbld
inc
ss
sbb
shr
push
nop
test
and
mov
scas
push
mov
outs
xchg
mov
sub
aam
xlat
aad
jl
dec
xchg
lods
cld
dec
loope
repnz
dec
lods
cmp
jp
sbb
out
add
lods
sahf
or
xor
inc
xor
stos
pushf
fs
(bad)
in
jno
and
xchg
pop
xchg
sub
outs
pop
mov
jo
adc
hlt
push
test
inc
sub
and
mov
push
jne
and
(bad)
das
nop
mov
and
leave
fs
xor
inc
push
xchg
adc
push
pusha
or
icebp
loop
add
sub
mov
xchg
pop
push
or
mov
push
dec
ins
ds
mov
sbb
adc
dec
stos
inc
mov
mov
loopne
xchg
ins
icebp
and
jg
outs
les
jnp
inc
(bad)
jp
jns
sub
shr
adc
push
pop
mov
aad
lods
aaa
test
daa
mov
mov
(bad)
push
inc
leave
push
clc
inc
mov
out
add
je
stc
mov
int3
gs
mov
push
(bad)
lods
fcomp
dec
jmp
(bad)
repz
shr
(bad)
xor
mov
cmp
push
mov
push
movs
or
push
add
popa
pop
enter
(bad)
push
push
xchg
push
and
(bad)
in
js
repnz
test
sti
repz
fld
mov
xor
sub
cmp
xchg
cld
cmc
retf
mov
loopne
aaa
push
xor
div
jmp
pusha
loop
test
inc
fnsave
add
pusha
test
jns
pop
mov
int
pop
or
sub
jnp
or
sub
stos
dec
iret
sbb
pop
int3
(bad)
jbe
inc
retf
inc
xor
xchg
xchg
out
fimul
mov
dec
or
out
xchg
and
mov
popa
ret
jl
add
cmp
sbb
movs
push
fidiv
push
(bad)
push
(bad)
inc
daa
cmp
dec
fucom
push
sbb
xor
in
cmp
jmp
int3
fst
stos
add
pop
fdiv
iret
aad
sub
cmp
(bad)
mov
(bad)
hlt
add
pushf
(bad)
call
or
cli
xchg
jl
mov
inc
sbb
out
mov
addr16
(bad)
cmp
push
or
jne
(bad)
jmp
idiv
rol
or
adc
fs
dec
fadd
jg
push
leave
xchg
jno
movs
pop
pop
xchg
push
inc
cmp
push
popa
inc
out
(bad)
fadd
cmp
pusha
mov
or
xlat
imul
int
jge
or
or
mov
add
jae
push
mov
stc
dec
jmp
rcr
jno
aam
jb
mov
retf
aam
leave
pop
cvttps2pi
mov
mov
jno
and
inc
and
imul
xor
xchg
push
scas
dec
pop
xchg
sbb
ins
int
clc
mov
adc
outs
jbe
sbb
sub
test
sub
test
test
mov
jp
call
mov
push
and
lock
jo
xchg
cmp
out
xchg
and
mov
jb
add
and
or
push
movs
mov
shl
mov
push
mov
cli
jae
pop
sub
aad
adc
test
pop
jp
dec
std
xor
fsub
ret
pusha
sub
ins
ins
xlat
mov
xchg
hlt
in
sub
enter
xchg
sbb
xchg
jb
sbb
jae
dec
mov
pop
(bad)
cmps
mov
mov
pop
mov
cmp
ret
loop
lea
fsubr
pop
dec
test
inc
imul
inc
stos
ret
push
test
bound
call
outs
adc
xchg
stos
call
cmps
and
cdq
addr16
neg
idiv
adc
mov
ss
or
inc
rcr
xlat
aas
mov
sub
(bad)
leave
aad
jmp
je
mov
(bad)
ror
lahf
ja
retf
(bad)
pop
(bad)
fiadd
dec
ins
jno
pop
xor
fbld
aad
pop
pop
rcl
cdq
xor
lahf
xlat
lods
into
rcl
fidivr
dec
fs
(bad)
inc
ret
sahf
icebp
jne
(bad)
ja
xchg
push
mov
and
in
ret
xor
adc
jg
scas
mov
test
dec
stos
and
(bad)
jns
jno
inc
xor
or
mov
jp
push
pop
loope
and
stc
mov
stos
retf
js
adc
movs
add
ret
mov
shl
(bad)
call
fs
(bad)
jge
lds
push
push
pop
aaa
ret
nop
fimul
jnp
mov
call
inc
lods
(bad)
dec
sub
popa
(bad)
push
loop
push
das
mov
xchg
shr
mov
int
lock
gs
int
stos
mov
ror
xchg
xchg
aad
in
sub
push
std
inc
repz
xchg
js
dec
mov
into
or
cmc
xchg
sub
fist
leave
ud0
(bad)
stc
fwait
out
adc
cmc
push
pop
sub
mul
outs
leave
retf
mov
out
dec
ins
test
fnsave
dec
mov
shl
or
ss
aad
adc
dec
outs
pusha
push
add
pop
std
in
xchg
sbb
lock
inc
(bad)
xor
ret
ret
mov
jmp
or
shr
push
je
aad
mov
mov
mov
and
lods
fwait
pusha
out
into
je
imul
scas
mov
xchg
pop
push
sub
or
retf
retf
adc
adc
mul
add
adc
leave
mov
and
aas
jecxz
hlt
retf
int
cdq
jmp
das
jmp
xor
call
in
addr16
cmps
inc
xor
push
mov
out
push
test
sbb
outs
xor
movs
lock
jle
jge
xor
push
les
sub
dec
jno
call
ins
sub
fsub
(bad)
das
ss
or
add
lea
into
fisub
cld
push
fucomi
or
xor
fcomip
mov
retf
mov
inc
addr16
(bad)
fistp
jae
aas
into
int3
mov
(bad)
nop
daa
aam
mov
dec
retf
test
gs
into
cdq
in
pop
icebp
inc
push
hlt
mov
or
xchg
mov
mov
add
(bad)
int
xor
pop
or
cs
fbstp
mov
(bad)
int3
xor
xchg
loope
dec
sbb
std
imul
mov
popa
sub
enter
fimul
jb
ret
jbe
push
pop
cmp
xchg
ficomp
or
xchg
rcr
inc
repnz
mov
icebp
jmp
adc
inc
je
paddsb
(bad)
sar
dec
in
inc
mov
and
(bad)
into
ins
inc
scas
push
xchg
pop
outs
push
ret
hlt
addr16
js
mov
push
add
sub
sbb
jb
stos
int
test
xor
jne
outs
fisubr
dec
ds
pop
std
mov
mov
xchg
shl
dec
fisubr
sbb
dec
push
push
sub
add
call
mov
movs
cmp
adc
rol
dec
jge
push
(bad)
lods
ja
mov
aam
push
scas
mov
into
xchg
addr16
sbb
adc
int3
stc
pop
lahf
jb
mov
mov
sub
adc
es
push
mov
xchg
mov
sar
ja
addr16
sbb
dec
xchg
cmps
stc
push
cmp
or
lahf
popa
add
or
fstp
rcl
scas
cmps
ret
dec
rcr
stc
cmp
ja
popa
dec
setb
aas
lahf
add
dec
in
call
pop
jle
loop
mov
(bad)
pop
jne
imul
rcl
sbb
sub
(bad)
mov
es
movs
dec
sbb
and
sti
cmc
mov
mov
popf
or
rol
in
mov
dec
pop
add
cmp
mov
sub
sub
cmp
inc
xor
imul
rcl
in
leave
into
pop
mov
movs
or
repnz
xlat
pusha
push
lock
fdiv
(bad)
mov
sub
xchg
in
mov
stos
mov
adc
enter
(bad)
xchg
lods
pusha
or
fnstsw
or
(bad)
loop
arpl
cmps
push
inc
into
je
cmp
xor
ror
add
arpl
icebp
imul
cdq
xor
sub
sbb
pop
lods
gs
mov
inc
push
div
xor
adc
popa
push
jmp
fs
pop
mov
mov
adc
lds
imul
dec
es
dec
cmp
stc
cmp
fcom
inc
daa
xor
rol
fild
adc
mov
fstp
hlt
pop
jo
mov
inc
cmps
ins
dec
cmp
mov
ins
sbb
xor
call
mov
adc
jmp
xchg
loop
jp
fsubr
adc
jmp
packsswb
(bad)
les
add
mov
jl
pop
ficom
dec
cwde
rep
outs
in
les
out
xchg
cmps
and
das
sti
sbb
dec
pusha
into
lods
in
dec
cmp
call
sar
mov
mov
or
out
mov
scas
inc
push
cdq
inc
push
ret
add
(bad)
push
daa
xchg
and
popf
fmul
pop
aas
pop
pop
sub
aad
push
mov
cmp
fcmovnu
sub
aam
xchg
out
nop
jle
xchg
push
sub
jmp
stos
sub
xchg
sbb
cmp
cwde
xlat
in
jmp
jecxz
ret
loopne
mov
(bad)
cmp
ret
test
pop
jb
ret
call
mov
jae
push
in
and
sahf
push
mov
and
js
inc
pop
test
adc
shr
std
xchg
fstp
out
rcr
cld
popf
xchg
dec
xor
mov
std
shr
imul
push
je
cmps
dec
mov
jb
xor
sahf
lea
fsub
sahf
push
sub
or
je
mov
and
cdq
ret
sar
push
lods
movs
add
sub
add
xchg
leave
mov
repnz
jb
fxch
sub
cld
dec
std
and
add
aas
pop
movsx
in
xor
cmc
sti
jp
mov
lea
jecxz
scas
out
or
fisub
ds
adc
and
mov
push
add
popf
cmc
pop
daa
mov
xchg
repz
xor
imul
cmp
enter
xchg
dec
jno
jge
dec
cmp
aas
push
mov
aas
xor
enter
cmps
push
xor
(bad)
fiadd
adc
xlat
data16
in
push
leave
sub
or
retf
outs
jl
mov
add
jl
dec
jl
bound
loope
pop
xor
and
mov
inc
lods
data16
in
cli
movs
scas
sahf
dec
and
mov
lock
daa
dec
push
test
ffreep
jns
add
das
cmp
mov
movs
lods
je
inc
xchg
ret
jmp
pop
pop
inc
cmp
push
inc
dec
js
mov
dec
mov
xor
add
dec
lea
sub
bound
retf
icebp
cmc
bound
cmps
mov
push
jne
xchg
outs
jmp
or
push
mov
cld
mov
mov
stos
imul
(bad)
mov
mov
xchg
sbb
add
(bad)
dec
test
hlt
icebp
inc
and
pushf
cmps
in
jle
xchg
dec
xor
cmps
int
mov
(bad)
ret
test
jns
leave
popf
inc
shr
mov
mov
lea
shl
stos
sbb
test
dec
jb
outs
ror
test
push
cmps
jg
loopne
mov
add
lock
ins
call
sbb
(bad)
push
push
(bad)
loop
xchg
test
out
pop
push
xor
ja
sbb
aam
loopne
pop
pop
cmp
jp
jnp
jne
fwait
mov
jo
lea
aam
pushw
cmps
sbb
mov
in
sub
push
push
xchg
aam
xcrypt-ofb
cmps
test
(bad)
or
sti
cmp
sar
sbb
cmc
mov
cmps
movntq
xchg
pop
xor
xchg
dec
(bad)
std
movs
enter
ss
pop
xchg
(bad)
xor
stos
fs
repnz
scas
outs
pop
jmp
fadd
cmp
xor
add
sbb
push
loop
mov
in
xor
aaa
jp
dec
retf
out
enter
addr16
xchg
aad
jb
jnp
xor
loope
xor
or
push
jg
dec
mov
pop
es
jmp
and
adc
lea
push
push
repz
push
or
xor
jle
arpl
sbb
gs
mov
les
aas
(bad)
scas
cwde
cmp
adc
hlt
mov
neg
cdq
clc
imul
add
scas
mov
mov
jge
mov
xor
push
adc
lea
sbb
enter
aad
inc
clc
cli
xor
js
pop
ret
and
dec
pop
cmp
and
add
jns
jge
sbb
lds
jle
rcl
and
cs
ins
cmc
dec
adc
neg
into
mov
pushf
add
ins
push
pop
mov
ret
aad
fwait
gs
jo
data16
js
out
and
cli
jle
add
pop
inc
push
mov
fld
pop
mov
pop
lahf
pop
xor
sbb
dec
mov
add
pop
data16
ja
cmp
stc
shl
adc
jge
sub
add
fdivr
push
add
inc
adc
(bad)
inc
cmp
mov
dec
popf
mov
mov
jno
aaa
jno
call
scas
or
(bad)
call
(bad)
add
aad
cld
adc
push
loopne
ins
jge
lahf
jg
cmps
and
int3
and
movs
(bad)
pop
loope
mov
ja
mul
sbb
scas
shr
cmp
loop
push
idiv
mov
fist
(bad)
inc
mov
sbb
rcl
sbb
imul
xchg
sbb
jp
mov
out
mov
mov
xor
ret
movs
mov
push
js
mov
out
ret
dec
inc
or
dec
imul
inc
shr
mov
and
fcom
std
mov
rcr
enter
repnz
push
sbb
ds
mov
mov
pop
nop
movs
pusha
jnp
loopne
cs
in
jle
xchg
mov
sbb
inc
mov
xor
aad
cmp
inc
adc
sub
fbld
mov
ds
repnz
add
sbb
and
jg
cmp
adc
stos
mov
sbb
sub
call
mov
inc
aaa
jmp
adc
test
push
sub
or
jl
(bad)
idiv
ss
cmc
push
in
cld
cmp
dec
in
or
sbb
in
pop
sbb
xor
push
inc
push
in
cmp
hlt
jle
lods
ret
jge
rcr
aam
dec
loope
in
ins
xor
shl
xchg
xchg
add
clc
xchg
retf
xchg
pop
out
jo
xor
dec
mov
inc
mov
mov
xchg
outs
xor
cmp
jg
addr16
outs
fstp
(bad)
shl
pop
leave
repnz
or
pop
imul
imul
xchg
in
xchg
cmp
add
int
push
rol
cmps
outs
adc
jmp
sbb
dec
xchg
mov
sti
jg
ret
rcr
mov
cmps
push
test
stos
fwait
pop
jae
int3
cld
xor
leave
dec
jl
pop
int3
pop
cmp
push
es
test
dec
mov
mov
cdq
int3
test
dec
pusha
out
push
popa
outs
cmp
stos
aad
loope
pop
xor
dec
jae
arpl
mov
scas
push
fst
mov
call
mov
and
sti
and
xchg
xchg
mov
push
outs
lods
sub
jg
stos
adc
out
push
dec
(bad)
jg
loopne
cmp
shl
pop
int
push
xor
pop
pop
lods
add
test
sbb
shl
fst
jbe
repz
add
xchg
in
loopne
fidivr
iret
xor
xor
ror
jle
push
pop
cmp
dec
sti
dec
or
(bad)
jle
shl
into
rcl
jp
cmc
adc
enter
ss
and
xchg
push
pop
out
push
test
push
mov
lods
mov
mov
fbld
repz
pop
push
jle
push
in
mov
adc
sbb
inc
daa
mov
xchg
pushf
lea
sub
test
jbe
mov
cmc
jle
repz
push
add
call
xlat
out
call
aam
enter
xor
repz
mov
leave
push
mov
dec
push
xchg
push
mov
jbe
or
ja
fsubr
adc
or
out
test
inc
(bad)
xchg
lock
xchg
adc
mov
dec
test
and
je
test
push
das
adc
push
dec
daa
and
inc
sbb
or
call
mov
or
gs
xchg
add
pop
inc
(bad)
vxorps
mov
rep
mov
xchg
les
cmc
fmul
in
lods
stc
shr
pop
mov
lock
lock
lock
int
(bad)
arpl
jno
jge
xor
out
adc
std
aad
adc
and
mov
push
adc
sahf
leave
cmp
ins
inc
gs
mov
loopne
xchg
(bad)
or
cmps
and
fwait
cmp
gs
repz
fadd
addr16
mov
call
add
cmps
rcr
pop
fs
add
push
jno
or
cmps
sub
sub
ins
sub
add
jb
cmp
aad
cdq
inc
lods
iret
pop
mov
jb
xchg
fldenv
mov
pushw
xchg
repnz
inc
addr16
jno
out
test
xchg
mov
jp
cld
push
ud1
mov
in
daa
and
shr
cld
sbb
xchg
test
rol
xor
mov
adc
push
push
or
fld1
sub
das
sbb
xchg
stos
lock
or
data16
xchg
les
dec
aas
xlat
mov
dec
icebp
dec
loope
js
repz
repz
loop
mov
mov
dec
cmc
jne
mov
xchg
lock
pop
mov
xchg
mov
lods
inc
fiadd
lock
xchg
ror
fcmovu
fnstcw
xor
inc
ja
mov
jg
popa
or
xor
stos
mov
jp
movs
cmps
push
jl
lea
imul
vmovss
adc
rcl
mov
adc
lahf
push
fwait
scas
jns
push
sub
inc
js
mov
cli
je
shr
xchg
retf
push
and
lds
jnp
(bad)
push
bound
sbb
mov
movs
adc
sbb
paddsw
int3
cs
je
imul
xchg
imul
loopne
push
and
clc
lea
pop
das
stc
and
cli
mov
cs
sbb
mov
mov
mov
and
out
xchg
push
fisttp
pushf
pop
xabort
mov
xor
mov
pop
(bad)
pop
in
push
or
(bad)
pop
mov
and
in
mov
lea
ja
fcom
mov
add
and
icebp
es
pushf
imul
cli
mov
retf
pop
mov
loop
or
inc
and
outs
fistp
inc
inc
mov
or
outs
pop
(bad)
mov
(bad)
fstp
lahf
inc
lahf
pop
xor
add
or
and
enter
mov
sbb
mov
clc
push
jp
mov
sbb
xchg
add
es
push
imul
leave
aad
mov
mov
test
mov
adc
pop
int3
add
mov
pop
and
fidivr
lea
test
sub
repnz
pop
adc
lods
mov
jnp
addr16
dec
or
retf
rcl
cmp
inc
movs
not
or
add
inc
(bad)
cli
adc
lea
sub
ret
xchg
sbb
test
pop
cdq
lods
fcmovnbe
popa
out
or
mov
loope
mov
mov
and
sbb
(bad)
fisubr
and
sub
xchg
xchg
andnps
ret
adc
clc
dec
or
or
fmul
jo
fsubr
or
and
xor
pop
ror
pop
retf
sahf
adc
cmc
and
mov
cli
cld
sbb
arpl
lock
mov
push
in
jne
inc
inc
loopne
pop
push
cmc
mov
sub
(bad)
sub
test
pop
data16
cwde
imul
shl
cmc
aas
movs
inc
cmp
sub
push
out
push
in
mov
call
push
mov
mov
push
sbb
dec
pop
movs
mov
adc
xor
out
add
add
push
inc
push
cmps
mov
cmps
std
dec
cmps
imul
mov
fdivr
(bad)
xor
pop
mov
jg
push
inc
std
je
push
jo
popa
cmps
adc
jge
out
scas
sub
(bad)
outs
dec
scas
jo
add
popa
rol
scas
mov
call
sti
lock
xor
cmp
jmp
dec
outs
loope
push
jbe
neg
mov
hlt
xchg
dec
test
retf
ja
cwde
mov
loop
cmp
adc
bound
cwde
xchg
pop
mov
mov
mov
int3
and
jae
cmp
or
push
scas
icebp
sbb
sbb
and
cmp
add
fcomp
mov
jnp
jo
bound
pop
movs
jmp
faddp
fcom
pop
mov
in
(bad)
push
adc
cmp
jmp
(bad)
sti
push
call
movs
data16
sbb
and
hlt
repz
and
cld
les
mov
jne
jmp
inc
mov
test
inc
ret
and
adc
xor
adc
js
push
(bad)
mov
scas
aam
outs
mov
jnp
adc
mov
int
out
cmp
mov
pop
cmp
dec
add
cmps
in
and
aas
test
repz
add
xchg
jge
cli
scas
stc
adc
mov
jle
jmp
int
out
call
inc
dec
les
dec
aad
dec
mov
mov
inc
mov
sahf
jnp
jle
and
pop
cmc
in
aam
or
dec
push
sbb
xor
scas
aad
push
test
sub
mov
lds
mov
aaa
shr
mov
loope
xchg
cwde
test
pop
xlat
inc
sub
imul
leave
pop
ret
push
xor
jns
mov
mov
mov
ret
arpl
fucomi
(bad)
pop
ins
imul
and
sbb
pushf
fidiv
idiv
xor
sbb
sub
adc
inc
cmp
mov
and
cld
out
sub
icebp
outs
fdivp
dec
mov
movs
ins
aas
sub
jmp
xlat
lea
repnz
dec
xchg
int3
xor
cmp
xchg
imul
movs
xchg
jbe
mov
jbe
loopne
cmp
mov
out
aaa
mov
sub
fldcw
outs
inc
shl
test
test
sar
jmp
inc
ret
retf
cmp
sbb
mov
outs
lea
fdivr
add
pop
loope
xor
pop
dec
pmaddwd
xor
js
loope
xor
mov
xchg
ins
mov
sbb
fnstsw
xchg
cmps
mov
fwait
and
push
aam
dec
hlt
sti
cmp
scas
bound
loopne
inc
xor
std
js
push
lahf
push
push
cmp
adc
aaa
rep
cmc
std
cmp
jmp
cld
push
add
shr
cmps
in
(bad)
pop
mov
push
pop
fcomp
mov
mov
stos
repz
push
les
jmp
ror
(bad)
mov
test
cmp
push
(bad)
cmp
sbb
and
add
fwait
(bad)
cmp
mov
arpl
push
imul
pusha
aad
stos
ds
icebp
mov
mov
mov
into
sbb
mov
dec
inc
clc
and
and
sub
daa
xchg
test
dec
sti
lock
mov
aad
rol
gs
cmps
lds
and
jge
data16
mov
(bad)
sub
mov
pop
fwait
push
das
xchg
xchg
test
pushf
dec
dec
mov
daa
push
aaa
test
(bad)
mov
dec
mov
lds
adc
mov
push
adc
loope
es
mov
int
xchg
stos
in
add
add
push
sub
push
xor
or
sub
xchg
aas
jb
push
mov
mov
inc
pusha
popf
fldcw
mov
cmps
sbb
sub
sub
push
je
movs
popf
outs
pop
clc
stos
and
faddp
cmp
lods
lods
xlat
xchg
fist
hlt
sub
out
dec
in
pop
mov
mov
pop
repz
mov
aam
cmp
addr16
test
xchg
pusha
xor
gs
xor
call
dec
movs
in
test
adc
(bad)
dec
lods
bound
out
xor
inc
xor
movs
outs
cli
(bad)
cmp
scas
jo
into
das
dec
pop
dec
mov
test
retf
je
ins
sbb
inc
shr
sub
inc
inc
pop
pop
mov
in
int
adc
xchg
jno
jno
mov
xor
std
and
push
cmp
repnz
add
and
mov
aas
(bad)
jmp
mov
xchg
adc
adc
dec
mov
ja
mov
ins
inc
xor
xchg
mov
mov
int
sbb
push
aad
inc
out
mov
loopne
cld
sbb
pop
mov
sbb
jg
(bad)
xlat
ficom
dec
shr
push
rcr
nop
cmp
inc
xor
cmp
mov
mul
inc
adc
js
xor
popf
jecxz
mov
ret
ins
adc
mov
mov
jle
in
jl
movs
mov
gs
pop
inc
addr16
in
sub
dec
fsubr
test
test
mov
mov
test
adc
aaa
test
sbb
lods
mov
add
mov
neg
mov
sub
pop
lahf
pop
sub
fcom
out
cmp
mov
loope
aaa
cmp
jg
test
mov
mov
fst
mov
push
mov
add
inc
inc
dec
test
add
fadd
xchg
push
ret
ret
call
xchg
mov
push
(bad)
adc
iret
out
dec
mov
inc
cmp
jecxz
out
addr16
and
cmp
add
mov
jecxz
scas
cld
cmc
test
shr
into
test
sub
jge
xor
push
(bad)
jne
dec
fmul
test
popf
inc
hlt
or
hlt
fld
jle
fisubr
in
jne
fsub
aam
cmp
pop
inc
mov
out
cmp
dec
nop
lods
mov
push
xchg
call
mov
push
or
fldz
fsub
cmp
cmp
adc
sub
aaa
out
pushf
xor
pop
retf
add
sbb
daa
cmps
add
push
les
(bad)
add
mov
mov
or
push
(bad)
jl
pop
loope
lea
mov
xor
jg
cmps
mov
into
imul
fucomp
xor
gs
jmp
into
jge
mov
push
jmp
mov
aad
rcl
lds
adc
adc
or
sub
cld
test
enter
mov
imul
nop
inc
in
repz
loope
jns
aad
lds
dec
fdiv
fdiv
pop
je
cmps
lods
cmp
rcr
cmp
arpl
ins
(bad)
test
or
push
mov
and
pushf
fdivr
fnsave
out
movs
lods
and
sbb
sub
or
(bad)
adc
xor
and
fmul
or
cld
sbb
icebp
test
mov
jno
cmp
mov
dec
lods
cmp
(bad)
aam
mov
sub
movs
lods
xor
outs
cld
sub
ficom
into
dec
adc
xlat
add
or
addr16
jb
add
mov
nop
push
sahf
imul
es
out
or
imul
jmp
rcr
pop
daa
fild
fstp
gs
add
or
or
inc
sub
sub
mov
mov
cmp
into
cwde
int
sub
pop
fcom
dec
mov
fadd
push
inc
out
xor
or
xchg
icebp
clc
(bad)
(bad)
nop
and
dec
cmp
jno
stos
retf
in
inc
cdq
dec
jl
mov
rcl
loop
push
sub
es
movs
int3
sub
pushf
arpl
and
out
cs
mov
scas
xchg
rcr
mov
xor
sbb
jmp
pop
(bad)
cs
and
xlat
inc
sub
out
inc
cld
icebp
sbb
idiv
movs
mov
and
scas
test
adc
cmp
push
xor
cmp
sbb
fisubr
pop
jmp
inc
and
stos
pop
push
mov
inc
shl
and
fisttp
push
dec
mov
lods
push
cld
cmp
fist
scas
mov
xlat
xchg
adc
jmp
and
cmps
adc
(bad)
cli
sub
and
inc
sub
pop
add
mov
mov
inc
(bad)
pop
adc
cwde
jno
mov
out
cmc
xchg
jb
push
adc
cwde
fwait
add
mov
add
sbb
xor
mov
lods
out
xor
shr
cld
std
pop
jo
scas
or
cmp
stc
addr16
xor
push
cmp
popa
data16
jns
ins
xchg
mov
imul
in
or
sti
dec
ror
arpl
rcr
sbb
loopne
(bad)
ds
(bad)
neg
push
cmps
retf
cmps
call
enter
aas
imul
or
fisubr
iret
cmc
cdq
mov
add
jmp
inc
and
push
mov
ja
mov
in
and
push
cmp
jb
inc
nop
jmp
in
daa
int
push
test
jge
add
add
mov
and
push
xchg
cmp
movq
loopne
(bad)
lahf
cmp
push
mov
js
addr16
mov
sti
ret
cmp
call
adc
or
call
addr16
shl
adc
fidivr
dec
mov
sbb
cld
out
jae
call
iret
jg
add
sub
rol
std
mov
ret
sbb
mov
aas
out
enter
add
clc
pop
in
movs
cmp
(bad)
call
call
dec
jg
inc
out
add
mov
jmp
jg
in
sbb
mov
jmp
mov
les
loopne
or
cmp
popa
movs
cld
mov
fimul
and
xchg
mov
pop
or
jbe
stc
dec
sbb
scas
dec
jp
add
outs
or
jno
mov
imul
lea
out
repnz
push
push
std
or
ins
or
add
stc
retf
loop
cs
add
ss
test
out
xor
imul
icebp
jecxz
inc
call
rcl
cmp
push
xchg
mov
push
cmp
repz
(bad)
int
jl
mov
adc
adc
pop
idiv
push
push
inc
lds
cmp
cmp
inc
cwde
cmp
mul
mov
cli
ins
pop
movs
adc
mov
ret
scas
dec
in
rcr
shl
(bad)
(bad)
adc
and
mov
push
or
fnstcw
xchg
out
cmps
mov
and
rcl
mov
pop
and
push
dec
movs
leave
mov
daa
pop
adc
push
jg
out
xchg
jecxz
sub
movs
adc
sbb
(bad)
stos
sbb
es
into
rcr
inc
and
push
stos
cmp
shr
test
sub
sub
dec
imul
sbb
and
pop
mov
cmp
mov
mov
(bad)
(bad)
out
sbb
xchg
pop
into
mov
les
in
or
call
nop
mov
add
xor
cmps
pop
pop
mov
dec
push
mov
xchg
stc
call
cmp
(bad)
sbb
mov
add
cmp
fucomi
adc
mov
dec
retf
stos
xlat
adc
pop
fld
add
mov
addr16
xor
out
sub
(bad)
mov
call
jo
jae
mov
mov
sub
mov
mov
ror
cmp
or
(bad)
icebp
scas
test
push
dec
and
ds
mov
mov
xchg
mov
add
xor
cmps
xor
sar
int3
mov
mov
fimul
stc
ret
idiv
jecxz
retf
(bad)
je
sbb
dec
xor
push
or
mov
lea
mov
jmp
mov
pop
ins
js
push
call
fs
(bad)
xchg
and
pop
pop
push
ins
lea
push
cmp
shl
sub
outs
pop
out
out
mov
outs
or
clc
int
pop
(bad)
std
dec
into
xchg
mov
ror
dec
mov
popf
fld
sbb
sub
or
imul
std
imul
and
loope
push
xor
(bad)
xchg
imul
out
adc
fsub
mov
sub
lds
push
pop
int3
jge
movs
adc
xchg
psubusw
sahf
adc
cs
or
push
sub
(bad)
push
xchg
shl
test
retf
xchg
in
fidivr
in
ja
xor
cmps
leave
dec
(bad)
mov
movs
push
loop
or
test
xchg
xchg
or
sub
jle
pop
and
adc
push
jne
fadd
(bad)
cdq
push
and
je
mov
movs
dec
xor
pop
bound
sbb
out
out
(bad)
aam
mov
cs
clts
(bad)
(bad)
or
lods
mov
mov
je
es
push
xchg
pop
in
cmp
jg
(bad)
jno
out
mov
jb
lods
mov
adc
(bad)
sbb
xor
(bad)
movs
jne
mov
and
out
sub
imul
(bad)
pop
or
lds
and
cwde
les
adc
dec
mov
cdq
movs
mov
sbb
ins
mov
arpl
outs
cmp
aas
stos
cwde
pop
push
jle
imul
adc
push
dec
aam
inc
dec
pop
into
pop
mov
push
sbb
add
in
dec
sbb
mov
push
in
out
fwait
xor
dec
cmp
aad
test
out
enter
push
aas
xor
popf
imul
inc
iret
sbb
adc
cwde
in
xchg
sub
sar
leave
aad
xchg
sbb
fwait
rcl
ds
mov
push
je
clc
dec
push
sub
cwde
neg
std
mov
lds
loopne
loopne
jno
stos
mov
cmp
in
and
ret
dec
rcr
addr16
sbb
push
out
cld
add
jb
jne
xchg
adc
add
inc
mov
ins
in
mov
mov
push
xor
lock
loop
xchg
popa
mov
mov
or
popa
retf
mov
dec
dec
retf
jb
stos
sub
dec
add
retf
cmp
add
cs
into
loop
mov
jmp
out
loope
dec
adc
arpl
int
lock
aas
aaa
add
add
add
jae
loopne
aas
cmp
push
inc
imul
mov
ror
shr
or
dec
lahf
out
outs
ret
or
xor
and
(bad)
push
mov
aad
mov
inc
std
mov
int3
(bad)
pushf
inc
dec
mov
mov
(bad)
call
push
mov
mov
add
cmp
add
call
dec
dec
xor
pop
sbb
shl
movs
mov
mov
ins
xlat
mov
lods
xor
push
mov
das
pushf
js
xchg
outs
(bad)
fisttp
jp
(bad)
aad
arpl
sub
mov
dec
imul
sub
xchg
xor
sbb
dec
pop
and
push
mov
pop
fdiv
push
cmc
iret
or
aaa
sub
aas
aam
(bad)
out
pushf
xor
xchg
popa
sub
mov
xchg
ds
mov
mov
scas
xchg
add
dec
cmps
jbe
outs
push
jnp
cld
mov
outs
add
mov
loope
popf
xchg
ins
push
sbb
push
inc
call
movs
mov
xlat
scas
or
lock
call
aas
(bad)
ss
aas
loop
dec
xor
test
in
and
jmp
cvtdq2ps
push
dec
sub
adc
adc
inc
retf
ret
dec
xchg
cmp
imul
out
cmovge
(bad)
int3
jae
jnp
clc
mov
mov
mov
pandn
cmps
mov
jo
in
out
and
movs
cli
push
and
xchg
pop
outs
fs
mov
test
das
xchg
sbb
xor
js
ins
or
(bad)
(bad)
dec
ins
sbb
mov
add
(bad)
lock
mov
adc
add
mov
mov
dec
ins
add
sub
mov
test
ja
mov
push
cmp
and
jae
add
loope
mov
pop
mov
aad
lods
xchg
mov
sub
inc
outs
cdq
imul
ss
aas
iret
push
xchg
lea
std
mov
es
pop
es
adc
adc
imul
lea
jns
repnz
mov
das
out
sub
ja
xchg
add
sbb
scas
fdiv
or
in
jmp
jne
inc
xchg
test
out
pop
or
xor
or
adc
rcr
mov
and
pop
jecxz
std
pop
mov
adc
ficom
(bad)
mov
(bad)
sbb
jl
xchg
sub
mov
xchg
jle
(bad)
cmp
imul
inc
fld
ret
xor
mov
cld
mov
or
pop
test
mov
xlat
fdiv
test
push
dec
test
sub
(bad)
dec
adc
mov
or
hlt
jns
int
jmp
shl
stos
mov
xchg
dec
xchg
sbb
cmps
mov
push
imul
mov
push
adc
adc
loopne
sub
std
into
xchg
addr16
or
ret
sub
push
retf
mov
push
or
sahf
sub
ja
int
aaa
dec
mov
fist
adc
cwde
xchg
adc
sbb
mov
add
jmp
cs
inc
and
cmp
inc
aam
mov
leave
mov
cmp
rcl
dec
sub
mov
popf
int3
in
push
add
pop
jmp
out
cmp
int3
inc
fucomip
mov
test
sub
loope
sbb
pop
add
jmp
mov
shrd
pop
pusha
jmp
xlat
enter
pushf
retf
(bad)
inc
(bad)
dec
adc
ds
aaa
pop
push
imul
pmaddwd
ret
out
in
jge
xor
push
add
call
sub
pop
fidivr
fs
std
ins
clc
and
(bad)
std
mov
(bad)
ins
lods
mov
pop
dec
icebp
movs
sub
pop
or
jp
add
(bad)
ds
retf
iret
lea
sbb
mov
rcr
mov
movs
in
ss
or
loopne
les
inc
add
push
test
cmpps
add
push
pop
test
popf
ss
and
jne
mov
inc
sar
fisttp
xor
sbb
test
fstp
retf
ret
add
hlt
xchg
dec
ret
push
imul
add
retf
sbb
arpl
sbb
lds
inc
in
test
cmc
cld
mov
ror
xchg
mov
push
mul
ror
pop
adc
mov
sti
fidiv
pop
mov
jl
dec
std
or
fmul
rol
mov
sub
das
jl
mov
mov
lods
aam
adc
dec
push
push
cmp
xchg
xchg
test
mov
es
add
mov
fisub
outs
into
inc
mov
ror
inc
xor
test
addr16
das
mov
aam
stos
push
xchg
stos
add
and
pop
dec
icebp
aad
lock
clc
dec
fldcw
xchg
mov
sub
push
fwait
das
and
xor
pop
scas
sbb
pushf
lock
add
pandn
daa
lahf
popf
imul
sub
int
xchg
adc
cmp
mov
sub
imul
or
jp
xor
push
xor
test
js
jmp
cwde
adc
cmp
pop
add
lds
mov
(bad)
jne
sti
das
ret
fnstsw
stos
mov
(bad)
jle
xor
xor
int
call
ss
lahf
cmps
xchg
cmps
xor
mov
neg
ins
imul
hlt
(bad)
pop
fistp
pushf
fs
aas
or
mov
in
xor
aaa
div
push
push
dec
and
pop
or
inc
es
cmp
adc
outs
pop
rcl
add
sbb
mov
xchg
out
jmp
cmp
dec
sub
pusha
jbe
out
pop
jb
dec
xchg
inc
dec
rcr
stc
imul
imul
mov
pop
scas
mov
cmp
stos
or
cwde
mov
mov
jl
mov
push
(bad)
(bad)
mov
or
sahf
call
xor
shl
mov
mov
shl
js
loop
cmp
sub
out
dec
mov
jae
shl
mov
xchg
push
add
pop
addr16
push
jb
sbb
cmp
mov
dec
(bad)
stc
and
push
outs
cmp
adc
addr16
lods
in
jne
stc
(bad)
xchg
mov
in
mov
iret
push
ins
mov
mov
add
push
jge
aas
mov
or
push
loop
aaa
aam
mov
adc
lods
aad
jle
pop
push
adc
cwde
inc
jl
mov
ins
inc
repnz
fsubr
imul
dec
aam
mov
scas
mov
jnp
lods
adc
pop
fisubr
outs
mov
out
popa
dec
mov
mov
mov
mov
pop
sub
and
add
or
pop
xor
mov
push
dec
dec
mov
movs
mov
call
mov
daa
fldenv
jmp
xchg
ins
js
gs
inc
adc
movs
xchg
xor
and
xlat
jmp
ret
jb
pop
xchg
jge
out
xchg
idiv
movs
push
outs
sub
xchg
bswap
inc
adc
addr16
inc
(bad)
dec
ss
mov
scas
fcomp
lds
ret
push
cmps
add
loop
mov
pop
mov
sbb
loope
shr
add
cmp
and
repnz
push
add
xor
and
sahf
sbb
jle
jmp
lock
push
xchg
and
add
adc
add
imul
popa
or
sahf
sub
and
rcr
fld
je
xchg
scas
mov
mov
iret
sub
sbb
jae
dec
mov
push
cmp
clc
scas
iret
ins
cdq
push
stos
mov
jbe
sub
enter
mov
push
pop
dec
es
in
(bad)
jno
push
jg
lods
ja
ret
(bad)
int3
out
pop
jns
out
lea
jmp
(bad)
and
push
inc
xchg
xchg
add
xchg
addr16
dec
jecxz
stc
adc
xchg
js
in
outs
xchg
not
push
inc
xchg
xchg
mov
adc
das
aam
jecxz
or
mov
jae
daa
inc
dec
ret
jns
sbb
setnp
xchg
(bad)
sbb
or
imul
inc
mov
or
cmp
jno
xchg
retf
lea
mov
xchg
ficom
adc
adc
les
pop
mov
sub
out
aaa
sti
and
pmaxub
fcom
sti
and
push
mov
test
stos
mov
cmp
push
and
movs
push
cmps
jns
add
push
push
and
mov
or
xchg
mov
neg
mov
and
add
dec
dec
(bad)
lahf
jmp
lods
into
xchg
sub
in
sub
mov
mov
jp
and
cmp
mov
mov
jmp
jae
icebp
mov
ficom
mov
nop
lods
cs
cld
cmc
ja
inc
loop
ror
mov
mov
push
pop
arpl
push
cmp
and
fs
les
cmp
icebp
dec
lds
rol
ja
or
jae
scas
xchg
sbb
or
verr
std
clc
jmp
xor
rol
or
xchg
xchg
test
lahf
cmp
in
jae
gs
or
add
lods
pop
dec
dec
(bad)
cdq
ucomiss
push
push
mov
pop
shr
pusha
jmp
xchg
xchg
push
xor
xchg
out
mov
add
adc
lahf
push
mov
ja
retf
and
xlat
les
addr16
repz
sar
rcl
mov
pop
and
xchg
or
jns
mov
and
mov
add
in
xchg
es
xor
les
inc
xchg
mov
jns
inc
lahf
popf
(bad)
inc
aaa
test
movs
das
addr16
(bad)
es
data16
sbb
scas
jecxz
and
jb
jae
cwde
movs
lods
fnsave
scas
mov
or
adc
fadd
sbb
jno
cmp
inc
pop
add
shl
xor
mov
sub
and
dec
jb
cdq
add
lods
mov
or
mov
jmp
and
stc
ins
adc
mov
push
fimul
jae
jne
and
imul
ftst
cld
sbb
ds
add
xchg
pop
dec
cmp
fmul
fcmovbe
(bad)
add
icebp
jg
push
sub
test
pop
test
cmp
jb
jae
cmp
je
sbb
xor
adc
into
sbb
cmp
push
lods
mov
pop
loopne
xor
mov
bound
inc
pop
out
jle
das
mul
cli
push
mov
shl
mov
scas
mov
jecxz
outs
jl
jae
inc
sbb
inc
int
stos
inc
(bad)
(bad)
ficom
inc
jae
or
test
sub
and
loopne
push
imul
icebp
ja
(bad)
xchg
lods
in
xchg
sub
hlt
mul
test
inc
ret
gs
in
leave
adc
ins
pop
mov
loope
jecxz
in
int
dec
fwait
loop
or
cli
or
sbb
and
popa
(bad)
js
inc
inc
cmps
sbb
lahf
out
repz
popa
jl
dec
rol
or
fcom
std
adc
fisttp
dec
and
inc
and
mov
cdq
int
mov
fld
xor
aas
dec
lods
outs
popa
or
jno
sub
aad
dec
pop
div
push
es
aaa
adc
repnz
xchg
call
mov
icebp
movs
cmp
jne
xor
xchg
adc
push
mov
and
aam
or
inc
ds
stc
(bad)
aaa
retf
jge
repnz
(bad)
std
jmp
mov
call
and
mov
div
push
push
jmp
pop
sub
lea
aam
cmps
jmp
lea
call
rol
add
inc
inc
sub
in
push
xor
mov
pop
int
mov
xor
pushf
mov
fisttp
jb
je
mov
jle
test
scas
mov
or
or
mov
cmp
mov
pop
sub
rcr
inc
gs
jmp
fild
xchg
mov
inc
dec
or
sbb
ds
retf
push
mov
xchg
jnp
sub
lods
adc
mov
xchg
cmp
lods
ja
dec
xchg
mov
add
jae
in
(bad)
jp
sbb
imul
jae
push
(bad)
mov
lods
in
jne
sbb
xchg
jae
call
dec
sar
hlt
cmp
cwde
push
rol
add
jns
adc
ficomp
dec
xor
cmp
js
pop
bound
dec
outs
adc
das
jbe
xchg
push
ds
pop
movs
sbb
xchg
scas
fwait
mov
les
jg
pop
push
jecxz
xor
(bad)
push
dec
add
inc
cs
xlat
js
stos
jnp
and
pop
xchg
xchg
pop
mov
mov
jno
jl
jge
add
into
in
pop
retf
arpl
mov
test
push
jmp
data16
sbb
stos
retf
jb
add
out
sbb
cmc
mov
xchg
add
add
cmp
dec
cmp
sub
mov
jmp
iret
mov
outs
cli
xor
je
aas
push
movs
jg
mov
enter
mov
(bad)
jne
mov
jge
fcmovnb
ja
lods
in
sbb
inc
mov
call
jge
fsubr
pop
stc
es
sbb
adc
mov
je
ss
and
and
pop
test
repnz
mov
sub
shr
in
inc
adc
xchg
test
and
popf
jle
dec
add
sub
sbb
fstp
mov
and
mov
xor
(bad)
push
inc
sahf
xlat
push
ins
mov
int
pop
outs
sbb
hlt
mov
dec
fdiv
dec
mov
aam
xchg
retf
sub
sahf
imul
push
push
cmp
inc
jecxz
dec
or
js
out
xchg
cmp
popa
mov
ins
adc
mov
pusha
scas
imul
pop
push
ins
fbld
pusha
and
iret
pop
mov
cs
mov
jne
mov
sar
sub
pop
pop
sub
mov
popf
in
sub
xchg
fld
mov
push
mov
mov
push
retf
dec
add
mov
mov
dec
sbb
int3
push
dec
adc
hlt
cmp
sub
mov
mov
dec
dec
dec
in
je
daa
ret
mov
mov
mov
adc
call
xchg
and
scas
push
hlt
sub
pusha
pop
dec
aad
sbb
cdq
lock
jnp
sbb
xchg
fsubp
or
jo
fsubr
sysret
jae
sbb
sar
cmp
mov
adc
mov
sub
stos
lods
clc
pop
jl
shl
dec
xchg
dec
inc
in
sbb
sbb
shl
jnp
aaa
icebp
icebp
push
hlt
push
fwait
jb
ror
inc
icebp
push
cmc
ss
cli
push
stos
fwait
xchg
icebp
icebp
xchg
psubq
(bad)
jecxz
sar
sbb
xchg
and
in
dec
test
call
mov
hlt
pop
mov
mov
inc
or
mov
jo
cdq
mov
cmp
adc
inc
(bad)
ds
fidiv
fndisi(8087
fistp
gs
push
jl
mov
inc
cmp
dec
(bad)
shl
push
xchg
adc
in
stos
add
lea
stc
xchg
mov
das
dec
adc
adc
xchg
xchg
jmp
mov
mov
int
ja
adc
sbb
enter
mov
test
xor
aas
imul
cmp
repz
out
hlt
sbb
hlt
dec
rol
sbb
inc
shr
pop
cmp
mov
mov
sbb
outs
into
cwde
pop
repnz
sbb
gs
outs
test
push
into
or
mov
and
mov
or
jecxz
add
adc
mov
fs
in
les
xchg
mov
adc
fldenv
imul
pop
int3
dec
scas
out
in
fadd
in
outs
xchg
(bad)
(bad)
mov
scas
mov
jp
pop
and
mov
aaa
repz
es
inc
mov
dec
stc
inc
sub
dec
add
jle
test
popf
into
xchg
stos
and
std
or
xor
cmps
int
iret
fucomi
sti
cmp
(bad)
jne
add
cmp
and
push
mov
mov
mov
jo
cmp
mov
iret
outs
popf
into
aam
addr16
xor
fwait
ss
fs
push
jl
mov
pop
ret
out
les
mov
movq
mov
retf
dec
pop
jne
adc
sub
push
add
and
pop
mov
inc
cs
shl
push
sbb
mov
lock
sbb
sub
mov
push
loop
sbb
push
push
jae
sar
std
adc
push
iret
in
xchg
dec
daa
je
mov
dec
and
push
cmc
add
cs
sub
mov
and
shl
mov
jle
nop
dec
outs
loop
sbb
repnz
sbb
sub
add
sbb
xchg
in
sbb
stos
and
fisttp
sbb
sar
sti
mov
sub
sbb
pop
cmp
mov
sbb
gs
xchg
add
ds
push
jmp
sbb
inc
and
loopne
daa
out
and
pop
xor
fisubr
inc
and
jmp
jp
pop
inc
sub
pop
fidivr
mov
in
inc
mov
das
mov
loop
fucomip
mov
dec
leave
or
int
mov
repz
mov
out
ss
cwde
pop
inc
dec
push
in
pop
push
xor
fiadd
ins
(bad)
sahf
inc
test
jecxz
xor
inc
(bad)
cmp
sbb
xor
jmp
cmp
sub
pop
xor
add
cmp
icebp
dec
cli
stos
inc
fnsave
xchg
fwait
retf
xchg
cwde
inc
test
faddp
mov
mov
arpl
add
rol
fcom
and
in
pop
popf
out
es
shr
jns
mov
mov
ins
sub
mov
in
add
ja
sbb
int
int3
int3
jo
fcomp
into
js
inc
out
scas
xor
jns
pusha
sahf
ja
and
jae
cmp
xchg
add
fld1
clc
aad
mov
mov
repnz
or
pop
imul
xor
je
retf
ret
out
clc
inc
ds
pop
stc
(bad)
cmp
int
adc
add
daa
call
xchg
cmp
mov
pop
stc
mov
jo
sbb
repnz
xchg
(bad)
int
pop
out
mov
add
(bad)
je
cmc
dec
retw
xchg
out
mov
or
dec
out
mov
xchg
es
mov
xchg
test
xor
dec
cmps
push
xor
and
lock
pop
lea
gs
dec
fwait
mov
sahf
idiv
js
adc
lods
rol
test
sub
clc
and
retf
mov
inc
jl
sub
repnz
ja
fstp
mov
mov
call
sbb
fisubr
xor
cmp
les
mov
in
nop
push
and
sub
out
es
leave
dec
(bad)
xor
mov
xchg
(bad)
jns
lea
jmp
sbb
outs
mov
xor
out
inc
hlt
mov
js
cmc
out
xor
(bad)
inc
movs
xchg
retf
ror
or
ret
nop
(bad)
(bad)
push
(bad)
jp
fild
inc
cli
xchg
cmp
in
shr
sbb
xor
inc
sbb
ins
in
jb
out
push
jns
into
(bad)
mov
and
adc
mov
jecxz
fldcw
jns
fidivr
les
arpl
js
rol
cli
sub
lea
xchg
jns
fnstenv
add
mov
leave
mov
ins
cdq
mov
add
pop
pop
mov
lds
lds
push
cli
push
jmp
or
jns
mov
pop
or
push
gs
or
pop
test
in
jg
xor
mov
cmp
inc
inc
ret
test
js
dec
mov
repnz
data16
stc
mov
jo
stc
jb
mov
inc
pop
jae
inc
pop
jl
or
bound
jbe
add
sbb
arpl
push
xchg
nop
stos
push
pop
gs
or
test
retf
in
sub
xchg
cmp
mov
movs
imul
ficomp
jae
dec
mov
dec
cmp
or
retf
jb
sahf
daa
or
cmp
mov
push
jl
aad
mov
js
pushf
push
mov
add
imul
dec
stos
dec
xchg
enter
jo
mov
addr16
mov
sub
and
xchg
push
or
jl
cmp
push
cmp
pop
lods
lock
gs
mov
popf
sbb
not
pop
pop
sbb
out
aam
inc
xchg
push
add
mov
inc
push
sbb
inc
and
push
or
jae
push
popa
pop
mov
sahf
movs
movs
lods
inc
cmp
mov
sbb
loopne
mov
fwait
(bad)
ins
mov
and
(bad)
jecxz
cmp
fcomip
mov
cmp
and
or
test
imul
imul
jl
inc
adc
mov
dec
in
push
mov
test
and
mov
dec
xor
leave
mov
add
in
xor
cmps
jg
pop
xchg
pop
sahf
jp
inc
repnz
rcr
(bad)
(bad)
push
test
lea
sbb
lods
xchg
add
ret
aas
(bad)
mov
and
test
(bad)
pop
retf
in
test
mov
mov
pop
fldln2
push
dec
in
xchg
mov
(bad)
shr
and
xor
fxch
cmp
adc
pop
iret
mov
pop
test
repz
lea
and
aam
add
dec
adc
fcomp
cmp
outs
out
ins
jmp
or
push
mov
pop
pop
cmp
jmp
enter
call
xor
mov
push
mov
ret
std
mov
jmp
stos
push
xor
and
jp
push
stos
mov
sub
mov
pop
xchg
cs
outs
push
repnz
dec
inc
in
stc
pop
pop
sub
scas
pop
out
mov
stc
stos
xor
dec
retf
pop
mov
stos
xchg
xchg
adc
daa
xor
nop
jecxz
jb
lds
mov
int3
or
inc
push
out
(bad)
cmp
mov
pop
je
(bad)
fsub
nop
out
pop
or
sbb
ins
retf
es
fnstsw
ja
mov
adc
mov
in
dec
add
pop
mov
xchg
repnz
cmp
hlt
lock
les
icebp
pop
cdq
sbb
and
ds
dec
ins
retf
not
sbb
push
push
mov
sub
xchg
add
add
ins
sbb
fwait
mov
ja
(bad)
pop
jno
xor
mov
xlat
xor
icebp
xchg
mov
shr
push
(bad)
sbb
pop
inc
sbb
sahf
lods
stos
imul
lods
xor
rol
je
rcpps
in
jo
push
mov
and
fwait
je
push
cmps
mov
in
sub
sbb
nop
shl
or
inc
test
cmps
mov
cli
jbe
add
xor
jle
xor
sub
fwait
pop
inc
or
lods
fiadd
xchg
cmp
jle
jecxz
lods
and
(bad)
push
inc
retf
out
ins
(bad)
js
xchg
sub
dec
and
and
aad
sbb
or
sbb
test
sub
adc
stos
pop
push
shr
aaa
pop
push
pop
jne
mov
add
fmul
out
cmp
scas
call
pop
cwde
ret
mov
xchg
sbb
add
mov
mov
ins
cmp
jns
xchg
mov
(bad)
pop
or
jle
jecxz
bswap
add
push
rcl
sbb
cmc
and
dec
pop
mov
push
repnz
pop
sub
push
call
jle
pushf
into
(bad)
mov
sub
dec
fistp
in
add
adc
test
imul
aas
jecxz
iret
mov
(bad)
loope
jbe
or
push
lahf
cmp
sub
fstp
add
sub
das
dec
jae
jbe
and
ins
push
jbe
stos
mov
test
lds
fld
inc
mov
retf
arpl
imul
cdq
cld
out
sub
or
setp
adc
pop
cs
loop
fcomp
aam
ficom
fs
sbb
add
adc
addr16
ret
mov
jge
mov
jb
jns
mov
jl
and
inc
sbb
xchg
xor
xchg
mov
push
ret
or
xchg
xor
cmps
es
int
mov
in
in
fsubr
pop
mov
scas
xor
sbb
push
jnp
mov
ja
adc
inc
dec
dec
push
pusha
jns
sbb
cmp
xor
push
out
add
xchg
xchg
pop
jbe
cmp
inc
inc
call
add
cmps
jl
leave
fcom
adc
jnp
cmp
std
stos
add
test
iret
jmp
pop
ror
aas
mov
es
xchg
shr
xlat
cwde
inc
mov
jle
addr16
push
cmc
xchg
ins
fdiv
ss
xor
js
(bad)
and
test
rcl
xor
jmp
movs
fimul
adc
sub
mov
popf
jl
retf
fdiv
fnsave
and
lock
jnp
lahf
mov
xchg
push
mov
inc
dec
das
jae
dec
add
sbb
push
fisttp
pop
pushf
add
lahf
cmp
push
fistp
cld
leave
fadd
mov
fsin
out
sub
ret
(bad)
jmp
mov
nop
xor
stc
enter
arpl
pop
arpl
rcl
mov
xlat
fiadd
fdivr
push
inc
ret
inc
jbe
fwait
mov
lahf
jg
add
arpl
add
sub
test
enter
ja
and
jo
int3
stos
inc
and
retf
push
mov
xchg
aad
pop
ret
pop
push
jmp
dec
stc
pop
fistp
in
sbb
call
idiv
xchg
cmc
pop
jg
fdiv
lods
sbb
nop
lahf
and
lods
mov
or
add
fist
push
cmp
ins
jge
xor
js
mov
out
mov
pop
and
daa
lea
rol
mov
int
inc
fist
sub
enter
dec
repnz
stc
movs
stos
add
jns
out
jl
adc
xchg
cld
test
xor
fwait
je
xor
xlat
xor
mov
pop
inc
nop
das
jecxz
lea
scas
pop
xchg
sbb
push
push
inc
inc
(bad)
jae
in
test
ret
push
inc
or
sbb
scas
stos
and
pop
push
inc
call
push
add
sbb
xchg
push
xchg
aam
scas
xchg
or
xchg
jb
cdq
xchg
cmp
(bad)
add
bnd
push
into
test
repz
sub
lahf
cdq
mov
xchg
leave
js
cmc
in
movs
pop
add
inc
xchg
mov
push
scas
or
or
inc
scas
mov
push
adc
imul
daa
aaa
test
shl
and
and
add
mov
mov
iret
(bad)
and
inc
test
add
mov
mov
loope
int3
adc
sbb
in
inc
mov
add
cmc
cmc
mov
leave
in
dec
pushf
nop
in
xor
adc
jns
mov
aam
fstp
adc
jne
cdq
loope
or
or
lods
(bad)
mov
in
outs
icebp
xchg
jge
rcl
aad
pop
add
(bad)
pop
popa
fcom
lds
fcomp
push
shl
pop
xchg
cmp
mov
shr
out
fld
das
inc
sahf
mov
jge
jmp
in
adc
or
pop
(bad)
daa
jnp
ins
repnz
mov
retf
scas
test
lds
or
sbb
mov
push
xchg
xchg
or
add
inc
div
imul
(bad)
jne
int3
add
ret
dec
out
add
arpl
and
repnz
and
outs
es
inc
repz
mov
xchg
mov
call
in
ret
or
fistp
(bad)
jne
in
(bad)
push
in
pop
sbb
mov
cli
out
cli
cs
lds
sub
stc
shr
fist
aam
sbb
and
mov
(bad)
add
sahf
mov
cs
cld
push
ficom
sub
adc
das
fistp
dec
stc
sub
adc
xor
adc
(bad)
mov
adc
mov
dec
adc
or
inc
out
in
bound
iret
mov
nop
sbb
in
add
(bad)
sbb
test
pop
shl
arpl
bound
push
shl
jno
jbe
dec
les
pop
imul
aad
stos
mov
ds
mov
imul
sub
cwde
jae
xchg
int
xchg
inc
cmp
dec
mov
sbb
iret
sti
sbb
scas
in
push
pop
dec
cwde
shr
cmps
cld
loopne
lock
lahf
mov
sub
inc
adc
pop
retf
fnsave
jecxz
aas
mov
aas
mov
sub
inc
dec
cmps
pop
(bad)
mov
clc
jbe
bound
shl
call
dec
dec
aam
sbb
xchg
cmc
push
mov
dec
popa
call
sub
add
jo
out
jg
addr16
lahf
xor
xchg
pop
retf
lods
int
js
xlat
pop
inc
sbb
ret
sbb
fs
and
sbb
xchg
mov
add
rol
cmp
lds
adc
cmp
aad
add
mov
adc
loope
dec
sbb
adc
xchg
pop
das
sbb
imul
add
xor
jl
or
xchg
sti
or
push
(bad)
test
mov
dec
retf
add
mov
push
xchg
lods
xchg
jmp
cli
sahf
mov
retf
sti
pushf
xor
mov
mov
imul
inc
add
imul
test
repnz
cmp
adc
inc
jb
ficomp
inc
(bad)
fdiv
imul
stc
xchg
scas
sahf
inc
xor
enter
sahf
mov
pop
mov
in
mov
push
pop
cdq
cwde
jno
xor
dec
repnz
in
jb
mov
jbe
out
aad
iret
cmp
ficomp
cmps
mov
cmp
cmp
jg
jno
scas
jbe
pusha
leave
add
mov
mov
mov
jb
lea
fiadd
out
sbb
sbb
clc
or
mov
adc
add
xchg
addr16
push
mov
mov
(bad)
and
movs
addr16
or
bswap
nop
cmp
or
adc
lods
jnp
ss
xor
and
fisub
(bad)
push
ret
in
out
sbb
cmp
stc
adc
mov
loopne
pop
mov
mov
ss
jmp
cmp
sbb
fwait
out
shl
lods
jl
aas
xchg
out
mov
push
cli
mov
fmul
mov
mov
mov
adc
mov
sbb
adc
ror
add
dec
fcomp
imul
lds
in
xchg
push
cmps
imul
dec
hlt
(bad)
lock
sbb
iret
and
movs
inc
adc
mov
or
and
cwde
jb
fstp
cmps
xchg
retf
and
jecxz
daa
jge
mov
add
mov
xchg
mov
sub
mov
daa
or
sub
xor
inc
jns
xor
jg
xchg
pop
mov
test
add
fild
popf
inc
xchg
jmp
ds
neg
xor
adc
gs
push
movs
repnz
ins
out
add
(bad)
retf
pushf
pop
push
imul
fwait
sti
test
addr16
mov
or
sbb
jo
and
movs
(bad)
hlt
sbb
dec
sub
fsubr
xchg
dec
xchg
jl
and
push
add
sahf
dec
cmps
mov
mov
imul
mov
test
xor
pop
sti
inc
or
mov
outs
jmp
and
sbb
iret
jge
mov
mov
cmc
adc
xchg
test
push
(bad)
mov
mov
sbb
mov
scas
sub
repnz
add
in
mov
ss
xor
jns
lods
xor
out
and
fstp
test
push
mul
inc
push
xor
stos
std
pop
sbb
out
aaa
mov
movs
pop
xor
dec
push
ret
dec
in
mov
xchg
xlat
cmp
shr
push
jge
addr16
pop
bound
cmovno
retf
push
xchg
mov
push
and
mov
loop
dec
sbb
test
aaa
lock
cli
mov
fwait
ss
cmp
imul
mov
push
repz
in
rol
mov
xor
pushf
out
dec
(bad)
sbb
movs
xchg
add
imul
mov
scas
or
leave
js
test
and
in
jbe
add
pop
push
test
mov
fild
xor
jne
lock
pop
into
inc
xor
xchg
mov
xor
cmc
xchg
jg
sbb
and
xchg
or
mov
and
adc
push
jo
int
daa
sti
adc
js
push
rol
jmp
ret
sub
jp
mov
and
iret
popf
xchg
sti
adc
into
or
fisub
bound
sbb
dec
pop
ret
aas
repnz
mov
gs
out
dec
jg
pop
gs
loopne
retf
call
pushw
das
xor
sub
adc
xor
cs
xchg
in
jae
mov
stc
sbb
xor
fsubr
cwde
(bad)
xchg
mov
fldcw
imul
retf
iret
jg
loope
adc
mov
inc
popa
jg
add
rcl
fadd
mov
jno
dec
mov
sbb
inc
icebp
push
add
call
loopne
mov
sbb
dec
shr
outs
push
pop
call
xchg
mov
push
pop
bound
pop
cmp
push
xor
addr16
lds
or
xchg
ret
push
add
cmp
test
fnsave
daa
movs
push
enter
test
int3
mov
mov
jns
mov
in
sar
pop
lods
and
stc
pop
ret
dec
movs
xchg
jo
idiv
inc
jne
enter
(bad)
cmc
lods
imul
and
inc
das
fnstsw
fild
mov
cmps
addr16
xor
call
add
outs
adc
loope
add
push
mov
movs
xchg
mov
pop
cmp
int3
push
add
jl
outs
mov
in
(bad)
test
imul
cdq
ret
and
sti
cwde
repnz
xchg
pusha
jbe
loope
ror
add
jns
iret
push
mul
mov
cdq
icebp
cmp
popf
mov
imul
cmp
inc
das
xor
and
jmp
xchg
or
and
inc
mov
push
in
cmps
push
mov
mov
mov
daa
push
pop
sub
loope
mov
(bad)
cmps
mov
sbb
daa
ins
inc
and
fst
mov
in
adc
or
pop
aad
inc
and
dec
ror
addr16
adc
mov
scas
mov
retf
cmp
or
xor
fld
pop
nop
ins
dec
inc
sub
jbe
cwde
lods
xchg
or
mov
sbb
dec
addr16
sub
cli
ror
jno
in
cmc
sbb
mov
pushf
shl
sub
inc
cs
pop
aaa
shl
cmp
adc
xchg
mov
jp
jle
cmp
cdq
jbe
test
cmp
icebp
pushf
out
pop
push
adc
sbb
xchg
mov
movs
jg
or
mov
push
stos
sti
into
inc
out
and
or
or
outs
test
add
sbb
inc
addr16
cmp
test
clc
ja
stc
fldcw
popa
jno
clc
aad
js
out
rep
imul
jns
(bad)
sbb
pushf
sti
mov
xchg
je
sbb
retf
mov
adc
aas
jg
mov
jo
ss
cwde
cmp
call
xchg
in
data16
add
imul
retf
shl
ins
mov
pop
xor
pop
repnz
loopne
or
xchg
mov
idiv
sti
out
popa
jp
push
shl
icebp
adc
inc
jmp
pop
ins
mov
pusha
iret
mov
aas
mov
xor
scas
mov
dec
mov
cwde
sub
popf
push
push
cmc
std
fld
es
cmps
(bad)
xlat
mov
rcr
leave
or
mov
enter
mov
xchg
pop
cwde
dec
mov
lahf
push
adc
ins
xchg
and
mov
fild
xchg
ins
scas
movs
popa
fmulp
mov
pusha
iret
loope
add
dec
jnp
mov
retf
ds
jae
retf
push
jbe
push
and
xchg
jmp
cmps
push
sbb
imul
(bad)
movs
into
and
cmp
idiv
pop
sub
and
stos
enter
inc
retf
xlat
(bad)
jo
add
and
and
mov
fstp
and
mov
inc
test
fst
jb
punpcklbw
fbstp
xchg
push
cmps
push
add
cmc
arpl
adc
mov
push
add
fs
ret
stos
bound
jo
(bad)
mov
and
mov
jecxz
std
push
sti
ret
xchg
mov
jg
pop
mov
sbb
or
ss
daa
fmul
xor
xchg
dec
add
bound
dec
mov
je
int3
inc
(bad)
cmp
and
adc
aaa
stos
pop
or
xor
push
cld
mov
or
mov
adc
push
mov
dec
in
aam
mov
es
pop
ins
test
pushf
js
jle
(bad)
stos
arpl
bound
mov
shl
mov
call
xchg
and
(bad)
jmp
jns
outs
neg
add
mov
add
mov
mov
sbb
aam
jnp
mov
dec
xchg
dec
sbb
jmp
(bad)
repnz
xor
jno
add
inc
mov
into
jl
fldenv
mov
push
xor
int
cmp
or
(bad)
fisubr
ins
dec
and
sub
popf
(bad)
imul
cmp
enter
dec
inc
ins
aaa
sub
repz
sbb
adc
dec
fisub
jl
ins
sbb
dec
orps
popa
jp
in
repnz
pop
out
mov
cmp
in
ds
adc
pusha
cdq
out
and
ins
out
inc
aas
jg
scas
jb
daa
repnz
dec
dec
cmps
add
nop
popa
add
push
repz
(bad)
pop
pop
mov
stos
add
sar
scas
(bad)
in
add
ret
jno
out
cmp
pop
push
jmp
in
mov
clc
dec
jne
lods
ins
xchg
pop
clc
dec
adc
cmp
push
mov
xor
jnp
pop
loopne
dec
ret
repnz
les
inc
ins
stc
push
adc
(bad)
xlat
out
daa
xchg
xor
sbb
push
in
sbb
dec
sbb
mov
bound
sbb
adc
sub
call
in
call
test
addr16
push
sbb
sbb
fwait
inc
mov
jmp
hlt
in
inc
push
sbb
test
xchg
popf
jecxz
push
mov
push
das
cld
and
(bad)
out
add
(bad)
shl
shr
jle
add
and
add
cmp
(bad)
adc
dec
sub
lahf
or
jns
sub
je
lods
xchg
fwait
jl
aad
xchg
in
and
nop
push
pop
sbb
or
gs
sub
shl
es
imul
lods
push
dec
fdiv
dec
sbb
(bad)
xacquire
pop
ins
fidiv
push
jns
in
ins
je
stos
pop
mov
pop
fs
jecxz
and
outs
push
add
(bad)
xor
arpl
pop
adc
stc
cmp
xchg
xchg
pop
movs
pop
xor
ins
mov
mov
into
and
mov
or
rol
inc
inc
dec
and
je
pop
and
imul
das
repz
dec
dec
mov
pop
rcl
inc
dec
pop
aaa
pop
mov
pop
push
nop
mov
add
mov
xchg
pop
add
loop
sbb
push
mov
repz
xor
fisttp
and
jbe
out
adc
cmps
pop
xchg
test
and
outs
lea
cmp
sub
jmp
mov
ss
fisub
punpckhwd
jne
movnti
mov
or
cdq
test
mov
dec
cmp
jno
stos
stc
mov
push
and
mov
rcr
sbb
push
pop
sahf
mov
je
sub
mov
adc
test
test
sahf
fsub
mov
pop
push
pop
ins
loopne
loopne
shr
call
dec
push
jmp
out
ins
lahf
dec
fwait
sbb
adc
pop
push
or
neg
lods
ins
pop
inc
fs
(bad)
cmp
sbb
rol
imul
jmp
fnsave
inc
ins
cmps
xlat
retf
add
cmps
mov
ins
jmp
scas
(bad)
icebp
outs
cmp
ds
inc
mov
shr
xchg
xchg
mov
push
stc
inc
adc
jae
jge
mov
and
movs
enter
inc
mov
loopne
mov
push
xchg
test
jg
jb
repnz
cli
loope
push
jle
ins
fcmove
pushf
and
or
out
cli
pop
int3
aaa
int3
push
push
or
mov
mov
loope
(bad)
out
or
leave
(bad)
bound
push
iret
sub
xchg
jge
jbe
call
xor
ds
addr16
pop
daa
cld
xor
fcomp
retf
out
ds
movs
scas
push
je
mov
stc
inc
and
push
push
pushf
adc
jns
cmps
mov
data16
pop
(bad)
mov
mov
mov
ins
mov
mov
scas
jb
push
in
retf
push
xor
loope
cmps
je
or
and
add
lahf
test
imul
pop
cmp
pop
and
dec
xor
stc
mov
jbe
sbb
cmp
or
mov
pusha
dec
gs
cmp
and
adc
test
sahf
mov
imul
xor
mov
add
out
lahf
inc
sbb
mov
int3
data16
xchg
ja
imul
mov
mov
jge
mov
xchg
xor
inc
pusha
mov
xchg
sbb
add
lds
mov
jmp
je
das
dec
xchg
enter
popa
in
jae
pop
jmp
and
mov
push
in
repnz
push
in
scas
loopne
pop
dec
xor
cld
fcos
lods
lods
test
add
sti
inc
dec
test
jnp
cmp
mov
add
imul
in
movs
and
movs
clc
mov
mov
push
(bad)
xlat
dec
xlat
fwait
pusha
jno
in
add
in
cmps
ja
or
push
adc
cs
jl
xchg
pop
push
pop
sahf
and
int
pop
movs
or
outs
fucom
jo
mov
data16
fucomip
clc
inc
fwait
scas
jne
(bad)
push
rcr
push
dec
sbb
sub
mov
xchg
dec
retf
xchg
sbb
mov
mov
cwde
adc
scas
jb
mov
dec
push
inc
inc
js
aad
xchg
push
fdiv
sub
xchg
nop
je
jmp
xchg
mov
mov
shr
gs
jae
fdivr
xor
and
cmp
sar
(bad)
xchg
xchg
add
sbb
in
adc
jb
movs
adc
xchg
retf
pop
and
std
or
pop
cmp
stos
(bad)
std
mov
jl
xor
(bad)
out
xchg
fwait
or
sub
shl
pop
lahf
mov
push
mov
cmp
or
xchg
sub
sbb
or
leave
loop
and
loopne
mov
in
xchg
repnz
(bad)
sub
xor
xor
push
les
retf
shl
test
outs
sub
pop
cs
fild
push
sbb
xor
sub
iret
sbb
dec
add
mov
aad
enter
les
and
push
xchg
fld
inc
es
lods
and
add
push
mov
sbb
xchg
fs
aad
test
or
mov
lds
clc
les
dec
mov
pop
stc
jmp
test
out
repz
shr
push
or
dec
dec
pop
adc
pop
or
mov
cld
jo
xchg
scas
mov
sbb
sbb
mov
inc
jmp
lock
pop
pushf
and
pop
push
mov
(bad)
adc
out
mov
test
cmps
lea
daa
add
dec
aam
div
rol
nop
leave
pop
in
call
ins
(bad)
rcl
fcomp
adc
shr
aaa
xchg
imul
add
xchg
jmp
mov
sbb
jmp
fcomp
xchg
cmp
jl
push
not
jge
jle
xor
int
pop
xchg
cmp
scas
jge
lods
imul
xor
mov
int3
movs
je
je
call
out
arpl
add
cmp
cmp
fs
mov
jmp
jle
adc
xlat
and
div
and
adc
and
sbb
mov
add
xchg
push
add
cmp
and
jmp
jmp
mov
retf
jno
push
and
add
add
aas
jmp
jne
test
(bad)
jbe
sbb
loopne
xor
push
mov
and
arpl
and
cmp
lock
lea
mov
scas
leave
aam
out
(bad)
jmp
jle
push
idiv
jge
push
jns
jo
movs
call
adc
lods
arpl
xchg
cmp
or
fisttp
cmps
mov
retf
mov
fbstp
or
push
inc
aaa
pop
loopne
and
div
jb
jle
fcmovb
lods
popa
push
and
dec
mov
pop
pop
xchg
mov
ret
push
ds
sub
xchg
iret
sbb
or
xchg
inc
ins
dec
xor
bound
stos
add
cmps
inc
or
jns
test
cdq
inc
test
jae
pop
mov
hlt
popf
mov
jmp
fsub
popf
test
add
mov
pop
pop
or
es
jmp
data16
pop
ins
jno
fnsave
adc
fdiv
cmp
fcomp
xchg
push
sub
(bad)
add
xchg
addr16
xchg
lods
mov
inc
stos
push
cdq
lods
test
cmp
sub
xchg
sub
test
adc
out
adc
mov
sub
inc
push
xor
adc
ins
inc
out
ja
mov
ja
pop
daa
sub
mov
aad
mov
popf
test
dec
in
mov
aad
xchg
loop
mov
lods
aam
rcl
rcr
inc
sar
mov
mov
add
rcr
popf
lea
shl
ins
in
int3
dec
xchg
ja
rol
movs
or
and
mov
cmps
cmp
and
push
scas
adc
xor
je
fwait
(bad)
push
cmp
xlat
adc
xchg
or
mov
pop
in
pushf
mov
jb
dec
hlt
inc
ss
mov
inc
sahf
push
cmp
test
enter
push
int3
or
inc
xor
sbb
mov
call
loope
fsubrp
test
loopne
leave
sbb
inc
imul
inc
and
and
sar
jp
add
sbb
add
and
and
inc
fcmovb
je
cli
popf
retf
adc
pop
lods
add
adc
cmp
sbb
dec
adc
jne
xchg
xor
out
xchg
adc
rcl
pop
les
xchg
lock
xchg
cmp
addr16
in
xchg
dec
lods
push
sti
popa
outs
mov
dec
mov
add
mov
enter
and
inc
sub
dec
cmp
lods
or
adc
sub
fmulp
imul
inc
mov
shr
push
push
pop
sbb
fcmovnu
push
fwait
or
in
stc
push
dec
jl
pop
jns
call
imul
xchg
and
mov
sub
jmp
into
out
jne
aas
mov
sbb
pusha
sub
(bad)
bound
mov
adc
mov
arpl
in
or
pop
scas
dec
scas
adc
icebp
sub
cmc
dec
mov
gs
nop
xchg
pop
add
test
or
(bad)
nop
and
pop
fmul
movs
dec
ds
ins
mov
cmc
stos
stc
mov
imul
aaa
jns
fimul
mov
push
fld
add
scas
or
xchg
inc
popf
popf
sub
mov
inc
and
push
pop
cmp
sub
xor
dec
jno
mov
push
pusha
leave
adc
jmp
and
sbb
xchg
cmp
cmp
mov
pop
and
adc
lar
fist
int3
and
arpl
pop
fsub
pop
das
imul
aas
sahf
fld
mov
pop
xchg
js
mov
cmp
mov
cmps
push
sbb
fdivrp
jl
cmp
or
sub
in
repnz
popa
adc
dec
das
sahf
fbstp
rcl
addr16
stc
cmp
cdq
int
jle
dec
jmp
aas
loop
inc
inc
and
ret
mov
jb
jmp
inc
xchg
push
(bad)
push
xor
cmp
punpckhbw
in
and
jae
push
sbb
inc
xor
popf
xor
inc
mov
inc
sub
xchg
(bad)
mov
jmp
xchg
and
mov
mov
nop
ds
cmp
push
imul
movs
jb
push
jmp
cmp
nop
cmp
stc
jne
push
or
test
jmp
mov
xchg
push
ret
mov
(bad)
push
aas
clc
stos
xlat
lea
mov
call
inc
push
or
es
movs
inc
jg
jmp
jmp
popf
cmc
adc
mov
jmp
shl
and
in
inc
cmps
out
aam
mov
lods
push
loope
sti
or
inc
ins
lods
iret
jmp
mov
fwait
adc
clc
dec
push
or
adc
es
jbe
sahf
lods
btr
pop
jbe
jp
fwait
mov
inc
(bad)
aam
mov
xor
push
enter
add
xchg
mov
pop
cli
push
addr16
pop
xor
stos
or
imul
(bad)
loopne
dec
jecxz
movs
mov
mov
fimul
push
fld
sub
mov
xchg
mov
mov
dec
xchg
hlt
cmp
mov
push
ja
jmp
mov
(bad)
lahf
ins
iret
cmps
sub
mov
inc
pushf
adc
sbb
enter
sub
jge
jmp
and
inc
stos
xor
pushf
jecxz
and
xor
les
or
sbb
push
push
jo
pop
jae
inc
mov
lahf
(bad)
neg
cmp
pop
xchg
outs
cmp
inc
addr16
retf
mov
xchg
inc
cmps
cmp
lods
nop
pushf
dec
xlat
cmp
movs
fnsave
lds
inc
out
and
or
dec
out
pop
shl
ds
dec
mov
fistp
sub
inc
addr16
and
mov
xchg
xchg
and
sub
pushf
push
inc
sbb
fisttp
inc
push
add
shr
pop
in
in
cli
jp
dec
mov
call
mov
cmp
mov
or
mov
das
stc
xor
cmps
cmp
(bad)
jne
and
xor
call
inc
out
cmp
jnp
jbe
fidivr
rcl
xor
pop
in
push
daa
and
sbb
dec
adc
ret
mov
pop
repz
in
inc
xor
pop
cld
lahf
loopne
jne
in
mov
dec
enter
mov
ins
jns
(bad)
iret
mov
or
add
or
push
xor
dec
xchg
xor
jl
jl
cmp
hlt
cmc
push
inc
wrmsr
hlt
test
xor
and
jbe
add
lea
sar
jle
sbb
inc
pusha
mov
mov
inc
mov
jae
stc
retf
outs
xchg
imul
mov
les
cmp
xor
sbb
sahf
in
cs
jl
mov
inc
jae
clc
inc
(bad)
adc
mov
adc
inc
and
fsub
popa
xor
dec
push
push
ja
test
xcrypt-cbc
cmps
push
popf
outs
push
sub
test
push
int3
(bad)
lock
stos
and
lods
add
std
test
adc
movs
scas
inc
aad
push
dec
ret
jl
xor
aaa
int
fucomp
cmp
mov
xchg
xchg
jg
fcom
dec
sbb
mov
mov
mov
push
xchg
addr16
fisttp
aam
sub
gs
pop
lods
movs
mov
xor
mov
lods
xor
out
jbe
cwde
sub
repnz
aam
adc
cmp
mov
or
cmp
jns
and
popf
or
xchg
dec
das
addr16
sbb
adc
ss
cmp
sub
clc
sub
or
jb
xchg
stos
scas
mov
das
jnp
mov
adc
leave
loope
add
mov
jg
cmpxchg8b
mov
dec
scas
retf
xor
stos
std
mov
push
pop
xchg
fsubrp
mov
aas
push
dec
adc
xchg
ror
das
add
shl
mov
retf
in
cld
mov
fsub
mov
fadd
mov
inc
or
push
in
mov
shl
push
leave
iret
mov
fld
in
loopne
inc
inc
add
loopne
test
push
sti
pushf
pop
std
pop
push
dec
clc
cmp
inc
pop
in
push
jp
les
arpl
or
sub
retf
iret
shr
ret
inc
mov
pop
leave
xchg
outs
pop
shl
fbstp
cmp
add
inc
mov
pop
iret
jnp
loop
call
xlat
inc
(bad)
fstp
stos
sahf
out
test
sub
shl
pop
daa
call
inc
and
jnp
(bad)
in
mov
or
mov
jae
ret
xor
and
pop
xchg
stos
iret
scas
xor
sbb
ret
cmp
ficomp
add
mov
adc
lds
ret
outs
mov
dec
jb
pop
dec
rol
and
lahf
imul
test
sub
xor
je
int3
outs
addr16
jmp
xor
inc
inc
cmp
pushf
sbb
repnz
pop
imul
jle
mov
pushf
ins
(bad)
into
or
iret
cmc
pop
bound
out
call
mov
ins
loopne
into
pop
push
inc
or
jmp
or
cmp
iret
gs
xor
stc
mov
pop
iret
push
jle
std
push
cld
int
cld
(bad)
test
xlat
or
pop
jb
scas
mov
outs
out
(bad)
push
adc
rcr
retf
jns
jmp
out
lock
fisub
xlat
outs
rcr
sbb
xchg
fst
and
xchg
push
xchg
xchg
inc
dec
and
cmp
(bad)
shl
popa
mov
pop
and
lock
inc
mov
je
jns
mov
test
or
stos
mov
or
cld
cwde
mov
sbb
mov
pop
mov
(bad)
ins
outs
xchg
arpl
fadd
add
mov
call
sub
pop
fcomp
dec
mov
cmp
(bad)
div
push
jp
std
xchg
push
jb
push
pop
fmul
(bad)
mov
es
or
sub
mov
inc
or
dec
pop
xor
mov
sbb
sub
aas
mov
xchg
pushf
rcl
leave
aaa
je
enter
sub
nop
and
add
int
lds
xchg
je
movs
retf
dec
push
inc
cwde
push
push
push
xlat
sub
or
clc
pop
cli
ins
jl
mul
inc
cmp
mov
loope
pop
rcr
mov
mov
arpl
adc
inc
mov
out
in
lahf
pop
ins
push
jge
jns
adc
(bad)
cmps
(bad)
sbb
pop
push
popa
jnp
sub
sahf
lds
(bad)
mov
ds
adc
xchg
outs
pop
mov
cli
sub
mov
aad
xchg
test
call
pop
call
bound
(bad)
aam
out
cmps
xor
ss
push
mov
repnz
fld
fmul
out
lea
adc
loop
aas
in
pop
sbb
mov
into
jns
mov
sbb
imul
or
(bad)
mov
pop
add
out
(bad)
jmp
int
pop
scas
add
ins
in
out
out
mov
xchg
jae
push
sub
(bad)
mov
je
or
data16
cdq
cmp
je
rcr
xor
xor
xchg
adc
arpl
or
inc
scas
cld
cli
(bad)
fs
shr
or
clc
adc
inc
mov
movs
in
jp
ror
sti
data16
add
pop
mov
cmp
aaa
mov
jns
xchg
and
(bad)
mov
inc
sub
ret
push
repz
and
into
fwait
mov
xor
lock
jle
jnp
ja
(bad)
jg
vmwrite
div
fisttp
jcxz
mov
cmp
cmp
jne
pop
or
cwde
test
mov
mov
fnsave
add
std
pop
sbb
push
inc
fcmovnu
and
add
ret
and
push
movs
dec
cmps
popf
imul
xor
pop
(bad)
shl
call
jecxz
cmc
(bad)
pushf
push
fucomi
cmp
mov
or
data16
cmc
push
push
ins
jl
xlat
and
xor
push
into
je
into
cmp
enter
sahf
cmp
mov
jne
add
push
sbb
jg
bound
xor
push
fbstp
hlt
call
ret
push
jbe
cmps
cli
mov
mov
mov
dec
push
lahf
repnz
cwde
(bad)
or
imul
cmc
jecxz
enter
and
dec
or
movs
jmp
inc
std
mov
adc
mov
dec
test
push
pop
jno
stos
fwait
jno
popf
ret
clc
dec
jle
sub
sub
dec
imul
aas
loop
pop
cld
fwait
test
mov
stc
adc
enter
clc
scas
loopne
leave
loop
inc
jne
mov
(bad)
jge
or
mov
cs
mov
stos
cmps
add
pop
test
push
ret
ror
and
pop
push
jne
add
sub
inc
mov
lds
inc
popf
adc
mov
adc
int
hlt
fs
jno
pushf
in
in
inc
(bad)
adc
pop
mov
scas
add
dec
aad
mov
and
sub
jle
mov
adc
out
ror
addr16
mov
movs
arpl
ret
dec
push
jno
ins
(bad)
fld
ret
push
mov
dec
and
sbb
push
mov
adc
test
mov
out
jnp
or
loopne
pop
in
cmp
xchg
es
js
push
cmp
push
or
adc
jmp
mov
mov
xchg
mov
es
mov
push
mov
pop
xchg
enter
stos
pop
fadd
out
cmps
sub
repnz
out
popf
mov
xor
stc
ss
inc
mov
fst
xor
aaa
push
cwde
mov
out
mov
sub
fwait
loopne
int
pusha
popf
mul
xchg
imul
movs
and
adc
push
movs
(bad)
jbe
outs
dec
jo
and
ins
pop
popf
inc
pop
in
data16
pusha
lahf
pop
stc
or
cmp
cwde
sbb
adc
into
dec
in
mov
fdivrp
inc
sub
mov
retf
in
fmul
je
jl
pop
cmp
adc
mov
(bad)
xor
sahf
xchg
leave
cmp
shl
sar
adc
pop
push
cmp
fwait
inc
inc
dec
add
sbb
add
push
push
xor
sub
inc
xlat
ficom
movs
xchg
daa
or
rcr
dec
push
or
cmp
popw
mov
in
push
cmps
scas
out
jmp
jmp
jmp
loopne
aad
pop
fwait
jecxz
cmp
jmp
cdq
adc
adc
mov
push
popa
mov
push
jecxz
and
into
nop
cwde
call
repz
push
mov
dec
aaa
mov
(bad)
int
ins
arpl
add
push
retf
mov
pop
pusha
rdtsc
xor
pop
idiv
test
fisttp
pop
call
icebp
pop
repnz
dec
xor
mov
rcr
cmps
or
cmp
xor
(bad)
and
inc
xchg
push
es
pop
int
cwde
dec
pusha
daa
inc
jmp
ds
es
cld
punpckldq
fs
daa
add
ins
retf
pop
jmp
fcomp
pop
(bad)
xor
xchg
fcmove
sbb
fldenv
xchg
and
xchg
retf
ins
pushf
std
sar
and
leave
loop
xchg
or
stos
iret
dec
test
hlt
sub
sbb
neg
adc
(bad)
mov
popa
and
gs
pop
cmp
stos
and
pinsrw
outs
mov
dec
add
dec
scas
popa
jle
outs
ror
repz
sub
pop
dec
int3
push
pop
jle
icebp
retf
dec
pop
inc
lock
(bad)
cmp
iret
les
push
mov
cdq
cld
push
je
mov
xchg
mov
push
jb
outs
mov
out
dec
inc
add
lea
xor
cmps
mov
jo
hlt
movs
call
pop
hlt
jmp
test
inc
mov
mov
push
dec
pop
mov
xchg
lock
cmp
mov
pop
xchg
or
imul
ror
add
or
xchg
aas
retf
sub
and
add
push
add
adc
shr
xor
adc
ret
push
fistp
jno
daa
jle
js
inc
shr
cmp
mov
pop
push
cwde
iret
mov
call
std
loop
and
adc
mov
ret
jmp
xlat
xor
xor
cmc
jb
scas
dec
retf
and
ins
sub
fstp
adc
adc
mov
mov
test
leave
and
out
test
fimul
add
or
xchg
mov
sbb
and
jnp
fmul
je
push
mov
test
mov
or
mov
in
inc
cmp
fnstsw
mov
stos
je
jmp
(bad)
ins
iret
fimul
adc
(bad)
sar
jl
adc
(bad)
cmps
and
pop
add
jbe
movs
int3
push
idiv
xor
xor
mov
mov
jmp
mov
mov
sub
(bad)
out
add
(bad)
xchg
inc
adc
mov
shl
cmp
push
arpl
xchg
inc
(bad)
ds
pop
mov
lds
push
pop
inc
clc
xor
movs
adc
xchg
lds
jo
lods
shl
das
xchg
xchg
(bad)
fwait
mov
sbb
or
loop
sub
(bad)
cmp
loop
mov
jo
pop
repnz
int
jbe
sbb
adc
dec
sub
ds
add
sub
and
sub
pop
xchg
sub
(bad)
fadd
data16
dec
(bad)
stc
jb
mov
movs
(bad)
iret
xlat
mov
jae
add
clc
cmc
jae
and
add
jle
cmp
push
and
sbb
leave
xchg
sar
jnp
mov
enter
data16
adc
pop
in
ret
sbb
jno
push
dec
cld
repz
and
cli
pop
ret
mov
test
sahf
iret
not
(bad)
ins
push
jae
adc
adc
cmps
push
and
sbb
std
mov
jne
mov
mov
cmp
sar
fnsave
adc
or
sti
popf
stos
aad
fsubr
ins
imul
sbb
mov
icebp
pop
xor
test
inc
cmc
mov
add
mov
and
xchg
mov
mov
mov
scas
dec
mov
xchg
adc
adc
jl
mov
scas
inc
mov
mov
inc
fst
call
gs
lds
mov
pop
mov
int3
push
rcr
pop
adc
pop
stc
add
hlt
mov
and
adc
sbb
adc
(bad)
pop
loop
jb
aas
jns
ror
adc
cmps
sar
loop
retf
int
xchg
xlat
push
pushf
fdiv
in
jno
movs
lahf
mov
nop
movs
shr
pop
fwait
pop
das
jns
icebp
and
cmps
cmp
mov
in
push
data16
jge
out
jnp
adc
fld
sahf
pusha
(bad)
xor
ins
mov
movs
fadd
and
repz
lods
ins
aam
enter
frstor
xor
hlt
sbb
(bad)
ja
ret
std
xchg
les
dec
les
test
or
or
mov
sbb
std
ins
jl
int3
inc
or
imul
adc
cmps
mov
adc
imul
xchg
xor
call
sar
ja
das
dec
and
fwait
xchg
lock
inc
sub
add
add
adc
retf
pop
mov
dec
add
cdq
outs
mov
mov
push
pop
cmp
xchg
mov
sbb
pop
cmps
lock
and
mov
inc
mov
jp
push
adc
cmp
inc
mov
rcl
loope
call
adc
push
pop
jae
jmp
xor
sbb
ror
mov
ins
rcl
ins
pop
push
nop
jnp
xchg
sbb
jns
bound
mov
icebp
push
leave
xor
fiadd
jbe
fld
lods
sbb
jg
push
(bad)
in
mov
cmc
xchg
jne
aaa
xor
lds
and
test
mov
in
xor
ja
ja
mov
jmp
lods
xchg
sbb
or
fidivr
mov
inc
xor
ror
jmp
cmp
push
push
sbb
inc
in
test
dec
fnstcw
leave
stos
jp
and
mov
pop
cmps
adc
or
cmp
gs
scas
dec
shl
mov
ret
shl
dec
hlt
jecxz
xchg
shr
pusha
sbb
mov
xchg
fst
xor
dec
fisttp
ins
outs
cmps
jae
add
pop
inc
adc
mov
and
jae
push
inc
cli
(bad)
mov
pop
add
cwde
loop
cmp
(bad)
fwait
mov
js
adc
or
repz
outs
sub
cmc
sahf
(bad)
rcr
fstp
add
jo
popf
and
mov
push
sub
xor
add
dec
xchg
cld
mov
addr16
scas
out
dec
mov
dec
jge
xor
sahf
rol
push
test
xchg
lahf
mov
sub
(bad)
mov
das
pop
xchg
add
(bad)
inc
fld
das
jl
mov
xor
fsqrt
int
fnstsw
ror
lds
mov
outs
add
into
cmp
nop
outs
cmp
push
sar
pop
push
mov
cmps
xchg
inc
gs
sub
push
mov
xor
sub
mov
adc
jo
inc
popa
out
adc
sub
add
(bad)
and
frstor
sti
mov
iret
and
jmp
jno
dec
cmp
sbb
inc
xchg
xchg
cmp
push
iret
lds
jge
mov
inc
xor
push
sub
scas
inc
aad
sub
stc
adc
jo
loopne
inc
sbb
fisttp
int
aas
jnp
add
retf
fild
hlt
mov
test
pop
cmc
dec
mov
mov
cmps
push
push
adc
cmp
ficomp
daa
stc
pop
inc
push
push
sbb
addr16
(bad)
sar
in
xor
pop
jmp
not
sub
sbb
into
inc
add
das
addr16
out
hlt
xor
test
mov
(bad)
push
xchg
fisubr
mov
push
in
fcomp
pop
das
xor
arpl
mov
push
adc
ins
jge
dec
push
out
nop
out
add
or
sub
sahf
or
jne
mov
pop
sbb
inc
and
shr
pop
pop
test
les
inc
dec
lahf
xor
mov
mov
xchg
pop
in
inc
and
mov
and
push
inc
cmp
add
int3
repnz
outs
cld
cli
test
aad
movs
jge
mov
jle
ds
sub
jnp
mov
mov
cmp
fsub
rcr
sub
mov
fmulp
int
push
dec
(bad)
jecxz
or
sub
xchg
repz
cmp
jmp
add
dec
ins
mov
pop
add
mov
add
xor
fcomp
add
cmp
sub
jp
int
add
pop
rol
pushf
enter
std
pop
int3
jmp
sbb
shr
mov
xor
mov
xor
and
sbb
mov
(bad)
aaa
pop
inc
iret
leave
inc
sbb
out
mov
sub
inc
jno
sahf
mov
pop
cmp
dec
sbb
loopne
cmp
adc
pushf
retf
jle
mov
mov
pop
fs
hlt
shl
push
add
test
out
stos
stc
push
iret
nop
xchg
sub
sub
inc
imul
inc
or
popf
mov
cmp
sub
inc
xchg
xchg
push
mov
int3
inc
or
sub
adc
push
test
pop
test
mov
ret
cld
xchg
adc
jb
daa
inc
das
dec
das
and
add
pop
cmp
push
push
xlat
repz
inc
clc
add
mov
pop
jbe
clc
pop
xchg
dec
test
xchg
cld
inc
icebp
repz
jl
fbstp
xlat
in
cli
sbb
sbb
or
nop
aaa
xlat
jb
fs
icebp
ins
popf
lahf
les
hlt
bnd
jae
xchg
movs
sbb
jecxz
pop
cmp
call
fadd
ins
sub
mov
lahf
ret
mov
mov
jle
sahf
jne
cmp
popf
ror
popa
xchg
movs
jo
xor
addr16
mov
sub
repnz
mov
sub
dec
fcom
das
pop
or
jmp
push
(bad)
sub
pop
out
sub
lea
aaa
lahf
pop
xor
sub
test
retf
pusha
out
lea
lods
enter
lods
xlat
daa
dec
or
neg
scas
js
test
sbb
adc
push
das
jb
add
pop
mov
les
add
push
or
shl
adc
add
fwait
std
pop
mov
dec
movs
sub
push
sub
mov
(bad)
mov
outs
mov
pop
nop
mov
push
scas
ds
jbe
lods
push
int
or
std
mov
(bad)
mov
cld
ss
dec
sub
inc
jmp
jb
add
(bad)
imul
mov
leave
mov
inc
push
call
xor
push
jne
mov
inc
push
adc
mov
sahf
(bad)
test
pop
jp
xlat
add
stc
cwde
(bad)
ins
mov
mov
add
cmc
push
sub
ret
ret
add
add
ror
test
fisttp
sub
shl
mov
xchg
mov
call
and
mov
sar
(bad)
xlat
out
retf
lock
dec
jae
xchg
sub
push
pop
pop
adc
test
aad
mov
out
jns
push
das
adc
test
jle
inc
fsub
das
inc
mov
sti
xor
or
fdivr
popf
cmp
dec
or
cmp
test
sar
outs
or
aam
sahf
cmp
js
loope
mov
xchg
sbb
pop
sbb
sbb
shl
mov
adc
mov
and
out
(bad)
mov
jg
xchg
sub
hlt
mov
xor
(bad)
bound
test
shl
sbb
or
xor
mov
mov
mov
adc
xchg
mov
fdiv
hlt
or
ret
jp
mov
or
repnz
test
sub
mov
jns
adc
sub
rol
cmp
mov
fwait
adc
mov
fimul
mov
fs
adc
clc
(bad)
ficomp
add
es
pushf
fisubr
inc
and
pop
cmp
test
in
mov
mov
js
jnp
aad
mov
jl
inc
fsubr
out
mov
test
xchg
ror
mov
adc
lds
addr16
xor
sub
or
in
xchg
mov
xchg
mov
jl
repz
jnp
mov
mov
inc
dec
sbb
add
pop
icebp
pop
xor
sub
arpl
mov
(bad)
call
aas
call
dec
loope
gs
cmp
push
rcl
dec
jmp
inc
pop
loopne
or
movs
test
or
ds
and
jecxz
leave
fstp
mov
les
mov
jae
push
aad
jmp
stc
sub
mov
pop
adc
xor
cmp
sub
(bad)
pop
fidivr
sti
ins
ret
loope
cmps
and
ins
adc
add
dec
ins
loope
push
jmp
aaa
addr16
or
pop
nop
mov
or
(bad)
pop
in
je
shr
data16
test
sahf
jp
or
callw
mov
bnd
leave
scas
and
std
cmps
jmp
mov
ror
and
ja
rol
loop
xchg
aad
(bad)
mov
stc
sbb
cmp
int
or
hlt
mov
leave
push
push
imul
ins
push
(bad)
jge
sbb
stos
imul
popa
not
imul
dec
fsub
test
mov
aam
mov
lods
dec
ins
push
sub
xor
fisub
mov
and
mov
mov
dec
mov
ja
aas
mov
mov
or
adc
int
(bad)
or
dec
and
inc
out
cwde
popa
call
loopne
pop
dec
inc
out
test
push
cmp
inc
add
jge
sbb
movs
sbb
xchg
imul
ins
inc
scas
sbb
(bad)
fbld
sbb
ins
scas
pop
cli
jmp
mov
xchg
popf
mov
stc
(bad)
les
mov
xchg
dec
into
nop
xchg
dec
popa
div
fwait
call
mul
lods
inc
movs
push
hlt
sbb
sbb
lds
shl
pop
fs
push
lahf
imul
in
push
mov
sbb
xchg
movs
cdq
pop
cwde
repnz
and
add
cmp
cmp
pop
jg
out
mov
mov
mov
cmp
mov
xchg
push
cmps
mov
imul
push
popf
addr16
aaa
outs
push
mov
xchg
ins
loopne
mov
adc
adc
fs
mov
or
sub
jmp
sahf
repnz
lgs
fnstsw
add
inc
pushf
ja
sbb
lock
nop
idiv
shr
sbb
ins
retf
mov
jmp
das
(bad)
or
retf
jno
jmp
jbe
or
call
int3
mov
jns
cmps
addr16
xor
outs
or
xchg
cmp
cli
cmc
inc
jl
push
dec
mov
sbb
mov
sub
rcr
mov
test
pop
xor
mov
push
dec
imul
ret
pop
push
pop
ror
in
cmp
sbb
jo
adc
lahf
aad
push
xchg
enter
push
ror
pop
push
and
fsub
stc
fnsave
movs
xor
mov
adc
dec
dec
sahf
inc
push
cmp
jge
adc
dec
ins
dec
sbb
xor
jg
add
xchg
into
out
push
mov
aaa
pop
push
cmp
xor
add
rcl
inc
call
mov
and
pop
fidiv
mov
dec
mov
ret
dec
pop
pop
lea
ror
and
pop
mov
add
icebp
outs
clc
fst
mov
daa
jb
in
add
xchg
and
psubb
lahf
pop
ret
mov
xchg
xchg
xchg
rol
inc
into
in
and
fwait
in
or
add
out
cs
ret
into
jae
ffree
das
iret
movs
mov
rcr
cld
lock
fist
and
push
test
jp
sub
cmp
cmp
scas
shl
push
xchg
int3
stos
add
out
addr16
(bad)
fs
hlt
in
xor
retf
imul
popf
retf
add
mov
dec
dec
scas
jmp
xchg
ja
es
ss
int
mov
(bad)
xor
fisttp
sub
and
xor
aad
mov
push
sbb
mov
daa
js
bound
xor
xor
pop
cmp
inc
call
nop
dec
test
addr16
push
fisubr
xchg
xchg
push
jne
sub
dec
mov
pushf
popf
mov
dec
cld
cwde
jnp
shr
adc
sbb
dec
push
jecxz
push
scas
sub
or
sbb
cmp
push
pop
cwde
movs
pop
lock
mov
stc
push
pop
popa
mov
mov
jp
mov
stos
hlt
push
mov
xor
and
int3
sub
jp
mov
ins
mov
or
clc
jne
sub
push
mov
add
mov
jns
pop
out
aaa
hlt
inc
xor
adc
in
push
and
jecxz
(bad)
mov
push
enter
dec
cmps
ds
or
sub
gs
jle
or
push
push
rcl
mov
retf
push
or
jae
pop
movs
and
mov
scas
xchg
cmp
dec
mov
daa
push
stc
loop
loopne
dec
mov
pop
icebp
mov
push
jno
ja
dec
mov
push
out
loop
imul
adc
pushf
xor
(bad)
ins
or
pop
das
int3
cmp
mul
int
mov
mov
pop
xchg
data16
mov
or
dec
ja
sbb
mov
popf
pop
movs
push
sbb
and
ret
xchg
jecxz
mov
mov
adc
(bad)
scas
movs
mov
push
outs
mov
rol
push
sub
cmps
rol
add
lods
daa
(bad)
nop
loop
cli
pop
rol
inc
mov
push
or
cwde
inc
bound
cmps
add
inc
in
call
movs
test
and
and
adc
shr
ret
mov
mov
(bad)
mov
xchg
scas
pusha
dec
clc
std
inc
idiv
shl
fisttp
adc
sbb
pop
fiadd
sbb
ret
nop
add
gs
(bad)
aam
sub
cmp
xor
ret
retf
sub
push
xchg
push
add
fdiv
ss
sbb
cld
pop
dec
xchg
idiv
cmp
test
enter
push
repz
mov
jns
mov
std
sub
and
adc
loopne
add
fdivr
mov
add
and
and
xchg
fs
dec
mov
push
jmp
movs
pop
xor
(bad)
xor
cld
dec
bound
cwde
or
push
dec
out
icebp
cs
ds
mov
bound
pop
daa
pop
(bad)
in
or
sbb
enter
jo
inc
pop
lods
aas
sub
jmp
sar
xor
cmp
jae
pushf
fld
dec
xchg
and
fadd
pop
jg
fiadd
movs
or
adc
(bad)
ficom
push
cmp
xlat
scas
mov
inc
test
mov
(bad)
xchg
jae
push
sbb
cdq
inc
sub
ret
popf
push
test
mov
pop
xor
repz
or
cwde
rcr
xchg
lods
cmp
ja
xchg
nop
inc
add
jnp
test
push
and
(bad)
lahf
loope
xchg
inc
ret
das
or
ss
and
mov
aaa
cwde
popf
ins
jnp
rcr
mov
pop
xchg
stos
into
adc
push
or
or
jl
out
shl
xchg
jmp
push
mov
popa
lahf
int
nop
lahf
(bad)
adc
out
cmp
and
adc
fwait
sub
sub
lods
dec
or
and
sbb
(bad)
std
arpl
sbb
stos
pop
mov
(bad)
(bad)
leave
add
cmp
loop
pop
clc
sbb
ins
sub
jnp
test
outs
and
xor
pop
add
mov
push
in
mov
mov
imul
lods
leave
shl
in
outs
dec
repnz
ss
lock
call
mov
nop
jl
inc
fwait
jle
ret
aas
mov
add
div
and
int3
loop
test
int3
call
aas
push
lea
adc
sub
xchg
stc
bound
fcmovnb
push
sahf
jp
cwde
or
pushf
les
push
into
arpl
mov
jp
ins
xor
mov
into
call
dec
mov
jp
sbb
dec
(bad)
out
or
inc
mov
mov
pop
icebp
sub
xor
addr16
sub
xchg
mov
ja
adc
cmp
xchg
pop
sub
cdq
mov
mov
in
dec
pop
hlt
adc
dec
jno
dec
scas
mov
dec
cmp
sbb
movs
adc
adc
test
xor
adc
div
xchg
in
push
jl
push
gs
(bad)
mov
ss
dec
dec
pop
pop
add
lahf
xchg
jbe
sar
xchg
scas
dec
call
out
mov
pusha
popa
fs
fistp
outs
in
push
push
pop
push
ds
adc
pushf
retf
(bad)
clc
pop
mov
or
fwait
mov
inc
sbb
repz
adc
into
push
xchg
xchg
add
xor
cmps
pop
in
lods
movs
lods
push
shl
(bad)
cmps
mov
jmp
rcr
cmps
nop
inc
pop
jne
rol
sub
dec
inc
and
pop
jmp
dec
jnp
cmp
cmp
cmps
enter
int3
aas
jge
mov
or
pop
pop
hlt
inc
sub
icebp
scas
mov
pop
rcl
xchg
xor
ins
and
ss
cwde
xchg
dec
cld
and
dec
mov
jle
adc
(bad)
ficomp
pop
ret
inc
sub
out
xor
cmps
out
test
mov
push
mov
push
sub
jmp
jo
pop
into
pop
lds
add
call
les
jnp
sar
loop
cmp
mov
je
int
jns
inc
adc
xchg
gs
xor
push
adc
popf
add
add
adc
jmp
dec
je
and
(bad)
(bad)
add
jne
popf
cmp
adc
mov
adc
int
adc
int
xor
or
test
sub
cmp
popf
mov
and
push
pop
inc
pusha
ss
retf
stos
frstpm(287
jge
retf
inc
sbb
jbe
test
pop
adc
mov
sbb
mov
cmc
fdiv
sbb
out
ret
dec
cmp
loopne
ret
cli
test
mov
adc
ss
repz
xchg
pop
adc
mov
and
adc
mov
jae
loop
dec
or
cdq
popa
inc
out
addr16
mov
mov
and
popa
fucom
and
xor
add
add
pop
pushf
out
loop
fiadd
ds
out
inc
jp
shl
mov
fnstenv
jg
loope
lods
pop
das
rcl
add
or
in
fldenv
sub
js
rcr
fstp
(bad)
adc
out
mov
pop
mov
cdq
or
sbb
mov
lock
sbb
out
outs
test
mov
add
xlat
mov
inc
call
pop
mov
push
test
loopne
inc
imul
xchg
std
sbb
pop
out
fstp
fdiv
ins
fiadd
(bad)
in
aas
inc
mov
mov
or
dec
in
jge
std
sar
cld
pop
arpl
xchg
cmps
movs
push
sar
jle
pushf
pop
inc
int
scas
mov
call
jmp
fisubr
(bad)
jo
mov
pop
pop
bnd
in
push
(bad)
std
dec
cmps
mov
das
sbb
or
jmp
jecxz
ret
inc
cld
and
pop
mov
pop
ja
xchg
inc
pop
pop
mov
jge
pop
mov
sub
pop
and
adc
call
pop
aas
stos
into
cmps
stos
data16
int3
cmp
push
push
(bad)
fld
ds
test
int
retf
sti
aad
test
or
mov
push
and
out
cmps
xchg
mov
and
dec
adc
and
adc
arpl
arpl
mov
hlt
enter
lahf
std
test
or
mov
pop
xchg
jecxz
outs
in
xor
xor
jne
dec
fs
push
adc
bound
fwait
or
sti
rol
jns
cmp
retf
or
dec
add
pop
mov
(bad)
and
out
dec
cmp
jg
lahf
mov
or
fdiv
cmc
inc
hlt
xchg
mov
inc
fnsave
sbb
dec
sbb
inc
and
(bad)
mov
pop
cmp
scas
pop
inc
ds
cmp
rcr
js
mov
bound
mov
scas
(bad)
fisub
jg
enter
ficom
lahf
mov
(bad)
push
dec
pop
mov
add
mov
adc
sbb
inc
or
add
(bad)
add
sub
popf
ja
xchg
into
test
dec
into
mov
xor
inc
sub
das
jne
dec
dec
and
pop
pop
popf
mov
adc
cmp
fnsave
(bad)
jge
lahf
lea
jle
pop
pop
and
adc
cmp
sub
mov
sbb
enter
das
push
je
fld
dec
div
ret
popa
icebp
pop
or
or
xchg
test
jmp
xor
add
sbb
mov
sti
popf
scas
add
and
hlt
and
fisttp
inc
loop
cmp
dec
mov
(bad)
mov
pop
mov
aam
hlt
sub
push
adc
(bad)
leave
fnstenv
stc
or
lods
xchg
fnstcw
or
adc
inc
adc
fisttp
lea
or
je
pop
jle
mov
inc
pop
push
cmp
shl
(bad)
sbb
neg
xor
js
cmp
dec
call
aas
data16
adc
scas
imul
xor
ret
in
fs
arpl
cs
pop
test
cmp
cmps
inc
xor
adc
xchg
cdq
cld
dec
ret
push
fdivr
jmp
inc
inc
xchg
ret
jge
dec
retf
fdivrp
mov
sub
aaa
int
les
xor
sbb
jg
mov
neg
cwde
xor
sub
das
fdiv
sub
lods
inc
call
out
jg
push
add
fs
imul
mov
push
mov
pop
cmp
aam
jl
call
inc
and
popf
add
cmc
cmp
sti
or
jnp
push
xchg
pop
push
xchg
jecxz
jne
mov
mov
arpl
loop
inc
fwait
cmp
jp
stos
push
scas
ret
mov
sub
jp
inc
or
fstp
cli
xlat
std
mov
imul
dec
ins
jmp
add
xor
mov
inc
test
pop
fadd
mov
sbb
stos
or
jecxz
or
mov
ret
cmps
xchg
dec
pop
xor
sbb
mov
stos
xchg
mov
sub
gs
aas
inc
xchg
pushf
cli
dec
out
sbb
or
cmps
retf
and
dec
jge
jae
inc
arpl
pop
loopne
xlat
push
cmp
mov
fs
ds
or
addr16
inc
out
fs
lods
dec
call
pop
retf
mov
sbb
ja
or
stos
mov
add
and
inc
imul
dec
sbb
in
ds
dec
dec
out
fisttp
cli
mov
jp
push
pushf
push
inc
xlat
mov
add
out
sti
popa
mov
cwde
xchg
pusha
sbb
dec
push
xor
and
cmps
(bad)
pop
pop
cmp
cld
xchg
or
xchg
int3
ret
sub
lods
inc
add
or
ins
(bad)
fucom
in
fxch
pop
(bad)
das
mov
in
inc
dec
fist
dec
psubsb
cld
jnp
idiv
(bad)
nop
jnp
jnp
inc
xchg
cdq
out
lahf
mov
pop
add
sbb
mov
icebp
cmps
pop
(bad)
mov
mov
mov
push
sti
push
cmp
or
jnp
jne
jbe
sub
inc
icebp
mov
mov
jl
enter
and
(bad)
imul
pop
xchg
or
push
jp
pop
out
arpl
pop
nop
in
arpl
fstp
movs
out
test
push
pop
and
inc
mov
jg
inc
dec
sub
mov
es
in
xor
fdiv
xor
cmp
jb
dec
mov
push
call
sub
xchg
sti
stos
je
test
mov
cs
and
pop
sub
jae
mov
add
je
dec
popf
movs
jne
cmp
repnz
sti
sub
popf
icebp
and
and
push
lock
fdivrp
mov
jbe
mov
fimul
push
mov
inc
xor
ss
jle
std
jecxz
iret
repnz
rcl
inc
add
jne
(bad)
xor
push
iret
sbb
jecxz
enter
push
data16
pop
les
clc
jecxz
push
add
enter
mov
rep
pop
shl
(bad)
pop
mov
xor
add
fiadd
xor
or
gs
xchg
mov
mov
fadd
mov
les
pushf
out
push
pop
in
push
fst
ja
mov
movs
pop
and
ror
outs
pop
dec
sbb
jns
fld
repnz
and
add
sub
adc
adc
js
stos
jne
or
xchg
or
sub
mov
mov
pop
and
cmps
xor
dec
rcl
push
push
mov
mov
mov
pop
mov
xchg
je
cmp
mov
dec
mov
cmc
inc
sbb
repnz
dec
sub
jnp
jmp
retf
and
mov
scas
inc
(bad)
ins
(bad)
fcmovnbe
xlat
add
xchg
inc
test
into
sub
jmp
imul
cmp
add
rcl
sar
outs
and
adc
push
add
aad
(bad)
js
mov
in
addr16
gs
cmp
(bad)
repz
inc
inc
lods
scas
cwde
rol
test
push
jns
adc
cdq
fsubr
inc
aaa
mov
mov
mov
js
daa
push
and
cmp
fnstenv
(bad)
xchg
(bad)
jns
je
xchg
mov
sbb
shl
dec
out
loopne
xor
sub
xchg
push
add
ficom
(bad)
xor
fcomip
ret
nop
add
add
sbb
sbb
push
pusha
cs
fidiv
ins
or
mov
call
xor
and
add
loopne
aas
push
jns
mov
cmp
retf
popf
push
pop
movs
(bad)
sub
push
push
pop
arpl
push
shr
retf
in
inc
push
ret
out
push
cld
cld
pushf
stc
ret
repnz
inc
popa
not
jmp
xchg
ret
push
cmp
push
xor
out
test
or
fbld
(bad)
adc
lock
jae
call
imul
lds
jle
cli
inc
xchg
mov
dec
(bad)
hlt
push
pop
mov
imul
xor
popa
sub
pop
mov
sub
dec
and
popa
and
xchg
or
movs
out
hlt
push
xchg
push
inc
and
enter
jmp
rcl
dec
pusha
adc
and
loopne
xor
cdq
dec
lahf
mov
addr16
pop
add
sub
fmul
pushf
test
sahf
test
cmp
mov
inc
mov
aas
or
pop
retf
(bad)
mov
xchg
lods
or
gs
adc
jge
mul
imul
pop
push
jp
jle
xor
add
mov
inc
ins
xchg
mov
mov
outs
or
shr
and
pop
push
xor
and
jle
addr16
xchg
pop
push
dec
pusha
add
jo
aad
sbb
pop
and
add
popa
or
pop
popf
dec
clc
mov
repz
and
xchg
jg
pop
jg
and
or
(bad)
push
jno
lea
dec
stc
movs
jo
adc
mov
daa
xor
cmc
xchg
dec
pusha
mov
pop
loopne
jne
jmp
sub
mov
cmp
in
cmp
cli
jmp
jo
or
add
(bad)
jge
outs
aad
repz
adc
add
fstp
inc
mov
aaa
push
sbb
mov
repz
shr
xor
or
in
imul
(bad)
rcl
in
adc
inc
(bad)
push
sti
adc
mov
mov
pop
shl
and
mov
xor
xor
xchg
rol
sbb
hlt
sbb
shl
mov
jno
loope
cmc
ret
in
test
xchg
cmp
out
neg
packuswb
stc
inc
xlat
xchg
mov
popa
ss
sub
inc
jb
stos
cvttps2pi
cmps
mov
test
loope
mov
dec
mov
dec
nop
and
cli
mov
test
out
int
in
(bad)
fimul
cmp
loop
sar
out
imul
adc
jge
add
cmps
mov
xor
pop
mov
push
retf
push
bound
jae
inc
ds
ret
bound
outs
fsub
mov
loope
jg
pop
loope
or
jg
scas
aaa
xor
or
adc
ss
hlt
mov
in
out
sub
stos
sbb
push
push
js
jbe
call
sbb
data16
add
lea
fs
in
and
rcl
xor
xor
test
add
push
push
test
adc
cmp
adc
lods
mov
mov
dec
retf
inc
std
mov
mov
inc
push
push
and
retf
lahf
jle
rol
nop
lds
rcl
(bad)
jo
inc
cmps
loope
loop
pop
or
dec
mov
xor
lods
ins
popf
bound
sti
inc
add
out
xlat
repnz
xchg
(bad)
sub
sar
shl
jmp
adc
pop
mov
popa
push
mov
mov
mov
in
mov
sbb
inc
shr
leave
fsub
mov
sub
arpl
test
fisub
imul
retf
jge
cmp
(bad)
repz
stos
pop
popf
xchg
add
and
jl
cdq
cmp
mov
cdq
jno
cmp
retf
or
int3
mov
frndint
mov
jle
mov
and
xor
lds
ds
pop
jmp
cwde
ret
stos
pop
inc
adc
stos
ja
push
and
das
xchg
pop
fwait
cmp
mov
fld
jle
cmps
pop
stos
scas
mov
imul
pop
and
jmp
in
sub
or
cmp
pop
push
sbb
jg
mov
and
or
dec
mov
dec
cmc
cdq
sbb
movs
jbe
mov
sar
add
jle
rcl
test
and
out
mov
pop
pop
and
shl
sub
popa
xor
arpl
ficomp
das
movs
inc
dec
inc
rcr
test
int3
fcomp
mov
sar
xchg
call
xchg
jbe
sti
test
call
stc
leave
add
mov
jmp
push
jbe
fimul
xchg
cmps
repz
mov
xchg
lods
mov
stc
pop
(bad)
sti
std
hlt
jp
(bad)
xor
inc
cmp
out
jns
push
std
adc
repnz
dec
xor
mov
jle
mov
xchg
retf
jp
mov
std
rcl
pop
xchg
sbb
dec
leave
push
call
inc
scas
push
push
lods
dec
clc
rcr
xchg
test
jno
cli
inc
cmc
test
not
sub
test
push
jge
add
mov
call
ret
add
jbe
dec
ins
inc
sub
test
(bad)
clc
ds
sub
imul
fnsave
xlat
mov
out
pop
pop
add
mov
f2xm1
pop
push
psrlw
paddsw
mov
bound
mov
pop
mov
ins
cld
fcomp
jnp
sub
jmp
mov
test
je
mov
loope
mov
inc
imul
dec
in
inc
cdq
jmp
ss
sti
cwde
lea
pop
clc
xchg
(bad)
fld
out
and
jmp
sub
adc
sub
or
ds
cmps
into
rcr
jno
add
aas
aaa
daa
sti
push
jle
cmp
cmps
imul
jge
out
repz
es
test
(bad)
in
push
out
xchg
mov
xchg
add
sbb
fldenv
or
pushf
ins
mov
(bad)
cwde
cmp
cmps
jmp
mov
xchg
(bad)
sub
mov
or
jo
sub
stos
or
aas
mov
(bad)
retf
sbb
inc
or
ja
dec
cli
lds
sub
pop
add
sub
jecxz
enter
xor
jg
sbb
ins
aaa
ficom
dec
lock
imul
xlat
movs
enter
sub
mov
les
cwde
inc
pop
sub
movs
aaa
lea
cmp
xchg
mov
shr
sub
mov
cmp
out
push
(bad)
cmps
sub
loopne
ins
inc
sub
(bad)
xchg
in
push
lea
dec
mov
pop
dec
push
ja
dec
jmp
pushf
jns
inc
in
jne
cmp
xchg
ja
hlt
pusha
jmp
jl
xor
sub
jns
out
sbb
pop
push
add
adc
and
mov
stc
adc
ror
push
hlt
jmp
aaa
shr
jp
ret
cmps
or
imul
aad
inc
mov
arpl
jo
aas
mov
sub
lds
pop
dec
test
arpl
outs
enter
leave
js
inc
outs
jg
mov
xchg
jecxz
mov
loop
mov
sbb
lock
outs
repz
mov
dec
add
ret
sbb
pop
mov
push
jmp
in
adc
adc
js
fadd
std
or
push
movs
jns
dec
mov
jo
mov
hlt
add
arpl
inc
sub
dec
inc
rcl
fimul
jp
lods
push
mov
hlt
mov
xor
shl
add
movs
je
jle
mov
mov
sti
and
pusha
nop
aam
dec
mov
cmp
sbb
xlat
sbb
pop
mov
xor
scas
ffreep
int
test
push
mov
push
adc
cwde
pop
frstor
cdq
mov
xchg
inc
xlat
push
mov
xchg
ss
neg
adc
mov
jns
mov
movs
cmps
adc
mov
jecxz
div
jns
xlat
gs
or
jg
xchg
and
dec
add
xchg
gs
cld
mov
test
pushf
scas
movs
sar
test
mov
xor
(bad)
pop
call
cmps
pop
jl
xchg
adc
(bad)
jmp
xchg
mov
stos
int3
jne
jl
cld
jae
mov
sub
xor
rol
ins
mov
adc
ins
and
add
xor
pop
ret
sbb
jge
(bad)
xchg
aad
data16
mov
fsub
pop
test
and
retf
retf
mov
cmp
inc
test
inc
dec
int3
and
mov
mov
push
(bad)
pop
xor
sbb
gs
out
and
clc
cmps
shr
and
jle
and
in
sbb
mov
dec
es
sub
inc
call
xor
dec
test
dec
scas
mov
(bad)
sub
(bad)
push
cmp
sbb
inc
imul
adc
push
lods
shl
cmp
xchg
outs
xchg
inc
xchg
lods
pop
fistp
into
out
das
sub
sbb
scas
sbb
jp
sub
rol
lods
xchg
cmp
push
enter
xchg
enter
out
push
int3
ret
and
mov
jno
pop
mov
dec
test
loope
xchg
(bad)
das
and
xchg
mov
mov
(bad)
cld
(bad)
pop
jp
popa
das
mov
inc
or
jbe
add
out
(bad)
inc
jmp
lock
ror
mov
or
xor
out
adc
ret
pushf
pop
aas
sub
inc
outs
and
xchg
dec
test
gs
pop
gs
sub
pop
and
(bad)
xor
mov
jmp
cs
add
outs
mov
pop
adc
popf
test
mov
or
cmps
pop
adc
ficomp
sbb
xchg
fs
jg
cld
fild
inc
or
push
movs
gs
mov
daa
mov
add
in
mov
(bad)
or
cmp
add
fild
inc
inc
mov
push
sub
xor
push
in
lea
mov
cmp
test
and
inc
jo
or
add
sub
pop
push
or
cmc
dec
(bad)
cmc
mov
cmp
mov
and
lea
lods
hlt
in
pop
push
sub
mov
mov
jp
fcomp
xor
imul
aas
sub
pop
clc
outs
adc
mov
mov
xchg
fs
aas
jnp
dec
sub
clc
cli
bound
imul
les
test
or
add
jmp
dec
test
mov
xor
fstp
add
scas
push
or
hlt
addr16
mov
push
data16
lods
(bad)
mov
data16
xchg
push
fst
sbb
cmp
shl
pop
jmp
cmp
sub
cmc
cs
jl
pop
cli
ficom
fdiv
lahf
pop
xor
rcl
xor
lods
sbb
cdq
in
add
or
int
or
scas
cmp
imul
out
das
dec
jmp
pop
int
aam
rcr
lods
and
inc
fisub
dec
mov
pop
in
outs
ss
ss
inc
lea
retf
adc
jmp
pusha
inc
and
test
retf
in
push
dec
push
and
aad
daa
je
mov
imul
data16
xor
mov
stos
cmp
cld
cmp
(bad)
jb
and
sub
scas
pop
(bad)
iret
xchg
xor
test
aas
xchg
mov
jmp
adc
pop
jnp
out
inc
push
xor
sbb
add
cmp
stos
stos
add
push
xchg
in
aad
xchg
cmps
inc
das
fidiv
jne
icebp
setl
test
pop
push
jmp
cmp
xor
mov
or
sar
mov
jge
pop
lock
pop
call
mov
inc
cmp
adc
mov
(bad)
(bad)
(bad)
mov
les
icebp
xor
out
xchg
adc
sahf
aas
or
sbb
xor
push
dec
fldenv
clc
test
in
push
cwde
xchg
js
cs
xchg
or
mov
push
adc
pop
ja
mov
lea
div
(bad)
stos
mov
or
sbb
leave
je
fs
clc
addr16
lds
hlt
repnz
in
dec
movs
stos
(bad)
dec
xor
(bad)
rcr
pop
lods
inc
mov
jns
cmp
psrlw
inc
shl
inc
xchg
or
mov
jno
sub
in
push
les
mov
jae
pop
jg
loop
pushf
or
out
mov
sahf
retf
xchg
pop
fs
dec
cmp
xchg
mov
sbb
jnp
jbe
int
ret
mov
inc
cld
jle
stc
mul
xchg
mov
gs
lods
pop
xchg
dec
or
hlt
and
mov
dec
xlat
and
add
mov
movs
or
(bad)
leave
popa
retf
sub
mov
pusha
and
pop
push
dec
pop
ror
adc
(bad)
add
sub
test
pop
rol
jns
rcl
les
jae
mov
sub
pop
adc
ret
mov
inc
mov
sbb
sar
and
sbb
int3
out
cmps
mov
inc
dec
jg
add
adc
pop
pop
mov
mov
mov
enter
fisub
test
iret
xchg
add
repnz
hlt
ja
iret
xchg
push
jecxz
into
sbb
jns
enter
jbe
mov
pop
jl
sbb
mov
jmp
mov
(bad)
rcr
stos
fcom
cli
test
sub
pop
cli
adc
cmp
retf
jp
fnstenv
ds
aas
imul
or
xor
or
enter
adc
sub
sub
sbb
sub
in
xchg
and
repnz
push
loop
xchg
or
jmp
lahf
mov
sti
sub
stos
mov
mov
cmp
pop
imul
das
shl
push
int3
cmp
out
stc
xor
xchg
cmp
fadd
pop
adc
adc
dec
push
push
mov
mov
daa
jmp
mov
and
add
push
inc
fwait
push
sahf
mov
ret
fld
bnd
adc
push
jecxz
out
xchg
lock
dec
inc
pop
mov
adc
popa
rcr
dec
(bad)
int
pop
jmp
jmp
test
lods
rcl
fwait
movs
or
(bad)
xchg
push
or
sbb
pusha
lahf
xchg
gs
xchg
push
mov
cmp
cwde
jnp
xchg
inc
cdq
cmc
jae
(bad)
sub
popa
sub
and
sub
pinsrw
(bad)
in
and
gs
push
jl
stc
sub
xor
mov
push
xchg
mov
jmp
xchg
inc
retf
sbb
mov
lahf
mov
ss
loop
(bad)
iret
push
push
movs
add
sti
or
loope
xchg
xchg
pushf
cmp
lds
xchg
in
fist
int3
pop
stos
push
shr
jnp
dec
mov
(bad)
ins
daa
jbe
mov
and
int
inc
adc
xchg
retf
mov
and
xchg
mov
cmp
pop
inc
arpl
pop
fs
mov
aam
out
es
mov
mov
or
fwait
ds
es
arpl
loope
cmp
mov
mov
out
mov
retf
jge
dec
xchg
push
push
fisub
jmp
sbb
adc
pop
out
(bad)
sub
nop
por
cmp
mov
xor
sbb
es
mov
int3
jo
mov
ins
fwait
dec
cmp
xchg
jl
ins
in
retf
inc
jmp
into
or
mov
mov
and
aaa
dec
(bad)
mov
mov
dec
lock
or
mov
mov
cs
pop
xchg
stc
mov
ins
mov
inc
xchg
repz
iret
adc
mov
es
and
sub
push
add
xlat
mov
cmp
mov
iret
cdq
stos
xor
mov
test
ja
or
fs
add
fwait
sub
or
shl
lahf
neg
mov
loop
mov
jmp
inc
pop
cmp
cmp
leave
loop
jp
cmp
ret
fnstsw
mov
ins
push
mov
lods
mov
pushf
data16
int3
xor
jmp
push
repnz
sub
sub
shl
bound
inc
aam
sub
xchg
aad
pop
sbb
lea
adc
lahf
pop
or
jb
call
pop
test
xchg
xchg
fidiv
rol
cmp
inc
mov
xchg
out
aaa
pop
movs
retf
fsubr
in
adc
loope
popa
push
test
shr
cmc
shl
movs
lds
jg
fisubr
fisub
mov
ja
jae
adc
mov
dec
stos
sahf
add
aad
xchg
pop
adc
cwde
xor
ja
mov
mov
movs
dec
out
add
inc
popa
xor
xchg
sbb
push
mov
and
adc
pop
(bad)
jmp
sub
cdq
xchg
pop
jae
in
mov
in
mov
mov
mov
dec
or
fimul
lock
iret
aad
pop
cli
icebp
and
push
ja
jge
inc
xchg
fidiv
inc
jle
iret
pushf
push
loope
add
lahf
stos
mov
sar
repz
or
stos
jle
sbb
cld
push
add
retf
lds
add
ins
adc
(bad)
aaa
(bad)
adc
mov
push
mov
pop
(bad)
scas
pop
add
pop
push
mov
nop
je
xor
arpl
call
inc
xor
jo
lea
add
or
xor
aaa
cld
pop
mov
push
sub
mov
sbb
xor
pop
xchg
adc
mov
(bad)
rol
pushf
(bad)
cmps
xor
inc
add
bound
xchg
jb
push
xor
xor
sub
push
repz
sub
mov
sub
jecxz
add
mov
push
leave
jbe
mov
fnstsw
test
mov
mov
(bad)
xchg
fmul
js
adc
(bad)
in
push
(bad)
jecxz
jnp
push
les
out
arpl
loop
xlat
mov
fmul
jle
xor
and
fcom
push
rcl
fisttp
lds
nop
ja
cli
xchg
cmps
mov
iret
aaa
mov
mov
shr
mov
cmps
out
jnp
dec
dec
pop
inc
sbb
cmp
test
add
(bad)
mov
int
imul
mov
(bad)
xchg
and
call
add
jns
dec
arpl
mov
ins
jae
mov
sar
jecxz
mov
call
mov
adc
stc
into
data16
call
loop
in
stos
int3
lahf
pop
fnstsw
and
adc
push
pushf
add
jmp
(bad)
pop
repz
jmp
repz
mov
xchg
adc
clc
cmp
push
add
fcomip
stos
pop
and
icebp
sbb
dec
arpl
mov
(bad)
imul
mov
mov
xor
cmp
std
ret
sbb
pop
cld
mov
call
pop
dec
adc
jg
daa
jmp
mov
fwait
int
pop
rcr
xchg
repz
xchg
and
js
into
ins
sbb
(bad)
inc
mov
mov
push
retf
fist
mov
jge
adc
and
jne
pop
add
retf
fwait
enter
push
lds
adc
mov
pushf
xchg
mov
lea
sub
cmps
cmp
mov
mov
jl
jns
icebp
and
pop
ss
ins
cmp
xchg
inc
(bad)
and
shl
lds
out
cmp
cmp
jg
retf
fwait
call
inc
pop
mov
test
pop
xchg
(bad)
into
retf
jl
xor
add
add
adc
ins
call
adc
sti
xchg
push
adc
out
lea
outs
addr16
into
xor
xchg
shl
pop
xor
cmp
in
aas
mov
xchg
ror
jne
and
push
jge
cmps
call
push
push
movs
not
xchg
test
sub
mov
add
xchg
sub
daa
mov
sti
inc
jns
xlat
(bad)
mov
test
imul
dec
lock
push
sub
mov
pop
xchg
push
push
sar
mov
cmp
popf
jg
and
hlt
jecxz
hlt
jge
dec
and
outs
fld
mov
cmp
push
repz
adc
fs
fwait
or
pop
xor
xchg
add
clc
xor
cmp
fnstcw
call
jno
and
dec
add
pop
ins
xor
into
cmp
in
retf
push
fcomp
and
sbb
pop
cmp
dec
add
mov
icebp
pushf
into
in
mov
outs
call
mov
dec
jmp
and
rol
loop
out
or
push
je
sub
lods
xchg
xchg
dec
das
daa
mov
sbb
ret
add
jmp
repnz
popf
stc
add
iret
fcmovne
in
dec
sub
cs
shr
or
mov
(bad)
cmc
mov
(bad)
cld
enter
cmps
adc
leave
sbb
iret
popf
fidivr
add
cmp
(bad)
push
mov
xchg
aad
sbb
cmp
in
test
and
and
jecxz
push
push
sbb
fild
xchg
rcr
mov
sub
or
sub
jmp
cdq
out
into
ror
jo
dec
mov
or
push
xchg
int3
movs
sub
mov
pop
adc
xlat
dec
test
pop
xor
in
lock
add
imul
or
ds
in
movs
leave
ss
xchg
push
inc
push
test
aaa
xchg
in
mov
xchg
aam
cmp
or
aaa
push
(bad)
push
inc
out
call
popa
cmps
adc
jge
mov
mov
mov
adc
push
inc
sbb
nop
sbb
repnz
and
dec
pop
test
ficom
sub
sahf
push
in
lods
push
shr
pop
inc
xchg
std
mov
adc
dec
out
or
push
jo
(bad)
repnz
xchg
test
dec
jo
test
outs
ret
pushf
xor
inc
or
imul
pop
and
xor
call
ss
push
push
and
xchg
arpl
popf
push
aaa
fadd
repz
aaa
mov
jle
pushf
adc
movs
push
mov
jecxz
xchg
cdq
cmp
sbb
add
jmp
jl
adc
sub
adc
outs
fwait
sbb
daa
jo
sub
xchg
jmp
rol
cmp
imul
hlt
xchg
rcr
or
dec
arpl
push
jnp
pushf
not
and
push
cli
mov
cmp
or
call
xchg
dec
or
fist
mov
xchg
pusha
lods
xor
fidivr
es
push
mov
(bad)
cld
cld
in
xor
and
aam
jbe
xor
pop
popa
cmp
mov
sbb
fldenv
imul
jb
in
in
cmp
push
dec
in
cmp
mov
inc
sbb
in
fisttp
stc
fidivr
dec
xor
aam
add
fadd
fisttp
outs
addr16
cmps
xlat
pop
inc
mov
pop
jne
mov
(bad)
idiv
fmul
mov
mov
push
inc
sub
aad
call
sbb
sbb
xchg
daa
or
jecxz
clc
mov
jo
sbb
jmp
aaa
inc
jecxz
loope
popf
or
jb
fld
mov
jne
shl
mov
fs
out
shl
fstp
mov
pop
xchg
sbb
push
mov
mov
and
dec
mov
out
in
je
push
(bad)
je
push
fsub
fnstsw
sbb
fidivr
in
push
nop
sbb
enter
fisttp
ror
movs
lahf
in
dec
ss
or
fcomp
add
jp
sub
icebp
mov
push
(bad)
stc
aaa
retf
sbb
imul
or
fisub
jle
mov
add
js
adc
ret
fidiv
imul
xor
xor
sub
sbb
mov
lahf
frstor
sub
dec
xchg
in
stos
push
sti
loop
xor
inc
mov
mov
jl
add
or
push
je
inc
mov
inc
cmps
outs
stos
(bad)
movs
jbe
dec
test
xchg
dec
cmps
sub
cmp
xchg
adc
dec
out
call
dec
jne
dec
adc
stc
(bad)
int
xchg
retf
call
arpl
dec
mov
std
and
mov
inc
dec
in
sahf
shl
xlat
xor
inc
inc
not
enter
mov
and
pop
ret
cmp
je
call
inc
mov
cs
test
dec
and
xor
fcomp
retf
rcr
sti
adc
inc
loope
jnp
mov
push
rcr
inc
bnd
arpl
loop
test
mov
cmp
xor
sti
(bad)
fild
add
jns
sub
mov
push
aad
stos
xor
mov
dec
ds
sar
mov
stos
dec
repz
aas
pop
mov
xor
iret
fsub
(bad)
xchg
call
and
dec
(bad)
push
(bad)
cdq
out
or
fs
sbb
out
nop
cwde
pop
sbb
add
dec
sbb
mov
push
sbb
dec
add
inc
add
icebp
mov
sub
and
sbb
stos
adc
sbb
mov
ds
pop
pop
jnp
hlt
cld
stos
or
dec
cmp
or
arpl
jg
call
(bad)
in
test
(bad)
mov
cli
push
jb
xchg
push
(bad)
mov
pop
xor
push
add
pushf
push
popa
adc
ds
xchg
or
mov
sti
hlt
dec
xor
int3
(bad)
popa
push
jge
xor
inc
push
into
loope
in
call
stos
mov
(bad)
ds
or
sbb
imul
cmps
cli
pop
test
jp
fld
(bad)
jae
loopne
out
pop
fdivr
je
stc
retf
cmp
into
movs
and
or
fldcw
ficomp
leave
jge
addr16
(bad)
cli
push
fadd
pusha
dec
int
xchg
dec
jle
mov
and
jmp
idiv
cmps
and
in
jno
push
mov
mov
scas
pop
data16
mov
jge
rol
adc
(bad)
shl
das
stos
jns
inc
xlat
sub
loop
ss
mov
lods
mov
adc
in
inc
inc
leave
mov
pop
cmp
das
lods
cmp
scas
cmp
cs
pop
mov
loope
pop
inc
popa
adc
lods
add
sbb
xchg
out
ins
push
add
je
mov
or
mov
cld
inc
or
jmp
dec
jne
ins
int3
and
pop
or
jno
xchg
cmp
fiadd
push
fwait
mov
add
push
jns
and
test
por
iret
cmp
sub
or
or
cli
sub
push
data16
lahf
fild
adc
pop
dec
inc
hlt
push
popf
cdq
test
imul
sub
ins
mov
gs
pop
pusha
dec
jae
and
enter
dec
xchg
and
mov
sub
xchg
mov
aad
sub
or
sti
cdq
xor
dec
jge
push
fst
pushf
jb
xchg
jmp
ret
bound
clc
cmp
jnp
sub
cmc
cs
mov
aaa
pop
and
or
ins
shl
inc
fucomip
pop
in
jb
xor
jmp
and
loopne
das
pop
dec
sub
stc
shr
pop
and
leave
sbb
sbb
imul
les
and
mov
test
dec
and
dec
mov
cmp
xchg
fcompp
div
shr
mov
sub
retf
adc
ins
mov
pop
in
mov
sahf
jae
ss
mov
leave
mov
dec
inc
ins
sahf
pop
mov
pop
and
or
lahf
and
adc
fld
pop
int3
xor
fnstenv
fisubr
call
dec
xchg
jnp
xor
test
ds
mov
adc
mov
imul
pop
ret
adc
sbb
ficomp
xor
ins
(bad)
push
sub
push
or
and
inc
jge
call
ins
xchg
pop
or
and
vmread
xchg
pop
movs
pop
mov
mov
test
pop
push
inc
mov
cmp
dec
hlt
imul
adc
pop
pop
xchg
ret
int3
pushf
and
inc
push
stos
or
adc
xlat
push
xchg
outs
ins
inc
(bad)
ret
cwde
test
pop
cs
hlt
iret
mov
lods
sub
push
xchg
xchg
movs
pop
call
shl
stc
mov
sub
sub
in
ss
repnz
mov
fsub
sub
jge
aaa
xchg
cwde
pushf
cmps
scas
aad
aad
cmps
leave
sub
ds
inc
mov
and
jmp
dec
cld
test
or
mov
fcmove
mov
rol
gs
inc
pop
aam
out
mov
sar
inc
pop
daa
or
ja
mov
cmp
shl
(bad)
retf
cmp
(bad)
aaa
(bad)
cld
xor
shl
fdivr
dec
mov
mov
sahf
repnz
jl
pop
jo
ficom
mov
rol
jle
repnz
cld
add
(bad)
loop
das
int
pop
pop
aad
jae
call
lea
mov
jmp
xchg
shr
mov
pop
call
int
test
add
retf
cmc
(bad)
icebp
xchg
jns
add
add
dec
mov
pop
imul
pop
imul
and
mov
mov
or
mov
ret
mov
jns
add
mov
mov
popa
inc
push
mov
fnstenv
das
jne
sub
inc
out
add
call
or
push
into
add
out
mov
dec
jmp
jnp
int
daa
add
push
int3
cdq
inc
push
push
jb
fcomp
cvtdq2ps
inc
jne
shl
out
popa
inc
icebp
add
adc
add
mov
popf
push
fiadd
mov
fwait
xchg
fist
push
xchg
xchg
mov
jge
mov
fisubr
lods
shr
adc
inc
xor
and
push
jle
xchg
lds
clc
sbb
imul
fisubr
outs
push
and
inc
out
jp
es
in
xchg
add
test
pusha
cmp
and
pop
lahf
call
inc
jbe
pop
(bad)
push
stos
imul
xchg
jb
xchg
int3
cmc
mov
popf
adc
sbb
dec
ss
xchg
jns
adc
mov
push
movs
mov
push
inc
jl
push
in
xor
out
test
add
xor
mov
xor
loop
rol
mov
and
pop
mov
in
mov
ss
stos
xchg
mov
jmp
dec
jnp
(bad)
adc
jecxz
inc
push
add
aaa
les
dec
or
push
lahf
push
jecxz
dec
mov
lds
sbb
pop
fdivr
jbe
outs
dec
jge
push
imul
call
sti
pop
sbb
jmp
jg
jne
sub
cmp
test
mov
(bad)
jae
aas
jns
fld
cmp
sahf
das
in
movs
pop
xor
pop
fcmovnb
jl
neg
ret
jmp
pop
sbb
retf
xlat
push
cmps
push
push
add
push
das
push
and
and
mov
push
push
aam
shl
dec
fwait
or
out
bound
ret
lods
(bad)
out
aaa
push
mov
inc
(bad)
call
sub
cdq
inc
sbb
std
xchg
sbb
inc
dec
lea
into
cmp
and
jecxz
push
adc
inc
cmp
imul
movs
pop
fild
ffree
mov
add
mov
pop
mov
jp
and
loopne
mov
push
xor
stos
aaa
dec
addr16
mov
fdivr
xor
mov
out
xchg
inc
and
xchg
mov
test
stos
test
sbb
inc
mov
nop
mov
sbb
inc
push
xor
cmp
jmp
jecxz
mov
or
in
mov
loopne
xor
inc
out
push
test
push
push
cmp
add
add
mov
ret
shr
cdq
inc
push
jecxz
fisubr
push
in
movs
mov
mov
std
int
sbb
rol
jae
cmp
jbe
jmp
loope
ror
sti
mov
jo
mov
jbe
xchg
or
lea
arpl
sub
stos
or
cli
xor
popa
cs
sub
shl
ret
je
popa
mov
fild
mov
aad
add
stc
or
(bad)
jno
stos
(bad)
sbb
add
movs
fistp
jmp
push
stc
sbb
clc
push
loop
cmp
cmc
sar
call
mov
xchg
icebp
mov
test
daa
call
mov
mov
call
mov
pop
push
dec
adc
cmp
sbb
dec
add
dec
sbb
mov
nop
mov
icebp
retf
lds
cmps
jmp
pop
bound
not
push
test
push
adc
stos
pop
out
cmp
fwait
inc
dec
jmp
dec
sbb
mov
pop
daa
out
pop
into
scas
push
cmp
cmp
(bad)
xchg
ss
iret
(bad)
fwait
xchg
add
cs
push
fwait
inc
cmp
add
jge
cmps
xchg
pop
ins
fcomi
(bad)
imul
cmp
dec
adc
dec
sub
jmp
adc
scas
bound
gs
call
mov
add
and
add
jno
pop
dec
int
clc
jns
push
mov
xor
dec
xchg
mov
mov
(bad)
mov
sbb
scas
or
push
fcmovu
test
call
xor
cdq
loopne
popa
fist
call
pop
mov
mov
mov
or
inc
adc
les
xchg
lds
retf
pop
sbb
retf
pop
shr
(bad)
(bad)
dec
mov
inc
sahf
jne
jp
dec
pop
mov
push
loop
pop
clc
stc
(bad)
fwait
popa
js
in
(bad)
aam
test
fdivr
aaa
jbe
dec
loope
aad
es
cmps
inc
imul
mov
push
sub
aam
bnd
gs
xor
mov
rcr
call
out
les
push
mov
gs
jb
and
shrd
pop
adc
inc
ins
pop
nop
retf
test
cld
nop
dec
pop
jae
cmp
lea
stos
push
cmc
lahf
fs
and
dec
jnp
pop
sbb
call
rcl
in
mov
mov
sub
pop
out
or
sbb
ins
ror
outs
cdq
lahf
or
push
mov
neg
pop
stos
ds
arpl
mov
pop
and
in
test
inc
sub
add
mov
clc
addr16
lds
cmc
call
in
xchg
mov
rcr
jmp
into
ja
stos
fiadd
jns
ret
xchg
movs
cmp
xor
mov
dec
les
mov
call
inc
shl
xor
pop
into
cs
or
dec
fiadd
mov
inc
(bad)
sub
dec
jbe
idiv
push
mov
dec
push
jmp
jo
cmp
mov
jo
pop
pushf
add
cdq
pop
xor
sub
pop
sbb
pusha
call
inc
xor
cmp
and
fs
stos
js
lods
xor
(bad)
pop
mov
aad
jno
mov
xchg
lahf
xor
pop
mov
(bad)
and
mov
call
pop
pop
mov
push
pop
push
and
cmp
jp
push
jbe
dec
pop
inc
cmp
in
sub
fstp
fs
adc
jg
packsswb
pushf
sbb
push
in
mov
fstp
mov
or
cmp
out
sbb
out
lods
fadd
pop
add
jno
dec
repnz
push
fsub
(bad)
in
inc
mov
in
cmps
xchg
dec
inc
adc
hlt
fisubr
and
js
leave
dec
mov
aad
jmp
aam
faddp
pop
out
add
mov
shl
cs
push
pop
jmp
hlt
ja
push
fld
dec
shl
mov
(bad)
inc
jge
rcr
rcr
das
stc
dec
and
dec
lods
mov
retf
xor
sbb
jo
fmul
push
pop
out
inc
das
cmp
stos
repnz
pushf
mov
add
or
xlat
dec
lahf
lds
ins
outs
lods
mov
add
push
jbe
dec
pop
or
imul
test
sub
sti
and
fisttp
imul
leave
ror
clc
(bad)
mov
inc
jle
iret
mov
punpcklbw
das
call
add
punpckhwd
push
mov
js
aaa
mov
retf
popa
arpl
cmp
stos
ror
pop
add
gs
inc
mov
(bad)
rcr
fcomp
(bad)
popa
cld
retf
mov
push
sbb
outs
imul
mov
ins
pop
push
sbb
xchg
add
fcomp
xchg
jge
out
cmp
jle
lods
lea
cmp
sub
hlt
fcmovbe
cdq
sti
fwait
shl
mov
movs
daa
sti
fisub
les
pop
cmp
enter
aad
adc
push
sub
mov
or
sub
jle
xor
lea
(bad)
inc
inc
jb
scas
and
rdmsr
pusha
xor
xlat
mov
adc
mov
mov
ja
dec
out
adc
push
shl
icebp
out
enter
inc
mov
int
stos
test
cmp
pop
daa
scas
cmps
pop
or
lds
mov
rol
sub
or
loopne
fsub
sub
jnp
push
jns
mov
ret
and
jne
adc
daa
sub
push
dec
mov
adc
jle
jl
fwait
sbb
xchg
sbb
inc
dec
push
mov
mov
xlat
jo
sar
lock
cwde
popf
rcr
pop
push
sbb
aas
xor
in
jmp
mov
jmp
daa
jne
shr
or
fistp
ins
out
fld
scas
add
pusha
sbb
add
and
rol
in
or
push
rcl
sets
repz
push
rcl
cs
aad
sbb
jmp
imul
add
ja
push
pop
sbb
call
rcl
mov
(bad)
out
hlt
push
xchg
es
(bad)
and
das
leave
(bad)
icebp
jle
or
sahf
les
sbb
cmp
adc
jbe
aas
jbe
aad
movs
int3
adc
xchg
sahf
pop
idiv
xor
stos
push
pop
inc
aas
push
fsub
jno
xor
or
hlt
inc
outs
das
call
xor
(bad)
push
movs
push
jmp
pop
cmp
mov
cli
dec
add
sbb
ret
in
dec
inc
ret
stos
xchg
jmp
cmp
pop
ret
fisub
mov
stos
outs
pusha
dec
mov
jnp
fnstcw
xchg
dec
xlat
sub
adc
pop
imul
push
sub
cmps
loop
call
imul
xor
enter
dec
mov
pusha
es
(bad)
lods
push
xor
and
std
sub
out
inc
dec
mov
cmovno
(bad)
adc
cs
sbb
mov
inc
or
push
shl
scas
scas
xchg
lea
adc
push
(bad)
fimul
xor
cwde
test
data16
sbb
add
and
push
neg
adc
popf
fsub
push
adc
in
int3
xchg
test
sub
or
outs
mov
(bad)
scas
bound
jo
xchg
mul
add
aas
ds
jle
cmp
into
sub
sbb
and
ret
gs
xchg
int
xlat
je
ror
push
xor
pop
xchg
xchg
out
inc
jno
imul
push
cmp
mov
pop
dec
add
add
sub
lods
xor
or
mov
dec
or
sub
xor
test
fdivr
fs
or
cld
ret
pop
(bad)
xchg
imul
(bad)
sbb
dec
pop
jmp
pop
retf
(bad)
cwde
or
or
ins
leave
repnz
push
mov
mov
mov
les
sub
mov
inc
mov
jno
xlat
xlat
test
lahf
in
jns
push
adc
hlt
cdq
pop
repz
js
les
sbb
cmp
jmp
or
out
cli
pop
loop
adc
mov
js
adc
cdq
jmp
lea
call
and
dec
and
sbb
movs
xlat
bound
xor
in
(bad)
loope
mov
adc
(bad)
add
mov
test
repz
push
out
sti
shr
sbb
inc
inc
fistp
or
adc
and
dec
mov
(bad)
fild
jle
fisub
inc
ins
fs
(bad)
sbb
dec
add
push
sbb
xor
inc
shr
fimul
out
test
or
pop
sbb
push
jb
mov
rcl
push
cmp
rcl
popa
sub
jmp
push
mov
add
cmp
add
cs
push
add
pop
mov
cwde
and
into
xor
repnz
popa
or
xchg
scas
add
add
inc
stos
push
dec
sbb
or
js
jl
mov
popf
nop
(bad)
fxch
jne
std
stos
mov
xor
xchg
mov
daa
mov
gs
xchg
aad
inc
add
sti
imul
shr
arpl
in
repz
sub
push
pop
pop
out
rcl
adc
movs
imul
push
mov
or
pop
movs
cdq
mov
push
pop
div
(bad)
int
ror
adc
mov
nop
add
or
fs
cmp
enter
or
push
sub
lods
out
sahf
test
daa
inc
xor
mov
jae
and
xchg
or
add
retf
rcr
adc
cmp
mov
shr
sbb
stos
jl
or
pop
lea
xor
mov
mov
mov
mov
inc
or
ret
add
sbb
jbe
(bad)
call
mov
sub
daa
icebp
xchg
add
xchg
fcmovnu
mov
push
sub
pop
cmp
fistp
mov
or
sbb
popf
movs
(bad)
xor
and
pop
nop
push
mov
cli
push
mov
(bad)
aaa
sub
cdq
repnz
cli
jbe
pop
popa
scas
push
pop
clc
mov
xchg
mov
and
or
xor
add
daa
in
adc
into
jns
sbb
cld
scas
rcl
cmp
xor
pop
test
test
cmp
xlat
jmp
cmp
xchg
aaa
pop
or
test
jg
mov
shl
add
inc
xchg
push
mov
dec
in
es
out
pop
and
adc
pop
cmp
retf
pop
cmps
sub
add
cmps
cmp
jns
scas
div
call
sahf
and
pop
cmp
test
lock
mov
leave
cdq
retf
cmps
dec
fimul
movs
inc
into
dec
mov
das
mov
pop
ficomp
ror
and
ret
or
in
jnp
(bad)
inc
dec
and
test
sti
ret
jle
jbe
out
sar
call
stc
add
lods
push
iret
mov
inc
and
sbb
mov
cmp
(bad)
push
fisttp
fcomp
mov
js
mov
sbb
push
call
retf
in
rcl
ret
into
jb
mov
mov
xor
xchg
push
loope
out
pop
xor
add
adc
xchg
xor
loopne
loop
or
call
cld
sahf
in
jne
test
push
or
lods
add
xchg
sub
inc
test
mov
dec
adc
push
jb
cmps
test
je
fwait
dec
mov
adc
jle
scas
mov
mov
shl
fwait
cs
pop
call
hlt
jp
adc
add
movs
adc
into
jo
int
data16
popf
push
fnsave
push
leave
cmovg
inc
cs
adc
dec
scas
xor
les
push
cmps
ror
xchg
(bad)
mov
pop
adc
or
ret
in
sub
int
push
pop
mov
cmp
and
and
mov
mov
jp
loopne
in
mov
inc
cdq
mov
xor
sti
sub
mov
and
(bad)
test
scas
repz
xchg
movs
mov
jo
jno
nop
test
aas
gs
xchg
enter
push
adc
lea
sbb
mov
push
sub
retf
jmp
jmp
mov
push
jb
add
(bad)
push
cmp
sub
(bad)
test
pop
jns
xchg
or
sti
push
or
mov
adc
rcl
int
mov
pop
js
imul
inc
push
sbb
leave
addr16
or
or
retf
pushf
loope
xor
dec
push
mov
dec
(bad)
repz
sub
xchg
mov
sbb
ret
and
or
ins
xchg
dec
shl
inc
in
nop
scas
out
daa
dec
out
adc
loop
or
stos
sub
adc
cmp
mov
adc
sbb
adc
dec
mov
mov
mov
mov
and
dec
or
inc
jge
mov
or
sub
or
arpl
out
stos
push
mov
sub
mov
daa
sar
push
jo
adc
out
xchg
add
loopne
lock
ja
fnstenv
dec
dec
cmps
std
push
fstp
out
xor
fwait
inc
cmp
jo
cmp
mov
popa
push
xor
pop
push
inc
cmp
or
out
cmp
sub
and
mov
ret
stc
loopne
push
clc
mov
inc
sub
aam
sbb
movs
mov
sbb
xchg
(bad)
cs
out
cli
pop
pop
mov
xor
mov
js
cmp
cs
push
or
inc
repnz
repz
adc
shl
aam
sbb
and
imul
mov
je
add
out
and
and
cmp
fadd
in
jmp
mov
add
dec
xlat
push
popf
mov
dec
das
and
jnp
loopne
retf
enter
lock
shr
or
ror
mov
pop
loope
inc
or
outs
fs
ins
daa
lods
sub
jae
lds
in
movs
cmc
je
repz
aas
loope
cmc
imul
aas
loop
sbb
mov
inc
pop
jl
pop
mov
ret
mov
xor
pop
(bad)
xor
pop
stc
xchg
xlat
mov
and
(bad)
xlat
lea
shl
and
inc
ret
das
ss
mov
mov
int3
ret
mov
es
mov
mov
and
push
lods
push
xchg
xor
inc
mov
test
jno
call
fimul
aas
movs
push
(bad)
cmp
daa
movs
(bad)
jl
rcl
in
test
(bad)
rol
mov
adc
lds
inc
bound
aad
ja
ret
xchg
mov
mov
pop
or
xor
sub
xchg
mov
loopne
iret
push
pop
je
or
ds
jbe
jns
lods
inc
mov
mov
ret
jno
pop
xchg
and
pop
cmps
mov
add
ja
js
add
dec
popf
xor
sbb
and
push
loope
lahf
xlat
sbb
and
push
adc
or
mov
icebp
sub
test
dec
push
dec
add
dec
mov
adc
xor
push
cld
shl
jl
sbb
sub
mov
mov
shr
inc
test
jle
and
mov
mov
and
retf
mov
push
sldt
cli
sub
push
ja
or
sbb
cld
stos
daa
outs
jg
dec
pop
mov
ins
pop
scas
inc
xor
mov
mov
pop
sti
sti
mov
outs
icebp
sahf
ror
add
adc
dec
add
cld
cmp
test
loope
inc
jns
or
or
dec
pop
jl
sti
inc
sbb
adc
and
stos
mov
inc
fdivr
push
mov
add
mov
mov
imul
sbb
stos
js
cmp
out
jb
jmp
or
mov
jno
xchg
sbb
or
into
or
pop
sbb
mov
(bad)
mov
and
repz
test
cs
xchg
mov
dec
push
jmp
loope
shl
mov
jg
mov
mov
jmp
(bad)
loope
add
out
xchg
adc
call
adc
repz
cs
ss
scas
icebp
sub
jns
adc
pop
or
mov
inc
mov
cmp
mov
mov
(bad)
xlat
cmp
jmp
aad
xchg
push
pop
jbe
push
nop
cmc
sub
(bad)
es
xlat
and
sub
jg
pop
das
add
push
gs
gs
or
inc
icebp
sbb
jle
fdivr
(bad)
pop
dec
xor
mov
adc
xor
mov
jmp
xor
outs
test
into
and
mov
cmp
or
jge
out
pop
lock
jmp
jmp
call
and
cmp
mov
popf
call
iret
ins
hlt
(bad)
sub
ins
or
cmp
or
xchg
inc
cli
sub
ss
stos
pop
mov
inc
mov
(bad)
in
jno
or
(bad)
mov
cmps
add
out
repz
jno
hlt
arpl
or
leave
sbb
retf
imul
test
adc
js
fistp
data16
loop
test
repnz
call
lock
pop
leave
sbb
fdiv
scas
push
gs
dec
sub
rol
loopne
adc
and
push
pop
pop
jns
xchg
pop
lods
sub
ins
scas
mov
xchg
adc
aas
ret
mov
clc
rcl
dec
out
addr16
cmc
cmp
shl
fist
test
iret
pop
xor
sbb
bound
mov
ins
or
das
(bad)
iret
mov
lea
movq
jp
push
imul
repnz
or
xor
or
sub
repz
mov
pop
js
adc
leave
pop
fbld
(bad)
add
jmp
test
mov
jo
sub
(bad)
sub
and
cmp
iret
clc
inc
mov
je
push
outs
push
cld
add
repnz
xor
pop
mul
loope
bnd
pushf
ja
mov
icebp
dec
cwde
das
out
xor
mov
test
sbb
jno
fisubr
push
(bad)
push
xchg
repnz
xchg
and
cmps
and
out
lods
pop
mov
aas
sahf
aas
cmp
and
xchg
sub
in
cmp
or
sbb
push
cmp
push
cmp
inc
add
outs
ret
cmps
inc
test
sub
mov
out
das
or
xor
xchg
rcl
xor
aad
push
xor
outs
or
aas
(bad)
jmp
jle
pop
out
dec
cmp
cmp
xor
loope
(bad)
cli
ja
inc
out
adc
scas
mov
jmp
push
cmp
in
mov
test
push
mov
(bad)
repnz
cs
dec
ss
inc
hlt
push
lods
adc
sbb
in
mov
pop
aam
retf
aad
and
stos
xchg
test
xor
or
xchg
ret
mov
adc
dec
xlat
pop
inc
cmp
xchg
xchg
jmp
les
and
test
jno
scas
and
and
and
test
cmps
xchg
mov
pop
mov
or
fs
adc
inc
out
sub
push
ret
cmp
rcr
push
cmps
test
outs
and
bnd
or
lods
ss
xchg
movs
loopne
xchg
jmp
sub
fwait
sti
ins
dec
icebp
mov
je
gs
jno
test
inc
add
and
cmps
ret
sub
fmul
(bad)
aaa
mov
mov
fild
(bad)
adc
push
ret
dec
ret
sub
std
(bad)
mov
mov
add
xchg
in
mov
test
fild
sub
kmovb
push
and
lods
xchg
push
cmp
inc
mov
xlat
mov
pop
pop
loope
loopne
movs
sahf
mov
aaa
lods
mov
mov
ficomp
loopne
cmp
xchg
push
dec
mul
repnz
sbb
xchg
inc
ins
jnp
push
inc
enter
xchg
pop
mov
ror
pop
cwde
mov
jb
pop
mov
scas
enter
inc
shl
stos
cli
inc
mov
dec
sbb
mov
movs
addr16
pusha
in
cmp
or
add
jmp
repz
mov
outs
push
adc
stc
aad
(bad)
and
jp
ds
stc
adc
inc
dec
lds
leave
pushf
hlt
int
retf
nop
inc
mov
jge
mov
neg
and
and
daa
jle
call
jno
imul
and
shl
add
pop
xchg
es
je
push
jg
daa
adc
dec
jmp
in
dec
mov
cmc
lahf
lods
and
int
and
icebp
nop
gs
jns
mov
in
mov
fcomp
shl
cmp
lods
and
jns
mov
fadd
sti
push
adc
ds
lods
inc
loopne
or
int3
clc
pop
iret
out
test
or
call
aas
fnsetpm(287
inc
aad
jnp
jb
xchg
and
pop
fisttp
lock
cli
ja
dec
daa
in
adc
or
ficomp
pop
lods
int
jo
inc
xor
xchg
pop
cmp
sub
cmc
es
clc
dec
sbb
(bad)
movs
loopne
xchg
inc
ja
jge
test
out
adc
imul
pop
push
retf
sub
xor
in
pop
cmc
jge
fcomi
add
cmp
xchg
mov
cmp
pop
xchg
ds
shl
cmp
jle
inc
mov
jge
jbe
push
and
dec
lods
push
push
aaa
test
dec
(bad)
aad
pop
jbe
add
pop
jecxz
sub
jnp
push
add
loope
movs
or
jnp
xor
scas
pop
sbb
mov
test
cli
mov
(bad)
xor
sbb
xchg
jb
mov
xchg
cdq
add
and
mov
int
ret
(bad)
pushf
hlt
sub
or
retf
out
adc
test
test
adc
or
dec
push
stos
cmp
or
xor
mov
ins
sbb
cmc
adc
mov
add
jle
pop
sub
lods
loop
or
xchg
rcr
arpl
or
iret
and
in
aam
pop
nop
push
cmp
rcr
mov
add
xchg
adc
jmp
es
cli
pop
adc
scas
xor
in
xor
sbb
shl
ins
ret
pop
pop
aam
add
rcr
add
sbb
shl
jecxz
rcl
movs
adc
pop
push
in
and
push
xchg
shl
pop
dec
adc
and
push
mov
out
test
sti
cmp
jmp
aam
fistp
inc
retf
xchg
fidiv
dec
clc
bound
mov
iret
add
cmp
jno
ja
xor
jb
jb
addr16
pop
cmp
push
std
or
or
cli
(bad)
cmp
fist
mov
fnstenv
sbb
add
daa
mov
pop
dec
mov
dec
adc
dec
mov
sub
fwait
sub
in
cmps
in
stc
dec
and
xor
mov
movs
in
or
and
popf
and
mov
retf
adc
out
imul
adc
rcl
jns
mov
ret
jg
in
clc
jmp
clc
fcom
push
jmp
sub
fs
xor
mov
add
and
pop
cmps
fild
cmp
int
outs
es
arpl
jg
fsubr
inc
cdq
mov
push
fldenv
inc
pop
in
pushf
fisubr
rcl
sbb
aas
sahf
cmc
hlt
call
xor
fsubr
loopne
cmp
nop
adc
xor
in
int
mov
clc
sbb
sti
retf
scas
inc
outs
retf
out
repnz
cmc
mov
or
mov
movs
in
push
fcomip
ret
daa
cmp
sahf
pop
or
adc
inc
pop
cmp
scas
cmp
adc
xchg
out
retf
jmp
cli
imul
or
icebp
push
(bad)
xor
sub
jge
movs
mov
xchg
nop
sub
je
xchg
cmps
ins
jo
xor
test
je
inc
push
std
std
adc
sub
mov
test
cmp
out
jp
mov
sbb
mov
fwait
imul
stos
fs
or
retf
retf
test
rcl
and
push
daa
cmp
add
mov
mov
xchg
aas
add
sbb
and
jg
pop
jns
dec
jge
call
cld
loope
cmp
popf
adc
mov
push
data16
fnstcw
pop
iret
stc
pop
rol
mov
(bad)
ds
test
sbb
inc
sbb
ss
(bad)
call
sub
cmps
mov
bound
mov
jno
fld
daa
pop
cdq
(bad)
pushf
stos
cdq
sti
or
in
inc
repz
iret
mov
cmps
(bad)
int
loop
jo
mov
add
mov
jp
push
adc
inc
mov
mov
in
xchg
bound
sbb
lahf
add
in
mov
cmps
inc
mov
mov
mov
je
pop
out
sbb
(bad)
je
shl
fwait
mov
xchg
ja
test
jg
outs
sub
inc
cmp
out
loop
pop
ficomp
inc
and
addr16
popf
xlat
scas
pop
loope
pusha
scas
mov
idiv
(bad)
test
jno
rcl
xor
jmp
jb
and
lods
or
js
jmp
add
xchg
clc
lods
cmps
dec
pop
bound
std
(bad)
jmp
add
push
pop
out
jno
xchg
outs
aaa
adc
mov
pusha
mov
sbb
jo
adc
jle
ss
and
hlt
xchg
sub
loope
cli
or
jno
xor
int3
add
cdq
push
mov
ss
pop
nop
pop
test
cmp
stos
jnp
mov
add
mov
ffreep
enter
xor
jmp
jmp
mov
cmc
or
int3
outs
dec
sub
sub
mov
les
or
mov
nop
push
std
xchg
add
push
(bad)
stos
into
sub
retf
jl
aad
push
add
add
lea
in
nop
std
test
test
jnp
scas
daa
cmps
pop
outs
cld
aaa
push
sub
sub
push
mov
(bad)
jmp
shl
aam
xchg
repnz
push
mov
add
xlat
inc
sub
jecxz
xor
dec
push
mov
call
out
jge
sbb
inc
cmps
outs
push
dec
outs
lds
mov
je
cmp
gs
loope
cli
xchg
jne
inc
iret
int3
cmp
call
or
loope
pop
(bad)
jg
jmp
hlt
fdiv
jmp
repnz
mov
pop
inc
push
pop
ficomp
ja
pop
and
cmp
pop
addr16
outs
pop
or
cs
imul
and
shl
adc
data16
xor
aam
xchg
push
sub
mov
cs
jb
mov
loopne
push
dec
inc
inc
adc
add
xor
mov
xchg
or
out
sbb
xlat
sbb
xor
lods
sbb
(bad)
aad
ds
enter
xchg
pop
std
stos
mov
mov
xor
retf
mov
jp
in
push
fwait
jae
mov
lock
aad
jns
or
inc
xlat
test
inc
sub
or
scas
push
iret
add
fld
xor
mov
mov
or
cmp
dec
aas
adc
je
inc
xchg
mov
and
test
mov
fist
inc
sbb
sbb
mov
sbb
cwde
adc
jne
sub
mov
(bad)
pop
add
loope
push
fdivr
jmp
shl
call
out
or
mov
mov
iret
retf
dec
pop
mov
and
cwde
aad
and
test
pop
aaa
xchg
stos
xchg
push
and
jns
cmp
mov
fimul
push
mov
icebp
rol
int3
mov
sub
rol
cmp
lds
cdq
call
sub
jle
sar
pop
scas
jp
push
mov
mov
int3
jae
push
fbstp
(bad)
push
push
test
dec
cli
adc
clc
jnp
nop
cmp
jecxz
repz
mov
cmp
push
fld
mov
xchg
xor
mov
cli
sti
cli
std
mov
repz
in
sbb
push
push
dec
cmp
pop
inc
repz
iret
ret
mov
fcomi
rcl
out
sti
and
das
popf
mov
xchg
xor
mov
jno
or
(bad)
dec
stos
out
mov
and
hlt
setbe
bound
mov
add
(bad)
imul
movs
mov
add
add
mov
and
call
add
mov
cmp
mov
retf
aam
cs
retf
and
test
mov
enter
into
mov
popa
mov
xor
jmp
mov
jle
fst
(bad)
xchg
test
or
add
sbb
xor
fstp
sbb
add
add
ret
xchg
xor
dec
cs
leave
mov
scas
push
fst
push
(bad)
pop
mov
ss
jbe
call
test
jmp
push
out
fistp
dec
fst
mov
test
stos
and
in
(bad)
aad
pop
out
popa
jne
cmp
shr
das
push
fdivp
mov
dec
inc
xchg
pop
clc
ja
add
mov
adc
inc
xchg
out
(bad)
icebp
clc
jo
push
jge
aas
xchg
dec
jbe
fidivr
xchg
out
pop
in
pop
dec
add
out
xchg
push
loope
pop
mov
das
and
adc
fcmovne
mov
popa
rol
or
and
shl
test
fcom
push
(bad)
fmul
mov
xor
jnp
fild
jno
cmp
add
push
das
nop
popf
jmp
stos
inc
std
dec
ret
js
pusha
or
movs
clc
jne
ja
mov
retf
cdq
sbb
movs
push
sbb
aam
aad
mov
ds
or
push
scas
sub
mov
add
(bad)
shl
mov
add
mov
gs
(bad)
adc
inc
pop
dec
inc
and
inc
fnstcw
int3
xchg
add
inc
or
fwait
cmc
sbb
jle
mov
movs
adc
repnz
daa
cdq
data16
xor
scas
sar
mov
push
push
sub
jecxz
mov
aad
and
and
adc
sub
inc
sbb
xor
add
and
sahf
push
jno
stc
inc
icebp
cmp
mov
repnz
mov
inc
leave
mov
add
mov
xchg
cmps
pop
sbb
cmp
cmp
outs
mov
pop
jno
jle
push
aam
int
cmp
aas
xor
sub
iret
out
dec
dec
movs
bnd
jmp
(bad)
retf
dec
fsub
lods
mov
dec
xor
lock
aam
leave
cmp
fidivr
(bad)
in
std
cmp
arpl
je
adc
pop
fld
movs
mul
mov
pop
cs
push
aas
mov
lea
adc
fxam
jp
mov
xchg
jno
mov
sub
popa
hlt
repnz
xchg
call
icebp
add
mov
mov
pop
pop
(bad)
cmc
sub
test
sbb
inc
scas
test
sub
push
mov
xor
jmp
add
mov
adc
pop
cmp
or
adc
test
push
xlat
and
sbb
jne
ins
leave
fmul
cmp
arpl
xchg
stc
mov
(bad)
shr
xchg
mov
hlt
mov
jge
jle
adc
or
imul
cmp
lods
popa
pop
inc
sub
inc
loop
lock
xchg
lahf
sub
or
add
push
push
movs
cwde
loope
inc
add
lahf
cmp
xor
inc
icebp
fnstsw
mov
jge
jmp
shl
pop
out
rcl
push
or
and
mov
pop
ins
ins
in
sbb
cvtps2pd
cmp
mov
xlat
sti
iret
xchg
xor
sbb
pop
sar
sub
aam
in
cmp
push
push
retf
popf
push
sub
test
clc
xchg
es
jne
popf
jmp
pop
loopne
pop
xor
xor
mov
(bad)
mov
popa
nop
fs
inc
mov
sbb
push
cmp
push
pop
js
jg
(bad)
dec
loop
jp
sub
arpl
lds
mov
add
jno
(bad)
mov
aas
sub
xchg
test
(bad)
hlt
js
cli
imul
cmc
mov
fcmovnu
std
xchg
xchg
or
in
xchg
in
jge
popa
push
ds
mov
retf
jp
ds
add
adc
ror
adc
cmc
shufps
lods
adc
inc
ror
jl
movs
sbb
call
pop
dec
mov
dec
imul
test
imul
repz
dec
cmp
fstp
and
out
add
(bad)
pop
in
in
movs
sub
ins
sub
push
and
pusha
dec
push
(bad)
jns
int
and
outs
jno
fxch
mov
fld
in
jg
pop
cmps
dec
iret
jg
pop
hlt
mov
imul
ficom
retf
lods
and
es
push
retf
pop
adc
dec
dec
mov
sub
ror
(bad)
(bad)
call
jmp
and
in
cmps
outs
mov
rol
sub
(bad)
mov
dec
and
repz
push
and
call
pop
outs
dec
or
push
test
loop
xor
mov
and
les
popf
(bad)
std
adc
rep
in
out
fisttp
icebp
mov
pop
fist
pop
cdq
movs
mov
fidiv
inc
push
je
mov
and
inc
or
jp
inc
dec
dec
icebp
xor
aad
inc
shr
inc
pop
ja
push
nop
mov
sub
shr
dec
mov
inc
inc
and
dec
sbb
mov
sub
(bad)
or
cs
into
fidiv
sbb
jle
enter
cwde
cmp
and
xchg
gs
fwait
repnz
je
jno
fsub
or
fmul
call
(bad)
js
push
mov
sub
mov
es
pop
xchg
mov
cmps
imul
arpl
inc
and
aas
arpl
inc
push
fnstcw
push
cmp
sbb
out
xchg
mov
mov
outs
pop
add
cmp
outs
sbb
pop
sahf
and
sub
bound
sti
mov
imul
rol
pop
inc
in
in
push
sub
add
inc
outs
cmp
leave
dec
les
push
in
and
or
adc
xchg
nop
push
packuswb
out
movs
xchg
mov
xchg
and
movs
jbe
or
push
popf
mov
add
iret
ficom
dec
jno
and
xchg
add
adc
fdivr
rcl
dec
inc
ds
push
retf
(bad)
sub
fild
jecxz
(bad)
int3
test
clc
data16
push
adc
jp
inc
pushf
in
call
mov
pop
push
stos
add
inc
xchg
and
mov
call
mov
jne
and
inc
pop
jmp
xchg
lods
retf
repz
add
jbe
icebp
enter
xor
and
imul
xlat
ret
mov
or
xchg
loope
add
jp
je
sub
sti
inc
(bad)
ins
cs
add
aad
lea
push
aas
jmp
lds
dec
mov
ds
mov
icebp
add
mov
cwde
es
push
mov
add
retf
cmp
push
adc
jbe
rcr
out
and
push
sbb
jno
sbb
icebp
ret
mov
ret
jno
xchg
mov
and
pop
mov
ror
xor
mov
pop
(bad)
call
loopne
hlt
rcr
inc
cmp
enter
inc
sbb
outs
adc
rcr
stos
inc
jno
(bad)
mov
aaa
push
dec
ss
idiv
test
(bad)
dec
pop
mov
call
pop
push
jmp
std
lods
inc
loopne
repnz
dec
add
dec
stc
xor
mov
xchg
adc
pop
adc
jb
(bad)
lods
pop
pop
(bad)
mov
aas
dec
iret
fisttp
xchg
push
fist
and
je
mov
fld
inc
test
jne
pop
push
ss
add
dec
and
push
cmps
cmps
test
push
sahf
cmp
push
jmp
push
stos
pop
dec
sbb
push
add
jno
dec
je
sbb
push
sar
clc
sub
xchg
or
jae
mov
stos
sub
xlat
(bad)
enter
and
and
lods
dec
fidivr
(bad)
cmp
mov
out
lahf
xor
mov
fistp
pop
daa
jmp
mov
repz
xchg
div
xchg
dec
test
xchg
fdivr
movs
clc
hlt
mov
sub
fild
ficomp
jmp
cmp
ins
pop
sub
clc
sub
or
(bad)
dec
imul
and
xchg
sbb
pop
jg
cmc
(bad)
sar
cmp
and
push
out
lahf
mov
cmp
dec
mov
test
sub
dec
cmp
es
dec
ins
repz
lods
sbb
out
xchg
daa
stc
clc
cmp
pop
test
mov
in
inc
mov
fsub
fst
int3
sbb
mov
rcr
mul
mov
or
sbb
je
sub
call
and
inc
ja
jb
sub
xor
xchg
cdq
jbe
lahf
(bad)
jl
xor
and
add
jl
sub
les
jg
xchg
add
jmp
sub
push
lds
test
mov
adc
clc
xchg
push
mov
sbb
jle
into
xchg
sbb
adc
mov
leave
bound
call
fs
jge
add
or
into
in
mov
xor
leave
outs
cdq
mov
dec
pop
inc
aaa
xor
retf
pop
or
mov
mov
or
mov
push
call
sbb
xchg
adc
mov
imul
jge
sub
inc
mov
int3
and
pop
inc
out
and
mov
cmps
mov
mov
cmp
push
fild
out
adc
inc
xchg
cmp
cmp
xor
dec
pop
jnp
push
das
cdq
jle
imul
add
and
xchg
and
mov
jg
inc
inc
scas
lea
xor
lods
mov
sub
or
or
sub
xor
scas
lods
movs
push
pushf
mov
call
dec
shr
adc
fcom
jmp
lods
jb
retf
cmps
xlat
fistp
cmp
es
sbb
fmulp
fisttp
jnp
cmp
push
mov
xchg
xchg
das
mov
fcmovu
inc
retf
fcmovb
pop
ret
fistp
adc
mov
mov
pop
into
enter
stos
and
(bad)
xchg
xor
xor
cdq
stos
add
sub
xchg
stos
hlt
sub
repnz
sub
jmp
xchg
(bad)
mov
es
jge
inc
push
ret
push
xchg
adc
aaa
cmp
out
mov
pop
pop
popf
mov
scas
sub
add
sbb
push
dec
adc
sub
mov
inc
xor
inc
add
xchg
nop
cmp
cmc
jle
xchg
mov
pop
int3
mov
iret
movs
std
stc
inc
pop
in
sbb
pop
and
lods
test
mov
pop
add
movs
out
rcl
jmp
into
(bad)
retf
(bad)
neg
jno
into
aas
loop
and
xchg
cmps
sbb
(bad)
pop
pushf
test
jno
retf
stos
mov
ret
cmp
sub
cld
pop
pop
xor
cwde
sbb
aas
dec
cld
in
mov
cld
xor
jnp
adc
adc
rcl
sahf
and
nop
ss
and
aas
add
repz
out
sub
fwait
icebp
inc
hlt
mov
stos
call
ss
scas
xor
xchg
push
(bad)
adc
dec
mov
in
loopne
int
jb
push
mov
es
jle
aaa
jecxz
mov
bnd
retf
jge
in
cmp
inc
ret
cmp
stos
leave
inc
pop
int3
out
out
and
shl
push
cmp
aaa
add
(bad)
mov
je
out
pop
add
and
cmp
loope
hlt
(bad)
pop
aaa
mov
xor
pusha
jge
and
mov
movs
js
scas
add
imul
cmp
sbb
sar
pop
cwde
or
shl
sub
js
popf
or
xor
push
cmp
dec
adc
scas
jp
xchg
sbb
arpl
test
sub
fst
add
sub
xchg
cmp
dec
xor
fcom
pop
aas
dec
xor
push
lea
adc
inc
int3
mov
sub
mov
push
std
xchg
scas
dec
and
rol
xor
test
or
loope
adc
outs
icebp
out
inc
mov
or
scas
cmp
test
ins
lahf
(bad)
and
push
ins
es
jnp
loop
inc
lea
js
sti
(bad)
imul
pop
sbb
push
push
jg
xor
jl
in
pop
xor
lock
mov
mov
mov
add
mov
jae
in
js
cdq
add
aaa
shr
not
and
out
pop
movs
xor
out
and
cmp
add
fs
fiadd
scas
xor
mov
cmc
inc
pop
cli
iret
je
push
push
daa
fsub
aad
addr16
mov
push
stc
loop
and
dec
call
popf
test
bound
data16
cmc
(bad)
call
out
sbb
sub
dec
leave
add
and
cdq
pop
inc
in
inc
jecxz
cmp
cmp
cmps
xor
shl
pop
pop
xchg
jmp
pop
sub
inc
sbb
sbb
outs
mov
inc
addr16
sbb
fisubr
jo
je
emms
dec
push
cmc
inc
sahf
and
aam
mov
(bad)
pop
sbb
jp
xchg
popa
xchg
rcr
mov
lahf
aaa
push
and
daa
pop
ror
mov
jle
inc
xchg
gs
imul
mov
sub
jnp
mov
mov
int
push
and
jno
and
rol
test
mov
cmp
inc
loope
mov
arpl
out
sbb
fsubr
or
mov
in
out
push
inc
stos
cmp
or
loopne
push
or
lods
fldcw
das
xchg
dec
stos
addr16
shl
sub
fdiv
xchg
add
addr16
sbb
jno
dec
ss
cli
sub
rol
and
jg
dec
rcr
test
xchg
fisttp
(bad)
sub
xor
ds
jne
xor
mov
dec
mov
jmp
push
mov
cdq
push
or
stos
mov
aad
lea
scas
(bad)
fiadd
mov
fcomp
and
pop
aaa
pop
push
push
out
jge
test
dec
pop
xchg
ins
(bad)
rcl
fist
in
stos
daa
dec
xchg
inc
jecxz
or
mov
jge
jge
dec
fiadd
stc
mov
push
push
out
test
inc
cwde
mov
das
scas
fwait
xchg
ds
ret
xor
and
icebp
push
push
cmp
pop
rcr
xor
add
aad
in
cwde
jno
loope
dec
rcr
push
arpl
mov
bound
push
inc
mov
retf
inc
xor
rol
mov
jl
add
pop
xor
outs
rol
int3
inc
test
in
sbb
(bad)
pusha
cmps
pop
jbe
mov
popf
test
mov
jnp
xor
xor
lock
imul
sub
add
jl
ins
lds
pop
inc
cli
jle
jmp
retf
pushf
jmp
jecxz
dec
fwait
cmp
popf
mov
dec
mov
jmp
out
sbb
xor
adc
iret
test
inc
repnz
jo
xchg
dec
mov
rcl
dec
retf
inc
mov
mov
daa
push
inc
jmp
jno
xor
and
aad
mov
and
dec
inc
loopne
or
imul
mov
imul
mov
fsubrp
jbe
adc
jge
ja
pop
dec
pusha
jge
sub
or
imul
popf
aas
lods
popa
xchg
fmul
mov
push
adc
ja
cmp
pop
pop
jns
xchg
nop
inc
push
jle
cmp
ret
push
test
cs
xlat
sub
and
rcr
sub
lea
scas
leave
mov
pop
lds
mov
call
or
(bad)
stos
and
dec
dec
mov
pop
cmps
ret
loopne
(bad)
adc
jp
call
pop
sar
jg
scas
outs
mov
ja
mov
push
pushf
cmp
dec
add
push
repnz
(bad)
repz
and
and
sbb
pusha
shr
push
xchg
arpl
mov
lods
mov
dec
jb
lods
leave
and
xor
mov
call
outs
loope
jle
stos
dec
jp
pop
daa
(bad)
mov
dec
xchg
(bad)
aam
mov
inc
repnz
lds
out
(bad)
mov
and
xchg
inc
je
loopne
or
js
pop
scas
and
aam
movs
xor
mov
adc
pop
xchg
test
retf
cmps
xchg
(bad)
push
jl
push
mov
ins
xchg
pop
fdiv
push
adc
sbb
lods
dec
cdq
ret
fcmovnbe
scas
sbb
ror
mov
jno
inc
adc
cmc
lock
sbb
or
mov
out
mov
cwde
ins
scas
inc
nop
imul
and
sbb
idiv
fwait
nop
mov
out
lds
fs
xor
xchg
and
(bad)
call
and
pop
lods
dec
or
imul
popa
lods
cmp
adc
mov
xor
pop
fstp
sub
sar
xchg
pushf
pop
lods
sub
push
push
les
ins
in
mov
stos
enter
loope
test
add
dec
pop
or
cdq
and
stos
in
pop
or
xor
mov
mov
xor
sbb
cmp
or
push
push
mov
and
pop
daa
test
iret
test
or
call
jbe
push
rcl
jo
push
and
cmp
jge
ins
popa
mov
fild
cdq
sbb
(bad)
jle
xlat
inc
test
dec
inc
inc
add
xor
pop
sub
mov
xchg
sbb
ror
(bad)
sub
in
call
sbb
popf
mov
fild
push
shl
jg
cld
mov
call
dec
ins
pop
fisub
cmp
and
movs
stos
dec
mov
mov
cmp
sub
xor
add
(bad)
fs
icebp
push
or
stc
cld
cmp
pop
xlat
pop
(bad)
mov
or
popf
and
add
fdiv
mov
adc
popa
pop
dec
lods
inc
fisttp
pop
icebp
mov
daa
adc
mov
into
xor
xchg
or
and
mov
sahf
inc
jo
rcr
pop
lahf
outs
adc
mov
add
stos
scas
jnp
push
call
xchg
mov
cwde
jecxz
mov
les
test
cmp
lods
loop
cli
mov
cli
mov
int
pop
pushf
mov
mov
add
push
inc
mov
ds
push
adc
and
mov
ror
rol
movs
repz
sub
cld
push
sar
cmp
add
loope
lods
inc
scas
lock
popf
call
sti
mov
add
push
sub
sub
push
cld
sbb
xchg
sbb
jle
mov
cmps
stos
fisubr
lods
movs
xchg
out
ins
arpl
and
pop
dec
xor
add
fwait
repnz
lds
les
add
or
xchg
push
dec
icebp
cmc
add
mov
sub
mov
mov
or
cmp
jo
ret
push
mov
or
movs
mov
add
out
dec
stc
xchg
clc
dec
call
aam
lods
cmp
sub
call
xor
call
stc
push
xchg
movs
dec
sbb
in
loop
scas
adc
add
stc
jbe
comiss
jmp
dec
jo
lahf
cmps
jl
test
adc
inc
in
or
cwde
cmp
repnz
xlat
lods
jns
iret
cli
sbb
xchg
outs
int3
dec
sub
les
shl
das
sub
adc
outs
sub
jbe
cmp
lods
inc
fs
jle
das
xchg
frstor
imul
arpl
and
in
mov
shl
pop
bound
data16
stos
cmp
gs
test
les
out
jmp
repnz
call
arpl
(bad)
jbe
add
vpcmpeqb
inc
xchg
int3
loopne
mov
xchg
mov
in
push
jp
dec
call
stos
loop
out
iret
mov
jge
inc
adc
push
inc
mov
aaa
sbb
outs
jo
add
lahf
jb
mov
xchg
inc
mov
xlat
jno
pusha
daa
(bad)
adc
and
xor
jle
mov
in
fdivr
test
cmp
les
hlt
pop
test
aad
pop
jbe
push
ror
xor
(bad)
dec
repnz
fwait
(bad)
mov
loop
xchg
and
imul
fisttp
jmp
pusha
xchg
test
out
stos
or
jp
aam
ror
lods
jl
pop
std
popf
mov
lods
dec
ficom
rol
bound
mov
sbb
push
sbb
add
push
mov
out
mul
xlat
adc
jecxz
mov
mov
(bad)
(bad)
jl
pop
xchg
outs
fs
(bad)
fiadd
retf
inc
aas
push
ss
cmp
mov
pop
and
or
shl
jle
retf
leave
sub
ss
adc
or
sbb
(bad)
adc
retf
stos
cmp
jb
dec
stos
in
mov
pop
aas
rol
enter
leave
loopne
xor
add
loop
push
rcl
test
adc
or
ja
mov
fwait
and
scas
ja
ins
out
scas
adc
xchg
mov
ins
inc
icebp
inc
xor
icebp
push
sbb
lock
test
mov
dec
ja
mov
out
mov
adc
into
shl
adc
push
fstp
fidiv
aas
xchg
adc
jno
mov
hlt
cmp
retf
pop
xor
or
mov
repnz
mov
sub
xor
cdq
push
das
imul
mov
jo
pop
and
push
retf
clc
push
mov
int
and
xor
cs
ins
or
jle
mov
int
mov
cmps
mov
fnstenv
loope
jg
jge
or
test
mov
fld
fwait
xchg
cmc
inc
pop
jmp
or
outs
or
dec
shl
push
retf
xor
jp
push
sub
dec
sbb
xchg
cmp
nop
aaa
dec
inc
jbe
or
inc
mov
pop
retf
mov
or
add
push
into
xchg
mov
(bad)
xlat
push
loop
adc
add
sbb
imul
jl
ins
adc
sub
pop
imul
stos
jle
adc
popf
pop
shl
mov
sbb
and
dec
xchg
push
mov
sahf
push
and
mov
add
jbe
inc
push
inc
les
lea
dec
xchg
add
(bad)
popf
push
pop
outs
mov
stos
mov
divps
and
pop
(bad)
fsubr
int
mov
mov
fiadd
test
xchg
push
jp
cmc
fstp
xor
jecxz
dec
ffreep
add
ja
loop
idiv
push
pop
imul
xor
jae
push
je
jno
addr16
cs
int
adc
push
dec
addr16
mov
xchg
jg
xor
push
xlat
ffree
pop
cs
push
rcl
push
mov
(bad)
push
or
jne
cmp
sbb
inc
sub
enter
into
daa
imul
imul
pop
xor
pop
add
push
movlps
mov
xchg
es
pop
in
das
lds
imul
test
cmp
aam
adc
inc
fld
cmp
(bad)
sub
mov
int3
loopne
outs
test
loopne
sahf
add
push
pop
jmp
je
(bad)
sub
mov
aam
lea
sub
xor
movs
mov
xor
sbb
push
lods
aaa
ret
and
cmp
sbb
dec
mov
mov
ins
dec
mov
push
fstp
loope
fild
mov
vpshufhw
dec
enter
fld
movs
out
in
aad
pop
jecxz
into
mov
sbb
stos
imul
mov
add
xlat
mov
lds
shl
int3
adc
mov
cwde
aad
les
js
adc
inc
add
aad
mov
rcl
push
lods
shl
pop
cs
js
jnp
xor
add
jnp
or
and
jnp
pop
push
sub
repz
movs
cwde
mov
retf
repz
pop
or
adc
stos
pop
jmp
pusha
jle
(bad)
push
iret
in
enter
mov
test
sub
fcom
inc
cmps
test
adc
mov
test
mov
cmps
xor
ror
sub
call
adc
xchg
addr16
xor
(bad)
(bad)
or
das
out
mov
out
jmp
out
xchg
data16
or
add
or
in
push
sti
mov
mov
xor
lahf
pop
adc
stos
add
add
out
xchg
in
mov
mov
and
dec
cwde
jg
xchg
in
mov
pop
cmp
retf
stos
add
ins
and
outs
sti
pop
xchg
jmp
inc
dec
cmps
adc
sti
cmp
retf
xchg
std
mov
clc
fwait
inc
out
push
and
mov
cmp
aam
iret
adc
outs
popf
cmp
fcom
fisubr
xchg
rcl
imul
sub
cmp
les
xor
jg
mov
(bad)
sti
loop
mov
fldcw
and
xor
lds
pop
fwait
js
xchg
xor
mul
or
adc
call
cmp
and
outs
(bad)
jp
sub
popf
and
mov
inc
retf
nop
push
dec
xor
xor
cmp
sti
ss
and
push
jno
sahf
push
push
cld
iret
xchg
sub
call
cmp
call
push
ins
call
(bad)
leave
adc
dec
loope
jl
add
shr
shr
lods
lods
icebp
jmp
adc
push
pop
mov
pop
cmps
jmp
iret
and
fs
push
add
cmps
dec
dec
push
mov
or
cmp
mov
stos
sub
lods
xchg
lock
lahf
test
fistp
mov
ja
test
xchg
and
dec
sub
jo
popa
pop
fadd
mov
hlt
mul
js
movs
mov
(bad)
in
in
mov
pop
xchg
fwait
mov
shl
scas
bound
sbb
sar
cmp
xchg
popf
jnp
push
jmp
adc
pop
out
lods
push
mov
or
and
scas
jo
inc
xchg
cmp
cmp
adc
aam
jnp
cli
or
outs
mov
push
sub
add
cmp
out
push
push
dec
mov
mov
cmp
mov
push
sub
iret
jno
jecxz
aaa
fiadd
dec
out
sti
aas
in
call
(bad)
shl
lea
pop
pop
jne
sahf
fimul
jb
shl
outs
sub
adc
sub
inc
push
push
pop
adc
and
bound
mov
inc
aad
mov
xor
xor
cmp
out
repz
inc
inc
(bad)
or
and
test
xchg
mov
div
mov
inc
data16
(bad)
and
sahf
ret
pop
rol
shl
jmp
mov
fmul
pop
(bad)
mov
dec
lahf
into
dec
jnp
fnstsw
add
mov
stc
jmp
sub
jo
ret
rol
js
out
xor
pop
div
into
jmp
xor
inc
hlt
scas
shl
pop
pop
clc
(bad)
int
fsub
xchg
add
lds
out
mov
xlat
loope
cmps
ret
cmp
push
loope
mov
xchg
int3
(bad)
sub
jle
xchg
arpl
push
inc
pop
pop
pop
aam
sbb
cli
movs
idiv
ror
aad
lock
xchg
outs
dec
push
inc
imul
das
clc
mov
mov
in
aaa
push
mov
dec
cmps
aad
cmp
mov
sahf
add
xor
mov
mov
dec
jns
movs
dec
sbb
inc
int3
sub
xor
inc
mov
sbb
push
aas
pusha
js
adc
add
add
idiv
test
jns
lea
dec
ret
adc
xchg
or
mov
(bad)
outs
xor
jo
fild
repz
lahf
icebp
fnstsw
arpl
fs
fldcw
jmp
imul
fidivr
popf
lods
mov
ja
movs
cld
scas
mov
pop
push
shl
xchg
inc
int
mov
nop
add
es
or
cmps
mov
or
cmp
sub
add
rol
movs
inc
push
cwde
(bad)
dec
mov
mov
cdq
das
bnd
xor
jmp
jge
stc
or
int3
sti
add
adc
push
leave
call
mov
inc
aad
push
nop
sub
add
test
stc
out
call
dec
mov
fsub
inc
movs
retf
xchg
mov
ja
inc
(bad)
retf
int3
shl
inc
out
pop
mov
xor
mov
fwait
out
push
not
add
add
shl
and
adc
mov
and
or
rcr
idiv
dec
jno
sub
test
mov
repz
mov
xchg
in
dec
int
movs
out
jo
mov
adc
loop
push
pusha
ja
and
(bad)
retf
mov
fsub
lods
icebp
dec
jl
daa
scas
jg
add
jecxz
(bad)
push
popa
ret
pop
dec
shl
dec
push
xchg
int
sar
add
(bad)
sbb
pop
mov
not
in
scas
cmp
push
mov
(bad)
lea
call
je
cmp
dec
(bad)
push
cld
dec
pop
scas
cmp
ins
adc
jnp
xchg
das
les
loop
inc
add
icebp
and
es
mov
push
repz
cmps
mov
dec
fadd
leave
mul
and
fldenv
cmp
iret
test
test
xchg
dec
dec
jmp
das
out
push
lds
dec
xor
out
test
jmp
mov
xchg
and
jge
scas
(bad)
loop
ins
scas
in
aam
or
(bad)
scas
pop
je
mov
cmc
cmc
popf
fs
mov
inc
mov
xor
jmp
adc
inc
mov
data16
sar
mov
mov
xchg
push
call
pop
ret
inc
ret
aad
mov
lods
mov
out
sbb
enter
sbb
in
out
pop
push
mov
pop
inc
inc
add
movs
stos
aaa
(bad)
cmps
add
lahf
mov
in
ja
push
pop
or
xor
sub
lods
jnp
add
xchg
or
scas
inc
and
xchg
or
(bad)
imul
fist
out
pop
pop
mov
lods
add
sbb
lock
fdiv
inc
cmp
dec
fs
out
sbb
shl
mov
in
lahf
xor
xor
add
leave
dec
pop
hlt
mov
ja
fdiv
inc
jge
int
jl
sbb
push
xor
push
or
add
int3
xor
scas
jge
mov
movs
fldenv
pop
jmp
mov
mov
ss
jmp
xchg
add
fidivr
push
dec
in
rcl
mov
fwait
mov
test
add
jmp
in
icebp
lock
sbb
adc
inc
sub
push
cs
pushf
pop
pushf
and
mov
loopne
xor
push
xchg
add
icebp
pop
in
movs
push
add
mov
xchg
add
sar
jo
dec
addr16
adc
fcomp
out
xor
stc
bsf
jmp
sub
mov
adc
jmp
xor
cld
sub
push
xlat
jp
push
jmp
das
stos
add
mov
sbb
ss
pusha
xor
stos
popf
cli
sub
sbb
adc
repz
sub
mov
(bad)
int3
sbb
repz
adc
xchg
pop
aam
xchg
xlat
or
loop
(bad)
mov
icebp
sub
iret
pop
dec
and
jmp
sub
add
test
ret
adc
not
rcr
xor
sub
leave
pop
push
daa
dec
adc
xor
jne
cwde
sub
addr16
movs
sub
push
add
jecxz
mov
sahf
fcmovb
(bad)
pop
add
xchg
cmp
adc
ret
inc
enter
int3
pop
mov
xor
clc
or
sbb
add
sub
sbb
add
sti
stos
and
or
and
retf
icebp
int3
xchg
loop
adc
pop
xor
lock
loop
shr
or
push
cwde
add
xchg
sbb
jl
cld
pushf
pop
jle
and
push
ret
rcl
mov
sbb
mov
sbb
mov
jecxz
adc
jne
xlat
imul
sbb
mov
or
in
jl
mov
inc
mov
popa
clc
adc
cwde
push
(bad)
(bad)
leave
xor
aam
dec
scas
scas
ret
xchg
dec
xor
inc
sbb
inc
xor
dec
clc
in
std
xchg
push
shr
sar
out
ret
jo
add
xlat
inc
push
imul
fwait
ins
imul
pop
bound
and
popf
xchg
xchg
push
ins
cli
and
fdivrp
out
jmp
repnz
in
mov
mov
cmp
(bad)
bound
in
ror
jp
mov
jmp
into
or
inc
stos
cli
jb
ins
or
mov
into
push
outs
in
and
(bad)
ds
and
fwait
js
movs
xchg
cli
or
push
push
cwde
lods
push
cmps
cmc
lahf
fimul
dec
ret
shl
aaa
sub
aad
into
les
pop
jmp
sti
hlt
inc
jnp
int3
jb
fistp
call
in
jmp
cwde
retf
jns
inc
mov
inc
cmp
cs
cmc
push
sbb
std
ror
pop
jecxz
movs
ret
bound
push
jne
inc
and
sbb
mov
adc
adc
cmp
xchg
iret
lock
or
pop
xchg
push
rcl
mov
push
add
out
gs
xor
mov
sub
int3
adc
jbe
sub
js
inc
fild
mov
call
ret
cmp
movs
jb
bswap
xchg
mov
pop
mov
jle
pop
and
jae
mov
gs
or
push
repz
push
retf
push
test
rcr
and
xor
xor
mov
add
cmp
sbb
lock
dec
lea
cmp
mov
cld
xchg
jmp
fcomp
shr
fs
fiadd
dec
or
nop
sub
jl
leave
add
sub
jmp
loope
push
loopne
cmps
or
call
loope
mov
movs
out
pop
inc
test
aaa
in
out
push
mov
(bad)
mov
pop
push
add
(bad)
push
mov
mov
inc
es
xchg
popf
and
bnd
and
and
or
push
mov
lods
adc
movs
xchg
sbb
mov
sti
fsub
lea
addr16
mov
and
or
gs
add
inc
mov
fstp
cwde
push
mov
cmp
pop
not
and
sub
pop
fnstsw
sub
xor
mov
jae
lock
inc
not
and
xchg
or
(bad)
mov
sar
and
jle
mov
pop
les
dec
cmp
jne
dec
sbb
dec
mov
xchg
pop
rep
lea
jp
movs
cld
out
bswap
mov
mov
or
push
push
fnstcw
jg
xchg
adc
sub
mov
jle
jle
xchg
cmp
test
push
fld
nop
sub
add
(bad)
jns
fwait
stos
pop
sbb
lea
xor
ins
jns
mov
icebp
mov
mov
and
adc
cld
sbb
sti
push
in
xor
push
outs
jl
xchg
(bad)
in
dec
pop
cld
data16
xor
pop
cld
call
daa
pop
dec
and
div
inc
xchg
sar
stos
add
adc
pop
mov
mov
aad
mov
pop
inc
les
out
pusha
std
sahf
out
mov
push
pop
out
jle
ret
fs
inc
push
add
sahf
or
xchg
pop
bsf
mov
(bad)
(bad)
xchg
pop
mov
or
mov
pusha
jb
xor
das
int
inc
fdivr
add
or
xchg
add
fnstcw
inc
and
outs
in
loop
add
xchg
(bad)
test
mov
pop
push
sub
sub
sbb
test
xlat
push
iret
jb
add
cmp
xchg
shl
inc
add
sub
and
push
mov
jg
mov
shr
cmp
test
out
inc
xor
or
mov
or
stos
popa
mov
jnp
les
and
std
add
fidivr
push
not
push
(bad)
adc
mov
xor
cmp
mov
mov
pusha
jne
adc
cli
and
jno
ret
sbb
ds
mov
adc
adc
out
inc
pusha
fdiv
fimul
jg
pop
jmp
call
imul
dec
jle
jmp
hlt
xlat
and
das
xor
cld
fsub
shr
adc
stos
mov
mov
push
stos
pop
test
xor
shl
gs
sub
les
out
cmp
pop
arpl
push
jmp
push
sub
scas
mov
jo
mov
loop
call
pop
cmps
lods
hlt
sbb
test
pop
adc
mov
(bad)
ret
lds
int
add
daa
jp
mov
lds
adc
jne
bound
mov
lea
xchg
leave
(bad)
cmp
jp
fcmovb
mov
arpl
and
jo
sti
and
sub
hlt
inc
dec
sub
int
cmps
and
gs
aam
jae
xchg
fcom
or
sbb
enter
adc
xor
push
ror
sbb
lahf
or
fwait
mov
dec
in
xchg
bound
dec
push
mov
mov
inc
in
add
cmps
imul
shl
lods
fnsave
fwait
out
dec
(bad)
int3
cmps
sahf
dec
movs
mov
icebp
jne
jmp
sub
rol
inc
xor
or
jecxz
sbb
xchg
sti
adc
movs
iret
stos
mov
or
cli
mov
ret
mov
push
cdq
jnp
movs
test
sti
jne
ret
push
cmps
inc
xor
xor
pop
add
fiadd
out
cmp
push
(bad)
cmc
bound
(bad)
call
inc
nop
fdivp
mov
push
xchg
mov
je
dec
arpl
dec
aam
loopne
add
loopne
lds
pop
inc
int3
mov
sbb
into
mov
cmp
sti
mov
mov
adc
fwait
loope
retf
shr
ds
aas
or
dec
sbb
xchg
add
xor
pop
jae
mov
mov
xchg
aad
adc
enter
mov
xchg
ins
adc
inc
call
xrelease
xchg
loopne
in
fwait
in
inc
jno
out
jne
psllq
dec
and
ss
xlat
xor
aad
fcom
movs
jle
mov
lahf
cli
(bad)
push
xchg
xor
pop
xor
and
loopne
add
call
xchg
xchg
mov
push
aad
inc
imul
imul
push
dec
or
jg
jge
xor
mov
add
daa
sbb
aaa
fwait
bound
ins
jmp
sbb
leave
jmp
popf
je
mov
fdiv
scas
push
outs
mov
rol
dec
add
dec
mov
enter
jl
add
outs
xchg
ret
xchg
push
cli
loopne
fisttp
icebp
fisttp
cmp
sub
les
xchg
lods
daa
nop
pop
out
cld
pop
call
pushf
and
inc
call
fadd
aad
into
bound
pop
stc
mov
aad
and
stc
out
test
jb
(bad)
push
inc
icebp
dec
jmp
test
adc
push
dec
test
add
call
cmp
push
stos
xor
int
dec
dec
inc
aad
push
leave
mov
dec
mov
addr16
div
cmp
ror
cld
nop
xchg
mov
and
fild
dec
sti
add
xchg
ret
push
stc
(bad)
shl
das
pop
ss
mov
pop
cld
fs
cmp
jb
dec
mov
adc
jo
stos
push
mov
and
imul
mov
in
mov
into
rcl
adc
sahf
stos
pusha
jno
sub
stos
movs
out
mov
xchg
imul
mov
imul
pop
sub
fsub
inc
or
pop
scas
in
jp
push
cmp
sub
sbb
repz
dec
in
jge
mov
sahf
add
(bad)
mov
mov
pop
adc
in
out
lea
inc
popf
push
mov
inc
mov
stc
jb
in
cmp
call
pop
or
mov
sbb
push
lods
push
adc
mov
pusha
ds
mov
mov
sbb
cwde
and
xchg
cmp
hlt
mov
xlat
aas
sbb
test
jne
(bad)
fadd
aas
mov
sti
icebp
cdq
and
iret
(bad)
out
outs
push
(bad)
dec
outs
je
loope
pushf
ror
retf
mov
cmps
push
cli
mov
outs
retf
mov
adc
cmp
ss
push
pop
call
push
mov
jns
or
data16
jle
inc
sbb
arpl
xchg
ror
mov
xchg
call
jecxz
movs
sbb
push
lods
mov
adc
sbb
or
repnz
cmp
xchg
ficom
int
jmp
mov
mov
mov
fcomp
(bad)
push
and
mov
dec
pushf
jmp
jnp
ds
das
cmps
push
mov
cld
arpl
mov
mov
lahf
hlt
out
inc
inc
add
xchg
xor
add
ins
or
clc
lods
or
enter
aam
xchg
in
jmp
push
and
xor
in
inc
mov
scas
pusha
cmp
bound
loop
les
lds
cmp
inc
mov
mov
pop
sub
loop
push
out
mov
sahf
xor
pop
xchg
add
pop
pop
xchg
lods
aam
pop
mov
pop
les
cwde
retf
arpl
adc
push
xor
cmp
adc
sub
push
mov
jle
push
dec
je
stc
outs
call
int3
nop
les
lea
cmp
or
sbb
call
push
or
(bad)
adc
test
test
test
sti
pop
fimul
jmp
mov
das
mov
jbe
cmp
mov
jne
mov
sub
mov
xor
jns
inc
or
stc
sbb
cmp
(bad)
(bad)
scas
mov
xchg
mov
mov
inc
jge
shl
ja
call
pop
mov
inc
or
adc
bound
lds
push
shl
xor
push
mov
int3
out
xor
icebp
fldenv
daa
push
pop
jg
jb
lods
(bad)
lock
push
or
push
sbb
add
sub
cwde
xchg
xchg
arpl
ret
pop
repz
and
mov
lods
les
daa
add
sub
out
jle
jecxz
push
(bad)
fidivr
push
retf
jo
adc
cmps
push
mov
mov
pop
pop
daa
cmp
repnz
pop
mov
push
aam
xor
inc
jns
and
aaa
data16
test
mov
sbb
fwait
imul
stc
(bad)
clc
push
sbb
adc
mov
shl
mov
ss
sbb
mov
call
push
addr16
cmp
add
pushf
jnp
push
cli
ffreep
add
jns
or
inc
push
fcomp
pop
add
jbe
sti
inc
loope
mov
loopne
xchg
mul
mov
jbe
ror
cmp
inc
daa
cmps
cmp
into
bnd
adc
xchg
jno
xor
rol
sahf
xchg
jl
adc
dec
aas
xchg
in
jae
repz
xchg
fnstcw
dec
ins
inc
clc
retf
or
xchg
enter
add
or
sbb
add
inc
popf
xchg
cmps
xchg
push
mov
arpl
stc
jae
jns
mov
jnp
sbb
jp
push
and
mov
les
(bad)
cmp
pop
pop
sbb
retf
push
sub
jns
pop
int
shl
fs
mov
xchg
xchg
xchg
push
xchg
(bad)
into
imul
jmp
test
lods
aas
sti
jmp
scas
mov
idiv
xor
(bad)
out
ret
mov
mov
aaa
xchg
add
scas
jmp
dec
test
jmp
push
imul
pop
sub
jmp
push
out
dec
or
jb
stos
dec
loope
sub
jnp
push
lahf
(bad)
cmp
sub
sbb
mov
loop
jns
in
dec
mov
xor
or
and
jge
les
push
aad
fsubr
sti
rcl
repz
jg
add
cmc
or
into
int3
data16
ficomp
sbb
aas
mul
(bad)
inc
imul
push
mov
icebp
stc
push
imul
pop
out
or
push
mov
xor
fild
jecxz
out
pusha
cwde
add
popf
dec
fsave
xchg
push
repnz
dec
xchg
push
mov
(bad)
cmc
or
dec
dec
mov
sub
ins
jb
cmp
mov
inc
imul
xchg
ficom
jge
and
mov
jne
dec
mov
add
mov
stc
rcr
bound
push
push
loop
imul
push
xchg
popa
push
cmp
fbld
out
dec
jp
xor
pop
xor
xor
pop
xchg
push
or
pop
push
(bad)
jnp
out
sbb
ror
out
pushw
cmp
retf
lods
adc
xchg
cmp
data16
dec
stc
sub
add
mov
mov
fbstp
sub
adc
push
jmp
fld
add
pop
inc
aam
mov
mov
aad
imul
mov
out
pop
test
adc
pop
inc
jno
(bad)
fcomip
pcmpeqd
add
push
cmc
(bad)
adc
push
mov
inc
jae
or
mov
cmps
adc
jo
pop
outs
adc
dec
pop
loop
imul
retf
lahf
(bad)
cli
ret
fld
mov
sbb
dec
pop
ror
push
xchg
in
call
imul
add
retf
loop
fcomi
add
ins
cmp
ret
xchg
pop
int
out
gs
mov
adc
mov
xchg
(bad)
out
jne
sbb
pusha
xchg
mov
in
pop
cld
add
jb
xchg
iret
xor
adc
nop
test
adc
out
test
dec
and
pop
jmp
mov
es
or
(bad)
mov
push
add
mov
sbb
jl
inc
jne
mov
push
stos
jne
jo
out
iret
vmread
das
adc
xlat
cmps
pop
(bad)
js
pushf
and
sbb
mov
fiadd
pop
pushf
dec
or
adc
adc
out
add
dec
xchg
out
xchg
push
cmps
in
pop
add
xchg
jge
mov
add
push
cmp
movs
jmp
call
mov
mov
xor
rcr
ja
add
aas
std
fwait
nop
(bad)
push
mov
xchg
adc
icebp
push
sahf
xchg
stos
fidiv
fwait
int
jb
push
xchg
xor
push
and
push
mov
es
cmp
fist
pop
ficom
rol
cmp
popf
call
and
ja
movs
jg
sub
es
and
and
jb
fsub
xchg
inc
scas
in
cmp
mov
sub
dec
sub
mov
(bad)
imul
jae
push
add
mov
std
push
aam
sub
fild
popf
push
sub
test
inc
lods
mov
pop
and
and
cli
sub
inc
mov
inc
cmp
and
fcomp
adc
or
(bad)
jne
in
sbb
mov
test
and
xchg
jbe
cmp
add
imul
push
test
idiv
cmp
mov
pop
jae
xchg
push
mov
jl
stos
push
shl
sub
and
mov
in
outs
mov
scas
mov
sbb
or
jg
je
leave
mov
add
pop
stos
call
inc
inc
jmp
out
push
enter
aad
sbb
and
jecxz
jb
cmp
inc
mov
fidiv
push
hlt
inc
mov
jl
add
and
aam
gs
jae
jb
mov
add
mov
pop
lods
sahf
mov
test
pop
push
mov
(bad)
sbb
cmp
push
dec
mov
sub
add
or
fidiv
leave
and
loopne
pushf
hlt
xor
mov
push
stc
dec
jle
mov
inc
adc
cmc
sbb
ins
mov
cmps
or
mov
sub
shl
aaa
xchg
cwde
je
cdq
xadd
scas
pop
call
jnp
enter
mov
xor
sbb
fst
(bad)
(bad)
mov
sub
into
sbb
jno
scas
hlt
sub
lods
icebp
int3
mov
sbb
dec
and
jo
xor
jns
in
and
push
push
fistp
iret
aaa
jp
outs
sbb
enter
imul
push
fwait
(bad)
out
xchg
push
cdq
sub
inc
mov
lods
or
mov
adc
add
lds
nop
inc
cmp
enter
fs
push
clc
add
add
es
mov
inc
outs
movs
test
test
or
and
inc
(bad)
out
inc
(bad)
(bad)
xchg
mov
pop
loopne
inc
test
xor
aaa
or
inc
mov
push
popf
push
add
es
adc
mov
mov
sub
mov
cmp
int
sub
imul
repnz
sub
and
jbe
adc
call
mov
mov
jno
xor
lods
ins
adc
and
push
mov
sbb
in
adc
in
sbb
xlat
lock
(bad)
xor
dec
in
mov
sbb
jne
lock
or
loopne
fstp
jg
xor
fmul
sub
pop
add
or
(bad)
pop
or
and
xchg
mov
data16
pop
(bad)
pushf
lds
pop
test
ss
js
fnstcw
outs
shl
scas
mov
mov
xor
push
dec
(bad)
dec
xchg
xor
fadd
sub
dec
add
jmp
add
in
test
push
popf
ror
test
jg
or
movs
retf
fnstcw
or
inc
jge
mov
dec
retf
test
(bad)
lock
jecxz
dec
loop
imul
out
xchg
out
push
test
push
xchg
(bad)
ins
test
xor
jae
(bad)
aas
std
inc
dec
(bad)
push
repnz
fstp
push
fcomp
(bad)
mov
mul
mov
sti
retf
cs
ins
xor
push
inc
jl
mov
lods
mov
adc
div
outs
aas
dec
out
add
lods
and
arpl
or
xchg
and
nop
or
push
sub
loop
inc
add
aad
mov
pop
sbb
int3
into
dec
or
hlt
jo
jns
adc
in
push
jne
mov
(bad)
mov
repnz
xchg
mov
sti
sub
inc
dec
sbb
cmc
jnp
cmp
lahf
es
or
mov
(bad)
push
rcr
scas
cmc
push
shr
pop
test
jle
mov
jnp
imul
mov
int3
sbb
(bad)
mov
movs
clc
add
movs
mov
out
lock
test
stc
iret
cli
add
leave
pop
shl
test
inc
ins
test
mov
cld
mov
mov
jecxz
sbb
add
fs
pop
scas
mov
jmp
loopne
ins
data16
ja
stos
fmul
sbb
jbe
sti
rcl
sub
pop
inc
xchg
pop
aaa
popa
aaa
cld
jns
push
sub
stos
fld
stos
iret
mov
inc
xlat
shr
daa
jb
in
dec
mov
mov
add
cwde
leave
or
idiv
loope
lods
bound
sub
add
test
inc
ds
inc
retf
in
fwait
inc
mov
cmc
fcomp
int3
sahf
xchg
loop
cmp
fist
jbe
cli
call
shr
pop
jge
xor
adc
pop
sbb
call
dec
jle
ret
xor
push
in
push
sahf
test
push
lods
inc
pushf
sbb
jnp
stos
pop
in
gs
or
out
stc
push
push
sar
sub
imul
loop
clc
inc
mov
movs
sbb
mov
sti
inc
into
fist
in
test
ds
pop
iret
mov
mov
xchg
mov
mov
ret
cmp
in
shld
adc
adc
adc
and
(bad)
and
dec
push
jo
and
int
into
inc
mov
push
cmps
ficomp
cli
xchg
imul
mov
mov
push
mov
mov
(bad)
sbb
aaa
fadd
aam
push
rol
mov
mov
cmp
jecxz
sbb
dec
mov
je
xchg
mov
push
dec
pusha
jmp
push
idiv
add
adc
dec
adc
lahf
scas
sbb
sub
test
push
adc
mov
cmp
je
retf
adc
sbb
leave
fwait
arpl
ss
clc
and
mov
rcl
xchg
je
lahf
lea
jbe
loope
sub
sbb
inc
fiadd
out
inc
dec
jns
out
retf
and
add
call
ja
rcl
xor
fs
sub
mov
mov
movs
call
movs
das
fidivr
or
inc
sbb
push
push
mov
rcr
dec
jbe
xor
lods
pop
fsubr
adc
sub
nop
and
out
mov
dec
xrelease
xor
outs
je
imul
cmp
out
dec
fild
mov
sub
cmp
repz
lea
mov
and
fstp
aaa
daa
push
jecxz
mov
sub
sub
mov
imul
repz
mov
iret
adc
sbb
(bad)
outs
cmp
das
retf
rol
push
jp
pusha
cmps
fnstenv
push
push
(bad)
cmc
xor
xor
pusha
push
pushf
jmp
out
xchg
cmp
add
sbb
push
iret
mov
popf
dec
xor
jmp
fistp
jge
mov
ins
jle
sahf
sub
fist
jmp
push
or
mov
mov
inc
jns
cmps
dec
pop
inc
xchg
fstp
or
iret
stos
cmps
inc
das
int3
jecxz
mov
mov
loop
and
push
sbb
icebp
ror
adc
repnz
and
mov
or
into
jno
scas
(bad)
jns
adc
and
scas
into
sub
icebp
sti
gs
clc
loope
fs
mov
pop
test
sbb
inc
mov
imul
sbb
inc
sar
sbb
xchg
fisubr
xor
mov
mov
std
adc
popf
(bad)
adc
loope
or
sbb
mov
loop
jmp
mov
push
repnz
les
(bad)
mov
test
imul
xchg
(bad)
pushf
jae
pop
or
sbb
test
jg
fsub
fmul
cmp
xchg
pop
iret
jmp
mov
into
das
jb
push
test
sub
xor
and
mov
das
mov
stc
shr
jns
push
pop
lods
rcr
sbb
push
xor
pop
(bad)
in
inc
mov
pop
mov
add
ja
mov
inc
outs
(bad)
retf
adc
(bad)
mov
(bad)
jge
clc
mov
(bad)
and
sbb
cli
not
sar
mov
popf
sbb
jno
lock
cld
call
mov
mov
fstp
retf
sub
dec
popf
mov
scas
(bad)
ja
into
jge
jle
mov
add
jno
cmp
mov
push
retf
add
adc
sbb
inc
xor
das
bound
mov
jg
pop
hlt
(bad)
pop
jae
cmc
lock
clc
and
xchg
shl
sub
es
data16
das
cmc
fsub
mov
fcom
cli
sub
push
pop
loope
mov
pop
jnp
sbb
test
xor
jae
int3
or
sub
jmp
push
dec
or
popf
sbb
mov
xor
mov
fsub
aam
or
hlt
push
test
push
test
jb
lods
xlat
daa
push
inc
rcr
gs
rcl
dec
fidivr
icebp
and
sbb
in
adc
fbstp
ja
imul
push
shl
mov
sbb
into
jo
sbb
ja
xor
imul
icebp
mov
movs
fist
test
mov
imul
inc
jo
dec
mov
je
push
cs
ret
sub
cmps
xchg
std
test
add
jno
ds
or
idiv
inc
lock
mov
xchg
jle
mov
inc
push
and
cld
add
lea
adc
jge
push
and
daa
mov
adc
xchg
mov
pop
mov
or
jmp
mov
in
push
(bad)
mov
push
pop
ss
mov
xchg
jmp
fldcw
mov
and
sbb
call
imul
cmp
or
cmps
ja
sub
popa
sub
les
cld
adc
add
sbb
or
fstp
aad
sub
pushf
jmp
cld
sti
xor
adc
xchg
sub
pop
push
lea
cmp
fs
mov
ins
ja
jbe
adc
jl
fs
push
pop
popa
test
and
dec
cmp
fwait
inc
push
fdivrp
aas
(bad)
popa
loopne
shr
test
xor
clc
movs
jo
jle
(bad)
retf
pop
and
cmp
out
repnz
add
push
jbe
sar
jno
dec
aam
sub
ins
mov
icebp
mov
ja
sub
cmc
cmc
out
test
shl
je
jb
clc
jmp
stc
mov
sub
pop
mov
rcr
mov
push
imul
stos
xchg
out
call
pop
adc
in
mov
or
jmp
fild
pop
test
(bad)
sbb
lds
push
or
addr16
dec
scas
sbb
leave
pop
ficom
in
stc
cs
jbe
cmp
adc
adc
rcl
or
std
es
jns
jmp
into
pop
xor
enter
xlat
sub
addr16
pop
fsubrp
mov
adc
pop
out
xlat
push
mov
jp
or
popf
xchg
dec
cmp
out
icebp
inc
fmul
pop
or
out
cmps
sbb
mov
pop
jns
movs
retf
int3
sub
mov
inc
mov
in
jg
pop
push
(bad)
enter
addr16
adc
adc
xor
cli
out
mov
dec
sbb
lods
mov
in
dec
retf
mov
jle
int3
mov
mov
fsubp
mov
sub
test
test
ret
int3
je
jo
push
jmp
cli
dec
ret
cmp
pop
jge
mul
out
loope
xor
sub
ja
movs
scas
xchg
jge
fucomp
cmp
pop
loopne
mov
(bad)
cmp
repz
cwde
inc
push
mov
pop
pop
adc
in
scas
adc
cs
call
cwde
push
sahf
cmp
jecxz
fadd
loop
sbb
daa
sub
sub
push
mov
inc
push
sub
jnp
jno
push
adc
mov
stc
ins
stc
fist
and
push
cmp
les
jb
rol
xor
jl
arpl
inc
pop
rcl
fwait
stos
or
mov
push
call
aaa
sbb
xchg
and
jecxz
sub
aad
pop
mov
inc
or
cmp
sbb
shl
fwait
sub
xchg
adc
sti
pusha
sbb
jle
(bad)
jge
f2xm1
cmps
in
mov
mov
dec
and
stc
xor
int
cmc
inc
or
and
ins
lds
push
sbb
xchg
mov
fst
daa
neg
mov
rep
xchg
xchg
add
popf
in
xchg
pop
jne
inc
js
ds
jbe
jl
mov
cmps
dec
ss
xchg
inc
mov
xchg
mov
sub
and
movs
fsubr
add
xchg
inc
call
pop
out
push
cmp
stos
add
push
test
jb
cwde
cmp
xor
lds
test
mov
cmps
loopne
jns
sub
pop
ret
lock
mov
xchg
repnz
loopne
addr16
mov
and
push
xchg
movs
jb
push
cmp
push
cmc
mov
inc
fistp
jge
mov
dec
(bad)
inc
cs
adc
xor
das
adc
ja
inc
or
icebp
ins
dec
push
arpl
pop
jno
or
mov
scas
jb
out
xor
push
test
cwde
out
test
js
mov
mov
mov
dec
xchg
push
adc
nop
push
test
ja
stos
pop
(bad)
nop
mov
mov
cmc
iret
test
les
(bad)
push
aam
js
mov
(bad)
int3
jl
popf
jmp
cmps
or
outs
repz
scas
and
movs
xchg
cmc
and
lods
xchg
add
pushf
lahf
cwde
scas
add
inc
fidiv
shl
cmp
add
lock
push
jnp
mov
in
test
ja
das
or
mov
mov
mov
stc
movs
fdivr
int3
(bad)
mov
mov
xor
xchg
dec
ds
mov
inc
and
adc
or
inc
jmp
nop
dec
rcr
in
cmp
pop
imul
inc
out
pop
out
or
icebp
cmp
dec
test
sub
push
retw
lods
mov
int
jae
cli
jno
in
sub
mov
cmp
jns
aaa
pushf
push
fild
dec
sbb
repz
adc
gs
inc
adc
fmul
ret
adc
or
mov
int
test
cmp
jbe
dec
dec
mov
gs
pop
cwde
and
push
or
mov
cmc
xchg
sub
retf
fidiv
popf
lea
mov
jnp
test
inc
pop
dec
mov
pop
jne
push
jno
ror
arpl
cmps
(bad)
ficom
add
or
test
xchg
(bad)
ds
scas
mov
dec
inc
cmp
fbld
cmp
ja
(bad)
(bad)
cld
xchg
jp
data16
sub
retf
mov
jno
push
dec
inc
inc
mov
outs
and
leave
add
mov
dec
adc
and
das
lea
or
clc
call
xor
(bad)
daa
shr
iret
lea
xchg
nop
push
sbb
add
xor
mov
or
pushf
jns
jbe
rcr
es
mov
imul
mov
xchg
push
jb
xchg
xlat
inc
arpl
sub
movs
push
mov
sbb
cmps
aaa
out
fwait
or
movs
jo
xor
ds
sub
add
xor
les
jnp
nop
cmp
pop
test
enter
or
clc
dec
in
mov
retf
popf
call
push
bound
nop
iret
ins
scas
pushf
(bad)
cmp
rol
sbb
and
xchg
inc
not
mov
push
cs
pop
aaa
xor
inc
cwde
in
sbb
jmp
xor
push
jp
ds
dec
xor
mov
sub
push
stos
dec
add
aam
jp
pop
dec
xchg
sub
outs
sub
push
jb
mov
cld
xchg
mov
arpl
mov
xor
or
loopne
cmc
add
and
(bad)
dec
mov
mul
push
xchg
(bad)
fadd
test
ret
popa
imul
cmp
mov
pop
test
xchg
pusha
sub
popa
out
push
jbe
sub
and
into
(bad)
jmp
xlat
pop
jmp
and
pop
rol
imul
scas
stos
shr
xor
fild
xchg
push
inc
jge
aam
dec
imul
clc
outs
push
iret
shl
sti
fs
mov
cmp
add
jae
xor
rcr
aas
sub
fiadd
in
jbe
xchg
ret
arpl
ror
push
lahf
dec
and
iret
jnp
inc
pop
js
or
cmp
ss
or
ficom
jmp
jae
jno
mov
xchg
cmp
inc
add
xchg
xchg
repz
inc
push
scas
or
aam
int
pop
aad
add
push
mov
inc
iret
fidivr
arpl
ins
mov
mov
out
scas
movs
fucomp
xor
jg
and
jmp
iret
pop
movs
cs
or
push
xchg
mov
pop
call
mov
test
lods
imul
inc
jb
pop
push
xchg
mov
fmul
add
ins
jae
adc
inc
es
mov
ret
stos
and
das
jno
cmp
mov
and
xor
inc
and
iret
inc
fwait
mov
mov
repz
xor
(bad)
imul
push
and
mov
sub
jno
push
dec
mov
pop
inc
inc
in
jbe
and
fwait
and
jnp
ins
inc
loop
xchg
inc
pop
cdq
icebp
sahf
loope
aaa
mov
clc
pop
int
mov
call
xchg
sbb
iret
test
jo
not
mov
cwde
test
mov
out
pop
dec
xlat
add
mov
cdq
xchg
pop
dec
pop
pop
fs
inc
mov
jo
out
push
cmc
push
dec
cs
jb
mov
popa
scas
mov
out
xchg
push
aad
inc
adc
call
mov
out
repz
xchg
pushf
or
pusha
ret
les
loop
mov
pop
adc
mov
lods
cmp
dec
xor
mov
ja
pusha
dec
jp
cmp
pop
fs
cmp
jns
pop
lods
or
xor
push
shr
ds
(bad)
cmps
out
test
imul
jmp
arpl
mov
mov
mov
cmp
mov
mov
mov
jno
adc
shl
lea
lea
adc
inc
push
div
jo
and
and
xchg
push
mov
ror
jmp
xor
sbb
cli
mov
push
sbb
xor
in
pop
lea
into
add
dec
jl
test
cs
mov
addr16
mov
popf
ins
dec
aas
add
dec
lods
push
add
sbb
sbb
xchg
mov
xchg
rcr
dec
sbb
sub
(bad)
mov
dec
div
mov
xchg
push
inc
push
fstp
ins
adc
adc
js
and
sub
push
sub
test
xor
rol
cmp
daa
addr16
int3
mov
fiadd
jb
repz
iret
dec
bound
adc
cmc
dec
mov
and
dec
jg
dec
or
jl
mov
call
retf
(bad)
fbstp
pop
in
adc
bound
and
inc
mov
sub
sbb
lods
or
int3
dec
fidivr
mov
movs
xchg
rcl
xor
cmp
jmp
jb
lea
stos
sub
retf
mov
hlt
lock
xchg
mov
xchg
bound
in
sub
call
add
adc
(bad)
in
clc
push
mov
js
mov
pusha
call
(bad)
in
and
xchg
adc
lods
xchg
ds
ret
out
div
mov
xor
js
mov
sub
loope
mov
push
or
or
popf
xchg
jmp
mov
lock
adc
jle
arpl
dec
xchg
pop
inc
cmps
repnz
jp
add
int
sub
xchg
jp
jbe
push
in
pop
mov
adc
sub
(bad)
mov
test
mov
and
les
ret
mov
shl
ret
call
(bad)
cmp
out
(bad)
loop
outs
sbb
imul
add
mov
hlt
mov
cmp
pop
jns
shr
daa
or
(bad)
(bad)
call
mov
adc
test
mov
push
(bad)
sti
xchg
fdiv
repz
xchg
daa
int
xchg
in
and
mov
scas
sub
fwait
imul
iret
mov
inc
daa
pusha
sar
adc
mov
mov
jb
push
adc
cmp
movs
pop
popa
bound
push
shl
xchg
mov
in
jl
repz
cwde
sbb
loope
out
lahf
mov
jmp
and
imul
push
ret
pop
add
out
pop
push
mov
push
add
movs
mov
push
icebp
pop
sub
xchg
out
in
pop
and
popa
call
dec
add
daa
into
sub
ret
inc
pop
xchg
pop
test
(bad)
mov
outs
in
xchg
maxps
and
std
jo
lock
mov
fs
push
shr
xchg
lods
xor
mov
xor
pop
sbb
inc
mov
sbb
and
dec
cmp
jno
jae
ins
(bad)
cmps
dec
dec
inc
rol
add
xchg
bound
popf
movs
or
into
mov
ds
leave
fcom
xchg
mov
inc
push
fsub
repz
retf
repz
stos
and
and
push
int
mov
add
out
cmp
movs
sbb
iret
call
sbb
dec
push
shr
mov
and
push
lea
out
fst
jecxz
jmp
cmc
je
retf
mov
call
fimul
aam
xor
sti
cli
(bad)
xchg
inc
add
ficom
shr
cmp
mov
xchg
fs
js
xor
dec
cmc
cmps
imul
adc
jge
and
movs
adc
push
in
inc
jg
cmc
pop
loop
xor
adc
pop
pop
pop
mov
and
or
lahf
mov
jp
inc
inc
enter
sbb
mov
fsubr
stos
neg
test
loopne
cmp
cmps
pushf
aaa
bound
xchg
dec
xor
imul
fild
pop
add
test
xchg
cmc
pop
mov
aas
or
push
xchg
push
scas
jge
cmps
jo
aad
jb
inc
and
outs
mov
(bad)
fs
cmc
inc
loope
mov
cmps
lods
xor
inc
aaa
mov
jns
xor
iret
jne
mov
dec
or
es
mov
ins
daa
mov
rcr
pop
push
sub
dec
ret
xchg
cmp
js
or
jb
out
push
mov
test
hlt
push
mov
jge
sbb
xchg
rcl
add
and
inc
push
mov
jmp
not
lahf
dec
xchg
and
data16
gs
loop
dec
mov
jb
sbb
mov
sub
push
inc
ror
pop
xchg
sub
lods
test
cmp
push
or
fild
lock
ja
sub
mov
mov
fucomip
ficomp
add
test
mov
xchg
je
or
mov
push
dec
out
sub
fld
sub
xchg
test
and
scas
inc
in
popf
add
mov
ret
mov
jnp
mov
pushf
aaa
xchg
fist
test
icebp
pop
mov
inc
mov
(bad)
mov
adc
sar
adc
stos
sti
sub
cmp
gs
(bad)
fwait
not
ds
(bad)
aas
mov
mov
push
mov
jnp
sub
out
ja
xchg
xchg
push
(bad)
(bad)
arpl
push
(bad)
les
(bad)
mov
dec
mov
or
daa
imul
dec
jb
std
call
stos
out
sahf
clc
retf
mov
push
enter
imul
jp
call
push
ins
jmp
dec
jl
imul
jp
out
and
ja
arpl
adc
pop
shr
xchg
xor
pop
mov
mov
fild
push
mov
je
xor
out
add
cmp
xchg
and
cmp
mov
mov
mov
mov
(bad)
pop
inc
enter
out
cmc
sbb
cwde
into
xor
aad
jecxz
jl
and
push
xor
cmp
jmp
or
push
cmp
cld
mov
push
cmc
mov
test
fnstsw
inc
sbb
xor
dec
pusha
ins
push
popa
jmp
cli
mov
add
inc
and
jnp
or
mov
push
or
adc
xor
xor
cwde
push
or
push
scas
test
mov
xor
shl
cmp
ret
mov
std
aad
pop
mov
mov
imul
inc
mov
mov
call
cmp
dec
mov
imul
inc
movs
(bad)
xchg
aas
ret
ds
je
xchg
in
adc
outs
imul
xchg
inc
xchg
test
sbb
xor
adc
aas
call
dec
retf
shl
pop
push
cli
pop
std
ins
loop
and
ret
pop
fs
aam
loope
jne
daa
stos
mov
and
pop
or
fist
cmovg
outs
cmp
in
xor
mov
or
xchg
lahf
pop
in
jecxz
add
div
sub
push
(bad)
mov
and
cmps
sti
inc
js
jle
cld
lea
cmp
mov
imul
xor
fdivrp
loope
mov
ret
lods
jmp
(bad)
and
or
cwde
aam
outs
aas
or
repnz
pop
dec
jge
mov
jb
fisttp
push
aaa
fdiv
(bad)
les
add
and
call
dec
mov
jmp
or
scas
mov
fisubr
lock
sar
leave
gs
std
cmp
xor
ret
ja
frstor
xchg
xor
pop
sub
ds
fidiv
pop
sub
sub
jge
ds
xor
lods
push
cmps
mov
in
push
jl
mov
mov
mov
cmp
xor
sbb
push
fisubr
(bad)
repnz
out
out
bound
xor
add
push
add
dec
jo
bound
movs
jg
mov
push
sbb
dec
test
jno
das
sbb
xchg
out
xchg
ss
aas
lods
push
stos
dec
mov
push
and
xchg
fistp
call
stos
(bad)
repz
push
cs
sub
mov
pusha
inc
jle
cmp
xor
jmp
jae
push
not
repnz
sar
dec
loope
cmp
sbb
inc
or
call
inc
adc
sar
inc
mov
jge
mov
adc
mov
inc
ret
push
jp
int3
dec
adc
adc
fdivr
jo
scas
push
in
cmps
inc
inc
push
ins
or
add
bound
inc
std
xchg
repnz
fs
call
inc
loope
neg
fs
(bad)
mov
ds
push
push
inc
jae
rol
mov
sub
and
repnz
loope
xor
push
xor
sbb
xor
jne
fisub
mov
xchg
fdiv
movs
sub
int
mov
lock
mov
adc
ror
pop
push
sub
loop
jg
jecxz
out
shl
pop
add
aaa
and
rcl
fbstp
xchg
loop
push
mov
jns
inc
or
push
loop
out
mov
icebp
mov
mov
(bad)
pop
push
(bad)
aam
loop
or
sbb
jno
fsub
add
jp
pusha
pop
push
(bad)
jbe
jno
(bad)
out
out
aaa
hlt
mov
mov
aam
xor
adc
imul
xor
or
movs
push
and
cdq
cmps
popf
test
stos
clc
cmp
push
cli
dec
mov
add
push
mov
lea
out
ins
dec
jmp
ins
xchg
sub
sub
mov
dec
sub
test
mov
not
pop
loope
mov
loopne
mov
loop
lods
mov
cmp
jae
cmp
call
xor
jge
push
sub
or
add
gs
and
(bad)
mov
xor
mov
sub
and
push
sahf
mov
ja
adc
test
jmp
xchg
(bad)
cmps
inc
dec
jo
jecxz
out
(bad)
out
mov
movs
ret
xchg
retf
es
dec
or
icebp
mov
hlt
jg
dec
mul
sbb
out
lds
leave
pop
push
sbb
sub
mov
push
mov
pop
cld
add
push
ja
pop
dec
adc
js
or
iret
adc
xchg
das
(bad)
fnsetpm(287
xor
and
and
adc
adc
xor
cs
popa
pop
dec
or
int3
outs
mov
mov
jbe
pusha
stos
pop
popa
xchg
aad
pop
stc
dec
cmc
mov
jnp
add
rcl
and
sub
jg
sbb
pop
and
sti
xchg
sbb
sbb
lock
cld
xor
fnstenv
or
pop
int3
nop
mov
dec
outs
jb
ja
sbb
add
ins
xchg
fstp
xor
add
call
push
imul
sbb
jo
outs
mov
pop
push
imul
mov
shl
jns
retf
enter
fcom
ins
xchg
mov
mov
out
addr16
sub
push
pop
ins
mov
pop
js
or
outs
jmp
fld
jmp
sub
jmp
cmp
pushf
cmp
lods
mov
outs
add
mov
popf
ror
in
cli
dec
or
arpl
pop
or
mov
int3
sub
mov
mov
jg
push
jns
shl
cld
dec
addr16
jge
cmp
rcl
sahf
or
sub
mov
cld
fcmovnb
sbb
stos
int3
push
ror
das
loope
gs
aas
imul
les
xchg
pusha
lahf
sbb
scas
dec
imul
jne
out
mov
inc
jp
hlt
fs
and
es
mov
and
sbb
clc
test
stos
gs
int3
call
les
jns
inc
or
call
int3
jge
(bad)
movs
ret
push
jne
xlat
mov
jb
xchg
inc
xchg
pop
sub
and
mov
xchg
xor
retf
jb
jnp
jo
mov
and
push
(bad)
shl
(bad)
leave
icebp
add
test
jns
sbb
adc
fidiv
push
sub
mov
and
call
mov
xchg
shr
push
dec
mov
sbb
jb
or
clc
inc
xchg
jae
xor
sbb
or
add
xor
sub
fidivr
adc
mov
jae
push
imul
aam
mov
lahf
jae
push
pop
ss
xlat
fiadd
gs
int3
fnstsw
stos
outs
(bad)
pop
sub
sbb
icebp
es
xor
jno
jecxz
pop
pop
mov
jo
sub
or
sbb
xor
jmp
push
jae
out
adc
(bad)
sub
push
push
je
out
sub
retf
mov
enter
retf
xchg
icebp
cmp
repnz
xchg
int3
mov
mov
sahf
sahf
mov
xor
adc
into
xchg
out
enter
mov
stos
jo
fdivr
call
pop
cmp
in
sub
lock
xchg
push
cmp
ret
mov
ds
fsub
jge
sahf
shl
mov
pop
dec
sub
aas
inc
(bad)
das
jmp
or
push
dec
mov
fwait
mov
pop
mov
cmp
jmp
push
fcomp
pop
test
out
xor
imul
pop
jne
test
mov
enter
xchg
fwait
inc
adc
dec
cs
adc
jno
scas
xchg
imul
push
sub
or
das
or
cmp
and
loopne
mov
cmp
loope
push
mov
fdivp
into
gs
push
mov
js
stc
scas
xchg
and
in
test
add
and
jp
sub
or
dec
dec
push
jns
push
test
test
outs
and
or
push
add
push
call
test
or
mov
lods
ds
ja
mov
aad
pop
mov
fist
pop
addr16
loope
inc
outs
je
push
outs
mov
lods
daa
std
js
cdq
leave
call
sub
addr16
stos
dec
sub
xchg
into
xchg
dec
push
lock
inc
mov
in
out
aam
add
outs
jae
jge
in
aad
push
rol
pop
ret
jl
xchg
jg
cld
jno
shl
mov
sub
inc
and
sbb
test
aad
add
pop
pop
(bad)
shr
mov
sub
xchg
sbb
adc
push
jp
out
jbe
loopne
jnp
xchg
fild
sub
inc
mov
pushf
shl
shl
dec
push
cwde
fidiv
or
retf
jae
imul
cmps
or
xlat
in
dec
lods
test
or
cli
cmps
xchg
cmp
inc
ja
call
mov
xor
mov
or
and
cmp
cmp
es
pop
jg
popa
test
jge
adc
and
add
sbb
adc
push
or
mov
xor
movs
adc
in
jmp
xor
or
or
mov
and
lods
xchg
ret
pop
sbb
(bad)
ja
cs
xchg
xchg
adc
push
cmc
aaa
and
and
mov
idiv
and
sbb
mov
shl
loop
cmps
jmp
aad
cdq
ds
push
sub
std
jnp
fcomip
inc
pop
ficom
push
mov
rcl
mov
add
(bad)
cld
push
pop
ret
inc
pop
js
push
loop
inc
inc
or
and
fwait
pushw
and
iret
scas
xor
cmps
imul
js
or
push
push
xor
mov
out
adc
sbb
jns
shl
fst
call
adc
cdq
jo
xlat
add
rol
cmp
(bad)
je
fmul
and
cmp
inc
add
cmp
ret
pusha
popf
shr
lahf
in
(bad)
pop
test
jne
iret
hlt
cmp
cmp
or
mov
stc
retf
pop
dec
dec
lock
adc
cmp
mov
cs
les
shl
sbb
es
repz
fidiv
push
mov
ja
jmp
push
repz
add
sub
into
pushf
xchg
iret
jge
pushf
stc
daa
imul
sbb
add
cli
in
in
jmp
dec
cwde
mov
mov
aaa
mov
addr16
addr16
push
and
mov
mov
popa
movs
dec
cmp
pusha
pusha
cmc
dec
inc
mov
sub
and
arpl
or
xchg
retf
in
adc
xchg
(bad)
into
sub
sub
ret
xor
push
test
sbb
add
sub
inc
mov
iret
jmp
je
sbb
fstp
dec
jb
ror
cld
(bad)
push
(bad)
mov
sti
mov
(bad)
sub
outs
dec
dec
pop
xchg
add
xor
add
clc
mov
fs
mov
jg
and
sahf
push
fild
jl
mov
jl
add
addr16
fwait
push
mov
dec
daa
cmc
add
arpl
sub
xchg
fincstp
and
ds
mov
sub
(bad)
fdivr
xor
lds
mov
add
push
or
inc
movs
adc
enter
xor
retf
sub
(bad)
xor
mov
leave
stos
test
push
xchg
movs
imul
psubw
adc
cmp
sahf
int3
pop
inc
cld
call
and
dec
or
sub
xor
xor
xor
fld
iret
addr16
js
sbb
aaa
cmp
mov
in
test
sbb
mov
aad
pop
imul
arpl
or
jae
cmp
(bad)
push
ret
jge
mov
test
loopne
and
and
loop
ds
push
imul
inc
setne
aam
jmp
mov
xor
and
mov
jae
(bad)
std
aas
dec
in
or
mov
test
xor
inc
mov
inc
jne
dec
add
clc
pop
mov
scas
fidivr
lods
mov
(bad)
xor
aas
adc
jle
rcr
lods
pop
push
outs
sti
mov
sub
in
dec
mov
cmp
sbb
and
sbb
rcr
cld
cs
jmp
pop
adc
das
mov
fidiv
es
add
lea
sub
cmp
sar
ret
xchg
xor
jecxz
mov
mov
jmp
adc
mov
mov
inc
add
repnz
pop
push
in
mov
test
and
mov
paddb
mov
jmp
arpl
test
out
pushf
jb
scas
fcom
xchg
shl
push
hlt
movs
jmp
or
data16
cmp
pop
aaa
cmp
shr
rol
jne
rcl
mov
les
loop
nop
jno
int3
xor
js
xor
enter
and
je
stc
ret
adc
cmp
std
fwait
sbb
mov
pop
push
sbb
pop
mov
in
xchg
clc
(bad)
push
jl
retf
and
adc
outs
pushf
pop
push
ins
cmp
xchg
cmp
(bad)
cli
(bad)
push
in
arpl
inc
sahf
pop
js
mov
repz
mov
mov
jb
inc
sbb
ins
mov
cmp
xchg
test
(bad)
xchg
push
push
adc
sar
jo
(bad)
or
jae
push
and
mov
rol
pop
jl
or
add
out
stc
fiadd
jnp
fucomp
or
(bad)
jnp
push
int
cmp
ret
fild
xor
dec
fwait
inc
popa
call
shr
outs
ret
shl
push
in
ins
(bad)
sbb
inc
xor
dec
fbld
imul
inc
jne
inc
mov
aaa
les
xlat
xchg
sub
les
fbld
mov
cmp
xchg
aaa
call
pop
fwait
imul
mov
lock
dec
push
pop
sbb
and
cmp
sub
imul
inc
idiv
(bad)
sar
popa
sbb
shl
aad
bound
xchg
test
xchg
cmps
jg
pop
push
jo
cmp
rol
nop
aad
mov
push
movs
callw
pusha
int3
pusha
cmc
push
pop
xchg
(bad)
retf
(bad)
ficom
or
icebp
cs
lahf
fstp
adc
mov
icebp
ja
rcl
aaa
dec
loopne
push
sti
nop
xor
int
sub
popf
and
mov
cmp
jbe
xlat
leave
mov
push
xchg
jmp
loope
cmp
fisttp
lods
add
mov
pop
dec
push
xchg
fdiv
imul
out
or
sbb
sbb
and
mov
or
fistp
add
sub
mov
add
lods
int3
loopne
popf
mov
cmp
in
xchg
(bad)
cwde
fdivr
cmc
dec
or
xchg
cs
adc
stc
mov
xor
sahf
pusha
sbb
jle
stos
pop
movs
cwde
pop
popa
and
aam
jnp
mov
xchg
push
std
shl
adc
pop
adc
jb
(bad)
jo
std
repnz
fadd
dec
fs
lods
pop
push
in
scas
inc
sbb
rcr
sub
popa
ds
add
pop
push
dec
stos
imul
gs
sbb
add
pop
push
push
inc
or
mov
or
not
lea
fs
or
pushf
push
retf
jecxz
jns
adc
xchg
push
mov
or
ins
(bad)
sbb
leave
push
sub
pushf
fist
lods
in
jnp
enter
arpl
test
xor
ins
jnp
add
out
cmps
scas
mov
cdq
xor
sub
xor
mov
inc
cdq
retf
push
xor
mov
mov
mov
out
xchg
and
dec
lea
sbb
adc
add
nop
push
xchg
push
sub
clc
and
inc
sahf
test
(bad)
jle
or
mov
or
sub
icebp
sub
or
imul
in
rcr
sbb
sub
hlt
sub
addr16
ja
pop
call
add
cli
jmp
jge
jmp
pusha
(bad)
sub
inc
icebp
push
mov
iret
es
jle
xor
sbb
sar
lock
pop
and
push
push
mov
mov
mov
fidiv
repz
and
push
jo
cmp
(bad)
js
ds
and
mov
ins
stos
sbb
nop
or
fdiv
cmp
mov
xchg
add
aad
retf
fdiv
add
aam
sub
scas
sbb
cli
mul
fistp
pushf
idiv
jecxz
inc
or
sub
jb
xor
stos
dec
jmp
out
mov
add
rcr
or
mov
and
aam
jmp
jecxz
pop
mov
sbb
inc
leave
xor
jge
push
enter
retf
xchg
xor
or
mov
mov
dec
xor
sbb
inc
mov
xor
aad
xchg
les
fld
adc
push
mov
jne
mov
ficomp
jb
fsubr
jecxz
cmp
ins
xchg
ins
or
sbb
div
cmps
gs
outs
adc
ret
mov
push
cmp
dec
enter
es
xabort
mov
(bad)
movs
das
inc
scas
bts
dec
push
dec
push
inc
sti
xor
dec
(bad)
cli
xlat
adc
and
out
sub
inc
fsubr
sbb
pop
fiadd
movs
es
mov
sbb
inc
adc
(bad)
out
lock
mov
call
sbb
inc
cdq
adc
sub
adc
dec
in
repnz
mov
dec
rcl
(bad)
les
lock
push
and
and
out
push
add
data16
dec
sbb
jp
out
std
jae
mov
int
sub
es
and
ins
and
in
repnz
aad
mov
or
clc
aas
push
sbb
fsubp
in
je
xor
shrd
mov
aas
imul
std
push
inc
iret
nop
aas
outs
scas
push
ror
scas
push
icebp
jnp
fld
pop
ins
js
mov
add
call
ror
or
dec
push
(bad)
mov
lods
cmp
mov
push
inc
sub
addr16
pop
sub
leave
fwait
(bad)
es
cwde
(bad)
or
and
and
xor
or
jb
pop
int
pop
pusha
sahf
call
or
pop
in
stc
les
dec
shl
daa
add
jae
mul
pop
shl
jnp
jne
pop
adc
pop
pop
cwde
popf
sub
call
xlat
dec
outs
sar
pop
push
xchg
outs
js
gs
jo
pop
(bad)
mov
(bad)
test
jp
mov
or
cmp
mov
dec
dec
shr
cmps
not
sub
test
dec
and
enter
retf
rol
pop
cdq
iret
xor
cli
mov
fmul
inc
loop
mov
push
inc
repnz
xchg
sbb
push
adc
add
mov
mov
push
push
repz
clc
or
push
mov
xchg
cmp
in
aam
in
bound
lods
jne
push
sti
dec
and
bound
rcl
arpl
sbb
dec
test
(bad)
in
ret
push
add
or
(bad)
sbb
and
dec
popf
in
scas
add
enter
xor
xchg
or
test
and
sti
stc
lahf
xchg
pusha
mov
dec
sbb
fnstsw
adc
ret
push
sub
outs
rcl
add
cmps
cli
cli
push
jne
jle
mov
cmp
outs
mov
dec
jmp
pop
mov
dec
cmp
xor
add
mov
inc
loop
call
popf
cmp
imul
(bad)
xor
mov
je
sub
pmaxsw
dec
sub
push
(bad)
cmp
ja
jne
test
jle
adc
mov
sub
rcr
xchg
xchg
or
rol
xchg
imul
add
sub
mov
cld
push
das
inc
icebp
xor
popf
xchg
fsub
xchg
xchg
ret
out
adc
das
cmp
test
rcl
jne
fstp
movs
es
push
push
add
lahf
sub
and
leave
fcmovbe
xor
jp
aam
push
std
pop
sbb
xchg
xchg
adc
mov
pop
dec
aas
pop
cli
repnz
std
pop
aam
jnp
les
push
jge
lock
out
inc
stos
(bad)
xchg
mov
cmp
cmp
jno
jnp
inc
mov
inc
out
pop
leave
lds
bound
test
adc
cmp
int3
sub
repnz
xor
or
add
cdq
lahf
cld
pop
adc
inc
adc
jbe
mov
and
jg
test
mov
adc
mov
mov
stos
int3
pop
mov
push
out
arpl
xchg
dec
jns
mov
jp
or
test
ret
movhps
dec
loop
movs
mov
or
sti
(bad)
in
dec
jg
xor
mov
mov
pushf
xor
out
out
vphsubwd
mov
adc
push
sub
mov
retf
mov
icebp
add
adc
in
xor
push
cmp
sahf
mov
out
stos
fwait
jmp
and
pusha
popf
movs
popa
in
call
fisub
dec
xchg
jle
ret
sub
push
imul
bound
loope
push
jge
push
imul
sbb
loope
(bad)
into
mov
ret
dec
and
and
aaa
mov
nop
adc
add
mov
lods
add
sub
jns
nop
ficom
sbb
inc
inc
mov
adc
add
pop
push
inc
out
(bad)
jg
jle
movs
enter
mov
mov
loop
outs
mov
sub
jne
jl
inc
and
push
xchg
iret
sub
or
fst
push
out
push
sub
das
call
out
loopne
xor
loope
add
dec
mov
les
pop
sub
xor
in
(bad)
mov
and
jbe
dec
(bad)
call
jmp
std
enter
pop
jne
and
push
inc
cli
dec
or
mov
inc
leave
or
cmp
xchg
fs
pop
inc
arpl
stc
js
dec
das
add
xor
das
out
popf
xchg
test
inc
(bad)
out
outs
mov
loop
add
dec
jbe
cli
lods
cmc
into
sbb
fdiv
mov
cdq
mov
stos
sub
cwde
xor
push
ins
xor
mov
and
inc
ins
adc
pop
jp
loope
cmps
sbb
xchg
push
and
inc
mul
push
lea
jmp
sub
pop
or
sbb
jb
sti
repz
inc
cmps
xchg
fwait
or
xor
or
mov
pop
or
inc
jl
ds
das
xchg
and
rcr
and
sbb
mov
sub
inc
fwait
rcr
arpl
rol
cmps
cmp
pop
les
push
ins
iret
pop
xor
out
scas
inc
push
mov
jl
xchg
pop
inc
jbe
xor
ins
mov
or
xchg
jge
js
dec
aam
or
and
adc
fdiv
ins
icebp
jmp
sbb
aaa
sub
xchg
(bad)
mov
and
adc
or
pop
add
bound
add
pop
xor
shl
loopne
in
aas
inc
ficom
xchg
ja
push
sti
arpl
loop
xor
ficomp
push
sub
pop
mov
jmp
jne
(bad)
cmp
out
imul
call
xchg
xlat
or
mov
mov
push
mov
mov
mov
add
pop
jmp
jmp
pushf
or
fiadd
push
mov
xchg
pop
jle
add
icebp
and
adc
aam
mov
add
jmp
mov
cmps
lods
adc
daa
scas
int3
and
pop
jge
test
and
stos
sub
sbb
loopne
loopne
jne
jnp
int3
ins
or
pop
js
xor
icebp
sub
dec
mov
gs
or
mov
gs
push
scas
lds
push
je
je
iret
add
cmp
xchg
imul
ss
sti
jmp
inc
jmp
add
and
mov
lds
mov
call
mov
sub
and
cdq
stos
pop
movs
(bad)
pop
lahf
add
mov
into
pusha
push
loop
cmp
adc
iret
mov
popa
aaa
loope
js
cmp
xchg
test
or
dec
call
loope
nop
jge
add
adc
in
fild
cld
add
jno
cmps
push
ror
test
adc
jmp
imul
lods
mov
gs
rcr
fiadd
or
lahf
mov
out
sahf
jb
ss
mov
nop
scas
xchg
inc
sub
adc
xchg
push
jmp
ret
mov
js
xor
jns
aas
sbb
sbb
scas
test
pop
mov
or
loopne
dec
mov
retf
sahf
mov
loopne
loop
cdq
dec
xchg
jle
bound
dec
aaa
lods
xor
xor
mov
in
call
sar
and
add
push
dec
and
lahf
mov
push
mov
xor
cmp
imul
(bad)
pop
sar
imul
lock
cdq
add
pop
faddp
fbstp
push
int3
xchg
lea
cli
xchg
repz
pop
popf
dec
inc
jns
or
sbb
je
mov
pop
rcl
sbb
call
xchg
jecxz
pop
xor
xchg
inc
(bad)
push
loopne
in
mov
pusha
inc
repnz
repnz
fistp
adc
and
loope
and
add
add
repnz
cmps
mov
or
sbb
enter
in
inc
sbb
xchg
stc
mov
bnd
mov
jmp
xor
dec
pop
frstor
push
sub
mov
jne
data16
cdq
fdivr
dec
fmul
pop
push
rcl
mov
shr
cwde
jno
arpl
add
inc
jg
mov
cdq
retf
cwde
mov
retf
ins
cmp
add
sub
mov
pop
inc
sub
ja
loop
into
pop
shr
adc
cld
sub
jnp
xchg
aas
movs
adc
aad
mov
aad
ret
mov
adc
sbb
lahf
xchg
(bad)
std
cmp
ja
bound
push
or
adc
ret
daa
pop
pusha
xor
retf
out
mov
and
push
ret
(bad)
jae
jno
mov
cmp
ins
sar
ret
fsubr
fcom
out
test
cmps
in
ja
sbb
mov
pop
pop
or
sar
retf
lahf
dec
inc
sbb
out
ret
xor
idiv
fisttp
dec
in
fwait
jo
sbb
pop
loop
or
lea
ins
push
jbe
jge
(bad)
lods
stos
dec
bound
ins
dec
mov
fwait
scas
xchg
dec
cdq
(bad)
outs
in
pop
mov
gs
sbb
adc
sub
sub
ds
jmp
je
and
xor
xor
fcom
sbb
stos
mov
jp
sbb
pop
mov
xchg
mov
add
jmp
jl
repz
and
stc
stos
lock
pop
loopne
stc
or
add
in
jp
ins
fwait
jbe
and
jmp
outs
sbb
lahf
(bad)
clc
loopne
in
hlt
pop
inc
xchg
mov
retf
jo
imul
mov
mov
shr
sub
int
test
pop
retf
(bad)
nop
mov
call
icebp
pushf
(bad)
std
pop
fcomp
push
push
mov
sub
jne
out
stos
aas
jne
mov
mov
jno
stos
imul
dec
jno
inc
add
mov
adc
dec
imul
xor
ds
daa
xchg
mov
dec
imul
ja
mov
stc
stos
aad
dec
mov
es
dec
int3
fstp
scas
(bad)
mov
adc
ror
xlat
bound
cmc
or
mov
loope
(bad)
jle
jl
push
mov
int
mov
out
xor
push
pop
lea
ficom
outs
(bad)
adc
cmps
xchg
cdq
mov
test
in
xchg
mov
mov
rol
or
push
and
stos
add
xchg
les
mov
push
popa
cmp
add
pop
lods
bound
loopne
aaa
sbb
mov
xor
jmp
mov
add
sahf
sub
(bad)
jns
inc
adc
aam
outs
cmp
or
mov
movs
popf
push
jns
inc
int
cmp
(bad)
ins
icebp
mov
adc
mov
into
fstp
in
xchg
cmp
inc
aaa
sbb
hlt
sub
sbb
mov
ins
sahf
(bad)
cmp
pop
jge
shr
or
sub
add
out
iret
xchg
ds
stc
add
mov
cld
in
rol
xor
jle
(bad)
push
call
(bad)
rcr
push
shr
xchg
inc
adc
adc
jb
sbb
repnz
jp
aas
mov
pop
int3
std
or
xchg
mov
xor
stc
jl
out
jne
std
xchg
and
mov
in
inc
fidiv
(bad)
js
hlt
loopne
movs
xor
mov
xchg
jmp
xor
test
jbe
inc
sbb
sbb
inc
ins
push
scas
pop
stos
fistp
add
pop
xor
jg
fcom
dec
pop
inc
loopne
mov
pop
xchg
mov
xchg
scas
pusha
and
rcl
jmp
cwde
jbe
sbb
pop
xlat
pop
mov
add
icebp
test
lock
cs
dec
loopne
mov
mov
mov
or
push
mov
sar
jno
int3
aad
add
int3
into
dec
jmp
push
jne
(bad)
(bad)
imul
jo
icebp
icebp
stc
hlt
mov
scas
cmp
clc
sub
jbe
push
pop
add
out
loopne
aaa
pop
out
outs
xor
sbb
xchg
(bad)
jo
popf
frstor
sbb
sub
lahf
(bad)
push
or
mov
(bad)
shl
leave
test
rol
xchg
sbb
icebp
cmp
and
(bad)
jmp
push
pop
jmp
jmp
push
icebp
or
dec
enter
movs
scas
retf
sub
push
test
loopne
(bad)
xchg
inc
adc
int3
lahf
(bad)
out
fwait
lds
and
sbb
and
jo
inc
cld
fwait
loopne
je
xchg
xchg
jge
xlat
cld
jne
push
aas
jp
inc
cdq
jno
ret
sbb
retf
adc
jb
(bad)
fcomp
xor
pop
int3
adc
sbb
aas
pop
in
xor
ret
out
loop
out
not
or
dec
ss
or
je
(bad)
icebp
ss
inc
dec
stc
jns
fwait
loop
inc
popa
cld
ror
inc
fdiv
inc
ficom
test
mov
call
dec
or
add
sub
sbb
pop
es
iret
pop
fbstp
and
mov
pop
clc
ins
cmp
push
and
pop
mov
retf
test
cwde
xchg
icebp
or
mov
pop
mov
sbb
add
pop
lea
fst
or
mov
mov
inc
(bad)
xor
lea
push
sbb
(bad)
adc
outs
out
dec
cmp
jl
xchg
pop
jne
addr16
cmps
push
(bad)
pusha
fstp
mov
push
pop
arpl
loope
and
push
loopne
add
push
hlt
mul
xchg
mov
xor
es
lock
stos
fmul
adc
jmp
mov
push
xchg
mov
adc
push
inc
pop
pop
adc
push
xchg
(bad)
xor
jbe
gs
cmp
inc
push
je
dec
call
cdq
mov
sub
shl
lods
hlt
jmp
ds
add
movs
in
int3
js
test
jmp
scas
mov
test
push
pop
sub
push
repnz
cmp
mov
pop
xor
jmp
dec
sbb
shl
adc
ja
mov
stos
pushf
in
cld
push
es
(bad)
or
sub
mov
push
sahf
xchg
xor
(bad)
and
jmp
jns
test
ins
and
ret
adc
scas
fmul
sti
push
xchg
add
outs
push
loope
in
shl
je
in
pop
cmp
addr16
scas
xchg
not
pop
mov
aad
lds
push
(bad)
sbb
and
push
lods
dec
aam
sar
lds
xchg
cmps
aas
rol
popa
sub
mov
mov
out
pop
out
daa
adc
loop
(bad)
pop
shl
sbb
cld
lods
fs
int3
fld
aad
or
xor
jecxz
and
xchg
data16
mov
mov
clc
xor
sbb
popa
movs
leave
add
adc
lock
sbb
fdiv
dec
pop
mov
adc
adc
dec
stos
mov
inc
test
mov
and
sar
nop
cmp
adc
fld
out
push
adc
mov
inc
popf
dec
scas
mov
adc
aaa
push
hlt
out
add
push
mov
cdq
scas
cwde
fs
mov
mov
and
sub
scas
or
es
dec
lea
or
mov
lea
lods
push
sbb
scas
cmp
mov
cs
and
add
mov
outs
cdq
out
rol
scas
arpl
lea
sar
fs
pop
mov
sub
xchg
mov
aam
mov
iret
movs
mov
xor
push
shl
dec
bound
adc
dec
mov
or
mov
inc
cmp
push
pop
cmps
cdq
aas
enter
jmp
imul
inc
cmp
pop
rol
inc
je
pop
mov
sub
mov
jns
mov
sub
cmps
mov
pop
adc
cmc
fwait
sbb
leave
xchg
(bad)
pop
repnz
pop
cmp
mov
fincstp
xchg
push
fisttp
mov
outs
(bad)
push
arpl
xchg
pop
(bad)
js
aaa
and
ja
mov
and
mov
stos
xor
jmp
dec
push
jmp
(bad)
adc
mov
cmp
sbb
push
jl
cmp
mov
and
push
adc
loop
call
push
test
add
out
inc
inc
int3
mov
mov
xchg
loope
pop
(bad)
pusha
gs
push
and
pushf
and
loop
icebp
push
inc
and
mov
mov
hlt
or
aaa
test
mov
movs
retf
jge
and
jecxz
imul
test
fwait
ret
adc
dec
addr16
fbld
into
lahf
ret
mov
cmp
ret
in
fwait
and
popf
and
adc
stc
sub
arpl
cmp
lock
adc
call
xor
shl
test
dec
dec
mov
or
xchg
xchg
mov
sub
jbe
mov
mov
pushf
adc
mov
(bad)
pop
loop
xchg
test
jnp
sbb
xchg
jae
and
fwait
test
add
add
aas
ins
pop
pop
test
iret
in
fild
inc
jne
daa
movs
inc
shl
xor
mov
leave
dec
mov
mov
in
inc
pop
xchg
sub
dec
cwde
movs
dec
or
sbb
pop
pop
arpl
std
mov
outs
xchg
les
mov
and
jo
mov
jl
sub
jnp
shl
xchg
push
push
mov
cmp
mov
das
jo
pop
and
stc
std
push
loopne
cmp
mov
test
sbb
shr
mov
and
jmp
rcr
jne
jle
sub
xor
pushf
out
jno
sbb
mov
dec
aam
cmp
push
je
fidivr
mov
cs
cmc
mov
es
inc
pop
add
mov
add
push
or
jb
xchg
xchg
add
sub
pop
and
fsubr
cmp
fldcw
adc
push
push
es
enter
hlt
and
ins
dec
clc
cmp
call
sbb
dec
inc
(bad)
pop
xor
stos
out
aad
sahf
adc
call
push
and
jo
sub
stos
(bad)
pop
pop
or
cs
jo
lock
int3
repz
cmp
mov
mov
retf
mov
bound
lods
in
inc
mov
cmp
call
jge
gs
jmp
push
test
sahf
jmp
push
pop
arpl
mov
popa
fmul
sbb
lods
ror
sbb
(bad)
neg
xor
mov
fild
mov
mov
aam
loopne
mov
cmp
dec
mov
jbe
in
dec
dec
xchg
mov
stos
mov
int3
stc
xchg
leave
mov
adc
int
sbb
out
mov
stos
mov
call
cmp
movs
outs
adc
aaa
mov
outs
jmp
shl
(bad)
mov
add
xchg
cmp
cmp
je
jp
aad
adc
popa
xchg
pop
ins
sub
gs
adc
shl
push
mov
nop
inc
adc
aad
or
mov
cmp
push
xor
xchg
(bad)
test
mov
rol
sub
pop
push
pop
push
pusha
push
enter
lods
or
(bad)
lea
sbb
aad
jle
fwait
xor
retf
cmp
jge
fs
or
ins
dec
mov
ss
jge
xchg
bound
gs
paddw
mov
cmps
repnz
xor
pop
xchg
or
ins
xchg
mov
mov
imul
cdq
ror
fmul
push
mov
lods
xchg
(bad)
into
stos
scas
dec
adc
pop
pop
push
push
std
push
jle
pop
sbb
push
lock
adc
jne
retf
mov
lods
ds
movs
(bad)
inc
mov
das
mov
movs
ins
aam
or
or
mov
cmp
gs
mov
(bad)
les
sbb
loopne
cli
push
xchg
rcr
sub
icebp
dec
mov
(bad)
or
les
xor
pop
push
ja
iret
jmp
std
pop
(bad)
int
out
lods
pop
dec
mov
pop
xchg
cdq
iret
mov
lahf
mov
dec
popa
jmp
fcom
and
xor
jns
cmps
or
cwde
push
fisub
leave
test
sbb
lahf
sar
test
inc
ret
stc
cmp
lock
outs
aam
sahf
jle
dec
xor
scas
stos
bound
sbb
aam
repnz
test
out
dec
(bad)
fxch
sub
mov
or
mov
aas
mov
or
pop
test
sbb
adc
adc
ficomp
jo
or
xor
test
test
mov
leave
inc
mul
sub
cdq
dec
retf
es
inc
jbe
int3
xor
xchg
test
ds
inc
lea
inc
aas
sub
xor
pop
push
pusha
xor
dec
adc
clc
sbb
inc
jl
test
test
adc
cmps
adc
cmps
xlat
hlt
jne
jns
cwde
repz
out
push
pop
jne
inc
clc
push
cli
(bad)
sbb
cs
ins
jle
add
(bad)
push
mov
dec
xchg
(bad)
and
js
nop
pop
(bad)
in
xlat
(bad)
ret
inc
imul
cmps
mov
push
jp
fldenv
ja
xchg
in
pop
ror
mov
push
das
aaa
mov
bound
leave
xor
enter
inc
repnz
and
pop
ffree
in
movs
sub
xchg
lock
cmp
jb
push
push
adc
and
mov
nop
jns
das
out
push
mov
adc
cmp
outs
adc
lods
jg
sbb
xor
mov
ror
fwait
mov
pop
repz
sbb
stos
fimul
ss
mov
and
(bad)
lahf
push
push
int
push
icebp
push
and
in
cmp
xchg
sbb
ins
sub
retf
in
mov
retf
adc
pop
jb
add
jb
mov
pop
pop
in
(bad)
mov
movs
leave
out
sbb
loopne
fistp
shl
xor
sub
cwde
inc
xchg
imul
cld
push
shr
add
ficomp
popf
xor
jmp
mov
and
(bad)
mov
sbb
push
xor
xchg
scas
mov
pop
pop
test
clc
pop
adc
mov
mov
shl
shl
mov
sbb
mov
in
push
and
iret
in
push
loopne
add
and
enter
cmps
pop
outs
mov
mov
int3
xor
jb
test
add
dec
pop
sub
jno
xor
xchg
mov
stos
call
dec
push
test
fistp
repnz
xchg
aaa
mov
nop
pop
jo
(bad)
unpcklps
inc
stc
jp
add
mov
add
mov
add
movs
xlat
ds
cld
inc
ret
pop
pop
ins
mov
push
inc
inc
dec
js
adc
popf
pop
push
mov
xchg
cdq
pop
or
test
lahf
jecxz
xor
cs
push
mov
lock
sbb
jge
inc
add
imul
jmp
push
mov
mov
(bad)
and
jmp
jo
mov
daa
clc
pop
fsub
jbe
nop
int3
das
loopne
dec
push
imul
adc
lock
js
cdq
fdivr
xchg
loop
dec
movs
fsub
fsub
xor
mov
push
mov
out
and
inc
add
mov
sbb
cmp
imul
test
daa
adc
pusha
icebp
repz
stos
lds
out
add
adc
inc
in
xchg
dec
mov
jle
push
popf
mov
or
mov
movs
sbb
ret
lods
lds
adc
shl
in
xchg
and
or
(bad)
fnsave
ficomp
stos
in
(bad)
hlt
dec
pop
pop
repnz
dec
adc
cmp
xchg
mov
stos
push
sti
call
outs
pop
in
fst
adc
jge
es
cwde
lods
mov
sbb
adc
jbe
mov
xor
jno
out
arpl
add
adc
sti
test
lock
mov
call
in
mov
sti
add
cli
cmps
lods
adc
call
jb
push
lock
outs
rcr
jle
ins
retf
xchg
test
call
(bad)
cmps
lods
cmps
mov
retf
pusha
lods
or
jo
dec
push
(bad)
xor
ja
call
mov
out
aad
sub
adc
pop
pop
hlt
pop
loope
enter
jecxz
lock
jge
push
pop
sub
xchg
rcr
sub
pop
ins
std
or
inc
xor
ret
aam
jle
fst
loop
xor
fcomp
stc
dec
push
pop
mov
jecxz
pop
int
mov
cmps
pop
and
and
and
fwait
ss
call
(bad)
inc
not
jmp
popf
js
test
sub
leave
jnp
sub
mov
shr
jb
cmp
mov
push
push
mov
xor
inc
mov
add
sbb
mov
mov
adc
pop
test
jg
lahf
cmp
push
dec
jmp
adc
xchg
sti
add
push
mov
mov
xchg
adc
xor
in
mov
retf
ja
(bad)
ss
je
imul
cmc
mov
inc
pop
xor
lods
mov
xchg
sbb
fs
adc
fcomp
pop
cs
icebp
or
inc
push
shl
jl
fs
retf
adc
pop
or
(bad)
dec
push
mov
lds
jl
add
cmps
movs
fdiv
not
sbb
or
cmp
adc
fst
call
sub
add
test
scas
in
fild
shl
pop
jmp
test
(bad)
cs
xlat
push
cmp
sti
push
iret
push
sbb
dec
xchg
jecxz
xchg
lock
mov
bound
cmp
imul
push
mov
pop
mov
mov
bound
fild
dec
xchg
jns
cmp
dec
or
mov
and
pop
gs
add
and
ins
sbb
push
add
call
inc
add
sbb
xor
call
dec
xor
mov
jno
push
ret
movs
mov
adc
xor
jp
int3
dec
mov
dec
add
cmps
xchg
fdivr
and
inc
inc
mov
adc
pop
jmp
repnz
sbb
push
xchg
cmp
scas
loop
inc
jge
in
int
push
cmps
xchg
div
(bad)
xchg
js
pop
hlt
dec
jge
out
pop
aas
js
pop
add
and
push
rcr
cmp
push
aad
loopne
adc
fcomp
pop
fsub
xchg
or
fs
dec
pop
fwait
sub
mov
push
jmp
or
add
outs
jno
sbb
jecxz
sub
add
or
fsub
ror
mov
sub
fisubr
sahf
dec
ds
shl
xor
cmp
lods
add
mov
clc
cwde
(bad)
or
test
loope
dec
inc
jmp
in
jbe
mov
mov
neg
mov
cli
mov
xchg
dec
push
sub
lea
test
jmp
sti
jb
icebp
clc
dec
inc
pop
outs
in
pushf
dec
pop
or
mov
(bad)
sub
dec
pop
cli
scas
mov
pop
enter
xchg
xchg
inc
hlt
xchg
cs
call
cmc
std
fimul
adc
mov
push
stc
sbb
mov
xor
mov
adc
aad
sub
push
sar
fimul
stc
popa
or
and
jge
pop
jb
jns
test
inc
or
sbb
sub
add
mov
cmps
sub
(bad)
mov
dec
and
popf
cmp
mov
jmp
mov
jnp
sbb
and
mov
mov
mov
inc
push
mov
int
bound
xchg
aaa
fcmovnu
mov
ror
ret
jecxz
and
retf
mov
and
jo
jns
add
and
sbb
nop
xchg
cli
push
out
cld
cmp
dec
push
dec
xchg
scas
imul
cmp
scas
outs
add
or
and
shr
aad
add
imul
add
sub
lds
mov
xor
pop
in
(bad)
ins
xor
xchg
stc
ins
xchg
call
stos
cli
mov
fcmovne
aad
pop
sbb
outs
movs
mov
adc
xchg
mov
jmp
sbb
cmc
and
or
sub
cmps
scas
int
ficom
ss
push
(bad)
mov
not
scas
cwde
outs
xlat
mov
ret
add
jl
pop
adc
pop
cdq
add
fbld
ins
push
fisttp
mov
xor
pushf
popa
(bad)
mul
jnp
push
mov
cmp
sub
push
inc
ins
mov
inc
cwde
shl
sbb
aad
dec
shl
push
(bad)
mov
scas
movs
push
push
sti
push
retf
or
mov
pop
in
in
and
mov
jp
fld
mov
stc
add
mov
aad
adc
push
xlat
xchg
xchg
(bad)
popa
add
sub
mov
and
push
leave
xor
shl
loope
or
mov
pop
jbe
push
xchg
fisttp
and
cmps
cmp
mov
cmp
lea
pop
loop
popf
pop
inc
add
lods
push
mov
sub
and
push
inc
dec
adc
inc
jg
outs
out
or
adc
movs
scas
xchg
addr16
loopne
xchg
repnz
aaa
test
cmp
mov
mov
aam
cmp
pop
push
mov
mov
sahf
xor
ret
aad
daa
jmp
sub
mov
add
jne
inc
adc
mov
cmp
fist
dec
adc
push
sbb
or
clc
outs
cld
das
add
and
fidiv
sub
ins
aam
stos
(bad)
imul
jns
jle
add
in
and
fdivp
nop
fidivr
sar
push
daa
mov
test
call
out
int
mov
mov
mov
mov
mov
sub
scas
mov
adc
shr
in
retf
aam
and
mul
cmp
pop
sub
and
bound
mov
lahf
jbe
inc
mov
ret
or
or
push
and
sub
jl
mov
int
aaa
pop
inc
pop
cmp
fisub
popf
in
xor
test
inc
inc
das
pushf
pop
push
pop
mov
and
stos
lea
sbb
das
add
inc
dec
push
inc
call
cmp
adc
sbb
dec
mov
inc
popa
(bad)
mov
mov
xchg
ficomp
sbb
inc
push
xchg
jmp
cmc
mov
(bad)
push
lock
ss
nop
(bad)
ins
icebp
dec
xchg
shr
pop
jg
jge
(bad)
add
jnp
push
popf
loop
and
mov
xlat
xor
pop
je
sahf
mov
push
retf
repnz
xor
mulps
push
dec
jle
push
test
push
push
or
xchg
hlt
pop
and
movs
jp
cmp
sub
dec
xor
sti
add
fadd
scas
xchg
aam
fcmovne
lods
fs
je
ror
jb
outs
not
cmc
scas
sar
dec
hlt
adc
iret
sbb
sub
xchg
lahf
out
lds
in
pop
cli
addr16
or
or
or
rcl
inc
mov
fidivr
fs
in
xor
adc
pop
mov
pop
retf
xchg
imul
mov
into
imul
sub
test
pop
jmp
out
daa
stos
pushf
lahf
and
ss
mov
lods
les
ret
push
pop
push
loope
cmps
nop
mov
cdq
and
ret
inc
mov
xchg
jne
xor
mov
out
data16
rcr
fdivrp
scas
or
and
xchg
mov
pop
add
push
cmp
icebp
xchg
lea
shr
pop
xor
mov
leave
shr
test
mov
xchg
pusha
arpl
shr
shr
retf
out
lods
mov
push
pushf
cwde
pop
cmps
push
popa
neg
(bad)
jb
cwde
out
dec
in
stos
pop
inc
sbb
jge
scas
in
inc
push
cld
push
and
retf
in
ins
fbld
jmp
add
les
pusha
mov
mov
xchg
popf
and
leave
mov
sub
push
xlat
out
fdivr
or
dec
cs
dec
je
shr
cmp
mov
repnz
repz
loopne
dec
or
add
and
push
dec
adc
push
in
xor
scas
dec
sbb
dec
test
xchg
cmp
and
or
iret
jmp
mov
push
jno
sbb
xor
sub
inc
pop
popf
ror
retf
lods
fidivr
inc
pop
jg
and
add
push
adc
sahf
mov
lea
nop
(bad)
addr16
mov
(bad)
leave
mov
xor
adc
data16
cmp
imul
arpl
movs
and
jno
pop
dec
mov
shl
xor
sub
mov
ret
pop
mov
sar
cmc
inc
and
cwde
inc
inc
dec
mov
(bad)
pop
pop
movs
stos
test
jmp
or
sbb
dec
adc
xchg
ret
aam
xchg
pop
mov
mov
jno
xor
mov
xor
mul
(bad)
stc
sbb
iret
arpl
imul
js
aas
sub
xor
ja
and
fst
cdq
xchg
sub
movs
sub
sub
dec
out
or
int
mov
adc
mov
and
adc
or
enter
xor
add
test
mov
jae
fisubr
enter
pop
mov
mov
in
xor
daa
xchg
and
jecxz
sbb
jbe
mov
inc
shr
fucomi
adc
push
dec
cmc
inc
push
adc
lods
mov
ins
dec
aad
adc
adc
jb
cli
mov
cmp
jp
xor
addr16
cdq
push
imul
adc
pop
jmp
jmp
pop
mov
ror
cmp
pop
clc
mov
ror
movs
mov
adc
sbb
fs
std
adc
and
sbb
pop
dec
pushf
add
mov
popf
scas
mov
sub
jp
mov
fsubr
les
loop
or
outs
mov
pop
mov
adc
push
and
mov
sahf
sub
cmove
or
xor
or
bound
mov
std
ss
test
push
inc
dec
xor
add
fstp
cmp
fsubrp
mov
xlat
sub
mov
pop
mov
call
xchg
xlat
cmc
aam
xchg
imul
ins
imul
or
xchg
inc
xor
popf
sti
inc
pop
lods
sbb
pop
mov
loopne
out
daa
pop
pop
mov
jne
dec
call
mov
jmp
or
mov
push
sbb
dec
or
jmp
and
dec
stc
sub
adc
push
or
mov
add
ret
repz
into
mov
and
(bad)
call
cwde
lods
pop
pop
pop
xor
cmp
mov
out
or
fnstcw
test
loop
add
(bad)
scas
or
lea
mov
add
iret
add
hlt
lock
inc
ja
xchg
add
cmp
mov
adc
xor
pop
cwde
mov
mov
mov
mov
jge
ret
rcl
sahf
(bad)
push
xchg
inc
das
movs
or
mov
sub
and
mov
popf
mov
les
loopne
bound
jg
addr16
hlt
repnz
ds
adc
aad
aas
cld
test
cmps
fnstsw
cmp
mov
hlt
test
xchg
push
das
hlt
sbb
rcr
test
dec
(bad)
mov
inc
push
push
push
cmp
mov
xor
push
sbb
adc
add
ins
shl
pop
pop
int3
(bad)
sub
mov
loop
out
mov
pop
scas
aad
or
popf
add
xchg
or
mov
popa
pop
mov
adc
sub
cmps
loopne
sub
mov
xchg
ret
aas
call
cmps
(bad)
sti
or
retf
in
and
aam
imul
push
jno
es
push
cwde
in
lea
push
loopne
mov
mov
call
jmp
mov
jmp
lock
dec
push
dec
pop
xchg
push
aas
repz
stos
js
inc
lock
mov
dec
dec
and
retf
imul
xor
movs
loope
std
add
(bad)
and
call
imul
add
adc
xchg
call
in
mov
ja
pop
xor
into
movs
xor
shl
mov
out
movs
(bad)
mov
jecxz
and
int3
jno
pop
aad
cli
xor
ins
stos
imul
icebp
add
sub
lods
(bad)
sar
int3
sub
or
or
cs
rcr
cs
ja
sbb
and
add
or
icebp
adc
inc
leave
(bad)
mov
jle
xor
xchg
pop
cmp
call
fcmovnbe
enter
in
xchg
loopne
cmp
jl
in
out
mov
imul
mov
pop
(bad)
fisub
sbb
dec
daa
push
push
xchg
xor
jecxz
retf
push
or
sub
icebp
add
ds
adc
cld
lods
int3
rol
inc
imul
inc
jp
mov
mov
jp
and
or
pop
pop
or
mov
dec
cmp
sbb
jecxz
stc
cmc
sub
leave
xchg
bound
je
mov
mov
dec
ds
fimul
push
sbb
add
pop
push
dec
call
lds
(bad)
ins
add
xchg
sub
add
sbb
and
mov
test
fstp
out
push
pushf
mov
cld
cmp
sub
je
sub
aad
outs
leave
mov
xchg
push
jo
inc
call
not
or
or
enter
fiadd
mov
add
rcr
jmp
fistp
out
lock
jmp
cli
cmp
inc
out
stc
nop
mov
and
pop
into
xchg
and
sbb
and
(bad)
and
ret
adc
xor
ss
jns
data16
fbstp
retf
test
cld
test
popa
fld
and
rcl
ds
or
out
mov
outs
mov
loop
mov
fild
sub
sbb
jmp
dec
mov
fnsave
add
out
jg
cs
adc
hlt
(bad)
in
xor
movs
rcl
sub
int3
cs
mov
push
enter
mov
sub
inc
test
inc
repz
pop
xlat
fimul
rcr
or
push
inc
cmps
inc
frstor
mov
mov
xlat
test
mov
push
xor
and
(bad)
sub
loope
inc
(bad)
and
daa
ret
cmp
jl
jge
xlat
or
lods
lock
sbb
cmp
stc
add
sbb
inc
mov
pop
call
push
sub
lock
ret
pop
add
push
test
iret
loope
or
(bad)
fwait
pop
cmp
das
(bad)
movs
pusha
ficomp
inc
dec
xor
mov
jecxz
push
je
adc
jno
pop
mov
ss
xor
cmc
test
je
fild
push
dec
mov
jo
dec
sbb
xor
push
jmp
daa
out
cwde
cmp
sub
aam
cmps
jmp
pusha
and
or
jg
pop
mov
sar
mov
int
(bad)
mov
push
xlat
(bad)
cmp
addr16
push
dec
pop
scas
ds
repnz
(bad)
mov
and
ffreep
idiv
lock
xor
idiv
jp
mov
mov
mov
push
sbb
mov
or
jo
jp
inc
mov
sbb
stc
dec
sbb
inc
gs
pop
lods
cmp
fsubr
out
mov
adc
pop
or
push
xchg
and
stc
repz
add
xchg
or
jl
test
hlt
jb
mov
and
int
xchg
push
fisub
inc
outs
mov
repnz
movs
inc
sar
cmp
pusha
leave
aam
cmp
pop
rol
or
cmp
imul
addr16
pop
push
sub
jp
ja
retf
loopne
fbstp
(bad)
fcomp
mov
fwait
das
xor
scas
push
adc
adc
adc
in
or
push
clc
idiv
movs
cmps
push
retf
iret
push
loope
and
cmp
mov
cmp
ds
jle
sti
int3
cmp
sbb
imul
adc
shr
out
fcomp
add
daa
mov
lahf
pop
push
add
mov
scas
jmp
and
jb
sbb
cmps
inc
or
xor
aaa
mov
adc
out
mov
add
pushf
pusha
jmp
into
out
push
add
js
sbb
lds
les
sbb
mov
pop
std
and
lods
jno
push
cdq
sahf
mov
test
mov
cmps
mov
loope
shl
ins
add
xchg
test
fcomp
(bad)
inc
fucomip
jnp
repnz
mov
je
dec
cli
(bad)
out
jg
jmp
lahf
or
inc
jnp
fwait
xor
lock
mov
mov
dec
pop
push
cmc
sub
mov
inc
iret
adc
sar
sub
sbb
inc
and
and
jecxz
sbb
out
xor
arpl
daa
mov
mov
test
mov
xchg
sbb
test
add
rol
cmp
loop
xor
icebp
jns
cmp
fnstcw
add
inc
lahf
push
pushf
mov
inc
or
std
ret
hlt
dec
int3
pop
sbb
sbb
and
inc
pop
arpl
add
rcl
cmp
aas
fistp
shl
(bad)
sub
retf
push
test
test
lods
sub
inc
mov
mov
dec
push
adc
out
xchg
sbb
pop
test
cwde
inc
adc
push
enter
cdq
jmp
cmp
push
adc
popa
sbb
add
adc
retf
int3
push
lods
lods
aaa
jne
mov
pop
test
leave
mov
jbe
call
das
ds
sbb
pop
fnstsw
adc
cmp
and
std
adc
aas
retf
sub
xor
jle
push
mov
xchg
div
out
addr16
in
jmp
popf
je
cld
div
xchg
jg
mov
ret
cmp
call
and
and
pop
jmp
fdivr
mov
sar
fyl2x
mov
sbb
ss
popa
jbe
jno
int3
sub
rol
push
pop
fcom
xchg
das
and
and
adc
je
and
iret
push
pop
(bad)
jbe
mov
lods
sbb
mov
pushf
sbb
repz
adc
cmps
lods
mov
stc
mov
pop
lahf
add
int3
clc
scas
sbb
cmp
push
inc
popf
and
aad
fist
or
(bad)
repz
cli
pmullw
scas
add
mov
fidiv
loope
add
es
xlat
mov
mov
icebp
in
sti
rcl
mov
inc
aaa
mov
hlt
adc
mov
or
in
ret
inc
addr16
jb
jne
in
sbb
xchg
std
sbb
loope
xchg
add
daa
test
pop
mov
std
xchg
addr16
xor
jp
aad
add
mov
lea
mov
lds
push
scas
fbld
mov
inc
jae
pop
sbb
mov
inc
push
push
movs
push
pusha
not
in
movs
or
stos
add
mov
hlt
sbb
and
add
ret
scas
stos
push
mov
or
mov
mov
fcmovnu
ror
aam
addr16
xchg
mov
or
push
or
stos
mov
dec
add
dec
sub
out
fld
xchg
inc
mov
push
das
jmp
or
movs
scas
stos
jne
push
and
gs
cmp
add
cmp
repnz
test
lock
pop
lahf
adc
nop
cs
(bad)
cmp
or
mov
xchg
adc
mov
pop
xchg
les
cwde
shl
sahf
mov
loop
dec
sbb
cmp
in
or
fs
xor
xchg
push
mov
push
sti
enter
dec
dec
jl
sbb
ins
aam
call
sub
push
sti
jne
outs
std
in
dec
pop
test
shl
das
adc
pop
xchg
dec
cmp
sub
enter
jmp
add
xchg
mov
sbb
iret
xchg
jge
enter
stos
rol
shl
push
(bad)
fsub
pop
mov
jge
push
fcmovnu
adc
cdq
or
cdq
add
jns
mov
push
imul
mov
fldcw
(bad)
sub
cli
nop
shl
cmp
out
mov
dec
in
pop
inc
fcmovnbe
or
fimul
xchg
(bad)
js
popf
lea
mov
mov
jo
jg
es
dec
jns
lahf
icebp
ss
and
push
enter
sub
dec
adc
retf
das
adc
mov
pop
xchg
add
imul
repnz
loopne
inc
push
push
xor
pop
dec
inc
das
cmp
(bad)
movs
fwait
and
push
add
lds
rcr
xchg
stc
push
das
aad
imul
out
dec
jo
and
daa
sbb
pop
lods
xor
xchg
jp
mov
pop
add
and
push
sub
mov
jb
add
sbb
or
movs
cmps
or
mov
and
fwait
xchg
fisttp
pop
or
pop
fiadd
sar
div
jne
mov
jg
jns
nop
mov
popf
lods
sar
call
add
add
adc
dec
hlt
add
(bad)
fist
inc
xchg
xor
cvtpi2ps
loopne
xor
fnstcw
mov
jne
pushf
je
movs
mov
daa
arpl
xor
pop
daa
ds
jge
data16
dec
mov
into
cmc
mov
dec
xchg
sub
fldcw
sti
xor
loope
test
push
(bad)
(bad)
dec
hlt
xor
cld
add
mul
push
sti
pushf
push
ror
pop
cld
inc
mov
hlt
retf
sub
adc
into
retf
inc
test
sub
xor
jb
iret
jne
int3
sub
je
jge
mov
les
mov
push
dec
in
icebp
lods
es
sbb
cmp
mov
adc
dec
and
jmp
adc
fadd
stc
add
inc
xchg
add
fstp
shr
cld
jmp
aam
daa
pextrw
sub
push
popf
scas
xor
sbb
mov
daa
cld
inc
fnstenv
cdq
inc
int3
int
mov
pop
movs
(bad)
jmp
test
sub
std
push
adc
in
pop
cmps
or
popf
fst
adc
ja
cmps
aad
mov
sub
mov
test
fnstcw
xchg
push
sti
cmps
js
jmp
ret
and
jno
ja
popa
cmp
imul
leave
mov
dec
lahf
cmp
lds
pop
mov
adc
add
inc
ins
call
mov
std
or
test
loop
hlt
sti
call
sahf
pop
faddp
dec
push
cdq
icebp
sub
mov
movs
scas
sbb
sar
jmp
push
adc
imul
scas
ror
sub
and
cmc
xchg
cmp
and
xor
mov
arpl
in
movs
sbb
mov
push
imul
pushf
int3
dec
fmul
dec
test
xchg
in
dec
mov
imul
xor
aad
loop
icebp
mov
inc
cld
xchg
mov
push
aaa
jno
bndstx
add
mov
and
loope
add
out
dec
in
adc
inc
(bad)
mov
out
je
sahf
aad
stos
inc
xor
mov
push
aam
mov
mov
pop
mul
jae
popa
or
fisub
repz
fdivp
xor
fs
add
inc
push
sti
jo
mov
sub
xchg
dec
sbb
jp
shr
add
pop
dec
cmp
repnz
or
sub
jae
fldenv
jg
scas
cwde
rcl
jns
(bad)
mov
jmp
or
inc
sbb
cli
push
cmps
out
inc
fdivr
sbb
int3
aam
push
stc
clc
jp
jl
enter
inc
jmp
mov
loop
imul
aaa
jns
pop
(bad)
or
pop
enter
retf
push
fidiv
aas
loop
jo
stc
loopne
jns
in
pusha
mov
mov
es
fidiv
and
mov
stos
adc
inc
jmp
mov
jp
loope
mov
cmp
mov
inc
inc
xor
push
out
movs
outs
mov
jnp
mov
aas
push
or
ja
ret
mov
outs
dec
jle
shl
stc
rcl
clc
push
xchg
dec
mov
(bad)
adc
sub
jbe
int
cmp
movs
ror
inc
lods
ss
mov
push
add
fwait
(bad)
outs
pop
pop
hlt
push
push
cwde
inc
sbb
pop
or
shl
cwde
add
iret
mov
xchg
in
pop
out
adc
xchg
retf
mov
inc
jbe
sub
imul
push
add
dec
push
out
cdq
push
enter
jb
mov
and
mov
adc
enter
out
outs
mov
mov
in
sbb
movs
inc
in
jbe
shl
sti
adc
or
sbb
lods
dec
sub
arpl
fimul
ror
and
xchg
xlat
sbb
movs
jg
gs
bound
or
cmc
out
and
sub
retf
inc
test
in
xor
call
cwde
mov
mov
outs
ficom
call
mov
mov
cs
fld
imul
(bad)
mov
cmp
inc
xchg
add
outs
arpl
in
and
sbb
pop
add
fistp
cmps
fistp
xor
(bad)
mov
in
popf
cmp
add
idiv
sub
inc
cmp
in
xchg
xor
int
mov
mov
arpl
(bad)
pop
test
cmp
sahf
jmp
loope
xchg
push
xor
sbb
jb
pmaddwd
out
rol
jne
pop
mov
inc
pop
xchg
mov
mov
mov
push
pop
or
dec
(bad)
xchg
rcl
or
xchg
inc
pop
xor
adc
push
jns
ss
pop
adc
push
popa
xchg
pop
and
or
xor
in
jp
nop
push
jle
enter
cld
hlt
ret
das
inc
hlt
push
out
jns
pop
data16
popa
enter
push
div
in
int
xchg
ror
mov
test
jge
and
jecxz
xchg
sub
and
mov
imul
lds
(bad)
bound
jg
(bad)
mov
pop
enter
push
add
(bad)
xchg
adc
(bad)
pushf
jns
mov
dec
and
mov
mov
cmp
neg
sbb
add
int3
dec
imul
test
fwait
xchg
lds
xor
fiadd
out
scas
xor
lock
clc
pop
push
pop
add
jae
test
jl
(bad)
sbb
lds
push
push
les
inc
mov
inc
push
pop
mov
inc
hlt
int
bound
cmps
imul
scas
mov
jg
sbb
mov
pop
mov
xor
dec
hlt
pop
inc
scas
push
jbe
pop
ror
loop
ins
mov
lods
std
rol
sbb
lea
retf
retf
or
jo
loopne
mov
add
mov
nop
jne
cmps
cmps
out
lods
loop
imul
push
cs
fisttp
fcom
xchg
mov
push
and
xchg
cmp
or
out
idiv
sub
in
dec
sar
add
mov
sahf
pop
xor
pop
not
fsub
movs
inc
mov
mov
sub
fsubp
sub
loope
shr
push
movs
scas
cmp
mov
adc
jmp
lea
popa
and
fdivr
dec
add
in
jle
mov
ds
cs
lds
dec
sub
icebp
jge
shld
ds
ins
aas
xchg
clc
popa
sbb
(bad)
pop
daa
sti
mov
jnp
mov
out
pop
in
out
rcl
sub
lock
and
sub
jecxz
add
lods
out
mov
hlt
jns
hlt
movs
and
dec
sar
push
mov
add
pop
popa
aas
xchg
fidiv
sub
movs
push
in
iret
into
push
xor
push
and
ins
inc
aaa
adc
mov
xor
pop
pop
fldcw
add
xor
in
loope
cmp
fcom
es
mov
xchg
sbb
add
dec
aad
adc
jecxz
(bad)
rcr
in
xor
fidivr
nop
outs
jge
inc
pop
push
push
dec
cmp
call
cmp
pop
data16
mov
pusha
pop
test
cmp
psubw
jae
and
inc
mov
test
aas
push
fsub
retf
mov
es
cwde
fidivr
push
push
loope
ret
or
cmp
cs
mov
inc
adc
test
mov
aaa
adc
in
or
jp
mov
mov
hlt
jg
push
call
imul
jmp
and
jnp
jb
ret
dec
repz
mov
adc
ror
scas
outs
fucomi
jp
rol
xor
(bad)
xor
jge
xchg
mov
out
mov
daa
lock
jns
(bad)
jb
call
aaa
and
or
mov
mov
jo
test
sbb
pop
stos
cmp
or
push
out
pop
jp
std
movs
test
or
adc
inc
imul
aaa
retf
dec
(bad)
clc
xlat
into
pop
xor
xor
mov
adc
cmp
bound
or
cld
mov
stos
xchg
sbb
xor
sbb
cwde
pushf
cmc
test
add
jl
cmp
push
add
mov
cs
mov
jl
xchg
pop
push
xchg
pop
pop
adc
mov
pop
(bad)
xchg
add
fst
ins
jae
xchg
cmp
pushf
ret
pusha
push
cmp
and
jmp
cmp
mov
lahf
push
dec
int
mov
(bad)
cmp
pushf
stos
pop
push
aad
cmc
inc
(bad)
and
ret
mov
ins
fst
es
adc
sti
mov
pop
movs
jecxz
and
int3
mov
cmp
mov
xor
lea
movs
push
or
xor
xor
sbb
shl
mov
iret
xchg
hlt
xor
sub
jmp
cmps
jo
xchg
jge
popf
(bad)
xor
out
and
dec
xchg
mov
sbb
retf
test
cs
lock
mov
stos
ja
shl
test
xor
inc
mov
dec
xor
push
sbb
idiv
mov
scas
int3
inc
pause
inc
les
cld
and
and
mov
int3
mov
fnstsw
add
in
test
fnstcw
jns
call
mov
pop
outs
dec
sbb
jg
sbb
xchg
adc
loop
je
repnz
sub
movs
push
nop
pop
inc
mov
loop
cli
mov
jecxz
xchg
adc
pop
and
or
push
lods
xor
rol
sub
jg
dec
aas
dec
xor
fcom
shl
mov
(bad)
stos
xchg
scas
mov
mov
mov
jae
jae
sub
add
and
mov
xchg
inc
sub
sahf
mov
adc
repnz
or
clc
shl
pop
mov
mov
sub
clc
adc
push
cli
mov
pop
pop
xor
scas
inc
int
iret
into
loop
das
mov
or
sub
fdivrp
es
daa
fwait
jns
xlat
shr
push
test
int
je
or
push
inc
mov
hlt
sub
dec
fs
pop
cwde
(bad)
adc
dec
xchg
mov
lock
and
ins
mov
mov
mov
xchg
or
xor
inc
jmp
or
sti
jne
pop
and
mov
shr
mov
repz
es
pop
popf
add
jb
dec
jmp
inc
add
and
ja
into
shr
add
les
test
fidiv
sahf
fist
xchg
pop
sub
inc
jmp
dec
hlt
outs
pop
xlat
push
or
add
jnp
outs
retf
mov
xlat
sub
gs
add
ror
xchg
ret
cmps
mov
xlat
dec
cld
jecxz
xor
sbb
mov
aad
imul
sbb
xchg
(bad)
xchg
inc
out
pop
(bad)
and
outs
call
push
popa
lods
ins
int3
mov
or
jbe
jns
jmp
push
sbb
call
fcomp
ficom
push
(bad)
xchg
and
retf
in
adc
ror
out
mov
or
lea
jo
daa
cmp
fwait
cmps
sti
cs
push
push
retf
je
cdq
adc
sar
push
xchg
ret
js
movs
jno
pop
and
inc
xor
dec
cwde
xor
and
jns
out
pop
sbb
push
xor
mov
dec
mov
pop
pop
cmp
je
cli
jmp
inc
inc
out
add
loop
(bad)
out
test
imul
iret
push
out
es
sbb
or
jecxz
nop
pusha
dec
aad
dec
push
mov
lea
test
sub
mov
xor
mov
aam
sub
iret
rol
dec
mov
outs
sub
xchg
mov
sbb
mov
push
sub
pop
rcl
add
or
sub
sub
dec
cld
leave
jge
(bad)
pop
sbb
cmp
or
ja
xchg
push
mov
sbb
xchg
adc
ins
bound
sahf
mov
repz
sbb
out
cmps
adc
add
pusha
push
in
inc
cli
cmps
mov
scas
pop
inc
pop
pusha
xor
pushf
pop
mul
int3
adc
movs
sahf
push
dec
cli
pop
(bad)
rol
fsubp
nop
inc
mov
(bad)
pop
jns
out
std
pop
mov
ja
inc
cwde
xor
pop
mov
adc
mov
out
push
or
stc
leave
out
adc
add
push
and
push
sub
imul
jno
loopne
adc
fcomp
fwait
add
jo
cli
dec
mov
ins
lea
inc
sub
cmc
or
shr
sub
cmps
jmp
ins
scas
jecxz
xchg
popf
dec
icebp
clc
xor
xchg
jo
loopne
jo
rcr
int
pusha
(bad)
sub
gs
ret
movs
or
cmp
sbb
inc
pop
mov
jmp
and
inc
sbb
aaa
push
adc
dec
cmp
(bad)
push
jl
or
out
(bad)
xchg
scas
out
imul
shr
popf
and
push
repnz
sar
pushf
cmp
push
mov
loop
jno
push
pop
sub
gs
add
sub
out
cdq
jle
push
mov
in
mov
cmp
scas
dec
adc
js
out
sbb
add
hlt
push
leave
cld
sub
and
or
adc
cld
xor
pop
sub
mov
loop
jb
imul
and
loop
mov
scas
sub
stos
cmp
idiv
xor
mov
push
add
sub
fwait
xchg
mov
in
ret
out
in
jp
push
das
inc
cmp
cli
(bad)
xlat
stos
aad
sahf
cmp
movs
jno
repz
push
adc
leave
sub
sbb
stc
test
test
fnstsw
jae
inc
cwde
xchg
pop
stos
rol
(bad)
pop
sbb
pop
popf
clc
cmp
cdq
nop
and
adc
jmp
and
shl
push
jns
xchg
jnp
cmp
push
fsub
cmp
cmp
test
ret
rol
xchg
das
pop
jb
in
(bad)
jmp
mov
in
ret
sub
jmp
call
xor
mov
fisub
bound
into
inc
sub
loope
sub
xlat
ret
ins
and
arpl
dec
(bad)
(bad)
adc
xchg
xlat
dec
or
imul
stos
adc
adc
es
fild
std
inc
xchg
stc
popa
loop
pop
dec
ret
stos
jo
out
sar
push
xor
mov
sbb
(bad)
int3
pop
imul
sub
push
pushf
stos
lds
mov
lea
jge
hlt
sbb
inc
jge
sbb
into
loop
mov
mov
hlt
mov
dec
xchg
sbb
push
movs
sahf
(bad)
xchg
sub
jns
stos
(bad)
inc
sbb
out
push
push
retf
mov
out
xchg
mov
loopne
fld
mov
dec
adc
sub
pop
push
call
xor
out
dec
out
inc
jb
mov
push
out
add
(bad)
popf
sub
(bad)
or
jmp
fldenv
fld
aam
jns
push
xor
aam
dec
jge
fwait
inc
arpl
dec
(bad)
xlat
dec
aas
loope
cdq
pop
jnp
pop
sar
adc
pop
cmp
push
and
cld
repnz
mov
cli
fidivr
mov
cmp
xor
addr16
jae
movs
loop
dec
sbb
xchg
pop
sub
call
rcr
(bad)
retf
sti
add
sti
or
in
repz
xchg
cmp
retf
pop
addr16
mov
mov
cmp
push
xor
les
mov
(bad)
call
aam
jnp
pop
pop
mov
sbb
fld
movs
xor
dec
mov
outs
fwait
xchg
cmp
mov
leave
sbb
push
packssdw
aaa
in
jae
sub
scas
push
in
push
xchg
dec
add
lds
in
loope
dec
add
adc
push
jns
or
rcl
jl
pop
push
imul
dec
cmc
fimul
ins
pop
movs
xor
mov
sbb
scas
lea
mov
aaa
call
dec
repnz
jbe
inc
push
add
inc
fist
jb
pushf
xchg
retf
jne
hlt
retf
dec
adc
or
cmp
add
dec
sub
sbb
popaw
cmp
cmp
(bad)
mov
push
pop
pop
add
or
adc
mov
xchg
ss
or
mov
dec
sbb
leave
ret
cmp
cmp
dec
je
jp
pop
jnp
clc
enter
or
inc
and
dec
ds
xor
sub
mov
dec
dec
jecxz
movs
out
mov
pop
ja
out
xor
out
bnd
push
sbb
je
into
xor
(bad)
imul
sub
fbstp
(bad)
mov
adc
aas
mov
(bad)
jmp
mov
xor
movs
push
enter
cmp
test
cmp
test
pop
bound
in
xchg
jmp
and
lahf
(bad)
push
ror
jl
out
cdq
lds
cmp
inc
fwait
mov
les
push
iret
or
popf
ins
aaa
fist
jnp
jb
adc
scas
mov
cmp
imul
fsubr
fmul
nop
mov
icebp
jbe
mov
lahf
repnz
fild
mov
jle
or
fld
mov
lock
mov
mov
push
std
pusha
mov
fwait
jb
leave
das
dec
mov
popf
sbb
or
cmp
dec
popf
adc
mov
jbe
adc
mov
pop
das
pop
jnp
pop
je
push
aad
xchg
inc
push
loopne
fcmovu
cli
loop
jae
lahf
test
or
in
cmps
stos
cmp
sbb
dec
and
sbb
cmp
inc
pop
jp
mov
pop
retf
test
inc
(bad)
leave
jle
shl
test
pushf
fisttp
(bad)
jb
xchg
popf
aaa
mov
les
mov
cmp
mov
mov
push
add
mov
(bad)
push
js
push
lods
adc
shr
pop
xchg
cmp
add
and
xchg
(bad)
xlat
mov
add
sub
or
mov
ret
or
sbb
rep
hlt
push
movs
inc
repnz
jecxz
rcr
fistp
add
ds
push
mov
test
sbb
jecxz
or
hlt
add
(bad)
(bad)
(bad)
call
adc
idiv
inc
enter
in
lock
lds
test
icebp
inc
std
outs
and
jno
inc
out
dec
cmps
js
out
lahf
fisttp
inc
adc
out
adc
add
mov
popa
cmp
xchg
xchg
mov
pop
fs
mov
scas
(bad)
arpl
mov
sbb
movs
pop
pop
imul
mov
adc
fldcw
out
jg
clts
sub
mov
sub
pop
daa
push
sub
mov
sti
cmps
jnp
shl
hlt
lock
stos
mov
sbb
mov
mov
hlt
jg
aam
fisubr
xchg
daa
inc
jo
shl
push
lods
out
scas
(bad)
fcom
or
pop
jns
inc
pop
loop
ds
mov
sub
ja
push
pop
add
jne
test
push
loop
xor
iret
xchg
js
add
push
fs
mov
mul
or
add
retf
ret
jae
movd
cmp
xor
push
add
movs
mov
out
pop
imul
adc
ss
sahf
pop
sbb
xchg
popa
push
in
jnp
ss
jbe
xor
inc
xor
and
sbb
xchg
outs
fldenv
dec
rcr
xor
mov
in
jae
jge
movs
mov
and
jge
or
adc
mov
loop
in
cmc
pop
mov
enter
dec
or
pop
pop
sbb
or
popf
inc
movs
mov
and
dec
cwde
out
xchg
mov
cmp
test
out
cmp
(bad)
pop
aaa
push
jmp
sub
and
and
or
inc
dec
fwait
test
push
xlat
cmp
test
mov
pop
and
imul
sub
(bad)
cld
sub
pusha
iret
inc
out
push
mov
jge
push
les
test
scas
and
call
and
imul
mul
or
dec
or
pushf
xchg
jns
adc
mov
rcl
jmp
pop
xor
lods
shl
xchg
and
jae
mov
jecxz
fwait
dec
pusha
aad
push
mov
jne
pop
mov
clc
cli
dec
mov
into
jge
sti
mul
rcl
dec
jno
imul
scas
adc
js
es
dec
pusha
movs
and
xchg
stos
jecxz
jl
bound
movs
or
lock
push
cld
(bad)
adc
mov
mov
dec
pop
mov
and
rol
and
push
daa
retf
into
call
outs
test
mov
ds
cmovno
sbb
icebp
pop
sti
add
xchg
pop
inc
shl
pop
xlat
jmp
scas
add
fstp
sub
push
cmc
mov
out
adc
jns
jno
in
shr
and
cmps
xor
outs
int
ja
adc
shl
shl
inc
add
push
xor
sbb
jecxz
mov
adc
cmc
sbb
push
cli
pop
clc
jmp
stos
(bad)
iret
dec
enter
mov
jl
mov
cli
add
add
fldcw
sbb
jecxz
in
mov
scas
push
jmp
aas
mov
add
or
push
add
(bad)
xor
adc
neg
xchg
dec
or
inc
sbb
fidiv
adc
or
sbb
xor
inc
jle
(bad)
xchg
and
pop
rcl
dec
push
leave
cmps
jmp
and
cmp
(bad)
aad
mov
push
cmp
jo
shr
adc
inc
out
outs
xchg
dec
lods
or
push
mul
lea
mov
jo
call
dec
inc
aaa
hlt
xchg
leave
or
mov
lods
ins
mov
test
or
shr
xor
das
sub
mov
cmps
stos
mov
xor
outs
lods
ins
(bad)
or
js
xor
dec
push
sbb
stos
push
repz
loope
rol
dec
jge
fdivr
adc
jnp
repz
addr16
cmp
fnstsw
leave
jne
inc
push
dec
daa
ins
out
mov
in
aas
sub
jp
mov
pop
push
cli
rcr
movs
mov
inc
pushf
mov
inc
push
sti
push
xchg
xchg
sbb
adc
dec
xchg
rol
inc
xor
pusha
push
jae
arpl
cmp
adc
dec
push
cmp
inc
mov
scas
sar
call
icebp
mov
sahf
jno
movs
mov
push
pop
mov
popa
or
push
push
add
jo
pushf
push
fcomp
push
mov
adc
je
fdivr
ins
push
stos
aam
int3
sbb
das
cmp
ret
loop
loope
rcr
mov
cmc
xor
retf
popa
popf
loopne
jae
int
inc
into
sub
jnp
movs
in
popf
push
mov
xor
mov
or
mov
rol
ins
add
pop
jns
sub
aad
pop
push
hlt
out
push
fnstenv
jae
inc
mov
getsec
xchg
add
jge
jb
dec
cmp
adc
iret
pop
es
aaa
ds
fwait
mov
inc
hlt
lea
loopne
in
shl
push
fidivr
dec
dec
dec
jns
inc
and
or
pop
adc
aas
ins
mov
into
(bad)
jmp
es
push
xor
jns
nop
das
pop
ficomp
xor
dec
xlat
inc
push
hlt
sbb
ja
adc
cmps
add
adc
out
fisubr
out
sbb
jl
int
mov
sub
jle
rcl
mov
cwde
and
test
jecxz
mov
pop
daa
push
mov
stc
lea
ds
xchg
pop
retf
cmps
scas
es
sbb
jno
leave
mov
ins
aam
adc
test
jle
sub
pop
xchg
add
call
inc
and
popf
adc
or
das
cld
popf
mov
(bad)
fidivr
mov
jmp
jmp
scas
clc
test
inc
mov
mov
xchg
or
inc
in
or
add
or
cld
xor
pop
xchg
xor
mov
test
mov
sub
adc
rol
sub
cmc
mov
cmp
push
stos
loopne
lods
ret
stc
loope
sub
inc
push
repz
push
cwde
das
hlt
adc
xchg
and
ds
or
inc
mov
adc
movs
inc
or
xor
jp
add
sub
jns
loop
data16
das
imul
mov
mov
out
push
inc
inc
or
and
lahf
cmps
pushf
retf
repnz
(bad)
scas
inc
mov
je
in
repnz
fnsave
xchg
sub
push
sub
mov
add
jnp
out
dec
sub
inc
or
dec
ret
cmp
push
mov
xchg
call
mov
stos
xchg
xchg
inc
inc
int3
lods
imul
stos
out
(bad)
test
mov
fisttp
pop
shr
dec
ja
std
adc
pop
call
sub
xchg
div
retf
shl
mov
ror
push
int3
inc
xchg
ret
add
mov
gs
in
les
iret
stos
sbb
lods
movs
hlt
aad
cwde
call
push
(bad)
push
es
je
rcr
pop
xchg
mov
pop
mov
call
or
mov
fnop
jmp
retf
xor
test
ja
inc
sub
xor
loop
scas
movs
retf
ja
div
scas
add
outs
mov
fcmove
adc
or
jp
cld
ret
out
pop
jo
mov
sub
xchg
sti
add
sbb
cmp
vpshuflw
and
lock
jg
jno
cmpps
xor
test
daa
loop
movs
or
push
pop
mov
out
jge
pop
jnp
cmps
popa
xor
ds
scas
dec
xor
fstp
pop
sti
dec
popa
aam
arpl
imul
inc
test
mov
cmps
dec
sbb
mov
add
jnp
xchg
cmp
sbb
shr
or
or
frstor
or
rol
mov
popa
es
jecxz
fsubr
and
and
sar
xlat
inc
loopne
mov
or
stc
(bad)
adc
mul
or
sub
into
mov
es
aaa
cmp
mov
jge
jg
(bad)
mov
mov
lods
out
cmp
(bad)
fs
in
mov
push
aas
sub
xchg
out
jno
add
push
shl
mov
dec
mov
daa
loope
mov
(bad)
imul
shl
out
pop
sbb
push
or
mov
mov
push
add
jbe
and
push
pushf
push
into
cmc
jle
jp
jle
jno
jbe
and
xchg
add
cmp
jno
cmp
jecxz
jle
aam
xchg
xor
xchg
fidiv
outs
xchg
lahf
out
lods
or
or
psraw
jl
jmp
stc
mov
jle
daa
shr
ins
es
push
jp
pop
dec
retf
mov
mulps
sub
mov
std
mov
call
retf
fistp
push
imul
fcomip
data16
sar
ret
dec
sar
inc
pop
xor
movs
or
mov
dec
into
rcr
cmc
jns
stos
fcom
(bad)
faddp
adc
dec
sbb
bound
dec
fidiv
loopne
add
loope
js
jae
fs
sti
and
mov
outs
shl
stos
sahf
(bad)
cmp
loope
das
daa
cwde
pop
dec
or
mov
mov
lods
shl
idiv
adc
xchg
mov
sbb
xchg
repnz
xchg
cmc
mov
call
sbb
cwde
xchg
dec
out
push
mov
mov
jns
movs
jns
sahf
test
test
stos
push
int3
mov
int
jnp
movs
mov
mov
pop
jnp
adc
jmp
ins
outs
cmp
cmp
sti
and
pop
inc
out
pop
ficom
sbb
sbb
push
mov
dec
sub
and
aaa
or
arpl
popf
jle
or
jl
mov
ins
adc
sub
xor
js
icebp
adc
xchg
inc
sub
sbb
test
int3
in
lods
inc
lds
cmp
add
in
cmc
jmp
jae
xchg
or
icebp
jo
mov
fldenv
scas
(bad)
sbb
test
mov
sub
movs
or
adc
inc
xor
iret
test
adc
shr
or
pop
mov
in
(bad)
xchg
int
jg
push
and
add
inc
cmp
xchg
and
(bad)
stos
aas
push
and
ret
jns
(bad)
dec
ss
or
jecxz
call
add
les
lahf
jecxz
imul
jne
mov
sar
int
enter
stc
cwde
jle
cmp
push
out
adc
push
imul
xor
or
call
call
retf
push
push
and
inc
int
std
push
jp
arpl
mov
mov
adc
jmp
inc
cwde
adc
xor
inc
jle
add
call
push
jno
adc
out
jmp
mov
push
xor
iret
cmp
push
push
stos
cmp
lock
jge
dec
out
mov
aaa
call
pop
dec
into
imul
cmp
and
in
das
scas
push
xchg
stos
push
jecxz
aad
repnz
divps
pop
movs
fbld
aaa
jbe
jl
mov
imul
pop
in
inc
in
clc
test
fdivr
and
(bad)
fistp
sbb
push
je
out
mov
call
add
cs
pop
test
dec
add
shl
cs
sbb
mov
sbb
movs
and
and
es
mov
outs
push
iret
lea
pop
push
dec
pusha
call
icebp
add
ss
dec
jb
adc
retf
fnstcw
ss
fisttp
data16
pop
pop
jne
xchg
jmp
xchg
inc
mov
cwde
hlt
push
inc
xchg
add
rcl
scas
addr16
dec
adc
mov
pop
je
repnz
repz
sub
push
xchg
ds
cmp
es
(bad)
out
push
ja
into
repz
cmp
lods
xchg
jp
mov
and
enter
loop
inc
jp
xor
movs
xchg
add
imul
push
mov
aaa
push
mul
mov
fbstp
and
cmp
add
push
or
test
inc
stos
push
push
dec
lock
mov
dec
sbb
cmp
call
sbb
cmp
mov
fisttp
and
inc
xchg
cwde
lahf
sub
sbb
xor
je
cmps
xchg
retf
inc
dec
lods
cmp
outs
and
and
sbb
ss
mov
rol
test
jmp
jmp
int
or
cmp
cs
xchg
mov
imul
mov
inc
jg
mov
xor
sub
outs
pop
fistp
les
mov
mov
cdq
dec
ss
dec
push
mov
mov
mov
imul
(bad)
icebp
in
or
lods
sbb
and
rol
jmp
mov
and
je
aad
sub
xor
loope
dec
mov
repz
inc
mov
sub
popf
mov
dec
jnp
push
inc
cmc
(bad)
xchg
mov
dec
ja
pcmpeqd
pop
nop
rcl
pop
xchg
daa
xchg
aad
mov
test
ja
int
cmp
movs
adc
enter
pop
adc
jl
lock
add
pop
in
inc
test
sub
mov
sbb
test
ficom
sbb
es
sbb
shl
popf
or
or
dec
push
and
mov
mov
jecxz
mov
push
mov
or
sub
imul
dec
jmp
test
in
xchg
lods
jecxz
pop
retf
xor
push
push
xchg
ret
sbb
mov
mov
inc
jno
leave
pusha
mov
fisub
nop
jl
hlt
in
iret
ret
xor
call
stc
popf
bound
sub
les
sahf
repz
sbb
xchg
jne
sbb
stos
push
pminsw
push
mov
mov
push
mov
in
(bad)
icebp
mov
or
in
jnp
add
mov
cdq
pop
dec
inc
ficomp
cld
mov
xor
mov
repnz
pop
mov
and
jl
mov
jl
sahf
pushf
int3
xchg
sar
aas
cmp
movs
mov
sub
xchg
jno
jb
dec
outs
stos
inc
inc
jmp
call
leave
in
ror
test
sbb
sar
adc
pop
retf
mov
xchg
sbb
fnsave
adc
lds
gs
jbe
arpl
shl
mov
call
or
or
jnp
xchg
mov
or
call
sbb
test
rcr
popa
icebp
xor
mov
add
xchg
push
push
cwde
adc
mov
jnp
sahf
mov
sbb
mov
adc
loop
jb
cmp
jecxz
lds
mov
push
icebp
sub
inc
jb
mov
ret
daa
dec
popa
in
shr
test
cli
es
stos
std
sub
out
inc
lods
mov
inc
ror
mov
dec
pop
jecxz
push
lds
imul
mov
mov
rol
sbb
push
xchg
xchg
adc
push
jmp
mov
inc
fistp
ja
ins
pop
push
add
hlt
push
add
pusha
retf
ror
pop
ins
shl
dec
aam
push
jl
pop
leave
sahf
mov
(bad)
fadd
or
test
ins
push
nop
clc
imul
push
iret
cmp
sbb
gs
mov
(bad)
fldcw
dec
adc
in
cmp
push
lods
pop
aam
sar
or
xchg
(bad)
loop
ja
xor
xchg
mov
cmps
or
or
and
(bad)
mov
loop
fld
das
mov
into
dec
xor
cmp
fidivr
mov
cmp
bound
fisub
lods
test
and
fsubr
es
fwait
enter
iret
inc
pop
mov
or
push
stc
call
mov
push
out
adc
scas
std
cmps
jmp
inc
mov
mov
add
cmps
mov
add
(bad)
jg
and
push
cmps
cli
or
and
add
xchg
int
sub
aas
adc
js
xor
call
pusha
retw
sahf
mov
sbb
mov
(bad)
es
fucom
inc
inc
aas
out
jae
movs
ins
mov
cmp
mov
lds
into
fcomp
lds
cmp
jne
sub
xchg
mov
inc
xchg
loop
or
mov
outs
call
sbb
push
leave
movs
xchg
push
mov
mov
fisttp
in
pop
xlat
in
xor
sbb
sbb
xor
test
je
inc
movs
jmp
sbb
imul
hlt
mov
enter
pop
popw
dec
ins
int
add
jns
repz
adc
and
sub
(bad)
mov
jl
movs
cmp
adc
sbb
lods
gs
adc
loopne
mov
sub
mov
push
pop
ja
xor
xchg
push
pop
mov
pop
fbstp
xchg
bound
sub
mov
xchg
inc
adc
xor
(bad)
cmp
jmp
mov
cmc
fdivrp
and
xor
enter
mov
xor
pop
jmp
sti
fild
int
sbb
dec
mov
arpl
xor
adc
add
fbld
stc
inc
stc
and
outs
retf
cmps
fidiv
mov
jmp
inc
jmp
jns
inc
push
lock
xor
dec
xchg
test
pop
aaa
sbb
mov
xchg
out
fisttp
lods
cmp
inc
and
fmulp
push
or
in
push
xor
fistp
jp
cmp
push
std
jmp
movs
out
lods
mov
cmp
sar
sbb
ror
jno
dec
out
mov
movs
mov
scas
mov
lods
sar
dec
cmp
push
stos
ds
dec
dec
jmp
out
xor
pop
adc
mov
nop
or
dec
jl
loope
xor
cs
xlat
daa
mov
adc
inc
clc
pop
fisttp
enter
mov
push
mov
add
push
inc
fnstcw
and
sbb
(bad)
xlat
cmp
mov
sar
and
cld
lds
mov
mov
mov
nop
movs
scas
adc
ins
loop
xchg
in
and
or
hlt
test
sbb
scas
rcr
out
pop
and
rcl
aas
jmp
not
pushf
das
inc
adc
mov
mov
and
xor
xchg
xchg
inc
inc
or
cmp
popf
pop
jns
push
adc
retf
push
outs
jo
xor
sub
jnp
scas
aas
and
pop
inc
push
xor
inc
out
inc
or
push
lods
test
add
adc
daa
jb
mov
xchg
xor
inc
jnp
popa
cwde
int
out
jnp
mov
cmps
pusha
or
cmp
mov
mov
sahf
add
jo
lock
shl
jge
and
imul
jl
loop
jle
adc
push
hlt
cmp
gs
jb
and
cs
xor
fld
inc
push
jnp
call
cmp
cld
dec
out
sti
and
ror
cli
dec
sub
fnstenv
jb
int
sahf
in
push
dec
popa
pop
xor
sub
and
ins
cld
sub
adc
retf
pop
pop
cmp
leave
and
or
aas
pop
mov
adc
mov
pop
das
jge
push
scas
mov
mov
hlt
sar
lds
movs
mov
enter
adc
mov
and
adc
mov
fdiv
pop
repnz
out
add
test
fwait
add
int3
push
pop
popa
mov
(bad)
jae
dec
push
(bad)
dec
out
(bad)
pop
shl
pop
mov
mov
cld
lods
cmp
mov
repz
ss
mov
jecxz
sub
aad
or
bound
mov
call
iret
jb
or
test
add
(bad)
xchg
ins
sti
xor
jns
xchg
inc
mov
int3
icebp
dec
into
xor
push
cwde
pop
ins
stc
(bad)
pop
cmps
ret
mov
fsubr
jge
pxor
pop
lahf
loop
add
cs
sub
jnp
cmp
sbb
movs
hlt
inc
dec
mov
in
test
call
fimul
ja
mov
dec
mov
mov
icebp
inc
xor
jbe
cmps
lahf
(bad)
pop
fld
and
xchg
xchg
mov
jecxz
ins
mov
pop
or
aas
jmp
mov
dec
std
adc
imul
bound
scas
mov
aam
ss
inc
pop
movs
fnstsw
inc
cli
mov
int
push
dec
mov
dec
aaa
leave
inc
nop
shl
xchg
les
xchg
jp
fs
retf
inc
dec
cld
push
and
inc
aaa
shr
inc
push
cmc
(bad)
rcr
sti
dec
les
sar
sub
icebp
pop
hlt
or
cvtpi2ps
in
mov
(bad)
sub
push
xor
push
mov
add
xchg
into
loop
dec
shl
push
retf
ror
dec
inc
(bad)
push
adc
xor
cli
sbb
leave
pop
fnstsw
popa
mov
cmp
inc
hlt
xor
xor
pop
ror
sbb
lds
mov
pop
mov
fsubr
jle
(bad)
clc
in
dec
pop
in
test
loopne
xchg
ds
xlat
and
mov
jecxz
inc
jg
fs
push
sub
in
fstp
add
sub
enter
icebp
push
(bad)
sub
pop
pop
pop
push
adc
jns
adc
ret
retf
outs
lods
(bad)
lods
mov
shl
jbe
cmp
cmp
aad
jb
pop
sbb
(bad)
stos
rcl
cmps
push
sbb
jl
xor
(bad)
jae
arpl
lods
test
out
xor
lahf
out
loopne
ror
ja
inc
aam
pop
jne
and
pusha
push
lahf
dec
arpl
jne
repz
and
mov
lock
or
inc
dec
cdq
cmps
test
sub
or
loopne
cli
jno
push
pusha
dec
enter
inc
imul
fld
xchg
data16
das
sbb
jl
jne
in
in
movs
test
mov
scas
pop
stc
daa
shl
xchg
sub
cmps
stos
ss
(bad)
mov
clc
fdivr
pop
pusha
jecxz
aam
movs
jl
outs
mov
jmp
mov
sbb
and
jbe
(bad)
lods
jle
mov
xor
mov
mov
fstp
pop
loope
sub
push
adc
sub
lock
push
mov
sub
bound
jge
in
daa
leave
dec
cmp
(bad)
lock
test
fbld
shl
pushf
adc
in
jg
sub
sar
mov
inc
out
add
mov
popf
jg
les
test
dec
jp
mov
ror
adc
jp
std
mov
retf
or
stos
dec
mov
mov
cld
adc
push
and
mov
out
int3
lahf
fs
repz
adc
mov
cmp
mov
push
shr
sub
jo
or
jmp
inc
sbb
les
sbb
adc
add
mov
cmp
cld
cdq
clc
pop
jmp
xor
mov
lods
inc
repnz
cmp
inc
test
mov
mov
sub
fisubr
retf
xchg
jno
xchg
ja
std
scas
neg
inc
out
pop
push
aas
(bad)
sbb
dec
xchg
mov
shr
pusha
es
cmp
pop
mov
cmp
xor
nop
xchg
xchg
sti
pop
pop
scas
or
sub
add
out
js
stos
lds
mov
mov
xchg
mov
adc
stos
jb
cmp
or
fucomp
retf
jae
test
xchg
push
xor
test
push
xchg
icebp
popw
das
xor
std
jg
inc
fnsave
mov
pop
retf
ja
call
std
lods
or
std
(bad)
and
sub
xlat
push
ret
daa
sbb
dec
and
pop
xlat
mov
and
pop
mov
mov
in
ins
xlat
jo
push
cmp
pop
gs
jmp
cdq
(bad)
out
cmovge
or
into
push
mov
test
or
or
jp
xchg
call
xchg
mov
test
cmp
aam
in
fisttp
pop
add
mov
or
jb
aaa
pushf
imul
mov
ror
aam
imul
in
xor
and
jb
push
pop
push
aam
jb
adc
pop
hlt
cli
pop
xlat
int3
pusha
mov
nop
and
scas
mov
aad
and
cli
pop
aam
into
xor
std
adc
cmp
repnz
das
mov
xchg
sti
sti
mov
or
or
pop
pop
mov
mul
neg
fstp
adc
mov
fsubr
mov
lock
icebp
mov
loop
aam
adc
rcl
inc
pop
je
xor
sbb
and
rol
xchg
jns
cmps
sbb
movs
idiv
xchg
mov
repnz
aad
cmp
mov
nop
(bad)
pop
mov
add
pusha
js
pop
and
sbb
xchg
test
das
and
call
sbb
jne
jg
xor
inc
in
(bad)
xchg
and
and
repz
mov
cmc
jns
jmp
sbb
push
lahf
shl
adc
cmp
cld
fxch
jl
js
or
and
hlt
xor
mov
call
imul
mov
ror
add
scas
jp
js
jae
ficom
push
cmp
psubw
das
retf
cwde
movs
push
in
sub
aam
ficomp
not
add
in
or
mov
mov
ins
nop
pushf
test
adc
pop
adc
push
pop
pop
push
nop
mov
inc
pop
dec
sbb
mov
push
push
sti
test
dec
out
adc
cmp
in
bound
clc
xchg
xor
jge
add
call
cwde
repz
int3
adc
test
mov
popa
jnp
repz
lods
je
cdq
lock
je
push
(bad)
jno
dec
outs
pop
dec
push
data16
repz
bsr
shl
mov
mov
mov
mov
inc
iret
in
dec
lods
lods
xor
mov
out
loopne
sub
jno
aam
add
repnz
fstp
in
and
in
rol
in
ror
mov
dec
ja
aaa
push
jns
jg
aam
and
pop
sub
push
lods
push
add
gs
mov
and
out
scas
retf
daa
rcr
jbe
mov
jns
push
out
(bad)
ins
fs
(bad)
push
push
mov
mul
sar
cmp
pusha
inc
cs
(bad)
out
popf
lock
icebp
push
outs
(bad)
sub
and
in
pop
aas
in
gs
xchg
add
repz
aas
xor
aaa
cmp
aas
jns
retf
das
dec
dec
test
mov
fcmovnb
adc
fcom
inc
lods
mov
mov
in
inc
mov
xchg
lock
popf
jmp
(bad)
daa
jg
data16
ja
mov
cmp
mov
mov
inc
inc
outs
into
jns
cld
shl
addr16
and
sub
pusha
daa
mov
add
xchg
(bad)
fnstcw
call
adc
lods
rol
sub
cli
add
rcl
(bad)
sub
inc
ins
or
push
mov
ret
lods
mov
jne
jbe
addr16
je
jns
test
mov
inc
sar
adc
and
lods
jno
jle
and
mov
int
or
in
inc
int
lods
stos
or
push
push
push
lods
fwait
mov
shr
xchg
sbb
test
mov
popa
sbb
cmp
mov
(bad)
pop
out
push
mov
popa
jp
xor
inc
ret
(bad)
sbb
outs
jl
jnp
sub
cmc
or
push
sbb
frstor
push
or
push
cwde
fstp
aad
mov
or
repnz
cld
mov
xor
adc
dec
lods
cmp
popf
add
jge
sbb
mov
and
adc
push
test
push
or
sbb
shr
xchg
jno
sbb
sahf
retf
nop
in
dec
pop
jge
pushaw
jp
cld
and
jmp
addr16
xchg
shl
inc
outs
hlt
mov
int3
cs
lods
stos
sub
pop
stos
leave
les
aad
and
cs
cwde
dec
(bad)
dec
mov
mov
inc
xchg
in
ins
sbb
pop
scas
adc
cmp
fnstcw
cmp
or
cmps
imul
out
dec
or
shl
push
xor
pop
cmps
into
mov
push
into
sahf
test
hlt
mov
rol
pop
test
mov
imul
test
cld
jl
mov
inc
in
or
pop
retf
inc
cmp
xor
or
scas
xor
dec
aad
xor
cmps
adc
movs
les
xor
bound
repnz
jp
jmp
xchg
rcr
mov
mov
jg
pushf
lds
inc
jns
mov
int
bound
sub
jno
xor
mov
ret
lea
ja
pop
sbb
jb
mov
adc
jbe
iret
ret
imul
fwait
jae
lods
mov
fwait
dec
and
cmp
sub
pushf
inc
dec
out
movs
and
daa
(bad)
gs
jecxz
mov
mov
push
mov
fidiv
xor
sar
jb
jne
movs
ficomp
fs
or
lahf
add
jecxz
mov
mov
mov
sub
(bad)
call
(bad)
sar
xchg
cmp
jl
xchg
inc
lahf
lods
xchg
cmc
jno
mov
inc
push
jp
adc
add
dec
or
xchg
repz
add
(bad)
mov
sbb
test
(bad)
mov
cmc
jnp
xchg
ret
test
jg
das
jg
sbb
mov
dec
scas
xor
test
sahf
hlt
cld
inc
outs
das
in
test
cdq
fs
cmps
add
(bad)
or
rcl
jns
mov
dec
xor
in
or
les
loope
jnp
mov
add
sbb
cmp
dec
adc
or
shl
mov
repnz
test
cld
xchg
dec
lahf
pminub
inc
adc
das
push
cmc
ficom
outs
(bad)
leave
pop
popf
neg
cdq
pop
jg
push
scas
inc
pop
out
fisttp
loop
in
sbb
pop
fdivr
adc
inc
mov
jno
stc
mov
ds
jne
pop
int
fistp
sub
and
jne
mov
push
push
or
rcr
inc
xor
sub
push
pop
nop
rol
add
lods
mov
xchg
add
movs
mov
retf
cmps
addr16
mov
add
out
in
lods
dec
or
popa
loopne
xor
retf
sti
push
leave
mov
or
push
aam
xchg
retf
pop
xor
loopne
retf
(bad)
lds
in
sub
cmp
fild
sub
xor
(bad)
aam
sub
sbb
nop
jo
jbe
sqrtps
test
repnz
sub
inc
and
loop
cmp
lahf
jo
cld
inc
movs
movs
and
adc
out
or
(bad)
jno
inc
pop
push
mov
or
test
xor
call
jnp
add
cmp
jge
clc
cmp
repz
and
mov
not
mov
sahf
cmp
xor
dec
push
pop
mov
add
lea
das
cmc
mov
pop
adc
popa
xor
stc
xor
mov
and
lods
les
push
fwait
mov
xor
sar
aad
test
or
jnp
out
lea
loope
add
in
inc
mov
jno
test
test
sub
stos
cmps
in
jmp
out
mov
add
cld
inc
leave
xchg
lock
cmp
or
jo
out
sub
imul
or
push
add
xchg
lock
mov
pop
ror
and
xor
loope
mov
jp
adc
rcl
pop
sub
jmp
mov
test
pop
(bad)
scas
jg
jge
daa
test
mov
adc
or
sbb
icebp
rol
cmp
pop
int
retf
xchg
mov
leave
sahf
mov
sub
jp
in
gs
xor
or
push
outs
xlat
cmps
arpl
jns
je
int
dec
inc
push
add
bound
repnz
push
movs
test
in
xchg
jmp
xchg
inc
inc
jp
in
mov
xchg
mov
cmp
push
push
movs
sub
daa
jg
(bad)
cmps
fdiv
sbb
xor
repz
mov
sbb
(bad)
int
vmaxps
out
(bad)
div
pop
jnp
mov
inc
and
adc
mov
cmp
(bad)
out
les
cdq
jmp
ja
inc
jo
mov
mov
sar
aad
lahf
dec
jg
ins
ret
or
leave
sbb
jb
sahf
and
lock
popf
pop
ss
pop
int3
jmp
pop
push
popf
rol
xor
iret
push
sti
adc
int
sub
fst
or
(bad)
test
inc
mov
push
mul
in
hlt
aaa
loope
test
test
pop
ins
push
xchg
dec
in
ror
out
cmp
sahf
sahf
out
cmps
cmc
aaa
pop
pop
loop
or
aaa
pop
or
xchg
adc
mov
xchg
xor
outs
stos
dec
js
jp
loope
or
push
rol
dec
mov
not
adc
mov
mov
and
js
out
stc
int3
push
and
cmps
(bad)
mov
in
repz
xchg
dec
sahf
in
test
out
in
sub
loopne
aas
adc
sub
adc
call
inc
lds
and
retf
(bad)
neg
popw
stos
mov
rol
jnp
enter
hlt
or
jmp
sar
loopne
fcom
adc
(bad)
ds
inc
jg
aaa
jno
dec
cmc
adc
out
cmp
inc
inc
mov
sub
jmp
idiv
out
call
cli
and
out
add
fcomip
push
cld
fiadd
ficom
sbb
cmps
push
push
cmp
sub
dec
pop
mov
nop
mov
cmp
mov
or
pop
mov
or
dec
jnp
push
call
mov
js
inc
jno
and
inc
mov
mov
or
mov
test
xor
cmc
adc
in
cmp
jmp
cmc
ds
repnz
mov
loopne
ret
test
cmp
inc
ret
loope
stos
mov
cs
push
xchg
imul
xchg
out
sub
inc
dec
mov
popa
cld
sub
and
xchg
es
sbb
(bad)
popa
enter
push
xchg
pop
iret
jno
sub
lds
adc
cdq
xlat
mov
in
lods
dec
pop
or
mov
jp
jge
das
cs
mov
mov
cmp
push
repnz
ret
sahf
lds
mov
mov
mov
lods
xor
jae
mov
ftst
push
cmp
jnp
ss
adc
push
ins
xchg
or
mov
dec
xor
and
leave
sti
mov
mov
xor
nop
and
in
cmp
ss
stos
xchg
sub
jb
bound
xlat
ret
jmp
sti
lds
out
bound
xchg
or
jmp
adc
clc
jmp
pop
xchg
mov
ret
push
mov
ds
sub
lods
aas
cmp
mov
(bad)
or
or
xchg
push
mov
scas
pop
loope
movs
jmp
scas
sbb
push
jle
retf
in
cs
pop
push
popa
scas
sbb
mov
mov
test
fst
and
and
adc
add
push
movs
lds
(bad)
jae
or
or
test
call
pushf
xchg
sub
and
add
test
sub
(bad)
adc
inc
mov
loopne
jns
mov
sub
les
adc
jne
and
dec
inc
mov
jns
pop
rcr
push
adc
mov
in
push
inc
fdiv
dec
jns
and
cmp
outs
in
pop
push
pop
dec
test
out
xor
popa
popf
mov
aam
hlt
mov
stc
imul
test
or
and
xchg
fld
and
fiadd
es
test
jecxz
or
jbe
repnz
out
popf
add
xor
outs
push
pop
jg
sbb
mov
dec
mov
and
sub
es
setg
mov
mov
ins
cmp
lock
mov
(bad)
outs
mov
mov
sbb
loopne
mov
inc
and
cdq
push
jecxz
daa
or
jmp
jns
fwait
add
call
add
mov
pop
mov
mov
and
loop
retf
mov
jp
sub
xchg
add
dec
and
test
add
cmps
ins
fst
bound
(bad)
pop
xor
fcomip
retf
push
mov
pop
jmp
mov
outs
jmp
xchg
mov
push
and
push
inc
push
pop
ins
setle
mov
xlat
push
push
ins
sbb
add
xor
or
pop
xor
lods
jae
adc
lods
cmp
aaa
repz
xchg
fwait
jmp
sahf
mov
(bad)
mov
ss
out
mov
sti
out
cmc
inc
jnp
dec
mov
cmp
ficom
sar
lods
fwait
repnz
jno
je
add
aaa
mov
ds
dec
into
aam
fs
in
jnp
outs
add
les
add
outs
xchg
ds
cmps
mov
add
movs
xor
movs
or
mov
test
mov
xchg
xchg
add
popf
push
mov
mov
xchg
or
pop
xor
xchg
fistp
dec
mov
dec
sbb
and
sub
xor
adc
mov
mov
lds
lods
imul
out
mov
cs
xor
int3
mov
jb
dec
js
call
inc
les
lahf
test
in
pushw
inc
repnz
out
fimul
dec
mov
je
push
add
xchg
stc
add
xchg
xchg
mov
cmp
cmp
pop
cmp
sbb
mov
cmc
xchg
sbb
mov
mov
loop
push
mov
sahf
cmp
pop
xchg
cdq
and
ror
scas
and
(bad)
std
mov
(bad)
and
push
pop
pop
jg
and
jg
sti
ret
cmp
dec
cmp
inc
jns
push
fwait
xchg
xor
cmps
leave
cmp
leave
lods
inc
xchg
mov
stos
ins
push
and
sub
imul
nop
jns
es
sub
cmps
dec
cmp
cwde
cs
pop
js
ret
les
stos
and
into
shl
out
stos
sbb
in
add
sub
fwait
es
clc
cli
jno
xchg
movs
mov
xor
inc
retf
popf
jbe
and
mov
xor
pop
pop
mov
mov
fist
clc
dec
jae
inc
pop
mov
push
cmp
cli
stc
pop
sar
xchg
pmullw
repz
lahf
fcmovnu
outs
or
nop
jmp
dec
or
or
dec
jnp
adc
xor
jne
add
out
das
cmp
addr16
dec
(bad)
leave
data16
jno
add
mov
xor
dec
ins
pop
dec
inc
jecxz
sar
adc
ja
sti
mov
mul
fisubr
pop
dec
inc
je
int3
lock
sbb
lahf
xchg
jle
push
das
push
ins
es
mov
jmp
add
(bad)
shl
test
ja
sub
jmp
loop
loope
pop
stc
scas
mov
test
or
outs
hlt
inc
daa
call
jmp
test
cmps
push
test
stos
mov
scas
rol
sar
out
mov
enter
add
cdq
mov
ret
mov
lahf
jns
and
inc
and
push
not
xor
stos
push
add
xlat
jb
add
rcr
dec
inc
call
les
inc
push
ret
mov
outs
and
mov
mov
push
xor
add
inc
jecxz
loop
mov
xor
adc
push
pop
xchg
fidivr
xchg
loopne
arpl
cmp
sbb
das
leave
movs
xchg
xchg
rol
das
pop
mov
adc
scas
imul
push
call
shl
btr
cdq
in
ror
push
mov
mov
cmp
push
fidivr
adc
inc
repnz
inc
mov
xchg
fwait
ja
dec
add
xchg
jb
push
shl
int
cmp
pop
popa
cmp
repz
mov
movs
stc
jae
lock
repnz
lahf
adc
icebp
outs
sub
jbe
push
sub
test
mov
sahf
jo
(bad)
mov
pop
pop
aad
imul
pop
dec
cmovb
xor
fisub
push
sar
and
inc
push
jl
and
vpsubb
imul
out
sub
aaa
sahf
adc
icebp
mov
or
xchg
push
pop
mov
test
cli
sub
push
or
adc
sbb
pop
pop
jae
pop
and
or
into
mov
lods
push
out
scas
imul
push
ja
popf
test
ds
fs
mov
or
push
sbb
call
out
popf
lahf
pop
pop
inc
pop
rcl
add
das
push
lods
loopne
sub
add
fdiv
fisubr
pusha
outs
call
mov
sbb
cmp
cwde
push
mov
jmp
xlat
pop
xor
(bad)
outs
mov
stc
xchg
(bad)
cmp
push
sbb
xchg
inc
aaa
xor
leave
cmp
lods
jmp
add
mov
popf
mov
adc
hlt
loopne
or
data16
shl
sbb
loopne
xchg
mov
sub
ficom
jle
or
mov
(bad)
lods
sub
lds
shl
cld
scas
adc
inc
sar
(bad)
sub
pusha
dec
retf
imul
mov
xor
rcr
lahf
xor
lods
sub
in
xchg
addr16
mov
sub
aam
push
mov
xor
add
ret
(bad)
sbb
stc
repnz
xchg
bound
lods
fistp
test
jle
icebp
or
push
into
mov
jecxz
shl
cmps
repz
jne
lock
xor
push
mov
call
or
es
loope
jecxz
sub
loope
or
bound
sub
add
leave
xor
and
dec
mov
xor
out
loopne
pop
inc
adc
jo
jmp
xchg
or
cmp
call
bound
popf
adc
lock
inc
dec
jno
ss
iret
out
inc
mul
(bad)
mov
arpl
loope
push
rol
jnp
add
ret
lds
and
sub
dec
out
push
call
out
jmp
mul
sahf
addr16
test
loop
(bad)
mov
xor
fmul
dec
jbe
pop
push
into
xchg
mov
or
daa
retf
add
enter
fst
pop
mov
jbe
fsubp
jb
jo
mov
mov
pop
fild
cmc
popa
xor
(bad)
mov
sahf
dec
pop
xchg
sub
retf
es
add
cmp
enter
add
inc
cmp
sub
push
xlat
out
cmps
lea
test
aas
sbb
jle
cmp
jmp
xchg
lods
cmp
jne
hlt
push
sub
fist
addr16
popa
cwde
stc
adc
hlt
mov
sti
xor
inc
leave
adc
div
cmp
mov
sub
test
div
aam
mov
les
push
out
repnz
xlat
pop
scas
mov
mov
cmp
mov
sbb
mov
pop
(bad)
retf
in
data16
mov
shl
test
out
push
inc
adc
cwde
push
dec
ror
movs
repz
fiadd
xor
xor
es
cmc
sar
imul
inc
xor
cs
and
test
cs
ret
inc
pop
mov
jno
pop
xchg
or
or
and
push
sub
rol
inc
mov
test
outs
cmc
outs
gs
(bad)
stc
inc
movs
outs
pop
pop
out
aad
test
cwde
sbb
(bad)
cmps
out
jo
je
out
rcr
repz
shl
add
stos
jge
dec
bswap
enter
push
sub
test
cmps
push
imul
inc
jae
lock
xor
out
fdivr
test
in
mov
cld
ins
mov
pop
or
dec
pop
adc
push
pop
mov
pusha
fwait
cmc
jnp
mov
test
lahf
sbb
push
cmps
lea
fcom
sbb
and
retf
hlt
push
and
mov
jo
out
push
out
add
push
test
enter
imul
dec
cmp
or
aaa
sub
lods
mov
jne
or
inc
or
enter
jp
loopne
or
add
test
jge
adc
or
and
clc
(bad)
jl
clc
and
mov
ss
into
mov
fst
lock
xor
dec
fisttp
rol
xor
stos
mov
xor
xchg
cmp
jne
xor
adc
(bad)
jno
add
inc
add
stc
daa
(bad)
add
mov
loop
mov
xchg
idiv
test
clc
lods
xchg
pushf
shl
push
cmp
fldcw
ret
lods
out
jmp
dec
dec
dec
pushf
push
shr
dec
and
or
adc
inc
sbb
and
mov
push
inc
sbb
ss
outs
adc
loop
sbb
mov
mov
mov
or
sub
call
scas
icebp
lds
sub
test
or
js
and
test
xor
(bad)
cmp
adc
int
adc
and
mov
popf
xor
sbb
fucom
mov
(bad)
jb
shl
mov
out
retf
xor
push
jg
xchg
xor
and
mov
pop
rcl
dec
sub
mov
cmp
push
repnz
inc
ficom
pop
ret
dec
cli
mov
daa
cmc
fadd
push
mov
test
xor
push
and
repz
jns
xchg
push
mov
jne
cmp
dec
push
dec
in
jge
popa
sub
fnstcw
jecxz
pop
sbb
jmp
xchg
leave
in
push
pop
mov
mov
mov
xlat
push
retf
in
xor
in
xor
aad
add
loop
cs
xor
push
mov
rcr
(bad)
or
push
cmp
scas
addr16
mov
arpl
fwait
jl
addr16
mov
(bad)
jmp
xchg
adc
cmp
fs
inc
adc
fsubr
inc
clc
fisubr
or
sbb
ja
and
mov
or
es
ins
repz
jl
fstp
jo
retf
xchg
rol
xchg
lea
rol
jecxz
sub
cs
or
xchg
mov
and
fstp
seta
imul
ds
xchg
icebp
sbb
xlat
repnz
pop
cmps
aam
je
pop
dec
or
aad
jnp
std
or
xchg
cdq
xor
sub
or
punpckhdq
and
in
ins
ror
mov
je
xchg
fwait
jle
test
pop
inc
(bad)
mov
add
movs
dec
inc
push
stos
in
das
or
sar
je
int
(bad)
ret
vpsubq
and
push
aas
aad
push
cmp
in
retf
(bad)
fwait
js
in
add
sahf
ja
iret
lods
popf
stos
scas
inc
mov
ds
and
scas
mov
mov
jmp
into
sub
jmp
adc
xchg
cmc
add
call
arpl
push
dec
and
pop
inc
xchg
ret
mov
and
xlat
sbb
or
loop
arpl
psubusb
cs
mov
(bad)
push
sbb
push
scas
aaa
stos
and
fld
in
inc
add
jb
xchg
jne
pop
fdiv
mov
adc
sbb
push
nop
int
jg
(bad)
xchg
cmc
pop
and
xchg
pusha
std
sbb
adc
sbb
jb
mov
fisttp
fld
call
sbb
adc
stos
and
cmp
lea
xor
and
and
daa
xchg
pop
push
cmc
stos
mov
xchg
lock
add
test
inc
pop
in
inc
pop
sub
push
mov
pop
ss
sbb
cmps
in
movs
inc
mov
jecxz
sar
cmp
clc
mov
sub
xor
aas
sub
cwde
sbb
lods
sbb
push
outs
(bad)
pushf
dec
mov
loope
out
sbb
mov
test
int3
adc
(bad)
xchg
rcl
popf
or
sub
xor
cmp
jmp
out
jge
in
dec
imul
mov
add
add
dec
int3
add
mov
cmp
int
mov
outs
xchg
jmp
pop
cmp
xchg
nop
xor
add
ins
out
mov
idiv
faddp
jge
aam
or
mov
or
add
jmp
push
xchg
mov
arpl
ret
jmp
xchg
push
pop
clc
sar
std
jge
sub
xor
xlat
iret
mov
mov
and
cld
push
jno
and
add
push
mov
xchg
jg
or
not
sub
mov
mov
(bad)
cmps
mov
mov
or
bound
and
cmp
mov
cmp
lea
mov
adc
fbstp
xchg
xchg
scas
sbb
imul
out
call
mov
or
dec
or
jle
xchg
and
dec
lock
sbb
cdq
pop
push
outs
test
or
dec
outs
imul
xchg
pop
push
ror
mov
add
xlat
aam
fild
enter
xor
repz
xchg
(bad)
adc
adc
loopne
or
call
mov
jle
cmp
out
(bad)
cmp
(bad)
es
sar
dec
stc
fcmovnb
nop
sti
adc
ja
mov
mov
mov
sub
das
xchg
ja
xchg
ins
icebp
dec
inc
pop
add
dec
fstp
push
and
fs
dec
jb
adc
cli
and
aas
shl
pop
or
movs
ret
sti
xchg
pop
inc
ins
push
adc
or
add
mov
pushf
aas
add
cmp
cmp
arpl
xchg
lahf
aas
xchg
aad
sbb
fld
(bad)
xchg
add
sbb
mov
jg
or
enter
xchg
mov
inc
xor
lds
in
sti
nop
imul
out
jl
sbb
leave
and
mov
inc
imul
cmps
rcr
or
arpl
jne
ds
int
jecxz
sbb
add
je
mov
fild
test
sub
cmp
outs
jno
or
mov
iret
sahf
retf
push
and
stos
test
int
mov
pop
jbe
push
das
inc
xor
or
or
ret
cmps
mov
das
(bad)
adc
iret
dec
das
cmps
lds
inc
push
xchg
jnp
sbb
push
leave
dec
sahf
push
sbb
mov
jge
xchg
add
dec
ret
loop
jmp
cmp
xchg
scas
jns
pop
and
idiv
ss
jmp
inc
in
call
jmp
shr
and
adc
outs
ror
cmp
das
ror
scas
cmp
xchg
mov
mov
dec
pop
loopne
adc
hlt
jg
or
pop
int3
sbb
push
xchg
xchg
xchg
es
inc
arpl
into
fisubr
aaa
sti
adc
mov
pop
adc
inc
inc
out
and
cmp
xor
fwait
lods
push
mov
loop
adc
icebp
imul
shr
lods
ins
call
sbb
pop
xchg
add
cmp
xchg
cdq
mov
sbb
dec
cmp
cmp
cmp
out
sub
nop
js
dec
movs
push
fidiv
mov
push
fild
ret
mov
mov
mov
(bad)
loope
inc
or
xchg
lock
scas
adc
not
mov
add
or
push
push
retf
push
add
out
ret
cs
stos
loopne
lods
call
mov
pop
mov
ds
pop
retf
mul
xor
retf
add
adc
mov
jo
iret
clc
mov
or
jo
xchg
dec
cs
push
and
int3
cmp
stc
cmp
mov
shr
mov
adc
sub
into
cmps
push
retf
push
in
test
popa
sti
ds
pop
stc
mov
hlt
mov
jg
ror
(bad)
daa
ficomp
hlt
jbe
dec
xchg
scas
or
and
sti
or
ret
or
cmp
mov
mov
jne
pop
cwde
popa
shl
pop
xor
pop
aaa
ins
out
jl
shl
popf
jne
mov
and
out
ror
mov
mov
pmaddwd
xchg
call
fcom
fwait
ja
push
dec
bound
punpcklbw
arpl
sub
pop
mov
lods
mov
xchg
push
sbb
sbb
push
ret
imul
scas
jle
mov
xchg
mov
icebp
jl
mov
or
cmp
add
push
ret
test
dec
or
jp
fdivp
pop
mov
data16
push
mov
sbb
mov
call
fisttp
int
call
fwait
ds
or
out
call
rol
add
cdq
adc
ret
mov
cmp
icebp
ins
adc
mov
arpl
mov
add
jns
mov
ret
pop
in
xor
jae
mov
or
jmp
les
in
fld
mov
cs
retf
(bad)
mov
cmp
jge
cmp
push
data16
out
xor
mov
js
sbb
cmp
leave
ret
fwait
bound
xlat
or
add
dec
outs
jl
dec
sub
dec
into
push
xchg
mov
outs
pop
arpl
cmp
cmps
mov
int3
or
and
sbb
pop
xchg
std
movs
das
cmps
xchg
and
out
xchg
pop
ins
adc
jmp
sar
dec
cli
mov
paddusw
ficomp
into
mov
sahf
sub
daa
xchg
stc
enter
mov
cli
push
(bad)
popf
fwait
cli
(bad)
mov
or
fidiv
pop
mov
test
stc
mov
xchg
pop
and
pop
mul
mov
jecxz
loop
adc
out
inc
pop
fs
repnz
ret
sub
out
inc
sub
rcr
xchg
inc
outs
dec
ret
arpl
sub
jbe
shr
idiv
cli
stc
repz
hlt
mov
xchg
lea
arpl
mov
mov
scas
je
aaa
sub
cdq
mov
ret
cli
xchg
cs
mov
sti
out
jl
sti
fidivr
jecxz
retf
aam
adc
pop
popf
and
retf
(bad)
xchg
int3
ins
inc
mov
pop
cmp
cs
(bad)
dec
imul
clc
stos
js
fmul
leave
and
sbb
imul
nop
jg
xlat
aam
and
or
test
scas
mov
xor
test
repnz
call
lock
or
sbb
jmp
pop
lea
mov
xchg
push
pop
cmps
test
fcmovu
mov
mov
imul
xor
sahf
icebp
pop
hlt
fdivrp
ins
out
sar
je
leave
(bad)
cld
add
or
enter
fs
aaa
aaa
jns
jbe
aaa
popf
and
ins
mov
xchg
pop
or
mov
pusha
imul
dec
dec
xchg
add
bound
add
jmp
push
add
cmp
(bad)
rcl
es
les
cmp
mov
ss
mov
mov
outs
jmp
mov
popa
fadd
mov
inc
add
inc
les
rol
xchg
xchg
(bad)
(bad)
retf
(bad)
hlt
aam
(bad)
(bad)
push
push
push
rcr
or
popa
cmps
cs
adc
out
int3
xor
movs
aam
xchg
gs
mov
fwait
aas
pop
mov
test
push
mov
loopne
cld
fldenv
dec
js
or
in
or
mov
rcl
scas
not
dec
sar
call
fsub
sub
dec
pop
fcom
xor
mov
call
jp
cwde
sbb
jb
inc
mov
outs
pop
jge
mov
add
ins
cs
icebp
fsubr
dec
ret
in
shr
jns
sub
xor
mov
mov
je
cwde
fisubr
bound
xor
call
add
lock
es
div
and
jl
call
mov
and
sub
xor
cmp
imul
cld
iret
gs
mov
sbb
repz
ds
(bad)
mov
int
mov
and
mov
lea
movzx
add
sbb
xchg
aaa
fwait
adc
mov
call
repz
jmp
sub
push
dec
sbb
jne
aaa
outs
push
ret
xchg
push
mov
mov
mov
dec
popf
inc
mov
pop
mov
and
jns
movs
adc
add
out
sbb
xchg
clc
cmp
int
or
cmps
jmp
mov
lahf
cli
xlat
inc
mov
(bad)
sub
xor
out
outs
jecxz
arpl
aas
jge
mov
xchg
retf
mov
popa
rcl
xchg
dec
mov
xchg
pop
pop
push
mov
into
cmp
mov
ret
xchg
jmp
into
cmp
aas
data16
dec
data16
mov
sub
in
inc
loope
inc
out
cmp
out
push
xchg
pop
out
jbe
mov
in
loopne
lahf
daa
lock
in
das
xor
(bad)
int3
and
dec
sbb
mov
adc
cmp
cmps
sti
movhps
mov
xchg
pop
mov
rcr
data16
sub
jecxz
pop
push
mov
xchg
bound
inc
mov
mov
mov
call
push
pop
lods
mov
and
imul
mov
(bad)
mov
retf
pusha
fldcw
movs
jecxz
in
push
mov
cmp
into
or
int3
mov
cli
into
enter
retf
movs
sti
jns
pop
call
and
push
sbb
ret
mov
rcl
fxch
inc
aas
xor
lods
das
stos
arpl
stc
rol
sti
dec
push
sar
xor
fcomp
xor
push
push
jbe
pop
pop
add
sub
ret
mov
movs
inc
xchg
pop
xor
mov
inc
mov
mov
jl
mov
mov
in
add
call
fisub
icebp
fsub
div
push
loopne
adc
in
call
repnz
jmp
mov
jns
jle
fistp
jb
cmc
into
imul
scas
jp
clc
fwait
adc
push
push
sbb
inc
call
loopne
loopne
mov
adc
test
hlt
test
jecxz
mov
adc
xchg
pop
mov
dec
or
sbb
or
sti
ja
out
sbb
shr
add
mul
jae
test
repnz
xor
sahf
clc
leave
dec
fsub
outs
(bad)
ja
mov
and
pop
xor
(bad)
xor
pop
sub
adc
les
mov
mov
leave
sbb
ja
je
inc
xchg
bound
inc
pop
call
fdiv
push
mov
(bad)
mov
jno
inc
out
(bad)
stos
lea
daa
push
mov
and
lods
inc
js
sbb
jl
(bad)
adc
xchg
pop
jp
jmp
push
xchg
mov
inc
ret
or
pushf
aaa
pop
xchg
dec
mov
mov
pop
hlt
imul
repz
hlt
loop
xor
pusha
lahf
loope
sbb
addr16
jecxz
rcl
ficomp
push
(bad)
ds
and
call
fisubr
and
cmp
call
push
dec
aam
lods
jne
and
inc
pop
lea
mov
or
push
sub
(bad)
sbb
retf
pop
push
ins
adc
js
(bad)
stos
mov
lds
dec
ins
ret
mov
inc
into
int
mov
adc
and
push
ret
push
and
test
pop
test
lock
sbb
jle
push
mov
push
mov
pop
mov
jns
icebp
data16
mov
xchg
and
pop
mov
retf
stc
je
into
jge
call
das
xlat
cmp
leave
xlat
enter
adc
je
jbe
mov
push
outs
jge
test
ror
mov
pop
jae
lods
jo
out
dec
mov
sbb
dec
jmp
stc
adc
inc
icebp
lahf
dec
xor
push
pop
mov
cld
stos
adc
shl
xor
cmp
mov
push
addr16
sbb
movs
hlt
ins
sub
(bad)
adc
adc
pop
mov
aaa
popa
loop
lahf
mov
or
cs
in
fdivr
rcr
lahf
lea
jmp
add
cmp
fiadd
dec
xor
shl
jno
bound
fsubrp
inc
sbb
sar
push
dec
dec
in
pop
ins
push
repnz
mov
jg
enter
test
stos
xchg
js
push
retf
sub
enter
dec
pop
scas
mov
jae
arpl
and
sub
or
pop
inc
add
mov
add
fnstenv
xor
mov
sbb
cwde
jecxz
push
mov
xor
(bad)
lods
fld
xchg
lods
sub
mov
imul
test
and
enter
into
lock
or
in
scas
pop
cwde
ror
daa
sbb
push
push
popf
call
enter
or
mov
or
mov
je
loopne
ins
cmp
sbb
outs
aaa
or
ficomp
sub
out
mov
pop
push
out
ror
adc
add
fwait
mov
inc
fwait
push
leave
fwait
iret
push
lods
xor
add
dec
callw
add
cmp
addr16
sub
mov
xchg
(bad)
jmp
repz
(bad)
xchg
jmp
dec
cwde
pop
mov
cmp
and
add
pusha
cmp
sahf
pop
dec
sbb
cwde
pop
xchg
cmc
and
sbb
push
cmp
mov
out
rcl
push
or
adc
add
adc
mov
mov
aad
scas
jb
mov
pop
sbb
repz
loope
adc
mov
std
mov
stc
int
add
mov
sub
jmp
sbb
inc
icebp
jp
dec
ins
pop
pop
dec
fstp
ss
mov
je
or
sbb
sbb
test
add
test
ret
cwde
out
adc
mov
mov
add
push
jns
pop
mov
call
jg
or
or
leave
dec
mov
ja
rol
movs
mov
outs
out
push
aas
pop
or
mov
in
inc
sub
mov
sbb
jno
xchg
cmc
adc
test
bnd
rep
aam
mov
mov
rol
pop
mov
outs
xchg
cld
mov
mov
call
idiv
daa
pop
push
or
out
push
inc
pop
fisub
xchg
add
gs
mov
cmp
ja
adc
jae
jb
adc
inc
push
in
inc
jge
mov
adc
pop
cs
jmp
xchg
pop
arpl
jge
inc
inc
test
inc
cmc
inc
(bad)
fcom
aaa
leave
sbb
or
mov
sbb
std
xchg
(bad)
mov
dec
inc
fld
addr16
or
adc
jg
jnp
and
fisttp
sub
nop
push
push
fisttp
cdq
mov
dec
je
sahf
dec
pop
movs
test
jmp
inc
xor
cmps
push
xlat
js
mov
jae
inc
xor
jmp
addr16
sub
loope
fisubr
lods
push
(bad)
ja
movs
ds
adc
or
sbb
call
ins
test
ss
ficom
jo
cli
mov
or
(bad)
dec
int3
mov
sbb
cmp
and
xlat
scas
in
aas
mov
repnz
cmp
mov
cmc
pop
adc
les
out
call
mov
daa
out
lahf
or
jmp
popf
and
leave
movs
pop
push
cmp
into
idiv
inc
inc
out
out
test
fnstcw
cld
rol
add
mov
scas
js
pushf
cld
lea
test
out
xchg
sbb
cli
loope
sub
test
dec
push
cmps
add
push
stc
pop
push
jmp
push
push
lea
loop
fwait
sysenter
jge
movs
pop
daa
push
inc
int3
retf
bound
fmul
js
test
into
ins
(bad)
test
shl
push
xor
cdq
imul
inc
outs
imul
jp
cmp
fstp
inc
into
mov
pop
retf
dec
add
and
aas
cli
imul
add
clc
pop
sbb
mov
aaa
adc
outs
ins
outs
cdq
cld
jmp
sar
out
push
test
inc
test
xchg
add
push
es
mov
jecxz
aam
les
mov
daa
mov
mov
leave
push
pushf
mov
sub
les
inc
pop
push
hlt
mov
mov
sub
add
add
pop
push
xor
sub
cld
sbb
fistp
mov
pop
mov
call
in
dec
test
outs
scas
lock
mov
push
in
dec
lds
sbb
and
mov
in
add
xor
add
mov
ins
retf
mov
jbe
cmp
add
and
fldcw
hlt
ins
js
or
xor
xchg
mov
ins
call
lock
ret
push
stc
dec
lods
mov
inc
fnstsw
popa
mov
push
pushf
call
cmc
lods
jmp
jne
cmps
dec
adc
(bad)
cmp
(bad)
jp
xchg
(bad)
pop
mov
pop
and
(bad)
xchg
int
sti
dec
mov
in
pop
test
add
aam
jge
jge
jmp
stos
das
sbb
ret
push
jmp
sbb
mov
arpl
dec
movs
test
add
xor
ss
push
sbb
aad
add
xor
sbb
dec
inc
stos
pop
arpl
stc
popf
cmp
pushf
(bad)
out
imul
jle
ret
stos
push
jl
jo
jge
rol
frstor
mov
cli
js
movs
adc
mov
sub
ss
jno
cmp
push
jmp
cmp
(bad)
mov
inc
and
icebp
xacquire
jmp
out
jg
shl
push
sub
xchg
xchg
inc
dec
stc
pop
xlat
sub
clc
add
pushf
repz
adc
arpl
lea
inc
call
xchg
pop
stos
jmp
dec
sub
(bad)
jecxz
xlat
out
cmp
sub
enter
test
(bad)
mov
mov
(bad)
aaa
mov
add
mov
mov
shr
mov
push
sub
in
int
mov
jge
arpl
push
and
scas
jle
mov
cmc
fistp
div
and
(bad)
mov
lea
cmp
or
mov
push
mov
or
push
pop
mov
das
test
and
mov
sub
jmp
pop
add
inc
mov
mov
sahf
jecxz
mov
out
sub
add
push
add
mov
mov
mov
xlat
hlt
retf
or
call
push
mov
sub
and
jae
movs
mov
enter
sbb
aad
cmp
push
cwde
push
inc
sbb
and
cmc
dec
jns
pop
push
test
xchg
sbb
or
mov
scas
adc
mov
mov
add
sub
das
mov
stos
xor
sub
jb
push
cmc
test
push
gs
jae
xchg
push
jmp
push
call
add
stc
call
test
mov
or
das
cmp
cmps
out
iret
rol
ins
test
aad
mov
out
jmp
fild
daa
pushf
sti
retf
mov
loope
loope
jb
mov
fs
sbb
rcr
mov
mov
jmp
sbb
fcomp
lods
mov
in
push
retf
xchg
icebp
adc
mov
dec
movs
cmp
mov
int
dec
or
addr16
push
mov
fcmovnb
popa
mov
and
ins
pop
out
pop
xor
ret
es
xchg
xchg
jle
shl
(bad)
mov
out
or
jbe
sub
stos
jg
adc
pop
ret
adc
dec
cmps
inc
leave
dec
pop
push
pop
xlat
cmp
inc
out
mov
mov
mov
out
inc
mov
fadd
jmp
xor
and
and
movs
rol
sbb
les
cmp
mov
push
aad
gs
(bad)
push
ds
cmp
loopne
add
dec
(bad)
xor
fs
aaa
fild
out
out
jge
dec
add
pop
adc
pushf
sbb
xchg
cmps
shl
imul
or
lea
stc
cmp
xor
or
aad
pop
(bad)
retf
sub
fdivp
outs
mov
mov
shl
stos
jl
cs
mov
shl
sub
add
mov
mov
aaa
and
or
sub
xchg
mov
jo
jne
mov
scas
pushf
das
xchg
pop
sbb
dec
inc
loopne
mov
fs
sub
push
ds
xchg
mov
jl
sti
jmp
sub
mov
mov
cdq
or
or
inc
sub
xlat
retf
push
sbb
jge
mov
pop
(bad)
rol
arpl
xor
fnsave
jns
mov
jae
not
test
lahf
dec
(bad)
pop
mov
add
ficomp
fwait
gs
imul
cmps
mov
jge
xchg
push
call
xor
mov
nop
sub
mov
addr16
cmc
xchg
mov
sahf
sti
imul
cmp
(bad)
xor
mov
loopne
rol
mov
jno
mov
and
jp
call
push
mul
retf
dec
jg
cmp
and
ror
ins
or
push
dec
fwait
add
push
int3
and
and
push
aaa
dec
enter
and
iret
dec
cmp
pop
popa
in
stc
cmp
fucomp
pop
ss
mov
loop
daa
dec
inc
shl
divps
xor
inc
push
cwde
clc
or
jb
dec
sub
cld
mov
jmp
sahf
and
out
lds
and
scas
das
sub
pop
pop
jp
je
dec
pop
pop
and
loop
ret
push
ins
sub
sbb
push
inc
imul
sbb
ror
adc
mov
xor
test
out
push
(bad)
iret
mov
fstp
ss
cli
sti
idiv
push
or
cmp
retf
mov
mov
mov
jbe
adc
and
sti
adc
push
cwde
or
push
sbb
aad
(bad)
dec
adc
stc
daa
or
jae
out
push
or
xor
call
jae
int3
stc
loope
mov
push
or
ret
dec
sbb
pop
pop
fsubr
mov
sbb
bound
repnz
xor
xchg
or
imul
retf
das
cmp
jmp
test
dec
mov
push
aad
pop
inc
pop
cld
pop
mov
and
mov
imul
retf
sbb
movs
jecxz
outs
popf
xchg
test
lods
jl
xchg
push
je
cli
lods
cdq
adc
test
xchg
xor
loop
int
int
shr
bound
bound
pop
mov
stos
jg
into
jb
out
call
ja
div
mov
ret
xlat
movs
in
clc
out
mov
das
pcmpeqb
jmp
mov
inc
push
sbb
jmp
push
adc
pop
jg
pusha
xor
je
cdq
outs
pusha
fstp
mov
sub
fsubr
jae
dec
aad
sub
outs
ss
mov
(bad)
sub
mov
xchg
test
popf
test
mov
inc
xchg
ds
shl
(bad)
xchg
xchg
in
(bad)
jmp
push
call
popf
imul
nop
adc
fbld
into
(bad)
mov
xor
mov
mov
pop
cmps
das
fild
cmps
add
icebp
mov
sbb
es
and
enter
pop
push
(bad)
in
mov
loopne
repnz
adc
test
retf
aaa
mov
add
add
hlt
cmps
pop
sbb
lock
jnp
xchg
movs
push
cli
add
pop
mov
mov
and
out
repz
adc
shl
cmps
xchg
arpl
popf
cli
adc
(bad)
dec
push
in
in
mov
and
push
cdq
inc
xor
sbb
retf
pushf
push
cmp
shl
sbb
cs
dec
gs
jne
test
pop
add
mov
int3
rcl
mov
jecxz
repz
scas
cmp
jo
xor
daa
ficom
pop
sbb
jo
lods
(bad)
and
xor
lds
daa
cmps
xor
sub
jns
rcl
jb
mov
pop
add
fldcw
and
retf
mov
aas
outs
aas
test
in
sbb
sbb
push
loop
mov
enter
dec
fiadd
add
and
push
jnp
mov
and
mov
xor
pusha
pop
jns
lods
scas
pushf
push
sub
push
mov
stos
outs
adc
sub
adc
mov
cmp
sbb
xchg
add
dec
mov
jp
mov
sti
pop
(bad)
sbb
int3
lea
leave
mov
xor
mov
sahf
adc
rcr
(bad)
jecxz
aaa
(bad)
int
call
add
sub
jp
lds
movs
add
das
js
jge
cwde
adc
mov
sub
test
outs
pushf
xchg
push
push
sub
aas
xchg
mov
not
mov
jns
xchg
adc
mov
mov
aad
in
dec
adc
ins
mov
dec
fld
hlt
popf
out
inc
xor
jnp
les
push
repnz
dec
jnp
sub
popf
sub
dec
loope
neg
stc
bound
or
es
push
mov
fiadd
in
xchg
lock
xchg
arpl
jbe
(bad)
jge
xlat
call
lods
jb
daa
jle
pop
cmp
test
dec
out
jmp
and
xchg
inc
cmc
inc
cs
pop
in
mov
sbb
xchg
cmps
aad
sub
das
leave
xchg
or
sti
sub
shl
movs
jo
lahf
xor
adc
adc
inc
aad
(bad)
xchg
bound
(bad)
fldenv
or
out
neg
cmp
imul
in
inc
fwait
mov
jns
test
mov
call
inc
cdq
mov
sbb
mov
stc
mov
test
fs
pop
mov
jo
js
test
sub
inc
fs
or
mov
(bad)
pop
daa
das
mov
push
add
jmp
dec
test
(bad)
jne
mov
mov
push
aaa
mov
imul
adc
mov
cdq
sub
lods
push
mov
xor
mov
jl
mov
mov
and
mov
imul
jae
cmp
cwde
push
data16
cmps
mov
xchg
dec
jmp
dec
push
adc
mov
gs
std
ins
and
je
mov
ror
inc
xchg
(bad)
mov
or
shl
cmps
js
inc
jb
add
lock
aam
mov
inc
dec
outs
int3
out
adc
adc
sbb
and
jle
clc
push
mov
jmp
mov
stc
adc
adc
xchg
cmp
nop
adc
lea
add
jno
lods
mov
or
sub
cmps
xor
inc
sub
push
in
and
jb
add
mov
pusha
or
fisubr
push
scas
mov
scas
push
scas
inc
test
das
mov
rcl
and
push
aas
adc
sar
push
(bad)
sahf
adc
js
cmp
lods
stos
sub
scas
mov
mov
add
dec
call
push
lea
mov
cdq
ja
and
cli
in
repnz
mov
enter
ret
mov
adc
scas
jbe
sbb
cmp
cmp
fcmovnbe
retf
shr
dec
push
in
xlat
add
sti
data16
xor
call
jp
(bad)
cdq
lds
aas
fld
retf
jle
or
scas
pop
push
adc
dec
mov
(bad)
mov
sbb
pop
nop
fsubrp
xlat
and
xchg
imul
xchg
mov
pusha
das
(bad)
mov
inc
jae
xor
jbe
inc
mov
inc
push
cmp
js
popf
pop
adc
pushf
push
and
mov
sub
or
lds
enter
gs
push
nop
outs
mov
cmp
add
xchg
mov
mov
retf
mov
jo
mov
int
imul
test
setge
sub
mov
pusha
sbb
movs
cmps
add
imul
mov
push
fidiv
(bad)
rol
fidiv
cmp
mov
or
add
lds
or
xlat
push
ss
push
imul
mov
push
jne
popf
add
xor
xchg
jecxz
popa
imul
push
mov
and
retf
dec
loopne
xchg
xchg
sub
push
adc
adc
les
push
jmp
das
inc
cdq
jmp
test
push
call
sbb
hlt
ins
les
movs
mov
sti
cs
in
ret
jno
out
pusha
lahf
jno
inc
jg
mov
xchg
and
adc
imul
adc
daa
add
sub
adc
xor
sar
mov
push
lds
arpl
rol
adc
out
scas
jecxz
xchg
inc
sbb
jle
pusha
icebp
(bad)
ins
aam
cld
fs
mov
mov
mov
xor
je
push
dec
xor
xlat
mov
xchg
dec
jge
fcomp
ret
sbb
push
dec
int3
sub
pop
loopne
adc
adc
sub
(bad)
pop
jns
ficomp
dec
cmp
icebp
mov
sub
add
fistp
shl
mov
sysexit
jb
leave
pop
scas
xchg
and
sbb
pop
xchg
popa
js
push
mov
jnp
xchg
sbb
pop
ja
dec
push
add
or
mov
or
mov
loopne
and
mov
outs
sub
in
idiv
mov
dec
movs
mov
test
inc
jno
in
sub
add
std
xchg
mov
fstp
cld
dec
push
jl
xchg
cmp
sar
popf
push
xchg
inc
les
mov
mov
fisttp
dec
dec
sub
fs
lds
push
or
int
cmp
out
sub
sbb
js
into
or
cld
loope
stos
or
adc
sub
shr
push
jae
aad
sar
add
push
sbb
retf
nop
adc
pusha
stos
xor
xchg
jecxz
adc
lahf
add
add
lea
xlat
add
sub
hlt
(bad)
int
fdivr
jns
in
mov
aas
bound
pop
ds
push
jp
push
ins
push
mov
sbb
ret
jae
inc
mov
gs
out
cmp
(bad)
jmp
cld
sub
inc
rol
mov
cld
xchg
dec
fs
jmp
lods
ins
imul
js
inc
jne
mov
or
pop
cmc
add
(bad)
in
cwde
std
inc
retf
xchg
(bad)
or
sbb
and
push
scas
(bad)
mov
aaa
ins
jle
in
and
test
lea
stos
es
push
sar
mov
aas
pop
stos
ins
or
jp
jne
xor
(bad)
ja
ret
inc
cs
(bad)
in
sub
cmp
xchg
int3
ins
fs
je
add
rol
retf
cmp
xchg
scas
mov
jp
inc
mov
aam
retf
and
aad
mov
mov
adc
push
pop
das
repz
dec
pop
aad
test
mov
(bad)
sub
adc
dec
sub
fistp
xchg
sub
jbe
loopne
hlt
push
inc
mov
addr16
ret
add
lds
imul
imul
not
pop
xchg
ds
cli
gs
clc
cmc
xchg
ror
jge
xor
xor
xor
xchg
push
pushf
(bad)
retf
ret
mov
jae
scas
jnp
int
push
and
and
sbb
inc
push
loope
jne
mov
outs
(bad)
sti
in
adc
xchg
dec
sbb
cmp
outs
in
in
push
jno
movs
pop
fwait
loopne
mov
les
dec
outs
out
sbb
maskmovq
mov
jae
loope
hlt
movs
leave
(bad)
into
mov
adc
das
adc
adc
aam
push
pop
pop
jnp
adc
dec
add
retf
jge
hlt
or
jb
pop
rol
sahf
xor
add
fwait
ja
daa
push
mov
iret
or
or
loope
aaa
movs
adc
and
daa
call
mov
xor
sbb
sub
test
cmp
xor
out
and
jl
dec
jnp
in
push
pop
jge
nop
data16
adc
cwde
jns
jns
daa
xchg
into
mov
in
cmps
movs
aas
cmp
loope
aas
inc
jmp
lods
mov
sub
or
add
mov
aas
sub
rcr
cli
loop
in
sub
ror
stc
out
pop
fadd
mov
adc
enter
movs
mov
dec
xchg
shr
in
add
sub
push
jmp
xor
std
cmc
sar
pop
or
mov
xor
dec
sub
jbe
(bad)
dec
pop
cmp
jns
cmp
mov
ret
xor
inc
in
test
push
fs
lods
and
mov
push
in
ins
movs
add
aam
sbb
stc
retf
sub
ins
sbb
add
call
add
in
pop
mov
mov
aas
sahf
in
iret
add
dec
loop
ja
dec
cmps
lods
cmp
sub
jmp
dec
fisub
cmp
cmp
fist
xchg
or
xchg
cmps
in
inc
dec
sbb
mov
fldln2
xchg
push
sti
pusha
pop
repz
mov
mov
mov
mov
scas
loopne
arpl
ins
jb
lods
sub
ret
mov
ror
jbe
aam
out
xor
ins
and
or
out
inc
inc
mov
loopne
mov
jae
sbb
in
into
lea
jbe
or
int3
ficomp
add
sub
mov
add
push
dec
popa
mov
test
jb
daa
push
pop
pop
jno
xor
push
sub
in
mov
add
pop
mov
and
xchg
data16
out
mov
xor
inc
mov
add
sti
add
lea
ror
neg
out
push
or
mov
xlat
or
outs
sbb
out
or
lock
xchg
mov
pop
test
hlt
shl
push
lea
cmp
mov
mov
sbb
xor
push
jnp
inc
mov
enter
mov
test
aam
or
lods
sub
stos
inc
ja
lock
(bad)
dec
mov
mov
nop
push
imul
mov
mov
cwde
fcmovnbe
cwde
sahf
add
loope
pusha
mov
call
mov
dec
fcmovnb
inc
outs
xchg
ss
xchg
ret
mov
xor
(bad)
stos
jge
arpl
jg
leave
cmp
cmc
sbb
add
mov
pop
mov
test
inc
sub
imul
leave
gs
or
test
stos
lahf
xor
test
push
call
into
fst
push
mov
push
mov
iret
mov
pop
xor
shr
push
push
xor
jns
xchg
adc
cdq
sub
xchg
push
inc
xchg
inc
inc
mov
mov
retf
jp
(bad)
leave
xor
sar
icebp
out
inc
pop
je
pop
retf
cmps
xchg
je
movs
stos
stc
aad
sub
aas
pop
test
jo
push
aaa
xor
add
jno
pushf
stc
out
test
in
jg
loop
(bad)
push
or
dec
adc
test
sbb
pop
mov
sti
or
(bad)
mov
call
and
ja
loopne
mov
or
(bad)
movs
fld
inc
sbb
mov
sub
dec
inc
jl
cmc
sub
test
out
mov
jae
popa
jno
lock
ss
test
inc
mov
or
pop
call
push
sub
pop
aad
aam
std
dec
dec
mov
add
xchg
std
(bad)
fld
mov
or
into
in
jmp
in
movs
cmp
push
sar
daa
cmp
lock
lock
jae
gs
sbb
push
int3
inc
sub
push
loopne
out
mov
pop
and
daa
and
test
inc
pop
xor
ins
push
imul
xlat
pop
mov
loop
sbb
jns
mov
inc
loop
fidivr
sbb
aaa
psubq
popa
loope
ret
lea
adc
add
sbb
(bad)
sub
enter
scas
daa
mov
stos
xchg
jmp
xor
inc
test
sbb
fwait
xor
call
jg
inc
data16
cmps
mov
push
repz
mov
mov
and
push
cmp
aaa
nop
xor
mov
add
push
stc
je
cmps
js
inc
outs
adc
mov
lds
sub
daa
push
daa
arpl
jecxz
fild
mov
push
test
bound
jmp
cmps
aas
jno
bound
lods
in
sub
in
movs
imul
(bad)
lods
adc
fistp
and
shl
and
fimul
and
cmps
ror
jb
mov
add
out
or
mov
aas
pop
jno
shl
leave
adc
pusha
push
fcom
cli
scas
push
jns
movs
sub
sbb
sub
sub
(bad)
cmc
pop
jb
add
jbe
shl
mov
dec
pusha
jb
or
stc
test
mov
test
movs
sub
mov
push
jo
xor
fisttp
jl
mov
pop
call
clc
pushf
dec
mov
pop
sbb
cld
add
pop
xchg
jno
cmp
mov
inc
data16
int3
mov
pop
test
dec
faddp
sbb
(bad)
and
test
inc
rcl
inc
not
scas
loop
xchg
mov
mov
cdq
lods
xchg
(bad)
sbb
add
clc
outs
dec
popa
pop
leave
std
les
mov
jecxz
(bad)
jmp
shr
xor
cld
sbb
and
mov
adc
movs
adc
mov
and
rcr
dec
mov
(bad)
clc
and
not
mov
jns
rcr
xor
mov
cwde
add
sar
jno
in
enter
vaddps
psubsw
sub
test
into
stc
(bad)
cld
movs
dec
sbb
(bad)
jl
adc
jg
popf
shl
push
adc
mov
cmp
mov
adc
enter
pusha
imul
mov
sub
pop
shl
lea
mov
jge
into
movs
mov
sub
jb
fmul
inc
es
cwde
(bad)
xor
pop
and
mov
jnp
dec
fstp
rcr
push
sahf
jnp
adc
jp
arpl
cli
pusha
loop
js
test
or
cmps
mov
xlat
fidiv
outs
inc
fsub
cmp
int
mov
pop
cmp
mov
movs
add
repz
bound
cs
adc
xor
cmp
ret
(bad)
mov
pop
mov
pushf
(bad)
int3
xlat
pusha
pop
jae
std
inc
les
adc
hlt
or
(bad)
adc
push
sbb
sbb
cli
enter
push
nop
sbb
nop
in
jp
cmp
out
mov
inc
or
std
xor
mov
rcl
pop
int3
dec
jne
jne
push
in
lock
test
jo
inc
das
inc
mov
ins
fwait
xchg
push
pop
shl
scas
xlat
cvttps2pi
jl
aam
mov
ret
std
dec
sub
push
aam
cli
les
stos
outs
pop
mov
xchg
aad
dec
aad
fmul
cmp
pop
fsubr
aam
outs
jecxz
or
daa
sbb
inc
dec
sub
mov
push
cmp
cmps
pop
jo
test
fidiv
sbb
mov
pushf
push
dec
inc
or
dec
lock
cmp
dec
add
dec
add
stc
repz
xor
jmp
xor
jp
ins
pop
push
add
fnsetpm(287
inc
call
adc
jb
outs
mov
popa
bound
jbe
ret
or
imul
pop
mov
shr
clc
sbb
pop
adc
mov
ja
adc
(bad)
adc
mov
push
ja
xlat
sahf
inc
lahf
dec
retf
or
sahf
ins
dec
pusha
scas
xchg
xchg
push
fisttp
imul
les
out
pop
sysexit
(bad)
add
les
test
fnsave
(bad)
enter
jne
jae
jns
cmp
out
push
and
xchg
sub
and
mov
and
stos
jp
sbb
test
and
xchg
in
out
inc
(bad)
test
jp
add
nop
or
into
push
test
int3
pand
movs
pop
mov
mov
enter
add
and
imul
pop
mov
add
or
jno
dec
fwait
clc
js
or
and
sahf
or
(bad)
xor
ret
retf
or
fs
mov
mov
pop
(bad)
dec
fs
les
jmp
test
les
adc
adc
cmps
or
push
and
mov
ja
xchg
shl
daa
test
jns
sub
jmp
add
add
lods
test
push
sar
std
test
es
iret
pop
fiadd
daa
dec
jle
push
and
pop
jae
or
into
daa
fadd
push
nop
sub
xchg
xor
cld
xor
xlat
mov
sahf
cmp
retf
clc
push
cmp
aad
arpl
addr16
mov
cmp
jno
or
xor
inc
mov
adc
push
mov
mov
inc
sub
push
out
push
xor
mov
pushf
mov
and
lock
lahf
push
mov
push
js
push
xchg
ret
push
cwde
jb
inc
inc
add
push
outs
add
mov
imul
cmp
push
gs
lea
cmovae
sbb
jo
inc
dec
mov
ja
adc
scas
bound
ja
mov
adc
movs
jle
xlat
out
popf
xor
jmp
sbb
add
inc
xor
enter
cmps
push
(bad)
and
fcomp
adc
and
xchg
jnp
movs
xor
mov
push
sti
xor
mov
call
mov
cmps
cmc
scas
ret
cwde
lods
mov
mov
in
sbb
cs
dec
add
push
push
sbb
int
mov
sub
shr
stos
jg
ja
adc
inc
loopne
movs
push
ss
add
lods
(bad)
pop
push
inc
nop
jmp
call
in
jo
push
std
call
jne
cmp
sbb
pushf
xor
pusha
cmp
jg
popf
dec
sbb
or
push
xor
out
movs
outs
cmps
push
js
sub
cmps
xchg
cmc
fild
add
dec
cdq
mov
les
and
sbb
add
in
sub
jp
not
push
sub
je
rcr
or
xor
cli
fstp
push
cdq
scas
fcom
jmp
fadd
popa
cmp
jns
outs
add
in
and
das
(bad)
mov
popa
data16
jo
cmp
mov
mov
mov
(bad)
pop
xchg
test
out
(bad)
xor
inc
leave
sub
retf
sbb
xor
scas
out
into
adc
sub
repz
and
mov
sbb
jno
add
adc
adc
mov
test
iret
jecxz
xchg
rol
cmc
xor
add
gs
cdq
xor
retf
mov
sahf
test
pop
ret
jg
lahf
push
jno
test
push
cmp
and
inc
into
(bad)
jmp
loopne
dec
cmp
mov
mov
xchg
in
xor
xchg
in
mov
jae
clc
sub
sub
or
jae
sub
xchg
push
adc
aaa
dec
inc
jns
in
js
fcom
jg
mov
and
dec
fld
add
adc
bound
fstp
inc
cmps
xor
pop
or
push
xchg
jmp
xor
xchg
push
(bad)
aam
sub
ret
es
fbld
stos
in
cwde
xor
cwde
out
and
inc
sbb
call
cdq
ror
mov
xchg
test
ins
add
imul
das
cli
cmp
ficom
bound
dec
out
repz
scas
cli
mov
xchg
fs
mov
adc
lods
inc
ret
push
popa
dec
pusha
stos
xchg
stc
jl
adc
imul
std
xor
inc
push
inc
loopne
cld
fild
cmp
jg
dec
push
push
int3
sbb
lock
and
add
(bad)
aam
dec
jl
mov
cmps
xchg
mov
pop
pushf
sub
and
aaa
dec
mov
iret
out
stos
mov
jmp
std
xlat
pop
push
out
fisubr
psubb
dec
fisubr
data16
icebp
mov
sbb
mov
bound
adc
mov
stc
jno
mov
lods
cmp
cmc
ss
pop
aas
lds
icebp
or
sub
jbe
cmp
lahf
mov
mov
aam
lds
shr
inc
xor
adc
stos
dec
adc
test
and
test
cli
leave
aad
daa
mov
outs
xchg
adc
into
adc
and
movs
pop
sti
daa
jne
jl
icebp
sub
mov
icebp
mov
xlat
jnp
push
cmp
sub
pop
stos
cmc
fwait
push
xchg
xchg
jmp
cmps
xor
sbb
cmp
dec
loope
jnp
cdq
dec
mov
pop
sbb
fwait
dec
lods
pop
pop
add
lea
outs
jp
and
push
mul
mov
jno
inc
jp
ins
pop
xchg
dec
cmp
mov
retf
sbb
jmp
push
lods
adc
fisttp
js
fwait
mul
add
jle
add
int3
xchg
xor
dec
sbb
xchg
leave
jns
stos
cmp
sub
jle
mov
xor
scas
and
retf
xor
cmp
jmp
fimul
sub
cli
add
bswap
cdq
pop
repnz
shr
sub
and
addr16
ret
dec
or
sub
(bad)
xor
mov
rol
stc
dec
in
pusha
sbb
xlat
pop
xchg
data16
imul
hlt
cwde
xchg
inc
cmc
cmc
mov
test
out
sbb
mov
movs
aad
adc
sub
scas
in
imul
popa
dec
repnz
dec
retf
in
adc
jnp
mov
sbb
test
add
cld
push
cmp
or
movs
xor
popa
fdivr
fs
in
imul
ds
sti
mov
and
jnp
cli
mov
scas
or
pop
ret
pop
jg
xor
and
sub
into
mov
(bad)
push
jmp
ins
and
retf
loope
sahf
in
mov
adc
lds
out
fcmovnbe
repnz
xchg
and
pop
cdq
lods
mov
sub
mov
out
stos
test
adc
push
dec
sub
aam
or
das
mov
out
add
scas
mov
or
nop
lods
cmp
sbb
mov
(bad)
bound
lods
push
test
jne
out
jne
pop
add
fmul
aam
clc
lds
pop
push
add
sbb
cs
leave
push
cmps
fwait
ss
out
mov
mov
loope
or
sub
dec
or
jno
mov
call
inc
fcom
scas
repnz
shl
rol
mov
inc
test
or
sub
push
into
xchg
je
or
mov
in
retf
mov
jmp
push
mov
int3
dec
movs
fadd
(bad)
lods
mov
push
sub
not
or
ds
mov
jmp
shr
not
cmps
fcom
sub
and
or
or
out
jnp
cwde
mov
(bad)
pop
movs
ret
cmp
push
lahf
shl
push
inc
stos
test
call
stc
iret
scas
in
(bad)
jg
mov
jmp
repz
sub
leave
jae
iret
xor
shr
mov
xor
daa
cmc
jmp
nop
xchg
pushf
and
outs
mov
pop
cmp
or
jle
test
push
sub
inc
pop
xchg
cmc
das
and
mov
popa
repz
pop
mov
bound
loopne
jl
dec
hlt
cmp
test
dec
in
bound
jno
int3
pop
pop
lods
pusha
stos
stos
pop
or
xchg
imul
xchg
dec
out
fwait
add
ds
pop
jnp
cmp
popf
cmps
jne
dec
push
loop
mov
mov
out
mov
jnp
mov
lock
or
xor
cmp
inc
cld
pop
mov
pop
lahf
mov
mov
xor
jmp
push
mov
mov
xor
pop
data16
(bad)
jb
cmps
mov
cmc
(bad)
xchg
clc
pop
and
clc
fdivr
pop
xor
test
push
dec
pop
test
pop
mov
and
xor
aaa
mov
clc
mov
jbe
dec
test
mov
mov
pop
outs
mov
jne
push
dec
jnp
xlat
mov
cmp
popa
ret
arpl
mov
dec
nop
push
push
or
sbb
rcr
popf
mov
sub
mov
imul
cmp
push
movs
mov
lea
(bad)
xor
loop
inc
sub
mov
int3
and
hlt
dec
adc
leave
sahf
dec
inc
xor
or
clc
iret
shl
retf
pop
mov
sti
mov
fwait
int3
retf
imul
jns
add
push
fldcw
sti
retf
repnz
movs
fsubrp
inc
(bad)
mov
and
js
push
lea
jno
pop
lods
dec
and
adc
mov
call
push
push
xor
adc
cmp
inc
push
scas
or
mov
leave
fdivrp
cdq
and
pushf
jbe
sbb
fwait
or
cmps
mov
scas
gs
cmp
outs
outs
cmps
jnp
cmp
imul
push
add
jp
cmp
cmp
je
sub
cmps
sub
sti
xor
stos
aaa
mov
xlat
pop
loope
jo
add
(bad)
fwait
mov
jne
(bad)
test
jbe
(bad)
adc
xlat
push
hlt
adc
pop
and
add
or
fistp
xor
fisubr
cwde
mov
mov
xor
cmp
int3
cmp
bound
sbb
cmp
in
sbb
outs
ja
push
mov
loop
fadd
push
mov
pop
jb
fwait
cmc
call
inc
push
clc
stc
mov
idiv
fcomp
lds
add
inc
mov
xor
mov
dec
xchg
and
dec
loope
out
call
and
out
dec
mov
cmp
ja
adc
mov
lea
fbstp
dec
mov
or
xchg
pusha
shr
addr16
xchg
stos
jecxz
xchg
(bad)
iret
scas
popa
loope
stc
stc
inc
jmp
sbb
sub
inc
data16
pusha
and
mov
push
sbb
lods
or
retf
bound
into
sahf
leave
mov
sbb
fmulp
jl
scas
add
fstp
ficom
mov
jno
adc
push
clc
dec
and
fld
out
popa
lods
imul
enter
je
imul
mov
mov
mov
jae
cli
test
(bad)
hlt
cld
shl
ja
sub
in
adc
shl
mov
push
and
jno
test
test
mov
hlt
sbb
repnz
call
sub
fs
daa
retf
pop
xchg
xor
out
pop
fidivr
repnz
inc
or
les
outs
(bad)
or
clc
mov
dec
das
ins
or
scas
mov
ja
scas
mov
(bad)
cli
bound
adc
fcmovne
xchg
pop
mov
push
mov
pusha
cmp
out
adc
and
test
bound
scas
mov
xchg
mov
mov
mov
les
push
xor
xchg
or
and
cdq
loop
jbe
jb
adc
inc
sti
xchg
movs
sub
fwait
sbb
mov
aad
retf
jmp
dec
dec
jnp
and
mov
addr16
imul
push
imul
jp
dec
jp
ja
test
fadd
jg
adc
js
push
pop
mov
and
mov
imul
cmp
adc
dec
cwd
xor
(bad)
in
rcr
fsub
sub
or
call
jne
nop
cmps
cmps
shl
jmp
push
or
mov
iret
sub
loopne
and
mov
cmp
and
call
(bad)
sti
iret
fsubr
call
inc
dec
gs
rol
mov
mov
sub
inc
and
enter
test
dec
mov
(bad)
sub
loop
fistp
push
in
addr16
into
adc
ret
or
xor
cmp
add
add
xor
in
xchg
sbb
pop
jne
mov
mov
loop
pop
xchg
mov
push
test
push
repz
aas
pop
call
jmp
xor
hlt
pop
sbb
rcr
sbb
ficomp
cs
outs
xchg
inc
sti
jg
movs
push
cwde
and
and
rol
xchg
mov
push
dec
fbstp
(bad)
mov
jnp
jg
std
xor
fisubr
retf
push
adc
test
sti
mov
jbe
xchg
sub
nop
pop
sub
add
cmp
call
ret
jg
lock
mov
pop
jnp
push
mov
mov
cmps
sti
aad
data16
fild
mov
and
test
jmp
xchg
mov
loop
aaa
xchg
fimul
gs
cli
inc
xor
pop
addr16
es
mov
sub
cmps
scas
sub
sti
in
in
and
cdq
retf
dec
jnp
sub
popa
aaa
mov
movs
jne
lahf
jle
mov
in
lds
or
lods
fadd
in
das
mov
xor
rcr
push
mov
fst
push
push
(bad)
and
out
mov
jbe
add
cmp
adc
cmp
sub
pop
jle
mov
mov
mov
push
fsubr
aam
sub
or
xor
or
push
mov
ins
sbb
mov
mov
addr16
inc
cmp
bound
inc
and
loop
jle
push
push
xchg
adc
xchg
imul
fistp
aaa
push
xor
iret
cmc
inc
aaa
or
lods
dec
pop
ins
test
push
es
pushf
stos
push
arpl
or
adc
retf
stos
push
push
ja
stos
test
sbb
ret
(bad)
mov
jl
call
jnp
mov
and
mov
addr16
sub
loop
xchg
jae
dec
(bad)
repnz
popf
fst
mov
fidiv
sbb
mov
neg
stos
ja
xchg
ret
mov
jecxz
sub
fst
pushf
adc
aaa
movs
adc
xchg
dec
rol
(bad)
pop
fnstenv
fcmovnb
jmp
sbb
dec
adc
push
push
shl
sbb
sub
dec
jl
sbb
sub
jl
stos
mov
aas
cmps
aam
dec
iret
call
jecxz
repnz
les
mov
and
xchg
ds
frstor
repnz
sub
cmp
pop
jne
repz
aas
mov
idiv
retf
mov
test
lds
pushf
(bad)
adc
pop
out
sahf
aam
pop
add
push
(bad)
inc
or
sub
inc
inc
push
adc
xchg
mov
jecxz
add
aam
mov
sahf
jo
sub
int
out
sbb
add
mov
adc
inc
aad
jl
push
ss
shr
add
hlt
sbb
jg
mov
scas
outs
or
stc
aam
rol
adc
in
pop
imul
pop
push
inc
pusha
cwde
stos
iret
mov
push
sar
jecxz
fist
inc
sub
lea
add
jl
fs
cs
cwde
jbe
out
js
sbb
mov
(bad)
xacquire
and
imul
pop
arpl
ret
xor
iret
test
cmp
inc
sbb
mov
arpl
cmp
(bad)
push
sub
pop
mov
or
and
arpl
ss
cli
adc
fiadd
fs
mov
sub
and
cmp
add
dec
call
dec
sbb
inc
adc
push
sub
mov
call
loope
push
mov
xchg
mov
jge
xor
int3
je
in
cmp
mov
dec
ins
or
pop
add
jns
repnz
inc
inc
into
clc
push
adc
xchg
inc
xchg
out
shl
mov
ja
dec
sub
mov
xrelease
jno
(bad)
cmps
inc
xchg
push
pop
in
movs
pop
dec
out
mov
addr16
pop
mov
test
movs
js
sub
or
cmc
xor
adc
and
mov
or
test
adc
pop
pop
dec
pop
cli
in
dec
inc
out
xor
pop
shl
inc
mov
and
push
imul
cs
cmp
mov
in
fs
xor
sti
out
inc
mov
pop
lock
mov
jmp
push
dec
mov
ret
or
sub
sbb
inc
pop
fld
mov
inc
lahf
sbb
jne
xchg
pop
or
or
iret
xlat
and
xor
mov
cmp
dec
cmps
call
mov
mov
mov
mov
movs
push
sbb
add
mov
push
pushf
mov
dec
bound
daa
es
sahf
cwde
das
iret
mov
cmps
mov
ins
ret
(bad)
jle
lods
push
inc
and
dec
jmp
int
loope
push
or
xchg
pop
dec
add
dec
jnp
in
xor
mov
inc
push
dec
jb
repnz
pop
call
aaa
aam
adc
repz
xchg
mov
stos
add
dec
inc
mov
ss
ins
pop
sub
inc
jno
push
adc
xlat
push
mov
in
cmp
retf
aad
dec
ror
jne
inc
jbe
mov
and
nop
mov
dec
add
sbb
push
sbb
shl
sub
cmp
in
call
push
jno
adc
pop
ja
(bad)
shl
rol
cwde
js
push
mov
xchg
in
cwde
cmp
cmp
sub
jbe
pop
or
push
repnz
mov
pop
stc
push
dec
nop
test
and
xchg
lods
inc
dec
outs
cli
loopne
lea
sub
int3
cmp
dec
push
loopne
jno
fsubr
xchg
repnz
xchg
pop
cs
sbb
ja
fmul
mov
fs
(bad)
lahf
(bad)
jg
imul
pushf
and
adc
mov
imul
in
pusha
xor
out
mov
mov
mov
std
sbb
or
push
adc
dec
dec
or
xchg
loop
jnp
icebp
mov
mov
mov
fistp
fadd
fcmovb
mov
dec
mov
stos
sbb
fld
inc
aaa
mov
xchg
outs
cmp
cmp
xchg
mov
or
test
mov
and
movs
adc
bound
mov
adc
sbb
sar
or
jno
cmc
test
cmp
sbb
clc
xor
lahf
push
ja
xor
mov
or
pop
clc
jae
stos
call
(bad)
cmp
outs
lds
pushf
retf
mov
leave
mov
mov
xchg
arpl
jp
(bad)
xor
push
nop
pop
cmps
cmp
int3
sbb
mov
mov
shr
and
or
sub
movs
rol
adc
jbe
dec
xor
icebp
(bad)
mov
int
xlat
adc
xchg
daa
into
arpl
fs
int3
fcomp
mov
retf
or
(bad)
adc
mov
or
or
xor
mov
std
arpl
test
push
cmp
pop
movs
mov
push
pop
mov
jl
out
sbb
mov
lock
js
addr16
sar
dec
jne
aaa
popf
out
pop
add
fisub
inc
mov
or
push
push
sahf
dec
add
inc
(bad)
call
xor
push
and
dec
inc
inc
enter
outs
push
ror
sub
xor
repz
mov
test
pop
dec
add
std
push
mov
pop
cmp
xchg
and
cmp
outs
imul
or
sbb
dec
dec
jae
pop
fist
mov
fucom
mov
adc
loopne
setns
mov
inc
mov
ds
dec
mov
fsub
and
fisttp
(bad)
or
fs
loope
xor
out
jp
xor
inc
neg
scas
test
stos
ret
or
xchg
inc
(bad)
cmp
xor
and
shl
sub
dec
push
mov
jno
cmp
mov
xor
imul
rol
inc
dec
nop
xlat
xchg
fsub
ins
mov
push
enter
out
jbe
es
push
push
cmp
xlat
js
xchg
aas
iret
dec
ins
dec
repnz
adc
sub
shr
xlat
enter
cld
retf
or
add
dec
pop
sahf
scas
stc
add
shl
test
fsubr
inc
mov
call
sub
xchg
fidivr
pop
ja
rol
test
xor
sbb
rol
push
jbe
loopne
xor
xor
jg
adc
arpl
sub
test
imul
xchg
inc
jo
sub
pop
or
pop
adc
movs
ror
adc
add
push
into
push
and
sti
and
pop
addr16
mov
scas
pop
outs
lods
jecxz
add
xchg
cmp
dec
adc
add
shl
or
cmp
fucomi
in
or
dec
popa
xchg
inc
leave
outs
mov
dec
jecxz
repz
mov
in
not
pusha
sbb
dec
adc
xchg
mov
repz
nop
pop
out
cmp
sbb
les
fidiv
call
scas
js
lea
mov
ja
inc
mul
push
scas
mov
fwait
add
jecxz
add
call
in
xchg
jbe
aas
test
or
dec
addr16
fild
mov
rcr
push
sub
and
jne
(bad)
out
or
enter
xchg
mov
addr16
mov
arpl
jge
or
int3
in
fldenv
xor
or
cmp
cmp
push
fwait
add
push
std
adc
(bad)
cs
mov
sahf
rsqrtps
std
lds
adc
mov
lods
mov
ss
or
pop
and
dec
into
sub
dec
or
in
add
xor
lods
icebp
xchg
or
xchg
cmc
xor
out
cmp
addr16
or
add
mov
loop
arpl
out
add
jp
ror
xchg
mov
(bad)
popa
and
jecxz
inc
in
into
data16
jae
xchg
sbb
mov
ficomp
dec
or
sbb
aad
imul
sub
out
lods
pop
inc
inc
lods
fisubr
int3
inc
mov
dec
mov
jno
adc
add
fldcw
mov
in
mov
mov
je
es
or
iret
pop
mov
popa
sub
repz
inc
mov
mov
jbe
lahf
fwait
cmp
jecxz
cmps
call
push
or
add
pushf
xor
sti
jge
sub
add
mov
add
ss
(bad)
sub
enter
icebp
jbe
std
cmp
push
popa
adc
rcr
loope
dec
jb
mov
sub
iret
aaa
cmps
xlat
aad
push
cmp
fwait
jbe
in
sub
daa
cli
dec
jns
or
leave
pop
ret
sbb
jge
faddp
dec
mov
popa
adc
push
into
pop
jmp
xchg
les
add
js
in
fist
sahf
pop
jns
xor
mov
mov
inc
fidivr
iret
rcl
xchg
jno
call
ret
in
pop
aas
cld
adc
mov
push
xor
inc
dec
xchg
mov
mov
cmp
fiadd
ror
sti
stos
fisttp
mov
popa
rcr
sub
(bad)
push
repz
scas
and
scas
daa
push
cli
dec
out
rcr
sbb
scas
(bad)
(bad)
js
fwait
aaa
loope
mov
mov
adc
dec
pop
jmp
ret
xchg
loope
xchg
es
add
and
sbb
xchg
out
xchg
xchg
imul
lahf
in
and
xchg
mov
pop
sub
shl
mov
add
jle
cs
add
shl
aaa
cmps
test
stc
add
pop
mov
mov
icebp
xchg
ins
xor
push
sub
jno
(bad)
jmp
into
retf
or
lds
inc
lahf
retf
pop
loop
mov
ffree
rcl
fmul
sbb
div
mov
jne
jb
or
xchg
aaa
add
test
push
ret
jl
aaa
pop
repz
pop
test
das
adc
fwait
dec
xchg
inc
(bad)
fidiv
loope
sbb
cs
retf
test
xchg
push
pop
stc
repnz
fs
add
mov
(bad)
pop
mov
push
outs
xor
scas
loope
cli
mov
push
pop
dec
stos
stos
(bad)
fdiv
imul
mov
outs
mov
push
inc
mov
stos
scas
inc
(bad)
xor
mov
sbb
(bad)
cmc
mov
sub
pop
fxtract
or
and
sub
jnp
dec
loopne
mov
push
lock
mov
imul
xchg
jmp
xlat
dec
mov
mov
cdq
push
jns
ret
xchg
mov
cmc
or
mov
out
and
mov
cmps
mov
cmova
mov
gs
adc
fsubr
lods
and
xor
push
mov
inc
test
ja
idiv
mov
or
or
sub
(bad)
in
idiv
add
xor
loopne
in
dec
int3
jle
dec
and
in
mov
movhlps
out
test
xlat
int3
push
mov
(bad)
test
in
aam
es
in
jg
ret
icebp
dec
test
fisttp
retf
or
push
cli
ficomp
inc
cld
push
iret
jecxz
push
pop
mov
push
xor
push
and
cdq
cld
pop
sub
push
mov
fst
cs
and
movs
std
xchg
jmp
pushf
out
test
adc
mov
lods
mov
test
xchg
sub
push
dec
jae
mov
rol
jmp
jo
pusha
jns
rol
mov
push
fsub
enter
cmp
pop
in
and
xchg
and
iret
outs
pop
xchg
cmp
aas
pop
movs
inc
(bad)
jno
push
mov
int
jae
and
cli
adc
sub
mov
add
repz
cmc
push
pop
push
cmp
imul
jmp
or
in
adc
jmp
outs
(bad)
jmp
mov
imul
push
movs
mov
push
pop
test
sbb
lods
(bad)
push
push
in
je
mov
dec
aad
sub
push
icebp
add
sub
pop
aad
jo
dec
push
je
(bad)
sbb
and
retfw
mov
xor
dec
js
mov
mov
jmp
pop
and
adc
inc
gs
inc
hlt
adc
hlt
sahf
or
pop
pop
fwait
jns
ja
mov
sub
loopne
dec
fdiv
sub
mov
daa
adc
cmp
outs
int
pop
cmp
adc
lods
test
push
sbb
mov
sar
push
sub
std
or
fsub
pop
sub
lea
xchg
shl
in
cmp
sti
inc
cdq
pop
dec
xchg
dec
pop
ins
add
add
std
pop
mov
add
add
out
imul
shl
push
fisubr
shl
inc
mov
add
jge
jp
(bad)
nop
ret
xchg
add
dec
pop
ins
mov
stos
popa
xchg
xor
es
mov
pushf
cmp
push
inc
pop
mov
lods
cmc
daa
xchg
or
push
movs
shr
pop
inc
sub
sub
icebp
or
ret
push
popa
out
jmp
dec
xchg
mov
sub
outs
cmps
ret
inc
inc
xchg
xchg
std
jle
fiadd
xchg
arpl
and
mov
stc
mov
outs
push
sti
das
pop
call
(bad)
jae
dec
mov
mov
test
(bad)
out
or
bound
in
add
je
inc
dec
adc
push
push
cmp
xor
sbb
lds
rcl
jae
or
not
mov
rcl
jns
lock
mov
cwde
pop
outs
out
dec
adc
bound
aad
push
dec
repz
cmc
aad
xor
sub
add
add
arpl
xchg
mov
les
cwde
cmp
int
shl
push
daa
add
cmp
rol
jl
adc
pop
jo
jnp
call
jp
cmp
xchg
and
fidivr
push
cmc
pop
es
arpl
mov
or
fnsave
sub
call
jmp
mov
ficomp
push
jge
(bad)
pop
or
inc
dec
push
dec
test
jg
inc
daa
adc
lods
int3
mov
int
xor
ja
and
sbb
int
xor
push
lods
cmp
jle
push
mov
aas
dec
out
pop
je
sub
fbld
inc
mov
daa
mov
cdq
jmp
sbb
clc
int3
cs
into
outs
rol
inc
out
jg
xlat
shl
dec
xor
stos
xchg
mov
shl
sub
mov
sahf
adc
or
push
xchg
lea
cmp
cld
mov
aam
stos
sbb
xchg
xchg
mov
in
mov
mov
dec
and
call
and
adc
cdq
pop
mov
(bad)
xchg
adc
into
(bad)
retf
mov
ja
mov
iret
dec
inc
data16
jb
es
jmp
jge
sub
mov
lods
xlat
add
and
icebp
cli
daa
ins
(bad)
in
jbe
ins
scas
add
fwait
scas
xor
fsub
dec
(bad)
retf
loopne
jne
xlat
popf
sub
jle
sar
pusha
inc
push
mov
pop
mov
aad
fnstenv
and
(bad)
movs
push
mov
test
(bad)
daa
je
(bad)
push
jno
retf
mov
out
gs
fisub
pusha
adc
test
mov
lock
mov
sub
fwait
scas
mov
shl
cmps
lods
sbb
mov
ss
mov
pop
call
(bad)
dec
pop
(bad)
(bad)
mov
popf
int3
mov
xor
(bad)
(bad)
cwde
pop
mov
retf
mov
mov
stc
lahf
test
and
xchg
and
in
test
(bad)
je
dec
shl
cmp
push
adc
mov
ror
ins
adc
lock
pushf
push
sti
outs
push
or
jp
jne
pop
fistp
repz
dec
sbb
push
pop
xchg
aaa
repnz
jbe
movs
gs
xchg
add
dec
mov
push
sahf
mov
shl
pop
or
xchg
push
imul
aaa
repnz
ficom
push
daa
mov
cmp
inc
loopne
inc
ins
in
push
(bad)
xor
test
push
dec
jle
sub
add
outs
add
jns
jmp
ins
sar
scas
jle
bound
pop
ins
add
or
inc
sbb
movs
sub
ins
call
(bad)
jl
in
dec
or
ret
mov
jmp
shl
call
pop
in
adc
mov
scas
mov
sub
mov
jp
push
call
and
popa
dec
ins
dec
push
sub
in
xor
mov
out
(bad)
ret
cmp
fisubr
not
push
mov
push
or
ret
push
jnp
mov
aas
pop
adc
(bad)
dec
xlat
pop
jp
pop
jne
push
ja
sbb
in
jbe
mov
cmp
int
ror
sub
dec
push
add
movs
push
sbb
jle
mov
ret
mov
jecxz
and
test
xchg
mov
xchg
adc
ss
inc
mov
adc
(bad)
mov
or
popf
or
pop
inc
ret
outs
push
mov
push
repz
retf
and
sbb
xchg
push
int
scas
fdiv
jmp
lds
loop
sbb
es
call
mov
lock
push
outs
mov
jbe
add
mov
cmc
int
or
push
call
pop
dec
fistp
cwde
scas
mov
daa
push
mov
mov
lds
imul
rol
aam
in
movs
das
inc
sub
lds
leave
es
ja
push
jo
mov
xchg
sti
repz
or
in
and
aaa
inc
test
add
inc
das
jns
gs
inc
inc
push
in
add
lds
pop
scas
fnstcw
and
jp
jns
(bad)
mov
push
lods
fsub
es
mov
int
cmp
mov
mov
mov
cmp
sub
icebp
scas
xchg
sbb
mov
dec
xchg
outs
lock
retf
ffree
inc
dec
popf
xchg
add
sub
lds
cli
mov
clc
fstp
xchg
add
fcmovb
mov
inc
rol
inc
mov
pop
pop
ja
pop
mov
sbb
ret
outs
pop
cmp
stos
inc
xchg
push
rcl
int3
jb
sub
dec
mov
outs
and
dec
lods
punpckhqdq
adc
add
push
fisub
dec
xchg
xchg
xchg
cmp
pop
cdq
jecxz
mov
jmp
in
fistp
inc
test
je
push
sbb
and
inc
pop
dec
inc
retf
call
xor
imul
mov
xchg
out
arpl
sub
or
scas
scas
mov
fsub
xchg
in
or
xchg
cli
idiv
cmp
mov
and
dec
popa
push
jne
cmps
gs
mov
adc
push
cmp
mov
fcomp
xchg
lods
cmp
cmp
into
shl
pusha
mov
clc
ja
xor
pop
xchg
pusha
inc
imul
test
cwde
outs
shr
test
mov
ja
jp
and
nop
movs
mov
dec
mov
add
push
(bad)
lds
cmp
jp
syscall
mov
mov
jg
adc
adc
add
sbb
adc
jp
adc
adc
(bad)
pop
cdq
stos
mov
popf
int3
inc
fbld
pop
jg
mov
lods
cld
gs
inc
push
in
jb
rcr
dec
aaa
cmp
es
test
sub
bound
es
rcl
push
mov
(bad)
shr
dec
in
or
xor
jl
xor
inc
lods
retf
les
xchg
fcom
or
cmp
bound
adc
inc
and
pop
xchg
jbe
ret
dec
out
cdq
out
out
cmp
cmp
sub
test
lea
dec
mov
in
jnp
jne
adc
xor
in
loop
xchg
mov
je
sub
push
shl
adc
loope
scas
push
adc
and
mul
xor
xor
mov
fstp
nop
arpl
test
pushf
xor
dec
sti
fstp
imul
fstp
and
dec
or
mov
mov
cmp
call
call
in
inc
or
int
jmp
mov
pop
sub
loop
add
cmp
xor
out
xchg
test
jns
adc
cmps
push
fstp
leave
pop
loop
clc
test
cli
xor
arpl
sti
xchg
jo
loopne
repz
in
aas
sbb
(bad)
xchg
daa
sub
ror
sahf
pop
popf
mov
scas
dec
sbb
gs
pop
adc
inc
in
cmp
jnp
push
idiv
ror
xor
or
and
outs
retf
hlt
mov
scas
and
push
jl
daa
mov
mov
(bad)
cli
scas
xchg
mov
xchg
data16
inc
pop
leave
test
dec
inc
jle
or
fnstcw
push
inc
inc
mov
ins
aam
sub
xor
inc
jns
repz
cmp
test
jne
ins
popa
lds
addr16
and
hlt
jnp
fild
loop
or
lds
xor
mov
nop
(bad)
add
sub
mov
mov
pop
cld
xlat
jmp
cmp
aaa
and
imul
aam
popa
push
or
test
dec
(bad)
or
ins
sbb
or
and
cmps
jno
mov
pop
add
xchg
push
movs
jg
mov
fisttp
mov
and
and
dec
paddsw
cld
jmp
and
jge
rcl
in
mov
dec
adc
mov
jae
xor
pop
mov
xchg
call
push
add
movs
dec
mov
add
cwde
mov
fcomp
popa
or
push
inc
and
pop
mov
dec
scas
jns
sbb
icebp
dec
popf
pop
and
fld
(bad)
inc
mov
push
movs
frstor
adc
in
popf
dec
ins
fldenv
popf
adc
cmp
fdiv
jns
cs
mov
pop
mov
cmps
loope
out
movs
jle
adc
adc
bound
xlat
xchg
or
xchg
inc
and
jmp
fidivr
loop
dec
or
ret
add
call
mov
outs
push
dec
stos
mov
or
cmp
xor
pop
push
repz
mov
test
test
loope
cld
pop
sar
jns
rep
jb
cmp
xor
stc
mov
mov
scas
test
add
aam
lods
dec
pop
(bad)
sub
inc
das
push
push
in
std
adc
pop
fwait
mov
pushf
and
xor
push
and
mov
xor
xchg
sub
dec
mov
sti
adc
xchg
mov
cmp
mov
enter
cs
add
push
out
idiv
mov
xchg
push
shr
stos
fisub
sub
cmp
sbb
inc
add
mov
sar
cwde
mov
ins
dec
test
aaa
lods
push
mov
mov
test
cli
xor
test
push
or
jb
and
cmp
lods
popa
mov
cmp
jmp
scas
mov
add
imul
in
or
xchg
push
aas
mov
in
xchg
(bad)
arpl
adc
adc
retf
sbb
enter
je
fwait
scas
ds
sub
aam
add
sub
pop
aaa
inc
or
(bad)
mov
mov
imul
ret
mov
sbb
mov
sbb
fld
sbb
mov
fldl2e
setne
cmps
call
mov
push
push
push
std
repz
add
dec
arpl
add
pop
(bad)
sti
sub
int3
mov
mov
jge
inc
mov
dec
test
(bad)
mov
adc
pop
jle
xor
test
adc
pop
xchg
mov
inc
push
popf
jo
neg
clc
ret
mov
shl
je
dec
movs
jo
mov
(bad)
int3
cmp
cmp
xchg
dec
add
hlt
push
cmp
mov
xchg
push
imul
pop
xlat
pusha
es
pusha
aam
dec
cmp
repz
lods
mov
or
test
dec
fisttp
pop
pop
mov
cli
and
fs
retf
sub
icebp
scas
jp
in
paddusb
fs
ja
jmp
stos
stos
sub
jmp
loopne
movs
(bad)
scas
inc
sub
aaa
or
add
stc
sbb
mov
shl
je
stc
fucomip
mov
add
mov
push
es
mov
add
in
std
ds
cmps
add
mov
push
add
popa
inc
aam
fwait
cmc
xor
dec
in
mov
xor
or
mov
movs
mov
dec
outs
stos
dec
test
mov
aam
inc
sub
movs
pop
in
inc
add
push
sub
shl
retf
jno
in
pop
ficom
add
jmp
les
or
pop
imul
jo
ins
out
add
sbb
rcr
jae
mov
ds
outs
or
push
mov
jle
enter
xor
loopne
retf
sbb
and
lods
arpl
push
or
mov
movs
aad
mov
inc
jmp
mov
retf
xchg
cmp
pop
lods
push
(bad)
shl
push
out
xchg
or
mov
jae
loop
imul
mov
retf
fwait
and
ds
jo
pusha
xchg
jno
or
loopne
mov
call
mov
mov
jae
dec
addr16
add
jmp
stos
mov
push
push
jno
jae
jbe
pop
push
cld
pop
mov
pop
pop
ficom
mov
jle
fs
adc
rcl
jmp
js
out
and
add
push
fdivr
inc
xor
xor
pop
sub
std
(bad)
sar
push
xor
aad
xor
aaa
stos
fld
fmul
test
xor
cwde
xor
cmc
add
mov
xor
ror
repz
mov
daa
mov
dec
jmp
leave
cmp
(bad)
lea
mov
cmp
out
ins
mov
adc
fsub
dec
mov
out
and
pop
arpl
leave
scas
loop
popa
mov
sbb
loop
fld
cwde
inc
inc
push
add
mov
adc
hlt
sub
iret
(bad)
movs
sahf
(bad)
clc
pop
fnsave
pop
in
(bad)
imul
nop
iret
jmp
sbb
xor
into
sbb
loope
dec
push
mov
and
shl
push
push
stos
cmp
mov
pop
call
mov
aam
popa
loopne
jge
repnz
sbb
push
mov
push
out
mov
bound
mov
shl
movs
das
push
add
cmp
pop
sbb
cmp
clc
(bad)
mov
test
sub
lds
inc
jbe
pop
repz
mov
adc
sbb
pop
movs
adc
mov
push
mov
sahf
sbb
push
sbb
push
or
push
aad
mov
sub
je
cld
jno
jg
mov
cmps
push
call
lahf
nop
adc
in
test
loope
cmps
(bad)
shr
dec
push
mov
(bad)
adc
dec
call
mov
sub
pop
dec
loope
mov
or
(bad)
pusha
fldenv
mov
xchg
in
mov
sub
int3
add
mov
test
adc
pop
jns
add
dec
rol
loope
inc
or
mov
jle
mov
adc
enter
dec
mov
jmp
js
mov
ja
repz
stc
adc
inc
dec
add
pusha
mov
mov
cli
pop
stos
jmp
xor
xor
dec
scas
xchg
mov
mov
dec
fisubr
int
push
pushf
xchg
mov
xchg
ror
jl
cwde
pop
movs
or
lods
or
sti
sub
rcl
loopne
jns
shl
inc
push
or
popa
and
arpl
mov
retf
lea
es
vandps
cmp
sar
or
sahf
or
pusha
cs
fldenv
imul
pop
pop
(bad)
mov
mov
psadbw
sahf
cmps
sub
das
xchg
shr
and
hlt
fiadd
dec
push
ds
in
retf
mov
xchg
int3
push
jecxz
cmps
stc
cmp
daa
(bad)
xor
imul
sti
ficomp
and
pop
sub
xchg
fwait
outs
js
fld
outs
push
sub
add
mov
mov
cmp
inc
add
daa
mov
mov
mov
lds
movs
xchg
stos
aaa
xor
push
xor
sub
outs
jge
loope
fistp
mov
xchg
or
push
sub
test
jp
(bad)
fsubr
(bad)
push
sub
pop
sub
sub
mov
mov
cmp
xor
inc
add
or
cmp
cmp
lock
jns
mov
fnstsw
call
xor
xchg
cmovae
jge
pop
(bad)
mov
test
push
mov
ret
test
nop
adc
mov
cmp
mov
sti
imul
js
repnz
xor
fisttp
jle
(bad)
out
leave
jbe
mov
cmp
xchg
sbb
dec
adc
jns
inc
mov
mov
ror
jmp
push
pop
adc
test
sbb
jns
pop
jns
ret
daa
push
adc
cmp
pop
iret
mov
int
ins
sub
scas
fwait
cmp
push
xchg
sahf
xchg
add
iret
lods
push
push
xchg
fldcw
rcr
jecxz
pushf
or
ss
fcom
scas
push
adc
rol
cmc
fild
in
das
hlt
cmp
add
xchg
iret
inc
mov
gs
jns
mov
test
mov
pop
add
or
and
add
xchg
jae
stos
cdq
sar
outs
test
mov
pop
fwait
pusha
sbb
add
cmp
js
fiadd
pop
ror
jae
mov
in
test
jmp
xor
dec
out
push
push
fs
dec
push
movs
push
pop
inc
fisub
jne
cmp
pusha
adc
retf
sub
mov
fwait
mov
call
pop
mov
inc
mov
repz
sbb
(bad)
mov
fwait
and
stos
clc
loopne
rol
fwait
sub
sub
and
js
dec
jno
dec
aas
or
xlat
ret
push
repz
pop
pushf
test
jle
add
sub
xlat
fbstp
dec
ins
jmp
cmp
mov
pop
out
mov
push
in
xor
repz
aas
xchg
fsubrp
mov
imul
imul
mov
stos
es
jmp
fdivr
mov
or
sub
pop
cmp
dec
mov
or
mov
push
jmp
cmp
pusha
jbe
mov
fwait
aas
adc
inc
mov
dec
rcl
dec
scas
ja
inc
pop
dec
mov
mov
dec
pop
push
and
(bad)
xor
imul
push
scas
in
cmp
lods
aad
cld
pop
inc
mov
push
or
jmp
or
gs
les
adc
in
dec
push
jmp
or
or
cdq
lea
jns
retf
cmp
inc
and
retf
mov
pop
repz
mov
pusha
mov
outs
test
jg
cmp
add
adc
pop
icebp
(bad)
out
add
xlat
jo
pop
mov
mov
push
push
test
add
inc
aad
std
dec
inc
ins
push
les
cs
addr16
or
mov
loopne
push
fs
sbb
push
add
in
mov
push
mov
loope
jns
in
add
jno
fmul
outs
fwait
inc
xor
loopne
mov
pop
push
outs
mov
xchg
inc
inc
sub
mov
(bad)
jge
dec
cmps
mov
sub
rcr
sti
scas
pusha
mov
mov
add
pop
call
jno
adc
inc
and
xchg
iret
in
(bad)
(bad)
pop
adc
ja
iret
cmp
push
sbb
cs
push
and
sar
ds
jge
inc
jge
lods
out
dec
and
popa
push
std
cld
idiv
dec
dec
sub
pop
mov
push
stos
push
loope
scas
add
outs
sbb
shr
das
pop
inc
loopne
jae
sbb
jns
mov
(bad)
pop
dec
shr
mov
clc
pop
jnp
add
sub
aaa
outs
inc
mov
jge
into
push
shr
sub
add
pop
sahf
mov
jg
scas
rol
fmul
in
pop
cli
fimul
xchg
dec
push
add
(bad)
call
stc
retf
in
mov
pop
lods
inc
jb
jnp
fadd
call
push
cmps
out
or
jg
sub
pusha
popa
sub
arpl
icebp
mov
fldcw
das
xchg
cmp
push
jl
jp
ins
dec
mov
ror
push
pop
or
popf
and
or
adc
in
mov
or
jbe
mov
mov
cmp
je
pop
jmp
outs
iret
pop
mov
xchg
mov
ror
xor
mov
loope
(bad)
or
scas
scas
xchg
popf
dec
rep
push
rcl
push
dec
cmps
retf
and
fnstcw
jecxz
shl
add
fcmove
add
out
and
aas
sahf
xlat
pushf
lods
pop
js
xchg
cmp
rol
lods
std
mov
clc
out
int3
outs
imul
add
jo
daa
ds
sub
inc
fidiv
cmp
icebp
and
sar
ins
rcr
mov
fwait
pop
push
adc
icebp
sar
cmp
(bad)
xchg
pop
and
loopne
mov
push
out
jnp
je
imul
test
loope
mov
push
cmp
outs
push
mov
fdivr
out
shl
inc
call
cli
pop
dec
sar
jns
aas
mov
jno
xlat
cmp
lea
shl
xlat
ds
lea
adc
cmp
fcom
je
pop
das
aas
pusha
xor
adc
pop
lods
lods
or
xor
jns
xchg
pop
adc
mov
and
push
push
adc
or
lods
sub
cli
mov
xor
jae
jnp
adc
rcr
or
ins
mov
scas
stc
loop
cli
dec
cmp
cmps
iret
out
jle
adc
cmp
aad
and
and
sub
idiv
fwait
cmp
xor
(bad)
iret
je
add
dec
jb
push
adc
std
loop
inc
adc
lea
inc
outs
ss
pop
xchg
jbe
push
xchg
pop
addr16
rcl
mov
jne
stos
mov
rol
in
add
push
push
jbe
adc
jns
mov
mov
out
sbb
fdiv
sbb
adc
mov
in
loopne
into
data16
add
xchg
or
sbb
test
scas
dec
js
ins
or
dec
cmc
mov
inc
jp
out
cmp
nop
in
cmp
mov
outs
mov
sbb
lea
clc
test
cmps
arpl
push
xlat
xchg
mov
adc
dec
xchg
shr
pop
jg
stc
fsub
and
xchg
dec
cli
jnp
sub
push
dec
or
xor
(bad)
daa
ds
mov
ds
rol
stos
dec
dec
sahf
mov
xor
pop
arpl
outs
mov
fsubp
leave
sbb
cld
fwait
mov
mov
jo
xor
mov
mov
stos
mov
xchg
dec
int3
pop
push
das
inc
push
in
cmp
push
jmp
push
or
lahf
mov
dec
lods
pop
call
stc
out
or
scas
popf
jo
push
cdq
stc
cmp
(bad)
movs
int
retf
dec
xchg
push
mov
in
and
push
je
retf
xor
loope
fwait
in
mov
lock
addr16
(bad)
fstp
xchg
jmp
pop
(bad)
imul
adc
call
dec
je
(bad)
pusha
fldcw
leave
cmp
sub
ret
and
mov
jo
pop
jecxz
jbe
repnz
jbe
or
xor
idiv
ds
cmp
mov
sbb
dec
mov
fwait
(bad)
arpl
xor
dec
sbb
cmp
cmc
xchg
ss
xor
cld
mov
sti
clc
mov
mov
pop
(bad)
je
or
aaa
inc
movs
mov
or
das
fisub
out
(bad)
mov
shl
lea
adc
fs
push
jmp
jle
pop
(bad)
(bad)
jge
pop
sbb
sti
dec
jno
iret
mov
xchg
retf
mov
sti
outs
jmp
lods
dec
sbb
das
jae
inc
adc
mov
cmp
jmp
sbb
dec
test
inc
mov
jnp
push
into
push
or
sbb
mov
neg
ja
jno
cmp
mov
int
xchg
std
dec
aaa
xchg
mov
sar
adc
sti
inc
imul
pop
mov
add
cwde
xlat
inc
xor
pusha
mov
std
loope
or
push
scas
imul
add
xor
fsubr
jne
jg
and
int
add
pushf
adc
adc
popf
mov
stos
cmp
ror
pop
inc
inc
pusha
xor
mov
ins
xchg
push
fnstsw
and
out
sbb
aas
rcl
out
jg
sbb
loope
es
add
lahf
test
sahf
nop
in
(bad)
outs
sub
lahf
push
mov
je
shl
aas
mov
fcom
mov
ret
loop
pop
cmp
(bad)
or
repnz
ds
dec
push
push
sahf
stc
pop
push
imul
je
and
mov
(bad)
jns
or
pop
adc
and
icebp
dec
in
in
push
push
stos
xor
pushf
fbld
pop
imul
(bad)
movs
imul
cld
lahf
xchg
bound
lods
lods
sub
out
adc
inc
enter
clc
je
xchg
lea
movs
fidiv
outs
lahf
lea
dec
cmp
je
retf
xlat
adc
push
sub
fs
mul
cdq
in
mov
ficomp
pop
mov
cs
sub
mov
call
test
imul
xchg
cmps
pop
dec
xor
out
dec
cmp
(bad)
jbe
push
stos
sub
jl
dec
inc
in
fld
retw
or
cmps
mov
leave
dec
cmp
push
idiv
imul
and
inc
xchg
fcomp
mov
arpl
lods
repnz
jno
(bad)
mov
clc
fcomp
sti
fcom
call
or
pop
push
cmp
shl
ffree
mov
jo
mov
rep
jb
push
xchg
dec
repz
scas
mov
and
sbb
inc
adc
sub
fist
jp
push
imul
in
add
cli
or
(bad)
pop
pop
inc
pand
sub
fs
lods
daa
sub
pop
and
retf
pop
imul
inc
nop
iret
or
lods
push
mov
pop
and
push
aad
xlat
cmps
movs
icebp
test
movs
mov
push
xchg
ins
int
test
and
xchg
mov
sub
out
mov
jle
mov
xor
pop
inc
jbe
add
(bad)
sbb
xchg
mov
mov
jl
fnstenv
in
and
add
jg
out
or
rcl
dec
les
(bad)
data16
xchg
lods
and
lods
ret
faddp
adc
pop
sbb
retf
or
and
stos
mov
sbb
in
call
lahf
add
add
lahf
mov
call
push
ss
inc
ss
mov
popf
test
dec
js
test
and
setno
popa
add
(bad)
lea
(bad)
sti
pop
js
std
lahf
pusha
pop
outs
enter
out
fild
nop
iret
mov
imul
inc
or
int
mov
sub
dec
add
and
xchg
xor
(bad)
cmp
ss
dec
or
or
fcomp
dec
pop
mov
shr
mov
clc
mov
xor
(bad)
xchg
mov
ret
fstp
xchg
add
xchg
leave
dec
fisubr
inc
sub
jb
xchg
inc
pop
pop
out
fdivr
push
(bad)
movs
push
pcmpgtd
loopne
sahf
xchg
inc
cli
mov
dec
mov
dec
sbb
mov
in
dec
lods
ins
xor
ss
push
stos
fdivr
call
dec
dec
or
enter
or
push
mov
push
jno
mov
ins
stos
dec
push
retf
push
hlt
sbb
ror
lahf
pop
aas
xor
das
sbb
shl
outs
cdq
ins
pop
cmp
adc
in
fwait
(bad)
mov
inc
xchg
or
mov
jnp
xchg
inc
jo
pop
loop
(bad)
jecxz
xlat
fisubr
adc
imul
shl
or
mov
sbb
cmp
cmp
lea
sub
pusha
fisttp
cmc
in
stos
test
fisttp
std
int3
and
out
jno
inc
(bad)
int3
mov
mov
jg
mov
or
mov
int
sbb
ret
inc
jnp
nop
jae
pop
mov
xchg
jge
movs
addr16
xchg
push
mov
test
mov
xchg
rol
fldcw
sbb
loopne
mov
xor
xchg
popa
fs
pop
cmp
int
mov
adc
inc
jne
push
ins
xchg
push
test
inc
ficomp
pop
dec
in
inc
inc
test
xor
adc
das
ret
xor
add
ds
cmps
or
das
lods
shr
sbb
jmp
xchg
lods
jnp
cmp
adc
xchg
aas
pop
call
push
fsub
pop
xchg
call
add
(bad)
dec
mov
adc
call
sub
push
jmp
ds
mov
xchg
test
in
mov
outs
push
jbe
xchg
loop
cmps
cmp
or
cmp
or
jle
jmp
mov
inc
push
(bad)
cmc
pop
fldenv
add
bound
int
ins
dec
retf
mov
inc
repnz
inc
rol
repnz
xor
mov
cmp
inc
test
gs
sub
push
std
cmp
push
repnz
popa
jns
pop
rep
push
mov
scas
push
loopne
fidivr
(bad)
lahf
dec
xchg
xor
mov
cmp
sub
aam
aam
ds
std
jae
pop
mov
retf
mov
pushf
aaa
mov
xchg
mov
lea
mov
xchg
movs
gs
fsub
mov
xor
mov
add
xchg
jb
popa
jne
ins
sbb
aam
sahf
out
ds
lods
fdiv
repnz
je
outs
les
cli
shl
(bad)
cmc
je
push
jno
lock
pop
pop
cmc
ror
popa
pop
mov
test
and
and
fxch
or
cmp
dec
ret
and
cwde
push
test
out
jo
jle
lds
ficom
push
repz
popf
cld
popf
xchg
xchg
adc
sbb
in
xchg
dec
adc
jmp
jmp
jo
inc
pushf
cmp
mov
jge
outs
mov
jl
or
jl
sub
scas
call
enter
iret
pop
loope
or
adc
(bad)
pusha
daa
(bad)
(bad)
call
fucomi
cmp
push
cmp
pop
sub
icebp
out
(bad)
xor
adc
ja
retf
mov
ins
xchg
pop
ds
xchg
jne
fiadd
xor
(bad)
fisub
out
pop
cmp
pop
dec
adc
pop
mov
push
iret
mov
mov
adc
lods
fmul
(bad)
jnp
and
mov
aaa
or
pop
fwait
out
fwait
mov
dec
sub
(bad)
cmp
and
push
push
outs
sahf
sub
call
push
and
adc
sub
sti
pop
sbb
mov
repnz
dec
sti
fistp
ror
inc
push
jl
jb
sbb
push
push
cmp
sbb
stc
mov
sub
add
inc
or
outs
dec
jne
dec
push
mov
outs
daa
push
pop
dec
and
jl
push
xchg
into
cdq
sub
mov
mov
inc
repnz
xor
xchg
add
add
inc
sub
sub
popf
aas
xchg
sar
sub
(bad)
xchg
setno
sub
test
pop
je
pop
ins
dec
sti
xchg
sub
ins
jne
inc
push
lahf
(bad)
mov
pop
retf
xor
pushf
pop
pop
cmp
call
pop
xchg
cmp
push
push
fist
pusha
jae
stos
sub
bound
sbb
and
mov
sub
dec
push
jo
pop
adc
jle
ds
cmc
sti
and
inc
mov
ds
pop
mov
das
push
xchg
addr16
bound
sub
popa
xor
adc
add
add
inc
jecxz
cld
fs
push
outs
xchg
daa
imul
pop
mov
call
and
into
bound
push
xor
into
add
inc
add
pop
pop
xchg
scas
add
push
gs
push
mov
(bad)
cmp
mov
lods
cli
adc
mov
les
fild
sub
ss
cmp
mov
pop
in
movs
fwait
mov
inc
xor
mov
lahf
push
bound
dec
repz
popf
test
dec
mov
retf
out
inc
xor
mov
call
movs
jp
mov
jmp
adc
push
cmp
imul
retf
in
ss
je
jmp
inc
cs
in
push
dec
mov
push
xchg
cs
jle
add
xlat
pop
xchg
and
lock
fwait
inc
pop
loope
push
sub
adc
sbb
jb
jp
and
cli
mov
xchg
movs
jae
sbb
lods
and
xor
sub
push
push
and
ins
xor
mov
test
popf
cmps
hlt
(bad)
lds
dec
cmp
out
stos
gs
dec
jbe
mov
pop
pop
adc
jmp
or
imul
inc
aas
cmc
pop
inc
(bad)
sbb
fnsave
adc
sbb
in
cmc
cmp
mov
fwait
test
jnp
xor
jne
cmc
push
sub
fnstsw
mov
bound
mov
mov
ret
inc
scas
dec
aas
int
popf
mov
mov
push
mov
(bad)
fwait
int3
cmp
pop
fsub
push
mov
ds
xchg
mov
das
leave
fsub
daa
inc
dec
lods
push
loop
jle
popf
cli
xchg
dec
out
loopne
mov
fcom
and
(bad)
cdq
les
cmp
cdq
arpl
cmps
mov
psubusw
jbe
in
adc
pop
imul
mov
sbb
jo
push
jl
movs
es
xchg
loopne
shl
pop
lahf
retf
jbe
leave
movs
or
fisttp
hlt
jae
jae
mov
into
push
mov
xchg
test
mov
sub
and
ror
or
adc
add
std
mov
ficomp
push
daa
cld
scas
mov
mov
dec
add
xor
fwait
or
and
adc
dec
popf
cli
jne
xor
xchg
push
pop
retf
sbb
jmp
fs
ss
scas
xchg
jo
stos
dec
mov
adc
xchg
sar
jge
sbb
cmp
inc
fcmovu
arpl
fsubr
in
in
xchg
pop
(bad)
std
lahf
push
jl
mov
je
adc
or
xchg
imul
pop
mov
cwde
and
inc
adc
aam
xchg
xor
pusha
pop
ja
push
jne
stos
into
mov
cmp
and
and
rol
loop
jge
dec
sub
dec
aad
push
ds
sar
aam
xchg
lea
sub
mov
xchg
or
dec
mov
out
je
repz
inc
pop
xor
call
add
sbb
adc
or
or
fs
mov
shr
push
sbb
lahf
xchg
sub
jb
daa
outs
aas
ret
ins
rcr
lds
ins
xor
aaa
outs
inc
mov
fmul
imul
push
and
inc
sbb
pop
push
in
(bad)
(bad)
sbb
pop
jmp
inc
jp
dec
dec
xchg
mov
addr16
mov
lods
push
jnp
xchg
fs
dec
in
sbb
push
jb
lock
out
pop
in
mov
and
pop
push
or
mov
dec
cdq
int3
(bad)
mov
jno
add
and
scas
adc
dec
jns
or
fcmove
in
test
sub
mov
in
das
jg
xchg
out
push
lock
jmp
xor
repz
xlat
scas
nop
outs
or
ds
leave
xlat
adc
pop
jg
mov
cmp
jmp
xor
xor
pop
rol
stos
cmps
xor
outs
push
popf
out
cld
adc
xor
icebp
cmp
pop
xor
shr
or
push
push
outs
xlat
mov
adc
out
xchg
(bad)
xlat
imul
retf
mov
ret
mov
jecxz
adc
mov
sbb
in
add
xchg
sbb
push
adc
out
aaa
xchg
mov
jle
cs
and
push
add
dec
dec
fld
xor
push
jns
repnz
hlt
out
scas
pop
cmp
dec
loope
jg
daa
loop
dec
mov
mov
sub
repz
or
jae
fcom
pop
fcom
iret
adc
mov
xchg
mov
inc
mov
and
lock
and
pop
pop
sub
hlt
push
sbb
push
sbb
mov
ret
mov
gs
dec
mov
enter
stos
mov
sbb
push
adc
lahf
and
xlat
jmp
push
jmp
mov
ret
push
xor
dec
fist
or
(bad)
mov
pop
sbb
sbb
aad
rcr
scas
inc
hlt
movs
into
mov
sub
rol
das
mov
loop
cmp
in
lock
mov
retf
inc
mov
fs
sar
jmp
sbb
int3
inc
mov
les
(bad)
jmp
ja
mov
call
fsubr
stos
jg
sub
std
call
pop
(bad)
dec
mov
jb
mov
inc
cmp
scas
pop
sbb
(bad)
mov
shl
jnp
pop
jmp
xchg
fwait
pop
mov
push
jae
call
aam
sahf
out
arpl
sbb
movs
gs
ins
jge
cld
xor
gs
xlat
call
xchg
sub
inc
js
inc
push
push
or
les
scas
retf
pushf
pusha
adc
mov
add
mov
aas
or
test
dec
cmp
test
or
imul
adc
(bad)
addr16
les
adc
add
inc
scas
push
add
int
jg
add
xor
mov
dec
jb
add
in
dec
pop
jle
or
cwde
mov
dec
ins
rcl
dec
nop
gs
add
mov
test
stos
shl
call
mov
(bad)
je
in
jnp
out
push
(bad)
or
sub
mov
push
add
cmp
movs
pop
out
fcomi
jecxz
jg
popf
cmp
sbb
mov
lahf
and
xor
lods
or
jbe
out
movs
repz
iret
fs
cmp
clc
jg
mov
cmps
div
cdq
aaa
test
jg
fs
fisubr
retf
cmp
mov
xor
inc
sbb
pop
sub
test
push
push
test
test
aas
xchg
pop
xor
sbb
mov
or
pop
daa
mov
sub
mov
test
xlat
push
push
adc
xchg
(bad)
stos
push
std
fsub
scas
not
ds
adc
fsubr
xchg
retf
adc
xor
xchg
shr
pushf
cld
and
and
inc
cwde
stos
cmp
mov
mov
push
inc
leave
int3
inc
into
je
inc
cmp
retf
and
and
mov
push
out
inc
nop
ror
add
cmp
lea
rcr
xchg
test
mov
and
outs
lods
mov
pop
ins
push
jp
lock
int
jnp
pop
xchg
add
cs
add
sub
pop
jge
pop
stos
add
cmp
lods
stos
popa
cmp
(bad)
retf
fisub
mov
pop
mov
retf
es
cwde
fstp
imul
repnz
xor
jp
bnd
shl
stc
mov
in
repnz
pop
out
std
cmp
(bad)
je
mov
shr
pop
pop
retf
cmp
and
jecxz
mov
lock
icebp
loopne
inc
stos
repnz
out
xchg
pop
xor
mov
jne
dec
cwde
shl
pop
aaa
pusha
xor
jmp
int3
mov
push
cmp
loopne
arpl
into
movs
mov
dec
rcl
add
shl
popf
jbe
in
loopne
lahf
jae
rol
push
jp
xchg
cld
loop
jl
popf
jmp
adc
dec
mov
xchg
jne
cmp
dec
mov
push
popa
or
mov
xchg
int3
push
fcom
hlt
dec
adc
push
aam
mov
push
pop
or
mov
loopne
mov
clc
jl
xor
jmp
mov
stos
call
push
push
popf
push
retf
add
out
les
aad
xchg
retf
sbb
out
stc
dec
jne
mov
popa
in
clc
jbe
int
push
sbb
sub
jns
xchg
xor
aas
and
pusha
les
test
cmp
outs
not
retf
fnstsw
aam
daa
add
pop
xlat
inc
mul
int3
mov
mov
push
(bad)
das
inc
pop
mov
ficomp
imul
jmp
mov
cmp
(bad)
pushf
ins
push
in
add
ret
mov
or
rcl
in
sahf
mov
pop
add
jp
pop
enter
add
pop
sbb
mov
retf
jae
sbb
mov
fwait
ins
repz
loope
cmp
fdivp
fwait
mov
jae
rol
mov
in
jmp
mov
push
daa
sub
mov
adc
addr16
cs
dec
xor
xor
jp
pop
mov
test
sbb
call
cli
mov
adc
mov
mov
xchg
pop
scas
in
es
in
jns
and
gs
sbb
inc
(bad)
xlat
test
pop
mov
shl
test
pop
into
cli
fistp
adc
dec
mov
cdq
push
add
and
ss
mov
jmp
out
or
test
hlt
das
add
cmc
fmul
mov
popa
repnz
jmp
dec
imul
jmp
xor
fwait
xchg
inc
mov
(bad)
gs
mov
jmp
xor
xor
cmp
fwait
gs
aas
push
push
mov
jp
sub
xchg
sub
icebp
sar
leave
mov
inc
jecxz
imul
mov
mov
ret
adc
in
movs
mov
std
cmp
movs
shr
add
cwde
mov
lods
mov
cld
sbb
loop
mov
scas
int3
div
pop
and
push
hlt
mov
xor
(bad)
sub
aam
sti
add
daa
sbb
cmp
cwde
test
mov
xchg
cmps
jmp
(bad)
mov
inc
inc
or
mov
scas
or
and
adc
clc
mov
sar
inc
lar
mov
mov
ds
dec
inc
or
adc
add
out
pop
mov
jmp
lods
fidivr
lds
cmp
mov
xchg
jl
imul
aad
ja
loopne
movs
sbb
ret
dec
mov
int
push
mov
fadd
sub
push
mov
test
fild
mov
ss
mov
mov
nop
imul
loopne
mov
es
cmp
test
nop
push
cmp
cmp
mov
popf
or
(bad)
repz
jns
ins
jp
cwde
es
xor
hlt
inc
cmp
jmp
sbb
mov
or
jg
mov
push
stos
aad
push
ror
xchg
inc
aas
or
jno
fld
push
xor
add
or
scas
add
test
cmp
xchg
pop
rcr
xchg
fcomp
inc
daa
jo
xor
sub
cmps
and
jnp
outs
lods
scas
jbe
mov
mov
sub
popa
fdivrp
lods
into
sahf
xor
xchg
mov
adc
inc
mov
(bad)
out
push
sub
hlt
test
or
cmp
(bad)
les
sub
mov
or
cmps
mov
xor
xor
mov
inc
cmp
dec
xchg
movs
lods
adc
popa
test
jmp
loopne
dec
mov
ja
jg
jno
pop
sbb
jno
or
sbb
stos
outs
enter
adc
sub
mov
sbb
lock
inc
popa
inc
sub
dec
es
xchg
test
loopne
bound
sub
xchg
stos
jns
cmp
push
psrld
push
(bad)
jno
out
cmp
cmp
cmp
sbb
icebp
in
sub
push
or
push
cmps
les
scas
sub
je
jno
sbb
pop
sub
or
push
push
loop
add
push
jle
and
pop
ret
lahf
fs
cdq
xchg
xlat
test
ret
sbb
xchg
fs
pop
and
push
cdq
cli
lods
or
daa
popa
loop
and
scas
shl
inc
push
adc
les
inc
inc
mov
pop
lock
add
sti
repnz
imul
fstp
fs
stos
inc
jmp
test
rol
rcr
mov
into
rcr
je
fistp
adc
dec
fsub
cmp
ins
sub
pop
mov
out
and
cli
and
push
xchg
(bad)
ror
inc
(bad)
loop
sub
jmp
dec
dec
push
aam
dec
je
cmps
daa
pop
ret
and
cli
ds
imul
jns
popa
ror
xchg
dec
mov
les
pop
push
lea
lahf
mov
fdiv
jmp
mov
cmp
mov
es
jmp
sub
nop
add
outs
aas
pop
ds
aam
inc
(bad)
rcr
in
test
mov
cmc
add
pusha
adc
mov
leave
(bad)
push
std
sub
xor
and
ja
les
rcl
sbb
das
rcl
aas
push
ins
(bad)
cli
xlat
or
ins
(bad)
mov
add
retf
icebp
sbb
mov
add
jp
outs
mov
add
icebp
stos
fsub
in
pop
popf
mov
jecxz
jae
jl
push
or
(bad)
mov
push
(bad)
xchg
mov
mov
out
and
xor
hlt
dec
cmp
cs
inc
or
jecxz
hlt
and
mov
mov
add
sub
pop
mov
push
mov
cli
dec
add
dec
cmp
(bad)
(bad)
pop
jle
and
retf
and
ret
dec
hlt
jl
sub
pop
add
sbb
sbb
aad
pop
cdq
dec
jnp
ret
push
push
jbe
inc
movs
push
in
scas
es
imul
dec
mov
or
sbb
ret
into
sub
jmp
call
jns
sub
jnp
les
aam
bound
cmovo
sbb
xor
adc
bound
ins
clc
loope
dec
jno
xchg
or
cmp
add
pop
mov
loopne
aas
xchg
cmc
int3
out
adc
xor
iret
adc
or
loope
cmp
in
loope
sar
adc
iret
into
sub
nop
xchg
jo
xor
mov
inc
mov
cs
xor
in
scas
sub
add
push
push
adc
sti
push
sar
push
je
or
adc
scas
jle
ss
les
pop
sbb
dec
push
mov
jmp
sbb
cs
fcmovnu
call
loop
cdq
add
fistp
pop
call
jae
push
pop
xor
or
aas
mov
sbb
enter
daa
shl
adc
mov
aam
or
and
sub
rcl
aad
jmp
lea
outs
jnp
xchg
arpl
jmp
dec
pop
xchg
fsub
cmp
add
lock
and
lock
daa
nop
in
int3
mov
push
movs
sar
adc
jge
inc
xchg
pop
pop
and
movs
cmp
cmp
mov
shl
loope
xor
xor
sub
dec
inc
pusha
in
and
cmp
inc
std
mov
fidiv
and
cwde
inc
aaa
repz
lds
or
mov
push
ss
das
or
popf
dec
sub
sbb
cmp
sub
add
(bad)
adc
xor
cmp
in
std
mov
and
cmp
outs
nop
int
fucomi
xor
adc
cld
popa
test
fdivrp
aam
xchg
adc
mov
cmp
pop
adc
jmp
and
jg
xor
and
inc
imul
xor
out
mov
jmp
xchg
out
daa
jnp
fisubr
fld
or
ror
add
jno
fwait
mov
jne
mov
sub
mov
cwde
xor
jbe
aam
jo
xor
mov
jge
mov
push
enter
das
ret
cli
pop
test
xor
mov
pushf
xchg
inc
pop
shl
test
mov
scas
pop
or
push
mov
push
outs
stos
xchg
jno
ins
mov
int3
loop
stos
int3
data16
push
popa
bound
mov
cdq
jl
cwde
fstp
push
sub
dec
test
and
xchg
sub
ror
xor
shr
inc
cmp
lahf
push
call
jp
cld
test
mov
sar
out
outs
je
je
mov
or
iret
adc
mov
and
in
pop
add
sub
xchg
xor
ret
adc
add
dec
push
pop
jne
mov
lahf
fisubr
xchg
test
sbb
imul
xor
push
fs
jle
lock
pop
mov
push
inc
call
retf
out
(bad)
int
mov
aam
inc
ret
cmp
imul
popf
sbb
loope
adc
jo
sub
popf
adc
xor
test
sbb
fwait
repnz
das
jle
test
sar
and
xor
push
mov
pop
(bad)
jne
call
pushf
ret
fs
and
mov
shl
popf
mov
inc
pop
push
dec
push
mov
dec
mov
jb
jmp
dec
rcl
aam
test
fwait
xchg
cld
xor
aam
pushf
ret
jle
loope
inc
iret
clc
pop
jl
(bad)
loopne
jl
rcr
test
cmp
es
xor
inc
inc
pop
shl
sbb
xchg
xor
test
add
inc
cmp
sbb
jo
fild
cmp
pusha
ror
mov
jecxz
xchg
cmp
shl
jno
push
sub
in
xchg
cld
add
je
ret
test
xlat
cmc
cld
mov
icebp
mov
ja
in
scas
xor
mov
add
dec
es
push
(bad)
push
mov
enter
je
sub
outs
and
loopne
dec
adc
(bad)
push
mov
sub
sbb
leave
stc
int
and
sti
mov
cmps
or
imul
add
cmp
ds
outs
aad
pop
dec
neg
cmp
jmp
vmovq
pusha
push
sbb
int
rcr
lahf
sub
test
add
retf
jg
sti
jmp
retf
add
outs
stos
out
add
(bad)
call
nop
shl
xor
out
test
comiss
loop
out
les
es
stos
cld
add
adc
int3
inc
sub
push
jl
in
les
and
mov
xchg
lods
icebp
ins
aam
icebp
(bad)
mov
cmps
mov
bound
cmps
inc
mov
jo
pop
fs
jmp
cmps
shl
mov
sub
mov
nop
out
dec
adc
movs
test
mov
shr
aam
mov
cmps
movs
push
xchg
jns
sbb
ja
xor
sbb
icebp
mov
or
es
pop
inc
and
(bad)
xor
lds
push
and
xchg
mov
call
xor
mov
pop
call
popf
push
fisubr
push
adc
xchg
xlat
dec
mov
pop
xchg
pop
or
adc
cmps
call
lock
loopne
movs
jg
scas
test
cmc
mov
add
cmp
imul
jg
xchg
or
out
jmp
les
jo
pop
ss
jmp
jmp
(bad)
push
cmp
pop
xchg
cdq
push
mov
fnstcw
mov
cdq
xchg
cmp
adc
or
cmps
test
push
and
add
mov
out
movs
out
cwde
xor
cwde
sub
js
and
(bad)
out
inc
pop
mov
adc
ret
fisttp
leave
dec
inc
dec
outs
inc
bnd
xchg
jo
lock
inc
(bad)
in
ins
adc
mov
gs
fwait
pop
pushf
jle
scas
aaa
rcr
fld
repz
and
movs
lahf
mov
push
jmp
pop
xor
sub
sbb
cmps
ficom
adc
in
pop
leave
add
lahf
inc
jno
cmp
lods
and
aam
ja
pusha
imul
mov
in
xchg
cs
js
jl
dec
mov
in
xchg
lea
shl
jbe
mov
mov
pop
fbstp
mov
add
jmp
pushf
fisttp
sbb
push
ja
int
mov
mov
pop
dec
dec
sbb
test
rcr
cmp
jmp
sbb
and
imul
pop
loope
add
jno
nop
icebp
xchg
add
jne
stc
cld
mov
dec
sub
psubw
ja
mov
bnd
mov
bnd
inc
cli
mov
inc
mov
sbb
imul
mov
jg
cli
js
daa
jl
lods
arpl
mov
adc
in
fmul
mov
and
aam
push
dec
in
cmp
pop
pop
in
cmp
ret
and
out
xchg
repnz
add
add
inc
mov
push
fdivr
and
jmp
push
cmp
jp
(bad)
in
pop
xchg
sub
xchg
ja
lea
xor
inc
cmp
and
mov
add
jle
in
std
jae
ds
ret
cmp
cmp
sub
pop
and
in
push
mov
les
sub
adc
ins
cmp
stos
xchg
jmp
out
pop
cmps
mov
cmp
pop
add
jmp
punpckhdq
pop
push
mov
dec
sbb
aam
dec
dec
std
or
nop
retf
cs
dec
push
sahf
popf
std
jl
mov
push
push
push
fisub
pop
sub
stos
jbe
fwait
and
jo
pushf
ret
add
imul
out
jo
(bad)
mov
sbb
sahf
inc
test
fisubr
cli
or
in
pop
dec
cmc
cmp
icebp
mov
into
div
loopne
xor
xlat
repnz
fwait
jae
mov
mov
enter
cmp
jmp
stos
in
cmp
sbb
adc
mov
call
and
inc
ret
cmp
push
inc
xchg
stos
sbb
push
mov
lods
loopne
pop
sub
rcr
mov
jmp
out
sbb
xchg
aaa
add
fld
mov
dec
inc
adc
mov
repz
and
dec
je
sub
and
adc
fmul
cs
nop
int
xor
pop
mov
mov
pop
cld
iret
out
push
mov
sub
xor
push
adc
and
fisttp
or
push
pushf
cmps
or
sbb
pop
cmc
test
and
mov
test
rol
dec
fstp
(bad)
push
sub
ins
sbb
nop
jb
sbb
stos
cmp
jecxz
aam
pop
jmp
aad
add
add
mov
xor
or
out
mov
sahf
or
mov
xlat
(bad)
xlat
scas
sbb
jp
(bad)
cdq
cmp
jmp
test
add
adc
jns
ins
cmp
xor
jbe
xchg
pusha
cld
jo
push
cmp
scas
repnz
and
mov
out
xchg
pushf
int
cmp
sahf
mov
xchg
cs
fstp
into
mov
mov
fiadd
or
sub
or
(bad)
outs
cmp
nop
mov
pop
and
cld
icebp
jae
mov
je
cwde
xchg
jnp
adc
or
cmp
jmp
scas
(bad)
pop
ins
jle
mov
std
movs
xchg
sahf
ret
pop
jno
inc
in
sub
popa
jnp
in
addr16
xchg
xor
loope
cld
dec
cmp
cmps
cld
lea
xchg
clc
add
and
or
add
pop
inc
ins
cmp
mov
dec
adc
mov
push
iret
out
test
cmps
nop
dec
(bad)
test
aad
pop
int3
jl
jmp
repz
push
repz
cmc
push
aam
cmp
pop
fimul
leave
push
mov
lods
jg
xor
loopne
loop
and
iret
imul
rcl
xor
or
nop
add
test
cmp
sbb
add
aam
push
jle
out
shr
sti
and
xchg
adc
push
das
mov
(bad)
leave
cld
stos
sub
loope
test
mov
push
jne
sub
call
mov
in
xchg
inc
test
mov
pop
push
stc
or
mov
bound
jge
shl
outs
movs
dec
repnz
inc
mov
movs
jmp
loopne
pop
xchg
pop
test
pushf
mov
daa
and
rcr
cwde
inc
and
cmp
sub
imul
test
das
or
dec
xor
push
jnp
adc
leave
in
cmp
xchg
dec
leave
and
mov
fsub
xor
push
arpl
out
retf
add
shl
les
neg
sub
jb
mov
and
cdq
out
xchg
adc
mov
std
push
sub
mov
jne
jge
push
sti
retf
(bad)
fs
jmp
cmps
retf
(bad)
in
(bad)
or
pop
mov
jg
push
enter
sbb
outs
movs
rol
hlt
dec
mov
cmp
sub
xchg
pop
shl
sar
push
jp
ins
sti
cli
fimul
or
mov
dec
in
ds
js
sbb
push
cld
repnz
pop
cmp
(bad)
jo
cli
repnz
sahf
cmp
test
fldenv
ror
push
pop
pop
sub
mov
add
test
mov
and
aam
das
xor
inc
or
sbb
sbb
jae
sbb
in
mov
aad
ja
jl
aaa
sti
ins
sub
aam
and
rcl
loope
call
outs
(bad)
sbb
cli
out
cmp
adc
loope
or
(bad)
repz
push
sbb
cmps
pop
inc
call
sbb
movs
cmc
mul
cld
dec
jno
shl
mov
movs
xor
dec
jg
add
in
stos
inc
sub
push
and
pop
aad
dec
adc
inc
bound
test
mov
xchg
retf
retf
bound
cwde
push
sub
xor
loope
adc
and
cmp
mov
add
popf
jl
lea
shl
out
add
jecxz
jo
dec
mov
popa
xchg
or
bound
and
xchg
jmp
xchg
iret
adc
push
daa
cmps
stos
pop
add
add
lds
imul
out
rol
mov
and
call
sub
adc
gs
aam
xchg
movs
cwde
and
ret
addr16
arpl
mov
movs
push
int3
(bad)
add
dec
push
(bad)
lock
shl
xadd
xchg
cwde
rol
pop
mov
adc
int3
test
das
pop
cmp
xchg
sti
inc
mov
dec
in
xchg
cdq
dec
leave
movs
lods
xchg
and
(bad)
fdivr
les
push
cmp
pop
mov
pop
loope
sbb
dec
ficom
cli
and
and
xor
pop
div
jb
sbb
jge
xchg
(bad)
(bad)
or
popa
call
adc
outs
hlt
and
inc
out
int
push
sub
mov
mov
push
mov
xchg
shl
mov
loopne
(bad)
test
out
scas
and
dec
xchg
cwde
mov
lahf
addr16
mov
mov
push
inc
pop
pop
outs
xchg
ss
jg
sub
(bad)
gs
add
mov
mov
lods
xor
push
dec
aaa
dec
cmp
xor
pop
jnp
stos
cmp
jbe
push
xor
jle
dec
pause
es
aas
pushf
mov
popf
cmps
(bad)
fadd
daa
push
movs
aaa
mov
hlt
loop
imul
mov
aad
popf
pop
inc
xor
shl
or
repz
mov
aas
pop
sbb
ficomp
fwait
ja
int
jl
dec
xor
push
sub
jecxz
dec
pusha
add
ret
sbb
jp
add
retf
push
jmp
push
rcl
sub
rcr
in
popf
add
inc
sbb
ss
cmp
xor
xchg
cld
(bad)
iret
cwde
sbb
mov
into
and
xor
jb
add
push
or
jbe
xor
loopne
or
pop
out
push
cs
loopne
push
lock
jbe
sahf
sti
or
out
inc
inc
fisttp
xchg
sub
cmp
inc
jp
aaa
scas
pop
cmp
in
xor
inc
ds
push
inc
ds
dec
mov
popa
dec
push
fld
dec
adc
fstp
ins
clc
pop
pop
push
jle
mov
popf
xor
popa
lea
inc
xor
add
mov
dec
ins
test
sub
jmp
cmc
pushf
dec
out
repz
cmp
inc
arpl
fnstenv
jle
retf
arpl
ja
push
jne
nop
and
and
mov
jg
push
sbb
stc
add
scas
aaa
cmc
and
fnstsw
add
dec
(bad)
clc
push
and
fcmovu
stc
jb
push
jns
daa
pusha
jl
jnp
inc
aam
inc
nop
and
ja
mov
xor
out
loope
stc
jo
xchg
or
xchg
cld
pop
pusha
fld
and
aas
data16
scas
dec
mov
std
retf
mov
test
jb
mov
fstp
add
cmps
mov
enter
cs
pop
cs
mov
cmps
xchg
fimul
cmps
(bad)
xor
pushf
jo
mov
adc
push
les
mov
gs
sbb
sar
push
mov
jl
inc
aas
ja
(bad)
lds
out
sub
sub
cmps
cmps
fstp
mov
outs
jo
sahf
mov
(bad)
pop
(bad)
xchg
aaa
(bad)
sbb
or
add
(bad)
imul
cli
add
cmp
fidivr
or
leave
shl
push
pusha
mov
mov
in
call
xor
jbe
adc
jbe
sub
ins
ins
adc
enter
inc
sbb
inc
or
mov
sub
add
movs
ret
mov
out
mov
dec
xor
mov
ret
mov
adc
into
outs
and
inc
mov
cmps
jl
scas
imul
retf
outs
dec
inc
xchg
popf
and
enter
jmp
jnp
xchg
xor
mov
jmp
ret
aad
fist
push
adc
mov
aas
mov
xor
int3
ja
or
adc
adc
xchg
pop
vunpcklps
in
sbb
hlt
mov
call
loopne
outs
inc
sub
xchg
jae
pusha
push
mov
in
mov
cmc
or
sub
pop
les
mov
adc
add
xor
ds
clc
aad
shl
cmp
jns
outs
dec
or
fsubr
xor
sub
call
shr
lock
sub
adc
inc
mov
push
test
inc
rol
push
dec
mov
sahf
ds
cs
inc
sub
xor
xor
out
cli
or
push
jnp
jbe
movs
sahf
sbb
lods
cmp
dec
add
mov
push
cmp
outs
adc
cmps
cmp
enter
and
shl
call
leave
imul
inc
pop
jmp
xchg
int3
lea
sbb
fist
push
push
push
loopne
aad
bound
cld
lahf
iret
sub
shl
pop
pop
clc
jle
xor
je
mov
xchg
xchg
jne
outs
iret
push
xchg
sbb
(bad)
mov
or
leave
mov
xor
or
mov
ds
push
test
pop
ds
in
pop
(bad)
mov
push
inc
pop
gs
retf
(bad)
jno
xchg
addr16
fsub
jns
add
sub
jg
jne
push
pop
dec
jae
push
es
xor
mov
jp
dec
or
mov
and
xchg
sbb
sbb
stos
jmp
xchg
sti
jmp
dec
jg
ldmxcsr
fnstenv
shl
(bad)
jno
or
xchg
(bad)
mov
mov
in
mov
mov
mov
jg
mov
add
cmp
push
pusha
add
inc
mov
xchg
sub
sbb
in
inc
movs
ret
in
pop
adc
xchg
test
out
ror
cmc
(bad)
xchg
cmp
aam
cmps
jnp
test
cs
or
or
pop
lods
xchg
enter
xchg
xchg
scas
jp
dec
dec
jb
dec
mov
mov
jmp
and
loop
xchg
push
jns
loope
int3
add
inc
sub
jp
mov
jo
mov
ret
adc
dec
mov
xor
jge
mov
outs
pop
mov
das
and
pushf
(bad)
movs
jg
dec
or
in
ins
(bad)
ins
pop
xlat
fisub
pop
push
add
pop
dec
inc
push
cld
ja
sub
xor
jmp
xor
xchg
movs
out
and
inc
add
mov
pushf
cmp
pop
xchg
popf
pusha
add
jmp
mov
fisttp
mov
add
sub
add
xor
xor
ja
and
data16
mov
bound
in
inc
mov
jecxz
xchg
(bad)
leave
xchg
(bad)
pop
jmp
jnp
xchg
push
lock
stos
(bad)
(bad)
dec
rol
push
xor
lahf
jae
pop
push
pop
mov
addr16
loopne
pop
cmc
inc
xchg
lock
cdq
push
clc
xchg
add
xchg
and
mov
enter
jns
aam
jg
cmps
std
(bad)
es
xchg
daa
scas
pushf
(bad)
int3
test
dec
sbb
lea
jns
fs
sub
mov
mov
xchg
xchg
push
js
inc
add
test
pusha
cld
mov
adc
pop
mov
jp
retf
jl
add
dec
adc
cmp
cmp
ins
xchg
or
call
jbe
int
sub
adc
push
stos
cmps
dec
adc
xor
lahf
inc
in
push
adc
in
cmp
loop
sbb
add
test
iret
stos
scas
addr16
xor
push
aam
jo
shr
pop
xor
jns
add
mov
adc
push
mul
outs
inc
xor
lea
test
mov
jnp
cmps
movs
mov
imul
add
aad
push
jne
outs
sbb
xchg
xlat
lods
mov
pop
fidivr
sbb
xchg
mov
xor
pop
push
out
add
sbb
loop
iret
outs
mov
sub
push
xor
pushf
jmp
lahf
jmp
popa
retf
or
fst
fsubr
cmc
sub
mov
mov
loopne
les
mov
push
sbb
jge
std
mov
jo
mov
nop
ficomp
fidiv
or
jmp
mov
gs
ret
das
imul
and
stos
push
xor
mov
test
cmp
call
(bad)
mov
test
push
push
mov
in
ret
daa
retf
cmp
bound
push
(bad)
je
dec
mov
xor
jne
cmc
or
nop
mov
push
pop
sar
push
jne
mov
cwde
mov
push
jae
pop
pop
mov
fisttp
cwde
daa
dec
jl
mov
cmp
mov
xchg
and
fld
div
pop
dec
int3
mov
lods
std
(bad)
imul
(bad)
stc
mov
push
stos
stc
inc
xchg
inc
dec
aas
je
pop
aam
fwait
inc
mov
pushf
sbb
mov
sub
sbb
sub
mov
inc
cmc
cmp
xchg
loope
inc
int3
push
push
mov
shr
fnsave
adc
sar
lods
push
mov
test
frstor
loop
push
pop
std
push
out
out
jmp
cmp
outs
es
pop
cld
imul
(bad)
or
scas
or
ja
add
lahf
in
push
fs
dec
or
dec
mul
or
adc
xor
mov
jns
add
cmp
in
(bad)
in
pusha
mov
jmp
inc
adc
pop
les
(bad)
jecxz
jbe
pop
adc
repnz
pop
dec
int
cmc
call
in
enter
fistp
and
xor
lock
pop
pusha
pop
and
pusha
mov
(bad)
xor
scas
sbb
call
cmp
retf
jle
gs
mov
in
shr
cmovno
scas
mov
ret
dec
in
(bad)
or
sub
sahf
fisub
mov
mov
cmp
fwait
(bad)
jns
push
pop
jnp
aad
test
mov
dec
cld
imul
lahf
jno
push
ret
jb
(bad)
in
loop
(bad)
pusha
pop
fistp
push
cmp
shl
(bad)
jl
into
mov
push
(bad)
mov
sbb
clc
int
sti
jns
scas
push
sub
out
sub
push
sub
mov
sub
and
inc
mov
mov
xor
jge
into
jge
ins
fbld
jge
cmps
dec
or
out
lahf
iret
adc
mov
or
and
inc
push
jp
add
int3
jno
inc
repnz
xor
in
call
dec
mov
lock
inc
repnz
xchg
ss
icebp
inc
enter
mov
rol
mov
xor
push
test
xchg
cwde
retf
xchg
in
cmp
jb
test
sbb
aam
push
scas
cmc
dec
adc
or
pop
repz
dec
jno
sub
mov
sub
adc
enter
pop
adc
xor
sub
out
push
arpl
fild
call
or
les
add
call
fucomip
xchg
jo
sub
adc
jno
cmp
ret
sub
push
pusha
rcr
outs
addr16
movs
dec
mov
lock
aaa
ja
dec
and
int
pop
mov
push
imul
inc
test
and
xor
repz
retf
jmp
lds
or
pushf
mov
arpl
shl
mov
(bad)
std
mov
inc
sub
pop
ret
shr
into
jecxz
ds
fimul
dec
(bad)
(bad)
das
ficomp
and
mov
mov
test
mov
push
icebp
cmps
or
movs
into
mov
clc
sbb
shl
push
mov
stos
jno
cdq
nop
dec
lds
cmp
in
adc
mov
sbb
xchg
fld
mov
pop
push
cmp
and
std
push
aaa
push
sub
sub
imul
and
and
jne
jle
out
nop
mov
sub
inc
(bad)
jo
cmc
dec
fdivr
add
xor
xchg
adc
adc
rcr
out
addr16
push
fs
rol
mov
test
jmp
fstp
outs
jecxz
arpl
bound
xchg
sub
out
mov
(bad)
out
mov
xchg
add
dec
fs
cdq
cmp
shl
adc
stos
inc
xchg
adc
pmaddwd
outs
mov
(bad)
inc
mov
sub
lea
adc
mov
sbb
ret
addr16
and
dec
loop
in
(bad)
fcomp
mov
jl
bnd
bound
xor
sbb
pop
push
fsubrp
mov
pop
dec
mov
xor
rcr
pop
sbb
sbb
out
cmps
xor
xchg
xor
mov
in
fdivr
xor
rcl
js
sbb
jnp
loop
mov
dec
fstp
(bad)
loope
sbb
fimul
dec
xor
sub
cmp
retf
sub
nop
call
adc
sbb
std
stos
cwde
jbe
cld
xchg
dec
inc
in
xor
ret
imul
adc
imul
dec
xchg
xor
stos
xor
(bad)
lock
jge
xor
mov
jae
pusha
ds
xchg
dec
jns
dec
xchg
fisub
ds
sub
retf
rcl
sub
fstp
sti
xchg
retf
(bad)
mov
mov
push
mov
xchg
pop
ss
jp
mov
mov
pop
shl
sub
fisttp
mov
mov
push
xor
xchg
test
or
arpl
mov
les
pushf
sbb
mov
push
xchg
jl
fwait
cmp
pop
mov
push
out
hlt
sub
add
retf
icebp
hlt
sbb
retf
inc
adc
in
(bad)
out
popa
pop
test
and
and
and
push
std
ret
push
xor
xor
mov
xchg
cmp
inc
bound
pop
push
shl
xor
popf
lahf
mov
xchg
lds
jmp
imul
loop
dec
dec
jnp
xchg
sahf
fstp
dec
dec
loope
and
add
push
cwde
aad
loop
xor
dec
ror
dec
mov
das
sub
push
arpl
push
and
sar
xor
(bad)
push
cwde
xor
repnz
out
cmp
in
cmp
movs
mov
sbb
retf
(bad)
lock
mov
adc
inc
jnp
aaa
ins
test
scas
sti
dec
pop
int
mov
mov
retf
pop
aam
xrelease
icebp
xor
icebp
push
dec
mov
inc
dec
js
into
(bad)
std
cmps
sahf
inc
mov
sub
pop
adc
ficom
mov
and
ja
scas
push
xchg
repnz
fs
out
jne
add
jb
jg
xchg
popa
imul
stos
xor
aas
inc
in
fwait
push
lds
push
mov
lea
xor
jecxz
mov
(bad)
jge
xchg
inc
stc
sar
dec
push
cs
jns
scas
scas
inc
xchg
cwde
xchg
fsubp
xor
mov
les
and
dec
pop
mov
pusha
jecxz
aaa
jns
jp
inc
dec
or
cmp
out
fist
inc
jmp
dec
push
sub
ja
inc
and
xlat
sbb
xlat
in
lods
inc
out
inc
ror
jne
sahf
test
clc
pop
retf
jae
std
sar
or
dec
cwde
mov
imul
cmp
retf
leave
lods
pop
push
test
call
test
(bad)
movs
call
push
icebp
cmps
inc
adc
push
pop
cmp
jbe
sub
shl
xchg
mov
fwait
inc
mul
sub
loop
(bad)
into
mov
xor
add
mov
and
xlat
pop
pop
jmp
push
mov
fst
cwde
rol
test
shl
push
mov
mov
jbe
jb
mov
lahf
inc
cmp
pop
sub
cmp
dec
mov
mov
xor
daa
sbb
retf
inc
je
je
pusha
ja
sbb
pop
xor
lods
sbb
leave
aas
push
cdq
and
(bad)
aad
xchg
inc
sti
test
xchg
xor
cmp
repz
xlat
inc
test
mov
cmp
xor
mov
pop
gs
sub
pop
inc
add
out
sub
call
xor
out
add
out
push
les
mov
sti
stos
loopne
push
jns
int3
xor
xor
cmc
add
sbb
leave
(bad)
test
sub
push
je
mov
repz
adc
mov
int3
inc
test
sar
add
mov
mov
loope
and
inc
shl
icebp
aad
dec
fwait
ret
in
mov
ret
mov
pop
fwait
sbb
aaa
mov
aad
mov
fcmovb
add
mov
mov
mov
inc
xchg
test
arpl
push
aaa
xchg
cmp
or
inc
dec
xchg
xchg
push
dec
xchg
loope
add
fisubr
call
ret
inc
push
push
pop
pop
push
sub
mov
call
lods
aaa
pop
xchg
iret
movs
not
(bad)
xor
sbb
add
xchg
xchg
aad
inc
es
mov
inc
xor
push
cmp
dec
in
mov
mov
mov
or
gs
ins
jmp
xor
fdivr
mov
cmp
adc
pop
jne
(bad)
mov
shl
ror
fwait
lods
jno
scas
adc
loopne
jo
outs
mov
adc
mov
sbb
leave
dec
lock
fimul
fwait
push
imul
xor
enter
fdivp
mov
mov
push
fild
dec
lods
out
mov
(bad)
dec
fisttp
cmc
jns
mov
push
test
push
icebp
stos
sbb
mov
inc
cmp
mov
aad
aam
dec
xchg
or
pop
call
mov
mov
dec
sbb
sub
add
and
jmp
movs
mov
into
xchg
scas
mov
data16
fiadd
dec
pop
outs
test
xchg
cmp
out
xchg
nop
mov
push
imul
sbb
cwde
call
sar
fwait
cmp
jns
pop
or
add
test
into
imul
(bad)
outs
(bad)
out
push
push
and
sti
push
sbb
dec
pop
inc
loope
inc
int3
dec
inc
dec
loop
les
and
repnz
fnstsw
and
mov
inc
jmp
adc
aad
sub
repnz
jbe
aad
ror
push
pop
and
cmp
and
and
sar
push
or
and
mov
outs
dec
xchg
out
das
pop
or
mov
enter
outs
test
sub
jne
pop
adc
bsr
(bad)
nop
pop
ins
mov
test
and
ss
in
in
aam
jnp
mov
pop
push
jae
xor
sbb
xchg
adc
sbb
dec
dec
lods
ja
add
test
movs
or
cmps
outs
and
ret
and
mov
jecxz
repz
adc
out
xlat
cmp
sub
fcomp
aad
mov
inc
daa
js
(bad)
lock
add
shl
sar
fisub
fwait
ret
jno
add
ret
pop
and
ret
loope
gs
mov
(bad)
push
pusha
test
dec
cmp
imul
enter
stos
sbb
add
aas
cld
cli
mov
jo
aam
jo
mov
int3
clc
cmp
xchg
mov
rol
pop
(bad)
jns
pop
xchg
pop
jne
add
adc
fcmovne
push
jns
cmp
(bad)
jge
cmp
sbb
ja
adc
jae
mov
rcr
or
push
mov
mov
je
and
into
or
fmul
or
pop
test
jp
loop
push
stos
xchg
push
(bad)
(bad)
icebp
addr16
nop
je
xchg
and
cwde
scas
retfw
and
pushf
call
or
cdq
push
jne
stos
sub
repnz
aas
inc
sub
ja
cmp
or
out
jp
xchg
ficomp
test
loopne
pop
cwde
mov
iret
adc
xchg
inc
call
and
imul
inc
fstp
lods
mov
(bad)
sbb
(bad)
dec
scas
adc
aas
sub
sbb
adc
xor
push
sti
add
rcl
and
sub
pop
dec
int3
rol
add
inc
(bad)
jecxz
repnz
dec
adc
fnsave
sar
adc
adc
pop
add
or
sti
repz
mov
pop
into
mov
outs
call
mov
cmp
(bad)
sbb
in
ror
sbb
test
out
sub
xchg
repz
adc
in
(bad)
push
xchg
inc
jnp
fimul
jg
xchg
jp
hlt
add
jmp
popa
push
out
mov
in
fsub
nop
test
push
cmps
gs
adc
mov
imul
rol
fisub
inc
es
js
cmps
add
add
call
pusha
lds
cmp
inc
sbb
xchg
adc
cmp
and
das
pop
mov
xchg
js
sbb
(bad)
ficomp
sahf
hlt
adc
inc
inc
cmps
and
dec
mov
into
and
mov
inc
retf
shl
test
rcr
mov
iret
jp
cdq
mov
outs
loop
out
icebp
lds
mov
fstp
lods
(bad)
sbb
push
mov
das
push
iret
mov
mov
adc
gs
lds
mov
aaa
and
xchg
add
inc
jnp
add
or
push
xchg
leave
sub
xchg
pop
cmp
aaa
xchg
cmc
inc
jge
repnz
mov
es
or
cld
jb
jb
mov
adc
add
mov
imul
mov
retf
add
int
jbe
mov
scas
jl
pop
sbb
mov
nop
inc
loopne
inc
call
test
fmul
mov
stos
test
imul
push
add
cmps
(bad)
cmp
out
push
pop
loopne
(bad)
fisttp
leave
loopne
leave
ror
dec
sub
xor
jl
mov
jmp
push
pop
mov
mov
fld
inc
xor
repnz
or
mov
xor
pop
jmp
outs
loop
cld
cld
scas
jb
and
xchg
test
and
aam
add
or
inc
in
sbb
xor
icebp
fild
pusha
dec
cmps
fs
iret
push
xor
xlat
aad
inc
push
xchg
in
mov
aaa
mov
(bad)
mov
fdivr
sti
sbb
push
test
cwde
cmp
mov
fbstp
das
out
sbb
pushf
inc
inc
in
and
enter
and
sub
ins
sub
mov
out
and
adc
not
ds
and
retf
jo
and
sar
shl
mul
add
nop
cmp
xchg
outs
jae
xchg
nop
inc
push
sub
shl
ret
jnp
inc
pushf
fdiv
mov
aaa
mov
je
aad
ret
jmp
add
or
jno
adc
mov
mov
push
sahf
and
movs
jnp
cwde
aas
sbb
pop
push
rcr
and
jb
cmp
xchg
sub
bound
lahf
sub
lea
shl
inc
add
pop
mov
dec
into
fbstp
sar
push
ds
outs
mov
imul
pop
sbb
pop
xchg
xor
push
pop
push
int3
mov
jle
adc
pop
sub
pusha
or
cmp
add
out
fistp
xchg
add
int
sub
icebp
dec
ficom
adc
mov
or
xchg
out
add
aam
sbb
out
call
pushf
(bad)
cmp
rcl
add
int
nop
sub
out
das
inc
mov
aas
push
shl
iret
ficomp
dec
sub
test
stos
lods
mov
pop
push
inc
push
jo
pop
ret
lods
gs
sub
out
mov
mov
push
bound
inc
inc
adc
enter
(bad)
pusha
sbb
sub
mov
sahf
lods
add
xchg
dec
daa
push
pop
mov
xlat
cmps
call
mov
sub
out
(bad)
jg
push
xor
stos
frstor
sub
mov
jl
or
data16
adc
ja
mov
outs
call
adc
cli
adc
shld
xchg
into
cli
sub
dec
push
fisttp
mov
in
movs
xchg
pop
ds
pop
sti
sub
inc
push
mov
sti
cli
mov
push
jl
xor
push
jbe
mov
dec
adc
push
and
jmp
pcmpgtb
push
sub
(bad)
adc
ldmxcsr
jg
je
pop
jp
pop
cdq
or
call
add
adc
dec
dec
push
fsubr
and
pop
pop
out
out
es
xor
mov
or
xchg
cld
xor
push
push
ss
pop
dec
fcom
rcl
pop
stc
fst
es
ja
mov
inc
mov
pop
and
arpl
(bad)
mov
xchg
mov
pop
sub
jmp
fisttp
cdq
pop
inc
sti
add
inc
fdiv
adc
sub
test
pusha
add
and
js
repz
retf
(bad)
adc
jne
mov
mov
or
iret
pop
pop
and
rol
imul
xchg
or
jle
pop
adc
push
ja
adc
leave
das
jo
adc
cmp
aad
or
enter
and
pop
add
ror
push
mov
les
inc
xchg
push
jne
push
cmps
mov
xchg
gs
push
push
mov
and
dec
scas
cmc
push
cdq
fwait
dec
ins
inc
fiadd
fwait
add
jae
xor
xchg
(bad)
xchg
(bad)
imul
adc
lea
push
mov
frstor
mov
neg
test
div
fiadd
or
out
and
repnz
mov
xchg
(bad)
cmp
dec
jne
adc
retf
inc
dec
mov
lock
jno
inc
iret
dec
pop
fimul
ja
and
mov
pop
mov
push
cmc
fiadd
mov
jg
and
jo
data16
jae
cmps
mov
sbb
push
mov
ror
test
xchg
jmp
stos
ins
mov
mov
pop
call
imul
pop
mov
fidiv
gs
sub
jecxz
add
jge
mov
mov
mov
xchg
imul
cmp
iret
(bad)
stc
mov
inc
fstp
fmul
mov
sti
cmovb
jne
xchg
ffree
clc
fmulp
inc
xlat
fcmovu
retf
push
test
or
loop
hlt
mov
sbb
clc
shl
mov
or
cmp
ret
mov
mov
dec
xor
push
mov
hlt
sub
in
int
cmp
adc
and
cmps
loop
icebp
add
jp
adc
adc
push
jmp
and
inc
mov
mov
lds
or
loope
fs
aam
cdq
ss
jno
adc
and
lods
mov
sbb
pop
fwait
sub
pop
out
packuswb
fsubrp
add
jmp
dec
inc
fistp
sbb
gs
jecxz
add
sbb
call
test
xchg
xchg
inc
call
test
jg
rol
pop
xor
mov
mov
stos
sub
adc
pop
dec
push
pop
aas
std
xchg
push
cs
push
fwait
div
pop
sub
fcomp
xchg
aam
mov
cmc
dec
je
dec
mov
push
sub
fs
repz
fsub
sub
push
(bad)
push
sub
xchg
loop
add
popf
inc
call
(bad)
sub
ds
pop
add
int
retf
clc
jb
and
(bad)
aad
inc
pop
nop
popa
(bad)
jmp
fld
das
lock
push
(bad)
cld
mov
cdq
out
add
mov
jl
ret
imul
inc
shl
fbstp
scas
dec
cmp
movs
outs
sbb
rcl
dec
mov
xchg
mov
push
pop
mov
test
sbb
movs
or
mov
enter
or
mov
pop
sub
sbb
gs
xor
test
and
outs
xchg
ret
xchg
leave
les
enter
pusha
mov
inc
xchg
iret
mov
pop
pop
push
(bad)
rol
cmp
mov
mov
daa
aas
(bad)
jp
jae
push
jno
push
mov
mov
adc
pop
xchg
loope
pop
sysret
jno
jl
cwde
cmp
sbb
(bad)
or
sbb
data16
xchg
add
sub
xor
mov
cwde
inc
out
inc
inc
daa
sbb
(bad)
add
inc
xor
jns
jg
jnp
cmp
mov
loope
xchg
adc
lea
pop
pop
(bad)
repz
pop
jmp
xchg
add
dec
push
xlat
jbe
pushf
mov
pop
mov
adc
and
call
test
pop
mov
pop
add
retf
aad
int3
(bad)
push
in
and
icebp
jmp
mov
div
lods
sar
call
jbe
add
cmc
cmp
or
inc
out
cmps
mov
jmp
xchg
(bad)
jle
mov
test
popf
retf
stos
xchg
mov
push
pop
mov
cmp
imul
scas
mov
stc
inc
movs
cmps
cmps
push
xor
pop
sbb
retf
jp
(bad)
push
je
sub
push
loop
ret
mov
jecxz
cmp
cli
mov
stos
dec
mov
pop
mov
adc
push
mov
push
jg
adc
push
stc
xor
lds
and
mov
mov
int3
int3
pop
cmp
push
or
jb
or
lock
jmp
in
outs
adc
pop
out
dec
jne
not
cmps
pop
int
xlat
retf
xsaveopt
imul
test
xchg
mov
fidivr
pop
lahf
retf
xor
mov
ss
out
cmp
cdq
out
fst
test
(bad)
cmp
mov
inc
jp
(bad)
out
loop
out
sbb
ror
mov
inc
movs
loopne
std
pop
push
popa
dec
hlt
xor
cvtps2pi
pop
into
add
stc
pop
mov
test
and
push
fisubr
cmp
popf
mov
adc
loop
adc
loop
imul
dec
cmp
mov
out
or
inc
cmp
call
repnz
jl
sbb
loop
sub
xchg
mov
push
in
arpl
inc
sub
mov
fs
pop
(bad)
jmp
mov
lock
loop
push
and
jns
mov
jno
(bad)
dec
mov
add
lods
pop
sbb
mov
int3
dec
xchg
adc
in
sbb
xlat
(bad)
jecxz
add
(bad)
fdivr
and
sbb
adc
jo
inc
mov
cli
mov
stos
add
dec
fs
add
sub
out
int3
fcomp
outs
or
push
js
sar
xchg
cs
xor
sub
out
clc
out
outs
loope
les
bound
push
mov
sahf
gs
les
scas
push
dec
add
(bad)
sbb
dec
imul
jmp
or
fst
adc
dec
sub
mov
and
sbb
out
mov
jns
ficomp
(bad)
cmp
pop
jmp
mov
push
cmp
imul
cmp
pop
aam
inc
pop
mov
xchg
jg
mov
movs
pushf
daa
cmovbe
popa
test
stos
cmp
sbb
sbb
ins
sub
cld
mov
scas
xchg
(bad)
lahf
outs
jecxz
pusha
test
outs
cmps
cmp
movs
aad
pusha
xchg
mov
dec
(bad)
clc
out
sahf
mov
cs
scas
cmp
int3
(bad)
fimul
lahf
adc
jl
push
js
inc
and
fucompp
cs
cwde
push
and
in
stc
lahf
int
fsub
(bad)
xor
loope
lea
repz
pop
pop
movs
stc
stc
or
dec
movs
jns
jnp
pusha
fwait
mov
(bad)
mov
rcr
xor
mov
and
movs
and
and
stos
iret
mov
fldenv
and
cmc
sbb
xchg
call
mov
sahf
xlat
imul
cld
xor
mov
mov
jl
lods
adc
or
mov
cmp
fild
jl
fsubp
hlt
jecxz
jmp
mov
inc
std
mov
jb
mov
mov
sbb
pop
les
xchg
nop
cdq
mul
sbb
xchg
xchg
push
pop
repnz
pusha
movs
xchg
cmc
mov
popa
test
(bad)
lods
push
in
xchg
cmp
test
cmp
mov
jmp
aam
lock
mov
xchg
imul
aad
movs
dec
int
xor
jbe
iret
scas
icebp
test
sbb
dec
or
arpl
pop
outs
add
ds
fisub
stos
push
das
cmp
dec
imul
push
call
and
retf
movzx
movs
arpl
ins
sbb
pop
sar
das
clc
mov
das
cs
test
iret
out
pop
jl
push
inc
into
shl
cmps
jmp
shl
test
mov
rol
sti
scas
in
inc
adc
lahf
int3
aam
mov
inc
out
retf
jmp
leave
data16
sbb
call
lahf
bound
cwde
int3
mov
adc
push
test
push
test
xchg
cwde
out
add
xor
ja
mov
scas
sub
xchg
(bad)
jle
xchg
icebp
cmp
dec
movs
push
mov
test
mov
mov
sbb
jmp
jmp
cld
xchg
jge
push
pushf
jp
rcl
push
dec
xchg
test
cmp
lea
cmp
jne
mov
and
cmp
xchg
popa
add
call
and
fwait
jnp
dec
pop
jge
and
fidiv
and
add
lock
in
push
fisub
cs
adc
or
std
sbb
stc
mov
mov
std
xchg
cld
xlat
pusha
fs
xor
push
mov
push
scas
leave
clc
cmp
push
aad
data16
jg
retf
and
sbb
dec
cmps
test
ficom
or
aam
xor
enter
call
xor
mov
popf
xor
mov
mov
adc
xchg
xor
int3
xchg
xchg
cmp
and
jge
in
fcomp
outs
dec
fwait
dec
push
inc
mov
inc
test
ror
in
gs
cmps
cmp
mov
jae
jmp
mov
call
mov
jne
mov
xor
adc
je
mov
dec
xor
out
je
fmul
push
popf
lea
cmp
fdiv
in
popf
mov
hlt
jg
dec
mov
lahf
retf
dec
loopne
nop
jp
pop
int3
jbe
sub
cld
push
jle
add
popf
mov
xchg
daa
or
stc
mov
ret
jmp
and
or
jne
inc
sub
rol
fisttp
xchg
in
pop
retf
fbstp
jp
(bad)
xchg
add
aas
push
inc
or
push
cmp
push
mov
adc
loopne
mov
repnz
and
test
pop
inc
mov
push
fdivr
xlat
dec
lahf
es
cmp
repnz
jno
mov
mov
loope
adc
ja
outs
or
fmul
add
push
cld
cmp
fidivr
push
add
adc
or
push
jp
sahf
xchg
das
sbb
bound
fadd
xor
jecxz
int
ins
push
sbb
xchg
and
push
sub
stos
fistp
mov
adc
mov
shr
inc
push
idiv
dec
lds
fisubr
in
push
gs
clc
pop
cs
mov
or
fnstenv
jmp
fwait
bound
mov
das
push
push
jne
(bad)
scas
dec
lods
fs
mov
or
jo
adc
clc
sub
je
push
and
mov
and
and
xor
or
push
(bad)
mov
lods
(bad)
loopne
out
push
jb
lahf
sti
cmp
pop
jge
push
xor
vmwrite
neg
jmp
mov
dec
inc
xchg
data16
or
add
jo
rcr
es
daa
stos
mov
(bad)
es
mov
fwait
push
les
out
pop
int3
aas
xlat
enter
(bad)
sbb
in
xor
ret
jmp
pop
dec
pop
nop
out
mov
xchg
jle
mov
cmc
in
or
sub
or
xor
jno
and
cmp
pop
ja
cdq
cmp
imul
inc
das
icebp
ror
dec
es
inc
inc
adc
cmp
shl
mov
ins
mov
push
(bad)
mov
repnz
push
xchg
test
push
dec
pop
xor
xor
pop
loop
aas
pop
mov
aad
mov
jno
stc
mov
pop
mov
xlat
jp
sbb
pop
arpl
push
inc
add
push
jae
sub
test
cmp
adc
push
sub
push
pop
or
sbb
xchg
or
or
cwde
in
std
mov
daa
inc
or
out
xchg
add
xchg
jl
sub
ins
push
inc
adc
enter
addr16
ret
mov
inc
stos
push
pushf
push
pop
push
stos
sub
call
movs
stc
jbe
mov
push
cmp
ror
fidivr
es
ins
adc
dec
call
inc
pop
jbe
mov
xor
cmp
cmc
fcomp
arpl
(bad)
pusha
cmps
push
cs
cmp
or
and
jp
test
repz
lods
mov
(bad)
retf
and
retf
and
out
inc
ds
inc
push
inc
cmps
das
pop
shl
sbb
push
inc
add
xchg
lds
pop
loop
adc
hlt
cmp
out
mov
aas
mov
mov
hlt
jmp
bnd
test
pop
cmps
sti
adc
and
mov
in
pop
push
fs
cmc
ins
jb
and
cwde
stc
out
mov
or
push
push
mov
data16
movs
jmp
jmp
(bad)
repz
or
sbb
jne
xlat
sbb
dec
sub
jg
push
mov
push
aam
adc
pusha
push
ficomp
dec
jge
bound
rcl
jo
mov
mov
sbb
push
dec
sub
mov
mov
mov
mov
mov
rcr
ja
fstp
cmp
xor
stc
loope
es
cmp
imul
sbb
push
std
fiadd
sbb
dec
pop
jecxz
or
iret
mov
jge
lahf
adc
pop
(bad)
xor
mov
sahf
leave
cwde
cmc
fsubp
(bad)
rol
pop
add
xchg
lods
shl
mov
pop
ficomp
aam
jmp
mov
add
jmp
mov
mov
pop
cmp
pop
jmp
jne
pop
loopne
and
mov
cmc
daa
ins
dec
es
sbb
mov
jns
aam
dec
mov
adc
push
loop
call
jb
mov
push
fnstsw
sub
dec
(bad)
push
jae
or
pop
pop
and
push
add
lahf
pop
je
cmp
fwait
int
push
int
dec
(bad)
sub
sbb
lods
sahf
(bad)
loope
dec
lods
add
add
and
movs
lds
imul
adc
lea
cwde
mov
pop
cmp
pcmpgtb
xchg
ins
fs
cmp
mov
mov
out
and
jnp
adc
mov
and
ins
les
js
jo
cmp
jo
dec
add
pop
int
ret
call
mov
pop
cmp
mul
repz
fist
xchg
int
popa
xchg
mov
pop
pop
ds
iret
fsubr
inc
stos
jno
sub
hlt
inc
inc
jmp
frstor
mov
adc
mov
jmp
(bad)
adc
aas
les
mov
pop
pop
xchg
mov
rol
ret
sub
inc
sbb
cdq
popa
fstp
hlt
or
cmp
and
iret
or
rcr
sbb
inc
sbb
push
mov
out
push
sub
dec
mov
test
test
add
push
movs
in
fidiv
and
sbb
adc
ficomp
rol
pop
faddp
and
repnz
out
adc
sub
fadd
dec
fmulp
cmps
sbb
popf
(bad)
adc
cmp
xlat
jne
retf
ins
shr
sti
outs
jbe
xchg
jp
in
ins
je
rol
mov
int
sbb
outs
ret
inc
sahf
enter
fmul
mov
sahf
iret
mov
mov
lea
xor
and
xchg
mov
repz
or
movs
mov
movs
loop
pop
or
shl
xchg
sti
outs
xchg
push
cwde
add
stos
in
fs
and
and
mov
mov
(bad)
dec
test
hlt
fidivr
test
jl
fnsave
adc
mov
pop
and
add
test
push
inc
fdiv
mov
icebp
push
repz
pop
mov
mov
mov
sub
inc
imul
push
mov
jg
add
int3
adc
cmp
test
sbb
in
sbb
into
repnz
sub
add
inc
push
bound
out
cs
push
adc
add
mov
jno
fmul
shr
sar
mov
dec
outs
fidiv
into
inc
mov
sbb
mov
test
stos
jne
sub
sub
stos
dec
mov
adc
jecxz
add
repz
lods
(bad)
sub
push
inc
push
mov
mov
push
xchg
js
jp
add
daa
sub
xchg
cmp
dec
xchg
xor
cld
icebp
cld
movs
push
pop
push
adc
stos
aas
inc
clc
stos
cs
out
jmp
pushf
and
and
or
jmp
sub
sbb
and
sub
divps
in
adc
jbe
add
fcmovbe
shl
mov
fmul
pop
movs
movs
das
sbb
fnstcw
jp
sbb
dec
mov
mov
mov
repz
inc
or
inc
or
mov
scas
daa
and
cmps
lds
adc
aam
add
push
and
aam
cs
add
sbb
mov
jl
scas
mov
sbb
push
ds
aaa
jge
mov
stc
xchg
push
(bad)
popf
(bad)
ins
aaa
mov
xchg
js
xor
mov
movs
jno
add
xchg
inc
outs
retf
pop
bound
popa
in
lock
jle
imul
mov
movs
dec
imul
je
adc
pop
dec
ins
and
jmp
icebp
je
out
push
jle
push
sbb
sbb
data16
xchg
outs
js
cmps
inc
je
cdq
xchg
sbb
pusha
mov
sti
cdq
les
pop
push
mov
mov
jp
cmc
aaa
mov
pop
sub
fistp
inc
mov
les
lods
retf
push
adc
fcmovnbe
cs
cmp
das
sti
and
add
jb
cdq
xchg
sbb
nop
dec
out
inc
cwde
jmp
sbb
and
jle
dec
fidivr
add
dec
call
(bad)
mov
iret
or
sbb
mov
pop
das
stos
and
jecxz
int3
movs
fnstsw
or
aad
or
jmp
out
mov
ja
mov
sbb
cmp
outs
pop
clc
or
pop
push
pop
and
jp
mov
jnp
xchg
mov
shl
inc
dec
adc
icebp
jecxz
pop
mov
ins
sar
fst
jmp
add
je
mov
jno
pop
pop
sbb
adc
mov
in
es
cmp
cmp
cmp
out
aam
mov
xor
push
push
xchg
xor
sahf
jbe
inc
cmp
pop
inc
or
cwde
fldcw
xchg
iret
pushf
mov
add
xchg
lahf
adc
out
int
je
inc
and
je
xor
imul
inc
gs
adc
push
cmps
pusha
mov
daa
stos
jle
iret
daa
hlt
repz
push
jle
xor
aad
out
jb
adc
(bad)
xchg
hlt
dec
sbb
jecxz
ds
leave
sar
add
inc
xor
mov
idiv
sub
mov
push
jl
rol
inc
dec
cli
mov
jmp
ss
dec
xchg
fmul
nop
pop
mov
stos
dec
jne
jp
inc
push
fs
hlt
stos
cmps
xchg
(bad)
aad
test
retf
mov
add
xchg
add
cmps
jecxz
mov
xor
or
pop
fldenv
pushf
adc
add
stos
or
jb
popa
bound
dec
jg
jno
xchg
test
jno
add
sti
mov
iret
les
rcr
ss
add
jne
push
shl
mov
and
and
xor
push
mov
aam
ficomp
js
(bad)
enter
ficom
fcmove
jbe
int
int3
jp
sahf
in
or
xchg
fmul
lods
pop
jl
(bad)
hlt
rcr
xchg
adc
test
sub
rcl
inc
push
arpl
adc
pop
xor
(bad)
loope
push
mov
inc
add
sub
adc
add
push
push
dec
adc
dec
mov
test
inc
ret
dec
mov
jge
(bad)
jg
mov
jns
int
ficomp
jg
jmp
pop
shl
add
jmp
aad
leave
mov
sbb
xlat
pmulhw
push
bnd
jmp
test
cmp
ins
leave
xor
dec
mov
push
clc
mov
adc
fisub
scas
adc
mov
sbb
scas
push
push
sysexit
pop
and
sub
sub
aas
inc
dec
int3
test
pop
sub
jne
pop
shl
pusha
int3
pop
mov
sbb
push
mov
popa
lock
pop
mov
sbb
cmps
push
mov
inc
push
mov
test
xchg
scas
jecxz
rcr
xor
push
and
clc
dec
pop
clc
out
ret
jp
mov
loope
mov
repnz
aam
mov
or
fisttp
xlat
sub
jb
in
fmul
stos
aaa
adc
dec
pop
pop
dec
dec
xor
dec
sbb
cdq
jo
hlt
in
adc
inc
fidiv
dec
arpl
add
add
loope
cmp
adc
aad
out
xchg
add
ret
or
dec
mov
mov
dec
jo
jp
test
adc
dec
or
lock
aad
cdq
shr
fadd
ja
adc
jns
inc
outs
inc
lock
add
movs
xchg
pop
sbb
mov
jge
mov
scas
mov
or
dec
or
sahf
out
sub
cmc
add
xchg
jle
ins
jae
mov
loopne
out
xchg
vpcmpgtb
push
sub
das
mov
pop
(bad)
out
out
add
lahf
(bad)
imul
mov
ja
bound
cmc
jb
int3
or
lahf
inc
gs
sub
pop
ret
mov
popa
cld
dec
mov
out
fisubr
mov
rcl
pushf
jl
cmps
repnz
rol
lods
outs
mov
iret
int
ret
fsub
push
lahf
daa
div
retf
jecxz
adc
repnz
mov
mov
out
mov
bound
sbb
loopne
jo
mov
stc
push
cmps
shr
scas
mov
les
fsub
popa
jbe
das
lds
push
push
pusha
mov
dec
push
bound
call
jmp
in
aaa
push
add
bound
push
das
add
add
call
js
pop
test
inc
in
pop
push
jl
cwde
mov
lock
cmp
scas
rol
sbb
cs
das
push
pop
mov
mov
gs
jmp
lods
xchg
or
(bad)
mov
pushf
int3
pop
xor
inc
dec
pushf
test
xchg
dec
mov
push
ret
mov
add
cmp
rcr
jmp
mov
outs
cli
into
and
enter
retf
jg
and
lods
add
adc
xchg
addr16
sub
sar
mov
addr16
mov
loop
pop
cmps
push
test
mov
lea
add
out
pop
cmp
mov
(bad)
jno
mov
xor
pop
shl
cmps
lea
ficomp
rcr
ror
ds
mov
xchg
ja
sub
mov
xor
fild
fld
xchg
and
aaa
sub
push
push
sub
hlt
and
add
das
push
inc
add
cs
std
mov
call
out
add
nop
xor
jb
lods
sub
mov
xor
mov
jno
movs
frstor
xor
add
enter
adc
mov
dec
out
outs
movs
or
in
add
push
aaa
(bad)
in
mov
push
sar
fsub
rcl
mov
sub
inc
push
or
xchg
movs
xor
inc
gs
into
in
ins
dec
nop
lea
lock
cmps
cmp
daa
sub
mov
call
mov
inc
mov
test
sub
in
out
sbb
dec
mov
mov
nop
imul
adc
aaa
inc
adc
int3
xchg
sub
jecxz
int
sar
jp
push
cmp
sbb
shl
ret
xchg
repz
fnsave
loop
pop
mov
xchg
fiadd
loope
aad
iret
std
push
xlat
jo
fs
movs
xlat
ret
jo
dec
aaa
push
jbe
cmp
aam
loope
fs
stos
mov
dec
sub
push
pushf
repnz
stos
jnp
out
xchg
push
xchg
in
and
das
mov
xchg
xchg
sub
int3
jl
iret
int
sub
sbb
test
add
adc
pop
cwde
stos
mov
jbe
xchg
out
fsin
lds
test
mov
add
sahf
push
inc
mov
add
test
ret
dec
out
call
clc
pop
cwde
xchg
push
inc
xchg
outs
push
inc
mov
in
rcr
test
sub
fsubrp
sub
pop
push
jmp
out
cmp
push
stos
xlat
xchg
ins
or
movs
movs
adc
loope
sti
inc
lahf
mov
ficomp
cdq
out
inc
aaa
addr16
cdq
lods
(bad)
dec
xlat
aas
add
mov
push
aaa
mov
add
push
push
fcomip
fwait
popa
cli
sub
and
jae
imul
pop
pop
lods
ins
dec
mov
sbb
inc
pop
cmp
(bad)
lods
xor
test
rcr
adc
sbb
in
retf
add
test
daa
and
jnp
or
fiadd
mov
xlat
(bad)
loop
inc
xor
pop
ss
enter
(bad)
mov
fstp
stos
sbb
rcr
shl
leave
xchg
dec
shl
daa
mov
jns
leave
ret
mov
call
imul
(bad)
div
test
mov
add
push
and
xor
pop
mov
pop
out
scas
mov
jns
fistp
xchg
push
or
scas
mov
mov
and
xchg
jae
inc
test
out
inc
nop
rol
xor
push
push
dec
adc
mov
add
mov
sbb
add
pop
mov
sbb
mov
sub
and
data16
test
sub
mov
(bad)
(bad)
jecxz
shl
dec
sub
mov
and
cmp
sub
dec
je
lahf
xchg
not
cmp
lock
and
jo
and
push
rcr
ins
clc
sbb
(bad)
je
jle
xchg
xor
pop
jmp
add
stc
sbb
mov
fisttp
dec
cld
add
fs
mov
xchg
and
jae
mov
pop
and
iret
or
daa
and
mov
push
popa
aaa
jmp
lahf
jne
test
int
inc
add
or
xchg
xchg
and
mov
mov
mov
adc
mov
mov
jg
(bad)
daa
xchg
add
shr
lods
setl
mov
cmc
and
mov
or
push
cmp
fcomp
imul
js
cwde
dec
xor
sar
jg
xchg
stos
pop
ins
or
je
pop
dec
int3
cwde
pop
(bad)
push
push
outs
or
jecxz
nop
xlat
scas
ss
(bad)
mov
xor
or
xchg
in
into
mov
sbb
pop
cmp
adc
mov
outs
sbb
pop
push
sbb
rol
movs
aad
mov
mov
addr16
inc
fwait
mov
rcl
outs
pop
je
neg
rcr
addr16
or
dec
inc
sbb
dec
push
or
mov
dec
aas
(bad)
fadd
push
lods
rcr
scas
jns
xchg
push
push
int3
mov
mov
cmc
jae
add
push
mov
mov
ret
xchg
nop
fdiv
cli
in
xchg
fwait
dec
rcl
imul
sbb
or
add
jge
mov
inc
jl
lods
pop
iret
mul
dec
dec
enter
xlat
push
xchg
lods
and
icebp
dec
out
jmp
jb
bound
call
cmps
out
ror
push
xor
or
add
push
stos
and
add
cdq
mov
(bad)
lods
rcr
fwait
mov
mov
pop
fidivr
pop
add
int
lods
xchg
in
jle
push
ret
lock
and
xchg
jbe
cwde
inc
push
push
movs
mov
xchg
lods
mov
and
outs
int
(bad)
mov
outs
inc
std
cld
es
stos
jp
push
jl
div
gs
les
data16
ins
or
std
xchg
outs
jecxz
dec
xchg
xchg
lock
add
jb
sub
enter
push
mov
mov
inc
xor
pop
inc
nop
loope
ror
imul
test
xor
out
pop
call
jne
retf
pop
nop
xchg
mov
xchg
pop
and
cwde
or
iret
xchg
lds
adc
or
mov
sub
into
cmc
out
jl
mov
mov
aaa
into
addr16
sbb
and
iret
push
push
pop
jno
ficom
ds
jmp
pop
cmp
cli
and
pop
jg
das
dec
adc
das
arpl
adc
push
lds
xor
jle
cmp
cmp
popa
push
mov
daa
jo
call
xchg
add
jnp
rcr
pop
(bad)
lods
rcr
mov
push
es
sub
bound
icebp
mov
cmp
jle
pop
int3
stos
out
out
daa
mov
adc
js
clc
clc
cmps
mov
cmp
mov
xor
pop
xchg
push
cmp
into
jmp
fsqrt
mov
inc
stos
shl
jmp
pusha
pop
mov
sub
aaa
jb
cld
lea
neg
ret
jmp
mov
pop
sub
or
jl
and
mov
sbb
ffreep
jns
pop
(bad)
pop
inc
xchg
pusha
ds
mov
js
pop
sbb
shr
imul
inc
jecxz
mov
call
cs
jmp
or
ins
lods
jp
iret
test
sub
push
dec
sub
push
push
push
stc
mov
adc
(bad)
fbld
and
or
mov
hlt
cmp
and
sub
test
ins
jmp
sbb
fisubr
or
push
icebp
jp
repnz
xchg
into
loopne
test
dec
repz
inc
aam
xchg
cdq
sbb
sub
push
in
dec
(bad)
mov
mov
mov
and
loopne
xchg
call
cli
dec
scas
add
movs
or
in
jmp
adc
retf
mov
push
aad
imul
sbb
add
fmul
push
xor
mov
or
in
sub
(bad)
xor
out
icebp
mov
push
adc
push
stc
inc
and
hlt
test
idiv
sbb
inc
cmp
pushf
jecxz
pop
sub
mov
stos
push
out
mov
inc
loop
mov
leave
mov
jle
push
jmp
mov
not
inc
sbb
sar
inc
dec
jg
(bad)
mov
add
jge
retf
sub
popa
and
call
inc
or
jbe
push
push
mov
sub
adc
inc
(bad)
dec
pusha
cmc
data16
jne
jo
mov
lea
movs
jne
nop
jmp
pop
cs
sub
ins
jnp
sub
enter
scas
retf
cmp
enter
xchg
dec
ror
das
add
adc
pop
adc
test
popf
jp
mov
sub
retf
mov
ds
xor
adc
cmp
stc
sti
adc
retf
add
or
cmp
aad
mov
lock
fadd
xchg
data16
pop
jle
jo
cmps
aaa
pop
sbb
(bad)
shl
mov
pop
das
lods
or
ins
pusha
std
pop
scas
mov
retf
div
inc
jge
push
xor
push
xlat
test
mov
dec
push
mov
jnp
imul
cs
push
mov
push
retf
inc
jns
fwait
push
iret
(bad)
adc
sub
rcr
std
popf
retf
lock
out
mov
adc
cdq
inc
push
fisubr
out
fst
and
icebp
cmp
fstp
inc
sbb
inc
imul
sbb
add
rcr
aam
cmp
ins
add
shl
into
rcl
push
jmp
xchg
dec
sbb
aad
adc
test
rcl
dec
sbb
sbb
jo
pop
fcom
mov
das
push
cmps
push
mov
push
pop
loopne
jne
shl
push
xchg
dec
ja
and
sti
and
sbb
sbb
aad
pop
popa
daa
daa
out
mov
stc
mov
daa
outs
loope
push
pop
sub
dec
mov
or
addr16
or
fisttp
iret
(bad)
out
jae
mov
add
dec
stc
loopne
popf
jb
ror
shr
and
mov
adc
push
aad
mov
pop
shl
out
mov
jae
(bad)
popa
lock
pop
mov
jb
shl
mov
cs
rcl
jno
mov
pushf
mov
call
push
mov
out
sbb
dec
xlat
aam
lea
push
jle
mov
bound
rcl
push
mov
jne
push
inc
dec
cmc
pusha
and
lea
sub
xchg
push
dec
hlt
push
mov
retf
inc
adc
push
push
sbb
mov
hlt
jne
mov
xchg
loopne
iret
sbb
sub
loop
out
jge
mov
mov
addr16
mov
add
mov
push
lods
sub
pop
es
xchg
jl
sti
push
xchg
mov
jnp
popa
or
sub
mov
pushf
add
add
push
scas
cmp
sub
push
and
jmp
dec
arpl
loop
pop
cmp
xlat
and
rcr
pop
cmps
(bad)
sub
mov
test
rcl
test
mov
outs
cmp
inc
scas
and
and
adc
add
(bad)
cmp
(bad)
push
jmp
(bad)
ret
(bad)
xchg
and
inc
pop
mov
mov
cmp
push
pop
and
jg
jne
add
call
cdq
adc
and
aam
inc
sahf
adc
or
mov
cmp
sub
inc
test
iret
mov
inc
jae
pop
dec
jnp
ret
xchg
aaa
int3
not
mov
aaa
or
xchg
clc
lock
cmp
sar
aam
shr
sub
std
cmp
cwde
jle
daa
movs
neg
jno
pop
out
inc
es
mov
in
push
sbb
fcom
add
test
adc
cmp
fs
test
xor
call
inc
mov
aam
bound
and
cmps
in
gs
sub
pop
nop
adc
ret
nop
test
dec
or
shl
fidiv
add
sub
or
mov
xchg
and
jl
rcl
cld
addr16
loope
lds
xor
cdq
mov
sub
jge
cmp
rcl
scas
xchg
stos
pop
sti
push
xchg
pop
cmp
test
pop
dec
or
mov
adc
pop
xchg
xor
and
popa
popf
int
(bad)
fsubr
bound
xor
rcl
ret
mov
adc
fwait
sub
cmp
mov
mov
inc
mov
cmp
ins
mov
inc
inc
mov
and
aas
cmp
outs
or
xor
sbb
jmp
inc
cmp
dec
dec
push
mov
(bad)
cmp
aam
mov
shl
dec
je
inc
ffreep
mov
pop
and
xor
cmps
or
add
ins
inc
jno
add
or
adc
int3
mov
xchg
or
ds
cmp
push
adc
sbb
xor
adc
ins
jmp
cmp
cld
xchg
movs
in
addr16
mov
mov
inc
add
retf
sub
jmp
push
imul
out
leave
mov
mov
hlt
push
in
push
xlat
leave
or
jecxz
jne
cmp
fwait
pop
jno
test
mov
mov
sbb
out
aad
xlat
icebp
clc
pop
in
jae
push
dec
or
inc
ror
pop
jb
add
sti
sub
or
sub
xor
(bad)
imul
lea
push
mov
xlat
out
pop
adc
jno
add
int3
push
into
push
call
bound
ds
adc
pop
stos
add
mov
dec
stos
(bad)
mov
call
retf
jg
sub
shl
add
outs
cli
push
repnz
xchg
jg
xchg
cwde
inc
sub
loop
dec
push
xor
adc
mov
mov
retf
push
inc
shl
outs
sbb
scas
inc
cmp
mov
(bad)
out
lods
scas
pop
push
and
imul
les
shr
and
cmc
xchg
retf
cwde
das
push
(bad)
sbb
xor
aaa
xor
in
sub
ret
outs
stos
dec
push
imul
mov
push
aad
imul
cwde
(bad)
mov
repnz
jecxz
push
and
and
mov
jmp
mov
pop
and
rcl
mov
pop
sar
sub
jb
rol
push
(bad)
lea
retf
mov
iret
xor
dec
rol
repnz
loope
jae
push
sar
jb
jae
pop
mov
scas
sti
and
jno
les
cmp
popf
adc
daa
adc
test
cmp
scas
inc
loope
pushf
xchg
jno
test
sahf
xor
inc
rcl
sbb
and
loop
mov
xchg
hlt
leave
or
int
push
add
pushf
cmp
or
(bad)
shl
addr16
xchg
in
bound
push
jg
cmp
mov
mov
shl
call
pop
mov
pop
shr
adc
leave
adc
jg
sub
mov
or
cmp
dec
stos
outs
(bad)
nop
inc
retf
mov
addr16
sub
xchg
add
in
sub
lahf
sub
sub
dec
jno
xlat
push
pop
dec
retf
mov
or
xchg
cmc
sub
xchg
xchg
test
sti
jmp
inc
mov
rcr
sub
call
jo
xchg
push
ss
outs
aam
xchg
or
mov
dec
test
int
push
loop
cmp
jbe
int
pop
cmps
mov
sbb
xchg
neg
subps
iret
sub
fcomp
test
jg
sub
popf
das
popa
mov
hlt
ret
nop
xchg
push
int
pop
cdq
and
test
adc
iret
loope
mov
aaa
dec
movs
push
inc
sub
add
lea
pop
and
mov
sbb
sbb
and
pop
pusha
sub
mov
ficomp
lds
adc
jp
sub
or
jp
sub
mov
or
push
shr
gs
(bad)
dec
jmp
xchg
sahf
loop
gs
inc
arpl
bound
int
add
pop
xor
hlt
loop
pop
pop
xchg
leave
into
jns
fmul
pushf
cli
mov
sub
lds
movs
adc
push
or
cmp
in
mov
dec
add
mov
out
cmps
mov
and
adc
xlat
aad
push
jae
and
jbe
mov
or
sub
popa
or
test
pop
fs
jmp
loopne
xchg
lahf
xchg
or
mov
loopne
adc
pop
pop
xchg
into
daa
cmp
xor
jcxz
or
add
mov
xor
(bad)
(bad)
jle
mov
dec
sub
dec
fdiv
cdq
jne
or
cmp
pusha
out
pushf
and
push
jle
(bad)
in
jo
inc
mov
sti
mov
cmp
mov
bound
retf
sub
jmp
sub
cmp
into
in
or
jmp
sub
pop
ret
pop
fnsave
jecxz
retf
dec
or
mov
cmc
ss
lock
retf
and
test
or
pop
adc
je
imul
cmp
loop
test
outs
clc
xor
push
sbb
out
mov
and
das
daa
ret
aad
mov
dec
scas
xchg
cdq
into
nop
xchg
rol
int3
(bad)
cmp
imul
dec
mov
jne
cmp
mov
lods
stos
add
fdiv
xor
(bad)
xor
je
lea
rcr
lds
jns
retf
cmp
inc
repz
dec
mov
xchg
in
and
mov
add
aam
jge
out
jbe
push
enter
push
jne
jg
lea
aas
mov
add
popa
and
sub
int
(bad)
fidivr
jp
xor
out
mov
les
or
mov
test
test
repz
fcmovnb
pop
sbb
jbe
jmp
retf
dec
lods
call
inc
cmp
mov
jge
push
push
xchg
mov
push
push
push
enter
add
jbe
inc
call
jbe
dec
repnz
sub
jecxz
pop
fs
mov
push
mov
inc
dec
cmp
add
enter
inc
out
les
in
adc
sub
stos
mov
push
xor
js
push
cmp
and
scas
pop
sar
xor
dec
push
scas
push
fld
test
add
dec
shr
mov
xor
test
xchg
mov
mov
aaa
imul
aam
neg
sahf
(bad)
(bad)
sub
pop
stos
xchg
and
out
or
dec
in
stc
outs
fwait
mov
cmps
mov
ins
inc
in
mov
out
jo
out
cdq
dec
adc
mov
push
jmp
cli
inc
or
pop
popf
mov
mov
test
push
xor
xlat
push
punpckhwd
xor
ins
jge
daa
cmp
repnz
das
pushf
inc
fisttp
or
nop
stos
lods
enter
std
pop
repnz
pop
add
pop
or
js
(bad)
ins
mov
stos
mov
(bad)
sti
sbb
and
or
dec
(bad)
mov
fsubr
push
test
sub
dec
adc
or
inc
daa
mov
push
push
mov
sar
jl
mul
cmps
sbb
pop
adc
inc
in
add
jb
cmp
lahf
inc
xchg
mov
scas
cmp
mov
fcom
mov
jg
mov
or
xchg
mov
add
dec
xchg
stc
into
and
lods
push
mov
mov
in
test
sub
fsubr
ret
jecxz
pop
inc
(bad)
mov
jge
pop
and
cmp
pop
in
jnp
adc
call
xchg
xchg
sbb
(bad)
cs
jle
out
mov
cmps
mov
push
js
adc
(bad)
pop
movs
push
jns
jne
call
sbb
mov
jne
xor
cmp
inc
cld
adc
in
inc
daa
lods
jl
xor
scas
sbb
(bad)
jg
or
mov
jnp
pop
sbb
les
dec
test
xchg
rol
push
(bad)
pop
cwde
jne
adc
xchg
pop
xchg
xor
adc
push
lea
xchg
cmp
add
sbb
mov
cmp
add
push
test
imul
rsm
in
inc
cmp
sti
cmps
sar
cmp
add
cdq
push
mov
adc
cmc
pop
enter
sbb
cmp
adc
mov
retf
mov
bound
push
sbb
movs
cs
push
out
mov
mov
mov
pop
mov
mov
cmc
in
aad
and
xchg
adc
outs
cmp
loopne
mov
sti
mov
lea
cmps
push
jbe
aaa
fisubr
mov
out
pop
data16
push
leave
imul
std
test
shl
cmp
lea
mov
and
add
mov
scas
pop
(bad)
mov
in
xor
out
jp
mul
pop
rcr
fist
fistp
pop
call
shr
retf
aas
xor
dec
sahf
cmp
js
cwde
aas
ja
sub
cli
pop
cli
movs
add
std
aaa
add
push
pop
in
inc
push
adc
jns
in
add
test
and
sahf
rcr
fsub
mov
pop
daa
jl
ret
mov
jp
int
js
jle
push
fisubr
daa
pushf
out
pop
jbe
or
add
add
movs
cmps
sbb
(bad)
fs
adc
mov
in
or
push
dec
xchg
sti
out
or
or
mov
mov
hlt
movs
xchg
stc
adc
mov
pop
loope
daa
fdiv
movs
sbb
enter
sub
lahf
add
jge
int
jns
mov
int
mov
pop
ret
pop
out
add
cmp
nop
cs
sbb
add
mov
jns
out
pushf
inc
test
pushf
jecxz
call
aam
add
mov
mov
pop
inc
cli
mov
or
outs
mov
ret
mov
inc
push
dec
les
shr
enter
pop
(bad)
popf
add
popa
(bad)
jmp
ss
mov
pop
es
inc
and
iret
pop
mov
jbe
pop
dec
and
or
call
push
push
js
jno
in
ins
inc
jl
fdiv
sbb
mov
xchg
mov
outs
pop
test
into
lods
div
mov
cli
sub
jo
xor
(bad)
mov
neg
call
scas
sbb
pop
nop
cmp
inc
aad
xor
sbb
add
mov
cmc
and
push
jmp
sub
scas
jp
fstp
ret
bound
stos
add
and
xchg
jecxz
or
add
sbb
ret
imul
jae
sbb
out
inc
cs
xchg
dec
andps
jns
pop
push
or
fsub
aad
(bad)
addr16
out
pop
sub
dec
ss
retf
stc
add
aad
lock
ficomp
popf
out
sub
add
or
ja
mul
dec
out
add
shl
sub
stos
add
stc
mov
xchg
sbb
(bad)
mov
dec
in
outs
mov
(bad)
pop
sbb
jno
nop
in
arpl
rol
test
xlat
lock
div
gs
imul
xor
add
xchg
ficom
je
(bad)
push
pushf
bound
(bad)
push
xor
outs
mov
enter
xor
stos
and
arpl
das
mov
add
imul
dec
mov
push
add
cdq
(bad)
imul
in
je
jp
cmp
pushf
and
jl
pop
push
mov
out
sub
leave
pop
add
(bad)
daa
pushf
and
add
test
jns
cmp
mov
pusha
jns
fucom
outs
dec
call
ror
arpl
gs
mov
loopne
pop
loope
pop
enter
stos
cmc
mov
(bad)
add
cmp
rcr
sbb
dec
aad
jmp
cld
push
sub
arpl
mov
iret
iret
outs
(bad)
sbb
in
sbb
xor
aas
dec
jle
mov
ins
jge
(bad)
jne
sbb
nop
call
outs
jo
sbb
data16
lods
pop
dec
push
das
sbb
xor
imul
push
sub
sbb
cs
push
mov
fidivr
pop
dec
add
xchg
int3
dec
aam
xchg
inc
and
cmp
xchg
xchg
mov
ins
in
nop
mov
cld
test
js
mov
inc
push
push
push
out
data16
(bad)
stc
aas
stos
cmp
pop
pop
pop
push
sbb
push
out
out
fwait
pop
dec
lods
adc
aam
sahf
cs
dec
xchg
lock
ins
dec
mov
inc
jle
out
cmp
aad
in
mov
(bad)
div
(bad)
in
cmp
mov
clc
ss
arpl
ret
je
or
mov
xor
fcomp
mov
mov
icebp
(bad)
or
jns
mov
pop
call
sbb
or
loop
adc
mov
mov
mov
inc
cld
mov
out
enter
xchg
movs
ds
movs
or
mov
fmul
int
int
push
aad
leave
fcom
pop
lahf
repz
mov
mov
in
call
stos
lahf
leave
add
sbb
jns
test
or
pop
jmp
inc
mov
inc
call
xchg
cwde
and
pop
cmp
cmp
inc
out
push
xor
jg
jmp
cli
jae
in
pushf
mov
mov
inc
mov
mov
cmp
jmp
dec
or
daa
test
adc
hlt
sub
lock
popa
dec
inc
cmp
or
daa
jae
ins
sub
jle
mov
jmp
xchg
fs
lods
scas
sbb
sub
dec
dec
pop
ins
pop
mov
out
mov
dec
dec
mov
push
arpl
pusha
add
rcr
stc
iret
(bad)
xchg
pop
leave
dec
test
mov
daa
jnp
ja
jbe
jle
jbe
ror
xor
(bad)
mov
sahf
jno
sub
movs
fwait
movs
jo
mov
xchg
xor
mov
inc
pop
(bad)
leave
iret
mov
pop
ja
mov
mov
int
add
push
or
cmp
mov
mov
sbb
mov
test
adc
cmp
or
fs
cmc
data16
or
retf
mov
or
enter
loope
inc
rcl
dec
ja
(bad)
pushf
mov
pop
mov
mov
or
sub
fwait
dec
cmps
inc
inc
ret
sbb
jmp
push
sub
pop
jmp
popf
rcl
pop
jp
pop
pop
inc
and
inc
(bad)
push
push
std
xlat
lea
gs
push
pop
fistp
imul
push
stos
jle
cs
(bad)
fstp
mov
movs
dec
push
cli
cli
add
fild
fidivr
adc
and
push
jmp
hlt
xor
and
lahf
dec
xlat
or
enter
or
push
sub
fidiv
mov
daa
ret
ins
stc
jo
dec
test
retf
add
retf
mov
(bad)
je
push
xchg
adc
je
mov
fbld
(bad)
ficom
xor
mov
pop
mov
add
sub
jmp
mov
and
sar
iret
scas
sub
cmp
inc
mov
push
bound
(bad)
or
jmp
mov
scas
mov
mov
test
(bad)
les
mov
dec
(bad)
mov
jno
loope
sar
xchg
or
cdq
out
or
lods
aaa
xor
xchg
aaa
in
sbb
push
lea
fwait
and
xchg
pxor
call
dec
arpl
enter
mov
inc
jbe
cmp
pop
sbb
shl
fs
jne
dec
jle
jmp
scas
stos
or
xor
ss
call
fadd
cmp
fwait
scas
jne
imul
dec
add
inc
in
jne
scas
int
mov
push
dec
push
cmp
scas
jns
mov
(bad)
mov
xor
mov
pusha
mov
sub
in
loop
mov
das
push
mov
adc
adc
enter
jle
repz
bound
inc
stc
inc
xlat
jbe
mov
pushf
mul
popa
push
add
sbb
sub
mov
push
jne
add
pushf
inc
jo
popa
cmps
mov
std
loop
nop
fimul
sar
mov
or
les
mov
sub
sbb
outs
outs
pusha
enter
(bad)
imul
sbb
inc
retf
add
mov
dec
jno
inc
les
retf
cmp
sub
ret
dec
in
ja
pop
repz
push
(bad)
add
rcr
je
push
dec
dec
or
sbb
call
or
fwait
lods
dec
shl
fbld
sbb
adc
pop
lods
pop
popf
out
cmp
and
and
cmps
mov
xchg
aaa
cwde
jae
not
fucomp
jmp
js
dec
scas
mov
xor
adc
jg
sub
scas
pop
cmp
sub
and
or
mov
inc
jae
and
fwait
xor
mov
fld
lods
cmc
outs
ss
imul
mov
out
or
adc
xchg
bound
jns
push
dec
daa
adc
mov
pop
cld
xchg
xchg
loop
movs
fsub
inc
pop
mov
sbb
fisubr
push
push
xchg
shl
aam
in
sti
sub
mov
aas
test
push
out
mov
pop
es
or
sar
lods
or
in
inc
dec
dec
mov
and
or
jge
aam
int3
mov
mov
push
leave
imul
into
add
cmp
mov
mov
pop
lea
dec
cmps
ds
and
dec
push
sbb
or
les
push
cmps
push
xchg
pop
sti
pop
sub
stc
pop
xchg
sub
inc
push
cmp
jge
aaa
xchg
inc
and
push
cmps
mov
sahf
cdq
pop
and
pop
imul
or
jbe
repnz
shr
mov
(bad)
fidiv
cmc
fwait
pop
jno
jge
test
and
call
mov
daa
xchg
js
xchg
jp
jo
ret
mov
xchg
out
pop
xchg
je
int
(bad)
bound
cdq
push
aam
adc
jmp
rcr
aaa
ins
sub
xchg
inc
lods
adc
sbb
push
inc
push
or
arpl
loope
fisttp
adc
sbb
lock
(bad)
cmp
push
sbb
mov
lods
push
fcomip
and
add
enter
push
aam
jne
daa
cmps
inc
shl
dec
jp
mov
adc
int3
lods
dec
das
int3
adc
pop
add
sub
pop
stos
mov
cmp
(bad)
dec
and
inc
dec
(bad)
aas
movs
int
mov
(bad)
(bad)
clc
bound
bsr
and
lods
cmp
mov
scas
or
fistp
xor
retf
fwait
jns
dec
xor
repz
adc
nop
mov
into
cmp
adc
adc
ins
fmul
mov
inc
clc
sbb
dec
les
out
outs
xor
cmp
adc
aaa
inc
inc
fdiv
jmp
xlat
mov
into
pusha
gs
add
out
xchg
(bad)
xlat
cmp
ins
les
xor
test
scas
push
sub
mov
mov
xor
outs
movs
adc
stos
sub
call
int
xor
mov
mov
jae
std
inc
mov
pop
cmp
xchg
push
dec
jno
xchg
int3
(bad)
jecxz
adc
cmp
sbb
ins
dec
xchg
jb
out
mov
popa
mov
loopne
jmp
xchg
iret
lods
mov
add
movs
xor
xlat
in
push
mov
sti
dec
pop
cld
sbb
mov
adc
pop
xor
push
or
jnp
lods
xor
das
dec
add
mov
mov
sub
pop
stos
lds
cdq
xchg
pop
jl
jmp
cmp
outs
mov
mov
xchg
mov
sahf
fidiv
rcl
and
inc
push
xchg
sbb
imul
retf
push
int
jmp
mov
scas
xchg
iret
push
mov
cdq
dec
inc
sar
in
cmp
repnz
out
or
sub
mov
mov
xor
mov
hlt
mov
push
sbb
cmps
cmp
lea
add
call
mov
xchg
push
in
sbb
cmp
cmp
mov
sti
movs
adc
inc
out
inc
pop
call
das
sbb
xchg
out
js
push
rol
cmp
ss
push
pop
mov
retf
cmp
xor
add
mov
fcom
out
pop
add
lods
sahf
(bad)
inc
lock
xchg
jl
and
inc
cmc
outs
mov
adc
jnp
mov
dec
cmp
ss
retf
add
mov
lods
je
idiv
rcr
in
int3
pushf
enter
adc
cmp
push
repnz
pop
sub
adc
js
mov
xchg
mul
add
mul
dec
stc
movs
cmp
(bad)
pop
mov
(bad)
out
sbb
popf
lock
cmp
dec
enter
scas
inc
and
cmc
xor
xor
in
pop
jne
pop
inc
push
ins
(bad)
(bad)
out
clc
pushf
push
and
dec
jae
sbb
mov
sbb
cmp
adc
retf
jnp
ins
push
jmp
add
das
mov
xor
sub
dec
or
data16
imul
mov
int3
in
mov
sahf
add
mov
test
add
outs
mov
in
bnd
std
(bad)
fmul
sub
sub
push
xchg
push
rcl
xchg
or
test
push
rcr
es
cmps
stos
inc
int
pop
test
sar
pop
outs
or
adc
push
cmp
bound
push
repz
cli
leave
or
inc
push
fsubrp
fsubr
jp
jle
ror
mov
or
imul
aas
ss
and
mov
jno
dec
or
add
push
ja
push
dec
adc
cdq
in
popa
mov
jecxz
sar
leave
(bad)
jae
or
int
(bad)
sbb
push
fs
js
xor
es
fldenv
fiadd
mov
inc
stos
cmp
lds
clc
data16
and
dec
mov
pop
inc
jae
fisubr
les
xchg
out
daa
pop
mov
pop
cmp
or
push
adc
xchg
adc
push
adc
jb
jo
idiv
shr
sbb
jp
daa
jns
ror
repnz
int3
add
mov
push
(bad)
fnsave
add
test
je
shl
repz
add
jle
ret
pop
std
mov
js
cmp
mov
fst
mov
add
retf
je
ja
and
mov
or
jo
outs
and
and
test
in
mov
cmp
jl
push
das
mov
xchg
stos
dec
hlt
dec
shr
xor
gs
push
xchg
lock
das
leave
adc
retf
and
mov
mov
data16
ds
xor
mov
test
push
stos
dec
add
pop
fsub
test
jge
add
fs
mov
xor
mov
add
cmps
or
fdiv
jb
xchg
mov
jae
xchg
jo
push
xor
mov
cmp
fsubrp
cs
inc
pop
xchg
imul
in
mov
mov
mov
lea
mov
or
push
and
sbb
test
pmuludq
shr
mov
add
push
jl
mov
ja
pop
(bad)
das
leave
pop
add
push
cdq
xor
or
je
push
inc
popf
sub
cmp
iret
fdivr
int
and
jnp
jo
mov
sub
or
aad
sub
nop
pop
es
push
call
icebp
mov
mov
cmc
(bad)
icebp
in
sbb
ja
xor
test
ficom
pop
xchg
sti
dec
sbb
mov
test
test
xor
fmul
imul
jge
push
and
loop
mov
fadd
sbb
xor
mov
mov
loopne
mov
mov
and
(bad)
dec
jbe
ja
jo
mov
pop
inc
cmp
push
je
jle
out
cs
mov
iret
inc
mov
mov
int3
push
pop
or
adc
fdiv
or
movs
pop
(bad)
xor
out
jnp
inc
(bad)
(bad)
and
and
cli
jmp
not
pushf
mov
sub
sbb
inc
test
xor
cs
pushf
out
pop
push
jl
inc
mov
clc
into
fisub
xchg
or
icebp
in
std
sub
rcr
aaa
std
push
enter
sub
pop
call
inc
pop
mov
adc
sbb
and
dec
and
xchg
lds
cdq
scas
daa
setl
add
sbb
push
xor
jg
push
mov
inc
jle
loopne
mov
sti
dec
imul
mov
xlat
xchg
sbb
xchg
jmp
xor
and
mov
ret
mov
(bad)
and
pop
inc
xor
in
call
aad
int
xchg
sbb
pop
mov
mov
cli
xchg
pand
xchg
test
xchg
dec
mov
sub
mov
outs
mov
lods
pop
cmp
int3
je
loope
std
add
mov
lods
test
int3
push
aad
cmp
jns
inc
(bad)
push
jg
xor
fisub
xchg
jnp
push
cmp
scas
mov
xor
xor
into
loope
push
and
push
mov
mov
jne
out
in
test
push
dec
cmp
ds
call
(bad)
adc
jnp
fisubr
fdiv
lea
pop
cmps
sub
sbb
xchg
dec
(bad)
outs
and
in
ins
add
sbb
aam
imul
call
lock
ja
adc
jno
mov
dec
rol
ds
push
pop
cmp
jbe
sbb
ds
xchg
in
je
mov
dec
test
pop
rcl
ret
in
mov
xchg
pop
(bad)
cmp
jo
dec
test
popa
or
lahf
in
cmp
gs
mov
pop
mov
xor
lods
jno
cmp
lock
add
push
nop
sbb
xchg
fidiv
cli
int
mov
cmp
shr
enter
dec
add
es
aas
stos
mov
aaa
sub
and
jae
fucomip
scas
sbb
lahf
pushf
imul
add
popf
and
inc
std
(bad)
cmp
adc
inc
cmp
clc
out
ds
mov
movs
bound
mov
(bad)
mov
and
cmp
adc
inc
(bad)
add
or
ins
cmc
ss
mov
mov
ins
adc
(bad)
or
and
push
add
push
lods
xor
pop
fimul
retf
or
xor
pop
pop
hlt
pushf
nop
push
and
data16
push
movs
fild
push
cmps
jnp
xor
test
out
cmp
xor
push
ins
cdq
mov
in
push
xchg
test
xchg
mov
cs
aaa
jbe
mov
jle
scas
jmp
add
gs
adc
jmp
adc
pushf
pop
in
rcl
shl
jbe
sbb
movs
fsubr
sbb
sub
adc
cmps
lods
sub
adc
pop
retf
fist
(bad)
shl
adc
loop
sysret
mov
mov
sbb
mul
js
out
mov
leave
ds
arpl
je
icebp
lods
loope
retf
mov
aad
lock
in
jmp
sti
cld
and
inc
adc
in
test
cmp
sar
xchg
es
sub
cmp
ret
mov
xchg
or
leave
push
sbb
or
inc
int3
je
push
jne
out
icebp
and
push
dec
mov
ret
int3
outs
jmp
pusha
leave
xlat
mov
mov
add
shl
mov
fadd
jge
and
fiadd
dec
in
lds
(bad)
mov
loop
inc
jmp
neg
repnz
push
hlt
jecxz
mov
push
inc
xchg
mov
jmp
fld
sbb
mov
xor
xchg
fstp
add
movs
call
rol
pop
push
arpl
jmp
fwait
xor
ja
sub
pop
or
sub
xchg
in
lock
int
stos
inc
test
repnz
mov
jb
jecxz
xor
ins
xor
xchg
call
pop
pushw
inc
mov
nop
push
iret
mov
xchg
sbb
dec
fld
les
(bad)
xchg
jnp
sub
and
(bad)
(bad)
mov
dec
jne
push
shr
jbe
xor
sub
mov
jmp
jae
fdivr
imul
and
jl
adc
sbb
mov
adc
ret
call
xor
add
push
mov
jge
sub
mov
(bad)
lds
dec
mov
(bad)
pop
xchg
mov
mov
shl
jmp
leave
xor
cld
xor
pusha
xchg
and
and
dec
add
jmp
push
jg
loope
xchg
push
mov
pop
in
pop
into
cli
jnp
popf
fsub
out
and
mov
loop
mov
mov
nop
xor
retf
jg
rcr
scas
jg
xchg
pop
sbb
push
out
push
cmovno
sbb
rcl
jne
mov
dec
and
(bad)
ins
rol
aam
arpl
jb
adc
xchg
out
repnz
cmp
push
cmps
jmp
fcmovnb
outs
rcr
cwde
in
call
stc
push
ret
sub
das
jo
mov
call
xor
mov
fwait
and
cmp
mov
cmp
push
jae
pop
or
fimul
jo
in
sti
xchg
aad
add
jbe
sar
mov
addr16
outs
test
jae
(bad)
cwde
or
mov
adc
into
pop
stc
pop
(bad)
jmp
or
sub
xchg
jmp
iret
inc
push
loopne
dec
xchg
mov
push
in
gs
pop
sbb
hlt
inc
cmp
out
jbe
loop
jge
jns
sub
lahf
inc
inc
idiv
add
lahf
inc
sahf
cld
xlat
and
cmp
sbb
xor
(bad)
cmp
xchg
sar
loope
sbb
push
ret
fadd
pushf
add
out
xchg
movs
mov
iret
jno
or
and
inc
fisub
xchg
push
stc
mov
outs
icebp
mov
call
xchg
sbb
call
push
cmp
mov
push
mov
data16
dec
es
repnz
in
jns
jl
(bad)
outs
popa
imul
adc
cmp
pop
test
daa
(bad)
int3
rcl
jae
cwde
aad
sbb
repz
sbb
dec
jp
loope
aas
cdq
mov
cmp
fist
mov
test
scas
in
sahf
sbb
aaa
sbb
(bad)
mov
xor
inc
int
lods
retf
mov
(bad)
and
add
push
call
xchg
test
jmp
pxor
or
push
sbb
aas
jae
jns
in
loope
sub
jns
sbb
mov
rcl
xchg
cmps
(bad)
jge
pusha
ror
add
mul
dec
push
daa
push
dec
or
(bad)
cmp
inc
(bad)
xlat
xchg
fisttp
sub
mov
sti
lods
dec
or
mov
iret
inc
pop
dec
das
scas
in
xchg
retf
push
inc
push
(bad)
sbb
push
in
pop
add
loopne
test
jmp
jne
cs
pop
in
and
or
pop
mov
inc
test
adc
sub
call
jns
scas
in
mov
mov
push
xor
rol
add
inc
xor
mov
loope
and
xchg
mov
mov
adc
jae
shr
lahf
sub
iret
push
sub
jp
(bad)
retf
scas
sbb
adc
in
je
(bad)
push
out
mov
mov
jl
inc
sar
(bad)
(bad)
shl
loope
xor
loope
dec
xchg
cmp
es
add
adc
xchg
mov
add
dec
pop
repz
mov
not
xor
push
loopne
cs
leave
mov
scas
jbe
sbb
push
ror
mov
jp
mov
mov
add
cmp
cld
mov
fisttp
dec
(bad)
scas
mov
sbb
add
(bad)
sbb
xor
dec
inc
js
arpl
mov
dec
jbe
pushf
fistp
int
cmp
jge
cmc
or
enter
retf
loope
jae
inc
lea
cmp
sbb
cmp
cmp
(bad)
repnz
je
mul
sub
mov
jmp
fsubr
push
in
sbb
sbb
pushf
xor
and
lock
movs
popa
xor
outs
mov
std
xchg
js
and
xchg
sub
sbb
mov
jmp
ins
cmp
sti
push
dec
mov
(bad)
and
js
mov
or
sbb
xchg
cwde
scas
adc
cmp
xchg
iret
adc
sbb
pop
(bad)
xor
cmps
mov
inc
push
add
jg
sub
and
shl
jp
jl
test
mov
lods
pushf
or
adc
sub
xchg
pop
lods
cmp
rol
dec
mov
jl
push
inc
push
sbb
aam
imul
xchg
test
adc
sub
or
inc
sub
fwait
mov
(bad)
cmc
mov
(bad)
fdecstp
jg
mov
inc
enter
je
ss
mov
xor
into
lock
inc
mov
xchg
xchg
shr
inc
sbb
call
loope
xor
test
or
shr
(bad)
adc
and
(bad)
test
mov
in
adc
add
neg
out
lds
jg
adc
pop
rcl
ret
push
mov
and
fwait
mov
popf
inc
mov
cmp
out
mov
in
sbb
mov
gs
dec
jnp
and
div
cmps
fsubp
lods
or
fild
ins
adc
enter
pusha
xor
inc
sti
jo
(bad)
cli
sub
sbb
push
cmp
mov
mov
cwde
in
add
jbe
movs
test
dec
in
pop
int
out
fwait
outs
jmp
test
popf
xor
jmp
jmp
(bad)
hlt
jne
mov
lea
lods
test
or
test
cmp
dec
push
mov
cmps
psubsb
std
xchg
jl
push
jmp
sar
sub
js
mov
dec
push
dec
inc
push
(bad)
fild
repnz
in
(bad)
jg
(bad)
jnp
mov
push
mov
xchg
adc
adc
mov
ins
xchg
xor
ds
clc
ins
xchg
xor
ss
push
or
aas
dec
sbb
outs
pop
test
(bad)
call
xchg
and
imul
jmp
sub
xchg
jp
pop
cmp
cdq
or
cld
scas
pop
dec
nop
retf
adc
mov
xor
js
dec
sub
(bad)
aas
and
push
in
mov
loope
mov
jne
icebp
mov
xor
lods
frstor
add
pop
pusha
mov
xchg
loope
cmp
popa
jmp
rcl
dec
lahf
clc
lea
mov
pusha
jl
cmp
mov
in
retf
xchg
loop
hlt
mov
rol
out
mov
cmp
ins
ja
pusha
nop
iret
add
das
jl
add
adc
adc
mov
pop
ins
mov
sub
std
sahf
xor
int
add
push
cmp
sbb
imul
ror
lea
scas
test
cld
pop
push
fsub
jl
cld
in
lahf
imul
xor
inc
sbb
push
lds
mov
mov
hlt
sar
popa
test
mov
sbb
sbb
cli
(bad)
ds
pusha
cmp
add
call
add
rcl
enter
cmp
ret
int3
pop
sahf
daa
xchg
mov
push
test
and
dec
in
sub
jmp
pop
cmp
bound
mov
ficom
leave
sub
inc
jp
ja
iret
pop
xchg
shl
pop
xor
pop
add
shl
stos
std
pop
ds
jle
pop
mov
mov
mov
rcr
iret
and
and
call
fnstenv
jb
cli
sti
mov
pop
or
push
scas
xchg
mov
popf
dec
mov
(bad)
lock
dec
mov
pop
mov
mov
inc
iret
inc
xor
jmp
nop
jmp
pop
inc
xchg
rcr
lods
xchg
sar
adc
mov
mov
das
shl
test
in
mov
scas
mov
inc
fsub
je
mov
jns
pop
and
pandn
cli
jge
fisttp
sbb
mov
lods
lea
mov
retf
int
sub
push
and
cmp
cmps
jge
lahf
jmp
rcr
das
jg
cmp
inc
sub
inc
fnstcw
mov
sub
mov
mov
cld
sub
jb
cmp
mov
movs
iret
aas
cs
shl
or
and
(bad)
pop
adc
adc
inc
inc
sbb
mov
(bad)
push
imul
je
xchg
cmc
sub
xchg
dec
movs
add
ins
mov
imul
xchg
and
popa
aad
mov
ret
aam
add
adc
loop
jp
jp
pop
inc
ror
rcl
sub
clc
push
or
inc
and
lock
bswap
jecxz
in
(bad)
adc
xor
jmp
dec
sti
sub
cmps
or
pushf
mov
fnstcw
(bad)
mov
stc
mov
pop
bound
inc
xor
fnstcw
imul
jmp
pop
lds
(bad)
cmp
ds
lods
repnz
in
push
sub
jne
pop
xor
ror
retf
pop
adc
js
imul
call
int
dec
inc
pop
out
loop
repnz
lds
test
adc
xor
cs
fld
pop
cli
dec
data16
pop
pop
fdivr
mov
xlat
push
mov
push
xor
es
pop
jle
pushf
leave
sbb
sub
out
cmp
mov
gs
dec
je
sub
fs
out
enter
push
retf
ja
push
dec
pop
pop
nop
cmp
imul
out
mov
push
loop
inc
fmulp
fbld
pop
in
inc
rol
mov
and
and
sub
mov
xor
jb
fs
and
or
mov
push
or
xchg
adc
dec
mov
aad
and
mov
jp
pushf
xchg
pop
lods
sub
ret
pop
cmps
jae
jp
out
jnp
jle
pop
xchg
sbb
loop
clc
movs
inc
(bad)
push
out
jecxz
test
rcl
leave
push
cmp
xchg
dec
fdiv
addr16
cmp
dec
in
mov
rcr
mov
mov
pusha
(bad)
int
int3
gs
pop
mov
xor
mov
in
push
push
or
stos
xchg
jmp
xlat
es
dec
pop
jge
pop
adc
stc
dec
fisub
sub
jmp
je
lods
jb
add
pushf
cmps
ret
jnp
aaa
mov
pop
add
dec
cmp
pop
push
in
mov
and
fld
daa
repz
and
pop
push
loop
mov
pop
dec
cdq
fsub
shl
pop
pop
sub
movs
nop
ja
mov
xor
popf
sub
jge
test
xlat
pop
fucomp
rcr
xchg
push
cmp
aad
hlt
aam
test
mov
xor
and
das
cmp
fnstcw
pop
jp
and
fdiv
in
dec
imul
int
inc
xchg
cmps
xchg
xchg
or
into
add
dec
sar
shl
adc
out
dec
js
es
in
inc
xchg
lea
lds
push
mov
cld
lds
in
push
arpl
popa
cmp
lock
(bad)
adc
and
jae
aas
xchg
add
movs
mov
call
jne
test
adc
ficom
adc
test
push
ds
jne
movs
call
scas
or
fldcw
or
mov
in
mov
adc
out
repnz
daa
iret
pop
cdq
push
ja
in
lods
mov
loopne
xor
inc
cmp
in
and
jge
idiv
cwde
xor
sbb
inc
cmps
sbb
adc
push
cmps
pusha
scas
in
icebp
fs
clc
int
mov
retf
stc
add
je
mov
xchg
sub
jns
(bad)
js
sbb
xchg
rcr
mov
lods
or
mov
pusha
retf
jecxz
pop
sub
xchg
mov
retf
sti
int3
xor
mov
cmps
add
xchg
add
sub
sbb
ror
fdivr
sub
outs
jbe
xor
xchg
fidivr
xchg
mov
pusha
jg
mov
fisttp
pop
mov
jle
mov
mov
(bad)
sub
xchg
xor
stc
cmp
mov
xchg
xor
xchg
add
in
xor
fmul
mov
mov
stos
adc
daa
mov
sub
and
pop
jle
pop
fdivr
outs
xchg
cmp
hlt
mov
jbe
and
and
mov
(bad)
fldcw
enter
inc
shl
or
push
sti
in
xor
add
sub
adc
pop
mov
push
repz
push
adc
in
imul
pop
mov
jp
call
jo
sub
mov
jo
pop
aad
xlat
xor
push
mov
repz
lds
jecxz
jecxz
push
sbb
sub
sub
sbb
pop
neg
das
push
cmps
sub
mov
ins
dec
cmp
inc
mov
or
xchg
xor
(bad)
fstp
addr16
js
lods
(bad)
lods
cmp
outs
xor
cmp
add
xor
and
add
in
lahf
in
loope
pop
imul
imul
test
xchg
nop
or
cdq
ins
mov
cmp
call
mov
push
pushf
enter
mov
(bad)
add
fisub
sbb
mov
inc
sar
inc
mov
iret
cs
jb
ror
push
and
mov
std
test
or
ins
stc
fmulp
dec
jmp
gs
jo
dec
adc
pop
es
mov
mov
fstp
js
jg
mov
aam
std
push
sub
cmp
or
or
pop
or
test
jbe
bound
push
les
xchg
mov
add
adc
adc
sub
or
(bad)
das
in
sub
rol
inc
mov
mov
ja
retf
out
pop
leave
sub
sub
shl
fwait
push
sbb
out
clc
push
daa
fst
mov
ins
fsub
sbb
aam
or
push
jne
jmp
shl
mov
repz
push
push
out
mov
fs
xchg
int
xchg
add
push
xor
add
or
add
outs
add
cmp
imul
cld
jnp
push
sbb
adc
mov
pop
pop
inc
adc
in
lea
das
mul
addr16
in
out
pop
cmc
cmp
(bad)
and
sub
out
out
lods
sub
jg
xchg
cmps
mov
(bad)
or
cmp
mov
aam
pop
sbb
jnp
jle
(bad)
add
ins
shr
mov
int
push
xchg
test
dec
rol
fstp
in
(bad)
nop
inc
xchg
sub
std
jno
call
jp
and
jmp
and
sbb
jmp
mov
or
inc
loop
in
sub
mov
add
pop
push
mov
jno
cld
jg
dec
adc
jo
and
cld
push
jno
push
dec
les
and
push
retf
dec
mov
cmp
and
dec
pop
sahf
les
aam
and
sbb
into
adc
int3
dec
nop
cli
stos
sbb
and
lahf
fwait
xor
jbe
mov
add
xor
adc
cmp
mov
ss
movs
pusha
popf
loopne
push
push
mov
test
in
jnp
mov
adc
xchg
and
add
xchg
mov
dec
mov
mov
mov
out
les
jne
add
daa
pusha
add
cmc
out
gs
dec
iret
add
mov
mov
lods
repnz
ins
add
call
mov
js
mov
mov
fistp
ficomp
add
aad
ds
adc
jmp
mov
or
outs
inc
repz
int
aad
jle
movs
mov
stos
repz
loope
jmp
jg
in
and
push
(bad)
je
jbe
arpl
pop
xor
cs
dec
sti
xchg
push
or
lea
rcl
cmp
aaa
pop
lea
adc
test
xchg
cmp
inc
sub
mov
xchg
cdq
(bad)
dec
adc
or
mov
retf
cmp
fild
sub
cli
mov
sbb
and
push
xchg
fiadd
dec
xchg
stc
out
jmp
cmp
stos
iret
mov
xor
in
fimul
xchg
call
adc
cld
ss
cmps
xor
dec
add
or
and
fild
(bad)
dec
mov
and
cmp
cld
pop
sub
mov
sbb
fwait
jge
xchg
inc
(bad)
dec
shl
pop
outs
and
lock
shl
imul
outs
cmp
sahf
or
fadd
sbb
(bad)
mov
in
repnz
ret
cmps
add
cli
mov
mov
mov
sbb
ins
push
das
mov
shl
mov
ja
mov
push
in
mov
push
dec
mov
aad
pop
sbb
cmp
inc
iret
inc
std
cmp
int
mov
pop
push
adc
mov
sbb
js
(bad)
sbb
push
push
loop
push
sbb
xor
(bad)
jg
pusha
mov
fbstp
ret
push
push
adc
inc
idiv
jne
push
repnz
and
or
jno
lods
outs
pusha
push
xlat
movs
push
pop
daa
ret
test
jns
mov
and
scas
out
push
cli
push
jno
cmp
sbb
(bad)
shl
in
sbb
dec
or
fmulp
xlat
and
jg
cmp
ds
mov
jnp
mov
cmps
or
mov
or
or
and
fcom
mov
(bad)
sub
xchg
mov
xchg
push
in
das
cli
cli
cs
xor
adc
mov
and
inc
xor
ja
test
jmp
push
or
sbb
mov
cld
movs
test
mov
jo
and
lock
retf
jg
xchg
ins
(bad)
jg
into
sub
shr
xchg
push
sar
add
xor
jne
inc
mov
xchg
aaa
dec
add
ret
jg
je
mov
dec
push
int
dec
push
je
daa
sbb
nop
and
std
sbb
cmp
push
stc
jae
pop
lods
push
stos
inc
and
js
sub
retf
test
(bad)
and
jae
add
and
mov
xchg
gs
ret
loope
fsubr
into
vrcpss
es
aaa
dec
(bad)
mov
ret
bound
pop
fwait
mov
clc
adc
mov
jle
mov
ss
add
adc
outs
cwde
push
fimul
test
(bad)
mov
test
pop
xchg
mov
add
in
fcomp
mov
(bad)
and
leave
xchg
iret
inc
call
mov
mov
iret
lea
pop
mov
fdivr
add
bound
cdq
enter
sub
aam
sahf
sub
outs
push
jp
xchg
in
imul
push
test
adc
call
xchg
dec
and
or
and
cwde
push
sti
call
call
xor
sub
jmp
cmp
inc
cmp
in
push
sbb
cs
xchg
sub
mov
sub
pop
mov
aas
sub
enter
cdq
ins
mov
addr16
fistp
jns
scas
pop
data16
hlt
pop
pop
cli
push
adc
cmps
jle
mov
mov
pop
aam
out
out
icebp
cwde
(bad)
retf
dec
xor
fstp
push
inc
call
in
nop
push
or
sbb
mov
loope
int
xchg
(bad)
jnp
(bad)
ficom
vmovaps
cdq
pushf
inc
mov
leave
or
aaa
cmp
adc
test
lea
(bad)
and
repnz
shl
jbe
repnz
(bad)
mov
sub
jne
jne
sub
pop
xor
jo
cdq
mov
mov
xor
jl
push
dec
out
cs
stos
cmp
or
(bad)
out
cmp
popa
dec
xchg
sbb
in
adc
loope
ins
(bad)
(bad)
mov
gs
mov
fnstenv
fisttp
jmp
leave
repnz
push
sub
inc
mov
gs
daa
mov
xor
imul
(bad)
ins
lds
pusha
xchg
jb
mov
es
jno
adc
pusha
push
fidivr
fild
ret
pop
cmp
push
add
in
ret
pop
(bad)
xor
lods
repz
aas
out
mov
int3
fwait
mov
lea
push
jns
dec
aaa
and
cmp
push
das
add
xchg
adc
scas
or
or
call
loopne
in
sub
mov
push
js
(bad)
jo
push
add
lss
loopne
cmp
sbb
imul
ins
hlt
xor
sbb
xlat
pushf
imul
jo
push
adc
out
and
ins
mov
pushf
inc
fidivr
mov
dec
lock
jp
sub
xor
lock
retf
(bad)
ficom
pop
inc
sbb
push
cmp
sbb
sub
xor
or
ja
mov
xor
adc
(bad)
cmp
addr16
movs
rol
repnz
and
mov
add
popa
cdq
arpl
push
and
inc
in
and
fstp
xchg
dec
mov
mov
jle
mov
jne
mov
fnstsw
mov
cmp
mov
sbb
aas
ja
out
jb
hlt
scas
pop
sti
je
jne
sub
add
out
push
jl
leave
dec
rol
push
cld
je
jmp
pop
sti
addr16
fidiv
lahf
loope
xchg
push
pop
ja
sub
lea
dec
xor
and
xor
and
sbb
mov
xchg
jnp
out
mov
mov
pop
sbb
or
xchg
jo
mov
fnstenv
xchg
out
jno
inc
adc
repz
pop
cmp
pop
mov
mov
jle
pusha
adc
ret
les
jle
data16
add
push
je
hlt
adc
jae
sub
je
pop
in
dec
xor
(bad)
mov
gs
pop
rcl
sub
movs
scas
pusha
test
out
mov
in
dec
sbb
sub
mov
mov
pop
mov
add
and
fist
push
mov
test
push
jmp
test
(bad)
jmp
push
call
cmp
(bad)
xlat
les
cs
fidiv
ss
fs
mov
dec
add
in
lods
pushf
jecxz
mov
xor
in
or
inc
repnz
loope
aaa
popa
xor
cmps
into
aas
pop
aad
push
jnp
mov
pop
xor
adc
shl
jl
cmps
arpl
ret
daa
ret
lock
ret
in
jp
jo
push
jne
pop
int3
xor
sbb
outs
rol
cmp
imul
not
cmp
scas
arpl
into
dec
repnz
xchg
pop
xchg
push
sbb
xchg
test
sbb
cld
inc
nop
cmp
pop
in
mov
(bad)
jl
pop
test
adc
ret
rcl
popa
ja
int3
mov
cli
adc
or
push
inc
push
cmp
dec
mov
pop
xchg
cmps
mul
cmp
stos
lds
jno
das
sbb
sub
loope
cli
cmp
and
in
mov
push
push
mov
sub
mov
dec
mov
out
push
xchg
ins
pop
cmp
imul
imul
or
jmp
ss
test
cld
(bad)
mov
aam
push
ja
out
dec
mov
cwde
dec
pop
mov
imul
and
dec
dec
inc
or
mov
push
push
cld
cli
dec
jo
sub
jp
inc
fs
movs
aaa
xchg
fimul
push
pop
inc
sub
dec
xor
icebp
and
pop
call
xchg
and
pop
add
mov
pop
sub
aaa
cwde
add
mov
lds
in
shl
mov
push
into
pop
ja
mov
pop
inc
mov
xchg
xchg
and
aad
cmova
dec
(bad)
jecxz
daa
mov
sub
lea
xchg
clc
pop
push
cmp
movs
pop
or
xor
add
imul
bound
xchg
mov
daa
dec
push
js
xchg
sub
in
inc
xchg
mov
inc
ror
pop
inc
mov
shl
call
xchg
enter
or
jp
xlat
mov
cmp
mov
xlat
gs
je
jge
aaa
sbb
pop
sbb
dec
ins
inc
mov
imul
pop
imul
or
add
arpl
imul
and
mov
xor
test
(bad)
repz
or
mov
mov
adc
mov
inc
fs
daa
push
adc
sbb
jl
popa
scas
in
or
(bad)
test
js
inc
mov
movs
jmp
rcl
in
push
jno
sbb
aas
popf
fidivr
popa
pop
add
adc
das
int3
adc
add
not
gs
and
cli
mov
dec
xchg
aam
mov
inc
and
jo
add
(bad)
sar
jmp
jno
jbe
dec
adc
and
iret
xchg
jae
rcl
dec
push
xor
xor
dec
ret
(bad)
push
pop
cli
or
outs
jl
cmp
hlt
(bad)
test
les
add
sub
lods
(bad)
jmp
cmp
mov
cld
pause
mov
and
aas
and
ficom
jl
cmp
pop
add
push
push
inc
xor
or
mov
imul
mov
pmullw
cli
aam
sub
call
dec
pusha
jbe
inc
add
(bad)
cwde
les
jo
mov
push
repnz
retf
fnstsw
or
push
add
loope
into
mov
fst
ja
out
and
xor
call
push
xchg
in
sbb
outs
or
mov
js
xchg
sub
inc
(bad)
scas
sar
and
bound
lods
jp
mov
and
icebp
pop
retf
pop
fimul
in
sub
jge
sbb
js
rcl
mul
in
in
mov
xor
mov
aad
(bad)
inc
xlat
mov
cs
add
jmp
mov
mov
mov
adc
mov
or
adc
inc
not
add
jge
xor
dec
push
xlat
jmp
mov
cli
lods
cdq
clc
sbb
out
call
loope
test
pusha
stos
out
jo
dec
xchg
jmp
shl
pop
dec
mov
nop
daa
or
daa
sahf
jae
(bad)
mov
xor
int
mov
sbb
pop
adc
cmp
or
pushf
mov
out
aas
add
or
rol
ja
push
dec
mov
popa
mov
fs
mov
dec
sub
call
fld
mov
push
and
scas
jns
inc
sbb
int
inc
mov
xchg
(bad)
pop
dec
and
push
pop
mov
cmp
mov
in
aam
mov
mov
test
cmp
and
adc
xchg
ficom
movs
adc
(bad)
xchg
mov
inc
push
push
pop
fsubp
inc
jb
retf
out
push
into
cmc
pop
xchg
pop
mov
cmp
mov
retf
jns
cmp
mov
mov
stc
ficom
mov
(bad)
mov
jns
or
push
sti
(bad)
ffreep
jl
or
sti
fdiv
lods
sub
mov
and
cdq
enter
stc
or
jo
xor
int3
in
in
xchg
neg
xchg
xor
jg
jno
and
lahf
cmc
mov
inc
inc
jmp
inc
fcom
sbb
les
add
into
jns
pusha
sub
or
xor
jae
pop
or
dec
xchg
mov
xor
lods
bound
sub
rol
in
push
pop
mov
push
pop
std
mov
dec
lea
add
sbb
ror
fs
call
test
pop
(bad)
(bad)
outs
scas
or
fisub
ins
mov
and
add
push
jmp
and
pop
pop
cmp
xchg
jo
into
xchg
mov
jns
sub
int3
dec
stos
sub
hlt
shr
dec
add
xor
rcl
loope
cwde
or
xchg
sbb
and
arpl
int
jg
sar
dec
jno
push
inc
mov
int3
jbe
mov
(bad)
lods
sbb
sub
fsubp
scas
imul
xor
cmp
popf
dec
test
xor
pop
lock
test
adc
xchg
cmps
aam
push
or
aad
dec
xchg
cmp
jno
bound
xor
xor
mov
cld
sbb
cmp
mov
cmp
jp
mov
in
ja
or
add
outs
loope
(bad)
je
sbb
shl
imul
in
fs
sti
stc
push
jp
int
mov
mov
in
ret
sub
push
sub
and
stc
(bad)
repnz
or
movs
push
in
mov
mul
push
add
xor
sbb
add
out
repnz
mov
loop
push
mov
xchg
rcr
fcmovne
jns
jmp
inc
adc
xor
out
sub
mov
cmp
pop
jecxz
dec
arpl
into
jne
(bad)
loope
pop
fsubr
int
add
jl
mov
shr
cdq
and
push
xchg
sub
retf
lods
lock
int
(bad)
mov
in
or
jl
call
xor
push
rcl
lds
test
dec
shl
rol
xchg
push
(bad)
pusha
cld
xor
inc
jno
push
(bad)
push
fcmovu
jmp
in
scas
push
(bad)
call
int3
mov
dec
rcl
mov
xchg
cmp
lea
rcl
mov
jns
xlat
dec
and
out
shl
dec
pop
bound
daa
dec
fdivrp
clc
push
sar
adc
mov
cwde
inc
and
add
push
aad
inc
fdiv
jnp
push
fld
sbb
imul
mov
cmp
bound
push
iret
cmp
in
loop
pop
jbe
xlat
push
(bad)
xchg
inc
aas
adc
in
cmp
ficomp
nop
sub
inc
adc
rol
rol
cmps
addr16
iret
mov
es
leave
fimul
in
and
mov
test
inc
call
test
mov
loope
jg
loopne
push
call
sbb
xchg
push
mov
inc
push
loopne
mov
sub
imul
mov
(bad)
fcmovnu
pop
cmp
retf
and
mov
push
sar
mov
or
xor
cmp
call
cmp
dec
movs
or
push
mov
mov
cmc
sub
jnp
push
in
out
ss
cmp
jnp
call
cmp
movs
mov
shl
lods
and
jno
jmp
not
push
sub
(bad)
call
dec
xchg
cld
and
sbb
fisub
jae
mov
ror
sub
cmp
ss
(bad)
pop
fs
push
xchg
mov
fdivr
pop
mov
icebp
jb
retf
inc
repz
pop
adc
cli
or
fld
shr
ss
and
inc
pop
shr
jge
ss
sbb
test
push
fild
cld
mov
ret
inc
in
adc
sti
fs
cmp
jecxz
movs
adc
lahf
fisubr
call
loopne
cdq
adc
fistp
jg
lods
fxch
lea
cmp
push
jg
xchg
add
sub
jle
xchg
xchg
xor
xor
cmp
jp
stc
cmc
cmp
test
or
sar
shl
sbb
mov
xor
test
daa
ins
pushf
(bad)
(bad)
repz
pop
fs
sbb
cli
mov
icebp
cmp
(bad)
sbb
push
lahf
aaa
jns
jae
inc
sbb
sbb
fisub
xor
mov
push
popa
jno
bound
test
xchg
mov
push
jge
jne
cmp
lds
fucom
sar
lods
sub
fnsave
movs
or
push
xor
pop
mov
and
test
fs
repz
sbb
mov
gs
frstor
(bad)
not
sub
cwde
fistp
bound
into
cmp
push
cmps
popf
push
mov
icebp
movs
test
inc
adc
jns
and
xchg
daa
cmps
and
inc
sbb
ret
push
push
bound
mov
test
mov
mul
dec
stos
push
sbb
cmc
cdq
ror
jns
pop
jmp
lahf
(bad)
mov
test
aad
in
inc
leave
(bad)
mov
mov
out
shl
inc
cli
push
lock
aam
dec
in
mov
leave
scas
sbb
cmp
mov
movs
scas
or
ja
mov
jb
fild
sub
or
push
mov
sub
mov
lods
and
je
in
sub
pxor
mov
mov
sbb
push
lock
data16
mov
outs
fsub
jmp
mov
xchg
push
std
mov
xor
sub
jnp
xor
mov
inc
dec
fucomi
outs
and
imul
dec
cmp
mov
and
pop
xor
and
jae
outs
push
xchg
icebp
lock
je
adc
push
inc
add
(bad)
gs
mov
pop
je
adc
test
jmp
lahf
fisttp
mov
rcl
mov
inc
in
mov
shl
aad
mov
add
lock
jae
sbb
imul
test
aaa
(bad)
pop
or
adc
pushf
cld
ins
adc
mov
push
or
lahf
inc
xor
jne
mov
(bad)
adc
or
imul
push
pop
mov
lds
push
or
mov
and
dec
ficom
stc
dec
push
loopne
dec
out
pop
call
cs
mov
mov
mov
dec
or
cli
ja
xchg
add
sahf
ja
shr
(bad)
aas
push
sub
ins
popf
dec
mov
jmp
mov
imul
jp
jo
lods
sbb
nop
mov
frstor
mov
fldenv
inc
or
shl
stos
in
leave
push
imul
cmp
daa
push
dec
push
dec
mov
sub
pop
cmc
add
fwait
ss
dec
out
dec
or
gs
es
(bad)
or
jne
mov
lahf
popa
mov
data16
xchg
mov
sub
jae
xchg
dec
mov
std
in
push
jge
cmc
dec
ret
outs
dec
mov
push
mov
add
out
stc
jge
fcomip
aaa
data16
xchg
push
mov
ror
mov
sbb
push
jne
mov
jo
arpl
repnz
rol
test
xlat
push
push
out
stc
pop
mov
test
cld
dec
popa
fimul
mov
out
cmp
jmp
clc
data16
pop
sub
call
(bad)
sar
fwait
xor
icebp
ror
xor
adc
jae
lods
xor
std
xor
call
loop
pop
popf
fxch
fdivr
sahf
push
jle
mov
mov
mov
jge
test
retf
scas
add
fsubr
dec
scas
pop
(bad)
mov
cmp
xchg
movs
mov
jnp
xor
cdq
inc
pop
cmp
dec
ficom
or
sbb
add
ficom
aad
push
mov
lock
iret
stos
mov
pop
repnz
jecxz
in
add
jl
and
dec
add
pop
mov
xor
fbld
in
daa
mov
fwait
ja
push
into
pop
xlat
btc
pop
rcr
pop
test
push
inc
or
xbegin
sahf
(bad)
cdq
call
lods
(bad)
out
neg
dec
mov
les
in
push
out
in
pop
arpl
adc
imul
(bad)
retf
int
stos
xor
mov
ins
cmovbe
sbb
dec
sub
cmp
push
loop
sbb
ins
(bad)
rcr
pop
dec
push
mov
pop
pop
add
(bad)
fcmovbe
sbb
inc
pop
or
pop
add
sub
sbb
push
jb
(bad)
fcmovb
lods
sbb
dec
sahf
aas
inc
cdq
or
push
pop
(bad)
frstor
hlt
int3
sub
or
frstor
xor
popa
popa
xchg
es
xor
mov
jnp
push
adc
cmp
test
and
push
jl
mov
xor
(bad)
xor
pop
pop
sar
push
aaa
mov
hlt
and
call
and
mov
xor
js
dec
or
xor
mov
movs
mov
cmps
or
push
jne
int3
es
cld
xor
fdivr
cmp
shl
fist
jge
test
mov
in
retf
and
dec
cdq
out
xor
enter
adc
ins
pop
push
xchg
fidiv
gs
cmp
mov
pop
push
inc
push
inc
mov
cs
cmp
inc
jle
es
(bad)
push
jge
inc
xor
or
sahf
cdq
push
sbb
xor
popf
add
stos
push
push
mov
loope
call
imul
aaa
cmps
mov
and
push
cwde
xor
lahf
jle
jmp
clc
movs
in
js
xchg
(bad)
xor
mov
mov
pop
jecxz
jbe
sbb
fiadd
adc
adc
into
popf
xchg
mov
iret
repz
fwait
bswap
adc
sbb
shl
daa
add
push
pop
push
js
addr16
bound
and
imul
sub
into
mov
jnp
adc
inc
lock
dec
dec
xor
mov
push
mov
cwde
adc
std
mov
sub
pop
aad
ss
andps
fidiv
cmp
mov
das
dec
cwde
pop
xor
mov
push
sub
fdivr
mov
xor
imul
test
xor
sub
cmps
sar
dec
repnz
mov
stos
push
je
ud1
rcr
cmp
jbe
movs
mov
js
test
arpl
call
rol
es
sbb
arpl
push
cli
stos
pop
xchg
enter
add
iret
adc
sahf
js
fbld
and
mov
or
imul
cmps
(bad)
retf
or
retf
sub
cli
xchg
cmp
out
push
fs
icebp
fdiv
add
jle
and
repz
clc
push
pop
jns
dec
into
out
sbb
mov
xchg
data16
cmps
bswap
add
(bad)
cmp
addr16
inc
pop
out
mov
jo
ins
dec
mov
ret
xlat
add
cmps
mov
push
mov
inc
jbe
adc
fstp
add
mov
cmp
lea
jp
inc
xchg
imul
scas
dec
shr
pop
mov
neg
popa
aad
jmp
iret
test
xchg
cmps
ins
add
mov
xor
xchg
sbb
loope
xlat
inc
add
xchg
add
adc
inc
jb
xor
test
jmp
push
inc
cmps
ret
and
sub
sti
out
push
in
mov
pop
in
cs
dec
xor
mov
int3
push
shl
and
test
scas
sbb
fstp
adc
div
(bad)
mov
push
test
and
push
loop
sub
cmp
adc
cmp
ja
scas
jns
jo
or
ret
add
mov
cs
mov
mov
cmp
aam
or
pop
scas
aaa
push
icebp
call
aas
jns
int
cld
leave
inc
xor
add
mov
scas
lods
dec
pop
icebp
sbb
jae
jae
fisttp
and
std
jmp
push
(bad)
fidiv
fwait
cmovg
aad
outs
mov
mov
lods
cmps
shl
or
pop
es
bound
out
fucomi
call
inc
cld
add
ja
mov
shl
retf
popa
icebp
inc
xor
cs
je
sub
xchg
ins
(bad)
add
adc
jmp
fidivr
ins
mov
scas
out
xchg
xor
(bad)
fdivr
nop
push
cmp
mov
cmc
das
ins
mov
mov
sub
mov
int3
dec
pop
push
jne
sbb
scas
into
jmp
jns
shl
xchg
fsub
and
inc
jno
pop
fimul
jnp
scas
or
xor
pusha
int3
mov
mov
div
aas
push
popf
daa
popf
inc
ficom
pop
push
pusha
mov
test
jo
out
movs
add
dec
mov
or
fcmove
xchg
lods
mov
cmps
aaa
idiv
push
xchg
jge
xchg
xchg
dec
pop
les
into
cmp
sbb
ret
rol
stos
mov
ret
loopne
jae
push
jge
(bad)
(bad)
retf
(bad)
dec
pop
cdq
pop
pop
ret
stos
and
cmps
nop
mov
retf
ror
jmp
das
in
cmp
dec
loop
adc
movs
jle
push
jecxz
xchg
lock
sub
push
in
mov
enter
daa
into
inc
enter
adc
sub
pop
mov
aad
leave
mov
dec
cdq
popa
enter
inc
sbb
cdq
hlt
bound
cmps
ror
and
jge
jne
pop
mov
add
mov
popa
inc
cmp
ret
int
jge
fstp
jb
cmc
mov
in
pop
shl
into
enter
xor
adc
inc
loop
mov
push
(bad)
fsubr
xchg
cwde
pop
test
inc
xor
rcl
adc
push
cmp
add
pop
mov
fs
cli
inc
mov
push
xor
jnp
pusha
in
loopne
js
adc
push
loope
mov
push
push
out
mov
cmp
cmp
xchg
int3
or
pop
cmp
xor
fstp
hlt
sub
sbb
xchg
mov
jae
out
rcl
es
sti
clc
fwait
or
xor
sar
fstp
or
aad
adc
mov
jo
cwde
xor
pop
xor
adc
jmp
je
add
clc
ret
sub
mov
inc
test
dec
xchg
icebp
retf
sub
and
addr16
add
xor
iret
popa
mov
add
sub
add
addr16
arpl
outs
jne
stos
push
adc
mov
and
call
sbb
daa
cmp
xor
mov
or
pop
scas
xor
pop
retf
out
pop
sub
mov
rcr
pop
sub
lods
inc
xor
rep
pop
cdq
mov
fwait
mov
popf
sub
or
jbe
(bad)
adc
cmps
mov
mov
mov
clc
xor
sbb
mov
ja
mov
mov
jmp
retf
jp
js
repnz
mov
or
pop
pop
pop
sbb
jbe
mov
add
cld
xchg
cld
dec
sub
add
call
mov
fild
and
invd
jle
push
inc
adc
mov
push
(bad)
cmp
shr
mov
or
push
mov
push
lods
adc
jae
push
xchg
test
sti
lods
mov
aam
push
lods
gs
cld
cmp
call
mov
sbb
ja
lea
sub
es
jp
adc
fbstp
push
jmp
mov
outs
out
inc
mov
cmc
push
dec
mov
mov
iret
sar
adc
pop
jp
mov
inc
or
inc
pop
das
lds
and
shl
xchg
pop
clc
sub
aad
in
mov
cdq
fimul
ds
mov
repz
pop
xor
mov
scas
jge
stc
fst
sahf
and
aaa
or
mov
xchg
scas
xchg
xor
mov
fild
mov
ficomp
sbb
sbb
push
popa
div
pop
lds
cmp
movs
in
arpl
cmp
inc
mov
add
pop
sbb
movs
mov
add
push
in
fisttp
aaa
dec
push
sbb
add
add
or
int3
loopne
scas
push
jb
push
das
ja
dec
sbb
xor
xor
aas
pop
icebp
data16
inc
fisubr
ins
xor
out
xchg
sub
sub
xchg
xchg
inc
out
pop
ret
icebp
sub
mov
in
call
cli
loope
pusha
xchg
test
test
aaa
out
add
mov
dec
daa
adc
jge
mov
imul
add
xchg
mov
pop
and
mov
xor
jp
xchg
(bad)
xor
ins
sahf
(bad)
iret
ins
inc
ret
jmp
push
jmp
sahf
stc
or
add
pop
dec
cmp
xlat
fsub
inc
cmp
xchg
xor
call
(bad)
stos
jge
xor
fidivr
cli
int3
jp
data16
cmp
mov
sub
lods
pop
in
imul
mov
jp
mov
into
loopne
pop
(bad)
fcom
pop
inc
and
dec
jmp
jle
ret
fisttp
and
es
mov
dec
clc
(bad)
adc
(bad)
fld
sti
ret
out
xchg
dec
shl
jecxz
gs
cwde
pop
ror
cmp
push
mov
xchg
js
pop
inc
dec
cdq
test
pop
push
lock
push
mov
repnz
push
cmps
retf
add
retfw
sub
xchg
sub
jecxz
mov
in
iret
jae
ins
das
rol
movs
(bad)
mov
dec
arpl
or
imul
sbb
or
push
adc
cdq
or
dec
dec
stos
fcmove
inc
adc
jae
xlat
adc
mov
stc
xchg
pusha
adc
(bad)
and
push
imul
jne
mov
push
pop
icebp
les
add
push
sar
xor
mov
cmp
add
inc
int
fst
loop
ror
std
fnstsw
sbb
pop
test
ret
jb
sub
mov
inc
call
mov
in
mov
das
cmp
sub
add
data16
jg
(bad)
stos
xor
xchg
nop
mov
gs
in
fcmovnb
inc
int
or
add
jbe
in
mov
xlat
sub
adc
and
adc
(bad)
pusha
icebp
nop
sbb
into
dec
test
adc
cwde
pusha
idiv
stos
cli
inc
adc
call
push
jge
movs
jle
cli
sahf
mov
test
call
add
dec
push
retf
out
sub
inc
push
mov
mov
inc
in
out
test
sbb
adc
js
xchg
ss
fwait
xchg
mov
shl
outs
and
jmp
mov
push
fiadd
std
sbb
cmp
mov
loopne
pshufw
bound
add
imul
ja
imul
xor
add
mov
in
(bad)
daa
add
pusha
fbld
out
sbb
cmp
mov
cli
adc
lock
pop
dec
xor
jo
pop
in
js
(bad)
cli
mov
mov
sti
aas
sbb
icebp
fdivr
call
(bad)
inc
inc
(bad)
jb
xchg
aas
sub
(bad)
daa
cmp
aad
cmp
pop
inc
xchg
fiadd
push
ficom
mov
cwde
xor
mov
jae
or
mov
sub
adc
xor
adc
dec
sahf
daa
js
sub
cdq
mov
scas
mov
jae
or
div
das
cld
into
add
dec
test
xor
xchg
pop
push
(bad)
mov
test
lea
test
aad
pop
pop
retf
dec
xchg
fmul
pop
push
inc
pop
dec
cmp
xchg
sbb
test
jb
or
push
inc
loop
fisubr
jb
dec
xchg
ds
dec
jmp
hlt
js
ja
mov
xlat
mov
repnz
pop
xchg
lea
mov
mov
inc
popf
jg
jb
pop
ret
pop
sbb
das
popa
mov
dec
into
dec
cmpxchg
inc
sub
jo
mov
aas
fs
sub
ss
in
sbb
mov
cmp
ins
pop
and
xor
jmp
imul
inc
fistp
sub
mov
mov
push
rcr
(bad)
ret
loopne
test
sub
jle
inc
jno
cmp
mov
xor
int3
sbb
xchg
loope
pop
jmp
or
gs
and
aam
enter
mov
push
add
add
icebp
cmp
in
ror
jl
mov
aas
mov
int
jmp
push
pop
nop
(bad)
mov
sahf
test
pop
pop
cmp
js
sbb
xchg
nop
aad
xchg
pop
in
push
fdivr
jb
das
inc
fwait
push
popa
mov
sub
popf
mov
and
mov
push
or
clc
adc
mov
ret
fldln2
ret
and
xchg
and
mov
imul
or
sub
mov
or
mov
adc
out
xlat
adc
bound
aam
pop
push
sar
lahf
cmp
or
inc
mov
div
inc
pop
cmp
dec
lea
scas
xchg
fisubr
(bad)
jb
scas
mov
rol
in
mov
mov
dec
int3
int
lods
paddb
idiv
js
sbb
rcl
fwait
das
dec
add
xchg
mov
push
sbb
xchg
xor
mov
mov
cmc
sub
loope
pop
inc
gs
mov
(bad)
push
xor
inc
hlt
push
xor
pop
and
xor
mov
lea
sbb
add
mov
(bad)
sbb
inc
fisttp
push
push
adc
sub
lahf
lods
adc
cdq
retf
xor
into
xchg
mov
pop
xor
jp
fmul
adc
jbe
mov
and
loopne
inc
fdivr
dec
jo
ds
mov
jns
movs
push
add
lods
adc
ins
daa
push
dec
xor
retf
movs
ss
or
imul
into
aad
push
(bad)
xchg
xor
add
int3
scas
mov
mov
fmul
xchg
loopne
and
mov
fdivr
paddsw
xchg
aad
(bad)
fdivr
test
cli
repz
aam
clc
mov
cmp
cmp
loopne
cmps
cli
lock
repnz
or
mov
dec
out
mov
lods
fistp
dec
scas
dec
or
pusha
jno
cmp
pop
loop
inc
add
push
and
in
cmp
das
push
xchg
outs
in
mov
mov
rcr
add
sti
and
cmp
mov
test
inc
dec
cmp
mov
jne
sub
test
fsubr
jnp
(bad)
lea
ror
add
sub
inc
push
xchg
jmp
mov
xchg
xor
mov
lea
aas
clc
enter
mov
sbb
xchg
ss
hlt
shl
push
aas
pop
cmc
lock
mov
lods
xchg
fidivr
xor
push
cwde
ins
mov
shr
sub
and
sub
fsub
inc
pop
sti
or
mov
shl
movs
sub
aaa
or
fs
pop
push
cmp
loop
push
cmps
shl
lds
ja
dec
std
xchg
sub
xor
xchg
fld
jmp
jmp
mov
test
lock
int
enter
adc
loop
push
cmp
out
add
add
pop
fisub
xlat
pop
xchg
dec
rcr
ins
test
push
int3
sbb
cmp
ds
les
pop
sbb
pop
sub
xchg
xor
dec
dec
xchg
pop
inc
adc
test
outs
xor
mov
pop
and
call
jle
fld
and
outs
nop
shr
inc
mov
cmp
xor
inc
adc
sub
sub
cmc
cmp
nop
fcmovnbe
mov
outs
sar
cwde
jmp
popa
sub
xor
sbb
scas
imul
mov
aaa
jbe
fisttp
mov
sub
loope
mov
jmp
cmc
mov
and
fwait
cdq
and
xchg
test
repz
enter
enter
cmp
ficomp
imul
and
sbb
cmc
psubusw
(bad)
in
loopne
cmp
in
cmp
fild
sti
inc
sub
mov
pop
sub
(bad)
mov
(bad)
ret
frstor
cmp
inc
and
(bad)
push
jnp
push
sub
mov
inc
sbb
fisubr
add
ficomp
inc
and
and
push
mov
pushf
or
cvttpd2dq
stc
pop
call
or
test
inc
retf
fistp
jo
mov
dec
inc
jo
lock
mov
shl
fild
(bad)
jbe
jl
xor
jl
jb
adc
jg
sub
pusha
jae
mov
bound
cwde
fisttp
jne
movs
fidiv
pop
mov
push
enter
mov
movs
sub
dec
sub
fcom
push
xor
adc
push
cmp
mov
cmp
adc
jl
mov
out
lods
push
cmc
pop
sbb
ds
fiadd
arpl
ja
sub
mov
xchg
retf
sbb
(bad)
sar
xchg
out
pop
jae
stc
mov
lods
inc
test
xchg
sub
xchg
rcr
ds
push
mov
(bad)
out
pop
scas
dec
lahf
mov
repnz
add
pop
icebp
jae
mov
les
jae
(bad)
fdivr
pop
retf
addr16
(bad)
sbb
or
lds
sahf
sbb
adc
pop
jg
sub
rcl
mov
mov
(bad)
jno
push
mov
inc
in
sub
mov
jns
sbb
xchg
and
cmp
(bad)
test
xchg
movs
add
movs
sbb
inc
(bad)
xchg
add
push
sbb
std
cmp
retf
int
fdiv
aaa
inc
xor
aas
stos
sub
(bad)
cmc
mov
outs
adc
jo
pop
sub
ror
mov
sub
add
inc
jne
add
test
test
lods
test
enter
data16
cmc
cmps
bound
clc
jmp
cmp
xor
comiss
in
out
call
stos
jmp
or
stc
push
and
enter
mov
sahf
mov
or
mov
shr
pusha
sbb
jae
popa
fisttp
fisttp
leave
pop
sub
dec
sub
push
and
out
fstp
(bad)
cmc
sbb
lds
daa
mov
dec
std
mov
repz
cli
xor
pop
adc
pusha
cs
mov
xor
mov
mov
call
(bad)
into
and
movs
scas
int3
test
in
div
fwait
lods
adc
mov
dec
and
cmp
dec
inc
iret
ja
xchg
add
idiv
lea
popf
repnz
xlat
ss
xchg
(bad)
sbb
cli
stos
xchg
and
mov
loopne
mov
out
mov
movs
xor
ret
adc
sti
mov
rcl
push
cld
mov
inc
sbb
aam
jns
jbe
sub
ds
xchg
(bad)
mov
mov
scas
int
or
(bad)
movs
(bad)
ror
push
push
retf
leave
adc
out
mov
test
ret
add
in
push
push
cld
push
ja
loop
lahf
or
lods
stc
dec
pop
lods
sar
jae
inc
sar
in
adc
(bad)
xor
mov
add
outs
cwde
inc
push
(bad)
cmp
ret
xchg
mov
ret
adc
(bad)
std
(bad)
jp
sub
aam
fnstenv
rcr
jnp
pop
(bad)
dec
dec
div
ins
ret
dec
jg
fwait
mov
adc
sub
aaa
dec
cmc
int3
jge
jecxz
lea
mov
cld
pop
cmp
loopne
xchg
repz
xchg
scas
ins
mov
test
hlt
xchg
dec
test
jbe
cmp
inc
(bad)
dec
or
and
outs
xor
rcl
retf
pop
push
or
ins
pop
push
repz
(bad)
jmp
inc
retf
inc
lahf
icebp
pop
cmc
pop
out
add
push
lea
ja
mov
(bad)
xor
xor
dec
test
cld
mov
bound
jae
mov
test
fs
imul
scas
dec
mov
lea
push
jg
dec
xchg
sbb
sbb
gs
out
pop
push
outs
cmps
inc
(bad)
dec
dec
lds
pop
pop
add
ror
leave
dec
sar
or
or
test
je
enter
movs
cmp
push
xor
arpl
fst
jno
add
loopne
fadd
mov
jnp
rcl
dec
mov
fisttp
adc
push
jp
dec
dec
jecxz
lahf
(bad)
push
hlt
sbb
pop
enter
or
in
jae
cmp
mov
(bad)
jl
cmp
xchg
ss
sub
xor
stos
xor
(bad)
cmp
inc
inc
xchg
out
imul
ffreep
in
xchg
inc
jge
cmc
pop
cdq
shr
jmp
xor
pusha
pushf
lods
and
shr
xor
pop
test
clc
and
cmp
stc
fwait
test
pop
push
aaa
(bad)
sbb
or
xchg
loopne
add
push
enter
dec
or
mov
mov
or
scas
sub
xor
scas
mov
sub
dec
sbb
bnd
outs
out
rcl
mov
pop
fistp
cmp
arpl
mov
pop
mov
pop
cmp
mov
ss
dec
xchg
pop
sar
shr
out
cmc
xchg
daa
xchg
mov
sar
pop
xchg
mov
jb
xor
sti
cmp
sub
pop
xchg
loopne
icebp
pop
aaa
mov
cmps
push
fwait
lea
out
push
loope
gs
int
js
aaa
out
sub
fist
mov
add
scas
lea
mov
sbb
retf
fcmovnb
mov
jo
jecxz
mov
fcomi
lods
mov
adc
arpl
scas
cld
pop
sub
and
int
pop
sar
(bad)
mov
mov
adc
ins
or
nop
push
mov
xchg
ror
enter
out
sub
ins
mov
xor
sar
div
scas
movs
leave
fucomip
in
mov
mov
stos
xchg
ds
jns
jnp
repz
out
(bad)
pop
daa
mov
ret
ins
xor
(bad)
pop
cld
or
sar
or
in
add
sbb
cmp
mov
lds
aad
adc
bswap
pop
or
rcr
inc
out
scas
xlat
movs
lahf
aad
cdq
addr16
xor
sbb
cli
loope
test
and
aas
mov
inc
fld
pop
xor
mov
xor
movs
adc
sbb
or
jecxz
xor
scas
stos
dec
addr16
add
int3
fsubr
push
cmp
mov
inc
sub
sti
and
fwait
stos
arpl
movs
push
fcmovne
ins
call
add
pop
retf
mov
sbb
lods
mov
ja
stos
push
les
mov
int
loopne
shl
pop
fisub
out
cdq
iret
gs
jnp
xlat
cmps
jl
dec
dec
mov
(bad)
sti
jle
outs
leave
push
pop
inc
mov
mov
lock
les
gs
mov
push
jge
in
(bad)
rcl
cmp
clc
sbb
pop
jle
loope
popf
sbb
fs
mov
adc
hlt
xlat
xor
jle
ret
pop
out
push
dec
movs
fstp
or
jno
add
fwait
shr
mov
sub
lods
push
arpl
nop
aaa
out
mov
or
cmp
out
sbb
pop
scas
push
mov
ret
mov
fild
and
add
jle
fimul
xchg
add
stc
call
bound
push
das
xchg
stos
mov
sub
aam
sub
shl
das
ficomp
inc
mov
out
das
sar
dec
dec
ret
aam
ds
and
and
xor
jl
inc
push
mov
int3
dec
inc
call
sahf
movs
xor
sub
pop
dec
xchg
inc
fmul
mov
lods
cmc
adc
test
cmovg
fs
cmp
shr
movs
(bad)
in
sub
ins
pop
fld
int3
push
ret
rcl
push
jmp
mov
bound
jle
(bad)
scas
sbb
sbb
add
out
cdq
xchg
jo
add
sub
xchg
inc
inc
lahf
shl
push
jae
add
call
mov
dec
jge
aad
pop
and
mov
push
leave
sbb
ficom
or
loopne
mov
leave
push
mov
mov
adc
xchg
(bad)
push
dec
cmp
scas
jmp
xchg
xor
pop
dec
mov
mov
jp
pop
xchg
push
pushf
jo
jmp
add
pop
cmps
jle
fst
je
hlt
add
sahf
push
pop
inc
pop
out
lahf
push
retf
enter
mov
stos
div
and
cmps
sbb
pop
inc
push
cdq
sbb
or
mov
ficom
clc
mov
pop
arpl
pop
popf
xor
and
shl
sbb
aad
out
out
outs
adc
pop
jmp
inc
mov
sbb
sldt
xchg
sbb
mov
test
pop
and
addr16
jmp
mov
pop
les
sub
int3
int3
test
fld
or
sahf
aad
adc
mov
or
jbe
pop
mov
push
xchg
sub
idiv
mov
dec
cmp
(bad)
sub
pop
retf
cmp
jle
cmps
cmp
test
scas
and
and
sbb
push
(bad)
push
aam
mov
loop
dec
int3
clc
mov
or
jp
addr16
sbb
cli
repnz
(bad)
cmps
pop
and
imul
push
aad
sub
nop
sbb
xor
div
lock
movs
push
mov
push
mov
das
(bad)
es
imul
inc
or
stc
adc
dec
sbb
jge
jne
cs
repnz
adc
sbb
mov
mov
jmp
out
xor
retf
mov
imul
mov
or
retf
arpl
popa
loope
jmp
fld
sbb
cdq
imul
rcl
xchg
adc
fadd
jmp
outs
xchg
aas
scas
or
xchg
and
mov
mov
push
mov
test
cs
sbb
mov
inc
ins
pop
repnz
out
add
jnp
retf
mov
out
outs
mov
into
sub
add
into
mov
inc
inc
push
add
jge
pop
mov
add
pop
loopne
and
lea
mov
retf
inc
xor
inc
mov
mov
loope
leave
iret
jne
rol
dec
jmp
mov
aas
shr
shl
cmp
push
in
dec
sbb
repz
xor
sbb
push
or
pop
imul
sahf
push
lods
or
loope
movs
stos
mov
(bad)
ins
das
mov
push
lods
(bad)
(bad)
and
loope
mov
shl
inc
pop
lea
sbb
push
pop
mov
adc
popf
call
(bad)
cmps
sbb
jecxz
or
mov
ins
sub
(bad)
xor
cwde
cmp
iret
rol
mov
fldenv
or
out
mov
cmc
jno
js
jg
lahf
int
mul
imul
fwait
(bad)
and
sar
iret
pop
ret
sbb
bnd
xor
mov
mov
dec
repnz
out
in
fld
inc
daa
sub
add
outs
or
imul
out
push
xchg
mov
inc
or
(bad)
test
sbb
addr16
jb
jmp
xor
imul
ret
xor
das
rcr
scas
in
das
lahf
cmp
fsubp
js
pop
mov
retf
mov
into
out
outs
sub
xchg
or
loopne
pop
lods
mov
mov
outs
nop
cmps
shl
(bad)
imul
outs
rol
push
shl
cld
cs
inc
or
mov
aam
pushf
jmp
mov
dec
sbb
gs
xor
inc
in
mov
sub
pop
sbb
test
dec
pop
and
enter
push
fstp
jmp
and
inc
xchg
or
outs
lea
pop
push
test
int3
jmp
ins
dec
icebp
or
mov
fadd
scas
sub
xor
dec
test
push
adc
mov
dec
mov
xchg
ret
adc
and
or
dec
(bad)
add
fbld
das
outs
repz
jne
cwde
dec
jg
push
cmp
cmps
or
std
or
bound
jmp
lahf
jmp
add
jmp
sbb
jno
or
pushf
arpl
dec
mov
xor
(bad)
fisub
dec
inc
jb
movs
dec
sbb
mov
sahf
push
add
rcl
dec
push
das
adc
outs
fist
rcl
div
cmp
jmp
or
push
in
jne
loope
ror
ins
add
sti
inc
arpl
push
scas
cmp
test
jp
stos
out
mov
push
cwde
mov
xor
jl
nop
inc
ins
jg
add
addr16
daa
and
jo
pop
cmp
outs
movs
jg
mov
push
aaa
sti
push
adc
push
das
les
xchg
xchg
or
inc
mov
imul
add
and
popa
jae
fs
repnz
pop
or
data16
shr
ins
pop
iret
adc
imul
jnp
into
pop
push
dec
adc
jmp
push
push
cmp
cwde
pop
xchg
aam
cs
xor
int3
out
push
cmps
clc
or
jge
cmp
pop
inc
repz
(bad)
ja
jge
test
std
adc
pop
push
popf
inc
in
mov
inc
add
jp
fdivr
movs
imul
lahf
imul
adc
sbb
sub
in
fldenv
fwait
ret
add
dec
mov
in
call
rcl
cmps
das
mov
jmp
cli
add
sub
jmp
and
sbb
push
xchg
or
mov
shl
dec
or
js
int3
cli
stc
test
mov
in
pop
mov
fcomp
jg
neg
adc
popa
cmp
hlt
mov
xlat
fdivp
jns
jmp
(bad)
call
shl
dec
xchg
xlat
mov
mov
popf
xchg
test
xlat
ins
scas
jmp
mov
push
outs
pop
lea
clc
bound
jo
mov
mov
or
out
jp
test
std
mov
scas
adc
jle
mov
mov
inc
jnp
add
pushf
jo
test
lods
sahf
dec
sbb
in
test
inc
push
pop
pop
cli
ds
repz
stc
inc
std
push
mov
push
push
push
jg
sbb
shl
mov
xchg
repz
jmp
xchg
cdq
ret
xchg
jge
adc
add
js
push
retf
sbb
scas
imul
and
mov
adc
movs
fcmovbe
std
ret
out
sahf
(bad)
outs
dec
idiv
adc
jmp
(bad)
cmps
pop
pop
imul
push
xchg
push
cwde
dec
scas
call
lea
sub
pop
mov
mov
sbb
repz
nop
jae
hlt
mov
inc
out
add
pop
pop
adc
stos
std
push
pop
jns
hlt
cmp
movs
cli
add
(bad)
push
jne
shr
and
adc
sub
addr16
lods
xor
int
pop
mov
stos
adc
pusha
cld
in
icebp
or
add
mov
jmp
into
mov
sbb
je
and
shr
jp
xchg
outs
sub
mov
out
mov
jns
cmc
dec
int
and
fisubr
lock
or
shr
ret
call
in
retf
mov
xchg
mov
inc
dec
stos
aas
outs
dec
xor
test
shl
mov
mov
and
sbb
jno
clc
pop
cmp
sub
xor
adc
bound
call
movs
push
mov
inc
xor
fsubr
ins
inc
bound
fbstp
dec
or
jns
in
xor
add
inc
pop
popf
in
push
fcmovnb
sbb
or
stc
dec
aaa
les
mov
pop
cmp
fidivr
ror
sbb
es
scas
adc
stos
dec
fcomp
mov
or
jo
scas
inc
test
(bad)
sub
xor
xchg
neg
xchg
fdiv
jo
pusha
or
or
mov
pop
stos
inc
xor
outs
jg
jne
push
adc
int
cs
sub
push
mov
xor
mov
outs
sub
(bad)
cli
cwde
mov
(bad)
mov
pusha
cmps
cmc
sub
mov
hlt
add
jo
jb
sbb
scas
adc
shl
cmp
adc
add
pop
nop
xchg
fwait
cmp
sub
add
aas
push
add
imul
imul
pop
sti
pop
rsqrtps
inc
dec
xchg
xchg
or
jbe
mov
rcl
(bad)
mov
lahf
and
in
lea
inc
imul
fwait
jne
sbb
push
mov
(bad)
fcmovnu
inc
stos
inc
sbb
fidiv
add
dec
stc
xor
das
mov
mov
cdq
jmp
mov
pop
jo
sub
and
mov
sbb
mov
fs
dec
mov
loop
jne
xchg
cmps
cmps
cmp
xchg
pop
shl
cdq
pop
mov
add
add
jecxz
fwait
(bad)
mov
sub
dec
(bad)
mov
call
(bad)
movs
sbb
shl
add
add
fbstp
add
cmp
fdiv
movs
clc
mov
xlat
nop
push
std
sbb
das
xchg
retf
das
adc
adc
add
xchg
push
jb
pushf
add
mov
xchg
xlat
stc
mov
and
hlt
dec
fidiv
iret
add
mov
movs
cmp
retf
sbb
jnp
jl
and
and
cmp
cmps
mov
cli
jge
adc
mov
mov
cmp
jl
retf
(bad)
xchg
cmc
and
cwde
mov
ds
out
inc
loopne
sbb
popf
cmp
pop
ss
fiadd
push
scas
psrad
jbe
sbb
and
cdq
add
les
ficom
out
lea
scas
mov
dec
lods
ins
mov
pop
(bad)
mov
pop
and
cmp
add
data16
push
leave
out
std
dec
fdiv
push
cmps
shl
out
jbe
cld
ret
int
and
stc
pop
xchg
inc
loope
icebp
test
jecxz
aaa
out
dec
inc
cwde
jo
outs
aaa
std
push
mul
in
mov
nop
aad
push
fnstsw
out
out
dec
mov
or
bound
movs
jne
and
sahf
add
inc
or
sub
adc
rcl
mov
data16
sar
retf
pop
mov
push
inc
cs
lods
lods
retf
cdq
cdq
pop
sbb
dec
cwde
dec
jae
sub
jmp
cwde
enter
pop
or
dec
shr
lods
out
sbb
lahf
dec
enter
pop
fistp
xchg
fucom
push
sub
mov
clc
inc
add
pop
mov
inc
lahf
mov
gs
pushf
lahf
add
cwde
aad
adc
fs
pushf
sbb
jge
call
xor
adc
cmps
test
movs
nop
arpl
mov
ds
mov
push
add
test
mov
sbb
push
enter
in
pusha
inc
int3
movs
add
pop
in
lock
repnz
adc
mov
push
sbb
mov
(bad)
jns
xor
retf
addr16
shl
scas
or
jecxz
pusha
pop
stc
inc
fstp
and
loop
push
retf
jle
aam
loop
xor
pop
mov
mov
repnz
ins
out
xchg
aad
test
or
jb
inc
fwait
mov
test
sub
pop
mov
or
push
aam
fsubr
retf
cdq
cmc
mov
sbb
gs
scas
mov
xchg
cmp
add
jle
dec
js
xchg
sbb
cmps
div
mov
and
mov
add
dec
test
outs
sub
push
cmps
or
call
das
push
jb
lea
ins
xor
cmp
test
xchg
xchg
jle
sub
lea
push
push
push
ins
out
xchg
jae
ret
int3
xchg
pushf
(bad)
pushf
in
data16
pop
int3
xchg
jb
inc
out
std
jnp
imul
jl
in
jne
sub
retf
jae
mov
je
sti
jne
out
jmp
scas
dec
cdq
jmp
xchg
pop
leave
jnp
push
fadd
mov
jle
jmp
adc
jno
xchg
pop
retf
push
sti
ja
int3
xchg
movs
xchg
cmp
data16
ins
pushf
cwde
lea
adc
xlat
xchg
fnstcw
je
repz
shl
adc
dec
dec
jecxz
cmp
pop
xor
mov
mov
pop
hlt
imul
push
(bad)
clc
push
sti
(bad)
clc
fsub
xchg
stos
cwde
pusha
cmp
xchg
add
pop
push
mov
xor
cmc
add
gs
cs
mov
push
gs
adc
ret
jge
jb
push
adc
xchg
test
mov
mov
xchg
adc
mov
xchg
mov
cmp
xchg
scas
mov
mov
and
or
push
lods
cmp
push
call
scas
(bad)
dec
(bad)
dec
jnp
mov
inc
mov
jmp
ror
mov
dec
push
icebp
cmove
stc
outs
fwait
inc
mov
je
xchg
dec
fwait
adc
xor
in
div
nop
push
sbb
push
push
cmps
std
and
std
arpl
ins
ret
mov
pop
leave
xchg
lea
adc
fldenv
xchg
jb
mov
jae
push
dec
cmp
call
(bad)
pop
add
das
jmp
pop
sub
pop
mov
jge
call
(bad)
sub
scas
push
sub
cld
push
(bad)
retf
js
pop
outs
sbb
xor
ins
daa
jl
pop
xor
das
xor
cmp
in
push
push
xchg
fwait
cs
adc
aam
and
dec
pushf
push
or
push
loope
into
ds
arpl
pop
mov
add
and
in
addr16
jge
test
mov
sub
mov
stc
cmps
test
fs
pop
add
or
mov
jbe
dec
xchg
imul
adc
ss
cdq
std
dec
add
enter
or
sub
inc
into
xchg
cwde
int
xchg
sbb
mov
and
add
fwait
loop
xchg
push
add
or
cmp
or
mov
jbe
cmps
(bad)
adc
dec
pop
adc
rol
popa
popf
(bad)
xor
js
cmps
sub
mov
pop
dec
shr
scas
jns
fs
jg
or
lahf
loope
sti
mov
jmp
add
loopne
fstp
ss
push
and
into
enter
push
adc
aas
sub
push
add
out
or
xor
and
pop
xor
xor
xchg
push
push
mov
mov
lds
xlat
neg
test
or
pop
cld
xor
imul
in
sub
mov
add
dec
adc
cli
mov
xchg
cmps
cmp
cmc
cmc
dec
mov
push
scas
mov
xlat
(bad)
out
push
arpl
fldcw
inc
xor
sbb
sub
sub
xchg
push
push
retf
mov
out
sbb
dec
xchg
test
pusha
jmp
retf
dec
jmp
pusha
std
adc
add
jb
sub
and
(bad)
out
inc
loop
ja
pushf
sub
retf
mov
fs
inc
sbb
dec
pop
fdiv
mov
mov
push
outs
out
stc
arpl
push
ins
add
test
lds
xor
dec
pushf
jmp
push
jne
adc
mov
es
jp
loope
push
sub
fisttp
shl
or
daa
xchg
or
fstp
int3
jnp
pextrw
test
or
mov
test
mov
push
mov
retf
push
jp
and
sub
pusha
xchg
xchg
rcr
mov
enter
jnp
mov
icebp
pop
jecxz
push
ss
cmc
mov
stos
sub
movs
or
cmp
shl
push
fs
sub
push
fwait
push
sbb
adc
sahf
pop
or
mov
mov
mov
sbb
cs
or
add
sahf
inc
sub
lods
mov
xchg
push
aas
mov
mov
add
mov
mov
adc
retf
and
ja
neg
xchg
lahf
loop
pop
sub
popa
mov
das
inc
leave
call
pop
jmp
mov
push
je
inc
pop
fisttp
es
int
fsubr
test
(bad)
(bad)
clc
mov
in
in
dec
ss
scas
aad
adc
test
jmp
jns
mov
fistp
es
jl
nop
mov
cmp
sub
mov
loope
push
sbb
sub
dec
ins
retf
mov
loop
push
add
fmul
ins
cmp
push
sub
aad
data16
idiv
retf
mov
mov
fs
sub
dec
push
fsubr
seta
ja
add
ins
push
mov
fld
into
loop
inc
popf
ins
idiv
das
xor
push
xchg
jae
mov
ja
mov
jae
sbb
popf
out
mov
jb
in
inc
(bad)
repnz
jno
sub
xchg
dec
mov
(bad)
mov
fistp
movs
and
add
push
test
(bad)
loopne
xchg
push
ror
xlat
dec
cmp
(bad)
fmul
and
jl
jmp
jns
or
inc
adc
push
pop
pop
mov
mov
adc
push
mov
xchg
hlt
loopne
adc
inc
mov
pop
dec
jns
lahf
mov
sahf
(bad)
shl
je
push
push
mov
inc
test
adc
sti
addr16
test
fisttp
and
es
(bad)
outs
fstp
rol
adc
test
pop
jae
push
nop
(bad)
mov
fisttp
loop
scas
out
es
push
sbb
inc
xlat
rcl
xchg
test
inc
call
test
cmp
nop
lahf
(bad)
aaa
jne
je
push
pop
test
je
sahf
mov
movs
loopne
out
mov
mov
mov
mov
mov
inc
inc
ins
adc
je
jmp
cdq
jae
outs
inc
and
lock
pop
loope
ins
add
fldenv
sbb
loop
push
mov
jns
jne
neg
dec
xchg
fdiv
gs
cli
aas
add
sbb
or
pop
xlat
scas
xor
or
fcomp
fisub
retf
cmp
mov
sbb
cmp
mov
lahf
lock
(bad)
cmp
lock
push
or
ret
(bad)
cmp
lods
dec
jl
cli
adc
ficomp
add
xor
sti
add
je
loope
stc
cmps
mov
sbb
aas
test
or
dec
mov
mov
ins
jb
retf
and
loop
pusha
retf
stc
stos
or
and
add
les
xor
mov
and
rcl
out
lds
daa
mov
mov
mov
arpl
enter
bound
mov
inc
cwde
stc
loope
sahf
movs
cli
popf
sti
out
sub
and
adc
out
push
ret
fisubr
dec
push
sbb
push
mov
out
add
imul
adc
into
push
sbb
or
or
or
shr
imul
rcr
sub
mov
jo
xchg
add
inc
and
pop
xor
dec
(bad)
jno
adc
push
rcl
cmc
sbb
xchg
(bad)
int
jo
and
inc
jmp
xchg
int
inc
xchg
xchg
add
(bad)
jae
bound
retf
push
fistp
mov
mov
pop
retf
ja
dec
jae
ret
iret
jecxz
dec
stos
movs
mov
pop
lods
cmp
or
jecxz
mov
out
and
mov
push
and
sub
cmp
mov
adc
popf
sub
dec
ja
mov
push
es
push
dec
pushf
jbe
push
dec
xchg
rcr
dec
outs
inc
pushf
cmp
shl
loopne
into
lods
dec
fnstenv
stos
cmps
mov
aaa
add
or
inc
jmp
mov
outs
cmp
and
bound
xor
push
sub
lea
retf
pop
shl
xor
repz
jb
repnz
xchg
mov
test
leave
stos
and
rcr
fld
iret
(bad)
mov
ret
jecxz
in
pop
lea
call
addr16
fldenv
fwait
sub
mov
lds
xlat
pushf
add
pop
in
stc
in
xchg
cmp
pop
xor
xchg
sub
fadd
out
mov
repz
fild
ss
ret
int3
clc
inc
mov
xor
mov
out
mov
mov
out
fisub
rcr
adc
fistp
xchg
sub
sub
(bad)
sub
shr
cmp
push
rcl
sub
and
mov
or
mov
retf
sbb
sub
retf
imul
test
cld
int
push
mov
mov
fst
jecxz
adc
cmp
mov
das
in
in
xchg
and
jecxz
xor
test
mov
or
jmp
(bad)
fsub
sbb
iret
cmp
sbb
push
daa
and
add
jp
cmp
fsubr
push
sahf
and
test
repz
in
clc
inc
imul
leave
inc
cwde
inc
(bad)
jge
and
mov
xor
fwait
icebp
jae
ins
loopne
inc
jp
mov
xchg
xor
pop
sub
jbe
out
cld
sub
dec
and
not
push
ss
dec
xor
mov
xor
test
ins
test
pop
mov
pop
test
jecxz
fwait
mov
test
or
daa
outs
hlt
jg
rcl
adc
adc
push
dec
test
xor
and
ss
fisttp
std
xlat
test
xor
dec
or
fdivr
dec
push
mov
lahf
test
add
pusha
mov
push
movs
xchg
mov
or
mov
ja
xor
dec
cmps
push
inc
not
mov
or
add
pop
or
sti
jge
leave
xchg
jb
out
lods
jmp
cmp
scas
ret
mov
inc
iret
(bad)
dec
jg
push
xchg
xchg
in
pop
ficom
test
gs
lods
jae
stos
xchg
lahf
or
popa
ret
or
fcomip
dec
pop
sti
add
clc
imul
and
mov
push
cmp
mov
or
addr16
cmp
repnz
dec
push
mov
xor
leave
int3
ja
ss
jb
ins
in
mov
mov
mov
add
mov
(bad)
jmp
mov
pop
or
sar
adc
adc
and
jo
jno
and
fcmovu
daa
fmul
data16
repnz
pop
ror
je
into
sub
(bad)
adc
movs
sbb
mov
cmp
imul
mov
addr16
icebp
out
fs
adc
sbb
mov
lds
iret
add
jge
or
call
cwde
sbb
mov
mov
cli
retf
ins
or
popa
shl
or
hlt
in
sbb
push
cmp
fwait
mov
xchg
or
shl
mov
lahf
mov
dec
jns
push
adc
(bad)
dec
jp
pop
sub
cmp
(bad)
gs
es
inc
push
push
(bad)
ins
push
loope
mov
ja
and
pop
push
shl
jb
mov
sbb
loope
in
jg
push
fcom
fwait
int3
cmp
sub
ret
pop
fwait
cmp
dec
imul
je
popf
inc
repnz
fistp
outs
jecxz
and
loopne
inc
add
mov
mov
jle
loop
mov
sbb
cwde
out
adc
stc
not
popf
out
mov
pop
mov
xor
aad
fmul
cmp
sets
data16
popa
(bad)
out
(bad)
sbb
dec
cmp
mov
pop
fwait
mov
ficom
xchg
mov
dec
std
daa
stos
jl
test
movs
xchg
leave
(bad)
out
xor
loop
cld
aaa
(bad)
movs
nop
jge
mov
push
cmp
test
sbb
loop
ja
sub
or
neg
fbld
mov
sub
and
mov
retf
ret
shl
xor
out
leave
nop
test
movs
jae
aas
jmp
or
xor
movs
jmp
(bad)
pop
jbe
inc
mov
int3
mov
stos
mov
mov
sub
imul
shr
sub
or
pop
pop
push
cli
fstp
jns
dec
pop
or
sbb
loope
pop
popf
sub
mov
push
ss
pop
cli
enter
sub
out
jb
push
iret
mov
cmps
mov
aam
cmp
pop
xchg
leave
dec
(bad)
retf
aas
addr16
jmp
test
and
dec
(bad)
jnp
int3
dec
(bad)
adc
adc
das
and
and
xchg
(bad)
dec
das
cmp
fs
addr16
push
bound
cmp
imul
popf
push
out
cdq
mov
icebp
fisub
adc
jmp
pop
mov
mov
adc
sbb
inc
test
inc
pop
sbb
and
call
inc
jl
scas
push
mov
adc
xor
mov
pop
xchg
xchg
inc
(bad)
ja
mov
jmp
push
pop
ss
jnp
loope
add
push
jp
xchg
jb
cwde
hlt
not
xchg
cwde
jp
or
repz
iret
jo
std
(bad)
nop
dec
scas
(bad)
out
add
enter
jb
cs
dec
dec
add
mov
mov
xlat
rcr
and
adc
arpl
fcomp
jae
hlt
fstp
mov
mov
xchg
inc
lahf
addr16
iret
sub
fnsave
mov
das
ror
lock
xchg
das
push
mov
xlat
popa
mov
pop
fnsave
xchg
repz
fucomp
pop
and
fdiv
add
repnz
(bad)
fnstcw
repnz
cmps
or
push
aad
retf
inc
je
and
and
sbb
shl
int3
inc
mov
sti
stos
inc
adc
clc
xlat
add
sbb
pmaxub
scas
or
nop
jecxz
jno
enter
es
sub
lea
(bad)
push
adc
scas
clc
push
sub
pop
mov
add
or
xor
daa
iret
and
and
mov
lods
xor
pop
sbb
shl
fld
sti
cmps
cwde
mov
(bad)
fistp
pop
aas
loop
push
pop
(bad)
and
jp
bound
clc
cdq
jl
mov
call
sti
sbb
mov
fld
jb
inc
mov
(bad)
popa
mov
mov
dec
cmc
and
add
(bad)
mov
es
in
(bad)
das
lahf
shl
pop
add
mov
aam
sub
push
je
xor
cmp
push
inc
add
xchg
cmp
mov
adc
push
mov
mov
add
sub
or
pop
xchg
xor
push
ins
daa
outs
xor
xor
call
xchg
stos
xchg
in
push
pop
inc
jae
sti
test
in
fs
cdq
push
and
gs
imul
outs
fsub
iret
dec
xlat
pusha
jmp
push
fwait
or
cwde
mov
inc
shl
(bad)
push
cmp
jbe
sub
add
aas
cmp
fisub
mov
inc
call
xor
mov
lds
xor
xor
pop
aad
popf
xchg
cld
popa
fild
cmp
sub
test
movs
mov
outs
test
pop
and
popa
inc
je
je
pop
(bad)
std
iret
mov
push
dec
call
aad
add
sbb
(bad)
pop
arpl
daa
loope
popf
push
ins
test
loop
xor
int3
out
push
and
cmp
out
adc
pop
aaa
xchg
cmp
mov
(bad)
jge
aaa
xchg
dec
fld
or
push
nop
dec
add
js
sti
popa
mov
xchg
ret
sub
je
lds
xchg
mov
ror
jp
ret
outs
int
mov
or
out
imul
test
mov
xlat
fistp
test
std
and
in
cmps
cmps
mov
jp
mov
in
(bad)
fs
xchg
out
call
movs
or
xchg
(bad)
fsub
sub
aad
std
adc
sbb
add
ror
pop
push
rol
mov
or
cmp
inc
xchg
mov
aad
aaa
cmps
fidiv
jmp
shl
mov
inc
fisttp
or
mov
push
cs
pop
xchg
fucom
out
xor
jns
jmp
rcl
cmp
mov
push
pop
cmp
leave
push
jmp
xchg
mov
addr16
out
outs
mov
imul
or
fmul
in
aad
fs
inc
rol
lock
inc
lods
ror
inc
adc
xchg
ins
or
ins
pop
imul
adc
mov
jb
xchg
out
(bad)
dec
jmp
jmp
shl
inc
jno
div
inc
aaa
pop
xor
xchg
lea
jb
mul
jmp
mov
ss
or
jmp
push
test
sub
daa
imul
mov
jno
sbb
sti
in
in
xchg
ins
pop
mov
push
push
pop
pop
stos
dec
xchg
movs
xor
or
shl
xor
aam
inc
push
ss
fidiv
push
outs
data16
mov
mov
push
jne
push
pop
mov
mov
cmc
jmp
repz
xlat
popf
inc
out
add
test
call
jne
mov
pop
adc
loope
mov
xor
je
bound
inc
cwde
adc
mov
mov
adc
mov
pop
int
push
inc
lea
loopne
call
fbstp
aaa
pop
and
out
and
mov
in
loop
inc
stos
xchg
rcl
cmp
sub
jmp
mov
mov
add
push
pusha
lahf
lods
aaa
sbb
(bad)
loop
pop
mov
sbb
xchg
jo
sbb
(bad)
mov
push
or
jnp
jmp
jge
cmp
xrelease
out
xchg
imul
sahf
xchg
jg
out
pop
es
sbb
bnd
xchg
ss
fstp
hlt
cwde
retf
xlat
mov
mov
or
cmp
and
mov
stos
imul
mov
fdivr
dec
add
add
movs
jns
push
add
test
jb
sbb
mov
dec
push
aas
or
cld
lahf
xchg
inc
leave
test
xor
push
xchg
mov
push
pop
fisubr
clc
push
bound
add
sbb
cmp
cmps
pop
idiv
or
das
inc
xchg
mov
xor
push
cmp
sbb
lods
pop
rcr
in
movs
mov
sub
retf
lock
mov
clc
adc
mov
mov
push
(bad)
icebp
mov
mov
pusha
ret
pop
push
pop
jno
std
jns
push
sbb
lahf
or
push
adc
(bad)
sub
(bad)
loope
clc
out
push
mov
lods
dec
faddp
and
dec
or
add
aaa
add
mov
jae
pusha
imul
out
mov
(bad)
cmp
fwait
gs
ficom
pop
sti
popa
xchg
call
(bad)
cmp
add
popf
sub
shl
pop
sahf
das
shr
test
xor
cmp
sub
cmp
mov
mov
jge
push
push
or
idiv
jnp
fisub
stc
xor
(bad)
xchg
sbb
sub
mov
pop
ins
pop
pop
adc
adc
xchg
sar
ins
shl
mov
and
lahf
in
cmps
pusha
adc
sub
cmp
xor
bound
sub
xchg
and
jg
pusha
mov
mov
mov
addr16
fdiv
xor
and
push
pop
bound
arpl
or
adc
xchg
sbb
fwait
mov
mov
stos
push
inc
jb
cmc
(bad)
sub
sar
adc
dec
cmp
xor
aad
int3
sar
(bad)
stos
or
jns
mov
mov
push
call
jecxz
test
retf
int
mov
jmp
jl
jp
xchg
add
fcmovnb
ja
add
loope
into
pop
das
xor
adc
and
dec
inc
out
pushf
popa
pavgb
push
pop
fcom
push
lock
pop
pop
sub
sbb
mov
mov
(bad)
jo
fucomi
stos
movs
pop
gs
idiv
and
mov
mov
fmul
mov
(bad)
jmp
retf
arpl
and
cld
imul
nop
retf
(bad)
daa
iret
mov
xchg
shl
rcl
je
pop
je
cmp
mov
int3
pop
xchg
cmp
pop
or
jb
outs
leave
mov
jnp
jp
xor
aaa
push
inc
fild
shl
pop
ret
nop
adc
(bad)
ret
(bad)
cdq
out
std
out
movs
jno
sub
pop
fbld
div
lea
push
fisttp
and
mov
or
jbe
ret
push
pusha
push
pop
dec
push
inc
pop
mov
shr
dec
xchg
rol
or
std
push
outs
sbb
cld
int
neg
sar
and
fadd
nop
push
sub
xor
iret
lods
adc
or
ins
aad
imul
stos
(bad)
sbb
mov
call
inc
inc
mov
ss
mov
dec
push
push
out
push
cs
inc
pop
dec
pop
jp
xor
push
xchg
xchg
iret
in
mov
(bad)
ror
sub
outs
push
stos
enter
dec
outs
sub
mov
rol
aad
xor
mov
out
test
push
inc
sbb
push
sbb
xchg
sbb
bswap
scas
cmps
xlat
in
xor
gs
fild
les
out
inc
retf
or
mul
jae
adc
mov
xor
mov
pushf
and
idiv
in
and
mov
pop
push
jp
jmp
es
lea
sub
das
loop
inc
sbb
stc
outs
imul
test
pop
and
xchg
mov
push
mov
push
(bad)
ins
in
retf
mov
cmp
adc
push
loope
cmc
adc
outs
mov
mov
dec
fidivr
(bad)
hlt
ja
or
stos
cmp
jns
in
push
loope
je
loop
dec
xor
call
dec
push
push
inc
xchg
cmp
lods
idiv
sbb
mov
cli
fs
bnd
inc
mov
xchg
push
ins
shr
xchg
jns
mov
mov
test
or
xor
es
push
dec
xor
mov
sub
mov
rol
mov
(bad)
mov
inc
mov
in
push
mov
fucomp
xor
mov
add
cdq
push
mov
adc
out
imul
add
ret
dec
mov
and
aam
in
cmp
scas
jge
fsub
pop
es
lea
scas
cmc
mov
loop
lahf
addr16
pop
outs
pop
inc
add
pop
xor
stos
push
and
mov
jo
rcr
add
xor
jb
pop
sbb
pop
sti
push
lahf
shl
jle
lahf
sbb
(bad)
push
stc
cmp
int
push
sbb
scas
jae
(bad)
leave
mov
inc
and
cmp
(bad)
fist
mov
jp
retf
pop
add
dec
add
enter
cli
push
or
push
mov
inc
xchg
mov
shl
enter
in
xchg
jge
add
fild
leave
rol
fisttp
push
xchg
into
ror
int3
jge
icebp
(bad)
jbe
sti
xor
cmps
sbb
dec
push
xchg
add
pop
cmp
div
adc
inc
and
mov
dec
mov
movs
mov
lods
in
add
(bad)
jae
cmp
cmp
jmp
dec
cmp
sbb
inc
(bad)
jecxz
inc
jbe
scas
adc
test
cmp
repz
icebp
mov
mov
fcomi
cwde
mov
pop
dec
inc
stc
sbb
xchg
xrelease
mov
lahf
xor
sbb
xchg
xor
jbe
out
xor
cmp
xlat
push
ins
push
dec
ins
mov
push
push
xchg
call
jnp
cmp
pushf
mov
mov
fisubr
sar
and
xor
cmc
clc
fisub
jbe
lods
cmp
xor
pop
fcom
jg
imul
sbb
aas
(bad)
(bad)
jns
ins
push
pop
adc
push
sub
pop
popa
dec
out
out
mov
cdq
std
test
xlat
inc
push
and
add
outs
mov
jl
(bad)
jnp
idiv
sbb
outs
add
push
mov
inc
xchg
imul
inc
movs
or
or
cmp
pop
sti
les
ins
mov
inc
sbb
ficom
loope
adc
mov
(bad)
mov
inc
outs
and
test
jmp
data16
xor
cmps
imul
or
mov
imul
repz
fwait
jp
mov
mov
inc
lds
shr
mov
add
outs
pop
das
push
cmp
push
xor
cmp
out
data16
adc
pop
daa
imul
jo
jecxz
(bad)
bound
push
popf
popf
daa
lahf
rol
xor
cmp
into
leave
imul
mov
shl
push
icebp
sub
pop
push
adc
sub
lock
stos
fadd
lahf
pop
pop
adc
inc
(bad)
push
mov
push
mov
xor
sub
ret
sbb
scas
shl
push
adc
add
aas
sub
xchg
aas
xchg
adc
das
jne
xchg
scas
inc
add
shl
adc
inc
inc
adc
ficom
jns
call
mov
inc
mov
retf
push
neg
rol
fsubr
into
cmp
xor
inc
sub
pop
mov
add
xchg
outs
aaa
xchg
mov
je
test
movs
xor
adc
jno
stos
jno
nop
jle
clc
sub
sbb
mov
sahf
mov
call
sbb
call
gs
fs
cdq
xor
add
inc
add
hlt
cmovno
dec
lea
jns
mov
loopne
pop
(bad)
fmul
call
fs
popf
ds
hlt
str
fdiv
sahf
and
pop
std
out
shl
xchg
and
lds
imul
xlat
push
add
(bad)
aam
cmp
or
or
inc
cmp
pusha
dec
mov
dec
add
sbb
js
xchg
mov
sub
inc
retf
rol
adc
xchg
(bad)
je
add
jno
int
retf
das
ror
and
sahf
mov
pushf
and
movs
xor
adc
adc
push
scas
sbb
sbb
out
sub
dec
mov
fidivr
aas
mov
call
ss
aam
push
frstor
lds
cs
or
ror
jle
xor
and
push
loope
mov
push
fist
cld
inc
jle
lock
and
jns
shl
shl
or
aaa
fist
push
push
xor
xor
imul
test
push
das
loop
(bad)
in
lock
jbe
jae
mov
dec
jb
xor
fwait
push
(bad)
jb
aaa
mov
adc
push
addr16
das
cwde
sub
jb
adc
nop
push
aaa
sbb
fld
mov
xor
fwait
dec
inc
sbb
lds
sbb
jae
dec
out
loopne
dec
push
push
inc
xchg
div
stos
add
mov
mov
jb
fdivr
lds
xor
inc
sub
sbb
div
adc
mov
ds
lods
sbb
add
jp
or
ins
out
loop
and
lahf
mov
or
and
and
lea
(bad)
retf
mov
jp
push
inc
cmps
adc
mov
cmps
jae
sub
sbb
mov
jmp
jns
cmp
mov
cmp
gs
inc
mov
stos
les
rcr
mov
push
ins
dec
(bad)
jmp
xchg
push
or
stos
xchg
or
mov
sti
xor
shl
xchg
imul
xchg
popa
push
cmp
enter
rcl
add
dec
in
shr
test
xchg
cmp
loop
inc
jns
jmp
and
fldln2
dec
push
and
mov
push
mov
and
and
or
jecxz
movs
add
push
std
mov
(bad)
jg
lds
mov
mov
or
arpl
int3
sub
mov
mov
jge
sahf
xchg
xor
push
push
mov
push
push
adc
dec
mov
jnp
pop
outs
cmp
in
jle
adc
fcomip
adc
xlat
ins
add
pop
xchg
and
(bad)
or
cmp
push
sahf
test
pop
aaa
dec
cmp
lea
outs
aam
stos
and
lea
in
mov
out
loope
in
jns
and
ror
jmp
mov
fcom
push
and
ror
rol
add
mov
xchg
test
sbb
or
arpl
lock
rol
das
pop
and
or
inc
stos
jg
pop
movs
cmp
xchg
adc
mov
loop
pop
je
(bad)
clc
mov
mov
outs
add
push
or
xor
retf
adc
iret
pop
jmp
arpl
(bad)
sbb
test
mov
or
sti
hlt
push
test
and
jnp
outs
ins
jmp
pop
in
or
mov
adc
and
cmp
fld
sub
mov
jl
jae
dec
jg
add
or
xchg
push
mov
xlat
cmp
dec
mov
jns
sub
ss
jmp
cmp
mov
fmul
(bad)
sub
bound
mov
mov
add
cwde
test
loopne
sbb
fld
popf
sar
push
inc
mov
shr
cdq
xor
sub
mov
adc
cmc
iret
dec
push
adc
jae
shl
push
jle
cwde
jne
adc
adc
retf
push
jne
mov
(bad)
imul
push
mov
sub
mov
ins
(bad)
std
pop
in
loopne
xor
push
aad
mov
ins
pop
in
sbb
cdq
add
push
fadd
mov
inc
cmp
mov
mov
push
movs
pop
movs
cmp
sbb
adc
outs
(bad)
push
and
jo
fwait
dec
push
mov
in
add
sbb
fcomp
(bad)
arpl
div
lods
dec
push
es
jmp
jmp
sub
not
pushf
jbe
pop
cld
jb
in
loop
scas
push
addr16
les
outs
push
sub
cmp
dec
dec
fisttp
or
ret
imul
mov
clc
add
aaa
(bad)
aaa
xor
or
neg
mov
push
lahf
adc
std
imul
and
jmp
sub
sub
je
shl
in
ret
push
push
xor
or
retf
aad
psubusw
cs
mov
cmps
outs
jnp
sub
sahf
cmp
xor
ds
imul
jl
aas
inc
scas
push
push
inc
cmp
xchg
push
xchg
movs
stos
data16
mov
cmp
ins
outs
jmp
shl
xor
out
mov
push
stc
cmp
or
sbb
adc
(bad)
mov
cmp
dec
mov
adc
lock
jns
push
jmp
dec
sti
inc
mov
pop
mov
or
mov
jb
mov
cmp
pop
mov
dec
adc
retf
or
mov
xchg
inc
or
jb
pop
mov
movs
fsub
cmp
jae
sbb
aam
in
push
ror
adc
repz
cwde
adc
adc
xchg
je
push
or
cmp
pusha
pop
ds
jmp
imul
mov
aam
daa
(bad)
mov
xchg
or
add
xchg
nop
rcr
jl
imul
inc
sbb
sub
lods
xchg
fidivr
mov
pop
iret
imul
sbb
xor
push
add
movs
xchg
mov
mov
mov
push
cli
leave
jno
aad
xchg
xor
retf
push
ds
in
mov
inc
mov
cmp
mov
mov
pop
js
adc
mov
idiv
sar
ins
mov
ss
sbb
add
fwait
pop
lods
jns
jmp
das
mov
or
dec
jne
xchg
mov
fldenv
add
mov
adc
and
fadd
iret
jne
mov
mov
cdq
mov
int3
js
ret
lods
pop
jne
or
pop
mov
movs
pop
xchg
iret
add
jne
bound
mov
daa
fs
aaa
std
ret
pop
scas
or
jmp
popf
sbb
mov
mov
ds
push
fdivr
popa
and
(bad)
inc
xlat
pop
std
inc
push
cmp
sbb
mov
xchg
sbb
and
dec
movs
jb
inc
mov
mov
mov
pop
cmp
retf
(bad)
shl
and
add
mov
push
push
loopne
into
je
and
or
push
push
shr
mov
xchg
cmps
loope
add
cmp
dec
cwde
or
push
outs
pusha
pop
sbb
pushf
aam
mov
dec
sub
in
sub
repnz
add
inc
cdq
retf
fdivr
loopne
test
xor
test
mov
add
cmp
and
inc
jmp
pop
loopne
ins
outs
cld
mov
pop
stos
retf
scas
or
div
int
pop
xor
gs
mov
ins
or
and
xor
jno
xchg
aam
pop
add
int3
push
sti
add
lahf
inc
int3
push
jae
daa
aaa
xchg
(bad)
jge
rcl
or
(bad)
push
and
mov
sbb
(bad)
push
mov
mov
fisub
arpl
pop
or
xor
aaa
pop
test
test
sub
add
retf
aas
dec
inc
xchg
arpl
mov
test
add
push
mov
pcmpeqb
das
dec
mov
sar
enter
cs
pop
jne
rol
js
jmp
xchg
rcr
sbb
cwde
call
sti
or
inc
sub
or
and
loopne
ror
nop
(bad)
jmp
arpl
out
cwde
add
mov
mov
inc
stc
cwde
movs
and
mov
stos
mov
and
ret
push
push
push
dec
jle
or
push
fistp
out
inc
sbb
dec
addr16
inc
xor
call
int
mov
imul
cwde
xor
and
adc
in
xor
aam
popf
sub
cmp
dec
shl
cmps
mov
mov
in
sub
xchg
push
xor
adc
stc
jmp
(bad)
fnstsw
pop
aaa
and
sub
or
lock
enter
cwde
scas
push
ja
mov
xchg
imul
(bad)
inc
sub
fdiv
daa
sti
arpl
lods
ror
mov
lds
push
and
adc
cmp
or
ret
jle
inc
imul
push
inc
cmp
(bad)
js
adc
loopne
scas
push
ffree
inc
push
adc
cmp
adc
mov
stos
mov
sub
and
push
fistp
jle
cmps
fimul
lds
mov
pop
rcr
jb
mov
ret
or
icebp
push
dec
jbe
jns
dec
js
js
or
loop
aaa
popa
push
ins
mov
rcr
sar
mov
adc
mov
enter
fwait
jge
ror
pop
sub
dec
xor
cld
mov
leave
sub
inc
inc
dec
pop
test
inc
xor
push
and
call
jmp
sub
inc
inc
cmp
xor
push
ins
clc
or
mov
dec
test
fwait
shl
pop
mov
mov
mov
jge
stos
add
test
jmp
push
stc
repz
daa
push
xchg
mov
stos
adc
in
xor
cli
add
(bad)
mov
adc
jl
and
je
dec
cmps
xchg
aad
movs
cmp
xor
call
pop
add
add
fnstsw
mov
mov
outs
adc
(bad)
icebp
in
mov
push
stc
xor
dec
aas
mov
out
and
pop
jmp
mov
jbe
aas
push
jnp
popa
es
pop
mov
rol
mov
lea
loope
mov
mov
aam
sbb
repz
(bad)
ins
xor
cmc
jle
add
adc
pop
lods
xchg
call
cdq
clc
add
inc
and
fiadd
(bad)
out
outs
mov
jb
fucomip
aas
xor
cmp
movs
lods
mov
and
jle
retf
and
enter
aas
cmps
test
in
cs
stos
pushf
push
out
dec
lods
enter
sub
or
dec
leave
imul
in
ret
push
fisub
data16
bound
push
cs
push
fild
jp
xor
cmp
mov
ja
inc
into
dec
ret
xor
pop
in
mov
fcos
and
pop
dec
in
enter
xchg
lds
je
adc
add
sub
imul
(bad)
inc
or
mov
jns
idiv
outs
jbe
xchg
cmps
clc
popa
lods
loope
xchg
loopne
jecxz
mov
test
vpsubw
enter
mov
lahf
pop
fmulp
push
inc
dec
mov
mov
ret
aam
fcomp
out
mov
xchg
test
aad
retf
or
movs
pop
stc
push
mov
hlt
repnz
or
mov
jl
add
cmp
push
cmp
dec
sbb
sub
loopne
fdivr
fdivr
(bad)
dec
ins
inc
or
dec
out
adc
mov
test
sub
daa
mov
xchg
cmp
push
fisub
adc
movs
lods
daa
lds
add
mov
and
jne
(bad)
inc
loop
call
jmp
into
test
(bad)
cmp
sub
call
mov
std
shl
call
mov
mov
pop
test
pop
and
push
jl
daa
outs
imul
jb
ja
add
lahf
scas
pop
sbb
nop
cmp
jmp
js
in
jbe
outs
icebp
push
mov
mov
pop
and
pop
call
sub
fimul
or
pop
shl
pop
jno
pop
scas
push
mov
add
sti
sub
inc
jno
push
jo
and
xchg
sub
mov
push
shl
adc
fsubrp
jo
and
fisttp
xor
mov
mov
imul
jne
sahf
dec
pusha
jnp
test
sbb
jns
js
inc
pushf
cmp
mov
mov
leave
das
xchg
(bad)
fadd
xor
mov
das
icebp
loop
inc
daa
add
jge
cmps
test
or
repz
fcom
jge
or
lds
shr
inc
dec
call
dec
inc
jae
mov
mov
jbe
jb
sar
lods
repz
daa
aam
cmp
sub
jl
sub
sar
int3
mov
push
call
ficomp
jg
xor
fsubp
mov
or
push
xor
sub
jae
push
ficom
cmp
stos
sbb
popf
push
js
mov
xor
fmul
cmp
scas
popa
shl
jne
cs
sbb
aam
xor
ins
cmp
fbstp
adc
dec
pop
fsub
push
pop
xor
and
sbb
in
adc
add
ret
out
psubb
(bad)
and
aad
loop
icebp
test
mov
(bad)
int3
cdq
cli
mov
in
ins
fsub
pop
adc
stos
inc
or
retf
push
cs
push
jbe
push
and
stc
lock
mov
pushf
mov
ja
aad
mov
movs
retf
xchg
sti
nop
xchg
fild
int3
out
add
jp
mov
fisttp
lock
leave
gs
(bad)
or
push
mov
adc
aaa
xchg
cmc
movs
loopne
jmp
shr
stc
stc
or
jne
sbb
or
scas
pop
test
sbb
int
sbb
imul
rcr
inc
dec
pop
adc
retf
dec
(bad)
loopne
add
add
pop
jbe
pop
jne
mov
adc
outs
pop
int3
xor
adc
add
fcom
ret
(bad)
jmp
icebp
inc
int3
pop
and
xchg
cwde
outs
or
test
cmp
retf
jmp
xchg
mov
or
jmp
ins
stos
and
cmp
and
cld
(bad)
push
repnz
sub
inc
or
and
and
jno
jp
jecxz
data16
jmp
clc
lock
lods
jo
lods
test
(bad)
aam
vpsubq
jge
fidiv
adc
xlat
adc
outs
retf
jecxz
dec
mov
scas
and
add
aaa
adc
mov
inc
push
jp
mov
mov
mov
ja
aaa
adc
cmp
xchg
mov
scas
mov
in
cmp
jmp
call
xor
and
and
or
and
xor
cmp
xchg
ret
ror
mov
(bad)
je
popa
imul
mov
push
dec
stos
pop
les
and
or
js
dec
add
(bad)
in
push
pop
cmp
rcl
jge
push
out
out
ret
pop
inc
pushf
adc
out
in
jmp
jo
mov
jp
add
fidiv
scas
stc
jp
repz
xchg
cdq
fadd
add
sub
pop
retf
aas
sub
or
jns
push
inc
jo
lea
movs
push
push
jle
out
fucomp
shl
jno
dec
push
push
bnd
aam
sbb
scas
adc
daa
repz
cmp
or
mov
xchg
push
adc
pop
stos
loop
sub
mov
fild
jo
push
inc
(bad)
call
jns
test
mov
pop
mov
jb
and
jmp
call
movs
daa
cmp
mov
mov
icebp
cdq
xor
lds
jmp
in
inc
out
out
retf
loopne
or
loope
cmp
pop
and
(bad)
push
sbb
repnz
(bad)
iret
jge
std
xchg
in
out
add
imul
call
dec
sub
fwait
jne
rol
sub
cs
and
adc
pusha
lds
test
outs
popf
loopne
fnstenv
adc
bound
enter
and
gs
and
jmp
adc
cmp
test
lods
push
push
adc
shl
out
mov
mov
outs
add
add
(bad)
xlat
pushf
in
fnstenv
shl
test
outs
mov
mov
sub
lock
popf
push
daa
js
retf
and
sbb
ins
inc
stos
jb
enter
int
xor
mov
add
fmulp
mov
sub
setns
and
jne
scas
push
imul
or
aaa
pop
jno
in
mov
push
ret
daa
mov
or
leave
repnz
push
das
ja
pop
cmp
in
ror
enter
inc
out
mov
ins
add
sbb
(bad)
mov
xor
repz
loop
mov
inc
xor
mov
dec
cli
sub
inc
lahf
rcr
out
or
dec
popf
mov
stos
repnz
test
push
daa
mov
in
vandnps
inc
cmp
mov
xchg
mov
and
loop
mov
mov
xor
cmp
or
cmp
jne
mov
adc
sub
aam
scas
sbb
imul
cmp
cmp
push
jne
jo
repnz
jecxz
dec
sbb
jnp
fs
jno
fisub
(bad)
push
sub
out
push
jno
pop
jl
fsubr
push
ds
inc
push
pop
mov
jle
sbb
xchg
je
or
mov
sub
mov
mul
bound
mov
cmp
sub
movs
pushf
jge
lea
mov
mov
data16
mov
call
fimul
and
mov
outs
sbb
int3
mov
or
mov
add
iret
movs
adc
ins
mov
xchg
mov
xchg
jb
xor
jns
dec
pop
pusha
inc
repz
lods
dec
xor
enter
and
xchg
addr16
xchg
lea
jle
push
outs
retf
jo
bound
repnz
jns
mov
xchg
fisttp
inc
dec
add
mov
cli
jns
(bad)
xor
pop
and
pushf
out
add
imul
mov
sub
lods
xor
daa
dec
ins
retf
sbb
aam
retf
adc
dec
xchg
pushf
nop
mov
shr
addr16
data16
out
stos
xchg
(bad)
push
jecxz
ins
pop
push
push
or
jp
mov
jb
(bad)
into
scas
out
test
scas
mov
and
sub
adc
lods
add
sub
fisubr
(bad)
movs
imul
out
mov
aam
mov
loopne
nop
test
and
outs
idiv
mov
frstor
cmps
fwait
outs
xor
mov
ins
add
push
scas
or
scas
lea
inc
sub
ficom
cmp
sbb
sub
xlat
mov
test
mov
cmp
movs
jmp
mov
popa
mov
loop
jge
lock
jnp
scas
mov
repnz
mov
daa
aas
pop
lock
inc
xchg
and
mov
out
(bad)
xchg
xlat
addr16
mov
out
adc
ins
dec
sub
mov
adc
inc
jno
aad
fcomp
bound
sbb
sbb
pushf
clc
cmp
sub
arpl
sti
dec
es
or
pop
cmp
or
scas
adc
jmp
inc
movs
jmp
loope
das
dec
mov
mov
mov
ret
jcxz
fst
repnz
cld
xor
or
sbb
mov
or
push
pop
out
push
movs
add
lds
test
int3
hlt
inc
imul
in
test
add
and
repnz
and
cmc
imul
sar
ss
mov
pop
jl
inc
mov
push
fstp
lock
mov
or
jle
push
data16
push
scas
pop
ss
xor
pop
sub
lock
and
div
jnp
lods
xlat
mov
pop
cmp
std
and
mov
push
inc
add
cdq
sub
out
(bad)
fdiv
inc
retf
sub
icebp
loopne
adc
and
fiadd
push
fist
sbb
dec
pop
das
loopne
imul
test
mov
xor
mov
add
mov
cmp
add
arpl
pop
xchg
sub
dec
les
jecxz
push
jmp
pop
loopne
push
scas
adc
mov
pop
ret
lods
cmp
mov
xor
test
stc
mov
arpl
in
fist
jo
mov
or
mov
ss
pop
cmc
movs
(bad)
repnz
mov
ins
out
ins
hlt
adc
and
cmp
repz
or
jne
lds
adc
xor
imul
mov
pop
ds
movs
jmp
fs
in
push
pop
mov
das
les
rol
push
xchg
das
inc
jbe
(bad)
sub
adc
imul
inc
in
or
outs
xchg
cld
or
jb
jmp
inc
jecxz
sub
lods
or
push
or
loope
inc
mov
push
lods
in
mov
ret
mov
or
xchg
sub
ins
xchg
je
and
movs
ja
pop
mov
mov
call
sub
int
int
jmp
cmp
cs
les
out
dec
push
shl
fnsave
jg
js
sbb
jp
cmps
sub
and
cmp
lods
stos
xchg
sbb
add
out
push
cmp
add
cmp
xor
movs
dec
sahf
repnz
sbb
pushf
sub
inc
jg
add
sbb
lahf
pop
push
out
xlat
fmul
shr
not
add
xor
sub
outs
xchg
int
jl
sbb
pop
adc
and
mov
jne
call
aaa
inc
and
mov
jecxz
cli
int
inc
aas
loope
ins
xor
dec
out
cmp
enter
stos
ins
and
cli
movs
jmp
push
push
(bad)
repz
sbb
pop
and
dec
cmp
jl
and
adc
add
or
adc
ds
jl
sub
in
pop
mov
mov
push
mov
mov
popa
cmps
mov
push
ins
fst
cdq
cmc
fild
loope
ror
cmp
xor
faddp
pop
rcr
cmp
loope
shl
add
push
xlat
(bad)
out
mov
add
jle
sub
or
cs
arpl
mov
xchg
ret
or
ret
dec
sbb
xchg
mov
outs
inc
int3
xchg
jl
and
dec
or
(bad)
push
mov
xchg
icebp
dec
pop
sbb
test
cmp
add
hlt
pop
ins
nop
(bad)
mov
icebp
cwde
addr16
add
cmp
adc
mov
sub
cli
mov
xor
cmp
test
cmp
(bad)
loopne
into
loopne
and
fimul
mov
call
adc
shl
mov
jb
pop
retf
out
in
loop
fidivr
and
adc
inc
enter
jo
movs
push
add
es
push
hlt
jp
and
mov
jmp
nop
mov
push
loop
scas
jb
outs
retf
add
mov
mov
out
inc
out
loope
push
fcmovbe
add
pop
(bad)
outs
push
fcmovnu
stc
pop
or
xor
mov
pop
sub
repz
jg
scas
xchg
push
pop
and
pop
leave
int3
add
jbe
pop
div
repz
mov
sub
ja
iret
in
jl
mov
or
and
dec
dec
pushf
dec
adc
or
scas
adc
into
hlt
pop
aaa
and
jmp
push
jb
jne
gs
adc
ja
inc
pushf
inc
stos
nop
mov
rol
imul
std
sub
push
xchg
pop
cmp
mov
pop
jle
or
cwde
(bad)
dec
xchg
fstp
leave
icebp
rcr
pop
cs
bound
xchg
push
pop
pop
call
jmp
loop
cmps
add
out
adc
and
mov
scas
and
rcr
xor
xchg
imul
shl
xor
xor
sti
adc
cld
cmc
mov
push
inc
xchg
xchg
adc
and
jbe
hlt
jbe
cli
fbld
movs
leave
jo
test
cmp
iret
sub
(bad)
xchg
or
and
mov
(bad)
ds
aaa
xor
sahf
enter
jp
sti
xor
loope
jb
push
xchg
sar
pushf
loop
repz
add
(bad)
es
sahf
(bad)
movs
fcom
std
shl
cmp
cwde
fidivr
pop
lds
das
cmp
fmul
xor
imul
iret
scas
ds
imul
push
ja
pop
or
enter
ret
pop
dec
or
enter
mov
jns
repnz
imul
push
jb
mov
mov
test
int3
xchg
mov
loop
test
add
inc
cmps
jno
repz
mov
mov
push
xor
jno
mov
les
add
lds
out
inc
inc
dec
sbb
cmp
inc
sbb
(bad)
jb
push
lahf
inc
adc
jmp
mov
ja
push
or
popa
mov
sar
int
mov
xchg
adc
dec
push
jne
push
mov
and
out
loope
cmp
inc
mov
and
xchg
into
adc
mov
xlat
aaa
les
cmp
sti
pop
pop
pusha
push
out
jle
add
int
ja
stos
jns
jne
xor
jle
xor
add
sti
sub
rcl
arpl
scas
inc
daa
cdq
inc
call
fldenv
mov
dec
sbb
push
lock
or
sub
movs
add
ins
xor
enter
mov
imul
leave
mov
es
sti
iret
stos
cmps
or
movs
pusha
sbb
push
rep
mov
mov
push
jl
mov
dec
push
imul
mov
or
outs
fcom
jno
jo
pop
adc
test
xor
xchg
xchg
popf
(bad)
mov
test
sahf
or
jge
cs
and
mov
lods
xchg
xchg
lock
xchg
hlt
(bad)
pop
arpl
push
ret
xchg
fcomp
movs
fistp
ret
cli
pop
movs
daa
add
(bad)
jne
inc
(bad)
repz
push
cmp
jp
sahf
movs
sbb
mov
sar
mov
pop
in
imul
out
dec
xchg
mov
les
push
lods
jmp
dec
push
inc
mov
lods
shr
mov
js
leave
pusha
dec
pop
mov
xchg
in
jmp
adc
jle
test
mov
nop
mov
jp
outs
jp
(bad)
nop
xchg
popf
fisubr
aam
jne
pushf
test
addr16
ins
test
cld
mov
cdq
cmps
(bad)
sti
cmp
ficom
mov
(bad)
mov
dec
jl
sar
(bad)
icebp
fwait
adc
jne
ss
ss
cmps
aam
fiadd
sub
xor
shr
(bad)
call
push
jg
push
data16
outs
mov
fnstcw
cld
mov
adc
jl
js
add
jmp
popf
ins
fwait
shl
push
shl
imul
ds
pop
idiv
(bad)
out
arpl
xlat
not
pushf
js
jecxz
cmp
test
mov
js
mov
repz
jae
dec
fadd
daa
mov
aad
jno
and
call
inc
jne
push
stc
push
lods
xor
lock
add
cli
pop
sub
xchg
stos
xchg
loop
add
mov
jb
lea
mov
jo
xchg
mov
aad
sbb
sub
jmp
shr
inc
jb
and
sub
stc
mov
mov
push
xchg
jmp
mov
mov
mov
imul
retf
add
mov
mov
or
xchg
pop
mov
xor
mov
add
into
dec
xchg
and
or
jmp
xor
add
fsubr
and
inc
push
lea
inc
js
stos
(bad)
and
out
add
dec
push
sub
jp
sub
mov
mul
sub
xchg
cmp
xor
imul
jns
loope
adc
icebp
and
out
nop
sahf
sbb
stc
and
xchg
js
mov
lds
add
inc
lods
test
push
or
sbb
(bad)
repnz
(bad)
jge
push
addr16
imul
icebp
repz
jle
outs
push
or
retf
jne
nop
repnz
adc
add
clc
scas
dec
mov
call
(bad)
pop
or
popf
test
mov
mov
mov
mov
xor
out
lahf
mov
add
daa
pop
ror
push
add
test
retf
and
push
ss
inc
cmp
jb
arpl
ret
adc
or
mov
xchg
dec
add
fnstenv
mov
fsubr
jge
cmp
out
pop
ja
movs
lods
fxch
fs
dec
pop
int3
pop
inc
sti
inc
out
sar
out
push
(bad)
cmps
jg
or
pop
dec
adc
mov
dec
push
adc
cli
mov
fadd
push
mov
jge
mov
sub
push
sahf
push
inc
rcr
xchg
jns
enter
in
adc
test
or
add
pop
cmp
dec
jle
sub
adc
(bad)
in
loope
stos
cmps
test
fs
arpl
es
mov
es
or
or
dec
sbb
stos
pop
jae
test
mov
fisttp
sti
cmp
jmp
ja
push
sar
sub
push
pushf
jge
jmp
inc
aaa
or
dec
cmc
outs
neg
fdivr
out
adc
enter
loope
xor
sub
lahf
add
loop
inc
or
imul
dec
inc
movs
enter
xor
cmp
mov
pop
dec
ins
pop
mov
sbb
into
cmp
repnz
inc
xchg
imul
fdivr
sub
and
rol
lahf
cld
ja
repnz
pop
jno
fdivr
pop
mov
push
mov
loopne
jae
loop
xchg
fisubr
and
mov
lea
jnp
scas
(bad)
int
dec
lds
(bad)
adc
es
sub
mov
sbb
pop
lahf
fs
cmp
and
push
in
or
or
fs
ins
iret
sub
mov
sar
cli
fwait
inc
fwait
sub
and
pop
adc
mov
push
(bad)
repz
cmp
aad
fidiv
or
int3
mov
push
fldl2e
push
add
adc
adc
mov
jno
mov
icebp
(bad)
mov
ror
add
test
test
mov
lods
ret
aaa
in
adc
ss
cmps
ja
fimul
hlt
(bad)
(bad)
into
int
sbb
lds
pop
mov
ds
imul
fst
(bad)
cdq
mov
sbb
pop
fs
addr16
sbb
xchg
fld
sbb
jb
shr
ja
fs
or
(bad)
bound
sbb
pop
xchg
push
mov
fidiv
xor
add
sub
pop
out
ins
add
rol
xor
or
retf
ja
mov
sbb
sti
dec
sbb
pop
es
adc
imul
cmps
mov
ins
mov
xor
out
mov
rol
add
push
aad
sub
out
or
pop
ds
fcomip
xchg
cmps
pushf
add
je
ins
xor
cmps
outs
push
loop
sub
xlat
out
sbb
mov
ja
jb
lock
sub
dec
imul
xchg
das
pop
sar
fst
jb
sbb
or
aas
lahf
(bad)
retf
lea
and
movs
je
inc
sbb
mov
scas
leave
lea
xchg
popa
dec
mov
test
ret
cli
mov
dec
ficom
leave
xchg
mov
fidivr
bound
jg
cld
ins
or
cs
retf
mov
iret
pop
fcomp
fcmovb
std
mov
xor
(bad)
nop
cwde
retf
movs
imul
xor
icebp
es
pop
lods
fcomip
(bad)
sbb
imul
push
fmul
pusha
pop
cmc
lods
add
mov
dec
(bad)
fldlg2
mov
mov
xor
pop
sahf
adc
jb
mov
outs
jmp
jb
sbb
cli
(bad)
fnstsw
hlt
cmp
(bad)
adc
sub
mov
or
cmc
jl
mov
jp
sub
in
je
inc
aad
cli
adc
sub
mov
iret
aas
cld
adc
loop
inc
and
dec
inc
sub
ret
inc
in
mov
repz
sbb
ds
add
les
jns
js
imul
mov
pop
cmp
rol
mov
dec
add
lods
shr
ins
pop
cmp
mul
jl
cdq
ret
sub
loope
ins
out
mov
fsubrp
inc
mov
inc
test
dec
loopne
ins
pop
xor
adc
lods
mov
ins
dec
fdivr
setae
sbb
pushf
xor
cmp
jmp
and
push
leave
ja
pushw
jno
loop
pop
das
jmp
xchg
pop
loop
push
or
lock
es
xlat
stos
xchg
mov
stos
inc
test
hlt
sbb
cmps
ins
retf
xlat
push
hlt
and
ds
movs
shr
xchg
cmp
dec
rcl
adc
pop
push
dec
popf
gs
adc
xchg
mov
loop
mov
xlat
fistp
pop
ins
(bad)
icebp
mov
das
(bad)
aam
push
add
and
xlat
xor
dec
mov
xchg
inc
or
inc
int3
idiv
adc
sar
leave
and
ret
push
inc
(bad)
repnz
push
scas
imul
mov
sahf
mov
adc
push
jmp
push
add
inc
pop
jbe
mov
cdq
jns
pop
push
xor
dec
test
gs
dec
pop
aad
pop
push
push
pop
mov
repnz
gs
mov
cs
es
push
lahf
lock
mov
mov
stos
xchg
sub
mov
pop
out
push
jno
rcl
dec
mov
dec
aam
cmps
push
adc
and
inc
adc
jecxz
cld
mov
and
xchg
jne
jg
sbb
xor
pop
sub
pusha
xor
xchg
int
mov
cmc
out
popa
call
icebp
dec
add
push
and
mov
call
add
jns
jmp
xlat
ficom
(bad)
movs
cmp
stos
xchg
add
(bad)
mov
pop
addr16
mov
mov
xor
and
sti
sub
xchg
xchg
pop
mov
mov
add
movs
mov
pusha
sub
int3
dec
adc
out
xlat
xor
jg
hlt
ret
inc
sub
mov
sub
xchg
dec
pop
pop
gs
into
scas
xchg
ins
enter
(bad)
jnp
jmp
je
cdq
pop
aad
not
and
sub
mov
sbb
or
cmp
fld
cmp
in
sub
bound
fbstp
das
pop
mov
xchg
sar
(bad)
imul
lea
popa
sub
fs
dec
dec
mov
mov
lea
xchg
int3
add
push
call
push
mov
push
xchg
cli
mov
inc
(bad)
lea
call
dec
lods
or
push
lds
imul
jb
push
mov
out
rcr
sar
int
jne
stos
cmp
mov
jge
out
xchg
out
mov
rcr
icebp
aad
xchg
jl
mov
jno
pop
icebp
dec
mov
outs
aaa
hlt
sub
cdq
rcr
ja
(bad)
push
les
sbb
push
movs
xlat
popa
push
aas
imul
mov
clc
push
mov
xchg
and
aaa
jnp
fmul
shl
ss
xor
(bad)
sbb
(bad)
(bad)
dec
test
repnz
out
xchg
mov
fsub
js
push
jp
xchg
sub
inc
and
ins
jne
dec
(bad)
add
pop
push
imul
jbe
test
shl
add
call
packsswb
xchg
aas
push
and
xchg
dec
cs
jp
iret
jae
sar
gs
mov
jl
cdq
scas
mov
outs
sbb
cdq
out
fmul
dec
imul
mov
gs
pop
or
jmp
push
mov
fsubr
xchg
fidiv
dec
in
xchg
mov
add
cwde
sub
mov
imul
dec
or
cli
mov
mov
or
jecxz
and
xor
push
and
mov
jmp
dec
imul
inc
pusha
mov
sahf
jg
aad
in
adc
pop
xchg
mov
mov
mov
dec
rsm
inc
push
pop
es
pop
pop
mov
int
shl
je
jae
mov
add
mov
inc
sbb
jmp
add
into
outs
stc
push
pop
jno
xchg
fstp
add
mov
jns
inc
lods
rcr
ss
xchg
xor
out
adc
and
mov
dec
pop
les
std
mov
retf
pop
(bad)
inc
movs
das
add
call
movs
jmp
mov
push
mov
jae
es
daa
cdq
pop
push
push
dec
mov
jle
and
mov
mov
je
push
cmp
sub
push
inc
pusha
mov
xchg
adc
cmp
in
push
je
ja
xchg
xchg
add
xchg
movs
sahf
mov
mov
sbb
add
out
(bad)
repz
pusha
cmp
jae
mov
mov
jmp
int
adc
rcl
hlt
sbb
outs
push
in
xchg
int3
out
mov
xlat
or
shl
arpl
test
(bad)
test
out
ret
pop
pop
es
or
in
dec
mov
aaa
ror
sti
loop
lsl
(bad)
mov
(bad)
fadd
out
into
push
test
inc
(bad)
call
push
push
cmp
xchg
add
bound
in
mov
in
je
add
inc
ins
ins
xor
and
adc
xchg
jl
aaa
and
sar
test
sar
inc
imul
or
inc
inc
mov
movs
pop
sub
mov
leave
mov
lods
lods
cld
push
xor
push
xor
rcr
and
pusha
add
push
repz
xor
mov
lods
push
movs
pop
mov
push
mov
mov
mov
aad
mov
pop
imul
call
mov
imul
mov
dec
int
(bad)
ds
jle
fprem1
xchg
int
popf
fxtract
cmps
mov
not
in
icebp
adc
push
mov
cs
lock
(bad)
out
jl
push
inc
push
mov
mov
cmp
aam
cmc
hlt
rol
jmp
fimul
pop
sbb
outs
shl
add
daa
mov
retf
mov
dec
xchg
push
call
xchg
dec
retf
imul
cld
fldenv
addr16
xchg
sub
cmp
in
jbe
mov
ds
ins
jae
mov
test
call
popa
jb
je
aas
cmp
adc
and
jp
mov
adc
in
cwde
xchg
mov
sahf
mov
test
add
fsub
sbb
neg
imul
ja
push
pop
cmp
adc
dec
sub
sub
inc
dec
in
mov
add
xchg
jle
rcl
pop
loop
iret
std
out
or
add
mov
shl
std
retf
pop
add
push
daa
jmp
std
dec
ins
lods
(bad)
adc
in
xor
pop
mov
jo
sbb
arpl
add
xchg
add
dec
mov
call
stc
outs
sbb
dec
pop
xchg
pop
mov
and
jmp
les
movs
jb
inc
addr16
adc
jnp
push
into
mov
and
mov
loope
fimul
aad
fadd
pop
xor
movs
push
xchg
sbb
ja
xchg
mov
test
fld
fcmovb
mov
sti
lods
mov
pusha
sub
movs
je
sbb
js
jl
mov
scas
fwait
lock
leave
mov
adc
sbb
out
push
mov
leave
inc
fcom
std
ja
dec
fwait
add
mov
mov
mov
stos
scas
enter
in
xor
enter
mov
add
xlat
dec
sbb
push
pusha
mov
popa
cdq
pop
imul
add
in
pop
adc
cmp
mov
iret
scas
push
pop
push
pop
(bad)
mov
js
mov
test
sbb
pop
inc
push
pushf
movs
ss
sbb
inc
add
xchg
xor
(bad)
push
ja
mov
hlt
xor
gs
call
dec
mov
sub
adc
in
cli
ins
add
push
mov
inc
dec
mov
pop
(bad)
adc
retf
adc
jp
(bad)
outs
push
adc
shl
inc
mov
ins
sub
dec
dec
jae
lods
ds
add
mov
ss
fiadd
enter
inc
lods
adc
data16
sbb
imul
pusha
cmps
cwde
fnstenv
test
mov
pop
je
test
hlt
dec
cmc
es
xadd
popa
aad
test
hlt
jnp
in
push
das
add
xlat
inc
fidivr
in
and
std
sbb
sahf
pusha
(bad)
iret
nop
jns
mov
and
push
stos
shl
mov
fild
sub
dec
jno
sbb
imul
pop
fdivr
adc
mov
xchg
jo
adc
xchg
bound
addr16
icebp
outs
iret
mov
jg
pop
adc
xor
mov
cmp
xor
lods
sub
mov
outs
ror
xchg
mov
or
mov
mov
cwde
arpl
sbb
push
bound
xchg
pop
jb
mov
adc
xor
pop
out
idiv
jno
aad
popa
into
inc
stos
bound
dec
push
hlt
sti
jne
out
int
inc
xchg
jp
frstor
add
lds
scas
sti
fiadd
or
push
in
adc
jg
xor
sbb
les
cmps
test
imul
(bad)
add
mov
lock
cmovs
nop
and
(bad)
std
pop
call
sub
shr
dec
retf
js
jnp
push
xchg
push
ror
mov
pop
or
dec
xor
lock
fadd
test
mov
in
neg
outs
mov
push
cmc
imul
leave
js
mov
xchg
repnz
push
scas
add
xlat
in
ret
test
or
(bad)
push
repz
dec
jmp
jbe
and
mov
sbb
mov
rcl
rcr
stos
push
jne
ret
xchg
cli
stc
push
mov
mov
loopne
int3
xchg
inc
jp
das
ds
jge
daa
fadd
out
in
int
inc
and
inc
not
cmps
mov
xchg
mov
cdq
repz
add
int
mul
shr
mov
pop
popa
retf
shl
imul
loop
sub
in
cli
lea
push
addr16
push
xor
push
or
icebp
inc
mov
scas
adc
daa
inc
push
push
mov
cmp
pop
jae
xor
mov
jb
xor
(bad)
(bad)
mov
push
pop
rcr
cdq
mov
jge
cmc
xor
cli
ret
mov
xor
inc
cmp
mov
lahf
ds
xchg
popf
or
test
lea
setae
jbe
jecxz
mov
sub
imul
repz
pushf
stos
jbe
jo
call
sahf
push
xor
jne
data16
dec
sbb
mov
je
test
mov
mov
aam
mov
sub
ins
cmp
cdq
mov
movs
dec
movs
pop
aam
lds
mov
pop
scas
je
cmps
dec
cmp
cmp
cwde
mov
sub
pop
adc
addr16
mov
sub
xor
arpl
call
dec
or
mov
movs
inc
sbb
sub
adc
mov
(bad)
cmp
jmp
jnp
movs
inc
icebp
add
adc
add
cmps
call
aad
jae
das
pop
adc
or
and
iret
inc
xchg
jmp
hlt
and
pop
push
or
xchg
in
xchg
stos
mov
adc
shl
test
jl
in
or
and
cmp
test
dec
test
repz
mov
dec
jmp
pop
or
cmp
sub
inc
sbb
add
pop
and
movs
mov
pop
(bad)
nop
into
cmp
adc
sub
push
pop
loop
xchg
or
lods
nop
jnp
loopne
add
jns
stos
ds
cli
push
jo
bound
jnp
ins
iret
(bad)
repnz
lods
(bad)
fild
jne
gs
sub
and
dec
cmp
gs
push
movs
mov
add
dec
add
fild
mov
xchg
retf
in
sar
out
int
xor
add
popf
icebp
mov
out
sub
jl
xchg
jmp
movs
and
bound
loopne
outs
push
js
xchg
adc
inc
outs
ins
les
jo
in
jl
mov
sbb
jl
aaa
xchg
sar
mov
mov
adc
movs
sbb
mov
loop
call
push
sbb
(bad)
mov
pop
pop
push
rcl
call
mov
jge
into
sub
(bad)
in
jno
sub
or
inc
shl
mov
test
stos
mov
pop
sbb
(bad)
dec
stc
test
out
cld
test
ds
lds
mov
es
jmp
test
sbb
xor
shl
jle
cdq
and
stos
lods
das
loop
mov
test
inc
div
jno
sbb
mov
enter
scas
inc
jg
ins
dec
sbb
cmp
rcl
sbb
mov
mov
js
or
xchg
add
lahf
cli
cmp
xor
sub
xchg
xor
sub
inc
shl
stos
ret
int3
aas
in
pop
and
cwde
inc
dec
mov
xor
mov
repz
cmp
push
stc
fs
pop
jl
sub
pop
shl
call
out
cli
cmps
loopne
mov
jns
pop
inc
cmp
cmps
in
pop
outs
sub
call
adc
pop
fnstsw
rcl
(bad)
out
pop
xchg
(bad)
stc
xchg
jp
inc
mov
and
sbb
jg
movs
enter
(bad)
fild
pusha
mov
into
mov
and
hlt
jge
in
lea
jg
daa
aas
or
cmp
xor
in
test
inc
inc
push
jl
mov
pop
ds
loopne
pop
retf
jle
add
adc
stos
enter
leave
add
out
jo
mov
ss
cld
mov
mov
rol
adc
in
pop
and
xchg
hlt
psubb
movs
dec
test
rol
sub
inc
dec
push
or
out
sar
mov
mov
cmc
dec
mov
xchg
pop
lods
je
push
cwde
xor
lods
hlt
mov
sub
mov
xchg
fs
ror
sub
fadd
outs
fucomip
pop
adc
sbb
loope
fsqrt
data16
enter
inc
popa
jb
mov
es
bound
lods
popa
pop
movs
jl
jmp
es
jo
fimul
iret
sbb
xchg
mov
xchg
ins
aaa
sbb
mov
push
scas
and
mov
fwait
(bad)
leave
cmp
adc
out
movs
out
scas
stc
into
retf
mov
mov
add
xchg
mov
push
cmps
sub
call
ror
outs
movs
xor
enter
les
(bad)
setg
ret
(bad)
int
(bad)
aad
fsubr
(bad)
jmp
les
jmp
jecxz
jmp
cmps
lds
jne
push
pop
sbb
in
sub
loop
jns
and
aas
mov
jnp
mov
mov
jmp
mov
mov
daa
mov
pop
shl
jl
daa
sub
jns
(bad)
sub
push
int
sub
fsub
inc
cmp
nop
sbb
(bad)
daa
adc
jnp
jne
xor
sub
push
out
popf
xchg
movs
popf
les
gs
fsubr
(bad)
or
stc
jmp
jp
imul
or
cmp
mov
mov
inc
pop
sub
and
dec
mov
ror
sbb
pushf
ficomp
push
push
cs
pop
fwait
cli
xchg
and
jno
dec
jmp
cmp
shr
fsub
push
mov
scas
sub
icebp
adc
inc
icebp
mov
fadd
dec
in
in
mov
cli
push
out
imul
(bad)
scas
scas
jbe
pushf
cmp
fiadd
aas
out
inc
mov
adc
ret
movs
jb
mov
test
stos
inc
or
cdq
jge
adc
cmp
add
test
lea
lods
cmp
cmp
call
pop
add
cdq
scas
inc
adc
cli
repnz
and
xor
cld
scas
repz
sub
shl
clc
ss
fs
xor
out
fsubp
shr
push
sti
push
out
and
xor
add
dec
ret
in
sub
xchg
push
mov
fimul
les
retf
mov
or
and
cdq
jmp
fcom
(bad)
cmp
lods
ror
mov
dec
ret
or
xchg
mov
xchg
xchg
mov
push
movs
add
aaa
pusha
jns
inc
add
out
movs
xor
xor
das
int3
addr16
mov
xor
adc
and
xor
jp
and
cmc
xor
xchg
pop
fs
jg
outs
jp
in
mov
pop
xchg
xchg
enter
lods
arpl
ins
(bad)
rol
xchg
mov
adc
pushf
lahf
inc
(bad)
pop
icebp
adc
mov
dec
fbld
test
and
xor
jecxz
neg
cmp
ins
xor
cwde
imul
xchg
mov
mov
jmp
adc
iret
cmp
jmp
pop
adc
rol
inc
pop
and
mov
xchg
xor
cld
repnz
mov
mov
sbb
ds
jns
dec
and
lods
outs
in
mov
test
or
loopne
mov
cdq
jg
sbb
movs
neg
and
ss
jae
or
sbb
inc
push
int3
cmp
ja
addr16
mov
(bad)
mov
and
lahf
mov
cmp
mov
imul
nop
lahf
jp
push
icebp
sti
sbb
ret
retf
xor
mov
and
xor
repnz
jne
mov
outs
cwde
(bad)
(bad)
dec
push
mov
xchg
lods
xor
jmp
mov
aaa
cmp
mov
push
cmp
lea
jmp
adc
add
pusha
es
ficom
push
(bad)
dec
push
pop
jnp
js
fnstenv
mov
sbb
cli
inc
call
cli
jmp
pop
movs
or
imul
aam
sub
mov
dec
out
sub
mov
and
sbb
push
pop
dec
pop
pop
(bad)
icebp
imul
and
add
push
and
loop
xchg
(bad)
aad
and
shr
cmp
mov
repnz
jne
adc
pop
popf
sbb
aaa
aam
js
popa
jecxz
loope
in
push
retf
cmc
mov
(bad)
xlat
sbb
or
test
bound
aaa
pop
inc
push
sbb
xor
les
adc
out
scas
mov
adc
mov
cmps
retf
pushf
push
xor
addr16
sbb
ds
ret
push
mov
xor
inc
cmp
test
clc
mov
outs
push
iret
mov
pop
js
xor
push
dec
dec
dec
cmp
(bad)
fcmovbe
clc
mov
mov
mov
mov
push
mov
mov
sbb
push
mov
test
cli
cmp
jle
addr16
mov
ins
test
jle
retf
add
push
pop
outs
cmps
(bad)
jmp
in
push
mov
into
push
out
pop
(bad)
ffree
stc
cmps
es
sbb
pushf
and
shl
bnd
adc
fmul
scas
es
fs
jmp
push
jbe
mov
retf
loopne
in
jae
sbb
xchg
fdivrp
inc
push
cmp
sub
cwde
cmp
cmps
sbb
and
push
adc
test
imul
xchg
cmp
cmp
jb
idiv
movs
sbb
sbb
sar
iret
inc
ror
fwait
adc
retf
(bad)
jl
add
enter
push
push
push
xchg
sbb
inc
cmp
imul
push
daa
inc
push
not
repz
not
add
xchg
mov
out
mov
cmp
jp
cmp
mov
push
jb
js
imul
cmp
call
xchg
or
cmp
inc
or
cli
adc
push
mov
clc
mov
stos
push
ds
scas
add
mov
pop
mov
add
inc
mov
xchg
ss
movs
retf
std
stos
mov
ror
aad
jbe
(bad)
mov
add
jmp
add
(bad)
aad
mov
push
push
mov
repnz
stos
loop
push
ins
nop
shld
xor
jo
ss
je
test
jl
add
imul
sub
pop
js
cmp
add
dec
bound
dec
jmp
pop
mov
sub
test
ret
ror
loopne
mov
cmp
out
cmp
dec
fdivr
cmp
movs
aam
mov
adc
jecxz
mov
repnz
adc
(bad)
ds
fbld
or
daa
imul
dec
cs
and
and
fisttp
mov
(bad)
jmp
or
sub
cmp
dec
pushf
mov
in
xchg
jne
mov
and
dec
adc
retf
and
cmp
xchg
xor
sbb
je
popa
jne
jb
cli
inc
test
bound
data16
add
sahf
fnstcw
cld
xor
dec
aaa
gs
mov
aaa
add
sub
xor
dec
std
cmp
and
int3
dec
addr16
cli
cs
mov
dec
(bad)
imul
push
(bad)
or
movs
pop
fidiv
inc
test
jle
push
rol
pusha
es
mov
xchg
dec
sub
bound
pop
sub
es
cld
push
(bad)
out
(bad)
fdivrp
out
fdiv
in
pusha
mov
out
arpl
sbb
retf
(bad)
aad
lahf
push
or
mov
imul
test
cmp
dec
cmp
and
fdiv
call
scas
sbb
push
jecxz
push
repnz
movs
movs
pop
adc
mov
loop
pop
aad
pusha
pop
cwde
dec
adc
call
xor
nop
mov
pop
and
pop
jno
jge
push
xor
xor
pop
loop
lea
shl
mov
pop
inc
call
jb
pop
mov
mov
mov
xchg
xor
inc
and
in
add
xchg
cmp
mov
js
jp
leavew
pop
jl
addr16
mov
retf
pop
dec
or
mov
bound
ss
dec
test
repz
gs
xchg
fwait
mov
inc
in
dec
dec
cmps
jmp
shl
cmp
and
(bad)
and
pop
adc
sub
inc
aaa
jnp
lods
or
retf
arpl
mov
jmp
add
fistp
out
(bad)
xlat
adc
(bad)
lods
mov
loope
xchg
movs
jp
es
cmp
mov
leave
scas
test
sahf
jle
ins
mov
sahf
fist
pop
adc
inc
pop
sub
dec
dec
cli
sti
pop
sbb
dec
retf
cmps
push
cld
mov
ins
push
and
pop
cmps
(bad)
(bad)
popf
cmp
clc
mov
jle
dec
mov
popa
sub
out
fadd
int3
jno
(bad)
out
outs
(bad)
sbb
mov
xchg
imul
(bad)
mov
fidiv
xchg
in
or
inc
and
mov
xchg
pop
fst
lea
inc
mov
sbb
xchg
pop
(bad)
js
pop
aaa
cld
shr
jecxz
cli
xlat
mov
rcr
and
mov
xchg
fldln2
jmp
or
jmp
jl
inc
inc
mov
test
xor
(bad)
sahf
or
push
ror
jne
jmp
call
lds
adc
adc
(bad)
scas
jbe
cdq
cmp
enter
jp
sbb
loop
xor
jecxz
xor
sub
and
dec
mov
enter
and
push
shr
scas
int
int
loopne
sbb
inc
cs
mov
or
sbb
pop
xchg
pop
jne
push
cld
xchg
add
jns
or
push
dec
fistp
js
lods
push
sbb
pop
xor
jmp
inc
or
jl
jle
push
mov
movs
out
cmps
cdq
outs
aam
into
push
shl
fidivr
xchg
stc
cli
in
(bad)
mov
out
rcr
push
adc
test
or
leave
or
jmp
fist
int
or
push
(bad)
sti
retf
pop
xor
push
or
jmp
sbb
jnp
pop
xchg
int
stos
mov
jmp
cmp
test
sbb
das
scas
cld
loop
jg
rol
das
aad
gs
fwait
lods
jl
(bad)
aam
repz
movs
jmp
das
enter
popa
push
cmp
jmp
pusha
mov
mov
sub
in
or
lds
and
push
fdiv
sbb
fcomp
jo
and
adc
pop
int
jmp
cs
dec
loop
cwde
cmp
fucomi
jno
and
sub
mov
and
cs
outs
mov
mov
cmp
test
or
push
imul
retf
pusha
(bad)
js
or
or
jno
aad
dec
dec
test
ins
mov
xchg
rol
adc
add
retf
and
xlat
ret
outs
xor
repz
movs
jnp
jge
fistp
jge
cmp
call
retf
lods
push
mov
repz
xlat
mov
test
pop
inc
push
retf
and
mov
jmp
xchg
mov
jge
xor
push
shl
ret
xor
or
dec
dec
and
repnz
adc
xor
cdq
jge
mov
dec
mov
push
inc
mov
push
adc
lea
jne
push
test
push
cmp
int3
fadd
and
inc
sti
ja
rcl
and
aad
xchg
adc
sub
fiadd
cmps
hlt
lahf
xor
imul
aad
rol
sub
push
call
ds
pop
shl
pop
mov
pop
nop
mov
and
jg
or
fild
lahf
sub
pop
pop
mov
add
dec
jmp
mov
les
fild
test
leave
add
cmp
cmp
scas
push
xchg
xchg
popf
das
xchg
dec
shl
lea
ja
cwde
cmp
add
xchg
lock
push
cmp
or
push
mov
mov
imul
mov
fdivr
js
or
popa
push
xchg
popa
pop
dec
jb
sbb
out
loopne
sub
fist
dec
xor
out
setns
push
and
cmp
js
movs
movs
daa
cwde
jmp
mov
pop
clc
js
ror
add
repz
(bad)
daa
test
mov
add
popa
and
push
in
dec
pop
sub
dec
push
sbb
sub
out
sbb
adc
stos
mov
cwde
jns
ins
adc
dec
pusha
mov
or
int
cmp
or
(bad)
mov
in
sbb
jmp
xor
xchg
sar
aad
in
jmp
fwait
and
imul
into
xchg
xchg
loope
and
outs
out
push
rol
jecxz
push
aad
sbb
inc
adc
ja
mov
mov
dec
jmp
imul
and
mov
xor
jle
test
nop
imul
jecxz
and
arpl
push
fist
stos
int3
icebp
sar
fst
push
sbb
and
or
xchg
push
adc
enter
mov
test
push
test
push
jae
dec
push
xchg
xor
jo
add
into
add
(bad)
xor
cmps
fwait
mov
lea
mov
mov
inc
stc
ror
out
call
mov
jns
xor
adc
fcom
and
fimul
mov
in
pusha
pop
mov
leave
mov
mov
mov
push
shl
mov
xor
mov
sub
dec
repnz
xchg
(bad)
daa
fs
int
xor
shr
fwait
pop
fldcw
js
repz
dec
mov
scas
aas
and
mov
retf
jl
jae
fidivr
and
out
dec
scas
sbb
shl
(bad)
lahf
inc
push
dec
push
adc
jno
inc
test
test
dec
adc
sub
jne
in
addr16
scas
out
aam
fwait
jb
leave
ins
sub
ds
cmps
push
lock
and
xchg
xchg
push
repnz
js
jge
pop
jl
jbe
push
mov
cmp
sbb
add
popa
retf
and
lock
ret
(bad)
adc
jns
push
pop
test
(bad)
rol
pop
test
(bad)
icebp
mov
(bad)
jns
dec
pop
pushf
xchg
cmp
mov
mov
pop
retf
or
push
fdiv
mov
inc
adc
ins
imul
test
ins
mov
retf
pop
xchg
jl
inc
in
pop
push
fwait
mov
jmp
(bad)
cld
popf
push
pop
adc
std
je
je
jg
sub
mov
fsubr
or
xor
mov
cmps
jmp
cmp
sahf
test
push
es
fstp
out
je
and
popa
or
jns
sti
push
adc
cli
jnp
shl
jns
jle
push
sbb
push
lods
jns
pop
frstor
ins
sbb
adc
jge
xor
push
ja
mov
jmp
jle
cld
emms
test
mov
mov
movs
in
and
inc
sbb
push
sbb
jmp
xchg
leave
mov
mov
xchg
stos
jmp
push
stc
xor
mov
cmp
fnclex
shl
xor
mov
cld
int
lahf
bnd
aas
mov
aas
sub
ins
nop
imul
inc
push
scas
inc
(bad)
imul
pop
xchg
push
pushf
(bad)
jmp
stos
or
std
pop
mov
cdq
dec
sub
mov
jecxz
movs
cmp
xor
sub
jmp
xchg
sub
sub
pmuludq
push
loope
inc
xchg
iret
fisttp
in
fimul
sub
cli
shr
ins
(bad)
xor
fwait
test
xchg
popa
mov
sbb
dec
test
sbb
pushf
aaa
dec
rcr
sub
sbb
pop
cmp
repz
pop
test
and
(bad)
mov
shl
xor
mov
add
shl
retf
pop
dec
adc
dec
pop
(bad)
adc
js
cwde
imul
push
in
retf
and
push
add
fld
and
cmp
arpl
les
loop
std
sahf
movs
pop
xchg
cmp
arpl
daa
jne
call
mov
xchg
push
sbb
jnp
pop
mov
loop
mov
dec
popf
dec
test
pop
jns
arpl
ss
pop
popa
test
mov
hlt
adc
push
ins
mov
ficom
jecxz
inc
pop
retf
std
fmul
pop
sbb
lods
jns
jbe
xor
cmp
pop
pop
xor
add
cmp
out
cmp
xor
call
cdq
jae
mov
popa
mov
ja
jge
inc
xor
ficomp
add
and
push
sbb
inc
outs
and
pop
(bad)
mov
js
and
call
loop
cli
add
sti
mov
inc
adc
sbb
imul
nop
fadd
mov
dec
rol
mov
sub
mov
std
push
shl
dec
or
mov
pop
adc
push
pop
lea
pop
ret
sbb
sbb
xor
sbb
lds
sbb
je
neg
mov
cld
ja
push
in
add
inc
je
daa
retf
mov
mov
lock
fmul
mov
xor
adc
outs
je
jmp
xchg
xchg
jge
cmp
es
ret
and
rol
pusha
test
or
addr16
cmp
sti
cmp
aam
pop
scas
(bad)
je
movs
mov
fidiv
dec
sub
and
int3
mov
lock
enter
lahf
adc
fmul
inc
push
punpckhwd
add
dec
das
imul
sub
arpl
mov
jge
or
loop
sahf
ret
jp
enter
pop
cwde
xor
jmp
jmp
loope
and
cmp
mov
in
shl
mov
bound
adc
scas
xchg
mov
test
mov
mov
xor
ret
pop
and
push
ins
test
mov
sub
in
int
push
sbb
addr16
mov
ret
dec
sub
xlat
pop
(bad)
imul
imul
mov
scas
lods
cld
xchg
mov
jno
es
mov
jmp
mov
adc
(bad)
mov
ja
mov
gs
pop
push
cmp
out
idiv
cmps
dec
dec
inc
pop
jmp
and
push
add
daa
push
das
jle
push
mov
fst
jno
and
rcl
jl
push
jo
and
rol
adc
and
popa
xlat
jne
cmps
sbb
into
jecxz
push
inc
ins
or
jecxz
and
and
addr16
(bad)
push
jno
pop
fs
test
push
sbb
push
sbb
iret
les
add
inc
xor
pop
and
sbb
fmul
and
jecxz
xchg
call
adc
arpl
sbb
int
xchg
sbb
pop
jo
(bad)
xor
idiv
ds
xor
and
ja
loop
dec
outs
les
(bad)
cmc
sbb
ins
mov
lea
xchg
mov
adc
mov
test
and
and
inc
(bad)
sbb
mov
or
retf
xchg
pusha
ss
loop
repz
loop
push
pop
mov
jno
mov
aam
push
out
xor
loop
fisub
in
not
mov
dec
jne
daa
sbb
mov
jp
(bad)
(bad)
int3
mov
imul
mov
ret
adc
sub
push
push
cmp
in
cdq
or
aaa
test
addr16
out
adc
sti
je
push
ret
inc
hlt
loope
pop
ret
jae
sbb
dec
out
sbb
jb
cli
jo
and
bound
pop
out
cmps
bound
xchg
bound
cmp
xlat
test
loopne
sub
ins
sbb
inc
int
or
sysenter
inc
fwait
je
rol
dec
adc
xchg
in
call
popf
xchg
clc
or
pop
add
adc
lock
movs
dec
into
outs
js
add
das
int3
push
dec
sbb
out
jmp
mov
xor
inc
mov
(bad)
xchg
out
or
and
mov
cmc
enter
scas
xor
xor
cmp
xor
aaa
pop
cmps
cmp
sahf
mov
cmp
adc
cmc
pusha
push
repz
dec
out
inc
lock
xor
or
sub
push
mov
pop
push
mov
nop
mov
pop
and
mov
shl
jmp
shl
fiadd
(bad)
add
rcl
push
scas
or
test
pop
and
cdq
shl
jbe
cmps
add
in
and
mov
fs
(bad)
xchg
xchg
cdq
inc
jg
lock
mov
pop
mov
scas
pop
dec
or
mov
or
stos
test
and
sub
cmp
loope
shl
cli
jns
bswap
loop
scas
add
cmp
out
test
cmp
mov
fistp
gs
mov
daa
(bad)
fist
dec
dec
ret
aas
cmp
cmp
adc
mov
push
sbb
jae
imul
pushf
loop
sub
xor
sbb
(bad)
hlt
call
mov
(bad)
or
mov
(bad)
inc
ficom
stos
test
dec
mov
loopne
adc
xor
arpl
lahf
mov
sbb
sub
jle
mov
xchg
fs
mov
or
push
push
inc
cmp
push
cmp
scas
mov
movs
jne
jmp
push
adc
jbe
movs
call
sub
inc
nop
sub
push
sub
imul
and
cmp
cmp
ret
xchg
xchg
cmp
mov
cdq
xchg
and
pop
rcl
dec
sub
push
fdiv
push
sar
adc
retf
daa
ins
mov
push
retf
sub
xchg
push
xchg
xor
mov
nop
fdiv
sub
or
jg
dec
jmp
pushf
jbe
sbb
or
enter
lods
daa
popf
je
inc
test
sbb
je
ds
dec
test
lds
pushf
dec
hlt
xor
sbb
jg
sbb
mov
fbstp
jmp
inc
nop
fld
xlat
jne
sahf
cmp
mov
imul
adc
mov
rol
mov
and
in
ss
sbb
movs
dec
loopne
inc
sbb
aas
and
cmc
pop
sub
mov
sbb
popa
sub
jecxz
mov
fdivr
jl
mov
mov
push
imul
xor
add
aas
cdq
or
adc
mov
mov
add
shl
fiadd
mov
push
xlat
add
cmp
shl
stos
inc
xchg
test
fdiv
mov
(bad)
std
ret
jnp
sbb
les
pop
enter
sahf
ror
out
xchg
not
adc
mov
sub
test
pop
push
jns
push
cmp
out
cmps
movs
jge
test
mov
mov
test
xchg
jo
push
mov
sahf
and
imul
call
push
adc
iret
cmp
mov
sub
jl
daa
jo
leave
add
sub
push
xor
cmp
inc
rol
andps
sbb
adc
pop
mov
test
sub
sbb
jo
(bad)
push
(bad)
jp
inc
je
and
sti
nop
add
popf
xor
and
add
cmc
dec
sbb
dec
or
add
adc
fcom
jne
push
xor
pop
pop
movs
es
arpl
rcl
push
xor
mov
pop
outs
jmp
(bad)
int3
inc
in
call
icebp
pop
adc
lock
lods
push
jg
add
leave
aam
fsubr
xor
clc
(bad)
sti
xor
mov
jle
jbe
pop
and
pop
ret
fimul
push
lods
inc
int3
int
mov
lods
mov
sub
and
daa
lock
xor
sbb
stos
fst
hlt
jmp
mov
and
mov
adc
out
xlat
lea
mov
pop
hlt
xor
push
jbe
sbb
push
andps
out
neg
adc
mov
or
fidiv
mov
mov
xchg
scas
std
add
das
xchg
or
cmps
dec
inc
or
or
and
loope
dec
or
cmps
pop
mov
pushf
jmp
adc
cmp
and
cmp
loopne
shl
pop
nop
xor
adc
(bad)
scas
sti
pop
and
xor
xchg
(bad)
mov
mov
stc
div
mov
mov
inc
popa
mov
sub
fsub
pop
cs
clc
and
pop
pop
leave
out
pop
xchg
cli
mov
pop
dec
std
sbb
ret
dec
xchg
add
push
sbb
push
adc
ficom
add
pop
bound
cmp
ins
retf
arpl
shr
call
fld
retf
jmp
mov
rcl
dec
loopne
push
and
or
imul
arpl
add
jecxz
inc
cmp
and
xchg
mov
aam
scas
mov
cli
mov
iret
inc
cwde
pop
pop
cmps
jecxz
cdq
push
sub
add
sbb
jl
and
jno
movs
ret
shl
pusha
mov
dec
dec
jmp
in
xchg
pop
sub
not
sub
pop
pop
lods
loop
pusha
and
scas
cmp
add
daa
jo
xchg
div
pop
fisttp
add
mov
(bad)
repnz
int3
mov
shl
iret
test
cmp
scas
mov
mov
add
addr16
mov
sahf
cmc
or
push
jg
in
stc
hlt
neg
push
arpl
imul
imul
aad
and
push
sbb
(bad)
or
mov
aas
daa
aas
outs
outs
sbb
mov
jge
sahf
pop
imul
(bad)
cdq
into
push
dec
and
lahf
pushf
xor
retf
pop
xchg
xor
es
test
je
mov
ret
inc
push
dec
add
ret
fdiv
adc
mov
fs
push
push
ins
pop
jb
jecxz
daa
pop
sti
fidivr
jnp
sub
push
xchg
loopne
iret
xor
pop
std
lahf
test
lds
(bad)
jne
ja
aam
outs
cwde
sbb
popa
dec
into
adc
adc
adc
or
sub
lahf
test
fcmovnb
dec
(bad)
fwait
(bad)
ja
mov
push
or
push
mov
cwde
sub
aas
jne
loope
add
popa
sub
arpl
mov
test
ffree
or
movs
sub
and
cmp
dec
enter
cs
cmc
cmp
dec
(bad)
outs
into
xor
adc
cmp
mov
pop
dec
test
pop
(bad)
call
push
loope
or
cld
cli
adc
ds
ins
cmc
mov
dec
mov
xor
dec
inc
mov
pop
and
push
addr16
icebp
push
mov
cwde
(bad)
push
dec
mov
pop
dec
aad
out
jns
jl
inc
dec
dec
or
adc
mov
cmp
pusha
pop
add
and
xchg
push
(bad)
mov
xchg
pop
or
add
push
push
pop
mov
mov
mov
fs
xchg
popf
add
xchg
(bad)
fisub
pop
mov
or
or
mov
dec
int
dec
pop
jnp
cli
mov
jo
and
or
clc
inc
jne
cmp
arpl
loopne
adc
xor
repnz
pop
or
push
lods
adc
sub
gs
mov
dec
imul
push
(bad)
xchg
aaa
jecxz
xchg
in
aaa
xchg
arpl
arpl
xchg
adc
in
xchg
rol
je
daa
bound
push
iret
sbb
(bad)
repz
dec
rol
jmp
and
iret
enter
les
cmp
iret
inc
inc
push
mov
mov
cdq
xchg
cmp
push
inc
mov
cmp
loope
loope
adc
jmp
jno
jecxz
pop
fsubr
jns
jo
cmp
mov
or
enter
repnz
in
cmp
jmp
dec
pusha
fld
popa
out
out
xchg
pop
rol
add
inc
cmp
outs
xor
cmp
or
repz
dec
test
cmps
sbb
xor
test
cld
daa
addr16
adc
aam
adc
mov
push
sbb
cwde
push
sub
fsubrp
test
js
fisubr
call
xor
push
int
push
and
ins
inc
(bad)
jle
in
fwait
xchg
xor
retf
shl
fist
nop
and
add
xlat
shl
mov
scas
cvtps2pi
das
push
jmp
sub
loope
adc
pop
iret
cmc
mov
retf
jo
mov
sub
jg
call
xchg
(bad)
retf
adc
(bad)
mul
add
adc
test
and
in
inc
cmp
jo
inc
mov
cld
push
push
xor
repnz
xchg
dec
add
sahf
movs
or
retf
fisubr
xor
sti
sbb
sub
mov
dec
rcl
pop
imul
daa
adc
mul
mov
call
in
lds
cdq
ja
cmc
ficom
fild
cmps
jbe
lods
mov
(bad)
stc
push
cmps
rcl
lods
sbb
test
pop
xlat
jle
test
daa
push
xchg
(bad)
test
out
xchg
xchg
(bad)
jmp
adc
mov
xor
mov
and
retf
imul
orps
arpl
adc
and
add
scas
jno
mov
fstp
dec
fsubrp
retf
lea
xchg
push
pusha
mov
xchg
lea
test
sub
jns
rcr
icebp
outs
add
ja
outs
or
sbb
xchg
rcr
push
dec
pop
loop
outs
mov
mov
add
adc
shl
or
imul
xchg
xchg
lahf
mov
lods
adc
ins
call
inc
lods
mov
jbe
jg
inc
or
ja
outs
js
aaa
(bad)
jmp
sbb
sbb
push
adc
xchg
fmul
mov
ret
jmp
push
js
outs
pusha
push
add
test
test
leave
cwde
js
loop
jns
pusha
sub
inc
cmps
and
sbb
sti
iret
imul
push
add
pop
or
aas
out
push
nop
push
mov
movs
jg
dec
xrelease
int3
mov
push
call
xor
cmc
(bad)
jge
sub
es
xlat
shr
jge
inc
cmp
cmp
cmp
loope
mov
sbb
jmp
xchg
xor
js
in
xchg
mov
stos
push
loop
cmp
mov
or
add
adc
fcom
push
aad
fcmovbe
mov
rcr
imul
pop
mov
in
dec
lds
xchg
std
jae
pop
loop
jecxz
fld
pop
inc
ss
jno
dec
jno
sub
dec
xor
push
loope
pop
or
add
cmc
jne
jmp
xchg
mov
cmovb
jns
(bad)
(bad)
fs
adc
mov
jge
add
movs
sub
ret
cmp
lods
cmp
pushf
adc
push
add
es
push
imul
push
adc
cdq
add
stos
mov
push
sbb
sub
adc
inc
xchg
lods
pop
mov
pop
out
std
enter
ret
cmp
xor
fisub
pop
cli
into
outs
gs
sahf
leave
sub
fs
jo
popa
mov
inc
cmp
cs
(bad)
and
sub
xor
mov
bound
pop
push
jecxz
fst
pop
mov
inc
xor
pop
mov
fsub
repnz
mov
enter
cmp
mov
cld
mov
adc
mov
push
cwde
xchg
dec
and
sbb
xor
(bad)
icebp
adc
scas
sub
mov
mov
xor
es
stos
sub
iret
int
cmp
clc
out
or
pushf
jbe
std
pop
out
std
adc
outs
xlat
sub
shl
jb
jg
push
in
lds
pavgw
aad
lea
std
mov
leave
test
mov
mov
cs
pop
adc
in
xchg
ret
aas
inc
and
inc
popf
push
xor
mov
shr
mov
mov
out
mov
fst
retf
push
mov
out
loopne
inc
stos
jmp
push
call
fldcw
mov
fld
fsubr
popf
push
and
xchg
mov
fwait
sub
mov
mov
pop
jmp
sub
jno
leave
and
mov
mov
fisubr
test
lods
or
add
lock
cmp
call
xchg
inc
or
pop
sahf
in
lahf
aaa
jnp
ins
jnp
xchg
jb
es
sub
and
sub
xchg
jno
dec
mov
stos
retf
lods
xor
sbb
retf
shr
dec
dec
out
test
test
arpl
stos
cld
add
stc
mov
nop
js
addr16
nop
cmc
push
lea
fld
mov
stc
(bad)
andps
sbb
pop
movs
imul
sti
xlat
ins
inc
into
mov
adc
inc
outs
pop
jl
fucom
aad
pop
push
xchg
popf
pop
dec
mov
jmp
mov
lds
inc
mov
mov
mov
pop
sbb
inc
(bad)
cmp
and
and
test
int
cmc
add
pop
leave
mov
push
sbb
jle
stc
in
fnstsw
data16
retf
jl
pop
mov
xchg
push
pushf
int
mov
dec
js
mov
add
mov
cmps
addr16
sub
xchg
fsubr
test
retf
fwait
push
xchg
cmp
mov
cwde
sub
loope
sbb
aaa
mov
sub
pop
inc
mov
loopne
cmp
mov
dec
test
dec
sahf
mov
fild
hlt
xor
adc
mov
add
pop
push
cmps
aas
add
xor
jmp
lods
outs
sub
pop
xchg
pop
cmp
push
cmps
xor
mov
and
jne
sub
push
push
std
(bad)
out
stc
hlt
inc
sbb
jmp
inc
inc
xchg
adc
(bad)
xor
mov
pop
and
pusha
xor
dec
test
scas
icebp
sahf
xchg
pushf
inc
in
sub
xchg
jmp
and
cld
test
sbb
and
xchg
sbb
add
frstor
out
stos
scas
and
stc
(bad)
and
cwde
cmp
fwait
imul
lock
mov
int
xchg
mov
sub
sub
les
pop
(bad)
dec
add
adc
les
iret
or
ins
adc
cmp
cdq
xchg
(bad)
sahf
addr16
shl
out
(bad)
pop
xor
cld
xchg
mov
sub
dec
lock
mov
neg
push
dec
mov
movs
jne
push
xchg
loope
dec
and
(bad)
mov
cmovs
xlat
retf
inc
das
sbb
adc
mov
mov
fsub
cmc
cmc
and
es
pushf
xor
movs
jecxz
adc
sti
sbb
pop
jl
(bad)
dec
cmps
xlat
inc
sbb
inc
sbb
mov
cmp
bound
cmp
ror
mov
push
(bad)
jl
xor
mov
mov
jae
hlt
jge
xchg
jo
pop
push
call
mov
lea
dec
push
in
fdivr
cmc
push
sub
rcr
aaa
outs
scas
movs
pop
xchg
adc
ins
(bad)
cmp
inc
mov
mov
mov
jle
ins
retf
out
jbe
mov
mov
outs
scas
stos
adc
adc
loope
cmp
mov
popa
shr
js
cwde
pop
or
es
jne
jle
outs
imul
fild
in
add
std
or
ja
mov
xchg
xchg
mov
fcomp
jb
call
push
pop
enter
xor
pop
test
mov
dec
adc
repnz
inc
push
pop
fmul
movs
push
push
push
inc
(bad)
push
fldenv
pop
cmps
sub
aad
push
loope
aad
push
sbb
pushf
pop
push
(bad)
mov
popa
fidivr
call
aas
in
mov
dec
outs
add
and
pop
adc
fwait
sub
sub
xor
sbb
sub
jb
lods
(bad)
(bad)
mov
or
outs
and
sbb
add
fist
hlt
push
jb
sub
inc
cdq
loop
pushf
mov
es
loopne
push
push
out
xor
loope
(bad)
xor
cmps
jnp
popa
push
jns
cli
pusha
clc
xor
jns
ficom
aas
in
outs
pop
js
ins
ror
imul
mov
repz
inc
dec
pop
cmp
and
(bad)
(bad)
popa
cmp
jb
mov
mov
ret
add
inc
mov
pop
xchg
inc
iret
xchg
cmp
inc
xchg
mov
sub
je
inc
jb
xor
outs
aad
add
xchg
xchg
test
ja
jmp
imul
jae
and
std
cmp
xor
aad
das
cmp
xchg
and
lahf
push
lahf
les
(bad)
cmp
pop
sahf
add
in
sub
lock
fisub
test
bound
pop
cwde
enter
enter
rol
std
push
xor
pop
xchg
adc
jbe
mov
lods
inc
gs
stos
ins
stos
loopne
das
pop
scas
push
(bad)
mov
or
cwde
jnp
xor
push
mov
mov
in
cmp
lods
push
xchg
arpl
outs
lods
out
aad
imul
add
mov
pop
sti
aad
xchg
mov
mov
sbb
aam
test
mov
(bad)
leave
fdivr
cmp
xor
mov
dec
add
leave
nop
add
sub
and
pop
and
jno
pushf
cld
fst
std
xor
ss
in
loopne
sub
retf
xor
push
push
add
pop
cs
call
mov
inc
mov
xchg
pop
hlt
aam
push
rcr
out
jnp
out
xor
xchg
sbb
popf
mov
mov
stc
jp
mov
push
xchg
mov
ja
les
les
dec
xor
std
fdiv
jmp
movs
retf
jg
push
test
pop
sbb
cs
clc
cwde
retf
push
jno
cld
cmps
push
pop
rcr
jmp
mov
fbld
adc
loop
mov
loop
dec
dec
neg
dec
daa
stos
into
lods
sub
xchg
fdiv
add
jle
sub
cli
jge
shr
xchg
in
and
fdivr
jbe
cmp
loop
fimul
inc
dec
sbb
cmp
pop
inc
sahf
push
mov
cmps
and
xor
fsubrp
repz
jge
dec
call
mov
jns
movs
lods
out
into
(bad)
imul
or
sbb
fdivr
add
jp
ror
jl
fcom
adc
pop
push
mov
pop
or
stc
popa
sub
out
into
jbe
mov
int3
push
sbb
jns
push
cmps
mov
sub
aaa
adc
popa
jo
cwde
lahf
or
pop
mov
ficomp
movs
(bad)
bound
adc
sub
sbb
adc
pop
ins
shl
outs
jb
test
mov
sub
sbb
inc
pop
pop
daa
mov
jp
into
out
jnp
xchg
dec
imul
jb
dec
out
shl
dec
enter
icebp
cmp
mov
mov
cmp
outs
call
add
test
ror
pusha
movs
add
or
mov
sub
jmp
jno
dec
mov
fxrstor
vcvtpd2ps
mov
das
sub
inc
cmp
or
data16
or
inc
cdq
xor
mov
ja
enter
(bad)
imul
jae
mov
in
inc
fcom
repz
cmp
out
aas
cmp
and
js
add
dec
dec
mov
cdq
push
add
test
cmp
lock
into
mov
(bad)
adc
jl
push
sbb
ins
stos
xor
cmp
fs
gs
jae
pop
xchg
aad
or
or
fmul
push
mov
mov
xor
mov
arpl
ins
inc
pop
mov
jmp
lods
stc
(bad)
jl
(bad)
retf
pushf
cmps
hlt
mov
sub
enterw
xor
leave
js
outs
pop
pop
sub
jbe
lds
push
mov
xchg
imul
sti
jecxz
fsubp
sbb
pop
mov
sub
rcr
jecxz
out
mov
xor
jl
leave
out
lods
add
mov
call
in
xor
(bad)
dec
xor
mov
lock
xchg
stos
cli
fild
mov
add
shl
pop
scas
fistp
xor
in
inc
dec
jns
imul
iret
sub
push
sbb
xor
fisttp
loope
mov
pusha
hlt
xor
xchg
in
stc
mov
pop
sub
(bad)
iret
dec
push
mov
cmp
adc
pop
fistp
sbb
fcom
push
xor
fidivr
fsub
push
and
scas
cmps
gs
push
loopne
dec
rol
(bad)
fcom
in
mov
or
(bad)
shr
daa
ds
mov
into
fimul
lahf
popf
aam
pushf
and
sub
mov
and
cdq
cmp
ins
jo
and
xchg
xor
jmp
adc
mov
packsswb
icebp
outs
sbb
ror
retf
enter
dec
lahf
push
mov
pop
or
popa
xor
jmp
les
ss
jge
out
mov
fnsave
out
cli
loop
xor
xor
loop
ins
cld
adc
inc
adc
xor
adc
daa
nop
aaa
(bad)
shl
int
sbb
cwde
pop
stos
inc
sub
sar
aas
xchg
xor
bound
jl
aad
add
mov
sbb
or
cdq
in
xor
mov
data16
nop
push
mov
repz
or
ss
add
push
pop
xchg
mov
add
jae
mov
jne
jp
jbe
test
add
aad
fldenv
adc
loopne
pop
dec
or
cmp
in
aaa
loope
xor
sbb
inc
fwait
cmps
loope
mov
sbb
fst
fmulp
inc
add
sar
pop
cmps
jle
retf
push
adc
xchg
sbb
das
(bad)
jne
mov
movs
xchg
ficomp
bsr
cmps
pop
aad
inc
inc
in
or
jae
adc
push
je
pop
mov
inc
inc
xchg
leave
pop
jne
mov
pop
and
pop
or
(bad)
popa
jle
cmps
in
or
jp
add
sti
cmp
pop
mov
xor
test
lock
fimul
call
cmp
push
sub
and
repnz
mov
inc
push
out
not
xchg
cwde
pop
retf
push
cmc
test
in
xor
jo
(bad)
mov
mov
(bad)
jne
mov
inc
mov
add
mov
xchg
test
cmps
jp
sub
dec
sub
pop
inc
test
imul
cmp
cmp
movs
push
sub
(bad)
ds
jge
dec
(bad)
inc
std
movs
push
imul
sub
imul
dec
mov
(bad)
icebp
loopne
sbb
aad
jb
rol
mov
call
addr16
sub
fild
call
sub
rol
into
imul
adc
cmp
push
lods
cs
push
sub
call
mov
fsub
fwait
imul
or
jge
gs
in
not
add
and
xor
jnp
xchg
sub
jnp
dec
imul
or
and
mov
sbb
rol
enter
push
push
dec
movs
pop
adc
mov
dec
xchg
jl
push
cmps
int
and
aas
ss
mov
xchg
fwait
mov
loopne
jmp
sub
inc
inc
retf
adc
mov
fiadd
retf
or
retf
out
repz
sub
jmp
les
(bad)
pop
mov
cmovo
popa
frstor
sar
aaa
inc
dec
push
loopne
jbe
dec
ds
imul
fmulp
xchg
add
fistp
enter
clc
rol
scas
push
dec
ja
in
retf
xchg
test
scas
jnp
and
pop
movs
lock
aad
outs
sbb
adc
pop
mov
xor
adc
clc
xchg
pop
in
dec
std
je
lock
jl
cmp
xor
mov
dec
aam
js
sbb
adc
xchg
sbb
mov
sbb
jmp
or
xor
xchg
inc
sbb
outs
mov
pop
data16
aaa
and
mov
adc
mov
dec
movs
clc
xor
lds
dec
jle
mov
and
div
div
mov
xchg
push
inc
add
stc
push
fisubr
rol
imul
ficomp
addr16
pop
cmp
sub
inc
mov
into
cmc
push
xor
xchg
ins
mov
mov
mov
jp
xchg
mov
jle
out
pop
imul
stc
mov
jns
lock
xchg
aam
xchg
mov
ins
sub
ror
int3
jae
test
mov
add
inc
add
fimul
sbb
dec
outs
sub
pop
sub
add
cdq
shl
add
pop
out
stos
xor
sahf
jnp
xchg
cmp
loop
dec
push
fnstsw
ret
push
pop
xchg
fmulp
push
je
or
clc
(bad)
icebp
mov
and
inc
jl
sbb
loopne
stos
test
test
or
ffreep
cli
cmp
scas
gs
adc
fdivr
into
div
or
cld
js
push
pop
and
mov
adc
mov
fs
in
es
js
jl
cmps
pop
fist
or
and
not
imul
ret
mov
out
dec
(bad)
jne
jae
cli
pusha
inc
dec
addr16
cdq
sahf
sub
cmp
xor
add
mov
ret
mov
out
dec
gs
push
imul
mov
xor
pop
ins
pusha
pusha
adc
mov
inc
lock
iret
push
jecxz
sub
mov
int
jo
xchg
inc
movs
mov
mov
(bad)
ds
lds
mov
dec
and
pop
mov
inc
push
pop
xchg
cld
fisub
ret
mov
retf
cmp
lock
pop
popa
jae
mov
int
cmp
adc
mov
out
sub
sbb
pop
aas
pop
jp
xchg
ror
lea
rol
mov
inc
inc
les
(bad)
out
aaa
out
cdq
lods
inc
(bad)
js
jb
and
pop
push
jecxz
test
imul
mov
and
popa
(bad)
cmp
mov
not
xor
es
outs
mov
ret
adc
icebp
mov
jo
adc
scas
mov
das
dec
fild
fcmovnbe
mov
shr
movs
fidiv
int3
out
sbb
mov
in
mov
push
or
fdivr
shl
leave
not
jecxz
popf
bound
cmc
call
or
add
xor
(bad)
adc
pop
cmps
xor
mov
push
adc
push
dec
cmp
push
bound
cwde
lock
sar
sbb
and
jge
mov
or
xor
inc
jge
stc
(bad)
sub
adc
lods
ret
jp
dec
jle
mov
jecxz
aad
cmp
aad
inc
aaa
gs
jnp
ja
loopne
sub
pop
dec
sub
mov
iret
ja
inc
mov
aad
jne
cmp
jp
jo
xchg
scas
ins
push
fistp
xchg
(bad)
adc
les
sub
fiadd
cmp
mov
mov
iret
xchg
sbb
jns
xchg
dec
xor
bound
aaa
(bad)
call
or
ss
jne
adc
adc
icebp
ins
rol
or
rcr
push
cmp
stos
mov
movs
ins
sahf
dec
ss
or
xchg
mov
rol
dec
jo
mov
sbb
stc
and
pop
cmp
arpl
daa
cmp
cmp
mov
je
(bad)
loop
mov
jl
(bad)
sahf
xor
xlat
pop
mov
test
hlt
push
mov
sbb
xor
and
enter
movs
and
jg
adc
inc
stos
into
jb
(bad)
cmp
pop
(bad)
in
xchg
pop
aaa
xchg
jb
push
xchg
sbb
sub
shr
xchg
jl
in
pop
in
movs
dec
fsub
sti
ins
xchg
inc
loop
push
adc
push
lods
test
mov
retf
mov
in
lahf
xchg
sub
mov
mov
fstp
hlt
jp
fdivr
sub
jmp
jne
xchg
mov
xor
xlat
sub
fisub
out
mov
mov
and
lds
pop
arpl
lea
loop
inc
test
mov
lahf
rol
scas
cmp
popa
mov
cmp
les
cmp
ret
mov
push
xchg
add
pushf
dec
shl
sub
fisub
ja
fdiv
push
sub
fst
lods
and
xlat
xor
push
xor
(bad)
jno
cs
shl
cwde
pushf
aam
jecxz
test
and
jno
sub
or
adc
xchg
arpl
xchg
xor
pop
icebp
ds
xlat
fdivr
imul
mov
mov
mov
xchg
je
into
cmc
add
adc
inc
push
and
pop
leave
xor
push
cmc
or
fcmovnu
dec
clc
xor
stos
push
pop
fild
or
jl
or
je
xchg
repnz
loopne
xchg
jnp
mov
xor
inc
mov
jno
ds
mov
sub
popa
fwait
dec
push
daa
cs
cmp
out
(bad)
cld
cld
repnz
sbb
inc
inc
stos
(bad)
pushf
and
aaa
jb
call
mov
jae
(bad)
and
xlat
int3
add
mov
jbe
add
sbb
out
cmp
adc
jle
out
imul
loop
dec
fidiv
and
fist
mov
push
dec
out
imul
cmc
movs
aam
in
pop
mov
sub
das
mov
icebp
out
or
pop
pop
stos
or
sbb
push
cmp
xchg
cdq
mov
je
mov
ror
sbb
and
mov
into
jns
(bad)
mov
adc
adc
or
(bad)
outs
mov
jae
jno
fisubr
push
scas
ja
outs
inc
xchg
mov
push
retf
cmp
cld
aas
mov
fld
adc
retf
push
jp
rcl
jp
iret
sahf
fwait
push
add
xchg
stc
inc
jne
xchg
lods
fstp
mov
leave
xchg
jp
call
mov
jno
(bad)
iret
call
retf
fsubrp
or
add
out
jne
or
mov
sub
sub
pop
outs
sbb
ror
ret
add
pop
push
jb
call
mov
pop
pop
mov
xchg
mov
and
jb
push
cmp
hlt
jmp
stos
adc
adc
and
fimul
retf
or
pop
stc
push
push
shl
and
fucom
mul
stc
(bad)
movs
test
xchg
(bad)
jmp
ja
(bad)
je
lods
paddusb
mov
sub
push
mov
sub
and
addr16
pop
test
cmp
(bad)
sbb
or
data16
outs
ds
jae
movups
lds
cmp
dec
in
fcom
jmp
xor
jmp
dec
(bad)
(bad)
adc
xor
mov
jb
mov
push
retw
stos
out
sub
jl
lods
neg
ror
xchg
ins
jg
xchg
xchg
outs
jg
mov
mov
xchg
xor
inc
jle
cli
test
or
mov
test
retf
adc
sbb
ja
jo
xchg
push
fiadd
ja
xchg
mov
gs
xchg
mov
fdiv
ja
popa
mov
lods
loop
and
lods
add
pop
icebp
mov
mov
idiv
pop
cmp
std
cs
adc
out
ins
sbb
fwait
mov
std
cmps
push
stos
cmp
sti
leave
sub
adc
fild
xor
icebp
pop
add
xchg
or
arpl
mov
(bad)
mov
(bad)
nop
push
out
mov
ss
jne
call
jmp
mov
cwde
aam
ret
retf
xchg
in
mov
sub
ret
jmp
pop
fcom
adc
daa
add
inc
push
mov
ror
and
test
in
xchg
adc
jge
lods
pushf
jo
add
cli
rcl
(bad)
jbe
cwde
mov
(bad)
gs
test
and
stc
mov
lea
mov
dec
cmp
pop
or
mov
inc
ficom
ret
xor
inc
sbb
retf
and
lods
xor
lock
rol
mov
cmp
inc
xor
xchg
out
lods
es
mov
xor
push
adc
(bad)
std
sub
adc
and
jo
xor
push
mov
cmps
inc
inc
in
sub
das
pop
mov
test
cmp
mov
add
leave
stc
push
ins
push
sar
stos
dec
pushf
clc
arpl
mov
hlt
and
ds
pushf
lods
out
ror
sbb
sub
ja
dec
push
dec
mov
and
cmp
pop
mov
ja
ret
xchg
sar
add
xor
std
sub
xchg
sub
and
cmp
pop
out
andps
add
cld
scas
xchg
sub
push
lods
mov
xlat
xor
cdq
(bad)
loopne
(bad)
iret
jb
lahf
pop
fnstsw
cmp
outs
xor
xor
les
pop
lahf
and
retf
push
cmp
ret
jl
push
test
jecxz
es
and
int3
add
jmp
jmp
cli
mov
dec
bound
lods
adc
retf
fwait
sbb
inc
mov
mov
sbb
addr16
or
ret
int3
mov
outs
xor
pop
sbb
inc
mov
in
dec
(bad)
call
lods
push
push
inc
adc
adc
sub
or
fimul
xchg
xor
and
cvtps2pd
loop
cmc
outs
add
or
fcomp
bound
or
cmps
js
(bad)
loope
jg
arpl
adc
xor
(bad)
fcomp
in
pop
icebp
push
cmps
jns
mov
or
inc
clc
cmp
in
jmp
pop
repnz
cmp
fs
lds
jle
jl
sub
push
dec
cmp
arpl
push
mov
loope
icebp
mov
sub
jp
xchg
push
pop
mov
and
daa
es
jle
cmps
adc
xchg
in
push
nop
jns
xor
push
inc
call
cmp
xchg
fstp
loopne
and
jl
call
jg
mov
leave
test
or
mov
imul
xor
in
or
jnp
dec
arpl
push
test
and
inc
pop
dec
aad
in
jbe
xor
repnz
mov
mov
mov
sub
mov
inc
loopne
into
or
aaa
arpl
movs
nop
and
inc
dec
xor
push
cmp
ins
xchg
xor
fsubp
cwde
iret
pop
mov
mov
push
pop
pop
add
mov
xchg
sub
or
mov
loopne
sub
jle
cmps
push
repz
pop
je
push
jmp
pop
outs
stos
neg
cli
inc
mov
push
mov
push
mov
enter
pop
stos
fbld
pop
push
pushf
test
push
push
xchg
arpl
adc
inc
pushf
dec
popa
mov
push
xchg
jmp
lea
fld
push
jmp
mov
jp
adc
jp
inc
jmp
cmp
js
lods
ds
lods
(bad)
push
cli
icebp
hlt
xchg
inc
xchg
and
dec
mov
aaa
into
int
fwait
jmp
(bad)
sti
push
fcom
pop
fstp
inc
clc
xor
or
hlt
inc
or
adc
or
popf
not
outs
and
lods
xlat
in
dec
and
xchg
sbb
nop
outs
aaa
rol
out
push
xchg
mov
mov
adc
retf
daa
push
jge
and
xchg
test
inc
pop
jecxz
xor
ins
or
sub
and
in
dec
cmp
jecxz
icebp
sbb
(bad)
cld
sbb
mov
sub
jle
mov
dec
clc
pop
or
cmp
or
push
fisubr
push
push
mov
inc
lds
or
loope
outs
jnp
icebp
and
fcmovb
fiadd
repz
dec
push
(bad)
xor
(bad)
loop
xor
lods
movs
fidivr
cmp
mov
pop
arpl
dec
xchg
cdq
aaa
or
jl
push
push
inc
jo
imul
xor
mov
sub
lea
pop
xchg
push
and
(bad)
not
dec
dec
out
fsubrp
cs
cdq
fsubr
jo
xchg
push
inc
cmp
mov
sbb
mov
jp
mov
mov
push
push
mov
xor
ret
dec
dec
sub
push
inc
mov
pop
imul
std
arpl
push
adc
inc
hlt
jnp
cmps
cmps
js
mov
popf
xor
cmc
ins
mov
cdq
jnp
xchg
loopne
imul
fisttp
pop
out
jge
or
cmc
lods
lods
add
ficom
pusha
imul
push
(bad)
pop
fdecstp
push
and
xchg
pop
into
cld
shl
sbb
int
adc
xchg
sbb
mov
(bad)
ss
retf
std
hlt
data16
jg
lahf
sbb
and
mov
xchg
cmp
pop
inc
(bad)
clc
daa
adc
xchg
push
cmps
sub
bound
pop
xchg
cmps
sub
push
pop
psrad
into
xor
rcr
ret
aam
hlt
call
xchg
xlat
shl
cmp
and
mul
mov
xchg
push
push
fwait
ror
fild
mov
std
xor
cmp
dec
dec
cmp
fiadd
call
push
push
imul
mov
retf
test
adc
ret
pop
cmc
dec
ins
jge
jle
push
mov
cli
(bad)
sub
ss
cli
dec
les
icebp
rcl
scas
out
mov
fcomp
cmp
rcl
scas
mov
data16
mov
inc
mov
mov
repz
rol
jbe
mov
cmp
repz
fistp
push
xchg
ds
dec
out
pop
les
mov
adc
arpl
icebp
into
jecxz
xor
(bad)
cmps
mov
fisub
popa
adc
or
xlat
xchg
cmp
cmps
inc
cmps
dec
sub
sub
jmp
and
jl
call
ss
scas
mov
cmp
and
mov
jl
cmp
push
rcr
mov
lock
inc
push
sbb
lahf
dec
repz
inc
or
int3
dec
and
mov
pop
mov
add
scas
div
ja
sub
(bad)
in
daa
xchg
ss
jge
sar
shl
aaa
xchg
sbb
jmp
mov
sub
mov
mov
nop
rcl
xor
ss
and
xchg
pushf
add
cli
cld
adc
mov
pop
cs
test
inc
pop
adc
dec
mov
int3
neg
loope
mov
add
and
cs
push
sar
ficom
inc
hlt
(bad)
push
fadd
gs
inc
mov
xor
ins
sbb
push
hlt
xchg
mov
imul
sbb
fdivr
sahf
lock
loopne
jno
or
lods
adc
and
sbb
(bad)
mov
(bad)
sti
ins
pop
popa
stos
jecxz
into
xor
push
sbb
jg
push
hlt
add
clc
inc
pop
push
push
imul
ror
pop
mov
fiadd
xchg
sbb
jo
ror
or
into
out
sub
inc
(bad)
psubsw
pop
or
call
rcl
mov
jno
push
add
sbb
nop
test
ss
out
xchg
push
es
lahf
and
mov
ins
ins
mov
adc
sub
test
fdivrp
not
and
and
mov
sub
and
shr
fwait
cld
adc
xchg
dec
sub
sbb
pop
push
jns
dec
ret
loop
mov
xchg
xlat
mov
cmp
shl
or
daa
sahf
mov
fs
xlat
and
xor
popf
mov
hlt
adc
sub
(bad)
add
xchg
stos
sbb
inc
lods
mov
dec
test
pop
push
sti
(bad)
std
mov
je
push
(bad)
in
call
retf
repz
lea
inc
xor
add
in
pop
or
mov
fimul
test
in
lahf
lock
repnz
bnd
push
cmp
mov
inc
mov
fisub
add
add
pop
cmp
arpl
mov
adc
aad
int
add
outs
call
ds
lods
jbe
clc
je
jne
mov
or
cld
leave
pop
inc
sub
dec
leave
mov
popa
or
push
out
push
cld
test
mov
jp
test
mov
mov
or
dec
mov
pusha
outs
lock
jae
mov
loopne
(bad)
or
push
jecxz
xor
les
aad
ficomp
mov
xor
icebp
inc
dec
sub
scas
mov
int
test
mov
push
fcmovne
ins
shl
pmuludq
jns
std
fnstcw
xor
repnz
les
and
and
cmps
out
clc
and
xor
cmp
jo
xchg
icebp
push
ds
sbb
xchg
sub
jae
or
sti
xor
dec
movs
rcr
push
mov
jae
cmps
cmc
dec
ret
(bad)
addr16
(bad)
mov
hlt
jge
loop
mov
push
sbb
cmps
in
mov
add
xchg
les
test
pop
push
cmp
mov
mov
adc
jmp
cmps
pop
ficomp
sbb
pop
xor
test
cmp
out
sbb
xor
cmp
out
mov
jp
jb
push
push
jnp
cmovg
ins
(bad)
fwait
jge
or
clc
jmp
mov
push
fcom
shr
mov
mov
xchg
sbb
sbb
sub
jbe
jecxz
mov
call
lahf
pop
test
out
xchg
or
in
fild
push
mov
sbb
xchg
and
mov
out
lds
mov
pop
dec
push
rcr
pop
(bad)
mov
jno
and
xchg
out
dec
and
movs
cs
out
leave
pop
mov
test
jmp
lds
push
add
ret
fwait
out
movs
sbb
adc
arpl
les
int
xor
sbb
adc
aad
push
enter
pop
inc
push
mov
adc
push
add
scas
ss
ins
sbb
push
xchg
aad
xchg
pop
fld
cld
mov
ins
inc
inc
mov
xchg
push
std
(bad)
push
inc
outs
push
and
sbb
cs
sbb
cmp
(bad)
(bad)
(bad)
cmp
xor
or
aaa
scas
mov
push
imul
clc
xchg
icebp
mov
test
imul
in
sub
inc
aas
adc
outs
inc
sahf
fsubrp
pop
ins
or
pop
stos
sub
out
retf
pop
sbb
imul
rol
aad
ja
loope
xchg
cmps
aaa
pop
outs
test
scas
xor
fs
lods
out
jmp
mov
pop
pop
sbb
or
in
inc
push
push
je
push
popa
xor
mov
addr16
xor
and
push
sub
inc
push
pop
sub
mov
popf
sbb
sub
xchg
inc
mov
dec
push
xor
lods
outs
pop
cld
ins
push
mov
dec
sub
or
das
shl
add
mov
mov
mov
jg
ins
and
jne
adc
and
daa
cs
mov
lods
mov
inc
xor
and
loop
in
ss
jne
xor
xor
mov
xchg
sbb
mov
cdq
and
cmp
das
jg
push
iret
pop
inc
adc
shl
sbb
into
xchg
out
or
jmp
mov
loopne
pop
bound
push
push
in
xor
test
jno
rcr
sahf
lds
push
popf
cmps
jmp
cwde
stos
pop
cld
inc
repnz
retf
int3
out
push
sbb
push
js
dec
push
popa
ror
into
das
retf
dec
mov
stos
xor
icebp
ins
pop
leave
jmp
add
and
ins
mov
pop
sub
xor
sbb
fs
sbb
(bad)
int3
adc
inc
and
call
sahf
cmp
fld
push
xor
imul
icebp
(bad)
fcom
xor
in
stc
pop
fiadd
pop
out
in
mov
add
lods
retf
pop
pop
aaa
shr
jb
enter
xchg
cs
xchg
jmp
pop
dec
cmp
mov
mov
pop
and
lds
mov
sub
mov
test
xchg
adc
inc
rcl
pop
mov
out
xlat
push
loope
jno
sub
xchg
lds
xor
loope
sub
fisttp
pop
(bad)
mov
or
add
in
lock
or
mov
ss
xchg
cli
movs
enter
outs
jno
ja
xor
push
ret
jle
pop
scas
fidiv
adc
out
xchg
add
cmp
push
push
mov
sbb
loop
imul
jl
out
jno
push
inc
ins
push
mov
push
mov
push
fidiv
sbb
mov
cmps
jae
adc
dec
mov
clc
sbb
int3
adc
sbb
icebp
push
dec
push
mov
scas
adc
rcl
in
cwde
je
jp
adc
sbb
push
pop
inc
or
or
mov
cli
xor
rcl
inc
mov
xchg
int3
cmp
dec
pop
mov
add
jle
mov
mov
sbb
fsub
inc
jne
jl
ins
jle
pop
pop
fld
mov
xchg
xor
adc
pop
ins
jb
mov
jbe
ret
fucomip
inc
cmp
mov
retf
or
repnz
imul
hlt
xchg
dec
outs
add
mov
push
push
adc
or
fiadd
mov
cmp
bound
sbb
xchg
aad
imul
out
mov
fiadd
jg
out
out
sbb
mov
add
out
xchg
pop
xchg
(bad)
xor
push
ins
addr16
lock
rol
xor
xor
cld
test
pop
dec
call
outs
fs
pop
jo
cmp
xor
inc
and
xor
std
dec
movs
in
hlt
(bad)
and
outs
test
and
and
push
add
cdq
adc
push
imul
ds
and
push
inc
jne
mov
push
cld
fnstenv
jbe
mov
jge
add
je
dec
retf
ret
inc
rcr
dec
dec
sub
mov
repz
js
mov
inc
call
jp
ins
lea
outs
in
sbb
aam
stos
aas
fstp
loop
adc
push
pop
pop
(bad)
std
push
(bad)
rcl
mov
lahf
cmp
xchg
mov
sbb
mov
jae
push
cmp
cmps
(bad)
pop
ficom
out
jb
xchg
or
daa
test
(bad)
jae
(bad)
dec
cmps
jmp
adc
jmp
retf
pop
ret
stc
push
inc
ret
repnz
fsubrp
ja
aad
and
cwde
call
daa
repnz
dec
and
dec
mov
popa
jmp
sahf
(bad)
je
mov
(bad)
neg
iret
or
repz
mov
mov
test
mov
and
hlt
mov
pop
in
or
sub
sahf
and
rol
pop
shl
add
jnp
stos
jecxz
adc
es
hlt
test
sub
pop
sbb
xor
dec
mov
or
xor
jns
or
adc
mul
mov
(bad)
jmp
pop
add
mov
retf
xor
push
mov
inc
cmp
or
cmp
rcr
stos
inc
fs
xchg
sub
repnz
mov
mov
xchg
loopne
addr16
or
adc
add
dec
mov
add
pop
sbb
dec
fstp
jmp
daa
movs
cs
mov
daa
xor
push
or
pop
push
pop
int3
iret
test
mov
retf
jmp
int3
mov
pop
(bad)
xor
das
ja
push
inc
push
shl
and
add
xchg
jmp
fisubr
jmp
fwait
mov
sub
mov
push
imul
mov
push
hlt
and
leave
ins
sub
jbe
sub
sub
lds
fcmovne
sub
lods
sub
test
(bad)
popa
cdq
cwde
int3
mov
dec
out
jmp
je
test
std
push
fst
imul
ss
mov
or
fdivp
or
imul
loopne
fimul
xchg
cmps
push
mov
mov
lods
push
mov
std
(bad)
cli
test
or
or
xor
vphaddbq
pop
test
mov
lock
ja
inc
jle
les
mov
das
add
adc
das
jl
jl
xchg
retf
imul
pop
jne
arpl
pop
shl
inc
mov
cmp
push
lock
add
js
mov
sub
mov
add
in
lahf
mov
or
popf
mov
mov
push
jmp
cs
sbb
repnz
fnstcw
test
hlt
imul
arpl
std
fnstsw
fstp
pop
sti
mov
ficomp
adc
pop
ja
cmp
adc
or
outs
adc
jle
fucomp
xor
push
fsub
outs
sub
stc
(bad)
scas
jle
cwde
xlat
xor
fcom
arpl
sub
mov
inc
xor
and
ss
cmps
jb
ret
inc
mov
rol
in
sub
cmp
outs
(bad)
mov
lock
repz
dec
imul
push
lea
popf
mov
cmp
xchg
mov
lock
inc
xchg
js
sub
dec
int3
div
icebp
popf
xchg
adc
rcr
or
sbb
sub
mov
inc
into
call
mov
pop
bound
and
call
outs
cmc
dec
sbb
cmp
mov
dec
inc
inc
sub
add
add
fs
and
add
adc
fsubrp
mov
in
popf
pop
arpl
aam
(bad)
sbb
(bad)
mov
jl
sar
lahf
movs
or
mov
in
and
adc
jbe
xor
xchg
fiadd
scas
dec
call
enter
lods
sbb
push
dec
into
dec
stos
mov
stos
sbb
push
bound
inc
retf
jbe
movs
mov
pop
daa
mov
cld
sbb
jne
mov
or
sub
test
repnz
push
loop
adc
xchg
repnz
das
inc
push
je
mov
push
jmp
xlat
dec
out
outs
pop
dec
dec
xchg
inc
int3
cwde
adc
and
lea
(bad)
data16
(bad)
mov
call
sbb
and
outs
add
pop
movs
jbe
add
clc
cmp
push
xlat
(bad)
(bad)
mov
sub
pop
mov
scas
sbb
jae
enter
je
pop
test
stos
mov
adc
xor
sbb
dec
das
icebp
xchg
jno
std
and
ss
add
int3
pop
mov
aas
pop
xchg
push
cmps
or
clc
inc
(bad)
mov
jmp
xchg
ja
aam
inc
mov
cmp
sbb
adc
mov
jae
outs
and
mov
or
nop
cmp
nop
cwde
imul
rcl
pop
int
push
adc
sbb
test
outs
sub
lds
push
inc
fdivr
nop
jmp
rcl
jo
xor
movs
sahf
sub
xlat
aaa
movs
mov
rol
enter
mov
js
mov
and
adc
sar
(bad)
xor
popa
inc
in
mov
mov
es
push
push
dec
and
out
aad
and
out
cs
in
mov
(bad)
mov
ja
cwde
sub
or
mov
(bad)
into
out
pushf
and
xor
mov
lods
pop
dec
repz
loopne
sub
and
mov
shrd
mov
loop
lahf
aad
sub
stos
bound
dec
xchg
ds
or
and
xchg
cmp
cmps
enter
xchg
stos
and
ret
sbb
mov
test
mov
movs
cmp
mov
outs
mov
in
ret
jno
xor
jg
pop
add
pop
push
daa
adc
test
pop
fnstsw
mov
jmp
mov
pop
or
arpl
pop
dec
dec
jecxz
push
mov
add
xlat
imul
fdiv
push
mov
fld
fild
add
xor
fisttp
mov
cdq
inc
int
in
jae
imul
jb
cmp
loope
cmp
imul
pop
or
jno
retf
test
loop
dec
push
scas
xchg
ds
inc
jg
jp
iret
fiadd
les
movs
hlt
jmp
mov
enter
bound
mov
sbb
sbb
call
lods
mov
in
shl
aam
dec
mov
stos
jmp
jno
ja
loopne
pop
mov
ss
and
je
and
mov
stc
or
adc
inc
scas
add
xor
sub
fwait
mov
mov
inc
inc
imul
es
retf
mov
stos
mov
or
or
dec
sbb
dec
mov
mov
dec
jbe
add
test
sub
scas
add
adc
movs
cmp
mov
aas
mov
sbb
cmp
xor
fidiv
inc
ret
scas
xchg
jmp
leave
out
push
dec
push
dec
fadd
cdq
sti
jns
dec
bound
movs
aam
jp
int
imul
out
loope
cld
enter
pop
push
in
mov
pusha
jge
push
rol
js
push
or
ret
ret
pop
bound
push
loop
xchg
jle
inc
mov
add
iret
out
pop
mov
into
cmps
mov
out
ror
push
inc
adc
int
and
jge
lods
jbe
movs
sub
adc
lock
jle
outs
mov
xchg
(bad)
and
imul
pop
and
sub
das
(bad)
pop
add
mov
push
dec
das
jbe
rol
scas
test
(bad)
sub
loope
push
mov
mov
gs
ins
xor
in
adc
dec
cmp
test
pop
xchg
and
es
dec
movs
iret
add
loopne
sub
pushf
mov
cld
pop
add
mov
sbb
hlt
jle
cmp
pop
mov
das
xlat
push
fisttp
int3
jp
mov
stc
mov
mov
fstp
xchg
mov
mov
push
(bad)
(bad)
je
jne
(bad)
repnz
cld
rol
push
cwde
int3
jp
pop
push
je
mov
loopne
mov
pop
dec
je
aam
mov
sbb
ins
mov
call
je
scas
dec
xor
inc
jge
adc
and
sub
outs
out
daa
nop
pop
(bad)
out
outs
pop
inc
adc
ins
cmp
fdivr
sub
or
mov
and
daa
xlat
ins
jecxz
test
sub
mov
lock
or
inc
jnp
pop
push
mov
loope
jle
xor
or
test
sahf
and
push
or
adc
es
pop
or
xor
fiadd
jp
xor
loope
scas
or
ins
clc
push
stc
mov
div
(bad)
sar
cmp
mov
xor
mov
add
and
jb
sahf
sub
mov
cmps
pop
dec
in
rol
or
mov
nop
rcl
xchg
jle
xchg
rcl
js
nop
jle
and
mov
arpl
xor
aas
xchg
ret
push
push
pop
sbb
jmp
fstp
pusha
mov
ret
in
dec
mov
push
mov
fst
dec
lods
addr16
jmp
and
bound
inc
xor
mov
loopne
mov
in
test
or
rol
enter
cmp
scas
push
push
scas
mov
and
xchg
ret
push
data16
mov
jp
fs
iret
sti
lods
stos
aam
not
mov
add
std
call
mov
cmp
mov
jg
sbb
xchg
and
adc
jg
or
mov
cmp
xchg
add
sbb
mov
shr
imul
add
xchg
into
sub
loop
mov
inc
xor
mov
mov
cmc
xor
lock
pop
ins
ss
pop
inc
cmp
sbb
xchg
enter
mov
mov
cmps
(bad)
les
adc
lods
mov
(bad)
(bad)
mov
and
and
inc
xchg
loopne
sbb
xchg
xor
mov
jne
sub
int3
jne
leave
mul
mov
bound
imul
mov
leave
jbe
or
mov
dec
dec
imul
repz
lock
cmps
mov
mov
jno
aad
mov
xor
add
jmp
shl
(bad)
out
xor
cld
push
xor
and
xor
enter
or
int
aas
push
add
cmps
adc
adc
popa
rcl
mov
add
push
adc
(bad)
out
jge
retf
test
fcomp
(bad)
jnp
cli
div
mov
and
fst
add
xor
mov
inc
xor
mov
aad
mov
lods
test
call
fsubr
and
and
lds
lods
into
xchg
lea
jmp
mov
(bad)
rcl
(bad)
test
add
or
loopne
push
daa
mov
inc
mov
push
dec
push
popa
add
ret
cli
xchg
pop
iret
cs
and
pop
div
and
daa
push
outs
jge
addr16
mov
in
inc
aad
jmp
jle
jno
ret
fcom
je
out
sti
es
xchg
movs
mov
les
loop
fisttp
out
dec
add
stos
cmp
push
movs
pop
inc
dec
mov
and
mov
call
push
aam
gs
push
mov
mov
fcomp
(bad)
jg
push
mov
sbb
push
maskmovq
test
fbstp
sub
shr
in
inc
mov
(bad)
leave
bnd
mov
test
data16
enter
and
ins
test
xchg
mov
mov
mov
cmp
xchg
ins
jle
xchg
(bad)
sti
mov
add
das
ins
in
mov
and
ret
push
xchg
lods
cli
sbb
pop
sub
mov
nop
add
or
mov
inc
add
je
dec
test
lock
jle
test
xchg
push
jo
outs
inc
xchg
push
mov
pop
sbb
fnclex
fcomp
test
xchg
xor
or
inc
dec
inc
inc
mov
cmp
push
lods
sub
sub
fistp
pop
xor
imul
mov
shl
mov
mov
sahf
fstp
and
shl
call
xchg
mov
add
loop
je
xor
test
(bad)
loope
iret
cs
imul
fidivr
xchg
mov
ficomp
inc
scas
push
push
jmp
fdiv
lea
jne
int
aad
fadd
je
ss
sbb
fstp
fwait
cwde
adc
ror
fcmovbe
ja
test
shl
xchg
aam
sbb
into
xor
cmp
and
div
popa
daa
cmps
and
or
mov
sub
lea
cmp
into
nop
test
imul
ret
and
dec
and
push
es
push
in
mov
and
jne
(bad)
(bad)
inc
int3
sti
dec
hlt
nop
jno
ins
daa
mov
jmp
ds
cmp
mov
pop
xchg
xchg
xlat
aad
xor
sub
(bad)
out
inc
cld
retf
test
icebp
dec
cmc
cmp
dec
pop
xchg
sbb
test
fcmove
xor
fistp
inc
(bad)
push
sbb
(bad)
gs
pop
xchg
gs
sub
xchg
xchg
ds
cmps
xchg
aas
pop
fisubr
retf
int
pop
add
push
lods
add
sti
ss
xchg
(bad)
daa
mov
dec
inc
scas
pop
inc
imul
outs
jbe
inc
cmp
push
frstor
cmp
pop
les
repnz
adc
rcl
std
pop
or
mov
shl
xor
bound
out
sbb
in
cdq
dec
and
or
adc
neg
mov
mov
xchg
mov
cmp
jge
dec
add
outs
lods
mov
xor
fst
mov
in
cmp
xchg
(bad)
sbb
or
(bad)
dec
out
or
xor
es
xor
mov
addr16
sar
sbb
and
dec
nop
xor
or
aas
js
or
loopne
out
jge
loopne
xchg
sub
sbb
push
add
pop
sti
cmp
mov
cli
(bad)
jbe
nop
jg
jno
ror
cld
imul
xor
mov
cmp
pop
xchg
cmps
icebp
(bad)
pop
push
xchg
or
ret
mov
cli
dec
jecxz
jge
sbb
adc
scas
gs
retf
mov
out
dec
fsubr
lock
cmp
mov
aaa
fs
pop
sub
add
xchg
jecxz
pop
adc
xor
mov
mov
fmul
add
outs
jecxz
scas
or
sub
jo
imul
clc
lds
xchg
das
mov
and
pop
mov
xchg
push
cli
or
test
sub
pop
dec
jne
std
inc
in
mov
cmps
and
pop
sbb
lahf
cmp
jae
sbb
out
fdiv
loope
sub
leave
inc
add
sub
shl
nop
arpl
lea
xor
pop
ret
dec
fsub
stc
mov
jmp
or
and
mov
pop
out
xor
scas
and
mov
xor
nop
iret
mov
out
pop
mov
and
loope
cmp
sbb
cmc
outs
adc
mov
sbb
push
stc
mov
sti
das
mov
pop
adc
(bad)
push
push
mov
xchg
push
sub
adc
pop
aas
push
scas
lods
dec
out
lods
movs
fimul
inc
mov
movs
adc
icebp
push
jmp
int
add
enter
push
adc
adc
mov
lock
in
shl
neg
and
fwait
lods
rcr
mov
lods
into
es
rcr
mov
retf
idiv
pop
sub
out
mov
ror
shr
psraw
std
aaa
(bad)
push
repnz
mov
mov
mov
icebp
mov
clc
seta
(bad)
sar
push
jo
xor
xor
push
jmp
pop
pushf
or
popa
push
sub
push
add
fwait
inc
jnp
in
sbb
(bad)
mov
stos
lods
fild
loop
xchg
cld
gs
dec
push
dec
dec
xchg
data16
sub
and
and
push
inc
adc
add
dec
ret
mov
out
jp
ins
out
mov
fmul
xchg
xlat
out
test
add
pop
xor
ins
lea
cmp
addr16
hlt
dec
or
js
aaa
xchg
call
aam
lods
push
fldcw
push
out
xchg
loope
(bad)
fldenv
jo
sbb
inc
push
loope
or
bound
cmp
stos
inc
push
mov
in
mov
mov
sbb
nop
xor
adc
nop
mov
mov
sbb
adc
repz
iret
xor
(bad)
repz
mov
inc
inc
pop
pop
data16
add
outs
inc
mul
pop
sub
pop
ss
retf
push
lea
jmp
xchg
(bad)
jno
ret
sub
jg
sar
jp
fldenv
fadd
pop
mov
dec
icebp
add
mov
bound
push
cdq
cli
mov
pop
outs
retf
push
fisttp
push
in
sbb
jmp
(bad)
hlt
imul
mov
push
ja
mov
push
mov
pushf
hlt
cmp
stos
mov
aam
div
add
add
outs
push
jp
es
adc
call
xchg
mov
cmps
pop
jno
mov
stc
pop
and
int3
pop
mov
bound
or
retf
lock
hlt
add
or
inc
rcr
mov
mov
cmp
movs
sub
cmp
or
cmp
mov
sbb
ins
push
aam
push
out
movs
xor
retf
fucomi
das
lds
jno
daa
inc
and
dec
push
(bad)
imul
xor
dec
lea
xor
adc
push
mov
jae
xchg
lods
sbb
mov
sbb
cmps
scas
add
stc
iret
cmp
and
xchg
add
out
jo
push
dec
sub
sbb
sub
cmps
push
call
sar
not
out
int3
outs
ds
ins
repz
mov
sbb
imul
(bad)
jle
mov
cmc
imul
jnp
or
arpl
popa
fs
xchg
mov
ret
fiadd
cmc
push
stc
sar
lds
push
jno
retf
std
jb
es
hlt
lahf
pop
mov
(bad)
mov
js
sub
popa
mov
dec
rcr
je
out
fsub
int3
xchg
pop
repnz
mov
push
popa
call
dec
stc
outs
ret
push
xchg
aas
int
stos
in
popa
ss
fwait
sti
outs
imul
nop
mov
sbb
ja
cvtps2pi
cli
ins
mov
jmp
jne
mov
retf
mov
(bad)
and
retf
ret
lods
or
frstor
(bad)
retf
loope
shl
pop
xchg
shr
pop
fwait
imul
mov
mov
pop
xchg
cmp
adc
xchg
mov
mov
push
lock
or
mov
mov
and
add
and
dec
repz
mov
rcr
and
xchg
leave
(bad)
sbb
and
cmps
xor
sbb
(bad)
and
add
lods
mov
cmp
std
inc
into
std
pop
pop
leave
test
daa
retf
into
psubd
sahf
jp
pushf
movs
mov
mov
mov
es
outs
inc
dec
setnp
out
test
sbb
scas
out
xchg
arpl
in
ds
push
jbe
mov
sub
pop
xor
sub
push
rcl
sub
lock
pop
xor
cmp
cmp
mov
jno
xor
int3
and
(bad)
in
mov
sbb
daa
cwde
out
loopne
cdq
jg
arpl
pop
push
(bad)
repnz
(bad)
jge
popa
mov
sbb
ja
mov
adc
(bad)
and
mov
fcom
ret
test
mov
add
lods
or
sub
shl
movs
into
jno
cmp
pop
(bad)
popa
mov
mov
adc
leave
loope
push
pusha
mov
rol
and
scas
nop
dec
push
jmp
stos
xor
sub
xchg
in
push
add
adc
dec
ins
dec
lods
lea
mul
mov
mov
sub
dec
ds
stos
pop
cmp
movs
pop
loope
xlat
adc
rol
shl
sub
and
std
fiadd
ret
push
cmp
xor
retf
addr16
mov
pop
test
sti
rcl
das
push
jne
xchg
cmp
rcr
(bad)
fldenv
mov
fstp
push
adc
outs
inc
mov
fwait
in
mov
mov
mov
cmps
std
inc
xor
pop
in
mov
repnz
mov
and
mov
(bad)
js
loopne
call
ret
(bad)
mov
ins
mov
jo
shl
in
aaa
sub
mov
push
jns
jne
cmc
dec
pop
mov
and
sub
sbb
mov
add
mov
loope
sbb
pop
repnz
mov
gs
jmp
push
cmps
fnstsw
stc
mov
jmp
ror
or
adc
out
nop
add
push
xor
push
std
addr16
jns
xor
lods
popf
rcl
sub
pop
push
fldenv
(bad)
ficom
lahf
clc
imul
jbe
les
imul
pop
test
inc
xchg
sub
mov
(bad)
scas
je
cwde
pop
jb
xor
add
loope
out
push
cmp
into
ins
leave
mov
lock
stos
jne
or
cwde
cdq
push
stos
jg
jmp
inc
xor
jecxz
scas
xor
xor
xchg
inc
jno
sbb
mov
outs
leave
pop
loope
xchg
mov
nop
xor
mov
test
push
push
ins
mov
cdq
pop
stos
ss
(bad)
and
cmp
inc
adc
lahf
std
push
ds
loop
idiv
add
jbe
enter
adc
cmp
sbb
data16
or
paddd
jp
call
fld
outs
add
test
add
dec
jg
cwde
inc
jns
xor
mov
call
xor
xchg
inc
push
sub
inc
ss
movs
sub
mov
mov
loopne
mov
jl
(bad)
pop
pop
ins
mov
mov
neg
adc
arpl
fwait
or
loop
mov
out
push
add
lods
push
mov
push
dec
stos
mov
pop
inc
inc
mov
repz
xor
dec
jl
je
jae
and
mov
adc
rol
jns
inc
or
jns
dec
push
fcmovnb
xchg
inc
mov
rol
dec
inc
cmps
das
fcom
push
cmc
and
adc
dec
fmul
fnstenv
inc
retf
push
in
pop
(bad)
stos
adc
hlt
fsubr
add
add
pop
pop
mov
int3
out
data16
aad
adc
push
gs
xor
mov
dec
sbb
xchg
xor
les
add
add
gs
sbb
pop
inc
rcl
or
hlt
int3
adc
rol
scas
or
jne
cdq
ins
pop
test
mov
fist
sahf
cdq
hlt
ins
mov
into
ins
cmp
sub
jmp
adc
push
sti
cmovle
cmp
ins
mov
das
mov
jl
push
sbb
sti
push
arpl
pop
adc
jmp
jno
sub
push
xor
push
ja
in
mov
dec
push
dec
adc
test
inc
pop
and
les
int3
pop
nop
(bad)
sahf
sub
xchg
dec
cmc
popa
mov
mov
add
xor
push
push
sub
lods
aas
pop
xchg
fnstsw
gs
popa
pop
ss
cld
mov
cmp
xchg
mov
jb
or
and
add
mov
ja
add
push
cmps
sub
out
add
loopne
pop
xchg
dec
rcr
(bad)
movs
lahf
es
and
aaa
popf
or
dec
lods
sbb
xor
and
mov
adc
in
or
cmc
aas
test
mov
adc
(bad)
movs
in
movs
xchg
out
xor
lods
in
cmp
fnstcw
shl
cdq
or
sar
adc
xor
cmp
push
xchg
popa
or
ror
rol
xchg
in
mov
pop
js
jmp
(bad)
popf
pop
mov
ficom
cmp
mov
(bad)
push
(bad)
(bad)
out
sar
cmp
push
or
push
ss
push
adc
xor
mov
ffree
adc
push
adc
test
adc
cdq
out
mov
inc
inc
pop
(bad)
loope
adc
sub
leave
ins
jl
mov
cmps
mov
cmps
fld
dec
sysexit
pop
dec
lods
lods
xlat
jl
lds
loopne
div
inc
jl
mov
add
nop
mov
outs
rcl
or
mov
pop
xchg
hlt
adc
ret
rcr
sbb
imul
ja
jp
lods
dec
push
push
je
pop
int3
mov
and
push
cmp
pop
(bad)
sbb
sar
ds
push
test
js
stos
das
mov
and
push
pop
retf
ret
xor
or
sub
test
lea
lea
mov
pop
cmp
(bad)
test
dec
cli
(bad)
fwait
adc
mov
mov
pushf
icebp
adc
xchg
(bad)
sbb
pop
pop
call
add
test
mov
adc
jl
in
stc
cli
mov
xchg
(bad)
mov
popa
jl
jnp
repnz
mov
sub
inc
ja
icebp
cmp
das
test
imul
cdq
jbe
test
or
mov
int
or
xor
sub
or
ja
xor
bound
or
popa
lods
in
or
pop
push
inc
call
rcr
mov
(bad)
xchg
imul
sbb
xor
int
cmps
pop
dec
jp
jne
call
sbb
push
sub
dec
sbb
outs
mov
int3
or
dec
cmp
lods
sub
cmps
ret
jb
dec
mov
bound
fidivr
in
pop
rcr
int
arpl
xchg
xchg
cwde
pusha
(bad)
outs
cmp
jle
jecxz
cmp
sbb
pop
add
xor
sbb
aaa
into
imul
js
pop
std
lods
in
js
shr
pop
pushf
(bad)
in
cwde
pop
mov
mov
mov
movs
pop
fadd
aas
xchg
mov
ficomp
xchg
iret
rcl
lods
dec
dec
and
ss
mov
push
sbb
loope
mov
mov
jp
jnp
pop
or
in
rol
push
imul
dec
test
mov
push
dec
sar
sbb
test
sub
inc
cmps
pusha
sbb
pop
mov
fld
popa
repnz
push
leave
push
push
mov
mov
push
gs
loop
and
xchg
imul
and
push
xchg
arpl
out
cmp
adc
call
call
jae
repnz
jg
cmp
and
pop
jo
adc
and
dec
inc
mov
push
movs
ss
adc
in
cmp
ret
shl
xor
cld
dec
add
shr
sbb
inc
mov
xor
sub
fnsave
mov
jmp
cmp
inc
in
mov
test
mov
xchg
mov
add
add
call
mov
inc
or
mov
nop
mov
jle
cld
fwait
mov
mov
int3
mov
mov
xchg
mov
sub
push
(bad)
lods
or
push
mov
add
mov
call
rol
dec
pop
bound
mov
in
enter
lods
pop
push
lods
dec
pop
cmp
rol
pop
mov
inc
rol
sub
inc
rcr
hlt
sar
(bad)
mov
jae
mov
repnz
cld
pop
dec
fwait
je
jbe
pushf
cmp
mov
xor
mov
add
sbb
fcmove
pop
mov
add
(bad)
pop
sub
push
sub
mov
or
sbb
jge
fcmovnb
js
inc
push
sub
aad
mov
xchg
pusha
pause
dec
jae
jne
jl
dec
pushf
das
outs
imul
mov
jne
sub
icebp
ror
into
ret
ds
xchg
dec
out
fwait
out
inc
sub
push
hlt
dec
and
xor
dec
out
dec
push
sub
out
cmp
outs
jge
and
jbe
adc
adc
lahf
add
fs
fld
mov
pop
jno
jae
nop
dec
adc
fadd
xchg
jns
cmp
dec
cmp
inc
sbb
adc
popa
cmp
xor
jp
mov
int
cld
or
out
xchg
sbb
or
in
xchg
mov
fucomi
mov
mul
(bad)
out
mov
and
or
enter
aad
je
jp
fiadd
(bad)
sub
fnsave
int3
xlat
inc
mov
cmp
arpl
ficomp
and
pop
in
loopne
xchg
mov
icebp
cwde
lods
out
jne
in
jno
cmp
repz
and
xor
mov
scas
les
cwde
stos
scas
add
xchg
repz
or
inc
cs
fimul
sub
stos
es
push
xor
cmps
leave
stc
mov
in
adc
(bad)
repnz
sbb
pop
stos
dec
shr
enter
add
cs
mov
xor
and
and
mov
retf
sar
out
jbe
cs
jecxz
out
sub
cmc
ss
add
cmp
arpl
out
rcr
add
adc
jo
or
push
jns
leave
xchg
mov
xchg
xchg
call
dec
xchg
aaa
pop
psubsb
sub
into
push
clc
in
sbb
pop
test
outs
dec
pop
icebp
mov
neg
cmp
lods
adc
push
jae
and
es
mov
shl
in
jno
retf
mov
sub
mov
push
stos
jle
fwait
aad
cmps
loop
mov
adc
cmps
mov
push
push
xor
sahf
ss
aas
pop
jmp
adc
in
jae
test
lea
jmp
jnp
ds
xchg
sub
xlat
xor
and
in
call
mov
retf
push
sub
cdq
inc
mov
stos
xor
xor
movs
scas
fwait
xchg
mov
or
in
loop
jns
ror
sbb
das
and
not
push
xor
xchg
punpckhwd
inc
ds
sbb
push
mov
mov
fnstenv
push
jne
call
daa
mov
or
xchg
mov
call
and
dec
xchg
push
ret
cmc
add
test
adc
std
bound
xor
and
and
out
xchg
rcr
cmp
mov
mov
push
ror
mov
pop
fwait
sub
pop
in
push
and
cmp
in
sub
(bad)
cmps
inc
ror
xchg
sub
or
cmc
and
sbb
movs
xchg
ret
xchg
int3
js
pop
sub
int
sub
aad
adc
hlt
clc
pop
adc
push
test
pop
mov
push
dec
mov
pop
cmp
mov
or
mov
jge
push
test
xor
gs
sbb
sbb
mov
fisttp
lock
retf
imul
call
test
mov
mov
fwait
retf
ins
cmc
ins
cmp
cli
add
pop
dec
test
sub
or
xor
shr
sahf
clc
jp
loope
pop
or
js
mov
mov
js
pop
jae
sub
lock
sbb
jg
adc
sahf
cmp
mov
or
test
mov
test
push
or
dec
popf
les
pusha
retf
pusha
sub
ins
nop
das
nop
scas
enter
(bad)
xor
das
movlps
stc
jo
loopne
arpl
add
je
sahf
mov
out
xor
ss
je
jp
push
and
xchg
and
sbb
test
pop
fcom
push
scas
jmp
cmp
sbb
jl
cmps
dec
push
and
push
ins
sub
mov
add
push
mov
(bad)
fld
mov
stos
xchg
cmps
aam
push
mov
fcmovu
fistp
sti
sbb
dec
fistp
push
adc
(bad)
xchg
(bad)
dec
(bad)
and
jb
retf
popf
pop
push
mov
fdiv
(bad)
call
ss
ds
inc
inc
mov
test
js
imul
pop
je
test
lahf
push
fucomi
jmp
inc
sub
mov
mov
mov
sbb
mov
stc
or
test
std
fld
inc
xchg
lock
iret
adc
inc
xchg
cmp
stos
pop
enter
add
fmul
sti
arpl
in
push
mov
jns
arpl
cmp
outs
sbb
movs
cmp
in
cmp
or
fisub
fild
push
mov
and
jle
xchg
adc
into
ja
sbb
sbb
jno
dec
addr16
ja
rol
bound
mov
xlat
and
aad
retf
aad
sub
fwait
push
mov
fidiv
sub
sti
inc
retf
ds
pop
es
shl
test
loope
cmp
jb
mov
mov
rcl
xor
jp
nop
jmp
mov
mov
std
jmp
aas
pop
(bad)
shl
cmps
js
and
fs
sub
xchg
add
mul
call
xchg
sbb
adc
dec
sub
xchg
aas
sub
push
lods
(bad)
jmp
popf
fs
std
mov
push
dec
int3
lahf
sub
ins
out
test
minps
cdq
sbb
ret
mov
stos
and
jnp
jg
rep
mov
stos
or
add
call
mov
cmp
lods
aas
js
push
ret
cmp
mov
outs
pop
or
pop
or
lea
inc
jg
jbe
and
outs
mov
aas
(bad)
and
mov
jae
cmps
inc
imul
sbb
adc
test
popa
das
rcr
ror
out
aad
movs
cmp
cmp
push
jns
stos
jmp
pop
xor
test
xor
mov
mov
cmp
push
pusha
sub
jne
iret
movs
das
test
xchg
gs
stc
xchg
sub
aaa
jbe
call
es
clc
(bad)
dec
adc
cmp
sub
mov
mov
arpl
div
mov
xlat
les
das
iret
cld
mov
ror
fcom
(bad)
lds
sbb
scas
loop
ins
hlt
or
and
es
add
mov
push
sbb
iret
mov
retf
enter
(bad)
fnstcw
push
shr
mov
int3
imul
loope
fwait
retf
mov
jns
popa
jb
outs
mov
int
push
fisub
fs
cmp
sub
mov
push
jmp
xor
add
xor
mov
fisttp
dec
jns
outs
je
cmp
lock
or
adc
inc
adc
jecxz
and
ret
and
push
jmp
add
shl
mov
daa
adc
add
push
fcom
mov
out
ror
pop
imul
inc
ret
fisubr
cs
adc
pop
loopne
ins
pop
int3
fsub
xor
dec
sbb
mov
imul
inc
sbb
jl
jge
test
inc
iret
test
push
cmp
sub
cdq
ret
loope
adc
mov
jae
stos
xchg
aaa
inc
mov
xchg
nop
push
mov
loopne
push
(bad)
sar
inc
inc
std
or
in
adc
cwde
(bad)
shl
int3
fild
vdivsd
sti
aaa
or
repz
ret
(bad)
int3
cmps
jnp
xlat
push
jb
rcr
xor
or
movzx
sti
inc
fbld
push
push
jl
dec
test
in
cli
and
jg
fsub
outs
leave
mov
lea
stos
sub
pop
push
pop
pop
sub
lahf
xchg
mov
sbb
scas
pop
icebp
adc
adc
and
into
and
icebp
stos
outs
jecxz
or
lods
xor
aas
inc
xor
cmps
(bad)
mov
jns
(bad)
dec
inc
dec
idiv
dec
push
stc
mov
ja
mov
dec
mov
fwait
sub
jge
cdq
(bad)
adc
mov
adc
lds
lods
or
test
sbb
jns
mov
jo
shl
mov
out
test
adc
mov
inc
loop
jmp
out
mov
in
clc
je
pop
cs
mov
fsub
in
ret
aas
or
in
repz
nop
xchg
jp
cmp
(bad)
lahf
shl
call
(bad)
mov
mov
pop
dec
mov
retf
lds
lods
enter
sbb
or
leave
push
jmp
movs
(bad)
lods
sbb
into
pop
movs
rcl
stos
sub
addr16
cmp
lock
js
aaa
mov
fidiv
aam
sbb
ins
cmps
inc
sbb
pop
fld
sbb
int
and
push
xchg
movhps
aas
idiv
xchg
push
inc
mov
sub
adc
scas
add
jae
mov
push
stc
jne
(bad)
pop
pop
inc
jmp
jg
sub
mov
mov
rol
retf
popa
dec
xchg
xor
mov
fcomp
dec
add
lahf
rcr
add
xchg
rcl
push
inc
retf
aas
add
movs
mov
mov
retf
cmp
mov
xchg
mov
cmp
jmp
aam
das
es
cmp
test
xor
sbb
or
pop
jno
pop
pop
pop
jbe
ds
sub
adc
add
sub
or
(bad)
xchg
inc
xor
jmp
push
in
test
pop
cmp
mov
lds
inc
jmp
xchg
push
xchg
mov
cmps
jne
inc
inc
mov
(bad)
daa
jb
stc
in
clc
xor
fwait
xor
dec
add
lea
ret
jb
push
call
cmp
aad
jb
mov
aaa
stos
aas
ss
mov
or
inc
retf
scas
adc
into
mov
in
pusha
push
lods
inc
iret
arpl
fadd
cmps
mov
push
pop
shr
sahf
popa
cdq
push
dec
std
inc
cmp
pop
jns
imul
adc
ja
pop
and
mov
in
mov
cmp
cmp
push
(bad)
fwait
jne
cwde
jmp
sbb
rcl
mov
(bad)
mov
retf
jnp
in
pop
sbb
dec
or
push
pop
sbb
mov
data16
push
bound
and
stos
jno
inc
mov
in
repnz
jmp
mov
test
cmp
sub
mov
xlat
dec
adc
jmp
pop
sub
sti
xchg
cmp
arpl
es
mov
pop
jmp
jecxz
loop
repz
cmp
mov
ins
cmps
and
xor
add
inc
dec
fs
fld
into
xchg
mov
sahf
xor
jmp
dec
movs
fcomip
xor
xor
mov
aas
repnz
push
stc
lahf
shr
in
add
dec
pop
pushf
fnstsw
lods
or
jp
pop
mov
icebp
movs
and
in
adc
idiv
xor
cli
lods
mov
xor
sub
adc
clc
pop
call
js
pop
mov
add
aas
mov
sbb
imul
push
and
movs
dec
je
enter
inc
sti
dec
adc
stc
and
(bad)
fistp
(bad)
mov
sub
dec
(bad)
aam
sbb
scas
repz
mov
outs
pop
mov
adc
nop
lock
test
ficomp
jl
clc
xchg
mov
outs
scas
jp
adc
sub
adc
xlat
mov
fild
dec
aaa
xchg
lods
jge
mov
stos
mov
paddq
cmp
sti
inc
in
in
jmp
pushf
push
icebp
outs
sub
inc
mov
sub
(bad)
mov
xor
push
lea
xchg
or
add
div
stos
mov
ds
inc
push
inc
or
or
js
sub
xor
loop
mov
xor
stc
shl
(bad)
cmp
inc
jl
adc
enter
js
(bad)
and
call
mov
sub
jl
add
pop
les
(bad)
adc
sbb
cmp
jmp
push
xchg
and
xchg
push
sub
inc
(bad)
(bad)
imul
or
mov
stos
pushf
jmp
test
or
enter
or
shl
js
mov
jmp
sti
jbe
fisub
push
leave
(bad)
mov
cmp
mov
mov
mov
test
js
inc
rcl
clc
inc
jmp
sbb
cmps
stos
adc
and
xchg
jp
fsub
leave
xor
daa
(bad)
fmul
mov
fdiv
fiadd
ror
(bad)
data16
daa
cmp
outs
sbb
in
mov
stos
sub
add
call
mov
call
rol
and
sub
xor
xchg
jne
push
xor
imul
sub
jmp
out
push
pop
(bad)
cli
or
es
cld
cmp
jns
push
add
pop
test
mov
in
push
add
repz
mov
fs
inc
mov
push
outs
dec
xchg
fnstsw
sub
loope
jno
aaa
mov
div
cmc
and
xor
adc
or
pop
ret
mov
fs
dec
enter
pop
es
push
imul
std
mov
adc
xor
dec
gs
mov
mov
iret
shr
mov
test
adc
or
jle
push
mov
and
inc
adc
inc
repnz
jns
mov
shl
mov
adc
jp
(bad)
mov
(bad)
pop
lock
into
jp
adc
or
push
fistp
in
adc
xlat
stc
mov
lods
xchg
fdivrp
das
daa
mov
adc
push
mov
push
sbb
xchg
(bad)
scas
and
or
lock
fidiv
add
mul
xchg
fst
out
xor
fcomp
out
adc
xor
popf
fdiv
sub
mov
and
mov
pop
enter
inc
jbe
push
pop
fwait
test
dec
mov
jmp
lods
sub
xor
cli
sbb
mov
retf
mov
jge
pop
je
mov
idiv
in
and
cmp
inc
or
mov
xor
dec
fcomp
jns
dec
adc
mov
enter
retf
mov
gs
in
shl
fwait
iret
enter
xchg
cmp
and
jecxz
push
fisub
fwait
(bad)
cmp
dec
push
pop
inc
cmps
inc
shl
push
dec
inc
and
rcr
inc
pop
or
push
rcl
jp
cmp
jg
retf
in
or
imul
ror
in
rcl
push
pop
inc
scas
sar
cld
jmp
adc
arpl
push
or
and
or
leave
int
scas
xchg
into
addr16
test
mov
adc
fcomip
shl
arpl
(bad)
fldcw
arpl
push
push
aad
das
imul
idiv
sub
pop
ja
ins
mov
ins
test
pop
mov
cdq
sti
dec
in
test
sbb
pop
data16
(bad)
fldcw
sub
sub
and
lock
or
retf
mov
xor
dec
(bad)
pop
call
dec
retf
shl
inc
int
ins
and
xor
nop
imul
js
aaa
adc
(bad)
cmp
inc
(bad)
out
mov
sub
mov
std
addr16
xor
sub
call
or
(bad)
jg
mov
cmp
sbb
pop
into
jmp
sub
push
xor
sti
inc
lods
sub
ss
xor
mov
pop
ret
in
aaa
jae
xor
es
loope
jnp
dec
arpl
inc
xor
cld
mov
imul
ud0
xor
push
nop
cli
rcl
pop
lds
aaa
fiadd
inc
icebp
rcr
push
test
pop
mov
adc
sar
lods
lahf
int3
jl
lock
sar
retf
les
mov
pusha
mov
jmp
sahf
call
out
bound
sbb
gs
adc
xchg
ret
and
inc
imul
push
hlt
inc
and
mov
or
mov
repnz
pop
shrd
ins
push
add
or
mov
mov
outs
ret
push
stos
push
push
aas
adc
scas
or
push
dec
shl
out
or
dec
sbb
dec
adc
push
ror
inc
inc
add
ds
jmp
jg
sub
test
aam
or
inc
loope
js
repnz
sub
cmp
js
mov
sbb
push
adc
push
mov
push
add
inc
pop
popa
imul
in
dec
sti
mov
test
add
mov
adc
data16
mov
jmp
pop
push
fmul
in
jnp
jl
and
mov
mov
adc
lods
pop
xchg
data16
push
mov
scas
fwait
or
ror
(bad)
retf
and
xchg
mov
push
cli
xor
or
mov
outs
push
xor
rcl
dec
pop
and
xchg
nop
or
std
movs
xor
push
fmul
mov
and
sub
cmp
add
clc
mov
mov
sti
ja
ret
or
test
push
imul
inc
add
and
push
push
mov
sub
lock
mov
int
inc
and
ins
mov
in
scas
mov
fld
mov
and
int
or
out
mov
(bad)
pop
jae
push
aad
or
push
pop
jl
and
arpl
xchg
mov
fiadd
and
scas
mov
cmp
mov
(bad)
in
lds
xlat
inc
(bad)
sbb
imul
out
pop
push
pop
push
es
imul
xchg
xor
mov
test
stc
clc
out
cwde
fdiv
inc
jl
out
imul
lods
lods
push
pop
cwde
sub
stc
jl
and
xchg
ja
adc
gs
xchg
push
adc
fst
call
dec
push
mov
sub
ret
pop
mov
int3
and
adc
xor
mov
loop
mov
fs
test
adc
sbb
out
rep
push
jmp
and
mov
dec
addr16
jge
stos
push
push
or
push
mov
dec
neg
ss
adc
sub
movs
retf
mov
push
fwait
jmp
lods
or
rcr
sbb
loopne
add
xor
push
enter
(bad)
gs
mov
adc
iret
aad
out
jle
ins
in
ins
sbb
mov
inc
xchg
outs
mov
pop
jne
mov
nop
adc
fstp
out
xchg
push
pushf
aaa
xor
or
xchg
retf
jo
loope
rol
lods
dec
arpl
push
mov
imul
pop
push
push
in
jae
shl
popf
ret
and
jne
add
cmp
test
or
cmp
pusha
mov
cmps
or
or
mov
test
or
addr16
gs
pushf
clc
dec
jb
cmp
(bad)
jg
pushf
or
(bad)
pop
and
repnz
clc
and
inc
inc
mov
and
mov
inc
sbb
or
ds
or
jo
mov
mov
push
push
sbb
jl
cld
shr
(bad)
sbb
retf
sub
and
test
adc
dec
and
adc
cs
xchg
std
(bad)
sbb
ja
adc
mov
and
or
dec
mov
push
test
sub
push
test
push
push
outs
or
adc
dec
inc
ins
or
and
xchg
stos
stos
jns
lods
outs
jge
xchg
jle
(bad)
cmps
sar
push
mov
mov
loop
je
inc
cmp
fisub
jmp
loop
mov
popf
(bad)
and
sti
mov
mov
mov
mov
mov
jmp
add
push
repnz
mov
cmp
sbb
mov
addr16
out
shr
push
xor
scas
or
push
pop
sub
fdiv
jp
sbb
sar
mov
ror
push
adc
(bad)
and
mov
pop
(bad)
aad
fstp
xor
mov
inc
lds
and
das
push
inc
sar
nop
xchg
xchg
(bad)
mov
xchg
cmp
add
hlt
sub
inc
(bad)
mov
std
addr16
les
imul
stos
adc
push
cmps
push
or
xchg
sub
stc
es
cdq
adc
sub
xchg
jo
lods
mov
jnp
cmc
xor
outs
xlat
clc
push
dec
mov
mov
push
data16
mov
jae
or
mov
stos
jmp
pop
xchg
mul
scas
xor
add
cmp
ins
fcmovnu
bound
push
xchg
xchg
sbb
pop
adc
popa
mov
xchg
mov
push
fst
sahf
mov
lods
inc
xchg
pop
adc
push
outs
rcr
jb
jno
(bad)
fmul
aas
xor
in
ins
cmp
cmp
in
cmps
test
cli
mov
movs
inc
mov
pop
cmps
push
add
sub
push
jecxz
mov
and
je
dec
adc
out
xchg
push
test
bswap
movs
jo
and
pusha
inc
pop
xchg
pushf
(bad)
movs
stc
and
inc
jnp
adc
xchg
sub
sub
sbb
mov
push
adc
sti
mov
ins
lock
and
ins
mov
lods
adc
aaa
int
outs
cli
push
or
cs
rcl
ins
ret
loopne
repz
je
add
in
adc
popa
rcl
stc
(bad)
gs
cmp
retf
in
dec
lahf
mov
pop
(bad)
jae
pushf
push
cwde
dec
cwde
pop
fimul
jmp
aaa
jae
dec
inc
cmc
sbb
ds
add
ret
ffreep
test
inc
jge
push
cli
cli
adc
cmp
fcomp
ins
sbb
fdivp
js
and
sti
jae
dec
xchg
outs
aad
jecxz
aam
sbb
neg
dec
xchg
in
icebp
inc
test
outs
or
pop
mov
out
aam
xor
pop
pusha
loopne
xor
out
std
rol
sbb
es
test
inc
mov
daa
outs
pop
dec
movs
comiss
add
xor
cmc
jne
xchg
in
leave
leave
xchg
outs
(bad)
jmp
les
in
out
bound
and
mov
sub
adc
mov
imul
js
aas
pop
dec
or
add
hlt
gs
inc
mov
xchg
inc
iret
sub
in
sub
sbb
mov
mov
aaa
dec
lock
call
imul
mov
sub
and
mov
ins
(bad)
cmp
dec
shl
stos
pop
adc
in
ins
jb
pop
aam
daa
mov
sub
mov
into
mov
(bad)
scas
push
fild
mov
jo
scas
xor
mov
stos
mov
mov
pop
call
jno
adc
inc
xor
ror
add
shl
cdq
mov
add
or
cmp
fcmovb
xlat
(bad)
sahf
pushf
test
jecxz
loopne
push
leave
out
cdq
enter
js
das
les
jnp
xor
(bad)
xor
jae
inc
cmp
test
xor
imul
mov
mov
sub
and
cmc
ret
pop
mov
retf
pushf
jmp
fist
lock
dec
stos
jge
repnz
mov
sbb
mov
cmp
inc
jbe
inc
daa
retf
xchg
sub
xchg
sbb
cmp
dec
cmp
ins
push
icebp
aad
(bad)
test
movs
xchg
ret
loop
xor
dec
xchg
ds
cs
cmp
and
or
jb
cmp
sub
rcl
ins
in
jmp
xchg
push
mov
and
ror
(bad)
jbe
or
inc
cld
fdivr
sbb
jb
xchg
sbb
cwde
iret
sahf
daa
(bad)
je
xchg
stc
mov
inc
std
mov
mov
ss
mov
inc
mov
jo
ds
stc
(bad)
sbb
lods
mov
outs
mov
jg
call
xchg
push
jp
sbb
shl
xchg
sbb
adc
cld
cs
mov
and
retf
bound
add
sbb
mov
mov
loopne
sbb
adc
arpl
jg
add
outs
sub
hlt
push
in
mov
call
or
inc
cdq
aad
add
fdiv
mov
push
pop
pop
push
loope
enter
aaa
in
dec
iret
ja
xor
add
sbb
aas
sub
fiadd
push
enter
ja
mov
sbb
aad
ss
xor
repz
xchg
test
push
out
out
cld
in
daa
push
mov
pushf
mov
mul
adc
add
movs
cmp
sub
in
rcr
in
mov
sar
sub
stc
jge
pushf
sar
sbb
mov
repz
lds
jb
mov
outs
push
mov
adc
pop
xchg
test
aas
mov
out
ss
in
mov
mov
add
cmp
jle
or
cmps
or
das
jb
sub
leave
mov
stos
inc
fiadd
dec
das
mov
mov
in
add
aaa
cmp
imul
fdiv
dec
dec
lss
pop
cmps
inc
leave
popa
mov
enter
mov
(bad)
push
mov
xlat
jnp
dec
repnz
push
call
mov
sbb
sbb
adc
aam
ficom
mov
cli
xlat
and
inc
fwait
repz
push
pop
and
enter
test
clc
mov
fs
jg
mov
fdivr
mov
mov
movs
adc
push
sbb
sbb
lock
inc
push
data16
aad
inc
mov
fistp
pop
loop
jmp
jle
in
shr
ror
mov
jo
div
pop
mov
cmp
adc
sub
out
mov
push
xchg
in
sti
push
jnp
or
aam
vsubsd
daa
add
(bad)
ds
xchg
sbb
aad
sub
mov
cld
nop
pusha
or
cmc
push
pop
iret
or
and
movs
dec
fist
push
and
mov
push
fcomp
je
pop
fidiv
fist
jge
add
ja
push
je
push
push
mov
cli
xchg
dec
retf
xor
or
mov
out
xchg
daa
adc
jle
cmps
ds
jecxz
sbb
(bad)
mov
test
push
push
mov
loopne
lods
jge
ins
movs
(bad)
stc
idiv
push
lea
out
xor
je
mov
das
sbb
enter
xlat
mov
sub
mov
mov
jno
clc
rol
mov
outs
outs
dec
inc
xor
in
push
dec
cli
dec
cli
sub
in
pop
nop
out
iret
push
mov
jb
ins
adc
jmp
sub
lock
test
xchg
mov
jns
inc
into
loop
std
mov
in
(bad)
push
daa
mov
pop
daa
in
pop
inc
adc
mov
aam
push
ins
cld
pop
push
jb
push
sti
pop
sub
jecxz
into
mov
xchg
mov
std
outs
outs
push
add
fadd
adc
sbb
xlat
add
jno
mov
sub
js
daa
pop
or
cmp
aaa
pop
ins
sbb
stos
push
dec
(bad)
mov
push
add
cmp
inc
pop
jbe
jge
push
inc
shl
mov
xchg
std
xchg
push
sub
jmp
cmp
mov
jb
sub
and
icebp
dec
sbb
mov
ret
test
mov
mov
push
aaa
ins
cmp
or
inc
aaa
jns
xchg
mov
loope
mov
(bad)
(bad)
dec
mov
lods
aam
shl
(bad)
cmp
mov
in
add
mov
dec
out
adc
or
cmp
out
mov
push
xor
push
jl
mov
pop
xchg
cmp
adc
loop
into
out
mov
dec
mov
xor
repnz
or
pop
sahf
mov
out
jnp
xchg
mov
hlt
leave
sbb
aad
sti
ror
pusha
cmp
popa
jp
xchg
mov
scas
sub
shl
mov
and
mov
in
outs
cmps
pop
daa
bound
jp
cli
ins
mov
rcr
xchg
cmps
push
jecxz
cmp
ds
scas
pop
mov
adc
or
stos
xchg
retf
ins
adc
mov
fwait
mov
jmp
jbe
loopne
inc
inc
in
jo
and
or
std
dec
push
push
ins
sbb
loope
cdq
adc
xor
push
loop
ret
cmp
rcl
cmp
push
outs
arpl
or
inc
cmp
xchg
int
leave
loope
mov
mov
in
sub
std
out
and
dec
scas
push
out
int
inc
add
inc
mov
sub
in
sub
loopne
out
dec
ror
jge
xor
or
mov
ins
aas
and
fwait
sub
jo
hlt
adc
mov
and
xor
fstp
popa
lea
loope
lds
clc
stos
rcr
mov
mov
movs
cmp
or
shld
or
stc
mov
mov
sbb
jnp
sbb
sbb
icebp
inc
mov
inc
dec
xchg
push
(bad)
call
pushf
fcmovnb
lock
or
mov
jns
adc
cli
mov
xchg
push
pop
adc
and
or
inc
mov
sub
sub
or
cmp
imul
pop
sub
push
sub
jo
cli
ja
sub
pop
mov
xor
shl
jno
fsubr
add
cmp
push
fs
(bad)
loope
test
imul
xchg
xor
loopne
int
int
dec
sar
sar
pop
jno
xor
mov
outs
jl
sbb
test
mov
call
test
hlt
retf
xor
pop
mov
and
jno
adc
xchg
jg
scas
jg
loopne
push
(bad)
imul
add
and
sbb
and
cmps
inc
fsubp
inc
pop
outs
xchg
sub
sub
mov
mov
xor
repnz
icebp
adc
sub
je
xor
dec
loop
icebp
stc
push
mov
and
and
sar
cmp
jmp
mov
out
and
cmc
pop
in
jae
imul
xchg
(bad)
leave
ds
pop
cmps
sbb
mov
adc
mov
ja
mov
lds
movs
shr
inc
mov
push
fidivr
outs
push
mov
mov
scas
pusha
daa
fdiv
push
cmp
out
mov
fadd
sub
cli
(bad)
(bad)
sub
sbb
xchg
inc
push
xchg
dec
sub
mov
jmp
and
sahf
add
loop
lock
sbb
retf
add
imul
or
loopne
dec
pushf
aam
jge
mov
fldenv
mov
or
xor
push
cdq
imul
cmp
std
pop
mov
and
xchg
or
or
sub
bnd
push
loope
add
and
loopne
xchg
xchg
mov
lods
xor
fwait
jb
hlt
ins
or
mov
(bad)
jmp
jle
inc
nop
aas
in
sub
cwde
imul
mov
mov
std
into
sub
pop
xchg
fstp
inc
mov
(bad)
jmp
lock
cli
addr16
pop
xchg
scas
fwait
jne
retf
inc
jbe
or
inc
inc
push
inc
fdivr
icebp
test
dec
pop
clc
push
xchg
cmp
add
or
std
push
shr
mov
jge
and
mov
imul
stos
mov
mov
pop
inc
or
push
repz
add
sbb
imul
cdq
or
test
sub
adc
pcmpgtw
int3
fadd
or
mov
xor
les
shr
call
shl
cmp
push
popf
and
mov
pop
in
sbb
inc
cld
and
cmp
(bad)
(bad)
pushf
mov
adc
mov
leave
fwait
sub
sub
xchg
sub
adc
adc
cld
add
es
mov
inc
int
mov
xor
out
xchg
addr16
addr16
sub
cmp
cld
fnstcw
int
cmp
jl
pop
pusha
fidiv
adc
xor
cmp
ret
(bad)
clc
xchg
adc
in
jge
jg
mov
adc
iret
fstp
fld
and
mul
adc
and
repz
mov
ins
sbb
xlat
sbb
mov
test
pushf
push
adc
inc
movs
aaa
adc
inc
addr16
xchg
sub
jne
(bad)
in
mov
and
out
and
inc
fst
ror
cmps
add
test
ins
into
bound
cmc
stc
or
fist
lahf
icebp
cs
fldenv
dec
movs
int3
cmp
fimul
call
test
aas
in
lods
aaa
and
mov
mov
(bad)
fsubrp
test
test
cdq
or
(bad)
out
sti
cmps
jns
aam
std
fsub
pop
ret
ins
fisubr
lahf
fild
shr
and
sub
mov
mov
iret
pop
dec
test
jl
shl
mov
(bad)
retf
cmc
cmp
or
scas
fwait
bound
or
ffree
dec
add
sbb
pop
out
daa
pushaw
pop
std
cmp
and
push
aas
lock
paddsb
not
sbb
and
fs
ja
dec
test
js
xchg
and
shl
popf
sub
push
dec
push
jne
in
scas
outs
in
(bad)
mov
inc
pop
sub
fmul
sar
adc
sti
into
lods
inc
jge
jbe
cmc
pop
ret
dec
push
inc
div
bound
push
(bad)
ficomp
aaa
sbb
(bad)
and
mov
test
add
outs
addr16
jl
sahf
add
sub
jae
push
int3
in
adc
bound
sub
pop
pop
xchg
cld
cmp
fnstcw
cmps
cmc
ret
inc
dec
jmp
add
in
xchg
cmp
adc
ss
cmc
imul
sub
call
fisubr
and
dec
push
ins
jle
jp
mov
imul
xchg
xchg
movs
test
(bad)
push
or
mov
or
xchg
jae
cli
imul
mov
push
out
aam
fwait
cmp
and
cli
push
mov
enter
and
and
xlat
jle
pop
and
call
mov
and
fwait
sbb
aad
into
mov
scas
sbb
lahf
scas
push
push
fadd
fsub
(bad)
mul
inc
lahf
pushf
lods
mov
sbb
inc
jb
imul
rcl
xchg
xchg
sar
xor
arpl
leave
lds
stos
sub
jle
popf
xchg
mov
and
das
xor
rcr
popf
or
rcl
jmp
jae
push
loop
inc
adc
(bad)
popa
xchg
inc
mov
add
mov
add
addr16
shr
cmps
xchg
bound
clc
inc
mov
add
scas
sbb
ja
fld
sar
pop
cmp
jmp
cdq
add
push
xor
sbb
push
ss
jp
xchg
(bad)
sub
pop
pop
dec
cmc
pop
adc
dec
fdiv
inc
and
nop
xlat
pop
lock
pushf
fucom
popa
sbb
inc
jnp
dec
hlt
sub
pop
jp
adc
fsub
ror
leave
jnp
push
xchg
into
mov
dec
mov
repz
imul
loop
add
das
pop
inc
pop
dec
ss
pop
ror
cmp
call
mov
(bad)
mov
loopne
ja
sbb
lock
test
cld
lahf
ret
dec
fisttp
nop
lods
sbb
jle
sbb
sbb
xchg
cmp
xchg
outs
mov
clc
nop
sub
or
mov
icebp
cld
or
mov
jge
repnz
sbb
pop
xchg
pop
push
test
dec
iret
and
jmp
jge
mov
loope
rcr
xchg
mov
push
and
dec
ss
push
ror
leave
mov
dec
(bad)
xor
mov
mov
stos
mov
repz
out
mov
movs
push
inc
mov
sub
fld
out
and
es
out
pop
or
mov
sbb
pop
xchg
adc
and
push
cmp
data16
test
sahf
adc
mov
std
imul
sub
aad
lods
not
mov
xchg
imul
imul
fcomp
jmp
ja
sbb
leave
pop
push
mov
out
sbb
nop
push
mov
push
sub
or
rcl
(bad)
out
adc
es
and
xor
pop
fwait
lds
enter
sub
popf
test
mov
fcmove
movs
movs
cdq
das
popa
cmp
jns
cs
icebp
xchg
int3
out
mov
lods
pop
sar
inc
std
movs
ins
(bad)
push
cmps
mov
cmp
inc
inc
jo
cwde
and
ror
call
xor
(bad)
jno
mov
add
iret
mov
xchg
arpl
ins
cmp
(bad)
add
repz
hlt
inc
and
add
add
xlat
ds
xchg
or
cmp
scas
adc
jmp
stos
xlat
and
sbb
mov
jecxz
xor
ss
gs
stos
icebp
jb
xchg
xor
xor
fbstp
add
cli
xor
mov
cmp
dec
mov
adc
adc
mov
or
cmp
sub
icebp
mov
call
test
adc
jo
adc
ins
mov
inc
push
rol
xlat
stos
into
sbb
cld
push
sahf
and
xchg
stos
or
scas
cli
push
mov
jb
inc
fs
push
arpl
push
dec
ins
scas
jmp
jmp
cmps
push
test
mov
wrmsr
sub
imul
mov
jmp
stos
jmp
sar
(bad)
sub
xor
sub
test
or
xchg
imul
push
mov
adc
add
xlat
pop
jne
sub
mul
mov
sbb
movs
dec
mov
aas
mov
sub
mov
fnstenv
lods
sub
jg
jo
sub
js
xchg
mov
dec
les
mov
push
fisub
rcr
push
mov
and
lods
sbb
(bad)
mov
cmps
xor
sub
ins
jl
cmp
(bad)
neg
mov
jge
ficomp
xlat
sahf
out
adc
popf
push
and
scas
std
test
nop
out
loop
xchg
je
mov
mov
xchg
jg
ds
inc
fdivr
cmp
(bad)
sbb
es
jecxz
fst
mov
out
lds
(bad)
fmul
jbe
les
ficomp
retf
add
add
std
(bad)
mov
sbb
add
mov
add
fadd
fs
push
xor
ret
xchg
test
dec
pop
add
adc
mov
shl
(bad)
retf
mul
cmp
fsub
into
and
add
adc
inc
add
or
jecxz
repnz
add
dec
push
daa
dec
xchg
jl
add
or
push
fs
les
jbe
cwde
xchg
mov
inc
mul
or
les
fsub
stos
(bad)
(bad)
stos
js
fwait
leave
xchg
js
mov
jl
lea
add
cmc
rcr
and
add
(bad)
loope
push
packuswb
sahf
jg
clc
push
bnd
push
in
add
or
or
retf
cwde
sub
push
ror
inc
adc
icebp
js
imul
cmp
(bad)
mov
jl
and
xor
dec
adc
test
repz
add
dec
cwde
mov
imul
popa
pop
rol
xor
test
ja
gs
icebp
std
fld
ret
jb
repnz
sub
mov
mov
or
mov
pop
or
fst
xor
add
setnp
xchg
pop
dec
sbb
cs
cmp
cld
in
cmps
fcomp
mov
xor
in
push
into
lds
ss
shl
mov
hlt
cmp
xchg
call
jl
add
ins
mov
fst
mov
aad
sub
daa
imul
sub
xchg
add
cdq
mov
mov
jge
or
xchg
gs
push
push
pop
adc
xchg
loope
sub
(bad)
pop
scas
in
push
mov
pop
mov
fidivr
(bad)
xchg
pop
jg
fcom
inc
cmp
(bad)
sub
mov
jp
xor
pusha
dec
in
push
mov
(bad)
dec
jmp
loop
jo
push
fs
fisubr
pop
call
and
and
xlat
sub
call
cmp
xchg
jnp
and
loopne
fcomp
push
dec
ret
cmp
push
test
test
adc
add
add
cmps
xor
test
sub
jnp
dec
rol
or
dec
call
pop
stc
mov
or
jecxz
pushf
(bad)
push
or
(bad)
mov
sub
imul
jl
pushf
pop
mov
test
sbb
push
sar
or
aam
dec
and
ret
dec
inc
push
inc
fiadd
sub
push
ja
mov
neg
ss
pop
test
push
mov
cmc
sahf
mov
pop
lahf
inc
repnz
push
in
jmp
cdq
shl
in
fst
mov
jp
jbe
je
jge
test
mov
jle
sub
jp
(bad)
retf
sti
sahf
lock
jmp
add
mov
dec
push
sub
je
popa
xor
or
jl
cmp
leave
mov
add
fidivr
cld
dec
nop
adc
shr
cmp
lea
cmp
mov
sar
dec
push
in
je
adc
xchg
jne
jbe
sti
les
sbb
sbb
adc
aaa
mov
adc
test
outs
imul
dec
pop
pop
pop
repnz
mov
movs
dec
jo
or
inc
mov
lahf
pop
push
add
sar
(bad)
fcmovnbe
ss
push
bnd
rcr
in
aas
lea
es
outs
inc
mov
inc
mov
inc
int
jecxz
cwde
jae
loope
sbb
sbb
xor
in
(bad)
xor
jne
dec
sbb
jnp
hlt
and
shl
icebp
adc
cdq
jb
fs
pusha
sbb
rcr
test
out
lds
repnz
repnz
repnz
jne
sbb
or
mov
push
fsubr
jl
mov
sbb
hlt
cmps
jne
loopne
retf
mov
pushf
adc
and
pop
mov
retf
or
inc
pop
icebp
aam
repz
xchg
mov
ins
push
outs
adc
inc
(bad)
pop
and
(bad)
cmps
cmp
imul
inc
pop
xchg
sub
test
daa
push
sub
jl
cmp
cmc
adc
int3
mov
(bad)
fucomp
das
mov
adc
jge
cmp
out
dec
(bad)
test
adc
dec
ds
nop
shl
and
cmp
sub
lods
mov
daa
sbb
mov
dec
stc
mov
in
adc
add
stos
std
(bad)
cmp
in
dec
sub
mov
(bad)
pop
sub
ins
mov
cmp
je
push
stos
xor
in
clc
stc
movs
sbb
push
mul
jb
(bad)
fisubr
call
jo
and
cmp
cmp
or
inc
push
cwde
cmp
gs
jns
sbb
mov
xchg
or
xor
mul
and
push
repz
sbb
push
and
les
test
push
xor
push
dec
cmps
mov
imul
inc
push
das
enter
push
fild
mov
mov
inc
pop
jmp
fiadd
jmp
call
push
imul
fwait
xchg
inc
cdq
add
sti
mov
add
inc
jecxz
outs
(bad)
pop
sbb
arpl
adc
test
or
into
in
jle
ins
movs
xor
ins
push
gs
lahf
jae
fmulp
push
push
push
and
stos
(bad)
shl
cmp
mov
add
dec
ins
test
addr16
sbb
dec
xchg
loopne
push
and
out
sub
mov
xchg
scas
(bad)
jl
nop
push
mov
ror
and
xor
push
add
iret
adc
mov
leave
ins
sub
adc
dec
lock
inc
sub
pop
pop
sahf
fiadd
add
xor
adc
fcomp
pushf
out
cld
test
aaa
inc
xor
and
lds
sub
(bad)
shl
in
int
or
mul
push
ss
and
rcr
adc
mov
rcl
scas
push
inc
and
jge
ins
pop
(bad)
jg
jns
outs
dec
push
das
cmp
add
or
pop
pop
mov
daa
xchg
dec
aaa
mov
loope
jno
adc
pusha
cmp
je
test
mov
scas
push
out
int
imul
cwde
das
call
sbb
push
add
aas
jmp
add
in
test
push
or
out
sbb
jne
and
xor
in
inc
inc
daa
dec
mov
xchg
outs
rol
int3
or
repnz
inc
jne
mov
gs
fdivr
cli
js
jbe
imul
sub
xor
sub
repz
and
add
mov
test
push
xor
cld
fwait
pusha
fneni(8087
jl
call
outs
into
in
pop
test
js
fist
iret
movs
dec
aaa
outs
xchg
outs
mov
sub
xor
pop
sbb
ja
or
loopne
shl
jmp
push
cmp
jns
movs
jno
dec
add
loopne
test
mov
mov
dec
test
xor
cmp
adc
xor
push
pop
add
retf
or
lods
shl
mov
(bad)
xor
mov
into
fs
jmp
call
pop
dec
enter
mov
or
cmp
push
out
and
out
push
jp
(bad)
sub
dec
aam
jl
sub
lods
mov
popa
xlat
cld
imul
and
leave
xchg
jnp
sbb
call
or
bound
cld
repnz
mov
test
inc
or
sbb
jmp
cmp
movs
out
int
hlt
cmps
push
xchg
sar
or
movs
fst
in
sahf
xor
sub
jge
call
in
pop
(bad)
pop
add
push
cmp
ins
pop
test
out
je
adc
xor
or
pop
(bad)
fiadd
scas
sbb
xor
out
mov
iret
jne
inc
div
ror
cmp
std
out
jmp
test
fs
add
div
in
pop
lds
sbb
dec
in
mov
mov
mov
jecxz
add
lds
rcl
addr16
pop
xchg
repnz
cli
fiadd
stc
stc
repz
push
inc
in
mov
ja
shl
inc
jns
data16
shl
cmp
loopne
fisttp
retf
pop
enter
pop
jge
jno
or
cmc
mov
in
fcmovu
pop
cmp
or
rcl
pusha
pop
mov
xor
sbb
pop
adc
cs
cdq
add
and
or
or
retf
push
push
push
into
jmp
jmp
movs
js
pop
sub
imul
xchg
jmp
add
inc
ds
lea
pop
sysenter
in
frstor
dec
add
mov
push
jge
rcr
sbb
mov
mov
rcl
adc
add
sahf
dec
dec
mov
mov
test
test
adc
jmp
sar
mov
mov
in
clc
xchg
bound
fdivrp
push
pop
in
bound
xor
xchg
lock
jmp
xchg
and
mov
sub
icebp
pop
(bad)
inc
push
inc
jecxz
ins
push
jle
or
pop
out
mov
jg
push
dec
in
pusha
xchg
retf
push
jle
out
cld
sar
inc
into
out
lahf
mov
xor
sub
xchg
mov
adc
push
sub
fsubr
js
cs
push
or
iret
add
xor
dec
loopne
fild
out
daa
loopne
lahf
cmps
dec
std
mov
push
adc
or
inc
sti
iret
ja
enter
pop
push
sbb
hlt
sbb
scas
mov
in
loope
stc
dec
gs
jle
pushf
ins
jge
jmp
mov
test
add
scas
movs
pop
cmp
aas
outs
mov
mov
adc
adc
xchg
lds
push
adc
mov
and
ret
fstp
xchg
and
out
mov
mov
aaa
cmp
les
test
jno
mov
inc
xchg
retf
pop
pop
cld
scas
xchg
cs
shl
ds
pop
push
addr16
loope
mov
sti
dec
js
mov
push
data16
and
cmp
inc
enter
jno
xlat
pop
sbb
sub
clc
lea
mov
mov
lock
(bad)
mov
out
or
jmp
mov
gs
gs
lock
stos
stos
push
mov
leave
jg
jae
push
rcr
(bad)
test
dec
pop
vpshld
or
xchg
jle
repnz
cmp
fwait
sbb
jmp
movs
rcl
(bad)
push
int
leave
and
jno
and
jmp
sub
adc
into
jae
fsubr
stos
pop
mov
push
cmp
movs
sbb
repnz
cmps
in
aas
(bad)
sahf
popa
push
div
fs
sub
popf
sub
sub
loopne
sbb
adc
shr
ret
clc
(bad)
xor
daa
aas
adc
dec
jno
mov
es
push
adc
sub
mov
dec
aad
xor
psubq
mov
repz
pushf
fist
cmp
jno
pop
inc
xor
and
lods
jnp
mov
dec
popa
jl
add
sahf
mov
cdq
dec
movs
sub
imul
push
cmp
sahf
repz
test
mov
popa
pop
and
sbb
sub
fs
jl
push
and
add
cmp
cmps
rol
jg
xor
jbe
in
sub
cmp
sub
dec
push
outs
std
mov
leave
loopne
adc
jo
or
je
es
dec
jnp
pop
fsubr
in
xor
jg
enter
ins
test
push
mov
push
mov
sbb
test
out
xor
hlt
outs
mov
stc
cmp
and
cmp
stc
mov
lock
stos
outs
lods
(bad)
aam
in
cmps
popf
sub
or
xor
jo
pop
cmp
bound
adc
out
adc
pop
and
push
imul
cmps
cmp
sub
mov
mov
push
cmp
xchg
mov
aaa
arpl
fwait
(bad)
add
mov
push
ror
ror
add
mov
sbb
xchg
inc
cld
popf
mov
lock
and
call
mov
xor
popa
sbb
lock
sbb
out
mov
repnz
push
int
mov
push
cld
dec
jl
and
or
ficom
jmp
adc
arpl
ret
sbb
pop
jle
mov
call
and
mov
std
inc
or
outs
jne
sar
jmp
movups
or
movs
into
fwait
adc
out
std
stos
popa
lea
loope
ins
out
std
mov
call
pushf
sbb
pop
jb
ffreep
popf
jge
xor
xchg
add
out
test
cs
mov
sbb
mov
pop
shr
mov
arpl
cmc
push
cmp
add
push
sti
daa
jge
dec
movs
xor
mov
outs
dec
ss
xchg
or
mov
cli
add
int
fnstcw
(bad)
in
cmp
das
stc
ss
arpl
and
or
jl
or
daa
fwait
mov
pop
mov
jle
and
arpl
push
int
dec
ja
cmps
pop
aad
inc
push
dec
mov
sbb
mov
retf
ss
fld
cs
out
mov
add
data16
sub
adc
mov
call
add
mov
cmp
mov
or
push
out
cmp
not
gs
or
ror
stos
call
in
shr
and
ficom
lods
(bad)
iret
adc
ja
pop
mov
mov
or
jnp
ins
mov
sbb
pop
cmp
ja
xchg
cwde
je
ds
stos
daa
es
das
sbb
adc
loop
dec
mov
mov
in
jnp
or
dec
shr
mov
in
jmp
call
add
fiadd
dec
je
sub
loopne
sbb
fsub
loopne
add
fdiv
push
xchg
cmps
dec
sti
iret
(bad)
aam
pop
dec
(bad)
jp
sub
pop
(bad)
fidiv
hlt
sbb
xor
push
mov
pusha
mov
aas
icebp
mov
test
fnstenv
inc
(bad)
dec
sub
iret
push
rol
rcr
mov
icebp
adc
(bad)
or
and
mov
loop
adc
mov
push
std
xlat
pop
inc
add
mul
adc
xchg
sub
or
shl
add
or
icebp
out
cmp
push
repz
aaa
adc
and
pop
fdivr
xor
js
xor
jmp
or
pop
out
lahf
pop
ja
icebp
loop
jbe
pop
pop
test
outs
and
xchg
pop
jmp
loopne
je
popf
mov
cs
jbe
and
arpl
movs
xor
sub
out
loopne
les
cmp
jb
fdiv
cli
(bad)
pop
stos
push
ret
jne
inc
sbb
xor
(bad)
in
xchg
inc
jg
mov
add
inc
dec
(bad)
jmp
fdiv
push
jo
aam
cmp
xchg
or
dec
dec
add
addr16
push
xor
jb
jge
xchg
call
jmp
ja
inc
push
imul
cwde
pop
adc
and
retf
stc
into
(bad)
out
mov
les
and
aas
jg
jl
or
popf
pop
adc
and
sbb
in
in
sbb
lods
mov
cmp
push
jl
mov
imul
mov
aam
mov
lock
cwde
es
inc
sbb
add
into
inc
dec
jmp
add
mov
xchg
sub
adc
dec
push
xor
dec
loop
hlt
cmp
inc
xchg
xor
jbe
jnp
shl
enter
sar
ret
(bad)
(bad)
inc
daa
cdq
sbb
cmps
rcr
(bad)
pop
sbb
iret
pop
jb
mov
xor
jge
add
pusha
leave
leave
repnz
sub
int3
jae
sub
imul
icebp
movs
add
mov
mov
xchg
sub
fwait
dec
std
fwait
icebp
(bad)
fucomip
outs
cmp
fs
push
adc
xlat
ja
pusha
dec
or
and
jae
fdiv
popf
jb
std
ficom
add
cmp
loope
in
mov
mov
(bad)
push
cmp
inc
mov
xlat
cli
adc
mov
push
mov
push
xchg
mov
push
xlat
mov
mov
mov
jge
or
inc
push
gs
jbe
aaa
in
fst
repz
jo
inc
les
xchg
mov
jae
push
in
push
or
push
xor
hlt
push
test
cmp
aas
add
out
cdq
push
push
mov
movs
ins
xor
pop
test
lods
inc
enter
cmps
cmps
fnop
pop
mov
data16
jmp
outs
movhps
jge
or
mov
jne
jg
xor
xchg
xor
add
in
das
popf
ficom
pop
inc
jle
iret
dec
stc
mov
imul
sub
inc
and
lea
sub
mov
add
sahf
pusha
int
cli
mov
and
jns
mov
daa
inc
add
or
push
xchg
push
push
fsub
fs
xchg
mov
mov
mov
hlt
test
lds
out
mov
dec
jmp
jmp
adc
ins
in
imul
nop
shl
jge
and
lahf
pop
lods
les
enter
mov
jno
outs
jmp
cmp
dec
add
and
mov
push
push
mov
and
xchg
clc
scas
in
es
mov
gs
aad
rol
add
mov
add
jns
sbb
add
cmc
xchg
push
cmps
retf
test
clc
inc
add
mov
jno
push
loopne
out
push
jno
adc
cdq
inc
out
(bad)
aas
cdq
and
and
ret
add
cmp
(bad)
cmps
jbe
pop
add
(bad)
outs
sar
in
mov
imul
xor
mov
les
xor
jl
sbb
pop
retf
arpl
(bad)
(bad)
cmps
sbb
mov
retf
sti
bound
into
cmp
mov
fild
(bad)
fisub
xlat
hlt
xchg
ror
or
movs
pop
mov
adc
push
jnp
icebp
aas
xchg
retf
call
push
sub
and
rcl
ds
mov
jns
xchg
mov
inc
imul
push
mov
iret
js
push
popa
enter
mov
stos
xchg
mov
jg
frstor
jle
pop
pop
into
sbb
inc
mov
sbb
mov
daa
mov
pop
out
rol
sub
inc
repz
outs
mov
adc
fcom
push
std
mov
add
dec
pop
daa
push
inc
mov
sbb
movs
movs
xor
(bad)
mov
jae
(bad)
pop
sbb
xchg
xchg
pop
inc
xor
fsubr
xchg
(bad)
mov
pop
push
xchg
jmp
cmp
dec
push
outs
xor
dec
or
xor
sub
test
adc
popf
loope
sti
cmp
mov
mov
adc
mov
popa
inc
loope
jl
jno
out
sti
xchg
ror
inc
(bad)
lock
push
fld
pop
mov
test
leave
retf
dec
inc
popf
leave
mov
clc
adc
sbb
ret
cwde
ss
(bad)
cmp
sbb
mov
sbb
stos
cmps
push
mov
js
fsubr
mov
push
loope
sbb
mov
cmp
and
retf
mov
loope
push
and
mov
imul
pop
icebp
es
or
ds
retf
sbb
int3
aad
pop
(bad)
fidiv
mov
das
mov
out
xchg
repnz
in
push
out
push
xor
push
pop
outs
fwait
and
arpl
test
test
xlat
pop
add
fisub
aad
cwde
inc
sub
js
fild
mov
mov
cmp
out
retf
test
fmul
push
cmc
lock
jb
push
aam
ret
fisttp
sbb
test
cwde
xchg
push
pusha
xchg
xor
mov
jl
test
pop
pushf
sbb
xor
retf
fistp
test
jae
dec
and
std
jns
aam
adc
push
mul
imul
jno
stos
and
lods
xchg
out
lods
jecxz
xor
aam
mov
call
adc
mov
jae
inc
add
mov
mov
sbb
xor
pop
or
push
imul
rcr
mov
ins
jle
mov
fsubr
dec
in
(bad)
jae
in
dec
jne
aad
pop
mov
pop
sub
lods
rcr
jnp
pop
popa
nop
out
pop
or
icebp
outs
das
scas
mov
stc
cmp
push
rol
and
sub
and
loop
adc
(bad)
ficom
lea
pop
or
ja
stos
push
test
jmp
test
dec
stos
out
es
xchg
or
icebp
adc
cmc
ret
mov
pop
cmp
mov
(bad)
fst
adc
inc
and
sbb
mov
imul
mov
cs
inc
pop
sbb
out
leave
lods
adc
aas
retf
and
pushf
repnz
adc
adc
repnz
xchg
sub
dec
and
push
mov
add
sbb
jo
sti
das
ins
sbb
pop
cld
jg
loope
ret
jmp
repnz
jnp
push
(bad)
push
push
retf
fisttp
push
out
xchg
mov
(bad)
or
pop
outs
mov
pop
mov
arpl
mov
cmc
dec
jmp
fs
in
jl
cli
cmp
std
pop
scas
outs
xlat
and
jo
dec
sti
push
or
mov
test
jp
js
add
push
and
xor
jns
pop
in
sbb
and
ins
div
lahf
xchg
mov
and
cmp
daa
push
dec
sbb
out
(bad)
(bad)
mov
jnp
mov
cwde
rcr
(bad)
out
out
(bad)
(bad)
xchg
jns
fbld
jg
scas
push
call
inc
pop
jp
add
push
adc
mov
arpl
dec
ret
cs
mov
in
pop
jns
cmp
scas
and
cmp
and
leave
mov
mov
xchg
pushf
sbb
adc
inc
push
xor
dec
das
push
push
cmp
push
retf
adc
xlat
sub
hlt
iret
or
jl
and
xchg
sub
fild
fld
fisttp
lock
mov
xor
push
adc
mov
imul
test
fcom
sbb
stos
stc
push
cmps
and
(bad)
scas
jns
popf
aad
dec
lods
xor
inc
xchg
imul
mov
pop
addr16
daa
std
mov
xor
jge
add
je
dec
pop
xchg
aad
xchg
fbld
ror
les
cmps
aad
inc
std
pop
mov
aam
dec
fiadd
arpl
cmp
mov
call
or
iret
cmp
mov
repz
scas
push
lods
jnp
retf
pop
xor
jmp
sbb
sti
adc
push
pop
jle
mov
jmp
(bad)
jb
jnp
ror
pop
adc
sub
and
xor
ret
adc
outs
je
mov
addr16
lock
dec
in
out
jl
jb
ss
pop
popa
push
test
(bad)
mov
sbb
mov
cmp
(bad)
mov
retf
push
and
sar
jmp
outs
mov
and
cdq
xor
dec
in
aas
popf
pop
fsubp
pop
je
and
in
mov
mov
daa
dec
mov
call
mov
mov
and
push
jl
(bad)
das
sbb
xchg
lods
psubq
lods
adc
xchg
cs
out
outs
(bad)
lea
cmp
(bad)
adc
adc
add
aas
jns
mov
add
jecxz
stc
mov
sbb
sbb
movs
imul
fninit
pop
stc
cwde
xor
les
fsub
sbb
xor
ja
clc
icebp
mov
cmp
(bad)
(bad)
lahf
fcomp
dec
jl
jnp
aad
jl
test
jl
(bad)
fwait
std
jmp
inc
ins
cmp
dec
or
jb
(bad)
neg
mov
xor
mov
test
and
pop
sbb
imul
or
(bad)
rcl
xor
outs
and
lahf
jle
dec
outs
hlt
int3
mov
lods
inc
or
mov
test
push
popf
inc
arpl
gs
hlt
outs
xor
jge
(bad)
aas
je
or
lods
mov
mov
adc
sahf
xlat
or
sbb
jl
(bad)
int
jno
add
mov
sar
or
outs
push
lods
lock
mov
xor
out
nop
jmp
pop
xor
(bad)
pop
jno
test
mov
out
adc
mov
push
pop
gs
fsub
sbb
int3
lea
xchg
sub
(bad)
sbb
mov
pop
retf
push
xchg
push
xchg
popa
ja
ds
(bad)
or
xor
out
mov
or
mov
mov
(bad)
jae
inc
dec
push
outs
or
stos
cdq
rcr
push
pop
test
or
movs
test
mov
pop
ins
mov
mov
shl
das
int3
lods
icebp
cld
ds
mov
dec
cmp
pop
xchg
test
mov
xchg
mov
or
sub
and
out
mov
(bad)
or
dec
jmp
dec
rdtsc
jg
rcr
mov
dec
inc
lds
dec
mov
fidivr
dec
push
cmps
mov
cmps
aas
stos
lock
xor
test
pushf
lods
arpl
shr
fidivr
xor
fisub
cmp
in
lods
fbld
sub
clc
(bad)
xchg
out
mov
add
sub
mov
arpl
sub
call
pop
ins
mov
xchg
into
jp
add
or
mov
int
mov
inc
stos
xchg
or
dec
adc
stc
outs
rcr
(bad)
jle
aam
mov
out
mov
(bad)
pop
pop
sar
pop
xchg
outs
loopne
add
in
adc
sbb
sbb
push
test
mov
xor
jne
stos
stos
mov
inc
into
mov
adc
mov
mov
adc
or
lods
scas
jg
add
xlat
push
imul
mov
fistp
gs
fs
sti
popf
dec
pop
dec
mov
xor
xor
jns
xor
pop
jb
jne
retf
mov
retf
fcom
push
xchg
inc
inc
push
into
(bad)
push
sbb
ins
mov
sub
inc
test
mov
pop
test
rcl
push
aam
jle
repz
mov
test
sub
xor
sub
outs
dec
mov
pop
ja
sbb
call
call
sub
into
mov
retf
mov
adc
scas
bound
mov
rol
iret
fs
(bad)
rcr
push
add
dec
and
cwde
arpl
js
adc
xchg
fld
xchg
adc
in
push
mov
xor
sub
xchg
mov
lahf
enter
dec
jbe
inc
ja
inc
sbb
call
sbb
popa
mov
mov
mov
pop
js
jb
(bad)
mov
popa
outs
and
pop
or
mov
jmp
(bad)
test
adc
loopne
cmps
cdq
mov
push
fwait
test
lods
adc
addr16
aas
das
fprem
adc
and
dec
jo
xor
xchg
int3
ds
xor
xlat
imul
adc
adc
out
or
sub
jbe
adc
xchg
ja
inc
cmp
popa
inc
adc
dec
shl
jg
(bad)
cmp
shr
mov
sub
shl
push
cmps
xor
pop
jnp
js
data16
arpl
cld
not
mov
inc
inc
retf
xor
inc
mov
dec
arpl
mov
mov
push
test
xor
addr16
mov
aaa
inc
call
mov
cmc
mov
push
adc
loop
or
leave
mov
paddd
loop
mul
repz
lea
xchg
int
sbb
ret
clc
mov
lds
sar
jle
xor
push
or
aaa
jecxz
jmp
xor
and
and
jmp
(bad)
out
push
ret
and
adc
call
cwde
popa
mov
out
add
out
mov
mov
stc
enter
xor
mov
or
or
outs
imul
pop
pop
mov
or
mov
add
(bad)
stc
adc
push
jae
sub
test
inc
cmpxchg
xchg
mov
sti
jnp
scas
sbb
pop
jmp
imul
outs
mov
js
mov
sub
cdq
push
mov
jnp
xor
inc
fnstsw
mov
push
sub
lds
fisttp
std
xchg
mov
into
fwait
inc
imul
and
nop
js
cmp
test
cmp
dec
mov
pop
xlat
js
and
and
add
adc
xchg
clc
xchg
pop
pop
fimul
jge
movs
cdq
cmp
shr
mov
cmp
je
push
movs
jle
in
mov
ret
push
out
aam
mul
push
ficomp
pop
sbb
sbb
xchg
push
add
ret
in
xor
push
sbb
jb
ret
int3
or
add
rcr
in
pusha
fdivr
and
xor
add
push
int
inc
dec
and
ret
call
(bad)
jle
jmp
in
sub
shl
loop
ins
mov
cmp
(bad)
cmp
enter
mov
call
ret
dec
out
or
scas
bound
loope
rcl
ja
mov
fidiv
cli
pop
movs
push
push
dec
sbb
scas
jo
data16
and
push
mov
fs
cmp
xchg
sbb
mov
jne
nop
imul
iret
pop
leave
lds
add
or
inc
and
ret
in
cli
add
add
rol
jns
cmps
jecxz
jns
imul
add
mov
jmp
push
dec
cwde
ins
repz
mov
pop
jb
arpl
sbb
pop
retf
add
cwde
lds
das
jge
popa
cdq
shl
fnstenv
fs
adc
mov
mov
xchg
ins
sar
test
or
dec
lahf
in
xchg
hlt
sub
inc
(bad)
sub
out
mov
dec
xor
bound
or
mov
dec
movs
and
xchg
in
aam
cwde
pop
jmp
inc
xchg
ins
sub
out
rol
ror
and
jg
pop
imul
aad
loope
adc
xlat
ins
ret
fwait
and
aam
sub
mov
dec
dec
jl
scas
sbb
xor
bound
cmp
mov
xchg
mov
cdq
arpl
jmp
cmps
push
in
xlat
or
stos
jne
add
ja
sub
hlt
and
inc
loope
cmp
out
mov
sub
mov
mov
(bad)
mov
dec
and
imul
mov
aas
imul
xor
stos
ins
lods
jmp
cs
jmp
adc
rcl
xlat
retf
push
mov
shl
and
and
sbb
cld
cdq
mov
ja
and
(bad)
es
std
mov
(bad)
int
sbb
test
dec
push
lods
push
(bad)
in
jge
movs
mov
or
ins
hlt
or
imul
inc
pop
mov
int3
fcom
inc
jnp
pop
call
mov
clc
and
pop
fnstenv
xor
and
mov
xchg
mov
xor
daa
inc
push
xchg
xor
stos
or
imul
xor
aaa
test
mov
push
pop
sbb
push
cld
out
adc
and
cmp
ds
hlt
jb
enter
(bad)
stos
scas
in
call
imul
cmc
imul
retf
cli
retf
dec
dec
cmp
pushf
push
sbb
rcl
pop
jo
or
std
jmp
int
xor
adc
je
in
enter
sub
jmp
arpl
push
sub
push
sub
in
xchg
mov
lods
mov
xchg
rol
inc
xchg
sahf
xor
or
cmps
imul
fsub
inc
mov
xor
or
and
out
aaa
mov
fisubr
pop
add
cs
xchg
jne
or
or
push
iret
cmp
add
inc
sbb
pop
(bad)
test
mov
and
test
sbb
dec
test
push
scas
inc
popf
xchg
mov
lock
fwait
pop
fld
cdq
mov
rcl
and
xchg
and
mov
pop
in
and
jne
mov
push
fcmovu
in
das
jne
dec
js
pop
test
or
pop
jmp
js
ret
cmps
pop
add
push
and
inc
xchg
pop
leave
in
xor
xor
imul
dec
lods
fwait
int3
lds
ror
cmp
mov
addr16
loopne
hlt
gs
push
fsubr
js
pop
(bad)
sbb
ficom
adc
push
out
imul
test
xchg
dec
leave
sub
add
xor
retf
push
xlat
fwait
out
inc
dec
xchg
lds
test
cmp
outs
mov
jns
push
ds
ins
pushf
push
repnz
pop
call
push
push
leave
inc
out
cmp
outs
test
mov
xor
cwde
inc
(bad)
push
xchg
dec
add
and
jb
and
push
sub
rcr
std
not
cwde
add
(bad)
into
jle
sti
addr16
cmp
push
pop
jl
lods
pop
lods
rol
add
mov
cmp
fsubr
fadd
xor
and
pop
and
dec
rcl
mov
ret
sub
xchg
xchg
sar
inc
adc
ds
sar
sahf
rcr
bound
cmp
sbb
(bad)
loop
mov
pop
lods
adc
loopne
scas
into
out
xchg
aas
in
call
pop
lock
bound
cmp
add
mov
lods
rol
(bad)
jne
sub
jns
or
dec
and
mov
idiv
nop
push
sub
arpl
clc
mov
mov
adc
rcr
or
push
in
retf
sbb
or
pop
dec
xchg
scas
retf
pop
adc
push
repnz
sbb
mov
fimul
mov
call
cmp
movs
push
pop
cmp
fwait
mov
jns
sub
int
scas
scas
addr16
and
addr16
or
cmps
fdivr
push
sbb
mov
dec
dec
cwde
cmp
lock
adc
xlat
iret
mov
test
ror
xor
movs
pop
push
xor
pop
fwait
leave
jg
aam
int3
add
jecxz
xor
inc
ins
fwait
cld
mov
lock
sbb
int
adc
mov
push
mov
sub
es
lahf
das
dec
gs
fwait
nop
mov
rcl
in
xor
lea
jp
mov
mov
jp
loopne
cmps
or
es
adc
jne
lods
push
mov
movs
es
iret
dec
jne
cli
out
inc
inc
outs
and
or
dec
cwde
fiadd
cmp
cs
hlt
retf
ds
aam
mov
mov
movs
mov
lds
inc
mov
push
inc
pop
push
lock
jge
pushf
fnsave
ds
retf
inc
or
stos
push
(bad)
push
and
sbb
ds
cmp
sub
and
adc
jb
call
mov
das
in
push
addr16
leave
dec
cmp
push
movs
push
mov
mov
cmp
adc
dec
ins
mov
xor
int3
xchg
mov
jmp
jns
es
inc
xlat
arpl
or
ret
stos
pop
dec
jmp
adc
xchg
add
inc
mov
pop
adc
fisub
mov
add
ret
mov
sub
(bad)
xchg
mov
add
jne
mov
xor
pop
arpl
scas
cmp
push
xor
arpl
(bad)
pop
adc
ds
retf
popf
jecxz
adc
and
push
xor
cmp
shr
int
xchg
sti
iret
nop
ret
adc
popa
mov
div
push
mov
in
jmp
add
xchg
add
mov
popa
pop
or
retf
outs
xchg
push
pop
ss
pop
mov
sbb
push
add
dec
ins
bound
xor
clc
sub
retf
cmc
repz
and
sbb
add
push
outs
adc
stos
cwde
pop
push
lods
push
and
mov
mov
rcl
jnp
and
(bad)
cmps
rcl
js
test
scas
adc
dec
in
pop
ret
cmps
jb
xchg
jmp
faddp
inc
hlt
sub
inc
in
imul
push
xor
cdq
out
imul
sbb
adc
pop
push
jp
jno
jno
lods
sub
jmp
push
add
call
push
pop
cld
aad
push
stc
pushf
push
das
jnp
fwait
sti
lea
call
add
out
or
sti
xchg
jmp
jp
inc
jl
sub
dec
scas
mov
shl
inc
ror
or
add
jle
test
loopne
sahf
adc
nop
and
jbe
frstor
dec
ret
test
adc
mov
dec
inc
outs
jnp
jo
jae
xor
adc
or
aad
std
dec
sahf
sbb
inc
mov
mov
sbb
test
mov
retf
cdq
add
fninit
xor
rcl
loop
inc
jo
sbb
test
or
in
jmp
cmp
ss
aam
int
ins
xlat
lahf
sbb
lds
(bad)
fisub
mov
xchg
ins
sbb
mov
add
imul
dec
xor
cmp
call
adc
mov
inc
call
inc
test
sub
cmp
cmp
jmp
cli
sbb
retf
dec
push
rcr
inc
addr16
ins
push
cld
outs
rol
rol
in
or
pop
and
sbb
push
test
adc
ja
scas
popf
(bad)
xor
adc
push
mov
or
test
imul
lock
pop
jle
xlat
data16
push
add
and
and
retf
dec
xchg
pop
aam
xor
in
inc
mov
inc
pop
or
arpl
mov
mov
data16
mov
sbb
daa
mov
addr16
mov
cwde
adc
adc
fs
mov
cmp
jbe
aaa
sbb
aam
pop
mov
or
jbe
mov
iret
loop
sbb
push
rcr
jge
xchg
cmc
jmp
stos
sbb
adc
sbb
out
jmp
pop
adc
(bad)
in
pop
fs
scas
and
fstp
add
outs
or
sbb
sub
jmp
popf
pop
iret
push
(bad)
jg
xchg
mov
or
cmps
push
test
xchg
jp
and
js
mov
stos
lea
ins
scas
sub
mov
cmp
(bad)
(bad)
mov
xor
aas
js
test
lahf
icebp
hlt
sbb
(bad)
ins
stos
add
scas
inc
cs
(bad)
rcl
mov
cmp
xor
and
jmp
xchg
outs
cmps
and
imul
popf
inc
iret
inc
retf
repnz
sub
jge
iret
sar
(bad)
stc
or
pop
inc
hlt
mov
scas
mov
bound
call
lds
popf
mov
adc
pop
mov
add
int
dec
sub
mov
mov
ss
push
daa
adc
push
or
adc
and
or
(bad)
sti
into
add
jb
mov
ret
aas
ret
movs
sbb
and
cmps
xlat
pop
mov
ss
mov
xchg
mov
daa
jg
pop
ror
clc
fidivr
jbe
rcl
out
mul
mov
and
push
sub
sbb
sti
jae
(bad)
les
sbb
and
(bad)
out
pop
push
pop
xor
fld
call
or
ss
js
xchg
mov
ins
lock
mov
shl
rol
push
jno
ror
push
push
jge
xchg
pushf
jmp
adc
mov
dec
mov
ss
fbld
xchg
lods
dec
dec
imul
mov
inc
and
xchg
iret
repz
jns
fcomp
push
je
mov
and
sbb
pop
test
add
dec
das
test
xchg
loop
pop
movs
jno
jle
shl
mov
test
sbb
xchg
and
mov
lea
mov
test
test
cdq
std
(bad)
jae
xor
fistp
sbb
and
std
out
movs
push
inc
xor
dec
mov
xlat
xchg
push
adc
mov
iret
ret
int
imul
dec
shl
pop
repnz
pop
xchg
pop
repz
ss
fadd
ins
out
push
xor
push
pop
push
and
and
jg
xor
popf
rol
cmp
test
es
pop
mov
retf
adc
push
pop
cmp
inc
popf
or
lds
jb
inc
sbb
movs
and
xchg
pushf
repz
pop
push
inc
ficomp
adc
jmp
lahf
in
aam
int3
cdq
cdq
mov
xchg
retf
scas
clc
cdq
(bad)
out
mov
cmp
jne
gs
cmp
cdq
ds
xchg
icebp
and
add
(bad)
aaa
sbb
lock
rcl
sahf
sub
outs
iret
jno
js
es
test
mov
outs
ret
inc
retf
jne
push
les
add
add
dec
sbb
and
enter
or
ins
sbb
das
test
mov
xchg
sub
(bad)
xchg
inc
fsubr
aam
inc
out
dec
pusha
mov
dec
lods
mov
pop
mov
in
mov
sbb
dec
inc
mov
inc
(bad)
std
popa
sub
xchg
stos
xor
push
mov
pop
jg
xchg
stos
push
mov
cwde
xchg
hlt
data16
sbb
cmps
mov
les
scas
outs
gs
sti
ins
sti
js
data16
fidiv
mov
adc
(bad)
push
adc
jmp
call
push
and
jmp
test
jbe
sbb
in
pop
cmps
cwde
out
dec
cmp
ja
mov
sub
ret
or
in
outs
pusha
test
pushf
dec
adc
mov
xor
jmp
or
sub
arpl
shl
ret
jecxz
mov
adc
out
cmps
xchg
stos
xor
dec
jnp
xor
or
popa
sub
es
mov
or
xor
xchg
add
lock
mov
cmp
in
mov
jmp
mov
xor
sahf
ficom
add
push
(bad)
fucomi
mov
or
cdq
sub
and
(bad)
mov
jne
xchg
shl
ds
xor
adc
sub
fwait
pop
lock
adc
or
dec
ret
or
adc
and
out
(bad)
loopne
and
xchg
in
or
retf
sahf
test
xchg
push
cmp
ss
sbb
icebp
jl
outs
push
(bad)
push
adc
xchg
cmp
std
jae
inc
mov
movs
mov
push
and
cmp
mov
mov
repz
pop
inc
cmp
fst
mov
retf
push
jg
out
shl
and
dec
rol
ror
jns
pop
nop
inc
and
dec
nop
fistp
fs
xor
shl
adc
out
pushf
and
push
arpl
jle
push
test
data16
js
(bad)
ffreep
repz
js
inc
call
adc
clc
dec
cdq
aas
addr16
in
lahf
adc
test
adc
add
adc
(bad)
in
retf
mov
lea
mov
loop
push
scas
loopne
mov
mov
mov
mov
in
enter
add
fidiv
sub
xor
imul
mov
push
cmp
in
push
xor
mov
or
and
xor
out
cdq
xor
in
shl
sbb
stc
dec
inc
pushf
ins
imul
js
add
xchg
push
ja
mov
out
arpl
sub
cmc
pop
xor
or
shr
pop
inc
repz
jae
push
les
das
pop
mov
sbb
mov
jmp
pop
inc
std
sbb
mov
cmpxchg
dec
mov
sbb
push
mov
xchg
xchg
jg
sbb
xchg
lea
cwde
sbb
pop
xchg
ret
(bad)
dec
stc
xor
push
in
push
push
(bad)
pop
dec
mov
sub
daa
and
stos
sti
(bad)
jmp
icebp
bound
cwde
mov
std
stos
int3
mov
shr
push
add
and
mov
jno
cmp
xchg
ss
cld
sub
clc
scas
xor
pop
cdq
imul
jbe
pop
mov
or
pop
in
retf
gs
sub
stos
lods
(bad)
pop
stos
jg
mov
test
and
test
outs
aaa
sub
cld
dec
test
dec
stos
sar
push
add
test
jmp
inc
push
mov
fcom
js
fs
or
shl
(bad)
fdivr
jns
sbb
fst
inc
lds
xor
addr16
scas
cdq
jecxz
sahf
fadd
and
push
mov
lods
popf
cmp
cmp
pop
outs
pop
shr
sbb
pop
inc
sub
or
xor
jnp
test
jge
int3
mov
mov
push
ficomp
sbb
dec
hlt
jne
xchg
int
out
fst
cmp
and
fidiv
outs
dec
xor
in
jge
or
push
(bad)
int3
mov
retf
repnz
aaa
adc
xor
jno
push
add
(bad)
sbb
or
xor
bound
mov
in
inc
pop
clc
push
addr16
jge
sbb
and
aad
shr
adc
sbb
fsubr
shl
fisub
dec
xchg
pop
and
sbb
pop
push
popf
jge
fild
outs
rol
stc
push
jmp
ds
jp
cmps
jbe
or
adc
ret
and
fs
adc
dec
add
add
dec
not
jns
retf
je
or
ror
dec
adc
push
ins
add
sub
mov
mov
mov
mov
pop
dec
popf
scas
and
pop
cmp
nop
push
mov
lahf
sbb
or
pop
cmp
(bad)
out
pop
dec
outs
or
jmp
inc
dec
sbb
or
add
mov
in
call
lods
xchg
loope
test
daa
adc
int3
rcl
js
mov
pop
dec
retf
fs
js
cmovl
js
push
outs
or
jmp
jmp
xchg
mov
nop
mov
repnz
lahf
retf
cdq
pop
ins
into
sbb
lock
test
sub
(bad)
retf
push
sub
nop
sbb
bound
pcmpgtb
xor
fmul
and
xchg
ss
jae
dec
pop
(bad)
xlat
lods
mov
push
rcl
cmps
stc
and
or
sub
jmp
sub
sbb
jo
adc
xchg
cmp
xchg
adc
int3
leave
and
push
div
mov
test
gs
test
test
dec
lods
sbb
int3
push
out
xchg
aad
or
jl
or
or
inc
scas
cld
inc
push
dec
pop
sbb
adc
jle
adc
test
retf
ja
sub
lods
adc
mov
mov
sbb
leave
out
push
jo
jge
ds
jmp
retf
popa
aam
lock
inc
push
movs
adc
push
ds
outs
test
sub
xchg
inc
les
xchg
mov
inc
cmp
inc
jmp
cmc
mov
jbe
pop
test
sbb
movs
arpl
sub
hlt
fdiv
xor
mov
cli
imul
js
(bad)
movs
xor
adc
test
fwait
sbb
into
movs
pop
fadd
xchg
mov
nop
gs
sbb
popw
and
jb
mov
pop
fild
inc
push
mov
and
lods
fcom
and
dec
mov
add
(bad)
cmp
fs
dec
xor
shl
stc
adc
push
xlat
(bad)
adc
lods
jmp
pushf
and
mov
mov
outs
aad
(bad)
cs
pop
es
ins
fsub
mov
xchg
xchg
xchg
mov
jb
(bad)
jb
mov
lock
ret
std
cmp
jl
pop
pop
mov
aad
aaa
push
scas
add
xchg
mov
jnp
int
cmp
pop
cs
cs
push
push
mov
mov
shl
in
mov
sub
mov
mov
jge
jbe
mov
pop
pop
pop
jg
js
cmp
sbb
inc
ror
mov
popf
jne
out
ret
mov
int
mov
sahf
and
test
mov
leave
sub
push
clc
pop
mov
pop
xchg
pop
imul
dec
mov
cmp
ss
shl
or
sub
mov
push
mov
inc
push
sub
call
add
fcmovnu
adc
or
fbstp
aad
xchg
dec
cmp
call
mov
loopne
ds
sub
movnti
mov
jle
test
fcom
pop
inc
lock
in
jp
stos
dec
cdq
into
ficom
mov
fldenv
mov
mov
lea
gs
sti
push
scas
test
push
jle
lea
jns
stc
mov
cmp
fidivr
in
into
jmp
pop
jp
mov
xchg
cmp
lea
sar
aam
add
ins
movs
dec
xchg
jmp
push
inc
mov
clc
out
cmps
jns
mov
popf
(bad)
loopne
push
and
outs
xchg
movs
(bad)
xor
cmps
inc
and
sbb
mov
call
ror
sbb
push
inc
dec
popa
xor
mov
pushf
mov
movs
jmp
jne
xchg
cmps
jno
mov
and
xchg
mov
lea
xchg
push
loopne
pop
mov
cmp
mov
jbe
retf
pop
test
cmc
dec
enter
sbb
mov
xchg
push
call
gs
mov
sti
lods
out
and
fcomp
je
mov
inc
sub
push
sub
movs
jno
(bad)
in
lds
pushf
xor
stos
lea
jle
cli
mov
mov
dec
xchg
fwait
shr
mov
getsec
in
inc
pop
pop
pop
cmp
pop
cmp
fcomp
not
xor
cwde
das
pop
pushf
movs
gs
pop
je
hlt
xchg
xor
lods
nop
loope
xchg
aaa
or
or
aam
cdq
xchg
stos
ins
xchg
or
aaa
dec
outs
adc
data16
aad
dec
cld
xchg
scas
inc
inc
cmc
loopne
sbb
xchg
lods
sbb
xchg
popa
xor
dec
out
adc
cmp
test
outs
xor
sti
mov
add
sub
cli
pusha
mov
dec
(bad)
clc
pop
out
aaa
aad
sub
add
ret
retf
xor
daa
sar
sbb
sub
push
and
xchg
push
mov
xchg
cmps
and
jmp
jno
inc
iret
and
stos
jl
mov
ins
in
jne
mov
loope
add
xchg
xor
scas
nop
sub
arpl
pop
mov
ss
in
out
std
push
push
scas
mov
fwait
pop
pop
into
jl
(bad)
rep
fnsave
aas
std
mov
call
fcomp
ficom
fidivr
sbb
xchg
shl
xor
ins
ins
clc
std
mov
sbb
mov
retf
int3
xchg
jns
inc
les
fstp
(bad)
jle
sub
xchg
mov
adc
jp
gs
inc
repz
(bad)
pop
int
adc
push
ds
in
call
and
std
es
ficom
xchg
leave
mov
jo
dec
dec
ins
enter
jnp
jmp
push
in
inc
adc
aad
mov
imul
fs
inc
icebp
cli
cmc
retf
ds
jb
inc
imul
aaa
sub
sub
fild
jbe
jnp
push
push
pushf
mov
imul
pop
scas
cmc
or
mov
cs
cmp
jno
arpl
nop
sbb
pop
add
mov
inc
inc
jl
lods
xor
xchg
(bad)
or
arpl
ins
out
mov
lds
fs
int3
push
sti
push
mov
ins
pusha
scas
mov
aad
mov
sahf
pop
xlat
mov
fild
mov
les
mov
ss
jmp
daa
nop
xor
test
repz
aam
out
(bad)
mov
xor
mov
dec
div
pop
inc
pop
in
ret
ins
leave
dec
mov
and
or
jg
popf
sub
aad
je
ds
fld
push
inc
rol
test
dec
adc
call
hlt
test
sbb
xlat
lods
int3
push
outs
jae
clc
(bad)
gs
sub
cmp
test
and
cmps
clc
xchg
arpl
jl
popf
pop
(bad)
dec
stos
ret
in
scas
js
ins
and
movs
push
fnstenv
aas
inc
sub
sti
inc
repz
mov
sbb
in
ja
hlt
sbb
int
cmps
jbe
out
aas
add
cmp
or
xor
fistp
test
mov
xchg
outs
ins
rcr
arpl
jmp
std
mov
adc
(bad)
stc
pop
fisttp
std
adc
adc
sbb
jnp
scas
add
dec
push
gs
mov
inc
jecxz
mov
sbb
inc
scas
adc
call
je
dec
dec
mov
test
sbb
hlt
and
xchg
adc
test
(bad)
push
xor
test
out
jns
mov
outs
leave
ret
(bad)
cmc
(bad)
sbb
push
mov
adc
mov
cmc
fnstcw
dec
aad
xchg
dec
and
les
fs
mov
jbe
ficom
sub
pushf
iret
imul
sub
pop
inc
inc
push
adc
scas
pushf
sub
scas
mov
and
jp
mov
mov
sbb
scas
mov
push
pushf
mov
sbb
push
js
or
outs
imul
scas
pushf
inc
pop
adc
pop
or
ret
imul
in
dec
int3
repz
cmp
push
push
lods
push
test
add
(bad)
imul
fadd
pop
add
cwde
adc
jmp
add
es
call
sbb
ins
rol
jmp
test
adc
mov
fidivr
pop
imul
pop
test
lods
adc
jg
push
imul
xlat
pop
pop
retf
repnz
add
mov
pop
or
vxorps
rcr
imul
ds
cmp
adc
test
mov
xchg
cmp
in
adc
les
aas
push
mov
movs
arpl
test
loope
sub
(bad)
mov
stc
pop
nop
int3
ret
and
in
(bad)
retf
cld
dec
xor
adc
mov
mov
mov
std
mul
js
pop
call
lods
push
mov
pop
cmp
popf
pusha
shl
pusha
inc
and
movs
out
dec
jns
mov
lea
xor
(bad)
adc
xchg
inc
xchg
inc
inc
loopne
jne
add
lods
pop
mov
test
push
inc
mov
mov
cdq
inc
jne
xchg
adc
addr16
xor
sbb
jo
test
cli
pop
pusha
inc
cld
mov
or
sbb
mov
adc
xor
(bad)
and
pop
jo
leave
mov
(bad)
shl
icebp
xor
ds
inc
cdq
jne
and
int3
mov
push
push
ins
mov
aaa
pop
hlt
lods
lea
cwde
push
pop
inc
shr
das
mov
repnz
std
xchg
push
dec
lds
and
int3
mov
das
std
scas
adc
push
(bad)
mov
or
ja
jmp
lods
outs
sub
fld
es
loope
mov
scas
pop
jp
xor
sbb
in
adc
imul
pop
jmp
in
mov
pop
lds
cmp
cmp
ret
xor
pop
je
inc
add
xchg
ficomp
push
push
mov
ror
jb
and
inc
mov
xchg
cmp
jno
mov
jnp
lods
stos
bound
pop
push
data16
and
fdivr
jbe
or
aas
inc
data16
int3
movs
pop
or
mov
mov
inc
mov
into
jecxz
adc
push
pop
sbb
dec
pop
fucomp
fwait
rol
enter
aam
push
pop
and
clc
mov
or
stc
or
data16
cmp
adc
pop
xchg
xor
add
outs
adc
push
lods
sub
in
xchg
scas
cmp
rol
mov
pushf
scas
es
shl
mov
mov
push
ins
xchg
loope
in
sub
popa
mov
sub
mov
cli
push
adc
scas
rcr
mov
inc
and
dec
out
jae
loop
push
jg
xor
inc
out
push
dec
xor
cwde
out
dec
stc
mov
ret
mov
pusha
test
fild
data16
movs
inc
add
mov
cmp
jg
add
push
mov
(bad)
in
pop
(bad)
repnz
or
mov
sti
out
adc
dec
out
aam
call
cmp
mov
mov
jp
fwait
xlat
(bad)
les
dec
(bad)
inc
push
pop
add
scas
or
fisub
push
scas
pushf
ins
jbe
out
imul
push
dec
jg
popa
adc
push
xchg
pop
inc
movs
aas
jb
inc
push
gs
ficom
adc
ds
xchg
dec
pop
sbb
(bad)
aas
loopne
sub
add
sbb
adc
popa
jmp
jae
jl
inc
aaa
mov
adc
pop
sub
jb
leave
inc
mov
shl
mov
jmp
sbb
ja
icebp
icebp
and
(bad)
ss
je
pushf
inc
mov
sbb
mov
jo
dec
pop
and
cmp
retf
out
pop
in
popa
push
movs
in
icebp
adc
es
nop
adc
cmp
popa
mov
mov
sub
push
mov
mov
cli
or
repz
les
scas
mov
retf
cmp
pop
cmp
dec
dec
ficomp
mov
sub
cdq
fstp
mov
mov
xor
repnz
sub
xor
fdiv
clc
jmp
jb
xchg
pushf
fidivr
cli
mov
and
in
sbb
pusha
jb
in
in
or
jnp
cli
push
push
loope
cdq
stos
add
cwde
shr
push
addr16
cld
mov
pop
add
push
jbe
mov
inc
int
lahf
mov
inc
sar
or
in
and
xlat
mov
mov
xor
xchg
ret
and
add
test
dec
and
(bad)
out
xor
inc
mov
lds
fistp
push
adc
shr
imul
mov
and
dec
mov
aas
mov
and
ins
in
lds
mov
cdq
lods
xchg
jb
rcr
std
pop
pop
sahf
out
lahf
adc
and
test
and
and
dec
mov
inc
cmc
push
imul
in
pop
inc
jnp
xlat
jg
in
adc
mov
cmps
push
ret
scas
or
dec
push
out
pop
cld
je
sub
xor
in
sbb
xor
std
mov
call
or
mov
ss
fmul
add
jge
hlt
push
test
mov
mov
mov
into
inc
cs
(bad)
pop
xchg
cld
test
xor
jb
int
inc
loope
daa
push
inc
test
jae
dec
jno
mov
fadd
lods
loope
push
dec
jp
dec
jno
retf
ror
sbb
pushf
adc
xor
inc
shr
pushf
adc
push
push
popf
nop
and
clc
inc
enter
pop
daa
lock
push
mov
jecxz
xlat
mov
int
outs
sub
mov
mov
jno
inc
mov
push
mov
cdq
jl
lahf
mov
sbb
dec
push
mov
cmps
jp
add
mov
and
xchg
or
in
in
jecxz
lds
mov
xor
stc
stc
call
movs
xchg
in
inc
push
adc
xor
and
fstp
in
adc
and
sub
mov
scas
loopne
jbe
adc
call
(bad)
and
fwait
pop
ss
(bad)
pop
mov
jns
mov
(bad)
mov
jae
adc
sti
dec
aaa
scas
fstp
iret
stos
stos
xor
and
mov
frstor
cwde
int3
mov
mov
repnz
push
scas
aaa
and
mov
repnz
push
test
cs
cmp
dec
mov
nop
lods
pop
(bad)
xor
gs
iret
and
pop
pop
(bad)
pop
mov
cmp
dec
jae
mov
(bad)
les
mov
mov
fucomip
lods
push
mov
aaa
scas
jo
retf
loopne
and
cld
mov
inc
sub
or
pop
sub
mov
mov
xchg
xchg
into
test
push
clc
pop
mov
outs
jbe
pusha
jl
pop
jmp
iret
sbb
adc
pop
cmc
pop
nop
in
enter
inc
in
js
in
scas
mov
dec
push
dec
ret
dec
xchg
daa
xchg
dec
ins
test
adc
inc
ja
xor
add
sub
(bad)
ja
lods
into
sbb
or
add
add
dec
bound
mov
and
shr
xchg
add
add
aad
ret
test
xor
cdq
retf
cmps
cmp
mov
js
add
(bad)
in
popf
adc
mov
xor
(bad)
cli
sbb
push
mov
inc
test
mov
mov
mov
ins
and
or
add
xor
and
movs
stos
dec
enter
jl
pop
and
adc
rcr
xchg
rol
jae
sbb
or
push
mov
repz
(bad)
retf
cdq
mov
outs
test
cmp
adc
jb
sub
pop
mov
and
or
ss
sahf
sub
fistp
push
dec
cmp
mov
fidiv
mov
inc
sub
jo
jmp
xlat
loope
leave
lds
ficom
in
dec
(bad)
add
mov
lahf
inc
xlat
shl
xchg
xchg
cmp
push
mov
cdq
das
jle
aaa
inc
stos
into
push
loopne
dec
mov
or
jmp
mov
scas
push
cmp
inc
in
inc
jb
call
je
out
jbe
sub
mov
call
xchg
push
(bad)
aas
lods
or
mov
inc
scas
pop
mov
sbb
cmp
xchg
ret
cmovbe
sub
dec
je
or
pop
fcmovnb
(bad)
dec
lds
loop
lods
push
inc
call
mul
push
ret
jo
jne
fcom
inc
jae
or
jmp
in
out
enter
mov
mov
shl
out
hlt
test
adc
or
retf
ds
sub
xor
(bad)
or
cmps
add
je
push
xchg
jg
mov
pop
push
push
out
add
mov
mov
cld
xchg
pop
fnstsw
out
mov
jmp
xchg
ja
pop
stc
jns
jmp
std
or
push
xor
(bad)
in
mov
jb
cmp
mov
ja
pop
sub
imul
loop
ins
or
pop
shl
and
inc
jmp
adc
cmp
nop
mov
xchg
lods
shl
out
cmp
test
add
cmp
sti
add
lahf
cmc
repz
mov
in
les
push
inc
sbb
mov
push
enter
outs
bnd
sbb
jbe
add
cmp
jne
sub
or
push
mov
call
inc
xchg
nop
mov
mov
imul
lds
jmp
mov
push
movs
loope
test
inc
cmc
fld
mov
mov
clc
out
sbb
pop
mov
dec
jae
pop
fcomp
ret
mov
or
rcl
mov
mov
ret
fsub
icebp
xchg
mov
sbb
imul
(bad)
jno
xchg
or
push
(bad)
jle
push
or
mov
xchg
jns
sub
shl
dec
and
pop
dec
test
jns
lea
or
and
xlat
xor
(bad)
rcr
xchg
mov
push
(bad)
dec
push
stos
dec
cwde
inc
mov
adc
movs
mov
sub
add
push
inc
cdq
rcr
xor
mov
lahf
inc
pop
cmp
fidivr
xor
das
push
rcl
stc
jbe
outs
xchg
add
cmp
in
(bad)
popa
movs
jo
(bad)
aam
pop
mov
fadd
push
mov
cli
stos
hlt
add
daa
push
call
xlat
or
mov
mov
add
push
add
dec
out
mov
loop
adc
or
sbb
adc
dec
ds
adc
jge
stc
xor
jge
stos
adc
xchg
in
int3
pop
sbb
jmp
mov
sub
xor
push
mov
pop
je
pop
pushf
pop
movs
aam
retf
scas
add
gs
fild
mov
lahf
push
js
cmps
ffree
(bad)
test
xor
aaa
leave
mov
cmps
xchg
inc
cdq
cmp
outs
push
shr
sbb
mov
ins
daa
inc
cdq
or
fisttp
loope
call
jg
js
addr16
fist
fcomp
sub
gs
popa
ds
jnp
sahf
lods
out
mov
sti
mov
test
xchg
popf
add
(bad)
sbb
test
xor
cmps
hlt
push
in
add
jle
inc
adc
mov
fiadd
scas
jbe
inc
or
mov
int
xchg
add
bound
(bad)
test
not
and
jg
les
scas
xchg
ins
clc
jmp
sbb
push
xor
nop
mov
xor
int
adc
out
sub
mov
sbb
mov
sub
mov
lds
and
fcmovnb
mov
loope
fs
out
mov
mov
inc
mov
sti
gs
dec
push
in
fist
dec
scas
cwde
cmp
inc
das
mov
js
sbb
shl
bndstx
lock
dec
dec
ror
fsub
scas
mov
push
test
push
fist
cwde
repz
icebp
dec
push
sbb
push
inc
cwde
jmp
sbb
cld
fnsave
adc
ins
cmp
call
cmp
ins
(bad)
repnz
xor
imul
dec
cmps
fidiv
pop
jge
jl
mov
cmovae
outs
clc
movs
xchg
xchg
call
scas
sub
(bad)
pop
cmp
bound
js
sub
icebp
push
lods
in
or
retf
ftst
dec
and
or
in
cmp
mov
ins
push
test
movs
mov
fdivr
mov
mov
iret
mov
fisttp
sbb
(bad)
ja
loopne
fst
lds
cmp
ret
lahf
les
jg
pop
cli
xor
cmp
or
adc
xchg
xchg
loope
jecxz
inc
and
cs
test
dec
mov
add
les
pop
mov
sbb
jbe
cmp
mov
adc
les
fnstenv
addr16
cs
into
add
cmp
sbb
mov
pop
ret
mul
ja
xchg
add
stc
pusha
lock
ret
scas
push
fsub
push
ins
mov
and
cmp
or
xchg
sub
cmp
out
rol
dec
sahf
out
imul
test
iret
mov
ret
mov
leave
push
rcl
push
(bad)
xchg
dec
sbb
div
and
xor
mov
or
les
or
cld
popa
jbe
cmp
mov
jg
call
outs
daa
in
scas
fsub
gs
in
(bad)
adc
int3
sub
data16
jl
xchg
push
push
add
lock
mov
mov
leave
adc
cmc
enter
xchg
pop
pusha
fwait
ins
int
lock
lds
imul
sub
call
in
out
and
cld
add
push
data16
js
inc
hlt
imul
sbb
scas
xchg
shl
mov
(bad)
cmp
ins
inc
add
ss
ins
jb
mov
adc
addr16
outs
xchg
inc
or
sbb
lea
imul
scas
jl
xlat
out
dec
call
inc
leave
and
les
(bad)
xor
pop
xchg
icebp
adc
xor
pop
rol
add
cmp
sahf
repnz
mul
mov
cld
iret
(bad)
neg
inc
push
das
xor
popf
iret
jno
sbb
adc
mov
cmp
shl
ds
sub
shl
sub
and
outs
bound
add
mov
call
div
loope
inc
push
paddw
div
or
enter
(bad)
(bad)
outs
fcmovbe
ins
mov
retf
pop
shl
xor
mov
shl
mov
scas
mov
mov
jns
(bad)
jle
popa
fdiv
adc
mov
enter
xchg
cmp
test
cli
inc
mov
sti
sbb
xor
or
xor
in
jno
push
jnp
push
dec
and
test
or
mov
dec
shl
(bad)
cmps
pop
mov
sbb
loope
fstp
jb
repnz
inc
(bad)
in
call
js
inc
inc
jbe
sbb
mul
jmp
sub
jne
adc
mov
mov
xor
inc
sub
or
aaa
jge
cmp
cdq
xchg
pushf
xor
data16
add
push
fidivr
cmp
fs
mov
add
fistp
idiv
dec
xor
add
(bad)
cs
das
es
dec
fcom
daa
cmc
test
movs
mov
rcl
jns
ror
into
pusha
jns
call
add
mov
movs
imul
cmp
sub
call
(bad)
psllq
ds
push
add
adc
nop
scas
ret
sti
pop
push
lods
xor
cmp
add
pushf
out
inc
in
and
mov
das
pushaw
xchg
or
fisttp
jmp
dec
in
cmp
pop
aaa
pop
and
call
cmp
js
lahf
xchg
mov
push
mov
jne
imul
add
xor
jge
mov
mov
mov
push
inc
ss
inc
and
(bad)
arpl
les
sub
cmp
lea
pop
push
mov
psrad
dec
retf
sbb
jno
push
and
sbb
mov
add
jge
push
xor
(bad)
out
cmp
sbb
sub
out
ret
dec
xchg
jns
and
sti
jae
mov
mov
ins
cmps
mov
push
mov
lahf
inc
fimul
add
js
xchg
fisttp
pop
inc
cmp
ins
xchg
js
aaa
adc
cmc
addr16
fisttp
hlt
cld
(bad)
sbb
repz
mov
xchg
in
jno
xor
mov
pop
(bad)
cmp
inc
add
or
int
mov
pop
mov
sbb
push
test
add
cmps
xchg
dec
test
add
mov
add
pop
cmc
xchg
dec
xchg
retf
out
jne
je
mov
pop
adc
mov
imul
cmp
stos
xor
adc
and
ins
mov
lds
int3
jo
mov
les
and
scas
dec
pop
icebp
retf
std
pop
push
push
fwait
sub
js
add
or
fld
adc
out
adc
out
arpl
outs
outs
mov
mov
cwde
out
xchg
push
mov
loop
mov
jnp
fimul
out
push
repz
rcl
int3
pop
pop
xor
sahf
das
sub
not
mov
mov
mov
nop
mov
push
pushw
fwait
or
jo
mov
and
add
sbb
mov
mov
adc
pop
and
retf
cmp
inc
cmps
jns
inc
loope
movs
fcmovne
adc
sbb
cmp
sub
fsubrp
mul
imul
stos
pop
or
cli
or
lock
inc
xchg
pop
jmp
mov
in
movs
xchg
push
aad
pop
pop
fwait
cmps
mov
std
nop
mov
push
sbb
mov
shl
dec
jno
dec
js
mov
inc
ror
nop
loope
pop
jnp
out
std
mov
dec
dec
mov
adc
mov
aas
je
jmp
(bad)
push
cmp
adc
push
cli
mov
lods
in
xchg
rcr
and
loopne
sbb
add
lds
repz
xor
mov
sub
xor
or
nop
scas
fcomp
mov
data16
neg
xchg
jg
movs
cmp
enter
(bad)
mov
sub
jecxz
out
xchg
nop
aas
(bad)
iret
push
shl
mov
jmp
mov
push
mov
retf
test
pop
jecxz
in
lea
xor
aad
add
repz
mov
dec
push
nop
mov
mov
xor
cmps
dec
loope
fiadd
test
add
jecxz
inc
ret
popf
mov
sbb
stos
dec
mov
scas
add
cli
mov
add
fistp
mov
bound
sbb
sub
dec
cmp
push
push
test
rcr
daa
(bad)
dec
lods
jl
rcl
ins
daa
sbb
xchg
int3
pop
sbb
add
fstp
call
push
pop
int
cli
ja
xor
jns
mov
ss
jg
pop
push
ror
cwde
dec
aaa
icebp
jle
ret
cmp
mov
imul
jle
push
push
aas
push
ror
mov
cwde
cmovb
sahf
cmp
in
dec
in
out
shl
cmc
cmp
aad
jae
adc
iret
loop
jmp
jge
jmp
out
xchg
icebp
scas
mov
das
shr
inc
pushf
pop
xchg
stos
lahf
scas
daa
or
xchg
mov
ret
repz
pushf
fidiv
jne
cwde
sub
paddb
outs
xor
loope
mov
hlt
fisub
mov
(bad)
out
or
cmc
add
popa
jns
add
out
cmp
push
mov
push
push
dec
cmc
stos
pushf
in
cmps
cmc
cmp
jns
clc
jl
mov
rcl
mov
sti
cld
jno
ror
or
fdivr
mov
(bad)
mov
xchg
fiadd
neg
mov
pop
and
in
adc
sub
mov
push
test
popa
push
push
out
repz
ds
or
jle
movs
enter
xor
jbe
sbb
call
cmp
adc
jl
lahf
stos
lods
xor
cli
retf
push
add
es
cmp
or
xchg
xor
sti
in
in
dec
imul
and
std
aas
call
cdq
pushf
push
xchg
cmps
dec
jmp
sub
arpl
cdq
xor
ss
mov
inc
inc
stos
fwait
loopne
(bad)
or
mov
sti
sub
sti
cdq
dec
adc
add
cmps
or
cmps
pop
loop
fisttp
push
cmp
popa
rol
push
fucomi
fidiv
sbb
sbb
das
clc
jno
inc
scas
fisttp
jl
nop
cli
mov
jl
jge
mov
sbb
fsub
sbb
jo
xchg
push
pop
test
fdiv
rol
sbb
mov
ret
outs
and
pop
push
pusha
daa
int3
lahf
ins
lea
lahf
int3
cmps
paddd
ins
adc
inc
mov
mov
cmp
(bad)
je
ds
mov
cmp
mov
cmp
push
adc
cmp
mov
jne
fstp
sahf
jecxz
je
and
pop
sbb
mov
jmp
push
xchg
test
jbe
sbb
push
xchg
xor
pop
xor
inc
dec
add
jg
ss
cmp
xchg
lock
inc
gs
inc
scas
outs
xor
jecxz
inc
mov
lea
in
outs
and
imul
popa
xor
cmp
cmp
mov
sbb
(bad)
pop
es
enter
loopne
push
adc
cdq
fisttp
inc
jmp
mov
inc
mov
mov
push
in
daa
das
dec
adc
mov
stc
ins
jo
aas
dec
int3
xlat
fidivr
mov
cmp
aam
and
into
(bad)
rcl
arpl
cmp
mov
dec
arpl
(bad)
mov
cmp
arpl
dec
inc
lahf
mov
movs
mov
dec
jne
mov
loopne
(bad)
xor
jo
test
not
pop
dec
and
sub
int
push
cmp
cmc
aad
adc
adc
pusha
dec
xor
fcom
loope
mov
data16
dec
ss
jns
inc
fdiv
mov
push
push
add
fld
jle
jbe
fwait
popa
test
jne
mov
inc
retf
inc
adc
or
sbb
cld
mov
leave
lahf
imul
jl
mov
popf
xchg
addr16
and
(bad)
lahf
and
stos
mov
bound
push
mov
add
inc
mov
dec
loopne
jb
cmps
les
sbb
in
xchg
in
xchg
xor
push
shl
fimul
push
dec
cwde
cmps
sub
inc
test
dec
push
mov
cmc
test
pop
inc
push
adc
dec
and
jl
xchg
out
push
sar
adc
sti
xor
jp
sbb
xchg
pop
push
push
or
mov
das
pop
mov
jg
sub
sbb
push
or
mov
cmp
adc
inc
fild
xor
and
mov
pushf
dec
xor
mov
movs
push
pop
sub
pop
pop
mov
sbb
ret
mov
stc
xchg
cmp
xchg
xor
xchg
lea
push
dec
fwait
jne
data16
mov
sub
xchg
xor
xchg
add
push
sub
sub
fnstenv
js
cmp
scas
mov
or
dec
add
into
es
cs
aam
ror
and
xchg
dec
test
mov
sub
xor
test
rcl
mov
xor
prefetcht1
test
outs
inc
movs
jmp
arpl
xchg
ds
lds
pop
cdq
(bad)
mov
les
loop
jmp
int
leave
jmp
add
or
aaa
pop
mul
stc
and
or
dec
mov
lds
sub
call
mov
addr16
cdq
add
jl
or
or
(bad)
jbe
test
sbb
mov
(bad)
cwde
mov
mov
or
inc
(bad)
jno
mov
shl
call
das
cwde
dec
dec
mov
int3
adc
repnz
adc
mov
call
xchg
mov
pop
sbb
pop
xchg
xchg
dec
dec
push
push
or
enter
pop
gs
leave
and
mov
loopne
out
xchg
add
ins
aas
ret
inc
push
dec
mov
fisubr
and
and
pop
adc
scas
mov
sub
xchg
xor
rcl
fwait
jmp
adc
dec
popf
clc
adc
lods
push
and
inc
test
mov
add
pop
jl
call
adc
jmp
mov
test
stc
ins
mov
mov
cli
pop
push
lock
jo
pushf
hlt
push
outs
rcl
test
cld
cmps
popa
xor
pushf
shl
bound
mov
pop
jg
lahf
xchg
ret
push
(bad)
aaa
dec
mov
push
jmp
xchg
lahf
sbb
les
adc
aam
cmp
dec
ficom
nop
stos
mov
dec
sbb
sti
aad
lea
stos
fnstcw
adc
jmp
mov
inc
pop
jo
sbb
pusha
icebp
call
(bad)
xor
out
int3
or
adc
div
jo
sub
pop
push
in
add
mov
mov
pop
and
add
xchg
sub
sub
sub
inc
mov
or
xlat
jge
mov
data16
mov
sub
mov
mov
in
xchg
sbb
adc
ja
aam
imul
lahf
mov
xor
pop
sub
xor
push
setp
mov
andnps
pop
(bad)
mul
push
js
into
push
rol
test
ret
sub
popa
test
cwde
aad
in
xchg
jecxz
jns
push
and
int
push
ds
test
xor
jnp
adc
mov
fnstcw
cs
jns
fsub
ficomp
jbe
aam
xor
rcr
ja
push
mov
add
jbe
xchg
inc
push
adc
fdivr
fcmovne
ins
sbb
pop
scas
dec
ss
in
push
sbb
pop
iret
or
mov
ret
jge
in
cmc
in
jo
pop
push
jecxz
iret
sbb
pop
jle
pop
pop
fld
sbb
push
adc
push
movs
push
cmps
shl
or
sub
inc
repnz
ja
out
mov
add
adc
stos
or
test
mov
dec
cwde
mov
mov
jle
ficom
mov
int
cli
cmp
test
mov
cmc
iret
rcl
mov
xchg
xor
addr16
mov
fild
and
mov
arpl
movs
aaa
in
repnz
mov
and
push
imul
dec
mov
sbb
inc
jg
cmps
in
mov
mov
fldcw
inc
and
jae
add
push
cmp
ja
cmp
in
fsub
(bad)
jmp
or
ss
add
ds
paddw
scas
adc
mov
or
dec
mov
push
daa
loopne
lock
push
add
je
test
jg
xor
out
dec
cmp
add
sbb
jle
iret
cli
dec
mov
xchg
in
or
mov
(bad)
jmp
js
ins
jns
jne
add
aaa
and
sbb
or
xchg
iret
or
repz
xchg
je
out
xor
inc
xor
ins
pop
cmps
lock
loop
nop
pop
jmp
je
mov
push
enter
cmp
adc
pop
loopne
jno
ficomp
lds
or
ins
fwait
ja
jmp
or
adc
cli
and
out
rol
call
je
int3
sbb
mov
sbb
sbb
fs
xchg
xchg
xlat
ins
push
lea
rcl
scas
mov
je
cmp
mov
scas
outs
or
push
dec
dec
xor
test
or
inc
or
push
jnp
push
nop
mov
add
call
stos
xchg
pop
sbb
sub
inc
mov
shr
xchg
and
dec
mov
jnp
push
dec
je
stos
shr
push
pop
jle
pop
pop
and
data16
fbld
mov
cmp
mov
out
pop
push
pop
vorpd
stos
icebp
mov
sub
imul
lea
or
mov
push
es
adc
inc
jns
mov
cmp
or
jmp
loopne
in
mov
rcr
outs
in
lods
mov
ret
loope
mov
fdivr
push
push
push
push
out
mov
dec
and
xor
pop
and
mov
xchg
xor
retf
(bad)
xor
cmps
pop
popf
xor
pop
icebp
(bad)
cmp
or
jae
sub
mov
and
int3
aaa
inc
(bad)
fmul
inc
sub
daa
jo
sub
stos
ror
mov
fucomp
push
push
xor
ret
cmc
push
imul
test
stc
jno
and
sbb
adc
mov
and
int3
fbld
push
rol
mov
mov
inc
test
pop
add
or
dec
aam
das
das
fsub
ret
popf
movhps
out
mov
push
mov
xor
je
popa
cmc
xchg
sub
aad
pop
iret
adc
rcl
and
(bad)
mov
fild
sub
fisttp
test
push
and
stos
test
push
std
or
aas
adc
mov
ret
add
lea
jp
sub
mov
les
and
pusha
loopne
add
adc
cs
mov
xor
bound
call
push
fnstsw
mov
sti
sub
pop
dec
sub
les
pushf
pusha
dec
or
sbb
lahf
push
je
mov
adc
cmps
std
xchg
dec
cmps
jns
fisub
call
xchg
popf
pop
mov
mov
and
jo
outs
pop
dec
mov
test
xor
or
ror
je
cmp
nop
rcr
rcl
imul
sbb
(bad)
clc
lods
inc
jl
test
dec
mov
push
inc
in
push
fst
dec
cmp
pop
stos
push
pushf
push
xchg
bound
test
pop
pop
add
pop
pusha
imul
ins
pmulhw
(bad)
lods
push
mov
es
cmp
pop
rol
and
xchg
mov
pop
les
or
lods
aaa
ror
jmp
or
push
pop
xchg
mov
push
pop
push
scas
fild
or
pop
adc
fidivr
sbb
dec
repnz
leave
(bad)
arpl
repz
leave
sub
adc
iret
xchg
xor
jno
push
shl
icebp
adc
adc
xor
fsub
pop
mov
xchg
sbb
shrd
cmp
mov
cmc
fwait
in
inc
add
bnd
cwde
add
push
add
mov
arpl
in
dec
sbb
inc
push
jmp
cwde
movs
mov
and
pop
sbb
mov
jno
adc
xor
enter
push
add
push
sub
cmp
pop
jnp
aad
cmps
out
cmp
shl
cmps
iret
inc
addr16
fisub
sub
in
inc
lock
fbstp
dec
(bad)
repz
sub
bound
add
adc
dec
mov
inc
sub
mov
cmps
jmp
out
xchg
mov
push
icebp
icebp
aam
jge
cwde
call
xor
out
mov
pop
clc
jl
inc
(bad)
sbb
mov
jle
adc
(bad)
ja
and
jp
xor
push
sbb
xor
sar
or
(bad)
neg
dec
stos
mov
mov
movs
sti
js
shl
sbb
aam
inc
xor
fcomp
cmps
push
cs
jnp
jno
lahf
rcl
cmp
cwde
pop
adc
out
and
or
ret
xchg
test
cmp
sbb
cli
fstp
aad
cmp
lods
and
mov
repnz
fwait
xor
fdiv
rcr
xor
dec
sub
dec
adc
movs
mov
(bad)
retf
jecxz
and
scas
or
scas
mov
mov
cli
mov
xchg
xchg
out
(bad)
mov
mov
movs
mov
and
sbb
or
inc
sbb
add
mov
mov
ds
push
mov
(bad)
fidivr
sub
cmps
enter
mov
fstp
mov
aam
hlt
or
jnp
repz
jmp
push
enter
pop
add
test
and
inc
and
cmp
dec
scas
adc
adc
dec
add
mov
sub
inc
xchg
sub
jo
mov
inc
mov
push
add
fisttp
jae
jg
pop
sbb
shl
jae
sbb
repz
rcl
dec
(bad)
mov
jbe
mov
stos
ins
mov
int3
mov
lea
jecxz
mov
xlat
mov
push
pop
stos
cmps
dec
dec
sbb
rcl
or
ins
and
out
mov
and
enter
(bad)
ror
call
add
inc
std
add
jne
adc
sbb
cmp
xchg
cmc
repz
fsubr
stos
ss
sub
cmps
test
imul
je
sub
ffree
int
(bad)
sub
dec
out
cmp
sar
mov
(bad)
adc
push
lds
push
retf
movs
xor
adc
cmp
mov
(bad)
into
ins
and
cmp
or
cli
or
mov
loop
pop
fsub
fidiv
fldenv
push
xlat
or
mov
nop
sub
and
mov
push
gs
xor
mov
nop
(bad)
sub
push
mov
mov
call
jno
(bad)
mov
add
sbb
sti
fnstcw
out
pop
fmul
ror
add
fmul
add
pop
inc
repnz
loope
scas
jg
test
js
push
jb
mov
pop
outs
push
repz
outs
das
mov
dec
daa
div
pushf
cmp
sub
cmp
popf
shl
mov
and
push
mov
xchg
int3
fild
sbb
sub
jmp
push
mov
adc
int
jo
imul
pop
adc
mov
mov
xchg
xchg
mov
push
inc
ror
(bad)
cli
add
loope
xchg
push
adc
add
jne
jge
retf
pushf
pop
imul
mov
add
jmp
out
and
jo
fs
out
xchg
jns
inc
jne
mov
pop
xchg
cmp
xor
mov
test
ret
in
push
ret
and
push
adc
pusha
push
(bad)
pop
sub
std
sbb
pop
in
mov
call
xchg
dec
movs
loop
fst
mov
nop
fld
cmps
cmp
inc
daa
lods
mov
push
push
push
call
call
addr16
fdiv
js
xchg
retf
or
pop
adc
ss
lahf
mov
jmp
ins
(bad)
(bad)
mov
outs
outs
stos
and
mov
cmp
and
in
sar
lock
(bad)
xor
cmp
add
lds
xchg
mov
and
add
jne
mov
sbb
shr
pushf
std
imul
mov
push
pop
adc
push
sub
ss
shl
cmp
vpaddb
dec
push
jne
std
jmp
jae
adc
or
(bad)
movs
mov
dec
adc
addr16
xchg
push
in
jmp
cmps
inc
pop
add
inc
fisub
mov
aas
sub
sar
adc
sbb
loopne
ret
cmp
sub
adc
scas
push
fs
in
fidivr
jno
xor
ret
bound
push
mov
sbb
cmp
sub
jmp
outs
cs
xchg
xor
add
inc
add
pop
sub
mov
cmp
dec
dec
and
inc
or
shl
mov
mov
mov
loope
pop
test
push
test
fiadd
sub
arpl
ud2
aas
movs
popa
adc
cmp
pop
gs
or
cli
inc
mov
mov
fsub
call
mov
mov
loop
mov
xchg
xor
sar
in
adc
je
cmp
cmc
jmp
mov
pop
push
cmp
lock
xor
lods
gs
mov
mov
js
jp
pop
xlat
mov
shr
xor
fistp
call
(bad)
icebp
lock
inc
in
cdq
(bad)
(bad)
enter
inc
push
mov
cmps
push
mov
imul
popf
in
cmp
repz
push
jle
cmps
mov
sti
pusha
loope
out
inc
data16
mov
push
push
cwde
pop
mov
jnp
pop
or
jg
cdq
pop
and
or
pop
mov
push
adc
bound
clc
mov
xchg
mov
xor
cmc
retf
pop
adc
inc
jge
inc
mov
push
push
mov
loopne
inc
outs
repz
(bad)
(bad)
mov
mov
pop
lahf
xchg
lods
movups
inc
jo
jns
dec
jb
adc
js
bound
repz
je
fs
scas
test
or
jns
and
mov
push
clc
adc
xor
cli
push
jns
cli
xor
lods
push
sub
invd
dec
cmp
leave
pushf
data16
sub
outs
outs
mov
pop
xchg
in
cdq
jnp
pop
stc
sub
mov
and
mov
test
shl
push
ficomp
outs
or
int3
inc
cmp
fisub
iret
in
dec
sub
sbb
xchg
pop
push
mov
jno
jae
hlt
fmul
sahf
addr16
pushf
mov
in
bound
(bad)
mov
fnstcw
retf
and
fld
adc
mov
inc
in
mov
pop
dec
je
js
dec
or
xor
in
out
sbb
scas
mov
js
jae
and
pop
mov
test
sbb
push
test
dec
(bad)
lea
or
fwait
imul
sbb
add
mov
xor
scas
sub
cmps
popa
xor
sbb
pop
push
sub
push
or
out
add
pop
pop
cmp
imul
add
call
call
push
cmp
push
fdiv
inc
out
mov
mov
push
loope
jmp
jge
(bad)
stos
mov
icebp
mov
inc
in
fiadd
mov
mov
inc
sbb
and
dec
sub
retf
xchg
lods
aas
or
dec
sbb
movs
mov
imul
loopne
retf
xor
ret
ins
dec
mov
and
sub
mov
lock
movs
bound
pop
pop
sbb
jecxz
cdq
dec
stos
(bad)
clc
xchg
cmps
inc
loope
rol
adc
mov
sub
or
push
ret
pop
and
or
jl
int
mov
nop
mov
cwde
push
mov
ss
stc
dec
mov
les
mov
imul
popf
repnz
aaa
out
xor
out
lods
or
cmc
rol
cmp
push
xchg
enter
loope
xor
les
iret
movs
pushf
and
ss
cmp
pop
hlt
cmp
data16
loope
push
dec
adc
mov
or
stos
push
mov
loopne
lods
int3
fnstcw
jmp
cmp
sbb
push
cmp
jl
int3
retf
int
xchg
int
and
loope
add
xchg
pop
or
ins
fdivr
mov
sbb
retf
loop
clc
pushf
push
das
jl
xor
or
mov
lea
push
aam
mov
data16
repnz
hlt
push
or
imul
ret
push
int3
mov
outs
ss
xchg
adc
sub
lods
std
(bad)
dec
push
mov
leave
or
icebp
enter
(bad)
cmp
in
hlt
adc
and
or
test
and
mov
or
sti
pop
pushf
pusha
mov
xor
push
cmps
ins
pop
nop
sub
call
xor
sub
cdq
cdq
push
stc
popa
add
adc
and
aad
and
inc
and
pushf
icebp
rcr
mov
in
jne
jb
ds
mov
adc
stos
cmp
sub
movs
push
jl
outs
xor
xchg
das
enter
fidiv
inc
and
sbb
mov
cmp
mov
test
pop
xchg
pop
clc
ficomp
js
lahf
bound
retf
cmp
xchg
hlt
and
cmp
aam
scas
dec
cmp
cli
outs
cs
push
fld
add
push
pop
xor
fdiv
xchg
push
cmc
add
(bad)
int3
cli
jnp
call
mov
mov
and
jg
pop
or
pop
sbb
(bad)
retf
fcomp
cdq
jo
fst
pop
xor
sub
add
scas
push
cmc
xchg
xor
into
lods
mov
ins
setb
out
gs
(bad)
add
pop
mov
inc
sti
xchg
push
nop
dec
mov
push
cmps
inc
push
js
aas
scas
and
jbe
push
inc
mov
icebp
xchg
pop
pop
and
popa
(bad)
push
xchg
jmp
cwde
cmp
fcmove
xchg
push
mov
mov
ret
sti
mov
mov
sub
sahf
jmp
and
out
adc
and
cmps
orps
mov
retf
nop
pop
repnz
dec
sub
daa
pop
mov
add
mov
cmp
outs
inc
jno
push
(bad)
cmp
jne
ffree
lock
or
mov
cmc
popa
test
adc
ins
fiadd
lea
iret
call
pushf
ror
jmp
xor
movsx
int
mov
test
aaa
mov
loope
into
arpl
or
call
jb
pop
jbe
aam
int3
mov
jae
add
or
loope
outs
fnstenv
dec
movs
jecxz
xor
int3
and
push
ret
xchg
push
(bad)
stos
adc
sub
push
test
jns
mov
fistp
outs
int
shr
retf
outs
cwde
xchg
jl
jg
push
add
jb
xor
jae
retf
push
jne
and
mov
enter
lahf
jle
pop
and
in
dec
loop
rol
adc
movs
arpl
aad
nop
push
es
dec
das
data16
push
(bad)
dec
rcl
xchg
(bad)
jo
fisttp
and
dec
pop
movs
fistp
xchg
ins
rol
xchg
pop
xchg
xor
in
cmp
sub
lahf
xor
jmp
add
scas
push
repz
(bad)
ror
dec
fisttp
push
ss
inc
add
dec
pop
call
adc
imul
or
fwait
sub
ja
cmp
mov
and
xchg
inc
retf
pop
cdq
xor
cmps
mov
cmps
or
lods
mov
out
leave
das
mov
add
loope
daa
mov
adc
ret
imul
sbb
out
lahf
icebp
bound
das
inc
jno
mov
loope
stc
stc
enter
lahf
mov
inc
test
jbe
adc
and
fcom
push
retf
cmp
sub
shl
add
sub
sbb
add
push
sbb
cli
and
ret
(bad)
push
jne
pop
mov
inc
leave
push
push
mov
sti
xlat
in
rcr
les
mov
cmps
stos
in
push
test
dec
push
mov
in
sti
and
xchg
jp
adc
push
shr
rcl
call
enter
jl
push
pop
repnz
pop
xchg
lahf
push
pop
ds
jnp
push
xchg
mov
dec
(bad)
call
jno
xbegin
xchg
je
jge
xchg
pop
jl
ja
cs
jge
xor
sbb
cld
out
pop
xchg
lock
jp
jmp
cs
cmp
cmc
stos
sub
jg
fwait
sub
jnp
test
in
and
inc
xchg
arpl
popf
int3
popa
xchg
test
rcr
inc
add
(bad)
pop
cmp
mov
sub
cs
inc
dec
mov
int
fsubr
mov
cmc
iret
cmps
mov
dec
ret
push
xor
xchg
sti
pop
enter
stos
jmp
or
(bad)
push
ja
pop
clc
lds
jbe
cli
sbb
xchg
or
inc
movs
cmp
int
cld
icebp
fs
inc
or
dec
movs
xchg
inc
mov
dec
lods
add
sbb
cli
add
mov
jg
inc
loopne
dec
std
cmp
adc
mov
pushf
cmp
retf
mov
add
xchg
out
lahf
add
je
hlt
xor
stos
out
jmp
ror
xchg
fild
or
push
lods
mov
out
push
mov
pop
xchg
fild
and
jecxz
mov
mov
mov
dec
ficom
lds
xchg
les
mov
mov
clc
push
dec
inc
cmc
ret
sub
int
push
stos
jb
xchg
cmovg
pushf
cmps
mov
mov
cmp
fisubr
and
mov
cmc
adc
aas
(bad)
mov
imul
dec
add
xor
and
jmp
fisttp
shl
or
mov
ror
int3
jo
xlat
pusha
or
stos
loop
iret
(bad)
sbb
(bad)
sub
addr16
mov
pop
or
xor
imul
jns
xor
adc
xchg
dec
stc
fwait
push
dec
out
xchg
jmp
sub
shl
push
dec
mov
test
push
jmp
retf
sub
cwde
mov
popf
fild
addr16
dec
and
dec
mov
or
pop
mov
shl
test
lods
pop
ficom
imul
(bad)
subps
ret
cmp
sbb
inc
push
hlt
in
jecxz
mov
pushf
mov
or
mov
pusha
imul
sbb
inc
mov
or
fadd
add
ins
mov
mov
fadd
adc
lea
lds
sub
pop
mov
sbb
seto
lea
sahf
sbb
xchg
push
inc
test
push
inc
jecxz
xor
mov
push
pop
push
adc
scas
dec
lock
inc
pop
sbb
shl
jge
into
mov
(bad)
fld
mov
in
rcr
and
cmps
mov
xor
imul
push
jecxz
movs
mov
int3
test
xchg
pop
jmp
sub
cmp
lds
dec
and
je
icebp
or
ins
fucomip
nop
cmps
je
add
sub
lods
push
scas
iret
push
popa
je
lock
(bad)
push
mov
pop
retf
imul
dec
and
movs
mov
jae
fstp
cmps
xor
jns
pop
frstor
mov
fs
mov
xor
sub
and
add
inc
es
inc
mov
es
fidivr
mov
popa
addr16
or
je
pop
xchg
loop
lahf
push
in
mov
jno
add
jae
pop
std
push
int3
sbb
xor
mov
ret
mov
dec
push
add
sti
dec
adc
stos
cli
rcr
nop
into
sub
push
and
xor
sti
sbb
xchg
neg
ss
outs
sub
mov
xor
hlt
pop
mov
in
in
sbb
(bad)
arpl
repnz
or
call
aaa
div
sti
outs
mov
daa
sahf
sub
popf
repz
add
(bad)
push
(bad)
xlat
retf
mov
mov
imul
aaa
sbb
movs
hlt
pop
mov
adc
push
aad
jl
ret
bound
imul
lock
out
in
push
push
call
out
out
pop
sub
mov
dec
ja
std
jmp
jmp
out
cmp
sti
sbb
adc
es
push
not
fs
jne
out
repnz
adc
jmp
mov
or
push
xchg
fcomi
mov
mov
and
movs
int3
mov
add
shr
mov
cs
cmp
fwait
add
aam
dec
sbb
sub
xchg
mov
and
adc
jnp
jo
jbe
outs
pop
push
xchg
add
push
pop
(bad)
sub
pushf
xchg
mov
pop
mov
mov
clc
push
inc
adc
sub
cwde
xchg
(bad)
mov
dec
mov
add
sub
dec
jmp
call
add
cld
(bad)
xlat
push
jge
(bad)
mov
popf
ins
pusha
pop
fst
dec
pop
neg
dec
and
sbb
add
mov
cmp
push
mov
stc
push
shl
enter
(bad)
dec
pop
cmps
inc
lahf
out
add
sar
lods
push
xchg
push
xchg
inc
cmps
clc
mov
cld
ror
adc
cmp
ja
xchg
in
mov
inc
jmp
xor
std
mov
sub
neg
jmp
rcl
or
fs
inc
and
fs
jo
outs
icebp
mov
ins
add
test
popa
ror
test
jo
or
cmp
movs
loopne
push
mov
in
mov
sbb
cli
leave
ss
mov
(bad)
jnp
cld
clc
nop
xchg
add
dec
retf
jne
mov
les
sbb
jmp
pushf
dec
mov
add
sahf
scas
push
push
out
out
xor
push
inc
loop
xchg
push
sahf
cmc
lahf
nop
aas
mov
aam
dec
fnstenv
add
cmps
dec
xor
pushf
sbb
jg
inc
ins
imul
and
and
dec
pushf
shl
mov
cmp
imul
or
xchg
or
addr16
mov
dec
xchg
retf
imul
push
inc
mov
pop
xchg
adc
xor
das
jo
shl
jmp
scas
adc
cwde
adc
mov
shl
arpl
cli
jmp
clc
fstp
xor
pop
bound
cdq
cmps
push
push
outs
or
dec
xor
push
cld
xor
cwde
pmulhw
pushf
sub
(bad)
dec
cmp
and
lea
dec
and
fmul
sub
aaa
push
jae
ret
inc
xor
mov
inc
scas
push
cli
xchg
cmps
in
lock
or
inc
enter
fs
xchg
enter
ss
in
cmp
test
push
fsubr
clc
fs
xchg
adc
pop
in
jne
xor
je
xchg
pop
fmul
pop
in
or
loop
jb
xchg
call
fstp
adc
push
retf
cmps
mov
inc
inc
(bad)
inc
aad
pop
pusha
fldcw
mov
add
lods
cli
xor
adc
ret
mov
aad
ret
scas
sbb
rcl
jns
or
lahf
ret
pop
xchg
xor
mov
dec
push
xchg
pop
rcr
mov
jno
retf
xchg
mov
pop
add
arpl
test
fdivr
je
mov
fs
mov
aas
es
sbb
sbb
adc
mov
mov
dec
mov
cmc
mov
test
dec
and
fsubr
pop
(bad)
ss
add
clc
rcr
mov
imul
jp
cmp
mov
cmps
es
mov
stc
adc
out
retf
and
pop
xchg
push
jb
stos
stos
lds
test
dec
std
and
xchg
mov
inc
repz
dec
dec
dec
and
adc
fisttp
int3
out
outs
icebp
clc
sbb
push
jmp
add
sbb
inc
outs
enter
jae
cdq
daa
lahf
mov
push
xchg
inc
jecxz
jle
push
adc
dec
dec
sahf
xchg
inc
inc
lahf
jno
cmp
into
sub
frstor
and
xor
sub
xchg
idiv
jp
push
dec
mov
cld
pop
mov
pop
imul
popa
or
mov
add
and
jnp
cdq
lods
scas
aas
cmp
in
aam
adc
bound
cmp
movs
aad
mov
push
mov
pop
cmp
push
daa
xchg
dec
dec
jo
mov
sub
frstor
in
sub
jbe
fistp
pushf
dec
je
mov
ret
xchg
sub
pop
lahf
retf
fild
pop
pop
or
jle
add
ins
xchg
pop
adc
add
or
(bad)
out
and
ins
jmp
sub
inc
sub
into
dec
sub
or
scas
(bad)
arpl
test
retf
sbb
push
clc
cld
cmc
bound
xchg
not
mov
jns
loop
hlt
shr
mov
(bad)
add
dec
push
mov
es
mov
loopne
adc
inc
mov
movs
push
and
mov
xor
fmul
sbb
jle
pop
push
icebp
cld
xor
out
daa
cld
or
sub
test
sub
mov
out
daa
fbstp
call
test
enter
in
push
ret
adc
mov
push
jne
sub
mov
xor
repz
mov
push
cmps
call
mov
adc
(bad)
push
inc
xlat
xchg
xchg
xchg
xor
enter
ss
sbb
pop
add
pop
push
jne
jmp
xor
cwde
loope
fwait
push
xor
xchg
cmp
or
popa
dec
lock
outs
fstp
mov
pop
movs
sahf
dec
pop
jmp
(bad)
jp
jmp
(bad)
push
cmc
xor
mov
push
adc
jge
loope
mov
cmc
fucom
jb
lods
sbb
lock
ret
mov
scas
pop
seta
je
push
sti
add
gs
sahf
push
mov
mov
add
sbb
gs
mov
sahf
jnp
into
outs
dec
xchg
jmp
mov
jp
add
aaa
jno
jecxz
ins
rol
xor
push
add
lea
test
retf
push
test
scas
das
jo
js
hlt
and
fwait
mov
test
mul
add
stos
inc
dec
jbe
push
jno
ja
inc
cwde
sysenter
and
xlat
or
out
xor
not
sbb
mov
(bad)
dec
cmc
cmp
mov
mov
inc
test
fadd
cs
fstp
cmp
mov
pop
mov
ja
sub
push
pop
lahf
out
sbb
xchg
neg
pop
pop
mov
aad
lea
clc
jo
or
and
jae
or
movs
imul
add
xchg
dec
popf
stc
or
jp
xchg
lods
jo
lods
jge
aad
out
stos
xor
out
push
pop
out
iret
out
movlps
repz
cmps
hlt
pop
call
hlt
xor
xlat
les
xor
cmps
xchg
dec
add
adc
test
mov
jne
sbb
cmp
popf
fist
pop
adc
fisubr
icebp
push
push
and
std
push
rcl
jmp
fmul
push
add
xchg
test
xor
mov
in
pop
sahf
or
xchg
cmc
cdq
ja
inc
cmp
xchg
cmp
(bad)
hlt
jnp
add
cmps
call
and
inc
loop
neg
ds
add
int3
ficom
ss
fsubr
xor
push
xor
icebp
fdivr
jg
sbb
nop
xor
xor
(bad)
aam
push
and
or
jns
cmp
adc
jne
sub
cld
cmp
pop
dec
mov
out
shl
pop
inc
dec
add
sbb
daa
add
push
add
add
or
int
jae
in
fmul
sbb
icebp
adc
push
pop
add
fs
call
mov
call
dec
xchg
in
cmp
jno
in
call
mov
dec
add
int
xchg
mov
ja
rcr
repz
lahf
mov
mov
xchg
je
test
out
fisttp
(bad)
(bad)
mov
cmp
stos
pusha
inc
addr16
out
out
inc
xchg
jno
or
sbb
and
es
add
sbb
adc
mov
sub
das
(bad)
(bad)
shr
dec
lahf
div
cmp
jnp
mov
icebp
adc
mov
xor
dec
or
mov
add
mov
inc
cmp
sub
ins
cmc
lea
cdq
adc
xchg
enter
or
dec
jp
les
ins
enter
mov
cli
out
call
sub
mov
aas
xchg
fs
mov
cdq
imul
addr16
cmp
sub
xchg
mov
into
mov
fadd
xor
xor
adc
(bad)
pop
loopne
and
jl
aad
jae
xor
loope
mov
(bad)
xchg
adc
outs
(bad)
sub
mov
jb
xchg
lds
js
jnp
mov
scas
loop
sub
int
outs
mov
fist
repnz
movs
and
adc
mov
(bad)
sub
leave
cdq
ret
push
fst
mov
fist
inc
jge
cld
push
pop
adc
cmc
into
fcom
jg
and
dec
or
out
in
sti
in
cmps
dec
adc
fcmovu
fsubr
fisub
popf
fild
in
(bad)
sub
pop
jmp
imul
leave
test
inc
ins
lods
mov
mov
add
sbb
add
fsub
int
fsub
test
fwait
mov
pop
fwait
in
xchg
mov
sti
inc
mov
jo
mov
push
shl
scas
daa
cmp
and
jns
mov
sbb
adc
mov
jmp
push
dec
adc
xor
push
ret
push
iret
dec
or
sub
or
mov
pop
push
sbb
ins
out
xchg
call
xor
ins
mov
(bad)
outs
or
out
add
mov
neg
retf
add
push
add
xchg
mov
push
cmps
jnp
xchg
push
mov
mov
push
mov
mov
and
xlat
(bad)
jb
xchg
jae
or
inc
ins
xchg
iret
lea
std
inc
daa
(bad)
push
inc
ss
dec
jl
arpl
mov
stos
dec
add
movs
scas
not
jmp
call
and
lods
inc
aam
out
gs
ret
mul
mov
call
sub
mov
mov
icebp
pop
ror
clc
jb
lods
xchg
cdq
xor
push
ss
(bad)
call
clc
add
push
popa
mov
jmp
mov
fbld
inc
xchg
jmp
sub
xor
mov
add
cmps
loopne
rol
dec
pop
out
repz
push
out
sbb
add
xlat
cs
xchg
or
push
push
ficomp
and
pop
pop
fwait
enter
sub
mov
mov
cmp
cdq
aad
xlat
cwde
jnp
pushf
pop
fisub
fsub
sub
clc
or
cmp
test
dec
sub
dec
mov
pop
mov
inc
dec
nop
pop
jo
loope
mov
cmp
xor
mov
cmc
and
test
pop
hlt
retf
ins
outs
jne
jno
daa
cdq
daa
adc
fisub
aam
pop
and
mov
shl
xchg
push
mov
xchg
retf
mov
adc
in
jne
fcomp
cmp
ret
call
out
jbe
shl
cmp
ficom
ds
cmp
or
mov
(bad)
xchg
mov
in
in
pop
fadd
jmp
loopne
mov
or
or
loopne
and
shl
adc
adc
pop
xchg
fisubr
repz
movs
retf
mov
cmc
(bad)
sub
fs
sbb
not
stos
jns
(bad)
pop
bnd
nop
dec
cmps
dec
fwait
xchg
xor
(bad)
sqrtps
or
cmps
retf
sahf
out
pop
les
test
cmp
sbb
mov
mov
jp
pop
sbb
add
sub
mov
xchg
jbe
dec
mov
leave
xor
push
mov
mov
add
cmp
ins
mov
imul
(bad)
mov
(bad)
mov
push
jl
dec
cmc
ins
inc
dec
or
arpl
sbb
cmp
fisttp
pusha
mov
push
aas
pop
lahf
and
xchg
ss
jle
inc
mov
push
jnp
pop
adc
or
pop
int
dec
repnz
jle
hlt
mov
xor
in
push
cmp
jbe
lahf
aad
push
push
add
or
adc
pop
es
mov
inc
lea
xchg
jno
pop
jmp
mov
mov
jge
add
arpl
(bad)
std
cmp
xor
dec
imul
or
mov
ret
mov
psrlq
mov
out
mov
mov
cs
sub
inc
adc
in
or
scas
in
stc
mov
jmp
pop
(bad)
pop
mov
xchg
sbb
test
add
ja
jmp
jg
xor
lods
mov
push
and
outs
mov
out
sahf
sbb
(bad)
fcom
fidivr
scas
fcmovnb
into
xor
dec
lods
push
imul
rcr
ficomp
aam
sahf
stc
stos
ds
inc
push
dec
mov
ja
jecxz
movs
das
cmc
ds
js
sub
ins
ror
loop
sbb
in
in
cmps
int3
ins
ror
lea
adc
test
adc
sahf
adc
push
ds
sbb
test
inc
std
inc
dec
and
mov
mov
std
jg
mov
sar
ret
xchg
adc
or
ss
push
cmc
neg
clc
inc
int3
jo
test
xchg
loop
ins
cmp
daa
mov
in
clc
xor
pop
les
fwait
cmps
mov
pop
div
cmp
imul
cmp
adc
mov
(bad)
cmps
or
push
js
punpcklwd
fistp
jmp
ins
dec
inc
sar
cmp
add
data16
jne
fiadd
push
add
in
push
jmp
xor
mov
sti
jmp
dec
or
add
push
ss
movs
pop
and
ret
sbb
std
lods
pop
test
in
out
push
jge
push
aas
and
adc
adc
mov
stos
inc
or
mov
in
inc
pop
dec
cmps
rcl
shl
pop
mov
movs
les
dec
sbb
jns
cmp
pop
add
pop
sbb
inc
and
inc
arpl
mov
(bad)
arpl
or
xchg
out
inc
dec
or
cmp
dec
out
and
cmps
outs
imul
movs
shl
inc
aas
sub
jmp
or
mov
mov
das
loopne
jb
cld
mov
jg
mov
add
ds
adc
das
or
pusha
jmp
inc
and
push
push
fidivr
ins
or
sub
ins
adc
dec
(bad)
(bad)
jno
fisub
es
mov
mov
aas
cmp
sub
outs
dec
xor
jmp
aad
push
arpl
bound
or
mov
loope
add
stc
aad
push
push
cld
in
shl
xchg
daa
push
mov
xchg
dec
aas
clc
pop
dec
aam
push
mov
ss
lods
pop
inc
out
js
dec
pop
int
fst
sub
loop
fnstenv
into
loop
push
jbe
inc
pop
aam
in
sub
or
mov
adc
(bad)
mov
sub
scas
pop
ss
stc
addr16
inc
push
mov
cmp
or
ss
imul
xor
mov
jo
or
cld
xlat
or
or
or
scas
inc
inc
dec
js
jl
ds
sar
mov
lods
cmp
sub
adc
sub
(bad)
aaa
push
leave
fwait
mov
cmc
les
mov
je
std
mov
dec
ss
cmp
pop
mov
imul
mov
in
popa
imul
sub
pop
and
sub
dec
pop
dec
f2xm1
repz
mov
int
je
bound
push
scas
ret
push
add
sbb
adc
ret
cmp
mov
lods
in
sub
inc
jg
leave
sub
daa
sahf
add
mov
add
ja
ss
fs
test
jmp
mov
jle
js
aas
sub
cdq
xor
in
cli
or
adc
dec
jns
jmp
push
push
mov
adc
shr
(bad)
xchg
pop
jns
cmp
call
mov
jnp
scas
pop
cmp
inc
(bad)
test
mov
pushf
nop
xor
sbb
push
mov
or
pop
mov
push
add
adc
test
inc
xor
fdiv
dec
mov
and
test
in
inc
xor
lahf
inc
std
jb
add
and
push
sahf
ror
cli
sti
xchg
daa
pop
push
cmp
push
aaa
push
data16
xchg
arpl
ds
sbb
jmp
cwde
in
xchg
push
cld
adc
inc
dec
xchg
cwde
sub
scas
adc
call
jns
mov
inc
dec
cdq
imul
adc
inc
fnstenv
jnp
dec
cld
lahf
iret
fs
xchg
cdq
dec
(bad)
dec
fldcw
pushf
push
add
or
push
mov
pop
ins
cdq
(bad)
mov
data16
sub
(bad)
or
mov
sub
sub
rcl
(bad)
(bad)
pop
sub
pushf
into
pop
pusha
int
xchg
sar
cmp
pop
add
pushf
and
ss
cdq
addr16
pop
push
mov
add
ret
or
mov
add
mov
repnz
loopne
dec
scas
leave
retf
sbb
or
(bad)
test
xor
mov
mov
pop
xchg
out
inc
int3
pop
mov
sbb
icebp
out
mov
ins
cmp
xchg
cmps
jge
sti
jl
add
dec
mov
dec
iret
test
adc
retf
test
pushf
lods
ja
pop
movs
push
xchg
mov
pop
fidiv
out
push
adc
out
pop
fs
cli
mov
lds
mov
outs
push
mov
jmp
ins
or
mov
in
into
lods
mov
xchg
dec
in
cmp
xchg
adc
jns
out
hlt
loope
jmp
(bad)
cmp
jmp
lea
xchg
fs
or
dec
retf
xor
out
shl
xor
jecxz
loope
xor
or
fistp
inc
bound
sub
shl
shl
fs
or
dec
sbb
lds
xchg
inc
cmps
cmp
pop
bound
bound
mov
xchg
mov
retf
daa
or
imul
mov
dec
adc
stc
cmp
pop
repnz
lock
fbstp
mov
sbb
or
sbb
cmps
hlt
mov
in
fdivr
fstp
mov
stc
out
adc
bound
ss
test
mov
mov
icebp
and
mov
fsubr
add
xchg
repz
(bad)
xor
add
neg
int3
stos
xchg
cmp
inc
fst
jg
mov
stc
adc
fdiv
fwait
jp
shr
clc
rcl
call
scas
xor
jle
fs
sub
lods
(bad)
jmp
call
jae
mov
inc
ror
lods
dec
cmp
or
inc
jae
mov
cmp
pop
lahf
call
shl
aam
push
xchg
popf
mov
dec
xchg
xor
hlt
xor
shl
mov
fwait
cld
js
xor
xor
mov
sti
and
inc
jae
xor
inc
stos
sub
mov
jno
addr16
out
arpl
inc
leave
cmp
push
adc
cmp
leave
cdq
mov
stc
xor
adc
push
gs
fmul
cmp
retf
stc
imul
mov
fwait
mov
in
jmp
fcom
push
push
pop
mov
push
mov
mov
xchg
sbb
mov
inc
mov
cmps
sub
sbb
idiv
inc
inc
sbb
fwait
jo
pop
jecxz
bound
scas
mov
imul
vandpd
repnz
out
movs
ret
neg
pusha
enter
ret
loopne
out
mov
mov
dec
inc
cmps
lods
movs
cs
cmp
xor
cmp
add
clc
inc
(bad)
jnp
mov
pusha
int
jb
mul
(bad)
out
push
enter
cmc
(bad)
inc
stc
push
push
dec
pop
(bad)
adc
sub
dec
adc
stos
cmp
mov
ins
jle
or
xchg
lods
jp
test
xchg
add
pop
nop
inc
dec
(bad)
mov
jns
stos
icebp
mov
int
pushf
mov
and
shl
sbb
out
cmp
mov
call
(bad)
mov
cmc
xchg
adc
(bad)
retf
pop
dec
mov
ins
sahf
fdivr
js
jno
sbb
pop
xor
mov
xchg
pop
adc
xchg
scas
les
lods
test
ins
cdq
out
jecxz
and
icebp
ins
jns
aas
cmps
(bad)
and
jnp
xchg
shl
mov
push
std
xor
je
inc
cs
sahf
sbb
push
icebp
lods
mov
mov
ins
jg
xchg
stos
mov
add
arpl
addr16
retf
xchg
cmp
(bad)
push
shl
pop
pusha
pushf
stos
xchg
or
sub
jne
mov
inc
mov
or
push
aaa
retf
push
movs
mov
or
cmp
gs
hlt
mov
fisttp
mov
mov
mov
inc
dec
xchg
(bad)
adc
sub
jbe
nop
ins
xchg
neg
sub
jmp
jae
(bad)
std
lea
ret
sub
clc
icebp
mov
xlat
mov
movs
mul
jnp
cmp
(bad)
lea
(bad)
leave
rol
pop
mov
cdq
rcr
fs
add
ds
mov
add
pusha
bnd
or
xchg
sub
shl
inc
adc
inc
arpl
sub
mov
mov
loopne
cmp
push
xor
pop
cmp
mov
loope
sbb
mov
scas
cmp
inc
cmp
in
mov
nop
or
cs
or
sub
mov
push
int3
jno
or
retf
stos
mov
push
rcl
mov
rcr
sub
iret
daa
mov
fdivr
xor
push
pop
mov
mov
test
xchg
pop
adc
call
pushf
leave
mov
pop
sbb
xchg
inc
adc
ficom
add
scas
cld
xor
mov
lock
add
ja
cmp
mov
dec
push
mov
jg
hlt
repnz
dec
inc
mov
sub
pop
retf
clc
mov
sbb
sbb
add
test
add
push
popf
inc
mov
mov
cli
jbe
lahf
mov
(bad)
test
push
(bad)
outs
out
sbb
daa
cli
fwait
inc
mov
call
mov
mov
(bad)
test
xor
jne
(bad)
cmps
(bad)
xor
js
pop
jae
add
xchg
dec
xor
and
add
or
test
inc
mov
or
cmp
pop
mov
or
scas
sbb
jno
sbb
jno
mov
or
int
dec
jno
and
jp
mov
jnp
fs
inc
xor
addr16
jns
ss
inc
out
daa
cmc
jo
mov
mov
push
push
or
mov
fwait
out
outs
sbb
and
mov
in
xchg
fcomp
sub
xor
dec
pop
cmp
std
and
fwait
sar
adc
enter
sbb
sbb
arpl
xchg
and
xor
jge
aad
call
inc
pusha
and
sub
outs
pop
ja
mov
loop
(bad)
fisttp
aam
mov
lods
lahf
and
xor
test
mov
add
out
inc
pop
imul
xor
pop
das
test
shr
and
xchg
movs
mov
mov
push
imul
loope
mov
pop
(bad)
cmp
js
dec
stos
movs
or
pop
adc
ja
call
pop
outs
mov
adc
jbe
loop
mov
mov
mov
nop
(bad)
outs
mov
test
jb
or
into
xchg
cmps
icebp
adc
fistp
mov
cdq
mov
sub
adc
outs
pop
repz
enter
inc
in
pop
inc
call
ficom
push
push
rcl
sti
mov
sbb
arpl
and
lods
adc
xchg
pop
jae
lahf
in
stc
adc
icebp
ss
jnp
mov
adc
iret
aad
adc
loope
mov
cmp
bound
sbb
or
xchg
xchg
lock
fistp
imul
xlat
dec
xor
and
mov
adc
sbb
xchg
and
pop
mov
movs
loope
xchg
aaa
shr
(bad)
sub
into
bound
xchg
sub
pop
in
pusha
retf
ret
rcr
out
scas
mov
mov
and
sub
mov
out
ins
add
jg
imul
mov
pop
loope
and
jne
sahf
popf
lods
shl
push
fs
and
(bad)
mov
test
ror
mov
dec
test
xrelease
inc
dec
inc
mov
dec
into
sbb
ss
cmp
pop
(bad)
aad
pop
aad
les
jbe
mov
cmp
cmp
push
fwait
imul
and
cmp
data16
and
or
mov
or
pusha
in
aam
sub
imul
mov
or
jne
jno
and
sbb
dec
in
(bad)
dec
jle
outs
push
(bad)
mov
call
fsub
inc
cmp
cs
pop
add
dec
mov
or
xor
loop
in
push
xchg
mul
stos
out
js
or
(bad)
jmp
and
rol
das
jg
sub
cmp
xlat
cmc
icebp
retf
call
mov
xbegin
pop
inc
mov
pop
shl
inc
or
push
lds
or
in
add
xor
rcl
or
sbb
and
ret
mov
push
sahf
push
or
pop
popf
or
div
ins
pop
pop
push
xor
dec
adc
push
or
jg
cmp
jmp
and
popa
jge
dec
fwait
jnp
fcom
or
mov
jne
xor
xlat
xor
xchg
or
mov
jnp
adc
or
adc
and
aas
dec
enter
jnp
imul
in
stos
pop
xchg
cdq
(bad)
cmp
jmp
inc
fsubr
fdivr
popa
(bad)
mov
push
add
mov
adc
mov
jbe
inc
aas
ins
out
lods
or
loope
sub
mov
cs
mov
fcomp
pop
cmp
das
es
push
and
mov
or
jmp
(bad)
rol
std
jne
dec
inc
out
stos
cwde
movs
pop
vcvtps2pd
out
inc
mov
dec
iret
pop
cld
and
push
rcr
fdivp
xchg
jno
mov
mov
frstor
cwde
std
xchg
and
mov
mov
push
push
fcmove
sbb
fwait
imul
mov
pop
enter
cwde
sahf
sti
aam
pop
push
mov
(bad)
jl
nop
jmp
cmps
push
mov
hlt
bound
sbb
stc
add
jle
sub
cli
mov
pop
or
faddp
pop
mov
stos
loopne
jbe
mov
in
fcmove
mov
les
addr16
sbb
rcl
shr
in
adc
and
sahf
xor
pop
cmp
cmp
test
mov
call
out
jae
cmp
xchg
xor
leave
repnz
jge
retf
inc
sbb
outs
les
cmp
mov
cmp
inc
sbb
rcr
imul
mov
inc
fsubr
xchg
or
fs
ja
and
push
adc
hlt
and
pop
xor
loop
shl
sbb
ret
inc
es
dec
ds
shl
mov
adc
dec
ret
aad
mov
or
jl
jo
mov
add
mov
out
cmps
div
jmp
das
scas
push
dec
repnz
fcmovbe
cmp
lea
lods
jno
and
inc
ja
fdiv
(bad)
push
xlat
test
cmp
lods
mov
push
(bad)
in
mov
push
xor
js
cwde
outs
mov
add
xor
retf
sbb
push
pop
nop
test
mov
nop
pop
mov
inc
mov
(bad)
lock
xchg
ins
stc
sub
int
loope
sbb
in
jne
inc
aad
sbb
in
pop
inc
out
jl
dec
daa
fs
xor
or
les
pop
add
jmp
pop
cli
mov
movs
movs
cmp
xor
les
rcr
loope
pop
cmp
outs
pop
retf
sbb
or
shl
jmp
call
push
mov
add
std
mov
jns
mov
call
push
pop
ja
(bad)
push
pop
and
retf
sub
enter
jl
(bad)
push
retf
lds
mov
push
mov
les
test
xchg
cmp
mov
clc
sub
dec
mov
jle
mov
loopne
xor
sub
and
pop
push
scas
lahf
ret
push
add
les
or
sbb
mov
sbb
cmps
test
pop
mov
into
pop
xchg
adc
push
clc
mov
(bad)
js
mov
mov
sbb
cld
lahf
sar
jo
adc
xchg
std
push
sbb
inc
or
(bad)
sub
nop
xchg
adc
enter
jg
outs
jne
xor
or
in
push
popf
dec
pop
cdq
dec
pusha
hlt
push
ret
clc
mov
stos
pop
or
jg
push
mov
xchg
jmp
ds
ins
fcmovnb
pop
cmp
lods
jle
mov
ret
popa
dec
jle
dec
pop
int3
cmc
dec
cmp
or
test
and
ds
mov
int3
xchg
sbb
imul
in
sub
(bad)
lock
push
cs
and
call
dec
push
jle
fcomp
add
into
not
mov
scas
mov
adc
(bad)
icebp
jmp
or
adc
ins
pop
ss
cmp
add
in
mov
in
nop
xchg
mov
cmp
cmp
sub
and
es
out
ss
aad
mov
es
in
sbb
in
out
dec
pop
in
test
and
popf
ja
and
xchg
and
and
popa
stos
xchg
xchg
fwait
and
push
in
pop
or
mov
jb
mov
adc
pop
add
neg
add
retf
(bad)
pop
retf
pop
je
adc
dec
ret
xchg
sbb
jbe
xchg
mov
adc
or
sub
xlat
cmp
imul
jae
xor
mov
push
int
aaa
inc
leave
xor
inc
push
cmp
mov
sub
mov
jne
jnp
sub
loopne
clc
rcr
sbb
dec
shr
mov
test
fst
xchg
inc
xor
jb
out
fld
push
mov
mov
or
shl
fimul
arpl
xchg
xor
add
pop
mov
ror
xor
repz
js
std
arpl
sahf
mov
dec
sbb
sub
mov
cmc
sbb
hlt
repz
jl
shl
add
sub
mov
cdq
cmp
mov
pusha
aam
stos
or
lds
enter
inc
movs
loopne
fldl2e
shl
je
dec
(bad)
jnp
or
sub
leave
inc
ds
adc
ja
push
cmps
push
pushf
js
sbb
mov
xor
cmp
mov
cmps
clc
sti
sub
js
push
push
pop
pop
xlat
cmp
bound
stos
into
and
test
ss
out
sub
mov
mov
add
pop
lahf
pop
scas
dec
sub
lea
mov
xor
mov
ins
mov
in
sbb
sbb
mov
jp
shl
loope
call
stos
es
sbb
fcomp
jmp
jle
daa
sub
bswap
popf
jg
mov
iret
pop
shr
xchg
xchg
mov
test
adc
retf
mov
test
into
(bad)
movs
jmp
push
cwde
add
xor
stos
bound
xchg
xchg
and
jmp
addr16
les
mov
ret
pop
xor
or
dec
hlt
sub
stc
push
fcmovnb
jbe
lods
xchg
jae
dec
pusha
(bad)
fsub
inc
jnp
and
mov
shl
push
xlat
pusha
or
scas
or
adc
lock
rcl
add
inc
cmps
outs
mov
lods
jl
aaa
lea
jl
arpl
jno
sbb
in
je
dec
sahf
(bad)
out
mov
lea
jmp
imul
out
scas
rcr
scas
cmp
pop
xchg
push
in
push
push
jno
jbe
dec
mov
out
or
les
push
xchg
dec
jmp
nop
leave
stos
sbb
jae
inc
loopne
mov
call
stc
adc
loope
popa
add
fbld
ret
arpl
out
cmps
sar
addr16
repnz
call
popa
jno
mov
leave
(bad)
scas
cmp
mov
fild
popf
pop
add
cmp
push
int3
cli
int3
jmp
cdq
push
inc
dec
push
sub
and
(bad)
xchg
jmp
loopne
mov
nop
bound
jmp
rcr
or
bnd
sub
fwait
repnz
ret
call
test
cld
or
sar
mov
call
loopne
movs
out
movs
jle
xchg
sub
push
push
stos
pop
and
jmp
xlat
xchg
adc
mov
sub
lds
xchg
and
rcr
mov
in
cld
ss
lahf
inc
cmp
and
das
popf
(bad)
scas
in
cmp
mov
jo
sbb
in
cmps
pop
mov
push
shr
popf
sti
fistp
and
scas
outs
mov
call
outs
add
jb
pop
mov
in
ror
sbb
hlt
int
pop
and
mov
xchg
sub
xchg
cmp
adc
(bad)
hlt
dec
mov
push
fsubr
fsubr
jl
dec
cmps
mov
leave
cwde
dec
push
retf
xor
aam
retf
and
rol
lea
shr
jns
stos
jo
imul
adc
push
mov
cwde
add
pop
ret
retf
xor
cmp
js
addr16
outs
jae
jle
popa
jnp
outs
stos
ret
cmp
or
push
pop
in
adc
inc
scas
aaa
pop
clc
jo
sub
inc
addr16
test
mov
dec
xor
cdq
pop
mov
mov
mov
sti
mov
imul
lock
inc
lea
test
push
push
add
inc
dec
iret
fisubr
pop
call
mov
imul
std
ins
and
xor
rol
cdq
sbb
adc
ins
push
and
stos
lock
inc
popf
xor
jo
add
cmps
push
mov
inc
adc
aas
dec
sub
jae
lods
mov
mov
or
fsubr
je
mov
adc
lahf
out
fisubr
inc
(bad)
cmp
out
push
pusha
scas
pop
pop
sbb
and
popa
jg
ss
or
cmp
xor
int
push
mov
call
loop
inc
out
mov
nop
push
push
or
ret
pop
xor
adc
push
or
jmp
add
jge
in
mov
enter
and
adc
ret
out
push
ror
jecxz
adc
mov
es
arpl
push
mov
loope
sub
pushf
sub
sub
xchg
scas
movs
cmp
mov
dec
or
popa
jne
jge
pusha
(bad)
neg
pop
mov
or
aas
cwde
jbe
xchg
(bad)
cdq
pop
jmp
cmc
int3
pop
outs
pusha
inc
inc
inc
stc
or
fbstp
lods
sar
cmps
imul
jg
in
popf
mov
xlat
and
packsswb
add
repnz
push
(bad)
xchg
jle
hlt
push
outs
push
mov
adc
neg
addr16
(bad)
dec
adc
(bad)
js
pop
or
enter
add
jns
sbb
and
dec
xchg
mov
int
ficomp
inc
cmp
xchg
std
fistp
and
dec
dec
es
mov
mov
cld
xchg
jne
pop
xchg
cmps
clc
push
pushf
ins
sub
lock
icebp
pop
shl
and
or
cmps
sub
cdq
push
dec
(bad)
test
pop
adc
push
adc
sbb
cli
idiv
(bad)
adc
adc
mov
jg
test
xor
sbb
mov
mov
adc
mov
mov
aad
push
pop
call
retf
pop
test
and
adc
mov
xchg
ffree
xchg
mov
adc
jo
repnz
in
hlt
push
int
bound
sar
add
and
dec
shl
mov
push
cmps
dec
dec
cmp
fisub
xlat
push
sti
xor
and
sbb
in
mov
movs
jb
xor
loop
dec
(bad)
cmp
pop
mov
xchg
(bad)
pop
add
xor
pop
xchg
iretw
pop
pop
xor
mov
mov
push
ins
into
div
jo
into
clc
adc
jecxz
lahf
(bad)
in
and
mov
popf
mov
jno
pop
loop
ret
(bad)
not
shl
(bad)
mov
add
xor
xchg
push
or
mov
cmp
dec
pop
push
outs
je
or
jno
je
inc
dec
out
js
sbb
call
jo
sub
xlat
sar
lea
and
dec
cdq
sar
(bad)
call
sub
loope
gs
ds
test
repz
and
in
outs
test
cmp
cmp
xlat
mov
add
pminub
cmp
jb
pop
out
xlat
lods
rcr
(bad)
mov
push
test
mov
jne
int
imul
dec
in
loopne
ror
inc
out
mov
js
sbb
cmp
into
jle
fmul
xor
mov
cmp
icebp
int
pop
test
inc
(bad)
call
retf
push
push
or
mov
nop
lods
popf
cmp
push
fcomp
sbb
push
jnp
inc
aaa
cmps
inc
ja
stos
inc
push
ins
cmc
popf
jg
xchg
mov
mov
cld
or
ss
es
les
outs
and
out
pop
sti
push
sub
jb
add
sbb
repz
push
mov
cdq
int3
add
adc
call
adc
pop
xor
retf
mov
sub
loop
pusha
popa
in
ret
cmps
dec
and
cmp
imul
in
dec
es
not
mov
cmp
lods
xchg
lea
ret
ds
mov
dec
in
mov
add
mov
add
stos
jmp
mov
adc
lods
and
aad
and
(bad)
or
clc
mov
or
jb
mov
inc
cdq
dec
push
mov
cmp
sbb
pushaw
add
dec
ja
or
push
das
mov
adc
inc
daa
xor
pushf
mov
xor
scas
mov
jo
mov
xchg
or
jmp
fisttp
adc
mov
fsubr
push
sbb
out
gs
arpl
sub
cmp
inc
jecxz
mov
ss
fild
outs
and
jmp
mov
sub
add
lea
xchg
inc
cmp
cld
out
movs
adc
sub
fidiv
repz
ins
push
inc
ja
in
xchg
mov
fild
sub
pop
push
pop
mov
rcl
(bad)
jge
pop
lods
jmp
sub
rcr
ret
call
sub
out
out
sub
pop
mov
pop
or
add
sub
mov
or
adc
cmp
das
pop
jp
cmp
add
adc
repz
movs
xchg
dec
sbb
mov
cs
mov
and
jno
js
xchg
xchg
std
movs
fldenv
sbb
jno
jne
scas
out
jo
mov
inc
cmps
movs
push
cmps
cmp
push
stos
dec
dec
shr
cmp
shl
ss
mov
dec
aaa
add
inc
jmp
sub
ret
fidivr
int3
dec
(bad)
fist
sbb
dec
mov
mov
enter
jle
fs
movs
push
lock
jno
cmp
(bad)
mov
cmps
jmp
cmp
jmp
(bad)
xchg
outs
dec
shr
fwait
out
loop
jae
(bad)
(bad)
call
mov
mov
data16
push
ret
(bad)
ds
dec
mov
sti
push
or
das
aam
clc
fwait
(bad)
repnz
out
clc
aam
xchg
inc
out
std
pop
sahf
repnz
hlt
loop
dec
wrmsr
nop
mov
test
push
out
cmc
dec
push
mov
in
aad
mov
lods
mov
pop
shr
cmp
div
rol
fwait
std
outs
jo
call
sahf
fadd
dec
imul
mov
test
cld
pop
icebp
sbb
pop
popa
stc
dec
mov
js
xchg
inc
rcl
push
popa
inc
cmp
mov
loope
test
aam
mov
or
jmp
loope
int3
cbw
movs
cmp
fs
das
jae
mov
xchg
mov
lahf
cld
xor
(bad)
pusha
xchg
cld
dec
rcl
sbb
es
mov
loop
add
shr
or
test
aaa
aas
dec
pop
or
dec
mov
mov
or
or
cmp
fst
dec
icebp
or
mov
pop
js
test
xchg
call
jo
cmps
mov
and
adc
inc
adc
pop
sub
stc
mov
daa
fnstsw
sub
push
sbb
push
xchg
mov
imul
dec
push
sbb
in
mov
sbb
retf
and
lods
dec
push
jmp
jb
lds
out
mov
mov
mov
int
sar
mov
dec
clc
es
out
lods
fsub
mov
imul
nop
jge
clc
sti
push
test
ja
mov
cli
loopne
es
mov
int3
std
leave
jnp
mov
jb
mov
xchg
rol
(bad)
cs
xchg
add
ins
loopne
xor
sbb
lahf
sar
shl
cwde
stos
push
sub
xchg
cld
(bad)
shl
cmp
pusha
ror
sahf
push
mov
cmp
les
mov
sub
or
aad
sub
mov
into
mov
and
call
(bad)
js
jns
lods
nop
dec
pop
jno
pusha
das
movs
add
mov
jle
pushf
add
(bad)
aad
(bad)
rcl
dec
out
sub
push
movs
xor
popf
imul
fimul
lods
(bad)
imul
pop
mov
xchg
add
dec
loope
xor
and
stos
imul
pop
fdivr
daa
les
adc
push
add
sub
mov
and
or
loopne
push
mov
imul
(bad)
mov
push
sbb
adc
icebp
popa
jecxz
jne
test
xchg
mov
loope
sub
pop
or
cmp
ss
mov
push
pop
inc
mov
push
int3
add
jns
and
cmc
push
push
aaa
pop
or
adc
pop
sbb
dec
mov
add
and
jns
mov
jl
mov
xchg
loop
ins
pop
jnp
popf
fisubr
push
in
rcl
ja
mov
pushf
push
dec
movs
rcr
mov
repnz
outs
je
dec
sub
aam
sbb
lods
xchg
sbb
or
aaa
jl
and
mov
dec
jb
stos
mov
arpl
adc
jg
add
jnp
pop
scas
or
or
pop
cdq
aas
(bad)
(bad)
fld
cs
rcl
add
adc
push
cdq
nop
out
push
pop
retf
div
mov
push
in
fimul
(bad)
fsubr
aam
sub
mov
sbb
cwde
scas
aaa
jecxz
sbb
addr16
not
(bad)
jmp
inc
cld
mov
cmp
cmps
adc
or
fs
cdq
jne
push
imul
mov
xchg
int3
addr16
call
cmp
(bad)
xor
fild
pop
cld
mov
jns
jb
repnz
cli
lea
leave
ret
jo
jo
inc
mov
jb
test
ret
lods
push
push
call
xor
push
(bad)
call
xchg
sub
jmp
pop
retf
push
mov
jno
pop
push
jl
or
jnp
mov
push
jge
retf
inc
fisub
push
mov
imul
stc
add
sub
not
cmps
fnsave
enter
cdq
cmp
push
dec
sub
movs
loope
in
pop
test
mov
les
push
sbb
mov
cmps
adc
inc
outs
push
rcr
jne
mov
xchg
inc
ficom
popa
(bad)
imul
imul
push
push
enter
xchg
jmp
ror
adc
jmp
pop
push
and
xchg
pop
lds
call
add
xor
stos
inc
(bad)
mov
xor
cmps
in
(bad)
inc
xchg
pop
ja
add
xchg
mov
jmp
or
scas
fdiv
nop
jmp
jo
sahf
jle
lods
inc
adc
fld
out
or
scas
inc
(bad)
jmp
retf
jns
inc
arpl
xchg
ret
pop
cmp
mov
push
xchg
rcl
ret
jp
cmp
pushf
loope
cmps
pop
pop
and
in
cmp
stos
push
sbb
repnz
stos
dec
inc
dec
dec
mov
cdq
imul
aam
sub
retf
xchg
mov
or
movs
mov
ret
jae
shr
adc
rcr
sub
bound
jne
rol
jmp
nop
xor
leave
pop
adc
cdq
lds
jo
sbb
xchg
lock
sub
xor
xor
cwde
fnstenv
dec
cli
aam
pop
mov
push
cli
mov
mov
sub
jg
outs
sub
push
add
sbb
out
mov
repnz
sub
inc
into
popf
imul
movs
push
je
fldenv
inc
xchg
fs
pop
dec
push
popa
and
cld
cmp
push
xchg
call
js
sbb
lods
add
adc
jmp
movs
mov
hlt
bound
cmc
or
repnz
leave
jne
pop
iret
dec
out
mov
adc
std
cmp
xchg
mov
fwait
jbe
aad
sub
add
std
inc
sbb
xchg
fst
push
xchg
aad
es
cmp
iret
jge
inc
dec
pop
dec
sahf
lods
scas
fsub
add
and
int3
lock
mov
(bad)
sti
xor
mov
jne
or
xchg
xchg
sti
mov
adc
data16
div
lea
mov
xchg
sbb
jg
rcr
or
out
or
ret
iret
inc
jo
out
daa
sub
in
(bad)
outs
sub
jae
cmp
or
in
push
dec
pop
cmp
dec
mov
cs
ret
ins
aas
add
mov
mov
inc
jge
jg
dec
inc
sbb
lods
fwait
rcl
mov
adc
popa
mul
jae
sahf
cmc
sub
cmp
sar
inc
ret
push
fs
(bad)
xor
ret
and
add
or
call
xor
ja
pusha
add
pop
fcmovnbe
fdivr
and
inc
retf
sub
rol
shl
scas
(bad)
(bad)
(bad)
nop
mov
addr16
fisttp
std
hlt
ss
jbe
test
je
mov
jnp
push
lahf
cdq
inc
sahf
xchg
dec
push
fs
mov
mov
(bad)
adc
out
scas
sbb
mov
mov
pop
xor
push
dec
(bad)
jnp
shr
outs
std
adc
clc
pop
hlt
and
dec
lock
and
in
and
cmps
outs
sbb
mov
repnz
movs
enter
sbb
ret
stos
add
adc
lods
dec
(bad)
iret
jns
mov
test
scas
cmps
push
sahf
and
in
rcr
xchg
sbb
push
sub
hlt
call
enter
adc
inc
or
int3
daa
(bad)
xchg
stos
sbb
std
sbb
test
pop
xor
inc
call
stos
sub
push
pop
int
aad
rcl
push
cs
out
ret
in
xor
lea
dec
bound
mov
ret
pop
pop
js
mov
in
xchg
add
add
into
enter
jae
mov
dec
push
xchg
and
cmp
jmp
test
mov
(bad)
mov
ror
repnz
mov
dec
mov
inc
ja
popa
iret
int3
fwait
xchg
pop
pop
adc
or
js
js
xor
or
sub
in
push
sbb
push
xor
mov
sub
mov
stos
jne
mov
mov
and
ror
add
out
dec
and
or
cmp
fnstsw
sub
iret
dec
inc
pop
loope
mov
retf
xchg
sbb
dec
ret
repz
or
popa
and
pop
sub
jp
ins
outs
xchg
xchg
ins
cmp
arpl
pop
sahf
scas
jl
sub
arpl
mov
sbb
or
or
xchg
les
cmp
mul
xchg
xor
dec
ja
dec
push
sub
xchg
movs
jl
xchg
dec
(bad)
jmp
and
outs
jb
pushf
adc
(bad)
jle
push
mov
mov
pop
cmp
cmp
out
dec
jp
xor
and
sbb
cmps
ja
jb
out
dec
pop
pop
mov
and
fcomp
push
dec
cmp
mov
in
sbb
push
das
imul
or
cli
enter
scas
push
cmp
mov
cdq
mov
jne
mov
dec
leave
bound
outs
lds
jae
jo
out
mov
stc
out
cmc
outs
dec
adc
int3
ins
sub
(bad)
retw
mov
popa
fdivr
push
add
cmps
mov
cmp
dec
xchg
clc
jle
icebp
mov
xchg
mov
xchg
push
push
fsubr
xchg
dec
ss
das
aas
outs
or
call
xor
sub
or
cmp
jmp
dec
stc
unpcklps
retf
push
dec
pushf
xor
add
lds
stos
xchg
jg
jmp
push
call
fild
fild
adc
adc
cmp
xchg
dec
cmp
xchg
mov
cs
ins
push
inc
sbb
pusha
cmp
cdq
inc
mov
mov
mov
fidiv
(bad)
mov
jle
aad
fldenv
or
(bad)
shr
fwait
xchg
ss
push
adc
adc
dec
inc
ja
fnstsw
js
jmp
les
repnz
js
mov
push
stos
dec
mov
rcl
sub
mov
inc
call
inc
movs
adc
retf
mov
hlt
xor
das
add
add
pop
xlat
(bad)
call
out
sbb
idiv
jmp
inc
data16
jecxz
or
call
mov
popf
das
test
sbb
adc
jge
jns
dec
repnz
cmps
iret
popf
cmps
ins
clc
push
cmp
call
aad
pushf
inc
push
jmp
sub
pop
lods
pop
outs
(bad)
mov
mov
fbstp
fiadd
movs
(bad)
fcmovnb
js
add
and
push
out
aas
test
dec
cmp
test
loope
popf
jl
mov
jno
sub
dec
mov
cmps
outs
in
or
cwde
sbb
mov
sub
dec
push
push
iret
mov
mov
jae
mov
in
jge
adc
adc
mov
mov
pop
loopne
pop
in
mov
jo
(bad)
jg
pop
scas
pop
lahf
das
iret
icebp
aaa
inc
inc
push
dec
gs
ins
leave
mov
push
and
adc
jg
push
sahf
fidiv
xor
add
sub
sbb
(bad)
call
imul
nop
ror
enter
sbb
jne
jo
out
pop
stc
pop
ret
and
stos
push
iret
sahf
pushf
rcl
and
sti
jecxz
ins
pop
add
aam
dec
(bad)
lods
pop
push
pop
(bad)
xchg
xchg
dec
inc
cmps
pop
(bad)
and
pop
retf
fild
xor
xor
sub
popa
xchg
retf
sar
fsubr
add
mov
ins
mov
mov
mov
sbb
icebp
mov
jecxz
xchg
icebp
and
pop
adc
enter
clc
cmp
cmp
sub
je
pop
cld
xchg
adc
sbb
in
int3
xor
repz
stos
adc
sar
jo
aas
fisub
fisttp
cld
comiss
dec
dec
add
mov
jge
scas
out
or
nop
fstp
fwait
cmp
jecxz
(bad)
xlat
mov
fsubr
jmp
add
push
sti
aaa
jae
inc
mov
mov
push
dec
pop
mov
sbb
sahf
push
inc
fistp
sub
test
push
cmps
(bad)
aas
push
cmp
pop
jge
mov
jge
adc
push
scas
jle
xchg
pop
cmp
sbb
pop
dec
mov
ins
fimul
test
sub
adc
sbb
gs
pusha
sub
retf
ja
xor
rol
or
cwde
xchg
in
mov
popa
in
add
inc
add
aas
cmp
test
push
push
and
scas
pop
arpl
add
fcmovnb
dec
aam
or
sub
imul
push
punpckhdq
push
ror
aad
pop
sbb
mov
popf
stc
push
jae
(bad)
(bad)
or
bound
cdq
sub
movs
(bad)
iret
mov
retf
popa
cmp
add
call
mov
push
mov
or
shl
jle
idiv
fnsave
fcomp
imul
out
adc
movs
fs
cmp
sub
xor
pop
cld
pop
sti
scas
stc
pop
add
cdq
push
xor
out
xlat
cmp
popf
fwait
and
sar
in
loope
adc
int3
leave
and
std
add
jae
or
and
pop
add
aam
adc
test
cmp
jnp
push
push
mov
push
icebp
and
add
into
jle
jl
int
ror
dec
mov
inc
es
push
iret
sub
jae
and
shl
mov
mov
sub
mov
cmp
mov
ja
popf
into
pop
push
xchg
and
mov
sahf
loopne
mov
pop
push
(bad)
jnp
pop
xlat
pop
mov
das
rcr
mov
cwde
bound
movs
jb
jo
in
adc
pusha
sbb
mov
in
add
ins
sahf
push
pop
dec
mov
aam
push
fsubr
dec
cld
xchg
leave
sbb
xor
jns
jmp
icebp
call
adc
fldcw
jo
fincstp
pusha
sub
or
jns
jp
xchg
int3
jg
add
sub
mov
push
push
cli
ins
or
push
xchg
mov
xchg
mov
mov
call
lock
mov
call
inc
adc
push
xchg
call
cmp
cli
es
dec
imul
push
dec
das
mov
(bad)
in
inc
daa
push
in
xchg
gs
lock
push
sbb
inc
out
inc
mov
popf
push
fdivr
sub
ret
jb
dec
js
fbld
repnz
xor
sub
mov
xchg
cs
add
sub
xchg
icebp
push
and
ins
push
mov
retf
mov
xchg
dec
pop
enter
cli
sahf
jl
mov
pushf
fistp
pushf
push
dec
out
movs
or
repz
and
repz
push
ror
cmps
or
outs
xor
pop
xchg
ficom
mov
in
fmul
in
ror
sbb
xor
ss
xchg
cmps
in
adc
movs
ret
cmc
cmovs
xchg
aas
ja
jecxz
pop
mov
gs
ds
aad
add
xlat
dec
call
cmp
mov
stc
cld
cmp
mov
in
sub
inc
daa
sbb
stos
jmp
inc
add
outs
mov
xchg
in
imul
mov
or
imul
out
call
inc
aas
jns
fbld
fld
arpl
in
inc
ds
ins
dec
mov
retf
fadd
(bad)
(bad)
dec
or
mov
add
aaa
inc
cmc
sbb
mov
js
or
loope
pop
push
mov
push
or
in
add
jns
add
mov
rcl
mov
call
lock
lods
jecxz
jmp
sub
xchg
mov
or
frstorw
sub
je
shl
lods
or
and
leave
adc
dec
rol
cmp
leave
mov
loope
xchg
test
xlat
mov
add
inc
sbb
js
mov
xchg
(bad)
and
mov
aam
push
clc
jmp
clc
idiv
aam
pop
in
dec
jno
retfw
cs
dec
jp
mov
adc
sub
push
and
and
dec
imul
jne
inc
adc
jmp
pop
unpckhps
push
add
mov
lock
scas
xlat
into
sub
dec
and
sbb
dec
retf
jmp
add
mov
loopne
and
add
inc
xchg
das
dec
dec
imul
and
scas
or
sti
cmp
mov
jnp
mov
adc
mov
jno
adc
aaa
cmp
xchg
leave
jno
or
xlat
dec
enter
sbb
stos
int3
daa
scas
enter
repz
pop
scas
jle
dec
cli
fcmovne
sbb
push
aad
jno
mov
retf
clc
jle
(bad)
aad
push
out
imul
sbb
scas
repz
and
sub
pop
das
jmp
jb
xchg
test
and
add
out
repz
or
jg
sahf
pusha
outs
mov
imul
shl
les
test
ficomp
add
mov
sbb
sbb
xchg
pop
jne
mov
mov
ds
stos
scas
mov
dec
cwde
nop
jle
test
cmovns
shr
mov
sbb
mov
push
ins
movs
test
mov
in
(bad)
ret
fbld
adc
jne
fcmove
inc
xchg
pop
jnp
and
sub
pop
cmp
ins
outs
in
cmp
test
pop
retf
arpl
push
bound
popf
sbb
icebp
jae
and
push
and
sbb
movs
push
jo
and
(bad)
mov
imul
jbe
mov
jo
mov
enter
push
mov
scas
cwde
dec
sbb
call
shr
jmp
push
push
sub
xchg
xor
jne
cwde
push
jne
or
push
push
cld
icebp
cli
push
cmp
in
jns
sbb
adc
and
mov
popf
mov
mov
outs
outs
dec
out
pop
int3
sbb
xor
fmul
shl
sub
inc
xchg
xchg
xor
sti
mov
dec
fadd
push
add
jp
xor
(bad)
pushf
mov
cmp
aaa
cmp
in
es
imul
inc
xor
(bad)
push
or
lahf
jmp
nop
xchg
(bad)
push
jl
and
lods
mov
movs
test
popf
lahf
push
cmp
or
pop
shl
ins
xlat
add
dec
and
and
jne
(bad)
out
cmp
inc
or
mov
add
aad
nop
int3
xor
jo
test
movs
addr16
push
js
aas
scas
mov
push
xchg
movs
pusha
iret
dec
out
ins
cli
shl
push
cmp
jb
and
mov
fwait
out
sbb
test
scas
fistp
cmp
and
push
enter
adc
shl
popf
jne
sub
add
js
mov
jns
inc
mov
shr
inc
std
(bad)
arpl
and
(bad)
in
int
sub
(bad)
mov
add
push
aas
dec
lods
adc
aas
pop
out
add
or
je
cmp
scas
mov
je
jno
or
lahf
shl
pop
adc
not
rcr
(bad)
out
xor
ret
js
push
mov
repnz
adc
mov
inc
ds
mov
dec
shr
cmp
movs
jns
pop
push
(bad)
ins
mov
fimul
jns
in
mov
xchg
add
xchg
scas
call
idiv
fs
xchg
daa
fdivr
in
mov
cmc
scas
inc
int3
cdq
dec
xor
add
outs
mov
lock
xchg
xchg
into
out
cmc
xor
jne
lds
cs
fdivr
int3
test
popa
repz
or
inc
ss
jg
sub
out
(bad)
xchg
add
xchg
dec
(bad)
adc
retf
mov
fwait
test
movs
inc
pop
rcl
and
xor
dec
mov
pop
pop
repz
adc
clc
lea
in
retf
mov
(bad)
pop
push
pop
adc
sbb
out
sbb
jo
sub
fsub
lods
repnz
daa
sbb
xchg
add
gs
xchg
repz
fcom
sub
add
(bad)
int
aas
mov
retf
outs
adc
jbe
cmp
mov
inc
inc
dec
jns
in
xchg
dec
mov
sub
out
push
pop
cmp
xchg
loop
pop
pop
pop
xor
pop
je
(bad)
loopne
mov
ins
test
sub
mov
sar
jbe
xchg
inc
inc
cmovo
cmp
dec
outs
xor
cmp
push
pop
iret
xchg
inc
xchg
mov
fistp
outs
add
jg
les
inc
sbb
xchg
push
sub
adc
fs
inc
(bad)
scas
and
and
adc
push
out
dec
repz
ror
cmp
adc
pop
adc
push
gs
mov
test
jge
movs
imul
fist
xor
(bad)
pop
push
imul
inc
std
cmc
push
push
clc
repnz
data16
daa
popa
or
shr
popf
fldl2e
out
cmp
xor
dec
mov
dec
mov
dec
rcl
movs
push
sub
or
imul
jmp
out
outs
int3
pushf
(bad)
popf
pop
cmp
xor
shr
pop
push
mov
cmp
pop
fwait
or
mov
mov
mov
push
(bad)
stc
daa
ss
push
stos
add
dec
imul
adc
dec
inc
stos
push
pop
jo
pop
fidivr
neg
js
add
cmps
jb
test
dec
test
cs
outs
mov
pop
xchg
xchg
in
jl
mov
leave
arpl
xor
fnstcw
inc
mov
ret
cmp
hlt
xor
cwde
jecxz
test
dec
fst
or
xchg
jge
cmc
mov
(bad)
and
cdq
std
inc
dec
lods
pushf
pop
xor
push
adc
retf
scas
les
push
addr16
lods
xchg
or
int3
shl
in
ja
cmps
not
in
xchg
xchg
inc
push
add
sbb
lahf
xlat
mov
stc
mov
das
scas
jne
les
push
aaa
cmps
mov
sti
jbe
and
(bad)
pop
sub
bound
retf
dec
pop
aam
xor
bound
sub
lock
loop
out
stc
xor
mov
in
mov
inc
sbb
in
test
cmp
dec
mov
push
mov
ja
stc
lahf
add
test
fisttp
and
leave
fldenv
ja
sysenter
mov
push
push
rcl
out
and
mov
ror
stos
out
test
push
fdivr
push
retf
stc
repnz
cmp
cmp
std
lds
aad
mov
jp
mov
jae
sub
xchg
into
sub
nop
mov
mov
dec
dec
or
ret
std
inc
cdq
mov
lock
fld
pop
mov
mov
cmp
xor
xlat
mov
mov
mov
sbb
in
sub
pushf
mov
inc
xor
movs
mov
push
jo
mov
(bad)
push
ret
loop
inc
fist
icebp
sbb
mov
pop
and
mov
mov
dec
cs
inc
icebp
jl
mov
ret
out
pusha
push
xor
mov
xor
outs
dec
jmp
add
arpl
repz
mov
jnp
fcomp
jmp
data16
out
fldlg2
scas
mov
fldenv
lods
loop
pop
test
xchg
adc
mov
clc
dec
dec
popf
and
mov
add
xchg
and
mov
pop
call
mov
pop
ret
pop
dec
in
xchg
inc
mov
sub
push
(bad)
sbb
lock
test
and
cmp
and
mov
mov
scas
mov
cld
mov
cmc
out
and
add
addr16
sub
stos
lahf
xor
out
je
retf
jmp
push
xor
mov
popf
xlat
mov
hlt
add
mov
out
mov
fiadd
test
mov
or
ret
cmps
mov
mov
xor
icebp
xchg
and
add
pop
xchg
xchg
cmps
and
mov
adc
mov
jb
jl
das
movs
pop
cmp
aaa
in
pop
sub
test
jns
ror
in
out
rcr
bound
fsub
push
sbb
push
add
bound
xor
inc
adc
pusha
sti
xchg
imul
outs
(bad)
cdq
lods
es
fs
fwait
mov
cmp
stc
iret
or
lock
mov
(bad)
dec
sbb
sub
xchg
cmp
(bad)
pop
dec
sbb
sub
xor
inc
ins
add
xor
(bad)
jl
jno
jl
shrd
sahf
mov
mov
xor
mov
fs
ss
movs
add
cwde
dec
(bad)
sub
jbe
and
xchg
dec
adc
mov
(bad)
fwait
inc
push
sub
lahf
jb
aaa
xchg
sub
jb
inc
push
add
pop
jb
out
pop
mov
dec
or
movs
mov
lahf
sub
sbb
hlt
imul
sub
test
jnp
leave
sbb
and
mov
mov
pusha
sbb
sti
shr
cld
stos
int
ret
dec
mov
scas
fs
(bad)
pop
or
and
fnstcw
mov
iret
shl
dec
in
es
jb
xchg
out
mov
in
out
gs
call
or
jg
push
fwait
sub
mov
fst
pop
cmp
sbb
adc
pop
retf
call
add
and
in
pop
jge
xchg
(bad)
adc
sti
push
fimul
mov
adc
cmp
fwait
xor
jmp
fidiv
ss
jl
push
sub
aad
shr
out
mov
hlt
mov
sbb
adc
push
lods
mov
imul
xchg
jnp
enter
add
pop
xchg
cld
jg
(bad)
fbstp
jmp
retf
xchg
inc
test
aam
js
sahf
mov
lock
xchg
lods
repz
push
cld
xlat
dec
lods
mov
retf
push
mov
(bad)
mov
into
stc
add
xor
out
nop
push
jnp
jae
aam
sar
dec
mov
sub
sub
sti
sub
ror
loop
pushf
mov
and
sahf
add
inc
in
push
outs
and
repnz
push
pop
push
pop
dec
shr
dec
add
loop
xchg
jo
push
mov
and
ds
fcomi
and
(bad)
cld
dec
ins
cmps
(bad)
lahf
or
enter
push
fnstcw
enter
mov
lahf
mov
aaa
inc
aam
ficom
out
sub
icebp
adc
push
xor
mov
lods
mov
mov
push
pop
push
hlt
arpl
cmp
sub
rcl
adc
mov
xor
adc
fwait
icebp
adc
cmp
fisub
sahf
ret
clc
dec
push
dec
loop
mov
lahf
adc
stos
add
stos
and
cdq
ja
cmp
inc
mov
std
xchg
mov
inc
sbb
in
ret
cmps
into
sub
or
shr
push
or
sbb
(bad)
std
scas
dec
push
xchg
cld
inc
mov
jns
sub
leave
fcom
repz
je
retf
sub
sub
call
xor
clc
cdq
and
push
dec
repnz
sub
mov
stos
das
cdq
out
adc
mov
ret
stos
jg
popf
sti
sub
hlt
(bad)
cmps
fwait
push
xor
jl
push
test
xchg
jecxz
or
mov
xor
lock
sub
(bad)
and
inc
or
pusha
sub
shr
mov
sbb
gs
jno
mov
mov
or
or
mov
mov
sbb
push
bound
pop
push
loope
push
shr
push
shl
or
push
cli
adc
or
or
retf
jmp
outs
mov
pop
xchg
jae
cs
cmp
arpl
ror
ror
out
jbe
or
xor
enter
mov
fwait
lea
in
and
pop
xchg
gs
fild
int
sub
lock
sbb
jae
(bad)
xor
lahf
add
out
jp
in
push
lock
cmp
cmp
fimul
inc
pop
js
int
ins
jle
es
xor
inc
mov
mov
adc
es
stos
lods
mov
outs
xchg
(bad)
out
call
int
cmp
mov
inc
mov
inc
mov
jp
leave
dec
or
call
call
xchg
aam
test
lods
fistp
(bad)
hlt
xchg
push
and
imul
dec
cli
push
jo
add
pop
mov
xor
aam
or
data16
or
jl
movs
movs
push
mov
imul
sbb
push
in
and
ficomp
push
jle
call
push
cs
and
es
(bad)
or
lods
ret
jl
retf
dec
adc
jl
push
ja
xor
pop
or
inc
inc
and
adc
rol
or
pop
mov
xor
adc
sub
add
or
jp
test
inc
stos
lods
mov
es
(bad)
cmp
sti
mov
xor
pop
sub
dec
jae
sar
shl
arpl
adc
daa
retf
xchg
push
xor
shl
push
cmp
ins
enter
push
and
inc
mov
cdq
scas
adc
jne
repz
fidivr
das
imul
fisub
mov
cdq
jno
xchg
mov
(bad)
aas
or
and
dec
push
pop
int
sub
dec
inc
dec
fist
arpl
add
in
popa
pop
test
inc
xchg
add
pop
(bad)
pop
(bad)
or
cmp
rcl
stos
inc
push
inc
push
test
into
shr
gs
std
call
push
lahf
movs
sbb
push
dec
arpl
ins
sub
dec
daa
hlt
cmp
ret
imul
and
push
mov
cmp
jns
jo
pop
xchg
mov
pusha
test
iret
aaa
xchg
dec
xchg
sbb
or
sub
pop
push
jmp
pushf
mov
jbe
pop
and
sar
dec
mov
ret
rcl
retf
jne
ins
gs
inc
xor
pop
aas
icebp
xchg
xchg
mov
loopne
add
and
sbb
adc
in
pop
data16
jns
add
shl
push
jnp
jnp
gs
jmp
cmc
add
dec
push
mov
sbb
adc
push
call
xchg
std
push
mov
shl
fidiv
inc
bound
xchg
(bad)
fiadd
call
addr16
and
mov
fldenv
(bad)
aas
inc
inc
aas
aad
test
clc
int
div
pop
xchg
rcl
ror
in
imul
or
or
pop
ja
(bad)
fdiv
and
mov
scas
movs
pop
jbe
lea
call
adc
and
mov
test
push
dec
fcomp
mov
stos
cs
xor
sub
add
push
je
adc
(bad)
cmps
sub
in
out
and
inc
loop
add
inc
cs
sbb
cmp
fstp
mov
pop
stos
and
mov
mov
mov
mov
data16
mov
mov
dec
cs
popf
push
jnp
sub
jge
push
xchg
pusha
mov
ret
cmps
pusha
(bad)
dec
loope
mov
and
(bad)
out
and
(bad)
dec
movs
xor
call
jbe
pop
(bad)
enter
fisubr
inc
push
fnsave
aam
push
rcr
lods
imul
xor
movs
nop
and
aas
jb
ins
jp
dec
xor
mov
pop
pop
(bad)
and
lahf
(bad)
lods
imul
arpl
pop
pop
(bad)
bound
stc
out
add
fs
pushf
mov
je
push
imul
push
cmp
push
dec
jns
std
sbb
pop
xor
test
pop
rep
cld
cmps
add
les
loope
test
dec
cmps
jbe
cld
xor
xor
sub
ror
xor
aam
fsubr
adc
imul
in
lock
push
not
jge
aam
push
cmp
and
dec
adc
push
outs
mov
popf
cs
mov
call
jmp
daa
mov
repz
(bad)
div
sub
pop
cmp
or
hlt
and
out
loope
rcl
and
mov
mov
cwde
loope
mov
cdq
inc
adc
cmps
adc
mov
xchg
and
sbb
and
push
adc
lods
sbb
test
mov
gs
push
fwait
inc
in
test
mov
sbb
jge
push
mov
xchg
cli
or
dec
mov
mov
ficom
gs
rcr
push
icebp
push
jns
inc
dec
mov
add
pop
mov
test
aam
jecxz
adc
pop
add
fwait
jo
push
add
(bad)
scas
shr
and
sub
push
mov
jp
inc
dec
jmp
and
shl
add
in
in
maxps
mov
ss
pop
fsubp
retf
cmp
xchg
idiv
add
jl
leave
ss
out
and
sub
in
sbb
jmp
add
jb
adc
or
out
dec
ja
push
stos
mov
retf
push
and
pop
push
fild
test
mov
clc
mov
and
rol
xchg
pop
sti
sbb
push
(bad)
fwait
pop
push
jae
jge
ret
sbb
cld
cmp
pop
sub
xchg
dec
test
push
aad
mov
ja
inc
pop
jns
pop
mov
jmp
xor
sbb
stos
dec
mov
jecxz
mov
pop
jl
neg
jl
jge
ficomp
retf
movs
or
ret
out
movs
call
bound
mov
lahf
xor
ror
js
xchg
dec
cmp
or
pop
adc
leave
or
cmp
dec
shr
jl
pop
pop
jo
cmp
(bad)
stos
xchg
adc
sahf
pop
mov
shr
mov
fisub
imul
cmp
add
jb
xchg
ds
sub
cld
int
clc
cmp
out
pop
loope
jmp
or
ss
jmp
std
(bad)
int
dec
mov
jg
mov
lahf
and
xchg
push
sub
push
out
sahf
xchg
test
mov
int3
push
test
jmp
xor
gs
pop
mov
add
jp
imul
call
dec
fnstenv
mov
mov
xlat
pop
push
inc
repz
mov
sub
sahf
gs
int
pusha
test
pop
inc
aas
jge
mov
scas
cmp
test
int
rcl
push
ss
out
mov
xchg
mov
add
pop
jb
jmp
inc
popa
adc
dec
sub
ss
clc
int
into
mov
or
dec
inc
mov
push
jle
xor
jae
sub
cli
inc
ret
xlat
xor
xchg
adc
(bad)
(bad)
mov
pop
lods
ret
in
out
rol
inc
dec
pop
shl
xchg
stos
push
out
mov
xchg
sbb
adc
test
dec
iret
loopne
clc
push
mov
pop
mov
mov
lods
jp
test
or
cmp
fldenv
jmp
pop
mov
ja
in
adc
in
xchg
push
mov
jg
ja
aas
out
sbb
push
and
outs
push
(bad)
mov
repz
or
cmp
push
sbb
lods
cmp
popf
and
mov
push
fcmovnu
cmp
out
ret
push
sbb
xor
mov
add
sbb
pop
mov
sub
outs
popa
adc
inc
lods
pop
ret
jb
inc
cmp
mov
dec
xchg
test
div
jmp
inc
add
cdq
xchg
push
scas
sbb
jo
enter
push
jmp
int3
out
add
pop
addr16
xor
xchg
sub
cmps
data16
rol
test
ret
loop
fsubr
add
mov
cld
mov
sub
idiv
(bad)
and
test
jno
in
ja
pop
shl
cmp
mov
dec
xchg
push
stc
xchg
push
jmp
cdq
pop
ret
out
es
retf
sbb
add
xor
bound
push
adc
inc
pop
stos
movs
dec
inc
nop
stos
jmp
cmp
jb
lea
pushf
push
mov
clc
mov
add
mov
push
jne
outs
inc
loopne
dec
push
adc
pop
cld
push
sbb
jae
icebp
test
in
sar
jo
sub
xchg
cmp
fcomp
ss
arpl
ror
inc
xor
xchg
fidiv
jg
int3
or
outs
dec
sti
popa
iret
sub
mov
mov
inc
sbb
add
in
and
mov
add
mov
mov
sbb
in
cmp
inc
add
sub
xchg
scas
pop
mov
lahf
cmp
jle
int3
lock
push
into
fsubr
cmp
mov
add
pop
mov
xor
pop
pop
sub
cmp
xor
cld
nop
ret
in
lods
push
add
pushf
cs
sbb
push
jle
pop
inc
movs
push
stos
and
xlat
retf
jmp
icebp
stc
test
ret
jge
ins
pop
nop
inc
jnp
ja
fisub
out
es
js
xchg
pop
leave
shr
std
jge
fnstsw
ret
call
mov
fild
lahf
pop
xor
or
fdivr
add
lock
xor
js
out
repz
(bad)
jmp
xchg
iret
aad
stos
xchg
add
std
sub
(bad)
loope
mov
mov
jns
rcr
(bad)
sar
fld
inc
aam
fld
mov
sbb
leave
xchg
repnz
lods
int3
cmp
sbb
test
mov
sub
movs
adc
or
dec
shr
xor
cmp
sub
popa
cwde
mov
cdq
popf
test
mov
mov
int3
dec
cmps
popf
jnp
inc
lahf
fidiv
js
or
arpl
scas
icebp
imul
xor
into
pop
add
push
jle
and
xchg
fisttp
jmp
inc
hlt
fs
and
stos
(bad)
(bad)
mov
loopne
das
dec
test
mov
loope
add
imul
ret
fwait
loope
and
ret
(bad)
jns
sahf
and
xor
test
jge
movs
xor
das
cmps
lds
and
sbb
inc
xor
loop
in
ja
pop
popa
push
and
cdq
repnz
fimul
and
push
iret
lds
repz
inc
cwde
add
jb
push
imul
add
shr
ja
fbstp
in
fidivr
push
push
loopne
stos
cld
in
mov
mov
vmovdqa
ret
pop
xchg
fsubp
cmp
out
imul
pop
xor
dec
stc
cmps
push
das
add
adc
arpl
jns
test
jg
leave
xchg
stos
cmp
xor
dec
fiadd
aas
sub
cmp
pusha
sbb
adc
or
pop
shl
add
inc
jb
test
mov
ror
bound
pop
sub
pop
jmp
push
dec
push
les
hlt
call
lods
cli
ins
dec
xor
adc
jno
lods
fdecstp
mov
cmp
(bad)
mov
(bad)
mov
cmc
mov
std
mov
cmp
dec
dec
loopne
fbld
imul
xor
jle
or
jno
fwait
lahf
lods
mov
les
pop
jno
addr16
xlat
xor
jmp
mov
out
in
mov
addr16
push
push
daa
inc
jp
loop
fs
cmp
aaa
inc
xchg
or
adc
inc
xchg
inc
dec
scas
xchg
int
ret
pop
pop
jno
cs
or
xor
xor
out
adc
repz
push
mov
mov
data16
stos
mov
sbb
fs
inc
cmps
sbb
in
xor
inc
mov
inc
leave
jmp
push
mov
add
stc
mov
inc
call
pop
push
cdq
mov
xchg
xor
iret
fs
call
xor
pop
add
sub
push
cmp
mov
into
jne
push
mov
sub
je
imul
pusha
ret
loopne
push
cmp
loop
sbb
inc
icebp
sbb
mov
(bad)
xor
cmc
das
arpl
sbb
xor
push
fstp
icebp
push
in
dec
dec
stos
add
inc
jnp
aam
cmps
loopne
mov
push
dec
addr16
lods
fs
setnp
mov
cmp
repz
enter
ja
(bad)
or
shl
cmp
ss
inc
mov
ins
or
pusha
push
sbb
fcomp
stos
rcl
out
fs
sbb
sti
pop
mov
cli
mov
push
xchg
call
push
dec
push
sets
mov
in
hlt
add
cld
pop
inc
in
jbe
pop
push
(bad)
inc
scas
addr16
sahf
mov
adc
test
and
test
fisttp
mov
xchg
popf
cld
xchg
or
jo
adc
into
cmp
sahf
and
sub
stos
mov
dec
mov
sbb
mov
mov
xor
neg
push
aad
stos
loope
mov
pusha
sub
(bad)
jg
retf
jmp
mov
add
sub
mov
push
add
inc
mov
inc
xchg
jecxz
popf
repnz
jnp
retf
adc
loope
xchg
xor
pop
(bad)
mov
outs
ret
xor
(bad)
test
cmps
das
lds
add
or
xor
fcmovbe
sub
fwait
jmp
sub
inc
cmova
imul
adc
push
movs
mov
xchg
ja
mov
jp
icebp
clc
and
mov
test
ins
loopne
or
into
mov
sub
(bad)
aam
fs
sbb
xor
call
loop
popa
inc
sub
pop
add
call
push
retf
inc
xchg
cmps
jge
adc
xchg
(bad)
cmp
cmp
leave
jno
scas
retf
fwait
inc
pop
mov
clc
push
clc
cmp
scas
push
mov
aam
outs
int3
and
imul
sti
and
add
ret
add
cvttps2pi
xor
ret
rol
fsincos
mov
mov
dec
push
call
and
(bad)
mov
xor
int3
or
sub
gs
sub
and
and
mov
sbb
push
xchg
cmp
iret
add
in
outs
push
(bad)
test
jbe
pop
pop
mov
inc
push
mov
inc
lock
stos
dec
add
push
cld
jns
stos
lea
fstp
test
jae
daa
mul
aas
jmp
sbb
pop
or
dec
retfw
repz
inc
mov
(bad)
dec
mov
mov
sbb
xlat
or
dec
bnd
out
mov
cmc
shl
leave
sub
repz
and
or
inc
cwde
(bad)
mov
lahf
loop
sar
inc
daa
sub
lods
jmp
adc
pop
inc
mov
inc
pusha
stc
adc
out
lahf
mov
and
(bad)
sbb
into
call
test
push
inc
scas
bound
push
and
inc
pop
or
add
push
retf
cmps
ds
bound
test
xchg
and
je
sbb
pop
ficomp
sub
add
sub
ficom
call
(bad)
sbb
and
push
mov
xor
mulps
push
clc
js
cmp
sub
test
sbb
cld
pop
fist
cs
stc
pop
xchg
retf
cmp
push
jecxz
and
aaa
xlat
push
xchg
pop
sar
lock
jbe
enter
retf
jge
lds
push
(bad)
sar
jbe
test
test
mov
loopne
leave
and
fidiv
in
and
xor
mov
sbb
mov
inc
sub
adc
xor
and
rcl
lock
out
inc
mov
lea
loopne
cmc
mov
add
jmp
je
int
test
mov
mov
fsub
push
or
or
mov
ror
sbb
sbb
inc
xlat
jno
push
xchg
cmp
push
pop
pop
rol
aaa
loop
hlt
data16
jb
mov
outs
cs
fnstenv
add
repz
call
rcr
xchg
popf
xchg
bt
ficomp
out
mov
sub
popf
std
cmp
repz
ret
dec
or
jp
xchg
fdivr
mov
out
mov
addr16
inc
(bad)
xchg
cmp
(bad)
dec
push
jo
pop
fsubr
rol
or
mov
or
movs
fnstenv
arpl
in
scas
ds
push
inc
dec
(bad)
es
push
add
mov
inc
push
sub
push
inc
push
arpl
out
mov
sub
gs
push
inc
xchg
sbb
xor
xchg
cmp
test
push
test
push
jecxz
mov
and
out
cmp
xor
or
out
(bad)
int3
ins
push
cmp
xor
cld
fist
xchg
repz
dec
pop
shr
mov
les
push
aad
push
sbb
jl
es
push
fnstenv
out
fs
cdq
sub
or
call
jbe
cmp
addr16
and
(bad)
xchg
fdivr
repnz
mov
push
out
lahf
jnp
ret
dec
mov
pop
retf
inc
push
mov
add
inc
aas
adc
ret
aas
dec
imul
lahf
cmp
cmc
ficom
arpl
test
in
jbe
dec
adc
xchg
inc
inc
push
(bad)
cli
sub
pop
adc
or
jge
clc
cmps
xchg
xchg
xchg
sbb
in
(bad)
call
lods
push
cdq
fs
cmp
iret
in
mov
mov
adc
xor
mov
ss
(bad)
(bad)
xor
mov
cmp
push
iret
sar
stos
sbb
jg
push
cmc
dec
add
jno
(bad)
in
mov
mov
jle
xor
push
pop
call
jl
jmp
jo
cdq
push
mov
cmp
jbe
pop
loope
mov
popa
mov
dec
not
stos
push
jae
jo
or
es
sahf
inc
(bad)
xor
pusha
xchg
dec
and
into
shl
stos
mov
imul
push
aas
add
outs
xor
xchg
xor
cmp
or
and
int3
lods
nop
jae
push
mov
cld
movs
and
cmps
hlt
les
mov
jmp
ror
aam
jle
stos
movsx
push
(bad)
daa
sub
fnstenv
mov
fmul
or
pushf
xor
add
jbe
out
adc
or
popa
xor
mov
xor
inc
xchg
xchg
adc
jle
push
xchg
push
mov
out
neg
push
sti
cmps
dec
es
adc
pusha
in
jp
adc
test
push
cmps
xor
sub
sbb
pop
xor
lahf
stos
jmp
push
dec
push
xlat
mov
in
mov
push
jle
outs
xor
int
ds
icebp
scas
jl
or
jae
mov
pop
inc
cli
xor
call
cmp
inc
push
xchg
dec
and
cli
jb
and
jbe
nop
mov
sbb
cmc
adc
or
lock
mov
jmp
(bad)
push
(bad)
repz
inc
mov
hlt
stc
xor
lods
shl
nop
pushf
pop
pop
pop
and
daa
add
sub
cmp
sbb
lods
jle
or
call
mov
xchg
xchg
mov
jg
ss
(bad)
mov
sub
sbb
push
dec
mov
nop
ds
sahf
xchg
scas
mov
pushf
and
and
and
cmp
bound
sahf
push
iret
movs
std
inc
push
dec
clc
movs
dec
adc
test
test
repz
lods
retf
add
lock
jo
and
xchg
ins
cmp
je
jecxz
stc
ins
fwait
pop
xchg
add
fcmovbe
out
outs
es
nop
rol
pop
dec
jg
pop
push
push
push
xchg
adc
xchg
lods
mov
xor
pusha
aaa
push
pop
xor
add
inc
inc
aaa
mov
sbb
cdq
ret
aad
aam
sahf
xor
std
xor
pusha
push
in
imul
add
or
jmp
add
cmp
arpl
in
or
mov
ss
add
enter
push
jb
pop
or
jo
fld
retf
and
cli
lds
add
ret
inc
push
adc
scas
stc
lds
cmp
mov
ins
outs
outs
inc
aad
(bad)
aad
jp
mov
adc
xchg
lds
xor
(bad)
fsubr
jne
jecxz
cld
xchg
test
int
(bad)
cs
xchg
aas
mov
dec
and
mov
xor
sub
clc
cs
iret
adc
loop
jnp
mov
rol
mov
xchg
jl
xchg
(bad)
jae
jecxz
or
and
shr
aas
in
xchg
add
popf
jmp
loope
xchg
add
cmp
or
(bad)
int
add
xchg
jmp
dec
push
xor
lock
sti
jmp
fsub
das
out
inc
shr
int
xchg
repz
and
ins
pop
sbb
push
dec
mov
pushf
test
xor
add
test
mov
adc
out
iret
scas
fld
xor
fldcw
xor
frstor
cli
jg
out
inc
add
repnz
stos
repnz
sbb
fnstsw
mov
and
sub
js
cmp
mov
jl
push
test
dec
iret
push
pop
(bad)
pop
cmp
adc
imul
cmp
or
add
int3
mov
sahf
ins
rcr
and
bound
mov
ret
push
addr16
cmc
jge
adc
sbb
jo
sub
fidivr
push
inc
mov
inc
cmp
fiadd
xor
repnz
cmp
cmp
cmps
adc
(bad)
push
sbb
mov
addr16
out
adc
repz
ins
jle
sbb
cwde
pop
mov
js
xchg
shl
push
push
mov
sub
jecxz
out
push
mov
in
aam
pop
lahf
jns
ds
pop
inc
outs
outs
adc
xchg
call
ret
sub
lods
mov
pop
js
lods
cmc
pop
aaa
sub
sub
inc
aaa
test
cmp
int
mov
sti
xchg
jmp
lock
add
inc
adc
sbb
jae
cwde
movs
add
movs
or
scas
test
test
cmp
sbb
stos
mov
jne
int3
push
fdivrp
pop
sub
mov
inc
cdq
cwde
loopne
pop
sub
mov
ja
jl
imul
and
pop
std
mov
jmp
mov
inc
sbb
push
aaa
sub
mov
sub
test
addr16
out
mov
daa
adc
mov
and
rol
into
xchg
sub
push
xchg
or
push
jg
loopne
or
push
aaa
test
bnd
idiv
inc
popa
inc
xchg
int3
pop
test
inc
mov
leave
xchg
icebp
(bad)
jne
or
test
sub
and
pop
(bad)
loope
pop
ja
mov
das
jecxz
shr
mov
dec
(bad)
sti
hlt
(bad)
fmul
in
repz
inc
int3
adc
movs
(bad)
mov
inc
inc
fstp
bound
int3
jmp
icebp
call
dec
and
inc
xchg
push
rcl
call
fstp
push
rcl
out
push
ror
test
test
in
rcr
imul
shld
xor
inc
pop
mov
rol
lods
add
jmp
inc
js
jbe
add
scas
add
xchg
shl
xor
or
push
dec
mov
dec
mov
push
mov
(bad)
adc
or
mov
cmp
retf
jge
mov
sub
jl
cmp
int
mov
(bad)
cmp
fs
scas
sub
(bad)
push
push
shl
pusha
arpl
stc
cmp
sbb
inc
int3
sti
int3
cmp
(bad)
iret
cmp
loop
mov
push
shl
or
pop
pop
and
pop
mov
cmp
xchg
gs
popf
and
rcr
and
mov
push
pop
or
cmp
and
xor
mov
ins
loop
ud1
movs
and
cdq
push
add
pcmpgtb
add
clc
mov
push
adc
mov
std
fneni(8087
mov
hlt
shl
ja
xchg
push
push
xchg
adc
mov
add
ins
test
repnz
dec
mov
fcmove
adc
sti
fwait
dec
sub
je
push
inc
adc
test
pop
fwait
xor
in
mov
jp
dec
inc
cmc
dec
imul
xchg
or
sbb
xor
push
and
xor
mov
movs
pop
shl
jb
ins
clc
je
adc
test
xchg
rol
cmp
fadd
push
daa
out
vshufpd
jae
in
nop
inc
jge
cmc
jno
hlt
add
adc
sub
ss
or
sti
pop
test
outs
das
out
sbb
xchg
imul
adc
add
adc
in
ror
cmp
pop
sbb
mov
mov
div
std
cmps
bound
or
jmp
cmp
movs
mov
push
sbb
fwait
and
adc
in
fiadd
imul
std
cmc
push
add
mov
pushf
mov
outs
pop
push
jo
(bad)
ret
lea
dec
dec
aas
(bad)
call
shl
xor
cmp
enter
jns
xchg
mov
mov
jae
sbb
add
arpl
mov
ins
sub
ret
pop
lods
je
out
mov
sbb
out
out
sbb
push
addr16
inc
(bad)
in
mov
mov
pop
and
jo
or
daa
nop
test
sub
retf
push
jo
(bad)
dec
push
cmp
inc
adc
stos
mov
cmp
outs
sub
imul
mov
mov
retf
test
inc
adc
cld
cmp
ins
ficomp
(bad)
in
cmps
aad
(bad)
mov
cmp
xchg
call
adc
cld
dec
dec
mov
fbld
mov
movs
rcr
mov
shl
pusha
ja
mov
jbe
(bad)
mov
add
jae
mov
scas
je
ffreep
test
sahf
fcom
xchg
bound
in
mov
aas
mov
loop
add
lahf
gs
mov
adc
fnstenv
pop
or
cmp
mov
or
or
or
(bad)
xor
test
xor
imul
cmp
into
mov
fnsave
mov
mov
dec
das
cmps
mov
ins
pop
call
cwde
out
(bad)
movs
cli
arpl
push
(bad)
int3
inc
dec
(bad)
out
(bad)
cmc
cmp
movs
(bad)
ins
je
ds
out
dec
jl
mov
dec
sbb
gs
pop
mov
aam
dec
and
mov
(bad)
and
ret
jmp
test
cmp
scas
jnp
cmp
or
xchg
or
xor
and
dec
dec
enter
cmp
(bad)
adc
outs
aad
(bad)
mov
popa
sub
icebp
inc
sti
mov
sbb
dec
pop
mov
sub
cmps
xchg
xchg
mov
js
mov
sbb
imul
out
push
pop
dec
inc
enter
add
mov
pop
or
and
aas
jle
add
add
imul
xor
test
adc
andnps
test
jmp
xchg
pop
hlt
or
call
and
test
jmp
leave
adc
xchg
lds
pushf
repnz
das
fsubr
xor
inc
xchg
mov
lea
mov
cmps
inc
cmp
mov
ja
je
mov
and
es
cs
jmp
leave
sbb
add
inc
out
pop
das
shl
push
es
xchg
adc
cmps
lock
push
jns
mov
mov
add
pop
jg
push
or
(bad)
and
ret
popa
dec
dec
aas
cmp
xchg
push
addr16
pop
add
dec
jbe
jbe
mov
xor
ret
call
leave
sub
div
jno
adc
xor
out
pusha
inc
or
(bad)
movs
out
mov
mov
(bad)
ins
bound
sub
lds
ja
jp
addr16
sub
adc
and
test
cmp
pusha
sbb
jge
lea
cmp
test
adc
jg
dec
out
dec
outs
or
mov
popf
ins
pop
fcom
rcr
cs
cmp
inc
addr16
call
pop
inc
inc
dec
sub
iret
fdivr
int3
fwait
pop
repnz
add
mov
dec
xchg
call
jo
or
pop
mov
push
sti
rol
cmp
xchg
cmp
sti
retf
jns
xchg
aaa
scas
mov
pop
outs
sbb
jmp
xor
icebp
lods
or
in
mov
inc
ja
clc
cmp
rcr
out
and
jnp
les
mov
sub
sbb
test
test
pusha
fwait
jb
bound
fnstenv
fnstcw
add
rol
jmp
ret
xchg
adc
push
jmp
or
ficom
(bad)
and
dec
jmp
idiv
pop
xor
mov
mov
iret
div
pop
gs
ja
enter
sbb
and
mov
pusha
mov
mov
pushf
test
dec
jl
(bad)
(bad)
cmc
mov
jns
rol
jne
fcom
lock
inc
push
or
test
(bad)
push
(bad)
cli
lods
add
(bad)
jne
jnp
rcl
mov
cmp
and
call
repz
mov
or
dec
inc
jg
xchg
dec
dec
arpl
aaa
(bad)
shl
rol
push
aas
and
xchg
mov
scas
cmp
or
(bad)
mov
cmp
fild
mov
mov
int
outs
mov
(bad)
sub
aaa
das
loope
add
mov
or
dec
fwait
mov
inc
add
imul
into
ret
push
xor
sbb
test
imul
cmps
push
mov
adc
std
jno
mov
add
push
mov
add
daa
movs
dec
sahf
cli
jo
pusha
jle
xchg
out
add
(bad)
sub
pop
jns
(bad)
xchg
je
lahf
or
div
daa
fwait
add
addr16
fld
dec
push
jp
int3
cmp
nop
adc
jns
stos
pushf
and
dec
cmp
xchg
sbb
jns
sub
outs
lods
test
sbb
add
lods
cmp
push
call
pop
mov
das
sub
jnp
mov
in
nop
mov
push
int3
out
jbe
push
ret
dec
pop
fidivr
scas
jmp
inc
add
int
inc
mov
rcr
or
mov
jmp
in
xchg
pop
dec
mov
loopne
scas
mov
inc
push
adc
ffreep
stos
pop
xchg
dec
pop
mov
fdiv
test
rcr
mov
jo
leave
cld
dec
ja
push
pop
gs
push
jae
scas
out
mov
xor
in
fist
add
and
xor
imul
mov
mov
ret
adc
push
mov
mov
adc
sbb
out
push
dec
data16
mov
push
push
lds
mov
inc
inc
add
aad
and
dec
cmp
cmp
fcom
mov
loopne
dec
stc
pop
sahf
mov
mov
mov
push
push
inc
hlt
mov
or
cld
(bad)
jle
push
dec
pop
cmp
call
js
sub
push
prefetchwt1
jg
into
push
pop
sub
(bad)
sahf
mov
fwait
and
mov
xor
repnz
jg
dec
ins
and
mov
fcom
add
int
dec
mov
bound
js
jg
xchg
pop
ss
sub
test
mov
mov
xchg
lds
cmp
stos
aam
loope
or
or
cmps
jns
dec
cmp
ret
push
jecxz
mov
sbb
cli
sub
in
test
das
jae
push
sbb
add
jno
inc
xchg
lock
push
jmp
aad
repnz
ret
mov
or
add
(bad)
adc
clc
in
ss
dec
in
enter
inc
ins
jge
and
or
cmp
ins
mov
lods
xchg
addr16
xor
xchg
cmp
pushw
mov
cmc
mov
mov
jmp
and
cmps
or
repz
dec
sbb
xor
jne
fmul
mov
push
push
stos
xchg
sub
xchg
mov
shl
and
lock
out
ficom
cmc
xor
out
std
mov
add
inc
retf
sbb
cmc
dec
div
test
test
xchg
aaa
xchg
lahf
cmp
popf
xchg
stc
push
jg
fadd
add
shl
imul
shl
aad
ins
js
stc
pop
sbb
inc
(bad)
out
je
shl
mov
or
movs
js
imul
jmp
sbb
pop
sti
and
arpl
lahf
dec
add
pusha
les
cmp
out
in
ja
sub
das
call
lods
xchg
fistp
(bad)
aam
jecxz
inc
aas
cwde
fdivrp
stos
(bad)
xchg
jns
les
mov
stos
cmovge
loopne
adc
gs
push
rcl
std
movs
jl
cmps
sub
cmps
sub
in
(bad)
lods
jge
mov
mov
iret
fcom
ret
jle
cmc
sub
jmp
mov
xchg
xor
adc
ins
pop
inc
mov
sbb
aas
and
not
adc
fild
adc
shr
lahf
sbb
fistp
push
stc
xor
cdq
pushf
and
xchg
add
cli
cmp
inc
sbb
(bad)
fs
pop
sub
pop
sbb
stc
out
jmp
popa
pop
mov
cmp
xor
aas
xor
inc
sbb
or
in
jp
inc
xor
xor
repz
mov
push
pop
lock
std
xchg
jb
leave
jl
lahf
or
imul
test
and
es
add
mov
add
sub
push
jge
xchg
popa
jae
pop
add
ret
xchg
leave
mov
inc
sub
rcl
mov
lock
jo
mov
cmp
mov
jecxz
xchg
ja
shl
pushf
cld
push
and
cdq
mov
cld
aad
inc
cmp
in
ins
std
ror
or
cli
lods
loope
xchg
cmp
jo
dec
sti
leave
imul
add
pop
sub
mov
pop
dec
aad
adc
cmp
add
(bad)
dec
outs
jl
aas
shr
shl
scas
icebp
cmc
call
enter
xchg
xchg
fcomi
and
imul
sub
add
ror
arpl
retf
outs
pop
or
fucomip
(bad)
int3
adc
loop
inc
mov
jb
sub
(bad)
mov
pop
sub
adc
div
cmps
sbb
jmp
lock
fwait
in
mov
(bad)
pop
outs
mov
add
push
pushf
fsub
loopne
sar
sbb
cmp
dec
mov
dec
popf
add
adc
mov
xor
test
bound
adc
xor
test
out
dec
cwde
xor
ud2
or
mov
cld
arpl
fcmovb
add
cmp
movs
scas
in
rcl
clc
sub
sub
pop
and
mov
mov
mov
dec
iret
jmp
imul
into
push
shl
xor
push
inc
cmp
push
fcom
loop
sbb
cld
push
pop
and
cmp
int3
inc
jnp
mov
and
xchg
mov
and
jo
sub
pop
jbe
mov
sbb
neg
and
mov
sub
fwait
aaa
ret
xchg
cdq
pop
aaa
iret
sti
into
call
arpl
into
xlat
pop
mov
adc
retf
not
subps
mov
push
dec
mov
or
mov
ficomp
icebp
vmread
loopne
aas
mov
sbb
cdq
push
jg
dec
stc
adc
mov
(bad)
mov
ret
retf
adc
je
mov
mov
xchg
das
pop
jecxz
call
jp
sub
mov
and
iret
inc
test
out
pop
repnz
movs
in
dec
dec
es
popa
cmc
cmp
pop
jno
jb
(bad)
jmp
or
inc
add
sub
ret
(bad)
mov
xor
retf
ds
cmp
test
cmp
pushf
and
leave
fld
cmp
arpl
sub
jmp
outs
push
adc
add
dec
and
ss
pop
loopne
mov
jne
dec
mov
mov
mov
mov
sbb
aaa
mov
movs
xchg
js
outs
pop
hlt
gs
jp
xor
int
sub
mov
jae
jno
mov
pop
sbb
pop
xchg
out
mov
bound
push
daa
(bad)
retf
arpl
push
push
js
das
into
ds
movs
scas
or
hlt
in
and
mov
mov
idiv
(bad)
push
fmul
test
jle
dec
ret
jl
and
pop
sti
adc
inc
(bad)
lods
aam
jp
in
add
aam
hlt
and
sub
sysexit
hlt
mov
movs
jne
sub
aaa
sub
push
(bad)
pushf
es
mov
movs
es
mov
sbb
jecxz
pop
mov
out
pushf
test
fistp
jle
add
test
xchg
jmp
cld
or
cmp
cmp
fld
pop
or
aas
push
jl
pop
xchg
out
(bad)
xchg
pop
(bad)
in
ins
inc
push
ror
lea
addr16
mov
cmc
xchg
or
icebp
cmp
add
cmp
cmc
jp
push
dec
sbb
or
lahf
jmp
cld
or
xor
in
sub
(bad)
into
dec
les
ja
hlt
xchg
inc
ins
popf
scas
mov
jle
lea
retf
sub
xchg
sbb
adc
cmp
popf
lahf
daa
xor
out
lods
aad
call
pop
ss
adc
push
jecxz
inc
cmp
les
fs
cmp
popf
pop
sti
enter
ret
scas
mov
or
adc
jge
pop
ffree
ins
dec
inc
mov
xchg
mov
fsub
sub
retf
ror
or
push
(bad)
sub
or
idiv
jbe
push
jmp
adc
out
sahf
into
loopne
push
bound
jo
int
add
ss
call
mov
adc
xchg
loopne
scas
fisubr
cmp
ret
js
xchg
or
push
cdq
jmp
dec
add
test
mov
fisubr
push
sahf
adc
push
dec
rol
or
push
mov
sbb
inc
sbb
sbb
outs
push
jae
in
jmp
mov
dec
cld
or
cmp
mov
xlat
push
ror
bound
test
rol
mov
mov
mov
push
je
pop
scas
outs
jmp
cld
rcl
xchg
dec
aam
pop
jecxz
scas
add
or
cmp
dec
inc
(bad)
lds
mov
mov
xor
std
jmp
push
inc
pop
loope
popa
dec
dec
sub
gs
outs
in
pushf
push
xchg
cmp
rol
cwde
sar
sub
lds
xor
cmp
js
pop
cmp
mov
loope
ror
inc
imul
ficomp
out
push
ss
cs
cli
add
and
fstp
xor
aaa
inc
cdq
xchg
add
pusha
fisubr
mov
pop
je
lahf
dec
mov
pop
push
(bad)
inc
(bad)
stc
mov
rol
adc
in
sar
dec
push
push
jl
imul
pmaxub
(bad)
xchg
fbstp
inc
dec
pop
dec
mov
push
sbb
cmp
imul
imul
pop
push
in
add
pushf
ret
fwait
pop
lods
xchg
sub
out
xor
mov
mov
pop
std
push
in
mov
out
pop
jo
outs
xchg
inc
test
hlt
or
int
enter
and
inc
test
mov
pop
adc
jecxz
cmp
cmc
out
adc
push
dec
and
and
inc
jae
aas
fxch
xchg
push
cdq
xlat
mov
inc
popa
jle
imul
jmp
xchg
fldenv
and
xchg
jecxz
pop
xor
pop
push
cmp
scas
jbe
adc
clc
or
ret
stos
inc
mov
mov
ins
ret
xchg
sti
aaa
mov
inc
nop
in
inc
sub
retf
mov
jae
stc
repnz
or
adc
ror
clc
push
inc
mov
mov
hlt
fistp
ins
es
xchg
jl
aaa
je
scas
inc
dec
scas
cld
xor
and
pop
adc
iret
sbb
xchg
sti
scas
push
ret
cmp
dec
lea
jp
xchg
xchg
xor
les
push
fndisi(8087
pop
jne
jae
xchg
mov
out
gs
hlt
cmps
jbe
push
xchg
std
shl
test
(bad)
cmp
xlat
xor
adc
push
gs
in
and
movs
mov
pop
or
inc
jmp
imul
pushf
data16
or
ss
daa
cwde
ds
ins
mov
lock
xchg
jns
xlat
mov
push
adc
pushf
jle
xchg
mov
sub
adc
lods
mov
retf
popa
jmp
sub
retf
dec
push
dec
jae
xor
mov
addr16
sbb
ret
xchg
pusha
cs
pop
enter
out
jns
pushf
jnp
cmp
lds
jmp
cli
dec
xchg
clc
ficom
fsubr
or
and
test
test
mov
daa
xor
loop
lds
inc
aam
or
sar
mov
xchg
shl
fdiv
jge
ins
call
jecxz
ret
pop
cmps
mov
hlt
jg
mov
movs
sub
mov
leave
cmp
sub
cmps
xchg
add
in
(bad)
nop
dec
push
stc
cs
mov
mov
shl
sub
push
imul
ja
mov
sar
out
fistp
inc
icebp
iret
mov
sub
jecxz
shl
sti
xor
jle
not
adc
cmp
cmp
mov
cmp
loope
repnz
xlat
cmp
add
xor
pop
jmp
cvtps2pd
and
xor
scas
mov
iret
mov
push
ja
xchg
pushf
sub
xchg
outs
jl
add
mov
push
(bad)
mov
push
jbe
popa
or
mov
xchg
cmp
sub
xlat
into
daa
xor
cmps
sar
mov
ins
je
shl
lods
enter
mov
and
add
std
sbb
icebp
lahf
xor
mov
add
and
jl
push
in
push
push
test
ret
icebp
xlat
add
mov
mov
stos
(bad)
mov
aas
dec
scas
dec
xchg
pusha
sbb
adc
and
xor
nop
pop
hlt
xor
loope
sbb
or
repz
loop
out
xor
aad
pop
sar
push
aam
xchg
inc
(bad)
inc
inc
fnstenv
sbb
push
sub
push
sub
inc
push
pusha
xor
jg
cmp
push
sub
hlt
(bad)
mov
sbb
icebp
or
aaa
xchg
jmp
repz
mov
out
popa
movs
inc
leave
gs
push
pop
mov
push
jno
jnp
mov
jge
fisub
test
shl
shl
xor
aad
fsubr
push
sub
push
sbb
retf
lock
jae
adc
cmp
mov
add
or
pop
push
cmp
leave
cmp
outs
movs
sub
leave
stos
outs
xor
inc
or
adc
mov
cli
retf
jae
lahf
mov
adc
sbb
into
jmp
mov
ret
retf
sbb
xor
mov
add
iret
cdq
mov
adc
cwde
jne
nop
mov
dec
ins
xor
loope
hlt
jno
jno
lods
mov
xchg
cmps
cmp
test
adc
jnp
pop
inc
push
mov
mov
sbb
mov
dec
mov
mov
(bad)
push
xadd
ficom
add
jl
xchg
jmp
movs
div
cmp
dec
push
popa
mov
push
inc
sub
lock
scas
std
sub
ss
inc
mov
push
outs
sbb
push
inc
pop
sbb
adc
jp
xor
(bad)
jecxz
push
mov
xchg
and
int
inc
push
mov
mov
push
mov
inc
jo
push
lods
mov
imul
jp
test
stos
test
test
cwde
call
inc
mov
jmp
test
js
icebp
cmp
test
data16
movs
imul
ret
adc
sbb
seto
sbb
or
cmp
inc
dec
sbb
push
and
dec
mov
xor
or
inc
inc
and
xchg
pop
stos
dec
mov
call
pusha
stc
popa
int3
pop
out
mov
test
or
cmps
fild
in
jmp
pop
ror
test
cmc
fbstp
mov
shl
push
jns
or
jbe
je
rcl
xchg
movs
dec
add
add
mov
push
test
sub
out
das
push
dec
js
mov
sbb
retf
std
dec
jp
cmp
sub
daa
imul
jecxz
out
mulps
es
fwait
pop
sbb
lods
aas
dec
es
sar
jmp
shl
fcmovnu
add
adc
fwait
adc
push
fldcw
push
ins
pop
in
sbb
xlat
aas
cmp
cmc
bound
jmp
loopne
mov
retf
or
xchg
clc
imul
in
or
pop
sbb
dec
and
xchg
push
lea
clc
adc
stc
mov
outs
les
mov
xchg
inc
push
xor
ret
jmp
inc
(bad)
int3
push
push
inc
sub
pop
lock
mov
jae
cld
add
hlt
xchg
sbb
shl
movs
shr
clc
push
leave
lods
lahf
ins
jnp
mov
out
iret
(bad)
in
pop
ret
inc
jl
out
jb
pop
dec
not
popa
mov
scas
lahf
movs
dec
pushf
leave
in
aad
add
jne
out
stc
jbe
and
dec
inc
and
mov
out
aas
adc
ror
mov
pusha
or
in
sub
mov
data16
dec
div
pop
cmps
in
loope
adc
or
aam
mov
movs
test
repz
jle
fld
cmps
xchg
push
stos
call
jecxz
stos
std
sub
imul
push
int3
adc
or
inc
fisttp
cmp
push
dec
xor
(bad)
fadd
cmp
data16
jmp
fld
and
fs
mov
stc
or
adc
pop
mov
arpl
(bad)
jmp
fdiv
arpl
xor
push
lods
push
mov
mov
ins
shr
mov
in
loope
dec
fsubr
push
outs
dec
dec
inc
push
add
push
icebp
aam
jg
cmps
repnz
mov
mov
sar
mov
mov
cmc
cmps
je
cmps
fimul
adc
mov
sbb
jbe
jecxz
fwait
or
lods
and
test
fnsetpm(287
or
push
add
mov
xlat
mov
aas
pop
or
fidivr
mov
aaa
xor
mov
clc
es
je
cmp
cmp
cdq
add
nop
inc
sar
xor
jmp
data16
dec
out
mov
cmps
inc
out
dec
adc
int
mov
pop
sbb
jecxz
inc
ja
mov
into
retf
add
cmp
mov
jle
(bad)
hlt
lea
test
test
adc
jns
jl
inc
xchg
or
inc
iret
fisttp
mov
push
icebp
dec
jae
pop
mov
hlt
test
rol
stc
in
test
dec
gs
xor
sbb
or
scas
stc
gs
jp
neg
ins
inc
pop
push
jp
jge
sahf
nop
ret
jno
daa
xchg
std
pop
fnstcw
and
imul
or
mul
retf
sub
cmp
ss
push
aas
mov
clc
add
lods
cmp
cmp
inc
fidiv
mov
iret
mov
mov
outs
push
in
xor
and
loopne
enter
das
dec
aad
and
(bad)
xlat
gs
push
or
add
xchg
push
imul
shl
sub
push
mov
test
dec
loopne
dec
xor
add
mov
cmps
sar
sub
scas
mov
dec
xchg
lea
(bad)
adc
pushw
sub
das
js
dec
adc
repz
div
pop
xchg
mov
std
ds
loop
or
xchg
pusha
lahf
popa
clc
sahf
pushf
mov
mov
test
cmp
test
std
pop
push
dec
enter
pop
push
fwait
les
sub
and
xor
movs
test
mov
scas
ins
repz
aam
add
mov
and
xchg
ror
jo
sub
into
test
sub
mov
scas
dec
push
mov
ret
fsubr
mov
lods
sbb
ss
loope
lock
pop
out
pop
ds
adc
es
mov
sbb
mov
add
push
outs
fiadd
in
dec
and
jle
xlat
jbe
int
or
jmp
test
mov
jmp
push
test
aad
jl
pop
fnsave
loope
mov
cmp
dec
jmp
loopne
aas
pop
mov
scas
adc
xlat
or
pop
ret
sbb
jno
das
sbb
int3
dec
stos
aas
sbb
push
(bad)
ficomp
std
test
daa
push
addr16
xchg
pop
js
push
out
jmp
mov
push
sub
xchg
retf
xchg
fst
arpl
jns
loopne
jns
pop
add
push
sbb
mov
in
(bad)
arpl
xor
cmp
push
pop
test
adc
arpl
jnp
in
pop
lahf
(bad)
in
mov
and
retf
push
test
js
test
stc
pop
jmp
dec
xor
jmp
adc
cmp
loopne
loop
push
sub
xchg
aam
and
sbb
sti
fbld
mov
js
sti
sbb
sahf
xchg
stos
jg
mov
scas
out
jo
leave
inc
fstp
mov
scas
jmp
xchg
icebp
dec
int
mov
fcomp
addr16
aaa
lahf
neg
sbb
inc
mov
das
jb
mov
leave
inc
jmp
add
(bad)
fsubr
adc
cmps
cmp
xchg
jmp
mov
fld
and
xchg
cmps
cdq
mov
in
arpl
gs
and
imul
mov
or
enter
cmp
nop
inc
mov
sub
dec
jno
cmp
adc
retf
lods
cmp
push
pop
loope
hlt
sub
push
sbb
cmp
dec
jmp
adc
repz
mov
adc
ret
jae
out
retf
pop
jge
and
cmps
or
and
cmps
xchg
inc
(bad)
and
fbld
pop
ffreep
inc
mov
add
pop
loop
fs
punpckhdq
dec
xchg
icebp
xor
inc
test
fstp
mov
leave
xor
mov
jbe
xchg
ror
inc
or
movs
lock
adc
cmps
(bad)
xlat
dec
std
call
push
adc
jmp
push
stos
retf
push
fadd
push
add
rcl
jns
jp
xor
pop
cdq
lods
push
outs
mov
push
jmp
iret
add
dec
std
gs
inc
add
inc
or
push
push
adc
loop
stos
xchg
aas
hlt
dec
cmps
cmp
mov
jmp
or
sub
or
mov
sub
(bad)
aas
scas
ja
jmp
jne
mov
xchg
jp
add
int
mov
sub
ret
jmp
dec
jmp
or
and
sub
jmp
mov
fld
jnp
xor
pop
sar
out
aas
in
xchg
movs
jo
in
cwde
test
gs
(bad)
adc
ds
adc
fdiv
mov
lea
cmps
bound
gs
jno
push
int
or
loope
mov
sti
mov
cmp
pop
or
mov
fs
retf
test
ret
rcr
out
mov
cmp
inc
inc
xchg
adc
ds
mov
mov
call
mov
outs
push
xor
movs
out
push
frstor
or
or
mov
(bad)
je
or
rcr
mov
jae
shl
adc
ja
sub
int3
(bad)
aas
mov
scas
sbb
and
add
dec
das
adc
cli
or
pushf
fidivr
xchg
adc
std
fbld
mov
jl
jp
mov
ror
sbb
pop
dec
and
retf
ficomp
(bad)
mov
push
xor
(bad)
outs
std
pushf
ja
pop
cmps
je
mov
daa
fsub
cs
stos
push
jb
and
sti
sub
test
popf
aam
sub
xchg
dec
jp
scas
jmp
xchg
mov
jmp
sbb
xchg
(bad)
pop
xchg
popf
scas
clc
dec
push
lock
add
push
and
mov
jmp
leave
sbb
cmps
sub
push
mov
jmp
aam
adc
xor
leave
in
jl
in
test
(bad)
and
cld
cwde
(bad)
fstp
inc
shl
push
lods
jle
pop
push
std
inc
iret
push
mov
ret
adc
mov
stc
add
stos
xchg
jno
scas
nop
xor
jmp
clc
pop
mov
stos
rol
pushf
and
jo
mov
lods
or
aam
mov
pop
mov
jne
add
ds
das
sub
xor
lock
inc
push
xor
push
cld
cld
jp
fmul
sub
inc
fs
(bad)
call
clc
xchg
mov
les
jbe
les
stos
jp
dec
and
aam
xor
sbb
mov
inc
shr
fdivr
addr16
pop
xor
xor
pop
push
push
jge
mov
mov
jmp
and
xchg
repz
movs
push
pop
fild
mov
dec
fdiv
pop
push
jmp
call
sti
xor
les
mov
aas
dec
adc
xor
leave
jo
inc
cmp
xchg
(bad)
add
rol
daa
int
int
xchg
pop
dec
stos
mov
adc
push
std
les
push
and
jnp
jb
gs
xlat
retf
adc
cmp
(bad)
mov
dec
aad
(bad)
shl
adc
pop
mov
xor
cmps
stc
cmp
or
add
jae
xchg
adc
shr
icebp
push
les
push
or
jl
jo
cmp
push
imul
add
add
test
shr
push
sub
mov
pop
pop
push
add
fmul
pop
es
push
adc
fadd
jns
call
xchg
js
cmps
in
jmp
xor
jl
(bad)
imul
cmp
daa
cmp
lock
xlat
out
sub
dec
sahf
lahf
dec
sub
sub
jp
lods
dec
pop
xor
cmps
out
jo
loopne
sbb
les
dec
xchg
ja
cld
out
lahf
or
js
jle
mov
mov
aad
or
mov
clc
fmul
pop
fbld
lods
je
or
cmp
movs
mov
xchg
xchg
cwde
xlat
mov
rcl
and
sbb
pop
push
mov
adc
sar
sub
jae
jge
loopne
in
inc
xchg
adc
xchg
dec
sbb
sub
imul
retf
lahf
mov
jmp
push
jns
sub
mov
pop
push
std
xor
pop
mov
mov
test
hlt
xor
or
xchg
push
(bad)
cmp
push
xchg
push
adc
and
jns
adc
out
or
es
in
xchg
fld
and
(bad)
sub
xor
movs
into
mov
jb
pop
pop
dec
mov
(bad)
xlat
dec
mov
repnz
popa
imul
cmps
jns
jno
mov
sub
rcr
movs
iret
lds
jle
clc
nop
push
jmp
retf
lods
push
dec
dec
loope
and
mov
lea
hlt
adc
or
popf
jmp
adc
adc
enter
movs
mov
jle
cmp
not
in
mov
cmc
retf
pop
cmp
jle
pop
pop
jl
cwde
jl
arpl
(bad)
mov
jno
imul
mov
arpl
sti
pop
xchg
mov
mov
jae
cmp
jge
fs
jo
inc
mov
cmp
sub
out
mov
or
cmp
movs
inc
add
fcom
out
and
sub
adc
sbb
or
scas
mov
test
dec
in
adc
dec
jmp
sbb
mov
add
nop
mov
cld
test
inc
and
inc
in
cmps
sub
outs
shld
fnstenv
adc
(bad)
clc
cmc
popf
dec
mov
clc
scas
sar
retf
fisub
mov
mov
bound
mov
out
xchg
aad
stc
xchg
pop
mov
mov
aad
adc
shr
mov
mov
stc
cmp
cli
inc
lea
jle
loopne
mov
push
mov
mov
mov
xor
jmp
xchg
pop
mov
jne
pusha
jl
lahf
daa
sub
adc
xchg
out
sub
fistp
jge
sub
(bad)
les
or
std
adc
adc
dec
jp
neg
dec
lahf
xchg
cmp
dec
icebp
dec
sbb
push
push
mov
lock
add
clc
push
adc
fistp
aam
or
pop
test
xchg
add
shl
mov
push
pop
sbb
sub
cmp
lahf
mov
mov
mov
idiv
ds
add
enter
cs
int3
lock
or
imul
loopne
mov
push
dec
scas
in
test
push
les
mov
pop
xchg
push
movs
mov
mov
inc
cli
sahf
add
scas
mov
jae
adc
mov
inc
add
mov
cmp
dec
call
popa
xchg
sub
ins
iret
out
pop
adc
push
dec
pushf
adc
add
pop
xchg
xchg
or
sub
pop
xchg
and
xchg
int3
jmp
xchg
stos
mov
(bad)
push
pop
das
rcl
ds
neg
pop
scas
in
pop
cmp
mov
movs
movs
arpl
mov
lea
mov
inc
leave
mov
pop
call
fidivr
jge
dec
scas
movs
or
pop
mov
ret
loop
or
cmp
cmp
les
cmp
add
cmp
mov
imul
jl
or
pop
rol
fimul
test
inc
or
mov
std
clc
xor
jne
dec
in
into
or
aad
lods
or
ffree
std
stos
and
xor
add
repz
loopne
daa
mov
dec
xchg
bound
mov
retf
pop
loop
stos
jmp
adc
arpl
mov
sub
rol
(bad)
movs
ffree
or
and
push
pop
pop
in
push
xor
push
jp
retf
imul
xchg
adc
cmps
imul
pop
push
aaa
sbb
pop
jne
aam
std
loopne
hlt
pop
mov
push
cmp
jo
or
int
fsub
ret
sbb
js
or
fwait
inc
hlt
in
rol
jb
adc
punpckhbw
test
ins
add
movaps
popa
xor
ja
ss
sbb
and
cmp
pop
loopne
push
sbb
(bad)
jmp
xchg
xchg
call
xor
mov
mov
scas
xchg
lea
in
mov
dec
push
in
call
mov
arpl
add
test
int
div
sbb
jmp
ret
or
sbb
push
test
es
(bad)
cmps
xlat
in
repnz
enter
cmp
jg
pop
xchg
sub
xchg
jg
and
or
add
test
inc
arpl
xchg
es
ins
or
cmps
mov
pop
dec
jg
fwait
bound
lods
mov
push
movs
ret
mov
loopne
sub
test
xor
jmp
mov
jno
ss
aad
adc
xchg
xchg
push
sbb
inc
popf
jo
lds
outs
test
cmc
movs
mov
stc
push
inc
and
add
daa
xchg
jo
pop
add
sbb
dec
push
enter
push
ds
pop
cmp
je
xor
rcl
pop
push
or
jle
scas
inc
div
lock
call
inc
mov
mov
dec
fiadd
call
mov
in
aad
das
sub
mov
mov
jmp
push
not
adc
sub
adc
jl
adc
dec
movs
arpl
cli
inc
mov
dec
and
ja
das
sbb
add
(bad)
aaa
test
les
aaa
mov
clc
in
or
xor
push
and
psubd
xchg
hlt
mov
sti
int3
cld
cmp
call
imul
rcr
rcl
dec
dec
cld
adc
fs
mov
mov
and
add
add
loopne
dec
sbb
mov
ins
sbb
cmps
mov
les
test
sahf
out
sbb
push
ret
shr
int
pop
dec
ins
push
js
lock
ds
pop
ret
sub
imul
or
out
push
adc
mov
sbb
mov
pushf
test
jmp
popa
xor
scas
shl
mov
hlt
stos
ror
mov
jl
mov
out
cmp
adc
daa
mov
lods
(bad)
adc
popa
repz
test
cmp
pop
jmp
jmp
mov
jmp
in
int3
cmc
ja
xchg
jecxz
and
hlt
movs
fnstcw
push
xchg
pop
into
cmp
ret
add
sbb
add
pop
pushf
pushf
pop
cli
jo
and
ss
add
push
and
jno
or
fst
mov
sbb
mov
xor
adc
xchg
mov
push
adc
stc
jae
pop
sub
std
sahf
jmp
pop
jnp
and
jo
into
and
or
ret
leave
iret
std
mov
jecxz
sub
pop
mov
loope
pop
loope
int
cld
ja
enter
fcomp
hlt
or
(bad)
jmp
leave
in
shr
jecxz
fisttp
fist
cmp
and
adc
rcl
leave
test
(bad)
enter
adc
mov
es
pop
and
jo
imul
add
push
xor
stos
stc
add
mov
mov
inc
add
fwait
inc
push
jnp
mov
rcl
mov
mov
jns
and
cmp
sub
jno
pop
test
hlt
shl
push
into
mov
sub
adc
jp
pop
or
add
stos
arpl
push
mov
test
jecxz
nop
ficomp
test
pop
dec
xor
jne
or
imul
cs
aaa
stc
mov
push
xor
loope
jb
xlat
or
dec
push
in
(bad)
enter
adc
xchg
mov
mov
jae
(bad)
or
mov
in
pop
dec
inc
dec
jmp
ins
sub
and
in
or
dec
rcl
push
push
xor
(bad)
out
aam
loop
sub
sbb
pop
aad
std
add
add
add
jns
mov
sub
mov
leave
mov
cdq
test
shr
shl
scas
jl
xor
loopne
jno
xlat
idiv
hlt
out
mov
sbb
out
in
mov
sub
cdq
cmc
xor
mov
cmp
test
div
or
test
mov
pop
push
jle
and
xchg
lods
lea
sub
(bad)
xor
pop
push
add
xor
cmc
(bad)
in
cmps
push
ins
jge
jns
enter
push
dec
sub
lea
pusha
pop
(bad)
jnp
xchg
jp
ja
sub
outs
jg
adc
push
scas
sbb
and
hlt
cli
out
in
(bad)
pop
dec
inc
push
jg
inc
jecxz
dec
cli
jp
cmc
sub
jno
cmp
outs
ja
pop
addr16
cs
jecxz
and
retf
sbb
xchg
lods
mov
test
adc
(bad)
scas
sbb
add
popa
pop
lods
iret
out
imul
add
mov
pop
ror
xchg
fmulp
sbb
stos
shl
gs
das
fnstsw
movs
pop
add
and
cld
ja
jo
jle
(bad)
adc
mov
inc
in
mov
jae
or
mov
xlat
add
das
cli
(bad)
imul
mov
inc
push
sbb
add
xlat
inc
neg
repz
mov
add
pop
in
and
jg
jmp
adc
xor
xor
(bad)
mov
and
add
jmp
xchg
dec
adc
mov
cdq
scas
out
fist
mov
popf
js
xor
xchg
or
dec
jbe
ds
idiv
mov
inc
rcl
mov
xchg
jb
and
mov
and
fsub
xor
retf
jle
popf
xchg
push
mov
imul
xchg
push
cmps
mov
and
ret
xchg
test
fsub
loopne
stc
lods
mov
lea
jne
mov
push
cdq
pop
mul
add
mov
jae
sub
mov
inc
xor
pusha
dec
retf
mov
jne
aaa
pop
repz
lock
sbb
push
addr16
push
clc
sub
cmp
add
test
bound
xor
mov
(bad)
ret
xor
int3
pop
std
sub
lods
inc
frstor
cld
push
lea
outs
hlt
mov
iret
inc
xchg
ss
imul
imul
scas
xchg
cmp
sbb
fiadd
int3
popf
js
mov
mov
add
mov
push
out
outs
test
addr16
mov
adc
xor
les
jle
mov
cmp
popf
mov
inc
or
lods
cmps
push
xor
(bad)
fiadd
fidivr
pop
lock
stc
nop
cli
jnp
mov
in
mov
cmp
jecxz
mov
cmps
and
call
xor
jae
inc
pop
xchg
pop
mov
fcomip
cdq
clc
in
jb
and
jecxz
cmp
stc
dec
or
mov
js
out
xchg
loopne
cmps
pop
lods
or
jb
outs
jb
test
out
inc
or
div
in
(bad)
cmp
repnz
mov
add
mov
jo
cmc
add
movs
movs
dec
movs
push
jae
cmps
inc
xchg
add
mov
test
cmp
sbb
data16
adc
push
stos
ins
fisub
addr16
add
rcr
js
repz
scas
lea
shr
icebp
add
scas
push
out
clc
pop
adc
out
loope
push
in
pop
or
rcl
(bad)
push
mov
jmp
jg
cmp
pop
cmp
cmc
jg
push
jecxz
or
mov
jecxz
and
inc
out
pop
repz
sbb
add
mov
lahf
leave
sub
cmp
inc
jo
movs
enter
push
lods
test
mov
(bad)
sbb
mov
leave
ja
sbb
xchg
mov
sbb
add
loope
sub
call
in
adc
dec
or
fmul
cld
pop
jle
dec
sub
rcr
mov
arpl
aad
imul
ins
and
jge
cmp
aam
popf
aas
les
pop
aad
mov
fwait
add
std
(bad)
inc
test
mov
push
dec
push
scas
cmps
les
sub
jae
cmp
jns
pop
and
in
jmp
push
jae
sub
sbb
mov
data16
xchg
cmps
jecxz
xchg
jb
xchg
hlt
sub
xchg
jns
loopne
daa
test
cmp
inc
aas
stc
xchg
add
sub
jecxz
in
sub
jbe
push
cli
or
add
adc
jg
scas
in
xor
xor
fimul
lds
sti
or
or
mov
pop
popa
and
mov
sub
push
add
les
jecxz
lock
adc
and
enter
sub
cmovo
inc
mov
std
jmp
inc
sbb
sbb
dec
gs
imul
ss
pop
popa
pop
test
sbb
out
fsubr
cmps
mov
push
imul
pop
pop
pushf
pushf
hlt
ja
je
and
jbe
add
js
mov
xchg
sti
rcr
add
dec
add
imul
mov
imul
mov
imul
inc
mov
push
movs
popa
pop
pop
push
jns
imul
mov
mov
shr
icebp
push
mov
scas
outs
cdq
adc
mov
fdiv
sti
push
call
push
cs
sbb
mov
lahf
dec
repz
addr16
aaa
mov
add
aad
aaa
dec
fadd
mov
lock
fadd
push
jmp
inc
stc
mov
mov
es
xchg
aad
in
out
or
or
xor
and
stos
dec
pop
pusha
mov
sbb
xchg
mov
sbb
ja
xor
ds
in
cmps
out
stc
shl
ins
loopne
xchg
cmp
sahf
out
mov
sbb
outs
sar
or
add
sub
bound
add
in
call
or
sbb
sub
mul
sub
jb
stos
jmp
mov
push
enter
mov
fidivr
imul
jae
std
aaa
sub
pop
xlat
test
fadd
pop
push
add
push
jl
xchg
lds
dec
push
push
sbb
push
push
setno
sti
retf
jecxz
mov
out
out
inc
lds
sbb
hlt
cld
fbld
fcomp
sub
mov
jne
lods
sub
adc
sbb
cmp
stos
and
arpl
add
jl
rcl
add
cmc
frstpm(287
(bad)
jle
jg
adc
movs
(bad)
ffreep
or
aas
dec
nop
stc
es
div
inc
cmp
test
xchg
xor
jp
inc
sahf
call
dec
cdq
out
mov
jle
shl
pop
jge
adc
adc
sbb
scas
scas
ret
nop
jecxz
or
cmp
out
sbb
xchg
pop
pop
dec
test
mov
fisttp
loop
repnz
add
jbe
neg
push
out
sbb
aam
or
lods
xor
das
cmova
mov
shr
mov
pop
sbb
aas
and
add
mov
(bad)
cmp
das
lea
aam
inc
add
xchg
inc
fiadd
inc
pop
aas
sar
popf
xchg
sbb
jns
test
pop
retf
jnp
ja
inc
sbb
jbe
test
push
mov
xchg
jb
fwait
cmp
stc
jo
bound
pushf
test
add
adc
sub
cmp
cmp
adc
add
cmp
jg
cmc
data16
cmp
and
inc
dec
in
mov
les
dec
js
imul
mov
add
pushf
daa
jg
inc
push
fs
sub
js
call
dec
mov
dec
out
(bad)
iret
mov
daa
test
jg
push
jp
out
mov
add
sub
sbb
or
test
sub
(bad)
fisttp
(bad)
jns
mov
je
sahf
retf
xchg
lods
movs
(bad)
outs
xchg
mov
lahf
inc
ficomp
mov
jnp
mov
or
jg
adc
ja
pop
sbb
cld
movs
fisub
imul
inc
fcomp
jns
clc
(bad)
xchg
in
fisub
cmps
in
popf
dec
ds
(bad)
fistp
dec
lahf
fld
adc
cmp
push
sahf
and
xchg
sahf
or
nop
mov
daa
fimul
scas
mov
add
xor
test
mov
jp
mov
js
pop
dec
ret
mov
cmp
jmp
cmp
sbb
jmp
ret
mul
sub
and
test
fdivr
movs
cli
test
dec
cmps
sbb
mov
push
mov
jecxz
test
mov
gs
mov
or
dec
es
ret
gs
sub
mov
dec
dec
cdq
push
fwait
leave
xchg
xor
push
cmp
dec
add
cmp
dec
mov
adc
mov
mov
mov
scas
sub
cmps
stos
push
imul
lock
(bad)
lahf
movs
pop
mov
xor
leave
mov
scas
pop
clc
mov
ror
stos
pop
push
jmp
push
sti
add
jl
pop
cmc
sbb
or
jnp
inc
push
inc
inc
pop
cdq
mov
dec
jl
fldenv
sar
int3
and
pop
cmp
je
jo
inc
mov
push
sbb
call
xchg
add
push
fucomip
sti
mov
pushf
std
dec
mov
jo
jbe
pcmpgtb
dec
dec
inc
push
out
pop
out
es
push
mov
fidiv
fwait
push
lahf
mov
adc
and
sbb
rcr
pop
ins
dec
mov
jae
inc
ins
rcr
xor
popa
mov
sbb
sub
pop
push
mov
jns
fidiv
fsub
or
repz
xor
stc
pop
ins
outs
or
ror
push
push
and
pop
pop
int
lods
or
int
add
dec
dec
dec
retf
sbb
cmovp
rol
push
or
mov
sti
sbb
sti
sub
push
jge
(bad)
cs
out
out
mov
mov
add
retf
je
ret
dec
xchg
dec
mov
iret
xor
mov
inc
xor
out
jae
sub
sahf
jle
cmp
xor
fstp
pusha
lods
jbe
es
sar
test
(bad)
stc
add
je
add
push
lahf
mov
or
inc
js
lahf
ja
scas
inc
stos
test
add
(bad)
xchg
lods
std
shl
push
repz
icebp
sar
and
and
sub
cmp
push
and
mov
add
sets
das
jmp
loop
retf
in
and
pop
shl
mov
adc
sub
mulps
sub
pusha
or
pop
inc
mov
push
and
mov
fcmovu
into
ficomp
dec
aam
clc
imul
rol
sbb
ins
adc
lahf
lods
inc
stc
pop
cmp
mov
aam
adc
xor
outs
ret
sbb
out
repz
repnz
adc
mov
dec
dec
pop
cmc
xor
dec
sub
inc
jge
inc
or
inc
(bad)
jb
in
and
int3
sub
bound
out
fld
les
fld
push
cmps
and
repz
test
mov
jae
xlat
adc
imul
pop
push
sti
adc
neg
push
fimul
mov
mov
or
icebp
add
mov
out
fwait
and
jne
xchg
stc
movs
sub
outs
mov
xchg
add
out
pop
out
rcl
add
push
inc
ret
mov
stos
lods
(bad)
sar
jmp
leave
(bad)
bound
cld
sub
cmps
loop
dec
mov
push
ss
fsubr
mov
sub
xor
cmp
add
cs
mov
lods
mov
aaa
adc
in
aam
ins
sub
mov
enter
and
test
mov
and
out
or
test
sbb
dec
aaa
fistp
mov
xor
mov
sbb
jecxz
mov
js
dec
cs
push
and
add
aam
inc
test
adc
push
jp
sub
push
popf
cwde
adc
retf
not
(bad)
fstp
push
out
mov
sbb
mov
sub
lods
add
sub
push
and
xor
mov
aas
ds
pop
fisub
daa
dec
bound
adc
cwde
repz
mov
xor
not
stos
ret
pop
push
outs
pop
or
xor
(bad)
scas
pusha
mov
leave
mov
hlt
mov
push
out
test
hlt
movs
cmp
xchg
in
mov
add
mov
xchg
or
ficom
mov
fist
div
scas
sub
outs
(bad)
nop
out
cli
cmp
(bad)
xchg
fimul
jnp
inc
icebp
push
pop
inc
retf
aaa
aas
ret
es
adc
lock
movs
or
imul
jne
xor
or
jbe
lea
cmc
pop
dec
movs
aam
pusha
jmp
push
dec
leave
mov
out
cmc
call
loope
sahf
rcr
mov
icebp
push
and
dec
rcl
sbb
mov
xor
pop
dec
push
enter
repnz
(bad)
cli
or
cmp
fist
or
cmp
adc
in
inc
lds
nop
sub
pop
mov
in
retf
dec
inc
popa
xor
inc
sbb
dec
(bad)
adc
xor
popw
xor
mov
test
jle
popa
int
xchg
pop
fsubr
inc
neg
loopne
or
sbb
cmovbe
and
inc
mov
mov
movs
add
sub
aas
fist
sbb
and
mov
add
inc
fld
xchg
xchg
jmp
xchg
push
test
cld
dec
cwde
fwait
aaa
data16
enter
pop
mov
pushf
(bad)
and
add
call
lods
mov
das
add
std
pusha
adc
pop
sub
xor
addr16
and
mov
adc
add
push
(bad)
pop
or
movs
inc
int
inc
ret
icebp
fidivr
test
scas
imul
jle
in
imul
out
xor
jmp
or
mov
dec
pop
(bad)
es
std
addr16
out
jne
mov
jle
pop
(bad)
mov
inc
xor
sub
in
dec
mov
or
sbb
xlat
imul
sbb
popa
inc
shl
test
mov
inc
mov
mov
sub
gs
dec
xlat
mov
cdq
and
cli
pop
arpl
inc
jmp
adc
dec
hlt
rcr
xchg
mov
das
sbb
call
push
mov
mov
repz
or
jge
pop
mov
and
cdq
popf
and
xchg
xchg
fist
push
pushf
test
inc
dec
mov
and
adc
add
mov
sub
pop
xor
sti
into
cmps
retf
inc
and
xlat
cmp
push
lahf
(bad)
iret
int
jle
xor
mov
or
sbb
mov
or
push
movnti
into
retf
sbb
leave
lock
mov
scas
mov
shl
xchg
test
fldcw
push
adc
movs
inc
cmp
es
push
in
sub
add
sbb
xchg
or
and
stc
pusha
jbe
push
sbb
push
js
(bad)
stc
cmp
js
mov
(bad)
or
rcr
push
push
icebp
adc
je
shr
mov
inc
or
stos
je
fmul
movs
iret
xchg
mov
and
sub
dec
push
or
aas
push
xlat
adc
sub
lods
or
or
or
and
xor
xor
sub
mov
dec
ss
xor
jo
push
test
je
ret
out
adc
lds
pusha
sti
ja
imul
in
lock
or
sub
add
pop
mov
inc
lea
fwait
pop
mov
add
mov
push
jecxz
cmps
aaa
mov
je
pop
test
ficomp
out
sbb
data16
sbb
arpl
call
inc
and
mov
mov
sub
pop
dec
test
pop
jp
cwde
dec
js
xchg
jae
mov
out
test
aaa
lea
add
mov
push
movs
ds
dec
push
mov
dec
popf
aad
sbb
je
xor
aam
ror
ret
stos
jg
(bad)
movs
and
aaa
popf
mov
arpl
pop
and
mov
pop
push
in
xchg
pop
inc
in
push
jle
xor
sbb
pop
dec
xor
push
xchg
sbb
adc
mov
cwde
imul
lods
fst
pop
iret
adc
xchg
fsub
jl
mov
adc
lahf
inc
sbb
sub
mul
call
push
psrlw
xchg
aam
pushf
push
mov
sub
push
jp
ja
scas
push
(bad)
aaa
cmp
adc
stos
fisttp
fbstp
sti
adc
ror
je
rol
cmp
es
lods
ja
dec
gs
jb
ret
out
ja
xchg
adc
sar
push
push
fdivp
dec
test
lds
retf
dec
push
lea
or
pop
(bad)
dec
push
inc
pop
xor
(bad)
(bad)
sub
and
jmp
shl
jb
push
mov
les
lea
inc
test
jne
js
sub
add
psadbw
push
mov
test
iret
dec
dec
inc
enter
out
add
xchg
lock
test
(bad)
arpl
js
mov
pop
or
js
add
inc
aaa
in
sub
int3
and
sub
adc
jmp
mov
add
xlat
cmp
(bad)
outs
popf
stos
(bad)
leave
jp
mov
dec
xor
add
fld
cmp
inc
push
loop
mov
mov
retf
jmp
in
stos
mov
div
or
pop
imul
xchg
arpl
dec
mov
sub
(bad)
push
sub
xor
bound
mov
ds
(bad)
inc
cmp
mov
data16
int
sub
push
je
inc
or
sub
outs
std
add
push
pusha
and
xlat
sahf
fist
inc
pop
sub
(bad)
or
out
push
jl
jo
ret
loop
(bad)
mov
call
xor
and
daa
je
cmp
cdq
mov
sbb
lahf
js
push
mov
xor
sub
test
daa
xchg
clc
xchg
mov
fwait
inc
dec
add
inc
cmc
addr16
stc
xchg
or
sub
lahf
aaa
sbb
test
and
pop
dec
push
repnz
clc
ffreep
nop
addr16
fisttp
xchg
push
test
mov
int
enter
push
imul
(bad)
rol
inc
out
movs
adc
retf
outs
out
mov
xor
gs
loopne
icebp
jb
inc
es
add
sub
ss
jg
test
sub
into
push
or
cmp
out
fild
jl
cdq
or
xor
cs
scas
lock
xchg
(bad)
xor
sbb
pop
leave
cmps
call
adc
ds
into
mov
adc
repz
jnp
aam
stos
mov
adc
test
xchg
mov
xor
mov
gs
ins
pop
leave
dec
in
sbb
sub
das
sub
xchg
xor
inc
cld
cdq
xchg
in
sti
jae
xor
adc
and
inc
jmp
scas
mov
jmp
dec
repnz
popa
div
in
in
dec
in
outs
push
mul
cmps
cmps
cld
mov
dec
loopne
or
dec
inc
int3
ins
and
mov
(bad)
out
push
or
call
inc
and
jno
mov
inc
pushf
pop
je
mov
adc
inc
sub
adc
dec
jno
lock
aad
ror
imul
pop
pop
sbb
ss
mov
(bad)
call
sub
sete
or
inc
imul
sbb
dec
sbb
dec
std
adc
adc
sbb
push
push
jo
movs
dec
jmp
outs
fnstsw
std
(bad)
sbb
push
dec
retf
push
call
pop
lea
add
dec
inc
add
mov
mov
cli
adc
or
test
push
(bad)
ss
clc
push
ret
xchg
xlat
xchg
cmps
ja
xor
mov
jl
pushf
pop
mov
sar
inc
imul
fst
pop
(bad)
js
and
out
and
xlat
jl
retf
(bad)
xlat
jae
inc
and
mov
push
das
(bad)
iret
inc
neg
mov
imul
popa
test
jle
cmp
push
inc
pop
xchg
push
dec
or
sbb
ror
sub
jno
lds
data16
pop
addr16
outs
cmp
adc
rol
je
mov
adc
test
test
lea
add
leave
repnz
dec
imul
push
jae
jno
ss
mov
jbe
and
(bad)
movs
xchg
pop
rol
sub
jno
adc
and
scas
ret
rol
or
mov
cwde
ins
inc
movs
cmp
(bad)
sahf
pushf
add
daa
pop
out
mov
retf
or
cmc
stc
pop
or
pop
mov
lods
shl
sbb
xchg
mov
dec
out
arpl
mov
dec
sbb
ret
xchg
xchg
pop
adc
daa
push
adc
add
pop
popa
shl
pop
cli
sbb
test
xchg
addr16
sbb
pop
pop
inc
xor
xchg
jecxz
movs
cdq
sbb
cmp
cmp
mov
scas
int3
mov
js
(bad)
shl
jmp
sbb
dec
inc
dec
imul
push
lahf
xor
jno
dec
cmp
pop
aam
(bad)
frstor
mov
icebp
jge
add
fisttp
xchg
jnp
cmc
loop
xchg
dec
sahf
pop
mov
les
out
push
sub
mov
ins
pushf
or
and
pop
push
lods
xchg
push
fsub
pandn
sub
cmp
cmp
jge
adc
sbb
jmp
push
les
int3
push
je
out
pop
loope
call
sti
mov
fild
mov
test
adc
mov
cmps
pop
xchg
nop
pop
add
icebp
mov
test
hlt
cli
xchg
imul
fst
add
gs
dec
(bad)
icebp
data16
mov
or
cmc
inc
ins
rol
in
dec
dec
inc
call
jns
movs
mov
mov
mov
push
test
sbb
and
adc
repz
fidivr
adc
pop
shr
sbb
(bad)
jae
sub
or
jnp
mov
mov
out
scas
mov
pushf
pop
(bad)
scas
adc
fcomp
push
add
push
jecxz
jnp
xchg
outs
and
in
ret
inc
popf
push
aas
dec
inc
push
in
xchg
bound
inc
leave
xor
xchg
pop
cmp
pop
or
pop
jg
add
jo
jno
jp
cmp
add
mov
push
mov
into
jmp
sub
and
jp
xor
and
add
lsl
jg
jo
rcl
(bad)
fsub
inc
(bad)
jge
lock
je
mov
mov
pop
jp
daa
xor
popa
push
(bad)
or
aaa
std
sbb
in
les
sbb
leave
mov
xchg
bound
mov
sbb
enter
ds
or
cmp
sub
call
popf
sub
xchg
pop
xchg
retf
or
push
(bad)
sbb
pop
cmp
xor
enter
xchg
call
pusha
jecxz
stos
jp
sbb
(bad)
repnz
fidivr
push
popf
jne
add
bound
mov
push
adc
xor
xor
pop
fnstenv
jae
xor
icebp
fistp
adc
push
(bad)
out
imul
push
out
mov
stc
aaa
push
mov
loopne
cwde
test
mov
out
sbb
and
cmc
fld
shl
and
jns
push
mov
std
out
mov
retf
sbb
push
pusha
sub
lds
jae
sub
std
popf
and
mov
mov
call
les
std
mul
mov
xchg
mov
jle
je
cwde
mov
push
xchg
mov
adc
(bad)
jno
sub
mov
mov
cmp
mov
hlt
fistp
les
test
nop
call
xchg
or
mov
jae
fstp
mov
out
cmp
sub
into
add
mov
popf
jge
adc
mov
retf
imul
mov
mov
ror
test
pop
inc
pop
add
jmp
loope
and
test
imul
mov
jb
jecxz
push
mov
int
and
movs
out
jo
cmps
bnd
mov
shl
aad
enter
fst
and
or
push
inc
mov
push
adc
jg
adc
(bad)
jg
sub
adc
adc
sub
das
dec
stc
imul
ja
inc
in
mov
stos
stos
push
fdiv
jle
test
jae
movs
test
test
or
in
jo
fsubr
cli
mov
jecxz
int
jg
pop
ja
xchg
xchg
retw
sub
ret
xchg
xor
ins
pop
xor
and
repz
cdq
sub
adc
push
in
dec
nop
or
push
inc
(bad)
mov
cmps
cs
fcmovb
scas
xchg
mov
mov
scas
jb
mov
sub
cld
xor
fisttp
add
jmp
push
dec
test
repnz
iret
repnz
daa
mov
jbe
retf
push
cmc
push
fnstenv
xlat
test
push
fldenv
call
ss
repz
arpl
jle
in
jns
sar
ss
aad
inc
retf
ret
lds
es
and
nop
mov
pop
je
inc
adc
test
or
scas
ins
mov
pop
xor
and
adc
sti
cmp
(bad)
pop
jge
ret
(bad)
mov
aaa
push
pop
adc
or
cmp
test
lds
repz
dec
ja
xchg
cmp
push
add
jno
call
adc
mov
and
mov
sbb
push
in
aad
stc
pop
lods
imul
inc
push
into
mul
mul
sbb
ret
pushf
and
inc
or
sub
sub
ins
aad
and
mov
jle
clc
scas
pop
sub
inc
or
sbb
out
xor
sbb
xor
dec
cdq
arpl
cli
icebp
add
cmp
out
mov
push
shr
mov
pop
fiadd
push
cli
push
aaa
mov
jl
pop
dec
(bad)
lahf
dec
pop
mov
dec
sub
and
(bad)
out
call
push
sub
out
leave
call
(bad)
ins
aam
nop
adc
jl
cmp
sbb
sahf
sbb
mov
mov
add
pushf
movs
xor
jo
inc
jo
out
mov
mov
js
popf
es
add
xchg
repnz
xor
jmp
jbe
mov
nop
mov
inc
test
jle
pusha
push
fyl2xp1
imul
dec
xchg
outs
mov
in
cs
jbe
inc
jbe
adc
or
push
jp
dec
push
mov
call
inc
(bad)
sub
je
aam
pop
inc
retf
out
and
cmp
adc
cmp
daa
scas
sahf
retf
jnp
or
jno
pop
stc
add
cs
stos
sub
retf
add
inc
mov
stc
cmc
cdq
pusha
mov
in
popf
mul
cs
clc
stos
mov
cs
lods
mov
add
sub
jne
mov
mov
mov
les
stos
xor
nop
jb
xor
jns
or
fs
jmp
lds
rol
pusha
dec
mov
outs
neg
aam
pop
jmp
cld
xchg
cwde
sbb
push
add
in
inc
cdq
movs
leave
hlt
sbb
out
retf
or
pop
mov
dec
into
or
and
in
(bad)
loope
ss
pusha
xor
scas
inc
mov
sbb
push
cmp
xchg
dec
lods
call
and
mov
mov
lods
mov
pop
mov
inc
(bad)
mov
shr
pop
repz
jno
in
mov
movs
ja
leave
push
fistp
push
xor
stos
sbb
arpl
fwait
jae
shr
and
adc
clc
fsubr
dec
fist
retf
out
in
sbb
cmp
int3
mov
and
jno
outs
sbb
das
jno
out
shl
cmp
dec
in
lahf
mov
ficomp
int3
and
xchg
sar
test
xchg
mov
jmp
jge
pop
stos
mov
adc
ret
adc
in
jl
adc
outs
push
hlt
rcl
mov
cmp
sahf
cwde
xor
sub
popa
add
jmp
stc
pop
inc
fnsave
adc
adc
loope
ret
fwait
cmp
mov
mov
xor
aaa
fdiv
inc
pushf
scas
(bad)
fnstsw
lods
and
in
shl
ja
cli
iret
out
or
in
jnp
call
ret
scas
jbe
and
std
push
cmp
fld
mov
clc
pusha
or
hlt
adc
or
cwde
fidiv
push
sbb
pop
ds
cmps
push
es
cwde
inc
stos
out
xchg
or
and
(bad)
test
mov
fs
adc
sbb
out
sub
ror
xlat
scas
sbb
xchg
jo
aaa
jmp
mov
fst
stos
sbb
or
leave
inc
into
popf
in
popa
push
adc
daa
mov
retf
or
(bad)
call
cmp
sbb
cmps
cmp
enter
cmp
sub
pushf
pushf
pop
mov
fbstp
stos
arpl
push
loope
test
sti
jp
push
mov
repnz
cwde
aad
or
jle
jmp
mov
int3
jle
push
addr16
test
inc
in
mul
fwait
sbb
js
(bad)
pop
adc
sbb
xor
mov
xchg
mov
add
jge
mov
inc
mov
aas
push
and
out
fnsave
dec
pusha
dec
repnz
jmp
xchg
and
push
jo
mov
shl
and
xchg
in
sbb
sub
push
rcl
jg
(bad)
xchg
aas
xchg
mov
stc
(bad)
push
enter
mov
cld
call
pop
in
add
mov
cmp
cmp
pop
in
jmp
jp
pushf
and
adc
movs
push
fs
jl
cwde
and
sub
aad
(bad)
in
push
in
sbb
sbb
aaa
mov
xor
fiadd
out
xchg
loop
push
rcr
imul
mov
mov
(bad)
push
push
shl
push
out
add
aam
dec
(bad)
mov
dec
xlat
js
pop
jbe
shr
add
dec
sbb
and
dec
dec
pop
mov
push
xor
push
jp
pop
retf
mov
call
idiv
fldenv
daa
push
in
mov
loopne
aas
pop
icebp
les
add
shl
movs
or
pop
int3
pusha
in
mov
and
push
jp
lods
dec
cmps
push
xor
sub
fisub
adc
and
repnz
inc
jge
or
push
adc
out
cmp
mov
jp
lock
push
mov
jp
sahf
jb
leave
test
fs
pop
dec
push
stos
add
dec
add
rcr
addr16
les
test
or
cmp
lock
cs
jp
cmp
jge
sub
mov
mov
fsub
mov
into
js
jo
icebp
sub
fldenv
jecxz
jecxz
rol
sbb
xchg
in
jns
dec
pop
xor
mov
mov
out
fidiv
cmp
sbb
test
lock
dec
mov
jae
pop
jno
lods
sbb
out
jp
fstp
mov
dec
push
mov
mov
fldenv
sub
iret
add
pop
pop
mov
sbb
inc
pop
or
add
push
add
test
xchg
out
cli
retf
test
or
push
lods
rcr
cld
js
sbb
jae
retf
dec
jns
mov
imul
adc
es
fs
jge
cmp
js
dec
xchg
aaa
mov
out
(bad)
jbe
jmp
js
xchg
mov
sbb
mov
outs
dec
lahf
adc
add
dec
test
cdq
xor
jge
shr
mov
sbb
xchg
jecxz
sbb
lock
cdq
daa
mov
cmp
fild
push
movs
std
dec
rcl
les
ret
mov
jns
cmp
into
push
shl
retf
outs
(bad)
movs
jo
dec
pop
mov
mov
retf
adc
mov
xchg
jne
int
pop
push
rol
ins
mov
pop
xchg
jnp
push
mov
cmp
pop
jno
loopne
cmp
mov
les
mov
xor
loop
adc
adc
iret
adc
and
in
inc
test
test
(bad)
retf
shl
xlat
xchg
adc
stc
popa
pop
mov
nop
fwait
dec
inc
retf
shl
xchg
xchg
adc
sbb
mov
ret
mov
loopne
data16
or
mov
or
fld
and
pop
lods
mov
add
scas
jg
fwait
pop
or
lahf
mov
cdq
mov
sbb
cs
hlt
pop
cwde
push
cmp
rcr
outs
fidiv
dec
das
cs
bound
dec
outs
fst
popf
jecxz
shl
dec
or
scas
xor
clc
data16
add
or
hlt
stc
mov
mov
mov
es
cmp
cmps
xor
cmp
mov
sub
xchg
pop
dec
movs
xchg
jg
push
adc
fidiv
rol
sbb
pop
sub
in
sub
cwde
adc
cmps
jl
sar
inc
cmps
add
adc
lods
aam
xchg
int
pop
jno
push
or
aam
xchg
jmp
or
cmp
int3
xchg
dec
add
push
rol
cwde
repz
xlat
stc
mov
pop
jmp
sbb
enter
movs
jl
push
cmps
test
cmps
adc
jnp
inc
and
xchg
retf
sub
js
outs
jmp
inc
or
fnstsw
pop
mov
out
pop
xchg
inc
xor
xchg
mov
daa
loope
sub
and
xor
xor
or
stos
push
in
ja
cs
inc
cmps
arpl
mov
int
adc
sub
adc
or
sbb
or
stos
inc
push
xlat
cmp
mov
mov
popf
ds
pop
in
pushf
inc
sub
pop
outs
mov
adc
and
out
in
or
lds
xchg
sub
lds
add
and
test
dec
and
mov
hlt
jns
adc
xchg
scas
mov
or
xor
inc
ret
sbb
inc
adc
(bad)
push
jo
stos
sub
mov
pop
sub
lods
cld
add
gs
jp
das
and
imul
xchg
ds
movs
jl
push
add
aas
cmc
pushf
call
shr
popf
cmp
mov
push
sub
and
jne
dec
dec
ror
pop
add
mov
lods
inc
pop
push
xchg
pop
sbb
jmp
lods
clc
cmp
jp
mov
fcmovb
xor
shl
ret
or
cmps
xchg
adc
sbb
jmp
in
sub
add
in
repnz
into
fdiv
push
xchg
cmps
push
cmp
sbb
movs
mov
inc
add
lahf
hlt
push
xrelease
push
out
je
scas
add
stos
sbb
clc
inc
mov
pop
sbb
mov
xchg
inc
int3
xor
out
jle
dec
mov
inc
sahf
or
cmp
aad
pop
xor
inc
jg
dec
mov
push
out
jns
xor
jbe
inc
ret
push
scas
xchg
mov
add
dec
fs
(bad)
mov
or
add
retf
or
iret
jbe
ror
imul
or
sub
popa
mov
rcl
loope
pop
sbb
test
inc
test
ins
mov
mov
jl
ja
lods
fisub
add
je
cmp
frstpm(287
xor
mov
(bad)
std
pop
mov
jnp
mov
jmp
in
sahf
jp
(bad)
nop
jbe
fisub
jae
ins
mov
ror
push
shl
inc
addr16
and
adc
das
ret
or
sbb
add
retf
sub
test
cmc
jmp
or
mov
ins
mov
lds
ficomp
or
fisub
fs
jmp
or
icebp
(bad)
sub
lahf
cmp
mov
mov
mov
fisttp
mov
mov
loop
daa
rcl
aad
and
mov
cdq
aam
add
inc
xchg
mov
mov
mov
lock
les
mov
leave
push
gs
push
jle
xor
inc
js
xor
push
sub
mov
inc
js
or
mov
push
xchg
push
mov
icebp
mov
shl
mov
and
and
out
cld
movs
icebp
jg
cwde
iret
jbe
ins
pop
adc
into
jbe
popf
es
push
push
rol
inc
mov
out
iret
pop
fiadd
sti
or
xchg
adc
xchg
ss
hlt
mov
or
and
xchg
mov
sbb
sbb
stos
(bad)
mov
add
mov
test
push
mov
xchg
push
stos
or
adc
stos
dec
jmp
scas
mov
enter
test
mov
adc
cmc
ds
mov
xchg
xchg
jge
ss
or
push
mov
jle
inc
pushf
jbe
lods
out
popf
lea
sbb
into
lods
xchg
hlt
rcl
xor
jnp
ja
aaa
not
in
push
xor
jge
je
mov
jo
aaa
push
cmc
add
jns
stos
nop
mov
into
mov
in
sub
and
push
(bad)
cli
stos
sbb
icebp
and
in
(bad)
dec
sub
mov
(bad)
(bad)
mov
mov
pop
lods
mov
mov
add
out
push
add
rcl
sbb
mov
adc
cmp
retf
fsubr
into
call
sub
jmp
sub
pop
sub
test
ret
xchg
push
jns
jbe
pop
in
dec
mov
xchg
aad
in
inc
ja
mov
pop
inc
repnz
xchg
call
jp
mov
fs
pop
xlat
cmps
inc
stc
sbb
xor
or
inc
movs
aad
mov
adc
mov
xchg
and
das
nop
sbb
jb
fs
mov
aas
pusha
inc
icebp
and
nop
inc
cmp
cli
fidivr
fsubr
call
std
push
mov
jp
inc
lods
push
mov
sar
loop
mov
mov
fidivr
adc
push
xchg
das
cmp
call
cmp
dec
inc
arpl
imul
leave
cld
push
scas
loope
into
add
pop
lahf
and
lods
inc
or
icebp
adc
push
fist
jl
pop
inc
aas
mov
pop
pop
jecxz
pushf
rol
mov
mov
lahf
sbb
int
pushf
mov
ss
ins
test
mov
in
test
repz
int
std
lods
pusha
imul
and
test
pop
leave
xor
xchg
pop
icebp
push
lahf
push
jge
js
fbstp
cmp
push
mov
xor
repnz
cmp
repz
add
fsubr
xchg
mov
test
repnz
and
into
ins
pop
retf
mov
stc
jbe
popf
push
mov
stos
or
mov
pop
xchg
pushf
mov
push
aad
or
movs
or
dec
and
xor
cmps
jne
mov
push
je
test
test
sub
sub
div
lods
adc
jb
imul
sub
lea
mov
mov
or
movs
ins
loope
adc
shl
and
test
mov
push
push
fist
xor
mov
mov
push
ror
sti
paddusw
dec
and
clc
mov
sbb
leave
test
mov
push
fcmovnb
dec
push
aas
dec
cmps
add
cmp
adc
sbb
xchg
inc
imul
sbb
mov
sbb
inc
jb
outs
popf
cmp
mov
shl
fild
xor
pusha
sub
test
bound
test
je
sub
in
hlt
dec
repz
pop
pop
in
imul
loope
mov
cwde
mov
add
inc
xchg
pop
mov
test
mov
pusha
test
dec
enter
mov
(bad)
inc
lock
dec
add
pop
es
push
call
push
or
push
sub
lds
call
or
add
inc
jo
sbb
or
aas
fsub
lods
jg
jmp
call
mov
cmp
sub
movs
sbb
mov
pop
dec
jns
pop
cs
push
lahf
ins
inc
mov
mov
adc
sbb
test
(bad)
mul
lock
cmps
adc
(bad)
pop
cmp
imul
mov
rcl
sbb
aaa
int
nop
mov
inc
je
xchg
enter
inc
je
lds
push
or
cmp
inc
pop
push
aas
das
cmp
aaa
xchg
rol
push
push
mov
pop
push
rol
shr
push
fnstcw
push
jle
test
inc
std
cwde
pop
fnstenv
pop
imul
ds
retf
mov
ror
mov
mov
or
sahf
cdq
xor
sbb
mov
cmp
ins
mov
add
pop
cmp
fsubrp
arpl
div
sub
jbe
push
push
shr
std
add
cmp
sar
xor
cmp
mov
pusha
xchg
adc
das
ins
int3
cli
movs
(bad)
call
fisub
or
iret
(bad)
xor
repnz
jnp
rcr
lods
and
sub
pop
or
inc
jno
mov
bound
mov
fbld
imul
call
movs
clc
sbb
cmc
sub
icebp
push
data16
lods
mov
outs
lock
pop
out
jne
retf
push
push
lods
inc
push
sbb
int
jecxz
mov
adc
or
out
(bad)
mov
mov
add
sub
push
xchg
xor
std
mov
cli
add
adc
mov
push
ja
mov
les
(bad)
test
sub
jbe
xchg
sub
enter
into
pushf
sar
leave
mov
leave
or
pop
xor
xlat
stos
sub
add
ja
pop
lds
scas
test
shl
and
adc
pop
ja
and
stos
test
mov
mov
mov
adc
xor
mov
icebp
pusha
fwait
loop
mov
imul
int
pop
jg
fs
fsub
bound
std
sbb
sub
call
and
sbb
pop
les
js
add
or
inc
ss
leave
fcomp
(bad)
push
into
mov
adc
test
ins
scas
nop
sahf
cmp
and
add
jno
cmp
push
adc
sbb
mov
inc
dec
cdq
mov
aad
adc
daa
mov
xchg
adc
xor
inc
scas
mov
clc
xchg
sub
ret
rcl
aas
jg
popa
call
nop
enter
movs
xlat
aam
mov
sbb
sub
stos
fbstp
jl
cmps
dec
pusha
jo
cmovge
mov
shl
push
fistp
push
push
inc
pushf
mov
add
jo
scas
aad
sbb
(bad)
pushf
pop
mov
xor
hlt
test
push
xchg
mov
adc
dec
push
mov
pop
jbe
sbb
lea
stos
(bad)
ss
stos
and
xchg
jp
and
scas
xor
jae
test
shl
mov
cli
jbe
ins
test
mov
pop
cmp
sub
in
repnz
dec
rol
jle
mov
aam
ins
jl
push
outs
in
inc
arpl
add
inc
and
nop
sbb
cmp
push
fwait
bound
and
adc
icebp
sub
jbe
adc
xor
das
mov
retf
rcr
jge
dec
push
inc
push
xchg
push
loopne
mov
mov
(bad)
mov
bound
jno
popa
xchg
adc
and
xchg
aad
jp
jmp
aaa
xchg
push
(bad)
ds
or
or
mov
or
push
push
xchg
or
adc
es
loope
push
pop
lock
xchg
in
add
mov
pop
movs
jbe
sbb
cwde
mov
xchg
cld
je
pop
mov
test
aaa
jno
xor
out
mov
xor
xchg
cmp
and
leave
aad
dec
fcmove
jnp
(bad)
mov
stos
or
js
arpl
fstp
xchg
(bad)
cmp
or
add
dec
scas
addr16
cmp
mov
dec
nop
fnstsw
xchg
pop
call
sti
pop
stc
cmp
fiadd
xor
(bad)
lods
cs
inc
jb
test
inc
sbb
sbb
rcr
frstor
fnsave
ror
dec
sbb
inc
aaa
cmp
xchg
scas
les
xor
inc
xor
or
mov
dec
mov
add
or
ret
test
push
in
mov
mov
push
cmps
jo
scas
sbb
jp
aad
sub
retf
sbb
jge
pop
shl
xchg
call
adc
xor
push
shr
aam
mov
outs
jo
(bad)
icebp
mov
xlat
push
lods
jno
jne
xchg
sbb
sub
das
stos
push
mov
inc
xlat
xchg
jo
and
sbb
sub
inc
lahf
jne
sub
int
adc
pop
jle
aaa
(bad)
mov
gs
shr
neg
mov
mov
test
ss
es
cli
cli
fidivr
sub
das
xchg
js
dec
pushf
mov
shl
jg
inc
cmp
test
nop
je
sbb
mov
xchg
std
jmp
mov
xor
push
int
mov
push
not
sub
fistp
test
dec
dec
mov
or
xor
dec
cs
(bad)
lock
mov
adc
pop
in
outs
out
push
mov
adc
(bad)
pusha
(bad)
hlt
or
sbb
inc
mov
push
stc
mov
bswap
pushf
out
jb
(bad)
jecxz
or
popa
adc
jecxz
cmc
loope
xchg
pushf
jno
sub
scas
or
ss
sub
icebp
fisttp
mov
inc
and
dec
ins
lea
add
and
sti
cld
mov
cmps
das
fsub
fwait
int3
out
dec
pop
lahf
push
dec
mov
repz
mov
push
sub
in
dec
push
xchg
out
call
enter
pop
test
sar
stos
test
test
iret
mov
test
pop
inc
enter
xchg
cli
xor
dec
and
retf
fcmovne
inc
xor
adc
add
es
sbb
(bad)
lahf
jl
push
ss
fucompp
outs
inc
xchg
(bad)
sbb
pop
iret
repnz
xor
mov
dec
sbb
push
adc
jne
js
sar
test
cmp
mov
push
and
adc
pop
cmp
mov
out
sti
adc
je
std
(bad)
mov
cwde
xchg
popa
int
out
sub
lods
mov
push
mov
mov
adc
jb
retf
cmps
and
and
sub
mov
mov
icebp
or
ins
outs
add
rcl
out
xlat
pusha
cld
inc
dec
jb
mov
out
sbb
push
pop
or
hlt
jg
mov
mov
push
dec
ret
call
mov
mov
inc
addr16
lock
mov
adc
stos
mov
int3
les
(bad)
sub
fild
mov
out
or
xor
(bad)
(bad)
mov
pop
adc
popaw
cli
or
inc
sahf
mov
bound
sti
or
push
mov
dec
fisub
or
jns
pop
push
pop
add
mov
or
pop
mov
je
push
xor
int3
pusha
mov
ds
test
cmp
mov
mov
inc
jp
aas
xor
jp
imul
inc
add
add
fisubr
add
movs
cmp
cmp
inc
fisub
xchg
das
ins
daa
aaa
clc
fistp
fcomip
inc
test
mov
push
and
push
shr
xchg
and
test
fsub
rcr
pop
fdivrp
jecxz
dec
jp
jae
lock
adc
clc
call
mov
xchg
sbb
cld
int3
pop
and
in
cmp
push
mov
cmp
test
je
cmp
and
sub
sar
push
int3
into
imul
and
outs
cwde
xor
imul
sub
sar
cmps
sub
xor
ja
mov
sahf
add
(bad)
ficomp
pop
or
mov
xchg
test
(bad)
mov
push
and
fldcw
or
push
push
pop
sub
iret
xchg
outs
cmp
jmp
sbb
jns
add
sub
pop
adc
pop
fnsave
hlt
in
xor
aad
inc
repnz
sar
adc
stos
ret
push
in
adc
jno
inc
test
mov
(bad)
or
sti
xor
adc
fbstp
pop
jnp
mov
dec
cmps
mov
(bad)
jle
rcl
adc
aaa
daa
loopne
jmp
adc
inc
sub
std
(bad)
ja
or
cmp
xor
pusha
cmps
addr16
cli
mov
jge
xchg
jns
cwde
mov
repnz
jno
cmp
call
xchg
data16
mov
iret
inc
push
fwait
jle
pop
int3
adc
add
and
xlat
enter
sbb
ja
clc
fisttp
push
jp
push
mov
(bad)
popf
xor
inc
and
out
add
push
or
mov
sbb
push
xchg
je
lock
(bad)
fwait
cmp
sbb
jae
in
adc
sub
mov
popa
sub
fcom
sbb
sub
push
shr
icebp
mov
es
cs
cmps
pop
daa
ins
xchg
repnz
mov
test
jbe
ret
pop
jmp
rol
xchg
fdiv
sub
pop
push
inc
add
daa
fidiv
ins
jl
popa
outs
mov
out
lock
rcl
ret
sub
push
add
nop
jno
xor
repz
int
mov
(bad)
mov
mov
mov
mov
pop
scas
mov
imul
xchg
jmp
add
scas
dec
retf
std
or
lds
add
push
and
jge
into
popf
mov
push
jb
cmc
jmp
cmp
and
jg
sub
sbb
sbb
sbb
pop
mov
aam
cdq
dec
jecxz
in
test
out
inc
in
mov
(bad)
fmul
fst
popa
xchg
aas
push
outs
mov
and
xchg
leave
ja
cmp
mov
or
xor
xchg
ficom
and
(bad)
dec
pop
sbb
lds
xlat
xchg
ss
inc
cmp
in
cld
add
dec
cli
adc
jmp
repnz
sti
fxch
mov
test
mov
push
jge
out
cmc
shl
pop
and
sti
fild
scas
iret
jle
inc
and
sbb
or
and
(bad)
icebp
push
push
popa
ss
mov
rcl
mov
fistp
sub
add
and
fstp
inc
mov
(bad)
push
sub
icebp
jp
push
scas
arpl
fucomi
pop
or
xchg
test
ret
mov
push
pop
or
jecxz
icebp
lods
fistp
jnp
mov
ins
or
out
add
xor
(bad)
aad
icebp
sub
xor
xchg
jae
inc
cmp
jno
imul
jp
xor
mov
shl
xchg
jp
inc
std
sbb
or
dec
movs
mov
xchg
shl
pop
outs
cmc
leave
mov
mov
xlat
push
adc
test
cdq
iret
mov
jle
mov
les
push
in
rcr
mov
and
jmp
add
in
cmps
pop
ss
clc
push
xor
ja
sub
or
inc
xchg
js
xchg
pop
fidivr
leave
ret
xor
call
je
and
pop
pop
pop
push
sub
mov
lahf
(bad)
mov
xchg
repz
mov
pop
pop
(bad)
pop
rcr
cwde
ret
xlat
pop
pop
xchg
rcl
mov
pop
pop
push
nop
fidiv
loop
int
and
mov
test
xor
fldcw
rcl
dec
push
jns
data16
and
fist
leave
loope
pop
sub
xchg
outs
fucom
sti
stc
mov
stc
lea
mov
mov
push
das
xchg
addr16
mov
sub
jle
pop
es
stos
pusha
dec
cli
loope
mov
fs
mov
sub
fs
lea
cmp
pop
add
push
push
push
rol
xchg
adc
js
lods
aaa
xor
stos
imul
into
repnz
int
and
or
ret
outs
jno
iret
xor
sub
push
sar
sub
jg
mov
ins
retf
(bad)
jmp
xor
div
mov
jb
addr16
xchg
lods
xchg
mov
jmp
loop
xchg
into
add
mov
call
push
dec
cmp
pop
cmp
jmp
cld
inc
push
in
aas
jecxz
ss
cmp
ds
xor
or
mov
sbb
xor
cdq
add
(bad)
pop
jmp
out
daa
fisub
mov
adc
inc
cmc
mov
add
mov
leave
std
js
jae
mov
shl
pop
mov
inc
sahf
add
add
test
ss
cmps
pop
push
out
cs
js
(bad)
ja
lea
int
jl
sub
loopne
and
dec
outs
xchg
popf
dec
in
(bad)
out
mov
cmps
push
and
sub
jb
pop
xor
add
xor
jmp
xor
cmp
fsub
xchg
cmps
call
pusha
rcr
xchg
sub
pusha
ds
jecxz
int3
mov
js
xchg
add
(bad)
icebp
fisttp
and
fsubr
jg
or
add
clc
mov
frstor
rcr
push
jo
repnz
shl
sbb
and
js
pop
mov
sub
dec
push
push
nop
popf
mov
in
dec
aaa
jnp
sbb
add
cld
xchg
dec
sbb
popf
jl
cli
jle
bound
push
cs
mov
push
retf
stos
xchg
jg
(bad)
adc
clc
jg
nop
mov
pushf
cmp
sub
sar
ret
inc
std
aad
mov
push
daa
sub
inc
pop
lock
jnp
outs
jbe
mov
inc
dec
mov
fisttp
xor
dec
dec
data16
mov
ja
clc
outs
outs
movs
leave
or
xchg
test
dec
or
push
movs
out
sar
gs
pop
ins
(bad)
loop
out
shr
or
sub
push
ins
sbb
loope
mov
push
xchg
adc
jge
dec
jmp
fucomip
xchg
mov
dec
add
aaa
xchg
mov
adc
cmp
sub
xor
outs
jecxz
retf
test
mov
mov
jle
hlt
adc
and
sahf
mov
imul
sub
inc
scas
mov
call
in
(bad)
iret
push
pop
out
nop
lock
dec
(bad)
mov
test
ja
cmps
push
pop
fmul
shr
jno
test
jae
(bad)
xor
mov
daa
mov
ret
sub
pushf
inc
hlt
push
inc
(bad)
push
add
dec
inc
(bad)
sub
shl
dec
inc
adc
sub
fidivr
cmp
xchg
cmp
xchg
mov
and
xchg
fimul
mov
das
imul
sbb
icebp
xchg
xchg
push
aaa
mov
loop
mov
imul
mov
dec
push
fdivrp
cli
les
movs
mov
xor
pop
fiadd
inc
pop
push
clc
in
fidivr
jg
test
push
test
push
dec
pop
inc
or
jae
outs
jle
add
in
jne
iret
arpl
repnz
mov
and
movs
sbb
cmc
mov
add
push
dec
or
xor
scas
sub
adc
outs
mov
loope
inc
(bad)
sub
ret
(bad)
icebp
or
in
cmp
shr
imul
cmp
bound
cs
das
xchg
xchg
push
ficom
sbb
sub
leave
in
pop
call
(bad)
push
cmc
sub
mov
jecxz
inc
push
push
test
fwait
xor
stos
and
data16
xchg
adc
mov
mov
into
enter
pop
inc
dec
jge
jo
dec
sbb
inc
mov
mov
sti
jmp
bswap
jns
jle
stc
cmp
mov
jge
inc
dec
repnz
aad
lds
stc
dec
shr
enter
jbe
movs
data16
cmp
leave
pop
(bad)
movs
jne
fisttp
ss
xor
(bad)
call
inc
and
xchg
mov
pop
xor
and
mov
jno
ret
aam
les
pop
loop
mov
in
cmp
iret
fs
sbb
push
outs
push
jnp
sub
loope
and
push
adc
cwde
sub
movs
iret
out
jp
dec
jle
outs
nop
cwde
cmp
call
outs
shl
or
mov
add
jle
(bad)
pushf
aaa
out
jmp
add
or
hlt
and
mov
iret
retf
xor
in
pop
xchg
dec
xchg
and
inc
and
popf
adc
mov
pop
rcr
lldt
leave
push
pop
out
mov
mov
fwait
(bad)
xchg
cmps
jecxz
pop
adc
dec
sbb
push
outs
or
mov
loope
sbb
xchg
push
add
jl
add
shld
sub
arpl
popf
jl
(bad)
lock
push
add
in
(bad)
mov
gs
es
mov
inc
mov
adc
ret
out
cmp
mul
lahf
push
pop
pushf
jg
inc
xchg
inc
xor
jg
push
mov
cmp
aas
and
mov
add
les
mov
and
out
in
fnstenv
jmp
or
ins
jge
xor
adc
pop
xchg
retf
push
outs
fsub
add
sub
cmp
cmc
sbb
jno
mov
fbld
or
cwde
mov
test
fs
gs
xor
inc
mov
mov
leave
jmp
pop
int
sub
shl
mov
mov
and
imul
pop
movs
icebp
xchg
ja
mov
pop
add
(bad)
retf
repnz
idiv
aad
fst
jns
adc
adc
sbb
stos
or
sub
cmp
pop
arpl
xchg
adc
rcl
inc
fisub
dec
lock
mov
adc
inc
pop
(bad)
mov
movs
or
push
pusha
movs
adc
or
jmp
fsubr
mov
cmp
stc
mov
and
push
and
mov
push
lea
fwait
add
cmp
and
stos
inc
pop
push
inc
out
or
push
leave
inc
loopne
push
push
cli
clc
je
ret
pxor
and
xor
add
and
shl
sbb
fcomp
mov
int
push
or
push
add
sub
add
mov
retf
call
jno
pop
scas
push
and
(bad)
call
arpl
lea
scas
push
jbe
and
mov
mov
movs
test
gs
adc
xor
(bad)
adc
cmps
lods
mov
std
lahf
and
int
xor
inc
in
inc
push
stos
dec
dec
pop
outs
(bad)
pop
inc
loop
jl
movs
and
mov
mov
ss
xor
(bad)
ret
jecxz
(bad)
scas
jae
cdq
xor
adc
mov
mov
or
jno
pushf
lods
mov
mov
lds
sbb
pushf
neg
movs
mov
cmp
retf
imul
and
sub
das
adc
test
outs
je
hlt
dec
mov
ds
sbb
arpl
ss
xchg
imul
mov
mov
je
add
pushf
push
and
mov
and
sub
loope
arpl
pop
pop
mov
fcom
jbe
mov
arpl
imul
and
sbb
fwait
add
pop
fld
sbb
js
lahf
lahf
and
jmp
ret
sub
or
sti
daa
jns
jmp
loopne
push
jmp
fs
in
call
outs
cmp
mov
mov
xor
mov
xchg
bound
jl
xor
aam
sub
fdiv
icebp
jae
loopne
ins
les
xchg
cmc
sub
dec
rol
mov
xchg
mov
das
add
xchg
repnz
cmc
inc
pop
mov
js
mov
pop
lahf
push
jmp
imul
iret
int3
mov
jp
cdq
int3
and
test
or
pop
jle
imul
cmp
je
dec
cdq
fld
xchg
out
jle
xor
xchg
iret
ret
inc
int
dec
rol
dec
shr
add
(bad)
out
iret
xchg
(bad)
int
cmp
xor
cmp
sub
cmp
mov
outs
sahf
mov
lock
pop
bound
and
call
int
scas
xchg
std
out
push
add
cld
sbb
mov
test
jle
(bad)
push
inc
sub
scas
lds
ins
aam
out
(bad)
and
cmp
fld
pop
fidiv
adc
cs
push
icebp
shr
out
cmps
sbb
and
mov
call
movs
cmp
push
jo
sahf
xchg
xchg
push
cmc
mov
push
mov
xchg
sar
mov
fst
and
sbb
or
mov
mov
inc
xchg
push
js
adc
mov
retf
jle
lods
int3
loop
cmp
cmps
xchg
into
pop
xor
xchg
cmc
cmp
and
jne
addr16
mov
call
dec
pop
cmc
call
ror
mov
ins
xchg
out
rcl
mov
xchg
and
test
mov
and
stc
dec
lods
adc
and
neg
pop
push
xor
jne
add
xchg
add
(bad)
data16
mov
adc
ret
outs
fsqrt
jmp
jo
pop
push
outs
pop
jmp
jg
jg
dec
es
jnp
out
jne
icebp
sar
outs
cmp
les
js
cld
dec
retf
push
push
movs
or
jmp
add
out
sbb
dec
or
and
mov
xchg
lea
das
rcr
scas
xchg
jl
push
std
cwde
or
mov
iret
jns
in
in
jmp
lds
cld
movs
lods
cmps
fld
ja
mov
jecxz
rcl
sub
arpl
data16
sub
adc
dec
dec
adc
(bad)
fldenv
cwde
rcl
pop
cmp
dec
pop
ja
hlt
fwait
jge
(bad)
sub
cmp
bts
sub
sar
push
sbb
jp
mov
jmp
dec
jne
dec
(bad)
mov
repnz
popa
mov
mov
inc
aad
mov
sbb
pop
xchg
xadd
sbb
je
cmc
adc
adc
add
cmc
push
movs
cmps
int3
xchg
lock
pop
inc
retf
push
pop
into
bound
inc
push
dec
xchg
pop
loopne
lds
stos
push
das
jmp
push
push
xor
and
lahf
mov
sbb
xor
xor
push
push
ins
js
mov
cmps
aas
(bad)
adc
mov
fisub
test
punpcklwd
xchg
inc
retf
(bad)
jmp
xor
mov
ror
lea
div
mov
lahf
ins
shr
or
ror
jns
lds
jmp
add
mov
xor
jmp
jno
jb
push
test
test
mov
mov
xlat
xor
rcl
add
adc
xchg
aaa
stos
adc
push
mov
sahf
adc
sbb
inc
scas
push
jge
loopne
retf
mov
jmp
lahf
mov
push
rcl
das
mov
mov
mov
mov
mov
xchg
mov
(bad)
jns
cld
clc
stos
in
sti
ret
adc
rcr
gs
cli
jne
mov
mov
inc
stos
cli
out
jb
sbb
jmp
shr
add
fs
cld
fidivr
shl
movs
arpl
outs
cmps
iret
pop
push
sbb
push
push
mov
loop
in
pop
imul
retf
outs
mov
mov
dec
ror
bound
in
adc
mov
or
jmp
lods
xchg
pop
lods
inc
mov
aam
push
ret
dec
cmp
add
sbb
push
(bad)
mov
ds
or
cmp
ret
add
xlat
popa
cld
mov
lea
dec
or
(bad)
fmul
dec
test
mov
sub
pop
pop
sub
ficom
pop
outs
in
cwde
enter
test
shr
movs
push
sar
jno
out
cli
mov
les
sbb
std
mov
pop
leave
leave
(bad)
mov
out
lock
xchg
enter
mov
xlat
xchg
and
inc
and
scas
adc
(bad)
cdq
mov
inc
xchg
add
(bad)
cmp
or
fistp
jne
sbb
rol
shl
lahf
jg
mov
dec
mov
cmps
mov
cld
aas
ja
pop
ret
call
in
mov
pop
inc
dec
inc
or
mov
jmp
ficom
(bad)
ficomp
pop
aaa
test
mov
sbb
rcl
inc
movups
rcl
ss
xor
adc
stos
cmps
mov
mov
cmp
adc
and
mov
jl
dec
test
dec
nop
push
push
inc
xor
cld
sbb
xchg
and
sahf
xor
mov
aas
mov
inc
xlat
test
addr16
mov
stos
push
jo
dec
pusha
stos
pop
xchg
xchg
jno
call
push
inc
and
ins
and
cmp
adc
inc
xchg
mov
xor
push
imul
pop
pop
mov
mov
pop
int3
add
and
cs
mov
push
adc
fild
popa
pop
xchg
(bad)
cmp
test
add
stos
mov
(bad)
push
fs
test
or
jns
sbb
(bad)
adc
sub
adc
scas
mov
xchg
dec
inc
xchg
adc
fidiv
cwde
xchg
sub
fist
xor
popa
cmp
inc
int
jle
cmps
sub
lods
sbb
ret
fstp
cli
push
test
pop
xchg
data16
mov
push
mov
fidivr
xchg
cld
dec
cmp
mov
(bad)
jle
sbb
mov
pop
fidiv
movs
jae
test
cmp
mov
adc
mov
(bad)
push
dec
retf
inc
cli
sub
mov
inc
jno
push
lock
out
adc
sbb
push
fs
push
jecxz
in
inc
mov
test
jle
xchg
adc
gs
or
int
pop
fdivr
jge
in
fisub
inc
push
xchg
xor
fild
mov
jl
and
and
mov
stc
jge
mov
pop
pop
call
and
hlt
(bad)
dec
in
loop
cmp
xor
das
push
cld
cmp
inc
push
dec
cmps
sub
and
(bad)
push
(bad)
retf
stos
xor
cwde
jmp
fidivr
jb
in
adc
pop
lods
rcr
fwait
sub
xor
popa
in
ror
imul
jno
sbb
sbb
pop
and
mov
mov
xchg
inc
call
stos
js
and
and
jo
add
add
mul
test
out
pop
cmp
rcr
push
xor
mov
int3
and
inc
mov
sbb
add
sub
jge
mov
push
leave
add
mov
add
out
call
and
jle
mov
adc
push
fbld
imul
popa
fldenv
test
cmp
pop
enter
in
jg
pop
jle
call
xor
adc
xchg
test
jbe
cmp
in
mov
cmp
(bad)
loop
bound
test
push
sbb
hlt
xchg
les
pusha
and
loopne
or
into
cs
xor
pushf
ss
or
xchg
jecxz
sub
or
mov
sub
mov
dec
jmp
stos
cmps
push
es
(bad)
int
sbb
nop
retf
ss
hlt
popf
lods
jl
dec
mov
sub
mov
(bad)
stc
or
pop
mov
xor
popa
cwde
cmc
or
xchg
or
jae
jmp
cmps
cmc
ror
les
xchg
iret
cli
rcr
jle
sti
pusha
hlt
hlt
mov
(bad)
(bad)
sahf
add
push
shl
fadd
ds
ins
loopne
mov
call
push
outs
es
jbe
and
cmp
cs
add
sahf
inc
sar
add
lahf
push
test
repz
out
cld
nop
cmp
sbb
sub
xchg
scas
jne
mov
dec
mov
out
and
repz
enter
sbb
shl
dec
mov
lods
push
test
shl
jnp
xchg
into
mov
outs
mov
gs
adc
mov
stos
rcl
out
inc
push
mov
jp
addr16
push
mov
mov
je
jge
sar
or
mov
test
out
test
sub
mov
ret
mul
push
(bad)
pusha
add
dec
stos
push
sub
fsubr
out
lods
dec
test
leave
sahf
mov
xchg
xchg
add
aam
mov
aas
and
cmc
(bad)
sub
dec
xor
aas
mov
push
add
xor
inc
cdq
stos
das
pop
ins
daa
stos
cmp
stos
xchg
pop
or
xchg
xchg
mov
out
repnz
or
ret
mov
pushf
ds
sbb
push
movs
scas
imul
(bad)
push
pop
inc
mov
pop
jmp
pop
outs
mov
int
pop
add
and
jnp
sbb
call
mov
popf
fistp
call
xlat
mov
enter
in
mov
nop
pop
into
sub
iret
xchg
sbb
xchg
mov
dec
cmp
push
addr16
xchg
add
outs
add
data16
mov
jle
sbb
adc
hlt
in
xchg
jae
push
mov
jecxz
adc
pushf
sbb
xor
ds
lods
out
stos
or
rcr
adc
les
pushf
outs
je
pop
aas
pushf
push
int3
in
int3
rol
inc
test
sub
push
sub
lods
or
test
ffree
in
xchg
or
div
push
jge
gs
add
mov
cmp
cmp
imul
ja
jecxz
es
imul
jl
adc
mov
sub
xchg
ins
sub
sub
inc
cmp
sub
and
jmp
fisttp
std
adc
sbb
xchg
jl
inc
xchg
mov
int
mov
and
shl
stc
(bad)
jle
ds
stc
xlat
inc
and
xor
jmp
pop
jb
sbb
shr
ds
add
das
cmc
or
stos
addr16
loopne
and
dec
pop
jg
dec
jecxz
add
aam
adc
xor
aaa
gs
lods
jp
loop
popa
xlat
aas
lods
out
xor
retf
add
add
and
aaa
pop
and
jns
jnp
mov
jo
push
pop
fidivr
and
inc
sti
jp
pop
aaa
lods
sub
cmps
xchg
jns
cmps
xor
(bad)
pop
add
cdq
and
es
ror
mov
push
jmp
jmp
and
cdq
pop
xchg
mov
mov
mov
gs
mul
push
ss
pusha
in
xor
movs
neg
rcr
js
ins
mov
mov
out
inc
stos
add
ficom
cmps
test
adc
jnp
xlat
iret
add
jnp
jbe
mov
cmps
div
das
shl
jecxz
xor
jnp
mov
call
add
lahf
mov
add
jns
mov
dec
int
mov
push
data16
xor
jl
fucomip
mov
fbld
sti
je
and
out
pushf
iret
push
add
mov
mov
jmp
cmps
rcl
(bad)
jno
dec
push
cmp
clc
mov
pop
sub
stos
imul
add
jge
es
and
pop
ror
les
lea
sbb
imul
repnz
mov
add
nop
xor
test
(bad)
scas
js
aas
push
mov
mov
sar
adc
jmp
fsub
xchg
pop
je
cmps
pop
mov
add
push
push
pop
call
jg
retf
ins
and
xor
jb
mov
pop
aaa
sbb
jb
imul
or
sbb
repz
js
std
sub
sbb
dec
(bad)
(bad)
das
push
push
mov
mov
or
add
call
ins
push
xchg
mov
sbb
sbb
stos
push
repnz
pop
adc
icebp
icebp
pop
(bad)
push
xor
inc
or
mov
and
int
mov
dec
xor
push
out
js
stos
add
mov
mov
adc
nop
aam
xchg
in
or
clc
xchg
pushf
sub
scas
clc
or
out
out
push
jb
inc
xor
add
cmc
dec
ror
(bad)
je
pop
mov
out
bnd
push
sbb
movs
lea
bound
push
repz
clc
test
mov
out
cld
mov
mov
mov
push
inc
push
mov
pop
xchg
sbb
pop
iret
out
cmp
or
mov
cmps
imul
cmp
xor
mov
sbb
and
xor
add
cmc
jle
mov
lock
or
and
cmp
jnp
repnz
push
lock
sub
mov
xchg
pop
jns
xor
mov
(bad)
fnsave
loop
cmp
enter
jmp
je
(bad)
xlat
sub
mov
xor
push
bound
sub
push
jae
fisttp
cmp
sti
scas
int
mov
pop
add
add
cli
or
sbb
out
or
inc
(bad)
jae
retf
pop
dec
test
xchg
cmp
mov
cld
aaa
mov
push
sub
adc
xchg
push
xchg
jmp
sbb
lods
call
xor
inc
ins
or
mov
hlt
hlt
cmps
mov
ret
cs
sub
movs
pop
pushf
test
in
sbb
fs
(bad)
ror
jecxz
call
xor
mov
inc
out
lahf
xlat
inc
mov
sbb
dec
cmc
adc
push
add
inc
jmp
test
stc
sub
cmp
aam
jns
rcl
in
mov
inc
inc
or
inc
xor
out
js
int
jne
mov
fld
jmp
sti
add
push
push
inc
push
das
test
scas
dec
(bad)
pop
and
je
je
nop
pop
fld
cmp
and
jl
mov
jmp
jp
fisub
test
shl
pop
jecxz
pop
xchg
(bad)
dec
mov
jmp
jb
xchg
icebp
outs
sub
xchg
dec
cmp
or
xor
or
jl
cmp
outs
xor
sub
retf
jp
mov
and
add
cmp
jmp
jp
mov
outs
enter
inc
inc
mov
shl
sbb
add
xchg
add
sub
mov
jmp
mov
xor
movs
sbb
sbb
retf
or
xchg
out
push
ja
pop
ror
stc
pop
(bad)
ret
push
out
mov
or
jecxz
sbb
int
mov
mov
sub
mov
movs
fsub
add
jns
mov
loope
mov
call
jecxz
mov
dec
inc
dec
cmps
pop
ds
(bad)
cmp
jbe
shr
dec
xor
sub
scas
cdq
push
pop
popa
in
aad
xchg
test
dec
and
out
ror
cmp
jle
dec
jmp
adc
jg
(bad)
out
add
xchg
dec
mov
and
push
add
push
or
in
aaa
sahf
test
inc
pop
dec
les
xchg
inc
shl
(bad)
repnz
inc
in
loope
cmp
dec
xor
jecxz
and
ja
popa
outs
ja
shr
data16
(bad)
icebp
pushf
jecxz
push
rol
cli
cmc
sbb
pop
sbb
loopne
mov
std
sar
nop
stos
xor
icebp
or
jbe
inc
pop
add
ss
shl
imul
mov
stc
sbb
pushf
out
not
add
pusha
add
mov
ins
xor
push
inc
adc
mov
stos
add
mov
lea
add
jo
(bad)
repz
sub
add
fdivr
arpl
jl
and
inc
gs
dec
test
in
add
shl
and
inc
out
mov
mov
push
cmp
sub
out
ds
push
pop
jns
fwait
js
xor
test
mov
and
and
fsubr
xchg
xchg
jae
jecxz
mov
cmps
sbb
test
aas
pop
das
jbe
or
pop
push
mov
inc
inc
pop
and
and
xchg
loope
mov
and
add
mov
(bad)
and
scas
and
push
or
scas
lea
out
dec
loope
stc
sbb
jb
pop
loop
ret
and
mov
pop
pop
sub
mov
ja
push
adc
dec
mov
bound
mov
ret
ror
call
not
ret
outs
xor
aam
aas
pop
sub
lods
jmp
xor
and
xchg
mov
out
int3
(bad)
mov
mov
mov
xchg
cwde
add
dec
push
push
push
xor
adc
cmp
or
inc
cmp
out
pusha
sub
adc
loope
add
dec
mov
sbb
clc
pop
jbe
and
mov
stos
pusha
ds
fstp
xlat
cdq
jnp
cmp
(bad)
das
dec
aas
aam
fstp
pop
sti
clc
pop
cmp
dec
dec
mov
mov
pop
mov
mov
lods
jo
xchg
dec
mov
cmps
mov
xchg
push
mov
jo
imul
adc
sbb
ins
daa
inc
mov
mov
inc
sub
mov
gs
and
jle
bound
lock
bound
or
cmp
jp
mov
fwait
push
push
mov
jbe
jmp
gs
div
adc
xchg
dec
outs
sbb
cmps
push
lea
mov
push
cmps
adc
in
or
loopne
call
pop
scas
repnz
jns
stos
ins
mov
cmps
mov
xor
jg
jbe
gs
sub
jmp
mov
aam
test
mov
dec
push
test
pop
in
(bad)
jo
retf
mov
and
sub
and
mov
repnz
jle
xor
rol
add
jbe
adc
(bad)
pop
fnstsw
out
jae
movs
fucomp
int3
xchg
in
out
xchg
test
xor
inc
push
push
inc
push
sub
ror
xor
or
mov
nop
pop
into
pop
xchg
push
jns
fsub
fild
shr
cs
mov
fbstp
push
jns
dec
or
add
cmp
bound
fild
dec
outs
dec
and
mov
into
xchg
test
push
mov
sti
test
mov
pop
push
dec
enter
mov
mov
arpl
hlt
(bad)
(bad)
div
dec
jbe
pusha
dec
retf
cmp
pop
retf
mov
mov
lea
cdq
inc
lods
out
retf
fsubr
dec
fistp
call
xchg
(bad)
jnp
clc
push
xor
cli
dec
icebp
xchg
scas
fucomp
and
lea
rcr
mov
push
pop
rcl
test
sub
cmc
nop
mov
mov
es
xor
mov
leave
jl
inc
pop
loope
sbb
jo
rol
fucomi
jp
mov
retf
fild
jmp
cmps
enter
pusha
rcl
or
sbb
ret
adc
jl
dec
push
xor
mov
bnd
sbb
jo
cmp
iret
inc
pop
cmp
imul
dec
cmp
mov
add
dec
scas
push
ins
mov
mov
into
and
movs
(bad)
xchg
(bad)
jmp
dec
dec
xlat
sub
and
add
add
fsub
mov
ds
cld
pusha
es
adc
mov
push
mov
mov
cmp
pop
retf
lds
fidiv
out
cmp
nop
aas
sar
mov
and
in
in
fistp
call
lods
jmp
mov
sbb
dec
lods
cmps
push
dec
jns
cmp
lock
and
add
fs
sub
xchg
hlt
jb
sbb
gs
repnz
ss
pop
ins
jge
lea
cli
xchg
leave
jle
scas
xor
(bad)
in
jecxz
jbe
int3
dec
(bad)
add
test
xchg
je
fs
shl
paddsb
or
jbe
sbb
pop
xor
call
jbe
push
push
cmp
ss
mov
cmps
adc
dec
jp
cmovs
test
repz
dec
out
call
inc
xor
pop
xchg
mov
ror
or
xchg
in
inc
adc
(bad)
sbb
push
mov
shl
dec
and
mov
mov
arpl
fadd
in
test
imul
sbb
loope
add
arpl
mov
inc
adc
add
mov
add
push
jg
mov
std
call
mov
inc
test
pop
ficomp
cmp
leave
jge
pop
jnp
mov
inc
dec
jbe
sub
inc
imul
cdq
push
xor
dec
jp
dec
pusha
stos
dec
mov
and
inc
dec
jnp
xor
lds
dec
pop
mov
dec
(bad)
mov
pop
dec
sbb
rol
push
mov
out
mov
repz
clc
gs
movs
xchg
in
enter
dec
in
(bad)
cmc
and
or
loop
sub
imul
enter
ret
int3
dec
push
inc
xchg
xor
sti
add
retf
aaa
imul
mov
out
jne
clc
inc
stos
push
into
jg
int3
jb
mov
or
sbb
(bad)
bound
stc
xor
jge
fisttp
sbb
cmps
jb
mov
outs
sub
lahf
retf
jmp
fs
iret
idiv
test
jb
jp
xchg
dec
lahf
ret
or
push
loopne
mov
jle
sub
inc
je
mov
sbb
rcr
sub
divps
out
jle
jns
inc
and
(bad)
repnz
mov
cwde
daa
adc
int3
repz
(bad)
sub
out
jle
mov
aaa
retf
dec
out
(bad)
ss
xchg
add
outs
lock
int
xchg
(bad)
arpl
sub
lods
adc
outs
add
and
mov
ins
mul
add
inc
retf
test
jmp
jbe
nop
lods
(bad)
fistp
mov
sbb
scas
lods
xchg
jo
add
push
xchg
jb
scas
and
(bad)
clc
jg
out
imul
data16
sbb
aad
xchg
pushf
jae
dec
lods
popa
add
ds
ror
add
es
std
jo
jnp
jne
dec
retf
call
push
and
xor
xchg
push
mov
out
mov
add
and
cmps
cmps
out
fsubp
dec
mov
std
jmp
xor
mov
mov
mov
(bad)
fidivr
mov
push
add
rcl
mov
sub
inc
shr
push
inc
enter
mov
ret
xchg
mov
adc
xor
pop
inc
cmp
inc
xor
mov
fcom
add
push
jge
sbb
aas
test
sti
fcmove
sbb
scas
pop
mov
push
call
push
in
xor
(bad)
jmp
pop
retf
mov
icebp
jne
sbb
lods
inc
or
mov
adc
bound
daa
push
fbstp
addr16
jnp
adc
iret
cmp
pop
push
cmps
mov
sub
adc
cmp
aas
inc
mov
loopne
fs
cli
arpl
mov
xchg
mov
fistp
mov
cmps
dec
movs
shl
dec
sbb
lds
sbb
cmps
or
jo
xor
add
fld
mov
fsub
push
cmp
push
int3
sti
sub
icebp
enter
arpl
in
ds
add
cmp
sub
shl
into
pushf
sbb
push
lods
push
pop
mov
lea
mov
and
cmps
stos
rcl
mov
dec
add
mov
pop
repnz
out
(bad)
stc
in
js
xor
mov
aaa
ror
btr
fsubr
lods
fisub
hlt
es
xchg
sti
stc
xor
jne
inc
cmp
jge
xlat
pop
mov
push
addr16
nop
sbb
ds
adc
dec
scas
push
xor
ins
mov
mov
inc
add
adc
mov
inc
add
sbb
mov
ret
mov
push
mov
xchg
enter
out
or
data16
sub
push
jp
or
rol
dec
retf
or
add
in
or
fist
fcmovnb
(bad)
jmp
mov
ds
(bad)
rcr
das
mov
pop
add
adc
rcl
clc
or
mov
pop
stc
xchg
jmp
jle
mov
call
sbb
pop
push
sbb
in
dec
mov
sbb
sub
rol
and
fisubr
xor
sbb
out
mov
jp
clc
ret
mov
adc
movs
js
fmul
pop
hlt
sbb
push
sub
jecxz
mov
into
push
cmp
(bad)
in
add
pop
test
or
stos
adc
pop
cwde
sbb
mov
jb
jecxz
jb
inc
lea
cmp
inc
adc
gs
mov
cmp
inc
lods
cmp
popf
dec
mov
and
add
sbb
add
bound
xor
or
out
dec
mov
sbb
fiadd
lock
xor
ficomp
js
(bad)
leave
ret
xchg
jge
cmps
xchg
jecxz
and
movs
xchg
mov
in
popa
outs
push
and
sbb
ret
je
push
loop
adc
pop
fucomip
std
jge
enter
sub
popf
(bad)
outs
ja
sub
out
xor
cmp
addr16
stos
sub
sti
push
js
sar
fdivp
ror
neg
loop
hlt
repnz
aaa
dec
inc
fsubr
or
mov
cmp
xor
mov
dec
push
xchg
mov
push
cld
sub
mov
aaa
add
dec
mov
jecxz
in
dec
pop
adc
adc
icebp
push
fs
mov
adc
sub
movs
hlt
pop
adc
jb
inc
imul
lea
lock
leave
ret
test
cmp
test
out
(bad)
jnp
ret
pop
idiv
call
cmp
mov
cmp
rcr
pop
jp
jb
sbb
sub
call
jp
add
test
and
xchg
mov
pop
nop
mov
ins
jbe
xor
mov
dec
ins
out
and
fs
jb
popa
adc
shr
xor
cmp
mov
push
push
inc
test
arpl
les
and
xchg
int
ror
sbb
scas
add
ss
push
mov
or
add
pop
adc
lock
sub
aam
mov
xchg
xchg
pop
rcl
hlt
bound
cmp
fwait
das
aad
out
or
int3
mov
mov
dec
in
cmp
add
sub
xor
xor
out
mov
inc
clc
cmp
mov
cmp
popf
fisttp
fst
inc
dec
or
mov
bound
dec
push
xor
popf
pop
cmps
retf
pop
test
pusha
xchg
ins
es
gs
ficom
leave
addr16
xor
xchg
cmp
add
bound
or
jge
dec
je
xchg
xlat
nop
sub
mov
arpl
push
pop
and
xor
nop
retf
cmp
push
mov
mov
or
adc
dec
xchg
push
mov
pop
fdivr
and
pop
arpl
out
cmp
or
sbb
ret
push
sbb
repnz
jns
in
push
call
inc
xchg
and
cmps
loopne
sub
adc
call
ds
pop
out
jmp
push
lods
in
loop
push
fcom
imul
mul
or
aam
clc
xor
dec
arpl
adc
aam
mov
mov
fdivp
popa
xor
in
arpl
fist
sub
iret
scas
sbb
rcr
sbb
adc
jnp
cli
call
xchg
fdivr
xor
hlt
int3
jl
and
pop
ss
xchg
and
ins
pop
mov
adc
popf
mov
cmps
jno
xor
mov
push
sub
push
mov
fcomi
std
inc
jae
mov
sbb
fwait
popf
imul
js
iret
push
icebp
dec
loopne
shr
cli
mov
popa
lahf
test
cmp
cmp
sar
vmovhps
loope
stc
jmp
pop
pop
and
inc
and
call
adc
jl
rol
push
xchg
and
pop
mov
adc
jecxz
(bad)
sbb
push
nop
push
and
out
shl
add
(bad)
mov
in
cwde
shl
push
and
test
gs
mov
sub
neg
(bad)
les
push
add
pop
pop
sub
cs
int3
inc
push
fild
retf
dec
cwde
mov
lods
mov
jg
loopne
push
adc
out
(bad)
ds
cmp
pusha
(bad)
call
fidivr
popa
dec
jo
xchg
inc
jecxz
push
cmp
daa
mov
xchg
pop
in
jae
lea
adc
xchg
jl
arpl
mov
scas
ins
xchg
xchg
adc
push
push
mov
imul
inc
std
js
sub
inc
rcr
enter
lahf
sub
ror
jae
xchg
add
push
cmc
jbe
xchg
jp
jp
mov
mov
or
cmp
or
and
sub
inc
fdiv
fisub
imul
stos
mov
ins
jmp
in
push
mov
sbb
pop
sub
adc
inc
xchg
in
popf
clc
cmp
jo
push
pushf
jae
push
jecxz
sahf
repz
fsub
pop
ret
inc
lea
xor
push
jo
cmps
sbb
imul
sbb
jmp
jg
test
adc
aam
lds
cld
inc
adc
loop
out
mov
cmps
mov
dec
xchg
jecxz
pop
fmul
add
arpl
inc
lock
add
in
sub
int
mov
and
jmp
push
pushf
mov
or
xor
cmp
push
int
pop
inc
inc
mov
mov
stos
or
fwait
jne
cmc
loope
xchg
gs
dec
xchg
xchg
pop
mov
repz
sub
add
rcl
lahf
stc
xchg
cmp
sti
pusha
mov
lds
push
fdiv
ja
push
imul
push
mov
test
push
xor
or
scas
call
sub
lock
dec
hlt
xlat
shr
mov
mov
add
bound
jo
out
jae
int3
sahf
sti
mov
daa
test
mov
mov
jp
dec
and
fcmovne
xlat
sub
popa
das
fadd
stc
dec
pop
mov
pop
ss
scas
add
xchg
aaa
in
jg
ja
push
outs
sbb
imul
bswap
xchg
(bad)
aas
int3
std
fstp
clc
movs
out
inc
pop
int3
mov
loopne
adc
push
jmp
mov
pusha
in
hlt
xchg
sbb
and
popa
ss
mov
or
mov
sar
add
add
out
jmp
pop
rol
and
cmp
fsub
test
aad
inc
lods
rol
cmp
xor
push
adc
push
ds
fsub
jae
cld
daa
(bad)
push
dec
fdiv
mov
inc
in
fcmovu
js
ins
cmps
cvtdq2ps
fidivr
push
mov
call
mul
and
and
dec
test
cli
inc
jmp
mov
out
inc
jmp
xor
icebp
inc
ja
cmp
repz
fstp
(bad)
arpl
mov
and
scas
lods
xchg
sbb
dec
fimul
in
icebp
and
push
int
xchg
sub
loope
in
cmps
mov
ins
push
cmp
push
daa
xchg
xchg
std
mov
add
jmp
outs
sub
mov
aaa
es
(bad)
popf
xor
ins
and
push
dec
je
inc
inc
jae
loop
jae
xor
fninit
push
sub
add
add
stos
js
nop
inc
ficomp
mov
mov
xchg
push
ins
xor
stos
cmps
xchg
jo
sub
movs
and
neg
adc
or
pop
or
adc
mov
xchg
jmp
pop
inc
in
xchg
or
jns
pop
lods
pop
stc
outs
les
xor
pop
inc
or
cmp
sbb
(bad)
out
and
cli
adc
xor
fwait
sbb
jp
xchg
pop
out
scas
mov
sti
sub
call
mov
mov
lock
inc
sbb
lods
addr16
in
call
push
cs
mov
push
pop
mov
iret
add
xchg
push
pop
xchg
mov
(bad)
fcom
fsub
nop
pop
or
adc
cmp
xchg
add
jne
dec
pop
retf
stos
jne
imul
dec
ret
cld
hlt
aaa
lahf
inc
jmp
fprem1
and
push
lahf
sbb
add
xlat
pop
ins
mov
test
cmp
jle
pushf
and
xchg
pop
rcr
jno
inc
test
mov
sub
add
cwde
xor
mov
shr
or
rcr
sub
push
fsub
push
xchg
xchg
adc
sahf
mov
in
dec
out
or
popaw
or
clc
and
inc
not
pcmpeqd
hlt
inc
mov
and
xor
pop
cwde
dec
adc
or
sbb
cmp
int3
mov
or
int
jmp
push
out
les
and
cmp
push
leave
ss
lods
xchg
outs
sbb
cmp
aad
sub
clc
shl
rol
sbb
adc
cli
fiadd
mov
sahf
adc
ds
movs
sbb
push
popa
or
dec
mov
imul
cmp
leave
mov
xchg
std
mov
(bad)
stos
or
daa
in
scas
cdq
test
adc
cmp
jmp
lock
cli
push
xchg
pop
jge
mov
dec
repnz
(bad)
rcl
fdivrp
ret
push
rcl
cmp
and
sbb
call
retf
or
add
cdq
lahf
fcom
pop
sbb
pushf
cdq
xchg
inc
push
mov
pop
(bad)
sbb
push
js
xor
add
dec
add
and
fiadd
or
cs
cdq
xchg
loop
dec
out
and
ret
aad
cmp
mov
pusha
mov
xchg
ficom
dec
or
js
outs
sbb
cmps
mov
jmp
inc
sub
pop
clc
rcl
cmp
popf
xor
ror
fsub
add
xchg
jnp
xchg
ret
je
jmp
int3
cld
call
sub
sub
add
adc
mov
jne
test
inc
xor
pushf
cmps
inc
and
jmp
mov
jb
cli
arpl
push
jge
popf
xchg
loop
movs
xor
(bad)
out
and
mov
pusha
les
movs
(bad)
mov
add
outs
xchg
push
mov
sar
sti
cmp
cmp
dec
repnz
mov
sbb
pop
call
sar
xor
sub
out
sub
and
sub
or
push
sub
adc
jmp
mov
adc
inc
jg
jmp
retf
out
loop
jecxz
rcl
mov
mov
xchg
loope
enter
ficom
in
mov
add
repz
and
int
push
shr
inc
mov
adc
(bad)
adc
or
out
jl
push
imul
jmp
(bad)
adc
push
je
and
shl
sbb
ret
push
push
outs
es
mov
inc
out
int
sub
push
inc
mov
cmps
outs
xchg
lahf
jecxz
or
xchg
retf
sti
daa
add
ins
dec
mov
mov
pop
add
out
mov
ret
stos
jno
test
add
sub
pop
retf
xor
std
pop
(bad)
cmp
les
jecxz
adc
push
push
hlt
jno
cmp
cmps
mov
xchg
mov
pop
cmp
js
mov
pop
cmp
push
sub
and
and
cmps
orps
ja
pop
jmp
iret
adc
adc
sar
cmp
movs
lahf
loope
cmp
in
stos
xchg
lods
sbb
pop
push
not
or
mov
nop
jge
sub
mov
add
pop
mov
(bad)
xchg
pop
xchg
loop
mov
stos
adc
scas
ds
call
sbb
jle
cmps
adc
mov
ja
adc
inc
les
shl
sar
mov
dec
daa
pop
fstp
aas
add
in
cmps
pmulhuw
arpl
or
jmp
call
js
dec
outs
retf
xor
daa
cli
inc
gs
fst
(bad)
(bad)
xchg
in
dec
test
fs
jecxz
aas
aad
(bad)
or
sub
cmp
stc
mov
sbb
or
sub
ret
jge
mov
jl
sub
movs
add
(bad)
scas
mov
jmp
pop
stos
and
lods
jge
sub
xchg
sar
dec
fadd
or
xchg
cmp
xor
xchg
sbb
and
enter
sbb
iret
outs
sbb
mov
or
stos
adc
push
mov
and
mov
idiv
pop
daa
and
outs
push
outs
xor
fsubr
mov
and
cs
dec
push
scas
cmc
mov
fild
pop
int3
fs
nop
pusha
dec
les
mov
pushf
stos
mov
mov
daa
add
cld
jno
or
popf
int
enter
mov
outs
sub
scas
sub
fwait
jge
add
push
sub
cli
test
test
xor
cmp
jge
xor
mov
xchg
push
mov
popf
bnd
fsubr
sub
push
inc
bnd
add
dec
jge
adc
sub
in
cmps
out
gs
jmp
jmp
test
retf
mov
retf
fild
aas
out
cmp
(bad)
lahf
(bad)
int3
nop
cmp
mov
cmp
imul
inc
lock
sub
or
cmp
jno
pushf
cmps
(bad)
ficomp
data16
aas
push
add
test
in
fs
push
retf
cmp
sub
loopne
outs
icebp
js
pop
mov
test
xchg
(bad)
jecxz
sub
in
xor
ins
jmp
xchg
scas
push
idiv
dec
mov
sbb
xchg
loop
stc
daa
xchg
pop
add
rep
(bad)
and
mov
mov
pusha
scas
and
inc
and
fs
(bad)
mov
mov
mov
xchg
int
fwait
xor
in
je
popa
sahf
xor
adc
aad
mov
and
mov
imul
mov
jnp
and
rcl
push
mov
mov
inc
pop
xor
shr
mov
mov
inc
push
jl
inc
mov
or
or
inc
sub
xor
push
and
xor
sub
or
jmp
inc
xor
popa
jbe
pusha
jb
add
adc
cmp
(bad)
(bad)
xlat
push
std
pushf
mov
arpl
inc
cmc
jns
into
adc
or
add
aad
mov
and
sub
nop
dec
ret
hlt
addr16
jp
into
mov
retf
push
cmp
fistp
ins
and
fcomp
xor
fisttp
stc
pop
cmp
outs
cmp
fisttp
xor
daa
xor
inc
or
gs
mov
call
sub
repz
push
stos
(bad)
lock
cs
ds
int
data16
and
push
mov
lods
xor
pop
in
xor
in
adc
(bad)
mov
and
xchg
dec
mov
pop
int3
hlt
dec
enter
loop
jge
cmps
fdiv
gs
retf
add
leave
and
add
mov
dec
push
mov
dec
cmp
adc
cmc
xchg
mov
jp
mov
jg
cli
sub
push
push
pop
mov
lock
and
adc
(bad)
cmps
mov
cld
in
jge
xor
inc
sbb
les
(bad)
pop
xlat
mov
retf
rcr
cmp
or
fsubr
mov
inc
dec
adc
push
add
loopne
fisttp
mov
inc
sub
in
add
adc
cmp
mov
adc
xor
push
cmps
or
jle
inc
cmps
dec
fwait
sub
sbb
cmp
jl
js
(bad)
push
test
xchg
sbb
ins
loopne
mov
push
jno
mov
sub
push
aaa
mov
dec
sub
ret
dec
int
jg
call
call
aad
pop
push
into
ins
hlt
fistp
cmp
sahf
movs
push
dec
(bad)
aaa
ror
std
adc
jns
jne
push
cwde
add
cwde
jnp
sub
les
xchg
dec
ficomp
or
jne
leave
stos
lea
xor
add
out
push
jne
daa
fcmovnu
mov
mov
outs
adc
cmp
sbb
fsubr
outs
dec
add
out
retf
fisttp
imul
dec
int3
push
punpcklwd
sub
shl
pop
cmp
inc
xor
xor
imul
xchg
movs
lods
int3
cwde
inc
aaa
sahf
aas
and
dec
xor
cmp
daa
mov
dec
xor
jo
pop
sti
int
(bad)
xor
and
cmp
sbb
mov
mov
xchg
stc
setne
(bad)
dec
push
push
movs
cld
in
call
enter
es
ret
aam
mov
and
fist
and
shl
jb
sub
mov
pop
out
out
dec
or
mov
or
mov
imul
test
jb
jnp
add
popa
popa
push
push
jle
xchg
pop
dec
cmps
push
(bad)
xor
dec
pop
push
lahf
retf
dec
ret
adc
call
clc
es
jno
add
ret
mov
adc
ins
add
ds
iret
adc
sub
loopne
push
or
jb
(bad)
push
sub
fwait
std
xor
stc
outs
rcr
scas
sar
mov
jmp
jmp
xchg
retf
lods
(bad)
jge
or
cmp
or
pop
outs
pushf
ret
cmp
mov
mov
adc
dec
in
stos
cdq
mov
call
retf
rcl
inc
push
jno
xor
ret
push
hlt
aaa
rcl
je
gs
(bad)
push
sbb
mov
cmp
sub
cmp
test
hlt
pop
cld
xchg
fwait
into
loop
lahf
scas
sbb
and
cmps
dec
rcr
jge
pop
and
jecxz
inc
int
mov
loopne
lahf
sub
xchg
mov
cmc
movs
loopne
data16
lods
dec
fnstcw
call
out
hlt
mov
shr
mov
pop
mov
add
fs
pop
push
stos
pop
cli
sbb
movs
push
int3
mov
sbb
jle
jae
popa
and
fld
sub
sbb
dec
pop
pop
xchg
and
pushf
in
mov
enter
pop
mov
loope
hlt
mov
jl
mov
adc
mov
sbb
xchg
out
cld
mov
and
in
xchg
es
mov
push
popa
and
stc
fwait
jge
fs
outs
cmp
iret
and
stos
es
ret
sub
nop
xchg
mov
movs
outs
adc
push
cli
sub
test
jae
daa
ja
mov
mov
push
and
jae
dec
lds
aad
test
jle
cmp
lods
(bad)
enter
pop
fneni(8087
cld
sub
and
jmp
add
add
call
lods
aam
push
cmp
xchg
(bad)
pop
daa
jae
cmp
xlat
scas
imul
mov
les
(bad)
(bad)
call
mov
idiv
jb
jmp
xor
mov
mov
shl
sbb
add
nop
jnp
push
sub
dec
mov
(bad)
push
mov
jmp
cwde
push
inc
stc
iret
pop
aad
popa
clc
imul
retf
pop
or
push
push
mov
(bad)
loopne
ins
adc
mov
in
stos
adc
test
repnz
outs
adc
lock
stos
cwde
jl
leave
jno
test
out
mov
arpl
test
dec
mov
jb
call
(bad)
arpl
or
add
push
jmp
push
aad
cmp
mov
jae
xchg
jne
ss
or
push
leave
call
movs
dec
aaa
test
jmp
es
mov
pop
ins
mov
jae
sub
fst
lods
into
mov
movs
push
pop
test
inc
test
test
pop
inc
xchg
jecxz
into
ins
leave
(bad)
lock
xchg
dec
inc
jo
stos
sti
out
ja
inc
sti
movs
sti
mov
push
sub
jg
imul
sahf
xor
aaa
sbb
scas
xor
std
xchg
icebp
in
and
dec
xchg
add
addr16
add
xchg
inc
xor
push
dec
shl
outs
sbb
icebp
sub
je
sbb
and
dec
push
push
pushf
cmp
stos
sbb
call
jle
clc
inc
mov
xor
in
sbb
movs
nop
popa
jae
and
mov
icebp
mov
and
push
inc
push
and
cmp
fwait
in
push
sahf
jl
dec
and
push
repnz
shl
rcl
popa
test
fiadd
jle
xor
pop
adc
inc
push
jo
xchg
and
fisub
push
mov
inc
nop
ins
push
outs
or
mov
adc
xchg
ss
add
movs
or
cs
aaa
paddsw
or
push
ret
sbb
hlt
and
mov
jae
ret
(bad)
xchg
adc
mov
adc
nop
jnp
js
add
adc
je
(bad)
lahf
dec
add
adc
push
pop
fldcw
sbb
and
inc
inc
jge
add
lea
lds
add
and
jle
mov
sub
das
(bad)
mov
dec
fisttp
pop
(bad)
push
ja
add
or
adc
in
fiadd
xlat
ret
fwait
pop
cwde
test
and
loop
push
cmc
xor
mov
gs
pop
lahf
and
jmp
out
adc
mov
mov
cmp
(bad)
test
sub
imul
(bad)
gs
or
iret
test
sub
inc
mov
xor
inc
repz
mov
aaa
mov
pop
mov
xchg
xchg
leave
and
xchg
arpl
ins
jae
rcl
int
call
push
push
test
std
mov
xlat
(bad)
or
je
sub
add
jg
(bad)
fisttp
test
pop
dec
jg
stos
(bad)
dec
lods
mov
(bad)
lods
jmp
add
cdq
in
inc
in
add
and
jmp
nop
push
js
inc
test
dec
ins
mov
or
dec
lods
dec
ds
mov
and
retf
js
movs
jmp
into
xchg
xor
push
jnp
loopne
sahf
data16
fst
and
push
cdq
inc
mov
in
aam
mov
adc
dec
shr
sbb
push
xchg
dec
ret
leave
dec
repz
pop
pop
or
mov
mov
loope
jne
in
mov
cmp
in
push
jnp
inc
pmaddwd
scas
push
cmp
gs
scas
xor
and
dec
jb
das
xchg
out
repz
adc
nop
out
adc
cmp
rsqrtps
ins
sti
pop
mov
jp
jmp
adc
out
jne
aas
sbb
rcl
fdiv
enter
push
mov
jmp
inc
cmp
loope
frstor
cs
popa
adc
dec
mov
pop
mov
sbb
cmc
jmp
mov
push
pop
setge
in
fucomip
je
pop
mov
mov
(bad)
mov
xchg
pop
shl
sub
mov
sub
xchg
push
mov
xchg
ins
imul
sbb
jmp
mov
add
or
stos
(bad)
bnd
dec
dec
fsub
xchg
(bad)
test
push
push
mov
jmp
dec
iret
mov
icebp
sar
frstor
or
js
(bad)
popaw
fimul
fimul
in
je
push
mov
fdivr
mov
dec
dec
mov
lods
sbb
inc
stos
mov
out
scas
dec
jl
arpl
adc
mov
pusha
data16
push
or
mov
(bad)
icebp
int
stos
imul
mov
ret
lods
(bad)
fidiv
sub
les
rol
es
inc
jno
pop
sub
and
fld
in
stc
popa
xchg
outs
mov
or
(bad)
or
js
inc
ins
retf
mov
pop
push
int
ret
cmp
(bad)
enter
aad
jmp
loope
mov
push
scas
cmc
aaa
dec
shr
js
xor
test
loope
jmp
sub
sub
dec
jp
test
push
mov
add
pop
xchg
es
test
cmp
sbb
loope
jp
add
xor
sbb
fst
retf
lea
iret
rcr
jnp
mov
nop
outs
jmp
push
inc
mov
pop
xchg
pushf
sbb
push
nop
clc
xor
add
xchg
and
xchg
mov
mov
sub
cmp
call
ja
js
add
jno
mov
fimul
leave
xchg
push
push
fwait
dec
mov
mov
sub
xchg
test
jmp
sbb
fwait
adc
outs
fist
ins
movs
shl
sbb
cmp
adc
lahf
jl
fiadd
or
pop
cmps
jmp
fidiv
pop
call
xor
int3
jg
mov
arpl
popa
in
rcr
ja
and
cwde
or
mov
popa
and
jecxz
sbb
mov
cmp
sub
fdiv
stos
or
repnz
daa
std
cmc
bound
adc
mov
popf
sbb
neg
push
push
pop
pop
sbb
cmp
es
or
jp
cwde
lock
sub
into
inc
std
stc
mov
arpl
stos
scas
stc
mov
fs
out
push
cmp
mov
iret
and
add
mov
pop
mov
cmps
dec
cmp
mov
dec
sbb
and
or
and
or
movs
outs
ret
add
inc
bound
or
cmp
xchg
xchg
mov
mov
push
pop
icebp
mov
or
inc
inc
(bad)
or
imul
cmp
(bad)
or
sub
lahf
gs
xchg
call
sub
in
mov
sbb
pop
push
jno
lods
jmp
mov
mov
pushf
or
addr16
pop
and
sbb
sbb
lahf
adc
xchg
enter
xchg
(bad)
not
in
mov
cmp
mov
jo
movsx
jno
mov
inc
xor
(bad)
mov
movs
xchg
retf
gs
adc
mov
xchg
rol
inc
je
dec
sub
push
mov
ds
imul
ret
inc
pop
push
ret
jbe
fwait
pop
sub
stos
(bad)
stos
retf
push
and
test
mov
movs
(bad)
jb
pop
into
retf
mov
push
rol
dec
fadd
test
xor
xchg
popf
scas
dec
in
jle
or
inc
call
mov
fs
aad
out
in
test
scas
push
sbb
cmp
in
push
imul
pop
cwde
je
mov
les
stos
sbb
jl
push
je
sub
and
sub
or
enter
(bad)
movs
jb
sub
push
sub
test
imul
ret
inc
push
fwait
rol
outs
mov
adc
inc
dec
mov
jo
ret
jne
xchg
push
inc
sub
into
or
cmps
leave
jl
or
int3
sahf
mov
push
cmc
inc
push
shl
ret
gs
neg
loop
dec
es
xor
in
mov
bound
jle
fisttp
pop
aaa
int3
call
int
or
icebp
call
push
mov
dec
cmp
sti
cwde
les
push
hlt
dec
pop
ss
jnp
movs
idiv
add
dec
fld
or
inc
mov
sbb
sbb
enter
mov
xor
ins
pop
mov
(bad)
jo
sbb
test
test
lea
mov
jns
add
mov
mov
mov
(bad)
lock
add
fadd
dec
add
xchg
loopne
imul
push
push
and
cmc
outs
ins
adc
ds
adc
adc
jb
mov
fs
sbb
mov
inc
arpl
jne
mov
jmp
(bad)
inc
repnz
outs
sti
sub
out
adc
add
xchg
fmul
enter
(bad)
sar
or
out
leave
pop
mov
test
(bad)
popf
xchg
cmp
ret
inc
adc
or
cli
ins
out
jne
mov
sub
and
sub
push
js
rol
fs
loopne
adc
sti
dec
fistp
ret
jp
cmp
jmp
dec
pop
idiv
fisub
and
pop
and
outs
inc
(bad)
pop
add
popa
jmp
sub
stos
mov
(bad)
mov
or
retf
add
out
arpl
repz
inc
dec
jno
(bad)
cmps
sub
add
iret
mov
lods
ins
sti
jo
ficom
xor
lock
push
inc
pop
stos
dec
sbb
dec
mov
les
test
cmc
pop
jns
fild
out
cld
or
mov
fnstcw
retf
add
cld
fwait
into
rcr
cmp
ja
outs
pop
or
inc
clc
(bad)
fistp
mov
jnp
cmovs
add
loope
cmps
(bad)
fs
mov
and
cmp
xchg
mov
pop
dec
inc
popf
nop
lds
mov
movs
es
iret
add
xchg
inc
test
loope
mov
or
mov
xor
adc
(bad)
or
xor
int3
js
in
js
lods
int
mov
add
or
fild
aam
push
inc
sub
push
inc
out
cmp
dec
mov
mov
ror
mov
icebp
pop
icebp
mov
icebp
sbb
les
jmp
inc
sub
sbb
ins
jae
xchg
push
mov
nop
jmp
shr
test
loope
sahf
jmp
enter
push
ins
(bad)
jns
mul
mov
(bad)
mov
add
(bad)
popf
retf
jp
neg
add
mov
pop
push
pop
or
aaa
rcr
bnd
jmp
scas
call
mov
int3
and
dec
xor
fdiv
inc
xchg
les
cmp
cmp
fidivr
lods
and
cmps
cmp
cmp
inc
and
fmul
dec
or
movs
outs
mov
mov
sub
sbb
and
in
in
mov
aam
mov
cdq
pop
repnz
ret
popa
dec
pop
cmp
fiadd
stos
repz
mov
movs
fsubr
xchg
jmp
cmps
inc
jno
fwait
mov
cdq
add
inc
xchg
pop
call
sar
pcmpgtd
in
in
push
mov
push
cdq
xchg
rol
cmps
xlat
nop
cmps
push
mov
loop
(bad)
jmp
dec
sub
add
je
mov
cwde
loope
hlt
mov
clc
inc
into
imul
shl
push
inc
sti
test
ret
loope
test
ret
aam
pop
std
sub
sbb
mov
jge
ins
or
mov
xor
jae
jecxz
scas
repnz
xchg
imul
mov
dec
xchg
outs
imul
mov
pop
lea
inc
outs
mov
sbb
repz
icebp
adc
pop
mov
scas
int
sbb
nop
sar
add
mov
int
add
mov
cmp
push
pop
ss
(bad)
pop
xchg
cmc
add
jg
add
(bad)
sub
(bad)
push
call
sbb
gs
js
jne
test
aad
(bad)
push
ficom
push
out
or
mov
mov
fstp
jmp
add
adc
push
(bad)
adc
pusha
out
inc
shl
ja
sub
out
xor
sub
mov
mov
add
mov
pop
lahf
jmp
fnsave
sub
hlt
push
xchg
cld
lahf
mov
cmp
cld
inc
sub
into
scas
(bad)
sbb
xchg
pusha
loopne
xor
addr16
test
or
cld
mov
pop
xor
and
adc
fwait
call
and
push
xchg
(bad)
dec
mov
stos
sahf
add
xchg
sub
fmul
pop
mov
mov
sar
loop
add
xchg
call
inc
pop
inc
cmp
loope
gs
sub
and
sub
pusha
mov
xor
pushf
sub
fist
push
mov
lods
adc
push
mov
xchg
sbb
pop
test
mov
dec
shl
(bad)
mov
cmps
psubusw
mov
std
popa
or
cmp
sbb
stc
fstp
sub
xchg
mov
jmp
and
mov
inc
lea
ins
cdq
cld
xor
or
pop
cmp
js
push
sub
inc
jno
and
xor
popf
out
and
call
fadd
pop
scas
test
popa
pushf
sub
inc
je
shr
push
nop
xchg
(bad)
inc
nop
inc
retf
mov
pop
pushf
cmp
xchg
cmp
ins
cmp
iret
inc
clc
cwde
mov
loop
cmps
xchg
sbb
retf
xchg
das
scas
cs
shl
lea
mov
mov
pop
fwait
pushf
popf
push
cmps
pop
inc
adc
push
add
clc
fwait
sub
pusha
(bad)
jmp
jl
or
fstp
push
call
cmp
or
inc
rol
mov
les
stc
add
jmp
adc
aas
cmp
adc
ss
xchg
arpl
fwait
xchg
daa
cld
not
dec
jg
sub
sub
retf
movs
push
les
sbb
outs
pushf
loop
dec
shl
stc
jge
and
mov
cmc
mov
popf
cmp
mov
pop
div
fisub
adc
jno
jmp
xchg
lea
div
jo
push
xor
inc
popf
inc
dec
mov
aas
sub
adc
mov
stos
mov
mov
inc
cmp
sub
dec
mov
dec
cli
loopne
sbb
inc
jl
fsub
sub
ror
dec
cdq
ins
mov
jg
or
fs
cs
shl
div
push
(bad)
mov
and
cmp
test
and
test
bound
or
lahf
xchg
fdiv
jns
cmps
cmp
mov
addr16
repnz
out
inc
fisttp
gs
sbb
outs
inc
popf
add
(bad)
mov
jecxz
movs
out
loop
mov
test
retf
fisubr
mov
std
mov
iret
rcr
sti
jae
jp
cmp
ins
lock
inc
les
sti
stos
inc
xchg
sahf
xchg
repz
outs
sbb
and
loopne
cmp
aam
call
adc
enter
jp
int
jne
std
mov
movs
sbb
xchg
pop
ds
pop
cwde
call
cli
jl
inc
dec
fld
lock
xchg
jbe
push
pop
pop
ins
xor
fcomi
sbb
pop
fsub
mov
or
cmp
sub
mov
hlt
jae
(bad)
sub
out
in
fdiv
or
jge
pmulhuw
sub
in
mov
movs
inc
aad
clc
mov
push
mov
pop
mov
pop
lods
push
jno
adc
add
into
jne
ret
sub
push
jge
xchg
mov
push
cdq
xchg
cmp
loope
dec
inc
je
dec
jbe
cld
dec
cmp
push
xchg
cmp
hlt
sbb
stos
mov
fsubrp
stos
inc
fst
pop
sub
movs
sbb
(bad)
in
mov
pusha
push
xchg
lods
scas
pop
aaa
pop
inc
aad
add
xchg
add
out
sbb
daa
in
sbb
lock
push
adc
push
cmp
addr16
test
retf
xchg
jge
in
jae
adc
bound
add
mov
(bad)
(bad)
(bad)
jmp
mov
sar
adc
test
data16
(bad)
int3
(bad)
push
call
std
push
retf
jmp
inc
mov
sbb
pop
push
cmp
pop
cli
sub
sub
jle
add
xchg
push
icebp
std
mov
jmp
mov
cmps
jb
push
jmp
mov
bound
adc
pop
cmp
xchg
inc
push
loopne
or
or
jmp
lods
repz
or
inc
pop
cmp
ret
and
sbb
mov
int
push
pop
adc
inc
inc
inc
inc
mov
or
mov
popa
imul
xor
push
fcom
push
mov
sbb
mov
iret
jno
xor
cmp
leave
int3
or
adc
dec
ss
adc
xchg
rcl
cdq
lds
jmp
in
(bad)
fiadd
imul
ins
dec
cmps
test
jae
adc
and
out
sub
jo
jns
pusha
inc
jle
cmp
cli
iret
or
in
xchg
xchg
pop
push
jecxz
cmp
pop
shl
out
mov
jmp
rcl
lods
sar
aam
lea
popf
sub
mov
mov
push
jmp
in
adc
fild
pop
loopne
mov
stc
push
xchg
cmp
cmp
in
mov
jle
mov
adc
jmp
xlat
mul
in
pop
xchg
xchg
cwde
test
sub
add
cli
xor
jb
pop
sub
pop
retf
out
and
stc
addr16
fld
iret
xchg
shl
mov
inc
(bad)
rol
mov
jae
cmc
and
cwde
xor
std
fldpi
jl
dec
xor
xchg
add
int3
fmulp
lods
sbb
add
arpl
ins
mov
jo
pop
lock
stc
xchg
mov
sti
jne
sahf
movs
lea
hlt
or
cmps
pop
std
xor
mov
cs
fcmove
aas
adc
lds
cmps
cs
xor
mov
or
sub
jl
inc
dec
mov
push
mov
fdiv
fs
pop
dec
(bad)
icebp
or
mov
or
out
pop
add
jne
adc
dec
sbb
sbb
test
dec
daa
jno
loop
dec
mov
lahf
sar
das
mov
xor
in
aad
pusha
xor
or
(bad)
cld
add
and
add
inc
mov
sub
cmp
ret
(bad)
push
xor
repz
arpl
inc
imul
xchg
inc
xchg
icebp
sub
shl
or
mov
fs
inc
outs
xor
adc
pop
ja
add
mov
jbe
es
xchg
adc
or
jbe
aas
call
mov
jmp
sub
cmp
sub
cmp
adc
arpl
imul
cmp
iret
sahf
mov
fcomp
sahf
pop
je
jle
rcl
sub
ja
lea
pop
in
dec
push
dec
fstp
mov
pop
inc
or
rol
mov
das
sub
cmps
mov
lea
mov
lock
xchg
inc
mov
sbb
dec
popa
xlat
lahf
ficom
jmp
cmps
mov
jge
ror
or
pop
idiv
and
test
mov
cmp
xchg
jno
inc
stc
cmps
mov
leave
into
pop
or
cmc
cdq
mov
call
jmp
movs
or
loopne
mov
or
xor
dec
mov
add
inc
inc
mov
cdq
enter
jp
or
lods
ror
push
push
xor
fmul
jge
jno
mov
inc
push
cmp
data16
inc
loope
popf
xchg
jo
pop
adc
into
mov
outs
(bad)
addr16
push
or
or
adc
fisub
ja
loopne
mov
ret
out
push
scas
rol
sbb
jl
sub
push
mov
ror
inc
inc
sbb
pushf
sbb
adc
pop
shl
dec
iret
(bad)
xlat
and
pusha
push
inc
aad
add
dec
push
iret
ret
sbb
test
lds
jmp
cmc
push
jle
nop
inc
cmp
xchg
or
lods
pop
fistp
or
jg
mov
mov
dec
or
in
int
gs
call
pop
imul
push
fadd
jae
xor
adc
call
inc
dec
nop
iret
stos
jg
lock
mov
pop
dec
mov
sbb
gs
sbb
push
fs
xchg
pushf
mov
ja
xor
sar
cwde
imul
push
or
jnp
or
mov
stc
dec
aaa
out
xchg
shr
outs
out
jge
(bad)
mov
cmp
sbb
stos
jo
pop
std
xchg
adc
loopne
mov
dec
xor
into
push
scas
jo
cwde
fmul
xchg
repz
or
pop
int
pusha
inc
mov
fdiv
xlat
dec
dec
outs
call
jl
mov
mov
pop
jnp
xor
aad
sbb
push
cmp
xlat
jle
sbb
shl
in
dec
call
punpcklbw
push
loop
lds
xlat
shl
pop
sub
aas
repnz
repnz
sbb
sub
sbb
mov
mov
aas
push
lahf
dec
adc
and
call
xchg
jbe
and
repz
dec
and
pop
fisttp
and
ss
fild
cmp
fsub
call
scas
and
ds
jae
xchg
fsubp
sub
pushf
xchg
xor
rcr
fiadd
mov
pop
xchg
push
or
xchg
ret
popf
(bad)
in
into
jecxz
xor
push
cmp
sbb
(bad)
dec
sub
jbe
jmp
test
(bad)
jmp
push
xchg
in
outs
fisttp
pop
vxorpd
and
test
mov
es
xchg
sar
push
mov
lods
jbe
sub
jmp
test
out
jbe
(bad)
or
pop
pop
and
pop
in
movs
cli
mov
inc
or
int3
fadd
ja
loope
lods
fdivr
and
inc
mov
or
push
xor
(bad)
in
xchg
jb
jecxz
bound
rol
je
fsub
add
jl
out
adc
xor
xchg
xchg
loopne
inc
mov
or
pop
add
dec
pop
pop
add
jg
mov
add
icebp
pop
sbb
add
or
xor
daa
test
rcr
or
cdq
rcl
sub
sahf
cdq
lea
push
punpckhbw
aas
mov
jne
dec
data16
mov
push
fs
mov
jns
push
adc
dec
(bad)
mov
cmp
dec
dec
xchg
push
inc
retf
add
ins
mov
add
out
sbb
or
xchg
rcl
xchg
cmp
push
mov
arpl
cmp
mov
int3
mov
hlt
jmp
iret
out
ret
mov
arpl
dec
pop
xor
js
dec
movs
popf
mov
sub
fidiv
jle
movs
popa
add
(bad)
hlt
in
push
mov
cmp
pushf
scas
pop
push
retf
xor
inc
dec
pop
fiadd
rcr
int3
mov
icebp
jns
xor
(bad)
and
jge
out
mov
mov
not
das
push
mov
in
repnz
into
pop
cmp
dec
dec
dec
push
lea
aaa
sub
mov
or
je
jecxz
xlat
sub
clc
push
nop
ss
lock
adc
mov
data16
mov
stc
fcom
lds
dec
imul
test
xchg
jbe
into
out
mov
push
pop
push
popf
(bad)
in
out
inc
add
mov
adc
mov
and
mov
repz
call
cwde
rcr
dec
add
mov
dec
mov
ret
sti
sahf
xor
pop
mov
pop
mov
add
mov
xchg
sbb
retf
xchg
sbb
and
sub
inc
lahf
push
rcl
push
repz
dec
sbb
add
out
popf
loop
pop
jp
ins
arpl
dec
add
(bad)
daa
out
pushw
sbb
std
xchg
test
dec
popa
lods
jmp
mov
adc
push
les
ds
jno
add
sub
mov
sbb
cmp
add
inc
and
jno
cmp
loopne
cmp
addr16
or
xor
sub
js
mov
fist
adc
adc
call
inc
mov
sub
add
div
shl
inc
fucomi
arpl
ret
sbb
and
push
push
and
in
arpl
adc
std
cmc
jo
jmp
or
in
inc
aad
xchg
cmps
js
or
(bad)
(bad)
fimul
pop
in
adc
loope
push
in
mov
das
xchg
out
ret
mov
lods
imul
xchg
xor
push
mov
jp
pushf
rol
lods
pop
push
xchg
out
cdq
inc
xor
and
xchg
xchg
cmc
push
loope
mov
mov
in
mov
punpckhbw
retf
out
mov
sbb
xor
adc
cmp
push
adc
jo
jecxz
out
and
push
into
xor
pop
push
mov
pushf
pop
stc
cmp
js
(bad)
fs
jmp
es
rcl
fnstenv
push
mov
imul
and
daa
jno
call
xor
xor
cmc
jmp
pop
pop
jg
out
popf
je
cmp
repnz
push
jno
adc
shl
sbb
add
repnz
jl
inc
outs
jg
mov
push
dec
cmp
add
xchg
lea
iret
jb
shl
retf
cwde
jo
sbb
movs
jmp
and
nop
xor
cmp
xor
jecxz
mov
jbe
dec
cmp
pusha
ss
and
test
push
fs
dec
push
mov
and
sti
mov
popf
int
dec
sub
retf
cli
xor
push
and
sub
into
sbb
sti
xchg
sahf
push
mov
ds
enter
jbe
mov
pop
cmp
enter
int3
test
sbb
and
push
enter
les
in
ds
mov
xchg
test
pusha
out
xchg
mov
pop
cmp
or
mov
pop
out
jne
cmc
mov
pushf
dec
stos
movs
(bad)
js
and
fcmovu
cmp
sti
mov
mov
ins
stos
push
in
or
out
iret
test
mov
les
pop
xlat
or
inc
out
int
(bad)
xchg
sbb
jb
sbb
sbb
clc
sub
cmp
adc
mov
fwait
cmp
fcomi
les
sahf
push
jo
jl
mov
or
add
jge
jle
lods
push
dec
bound
test
sbb
pop
sbb
loopne
scas
popa
in
pop
sbb
or
mov
enter
fdiv
pop
sub
ret
(bad)
fwait
sbb
hlt
push
sbb
ja
jg
xor
pop
mov
test
cdq
(bad)
imul
int3
ins
sub
push
scas
fcmovnu
enter
not
popf
cmp
jle
xchg
(bad)
neg
test
or
call
pop
rcr
ins
outs
mov
jle
jbe
aam
add
jmp
or
idiv
(bad)
push
xor
jno
in
mov
mov
ret
std
iret
sub
xchg
test
ins
dec
adc
aam
jmp
pusha
inc
shl
(bad)
cmp
dec
and
shl
or
movs
leave
jns
sub
inc
movs
out
cwde
mov
pop
push
cdq
(bad)
or
and
xor
in
scas
xor
push
out
jge
mov
xchg
xor
mov
xor
scas
add
cs
xchg
and
ret
div
fisttp
in
hlt
sahf
int
or
loop
jo
sub
xchg
pop
lds
fsubr
xchg
adc
and
xchg
nop
jnp
outs
retf
je
pop
shl
ret
dec
cmc
sbb
xchg
mov
sub
ja
shl
push
inc
cmp
pushf
rcr
dec
jnp
nop
jo
pop
jecxz
or
and
fldenv
jmp
jmp
ins
in
(bad)
cmp
fwait
inc
cdq
ret
xchg
or
das
dec
push
pop
mov
loope
xor
loop
(bad)
js
pop
adc
aad
xlat
aam
(bad)
stc
rol
jbe
mov
dec
ins
or
mov
repz
pushf
inc
xor
(bad)
ds
mov
jmp
outs
enter
stc
jno
xchg
pop
push
mov
int3
pop
xor
mov
pop
ret
inc
(bad)
out
jmp
movs
int
jmp
sbb
add
stos
adc
test
inc
jno
test
jnp
cmp
das
jbe
arpl
out
iret
push
push
lods
popa
and
jl
adc
stos
xor
mov
and
sub
pop
sub
icebp
mov
idiv
mov
mov
jge
fprem
push
push
jmp
ret
rcl
ja
adc
push
ds
lods
mov
lahf
fld1
xchg
jmp
pusha
test
pushf
enter
push
(bad)
jns
mov
dec
xchg
xchg
push
loope
std
shl
mov
add
pop
nop
sbb
bound
cmc
jae
test
stos
dec
inc
out
fstp
mov
shr
mov
bound
add
mov
aam
lds
ffreep
push
mov
sbb
setb
ins
push
adc
pop
lock
pop
pop
aad
movs
adc
cwde
xor
dec
mov
pop
inc
mov
or
arpl
imul
fisub
mov
mov
(bad)
mov
cmp
lahf
les
xchg
and
ins
inc
lods
adc
mov
lea
add
jbe
adc
cmp
mov
mov
inc
jle
pusha
movs
mov
jmp
call
nop
int
mov
cmps
jmp
cmp
in
push
mov
jp
sub
test
lea
data16
int
adc
cmp
outs
in
inc
std
lea
cmp
cmp
sbb
scas
fsub
xor
inc
je
out
data16
in
popf
retf
jne
dec
jg
mov
jo
or
aam
mov
ins
es
enter
jns
test
mov
mov
jne
add
or
idiv
mov
fs
cdq
enter
mov
xor
mov
cs
inc
sti
sbb
ja
jae
clc
mov
setns
adc
xor
fwait
adc
pushf
retf
jp
inc
cmps
sub
in
test
push
bound
or
dec
adc
test
repnz
jg
test
out
cmps
(bad)
jns
retf
mov
fisubr
pop
in
rol
xchg
fsubr
add
cmp
mov
out
aas
push
ret
adc
addr16
mov
mov
or
fdiv
jmp
pushf
cmp
fstp
cmp
(bad)
scas
daa
ds
les
or
jge
fldcw
xlat
add
jge
fs
xor
test
(bad)
out
inc
ins
aas
mov
adc
sub
dec
shr
inc
fcomp
lods
xlat
ins
or
bound
sbb
jge
push
push
sbb
xchg
lods
sbb
pop
inc
push
and
out
inc
pop
and
inc
xchg
out
mov
push
jmp
xchg
cmc
shl
test
mov
sbb
sub
sub
jmp
xchg
or
sar
aaa
cmc
ret
mov
dec
mov
jg
std
add
pop
aas
movs
cmp
(bad)
ds
add
mov
sti
sub
fstp
out
xchg
mov
push
mov
sbb
popa
jmp
inc
mov
iret
jae
and
mov
mov
test
les
cmps
pop
mov
cs
xchg
mov
cmp
xchg
loop
into
popf
dec
dec
jl
pushf
out
movs
mov
inc
fld
mov
push
sub
adc
out
mov
pop
push
aas
clc
outs
jno
lock
dec
push
ja
jo
jnp
sar
imul
inc
push
and
sbb
jle
or
cmps
lahf
push
push
jl
fisub
loope
loope
test
mov
jp
sbb
in
adc
(bad)
call
icebp
adc
push
sbb
in
into
icebp
pop
(bad)
popa
or
inc
cdq
loopne
jecxz
mov
adc
cmp
popa
cmp
in
push
int
sar
push
fld
adc
dec
adc
mov
or
imul
stos
sub
lods
or
ficom
mov
test
adc
cmp
hlt
mov
inc
and
fcomp
xchg
cwde
mov
(bad)
mov
out
aaa
imul
loop
and
aas
aaa
jge
add
sub
movs
sti
inc
int
shr
xchg
xor
outs
shl
ds
rcr
call
pop
pusha
pop
stos
into
sbb
adc
std
pop
dec
xchg
cli
mov
call
inc
cmps
test
add
push
mov
pushf
aam
mov
outs
(bad)
ds
mov
inc
adc
or
pop
push
xchg
xchg
mov
mov
rcr
cmp
xchg
pop
push
int3
xchg
mov
jmp
aas
sbb
pop
lods
jae
sub
outs
sub
mov
pop
or
push
js
jns
dec
mov
mov
loop
and
sti
push
jo
sti
jbe
int
fbstp
inc
or
jecxz
push
xchg
xor
sub
xchg
fsub
xor
stos
test
ins
mov
push
or
sub
(bad)
aam
cmp
inc
sub
cs
cs
jnp
jp
adc
pop
iret
outs
jbe
or
jecxz
mov
and
dec
es
add
push
mov
or
out
xlat
shl
mov
nop
fwait
mov
sar
mov
jg
sti
or
fidiv
mov
cmp
xchg
sub
jo
in
jl
sbb
mov
xor
mov
imul
and
pop
fs
mov
cmp
mov
push
push
test
arpl
fist
mov
(bad)
cmps
adc
imul
les
mov
pop
pop
repnz
les
push
jl
retf
lds
call
or
in
shl
adc
std
rcr
stos
sbb
inc
jge
bound
das
xchg
xlat
push
scas
jo
dec
push
jb
xchg
aam
sbb
add
dec
dec
cs
fsub
(bad)
xchg
mov
(bad)
repnz
adc
or
rcl
dec
pusha
and
xchg
andps
push
imul
jb
popf
js
loopne
xor
and
ins
popf
imul
jae
push
movs
lahf
jl
mov
push
mov
add
inc
xchg
cs
sbb
out
push
xchg
clc
pusha
es
and
loop
jbe
push
xlat
imul
push
hlt
xor
pop
jae
and
xchg
mov
sbb
fcmovne
stc
(bad)
pusha
mov
cli
fwait
outs
pop
pop
mul
test
cmp
jne
aaa
pop
inc
cmc
adc
les
in
jb
adc
jne
xchg
je
hlt
leave
lock
adc
aaa
mov
aaa
in
ss
imul
pop
outs
out
mov
adc
fimul
sub
mov
jns
push
push
bound
ss
xor
jg
fdiv
pop
inc
jecxz
loope
mov
(bad)
fldcw
ins
xchg
xchg
leave
fld
js
push
movs
mov
jp
add
repnz
adc
(bad)
mov
mov
(bad)
(bad)
push
add
xchg
test
mov
or
adc
test
loope
dec
cmp
lahf
mov
ins
sbb
movlps
pushf
pushf
mov
cmp
rcr
arpl
add
or
imul
sbb
push
clc
pop
xor
xor
(bad)
gs
mov
in
mov
das
push
das
ja
leave
adc
jno
jge
ins
pop
jmp
rcr
ror
pusha
imul
mov
stos
fst
inc
enter
loopne
scas
xor
mov
push
inc
dec
loopne
mov
je
adc
xchg
(bad)
cli
std
shl
sbb
pop
stos
les
fstp
icebp
call
out
mov
pop
mov
mov
and
add
enter
ds
add
jne
shl
movs
push
aaa
call
sub
and
adc
adc
in
jp
sbb
inc
ins
pusha
enterw
sbb
jo
push
or
stos
adc
inc
hlt
outs
adc
mov
sub
loop
adc
push
mov
add
cmps
mov
fcmovnb
add
popa
dec
fcomp
jmp
jle
push
push
stos
rcr
xchg
in
dec
psrlw
enter
add
imul
pop
enter
xchg
and
mov
in
fst
jp
sbb
adc
scas
cmp
or
mov
inc
std
mov
cmc
jns
add
add
and
push
mov
inc
sti
mov
jae
lods
inc
in
dec
dec
jmp
ret
arpl
retf
jno
shl
cmc
cmp
and
into
(bad)
les
gs
ss
dec
sub
arpl
adc
add
loope
lods
loopne
add
inc
inc
out
lahf
xchg
pop
cmp
adc
ja
add
mov
sub
pop
mov
push
add
xor
(bad)
adc
push
movs
out
adc
cmp
cmps
adc
or
jbe
pop
leave
stos
lahf
sahf
mov
lock
cdq
(bad)
data16
leave
pop
stc
les
cwde
and
mov
addr16
js
sub
mov
ss
push
popa
sub
into
jecxz
addr16
inc
jmp
add
cdq
add
loope
dec
and
xchg
retf
push
sbb
in
mul
sub
cmp
cli
ret
push
pop
(bad)
in
fidiv
loop
lea
sti
mov
jle
dec
inc
fldcw
repz
rcl
and
sbb
fidiv
dec
fstp
(bad)
enter
sti
ss
icebp
add
dec
ja
jle
inc
adc
mov
outs
dec
inc
movs
ss
mov
mov
jmp
loopne
mov
cdq
or
pop
aad
fmul
and
fisubr
inc
dec
and
rcr
lahf
test
mov
mov
shl
jle
sub
mov
repnz
mov
push
cmp
(bad)
push
add
ror
jns
sbb
sbb
int
mov
sbb
mov
mov
sub
sbb
lds
lods
mov
aaa
pop
ror
sahf
ret
ds
jae
sbb
and
sbb
pop
(bad)
repz
and
js
pop
pusha
sbb
mov
loopne
test
(bad)
fcmove
pushf
sbb
mov
inc
bnd
outs
and
push
xchg
dec
ja
jg
add
test
mov
(bad)
inc
jnp
cmp
inc
push
push
call
fisttp
jge
mov
neg
mov
mov
push
cmp
cmp
imul
pop
imul
adc
out
in
fcmovnbe
push
xor
cmp
sar
outs
fldenv
lock
or
xchg
mov
mov
sbb
aaa
add
dec
push
ror
dec
cwde
mov
daa
fsub
hlt
xchg
aam
in
and
js
mov
movs
in
loop
push
aas
add
jmp
and
or
das
fstp
sbb
mov
or
push
pop
pop
cmp
int
cwde
inc
loope
cmp
fnstsw
imul
xor
cmp
mov
xor
sub
ss
add
mov
add
inc
lods
cdq
dec
ret
sub
push
mov
test
sar
movs
int
push
jnp
jle
add
out
push
ins
push
mov
sbb
push
and
xchg
xor
xchg
pop
xor
loope
or
cld
stos
enter
stos
xchg
(bad)
cli
gs
mov
andnps
mov
movs
popa
loope
fst
lods
(bad)
jmp
cmps
jecxz
jbe
scas
dec
lds
push
fidiv
lods
sbb
mov
icebp
xlat
in
push
mov
jae
xchg
enter
cmc
add
xchg
or
jno
nop
xor
xchg
mov
aaa
aam
aad
mov
cli
lods
jmp
push
and
loope
test
xchg
(bad)
push
xchg
pop
lock
xor
sub
pushf
dec
sub
cmps
rcl
jecxz
jo
mov
ja
in
dec
cmp
mov
repnz
imul
mov
and
cmp
fld
jae
jl
lahf
push
sbb
sbb
sti
lahf
bound
js
dec
mov
sub
mov
push
mov
loop
jp
cmp
test
add
sub
jne
jecxz
mov
retf
lock
or
pop
cmps
inc
cmp
lock
jnp
push
test
fidivr
retf
adc
lahf
sar
mov
and
fld
push
inc
push
jp
adc
xchg
push
sub
cli
repnz
push
(bad)
jne
adc
jns
jns
aam
scas
and
add
mov
hlt
sbb
cdq
ror
mov
pop
push
ins
push
xor
sub
test
sbb
pop
gs
movs
and
pop
inc
push
and
call
aaa
mov
pop
push
cmc
push
cmp
into
and
lods
out
dec
cmps
xchg
mov
inc
stc
out
leave
popf
inc
int3
sub
or
ins
dec
mov
adc
arpl
cmp
imul
push
nop
inc
jge
test
push
pop
xor
imul
add
scas
xor
jge
push
dec
clc
fist
xchg
pop
mov
inc
call
pop
sub
nop
std
push
out
adc
rol
mov
push
test
(bad)
loopne
push
and
in
sbb
outs
clc
mov
stos
cli
xchg
iret
push
dec
sbb
mov
mov
jbe
push
test
fsub
and
push
sbb
ret
push
fiadd
sub
mov
arpl
mov
aam
shr
cmc
stos
mov
jecxz
push
jb
mov
xor
std
ins
or
stc
jg
pop
out
arpl
jmp
cwde
popf
mov
in
retf
(bad)
push
sbb
cmc
push
in
adc
dec
shl
test
mov
(bad)
jb
fld
sbb
adc
jae
in
pop
shr
stos
cmc
pop
inc
iret
mov
cmp
aad
leave
je
ds
jo
test
in
aas
mov
(bad)
pop
sbb
jb
cwde
xchg
mov
pop
not
push
cmp
xchg
rol
leave
lods
mov
(bad)
push
mov
mov
push
push
popf
mov
adc
adc
mov
cdq
(bad)
dec
add
jle
mul
add
and
mov
lahf
adc
push
outs
inc
jno
out
mov
test
jmp
add
mov
mov
int3
arpl
daa
mov
(bad)
pop
pop
outs
fcmovnbe
popf
fst
push
test
mov
(bad)
scas
ins
xchg
xor
mov
(bad)
push
aaa
fcomi
loopne
pop
cli
jo
sbb
pop
xchg
xor
test
movs
aaa
xchg
push
jp
xchg
cdq
lds
ins
and
(bad)
sub
ficomp
mov
inc
movs
cdq
dec
sbb
push
movs
push
jecxz
imul
sar
jo
mov
std
mov
mov
xor
pusha
ja
ret
imul
pop
cmp
xor
enter
lods
ror
jg
retf
mov
in
or
jp
fst
bound
sub
fst
mov
push
mov
lea
cmp
sub
(bad)
hlt
fs
jge
pop
addr16
push
inc
xor
data16
inc
xor
xlat
push
push
outs
sbb
adc
push
push
lods
cdq
jge
test
lods
sar
mov
dec
mov
cdq
sub
movs
scas
mov
cmp
loopne
cmps
jns
retf
and
adc
repz
mov
cmp
adc
pop
loop
into
jg
sub
inc
jmp
dec
dec
stc
ins
adc
int
jge
mov
jg
pop
addr16
test
jg
add
mov
add
stc
adc
xor
mov
fild
adc
pop
and
cmp
fwait
xchg
popa
cdq
retf
push
cmp
jno
mov
(bad)
adc
cdq
clc
call
adc
ja
push
push
std
daa
push
mov
inc
mov
ins
sbb
js
(bad)
(bad)
sahf
push
fcomp
mov
stc
fwait
or
cwde
mov
and
movs
pop
lock
cmp
test
or
jle
and
stos
xor
sub
jo
inc
mov
jmp
or
mov
jmp
push
inc
ficomp
add
add
enter
jo
loope
and
cmp
push
lds
in
mov
mov
outs
and
sub
(bad)
(bad)
mov
int
lock
aaa
das
ret
mov
jne
xchg
retf
jbe
imul
sub
adc
jae
mov
cmc
mov
cmps
pop
bound
push
or
pop
dec
dec
and
loop
sti
icebp
hlt
sub
sbb
jecxz
je
fsub
push
test
xchg
mov
out
mov
sbb
popa
inc
mov
arpl
lods
lahf
(bad)
sub
xor
add
test
retf
pop
outs
xchg
fisubr
(bad)
cmp
add
jmp
cmp
pop
movs
out
dec
lds
xor
daa
add
outs
mov
(bad)
sub
les
fisub
lahf
mov
(bad)
add
stos
mov
cwde
daa
mov
pop
cwde
out
cmp
add
fdivr
or
fs
inc
stos
out
test
ins
push
sub
mov
jmp
(bad)
pop
jne
int
inc
mov
fstp
jne
add
adc
test
leave
sbb
sbb
fstp
cs
sbb
movs
cmp
rcr
pop
inc
std
add
sbb
lods
sbb
stos
adc
dec
stos
push
or
cdq
imul
in
pop
inc
adc
lds
xchg
imul
push
push
or
sub
dec
mov
call
test
push
mov
inc
sbb
stos
inc
data16
fwait
call
and
call
xor
int
push
mov
loop
mov
lods
mov
mov
cmp
(bad)
inc
push
add
mov
jbe
out
mov
xabort
(bad)
bound
adc
and
jmp
jl
sub
repz
into
mov
ror
sbb
mov
or
stc
fldenv
inc
push
cmp
js
mov
inc
inc
lahf
fst
push
jp
mov
retf
ja
and
stos
inc
shl
cwde
mov
movs
rol
xchg
sbb
js
mov
sbb
imul
adc
dec
mov
or
push
cli
dec
mov
jmp
push
loopne
scas
out
fisttp
aad
mov
xchg
lods
jp
pop
fldcw
jle
mov
jne
pop
(bad)
jns
dec
xchg
cld
and
stos
xor
pop
push
icebp
mov
cld
int
ffreep
cmp
ins
jbe
ds
popf
fsubr
fsubr
outs
(bad)
loopne
pop
pushf
inc
adc
xor
loop
int3
xor
pop
dec
out
ins
pop
stos
sub
mov
cmc
push
mov
xor
in
sbb
xor
pop
call
clc
cli
adc
into
adc
jp
(bad)
(bad)
mov
mov
(bad)
outs
cmps
jmp
inc
add
inc
movs
push
mov
dec
xchg
xor
ja
out
stc
enter
bound
loopne
in
(bad)
pop
ret
and
retf
xchg
push
xor
mov
movs
loop
adc
stc
fsub
cmp
push
fsubr
(bad)
mov
nop
add
cli
mov
mov
scas
mov
adc
push
(bad)
xchg
ror
je
or
add
mov
mov
dec
mov
hlt
xor
stos
mov
lods
jbe
repz
repnz
sahf
add
mov
pop
stos
aad
ds
sbb
xchg
test
les
aas
or
(bad)
pop
lock
sub
inc
xor
daa
mov
sbb
mov
mov
(bad)
icebp
fwait
cmps
sbb
loop
in
mov
popa
mov
inc
jl
push
mov
jmp
or
(bad)
jae
mov
enter
dec
int3
aad
(bad)
fstp
mov
icebp
mov
fcomp
fs
popf
(bad)
push
inc
mov
adc
adc
int
dec
sbb
mov
and
scas
lods
push
das
js
jl
lods
lahf
mov
jae
push
stos
pop
push
out
or
mov
scas
and
cld
xor
mov
fidivr
js
ins
jp
and
add
mov
stos
in
mov
lea
stos
mov
push
sub
ffreep
ret
mov
cmp
aas
mov
es
popa
mov
hlt
pusha
mov
xor
pushf
dec
test
dec
in
int3
mov
mov
push
push
pop
imul
and
arpl
das
mov
cmp
sbb
rol
sbb
jge
popa
and
(bad)
outs
pop
sahf
inc
add
jns
lds
mov
iret
jecxz
inc
mov
mov
ss
ja
cmps
sahf
js
loop
xchg
mov
pop
outs
out
sbb
(bad)
test
and
mov
or
mov
sub
add
xchg
mov
sbb
jg
pop
repnz
xor
shl
leave
adc
push
data16
adc
push
in
jne
outs
jl
lods
or
mov
sahf
ds
lock
dec
push
mov
cmps
sub
loopne
push
repnz
arpl
sub
xor
inc
mov
retf
and
cdq
cmc
iret
mov
and
push
inc
dec
dec
stos
sub
xchg
fucom
ror
neg
int
aam
sub
sub
in
and
xor
dec
leave
enter
adc
sbb
mov
cmp
jo
inc
stos
shr
jno
in
xor
xchg
pop
jnp
fisttp
mov
call
adc
fisttp
sbb
jmp
call
adc
int3
int
add
pop
inc
dec
add
pop
ins
pop
leave
bound
mov
js
push
ja
mov
jp
lds
fstp
das
fidivr
ret
jo
sub
mov
mov
add
das
outs
(bad)
mov
pop
popf
pushf
sbb
lock
imul
jmp
mov
loop
dec
scas
std
stos
cmp
cmps
adc
and
scas
ror
popa
js
lahf
mov
xor
or
xor
stos
stos
imul
jne
in
aam
mov
add
inc
xor
js
cmp
test
pop
mov
jns
cld
push
nop
and
inc
aad
das
sub
test
jmp
in
std
push
jo
pop
int
ret
mov
sub
cs
call
fcomp
fadd
mov
mov
cmp
mov
sub
inc
or
and
xor
inc
div
xchg
or
adc
and
pop
and
clc
xor
and
or
mov
in
inc
xor
mov
movs
jns
test
inc
xchg
js
inc
ret
out
mov
add
jne
outs
inc
pop
pop
xlat
pop
push
dec
stos
jmp
aas
fcom
in
add
sub
or
xchg
sub
dec
adc
stc
int3
test
dec
out
mov
(bad)
int
adc
mov
es
popf
lods
mov
cs
push
loop
or
jge
inc
inc
daa
out
(bad)
in
rol
out
inc
pop
and
add
cmc
or
ja
imul
addr16
test
add
and
rep
sbb
es
add
cld
mov
bound
xor
ins
inc
ret
adc
int
sbb
or
mov
jns
xchg
ret
retf
sub
jns
retf
mov
mov
call
aaa
jl
inc
pop
xor
mov
xchg
jbe
rcl
ins
pop
xor
mov
mov
adc
pop
pop
add
jmp
xlat
sub
repz
stos
dec
icebp
fstp
mov
adc
push
dec
sbb
xor
enter
test
retf
push
std
aas
imul
(bad)
mov
mov
mov
mov
(bad)
mov
aas
add
push
xchg
call
scas
xchg
dec
aam
(bad)
jnp
push
shr
scas
test
sbb
aas
cmp
outs
push
cmps
(bad)
adc
or
push
or
mov
mov
sar
mov
loopne
push
fidivr
dec
dec
test
test
cmp
ror
sub
sub
mov
outs
add
mov
lock
shr
fwait
push
lahf
add
sahf
sub
nop
jmp
imul
test
jmp
sub
cmp
retf
arpl
and
fstp
jb
and
nop
(bad)
sbb
mov
xlat
xchg
mov
xor
data16
mov
xchg
aad
mov
popa
lods
xchg
shl
fs
mov
shl
(bad)
into
and
mov
fst
loopne
daa
push
ficomp
push
mov
push
mov
pmaxub
inc
pop
pushf
cdq
repz
pop
mov
jbe
xchg
push
dec
sar
sub
sub
xor
test
fld
xor
fcomp
and
pop
jge
dec
retf
inc
(bad)
push
iret
ret
xor
xchg
out
sti
data16
test
cmp
jmp
cwde
iret
scas
fisubr
outs
in
retf
movs
fldcw
retf
pop
dec
popf
xor
push
shr
or
ret
add
inc
call
out
movs
je
mov
test
call
adc
retf
cmp
jns
mov
outs
xlat
pop
loop
test
cmps
mov
pop
and
mov
call
das
pop
cmp
jmp
mov
repz
ret
inc
mov
es
pusha
and
gs
add
std
mov
xor
or
adc
sub
lods
jnp
cwde
xchg
jecxz
shl
retf
je
test
neg
mov
mov
sub
cmp
sub
dec
test
stos
cmps
pop
xchg
addr16
mov
add
dec
or
pop
cmp
jl
sbb
fist
sub
dec
das
imul
add
stos
fsubrp
das
mul
or
cwde
sar
enter
pop
jl
xchg
ret
mul
inc
pop
mov
cmp
fcmove
pop
(bad)
sub
sbb
scas
cmp
into
jp
mov
adc
in
pushf
pop
idiv
outs
mov
popa
int
xor
fcomp
add
mov
in
lock
mov
pop
cmps
int3
adc
mov
mov
gs
paddq
xor
je
jmp
scas
adc
shl
cwde
cmps
mov
test
movs
imul
and
or
arpl
lock
pop
mov
push
addr16
mov
ins
push
or
mov
test
ins
mov
lock
mov
inc
ins
cmp
mov
cmps
iret
shl
dec
in
pop
mov
mov
adc
add
mov
xor
adc
sub
lods
aad
and
pop
dec
mov
push
push
jecxz
push
mov
sti
xchg
ror
retf
cmps
leave
(bad)
lock
stos
(bad)
cmps
dec
push
and
cmp
dec
lahf
in
cli
mov
mov
out
inc
loope
popa
pusha
push
aad
mov
adc
and
push
sbb
sub
pop
add
repz
sahf
out
xchg
lahf
cmp
add
loope
cmp
push
mov
and
lahf
mov
call
adc
scas
stc
dec
sub
push
jno
add
jge
in
repz
jge
mov
adc
imul
mov
jmp
inc
lods
popf
(bad)
sbb
imul
jge
loope
mov
adc
aad
pusha
jns
stos
adc
dec
xor
pop
cmps
das
lea
sti
xor
sbb
(bad)
out
data16
jne
xchg
dec
loop
(bad)
out
mov
or
push
outs
xor
push
xor
hlt
mov
not
pop
xchg
mov
ret
jl
or
ins
xchg
outs
rcr
call
ins
mov
aam
ss
aad
out
mov
or
out
es
or
out
add
adc
mov
out
mov
push
sbb
mov
or
mov
pop
xchg
inc
nop
loopne
ret
jle
jmp
int3
mov
or
jp
cmp
lea
hlt
xchg
or
mov
mov
jo
xor
test
add
xor
jbe
pop
sub
adc
mov
dec
imul
pop
xchg
xlat
shl
aam
arpl
pop
cld
inc
mov
or
ffree
mov
jbe
jns
mov
mov
test
outs
fnstcw
gs
(bad)
mov
adc
outs
mov
inc
addr16
or
out
out
lods
pop
inc
bound
jo
mov
je
ror
mov
push
fnstenv
sub
dec
xor
es
cmp
push
push
cs
dec
inc
enter
aam
cwde
pop
js
sub
mov
enter
sbb
xchg
js
xchg
sub
xchg
and
adc
js
mov
xchg
test
add
jae
mov
dec
sbb
mov
scas
or
shl
loopne
nop
ficomp
sti
loop
and
jmp
loopne
jae
clc
cld
fnsave
cmp
fisttp
mov
movs
jecxz
pop
lahf
jb
sub
push
mov
jne
sbb
cmps
inc
into
mov
dec
bound
bound
jbe
jle
les
(bad)
fwait
test
jno
xchg
cmc
or
lods
sbb
into
shl
lahf
sbb
test
xchg
cwde
sti
sti
leave
mov
adc
out
(bad)
mov
sahf
xchg
test
inc
mov
sub
mov
sub
add
xchg
mov
jns
jo
into
adc
data16
fld
mov
in
add
cdq
xor
jns
jo
(bad)
and
sub
js
aam
leave
cmps
daa
push
cmp
fldenv
ja
mov
push
cwde
into
inc
inc
aam
or
pop
retf
sbb
sub
add
shl
jmp
add
pop
in
or
arpl
push
push
mov
sub
enter
mov
fs
push
aam
mov
aam
in
or
arpl
push
(bad)
mov
sub
sbb
cmovb
pop
cli
xor
sub
in
jg
sbb
retf
push
jae
dec
fsubp
mov
hlt
or
xchg
scas
and
repnz
and
cmp
dec
or
inc
push
mov
mov
out
movs
mov
paddb
or
mov
lahf
xchg
mov
dec
pop
imul
mov
push
mov
push
mov
jbe
pop
sub
xor
mov
sbb
sti
sbb
push
dec
adc
sbb
mov
je
fstp
inc
imul
or
push
sti
(bad)
jbe
cmps
in
out
int
sbb
mov
pop
aad
adc
sub
inc
mov
(bad)
sti
xchg
aaa
jmp
sub
cmps
xor
ret
sbb
jp
clc
add
mov
call
add
sub
pushf
mov
mov
ins
xor
jmp
ret
cs
mov
mov
shr
jb
jmp
dec
(bad)
ret
cmp
test
out
stc
pop
push
adc
and
xlat
into
and
shr
jg
lods
in
cld
jnp
pop
fwait
xor
or
popf
and
fisubr
pop
push
cmp
cwde
jb
sbb
push
xor
hlt
xchg
adc
ficomp
dec
fmul
movs
cld
jmp
shl
cmp
out
push
shl
sbb
(bad)
pop
fisttp
fsubr
mov
jo
mov
mov
shl
(bad)
out
sub
ret
mov
fwait
and
pop
js
jl
add
mov
dec
call
jne
mov
dec
and
js
imul
jge
jnp
and
cmp
push
or
clc
jmp
mov
jmp
mov
xchg
mov
cwde
mov
popa
out
mov
push
in
mov
add
les
add
pop
dec
adc
nop
pop
pop
mov
mov
push
lods
pop
push
in
and
adc
jno
mov
adc
aam
ss
add
jne
inc
add
sahf
fisttp
out
loop
sub
push
pop
pushf
mov
aad
std
cmp
push
scas
cmp
cmp
mov
(bad)
lods
xchg
mov
movs
jl
jb
(bad)
sbb
ret
std
jg
sbb
in
and
mov
adc
mov
setnp
xchg
xor
pop
mov
sub
lock
xchg
fwait
es
dec
sub
xor
aaa
in
cli
jecxz
push
push
xor
movs
(bad)
arpl
jg
sub
mov
shl
sbb
seta
scas
inc
fwait
test
ja
mov
movlhps
jle
cmp
hlt
sbb
movs
pusha
push
mov
cmp
mov
or
add
jecxz
(bad)
call
data16
fild
mov
jg
or
in
jmp
mov
or
out
or
inc
retw
mov
and
iret
test
stc
pop
xchg
add
cmp
scas
retf
xor
dec
shl
sub
cmp
inc
adc
cmp
movs
adc
add
xchg
push
mov
push
retf
cmp
es
les
ret
js
psubusb
repnz
xor
in
or
sbb
inc
push
test
mov
movs
add
inc
adc
jmp
sub
(bad)
pop
sub
adc
or
int3
dec
mov
dec
mov
fwait
cmc
or
mov
and
push
mov
pop
jp
div
push
cdq
mov
mov
dec
loop
icebp
add
mov
and
and
rol
mov
out
js
pop
lods
ficomp
dec
mov
adc
aad
xor
and
test
icebp
retf
inc
sahf
jno
add
sub
ret
jb
imul
test
jg
jg
sbb
test
mov
shl
pushf
adc
jbe
int3
out
sbb
jnp
and
adc
jae
shr
movs
scas
inc
test
shl
xchg
cmp
test
rep
or
cmps
in
cld
and
fild
dec
and
data16
rcl
adc
dec
sbb
jmp
in
add
dec
test
mov
out
aas
pop
jecxz
daa
sahf
in
and
sbb
sub
sub
or
lds
pop
or
aas
or
adc
mov
dec
cld
and
mov
mov
mov
sub
mov
xor
xor
into
dec
cdq
or
fsub
gs
out
mov
imul
ret
adc
push
and
retf
jmp
push
sub
xchg
push
xchg
or
pop
in
(bad)
jmp
jecxz
jle
mov
push
cdq
mov
(bad)
js
(bad)
pop
movs
retf
lods
sbb
push
adc
(bad)
mov
or
dec
jbe
popa
add
clc
retf
sahf
pushf
or
(bad)
mov
rcr
push
xchg
movs
sti
std
pusha
pop
xor
and
scas
xor
jne
mov
sub
inc
push
(bad)
push
jle
sub
inc
repz
mov
xor
jbe
movs
fwait
sub
sbb
fs
xchg
retf
jnp
call
xchg
bound
shr
sbb
jecxz
bound
dec
sub
rcr
dec
addr16
adc
in
imul
sbb
(bad)
icebp
icebp
xlat
mov
pop
pusha
neg
addr16
call
inc
movs
enter
mov
pusha
xrelease
ret
mov
call
ficomp
sub
push
inc
inc
mov
leave
mov
pop
in
cmp
jp
jp
enter
clc
loope
dec
in
in
dec
lods
outs
jge
or
push
jl
inc
add
cli
adc
ja
fld
cmp
dec
mov
sbb
test
inc
cmc
add
pop
jb
mov
in
jle
inc
cmps
pop
popf
rcr
push
xchg
dec
jbe
push
pop
mov
out
stc
mov
mov
xor
push
pop
mov
rol
shl
jge
test
fidiv
outs
add
addr16
mov
and
cmps
jg
repz
sbb
cmps
cdq
or
push
sbb
out
test
sbb
pop
jg
mov
into
retf
cmc
or
cmps
xlat
mov
mov
jne
jno
xor
out
test
mov
hlt
cld
pop
cli
sub
or
cmp
xor
xor
pop
push
and
mov
xor
pop
mov
dec
les
cdq
push
mov
ins
vsubss
in
dec
lods
fisttp
mov
jno
mov
daa
jo
push
lahf
in
or
mov
out
xchg
loopne
out
jle
retf
and
jo
fdiv
sub
loope
dec
repnz
dec
mov
test
xchg
(bad)
loope
mov
lods
push
aad
and
mov
fadd
push
xchg
or
pusha
arpl
aas
xor
xchg
stc
adc
ins
fmulp
cmps
scas
cwde
mov
cmp
loope
or
jecxz
cmp
cmp
outs
xchg
mov
lock
sub
popf
sub
das
dec
push
cld
je
es
xchg
adc
pop
push
imul
sub
sbb
mov
xor
enter
adc
enter
stos
dec
add
cmp
cmp
mov
inc
push
dec
out
scas
or
nop
dec
scas
cmp
mov
stc
inc
push
or
mov
inc
inc
mov
ds
mov
call
mov
xor
pop
popa
adc
mov
ror
sbb
pop
add
imul
retf
in
pop
lahf
idiv
loop
inc
cld
mov
arpl
inc
mov
and
add
hlt
adc
push
jns
lds
add
push
xor
sub
pushf
xor
(bad)
and
aam
mov
jecxz
sbb
xchg
jnp
xor
dec
(bad)
fidivr
inc
sub
push
push
cmp
pop
aad
cmp
inc
pop
mov
mov
xchg
icebp
js
int
push
femms
enter
imul
mov
pop
rol
push
and
sbb
sti
mov
push
jp
add
test
les
out
xchg
push
(bad)
into
jbe
ret
scas
clc
in
jecxz
ret
aaa
mov
stos
pushf
iret
add
adc
cmp
inc
in
sbb
cmp
xor
cmp
int3
push
std
out
cli
sub
outs
mov
jl
mov
imul
stos
xor
mov
adc
ins
push
(bad)
jmp
push
sar
jge
dec
jl
push
add
or
pushf
xchg
sbb
pop
(bad)
imul
pop
and
or
jge
ret
lods
lods
pop
push
adc
xor
mov
mov
(bad)
push
xchg
jecxz
mov
fcmovbe
jge
mov
(bad)
and
pop
scas
pop
iret
mov
rol
mov
ins
sbb
mov
xchg
pop
retf
adc
or
mov
out
(bad)
pop
call
out
push
movs
or
in
scas
xor
xchg
push
inc
sbb
stc
mov
retf
sub
push
xor
ret
push
inc
movs
fst
xchg
push
and
add
addr16
int
(bad)
mov
jmp
out
push
or
mov
jae
cld
test
jmp
or
in
inc
adc
adc
sbb
jle
ret
and
push
test
push
and
arpl
in
or
cmp
inc
scas
daa
jo
adc
into
dec
pop
or
pushf
loop
xchg
es
xchg
xor
ds
nop
fdivr
lds
(bad)
gs
shl
pop
mov
pop
add
rcr
movs
(bad)
sbb
pop
push
mov
mov
in
(bad)
mov
fnsave
daa
movs
dec
es
test
xor
bound
iret
pop
fiadd
fisttp
js
cmps
add
cli
test
xchg
(bad)
shl
and
push
pop
or
mov
jg
frstor
ret
mov
mov
pop
cmp
aas
int3
cdq
or
rol
adc
push
out
mov
dec
or
push
or
jnp
scas
fnsave
popw
and
enter
jbe
xlat
cmp
in
add
add
cmp
jno
fstp
inc
dec
mov
mov
and
cli
hlt
cld
int
and
add
push
stos
mov
std
dec
movs
daa
push
retf
movs
ins
pushf
(bad)
sar
jb
inc
xchg
inc
mov
add
pop
aaa
xor
fsubrp
push
sbb
fcompp
inc
mov
aaa
or
xor
dec
inc
ins
adc
push
adc
mov
mov
rcr
add
addr16
dec
call
jecxz
mov
sub
test
psrlw
cli
inc
add
mov
push
nop
mov
sub
fisubr
xor
xor
adc
addr16
ss
or
pusha
call
mov
stos
ins
daa
pop
mov
xchg
sub
fstp
push
jnp
pop
pop
mov
add
sbb
jle
cwde
(bad)
mov
and
dec
jg
fist
rol
xor
cmp
in
or
push
pop
adc
or
xor
mov
mov
out
mov
pop
xchg
mov
and
sub
sbb
mov
push
fisttp
push
fld
mov
sub
imul
fisttp
add
out
fwait
dec
sbb
cdq
shl
(bad)
xchg
adc
sbb
jne
mov
jae
jno
mov
dec
cmps
punpckhbw
mov
inc
in
fsubr
lahf
and
or
xor
or
aas
in
add
push
mov
push
rcl
mov
mov
mov
inc
ret
fstp
xchg
mov
iret
add
push
lahf
mov
adc
mov
imul
or
xor
(bad)
pop
fucomip
out
sub
in
in
mov
les
sbb
jle
push
push
movs
and
xchg
jl
pusha
adc
mul
push
xor
outs
arpl
push
inc
loopne
xchg
pextrw
and
(bad)
sbb
push
outs
(bad)
mov
adc
cld
xchg
mov
push
inc
out
out
addr16
retf
jmp
jecxz
cli
jno
retf
(bad)
addr16
out
mul
pusha
rol
pop
push
(bad)
adc
fisub
(bad)
shl
pop
add
jle
(bad)
int3
lahf
lods
mov
(bad)
or
mov
enter
mov
dec
sub
adc
enter
sbb
xor
mov
push
outs
sub
int3
mov
nop
mov
icebp
rsqrtps
dec
inc
ds
fadd
pop
fyl2xp1
ja
cmps
in
jecxz
cmp
pop
xor
bound
aaa
pop
add
into
sahf
jbe
pop
daa
cdq
inc
mov
xor
stos
xchg
jp
cmp
and
jmp
adc
cmp
fsub
push
in
(bad)
cmps
dec
das
test
jnp
outs
cmp
cmps
test
push
daa
and
cmps
outs
sbb
inc
aaa
clc
add
imul
adc
cmps
movs
mov
jnp
sahf
dec
imul
jo
xor
in
and
jecxz
sub
stos
inc
push
adc
call
scas
mov
mov
popf
(bad)
cmp
and
jae
mov
or
(bad)
push
xlat
in
lods
add
add
retf
xchg
push
push
imul
ffree
out
cdq
(bad)
jb
jns
fstp
shl
jbe
adc
and
out
das
cmps
xchg
dec
sbb
mov
outs
cmps
xchg
cmps
dec
scas
dec
fstp
sti
pop
cwde
or
cdq
pusha
sbb
adc
cs
sub
enter
mov
test
xor
cmp
(bad)
repz
xchg
push
jmp
dec
movs
xchg
call
popa
cmp
mov
pop
xchg
and
loope
mov
cdq
leave
dec
add
mov
(bad)
dec
xchg
in
out
fild
les
in
inc
jnp
mov
lock
sub
mov
ds
stos
call
mov
aas
(bad)
fs
(bad)
in
jge
adc
xchg
and
add
push
sub
cmc
or
inc
fs
mov
aaa
int3
inc
mov
sub
push
mov
daa
mov
jo
pop
cmp
add
ins
cld
inc
cld
test
test
cmp
mov
inc
rcl
sti
jo
fnstcw
sbb
dec
test
les
call
pop
and
dec
jecxz
xchg
leave
push
adc
push
hlt
sahf
mov
dec
mov
ins
pop
loop
push
rcr
sub
inc
(bad)
pop
mov
dec
cmp
push
fnstsw
int
cmp
lock
nop
ds
test
lea
jbe
test
and
scas
mov
stos
pushf
jmp
sbb
enter
call
mov
pop
fimul
mov
mov
pop
jecxz
(bad)
jmp
jg
cld
mov
pop
test
pushf
inc
lods
popf
mov
enter
sub
adc
cs
int
in
and
movs
or
scas
retf
lahf
add
lock
cld
sub
dec
pop
and
rcl
push
test
jl
cmp
aad
dec
adc
repnz
or
jbe
cmps
mov
push
jp
outs
add
aas
retf
int
dec
add
sub
or
inc
mov
ins
ins
into
jge
les
sbb
(bad)
xor
xchg
sbb
ins
jle
leave
ficom
jle
mov
inc
add
push
in
imul
add
adc
ins
push
(bad)
or
hlt
outs
fild
add
xor
pop
xor
(bad)
test
in
sbb
fcom
mov
shl
mov
in
add
xor
repnz
ss
sbb
in
cmp
mov
pop
or
in
mov
fidiv
dec
jp
das
xchg
mov
mov
push
(bad)
sar
cmp
cmc
icebp
imul
adc
call
jbe
sar
xor
jl
addr16
fwait
test
retf
inc
mov
mov
pop
fist
data16
dec
retf
inc
dec
mov
push
(bad)
cwde
enter
cmc
ins
aas
push
mov
retf
pop
cmp
and
inc
fbld
fldenv
in
call
inc
mov
mov
adc
stos
mov
int
scas
cmp
repnz
daa
retf
call
stos
xchg
adc
jo
loopne
ret
pop
xlat
or
ins
dec
pop
outs
je
enter
fcmovnbe
pop
test
loope
add
pop
xor
call
into
popf
adc
hlt
lds
pop
test
sti
dec
fld
lea
dec
ret
ret
out
jne
aaa
je
adc
in
in
shl
mov
cmp
fist
inc
sti
mov
or
sbb
add
dec
pop
call
(bad)
loopne
test
xor
mov
mov
mov
jge
add
aad
or
sbb
mov
push
mov
sbb
add
mov
aas
stc
(bad)
repz
ds
cdq
ds
mov
pop
imul
pop
ins
and
add
mov
sbb
ins
stmxcsr
sbb
xchg
xchg
(bad)
jbe
leave
ja
xchg
cmp
sbb
(bad)
jne
cmp
repz
cld
sub
xchg
and
add
and
sbb
mov
jge
xor
mov
das
outs
(bad)
or
cmp
sbb
repz
mov
(bad)
test
pop
arpl
pop
jnp
outs
mov
jo
iret
dec
pop
mov
cdq
push
add
loope
add
sub
bound
mov
js
inc
mov
inc
sbb
enter
jne
test
stos
push
in
clc
lea
jmp
inc
popa
add
mov
and
or
mov
pop
fisubr
test
xor
nop
push
pusha
call
sbb
es
in
ror
or
sub
clc
or
push
test
sbb
and
adc
ret
es
gs
ret
xchg
inc
push
fist
or
pop
jo
pop
leave
mov
push
sbb
cmc
cwde
pusha
sahf
nop
movs
iret
jae
pop
inc
mov
sub
pushw
popf
pop
pop
js
bound
or
shl
(bad)
cwde
add
mov
inc
pusha
bound
pop
inc
xchg
sbb
jmp
in
jp
dec
cmp
mov
mov
sub
add
push
pop
xor
xchg
jmp
and
data16
cmps
aam
sub
mov
mov
add
test
in
sbb
adc
pop
retf
mov
ss
mov
fsubr
pop
cmp
popa
or
add
sbb
cli
mov
or
mov
mov
jmp
mov
test
shr
ins
call
jb
cmp
cmc
push
jbe
and
cmp
daa
add
test
out
cmps
test
(bad)
mov
aas
pop
and
scas
jae
ret
and
push
pop
sub
mov
cmp
pop
and
pop
(bad)
or
push
cmp
das
lods
cmp
xor
mov
movs
lods
in
ins
(bad)
mov
pop
in
test
dec
call
push
hlt
mov
fisttp
gs
enter
dec
test
mov
mov
push
xor
xor
dec
mov
retf
push
jmp
scas
xchg
fstp
inc
mov
jmp
shr
(bad)
or
imul
inc
adc
pop
jmp
mov
push
mov
sub
cmp
iret
lahf
mov
mov
and
jp
add
popa
bound
sbb
movs
xor
ds
stos
pop
push
in
nop
pop
test
xchg
stos
push
add
adc
cmp
inc
loopne
nop
or
push
adc
adc
arpl
or
push
dec
test
sbb
or
out
jle
adc
jmp
jae
ins
pop
sar
push
cmc
xchg
rol
mov
lods
out
in
stos
jno
xchg
js
lds
sbb
jl
scas
imul
es
mov
push
sar
inc
mov
inc
push
sub
add
push
ret
dec
xchg
xchg
mov
bound
test
sub
rcr
add
inc
dec
sbb
pmullw
imul
sbb
push
push
xchg
mov
std
icebp
mov
sti
retf
and
fsub
push
and
cmps
stos
retf
ins
leave
mov
aas
pop
jne
xlat
jne
jle
and
mov
pop
jmp
xor
das
inc
out
sub
test
aad
(bad)
or
(bad)
sbb
cmp
jno
and
sub
lock
cmp
cmp
xor
dec
lea
jnp
(bad)
retf
push
repnz
or
mov
and
(bad)
sar
es
js
cmp
adc
mov
add
dec
test
je
jmp
adc
test
or
mov
pop
lods
bound
push
sbb
xchg
cmp
aad
adc
in
enter
pop
sub
jmp
jae
pushf
fsub
mov
add
mov
inc
sub
(bad)
shr
mov
sub
mov
lods
aas
jmp
out
stos
mov
in
popf
test
adc
dec
out
ror
imul
leave
ins
push
cwde
es
js
mov
push
xchg
mov
scas
xchg
ffree
imul
mov
sahf
cs
pushfw
cmp
sub
and
dec
sub
loop
xchg
sbb
cmp
in
(bad)
(bad)
ins
mov
(bad)
xchg
sub
pusha
and
mov
jns
in
scas
daa
pushf
xchg
pop
mov
fld
ins
ds
cmp
lea
or
test
aad
xchg
dec
jmp
(bad)
ds
iret
mov
jno
mov
pop
adc
pop
adc
xchg
test
pop
jno
push
cs
or
add
jmp
adc
inc
ja
and
mov
jle
inc
sahf
test
jecxz
icebp
popf
das
shl
mov
movs
pop
mov
icebp
or
adc
inc
lods
xchg
out
push
sbb
sbb
cmp
mov
std
repz
fidivr
jmp
pcmpeqw
jbe
jle
sbb
gs
movs
fiadd
push
(bad)
jle
sbb
popf
push
xor
sbb
push
cmp
sar
rcr
in
mov
jne
mov
or
and
dec
and
add
add
mov
or
out
fs
jns
pushf
adc
inc
dec
pushw
pop
arpl
leave
rcl
jnp
fdivr
push
jmp
xor
pop
inc
loop
test
shr
mov
push
aas
test
inc
sbb
shr
dec
movs
mov
ins
jb
int3
mov
push
lds
or
jo
xchg
adc
(bad)
cmps
loope
xchg
shl
stc
iret
inc
popf
xchg
mov
pop
mov
ins
sahf
jp
adc
repnz
fwait
ds
mov
adc
aad
jne
push
sbb
cli
scas
fwait
mov
push
test
inc
(bad)
aaa
outs
push
jno
jp
lock
push
push
aas
into
ins
out
push
pop
fsubr
adc
pop
pop
(bad)
mov
cli
movs
int3
mov
xchg
mov
out
int3
test
jae
mov
les
jl
mov
sbb
(bad)
hlt
rol
mov
jmp
cmps
adc
sub
dec
mov
push
jae
lods
sub
retf
adc
dec
std
addr16
sub
pusha
rcr
out
add
das
push
mov
push
out
sbb
jp
leave
shr
aas
into
push
mov
and
je
jmp
out
popf
ja
movnti
loop
fwait
mov
loopne
sbb
outs
inc
lods
ins
cmp
sti
ror
into
movs
xor
cwde
(bad)
jae
rcl
cld
mov
sbb
lahf
pop
inc
xchg
add
mov
sub
call
(bad)
mov
cmps
mov
clc
enter
(bad)
mov
inc
aad
cmp
jl
shr
mov
or
push
fwait
or
mov
aaa
lahf
les
in
and
inc
inc
fimul
xchg
mov
leave
iret
addr16
mov
adc
push
mov
sbb
mov
inc
loop
push
push
out
push
(bad)
jmp
pop
and
sbb
mov
sub
mov
cdq
fmul
out
not
sbb
or
mov
je
arpl
cdq
iret
adc
or
add
mov
icebp
dec
shl
sti
mov
in
bound
mov
clc
fisttp
cld
cmp
mov
cmp
fadd
mov
test
pop
fadd
lods
mul
scas
stos
loopne
sub
test
and
adc
mov
pop
add
cld
jmp
iret
lea
es
sub
mov
dec
cmps
mov
or
dec
inc
xchg
js
sub
xor
cdq
xchg
fmul
adc
mov
test
mov
mov
js
push
test
mov
jno
push
push
add
sti
sub
movs
test
(bad)
mov
inc
mov
xchg
fwait
repz
ds
fimul
xchg
nop
and
dec
cld
not
test
pop
and
xor
aad
(bad)
arpl
pop
mov
test
(bad)
pop
mov
add
imul
and
push
enter
push
sahf
lds
enter
repnz
mov
popf
(bad)
pop
cs
(bad)
or
xchg
jmp
bound
xchg
fcmovnb
fbstp
in
xor
and
daa
xor
cmp
dec
cmp
cmc
xchg
sub
iret
dec
sbb
mov
and
jb
movs
in
sbb
and
pop
les
sbb
xchg
mov
fwait
adc
pop
cld
sbb
and
mov
pop
icebp
ret
xchg
(bad)
sub
push
xchg
mov
repnz
shr
lods
(bad)
mov
sbb
or
into
scas
adc
rcl
jmp
jne
xchg
sti
or
cmp
pusha
cmps
fst
pop
mov
xor
and
stos
push
fwait
sub
nop
enter
jne
test
jno
fld
in
jmp
cmp
fwait
mov
hlt
aad
inc
lahf
and
in
imul
loope
cmc
xchg
adc
jecxz
cmp
pop
icebp
mov
(bad)
jb
or
pop
sub
mov
das
aam
daa
shr
mov
jg
leave
scas
popa
call
sbb
enter
jo
and
in
out
push
movs
jle
push
push
clc
(bad)
rol
add
add
add
scas
repnz
fsubr
and
xor
pop
pop
adc
test
dec
ret
jne
rol
xor
int3
lahf
test
lock
fs
and
lea
es
jmp
arpl
and
jae
xor
fdiv
cmp
xchg
sbb
adc
adc
add
sti
jmp
ins
sti
xchg
inc
call
leave
in
mov
shl
pop
lods
cmp
outs
mov
lock
or
pop
cmp
cmps
les
mov
adc
les
(bad)
adc
sahf
xchg
cmps
mov
fcmovb
add
dec
sbb
pusha
cmp
add
mov
mov
mov
in
lahf
movs
fld
xor
loop
inc
bound
aas
push
out
in
inc
xor
or
mov
or
imul
imul
or
retf
dec
sbb
popa
mov
pop
push
bnd
(bad)
hlt
ret
and
jle
cmps
ins
es
(bad)
lods
test
cmc
mov
jg
rcl
sub
fidivr
stos
add
xchg
lods
adc
and
test
fwait
call
cmp
add
call
fs
mov
js
mov
dec
stos
ret
(bad)
in
aas
mov
jbe
cmp
jp
jnp
mov
lea
cli
xlat
adc
and
cmp
sbb
lock
shl
cmp
push
cmps
jae
xchg
test
in
leave
sub
inc
and
bound
fld
bound
xor
mov
or
push
out
lds
stos
sbb
lods
das
jmp
or
cmp
push
sahf
mov
lods
scas
ret
push
aas
dec
adc
add
lahf
or
and
test
dec
sub
shr
daa
in
xor
movs
mov
bound
or
cli
gs
cmp
retf
jecxz
mov
and
xor
cmps
cwde
lahf
cld
rcr
mov
or
es
outs
fcomp
pop
loope
jle
cmp
jo
jo
out
jecxz
in
adc
dec
xor
push
sti
xchg
cmp
leave
pop
lahf
ret
jmp
js
mov
sbb
ins
bound
push
outs
xchg
mov
xor
adc
and
ret
imul
dec
(bad)
outs
mov
mov
add
mov
add
loopne
stos
sti
push
adc
nop
ds
add
fwait
popf
mov
inc
xchg
aaa
add
ins
(bad)
dec
imul
ror
xchg
ins
movs
push
xchg
popf
scas
cmp
pop
fld
pop
lahf
das
hlt
inc
sub
jge
xchg
test
fmul
jno
nop
neg
and
mov
cwde
xor
icebp
xchg
jbe
cmp
and
or
and
mov
out
inc
xchg
cmp
xchg
pop
sbb
cmp
sbb
inc
xor
inc
mov
mov
inc
mov
or
lahf
push
xchg
jbe
xor
push
sbb
ins
cmp
call
xchg
fwait
inc
fwait
mov
push
(bad)
aad
xchg
pop
fsubr
dec
imul
call
loop
mov
jecxz
sub
addr16
xor
ror
jmp
ja
xchg
dec
arpl
cmp
xor
cld
push
adc
jg
push
push
mov
stc
or
jb
xchg
cld
jmp
xchg
jp
pop
test
or
jp
sbb
mov
xor
sbb
sbb
fsubr
push
lods
sbb
ins
(bad)
ror
cpuid
pop
inc
pop
sub
xor
loop
xchg
(bad)
sbb
pop
sbb
aas
cmp
retf
xor
imul
popf
aad
mov
call
out
scas
jmp
add
loope
or
test
fdivr
adc
iret
pop
scas
int
ins
jo
mov
xchg
outs
or
jle
or
dec
xchg
mov
and
dec
jns
shl
pop
shr
rcr
jp
push
cmps
sub
sub
pop
add
cmp
dec
scas
popf
and
jge
mov
repz
and
inc
mov
mov
and
add
cmps
mov
sub
add
add
add
loopne
add
mov
add
dec
dec
add
mul
add
xchg
rol
add
sub
add
cdq
add
imul
aad
add
xor
xchg
add
outs
add
add
xchg
add
clc
jbe
add
add
adc
add
mul
add
je
add
xlat
jle
add
inc
add
out
add
scas
test
add
add
add
out
add
les
add
sub
fild
add
jnp
add
sti
add
and
add
mov
add
pop
add
add
add
xor
add
and
rol
add
add
cmp
add
test
add
add
(bad)
pop
add
movs
add
mov
icebp
add
imul
add
or
add
mov
add
out
add
xchg
into
push
add
or
push
add
push
pop
add
inc
mov
add
bound
add
or
add
jecxz
add
mov
add
cdq
pop
add
pushf
sahf
add
push
add
add
add
push
push
add
test
add
je
add
jbe
add
mov
add
rol
add
js
add
cld
icebp
add
xchg
add
mov
add
add
test
add
shl
add
add
scas
aas
add
jns
add
int3
retf
sar
add
mov
add
arpl
add
icebp
js
add
add
add
repz
cmp
add
mov
add
adc
dec
add
pop
cmp
add
in
add
sub
add
sbb
add
ja
add
jo
add
jno
add
aad
add
stc
nop
add
or
add
scas
push
add
int3
push
add
in
add
scas
sahf
add
(bad)
cmps
add
shr
add
lea
add
pop
add
fiadd
add
cmps
add
(bad)
iret
add
out
cmc
add
xchg
les
add
mov
add
add
xchg
fild
add
mov
add
ja
add
lods
add
add
or
add
movs
add
dec
jo
add
fiadd
add
retf
or
add
add
cld
push
add
xchg
retf
add
cmps
pop
add
call
test
add
data16
xor
add
jp
add
push
jmp
add
mov
add
pop
add
or
fld
add
sub
add
and
add
fdivr
add
push
xchg
add
add
sbb
add
cmp
add
cmps
nop
add
dec
or
add
add
xor
add
inc
aaa
add
(bad)
aam
add
push
add
outs
fiadd
add
mov
add
fild
add
aas
add
scas
pop
add
dec
mov
add
adc
add
add
loope
add
sbb
mov
add
cmc
add
push
or
add
add
xor
add
lods
add
movs
or
add
data16
jg
add
cmps
int
add
repnz
mov
add
rol
add
push
add
out
add
inc
add
pop
adc
add
xchg
add
add
lods
push
add
inc
fild
add
add
(bad)
add
mov
add
mov
add
add
pop
add
js
add
jo
add
inc
jge
add
aam
add
add
push
pop
add
aam
add
dec
xor
add
daa
add
push
pop
add
inc
cli
add
out
pop
add
and
add
cli
call
add
lods
mov
add
add
add
rol
add
add
test
add
or
add
add
push
sub
add
jecxz
add
sub
add
mov
add
add
dec
movs
add
xlat
pop
add
push
pop
add
ss
add
je
add
mov
add
inc
or
add
adc
add
inc
add
add
add
and
add
push
add
dec
adc
add
add
push
scas
add
cmp
add
test
add
add
out
add
adc
add
jmp
add
adc
add
(bad)
xor
add
xor
add
rol
add
add
(bad)
and
add
add
push
mov
add
out
add
in
fild
add
je
add
add
lea
add
add
mov
add
adc
add
mov
add
mov
jbe
add
in
add
inc
add
mov
rol
add
mov
fdivr
add
mov
add
out
jp
add
fwait
add
dec
jp
add
int3
add
ret
add
mov
cld
mov
add
xchg
add
mov
add
add
add
xchg
add
imul
imul
add
add
pop
xor
add
jmp
add
add
push
jl
add
pop
add
shl
add
arpl
add
xor
add
fbstp
add
pop
ret
loope
add
mov
add
outs
or
add
nop
add
cmp
add
add
jg
add
mul
add
cmps
add
nop
push
add
jecxz
add
jno
add
add
add
add
mov
add
test
jns
add
xlat
add
push
sub
add
mov
add
sbb
add
hlt
add
shl
add
in
loop
add
add
mov
add
(bad)
call
push
rol
add
add
jns
add
jb
add
push
test
retf
add
repnz
int
add
jbe
add
jae
add
mov
add
test
add
outs
or
add
add
movs
add
xchg
add
mov
mov
add
adc
add
dec
add
in
add
cmp
add
test
popa
ja
add
mov
add
aas
xchg
add
bound
add
push
or
add
or
add
push
add
retf
repz
add
add
popf
add
mov
dec
add
jmp
add
add
test
add
fmul
add
jne
add
inc
push
add
ins
or
add
sub
add
gs
add
jp
add
inc
jmp
add
enter
hlt
in
add
xor
add
(bad)
fld
add
inc
add
repz
add
jmp
add
mov
add
les
add
pop
add
sub
pop
add
cdq
in
add
lods
fld
add
cmp
add
sub
add
and
add
add
pop
add
pop
jae
add
cmp
add
add
repz
add
mov
add
pop
add
and
add
jmp
test
add
xor
add
ret
jmp
fadd
add
int3
add
sub
add
in
add
jo
add
shl
add
hlt
add
shl
add
push
inc
add
mov
add
(bad)
leave
add
cwde
jae
add
jl
add
test
inc
mov
add
rol
add
sti
mov
add
call
add
xor
push
dec
aas
gs
jmp
xchg
packsswb
or
sub
imul
sub
ds
ds
jae
mov
aas
sub
add
xor
sbb
and
fst
sbb
test
xchg
xlat
xchg
(bad)
test
mov
stos
add
and
aaa
or
xor
cmps
adc
das
adc
push
xor
adc
push
sbb
aaa
fisub
xor
adc
lds
aad
dec
sbb
aaa
in
and
xor
adc
lods
pop
(bad)
inc
sbb
aaa
mov
adc
pop
int3
das
push
sbb
aaa
fisub
xor
adc
ss
std
das
retf
xchg
int3
xchg
gs
xchg
test
adc
adc
shl
fsub
adc
sub
add
or
sbb
push
adc
cwde
test
xor
aaa
mov
pushf
(bad)
cmps
cmps
xor
mov
xor
cld
shr
xchg
test
mov
in
dec
and
pop
push
adc
adc
div
in
add
sub
adc
std
and
in
xlat
xor
add
xor
and
loopne
cmc
xor
add
sub
or
cld
and
in
test
fld
mov
push
sbb
xor
and
repnz
xor
add
sub
xor
and
in
mov
sti
add
sub
xor
and
ret
adc
xor
add
sub
sub
xor
adc
xor
add
xor
and
call
sub
sbb
xor
and
in
cmc
xor
add
sub
xor
and
xor
add
sub
sbb
cli
and
in
in
fld
iret
sub
xor
and
aam
div
in
add
sub
sbb
xor
and
in
std
xor
add
sub
xor
and
xor
add
sub
rdpmc
(bad)
and
in
mov
fadd
lds
push
sbb
xor
and
not
xor
add
sub
sub
hlt
and
in
xlat
xor
add
sub
xor
and
out
adc
xor
add
sub
xor
and
in
mov
inc
clc
sub
xor
and
rcl
in
add
sub
xor
and
in
(bad)
xor
add
sub
xor
and
rcl
xor
add
sub
adc
mul
push
xor
adc
xor
sbb
xor
and
cld
adc
xor
add
sub
sbb
loopne
push
xor
adc
xor
add
sub
xor
and
int3
adc
xor
add
sub
xor
and
in
stc
xor
sbb
xor
and
xchg
adc
xor
add
sub
xor
and
in
test
out
add
xor
and
xor
adc
xor
add
sub
sbb
xor
and
in
std
xor
add
sub
xor
and
repz
xor
add
sub
sbb
xor
and
in
in
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
int
div
in
add
sub
and
(bad)
and
in
fbstp
in
out
push
sbb
xor
and
jmp
sub
sub
icebp
and
in
std
xor
add
sub
xor
and
xchg
adc
xor
add
sub
add
sti
and
in
stc
xor
add
sub
xor
and
out
div
in
add
sub
xor
mul
push
xor
adc
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
in
test
fiadd
int
push
sbb
xor
and
adc
xor
add
sub
push
xor
and
in
(bad)
xor
add
sub
xor
and
enter
in
add
sub
sbb
xor
and
in
mov
ret
add
sub
xor
and
adc
xor
add
sub
push
xor
and
in
(bad)
xor
add
sub
xor
and
rcl
in
add
sub
sbb
xor
and
in
icebp
xor
add
sub
xor
and
xchg
adc
xor
add
sub
and
xor
adc
xor
add
sub
xor
and
out
adc
xor
add
sub
xor
and
in
(bad)
xchg
add
sub
xor
and
retf
adc
xor
add
sub
and
sti
and
in
xor
add
sub
xor
and
rcl
in
add
sub
and
xor
adc
xor
add
sub
xor
and
in
div
in
add
sub
cmp
icebp
and
in
fbstp
inc
mov
push
sbb
xor
and
int3
adc
xor
add
sub
xor
and
in
stc
xor
sbb
xor
and
jmp
div
in
add
sub
pop
xor
and
in
shl
xchg
add
xor
and
loopne
div
in
add
sub
add
std
and
in
in
xor
add
sub
xor
and
xchg
adc
xor
add
sub
and
in
std
xor
add
sub
xor
and
xor
add
sub
aas
xor
and
in
test
fadd
jecxz
push
sbb
xor
and
(bad)
adc
xor
add
sub
sbb
xor
and
in
xor
add
sub
xor
and
not
xor
add
sub
push
xor
and
in
ret
xor
add
sub
xor
and
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
in
div
in
add
sub
xor
and
in
icebp
xor
add
sub
xor
and
xchg
adc
xor
add
sub
or
cld
and
in
loope
cwde
add
sub
xor
and
out
div
in
add
sub
xor
and
in
std
xor
add
sub
xor
and
adc
xor
add
sub
sbb
xor
and
in
in
pushf
add
sub
xor
and
rcl
xor
add
sub
xor
and
in
(bad)
inc
(bad)
sub
xor
and
xor
adc
xor
add
sub
and
loopne
push
xor
adc
xor
add
xor
and
out
adc
xor
add
sub
and
repnz
in
loope
rol
sub
xor
and
pushf
adc
xor
add
sub
sbb
xor
and
in
std
xor
add
sub
xor
and
cmc
adc
xor
add
sub
ds
and
in
in
xor
add
sub
xor
and
in
adc
xor
add
sub
pop
xor
and
in
test
fld
xlat
sub
xor
and
jmp
add
sub
pop
xor
and
in
in
rol
sub
xor
and
pushf
adc
xor
add
sub
pop
xor
and
in
(bad)
xchg
add
sub
xor
and
fst
xor
add
sub
xor
and
in
(bad)
fld
stc
sub
xor
and
repnz
xor
add
sub
xor
and
in
(bad)
enter
push
sbb
xor
and
rcl
xor
add
sub
cs
and
in
in
xor
add
sub
xor
and
mov
xor
add
sub
xor
and
in
cmc
xor
sbb
xor
and
adc
xor
add
sub
pop
xor
and
in
icebp
xor
add
sub
xor
and
repnz
xor
add
sub
xor
and
in
test
lahf
add
sub
xor
and
xor
add
sub
inc
xor
and
in
ret
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
in
(bad)
test
sub
xor
and
adc
xor
add
sub
sbb
xor
and
in
in
loope
jmp
xor
and
adc
xor
add
sub
sbb
jmp
push
xor
adc
xor
sub
icebp
and
xchg
adc
xor
add
sub
sbb
xor
and
in
stc
xor
add
sub
xor
and
xor
adc
xor
add
sub
cmp
clc
and
in
in
xor
add
sub
xor
and
adc
xor
add
sub
sbb
xor
and
in
xor
add
sub
xor
and
xchg
adc
xor
add
sub
xor
and
in
(bad)
xor
sbb
xor
and
xchg
adc
xor
add
sub
sbb
xor
and
in
(bad)
ret
add
xor
and
call
add
sub
or
(bad)
and
in
in
hlt
add
sub
xor
and
cld
adc
xor
add
sub
xor
and
in
in
inc
int3
sub
xor
and
xor
shr
sbb
xor
and
in
ret
xor
sbb
xor
and
rcl
inc
sbb
xor
and
in
xor
add
sub
xor
and
xor
adc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
rcl
xor
add
sub
sbb
xor
adc
xor
add
xor
and
rcl
xor
add
sub
pop
xor
and
in
loope
add
sub
xor
and
(bad)
adc
xor
add
sub
cmp
sti
and
in
(bad)
stc
add
xor
and
adc
xor
add
sub
adc
fldenv
jae
pushf
adc
xor
add
sub
sub
shl
and
hlt
adc
xor
add
sub
adc
and
in
(bad)
add
sub
push
xor
and
call
add
sub
aas
xor
and
xor
add
sub
or
xor
adc
xor
add
sub
sub
xor
adc
xor
add
sub
cmp
lds
push
xor
add
sub
xor
and
loopne
out
loope
mov
and
rdpmc
in
bound
out
mov
into
add
sub
pop
xor
and
xor
mov
ds
xor
and
(bad)
adc
xor
add
sub
xor
and
mov
xor
add
sub
pop
xor
and
xor
adc
xor
add
sub
xor
adc
xor
add
sub
cmp
mul
js
not
sub
xor
adc
xor
add
sub
xor
and
rcl
xor
add
sub
adc
lds
and
xchg
adc
xor
add
sub
sub
test
and
xchg
adc
xor
add
sub
and
xor
adc
xor
add
xor
and
std
adc
xor
add
xor
and
adc
xor
add
sub
push
xor
and
mov
sub
sbb
xor
adc
xor
sbb
xor
and
jmp
sub
and
mul
inc
xor
adc
xor
add
sub
and
xor
adc
xor
add
sub
aas
xor
and
xor
adc
xor
add
xor
and
cld
adc
xor
or
xor
adc
xor
add
sub
xor
and
(bad)
adc
xor
add
xor
and
std
adc
xor
add
sub
or
(bad)
and
not
xor
add
sub
pop
xor
adc
xor
add
sub
xor
loop
dec
xor
adc
xor
add
sub
sbb
xor
and
hlt
adc
xor
add
sub
xor
loopne
jo
xchg
adc
xor
add
sub
add
shl
xor
adc
xor
sbb
xor
and
adc
xor
add
xor
adc
xor
add
sub
sbb
xor
and
leave
adc
xor
add
sub
adc
ret
and
retf
xor
add
sub
or
jmp
xor
add
sub
pop
xor
and
call
xor
add
sub
add
and
xor
adc
xor
add
sub
or
shl
push
xor
add
sub
sbb
fbld
addr16
adc
xor
add
sub
inc
xor
and
xchg
adc
xor
add
xor
and
pushf
adc
xor
add
sub
xor
and
adc
xor
add
sub
or
xor
adc
xor
add
xor
and
xlat
adc
xor
add
sub
add
leave
and
mov
xor
add
sub
and
(bad)
and
xor
adc
xor
add
ret
xor
adc
xor
add
sub
xor
and
out
adc
xor
add
sub
sbb
xor
and
xor
add
sub
sbb
xor
adc
xor
sbb
xor
and
loop
xlat
xor
add
sub
xor
aam
jge
loope
cmc
xor
add
sub
add
(bad)
and
xor
out
sub
sbb
and
xor
adc
xor
add
xor
and
popf
adc
xor
add
sub
inc
xor
and
repz
xor
add
sub
aas
xor
adc
xor
add
sub
add
in
inc
xor
adc
xor
add
sub
cmp
xor
adc
xor
add
xor
and
xor
adc
xor
add
sub
sbb
xor
and
in
adc
xor
add
sub
sub
xor
adc
xor
add
xor
and
rcl
xor
sbb
xor
adc
xor
add
sub
or
retf
xor
int3
sub
sbb
repz
lock
xor
add
xor
and
std
adc
xor
add
sub
pop
xor
adc
xor
add
xor
and
in
fidiv
loopne
out
sub
sbb
xor
and
xor
adc
xor
add
xor
adc
xor
add
cli
and
xchg
adc
xor
add
in
pop
xor
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
in
xor
add
sub
sub
icebp
and
les
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
loop
std
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
loop
std
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
loop
std
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
loop
(bad)
std
add
sub
xor
and
jmp
fnstenv
out
add
sub
xor
and
fcom
xor
add
sub
xor
and
out
cmc
xor
add
sub
sub
les
push
xor
adc
xor
add
sub
and
icebp
and
in
in
xor
add
xor
and
out
adc
xor
add
sub
xor
and
fist
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
icebp
adc
xor
add
sub
xor
icebp
and
in
cmc
xor
add
xor
and
in
test
in
add
sub
add
xor
adc
xor
add
sub
xor
and
hlt
adc
xor
add
sub
sub
icebp
and
in
xlat
xor
add
sub
xor
and
in
icebp
xor
add
sub
cmp
icebp
and
in
std
xor
add
sub
sub
icebp
and
out
cmc
xor
add
sub
sub
icebp
and
out
xor
add
sub
xor
and
ret
xor
add
sub
xor
and
adc
xor
add
sub
or
xor
add
sub
sbb
xor
and
(bad)
adc
xor
add
sub
xor
and
xor
add
sub
sub
icebp
and
lock
xor
add
sub
xor
and
xchg
adc
xor
add
sub
sub
icebp
and
in
adc
xor
sbb
xor
and
icebp
adc
xor
sbb
xor
and
in
adc
xor
sbb
xor
and
call
xor
add
sub
pop
xor
and
lock
xor
add
sub
xor
cmc
and
loopne
icebp
xor
add
sub
sub
icebp
and
not
xor
add
sub
xor
and
fist
xor
add
sub
xor
and
mov
xor
add
sub
xor
and
retf
xor
add
sub
sbb
xor
and
loop
cmc
xor
add
sub
or
xor
adc
xor
add
sub
xor
icebp
and
in
xor
add
sub
sbb
xor
and
in
cmc
xor
add
sub
xor
and
(bad)
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
rcl
sub
xor
and
in
cmc
xor
add
sub
push
xor
and
call
xor
add
sub
sub
icebp
and
out
xor
add
sub
cmp
icebp
and
in
xlat
xor
add
sub
sub
icebp
and
in
adc
xor
add
sub
xor
and
jecxz
cmc
xor
add
sub
xor
and
loop
cmc
xor
add
sub
sub
les
pop
xor
adc
xor
add
sub
or
xor
adc
xor
add
sub
or
xor
adc
xor
add
xor
and
in
shl
in
add
sub
add
xor
adc
xor
add
sub
sub
(bad)
and
out
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
enter
in
add
sub
xor
and
xor
adc
xor
add
xor
and
xor
adc
xor
add
sub
or
xor
adc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
sbb
xor
adc
xor
sbb
xor
and
repnz
xor
add
sub
sub
icebp
and
out
(bad)
in
add
sub
sub
icebp
and
out
xor
add
sub
xor
and
std
adc
xor
add
sub
xor
and
mov
xor
add
sub
or
cli
and
loopne
cmc
xor
add
sub
pop
xor
adc
xor
add
sub
xor
and
adc
xor
add
sub
sbb
(bad)
and
adc
xor
add
sub
xor
and
mov
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
out
in
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
out
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
int
div
in
add
sub
xor
and
in
adc
xor
add
sub
cmp
icebp
and
in
std
xor
add
sub
sub
icebp
and
loop
cmc
xor
add
sub
xor
and
in
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
xlat
xor
add
sub
add
xor
adc
xor
add
sub
and
in
cmc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
and
out
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
xor
icebp
and
in
fbstp
retf
add
sub
sbb
xor
and
in
cmc
xor
add
sub
sbb
icebp
and
in
cmc
xor
add
sub
sub
icebp
and
jecxz
(bad)
xor
add
sub
xor
fsub
push
xor
adc
xor
add
sub
or
xor
adc
xor
add
sub
pop
xor
and
in
icebp
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
(bad)
adc
xor
add
sub
daa
xor
and
enter
in
add
sub
xor
and
xor
adc
xor
sbb
xor
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
xor
and
rcl
xor
add
sub
and
enter
out
cmc
xor
add
sub
aas
xor
adc
xor
add
sub
aas
xor
and
hlt
adc
xor
add
sub
xor
fsub
push
xor
adc
xor
add
sub
or
xor
adc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
and
in
cmc
xor
add
sub
sbb
xor
and
in
cmc
xor
add
sub
and
in
xor
add
sub
and
icebp
and
in
in
in
add
sub
sbb
xlat
and
in
cmc
xor
add
sub
xor
loope
push
xlat
adc
xor
add
sub
sub
icebp
and
in
mov
out
enter
sub
icebp
and
out
xlat
xor
add
sub
das
xor
and
loopne
cmc
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
xor
and
cld
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
adc
xor
add
sub
cmp
(bad)
and
les
sub
sub
icebp
and
in
adc
xor
add
sub
cmp
icebp
and
in
std
xor
add
sub
sub
icebp
and
loopne
cmc
xor
add
sub
xor
and
loope
cmc
xor
add
sub
xor
and
loop
cmc
xor
add
sub
sub
les
pop
xor
adc
xor
add
sub
or
xor
add
sub
xor
and
in
stc
xor
sbb
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
xor
and
xchg
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cs
and
rcl
aad
shr
sbb
xor
adc
xor
add
sub
add
xor
adc
xor
add
sub
sub
icebp
and
jmp
add
sub
xor
and
fcom
xor
add
sub
xor
and
rcl
xor
add
sub
sbb
xor
and
xor
adc
xor
add
sub
aas
xor
and
in
ret
add
sub
add
mul
jle
in
cmc
xor
add
sub
sub
repz
lock
xor
add
sub
xor
cmc
and
in
adc
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
sub
clc
and
in
xlat
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
loop
loope
jmp
sbb
xor
and
(bad)
adc
xor
add
sub
sub
icebp
and
jecxz
cmc
xor
add
sub
sbb
leave
and
call
xor
add
sub
push
xor
and
lock
xor
add
sub
xor
and
in
adc
xor
add
sub
sub
icebp
and
in
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
adc
xor
add
sub
sub
icebp
and
in
loope
std
add
sub
sbb
loope
push
xor
adc
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
mov
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
(bad)
adc
xor
add
sub
xor
and
in
mov
sti
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
(bad)
lds
retf
sub
sub
icebp
and
loopne
cmc
xor
add
sub
xor
and
loope
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
out
adc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
(bad)
xor
add
sub
sub
clc
and
in
xlat
xor
add
sub
sub
icebp
and
out
adc
xor
add
xor
and
xlat
adc
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
sbb
icebp
and
in
in
in
add
sub
sub
icebp
and
jmp
add
sub
sub
icebp
and
rcl
sub
xor
and
mov
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
adc
xor
add
sub
xor
and
in
adc
xor
add
sub
sub
clc
and
in
icebp
xor
add
sub
sub
icebp
and
out
cmc
xor
add
sub
xor
and
loopne
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
loope
shl
jecxz
enter
sub
icebp
and
loopne
shl
lds
retf
sbb
xor
and
in
stc
xor
add
xor
and
call
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cmp
loope
push
xor
adc
xor
add
sub
xor
adc
xor
add
sub
xor
and
ret
xor
add
sub
xor
and
loopne
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
icebp
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
adc
xor
add
sub
cmp
icebp
and
in
xlat
xor
add
sub
sub
icebp
and
out
cmc
xor
add
sub
xor
and
out
cmc
xor
add
sub
xor
and
loop
cmc
xor
add
sub
sub
les
pop
xor
adc
xor
add
sub
or
xor
add
sub
xor
and
in
std
xor
add
sub
sub
icebp
and
out
shl
out
add
sub
xor
and
hlt
adc
xor
add
sub
xor
and
jmp
div
in
add
sub
sbb
xor
adc
xor
add
sub
sub
fbld
push
xor
adc
xor
add
sub
cmp
icebp
and
in
in
xor
add
xor
and
in
icebp
xor
add
sub
xor
and
rcl
xor
add
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
cmc
adc
xor
add
sub
xor
and
in
(bad)
xor
add
sub
xor
and
xchg
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sbb
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
div
in
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
std
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
stc
xor
sbb
xor
and
rcl
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
ret
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
in
xor
add
sub
xor
and
iret
adc
xor
sbb
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
lock
xor
add
sub
xor
and
leave
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
adc
xor
add
sub
sub
icebp
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
in
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
fbstp
call
sbb
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
hlt
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
div
retf
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
loopne
cmc
xor
add
sub
sub
icebp
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
jmp
sub
xor
and
in
shl
in
add
sub
xor
and
in
cmc
xor
add
sub
sbb
loope
push
xor
adc
xor
add
xor
and
in
cmc
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
call
add
sub
sub
mul
push
xor
adc
xor
add
sub
xor
and
into
adc
xor
add
sub
pop
xor
and
into
adc
xor
add
sub
daa
xor
adc
xor
add
sub
sub
fldenv
jo
xchg
adc
xor
add
sub
and
mul
pop
xor
add
sub
sub
and
xor
adc
xor
add
sub
xor
adc
xor
add
sub
push
xor
and
lock
xor
add
sub
sub
icebp
and
int
test
iret
add
sub
and
xchg
adc
xor
add
sub
xor
and
in
div
in
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
div
in
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
jmp
div
in
add
sub
sub
icebp
and
in
cmc
xor
add
sub
xor
and
in
in
xor
add
sub
sub
icebp
and
in
loope
in
shr
sbb
xor
and
in
mov
jmp
shr
sbb
xor
and
in
icebp
xor
add
sub
xor
and
std
adc
xor
add
sub
xor
and
out
adc
xor
sbb
xor
and
hlt
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cmp
call
adc
xor
sbb
xor
adc
xor
add
sub
pop
xor
and
xchg
adc
xor
add
sub
pop
xor
and
leave
adc
xor
add
sub
push
xor
adc
xor
add
sub
cmp
mul
jbe
fist
xor
sbb
xor
and
rcl
xor
add
sub
add
in
pop
xor
add
sub
das
xor
adc
xor
add
sub
cmp
and
xor
adc
xor
add
sub
push
xor
adc
xor
add
sub
sub
mul
pop
xor
adc
xor
add
sub
xor
and
leave
adc
xor
add
sub
and
call
adc
xor
add
sub
sub
repz
rcl
xor
add
sub
sub
fisub
pop
xor
adc
xor
add
sub
push
xor
adc
xor
add
sub
sbb
xor
adc
xor
add
sub
and
and
xor
adc
xor
add
sub
xor
and
int
loop
rol
sub
and
frstor
jno
xchg
adc
xor
sbb
xor
and
fist
xor
sbb
xor
adc
xor
add
sub
pop
xor
and
xchg
adc
xor
add
sub
adc
mul
push
xor
adc
xor
add
sub
xor
and
out
xor
add
xor
and
in
in
out
add
xor
and
adc
xor
add
sub
sub
stc
and
in
cmc
xor
add
sub
sbb
xor
and
aam
in
xor
add
sub
aas
xor
and
in
cmc
xor
add
sub
cmp
icebp
and
in
test
fild
in
push
sbb
xor
and
repnz
xor
add
sub
sub
icebp
and
int3
adc
xor
add
sub
cmp
icebp
and
in
test
fild
in
push
sbb
xor
and
adc
xor
add
sub
das
xor
and
ret
adc
xor
add
sub
daa
xor
and
not
sub
das
xor
and
adc
xor
add
sub
xor
and
cld
adc
xor
add
sub
das
xor
and
aam
in
xor
add
sub
xor
icebp
and
in
in
out
add
sub
xor
and
lock
xor
add
sub
or
loope
push
xor
adc
xor
add
sub
sbb
and
xor
adc
xor
add
sub
sub
icebp
and
rcl
inc
sbb
xor
and
call
xor
add
sub
push
xor
and
cmc
adc
xor
add
sub
push
xor
and
jmp
stc
xor
add
sub
push
xor
and
not
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
sub
xlat
and
aad
xor
inc
sbb
xor
and
cld
adc
xor
add
sub
das
xor
and
in
cmc
xor
add
sub
sbb
xor
and
out
adc
xor
add
sub
sbb
xor
and
jmp
sub
daa
xor
and
not
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
sub
xor
les
inc
sbb
xor
and
out
adc
xor
add
sub
and
lock
xor
add
sub
cmp
loope
push
xor
adc
xor
add
sub
xor
and
cld
adc
xor
add
sub
das
xor
and
hlt
adc
xor
add
sub
xor
and
retf
xor
add
sub
pop
xor
and
loopne
test
sahf
add
sub
daa
xor
and
adc
xor
add
sub
xor
and
adc
xor
add
sub
das
xor
and
jmp
stc
xor
add
sub
xor
and
xchg
adc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
retf
xor
add
sub
das
xor
and
call
add
sub
xor
and
xchg
adc
xor
add
sub
xor
and
rcl
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
sub
and
xor
adc
xor
add
sub
xor
and
not
sub
xor
and
xchg
adc
xor
add
sub
daa
xor
and
adc
xor
add
sub
sbb
xor
adc
xor
add
sub
or
xor
adc
xor
add
sub
sub
icebp
and
out
adc
xor
add
sub
cmp
icebp
and
in
ret
xor
add
sub
and
enter
icebp
adc
xor
add
sub
add
xor
adc
xor
add
sub
xor
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
or
xor
adc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
retf
xor
add
sub
sub
icebp
and
call
add
sub
and
enter
in
adc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
cld
adc
xor
add
sub
cmp
icebp
and
in
ret
xor
add
sub
and
repnz
icebp
adc
xor
add
sub
cmp
jmp
xor
add
sub
xor
and
rcl
sub
xor
and
loop
icebp
xor
add
sub
xor
and
xchg
adc
xor
add
sub
sub
loope
push
xor
adc
xor
add
sub
xor
loope
push
xor
adc
xor
add
sub
xor
and
jmp
div
in
add
sub
xor
and
jecxz
stc
xor
add
sub
xor
and
retf
xor
add
sub
cmp
loope
push
xor
adc
xor
add
sub
sub
icebp
and
xchg
adc
xor
add
sub
cmp
xlat
and
repnz
xor
add
sub
sub
icebp
and
ret
xor
add
sub
and
xlat
and
lock
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
mov
xor
add
sub
xor
and
adc
xor
add
sub
sub
icebp
and
(bad)
adc
xor
add
sub
sub
xlat
and
jmp
clc
xor
sbb
xor
and
rcl
sub
xor
and
loope
std
xor
add
sub
cmp
fsub
push
xor
adc
xor
add
sub
sbb
xor
and
adc
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
sbb
xor
and
int
ret
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
pushf
adc
xor
add
sub
xor
and
out
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
and
icebp
and
in
fbstp
in
add
xor
and
in
cmc
xor
add
sub
pop
xor
adc
xor
add
sub
xor
and
adc
xor
add
sub
add
xor
adc
xor
add
sub
sub
clc
and
out
icebp
xor
add
sub
xor
repnz
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
loope
div
retf
add
sub
daa
xor
and
(bad)
adc
xor
add
sub
cmp
fisub
push
xor
adc
xor
add
sub
xor
adc
xor
add
sub
pop
xor
and
in
cmc
xor
add
xor
and
in
ret
xor
add
sub
sub
icebp
and
jmp
sub
xor
and
loope
cmc
xor
add
sub
xor
and
loopne
cmc
xor
add
sub
sub
fbld
push
xor
adc
xor
add
sub
xor
and
mov
xor
add
sub
sub
icebp
and
out
adc
xor
add
sub
xor
and
in
aad
retf
add
sub
sub
icebp
and
loopne
sti
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
out
cmc
xor
add
sub
sub
(bad)
and
in
std
xor
add
sub
xor
and
out
adc
xor
add
sub
add
repz
adc
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
xor
and
fist
sub
daa
xor
and
in
cmc
xor
add
sub
sub
icebp
and
icebp
adc
xor
add
sub
add
xor
adc
xor
add
sub
and
xlat
and
aam
in
in
add
sub
xor
and
loop
cmc
xor
add
sub
daa
xor
and
aam
xlat
xor
add
sub
xor
and
rcl
xor
add
sub
sub
icebp
and
jmp
add
sub
rdpmc
xlat
and
adc
xor
add
sub
xor
les
rol
sub
sub
icebp
and
jmp
fnsave
lds
shr
sbb
xor
and
in
cmc
xor
add
sub
xor
(bad)
and
in
cmc
xor
add
sub
add
xor
adc
xor
add
sub
or
loope
push
xor
adc
xor
add
sub
xor
and
les
sub
sub
icebp
and
out
adc
xor
add
sub
das
xor
and
in
in
inc
jmp
je
add
xor
adc
xor
add
sub
sub
xlat
and
cld
adc
xor
add
sub
add
xor
adc
xor
sbb
xor
and
in
adc
xor
add
sub
sub
icebp
and
loop
xor
add
sub
sub
icebp
and
call
add
sub
xor
and
loopne
cmc
xor
add
sub
sub
icebp
and
jmp
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
out
cmc
xor
add
sub
xor
and
rcl
std
add
sub
xor
and
jmp
aad
les
retf
sub
pop
xor
and
loop
cmc
xor
add
sub
xor
and
jmp
add
sub
xor
and
out
adc
xor
add
sub
inc
xor
and
in
std
xor
add
sub
xor
and
out
adc
xor
add
sub
and
xor
adc
xor
add
sub
sub
clc
and
out
stc
xor
add
sub
sub
icebp
and
jmp
add
sub
xor
and
out
cmc
xor
add
sub
xor
and
out
adc
xor
add
sub
inc
xor
and
jmp
sub
add
xor
adc
xor
sbb
xor
and
not
xor
add
sub
xor
adc
xor
add
sub
sub
icebp
and
mov
sub
das
xor
and
in
cmc
xor
add
sub
add
icebp
and
not
sub
sub
icebp
and
popf
adc
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
repnz
xor
add
sub
sub
icebp
and
into
adc
xor
add
sub
add
xor
adc
xor
sbb
xor
and
nop
adc
xor
sbb
xor
and
xchg
adc
xor
add
sub
add
xor
adc
xor
sbb
xor
and
out
adc
xor
add
sub
xor
and
jecxz
cmc
xor
add
sub
xor
and
out
adc
xor
add
sub
sbb
xor
adc
xor
add
sub
xor
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
cld
adc
xor
add
sub
add
xor
adc
xor
add
sub
and
(bad)
and
out
adc
xor
add
sub
and
fisub
push
xor
adc
xor
add
sub
xor
and
fist
xor
add
sub
xor
and
out
(bad)
les
shr
sbb
xor
and
out
adc
xor
add
sub
xor
and
loopne
cmc
xor
add
sub
xor
and
aam
in
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
mov
xor
add
sub
xor
and
adc
xor
add
sub
or
xor
adc
xor
add
sub
sub
icebp
and
xchg
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
xor
xlat
and
in
cmc
xor
add
sub
sbb
icebp
and
in
fbstp
call
sbb
xor
and
in
cmc
xor
add
sub
sub
clc
and
out
loope
lds
loop
pop
sbb
xor
and
jmp
loope
lds
ret
sbb
xor
and
rcl
xor
add
sub
xor
adc
xor
add
sub
xor
and
xlat
adc
xor
add
sub
add
xor
adc
xor
add
sub
sub
icebp
and
in
adc
xor
add
sub
xor
and
out
cmc
xor
add
sub
xor
and
in
(bad)
in
add
sub
xor
and
rcl
push
sbb
xor
and
out
cmc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
rcl
xor
add
sub
das
xor
and
loop
(bad)
aad
(bad)
sub
sbb
xor
adc
xor
add
sub
sub
clc
and
out
stc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
rcl
xor
add
sub
sbb
shl
xor
adc
xor
add
sub
xor
and
rcl
xor
add
sub
add
xlat
and
rcl
into
add
sub
sub
icebp
and
(bad)
adc
xor
add
sub
sub
icebp
and
xlat
adc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
adc
xor
add
sub
add
fldenv
push
xor
adc
xor
add
sub
sub
clc
and
out
stc
xor
add
sub
xor
and
(bad)
adc
xor
add
sub
xor
adc
xor
add
sub
and
clc
and
call
add
sub
xor
and
out
adc
xor
add
sub
push
xor
and
nop
adc
xor
add
sub
sub
icebp
and
enter
rol
sub
xor
and
rcl
xor
add
sub
sub
icebp
and
into
adc
xor
add
sub
xor
and
fcom
xor
add
sub
xor
and
fist
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
(bad)
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
hlt
adc
xor
add
sub
or
leave
and
rcl
in
add
sub
xor
and
loopne
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sbb
xor
and
in
cmc
xor
add
sub
push
xor
adc
xor
add
sub
sub
icebp
and
int
fdiv
out
add
sub
xor
and
mov
xor
add
xor
and
adc
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
xor
and
nop
adc
xor
add
sub
sbb
loope
push
xor
adc
xor
add
sub
aas
xor
and
xchg
adc
xor
add
xor
and
in
cmc
xor
add
sub
cmp
(bad)
and
xor
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cmp
loope
gs
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cmp
icebp
and
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cmp
xlat
and
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cmp
loope
jo
out
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cmp
loope
dec
xor
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
and
icebp
and
xor
add
sub
xor
and
in
in
sti
add
sub
xor
and
out
adc
xor
add
sub
add
repz
rcl
aad
shr
sbb
xor
and
in
cmc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
aam
icebp
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
icebp
adc
xor
add
sub
xor
and
rcl
xor
add
sub
and
fisub
push
xor
adc
xor
add
sub
aas
xor
and
pushf
adc
xor
add
sub
aas
xor
adc
xor
add
sub
sbb
xor
and
ret
adc
xor
add
xor
and
xor
adc
xor
add
sub
xor
and
loopne
icebp
xor
add
sub
add
frstor
js
out
adc
xor
add
sub
add
repz
in
cmc
xor
add
xor
and
loopne
cmc
xor
add
sub
pop
xor
adc
xor
add
sub
xor
and
loope
xor
add
sub
or
leave
and
rcl
in
add
sub
xor
and
retf
xor
add
sub
add
jecxz
push
xor
adc
xor
add
sub
push
xor
adc
xor
add
sub
add
xor
adc
xor
add
sub
sub
icebp
and
repz
xor
add
sub
xor
and
loop
xor
add
sub
sbb
xor
adc
xor
add
sub
xor
and
loopne
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sbb
xor
and
xor
adc
xor
add
xor
and
repnz
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
loope
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
loope
xor
add
sub
xor
and
retf
xor
add
sub
sbb
xor
adc
xor
add
sub
cmp
loope
push
xor
adc
xor
add
sub
xor
and
retf
xor
add
sub
sub
icebp
and
(bad)
adc
xor
add
sub
sbb
xor
adc
xor
add
sub
add
xlat
and
(bad)
adc
xor
add
sub
xor
and
out
adc
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
rcl
xor
add
sub
and
clc
and
not
xor
add
sub
das
xor
and
xor
add
sub
sbb
xor
and
ret
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
adc
xor
add
sub
xor
fldenv
push
xor
adc
xor
add
sub
or
jecxz
push
xor
adc
xor
add
sub
xor
and
not
xor
add
sub
sub
icebp
and
repnz
xor
add
sub
or
jecxz
push
xor
adc
xor
add
sub
xor
and
retf
xor
add
sub
sub
icebp
and
mov
xor
add
sub
sbb
xor
adc
xor
add
sub
xor
icebp
and
in
in
out
add
sub
das
xor
and
(bad)
adc
xor
add
sub
xor
icebp
and
in
in
xor
add
sub
sub
icebp
and
call
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
iret
adc
xor
add
sub
sbb
repnz
in
std
xor
add
sub
xor
and
int
icebp
xor
add
sub
aas
xor
and
out
cmc
xor
add
sub
xor
and
cld
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
leave
adc
xor
add
sub
xor
and
in
adc
xor
add
sub
das
xor
and
in
(bad)
xor
add
sub
xor
and
int
icebp
xor
add
sub
and
leave
and
out
cmc
xor
add
sub
cmp
fisub
jg
cld
adc
xor
add
sub
or
xor
adc
xor
add
sub
sub
jecxz
push
xor
adc
xor
add
sub
xor
and
icebp
adc
xor
add
sub
xor
and
nop
adc
xor
add
sub
xor
and
out
adc
xor
add
sub
xor
fldenv
push
xor
adc
xor
add
sub
sub
enter
repnz
xor
add
sub
xor
and
(bad)
adc
xor
add
sub
sbb
xor
adc
xor
add
sub
xor
and
loop
cmc
xor
add
sub
or
xor
adc
xor
add
sub
sbb
xor
and
not
xor
add
sub
xor
and
retf
xor
add
sub
xor
icebp
and
in
std
xor
add
sub
sbb
xor
adc
xor
add
sub
xor
and
repnz
xor
add
sub
sub
icebp
and
not
xor
add
sub
and
loop
push
xor
adc
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
cmp
icebp
and
in
shl
retf
add
sub
das
xor
and
xlat
adc
xor
add
sub
xor
and
adc
xor
add
sub
sub
icebp
and
repnz
xor
add
sub
add
xor
adc
xor
add
sub
sub
icebp
and
rcl
xor
sbb
xor
and
out
adc
xor
add
sub
add
repz
in
cmc
xor
add
xor
and
jmp
sub
xor
and
adc
xor
add
sub
xor
and
ret
adc
xor
add
sub
xor
and
retf
xor
add
sub
xor
icebp
and
in
in
xor
add
sub
sub
icebp
and
out
fdiv
out
add
sub
xor
and
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
push
xor
and
(bad)
adc
xor
add
sub
add
xor
adc
xor
sbb
xor
and
xlat
adc
xor
add
sub
xor
and
out
adc
xor
add
sub
add
fldenv
push
xor
adc
xor
add
sub
pop
xor
and
out
adc
xor
add
sub
add
repz
rcl
xor
add
sub
xor
and
out
fnstenv
(bad)
add
sub
pop
xor
and
loop
cmc
xor
add
sub
or
xor
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
pop
xor
and
(bad)
adc
xor
add
sub
add
xor
adc
xor
das
xor
and
icebp
adc
xor
add
sub
xor
adc
xor
add
sub
xor
and
retf
xor
add
sub
sub
icebp
and
mov
xor
add
sub
add
xlat
and
repz
xor
add
sub
xor
and
repz
xor
add
sub
cmp
icebp
and
in
shl
in
add
sub
xor
(bad)
and
loopne
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
clc
and
in
test
fadd
loop
pop
sbb
xor
and
out
adc
xor
add
sub
cmp
icebp
and
in
shl
in
add
sub
sub
icebp
and
mov
xor
add
sub
xor
and
fcom
xor
add
sub
xor
and
fcom
xor
add
sub
xor
and
adc
xor
add
sub
sub
icebp
and
in
shl
out
add
sub
xor
and
in
cmc
xor
add
sub
aas
xor
adc
xor
add
sub
das
xor
and
in
cmc
xor
add
sub
xor
and
in
fbstp
mov
daa
xor
and
in
cmc
xor
add
sub
sbb
cli
and
out
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
leave
adc
xor
add
sub
das
xor
and
ret
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sbb
cli
and
out
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
leave
adc
xor
add
sub
das
xor
and
ret
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
and
out
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
xchg
adc
xor
add
sub
das
xor
and
ret
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
sbb
cli
and
out
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
leave
adc
xor
add
sub
das
xor
and
ret
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
sbb
cli
and
out
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
leave
adc
xor
add
sub
das
xor
and
in
adc
xor
add
sub
add
xor
adc
xor
add
fsub
push
xor
adc
xor
add
sub
push
xor
and
out
adc
xor
add
sub
xor
and
cld
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
leave
adc
xor
add
sub
das
xor
and
in
adc
xor
add
sub
das
xor
and
in
in
inc
icebp
sub
xor
and
not
xor
add
sub
sbb
xor
adc
xor
add
sub
xor
and
cld
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
leave
adc
xor
add
sub
das
xor
and
in
adc
xor
add
sub
add
xor
adc
xor
add
sub
das
xor
and
in
shl
inc
icebp
sub
xor
and
not
sub
xor
and
(bad)
adc
xor
add
sub
cmp
fisub
jg
repnz
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
icebp
and
in
loope
out
add
sub
sub
icebp
and
in
adc
xor
add
sub
xor
and
retf
xor
add
sub
sub
icebp
and
std
adc
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
loop
std
xor
add
sub
or
(bad)
and
loop
cmc
xor
add
sub
daa
xor
and
icebp
adc
xor
add
sub
xor
and
loop
cmc
xor
add
sub
or
xor
adc
xor
add
sub
or
xor
adc
xor
add
sub
sub
clc
and
in
mov
fadd
loop
push
sbb
xor
and
out
adc
xor
add
sub
add
fldenv
push
xor
adc
xor
add
sub
add
xor
adc
xor
add
xor
adc
xor
xor
fldenv
push
xor
adc
xor
add
sub
or
(bad)
and
rcl
xor
add
sub
xor
and
in
adc
xor
add
sub
sub
icebp
and
out
fdiv
out
add
sub
xor
and
adc
xor
add
sub
sub
icebp
and
out
fdiv
out
add
sub
xor
and
fcom
xor
add
sub
sub
icebp
and
out
fdiv
aad
ret
sub
pop
xor
and
call
add
sub
xor
and
in
adc
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
out
adc
xor
add
sub
sbb
xor
and
ret
adc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
out
adc
xor
add
sub
sbb
xor
and
in
cmc
xor
add
sub
xor
and
xchg
adc
xor
add
sub
sbb
repnz
aam
(bad)
in
add
sub
xor
and
cld
adc
xor
add
sub
sbb
xlat
and
in
cmc
xor
add
sub
sbb
xor
adc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
out
adc
xor
add
sub
sbb
xor
and
in
cmc
xor
add
sub
xor
and
iret
adc
xor
add
sub
daa
xor
and
aam
in
in
add
sub
xor
and
std
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
cs
and
in
cmc
xor
add
sub
cmp
icebp
and
in
in
xor
add
sub
sub
icebp
and
out
mov
rol
sub
xor
and
fist
xor
add
sub
xor
and
mov
xor
add
sub
xor
and
mov
xor
add
sub
sub
icebp
and
xchg
adc
xor
add
sub
sub
icebp
and
xchg
adc
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
std
adc
xor
add
sub
cmp
icebp
and
in
in
retf
add
sub
sbb
xor
and
in
cmc
xor
add
sub
add
xlat
and
in
cmc
xor
add
sub
push
xor
and
xor
add
sub
sbb
xor
adc
xor
add
sub
daa
xor
and
std
adc
xor
add
sub
sub
icebp
and
leave
adc
xor
add
sub
xor
and
call
add
sub
xor
and
out
adc
xor
add
sub
push
xor
adc
xor
add
sub
sub
icebp
and
leave
adc
xor
add
sub
xor
and
call
add
sub
xor
and
in
adc
xor
add
sub
add
xor
adc
xor
add
sub
sub
icebp
and
rcl
xor
add
sub
xor
and
rcl
xor
add
sub
and
in
cmc
xor
add
sub
sub
icebp
and
in
xor
add
sub
sub
icebp
and
fst
xor
sbb
xor
adc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
push
xor
and
rcl
lds
ret
sbb
xor
and
rcl
xor
add
sub
xor
and
out
adc
xor
add
sub
push
xor
adc
xor
sbb
xor
and
leave
adc
xor
add
sub
xor
and
call
add
sub
xor
and
in
adc
xor
add
sub
xor
and
xchg
adc
xor
add
sub
xor
and
out
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
add
fisub
push
xor
adc
xor
add
sub
sub
icebp
and
in
fbstp
out
add
sub
sub
icebp
and
rcl
xor
sbb
xor
and
in
mov
out
into
sub
sub
icebp
and
leave
adc
xor
add
sub
xor
and
call
add
sub
xor
and
in
adc
xor
add
sub
xor
and
xchg
adc
xor
add
sub
xor
and
out
cmc
xor
add
sub
sbb
xor
adc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
add
fisub
push
xor
adc
xor
add
sub
sub
icebp
and
in
in
xor
add
sub
sub
icebp
and
xlat
adc
xor
sbb
xor
and
in
icebp
xor
add
sub
sub
icebp
and
leave
adc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
in
adc
xor
add
sub
xor
and
xchg
adc
xor
add
sub
xor
and
out
cmc
xor
add
sub
sbb
xor
adc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
or
xor
adc
xor
add
sub
sbb
icebp
and
in
xlat
xor
add
sub
sub
icebp
and
enter
sahf
add
sub
or
xor
adc
xor
add
sub
sbb
xor
and
in
loope
aad
jecxz
push
sbb
xor
and
into
adc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
out
adc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
out
adc
xor
add
sub
push
xor
adc
xor
add
sub
sub
mul
pop
xor
adc
xor
add
sub
sub
icebp
and
out
ret
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
out
shl
in
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
in
ret
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
(bad)
in
shr
sbb
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
shl
jmp
sbb
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
loope
in
add
sub
xor
and
jecxz
out
xor
add
sub
daa
xor
and
not
xor
add
sub
sub
icebp
and
iret
adc
xor
sbb
xor
and
out
fidiv
call
sbb
xor
and
out
adc
xor
add
sub
push
xor
adc
xor
add
sub
xor
and
jmp
add
sub
xor
and
out
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
loope
icebp
xor
add
sub
xor
and
in
std
xor
add
sub
xor
and
icebp
adc
xor
add
sub
add
xor
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
das
xor
and
in
icebp
xor
add
xor
and
in
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
cmc
xor
add
xor
and
in
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
mov
out
add
xor
and
in
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
xor
add
xor
and
in
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
test
out
add
xor
and
in
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
ret
xor
add
xor
and
in
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
(bad)
xor
add
xor
and
in
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
(bad)
out
add
xor
and
in
xor
add
sub
add
xor
adc
xor
add
sub
sub
icebp
and
aad
cmc
xor
add
sub
sub
icebp
and
rcl
sti
add
sub
sub
icebp
and
rcl
inc
shr
sbb
xor
and
hlt
adc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
(bad)
adc
xor
add
sub
xor
and
out
cmc
xor
add
sub
sub
les
push
xor
adc
xor
add
sub
push
xor
and
out
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
das
xor
and
in
loope
out
add
xor
and
in
xor
add
sub
xor
and
in
test
out
add
sub
sub
icebp
and
out
cmc
xor
add
sub
sub
icebp
and
rcl
sahf
add
sub
sub
icebp
and
rcl
inc
shr
sbb
xor
and
hlt
adc
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
retf
xor
add
sub
xor
and
xor
adc
xor
add
sub
xor
and
fist
xor
add
sub
xor
and
out
icebp
xor
add
sub
xor
and
in
icebp
xor
add
sub
xor
and
icebp
adc
xor
add
sub
xor
and
in
stc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
aam
cmc
xor
add
xor
and
xor
adc
xor
add
sub
or
xor
adc
xor
add
sub
push
xor
and
in
cmc
xor
add
sub
sbb
xor
and
(bad)
adc
xor
add
sub
xor
and
out
in
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
out
in
xor
add
sub
xor
and
rcl
xor
add
sub
xor
and
out
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
jmp
add
sub
sub
icebp
and
call
xor
add
sub
xor
and
xchg
adc
xor
add
sub
xor
and
in
shl
aam
jecxz
push
sbb
xor
and
out
adc
xor
add
sub
push
xor
adc
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
loop
cmc
xor
add
sub
xor
xlat
and
xor
add
sub
xor
and
adc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
out
icebp
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
icebp
adc
xor
add
sub
xor
and
xor
adc
xor
add
sub
sbb
repz
in
icebp
xor
add
sub
or
xor
adc
xor
add
sub
and
out
cmc
xor
add
sub
cmp
fisub
push
xor
adc
xor
add
sub
daa
xor
and
jmp
add
sub
sub
icebp
and
out
(bad)
xor
add
sub
sub
icebp
and
out
cmc
xor
add
sub
xor
and
loope
cmc
xor
add
sub
xor
and
aam
mov
xchg
add
sub
xor
xlat
and
xlat
adc
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
xchg
adc
xor
add
sub
xor
and
loope
xlat
xor
add
sub
add
xor
adc
xor
add
sub
sbb
xor
and
in
cmc
xor
add
sub
xor
and
aad
cmc
xor
add
sub
daa
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
ret
xor
add
sub
or
xor
adc
xor
add
sub
xor
and
loope
cmc
xor
add
sub
sub
icebp
and
in
loope
jmp
xor
and
out
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
cmc
xor
add
sub
xor
and
call
add
sub
push
xor
and
leave
adc
xor
add
sub
xor
and
in
div
in
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
std
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
rcl
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
std
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
test
jmp
xor
and
xchg
adc
xor
add
sub
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
icebp
adc
xor
add
sub
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
loope
in
shr
push
sbb
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
loopne
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
test
ret
sub
xor
and
in
cmc
xor
add
sub
sub
icebp
and
in
xor
add
sub
xor
and
jmp
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
in
jmp
xor
and
loope
icebp
xor
add
sub
xor
and
hlt
adc
xor
add
sub
xor
and
in
cmc
xor
add
sub
pop
xor
and
rcl
xor
add
sub
pop
xor
and
icebp
adc
xor
add
sub
pop
xor
and
ret
xor
add
sub
xor
and
int3
adc
xor
add
sub
pop
xor
and
int
cli
xor
add
sub
sub
frstor
jno
retf
adc
xor
add
sub
sub
leave
and
aad
fdiv
jmp
xlat
sub
pop
xor
and
out
shl
into
add
sub
add
icebp
and
in
xor
add
sub
pop
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
cmc
xor
add
sub
xor
and
in
mov
add
sub
xor
and
loopne
cmc
xor
add
sub
xor
and
hlt
adc
xor
add
sub
sub
and
or
es
loop
out
fwait
ss
or
fucom
test
mov
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
popa
stos
stos
mov
add
sub
cs
mov
mov
cmps
xchg
out
mov
cs
aaa
mov
sahf
xchg
ret
stos
lods
mov
je
sub
mov
das
lahf
sub
movs
xchg
ret
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
ret
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
stos
mov
add
sub
sbb
sbb
add
sub
sbb
or
add
sub
sbb
mov
jl
add
mov
cs
sub
cwde
xchg
hlt
mov
adc
mov
mov
ins
stos
mov
mov
stos
xchg
aam
adc
sbb
add
sar
lahf
sbb
add
sub
ds
mov
mov
mov
stos
xchg
mov
add
hlt
mov
add
cmp
sbb
and
or
sub
mov
mov
adc
aaa
mov
mov
mov
or
sub
mov
call
mov
add
sub
mov
mov
imul
das
mov
ds
mov
mov
movs
xchg
mov
or
lods
mov
add
cmp
sbb
ins
mov
mov
cli
mov
add
mov
mov
push
lahf
sub
mov
pusha
stos
leave
mov
add
cmp
sbb
sbb
add
cmp
sbb
ins
mov
lahf
xchg
idiv
das
lahf
sbb
mov
stos
xchg
mov
adc
sar
or
mov
mov
imul
sub
ds
pushf
mov
and
retf
stos
mov
mov
mov
retf
stos
mov
mov
mov
stos
pushf
mov
jne
sub
imul
sub
imul
push
mov
stos
pushf
mov
or
les
setg
mov
mov
stos
xchg
mov
add
les
or
sub
sbb
sbb
add
sub
sbb
adc
jne
or
sbb
stos
mov
sbb
sub
cmp
xor
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
test
push
lahf
ds
mov
stos
stos
mov
add
sub
or
sbb
add
add
ins
stos
mov
mov
mov
stos
mov
mov
cwde
xchg
sar
lahf
and
adc
stc
mov
sbb
das
mov
or
cs
sahf
xchg
cmc
mov
sub
adc
pusha
stos
leave
mov
jo
adc
pop
stos
xchg
mov
jl
pop
mov
adc
sub
cwde
xchg
stc
mov
sbb
cmp
ins
stos
pushf
mov
or
sub
ds
test
mov
fwait
xchg
sar
push
lahf
adc
jne
xor
sbb
stos
mov
sbb
push
mov
stos
mov
mov
mov
stos
mov
mov
mov
sar
or
mov
mov
ds
stos
mov
and
(bad)
mov
setg
mov
mov
stos
mov
mov
mov
stos
xchg
mov
add
add
push
stos
mov
mov
mov
stos
mov
mov
fwait
xchg
sar
add
mov
mov
add
sbb
mov
sar
or
sub
pop
stos
xchg
mov
add
in
cmp
pop
mov
mov
stos
stos
mov
push
mov
mov
adc
cmp
mov
aad
pop
stos
xchg
mov
mov
mov
ds
stos
mov
adc
(bad)
mov
setg
mov
sbb
sub
mov
stos
mov
mov
mov
stos
xchg
mov
add
sar
push
lahf
sbb
xor
out
or
stos
mov
add
add
or
stos
mov
add
cmp
imul
cmp
adc
adc
mov
or
stos
mov
or
retf
mov
push
lahf
cmp
mov
stos
stos
mov
add
ret
stos
test
mov
mov
stos
mov
mov
mov
stos
mov
mov
enter
adc
xor
mov
cmp
xor
mov
sbb
sbb
fwait
xchg
sar
sub
cmp
fwait
xchg
sar
or
mov
mov
or
ud1
pop
mov
sbb
mov
mov
mov
stos
mov
mov
mov
stos
stos
mov
push
mov
mov
or
stos
mov
push
mov
mov
or
stos
mov
push
mov
mov
or
pushf
mov
mov
mov
or
xchg
mov
or
cmp
or
xor
mov
sbb
sbb
cdq
xchg
sar
or
cmp
or
test
sub
daa
mov
ins
stos
mov
mov
mov
stos
stos
mov
mov
mov
ins
stos
pushf
mov
or
push
mov
stos
pushf
mov
or
push
mov
stos
pushf
mov
or
push
mov
stos
mov
mov
mov
stos
pushf
mov
or
push
mov
stos
cmp
mov
mov
adc
pop
mov
mov
stos
stos
mov
add
cmp
sbb
stos
mov
adc
cmp
push
stos
xchg
mov
or
sub
cs
mov
mov
mov
stos
test
sub
cmp
ins
stos
pushf
mov
add
(bad)
mov
or
daa
mov
sbb
mov
mov
mov
int3
mov
or
mov
mov
sbb
mov
mov
fwait
xchg
sar
add
pop
mov
mov
stos
mov
mov
fwait
xchg
sar
or
mov
mov
sbb
mov
mov
mov
stos
mov
mov
xlat
xchg
ret
stos
test
mov
mov
stos
pushf
mov
adc
ret
stos
xchg
mov
add
push
mov
stos
xchg
mov
adc
sub
sbb
xor
mov
stos
test
push
lahf
xor
mov
sbb
adc
add
ret
stos
stos
mov
and
loopne
sbb
stos
mov
push
mov
mov
sbb
lahf
pop
mov
mov
stos
pushf
mov
or
ret
stos
test
push
lahf
push
mov
fwait
xchg
sar
or
mov
mov
adc
mov
add
adc
sbb
sbb
mov
stos
pushf
mov
add
adc
sbb
sbb
mov
stos
stos
mov
add
adc
sbb
sbb
add
cmp
imul
push
mov
stos
cmp
mov
mov
ds
stos
mov
add
lds
or
mov
mov
sbb
stos
mov
adc
ret
stos
cmp
mov
mov
adc
sbb
fwait
xchg
sar
sub
push
mov
stos
stos
mov
push
mov
mov
or
stos
mov
add
in
or
stos
mov
push
mov
mov
sbb
mov
sub
cmp
sub
cmp
mov
stos
stos
mov
add
pop
mov
adc
adc
mov
or
mov
sub
sub
or
stos
mov
push
mov
mov
sbb
or
mov
stos
cmp
mov
mov
adc
sbb
mov
stos
mov
mov
lahf
xchg
sar
or
mov
mov
adc
push
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
ret
stos
mov
mov
mov
stos
mov
mov
popf
xchg
sar
or
sub
sbb
stos
mov
adc
push
mov
stos
mov
mov
mov
stos
mov
mov
mov
sar
or
mov
mov
adc
sbb
mov
stos
pushf
mov
or
retf
mov
push
lahf
push
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
stos
mov
sub
sar
setg
and
sar
lahf
push
mov
mov
fidivr
or
mov
mov
sbb
ud1
add
xor
add
and
int3
mov
setg
add
out
sbb
sbb
mov
stos
mov
mov
mov
stos
stos
mov
add
sub
or
xchg
mov
add
lds
or
sub
adc
sbb
adc
cmp
add
xor
mov
imul
cmp
add
push
mov
mov
stos
retf
lahf
sub
mov
stos
test
mov
mov
stos
mov
mov
mov
stos
stos
mov
add
pop
mov
imul
sub
ins
stos
stos
mov
add
ret
stos
pushf
mov
add
pop
mov
imul
sub
adc
stos
mov
add
pop
mov
adc
sbb
mov
stos
stos
mov
jne
cmp
add
push
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
sar
lahf
sbb
mov
stos
stos
mov
sbb
pop
mov
adc
pop
mov
mov
stos
xchg
mov
add
cmp
ds
mov
mov
movs
xchg
ret
stos
mov
mov
mov
ret
stos
mov
mov
movs
xchg
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
cmps
xchg
ret
stos
mov
mov
mov
ret
stos
mov
sbb
push
mov
stos
mov
add
mov
cmp
lahf
sbb
adc
(bad)
mov
push
lahf
adc
xchg
xchg
les
add
sub
xor
lahf
sbb
add
sub
sbb
sbb
add
push
mov
ret
stos
mov
or
mov
mov
adc
sbb
add
pop
mov
or
mov
mov
lahf
xchg
ret
stos
mov
or
mov
mov
or
mov
mov
mov
ret
stos
mov
or
mov
mov
or
and
pop
mov
mov
sbb
sub
lahf
xchg
ret
stos
mov
mov
cmps
xchg
ret
stos
mov
or
mov
mov
or
mov
mov
mov
stos
mov
mov
movs
xchg
ret
stos
mov
mov
mov
ret
stos
mov
mov
sahf
xchg
ret
stos
mov
mov
lahf
xchg
ret
stos
mov
or
mov
mov
xor
or
or
ret
stos
mov
or
mov
mov
adc
ins
mov
sahf
xchg
ret
stos
mov
or
mov
mov
ins
stos
mov
mov
lahf
xchg
ret
stos
mov
mov
cmps
xchg
ret
stos
scas
mov
add
pop
mov
adc
mov
or
mov
mov
adc
xor
popf
xchg
ret
stos
mov
or
mov
mov
or
sub
movs
xchg
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
popf
xchg
ret
stos
mov
or
mov
mov
adc
mov
mov
mov
ret
stos
mov
or
mov
mov
xor
ins
mov
popf
xchg
ret
stos
mov
mov
movs
xchg
ret
stos
mov
mov
cwde
xchg
stc
mov
or
mov
mov
sbb
xor
mov
add
daa
mov
mov
ret
stos
mov
mov
movs
xchg
ret
stos
mov
or
mov
mov
sbb
and
pop
mov
mov
or
sub
movs
xchg
ret
stos
mov
mov
mov
ret
stos
mov
or
mov
mov
ds
mov
mov
movs
xchg
ret
stos
mov
or
mov
mov
ds
mov
or
mov
mov
cs
mov
mov
cwde
xchg
ret
stos
mov
or
mov
mov
add
sbb
add
push
sahf
xchg
ret
stos
mov
mov
cwde
xchg
ret
stos
mov
or
mov
mov
adc
mov
mov
cmps
xchg
ret
stos
retf
mov
add
push
lahf
xchg
ret
stos
mov
mov
sahf
xchg
ret
stos
mov
mov
cwde
xchg
ret
stos
mov
mov
lods
xchg
ret
stos
mov
mov
cmps
xchg
ret
stos
mov
mov
movs
xchg
ret
stos
mov
mov
sahf
xchg
ret
stos
mov
mov
mov
ret
stos
mov
mov
test
stos
mov
mov
sahf
xchg
ret
stos
mov
mov
cwde
xchg
ret
stos
mov
or
mov
mov
adc
mov
mov
cmps
xchg
ret
stos
mov
mov
stos
xchg
ret
stos
mov
mov
test
ret
stos
mov
mov
mov
stos
mov
mov
cmps
xchg
ret
stos
mov
mov
lahf
xchg
ret
stos
mov
mov
lahf
xchg
ret
stos
mov
mov
cwde
xchg
fnstcw
or
mov
mov
adc
mov
mov
cwde
xchg
ret
stos
mov
mov
sahf
xchg
ret
stos
mov
mov
lods
xchg
fstp
or
mov
mov
or
leave
mov
add
cmp
ds
mov
or
mov
mov
adc
mov
mov
cwde
xchg
sar
or
mov
mov
or
mov
mov
popf
xchg
ret
stos
mov
mov
cwde
xchg
ret
stos
mov
mov
lahf
xchg
ret
stos
mov
or
mov
mov
adc
xor
popf
xchg
ret
stos
mov
mov
cwde
xchg
ret
stos
mov
mov
cmps
xchg
ret
stos
mov
mov
cmps
xchg
ret
stos
mov
mov
stos
xchg
ret
stos
scas
mov
add
cmp
ds
mov
or
mov
mov
xor
outs
mov
test
stos
mov
or
mov
mov
popa
stos
mov
mov
test
ret
stos
mov
mov
movs
xchg
jmp
sbb
xor
cdq
xchg
ret
stos
mov
mov
movs
xchg
ret
stos
mov
or
mov
mov
popa
stos
mov
mov
test
stos
lods
mov
add
sub
add
sub
lahf
xchg
ret
stos
mov
mov
movs
xchg
ret
stos
mov
mov
mov
stos
mov
or
mov
mov
adc
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
cmps
xchg
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
cmps
xchg
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
ret
stos
mov
mov
mov
stos
mov
mov
movs
xchg
cli
mov
cs
daa
mov
lahf
xchg
idiv
push
lahf
aaa
mov
cwde
xchg
cmc
mov
push
lahf
push
mov
lahf
xchg
out
mov
sub
das
mov
adc
sub
lahf
xchg
in
mov
push
lahf
xor
cmps
xchg
idiv
pop
lahf
ins
mov
sahf
xchg
mov
pop
stos
mov
mov
cwde
xchg
mov
adc
and
pop
mov
mov
or
sub
movs
xchg
into
mov
adc
mov
mov
sbb
and
mov
pusha
stos
mov
mov
lahf
xchg
out
mov
or
mov
mov
bts
mov
sahf
xchg
mov
ins
stos
retf
mov
pop
mov
mov
or
pop
mov
sahf
xchg
(bad)
mov
push
lahf
or
mov
pop
stos
mov
mov
sahf
xchg
cli
mov
push
lahf
sbb
xor
call
mov
pop
mov
mov
sbb
cs
mov
cli
mov
cs
xor
lahf
xchg
out
mov
or
mov
mov
pop
stos
lods
mov
js
stc
mov
cs
and
js
cmc
mov
sub
mov
mov
sub
add
mov
sbb
mov
mov
sub
push
mov
pusha
stos
mov
mov
scas
xchg
ret
stos
lods
mov
jl
aas
mov
ins
stos
lods
mov
jl
das
mov
pusha
stos
leave
mov
jne
aas
mov
pop
stos
mov
mov
cdq
xchg
lock
cs
xor
lahf
xchg
sar
lahf
xor
mov
stos
lods
mov
add
out
mov
cs
xor
cmps
xchg
out
mov
sbb
das
mov
adc
and
pop
mov
mov
or
ins
mov
lahf
xchg
out
mov
push
lahf
adc
mov
xor
lahf
sub
lods
xchg
ret
stos
mov
mov
popf
xchg
cli
mov
sub
das
mov
pop
stos
nop
mov
or
idiv
sbb
pop
mov
bts
mov
mov
stos
mov
mov
lahf
xchg
mov
or
xor
sahf
xchg
(bad)
mov
push
lahf
ins
mov
lahf
xchg
out
mov
push
lahf
adc
mov
and
sub
sahf
xchg
(bad)
mov
cs
sub
cmps
xchg
call
mov
jne
aas
mov
pop
stos
mov
mov
lahf
xchg
cmc
mov
adc
mov
mov
or
push
mov
movs
xchg
cmc
mov
cs
or
mov
mov
or
pop
mov
stos
xchg
ret
stos
mov
sub
push
mov
sbb
imul
xchg
out
mov
or
mov
mov
pop
stos
retf
lahf
ins
mov
cmps
xchg
ret
stos
mov
sub
pop
mov
pusha
stos
mov
mov
movs
xchg
idiv
cs
sbb
cmps
xchg
mov
xor
lahf
sbb
adc
cmc
mov
sub
mov
mov
cmp
lahf
sub
mov
stos
mov
mov
movs
xchg
idiv
sub
mov
mov
xor
lahf
xor
mov
cmp
sub
mov
or
sub
cwde
xchg
stc
mov
sbb
das
mov
ins
stos
lods
mov
or
sar
push
lahf
imul
xchg
in
or
xor
cmps
xchg
in
mov
cs
pop
mov
cwde
xchg
idiv
cs
or
pop
mov
mov
bts
mov
cwde
xchg
out
mov
or
mov
mov
das
lahf
daa
mov
cdq
xchg
cli
mov
cs
sbb
cmps
xchg
retf
mov
sub
aas
mov
pop
stos
enter
pop
mov
mov
stc
mov
push
lahf
sub
cmps
xchg
icebp
mov
push
lahf
ins
mov
movs
xchg
repz
sub
sub
mov
das
lahf
sub
sahf
xchg
lock
or
mov
sahf
xchg
lock
cs
xor
mov
push
lahf
sub
lahf
xchg
idiv
das
lahf
or
lahf
xchg
cmc
mov
das
lahf
push
mov
or
ins
mov
cmps
xchg
cli
mov
or
mov
sahf
xchg
out
mov
cs
xor
mov
or
push
mov
sbb
ss
test
in
or
daa
mov
cmps
xchg
call
mov
adc
hlt
mov
sbb
mov
mov
or
daa
mov
cdq
xchg
out
mov
adc
ins
mov
lahf
xchg
ret
stos
mov
mov
lahf
xchg
cmc
mov
cs
pop
mov
popf
xchg
cli
mov
push
lahf
sub
cdq
xchg
xlat
mov
das
lahf
xor
popf
xchg
mov
pusha
stos
xchg
mov
adc
repz
das
lahf
xor
sahf
xchg
mov
sbb
and
or
lds
or
mov
sahf
xchg
(bad)
mov
adc
mov
mov
adc
mov
mov
adc
xor
cwde
xchg
sar
lahf
daa
mov
scas
xchg
out
mov
sub
pop
mov
sbb
xor
popf
xchg
cli
mov
push
lahf
cs
popf
xchg
stc
mov
pop
lahf
sbb
or
mov
xor
lahf
ins
mov
scas
xchg
ret
stos
xchg
mov
adc
mov
bts
mov
or
xor
xor
lahf
sub
test
stos
lods
mov
js
xlat
mov
sub
push
mov
bts
mov
cdq
xchg
in
mov
adc
mov
sahf
xchg
mov
sbb
and
or
mov
or
and
adc
out
mov
add
das
mov
xor
lahf
sbb
adc
aas
mov
adc
and
or
idiv
cs
or
lahf
xchg
out
mov
das
lahf
xor
sahf
xchg
cmc
mov
sub
sub
mov
cs
adc
sahf
xchg
repz
das
lahf
xor
lahf
xchg
idiv
sbb
mov
mov
adc
or
cwde
xchg
jmp
and
xor
mov
stos
lods
mov
or
cli
mov
cs
sub
mov
sar
add
das
mov
xor
lahf
sbb
adc
aas
mov
pusha
stos
lods
mov
or
xlat
mov
sub
das
mov
push
lahf
adc
lahf
xchg
out
mov
cs
and
pop
mov
movs
xchg
mov
bts
mov
or
stc
mov
push
lahf
aaa
mov
lahf
xchg
sar
push
lahf
adc
mov
xor
lahf
ins
mov
sahf
xchg
(bad)
mov
push
lahf
daa
mov
lahf
xchg
stc
mov
push
lahf
sbb
adc
jmp
lahf
sub
lahf
xchg
repz
pop
lahf
sbb
adc
and
ins
stos
scas
mov
jl
aas
mov
imul
mov
bts
jl
mov
cmp
lahf
ins
mov
cmps
xchg
repnz
sbb
aas
mov
bts
mov
jo
aas
mov
sbb
sub
lahf
xchg
cli
mov
sbb
mov
mov
sbb
aaa
mov
popf
xchg
jmp
lahf
daa
mov
lods
xchg
mov
ins
stos
lods
mov
adc
jmp
ins
stos
lods
mov
pop
mov
mov
or
and
adc
mov
ins
stos
lods
mov
adc
ret
stos
enter
ins
mov
lahf
xchg
out
mov
sub
sub
mov
sub
mov
mov
cs
xor
movs
xchg
idiv
sbb
xor
sbb
sub
cwde
xchg
jmp
mov
jl
pop
mov
pop
stos
lods
mov
js
mov
ins
stos
lods
mov
adc
jmp
ins
stos
lods
mov
pop
mov
mov
xor
and
add
xlat
mov
adc
mov
mov
cs
xor
cmps
xchg
in
mov
cs
xor
mov
ins
stos
lods
mov
adc
jmp
ins
stos
lods
mov
jo
cmp
or
push
mov
xor
lahf
sbb
sahf
xchg
les
sub
mov
mov
xor
lahf
push
mov
lahf
xchg
out
mov
cs
and
pop
mov
mov
cmp
lahf
sub
popf
xchg
mov
sbb
aaa
mov
scas
xchg
ret
stos
mov
das
lahf
pop
mov
sahf
xchg
lds
adc
mov
mov
pop
stos
lods
mov
jl
add
mov
das
lahf
xor
popf
xchg
mov
adc
or
cmps
xchg
lock
das
lahf
sub
lods
xchg
idiv
sub
mov
mov
sub
add
mov
push
lahf
sub
sahf
xchg
cli
mov
sub
mov
mov
pop
stos
mov
mov
movs
xchg
mov
pop
stos
mov
mov
cwde
xchg
out
mov
das
lahf
sub
movs
xchg
repz
or
mov
sahf
xchg
int
sbb
sub
test
mov
adc
xor
lahf
xchg
out
mov
cs
and
pop
mov
mov
cmp
lahf
push
mov
sbb
ins
mov
sahf
xchg
out
mov
or
mov
mov
adc
and
pop
mov
mov
or
or
lahf
xchg
out
mov
sub
add
mov
sbb
mov
mov
sbb
sub
test
stos
leave
mov
sub
cmc
mov
push
lahf
xor
lahf
xchg
stc
mov
sbb
push
mov
or
ins
mov
cdq
xchg
cmc
mov
push
lahf
xor
lahf
xchg
stc
mov
sbb
and
pop
stos
mov
mov
sahf
xchg
lock
sub
mov
mov
adc
xor
lahf
xchg
stc
mov
sbb
xor
pusha
stos
xchg
mov
or
cmc
mov
cs
sub
mov
bts
sub
ret
stos
mov
mov
lods
xchg
lock
sbb
mov
mov
cmp
lahf
xor
popf
xchg
les
sub
das
mov
bts
mov
lahf
xchg
cmc
mov
cs
sub
lahf
xchg
idiv
sub
sub
mov
sub
mov
stos
xchg
out
mov
adc
mov
mov
add
xor
mov
stos
lods
mov
adc
repz
sub
sub
mov
sub
mov
mov
xor
xor
sahf
xchg
jmp
xor
sbb
jno
pop
mov
pop
stos
xchg
mov
pop
mov
mov
or
adc
mov
pop
stos
mov
mov
movs
xchg
cmc
mov
adc
ins
mov
cmps
xchg
ret
stos
lods
mov
jo
cmp
mov
push
lahf
sub
cmps
xchg
idiv
sbb
pop
mov
sbb
mov
mov
cmps
xchg
jmp
pusha
stos
mov
mov
sahf
xchg
(bad)
mov
sub
mov
mov
ins
stos
lods
mov
cmp
xchg
jmp
lahf
sbb
adc
xor
ins
stos
test
cs
xor
lahf
xchg
mov
pop
stos
mov
mov
movs
xchg
sar
cs
xor
cwde
xchg
out
mov
or
mov
sahf
xchg
mov
pop
stos
lods
mov
sub
out
mov
sub
mov
mov
or
adc
mov
bts
jl
add
mov
cs
sbb
sahf
xchg
repz
cs
ins
mov
mov
stos
mov
das
lahf
sub
mov
stos
lods
mov
pop
mov
test
stos
mov
mov
cmps
xchg
repz
cs
and
pop
mov
mov
push
lahf
sub
scas
xchg
ret
stos
xchg
mov
pop
mov
mov
pop
stos
mov
mov
popf
xchg
cli
mov
sub
pop
mov
bts
mov
jno
aas
mov
and
sub
sahf
xchg
(bad)
mov
sub
add
mov
sbb
mov
mov
and
ins
mov
cmps
xchg
idiv
adc
sub
mov
stos
leave
mov
cmp
xchg
(bad)
mov
sub
add
mov
or
mov
sahf
xchg
mov
pop
stos
lods
mov
sub
out
mov
adc
mov
lods
xchg
ret
stos
xchg
mov
sub
cli
mov
sub
add
mov
or
mov
lahf
xchg
repz
push
lahf
sbb
mov
mov
or
xor
popf
xchg
(bad)
mov
sub
mov
mov
ds
mov
mov
lahf
xchg
out
mov
cs
sub
cwde
xchg
out
mov
or
mov
mov
pusha
stos
xchg
mov
add
jmp
mov
pop
mov
mov
pop
stos
xchg
mov
cmp
xchg
les
sub
das
mov
pop
stos
mov
mov
movs
xchg
int
sbb
daa
mov
lahf
xchg
call
mov
or
sar
lahf
xor
mov
stos
lods
mov
jl
aas
mov
xor
lahf
adc
cwde
xchg
out
mov
or
mov
mov
pusha
stos
lods
mov
or
jmp
mov
pop
mov
mov
bts
mov
js
mov
ins
stos
lods
mov
js
(bad)
mov
push
lahf
adc
mov
bts
mov
js
ret
stos
enter
sub
mov
ins
stos
leave
mov
sub
idiv
push
lahf
ins
mov
cdq
xchg
xlat
mov
sub
xor
or
xor
sahf
xchg
cmc
mov
sub
mov
mov
sbb
xor
test
stos
mov
mov
lods
xchg
cmc
mov
or
mov
sahf
xchg
lock
or
mov
mov
xor
lahf
sub
lahf
xchg
les
add
push
mov
bts
mov
test
stos
xchg
mov
jo
aas
mov
or
xor
mov
stos
mov
mov
stos
xchg
call
mov
pop
mov
mov
cmp
lahf
sub
mov
bts
mov
mov
mov
ins
stos
lods
mov
add
sar
push
lahf
ins
mov
lods
xchg
xlat
mov
adc
mov
mov
add
sub
cmps
xchg
jmp
bts
mov
sahf
xchg
jmp
lahf
sbb
movs
xchg
out
mov
or
mov
mov
pop
stos
lods
mov
pop
mov
mov
adc
push
mov
pop
stos
nop
mov
sub
xchg
cmc
mov
or
mov
mov
or
ss
cmps
xchg
sar
das
lahf
xor
mov
pop
stos
lods
mov
pop
mov
mov
or
push
mov
movs
xchg
out
mov
or
mov
cwde
xchg
idiv
push
lahf
xor
mov
ins
stos
lods
mov
cmp
xchg
cmc
mov
push
lahf
xor
mov
or
mov
mov
cmps
xchg
jmp
bts
mov
movs
xchg
mov
pop
stos
mov
mov
sahf
xchg
jmp
bts
mov
mov
stos
mov
mov
test
stos
mov
mov
lods
xchg
ret
stos
scas
mov
or
in
or
xor
cmps
xchg
idiv
push
lahf
sub
sahf
xchg
lds
sub
das
mov
imul
xor
sbb
xor
mov
pop
stos
lods
mov
jl
aas
mov
push
lahf
or
mov
bts
sub
ret
stos
lods
mov
pop
mov
mov
pop
stos
mov
mov
mov
mov
ins
stos
lods
mov
pop
mov
mov
or
pop
mov
mov
stos
mov
mov
stos
xchg
ret
stos
xchg
mov
js
xlat
mov
push
lahf
cs
sahf
xchg
repz
or
mov
cwde
xchg
idiv
or
mov
mov
pop
stos
mov
mov
cwde
xchg
idiv
or
mov
cwde
xchg
idiv
or
mov
mov
push
lahf
sbb
xor
idiv
adc
mov
mov
sub
mov
mov
xor
lahf
sbb
adc
das
mov
sbb
cs
sahf
xchg
jmp
xor
sub
scas
xchg
out
mov
sub
xor
sbb
cs
sahf
xchg
jmp
xor
sub
stos
xchg
out
mov
sub
mov
mov
sbb
xor
mov
pusha
stos
xchg
mov
adc
mov
or
and
add
aas
mov
pop
stos
xchg
mov
sub
jmp
mov
or
cli
mov
cs
xor
mov
stc
mov
cs
sub
mov
and
sub
mov
idiv
sub
pop
mov
or
xchg
mov
pop
mov
mov
cmp
lahf
xor
cmps
xchg
idiv
pop
lahf
ins
mov
movs
xchg
fstp
sub
xor
sbb
xor
mov
stos
mov
mov
mov
stos
lods
mov
js
icebp
mov
adc
mov
mov
or
daa
mov
cmps
xchg
jmp
bts
mov
mov
stos
mov
mov
cmps
xchg
jmp
bts
mov
mov
stos
leave
mov
pop
mov
mov
bts
mov
cmps
xchg
mov
bts
mov
sahf
xchg
idiv
sbb
pop
mov
pop
stos
mov
mov
scas
xchg
out
mov
adc
mov
sahf
xchg
(bad)
mov
push
lahf
xor
movs
xchg
cmc
mov
das
lahf
xor
sahf
xchg
leave
mov
push
lahf
sub
movs
xchg
idiv
sbb
mov
mov
cmp
lahf
cs
scas
xchg
ret
stos
mov
mov
popf
xchg
cli
mov
sub
and
and
xor
sub
jmp
sbb
sub
cmps
xchg
idiv
sub
push
mov
or
mov
mov
popf
xchg
cli
mov
sub
push
mov
xor
lahf
xor
mov
bts
mov
popf
xchg
mov
pop
stos
mov
mov
sahf
xchg
cmc
mov
or
mov
movs
xchg
repz
das
lahf
xor
lahf
xchg
out
mov
sub
mov
sahf
xchg
(bad)
mov
push
lahf
sub
cwde
xchg
idiv
sbb
aas
mov
pop
stos
mov
mov
cmps
xchg
mov
bts
mov
cwde
xchg
mov
pop
stos
nop
mov
sub
cli
mov
sbb
aas
mov
xor
lahf
xor
je
aas
mov
pop
stos
mov
mov
cwde
xchg
mov
adc
and
pop
mov
mov
ins
stos
leave
mov
or
out
mov
sub
aas
mov
pop
stos
enter
pop
mov
cmps
xchg
mov
bts
mov
cwde
xchg
mov
pop
stos
mov
mov
scas
xchg
ret
stos
mov
mov
popf
xchg
cli
mov
sub
das
mov
xor
lahf
sub
mov
pop
stos
mov
mov
cwde
xchg
jmp
lahf
ins
mov
lods
xchg
out
mov
sub
aas
mov
xor
lahf
xor
je
aas
mov
pop
stos
mov
mov
cwde
xchg
mov
adc
and
pop
mov
mov
sub
lahf
xor
mov
pop
stos
xchg
mov
sub
jmp
lahf
daa
mov
lods
xchg
ret
stos
mov
mov
popf
xchg
cli
mov
sub
and
xor
lahf
push
mov
xor
lahf
xor
je
aas
mov
pop
stos
mov
mov
cwde
xchg
mov
adc
and
pop
mov
mov
or
ins
mov
sahf
xchg
cli
mov
sub
aas
mov
pop
stos
enter
pop
mov
cmps
xchg
mov
bts
mov
cwde
xchg
mov
pop
stos
scas
mov
add
idiv
sbb
mov
mov
das
lahf
daa
mov
mov
stos
mov
mov
lahf
xchg
mov
or
sub
popf
xchg
mov
pop
stos
xchg
mov
and
out
mov
cs
sbb
sahf
xchg
jmp
lahf
daa
mov
lods
xchg
ret
stos
mov
mov
popf
xchg
cli
mov
sub
pop
mov
or
sub
mov
bts
cmp
xchg
idiv
das
lahf
daa
mov
mov
stos
mov
mov
lahf
xchg
mov
or
xor
cwde
xchg
repz
sub
aas
mov
pop
stos
enter
pop
mov
sahf
xchg
cmc
mov
sub
das
mov
bts
mov
cmps
xchg
mov
pop
stos
mov
mov
cmps
xchg
idiv
or
mov
mov
pusha
stos
xchg
mov
pop
mov
mov
xor
lahf
sbb
and
in
mov
push
lahf
cs
lahf
xchg
stc
mov
das
lahf
ss
movs
xchg
ret
stos
mov
mov
movs
xchg
in
mov
cs
xor
cwde
xchg
repz
sbb
das
mov
adc
ss
cmps
xchg
sar
push
lahf
ins
mov
movs
xchg
ret
stos
xchg
mov
or
out
mov
push
lahf
ins
mov
mov
stos
xchg
mov
adc
ret
stos
enter
xor
cmps
xchg
call
mov
add
ret
stos
enter
xor
sahf
xchg
cli
mov
or
mov
mov
ins
stos
leave
mov
pop
mov
mov
bts
mov
mov
stos
lods
mov
add
cli
mov
push
lahf
sub
lahf
xchg
stc
mov
adc
mov
mov
popa
stos
xchg
mov
sub
mov
or
xor
mov
xor
sub
movs
xchg
out
mov
sub
mov
mov
adc
ins
mov
mov
stos
lods
mov
jo
pop
mov
xor
lahf
sub
mov
stos
lods
mov
pop
mov
mov
xor
lahf
xor
mov
sbb
xor
cmps
xchg
idiv
pop
lahf
ins
mov
lahf
xchg
out
mov
cs
sub
mov
or
xor
sub
mov
or
ss
cmps
xchg
cli
mov
sub
xor
bts
mov
cwde
xchg
mov
pop
stos
retf
mov
adc
cmc
mov
das
lahf
sbb
adc
repz
push
lahf
sub
sahf
xchg
idiv
adc
mov
mov
ins
stos
nop
mov
sub
jmp
pop
stos
lods
mov
pop
mov
mov
sbb
sub
mov
stos
lods
mov
pop
mov
mov
xor
lahf
ss
cmps
xchg
jmp
ins
stos
lods
mov
jo
aas
mov
or
mov
mov
popf
xchg
cli
mov
sub
xor
pop
stos
mov
mov
movs
xchg
int
sbb
xor
popf
xchg
mov
adc
or
sahf
xchg
cli
mov
sub
add
push
lahf
ins
mov
cwde
xchg
sar
cs
xor
lahf
xchg
mov
pop
stos
mov
mov
movs
xchg
hlt
mov
sub
mov
mov
sbb
mov
mov
mov
stos
lods
mov
adc
ret
stos
leave
mov
js
lock
adc
mov
sahf
xchg
in
mov
push
lahf
sub
cwde
xchg
jmp
mov
jl
das
mov
bts
mov
mov
stos
xchg
mov
adc
mov
pop
stos
mov
mov
lahf
xchg
mov
bts
mov
pop
mov
test
stos
mov
mov
scas
xchg
call
mov
or
sub
cmps
xchg
out
mov
das
lahf
xor
cmps
xchg
sar
adc
mov
mov
or
mov
mov
stos
xchg
ret
stos
enter
ins
mov
lahf
xchg
out
mov
or
mov
mov
adc
daa
mov
test
stos
xchg
mov
or
call
mov
adc
in
mov
or
mov
mov
pop
stos
mov
mov
cmps
xchg
cli
mov
sbb
das
mov
ins
stos
lods
mov
or
out
mov
cs
and
pop
mov
mov
xor
lahf
daa
mov
movs
xchg
cmc
mov
sbb
aas
mov
adc
or
sahf
xchg
mov
pop
stos
mov
mov
cdq
xchg
lds
cs
cs
lods
xchg
lock
sub
xor
sbb
sub
cwde
xchg
jmp
mov
jl
pop
mov
xor
lahf
sub
sahf
xchg
idiv
sub
cmp
pusha
stos
lods
mov
je
pop
mov
bts
mov
js
out
mov
sub
mov
mov
adc
sub
test
stc
mov
push
lahf
aaa
mov
lahf
xchg
sar
adc
mov
mov
xor
ins
mov
sahf
xchg
(bad)
mov
adc
mov
mov
or
or
cwde
xchg
mov
bts
jl
pop
mov
pop
stos
lods
mov
sub
xchg
mov
bts
mov
or
out
mov
cs
and
pop
mov
mov
pop
stos
lods
mov
or
repz
sbb
pop
mov
pusha
stos
mov
mov
mov
stos
mov
mov
cwde
xchg
(bad)
mov
sub
mov
mov
sub
lahf
sub
cmps
xchg
sar
lahf
xor
mov
stos
mov
mov
cwde
xchg
(bad)
mov
sub
and
adc
ins
mov
cwde
xchg
(bad)
mov
sub
das
mov
bts
mov
jo
aas
mov
bts
mov
adc
stc
mov
sbb
xor
sbb
and
adc
lock
sbb
mov
mov
das
lahf
xor
mov
stos
xchg
mov
adc
mov
or
ins
mov
mov
stos
lods
mov
add
repz
adc
mov
mov
ins
stos
test
cs
xor
lahf
xchg
mov
pop
stos
mov
mov
test
out
mov
das
lahf
ins
mov
lahf
xchg
out
mov
or
mov
cmps
xchg
jmp
ins
stos
lods
mov
adc
cli
mov
cs
daa
mov
test
stos
mov
mov
cwde
xchg
cmc
mov
push
lahf
push
mov
sahf
xchg
out
mov
das
lahf
push
mov
pop
stos
lods
mov
sub
idiv
das
lahf
sbb
lahf
xchg
out
mov
cs
sub
mov
stos
lods
mov
sub
ret
stos
xchg
mov
and
cli
mov
add
das
mov
xor
lahf
sbb
adc
cli
mov
cs
daa
mov
test
stos
leave
mov
jo
aas
mov
or
xor
mov
stos
lods
mov
adc
out
mov
push
lahf
sbb
cwde
xchg
hlt
mov
das
lahf
aaa
mov
scas
xchg
ret
stos
enter
xor
lahf
xchg
idiv
adc
mov
mov
cs
ins
mov
mov
stos
mov
mov
test
stos
xchg
mov
pop
mov
mov
xor
lahf
sub
test
stos
mov
mov
popf
xchg
mov
pop
stos
lods
mov
jo
aas
mov
pusha
stos
mov
mov
sahf
xchg
int
sbb
sbb
and
jmp
sbb
sub
cwde
xchg
jmp
mov
sub
jmp
or
sbb
sahf
xchg
repz
or
mov
mov
pop
stos
mov
mov
stos
xchg
mov
bts
mov
xor
repz
or
mov
mov
or
xchg
mov
cmp
xchg
repz
push
lahf
daa
mov
scas
xchg
ret
stos
leave
mov
pop
mov
mov
or
sbb
cmps
xchg
icebp
mov
sub
add
cmp
lahf
push
mov
popf
xchg
jmp
mov
cmp
xchg
(bad)
mov
cs
push
mov
or
ins
mov
cmps
xchg
sar
cs
push
mov
sbb
das
mov
cwde
xchg
idiv
or
mov
mov
adc
sbb
popf
xchg
jmp
cmp
lahf
xor
popf
xchg
sar
das
lahf
sub
movs
xchg
idiv
sub
pop
mov
sbb
cs
sahf
xchg
jmp
xor
sub
mov
ins
stos
lods
mov
adc
in
mov
sub
mov
mov
xor
sub
cmps
xchg
mov
pop
stos
mov
mov
cmps
xchg
idiv
sbb
add
mov
push
lahf
and
pop
mov
mov
pusha
stos
mov
mov
cmps
xchg
jmp
sbb
sub
test
stos
lods
mov
and
out
mov
sub
aas
mov
pop
stos
xchg
mov
adc
jmp
cmp
lahf
cs
scas
xchg
mov
pop
stos
mov
mov
cwde
xchg
lock
sbb
pop
mov
sub
or
mov
or
push
mov
xor
lahf
and
jl
pop
mov
push
lahf
adc
scas
xchg
(bad)
mov
sbb
add
xor
lahf
or
adc
sar
sbb
push
test
sar
sbb
add
add
pop
mov
test
stos
retf
mov
js
ret
stos
xchg
mov
js
stc
mov
sub
mov
mov
pusha
stos
xchg
mov
jo
adc
cmp
lahf
xor
mov
stos
leave
mov
adc
stc
mov
sbb
add
mov
push
lahf
xor
pop
mov
mov
pop
stos
mov
mov
cmps
xchg
lock
cs
xor
mov
bts
mov
sahf
xchg
cmc
mov
or
mov
cmps
xchg
cli
mov
push
lahf
sbb
or
xor
ins
stos
lods
mov
or
int
sbb
cs
mov
in
mov
push
lahf
and
adc
ret
stos
scas
mov
adc
cmc
mov
sbb
sbb
add
sub
or
pop
mov
call
mov
add
cmp
cmp
adc
add
push
mov
stos
mov
mov
(bad)
xchg
ret
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
add
ret
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
test
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
or
mov
mov
sbb
sbb
add
sub
sbb
push
mov
mov
stos
stos
mov
add
ret
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
xchg
xchg
ret
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
ret
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
add
pop
mov
sbb
push
mov
mov
ret
stos
scas
mov
add
pop
mov
ds
mov
mov
mov
stos
mov
add
cmp
sbb
push
mov
les
scas
mov
add
push
mov
stos
mov
or
mov
mov
adc
ud1
mov
mov
sbb
push
mov
mov
scas
mov
add
cmp
ins
stos
mov
or
mov
mov
sub
xor
mov
cdq
mov
push
mov
mov
add
push
push
mov
mov
popa
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
lds
mov
or
mov
mov
popa
stos
mov
or
mov
mov
add
sbb
add
cmp
add
adc
test
mov
mov
mov
stos
mov
push
lahf
and
mov
or
ins
mov
int
(bad)
mov
or
mov
mov
adc
sub
mov
or
add
add
ret
stos
mov
mov
mov
stos
mov
mov
mov
stos
mov
mov
mov
stos
test
or
mov
mov
adc
mov
mov
mov
mov
push
lahf
or
mov
mov
push
lahf
adc
mov
mov
push
lahf
daa
mov
scas
xchg
lds
or
mov
mov
cmp
das
mov
mov
lds
or
mov
mov
popa
stos
mov
mov
mov
lds
or
mov
mov
popa
stos
mov
mov
mov
lds
or
mov
mov
adc
mov
mov
mov
lds
or
mov
mov
ins
stos
mov
or
mov
mov
adc
mov
mov
mov
lds
or
mov
mov
cs
mov
push
lahf
daa
mov
mov
ret
stos
mov
mov
mov
stos
stos
mov
or
(bad)
mov
or
cmp
ins
stos
mov
or
cmp
cmp
or
add
sar
lahf
push
mov
mov
ret
stos
mov
or
cmp
adc
das
mov
xlat
xchg
(bad)
mov
or
cmp
or
mov
or
cmp
or
cdq
mov
or
(bad)
mov
or
cmp
popa
stos
into
mov
or
xchg
(bad)
mov
or
cmp
ds
lods
mov
or
ret
stos
lods
mov
or
(bad)
mov
or
mov
mov
imul
cmp
ds
scas
mov
or
sar
lahf
ss
mov
(bad)
mov
or
cmp
sbb
cmp
mov
mov
or
leave
mov
or
(bad)
mov
or
cmp
ds
stos
mov
or
(bad)
mov
or
cmp
imul
cmp
or
cmp
lods
xchg
(bad)
mov
or
mov
mov
add
adc
les
lods
mov
or
cmp
imul
cmp
cmp
sbb
int3
xchg
(bad)
mov
or
cmp
sbb
add
js
sar
lahf
or
js
ret
stos
callw
ja
cmp
popf
repnz
pushf
in
int
cli
push
aad
(bad)
sbb
cwde
repnz
aam
in
int
cli
push
aad
(bad)
sbb
cwde
repnz
aam
in
int
cli
push
aad
(bad)
or
cwde
repnz
int
cli
push
aad
(bad)
(bad)
cwde
repnz
aam
in
int
cli
push
aad
(bad)
cmp
popf
repnz
pushf
in
int
cli
push
aad
(bad)
cmp
lahf
repnz
int
cli
push
aad
(bad)
xor
cwde
repnz
int
cli
push
aad
(bad)
xor
cwde
repnz
sahf
in
int
cli
push
aad
(bad)
xor
popf
repnz
pushf
in
int
cli
push
aad
(bad)
xor
popf
repnz
nop
in
int
cli
push
aad
(bad)
or
aam
in
int
cli
push
aad
(bad)
cmp
cwde
repnz
nop
in
int
cli
push
aad
(bad)
cmp
cwde
repnz
nop
in
int
cli
push
aad
(bad)
ds
cwde
repnz
int
cli
push
aad
(bad)
cmp
cwde
repnz
aam
in
int
cli
push
aad
(bad)
xor
cwde
repnz
in
int
cli
push
aad
mov
mov
xchg
in
int
cli
push
aad
(bad)
cmp
cwde
repnz
nop
in
int
cli
push
aad
mov
lahf
repnz
aam
in
int
cli
push
aad
(bad)
cs
cwde
repnz
cdq
in
int
cli
push
aad
(bad)
das
(bad)
cwde
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
cwde
repnz
sahf
in
int
cli
push
aad
(bad)
das
(bad)
cwde
repnz
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
cwde
repnz
in
int
cli
push
aad
(bad)
sub
cwde
repnz
nop
in
int
cli
push
aad
(bad)
and
cwde
repnz
int
cli
push
aad
(bad)
push
(bad)
lahf
repnz
aam
in
int
cli
push
aad
(bad)
push
(bad)
lahf
repnz
in
int
cli
push
aad
(bad)
push
(bad)
lahf
repnz
cdq
in
int
cli
push
aad
(bad)
push
(bad)
lahf
repnz
cdq
in
int
cli
push
aad
(bad)
or
lahf
repnz
int
cli
push
aad
(bad)
push
(bad)
lahf
repnz
sahf
in
int
cli
push
aad
(bad)
sbb
lahf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
lahf
repnz
sahf
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
xchg
in
int
cli
push
aad
(bad)
pop
(bad)
lahf
repnz
lahf
in
int
cli
push
aad
(bad)
pop
(bad)
lahf
repnz
nop
in
int
cli
push
aad
(bad)
pop
(bad)
lahf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
lahf
repnz
nop
in
int
cli
push
aad
mov
popf
in
int
cli
push
aad
(bad)
sbb
lahf
repnz
int
cli
push
aad
(bad)
or
lahf
repnz
cdq
in
int
cli
push
aad
(bad)
sbb
lahf
repnz
in
int
cli
push
aad
(bad)
sbb
lahf
repnz
sahf
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
popf
repnz
pushf
in
int
cli
push
aad
(bad)
sbb
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
lahf
repnz
sahf
in
int
cli
push
aad
(bad)
or
lahf
repnz
int
cli
push
aad
(bad)
or
lahf
repnz
aam
in
int
cli
push
aad
mov
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
lahf
repnz
xchg
in
int
cli
push
aad
mov
repnz
aam
in
int
cli
push
aad
mov
repnz
aam
in
int
cli
push
aad
(bad)
or
lahf
repnz
aam
in
int
cli
push
aad
mov
nop
in
int
cli
push
aad
mov
nop
in
int
cli
push
aad
(bad)
or
lahf
repnz
int
cli
push
aad
mov
popf
in
int
cli
push
aad
(bad)
cmp
lahf
repnz
in
int
cli
push
aad
(bad)
cmp
lahf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
lahf
repnz
in
int
cli
push
aad
(bad)
cmp
lahf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
aas
(bad)
lahf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
lahf
repnz
int
cli
push
aad
(bad)
aas
(bad)
lahf
repnz
aam
in
int
cli
push
aad
(bad)
aas
(bad)
lahf
repnz
cli
push
aad
(bad)
cmp
lahf
repnz
add
push
aad
(bad)
cmp
lahf
repnz
nop
in
int
cli
push
aad
(bad)
sub
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
lahf
repnz
in
int
cli
push
aad
(bad)
sub
lahf
repnz
popf
in
int
cli
push
aad
(bad)
sub
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
lahf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
lahf
repnz
cli
push
aad
(bad)
cmp
lahf
repnz
in
int
cli
push
aad
mov
mov
xchg
in
int
cli
push
aad
(bad)
and
lahf
repnz
xchg
in
int
cli
push
aad
(bad)
and
lahf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
(bad)
popf
repnz
nop
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
(bad)
popf
repnz
nop
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
xchg
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
xchg
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
aam
in
int
cli
push
aad
(bad)
xor
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
xor
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
pop
(bad)
sahf
repnz
aam
in
int
cli
push
aad
mov
sahf
repnz
xchg
in
int
cli
push
aad
mov
sahf
repnz
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
ds
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cs
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
es
popf
repnz
xchg
in
int
cli
push
aad
(bad)
daa
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
cs
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
daa
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
es
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
es
popf
repnz
xchg
in
int
cli
push
aad
(bad)
es
popf
repnz
aam
in
int
cli
push
aad
(bad)
daa
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
daa
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
aas
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
data16
(bad)
and
popf
repnz
nop
in
int
cli
push
aad
(bad)
das
(bad)
xchg
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
adc
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
je
mov
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
xchg
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
mov
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
in
int
cli
je
mov
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sbb
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
pop
aad
(bad)
and
popf
repnz
xchg
in
int
cli
data16
(bad)
sub
aam
in
int
cli
push
aad
(bad)
and
lahf
repnz
aam
in
int
cli
push
aad
(bad)
or
nop
repnz
xchg
in
int
cli
push
aad
(bad)
pop
(bad)
popf
repnz
mov
cli
push
aad
(bad)
sub
popf
repnz
loope
or
add
(bad)
popf
repnz
aam
in
int
cli
pop
aad
(bad)
and
popf
repnz
xchg
in
int
cli
data16
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
fwait
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
nop
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
cwde
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
in
stos
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
dec
aad
(bad)
and
popf
repnz
xchg
in
int
cli
addr16
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
nop
repnz
int
cli
push
aad
(bad)
or
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
in
mov
aad
(bad)
sub
popf
repnz
aam
in
int
cli
je
mov
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
es
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
nop
repnz
int
cli
push
aad
(bad)
or
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
mov
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
pusha
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
xchg
repnz
aam
in
int
cli
push
aad
(bad)
xor
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
cmps
in
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
(bad)
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
cli
push
aad
(bad)
cmp
xchg
repnz
aam
in
int
cli
push
aad
(bad)
xor
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
and
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
js
mov
repnz
xchg
in
int
cli
push
aad
(bad)
es
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
xchg
repnz
aam
in
int
cli
push
aad
(bad)
xor
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
pushf
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
dec
aad
(bad)
and
popf
repnz
xchg
in
int
cli
jnp
scas
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
ds
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
xor
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
es
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
fwait
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
jnp
nop
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
fwait
repnz
xchg
in
int
cli
push
aad
(bad)
sub
xchg
repnz
xchg
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
pop
aad
(bad)
and
popf
repnz
xchg
in
int
cli
je
mov
cmp
aam
in
int
cli
push
aad
(bad)
cmp
popf
repnz
fwait
in
int
cli
push
aad
(bad)
cmp
popf
repnz
fwait
in
int
cli
push
aad
(bad)
cmp
popf
repnz
fwait
in
int
cli
push
aad
(bad)
sub
popf
repnz
cli
inc
aad
(bad)
sub
popf
repnz
cwde
in
int
cli
push
aad
(bad)
sub
popf
repnz
cwde
in
int
cli
push
aad
(bad)
sub
popf
repnz
cwde
in
int
cli
push
aad
(bad)
cmp
popf
repnz
in
int
cli
push
aad
(bad)
cmp
popf
repnz
in
int
cli
push
aad
(bad)
cmp
popf
repnz
in
int
cli
push
aad
(bad)
cmp
popf
repnz
fwait
in
int
cli
push
aad
(bad)
cmp
popf
repnz
fwait
in
int
cli
push
aad
(bad)
cmp
popf
repnz
cwde
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
popf
repnz
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
daa
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
cs
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sbb
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
cdq
repnz
xchg
in
int
cli
push
aad
(bad)
sub
cdq
repnz
xchg
in
int
cli
push
aad
(bad)
or
sahf
repnz
(bad)
in
int
cli
push
aad
(bad)
cmp
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
cwde
repnz
in
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
cwde
repnz
in
in
int
cli
push
aad
(bad)
sbb
cwde
repnz
in
in
int
cli
push
aad
(bad)
sbb
cwde
repnz
in
in
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
push
aad
(bad)
cmp
sahf
repnz
loopne
mov
aad
(bad)
sbb
popf
repnz
loop
mov
aad
(bad)
cmp
cwde
repnz
int
cli
push
aad
(bad)
cmp
cwde
repnz
int
cli
push
aad
(bad)
cmp
cwde
repnz
int
cli
push
aad
(bad)
cmp
cwde
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
cwde
repnz
int
cli
push
aad
(bad)
cmp
cwde
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
cwde
repnz
int
cli
push
aad
(bad)
cmp
cwde
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
cwde
repnz
aam
in
int
cli
push
aad
(bad)
sub
cwde
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
mov
cli
push
aad
(bad)
das
(bad)
cwde
repnz
aam
in
int
cli
push
aad
(bad)
sub
cwde
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sbb
lahf
repnz
aam
in
int
cli
push
aad
(bad)
adc
lahf
repnz
aam
in
int
cli
push
aad
(bad)
adc
lahf
repnz
aam
in
int
cli
push
aad
(bad)
adc
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
or
lahf
repnz
int
cli
push
aad
(bad)
sbb
popf
repnz
cmps
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
mov
cli
push
aad
(bad)
push
(bad)
popf
repnz
mov
cli
push
aad
(bad)
cmp
lahf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
sahf
repnz
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
lahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
sahf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
mov
test
aad
(bad)
sub
popf
repnz
mov
test
aad
(bad)
sub
popf
repnz
mov
test
aad
(bad)
sub
popf
repnz
mov
lahf
int
cli
push
aad
(bad)
sub
popf
repnz
mov
(bad)
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
or
sahf
repnz
mov
mov
aad
(bad)
or
sahf
repnz
mov
mov
aad
(bad)
cmp
sahf
repnz
(bad)
in
int
cli
push
aad
(bad)
cmp
sahf
repnz
(bad)
in
int
cli
push
aad
(bad)
sbb
popf
repnz
mov
mov
aad
(bad)
sbb
popf
repnz
mov
mov
aad
(bad)
cmp
sahf
repnz
(bad)
in
int
cli
push
aad
(bad)
cmp
sahf
repnz
and
int
cli
push
aad
(bad)
cmp
sahf
repnz
and
int
cli
push
aad
(bad)
cmp
sahf
repnz
and
int
cli
push
aad
(bad)
cmp
sahf
repnz
and
int
cli
push
aad
(bad)
cmp
sahf
repnz
and
int
cli
push
aad
(bad)
cmp
sahf
repnz
and
int
cli
push
aad
(bad)
cmp
sahf
repnz
and
int
cli
push
aad
(bad)
sbb
popf
repnz
and
push
aad
(bad)
sbb
popf
repnz
and
push
aad
(bad)
or
popf
repnz
lahf
in
int
cli
push
aad
(bad)
or
popf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
inc
aad
(bad)
sbb
xchg
repnz
int
cli
push
aad
(bad)
sbb
lahf
repnz
in
nop
int
cli
sub
lods
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
pop
(bad)
mov
in
int
cli
push
aad
(bad)
cmp
sahf
repnz
aam
in
int
cli
jnp
mov
sub
popf
repnz
xchg
in
int
cli
pop
aad
(bad)
pop
(bad)
mov
cmps
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
cwde
in
int
cli
data16
mov
mov
in
int
cli
push
aad
(bad)
sub
cdq
repnz
aam
in
int
cli
pop
aad
(bad)
and
popf
repnz
loope
retf
int
cli
push
aad
(bad)
cmp
cwde
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sbb
xchg
repnz
mov
mov
aad
(bad)
sub
xchg
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
mov
mov
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
xchg
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
pop
aad
(bad)
or
mov
clc
aam
in
int
cli
addr16
(bad)
pop
(bad)
mov
in
int
cli
sub
cmps
(bad)
cmp
cwde
repnz
in
in
int
cli
data16
(bad)
cs
mov
in
int
cli
and
lock
sub
mov
stos
aam
in
int
cli
pop
aad
(bad)
aas
(bad)
mov
in
int
cli
and
xchg
cmp
xchg
mov
in
in
int
cli
je
mov
sub
xchg
repnz
aam
in
int
cli
cmp
test
xor
xchg
mov
int
cli
arpl
xchg
(bad)
xor
mov
in
int
cli
jg
fwait
(bad)
pop
(bad)
mov
in
int
cli
jg
add
(bad)
nop
repnz
aam
in
int
cli
je
mov
sub
xchg
repnz
aam
in
int
cli
cmp
icebp
mov
xchg
repnz
int
cli
jnp
xchg
mov
xchg
repnz
aam
in
int
cli
jg
xchg
pop
(bad)
test
(bad)
aam
in
int
cli
je
add
(bad)
mov
in
int
cli
and
cld
(bad)
cmp
(bad)
repnz
xchg
in
int
cli
sub
mov
bnd
and
int
cli
je
mov
bnd
and
int
cli
data16
(bad)
cmp
mov
in
int
cli
jg
mov
repnz
aam
in
int
cli
imul
mov
in
int
cli
sub
mov
sub
xchg
repnz
aam
in
int
cli
je
mov
sub
xchg
repnz
in
lahf
int
cli
jp
test
add
mov
in
int
cli
jnp
mov
repnz
int
cli
and
xchg
(bad)
pop
(bad)
mov
in
int
cli
jns
movs
(bad)
cmp
mov
in
int
cli
addr16
(bad)
sub
mov
in
int
cli
data16
(bad)
xor
mov
in
int
cli
data16
(bad)
cmp
mov
in
int
cli
jg
lods
(bad)
cmp
xchg
mov
int
cli
arpl
add
(bad)
mov
cmps
aam
in
int
cli
imul
mov
in
int
cli
sub
mov
sub
xchg
repnz
aam
in
int
cli
je
cmps
(bad)
cmp
cwde
repnz
mov
cli
arpl
add
(bad)
mov
in
int
cli
sub
mov
sub
xchg
repnz
aam
in
int
cli
pop
aad
mov
xchg
repnz
mov
xchg
int
cli
addr16
(bad)
xor
test
sti
aam
in
int
cli
jns
clc
(bad)
sub
mov
in
int
cli
gs
(bad)
pop
(bad)
test
mov
int
cli
imul
mov
in
int
cli
imul
mov
in
int
cli
sub
test
add
aam
in
int
cli
je
icebp
mov
xchg
mov
int
cli
imul
mov
in
int
cli
je
cmps
(bad)
cmp
cwde
repnz
in
in
int
cli
fs
(bad)
xor
test
mov
int
cli
arpl
fwait
(bad)
xor
test
cmps
aam
in
int
cli
fs
(bad)
xor
(bad)
repnz
aam
in
int
cli
sub
pushf
(bad)
cmp
mov
in
int
cli
jp
mov
add
nop
repnz
int
cli
data16
mov
xchg
repnz
aam
in
int
cli
arpl
xchg
add
aam
in
int
cli
es
(bad)
xor
mov
in
int
cli
js
movs
(bad)
ds
mov
in
int
cli
jg
xchg
pop
(bad)
mov
in
int
cli
je
cmps
(bad)
cmp
cwde
repnz
pushf
in
int
cli
data16
mov
xchg
repnz
aam
in
int
cli
arpl
xchg
add
aam
in
int
cli
imul
xchg
mov
int
cli
addr16
mov
xchg
repnz
mov
xchg
int
cli
addr16
(bad)
xor
test
sti
aam
in
int
cli
jns
clc
(bad)
sub
mov
in
int
cli
gs
(bad)
pop
(bad)
test
mov
int
cli
imul
mov
in
int
cli
imul
mov
in
int
cli
sub
test
add
aam
in
int
cli
je
mov
repnz
aam
in
int
cli
imul
test
cmc
aam
in
int
cli
cmp
icebp
mov
xchg
repnz
and
int
cli
jp
stc
(bad)
aas
(bad)
xchg
mov
int
cli
jnp
fwait
mov
mov
in
int
cli
je
add
(bad)
xchg
repnz
int
cli
inc
aad
(bad)
cmp
mov
mov
int
cli
js
lock
pop
(bad)
test
mov
int
cli
jp
mov
add
nop
repnz
pushf
in
int
cli
data16
(bad)
cmp
mov
in
int
cli
and
mov
sub
mov
in
int
cli
sub
icebp
(bad)
pop
(bad)
test
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cs
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
cs
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
cs
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
cs
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
cs
popf
repnz
aam
in
int
cli
push
aad
(bad)
cs
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
cs
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
cs
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
cs
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
cmp
out
and
sahf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
cs
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cs
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
cwde
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
pushf
in
int
cli
push
aad
(bad)
sub
(bad)
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
jg
icebp
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
mov
in
int
cli
jg
add
(bad)
mov
in
int
cli
push
aad
(bad)
cmp
mov
in
int
cli
daa
aad
mov
mov
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
es
(bad)
daa
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
je
mov
sub
popf
repnz
mov
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
mov
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
pop
(bad)
mov
in
int
cli
inc
aad
(bad)
pop
(bad)
mov
in
int
cli
jg
xchg
sub
mov
in
int
cli
pop
aad
(bad)
xor
test
mov
mov
xchg
int
cli
push
aad
(bad)
sub
aam
in
int
cli
jbe
mov
sub
popf
repnz
xchg
in
int
cli
pop
aad
(bad)
cmp
popf
repnz
mov
test
aad
(bad)
sub
sahf
repnz
aam
in
int
cli
jo
std
(bad)
or
cwde
repnz
aam
in
int
cli
je
cmps
(bad)
sub
xchg
repnz
in
int
cli
push
aad
mov
sahf
repnz
aam
in
int
cli
inc
aad
mov
cdq
repnz
xchg
in
int
cli
addr16
(bad)
cmp
xchg
repnz
in
int
cli
push
aad
(bad)
sub
lahf
repnz
int
cli
push
aad
(bad)
xor
cdq
repnz
int
cli
push
aad
(bad)
cmp
cwde
repnz
aam
in
int
cli
push
aad
(bad)
cmp
xchg
repnz
in
mov
aad
(bad)
cmp
mov
in
int
cli
pop
aad
mov
cdq
repnz
cwde
in
int
cli
inc
aad
(bad)
sbb
popf
repnz
mov
lahf
int
cli
jnp
add
(bad)
popf
repnz
aam
in
int
cli
jo
pushf
mov
cdq
repnz
aam
in
int
cli
je
stos
(bad)
or
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
lahf
repnz
cwde
in
int
cli
push
aad
(bad)
cmp
popf
repnz
aam
in
int
cli
dec
aad
(bad)
cmp
popf
repnz
aam
in
int
cli
dec
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
pop
aad
(bad)
cmp
aam
in
int
cli
je
stos
(bad)
cmp
mov
sahf
aam
in
int
cli
pop
aad
(bad)
sub
cdq
repnz
aam
in
int
cli
push
aad
(bad)
sub
cdq
repnz
aam
in
int
cli
push
aad
(bad)
or
xchg
repnz
loope
mov
aad
(bad)
sub
popf
repnz
cwde
in
int
cli
inc
aad
(bad)
cmp
(bad)
repnz
aam
in
int
cli
pop
aad
mov
popf
repnz
mov
mov
aad
(bad)
cmp
xchg
repnz
mov
test
aad
(bad)
sub
xchg
repnz
mov
mov
aad
mov
sahf
repnz
mov
cli
push
aad
(bad)
or
cwde
repnz
pushf
in
int
cli
inc
aad
(bad)
sbb
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
imul
(bad)
cmp
popf
repnz
and
int
cli
pop
aad
(bad)
sub
popf
repnz
loope
test
aad
(bad)
cmp
popf
repnz
mov
test
aad
(bad)
sub
lahf
repnz
in
mov
aad
(bad)
sbb
sahf
repnz
loope
mov
aad
(bad)
cmp
xchg
repnz
aam
in
int
cli
push
aad
mov
cdq
repnz
xchg
in
int
cli
pop
aad
mov
cdq
repnz
aam
in
int
cli
pop
aad
(bad)
or
cwde
repnz
xchg
in
int
cli
arpl
add
(bad)
sahf
repnz
mov
mov
aad
(bad)
cmp
xchg
repnz
aam
in
int
cli
pop
aad
(bad)
sub
lahf
repnz
mov
test
aad
(bad)
cmp
sahf
repnz
mov
mov
aad
(bad)
sub
popf
repnz
and
int
cli
push
aad
(bad)
sub
xchg
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
pop
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
pop
aad
(bad)
and
xchg
repnz
aam
in
int
cli
and
(bad)
lahf
repnz
in
mov
or
inc
aad
(bad)
pop
(bad)
mov
mov
in
in
int
cli
pop
aad
(bad)
sbb
call
in
int
cli
jns
mov
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
xor
mov
mov
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
sub
popf
bnd
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
inc
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cs
popf
repnz
aam
in
int
cli
push
aad
(bad)
cs
popf
repnz
aas
cli
cmp
mov
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
cs
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
pop
(bad)
xchg
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
addr16
(bad)
sub
popf
repnz
xchg
in
int
cli
jg
fwait
(bad)
xor
mov
in
int
cli
and
fwait
(bad)
xor
(bad)
repnz
int
cli
js
mov
cmp
(bad)
repnz
fwait
in
int
cli
push
mov
and
mov
in
int
cli
jg
fwait
(bad)
xor
mov
in
int
cli
and
fwait
(bad)
xor
(bad)
repnz
aam
in
int
cli
pusha
aad
mov
test
mov
int
cli
fs
(bad)
pop
(bad)
mov
in
int
cli
arpl
fwait
mov
lahf
in
int
cli
jg
fwait
(bad)
xor
mov
in
int
cli
and
fwait
(bad)
xor
(bad)
repnz
loopne
retf
cli
arpl
fwait
(bad)
xor
test
stc
aam
in
int
cli
jg
add
(bad)
mov
in
int
cli
jnp
mov
cmp
mov
in
int
cli
push
aad
(bad)
sub
lods
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
inc
aad
(bad)
cmp
mov
in
int
cli
push
aad
(bad)
sbb
mov
in
int
cli
jnp
(bad)
(bad)
sub
mov
mov
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
jge
lahf
(bad)
sub
mov
in
int
cli
and
pop
cmp
xchg
mov
fwait
in
int
cli
data16
(bad)
cmp
mov
in
int
cli
pusha
aad
(bad)
cmp
xchg
sahf
aam
in
int
cli
jg
fwait
(bad)
pop
(bad)
mov
in
int
cli
gs
mov
mov
in
int
cli
jl
fwait
(bad)
xor
xchg
adc
in
int
cli
gs
(bad)
sub
mov
in
int
cli
jg
lods
(bad)
cs
popf
repnz
int
cli
data16
(bad)
sub
(bad)
repnz
int
cli
inc
aad
(bad)
cmp
mov
in
int
cli
and
add
(bad)
popf
repnz
int
cli
data16
(bad)
sub
(bad)
repnz
int
cli
push
aad
(bad)
sub
mov
in
int
cli
jg
lods
(bad)
cs
popf
repnz
int
cli
inc
aad
(bad)
sub
lods
repnz
xchg
in
int
cli
data16
(bad)
cmp
mov
in
int
cli
jg
mov
repnz
aam
in
int
cli
arpl
pop
push
(bad)
mov
in
int
cli
gs
mov
nop
repnz
int
cli
and
cld
(bad)
cmp
mov
in
int
cli
jg
fwait
(bad)
pop
(bad)
mov
in
int
cli
and
xchg
cmp
xchg
mov
int
cli
push
lahf
mov
mov
in
int
cli
data16
mov
mov
mov
int
cli
arpl
fwait
(bad)
xor
mov
in
int
cli
and
movs
(bad)
sub
mov
in
int
cli
push
aad
(bad)
push
(bad)
scas
repnz
xchg
in
int
cli
jg
mov
bnd
loopne
scas
int
cli
js
cld
(bad)
cmp
mov
mov
cmps
in
int
cli
jnp
add
(bad)
mov
in
int
cli
jns
cld
(bad)
cmp
mov
in
int
cli
and
mov
cmp
mov
in
int
cli
jns
cld
(bad)
cmp
mov
in
int
cli
push
aad
(bad)
pop
(bad)
mov
in
int
cli
pop
aad
(bad)
cmp
mov
in
int
cli
push
aad
(bad)
pop
(bad)
mov
in
int
cli
pop
aad
(bad)
cmp
lods
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
mov
mov
in
int
cli
jnp
lods
(bad)
sub
aam
in
int
cli
data16
(bad)
sub
(bad)
repnz
aam
in
int
cli
dec
aad
(bad)
sub
mov
in
int
cli
inc
aad
(bad)
sub
xchg
mov
int
cli
push
lods
(bad)
pop
(bad)
mov
in
int
cli
imul
test
std
aam
in
int
cli
push
aad
mov
xchg
retf
int
cli
js
pop
cmp
xchg
mov
mov
cli
push
aad
(bad)
sub
xchg
mov
int
cli
jg
xchg
xor
xchg
sahf
aam
in
int
cli
jg
xchg
(bad)
xor
mov
mov
cwde
in
int
cli
jns
movs
mov
mov
in
int
cli
fs
mov
mov
in
int
cli
pop
aad
(bad)
cmp
xchg
mov
int
cli
data16
mov
in
scas
int
cli
and
xchg
xor
mov
in
int
cli
jnp
lahf
mov
mov
in
int
cli
push
aad
(bad)
pop
(bad)
xchg
mov
int
cli
jns
mov
repnz
int
cli
fs
(bad)
pop
(bad)
mov
in
int
cli
jg
mov
repnz
int
cli
jg
fwait
mov
xchg
in
int
cli
and
pop
pop
(bad)
xchg
mov
int
cli
push
aad
(bad)
cmp
xchg
std
aam
in
int
cli
jg
mov
cmp
xchg
mov
xchg
retf
int
cli
jnp
xchg
cmp
mov
in
int
cli
pop
aad
(bad)
sbb
mov
mov
xchg
in
int
cli
jg
mov
sub
xchg
mov
int
cli
and
movs
(bad)
cmp
test
xchg
aam
in
int
cli
jg
xchg
(bad)
xor
mov
mov
test
mov
or
jnp
(bad)
(bad)
cmp
lods
repnz
xchg
in
int
cli
addr16
(bad)
xor
call
in
int
cli
push
aad
(bad)
pop
(bad)
mov
in
int
cli
push
aad
mov
xchg
retf
int
cli
push
aad
mov
mov
in
int
cli
gs
(bad)
cs
popf
repnz
aam
in
int
cli
addr16
(bad)
sub
mov
in
int
cli
push
aad
(bad)
sub
mov
in
int
cli
imul
mov
in
int
cli
push
pop
push
(bad)
mov
std
aam
in
int
cli
addr16
(bad)
pop
(bad)
mov
in
int
cli
data16
(bad)
cs
xchg
mov
int
cli
daa
aad
(bad)
cs
popf
repnz
aam
in
int
cli
addr16
(bad)
pop
(bad)
mov
in
int
cli
data16
(bad)
cs
popf
repnz
int
cli
pop
aad
mov
and
int
cli
imul
test
mov
int
cli
and
lahf
(bad)
pop
(bad)
mov
mov
and
int
cli
jnp
cld
(bad)
ds
xchg
mov
int
cli
jne
fwait
(bad)
xor
xchg
mov
int
cli
pusha
aad
(bad)
and
xchg
mov
int
cli
imul
test
mov
int
cli
push
aad
(bad)
sub
mov
in
int
cli
pop
aad
(bad)
cmp
mov
in
int
cli
and
lahf
(bad)
pop
(bad)
xchg
mov
cwde
in
int
cli
jg
xchg
pop
(bad)
mov
in
int
cli
data16
mov
mov
in
int
cli
and
lahf
(bad)
pop
(bad)
mov
mov
cwde
in
int
cli
arpl
fwait
(bad)
pop
(bad)
mov
in
int
cli
jnp
movs
(bad)
sub
mov
mov
int
cli
and
xchg
xor
mov
in
int
cli
imul
test
mov
int
cli
push
aad
(bad)
xor
xchg
adc
or
inc
aad
(bad)
cmp
xchg
mov
int
cli
and
pop
pop
(bad)
test
mov
int
cli
push
aad
mov
mov
in
int
cli
inc
aad
(bad)
cmp
mov
in
int
cli
push
fwait
(bad)
pop
(bad)
mov
in
int
cli
inc
aad
(bad)
or
mov
in
int
cli
and
cld
(bad)
cmp
xchg
mov
lahf
in
int
cli
push
aad
(bad)
or
xchg
repnz
loope
scas
int
cli
dec
aad
(bad)
sub
mov
in
int
cli
gs
(bad)
pop
(bad)
test
mov
int
cli
es
(bad)
and
mov
in
int
cli
jg
add
(bad)
popf
repnz
xchg
in
int
cli
pusha
aad
(bad)
cmp
test
mov
xchg
in
int
cli
addr16
(bad)
pop
(bad)
(bad)
repnz
xchg
in
int
cli
jg
lahf
(bad)
sub
mov
in
int
cli
data16
(bad)
sub
xchg
movs
aam
in
int
cli
jl
fwait
mov
nop
repnz
int
cli
imul
mov
mov
test
scas
int
cli
jg
add
(bad)
mov
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
pop
(bad)
test
mov
int
cli
inc
aad
(bad)
sbb
scas
repnz
xchg
in
int
cli
fs
(bad)
xor
call
in
int
cli
push
aad
(bad)
pop
(bad)
mov
in
int
cli
data16
(bad)
cmp
xchg
std
aam
in
int
cli
push
aad
(bad)
sub
mov
in
int
cli
pop
aad
(bad)
sub
mov
in
int
cli
jg
clc
(bad)
cmp
mov
in
int
cli
inc
aad
(bad)
cmp
mov
in
int
cli
push
aad
(bad)
cmp
mov
in
int
cli
push
aad
mov
mov
in
int
cli
arpl
fwait
(bad)
xor
mov
in
int
cli
imul
test
mov
int
cli
jg
xchg
pop
(bad)
mov
in
int
cli
fs
(bad)
pop
(bad)
mov
in
int
cli
addr16
(bad)
sub
mov
in
int
cli
data16
(bad)
cmp
xchg
std
aam
in
int
cli
inc
aad
(bad)
sbb
mov
in
int
cli
pusha
aad
(bad)
sub
(bad)
repnz
int
cli
and
cld
(bad)
cmp
mov
in
int
cli
imul
mov
in
int
cli
jg
mov
cmp
mov
in
int
cli
sub
mov
cmp
mov
in
int
cli
es
(bad)
sub
aam
in
int
cli
push
lock
pop
(bad)
test
mov
in
mov
aad
(bad)
pop
(bad)
mov
mov
int
cli
gs
(bad)
sub
mov
mov
int
cli
jg
mov
repnz
int
cli
inc
aad
(bad)
xor
mov
in
int
cli
pop
aad
(bad)
cmp
(bad)
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
jge
mov
repnz
aam
in
int
cli
jle
mov
cmp
popf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
sahf
repnz
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
cs
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
xor
popf
repnz
popf
in
int
cli
push
aad
(bad)
xor
popf
repnz
popf
in
int
cli
push
aad
(bad)
aas
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
adc
popf
repnz
xchg
in
int
cli
push
aad
(bad)
adc
popf
repnz
aam
in
int
cli
push
aad
(bad)
sbb
popf
repnz
xchg
in
int
cli
push
aad
mov
popf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
xor
popf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
or
popf
repnz
xchg
in
int
cli
push
aad
(bad)
or
popf
repnz
xchg
in
int
cli
push
aad
(bad)
or
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sbb
popf
repnz
int
cli
push
aad
(bad)
xor
popf
repnz
aam
in
int
cli
push
aad
(bad)
xor
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
aam
in
int
cli
push
aad
(bad)
aas
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
ds
popf
repnz
int
cli
push
aad
(bad)
ds
popf
repnz
xor
(bad)
ds
popf
repnz
int
cli
push
aad
(bad)
aas
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
int
cli
push
aad
(bad)
es
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
or
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
mov
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
popf
in
int
cli
dec
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
fwait
repnz
aam
in
int
cli
push
aad
(bad)
cmp
xchg
repnz
xchg
in
int
cli
push
aad
(bad)
xor
popf
repnz
mov
cli
push
aad
(bad)
sub
popf
repnz
and
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
js
cwde
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
xchg
repnz
aam
in
int
cli
push
aad
(bad)
push
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
es
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
or
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
or
popf
repnz
mov
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
lahf
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
jns
mov
repnz
aam
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
sbb
xchg
repnz
aam
in
int
cli
push
aad
(bad)
or
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
pushf
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
dec
aad
(bad)
and
popf
repnz
xchg
in
int
cli
jp
mov
repnz
aam
in
int
cli
push
aad
(bad)
daa
(bad)
popf
repnz
cli
push
aad
(bad)
cmp
xchg
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
je
scas
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
daa
(bad)
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
xchg
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
mov
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
and
popf
bnd
xchg
in
int
cli
push
aad
(bad)
xor
popf
repnz
int
cli
push
aad
(bad)
xor
popf
repnz
int
cli
push
aad
(bad)
sub
popf
bnd
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
or
push
aad
(bad)
pop
(bad)
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
cli
push
aad
(bad)
and
popf
repnz
int
cli
push
aad
(bad)
cmp
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sbb
popf
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cs
popf
repnz
pushf
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
daa
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
cwde
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
cwde
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
es
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
pushf
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
cmp
popf
repnz
nop
in
int
cli
push
aad
(bad)
es
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
daa
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
das
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
mov
mov
aad
(bad)
or
div
mov
xchg
in
int
cli
pop
aad
(bad)
sub
xchg
repnz
test
int
cmp
pop
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sub
popf
repnz
xchg
in
int
cli
push
aad
(bad)
pop
(bad)
mov
in
int
cli
push
aad
(bad)
cmp
popf
repnz
int
cli
pop
aad
(bad)
sub
aam
in
int
cli
pop
aad
(bad)
pop
(bad)
mov
cmps
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
mov
cli
push
aad
(bad)
cmp
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
mov
mov
aad
(bad)
sub
popf
repnz
cwde
in
int
cli
data16
mov
mov
in
int
cli
push
aad
(bad)
sub
sahf
repnz
aam
in
int
cli
push
aad
(bad)
and
popf
repnz
loope
retf
int
cli
push
aad
(bad)
sub
sahf
repnz
int
cli
push
aad
(bad)
and
popf
repnz
xchg
in
int
cli
push
aad
(bad)
sbb
xchg
repnz
mov
mov
aad
(bad)
sub
xchg
repnz
int
cli
push
aad
(bad)
sub
popf
repnz
in
int
cli
push
aad
(bad)
sub
popf
repnz
aam
in
int
cli
push
aad
(bad)
pop
(bad)
mov
mov
xchg
in
int
cli
jp
cli
(bad)
and
popf
repnz
mov
xchg
int
cli
push
aad
(bad)
sbb
cdq
repnz
aam
in
int
cli
push
aad
(bad)
es
popf
repnz
mov
cli
push
aad
(bad)
sbb
mov
test
xchg
in
int
cli
jno
cmps
(bad)
sub
popf
repnz
pushf
in
int
cli
push
aad
(bad)
cmp
xchg
repnz
aam
in
int
cli
dec
aad
(bad)
cmp
popf
repnz
mov
cli
push
aad
(bad)
sub
scas
repnz
aam
in
int
cli
push
aad
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
out
repnz
int
cli
jnp
sahf
(bad)
sub
popf
repnz
mov
xchg
int
cli
push
aad
(bad)
or
stos
repnz
aam
in
int
cli
and
mov
das
(bad)
popf
repnz
cmps
in
int
cli
push
aad
(bad)
sbb
mov
mov
xchg
in
int
cli
and
cmps
(bad)
sub
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
cmps
repnz
xchg
in
int
cli
pop
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
cmp
xchg
repnz
aam
in
int
cli
pop
aad
(bad)
das
(bad)
popf
repnz
mov
xchg
int
cli
push
aad
(bad)
or
xchg
repnz
aam
in
int
cli
inc
aad
(bad)
sub
popf
repnz
mov
mov
push
cli
push
aad
(bad)
sub
mov
movs
aam
in
int
cli
imul
(bad)
cmp
popf
repnz
pushf
in
int
cli
push
aad
(bad)
sbb
in
repnz
aam
in
int
cli
jb
clc
(bad)
sub
popf
repnz
test
stos
int
cli
push
aad
(bad)
or
mov
sahf
aam
in
int
cli
jo
mov
daa
(bad)
popf
repnz
cwde
in
int
cli
push
aad
(bad)
or
cmps
repnz
int
cli
pusha
aad
(bad)
es
popf
repnz
loope
pushf
int
cli
push
aad
(bad)
sbb
mov
stc
aam
in
int
cli
pop
aad
(bad)
sub
popf
repnz
mov
mov
aad
(bad)
sub
in
adc
in
int
cli
inc
aad
(bad)
and
popf
repnz
nop
in
int
cli
push
aad
(bad)
cmp
popf
repnz
xchg
in
int
cli
imul
popf
repnz
loope
mov
aad
(bad)
sub
mov
loop
xchg
in
int
cli
pop
aad
(bad)
sub
popf
repnz
test
test
pop
cli
push
aad
(bad)
sbb
mov
lahf
aam
in
int
cli
addr16
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sbb
popf
repnz
xchg
in
int
cli
sub
mov
repnz
loope
mov
es
push
aad
(bad)
sub
(bad)
repnz
aam
in
int
cli
pop
aad
(bad)
sub
popf
repnz
mov
mov
and
push
aad
(bad)
cmp
cmps
repnz
xchg
in
int
cli
and
(bad)
popf
repnz
mov
mov
sbb
(bad)
cmp
mov
hlt
aam
in
int
cli
imul
(bad)
cmp
popf
repnz
pushf
in
int
cli
push
aad
(bad)
or
mov
mov
int
cli
and
lock
and
popf
repnz
cwde
in
int
cli
push
aad
(bad)
sbb
mov
mov
xchg
in
int
cli
ja
mov
and
popf
repnz
cmps
in
int
cli
push
aad
(bad)
cmp
call
in
int
cli
es
(bad)
and
aam
in
int
cli
push
aad
(bad)
or
mov
movs
aam
in
int
cli
jnp
fwait
(bad)
and
aam
in
int
cli
push
aad
(bad)
sub
test
in
int
cli
and
mov
and
aam
in
int
cli
push
aad
(bad)
sub
mov
in
int
cli
pop
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
sbb
xchg
cwde
aam
in
int
cli
pop
aad
(bad)
and
aam
in
int
cli
push
aad
(bad)
or
mov
in
int
cli
sub
add
(bad)
popf
repnz
xchg
in
int
cli
push
aad
(bad)
or
lahf
repnz
aam
in
int
cli
pusha
aad
(bad)
sub
aam
in
int
cli
push
aad
(bad)
sbb
stos
repnz
aam
in
int
cli
pop
aad
(bad)
sub
popf
repnz
pushf
in
int
cli
push
aad
(bad)
cmp
mov
cld
aam
in
int
cli
inc
aad
(bad)
and
popf
repnz
nop
in
int
cli
push
aad
(bad)
cmp
out
repnz
xchg
in
int
cli
and
out
and
popf
repnz
mov
cli
push
aad
(bad)
sbb
in
repnz
xchg
in
int
cli
jge
cmps
(bad)
sub
popf
repnz
cwde
in
int
cli
push
aad
(bad)
sub
test
clc
aam
in
int
cli
dec
aad
(bad)
and
popf
repnz
mov
cli
push
aad
(bad)
sub
(bad)
repnz
xchg
in
int
cli
push
aad
(bad)
es
popf
repnz
mov
cli
push
aad
(bad)
cmp
mov
mov
xchg
in
int
cli
addr16
(bad)
das
(bad)
popf
repnz
mov
cdq
int
cli
push
aad
(bad)
or
xchg
repnz
xchg
in
int
cli
jb
xchg
(bad)
sub
popf
repnz
in
retf
cli
push
aad
(bad)
cmp
mov
stos
aam
in
int
cli
popa
aad
(bad)
sub
popf
repnz
cwde
in
int
cli
push
aad
(bad)
sbb
mov
std
aam
in
int
cli
inc
aad
(bad)
das
(bad)
popf
repnz
nop
in
int
cli
push
aad
(bad)
or
jmp
in
int
cli
cmp
mov
and
popf
repnz
nop
in
int
cli
push
aad
(bad)
sub
mov
mov
int
cli
and
mov
repnz
cwde
in
int
cli
push
aad
(bad)
cmp
mov
in
int
cli
inc
aad
(bad)
and
popf
repnz
loope
xchg
int
cli
push
aad
(bad)
cmp
xchg
repnz
int
cli
jg
mov
repnz
cmps
in
int
cli
push
aad
(bad)
cmp
stos
repnz
sub
popf
mov
cmps
cmp
in
pusha
mov
dec
ins
push
inc
xchg
mov
fsubp
mov
add
mov
inc
das
(bad)
push
sbb
jg
sbb
rcr
(bad)
jno
xchg
add
add
adc
std
mov
mov
jno
adc
mov
mov
pop
fisubr
xchg
out
ror
pop
fdivr
(bad)
cmp
xor
pop
(bad)
jnp
sub
xlat
adc
pop
imul
shl
or
mov
fnsave
adc
mov
xor
or
pop
movs
inc
mov
cmp
cdq
pushf
push
fcmovbe
pop
loop
push
sub
in
daa
push
neg
ret
fs
jle
sbb
pop
out
jo
imul
es
mov
adc
mov
mov
mov
push
add
sbb
ficomp
loopne
in
mov
sub
mov
js
xchg
out
mov
scas
clc
movs
jmp
dec
or
(bad)
fld
add
lods
sub
inc
adc
ss
pop
clc
in
aas
mov
stos
mov
not
xchg
push
(bad)
stc
test
mov
add
pop
in
gs
pusha
jp
in
dec
shl
das
add
add
jne
or
fistp
push
jg
ds
inc
inc
sub
pop
popf
jg
ds
jp
push
xchg
push
mov
cmps
std
jle
pop
aas
call
(bad)
or
mov
popa
pop
repnz
adc
cmp
(bad)
fwait
daa
jne
xchg
dec
pop
sub
cmp
lods
fnsave
adc
add
stos
imul
fnsave
les
leave
xchg
daa
scas
ret
adc
int
mov
dec
enter
mov
inc
cmp
fcmovu
stos
push
in
cmp
int
add
xlat
or
out
imul
cmp
jmp
popf
mov
xor
sub
nop
dec
and
fild
sub
es
sub
sub
mul
add
cmp
fs
repz
and
lahf
mov
adc
mov
adc
mov
hlt
mov
xchg
fcom
std
enter
ja
clc
(bad)
sub
fsub
sbb
cli
sub
test
cmc
movs
lods
jbe
(bad)
icebp
add
pop
push
(bad)
fbstp
sahf
xor
cli
pop
shl
mov
mov
je
xchg
and
inc
jae
sbb
push
in
inc
mov
in
pop
pusha
xor
adc
xchg
jnp
test
icebp
(bad)
int3
je
sub
pop
xorps
jmp
enter
mov
xor
stc
out
(bad)
or
add
rcr
sub
sahf
iret
cdq
pop
dec
aas
jle
push
xor
icebp
inc
or
push
sar
outs
jne
repnz
or
mov
loopne
iret
or
outs
aad
sub
in
mov
pop
sub
xchg
cmc
repnz
or
push
or
add
dec
cmp
mov
sbb
stc
dec
(bad)
push
jge
add
ds
push
jne
fcomp
adc
movs
int3
adc
ins
or
aam
mov
fimul
xchg
or
cmp
loop
inc
jmp
mov
mov
ss
es
idiv
lods
xor
sti
cmp
mov
repnz
jle
jnp
retf
clc
idiv
pop
jns
aad
or
and
pop
addr16
movs
out
inc
sub
daa
adc
mov
bnd
inc
xchg
cmp
add
mov
push
inc
fst
jge
xchg
retf
mov
inc
xchg
and
cmp
icebp
dec
repnz
lods
push
shl
rcl
retf
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
add
enter
and
jb
outs
addr16
add
add
adc
add
and
add
push
add
adc
add
and
dec
inc
add
add
push
add
sbb
add
and
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
cmp
add
sbb
add
sbb
add
arpl
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
add
cmp
push
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
and
pop
add
add
add
rol
push
xor
push
xor
push
xor
push
xor
push
mov
mov
test
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
adc
sbb
sbb
sbb
add
daa
add
add
add
add
add
add
mov
sbb
add
sub
add
add
test
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
test
add
add
add
push
add
add
add
add
adc
push
add
add
add
add
add
add
add
mov
sbb
or
inc
add
add
add
sbb
sbb
or
inc
add
add
add
inc
add
add
dec
add
add
add
add
dec
add
add
add
push
add
add
adc
inc
add
add
add
add
add
adc
push
add
push
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
sbb
sbb
adc
pop
add
add
add
add
add
add
adc
ins
add
sbb
bound
add
add
pop
push
outs
push
fld
sbb
arpl
adc
sbb
ja
adc
mov
jnp
add
sbb
or
adc
sbb
adc
xor
sbb
inc
add
add
inc
add
add
add
add
adc
sbb
xchg
add
add
sbb
mov
add
sbb
test
add
mov
add
mov
or
add
inc
add
add
add
mov
add
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
sbb
add
mov
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
sti
add
add
nop
add
add
add
add
nop
add
add
add
add
nop
add
jge
add
les
add
add
nop
add
add
add
add
nop
add
jge
add
call
add
add
add
add
add
nop
add
jge
add
sub
add
add
nop
add
mov
add
sub
add
add
nop
add
jge
add
inc
daa
add
add
nop
add
add
daa
add
add
nop
add
push
daa
add
add
nop
add
mov
add
push
add
add
add
sub
add
add
add
add
add
add
nop
add
push
sub
add
add
add
add
add
add
nop
add
or
add
dec
sub
add
add
add
add
add
add
add
nop
add
push
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
sub
add
add
add
add
sub
add
add
add
stos
add
add
sub
add
add
add
mov
add
add
adc
sbb
fild
add
enter
add
adc
sbb
inc
add
cld
das
add
add
xchg
daa
add
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
xchg
daa
add
add
add
add
add
adc
sbb
pop
add
add
add
add
jge
add
nop
xor
add
add
add
add
xchg
add
scas
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
xchg
daa
add
add
add
add
add
adc
sbb
mov
xor
adc
sbb
fiadd
add
lock
adc
sbb
add
add
add
add
add
xchg
daa
add
add
add
add
add
adc
sbb
and
add
in
add
add
adc
sbb
add
add
cmp
add
add
add
inc
add
add
add
add
adc
sbb
fiadd
add
inc
cmp
add
add
add
add
add
add
add
add
xchg
daa
add
add
add
adc
sbb
jl
add
nop
cmp
add
add
add
xchg
add
add
add
add
sbb
add
add
add
add
add
xchg
daa
add
add
add
add
add
add
rol
add
cmp
xchg
sbb
add
add
add
xchg
daa
add
add
add
add
add
xchg
sbb
add
add
add
xchg
or
push
add
add
add
add
add
add
add
add
add
rol
add
add
add
adc
sbb
fild
add
cld
aas
add
add
adc
sbb
lock
add
add
add
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
mov
add
add
add
add
add
add
add
add
inc
add
add
xchg
add
jl
add
fadd
add
add
add
cwde
inc
add
add
xchg
daa
add
add
mov
add
add
test
add
add
xchg
daa
add
add
mov
add
add
push
sbb
add
add
add
add
mov
add
add
mov
adc
out
adc
xor
daa
add
add
add
add
add
add
cmp
dec
add
add
add
daa
add
add
mov
pop
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
sbb
daa
add
add
add
add
cmp
add
inc
add
add
jp
mov
xchg
add
add
add
mov
outs
add
add
rol
daa
add
add
add
add
add
cli
add
adc
pushf
add
add
add
and
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sub
mov
inc
add
add
add
rol
add
add
sub
dec
add
push
sub
dec
add
pop
sub
dec
add
sub
dec
add
or
add
inc
or
add
pusha
or
add
mov
add
or
add
loopne
sub
dec
add
or
add
or
add
mov
add
or
add
add
sub
dec
add
or
add
add
push
or
add
add
mov
add
add
add
pop
add
add
cdq
add
add
add
add
add
xchg
add
add
push
mov
fwait
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
or
or
add
(bad)
add
dec
add
add
add
add
add
add
add
add
out
add
add
add
add
add
dec
sub
call
add
inc
or
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
popa
add
add
add
arpl
sbb
add
add
arpl
mov
add
add
jae
sbb
add
add
jne
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jno
pop
add
add
add
add
xchg
xchg
retf
add
add
add
xchg
scas
add
test
imul
bound
push
add
add
add
dec
add
dec
add
add
pop
add
or
pop
add
add
add
add
add
add
add
add
lldt
adc
imul
adc
imul
adc
push
add
add
pop
add
sbb
imul
sbb
inc
add
add
dec
popa
imul
js
add
imul
jae
outs
jb
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
add
jae
gs
cs
jb
ja
outs
add
add
jb
jae
jne
arpl
add
cs
jb
jae
jne
arpl
add
data16
fs
cmp
gs
sub
sub
data16
aaa
arpl
jge
dec
gs
jae
cs
gs
jne
arpl
cs
jae
jne
arpl
add
gs
je
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
popa
jb
arpl
outs
jb
add
add
dec
bound
arpl
arpl
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
add
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
inc
imul
add
outs
inc
imul
add
ins
ins
outs
outs
inc
imul
push
popa
ins
outs
add
popa
ins
outs
addr16
gs
ins
je
dec
push
imul
outs
ja
addr16
inc
imul
inc
jbe
outs
je
jb
jae
dec
gs
outs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
gs
je
add
jae
ins
bound
inc
outs
jb
add
outs
je
outs
ins
add
jp
inc
add
outs
je
imul
je
outs
ins
add
jp
add
je
push
imul
jne
gs
popa
jns
jne
add
jno
popa
je
bound
xor
dec
push
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
jb
outs
add
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
jo
outs
add
je
imul
gs
imul
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
je
imul
outs
ins
push
imul
je
imul
je
dec
popa
ins
add
je
dec
jo
arpl
jns
jae
je
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
je
push
gs
add
outs
ja
push
push
inc
push
push
inc
je
jb
bound
add
ins
je
arpl
je
gs
gs
je
add
jbe
imul
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
fs
outs
jbe
imul
inc
outs
outs
jbe
jb
imul
jbe
jb
outs
ins
outs
je
inc
gs
outs
ins
fs
popa
je
add
arpl
ins
inc
outs
ins
fs
dec
popa
jns
jne
dec
imul
popa
jns
jne
add
je
dec
jae
imul
outs
gs
dec
gs
bound
dec
outs
outs
add
ins
jne
push
jns
add
outs
arpl
add
je
gs
outs
add
gs
je
inc
gs
gs
je
add
add
je
inc
ins
imul
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
ins
outs
outs
gs
bound
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
ins
outs
jae
add
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
jne
jo
outs
fs
popa
jns
jne
add
je
dec
imul
outs
add
add
imul
ins
add
jo
jae
add
gs
outs
outs
je
outs
ins
add
je
dec
imul
add
je
dec
outs
imul
arpl
jns
jae
je
inc
imul
inc
imul
jb
pusha
xor
push
add
inc
gs
popa
ins
jne
add
jo
jns
inc
outs
arpl
imul
pop
push
push
inc
cmp
inc
gs
je
imul
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
gs
add
add
jb
popa
ins
add
jae
gs
cs
dec
add
pop
inc
jno
popa
ins
imul
je
xor
inc
gs
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
dec
outs
addr16
add
je
add
popa
add
je
imul
je
jb
bound
gs
jae
addr16
je
jb
bound
add
je
imul
jb
gs
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
add
add
add
pop
xor
xor
aaa
add
add
add
dec
jnp
xor
data16
add
bound
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
xor
bound
jge
add
ret
sub
inc
cmps
js
fisubr
mov
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
add
add
or
add
add
add
or
pop
or
or
sbb
add
adc
add
push
or
add
adc
add
add
add
pop
add
sub
or
push
adc
push
and
adc
add
or
add
sbb
cmp
add
inc
adc
inc
add
add
add
add
dec
add
add
dec
or
add
adc
or
push
push
add
add
or
add
push
add
or
or
adc
or
adc
add
or
pop
add
add
add
push
pop
or
adc
pop
adc
or
adc
or
or
sbb
or
or
add
adc
or
add
or
adc
add
sbb
adc
pop
push
sbb
or
add
sbb
add
adc
or
sbb
pop
add
sbb
and
add
add
add
add
or
adc
add
adc
add
or
push
or
adc
dec
add
add
or
add
sbb
dec
adc
add
sbb
add
or
add
or
and
add
or
adc
or
add
push
adc
push
adc
pop
or
or
or
or
and
add
and
push
add
and
or
or
or
adc
add
push
add
or
or
push
or
and
add
push
add
push
or
add
sbb
or
add
adc
and
or
push
push
add
push
push
push
push
add
push
or
add
inc
adc
add
add
or
pop
and
sbb
add
sbb
push
adc
or
or
or
or
or
adc
add
push
add
pop
or
or
pop
or
or
or
and
add
sub
push
add
sub
sbb
or
push
adc
sbb
sbb
sbb
add
inc
push
sbb
add
inc
add
adc
and
add
xor
push
add
xor
or
xor
or
sbb
adc
add
push
add
add
push
or
pop
or
or
or
push
add
add
adc
sbb
adc
add
push
add
add
add
pop
or
or
or
sbb
and
add
push
or
add
push
add
push
or
or
add
push
add
add
add
or
or
or
adc
add
push
add
or
pop
or
adc
add
or
or
add
push
push
push
add
push
or
or
or
or
adc
add
push
add
or
pop
add
sbb
sbb
add
sbb
or
add
add
dec
add
add
sbb
push
adc
push
push
add
adc
add
or
sbb
pop
add
or
or
or
or
dec
or
add
push
add
add
or
pop
push
or
or
adc
add
push
add
add
add
pop
add
adc
or
adc
add
inc
push
add
add
add
add
push
push
and
adc
add
or
sbb
and
adc
or
push
adc
or
add
add
pop
pop
push
or
or
adc
or
or
add
adc
adc
add
leave
pop
and
push
sbb
add
sbb
add
push
pop
and
add
add
add
add
or
pop
add
dec
adc
add
push
push
add
add
push
push
and
adc
add
add
add
or
and
or
and
add
and
add
call
add
add
or
add
add
add
add
add
or
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
test
or
mov
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
