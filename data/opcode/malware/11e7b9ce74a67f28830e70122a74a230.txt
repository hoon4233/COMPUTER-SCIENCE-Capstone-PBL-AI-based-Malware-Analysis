push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ud2
inc
repnz
scas
shl
mov
jb
mov
mov
jle
lods
mov
cs
and
mov
and
pop
or
push
mov
push
add
add
mov
retf
cmp
mov
inc
mov
add
mov
sub
lea
push
jb
leave
add
mov
xor
and
pop
dec
jmp
and
jg
jmp
mov
sub
lea
xor
jp
rol
add
mov
pop
jp
in
(bad)
std
inc
in
inc
jg
xor
and
inc
add
jmp
inc
and
je
jmp
pop
inc
and
sbb
mov
dec
(bad)
sub
imul
and
mov
scas
sub
nop
dec
repz
or
fiadd
xor
add
mov
sub
mov
and
jg
jmp
mov
psubusb
pop
nop
paddd
sub
cmp
inc
and
pop
rcl
inc
loope
out
jg
jmp
mov
or
inc
and
add
js
add
mov
sbb
and
shld
add
movs
ret
mov
call
and
clc
test
add
jmp
mov
sub
mov
fiadd
je
add
mov
in
std
sub
mov
sub
add
test
pop
lea
(bad)
sbb
and
aas
test
je
je
movs
add
ret
jmp
add
mov
in
mov
lods
push
int3
add
(bad)
shl
and
xchg
(bad)
rol
mov
mov
call
push
(bad)
in
sti
cmp
ror
(bad)
jge
sub
dec
and
jmp
lea
or
fnstcw
mov
and
fistp
stos
push
cmps
adc
add
cmp
cs
ja
and
jmp
mov
mov
mov
mov
cmovne
and
jmp
call
and
(bad)
lods
and
push
push
jno
jmp
addr16
add
sti
popf
push
add
je
and
dec
add
test
dec
cmp
and
mov
(bad)
in
inc
add
add
shr
adc
mov
and
sub
adc
jns
ret
(bad)
lods
and
adc
lods
mov
inc
pop
test
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
adc
adc
jne
das
or
mov
mov
mov
mov
mov
add
sar
test
inc
mov
mov
and
mov
div
(bad)
sub
les
cmp
scas
mov
add
jmp
mov
and
sub
xchg
jns
xor
add
dec
add
mov
sbb
inc
and
xadd
add
ds
add
and
add
pop
adc
add
pop
adc
sub
mov
adc
jmp
and
std
cdq
mov
or
lods
sldt
dec
jbe
add
pop
inc
and
jp
fs
inc
and
data16
aas
add
add
add
add
or
stos
push
pop
xchg
je
test
fild
xlat
mov
or
mov
inc
test
push
sti
outs
mov
add
mov
cmp
sub
inc
pusha
push
jg
jmp
pop
inc
and
sub
les
and
add
add
mov
inc
pop
(bad)
sbb
add
add
mov
sub
pop
xchg
add
jge
jbe
mov
mov
add
or
gs
stos
sti
add
add
or
pop
xchg
and
pslld
and
add
sub
ret
xchg
inc
and
jg
jmp
jo
and
test
xchg
xlat
rcl
jmp
test
or
add
movs
jbe
pushf
mov
and
inc
pop
cld
jae
mov
imul
mov
enter
add
and
sub
out
lahf
and
je
jmp
std
fsub
pusha
fmul
pop
int3
mov
and
setnp
aas
add
jmp
push
add
or
sbb
jnp
xchg
jns
mov
xchg
add
add
sar
inc
add
ret
xor
add
add
inc
and
aas
pop
ss
ror
test
jbe
mov
mov
bound
inc
add
add
add
push
xchg
out
sub
mov
je
fbstp
add
add
and
stos
and
pop
sbb
test
stos
sti
add
popf
inc
add
mov
pop
sar
sub
jbe
add
add
cmp
sub
xchg
add
or
cmp
jmp
add
xlat
sqrtps
sub
mov
and
push
dec
imul
mov
mov
mov
in
add
inc
cmps
mov
jmp
mov
mov
jne
dec
imul
aam
dec
and
xchg
xchg
and
ds
nop
push
adc
adc
push
add
mov
mov
sti
movzx
xor
cmps
pop
mov
dec
in
xchg
repz
add
ret
mov
and
add
add
mov
add
mov
mov
mov
mov
push
add
sbb
fadd
xchg
push
jo
call
mov
xchg
mov
popf
imul
jmp
lahf
add
add
inc
and
dec
push
ret
mov
pushf
je
or
push
inc
adc
push
xlat
cmps
dec
dec
and
lahf
jmp
mov
pop
dec
mov
pop
add
add
pop
pop
ret
cmp
pusha
(bad)
mov
fcmovnbe
mov
mov
inc
fidiv
inc
jo
and
xchg
cld
test
add
mov
mov
movzx
xor
mov
sub
dec
or
fidivr
scas
jb
jo
sub
xlat
or
add
out
and
sbb
and
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
dec
adc
add
add
jb
cmps
ret
sub
jg
mov
jmp
inc
and
mov
aad
push
inc
and
mov
adc
mov
cmp
mov
or
dec
and
add
add
and
mov
dec
dec
cwde
mov
and
inc
or
push
mov
fisub
xor
fs
dec
jp
inc
and
ltr
mov
add
jge
and
ret
or
adc
jne
fisttp
mov
sbb
bound
mov
and
jb
inc
or
fwait
loope
inc
outs
(bad)
fwait
call
ss
add
add
add
and
sahf
mov
ror
add
xchg
dec
icebp
jge
inc
and
or
adc
jg
(bad)
(bad)
or
and
add
fbld
popa
into
add
push
add
add
sbb
xchg
mov
mov
and
getsec
movs
out
test
inc
add
fwait
add
and
retf
xor
inc
xchg
or
fstp
add
add
xchg
push
add
mov
mov
xor
inc
and
je
jmp
mov
sub
int3
mov
cmc
and
stc
sbb
mov
jmp
shl
mov
dec
leave
(bad)
mov
mov
mov
mov
jmp
sbb
add
and
adc
sbb
push
call
imul
add
and
xor
xchg
jmp
mov
repnz
xor
popf
mov
mov
and
mov
add
inc
sar
and
jmp
mov
and
fisttp
imul
inc
ror
or
adc
mov
pop
pop
pop
call
mov
jg
and
mov
jmp
mov
mov
mov
cld
sbb
rcl
daa
add
data16
sub
or
mov
(bad)
dec
and
mov
inc
jmp
mov
and
lea
sub
add
jmp
nop
mov
ret
data16
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
sub
add
mov
pop
jne
ja
and
mov
mov
and
mov
aaa
inc
hlt
pop
test
push
sub
inc
and
push
(bad)
mov
push
jl
and
adc
mov
(bad)
lods
cwde
cwde
jg
mov
inc
mov
in
stos
dec
fadd
push
inc
fdiv
jle
ja
add
loopne
mov
repz
mov
cmps
inc
cwde
inc
or
add
jmp
mov
sub
ja
and
jg
jmp
aaa
inc
hlt
xor
mov
sti
adc
add
ror
es
popf
inc
or
jg
or
and
sub
rol
pop
(bad)
fild
add
mov
mov
in
test
mov
jl
add
xchg
ja
loopne
aaa
xchg
pop
adc
rcr
inc
ins
sub
(bad)
jle
nop
cmp
rol
adc
and
psubb
add
pop
movs
adc
inc
enter
and
cwde
test
adc
add
movs
inc
test
inc
and
mov
mov
pop
pop
jmp
sbb
push
add
cmps
xor
and
nop
add
mov
and
sub
xlat
inc
jg
and
out
add
ror
test
mov
adc
jp
jle
add
hlt
inc
jp
sub
mov
unpcklps
mov
add
aam
retf
inc
les
mov
retf
add
add
xor
add
aad
jg
scas
xchg
or
and
lahf
push
inc
xchg
add
jmp
mov
sub
mov
and
test
add
add
jmp
(bad)
hlt
fisubr
jb
mov
mov
mov
cmp
js
push
or
std
add
(bad)
mov
add
add
inc
and
aam
loopne
cmp
inc
and
push
add
inc
shl
cmp
sar
jecxz
lods
into
stos
in
mov
cld
mov
push
pop
je
fist
push
push
prefetch
or
push
jmp
cmp
cld
push
cmp
mov
stos
int
xlat
mov
mov
mov
shl
push
mov
or
shl
jmp
and
and
push
inc
sbb
xchg
add
xchg
pop
or
(bad)
scas
mov
dec
inc
and
std
adc
add
add
rol
mov
pop
(bad)
jnp
add
inc
and
cmps
inc
and
pop
aam
loopne
ins
adc
jecxz
movs
xchg
fisubr
adc
mov
pop
inc
pop
or
dec
or
ret
or
in
mov
and
mov
pop
cmp
pop
jmp
xchg
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sahf
mov
jne
add
popa
nop
mov
mov
ficomp
mov
push
xchg
cmps
inc
mov
and
jg
jmp
push
lods
and
jl
inc
movs
lods
sbb
psubb
dec
mov
add
push
ret
repnz
mov
(bad)
adc
push
pop
jmp
mov
sub
mov
out
femms
fild
add
add
mov
or
xchg
mov
and
aad
add
add
jmp
mov
mov
add
and
mov
add
test
jg
ret
sbb
add
ffree
inc
and
outs
rep
and
nop
mov
out
clc
push
cli
sub
sub
mov
and
jmp
and
push
pop
(bad)
sti
ins
add
mov
lea
mov
mov
push
mov
push
push
push
and
add
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
inc
jmp
rol
add
add
mov
mov
and
sti
inc
add
sbb
cmps
fld
cmp
mov
inc
(bad)
cdq
sbb
jmp
icebp
pop
add
cmp
popa
and
adc
rcl
retf
(bad)
and
test
mov
or
loopne
pop
sub
cmps
scas
and
setl
jb
add
mov
test
or
(bad)
xor
adc
or
adc
btr
inc
add
sub
and
js
pop
jae
iret
mov
pcmpeqd
int
jmp
pusha
pop
and
xor
mov
sub
cmps
inc
add
sub
and
sub
fild
test
add
add
scas
and
sub
mov
and
jg
aad
add
mov
sub
mov
and
movntq
add
push
jmp
mov
sub
mov
or
in
cmp
add
and
sub
add
in
add
int
inc
or
enter
inc
and
xor
stos
add
add
sub
fstp
mov
ret
add
add
inc
add
pop
addr16
and
or
xchg
inc
mov
fisttp
add
push
push
rcl
aad
cdq
inc
and
jg
stos
add
pop
in
mov
sbb
test
fisttp
test
stc
push
stc
or
sub
mov
movq
sbb
in
cmp
and
sub
sub
(bad)
addr16
mov
add
add
and
sub
retf
and
test
fnstcw
and
add
rcr
mov
and
je
jmp
icebp
inc
or
in
inc
and
je
push
mov
stc
jecxz
pop
je
jo
push
push
or
ret
add
cs
add
add
out
inc
pop
lods
js
pop
dec
pop
pop
mov
add
js
push
add
sar
jmp
adc
stos
mov
pop
add
add
dec
mov
dec
mov
or
test
inc
add
mov
sub
jo
xor
je
xchg
add
jmp
xchg
inc
and
jno
mov
add
test
inc
or
add
jecxz
and
sub
mov
je
jmp
add
inc
sbb
aam
ror
inc
add
mov
cmp
unpckhps
and
inc
mul
jmp
sbb
inc
enter
dec
inc
cmp
(bad)
sbb
hlt
xchg
fisttp
ret
inc
mov
add
add
sbb
cmp
mov
mov
mov
psllw
mov
and
ss
cmovne
stc
scas
add
xchg
add
jmp
mov
mov
adc
cmp
inc
hlt
cmp
in
rol
dec
mov
jle
inc
cmps
push
mov
pop
es
mov
mov
and
movsx
jns
add
add
and
or
test
adc
jp
jmp
mov
add
mov
bound
add
(bad)
push
pop
or
pushf
xor
xchg
sbb
stos
ins
xchg
xor
and
jmp
cli
pop
aas
sbb
and
add
or
or
add
cdq
popf
add
cmp
mov
add
sub
add
dec
jle
mov
add
int
or
add
loop
and
dec
inc
add
inc
and
mov
je
jmp
mov
lea
pop
ret
mov
aad
and
and
dec
add
add
inc
and
mov
add
loope
pop
add
add
xor
int
cs
mov
test
pop
in
add
js
js
mov
sti
(bad)
jmp
data16
mov
ret
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outs
fwait
adc
cmc
adc
push
add
add
and
mov
ret
inc
mov
fild
adc
inc
and
mov
push
(bad)
popw
xor
(bad)
jmp
test
add
push
rcl
sub
sub
(bad)
push
in
add
add
(bad)
mov
jle
mov
popa
mov
cmps
test
fsubr
add
inc
shr
adc
test
punpckldq
inc
add
add
cmp
push
imul
mov
inc
and
or
sbb
add
add
in
inc
and
sub
mov
(bad)
into
les
add
dec
pop
jmp
and
sub
push
add
js
add
repz
pop
clc
lock
dec
add
add
push
add
retf
adc
sub
mov
push
xor
add
clc
inc
and
sub
mov
rcl
cmp
or
add
rol
add
inc
mov
jno
je
jmp
mov
sub
out
and
popa
test
test
jmp
jnp
in
fimul
mov
mov
and
cmp
(bad)
shl
xor
mov
inc
and
ficomp
add
dec
mov
pop
add
xor
stc
mov
xchg
cli
mov
add
add
retf
mov
sbb
cmp
cmovnp
dec
bswap
xor
dec
add
inc
fidivr
and
movzx
inc
mov
mov
clc
in
dec
jb
test
adc
sbb
adc
add
mov
add
mov
and
mov
jmp
lea
pop
pop
xor
ret
jmp
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
sub
push
or
test
xchg
add
add
aam
mov
ins
test
test
mov
add
mov
add
movs
adc
daa
jns
pop
aam
add
inc
in
int
outs
add
inc
or
inc
in
fisttp
jg
(bad)
dec
mov
sub
mov
ins
mov
cmovg
sub
sub
add
and
sub
ret
fs
scas
pop
aam
add
and
loopne
das
mov
and
ss
fiadd
add
dec
add
stos
ins
data16
mov
pop
punpcklbw
int
imul
jge
ins
mov
lidtd
pop
add
inc
test
out
add
shl
push
mul
sub
add
add
inc
arpl
or
cmovns
add
sub
add
in
mov
sub
push
inc
outs
imul
pop
cmp
mov
std
jl
mov
or
and
add
fs
invd
mov
and
js
add
cmps
inc
and
adc
fld
inc
stos
xchg
xor
xor
and
adc
inc
mov
fld
add
add
fs
outs
jge
and
add
movs
fimul
xor
add
jmp
mov
sub
inc
in
push
push
int
outs
jmp
outs
inc
and
mov
inc
and
je
mov
cmp
mov
mov
jmp
xchg
mov
jl
je
movs
movs
add
xchg
aam
loope
mov
add
inc
pop
aam
inc
retf
mov
out
int3
add
mov
xchg
int3
inc
jp
outs
xchg
and
cmps
adc
cmovne
lmsw
in
pop
aam
out
rol
mov
lea
mov
xor
add
in
(bad)
loope
sbb
mov
mov
sub
mov
add
mov
pop
xchg
retf
push
add
add
add
mov
(bad)
push
movs
movs
mov
push
inc
outs
add
xchg
inc
pop
aam
push
and
mov
and
inc
and
mov
and
jg
sbb
add
sub
and
pushf
add
call
mov
add
add
aam
arpl
mov
add
inc
xchg
dec
bound
cmp
outs
adc
push
jg
mov
lock
and
xchg
nop
and
sub
loop
dec
xchg
and
iret
outs
mul
movs
add
mov
dec
and
(bad)
out
cmps
add
retf
shr
adc
iret
sub
scas
cmp
mov
add
and
ss
mov
add
test
jecxz
add
mov
and
rol
or
inc
outs
adc
pop
loop
push
dec
enter
xchg
inc
and
in
add
movs
sub
push
xor
cmp
add
ror
or
pop
lock
out
repz
mov
mov
jo
sub
movs
movs
mov
push
inc
outs
push
nop
pop
pop
add
lea
pop
ret
mov
or
bound
push
fld
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
call
call
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
jg
jmp
call
sub
call
jg
jmp
mov
sub
call
jg
jmp
mov
add
mov
jg
jmp
mov
add
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
call
mov
mov
jmp
mov
jmp
mov
call
mov
mov
call
mov
call
sub
mov
call
jmp
call
add
pop
pop
ret
mov
mov
mov
jmp
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
call
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
call
call
sub
mov
mov
add
call
je
jmp
jmp
add
pop
ret
jmp
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
loope
sub
in
xor
popf
xchg
add
add
rcl
and
add
add
mov
push
and
mov
adc
lea
stos
dec
mov
fcom
or
hlt
pop
pop
push
sub
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
out
xor
out
aam
and
sub
add
nop
rol
xchg
mov
popa
push
dec
jl
test
pop
out
sbb
sbb
add
movs
int3
ret
jle
add
add
test
mov
out
jmp
and
out
aam
jg
jmp
nop
test
sbb
rol
mov
test
xchg
add
and
add
inc
xor
and
add
aam
stc
js
jns
lods
cwde
jl
xchg
or
add
add
and
add
mov
inc
and
je
mov
mov
call
shl
test
add
add
add
inc
push
lahf
inc
lock
setns
add
sbb
in
add
mov
rol
mov
and
jg
jmp
fild
and
xchg
outs
and
cwde
test
add
push
add
add
add
sub
mov
and
movntq
push
add
push
add
add
xchg
call
pop
movs
xor
mov
out
out
inc
push
push
test
push
out
add
outs
inc
cmp
enter
jmp
dec
pop
cmc
sbb
mov
pop
cmps
test
inc
push
add
mov
sub
outs
inc
and
adc
add
sbb
add
sub
sbb
and
rol
sub
in
lods
and
je
jmp
pop
bound
add
add
xchg
jb
xor
pop
mov
add
jmp
arpl
sub
mov
(bad)
rol
add
mov
add
ins
test
call
mov
push
mov
in
fimul
jmp
pop
loopne
fs
ror
xor
test
out
add
cmp
arpl
aas
cmps
add
sub
retf
inc
aam
es
add
test
push
add
push
push
test
(bad)
add
loopne
add
and
add
push
ret
int3
fimul
xor
sbb
sub
adc
sbb
and
add
call
data16
push
jl
out
hlt
adc
call
sbb
adc
sar
pop
pop
int
and
sbb
into
add
add
add
aam
mov
imul
xchg
outs
and
cwde
inc
enter
jmp
mov
and
add
loop
inc
dec
and
(bad)
ss
out
add
aam
add
ins
test
fs
mov
mov
mov
and
cwde
test
add
call
dec
mov
add
add
popa
xchg
and
adc
mov
add
add
and
xchg
add
sub
mov
cvtps2pi
cmp
out
aam
test
mov
adc
or
jecxz
xchg
add
add
ins
lea
xlat
in
pusha
pop
mov
jp
sub
rcr
inc
add
mov
pop
loopne
ret
add
std
sbb
cwde
xchg
add
sub
mov
je
jmp
jmp
lea
mov
pop
pop
pusha
add
cdq
scas
mov
invlpg
setne
mov
xor
and
or
out
repz
or
and
mov
mov
add
inc
fisttp
add
cmp
mov
popa
test
mov
add
dec
pop
add
call
mov
out
ins
and
inc
push
mov
jae
lock
xlat
lods
aad
or
and
xchg
add
jmp
mov
add
pop
add
pop
add
ret
inc
pop
test
cdq
int3
nop
add
add
add
add
add
and
push
add
rol
xor
adc
out
sbb
add
rol
(bad)
adc
add
cmp
call
xchg
xor
retf
xchg
cmp
add
setae
push
or
add
mov
cli
js
mov
aam
jmp
mov
mov
inc
add
add
dec
add
add
add
add
and
add
push
add
add
push
popa
add
push
add
pop
add
add
add
inc
ror
xchg
jmp
arpl
loope
xchg
int3
jmp
add
mov
call
pop
inc
add
sub
sahf
in
in
jnp
and
add
sub
mov
add
mov
add
fs
jmp
mov
jmp
pop
inc
sub
pop
adc
add
shl
push
call
js
pop
pop
mov
jg
add
mov
mov
and
add
mov
ins
and
add
sbb
add
nop
add
add
in
jmp
data16
add
dec
add
adc
loop
sub
mov
push
test
ret
retf
inc
or
scas
test
add
add
sub
lahf
push
out
sbb
data16
mov
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jns
xchg
add
add
and
mov
fiadd
hlt
add
add
mov
add
jne
cmc
cdq
stos
je
sub
and
mov
pusha
rcl
mov
and
mov
inc
and
mov
mov
mov
jl
add
(bad)
(bad)
sub
and
pop
add
add
call
or
inc
inc
and
mov
cli
inc
and
mov
and
inc
jecxz
fimul
cmp
dec
mov
and
sub
add
jae
add
inc
cdq
push
jecxz
xchg
sbb
dec
test
add
inc
and
add
lods
mov
dec
jnp
mov
add
add
jmp
jp
and
jg
jmp
xchg
pusha
rcl
gs
or
jg
jmp
mov
ins
or
mov
(bad)
sbb
add
add
mov
mov
mov
xor
jmp
mov
mov
pop
and
sub
and
add
inc
push
push
sub
xor
push
xor
xchg
sub
out
xchg
pushf
dec
add
rol
les
and
(bad)
mov
mov
add
sub
mov
ja
add
add
(bad)
and
and
test
jno
jne
cmc
add
je
inc
andps
mov
adc
sbb
mov
ffreep
(bad)
inc
xchg
sbb
cmp
add
add
mov
cmp
cmp
cmc
add
jmp
jmp
mov
int3
mov
jmp
sub
inc
es
push
add
(bad)
pusha
shl
(bad)
aaa
cmps
sub
daa
sub
inc
add
add
ins
mov
add
add
jmp
add
inc
sub
add
mov
std
shl
push
(bad)
repz
dec
sub
inc
rcr
cmp
cmp
mov
inc
inc
lds
lahf
mov
mov
(bad)
lock
mov
fs
dec
and
call
pushf
pop
add
add
dec
and
repnz
int
dec
dec
ror
inc
test
add
nop
(bad)
lea
sbb
add
add
ss
jae
add
add
add
mov
mov
clc
cmp
cmovne
mov
and
lock
and
jmp
jl
inc
and
mov
xchg
add
mov
sbb
add
dec
and
xor
bnd
cwde
ins
add
mov
shr
sbb
add
mov
(bad)
cld
and
mov
hlt
jmp
xor
dec
cmp
stc
inc
mov
(bad)
pushf
cmps
aas
call
mov
xchg
push
and
movs
xchg
add
ret
mov
jl
pop
call
call
mov
inc
das
(bad)
out
add
sub
jg
add
int
cdq
push
aam
je
jo
push
mov
and
jne
add
cmp
inc
xor
jmp
and
lea
iret
inc
jmp
mov
hlt
stos
xchg
pop
pop
ret
mov
mov
push
je
push
xchg
fucom
movs
add
mov
setno
sub
outs
sub
loop
jp
dec
outs
jmp
clc
iret
push
pusha
xor
lods
jmp
dec
add
stc
jmpw
cmp
mov
pop
or
jns
xor
jmp
mov
mov
push
(bad)
push
xchg
pusha
adc
sahf
dec
add
sub
xor
add
and
call
nop
push
sbb
add
add
xor
mov
sub
mov
and
ss
jmp
(bad)
xor
add
add
and
pop
pop
mov
lock
sti
(bad)
call
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
push
mov
xor
cmp
pop
cmovne
mov
jmp
call
mov
mov
jmp
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
cmovae
mov
jmp
mov
mov
mov
call
mov
mov
lea
call
mov
mov
mov
call
sub
mov
mov
push
mov
xor
cmp
pop
cmovne
mov
jmp
mov
mov
mov
mov
lea
call
mov
mov
mov
call
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
lea
call
mov
call
call
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
mov
lea
mov
mov
call
sub
pushf
mov
xor
popf
mov
mov
cmp
cmovne
mov
jmp
lea
mov
movzx
mov
mov
add
sub
sub
sub
add
add
sub
add
add
call
shl
add
movzx
mov
mov
mov
mov
shl
add
add
call
add
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
sub
add
add
add
add
add
sub
add
call
shl
add
movzx
mov
mov
mov
mov
shl
add
sub
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
pushf
mov
add
popf
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
pushf
add
popf
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
call
call
call
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
mov
mov
mov
call
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
call
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
mov
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
push
mov
push
push
push
add
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
call
call
sub
mov
mov
mov
call
call
mov
mov
add
mov
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
call
jg
jmp
call
sub
call
jg
jmp
mov
sub
call
jg
jmp
mov
add
call
jg
jmp
mov
sub
mov
jg
jmp
mov
add
call
je
jmp
call
add
mov
jg
jmp
call
add
mov
je
jmp
call
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
add
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
add
call
je
jmp
call
sub
call
jg
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
call
cmp
cmove
mov
jmp
mov
jmp
call
mov
mov
mov
mov
call
mov
call
mov
call
sub
mov
mov
mov
cmp
cmove
call
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
call
call
call
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
pushf
xor
popf
mov
cmp
cmove
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
call
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
add
sub
add
call
call
sub
sub
call
add
add
add
add
sub
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
sub
sub
mov
sub
mov
sub
add
mov
sub
sub
sub
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
call
jmp
mov
call
jmp
mov
mov
mov
mov
mov
call
add
sub
add
mov
sub
mov
sub
add
mov
sub
add
sub
add
sub
sub
add
sub
sub
add
add
sub
add
mov
sub
sub
sub
add
add
add
sub
sub
sub
mov
mov
mov
mov
mov
call
mov
mov
call
jmp
call
jmp
mov
jmp
mov
mov
cmp
cmovne
call
jmp
mov
mov
jmp
call
mov
mov
mov
call
call
sub
mov
mov
mov
jmp
call
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
call
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
call
call
mov
mov
call
sub
mov
mov
jmp
mov
mov
pushf
mov
xor
popf
mov
mov
pushf
xor
add
sub
popf
mov
call
call
mov
mov
mov
mov
sub
sub
add
add
sub
sub
mov
sub
mov
sub
add
mov
sub
mov
sub
sub
add
sub
sub
mov
mov
sub
add
add
sub
add
sub
add
sub
sub
mov
add
mov
mov
sub
sub
add
mov
sub
add
sub
sub
mov
add
sub
add
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
push
mov
push
push
push
sub
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
lea
call
call
call
call
mov
mov
lea
call
mov
call
call
call
mov
lea
call
mov
call
call
call
mov
lea
mov
call
mov
call
mov
mov
lea
mov
mov
call
call
mov
mov
lea
mov
mov
mov
call
call
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
call
mov
mov
mov
call
call
mov
call
mov
mov
mov
call
mov
mov
call
call
sub
inc
mov
call
mov
mov
mov
call
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
call
mov
call
call
imul
mov
call
mov
mov
mov
sub
call
call
jg
jmp
call
add
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
call
jg
jmp
call
sub
call
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
call
je
jmp
call
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
call
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
call
call
mov
call
mov
lea
call
call
call
mov
mov
mov
mov
call
call
mov
call
mov
sub
mov
mov
shl
add
mov
mov
mov
mov
call
call
lea
mov
mov
sub
sub
call
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
call
mov
jmp
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
pushf
sub
popf
mov
lea
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
lea
mov
mov
call
call
call
mov
lea
mov
call
mov
mov
mov
mov
call
call
lea
mov
mov
call
mov
lea
sub
mov
call
shl
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
call
jmp
mov
call
jmp
mov
cmp
sete
and
mov
mov
jmp
pushf
mov
sub
popf
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
call
mov
call
call
sub
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
call
lea
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
lea
mov
call
call
mov
mov
mov
call
sub
mov
call
mov
call
mov
mov
call
lea
call
mov
mov
call
mov
mov
call
sub
call
mov
call
call
mov
mov
lea
mov
mov
mov
call
mov
call
call
sub
call
call
mov
call
mov
call
lea
call
mov
call
mov
mov
call
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
call
call
sub
mov
call
mov
call
and
mov
lea
call
mov
call
call
call
mov
call
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
call
call
and
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
call
mov
inc
mov
mov
mov
lea
call
call
and
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movzx
call
call
movzx
mov
mov
mov
lea
inc
mov
call
call
mov
call
lea
mov
call
mov
mov
call
mov
mov
call
call
sub
mov
mov
xor
mov
mov
call
mov
mov
mov
mov
mov
call
sub
lea
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
call
mov
call
mov
call
mov
call
call
call
sub
call
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
call
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
mov
mov
call
sub
mov
call
mov
mov
mov
call
mov
call
sub
mov
call
call
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
call
call
sub
call
call
call
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
call
sub
mov
call
mov
mov
mov
mov
mov
call
sub
call
mov
call
mov
call
mov
mov
call
sub
call
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
mov
call
call
sub
call
mov
mov
mov
mov
mov
call
call
sub
call
call
lea
mov
xor
mov
mov
mov
div
mov
call
mov
movzx
mov
call
movzx
call
mov
mov
movzx
mov
call
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
call
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
call
lea
mov
lea
mov
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
mov
movzx
mov
call
mov
add
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
call
sub
mov
mov
call
mov
mov
mov
mov
mov
call
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
call
mov
call
mov
call
mov
call
sub
lea
call
mov
call
mov
call
call
mov
call
mov
call
sub
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
call
mov
mov
mov
mov
call
call
sub
mov
call
call
mov
call
call
call
call
sub
lea
call
movzx
mov
mov
call
movzx
mov
mov
call
call
shl
add
add
mov
sub
call
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
call
call
sub
lea
mov
mov
mov
mov
mov
mov
call
mov
call
sub
call
call
call
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
call
mov
mov
mov
mov
call
sub
call
call
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
call
mov
mov
call
sub
mov
mov
call
mov
mov
call
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
call
mov
call
call
call
call
sub
call
mov
mov
mov
call
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
call
sub
call
mov
call
mov
mov
mov
call
call
sub
mov
mov
mov
mov
call
call
add
pop
pop
pop
pop
ret
mov
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
jne
rcl
or
shr
and
xor
rcl
sbb
shl
add
inc
dec
fisubr
jmp
mov
xor
dec
iret
ficom
pop
aas
push
sbb
bound
pop
sub
push
ins
inc
jp
cmp
xor
out
stos
cli
jne
cmp
out
push
gs
out
push
mov
stos
jge
es
shl
push
pop
or
sub
pop
(bad)
dec
cmps
xchg
inc
sub
sub
push
sub
mov
cmps
pop
int3
das
pop
sub
iret
inc
mov
dec
popa
xchg
pop
sti
jo
sub
std
mov
xchg
add
sub
xchg
mov
mov
mov
pop
jg
inc
adc
test
pop
gs
add
daa
js
dec
pop
push
mov
cli
pop
sti
mov
ror
xor
or
(bad)
mov
out
or
arpl
arpl
and
fsubr
dec
retf
dec
mov
pop
lock
retf
test
(bad)
sbb
mov
pop
aad
popa
sbb
mov
xor
lock
jne
lods
cmp
mov
push
sub
and
popa
mov
(bad)
mov
mov
jmp
sbb
mov
xor
add
lods
enter
xor
js
cmps
mov
inc
js
jb
push
and
outs
mov
imul
cld
push
dec
aam
(bad)
mov
mov
and
mov
inc
aam
cld
pusha
imul
or
mov
ret
jmp
cmps
loop
xor
imul
in
inc
in
das
inc
jae
and
ficomp
pop
push
dec
sub
push
sbb
adc
aad
xor
mov
scas
mov
popa
mov
pop
idiv
hlt
ins
gs
and
jle
pop
sbb
mov
rcr
cld
sub
bound
inc
cmp
ins
dec
call
mov
shl
jno
dec
daa
push
je
mov
(bad)
fiadd
dec
jb
bound
xor
fwait
mov
bound
hlt
xchg
scas
pop
loopne
leave
sub
xchg
outs
push
out
sti
xchg
arpl
lds
(bad)
loopne
jb
dec
aas
jnp
mov
dec
lods
sbb
jmp
retf
cmp
mov
lea
les
xor
ss
jne
fs
pop
icebp
mov
shr
cmp
ss
jnp
push
sub
outs
jmp
dec
aam
xchg
arpl
dec
daa
cmps
inc
pop
mov
(bad)
mov
mov
movs
sub
outs
mov
shl
mov
sbb
xor
pop
nop
je
jl
ins
not
mov
and
cdq
inc
pop
xchg
shl
pop
adc
sub
fdivp
pop
(bad)
jne
js
xor
xchg
sub
fidivr
(bad)
push
nop
push
stc
dec
xchg
push
lea
inc
add
in
cmp
mov
cs
fs
lea
imul
mov
imul
icebp
and
imul
add
adc
fstp
test
aas
cmps
add
add
std
pop
xor
repz
mov
stc
outs
js
mov
sbb
cld
aas
bound
lock
push
jns
shl
out
mov
add
push
and
push
jmp
out
test
gs
repnz
add
cmp
rol
mov
jg
xchg
mov
push
and
int
test
sub
shr
push
(bad)
iret
in
push
movs
cli
or
mov
pop
(bad)
sar
scas
ret
push
fdiv
inc
xor
mov
sub
repz
xchg
stos
shl
xchg
and
xchg
pushf
pop
idiv
ss
jno
shl
mov
mov
sbb
in
dec
or
js
fnstcw
(bad)
jmp
out
mov
push
xchg
pusha
dec
ret
mov
std
cmps
(bad)
fisttp
les
ret
inc
mov
push
mov
cli
xor
fdiv
sbb
cmp
jo
retf
xor
dec
in
inc
imul
(bad)
mov
jmp
outs
arpl
adc
sbb
jl
push
fwait
movs
sub
mov
jnp
cmp
mov
jmp
clc
mov
sbb
std
int3
ins
mov
test
pop
mov
inc
sub
adc
pop
ins
inc
pop
and
leave
jae
push
shl
mov
mov
in
push
shl
jb
dec
mov
je
out
test
add
dec
cmp
movs
outs
addr16
out
into
loopne
pusha
mov
std
cli
jmp
repz
pop
bound
scas
fwait
sbb
and
jnp
sbb
leave
hlt
mov
mov
ret
inc
neg
mov
push
scas
pop
add
xchg
fidivr
stos
aaa
and
or
inc
push
xchg
ja
adc
mov
mov
jb
pop
dec
aas
lea
jg
ds
sub
mov
mov
ret
leave
lea
and
movs
sub
push
aas
rol
dec
gs
(bad)
and
jns
rcl
ss
inc
sub
mov
inc
pop
fmul
jbe
dec
dec
xchg
push
push
outs
push
call
push
jo
xchg
mov
lock
icebp
aas
cmp
sti
inc
imul
retf
xchg
call
mov
dec
mov
mov
sbb
and
loope
mov
push
rcl
jp
mov
popf
test
cmps
xchg
xor
sub
add
mov
mov
retf
pop
sahf
sti
or
out
inc
popa
test
arpl
(bad)
push
mov
inc
push
add
dec
xchg
mov
imul
jmp
and
repz
mov
enter
inc
rol
jle
sub
ja
xor
jmp
out
inc
(bad)
mov
mov
push
adc
(bad)
cmc
ficom
push
jnp
cmp
cdq
test
xchg
push
adc
mov
out
sti
jp
inc
enter
adc
sti
in
add
in
das
jo
ds
adc
cmp
leave
ins
xchg
mov
jle
mov
es
bound
dec
out
xchg
pop
cmps
aaa
push
jp
aam
mov
inc
retf
movs
cmps
dec
repz
or
jecxz
sub
mov
mov
cmp
mov
in
push
js
cdq
mov
mov
xchg
nop
pop
mov
leave
cdq
stos
movs
pop
inc
mov
adc
pushf
imul
push
jne
(bad)
jmp
xor
popa
sti
mov
call
scas
inc
fiadd
jp
dec
jge
pop
call
adc
xor
push
fistp
xor
out
ja
rcl
and
ins
in
push
fdiv
lods
repz
jmp
jl
mov
lock
push
mov
jle
frstor
sub
push
data16
push
lods
xlat
fldcw
retf
push
mov
out
aas
jle
(bad)
push
(bad)
and
sbb
(bad)
loopne
mov
jmp
daa
pop
(bad)
and
mov
dec
sub
leave
enter
or
cdq
aad
out
sahf
adc
push
jge
mov
pop
cmp
addr16
xchg
mov
xchg
repz
retf
sbb
xchg
sbb
mov
add
push
sar
mov
sub
sbb
push
ds
bound
sub
xor
pop
lock
pop
fimul
adc
std
dec
add
retf
adc
mov
adc
push
jbe
ins
push
ja
(bad)
sub
es
repnz
pop
add
ja
cmp
mov
jmp
sub
xchg
mov
cmps
add
daa
mov
pop
inc
xchg
jmp
fisttp
jmp
dec
clc
ret
mov
add
scas
xchg
mov
test
mov
(bad)
aas
icebp
inc
clc
inc
pop
push
inc
and
ret
shr
dec
popf
mov
push
inc
mov
fwait
xchg
pop
dec
test
je
std
push
call
xor
popa
pop
and
test
xchg
xor
pop
cmp
or
clc
pop
push
mov
sub
aas
call
test
push
mov
pushf
fsub
dec
gs
ss
sub
fnsave
shl
sbb
popf
adc
inc
push
repz
xchg
rcl
mov
add
push
test
sub
adc
mov
dec
fwait
mov
ins
int3
or
loopne
out
xchg
cmp
sar
jo
in
outs
int
ins
mov
push
jo
(bad)
or
inc
scas
jae
dec
pop
mov
and
test
and
stos
adc
ss
xor
pop
rol
or
fdivp
push
push
rcl
nop
mov
sbb
adc
push
(bad)
xor
push
outs
and
push
dec
mov
call
and
pop
xor
loopne
jp
daa
cmps
test
add
fdivr
data16
mov
movs
or
mov
xor
cmp
sub
inc
inc
pop
adc
inc
xchg
ss
jb
aad
dec
fild
add
push
test
pop
scas
(bad)
jmp
movs
sar
xchg
jnp
jp
and
push
call
cmp
gs
scas
stc
call
jmp
pusha
sbb
pop
push
adc
fisttp
nop
jns
sub
xchg
ret
add
cmp
dec
and
pop
add
fs
mov
mov
adc
or
pop
push
lock
xchg
mov
shr
arpl
xchg
cli
test
test
mul
add
adc
out
jne
mov
jmp
retf
mov
pusha
mov
push
inc
mov
dec
lods
inc
adc
adc
repnz
test
pushf
xchg
push
daa
push
sub
retf
or
cmps
or
adc
push
adc
ins
jbe
pop
add
rcl
sbb
xchg
xor
jnp
sub
sahf
hlt
pop
sahf
add
cmc
aam
movs
movs
test
or
sub
mov
xchg
shl
fs
div
repnz
jns
push
aam
div
inc
push
loop
ins
mov
pop
inc
or
pop
mov
ss
imul
popa
popa
dec
arpl
retf
pop
daa
pusha
clc
aam
movs
and
sub
pop
sbb
cs
push
imul
push
xchg
pop
leave
in
adc
leave
cmp
retf
inc
pop
scas
mov
mov
cmp
cld
addr16
push
ins
stos
jnp
in
ins
sbb
ss
xor
push
sub
xchg
mov
loope
fs
cmp
push
mov
je
adc
pop
xchg
pop
xchg
movs
dec
lock
add
jbe
leave
cmp
push
mov
ja
adc
pop
out
pop
jge
test
jp
xor
je
imul
sbb
into
das
cmp
test
inc
push
jnp
cld
sub
jo
push
jbe
inc
bound
test
pop
xchg
xchg
mov
sub
daa
lock
pop
neg
mov
outs
jle
hlt
add
push
push
rol
mov
dec
aad
repz
sub
rol
rdtsc
push
int
sub
push
sbb
cmp
into
pushf
cdq
push
movs
addr16
dec
mov
xchg
cli
imul
test
xchg
cmp
cmp
xlat
push
and
xor
push
mov
pop
mov
xor
sbb
fsubr
lea
jae
jle
in
jne
inc
nop
inc
test
mov
push
or
inc
arpl
call
shr
mov
pop
fadd
push
cdq
adc
xchg
pop
xchg
cld
xchg
jae
cmps
movs
mov
sub
and
test
fnsave
inc
retf
or
jecxz
sub
and
ins
ja
adc
pop
shr
fs
sub
push
mov
sub
ins
fnstsw
xchg
jb
pop
sub
int3
stos
retf
ds
in
loop
and
xchg
mov
fiadd
pushf
or
inc
inc
es
sbb
sub
fldcw
fwait
test
aaa
out
and
jbe
repz
cmc
fdiv
retf
sub
xchg
pop
sub
inc
push
mov
push
lods
push
xor
inc
jl
mov
nop
xor
shr
mov
add
jge
cwde
(bad)
pusha
loop
movs
sbb
leave
cdq
aam
pop
fst
rcl
out
mov
jle
repnz
sub
shl
mov
mov
inc
mov
push
jne
gs
stos
dec
cmps
mov
jnp
js
jbe
sbb
pop
pop
std
dec
dec
xor
push
jno
add
sahf
fmul
mov
xchg
jmp
sub
adc
xchg
xchg
push
jmp
jo
loopne
cmp
popf
sub
sub
mov
addr16
stos
jo
and
cmp
outs
adc
mov
loope
dec
mov
xlat
and
loope
(bad)
adc
fidivr
sahf
stos
iret
pop
fnsave
movs
ins
sbb
inc
add
jecxz
sbb
mov
push
lea
mov
loopne
and
or
pop
jecxz
in
cmp
pop
(bad)
ins
out
(bad)
dec
sbb
(bad)
out
in
aad
shr
nop
cmp
aaa
out
cld
adc
scas
cld
push
arpl
icebp
lods
jae
shr
test
mov
mov
add
and
cli
test
adc
lods
dec
scas
jmp
clc
inc
mov
mov
sub
inc
xchg
nop
add
icebp
shr
inc
jo
(bad)
jmp
fs
mov
out
mov
not
in
test
fistp
pop
push
sar
gs
add
fld
mov
ret
inc
jl
jg
add
outs
jmp
(bad)
aad
xlat
in
mov
stc
sbb
push
mov
push
inc
xor
aas
shl
pop
stos
xor
lock
in
xchg
stc
retf
jo
sub
movs
sub
aad
or
pop
(bad)
mov
icebp
pop
popa
mov
jp
or
sbb
clc
push
fild
mov
cdq
dec
mov
aam
pop
push
pop
scas
jl
inc
dec
ret
cld
loop
clc
xchg
nop
dec
pop
fild
ins
pop
adc
xchg
fwait
cmp
and
stos
add
and
idiv
es
push
les
(bad)
nop
cmp
xor
test
stc
pop
xchg
jbe
rcl
adc
cmc
dec
das
in
jmp
in
mov
adc
pop
jmp
jle
test
test
mov
js
pop
pop
dec
in
add
sub
pop
mov
mov
das
xchg
fnstsw
or
rol
lock
outs
jecxz
fistp
(bad)
jl
dec
ror
(bad)
pop
test
pop
dec
cmp
cmp
push
pop
cmc
clc
popf
jle
sahf
mov
or
pusha
cmp
cdq
push
scas
(bad)
stos
cmp
shl
rcr
mov
in
pushf
arpl
xor
jg
mov
mov
add
mov
mov
cwde
ja
jl
dec
out
xor
fistp
mov
push
ficomp
adc
neg
dec
ror
sbb
mov
test
scas
jns
push
popf
push
cmp
cdq
add
leave
js
ret
(bad)
cli
add
inc
xchg
add
pop
jnp
call
imul
stc
push
jno
adc
test
or
xor
mov
jmp
out
and
pop
hlt
mov
push
push
dec
xor
xor
aam
push
loope
lods
inc
fnstsw
movs
ror
cld
mov
mov
adc
and
pusha
sub
cli
xor
aaa
mov
pminsw
cmc
jbe
ficom
aas
and
or
mov
push
dec
test
sub
ins
rcr
add
scas
shr
jo
xor
push
jns
lock
dec
cmp
add
mov
sbb
cld
pushf
addr16
and
fptan
ror
xor
fmul
loope
pop
out
cmc
pop
nop
sbb
les
and
inc
jg
inc
adc
push
push
enter
daa
xchg
mov
dec
sub
mov
jl
sbb
shl
push
sub
push
mov
cmp
aas
xor
xchg
imul
sub
test
out
jbe
push
mov
out
lods
daa
adc
mov
mov
inc
push
icebp
xchg
jnp
aaa
ins
pop
mov
jmp
pop
aad
ins
push
in
dec
or
pop
fmul
and
or
sub
pop
pusha
inc
fisubr
push
pusha
sbb
out
xor
jns
call
sbb
jno
iret
push
out
xor
pop
mov
mov
xor
fimul
or
test
adc
inc
fchs
stos
test
dec
scas
cmp
inc
mov
je
fld
mov
in
mov
aad
sbb
xchg
js
pop
imul
icebp
or
into
push
movs
(bad)
jmp
xchg
loop
ror
xor
and
scas
cmp
(bad)
mov
jne
mov
add
xchg
sar
push
fnsave
sub
outs
mov
adc
mov
out
xor
std
es
inc
repnz
imul
aas
aaa
xor
in
ins
mov
dec
push
into
push
and
push
pushf
push
xor
ret
ss
inc
rol
popa
int3
sahf
shr
sub
arpl
mov
call
push
retf
adc
aaa
rcr
iret
pop
xor
cmp
push
pusha
inc
ins
stos
addr16
jp
das
mov
(bad)
mov
mov
ficomp
out
push
mov
add
das
repz
enter
cmp
lock
adc
pusha
cld
xchg
jmp
popa
or
repz
inc
mov
pop
xor
cwde
scas
arpl
mov
sub
fwait
addr16
imul
pop
mov
jl
stos
push
jge
cs
xor
subps
sub
pop
shr
pop
and
cs
xchg
xor
fstp
js
stos
mov
arpl
retf
adc
cmp
pop
cdq
or
or
jns
jmp
out
pop
add
movs
add
std
inc
aaa
sub
movs
inc
ja
fsub
(bad)
pand
cmp
fcmovnu
mov
inc
fsubr
sbb
xchg
daa
add
enter
jl
dec
movs
jl
inc
aas
inc
scas
cmp
aam
stc
adc
pushf
(bad)
bound
xchg
ret
test
scas
shl
in
out
movs
xchg
iret
sub
out
xor
push
or
dec
cdq
xchg
pop
mov
loop
xlat
or
inc
add
mov
icebp
cmp
ss
into
test
ja
xchg
popa
jb
adc
mov
call
popf
stos
in
sti
mov
jp
jns
test
cmc
pushf
arpl
push
int
adc
adc
jno
mov
lahf
xor
xchg
lods
inc
xchg
or
jnp
fbstp
cmps
add
sbb
pop
add
or
retf
repz
mov
jb
(bad)
in
pop
fsub
lahf
adc
retf
outs
mov
fstp
(bad)
sar
stos
push
out
addr16
aas
mov
test
sar
jecxz
je
iret
test
(bad)
or
cmp
sbb
call
xor
sub
sti
jg
fimul
xor
push
xchg
fs
repnz
das
outs
pop
movs
or
jmp
mov
adc
(bad)
inc
ds
les
cs
adc
(bad)
xor
cmp
test
call
and
cdq
mov
les
cld
mov
push
xlat
xchg
xor
sbb
mov
push
mov
mov
sbb
push
ret
jb
paddq
mov
dec
mov
sbb
pushf
rcr
imul
mov
xor
mov
pop
lock
jle
push
jne
cli
pop
addr16
sbb
pop
cmp
inc
int3
std
or
mov
loope
fisttp
cli
dec
test
mov
lods
outs
and
sar
stos
pop
sub
ffreep
pop
mov
aad
rcr
fadd
ret
xor
jb
xor
push
jbe
xchg
ucomiss
push
push
add
ja
cmps
or
mov
xor
jp
mov
jns
inc
movs
test
or
mov
cs
xor
jp
and
int
and
pop
add
cmove
scas
fs
(bad)
out
dec
pushf
arpl
pop
sbb
mov
pop
xchg
outs
loopne
movs
xchg
sub
mov
cmp
retf
mov
(bad)
push
xchg
sbb
les
adc
gs
fild
mov
push
retf
faddp
les
ret
and
ret
jge
adc
and
mov
int3
sub
into
rcr
outs
hlt
ss
push
loope
adc
in
sub
mov
ret
int
icebp
loope
(bad)
xchg
scas
lock
push
add
fisttp
add
adc
sub
jmp
xchg
push
int
xor
in
gs
fnstsw
or
fmul
iret
xchg
cs
test
lock
push
enter
xor
push
inc
shl
cwde
and
dec
aam
adc
xchg
or
int
mov
mov
add
add
mov
outs
cmp
movs
js
test
icebp
push
mov
repz
(bad)
inc
out
pop
dec
popa
mov
pop
xchg
cs
sbb
jmp
scas
mov
pop
imul
cmp
xor
cmp
xlat
test
movs
dec
aad
repnz
(bad)
addr16
cmp
sub
cmp
(bad)
dec
rol
jo
pushf
mov
dec
fdivr
mov
sbb
arpl
mov
jmp
pop
gs
bound
mov
shl
jg
add
(bad)
dec
fild
fs
dec
jg
mov
push
mov
adc
xchg
mov
and
stos
and
inc
or
jbe
push
add
push
dec
mov
sub
mov
sbb
dec
xchg
mov
lea
aad
pop
sub
ret
retf
out
icebp
sub
cmp
fisttp
scas
sbb
xor
fdiv
xor
retf
mov
jmp
adc
pop
pop
dec
in
jne
mov
cmp
mov
mov
test
sub
xchg
call
and
mov
int
cwde
pop
or
mul
mov
bound
popf
pop
jmp
sub
outs
inc
sub
inc
push
aam
dec
jmp
call
mov
(bad)
mov
sar
dec
stos
imul
daa
mov
or
pop
(bad)
aam
lods
je
xor
das
std
mov
aad
bound
pop
jne
mov
cmp
mov
outs
pop
lea
or
pop
cmp
dec
mov
pop
adc
rcl
(bad)
je
sub
and
out
dec
and
pop
addr16
sbb
mov
jmp
and
dec
sar
lds
inc
cmp
adc
test
adc
push
inc
adc
int3
ror
test
retf
sub
xchg
call
pop
pusha
add
scas
movs
adc
sub
ds
movs
adc
dec
dec
push
scas
test
loope
sbb
xchg
addr16
je
sub
mov
imul
cmps
loop
mov
or
icebp
xchg
and
push
mov
daa
fstp
mov
pop
fidivr
mov
sbb
fisttp
cli
fild
bound
neg
shr
addr16
xchg
in
movs
add
lahf
repnz
and
mov
pop
cmc
adc
aas
mov
sbb
push
idiv
sub
aad
push
xchg
and
xor
mov
pop
out
mov
push
jo
mov
add
sbb
push
jmp
pop
stc
xchg
sub
es
aad
mov
mov
mov
inc
mov
xor
add
cs
fsub
pop
fdivr
dec
sbb
(bad)
or
jp
jbe
dec
adc
clc
fs
sti
imul
cld
jl
mov
jle
fild
cmp
cwde
add
jmp
arpl
mov
mov
sti
sub
inc
lahf
stos
cmp
stc
(bad)
adc
(bad)
mov
inc
sub
xor
push
inc
cmps
fidiv
add
push
mov
inc
jnp
mov
mov
mov
outs
mov
in
add
jecxz
scas
aas
pusha
and
movs
mov
out
push
sbb
aad
test
cmps
sub
xor
or
pop
call
and
pushf
and
add
push
imul
xchg
mov
cmp
adc
pop
outs
sub
into
xchg
jbe
pop
rcl
cld
mov
inc
out
movs
fdivr
push
je
sbb
push
xor
xchg
pushf
xchg
mov
add
jo
pop
arpl
call
sti
jle
push
sysenter
popa
adc
les
das
jg
pop
cmp
jp
mov
popf
cmp
sar
add
jne
cmp
mov
dec
xor
cld
sub
retf
sbb
ret
ret
cld
fiadd
in
test
in
popa
inc
imul
and
add
aaa
inc
adc
adc
jge
jb
idiv
mov
xchg
fstp
sahf
dec
sub
cs
imul
mov
rsqrtps
fucomip
retf
dec
popf
jl
jns
mov
cmp
jb
(bad)
pop
xlat
xchg
mov
not
in
daa
ret
cmp
xlat
sub
dec
or
lea
scas
jmp
movq
retf
cwde
jl
push
mov
(bad)
fisttp
clc
cmp
and
cmc
mov
(bad)
mov
xor
test
cdq
jae
les
push
fdivr
sbb
call
mov
xchg
into
xchg
and
call
push
in
sbb
test
(bad)
mov
arpl
inc
push
jne
push
xchg
in
loop
add
add
mov
fisttp
pop
adc
xchg
inc
xchg
mov
push
pop
cmps
add
pop
mov
sub
mov
sti
mov
in
push
and
xchg
xor
scas
cmp
cld
loopne
leave
xchg
cdq
repz
push
lock
xchg
test
push
push
(bad)
adc
outs
mov
mov
sti
dec
mov
xor
in
adc
adc
xlat
push
pop
sbb
addr16
fadd
aad
mov
call
vpsubw
mov
push
dec
in
pop
ret
mov
lods
sub
inc
add
dec
xchg
(bad)
pushf
mov
(bad)
adc
std
xchg
push
dec
ficom
imul
sahf
aaa
in
inc
lods
ins
dec
mov
jnp
pop
fdiv
pushf
or
xchg
jle
out
xor
leave
ffreep
les
add
nop
pusha
and
lea
push
adc
sbb
aam
mov
inc
inc
fcomp
inc
cli
lods
leave
(bad)
or
pop
dec
mov
dec
retf
test
or
cdq
adc
aam
mov
xchg
aas
adc
dec
push
mov
mov
xor
imul
movs
inc
sub
lods
bound
sub
lods
pop
xchg
mov
loope
dec
dec
adc
adc
dec
jl
cs
sbb
mov
in
sub
aaa
jp
lahf
repnz
lea
aam
test
mov
rcr
es
or
sub
adc
imul
pop
push
ret
div
ret
lods
inc
jo
dec
xlat
jecxz
inc
popf
mov
xchg
jmp
lea
xchg
repnz
cwde
mov
dec
adc
dec
or
mov
stos
jp
fsub
mov
lods
inc
(bad)
mov
push
push
(bad)
in
adc
jl
nop
fldcw
cmp
add
mov
jae
jne
ins
cwde
(bad)
lds
jl
xchg
pop
jo
or
dec
fs
jl
call
pop
or
fsubrp
cmps
push
add
sub
leave
jmp
arpl
imul
aam
jb
psubsw
sub
jo
mov
loope
jnp
call
push
pop
sbb
pop
inc
mov
push
into
cs
lahf
ins
je
ins
pop
mov
(bad)
push
pop
sbb
(bad)
mov
adc
mov
inc
push
mov
inc
daa
hlt
fwait
push
test
sub
shl
adc
fs
inc
cmps
fidivr
or
xchg
push
fbstp
loop
xchg
lds
push
add
test
and
sahf
call
ins
test
jbe
xchg
cmp
jmp
in
mov
scas
dec
stc
js
inc
(bad)
pop
test
add
je
mov
jl
inc
data16
sub
pop
outs
ins
dec
pop
lods
jb
xchg
test
imul
imul
add
dec
lock
add
arpl
fcomp
(bad)
divps
or
inc
popa
nop
add
cmp
ds
push
jl
popf
or
(bad)
leave
mov
add
jb
xchg
pop
pop
inc
push
inc
ret
or
loopne
ja
fstp
add
out
inc
sbb
push
js
jbe
mov
fwait
lahf
fild
xchg
push
test
fidiv
in
fiadd
mov
mov
pop
dec
xchg
aaa
push
lods
add
dec
pop
and
xlat
mov
sub
imul
call
dec
jle
lea
xor
adc
das
push
inc
mov
ins
push
dec
dec
dec
xchg
fcmovbe
mov
dec
repnz
jo
mov
in
stos
gs
lahf
(bad)
xchg
jnp
xor
(bad)
fbld
xchg
ret
fwait
daa
push
ret
and
call
adc
xchg
or
dec
imul
aas
lahf
mov
push
out
pop
push
xchg
jnp
test
fstp
sub
mov
or
jle
or
gs
fmul
int3
push
xchg
int3
mov
or
dec
or
jmp
div
inc
pop
addr16
js
cld
das
sub
lahf
jge
add
add
and
xchg
jg
cmp
ins
pop
xchg
sbb
daa
add
or
gs
call
add
iret
cmp
pop
or
daa
cmp
out
and
adc
jnp
adc
fimul
mov
inc
clc
xlat
out
test
inc
sub
fwait
inc
or
and
clc
fistp
sbb
in
push
mov
cmp
adc
out
pop
inc
dec
hlt
fcomp
mov
lods
jnp
xchg
shl
push
aaa
dec
pop
int
pop
jno
sub
daa
push
in
(bad)
xor
xor
call
add
mul
inc
jecxz
push
or
int
jge
cmps
test
dec
pop
ret
jnp
cmp
pop
ins
push
and
and
lea
cmps
aaa
retf
cmp
adc
lock
xor
lea
retf
inc
div
mov
sub
and
stos
dec
adc
pushf
mov
add
cmp
(bad)
das
cmp
iret
out
pushf
(bad)
imul
sub
lods
add
cmp
xchg
sub
sbb
adc
add
inc
pop
sub
xor
ror
loope
inc
mov
mov
xchg
mov
imul
jnp
dec
mov
xchg
shr
pop
jb
bound
aam
test
push
xor
or
adc
adc
mov
test
div
sub
jne
fstp
sti
jb
out
pop
repz
test
call
rcl
inc
push
push
pusha
jbe
pop
mov
lahf
rcr
jo
xor
fsub
sbb
inc
movs
sahf
test
xor
push
je
add
mov
sbb
pop
(bad)
jmp
mov
and
imul
cmp
in
jg
pusha
pop
mov
mov
xor
nop
lods
mov
cmp
das
jmp
adc
xchg
inc
je
mov
adc
pop
or
sub
xchg
test
in
imul
mov
mov
and
fadd
shl
mov
lds
mov
add
push
mov
push
cdq
sub
mov
push
adc
loop
jne
and
cld
ins
ror
mov
mov
jne
mov
(bad)
out
adc
retf
mov
int3
adc
cmc
pop
out
dec
aaa
hlt
inc
inc
jle
mov
fidivr
jae
pop
aaa
jmp
push
in
jecxz
clc
or
test
mov
lods
scas
dec
ss
pop
cmp
in
out
repnz
inc
mov
jmp
lods
add
ror
push
hlt
pop
xchg
test
ret
mov
sbb
sub
popf
inc
jge
fst
cmps
(bad)
frstor
repnz
bnd
fidivr
leave
sbb
test
adc
mov
call
les
mov
out
out
pop
jecxz
rol
mov
mov
fisttp
pusha
lock
fist
and
sbb
pusha
loopne
or
ss
jmp
iret
xchg
cmp
addr16
add
cmp
(bad)
test
xchg
xchg
jmp
ss
out
fadd
test
push
rcl
shr
cdq
test
stos
cmp
test
mov
mov
pop
daa
xchg
mov
mov
aaa
cmps
jbe
clc
inc
mov
inc
mov
or
jl
xlat
in
in
sub
cdq
in
adc
or
push
xchg
mov
retf
jnp
and
cmp
ficom
(bad)
xor
add
out
push
dec
mov
or
push
adc
mov
lea
(bad)
clc
xor
mov
aam
clc
or
pop
(bad)
mov
jo
or
fsubr
dec
sub
(bad)
test
stos
mov
ins
rcl
adc
inc
inc
dec
push
sub
jmp
rcl
inc
mov
(bad)
jmp
test
jb
push
pop
jmp
sar
cli
push
pusha
js
fistp
mov
imul
mov
fisub
test
jae
loop
outs
or
jmp
xchg
xor
jne
in
push
movs
mov
push
aaa
mov
fwait
mov
fs
cmp
ror
sbb
mov
jbe
fstp
cs
enter
or
pop
sbb
aad
mov
ret
into
retf
push
mov
mov
(bad)
fdivr
mov
dec
lds
jl
in
repz
out
(bad)
repnz
inc
xchg
and
and
in
mov
popa
mov
popa
and
pop
and
add
not
mov
imul
mov
cmp
fistp
retf
pop
gs
dec
and
add
xchg
inc
jbe
or
pushf
push
test
push
fwait
out
jmp
push
jmp
pop
push
rol
sbb
aam
push
xchg
daa
js
push
ret
scas
out
cld
mov
sbb
dec
out
inc
int
cdq
add
adc
and
ins
jmp
imul
and
jmp
inc
test
dec
mov
dec
and
inc
pop
xor
and
inc
jb
lds
aad
scas
loope
adc
imul
loopne
clc
jne
cmp
cmp
neg
mov
cmp
test
(bad)
jns
cdq
cmc
into
mov
sub
dec
mov
push
data16
fdiv
sar
mov
call
sbb
bound
retf
cmp
mov
inc
lahf
cmp
ret
xchg
(bad)
mov
mov
and
cmps
inc
mov
mov
jbe
cmp
test
jg
cmps
mov
das
pop
les
mov
ror
cmp
(bad)
imul
pop
sahf
mov
enter
sbb
in
addr16
mov
dec
mov
dec
dec
jmp
xchg
sbb
pop
and
mov
mov
in
xchg
test
dec
inc
mov
mov
sub
mov
lahf
std
or
std
and
adc
out
ds
call
xlat
dec
or
lods
inc
int3
pop
bswap
add
test
push
pop
dec
arpl
in
jbe
imul
push
cs
data16
fs
icebp
(bad)
stc
out
arpl
addr16
push
xor
xchg
shl
nop
popa
jnp
push
jge
jmp
adc
in
dec
jno
add
es
xor
mov
sub
enter
scas
test
enter
retf
(bad)
out
or
pop
fs
(bad)
cdq
mov
sahf
fbstp
sbb
jne
push
ss
cmp
xor
mov
fs
es
jge
push
or
mov
out
and
sbb
pop
xchg
dec
sar
gs
inc
mov
gs
or
fist
adc
xchg
retf
addr16
sar
clc
data16
dec
xchg
lods
aad
fsub
sub
fst
or
adc
push
mov
scas
adc
and
stos
cmp
ss
or
xchg
loopne
dec
fcom
sahf
mov
sbb
mov
bound
subps
add
xor
mov
inc
jmp
and
in
fwait
addr16
loop
inc
mov
cmp
ret
xor
add
add
mov
adc
jmp
jl
push
outs
sbb
mov
adc
add
jbe
push
push
aam
int
leave
jne
mov
int3
int
scas
stos
jmp
sbb
repnz
dec
pop
sub
imul
lods
jnp
inc
mov
ss
mov
cld
inc
(bad)
int
mov
xchg
jbe
jl
add
stos
xchg
lahf
add
push
mov
sub
jo
jle
push
push
add
cmps
retf
fcompp
movs
je
fcomi
rcr
add
shr
std
jnp
cs
and
test
mov
shl
retf
pop
in
cmp
mov
clc
aaa
inc
aaa
scas
sbb
fisubr
sbb
(bad)
mov
icebp
jl
or
sub
sub
out
(bad)
sti
rol
jle
retf
cmp
adc
mov
mov
push
jle
pop
xor
int3
or
jecxz
mov
mov
(bad)
cmp
pop
in
inc
int3
cmp
out
cvtps2pi
jbe
pop
pop
push
sbb
or
movs
xchg
xchg
out
js
call
add
sbb
sub
popf
aas
es
jg
inc
mov
hlt
enter
stos
xchg
sbb
or
movs
cmp
mov
jbe
cmp
push
lods
adc
xchg
mov
mov
fs
push
test
push
(bad)
enter
xor
xlat
dec
popf
sbb
in
and
sbb
lock
push
or
out
cmp
cmc
add
adc
lahf
fldcw
inc
or
mov
and
sbb
(bad)
loopne
or
repz
gs
addr16
cmp
mov
xor
iret
mov
push
in
daa
jbe
int
in
lahf
std
mov
push
xor
jge
les
cli
aaa
dec
xor
jecxz
jmp
out
lds
inc
rcl
dec
add
fwait
mov
imul
lds
push
inc
ins
adc
fdivr
or
fadd
cmp
sbb
fcomp
mov
pop
mov
mul
out
mov
cdq
jnp
inc
jmp
in
je
aad
sub
jge
int3
mul
sbb
mov
sbb
stos
or
xchg
test
push
out
lds
or
test
xor
cmp
stos
ror
rcl
es
push
(bad)
ror
push
mov
pop
xor
fdivr
add
sti
add
fnstcw
sbb
neg
outs
enter
lock
arpl
adc
xchg
loope
xchg
mov
jo
cmp
jne
push
jnp
ins
cmp
push
push
cli
outs
jmp
(bad)
cmc
sbb
(bad)
(bad)
inc
xchg
out
add
mov
add
sbb
or
popa
jo
(bad)
fnstcw
add
xor
out
sub
mov
je
sub
popa
xor
jecxz
hlt
fisttp
ror
cmp
in
addr16
inc
pop
pop
fild
push
mov
mov
lea
sbb
sbb
data16
cmp
add
popf
push
jno
(bad)
jle
mov
mov
int3
push
mov
fisubr
enter
in
jne
pop
(bad)
pop
js
loopne
dec
sbb
pop
out
hlt
arpl
pmullw
inc
loope
pushf
cdq
movs
nop
xchg
fnstenv
test
bound
jne
pop
inc
mov
inc
popf
or
(bad)
cmp
mov
inc
inc
push
neg
xor
or
les
push
adc
dec
aaa
cdq
ds
pop
(bad)
mov
dec
adc
cmp
push
xchg
cld
ss
push
loope
mov
xchg
test
and
jp
xor
adc
adc
xchg
mov
xor
loope
dec
icebp
ja
les
push
add
shl
js
not
ret
pusha
lock
inc
push
cmps
(bad)
retf
test
jns
daa
outs
cli
fld
mov
jae
inc
push
int
stc
mov
xchg
addr16
jns
pop
xor
xchg
popf
(bad)
cs
and
and
push
and
aaa
shr
dec
movs
popa
and
lods
(bad)
arpl
mov
imul
dec
sbb
and
ins
icebp
mov
xor
push
and
cmps
cmp
sub
jbe
ja
in
pop
and
(bad)
icebp
loopne
xor
dec
iret
lods
lock
mov
xchg
mov
mov
add
adc
or
fs
ins
sbb
push
cmp
repz
or
jns
xchg
stos
out
xchg
pop
dec
enter
add
int3
stos
jne
mov
mov
stos
repz
cli
lods
pop
stos
mov
psubb
les
ret
ins
mov
push
sbb
add
ds
fsubr
ss
dec
inc
cmp
pop
or
popa
pop
in
jns
std
sti
rcl
sub
icebp
stos
pushf
sbb
push
add
inc
cmp
lea
loope
push
jmp
movs
jmp
sub
pop
inc
shr
ret
cwde
test
jns
inc
jecxz
sub
jbe
outs
push
cs
dec
adc
call
pop
ins
add
jge
pop
nop
pop
pop
xchg
ret
mov
in
arpl
or
xor
gs
mov
push
loope
loope
dec
aad
test
leave
cmp
adc
sub
xchg
mov
xor
pushf
cmp
dec
fidiv
and
pop
jecxz
icebp
push
mov
dec
pop
or
pop
popf
js
dec
je
fisttp
or
pop
or
xchg
adc
mov
mov
jno
sbb
and
inc
sbb
dec
mov
xchg
mov
hlt
add
cmp
cwde
inc
mov
push
out
xor
mov
push
or
inc
call
fadd
sahf
push
outs
or
pusha
inc
inc
push
mov
mov
xor
mov
or
xor
sbb
mov
push
lods
sahf
cld
(bad)
in
sbb
ss
adc
popa
or
pop
cmp
das
ret
int3
xor
outs
mov
mov
scas
mov
imul
sbb
inc
mov
pop
loopne
or
and
daa
rol
xor
aam
and
adc
ins
xor
repnz
pop
gs
lds
sub
push
ins
xchg
shl
(bad)
adc
jmp
jl
mov
les
sub
ins
aas
fstp
or
pop
enter
in
xchg
mov
into
sbb
inc
mov
data16
push
movs
sub
shl
cmp
aas
mov
test
lahf
into
xchg
int3
mov
sbb
sbb
psllq
xor
cmp
scas
ret
jmp
push
fild
or
lods
cwde
push
cwde
shr
imul
push
out
pop
(bad)
sbb
jecxz
cmp
ror
in
and
ss
jne
imul
rcl
aad
lods
fild
pop
shr
or
mov
mov
sub
fadd
adc
call
test
jle
fild
das
(bad)
cli
sub
aas
push
shr
xor
stos
mov
cdq
dec
outs
bound
mov
adc
fcom
(bad)
in
mov
jl
loopne
lahf
adc
out
js
fwait
mov
fisttp
icebp
call
fld
jecxz
jge
outs
adc
outs
test
add
out
fwait
int3
fwait
call
mov
sar
mov
(bad)
pop
xor
mov
mov
cmps
imul
cs
retf
and
xchg
push
jp
stc
jle
jbe
and
outs
cdq
push
nop
adc
dec
icebp
add
fistp
mov
scas
inc
inc
emms
test
leave
xchg
pop
jbe
aaa
and
push
mov
cwde
(bad)
and
cmp
cmp
aad
dec
add
mov
in
sbb
xor
cmc
popa
shr
outs
mov
das
leave
(bad)
pop
mov
mov
push
out
arpl
push
je
pop
jle
(bad)
gs
test
jo
aam
(bad)
js
or
fisub
add
mov
es
outs
or
cmp
jp
in
ds
in
pop
fdiv
adc
or
sbb
out
inc
add
out
and
fs
add
outs
pop
mov
mov
or
sbb
aam
or
imul
sub
in
sub
in
mov
push
fcmovb
xor
ficom
mov
push
fwait
call
or
add
xchg
test
push
add
dec
out
pop
shl
jp
mov
ror
jno
add
xchg
adc
sub
retf
mov
xor
push
nop
cmp
outs
mov
or
hlt
xchg
mov
les
repz
movs
dec
(bad)
jb
and
mov
in
nop
sub
ins
mov
mov
clc
addr16
js
cmps
adc
outs
add
ins
dec
dec
adc
xchg
mov
pushf
adc
jbe
stos
(bad)
xchg
jb
in
mov
mov
fiadd
test
sbb
push
xor
jbe
daa
pop
xchg
jmp
add
fwait
mov
mov
cmp
call
ins
push
lahf
cmps
jmp
shl
jb
cmp
inc
out
pop
adc
retf
xor
xor
add
mov
xchg
cmps
xchg
pop
xor
cmp
das
js
xor
sahf
cmc
daa
adc
shl
jecxz
cmp
call
cmc
add
jb
daa
xchg
sub
pusha
std
fsubr
push
push
dec
ror
jecxz
xor
xchg
dec
pop
inc
sbb
(bad)
mov
(bad)
aas
pop
adc
jg
push
xchg
sub
cmp
pop
jnp
adc
jp
ds
pop
shl
fadd
std
retf
mov
cmp
cmp
push
pop
test
sbb
cs
xor
inc
or
or
xor
cli
(bad)
xchg
xchg
out
mov
sub
std
les
add
dec
add
popa
das
add
pop
cs
(bad)
pop
push
cli
sub
sub
sbb
adc
in
inc
aad
test
or
repz
(bad)
stc
daa
gs
xchg
sahf
mov
sti
jbe
inc
test
xor
popf
sub
rcl
and
cld
inc
sub
scas
cli
jbe
stc
ficomp
mov
scas
jle
inc
inc
push
leave
xor
add
ret
leave
cs
fsub
sub
imul
jecxz
in
jle
ins
cld
aaa
das
or
in
jp
mov
call
mov
xchg
sbb
pop
dec
push
es
xor
dec
jle
hlt
jl
push
je
jmp
ins
xchg
mov
mov
cwde
fist
or
je
cdq
cmp
dec
out
jmp
je
jge
shl
jb
and
ja
out
arpl
pop
sar
rol
lods
ja
pop
(bad)
aad
adc
pop
jae
dec
stos
jo
pushf
or
in
aad
xor
push
js
and
es
xchg
inc
cmp
adc
dec
cmps
call
add
pop
sub
mov
call
sti
xchg
xor
and
mov
retf
mov
jmp
(bad)
call
subps
pop
cmp
cli
push
aam
sbb
in
scas
dec
pop
in
push
movs
cmc
outs
movs
push
adc
pop
test
mov
jmp
adc
pop
push
daa
xchg
sbb
imul
sub
or
shl
push
jl
lds
(bad)
xchg
cmps
inc
xchg
or
xchg
jg
add
loope
adc
pop
or
std
and
stc
sub
adc
jp
and
mov
mov
scas
popf
pop
repnz
pusha
jmp
pop
jmp
push
in
cmp
mov
in
pushf
inc
call
mov
and
cld
push
sar
mov
rcr
(bad)
xchg
push
dec
pop
bound
imul
call
add
mov
shr
inc
ror
add
inc
lods
cmp
inc
mov
mov
xchg
mov
fiadd
sub
pop
setb
ss
xor
sar
jmp
pop
add
jg
lods
dec
mov
lock
jmp
clc
adc
ret
jmp
jle
cmp
shl
out
add
mov
inc
xor
jl
jbe
inc
aaa
lock
cmps
sbb
mov
pop
push
out
mov
or
mov
rcr
and
es
ja
jge
sub
add
and
lods
adc
dec
mov
mov
outs
aam
mov
fldenv
dec
(bad)
into
jmp
push
fisub
sbb
ror
out
sub
(bad)
mov
mov
mov
dec
dec
dec
daa
lock
mov
loopne
mov
hlt
loopne
mov
or
into
dec
ds
sbb
mov
jmp
jmp
mov
cmc
les
or
ja
and
adc
pop
add
pop
rcl
(bad)
jp
add
icebp
sti
sbb
dec
mov
cmps
cmps
daa
adc
cs
shl
das
addr16
push
push
and
jecxz
adc
cwde
retf
icebp
andps
(bad)
fwait
jnp
cmps
inc
fcom
ret
cmp
mov
jo
inc
aad
push
ds
and
cmp
out
aam
pushf
int3
shl
xor
neg
push
bound
cmp
cmp
adc
out
mov
xor
call
xor
mov
std
icebp
shr
xor
ret
inc
pop
jno
sbb
repz
outs
fsubr
jle
call
shl
mov
add
and
int3
jmp
xor
fwait
sub
jb
add
push
aam
mov
jae
mov
add
aad
jp
aad
cmps
movs
adc
xchg
or
mov
repnz
add
jmp
ins
jo
pop
add
mov
adc
clc
dec
icebp
push
ds
or
adc
es
aad
cmp
pop
int3
ja
cmp
xlat
jle
jb
pop
fsub
cld
jne
pop
fstp
dec
dec
in
push
sbb
and
jb
xchg
cmp
aam
fcom
clc
mov
call
push
push
push
popa
(bad)
call
lahf
jae
popa
inc
pop
sbb
mov
mov
out
xchg
lods
popa
(bad)
(bad)
cmps
int3
loopne
jns
jbe
sbb
mov
inc
repnz
push
inc
add
xor
push
call
and
inc
cli
addr16
nop
cmp
aad
cmp
jbe
adc
mov
mov
cmp
xor
adc
mov
mov
jp
fs
or
ss
xchg
xor
mov
inc
mov
mov
push
push
mov
arpl
mov
test
inc
mov
shl
scas
xor
add
cli
outs
xor
(bad)
sub
xlat
test
jmp
les
out
ret
dec
xchg
retf
mov
sbb
adc
iret
xchg
push
mov
lods
call
and
rcr
mov
push
or
or
cmp
or
xor
mov
and
dec
xchg
pop
xchg
rcl
stos
adc
and
sbb
jle
and
nop
aad
addr16
xor
sti
cli
adc
jne
xor
inc
inc
push
test
adc
jl
jb
lods
push
sub
cwde
xchg
aad
inc
test
sbb
in
pop
xor
shr
mul
xor
sbb
cwde
jp
jp
ins
mov
iret
arpl
(bad)
mov
call
adc
mov
test
imul
out
imul
add
ins
inc
addr16
in
out
mov
in
jb
out
or
test
div
push
cmp
adc
jmp
dec
sub
mov
dec
ins
adc
loopne
jno
stos
jb
out
das
xchg
cmp
lds
add
fidiv
dec
retf
sbb
jg
mov
(bad)
aad
ret
rol
pop
(bad)
xchg
pop
sub
fld
sbb
jns
ins
jp
(bad)
(bad)
movs
xor
ror
or
mov
pop
loope
push
not
sub
or
pop
cmp
(bad)
iret
xchg
into
xor
nop
hlt
xchg
mov
sbb
arpl
mov
xlat
mov
rcl
adc
scas
xchg
dec
mov
lods
test
sti
sbb
iret
pop
in
jmp
xchg
ror
xlat
aam
loopne
int3
push
mov
inc
jge
inc
mov
cdq
popf
fsub
shl
sbb
rcr
or
aas
and
lea
xchg
pop
push
mov
sbb
stos
xchg
mov
cmps
dec
nop
nop
jge
add
(bad)
xchg
cdq
sub
cmp
cmps
jle
aas
jge
aam
add
outs
xchg
pushf
mov
or
adc
loop
not
push
cli
sbb
test
adc
add
inc
(bad)
and
push
xchg
dec
push
dec
sbb
inc
js
and
push
jmp
sbb
xchg
scas
push
dec
sub
mov
xor
xchg
mov
sbb
das
in
adc
or
jmp
imul
jns
jmp
(bad)
repnz
lds
inc
sub
jns
cmp
jl
dec
into
dec
pop
inc
je
xchg
ficom
bound
mov
inc
bound
pop
dec
adc
outs
shl
sub
pop
fidivr
out
outs
push
sti
push
mov
mov
mov
push
call
sti
add
loop
mov
and
mov
ret
jmp
test
or
call
imul
add
and
jae
mov
lea
push
adc
call
push
xor
push
mov
movs
ds
ret
push
leave
jnp
mov
fucomp
mov
mov
iret
(bad)
(bad)
add
retf
xor
scas
fdiv
inc
inc
mov
or
pop
lock
mov
je
rcl
hlt
fsubr
aaa
xchg
jnp
repnz
out
inc
adc
and
and
lds
or
mov
pop
adc
fild
adc
sysexit
jmp
add
xor
push
xchg
jge
jp
xor
cmc
das
or
pop
rcl
loope
jl
xchg
jg
xor
test
push
pop
cld
fsub
xor
mov
fsubr
xchg
ss
xchg
mov
out
jle
sahf
push
loopne
jp
jne
mov
mov
(bad)
dec
enter
es
js
mov
ins
and
add
movs
lods
add
dec
mov
or
bound
mov
fadd
nop
stos
pop
int3
push
sub
ret
(bad)
push
js
cmp
xchg
mov
arpl
dec
mov
cmp
mov
js
or
rol
dec
rcr
or
ins
add
xchg
test
mov
test
mov
fisubr
icebp
add
lds
cld
pop
(bad)
xchg
lea
nop
iret
push
dec
fdiv
push
shl
cld
dec
test
or
mov
call
sub
imul
pusha
adc
pushf
ret
cmp
sbb
cmp
pop
and
add
test
xor
lods
inc
jecxz
fadd
dec
push
mov
stc
in
test
mov
(bad)
pop
fnsave
adc
or
scas
jo
push
add
mov
or
mov
jnp
mov
and
sbb
cld
mov
jae
ds
or
adc
(bad)
loopne
pop
fwait
pop
push
ret
inc
jae
in
jge
bound
leave
cmps
jo
pop
xor
call
or
aaa
adc
pusha
movs
jbe
or
and
pushf
pop
das
sub
ins
sahf
sbb
sbb
outs
in
out
retf
pop
add
and
and
mov
js
or
out
or
scas
cmp
test
sub
mov
mov
movs
ins
adc
dec
sbb
stos
gs
xor
iret
mov
lods
mov
xlat
call
add
adc
sub
cs
push
fadd
rol
test
ret
frstor
pop
add
out
sub
repnz
loop
push
std
sub
xchg
das
push
mov
sbb
inc
add
or
movs
push
mov
mov
jb
in
imul
adc
fisubr
dec
es
push
stos
xor
or
push
sub
fisttp
scas
sbb
mov
ja
lods
mov
mov
stc
cmp
out
and
inc
loop
int3
jg
stc
cmps
aad
push
fild
push
cmc
or
je
lds
loop
mov
xor
dec
jnp
cli
push
fcomip
lahf
sub
adc
push
fsub
daa
and
cmp
sbb
dec
mov
xchg
mov
fimul
push
lock
(bad)
out
xchg
cdq
cmp
js
lock
into
jns
pop
mov
dec
aaa
push
push
call
and
pop
mov
mov
push
out
add
push
loop
adc
cmps
sbb
fadd
cmovne
outs
cmp
xchg
push
loope
daa
pushaw
pop
jns
cli
test
outs
cs
sbb
pop
ja
xchg
mov
add
mov
idiv
push
mov
ds
push
lods
in
das
sub
call
sub
xchg
dec
and
push
test
push
scas
gs
push
push
dec
mov
dec
adc
leave
lods
repnz
into
lock
jmp
cmps
xor
mov
aas
mov
das
out
pop
stc
cmp
mov
or
xor
bnd
or
std
sub
popf
ret
call
lea
jmp
inc
cdq
call
jl
push
cs
mov
push
jg
rcl
fsubr
xor
mov
mov
rcl
lds
or
jecxz
xchg
cmp
fisttp
push
dec
retf
sbb
imul
pop
cs
jle
xchg
jge
jmp
pop
xor
test
mov
jb
es
pop
(bad)
in
(bad)
push
pop
movs
add
push
int
mov
loope
loope
movs
pop
ins
cld
mov
or
bound
fsubr
ins
cmps
outs
mov
clc
sbb
stos
ffreep
jnp
jno
cmp
push
cmp
ja
jecxz
mov
pop
test
add
ret
jecxz
test
loope
inc
pop
(bad)
in
push
les
addr16
jle
and
cmps
loope
(bad)
loop
stos
add
pop
sbb
aam
shl
out
arpl
dec
or
enter
cmp
mov
xor
adc
(bad)
(bad)
adc
push
std
jp
std
cwde
xor
xchg
sbb
fs
das
push
(bad)
push
call
jb
ret
inc
inc
cmp
aam
out
imul
jo
test
and
loopne
into
mov
xchg
jne
(bad)
cdq
fst
retf
mov
cwde
cmp
ficom
mov
lahf
mov
dec
add
movs
sbb
imul
and
test
dec
pop
out
xor
and
neg
pushf
cmp
outs
test
pop
push
and
icebp
jne
fbstp
inc
sub
ja
adc
xchg
dec
fwait
es
cwde
mov
mov
ss
rol
cmps
mov
jmp
in
or
xchg
stos
add
pop
test
daa
add
popf
dec
mov
dec
mov
push
add
mov
cmp
xor
scas
les
inc
jle
xchg
jge
repnz
push
dec
sbb
jno
and
mov
xchg
cmp
and
pop
pop
inc
pop
and
xchg
and
repz
mov
cmp
xor
jecxz
jo
inc
jecxz
xchg
or
sub
movs
cmovg
dec
pop
scas
idiv
in
repz
dec
and
cmp
sub
sbb
arpl
adc
pop
push
jp
iret
pop
jnp
test
inc
inc
push
out
sbb
sub
push
ss
aam
cs
jne
stos
mov
mov
imul
add
fcmovnb
mov
retf
fnstsw
xlat
sub
cmps
push
les
push
mov
cmp
jne
into
pop
adc
sbb
push
dec
mov
jmp
jg
sub
mov
mov
add
cmps
imul
nop
mov
in
jg
dec
scas
inc
add
xchg
cmp
out
in
pushf
or
stos
movs
push
es
stc
push
mov
mov
push
(bad)
in
loop
inc
cmp
sub
arpl
loop
call
dec
mov
mov
cs
mov
xlat
xchg
aad
pop
xor
stos
scas
xchg
jmp
xor
hlt
xlat
xor
rol
or
data16
and
fwait
popf
imul
mov
(bad)
jb
cmps
lahf
and
aaa
sbb
into
jns
popa
ins
xor
inc
cwde
or
or
movs
loopne
dec
scas
mov
in
cld
cmp
icebp
cmp
mov
push
add
fmul
dec
push
inc
(bad)
iret
inc
push
mov
ins
cmp
cs
leave
jmp
imul
adc
add
and
xchg
mov
cdq
cmps
sub
or
push
out
jmp
or
xor
fild
scas
mov
fldenv
sbb
retf
sub
pop
mov
mov
xchg
adc
aaa
pop
std
cdq
dec
push
pop
outs
sahf
es
popa
pop
out
dec
(bad)
aas
test
add
out
cmp
and
pop
aad
jle
fimul
lds
xor
adc
jnp
push
call
les
rcr
mul
shl
stc
fwait
push
inc
clc
sbb
call
lds
cld
cmc
dec
ins
gs
jo
(bad)
das
mov
fmul
sbb
sti
mov
test
sbb
idiv
aad
xchg
je
inc
or
add
call
cmps
adc
aam
rcl
mov
and
iret
and
ror
pop
pop
dec
xchg
lds
push
je
mov
lods
out
in
je
stc
mov
mov
cli
gs
lods
mov
sar
stos
or
jbe
adc
pop
dec
inc
fst
js
jmp
add
loope
cmp
bound
sub
pop
pop
test
and
ficomp
popf
inc
sahf
jp
pop
out
mov
shl
data16
cmp
sbb
aam
enter
cdq
xchg
jae
aas
sub
fisub
dec
adc
pusha
cmp
(bad)
outs
inc
ja
jmp
int
mov
lock
push
clc
scas
cmp
jle
mov
adc
imul
mov
push
dec
in
ja
pop
mov
out
dec
pop
jmp
jle
pcmpgtd
xor
mov
or
fs
shl
xor
data16
mov
sbb
icebp
iret
jmp
adc
(bad)
arpl
or
inc
pop
retf
fmulp
stc
addr16
mov
lods
push
imul
sub
sbb
jns
enter
call
int3
cwde
jle
out
nop
pop
xchg
enter
stos
inc
iret
dec
pop
das
mov
nop
push
adc
adc
fisttp
sbb
in
push
stos
stos
inc
daa
(bad)
out
hlt
pop
dec
adc
out
cld
push
dec
(bad)
pop
rcl
sub
jmp
and
add
into
stos
movs
in
pop
pop
or
in
mov
push
sar
shl
xlat
aaa
sub
adc
dec
aas
int3
ror
and
mov
stos
call
sub
shl
test
xlat
int
std
and
xor
push
sar
adc
cmp
mov
xor
or
jp
xchg
jns
inc
cmps
das
jns
jecxz
les
cwde
lds
cmp
addr16
mov
add
ret
jg
dec
fidiv
push
aam
aas
xor
loope
imul
jbe
(bad)
mov
sub
sub
fnstenv
or
mov
mov
sahf
pushf
mov
push
imul
mov
sub
push
push
out
dec
je
and
out
(bad)
aaa
inc
je
scas
mov
fcom
sbb
xchg
in
out
push
adc
inc
mov
icebp
shr
aaa
mov
cmp
xchg
inc
movs
sti
pop
mov
fsubr
dec
mov
inc
int3
rcr
fisttp
out
pushf
retf
push
in
retf
mov
fs
out
sub
mov
lahf
sub
adc
inc
jnp
xchg
pop
jbe
xlat
mov
pop
popf
data16
mov
and
lea
jp
or
and
dec
dec
adc
mov
sub
add
pop
out
jnp
fcmovne
sub
rcl
jp
dec
jmp
repnz
mov
ss
jbe
push
das
fxch
adc
retf
or
cmps
pop
out
jne
mov
add
out
ret
xor
add
repnz
fbstp
sahf
gs
mov
mov
mov
nop
ret
mov
dec
std
jl
test
push
ret
sub
xor
push
scas
(bad)
gs
adc
scas
add
pop
and
push
pop
cmp
sub
mov
jp
dec
retf
loop
mov
xor
adc
xlat
mov
mul
add
mov
pop
fcomi
je
sbb
push
mov
test
inc
push
loop
mov
push
and
mov
jnp
dec
in
mov
push
(bad)
in
dec
push
nop
mov
out
jmp
rcr
ins
xor
loopne
(bad)
cmp
jecxz
fucomip
cmp
xchg
or
cmp
test
or
(bad)
mov
repnz
sbb
(bad)
mov
xor
jbe
out
jg
stos
(bad)
pushf
(bad)
or
icebp
scas
lods
xchg
cmp
jnp
jo
push
adc
inc
mov
xchg
sub
hlt
adc
lock
lahf
(bad)
pop
in
sub
xlat
and
(bad)
fild
sub
sub
or
or
mov
xor
or
jo
iret
call
dec
cmp
jb
push
cmc
in
ror
inc
cld
inc
(bad)
push
dec
es
cmp
ret
(bad)
fimul
jo
icebp
in
sub
fst
shr
repnz
loope
sub
pop
cmc
rol
xchg
inc
popa
imul
cmp
mov
push
(bad)
mov
mov
je
in
retf
test
fidivr
pusha
fidivr
jp
push
ret
test
retf
inc
jae
adc
aad
sbb
and
mov
rcl
sbb
jnp
sbb
popf
shr
jp
stos
add
dec
aas
sbb
mov
iret
outs
lea
outs
out
or
dec
iret
retf
xor
(bad)
jmp
add
rol
jmp
sub
sub
cs
or
lods
push
pop
test
and
(bad)
push
jo
and
xchg
xchg
mov
pusha
addr16
js
inc
inc
aas
out
sub
xor
cdq
xchg
cmp
leave
(bad)
into
(bad)
mov
enter
xlat
inc
aam
adc
retf
fcmovb
mov
ficomp
adc
ins
cld
or
mov
mov
retf
pop
jno
or
add
jae
fisttp
sbb
cmp
pop
je
call
clc
sar
dec
aad
or
cmp
lahf
in
push
pop
adc
addr16
psubsb
inc
sbb
push
mov
stos
sbb
bound
icebp
push
mov
and
add
or
xlat
or
or
xor
(bad)
loopne
cld
jno
dec
call
jne
in
mov
ss
adc
stc
das
xor
test
pop
push
sahf
mov
ror
test
inc
(bad)
add
(bad)
xor
dec
ds
ret
push
cwde
ret
loopne
out
adc
xor
mov
sar
mov
sub
xor
push
cdq
ins
cmp
cmp
xchg
fidivr
cmp
or
ds
push
mov
ss
je
into
popf
mov
aas
cmp
popa
pop
xchg
and
xchg
pop
stos
loope
jnp
das
sub
std
jno
mov
rcl
or
xchg
mov
ins
jecxz
jne
sub
dec
pop
sub
pop
cmps
mov
(bad)
fst
push
fist
inc
in
clc
sub
test
inc
or
pop
lahf
mov
(bad)
jns
loope
xchg
jmp
jmp
jmp
arpl
(bad)
adc
mov
int3
popf
loope
fnstenv
mov
popf
outs
adc
adc
push
jle
lahf
mov
cmp
movs
mov
pop
xor
pop
movs
fstp
xchg
xchg
dec
lods
dec
add
xchg
sub
xchg
stc
(bad)
stc
sub
leave
call
dec
sub
push
sbb
rcl
lods
sub
mov
sub
cmp
mov
mov
cli
xchg
pop
inc
je
ins
stos
sbb
and
xor
sub
popa
adc
xchg
out
ins
push
movs
rep
mov
or
mov
xchg
fs
pop
lahf
sahf
ror
imul
icebp
jns
and
movs
inc
cmp
loopne
jle
loop
xor
adc
cmc
(bad)
xchg
mov
es
xchg
aas
push
cmp
fldenv
cs
stos
and
sub
and
std
icebp
pop
jno
(bad)
jbe
sbb
xchg
cmp
lahf
or
adc
adc
(bad)
ja
xchg
popf
pop
xchg
xor
adc
cmp
push
pop
fld
stc
and
lods
cmps
pop
xchg
call
scas
out
cmc
sar
popf
mov
mov
into
push
adc
or
loopne
mov
push
cwde
adc
(bad)
add
xchg
sbb
and
add
jl
push
mov
push
(bad)
pop
(bad)
rcl
cmp
lock
sbb
(bad)
fcom
sub
mov
sub
mov
aad
lods
jge
clc
cmp
mov
xor
adc
dec
mov
add
int3
gs
jecxz
mov
jp
push
mov
fisubr
push
lea
xchg
pushf
inc
adc
cmp
mov
stos
lea
fiadd
(bad)
xchg
lock
xor
jp
jno
mov
add
dec
pop
aam
dec
cwde
nop
ja
cdq
push
push
fcmovnu
push
add
pop
lock
fucomip
not
(bad)
call
add
(bad)
in
fbld
xchg
mov
cmp
shr
and
rol
sbb
jp
popa
inc
adc
lods
js
xchg
pop
mov
cmps
xlat
int
mov
mov
mov
or
mov
cdq
mov
jb
add
xor
adc
das
add
into
mov
popf
ret
sbb
and
dec
xor
ret
mov
ss
stos
in
cmp
push
mov
jmp
(bad)
fstp
inc
pop
mov
inc
xor
xchg
xor
int
gs
pop
std
sti
mov
cmp
push
bound
inc
inc
push
aad
into
push
ins
test
or
mov
sbb
loop
rol
sbb
out
dec
in
inc
mov
sbb
or
jo
inc
xor
push
test
jmp
leave
into
sar
rol
outs
outs
xchg
ret
hlt
out
not
mov
cdq
or
inc
xor
ret
pop
inc
out
adc
retf
or
out
mov
jg
imul
retf
inc
xchg
mov
mov
sti
gs
rcl
add
pop
and
add
jp
(bad)
test
jg
add
jecxz
pushf
test
call
scas
cmc
retf
sub
out
iret
xchg
sub
jo
(bad)
pop
xchg
mov
lods
xchg
push
inc
dec
inc
cs
sub
call
(bad)
aam
ins
aaa
add
into
popf
outs
fldenv
dec
enter
pop
inc
inc
push
test
imul
dec
into
retf
pop
loopne
div
or
rcr
cs
add
pusha
stos
push
ficomp
lods
lea
xor
data16
mov
xchg
dec
mov
mov
test
mov
or
mov
test
xor
jp
pop
(bad)
aas
out
stc
push
mov
pop
addr16
pusha
aad
sub
or
jne
xchg
cld
neg
stos
call
daa
call
imul
test
inc
jge
bound
xor
inc
test
jge
sbb
lahf
cmps
and
mov
cmp
add
nop
stc
loopne
fidiv
lods
adc
dec
jns
scas
sets
adc
jp
sbb
jbe
int3
test
clc
mov
pop
push
cld
leave
xor
test
in
jo
mov
and
push
scas
aam
jecxz
sub
dec
lahf
pusha
outs
push
jge
adc
cmps
mov
xor
mov
in
cmps
jns
push
(bad)
retf
out
push
rol
enter
ret
ins
cmp
push
xchg
rcl
pop
fnstenv
xor
hlt
test
in
aas
dec
idiv
xchg
mov
push
stc
lahf
outs
in
mov
mov
ins
dec
push
xchg
test
aad
or
clc
xor
js
sti
js
pop
xor
lds
pop
or
call
out
outs
jl
jmp
adc
inc
mul
fdiv
push
jae
jmp
sbb
push
jnp
int3
lahf
in
cmps
(bad)
stos
jp
mov
rcl
fucomi
and
std
shl
in
push
inc
push
ja
adc
jmp
ja
xor
fldz
or
sub
inc
aaa
test
mov
inc
mov
mov
hlt
retf
mov
add
jno
and
enter
sar
or
ins
mov
cmp
sbb
inc
mov
xlat
xchg
ja
iret
les
sub
jmp
sbb
cmp
pop
cld
ret
mov
and
idiv
xchg
sbb
and
add
pop
adc
pop
(bad)
sbb
pop
xchg
ror
dec
jo
aas
inc
pusha
(bad)
enter
jbe
inc
movs
add
add
push
cmp
mov
repz
pop
call
mov
pop
xchg
fmulp
pusha
cmp
sbb
or
jae
jle
jne
inc
rcr
adc
dec
movs
pop
pop
(bad)
mov
cmps
mov
push
jbe
or
lods
aad
test
ins
ds
cmps
mov
sub
pop
iret
xlat
aad
leave
inc
or
push
cmps
jne
ds
(bad)
mov
push
les
adc
add
arpl
fistp
inc
adc
sbb
xchg
jg
test
xchg
sub
das
xchg
call
add
ffree
jmp
out
jae
push
lds
jne
xor
xchg
movs
or
(bad)
mov
mov
int3
nop
inc
in
outs
(bad)
clc
ret
inc
mov
jb
sub
mov
adc
jmp
std
cvttps2pi
inc
clc
dec
pop
aaa
xchg
in
iret
inc
pushf
pop
xlat
push
ds
leave
cdq
pop
adc
adc
or
jnp
adc
push
fcom
mov
sbb
(bad)
cmp
jbe
and
ret
mov
fnstsw
push
or
jp
push
push
inc
cmps
jo
xchg
push
mov
pushf
repz
push
in
outs
jo
pop
sub
fwait
ins
mov
xchg
lea
fs
sub
test
mov
test
add
jge
xor
rcr
in
in
test
lahf
adc
sbb
cli
inc
xor
xor
in
mov
xor
fs
daa
movs
jns
shl
fwait
dec
imul
outs
mov
mov
gs
sbb
jno
sbb
cmp
ss
inc
retf
sub
jge
aaa
es
dec
push
test
xor
sub
clc
pop
add
fwait
mov
fwait
inc
or
mov
jne
dec
sub
mov
call
stos
dec
cmps
addr16
sub
jmp
or
aaa
mov
inc
ja
pop
retf
cmp
mov
loopne
inc
pop
inc
fstp
jo
imul
stos
or
xchg
hlt
dec
pop
pop
dec
or
ins
rol
lock
test
mov
mov
sbb
add
mov
in
cli
dec
sub
xor
aam
stos
mov
cmps
jns
push
push
inc
stos
fsub
mov
nop
inc
pop
sbb
mov
dec
icebp
sub
arpl
or
nop
retf
aas
pop
pop
push
hlt
in
jbe
push
and
xchg
retf
inc
vxorps
add
mov
inc
fcmovnu
jle
pop
lea
jb
push
loopne
inc
mov
inc
sbb
es
mov
pop
mov
shl
push
popf
mov
pop
dec
sub
cmc
sar
loope
hlt
test
fistp
imul
pop
inc
push
mov
push
dec
ss
dec
or
xor
cmp
dec
sub
test
enter
jp
hlt
push
mov
imul
mov
cmp
xchg
xchg
shl
(bad)
xchg
shr
inc
mov
pop
pop
imul
add
ret
out
jns
jns
push
pop
dec
leave
mov
(bad)
pop
call
daa
adc
fnstsw
jbe
xor
add
add
xchg
(bad)
pop
cmp
push
mov
and
push
sbb
sbb
movs
mov
fwait
mov
in
push
jmp
addr16
shl
outs
ins
mov
pushf
jp
out
in
sbb
out
sbb
shl
in
push
and
xchg
push
pushf
(bad)
mov
fldcw
jae
leave
je
jo
lahf
cli
mov
dec
or
xchg
mov
pop
mov
xchg
jmp
ja
ins
dec
xchg
cdq
pop
jmp
out
scas
mov
pop
xchg
mov
sar
(bad)
enter
add
or
call
test
jbe
cmps
hlt
div
mov
aas
fdiv
ins
in
lock
mov
inc
lds
dec
loop
and
(bad)
js
outs
adc
xor
sbb
movs
or
mov
ds
jo
sub
ror
mov
loope
ds
das
scas
fild
xor
btc
and
fdivr
nop
shl
pop
and
sub
xlat
stos
fisubr
aad
and
and
dec
push
mov
jge
jp
sbb
adc
retf
adc
mov
loope
mov
dec
push
inc
and
cmp
cmp
ds
inc
fnstsw
scas
dec
and
clc
or
imul
sbb
adc
mov
xchg
das
test
lods
xchg
xor
outs
mov
cmp
push
pushf
or
push
sub
rol
fstp
sbb
sub
cwde
push
xor
fnsave
es
call
mov
sub
mov
iret
inc
ret
push
dec
hlt
mov
stos
inc
xor
mov
into
mov
and
cdq
nop
outs
xchg
(bad)
bound
jmp
int3
pop
test
adc
push
xchg
mov
xchg
push
cmp
dec
adc
outs
out
out
mov
stos
inc
call
jnp
mov
int
cvtdq2ps
adc
fisub
pusha
xchg
xor
pop
xchg
hlt
cs
fs
push
or
or
movs
mov
or
and
push
mov
mov
fimul
and
and
add
js
dec
push
sub
ins
pop
into
aad
and
lahf
jg
mov
adc
pop
push
nop
(bad)
xchg
jno
inc
movs
jg
fadd
dec
std
mov
je
mov
push
in
and
sub
ins
xchg
je
xchg
mov
sub
enter
add
mov
pop
bound
lods
and
add
aam
add
mov
(bad)
retf
pusha
(bad)
repnz
mov
and
jge
dec
ficom
jns
(bad)
push
scas
out
sbb
xchg
pusha
mov
cmp
in
mov
icebp
xchg
jmp
and
jb
inc
push
dec
movs
xchg
or
mov
lds
(bad)
xchg
iret
mov
shr
pop
dec
lods
mov
and
push
xchg
int
sbb
pop
cli
jmp
jecxz
mov
inc
mov
pop
mov
inc
xor
adc
xor
dec
sbb
jno
andnps
imul
jecxz
push
mov
pop
in
mov
xchg
dec
pop
push
ins
xor
int3
inc
adc
aam
nop
jg
inc
mov
adc
loop
sbb
mov
(bad)
aad
pop
sbb
xchg
adc
sbb
lahf
cmp
aam
add
cvtps2pd
enter
(bad)
push
sbb
push
pop
add
xchg
lods
add
lods
lock
adc
jmp
sub
jle
push
xchg
loop
mov
mov
or
pop
mov
adc
xchg
lahf
icebp
xlat
jl
dec
dec
out
fldenv
mov
out
mov
add
push
(bad)
in
fdivr
icebp
lock
dec
pop
popf
sub
pop
adc
push
mov
lea
div
shr
cld
or
dec
pop
mov
lahf
inc
and
jb
xchg
ins
cmp
call
dec
jmp
call
test
push
xor
and
mov
and
ret
inc
cmp
inc
iret
fwait
or
js
adc
(bad)
popa
cmps
adc
leave
cmp
ret
outs
xor
pop
popf
or
hlt
dec
stos
mov
in
mov
fwait
mov
inc
xor
into
(bad)
stos
add
test
(bad)
imul
imul
xchg
inc
push
mov
cdq
retf
jmp
aam
fisttp
lods
pop
cwde
test
add
sti
and
out
mov
jnp
popa
outs
ret
std
lods
jmp
fistp
xor
fs
push
push
xchg
xchg
fwait
sub
mov
int
xlat
xchg
inc
sub
out
hlt
adc
jmp
and
pop
xor
sub
or
adc
sti
jne
int3
mov
jmp
inc
loopne
sbb
pop
cmp
inc
loop
pusha
sbb
cmp
push
cwde
(bad)
daa
inc
rcr
jb
shl
js
(bad)
loop
xchg
xchg
popf
mov
pop
aad
leave
sbb
test
push
add
aad
dec
test
dec
mov
jp
clc
pop
lds
movs
xor
test
mov
xchg
push
sub
leave
inc
push
movs
ins
xor
xor
jnp
aam
jmp
xor
xlat
out
mov
mov
push
sbb
xor
in
push
or
sbb
mov
sti
inc
scas
aas
mov
adc
jns
mov
sbb
sbb
ret
pop
add
and
fcmovne
loopne
aam
cmp
adc
xchg
ror
xor
mov
(bad)
rol
arpl
lock
pop
lods
mov
mov
(bad)
call
sub
sbb
popf
sbb
push
or
xor
scas
inc
cmp
push
pop
shl
or
icebp
xor
(bad)
loopne
jno
cmp
inc
fndisi(8087
and
cwde
pop
add
sbb
inc
pusha
out
xor
pop
or
das
jmp
out
enter
adc
outs
popa
stc
push
imul
sub
mov
and
stos
pop
xchg
jmp
push
lds
outs
sti
push
jge
or
mov
aaa
mov
pmullw
bound
adc
shr
call
stc
ffree
jmp
sub
jbe
mov
aas
pop
js
and
es
mov
mov
aad
(bad)
sbb
mov
mov
cwde
ror
pop
ins
pop
rcr
ins
rol
aad
outs
sub
gs
jo
(bad)
pop
adc
mov
icebp
hlt
jne
sub
leave
inc
mov
fistp
dec
imul
inc
inc
mov
jnp
pop
and
mov
inc
cwde
add
or
shl
lea
pop
dec
push
sub
js
inc
pop
or
std
or
ret
and
mov
std
jbe
fisubr
push
mov
sti
cwde
xchg
mov
mov
jl
xchg
mov
inc
dec
cwde
rcr
xchg
and
jmp
dec
(bad)
in
xchg
mov
push
mov
adc
fimul
lds
inc
jbe
arpl
call
add
mov
mov
xor
loop
jl
cmc
pop
xchg
mov
out
shl
aad
xor
fild
jne
mov
sub
sti
add
movs
dec
std
adc
mov
ret
mov
outs
and
adc
push
pop
cvttps2pi
sub
cld
fdivr
dec
xor
xor
inc
addr16
add
jg
pop
push
jmp
pop
mov
test
mov
or
xor
pop
call
xchg
adc
mov
cmp
fsubr
jl
popf
or
adc
pusha
mov
dec
rol
sti
enter
ret
jecxz
aas
call
jns
mov
repz
mov
pop
leave
(bad)
fisttp
ss
dec
mov
ja
(bad)
cs
cs
mov
call
jecxz
fs
xor
js
jmp
push
mov
mov
dec
jge
lahf
movs
test
dec
jb
inc
inc
or
sar
inc
fdivr
inc
ins
fistp
jge
leave
xor
push
je
iret
mov
fadd
jmp
mov
add
aaa
pusha
into
lea
add
inc
fabs
ss
or
clc
out
adc
cmp
mov
outs
push
dec
or
push
mov
dec
mov
(bad)
gs
out
sar
xchg
(bad)
std
cs
not
dec
in
xor
mov
imul
and
test
add
mov
bound
fwait
enter
test
or
fs
xchg
loopne
pop
out
mov
les
scas
je
xchg
adc
and
fstp
outs
call
sub
pop
aas
xchg
rol
mov
xchg
pop
fmul
fidivr
pop
dec
and
mov
mov
xchg
push
or
pop
mov
jno
jb
daa
popf
mov
sbb
push
jo
or
and
jecxz
popa
or
enter
shr
and
fst
outs
pushw
push
lahf
inc
mov
adc
pop
ja
mov
bound
pop
inc
movs
push
stos
popa
pop
nop
iret
test
stc
sub
xchg
push
pop
sub
dec
aam
sub
push
ins
sbb
test
lods
fisub
mov
and
add
shl
dec
and
and
jge
mov
mov
xchg
sbb
das
add
mov
xchg
cwde
outs
icebp
sbb
xchg
cmp
movs
or
xchg
push
into
or
jb
pop
(bad)
sub
sahf
cmps
enter
out
cdq
pop
mov
cld
xchg
and
into
jmp
inc
pop
fstp
ins
hlt
cmc
iret
cmp
leave
rol
pop
inc
or
ret
push
cld
imul
sahf
sbb
sbb
or
push
xor
dec
xor
cmp
(bad)
mov
add
jns
or
pop
bound
mov
xor
jno
call
(bad)
imul
retf
call
inc
xlat
jno
and
mov
sub
fcomp
dec
xor
sub
(bad)
sub
cmp
pop
sbb
lods
dec
cmps
aad
cwde
pop
sbb
icebp
fisubr
pop
push
mov
std
int
in
push
jmp
out
fsubp
pop
xchg
pop
dec
cs
sbb
dec
mov
cwde
inc
test
mov
nop
jne
push
push
pop
push
rol
pop
cmp
jb
jge
int3
cmp
ins
inc
fdiv
jnp
jne
push
ret
(bad)
fsub
ins
icebp
scas
mov
addr16
out
sbb
sbb
movs
or
jmp
ins
sub
movs
jp
push
xchg
sub
cmp
pop
fstp
ins
pop
int3
sub
icebp
dec
lods
sub
sbb
or
int3
pop
es
lds
xor
sub
jmp
mov
mov
add
cli
dec
lea
mov
cwde
jge
imul
fstp
sub
push
push
test
ss
fsub
addr16
adc
ficomp
or
mov
fwait
outs
dec
lods
add
sbb
(bad)
aaa
fist
in
ds
imul
push
gs
jmp
sub
jb
mov
nop
pop
in
jmp
mov
loop
shl
or
mov
(bad)
dec
in
jnp
stos
adc
ror
popa
mov
xchg
pop
jge
and
cmp
and
add
shl
(bad)
mov
dec
xchg
xor
xchg
or
hlt
sub
test
stos
imul
inc
xor
inc
jbe
jo
push
sbb
sbb
repnz
or
and
loope
cmps
retf
iret
cmp
mov
enter
imul
and
(bad)
adc
(bad)
out
jmp
cdq
outs
xchg
shr
cmp
dec
mov
neg
jo
add
inc
shl
retf
mov
enter
jno
adc
mov
or
add
int3
das
std
mov
int3
retf
add
inc
aaa
push
jo
cmp
int3
out
add
mov
pop
cli
mov
adc
sub
dec
leave
call
mov
and
mov
mov
shl
in
(bad)
cdq
fnsave
cmc
add
addr16
and
inc
je
add
in
pop
ror
or
push
sbb
mov
cmps
jne
add
stc
ja
mov
dec
pop
or
(bad)
mov
bound
in
in
add
push
mov
inc
sbb
push
jne
cli
pop
clc
mov
stos
pushf
shl
outs
sub
int
add
inc
and
add
xor
mov
cmc
xor
inc
and
hlt
adc
mov
jecxz
push
in
or
cli
fbstp
repz
jno
jmp
dec
lock
lods
mov
and
fistp
mov
push
jge
mov
adc
jl
mov
cs
sbb
jmp
hlt
int3
push
add
pop
xchg
and
test
dec
add
ins
sbb
mov
lock
fld
inc
pop
xchg
xchg
jl
push
or
sbb
fistp
je
sbb
lods
xchg
jmp
stos
sub
add
aaa
fidivr
and
push
mov
pop
cmp
sbb
cmp
fcmovnb
mov
pop
neg
pop
leave
or
add
push
mov
push
adc
or
ret
lahf
and
xor
mov
sub
repz
loop
adc
jmp
stos
dec
and
ret
shr
cmp
pop
lods
repnz
dec
jbe
test
mov
push
cld
and
jg
pop
aam
rcl
xchg
int3
add
or
add
out
pushf
jg
or
in
retf
adc
dec
imul
aas
mov
xlat
xlat
or
xchg
sub
mov
pusha
xchg
jg
jns
push
dec
sub
in
sub
pusha
test
jmp
hlt
or
sbb
dec
aad
jmp
shr
xchg
cmp
mov
xchg
sub
leave
fisttp
and
sbb
aad
aas
push
loop
out
int3
lods
adc
mov
fimul
lahf
mov
scas
in
and
xchg
or
sbb
jns
xor
(bad)
xchg
ja
push
sbb
imul
sbb
repz
sar
aam
inc
iret
test
xlat
retf
xor
lods
popf
pop
mov
pop
and
in
mov
adc
pop
fdivr
out
nop
test
push
dec
outs
jmp
dec
frstor
iret
dec
test
dec
xor
sbb
jns
adc
adc
stos
daa
jae
mov
pop
cli
loopne
xchg
iret
xchg
xchg
push
mov
outs
xor
outs
repz
or
rcl
sbb
retf
fs
pop
jge
sti
enter
mov
inc
aas
and
popa
push
or
pop
popf
push
les
dec
pop
mov
xchg
mov
test
jp
push
inc
mov
popf
sub
fcom
cwde
dec
sub
in
call
fs
or
test
xor
imul
mov
aam
in
pop
in
sub
aas
xor
div
or
mov
dec
push
or
push
fisub
in
arpl
and
xcrypt-cfb
cmps
and
std
das
mov
jg
cwde
add
and
dec
cmp
xor
dec
or
pop
xchg
pop
push
je
ret
adc
lods
in
idiv
cmps
mov
cmps
ins
outs
mov
aaa
cmp
in
or
jb
rol
push
mov
rcr
sahf
imul
adc
cld
popa
mov
inc
loope
mov
jecxz
icebp
arpl
and
mov
outs
cwde
call
mov
inc
push
dec
and
inc
int
xor
fs
adc
and
dec
out
shl
mov
cwde
xchg
dec
xchg
bound
cmp
mov
daa
add
pop
scas
mov
ret
icebp
icebp
pusha
call
and
and
push
and
dec
push
jg
push
adc
sbb
push
sbb
shr
pop
or
je
mov
cmp
fdivr
xchg
jle
ds
mov
mov
lods
ret
cdq
iret
push
call
fwait
test
and
xchg
mov
dec
(bad)
mov
(bad)
mov
cs
inc
cmp
sbb
add
lds
sbb
ja
mov
nop
int
fimul
sub
rcl
and
mov
dec
(bad)
lds
xlat
stos
or
adc
rcl
add
pushf
mov
xchg
mov
push
cmp
inc
mov
pushf
fstp
mov
out
loop
push
ins
inc
popa
pop
push
dec
sbb
xchg
hlt
xchg
pop
leave
mov
and
pop
mov
sbb
ret
inc
push
push
pushf
mov
mov
dec
(bad)
add
je
ins
xor
and
lods
or
mov
es
jle
and
push
jne
sub
mov
cmp
adc
push
sub
aam
and
and
sbb
mov
cmp
pop
inc
outs
mov
aaa
ret
push
popa
pop
retf
push
fild
pusha
ja
rol
add
lods
aas
dec
cli
sub
cmps
add
jp
sub
jne
clc
cmp
push
dec
push
xchg
inc
aam
aam
aas
or
adc
cmp
cmps
mov
mov
mov
sahf
icebp
cmp
jo
fsub
mov
jmp
mov
into
gs
add
imul
stc
pop
mov
and
out
into
enter
add
rcr
(bad)
xlat
adc
mov
sub
dec
sbb
dec
or
pop
cwde
pop
arpl
mov
repz
fmul
fiadd
or
fisub
hlt
fnsave
mov
or
mov
or
stos
cs
js
arpl
add
inc
stos
std
mov
jne
jo
mov
int3
ins
jo
ror
pop
mov
in
mov
pop
inc
mov
pusha
cli
and
cmp
xor
rcr
pop
outs
mov
and
fisub
leave
jae
ret
call
push
mov
les
jne
and
sub
jecxz
mov
add
pop
bound
aam
jl
sub
in
callw
aaa
add
xchg
pop
(bad)
xchg
fdivr
pushf
nop
push
or
mov
sbb
add
dec
xor
inc
fisttp
inc
or
and
repz
repz
push
lods
adc
jmp
xor
mov
mov
mov
cmp
xlat
mov
je
jnp
sub
push
adc
xchg
xchg
dec
push
inc
(bad)
out
movs
inc
ficom
lods
scas
fild
ins
jo
mov
mov
div
xchg
int3
pushf
push
and
sbb
popf
daa
push
and
push
mov
and
adc
nop
push
or
pop
pop
repnz
mov
pop
jbe
out
sub
mov
jle
xchg
ficomp
int
out
shl
jge
sti
xchg
test
arpl
pusha
xor
jecxz
aam
lea
movs
mov
push
pop
call
aam
arpl
push
fwait
mov
add
out
push
and
jmp
leave
rcl
push
aaa
lock
ret
xchg
push
pop
test
in
cmp
jne
push
inc
sti
sbb
ret
add
xor
sub
in
sub
mov
fdiv
push
inc
inc
dec
sub
jns
div
pushf
outs
xor
sahf
test
push
mov
hlt
jne
pop
mov
sar
pop
mov
in
sti
jae
out
adc
pushf
cli
add
mov
in
push
jb
fstp
push
repz
or
and
cmps
out
xor
mov
jle
pop
xchg
addr16
jb
mov
jno
sbb
stos
adc
clc
fimul
sbb
imul
sub
mov
jmp
xchg
push
push
lds
push
stos
jp
and
out
sbb
repz
fstp
les
jecxz
push
lahf
dec
or
lea
retf
call
mov
dec
mov
fwait
ror
mov
sub
or
sbb
mov
mov
dec
cld
imul
cs
push
and
sti
hlt
xor
pop
mov
rcr
mov
sbb
pxor
push
ret
nop
rcl
test
jp
sub
adc
sbb
add
icebp
xchg
mov
icebp
retf
test
xlat
bnd
(bad)
ins
mov
(bad)
mov
rol
inc
inc
je
jno
mov
jb
scas
aaa
cld
adc
mov
mov
aad
arpl
push
outs
adc
and
cmp
fwait
push
inc
or
xor
push
mov
sbb
(bad)
push
enter
daa
mov
sar
repnz
jmp
outs
gs
jge
pop
or
push
cdq
addr16
adc
in
int
inc
adc
out
bound
dec
or
sub
sbb
xor
pop
les
stos
push
xchg
fisttp
mov
sahf
jp
fcmovbe
sahf
mov
fmul
sar
adc
inc
fist
jl
mov
rep
mov
dec
jmp
mov
aad
out
inc
out
jl
aas
pop
and
add
mov
or
outs
sbb
cdq
(bad)
scas
mov
push
dec
fcom
mov
pop
xor
fidivr
xor
js
push
or
out
cs
push
or
xor
fcomp
std
xlat
mov
hlt
jae
xchg
jmp
add
dec
sub
sub
mov
dec
hlt
arpl
lea
nop
stos
neg
lahf
add
xchg
xchg
sar
jnp
shl
ror
dec
inc
les
shl
jmp
xchg
sbb
jnp
into
(bad)
test
xor
clc
push
cmp
retf
scas
mov
rcr
aaa
aam
xor
adc
jmp
and
mov
cmc
aam
ror
mov
std
imul
dec
rcr
mov
push
inc
loope
inc
cmp
inc
pop
cdq
movs
pusha
lahf
pusha
cdq
push
leave
pop
inc
or
rol
mov
inc
aas
nop
xchg
adc
pop
sub
jae
inc
orps
loopne
or
vmread
or
(bad)
hlt
cmp
imul
in
lea
pop
jg
xor
mov
cmp
dec
and
mov
rcr
mov
aad
push
jb
mov
inc
ja
mul
fadd
jns
cvtdq2ps
repnz
test
push
dec
add
pop
js
test
out
mov
add
pop
dec
adc
add
mov
add
leave
in
mov
xchg
fidiv
fpatan
adc
ins
sbb
icebp
loop
ins
es
mov
adc
icebp
jp
arpl
ins
xor
dec
enter
inc
mov
jbe
and
mov
cs
push
ror
test
fsub
xchg
add
aam
sub
sub
inc
(bad)
mov
cdq
jge
enter
(bad)
mov
gs
in
adc
ja
mov
sti
mov
out
mov
sub
xor
inc
popa
adc
push
mov
pop
jmp
dec
xor
lods
add
push
mov
or
gs
fstp
jo
add
hlt
dec
pause
cmp
mov
(bad)
mov
and
cmp
pop
inc
pop
wrmsr
test
push
jle
cmp
pop
or
and
leavew
cmc
adc
inc
and
mov
shl
pop
xor
neg
dec
mov
xor
mov
pop
and
mov
or
movs
rcr
xchg
shr
(bad)
or
mov
cld
pop
cmp
sbb
imul
sbb
push
test
mov
xchg
dec
cmps
mov
es
outs
in
lods
or
xchg
int
mov
inc
scas
or
or
jl
(bad)
cmp
movs
int
out
inc
jae
(bad)
mov
stos
xor
loopne
cld
pop
inc
mov
push
imul
loop
sub
movs
fisubr
inc
sti
pop
push
mov
mov
jnp
lods
das
xchg
(bad)
sahf
outs
push
jne
or
aam
je
dec
outs
ins
pop
js
test
cmc
cld
mov
aam
shl
vdivsd
retf
out
jg
jb
out
xor
jne
mov
jno
ret
push
push
sub
push
cmp
inc
out
mov
inc
mov
scas
or
cmc
mov
jno
cli
xor
mov
lods
add
(bad)
test
cmp
std
inc
out
retf
xor
push
mov
inc
dec
aam
cld
retf
arpl
push
xor
adc
(bad)
jns
xchg
in
cmp
inc
sub
inc
shl
inc
test
and
repnz
xor
lds
loopne
pop
mov
adc
fisttp
mov
iret
movs
or
push
and
add
ja
popa
sbb
mov
mov
pop
ja
add
and
and
lods
fsubr
cli
rcl
push
pop
fnstsw
pushw
mov
and
and
inc
dec
fwait
arpl
xor
xchg
(bad)
popa
add
jmp
xor
ins
jge
ret
aad
adc
fcomp
fs
fcmovnb
jo
pop
int
xlat
test
pusha
inc
stos
push
ins
jle
adc
xlat
sahf
aaa
xor
mov
and
mov
pop
ret
(bad)
push
outs
popf
sti
sub
ret
sub
rcl
mov
cmp
jmp
jo
ins
lahf
mov
jno
and
inc
les
fs
retf
movs
ds
es
inc
mov
sti
ror
in
ss
stc
hlt
shr
add
enter
sbb
loopne
iret
les
cmps
mov
out
sub
mov
inc
and
pop
lahf
adc
pop
aad
push
dec
pusha
data16
in
sahf
push
mov
pop
nop
shl
mov
add
int3
sub
jp
jbe
outs
dec
add
mov
arpl
hlt
add
ins
mov
push
les
int
pop
shl
setle
push
xor
mov
sti
mov
jns
mov
push
aam
lods
xchg
enter
ror
jecxz
adc
fwait
xchg
int3
data16
out
jno
mov
fimul
enter
scas
loop
mov
sahf
test
(bad)
sar
mov
aad
stos
out
lods
add
add
out
out
dec
fidiv
je
jnp
mov
and
sar
inc
push
adc
cwde
or
(bad)
ficom
xchg
sbb
inc
lea
cmp
cmc
add
jl
fnstcw
repz
cmp
or
xor
ret
cmp
cmp
outs
xor
adc
dec
arpl
fnop
push
out
sti
inc
and
mov
or
ficomp
mov
sub
or
push
ins
movs
sub
cmc
mov
xchg
push
out
and
sbb
popf
sub
cmps
sbb
mov
mov
jo
and
scas
push
sub
xchg
ss
scas
cmps
sbb
xor
mov
push
and
push
lds
or
daa
loopne
fild
adc
out
aad
cmp
cmps
dec
xchg
xchg
(bad)
ror
cmp
push
add
pop
xor
add
hlt
sbb
(bad)
fwait
jnp
push
adc
inc
scas
jecxz
adc
dec
jns
sub
pop
pop
imul
push
inc
fst
or
mov
bound
lods
repz
lock
lea
push
sub
pop
retf
mov
cmp
xor
pusha
ins
xor
cmps
js
push
cdq
shr
fdivr
out
push
xchg
outs
scas
rcl
inc
(bad)
fcmovu
aas
dec
xchg
pop
rol
push
mov
mov
or
outs
rcr
hlt
jmp
out
rcl
in
fsubr
stos
clc
cmps
jg
inc
popf
cld
(bad)
fucomp
dec
loopne
jb
or
inc
je
bound
repz
lahf
ret
mov
(bad)
jmp
pushf
in
sub
xor
pop
ret
mov
adc
and
add
fstp
xchg
adc
mov
loop
push
sbb
add
jbe
dec
imul
arpl
in
add
stos
pop
lods
js
xlat
xchg
retf
dec
jb
mov
jp
adc
aad
popa
push
int
ret
(bad)
test
and
jp
sub
movs
fstp
lods
mov
pop
hlt
jle
inc
inc
in
add
fmul
(bad)
xchg
mov
jge
jmp
or
sub
jmp
mov
adc
and
imul
das
cmp
mov
mov
add
mov
sub
scas
loope
movs
pop
icebp
mov
div
xchg
in
lock
mov
cmp
and
aaa
mov
jmp
shl
stos
ins
scas
mov
mov
mov
xchg
dec
out
jecxz
ja
pop
xchg
fdiv
xlat
xchg
jle
xchg
pop
dec
mov
xchg
lock
aad
pop
dec
in
jmp
adc
movs
add
fidiv
arpl
xchg
(bad)
xlat
mov
nop
mov
inc
ja
movs
or
push
push
dec
std
gs
pop
daa
stc
push
pop
mov
sub
pop
fnstcw
not
xchg
scas
push
mov
call
sub
scas
mov
call
fdiv
sub
pop
test
das
es
jl
nop
fwait
outs
jg
mov
or
fwait
or
mov
fsubr
sti
push
mov
and
xchg
pusha
outs
ret
fild
hlt
leave
(bad)
push
push
pushf
mov
pop
mov
ficomp
jmp
je
inc
out
movs
in
pushf
or
adc
arpl
test
scas
mov
test
rol
pusha
rcr
arpl
sbb
stos
pusha
in
add
push
out
(bad)
ficomp
hlt
or
(bad)
mov
adc
fdivr
xor
daa
fist
addr16
and
and
stos
dec
aas
in
xchg
inc
mov
fld
aam
imul
jae
mov
daa
pop
jb
ret
aaa
dec
xchg
das
jecxz
enter
in
jmp
stc
dec
cmc
jecxz
sbb
movs
into
pop
or
je
outs
add
stos
dec
loop
push
mov
sahf
lds
or
(bad)
data16
and
xor
xchg
sbb
sbb
jb
(bad)
fisttp
pushf
into
mov
cmp
dec
js
js
cli
loope
test
push
cld
add
fstp
jle
and
arpl
shr
inc
jge
pushf
ret
xor
lds
addr16
or
or
mov
jo
adc
in
sub
data16
rcr
ins
mov
sbb
daa
pop
mov
mov
stos
xor
js
clc
push
jae
sbb
xchg
push
retf
test
in
sub
and
sti
cmps
sub
sahf
inc
(bad)
loope
push
push
ins
mov
xor
sub
(bad)
pushf
aas
pop
sti
or
sbb
push
sub
fsub
cmps
xchg
stc
jle
inc
mov
inc
iret
cmp
mov
inc
mov
cmp
mov
bound
ins
popf
outs
mov
(bad)
retf
pop
push
call
cmps
inc
sar
ds
arpl
in
(bad)
mov
test
in
scas
(bad)
lahf
sub
push
mov
push
xchg
dec
or
cmc
cld
jg
jae
das
mov
rcl
es
rcr
jecxz
cmp
jnp
add
ja
test
loope
imul
dec
mov
mov
and
add
sbb
jns
scas
adc
(bad)
rcr
jl
(bad)
or
ins
es
xor
cwde
mov
out
loopne
pusha
shl
mov
ficom
sbb
rcr
aaa
sbb
push
daa
sub
pop
movs
jo
cld
sahf
mov
movs
push
ja
push
push
cdq
push
pop
test
mov
and
pop
imul
sti
xor
add
inc
test
or
mov
mov
pop
stc
lahf
test
mov
pop
and
xor
mul
push
cmp
dec
(bad)
push
les
sti
test
push
add
fwait
aas
scas
ds
bound
xor
(bad)
push
adc
inc
pop
lds
inc
add
imul
imul
mov
ret
mov
and
inc
xor
sbb
dec
mov
xor
dec
xchg
retf
sbb
sub
leave
mov
sbb
sbb
fiadd
mov
popf
xchg
mov
mov
cld
pop
push
scas
add
push
retf
fsubrp
sbb
out
pop
inc
push
pusha
loope
paddb
ja
into
mov
repnz
sbb
pop
and
ins
pop
push
adc
xchg
xchg
xchg
push
cmp
test
cmp
int
repnz
dec
mov
sub
adc
lahf
xchg
vmovd
pop
mov
pop
dec
clc
jecxz
enter
xor
and
in
sbb
imul
aam
lea
and
test
pop
push
jo
jecxz
cli
push
fsin
mov
xchg
inc
mov
mov
sub
or
aas
call
ins
js
sar
cli
shr
xor
xchg
fld
hlt
jecxz
or
shl
fdivr
retf
stc
test
lds
push
add
mov
outs
ss
jecxz
cmp
arpl
hlt
call
mov
out
sbb
jle
mov
in
aas
xor
or
(bad)
ss
xchg
and
pusha
xchg
jp
add
dec
fidiv
loop
inc
shr
clc
dec
inc
mov
shl
mov
or
out
pop
jae
cs
in
push
sbb
(bad)
mov
cmps
retf
xor
add
adc
test
mov
in
and
and
adc
loope
fisub
fiadd
xor
jecxz
div
mov
cmp
leave
jb
shr
pop
jmp
loop
jp
sbb
or
cmps
pop
push
and
xchg
in
ja
stos
rcl
das
mov
test
jle
sub
jge
mov
jmp
pop
ds
test
ret
cmp
gs
sar
neg
pop
xor
inc
dec
ucomiss
in
pushf
fcmove
popf
add
hlt
inc
jnp
mov
push
sub
cld
das
cmp
push
ja
sub
fs
jl
xchg
out
sub
adc
inc
sub
add
retf
push
enter
sbb
fdivr
cmp
jae
xchg
pop
jne
xchg
fsubr
adc
rol
clc
int
fdiv
sub
inc
daa
hlt
jl
add
inc
cmp
outs
dec
mov
xchg
jne
push
std
xor
in
mov
mov
lahf
imul
push
dec
imul
dec
push
idiv
cli
test
xchg
xlat
das
jns
aam
aam
and
push
scas
dec
push
imul
jbe
xchg
aas
test
and
into
adc
push
adc
mov
add
outs
repnz
out
pop
mov
ds
addr16
cmps
jno
lods
fcmovbe
pop
pop
pop
hlt
in
int
inc
shl
mov
sbb
fld
gs
scas
mov
in
dec
sub
jmp
pushf
imul
out
sub
mov
cmp
retf
dec
out
js
pop
pop
call
ins
add
push
pop
mov
daa
pushf
xchg
fiadd
cwde
fcmovbe
loope
push
data16
add
call
call
scas
retf
inc
mov
add
dec
out
and
xchg
dec
fst
or
or
mov
mov
jmp
inc
jno
cmp
scas
push
sub
(bad)
sub
sbb
ds
retf
gs
aaa
test
dec
hlt
icebp
xchg
jno
popf
sar
fsub
mov
aaa
rol
pop
rol
sbb
stos
out
sbb
scas
xor
adc
xlat
sar
mov
sub
dec
enter
outs
in
ins
fidiv
arpl
pop
jno
mov
(bad)
lahf
inc
fisubr
add
inc
cs
jmp
and
jg
cmps
sbb
push
lea
ficom
cwde
pop
idiv
cmps
fwait
cmp
nop
cmc
cwde
psubsw
into
hlt
cld
and
jmp
add
adc
out
(bad)
std
stos
outs
jmp
pop
outs
ret
pushf
adc
xchg
sub
cmp
push
and
ins
call
jnp
daa
ret
shl
jb
into
ins
sbb
shl
(bad)
out
push
pop
cdq
adc
mov
jno
fisub
push
outs
xor
aaa
loope
(bad)
pop
push
ret
push
lods
addr16
cld
jp
and
xchg
cmp
or
push
scas
xor
aaa
mov
sbb
daa
xor
scas
jns
out
inc
out
xor
scas
out
movs
jp
bnd
sbb
int
jo
popf
push
or
ja
inc
mov
or
push
inc
outs
clc
(bad)
dec
(bad)
in
cmp
dec
aaa
or
es
jo
shl
clc
pop
sti
bound
fs
add
mov
mov
inc
push
xor
enter
mov
mov
pop
ins
dec
or
aaa
mov
mov
hlt
inc
into
rcl
push
xchg
sbb
in
stos
retf
cmps
int3
push
loope
and
rcr
retf
jl
div
adc
mov
push
test
inc
hlt
stos
dec
sbb
je
adc
enter
adc
xchg
out
sub
pop
fnstsw
pop
enter
mov
add
jp
lods
jnp
popa
mov
sbb
xchg
cmp
and
mov
mov
ss
cmp
int
sbb
mov
adc
test
mov
jnp
pop
mov
shl
nop
aas
call
aas
rcl
daa
jae
or
push
movntq
outs
fld
ins
in
sub
jp
xchg
imul
xchg
jg
xchg
shr
mov
shl
xor
dec
and
bound
adc
cmp
leave
enter
or
cwde
jecxz
jle
inc
retf
xor
(bad)
pop
inc
pop
dec
cmp
mov
es
mov
or
or
sqrtps
mov
cmc
or
paddw
(bad)
je
movs
adc
in
jg
and
in
add
leave
call
pop
ss
bound
out
sub
test
xor
mov
loop
sub
test
or
dec
sub
ss
out
jmp
fcmovu
aaa
(bad)
movs
sti
push
mov
add
sahf
fsubr
sub
test
sbb
jle
in
mov
ins
jb
int3
js
xchg
cmp
leave
in
jmp
mov
rcr
inc
out
sbb
or
nop
cmp
mov
ins
out
in
inc
sti
inc
and
mov
sti
sbb
repnz
jne
repz
xor
mov
fsubr
mov
pop
sahf
in
sti
mov
mov
jo
(bad)
mov
in
pop
icebp
pop
in
jb
cmovb
shl
add
lods
adc
sub
pop
pop
xor
adc
add
and
(bad)
ss
cdq
mov
add
ss
inc
cmps
mov
inc
shl
mov
(bad)
leave
pop
lahf
xchg
enter
fmul
mov
mov
and
retf
fsub
imul
or
stos
fs
xor
cs
lahf
inc
cs
scas
fwait
or
pop
mov
addr16
jmp
div
push
cld
mov
push
outs
mov
dec
enter
ins
ret
push
xchg
pop
mov
loopne
jp
mov
sbb
mov
div
daa
fnstsw
aam
(bad)
push
xlat
mov
cli
in
pop
arpl
xor
sbb
adc
test
in
add
mov
mov
fs
mov
jns
xlat
pop
mov
inc
movs
mov
xchg
adc
call
pop
ror
cld
pop
lahf
inc
sub
sbb
ja
dec
dec
arpl
scas
jmp
cmc
xlat
jg
inc
movs
xor
test
dec
cmp
jg
sar
xchg
or
not
in
and
gs
and
test
and
fild
in
rcr
add
sbb
rol
dec
mov
mov
mov
sar
push
push
push
leave
pop
aaa
push
mov
inc
push
cwde
das
mov
push
jne
sbb
mov
mov
jecxz
xchg
pop
fistp
inc
cmp
rol
mov
xor
add
fild
lea
retf
out
add
pop
mov
repz
fcmovbe
sub
lods
js
fwait
das
push
in
mov
(bad)
ins
pop
mov
aad
or
jnp
pop
mov
mov
ss
cmps
hlt
(bad)
loope
mov
fs
or
dec
in
scas
sub
xchg
(bad)
jbe
pop
imul
lea
ja
shr
mov
or
jl
pop
dec
mov
aam
sub
retf
and
mov
rcr
adc
cmp
xchg
jno
dec
add
cwde
pop
xchg
sbb
push
(bad)
mov
cmp
iret
shl
mov
iret
jp
aad
mov
sub
add
add
push
mov
jbe
sti
rol
jns
les
vorps
jmp
out
mov
adc
out
mov
sub
sub
cmp
mov
lea
cli
(bad)
fdivr
lea
ror
dec
in
dec
pop
bsf
out
retf
inc
sbb
mov
dec
dec
fisttp
or
retf
xchg
add
mov
xchg
aaa
cmps
imul
and
jecxz
mov
jge
int3
loop
mov
aad
inc
jmp
sbb
adc
cdq
inc
xchg
aaa
sub
dec
out
fwait
sub
(bad)
nop
inc
(bad)
gs
addr16
imul
(bad)
push
js
and
les
movs
aas
pop
mov
inc
repz
jge
mov
into
mov
ret
(bad)
or
leave
cmp
pop
cmp
jle
pop
ja
mov
dec
and
push
and
lahf
pop
pop
xchg
sahf
add
cmc
int
jmp
cmp
sbb
movs
inc
ja
pop
sbb
add
das
add
out
data16
sub
or
addr16
sbb
dec
outs
std
push
add
jmp
and
sti
sar
jg
stc
jmp
out
pop
cmps
mov
out
shr
nop
ins
sbb
or
inc
lock
and
scas
pushf
cmc
and
or
sbb
inc
test
add
(bad)
fdivp
cld
push
add
mov
jl
int3
sbb
pop
dec
or
and
loope
pop
sar
outs
jmp
iret
adc
push
dec
sub
loop
in
iret
push
int
xchg
sbb
and
scas
jno
dec
jnp
les
mov
test
mov
xchg
ret
push
ins
leave
nop
or
dec
xor
enter
sbb
je
xchg
push
stos
push
ret
mov
mov
sahf
pusha
cmp
out
popf
sub
inc
inc
das
mov
inc
lods
xor
daa
pushw
xor
pusha
retf
sub
dec
jmp
jp
shl
xchg
jmp
and
cmp
push
fbld
stos
mov
mov
dec
loopne
push
xlat
bound
mov
addr16
cmps
mov
in
addr16
(bad)
ja
mov
jno
cmps
jmp
pushf
cmps
cli
(bad)
mov
sbb
push
(bad)
mov
jnp
xchg
hlt
cmp
xor
lods
cmp
xchg
inc
mov
lds
in
(bad)
sahf
or
loopne
xor
dec
mov
dec
jmp
iret
loop
fidivr
repz
mov
movs
gs
mov
adc
push
xchg
sub
fstp
lock
cli
iret
cmps
dec
xchg
sbb
mov
test
push
jno
in
loop
mov
lea
mov
adc
int
mov
in
call
retf
mov
iret
aad
cmp
int
inc
hlt
dec
clc
inc
cs
inc
pop
ins
and
stos
adc
dec
out
(bad)
imul
mov
sbb
mov
sub
mov
ss
retf
jno
jle
xor
mov
movs
sbb
inc
clc
xchg
add
mov
pop
mov
ffreep
ret
jg
xor
inc
adc
mov
mov
push
fmul
sub
ins
iret
pop
jmp
xchg
(bad)
out
das
ds
cmp
ffreep
in
in
sub
push
jnp
xor
push
lods
xlat
call
enter
push
(bad)
inc
ret
popf
mov
pop
fimul
pop
test
mov
and
fsubr
add
xchg
(bad)
shr
in
rcr
pop
inc
xchg
fnstcw
sub
pop
(bad)
fsub
and
nop
popa
xchg
push
sbb
xor
or
fdivp
push
pop
lea
hlt
mov
icebp
loope
outs
pop
mov
or
mov
xor
(bad)
mov
dec
iret
and
inc
out
int
sar
xor
addr16
fs
mov
or
dec
and
fcom
scas
sbb
mov
jle
xlat
loop
lds
mov
dec
inc
jno
or
ret
mov
in
jge
or
out
jl
retf
test
xor
jmp
les
xor
mov
test
test
div
mov
sub
adc
cmp
retf
cwde
jp
pop
add
cmc
xor
inc
fs
es
call
inc
cmp
cld
or
inc
mov
out
push
push
jle
sub
mov
push
dec
xor
xor
int
frstor
lea
adc
(bad)
fwait
loop
retf
sub
fs
adc
mov
adc
mov
mov
or
out
scas
lock
xor
sbb
jmp
cld
mov
cdq
lahf
sub
xchg
lods
lock
sahf
sub
inc
jle
dec
sub
mov
mov
and
ins
not
mov
push
stos
push
push
lods
dec
daa
adc
(bad)
popf
lahf
sbb
jmp
add
xor
xchg
jne
stc
push
or
repz
cmp
pop
lahf
test
add
or
mov
xor
stos
xchg
out
(bad)
dec
or
mov
ret
xchg
ds
dec
das
pop
sub
shl
in
or
cmp
add
(bad)
push
arpl
cmps
and
and
xor
movs
add
push
iret
jl
jg
and
sbb
stos
xchg
(bad)
push
imul
sbb
lds
sub
push
addr16
repz
pop
sub
je
ss
jmp
scas
out
adc
jmp
out
outs
jbe
sbb
mov
test
xchg
pop
dec
mov
movs
mov
inc
in
in
out
aam
jae
loope
pop
stos
jg
mov
mov
inc
daa
iret
xor
push
imul
lods
scas
xor
sub
mov
call
pop
cmps
stos
(bad)
sub
push
jg
xor
cmps
ins
retf
test
sub
stc
jb
fwait
aad
xor
in
into
enter
add
push
jne
(bad)
cmp
or
movs
mov
(bad)
imul
imul
fistp
pop
or
push
imul
pop
push
or
mov
rol
cmp
outs
shl
dec
mov
push
das
stos
js
scas
imul
loopne
xchg
mov
add
ret
pushf
in
dec
ss
or
inc
and
rol
adc
mov
(bad)
sub
push
mov
nop
xchg
int
sub
rcr
pushf
cmps
std
or
mov
mov
inc
and
stc
add
xchg
jmp
sbb
fiadd
fadd
xchg
dec
leave
add
fidivr
adc
fxch
mov
rol
lea
and
dec
cmps
out
ficomp
and
(bad)
push
jo
out
inc
rcl
sahf
cli
jbe
es
xchg
push
stc
test
fstp
xchg
jnp
mov
stc
add
jle
cmp
idiv
shl
into
test
cmp
in
jmp
or
pop
jnp
xchg
jl
push
dec
push
fnsave
and
rcr
push
jbe
xor
mov
fld
add
or
and
xor
sbb
dec
adc
cdq
and
jmp
mov
aam
ror
jno
dec
(bad)
mov
inc
not
cld
pop
ins
in
jne
cld
mov
(bad)
out
mov
inc
dec
dec
xor
es
out
enter
fisttp
sub
lock
fsubr
fs
jmp
push
or
mov
fs
xor
js
ins
fmul
call
adc
lahf
pusha
rcr
(bad)
cmp
sbb
aas
jl
push
(bad)
cld
retf
mov
adc
into
cdq
call
pusha
ret
and
or
mov
add
fdivr
jmp
or
sti
mov
arpl
cwde
pop
clc
fst
and
shl
out
ja
loope
scas
cmps
shl
pop
dec
add
push
stc
cmps
mov
ror
dec
mov
add
mov
push
mov
ror
inc
mov
push
mov
je
mov
pop
div
push
(bad)
stos
outs
int3
push
xor
popf
and
and
aas
push
push
push
loope
push
or
mov
arpl
imul
into
das
pushf
leave
lods
std
lods
add
cs
sub
xlat
push
call
add
xchg
popa
imul
mov
cmp
dec
xor
repnz
fisub
sbb
mov
inc
or
pop
and
inc
dec
push
xchg
sahf
mov
xor
xor
out
jecxz
(bad)
adc
and
lea
test
add
outs
mov
add
sbb
or
shl
mov
cld
pop
into
pop
jb
mov
(bad)
out
inc
lahf
les
mov
shr
test
sub
movs
cmps
pop
sub
adc
jo
aas
mov
pop
lea
js
or
inc
sub
jae
mov
lahf
pop
pop
xor
push
cli
shl
sar
test
ins
aas
fsub
cmp
stos
push
pusha
xor
lods
mov
fld
mov
jmp
cld
pusha
shr
gs
pop
fidiv
movs
dec
jo
seta
xchg
inc
push
ret
and
mov
push
jmp
sbb
stc
mov
push
adc
xlat
dec
mov
xor
ficom
fiadd
icebp
add
cdq
bound
push
fisub
and
jbe
dec
test
xor
aad
mov
xor
shl
push
mov
cmps
aas
inc
cmp
(bad)
mov
push
fdivr
pop
into
sub
mov
ds
clc
sbb
cmp
(bad)
out
xchg
stc
lods
fsub
int3
xchg
fsub
inc
inc
ror
cmp
out
(bad)
in
das
or
pop
xor
fmul
clc
mov
mov
jb
inc
push
adc
mov
or
movs
leave
clc
lods
mov
jmp
adc
fucomp
dec
gs
stos
aad
inc
cmc
leave
adc
scas
xchg
scas
jno
mov
outs
mov
jb
dec
push
mov
test
loopne
mov
lods
movs
mov
mov
sbb
lds
movs
mov
aad
lahf
aam
sbb
iret
add
ins
sahf
inc
mov
xlat
push
dec
mov
cld
out
test
jg
sahf
imul
(bad)
out
fstp
mov
xor
xchg
aas
mov
sub
jo
pop
test
jbe
lods
mov
sub
jecxz
cld
inc
clc
sti
xor
xchg
sub
pop
cmp
out
ret
sub
nop
das
inc
out
pop
imul
mov
cmc
jge
xchg
cdq
dec
jecxz
mov
std
push
sbb
outs
adc
mov
cwde
mov
push
adc
xchg
sub
jg
mov
ja
es
mov
lahf
inc
jmp
bound
rcr
sub
pushf
push
push
cmp
dec
mov
sbb
pop
cwde
push
pusha
popa
xchg
push
repz
rol
outs
xor
jle
cli
mov
rcr
pop
mov
mov
cmp
movs
xchg
pushf
test
imul
loopne
sbb
test
mov
xor
ror
jp
adc
arpl
mov
popa
or
jmp
mov
adc
repnz
mov
xchg
push
add
adc
dec
sub
pop
add
loop
and
xchg
js
push
retf
(bad)
jb
push
(bad)
push
aad
jg
jle
leave
dec
cld
ret
sbb
rcl
call
test
fst
mov
pop
pop
sub
cwde
call
out
call
ss
mov
jmp
iret
adc
loope
and
call
xchg
or
dec
push
and
cmp
loop
jb
scas
adc
sub
push
xchg
scas
inc
xchg
sbb
nop
in
sub
inc
mov
rol
(bad)
fsubp
retf
cli
mov
mov
or
data16
dec
xor
cdq
pop
mov
pushf
fild
mov
sbb
outs
sbb
xchg
or
dec
scas
or
inc
cli
outs
ins
pop
mov
rcr
push
cld
iret
xchg
stos
adc
sbb
pop
cli
jns
loope
arpl
xor
cmp
cwde
ds
iret
jecxz
inc
stc
in
cmp
fucomp
ss
or
sbb
add
(bad)
je
xchg
mov
lahf
mov
inc
jbe
pusha
sahf
cmp
pop
inc
sub
xchg
xlat
in
sub
clc
subps
lods
mov
xor
cmp
push
movs
(bad)
scas
call
aaa
pop
xor
jecxz
adc
xor
sub
stos
mov
dec
std
in
mov
cmp
mov
mov
push
neg
cmp
into
push
add
adc
aaa
pop
mov
and
add
nop
pop
inc
repz
imul
adc
scas
int
pop
add
add
mov
dec
sub
int
pop
add
or
mov
lea
push
mov
inc
jb
jnp
jno
jge
jne
jmp
addr16
and
cmp
ret
mov
ret
add
sub
(bad)
ins
pusha
rcl
imul
aaa
dec
outs
push
neg
jp
ret
outs
xlat
call
mov
scas
into
xor
in
movs
add
cmc
mov
push
cmps
add
loope
mov
(bad)
jl
sub
mov
adc
mov
sbb
push
xchg
pop
outs
shl
pop
nop
fistp
cld
ja
fs
push
xchg
outs
not
push
mov
dec
fsubr
cs
dec
or
push
jns
cmp
jb
mov
mov
mov
xchg
sub
dec
pop
mov
dec
enter
jae
pop
and
dec
add
mov
stos
mov
mov
rcl
popf
pop
and
and
dec
cli
ret
call
mov
push
cs
int
fld
inc
mov
aas
sbb
sub
test
jp
xchg
push
out
(bad)
not
add
jmp
add
into
fadd
push
lods
push
jno
pop
pop
cmps
mov
scas
retf
mov
(bad)
mov
mov
lods
cmps
mov
lods
cmp
in
jno
lahf
push
jp
movs
cli
mov
adc
nop
xchg
lods
out
sbb
dec
jne
jmp
pop
and
mul
div
aas
ins
and
(bad)
setge
enter
sar
sbb
sbb
push
in
(bad)
mov
and
and
pop
sub
mov
push
stos
es
add
enter
scas
push
scas
adc
pushf
mov
add
arpl
mov
jp
in
mov
sbb
push
(bad)
cdq
(bad)
inc
cwde
movs
inc
mov
add
push
fistp
int3
retf
rcr
sbb
outs
mov
push
popf
rcr
mov
neg
jmp
jno
jg
movs
into
push
ins
adc
cld
std
add
sbb
cwde
cmp
pop
or
jne
cs
cmps
(bad)
add
inc
sar
adc
test
repnz
mov
imul
retf
imul
pop
test
ins
lock
jmp
sar
imul
pop
cmp
jmp
push
and
add
jmp
xchg
sub
push
cmps
inc
jnp
add
pop
aas
mov
(bad)
pop
mov
stos
cmc
shl
and
int
jbe
xchg
dec
pop
cmp
in
mov
inc
jg
mov
cmp
mov
leave
cli
sub
pop
clc
pop
fstp
ror
scas
jge
inc
retf
ret
lea
repnz
dec
sbb
pop
popa
fst
sub
sbb
cmp
loopne
inc
ds
add
test
das
retf
pop
cmc
add
mov
cdq
and
push
add
fidivr
daa
lods
icebp
in
cmp
sbb
mov
pop
shr
retf
dec
aam
fcmovbe
mov
inc
jge
cmp
jbe
or
sub
pop
sti
icebp
sar
add
xchg
mov
or
inc
xchg
push
nop
ins
mov
jmp
or
xor
or
test
jmp
cdq
sbb
xor
xchg
enter
jae
cmp
nop
mov
dec
or
add
cmp
add
push
lock
xchg
sahf
xchg
xchg
sahf
lahf
(bad)
pop
aas
(bad)
pop
add
mov
lods
cmp
pusha
in
jmp
sbb
fcom
outs
lods
es
(bad)
xor
and
xor
jecxz
iret
popa
dec
out
cmp
or
push
sbb
aas
sub
jno
les
call
imul
cmp
data16
fisub
ds
and
mov
inc
mov
mov
(bad)
scas
lods
mov
xchg
pusha
dec
into
or
or
push
and
hlt
arpl
out
dec
mov
xor
aaa
pop
add
popf
mov
mov
adc
adc
repz
xchg
sub
jno
nop
lods
pop
adc
mov
test
xor
arpl
sub
dec
ins
sahf
jae
xor
push
fisubr
ss
mov
or
jmp
mov
cs
fucom
jmp
daa
push
sbb
sub
imul
or
sub
lds
push
rol
and
mov
out
inc
jae
arpl
into
pop
sub
ss
dec
in
mov
inc
test
sahf
dec
and
bound
stos
dec
cmp
movs
xchg
movs
outs
pop
int3
jecxz
rcl
test
(bad)
jne
mov
push
push
pushf
cwde
mov
in
(bad)
bound
fs
ror
push
and
mov
div
inc
inc
test
adc
movs
sub
mov
sbb
mov
push
(bad)
js
addr16
into
sbb
arpl
out
jp
fs
lods
jp
fucomp
xchg
and
xchg
jle
retf
push
ja
and
shl
mov
repz
retf
xor
and
push
into
aaa
mov
mov
cmc
inc
add
out
push
xchg
add
in
(bad)
fadd
outs
ret
xor
je
jmp
pop
fdiv
xor
xchg
adc
ret
xchg
xchg
data16
mov
jns
inc
(bad)
popa
and
jno
hlt
(bad)
fmul
sbb
mov
xor
aad
mov
mov
xor
std
shr
add
loopne
inc
lods
sbb
test
div
mov
int3
push
ffree
test
stos
add
pop
or
ret
adc
test
push
iret
cdq
das
pop
int
mov
mov
mov
ret
bound
pop
inc
stos
(bad)
or
jno
iret
sbb
aaa
adc
jns
in
xchg
jmp
fadd
cmp
sbb
ret
xchg
in
push
cmp
imul
cmpxchg
cs
outs
cmps
and
imul
inc
ret
xchg
mov
stos
pop
xor
pop
enter
fnstsw
sbb
imul
pop
mov
or
aad
xor
xchg
sbb
mov
rol
sub
dec
or
imul
cs
cmp
xor
in
mov
adc
add
cmp
ja
jne
mul
pop
mov
sti
push
sbb
or
sub
pop
push
xchg
jle
lods
or
movs
sahf
stos
mov
(bad)
movs
adc
push
loope
loope
adc
pop
sbb
pop
push
push
or
inc
scas
add
dec
test
push
jae
and
popf
mov
pop
inc
inc
add
cwde
ss
fcom
fisub
sbb
ss
mov
sub
test
aam
jmp
pop
(bad)
in
(bad)
mov
inc
mov
inc
push
fisub
iret
or
add
mov
out
repnz
inc
push
sub
retf
inc
pop
sahf
or
repz
jmp
in
cmp
push
mov
inc
and
sar
jne
jb
and
cmp
movs
fbstp
xchg
mov
mov
test
mov
gs
mov
hlt
retf
cli
stos
dec
aaa
xchg
retf
cli
cli
mov
pop
shr
push
gs
adc
scas
leave
push
enter
enter
mov
mov
fisttp
pushf
test
pop
cmp
xor
inc
mov
adc
inc
mov
jbe
or
mov
pop
xor
or
test
cmp
test
pop
int3
and
push
mov
push
leave
mov
and
sub
xor
adc
retf
jp
cli
xor
popf
pushf
ins
inc
jecxz
jb
push
mov
lods
cmc
mov
mov
mov
push
std
lock
imul
les
push
mov
int
loop
cmp
aaa
out
in
aad
adc
xchg
and
scas
jns
xor
rcr
popa
call
sub
mov
pop
cmp
aaa
mov
mov
xchg
repz
pop
js
mov
pop
mov
sahf
push
ins
jbe
loopne
retf
leave
shl
mov
mov
jg
enter
cdq
ror
xor
inc
iret
xor
mov
out
shl
or
sbb
or
push
and
out
jbe
test
pop
(bad)
cmps
cmp
sub
(bad)
dec
pop
gs
mov
cmp
ins
clc
push
push
and
retf
dec
pop
out
ds
jg
repz
shl
pop
not
aad
call
push
ret
cmp
pop
cwde
sub
leave
int3
push
and
push
int3
loopne
dec
shr
repnz
add
jecxz
jmp
xor
xchg
(bad)
cld
movs
mov
mov
cmc
add
mov
jle
sbb
rol
xor
mov
sbb
jnp
cmp
add
lods
pop
pop
add
add
adc
shl
or
inc
cmp
movs
stos
push
xor
jne
aad
(bad)
xor
pop
cli
sahf
es
jge
sub
pop
pop
add
xor
mov
leave
cmps
stos
xor
adc
pop
and
push
mov
and
or
pop
xchg
pusha
xor
cmps
int3
stos
aam
xchg
xchg
push
cmc
mov
into
fbld
lea
loope
cwde
cmps
in
pop
mov
mov
inc
push
mov
sbb
dec
inc
fs
sub
movs
es
add
and
out
dec
das
and
adc
and
pushf
mov
or
adc
out
jae
inc
aam
clc
das
arpl
or
xchg
test
mov
pusha
sbb
push
fisttp
add
cmp
push
loopne
pop
jno
pop
in
sbb
cmps
cwde
pushf
out
adc
dec
js
sbb
jb
in
mov
inc
xchg
test
stos
xchg
in
or
daa
pushf
test
imul
fiadd
jl
repnz
jo
add
jmp
lea
fiadd
ja
mov
ins
adc
popf
sahf
bound
(bad)
mov
lods
out
lahf
or
and
push
jmp
jge
sbb
out
cmp
add
popf
jo
and
and
fisub
call
sub
mov
xchg
sub
movs
and
pop
sahf
dec
add
lea
jmp
pop
mov
mov
ins
int3
out
mov
popf
pop
int
sub
int
fwait
xor
ret
lahf
clc
adc
xchg
scas
xchg
sub
cld
les
mov
mov
cdq
loope
fsub
in
in
cmp
fucomip
xor
add
push
imul
test
mov
jno
push
jmp
jns
aam
pop
ins
fwait
cmp
sbb
mov
jne
xor
mov
dec
icebp
cmp
pop
iret
pop
mov
and
mov
pop
and
jbe
push
rol
fwait
add
pop
and
fwait
mov
pushf
fcomi
fsubr
mov
(bad)
adc
lds
bound
jmp
cdq
aaa
mov
int3
std
push
sbb
add
cmp
pop
stos
inc
call
fistp
dec
jnp
(bad)
clc
push
stc
fdivr
lods
aad
dec
les
leave
mov
outs
(bad)
adc
xor
out
sar
sbb
and
ror
scas
xchg
adc
lahf
das
sub
shl
push
inc
dec
pop
cmc
push
loopne
cmps
xor
xor
fxch
inc
stos
test
outs
sti
sub
jmp
mov
xchg
jl
adc
jb
adc
push
add
sub
sub
mov
fwait
sti
in
mov
outs
out
push
pop
xchg
pop
imul
aas
jg
xchg
cmp
jle
retf
daa
cmc
rcr
mov
jg
movs
sbb
xchg
data16
pop
or
and
mov
adc
stc
leave
add
popf
or
in
je
or
repz
mov
jno
scas
mov
dec
shl
fwait
ret
pop
jo
mov
dec
or
mov
or
cwde
shr
aam
xor
mov
mov
es
aam
jl
sub
loop
mov
push
adc
shl
iret
loopne
push
fwait
loope
lahf
icebp
std
push
jnp
pop
lea
mov
aas
pop
es
imul
imul
hlt
cmps
jmp
add
jle
div
outs
rol
push
jmp
inc
iret
jle
daa
xchg
adc
push
fsubr
xchg
jecxz
das
pop
sub
rol
xchg
cs
mov
and
repnz
inc
and
jge
pop
jne
fcomp
adc
dec
mov
mov
loope
ds
push
inc
ficom
jle
test
call
das
add
or
sbb
and
push
fs
xchg
mov
push
xchg
or
retf
jne
sar
add
sbb
sub
xchg
xor
cmp
aad
lds
mov
lods
cdq
outs
push
push
aam
out
cmp
div
xor
rcr
dec
stos
mov
jle
fmul
add
or
icebp
cmp
(bad)
and
hlt
mov
ror
stos
mov
lods
es
nop
and
pop
popf
mov
mul
jbe
xor
push
push
lock
inc
sbb
js
cmp
mov
test
test
pop
jne
dec
mov
cmp
xor
scas
dec
sbb
mov
sbb
mov
mov
js
mov
fnstsw
icebp
xchg
mov
xchg
xchg
icebp
cld
aas
xchg
test
adc
loope
adc
shr
clc
cmp
imul
mov
mov
stos
jae
das
add
jg
scas
lea
daa
mov
test
jge
punpcklbw
mov
fld
xor
ins
push
mov
(bad)
cld
mul
and
mov
into
adc
mov
int
call
nop
jg
or
stos
arpl
sub
mov
jle
nop
cdq
(bad)
pop
clc
add
(bad)
cdq
and
xor
push
push
push
ss
je
adc
mov
out
mov
test
fxch
aas
inc
dec
jmp
mov
mov
(bad)
mov
adc
add
bound
mov
stos
mov
test
dec
pop
bound
add
mov
inc
sbb
retf
lods
imul
es
stos
jns
imul
adc
mov
dec
dec
and
test
push
mov
not
icebp
jmp
pop
ret
dec
test
jge
sub
inc
mov
push
or
pop
inc
imul
cmp
xchg
cdq
xchg
inc
dec
cdq
dec
and
and
retf
repnz
scas
ficom
pop
lahf
sbb
test
imul
sub
cdq
addr16
test
or
or
xchg
out
sbb
push
and
inc
popf
lahf
ins
aas
mov
ss
ja
repz
sbb
(bad)
data16
jle
iret
test
jne
inc
inc
into
sub
cmp
jne
mov
and
popf
pop
add
jb
mov
js
mov
leave
jecxz
sbb
mov
ins
fstp
jl
out
imul
xchg
stos
xor
xchg
adc
adc
loop
fstp
push
inc
ror
jns
clc
pusha
clc
int
std
in
mov
pop
out
aas
push
xchg
int3
jns
std
or
jbe
pop
out
jo
push
sbb
in
inc
inc
sub
scas
and
and
sub
push
retf
cwde
fadd
stos
add
add
xlat
cmp
cdq
aad
js
sub
cmp
or
pop
add
push
mov
fdivr
sbb
and
jo
add
div
in
sub
add
stc
jg
or
dec
inc
inc
add
sub
(bad)
movs
ins
mov
ins
inc
ret
jb
shl
(bad)
rol
cmps
xor
popa
mov
push
pusha
mov
push
aas
arpl
dec
cmp
mov
ficom
loope
cmp
fwait
out
inc
adc
aaa
pop
push
jne
mov
sbb
cmps
xor
mov
loope
aas
mov
fstp
enter
mov
jns
add
adc
fwait
mov
leave
loop
add
in
sbb
and
adc
data16
cmp
sbb
idiv
in
outs
xor
xchg
mov
dec
fs
and
fwait
pop
or
out
sysenter
mov
jp
cmc
out
hlt
(bad)
mov
jp
pop
ss
call
push
xor
addr16
movs
adc
push
sti
lahf
imul
mov
dec
sub
in
push
stos
cmp
(bad)
xlat
xlat
mov
scas
and
jnp
push
mov
xchg
add
pop
mov
fwait
adc
sub
cmp
mov
js
jnp
xlat
mov
leave
adc
sbb
int3
push
mov
xor
test
(bad)
jmp
je
gs
dec
or
fisubr
(bad)
stos
mov
leave
sbb
add
(bad)
icebp
in
xchg
or
dec
mov
sar
les
pop
mov
add
ret
mov
pop
sub
test
mov
sbb
test
add
sub
cmc
dec
in
mov
ja
cs
inc
inc
cld
mov
mov
fild
lea
inc
xchg
idiv
sub
xchg
lods
arpl
sub
scas
mov
gs
(bad)
iret
enter
xchg
pop
fsubr
imul
cmp
and
sub
stc
dec
and
mov
sub
inc
adc
xchg
mov
idiv
xor
fs
xor
lods
cmps
fld
in
inc
dec
push
enter
lods
iret
repz
xchg
jg
dec
stos
xchg
mov
push
cmp
adc
push
adc
jbe
loope
test
ins
leave
out
test
jmp
sar
imul
sahf
inc
jle
pop
mov
sub
int
or
or
adc
ja
mov
jecxz
jle
xlat
cli
call
mov
inc
jno
pop
and
sbb
add
retf
or
ret
sub
mov
out
js
ret
std
pushf
adc
lahf
es
push
movs
and
cdq
mov
test
mov
mov
jb
xchg
xchg
fisub
shr
mov
xchg
inc
dec
mov
pop
lods
adc
mov
(bad)
push
xor
pop
or
arpl
xchg
pop
movs
int3
adc
xchg
sbb
movs
add
or
mov
mov
fidiv
rcl
cdq
jmp
push
das
stc
fmul
cwde
call
rcr
xor
adc
pusha
sbb
repz
movs
xor
fild
ins
out
adc
jmp
mov
push
push
inc
ror
mov
je
jl
out
cdq
jnp
fidiv
mov
cdq
jns
loopne
pop
jnp
mov
data16
in
xlat
pop
inc
sub
pop
mov
fsubp
jmp
loop
inc
cld
aas
pop
aam
(bad)
sub
out
mov
jns
out
aad
in
(bad)
dec
inc
push
jno
add
pop
leave
push
dec
es
cld
out
mov
or
push
jge
shl
(bad)
movs
lds
add
and
les
lock
mov
imul
retf
dec
dec
das
add
mov
int
repz
push
cld
sub
inc
fs
xchg
stos
int3
or
push
stos
ret
xchg
inc
in
add
es
cmp
es
loopne
xchg
push
jmp
popf
sahf
sub
sub
sti
dec
je
and
ins
push
xchg
hlt
fdiv
xrelease
pop
imul
(bad)
(bad)
push
jp
lods
(bad)
rol
stos
(bad)
mov
movs
sub
and
xor
jns
pop
inc
or
imul
push
sub
fs
mov
retf
imul
adc
inc
int
and
jo
pop
inc
mov
aad
jae
dec
mov
ds
xchg
stc
add
movmskps
dec
lock
call
cmp
fiadd
xchg
adc
das
call
out
inc
jns
aad
sub
mov
mov
loopne
sbb
fwait
jp
int
sti
cmp
adc
outs
push
popa
mov
out
or
inc
outs
iret
shl
or
mov
mov
adc
(bad)
popa
(bad)
mov
call
cmp
shr
cs
imul
loopne
bound
sti
mov
pop
daa
add
fdivr
add
and
jno
in
sbb
leave
pop
xchg
xchg
mov
or
jp
stc
stos
and
or
ds
repnz
gs
(bad)
push
inc
jl
pusha
lods
fsubp
aad
cdq
aad
sbb
call
adc
mov
pushf
mov
mov
sbb
mov
retf
mov
rcl
inc
call
inc
jae
xchg
jae
int
cmp
les
aam
ror
pushf
leave
retf
push
cs
adc
adc
ret
pusha
mov
fld
push
(bad)
xor
ret
cmp
xor
mov
pop
(bad)
cld
jmp
retf
ins
loop
xchg
daa
sub
push
inc
xor
jae
sar
dec
lock
(bad)
jmp
lods
mov
add
sbb
and
dec
push
loope
add
pop
lock
cmp
aas
dec
cmc
out
addr16
or
in
(bad)
xor
je
stos
out
adc
hlt
push
scas
push
std
rol
mov
mov
jge
mov
retf
movs
mov
add
push
xor
je
ffreep
imul
and
adc
xchg
and
dec
lock
mov
xor
jo
subps
pop
rcl
into
xor
dec
data16
jl
lds
push
jns
dec
and
pop
xchg
xchg
push
retf
sbb
movs
mov
and
pop
push
imul
movs
loope
cli
xchg
aaa
cwde
outs
outs
sbb
pop
add
sub
test
xor
adc
outs
xor
xlat
dec
into
dec
and
aaa
mul
cmc
mov
(bad)
cli
cs
fmul
inc
retf
inc
repz
pop
jmp
scas
out
pusha
jecxz
push
imul
jb
push
or
cmc
pop
idiv
mov
(bad)
mov
jbe
and
sub
outs
inc
xor
lock
in
aad
dec
jbe
mov
cli
sub
xchg
fadd
push
outs
je
inc
(bad)
pop
pop
loopne
push
(bad)
js
cmp
cmps
jae
aam
cmc
ret
ret
sti
xchg
mov
das
enter
lea
xchg
pushf
xchg
rep
xor
idiv
adc
ins
fisubr
pop
into
out
rol
jne
pminub
sti
in
push
aaa
mov
aam
fiadd
call
mov
mov
iret
out
mov
scas
push
fwait
lahf
stos
cmps
and
mov
outs
or
fdivr
movs
adc
sbb
push
xlat
adc
pop
xor
or
inc
xchg
and
pop
mov
or
inc
sub
add
(bad)
fist
cmovns
fwait
aad
xor
scas
add
push
test
push
pop
sar
imul
js
sar
mov
cmp
xor
das
(bad)
test
cmc
daa
add
and
sar
mov
daa
cdq
addr16
dec
sub
and
dec
not
push
je
xor
dec
sar
push
test
cwde
inc
mov
sub
cmp
je
push
xchg
out
out
xchg
mov
lds
xor
xor
and
push
xchg
(bad)
mov
ins
cmp
icebp
adc
push
in
test
fwait
jo
jecxz
mov
in
mov
jl
xchg
xchg
mov
shl
mov
dec
test
pushf
jo
fstp
mov
mov
in
rcr
or
test
xchg
test
add
imul
push
jae
add
aad
mov
add
push
sbb
stos
jl
cmps
out
mov
test
inc
cmp
icebp
jmp
xchg
gs
and
outs
clc
pop
aas
inc
hlt
lods
mov
js
imul
push
jle
lea
xor
cmc
mov
mov
push
inc
mov
add
pop
mov
and
es
repnz
sub
pop
cmps
not
mov
lods
mov
push
xchg
adc
mov
mov
rcl
fwait
mov
push
jmp
inc
icebp
int
jo
jno
out
cmp
add
call
retf
xchg
and
repnz
loope
lock
xor
xor
(bad)
push
cs
dec
or
pop
jae
pop
add
adc
and
mov
jl
test
into
sub
jge
xor
bound
in
mov
rcr
scas
xor
ja
mov
(bad)
fist
call
sbb
add
mul
and
jp
xchg
jmp
cs
or
(bad)
loopne
pop
mov
pop
addr16
shl
cmp
inc
call
inc
ret
(bad)
pop
imul
sbb
cmps
inc
aam
xor
pop
frstor
mov
sbb
ficom
mov
ins
mov
lock
dec
and
mov
and
push
jg
dec
dec
jno
loopne
cmp
jns
mov
adc
sub
hlt
push
cmps
movs
popf
lea
jno
in
jo
xor
push
mov
pop
mov
xchg
in
sbb
sbb
jnp
cmps
outs
xor
xor
dec
ss
jmp
and
xor
sub
mov
sub
pop
retf
mov
dec
mov
jmp
paddsb
xor
xchg
out
jbe
push
xlat
mov
xchg
add
enter
cmp
cmp
fdivr
mov
ss
xor
hlt
push
in
mov
ret
ret
dec
lock
stc
mov
icebp
scas
cmps
push
test
inc
mul
mov
mov
jmp
mov
xchg
mov
inc
ds
adc
inc
adc
enter
outs
dec
xor
inc
retf
mov
push
push
popa
lock
mov
pushf
sub
ja
mov
lock
cdq
aaa
adc
mov
ins
inc
lahf
or
pop
inc
mov
adc
sub
pop
call
mov
and
addr16
out
and
mov
retf
cmp
sbb
call
pop
jmp
dec
aaa
bswap
aam
neg
push
mov
add
leave
test
jg
xchg
imul
std
add
sub
popf
loop
cmps
push
dec
or
je
add
mov
pop
or
mov
push
mov
add
scas
xor
push
bound
mov
pop
rcr
xchg
cli
push
ss
out
sar
std
not
(bad)
adc
les
mov
stc
fs
clc
rcl
inc
stos
loop
cmp
(bad)
xchg
adc
or
call
and
xchg
push
dec
cmp
jmp
jbe
aas
jmp
sbb
neg
imul
fistp
cdq
xchg
adc
std
dec
ror
test
sbb
mov
es
mov
push
dec
sub
mov
push
cmp
scas
push
xor
mov
shr
dec
shl
(bad)
jmp
and
xchg
sbb
push
jmp
fnsave
pop
ins
sbb
pop
jae
sub
in
jge
sub
sbb
push
mov
push
add
call
enter
and
pop
nop
in
xchg
xchg
cmp
sub
and
pop
sub
push
fldenv
add
(bad)
dec
bound
loopne
xchg
fwait
dec
push
cwde
inc
nop
and
imul
sub
mov
and
jno
adc
aas
iret
xchg
or
add
xchg
and
dec
loop
or
pop
or
push
xor
aam
pop
dec
(bad)
jmp
dec
out
stc
inc
bound
cmc
jnp
outs
ds
call
repnz
xchg
imul
push
cmps
cmc
clc
jo
push
or
scas
popa
push
xor
jge
adc
lods
sbb
add
mov
fsub
ins
js
mov
cmp
pop
push
push
sub
adc
cmp
fs
xchg
(bad)
iret
ja
inc
ds
jecxz
mov
gs
fdiv
mov
icebp
and
mov
sub
sbb
jbe
jle
pusha
cld
pop
fnstcw
jbe
mov
fdiv
inc
and
jge
xor
xor
sbb
movs
mul
push
movs
shl
xor
adc
pop
jecxz
push
sbb
jno
sub
and
adc
inc
xchg
mov
pop
bnd
sub
push
test
rcl
and
inc
lahf
fwait
gs
mov
push
jmp
clc
iret
mov
mov
sbb
xor
jle
retf
lds
sbb
adc
mov
xchg
cmc
shl
add
adc
rol
adc
jno
or
fisttp
jg
shr
add
push
push
or
mov
out
pop
int
imul
add
jl
imul
(bad)
fst
push
mov
xor
(bad)
loop
dec
dec
lods
push
test
inc
int3
xchg
cmp
adc
hlt
leave
fimul
adc
test
sbb
cmp
fnstenv
push
mov
sahf
das
adc
mov
iret
push
sub
scas
es
push
sahf
and
mov
in
out
mov
dec
xchg
mov
xchg
(bad)
daa
sub
adc
mov
stos
mov
mov
and
pop
xor
xchg
mov
xchg
mov
cmps
je
dec
cmp
jmp
retf
mov
mov
adc
jmp
mov
imul
push
add
cmp
cdq
mov
ins
xor
jo
mov
push
repnz
or
aam
jecxz
shl
das
jnp
xchg
imul
inc
leave
dec
pop
in
push
ret
scas
call
jecxz
inc
jne
cmc
push
pop
dec
mov
aas
add
jbe
adc
enter
retf
lock
test
lea
neg
retf
pop
out
and
aaa
lahf
retf
jg
ds
sti
pop
xor
je
js
scas
gs
cmp
dec
call
cmps
imul
jns
or
pop
push
(bad)
pop
sbb
mov
xchg
sbb
js
inc
addr16
daa
inc
jb
shr
and
add
jmp
dec
and
lock
jo
mov
(bad)
leave
jecxz
push
xchg
sub
and
cmp
gs
mov
icebp
clc
pop
xchg
add
and
inc
xchg
fnstcw
fild
cmp
retf
and
mov
adc
and
jecxz
mov
popa
xchg
std
cld
inc
jp
hlt
mov
movs
mov
xchg
leave
mov
adc
bnd
cmp
xchg
in
lock
xor
sub
bound
and
add
jge
fmul
mov
jle
add
out
cmps
jne
cs
inc
pop
mov
aaa
xchg
and
out
mov
or
cwde
and
push
mov
jg
enter
fs
mov
cmp
arpl
ret
shl
daa
mov
or
aad
int3
stos
rol
sub
pop
iret
or
cmp
cs
fadd
lds
fldpi
fild
cmovp
xor
into
mov
mov
gs
(bad)
adc
stc
inc
sbb
in
repnz
push
clc
push
cwde
mov
pop
mov
imul
jno
call
daa
iret
repz
sub
push
scas
call
ins
bswap
adc
push
dec
(bad)
and
stos
dec
out
lea
cmps
mov
push
pop
mov
inc
mov
mov
jp
cmc
jo
icebp
mov
sar
cs
lock
cwde
cli
cmp
les
mov
test
cmps
scas
loopne
xchg
ret
jmp
in
push
pop
mov
xchg
pushf
jge
stos
mov
das
shl
mov
in
ja
mov
loope
repz
mov
xlat
mov
ds
xor
rol
jno
stos
pop
xchg
lds
in
or
and
and
aaa
call
pop
ja
loope
test
call
adc
ins
in
push
mov
mov
mov
int
ror
dec
mov
push
jo
ret
into
xor
lods
lea
ja
popa
sub
jge
addr16
pop
rcl
adc
je
fs
push
gs
adc
inc
jg
dec
push
pop
xchg
sar
clc
in
xchg
jno
movs
loopne
jge
pop
pop
gs
test
add
inc
adc
out
mov
xlat
push
pop
or
pushw
sbb
mov
mov
ins
xchg
push
fwait
jge
mov
and
mov
mov
stc
xor
jle
mov
push
sahf
pop
dec
mov
mov
lods
ret
dec
and
stos
je
(bad)
mov
out
sub
xchg
push
dec
xor
into
sti
popa
cmp
xor
sbb
add
dec
out
je
movs
inc
mov
ds
dec
mov
stc
daa
pop
out
or
or
neg
in
push
jb
jecxz
jo
jmp
inc
mov
or
xchg
cmp
scas
stos
sti
sbb
in
sbb
fidiv
dec
inc
mov
out
fdiv
(bad)
fisub
hlt
dec
dec
sbb
adc
pop
cmp
dec
fisubr
push
push
bnd
pop
jnp
sub
sub
xor
push
mov
pop
out
sbb
jne
(bad)
adc
test
pop
out
sub
out
outs
jmp
repz
fdivr
and
daa
add
dec
call
jnp
cmps
or
add
xor
lds
push
sub
popf
lea
xor
cmps
push
mov
cmp
fdiv
sahf
in
rcr
pop
sar
fild
and
in
cmp
cmp
je
outs
push
stos
add
cmps
stos
or
out
adc
jae
dec
or
les
jp
in
pop
mov
pop
fild
mov
push
(bad)
clc
and
std
imul
cmp
das
xchg
or
inc
or
sbb
mov
push
sbb
dec
pop
es
sbb
jle
repnz
ins
pop
call
jae
lock
xchg
mov
loop
push
shl
xchg
shl
jae
add
js
xlat
and
xchg
arpl
adc
pop
ins
gs
sbb
pusha
mov
mov
mov
out
xor
lds
cdq
add
pop
cmp
jbe
cmp
pusha
scas
loop
call
pop
adc
sub
into
dec
jge
mov
dec
outs
outs
adc
test
call
jno
sub
lods
xlat
jae
sahf
neg
pop
mov
fild
pop
ss
or
call
mov
(bad)
sub
shl
je
xor
(bad)
and
sahf
stos
in
daa
leave
sbb
mov
getsec
inc
(bad)
xchg
sar
nop
fs
xchg
stos
mov
sahf
jns
cmps
adc
push
arpl
sti
fisub
and
mov
pop
mov
nop
xchg
xchg
(bad)
leave
jl
xchg
mov
aas
test
mov
jo
sub
cs
push
fsubr
hlt
std
test
hlt
xchg
lea
jb
jg
dec
shl
xchg
push
js
fst
pop
das
lahf
pop
jbe
scas
push
sub
push
mov
movs
sbb
mov
sar
popf
mov
xchg
out
aam
in
retf
ret
push
jb
xlat
aad
lahf
pop
dec
leave
jle
call
lahf
movs
test
adc
and
sub
inc
dec
add
jmp
addr16
fimul
mov
lds
and
inc
(bad)
ds
test
mov
leave
repz
sar
fwait
mov
sahf
mov
retf
mov
sub
fs
adc
stos
xchg
add
cdq
retf
fucomp
fadd
in
xchg
pop
mov
sti
imul
inc
inc
jmp
leave
push
(bad)
fdivr
mov
cwde
sbb
fmul
lock
mov
sub
mov
repz
mov
(bad)
fs
add
jo
cmc
and
cmc
pop
inc
sar
jmp
div
inc
xchg
or
pop
inc
push
(bad)
cmc
cmp
in
in
movs
xor
daa
ds
out
rol
enter
xchg
out
add
out
loop
push
sub
xor
lds
xor
movs
or
push
repnz
(bad)
das
enter
jmp
pop
and
or
in
push
jecxz
dec
test
sub
sub
xor
sub
shr
inc
xchg
mov
push
nop
fucomip
adc
sbb
cmp
div
icebp
std
in
clc
not
cmp
fbld
push
popf
stc
adc
lds
clc
lods
popa
push
inc
sub
xchg
jecxz
adc
fbstp
sub
and
jnp
test
pop
push
test
xchg
push
stos
inc
dec
pop
push
lea
push
inc
inc
shr
dec
add
pop
and
or
sbb
push
aam
mov
lods
or
in
iret
xchg
imul
ror
push
dec
jbe
jb
fmulp
fild
sbb
es
sub
pop
out
repz
in
push
sub
and
push
lock
bound
dec
scas
loope
cli
test
outs
sti
std
lods
inc
sbb
and
dec
xlat
jge
pop
lahf
sbb
mov
pop
stc
inc
not
outs
cmp
jle
sahf
cdq
imul
clc
sub
mov
push
es
and
test
loope
cmp
enter
mov
(bad)
mov
lods
out
sbb
sahf
in
xchg
cmp
xor
cmp
cmp
(bad)
scas
pop
popf
out
stos
inc
cdq
pop
sub
mov
out
cmps
jb
inc
push
lea
adc
add
or
retf
sub
jmp
mov
mov
jns
out
sub
ret
into
lds
push
and
mov
adc
dec
pushf
pop
scas
out
fisttp
sub
mov
gs
in
cmps
mov
xor
mov
sub
movs
mov
or
ret
sub
ret
and
sub
adc
hlt
out
ud2
test
push
call
out
imul
in
push
xor
cmp
cmp
imul
gs
ror
cmp
mov
mov
adc
sub
cmp
mov
sbb
push
cld
fwait
ret
pusha
cmp
ror
daa
pop
mov
inc
aaa
rol
sbb
mov
jbe
and
mov
dec
mov
xor
and
sbb
rcr
sub
movs
mov
add
ret
iret
mov
sbb
pop
mov
in
lahf
sub
adc
cmp
push
ret
mov
das
sub
stc
movs
jecxz
retf
sbb
jnp
enter
sahf
leave
cdq
inc
dec
js
daa
mov
mov
add
cmp
adc
inc
dec
mov
add
xor
jne
dec
cmp
in
xor
sub
cmp
fwait
xor
mov
aad
mov
das
sbb
sar
push
scas
mov
movs
xchg
pusha
adc
jns
jle
mov
sar
pusha
test
loope
push
enter
repnz
addr16
aam
cwde
ret
or
adc
rcr
cmps
loopne
cmp
or
sbb
pop
inc
jg
push
out
div
imul
stos
hlt
add
xchg
dec
sub
rcl
icebp
adc
aaa
mov
adc
mov
xchg
movs
add
leave
xlat
push
sub
push
adc
(bad)
int
ret
ret
movs
cmp
jne
enter
sti
mov
sub
push
outs
dec
(bad)
jecxz
rcr
push
dec
(bad)
jg
add
jno
lods
(bad)
aam
xor
mov
mov
mov
inc
jl
pop
push
stos
mov
icebp
jo
pop
enter
mov
or
and
ret
outs
test
mov
fsubrp
sahf
rcr
cmp
xchg
adc
xchg
xchg
xor
xor
xchg
test
jp
in
mov
popf
(bad)
ror
ins
imul
jge
xchg
mov
lods
mov
repz
sub
jae
in
jge
repz
call
or
(bad)
mov
iret
mov
cmp
mov
dec
fwait
xor
mov
push
push
push
out
and
lods
dec
(bad)
movs
push
js
fstp
test
xchg
shl
mov
pop
fwait
add
sar
cmps
xor
jb
inc
mov
loopne
out
ins
sub
mov
inc
or
mov
repz
lods
es
and
lds
call
jmp
int3
xchg
or
dec
jp
fwait
xor
les
xor
push
xchg
inc
cmp
cli
xor
in
inc
pop
dec
sub
fmul
pop
jbe
dec
mov
ds
push
add
xchg
rcr
cdq
xor
popf
lahf
int
je
xor
jmp
repnz
adc
rcl
fcomip
aaa
mov
push
loopne
in
lock
push
xchg
mov
add
daa
test
xor
mov
in
mov
mov
push
fldln2
mov
xor
jns
push
push
imul
imul
movs
pop
push
and
xchg
mov
icebp
cmp
dec
sbb
jmp
fst
xchg
fnstcw
in
mov
in
lods
xchg
xor
pop
ror
inc
mov
or
push
mov
and
jecxz
xchg
dec
or
retf
ret
or
or
mov
mov
call
push
(bad)
push
fcomip
lds
or
nop
mov
add
imul
adc
jp
mov
cmps
and
mov
mul
outs
movs
xchg
lods
push
fisub
scas
add
shl
xor
js
jp
push
ret
stos
sbb
mov
and
call
mov
jg
mov
push
jnp
ficomp
and
gs
inc
movs
fldcw
mov
push
mov
add
loop
call
repnz
outs
pop
les
ja
xchg
popf
ss
repz
sbb
scas
dec
jmp
nop
pop
push
jle
lea
xchg
or
push
or
stc
(bad)
xor
dec
sti
pop
mov
push
(bad)
fs
sbb
push
mov
sar
clc
cwde
or
inc
(bad)
cmp
push
push
cmp
sar
enter
inc
xchg
xor
clc
std
(bad)
rcr
stc
inc
inc
push
or
pop
aaa
dec
add
mov
xchg
cmp
jbe
and
pop
push
out
lods
jmp
and
push
cs
push
mov
imul
jecxz
stos
sbb
and
les
cmp
retf
cmp
rol
adc
pop
push
retf
xchg
mov
sbb
dec
mov
pushf
lods
sub
mov
jns
or
pop
and
lods
into
jb
fbld
inc
cwde
js
add
mov
push
int3
aas
lods
rol
push
pop
or
test
mov
jae
and
jg
aaa
cs
scas
mov
fmul
repnz
(bad)
call
mov
fidivr
and
ins
xchg
jmp
shr
jnp
pop
xchg
sub
test
aam
sub
loop
xchg
mov
push
mov
js
sbb
mov
xchg
ret
arpl
cld
or
push
jbe
daa
pop
lds
std
data16
mov
int
cwde
loop
ins
adc
sbb
sbb
mov
dec
xor
inc
sub
jg
and
fisubr
xchg
jne
sbb
mov
fbld
arpl
cs
mov
shl
jmp
cmp
(bad)
sbb
jl
inc
pushw
push
sbb
mov
cld
out
inc
iret
xor
jl
dec
rol
dec
sar
iret
cmp
and
mov
gs
into
test
vpunpckhdq
add
mov
stos
xchg
stc
shr
dec
or
scas
mov
and
xor
xor
popf
sbb
in
(bad)
in
leave
add
pop
(bad)
loop
test
inc
push
xor
nop
das
lea
sbb
jmp
mov
shl
gs
cld
jl
loop
pop
xchg
pop
(bad)
outs
ret
cmp
call
push
inc
jge
stc
(bad)
sbb
push
push
(bad)
loopne
push
push
in
and
and
(bad)
arpl
adc
xor
cmp
sub
call
ds
popf
sub
inc
(bad)
(bad)
stc
(bad)
jg
mov
movs
xchg
push
xor
inc
inc
lock
jae
inc
jns
das
hlt
mov
jmp
(bad)
ins
push
push
and
and
pop
ret
fnsave
shl
(bad)
int3
cmp
cmp
mov
mov
xor
cmp
inc
pop
cwde
imul
push
add
pop
mov
jge
push
push
mov
pop
xchg
popa
pop
lds
pop
push
dec
inc
mov
jmp
loopne
dec
mov
sbb
fwait
pop
adc
fisubr
movs
xor
mov
mov
aaa
adc
add
mov
or
jo
test
cmp
test
mov
xchg
into
jae
scas
ret
out
and
pop
dec
mov
inc
xchg
or
(bad)
sti
mov
in
sub
pop
outs
dec
and
cmp
mov
inc
outs
push
aaa
shl
in
(bad)
mov
psllw
dec
lods
adc
cmp
jae
js
or
jmp
or
mov
jns
loop
imul
xor
ja
adc
mov
push
sbb
sub
xor
and
test
pop
mov
inc
sub
and
push
mov
xor
out
adc
xor
xchg
adc
jmp
fmul
test
mov
jmp
mov
mov
loope
sbb
dec
dec
xor
gs
rcr
cmp
stos
in
movs
dec
lods
stos
pop
mov
push
gs
lods
inc
call
outs
mov
js
and
and
xchg
stos
repnz
call
idiv
idiv
(bad)
imul
repz
imul
fcomip
fdiv
pop
jns
inc
mov
fs
inc
or
pop
js
sbb
fucomp
sbb
daa
xor
fs
pushf
mov
inc
push
pop
jp
cmp
mov
shl
rcr
mov
push
and
inc
mov
dec
inc
jmp
mov
ficomp
push
sub
test
cmp
dec
out
adc
mov
out
lahf
out
test
xchg
sub
mov
out
(bad)
ja
cld
add
ins
fistp
jmp
pop
rcl
inc
aam
sbb
pop
and
pop
mov
fdiv
fsubr
out
pop
sti
out
push
cmp
mov
ret
loopne
sbb
addr16
es
xchg
in
call
cmp
adc
inc
cmps
cmp
adc
adc
rcl
jne
pusha
jge
fs
sbb
mov
ins
cmp
ins
or
and
ins
lea
xchg
mov
or
lods
int
enter
hlt
push
les
mov
xchg
repnz
loop
sbb
fstp
jmp
rol
and
aas
push
addr16
jle
push
push
inc
test
xchg
cwde
and
in
inc
mov
out
outs
ja
xor
test
cli
mov
pop
out
fcmovnbe
pop
push
push
adc
mov
pusha
in
rcr
sahf
loop
cs
mov
push
xor
mov
and
mov
push
outs
dec
sub
loope
dec
cmp
pop
pop
je
out
lahf
mov
pusha
in
add
ja
jbe
sub
and
cmp
and
xor
dec
add
(bad)
jg
sti
mov
call
push
cmp
push
jl
stos
push
mov
jne
add
test
in
or
or
or
cmps
mov
push
pop
pop
jb
xchg
enter
test
jne
sbb
scas
scas
fild
imul
jg
aad
add
shl
push
in
dec
dec
pop
sub
popf
inc
push
push
adc
cmps
mov
jg
mov
movs
pop
push
dec
or
dec
(bad)
or
cld
push
xlat
out
inc
rol
mov
pop
in
pop
mov
call
fisttp
pop
mov
xchg
jle
pushf
fisttp
pop
and
and
icebp
dec
xchg
fwait
mov
stos
js
jmp
cwde
cmp
imul
add
in
shr
mov
imul
xchg
sbb
jmp
cs
jecxz
icebp
pop
int3
mov
cmp
adc
sbb
cdq
sub
cs
inc
into
stos
(bad)
mov
iret
in
lahf
cmps
cs
add
xchg
xchg
(bad)
movs
cmp
leave
lahf
aaa
jl
jl
cmp
jp
ja
push
mov
sbb
les
xor
aam
jb
pop
dec
outs
ja
nop
cmp
clc
inc
push
adc
inc
ret
int3
inc
scas
mov
loopne
imul
(bad)
aas
mov
or
adc
rcl
sbb
sub
pop
in
jo
shl
push
inc
ja
and
inc
mov
pop
shl
cmp
mov
int3
cmp
in
adc
arpl
in
push
call
xor
cmp
test
aad
aas
mov
jae
bound
fld
lods
or
xchg
xchg
bound
xlat
test
cmps
es
not
jge
xlat
xchg
sbb
addr16
sbb
jecxz
xchg
xor
mov
adc
cmp
int3
lock
leave
mov
cmp
fild
cmp
pop
inc
sub
cdq
(bad)
pop
push
adc
adc
xor
mov
mov
idiv
add
mov
(bad)
pop
xor
xchg
std
das
dec
out
sbb
jns
mov
jo
retf
jmp
lock
int3
push
fwait
dec
fs
popf
retf
mov
xor
aam
mov
dec
pop
aad
dec
xchg
mov
shl
sahf
cmp
mov
bound
daa
rol
push
(bad)
sub
cwde
add
jnp
or
es
adc
movs
in
sbb
scas
in
or
sbb
sbb
pop
iret
mov
mov
loope
ins
pushf
add
push
mul
sbb
jg
add
mov
dec
jno
dec
cmp
push
dec
mov
mov
scas
push
(bad)
call
xchg
inc
enter
js
or
or
push
in
shr
push
fist
es
cdq
push
loope
and
(bad)
mov
xor
aam
movs
sub
or
(bad)
and
mov
(bad)
les
fisubr
add
mov
xchg
retf
pop
sub
inc
inc
lock
mov
std
clc
dec
add
lea
arpl
and
adc
and
and
jmp
add
test
adc
fmul
jne
adc
pop
ds
(bad)
adc
cmp
mov
aad
popf
sub
test
daa
aas
adc
adc
imul
xor
mov
sub
ret
repnz
pop
enter
and
pop
test
out
xchg
aaa
ret
retf
mov
fmul
lds
in
clc
or
add
sbb
mov
xchg
shl
mov
stc
cmc
popa
mov
xchg
test
push
shr
add
xor
pop
xor
push
add
mov
int
dec
and
shl
sbb
mov
mov
cwde
and
xor
std
adc
int3
movs
ds
push
pop
inc
cmp
xlat
mov
stc
cdq
xor
fsubr
pop
jmp
ja
mov
scas
leave
jnp
jmp
mov
mov
xor
call
enter
mov
es
add
cmp
(bad)
in
cmp
retf
mov
jg
sub
das
je
jno
sahf
repz
test
and
mov
(bad)
jne
jmp
mov
add
jb
in
sub
jo
cmps
mov
dec
add
mov
enter
push
mov
fld
jo
inc
ins
mov
(bad)
jg
mov
jbe
dec
dec
repnz
jecxz
jae
bound
adc
into
mov
jge
div
xor
cmc
(bad)
fidivr
xor
mov
pop
mov
mov
mov
jb
xchg
push
mov
mov
or
fcomp
push
fdivr
or
and
cmp
or
(bad)
fist
ins
dec
dec
addr16
imul
push
jg
ins
mov
dec
and
call
adc
push
and
sahf
sbb
adc
pop
sbb
xchg
icebp
lods
xchg
adc
lods
xchg
aad
mov
rcr
mov
cmps
dec
mov
in
dec
jnp
jg
xor
inc
shl
fcomp
or
inc
jo
(bad)
js
mov
mov
mov
sub
repnz
leave
pop
(bad)
mov
leave
pop
jmp
cld
xchg
cmp
mov
inc
retf
and
xor
pushf
jbe
jno
push
test
cmc
faddp
cmp
test
loope
cmp
out
leave
ins
test
push
jbe
cs
push
xchg
nop
bound
xor
iret
xchg
popf
mov
test
mov
or
lea
xchg
push
mov
jg
pop
mov
cs
aas
movs
mov
(bad)
jmp
ret
inc
add
sbb
pop
xor
jg
jne
mov
iret
jmp
jb
xchg
sahf
mov
xchg
dec
inc
push
xchg
and
mov
popf
das
lods
mov
or
test
xor
jp
dec
cwde
push
or
add
pop
sbb
xor
mov
add
inc
movs
cmp
xor
cmp
int
add
pcmpgtw
and
pushf
jmp
inc
xor
mov
repz
sbb
sbb
mov
adc
les
cmp
cmps
jno
sbb
imul
push
dec
aaa
inc
int3
sub
js
push
mov
fidiv
ins
ret
cmp
or
ja
dec
out
fnstcw
cld
jo
lock
inc
push
scas
xchg
imul
fcomp
mov
gs
cmp
xor
sar
cdq
jb
sbb
(bad)
push
mov
inc
clc
(bad)
jbe
outs
mov
aas
xchg
ja
pusha
jg
sti
out
lea
(bad)
repz
dec
adc
inc
jae
adc
lods
mov
inc
inc
and
repnz
das
inc
push
cli
cld
mov
push
cmp
in
inc
pusha
in
dec
out
test
cmc
fcmovbe
mov
push
icebp
jae
xchg
mov
or
xchg
mov
cmp
cmp
or
push
dec
xchg
test
mov
xchg
lahf
push
test
mov
mov
pusha
add
fcmovnbe
sbb
jno
sahf
and
cmp
mov
sbb
inc
xor
push
fld
add
push
fwait
mov
mov
sti
dec
cmp
cmp
lahf
inc
pushf
mov
enter
add
sti
mov
push
or
pop
adc
movs
pop
or
jne
sub
leave
adc
push
push
pop
jno
jle
stc
test
das
shl
imul
pop
push
cmp
vmovdqu
mov
(bad)
out
dec
mov
rcr
mov
cmp
je
setae
xchg
mov
inc
imul
movs
push
xlat
mov
jnp
cs
push
mov
push
xor
inc
out
add
outs
xchg
repz
ret
mov
adc
out
cld
fst
sbb
push
fwait
sahf
push
scas
loopne
mov
icebp
xchg
adc
lds
and
dec
inc
inc
mov
xor
cli
pop
into
andps
adc
xor
inc
or
inc
fistp
les
add
jno
adc
cs
xor
pop
call
jmp
xor
jnp
jns
mov
shr
inc
shl
into
cmp
sub
and
in
sub
mov
sbb
in
or
in
movs
push
div
and
sub
aaa
stc
xchg
sbb
fcmovbe
test
and
jg
fadd
xchg
pop
hlt
nop
xchg
lea
adc
mov
pop
xor
and
pop
mov
jp
push
xchg
add
xor
push
sar
mov
inc
jnp
dec
adc
(bad)
push
(bad)
xor
stc
(bad)
popa
clc
jl
aas
stc
rcl
iret
or
cld
adc
cmps
scas
ror
jbe
inc
in
sbb
ret
mov
rcr
cmp
push
xchg
adc
jae
or
jae
mov
mov
push
dec
pop
xor
mov
cli
mov
mov
or
push
(bad)
lea
mov
mov
xchg
shl
mov
inc
movs
pop
sbb
stc
jmp
ins
add
out
mov
jp
mov
lds
or
in
add
or
out
mov
cwde
pop
sbb
mov
fs
or
inc
xchg
in
scas
popf
pop
loope
inc
rcl
and
adc
in
dec
int3
push
imul
jmp
adc
iret
shl
fs
test
mov
cmp
mov
arpl
and
sbb
addr16
xchg
inc
push
in
clc
mov
fadd
fnstenv
pusha
mov
cmp
adc
fstp
aad
lahf
adc
ret
test
fwait
inc
ja
repnz
dec
sub
cmp
push
fsubr
xor
cmp
jnp
dec
push
lods
movs
jbe
(bad)
je
mov
sub
add
das
xor
dec
push
xchg
mov
outs
addr16
sbb
pop
fs
daa
and
aas
jg
repnz
add
dec
mov
lods
cdq
jae
mov
div
mov
inc
loope
fcomp
jge
js
out
xchg
popa
popf
mov
or
ret
adc
push
(bad)
ffreep
sub
cmp
cmps
fwait
or
sub
or
loop
mov
dec
sub
int
lods
and
mov
adc
stc
pop
ds
nop
push
pop
dec
(bad)
jns
jl
pop
popf
pop
icebp
bound
nop
add
or
xor
mov
mov
dec
pop
mov
repz
loop
or
inc
xchg
lods
mov
add
out
dec
outs
xchg
mov
adc
pop
ret
inc
xchg
mov
push
movs
ins
outs
daa
pop
scas
stos
adc
sub
sbb
inc
jle
mov
mov
clc
aad
sbb
xor
movs
mov
retf
test
jno
icebp
adc
pop
loopne
xchg
mov
jno
inc
mov
pusha
push
cmp
lods
jbe
loope
mov
leave
iret
stc
iret
ins
xor
enter
es
mov
arpl
mov
out
add
popf
mov
xchg
lods
lea
push
scas
lods
push
sar
dec
jb
fiadd
nop
pop
or
push
rcr
fist
std
retf
(bad)
jp
xchg
(bad)
xchg
ins
pop
rol
mov
mov
dec
push
lods
adc
imul
push
repz
or
aam
add
cmp
dec
je
adc
test
fs
cli
xchg
cmp
cmp
sub
push
add
cmps
push
das
pop
ins
mov
loop
push
sub
jmp
xchg
adc
jae
jbe
loopne
add
adc
sub
mov
or
push
inc
fiadd
push
mov
xlat
xchg
push
sub
and
jecxz
adc
out
sub
mov
in
xor
cld
adc
cmp
shl
cdq
inc
addr16
into
cwde
movs
pop
lock
jle
ins
mov
adc
retf
ret
pusha
stos
ds
cli
add
jecxz
(bad)
std
stos
adc
inc
test
mov
jmp
or
fdiv
(bad)
cs
mov
or
repnz
(bad)
imul
pop
test
(bad)
mov
imul
xchg
(bad)
stc
add
loope
sub
ret
ret
stos
jmp
stos
cmp
adc
es
mov
lahf
mov
in
dec
cwde
mov
xor
jle
jnp
pop
ins
xor
aaa
dec
inc
add
lock
outs
hlt
xor
addr16
adc
stc
mov
js
pusha
xchg
mov
push
push
jnp
jl
movs
aam
addr16
dec
or
sahf
fsubr
jle
outs
and
xor
push
or
mov
jae
inc
sbb
cli
jmp
fdiv
jmp
adc
jle
adc
xchg
repnz
fnstenv
scas
inc
cs
adc
sub
popa
sub
rcl
adc
addr16
push
leave
dec
adc
push
mov
dec
mov
inc
cmps
mov
stos
or
scas
mov
adc
mov
mov
popa
int3
pusha
aaa
mov
addr16
add
cmp
inc
sbb
and
loopne
std
retfw
adc
adc
xor
xor
xor
push
mov
push
ror
scas
push
mov
loope
in
and
mov
dec
retf
(bad)
inc
imul
fisttp
push
stc
adc
lods
inc
jo
inc
push
mov
add
mov
adc
pop
mov
outs
in
jmp
(bad)
imul
je
xchg
dec
aam
call
xchg
ret
mov
ffree
pop
jmp
dec
test
mov
retf
xchg
or
jge
dec
xor
push
jge
inc
mov
jecxz
(bad)
loope
pop
sub
(bad)
out
fs
pop
fcmovnb
jo
addr16
push
push
ret
add
ss
test
addr16
mov
mov
je
and
daa
lods
jns
loop
shr
cli
xor
aas
cmp
in
loopne
je
movs
sbb
mov
and
scas
mov
adc
pushf
xchg
inc
add
inc
mov
adc
mov
jmp
aad
sub
jo
or
cli
jbe
ror
test
xor
dec
pop
jp
cmp
mov
inc
jns
sahf
jg
ffreep
push
loop
addr16
retf
jge
or
mov
sbb
movs
mov
xlat
fs
leave
xchg
mov
and
and
lea
in
dec
addr16
push
jns
aad
int3
mov
push
push
scas
xchg
jecxz
lds
jle
test
scas
out
xor
jecxz
ror
add
add
mov
jo
in
shl
dec
popf
das
jbe
fsubr
test
jmp
jecxz
je
mov
and
xchg
push
ffreep
mov
mov
push
fidivr
and
leave
pop
fild
xchg
icebp
jo
das
mov
clc
cmp
dec
nop
jmp
inc
adc
xchg
out
mov
sbb
jecxz
sti
lahf
fimul
iret
sbb
js
call
mov
mov
pusha
cmp
sub
xlat
idiv
inc
push
or
pop
mov
mov
or
shl
rol
and
jo
push
xchg
cmp
hlt
mov
inc
jmp
(bad)
mov
jl
sub
inc
sbb
es
mov
je
dec
and
cmp
jne
test
pop
into
jb
xchg
mov
push
pop
mov
inc
adc
pop
jbe
dec
jns
stc
sar
clc
lahf
popf
pop
sub
mov
push
rol
push
repnz
xchg
test
out
sub
and
dec
sbb
js
adc
xor
movs
inc
dec
fmul
or
div
stos
(bad)
in
jp
mov
mov
xor
pop
aam
jno
pop
mov
push
jmp
bound
jl
jbe
mov
and
out
sub
sub
xor
test
sub
aad
xor
gs
dec
ja
and
ins
(bad)
or
(bad)
fcomp
push
lods
enter
in
sbb
arpl
jmp
pop
and
movs
and
jne
push
sbb
sti
inc
jmp
adc
iret
vpcmpeqw
cdq
std
xchg
adc
(bad)
xor
ror
xor
test
ret
nop
sub
xchg
mov
dec
push
push
or
push
sbb
add
mov
sbb
mov
adc
push
pop
dec
retf
cs
ins
rol
outs
retf
in
add
dec
je
xchg
push
gs
add
fnsave
mov
cwde
inc
ja
out
vpperm
mov
shr
xchg
sbb
cmps
pop
out
test
xor
mov
dec
outs
test
add
jmp
cmp
test
repz
inc
retf
inc
sub
call
mov
pop
ret
retf
mov
mov
dec
jmp
outs
movs
ins
xor
cmp
retf
ret
retf
inc
jmp
stos
enter
cmps
xchg
or
dec
mov
stos
and
mov
loop
hlt
popa
mov
pushf
cmps
or
mov
add
and
jecxz
push
mov
sbb
push
sub
push
push
lahf
mov
jp
in
shl
(bad)
inc
rcr
int
inc
lods
add
sub
cmp
mov
clc
loope
test
sbb
jbe
mov
lods
jmp
xor
xor
retf
xchg
mov
mov
leave
inc
mov
(bad)
test
mov
fwait
popf
mov
cmps
jmp
adc
mov
xchg
xchg
xchg
sahf
push
scas
stos
data16
push
in
(bad)
and
repnz
or
mov
sahf
add
mov
mov
ret
out
test
test
mov
iret
xlat
ret
(bad)
pushf
ja
jg
push
mov
stos
aas
mov
addr16
push
mov
stos
test
inc
sbb
test
fcomp
and
xor
enter
in
inc
dec
in
adc
int
inc
or
ss
and
pushf
add
retf
sbb
inc
cmp
inc
outs
mov
in
or
lock
mov
inc
sbb
pop
lock
cmps
outs
dec
stc
dec
ret
stos
retf
adc
mov
sub
sahf
imul
sub
(bad)
iret
mov
mov
movs
push
mov
test
cs
fisubr
sub
iret
push
xor
(bad)
imul
lahf
cdq
ins
mov
stos
jp
jmp
pop
(bad)
stc
mov
mov
xor
mov
nop
pop
cld
dec
movs
jne
imul
mov
inc
js
jmp
loopne
pop
push
pop
inc
cmp
cmp
mov
mov
push
jmp
aaa
jecxz
mov
aad
in
xor
mov
pop
cld
xor
lods
into
inc
out
inc
mov
mov
aam
addr16
in
mov
adc
mov
jae
js
call
aam
fisub
mov
repz
pusha
cmps
pusha
stos
xchg
aam
jge
sbb
xchg
les
xor
sbb
js
leave
aam
adc
jmp
outs
ja
add
int
xchg
repnz
nop
hlt
xor
lock
out
data16
pop
js
jp
adc
dec
pusha
in
ret
mov
adc
jno
push
mov
xchg
hlt
mov
sti
adc
out
push
lock
and
add
lods
mov
jmp
adc
inc
fimul
mov
stos
outs
adc
pop
les
jb
or
jg
sahf
es
push
repnz
test
push
(bad)
sub
subps
mov
and
push
jmp
test
pop
jl
pop
mov
sub
call
aad
movs
icebp
jmp
(bad)
and
mov
adc
clc
popf
mov
xchg
adc
out
jmp
std
or
inc
dec
shr
cwde
dec
mov
xor
pop
loope
cmp
xor
std
jb
pop
in
imul
xor
lods
sub
in
movs
into
jno
pop
into
loop
cmps
pop
push
add
icebp
sti
xchg
mov
into
sbb
mov
mov
pop
(bad)
mov
(bad)
dec
stos
dec
(bad)
inc
mov
push
sbb
aas
sbb
fdiv
movs
les
clc
lods
mov
xor
mov
mov
mov
xor
stc
jg
jg
in
cwde
enter
ss
mov
sub
ror
and
invlpg
fs
xor
and
inc
retf
add
int
pop
jmp
call
sub
push
inc
loope
mov
jge
addr16
sub
pop
inc
mov
ins
aad
push
inc
arpl
sub
add
xor
pushf
sbb
and
sahf
sub
out
scas
inc
pop
push
imul
pusha
pop
clc
(bad)
cmp
pop
lods
pop
mov
mov
cmp
cmp
mov
lea
add
pop
pushf
push
lods
rol
sar
or
mov
outs
push
pop
imul
adc
(bad)
jb
loop
sub
int3
fcomp
movs
leave
xor
sahf
mov
jbe
mov
rcl
retf
vmovddup
push
outs
adc
pop
leave
jb
call
cmp
cdq
test
mov
mov
jo
pop
add
loope
mov
outs
pusha
mov
and
adc
jns
jg
dec
adc
dec
sub
and
adc
sbb
or
fwait
xchg
rcl
push
pop
ja
add
pop
out
xchg
sbb
jp
aaa
fcmovb
mov
pop
jg
in
sar
inc
xchg
ss
pop
lahf
sbb
call
adc
stos
(bad)
mov
mov
scas
cmp
sti
lock
and
push
xor
cmp
call
push
ins
test
mov
pop
mov
sbb
mov
jg
stc
xchg
das
imul
test
inc
push
scas
xor
mov
and
hlt
aas
adc
outs
loopne
das
sbb
leave
mov
mov
jmp
push
xchg
dec
cmp
adc
outs
sub
jmp
and
in
cmp
mov
andnps
dec
int
jnp
iret
rol
ss
add
mov
inc
ror
ret
imul
sbb
iret
push
jl
(bad)
mov
cld
leave
jmp
in
int3
shl
outs
out
mov
dec
dec
xor
and
sub
cs
add
(bad)
jmp
dec
cmp
pushf
imul
push
je
call
adc
shl
xor
jg
in
add
mov
dec
in
cmp
ds
and
xor
gs
ficomp
fwait
jnp
sbb
repz
stos
mov
xor
cli
rol
sbb
mov
jp
(bad)
fsubr
adc
pop
jae
or
push
loop
leave
test
sbb
(bad)
ret
sub
or
stos
sti
pop
mov
jae
(bad)
mov
clc
pop
dec
int3
jmp
lea
(bad)
adc
fist
add
mov
push
stos
cmps
jge
repnz
nop
mov
xor
adc
dec
nop
outs
adc
loopne
push
or
int3
xchg
cmps
xor
adc
inc
dec
inc
push
push
jbe
sbb
out
or
in
adc
aam
push
test
dec
outs
cwde
lods
outs
pop
shl
arpl
or
scas
(bad)
mov
mov
add
imul
ror
repnz
outs
(bad)
add
and
dec
inc
cmp
and
nop
mov
or
pop
test
aas
adc
cli
shl
ds
mov
mov
adc
fiadd
lea
push
inc
sub
and
adc
aad
inc
push
mov
pop
xchg
jge
mov
xlat
xor
jo
lods
mov
jmp
xor
pop
mov
cmps
in
aam
int3
sbb
mov
jae
addr16
sbb
ret
dec
jae
sbb
xlat
stos
mov
dec
mov
mov
push
jb
out
add
mov
or
dec
push
ss
stc
aad
and
lahf
(bad)
jb
mov
and
mov
js
sub
mov
in
dec
jl
xchg
mov
push
inc
jno
xchg
inc
xchg
sbb
mov
and
sub
pop
cld
(bad)
pusha
mov
push
mov
adc
dec
sar
dec
and
jnp
je
xor
or
rcr
sbb
pop
call
js
pop
and
fwait
iret
adc
enter
loopne
outs
jb
xchg
(bad)
rol
test
sbb
lock
pop
sti
mov
and
pop
js
pushf
out
adc
dec
in
cs
leave
xor
push
push
fld
push
fsubr
imul
fist
cld
sub
mov
mov
push
stos
pop
ss
xchg
gs
push
idiv
or
fimul
scas
mov
int
pop
outs
sbb
push
pop
ins
dec
mov
inc
stos
es
push
fisubr
cmc
ds
jecxz
push
mov
xor
sbb
imul
mov
adc
rcr
mov
mov
lds
int
xchg
imul
ror
sbb
in
test
(bad)
ja
(bad)
jne
dec
cld
push
ret
cmc
mov
std
daa
sbb
je
jns
test
push
les
aas
dec
jl
enter
xchg
sbb
test
loope
pop
mov
xor
fwait
cli
inc
ret
call
aad
inc
dec
aad
xchg
mov
aas
js
pop
jecxz
jecxz
ja
push
test
adc
push
fcmovbe
mov
fisub
adc
adc
push
sub
inc
inc
dec
add
dec
push
fdivr
xchg
xor
(bad)
jne
not
ret
and
xchg
add
jmp
scas
jne
mov
ins
pusha
lea
push
(bad)
jecxz
and
jns
in
sub
test
fs
les
add
add
fsub
cwde
push
cmc
stc
dec
dec
fbstp
mov
mov
loopne
add
dec
xor
adc
nop
push
shl
iret
ja
lods
mov
sbb
sbb
jg
test
jno
add
pop
lock
and
cmp
lods
sbb
sbb
push
mov
pusha
and
les
cmps
mov
ins
pop
mov
aaa
sti
lds
jp
mov
mov
adc
ds
jmp
sbb
inc
pop
out
movs
cld
cdq
shl
mov
or
mov
or
hlt
int3
jnp
jg
mov
push
out
mov
call
addr16
jmp
pop
test
out
ins
or
dec
cmp
push
xor
ror
dec
adc
call
popa
and
push
push
pop
mov
out
xchg
ja
mov
movs
inc
jecxz
jge
cmp
xor
leave
fsub
inc
in
cmp
mov
sub
inc
adc
cwde
push
fisttp
push
test
adc
repnz
jge
clc
xchg
dec
jo
in
imul
(bad)
jns
cmp
mov
(bad)
mov
fwait
xor
sub
push
adc
xchg
push
mov
adc
in
cmc
cmp
or
mov
cmp
push
cmp
jmp
out
push
sub
ret
pop
pop
popa
adc
call
ret
into
shl
rcl
(bad)
fsubp
rol
jge
and
or
popa
jo
xor
cmps
out
aaa
mov
sbb
jecxz
ins
adc
mov
imul
in
sbb
into
mov
sbb
xchg
xchg
inc
pop
sti
cmp
fld
pop
jno
sub
and
popf
lea
adc
hlt
in
jle
push
dec
xchg
and
xchg
(bad)
movs
(bad)
push
dec
or
push
outs
in
ror
sub
xchg
ins
and
test
pop
cmc
inc
ss
xor
popa
out
xchg
rol
pop
pop
outs
mov
fldln2
ret
push
dec
dec
mov
(bad)
mov
sub
pop
out
pop
lahf
mov
or
adc
stos
jp
jns
pop
push
pop
sub
ins
push
pop
adc
imul
or
fldcw
cmps
icebp
test
jge
ins
inc
xlat
pop
into
push
aaa
or
push
xlat
in
rcl
jns
clc
and
xor
inc
sbb
xchg
jno
adc
lock
sahf
aad
jmp
dec
retf
stc
(bad)
in
push
pop
sti
neg
stc
mov
loope
mov
loopne
mov
fdivrp
cmp
mov
adc
inc
loop
mov
or
dec
addr16
outs
ror
ror
mov
dec
mov
mov
add
xor
cld
cwde
out
mov
xchg
sbb
sbb
pop
sbb
outs
js
call
xlat
jmp
and
test
aas
jp
inc
test
pop
in
mov
mov
cli
int
xor
aad
inc
mov
mov
cmp
int3
push
mov
cmp
ret
jb
cs
mov
lahf
xor
loopne
mov
imul
inc
mov
pop
xchg
xchg
adc
xchg
pop
add
nop
mov
(bad)
call
loopne
jnp
pop
dec
xchg
das
jg
jecxz
inc
retf
add
mov
ds
or
rcl
xchg
cmc
test
out
ins
sbb
mov
(bad)
mov
iret
cmp
adc
in
rcl
dec
mov
push
fucom
jecxz
iret
test
mov
or
mov
push
shl
xor
inc
jae
jge
js
adc
mov
nop
dec
or
push
sbb
push
loope
mov
(bad)
jg
lods
pop
stos
push
shr
cmp
xor
add
jo
pop
stc
mov
loop
xchg
outs
xchg
inc
mov
sbb
inc
sub
cmp
add
jno
pop
test
out
and
jne
sub
in
cmp
(bad)
push
adc
pop
mov
mov
pop
dec
adc
or
shr
das
jg
push
sub
loope
lods
mov
or
sbb
call
sbb
mov
ficomp
cmc
test
sahf
pop
hlt
aad
ss
sub
cmp
cmp
mov
fwait
mov
dec
xchg
jne
pop
pop
or
adc
add
sub
pop
fisttp
add
fistp
mov
jb
shl
call
jge
fiadd
and
jmp
push
cli
int3
or
shr
sbb
jp
cmp
dec
stos
dec
test
lea
pusha
mov
sbb
jmp
push
loop
xlat
jae
or
inc
imul
add
ja
(bad)
xor
push
enter
aam
xor
mov
jae
hlt
sahf
jmp
repz
push
mov
sbb
pop
call
shl
jmp
call
jge
popa
aad
dec
sti
stos
imul
xor
rol
fdivr
cmp
add
shl
pop
(bad)
shl
inc
scas
mov
icebp
(bad)
out
jle
cli
aas
ins
cld
(bad)
in
pop
popf
jecxz
push
cmp
pop
add
ins
jne
rcl
adc
popf
stc
in
leave
jmp
fidiv
sub
ja
sbb
movs
and
idiv
int
hlt
pop
mov
jae
dec
jno
mov
xor
mov
xor
adc
cmp
mov
lahf
pop
sub
jnp
fmul
in
sub
pushf
add
push
inc
mov
stc
and
push
pop
lods
stc
test
call
inc
out
inc
popf
add
lds
mov
pop
xchg
call
push
aas
cmps
(bad)
test
loop
inc
or
adc
ja
(bad)
adc
jno
pop
dec
jle
pop
cmp
cmp
xor
cmp
lods
(bad)
int3
loope
into
shl
push
inc
jle
and
popf
movs
push
faddp
inc
int
paddb
xlat
ror
pop
sub
lahf
push
push
and
aam
enter
mov
xlat
dec
scas
sbb
push
mov
gs
pushf
ja
pop
adc
mov
std
and
dec
arpl
repz
inc
inc
sti
leave
inc
add
sbb
(bad)
sbb
push
pop
cld
ret
add
add
int3
xor
mul
mov
mov
dec
fld
mov
call
fs
fmul
cmp
xchg
inc
pop
aaa
mov
mov
ret
sbb
(bad)
popf
addr16
aad
xchg
pop
jo
fisttp
aam
or
pop
jae
inc
lods
push
xchg
pop
jae
adc
jle
pop
retf
shl
sub
fadd
dec
sub
inc
cmp
fcomp
shl
and
sbb
push
aad
cli
ret
mov
pop
mov
mov
sub
dec
mov
fcomp
xchg
ins
les
shl
inc
xlat
mov
inc
adc
cmps
cld
pop
xlat
sub
ins
pop
fcomp
dec
dec
mov
adc
add
mov
hlt
out
push
mov
sbb
mov
js
ins
(bad)
jmp
jb
ins
sahf
or
pop
pop
stc
jno
out
inc
daa
in
mov
xchg
push
push
movs
pop
test
cmp
push
xor
mov
mov
add
leave
mov
sub
mov
push
or
and
sub
pop
jnp
jecxz
cmc
mov
and
cmp
add
std
repz
xor
in
mov
inc
test
pop
cmps
dec
(bad)
fiadd
in
jbe
aad
cmp
mov
mov
sbb
jae
dec
and
jge
rol
ds
repz
add
cmp
xor
cmp
fcmovbe
mov
fwait
jg
aaa
fnstenv
add
movs
mov
pusha
icebp
icebp
(bad)
icebp
cwde
outs
lods
enter
fiadd
call
add
fstp
je
push
mov
(bad)
jge
fidiv
jg
add
call
and
fwait
sub
mov
mov
pop
inc
test
jg
xchg
sub
call
push
and
push
adc
out
imul
ror
pop
int3
and
add
in
xchg
mov
mov
dec
xor
pop
push
sub
into
and
clc
and
shl
sbb
icebp
pop
cmp
add
jp
xadd
cwde
mov
or
and
or
jo
frstor
dec
outs
mov
mov
xchg
jmp
test
pop
shl
pusha
add
ret
lods
sbb
or
in
cld
ins
push
xchg
jge
mov
push
and
hlt
add
int3
ror
xor
inc
sbb
inc
hlt
mov
shl
cmp
xchg
inc
imul
jo
popa
push
fistp
jno
lds
ss
fwait
fwait
arpl
dec
dec
gs
pushf
ss
movs
ss
test
out
push
es
jbe
add
xchg
or
cmc
dec
(bad)
xchg
sbb
fsub
inc
xlat
or
fnsetpm(287
test
clc
xor
add
loope
ins
xchg
stos
(bad)
fldenv
gs
sbb
mov
fistp
mov
pop
scas
mov
mov
(bad)
jmp
repnz
fwait
cmp
nop
rcl
(bad)
adc
mov
dec
adc
push
push
or
push
loop
cmc
movs
test
add
daa
inc
mov
sub
outs
sub
(bad)
daa
lahf
shr
xor
fbstp
out
sub
sti
in
ret
and
shl
jb
ins
je
mov
sub
adc
xchg
fidiv
cld
jg
adc
and
retf
not
call
pop
push
or
mov
ja
inc
daa
mov
repnz
inc
or
mov
dec
iret
push
fs
mov
std
ficomp
sbb
ret
jge
into
clc
jl
fdivr
fist
sahf
ja
and
das
stc
pop
push
dec
mov
repz
add
jno
push
cs
mov
sar
mov
and
jge
or
dec
outs
push
sub
inc
xchg
mov
ss
lods
jp
mov
push
ret
push
xchg
pop
mov
or
(bad)
xchg
dec
lahf
adc
sub
add
pop
mov
inc
ret
mov
adc
lds
int
add
add
xchg
repz
dec
jl
and
xchg
jo
or
js
jecxz
je
pushf
push
addr16
and
call
add
repnz
jmp
cmps
mov
popf
imul
test
test
call
or
test
sub
add
dec
inc
xor
mov
jbe
push
das
rol
inc
ror
pop
jb
adc
clc
pop
sbb
repnz
mov
push
in
mov
xor
cld
clc
je
mov
fucomp
ins
xlat
xor
loope
out
lahf
lahf
not
dec
fimul
cdq
into
(bad)
fs
adc
dec
add
jmp
out
retf
std
arpl
cmp
inc
imul
in
loop
lahf
mov
arpl
mov
pop
inc
dec
fimul
sub
iret
adc
call
sbb
sub
jns
loope
jo
call
and
rol
jns
mov
push
add
push
mov
movs
sub
jno
popf
jp
pop
add
mov
sbb
pushf
int
jecxz
xchg
sub
shr
shr
sub
lds
ror
pop
clc
jb
cmps
dec
in
ins
arpl
(bad)
jmp
push
ret
popa
sub
add
push
jae
call
pop
pop
ins
and
inc
mul
call
fadd
cli
mov
(bad)
cli
sbb
outs
xchg
stc
xchg
mov
or
imul
stos
leave
aaa
inc
ins
fnsave
aaa
mov
fild
mov
lea
pop
mov
sub
loop
and
xchg
call
mov
pop
mov
les
idiv
inc
fadd
arpl
rcl
and
mov
mov
popa
(bad)
adc
xchg
into
retf
sar
inc
jl
adc
jmp
das
xor
push
lahf
or
cmp
push
pop
adc
mov
rol
dec
cld
xchg
nop
pusha
repnz
push
mov
dec
imul
test
test
add
cli
mov
cmps
test
pusha
mov
shl
enter
test
call
ret
adc
sbb
into
fchs
mov
xchg
mov
pop
in
push
test
xchg
adc
mov
or
pop
cmps
push
inc
and
and
jb
sahf
repnz
mov
dec
inc
call
cli
or
pop
test
sbb
(bad)
and
sub
das
push
cmp
hlt
ds
scas
adc
lock
nop
(bad)
jle
stos
mov
cmp
ss
into
call
mov
inc
leave
call
xchg
aaa
pop
clc
jle
jmp
shr
pop
lds
dec
dec
pop
mov
and
clc
mov
inc
scas
mov
xor
ror
popa
dec
arpl
mov
mov
sbb
mov
sti
and
int3
mov
xchg
in
push
jmp
sbb
rol
xchg
sub
outs
sub
xor
cmp
dec
(bad)
push
mov
xchg
xchg
inc
(bad)
xor
daa
pop
sbb
xchg
cdq
ror
pop
jne
pop
dec
in
or
inc
pop
mov
cwde
dec
cmp
sti
fwait
add
inc
repnz
popa
add
mov
inc
mov
sti
(bad)
(bad)
xchg
mov
mov
cmp
jp
aad
enter
jmp
fiadd
jge
cmp
and
lock
data16
dec
mov
jmp
push
xlat
push
push
mov
adc
xchg
fcomp
mov
add
pop
push
cmp
retf
push
mov
push
push
mov
fwait
ss
ds
sub
push
push
int
leave
sti
mov
pop
cmp
or
or
jge
inc
fcom
sbb
(bad)
or
xor
mov
sahf
in
aad
mov
(bad)
and
add
scas
push
jmp
cmp
repnz
pop
ret
pop
pop
cmp
jmp
mov
frstor
in
pusha
and
pushf
mov
lds
lea
fistp
pop
mov
lods
(bad)
mov
xor
cld
cdq
hlt
inc
fdiv
retf
xchg
mov
xor
ret
mov
fnsave
jo
push
dec
sub
jbe
stos
inc
cdq
or
outs
enter
repnz
xchg
jp
xchg
imul
adc
sbb
xor
icebp
or
cmp
stos
mov
fidivr
rcl
jbe
pop
mov
aaa
sbb
sub
(bad)
cdq
cmps
push
sub
cmp
cmp
xor
mov
or
mov
mov
rcl
cmc
and
fcomi
cdq
mov
inc
inc
sbb
sub
repnz
jnp
inc
pop
mov
dec
and
sub
sbb
or
fsub
call
std
sub
repz
dec
xchg
mov
test
out
int3
xchg
inc
pop
xchg
inc
das
pushf
xor
(bad)
adc
cmp
fistp
ror
je
sub
clc
lds
xor
std
cmps
jp
fs
jg
sub
icebp
add
or
and
fwait
aad
ret
scas
call
clc
mov
jg
ret
mov
mov
std
mov
ss
lds
push
out
mov
jb
mov
cdq
shl
stos
sbb
aad
cmp
dec
das
sbb
pop
dec
int3
ss
loopne
push
shl
xchg
inc
inc
rcl
pop
xchg
adc
inc
scas
mov
jle
rol
ret
add
adc
pop
mov
mov
ret
add
movs
nop
inc
sti
dec
mov
adc
jno
and
mov
push
and
imul
out
ins
mov
imul
or
shr
sar
addr16
xchg
jl
jecxz
dec
data16
in
mov
mov
sti
cmps
daa
sbb
ds
mov
xchg
cmp
outs
fsub
jae
outs
jp
jmp
inc
mov
mov
hlt
sub
mov
arpl
jge
icebp
int
fisubr
sub
mov
call
cs
push
push
and
dec
in
outs
push
cmp
pop
(bad)
and
out
scas
dec
xor
and
add
xor
jne
out
jmp
mov
(bad)
gs
pop
shr
stos
mov
push
jmp
in
pop
dec
and
mov
adc
std
adc
inc
mov
fisub
(bad)
and
cmp
adc
sbb
xor
inc
push
js
adc
cmps
fxch
stos
inc
out
or
fldcw
push
sahf
popa
daa
and
adc
scas
push
and
sbb
add
cli
or
out
gs
stos
(bad)
or
popf
add
int
fiadd
push
xchg
cs
das
stc
sahf
shr
adc
(bad)
into
dec
sbb
nop
push
add
call
jno
popa
cld
test
jne
test
jbe
sub
aaa
sbb
sahf
sub
jp
sub
jns
mov
shr
adc
xchg
aam
xchg
cmp
inc
and
jle
popf
fsubr
in
inc
clc
dec
fimul
lds
adc
jg
mov
iret
outs
fisttp
cdq
inc
adc
cmc
cli
jge
shl
pop
jge
and
lods
pop
push
jge
mov
inc
mov
lock
aas
add
adc
jne
inc
cmp
retf
jg
hlt
scas
lea
into
ja
imul
enter
mov
(bad)
sti
xchg
test
out
mov
add
out
dec
mov
jmp
mov
pop
and
mov
repnz
fcmovu
inc
test
sahf
test
sbb
lods
mov
mov
pop
arpl
mov
fadd
xor
ins
mov
mov
or
add
jmp
pop
icebp
dec
pop
sbb
dec
push
mov
dec
jne
jnp
xchg
mov
ja
dec
push
or
cdq
iret
or
mov
fiadd
adc
in
inc
sub
ror
add
ret
xchg
mov
test
and
dec
(bad)
jae
out
xor
cli
call
xor
dec
aaa
dec
(bad)
(bad)
cmp
xchg
sbb
iret
lahf
adc
test
outs
xchg
nop
add
push
push
push
fwait
dec
pop
jecxz
icebp
and
sar
add
test
sub
ret
(bad)
cmc
inc
fs
xor
xor
js
repnz
adc
daa
outs
dec
int3
or
idiv
test
mov
pop
pusha
xchg
sub
add
and
aas
out
jg
in
nop
cli
sub
add
sti
repz
(bad)
rcr
dec
inc
adc
push
mov
push
arpl
mov
test
or
xchg
mov
rcl
inc
imul
(bad)
inc
(bad)
fiadd
out
push
xor
adc
xor
into
jns
jb
mov
sbb
dec
mov
loopne
xchg
add
lds
xor
aad
mov
cmc
mov
fisttp
nop
ins
sti
(bad)
mov
mov
push
retf
xchg
cmc
cmp
sti
gs
ds
aaa
xchg
sbb
pusha
stos
(bad)
lock
call
addr16
add
lods
dec
xchg
cmps
add
in
cmp
jae
xor
cmc
xor
arpl
ins
stos
aad
sti
pop
or
sbb
pop
outs
(bad)
cmp
mov
int3
shr
add
jecxz
popf
cwde
aad
imul
js
or
jne
push
retf
les
xchg
loope
jno
(bad)
and
not
div
pusha
fnstsw
into
cmp
bound
cmc
pop
cmc
mov
jo
adc
cmps
in
jb
mov
ins
push
xchg
movs
mov
into
lds
lods
mov
adc
mov
test
aas
cmps
lods
cwde
cmp
mov
sub
jns
hlt
nop
sub
aaa
jo
sub
test
frstor
outs
stos
imul
mov
cmc
shr
jae
int
stos
sub
ds
aaa
add
sub
sbb
ds
jp
inc
push
stos
xchg
outs
xchg
xor
cmp
sbb
jmp
(bad)
call
(bad)
xlat
popf
dec
or
ror
out
stos
adc
pop
fld
dec
cld
push
(bad)
pop
neg
add
jge
and
neg
cmp
sub
arpl
scas
and
rol
mov
mov
xor
xchg
mov
fild
push
fucomp
add
cmc
cmp
test
add
inc
scas
retf
mov
add
jmp
or
addr16
mov
xchg
(bad)
(bad)
push
in
dec
shl
or
cmp
ss
push
jmp
jae
and
movs
fsubr
mov
std
retf
in
bound
xor
mov
clc
cld
les
(bad)
fldenv
jnp
sub
and
sub
jle
dec
in
je
enter
(bad)
lock
push
js
iret
sbb
jns
stos
inc
icebp
std
aaa
push
movs
mov
call
and
sbb
cwde
repnz
and
jmp
in
mov
cmp
push
sbb
lock
sub
dec
pop
rcl
or
adc
test
push
jne
inc
and
pop
shl
inc
add
jmp
and
mov
push
inc
adc
cmps
push
dec
aaa
outs
xor
in
jne
jmp
mov
dec
cwde
retf
jnp
mov
xchg
loope
inc
xor
xor
mov
push
push
data16
sbb
push
jecxz
pop
jecxz
in
adc
addr16
dec
clflush
ins
jns
cwde
pop
mov
(bad)
popf
call
call
xchg
or
xor
(bad)
pop
enter
pop
jecxz
les
std
sbb
hlt
neg
and
loope
or
jnp
cmp
sub
mov
lods
push
rol
test
or
cmp
adc
sub
into
cmp
xor
lahf
repz
adc
mov
xor
ds
cmp
ins
adc
push
inc
push
aam
aaa
sti
pop
adc
sti
mov
(bad)
and
bound
inc
outs
ss
jl
cmps
mov
cmp
and
imul
scas
dec
push
xchg
xchg
xchg
push
call
jbe
clc
(bad)
inc
data16
cmp
aas
popa
adc
xor
stos
call
jno
hlt
xchg
imul
or
imul
jl
mov
repnz
xchg
out
xlat
leave
cmps
jge
iret
ja
or
retf
gs
fbstp
xchg
adc
pop
or
stos
inc
push
mov
call
or
in
fsub
cld
lods
mov
mov
loope
mov
pop
outs
push
push
jnp
outs
in
imul
mov
jbe
push
mov
cmc
cli
xchg
jle
push
push
test
xchg
xchg
cmp
push
inc
pop
aas
iret
ins
pop
dec
std
jecxz
jecxz
push
xor
xchg
pop
cli
sub
or
call
ss
cld
cmp
stos
xchg
adc
dec
rcl
fwait
push
sar
dec
mov
leave
or
int
xchg
add
inc
pop
sbb
pop
add
push
xor
xchg
daa
arpl
out
ja
pop
and
and
adc
test
pop
scas
aam
xlat
jmp
inc
xchg
int
mov
ja
icebp
es
test
ja
fcom
sbb
inc
enter
ja
fs
mov
sub
(bad)
mov
push
or
and
lods
mov
sbb
inc
fisub
mov
loope
retf
add
aas
les
ins
push
and
outs
in
mov
mov
pop
fstp
dec
jmp
jae
jbe
in
pop
mov
adc
imul
stos
pop
sub
mov
xlat
lahf
or
in
inc
ja
adc
fsub
(bad)
mov
addr16
imul
in
not
(bad)
js
out
xchg
and
xor
cmps
iret
gs
jbe
fld
xor
mov
mov
pop
es
addr16
xchg
repnz
xlat
xchg
mov
test
out
and
sbb
sbb
addr16
jge
fild
popf
aaa
pop
xchg
pop
xchg
jne
pop
js
sub
xor
pop
pop
dec
imul
push
call
mov
cmp
sbb
test
xchg
jmp
cmps
sbb
or
or
mov
(bad)
dec
fisub
stos
icebp
jp
cwde
ja
cdq
xchg
xor
mov
jb
nop
push
mov
les
jecxz
iret
sti
lock
aad
gs
xlat
enter
cmp
pop
mov
rcl
dec
leave
loopne
imul
mov
test
push
sbb
aam
sub
lahf
(bad)
xchg
xchg
loop
pushf
(bad)
stos
fdivrp
mov
mov
mov
mov
jb
or
or
jg
outs
mov
mov
call
popf
movs
js
cmps
cwde
lods
dec
loop
pop
(bad)
add
das
(bad)
stos
cmp
xor
adc
aaa
inc
xor
pop
jle
or
xchg
into
or
out
cmp
ds
sets
sti
retf
sub
mov
ja
in
xor
cmp
sub
rcr
aad
dec
mov
es
ss
out
jle
pusha
mov
jno
cmp
or
fimul
shr
(bad)
in
js
mov
ds
push
cmp
scas
xor
shr
mov
jbe
add
call
(bad)
fimul
adc
das
cld
outs
int
xchg
out
inc
sar
sbb
sbb
fstp
int
add
pop
out
pusha
call
push
mov
test
push
(bad)
jecxz
dec
popf
pop
test
repz
mov
xor
mov
mov
jnp
out
frstor
mov
or
and
mov
xchg
jns
sti
inc
mov
lods
pop
(bad)
sbb
cmp
int
sub
cmp
icebp
aad
xchg
leave
xchg
test
push
mov
arpl
sub
aas
xchg
sub
inc
in
push
pop
arpl
call
enter
test
pop
inc
mov
sub
adc
mov
fwait
rcl
add
sbb
sub
mov
loope
(bad)
aaa
mov
add
pop
xchg
dec
pop
aad
mov
fwait
xchg
lock
fsub
fmul
stos
sbb
fstp
retf
mov
fsubr
ret
push
dec
in
scas
shl
jl
jno
xchg
popf
in
pop
fs
cli
fcom
and
fisub
(bad)
mov
sub
rol
mov
in
cdq
xchg
in
lock
push
repz
loop
adc
int
xor
in
retf
dec
jle
(bad)
rcl
popa
retf
add
(bad)
inc
das
jmp
scas
lods
add
dec
add
ins
in
cmps
ss
jb
inc
(bad)
dec
sar
or
call
jo
adc
or
cwde
push
js
jl
xchg
cmp
outs
ss
xor
xor
pop
push
mov
int
mov
inc
xchg
xchg
or
aad
and
xor
repz
lods
mov
jb
aaa
mov
cmp
inc
leave
rcr
mov
pop
test
enter
adc
lea
daa
or
arpl
(bad)
cmps
dec
jmp
int3
mov
mov
repz
jle
push
fidiv
(bad)
fild
stc
mov
ins
mov
mov
jmp
add
mov
shl
sbb
repz
pop
mov
pop
xchg
out
scas
call
push
dec
rcr
adc
push
cmp
pusha
push
jge
cdq
xor
sbb
out
(bad)
push
sub
mov
pop
mov
gs
xchg
mov
cmp
sbb
cmp
loope
push
outs
mov
out
adc
mov
jecxz
push
neg
stos
iret
mov
mov
in
test
pop
or
mov
xchg
cmp
cmp
popf
fwait
xor
bound
sub
mov
sahf
mov
dec
or
or
mov
stos
xor
sti
hlt
jae
push
ins
mov
lock
xchg
loop
movs
mov
adc
mov
loop
fisubr
jg
mov
lahf
sbb
dec
sbb
hlt
jp
gs
mov
shl
add
addr16
pop
mov
push
push
enter
dec
lock
adc
mov
dec
in
cmp
sub
sbb
pop
xor
pop
stc
dec
dec
xchg
push
scas
inc
xchg
mov
xor
fs
mov
std
mov
pop
repz
dec
xchg
mov
ins
shl
xchg
sbb
push
les
in
jmp
cs
mov
cld
xor
sbb
push
test
inc
arpl
loopne
mov
lds
inc
(bad)
pop
sbb
cmps
out
movs
adc
cmp
or
cmp
push
sub
ja
mov
(bad)
and
jo
(bad)
mov
loopne
mov
out
rol
into
push
jbe
push
jecxz
xor
add
sahf
imul
in
icebp
xor
lea
stos
stc
pop
cld
xchg
or
push
cmps
inc
or
out
adc
stos
jg
fcom
fmul
dec
push
adc
pop
dec
jle
ja
or
ds
ja
pop
push
and
movs
fwait
xor
mov
mov
inc
nop
daa
push
(bad)
push
cld
adc
aaa
lods
and
fisub
call
adc
pop
dec
add
out
fld
mov
(bad)
in
cmp
inc
test
ds
shl
mov
mov
or
test
add
and
mov
push
int
sbb
sbb
push
mov
leave
fwait
bound
dec
movs
sub
int
pop
les
shl
add
fstp
xor
mov
adc
mov
fistp
pop
dec
push
sub
cwde
mov
fimul
push
pop
ds
(bad)
xchg
imul
jecxz
mov
xlat
dec
sub
clc
pop
(bad)
sub
pop
rol
mov
pop
xor
test
pop
sub
pop
and
dec
movs
mov
loope
push
sbb
inc
and
or
and
xchg
pop
pop
cmps
outs
lods
cwde
push
fistp
sar
xor
pushf
loope
sub
call
ins
(bad)
int
popf
mov
xchg
jo
adc
fs
scas
pop
fs
inc
ror
dec
push
add
fcom
stos
int3
mov
iret
lahf
push
cmp
in
pop
cmp
sub
shl
sub
sar
aas
in
and
fdiv
dec
mov
sbb
loop
jae
xchg
sbb
cmp
mov
(bad)
lds
fisubr
jmp
(bad)
xchg
cmp
das
mov
sbb
add
push
jmp
out
mov
sub
mov
push
das
mov
test
hlt
mov
dec
ds
pop
push
imul
pop
sub
cdq
xchg
daa
ins
dec
mov
or
(bad)
out
js
ret
pop
scas
dec
cwde
lock
push
pop
or
push
lea
mov
mov
xor
and
xchg
push
into
test
mov
cmp
bound
mov
lock
adc
and
add
cmp
(bad)
bound
out
lods
call
jp
test
stos
aam
push
enter
test
mov
adc
sbb
jl
or
inc
aam
(bad)
imul
and
mov
cmp
lea
and
sub
xchg
js
ret
dec
or
xchg
pop
loop
movs
aaa
inc
(bad)
lock
push
sti
mov
scas
(bad)
sub
xchg
jbe
pop
cdq
mov
add
out
add
or
imul
imul
repnz
or
push
scas
sbb
inc
and
adc
dec
or
imul
retf
std
xchg
jo
push
dec
push
dec
arpl
cmp
inc
add
retf
inc
mov
and
lea
jle
push
out
repnz
sub
in
call
sbb
pop
mov
movs
and
(bad)
in
adc
xchg
adc
or
movs
gs
daa
jl
sub
pop
(bad)
clc
ja
popa
or
mov
cmc
add
ja
pop
adc
repnz
js
das
pop
sbb
ins
pop
fcom
pop
add
dec
xor
dec
fimul
in
aad
jmp
xor
aad
xor
sbb
mov
jmp
mov
adc
movs
outs
mov
hlt
sbb
and
jecxz
mov
or
adc
nop
cdq
daa
sub
mov
outs
jl
mov
daa
push
data16
pop
pop
and
push
repz
xchg
lock
xchg
jae
pop
mov
sub
push
pop
pop
xor
jg
outs
pushf
mov
sti
mov
xchg
push
fdivr
mov
push
lock
xchg
cmp
xor
mov
mov
adc
sbb
add
popa
repz
sub
fiadd
mov
xchg
fsub
(bad)
leave
jns
les
clc
(bad)
mov
scas
xchg
xchg
je
outs
xchg
inc
sub
cmp
shr
test
ins
adc
push
in
(bad)
cli
lock
inc
clc
xor
xchg
and
imul
mov
addr16
and
movs
xor
and
dec
adc
pop
ds
fstp
es
mov
pop
and
(bad)
dec
in
cmp
cs
add
mul
push
retf
call
mov
mov
add
out
shl
jecxz
cmp
inc
inc
test
cmp
jns
or
fsub
push
pusha
add
jecxz
pop
stos
out
neg
retf
fidiv
mov
adc
cmp
js
bound
sbb
cmp
jno
pop
lods
push
sub
cli
outs
stc
push
add
lods
mov
xor
cmp
and
or
sbb
pop
jnp
pop
sahf
pop
dec
fld
sbb
stos
out
jo
jb
inc
nop
push
fld
jne
imul
xchg
mov
cmp
push
and
in
adc
mov
push
mov
into
adc
xor
cmps
fucomip
movs
pop
sbb
jle
js
gs
mov
(bad)
movs
xchg
pop
out
retf
pop
in
pop
jns
ins
mov
xchg
enter
and
out
fcomp
js
and
into
mov
mov
lods
xchg
jno
and
mov
pusha
test
repz
pop
mov
cli
in
xlat
in
sbb
pop
dec
mov
aaa
(bad)
fst
movs
xchg
adc
ins
fnstsw
xchg
pop
in
in
fs
xchg
clc
xor
cmp
jb
dec
je
xchg
xor
dec
(bad)
jl
or
rol
mov
mov
inc
cmp
dec
lods
adc
jns
pop
inc
idiv
or
xor
cmp
scas
addr16
xchg
xchg
pop
pop
mov
je
dec
call
scas
mov
aad
test
xchg
(bad)
mov
mov
push
cmp
adc
outs
pop
stos
ror
outs
xchg
test
std
outs
jmp
inc
pop
test
cmps
int3
sbb
fdiv
repz
pop
inc
mov
mov
stos
mov
ret
push
xor
cmp
movs
inc
in
rsqrtps
mov
hlt
stos
inc
retf
fist
sub
sti
mov
aas
adc
rol
dec
and
push
sbb
sbb
or
mov
xchg
movs
icebp
adc
or
mov
pushf
inc
ret
dec
jnp
std
retf
sbb
mov
cmps
aad
imul
std
aad
and
mov
cmc
sub
pop
imul
mov
jmp
pop
adc
mov
cmp
mov
sub
push
imul
out
in
xlat
iret
xor
neg
in
out
lock
adc
add
add
aad
je
ror
cld
cmp
enter
xor
(bad)
popa
in
in
sbb
test
aaa
mov
fimul
mov
fbstp
dec
inc
push
pop
sbb
cmp
pusha
(bad)
pop
movs
lds
not
mov
into
mov
adc
jnp
and
push
add
jmp
int3
adc
fcomp
fistp
nop
mov
or
or
pushf
cmp
int3
push
add
sub
lds
pop
push
jns
sbb
sti
sbb
mov
or
jle
sub
mov
outs
xchg
inc
jmp
push
out
cdq
sub
pop
lahf
cmps
movs
out
mov
cmp
test
xor
sbb
sbb
jl
call
mov
adc
test
mov
jbe
xchg
add
jns
ficomp
or
test
and
out
or
fmul
dec
mov
and
mov
add
jmp
sbb
(bad)
and
jno
repz
out
cmps
cmp
popa
pushf
and
inc
out
ror
punpckhdq
es
mov
fld
mov
mov
retf
ja
xor
into
call
push
adc
or
ret
aaa
mov
cmc
xchg
add
jnp
xchg
cmp
cdq
mov
and
sub
clc
ret
adc
jge
add
sbb
sub
cdq
cmp
(bad)
jb
das
and
into
sub
mov
mov
popa
pop
mov
push
test
lahf
cmps
sar
pushf
xor
xchg
movs
call
ja
in
dec
int3
mov
sub
push
mov
push
cmps
cmps
xor
shr
or
and
cli
mov
into
mov
lea
jle
pop
sahf
jmp
push
push
ds
test
sub
jno
shl
push
inc
cmps
fild
frstor
stos
fadd
jg
fadd
lea
daa
loope
ins
fld
or
inc
push
mov
into
mov
push
cld
adc
seto
retf
xor
loope
ss
adc
mov
mov
mov
shr
sbb
sti
in
xor
leave
test
cmc
inc
stos
outs
jnp
fiadd
call
sahf
pop
ds
inc
mov
xchg
xchg
inc
xor
scas
jbe
rol
xchg
and
fild
xchg
scas
and
jp
jg
jne
push
int
mov
inc
push
(bad)
stos
inc
loopne
enter
les
or
je
dec
icebp
lds
pop
xor
push
jbe
cli
cmp
(bad)
cmp
pop
mov
pop
pop
mov
hlt
int3
cmp
ror
cdq
pop
movs
neg
xchg
(bad)
mov
loopne
push
ins
call
dec
test
xor
cdq
pop
retf
daa
add
bound
jmp
in
cs
cmp
es
ret
ins
adc
into
js
data16
mov
dec
(bad)
std
inc
int
push
add
outs
popf
xchg
sub
jne
sbb
pop
jnp
fistp
rcr
mov
mov
lea
pop
mov
jmp
fsubr
out
sahf
(bad)
or
mov
xor
fidivr
ins
sbb
sub
mov
pop
out
out
xchg
and
push
xor
mov
fist
out
sub
push
sbb
jne
mov
lea
push
xchg
std
fadd
ficom
or
push
mov
mov
aas
inc
mov
xor
and
sahf
jp
lods
aaa
call
jno
push
int3
scas
aas
mov
push
jbe
mov
mov
mov
neg
out
lea
mov
cld
stos
addr16
xchg
xchg
fbstp
xchg
mov
dec
xor
sbb
pop
cmp
mov
retf
jmp
add
sti
out
mov
sub
popf
jae
(bad)
leave
xor
adc
cmp
outs
xchg
out
cmp
lock
inc
add
sbb
stos
pop
adc
dec
sub
icebp
and
test
inc
jb
push
scas
push
inc
sbb
std
push
das
sti
cmp
ss
cld
pop
mov
fnstenv
jnp
pop
mov
pushf
inc
inc
retf
push
xchg
in
(bad)
enter
or
cs
jno
mov
xor
mov
scas
shr
fisub
leave
dec
imul
cs
fwait
add
movs
xlat
jmp
addr16
jne
std
add
pop
dec
add
mov
xor
shl
ficom
jo
outs
or
or
push
es
adc
jecxz
aam
dec
ficom
cwde
push
sbb
jb
enter
out
mov
in
(bad)
js
xchg
push
stc
js
stos
outs
xchg
xchg
retf
movs
imul
aas
sbb
bound
or
jecxz
(bad)
fcomp
clc
jo
push
add
cmp
push
adc
lahf
or
clc
push
jno
sub
jle
jge
xchg
dec
mov
inc
inc
cs
xchg
mov
sbb
fldenv
retf
dec
inc
push
addr16
sub
(bad)
fcmovnb
scas
jecxz
loopne
out
and
xchg
sbb
fstp
jno
ins
(bad)
mov
retf
push
lahf
cmp
cwde
fwait
mov
inc
iret
inc
mov
popf
pop
cld
push
int3
repnz
push
xor
mov
je
push
popa
ss
(bad)
fld
aam
cli
in
loope
ficom
sti
pop
adc
mov
add
cmp
dec
dec
cmp
mov
retf
adc
pop
aaa
sti
xchg
adc
pop
aad
rol
loopne
shr
es
xlat
inc
cmp
(bad)
dec
mov
repz
xchg
cwde
pop
pop
ret
loopne
add
out
fdiv
je
and
dec
pushf
shl
rol
or
mov
mov
scas
jno
test
sbb
dec
aad
push
je
into
jmp
adc
sub
fs
or
jg
push
popf
stos
addr16
and
push
mov
pop
je
fwait
jl
jae
aad
jns
cmps
lods
pop
push
mov
iret
shl
pop
pop
outs
or
(bad)
into
sub
mov
movs
jecxz
ror
int
cs
sbb
repnz
ins
xor
lds
inc
addr16
cmp
or
jge
push
iret
mov
cmc
pop
pop
aas
out
sub
sbb
movsx
gs
aaa
sbb
mov
lds
or
in
push
test
cmp
rcl
int
std
pop
mov
ret
cs
jecxz
and
push
inc
push
or
jnp
scas
das
out
mov
xchg
mov
sbb
(bad)
and
int3
scas
in
push
clc
sbb
pop
call
test
aam
rcr
lea
lods
adc
aad
mov
addr16
xor
push
test
cmps
add
pop
das
xchg
ins
(bad)
ds
ficomp
jecxz
sub
mov
out
stc
div
(bad)
nop
les
test
in
aam
in
and
test
pop
(bad)
xchg
aad
mov
cmc
(bad)
push
mov
aad
jae
out
inc
sub
(bad)
aas
cmp
imul
fisttp
movs
dec
xchg
pop
loope
pusha
push
leave
ds
fwait
out
jg
pop
or
pop
jnp
aas
push
into
or
push
add
cmc
shr
in
inc
pusha
push
clc
div
and
das
sub
clc
mov
pop
aad
iret
inc
aas
ins
mov
pop
lods
xor
mov
test
outs
jb
lock
push
mov
repz
dec
mov
cli
pusha
shr
dec
adc
add
popa
scas
xor
and
das
je
mov
lock
sub
xor
sbb
fisubr
inc
mov
inc
dec
push
test
ss
xchg
sar
stos
mov
and
mov
push
stc
adc
add
push
add
fwait
outs
pop
push
cdq
repz
adc
xchg
add
ja
cwde
shr
sbb
out
shl
sbb
inc
in
sti
xlat
rep
lods
xlat
inc
inc
jg
stos
movs
jle
gs
retf
es
ins
repnz
xchg
ja
int
repz
outs
ins
dec
pop
jecxz
stc
sub
mov
adc
and
jno
out
xor
inc
dec
fucomi
sbb
pop
daa
mov
fbld
je
mov
xchg
inc
jb
test
mov
ret
mov
test
fldenv
into
stos
ja
xchg
(bad)
xchg
and
popf
pop
mov
jecxz
int
cmc
sbb
jbe
nop
cmp
out
or
xchg
xor
js
add
jns
(bad)
mov
nop
sub
dec
cmp
mov
mov
cli
enter
test
xchg
popa
xchg
cmps
jae
push
jmp
adc
mov
adc
fdivr
push
popf
sub
arpl
rcl
jo
popa
mov
mov
inc
or
xor
mov
adc
cmp
test
ins
out
jns
mov
in
scas
adc
mov
adc
loope
inc
cmc
xor
popa
dec
mov
sub
xchg
outs
push
daa
cmp
or
push
add
jle
jg
(bad)
dec
retf
mov
adc
dec
(bad)
icebp
rcr
xlat
iret
and
mov
loope
push
jp
xchg
data16
xchg
daa
hlt
push
hlt
shr
test
pop
adc
pop
arpl
mov
xchg
xor
loope
dec
pusha
cmp
fiadd
inc
fisub
sbb
adc
repz
pop
mov
jmp
loop
jae
jne
in
push
mov
test
and
mov
sti
pop
push
jl
inc
mov
or
retf
sbb
xor
xchg
call
movs
sub
inc
xchg
cmps
sbb
inc
(bad)
cmc
hlt
outs
cmp
inc
cwde
push
fild
jmp
femms
daa
push
sar
sbb
jbe
cmp
mov
fldenv
aad
dec
or
leave
jno
sub
sub
xchg
into
jmp
sbb
in
out
shl
mov
adc
pop
and
out
cmps
mov
call
aam
cmp
push
repnz
ins
je
rcl
cmc
outs
adc
mov
push
xchg
pop
adc
(bad)
das
push
inc
mov
mov
(bad)
dec
enter
mov
push
dec
repz
push
sub
sti
pop
push
test
fist
test
mov
push
pop
ins
and
inc
fs
lea
push
mov
inc
or
fild
pop
push
add
mov
dec
adc
movs
iret
push
xor
lods
jns
dec
loop
cdq
je
js
xchg
xor
es
push
jp
ror
jmp
mov
xchg
xor
bnd
sti
std
clc
fadd
popf
ins
pop
xor
jae
add
mov
jno
cmp
xrelease
ret
xchg
inc
push
mov
jmp
jmp
ror
lahf
nop
xor
adc
mov
sahf
push
rcl
ficomp
add
push
jg
and
push
sbb
call
rcr
aas
shr
lods
dec
aam
sub
rcr
rcl
dec
out
add
cli
imul
mov
cmps
adc
jmp
(bad)
popf
(bad)
in
push
mov
sub
push
enter
xchg
inc
lds
stos
mov
pop
mov
inc
dec
addr16
es
xor
dec
ficom
adc
lahf
fld
lods
mov
push
imul
mov
inc
in
push
jb
sbb
loope
jae
inc
inc
fsubr
sub
inc
test
test
dec
daa
jmp
imul
sahf
or
pushf
xchg
cld
mov
push
mov
cs
xchg
ds
or
push
add
mov
push
inc
sub
hlt
in
sub
out
inc
shld
xor
pop
jmp
mov
js
cwde
stos
fidivr
fadd
pop
cdq
lods
xchg
jo
popf
div
test
add
sbb
dec
add
jns
test
fisttp
adc
ror
in
adc
not
sysret
das
es
adc
jae
mov
inc
sbb
sahf
jl
shl
icebp
or
ins
loope
pop
cmps
lods
sbb
jns
clc
pop
mov
inc
mov
mov
jnp
mov
mov
jmp
and
sahf
nop
ds
cmps
idiv
xchg
inc
jge
rcr
push
inc
sub
aas
sbb
pop
pop
repnz
jle
and
fcom
mov
cmps
push
jno
mov
push
hlt
cmp
ror
sbb
popa
dec
dec
dec
add
mov
add
jno
pop
call
pop
xchg
aam
xor
lahf
cwde
hlt
sbb
(bad)
imul
retf
mov
inc
push
adc
xchg
mov
into
(bad)
or
arpl
mov
scas
bound
push
pop
cmp
xor
call
xchg
push
fisub
adc
ror
cmp
loop
sar
pop
cmp
hlt
call
loop
test
aas
dec
mov
(bad)
mov
pop
(bad)
mov
mov
popf
jl
pop
jbe
adc
cmps
call
fwait
sahf
ficom
mov
jl
out
add
xor
jp
jl
call
stos
rcl
inc
pop
bound
mov
mov
push
or
fcomp
ret
adc
les
ds
arpl
mov
inc
or
lds
out
xchg
dec
lock
mov
(bad)
dec
mov
ss
sti
jmp
leave
or
add
push
mov
or
mov
mov
xor
mov
adc
xchg
inc
and
jne
xlat
out
pop
aad
dec
gs
jge
pop
xor
test
cmp
jle
jg
pushf
or
rol
push
jge
js
(bad)
div
sti
lea
loop
(bad)
sahf
pop
sahf
sbb
mov
loopne
xor
iret
sub
push
repz
out
sbb
rcr
retf
fistp
scas
sub
pusha
mov
out
in
cdq
sub
xchg
loopne
mov
dec
test
pop
movs
adc
lods
in
repz
shl
pop
adc
mov
or
shl
add
pop
mov
mov
jmp
mov
(bad)
aam
in
lahf
push
sbb
jnp
mov
loope
sbb
mov
mov
rep
call
into
ficomp
inc
scas
mov
daa
cmp
pusha
pop
xor
and
and
inc
(bad)
out
push
mov
mov
add
stc
sub
shl
and
jmp
jne
or
outs
mov
fs
push
sbb
sbb
adc
sub
mov
or
dec
fwait
das
in
xchg
lahf
xor
call
jb
xchg
loope
popf
fdiv
mov
adc
out
xchg
cmc
ret
loopne
hlt
pop
test
cmp
stos
mov
pop
xor
sahf
out
xchg
cmps
out
loop
mov
test
rcl
loop
sub
xlat
push
sub
test
mov
and
stc
mov
mov
sub
shr
add
xchg
js
dec
cmp
sbb
lock
(bad)
data16
jnp
cld
lahf
imul
outs
jo
xchg
push
cmp
mov
sub
jmp
cld
das
hlt
xor
js
jno
jp
mov
xchg
test
jmp
mov
ins
out
and
jmp
push
lds
shl
push
cmps
xor
fisub
pop
and
mov
inc
test
movs
add
pop
add
xor
int3
les
sub
(bad)
fmul
retf
sbb
adc
push
stos
iret
mov
xchg
mov
fiadd
in
out
xchg
retf
jno
push
sub
rcl
xor
aad
test
jl
xor
jns
(bad)
pusha
cmps
sbb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
inc
and
add
jae
xor
and
push
fadd
test
cwde
rol
inc
inc
sbb
adc
add
(bad)
mov
add
ror
scas
cmp
repz
and
mov
mov
fimul
scas
dec
dec
xor
(bad)
mov
add
push
in
inc
add
cmps
cdq
sbb
mov
add
cmp
(bad)
mov
dec
add
add
add
add
sub
mov
sub
shl
add
add
cmove
add
mov
and
inc
test
add
jmp
mov
cmps
sbb
and
maxps
rol
add
scas
inc
pop
test
test
add
lods
add
sbb
sbb
mov
ud1
outs
dec
add
sbb
add
int3
inc
and
sbb
push
pushf
out
aaa
mov
test
add
fstp
jmp
xlat
(bad)
adc
mov
int3
push
mov
add
add
inc
dec
mov
dec
dec
jmp
sbb
and
fadd
test
dec
inc
in
add
add
add
adc
mov
test
add
add
mov
or
push
std
add
push
push
and
mov
call
mov
pop
movmskps
int3
iret
and
mov
add
call
in
mov
(bad)
(bad)
(bad)
js
jae
mov
in
or
jmp
mov
dec
sbb
mov
and
imul
mov
je
jmp
mov
inc
sbb
add
inc
call
mov
call
adc
and
jg
pop
add
rcr
push
fadd
scas
test
inc
dec
jae
push
lods
jmp
mov
lea
pop
aad
pop
dec
jmp
data16
mov
ret
nop
push
mov
push
and
sub
mov
mov
call
call
call
mov
mov
mov
add
mov
call
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
jmp
mov
mov
call
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
call
mov
call
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
call
call
mov
sub
mov
call
add
mov
mov
mov
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
shl
xchg
repz
popf
adc
int3
int3
int3
push
mov
push
sub
lea
sub
mov
lea
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
call
jg
jmp
mov
add
call
je
jmp
mov
add
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
call
je
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
call
call
mov
mov
mov
mov
call
mov
mov
pushf
sub
popf
cmp
cmovl
mov
jmp
call
call
jmp
mov
mov
jmp
call
add
pop
pop
ret
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
push
mov
push
sub
call
mov
call
call
mov
mov
mov
call
mov
mov
add
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
call
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
and
or
add
mov
adc
popa
mov
in
add
int
or
add
(bad)
and
add
add
test
add
add
jl
add
(bad)
jae
add
add
call
movzx
add
leave
pop
test
mov
call
mov
fprem1
std
mov
fmul
or
and
mov
stos
mov
in
les
fmul
ror
and
dec
add
movs
xchg
mov
add
mov
cmc
je
or
inc
and
call
cmps
dec
and
retf
popa
addr16
add
popa
and
add
add
inc
pop
mov
test
mov
mov
xchg
cmp
mov
or
add
popa
and
in
test
in
leave
sub
mov
xor
xchg
lods
push
mov
or
fimul
add
push
sar
aam
add
mov
jmp
add
pop
mov
sub
add
xchg
mov
mov
push
je
jmp
mov
xchg
push
cs
inc
add
popa
psubsb
loope
add
ror
mov
add
ret
sub
cmp
enter
test
add
dec
and
add
sar
or
mov
pop
add
mov
add
in
test
ror
sub
mov
mov
push
jmp
es
and
jl
push
fcmovb
jb
mov
add
(bad)
je
or
add
add
add
std
(bad)
pop
or
pop
movs
setno
lods
add
add
popa
int3
sub
call
add
je
jmp
mov
sub
xchg
test
hlt
clc
cli
mov
add
mul
add
dec
and
add
sub
data16
add
sbb
push
mov
jl
dec
add
jl
rcl
sahf
test
add
jg
jmp
in
frstor
in
dec
mov
test
je
jmp
mov
cli
sbb
shl
xor
mov
add
inc
push
and
add
adc
dec
scas
mov
cmp
mov
lods
enter
add
lea
out
loopne
ror
pop
punpckhdq
add
shr
dec
data16
ret
pop
sub
xchg
xor
add
jl
or
add
mov
sub
mov
push
add
add
ror
loop
pop
scas
cmp
xor
loopne
ror
add
test
add
lods
jmp
mov
and
test
es
inc
or
add
push
pop
leave
add
jmp
in
test
mov
inc
jmp
cmp
jl
lods
add
clc
push
add
imul
icebp
into
mov
loopne
pop
in
or
int
and
rdpmc
(bad)
cmp
add
ret
add
add
add
sub
jno
and
je
jmp
jl
call
sub
mov
push
leave
cmp
dec
add
in
cmp
add
sub
test
mov
jl
lea
sub
retf
(bad)
ret
xchg
inc
mov
cmovbe
add
add
dec
mov
mov
movs
xor
mov
ins
test
inc
clc
and
popa
add
sub
mov
jg
mov
leave
rol
loop
loopne
cmp
add
mov
cmp
cmp
dec
add
add
test
loopne
add
push
les
mov
xchg
pmaxsw
int3
mov
add
mov
and
in
shl
rcr
setnp
test
lods
enter
loopne
push
add
ja
xchg
sub
inc
and
pop
jmp
in
test
add
add
aad
and
mov
xchg
ret
pop
dec
inc
add
mov
jl
dec
add
add
xor
push
clc
out
and
mov
addr16
mov
loopne
add
shr
sbb
es
dec
je
test
jl
loopne
add
sub
mov
jg
mov
add
int3
xor
add
std
mov
inc
je
jmp
dec
test
movs
add
pushf
mov
inc
and
jg
xchg
push
test
loopne
add
mov
mov
push
rol
dec
(bad)
mov
inc
cmp
movs
push
mov
std
outs
xchg
sahf
mov
jae
and
add
mov
add
int3
mov
out
cs
cmp
inc
and
cmovge
or
mov
jmp
xchg
fs
and
psubb
add
mov
int3
mov
loopne
add
mov
call
test
shr
dec
add
add
cmp
sub
jge
fisubr
mov
add
sbb
test
mov
shl
xor
(bad)
cmc
ins
psrad
scas
add
add
ret
add
hlt
mov
mov
loopne
xor
xchg
fcom
cli
add
enter
sar
in
add
les
popa
fistp
and
data16
jmp
mov
mov
dec
mov
test
es
adc
add
or
loope
mul
call
sub
mov
mov
xor
add
pop
pshufw
loop
shl
sbb
and
add
mov
mov
jmp
mov
mov
mov
rol
add
jns
cmovne
mov
and
in
add
and
leave
shl
stos
rol
add
mov
test
cmpxchg
jae
and
lods
enter
add
add
mov
jne
add
fs
inc
xor
mov
push
ret
pop
movs
push
cmp
add
lods
enter
add
add
sbb
je
jle
jae
add
call
mov
and
add
add
push
ins
add
add
cmc
out
inc
popf
add
ret
xchg
and
adc
ficom
add
test
ins
int
add
pop
mov
fs
ins
dec
and
add
add
test
add
sub
movs
sbb
add
mov
es
and
add
test
mov
and
add
addr16
mov
pop
test
add
push
lahf
add
ret
mov
mov
jg
and
sti
lods
enter
repnz
stc
or
mov
icebp
inc
outs
fdivr
mov
repnz
cmp
retf
add
add
add
lods
enter
adc
add
push
add
xchg
pop
mov
mov
inc
inc
add
leave
not
dec
mov
mov
jmp
mov
add
fimul
lods
enter
(bad)
jae
add
add
ds
mov
add
call
mov
mov
test
add
call
mov
(bad)
jmp
repz
push
add
jo
cld
sti
lods
enter
or
sahf
mov
sahf
call
mov
xor
out
frstor
test
mov
mov
cmp
pop
cmove
sub
add
jmp
ja
jo
inc
add
in
hlt
add
jl
adc
popa
add
and
add
retf
and
add
popa
cdq
cmps
loop
or
ror
mov
mov
and
add
add
xchg
jmp
mov
mov
xor
fxch
mov
cmc
mov
mov
and
add
add
mov
call
push
add
out
test
pop
add
push
test
ror
inc
dec
jmp
mov
pushf
xor
sub
clc
jmp
les
test
add
push
in
add
and
dec
inc
add
clc
and
stos
add
add
ds
add
jp
adc
(bad)
xchg
xchg
xchg
clc
stc
cli
lods
or
mov
and
add
add
(bad)
popa
add
rcl
ins
inc
and
ror
xor
cmp
and
push
mov
fstp
add
enter
push
add
adc
int3
mov
mov
ins
or
add
test
xlat
push
add
add
push
jmp
mov
out
enter
hlt
pop
pop
lods
cmp
mov
mov
retf
mov
adc
push
rol
and
push
movs
push
jbe
and
add
cli
lds
mov
add
and
add
add
int3
add
mov
rol
add
cwde
rol
ror
dec
add
loop
in
mov
ja
ins
add
add
fsub
cli
add
mov
lods
jg
bound
push
idiv
in
inc
sahf
add
imul
inc
lds
dec
inc
add
clc
and
add
scas
cmp
or
mov
cmp
and
add
popa
mov
push
rol
add
mov
in
rol
int
in
add
imul
mov
sub
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
call
call
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
movzx
push
mov
xor
cmp
pop
jl
call
jmp
mov
mov
movzx
cmp
jl
jmp
mov
mov
mov
sub
sub
add
add
sub
sub
sub
sub
sub
mov
movzx
mov
sub
sub
add
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
call
mov
mov
call
mov
mov
sub
mov
add
mov
sub
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
and
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
mov
and
xor
or
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
mov
and
xor
mov
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
movzx
cmp
setge
mov
call
add
sub
mov
add
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
mov
and
mov
mov
xor
and
and
mov
mov
or
mov
or
xor
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
mov
and
xor
or
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
and
mov
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
mov
sub
sub
mov
sub
sub
mov
movzx
add
sub
sub
sub
sub
mov
mov
jmp
movzx
mov
mov
mov
call
mov
cmp
jge
mov
mov
mov
mov
mov
sub
mov
mov
sub
add
mov
mov
sub
sub
add
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
mov
mov
and
mov
and
mov
mov
and
mov
mov
mov
or
mov
or
xor
mov
mov
or
xor
mov
or
and
or
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
mov
mov
mov
call
mov
sub
add
sub
sub
sub
sub
add
add
mov
sub
sub
mov
movzx
mov
shl
call
mov
shl
mov
mov
mov
sub
sub
add
call
sub
add
mov
call
mov
mov
sub
add
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
sub
sub
add
add
sub
sub
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
jmp
mov
mov
mov
add
add
sub
mov
sub
sub
mov
sub
add
mov
movzx
mov
shl
mov
mov
mov
shl
mov
mov
mov
sub
mov
sub
add
sub
sub
add
add
sub
sub
add
mov
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
mov
call
xor
jmp
xor
mov
test
setne
test
je
xor
cmp
setne
test
je
call
mov
mov
test
jne
call
mov
jmp
and
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
push
mov
push
push
push
test
je
mov
test
je
mov
test
jne
call
mov
call
xor
pop
pop
pop
leave
ret
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
je
mov
jmp
mov
mov
test
je
mov
and
je
mov
mov
test
je
js
cmp
jae
mov
mov
push
push
push
call
mov
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
mov
mov
test
je
xor
div
mov
sub
mov
jmp
mov
push
push
push
call
pop
push
call
add
cmp
je
mov
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
push
movsx
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
xor
inc
mov
test
jne
mov
jmp
or
sub
mov
xor
div
jmp
push
push
call
cmp
je
cmp
je
xor
mov
test
setne
test
jne
call
mov
call
xor
call
ret
push
call
pop
and
push
push
push
push
call
add
mov
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
cmp
mov
push
jne
test
jns
push
push
jmp
push
push
mov
push
push
call
mov
pop
pop
ret
push
mov
cmp
mov
push
push
mov
push
je
push
pop
mov
add
neg
push
mov
pop
mov
xor
div
mov
lea
cmp
ja
lea
mov
add
test
jne
xor
mov
sub
movzx
mov
mov
mov
sub
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
mov
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
mov
mov
cmp
jge
mov
mov
test
je
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
push
call
pop
mov
mov
mov
test
je
push
mov
mov
add
push
call
mov
mov
add
push
call
mov
mov
mov
mov
test
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
push
push
xor
and
push
mov
xor
push
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
mov
call
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
mov
test
je
mov
test
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
test
jne
inc
and
jmp
test
jne
inc
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
mov
test
jne
mov
test
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
push
add
pop
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
dec
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
mov
lea
push
push
call
add
mov
cmp
je
or
or
jmp
movzx
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jl
inc
add
or
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
dec
or
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
or
jl
inc
add
inc
and
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
inc
add
inc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
inc
add
or
ror
add
or
ror
inc
add
or
jmp
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
inc
add
inc
add
inc
add
or
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
push
xor
push
cmp
jne
call
push
pop
mov
call
mov
jmp
mov
test
je
call
test
jne
call
test
jne
xor
inc
xor
push
push
push
push
mov
push
push
call
mov
test
jne
call
push
call
pop
xor
jmp
add
push
call
pop
mov
test
je
push
push
push
push
push
push
call
test
jne
call
push
call
push
call
and
pop
jmp
xor
inc
pop
pop
leave
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
push
pop
mov
call
mov
jmp
or
xor
cmp
setne
test
je
cmp
je
mov
and
neg
sbb
inc
je
and
push
push
push
push
push
push
lea
push
call
add
mov
mov
mov
call
test
je
or
mov
call
ret
mov
mov
cmp
je
test
je
mov
mov
sar
and
shl
mov
and
push
call
pop
ret
push
mov
push
and
lea
push
push
call
pop
pop
test
jne
or
leave
ret
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
pop
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
mov
test
jne
xor
jmp
push
push
push
lea
call
mov
xor
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
dec
mov
inc
test
push
mov
pop
je
test
jne
movzx
mov
mov
test
jne
mov
movzx
jmp
mov
test
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
movzx
mov
mov
inc
test
push
pop
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
movzx
inc
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
je
mov
and
mov
pop
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
push
call
mov
xor
test
je
mov
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
mov
movzx
dec
inc
test
mov
je
test
jne
movzx
mov
test
jne
mov
movzx
mov
jmp
mov
test
jne
mov
jmp
shl
movzx
or
mov
movzx
inc
mov
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
test
je
movzx
mov
mov
movzx
mov
mov
movzx
inc
test
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
mov
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
push
test
mov
pop
je
mov
movzx
mov
mov
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
pop
je
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
and
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
mov
mov
call
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
inc
push
mov
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
push
call
or
mov
and
push
call
pop
test
jne
or
jmp
push
call
pop
and
xor
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
inc
and
call
mov
test
jne
lea
push
call
test
je
lea
push
call
add
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
or
mov
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
mov
test
je
mov
add
mov
add
cmp
jae
mov
or
and
add
mov
jmp
mov
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
sub
push
call
test
je
push
push
call
push
call
mov
test
jne
or
jmp
mov
call
test
mov
je
and
and
mov
mov
mov
mov
mov
lea
push
push
mov
push
push
push
call
jmp
or
push
push
push
push
push
push
push
call
pop
leave
ret
push
mov
sub
push
xor
test
push
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
jne
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
mov
sub
je
dec
je
dec
je
call
mov
mov
or
call
push
pop
mov
call
mov
jmp
mov
jmp
test
je
test
je
mov
mov
jmp
mov
jmp
mov
mov
mov
push
push
pop
push
pop
mov
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
and
mov
cmp
jg
je
test
je
cmp
je
cmp
je
cmp
jne
mov
jmp
push
jmp
push
pop
jmp
cmp
je
cmp
je
cmp
je
call
mov
mov
or
call
push
pop
mov
call
jmp
push
jmp
xor
inc
mov
mov
mov
mov
test
je
mov
not
and
test
mov
js
xor
inc
mov
test
je
or
or
mov
mov
mov
test
je
or
mov
test
je
or
mov
test
je
or
jmp
test
je
or
mov
call
mov
mov
cmp
jne
call
mov
or
call
mov
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
lea
push
push
push
push
call
add
mov
cmp
jne
mov
mov
mov
and
cmp
jne
test
je
push
lea
push
and
push
push
push
mov
push
push
call
add
mov
cmp
jne
mov
mov
sar
and
mov
shl
and
call
push
call
pop
call
mov
jmp
push
call
test
jne
mov
mov
sar
and
mov
shl
and
call
mov
push
call
pop
push
call
test
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
pop
pop
mov
mov
sar
and
mov
shl
or
mov
mov
mov
sar
and
mov
shl
mov
and
mov
mov
and
mov
jne
test
jns
test
je
push
push
push
push
call
mov
and
add
mov
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
call
and
add
cmp
je
mov
mov
test
jns
test
jne
mov
and
jne
or
jmp
or
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
and
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
test
je
push
pop
cmp
jbe
cmp
jbe
cmp
je
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
mov
push
pop
cmp
je
cmp
jne
cmp
jne
mov
jmp
and
cmp
jne
push
call
pop
call
push
pop
mov
jmp
cmp
jne
push
push
push
push
call
and
add
cmp
je
mov
jmp
test
je
push
pop
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
jne
jmp
push
pop
movsx
mov
dec
je
dec
jne
mov
jmp
push
pop
mov
mov
mov
sub
push
lea
add
push
push
call
add
cmp
je
mov
add
cmp
jg
mov
mov
sar
and
mov
shl
mov
xor
and
xor
mov
mov
mov
sar
and
mov
shl
shr
mov
shl
and
or
mov
mov
cmp
jne
test
je
mov
mov
sar
and
mov
shl
or
mov
mov
mov
mov
and
cmp
jne
test
je
push
call
push
lea
push
and
push
push
push
push
push
call
add
cmp
jne
call
push
call
mov
mov
sar
and
mov
shl
and
push
call
pop
jmp
mov
mov
sar
and
mov
shl
mov
mov
jmp
push
push
push
push
push
call
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
sub
test
je
movzx
cmp
jne
test
cmove
inc
sub
jbe
test
jne
lea
and
cmp
ja
mov
cmp
jne
sub
jbe
lea
add
not
and
test
je
xor
pop
pop
ret
lea
sbb
or
pop
pop
ret
push
mov
cmp
push
jne
cmp
jne
call
mov
call
mov
jmp
cmp
je
mov
cmp
jbe
call
mov
call
mov
jmp
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
push
mov
sub
cmp
je
push
push
push
push
lea
call
mov
mov
test
je
mov
test
je
mov
cmp
jbe
call
mov
call
jmp
mov
cmp
jne
push
push
push
call
add
mov
jmp
sub
movzx
lea
push
push
call
mov
movzx
lea
push
push
call
add
inc
dec
je
test
je
cmp
je
sub
cmp
je
mov
and
pop
mov
pop
pop
leave
ret
xor
leave
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
push
push
push
mov
xor
push
push
push
push
mov
mov
call
mov
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
mov
js
jg
test
je
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
mov
mov
pop
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
mov
sbb
mov
js
jg
test
je
jmp
call
cmp
jne
call
mov
or
or
push
push
call
pop
pop
push
push
call
push
call
jmp
test
jg
jl
test
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
mov
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
push
mov
sub
mov
push
push
mov
push
push
pop
xor
mov
mov
mov
cmp
jne
call
mov
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
mov
mov
test
je
cmp
jbe
call
mov
call
mov
jmp
test
je
test
jne
cmp
jne
call
and
jmp
mov
add
sar
mov
movsx
dec
je
dec
jne
mov
not
test
je
and
mov
mov
jmp
mov
not
test
je
shr
cmp
jae
push
pop
push
call
pop
mov
test
jne
call
mov
call
mov
jmp
push
push
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
cmp
je
test
je
mov
xor
lea
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
test
je
mov
mov
inc
push
dec
cmp
mov
pop
mov
jne
mov
mov
cmp
je
test
je
push
pop
mov
mov
push
inc
pop
mov
dec
mov
push
call
test
mov
pop
je
mov
test
je
lea
push
push
call
mov
test
je
cmp
jne
push
lea
push
mov
shr
mov
push
push
push
call
test
jne
call
push
call
pop
or
mov
jmp
mov
lea
mov
jmp
mov
mov
push
lea
push
push
push
push
call
test
je
mov
test
js
cmp
ja
mov
add
mov
mov
test
jns
cmp
je
test
je
mov
cmp
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
mov
dec
cmp
jae
lea
cmp
jne
push
pop
add
mov
jmp
mov
inc
mov
jmp
push
lea
push
push
lea
push
mov
inc
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
inc
jmp
mov
mov
mov
inc
mov
jmp
cmp
jne
push
pop
cmp
jne
mov
inc
push
pop
cmp
jb
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
inc
jmp
mov
push
pop
mov
inc
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
inc
mov
mov
sub
cmp
jne
test
je
dec
mov
test
js
inc
jmp
movzx
xor
inc
cmp
jne
mov
cmp
jg
cmp
jb
dec
inc
movzx
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
mov
test
je
mov
inc
mov
mov
cmp
jl
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
mov
cdq
push
push
push
push
call
add
mov
mov
shr
push
push
sub
push
push
push
push
call
mov
test
je
mov
xor
mov
cmp
setne
add
mov
mov
mov
cmp
je
push
call
pop
cmp
je
mov
mov
jmp
cmp
je
mov
mov
cdq
sub
sar
mov
mov
lea
cmp
jae
push
mov
pop
movzx
cmp
je
cmp
je
mov
add
add
jmp
lea
cmp
jae
push
add
pop
cmp
je
push
pop
push
pop
mov
add
cmp
jb
jmp
mov
mov
or
mov
mov
sub
and
jmp
test
je
mov
push
pop
cmp
mov
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
movzx
cmp
je
cmp
je
mov
jmp
mov
add
cmp
jae
push
pop
cmp
mov
jne
push
pop
add
mov
jmp
mov
add
add
jmp
push
lea
push
push
lea
push
mov
add
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
add
jmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
mov
push
pop
cmp
jb
jmp
cmp
jne
push
pop
cmp
jne
mov
add
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
add
jmp
mov
push
pop
mov
add
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
add
mov
mov
sub
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
xor
jmp
xor
jmp
call
mov
call
mov
call
or
pop
pop
pop
leave
ret
push
mov
mov
test
jne
call
mov
call
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
push
push
mov
mov
sar
and
shl
push
mov
mov
movzx
and
mov
mov
add
movsx
mov
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
mov
mov
and
or
mov
jmp
or
mov
mov
mov
and
or
jmp
and
mov
jmp
or
mov
mov
and
cmp
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
pop
leave
ret
push
mov
sub
lea
push
push
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
push
mov
push
push
push
sub
call
mov
mov
mov
call
mov
mov
sub
call
mov
jg
jmp
call
add
call
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
call
sub
mov
jg
jmp
call
add
mov
jg
jmp
mov
add
mov
je
jmp
call
add
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
call
sub
mov
je
jmp
mov
add
call
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
mov
jmp
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
pushf
mov
add
popf
mov
test
cmovne
call
jmp
mov
mov
mov
mov
movsx
mov
xor
xor
mov
xor
xor
mov
mov
and
and
mov
mov
mov
and
mov
mov
and
or
call
or
xor
or
xor
or
and
or
mov
mov
sub
sub
mov
call
shl
call
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
sub
mov
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
call
jmp
mov
mov
add
sub
mov
call
jmp
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
push
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
je
jmp
call
sub
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
cmp
cmovb
mov
jmp
mov
call
mov
mov
mov
mov
mov
jmp
mov
add
mov
call
jmp
mov
add
pop
ret
jmp
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
add
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
add
mov
out
xchg
or
jne
mov
and
xor
mov
scas
inc
and
pop
inc
and
and
inc
and
test
sar
inc
pop
sub
sahf
test
push
cmp
dec
add
fucompp
add
add
mov
sub
pushf
je
dec
stos
add
add
retf
(bad)
mov
xor
xorps
shl
jno
loope
test
inc
xor
add
sbb
scas
add
cmp
mov
push
sub
mov
jg
jmp
mov
pushf
adc
(bad)
lahf
mov
pop
pop
sbb
add
or
mov
rcl
mov
and
jg
jmp
push
pop
popf
push
(bad)
js
xchg
js
sahf
and
je
push
fild
add
sub
mov
into
mov
mov
pusha
jmp
mov
and
pop
rol
mov
cmp
shrd
rcl
stos
add
loope
clc
and
or
jmp
add
jmp
nop
inc
and
and
xchg
inc
and
(bad)
fs
mov
(bad)
mov
add
push
(bad)
int
jmp
mov
push
or
jo
ins
mov
sbb
add
shl
add
sub
inc
and
je
jmp
pop
jmp
mov
into
test
pop
add
jmp
jmp
and
push
idiv
and
fdiv
jmp
jmp
mov
pop
and
es
call
mov
ror
sbb
(bad)
gs
add
add
(bad)
cmp
jmp
mov
mov
call
mov
mov
xor
push
out
mov
(bad)
jmp
imul
or
mov
xchg
add
mov
xor
sub
sbb
lods
adc
cmp
pop
mov
sub
test
loopne
mov
lahf
pushf
imul
xor
in
js
or
and
mov
push
ins
mov
sar
and
sub
add
or
add
add
(bad)
movs
and
dec
int
gs
pop
jmp
jmp
fsub
jge
fcom
test
sub
(bad)
loope
mov
mov
(bad)
jmp
popa
call
jge
xor
sub
xor
jno
cmp
mov
loopne
in
inc
or
mov
ss
add
das
jmp
mov
nop
je
inc
hlt
xor
cld
push
and
push
dec
and
xor
call
add
add
rcl
fld
ret
mov
movs
and
jge
and
add
add
cld
lea
pop
aas
pop
jl
pushf
sbb
inc
sub
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
mov
add
mov
mov
jo
movaps
out
dec
add
adc
shr
mov
mov
inc
and
or
mov
sub
call
dec
add
lods
and
fbld
cmps
out
jmp
mov
js
clc
rcl
je
jmp
mov
xor
sub
mov
lock
add
add
sti
add
inc
btc
in
cwde
xchg
xchg
mov
pop
gs
mov
jecxz
sub
add
pop
test
cmps
out
add
add
add
mov
sub
mov
aam
mov
sub
add
push
enter
jmp
jnp
and
jbe
inc
adc
and
repnz
jmp
(bad)
stos
and
ins
in
add
inc
cwde
and
push
or
pop
out
sbb
cmc
pop
dec
pop
add
pop
(bad)
(bad)
dec
int3
int3
int3
int3
push
mov
push
push
push
add
mov
mov
call
mov
mov
mov
mov
mov
call
mov
call
call
call
mov
mov
mov
mov
call
call
sub
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
call
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
pushf
sub
popf
mov
cmp
cmove
mov
jmp
call
call
add
mov
call
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
call
jmp
mov
mov
call
mov
jmp
mov
add
pop
pop
pop
pop
ret
call
jmp
mov
jmp
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
push
mov
push
push
push
sub
call
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
add
mov
jg
jmp
call
add
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
jmp
mov
call
jmp
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
cmp
setne
and
mov
call
jmp
mov
mov
mov
test
cmovne
call
jmp
mov
mov
mov
mov
cmp
cmove
call
jmp
call
call
mov
call
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
call
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
call
call
call
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
sub
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
call
call
mov
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
add
mov
call
mov
mov
add
add
sub
sub
sub
add
add
sub
mov
mov
mov
mov
sub
mov
call
jg
jmp
mov
sub
mov
jg
jmp
call
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
call
jg
jmp
mov
add
mov
jg
jmp
call
add
mov
jg
jmp
mov
add
mov
jg
jmp
call
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
call
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
call
jmp
pushf
mov
add
popf
mov
cmp
setne
mov
xor
and
mov
xor
mov
and
or
xor
xor
and
mov
xor
and
mov
xor
mov
and
mov
mov
xor
and
and
or
or
xor
xor
xor
xor
or
or
xor
and
mov
and
xor
or
and
mov
call
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
call
mov
mov
mov
jmp
mov
mov
mov
add
sub
sub
mov
add
sub
add
mov
sub
sub
sub
add
mov
call
jmp
lea
lea
pushf
mov
add
popf
mov
mov
add
add
movzx
sub
sub
sub
sub
sub
add
sub
add
add
add
mov
mov
add
movzx
mov
add
sub
add
mov
mov
sub
add
add
sub
mov
mov
movzx
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
lea
mov
call
call
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
call
jmp
mov
sub
pop
pop
pop
pop
ret
mov
mov
jmp
mov
jmp
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
sub
call
call
mov
mov
mov
mov
call
mov
mov
lea
mov
call
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
mov
add
mov
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
call
sub
call
je
jmp
jmp
mov
mov
call
push
mov
xor
cmp
pop
cmovne
mov
jmp
mov
mov
call
shl
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
mov
sub
add
mov
sub
sub
mov
sub
sub
sub
mov
mov
sub
add
add
mov
sub
add
mov
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
add
add
call
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
call
mov
mov
mov
mov
call
mov
mov
call
call
sub
mov
mov
mov
call
mov
cmp
cmove
call
jmp
call
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
sub
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
call
mov
mov
mov
mov
call
call
mov
mov
mov
call
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
sub
add
sub
add
add
add
call
cmp
cmovne
call
jmp
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
sub
call
mov
sub
add
mov
add
sub
add
call
add
add
add
add
sub
mov
sub
mov
sub
add
mov
sub
add
mov
mov
mov
mov
call
mov
call
jmp
call
mov
jmp
call
add
pop
pop
pop
pop
ret
jmp
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
call
call
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
call
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
add
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
call
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
call
jmp
mov
jmp
mov
sub
add
sub
call
mov
jmp
mov
mov
jmp
call
add
pop
pop
ret
jmp
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
sub
mov
call
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
call
jmp
mov
mov
lea
imul
add
cmp
cmovne
mov
jmp
lea
mov
imul
add
mov
mov
mov
mov
mov
call
sub
lea
imul
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
add
pop
pop
ret
jmp
data16
mov
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sbb
loop
cmp
xchg
mov
mov
mov
and
jo
add
and
add
mov
mov
mov
(bad)
enter
scas
add
and
add
add
or
adc
add
(bad)
cmp
add
sar
add
inc
add
add
test
add
add
sbb
add
test
push
test
mov
and
mov
xor
test
mov
or
xchg
mov
add
mov
cvtpi2ps
add
push
jmp
aaa
push
and
add
mov
push
fs
mov
mov
mov
retf
and
sub
fsubr
cmp
(bad)
movs
or
mov
mov
mov
loope
outs
dec
cdq
mov
(bad)
add
add
jno
sub
add
mov
xor
add
dec
mov
das
or
add
inc
add
cmc
add
add
out
mov
outs
mov
and
movs
xor
shld
mov
cmp
mov
add
mov
pop
pop
cmp
test
adc
mov
jb
add
and
in
push
add
cmp
imul
push
lods
and
add
add
mov
sub
sub
adc
push
sub
mov
repnz
mov
dec
add
scas
sub
nop
inc
cmp
test
push
add
add
add
and
push
sub
xchg
fistp
and
test
mov
mov
int
test
test
jae
mov
mov
and
add
add
add
inc
add
nop
test
add
sbb
jb
jmp
mov
add
sub
mov
jg
jmp
mov
fwait
push
add
add
cdq
inc
dec
xchg
add
add
js
dec
stos
aad
test
add
mov
(bad)
xor
add
mov
and
add
jo
test
test
add
push
sbb
add
fwait
add
jno
mov
popf
test
mov
shr
add
mov
mov
lock
test
test
sub
mov
push
sbb
rol
xor
inc
or
add
add
sub
test
add
add
test
std
lods
or
add
fiadd
sub
mov
add
(bad)
jae
mov
scas
mov
test
sub
mov
and
add
stos
mov
jmp
pop
mov
add
mov
inc
mov
mov
add
jnp
add
sub
sub
and
push
add
jg
ret
mov
test
popa
sub
lock
scas
add
sbb
add
and
add
add
sti
test
xor
test
test
inc
rol
sub
and
and
xchg
add
(bad)
sbb
movs
add
add
add
scas
and
add
push
aas
daa
and
dec
add
mov
inc
pop
add
mov
popf
and
sbb
test
sbb
mov
js
xor
pminub
add
add
cmp
add
pop
and
je
add
push
dec
ins
sbb
test
xchg
jb
add
test
in
push
add
sub
mov
mov
jno
mov
sbb
dec
cdq
mov
rcl
and
sub
cmp
add
dec
mov
or
add
add
aas
mov
pop
xchg
jb
add
adc
mov
dec
or
add
mov
jg
inc
mov
add
add
sub
mov
pusha
xchg
add
jg
fst
add
mov
fwait
stc
mov
data16
scas
add
sbb
xchg
stc
or
dec
add
std
mov
add
(bad)
mov
scas
pop
xor
cmc
mov
jo
mov
icebp
xor
mov
mov
dec
test
test
add
adc
add
sbb
xchg
add
add
add
test
cdq
popa
rcr
mov
jge
mov
dec
test
dec
add
add
add
mov
xchg
dec
sbb
(bad)
jg
fwait
add
add
push
sub
sub
stc
inc
add
sbb
hlt
mov
add
adc
add
add
mov
add
lods
(bad)
and
test
add
add
scas
mov
mov
add
or
xor
mov
and
add
rol
ins
aas
test
rdmsr
and
inc
add
scas
mov
add
add
mov
and
add
mov
test
test
xor
mov
push
push
rol
cmp
mov
and
inc
mov
(bad)
sbb
xchg
jb
test
xchg
cld
mov
sar
rdmsr
(bad)
or
pop
add
mov
sub
sub
test
sbb
add
daa
js
jb
jmp
mov
add
mov
je
sbb
add
xchg
add
dec
call
test
pushf
rol
add
(bad)
sbb
mov
dec
add
test
inc
add
mov
inc
cmp
fisubr
push
add
mov
add
sub
retf
mov
lea
mov
(bad)
and
sbb
jb
mov
sbb
mov
test
add
cmp
add
leave
test
add
mov
mov
dec
test
mov
std
stos
add
mov
dec
add
dec
nop
cmp
(bad)
mov
add
add
inc
mov
test
mov
push
add
add
mov
mov
add
mov
dec
jmp
mov
xchg
scas
add
nop
inc
and
add
movs
pop
add
je
add
test
pop
cld
iret
xor
add
add
and
add
scas
mov
in
mov
int
sti
test
add
or
jmp
mov
sub
mov
sar
dec
add
mov
sub
popf
and
sbb
test
(bad)
sbb
lds
test
pop
test
or
add
(bad)
add
cmp
test
mov
lock
sbb
add
add
add
repz
cmp
add
fadd
mov
shr
add
dec
sub
mov
mov
mov
test
xchg
jmp
mov
sub
xor
add
xor
dec
or
dec
jmp
mov
sub
mov
push
sbb
movs
xor
sub
pop
add
add
rcr
sub
cmp
scas
add
sbb
adc
and
add
rol
test
mov
repnz
mov
add
add
and
add
add
sub
and
mov
add
add
sbb
adc
mov
sub
mov
push
mov
add
sub
sub
mov
int3
pop
add
nop/reserved
mov
sub
test
rol
add
pop
mov
xchg
add
test
inc
add
add
test
jbe
lods
pop
call
xor
add
shr
add
cmp
test
pop
dec
mov
and
sbb
add
daa
pop
pop
add
jmp
test
mov
outs
mov
shl
add
mov
mov
pop
add
add
mov
mov
add
and
add
xor
shl
add
jmp
cmp
add
nop
in
fwait
pop
fsub
or
test
test
mov
add
add
adc
call
test
mov
imul
jmp
and
and
mov
add
adc
sub
and
(bad)
push
add
add
add
sar
aaa
sar
and
add
add
sub
mov
add
cmp
test
popf
dec
in
mov
cmpxchg
or
add
aas
sub
mov
cmp
mov
ret
hlt
jg
and
add
dec
(bad)
push
inc
mov
sbb
mov
add
xchg
push
test
add
push
or
add
add
in
dec
add
test
add
test
sbb
jmp
mov
sub
sti
or
mov
push
inc
mov
mov
and
lea
sub
xchg
sub
nop
pop
xchg
add
test
jno
add
mov
push
push
add
add
pop
mov
dec
je
dec
sbb
add
add
sub
and
stos
mov
sub
cmp
add
xor
cmp
add
inc
(bad)
inc
add
mov
add
add
mov
mov
loopne
repnz
adc
add
mov
add
pop
stc
add
test
and
add
add
mov
lods
test
mov
add
add
out
mov
test
or
cmp
and
add
cmp
add
int
xlat
aam
jmp
les
popf
adc
sbb
pop
xchg
stc
test
xchg
pop
jecxz
call
rdmsr
in
test
cmps
mov
mov
add
jmp
inc
and
cvttps2pi
rol
movs
add
add
sub
mov
and
stc
test
mov
add
mov
inc
and
add
addr16
inc
mov
psadbw
call
in
rol
add
cmp
cmp
add
(bad)
mov
pop
sub
add
adc
and
shr
pop
add
mov
out
dec
inc
inc
xchg
pop
setge
or
sbb
mov
xor
sub
mov
mov
cmp
add
(bad)
cmp
add
mov
popa
nop
cmp
pandn
jb
jmp
fisubr
add
fmul
mov
add
stos
push
add
add
add
sub
and
movlps
mov
add
mov
push
in
add
add
pop
inc
and
je
pop
mov
test
add
mov
xchg
out
cmp
inc
jge
xchg
add
push
add
add
fwait
mov
stos
retf
cdq
jle
test
test
sbb
add
test
jbe
mov
jecxz
inc
and
pop
test
mov
add
mov
jb
in
mov
sbb
setno
test
(bad)
sbb
jb
mov
add
mov
daa
mov
mov
scas
add
sbb
add
rcl
and
je
popa
mov
test
mov
inc
in
jp
inc
xchg
je
jmp
jmp
pop
ins
leave
add
mov
mov
cmp
paddsb
rcl
push
lock
add
xlat
or
pusha
pop
mov
dec
push
popa
dec
mov
js
dec
xchg
mov
add
mov
add
movs
mov
mov
or
dec
pop
add
mov
add
add
mov
test
add
sbb
loope
mov
add
test
and
div
add
add
add
add
mov
mov
gs
push
add
mov
adc
xor
out
sbb
add
add
sar
loopne
jg
push
leave
xchg
xchg
add
cs
pop
add
leave
inc
fsub
test
add
add
pop
add
aam
push
sub
lea
cmp
cmp
lods
jmp
sbb
add
pop
mov
mov
inc
mov
mov
cmp
push
(bad)
jmp
xchg
jb
div
add
xchg
scas
and
mov
dec
adc
add
add
mov
sbb
push
test
movs
xor
scas
and
add
add
mov
mov
pusha
pop
push
add
lock
mov
add
sub
dec
fiadd
add
xchg
jb
and
add
jmp
in
test
add
mov
pop
fadd
mov
mov
cmp
nop
sbb
sbb
add
mov
mov
add
or
push
jmp
mov
and
add
add
xchg
and
add
mov
adc
mov
(bad)
mov
mov
and
xor
and
mov
xchg
mov
add
punpckldq
and
mov
retf
mov
add
add
push
scas
add
mov
jmp
jecxz
pop
push
add
add
mov
add
or
inc
sbb
loop
(bad)
mov
div
subps
dec
test
add
add
adc
test
mov
rol
dec
enter
mov
cmp
add
add
jmp
push
add
rol
push
mov
add
add
mov
add
and
add
mov
and
cmp
jmp
and
add
lods
add
(bad)
sbb
xchg
jb
popa
xchg
add
adc
push
add
and
and
add
push
repz
add
add
outs
add
mov
mov
jo
mov
push
and
add
dec
mov
inc
add
jmp
xor
jl
je
mov
out
mov
add
ret
inc
ror
cmp
repz
mov
add
push
btc
dec
call
add
ss
or
sbb
and
xchg
add
pop
ret
repnz
and
or
or
cld
xor
out
jmp
mov
and
test
movs
add
nop
add
test
xor
mov
mov
add
movs
xor
call
mov
call
add
or
test
enter
inc
mov
add
sbb
inc
retf
cmp
add
add
fadd
jmp
sbb
std
dec
add
add
and
add
(bad)
call
xchg
or
lahf
jbe
add
call
pop
rol
jnp
das
js
xchg
ds
push
int3
lods
ss
aaa
ins
sub
pop
cmp
sbb
jae
add
xor
mov
mov
sub
push
ins
add
inc
ror
add
fnsave
cmp
(bad)
dec
xor
dec
test
add
js
retf
test
dec
add
push
mov
add
stos
mov
cmp
xchg
and
add
(bad)
xchg
mov
add
loope
cmp
push
sub
mov
neg
pop
lods
mov
fdivr
dec
add
mov
adc
lea
mov
push
mov
mov
movs
add
mov
jmp
out
mov
add
dec
mov
scas
add
and
mov
(bad)
mov
inc
das
pop
xchg
jb
adc
jge
cmp
nop
mov
pop
pop
push
add
mov
div
cmovne
scas
mov
add
test
ja
retf
xchg
scas
and
add
pop
out
dec
add
cmp
lods
add
test
add
adc
add
fadd
jmp
xor
(bad)
add
scas
mov
and
sbb
add
or
psubsw
xchg
jb
mov
adc
push
sub
aas
test
add
add
push
add
mov
and
add
sbb
test
add
add
add
mov
sub
adc
push
add
ret
out
add
add
mov
mov
jmp
mov
dec
xor
add
add
sbb
xchg
call
sub
mov
mov
lock
mov
jmp
mov
outs
test
add
add
adc
sub
add
pop
pop
inc
std
pop
lods
pop
pop
test
(bad)
(bad)
jmp
and
add
mov
les
add
cmps
add
mov
add
and
jns
(bad)
(bad)
jg
and
mov
mov
add
rcl
sub
add
nop
and
and
pop
xchg
mov
fdivr
and
lock
(bad)
repnz
add
add
mov
call
(bad)
mov
std
dec
add
ss
add
scas
mov
mov
test
jmp
pop
or
push
jp
aaa
call
mov
inc
test
call
rcl
sbb
add
xchg
scas
mov
test
les
add
jb
cmp
fmul
xor
xchg
test
mov
mov
xor
cdq
mov
add
sbb
adc
sbb
test
pop
pop
xchg
add
adc
push
mov
cmp
mov
mov
jg
sbb
adc
mov
mov
dec
test
sbb
test
mov
and
jo
mov
inc
adc
xor
fisubr
ror
add
dec
mov
mov
xchg
jmp
push
pop
sub
mov
and
sub
pop
pop
add
dec
add
push
mov
lea
cmp
mov
fiadd
mov
jmp
shl
mov
lock
jg
push
add
jp
and
inc
mov
mov
or
mov
mov
push
(bad)
dec
mov
inc
bound
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
and
mov
mov
jle
jmp
mov
jo
and
fld
inc
add
int3
test
sub
mov
je
jmp
push
inc
and
ret
mov
(bad)
and
pop
je
stos
or
add
add
mov
adc
push
push
scas
out
push
xchg
xchg
mov
inc
pop
test
and
jmp
jg
adc
call
mov
lock
and
sahf
imul
out
add
pop
xchg
int3
jmp
xchg
mov
ret
nop
push
mov
push
push
push
sub
mov
call
call
mov
mov
sub
call
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
call
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
call
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
call
mov
mov
mov
add
sub
mov
mov
add
mov
imul
add
mov
mov
mov
mov
mov
call
call
jmp
mov
sub
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
xchg
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
sub
call
call
mov
mov
sub
mov
call
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
pushf
mov
xor
popf
cmp
cmovb
call
jmp
lea
mov
call
movzx
mov
call
call
mov
movzx
call
call
mov
mov
add
sub
call
call
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
sub
mov
call
jmp
add
pop
pop
pop
pop
ret
jmp
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
mov
lahf
mov
add
add
inc
fist
mov
push
dec
sbb
push
mov
xchg
pop
mov
mov
movhps
add
jmp
mov
add
mov
js
jle
sahf
add
fild
add
dec
sbb
(bad)
pop
inc
inc
(bad)
push
add
add
cwde
outs
add
dec
inc
movs
inc
jae
pop
mov
adc
sahf
loop
or
ret
add
dec
cmps
rol
inc
mov
xchg
loopne
add
fs
mov
cmps
clc
daa
mov
int3
fmul
add
add
fmul
or
shl
add
mov
test
fs
add
ja
mov
dec
iret
mov
(bad)
int3
mov
push
test
fimul
cmp
fmul
add
dec
inc
loopne
por
sti
add
ja
sbb
jne
mov
je
mov
mov
push
dec
sub
mov
push
add
sahf
jmp
dec
sbb
dec
pop
lea
jne
adc
pop
test
add
add
dec
les
inc
fistp
int3
shl
and
int3
test
add
jmp
mov
sbb
fild
mov
add
add
les
cld
or
mov
inc
mov
mov
test
add
dec
in
fiadd
cwde
xlat
dec
jl
int3
mov
dec
xor
and
int3
jmp
(bad)
ficomp
inc
and
jmp
mov
pop
lahf
mov
push
add
add
add
add
out
add
cld
add
add
adc
push
add
mov
jbe
call
(bad)
pop
add
xchg
setne
pop
loop
lds
pop
dec
and
xor
pop
push
icebp
and
mov
jae
inc
mov
or
jmp
(bad)
cmps
fstp
mov
jmp
test
and
mov
mov
add
cli
dec
inc
out
add
add
xchg
and
je
and
push
mov
mov
mov
call
inc
mov
push
jmp
cld
add
add
xchg
mov
mov
mov
sub
add
mov
cmps
inc
pop
mov
add
(bad)
sar
push
ret
mov
push
lods
(bad)
jmp
pop
test
add
add
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
add
add
inc
into
loopne
and
jns
std
dec
add
push
add
add
call
call
sub
rol
inc
and
neg
stos
test
xchg
imul
adc
out
mov
psubsw
imul
add
sub
shr
add
jp
in
add
add
xor
xchg
adc
rol
add
add
repz
icebp
xchg
or
and
subps
and
add
mov
inc
and
add
mov
je
pop
lea
add
movs
and
cmps
rol
mov
and
pop
pop
and
inc
ror
cmc
add
mov
pop
(bad)
(bad)
out
cmc
test
mov
je
movs
fwait
(bad)
push
and
add
add
sti
inc
and
icebp
xchg
add
rol
fmul
gs
pop
jp
pop
mov
(bad)
mov
add
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
push
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
inc
or
add
pop
add
(bad)
push
jmp
pushf
pop
pop
pop
pop
ret
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
das
inc
or
lahf
sub
push
and
dec
int
add
mov
mov
mov
dec
ror
cld
inc
and
fcmovbe
add
mov
or
add
mov
mov
mov
ud0
retf
inc
and
and
mul
inc
mov
call
mov
inc
inc
call
(bad)
rol
or
(bad)
jecxz
fcmovbe
jg
mov
and
call
add
pusha
pop
add
add
xor
jle
rcl
mov
push
mov
xchg
pop
and
mov
aaa
jg
add
mov
push
ror
data16
retf
scas
add
int
mov
ins
add
ficom
ja
mov
test
test
add
jb
add
inc
xor
mov
push
and
dec
js
add
bound
gs
and
sub
pop
inc
and
je
jmp
or
and
jns
inc
test
dec
add
add
int
mov
inc
xchg
mov
inc
and
push
test
fcmovbe
jg
inc
(bad)
cmp
in
mov
mov
(bad)
and
dec
or
inc
jl
and
ins
inc
aad
dec
add
and
fs
ret
shl
out
fimul
jns
sub
ss
stos
test
retf
inc
iret
inc
and
sub
mov
dec
test
add
gs
add
sbb
pop
jns
jmp
sub
inc
imul
retf
adc
ret
add
test
or
das
inc
lds
add
xchg
(bad)
push
add
jg
jnp
xor
pop
movs
push
test
dec
push
jmp
mov
jle
gs
bound
test
mov
push
mov
addr16
mov
push
or
add
mov
xchg
fsubr
sbb
and
pop
xchg
pop
sbb
mov
and
repz
imul
and
mov
jmp
nop
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
std
inc
mov
ret
(bad)
jmp
sub
xor
lea
push
pop
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
and
add
add
jnp
mov
xchg
add
aas
outs
test
out
add
add
and
loope
add
and
(bad)
popf
or
add
add
add
nop
push
fld
mov
or
mov
inc
mov
add
and
jae
add
pop
add
jmp
xchg
test
mov
jl
adc
add
ds
jmp
mov
and
add
adc
imul
add
(bad)
sbb
add
add
add
add
dec
sub
test
es
and
add
add
inc
add
inc
add
add
pop
icebp
mov
and
je
jmp
mov
add
inc
push
dec
add
jmp
xor
and
jnp
inc
stos
pop
push
test
pop
loop
jl
mov
loope
jmp
cmp
and
das
add
(bad)
stos
inc
and
jg
jmp
mov
jae
test
leave
sub
cdq
loopne
jae
jmp
mov
sbb
lds
pop
jb
jmp
je
inc
stos
fnsave
pop
mov
dec
test
add
jmp
mov
lds
xchg
pop
nop
ret
cmps
inc
and
cmovle
add
and
add
add
xchg
imul
jns
into
ret
xor
hlt
rol
add
add
add
nop
inc
and
mov
dec
add
ds
and
add
test
mov
xor
jmp
xchg
mul
add
imul
cdq
xchg
dec
push
(bad)
and
das
add
add
dec
repz
mov
add
addr16
fiadd
add
inc
ds
mov
lds
cmp
pop
and
and
jmp
mov
mov
dec
js
nop
sub
pop
inc
push
aas
out
add
jmp
mov
test
and
cmp
xchg
and
add
imul
add
and
and
in
vpcmpeqb
test
add
add
mov
test
pop
mov
call
mov
test
add
mov
jmp
add
dec
(bad)
jecxz
cmps
inc
and
je
jmp
mov
scas
rcr
sbb
push
pminub
add
test
dec
add
mov
sub
test
sbb
add
and
add
mov
and
push
add
mov
and
add
sub
out
test
add
sbb
add
add
add
push
aaa
dec
inc
push
add
or
add
test
inc
xchg
sub
mov
and
loop
inc
inc
add
jmp
jmp
mov
push
fbstp
push
aaa
mov
add
mov
cmp
cmovne
test
js
in
add
ret
and
add
pop
sbb
push
test
imul
mov
mov
xor
rol
add
and
ds
pop
mov
xor
and
mov
jp
outs
xlat
leave
add
mov
fistp
sbb
and
les
add
add
retf
and
add
add
in
test
mov
xchg
jns
adc
inc
aad
add
mov
xchg
mov
jae
imul
sbb
add
mov
add
add
icebp
inc
and
jl
add
lock
mov
dec
mov
mov
adc
imul
push
add
mov
cmp
out
dec
(bad)
push
xchg
xchg
mov
add
jmp
mov
movs
pop
add
add
mov
add
jnp
add
(bad)
dec
add
jmp
loopne
lds
and
fadd
inc
test
add
add
and
add
test
pop
mov
test
mov
movs
jno
pop
arpl
add
add
add
test
add
dec
jmp
mov
and
js
pop
xor
call
mov
pop
add
inc
xchg
mov
in
nop
push
ss
call
xchg
nop
add
add
mov
and
stc
test
mov
add
js
mov
jmp
pop
inc
jmp
jecxz
xchg
test
sub
mov
test
test
add
das
add
stos
mov
add
or
add
aas
mov
mov
xlat
adc
jmp
and
add
add
aaa
es
and
add
sbb
imul
movs
js
and
add
test
call
xchg
test
add
fisub
aas
test
cmc
into
add
inc
test
jae
loope
push
add
das
or
lea
pop
std
in
aad
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
cmp
(bad)
mov
add
call
mov
mov
and
rcl
add
add
xchg
add
add
mov
jb
push
xchg
push
adc
ja
and
loope
cwde
add
das
dec
pop
dec
shr
(bad)
jmp
inc
pushf
pop
mov
movs
inc
and
cmp
inc
mov
mov
ins
inc
and
mov
jg
add
add
add
inc
stos
sub
push
mov
sbb
add
jmp
mov
jg
lds
inc
sar
jnp
add
add
mov
inc
ja
mov
gs
shl
pop
stos
add
inc
and
add
pop
inc
mov
xchg
je
and
add
add
jge
adc
mov
sti
(bad)
pop
push
stos
add
add
in
lds
hlt
mov
jg
rcl
bound
sub
mov
and
jmp
jnp
add
mov
or
test
(bad)
cld
and
bsr
test
mov
dec
jo
mov
xor
aaa
je
add
jmp
mov
mov
and
ja
(bad)
sub
add
jno
add
inc
add
mov
and
(bad)
and
add
rcr
push
add
push
or
push
xchg
cmp
syscall
jnp
add
jmp
sar
pop
add
jl
mov
add
stos
add
hlt
and
inc
and
jmp
mov
add
popa
inc
pop
dec
xchg
mov
mov
pop
jg
and
add
test
hlt
and
xlat
add
inc
inc
(bad)
dec
test
les
dec
jnp
add
out
hlt
fimul
mov
test
ror
pop
add
add
dec
mov
jns
mov
sub
(bad)
add
test
mov
pusha
and
mov
mov
mov
pop
pusha
mov
mov
mov
or
and
xchg
shl
and
inc
fisttp
and
repz
lods
mul
xor
sub
add
repz
xor
call
sub
inc
repz
and
rcl
lock
rcl
test
xor
add
add
hlt
and
mov
jmp
adc
lea
data16
repnz
(bad)
dec
pop
test
add
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
call
mov
mov
call
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
movzx
mov
mov
sub
add
sub
add
sub
sub
mov
movzx
mov
mov
call
add
add
call
add
mov
mov
mov
mov
mov
mov
call
call
mov
mov
call
mov
add
mov
call
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
call
sub
call
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
jg
jmp
call
sub
call
je
jmp
call
sub
mov
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
call
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
call
jmp
lea
add
movzx
mov
mov
mov
add
add
call
call
call
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
call
jmp
pushf
xor
add
sub
popf
mov
call
call
mov
jmp
mov
jmp
mov
sub
pop
pop
pop
pop
ret
call
jmp
mov
jmp
mov
call
mov
mov
jmp
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
add
mov
je
jmp
mov
add
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
push
mov
xor
cmp
pop
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
call
mov
call
jmp
mov
call
jmp
mov
cmp
setne
and
mov
call
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
add
movzx
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
call
call
mov
mov
mov
call
call
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
call
sub
mov
mov
jmp
call
sub
pop
pop
pop
pop
ret
mov
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
sub
mov
mov
mov
mov
call
mov
mov
add
mov
mov
jg
jmp
mov
add
mov
je
jmp
call
add
call
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
mov
sub
call
je
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
call
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
call
jmp
call
mov
mov
mov
call
sub
mov
call
jmp
call
add
pop
ret
jmp
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
call
mov
mov
mov
call
sub
mov
mov
call
call
mov
mov
call
mov
call
mov
mov
call
mov
sub
mov
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
call
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
call
cmp
cmovne
call
jmp
mov
call
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
call
call
mov
mov
jmp
mov
jmp
mov
mov
call
call
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
add
pop
ret
mov
call
mov
mov
mov
jmp
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
push
mov
push
sub
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
call
jmp
mov
cmp
setne
and
mov
call
jmp
mov
mov
mov
mov
test
cmovne
call
jmp
mov
mov
mov
mov
mov
call
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
call
mov
jmp
mov
call
mov
call
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
add
call
mov
jmp
mov
jmp
mov
mov
jmp
mov
call
mov
mov
mov
mov
call
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
call
jmp
add
pop
pop
ret
mov
jmp
mov
mov
call
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
call
mov
mov
mov
call
sub
mov
jmp
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
and
mov
das
mov
add
add
add
mov
ffree
(bad)
dec
and
add
mov
add
lods
xlat
and
rol
add
and
sbb
push
into
call
dec
add
add
dec
xchg
(bad)
out
ja
add
jl
test
add
add
sbb
lahf
lock
jmp
dec
test
add
add
xchg
add
mov
std
add
xchg
test
add
push
sbb
add
lea
mov
(bad)
and
add
gs
add
rol
push
cmc
push
test
das
mov
add
jmp
popf
test
lock
rol
xchg
xor
push
dec
add
push
add
add
and
add
sbb
fwait
mov
test
(bad)
jmp
sbb
and
mov
shr
push
push
(bad)
jbe
add
fadd
add
add
mov
in
into
xchg
mul
sahf
in
push
add
push
shr
xchg
add
add
mov
inc
or
(bad)
mov
add
dec
mov
add
and
fldenv
cmp
add
fadd
add
lea
lahf
pop
arpl
rcr
das
ja
mov
dec
test
std
jmp
mov
fld
add
cmp
jg
push
add
shr
das
add
sub
stos
iret
add
add
add
add
mov
inc
add
add
mov
fs
jae
shr
movs
test
sbb
xor
dec
inc
jmp
xor
dec
xchg
imul
jns
cmps
add
push
sbb
xchg
data16
cdq
loop
rol
dec
xchg
imul
add
pop
add
das
xor
cmp
add
inc
and
leave
(bad)
stc
add
add
add
add
imul
ja
lea
movs
sbb
add
add
add
add
mov
add
inc
inc
and
mov
add
add
add
stos
xchg
sub
mov
cmp
(bad)
push
xor
add
push
add
add
and
mov
mov
lods
out
sbb
xor
and
cwde
jns
sbb
add
add
add
mov
sub
and
test
dec
add
xor
adc
add
test
add
das
repz
add
outs
mov
add
sub
fiadd
iret
das
push
inc
das
jmp
mov
add
inc
and
rol
xor
mov
mov
and
imul
sub
mov
movlps
das
sbb
jmp
test
mov
iret
mov
loop
cdq
and
test
add
add
add
add
dec
mov
add
test
add
ins
add
mov
sub
cmps
inc
and
sbb
das
push
add
add
add
popa
fiadd
je
jmp
mov
fld
sub
add
test
add
add
add
mov
mov
or
popf
or
add
jmp
jmp
mov
mov
mov
std
das
add
add
inc
lock
add
into
mov
cs
sub
stos
add
fmul
cs
jge
add
add
add
add
add
jo
jmp
mov
mov
and
add
stos
mov
mov
add
inc
or
out
adc
add
fs
or
pushf
xor
or
adc
pop
stos
add
add
das
sbb
add
sbb
mov
fld
(bad)
es
lea
mov
add
pushf
xchg
sub
stos
add
push
add
mov
add
push
retf
mov
add
xrelease
add
test
das
add
andnps
mov
jmp
or
and
mov
dec
add
add
jmp
jg
in
xor
and
add
add
gs
std
add
mov
dec
test
mov
add
xchg
imul
push
mov
add
add
mov
or
adc
mov
mov
fld
das
nop
iret
mov
jne
mov
add
add
xchg
jmp
pushf
xchg
push
call
jp
fs
popf
mov
xchg
pop
iret
add
ror
shr
add
add
and
sbb
add
fdivr
inc
cmp
add
add
dec
fidiv
mov
mov
lea
jno
pop
dec
ret
test
push
add
add
mov
mov
lods
xor
mov
and
xchg
add
lods
jae
push
fadd
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
call
mov
mov
call
add
pop
ret
xchg
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
add
mov
mov
mov
call
mov
call
mov
call
call
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
add
call
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
add
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
add
call
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
add
call
je
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
pushf
xor
add
sub
popf
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
call
jmp
mov
mov
cmp
cmove
mov
jmp
lea
add
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
call
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
call
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovl
call
jmp
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
call
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
cmp
cmovb
call
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
call
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
call
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
call
mov
add
mov
call
mov
call
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
mov
sub
mov
sub
add
sub
mov
add
shl
add
mov
mov
mov
mov
call
call
call
mov
call
sub
mov
mov
call
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovne
call
jmp
mov
call
mov
mov
jmp
mov
mov
mov
call
mov
mov
mov
sub
mov
sub
add
sub
call
call
mov
call
call
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
sub
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
call
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
call
jmp
call
mov
shl
add
call
call
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
call
cmp
cmovne
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
sub
mov
mov
sub
add
mov
mov
sub
mov
sub
mov
sub
add
mov
sub
sub
add
mov
mov
mov
mov
add
add
sub
mov
mov
sub
add
add
mov
mov
jmp
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
call
jmp
mov
mov
mov
mov
mov
cmp
cmove
call
jmp
mov
call
shl
add
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
call
mov
cmp
cmovne
mov
jmp
mov
mov
mov
sub
add
sub
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
call
call
mov
mov
mov
call
call
mov
mov
mov
mov
add
call
call
jg
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
call
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
call
jmp
mov
mov
shl
add
mov
mov
jmp
call
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
add
sub
mov
mov
movzx
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
call
mov
mov
mov
mov
movzx
cmp
mov
mov
cmove
mov
jmp
mov
call
jmp
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
mov
sub
mov
mov
sub
add
sub
call
mov
jmp
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
call
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
sub
pop
pop
pop
pop
ret
mov
jmp
mov
mov
mov
mov
call
mov
add
mov
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
call
jg
jmp
mov
add
call
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
call
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
call
mov
jmp
mov
mov
mov
jmp
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
inc
call
call
cmp
add
in
rcr
add
mov
and
add
in
inc
and
add
mov
mov
and
add
clc
sbb
inc
stos
shl
pusha
fiadd
pop
and
add
add
inc
mov
add
test
add
add
in
rcl
dec
(bad)
loop
(bad)
aad
add
in
jo
je
sub
dec
jmp
and
add
test
je
add
dec
xor
add
aad
test
mov
add
add
pop
mov
mov
add
pop
call
add
xchg
mov
jg
jmp
mov
sub
lock
test
add
mov
ja
xchg
add
test
add
sub
and
add
in
pop
cmp
and
mov
add
in
cdq
add
jmp
jo
add
adc
retf
mov
movs
add
cld
shl
imul
pop
sub
xor
xor
add
(bad)
and
stos
in
mov
les
(bad)
iret
fs
aam
add
add
(bad)
mov
add
mov
sub
in
and
test
in
(bad)
outs
mov
add
aad
add
popa
test
les
jmp
fdiv
add
fwait
(bad)
sbb
add
add
test
mov
cmp
mov
jmp
and
lock
out
cmp
mov
jmp
mov
fadd
add
add
add
jg
sub
and
add
jno
(bad)
mov
xor
add
xchg
arpl
leave
in
stos
or
dec
test
add
add
stc
test
ins
add
mov
add
mov
sub
dec
xor
adc
add
gs
in
jo
sbb
mov
and
push
add
cdq
ins
mov
sbb
inc
movs
jl
test
add
test
stos
add
dec
and
aad
jmp
inc
and
(bad)
mov
mov
clc
pop
call
in
lods
or
scas
mov
wrmsr
mov
inc
add
add
mov
adc
jno
and
psubsb
in
jmp
mov
add
fadd
and
jg
cmp
pusha
add
add
test
add
add
mov
psubsb
mov
test
mov
add
mov
inc
into
mov
test
repz
add
add
add
push
mov
pop
test
and
cvttps2pi
stos
add
pop
into
add
add
add
mov
mov
stos
add
jmp
jae
and
add
ret
push
ins
mov
data16
add
test
add
sub
add
test
add
and
rol
add
sub
mov
je
jmp
mov
(bad)
in
add
sbb
mov
je
pop
jo
xchg
ins
mov
sub
add
mov
and
enter
add
cmp
mov
aam
add
mov
icebp
in
and
je
inc
cli
in
ror
add
or
jp
jns
and
mov
mov
mov
cmp
xchg
mov
and
add
arpl
inc
and
icebp
inc
leave
add
aad
push
into
(bad)
in
add
sub
xor
add
clc
xchg
ins
jmp
adc
pop
stos
mov
and
add
add
in
jo
mov
pusha
aas
and
mov
adc
add
mov
outs
mov
in
or
mov
mov
cmp
arpl
jnp
lahf
loopne
add
mov
mov
inc
jns
add
inc
mov
dec
dec
pop
test
and
jo
jmp
out
xor
imul
mov
add
jno
and
cmp
and
aam
jmp
add
push
add
or
adc
(bad)
add
arpl
and
add
(bad)
and
jmp
test
stc
test
add
mov
clc
mov
mov
ror
or
mov
mov
aam
add
enter
mov
xor
mov
add
sub
mov
lea
outs
cmp
inc
in
add
or
xor
inc
pop
setns
mov
enter
cdq
es
mov
sub
pop
or
and
test
stos
gs
std
rol
jnp
enter
jmp
enter
int
pop
fstp
mov
add
push
pop
shl
mov
repnz
(bad)
fld
cmp
add
push
or
je
out
mov
cmp
mov
into
and
pop
jmp
add
clc
and
add
test
pop
shl
add
aam
out
inc
jnp
and
mov
sahf
pop
jae
or
sub
jmp
mov
xor
retf
(bad)
(bad)
stc
jnp
mov
sub
add
sub
mov
mov
fadd
add
inc
rol
dec
imul
push
mov
xchg
bound
xor
xor
repnz
iret
movzx
add
mov
(bad)
in
(bad)
in
add
add
mov
and
call
(bad)
push
and
aam
jmp
and
jmp
mov
or
sbb
and
add
inc
dec
mov
fadd
aad
mov
loopne
lock
jb
clc
xchg
ins
mov
out
dec
and
into
sbb
jecxz
mov
(bad)
jnp
and
xor
ja
mov
int3
mov
add
add
mov
gs
add
add
mov
xor
loopne
mov
enter
out
stos
jmp
icebp
ss
jmp
and
add
ins
add
add
and
add
add
outs
mov
jl
add
jne
nop
sub
xor
pcmpgtd
mov
push
movzx
and
fsub
(bad)
adc
add
mov
test
in
add
ins
mov
mov
(bad)
aad
ins
add
jmp
xchg
aam
add
mov
add
(bad)
jmp
lock
and
and
jne
and
mov
add
int
push
and
jmp
mov
mov
fnstsw
inc
and
or
inc
and
and
and
outs
dec
ficom
xor
cmps
mov
and
and
punpckldq
ins
and
add
test
pop
xchg
ins
or
icebp
push
jmp
out
or
mov
adc
xor
sub
jmp
adc
mov
fild
add
sub
xor
sub
test
mov
fadd
add
dec
cmp
mov
pop
and
jmp
mov
adc
pop
push
inc
data16
mov
ins
pop
mov
mov
(bad)
add
sub
test
(bad)
aad
mov
inc
and
sbb
add
jl
and
push
mov
loope
jp
jmp
(bad)
popa
mov
stos
add
push
add
add
popa
imul
add
in
add
inc
sub
sar
adc
adc
mov
or
mov
add
adc
add
aaa
jmp
mov
jne
and
add
aad
xchg
into
or
push
add
mov
and
add
add
aas
test
push
mov
and
pop
imul
int
pop
mov
xor
aad
aam
cdq
dec
arpl
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
out
or
add
mov
outs
test
cmp
add
or
push
inc
add
mov
and
mov
or
mov
inc
and
mov
(bad)
push
cmp
sbb
add
add
and
not
outs
pusha
addr16
jg
jmp
mov
or
mov
mov
add
call
push
sub
dec
pop
and
jg
jmp
ins
inc
and
or
out
mov
or
lahf
add
mov
and
sub
fiadd
cmp
stos
add
push
sub
inc
and
call
iret
jmp
push
inc
and
sub
cmc
int
ss
test
call
push
sub
add
and
stos
add
hlt
iret
mov
ds
push
add
mov
and
psubb
add
add
mov
ins
sub
push
pop
cmp
inc
stos
jecxz
jmp
mov
rcr
mov
mov
cld
add
lahf
xchg
sbb
mov
mov
sub
jb
mov
je
jmp
jmp
mov
mov
xor
mov
pusha
and
add
adc
add
push
ror
add
mov
sub
shl
mov
lds
cmp
sti
inc
ror
add
pop
mov
mov
xchg
sti
add
add
int
push
stos
jo
xchg
(bad)
call
add
stos
add
inc
(bad)
push
ins
cmp
inc
hlt
add
adc
xor
push
push
add
icebp
frstor
(bad)
adc
(bad)
adc
add
call
add
mov
sti
add
add
and
jecxz
and
adc
inc
add
add
add
add
mov
inc
nop
in
add
adc
int3
out
and
xchg
and
aaa
call
inc
repz
dec
cmp
push
sub
jmp
enter
mov
add
mov
ret
sti
int
aas
add
mov
mov
mov
jb
add
add
inc
and
mov
(bad)
jge
xchg
jno
push
mov
sldt
add
add
outs
gs
push
mov
addr16
(bad)
dec
pop
add
add
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
dec
adc
dec
dec
fcom
hlt
add
add
mov
or
fldenv
add
and
xchg
add
sbb
and
imul
pop
jb
push
mov
repnz
mov
and
jg
push
add
repz
jne
dec
mov
psubusb
mov
add
add
aad
mov
test
int3
vmread
pop
add
push
outs
inc
jns
xor
pop
jmp
(bad)
arpl
add
mov
mov
nop
inc
and
add
add
cmc
add
add
jo
and
add
mov
(bad)
cli
add
popf
jmp
mov
fisub
add
add
imul
sti
aad
jnp
and
les
and
sti
mov
jno
jmp
xchg
(bad)
cmp
pop
aam
inc
and
psubusb
sbb
add
add
jle
jnp
xchg
mov
out
inc
and
setnp
sbb
mov
in
add
inc
and
sub
mov
jno
mov
add
jmp
cmp
vpunpcklbw
xchg
(bad)
and
je
gs
in
add
gs
push
adc
mov
add
add
sub
mov
movhps
sbb
in
mov
adc
test
jle
lock
add
out
aaa
sahf
sub
pop
push
and
cmp
or
mov
jle
jmp
dec
adc
js
and
mov
sub
xchg
jae
mov
mov
and
out
stos
stos
xor
and
je
aaa
mov
cmp
(bad)
fadd
mov
push
je
and
add
sti
add
cmp
sar
dec
pop
push
popf
add
mov
add
pop
sub
push
add
je
fild
inc
lods
adc
ret
add
dec
add
mov
and
lods
dec
mov
add
pop
pop
sahf
nop
inc
and
cs
out
add
mov
(bad)
jmp
data16
call
ret
nop
call
ret
nop
mov
ret
data16
push
mov
push
push
push
and
add
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lock
dec
push
mov
scas
fwait
or
stos
push
add
mov
outs
mov
xchg
and
lahf
add
mov
xor
and
data16
(bad)
daa
and
add
pop
add
jmp
jmp
loop
shl
add
adc
sahf
out
and
mov
and
or
pop
test
add
add
and
add
add
dec
adc
test
add
jbe
test
add
pop
jmp
mov
sub
out
test
out
mov
or
jbe
jns
test
or
add
add
test
mov
jmp
add
add
sbb
jae
and
clc
cmc
mov
or
pop
test
add
add
xchg
inc
les
test
test
add
add
cwde
out
add
cs
and
add
ins
add
add
or
mov
dec
mov
call
test
sbb
jmp
data16
sbb
shl
and
loope
inc
outs
add
dec
add
or
cwde
add
jns
cmp
and
sbb
pop
mov
cwde
add
push
aaa
and
cmps
jns
retf
and
add
test
add
in
test
out
mov
sbb
inc
mov
popf
mov
add
cwde
sbb
jbe
rcl
outs
adc
fsub
add
and
mov
sub
mov
nop
std
lar
cdq
data16
ret
add
jmp
(bad)
xchg
inc
cmp
dec
(bad)
ja
add
int3
add
test
mov
sub
mov
and
add
inc
add
jg
pop
add
aas
and
xor
jg
jmp
mov
inc
neg
add
je
jmp
or
dec
out
sub
and
push
(bad)
and
(bad)
jmp
add
sbb
add
fiadd
punpckhdq
bound
mov
lods
aaa
pop
out
sub
and
add
repz
add
xchg
pushf
pusha
iret
add
into
xor
inc
and
je
jmp
adc
mov
sub
adc
and
cvttps2pi
out
add
jmp
sahf
push
jne
add
imul
ror
in
add
jmp
ins
and
cwde
or
jge
imul
(bad)
and
jmp
leave
xchg
add
lds
out
sub
nop
fisttp
ins
mov
add
add
sub
pop
punpckldq
sbb
inc
jmp
mov
and
test
nop
jns
test
or
ret
cwde
add
pop
rol
and
psubw
add
pop
icebp
inc
push
and
xor
add
add
out
sub
scas
push
sbb
add
loope
jns
or
(bad)
xor
sbb
test
sbb
lahf
add
add
mov
sub
fiadd
je
jmp
in
test
add
mov
jno
inc
and
smsw
(bad)
cdq
add
data16
add
add
add
(bad)
jmp
leave
mov
add
cdq
jmp
mov
outs
and
out
add
call
mov
dec
sbb
add
jge
imul
push
enter
lea
mov
cmp
loope
imul
add
or
add
add
mov
pop
(bad)
jmp
xchg
add
mov
sub
inc
add
mov
in
and
add
mov
cmp
or
stos
pushf
add
cdq
(bad)
mov
out
test
and
sbb
imul
add
outs
push
and
outs
add
push
jmp
and
add
add
jmp
mov
je
and
add
sbb
stc
push
ror
movs
add
add
add
push
add
add
cmp
lahf
jbe
ret
add
and
add
pushf
add
add
js
add
mov
mov
into
xchg
and
push
add
inc
shr
dec
add
lahf
add
add
mov
jmp
push
jle
cmp
pushf
add
add
das
sbb
xlat
and
add
data16
retf
in
add
jo
add
sbb
fadd
dec
jbe
and
sbb
jbe
loop
add
inc
rcr
out
test
rol
outs
mov
add
add
test
jmp
mov
push
enter
je
and
add
jmp
add
add
and
add
inc
fidiv
retf
and
outs
inc
test
cmp
and
dec
lahf
jns
lea
call
lea
pop
pop
pop
pop
ret
adc
and
add
mov
jle
call
stc
in
popa
and
add
inc
fsubr
add
add
pop
sub
adc
shr
ret
bound
add
add
mov
nop
test
pushf
add
add
push
inc
fimul
and
pushf
aam
add
dec
test
add
jns
add
mov
mov
pushf
test
jne
add
adc
push
adc
movs
stc
(bad)
dec
pop
add
add
call
ret
nop
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
movzx
mov
mov
add
mov
call
movzx
mov
mov
mov
call
add
sub
mov
call
sub
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
add
add
add
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
mov
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
data16
call
ret
nop
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
or
mov
mov
call
dec
jbe
gs
ins
call
sub
xchg
pushf
ins
sbb
call
pop
xchg
jge
(bad)
jmp
fild
mov
add
lock
jns
mov
and
loopne
and
add
push
mov
mov
mov
mov
add
(bad)
jo
inc
lahf
arpl
arpl
sub
push
imul
arpl
sbb
mov
add
adc
test
add
imul
imul
js
inc
inc
cmp
aas
setae
cmps
and
ins
sub
and
sub
mov
mov
add
mov
pop
(bad)
out
inc
and
mov
add
add
mov
hlt
push
ret
sub
das
and
pop
test
add
mov
call
push
nop
mov
clc
test
add
add
add
fsub
sub
sub
and
je
(bad)
loope
jg
mov
je
lods
inc
lahf
xlat
das
gs
out
(bad)
mov
movs
nop
add
inc
xchg
push
mov
mov
paddsb
add
add
add
retf
imul
loope
cmp
(bad)
fnstenv
jg
mov
cmp
mov
loop
sbb
or
add
add
or
and
or
add
bound
int3
add
hlt
inc
and
sub
mov
xor
(bad)
mov
xor
arpl
jne
fisub
scas
loopne
sti
and
arpl
jmp
test
shl
ja
mov
je
jne
xor
movs
sbb
and
sahf
stos
mov
(bad)
fisub
and
test
nop
add
mov
sub
stos
lock
test
add
js
mov
hlt
sub
sbb
jae
mov
mov
add
fcomp
and
sub
add
dec
ins
add
sub
sbb
or
inc
add
bound
add
jg
bound
sub
mov
shld
mov
add
mov
sub
mov
mov
int3
jmp
jmp
mov
pop
mov
xchg
dec
mov
add
sub
and
add
xor
push
psrld
(bad)
movs
add
add
jg
mov
and
fild
sub
das
sbb
add
mov
mov
add
mov
mov
mov
and
and
xlat
mov
loop
xchg
jo
pop
add
arpl
sbb
fxch
xchg
push
push
mov
mov
scas
mov
cmps
loopne
fldenv
or
and
nop
jmp
mov
add
sub
daa
call
sub
mov
out
inc
and
in
(bad)
mov
repnz
xchg
inc
jp
call
cwde
jbe
push
sbb
mov
sbb
and
add
pop
cmp
test
inc
xor
mov
sbb
and
sub
ret
mov
add
add
mov
ret
mov
loop
xchg
jbe
inc
ja
pop
icebp
retf
xchg
int3
add
mov
mov
jl
(bad)
jmp
add
loopne
rol
(bad)
jl
stc
sub
loop
popa
mov
(bad)
and
mov
add
and
lock
inc
pop
(bad)
(bad)
jmp
les
inc
mov
mov
movs
nop
mov
out
(bad)
and
stos
mov
pushf
cmc
or
and
ins
add
mov
add
sub
mov
shl
jo
lds
xchg
jmp
repnz
js
inc
jg
jmp
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
call
mov
mov
call
mov
sub
mov
mov
jg
jmp
mov
add
call
je
jmp
mov
add
call
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
call
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
call
call
sub
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
call
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
call
call
call
call
mov
mov
mov
jmp
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
call
mov
mov
mov
mov
call
call
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
call
add
mov
jg
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
call
sub
call
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
mov
sub
call
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
mov
push
mov
xor
cmp
pop
cmovne
mov
jmp
lea
lea
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
call
lea
mov
sub
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
call
mov
mov
call
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
pushf
sub
popf
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
call
jmp
mov
mov
call
jmp
call
sub
pop
pop
pop
pop
ret
jmp
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
call
mov
sub
mov
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
call
je
jmp
call
sub
call
je
jmp
mov
add
mov
je
jmp
jmp
mov
pushf
sub
popf
mov
jmp
lea
mov
call
mov
call
jmp
add
pop
ret
lea
mov
call
mov
jmp
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
add
add
mov
and
xchg
(bad)
leave
add
add
or
imul
test
add
out
pmuludq
add
cmc
push
or
and
add
add
add
bound
add
pop
mov
or
jnp
inc
cmps
cdq
add
add
add
clc
mov
add
movs
sub
mov
je
cmps
cmp
xchg
add
add
shl
loope
xchg
add
add
mov
outs
jl
add
and
movs
xchg
add
sub
mov
je
jmp
stos
retf
and
add
repnz
in
test
cmp
add
add
cmp
fadd
add
mov
sbb
pop
mov
xchg
cmp
jecxz
dec
repnz
and
out
inc
and
xor
inc
outs
add
and
add
jmp
cs
movs
xchg
jl
arpl
ficom
xlat
jp
and
dec
pcmpeqd
push
or
or
add
sub
out
and
add
xchg
stos
(bad)
and
xchg
add
mov
sbb
je
clc
movs
imul
outs
or
cwde
in
popa
add
jge
add
cmc
shr
add
sub
dec
jmp
mov
sub
mov
mov
add
pusha
pop
jne
add
add
and
xchg
jl
sub
mov
add
jge
cmp
mov
push
mov
dec
outs
aaa
jne
push
sub
pop
fwait
xor
add
jno
sub
hlt
test
add
add
imul
add
mov
mov
sbb
jb
xchg
xor
or
jno
dec
add
repnz
pop
movs
bound
pop
mov
add
(bad)
movs
or
add
outs
mov
add
add
ror
sub
add
jle
and
jge
add
mov
and
xor
mov
in
add
pusha
(bad)
xor
jmp
mov
and
add
add
sbb
add
(bad)
xlat
pop
dec
bnd
adc
popf
pop
sbb
cmp
test
xchg
movs
jmp
(bad)
mov
xchg
jl
add
retf
add
xor
jg
clc
movs
and
add
std
repnz
add
imul
add
mov
jg
jmp
test
jecxz
test
add
add
xor
bnd
out
test
cmp
dec
imul
test
cmp
add
jae
xlat
xchg
movs
add
add
xchg
jl
test
add
cmps
mov
das
(bad)
shl
add
jmp
test
push
out
xor
mov
(bad)
gs
jnp
movs
jmp
mov
and
add
add
bound
xor
add
push
jno
push
jno
jmp
stos
retf
(bad)
movs
jl
gs
mov
and
mov
les
(bad)
icebp
push
xchg
dec
add
add
pusha
test
arpl
fisub
add
add
mov
add
add
mov
mov
pop
cmp
and
outs
add
(bad)
jle
add
movs
add
pusha
test
iret
push
retf
stc
mov
(bad)
inc
add
add
add
add
lahf
adc
mov
mov
jl
movs
jmp
xchg
not
and
add
mov
xlat
jp
imul
sahf
add
add
jge
add
mov
imul
xor
adc
outs
add
repz
xchg
add
dec
jmp
add
and
dec
add
push
or
add
(bad)
adc
bnd
xchg
dec
movs
add
shl
mov
jge
add
shl
add
add
and
and
add
aaa
pop
int3
adc
mov
(bad)
add
add
add
push
and
add
xchg
push
in
inc
mov
add
lods
dec
repnz
mov
add
add
sar
push
add
add
dec
jnp
add
add
pop
inc
out
mov
push
xor
cmp
mov
test
lds
add
not
test
jg
cmps
add
jp
add
jno
adc
and
add
jg
mov
dec
test
add
jl
rol
mov
cmc
shr
add
add
jmp
mov
sub
mov
xchg
in
add
mov
pop
outs
add
push
test
push
add
sub
mov
push
jno
add
jno
and
dec
repnz
inc
movs
cmp
cwde
add
mov
and
add
sbb
jmp
mov
sub
mov
inc
je
jmp
mov
dec
hlt
jp
popf
mov
(bad)
out
add
xchg
xchg
add
add
add
mov
xor
(bad)
jno
movs
dec
inc
repnz
test
cmp
add
int
jp
pop
cmp
mov
pop
add
add
mov
add
add
mov
je
jno
dec
imul
test
add
add
out
and
movs
add
jg
jmp
sbb
add
out
lds
cmc
add
repnz
test
add
jmp
adc
inc
nop
(bad)
stos
mov
les
add
mov
add
jl
push
add
mov
sub
xlat
test
(bad)
jno
inc
jbe
js
add
mov
test
out
push
mov
pop
push
jae
mov
in
and
jmp
mov
(bad)
jno
and
mov
xor
add
das
add
mov
jmp
movs
xchg
movs
jmp
movs
setg
movs
pop
dec
(bad)
push
and
xchg
add
add
mov
imul
inc
dec
int3
add
add
dec
add
add
rol
ret
ror
cmp
sbb
add
mov
add
dec
fcom
ja
cmp
clc
jb
dec
xchg
add
and
add
and
mov
and
jl
add
test
mov
outs
xchg
call
xor
dec
mov
mov
shld
jle
cmp
mov
add
add
sub
loopne
add
je
jmp
mov
and
xor
movs
jae
push
dec
shr
add
pcmpeqd
retf
add
cwde
xchg
dec
movs
add
scas
xlat
cmc
push
and
add
jmp
clc
lea
dec
jmp
mov
and
movs
pop
add
mov
stc
and
cmp
cwde
jns
jmp
mov
mov
bound
jae
loopne
push
add
mov
or
jnp
and
cmp
arpl
mov
repnz
sbb
mov
mov
cmp
imul
and
jl
gs
mov
mov
add
push
test
add
lods
div
inc
jb
movhps
add
add
add
jno
sub
jnp
pop
js
test
add
add
movs
push
add
mov
popf
test
test
clc
and
push
dec
xchg
mov
cmc
aas
es
inc
and
inc
jbe
add
cmp
mov
test
arpl
ins
pusha
clc
cmp
xchg
movs
add
jle
push
mov
mov
add
ja
inc
add
std
stc
cmc
push
cmp
dec
add
test
inc
dec
(bad)
xchg
mov
je
jnp
aaa
movs
add
test
movs
jo
dec
fist
push
pusha
je
adc
mov
add
add
iret
mov
inc
test
movs
add
stos
retf
and
add
add
bound
xor
test
or
imul
test
push
fwait
push
xchg
mov
call
iret
add
cli
add
jno
jl
stc
(bad)
hlt
and
enter
add
mov
mov
les
mov
sub
sbb
pop
sbb
test
add
jmp
mov
jg
push
(bad)
mov
jb
pop
data16
jmp
xchg
dec
adc
mov
sub
sub
and
call
sub
add
add
cmp
mov
je
jmp
out
test
add
or
mov
sysenter
sbb
add
pop
sub
outs
jl
test
movs
add
sub
cmc
inc
jb
movhps
add
add
push
test
add
jne
push
push
mov
xor
into
rol
imul
add
mov
retf
jge
add
or
jae
push
add
dec
jnp
add
add
add
mov
push
mov
into
adc
add
add
jmp
mov
fisttp
mov
cmp
sahf
add
jmp
mov
sub
mov
and
test
dec
imul
test
jne
inc
and
pop
retf
add
and
test
fldenv
pop
out
sti
jne
inc
outs
ja
test
add
jl
push
and
inc
mov
mov
add
pop
ss
add
add
(bad)
xchg
movs
js
and
xor
add
mov
movs
add
outs
push
mov
and
rcr
je
jmp
pop
leave
add
pop
push
add
test
add
mov
add
and
cmp
loopne
xchg
lods
lds
add
les
mov
push
and
movs
pop
(bad)
clc
test
add
add
sbb
shl
shl
add
mov
lds
test
(bad)
mov
xchg
gs
dec
xchg
lea
cmps
mov
and
inc
jno
je
add
not
mov
add
cmp
add
dec
add
mov
dec
add
add
sqrtps
out
loop
mov
mov
pop
inc
dec
xchg
fdivr
jns
sub
(bad)
jbe
int
add
ror
js
push
add
test
mov
jmp
les
push
test
loop
cmp
mov
imul
add
and
add
jmp
mov
mov
adc
retf
and
add
add
sub
or
add
cmp
int
xchg
movs
jmp
(bad)
adc
add
inc
pop
pop
jmp
mov
mov
mov
and
dec
add
jae
add
cmp
aam
test
dec
sbb
mov
xchg
add
sub
inc
pop
daa
mov
lds
adc
pop
jg
and
mov
test
cwde
add
push
add
add
mov
mov
and
jge
push
cmp
stos
adc
mov
jmp
fnstsw
rcr
and
xchg
and
outs
jl
cmp
(bad)
fild
fcomp
add
dec
out
call
mov
push
push
sub
outs
add
cmp
stos
dec
ror
add
test
mov
or
retf
sbb
enter
mov
mov
and
add
add
add
jmp
dec
adc
cmp
add
or
dec
repnz
lahf
cmp
cwde
add
inc
mov
mov
sub
sbb
out
dec
outs
pop
jne
xchg
mov
xor
movs
(bad)
add
add
sysexit
ror
jge
pop
add
add
adc
pop
sub
repnz
and
xchg
jl
pop
xchg
xor
test
add
pop
and
dec
xor
add
(bad)
int
shr
push
add
ja
and
add
mov
add
outs
mov
add
mov
add
xor
add
jno
dec
repnz
stc
inc
xchg
add
fucomp
in
imul
mov
and
add
xchg
dec
aas
add
add
mov
mov
movs
add
out
add
test
repz
(bad)
int
inc
in
dec
add
test
push
stc
ss
nop
movs
add
mov
jge
add
push
mov
jmp
mov
(bad)
jbe
test
jge
(bad)
not
pusha
add
add
fdivr
dec
add
add
in
mov
add
div
mov
mov
movs
add
pop
ja
ja
lea
mov
mov
mov
add
aaa
dec
in
adc
or
push
cmp
pusha
cmp
mov
lar
ror
retf
jmp
and
add
add
clc
xor
jmp
jns
pop
mov
or
adc
mov
add
dec
inc
outs
mov
or
les
test
add
xchg
ror
add
add
test
add
xor
test
add
(bad)
mov
and
add
out
pmuludq
movs
repz
ins
pop
push
add
test
or
add
mov
add
out
popf
add
sub
pop
add
add
shr
xor
add
pop
inc
mov
mov
lds
xchg
ret
jg
test
dec
sbb
mov
xchg
add
jp
test
push
add
xor
fisubr
xor
stc
and
cmp
jne
jns
pop
xchg
add
add
sbb
and
xchg
jl
mov
lea
or
mov
mov
mov
add
mov
sub
or
pop
(bad)
jno
xchg
jmp
sbb
test
add
cmps
add
add
or
push
add
test
add
jmp
xchg
loopne
xchg
iret
shl
inc
bound
enter
and
add
add
add
add
gs
mov
cwde
add
into
and
add
xor
push
add
add
outs
mov
jge
add
sbb
add
ins
add
mov
adc
add
adc
add
test
fld
add
or
push
jecxz
push
add
repnz
stc
inc
mov
cmp
add
add
push
add
mov
jl
(bad)
and
cmp
mov
jne
add
jo
add
ins
fbld
jae
cmp
pop
mov
dec
imul
xor
(bad)
jge
xchg
mov
maskmovq
idiv
mov
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
test
pop
add
add
xchg
rol
sub
dec
mov
add
add
add
into
xor
add
add
and
or
add
add
add
mov
fild
add
rol
add
or
xor
mov
add
test
dec
rol
add
cmps
loopne
xchg
cld
dec
add
not
inc
in
push
mov
add
mov
mov
dec
test
add
add
push
test
add
cmp
dec
add
jnp
adc
add
add
add
add
mov
repz
out
add
or
add
add
test
dec
adc
xchg
add
cdq
add
add
(bad)
jmp
mov
sub
stos
shr
test
add
sub
add
mov
add
mov
add
(bad)
and
dec
add
add
rol
test
dec
add
fisub
mov
adc
sbb
es
add
(bad)
mov
ret
clc
inc
rol
and
or
(bad)
add
rol
or
xchg
add
push
mov
(bad)
test
sub
add
mov
xor
add
add
mov
cmp
add
mov
in
mov
add
mov
xchg
(bad)
clc
or
mov
and
cwde
dec
add
test
retf
add
add
and
add
add
add
add
add
add
rol
mov
jg
jmp
mov
cmp
xchg
aas
fdivr
cs
call
dec
ror
cs
jl
add
test
pop
xor
add
add
push
fmul
add
add
jmp
mov
and
add
add
sub
or
(bad)
mov
sbb
shr
cs
or
add
daa
pushf
(bad)
cmc
push
mov
and
add
ror
inc
add
add
add
add
cmp
add
test
add
jg
jmp
mov
add
or
push
inc
and
add
add
add
jbe
add
add
(bad)
mov
add
bound
inc
and
or
call
or
add
cmp
xor
add
and
push
mov
(bad)
add
mov
sub
mov
cmovg
or
add
add
add
xor
mov
fmul
add
je
in
test
ja
xor
sbb
pushf
test
sub
or
jg
sub
add
push
cmp
xchg
mov
and
dec
add
je
(bad)
out
add
or
add
mov
or
inc
and
add
cmp
jo
add
add
and
dec
adc
mov
dec
mov
add
push
mov
(bad)
test
push
and
cmp
repz
mov
or
(bad)
and
add
shl
or
add
add
or
test
add
mov
jmp
mov
adc
add
lock
rol
jmp
mov
xchg
add
push
and
add
cdq
bswap
or
add
mov
sbb
fsub
push
inc
and
mov
add
test
mov
and
add
add
rcr
sbb
cmove
cmp
xchg
jmp
mov
and
jbe
(bad)
cmps
sub
cmps
cli
adc
repz
jmp
mov
daa
stc
into
add
mov
lods
add
(bad)
add
add
add
dec
rol
cmps
jo
or
add
test
cmp
add
add
sub
push
cmc
jns
test
add
add
add
sahf
test
das
hlt
xchg
nop
mov
mov
add
add
cs
pop
add
add
test
mov
cdq
add
or
xor
add
cmp
xor
add
mov
mov
je
push
adc
and
add
or
mov
xchg
mov
add
repz
(bad)
add
add
add
add
push
jbe
rep
popw
test
adc
add
add
xor
inc
and
add
add
call
jmp
aas
inc
into
and
add
sub
add
loop
or
add
xchg
ror
add
std
repnz
mov
add
rol
mov
call
mov
jg
and
rol
adc
inc
and
push
inc
and
mov
cs
mov
cmps
(bad)
push
add
mov
dec
jae
loopne
pop
or
add
inc
stos
(bad)
out
inc
sti
aaa
and
mov
movs
mov
repz
mov
and
add
or
cmpxchg
mov
jmp
(bad)
mov
test
inc
inc
test
mov
add
jge
fldl2t
cmp
or
add
add
add
or
adc
jns
(bad)
and
add
add
mov
add
mov
mov
mov
mov
add
adc
pushf
push
add
ret
rol
or
xchg
shr
push
add
mov
pop
daa
aam
std
dec
add
or
add
sbb
add
mov
adc
inc
ror
add
in
add
cmp
fistp
xchg
rol
call
mov
(bad)
lods
and
inc
and
dec
inc
sbb
add
cdq
dec
mov
call
mov
mov
mov
mov
cmps
adc
jge
and
mov
mov
dec
call
mov
fs
les
add
mov
popf
pop
xlat
mov
adc
mov
in
mov
adc
bnd
mov
rol
mov
call
mov
mov
add
add
push
add
inc
and
add
sbb
cmps
daa
sbb
add
(bad)
lea
add
push
js
dec
add
add
mov
in
(bad)
enter
add
add
cmc
repnz
(bad)
stc
sbb
add
arpl
dec
and
add
cs
mov
mov
mov
mov
push
add
add
dec
add
mov
add
adc
mov
and
mov
dec
pushf
bound
outs
popf
sbb
add
xchg
adc
dec
add
test
dec
add
add
mov
xor
(bad)
xchg
and
mov
dec
dec
dec
and
call
repz
adc
dec
add
push
add
mov
sub
add
add
in
(bad)
enter
add
mov
sbb
add
add
cmp
mov
mov
les
dec
adc
jge
mov
add
add
pop
call
mov
call
sub
mov
add
and
mov
mov
and
mov
mov
push
enter
outs
out
add
mov
mov
push
inc
and
push
inc
and
add
jmp
add
cmp
add
mov
dec
xchg
and
add
pushf
adc
jge
and
iret
test
or
cmp
dec
call
mov
mov
push
stos
add
and
add
add
adc
mov
add
inc
mov
add
push
xor
pop
sbb
add
add
mov
add
add
call
and
mov
sub
mov
and
das
ja
cmp
cmp
add
xchg
or
mov
jmp
mov
dec
mov
add
add
hlt
xor
add
push
inc
and
add
add
(bad)
call
mov
and
add
mov
mov
add
add
fstp
mov
or
xchg
rol
adc
(bad)
into
sbb
add
and
std
mov
add
xchg
add
hlt
add
call
mov
mov
and
inc
mov
ret
or
ja
mov
call
and
add
call
mov
mov
mov
mov
xor
xor
xchg
rol
jbe
or
push
sbb
add
mov
mov
mov
add
and
(bad)
xchg
and
add
mov
mov
call
mov
in
lods
std
dec
add
dec
xchg
cmps
push
add
add
lock
or
mov
xor
clc
sbb
add
mov
mov
mov
xor
scas
mov
mov
add
retf
add
mov
mov
call
mov
cmc
jmp
mov
mov
mov
add
cmp
dec
rol
mov
cmp
add
add
mov
mov
(bad)
(bad)
inc
repz
cmp
(bad)
add
imul
ret
or
add
add
(bad)
sti
dec
add
add
mov
and
mov
mov
call
sbb
loopne
mov
add
call
jne
adc
and
ret
test
inc
pushf
stos
and
add
pop
rol
add
or
movd
mov
jmp
mov
and
mov
mov
(bad)
jl
test
add
pop
loope
ret
mov
jg
add
add
and
ja
adc
mov
and
pop
or
or
or
inc
and
call
lea
hlt
outs
outs
add
add
mov
(bad)
mov
(bad)
(bad)
lahf
inc
mov
and
add
mov
add
push
add
add
and
add
rol
dec
lods
ret
mov
push
xchg
popf
add
xchg
jns
aam
inc
test
dec
add
or
ror
adc
mov
rol
xor
add
test
fisttp
xchg
sbb
add
jne
adc
imul
test
add
or
mov
std
dec
add
call
sub
cmps
test
add
cmp
rol
pushf
add
xchg
add
mov
add
in
add
add
clc
les
push
cmp
add
sub
add
add
and
sbb
mov
add
jno
leave
add
xor
add
mov
lahf
clc
std
dec
add
movs
sti
dec
add
xchg
in
add
add
pop
xor
inc
and
add
or
mov
call
mov
add
add
call
sbb
in
add
add
push
mov
cmp
cdq
add
inc
pop
add
jns
dec
add
add
sti
dec
add
add
mov
push
mov
inc
or
(bad)
add
mov
sbb
add
arpl
dec
call
or
mov
and
inc
mov
or
xor
and
lahf
jmp
add
mov
xor
fild
add
mov
add
adc
mov
outs
add
push
or
xchg
add
xor
call
js
mov
add
lahf
mov
xchg
and
mov
sbb
inc
imul
outs
or
add
add
push
add
mov
inc
mov
rol
or
xor
cmp
mov
sbb
fnstcw
xor
sbb
add
jo
pop
pop
scas
fcmovne
pop
test
cmp
push
add
or
es
sti
sbb
add
imul
(bad)
dec
pop
add
mov
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
out
add
add
mov
pop
push
mov
mov
fld
mov
add
dec
cmp
loopne
mov
push
inc
inc
mov
lods
(bad)
ins
in
add
jmp
mov
ins
cmp
dec
mov
fwait
(bad)
daa
add
add
mov
cwde
jp
or
dec
push
inc
cmp
add
add
push
add
jmp
inc
and
pshufw
sbb
add
add
jne
jge
sub
mov
mov
in
rol
pop
push
fisttp
pop
add
add
sar
in
inc
xor
psubsb
add
mov
in
inc
jbe
push
movs
imul
ds
test
inc
add
pop
add
retf
and
and
add
js
add
mov
xchg
aaa
jbe
mov
mov
stos
jmp
mov
add
dec
inc
sub
(bad)
push
add
jns
xchg
in
inc
mov
and
add
mov
je
inc
js
ret
inc
and
out
into
xlat
stc
jmp
jp
jmp
repnz
and
sub
mov
(bad)
inc
sbb
add
rol
fs
jp
and
dec
mov
ret
inc
and
push
add
ret
add
inc
scas
dec
pop
mov
je
jmp
mov
fs
fmul
xchg
test
add
pmulhw
stos
add
jmp
jmp
mov
mov
mov
xor
add
ror
fcomi
jmp
mov
mov
mov
jne
je
dec
cvtps2pd
clc
cld
jmp
push
out
add
add
mov
ror
mov
cmp
rcl
and
cmp
mov
inc
add
mov
xchg
push
and
movzx
in
inc
icebp
add
cmove
out
mov
xchg
adc
and
push
add
add
inc
and
xor
mov
push
jns
inc
and
xor
jne
jmp
mov
sbb
add
adc
add
add
fild
in
ror
dec
and
(bad)
rol
add
push
dec
and
pop
dec
inc
push
leave
xor
add
mov
xchg
test
and
mov
and
add
inc
fs
add
inc
inc
and
cmp
mov
add
icebp
and
lea
xchg
popf
pop
dec
movs
addr16
adc
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ins
(bad)
enter
bound
mov
mov
fiadd
add
clc
dec
mov
add
add
dec
mov
je
add
add
add
aam
cs
jae
add
add
add
add
lea
clc
add
mov
and
add
add
fiadd
call
adc
mov
imul
sub
lods
pop
and
and
adc
out
aam
push
or
jmp
hlt
test
rol
add
or
inc
add
(bad)
(bad)
fucompp
add
out
mov
sub
pusha
test
push
cmp
fisttp
repnz
add
mov
add
hlt
push
pop
inc
xchg
mov
cmp
out
cvtdq2ps
add
jmp
mov
and
add
jg
mov
retf
and
add
add
add
nop
loope
aam
test
jg
add
call
push
pop
xor
sbb
xor
add
jmp
mov
add
pop
add
ins
push
add
add
sti
push
or
pop
clc
add
dec
add
adc
test
imul
out
jg
xchg
jmp
test
sahf
add
call
enter
and
pop
fisubr
jmp
mov
dec
call
add
xchg
add
jg
jmp
mov
sub
pushf
test
movntq
jp
push
jmp
hlt
test
mov
add
fstp
pop
lds
ret
call
jle
jo
test
cmp
add
mov
rol
clc
dec
inc
test
or
add
mov
dec
cs
sub
mov
jg
jmp
nop
test
add
mov
ret
xor
das
out
inc
push
jle
mov
dec
push
cmp
(bad)
jle
rcl
dec
add
rol
add
jmp
mov
add
mov
or
push
je
jmp
mov
imul
add
mov
test
out
add
icebp
and
jo
jmp
pop
sti
aas
dec
add
add
and
ret
and
add
(bad)
sbb
add
mov
les
and
add
jg
movs
add
fldcw
add
sub
outs
test
add
add
test
jmp
add
mov
and
add
add
xchg
test
clc
add
movnti
add
add
dec
add
dec
add
ret
jbe
xchg
aam
je
cdq
mov
push
and
sbb
adc
lods
test
dec
xor
das
add
add
add
or
dec
jg
add
rcr
push
pop
sti
and
add
(bad)
test
xor
add
add
sub
mov
call
jg
sbb
lea
add
mov
and
add
mov
int
or
add
sub
add
or
dec
add
jle
pop
xor
call
add
ja
dec
add
jmp
mov
test
push
cmp
sti
jo
add
fs
dec
dec
mov
sub
mov
add
(bad)
and
aam
jmp
mov
pop
dec
rol
add
inc
sbb
add
and
dec
dec
add
test
rol
add
mov
adc
stos
add
(bad)
fisttp
add
jg
jmp
mov
popa
ret
fadd
mov
add
test
sub
ret
fiadd
das
ins
test
add
add
xchg
pop
cli
and
jo
cmp
(bad)
pop
sbb
add
imul
ret
lahf
mov
add
add
push
jmp
mov
dec
sbb
and
test
jle
fiadd
and
adc
add
sti
rcr
dec
rol
jg
addr16
and
add
enter
aam
add
call
push
xchg
or
pop
scas
add
add
add
and
ret
adc
dec
pop
mov
out
xchg
pop
cmp
xchg
mov
test
add
add
sub
pop
and
add
add
push
and
add
xchg
jmp
test
dec
add
sub
mov
cmps
lea
add
jmp
mov
jle
ror
and
add
jo
fsub
cmp
jg
add
and
add
push
push
mov
pop
out
syscall
inc
fdivr
cdq
adc
add
mov
xor
lea
sub
mov
inc
stos
and
fldenv
sub
adc
or
ror
pop
jno
add
test
add
jmp
mov
dec
sub
mov
dec
add
out
(bad)
and
add
add
add
sub
mov
and
(bad)
clc
dec
inc
mov
cld
iret
fsubr
out
push
and
jg
add
or
shl
sar
xor
add
jmp
mov
out
dec
test
in
mov
add
test
add
add
mov
and
rol
jg
jecxz
movs
ja
test
test
add
jg
jmp
mov
aam
sub
and
enter
mov
or
add
jmp
mov
sub
mov
aad
mov
aam
jmp
test
dec
add
add
fcomp
mov
and
je
jmp
mov
sub
mov
and
add
cmp
mov
and
add
cmp
xchg
leave
fdiv
test
and
add
enter
sahf
test
dec
cs
sub
mov
(bad)
bnd
(bad)
jmp
mov
pcmpeqb
test
push
add
add
pop
dec
call
push
cli
cwde
test
cmp
jmp
add
movs
dec
add
dec
ret
add
imul
sti
jle
jmp
cmp
pop
dec
add
lea
cmps
and
push
inc
push
sahf
setp
add
add
add
das
add
and
add
add
inc
jae
xor
pop
add
jg
add
sbb
add
add
rol
lods
movs
mov
lea
das
out
aam
add
test
dec
jno
add
(bad)
out
pop
pop
cmp
(bad)
enter
add
fld
add
dec
test
adc
add
xor
icebp
fimul
push
push
add
add
jo
add
test
add
add
push
pop
and
test
jmp
mov
sub
test
add
xchg
cmps
(bad)
clc
dec
mov
add
fldcw
mov
and
rol
add
mov
test
sar
inc
push
cmps
fs
and
je
retf
inc
add
dec
add
sub
jg
les
add
nop
or
dec
dec
add
lods
fdiv
dec
mov
setno
fild
das
sqrtps
lock
jg
jmp
ins
mov
rol
clc
movs
jns
add
mov
dec
ret
add
push
mov
jmp
add
sbb
push
mov
(bad)
sti
add
jnp
inc
fsubr
inc
test
add
and
add
inc
sub
popf
pop
cs
jae
cmc
xchg
and
jno
push
add
xorps
mov
and
dec
add
cmps
mov
add
mov
lods
xchg
(bad)
mov
add
mov
sar
test
xchg
jnp
loop
xor
and
add
add
fimul
imul
add
add
mov
out
or
add
cli
add
and
sbb
stos
ret
add
cmp
mov
mov
hlt
(bad)
and
add
add
mov
add
and
inc
ror
das
jmp
(bad)
hlt
and
push
add
pop
mov
sbb
jo
dec
add
add
pushf
out
or
dec
lock
inc
push
or
jae
(bad)
(bad)
mov
pop
repz
mov
clc
add
stos
or
add
adc
push
mov
or
mov
pop
pop
pop
jmp
pop
jmp
and
sbb
mov
add
jmp
cld
test
push
add
es
daa
dec
add
mov
xchg
dec
add
and
ret
adc
mov
add
ins
xchg
pop
jmp
and
dec
and
mov
mov
cld
test
das
sbb
add
mov
jmp
mov
aad
mov
aam
or
inc
adc
out
jns
mov
add
shl
mov
sbb
add
add
push
adc
inc
adc
pcmpeqb
add
aam
cmc
gs
add
add
mov
mov
adc
add
add
and
int
inc
(bad)
jmp
(bad)
pop
pop
cwde
or
imul
popf
pop
test
jno
add
xchg
jle
add
sbb
lods
mov
jb
add
das
mov
jmp
movzx
mov
inc
adc
shrd
mov
fcom
and
call
ret
add
pop
or
inc
adc
maxps
add
test
cmp
shl
lahf
test
movzx
sub
add
add
cdq
and
add
das
addr16
(bad)
jle
add
xchg
jae
rol
add
adc
inc
adc
sub
(bad)
sti
add
fld
mov
push
adc
or
not
fimul
mov
pop
adc
data16
(bad)
inc
test
xor
dec
add
add
mov
mov
add
aam
pusha
dec
jae
cmps
pop
add
(bad)
inc
mov
mov
xor
add
mov
pusha
cld
ins
adc
inc
add
jmp
mov
dec
mov
add
(bad)
pop
push
push
add
ret
out
(bad)
gs
(bad)
ins
and
add
retf
add
xchg
nop
or
add
dec
mov
mov
mov
ins
adc
fisub
movs
add
xor
stc
adc
call
mov
nop
mov
mov
and
out
sahf
or
add
sbb
jg
(bad)
(bad)
mov
mov
xchg
sub
add
call
add
pushf
call
add
add
cmc
add
adc
add
cmp
mov
mov
hlt
test
jo
add
push
mov
dec
add
int3
js
dec
add
and
mov
or
scas
into
(bad)
inc
test
and
mov
xchg
mov
jl
add
dec
mov
and
add
mov
(bad)
int3
and
cmp
add
fadd
push
and
lds
mov
inc
or
add
mov
inc
adc
retf
and
aad
add
ss
add
add
cmp
cmp
add
(bad)
jl
pop
and
and
push
pop
xor
in
adc
add
stc
and
add
retf
jg
test
out
fucom
xchg
or
add
pop
outs
add
add
push
adc
sub
add
add
sbb
loope
mov
mov
push
ret
adc
add
pop
addr16
adc
ins
jl
dec
xchg
arpl
and
add
add
ret
inc
ror
(bad)
jmp
les
add
cmp
and
fild
add
pop
adc
jmp
mov
jmp
add
test
push
jle
add
jno
add
mov
pusha
jns
pop
xor
in
jecxz
icebp
jnp
mov
jmp
pop
jle
mov
cmps
pusha
fsub
ret
and
add
das
outs
test
call
(bad)
cli
and
jno
push
out
xchg
add
mov
fwait
xchg
add
out
inc
ror
jmp
cmp
mov
jmp
arpl
add
cmp
leave
or
(bad)
rcr
add
add
mov
mov
repnz
add
add
test
add
mov
jb
add
int
mov
add
add
add
lods
mov
test
add
cmp
repnz
add
mov
adc
dec
js
dec
add
and
xchg
adc
fcmovb
inc
in
jmp
adc
(bad)
dec
push
rol
add
aam
mov
add
fldenv
lea
dec
test
and
add
cmp
(bad)
mov
add
push
cmp
add
add
fmul
and
dec
add
mov
repz
int3
shl
add
mov
jmp
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
mov
and
add
add
and
pop
and
add
adc
jnp
dec
test
test
xchg
icebp
add
and
add
dec
mov
mov
int
add
aad
sub
das
jmp
imul
sub
mov
mov
test
add
call
inc
and
mov
stc
pusha
add
xchg
aas
and
sub
xor
mov
and
loop
sbb
add
add
inc
and
cmps
iret
test
cli
or
or
test
pop
add
mov
and
aad
stos
dec
sbb
into
and
sbb
adc
add
add
arpl
scas
xor
mov
sbb
xchg
jmp
mov
test
scas
adc
add
add
add
or
inc
and
or
xor
and
cmps
or
movs
sbb
(bad)
sahf
adc
add
add
add
test
js
and
aam
rol
in
clc
cmps
inc
add
mov
imul
test
out
push
sbb
add
mov
add
mov
js
sahf
stos
mov
mov
push
dec
adc
add
add
lds
inc
and
test
xor
in
clc
add
inc
and
jmp
and
add
ins
add
add
mov
inc
mov
sub
push
inc
leave
cmp
ja
mov
add
cdq
add
sti
adc
xchg
aas
and
je
jmp
mov
mov
imul
(bad)
sbb
inc
or
and
sub
mov
je
jmp
add
sub
mov
mov
add
jmp
arpl
xchg
cmp
inc
and
sahf
jne
fldln2
clc
cmps
add
mov
cmps
jo
jl
test
and
setbe
add
add
push
sbb
and
fcomp
inc
leave
fmul
test
lds
mov
dec
cmps
push
mov
inc
and
add
xor
in
clc
add
mov
mov
mov
sbb
xchg
ret
sti
repz
lds
test
mov
add
xchg
and
add
inc
movzx
call
mov
add
sbb
(bad)
lahf
and
cmp
imul
add
stos
inc
add
xchg
call
and
mov
jno
add
mov
mov
or
mov
imul
mov
add
sbb
out
ss
call
pop
repnz
pop
jmp
popf
inc
fwait
push
and
adc
or
ins
and
add
add
mov
add
dec
add
mov
sti
fild
or
adc
arpl
xchg
and
add
popa
mov
fild
jno
and
add
mov
pop
(bad)
(bad)
jmp
mov
and
add
add
sbb
add
xchg
mov
mov
(bad)
imul
add
sahf
inc
add
add
popa
add
(bad)
into
and
add
and
call
mov
test
mov
ss
popa
add
mov
add
add
dec
lods
cmps
jmp
add
lahf
sar
jp
cmp
add
int3
mov
sbb
scas
add
add
pop
add
js
and
add
add
dec
add
mov
add
add
cdq
cmps
xchg
call
pop
mov
mov
and
inc
mov
sub
add
mov
add
add
mov
popa
add
push
add
and
icebp
add
mov
jne
dec
add
inc
and
cmp
mov
in
adc
call
jp
inc
mov
lods
dec
in
add
into
cmp
(bad)
mov
inc
inc
ror
add
or
popa
xchg
add
xor
and
ficom
hlt
jmp
mov
xor
aas
ss
add
add
sbb
inc
and
add
add
and
mov
add
call
mov
jmp
aad
sub
add
add
mov
icebp
add
fild
in
lea
adc
cld
mov
jmp
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
lea
and
sub
mov
xchg
cwde
in
inc
lea
dec
mov
add
mov
out
movs
xchg
add
add
lea
xor
ins
add
enter
test
lea
add
sbb
mov
bound
and
xchg
add
(bad)
and
dec
mov
lahf
xor
push
mov
(bad)
mov
test
test
inc
add
call
xchg
add
inc
and
lods
xchg
mov
push
and
ficomp
pop
or
mov
int
mov
mov
push
add
add
mov
push
push
add
jno
and
add
cmps
add
aad
inc
mov
mov
(bad)
dec
add
mov
and
inc
and
or
pusha
and
or
xor
dec
add
scas
and
add
and
sub
mov
mov
xor
and
retf
xor
mov
rol
add
(bad)
jmp
test
test
add
adc
subps
pop
in
mov
test
and
add
add
add
mov
shr
inc
add
add
add
mov
add
in
add
inc
dec
add
aas
ret
pop
dec
ins
sbb
add
push
add
mov
mov
xor
and
mov
and
out
and
mov
or
and
ins
cmp
(bad)
mov
jb
or
es
(bad)
repnz
or
add
mov
or
add
lea
lea
mov
and
pop
test
add
jmp
in
add
je
inc
retf
xor
and
je
add
mov
mov
stos
sahf
xchg
add
pop
mov
push
or
mov
ins
mov
(bad)
int
dec
mov
add
adc
mov
add
pop
cld
dec
cwde
add
lea
outs
sub
jmp
mov
mov
xchg
add
mov
sub
mov
pop
test
and
mov
and
mov
mov
imul
call
cmps
mov
add
mov
adc
mov
mov
mov
mov
jbe
retf
mov
mov
adc
or
aas
add
mov
sub
outs
mov
add
mov
add
add
cmps
add
add
movs
pop
test
xchg
add
bswap
mov
mov
add
(bad)
and
scas
mov
jg
dec
dec
mov
rcl
sbb
ficomp
or
add
repnz
and
add
sub
mov
int
add
jg
mov
mov
mov
cmps
add
mov
call
cmp
and
test
and
push
outs
and
add
push
add
jmp
xor
and
add
nop
mov
test
adc
or
push
add
outs
and
add
mov
sub
mov
and
add
add
cmp
xchg
in
jmp
mov
and
add
add
inc
add
xor
and
or
lea
add
cmp
test
rcl
scas
iret
mov
sub
add
add
xchg
add
mov
retf
mov
sub
or
add
add
sbb
retf
movs
add
pop
mov
and
add
add
pop
add
mov
sub
test
and
sldt
xchg
in
add
pusha
add
and
add
mov
xor
retf
test
xchg
mov
jg
jmp
mov
or
push
add
inc
test
xchg
je
ins
adc
jmp
jmp
push
ins
and
les
add
add
push
cmp
xchg
or
add
mov
inc
add
jmp
dec
mov
xchg
outs
test
sub
mov
fist
add
add
or
and
and
or
cmp
test
test
in
add
sbb
xor
cmps
xchg
movs
mov
push
sub
and
cmp
jmp
mov
sub
mov
and
cwde
in
jmp
add
sar
and
add
xchg
sub
mov
add
les
add
cmp
and
loopne
cmp
dec
mov
lock
or
add
mov
mov
cmps
xchg
add
test
add
fisttp
(bad)
mov
add
cmp
add
pop
aad
dec
and
add
or
movs
jmp
pusha
xor
add
sar
enter
xchg
(bad)
and
add
les
add
cmp
add
pavgb
mov
mov
je
jmp
cmp
xchg
add
mov
fwait
ror
fisttp
(bad)
mov
add
add
mov
sub
pop
movs
mov
lldt
lahf
add
jmp
test
mov
or
aas
test
xchg
and
add
fist
test
add
add
into
and
mov
and
add
mov
test
and
int
movs
fwait
in
add
jle
add
sub
mov
pushf
pop
cmps
add
add
add
out
fimul
sub
test
lods
add
add
mov
jmp
mov
cwde
sub
jbe
and
(bad)
xchg
or
add
xchg
adc
and
test
add
cmps
add
add
mov
sub
sub
and
add
add
add
dec
add
sub
mov
cvtdq2ps
icebp
add
add
mov
sub
mov
and
add
add
or
in
(bad)
jmp
mov
push
shl
push
mov
je
jmp
mov
and
add
add
adc
jg
jmp
mov
sub
fs
mov
lods
push
add
in
and
sub
mov
and
add
add
xor
add
add
fwait
sub
and
add
add
adc
lock
cmp
mov
cmps
in
xchg
sub
mov
cmp
add
xchg
mov
jmp
mov
sub
mov
and
je
jmp
mov
(bad)
push
je
pop
mov
movaps
dec
mov
sti
scas
add
add
mov
inc
and
std
or
and
and
and
add
add
(bad)
(bad)
mov
add
mov
mov
sub
mov
popa
je
int
test
xor
add
xor
and
(bad)
mov
add
dec
xor
and
add
pop
sbb
test
add
add
mov
mov
ja
mov
inc
xor
add
sub
add
and
add
xchg
movs
jp
mov
mov
out
pop
(bad)
rol
fbstp
pop
cmp
xchg
add
xchg
add
jp
adc
fs
and
pshufw
mov
mov
adc
imul
push
je
jmp
mov
and
add
rcl
inc
and
jg
jmp
adc
retf
movs
add
addr16
nop
mov
dec
in
push
nop
add
jmp
sub
mov
push
push
adc
jae
test
mov
add
add
xchg
dec
mov
mov
(bad)
cs
je
ret
add
jmp
sbb
xor
add
lods
mov
je
jmp
mov
and
fs
cld
add
add
xchg
in
sub
add
cmp
(bad)
and
je
jmp
mov
push
stos
add
add
je
add
inc
add
sub
fwait
dec
test
and
prefetch
fwait
sub
mov
add
ds
mov
cld
add
adc
lock
ret
test
pop
lods
add
add
js
cmps
add
pushf
hlt
(bad)
push
push
mov
and
pop
sub
call
mov
cmp
test
pop
jmp
in
add
psrad
lds
jmp
(bad)
pop
and
sub
cmp
or
mov
xchg
test
inc
add
dec
mov
mov
add
(bad)
std
dec
add
inc
and
call
sub
mov
mov
sbb
test
add
mov
and
sub
add
(bad)
add
retf
js
add
ins
popa
out
add
test
pop
add
xchg
add
movs
mov
mov
mov
aaa
add
(bad)
(bad)
mov
add
add
add
ret
mov
and
fwait
in
jmp
and
dec
mov
(bad)
jp
out
add
sbb
add
fwait
js
mov
push
add
dec
test
add
and
test
mov
pop
add
add
pop
add
and
mov
mov
add
mov
aas
add
call
mov
mul
inc
inc
jg
scas
iret
into
xchg
in
js
mov
mov
jb
retf
pop
mov
push
add
add
pcmpgtb
mov
jmp
pop
test
js
add
pop
or
add
add
xchg
in
mov
push
add
add
mov
mov
or
cmp
add
add
mov
jmp
adc
adc
(bad)
cli
push
add
mov
in
(bad)
xchg
call
mov
mov
mov
sbb
sub
dec
retf
and
xchg
add
mov
add
inc
sbb
js
add
pop
inc
ret
(bad)
jmp
pop
cmps
add
add
or
mov
xor
mov
adc
or
ror
add
add
jmp
add
push
mov
add
icebp
mov
xlat
sbb
push
adc
(bad)
loopne
add
add
mov
mov
ror
sbb
test
adc
mov
(bad)
push
and
add
mov
push
fsubr
add
pop
pop
jmp
push
stos
mov
inc
and
popa
inc
mov
mov
xor
push
add
fld
fwait
sub
mov
and
mov
test
sbb
inc
movs
adc
mov
push
cmps
add
sub
mov
gs
add
inc
shl
and
mov
add
in
or
outs
pop
and
inc
mov
in
ffreep
or
add
outs
xchg
clc
xchg
in
xchg
add
mov
int
js
retf
add
or
fs
cmp
cmp
and
ins
mov
fstp
push
pop
pop
add
(bad)
rol
add
add
call
or
inc
je
adc
add
sub
ret
repz
mov
pusha
movs
add
in
pop
mov
call
mov
jmp
jne
cmp
aam
test
js
inc
jmp
mov
mov
sar
js
mov
fild
(bad)
pop
or
push
add
xlat
mov
add
sbb
xchg
movs
add
mov
sub
add
or
retf
xor
jmp
mov
add
pop
(bad)
or
inc
movs
dec
(bad)
cmp
xchg
add
mov
loope
je
cmps
add
mov
test
mov
xor
ss
clc
pop
cmp
mov
jmp
sub
fisttp
sub
scas
repz
dec
pop
inc
add
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movd
mov
sub
and
call
push
mov
mov
mov
jg
jmp
sub
cwde
adc
add
xchg
add
jg
test
and
sub
mov
stc
test
add
sbb
mov
inc
fld
vmread
add
cmps
jmp
jns
jno
sub
xor
je
jmp
xor
imul
add
test
jmp
mov
sub
das
inc
and
jg
mov
rol
retf
adc
call
cld
jge
aad
mov
ins
js
push
cdq
push
movs
jnp
mov
fiadd
add
add
scas
add
cdq
jle
call
mov
add
add
aad
mov
sub
mov
mov
add
mov
sub
mov
punpcklwd
test
add
mov
push
pop
sub
cli
inc
rcr
push
and
lahf
jmp
mov
sub
fld
test
scas
or
sahf
xchg
mov
xlat
sub
push
adc
test
add
lahf
mov
adc
add
inc
and
clc
test
repnz
add
outs
das
push
push
test
jne
mov
rcr
pmulhw
or
mov
lods
adc
push
fcmovu
add
and
cwde
test
push
scas
add
sahf
xchg
add
test
shl
and
fiadd
lahf
add
out
leave
add
and
push
fdivrp
and
fs
add
mov
sub
aad
jae
push
pop
jmp
and
scas
push
(bad)
call
add
add
cmp
bound
jae
and
add
in
and
mov
add
loop
inc
call
mov
mov
mov
(bad)
call
add
(bad)
js
push
push
movs
sub
cmps
dec
cdq
ja
iret
mov
and
or
sahf
xchg
mov
jns
push
lmsw
loope
mov
jo
jmp
mov
mov
lods
push
and
cmps
adc
test
(bad)
push
jmp
pop
outs
inc
lahf
mov
sbb
gs
sub
pop
mov
out
pop
cs
shl
popa
inc
and
push
mov
jg
xor
(bad)
dec
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
xor
add
repnz
imul
add
mov
pushf
inc
add
adc
add
and
loop
in
add
add
mov
add
mov
fwait
inc
add
add
add
mov
add
add
push
sub
mov
cwde
inc
pop
dec
xlat
test
test
and
add
dec
add
sahf
dec
mov
bound
add
test
mov
and
pop
add
mov
add
test
mov
mov
retf
mov
mov
mov
je
ins
inc
hlt
add
test
pop
dec
add
push
mov
jg
jmp
mov
nop
out
xor
cdq
jae
test
mov
add
add
das
inc
add
mov
and
pop
add
mov
ss
jmp
mov
(bad)
rol
js
test
add
inc
(bad)
jb
add
and
test
cmp
mov
jg
jmp
mov
add
lods
jmp
dec
xchg
add
mov
test
add
add
add
clc
adc
mov
pusha
test
add
test
test
add
add
mov
push
xor
dec
add
jns
adc
jnp
out
mov
(bad)
and
test
pop
add
inc
pushf
enter
add
sahf
ror
jbe
add
add
add
add
mov
jp
inc
pop
movs
pop
pop
add
mov
pop
popf
mov
mov
pop
jmp
dec
jmp
mov
and
add
div
jmp
mov
push
and
jg
jmp
mov
repnz
mov
fimul
test
add
add
add
mov
mov
lds
js
jp
neg
dec
pop
jns
ret
add
or
shl
test
add
jmp
mov
pop
sbb
(bad)
bnd
mov
sub
mov
add
dec
pop
mov
test
and
pop
add
rcr
loopne
mov
pushf
add
pusha
add
jne
retf
inc
pop
add
mov
or
mov
sbb
rol
sub
mov
(bad)
outs
add
add
jge
gs
pop
add
in
push
in
scas
xor
fwait
mov
add
out
mov
test
add
lods
mov
jne
pop
inc
add
pop
dec
pop
pop
mov
pop
sub
mov
pop
mov
add
nop
icebp
neg
xlat
push
pop
push
lds
js
cmps
push
add
add
dec
pop
repnz
sysexit
xor
add
mov
mov
xchg
cli
add
or
test
mov
sbb
push
push
out
mov
cmps
xor
add
mov
jg
add
add
or
or
jmp
mov
adc
dec
pusha
test
rol
mov
jmp
mov
outs
test
add
out
mov
jmp
add
jecxz
xor
test
mov
add
mov
fnstsw
add
pop
sbb
inc
xchg
mov
inc
mov
and
dec
pusha
add
inc
icebp
add
dec
icebp
push
fwait
and
cmp
and
add
add
mov
test
mov
add
movs
repnz
add
push
mov
neg
jmp
mov
mov
call
sub
pushf
mov
cmp
jb
xor
sbb
in
test
lds
fadd
pop
add
or
add
lea
icebp
pop
neg
ret
mov
jmp
mov
dec
mov
mov
call
mov
pop
adc
mov
fild
pusha
add
inc
and
pop
or
add
enter
pop
add
sbb
imul
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
outs
test
add
add
mov
mov
add
test
lods
sti
cli
add
pop
add
ins
sbb
add
add
test
fwait
jnp
xor
jb
and
inc
repz
and
add
icebp
daa
add
sub
mov
nop
jg
add
xchg
add
add
xor
or
pop
mov
lods
add
mov
and
jne
mov
mov
xchg
adc
add
mov
lahf
rol
mov
je
pop
add
add
xlat
add
mov
leave
lea
pop
add
xlat
add
add
test
inc
and
xchg
inc
js
mov
sub
fstp
add
add
mov
and
fwait
sar
arpl
jg
jmp
mov
mov
xlat
push
xchg
jg
adc
sbb
into
add
add
push
dec
fbstp
pcmpeqb
mov
jmp
mov
and
loopne
add
stos
mov
xor
cmp
add
ins
ror
pop
xchg
jg
jmp
jae
and
sub
or
aas
add
cli
mov
pop
ins
mov
fadd
sbb
add
add
sub
mov
hlt
jle
jns
xlat
mov
add
add
fcomp
outs
xchg
and
cli
add
add
retf
rcr
push
xchg
mov
sbb
add
into
add
add
inc
lea
mov
and
jg
inc
lods
sti
cli
add
or
and
adc
clc
jmp
mov
xchg
inc
add
jb
fisub
xlat
add
add
add
inc
and
or
setl
test
add
mov
sub
hlt
mov
movd
add
xlat
add
inc
jmp
xor
inc
and
pop
test
add
add
test
and
sub
jmp
cs
pop
add
jns
add
xchg
mov
xor
lahf
mov
test
add
sti
jmp
push
xchg
and
sub
mov
adc
test
stc
sbb
jmp
cmove
test
out
xlat
mov
and
je
adc
cli
mov
mov
(bad)
jl
pop
div
mov
jmp
add
add
pushf
add
jl
xor
fwait
jnp
inc
mov
je
add
fucomi
cli
add
xlat
pushf
jecxz
jne
stos
xor
popf
mov
xchg
xchg
and
daa
add
add
add
and
add
mov
mov
je
add
mov
mov
test
jmp
jg
cmp
jnp
jg
add
mov
outs
test
cwde
add
add
xchg
add
scas
imul
pop
fucomip
call
add
aas
test
daa
add
imul
mov
scas
add
test
add
mov
rol
and
pushf
xor
rol
or
aad
popf
mov
mov
cli
add
pop
jge
push
jg
add
sbb
add
sbb
mov
mov
add
jnp
loopne
outs
lods
push
test
add
repz
clc
add
mov
mov
pop
(bad)
call
add
jmp
(bad)
sahf
and
clc
sbb
gs
int
jmp
mov
jae
and
jnp
add
push
pop
add
mov
mov
cmp
test
add
add
or
mov
popf
pop
mov
mov
icebp
scas
add
test
xchg
mov
sub
pushf
inc
js
lods
add
add
mul
test
push
push
frstor
push
push
dec
(bad)
jl
mov
sti
cli
addr16
fcmovnb
push
and
int
sbb
sbb
inc
test
cwde
add
test
sbb
xchg
push
xor
add
and
add
jno
lock
and
xlat
pop
int
cmps
icebp
xchg
stos
mov
and
cmp
scas
add
test
push
add
cmc
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
call
mov
mov
and
pop
add
add
add
(bad)
fsub
add
add
add
mov
add
retf
mov
(bad)
jle
arpl
out
(bad)
dec
fisub
add
add
mov
add
jns
adc
add
in
data16
hlt
daa
iret
lds
test
add
xchg
int3
add
add
jl
test
dec
out
sbb
jl
test
in
push
std
jg
(bad)
jle
mov
aad
and
add
add
jle
test
add
add
test
add
push
mov
jp
add
inc
fnsave
sub
add
add
add
pop
call
cmp
inc
lahf
push
icebp
and
mov
je
xchg
add
mov
sub
mov
imul
cli
mov
and
add
jne
mov
jge
xlat
and
jae
or
mov
mov
call
cmps
xor
mov
jp
lds
mov
add
add
add
pop
sub
mov
add
add
or
add
push
push
mov
xchg
fsubr
cwde
add
add
aam
mov
push
std
add
data16
sub
jae
and
add
out
cmp
inc
add
mov
push
pop
daa
lods
xchg
mov
cmovne
data16
jmp
pop
fisub
pop
rcr
and
pop
pop
add
jae
add
push
add
jbe
and
add
retf
adc
imul
add
prefetcht1
out
pop
add
add
test
iret
cmps
fidivr
mov
add
je
gs
pop
test
sbb
and
mov
cmp
dec
shl
and
add
add
std
in
add
add
in
cli
test
pop
test
sub
push
icebp
and
add
add
add
pop
jl
stos
mov
push
add
ret
and
pop
test
pcmpeqw
add
test
pop
pushf
add
mov
paddusb
push
and
addr16
std
add
add
cld
jae
mov
add
jg
jmp
mov
sub
mov
movntq
out
push
add
jmp
cmc
test
sub
cld
test
out
add
xor
add
add
add
mov
and
add
movs
int3
cld
mov
and
add
add
test
add
add
retf
sub
or
jne
xor
add
add
call
invd
mov
jmp
repnz
push
add
jmp
mov
and
pop
test
mov
outs
test
dec
(bad)
and
add
add
test
mul
mov
stc
fiadd
je
jmp
sbb
push
call
cmp
jp
jg
mov
add
test
stos
call
jmp
test
je
adc
add
mov
call
and
jg
mov
test
call
pop
dec
mov
mov
je
xchg
stc
pop
add
movd
add
cmp
jle
(bad)
jmp
pushf
(bad)
jl
test
add
xlat
fld1
add
push
jp
or
bound
add
add
mov
add
add
pop
sub
(bad)
and
add
retf
add
test
add
jnp
or
xlat
dec
fidivr
pop
cmc
add
mov
sub
mov
psllw
test
add
add
sub
mov
mov
leave
inc
add
mov
add
call
xor
daa
ja
jg
and
add
mov
test
mov
ret
test
sahf
add
add
test
pop
add
xor
jmp
add
xchg
add
add
pop
fisub
sub
mov
mov
sahf
pop
add
jmp
xlat
(bad)
retf
add
sub
inc
inc
inc
cmp
add
xchg
add
add
bound
shl
jp
je
jmp
jl
and
add
add
mov
and
jg
(bad)
jle
add
test
sub
mov
push
test
add
pop
jmp
add
std
add
aaa
add
jne
xchg
jne
push
mov
add
xor
popa
mov
(bad)
dec
add
jle
pop
fisub
sub
enter
jp
jmp
call
add
rcl
push
nop
inc
inc
inc
sub
icebp
pop
mov
pop
jmp
inc
xor
inc
mov
push
test
add
pop
add
add
push
in
mov
mov
add
mov
push
call
vunpcklps
add
jecxz
pop
add
aaa
add
mov
add
hlt
jecxz
rcr
psllw
mov
add
pop
js
add
and
mov
mov
pop
cwde
je
adc
jl
mov
xchg
fld
mov
sub
popf
test
stos
adc
arpl
dec
add
add
and
add
add
dec
add
add
icebp
and
out
add
test
fucomip
add
xchg
call
in
aam
cmp
mov
clc
jle
add
xchg
jne
out
add
and
add
pop
mov
add
mov
std
dec
pop
dec
sub
lea
mov
pop
retf
add
add
ret
mov
mov
enter
jnp
int3
add
mov
out
fdiv
add
inc
aaa
mov
(bad)
mov
add
mov
add
into
in
sub
add
mov
add
xchg
add
pop
lahf
test
add
add
add
test
and
add
add
add
add
mov
mov
and
push
stc
repnz
mov
fld
push
sbb
(bad)
sub
pushf
and
xchg
add
mov
add
pop
add
jo
add
push
add
push
and
or
inc
loop
in
jle
add
dec
add
add
dec
mov
mov
pop
mov
aad
and
sub
(bad)
inc
jae
xlat
add
add
xlat
fldlg2
add
les
add
int3
xor
ja
sar
add
sbb
in
add
add
cmp
std
mov
(bad)
cmp
out
jno
and
add
add
add
add
xor
and
add
add
add
inc
outs
mov
imul
push
inc
inc
repnz
cmc
add
push
cmps
add
add
rol
jp
add
std
mov
mov
mov
or
adc
out
add
inc
pop
add
jbe
and
add
add
xchg
xchg
jge
add
jle
mov
jle
add
jne
cmps
ins
shr
add
jmp
mov
mov
adc
add
push
dec
popf
out
test
push
push
xchg
ficom
add
jmp
and
add
jp
add
mov
mov
adc
mov
popf
jmp
das
cmovae
cld
mov
jmp
mov
mov
mov
push
mov
jmp
aad
and
test
cli
sbb
adc
out
je
test
pushf
push
jmp
add
inc
mov
movs
int3
cld
in
dec
add
add
loop
mov
add
add
push
mov
and
add
xchg
mov
jle
and
dec
and
jmp
(bad)
call
retf
xchg
inc
out
inc
pop
or
push
add
add
test
add
xchg
inc
movs
ja
push
ja
(bad)
dec
pop
add
cmp
add
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
call
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
add
call
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
jg
jmp
call
sub
call
je
jmp
call
add
call
jg
jmp
mov
add
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
call
jg
jmp
call
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
add
call
je
jmp
call
sub
call
je
jmp
mov
add
call
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
mov
add
mov
je
jmp
mov
add
call
je
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
lea
mov
mov
mov
call
call
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
cmp
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
call
call
call
mov
jmp
mov
mov
mov
movzx
movzx
cmp
cmove
call
jmp
mov
sub
mov
mov
jmp
lea
mov
movzx
mov
call
call
movzx
call
mov
mov
mov
shl
add
add
mov
add
call
mov
mov
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
call
jmp
mov
lea
lea
call
mov
mov
mov
mov
mov
call
lea
mov
mov
add
mov
mov
mov
call
mov
call
mov
call
sub
mov
mov
mov
cmp
cmovne
call
jmp
call
call
mov
mov
push
mov
xor
cmp
pop
cmove
call
jmp
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
call
mov
mov
mov
call
call
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
call
call
mov
call
jmp
mov
mov
mov
mov
mov
call
sub
call
mov
jmp
lea
mov
lea
call
mov
mov
mov
mov
mov
call
mov
mov
jmp
call
call
jmp
mov
mov
cmp
cmovb
call
jmp
mov
jmp
mov
call
jmp
mov
mov
call
call
call
sub
mov
sub
pop
pop
pop
ret
jmp
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
push
mov
push
push
push
and
add
mov
mov
call
mov
mov
mov
mov
call
call
mov
call
mov
mov
call
mov
mov
mov
sub
mov
mov
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
call
jg
jmp
mov
add
mov
jg
jmp
mov
sub
call
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
pushf
sub
popf
mov
mov
mov
mov
mov
mov
call
mov
mov
call
call
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
and
mov
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
call
add
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
call
mov
call
mov
mov
mov
call
call
mov
mov
sub
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
mov
test
cmovne
mov
jmp
call
mov
mov
jmp
mov
mov
call
cmp
cmovne
mov
jmp
mov
call
sub
mov
mov
mov
call
call
call
call
call
jmp
mov
mov
jmp
mov
mov
call
call
jmp
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
pushf
xor
add
sub
popf
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
call
mov
and
mov
mov
mov
mov
call
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
call
call
mov
mov
mov
mov
call
call
call
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
call
jmp
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
xchg
jbe
sub
and
add
add
jg
and
add
or
pop
add
inc
out
add
movs
mov
add
add
pop
adc
hlt
dec
adc
in
mov
sbb
or
adc
add
or
add
add
push
add
add
add
in
push
or
add
add
push
or
add
(bad)
ins
sahf
call
add
add
(bad)
daa
inc
hlt
add
adc
lea
imul
out
add
add
add
mov
mov
sbb
inc
inc
jg
cmc
les
call
out
add
(bad)
and
das
add
push
add
test
add
add
cwde
int3
xor
mov
add
sub
nop
stc
hlt
les
add
ret
iret
rol
fld
xstore-rng
cmps
add
add
xor
add
add
sub
and
add
(bad)
dec
or
add
push
les
mov
jg
add
add
mov
out
or
sub
clts
das
xchg
xor
jle
add
and
outs
outs
mov
jg
mov
add
add
add
jns
sbb
rol
add
mov
jmp
cmc
sub
and
add
inc
lods
ins
pusha
jge
and
or
push
(bad)
mov
add
jmp
mov
dec
or
sub
sub
mov
mov
and
les
add
sub
pushw
scas
add
(bad)
lock
add
imul
add
add
push
mov
and
and
add
mov
add
or
mov
and
add
add
outs
mov
packssdw
add
jmp
push
test
add
add
mov
jnp
sbb
mov
add
stc
out
or
add
nop
das
add
fidivr
and
add
and
and
das
pop
rcl
or
imul
add
and
xor
add
push
test
scas
add
sub
and
add
add
sub
mov
jg
lock
add
mov
and
adc
add
add
dec
and
add
mov
pop
out
add
and
add
jns
push
jecxz
loop
rcl
add
and
outs
jp
add
add
sub
mov
pshufw
add
jmp
jmp
pop
add
cmp
add
sub
test
sub
add
jp
add
add
or
dec
mov
add
popa
push
pusha
and
out
das
mov
mov
add
push
(bad)
mov
test
cmp
push
dec
test
add
ret
pushf
xchg
(bad)
and
imul
and
jnp
add
add
fidivr
xchg
mov
test
cdq
add
add
jo
add
popa
mov
add
add
and
add
icebp
stos
ret
adc
cmp
xor
jg
jnp
fiadd
add
str
ja
pop
mov
popa
add
push
add
add
in
add
sti
test
sub
add
mov
popf
mov
jmp
test
jle
ret
cmp
sub
popa
pop
out
loope
addr16
push
jo
in
sub
add
xchg
fisubr
mov
cmovnp
add
mov
pop
out
out
movs
test
add
jo
call
sbb
jle
sub
or
add
dec
add
je
shl
or
popa
sub
mov
and
ja
jo
jmp
mov
mov
sbb
cvtpi2ps
push
add
jmp
mov
sub
add
push
push
cdq
imul
add
sub
pop
mov
lahf
stc
sbb
xchg
add
scas
je
jmp
mov
and
stos
jb
add
jg
jmp
mov
sub
imul
push
mov
str
test
and
hlt
les
add
ret
test
mov
jo
(bad)
and
in
jmp
sbb
sub
test
add
out
daa
push
mov
and
push
add
cmps
les
add
jmp
mov
das
sub
mov
and
cvtpi2ps
add
out
add
hlt
dec
mov
pusha
add
jbe
not
adc
dec
add
jmp
mov
sub
mov
jnp
test
or
add
fbld
add
out
sub
fild
jg
shl
add
sbb
add
mov
ins
sub
add
(bad)
jmp
fs
jbe
push
add
mov
mov
xchg
ficom
mov
add
jmp
sub
jl
push
add
imul
fsubr
and
movs
jbe
repnz
xchg
scas
add
add
add
fnstcw
mov
and
je
jmp
shr
sgdtd
add
mov
and
je
fild
xchg
das
xchg
mov
push
(bad)
mov
and
jnp
sub
mov
ret
retf
das
mov
mov
psrld
push
add
jmp
loopne
and
add
add
mov
and
lods
jl
add
fiadd
and
mov
hlt
sub
mov
packssdw
das
add
mov
hlt
dec
and
add
lods
repnz
sbb
(bad)
sbb
les
and
les
jmp
add
lds
xor
inc
daa
pusha
push
xor
xchg
(bad)
sbb
jle
test
add
movs
shl
call
jbe
add
pop
ins
add
das
mov
jo
add
sub
movs
jbe
cmp
test
add
das
jmp
push
test
add
adc
inc
and
lock
add
jmp
jmp
add
ins
in
or
ins
and
je
jmp
mov
(bad)
shr
mov
sar
inc
pop
add
popa
jmp
jmp
in
mov
pushf
mov
clc
leave
sub
popf
mov
cmp
jno
jecxz
xchg
and
(bad)
jmp
cmps
test
out
add
addr16
and
mov
lods
lods
shr
add
add
xchg
call
and
daa
cmp
add
jl
jne
pop
mov
(bad)
jg
mov
add
push
add
add
cmp
and
mov
add
mov
dec
and
pop
out
out
scas
xchg
or
xchg
or
add
in
mov
cmp
add
adc
mul
and
mov
pop
call
scas
mov
cmp
hlt
add
or
jnp
cmp
add
push
dec
add
push
sub
test
and
add
sbb
pop
add
scas
jnp
fadd
add
and
add
add
mov
(bad)
push
and
add
add
test
jge
add
and
add
mov
or
jg
sub
add
data16
mov
add
inc
and
je
jo
mov
call
pop
imul
ins
xchg
les
ins
sub
(bad)
(bad)
inc
add
mov
adc
and
push
out
cmps
iret
adc
movs
adc
aad
retf
and
and
add
xchg
mov
xor
out
out
mov
add
push
mov
sub
sub
ds
(bad)
and
xchg
mov
test
inc
stc
loopne
out
cld
add
mov
mov
jmp
cwde
jnp
add
mov
mov
mov
add
cdq
movs
pop
mov
div
aam
clc
cmp
sqrtps
sub
mov
and
add
out
mov
stc
das
and
jmp
xchg
push
xor
sub
xchg
push
push
add
and
inc
ds
and
or
jmp
xchg
push
push
jo
mov
sub
mov
xor
add
add
scas
stos
add
add
add
mov
dec
test
or
add
out
add
scas
fisttp
mov
and
in
add
or
inc
and
xchg
jle
(bad)
inc
test
push
aas
outs
sub
mov
hlt
add
out
add
add
add
adc
sub
mov
mov
mov
mov
add
dec
add
pop
ins
pop
(bad)
dec
xchg
mov
fcmovnb
loopne
cmp
dec
and
mov
add
add
(bad)
out
and
sub
add
push
sub
jmp
mov
test
add
scas
retf
fld
add
mov
jbe
nop
jge
and
lds
or
enter
mov
mov
mov
dec
add
add
mov
and
sub
add
xchg
add
mov
add
sub
mov
sub
xchg
and
add
add
rol
dec
ror
add
mov
les
mov
jmp
mov
in
out
inc
inc
cmp
jno
ror
bswap
inc
add
add
in
lods
call
add
jmp
mov
loopne
shl
xor
push
cwde
jbe
and
les
add
hlt
add
fadd
mov
(bad)
jo
add
das
and
or
cmc
push
and
xchg
add
popa
pop
outs
outs
jmp
mov
add
test
and
jae
xchg
jo
mov
mov
(bad)
add
sub
inc
outs
jg
mov
jg
add
mov
push
add
add
push
jmp
mov
lea
pop
mov
jb
fcomip
and
add
in
test
dec
add
and
scas
and
jns
mov
jne
inc
(bad)
jo
sub
popa
add
add
call
sub
and
add
ds
and
jmp
cmps
mov
mov
test
add
add
cli
and
add
add
push
jae
jmp
call
mov
push
add
add
loop
in
ins
add
add
js
add
(bad)
inc
and
sub
add
inc
and
jnp
and
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
out
push
sbb
repnz
and
add
lea
test
add
add
mov
loop
and
add
add
fsub
add
add
sbb
fldcw
and
add
stc
dec
inc
ror
push
xlat
add
xchg
test
test
mov
movs
cdq
sub
add
int
std
dec
add
mov
pop
add
mov
sbb
(bad)
sahf
repz
adc
add
test
add
add
adc
cld
push
test
movs
add
add
add
mov
mov
add
jae
imul
push
add
mov
push
ror
add
sbb
add
add
mov
lock
int3
add
add
add
aad
aad
and
add
movs
push
(bad)
add
jno
dec
add
sbb
mov
punpckhbw
or
add
add
add
stc
(bad)
sub
mov
push
(bad)
and
cwde
add
and
pop
add
sub
mov
jnp
add
ror
or
add
add
add
(bad)
add
cmp
dec
data16
test
(bad)
ror
sub
jmp
xlat
test
sbb
add
mov
test
add
add
xlat
sbb
add
add
sub
mov
nop
or
add
xor
out
popf
test
add
sbb
mov
pop
xchg
(bad)
sti
in
add
verr
cmc
sbb
add
sbb
add
sub
mov
jg
arpl
sbb
fldl2t
clc
or
inc
add
xor
and
adc
add
add
mov
or
lods
sti
jbe
fsub
sbb
movs
je
jmp
mov
and
add
(bad)
je
push
xchg
sti
push
mov
inc
add
and
add
pop
push
xor
mov
cmovne
cmp
add
jge
imul
cs
jecxz
mov
jg
jmp
ins
fdiv
test
movs
pop
sub
dec
shl
cmc
add
mov
popa
mov
sub
mov
call
movs
mov
add
add
stc
add
mov
adc
stos
mov
add
push
or
popa
mov
or
shl
add
orps
inc
add
push
jb
rol
shl
adc
mov
add
sbb
and
add
mov
xor
pop
mov
lods
mov
or
(bad)
jle
cmc
add
sbb
xlat
sbb
add
push
outs
test
add
add
cdq
mov
add
movs
add
sti
in
add
add
jo
and
add
sbb
add
add
mov
and
pop
lahf
pushf
and
fsub
add
jmp
jb
and
sbb
sbb
mov
or
mov
and
out
add
add
mov
sub
mov
psubusw
push
stc
(bad)
sbb
sbb
add
and
popa
and
mov
add
mov
fldenv
into
shl
clc
add
mov
mov
sub
adc
add
jmp
mov
add
push
ja
mov
stos
(bad)
js
rol
push
add
stc
mov
rol
scas
cli
sub
xchg
and
add
popa
jg
jmp
ins
test
pop
push
add
jae
test
pop
add
retf
add
data16
cmc
sbb
pushf
add
add
call
and
adc
sbb
add
fld
push
add
push
leave
repnz
adc
add
add
add
add
sub
sub
add
cmovle
add
add
and
sbb
adc
daa
pop
mov
jg
jmp
ins
fdiv
test
fld
and
pop
mov
setle
push
add
popa
scas
sbb
mov
add
jmp
movs
pop
(bad)
loop
inc
push
jmp
mov
xchg
sbb
movs
mov
add
sub
sub
mov
test
add
xlat
xchg
and
fsub
mov
jge
add
xlat
sbb
and
add
sub
xor
sbb
je
dec
imul
dec
test
inc
add
sub
mov
fmul
call
mov
add
sub
mov
pop
xor
or
add
jmp
sahf
cmp
add
mov
imul
add
movntps
jg
lods
push
stc
(bad)
cmc
mov
call
mov
sub
mov
jmp
popf
pushf
and
add
add
test
stc
add
cmp
add
jmp
pop
test
mov
not
push
in
add
je
jmp
mov
sub
dec
shl
add
verr
cmc
sbb
jmp
pop
lahf
and
add
add
mov
je
jmp
mov
sub
mov
fcomp
(bad)
sub
pop
jg
jmp
fnstsw
adc
cmc
sbb
mov
pop
dec
or
add
ds
and
jle
pop
adc
mov
jg
jmp
jle
and
add
add
sbb
test
popa
and
or
add
jg
add
mov
sub
mov
push
(bad)
pop
rol
jmp
add
and
add
xlat
add
mov
and
cwde
add
je
jmp
xchg
pop
sbb
and
rol
add
(bad)
and
stc
(bad)
sbb
add
sbb
add
out
in
mov
mov
jmp
xchg
test
pushf
add
movs
jb
icebp
xchg
xor
stc
add
(bad)
and
cmc
sbb
xlat
sbb
pushf
pusha
and
leave
ficom
mov
pop
sbb
mov
pushf
add
add
mov
test
popa
add
rsm
and
sub
add
add
sar
and
add
ficomp
add
sbb
inc
pushf
and
sub
test
pushf
std
test
movs
pop
(bad)
and
rol
add
(bad)
mov
pushf
add
xlat
sub
mov
je
int3
rol
add
adc
sub
mov
sbb
mov
jg
add
stc
(bad)
sub
mov
je
int3
jmp
test
movs
add
sub
aas
int3
rcr
cwde
add
(bad)
(bad)
and
sbb
repnz
cmp
sub
mov
setl
movs
pop
jmp
into
test
add
add
push
sub
and
sbb
adc
add
int3
add
and
jle
out
jae
jno
push
test
je
lods
dec
cli
(bad)
cmc
mov
sub
pushf
cmp
add
xchg
(bad)
push
add
add
add
pop
popf
test
fadd
add
stc
mov
into
test
fisttp
ds
add
sbb
sbb
cmp
mov
rsm
mov
add
out
test
test
fldenv
int3
adc
cmc
sbb
cmps
add
adc
pusha
add
or
inc
and
jo
(bad)
pop
add
icebp
fldenv
pushf
add
aam
pop
int3
sbb
test
mov
arpl
pushf
add
add
mov
inc
and
sbb
add
add
das
test
pop
jg
sub
mov
(bad)
cmps
add
sbb
adc
test
pushf
add
rcr
outs
inc
and
push
test
push
push
add
(bad)
cmps
add
sti
and
inc
add
mov
mov
add
jmp
mov
sub
lods
cmp
cmp
xchg
sub
add
jmp
das
fistp
add
inc
jnp
and
mov
scas
or
popa
int3
push
sub
add
out
sub
mov
je
jmp
mov
sub
mov
push
rcpps
add
adc
mov
cdq
add
sub
mov
call
fldl2t
jge
add
mov
jnp
jle
rol
sub
pop
retf
mov
ffree
cli
test
rcr
adc
and
add
jne
outs
sbb
je
dec
sbb
add
test
add
mov
mov
setg
dec
add
pushf
and
add
mov
pop
pop
in
movs
pop
jmp
mov
sub
mov
shl
rcpps
mov
inc
mov
shl
and
push
test
add
add
rcr
pop
hlt
inc
and
add
sub
mov
je
call
scas
sbb
pushf
and
add
mov
pop
and
(bad)
and
mov
inc
popa
pushf
push
add
sub
jl
and
adc
add
mov
mov
std
and
add
outs
inc
js
pop
pop
cmp
add
lods
add
fld
add
pop
inc
and
setno
add
add
xor
and
pushf
add
imul
mov
pop
add
jmp
mov
mov
mov
or
cmp
or
popa
int3
sbb
add
out
pop
cmp
inc
es
sbb
cmovne
inc
add
add
add
mov
ja
add
leave
push
inc
mov
add
jg
mov
lods
add
add
or
jg
test
and
or
cmc
lea
inc
dec
pop
push
jo
inc
add
add
call
add
add
lods
jnp
aad
and
call
mov
mov
imul
add
bswap
retf
and
(bad)
sbb
add
and
add
js
mov
pushf
and
add
fld
add
add
jg
lds
mov
dec
mov
popf
je
mov
dec
push
mov
add
std
loopne
add
push
add
jb
add
lea
out
add
rol
fucomp
add
inc
add
imul
add
and
cli
and
cmp
das
mov
xchg
push
pop
mov
add
(bad)
sub
sub
xor
xchg
sar
sub
inc
add
loope
add
xchg
mov
mov
add
add
add
inc
add
pop
jg
daa
add
repnz
add
add
inc
add
xlat
add
nop
test
popa
lods
pushf
push
mov
add
xchg
js
mov
mov
in
sti
call
add
mov
adc
into
repz
mov
cmp
sbb
mov
xchg
shr
inc
add
sub
fucomp
stc
cmc
dec
inc
sbb
sub
(bad)
sbb
adc
(bad)
adc
punpcklwd
mov
cwde
mov
pop
popf
or
add
adc
inc
add
push
jb
and
add
sbb
xor
je
or
dec
add
jo
sub
dec
add
add
add
mov
mov
and
(bad)
mov
mov
mov
cdq
pop
add
jge
push
mov
add
rcr
add
test
xchg
and
add
and
dec
add
add
xor
jmp
cld
jmp
shr
lds
add
stc
(bad)
cmovl
jl
lods
add
add
cwde
rcr
add
cmp
add
popa
mov
pop
and
lods
jp
add
add
lea
lahf
sbb
mov
jnp
call
mov
mov
mov
sbb
add
dec
sbb
add
and
rol
add
xchg
and
pop
add
lea
lea
push
add
mov
xchg
jae
cld
(bad)
mov
mov
enter
add
fisttp
add
jmp
mov
(bad)
cld
add
add
add
mov
add
test
cld
(bad)
mov
dec
pop
test
push
mov
adc
cmc
and
mov
sbb
movs
jmp
xchg
jge
and
add
mov
(bad)
aas
jmp
lea
lea
mov
call
and
lods
int3
push
pop
popf
int
jecxz
add
fld
stos
adc
inc
push
stc
jmp
xor
xchg
cwde
mov
add
add
add
add
and
call
mov
mov
cmp
jo
retf
frstor
hlt
sbb
jmp
mov
jmp
repnz
dec
ror
lahf
sbb
mov
pop
cld
(bad)
js
fsubr
in
xor
sub
cmc
sbb
add
fbstp
add
jb
add
loop
and
add
out
and
cmps
add
sar
dec
dec
dec
shl
inc
add
and
call
mov
mov
pop
add
add
punpckhwd
adc
add
movs
add
add
pop
add
and
add
add
add
add
add
xchg
fwait
aas
adc
push
cld
(bad)
mov
nop
(bad)
and
pop
sub
add
add
xchg
retf
and
pop
jg
jmp
add
and
add
std
dec
add
add
add
jg
cld
(bad)
mov
mov
popa
add
push
add
dec
retf
and
add
add
sbb
mov
jmp
xchg
add
lea
pop
pop
and
dec
xor
cmp
cld
(bad)
mov
lahf
cmc
push
jo
inc
add
pop
push
andps
mov
jnp
add
jg
rol
inc
push
(bad)
jge
lods
add
cmc
xchg
and
add
adc
dec
add
or
cli
inc
add
push
and
repz
mov
icebp
ja
cmp
jo
or
fisub
clc
(bad)
cmc
jmp
mov
int3
in
sub
dec
add
sbb
add
xchg
add
sub
lods
sbb
mov
ins
fiadd
cmp
adc
retf
and
add
add
daa
add
add
sbb
lods
sub
xor
fild
movs
aam
and
rol
add
adc
movs
(bad)
inc
test
test
sbb
test
add
mov
jno
sub
fdivr
scas
or
mov
and
add
add
jg
inc
ror
(bad)
add
mov
lods
(bad)
aam
mov
add
add
sub
ror
add
(bad)
jle
add
retf
add
ret
mov
cwde
sti
and
add
add
daa
fsub
add
outs
xchg
sub
pop
jmp
cwde
add
outs
in
sti
and
add
pop
(bad)
jl
sbb
mov
push
add
call
arpl
jmp
add
mov
jmp
mov
mov
cmp
cmovne
scas
add
add
add
mov
push
add
dec
scas
sar
(bad)
pop
js
dec
add
rol
and
add
add
dec
push
jmp
pushf
xor
xchg
jge
mov
ret
cwde
jb
popf
pushf
adc
add
add
shl
(bad)
xlat
sbb
cmp
mov
add
cdq
sub
sbb
rcpps
mov
dec
mov
pop
add
in
std
dec
add
and
add
push
mov
push
pop
mov
fld
xlat
fwait
adc
add
add
rol
add
add
out
push
or
mov
jmp
mov
mov
xlat
mov
add
add
xlat
divps
mov
jmp
adc
add
sar
(bad)
xchg
cmp
add
movs
lahf
ret
lods
cmp
add
jge
pop
add
add
mov
add
add
add
sbb
lods
add
adc
xchg
and
mov
hlt
pop
pop
pop
pop
ret
in
(bad)
dec
pop
inc
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
call
add
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
call
jmp
mov
mov
call
jmp
mov
mov
call
call
sub
call
mov
mov
mov
mov
mov
jmp
call
add
pop
ret
jmp
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
add
call
call
mov
call
call
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
add
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
add
call
je
jmp
call
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
add
mov
jg
jmp
call
sub
call
je
jmp
mov
add
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
jg
jmp
call
add
call
je
jmp
mov
add
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
add
mov
jg
jmp
call
sub
call
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
add
call
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
jg
jmp
call
add
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
cmp
cmovne
mov
jmp
mov
add
call
call
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
call
jmp
mov
jmp
mov
jmp
mov
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
mov
call
mov
add
call
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
add
call
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
call
jmp
call
jmp
mov
mov
movzx
movzx
cmp
cmove
call
jmp
call
jmp
mov
mov
call
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
call
jmp
mov
jmp
mov
jmp
mov
pushf
xor
add
sub
popf
movzx
movzx
cmp
cmovne
call
jmp
mov
jmp
mov
mov
call
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
pushf
add
popf
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
mov
mov
sub
mov
movzx
call
mov
mov
mov
movzx
cmp
cmove
mov
jmp
call
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
call
jmp
mov
mov
mov
mov
add
mov
movzx
call
mov
add
call
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
call
jmp
mov
mov
call
mov
add
mov
movzx
call
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
call
jmp
mov
mov
mov
mov
mov
movzx
cmp
cmove
call
jmp
mov
jmp
mov
jmp
mov
jmp
call
jmp
mov
mov
call
jmp
call
call
jmp
call
add
pop
pop
pop
pop
ret
jmp
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
das
sbb
pop
test
call
sbb
push
pop
and
add
fsub
add
das
les
lahf
in
jmp
or
add
mov
cmp
enter
mov
(bad)
std
jmp
add
add
fwait
add
add
(bad)
jmp
test
add
mov
and
sub
and
outs
add
mov
push
lock
and
or
fwait
mov
sbb
sti
mov
adc
jg
inc
and
add
jns
mov
or
add
jmp
sbb
and
add
add
fadd
setns
add
hlt
add
add
popf
add
scas
mov
jne
add
add
test
sub
push
nop
mov
test
sub
sub
movs
inc
add
jg
jmp
movs
inc
xor
add
add
mov
cmp
dec
add
stc
cs
jl
jmp
mov
and
fild
fsubr
mov
sub
es
or
jg
imul
mov
es
inc
inc
push
add
jmp
add
add
or
fsqrt
inc
or
mov
mov
mov
arpl
push
outs
into
das
add
push
repnz
and
add
hlt
mov
or
in
popf
xchg
mov
push
outs
jmp
lods
test
mov
add
push
add
test
add
dec
jb
mov
add
mov
hlt
add
sub
mov
paddw
add
jmp
mov
ret
ror
inc
add
and
outs
daa
jmp
mov
add
push
mov
jge
popf
cwde
test
fadd
jmp
lods
stos
loopne
add
add
pop
ss
xlat
mov
cmovo
add
jmp
mov
pop
sub
and
inc
and
pop
test
add
into
push
add
das
dec
test
add
jmp
inc
adc
mov
add
jl
popf
add
push
mov
and
jbe
aam
push
jmp
mov
pop
enter
pop
arpl
pmaxub
daa
add
add
and
push
jns
jmp
sbb
adc
popf
xchg
jmp
(bad)
add
hlt
rcr
lahf
inc
pop
stos
gs
cmp
fwait
dec
jmp
mov
ins
clc
jnp
dec
scas
inc
and
cmovnp
push
add
jmp
loope
sub
std
pop
in
lea
mov
xchg
outs
daa
add
add
das
les
add
sub
mov
pop
pop
jg
ss
add
aad
mov
outs
add
pop
sbb
mov
test
jge
popf
mov
xchg
mov
ja
(bad)
and
add
nop
add
add
loope
sub
sub
mov
and
je
xor
in
and
das
add
sub
mov
je
jmp
mov
and
add
push
scas
xor
or
in
add
jmp
sbb
and
add
add
mov
ficom
jns
sbb
hlt
add
test
jge
jl
push
jns
sub
leave
adc
mov
add
jmp
mov
sub
sub
fs
push
outs
into
mov
push
jns
test
mov
or
sub
mov
psubb
add
xchg
jmp
retf
test
add
add
cmps
and
test
add
jmp
mov
std
sar
or
inc
clc
ins
je
jmp
movs
test
mov
push
add
shr
cs
dec
jge
xchg
add
popf
mov
sub
mov
je
sub
repnz
and
add
fnstcw
inc
mov
add
xchg
add
add
jmp
mov
bound
mov
xchg
clc
pushf
add
add
add
inc
out
test
add
push
jmp
mov
jmp
push
adc
add
mov
inc
add
cli
add
add
add
xor
jns
add
and
mov
mov
xchg
mov
xchg
dec
mov
add
jl
stos
xchg
pop
mov
xor
add
jl
cwde
inc
arpl
and
fadd
jmp
lahf
xchg
sub
and
iret
add
sub
or
dec
sti
iret
pusha
shl
mov
and
add
add
inc
add
pop
add
add
push
mov
enter
xor
add
test
push
inc
ror
add
jno
add
add
sti
(bad)
fadd
add
outs
daa
movs
jo
fiadd
jns
jecxz
and
dec
and
call
or
inc
and
call
(bad)
mov
inc
push
add
test
out
les
add
test
test
xchg
retf
add
loope
jle
add
sub
jmp
mov
mov
pushf
xchg
and
add
push
add
fimul
jl
jmp
(bad)
sbb
ja
movaps
mov
add
add
sar
add
and
add
add
add
sub
push
outs
add
test
mov
or
mov
or
test
add
jl
test
or
inc
add
jmp
mov
xlat
pop
adc
les
push
or
add
mov
iret
add
sbb
daa
add
jmp
repnz
iret
push
jge
and
pop
movs
std
push
mov
mov
mov
jne
jmp
call
push
add
fnstenv
mov
add
mov
icebp
imul
fld
add
mov
mov
push
mov
mov
into
mov
add
dec
jge
mov
sub
push
add
adc
ret
mov
and
add
add
test
mov
jb
dec
loopne
add
fwait
(bad)
leave
and
add
jge
je
call
fmul
outs
daa
cmps
add
sub
movs
std
inc
test
push
jns
mov
inc
and
jmp
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
call
mov
mov
call
mov
mov
call
sub
mov
call
mov
mov
mov
mov
add
pop
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
dec
push
dec
data16
add
jno
add
mov
sub
jo
push
and
jmp
sub
bound
xor
ins
and
pop
xor
push
and
les
or
std
cld
(bad)
(bad)
mov
mov
mov
nop
cmp
dec
and
mov
mov
mov
dec
std
adc
mov
ret
data16
call
ret
nop
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
or
sbb
mov
push
push
(bad)
add
add
daa
inc
and
add
jne
sti
(bad)
dec
pop
and
fld
jmp
cmps
fwait
loop
and
cmp
sbb
and
push
(bad)
pop
pop
add
xchg
add
inc
and
in
repnz
pop
nop
pop
jg
pop
mov
mov
xlat
add
push
and
push
in
inc
jne
pop
mov
shl
icebp
and
psrlq
add
add
and
sub
mov
lar
add
jmp
mov
sub
int
inc
jg
jmp
xlat
add
aaa
cmps
mov
test
loope
add
pop
in
lea
cld
rcr
mov
push
sbb
inc
mov
mov
js
dec
jbe
jg
push
inc
xor
add
add
icebp
add
or
ret
or
inc
jg
xchg
sbb
add
and
mov
imul
iret
add
popf
rol
add
rol
push
mov
and
imul
adc
loopne
addr16
inc
outs
or
pop
lods
mov
mov
mov
add
fs
fild
movs
gs
and
jg
out
add
mov
sar
pop
mov
js
je
ss
add
imul
mov
push
sbb
and
test
shl
add
push
mov
and
sub
mov
je
pop
pop
add
add
lea
and
je
jmp
mov
sub
gs
and
or
add
add
push
add
jmp
rol
sti
jg
mov
mov
gs
sahf
pop
inc
rol
inc
xor
in
add
fld
mov
pop
and
add
cmove
jmp
(bad)
repz
repz
add
add
jge
add
imul
and
adc
std
dec
and
mov
mov
push
add
mov
mov
sbb
in
(bad)
or
in
pusha
add
je
inc
jg
jp
xor
and
add
retf
push
push
and
ret
add
jp
cli
mov
cmp
cmovl
jmp
mov
pusha
pop
add
pusha
add
and
or
test
add
das
pusha
push
push
test
mov
mov
xchg
pop
jmp
mov
mov
call
mov
jmp
mov
scas
inc
pop
rcr
jmp
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
call
call
call
call
call
mov
call
call
mov
mov
sub
mov
call
jg
jmp
call
add
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
add
call
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
call
sub
mov
jg
jmp
call
sub
call
je
jmp
call
add
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
call
add
call
je
jmp
mov
sub
mov
je
jmp
call
add
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
pushf
add
popf
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
call
mov
call
sub
mov
mov
cmp
sete
and
mov
call
jmp
mov
mov
mov
test
cmovne
mov
jmp
call
mov
mov
push
mov
xor
cmp
pop
cmovl
call
jmp
mov
mov
jmp
mov
add
call
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
call
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
call
call
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
call
call
mov
call
jmp
call
add
pop
ret
mov
mov
mov
call
sub
call
mov
jmp
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
mov
call
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
ror
loopne
retf
add
retf
jle
call
sub
pop
mov
or
and
push
mov
push
add
cmp
ror
adc
add
repz
pusha
pop
add
dec
int3
and
push
movs
out
movs
(bad)
scas
inc
lods
cmp
mov
add
lea
mov
ret
lds
jge
and
enter
cmp
mov
sahf
xor
add
pop
ret
dec
lods
test
adc
mov
std
add
mov
or
scas
add
mov
and
add
ja
shl
add
add
jecxz
and
add
add
mov
fwait
jbe
gs
mov
(bad)
in
scas
cmc
push
enter
test
sahf
cmc
push
xchg
ret
add
or
mov
add
mov
call
push
and
sub
and
inc
out
lods
pop
mov
mov
and
mov
add
(bad)
mov
dec
rol
movs
mov
and
inc
push
add
gs
and
or
sub
call
inc
mov
pop
mov
pop
add
add
add
ins
or
mov
std
call
and
add
mov
in
inc
and
add
retf
xchg
ja
xor
and
push
and
(bad)
and
movs
(bad)
inc
sbb
and
ror
rcl
mov
dec
and
add
add
xchg
jae
pop
add
(bad)
or
or
add
dec
je
mov
inc
jmp
(bad)
add
retf
inc
mov
add
std
inc
repz
mov
add
(bad)
(bad)
dec
add
mov
sub
mov
in
mov
retf
out
sahf
cmc
push
(bad)
dec
loope
and
cmp
(bad)
and
or
mov
mov
cmps
sbb
rol
loope
sahf
int3
add
add
and
call
xchg
movs
push
push
add
add
add
or
in
inc
and
fild
add
mov
inc
inc
ja
call
xor
add
add
loop
add
lods
cmp
test
sbb
add
mov
mov
mov
cld
test
pop
add
mov
shr
jl
test
cmp
sub
mov
pop
add
ror
pop
add
mov
repz
pop
ret
dec
sub
mov
and
add
sub
jmp
mov
cmp
add
xor
pop
and
add
pop
int3
test
add
mov
pushf
fnstenv
sahf
bound
stc
add
add
inc
pop
ret
pop
ja
add
int3
and
add
cmp
or
call
add
psraw
add
jmp
mov
add
and
add
jg
jmp
mov
sub
sub
sub
push
movs
adc
jmp
inc
test
cli
add
retf
cmp
cmovl
add
add
push
cmp
add
add
mov
unpcklps
add
cmovle
adc
ret
or
sbb
xlat
pop
xor
jmp
cmp
pop
add
jmp
mov
out
scas
add
ror
or
add
cmova
inc
add
out
mov
add
test
add
add
pop
mov
add
aaa
(bad)
and
add
add
add
mov
cmp
cmp
out
ret
stc
cmp
push
test
pop
push
push
das
pop
push
cmp
sub
movs
shl
mov
int
and
add
cld
pop
and
add
ret
ror
and
and
add
and
add
nop
and
rol
out
add
pop
xor
rol
sub
add
add
test
add
rol
dec
mov
jge
add
add
jmp
or
and
add
movs
not
rcr
in
mov
add
dec
aam
add
sub
push
mov
mov
and
pop
add
add
jecxz
movs
push
movs
fild
psubq
sub
mov
add
mov
retf
pop
shl
mov
add
sysexit
ins
mov
pop
jmp
mov
sub
std
test
sub
add
inc
add
shr
retf
lods
mov
je
(bad)
iret
mov
(bad)
add
add
inc
mov
and
and
add
dec
(bad)
je
mov
add
lods
push
ds
add
sub
add
mov
sub
std
test
fadd
add
loop
and
retf
or
lods
rol
sub
jecxz
and
add
add
(bad)
and
add
jmp
out
mov
add
inc
inc
mov
add
test
xchg
pop
add
or
loope
and
add
in
jmp
add
(bad)
and
shl
add
add
daa
test
pop
mov
scas
mov
int3
and
add
push
ds
add
dec
mov
add
mov
pop
outs
test
enter
les
ror
xor
out
lods
pop
pop
add
add
cld
pop
and
add
ret
add
xor
and
fiadd
je
test
dec
or
add
pop
cmp
ret
cdq
jmp
fdiv
dec
add
gs
and
add
je
scas
and
cmp
sar
and
add
ret
ret
push
add
jmp
aam
and
add
add
mov
(bad)
mov
inc
add
gs
jmp
and
add
ret
jge
add
add
mov
je
jmp
in
test
add
retf
lods
push
xor
add
imul
jmp
mov
add
adc
pop
test
xchg
ret
add
mov
add
js
ja
mov
out
add
add
stos
xlat
jg
or
ds
add
add
push
and
rol
sub
pop
test
cmp
add
sub
mov
js
addr16
add
cmp
dec
push
add
add
xchg
out
test
dec
retf
cmp
int
(bad)
pop
add
add
add
sub
mov
aam
mov
sub
rol
and
add
add
test
test
add
add
(bad)
dec
mov
add
pop
add
dec
test
mov
fdivp
mov
jg
jmp
mov
out
xchg
mov
mov
int3
int3
mov
push
push
movs
push
movs
add
add
add
mov
jg
rol
lods
add
test
sub
mov
mov
pushf
rol
add
push
test
add
cld
cmp
sbb
mov
and
add
mov
dec
add
cmp
add
sub
mov
lds
jmp
mov
jnp
add
inc
push
push
scas
push
and
js
add
push
and
add
add
ror
mov
and
scas
pop
add
test
add
add
popf
lock
and
sub
add
mov
and
add
add
add
dec
cmp
aam
mov
cmp
test
mov
add
mov
add
test
and
pop
ret
dec
gs
and
add
test
pop
cmp
cld
mov
lds
mov
enter
js
or
add
mov
push
xor
dec
cmp
ss
shl
add
(bad)
and
add
mov
out
dec
add
mov
call
je
test
or
add
pop
add
inc
adc
add
cld
push
outs
pop
into
and
add
add
push
test
sub
mov
bsf
aad
add
lods
pop
sub
(bad)
test
ret
inc
in
cmp
push
pop
cmp
add
pop
dec
pop
mov
jp
add
sahf
inc
add
pop
mov
jo
add
sub
sub
cmp
(bad)
cmc
retf
sub
lods
add
xor
add
mov
mov
sbb
sub
mov
(bad)
add
add
and
add
(bad)
and
dec
add
push
mov
cmp
add
pop
imul
cmc
cmp
add
je
mov
add
adc
and
add
dec
sub
xor
shld
ror
cmp
pop
mov
shr
and
imul
syscall
push
mov
movs
xor
sub
loop
cmp
rol
sub
mov
and
add
add
xchg
ja
xor
ds
fld
je
lds
and
add
imul
add
shl
cmc
rol
daa
test
jne
add
div
add
add
and
add
cmp
add
mov
phaddd
add
sub
(bad)
frstor
(bad)
adc
push
adc
cmp
sbb
cmp
jg
inc
add
add
add
pop
stos
cmp
and
add
add
out
aad
add
jmp
mov
add
enter
mov
mov
add
add
jmp
aam
out
push
fiadd
in
test
cmp
je
add
ret
rol
mov
push
jne
shl
sub
add
add
(bad)
sub
ret
dec
add
add
add
popf
push
lock
add
sub
jmp
ror
add
pop
mov
push
xchg
cmp
int3
and
add
or
fucomi
add
mov
add
mov
add
pop
sub
push
or
cmp
out
jp
les
add
jg
jmp
dec
test
pop
add
add
inc
inc
in
mov
add
add
test
pop
cmp
sub
mov
ficomp
dec
add
add
mov
add
std
scas
and
cmp
add
popf
add
retf
cmp
add
add
mov
ret
dec
add
fidivr
movs
add
push
test
jbe
gs
mov
lods
add
je
jmp
mov
inc
(bad)
push
(bad)
call
test
and
jmp
mov
add
adc
ret
bswap
fsubr
adc
lock
cmp
add
xchg
pop
dec
pop
and
jno
pop
jmp
mov
and
test
test
(bad)
add
xor
or
or
add
mov
test
dec
add
test
mov
je
out
test
add
cld
ret
mov
add
add
jmp
dec
test
push
cmp
clc
call
add
sub
cmp
jmp
mov
sbb
movs
add
je
shl
sub
inc
mov
pop
pushf
push
adc
jnp
dec
push
je
xor
test
sub
shl
and
popf
mov
add
pop
mov
jmp
add
je
sub
mov
fimul
or
ret
lods
add
mov
xchg
dec
sbb
add
(bad)
adc
data16
jp
ror
mov
xor
dec
test
add
mov
(bad)
fild
add
cmp
jmp
int
xchg
mov
je
sahf
cmp
add
aam
and
add
ret
sub
jecxz
and
add
add
ds
add
add
mov
add
sub
inc
test
(bad)
jmp
fidiv
scas
push
(bad)
aas
cmp
xchg
jge
mov
ret
add
pextrw
test
cmps
add
jmp
mov
cmp
xor
add
daa
test
dec
mov
or
add
add
jle
mov
pop
rol
popa
fs
retf
xor
(bad)
out
test
inc
enter
adc
add
mov
add
add
xor
mov
add
jmp
rcl
fdivr
cmp
jmp
sub
add
cmp
and
mov
cmp
cmps
or
rol
mov
or
ret
lock
addr16
aam
add
popf
push
or
(bad)
loop
pop
add
add
jecxz
cmps
shr
pop
add
mov
or
add
xchg
jnp
or
add
and
or
add
add
add
(bad)
jl
sub
mov
and
add
add
lods
pop
pop
mov
(bad)
dec
add
sbb
sub
jge
dec
push
lea
sub
cmp
inc
add
add
pop
sahf
pop
or
inc
out
pop
add
mov
pop
and
add
add
cmp
icebp
test
dec
cmp
mov
pop
pop
add
sub
sbb
add
dec
out
and
or
cld
push
add
add
mov
and
and
add
rol
mov
mov
and
mov
call
push
shl
dec
adc
xor
movzx
sub
add
inc
mov
data16
add
mov
rcl
mov
and
add
add
xchg
add
or
stos
add
mov
call
add
mov
js
or
mov
dec
sar
(bad)
mul
mov
and
add
sti
dec
add
xor
dec
inc
or
add
add
dec
or
add
add
cmp
callw
add
call
add
mov
js
aam
sar
cmps
dec
ror
cmp
and
and
rol
retf
lds
add
je
mov
add
adc
mov
adc
add
add
gs
leave
or
add
and
add
dec
cmps
pop
dec
push
and
mov
mov
and
dec
inc
sub
(bad)
mov
nop
gs
add
add
imul
retf
lds
jne
sub
and
dec
pop
add
lds
call
stos
ins
or
cmp
mov
add
add
add
mov
jno
and
ja
or
out
dec
push
xor
push
mov
add
add
cmp
and
add
add
dec
adc
mov
add
jnp
dec
je
or
dec
and
imul
pop
xchg
inc
push
in
push
xchg
dec
mov
jo
ret
lea
pop
lea
lea
mov
add
pop
and
mov
push
imul
and
add
sub
push
inc
and
retf
cmp
add
add
add
or
out
add
push
rol
push
add
adc
dec
sub
add
dec
retf
and
sub
cmp
xchg
mov
mov
push
lds
pushf
mov
adc
mov
jmp
mov
mov
inc
push
mov
ja
push
jnp
movs
dec
int3
dec
icebp
mov
add
inc
jo
add
xor
add
mov
mov
sar
add
ja
aam
add
lea
mov
arpl
add
jl
or
and
fisttp
inc
jge
jbe
add
add
mov
mov
js
push
sbb
call
fcomip
push
mov
mov
ja
push
pop
add
movs
xor
xor
and
cmp
jmpw
add
imul
test
jmp
mov
mov
or
mov
cmp
iret
push
mov
fnstenv
or
ror
cmp
sub
ins
jmp
mov
add
and
add
mov
mov
adc
call
cmp
mov
add
add
cmovne
aad
rol
add
call
inc
ins
jo
push
mov
fadd
movs
mov
mov
pushf
in
retf
inc
dec
lea
mov
and
call
ja
cwde
inc
and
inc
add
add
lds
ins
pushf
mul
(bad)
call
lea
xor
outs
push
add
cmp
add
mov
add
sbb
and
mov
mov
and
mov
in
je
pusha
call
(bad)
jmp
aaa
out
sbb
sbb
add
inc
pop
ret
lds
lea
and
je
in
or
add
out
adc
push
mov
add
add
ret
and
rol
mov
sub
movs
sti
push
inc
add
add
add
add
je
mov
add
mov
faddp
cmp
mov
lea
and
pop
add
cmp
mov
and
mov
add
dec
(bad)
cli
add
movs
sbb
push
cmp
cmp
xchg
and
add
add
mov
push
mov
mov
and
imul
(bad)
mov
jns
cmps
stos
jb
add
add
jnp
scas
mov
and
add
ret
add
push
dec
and
shr
mov
pop
movs
fild
add
test
sub
or
sub
add
add
mov
mov
mov
add
rol
push
cwde
add
add
inc
fst
jbe
add
xchg
and
add
data16
add
mov
push
add
pop
mov
xchg
push
je
add
imul
add
mov
shl
dec
inc
add
add
pop
mov
push
add
mov
pop
xchg
and
mov
rol
push
(bad)
(bad)
push
out
jecxz
sahf
inc
dec
inc
pushf
sti
(bad)
mov
mov
nop
add
add
sub
pop
mov
add
and
inc
and
pop
add
or
inc
cmps
push
inc
xchg
(bad)
cs
cmp
add
mov
pop
dec
and
inc
outs
and
call
adc
mov
pushf
inc
mov
daa
cmp
(bad)
mov
ret
add
(bad)
mov
ret
es
jmp
inc
test
add
mov
sub
inc
cmp
sub
sub
jb
sbb
mov
fdivr
add
ret
add
inc
mov
(bad)
add
add
mov
bswap
fnstcw
add
inc
mov
add
cmps
popa
sub
mov
mov
push
mov
mov
cmp
jg
jo
add
jmp
shl
add
jecxz
call
mov
call
sub
test
add
je
inc
or
out
outs
and
cmp
add
jp
movs
addr16
push
push
add
movs
adc
add
pop
add
inc
mov
test
popf
dec
add
add
test
jne
rol
mov
mov
cmp
mov
dec
or
sub
add
add
dec
stc
dec
mov
sbb
add
add
movd
mov
dec
add
ret
add
adc
(bad)
loope
dec
mov
xchg
push
sub
mov
in
jl
dec
jmp
inc
mov
lods
loopne
add
add
xchg
mov
and
push
add
mov
movs
call
mov
mov
cmp
mov
mov
shr
add
loope
inc
xchg
retf
and
sbb
add
ror
add
add
sbb
push
add
sub
mov
mov
sbb
sub
retf
lods
pop
mov
gs
add
add
int3
dec
icebp
mov
iret
mov
pop
sub
add
test
add
dec
sub
jmp
cld
test
add
add
or
jmp
mov
cmps
jo
add
gs
sbb
movs
add
and
add
add
sbb
data16
add
cmp
add
add
imul
not
mov
jmp
add
jmp
add
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
and
jno
add
xor
and
shl
fdiv
fisttp
dec
cdq
hlt
push
adc
call
sbb
sub
add
inc
mov
mov
mov
mov
adc
sbb
mov
movs
adc
shl
adc
jg
jmp
mov
add
out
sub
cmp
and
add
inc
and
add
push
xchg
and
jg
mov
dec
pop
mov
sub
lods
inc
and
jnp
add
add
ss
add
add
and
sub
mov
test
add
pop
fisub
add
xchg
inc
adc
in
scas
mov
jnp
mov
add
jmp
mov
sub
fwait
mov
push
mov
jmp
scas
inc
std
pop
pop
sbb
sbb
cmp
(bad)
loope
das
add
add
add
inc
and
xor
mov
jg
fild
add
inc
add
push
inc
cmc
stos
xlat
mov
mov
mov
outs
or
add
and
jg
cmp
call
sub
rcr
sub
test
add
mov
cmc
ror
and
jne
jmp
jb
jg
or
dec
jns
mov
push
or
fnstenv
add
popf
mov
sub
cmp
inc
and
push
test
and
add
and
inc
and
sub
mov
add
add
movs
rol
call
sub
sbb
test
add
jmp
mov
sub
std
mov
adc
pop
add
popf
jmp
push
xchg
mov
shl
inc
adc
je
xor
dec
add
rol
cmp
mov
pushf
add
add
sbb
add
xchg
mov
adc
minps
add
sbb
dec
add
add
mov
sub
jbe
push
or
add
cmovne
pop
adc
lea
lock
mov
mov
mov
cmp
out
jo
jg
fdivrp
test
add
inc
and
(bad)
popf
push
xchg
xchg
mov
add
add
inc
cmc
jo
call
aam
cld
out
jmp
ins
in
std
jmp
mov
mov
jno
xchg
mov
rcl
fs
add
add
inc
and
jae
into
xlat
popf
jnp
dec
popf
mov
mov
cmp
sub
rcl
fld
je
inc
and
jae
push
or
retf
stc
pop
ret
sub
and
mov
mov
and
jno
jmp
and
ror
and
pop
and
sbb
popf
and
aaa
inc
and
xchg
icebp
adc
or
fild
mov
pop
gs
les
iret
cld
(bad)
jmp
pop
inc
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
scas
mov
or
inc
push
fstp
dec
and
outs
inc
and
mov
(bad)
adc
push
mov
mov
and
xchg
cwde
mov
adc
lea
repz
or
add
and
call
and
andps
add
add
sti
lods
add
dec
clc
and
in
hlt
add
jg
jle
out
in
add
push
sub
pop
rdpmc
inc
retf
add
dec
retf
add
lods
mov
push
mov
mov
and
xchg
(bad)
imul
or
mov
je
test
inc
mov
jns
rol
jmp
adc
push
rcr
add
inc
rol
ins
add
xchg
jmp
mov
fild
mov
int
mov
cdq
jne
add
out
fwait
icebp
mov
je
mov
mov
and
std
or
in
inc
jg
jo
add
test
sub
mov
cdq
test
push
add
and
inc
and
sub
mov
(bad)
sub
inc
add
and
movs
mov
xchg
std
je
cmp
ret
clc
in
retf
pop
xor
(bad)
sbb
add
add
add
sub
mov
mov
add
rol
leave
sub
lahf
xor
(bad)
aam
add
add
inc
push
shr
mov
sub
pop
mov
mov
out
inc
inc
xchg
inc
(bad)
sbb
test
stos
shl
push
fwait
xchg
and
fild
inc
cld
ret
test
mov
sbb
push
addr16
add
push
xchg
add
add
mov
mov
sub
mov
repnz
test
add
(bad)
in
and
outs
and
pop
adc
adc
xor
leave
add
jmp
mov
sub
xor
test
add
dec
jo
add
jne
aam
add
push
dec
(bad)
clc
sub
xor
mov
cmp
jge
ins
inc
fiadd
ret
out
jmp
call
adc
add
aad
cmps
mov
bound
push
mov
out
jmp
sbb
push
xor
add
and
push
mov
mov
neg
pop
psllq
sub
ret
js
dec
add
and
(bad)
or
jmp
pop
(bad)
jg
das
mov
popf
xchg
pop
std
ret
inc
shr
and
jmp
arpl
ins
dec
daa
out
(bad)
adc
ins
sub
mov
and
push
repz
jmp
mov
pop
push
add
mov
sbb
jecxz
mov
add
push
cmp
sub
mov
jle
add
in
and
ins
pop
mov
ins
jmp
shld
mov
pop
dec
mov
mov
add
mov
movs
add
jne
sub
add
mov
(bad)
shl
je
ins
pop
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jb
add
add
and
mov
mov
and
imul
xchg
push
pop
mov
xor
dec
jmp
mov
and
jo
and
js
add
jmp
mov
sub
leave
inc
test
loop
imul
push
sub
pop
(bad)
(bad)
fild
cli
add
jg
add
sub
and
cmp
mov
xor
mov
sbb
fld
int3
mov
and
mov
mov
jmp
jno
pop
test
cmps
in
mov
or
or
add
and
mov
(bad)
popa
sbb
fidivr
add
push
add
enter
push
sub
test
(bad)
add
cmp
clc
mov
cmp
xchg
inc
inc
inc
pop
sub
(bad)
jle
add
jmp
mov
pop
push
sub
mov
dec
add
add
and
adc
mov
(bad)
and
test
add
jge
sub
out
sbb
mov
and
sbb
xchg
stc
add
sub
mov
push
test
popa
jecxz
inc
pop
inc
call
push
and
int
sbb
xchg
dec
add
push
inc
test
push
sub
mov
je
jmp
mov
push
pusha
test
mov
leave
xchg
call
add
loop
fiadd
add
mov
pop
inc
sub
mov
je
jmp
jmp
fstp
add
test
and
mov
fs
clc
aaa
dec
cdq
repnz
ret
inc
and
inc
out
outs
cwde
pop
add
inc
test
idiv
mov
push
(bad)
stos
mov
mov
inc
fcmovb
(bad)
sbb
mov
xchg
sub
dec
jnp
mov
sub
cmc
cmp
mov
and
shl
gs
add
mov
pusha
pop
inc
and
mov
xchg
add
and
(bad)
call
xchg
and
(bad)
cli
add
enter
ror
add
add
add
add
inc
sbb
mov
push
rol
int3
mov
xchg
in
add
mov
(bad)
cmp
add
call
lea
inc
push
in
mov
mov
add
push
push
rol
and
mov
mov
add
mov
lea
adc
jmp
nop
mov
ret
data16
mov
ret
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
cmps
and
mov
mov
and
rol
xchg
test
and
inc
shr
loop
(bad)
mov
ds
add
or
add
add
or
pop
mov
pop
sub
in
dec
add
add
or
mov
and
test
add
mov
fiadd
jecxz
mov
sbb
cmp
mov
jge
or
out
mov
mov
retf
add
lea
add
mov
add
fsubrp
mov
add
(bad)
div
out
add
daa
mov
cmp
mov
and
mov
retf
and
jmp
or
loopne
ins
add
pushf
test
das
imul
xchg
inc
dec
cmp
dec
mov
sub
and
xor
in
add
out
and
mov
jmp
add
push
lods
cmp
jo
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
pop
or
lahf
ins
popa
lock
ds
loopne
pop
and
jp
push
push
lahf
out
sub
mov
fcom
jg
dec
loop
add
nop
(bad)
and
sub
jns
and
cmp
ds
js
mov
cmps
stc
jae
and
subps
add
add
ss
sub
lea
mov
dec
add
stc
sub
pop
add
(bad)
adc
in
adc
sub
xor
add
add
add
pushf
xchg
cld
add
push
push
add
push
add
or
daa
aad
add
inc
ror
add
(bad)
mov
push
(bad)
std
es
repz
repnz
ss
add
add
mov
data16
and
pop
sub
test
add
mov
sbb
pop
hlt
dec
pop
pop
push
ret
jmp
data16
push
mov
push
push
push
and
add
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
pushf
add
mov
add
test
add
popa
and
mov
push
dec
xlat
out
(bad)
inc
(bad)
(bad)
call
clc
sub
test
add
add
mov
and
add
mov
add
add
dec
xlat
mov
mov
retf
rol
mov
mov
and
xlat
xor
and
sub
(bad)
aad
jle
popa
xor
paddsw
daa
pop
rol
inc
add
ins
add
inc
mov
aaa
add
retf
sysret
mov
ins
adc
add
in
(bad)
fcom
je
into
lods
pop
sub
int3
fiadd
loopne
push
ins
jg
adc
aaa
and
pop
push
add
pusha
pop
inc
int3
sbb
test
loope
inc
jmp
shr
cmp
mov
and
pop
add
add
add
add
adc
push
test
inc
add
data16
sub
inc
sub
and
repnz
jmp
mov
ins
push
call
shl
scas
ins
inc
and
bt
add
pop
jmp
mov
and
add
add
fnsave
push
cmovb
jge
mov
aaa
test
lods
add
add
mov
ins
push
je
add
jne
add
inc
add
mov
push
fwait
add
jno
add
add
fdivr
mov
xor
mov
out
add
add
je
sub
mov
and
punpckhdq
add
add
add
mov
fwait
add
dec
rol
cmp
inc
je
adc
and
add
mov
aad
xlat
add
inc
dec
enter
and
jg
rol
add
add
add
paddusw
sub
test
add
add
push
dec
mov
jg
test
add
pop
mov
add
and
(bad)
push
jge
fcom
std
aaa
add
sysret
sub
fadd
je
jmp
inc
add
mov
test
add
add
pop
cwde
sbb
ror
mov
sub
rcl
mov
add
mov
sub
rol
je
mov
mov
and
add
int3
cld
sbb
imul
cmp
ins
sysret
add
add
cli
cmp
inc
and
out
dec
add
bound
daa
pop
add
add
sub
mov
cmp
xlat
test
add
std
mov
add
and
inc
and
(bad)
outs
adc
bound
daa
add
test
mov
les
mov
mov
subps
pop
jmp
out
add
inc
pop
push
pushf
cmp
popf
mov
mov
mov
jnp
mov
mov
add
jmp
push
cmp
std
aaa
add
add
(bad)
int
mov
je
xor
add
lahf
lods
data16
dec
(bad)
lods
int
int3
jge
cmp
std
add
pop
cmp
stc
add
call
lahf
mov
retf
mov
(bad)
and
add
add
dec
jle
int3
and
lods
int
jmp
mov
inc
(bad)
inc
jne
mov
test
and
mov
pushf
ins
xchg
gs
add
add
xchg
and
add
mov
(bad)
lods
inc
mov
cmovl
and
add
std
jmp
mov
add
pop
sub
popf
and
bound
add
test
daa
pop
sub
bound
add
and
jne
outs
call
aaa
or
sbb
(bad)
cmc
jmp
add
inc
lods
sbb
add
cli
or
int3
jmp
mov
mov
add
out
mov
add
push
and
add
je
mov
call
mov
and
add
pop
mov
lods
int
mov
stc
and
fadd
mov
retf
pop
push
ret
jl
je
add
mov
add
add
(bad)
fwait
sar
add
add
add
dec
pop
mov
add
xchg
pop
jmp
mov
mov
mov
mov
mov
jmp
mov
add
mov
cmp
jl
dec
jecxz
sub
add
push
xlat
pop
(bad)
push
pop
les
dec
add
mov
mov
mov
sar
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
call
mov
mov
mov
sub
call
mov
jg
jmp
call
add
call
je
jmp
mov
sub
call
jg
jmp
call
add
mov
je
jmp
call
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
call
add
mov
je
jmp
mov
add
call
je
jmp
jmp
mov
call
jmp
mov
mov
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
call
mov
sub
sub
mov
movzx
mov
mov
mov
add
add
call
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
call
call
mov
mov
mov
mov
call
mov
pushf
add
popf
mov
mov
mov
mov
jmp
call
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
call
call
mov
mov
call
call
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
add
add
mov
sub
mov
movzx
mov
call
mov
add
add
call
add
call
call
sub
mov
mov
mov
mov
mov
call
add
call
call
mov
mov
mov
mov
call
call
jmp
mov
jmp
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
test
(bad)
add
add
cs
and
mov
ins
xor
sub
dec
dec
add
and
call
mov
xchg
scas
rcr
and
scas
push
std
push
mul
add
test
add
rol
sub
fcomp
mov
push
mov
add
mov
mov
sbb
ins
xchg
inc
and
add
xlat
ficom
add
arpl
push
lds
mov
cmp
(bad)
arpl
out
add
pushf
add
push
mov
movs
jle
xchg
xlat
fidiv
add
add
cld
add
in
jmp
mov
fsubr
adc
rcr
inc
jmp
mov
sub
mov
fsub
push
arpl
add
push
and
cmp
inc
and
adc
cs
push
or
fcomp
sub
mov
and
push
add
add
add
add
mov
mov
and
rdpmc
fiadd
add
inc
mov
mov
jg
jne
add
add
cmps
jbe
call
into
xchg
dec
add
mov
dec
sub
repz
pop
(bad)
sahf
add
add
mov
mov
and
inc
and
je
jmp
ja
retf
ficom
repz
adc
add
mov
add
test
inc
jmp
jne
and
je
jmp
pop
inc
cmp
movs
cld
mov
aam
inc
jne
mov
add
add
arpl
add
mov
and
sub
pop
inc
mov
inc
test
add
cld
pop
cmp
rol
xchg
inc
data16
push
xor
mov
add
add
mov
add
sub
mov
jne
add
push
leave
inc
and
call
and
jg
ins
add
and
clc
xor
sub
push
rol
add
lds
add
leave
inc
lods
js
adc
and
(bad)
push
add
jmp
mov
cmp
inc
jmp
add
loopne
add
gs
mov
loopne
mov
lods
test
bound
add
inc
and
lahf
xchg
push
lahf
mov
setp
mov
mov
add
add
mov
sub
and
test
add
dec
adc
gs
mov
sub
int
adc
test
mov
mov
mov
test
inc
inc
pop
or
test
xor
add
mov
cmc
add
dec
aad
repz
pop
sysret
push
cld
add
mov
add
or
fdiv
add
(bad)
xor
add
xchg
in
mov
mov
fcomp
add
mov
cld
test
mov
add
ja
jg
add
add
adc
add
add
fcom
mov
mov
add
fcom
sbb
mov
add
popf
lock
and
pushf
rcr
add
dec
ds
and
add
arpl
fidivr
ret
cmps
jae
mov
xchg
ins
pop
or
adc
add
in
pushf
cld
adc
add
or
ror
add
sahf
jp
daa
mov
jne
and
add
pushf
mov
mov
mov
in
add
test
or
add
xchg
test
add
pop
mov
jbe
jmp
(bad)
mov
dec
dec
add
add
stos
test
(bad)
mov
cdq
idiv
xor
xchg
and
cld
arpl
add
xchg
pop
test
add
pushf
call
mov
mov
mov
add
daa
and
add
add
out
mov
xor
sbb
add
jmp
(bad)
pop
and
push
and
xchg
push
add
ja
mov
mov
and
add
fcomp
shr
fadd
add
add
test
add
add
push
jnp
daa
rol
add
mov
pop
and
add
test
add
into
add
add
mov
retf
or
add
pop
jne
mov
cmp
jmp
mov
mul
pop
js
pop
ret
jmp
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
add
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
add
pop
add
lea
nop
or
add
nop
mov
mov
and
fisubr
add
iret
jp
pop
inc
mov
add
dec
jecxz
call
mov
dec
push
and
mov
pop
inc
and
add
add
inc
pop
pop
mov
call
push
(bad)
dec
mov
and
add
pop
mov
js
sahf
adc
lds
push
test
jno
mov
mov
mov
mov
jo
nop
jl
retf
and
jb
add
jp
mov
sbb
inc
icebp
dec
out
(bad)
xchg
imul
jno
dec
pop
imul
fidiv
cwde
in
inc
pop
inc
push
(bad)
add
add
adc
int
mov
fimul
sbb
add
shr
push
add
movs
dec
inc
cli
and
and
inc
imul
sbb
sbb
add
fcmovnb
cmps
test
test
add
xchg
sahf
add
mov
or
lods
sub
dec
push
pop
add
cmps
ja
js
mov
and
inc
and
stc
test
or
iret
jmp
adc
leave
int
(bad)
sub
aam
add
add
mov
push
retf
or
lods
mov
je
pop
test
add
sub
pop
movs
and
minps
movs
(bad)
aaa
add
(bad)
push
enter
enter
cmp
add
add
mov
push
sub
pop
inc
and
nop
test
loope
cmp
add
push
sub
mov
mov
js
xchg
add
add
xchg
jl
push
mov
push
mov
mov
and
stc
test
ror
jmp
pop
inc
and
sub
loope
jecxz
rol
sbb
ja
mov
sub
mov
and
nop
or
in
add
mov
adc
cwde
mov
add
add
and
dec
add
repnz
adc
jmp
rol
dec
std
(bad)
cmp
adc
add
clc
sar
sahf
or
fisub
or
dec
add
add
xchg
rol
pop
call
sar
inc
mov
sbb
ror
inc
std
jmp
shl
lods
mov
mov
and
jbe
add
add
xchg
dec
push
xor
mov
les
inc
and
jno
gs
mov
test
rol
iret
mov
jmp
mov
lea
pop
ret
ss
std
(bad)
clc
inc
jg
dec
add
fcomp
mov
add
call
add
dec
pop
inc
add
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
test
dec
fsub
test
inc
mov
pop
add
add
xchg
and
mov
jno
xchg
add
mov
and
add
stc
test
add
jmp
test
add
movs
lock
add
cmp
test
add
add
inc
add
dec
adc
mov
dec
test
test
add
add
(bad)
dec
and
xchg
jb
mov
test
data16
rol
add
push
ins
stc
fcmovb
add
xchg
or
je
cmp
stos
sub
mov
mov
mov
popa
repnz
add
jmp
dec
test
test
sub
xchg
or
sbb
mov
pop
add
jmp
push
loop
and
add
rcr
xchg
add
ror
jmp
rol
out
push
xchg
xchg
add
je
jmp
mov
xchg
sbb
mov
or
jne
pinsrw
nop
jmp
bound
add
movs
lock
retf
movlps
pop
mov
push
add
add
xchg
retf
test
call
and
add
test
sub
mov
sub
mov
je
jmp
in
icebp
outs
mov
cmp
push
or
mov
rsqrtps
add
(bad)
sub
pop
test
mov
xchg
pop
mov
add
lods
add
add
test
inc
push
add
test
(bad)
add
sub
out
and
jmp
and
add
mov
add
sub
test
add
cmp
mov
mov
adc
add
mov
fld
add
sahf
out
and
adc
add
or
add
jmp
sbb
add
enter
call
test
fld
add
push
stc
add
stc
and
call
mov
add
je
add
(bad)
and
add
jmp
stc
es
push
xchg
mov
xlat
add
add
leave
push
add
mov
js
sub
pop
mov
js
mov
jge
mov
add
inc
and
sub
jo
and
add
jb
mov
add
sub
pop
add
add
out
inc
push
dec
mov
and
add
add
sub
jmp
mov
outs
and
add
iret
out
and
jmp
xor
add
inc
mov
add
mov
imul
jmp
sbb
sbb
test
sub
test
add
into
add
mov
sub
mov
les
add
xor
xchg
add
dec
add
add
test
add
sbb
add
add
test
pop
add
mov
add
and
cmp
adc
shl
call
add
nop
add
and
outs
jge
sub
mov
mov
repnz
jb
or
mov
pop
sbb
mov
add
jg
jmp
push
test
and
add
out
adc
(bad)
retf
cmp
add
imul
add
sub
stc
mov
and
add
add
(bad)
mov
add
jmp
push
jp
loop
pop
add
mov
push
test
add
xchg
push
out
bound
rol
(bad)
add
fild
test
add
add
(bad)
and
add
jmp
mov
or
jne
cmp
mov
je
jl
add
add
dec
sub
test
add
outs
jb
and
add
xor
add
pop
mov
and
sub
and
mov
(bad)
ror
mov
add
add
dec
add
mov
jb
and
add
sub
pop
test
cmps
lock
retf
add
or
mov
movups
add
jne
les
dec
add
test
xchg
stc
add
mov
dec
fsub
sub
add
call
add
add
stc
movs
jne
add
sub
xor
je
imul
and
add
les
test
add
je
and
xchg
add
es
add
outs
pop
jno
loop
or
je
jmp
push
test
add
add
xor
jbe
mov
and
xor
add
mov
add
mov
and
jp
ret
dec
add
outs
mov
out
mov
jle
je
(bad)
push
add
mov
xchg
add
sub
mov
movs
cmps
lahf
test
add
xchg
test
faddp
add
jne
addr16
cli
jg
imul
shl
pop
cld
push
push
ins
or
call
cmps
add
jmp
ret
add
jne
push
inc
cmp
(bad)
sbb
xchg
jb
add
add
add
pop
in
out
movs
mov
jb
jno
jmp
add
mov
add
mov
jg
imul
test
pop
or
cmp
and
popa
stc
jg
add
sub
add
mov
out
dec
and
mov
xchg
and
add
xchg
mov
and
leavew
mov
cmp
test
nop
stc
xchg
add
pop
and
ret
add
in
xchg
mov
jg
fwait
mov
add
add
cld
inc
and
inc
add
add
xlat
jns
add
outs
imul
and
fld
sub
dec
sbb
ror
or
retf
cmp
xchg
add
add
test
add
repz
out
inc
push
or
add
inc
add
nop
mov
dec
jl
add
in
mov
inc
and
(bad)
movs
sub
retf
rol
xchg
add
test
scas
xor
aaa
ret
out
unpcklps
pusha
add
add
test
and
(bad)
out
inc
in
cdq
push
or
inc
sbb
add
add
add
sub
push
push
add
jmp
sbb
sub
dec
inc
jl
bt
je
retf
jmp
sub
and
rcr
sub
push
push
xchg
add
jmp
mov
and
add
shl
sub
or
sbb
add
jb
mov
add
mov
stos
pop
sbb
inc
and
fcom
add
add
sar
add
and
add
(bad)
out
test
and
(bad)
push
retf
add
jmp
mov
sub
mov
mov
repz
adc
sbb
pop
call
jo
mov
jg
jmp
mov
and
add
cmps
out
inc
inc
adc
xchg
add
add
ins
and
add
ret
cmc
xor
xor
movsx
add
jb
adc
mov
pop
es
test
fst
ret
pop
mov
or
xchg
xor
(bad)
test
jmp
jns
cld
add
mov
mov
mov
and
test
jae
sub
add
adc
mov
addr16
jmp
mov
sbb
push
jl
fisttp
test
mov
retf
jge
clc
add
rol
pop
add
add
mov
and
add
jmp
mov
les
xchg
xchg
stc
nop
ret
pop
add
add
inc
shl
mov
mov
je
dec
out
sbb
ret
add
add
arpl
(bad)
les
mov
sub
mov
mov
out
xchg
add
and
xchg
and
add
ds
add
lea
shl
add
pop
xchg
jb
mov
ds
movs
sar
push
repnz
sbb
add
adc
or
add
imul
mov
add
add
into
add
add
jp
out
test
outs
loope
push
popf
add
add
mov
sti
movs
jno
mov
data16
ins
or
movs
mov
test
add
jge
push
inc
pop
add
js
clc
out
dec
add
add
mul
mov
add
add
test
mov
std
pop
jmp
outs
das
push
cmps
mov
pop
and
ret
pop
add
add
sub
ins
stos
xor
mov
and
xchg
mov
and
add
add
add
mov
or
mov
mov
cmp
inc
mov
dec
add
add
dec
jl
mov
sub
and
xchg
jb
mov
movs
sbb
icebp
sbb
mov
je
add
test
(bad)
add
nop
add
outs
hlt
ins
stc
fiadd
ret
xor
add
mov
mov
and
mov
test
add
cld
iret
and
adc
add
test
add
sbb
pop
xchg
jae
add
out
lahf
or
and
mov
movs
xor
add
cmovb
jge
and
add
xor
add
add
add
jl
add
add
jno
or
data16
add
xor
add
nop
mov
loop
mov
sbb
sub
popf
inc
test
xchg
jb
mov
movs
jns
mov
sub
add
inc
retf
and
adc
add
mov
pusha
pop
fisub
ret
loope
add
pop
push
add
push
xchg
add
jmp
sbb
mov
mov
pop
and
push
add
out
adc
mov
inc
add
xchg
mov
and
retf
mov
xor
ds
add
mov
or
add
sub
mov
mov
outs
xchg
add
cwde
mov
rol
(bad)
add
mov
sti
test
jmp
fisubr
adc
test
mov
outs
jge
sbb
add
add
add
inc
cmc
push
mov
jb
es
add
push
cs
pop
jmp
mov
imul
jge
push
jp
jo
add
dec
and
add
xchg
shl
jmp
(bad)
aas
mov
add
and
sub
jmp
mov
add
inc
ret
test
and
je
jns
or
fadd
add
mov
(bad)
fisub
pop
cmp
movs
cmp
add
add
add
test
mov
xchg
test
add
inc
inc
and
add
mov
mov
add
mov
inc
dec
add
dec
mov
cmp
nop
add
jge
add
add
test
lock
adc
adc
and
add
xchg
fincstp
leave
retf
add
mov
cmp
nop
stc
mov
jne
and
add
movzx
inc
retf
xchg
add
mov
movs
xor
xchg
(bad)
aas
and
add
cwde
repz
fwait
add
pop
test
ins
and
add
add
pop
fisub
add
ins
pop
xchg
popf
mov
cmp
mov
push
cmp
add
sub
xlat
mov
js
icebp
and
add
adc
cld
push
sub
jmp
mov
jmp
mov
stc
movs
sub
add
das
and
xchg
add
imul
and
xchg
stc
add
arpl
pop
test
test
add
retf
bound
or
jb
test
rcr
cmp
mov
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
shl
sub
add
sub
sub
add
add
add
sub
add
call
mov
mov
mov
shl
mov
sub
sub
mov
sub
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
jne
call
jmp
cmp
jne
lea
mov
mov
mov
mov
mov
cmp
jne
jmp
mov
cmp
mov
jbe
cmp
setl
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
sub
mov
mov
sub
mov
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
mov
xor
mov
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
and
mov
mov
mov
and
xor
or
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
or
xor
or
and
or
mov
xor
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
add
add
add
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
mov
and
mov
and
xor
or
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
and
and
or
or
xor
or
xor
or
and
or
xor
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
call
mov
sub
add
add
sub
sub
sub
sub
add
call
call
add
add
sub
add
sub
add
add
add
sub
mov
jmp
cmp
jge
mov
mov
call
mov
call
cmp
cmovne
mov
jmp
mov
mov
mov
call
call
mov
sub
sub
add
sub
add
add
mov
sub
sub
mov
mov
shl
mov
add
sub
sub
mov
sub
mov
sub
add
mov
sub
sub
sub
mov
mov
mov
mov
mov
call
mov
add
sub
sub
sub
mov
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
and
mov
xor
or
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
xor
mov
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
call
cmp
setb
mov
mov
mov
sub
sub
add
add
add
add
add
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
call
sub
add
sub
add
sub
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
sub
sub
add
add
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
add
sub
add
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
jne
jmp
mov
mov
call
shl
mov
mov
sub
mov
movzx
mov
xor
mov
xor
and
mov
xor
mov
mov
and
push
mov
xor
xor
pop
and
or
mov
and
xor
or
mov
mov
mov
sub
sub
sub
mov
sub
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
sub
add
add
sub
sub
add
add
add
mov
jmp
mov
mov
mov
call
mov
mov
sub
sub
sub
mov
mov
sub
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
add
sub
mov
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
cmp
mov
je
mov
cmp
setb
mov
mov
test
jne
jmp
mov
mov
mov
add
add
sub
add
sub
sub
sub
add
mov
call
cmp
jb
mov
call
call
sub
add
add
mov
sub
mov
sub
add
mov
sub
add
add
mov
mov
mov
call
mov
mov
call
mov
call
mov
sub
sub
mov
sub
sub
add
sub
add
sub
mov
sub
add
mov
mov
mov
mov
mov
sub
sub
mov
sub
sub
add
add
mov
cmp
jne
mov
mov
mov
mov
call
add
sub
sub
mov
sub
add
add
mov
sub
mov
mov
sub
add
sub
add
sub
add
call
jmp
cmp
jne
mov
mov
mov
mov
sub
add
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
mov
mov
mov
add
mov
add
mov
sub
add
mov
sub
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
mov
and
mov
and
xor
or
mov
and
xor
or
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
xor
mov
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
add
add
add
sub
sub
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
mov
sub
add
add
add
add
mov
mov
mov
mov
mov
sub
mov
add
sub
add
add
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
mov
and
xor
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
or
xor
or
and
or
xor
xor
mov
xor
or
or
xor
and
mov
and
mov
xor
or
test
jne
jmp
jmp
jmp
mov
mov
mov
add
mov
add
sub
mov
sub
add
add
sub
sub
mov
call
mov
sub
add
add
sub
sub
sub
add
add
cmp
jge
mov
mov
mov
add
add
sub
sub
add
add
add
sub
mov
cmp
jge
mov
mov
mov
mov
mov
sub
sub
add
add
sub
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
and
mov
and
xor
or
mov
xor
mov
xor
mov
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
mov
and
xor
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
mov
mov
mov
call
mov
mov
sub
sub
add
add
add
add
mov
sub
mov
sub
add
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
call
mov
call
sub
add
add
sub
add
add
sub
sub
add
mov
jmp
mov
add
mov
mov
cmp
mov
jbe
cmp
setl
mov
mov
test
jne
jmp
mov
call
mov
add
call
mov
mov
mov
sub
sub
add
mov
sub
mov
add
mov
call
mov
call
call
mov
sub
sub
mov
mov
sub
add
add
mov
sub
mov
sub
add
mov
mov
sub
mov
add
sub
sub
mov
mov
add
add
sub
add
add
sub
sub
add
mov
jmp
cmp
jge
cmp
jne
jmp
jmp
mov
cmp
jb
jmp
mov
mov
mov
mov
sub
add
add
sub
add
sub
sub
add
mov
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
mov
xor
and
mov
xor
and
or
mov
mov
xor
and
mov
xor
and
or
mov
and
xor
or
mov
xor
xor
mov
xor
xor
mov
xor
mov
mov
and
call
mov
and
mov
mov
and
and
mov
mov
mov
call
or
mov
mov
mov
or
mov
xor
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
xor
xor
mov
xor
and
mov
mov
mov
shl
shl
add
call
shl
add
call
cmp
jae
call
shl
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
and
mov
mov
xor
mov
and
xor
and
or
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
call
mov
mov
mov
movzx
mov
sub
add
add
sub
add
sub
add
sub
sar
call
movzx
mov
mov
sub
add
mov
add
sub
sub
mov
sub
mov
sub
add
mov
sub
mov
sub
add
mov
call
add
call
mov
mov
sub
add
sub
add
sub
sub
add
add
mov
mov
xor
and
mov
mov
mov
xor
and
or
mov
mov
xor
and
mov
xor
and
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
mov
and
xor
or
mov
xor
and
mov
xor
and
call
mov
xor
and
and
or
or
xor
xor
xor
call
xor
xor
or
or
xor
and
mov
shl
movzx
call
mov
sub
add
mov
sub
call
sub
add
mov
sub
sar
mov
sub
sub
mov
sub
sub
mov
sub
add
imul
shl
add
call
cmp
jl
mov
mov
mov
sub
add
add
add
sub
mov
mov
cmp
jb
mov
call
mov
sub
add
add
add
add
add
add
sub
mov
mov
mov
movzx
call
mov
mov
shl
mov
mov
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
push
mov
xor
xor
pop
and
mov
xor
mov
and
mov
mov
xor
and
and
or
or
xor
xor
xor
xor
mov
xor
or
or
xor
and
call
mov
add
mov
shl
add
call
shl
add
mov
cmp
jae
mov
mov
shl
mov
call
shl
mov
mov
sub
mov
movzx
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
mov
mov
xor
and
mov
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
call
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
xor
or
and
or
mov
call
shr
call
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
sub
sub
mov
sub
add
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
movzx
mov
sub
mov
sub
add
mov
sub
sub
sub
add
mov
sub
add
sar
mov
movzx
mov
mov
sub
sub
sub
mov
sub
add
mov
sub
mov
sub
add
mov
sub
add
sub
add
mov
mov
call
shl
mov
cmp
setne
mov
call
add
mov
mov
sub
add
sub
add
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
add
mov
mov
sub
mov
sub
add
add
sub
sub
mov
mov
mov
mov
sub
sub
add
add
add
sub
mov
mov
movzx
sar
mov
movzx
add
sub
add
sub
add
add
mov
mov
call
call
mov
mov
sub
add
mov
mov
sub
sub
sub
add
add
sub
mov
sub
sub
add
mov
sub
sub
add
add
sub
sub
sub
sub
mov
sub
sub
add
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sub
add
mov
sub
add
sub
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
mov
xor
mov
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
and
and
or
or
xor
or
xor
or
and
or
xor
xor
mov
xor
or
or
xor
and
mov
and
mov
xor
or
test
jne
jmp
mov
call
mov
mov
sub
sub
sub
add
sub
sub
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
xor
mov
and
xor
mov
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
mov
mov
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
jmp
jmp
jmp
mov
mov
call
mov
mov
sub
mov
sub
add
mov
sub
sub
add
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
mov
xor
mov
mov
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
mov
mov
and
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
mov
xor
and
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
mov
sub
sub
add
mov
mov
sub
add
mov
mov
sub
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
jmp
mov
mov
call
mov
sub
add
mov
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
add
add
sub
mov
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
call
mov
shl
add
call
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
push
mov
xor
xor
pop
and
mov
xor
mov
mov
and
or
mov
xor
and
mov
xor
call
mov
and
mov
mov
push
mov
xor
xor
pop
and
and
mov
mov
or
mov
or
xor
mov
xor
and
mov
xor
mov
mov
mov
and
mov
mov
push
mov
xor
xor
pop
and
and
mov
mov
call
mov
or
mov
or
xor
mov
xor
xor
mov
xor
xor
call
call
xor
or
or
xor
and
mov
xor
mov
xor
mov
and
call
xor
mov
mov
mov
mov
mov
xor
and
mov
xor
mov
mov
xor
and
mov
xor
mov
xor
xor
mov
mov
xor
call
mov
mov
and
call
mov
mov
mov
and
mov
and
call
mov
and
mov
mov
mov
or
mov
or
xor
call
or
push
mov
xor
xor
pop
mov
or
and
or
mov
mov
and
mov
xor
or
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
mov
or
xor
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
and
mov
xor
xor
or
xor
xor
mov
xor
and
mov
mov
xor
mov
xor
call
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
call
call
cmp
jae
mov
mov
mov
mov
mov
call
movzx
sub
add
add
mov
sub
add
sub
add
sar
mov
movzx
add
sub
sub
sub
sub
add
mov
mov
call
shl
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
add
sub
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
and
mov
xor
or
mov
and
xor
or
mov
xor
mov
and
xor
and
or
mov
and
xor
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
xor
mov
xor
and
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
sub
sub
add
add
mov
mov
call
mov
sub
add
sub
sub
sub
mov
sub
mov
sub
add
mov
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
add
sub
sub
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
add
add
sub
mov
mov
sub
mov
sub
add
mov
sub
add
sub
add
mov
mov
sub
sub
mov
add
add
sub
add
add
add
sub
sub
call
mov
call
add
sub
sub
mov
sub
mov
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
call
mov
mov
mov
call
mov
sub
sub
sub
sub
sub
add
add
sub
mov
mov
mov
mov
cmp
jae
mov
mov
pushf
mov
add
popf
mov
mov
add
sub
add
add
sub
add
sub
sub
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
sub
add
add
add
sub
call
cmp
jne
mov
mov
mov
mov
sub
mov
add
add
sub
add
add
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
call
add
sub
sub
mov
sub
mov
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
mov
mov
and
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
or
xor
or
and
or
mov
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
jmp
cmp
jge
mov
jmp
cmp
jge
mov
mov
mov
sub
sub
add
sub
add
add
mov
jmp
mov
mov
mov
sub
sub
add
sub
sub
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
add
sub
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
call
mov
mov
add
sub
sub
add
sub
sub
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
and
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
mov
mov
and
mov
and
mov
mov
and
mov
mov
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
xor
mov
xor
mov
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
xor
mov
and
xor
mov
and
or
mov
mov
and
xor
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
xor
mov
xor
and
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
call
mov
add
sub
sub
sub
add
add
sub
sub
mov
mov
mov
mov
add
sub
sub
sub
add
sub
sub
add
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
sub
call
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
call
mov
add
mov
movzx
mov
xor
and
mov
xor
mov
mov
and
or
mov
xor
and
mov
xor
mov
mov
and
mov
mov
xor
and
and
call
mov
or
mov
or
xor
call
push
mov
xor
xor
pop
and
mov
xor
mov
mov
mov
and
mov
mov
xor
and
and
mov
call
mov
mov
or
mov
or
xor
mov
xor
call
xor
mov
mov
xor
or
or
xor
and
call
xor
mov
xor
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
mov
xor
call
mov
xor
and
xor
xor
mov
xor
call
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
mov
mov
and
call
call
mov
or
mov
mov
mov
or
mov
xor
call
or
xor
call
or
and
or
mov
xor
mov
xor
mov
mov
xor
mov
call
and
mov
call
mov
mov
and
mov
and
mov
mov
and
mov
mov
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
xor
and
mov
xor
call
and
mov
xor
and
call
mov
and
or
mov
or
xor
mov
and
xor
or
mov
xor
and
mov
xor
and
or
mov
xor
xor
mov
xor
mov
xor
mov
and
mov
mov
and
mov
mov
and
mov
call
and
call
mov
or
mov
mov
mov
or
xor
mov
or
xor
or
and
or
xor
mov
xor
and
mov
xor
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
mov
call
and
or
mov
or
xor
or
xor
xor
or
and
or
call
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
mov
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
and
mov
and
xor
or
mov
xor
mov
xor
mov
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
mov
mov
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
sub
add
sub
add
add
sar
call
movzx
mov
mov
sub
add
add
add
add
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
call
add
mov
mov
mov
mov
add
add
sub
sub
sub
add
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
sub
add
add
sub
mov
mov
mov
sub
sub
sub
mov
sub
add
add
add
sub
mov
mov
movzx
sar
mov
movzx
sub
add
sub
add
sub
add
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
and
mov
xor
and
mov
xor
and
mov
mov
xor
and
and
or
or
xor
mov
xor
mov
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
call
mov
mov
call
mov
add
add
add
sub
add
sub
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
and
mov
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
xor
mov
xor
and
mov
and
xor
or
test
jne
jmp
mov
mov
pushf
xor
popf
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
sub
sub
sub
mov
sub
mov
sub
add
mov
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
call
mov
call
movzx
add
sub
sub
mov
sub
sub
sar
call
movzx
mov
sub
add
sub
add
sub
add
add
sub
mov
mov
add
mov
shl
shl
add
mov
shl
add
call
cmp
setb
call
mov
mov
sub
sub
sub
mov
sub
add
mov
sub
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
shl
call
mov
sub
call
movzx
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
add
add
sub
sub
mov
sub
mov
sub
add
mov
sub
sar
call
movzx
mov
sub
sub
add
mov
sub
sub
sub
mov
mov
sub
sub
sub
sub
sub
mov
mov
cmp
jne
mov
jmp
mov
cmp
jae
call
add
sub
sub
sub
add
add
sub
add
sub
mov
mov
mov
mov
mov
mov
add
add
add
sub
add
add
mov
sub
mov
add
add
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
sub
sub
add
mov
sub
add
mov
add
sub
mov
call
cmp
setae
mov
mov
mov
sub
sub
sub
sub
add
add
add
add
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
call
call
sub
sub
sub
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
sub
add
add
sub
sub
sub
sub
add
sub
add
call
cmp
jne
mov
mov
mov
mov
mov
mov
sub
mov
sub
sub
sub
sub
add
add
call
call
mov
jmp
mov
call
mov
mov
sub
mov
sub
add
mov
sub
add
sub
add
sub
sub
add
call
mov
mov
mov
sub
mov
add
add
mov
sub
sub
sub
add
add
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
add
add
add
mov
mov
mov
mov
call
mov
sub
add
sub
sub
sub
sub
add
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
and
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
mov
mov
or
xor
mov
or
and
or
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
or
xor
or
and
or
mov
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
mov
mov
pushf
xor
popf
mov
mov
mov
add
sub
sub
mov
mov
sub
add
mov
sub
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
mov
xor
mov
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
mov
and
xor
or
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
jmp
mov
call
mov
add
add
sub
mov
sub
add
sub
add
add
call
mov
call
sub
sub
add
add
sub
add
sub
sub
add
mov
mov
movzx
sar
mov
movzx
mov
sub
mov
sub
add
mov
sub
sub
add
sub
add
sub
mov
mov
mov
add
call
shl
add
call
cmp
jae
mov
call
shl
call
mov
shl
call
mov
add
mov
movzx
mov
xor
mov
xor
xor
xor
xor
or
or
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
mov
call
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
mov
sub
add
mov
mov
sub
mov
sub
add
mov
sub
sar
mov
movzx
add
sub
add
sub
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
add
sub
mov
mov
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
pushf
xor
add
sub
popf
mov
mov
mov
call
mov
mov
sub
add
sub
add
sub
call
mov
call
add
sub
sub
sub
add
sub
mov
mov
movzx
sar
call
movzx
add
sub
sub
mov
mov
sub
mov
sub
add
mov
mov
sub
mov
mov
mov
add
mov
shl
add
mov
cmp
setb
call
mov
mov
sub
mov
sub
add
sub
sub
add
sub
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
mov
mov
or
xor
mov
or
and
or
mov
and
xor
or
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
mov
xor
and
mov
and
xor
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
call
shl
mov
mov
add
call
movzx
mov
xor
and
mov
xor
mov
mov
and
call
xor
and
and
or
or
xor
mov
xor
and
call
xor
mov
and
or
call
xor
and
call
xor
mov
mov
and
mov
mov
xor
and
and
mov
mov
or
mov
or
xor
mov
xor
mov
mov
xor
and
xor
mov
mov
xor
mov
mov
xor
mov
mov
or
call
or
xor
and
mov
xor
call
call
call
mov
xor
call
and
mov
xor
mov
mov
xor
and
mov
xor
mov
xor
call
mov
xor
mov
mov
and
mov
mov
and
mov
and
call
mov
call
mov
and
call
or
mov
or
xor
mov
or
xor
call
or
and
or
mov
xor
xor
mov
xor
mov
xor
mov
and
mov
call
and
mov
mov
and
mov
mov
and
mov
call
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
call
xor
and
call
xor
mov
and
mov
xor
and
call
mov
and
or
mov
or
xor
mov
mov
xor
mov
xor
call
xor
call
and
and
call
mov
mov
and
mov
mov
and
mov
call
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
mov
xor
and
call
xor
and
or
mov
and
xor
or
xor
xor
mov
xor
xor
or
or
xor
and
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
call
movzx
mov
add
mov
add
add
sub
sub
sub
sub
add
sub
sub
sar
mov
movzx
add
sub
add
add
sub
sub
mov
mov
call
call
jmp
mov
mov
mov
call
sub
sub
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
mov
mov
call
mov
mov
sub
sub
add
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
add
sub
mov
sub
add
sub
add
add
mov
mov
movzx
sar
mov
movzx
add
add
add
mov
sub
add
sub
sub
sub
mov
call
call
mov
mov
call
mov
mov
sub
mov
add
sub
add
add
sub
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
mov
xor
mov
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
mov
mov
and
mov
or
mov
or
xor
mov
mov
or
xor
mov
or
and
or
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
jmp
mov
call
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
sub
mov
mov
mov
cmp
jae
mov
mov
shl
call
mov
shl
call
mov
add
mov
movzx
mov
xor
and
mov
xor
mov
and
call
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
call
xor
mov
mov
mov
and
mov
call
xor
and
and
mov
mov
or
mov
or
xor
mov
xor
mov
xor
mov
call
xor
mov
mov
or
call
or
xor
and
xor
xor
mov
xor
mov
mov
xor
xor
or
or
push
mov
xor
xor
pop
and
call
xor
xor
mov
xor
mov
and
mov
xor
mov
mov
mov
mov
mov
xor
and
mov
mov
and
mov
mov
mov
xor
or
mov
call
and
xor
or
mov
xor
mov
and
xor
and
or
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
call
mov
or
mov
xor
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
mov
mov
and
mov
mov
and
mov
mov
and
and
call
mov
or
mov
or
xor
mov
or
xor
or
and
or
xor
xor
xor
xor
mov
xor
or
or
xor
and
call
xor
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
mov
or
xor
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
call
cmp
jae
mov
mov
mov
mov
call
mov
movzx
mov
add
sub
add
mov
sub
sub
sar
call
movzx
add
add
sub
mov
sub
mov
sub
add
sub
add
sub
add
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
pushf
sub
popf
mov
call
add
add
sub
mov
sub
add
add
sub
add
mov
mov
mov
mov
add
sub
add
sub
sub
add
sub
sub
mov
mov
movzx
sar
call
movzx
add
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
mov
cmp
jae
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
and
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
mov
mov
or
xor
mov
or
and
or
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
call
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
and
mov
xor
mov
mov
and
mov
mov
xor
and
and
call
call
or
mov
or
xor
mov
xor
and
mov
xor
mov
mov
and
call
or
mov
xor
and
mov
mov
xor
and
call
mov
mov
mov
or
call
xor
xor
call
mov
xor
and
mov
xor
xor
mov
mov
xor
and
call
xor
mov
xor
and
xor
call
xor
mov
mov
xor
xor
or
or
xor
and
call
xor
mov
xor
xor
mov
mov
xor
mov
mov
and
mov
mov
mov
mov
and
mov
and
mov
mov
mov
mov
and
call
mov
call
or
mov
mov
call
or
mov
xor
mov
mov
mov
or
xor
mov
or
and
mov
or
mov
xor
mov
mov
mov
xor
mov
mov
xor
call
mov
and
mov
mov
and
call
and
mov
call
and
mov
or
mov
or
xor
mov
call
or
xor
mov
or
and
or
mov
xor
and
mov
push
mov
xor
xor
pop
and
mov
xor
and
mov
mov
and
or
mov
or
xor
mov
and
xor
or
mov
mov
xor
and
call
xor
and
mov
xor
and
and
or
or
xor
mov
xor
call
xor
xor
mov
xor
mov
and
mov
mov
and
mov
mov
and
mov
mov
and
call
call
or
call
call
mov
or
xor
mov
or
xor
xor
or
and
or
mov
xor
xor
xor
mov
xor
or
or
push
mov
xor
xor
pop
and
mov
and
xor
or
call
mov
call
mov
sub
sub
add
add
add
sub
add
add
add
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
sub
add
sub
add
sub
add
sub
sub
add
sar
mov
movzx
sub
add
sub
add
sub
sub
add
add
mov
mov
mov
sub
mov
shl
shl
add
mov
call
call
jmp
pushf
mov
xor
popf
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
add
sub
mov
mov
mov
mov
sub
add
sub
sub
sub
add
add
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
sub
sub
mov
mov
mov
add
call
mov
mov
mov
mov
mov
mov
mov
sub
add
sub
mov
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
call
add
sub
sub
mov
sub
mov
mov
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
mov
and
xor
or
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
mov
xor
and
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
call
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
call
mov
shr
call
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
add
mov
add
mov
sub
add
mov
sub
sar
mov
movzx
add
sub
sub
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
mov
sub
add
sub
mov
mov
call
shl
mov
jmp
mov
mov
mov
add
add
sub
add
sub
sub
mov
sub
add
mov
mov
mov
add
add
add
add
sub
add
sub
sub
add
mov
mov
movzx
sar
mov
movzx
mov
sub
sub
add
add
add
sub
mov
mov
call
mov
sub
add
add
mov
sub
sub
add
sub
add
mov
sub
add
sub
sub
add
sub
sub
mov
jmp
mov
mov
mov
add
sub
add
mov
mov
sub
sub
sub
sub
call
cmp
jne
mov
mov
pushf
mov
add
popf
mov
mov
mov
mov
shl
call
mov
add
sub
add
mov
mov
sub
sub
call
mov
mov
sub
add
add
sub
sub
sub
add
add
call
cmp
jge
mov
mov
mov
call
mov
add
add
add
add
sub
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
or
or
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
jne
jmp
mov
mov
sub
sub
add
mov
sub
mov
add
add
mov
mov
sub
mov
mov
sub
sub
mov
mov
add
cmp
setl
mov
call
mov
sub
add
add
sub
sub
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
add
sub
sub
sub
add
sub
add
sub
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
jne
jmp
mov
mov
call
mov
mov
add
add
sub
sub
add
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
and
mov
xor
or
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
or
xor
or
and
or
mov
xor
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
call
jmp
mov
shl
shl
mov
add
mov
mov
mov
call
mov
shl
add
mov
cmp
jae
mov
call
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
push
mov
xor
xor
pop
and
mov
xor
mov
and
call
xor
and
and
or
or
xor
mov
xor
and
call
xor
mov
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
xor
mov
mov
xor
and
mov
xor
mov
mov
xor
and
call
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
mov
xor
and
mov
mov
and
mov
mov
mov
xor
call
or
mov
mov
xor
xor
mov
mov
xor
mov
call
xor
mov
mov
and
mov
call
and
mov
and
mov
mov
and
call
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
xor
mov
and
push
mov
xor
xor
pop
mov
and
or
mov
mov
and
xor
or
mov
xor
and
call
xor
and
or
mov
and
xor
or
xor
mov
xor
and
mov
mov
and
xor
or
mov
mov
shr
call
movzx
imul
call
call
cmp
jae
mov
mov
mov
call
call
mov
movzx
add
sub
add
add
sub
add
mov
mov
sub
mov
sub
add
mov
sub
sar
call
movzx
sub
add
add
mov
sub
mov
sub
add
mov
sub
sub
sub
mov
mov
call
shl
mov
jmp
mov
mov
mov
mov
add
add
sub
add
sub
sub
mov
add
add
mov
mov
call
add
sub
sub
mov
sub
mov
sub
add
mov
sub
mov
call
movzx
sar
call
movzx
mov
add
add
sub
sub
add
add
add
sub
mov
mov
call
call
mov
add
sub
mov
sub
sub
sub
add
add
mov
sub
mov
sub
add
sub
sub
add
add
sub
sub
add
mov
mov
mov
mov
call
mov
add
mov
add
add
sub
sub
mov
sub
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
call
mov
sub
add
add
mov
mov
sub
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
mov
and
mov
and
xor
or
mov
and
xor
or
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
sub
mov
mov
sub
sub
add
mov
sub
sub
sub
add
mov
cmp
jne
mov
mov
sub
sub
add
mov
sub
add
add
sub
mov
cmp
jl
mov
pushf
add
popf
mov
pushf
sub
popf
mov
sar
add
sub
add
sub
add
sub
mov
mov
mov
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
and
xor
mov
and
or
xor
mov
mov
xor
and
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
push
mov
xor
xor
pop
mov
and
or
mov
xor
and
mov
xor
and
or
mov
mov
xor
mov
mov
xor
and
mov
mov
xor
xor
and
mov
mov
xor
call
mov
mov
mov
xor
and
mov
mov
xor
mov
mov
xor
and
mov
and
mov
xor
or
mov
xor
mov
xor
xor
call
mov
xor
mov
mov
and
call
mov
mov
mov
and
mov
and
mov
call
mov
call
and
mov
call
call
or
mov
mov
mov
or
mov
xor
or
xor
mov
or
and
or
mov
xor
mov
mov
and
xor
mov
and
or
mov
xor
mov
xor
xor
mov
xor
mov
and
mov
mov
and
mov
mov
and
and
mov
mov
mov
mov
or
mov
or
xor
call
mov
or
xor
or
and
or
mov
xor
and
call
xor
and
mov
xor
and
and
or
or
xor
mov
xor
xor
mov
xor
call
xor
call
and
mov
mov
and
mov
mov
mov
and
and
mov
mov
mov
mov
or
mov
or
xor
mov
or
xor
or
and
or
xor
call
xor
mov
and
mov
xor
xor
mov
xor
xor
mov
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
cmp
jge
mov
mov
mov
shl
mov
mov
sub
mov
shl
add
mov
add
sub
add
add
sub
add
sub
add
sub
shl
add
add
mov
jmp
mov
mov
mov
sub
add
sub
add
add
add
add
call
cmp
jae
mov
mov
shl
call
mov
shl
mov
mov
sub
mov
movzx
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
push
mov
xor
xor
pop
mov
and
mov
mov
xor
and
and
mov
mov
or
mov
or
xor
mov
xor
and
mov
xor
and
or
mov
mov
xor
mov
call
xor
xor
mov
mov
xor
call
mov
or
mov
or
xor
and
xor
mov
xor
xor
mov
call
xor
mov
mov
or
call
or
xor
and
mov
xor
mov
mov
call
mov
xor
mov
and
xor
mov
xor
xor
mov
call
xor
or
or
xor
and
mov
mov
and
xor
or
mov
and
mov
xor
or
mov
xor
and
mov
xor
and
mov
mov
xor
and
and
mov
or
or
xor
mov
mov
xor
mov
xor
call
xor
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
call
mov
or
mov
xor
mov
or
xor
or
and
or
mov
push
mov
xor
xor
pop
and
mov
xor
and
or
call
xor
xor
mov
xor
mov
xor
mov
and
mov
mov
and
mov
mov
and
and
mov
call
mov
mov
or
call
or
xor
mov
or
xor
or
and
or
xor
xor
xor
mov
xor
or
or
xor
and
mov
and
mov
xor
or
mov
call
shr
mov
mov
shl
mov
mov
cmp
jb
mov
mov
mov
mov
mov
sub
sub
sub
sub
mov
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
or
or
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
sub
sub
sub
add
add
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
or
or
xor
and
mov
xor
and
mov
xor
call
mov
and
call
mov
xor
and
and
call
call
mov
mov
or
mov
or
xor
mov
mov
xor
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
call
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
or
xor
or
and
or
mov
mov
mov
add
add
sub
mov
sub
mov
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
sub
sub
sub
add
add
sub
sub
add
mov
push
mov
xor
cmp
pop
jne
call
add
call
call
shl
mov
mov
call
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
call
shl
mov
mov
add
call
movzx
mov
xor
and
mov
xor
mov
and
call
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
call
mov
xor
and
and
mov
mov
or
mov
or
xor
call
xor
and
call
xor
mov
mov
and
mov
mov
xor
and
and
mov
mov
or
mov
or
xor
mov
xor
mov
xor
call
call
xor
call
mov
or
mov
or
xor
and
xor
mov
xor
call
call
xor
xor
or
or
xor
and
call
xor
mov
xor
mov
mov
xor
call
mov
or
call
or
xor
and
xor
mov
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
xor
mov
xor
call
mov
xor
mov
mov
and
mov
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
and
mov
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
mov
or
and
or
mov
xor
mov
xor
call
mov
xor
call
mov
and
call
mov
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
mov
or
call
or
xor
mov
or
xor
call
or
and
or
mov
push
mov
xor
xor
pop
and
mov
xor
mov
and
mov
xor
and
call
mov
and
or
mov
or
xor
mov
mov
and
xor
or
mov
xor
and
mov
xor
and
call
xor
and
and
or
or
xor
mov
mov
and
xor
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
call
mov
shr
call
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
sub
sub
add
sub
mov
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
call
mov
mov
movzx
sub
add
sub
mov
mov
sub
add
add
sub
add
sar
mov
movzx
add
sub
sub
mov
sub
add
mov
mov
mov
shl
call
call
mov
mov
mov
add
mov
sub
add
sub
add
sub
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
add
add
sub
add
add
sub
add
mov
mov
call
mov
sub
sub
sub
mov
sub
mov
sub
add
mov
sub
mov
call
movzx
sar
mov
movzx
add
sub
sub
mov
sub
add
mov
sub
sub
mov
mov
mov
mov
sub
sub
mov
sub
sub
add
sub
sub
sub
add
sub
sub
add
mov
mov
mov
mov
xor
mov
xor
xor
mov
xor
xor
or
or
xor
and
mov
xor
and
mov
mov
xor
and
mov
mov
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
xor
mov
xor
mov
mov
and
and
call
mov
and
and
or
or
xor
mov
or
xor
xor
or
and
or
call
mov
shl
mov
mov
mov
mov
mov
sub
sub
sub
mov
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
add
sub
add
mov
cmp
setne
call
mov
sub
add
mov
add
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
sub
add
add
add
add
add
mov
cmp
jne
mov
jmp
jmp
mov
mov
mov
add
sub
add
mov
sub
sub
sub
add
sub
sub
add
mov
mov
cmp
jbe
call
jmp
mov
mov
mov
add
add
sub
sub
add
add
sub
sub
cmp
jbe
mov
call
mov
mov
sub
sub
add
add
sub
sub
mov
sub
mov
sub
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
sub
add
add
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
add
sub
add
sub
sub
sub
sub
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
mov
and
xor
or
mov
and
xor
or
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
or
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
jmp
call
mov
jmp
mov
call
add
add
sub
sub
sub
add
add
add
sub
mov
call
cmp
jb
mov
mov
mov
mov
sub
sub
add
sub
add
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
sub
add
sub
add
mov
cmp
jne
call
mov
mov
mov
add
sub
add
add
sub
sub
mov
mov
call
sub
mov
sub
add
add
add
sub
sub
sub
call
call
mov
mov
cmp
mov
je
mov
cmp
setb
mov
mov
test
jne
mov
pushf
xor
add
sub
popf
mov
mov
add
sub
add
mov
add
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
and
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
and
mov
xor
or
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
xor
mov
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
add
add
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
mov
call
mov
sub
mov
add
sub
sub
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
and
or
mov
xor
mov
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
mov
mov
mov
xor
mov
and
mov
and
xor
or
mov
and
xor
or
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setb
call
mov
sub
mov
add
sub
add
add
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
mov
xor
and
and
mov
mov
or
mov
or
xor
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
or
mov
or
xor
and
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
mov
and
mov
xor
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
mov
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
xor
mov
xor
mov
and
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
call
shl
call
mov
sub
call
movzx
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
mov
xor
mov
mov
and
or
call
xor
and
mov
xor
and
or
mov
xor
mov
mov
mov
xor
and
xor
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
xor
call
xor
mov
mov
xor
call
mov
or
call
or
xor
and
call
and
mov
mov
xor
mov
or
mov
xor
xor
mov
mov
xor
xor
mov
call
xor
mov
call
and
call
call
and
mov
and
call
mov
and
call
or
mov
or
xor
mov
mov
or
xor
call
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
call
call
and
or
mov
or
xor
mov
mov
and
xor
or
mov
mov
xor
and
call
xor
and
or
call
xor
xor
mov
xor
call
xor
mov
mov
and
mov
mov
mov
and
mov
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
xor
mov
or
xor
or
and
or
mov
xor
xor
xor
mov
xor
xor
or
or
xor
and
mov
and
xor
or
call
mov
mov
mov
sub
sub
sub
add
sub
sub
add
mov
sub
mov
sub
add
mov
sub
call
mov
sub
mov
mov
sub
add
mov
sub
sub
sub
sub
sub
add
mov
cmp
jge
call
jmp
mov
mov
cmp
jge
mov
mov
call
mov
mov
sub
sub
add
add
add
sub
mov
sub
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
test
jne
jmp
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
sub
mov
add
sub
add
sub
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
xor
mov
xor
and
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
and
mov
xor
or
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
and
xor
or
test
jne
jmp
jmp
call
sub
sub
add
add
sub
sub
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
sub
sub
add
sub
sub
mov
sub
mov
sub
add
sub
sub
sub
add
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
add
add
sub
sub
add
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
or
or
xor
and
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
mov
xor
and
mov
and
mov
xor
or
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
xor
and
mov
xor
and
mov
xor
and
and
or
or
xor
mov
and
xor
or
xor
mov
xor
and
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
call
mov
add
sub
sub
sub
add
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
or
or
xor
and
mov
xor
mov
and
xor
and
or
mov
and
xor
or
test
call
jne
jmp
call
add
pop
pop
pop
pop
ret
jmp
jmp
mov
mov
shl
mov
mov
sub
mov
movzx
mov
xor
xor
mov
xor
and
mov
xor
mov
and
xor
and
or
mov
xor
mov
xor
xor
mov
and
and
mov
mov
mov
and
mov
call
and
or
mov
or
xor
or
xor
xor
or
and
or
mov
jmp
jmp
mov
mov
mov
add
add
sub
sub
call
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
mov
sub
sub
add
add
add
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
movzx
mov
sub
sub
sub
mov
mov
sub
sub
sar
mov
movzx
mov
sub
add
mov
sub
mov
sub
add
mov
sub
add
sub
mov
mov
call
shl
mov
jmp
jmp
jmp
jmp
mov
mov
mov
mov
add
sub
sub
sub
sub
add
sub
sub
add
call
call
mov
mov
add
add
sub
sub
add
sub
add
add
mov
mov
movzx
sar
call
movzx
sub
sub
add
add
sub
add
add
add
add
mov
mov
call
mov
mov
sub
sub
add
mov
sub
add
add
add
sub
sub
sub
sub
sub
sub
mov
jmp
call
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
add
add
add
sub
add
sub
add
sub
sar
call
movzx
mov
mov
add
sub
add
sub
sub
sub
mov
sub
sub
mov
mov
add
sub
add
mov
mov
call
mov
mov
mov
mov
call
cmp
mov
cmovl
mov
mov
add
mov
jmp
mov
shr
call
movzx
imul
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
sub
add
sub
sub
add
sub
add
add
sar
mov
movzx
add
sub
sub
mov
sub
add
add
add
sub
sub
add
mov
mov
mov
add
mov
shl
shl
add
mov
shl
add
mov
jmp
mov
mov
cmp
cmovl
mov
mov
mov
sub
add
add
add
sub
sub
sub
sub
add
mov
jmp
jmp
mov
mov
mov
call
mov
sub
add
sub
add
add
mov
mov
mov
add
sub
sub
mov
mov
sub
sub
call
mov
movzx
sar
mov
movzx
mov
sub
sub
add
sub
add
add
add
mov
mov
mov
add
mov
shl
add
mov
jmp
mov
mov
call
mov
add
add
mov
sub
add
sub
add
add
call
mov
mov
mov
sub
add
sub
add
add
mov
mov
movzx
sar
mov
movzx
mov
sub
sub
add
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
call
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
and
mov
xor
and
mov
mov
xor
and
mov
mov
mov
xor
and
and
or
or
xor
mov
xor
mov
xor
mov
xor
mov
and
and
call
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
jmp
jmp
mov
mov
sub
sub
add
sub
sub
add
mov
jmp
jmp
jmp
mov
mov
mov
mov
add
sub
add
sub
add
sub
sub
add
mov
mov
mov
xor
and
mov
xor
mov
and
mov
xor
and
and
or
or
xor
mov
push
mov
xor
xor
pop
and
mov
xor
and
or
mov
xor
and
mov
xor
and
or
mov
mov
xor
mov
mov
xor
and
xor
mov
xor
mov
mov
xor
or
or
xor
and
mov
xor
xor
mov
xor
and
mov
xor
xor
and
mov
mov
and
mov
mov
xor
mov
or
mov
xor
mov
call
xor
xor
mov
mov
xor
mov
mov
and
mov
mov
and
call
and
call
mov
mov
mov
and
mov
or
mov
or
xor
mov
mov
or
xor
mov
or
and
or
mov
xor
mov
and
xor
mov
and
or
mov
and
xor
or
mov
xor
and
mov
xor
and
call
xor
and
and
or
or
xor
mov
and
xor
or
xor
xor
mov
xor
or
or
xor
and
mov
xor
mov
mov
xor
call
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
mov
jmp
mov
mov
call
mov
mov
movzx
mov
add
sub
sub
sub
add
add
sub
sub
sar
mov
movzx
sub
sub
add
add
add
sub
sub
sub
mov
mov
mov
shl
mov
jmp
mov
sub
add
add
sub
add
sub
sub
sub
sub
mov
jmp
mov
mov
mov
mov
sub
sub
sub
sub
sub
add
add
mov
jmp
jmp
jmp
mov
call
mov
mov
call
mov
jmp
jmp
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
mov
mov
sub
call
mov
jg
jmp
call
sub
call
je
jmp
call
sub
call
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
call
mov
mov
cmp
sete
and
movzx
mov
mov
mov
jmp
call
mov
pop
ret
mov
call
mov
mov
mov
call
jmp
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
out
or
pop
and
ror
bound
mov
mov
mov
data16
add
add
xor
inc
and
adc
and
add
sahf
iret
pop
shl
pop
push
adc
(bad)
mov
mov
mov
(bad)
test
mov
pushf
jns
mov
xor
inc
cld
call
and
bound
fucomi
lods
xchg
mov
mov
imul
jmp
mov
jns
mov
xor
stos
jmp
add
push
add
add
add
mov
sub
mov
xchg
je
jmp
(bad)
jp
push
push
outs
imul
dec
shufps
ins
jmp
add
add
test
sub
mov
shl
add
shl
inc
add
mov
ins
xchg
add
sub
mov
fild
std
add
rcr
test
add
(bad)
fist
pop
inc
and
mov
and
add
jmp
ret
stc
add
add
das
cld
mov
rcl
add
jmp
mov
jge
jp
sbb
call
add
in
jmp
mov
iret
xchg
add
adc
mov
add
push
jmp
fild
sub
mov
loop
and
add
add
and
add
add
test
mov
add
add
jmp
add
jmp
push
fs
fldenv
push
add
add
mov
stc
scas
dec
add
(bad)
mov
fcmovnbe
arpl
add
test
sub
fs
ins
pop
jg
jmp
mov
cmp
mov
fild
and
pop
in
aaa
push
add
inc
add
pop
in
add
or
rdmsr
xor
jmp
pop
test
mov
jmp
add
(bad)
cld
push
int3
in
dec
ret
stc
add
add
test
push
add
add
mov
sub
mov
mov
arpl
dec
add
dec
mov
and
jns
add
adc
inc
xchg
adc
cmp
cdq
rcl
push
add
mov
mov
mov
inc
test
add
inc
xchg
xor
dec
sbb
inc
inc
bound
cli
push
add
mov
sub
mov
dec
ror
cmp
les
xchg
xor
add
add
xor
lock
fldcw
xor
test
sbb
add
mov
ins
sub
add
mov
mov
test
fld
sahf
iret
pop
test
pop
push
add
or
sub
test
push
add
lahf
xchg
add
aam
je
inc
mov
xchg
and
pop
test
repnz
call
pop
test
mov
je
jmp
pusha
and
mov
push
ret
push
bound
add
inc
add
mov
test
jno
adc
add
mov
add
push
scas
pop
inc
and
pop
out
add
pop
jmp
mov
sub
mov
push
add
add
sbb
add
repnz
push
(bad)
pop
mov
je
jmp
jmp
mov
cli
xor
add
mov
push
icebp
add
jmp
mov
mov
xchg
add
sahf
jmp
mov
xor
test
mov
and
add
ss
and
add
add
mov
adc
popf
jo
mov
call
jmp
mov
rol
add
dec
cmovl
shl
movs
ins
add
in
bound
mov
xchg
add
cli
jp
shl
add
mov
mov
and
push
push
add
mov
ret
inc
add
and
xchg
add
add
(bad)
jmp
scas
(bad)
mov
int3
add
iret
cmps
daa
fsubrp
adc
mov
xchg
aas
lock
lahf
into
add
mov
pop
add
add
pop
push
add
paddw
and
mov
and
add
mov
add
in
jmp
mov
mov
xor
ret
add
cmovne
fucom
and
push
add
jmp
mov
test
dec
mov
add
pusha
sbb
add
fnsave
cld
(bad)
mov
mov
and
add
add
adc
add
push
push
and
mov
dec
mov
jns
add
call
cmp
bnd
inc
push
and
bound
in
hlt
pop
pop
int
ret
inc
imul
test
mov
mov
popf
mov
jle
pop
add
add
add
dec
mov
test
sbb
lods
cmp
and
xchg
add
add
gs
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
mov
fisttp
and
mov
scas
inc
call
mov
(bad)
mov
xchg
inc
and
mov
jae
outs
leave
clc
pop
mov
mov
enter
add
sbb
fist
and
cmp
xor
add
int3
mov
add
and
sub
mov
pcmpeqd
add
add
add
add
lds
pop
inc
jecxz
daa
add
add
inc
inc
xchg
cmp
xor
out
push
mov
test
xchg
and
add
mov
sub
mov
(bad)
push
add
jmp
fnstcw
aam
shl
xor
bound
add
(bad)
cmp
shl
sar
inc
and
je
jmp
fild
jg
jne
or
test
add
add
mov
and
sub
mov
inc
loope
add
mov
sub
jns
dec
push
push
fucomi
add
push
int3
mov
mov
out
neg
push
pop
out
add
add
mov
mov
jmp
xchg
add
push
sar
sub
add
add
sub
jmp
jo
pop
push
push
jmp
(bad)
pop
and
push
cld
rcr
push
add
mov
add
push
ficom
call
xchg
test
push
mov
mov
sbb
xchg
aam
ror
push
mov
cmp
add
add
mov
mov
push
inc
jmp
mov
or
inc
jmp
mov
sbb
mov
mov
jb
inc
and
jns
add
dec
call
and
add
add
fwait
in
std
inc
or
add
or
add
add
int3
and
out
mov
(bad)
leave
and
push
test
sbb
or
push
add
aaa
hlt
daa
pop
pop
pop
scas
jmp
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
add
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
call
mov
mov
call
cmp
cmovne
mov
jmp
mov
call
jmp
mov
call
call
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
call
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
pushf
mov
xor
popf
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
call
mov
jmp
mov
jmp
mov
call
add
sub
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
call
call
call
mov
jmp
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
jns
popa
scas
mov
ja
or
iret
enter
and
push
and
mov
imul
mov
and
mov
xchg
dec
mov
and
mov
and
call
jp
std
dec
movs
or
push
in
mov
and
cmp
mov
in
jg
push
std
jmp
mov
mov
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
cdq
cmp
inc
xor
pop
inc
and
mov
mov
aam
(bad)
aas
push
add
push
imul
jg
sti
ins
xor
and
xor
push
xchg
popa
and
sub
fs
pop
add
inc
add
add
and
sub
jmp
xor
add
add
loopne
mov
in
mov
mov
and
test
add
mov
dec
add
add
and
sub
mov
sbb
test
xor
jmp
mov
jnp
test
test
add
sbb
add
add
ss
fimul
fisttp
add
add
pop
mov
add
dec
or
cmp
cli
add
push
add
rcl
xchg
xchg
add
xlat
call
jno
mov
or
mov
add
(bad)
sub
call
dec
inc
mov
popf
addr16
add
jecxz
cmps
adc
pop
push
mov
mov
cmp
push
inc
clc
mov
add
add
arpl
add
cmp
pop
push
jecxz
shr
fadd
shl
mov
sbb
daa
inc
je
aam
pop
xor
or
mov
pop
gs
pop
pop
pop
loopne
enter
jmp
pop
inc
add
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
aam
int
je
add
mov
call
popf
das
and
push
dec
xor
push
lea
(bad)
inc
and
mov
mov
sbb
dec
and
or
imul
imul
and
popf
dec
and
mov
mov
dec
mov
adc
jp
hlt
mov
xchg
dec
and
mov
inc
or
hlt
xchg
ret
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
mov
or
mov
mov
mov
push
or
lahf
add
add
mov
add
sub
pop
add
add
add
test
add
add
fwait
arpl
sahf
jae
add
mov
and
lods
add
mov
and
pop
add
ret
pushf
add
jecxz
add
add
cwde
add
add
movs
add
arpl
and
add
jae
jg
xchg
add
test
mov
mov
test
nop
add
lods
xchg
sbb
and
add
jbe
adc
cli
jg
fadd
add
jl
add
(bad)
add
add
lods
add
movs
mov
dec
inc
clc
daa
push
add
sysexit
add
or
lods
mov
sub
mov
sti
and
add
pop
movs
jmp
add
and
add
in
cli
lahf
test
sbb
add
add
scas
call
inc
add
cmps
frstor
mov
mov
add
add
test
mov
add
sub
mov
out
push
icebp
mov
jmp
or
add
in
xor
mov
and
add
fucomip
pop
add
movs
call
inc
add
(bad)
xor
ror
xor
add
test
lods
jge
popa
or
add
fild
and
sub
call
add
sti
bound
add
add
add
and
fsubp
add
test
or
call
jb
sti
add
mov
cmp
jmp
mov
xor
adc
dec
push
and
add
test
jmp
mov
add
mov
stos
push
shl
jmp
mov
sub
je
add
mov
sbb
movs
mov
mov
(bad)
scas
jb
test
pand
xchg
add
add
xchg
and
iret
adc
jp
test
add
add
bound
add
mov
sub
lahf
test
sbb
jecxz
addr16
adc
and
cli
mov
dec
scas
call
add
xchg
sbb
or
sbb
movs
add
adc
test
movs
call
push
add
jmp
mov
adc
mov
and
jecxz
nop
add
add
add
clc
test
cli
mov
sub
mov
jb
and
sbb
jmp
mov
dec
in
stos
adc
sub
lahf
add
or
add
cmp
and
add
int3
mov
add
add
(bad)
lods
add
dec
(bad)
add
in
test
sub
cli
jg
cmps
push
add
jge
jmp
mov
fild
mov
int3
mov
jae
test
and
add
mov
sub
mov
and
add
jecxz
or
mov
mov
or
(bad)
lods
push
and
sti
ret
add
unpcklps
movs
call
add
mov
and
push
xor
cli
mov
pop
add
setge
add
add
lods
movs
push
addr16
mov
enter
test
jb
mov
and
(bad)
lods
jmp
popf
popf
and
movs
(bad)
out
outs
push
xchg
cmp
add
or
sti
(bad)
(bad)
push
xor
call
outs
leave
sub
add
sub
add
lahf
jmp
mov
add
mov
or
add
test
jmp
add
and
add
add
mov
add
mov
sbb
lods
movs
add
mov
into
xchg
mov
test
pop
add
add
add
ins
pop
aam
sub
add
jecxz
adc
call
sti
add
mov
sub
hlt
xchg
and
add
scas
(bad)
jmp
arpl
push
mov
add
(bad)
dec
inc
sub
test
add
add
add
movs
mov
outs
add
add
mov
and
lahf
add
jl
sti
push
add
add
add
xchg
mov
add
stos
vphsubdq
fwait
movs
add
mov
pop
xchg
inc
into
cmp
add
lods
jg
in
add
mov
add
into
rcr
jmp
push
xor
add
jmp
test
rcl
sub
add
push
lahf
call
and
xor
xchg
cmps
out
mov
loopne
add
addr16
adc
push
ja
add
sar
mov
sbb
jmp
push
lahf
add
mov
je
xchg
pop
push
sbb
movs
add
and
sub
add
(bad)
and
mov
jmp
mov
jmp
hlt
jle
and
and
add
add
test
add
lock
and
movs
add
add
mov
jg
jmp
mov
adc
(bad)
sub
mov
and
push
sbb
jecxz
jmp
mov
and
cli
add
push
je
lods
pslld
add
add
mov
lds
test
add
ret
xchg
push
add
add
add
mov
cdq
push
adc
int3
and
add
fadd
xchg
add
jge
sub
mov
jg
or
movs
call
jb
mov
shl
jg
sub
push
add
push
(bad)
mov
add
fisttp
fwait
add
mov
and
mov
add
dec
add
add
not
lods
sub
out
pop
add
test
inc
jge
add
xchg
and
cli
cmp
aas
mov
test
fwait
add
(bad)
mov
add
add
adc
fisttp
xchg
pop
clc
mov
or
imul
add
add
add
xor
rcl
mov
and
add
sbb
mov
and
movs
fild
sub
mov
pcmpeqb
add
xchg
(bad)
es
and
pop
sbb
sub
mov
(bad)
and
jecxz
jb
call
jo
xchg
add
stos
mov
fucomip
(bad)
out
add
add
add
repnz
adc
(bad)
stos
add
lods
jmp
xchg
and
shl
inc
popa
sbb
add
add
jmp
popf
test
sub
out
pop
and
add
cli
add
jmp
mov
push
rcr
add
sub
jg
mov
add
add
call
add
scas
aam
add
jge
inc
sbb
push
loop
add
popa
(bad)
jl
mov
sti
add
add
mov
push
dec
mov
aam
sub
add
add
mov
mov
icebp
push
in
mov
and
pop
mov
add
add
lods
not
(bad)
lods
(bad)
leave
ja
inc
int3
jo
test
jbe
sti
bound
add
mov
or
add
repz
test
pop
add
mov
add
add
jp
loopne
stc
pop
mov
leave
sub
pop
add
ret
sbb
add
add
out
fbld
stos
ins
pop
push
add
mov
mov
or
add
sub
cmps
jp
push
sub
test
sahf
add
dec
mov
add
arpl
sub
mov
movaps
push
add
outs
add
add
add
mov
mov
push
and
nop
daa
stc
mov
fild
sub
mov
je
in
cmp
mov
push
mov
cmp
mov
js
push
lock
pop
and
add
jecxz
rcl
ins
ds
inc
push
mov
pslld
xchg
inc
jl
add
mov
repnz
mov
mov
add
lahf
call
and
push
add
push
lahf
pop
and
mov
add
retf
add
jecxz
test
call
test
je
adc
add
add
add
add
lahf
pop
and
add
arpl
push
ja
mov
sub
cmove
movaps
adc
add
lods
das
pop
and
loop
add
cli
inc
fbstp
test
aaa
add
add
xchg
and
add
sahf
fwait
mov
mov
lahf
jae
inc
add
add
xor
test
cmp
test
add
add
test
sub
mov
cmp
push
scas
add
sbb
add
add
fbld
pop
inc
movs
inc
mov
push
and
psraw
add
add
xchg
jge
cmp
inc
adc
and
mov
add
xlat
(bad)
add
add
sub
mov
push
out
test
mov
test
add
add
out
inc
mov
jmp
add
sti
mov
sbb
mov
lods
jge
lock
add
add
sub
out
inc
mov
movs
call
add
mov
(bad)
test
jae
or
add
jecxz
mov
sub
mov
je
inc
dec
add
sbb
add
sub
mov
je
jbe
add
add
shl
add
add
and
inc
mov
push
add
add
movs
addr16
jne
mov
mov
push
mov
mov
jmp
jb
rcl
add
mov
inc
xchg
add
aam
jno
xchg
mov
mov
and
push
xor
lods
mov
sub
mov
sti
nop
add
jecxz
test
add
sub
add
(bad)
pop
push
mov
mov
lock
add
addr16
add
(bad)
adc
mov
movs
push
cmps
mov
mov
das
mov
dec
data16
add
mov
mov
cmp
cmp
ror
jge
adc
cli
inc
retf
mov
sti
jae
add
jb
add
add
add
mov
sbb
sbb
nop
ret
add
(bad)
mov
and
sahf
jae
(bad)
aad
push
xor
inc
dec
test
lock
inc
cmp
add
mov
adc
mov
cs
and
add
test
cmovne
mov
adc
clc
add
xor
push
add
les
xor
jge
mov
mov
sti
nop
loop
fwait
jmp
mov
bound
xchg
mov
mov
movs
ss
add
addr16
mov
bound
add
ds
shl
neg
add
add
add
add
lahf
add
cli
or
push
mov
mov
xchg
adc
add
mov
mov
imul
mov
movs
xchg
(bad)
jmp
mov
mov
adc
loope
addr16
push
mul
add
sti
bound
and
add
mov
adc
in
mov
add
mov
and
jmp
stc
mov
in
cmps
inc
leave
js
mov
mov
or
xchg
and
add
add
xor
addr16
and
add
add
add
outs
ins
les
lods
mov
mov
mov
and
add
fcomip
ret
and
adc
adc
push
xor
xchg
mov
in
cmp
add
push
and
data16
add
cli
jg
nop
add
pop
add
add
lahf
test
add
add
add
sti
jae
fwait
movs
call
add
add
or
inc
mov
add
pop
cmp
jo
and
mov
inc
sbb
test
xor
add
test
adc
mov
and
movs
call
dec
add
and
xchg
add
add
mov
ret
nop
movs
add
push
xor
fwait
movs
das
sbb
add
add
add
add
jg
nop
push
add
xchg
data16
mov
gs
lds
pop
sub
inc
pop
aaa
sub
jo
xor
add
push
add
add
and
pop
nop
pop
add
jmp
(bad)
sub
movs
add
mov
or
jmp
retf
and
push
mov
jmp
mov
mov
and
add
fucomip
or
test
add
addr16
inc
ret
(bad)
jmp
cmp
and
add
push
push
sar
das
in
add
xchg
add
add
add
cmps
inc
js
test
add
add
addr16
data16
movs
cld
rcr
add
mov
and
add
mov
add
mov
mov
jmp
mov
jb
call
and
push
add
xchg
add
jge
popf
and
add
jnp
add
or
add
mov
adc
cld
add
dec
test
lods
add
mov
call
lods
add
and
add
add
jns
jmp
mov
jmp
mov
in
sbb
jae
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
nop
nop
nop
nop
nop
nop
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
jmp
call
mov
call
call
mov
call
call
xor
lea
pop
pop
pop
pop
ret
jmp
nop
mov
ret
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
or
add
test
and
xor
ret
mov
add
push
mov
push
mov
sbb
mov
popa
cmp
mov
mov
aaa
xchg
mov
cmp
push
je
(bad)
icebp
jmp
xchg
inc
inc
stc
lea
mov
fcom
sub
add
mov
and
pop
les
shl
pop
movd
adc
add
fild
cmp
mov
(bad)
rcr
and
add
hlt
add
push
(bad)
add
adc
cmp
xor
fisttp
(bad)
ror
or
jmp
mov
add
rol
test
add
add
leave
or
jb
adc
cmp
mov
jg
jmp
rol
out
jmp
dec
and
je
jmp
mov
sub
cdq
mov
(bad)
cmp
int
add
add
xchg
and
sti
push
sbb
add
test
or
add
add
adc
sbb
mov
in
add
jmp
mov
(bad)
int3
(bad)
outs
xor
dec
setns
add
jo
sbb
xchg
inc
inc
adc
add
add
add
nop
ficom
inc
add
jmp
fwait
inc
and
enter
cmp
ret
or
pop
ffree
(bad)
or
popf
dec
and
cwde
xchg
sub
adc
inc
and
jg
or
sbb
and
sub
mov
cmp
js
ret
(bad)
loopne
add
add
push
pop
dec
cli
mov
je
or
add
sbb
adc
jae
sbb
fcomp
push
(bad)
or
popf
inc
sub
push
(bad)
data16
inc
and
loop
jmp
xor
sbb
add
loopne
or
mov
and
inc
mov
add
ins
mov
add
inc
leave
sub
push
fcmovbe
mov
adc
dec
int
add
ins
popa
cmp
mov
xchg
aaa
mov
add
add
add
jae
in
push
bsr
aad
add
inc
jl
sub
dec
inc
and
jge
jmp
jmp
mov
mov
jp
and
add
add
or
inc
cdq
mov
jl
mov
add
dec
lea
push
or
(bad)
call
push
imul
fcmovb
stos
xchg
scas
sbb
mov
test
jl
inc
add
add
mov
mov
or
inc
(bad)
jl
lods
int3
or
mov
mov
push
add
icebp
push
jl
outs
sbb
adc
movs
mov
outs
jne
pop
movs
add
int3
and
add
mov
cmp
leave
jl
jno
add
test
sbb
and
int3
int
retf
inc
sub
pop
mov
jmp
popf
mov
jb
add
ror
pop
in
fistp
call
in
or
or
mov
cmp
cmovne
lahf
inc
xchg
jl
cmps
in
add
lea
out
add
fwait
jno
cdq
fstp
int3
inc
sbb
mov
add
sub
sti
dec
leave
pop
call
mov
cdq
xor
int3
cmp
lock
cmp
jne
nop
add
or
push
mov
(bad)
mov
dec
or
ja
int3
int
inc
sub
(bad)
push
out
push
mov
arpl
jb
add
inc
and
cmp
mov
and
dec
add
int
mov
add
and
add
xor
inc
or
add
add
mov
mov
add
(bad)
mov
jl
outs
dec
or
adc
in
mov
lea
pop
ret
jmp
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
aaa
lds
mov
push
sti
inc
sbb
rcr
ror
mov
mov
sbb
add
add
sbb
and
sub
xor
test
dec
push
fld
mov
sub
jl
pop
cld
fcom
cwde
add
xchg
clc
mov
retf
fisub
xor
xchg
test
cmc
in
add
add
mov
aam
mov
mov
push
test
add
(bad)
(bad)
push
cmp
addr16
add
inc
(bad)
pop
dec
mov
adc
pop
sub
adc
dec
and
jmp
lea
push
mov
and
jge
adc
jno
cmc
add
or
add
add
dec
and
mov
pop
or
inc
sub
xor
inc
mov
jmp
fiadd
lea
cmp
pop
lds
add
xchg
or
cvttps2pi
pop
inc
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
pushf
xor
popf
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
add
shl
add
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
sub
mov
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
seta
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
cmp
seta
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
pushf
mov
xor
popf
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
pushf
mov
xor
popf
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
call
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
call
mov
sub
mov
call
add
mov
jmp
mov
pop
ret
mov
mov
call
mov
call
mov
mov
jmp
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
leave
push
add
mov
test
add
mov
mov
push
add
mov
mov
mov
pop
sar
jo
mov
or
hlt
push
mov
test
rcl
aad
int3
and
iret
sbb
(bad)
test
add
add
jmp
mov
(bad)
xor
cmp
fiadd
add
add
jmp
pop
test
add
add
mov
pmullw
dec
cmps
std
jmp
mov
sub
mov
fadd
iret
sbb
add
fld
add
jo
and
mov
mov
imul
mov
sub
add
(bad)
and
add
hlt
add
fwait
mov
dec
fist
les
add
rcr
push
mov
mov
add
add
adc
test
add
mov
(bad)
ja
add
aad
test
iret
sbb
repz
pop
add
int
add
std
jmp
cmp
sub
mov
div
aad
(bad)
out
add
add
add
xor
jo
test
add
pusha
rol
in
mov
je
jmp
mov
add
sub
mov
test
xor
sti
pop
test
sub
mov
je
and
pop
add
mov
test
add
add
mov
jg
hlt
loop
xor
pop
test
mov
jnp
adc
or
xor
add
add
jo
inc
add
cmp
movs
dec
jmp
and
add
test
add
arpl
repnz
add
pop
add
hlt
mov
xchg
xor
xchg
shl
(bad)
mov
iret
sbb
and
add
sti
or
mov
inc
ins
pop
test
xchg
jmp
pusha
jmp
cmp
hlt
add
sub
mov
stc
(bad)
xor
aad
mov
mov
mov
outs
xchg
push
retf
mov
and
outs
(bad)
cld
scas
pop
add
dec
add
add
fldenv
hlt
ficomp
mov
jge
and
pand
inc
mov
test
int3
jmp
loop
add
in
scas
mov
sub
pmullw
std
add
pusha
mov
add
inc
dec
sbb
mov
not
add
mov
sub
inc
and
inc
and
add
add
add
jmp
adc
rol
fsub
inc
fwait
inc
xor
add
dec
iret
mov
add
mov
pmaxub
(bad)
add
mov
jne
inc
push
fiadd
mov
sti
mov
in
ltr
sub
scas
add
inc
xor
test
add
les
xor
cmp
mov
and
cld
adc
push
ret
add
inc
add
mov
rcr
and
push
test
add
adc
jmp
hlt
push
add
shl
mov
fcmove
jmp
sti
add
add
sub
cs
and
repnz
daa
add
fld
cmp
mov
inc
add
and
pcmpgtd
add
mov
pop
add
sub
shl
xor
inc
and
movd
add
jmp
push
clc
add
sar
mov
mov
push
aaa
retf
adc
div
cmp
pop
prefetch
or
movs
add
add
bound
xor
test
add
js
mul
movs
(bad)
jmp
mov
jbe
xchg
fld
loope
mov
xchg
jmp
add
test
add
jmp
dec
(bad)
sub
sysenter
and
hlt
add
pop
inc
retf
and
mov
add
add
and
dec
add
mov
mov
call
mov
call
sub
imul
mov
sub
add
or
movs
dec
sti
xor
and
add
ss
add
push
and
add
add
fs
cli
add
mov
mov
mov
mov
and
add
cmp
popa
or
mov
sbb
add
add
sbb
(bad)
call
call
pop
mov
in
or
dec
cmps
mov
add
mov
call
xlat
in
inc
xor
and
add
ror
dec
add
cdq
and
add
(bad)
out
adc
jmp
mov
mov
sub
and
jmp
add
dec
repz
aad
jb
add
adc
mov
cmp
cmove
jns
movs
add
add
mov
mov
mov
cmp
rcr
jg
sub
add
add
std
add
stc
mov
hlt
mov
mov
mov
call
call
inc
test
sbb
(bad)
jb
test
mov
test
add
jmp
mov
cmp
cmp
iret
add
mov
dec
sbb
add
add
add
mov
mov
jne
mov
retf
pop
int3
and
sbb
and
sti
add
dec
add
pop
std
add
mov
mov
or
sbb
add
mov
and
add
add
test
add
add
ficomp
sub
dec
jmp
ret
push
add
cmp
in
(bad)
jmp
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
sar
mov
and
mov
in
scas
add
sub
mov
mov
mov
sub
mov
add
push
rol
fld
cmp
and
jmp
ins
inc
jmp
dec
pusha
and
or
(bad)
movs
add
cld
arpl
push
add
or
fisttp
jo
out
add
add
add
jmp
mov
add
xor
jmp
pop
mov
adc
neg
addr16
gs
push
or
add
jmp
jmp
mov
mov
mov
sub
and
mov
int
inc
iret
repz
adc
in
sti
jmp
cld
adc
add
add
add
inc
or
and
jmp
lds
add
mov
jmp
mov
and
jno
jle
or
.byte
jmp
