cs
inc
add
add
inc
outs
outs
ins
gs
outs
add
add
fsubr
(bad)
inc
gs
jb
lea
sub
add
jns
gs
jmp
mov
inc
adc
push
push
je
imul
in
pop
and
add
inc
das
retf
cmps
imul
idiv
outs
xchg
cs
pop
push
dec
bound
arpl
dec
ret
mov
pop
or
pop
cmp
enter
pop
xor
and
and
and
adc
or
cmp
enter
sar
leave
xchg
sbb
sbb
in
sar
outs
clc
iret
inc
in
rcl
mov
call
pop
xchg
sub
inc
and
add
mov
and
mov
sbb
arpl
in
loopne
fmul
leave
xchg
sbb
aam
shl
fistp
int3
push
mov
add
push
jmp
push
mov
jne
xor
pop
mov
(bad)
(bad)
(bad)
fisttp
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
(bad)
ins
and
sub
add
push
mov
mov
dec
sti
neg
in
cld
test
dec
mov
mov
mov
add
xor
mov
inc
add
mov
sbb
or
div
push
mov
push
push
outs
(bad)
dec
mov
mov
mov
imul
ja
or
push
or
ret
adc
test
(bad)
ins
push
add
add
jmp
add
pcmpeqw
dec
push
mov
cmp
jne
(bad)
mov
adc
test
mov
xor
pop
xchg
mov
imul
mov
dec
cmp
jb
mov
add
call
mov
addr16
bound
jne
mov
fadd
pop
sub
jnp
cmp
jmp
sub
ins
sar
add
iret
cs
sub
jmp
mov
push
or
jnp
(bad)
stc
mov
sub
mov
daa
jnp
pop
aam
test
or
jmp
fld
sbb
sti
jne
or
mov
mov
(bad)
jmp
jge
mov
inc
and
push
push
xor
call
mov
test
je
mov
mov
out
xchg
adc
jecxz
add
aam
add
mov
mov
mov
mov
fs
in
sbb
push
push
jne
js
fld
and
cmp
jbe
inc
mov
fld
mov
mov
loop
inc
gs
xchg
mov
mov
add
mov
sbb
dec
jmp
bnd
out
ja
mov
add
jnp
jp
sbb
cmp
mov
(bad)
jbe
add
jnp
test
or
add
xchg
(bad)
fild
mov
add
or
in
fcmovnu
jl
mov
dec
in
loope
xlat
jns
sub
rol
adc
hlt
mov
ror
lock
mov
add
push
mov
imul
inc
sub
mov
into
cmp
pop
sbb
nop
jbe
mov
cmp
or
push
push
push
cmp
xchg
adc
sti
push
push
ror
jmp
ss
fmul
ss
mov
call
mov
nop
fcmovne
out
popf
jmp
dec
xchg
and
inc
test
mov
std
and
and
add
mov
sbb
es
sbb
inc
inc
add
cwde
jno
add
and
out
lea
cmp
hlt
sbb
je
and
jns
jmp
cmp
jg
jp
into
aam
xlat
pop
push
add
mov
nop
dec
inc
dec
inc
ds
mov
(bad)
add
mov
cmp
movs
adc
push
dec
cwde
je
adc
enter
push
jp
pop
ja
ds
fisttp
push
cmp
add
imul
ja
jle
test
pop
shl
cmp
pop
add
add
popa
xchg
xor
or
enter
sub
fbstp
adc
xor
jmp
lahf
mov
jne
mov
dec
jmp
imul
xlat
adc
sbb
xlat
cmp
fdiv
dec
and
inc
nop
dec
js
dec
or
pushf
xchg
in
pop
dec
(bad)
jg
or
and
sbb
jmp
lods
lea
cmp
jae
mov
cmp
inc
add
mov
mov
(bad)
ret
mov
cmps
jae
cmp
cmc
add
cmp
sbb
fstp
pop
lea
inc
sbb
aas
sti
outs
mul
mov
push
cmp
fstp
or
in
dec
mov
in
or
mov
clc
bswap
(bad)
fcmovnu
popf
mov
add
mov
adc
xor
cmp
sar
add
ret
mov
mov
pop
mov
push
int3
xchg
xchg
ret
fbld
cdq
in
pop
sti
mov
push
and
add
bnd
shl
sbb
xor
out
pop
add
les
(bad)
popa
mov
pusha
xor
mov
adc
inc
ret
mov
neg
xor
nop
xchg
sbb
sbb
in
and
fist
add
icebp
jne
adc
stc
fsub
cmp
inc
in
aaa
add
add
int3
mov
jmp
(bad)
retf
push
fst
adc
xor
add
icebp
(bad)
neg
pushf
ret
jmp
dec
in
shl
pop
ret
or
repz
cmp
data16
(bad)
ret
mov
(bad)
call
add
sbb
mov
jl
(bad)
into
sbb
push
sar
mov
jnp
mov
adc
inc
mov
add
loop
jecxz
or
adc
ss
push
or
fsub
or
dec
or
pop
jg
ret
inc
inc
sbb
add
cmp
add
in
sub
push
enter
ret
ins
push
xor
pop
add
popa
fbld
inc
cmps
jb
(bad)
cmp
sbb
push
jnp
add
push
arpl
pop
pop
and
xor
or
pop
add
add
adc
sub
dec
or
add
or
scas
or
push
push
pop
add
and
pop
lods
mov
and
mov
sub
(bad)
jg
clc
sub
fbstp
fld
add
ror
cld
jmp
adc
dec
mov
test
fimul
pop
jb
(bad)
rcl
cmps
xor
or
or
ret
cmp
xchg
add
push
xchg
out
mov
push
push
add
sub
jo
dec
shl
aaa
mov
in
(bad)
lods
fs
hlt
rcl
or
pop
rcl
icebp
(bad)
mov
sbb
cmp
inc
or
loopne
ins
aam
pop
push
sub
cmp
or
push
or
test
pop
mov
push
mov
sub
int
or
call
sub
adc
iret
xor
xor
push
push
and
(bad)
loope
or
movs
mov
dec
or
dec
and
sub
push
mov
cmp
xor
inc
(bad)
pop
push
repz
dec
(bad)
call
sbb
js
and
jo
sub
mov
lods
lea
jle
rcr
aam
lock
push
dec
dec
mov
xchg
push
mov
dec
and
fsubr
ret
dec
mov
repnz
pop
cdq
jmp
clc
add
das
inc
pop
rcl
or
xor
or
mov
fidivr
jno
ds
mov
or
loope
(bad)
pop
jg
pop
inc
xor
das
fcom
pop
je
pop
jmp
adc
mov
push
push
jne
or
hlt
pop
mov
movq
jne
movs
sub
jge
adc
sbb
or
add
add
jge
sahf
and
dec
hlt
push
sub
adc
rol
(bad)
xchg
mov
ins
mov
cmp
lods
sbb
sbb
dec
pop
jmp
and
outs
sub
add
or
xor
jge
aad
or
test
inc
hlt
and
and
inc
gs
add
inc
xor
adc
(bad)
xchg
in
mov
ret
test
popa
das
jl
xor
scas
inc
push
shl
sub
lea
xor
mov
mov
mov
test
pop
or
add
or
fadd
sbb
pop
sbb
adc
loope
sbb
pop
pop
or
add
xor
ins
rcl
mov
xchg
xchg
test
(bad)
int
sub
push
inc
cmp
xchg
(bad)
pushf
je
pop
jne
test
ss
call
clc
mov
test
punpckhbw
ror
or
ins
dec
dec
adc
mov
setbe
push
inc
mov
pop
or
or
out
or
imul
call
rol
mov
add
cmp
pusha
(bad)
ret
test
sbb
adc
mov
pusha
adc
mov
add
loopne
xchg
std
sti
or
or
jmp
outs
pop
mov
add
jl
or
or
push
ret
ror
popf
nop
sub
sbb
enter
iret
shr
mov
out
mov
mov
sub
jge
test
jno
(bad)
cmp
clc
mov
adc
rcl
stos
or
into
(bad)
xor
or
or
cmp
add
sbb
xchg
and
push
sub
test
adc
or
add
push
test
mov
test
fnstenv
push
push
pop
xor
push
or
adc
dec
in
(bad)
pusha
addr16
cmp
jl
in
jbe
out
int
or
sbb
mov
add
(bad)
or
ss
add
fstp
and
aam
fbstp
or
add
or
jge
lods
popf
fwait
push
ret
jno
test
scas
fs
fadd
ror
dec
shl
cs
stos
pop
in
add
push
cmp
xchg
jmp
and
fcom
jne
add
test
ret
or
pop
pop
mov
sbb
stos
jg
add
sbb
jp
pop
add
dec
popf
adc
pop
fdivr
dec
fiadd
pop
movs
ss
ret
arpl
push
inc
push
ins
push
jge
sbb
adc
xchg
and
mov
sbb
cmp
fs
inc
and
push
cmp
adc
call
or
dec
pop
xor
pop
in
je
bound
inc
je
mov
test
stc
leave
je
xchg
sbb
enter
pop
cmp
mov
xor
mov
ret
sub
(bad)
sbb
test
jmp
add
adc
cdq
outs
mov
jns
out
jg
nop
scas
daa
shl
int3
outs
stc
cmp
or
aas
ins
retf
or
mov
cmp
iret
jge
sbb
mov
mov
and
sbb
mov
fsubr
(bad)
in
pop
push
je
push
push
push
cmp
jne
and
outs
jnp
rcl
sub
add
pop
stos
pop
rcr
sub
push
scas
nop
or
cmp
pop
lahf
sub
and
fsub
ss
pop
mov
mov
or
div
je
nop
call
mov
mov
and
rep
mov
je
cld
lea
fistp
jle
adc
sbb
add
pop
jecxz
jmp
jb
cmp
ja
sub
dec
sub
fucomip
ret
jnp
pop
pop
xlat
sbb
push
push
cli
jp
mov
daa
fdivr
mov
rcr
sub
outs
dec
data16
add
(bad)
shl
pop
loope
jle
cmps
mov
pop
cmp
adc
test
sub
addr16
out
shr
pop
shl
sbb
pop
and
fnstcw
cwde
jecxz
neg
cmp
(bad)
add
and
or
mov
lahf
push
mov
and
dec
mov
(bad)
sbb
dec
je
dec
rcr
jo
enter
(bad)
outs
sub
not
into
shr
es
mov
cmp
scas
icebp
fnstenv
dec
ja
mov
or
fsin
or
or
loop
push
or
aaa
sub
pop
dec
push
mov
cmp
jne
sub
in
jg
mov
cmp
jne
or
add
fld
pop
pop
cmp
cmp
jne
shr
ror
sub
jmp
or
cld
ret
in
retf
mov
shl
add
nop
or
stos
mov
std
mov
stos
pop
out
fld
or
test
or
jo
xor
or
loop
mov
mov
rcr
mov
jle
xor
div
cdq
xor
icebp
neg
cli
mov
jmp
mov
inc
mov
pop
jmp
sub
jle
dec
push
outs
ins
mov
mov
inc
dec
jne
daa
sbb
mov
push
sbb
jl
fild
imul
int3
add
push
inc
repnz
sbb
and
add
sub
je
pop
retf
retf
iret
and
je
pop
je
xor
daa
adc
das
je
jge
(bad)
in
pop
add
adc
ja
cmp
ja
lea
add
add
mov
dec
out
int
imul
idiv
or
fdivr
js
pop
sub
jmp
inc
and
pushf
mov
add
sub
pop
std
gs
dec
and
pop
adc
or
leave
push
add
aad
movs
and
pop
dec
pop
xor
mov
(bad)
or
clc
clc
lock
inc
mov
fsub
cmp
call
adc
lea
pop
lea
fld
mov
call
lahf
cmp
es
lds
add
popa
xlat
adc
mov
jns
pop
sub
push
jge
jge
inc
cmp
repnz
xor
sbb
mov
push
fstp
fld
add
out
(bad)
pop
adc
aas
mov
pslld
pushf
or
daa
pslld
mov
adc
xchg
lahf
cld
and
sbb
add
aas
inc
mov
mov
pop
jnp
out
xor
xchg
sub
or
out
jmp
xor
leave
sbb
mov
int
inc
jbe
imul
cmp
mov
(bad)
mov
bound
dec
lods
inc
cmp
xlat
fadd
outs
xor
xchg
call
aas
push
push
int3
into
sbb
ror
mov
push
pop
test
(bad)
(bad)
inc
movs
sbb
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
outs
mov
jmp
test
lds
iret
dec
js
inc
sub
(bad)
jmp
loopne
jmp
xchg
test
stos
pop
out
sub
imul
(bad)
div
das
cld
jmp
jl
xor
cmp
call
mov
push
inc
mov
push
das
lock
call
cld
sar
repnz
test
nop
fist
lahf
nop
(bad)
(bad)
(bad)
inc
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
(bad)
(bad)
(bad)
(bad)
jmp
ds
push
cmps
scas
mov
pop
or
add
jmp
(bad)
(bad)
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
mov
popa
stos
(bad)
(bad)
mov
mov
(bad)
repz
mov
sub
and
call
les
outs
bound
xor
and
cmp
push
jae
sbb
cmp
jne
mov
in
sbb
add
mov
jb
sbb
nop
jg
movzx
loop
mov
(bad)
(bad)
push
xor
push
nop
mov
test
pusha
jl
(bad)
jae
sub
xor
cld
hlt
mov
jbe
push
xor
add
xor
jo
or
mov
pop
jp
push
push
clc
sub
or
mov
xchg
or
or
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
(bad)
cld
(bad)
jmp
jo
imul
push
dec
popa
jae
push
popa
ins
jne
fninit
fldcw
cmp
mov
or
pop
mov
xor
mov
inc
or
jae
fdiv
add
adc
loopne
inc
test
push
xchg
cmp
sbb
(bad)
xor
and
aaa
test
outs
xlat
or
push
pop
jl
invd
aam
xchg
outs
and
pop
in
add
int3
aaa
jo
mov
or
push
cld
ret
pusha
sub
mov
js
and
sbb
cmp
sbb
ja
fld
mov
adc
mov
mov
ffreep
movs
sbb
in
cmp
je
pop
mov
rcr
push
mov
xor
ucomiss
jnp
dec
jne
jne
fist
ins
mov
(bad)
jbe
xor
pop
cs
xor
sbb
int
and
push
lock
sub
mov
mov
jge
jle
or
push
sqrtps
push
cld
add
push
pop
(bad)
sub
mov
jo
pop
cmp
add
ror
push
pop
stos
int
jne
inc
jmp
jo
sahf
dec
add
xor
mov
pop
popfw
rol
ss
mov
(bad)
cld
pop
xchg
icebp
pop
jmp
pop
sbb
cmp
or
ds
xor
hlt
repnz
fs
lock
add
or
inc
add
push
mov
dec
or
mov
pushf
sub
mov
pop
push
aas
mov
push
pop
pop
jo
or
adc
push
clc
jge
jl
retf
or
out
mov
cli
or
adc
mov
fcom
and
add
rol
cli
in
(bad)
mov
not
add
outs
xor
sbb
sbb
add
add
jge
push
push
pop
push
push
mov
adc
mov
mov
cmp
sbb
not
cld
sub
inc
inc
jmp
add
iret
call
and
pop
cmp
push
mov
push
push
jae
pushf
pop
loop
ficomp
into
mov
sbb
arpl
test
add
arpl
fisubr
mov
jnp
cmp
and
outs
shl
mov
neg
xor
icebp
jecxz
add
(bad)
mov
cmp
je
movs
adc
xchg
or
ja
sbb
dec
ins
mov
fadd
and
fs
or
add
adc
push
and
push
cmp
je
or
ret
cmc
adc
sbb
xchg
ficom
mov
sbb
sbb
dec
cmp
add
add
sti
sbb
add
sub
dec
sub
jmp
xor
adc
lahf
movs
outs
add
sbb
push
mov
popf
jmp
das
ds
stc
div
dec
dec
inc
add
xor
loop
mov
mov
stos
popa
aaa
xchg
mov
or
push
push
push
push
push
inc
pop
pop
arpl
xor
ins
mov
pusha
pop
cmp
(bad)
pop
mov
mov
xor
lahf
xchg
inc
or
pusha
add
lahf
mov
aam
jecxz
out
shr
retf
mov
adc
pusha
xchg
ror
fild
xchg
mov
sub
jmp
ret
ins
shl
loopne
fnsave
sbb
leave
ret
pop
mov
pop
add
sub
pop
cmp
std
pop
outs
out
sub
adc
pusha
add
das
stc
aas
sub
jb
je
jmp
cmp
cmp
fbstp
and
cmp
cmp
nop
jmp
mov
jmp
mov
es
jmp
mov
jmp
mov
jmp
push
mov
shl
inc
aaa
cli
(bad)
or
dec
xor
shr
push
or
pop
stos
add
mov
or
sbb
je
sub
xor
fsubr
dec
sbb
adc
sbb
gs
cli
cli
lahf
pop
jae
adc
cld
out
or
jge
lahf
or
test
retf
sub
fnstcw
push
adc
and
push
dec
mov
mov
sbb
in
je
push
ficomp
or
sbb
loopne
out
and
add
jns
add
or
inc
aaa
dec
aad
add
mov
idiv
xor
add
add
xor
jle
dec
mov
and
aas
mov
call
adc
xor
xchg
fisttp
xor
(bad)
xchg
loopne
cmp
js
ds
cmp
jle
add
inc
mov
nop
ja
cmp
jg
mov
sbb
cmp
fidivr
loopne
mov
inc
dec
mov
cli
or
ret
idiv
je
mov
push
mov
add
mov
(bad)
cmp
dec
jne
pop
pop
mov
cli
add
xchg
es
lds
sub
nop
mov
add
cld
push
clc
push
idiv
add
(bad)
loopne
sti
ror
cmp
jmp
mov
mov
or
fisttp
dec
out
ret
cli
out
cmc
xchg
push
pop
sbb
inc
scas
pop
sbb
push
add
mov
mov
and
push
pop
inc
mov
sbb
or
xor
adc
ret
sbb
clc
shl
xor
shl
mov
push
push
mov
fstp
push
lods
rol
sub
cmp
add
shl
add
or
mov
mov
jnp
cmp
push
cmp
adc
mov
pop
mov
call
adc
movs
adc
in
fcomp
dec
and
int3
adc
inc
mov
xor
jo
out
pop
mov
adc
add
mov
cmp
sub
cmc
adc
clc
bound
push
mov
xor
fistp
push
out
es
cmp
cmp
in
or
sub
xchg
or
lds
sti
popa
out
cmp
inc
dec
mov
inc
(bad)
clc
xchg
gs
push
push
dec
jl
lock
mov
mov
push
and
sub
mov
mov
jne
pop
pop
pop
fdiv
and
inc
jg
pop
inc
jo
push
out
or
mov
imul
jmp
cmp
xchg
dec
push
test
mov
and
xchg
adc
inc
das
ins
loopne
push
rcr
inc
add
aad
mov
jb
iret
add
fcmovne
sbb
clc
xchg
stc
mov
dec
or
push
lock
out
call
mov
or
or
or
or
pop
push
jo
stos
add
movs
inc
push
jmp
inc
jmp
lea
cmp
mov
jge
push
shl
mov
mov
sub
mov
add
xchg
(bad)
mov
xchg
out
sub
popa
shr
sub
fdiv
jge
xor
jl
xor
push
cmp
call
xor
and
or
pop
fiadd
je
add
jmp
ret
sti
fucomi
inc
add
jmp
jmp
imul
and
pop
add
fisttp
add
in
add
cmp
daa
mov
sub
mov
sub
ins
repnz
ins
not
cwde
shr
rcr
pop
jne
ins
popa
add
add
lods
sbb
sbb
jb
pop
mov
les
das
push
push
cld
add
bound
mov
adc
bound
cmc
(bad)
iret
inc
popa
imul
adc
(bad)
jbe
inc
jb
cmp
sub
ror
pop
int3
inc
cld
adc
gs
pop
dec
call
fld
push
push
pop
lsl
inc
jle
mov
inc
jo
retf
mov
pop
mov
push
xor
mov
(bad)
dec
or
or
loop
dec
stos
add
push
mov
es
jle
aas
fist
pop
jae
ja
mov
loope
sbb
add
dec
jmp
xchg
push
mov
repnz
mov
or
add
mov
lds
inc
imul
dec
xor
(bad)
out
pop
xchg
pop
lea
loopne
mov
pop
jmp
push
(bad)
push
mov
sub
ja
add
push
sar
push
mov
pop
dec
dec
add
pop
mov
push
dec
inc
or
add
in
dec
mov
fbld
sub
inc
pop
out
div
adc
jecxz
and
mov
add
jmp
pusha
jmp
push
adc
mov
dec
rcl
adc
inc
mov
jle
sbb
mov
in
je
push
(bad)
xchg
(bad)
cmp
adc
in
stos
sbb
inc
xor
cdq
out
inc
ret
retf
pop
pop
sub
lock
icebp
es
jl
cmp
jge
sub
xchg
jl
mov
xchg
add
ins
stc
or
shr
in
jmp
mov
pop
ffreep
das
data16
ret
mov
xor
sub
pop
clc
jle
sub
fnstcw
and
stc
add
lea
mov
daa
push
push
or
scas
out
xchg
dec
stos
ja
jbe
push
lds
dec
jge
cmp
inc
xlat
mov
lock
xor
fdiv
mov
outs
sub
das
clc
push
add
inc
pop
sub
xor
add
mov
inc
dec
xor
push
in
aaa
jge
dec
cld
push
ss
js
mov
inc
cmp
mov
sbb
sbb
in
pop
fwait
outs
add
push
adc
clc
mov
(bad)
pop
adc
(bad)
dec
jle
jae
mov
cmp
sbb
push
sbb
mov
mov
push
mov
jmp
ja
sub
push
inc
add
jl
icebp
dec
push
xchg
xor
arpl
or
or
and
imul
call
cmps
xchg
mov
mov
or
mov
retf
packssdw
repz
sbb
adc
push
inc
xor
jp
das
or
jg
sahf
dec
add
mov
pop
and
push
or
mov
stos
test
js
inc
mov
mov
sub
mov
cmp
and
fistp
std
cmp
je
cmp
jno
pushf
jbe
cvttps2pi
adc
mov
out
add
cli
and
data16
or
icebp
aas
inc
sbb
test
jmp
in
xlat
fcmovb
sbb
js
outs
adc
sub
inc
xor
cmp
mov
or
add
dec
rcl
les
pop
xor
call
sbb
lock
inc
add
sub
repnz
mov
push
sbb
jmp
das
jp
jmp
cmp
or
xor
or
cld
fidiv
push
add
sar
add
cwde
mov
(bad)
jg
popf
or
push
adc
and
add
je
or
jo
sbb
stc
and
arpl
xor
push
aas
jmp
adc
pushf
sub
in
lea
clc
mov
jo
gs
mov
add
dec
fcom
packssdw
or
xor
dec
mov
sbb
adc
popa
in
in
pop
cmp
push
dec
inc
in
js
push
mov
xlat
icebp
dec
jne
lods
sbb
jle
xlat
repz
std
ins
and
mov
test
push
jb
enter
aaa
pusha
mov
dec
jne
cmp
inc
jbe
xor
cs
jmp
jnp
sub
adc
data16
test
add
or
imul
std
add
pop
and
jmp
pop
arpl
les
clc
les
sub
pop
sub
add
add
iret
gs
std
sar
or
mov
fist
es
ja
mul
mov
push
dec
cld
add
fild
retf
xor
push
and
pop
sbb
sbb
leave
fild
xchg
push
mov
sti
pop
or
mov
(bad)
movs
fidivr
sbb
repnz
sbb
adc
mov
fistp
xor
shl
rcl
rcl
rcr
out
jb
xlat
cmp
jb
(bad)
jmp
sbb
inc
loop
pop
test
mov
inc
push
repz
data16
sar
pop
dec
add
imul
fist
mov
mov
hlt
xor
int3
aam
or
xor
sbb
jmp
jl
(bad)
jns
push
add
inc
or
jmp
cmp
jne
mov
mov
and
sub
je
adc
ins
shr
mov
cs
bswap
mov
fnstsw
sbb
inc
xor
jmp
adc
stc
push
jb
out
jge
fsubr
pop
sub
jmp
push
jno
xchg
or
jmp
push
(bad)
not
aaa
aaa
or
lds
loopne
inc
adc
mov
push
xor
xor
cs
cdq
pop
data16
fld
scas
add
adc
loope
sub
fisubr
(bad)
shl
in
push
rcl
mov
rol
sub
xchg
cmp
bound
dec
inc
leave
cmps
out
call
das
jg
leave
imul
or
stos
cdq
(bad)
and
jmp
xchg
hlt
xchg
or
cmp
inc
into
or
add
pushf
sar
push
fsubr
add
adc
mov
daa
jmp
xchg
or
xor
(bad)
jge
stos
dec
lds
or
push
adc
mov
adc
pop
in
push
push
mov
sbb
cmp
scas
mov
add
mov
push
sbb
inc
inc
mov
push
pushf
inc
aaa
daa
cmp
xor
ins
xor
xor
repz
add
jns
bound
push
call
ins
jnp
jmp
call
popa
fild
call
or
mov
jo
pop
cmp
xor
jge
jge
inc
cmp
addr16
push
dec
add
lock
adc
loopne
push
in
scas
loopne
pop
dec
push
mov
mov
outs
mov
mov
lods
fld
jge
add
sub
in
inc
outs
or
leave
mov
and
push
fcmovu
(bad)
push
iret
adc
push
test
push
arpl
out
jmp
out
add
cmp
mov
jg
in
push
lock
jno
pop
imul
ins
add
push
cmp
fisubr
jle
int3
or
dec
dec
cmp
pop
pop
test
rol
ins
or
iret
sbb
push
int3
ret
fadd
je
cmovg
mov
in
mov
aam
sbb
inc
mov
(bad)
pop
daa
mov
je
push
push
push
and
pop
shl
imul
mov
adc
mov
les
inc
inc
shl
pop
leave
aaa
cmp
ss
icebp
add
(bad)
cmp
add
inc
fisttp
mov
adc
push
cmp
jge
xor
shr
mov
add
or
or
daa
or
adc
or
pop
mov
imul
mov
ret
inc
ins
les
jmp
add
out
(bad)
xor
scas
push
clc
adc
push
lock
push
sahf
and
es
(bad)
cmps
jmp
or
lods
push
or
fld
mov
jo
pop
js
pop
fld
ds
add
ret
push
pop
xchg
adc
ret
fisttp
pop
adc
shl
jne
bound
pop
push
push
lea
pop
test
arpl
add
(bad)
rol
sub
rol
rol
cli
cmps
jg
in
adc
xor
xor
fistp
retf
int3
mov
inc
outs
jae
adc
fist
je
or
pop
loop
neg
movs
(bad)
add
inc
cmp
test
out
pop
mov
push
sub
or
gs
pop
aas
inc
leave
test
test
es
jmp
mov
jb
gs
xor
cs
ins
or
(bad)
(bad)
jg
gs
outs
outs
addr16
popa
je
dec
popa
ins
gs
adc
loopne
mov
jecxz
fisubr
inc
out
adc
push
adc
retf
rcr
push
and
sub
push
and
mov
fcompp
cs
jns
mov
addr16
inc
call
mov
mov
addr16
mov
add
add
add
dec
clc
daa
mov
pusha
dec
push
in
pop
mov
push
repz
adc
mov
test
jge
pusha
shl
add
or
mov
add
cmp
ins
ret
jle
push
(bad)
fdiv
or
xlat
inc
inc
mov
pop
imul
iret
push
test
push
cmp
sti
cmp
je
pop
aaa
cs
pop
repz
cmc
add
sbb
xor
mov
je
popa
jb
jg
out
arpl
popa
ins
gs
sbb
or
fwait
and
adc
mov
data16
cmp
mov
ins
xor
clc
mov
and
or
iret
pop
fs
test
add
jb
mov
sbb
xor
cs
dec
push
push
jb
push
daa
dec
(bad)
shl
jge
add
jo
mov
adc
mov
push
push
mov
lods
push
and
jmp
jg
mov
ds
je
or
sbb
push
adc
adc
mov
add
aam
loopne
fisttp
push
push
mov
jo
pop
mov
inc
mov
or
pop
cmp
aad
add
add
sar
shl
add
mov
dec
sar
aaa
call
xchg
das
enter
sar
bound
ficom
sub
dec
add
icebp
mov
add
push
xchg
inc
xchg
sbb
pop
lea
push
push
popa
push
xor
adc
fdivr
sub
cld
adc
call
out
mov
xor
xor
pop
repnz
cld
scas
dec
inc
ja
and
clc
or
repnz
add
dec
pop
mov
test
int3
push
clc
pop
sub
out
jae
or
add
sbb
add
and
jmp
or
fs
sahf
and
dec
mov
or
mov
jle
sbb
mov
clc
mov
adc
cmp
nop
and
cmp
cmp
jbe
mov
add
and
jle
and
mov
ror
push
mov
mov
mov
test
movs
inc
aas
nop
jae
(bad)
icebp
cmp
mov
cmp
push
inc
sbb
jmp
inc
outs
jl
push
mov
adc
je
xor
test
xchg
lea
add
cmp
sub
aaa
fsub
ret
mov
jb
jno
stos
outs
sbb
pusha
aas
fsub
addr16
pop
jb
mov
sbb
(bad)
fisub
inc
inc
mov
mov
das
mov
mov
and
rcl
push
fs
push
cwde
aaa
icebp
ins
inc
cmps
in
clc
ins
inc
es
sub
enter
sbb
mov
nop
inc
mov
test
xchg
inc
push
movs
mov
push
cwde
xchg
add
in
push
jb
cld
ret
clc
push
popa
(bad)
sbb
xor
cld
or
sbb
inc
lea
cmp
or
lock
call
fsub
pop
(bad)
aam
xor
and
int3
enter
add
mov
mov
or
lods
test
or
mov
xor
and
and
and
and
or
pusha
pop
pop
push
or
enter
dec
xor
and
and
and
and
or
enter
adc
xor
and
or
cmp
and
daa
dec
sahf
cmp
ret
lock
xor
and
in
xor
and
xchg
or
les
or
repnz
les
pop
pop
xor
and
and
and
xor
or
enter
and
xor
and
sbb
xor
and
sbb
or
enter
add
cmp
and
cld
(bad)
clc
fs
inc
push
hlt
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
int3
enter
nop
inc
sar
mov
nop
inc
push
sbb
sbb
xchg
push
sbb
mov
inc
cmp
inc
push
je
jbe
add
jno
xchg
cmp
dec
jo
push
addr16
enter
ds
or
icebp
repnz
or
enter
div
enter
stc
cli
enter
sti
cld
std
and
loopne
or
enter
in
xor
and
out
xor
and
and
and
rol
rcl
aam
xor
and
(bad)
xlat
xor
and
and
and
rol
ret
les
enter
(bad)
xor
and
and
and
mov
or
enter
mov
xor
and
and
and
pop
ret
or
mov
dec
push
enter
pop
xchg
inc
jo
je
pop
repz
ror
call
xchg
mov
adc
push
sub
cmp
in
std
jg
inc
js
gs
imul
adc
cmp
addr16
jns
jnp
pop
inc
dec
gs
jo
nop
dec
pop
pop
aas
add
dec
pop
movs
or
dec
jne
inc
pop
inc
dec
dec
gs
outs
jb
mov
popa
neg
mov
or
outs
repnz
jb
add
add
inc
popa
add
retf
inc
popa
ins
xlat
pop
push
pop
xchg
pop
and
nop
mov
pop
mov
or
or
dec
pop
fs
adc
sub
pop
or
imul
nop
push
fs
adc
xchg
(bad)
rcl
push
jae
outs
jbe
jb
ins
outs
ja
pop
push
and
adc
pop
in
pop
sub
or
mov
je
push
bnd
pop
mov
pop
sub
sbb
or
imul
inc
and
mov
enter
pop
gs
push
and
or
and
ins
arpl
push
pop
fnstenv
outs
fs
nop
aam
sbb
cmc
inc
pop
xchg
xchg
ins
cli
and
outs
imul
or
pop
or
sbb
je
mov
sbb
test
icebp
inc
fldenv
xlat
call
pop
or
xchg
push
mov
jmp
sub
(bad)
and
dec
pusha
push
jb
ins
adc
xchg
pop
jecxz
mov
fbld
scas
push
je
arpl
nop
cld
xor
xor
mov
ins
inc
imul
cmovb
popa
push
popa
or
xor
mov
and
mov
or
fs
adc
xchg
sub
(bad)
retf
fdiv
mov
nop
or
ins
stos
data16
cmp
pop
enter
arpl
adc
popa
gs
ja
adc
aas
adc
cs
xor
fdivr
inc
push
dec
pop
or
jae
and
dec
(bad)
cs
add
and
add
and
cdq
and
cld
into
inc
sbb
retf
mov
mov
call
mov
(bad)
and
leave
jne
or
jns
neg
data16
push
repz
push
ret
fst
dec
hlt
or
or
cli
cmp
ret
push
or
sbb
sbb
pop
sub
sub
jbe
shl
add
div
dec
jne
xor
sar
push
movs
mov
neg
and
leave
pop
retf
lock
rol
inc
jmp
push
sub
fnstcw
outs
jmp
fnstcw
or
call
push
daa
and
imul
pop
(bad)
fild
fild
ret
dec
in
stos
mov
jle
fild
fild
ror
fild
stc
mov
ins
mov
mov
add
push
push
fcom
fstsw
sahf
jae
sti
pop
mov
ffree
ffree
ffree
ffree
pop
retf
mov
rcr
js
push
rcl
inc
xor
(bad)
and
inc
or
pop
xor
sub
dec
(bad)
rcr
mov
inc
lock
cmc
mov
sbb
cli
(bad)
push
xor
xlat
sub
add
add
and
push
or
cmp
rcl
sar
cwde
mov
cmp
cld
lock
lea
mov
xchg
cmp
shr
push
cmps
imul
add
clc
sbb
mov
sar
sub
ins
clc
pop
inc
call
xor
mov
movs
mov
inc
push
add
lock
push
ret
sub
jle
pushf
(bad)
xchg
push
adc
out
push
pop
mov
mov
fist
jbe
dec
add
retf
and
gs
inc
inc
sub
mov
mov
inc
fldcw
push
or
fldcw
pop
pop
fidiv
xor
ror
(bad)
fild
xor
adc
mov
cmp
add
mov
cmps
or
or
shl
cs
rcl
pop
or
add
ret
inc
adc
repnz
call
fadd
cmp
jbe
mov
cmp
dec
xchg
sub
pushf
dec
mov
add
daa
mov
shl
pop
or
test
push
sbb
mov
fild
shr
ins
mov
bound
xor
sbb
adc
call
pop
scas
(bad)
jo
mov
dec
pop
xchg
adc
ret
into
jmp
ret
add
clc
or
mov
stos
fmul
push
or
and
cmp
sub
jmp
(bad)
je
bnd
call
mov
sub
lods
gs
mov
jne
pop
ret
inc
lock
hlt
adc
lods
jmp
or
je
cmp
adc
mov
push
push
mov
cli
pop
add
add
fild
jge
dec
or
jae
push
jae
cdq
add
xchg
or
or
sbb
push
push
push
mov
mov
mov
push
stc
inc
cmp
or
sar
pop
push
cmp
ja
imul
mov
add
xchg
add
add
cmp
inc
fistp
jg
lds
cmp
jae
inc
sbb
je
leave
ret
and
mov
jg
lods
sbb
pop
jne
lea
loop
in
fimul
and
and
outs
mov
imul
sub
jnp
xchg
ja
pop
add
imul
(bad)
adc
or
jbe
pop
daa
icebp
hlt
dec
fsubr
sar
xlat
or
mov
fadd
loope
aam
cmp
sub
je
int
add
sbb
cli
cli
or
sub
push
in
jmp
xor
imul
adc
or
js
adc
and
std
stc
push
jne
push
bound
cmp
jbe
mov
push
add
xchg
cmp
lock
xor
and
lods
adc
jmp
mov
add
add
pop
fistp
popf
and
ins
aad
(bad)
pop
cmp
push
inc
(bad)
mov
or
add
or
ja
xchg
jecxz
imul
push
loopne
mov
mov
ds
lods
pusha
cmps
push
leave
(bad)
mov
ja
repz
mov
xchg
mov
aaa
cld
neg
mov
inc
je
mov
push
inc
je
mov
data16
mov
add
jp
ds
cli
push
div
sub
ret
mov
les
sbb
adc
fdivr
test
mov
pop
popa
jo
mov
and
movs
shl
neg
mov
jl
ret
sbb
adc
push
test
pop
iretw
lahf
mov
mov
(bad)
and
test
fs
daa
movhps
imul
or
dec
or
(bad)
push
and
xchg
rol
ret
jmp
jge
add
or
xchg
xchg
adc
pop
adc
add
add
add
mov
sbb
sbb
push
fs
daa
(bad)
dec
cld
lea
popa
mov
or
das
xor
cmp
jl
jmp
add
cmps
(bad)
push
xlat
add
lods
mov
jge
add
jmp
lea
or
jnp
pop
mov
inc
mov
iret
and
or
push
or
(bad)
push
or
movs
push
mov
stos
xchg
push
mov
movzx
xchg
mov
mov
mov
inc
dec
or
xchg
jg
dec
mov
sbb
inc
stos
cmp
jne
pop
pop
stos
aam
sub
mov
mov
fwait
jns
mov
jl
mov
cmp
(bad)
stos
push
adc
pop
xor
jge
xor
add
jbe
or
daa
in
add
jmp
mov
movzx
sbb
inc
shr
jmp
jecxz
pop
pop
lahf
lea
mov
mov
jmp
push
xlat
cs
ret
sti
add
jecxz
jge
ja
movsx
cmp
add
inc
add
sbb
mov
jne
fs
inc
jmp
or
outs
jno
enter
dec
inc
enter
sub
inc
dec
ret
cdq
(bad)
add
or
dec
aam
mov
cld
xchg
dec
or
sbb
sbb
mov
cmp
or
inc
jmp
loope
inc
je
stos
loop
pop
adc
fstp
stos
or
and
daa
mov
add
push
pop
add
mov
bound
and
sub
mov
add
leave
mov
mov
mov
test
dec
sbb
fwait
out
sbb
add
add
test
in
push
ret
mov
dec
pusha
sti
addr16
jecxz
push
dec
je
dec
jne
(bad)
cli
out
fisttp
jmp
mov
jnp
stos
jecxz
cmp
in
inc
jne
mov
ret
dec
jns
jno
fild
or
cmp
xchg
mov
add
sbb
clc
lea
add
adc
push
push
push
jg
sbb
mov
pop
pop
mov
inc
loop
dec
test
push
xor
imul
add
int
test
adc
inc
sub
sbb
sub
out
jge
xlat
or
sub
imul
sub
sbb
out
pop
(bad)
sub
sub
loopne
sub
dec
push
add
je
pop
ret
pusha
xchg
or
cmp
rol
and
mov
cmp
test
fld
cmp
icebp
scas
jo
inc
and
mov
sti
imul
clc
pop
push
into
mov
fabs
push
leave
sbb
je
test
cld
jmp
fcomp
fstsw
fucom
fcomi
fwait
pop
inc
test
pop
fidiv
out
mov
lea
mov
inc
sub
dec
mov
clc
outs
int
and
add
sub
sub
add
jns
dec
fmul
das
icebp
fwait
jmp
add
call
jae
jns
add
jb
out
add
or
push
sti
and
data16
mov
fs
pusha
out
jmp
mov
xor
push
jmp
in
scas
or
mov
add
dec
push
or
call
retf
mov
rcl
mov
out
pop
out
ficomp
mov
or
(bad)
jp
std
fistp
add
pop
mov
cmps
sbb
jae
dec
add
or
in
ins
rcl
or
add
or
push
fidiv
fwait
cmp
sbb
push
imul
outs
into
and
jne
dec
adc
cmp
fcmovu
jae
adc
push
and
fucomi
inc
fild
lea
iret
mov
cmp
test
fisttp
pusha
out
sub
sub
add
pop
cmps
es
ins
mov
adc
add
fadd
loopne
retf
xchg
push
mov
xchg
mov
cmp
sbb
inc
add
mov
lahf
push
jb
mov
sbb
call
mov
mov
adc
xor
iret
cmps
scas
(bad)
push
add
or
sub
mov
je
mov
rol
mov
loopne
push
push
mov
ja
pop
lea
dec
sub
pop
pop
hlt
call
lock
cmp
(bad)
and
repz
or
jne
pusha
add
sbb
cs
mov
pop
mov
je
pop
mov
jo
sbb
nop
sub
clc
dec
push
call
pop
mov
movd
addr16
mov
or
jmp
adc
sub
mul
test
pop
je
dec
cmp
inc
stos
add
add
push
add
icebp
mov
ret
fchs
push
aad
cmp
iret
test
and
scas
and
sti
inc
or
push
pop
adc
cmp
ret
cld
mov
nop
call
jbe
or
ret
das
push
sar
ret
lds
mov
les
cmp
or
arpl
add
das
push
push
sub
add
(bad)
ja
xchg
(bad)
add
hlt
push
sub
retf
inc
sbb
mov
outs
or
stc
lock
adc
jb
jae
clc
mov
in
ds
ret
inc
adc
add
add
adc
adc
(bad)
mov
icebp
sbb
pushf
sbb
je
xlat
mov
mov
int
sub
and
fdivr
shl
stos
cld
cmp
mov
loop
adc
inc
jno
sar
xor
(bad)
adc
loopne
xor
aas
mov
scas
sti
js
rol
inc
mov
mov
and
jmp
mov
shl
not
jae
call
leave
hlt
xor
pop
je
jne
sbb
jbe
add
pusha
mov
in
jle
xchg
(bad)
ds
xor
jae
or
add
adc
gs
mov
adc
daa
sub
loop
sbb
add
inc
dec
imul
cld
fisubr
inc
rcl
(bad)
mov
addr16
loopne
cs
dec
out
f2xm1
jle
mov
inc
mov
inc
or
and
(bad)
sbb
push
mov
pushf
data16
sahf
std
pop
lahf
sub
es
loopne
mov
inc
psllq
idiv
add
adc
movhps
fsubr
pop
stos
dec
push
iret
sub
int
fstp
add
add
cs
xchg
xor
add
cld
jo
inc
add
or
inc
mov
jp
fstp
add
cld
mov
inc
ss
xor
arpl
arpl
mov
mov
ins
lahf
cmp
push
lea
xchg
pop
pop
dec
pop
mov
(bad)
mov
add
add
in
dec
and
xor
or
sub
mov
lahf
rcl
and
ins
add
or
jbe
inc
push
add
pop
inc
call
add
pop
or
hlt
xchg
ins
cs
inc
fadd
call
and
jmp
push
sbb
stc
jle
pop
sub
sahf
push
or
push
adc
inc
shl
adc
arpl
mov
push
out
inc
add
or
inc
inc
rol
add
inc
aam
inc
ds
push
or
push
sbb
movs
push
pop
mov
bound
xor
js
dec
lods
mov
enter
loop
push
add
out
mov
mov
xchg
enter
or
jns
clc
mov
mov
xchg
cmp
mov
or
cld
inc
push
or
add
push
arpl
jl
jge
test
js
jmp
outs
pop
jmp
or
xor
lods
or
cs
stc
adc
add
or
int
sti
push
mov
mov
push
jno
and
jo
and
in
mov
jp
or
pop
jmp
sar
retf
adc
cs
dec
sub
jb
sub
cmp
jmp
pop
nop
and
sub
int3
test
add
scas
push
mov
adc
inc
jge
inc
ret
pop
inc
xchg
push
add
leave
ins
rcl
or
ror
pop
xor
pop
sub
loopne
hlt
icebp
and
pushf
ins
popf
repz
mov
or
hlt
stc
pushw
clc
adc
loopne
xor
dec
loopne
fs
cwde
sbb
jnp
xchg
add
cld
jecxz
int
mov
add
shl
mov
add
cmp
cwde
shr
packuswb
les
or
sahf
sbb
xor
sbb
push
cmp
je
enter
jmp
xor
inc
xor
sub
jmp
and
add
mov
pop
xchg
fld
add
bound
or
imul
mov
xchg
nop
inc
mov
inc
popf
test
add
jo
mov
cwde
das
jle
mov
cld
cmp
cmp
enter
test
pop
daa
jae
mov
add
or
pop
or
mov
lock
add
test
push
arpl
scas
je
xor
adc
dec
sbb
or
adc
xor
pop
mov
sub
jle
ss
int3
mov
(bad)
call
lock
mov
packsswb
fnstenv
pushf
pop
jmp
xchg
xchg
ds
cmp
sbb
pop
pushf
mov
sbb
push
xor
in
nop
xchg
popa
inc
add
ss
xchg
mov
mov
adc
bound
aad
dec
push
adc
mov
cld
icebp
lea
adc
rol
jb
add
mov
and
out
cmp
ins
jo
or
in
retf
sub
add
dec
mov
lock
or
loope
pop
mov
sbb
repnz
ret
add
lods
adc
addr16
pop
adc
dec
push
xor
daa
add
mov
jae
xchg
lahf
mov
mov
imul
lahf
or
lahf
fistp
fcom
lahf
pop
jl
pop
mov
inc
jle
test
add
add
(bad)
ficom
mov
mov
in
fbld
sbb
add
mov
(bad)
and
or
or
fsubr
and
fcom
and
fsubr
enter
jge
test
inc
add
xchg
xchg
dec
xchg
mov
mov
popf
or
mov
mov
add
or
jmp
xlat
push
(bad)
mov
add
sbb
loop
mov
bound
cmp
pop
and
jmp
add
cs
es
jp
test
dec
test
jl
mov
and
sbb
iret
sub
adc
leave
inc
in
mov
add
adc
inc
adc
mov
or
aad
imul
jo
jae
lea
mov
lds
ins
sar
jmp
sub
cs
(bad)
retf
(bad)
dec
pop
pop
(bad)
sub
test
mov
adc
cmp
inc
mov
adc
or
adc
xchg
test
in
inc
adc
aam
mov
pushf
add
cmp
icebp
pop
or
sub
jb
add
inc
call
jne
mov
fwait
out
pop
hlt
hlt
ins
xor
bound
stc
sub
xchg
pop
hlt
sbb
rcr
fdiv
add
sahf
xor
sbb
repz
in
(bad)
fdiv
or
pop
xor
jmp
mov
(bad)
push
push
mov
sub
jb
inc
mov
mov
shr
push
dec
jne
lock
xlat
add
inc
jne
lock
add
pop
xchg
inc
f2xm1
xchg
xchg
scas
push
icebp
cmp
push
mov
cmp
inc
(bad)
add
and
or
ins
in
mov
movzx
adc
(bad)
jle
shr
mov
movs
cwde
mov
or
clc
xlat
fldenv
mov
sbb
inc
adc
bnd
pop
mov
fistp
mov
sbb
sbb
or
xor
adc
inc
inc
cmp
jmp
cwde
push
or
sbb
and
push
push
fild
fchs
xor
xchg
adc
add
ror
inc
lock
out
jne
jmp
push
pop
inc
pop
xchg
in
ja
shl
pop
sub
sub
mov
add
(bad)
push
add
jae
adc
jne
push
subps
jb
popa
adc
movs
push
and
xchg
or
dec
out
jl
adc
pop
xor
mov
in
mov
or
out
dec
dec
mov
rcl
jmp
sbb
(bad)
and
(bad)
sahf
in
or
nop
mov
push
sbb
jg
in
in
nop
add
xor
mov
push
sbb
mov
fdiv
fcom
loopne
test
repnz
xchg
aam
fs
jle
sub
mov
push
sahf
ins
shr
jl
mov
adc
sar
mov
int3
mov
and
mov
cmp
sub
and
sbb
push
mov
in
xchg
add
aas
popa
sar
jb
adc
hlt
mov
cmp
add
fcomp
sysret
hlt
mov
enter
sub
pushf
arpl
adc
or
and
cmp
or
clc
mov
push
ins
das
fs
outs
push
xor
les
sub
fwait
add
add
or
push
pop
or
and
push
dec
add
loop
xchg
femms
pop
(bad)
mov
or
jae
sbb
inc
ret
push
mov
or
push
jp
xchg
retf
mov
gs
mov
adc
mov
test
add
cmps
and
adc
(bad)
call
add
inc
jb
gs
jo
arpl
add
test
inc
push
push
fs
neg
imul
pop
xor
not
jo
mov
push
(bad)
imul
pop
mov
xor
aas
cmp
inc
imul
cmps
imul
mov
mov
xchg
pop
dec
lock
dec
retf
cmps
imul
dec
xlat
xor
shl
movs
enter
je
mov
test
fucomp
sahf
dec
inc
jg
or
arpl
movs
pushf
ins
dec
ss
mov
movs
cmp
nop
sahf
cwde
aam
sbb
mov
nop
out
lahf
or
int
rcr
or
jge
xor
js
je
lahf
movs
cmp
pushf
pop
jo
lahf
ins
sbb
jae
sbb
sahf
fs
lahf
leave
xchg
out
je
or
pop
push
call
inc
call
dec
ss
fwait
inc
push
mov
pushf
ins
push
imul
xchg
sahf
sub
mov
mov
and
sahf
and
fwait
xchg
sahf
sbb
mov
jbe
adc
add
lods
sub
movs
hlt
cmp
xchg
or
scas
mov
jmp
mov
pusha
add
mov
mov
in
pushf
mov
std
or
xchg
sbb
repnz
clc
jns
nop
add
cwde
inc
mov
in
xchg
mov
pop
xor
sbb
arpl
cmp
nop
arpl
dec
mov
in
sbb
xor
mov
push
xchg
cwde
or
dec
xor
leave
test
aad
lahf
pushf
or
adc
xor
mov
jg
jb
lea
mov
into
(bad)
and
or
ja
inc
mov
cmp
xlat
sbb
add
je
inc
pusha
and
xor
jb
js
vpavgb
lea
push
or
scas
cwde
ret
out
retf
mov
lea
jb
cmp
nop
js
hlt
add
push
dec
xchg
je
cmp
jge
and
rcl
push
retf
xchg
nop
jecxz
fs
nop
push
add
sbb
int
test
enter
or
pop
push
push
je
cld
imul
fmul
out
and
aam
adc
xchg
adc
aad
ins
jae
cmp
enter
nop
pop
push
and
xchg
pushf
xchg
fsubr
xchg
xchg
sub
enter
jne
nop
add
scas
pop
test
(bad)
cmc
or
add
adc
stos
push
rcl
jl
rcl
adc
cmp
inc
je
rol
or
inc
sub
mov
add
or
push
sar
and
jg
mov
xchg
push
inc
dec
or
mov
sbb
jle
mov
jge
sub
arpl
ja
lea
add
adc
add
fcmovnu
fistp
sar
push
dec
fwait
inc
or
test
dec
xor
inc
jle
mov
push
aas
mov
or
jmp
(bad)
push
pop
retf
call
jmp
inc
cmp
add
jne
lods
fnstsw
leave
call
mov
lods
movs
sub
or
repz
or
dec
lds
adc
aam
es
add
mov
adc
or
sub
jle
in
or
mov
or
mov
shl
mov
std
fild
sub
jg
dec
mov
xchg
mov
jle
shl
clts
ret
loop
fstp
and
inc
or
xor
lea
and
hlt
inc
add
inc
lock
inc
and
cs
shl
push
sti
cmps
or
xor
enter
mov
and
inc
or
sub
adc
adc
in
jge
js
jmp
imul
mov
(bad)
and
nop
test
js
and
das
mov
jne
cmovno
cmp
sub
pusha
xor
pop
mov
xor
dec
or
int3
rol
adc
lock
cmp
push
enter
sahf
rcl
inc
xor
mov
int
adc
sar
add
adc
cdq
jnp
mov
inc
pop
cmps
push
adc
adc
pusha
mov
or
inc
mov
adc
mov
(bad)
jo
adc
inc
jnp
lahf
mul
push
mov
cmp
in
pop
inc
cmp
pop
mov
xchg
or
lds
outs
pop
call
call
mov
hlt
push
aaa
and
loop
cmp
push
push
jmp
jmp
pushf
add
push
xchg
shl
imul
xchg
jmp
in
jg
cmp
retf
loope
call
in
add
mov
enter
push
das
xor
push
or
fdiv
pop
lods
lea
mov
(bad)
or
stos
add
jnp
(bad)
fcmovb
jl
sbb
test
xor
sbb
repnz
xor
and
push
push
or
sbb
ss
outs
inc
jb
je
dec
add
adc
add
enter
js
aam
add
pop
push
adc
sbb
ds
fwait
scas
add
and
test
or
fwait
mov
(bad)
add
sbb
pop
daa
test
pop
ficom
stos
outs
and
pop
add
mov
inc
inc
cmp
jge
data16
jp
sahf
pop
cs
ror
mov
ins
jns
add
adc
push
push
mov
or
adc
retf
xor
sgdtd
add
jne
sti
ins
(bad)
imul
add
dec
movaps
mov
mov
sti
push
aam
inc
ds
pop
cmp
inc
add
shl
jnp
adc
fild
(bad)
and
add
test
adc
icebp
push
daa
mov
xchg
pushf
test
das
mov
jb
add
push
sub
cwde
pop
gs
test
inc
cdq
inc
popa
aam
pop
push
cmp
ror
jo
sahf
pop
mov
fstp
ins
popa
jo
add
retf
mov
jnp
inc
xchg
xchg
fild
jb
cmps
in
mov
dec
push
push
leave
mov
mov
inc
pusha
stos
pop
mov
mov
popa
or
test
dec
pusha
xchg
or
ss
leave
shl
pop
mov
sbb
sti
ror
push
fnclex
les
adc
fimul
inc
push
int3
int
sbb
dec
sbb
jge
daa
mov
jo
out
sbb
sub
and
dec
mov
and
mov
cmp
je
mov
jmp
sub
cmp
mov
fisub
cmp
adc
jp
mov
or
or
push
dec
mov
loop
pop
add
mov
daa
mov
not
and
mov
mov
adc
ret
or
test
mov
pop
jae
imul
sbb
not
and
mov
and
jbe
aam
mov
lods
call
xor
shr
add
btr
adc
pop
dec
jns
call
xor
mov
mov
adc
shl
ret
mov
sbb
and
pop
and
call
fstp
push
(bad)
fstp
mov
cmp
mov
and
adc
stos
lods
push
or
(bad)
fistp
pop
rol
je
loop
idiv
jl
sub
dec
sti
lea
mov
sbb
mov
retf
or
sbb
pop
ja
mov
add
add
pop
jb
jmp
outs
fild
pop
push
add
pop
add
jae
cli
out
enter
or
cmp
imul
mov
sub
pop
fstp
jae
add
mov
mov
push
fidivr
sub
movs
cmc
outs
cdq
xor
sub
imul
mov
(bad)
scas
pushf
les
sbb
jbe
mov
sbb
test
fimul
jbe
mov
inc
add
add
add
sbb
loopne
(bad)
ins
add
sub
adc
nop
xlat
inc
push
sar
sti
pushf
xlat
fwait
dec
cmp
call
mov
xchg
popf
aas
or
push
xchg
push
xlat
dec
pop
cmp
fwait
pushf
xchg
fnsave
sub
sbb
dec
add
es
in
push
int3
ins
push
add
or
std
ret
xor
outs
adc
add
aam
inc
push
shl
call
dec
sub
lods
xchg
mov
xchg
pop
and
lods
ss
mov
mov
sub
jg
or
je
push
fs
dec
mov
int
mov
or
push
xor
xlat
jmp
sahf
mov
xchg
or
dec
or
pop
xchg
in
xor
dec
(bad)
fisttp
cmp
pushf
and
(bad)
sahf
sbb
and
cwde
dec
or
inc
js
mov
ins
xlat
leave
pop
call
xchg
ins
cmp
data16
inc
sub
les
and
pop
fld
mov
xor
test
push
shl
jb
add
fisttp
sahf
push
mov
push
out
popa
sbb
pop
enter
push
sub
push
xchg
iret
jo
xchg
inc
adc
adc
or
rcr
cdq
or
xor
adc
inc
fs
jae
mov
dec
mov
cwde
cmp
cs
inc
or
jle
xchg
xchg
gs
or
or
mov
dec
imul
(bad)
aam
fcmovnb
inc
popf
inc
mov
data16
inc
in
sbb
ud0
inc
loopne
mov
sahf
pop
dec
jmp
sbb
jne
add
out
inc
(bad)
(bad)
aas
or
hlt
rol
dec
mov
sbb
or
adc
aaa
imul
in
mov
outs
nop
add
or
cld
(bad)
add
nop
xlat
adc
mov
mov
xor
adc
xor
cmps
push
jmp
ins
out
jae
hlt
inc
lahf
push
jne
mov
fadd
sub
add
sbb
add
jle
or
ret
and
std
xchg
mov
gs
in
jbe
push
mov
add
fnstenv
scas
mov
jnp
cmp
and
or
push
loopne
xchg
and
dec
adc
or
sahf
fsub
sub
sub
push
fmul
test
push
add
mov
test
or
ja
ins
and
xor
mov
fsubr
pop
mov
lods
mov
les
daa
hlt
sbb
pop
mov
cmc
cmp
add
stos
jge
lods
push
cdq
xchg
and
inc
push
push
mov
arpl
mov
fsubr
xor
ins
mov
or
push
js
in
jmp
jae
jne
lods
mov
or
daa
adc
cli
xor
sub
inc
fcomip
mov
push
mov
inc
fsub
xor
adc
mov
adc
test
dec
xchg
cmp
jne
lods
or
xor
inc
mov
pop
add
or
rol
test
jmp
nop
nop
lock
test
and
xor
cwde
popa
outs
xchg
outs
sbb
mov
and
test
cmp
or
inc
ins
mov
cmp
adc
push
(bad)
adc
rcl
enter
bound
popa
cwde
iret
fcomp
and
cmc
stos
pop
loopne
sbb
pop
fs
test
inc
clc
push
xchg
push
push
stos
xchg
or
mov
add
jp
xchg
mov
les
pop
inc
push
cmp
mov
sbb
inc
sbb
cmp
int3
jno
sbb
inc
fs
adc
loope
adc
sbb
pop
xor
(bad)
in
xchg
sub
xor
loopne
lock
aas
or
iret
adc
push
inc
test
retf
inc
enter
sar
cs
movs
add
call
or
into
mov
rcl
mov
or
or
(bad)
mov
or
aaa
mov
adc
jo
push
cmc
enter
out
pop
xor
push
adc
mov
rcr
jae
sub
pop
sub
jge
push
mov
out
inc
movs
test
add
jp
cmps
call
xor
clc
icebp
mov
xchg
int3
or
pop
add
cmp
les
mov
xlat
es
daa
push
or
cld
mov
xor
mov
or
dec
dec
or
fisubr
fwait
mov
fs
sub
hlt
mov
das
jecxz
lods
push
or
push
adc
movs
inc
push
fstp
add
(bad)
call
add
jb
xor
xor
mov
xor
lock
mov
jbe
mov
pop
or
lea
cld
dec
dec
stc
adc
jmp
je
jmp
movs
loop
add
inc
push
sbb
or
cmp
jmp
(bad)
pop
mov
add
pop
lea
aas
push
aaa
loop
sbb
or
jmp
push
ins
fisttp
adc
sahf
adc
push
inc
outs
repnz
or
sbb
cmp
add
sub
hlt
lock
mov
add
out
add
inc
pop
push
inc
jg
pop
rol
mov
add
sbb
push
ss
mov
lds
xor
pop
call
adc
pop
sub
dec
adc
(bad)
sub
int
mov
pop
or
aas
ins
js
ret
push
je
mov
sub
ret
ja
mov
int
jnp
cmp
test
retf
or
imul
inc
or
mov
icebp
xor
rol
mov
dec
cmp
jb
mov
mov
jp
pop
pop
mov
xor
or
cmps
and
mov
push
test
mov
pop
dec
in
iret
jne
jp
int3
sub
test
mov
xchg
aad
xchg
nop
aaa
mov
fdiv
into
jle
jg
shl
(bad)
div
add
mov
xchg
or
jne
mov
(bad)
fsin
sub
cmp
cmp
ret
push
lea
mov
push
dec
pop
stos
lahf
cmp
cmp
outs
fadd
lea
jl
or
jo
or
cmps
outs
or
and
add
add
inc
adc
sbb
pop
retf
push
adc
ins
push
ret
jl
sub
mov
sbb
pop
mov
add
in
into
(bad)
pop
add
jnp
je
jge
jae
fild
popf
fwait
mov
and
es
nop
or
sub
dec
ret
or
iret
test
adc
lahf
(bad)
mov
pop
mov
cmps
dec
push
or
push
jmp
xchg
arpl
mov
sti
add
mov
push
stos
or
add
fcmovnb
adc
add
xchg
lahf
lock
icebp
xchg
sub
add
mov
adc
sub
inc
mov
arpl
push
pop
sub
in
pusha
mov
adc
push
fsubr
sbb
in
cmp
out
inc
jmp
enter
out
fcmovu
stos
mov
push
sbb
sbb
dec
inc
imul
xchg
stos
ror
jnp
jmp
ja
sbb
nop
out
add
and
or
mov
jmp
bound
inc
cmp
rcl
or
mov
imul
inc
xchg
adc
jle
adc
leave
je
lods
or
jmp
push
daa
out
ins
pop
sbb
fistp
adc
clc
jbe
fldcw
adc
xor
sub
ins
daa
cwde
push
lods
inc
adc
mov
stos
fsubr
inc
xchg
cmp
or
jmp
mov
push
add
mov
xchg
xor
pop
sbb
xchg
mov
add
add
mov
rcr
adc
rol
bndstx
or
sbb
test
scas
iret
mov
push
push
adc
inc
daa
jb
xchg
and
push
dec
pushf
xor
loopne
dec
push
inc
scas
movs
push
aaa
sbb
pop
xor
mov
add
or
movs
mov
scas
push
jbe
xor
fild
inc
xor
push
dec
cwde
mov
jae
add
neg
fldcw
lock
cmp
clc
adc
or
ins
push
fs
pop
pop
or
enter
dec
xor
and
and
cmp
xchg
cmp
scas
call
popf
and
inc
test
or
sub
cli
dec
mov
jo
hlt
push
cmc
xor
and
ret
daa
push
inc
mov
mov
xchg
cmp
xor
arpl
sub
add
xchg
xchg
pushf
mov
iret
mov
sbb
push
mov
sub
push
or
fisttp
out
push
and
dec
rcl
pop
and
pop
sub
call
popf
jmp
xor
cmp
sete
neg
sbb
jae
lock
(bad)
hlt
push
lods
xor
cmp
jb
adc
cmp
jl
pop
jg
pop
inc
pop
fucomi
adc
push
add
adc
inc
cmp
jl
cmp
fistp
push
bound
mov
ss
(bad)
cmp
mov
jne
or
cmp
fcos
jecxz
aad
push
and
mov
out
inc
sub
pushf
push
lock
(bad)
icebp
push
or
or
inc
jle
ins
mov
nop
push
sub
push
sub
clc
in
shr
and
add
jecxz
mov
or
daa
mov
jg
jg
push
cmp
xor
mov
adc
jbe
imul
out
mov
push
inc
add
pop
ret
int
xchg
jge
in
sbb
mov
mov
mov
push
lods
xchg
or
inc
cmp
sti
push
and
inc
dec
push
xadd
clc
stos
test
lds
popa
jmp
dec
sbb
xor
sbb
jnp
push
nop
shr
push
sbb
pop
or
jl
and
inc
xchg
inc
sbb
add
mov
add
adc
ins
sar
cmp
inc
gs
inc
mov
inc
bound
cmp
xchg
ins
nop
adc
fdivr
aam
leave
jge
movs
movs
fcom
nop
mov
mov
inc
xor
ins
adc
jmp
in
adc
pusha
mov
stos
ds
push
imul
data16
call
movs
sbb
lock
aam
push
imul
rol
add
jmp
popa
jmp
push
fsubr
or
cmp
(bad)
in
pop
bnd
xchg
push
inc
mov
dec
mov
inc
jae
ror
pop
inc
xchg
push
push
mov
std
lea
push
dec
jns
test
imul
bound
dec
or
stos
sahf
shr
add
xlat
adc
rcr
sbb
or
jb
sahf
(bad)
mov
jno
hlt
fbstp
jp
xor
inc
cmp
pop
clc
jmp
pop
push
iret
fdivp
js
xchg
mov
mov
mov
iret
or
push
mov
or
fidivr
ja
cs
or
sar
into
mov
popf
adc
ror
clc
add
cs
call
ret
mov
imul
mov
add
sbb
push
inc
adc
push
ror
push
sti
mov
xor
aam
sbb
jnp
retf
inc
jne
adc
sti
aaa
pop
and
test
jne
mov
fstp
fisttp
mov
std
fimul
arpl
add
push
xor
out
add
dec
jle
add
lea
adc
inc
jle
pop
stc
jge
inc
pop
add
data16
cmp
sub
aad
or
test
push
add
popa
pusha
push
and
pop
sub
push
inc
cmps
mov
or
add
jae
gs
arpl
test
je
xor
rcr
add
stos
sbb
mov
mov
sub
push
test
adc
inc
ror
pop
sahf
in
add
test
add
push
and
shl
push
sbb
and
mov
iret
mov
add
add
pusha
test
pop
and
cmp
(bad)
jge
jl
pop
in
cmp
push
cmp
add
fld
outs
rcr
pop
mov
push
add
pop
mov
mov
pop
shl
stc
rcl
inc
xchg
vmovupd
pusha
mov
pop
mov
mov
cmp
shl
sbb
push
jmp
sbb
jmp
lea
cmp
jns
cmp
jp
mov
push
daa
jne
cmp
push
push
adc
adc
int3
dec
call
ret
jmp
sti
sbb
adc
adc
imul
adc
push
mov
loope
add
push
push
scas
gs
shr
inc
mov
sti
mov
cmps
js
push
les
pusha
sub
mov
pop
hlt
(bad)
and
mov
fsub
and
adc
sbb
pop
inc
lock
push
adc
adc
or
or
push
add
jg
mov
add
or
nop
ins
icebp
shl
neg
arpl
sub
dec
mov
clc
fdivr
and
lahf
jl
movsx
push
lds
mov
dec
test
push
add
shl
jge
mov
ror
ret
jmp
(bad)
shr
push
jb
test
mov
lds
inc
lahf
push
fcomp
mov
cmp
(bad)
outs
mov
scas
aam
inc
sbb
(bad)
cmp
cmp
sbb
lea
lods
loopne
lds
sub
xor
push
adc
pop
addr16
fs
mov
fwait
push
push
cmp
jb
frstor
xchg
add
pop
or
retf
mov
mov
cdq
sbb
test
mov
xchg
fcmovnb
sub
add
push
pop
arpl
add
and
add
test
sub
inc
cs
icebp
push
mov
mov
aam
imul
sub
add
arpl
push
cmp
lods
mov
out
in
xor
xor
fnstenv
lea
sbb
aaa
addr16
rcr
adc
pop
sub
movs
jmp
mov
cvtdq2ps
jnp
mov
push
scas
cmp
jl
call
mov
fs
movs
popf
imul
loop
cmp
scas
ins
adc
adc
rcl
stos
jo
mov
jo
or
sbb
add
or
push
sbb
ret
ds
add
and
jmp
or
push
sub
or
or
loopne
or
sub
adc
dec
ja
fadd
inc
add
mov
sbb
sub
xchg
pop
jl
fwait
(bad)
xchg
cwde
push
rcr
or
rcr
lock
inc
or
lods
lock
sbb
xor
add
sbb
pop
clc
adc
sub
sub
es
sbb
lds
cmp
push
not
add
mov
lds
arpl
push
add
clc
sbb
xor
or
pop
js
shr
or
xchg
inc
dec
sub
push
out
ror
jp
mov
shr
ror
adc
outs
pop
add
inc
ret
mov
xor
add
ja
jmp
add
ss
dec
fs
inc
adc
xor
add
out
or
add
repz
add
or
in
cmps
dec
repz
xor
jle
rcr
or
sti
sahf
shl
stos
or
test
add
ret
lods
ror
and
mov
loop
addr16
push
add
movs
sub
mov
sbb
add
mov
xor
hlt
add
mov
fisub
and
jmp
jns
jae
and
mov
mov
or
sbb
(bad)
sbb
popa
imul
call
into
add
push
jne
outs
retf
das
and
ins
jo
imul
mov
jae
pop
shl
jmp
add
or
loop
jle
(bad)
mov
into
adc
or
les
push
(bad)
loopne
dec
sbb
sub
std
push
mov
sbb
xchg
fisubr
xor
xor
pop
jp
lds
jne
test
int3
lea
dec
ror
lea
cmp
stos
and
inc
loop
hlt
jp
mov
mov
add
fst
mov
popa
inc
mov
call
and
stos
popa
adc
add
pop
inc
sbb
(bad)
mov
aam
in
test
lea
push
mov
ret
pusha
pop
mov
sahf
jle
pusha
jg
push
push
pop
pop
dec
popa
mov
sbb
mov
pop
mov
mov
lea
xchg
pop
sti
push
shr
pop
mov
jae
jecxz
std
mov
jne
clts
add
or
adc
sub
dec
out
scas
pop
cmp
cmp
or
mov
inc
adc
add
mov
add
inc
aaa
mov
add
jno
popa
sbb
xor
mov
dec
cmp
jnp
jb
mov
jae
push
add
or
push
add
enter
add
push
pop
or
or
or
jb
and
sar
add
mov
enter
in
rcl
leave
sbb
push
mov
test
sbb
fisubr
pop
add
out
sbb
sbb
fcomp
dec
xchg
sbb
pop
or
xchg
rcr
or
enter
push
mov
int
rcr
ret
call
xor
add
call
imul
gs
imul
lods
sbb
adc
adc
sti
pop
push
loop
and
fstp
out
add
add
dec
sub
stos
cmc
dec
iret
xchg
jbe
(bad)
loop
add
ss
jnp
or
test
stos
pusha
ss
test
stos
push
or
jne
mov
adc
hlt
sub
inc
mov
add
xchg
pop
es
(bad)
or
or
je
cli
xor
in
pusha
fmul
mov
push
sbb
and
cmp
and
sub
and
xchg
rcl
pop
xor
bound
mov
pop
ficom
inc
mov
repnz
or
pop
loopne
cmps
test
xor
jg
xchg
ins
jae
pop
jl
add
stc
mov
add
jle
pop
sbb
clc
inc
pop
mov
mov
icebp
xchg
stos
cld
mov
mov
ins
data16
ss
mov
pop
push
test
loop
sub
xor
sub
adc
sbb
es
loope
mov
inc
push
mov
daa
retf
leave
imul
xor
inc
cmp
jo
and
sbb
pop
(bad)
sub
push
ret
(bad)
jae
and
xchg
adc
pop
je
xor
cmp
or
jnp
shr
or
ror
xchg
ret
out
lea
shr
push
repz
bound
or
add
mov
test
mov
mov
or
dec
mov
or
add
push
and
cmp
xchg
mov
push
and
in
or
mov
mov
push
mov
sub
stc
pop
sbb
jmp
sbb
xor
jo
les
jae
and
jecxz
aas
inc
sub
jbe
test
ficomp
and
push
aad
push
sti
idiv
pop
mov
das
nop
mov
aam
fwait
pop
and
inc
movzx
inc
loopne
das
ret
push
adc
ss
aaa
push
fcomp
inc
mov
sbb
pop
mov
push
sbb
cmovo
push
push
ficom
enter
dec
daa
inc
das
fsubr
outs
or
pop
(bad)
sub
ret
cmc
es
inc
test
and
or
mov
ret
add
mov
jmp
sub
popa
arpl
cmps
ficom
repz
neg
xor
pop
mov
push
jmp
add
inc
adc
ss
arpl
dec
pop
int
push
shl
icebp
dec
jg
sbb
ret
mov
retf
into
outs
inc
pop
inc
data16
hlt
jmp
mov
fnstenv
mov
cmps
adc
inc
lahf
imul
sbb
add
in
shr
jl
or
xchg
sub
popw
jmp
and
ror
lds
ret
in
jbe
or
inc
es
cmp
(bad)
sar
sahf
xor
pop
outs
arpl
jl
or
in
mov
call
jmp
mov
mov
sbb
pop
scas
mov
pop
nop
inc
out
mov
fmul
js
mov
shr
jp
cli
add
retf
jg
dec
add
test
add
inc
xchg
ja
dec
pcmpeqw
dec
pcmpeqb
push
jge
fsubr
rcr
sti
or
dec
or
or
mov
or
iret
js
popa
and
adc
repnz
mov
add
pop
js
leave
(bad)
push
enter
sbb
add
adc
jle
out
xchg
xchg
dec
sbb
jno
cmp
push
mov
xor
mov
or
inc
(bad)
mov
or
aad
cmp
ret
sbb
xchg
cld
mov
mov
das
pushf
mov
mov
xor
in
outs
pop
mov
adc
outs
and
and
sub
dec
dec
sub
shl
fnstcw
sub
add
add
or
les
or
jge
inc
shl
xchg
out
adc
jne
out
mov
aas
aaa
push
or
push
push
mov
pop
add
imul
ret
ret
fstp
push
mov
xor
adc
aas
pushf
ins
and
cmovb
adc
ss
push
setle
xor
adc
(bad)
out
fcomip
and
jo
sbb
out
jl
sbb
cmp
add
push
sbb
and
push
fdiv
adc
push
sub
or
mov
pop
sub
xchg
and
mov
push
add
add
or
jnp
jne
mov
icebp
pop
pop
fcmovnbe
jne
lods
add
adc
mov
fidiv
(bad)
and
dec
pop
dec
inc
aam
add
add
stos
adc
xor
xchg
jmp
push
les
mov
aas
je
sti
or
(bad)
fistp
inc
add
sbb
cmp
push
jb
(bad)
pop
pop
fidiv
sub
add
je
dec
je
pop
je
and
addr16
jno
(bad)
cdq
pusha
ret
je
inc
or
rol
push
cmp
dec
cmps
in
dec
adc
push
mov
sbb
pop
mov
adc
add
call
cmp
fisttp
cmp
xor
push
sbb
imul
push
xor
shl
dec
push
jmp
imul
adc
shl
pop
ins
fcom
mov
ins
push
mov
cmp
dec
inc
imul
mov
sub
or
cmp
xchg
mov
ss
pop
cmp
or
jmp
mov
xchg
add
inc
adc
xchg
adc
or
mov
or
sub
test
sbb
sub
daa
inc
jno
test
mov
mov
adc
adc
aaa
xor
vdivpd
push
push
push
mov
add
xchg
mov
inc
in
aam
dec
sbb
cmp
ret
pop
out
retf
ds
(bad)
lea
je
jl
loopne
xchg
ror
mov
fcomp
adc
xchg
lods
inc
imul
es
fwait
or
jo
or
je
icebp
lds
push
inc
(bad)
clc
adc
fdivr
nop
push
js
push
push
cmp
je
pop
mov
add
outs
addr16
sub
push
mov
jbe
and
cmp
into
jmp
and
ds
(bad)
jne
cmp
xor
adc
xor
pop
cmp
add
jl
mov
sbb
xor
imul
lods
sbb
jb
shr
jo
repnz
cmp
jo
push
out
(bad)
add
sub
rcr
mov
sbb
push
cmp
test
pop
xchg
mov
fisub
cmp
inc
inc
or
cmp
jne
pop
inc
push
sbb
and
sbb
adc
sar
das
repnz
lds
fst
movs
(bad)
fwait
mov
dec
xchg
mov
mov
pop
or
jle
jge
aam
retf
sbb
and
mov
jns
pop
mov
es
mov
loop
or
sub
mov
in
jo
iret
pop
jb
jmp
push
ins
dec
sbb
xor
inc
push
(bad)
jno
repnz
sti
iret
add
call
add
je
outs
jecxz
retf
ret
in
xor
call
stc
mov
stc
add
movzx
int
adc
cmps
movs
jae
cli
scas
shr
and
inc
mov
sub
mov
jbe
jo
dec
pop
xchg
pusha
cli
pop
push
add
cmp
ja
push
stc
ins
xchg
movs
aaa
adc
add
push
aam
ins
and
push
lods
retf
popa
test
or
cmp
ja
les
into
push
leave
dec
into
pop
fbld
dec
jne
pop
daa
cmp
retf
add
mov
cmp
test
xor
lds
mov
xlat
mov
stos
add
xchg
sbb
push
dec
dec
mov
ins
xchg
fiadd
adc
sub
lds
sub
push
and
mov
jmp
add
add
mov
ja
xor
hlt
sbb
add
test
add
shr
xchg
(bad)
pop
das
(bad)
add
push
ja
sub
jno
sub
sbb
mov
ja
pop
add
leave
pop
jmp
cmp
cmp
add
(bad)
adc
dec
mov
mov
and
or
push
outs
ja
fcomi
sub
gs
lds
retf
sbb
into
xchg
mov
lods
cmp
push
adc
lods
add
add
dec
and
mov
inc
mov
es
cmp
fdiv
leave
fs
fiadd
call
xchg
or
add
or
push
xor
inc
or
dec
lock
data16
cmps
pop
into
popa
loop
push
xchg
cmp
inc
ss
sub
xchg
cmp
fmul
push
int
add
or
push
pop
jmp
scas
pusha
pop
out
push
and
pop
sub
cmp
or
sub
ins
out
push
cwde
pop
or
imul
mov
scas
inc
ja
pushf
or
jmp
cmovs
add
xchg
imul
mov
or
add
inc
shl
test
fdivr
inc
arpl
adc
mov
or
loop
inc
arpl
pop
mov
fwait
jnp
ret
or
dec
cmp
dec
and
stos
pop
sub
adc
(bad)
addr16
pop
cmp
ja
cmp
or
jo
fdivp
push
loope
inc
dec
xor
pusha
jmp
loop
jae
in
in
outs
pop
and
cmp
inc
jne
inc
pushf
inc
sbb
enter
pop
xchg
push
jb
ficom
dec
inc
jnp
cmp
mov
push
lahf
mov
cld
sub
xchg
inc
cmp
dec
or
dec
rol
call
and
or
hlt
and
adc
je
(bad)
outs
dec
inc
retf
and
pop
not
and
int
adc
lahf
push
cs
pop
and
xchg
pusha
(bad)
or
pusha
add
push
shl
sub
aad
sbb
and
hlt
adc
mov
sbb
sub
sub
js
pop
push
pop
loopne
(bad)
pop
mov
or
movs
pop
test
in
gs
mov
imul
xchg
je
sub
push
ss
xor
ja
mov
pop
out
push
inc
xor
jae
jg
stos
(bad)
movs
icebp
push
jne
int3
fs
xor
inc
pop
jmp
xor
lods
ins
shl
mov
inc
push
xchg
dec
outs
adc
leave
jb
enter
cld
(bad)
add
in
outs
and
je
mov
jp
xchg
hlt
xor
adc
dec
adc
mov
stos
push
mov
xchg
lock
(bad)
mov
sbb
add
mov
and
adc
enter
cdq
xor
xor
test
ret
cmpxchg
idiv
scas
int
js
lea
imul
inc
inc
cli
xor
mov
sbb
out
jl
adc
ss
and
adc
call
mov
mov
hlt
in
mov
or
pop
add
mov
or
or
or
mov
fcmove
and
mov
adc
sti
das
mov
mov
call
pop
fist
repnz
mov
(bad)
pushf
cmp
ja
inc
push
das
sbb
aas
fwait
sub
stc
mov
pcmpgtd
pusha
das
jbe
repz
mul
mov
jle
adc
(bad)
jne
nop
push
inc
xchg
add
pop
sub
mov
aam
inc
in
add
fsubr
dec
add
sub
or
retf
and
add
(bad)
sbb
jle
pusha
cmp
xchg
loopne
retf
xchg
add
xchg
inc
jo
ins
sbb
adc
cmp
push
sub
lea
sahf
add
push
add
inc
stos
push
scas
pop
imul
xchg
and
les
mov
lahf
adc
mov
hlt
push
adc
ja
adc
lods
jl
add
mov
outs
sub
add
mov
mov
jmp
stos
adc
call
mov
sub
xchg
and
inc
adc
mov
mov
mov
mov
push
mov
aaa
push
(bad)
jmp
sub
mov
or
push
or
int
cmp
jge
inc
sub
arpl
mov
mov
rol
cmp
je
popa
jno
loopne
and
sbb
mov
lea
push
cmp
stos
cld
push
mov
jg
fmul
ds
leave
or
mov
out
mov
ins
xchg
cmp
jmp
lds
mov
mov
adc
(bad)
fdivp
aad
mov
mov
data16
(bad)
inc
cmp
ret
lods
pop
pop
js
stc
call
jae
in
push
inc
fstp
imul
push
je
fnstcw
cmp
xchg
jmp
inc
add
jle
outs
jae
into
cwde
dec
outs
lock
jo
ror
mov
arpl
pop
push
xchg
int
cmp
xor
(bad)
and
leave
lock
inc
mov
je
jmp
or
mov
dec
test
mov
mov
push
mov
sub
push
sbb
lock
add
jmp
js
add
int3
adc
shl
xor
aas
test
imul
jnp
or
lsl
pop
sar
sub
daa
or
cmp
movs
in
push
loopne
icebp
jmp
mov
sar
xor
add
jl
mov
pop
into
push
dec
cmp
sub
movs
xchg
sbb
or
sub
ret
inc
and
cwde
aaa
ins
xchg
pop
sub
push
inc
in
repz
mov
pop
ds
daa
sub
test
ret
push
mov
push
pop
cmp
mov
xor
mov
jmp
add
mov
jo
test
mov
ja
sub
in
in
mov
inc
popf
ja
nop
and
jo
and
iret
inc
test
inc
push
or
enter
rol
in
pop
sbb
pop
add
jb
pop
repz
mov
dec
mov
jle
or
mov
push
call
mov
xchg
(bad)
pop
inc
dec
add
jg
sbb
into
jle
fidiv
jmp
jmp
cmp
jle
push
ror
cmp
mov
es
fistp
shr
push
xchg
je
mov
xchg
push
and
out
fmul
fild
or
sbb
cwde
mov
sbb
ret
or
ins
out
and
push
or
cmps
mov
ins
or
enter
push
in
sbb
add
mov
fisttp
sbb
jb
jb
or
inc
movsx
sbb
and
and
push
fidivr
and
ss
jle
cmp
cmp
fimul
mov
cmp
push
aad
cmp
dec
ins
cmp
mov
sbb
xchg
dec
ins
gs
movs
jp
jns
or
mov
push
add
mov
mov
jge
nop
sbb
mov
stc
or
push
(bad)
fstp
push
fs
xor
add
push
jne
sub
add
dec
jl
jmp
and
jae
sub
or
adc
adc
scas
in
sub
adc
sbb
sub
sbb
or
dec
mov
das
add
push
std
sub
jmp
fcmovnbe
mov
inc
mov
movs
cwde
adc
sub
jmp
dec
(bad)
pop
cmp
and
call
cdq
inc
mov
mov
adc
ror
ret
and
leave
add
xchg
pop
and
je
inc
adc
retf
xchg
or
fild
sbb
mov
fs
mov
jae
stc
adc
leave
sbb
loopne
(bad)
jmp
and
lock
jmp
add
pop
mov
or
push
jns
dec
dec
sbb
sbb
jmp
mov
movs
mov
sti
add
icebp
mov
mov
std
pop
sub
jge
inc
inc
push
mov
cmp
imul
retf
out
dec
push
inc
jae
or
pop
mov
inc
push
adc
pop
sbb
(bad)
daa
daa
addr16
sar
or
sub
and
call
pop
push
ficomp
loop
push
adc
sbb
xchg
ins
pusha
dec
mov
leave
inc
or
add
ret
pop
movs
fs
or
mov
xor
add
push
ret
mov
gs
into
cmp
(bad)
call
push
inc
xchg
ins
jb
hlt
shl
or
push
pop
(bad)
fst
repnz
push
sar
enter
sar
pop
sti
and
mov
outs
mov
cmps
mov
mov
and
aam
adc
inc
dec
test
inc
in
inc
into
and
jne
mov
mov
retf
mov
mov
pop
arpl
xor
out
aas
dec
adc
mov
jmp
push
pop
pop
or
out
jmp
call
adc
xchg
mov
(bad)
test
out
cwde
cwde
xchg
in
mov
push
push
out
mov
or
xor
or
shl
(bad)
sbb
pop
xlat
arpl
jo
(bad)
jnp
repnz
cwde
add
popf
inc
test
fcmovnu
popf
mov
or
int
push
mov
mov
jmp
jg
lods
adc
retf
or
dec
add
sbb
cmp
jle
mov
push
movs
inc
mov
adc
mov
sbb
and
pop
pop
mov
push
pop
iret
cmps
dec
retf
mov
xchg
ror
loopne
sub
inc
jg
jle
test
jbe
and
xor
out
adc
and
fistp
and
lock
shr
shr
inc
outs
dec
mov
jmp
lea
push
lea
sbb
cmp
push
mov
imul
add
push
add
or
xchg
jae
and
jecxz
push
add
adc
retf
sbb
inc
and
leave
mov
push
cdq
loope
xchg
(bad)
in
push
jb
inc
mov
jbe
and
inc
push
mov
das
push
mov
xchg
jmp
sar
shl
js
mov
pop
pop
sti
adc
test
mov
mov
or
cmp
retf
xor
sbb
push
inc
jne
gs
mov
mov
lods
dec
or
or
push
fist
fcomp
pcmpeqw
jbe
mov
or
jb
(bad)
ror
sbb
xchg
or
dec
and
test
aas
pop
icebp
call
mov
xor
rol
pop
or
inc
mov
(bad)
adc
(bad)
and
mov
test
push
fnstsw
mov
loopne
shl
sar
lahf
mov
inc
inc
add
push
adc
sbb
jns
push
ds
sub
mov
push
mov
xchg
out
sbb
and
push
or
mov
mov
add
and
jl
add
inc
inc
aas
or
cwde
xchg
mov
popa
rol
jmp
fst
jno
mov
or
pop
cmp
mov
and
(bad)
scas
sahf
inc
jcxz
(bad)
into
shr
cdq
fsub
add
push
add
sbb
ja
push
xchg
pop
inc
sub
jle
popa
and
popf
sti
mov
or
popf
cmp
scas
mov
iret
iret
adc
xchg
or
pusha
call
retf
sbb
mov
adc
scas
hlt
mov
test
push
pushf
sbb
jbe
mov
cmps
jo
adc
out
add
pop
outs
mov
xchg
adc
mov
xchg
movs
call
inc
stos
or
or
jne
dec
dec
(bad)
ins
push
enter
sub
and
jnp
push
push
sub
add
cld
das
add
jecxz
shr
or
add
dec
cmp
add
lock
or
adc
jne
pop
mov
sub
movs
adc
sbb
cmc
pop
mov
and
inc
sub
(bad)
bound
test
sub
jle
in
add
jmp
xor
bound
pusha
dec
adc
lods
das
mov
pop
and
add
mov
xchg
and
enter
daa
fwait
xchg
mov
rol
mov
ja
and
push
adc
inc
sub
sbb
not
sub
sbb
sbb
push
cmovbe
(bad)
push
xchg
xchg
popa
call
add
or
adc
in
mov
rol
ret
cmp
arpl
and
std
jp
addr16
push
in
call
cmp
and
sahf
mov
les
in
(bad)
push
adc
pusha
dec
inc
dec
test
rcl
adc
mov
push
adc
sbb
bound
and
ss
push
sbb
mov
sti
mov
cli
jmp
add
push
inc
loopne
test
movs
cld
inc
repnz
xchg
nop
mov
or
push
add
or
xor
xor
into
and
inc
popa
je
xor
jg
pop
sub
dec
imul
push
imul
push
std
jae
inc
jne
jb
push
jo
push
jo
outs
adc
push
push
inc
outs
ins
sbb
inc
add
and
mov
ins
push
outs
outs
je
pop
jae
xor
inc
dec
inc
cs
or
jae
mov
push
xchg
add
and
gs
jo
dec
outs
cmp
pusha
outs
scas
xchg
stos
inc
idiv
lea
xor
idiv
inc
inc
xor
inc
inc
inc
sub
sub
xor
inc
inc
add
xor
xor
inc
jge
or
ror
inc
fcomp
or
dec
xor
dec
add
pop
add
pop
jb
retf
xchg
(bad)
in
adc
pop
retf
cmp
xor
adc
and
dec
sub
and
adc
mov
int3
enter
fs
sar
lods
test
ins
fs
mov
xchg
mov
mov
mov
add
add
add
or
adc
dec
cdq
xor
push
in
mov
adc
sbb
push
pop
lock
pop
xor
sar
cmp
push
dec
add
xchg
out
and
jmp
and
or
popaw
ins
push
cmp
je
jl
xchg
cmp
xchg
je
nop
sub
sbb
dec
mov
add
je
sbb
js
dec
mov
iret
imul
mov
data16
adc
xor
pop
push
xor
xchg
hlt
ret
imul
or
(bad)
cmp
mov
or
loopne
sub
push
adc
rol
mov
inc
and
sbb
cmc
and
ins
or
mov
dec
inc
ins
mov
or
inc
mov
cs
pop
mov
scas
in
cli
add
sub
lock
cmp
xchg
mov
enter
mov
outs
sbb
inc
ds
inc
xchg
out
add
or
mov
sti
sbb
push
sbb
dec
push
add
enter
sub
add
xor
add
(bad)
xor
xor
cmp
xchg
and
add
sub
xchg
test
and
sbb
mov
mov
pop
add
dec
push
jl
and
inc
ror
jo
mov
xchg
stc
fs
inc
mov
xadd
xor
in
push
or
enter
xchg
sub
or
push
sub
and
pusha
inc
aam
jo
jmp
fdiv
cld
push
lock
add
and
dec
sbb
and
adc
mov
add
or
aad
push
push
dec
xlat
inc
inc
rol
enter
shl
movs
xor
ret
push
dec
pop
or
(bad)
repnz
es
das
or
pop
outs
mov
mov
repz
mov
cmps
cmps
push
cmps
fmul
mov
add
adc
xor
add
or
add
sbb
ror
and
add
dec
inc
aam
add
int
int
repnz
enter
mov
into
pmulhuw
shr
mov
stos
sub
xchg
jnp
clc
sti
jne
push
cmp
add
shr
push
cmp
add
dec
fcomp
mov
add
shr
inc
mov
adc
data16
rcr
sbb
adc
mov
add
push
inc
les
int3
in
inc
inc
xor
xor
pop
mov
mov
and
xchg
pushf
dec
push
fist
clc
inc
push
or
cmp
sub
add
adc
mov
fnsave
add
repz
imul
(bad)
mov
ss
ins
imul
jmp
sbb
ret
call
mov
push
lea
jg
and
adc
push
icebp
(bad)
call
or
push
inc
fadd
in
mov
in
and
push
aas
or
mov
mov
mov
jge
dec
pop
mov
enter
pusha
mov
mov
jnp
ins
movq
push
repnz
adc
push
pop
mov
mov
aad
mov
les
mov
inc
fbld
je
push
push
xchg
aad
push
mov
mov
retf
jle
mov
inc
push
imul
inc
lock
sbb
idiv
jge
mov
sub
or
(bad)
adc
pop
push
jb
jns
outs
nop
and
les
push
inc
lahf
rol
jnp
xor
adc
push
sahf
add
jecxz
jo
and
mov
daa
rol
shr
inc
rcr
div
mov
or
inc
cmp
jmp
loopne
adc
add
(bad)
leave
pop
add
mov
add
push
inc
fisttp
fcomp
push
in
enter
hlt
fcom
inc
mov
loopne
lds
or
or
push
and
and
call
lahf
idiv
xchg
or
xor
or
pop
add
push
and
pop
jnp
shr
and
add
pop
leave
psubw
mov
push
push
add
inc
mov
inc
push
dec
mov
inc
mov
cmps
outs
js
inc
push
jbe
(bad)
je
pop
or
rcr
(bad)
movs
jb
outs
sbb
inc
dec
cli
mov
mov
dec
jae
mov
aaa
aaa
or
hlt
mov
or
push
add
fmul
inc
popa
loopne
add
loopne
cmps
mov
or
lock
pop
mov
sar
int
cld
mov
fs
xchg
cmp
hlt
ins
dec
js
and
popf
aad
ret
adc
and
sub
es
add
jno
inc
jb
call
add
xchg
inc
xchg
xchg
mov
ror
inc
inc
cwde
data16
mov
or
jge
cli
sub
mov
or
sub
cwde
or
mov
sbb
inc
jle
adc
std
pop
pop
or
sub
test
and
inc
add
add
push
add
cmps
mov
or
xor
xor
inc
and
dec
jge
jbe
inc
and
sar
push
ret
gs
hlt
lock
push
pop
mov
fadd
fstp
pop
push
cwde
rcl
inc
and
cld
and
ss
xor
mov
je
push
mov
inc
push
nop
sub
fadd
ss
out
mov
mov
leave
enter
fsubr
aam
xchg
or
aam
rol
in
jmp
inc
int3
int3
push
nop
dec
enter
stos
lods
sub
pop
(bad)
mov
ds
pusha
or
pop
dec
or
mov
ja
xor
pop
or
repnz
sub
xor
cs
lea
dec
jbe
or
ret
ror
out
jae
mov
and
push
jo
and
lea
and
push
and
adc
mov
xchg
jl
sub
inc
adc
pop
sub
xchg
mov
clc
push
sub
add
xor
sub
mov
push
loope
imul
jbe
int3
push
test
aaa
fwait
(bad)
push
xchg
movs
or
and
movs
mov
add
jae
and
movnti
pop
lahf
dec
scas
fs
pushf
cwde
inc
and
jae
pusha
pusha
cwde
js
pop
enter
xchg
nop
nop
stos
cmp
popa
or
push
popa
ss
inc
jbe
dec
mov
dec
or
call
push
or
pop
add
inc
stos
xor
int3
outs
and
pushf
and
sbb
mov
or
stos
xchg
add
mov
mov
jl
fmul
stc
pop
fstp
xchg
mov
out
jl
call
push
je
add
and
adc
loop
add
jge
adc
mov
mov
gs
add
fisttp
repnz
lds
cmp
add
inc
dec
gs
(bad)
dec
adc
and
xchg
cmp
cmp
mov
pop
test
sub
fisttp
or
and
push
add
inc
rcl
or
mov
mov
les
or
sub
inc
aam
and
jnp
rcl
fs
mov
cbw
jb
aam
inc
or
sbb
popf
in
imul
sub
daa
and
aas
sub
bound
call
push
mov
in
test
fs
xchg
shl
jl
shrd
adc
xchg
or
or
jb
movs
mov
and
inc
mov
jb
xchg
mov
cwde
mov
(bad)
(bad)
mov
scas
xchg
xchg
rcl
pop
xchg
xor
out
add
fucomip
sub
nop
nop
sub
aas
addr16
inc
xchg
xchg
das
call
xor
test
mov
xor
pop
inc
movs
cmps
into
or
sbb
(bad)
pop
rol
jl
jmp
lea
sbb
adc
mov
enter
hlt
add
inc
in
call
jb
cdq
retf
and
jge
and
or
lock
or
loopne
js
mov
mov
lods
xchg
clc
mov
cld
cmp
add
int
xor
or
(bad)
fwait
add
ins
in
lahf
ficom
xor
mov
and
sbb
xor
mov
pop
repz
mov
lahf
xchg
lods
rcl
inc
rol
pop
xchg
xor
mov
sub
sbb
xchg
imul
add
push
push
sub
es
adc
jb
push
add
or
in
cmp
pop
adc
or
test
dec
push
add
adc
ins
or
fisubr
jo
pop
mov
mov
sbb
popa
push
not
push
adc
push
xchg
fs
and
rol
fs
inc
push
int3
enter
push
sbb
mov
fs
xchg
push
nop
sub
nop
and
jg
dec
push
sbb
loopne
and
nop
sbb
imul
in
and
repnz
leave
and
add
add
test
mov
push
pop
mov
sub
cmps
mov
xor
mov
dec
iret
fld
and
cwde
aad
or
ins
add
xor
cmp
pop
sbb
mov
repz
je
cmp
out
punpckhbw
aam
add
retf
repz
aam
xchg
rol
enter
or
shl
push
xor
out
add
add
or
add
stos
push
shr
sbb
pop
xchg
in
scas
int3
lock
out
cmp
in
fldcw
push
add
sub
cli
mov
mov
add
ror
aaa
sbb
sbb
sbb
xor
and
les
mov
push
sar
or
or
lahf
pop
leave
aaa
cmp
sbb
push
outs
and
sbb
mov
loop
mov
inc
imul
sub
scas
test
xor
mov
push
xor
mov
bound
add
push
mov
inc
enter
push
xchg
adc
push
addr16
leave
sbb
jbe
out
lods
in
dec
mov
dec
sub
dec
ss
std
mov
jl
sbb
sbb
pop
shl
or
hlt
and
aas
jl
jl
jb
mov
push
mov
or
cmps
xor
shld
pop
inc
inc
mov
retf
adc
xor
out
clc
clc
and
shl
and
ror
aad
sub
(bad)
imul
addr16
mov
pushf
popf
movs
cmp
cmp
mov
mov
cli
mov
pop
xchg
out
sbb
mov
inc
sbb
inc
sub
rol
sbb
lock
clc
out
and
and
adc
add
sbb
inc
push
shl
dec
inc
sti
xor
and
push
jb
push
imul
lds
cwde
jmp
ss
xlat
movs
lods
add
fcom
sbb
cmp
fsub
lds
or
add
cmp
jmp
adc
adc
stos
out
push
push
and
xor
mov
add
mov
ficomp
and
test
or
add
mov
and
push
inc
in
retf
fild
mov
add
sbb
stos
loopne
outs
add
enter
sbb
call
or
cmp
push
lods
xchg
cld
popa
popa
mov
sub
jmp
or
je
inc
mov
or
fcomp
xor
cmp
lods
and
lods
push
jbe
fdivr
scas
int
pop
mov
sbb
in
jg
aaa
movs
pusha
daa
neg
add
ror
(bad)
inc
repnz
and
cmp
add
add
push
xor
dec
shl
mov
and
cmp
cdq
in
and
mov
push
dec
clc
loope
or
inc
push
xor
xchg
and
dec
mov
lods
out
sahf
pop
dec
sub
pushf
fucom
jge
movs
and
aam
sbb
adc
jae
dec
add
stc
xor
lock
push
int3
mov
sub
dec
stos
dec
fs
movs
clc
jge
add
pop
or
pop
pop
adc
jne
nop
jp
imul
shr
enter
fnstcw
sub
push
push
cmp
fsubr
inc
dec
jnp
inc
cmp
cmp
cmp
jmp
cmp
jne
mov
jne
or
fidivr
bound
pop
mov
or
repnz
adc
mov
pop
inc
aam
sub
hlt
lods
fadd
mov
cld
ins
mov
push
adc
and
cs
push
jmp
pop
jae
sbb
ins
sbb
pop
dec
enter
cmp
inc
add
mov
enter
mov
hlt
cmps
loope
nop
(bad)
and
clc
(bad)
sbb
mov
and
js
fs
dec
add
sub
pop
cli
outs
push
adc
mov
mov
into
stos
shl
mov
outs
dec
loop
mov
mov
ja
sub
enter
pop
repz
dec
repnz
pop
sub
std
dec
adc
dec
mov
call
js
adc
xor
adc
dec
sbb
and
jne
push
adc
pop
imul
jne
test
popf
dec
mov
and
dec
push
daa
scas
push
and
or
jb
ins
pop
jecxz
push
and
push
outs
mov
mov
inc
and
add
adc
lods
jns
sbb
bound
lds
js
mov
adc
aaa
outs
fadd
aad
sbb
mov
out
adc
cmp
push
test
jle
mov
adc
jb
popa
je
jp
sbb
xor
add
pop
push
adc
test
ret
mov
lods
inc
repz
ds
dec
in
mov
outs
cmps
xchg
rcl
or
dec
add
sbb
in
add
adc
add
and
inc
pop
add
add
ss
pop
xor
add
push
xor
pop
leave
dec
or
and
sahf
and
mov
(bad)
aad
shr
xor
fwait
and
test
push
adc
leave
add
fld
in
popa
test
pop
(bad)
test
mov
sub
cmp
push
sub
aaa
mov
mov
test
cld
sub
jge
test
cs
cmp
ret
push
jb
bound
and
jmp
fadd
xchg
dec
xor
mov
sub
pop
pop
js
es
cs
mov
mov
popa
cmps
and
neg
mov
mov
sub
jnp
in
shr
pop
scas
pop
or
test
dec
inc
mov
daa
or
addr16
movs
gs
js
mov
and
jae
mov
jo
sar
(bad)
in
pop
clc
pop
or
pusha
cs
cmp
and
test
daa
hlt
add
aaa
test
sbb
add
es
daa
sub
sub
and
push
mov
test
sti
cmp
cwde
xchg
lods
cld
cmp
jl
call
adc
xchg
inc
test
pop
test
retf
call
ins
dec
out
jne
sub
inc
xchg
xchg
xor
mov
jnp
fsub
adc
sbb
and
test
or
push
or
sti
mov
mov
int
aam
imul
call
pop
mov
sub
ins
pop
mov
movs
ds
test
push
jmp
push
lods
or
aaa
adc
sbb
add
lock
and
and
sbb
test
int3
outs
mov
jbe
je
adc
sbb
in
xor
enter
mov
xchg
jl
mov
push
mov
inc
sbb
adc
ds
shufps
sti
jno
sbb
push
je
stos
mov
dec
push
jbe
mov
push
jns
xor
pushf
inc
dec
sub
sbb
cwde
cdq
leave
es
xchg
xor
and
pop
mov
cmp
add
and
arpl
repnz
xor
mov
enter
add
mov
push
pop
or
arpl
fldcw
outs
push
jo
in
and
add
repnz
sub
ror
jl
add
inc
aad
adc
xchg
xor
je
popf
sub
call
mov
sbb
or
sbb
dec
mov
mov
daa
sbb
inc
ja
push
jbe
and
clc
mov
in
rol
aaa
into
adc
add
cmp
imul
imul
cmp
sbb
inc
fdivr
jl
mov
out
retf
push
test
mov
scas
dec
mov
xchg
lods
cmp
std
mov
cwde
add
cmp
inc
adc
or
cwde
push
dec
daa
ja
mov
retf
loop
js
repz
jne
inc
add
sub
dec
adc
aaa
and
inc
mov
rep
or
outs
mov
or
dec
ins
test
fwait
pop
dec
(bad)
or
or
mov
in
add
pop
adc
push
add
sahf
push
jo
sub
push
xchg
leave
push
jp
sub
and
mov
pop
mov
das
test
mov
pop
(bad)
xor
push
xlat
pop
fcmovne
cld
ins
mov
or
cmp
adc
neg
cmp
jne
xor
fistp
push
mov
cmp
loop
mov
mov
mov
push
sti
sbb
dec
gs
pop
adc
adc
inc
cmp
dec
cmp
and
push
cmp
call
and
add
mov
ror
(bad)
lsl
cmp
fld
push
nop
and
mov
push
add
push
and
or
outs
sbb
add
cmp
sbb
and
outs
mov
dec
lods
imul
in
add
mov
adc
mov
rcl
test
icebp
push
and
sub
sub
xor
cmp
add
add
cmp
mov
call
leave
inc
or
jns
and
and
retf
cmp
push
mov
iret
mov
mov
push
cmp
mov
ins
mov
ss
add
out
and
sub
arpl
xor
mov
ficomp
xlat
test
and
adc
test
fsub
popf
loopne
stos
int
in
pop
jp
inc
or
test
jl
inc
xor
jp
cdq
idiv
ret
or
or
mov
ja
inc
add
mov
out
pop
xchg
adc
sbb
ins
lods
loop
sti
inc
dec
jne
inc
push
push
fidiv
imul
(bad)
in
mov
call
test
jl
inc
fld
aas
xor
add
mov
xor
pop
xor
add
dec
sub
pop
cmp
push
pop
mul
cli
push
pop
push
sbb
ret
fst
xor
ds
inc
push
and
adc
lods
mov
aam
rcr
cmp
out
div
pop
mov
or
cmps
jle
lahf
imul
in
or
xchg
js
outs
shl
dec
sbb
mov
shl
(bad)
ds
dec
call
je
push
push
add
and
add
mov
push
daa
sbb
and
jnp
or
hlt
mov
(bad)
pop
add
xor
jo
sub
cmp
xor
sub
mov
push
dec
js
sub
add
adc
pop
cmp
nop
inc
(bad)
and
mov
mov
jg
rol
and
cmp
jg
ins
mov
sbb
add
xor
or
inc
fs
aaa
jge
add
pop
add
sbb
sub
dec
dec
xchg
ds
jae
hlt
sbb
inc
jae
jl
add
xor
cli
pop
inc
inc
cli
mov
cmp
mov
btr
retf
xchg
cmps
pop
push
fldcw
jno
or
fs
adc
or
or
pop
jnp
pop
push
or
inc
pop
lea
inc
mov
jmp
ja
(bad)
cwde
mov
push
add
push
inc
sub
test
push
cmp
cmp
pop
push
js
or
inc
ins
scas
or
jg
fxch
jb
lar
push
push
mov
or
push
mov
nop
or
adc
push
repnz
movs
cmps
or
or
push
jo
adc
mov
cmp
mov
ror
ins
push
jno
or
push
push
in
pusha
and
outs
ss
ret
or
es
dec
push
fs
cmp
or
imul
or
jmp
xor
jae
cmp
sbb
mov
sbb
lods
mov
adc
push
ss
outs
fsubr
das
pop
inc
cli
cmp
ja
push
sub
add
jg
sbb
cmps
jbe
nop
xchg
adc
sbb
inc
adc
mov
in
and
pop
je
pop
inc
and
adc
push
inc
das
rol
scas
pusha
test
and
sub
cdq
inc
sub
and
adc
push
popf
and
data16
inc
mov
jae
ror
mov
cmp
and
push
push
add
inc
dec
outs
xor
ja
dec
lea
dec
pop
inc
xchg
xchg
in
ret
js
je
pop
or
jle
fild
mov
sbb
rcr
iret
call
or
and
push
sti
pushf
je
add
fsub
jle
fcom
or
icebp
int3
pop
and
fadd
adc
mov
inc
dec
xor
ficomp
ins
add
dec
push
call
popa
in
sbb
fldenv
mov
add
inc
pop
mov
cmp
xor
loope
cmp
cmp
and
sub
mov
stc
pop
daa
xchg
inc
push
add
xchg
lar
adc
mov
fwait
push
movs
pop
or
push
sbb
adc
(bad)
or
adc
and
(bad)
sub
push
sbb
pop
xor
aas
test
inc
pop
in
push
jb
pop
inc
lahf
and
inc
add
enter
inc
ret
inc
add
leave
leave
leave
leave
cld
clc
hlt
lock
in
cmp
push
cwde
cmp
pop
dec
lock
les
test
push
xchg
inc
daa
or
stos
loopne
pusha
outs
dec
(bad)
addr16
ja
jl
cmovb
mov
mov
pop
mov
adc
add
rcl
mov
adc
dec
push
pop
pusha
(bad)
sar
sbb
enter
js
js
in
cli
fdivr
ins
add
adc
mov
and
sbb
inc
fs
sub
rcr
adc
push
dec
mov
call
push
(bad)
push
imul
pusha
pop
jle
mov
and
repnz
pusha
cs
test
mov
stos
mov
or
push
or
pop
fsub
imul
lea
adc
neg
or
call
inc
mov
cld
add
ret
add
and
or
mov
push
pop
mov
sar
loop
sub
mov
ror
jecxz
leave
or
sub
or
push
hlt
pop
imul
mov
outs
into
test
popf
mov
xor
or
jmp
stos
and
leave
fbld
add
lock
or
ficomp
sbb
sub
bound
and
test
ja
dec
loop
adc
(bad)
popf
dec
add
add
fisubr
fadd
add
xor
lock
adc
push
js
push
sbb
add
push
or
jle
mov
inc
pop
dec
dec
add
js
in
xor
or
or
pop
test
add
jnp
ror
or
push
ins
mov
stos
pusha
dec
movs
out
aas
mov
sub
sar
add
push
and
add
mov
inc
je
jne
mov
sub
mov
xchg
dec
jne
mov
or
test
cmp
rol
je
ja
push
pop
push
add
fwait
push
inc
pusha
pop
inc
sub
lea
out
xor
outs
sbb
pop
ret
sbb
inc
sub
cmp
bound
jnp
adc
bound
jmp
push
add
mov
or
lea
mov
add
lahf
adc
mov
mov
cmp
inc
call
cmp
jmp
push
pop
mov
cmp
and
cs
push
add
xchg
fwait
push
pop
jbe
xchg
inc
add
add
or
das
add
add
pop
enter
xor
inc
xor
sbb
mov
in
sub
sub
dec
push
mov
xchg
push
jg
xor
add
and
sbb
inc
sbb
jo
xor
xchg
fwait
rcl
add
clc
mov
or
icebp
test
mov
adc
push
pusha
daa
mov
jbe
pop
mov
sbb
and
les
(bad)
pop
mov
and
cmp
int3
mov
cdq
sub
push
jg
int3
mov
or
je
mov
mov
jmp
cmp
push
mov
add
fsub
add
and
sbb
mov
dec
inc
pop
adc
movs
mov
mov
fs
push
add
jmp
mov
push
push
push
or
sub
inc
ds
popa
xor
push
imul
jl
xor
xor
add
or
lea
add
jnp
mov
ficom
cmp
or
or
pop
jge
and
inc
or
mov
sub
xor
aad
add
sti
sub
inc
movs
or
adc
dec
or
sub
aam
test
or
xchg
call
xlat
cmp
and
or
or
inc
push
loope
jo
push
ficomp
lods
inc
push
outs
add
or
test
mov
ret
fnstenv
jnp
jne
mov
sub
(bad)
cmp
jne
inc
or
inc
add
imul
ins
and
mov
mov
movs
mov
mov
(bad)
(bad)
mov
push
push
push
scas
or
fcmovb
mov
repz
cmp
xchg
or
mov
mov
or
sbb
test
push
fucomip
mov
adc
daa
mov
fsubr
inc
sub
add
int3
pop
xor
adc
or
xchg
adc
aam
fisttp
mov
mov
lods
mov
push
pop
mov
pop
push
pop
xor
test
and
adc
sub
jge
inc
or
sahf
and
add
shr
add
add
pop
ficom
cld
mov
cmp
pop
out
add
cmc
test
and
adc
(bad)
mov
repnz
inc
clc
mov
jle
rol
cmp
sub
pop
sub
setle
push
adc
mov
cwde
out
xor
mov
jp
inc
sub
jmp
inc
mov
cs
jmp
or
mov
add
popf
or
or
not
xchg
push
adc
and
dec
push
sbb
inc
mov
jbe
enter
mov
xchg
test
mov
xchg
inc
daa
test
inc
outs
in
inc
cmps
xchg
aas
and
pop
sub
adc
add
loopne
mov
adc
add
stc
jae
mov
outs
add
fild
or
or
or
inc
push
or
test
outs
add
loope
test
test
(bad)
mov
mov
pop
add
xor
xchg
dec
or
adc
adc
push
or
push
sbb
js
push
jne
and
cmp
cmp
es
dec
mov
aas
adc
pusha
dec
or
push
sbb
nop
or
jno
test
retf
pop
or
imul
sbb
mov
inc
adc
inc
call
sbb
ins
cmp
inc
dec
cmova
xor
sti
mov
push
cmp
xchg
es
push
lds
cmp
add
out
std
xlat
mov
cmp
stos
cmps
add
repz
les
mov
inc
and
ja
or
or
jo
inc
mov
jmp
adc
pop
push
pop
sahf
fcmovnbe
test
movs
cmp
and
inc
test
add
jbe
jne
jmp
add
rol
popf
cwde
sub
mov
push
and
pop
cmp
jbe
mov
das
mov
adc
pop
xchg
js
fs
sub
or
das
cmp
sub
test
push
or
addr16
or
out
inc
in
add
jl
adc
pop
push
inc
mov
in
mov
cmp
and
dec
dec
sbb
loop
cmp
xchg
aas
and
mov
push
test
push
cld
fdiv
imul
in
xor
rol
popa
sbb
dec
cmp
ja
nop
cmps
adc
leave
and
and
cmp
fs
xor
ins
and
gs
jecxz
movs
inc
inc
js
jne
or
or
mov
in
cmp
sbb
push
xchg
loop
fcom
int
ins
jo
and
data16
ror
jb
sbb
ins
cmp
nop
pushf
mov
mov
and
sti
dec
mov
mov
pop
adc
sbb
jns
dec
push
adc
dec
iret
pop
dec
enter
dec
fs
dec
das
pop
mov
mov
dec
adc
jb
xor
fs
or
and
nop
inc
push
xor
cmp
lds
pop
inc
jmp
and
dec
popa
imul
cld
push
push
inc
icebp
pop
push
cs
stc
or
inc
cwde
(bad)
or
adc
mov
in
sahf
mov
adc
adc
sub
ret
inc
movs
fisub
fcom
dec
push
lea
lahf
push
retf
in
adc
data16
les
or
pusha
ins
or
sbb
push
ins
and
rol
pop
or
mov
add
push
inc
or
push
and
popa
push
in
mov
xchg
shr
push
gs
or
cs
add
out
icebp
dec
mov
add
add
jecxz
cwde
push
in
std
sub
jnp
mov
cmp
or
or
mov
sub
sub
adc
sbb
sbb
mov
pop
push
push
add
stc
or
push
mov
xchg
inc
jle
pop
mov
inc
aaa
nop
cmps
mov
aas
mov
into
dec
jb
pop
push
sbb
test
sub
fild
add
add
hlt
add
add
mov
mov
lea
inc
pushf
fwait
dec
jbe
sub
fs
and
sbb
mov
mov
sbb
not
or
(bad)
sbb
or
inc
pop
mov
adc
or
mov
or
add
jl
popf
or
sbb
push
sbb
cmp
sbb
lds
fild
jp
add
and
mov
iret
mov
call
and
jnp
or
and
xlat
dec
sahf
clc
jge
add
add
inc
clc
pop
xor
mov
mov
or
dec
mov
imul
jbe
hlt
fbstp
bound
or
cdq
ins
lock
cld
cmp
sahf
add
add
cwde
mov
fild
mov
lods
retf
mov
retf
movs
mov
xchg
in
and
lahf
adc
mov
xchg
mov
lea
push
mov
dec
idiv
jne
mov
es
rcl
and
mov
popf
jnp
pop
out
xor
mov
arpl
sbb
mov
adc
iret
mov
xlat
shrd
add
push
mov
(bad)
int
movs
push
jns
pop
xor
push
fst
adc
mov
mov
add
or
or
jnp
or
stos
add
loopne
jns
rep
cwde
xor
sahf
push
mov
add
mov
push
daa
hlt
in
popa
inc
dec
sbb
mov
lods
outs
or
enter
dec
dec
jp
and
int3
pusha
add
or
push
lock
push
imul
xchg
push
push
ja
ss
lea
ja
cs
sbb
test
(bad)
ss
add
lock
and
or
enter
xor
or
sub
dec
mov
sbb
sbb
(bad)
(bad)
arpl
pop
adc
mov
daa
mov
cmp
test
jb
sbb
addr16
pop
and
jae
aas
inc
mov
sub
dec
ror
stc
adc
enter
pop
jl
fs
push
add
and
sub
(bad)
adc
jmp
mov
iret
dec
test
dec
push
or
out
outs
leave
pop
xchg
add
ss
aas
inc
inc
jmp
js
adc
loope
jmp
push
loop
test
cmp
ja
aam
push
pop
retf
cs
pop
pop
cs
fcmovnu
pop
add
pusha
ja
mov
in
jb
or
push
hlt
ins
mov
add
jo
je
jne
call
mov
retf
cmps
jmp
pop
push
pop
lock
push
mov
dec
pop
mov
pop
imul
and
nop
cld
jo
mov
in
inc
jo
clc
or
adc
cld
movs
mov
adc
adc
les
lods
mov
lods
sub
retf
rol
or
lds
sub
dec
sub
and
nop
mov
or
rcl
mov
in
(bad)
mov
aam
xor
xor
lahf
pop
pop
and
ja
and
mov
(bad)
mov
popf
imul
call
sbb
jo
das
outs
dec
repnz
call
enter
push
outs
cmp
mov
mov
add
in
fsub
xor
fcom
push
leave
mov
add
(bad)
ins
(bad)
ins
dec
lock
fsubr
dec
ror
cmp
xchg
sahf
pop
dec
popa
call
xor
adc
sbb
add
sub
or
popf
xor
xchg
sub
stos
xchg
int
push
jnp
push
and
gs
xchg
adc
xor
inc
push
xor
cmp
push
sub
cdq
out
inc
ss
inc
xchg
mov
sbb
jae
xor
jg
pop
cmp
jne
icebp
cmp
ret
imul
pop
sbb
nop
ror
dec
add
jbe
dec
scas
push
lods
mov
pop
or
inc
cmp
sub
in
sbb
xchg
jno
cmp
mov
jo
pop
or
sbb
inc
or
imul
sub
xor
xlat
fwait
push
jb
dec
or
or
and
pusha
shl
arpl
dec
shl
ret
and
in
ds
aam
add
cdq
aam
fld
ret
adc
add
sbb
push
or
subps
and
aad
lods
or
jae
mov
sub
sti
add
inc
or
adc
mov
sub
daa
nop
gs
adc
rol
adc
and
add
add
add
inc
test
push
sbb
pcmpeqb
dec
cmc
and
jg
push
mov
daa
xor
js
jno
and
push
xor
enter
les
icebp
sub
sahf
pop
cld
or
test
pop
and
add
(bad)
pop
popa
inc
add
rcl
adc
bound
shl
and
inc
mov
in
data16
rol
sbb
and
mov
dec
je
xor
dec
js
fs
adc
mov
lea
sub
retf
sub
cdq
push
push
sbb
mov
fsub
dec
adc
xchg
repnz
mov
add
mov
and
lods
lods
mov
pop
lods
push
dec
add
add
int
enter
sbb
add
push
or
inc
scas
shl
fldenv
xchg
test
sbb
popa
in
or
pop
cmp
adc
add
xchg
scas
cmp
or
jno
or
sub
into
pop
and
xor
xor
and
push
inc
and
xor
adc
adc
and
stos
(bad)
pushf
mov
js
movs
cwde
mov
cwde
clc
xchg
xchg
adc
outs
inc
pop
mov
push
rol
nop
nop
xor
ror
cmp
inc
lds
and
sti
mov
add
add
mov
int
js
add
test
test
or
add
fldcw
push
push
mov
and
sti
pop
dec
fsubr
lsl
push
cld
and
jbe
adc
test
mov
mov
sub
mov
mov
mov
push
adc
sub
in
js
mov
inc
nop
loopne
sub
pop
or
cmp
push
out
cld
inc
lods
ds
rol
push
inc
fsubr
and
push
les
push
lods
mov
lods
or
adc
jae
jno
add
sub
pop
sbb
nop
or
pop
movs
cmp
and
inc
add
nop
sbb
mov
popf
rcr
pop
enter
shl
js
js
inc
inc
scas
ret
or
movs
lock
adc
cmp
pop
mov
xchg
xor
or
or
js
push
push
mov
dec
fs
sbb
xor
dec
in
cmp
mov
push
cmps
mov
jb
or
mov
push
daa
loopne
or
pusha
pusha
mov
jo
sbb
mov
pop
std
aam
dec
or
int3
adc
and
ins
ins
fs
ret
mov
mov
popa
push
cmps
mov
out
(bad)
int3
fs
pop
push
pop
das
push
or
pop
sbb
inc
adc
adc
das
es
inc
sbb
adc
xchg
push
mov
mov
mov
leave
xor
pusha
pop
cmc
sbb
lea
addr16
mov
leave
sbb
xchg
push
mov
pop
js
push
iret
out
cdq
dec
hlt
cwde
sahf
loopne
push
js
dec
dec
enter
js
inc
mov
and
push
jbe
dec
jnp
or
pop
and
pop
cdq
cmp
clc
neg
push
sbb
dec
mul
sbb
sub
leave
mov
pop
nop
inc
or
or
dec
add
or
or
or
call
mov
scas
enter
js
ret
or
hlt
in
add
mov
enter
repz
or
ror
add
sub
das
inc
sbb
daa
mov
xchg
or
cwde
js
outs
test
push
sub
test
adc
in
mov
js
inc
inc
and
xor
mov
xchg
fnsave
rol
inc
jo
add
jno
xor
cmps
imul
xchg
inc
xchg
outs
rcr
ds
je
cmps
mov
add
cmp
or
cmp
loope
xor
sbb
push
push
fs
jns
scas
sub
push
mov
cmps
xor
fst
add
es
and
ret
add
call
js
sub
or
mov
adc
adc
nop
dec
push
test
outs
jg
xchg
lods
inc
loopne
rcl
call
xlat
jmp
adc
loopne
jae
add
cmp
push
and
and
test
add
xchg
push
inc
inc
xor
add
dec
mov
ror
clc
push
arpl
add
adc
mov
enter
sbb
lods
sbb
es
xor
cmp
and
xor
out
cmp
dec
jmp
fs
adc
and
jo
int3
xor
cmp
in
int
int3
and
or
daa
xchg
jecxz
je
xchg
popa
fs
in
inc
add
popf
push
jbe
jp
lahf
arpl
enter
sub
mov
dec
les
mov
pushf
sub
call
cs
inc
push
clc
fisttp
in
inc
sub
or
je
repz
dec
cmp
mov
or
pop
push
mov
call
mov
lds
icebp
sbb
inc
mov
adc
dec
jnp
popf
xchg
add
sahf
sub
or
xchg
dec
adc
add
jmp
mov
mov
pop
pusha
xchg
cld
mov
fnsave
sbb
sbb
lods
pop
and
lds
inc
sbb
or
dec
add
or
add
fwait
je
add
mov
fs
mov
dec
sahf
call
sbb
fld
or
xchg
inc
out
cmp
jo
and
sti
and
pop
pop
add
js
jg
test
pop
out
in
push
pop
push
push
inc
dec
cli
sub
xor
and
dec
dec
inc
dec
push
sub
push
inc
gs
je
sti
dec
movs
popa
ins
(bad)
popa
jbe
jb
lock
imul
push
inc
jne
push
or
mov
outs
and
jb
jge
dec
js
pop
dec
out
and
cmp
enter
in
imul
fwait
sub
adc
mov
push
push
inc
push
out
push
mov
in
jo
add
dec
cmp
jbe
pop
push
popa
pop
or
dec
push
push
jae
imul
test
add
jns
adc
inc
arpl
mov
push
or
(bad)
iret
dec
cmp
and
jmp
pop
push
mov
sub
add
mov
or
sub
pop
sub
mov
je
adc
xor
add
push
dec
(bad)
pop
mov
jmp
add
mov
ins
sbb
ret
cmp
sub
add
or
sub
push
sub
hlt
dec
cmp
sbb
push
imul
cmp
ins
jl
fdiv
jae
mov
loopne
jb
add
mov
push
fwait
jb
adc
pop
test
inc
(bad)
adc
pop
lods
fwait
mov
inc
adc
fisub
inc
cmp
and
ins
sti
ja
test
pop
inc
js
mov
and
push
mov
push
cmp
or
push
add
pop
ins
pop
enter
stos
in
dec
mul
push
jmp
sbb
and
mov
adc
ja
inc
cli
call
push
es
adc
add
and
mov
lods
dec
push
xor
adc
xlat
mov
push
out
push
push
mov
sbb
or
enter
inc
rol
fimul
jnp
addr16
loopne
sbb
push
inc
or
(bad)
aaa
sbb
xchg
add
adc
sbb
or
adc
je
inc
mov
js
jg
sbb
push
out
repz
add
ins
mov
popa
jge
sbb
inc
jge
pop
rol
mov
daa
and
hlt
ins
jo
inc
push
(bad)
push
loopne
or
xchg
sub
fldcw
jge
inc
mov
hlt
xchg
adc
gs
test
shl
push
and
test
jge
adc
pop
and
push
cmps
pop
sub
fcmovb
adc
push
add
xchg
add
xchg
jle
add
and
add
adc
adc
cmp
cmp
lods
or
mov
test
or
add
xor
add
or
fistp
push
jg
and
inc
jmp
std
push
jbe
adc
loope
jbe
aas
(bad)
lods
jg
xchg
sbb
in
in
sbb
jg
or
push
aas
dec
dec
pop
imul
shl
imul
fcom
jb
enter
pop
or
pop
jnp
ds
rol
adc
test
es
add
push
xlat
push
gs
push
inc
xchg
jecxz
xor
add
cwde
fwait
sahf
or
in
inc
xor
aam
xor
mov
dec
sahf
fs
out
mov
clc
test
add
leave
daa
fnstenv
loopne
mov
jne
dec
fsub
xor
sbb
adc
inc
loopne
dec
fadd
push
inc
rcl
xchg
ins
mov
push
sub
inc
enter
frstor
int3
sub
mov
in
les
and
fs
cmp
rol
mov
sbb
mov
add
shl
sbb
inc
add
adc
add
add
fs
dec
push
jl
dec
bnd
cdq
add
inc
stos
pop
sub
adc
loopne
mov
jmp
mov
adc
dec
mov
arpl
imul
sbb
or
dec
leave
inc
rcr
test
or
sub
and
mov
dec
mov
xchg
or
pushf
pushf
mov
test
add
mov
inc
aas
mov
inc
fcomi
or
call
push
fst
popa
inc
je
js
xor
pop
aam
sahf
mov
push
test
test
push
jne
inc
popf
xchg
test
dec
adc
ret
mov
and
or
inc
sub
outs
test
daa
and
jbe
push
mov
jno
fst
les
xor
scas
xchg
add
fwait
gs
int3
jl
dec
xor
add
in
fld
mov
lea
mov
add
cmp
lods
scas
sub
hlt
mov
mov
mov
mov
and
or
or
or
adc
sbb
retf
scas
pop
outs
pop
loopne
pushf
ins
add
ss
aam
mov
je
in
cmp
cmp
cmp
aas
inc
ss
data16
add
je
inc
mov
cdq
scas
pop
pop
add
push
rol
shl
and
js
jmp
push
das
sbb
ins
ret
shl
sbb
enter
pop
(bad)
enter
aam
int3
and
rol
mov
or
enter
movs
xor
and
and
or
test
push
or
jb
and
leave
and
pop
and
push
push
xchg
pop
jb
dec
dec
inc
inc
pop
jb
and
leave
and
leave
and
sbb
xchg
pop
jb
adc
xchg
pop
jb
or
add
cs
in
cld
(bad)
clc
hlt
xor
xchg
dec
lock
push
or
test
mov
sbb
imul
push
add
shl
ja
outs
lock
call
push
sub
push
lods
xor
test
pop
jbe
xchg
arpl
sub
test
jl
and
mov
fsub
add
mov
sub
push
aaa
push
adc
push
retf
inc
push
outs
cwde
mov
inc
add
push
imul
inc
lock
test
pop
mov
js
pop
adc
mov
scas
pop
shr
add
jb
mov
cmp
cmp
das
and
jl
pop
mov
(bad)
adc
leave
in
aaa
xor
adc
sub
fwait
dec
jns
pop
sbb
ret
jl
loopne
xor
adc
loopne
or
js
push
pop
inc
mov
retf
pusha
mov
or
arpl
add
sar
mov
pop
sub
push
enter
ror
mov
mov
and
xor
call
loopne
les
adc
movaps
movs
jmp
push
dec
ret
add
lds
and
mul
dec
or
inc
pop
mov
adc
mov
mov
imul
mov
(bad)
call
mov
int3
shr
mov
mov
leave
mov
inc
or
add
mov
or
pop
icebp
dec
fs
and
pop
push
xchg
sub
ror
adc
dec
popf
ins
pop
js
pop
or
and
(bad)
call
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
das
fbld
push
sub
mov
and
(bad)
mov
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
cmp
inc
xchg
lea
pop
jbe
into
scas
pop
mov
dec
push
push
mov
adc
xlat
push
push
aam
fadd
in
imul
cmps
imul
imul
cmps
imul
call
call
fsub
in
ins
mov
imul
pop
add
add
fs
dec
dec
mov
and
je
sbb
xor
nop
xchg
pop
call
nop
or
popa
cmp
nop
mov
pop
ins
(bad)
enter
pop
rcr
and
adc
and
push
test
popf
add
sub
dec
push
inc
or
xor
scas
xor
jle
or
ret
cmp
jne
push
or
ror
add
jo
out
jl
jae
pop
or
in
ja
add
or
add
add
inc
je
add
jnp
(bad)
(bad)
imul
dec
das
std
add
jb
addr16
xchg
add
in
sub
jnp
ins
fs
(bad)
outs
jne
and
imul
leave
nop
dec
add
add
add
arpl
nop
inc
push
cmp
add
or
sbb
or
nop
or
add
jne
mov
jnp
jns
add
xor
int3
sub
ins
in
sbb
dec
shl
pop
fdivr
shl
add
xor
ret
(bad)
adc
shl
mov
xor
shl
or
dec
retf
push
sbb
fidivr
mov
jp
push
xchg
shl
out
xor
shl
push
(bad)
ss
xor
shl
push
mov
shl
out
push
xor
shl
pop
fidivr
mov
jle
add
dec
shl
popa
loope
xor
shl
push
shl
mov
xor
shl
or
dec
leave
sub
dec
shl
pop
fnstcw
mov
jns
add
xor
lds
xor
shl
shl
lea
shl
in
sbb
popf
pop
fnstsw
sar
adc
or
xchg
shl
push
rcl
dec
shl
jae
xor
shl
repz
mov
xor
ror
dec
shl
imul
shl
jmp
sbb
fwait
pop
pop
fcmovnu
dec
shl
jnp
xor
shl
sti
pop
pop
xchg
xor
rol
dec
shl
addr16
shl
out
pop
xchg
shl
xlat
xlat
dec
shl
ja
xor
shl
test
dec
ror
dec
shl
outs
outs
xor
shl
out
pop
pop
lahf
shl
(bad)
dec
shl
jg
mov
inc
call
jo
imul
imul
cmps
imul
mov
add
and
mov
jecxz
add
sbb
or
cmps
imul
cmps
imul
cmps
imul
imul
pushf
push
test
stos
dec
pusha
add
fwait
xchg
and
js
imul
imul
cmps
imul
imul
neg
jnp
pop
push
push
dec
dec
inc
cmp
mov
fld
adc
fld
cmp
add
enter
stos
cdq
fist
lahf
je
jg
dec
pop
adc
pop
or
or
or
fstp
sub
add
or
and
inc
leave
nop
or
xchg
or
or
sysenter
fld
adc
adc
adc
adc
adc
sbb
sbb
sbb
(bad)
std
pop
icebp
in
adc
adc
nop
inc
push
sbb
adc
fs
xchg
push
mov
sbb
test
sbb
daa
fldcw
xchg
aam
and
or
dec
std
call
add
clc
sbb
inc
outs
jne
outs
mov
add
push
dec
inc
mov
xor
rol
(bad)
aam
call
loopne
pause
add
mov
add
movs
push
aas
jl
mov
cmp
mov
mov
pop
or
int3
pop
pop
xlat
inc
xor
rcr
add
cmp
mov
inc
imul
jne
test
and
les
scas
imul
inc
aas
sbb
retf
cmps
imul
lods
adc
test
call
add
push
pop
cmp
push
add
pop
mov
inc
fcom
je
adc
xor
lods
pop
add
jl
add
xor
fsub
add
test
pop
out
xor
push
mov
pop
xchg
sub
(bad)
sbb
add
daa
and
adc
je
jmp
ins
movups
pop
cld
in
push
xor
(bad)
je
mov
or
or
jl
int3
call
shld
cwde
add
imul
(bad)
dec
stos
es
pushf
mov
sbb
jbe
int3
push
adc
mov
mov
push
popf
pop
cmp
pop
in
mov
adc
pop
add
stos
inc
push
add
adc
mov
add
add
xchg
int
or
ret
or
xor
add
add
inc
ss
push
loope
add
add
aam
daa
cmp
mov
cmp
(bad)
(bad)
cmp
fistp
jl
gs
pop
pop
dec
dec
je
ins
jle
pop
push
fild
std
or
je
or
ja
in
mov
aad
je
sub
cmp
aas
cmp
sbb
inc
push
fild
movs
mov
shl
inc
ins
add
push
mov
(bad)
dec
fs
xor
inc
imul
push
mov
dec
cmovle
adc
inc
xor
push
outs
outs
jg
test
ins
ins
jo
push
outs
popa
jo
push
outs
je
shl
ins
jo
add
cwde
mov
pusha
mov
jmp
je
popf
or
or
jp
arpl
popa
or
mov
sbb
imul
or
imul
push
jne
ss
jnp
or
xor
push
in
adc
push
fwait
adc
push
frstor
fisttp
jo
in
and
imul
jns
jmp
(bad)
adc
inc
ins
popa
cmp
jp
push
mov
jnp
inc
je
imul
mov
lock
into
push
adc
xor
mov
(bad)
or
dec
jne
test
adc
data16
imul
jnp
mov
imul
or
(bad)
inc
js
inc
cdq
jbe
or
cld
fcmovu
imul
jb
or
mov
dec
mov
xor
or
fsubr
ds
add
in
out
adc
imul
push
popa
bound
call
jae
je
jnp
sub
ja
push
loope
(bad)
push
aas
imul
or
sub
jo
loope
cmp
jge
inc
inc
add
jnp
rcr
out
inc
jae
or
adc
cmp
cdq
sub
lods
push
add
ss
daa
sti
adc
ds
inc
fs
outs
jae
out
pop
ror
lock
inc
adc
xchg
adc
fstp
mov
jne
push
imul
mov
fs
outs
jbe
loope
inc
aad
aas
in
bound
inc
shl
mov
sub
adc
and
jo
(bad)
shl
or
jmp
jb
inc
push
cmp
jecxz
jecxz
pop
imul
rol
mov
call
mov
outs
jae
scas
add
imul
or
aam
mov
popa
test
pop
dec
xor
rol
xchg
cmp
mov
push
retf
adc
imul
int
pop
or
sub
data16
xchg
gs
out
sub
adc
and
stos
or
xchg
xor
and
sub
mov
int3
mov
int
inc
dec
adc
sbb
cmp
outs
mov
sbb
add
mov
mov
push
fsub
sbb
dec
iret
fs
rol
cmc
pop
and
xor
inc
inc
add
adc
mov
push
arpl
mov
lahf
dec
fsub
add
inc
xor
fisttp
pusha
push
sbb
shl
xor
inc
mov
jnp
outs
push
push
add
pop
aaa
push
je
sbb
push
and
out
and
and
and
imul
fs
cmp
mov
addr16
inc
adc
xchg
rcl
gs
mov
adc
int3
(bad)
xchg
xchg
fnstenv
push
or
retf
bound
ss
mov
in
dec
dec
cmp
sahf
inc
fistp
sbb
imul
sub
sub
sbb
push
sbb
jae
fs
lea
push
mov
ret
in
mov
inc
push
mov
add
imul
inc
jp
test
and
dec
jb
test
push
pop
cli
cs
pop
adc
jecxz
cwde
mov
add
pop
enter
mov
sbb
jbe
mov
push
stos
xor
xor
xchg
in
jo
inc
inc
lods
mov
or
sbb
sbb
shl
xlat
rol
push
mov
fwait
inc
stos
adc
fsub
ficomp
loop
dec
inc
or
jno
rcl
imul
lods
nop
test
arpl
push
bound
jnp
inc
imul
or
(bad)
loope
aaa
jae
xor
dec
xor
(bad)
cdq
mov
les
dec
fldcw
mov
inc
imul
sub
bound
inc
inc
ret
ins
retf
pop
push
dec
xchg
outs
push
shl
imul
inc
rol
ficomp
mov
pop
or
xor
call
fcmovnu
stos
mov
addr16
pop
cwde
mov
inc
sub
retf
push
repnz
out
(bad)
dec
adc
ins
cmp
test
mov
sub
test
push
add
mov
scas
movlps
out
or
dec
ret
xchg
or
xchg
push
mov
into
jl
push
dec
inc
xchg
outs
ins
ins
adc
cmp
mov
ins
and
mov
jne
pop
in
sbb
ret
aad
bound
or
xor
rcl
dec
dec
jae
and
and
inc
lock
inc
jmp
xchg
push
sbb
loope
sub
aam
ss
nop
movs
cs
scas
ficomp
je
inc
push
dec
test
fs
bound
jb
sub
js
cmp
pop
add
dec
jae
push
test
out
push
sbb
adc
je
push
dec
sub
out
fldenv
shr
xor
call
and
not
fiadd
(bad)
popf
arpl
pop
neg
xchg
push
repz
fldcw
cmp
inc
push
fwait
test
inc
jnp
call
imul
xchg
push
cmp
jmp
push
or
jb
ins
fsubr
dec
lahf
pop
mov
pusha
sar
imul
(bad)
or
les
mov
push
push
aas
shr
ror
mov
jo
push
and
cmps
cmp
and
mov
mov
dec
ds
mov
dec
mov
jo
sub
pop
and
mov
add
pop
adc
imul
or
or
(bad)
sub
xchg
bound
jae
adc
inc
mov
icebp
fisubr
adc
adc
ins
mov
add
out
mov
popa
gs
ins
cmp
sar
jno
push
outs
arpl
arpl
xor
push
inc
add
sbb
inc
fcomp
sub
loopne
pop
sti
add
sbb
jle
pop
adc
or
nop
fwait
ins
fbstp
or
add
add
out
jge
or
add
sub
add
adc
ss
dec
xor
(bad)
in
sub
sahf
popa
test
push
mov
dec
inc
inc
xlat
or
in
ret
jmp
and
or
in
stc
pusha
inc
inc
push
inc
mov
adc
sbb
dec
push
lds
push
or
or
mov
daa
into
dec
movs
mov
repz
sub
daa
sbb
dec
add
dec
repz
loopne
xchg
xor
leave
jb
daa
lock
pop
sub
or
add
ins
add
daa
jae
sub
adc
and
ins
add
sbb
(bad)
pop
inc
icebp
add
add
add
and
inc
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
sbb
add
and
add
xchg
nop
add
