(bad)
(bad)
(bad)
push
rol
pop
push
dec
jne
jmp
test
jne
xor
ret
mov
test
je
mov
inc
(bad)
(bad)
jg
test
je
push
jne
mov
mov
add
xor
xor
add
test
inc
add
cld
es
je
test
push
inc
(bad)
(bad)
inc
push
int
inc
jmp
ret
ret
lea
add
jmp
mov
mov
inc
shl
sub
lea
push
mov
or
push
add
push
call
pop
add
mov
add
dec
jne
push
adc
(bad)
(bad)
(bad)
inc
pop
lea
push
lea
mov
add
mov
add
rep
dec
jne
mov
pop
ja
ja
mov
pop
ret
pop
sub
add
add
jg
inc
cld
push
inc
push
push
push
push
sbb
add
out
call
mov
test
je
push
andps
(bad)
push
leave
pop
mov
add
sti
call
add
add
ja
add
push
out
jle
push
or
push
sbb
mov
jns
add
dec
leave
and
test
xor
cs
pop
test
ins
push
xor
add
cmp
add
add
cld
test
in
out
pop
div
mov
add
mov
xchg
inc
xchg
sub
mov
clc
cmp
ss
ret
push
in
hlt
cmp
sar
lahf
lock
push
jae
test
cmp
jle
fld
jae
mov
lock
out
lea
push
dec
or
sbb
test
cmp
je
mov
sub
push
outs
xcrypt-cbc
cmps
push
xchg
or
ins
test
cmp
hlt
push
push
(bad)
icebp
push
clc
pop
cld
mov
aas
in
jae
les
inc
inc
repnz
popa
and
gs
push
xor
add
scas
dec
sub
or
enter
outs
mov
adc
daa
xor
pop
lock
and
and
sbb
popa
fs
xor
xchg
inc
jge
jecxz
xchg
inc
mov
and
lock
and
pop
adc
pop
lods
hlt
xchg
and
xchg
out
out
inc
xchg
test
inc
or
pop
adc
shr
popa
or
stos
push
inc
add
dec
js
lods
mov
xchg
add
or
or
es
popa
add
inc
and
inc
hlt
or
leave
push
sub
fcomp
cwde
loope
inc
push
push
mov
push
cmp
jg
fucomip
call
pop
xlat
mov
cmp
jne
add
pop
out
adc
sbb
inc
mov
mov
sbb
push
hlt
mov
mov
call
dec
inc
(bad)
daa
mov
push
xchg
pop
mov
neg
add
cmp
add
out
add
js
jp
push
mov
(bad)
out
xchg
mov
jo
add
pop
pop
cld
push
add
inc
(bad)
mov
adc
add
inc
fmul
pop
pop
or
clc
rep
and
mov
mov
pop
push
push
rdtsc
mov
add
mov
sub
jmp
dec
inc
xor
div
add
ret
mov
(bad)
fisttp
or
or
mov
mov
test
jne
xor
test
je
cmp
mov
add
test
jne
xor
cmp
inc
ret
test
(bad)
(bad)
inc
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
adc
loop
mov
jne
sub
fucomp
js
pop
sbb
shl
ds
add
jmp
dec
test
mov
add
aam
ja
fwait
scas
int
retf
les
rol
rcr
pop
jg
out
mov
movs
mov
mov
xor
mov
add
push
push
or
pop
mov
mov
mov
lods
lock
stos
daa
inc
or
pop
loope
mov
adc
lock
push
pop
push
popw
inc
adc
fdivr
jge
add
test
ds
pusha
mov
lock
inc
and
mov
pop
push
mov
mov
mov
sub
or
mov
add
jns
repz
pop
push
pop
add
cld
es
rcl
fist
inc
in
push
mov
mov
push
push
push
dec
add
pop
pop
push
push
mov
mov
loopne
jnp
jmp
pop
jmp
mov
cmp
mov
pop
sub
xor
xlat
and
outs
pusha
xor
mov
in
rcl
mov
inc
in
mov
mov
push
push
pop
lahf
hlt
ja
or
add
cmp
sete
cmps
sbb
ins
xor
xchg
cmp
xlat
dec
push
(bad)
mov
or
add
dec
mov
ret
sub
addr16
movs
push
mov
adc
cwde
adc
mov
shl
popf
in
hlt
dec
mov
arpl
fld
cmp
cmp
mov
jae
pop
sbb
mov
test
adc
or
jmp
out
and
sub
clc
push
push
add
mov
xchg
adc
cwde
or
(bad)
jb
iret
sub
loop
add
ja
adc
mov
mov
push
add
pop
add
add
fsub
sub
gs
jmp
jmp
sbb
in
add
sbb
cmp
repz
and
inc
xchg
mov
add
test
mov
inc
push
adc
sub
rol
sahf
or
adc
jp
jb
dec
stos
jp
pop
push
shl
gs
mov
add
pop
test
rcr
dec
and
psllw
pop
outs
inc
leave
daa
(bad)
lock
xlat
call
dec
xlat
add
mov
test
fcmovnb
clc
mov
in
mov
inc
hlt
popa
jne
pop
or
add
sbb
mov
mov
mov
xor
mov
lea
push
mov
(bad)
or
lea
and
dec
sub
mov
cmp
pop
fcomp
and
cmovne
fmul
mov
push
pop
or
(bad)
ins
stc
mov
mov
push
sub
popa
adc
push
arpl
gs
fstp
arpl
aam
mov
test
je
push
fcomp
mov
mov
jne
std
(bad)
scas
ret
lds
xchg
push
adc
pcmpeqw
ds
jl
xchg
adc
sar
add
mov
push
xor
out
jge
mov
test
push
cmp
inc
add
inc
test
fidiv
pusha
std
pop
hlt
aad
sub
js
jns
push
or
jo
sub
fnstsw
aaa
add
pusha
mov
cld
push
push
or
fild
int3
clc
pop
or
lock
shl
push
mov
sbb
ret
jge
xor
jnp
call
cmp
es
inc
loopne
loopne
fmul
cli
movs
cmp
fdivr
jne
out
inc
dec
mov
jle
leave
mov
mov
or
xor
pop
cmp
(bad)
cs
sub
mov
inc
aam
mov
or
ror
ret
scas
pop
inc
shr
add
mov
(bad)
fild
sbb
push
mov
mov
or
and
(bad)
(bad)
jmp
je
test
push
cmp
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
(bad)
mov
push
add
cmp
add
pop
pop
ret
mov
and
shr
mov
sub
cmps
je
mov
mov
and
or
jmp
or
add
out
cmc
sbb
pop
sbb
pop
ret
jge
mov
mov
fild
(bad)
cmp
jne
dec
je
cmp
jne
dec
je
and
das
fsubp
(bad)
cmp
jne
dec
pop
push
push
xor
(bad)
jmp
(bad)
cmp
aaa
add
push
add
jne
test
jne
xor
jmp
push
add
(bad)
jne
or
mov
mov
xor
lahf
out
(bad)
or
xor
je
mov
add
rep
dec
jne
rol
dec
rol
or
adc
(bad)
hlt
fnstcw
mov
or
mov
ja
(bad)
cld
fldcw
fistp
fldcw
push
mov
aas
xchg
sub
dec
and
add
mov
add
pop
add
mov
ret
mov
sbb
test
je
pop
dec
test
cli
fnstsw
ror
retf
loope
scas
ins
cld
pop
sub
ja
adc
aam
add
dec
minps
clc
add
dec
add
xor
cmp
je
xchg
(bad)
add
ror
sar
and
int3
push
mov
lea
jecxz
cwde
cmp
cmp
les
dec
fmul
pop
int3
jg
scas
sbb
rcr
lea
fwait
dec
mov
mov
cmp
test
clc
adc
clc
push
mov
mov
jne
pusha
lahf
jle
sub
int
aam
sahf
ror
sbb
mov
jge
sbb
mov
inc
dec
enter
aam
mov
gs
mov
(bad)
push
(bad)
aas
mov
mov
mov
int3
and
pop
(bad)
les
cmp
dec
movs
clc
jg
adc
push
sbb
ret
adc
cs
or
adc
xor
popa
rol
fadd
in
mov
test
mov
push
mov
push
xor
out
rol
fst
sub
mov
test
xor
jle
sbb
ror
adc
sar
(bad)
push
pusha
cmps
test
fwait
mov
test
in
les
dec
cmp
sar
and
cmp
adc
lock
cmp
adc
pop
or
add
mov
iret
pop
push
cmps
and
xor
mov
adc
cs
cmp
cld
retf
or
adc
push
inc
cmp
je
xchg
and
pop
xchg
inc
mov
fisttp
mov
mov
xlat
xor
and
push
ret
xor
aam
mov
jge
rcr
cmps
add
adc
add
dec
mov
cs
inc
inc
aaa
xchg
sbb
mov
shl
int3
mov
mov
movs
mov
push
or
mov
inc
retf
enter
inc
inc
enter
ret
std
mov
call
mov
pop
daa
mov
les
in
sbb
mov
call
cmc
cld
(bad)
jmp
lock
push
sbb
dec
cwde
cmp
cwde
data16
or
je
rcr
loopne
inc
mov
ins
push
test
adc
xor
pop
daa
pop
or
add
or
jbe
popa
out
mov
ss
and
mov
mov
inc
out
dec
movs
dec
mov
xor
cmp
pop
fs
cmp
dec
mov
sub
push
push
lock
pop
mov
adc
cmps
or
and
add
dec
sti
mov
rcr
xor
mov
idiv
fs
xor
jne
cs
loopne
scas
nop
cmp
shr
cmps
mov
leave
jb
dec
add
add
leave
inc
mov
xor
adc
adc
fldpi
jne
fcomp
sti
dec
test
je
push
adc
jne
xchg
sbb
shr
dec
iret
js
call
mov
cmp
inc
or
and
sbb
das
xor
inc
sbb
ss
jnp
mov
je
sbb
js
push
xor
and
in
xchg
xor
addr16
test
jbe
stos
loopne
jle
add
mov
xchg
sbb
fdiv
xchg
in
imul
cmp
ret
jne
clc
dec
jne
mov
(bad)
and
mov
out
cwde
jle
popf
add
cmps
push
xor
dec
dec
or
test
fdivr
int
push
mov
ret
jo
loope
xchg
dec
int3
push
push
mov
cld
mov
jmp
shl
scas
adc
add
fmul
cmp
add
mov
xor
scas
push
fld
test
mov
(bad)
aam
fadd
xchg
add
and
mov
clc
sub
add
or
enter
xchg
mov
push
adc
push
mov
dec
jns
les
xchg
bound
pop
pop
inc
aam
inc
xor
mov
mov
sbb
and
retf
xchg
xor
and
je
xor
jb
pushf
add
xor
xor
push
add
jmp
push
adc
pop
and
mov
std
push
lds
adc
xor
les
pop
and
add
ins
and
punpcklwd
shl
call
jp
mov
jne
rcl
mov
xor
popa
ror
push
mov
sbb
mov
popa
mov
add
mov
fstp
fld
fsub
les
mov
fld
push
push
mov
shl
sti
imul
add
sub
in
cmp
and
jne
dec
fdivr
mov
out
dec
imul
loop
pop
xor
test
xor
pop
and
dec
and
add
inc
fmul
adc
inc
xchg
adc
sub
adc
cmp
in
sub
push
sub
jg
pop
sub
adc
mov
mov
or
adc
adc
inc
mov
mov
pop
or
inc
nop
mov
or
dec
clc
das
dec
mov
mov
or
sub
add
adc
or
lahf
and
xor
jmp
sbb
test
jb
pop
or
jge
dec
adc
cmp
(bad)
inc
hlt
fstp
fld
fild
fstp
fadd
fstp
fnsave
cmp
aam
push
mov
hlt
pop
jo
or
jae
add
movs
lock
(bad)
call
lock
cmp
xor
jmp
adc
ror
sub
mov
inc
lock
fld
stos
loopne
gs
pop
fcomp
or
aam
xchg
adc
and
jne
pusha
aad
adc
pop
fcom
and
pop
push
int
sbb
and
dec
aas
dec
cmp
mov
jge
fst
or
push
xchg
sbb
fdiv
in
fld
aaa
fdiv
cld
fsub
(bad)
fld
rol
adc
mov
add
fmul
adc
mov
xchg
hlt
mov
sub
pinsrw
test
adc
or
mov
ja
inc
pop
pop
repz
add
pop
movs
jno
ret
and
lock
inc
or
jne
dec
fst
jmp
pusha
dec
popf
add
dec
gs
push
pushf
shl
pop
popa
pushf
mov
push
push
pushf
sbb
mov
pop
sbb
pop
repnz
mov
mov
inc
call
mov
jo
das
or
inc
add
push
sbb
loopne
ss
mov
scas
pop
leave
neg
fwait
add
cmp
pusha
mov
rol
stc
dec
adc
in
push
stc
jge
popa
pop
push
cmps
pop
mov
add
sbb
mov
push
js
push
push
push
mov
mov
jle
in
lock
loopne
jg
fs
fsub
pusha
mov
sbb
push
mov
cmp
mov
hlt
loope
scas
shl
jge
xor
adc
cmp
xchg
fadd
(bad)
fist
inc
call
sbb
pusha
test
mov
dec
jne
mov
or
jbe
mov
ror
push
std
inc
mov
inc
loopne
bound
mov
xchg
pop
xchg
inc
test
out
adc
scas
push
inc
mov
inc
hlt
test
lds
lock
pop
cs
pop
and
adc
inc
push
jae
es
rcr
push
xchg
xor
and
sub
retf
pop
and
loope
clc
into
and
mov
mov
xchg
jbe
pop
jbe
cmc
test
sub
mov
xchg
ss
inc
aam
xor
mov
pusha
jnp
sar
inc
sub
inc
int3
cwde
into
mov
enter
sbb
sub
xchg
jge
dec
pcmpgtb
arpl
mov
mov
mov
js
fadd
pop
sbb
and
adc
cmp
or
mov
inc
sub
(bad)
xor
dec
mov
sbb
mov
pusha
es
push
call
add
push
or
out
pushf
add
mov
sub
call
(bad)
sahf
(bad)
add
jle
fld
mov
ret
test
int3
mov
test
or
add
or
les
jno
push
sar
jbe
xchg
xor
or
or
pop
cld
jecxz
rol
and
xchg
adc
jge
out
ret
ror
adc
xchg
add
inc
or
sub
mov
push
in
leave
push
add
adc
fdiv
mov
mov
fadd
loop
push
or
xchg
add
mov
inc
into
push
hlt
cmp
pop
push
add
(bad)
mov
push
cwde
fisub
lock
cmp
fadd
lea
sub
cmp
out
xchg
cmp
xor
push
pop
push
fistp
dec
je
inc
add
inc
push
push
jl
mov
inc
hlt
(bad)
call
dec
mov
mov
push
add
add
add
mov
inc
and
inc
cmc
(bad)
cmp
je
mov
rep
mov
xor
cwde
inc
jb
add
fild
sbb
in
push
pusha
lock
push
pop
mov
stc
cmp
pusha
cwde
dec
push
outs
rcr
arpl
xchg
add
xchg
jb
test
mov
or
or
push
in
dec
xchg
fs
push
sub
and
jae
enter
imul
lock
cmp
loopne
xor
dec
ds
ror
add
mul
fld
in
fwait
cmps
adc
mov
xlat
mov
fxch
and
test
js
push
xchg
pusha
dec
popa
mov
adc
sub
outs
lds
add
jp
add
and
push
xor
aad
sub
repnz
and
test
dec
loope
pop
pusha
or
(bad)
out
push
fild
fstp
fld
out
mov
pusha
retf
sbb
xor
jmp
sub
icebp
mov
test
and
or
bound
pop
fnstcw
and
lea
or
and
inc
mov
test
nop
push
and
and
push
stos
jp
pop
call
jb
icebp
rol
or
sub
mov
out
sbb
xor
or
cmp
adc
push
nop
bound
cwde
rol
pop
mov
loope
mov
push
push
inc
inc
inc
pop
add
dec
push
add
sub
adc
sbb
cmp
cwde
mov
push
mov
add
cwde
gs
lahf
pop
inc
in
jge
inc
push
xor
in
lahf
xor
in
xor
mov
mov
jge
popa
xor
xor
leave
and
popa
stos
xor
call
adc
cmp
fcomi
add
aad
inc
mov
addr16
lahf
lock
inc
add
push
shl
add
in
sub
sub
aas
mov
fild
fcomp
gs
pop
and
lods
add
push
push
icebp
mov
push
push
les
pop
scas
inc
jne
iret
mov
add
sbb
mov
xor
pop
or
pusha
cdq
mov
cmp
and
clc
jmp
test
mov
popf
int3
in
fdiv
(bad)
adc
and
pop
cmps
xor
in
add
inc
paddsb
push
outs
jp
xor
mov
fstp
push
inc
or
and
jge
jg
hlt
adc
jne
jmp
sbb
outs
ins
mov
pushf
jmp
push
fadd
mov
gs
arpl
mov
pop
adc
or
xchg
sub
(bad)
mov
xchg
push
movs
loopne
cld
mov
aas
xchg
xor
jne
nop
cmp
xchg
pop
lock
sub
sub
xor
dec
and
xor
mov
jmp
fwait
adc
and
push
or
or
ds
cld
jmp
add
inc
cmps
push
mov
jle
mov
mov
and
add
(bad)
pusha
js
add
iret
inc
(bad)
fld
inc
bound
sbb
ins
pop
loopne
mov
add
mov
xchg
xor
xor
or
jmp
adc
imul
imul
jmp
cmp
dec
add
add
add
push
sbb
shr
add
pop
push
sbb
sub
test
pop
mov
enter
sbb
sbb
shl
or
das
clc
cmp
sub
cmp
adc
ja
pop
sub
inc
in
(bad)
lds
sbb
pop
add
cmps
or
sub
(bad)
mov
(bad)
and
bound
pop
xchg
nop
inc
cmp
adc
jnp
fld
js
sbb
lods
and
mov
or
xor
xor
icebp
js
adc
pop
mov
and
loope
icebp
or
sub
mov
push
call
and
add
fidiv
fild
dec
div
call
cmp
cmp
push
sbb
adc
pusha
cmovl
adc
xor
mov
ret
ret
mov
cld
fninit
push
push
icebp
pop
inc
add
les
dec
jge
std
std
sti
jmp
sub
xor
ret
jmp
jmp
sbb
adc
add
xor
lock
outs
mov
add
mov
cmp
add
add
add
cmp
ja
test
pop
inc
aas
hlt
push
add
mov
mov
(bad)
ja
(bad)
cmp
repnz
xor
ror
mov
lahf
xchg
out
dec
or
cld
mov
ret
xor
cmp
add
aaa
je
cmp
je
cmp
adc
cmp
or
in
add
mov
xor
cmp
out
mov
add
cld
nop
sti
pop
inc
add
add
adc
pop
nop
add
jg
je
in
pushf
pushf
sbb
es
(bad)
ret
test
and
loope
in
jae
(bad)
mov
push
or
clc
add
mov
push
lea
mov
(bad)
(bad)
inc
add
sub
je
dec
je
dec
jne
xor
jmp
or
jmp
and
dec
jne
xor
pop
pop
mov
ret
cmp
xchg
or
or
push
and
push
push
push
push
cmc
lahf
loope
std
dec
lods
add
ret
and
push
outs
cmp
cmp
ror
inc
pop
mov
mov
fnsave
pop
inc
add
add
mov
mov
inc
cld
call
call
icebp
mov
fs
test
je
push
call
mov
mov
pop
ret
imul
sub
add
std
mov
fs
xor
or
sar
or
aas
cwde
sti
out
xor
add
push
mov
push
mov
mov
cmp
jle
mov
push
ja
adc
pop
mov
pop
ret
nop
xor
push
test
test
jg
or
pop
inc
mov
push
mov
inc
jne
ja
pop
cmp
inc
icebp
sub
add
push
call
inc
or
mov
int3
rol
daa
clc
mov
popa
or
xor
xor
mov
movs
inc
or
push
sbb
(bad)
jmp
dec
js
cmp
jge
test
jle
lea
cmp
jle
sub
mov
add
xchg
test
pop
(bad)
mov
inc
(bad)
aas
fcomp
scas
lea
push
mov
mov
mov
push
cmp
dec
and
nop
or
sub
(bad)
fucomp
adc
push
push
push
mov
push
mov
ror
inc
idiv
out
and
call
mov
mov
mov
(bad)
(bad)
(bad)
push
neg
sbb
and
jmp
mov
xor
dec
cmp
setl
dec
and
mov
mov
out
(bad)
(bad)
out
push
xor
xlat
jne
cmp
jle
cmp
jl
mov
jmp
sub
add
inc
out
clc
aas
sti
jmp
cmp
jg
or
lock
mov
movs
sub
stc
ja
fwait
(bad)
jl
inc
push
scas
js
stc
cmp
clc
test
jle
pop
add
mov
add
cmp
jl
cmp
jne
je
push
push
push
call
xlat
pop
hlt
test
cmp
adc
xor
(bad)
fiadd
push
jmp
mov
ss
jbe
dec
cmps
jne
and
xchg
test
dec
or
je
inc
dec
inc
dec
cmp
mov
jbe
cs
aas
and
or
cmp
and
xchg
push
ror
jg
push
inc
mov
push
fdivr
aaa
cld
pop
push
push
mov
mov
std
mov
lea
mov
push
(bad)
cld
inc
xor
inc
and
div
adc
add
retf
sub
sti
or
mov
(bad)
add
das
push
or
push
das
adc
or
mov
test
je
ja
cmp
jb
cmp
ja
sub
mov
jmp
test
je
mov
test
push
idiv
out
je
inc
pop
inc
test
jne
jmp
inc
push
sbb
repz
je
cmp
dec
pop
shr
fnstsw
and
dec
jnp
adc
outs
mov
ret
add
add
rcl
je
push
arpl
scas
push
shr
(bad)
xor
add
mov
dec
(bad)
mov
cld
scas
sbb
mov
and
mov
les
pusha
xor
add
adc
js
xchg
jo
xchg
lahf
jg
jl
rol
sbb
and
inc
cmp
aas
in
sbb
test
add
movs
imul
fdivp
or
xor
or
(bad)
adc
fwait
push
lea
push
push
mov
xchg
xchg
dec
jb
jp
retf
add
fldpi
sbb
retf
mov
loopne
(bad)
pop
add
jge
mov
pop
mov
or
sti
ja
and
xor
mov
pop
mov
adc
pcmpeqd
ja
shl
retf
jne
jp
fdiv
jle
mov
pop
mov
xor
fld
mov
test
or
(bad)
dec
fst
lods
push
frstor
and
add
jb
ja
jns
push
push
push
mov
push
jecxz
or
jb
or
sbb
or
lock
add
jecxz
aaa
mov
and
(bad)
adc
cmp
outs
cli
outs
mov
(bad)
in
inc
add
and
jecxz
or
jne
cmp
jne
test
inc
add
or
cmp
fstp
jle
push
xor
(bad)
(bad)
inc
iret
or
test
je
cmp
jne
fistp
add
jne
mov
mov
and
je
cmp
xor
adc
cli
and
push
jmp
imul
(bad)
(bad)
jg
shl
cmp
jne
mov
mov
mov
mov
jmp
mov
(bad)
pop
fwait
in
arpl
pusha
stos
inc
test
mov
je
mov
imul
sahf
xor
or
stc
lock
std
add
inc
jmp
ror
js
sbb
mov
or
mov
shl
push
neg
sbb
and
push
dec
mov
fwait
out
fs
and
add
pop
mov
inc
xor
add
push
push
fs
push
or
sub
pop
and
jmp
sbb
lock
add
sar
jmp
fdiv
add
lock
inc
pop
add
sub
sub
and
dec
and
ja
lock
leave
pusha
sbb
(bad)
adc
or
pop
mov
adc
lock
pop
adc
dec
sub
pop
pop
fcomip
fist
add
adc
dec
rcr
int
push
jnp
mov
and
xor
fdivr
mov
xor
test
sete
jmp
jo
dec
sti
push
dec
pmaxsw
jge
mov
or
pop
sbb
or
and
test
daa
test
std
push
imul
je
cmp
jge
inc
add
or
test
pop
jg
mov
add
sub
cmp
sbb
rcl
mov
jne
sbb
sbb
push
push
mov
lock
ror
mov
mov
xor
repz
retf
adc
or
shl
and
adc
not
mov
(bad)
cmc
cmp
push
je
dec
sbb
mov
mov
jmp
mov
sub
adc
pop
imul
push
sub
jo
cld
mul
inc
dec
cmp
cmc
jge
inc
xchg
and
add
jmp
push
(bad)
stos
jmp
xor
xchg
xor
sub
push
(bad)
pop
and
inc
arpl
dec
pop
and
fs
(bad)
pusha
je
stc
jmp
hlt
mov
sub
mov
push
mov
lock
shl
pop
adc
loope
call
mov
adc
sbb
ret
setl
sar
xchg
pop
ja
mov
out
sbb
sbb
and
fadd
mov
loope
cmp
test
jne
push
or
cmp
mov
jl
dec
xor
cli
pcmpeqw
mov
sub
push
xor
jmp
cmp
or
gs
cmp
adc
lea
mov
je
dec
mov
sar
sub
and
add
rcr
daa
cmp
out
(bad)
pop
in
xor
cmp
jge
cmp
je
push
adc
xor
gs
push
sar
sub
out
add
out
lea
add
sub
lock
cmp
mov
mov
mov
aaa
neg
mov
lea
sbb
mov
and
sbb
call
loope
rep
popa
xor
call
sbb
mov
adc
mov
sbb
and
push
sbb
and
std
pushf
pop
sbb
(bad)
sti
add
mov
push
add
push
dec
pop
push
imul
in
fstp
jge
jmp
sbb
push
push
jno
int3
pop
ss
xor
inc
cmp
ss
mov
sbb
mov
xor
sbb
cmp
push
addr16
jl
lock
pusha
mov
add
xchg
or
test
push
or
enter
fsubr
and
jecxz
rcr
add
xchg
jg
into
mov
mov
mov
add
cmps
(bad)
mov
stos
cmp
xor
pop
mov
mov
(bad)
dec
and
xor
add
ror
fsubr
test
jge
push
cmp
or
int3
repz
sbb
mov
out
pushf
sbb
(bad)
jle
lea
sar
mov
push
test
je
mov
push
xor
lea
add
inc
aaa
idiv
mov
rep
mov
mov
or
dec
jbe
push
(bad)
nop
mov
mov
mov
ja
je
int3
mov
repnz
test
jle
mov
xor
mov
add
int
cmp
and
ror
jle
push
adc
or
ror
add
or
push
inc
pop
sbb
shl
ss
test
dec
and
jae
sub
add
scas
cmp
dec
cld
xchg
arpl
add
fs
mov
lds
(bad)
and
mov
mov
inc
out
fdiv
mov
add
shr
jg
or
mov
add
test
mov
pop
mov
sahf
and
add
push
push
ss
sbb
add
in
test
push
xor
and
imul
inc
(bad)
mov
pop
leave
pusha
mov
dec
and
xor
pop
pop
pop
cli
xbegin
(bad)
xchg
add
pop
jmp
cmp
jmp
add
fadd
or
sbb
cwde
add
(bad)
inc
add
xor
inc
add
sub
rcl
or
cmps
cwde
mov
fisttp
fs
pop
xor
jae
add
les
pop
jo
or
jl
push
outs
mov
fwait
retf
mov
xchg
and
add
inc
add
ds
cmp
imul
or
call
fcomp
sbb
dec
add
push
inc
sbb
es
jl
or
push
out
or
or
js
fild
clc
add
sub
inc
sub
add
sbb
push
mov
sbb
jnp
imul
pop
clc
(bad)
(bad)
cmp
and
dec
add
inc
sbb
not
and
fwait
xchg
push
push
call
pop
pop
pop
pop
jne
hlt
add
fs
sbb
rcr
add
push
and
pushf
mov
mov
clc
sbb
adc
daa
pop
ja
push
iret
adc
cmp
daa
push
adc
jae
daa
inc
daa
xor
pusha
(bad)
scas
ret
in
mov
and
mov
aas
pusha
into
ja
faddp
adc
or
add
rol
add
push
push
jae
fisub
(bad)
xor
push
push
push
cld
push
or
aaa
shr
jo
cwde
clc
fwait
cmp
ins
in
add
mov
lea
retf
sub
or
push
push
push
xchg
nop
fdiv
in
add
cs
xchg
aas
in
push
push
mov
je
cli
ret
push
inc
sti
fiadd
call
cli
aaa
lods
hlt
push
dec
add
mov
inc
call
test
je
sbb
arpl
not
mov
sbb
add
mov
push
add
jle
test
inc
mov
and
push
push
lea
(bad)
lods
pop
fld
int
add
mov
sbb
add
sub
les
sbb
add
pop
jae
ins
xor
ret
call
mov
xor
cmp
clc
push
loop
add
loopne
dec
sub
mov
push
add
push
push
mov
dec
icebp
or
xor
mov
fcomp
out
xlat
xchg
adc
mov
loop
mov
inc
fld
xor
push
sub
sbb
mov
punpcklwd
sbb
pushf
cli
dec
retf
add
add
jmp
outs
jbe
adc
jmp
cmp
lds
mov
js
loope
dec
sub
push
mov
fwait
inc
fs
lea
adc
lds
adc
mov
sbb
mov
sbb
mov
bound
mov
pop
and
pop
call
push
jmp
das
iret
jle
out
adc
ror
and
(bad)
in
neg
inc
or
mov
or
xor
fnstsw
leave
mov
push
mov
mov
loope
pop
arpl
pop
icebp
pop
ret
ja
imul
add
cmp
out
ja
movs
adc
rcr
ror
dec
add
cld
das
push
cmp
jne
cmp
idiv
es
cmp
jge
push
add
push
inc
push
fistp
mov
or
fdivr
idiv
mov
shl
mov
mov
fs
mov
pop
pop
jle
cld
int
test
jne
call
lea
cmp
push
push
adc
jbe
pop
mov
dec
mov
lods
ja
imul
test
mov
mov
jl
cld
pop
pop
mov
push
push
(bad)
(bad)
out
aas
movs
add
pop
pop
js
dec
add
push
fs
jb
add
cld
(bad)
(bad)
clc
cmp
jae
mov
test
sbb
sub
ja
and
or
movs
fidivr
sub
lea
cwde
nop
idiv
test
(bad)
fisttp
adc
jmp
or
clc
mov
in
mov
enter
dec
or
(bad)
ja
jo
sbb
adc
pop
jo
inc
or
(bad)
mov
or
sbb
add
adc
mov
sub
popa
adc
pusha
or
xor
or
inc
mov
inc
cmp
sbb
je
mov
lea
cmp
jb
lea
or
jae
mov
pop
sub
sub
cdq
and
cs
loopne
sar
xor
js
dec
or
add
pop
jg
add
jns
add
or
ret
std
cmp
cmp
jb
mov
invd
mov
pop
ds
ret
mov
push
daa
add
mov
and
push
add
aas
popa
fwait
js
add
data16
or
nop
jne
enter
add
jg
mov
cmp
jle
cmp
mov
mov
inc
pop
fbstp
cmp
push
(bad)
out
dec
add
jo
mov
or
or
push
or
jno
mov
mov
mov
mov
adc
dec
cld
push
pop
je
or
mov
mov
not
test
je
mov
sub
std
(bad)
dec
add
enter
into
call
mov
mov
add
ret
push
jecxz
mov
adc
mov
and
out
cs
iret
adc
dec
sub
pop
in
jbe
jbe
sub
mov
add
or
jg
mov
dec
test
mov
jle
push
xor
fild
xchg
addr16
adc
xchg
adc
jge
lock
mov
mov
pusha
sub
retf
lea
mov
mov
lock
ss
lea
mov
out
mov
mov
push
and
mov
adc
pusha
or
or
lock
fwait
scas
jne
cmp
cld
ja
push
pop
inc
sub
mov
test
jle
push
cmc
cwde
(bad)
mov
movs
jns
push
sbb
or
je
jle
mov
dec
sub
add
loope
in
inc
and
cmc
push
bound
pop
ret
dec
les
xor
sar
cvttps2pi
jnp
js
add
pop
in
inc
sbb
jno
or
int3
xor
ins
enter
jns
add
and
popf
loope
xchg
stc
lea
dec
enter
jne
mov
pop
ins
sub
sub
mov
cld
je
cmp
out
lea
daa
popa
xchg
mov
adc
mov
sbb
adc
rol
inc
and
add
or
daa
xlat
rol
sub
movs
push
pop
sbb
jle
inc
(bad)
jmp
mov
push
ret
inc
dec
sub
mov
gs
and
xchg
movs
dec
aam
inc
ret
xor
or
mov
mov
push
sbb
call
fnsave
cli
aaa
lahf
adc
test
jne
pop
pop
outs
pop
ret
sbb
(bad)
adc
adc
push
retf
push
cwde
mov
add
push
push
pop
push
cmp
lea
jge
fdivr
clc
jmp
repz
push
push
push
call
je
sbb
fwait
mov
adc
fist
add
les
adc
add
jo
imul
cmc
jle
mov
lea
jne
retf
xor
cld
out
push
dec
and
add
test
push
je
jnp
mov
xchg
jbe
pop
out
xor
adc
push
ffreep
out
fistp
push
in
push
push
adc
adc
cmp
jecxz
cmp
jge
and
(bad)
out
push
push
inc
add
mov
mov
sub
cmp
jle
sahf
jle
dec
jmp
inc
and
jle
sub
add
shl
dec
jne
test
es
pop
pop
sub
and
sar
push
lea
lea
sub
jmp
mov
and
repnz
jge
adc
adc
push
add
mov
jmp
adc
xor
or
adc
jnp
push
pop
test
sbb
dec
xor
imul
sub
(bad)
sbb
and
sub
js
ret
and
(bad)
mov
cld
cmp
out
add
test
dec
adc
test
je
cmp
push
jge
push
lea
mov
sub
cmp
jge
sub
mov
sub
or
pop
push
test
fldcw
pop
sub
pop
popa
mov
sub
push
adc
in
push
mov
neg
rcl
add
pop
cmp
push
pop
and
scas
and
mov
pop
mov
or
push
cli
scas
inc
xchg
or
add
ret
cmp
jne
sbb
add
(bad)
jne
add
or
add
add
inc
or
rcr
dec
stos
pop
push
sbb
pop
or
cmp
ror
mov
inc
sbb
push
neg
mov
pop
push
add
push
mov
push
test
and
mov
jle
ins
mov
and
enter
sar
(bad)
adc
jge
cld
repnz
pop
jne
inc
sub
push
jle
dec
pop
mov
and
nop
dec
mov
cld
js
push
lahf
push
or
mov
push
inc
adc
inc
xchg
leave
inc
out
(bad)
dec
mov
lahf
inc
cmp
mov
adc
pop
jne
push
sub
jg
fnstenv
sub
mov
or
call
int3
push
dec
add
push
or
mov
mov
add
cmp
std
addr16
jnp
or
add
push
mov
pop
jmp
mov
push
leave
pop
aaa
out
mov
cmp
in
cdq
add
cmp
and
(bad)
add
adc
jg
leave
pop
ins
push
and
push
call
mov
xlat
popf
bound
jle
ror
stos
xchg
jae
jne
cdq
mov
or
jge
pop
xchg
sbb
inc
push
dec
and
push
lods
inc
js
inc
jo
dec
xor
fisub
ja
dec
ds
lock
popa
cmp
or
adc
call
pop
pop
mov
js
arpl
cdq
sbb
js
pop
loop
sbb
add
jne
and
dec
push
call
pop
pop
(bad)
mov
and
mov
mov
push
push
mov
mov
add
div
or
pop
je
cmp
cmp
jb
xchg
mov
arpl
jmp
xchg
or
add
xor
adc
inc
add
add
push
stos
jecxz
mov
xor
push
call
movs
cmp
dec
sbb
rcr
fld
inc
or
int3
mov
cmp
pop
jb
popa
scas
in
pop
ret
jno
jae
mov
aam
mov
jle
inc
jle
and
mov
or
push
pusha
inc
xchg
xor
out
sub
mov
and
cmp
leave
adc
popa
xor
mov
push
(bad)
fnstsw
clc
or
sub
dec
mov
sub
ja
sub
jnp
test
je
cmp
rol
rcl
call
mov
lea
call
cmp
je
inc
jmp
lea
mov
push
(bad)
shr
push
je
mov
push
push
loopne
sbb
stos
je
gs
mov
jnp
mov
outs
popa
sbb
add
mov
call
inc
adc
jae
rcl
inc
push
cdq
xor
test
mov
pop
mov
mov
mov
rcr
sar
or
or
aam
add
out
sub
xchg
out
and
jno
mov
inc
dec
aaa
pop
iret
adc
mov
add
or
or
lock
mov
rcl
and
stos
pop
mov
jge
cmp
pop
xchg
push
and
mov
sbb
cmp
mov
mov
mov
aaa
ins
pop
enter
nop
(bad)
push
bound
test
je
and
mov
cmp
mov
mov
mov
nop
cld
out
enter
jle
mov
jne
aaa
outs
mov
cmp
cmp
inc
and
sbb
or
inc
sbb
inc
(bad)
dec
or
add
dec
sbb
stos
mov
clc
cmp
mov
jge
jl
dec
cmp
push
cmc
ja
or
adc
cld
dec
and
inc
cmp
jl
cmp
fistp
push
push
push
fs
push
sub
test
ins
push
popf
mov
sbb
add
out
sbb
mov
push
call
mov
xor
data16
rol
nop
push
and
pop
pop
push
or
jbe
scas
rcr
pop
xchg
add
call
mov
mov
sbb
div
cmp
adc
cmp
add
dec
mov
adc
(bad)
push
inc
push
inc
sbb
push
fadd
std
sub
push
add
jns
ja
dec
das
into
pop
pop
mov
dec
and
push
rol
xchg
push
scas
jo
or
nop
nop
mov
je
xchg
xchg
push
xchg
add
fsub
fsubr
cmp
rol
pop
or
nop
jo
and
or
je
jmp
inc
dec
fdivr
(bad)
out
jg
push
mov
mov
mov
cmp
jne
test
je
mov
mov
ud0
add
cmp
jmp
sbb
sbb
mov
daa
clc
test
pop
jne
sbb
pop
xor
pop
jnp
mov
(bad)
mov
in
adc
cmp
or
call
lea
mov
inc
add
or
push
inc
mov
jnp
lahf
rol
cmp
pop
or
xchg
xor
sbb
dec
psubsb
push
jbe
je
test
push
ret
jne
sub
cdq
or
jle
mov
dec
mov
adc
sbb
sbb
aam
dec
or
test
fst
mov
mov
mov
neg
pushf
call
dec
sub
mov
or
sub
pop
adc
or
pop
jecxz
and
push
in
add
xchg
xor
and
inc
sbb
sbb
mov
sub
xor
cwde
jmp
cmp
sbb
xor
in
inc
jmp
push
jno
ja
dec
pop
ja
mov
and
mov
stos
sbb
sbb
cmps
push
or
mov
pushf
dec
inc
data16
jmp
or
cmp
jae
dec
sbb
icebp
push
push
test
fiadd
push
shl
aas
pushf
enter
mov
test
je
nop
or
inc
aaa
cmp
mov
adc
sbb
jle
inc
ins
test
sbb
or
mov
push
push
mov
call
inc
loopne
and
xor
jno
(bad)
(bad)
jmp
sub
cdq
sub
mov
sar
add
mov
mov
add
mov
mov
add
icebp
and
ins
xchg
ret
xor
inc
add
aaa
sub
push
lea
add
std
add
push
mov
outs
clc
add
xor
test
ret
sti
jnp
dec
popa
xor
xchg
add
cs
aas
rol
jns
push
mov
push
push
js
leave
cmp
sete
test
mov
je
ds
jle
add
mov
xchg
push
sbb
jne
jmp
cmp
sbb
cwde
jne
push
cld
ret
outs
test
jb
pop
mov
mov
mov
js
mov
add
je
ret
adc
ins
fcom
add
or
xchg
xchg
add
jnp
sbb
cmp
jmp
mov
pop
or
pop
daa
ss
or
xchg
retf
dec
push
push
add
and
mov
pop
jbe
jmp
sub
cmp
jne
mov
shl
jo
add
mov
(bad)
adc
adc
sbb
or
push
xor
and
scas
cmp
lea
ja
sub
adc
retf
(bad)
call
push
mov
pop
push
test
std
sar
cmc
xor
or
adc
xchg
outs
mov
sub
and
mov
add
pushf
add
cmp
jb
mov
cmp
je
ja
(bad)
inc
cmp
jl
cmp
jle
cmp
je
cmp
je
or
mov
cli
sub
cs
cmp
jb
cmp
ret
push
or
jbe
adc
ja
loopne
lahf
sub
adc
push
mov
lahf
jmp
mov
add
pusha
ja
jmp
mov
hlt
ins
ret
into
test
scas
cmp
adc
mov
pop
test
jge
xor
jmp
adc
cmp
sbb
fistp
(bad)
cmp
jg
cmp
jge
mov
aaa
mov
sbb
jle
mov
add
adc
out
or
into
sbb
jg
jl
cmp
push
jg
sub
cmp
jg
sbb
inc
ja
xor
cmp
sahf
std
sbb
(bad)
jmp
test
jl
jg
jbe
pop
fucomp
mov
add
bound
fiadd
data16
ror
int3
mov
jge
push
pop
adc
test
sbb
and
pop
and
mov
cmp
or
pop
mov
cmp
fstp
mov
xor
sbb
ins
sar
fild
fld
fcomp
fnstsw
xchg
lock
jne
push
inc
push
(bad)
dec
jo
cs
mov
cmp
je
sbb
push
std
sbb
lea
cwde
jae
mov
and
shl
je
not
push
and
daa
cmp
add
sti
add
lea
test
inc
add
add
sub
arpl
jp
push
push
adc
sub
xchg
cmp
or
push
xchg
or
(bad)
and
jnp
fwait
cmc
mov
mov
push
movs
pop
scas
push
cmp
dec
in
pop
push
push
or
jmp
popa
sbb
push
push
jae
mov
mov
mov
shr
and
mov
sub
cmove
jne
sub
inc
dec
inc
push
leave
jb
pop
inc
or
sbb
inc
pop
pop
mov
fmul
(bad)
or
xchg
inc
and
xor
gs
aaa
mov
inc
adc
inc
jmp
iret
jp
dec
push
sahf
mov
leave
je
mov
hlt
dec
mov
add
push
and
add
or
(bad)
cmp
mov
cmps
fiadd
cdq
or
jmp
sub
add
mov
dec
iret
aas
lea
dec
pushf
dec
adc
add
cs
icebp
data16
pop
dec
add
xor
lea
adc
mov
test
push
mov
lock
call
mov
int3
ins
cdq
xor
(bad)
lock
jne
cwde
adc
and
or
xchg
sti
enter
xchg
sbb
add
jb
js
xchg
int3
push
jmp
adc
push
and
mov
data16
aas
cld
cmp
mov
adc
rcl
repnz
push
sub
push
push
push
sbb
push
xchg
or
bound
adc
sbb
mov
cmp
in
dec
adc
mov
aas
sub
(bad)
mov
test
fld
or
out
or
and
and
mov
dec
xchg
jg
mov
shl
outs
push
daa
sbb
aam
shl
xor
inc
imul
fisttp
add
mov
fidivr
(bad)
outs
or
call
mov
arpl
ret
mov
xchg
shl
sbb
mov
aas
jne
cmp
jne
mov
ret
lock
mov
das
loopne
or
mov
sub
nop
nop
out
sub
mov
xor
in
add
push
shl
mov
sbb
cmp
aas
cmp
sbb
dec
sbb
push
dec
cmp
xchg
adc
in
inc
das
sbb
ss
jb
push
add
pop
cmp
jne
sub
pop
xchg
push
xor
add
dec
add
push
xor
add
push
movq
retf
mov
shl
cld
call
pop
pop
repnz
mov
or
dec
ds
xchg
mov
add
fsubr
or
mov
xor
push
push
lods
loop
cmp
dec
jne
push
mov
mov
or
stos
jb
mov
push
cld
pop
dec
jg
and
bound
adc
push
jg
idiv
or
pop
mov
sbb
adc
sbb
sbb
mov
adc
and
ficom
cmp
mov
call
add
xor
xlat
daa
aaa
adc
fld
add
cmp
sar
lods
pusha
pop
data16
add
out
movs
pop
or
add
inc
push
scas
aas
fld
enter
mov
dec
pop
dec
push
scas
cmps
add
add
inc
xor
enter
add
clc
icebp
cmp
pop
aas
nop/reserved
xor
in
fistp
mov
dec
je
test
sub
pop
dec
sbb
das
mov
retf
cmps
das
mov
nop
xchg
rcl
inc
das
jae
push
das
xor
das
(bad)
lods
fmul
das
stos
movs
pop
aas
test
xchg
and
inc
dec
popf
dec
sub
xchg
jmp
inc
inc
mov
cdq
jo
adc
(bad)
cmps
cmp
pop
jo
call
daa
or
adc
mov
int3
shl
pop
sub
adc
xor
xor
add
sti
push
fisub
lods
and
and
xor
loop
imul
add
add
mov
sub
mov
inc
cmps
loopne
dec
mov
and
cmp
jle
push
xor
aas
je
lahf
sbb
inc
inc
push
adc
cmp
inc
pop
push
cmp
jl
mov
mov
cli
sbb
inc
dec
push
and
int3
add
and
dec
add
mov
push
sti
pop
push
mov
push
xchg
js
mov
cmp
mov
push
movs
add
fdivr
sub
enter
cmp
fincstp
fcom
fnstsw
test
out
and
and
xor
pop
push
add
mov
fmul
cld
push
cmp
sbb
push
sti
or
sbb
fs
dec
add
movs
dec
not
push
cs
add
adc
int
fsub
ss
inc
and
icebp
and
fcmovnbe
cdq
popa
xor
outs
(bad)
pop
or
test
mov
mov
ins
jmp
jne
mov
cmp
std
pop
std
and
add
xor
cmp
mov
and
cmp
cmp
faddp
sbb
xlat
aaa
cmp
add
xchg
shl
dec
jge
mov
mov
arpl
scas
aam
pushf
js
je
lds
adc
je
and
push
mov
shl
cmp
inc
test
sub
ror
lds
mov
jnp
shl
je
add
lods
mov
jbe
ror
cmp
xchg
ror
add
mov
adc
retf
pop
cwde
(bad)
inc
ins
and
je
mov
sti
or
or
sub
jmp
ret
inc
fisttp
mov
add
cmp
jl
fs
sbb
mov
lock
xchg
pushf
inc
mov
push
leave
outs
mov
cmc
aad
adc
mul
sbb
xchg
inc
adc
imul
xlat
aaa
adc
aaa
add
and
adc
outs
cmp
or
lea
or
jno
add
pusha
cld
jg
ficomp
or
adc
pop
mov
mov
cmp
jne
sbb
sub
fs
adc
mov
xchg
mov
stc
pusha
test
jmp
or
mov
pop
outs
pop
mov
cmp
jne
mov
jo
mov
cmp
jmp
mov
mov
or
pop
or
jmp
or
test
ror
cmp
and
adc
fdivr
dec
clc
push
aas
ins
mov
push
cmc
xor
jne
add
sti
gs
inc
xor
dec
fadd
scas
xor
and
cmp
scas
or
scas
pop
mov
pop
dec
out
xor
adc
and
dec
adc
sti
clc
add
push
push
and
dec
outs
or
jne
xor
and
mov
paddusb
sub
push
push
popa
(bad)
test
pop
aaa
nop
sbb
pop
popa
add
imul
or
test
and
add
push
adc
frstor
or
gs
fs
ss
mov
mov
sti
add
sub
adc
mov
jbe
ret
clc
add
mov
mov
pusha
outs
sub
pop
push
fs
add
imul
out
add
inc
or
adc
push
inc
and
xchg
or
aad
loop
pushf
cli
jne
cmps
jle
dec
scas
je
inc
add
pavgb
fsubr
into
sub
dec
jl
mov
fidivr
test
dec
je
test
fild
js
push
cmp
push
jo
js
je
idiv
jg
mov
mov
sub
inc
cdq
sub
sar
add
push
cmp
jg
mov
js
ret
lock
jle
idiv
jg
cmp
jle
fild
add
add
sbb
sar
add
fdiv
fstp
fstp
fcom
out
(bad)
push
add
fstp
fld
fxch
fmul
call
or
fmul
mov
jle
xchg
call
or
fstp
add
mov
dec
sub
je
je
call
push
push
xchg
cmc
add
fmul
mov
daa
ret
sub
xchg
adc
jge
add
add
andnps
push
push
push
(bad)
xor
jae
inc
pop
mov
sbb
and
pop
popf
push
frstor
lds
je
cmps
push
jl
pop
aaa
adc
test
ret
jb
nop
(bad)
jg
mov
push
cmp
jge
push
mov
lea
cmp
psllw
sbb
add
add
push
push
mov
call
dec
clc
rcl
mov
xchg
sub
mov
in
call
sub
and
sub
push
adc
call
sbb
(bad)
imul
push
pop
pop
dec
push
addr16
jae
xchg
stc
mov
inc
outs
test
push
add
xlat
mov
push
sbb
mov
into
adc
pop
int3
and
push
inc
and
cwde
enter
fdiv
dec
jg
mov
push
(bad)
adc
add
lea
xor
loope
inc
lock
(bad)
xor
pop
pop
adc
enter
hlt
add
pop
test
push
push
ror
pusha
popf
dec
add
add
je
mov
mov
cmp
mov
mov
jle
mov
je
js
xchg
mov
mov
add
inc
adc
(bad)
je
add
(bad)
pop
icebp
mov
stos
or
add
test
inc
inc
and
call
mov
jbe
push
push
gs
adc
pushf
test
sbb
rcl
add
and
mov
jb
hlt
lods
outs
sub
xchg
jecxz
push
xor
xchg
ret
aas
xor
das
xor
stos
lods
fmul
aas
or
int3
cwde
scas
inc
xlat
aad
dec
jl
mov
xor
dec
sbb
sti
push
std
add
push
pop
stos
dec
mov
sbb
(bad)
cmp
je
mov
push
jo
push
sbb
je
add
xchg
call
sbb
popa
adc
jnp
cwde
or
inc
push
push
mov
mov
mov
mov
arpl
sbb
pop
and
inc
outs
add
outs
or
mov
lds
jbe
jnp
scas
inc
mov
mov
xchg
bound
mov
or
enter
inc
adc
add
rcl
les
inc
push
sbb
sbb
pop
cmp
sub
and
xor
mov
cmp
jne
or
hlt
cdq
stos
shl
jne
and
pop
push
add
pop
lds
xor
xchg
and
call
retf
dec
or
pop
xor
jo
cmp
inc
dec
sbb
mov
imul
push
or
rcl
(bad)
(bad)
cmp
jmp
xor
cmp
setne
add
mov
cmp
jne
push
outs
enter
jnp
jmp
mov
pop
ret
dec
add
sub
pop
inc
loop
push
loopne
mov
adc
ja
add
dec
jle
mov
add
call
dec
push
neg
sbb
and
push
push
call
outs
push
pop
jmp
cwde
sbb
cmp
adc
pop
push
jmp
sbb
es
popa
pop
sub
dec
mov
sar
push
je
cmp
jne
jmp
jmp
add
add
push
inc
add
call
aam
inc
jge
or
into
fadd
jmp
sbb
andps
ret
push
push
jo
loope
push
ins
push
push
mov
(bad)
loopne
movups
inc
inc
sub
sub
into
clc
mov
add
jge
mov
sub
out
loopne
xchg
and
cmps
lea
cs
sbb
dec
mov
scas
iret
call
mov
pop
sbb
in
mov
addr16
mov
mov
and
cmp
mov
pusha
mov
aad
sar
sbb
and
add
inc
clc
pop
add
daa
push
sub
xor
mov
jmp
inc
sbb
aas
and
mov
das
push
pop
movups
pop
jmp
mov
iret
dec
call
sub
push
push
(bad)
mov
pop
push
cmp
push
push
call
jmp
cmp
dec
fsubr
push
sti
fdivr
jg
addr16
sar
mov
shr
add
jnp
jnp
xor
ja
xchg
and
addr16
jo
(bad)
fs
inc
mov
adc
xor
fsubr
or
mov
mov
call
adc
jmp
popa
push
xor
ja
adc
xchg
and
and
jbe
cmp
popa
sbb
dec
mov
and
mov
icebp
xchg
loope
(bad)
call
aaa
pop
jp
pop
aas
xor
pop
mov
imul
mov
adc
enter
loope
xchg
(bad)
outs
adc
inc
adc
or
adc
sub
jmp
or
mov
adc
ret
mov
xchg
cmc
dec
jno
dec
jno
adc
push
add
idiv
add
pop
add
add
pop
out
nop
add
rol
cs
and
or
adc
dec
call
sub
jmp
or
push
mov
push
mov
call
and
cmp
pop
call
lea
scas
sti
out
push
or
loop
inc
adc
inc
cld
cli
add
inc
cld
and
mov
jne
push
sbb
sar
jmp
or
and
add
cmp
mov
ja
inc
mov
or
or
popa
add
ins
ret
dec
or
push
fmul
std
dec
sub
ret
cs
and
dec
into
and
adc
ret
or
ror
mov
sar
inc
and
(bad)
bound
dec
sub
adc
sbb
mov
aam
enter
enter
and
popf
mov
fcom
loopne
ret
(bad)
(bad)
call
add
push
push
call
add
push
sub
push
sbb
and
push
idiv
pop
mov
mov
mov
ret
das
add
xchg
(bad)
xor
dec
aas
xchg
fdivr
fiadd
sqrtps
jl
push
ret
jne
add
rol
cli
push
cli
add
add
das
adc
lods
repz
add
je
jae
sbb
(bad)
cli
jg
aaa
rol
outs
pushf
dec
sbb
mov
call
xor
lock
cs
ret
rcr
je
dec
inc
and
mov
inc
mov
out
fs
or
out
je
stos
pop
mov
(bad)
pop
mov
dec
pop
mov
outs
add
add
sub
aas
(bad)
jg
mov
dec
inc
push
or
or
push
fdiv
pop
call
pop
sbb
(bad)
inc
sub
jne
aaa
push
lea
lea
popa
jbe
inc
fcom
ret
adc
mov
das
fwait
and
pop
add
lods
cs
ins
or
div
iret
and
cli
add
int3
push
dec
lahf
test
lods
gs
ret
out
and
push
retf
mov
int3
add
pop
fimul
mov
inc
mov
mov
jg
test
jg
aaa
jno
mov
test
mov
inc
jne
push
push
push
sbb
dec
sbb
add
jg
rdpmc
retf
and
sbb
dec
inc
mov
sbb
iret
mov
mov
xor
ret
inc
dec
push
mov
push
push
fistp
push
sbb
xchg
test
ffreep
(bad)
pusha
push
inc
fisttp
push
lea
push
data16
add
pop
sbb
stos
inc
add
push
xor
loopne
dec
add
or
je
add
cmp
ja
jmp
(bad)
xor
and
mov
mov
jmp
sub
adc
jbe
adc
dec
push
mov
and
jo
add
dec
dec
pusha
test
sub
pop
adc
inc
pusha
mov
xor
jmp
mov
nop
test
mov
call
push
xor
fild
pushf
or
pop
sub
mov
inc
and
cmp
sub
sbb
dec
cmps
xor
pusha
call
clc
push
cdq
mov
xchg
jo
jl
sbb
xor
jmp
mov
or
dec
push
push
push
inc
cmc
xor
add
cmp
call
cmp
mov
pop
jne
inc
mov
inc
jo
xor
jns
or
cmp
dec
jne
jecxz
loopne
mov
aaa
xor
fld
gs
outs
pop
jmp
js
sbb
lea
mov
add
lea
loope
push
ret
and
arpl
adc
add
jecxz
or
ret
add
inc
aaa
fsub
push
or
adc
sbb
or
pop
cmp
jl
int3
or
loope
loop
(bad)
xor
rcl
pop
or
jg
ret
jmp
dec
add
inc
cmp
mov
inc
push
cld
hlt
inc
cmp
mov
mov
xlat
mov
mov
cmp
inc
cmp
(bad)
movs
dec
mov
push
aas
lahf
add
ret
mov
fucomp
or
inc
or
push
je
push
fimul
jmp
es
sbb
ins
push
sbb
pop
sub
jle
mov
adc
cmp
and
add
add
xchg
mov
je
adc
or
mov
sub
lahf
js
test
bound
push
or
cs
or
or
lahf
add
and
pop
add
out
popf
or
aaa
pop
out
inc
push
mov
push
sbb
inc
push
shr
and
jg
test
je
std
ins
inc
jl
loope
push
icebp
jmp
inc
je
pop
pop
xrelease
adc
in
push
cli
pop
push
idiv
lea
pop
xor
sub
and
test
dec
mov
fcmovu
or
mov
lock
es
enter
loope
daa
and
add
fidiv
sbb
stos
daa
icebp
(bad)
fcmovbe
and
mov
xchg
fs
pop
mov
retf
aas
fsubr
adc
pusha
add
adc
jmp
pop
lods
pusha
and
inc
stos
int3
or
and
push
and
mov
test
mov
adc
and
mov
and
aas
xchg
data16
sub
in
enter
xor
or
mov
or
push
push
push
push
sbb
push
or
in
cmp
mov
loope
jb
push
stos
sub
cmc
cs
adc
xor
aam
xor
pop
push
pusha
shl
lock
add
test
sbb
add
cmc
mov
test
call
jmp
lds
or
push
add
add
add
iret
add
or
in
loopne
jbe
cmp
je
jle
pop
icebp
mov
dec
loop
inc
push
int
xor
sub
cmc
mov
int
ror
push
or
inc
arpl
jne
mov
cmp
js
je
or
jmp
or
jmp
ret
push
dec
push
mov
cmp
sub
or
adc
and
test
adc
les
add
scas
inc
xor
inc
xchg
push
lds
jp
jne
mov
cs
or
mov
or
push
push
push
sub
lock
xor
(bad)
(bad)
(bad)
dec
ffreep
pop
rcl
add
xor
ret
inc
je
xor
dec
lds
push
push
push
adc
es
mov
pop
pop
gs
cmc
pop
and
sets
mov
popf
push
push
xor
dec
and
xor
mov
or
fstp
repz
pop
out
jmp
ret
je
inc
inc
and
add
ja
mov
outs
clc
aas
inc
sahf
inc
mov
mov
push
push
mov
add
ret
lds
add
mov
pop
push
cs
(bad)
xchg
jl
jg
cmp
add
daa
cmp
lods
push
and
out
(bad)
mov
mov
shr
test
loope
mov
pop
inc
push
lea
pop
or
push
jmp
mov
push
das
jg
sbb
add
stos
jg
ins
pop
pusha
add
add
cmovo
add
(bad)
inc
inc
pop
mov
jmp
sti
and
pusha
pop
dec
and
cli
push
sti
inc
icebp
mov
add
mov
add
inc
shl
fstp
jle
xor
out
fisttp
test
xchg
xor
mov
aaa
rcl
dec
push
mov
leave
sahf
add
or
push
adc
or
vandps
loope
push
pop
aad
ds
push
fsub
dec
je
add
retf
xchg
or
imul
je
sbb
ret
les
aad
test
mov
nop
scas
add
cli
call
pop
add
and
dec
neg
sbb
inc
enter
mov
sub
jle
in
cmp
push
aaa
sti
or
push
or
movs
(bad)
cld
(bad)
test
and
mov
or
nop
lods
pop
and
mov
xor
sub
dec
cdq
movs
mov
and
cmc
sub
inc
jne
add
cmp
cmp
jmp
push
xor
dec
sub
mov
push
push
mov
je
add
out
rcl
and
mov
dec
div
push
rcr
push
adc
mov
and
sbb
adc
push
out
inc
xchg
inc
cmp
fist
inc
retf
int3
test
pop
js
add
pop
shl
out
or
jo
into
rcl
cwde
sbb
ins
jo
or
ja
dec
in
ins
push
adc
ins
pop
pop
lock
cmc
and
dec
inc
jb
movs
bound
mov
mov
emms
add
xchg
and
rcl
inc
ror
add
or
inc
lock
call
inc
popf
inc
stos
int3
test
xchg
outs
jg
xchg
xchg
or
pop
push
and
pop
push
fisttp
lahf
or
cwde
mov
call
mov
inc
or
push
cmp
ja
pop
add
pop
or
shl
xchg
sub
lea
ret
gs
add
ja
or
sbb
add
aas
loopne
add
jo
cmp
data16
sbb
int3
(bad)
xrelease
push
xchg
cmp
mov
mov
jle
xchg
das
inc
js
dec
jl
adc
pop
shr
test
or
jl
dec
js
xor
sub
cmp
mov
mov
call
and
ds
sbb
inc
and
cmc
and
sbb
xchg
dec
ins
add
sbb
retf
add
mov
xor
cmp
mov
je
setns
mov
es
fnstsw
adc
mov
xor
cmp
ja
jmp
and
cmps
fwait
mov
bnd
sub
jmp
add
sub
jmp
add
cmp
sbb
cmc
outs
push
je
mov
inc
cmp
mov
jg
mov
fbstp
push
cmp
jle
mov
cmp
je
mov
mov
push
push
mov
je
dec
js
ja
pop
mov
enter
shr
inc
loopne
je
sub
and
cmp
pop
add
inc
push
add
lods
dec
xchg
push
xor
shl
pop
popaw
inc
test
dec
add
add
daa
pop
mov
adc
dec
scas
dec
jnp
and
mov
inc
mov
push
xor
push
test
adc
push
call
push
je
inc
ins
sub
push
adc
pop
add
and
adc
mov
cmp
in
sti
gs
jo
dec
je
sub
or
std
inc
cmp
jne
push
push
mov
or
sub
ret
jmp
and
lahf
stc
mov
popf
loop
mov
stos
and
dec
lds
sbb
and
rol
fidivr
outs
add
jo
iret
xor
sbb
push
or
add
or
push
iret
xchg
add
je
lods
add
in
(bad)
jmp
pop
mov
test
inc
lds
mov
sub
dec
aam
ror
xor
test
sbb
push
pop
adc
or
add
jb
paddd
retf
lock
je
mov
inc
mov
out
push
cmp
ins
push
mov
mov
and
inc
push
and
adc
iret
push
rol
and
fstp
xor
adc
or
loope
sti
mov
push
xchg
ja
or
xchg
xchg
test
loop
sbb
outs
dec
(bad)
and
and
iret
push
out
(bad)
(bad)
mov
int3
icebp
call
sub
cmp
jbe
mov
or
xor
cmp
jne
neg
daa
loop
int
pop
pop
xchg
lea
je
nop
inc
and
inc
mov
mov
fidivr
pop
mov
mov
xor
or
icebp
scas
xchg
mov
xchg
daa
jle
pop
lods
scas
mov
ror
jbe
add
nop
cmp
rcl
sbb
iret
lea
pusha
or
mov
popf
inc
mov
mov
mov
test
dec
pop
fbstp
loopne
jg
push
add
shl
mul
add
push
and
mov
mov
inc
mov
lods
ror
add
and
test
push
and
mov
mov
sbb
stos
inc
mov
add
stc
(bad)
aas
pop
and
sub
aas
ret
push
push
(bad)
fist
pop
fs
cvtps2pi
jg
hlt
push
push
cmp
jne
mov
jmp
mov
push
jmp
push
mov
mov
mov
push
les
push
mov
push
and
dec
xlat
rcr
pop
and
(bad)
add
in
xor
dec
add
arpl
popa
mov
test
pop
push
popa
mov
ret
test
push
push
jle
inc
mov
pop
in
push
lea
mov
push
or
jg
ins
js
in
sub
cmps
or
sbb
and
sbb
je
fcom
add
adc
(bad)
aaa
add
test
loop
add
(bad)
outs
js
xchg
(bad)
adc
mov
xlat
lds
add
(bad)
push
or
and
push
push
xchg
and
arpl
push
add
dec
fstp
stos
sbb
mov
(bad)
fbstp
and
push
add
and
mov
jb
jno
imul
adc
int3
jne
xchg
jl
jo
push
xchg
mov
ja
dec
push
pop
jl
ins
adc
les
mov
sbb
push
(bad)
enter
icebp
push
sub
xor
add
xchg
mov
jo
push
cmps
cmp
call
mov
and
push
int3
mov
push
dec
add
test
push
adc
push
ja
test
and
mov
mov
pop
mov
jnp
pop
add
add
mov
in
or
fist
mov
das
adc
addr16
push
push
pop
pop
mov
ss
dec
mov
sub
call
add
push
mov
push
adc
and
add
rcl
or
dec
jp
mov
pop
loop
cmp
mov
dec
and
int3
push
and
out
xchg
cdq
and
stos
mov
sbb
ret
and
aaa
out
repz
pusha
call
leave
(bad)
pop
push
sbb
sbb
xchg
push
xchg
test
arpl
push
push
lea
or
pop
pop
adc
call
xor
inc
je
push
lea
rcl
cwde
dec
and
aad
pop
sub
or
or
in
pop
push
add
add
or
dec
jbe
loop
pusha
push
jl
adc
mov
xchg
outs
out
mov
test
jno
dec
push
pusha
scas
mov
push
or
call
mov
push
push
push
mov
ss
sbb
pop
push
call
xchg
loopne
cmc
dec
outs
push
pop
xor
jp
sbb
push
push
mov
push
dec
xor
arpl
push
push
addr16
addr16
xchg
or
ins
ss
xor
add
int3
dec
pop
(bad)
movzx
inc
pop
push
sub
ror
shr
pop
daa
test
je
or
pusha
fld
dec
gs
fist
shr
cmp
inc
fcom
call
push
pop
loope
popa
add
push
outs
push
or
sbb
sti
add
inc
into
inc
std
cwde
push
add
add
mov
add
add
lea
add
cmp
int3
mov
dec
ss
add
aad
xlat
fdivr
ins
add
clc
or
push
push
jne
cmp
mov
ins
inc
jge
add
and
push
popa
mov
sahf
out
mov
or
and
ins
gs
rol
mov
dec
cmp
xchg
aas
dec
jl
xchg
mov
add
fadd
add
push
mov
or
add
push
icebp
push
lea
pop
sbb
and
xchg
jnp
std
mov
sub
fcomip
adc
mov
mov
jne
test
dec
jle
icebp
in
mov
push
aad
cs
sbb
or
shr
ins
and
mov
cmp
or
clc
jl
popa
cmp
xchg
push
push
push
fmul
(bad)
dec
inc
outs
pop
scas
xchg
push
adc
cdq
xor
sub
dec
mov
lock
dec
and
enter
push
inc
pushf
ss
jo
vpmacsswd
jecxz
icebp
dec
mov
pop
ins
mov
(bad)
fstp
ret
jne
sahf
rol
inc
pop
fmul
je
inc
js
icebp
dec
cs
mov
lods
repz
push
dec
outs
out
add
sbb
add
mov
adc
or
inc
xor
iret
pushf
loope
icebp
mov
add
or
clc
add
push
xchg
xor
mov
shr
int3
add
cmc
sub
push
lahf
cdq
sbb
adc
mov
(bad)
sahf
inc
lock
dec
and
call
push
sbb
lock
mov
add
fs
push
or
out
call
cmp
and
jmp
ss
jge
sub
pop
les
out
xchg
add
in
adc
cdq
sub
push
push
idiv
icebp
out
aam
add
dec
add
push
lock
pop
or
push
push
out
out
fsubr
sbb
call
sbb
and
imul
call
pop
ret
mov
add
add
mov
or
pop
cwde
pop
jo
sar
pop
mov
mov
jmp
jne
jbe
mov
out
and
pop
jb
ficom
mov
loope
lea
inc
push
or
or
mov
lods
and
push
popa
push
push
out
sub
call
(bad)
and
xchg
push
mov
jmp
adc
iret
push
push
add
mov
out
(bad)
(bad)
or
icebp
adc
nop
and
shl
and
jmp
adc
push
push
sub
mov
das
push
ja
or
test
fucomp
div
xor
and
mov
fs
adc
aaa
lea
sub
sbb
jmp
sti
or
jne
out
jmp
or
inc
mov
push
fsubr
push
call
xor
push
pop
sub
cli
ficomp
lock
out
lahf
repz
call
pop
mov
pop
adc
adc
or
sbb
sbb
add
iret
jno
add
ins
sub
mov
push
or
addr16
jmp
or
sbb
and
mov
pop
into
xchg
or
mov
cmp
push
pop
push
rol
mov
aaa
sbb
add
sbb
and
aam
test
inc
jg
ja
sub
inc
and
sub
sub
or
loope
stos
inc
push
pop
stos
mov
xor
xor
xchg
icebp
or
or
icebp
jecxz
jp
push
mov
or
call
lea
je
lea
push
gs
ins
mov
mov
inc
cmp
idiv
inc
cld
inc
pop
jmp
cmp
add
out
sub
push
std
push
dec
mov
or
mov
inc
inc
pop
loope
inc
je
test
or
add
or
test
mov
and
shl
lea
add
cld
sar
or
push
push
imul
inc
and
call
stos
mov
addr16
fimul
loopne
inc
or
cmp
retf
xchg
sbb
xchg
xor
ss
pop
sbb
jmp
fstp
or
cmp
adc
inc
dec
mov
(bad)
mov
add
ror
test
setge
dec
or
cli
or
add
shl
aad
test
aam
sbb
dec
xor
mov
xchg
sbb
push
and
sahf
xor
inc
add
and
cmp
push
sub
add
das
enter
lea
or
lods
ret
mov
adc
mov
loop
mov
add
add
jmp
and
inc
sub
shr
or
mov
shl
add
cmps
sar
dec
and
cmp
sahf
and
adc
pop
adc
push
or
mov
inc
pusha
adc
jo
dec
rdtsc
sbb
add
enter
enter
adc
sub
and
jb
ret
daa
inc
mov
adc
dec
dec
clc
adc
xor
dec
dec
jne
or
sub
and
cwde
imul
inc
int
or
jmp
pop
add
sub
push
push
gs
popa
loopne
mov
or
xchg
ja
sbb
les
test
inc
sub
or
mov
mov
not
and
fist
in
xor
mov
xchg
adc
pop
(bad)
leave
jne
adc
loopne
leave
mov
ror
mov
cmp
je
inc
mov
rcr
aam
dec
daa
inc
cmp
jne
mov
call
aaa
(bad)
adc
inc
test
jle
push
pusha
xlat
lds
sbb
pop
sbb
inc
fnstenv
mov
add
or
or
jne
or
lock
je
stos
arpl
test
dec
sub
adc
das
add
lea
mov
ins
jl
dec
or
aaa
jo
or
and
push
xlat
or
je
sbb
push
mov
loope
add
cmp
mov
sbb
add
mov
mov
add
out
or
inc
add
enter
fbld
mov
inc
pop
xor
push
push
jmp
pop
adc
mov
push
push
push
out
xor
inc
mov
push
in
out
jbe
mov
nop
dec
loopne
clc
jae
or
dec
lahf
dec
clc
lahf
int
mov
test
jne
aam
add
push
(bad)
punpckhbw
or
add
add
mov
push
(bad)
aaa
push
sub
xor
aaa
adc
or
cmp
nop
cmp
and
(bad)
clc
cmp
cmp
scas
mov
fdiv
or
sti
(bad)
and
sbb
ret
sti
das
adc
xor
sbb
sbb
sbb
jns
retf
or
xchg
mov
mov
pop
outs
jl
cmp
inc
inc
inc
cdq
jno
add
dec
mov
mov
mov
or
mov
lahf
add
or
add
mov
jmp
lahf
push
or
dec
ret
mov
pop
sub
add
mov
push
lods
call
(bad)
call
mov
adc
xlat
jmp
neg
push
mov
push
inc
pusha
ret
stc
xor
inc
or
mov
cdq
push
mul
xor
sbb
fadd
and
mov
pop
push
jo
loop
xchg
pop
xchg
pop
adc
(bad)
mov
mov
mov
dec
mov
sbb
aas
fistp
xchg
hlt
sbb
(bad)
out
push
or
dec
and
mov
(bad)
scas
and
cmc
xchg
sub
sub
jb
aad
inc
or
or
push
push
cld
xor
pop
add
pop
dec
and
or
mov
mov
into
int3
(bad)
fs
jmp
das
add
loope
test
dec
mov
jne
out
pusha
push
mov
dec
cmp
iret
dec
mov
sub
lea
ror
adc
add
mov
inc
inc
mov
add
rcr
inc
add
jmp
push
jo
into
jmp
call
push
out
sbb
and
push
call
add
setno
mov
add
mov
out
rcl
cmovg
test
sti
ins
xchg
jb
push
scas
(bad)
inc
push
cld
sub
pusha
add
outs
push
dec
inc
pusha
xchg
add
jecxz
cwde
mov
add
fwait
cmp
add
push
and
xchg
mov
pop
mov
and
adc
adc
int3
pusha
add
ins
outs
xor
ret
adc
or
mov
add
test
sbb
inc
inc
hlt
mul
mov
test
je
ja
push
mov
add
mov
mov
add
rcr
push
mov
pusha
(bad)
mov
cmc
xor
das
lock
popa
mov
aam
(bad)
pop
leave
aam
push
push
add
mov
push
sub
mov
in
or
push
leave
or
(bad)
jecxz
mov
mov
adc
and
jge
ret
dec
adc
sbb
or
jg
push
xchg
loope
or
jg
imul
setb
sub
and
jnp
add
fsubr
or
dec
pop
mov
add
les
add
add
mov
mov
pop
sbb
inc
add
add
or
mov
mov
cmp
xor
les
jno
push
icebp
dec
mov
cmp
je
xor
test
jle
mov
cmps
adc
cmp
jl
sub
mov
fimul
jmp
outs
cmp
(bad)
mov
into
cmp
mov
dec
cdq
or
fs
cmp
mov
sar
fild
push
pop
inc
cmp
jl
jmp
add
mov
lea
and
cmp
jl
aas
jmp
push
dec
or
call
je
push
or
push
imul
out
cmp
jge
push
add
(bad)
sbb
loop
je
jmp
movs
jb
jmp
out
test
inc
xchg
pop
call
push
pop
retf
adc
pushf
cld
data16
cmp
jl
xor
inc
iret
mov
cwde
xlat
sub
mov
mov
in
sbb
(bad)
and
push
mov
fdiv
mov
(bad)
fild
sbb
fistp
push
in
and
test
jle
daa
add
mov
inc
cmp
mov
pop
inc
cmp
jl
jmp
mov
jno
cmp
push
pop
lock
dec
dec
sbb
shl
clc
sub
push
jmp
cli
cmp
or
adc
push
ficom
pop
in
in
into
mov
cmps
sti
add
js
(bad)
jb
cs
hlt
sub
add
push
push
mov
aam
push
dec
push
sti
jl
or
mov
js
or
cmp
(bad)
add
adc
std
(bad)
data16
jmp
mov
dec
add
out
aaa
(bad)
pop
pop
mov
mov
dec
mov
jbe
mov
adc
daa
daa
daa
daa
dec
bound
out
sbb
xor
mov
fucomip
mov
add
sbb
repz
mov
and
jmp
pop
mov
jmp
ja
or
push
neg
cmp
int
cmp
mov
push
pop
mov
jmp
or
push
sub
jae
mov
or
push
push
jae
fucomip
js
mov
or
in
mov
imul
in
cmp
or
push
cmc
add
sahf
cdq
out
jge
or
add
lods
out
scas
popa
xlat
sbb
xor
add
mov
and
push
jle
fisttp
or
inc
and
push
loopne
(bad)
fisttp
add
jmp
or
cli
mov
and
or
mov
(bad)
das
push
mov
add
inc
aam
jne
shl
sbb
ret
jmp
pop
push
mov
mov
and
pop
outs
bound
xcrypt-cfb
cmps
popa
add
inc
rol
pop
xor
ffree
sub
je
inc
jl
push
mov
pop
test
je
sbb
je
out
mov
mov
pop
dec
or
shr
pop
mov
add
mov
(bad)
dec
mov
test
lar
rol
repz
push
(bad)
jg
call
or
dec
or
push
push
inc
cld
and
push
push
push
repz
(bad)
push
jg
jbe
pop
and
mov
push
dec
mov
pop
adc
and
loopne
mov
outs
mov
and
sti
mov
movs
push
mov
xor
push
push
lock
mov
add
test
xchg
clc
pop
je
mov
movs
dec
mov
add
sbb
and
push
cwde
mov
pop
adc
pop
stc
push
mov
xor
adc
mov
cmc
aam
jo
jae
cmp
mov
jmp
mov
push
xor
pop
push
call
sub
or
imul
fmul
shr
add
into
add
push
call
scas
push
push
test
adc
inc
out
es
cmp
outs
cmp
or
or
push
add
ret
rol
lahf
xchg
push
and
xchg
inc
and
ret
inc
cld
mov
fisttp
jo
pushf
and
les
mov
and
sub
test
adc
adc
cmp
adc
pop
dec
and
adc
(bad)
int3
mov
and
mov
sbb
cmps
add
push
cmp
push
jae
ja
add
mov
cmp
je
fisttp
test
or
icebp
fild
loope
inc
push
push
push
call
inc
xlat
adc
cdq
add
aad
and
daa
ins
push
mov
add
(bad)
pop
dec
and
cmp
(bad)
mov
ret
scas
mov
or
jo
rcl
dec
and
dec
int3
push
pusha
mov
out
add
mov
pop
and
xor
and
(bad)
sbb
je
dec
sbb
mov
and
into
sub
call
jmp
scas
sub
push
push
pop
dec
popf
cmp
xchg
in
sar
xor
sbb
pusha
pop
mov
mov
xor
adc
test
xchg
ficom
pop
pop
dec
mov
and
fist
push
push
mov
cmp
sbb
(bad)
mov
fmul
add
test
mov
cmp
add
push
and
rcl
fst
adc
jle
push
sub
adc
dec
sbb
push
and
mov
pop
and
sbb
je
pop
ja
(bad)
pop
sub
outs
push
cld
push
sub
inc
daa
and
ins
js
and
test
mov
test
mov
out
mov
add
sysret
push
xor
std
cmps
jl
fist
adc
rol
xchg
ror
jmp
fimul
sub
in
xchg
fsubr
jmp
mov
push
aam
push
jne
js
call
sbb
shl
inc
sub
retf
enter
mov
lea
add
test
push
ins
in
mov
add
test
pop
je
call
jmp
rol
call
loop
inc
and
mov
inc
adc
adc
mov
or
push
mov
sbb
and
add
mov
mov
je
add
or
or
ret
ror
cmp
or
invd
adc
ret
jae
xor
cmp
jg
add
pusha
add
test
stos
lock
scas
(bad)
inc
push
jle
jo
and
inc
sub
daa
jbe
loopne
cmp
ins
and
xchg
jmp
add
pop
fdiv
loop
outs
mov
je
push
lds
xor
cld
std
push
and
push
push
sbb
add
adc
sti
add
ficomp
cmp
pusha
cmp
daa
mov
fiadd
and
out
es
imul
mov
cmp
test
cmp
jmp
ror
loop
mov
dec
rol
pop
lea
test
dec
or
in
inc
adc
add
loopne
aam
and
les
cmp
cld
pusha
adc
aam
push
dec
xchg
pop
push
pop
xor
inc
add
mov
cmp
in
jo
jl
inc
retf
sbb
mov
pop
fistp
push
push
mov
dec
push
(bad)
sbb
and
leave
je
fstp
aaa
popa
jo
into
push
mov
and
or
or
xor
jecxz
out
leave
and
sti
and
fisttp
push
adc
dec
cld
xchg
adc
bound
xchg
enter
xor
mov
ret
mov
adc
push
xchg
add
or
sub
test
xor
pop
into
or
sar
sbb
je
ret
dec
jo
sbb
je
mov
je
cmp
jp
nop
dec
and
das
mov
xor
xor
cmp
les
and
into
pop
jns
dec
pop
test
and
sbb
(bad)
sub
(bad)
mov
add
mov
inc
ins
ja
std
lds
pop
cmp
jle
push
and
aas
push
pop
ja
and
fadd
pop
sbb
push
and
mov
or
call
lock
je
das
push
or
mov
and
pop
int3
out
inc
and
pop
test
pop
das
inc
sbb
dec
mov
adc
mov
mov
add
sti
or
sub
or
or
or
mov
sub
fnstcw
push
adc
add
xchg
cli
adc
dec
nop
nop
xchg
pop
sbb
int3
movs
push
sbb
push
int3
mov
fnstsw
cmp
in
or
push
(bad)
jmp
or
mov
xchg
xor
mov
repz
cmps
(bad)
cmps
sub
ja
in
int
mov
mov
cdq
outs
mov
add
pop
into
push
mov
add
fdivr
loop
mov
or
ja
push
test
or
add
mov
mov
push
mov
xlat
xchg
mov
or
push
outs
ja
push
test
add
xlat
mov
sub
and
mov
mov
mov
add
inc
out
mov
push
in
dec
inc
or
repz
add
push
add
jbe
mov
pop
add
fwait
arpl
push
adc
repz
jo
mov
inc
and
daa
mov
mov
out
push
adc
fistp
push
jo
test
mov
cdq
out
nop
pop
xchg
push
mov
sahf
outs
mov
sbb
mov
mov
sbb
mov
add
int3
in
outs
mov
rol
sbb
add
int3
repz
loopne
in
mov
iret
mov
in
add
hlt
sbb
push
addr16
cld
add
add
or
jns
fstp
push
mov
add
sbb
jbe
popf
sbb
push
mov
add
outs
mov
xor
xor
adc
jmp
repz
add
inc
and
out
fstp
add
mov
and
pop
mov
iret
mov
fs
ins
and
sahf
outs
ja
adc
add
cmp
push
adc
add
sbb
in
xor
sbb
dec
mov
test
adc
jne
xchg
fdivr
(bad)
mov
mov
add
jne
pop
or
test
(bad)
out
sub
out
lods
(bad)
cmp
div
and
jbe
mov
jmp
push
and
xor
inc
or
adc
sahf
or
mov
popf
fs
mov
xchg
cld
fsubr
sti
mov
ret
mov
leave
shl
ror
xchg
repnz
or
pop
xchg
add
add
aaa
xor
and
aam
add
shl
mov
lea
cmp
aas
add
push
and
sbb
in
and
mov
jge
outs
xchg
or
shr
lods
xchg
es
cs
icebp
inc
cli
ja
sbb
mov
aaa
sub
les
adc
mov
or
inc
or
in
mov
add
inc
adc
inc
adc
std
inc
add
or
xor
stos
and
mov
or
or
pop
or
mov
add
or
xchg
adc
push
push
mov
bound
push
dec
add
leave
je
add
dec
pop
cmp
test
cmp
je
push
cmp
test
adc
pop
call
lea
aam
das
mov
sub
es
xor
addr16
jb
add
push
jo
xor
arpl
addr16
sub
push
push
enter
xchg
and
sub
adc
jne
mov
jmp
mov
mov
mov
add
inc
fidiv
and
cmp
mov
cmp
sub
push
out
fisttp
popa
add
mov
cmp
sub
pop
ret
adc
jmp
and
out
inc
inc
je
push
xchg
pusha
in
fst
je
inc
fwait
in
scas
mov
call
inc
hlt
imul
dec
inc
cmp
je
inc
mov
inc
xor
and
call
cmp
pop
pop
es
adc
push
je
aad
jo
push
out
aad
test
mov
iret
sub
fwait
shl
sub
lea
into
push
mov
push
or
mov
mov
adc
add
pop
imul
jb
mov
ja
iret
jb
push
jp
adc
gs
xor
icebp
cld
xor
cmp
dec
lock
popf
test
imul
cmps
mov
mov
call
cmp
ins
cmp
dec
cs
aad
mov
sbb
cmp
cmp
inc
rcr
mov
mov
mov
and
sbb
daa
cmp
jp
push
push
or
loope
out
sbb
mov
xor
inc
inc
push
sbb
js
and
inc
in
jbe
push
xlat
adc
jbe
inc
mov
call
mov
mov
(bad)
and
or
(bad)
hlt
adc
add
add
inc
and
inc
ror
jp
into
push
push
scas
adc
mov
add
cmp
out
scas
call
idiv
dec
cdq
xor
lea
push
call
mov
mov
adc
sbb
clc
cs
mov
push
add
sub
push
rcr
lods
fmul
popf
or
loope
mov
mov
inc
xor
cmp
jle
or
add
push
cmc
mov
call
jl
pop
push
shr
cmp
pop
je
and
mov
adc
sbb
pusha
mov
xor
icebp
push
mov
push
jb
setle
sahf
unpckhps
or
add
test
mov
je
or
mov
xor
hlt
mov
jp
aas
push
cld
mov
rol
jne
aam
push
ja
das
inc
mov
pop
push
lea
mov
test
call
push
adc
fadd
cs
add
adc
ds
adc
push
add
add
in
mov
sbb
stos
push
xor
jo
pop
sbb
push
sahf
pop
mov
sub
inc
jmp
pop
jo
out
shl
xchg
mov
jo
iret
dec
loope
fadd
mov
and
scas
add
xchg
(bad)
pop
ja
inc
mov
test
call
mov
inc
clc
jg
(bad)
sub
mov
mov
mov
int3
cmp
cmp
xor
jno
jo
mov
or
mov
lahf
push
mov
icebp
mov
les
xor
mov
mov
mov
fdivr
dec
pop
repnz
inc
cdq
nop
iret
push
ins
jno
adc
leave
test
and
jmp
inc
add
add
dec
pop
ja
pop
inc
out
or
(bad)
stc
je
inc
or
mov
fwait
mov
mov
out
lock
xor
pop
inc
cli
add
add
add
pusha
add
mov
and
rol
and
sub
sub
cmp
mov
sub
or
ja
pop
cmp
add
ret
mov
add
or
cdq
push
call
or
jmp
je
and
adc
outs
dec
and
xor
pop
mov
inc
push
outs
or
xchg
push
dec
and
test
in
sbb
js
loopne
sbb
push
push
sub
push
pop
inc
test
or
inc
add
mov
sbb
xor
and
test
push
mov
sbb
nop
test
mov
je
hlt
add
pop
xchg
jne
pop
sbb
movs
sbb
out
sbb
cmp
lods
mov
sbb
outs
hlt
dec
fwait
push
call
dec
je
fnstenv
fild
hlt
pop
inc
add
sub
jl
rcl
(bad)
and
add
inc
add
mov
(bad)
(bad)
out
std
mov
mov
pop
jne
test
je
mov
or
add
(bad)
scas
add
mov
xor
clc
cmps
mov
dec
inc
push
cmp
ins
inc
jmp
pushf
push
nop
push
jg
push
jg
mov
mov
mov
add
test
pop
je
cdq
enter
les
fsubr
lahf
jp
or
scas
mov
adc
or
jnp
push
(bad)
adc
or
test
jg
(bad)
scas
and
or
xchg
adc
pop
add
mov
dec
sub
push
mov
add
xchg
test
push
push
call
inc
cmp
jae
pop
loopne
add
retf
sbb
rcl
ror
(bad)
stos
mov
push
inc
clc
xor
dec
sbb
shl
aas
mov
imul
or
push
push
test
or
les
hlt
dec
inc
pusha
es
add
ins
jmp
in
fs
push
pop
inc
cmc
fisub
push
sbb
add
loopne
lock
push
sbb
stc
sbb
and
cmp
or
mov
and
cmp
inc
or
cmp
nop
xchg
mov
mov
sub
inc
call
add
mov
sbb
mov
cmp
or
ins
push
sahf
mov
push
pop
popw
xchg
rcr
push
in
add
and
lock
sbb
pop
jg
cmp
mul
and
inc
and
or
sahf
push
stos
das
inc
sub
sar
out
and
call
push
(bad)
je
(bad)
sbb
dec
sub
aad
cmps
xchg
xor
pop
or
lock
add
mov
jo
call
or
or
or
cwde
jmp
xor
pop
or
sub
dec
or
add
xor
add
(bad)
mov
mov
call
or
inc
cli
add
dec
or
add
jne
xor
aas
push
rol
add
mov
(bad)
jg
gs
scas
mov
push
add
mov
add
(bad)
inc
or
adc
push
cld
mov
mov
add
pop
mov
add
xor
mov
cmp
jge
mov
adc
add
xchg
mov
adc
mov
add
or
ret
mov
adc
mov
jle
add
cmp
jge
mov
or
leave
mov
ret
mov
inc
int3
mov
or
outs
call
add
ins
add
xchg
cmp
pop
pop
and
dec
adc
adc
icebp
dec
add
add
ror
mov
cli
push
add
add
mov
ins
mov
or
std
jo
retf
repz
and
gs
test
sub
retf
(bad)
out
jg
mov
mov
pop
pop
lea
je
add
outs
clc
pop
cmp
push
push
lea
push
test
push
jne
xor
(bad)
mov
or
lea
mov
lea
cmp
add
mov
sbb
retf
lea
jmp
imul
clc
xlat
dec
pop
or
fild
push
lea
push
loop
in
add
loope
sub
mov
push
lea
or
addr16
or
or
add
add
push
xchg
cli
aaa
mov
jne
mov
stos
add
inc
push
sub
add
jg
push
push
lea
mov
push
jne
mov
mov
sub
inc
push
push
lods
or
sub
js
sub
jno
ret
mov
adc
cmp
sub
push
push
je
ins
add
mov
ficom
inc
inc
push
aaa
shl
or
aam
inc
cmp
and
movsx
ja
lea
mov
cs
mov
mov
inc
sbb
sbb
mov
dec
lea
sahf
jmp
in
mov
stc
adc
(bad)
xor
shl
adc
test
xchg
mov
dec
pop
pop
mov
pop
pop
test
pusha
out
jecxz
repz
aas
sbb
pop
and
mov
or
pop
or
add
outs
arpl
inc
add
jle
push
lea
jmp
(bad)
add
pop
std
pop
cmc
push
add
push
push
adc
mul
jg
inc
sbb
iret
shl
test
jle
jno
push
sbb
cmp
cmp
dec
pop
inc
mov
or
or
or
sub
pop
pop
push
inc
inc
icebp
data16
or
(bad)
in
and
jl
leave
cwde
rol
push
fadd
pop
std
sub
adc
pminub
mov
test
jge
add
aam
or
cmp
jl
ja
or
rol
adc
push
push
xchg
sub
mov
cld
inc
push
mov
push
(bad)
sbb
or
and
sbb
or
imul
adc
std
shl
sti
test
adc
sar
(bad)
adc
push
push
mov
mov
xor
es
ja
dec
and
retf
mov
sub
add
push
adc
add
test
mov
ins
and
fbstp
ss
int
dec
push
lea
add
sahf
add
push
or
je
or
mov
add
xor
inc
cdq
adc
loope
dec
repz
repnz
push
push
push
test
dec
sbb
cld
ret
sub
inc
add
add
pop
mov
adc
pop
call
mov
inc
or
fwait
leave
add
sub
sub
dec
or
jl
daa
ret
adc
mov
jmp
sbb
rcr
push
xor
int
or
ja
and
jno
push
shr
cmp
and
lea
push
or
cmp
add
add
jmp
inc
cmp
jge
push
mov
test
pop
mov
js
test
adc
ret
pusha
push
xor
or
out
iret
cmp
mov
shr
sar
add
das
cmp
jne
cmps
xchg
add
or
push
cmp
sbb
les
pop
dec
mov
sbb
loopne
clc
ja
sbb
mov
(bad)
mov
mov
mov
cmp
adc
fist
jmp
je
adc
aad
shr
fcomip
dec
jmp
lea
cmp
jle
sub
or
mov
cmp
fstp
test
and
and
adc
adc
mov
sbb
pop
adc
xor
and
pop
jg
stos
push
lea
push
push
sar
clc
ret
sar
and
dec
mov
shr
retf
aad
sti
add
lea
sbb
rcl
pusha
in
mov
sub
inc
and
shr
push
dec
arpl
popf
jae
mov
add
push
mov
icebp
mov
add
test
inc
je
pop
ror
mov
add
jne
ret
lahf
add
and
cdq
mov
add
jl
add
sub
loopne
sahf
fwait
js
add
push
mov
adc
fild
test
sbb
jge
(bad)
nop
add
dec
sahf
ror
shr
mov
clc
sbb
push
mov
adc
add
inc
push
neg
cmps
xor
adc
add
dec
sub
push
sub
adc
mov
je
lea
push
and
fcom
mov
push
or
mov
add
lock
nop
je
adc
adc
stc
pop
int3
out
inc
mov
fiadd
jg
adc
add
sbb
dec
sar
rol
popf
add
ja
mov
mov
test
jle
and
add
mov
adc
ret
stos
adc
push
add
lods
mov
ret
pop
xor
inc
cmp
fbld
adc
jl
mov
rcl
and
or
jo
pop
mov
pop
pusha
daa
hlt
pop
mov
sbb
fist
fild
add
std
mov
mov
mov
outs
fnstenv
dec
mov
dec
or
push
mov
mov
ja
jg
mov
jp
call
sbb
ret
gs
call
cmp
inc
add
mov
push
mov
push
cld
xor
test
jl
pop
xor
arpl
les
fcom
mov
sbb
movs
sub
ins
add
and
sub
add
jo
adc
push
cmp
scas
call
sti
cmp
cmp
jne
adc
cmp
jne
test
sbb
add
jne
cdq
(bad)
clc
pop
mov
mov
jmp
add
inc
cmp
std
jmp
sub
jge
mov
inc
sbb
pop
cmp
(bad)
(bad)
(bad)
js
cmp
(bad)
jmp
in
inc
sub
pusha
mov
inc
add
xchg
daa
ins
add
xor
jmp
pop
inc
in
dec
mov
and
add
call
fwait
dec
jne
cmp
push
imul
pushw
push
mov
cld
aaa
jo
push
imul
mov
or
push
lods
loope
inc
mov
sub
pop
or
jg
add
pop
inc
or
inc
jmp
or
aaa
inc
inc
jmp
xor
je
sub
mov
imul
aad
(bad)
xchg
push
gs
or
gs
pusha
clc
fistp
mov
xor
push
data16
pop
push
neg
mov
adc
sbb
push
hlt
cmp
je
inc
(bad)
inc
inc
jmp
lea
mov
mov
add
add
cmps
sub
mov
adc
lds
mov
sbb
or
push
dec
add
out
stos
lea
push
sub
add
xchg
push
cmp
jne
mov
mov
push
mov
call
pop
add
add
(bad)
jno
mov
or
ror
fwait
pop
and
xchg
cld
push
inc
ret
inc
jge
mov
xchg
fs
sbb
ins
ret
popa
push
sbb
dec
inc
aas
ja
xchg
push
push
stc
add
add
sbb
jg
xor
lea
mov
ins
inc
xchg
jecxz
add
gs
js
inc
pop
cmp
cld
nop
adc
adc
or
aaa
or
adc
retf
mov
or
movs
push
xlat
add
scas
add
sub
or
rcr
or
or
clc
mov
(bad)
add
sbb
sub
cmp
lock
add
rcr
jg
inc
add
or
clc
aas
cmp
loope
push
lea
push
mov
xchg
mov
xor
push
or
(bad)
add
scas
bound
nop
dec
push
lea
fnstsw
adc
je
or
add
or
add
lds
je
push
push
call
sbb
dec
aas
pop
adc
jmp
mov
adc
push
push
mov
test
or
das
or
adc
adc
mov
in
or
inc
mov
xchg
push
test
je
pop
pop
mov
pop
(bad)
adc
adc
add
inc
xor
adc
push
mov
xchg
loopne
mov
or
inc
mov
mov
imul
push
mov
and
dec
mov
mov
sbb
ret
sub
jg
icebp
imul
jno
or
push
arpl
lea
push
mov
or
push
adc
adc
mov
push
loope
add
ret
sar
jae
addr16
add
test
ret
(bad)
movs
push
mov
mov
fist
cmp
je
dec
push
push
sbb
or
adc
adc
test
push
bound
or
xor
lahf
sub
punpckhdq
push
jmp
jne
pop
pop
xchg
inc
aad
or
adc
add
push
mov
inc
stc
add
sbb
or
leave
mov
je
adc
lods
outs
adc
jmp
lea
mov
bound
fbld
dec
pop
dec
mov
mov
adc
add
lods
lea
adc
or
or
add
in
shl
mov
sbb
add
xor
popf
jle
nop
push
push
or
dec
add
mov
inc
test
(bad)
aas
or
adc
adc
loope
cmp
jne
test
sbb
adc
adc
mov
movs
les
arpl
push
or
lea
mov
adc
(bad)
cld
lea
mov
jae
aas
jbe
mov
mov
mov
mov
adc
jae
sbb
cld
mov
adc
add
jne
sbb
out
push
mov
mov
ret
or
dec
sbb
add
jne
sbb
cmp
sbb
add
push
add
sub
add
and
mov
push
pop
xor
sub
jo
xor
mov
icebp
add
je
mov
cli
cli
mov
and
cmp
je
push
cli
aas
adc
movs
push
mov
lea
push
push
mov
mov
mov
das
mov
clc
adc
add
add
and
or
fstp
xor
pop
ret
push
push
aas
sub
mul
je
adc
mov
test
mov
inc
pop
aas
xor
fnstsw
je
or
div
pop
ret
push
lea
sbb
aas
into
mov
mov
ror
add
dec
mov
and
push
mov
add
or
mov
lea
pop
mov
jne
dec
lea
adc
aas
cwde
sub
add
push
add
pusha
icebp
push
or
mov
popa
sub
pop
mov
mov
gs
cmps
mov
or
xor
or
jo
jl
mov
sahf
popa
or
mov
inc
fst
mov
sbb
mov
maxps
cmova
into
adc
mov
mov
(bad)
mov
out
add
jge
add
mov
mov
stos
nop
cdq
sbb
adc
nop
sbb
adc
test
leave
xchg
adc
sbb
scas
or
out
xor
mov
cdq
mov
lea
nop
mov
and
adc
adc
pusha
scas
pusha
(bad)
pop
cmp
or
sbb
pop
sub
lock
push
add
mov
repnz
adc
sahf
jo
mov
test
mov
mov
ja
out
mov
lea
fidiv
sbb
sahf
(bad)
in
out
mov
rol
sub
aaa
pop
shl
add
jg
xchg
lock
sahf
adc
add
enter
jbe
jge
jno
mov
mov
mov
mov
and
push
fs
xchg
push
mov
fisttp
call
cwde
(bad)
dec
add
sbb
mov
test
adc
pop
or
or
mov
lock
out
xor
call
adc
xor
push
push
adc
adc
movs
xchg
add
sbb
pop
leave
in
subps
push
clc
adc
inc
push
inc
ins
aad
mov
pop
pop
(bad)
add
sbb
jo
add
jp
add
iret
stos
pop
or
out
dec
(bad)
fdiv
inc
inc
daa
nop
or
inc
div
jno
jbe
(bad)
je
dec
pop
lods
loope
arpl
mov
test
leave
and
add
rcl
fstp
ins
push
xchg
add
js
mov
nop
shr
dec
test
movs
scas
movs
aaa
daa
clc
cwde
inc
dec
stos
push
js
popf
mov
mov
sub
js
pop
lea
dec
ror
dec
lea
sahf
fidivr
inc
pop
mov
push
mov
dec
jne
mov
test
outs
ror
call
ror
hlt
in
mov
and
pop
mov
cmp
and
and
pop
iret
loope
sbb
repz
mov
cmc
in
lea
out
xchg
nop
out
adc
xchg
nop
adc
nop
out
xchg
in
adc
cmp
adc
or
adc
xchg
inc
inc
test
cmp
and
sti
push
cmp
lds
mov
pop
or
inc
mov
or
adc
jnp
adc
or
adc
nop
out
inc
inc
ficom
cmp
pop
cmp
and
jg
out
add
adc
fcmovne
or
mov
push
pop
dec
bound
and
inc
in
or
adc
sub
inc
out
les
xchg
test
stos
dec
loopne
jecxz
add
les
adc
in
mov
retf
add
jge
lds
inc
and
in
push
and
icebp
mov
je
popa
loopne
jle
(bad)
push
fstp
je
fcom
mov
xor
push
inc
jbe
inc
cs
rcr
(bad)
in
push
aaa
test
les
fidivr
rcr
inc
inc
dec
xor
xor
std
mov
mov
mov
(bad)
iret
nop
jnp
les
pop
cwde
add
dec
adc
and
mov
dec
mov
push
cmp
in
loopne
xor
test
lea
or
push
ja
jl
inc
jmp
call
add
or
push
add
scas
stos
jmp
bound
dec
add
into
fimul
adc
(bad)
pop
mov
sub
add
aad
pop
inc
add
adc
fmul
fcom
mov
or
dec
je
fmul
je
dec
je
cmp
add
pusha
mov
jmp
popf
sub
mov
push
int3
call
shl
pusha
add
push
pop
dec
and
sbb
and
mov
mov
dec
and
and
mov
pusha
cmps
xchg
push
lea
pusha
(bad)
fs
mov
xor
cmp
je
push
and
cmp
pop
xor
(bad)
cs
add
sub
je
and
push
adc
lods
retf
daa
add
idiv
mov
int
sbb
and
out
(bad)
or
push
add
pusha
aas
ret
mov
test
je
jbe
mov
je
xor
fsubr
mov
repz
out
jmp
cmp
or
sbb
ja
test
cmp
pop
push
cld
mov
mov
push
push
push
call
cmp
dec
xor
icebp
ja
push
mov
mov
sbb
adc
mov
push
and
test
or
(bad)
sbb
je
add
and
cmp
je
pop
dec
lea
push
or
popf
(bad)
adc
sbb
lea
mov
ret
xchg
jb
cmps
add
sub
mov
lods
int
rcl
(bad)
sti
sub
xor
push
or
sahf
adc
inc
ror
push
je
xchg
dec
mov
lea
ja
and
adc
test
xchg
mov
popa
test
gs
out
add
cmp
test
push
jne
cmp
add
sub
clc
adc
add
mov
jmp
cmp
clc
push
pusha
js
push
sbb
pcmpgtw
cmp
je
add
pop
jg
or
add
clc
lock
test
je
mov
sub
mov
mov
dec
add
movs
add
push
dec
mov
add
retf
ret
in
je
push
sub
cs
sbb
test
mov
lea
ret
mov
xlat
je
loop
push
jl
rcl
mov
push
rol
push
loope
or
lds
pop
sbb
jl
sbb
dec
xchg
add
inc
add
push
std
dec
inc
mov
cmp
test
sbb
pop
stos
pusha
xchg
mov
pop
ds
inc
in
jbe
mov
dec
mov
sub
addr16
dec
add
jnp
loop
jl
bound
out
fimul
mov
test
je
mov
xor
call
std
dec
je
rol
xor
mov
mov
hlt
ror
inc
mov
adc
dec
out
pop
push
xor
adc
jns
push
mov
dec
dec
xlat
out
pop
pop
push
jne
and
adc
lea
int3
scas
into
shr
ret
sahf
dec
xor
mov
fisttp
jp
push
and
mov
jne
in
das
or
cmp
sbb
add
rcr
repnz
push
or
push
mov
pusha
mov
pcmpgtd
or
jno
sub
sar
test
xor
cwde
mov
add
aaa
pushf
lods
or
cmp
loop
out
add
xchg
inc
aam
mov
mov
inc
push
xchg
adc
js
cmp
jl
xchg
leave
fisttp
jne
ror
jno
or
pop
jmp
mov
cmp
jo
sbb
inc
fldenv
popa
cmp
(bad)
(bad)
add
shl
dec
cmp
sub
sbb
retf
mov
jbe
add
add
add
sbb
test
je
or
retf
je
xor
push
lea
les
pushf
sbb
fistp
cmp
mov
mov
mov
push
cmp
pop
loope
pusha
jg
adc
ds
push
bound
pop
mov
shl
or
sbb
je
or
adc
and
xchg
imul
or
jnp
xor
(bad)
(bad)
(bad)
fist
arpl
mov
test
jle
jae
dec
imul
add
dec
jne
test
jle
out
adc
push
dec
jne
ror
loopne
cs
test
jne
in
(bad)
or
and
les
add
jl
les
outs
xor
mov
cmp
xor
sbb
adc
retf
push
sub
lock
fdivr
xchg
sbb
pop
sbb
je
mul
add
test
je
arpl
retf
inc
(bad)
shr
or
dec
adc
arpl
mov
bound
imul
int3
xchg
in
push
mov
sbb
xor
add
jne
or
mov
std
out
add
mov
mov
jg
dec
mov
mov
mov
bound
mov
xchg
jle
sbb
jbe
push
add
adc
cmps
loope
jecxz
dec
xchg
pop
adc
jge
jp
cmps
add
dec
mov
inc
mov
(bad)
push
cmp
jge
cmp
push
call
cld
fst
inc
jb
fwait
aaa
add
and
and
in
repz
add
clc
or
lea
leave
or
xchg
xor
jae
mov
sbb
sub
inc
jno
or
adc
sub
mov
or
out
adc
mov
jno
cmp
mov
add
mov
cmp
push
add
cmps
lods
xor
push
(bad)
and
pop
(bad)
not
and
push
mov
fisubr
jg
mov
cmp
cli
sbb
adc
inc
in
data16
loopne
or
sbb
and
adc
mov
xchg
inc
outs
add
mov
push
and
add
sub
lock
cli
or
or
and
outs
cmp
mov
xchg
test
mov
retf
mov
loope
sbb
loop
sbb
inc
mov
mov
ss
cmps
adc
cwde
hlt
(bad)
add
cld
jmp
sub
push
add
add
cmp
pop
jne
mov
xor
push
and
mov
out
fwait
cmps
sti
sbb
add
add
dec
in
aaa
inc
add
imul
test
imul
or
aaa
das
inc
add
mov
inc
add
add
dec
adc
std
or
int
pop
retf
pop
xor
jl
xor
inc
jl
xor
add
jbe
pop
xor
inc
dec
neg
fsub
add
dec
shl
loopne
sub
dec
shl
pop
inc
add
pushf
inc
add
pop
repz
add
sahf
inc
sbb
pop
and
fldenv
or
lea
pop
cmp
je
rcl
inc
test
xchg
or
in
add
dec
ja
and
(bad)
jge
mov
xchg
push
push
pop
and
and
inc
or
pop
imul
or
mov
(bad)
xor
add
std
jne
or
push
jg
icebp
inc
add
in
je
jmp
outs
mov
mov
jmp
sbb
lea
cmp
out
arpl
dec
dec
mov
jmp
aas
cmp
jne
cmp
sahf
add
dec
sbb
push
push
call
mov
and
cmp
push
mov
push
sti
sti
jb
cmp
fnstsw
mov
push
push
mov
mov
mov
loop
mov
push
mov
outs
arpl
cld
lea
sbb
rol
call
sbb
lock
sub
jg
push
add
mov
sar
out
out
add
pop
call
inc
in
cmp
jg
cmps
dec
lea
mov
jmp
loop
push
(bad)
adc
xchg
and
into
sti
(bad)
(bad)
fbld
push
dec
jmp
mov
mov
mov
ret
mov
mov
mov
es
fwait
retf
loope
and
inc
push
pop
adc
sub
(bad)
jmp
mov
mov
mov
aas
mov
inc
in
inc
xchg
jg
xchg
lea
ret
mov
mov
and
dec
hlt
jns
(bad)
loope
add
in
mov
je
popf
test
je
push
jmp
mov
xchg
in
mov
xor
add
mov
pop
and
clc
add
jne
cmps
(bad)
mov
mov
pop
loop
sub
add
dec
lea
push
pusha
xchg
add
mov
mov
cmp
(bad)
jnp
in
add
movs
adc
add
push
cmps
jg
mov
jne
sbb
add
pop
pop
and
ja
mov
in
sub
ins
and
push
push
mov
add
push
hlt
loopne
loope
lods
mov
frstor
je
dec
pop
test
pop
cld
int3
int3
dec
add
mov
cmp
jne
pop
cli
out
or
ret
pop
sub
xchg
and
add
push
jmp
mov
mov
mov
es
inc
add
and
je
cmp
je
inc
out
cmp
mov
test
adc
scas
(bad)
jl
adc
cmp
xor
rol
and
mov
cmp
adc
jmp
sbb
mov
inc
dec
clc
add
push
xor
push
push
push
adc
js
push
cmp
je
aaa
inc
icebp
daa
mov
push
mov
inc
jmp
jnp
mov
mov
(bad)
sub
(bad)
je
jo
cmp
and
and
push
ins
adc
call
cld
scas
cmp
mov
test
mov
cs
mov
sub
lock
sbb
sub
inc
cmc
out
or
add
mov
in
mov
test
cmp
push
dec
div
je
mov
test
cmp
fld
add
add
lea
fild
jae
inc
std
mov
in
cmp
push
mov
add
sub
test
test
jg
mov
push
movs
(bad)
add
adc
or
and
jle
mov
outs
and
mov
sub
push
push
push
loopne
inc
lods
dec
xor
(bad)
aad
fisttp
(bad)
cld
mov
bound
dec
adc
push
jmp
push
fidiv
xor
mov
sbb
fbld
add
fistp
jmp
sti
adc
sub
inc
push
je
cmps
ja
jno
movs
dec
cmp
push
and
xor
cld
cmp
mov
mov
inc
sub
test
push
mov
ret
cmps
add
fwait
call
lea
ror
in
lea
push
sub
push
mov
mov
push
jl
mov
mov
jo
rcl
shr
jmp
dec
sbb
push
pop
push
loopne
push
rol
dec
add
push
or
les
ja
inc
or
mov
out
inc
mov
mov
push
mov
sbb
into
push
add
dec
adc
je
adc
jle
enter
test
xor
je
stos
mov
add
arpl
data16
aaa
mov
test
jne
(bad)
dec
and
sbb
popf
mov
adc
add
xor
push
add
push
or
and
and
mov
push
mov
push
mov
loopne
adc
sub
and
push
push
jnp
xlat
inc
loop
sub
push
cmp
cmc
fidivr
pop
cmp
rcpps
std
call
push
push
push
call
mov
xor
cmp
mov
sbb
sbb
test
dec
cmp
fnsave
dec
mov
fisttp
test
rcr
test
mov
mov
loopne
add
test
rol
jge
pop
pop
and
push
cmp
and
push
daa
mov
cmp
push
push
ret
call
lock
sub
inc
ret
jg
movs
dec
and
push
mov
fistp
inc
int3
aad
mov
adc
mov
xor
sbb
push
inc
std
(bad)
fidivr
out
inc
push
stos
jo
sahf
pop
and
jae
push
pop
test
jb
and
pop
mov
shl
es
stc
inc
iret
push
lock
cld
out
dec
and
inc
adc
adc
retf
fisttp
ret
into
adc
int3
xor
jne
mov
jmp
mov
pop
scas
jg
popa
dec
repnz
je
push
call
add
and
fnsave
xchg
sub
and
adc
sub
call
mov
or
xor
fs
mov
imul
test
popf
jecxz
or
sub
idiv
push
mov
adc
push
or
(bad)
adc
sub
(bad)
jl
and
je
add
adc
fsub
mov
push
push
inc
mov
mov
lea
or
push
and
sub
ss
les
sub
and
or
dec
push
sbb
xor
dec
cwde
rcr
cdq
(bad)
jg
and
cmp
je
mov
stc
add
aaa
jne
sti
add
or
repz
adc
mov
ins
adc
xchg
mov
imul
push
je
adc
xor
test
mov
sar
mov
loopne
shl
inc
jmp
mov
sbb
cmp
add
mov
mov
clc
add
into
cmp
pop
(bad)
jl
aam
push
dec
pop
cmp
inc
cmp
sbb
pop
sub
lea
outs
sbb
cmp
jge
ret
mov
adc
jnp
test
push
mov
lods
adc
shl
test
ins
fisttp
stos
es
pop
(bad)
mov
push
push
jmp
xor
inc
adc
(bad)
or
mov
inc
enter
inc
out
inc
cmc
lea
fidivr
jle
(bad)
jmp
dec
enter
ins
mov
(bad)
push
jle
sbb
add
aaa
fcom
jle
add
xchg
add
jl
mov
jmp
mov
and
add
or
or
ja
mov
dec
js
lea
xchg
jmp
push
dec
dec
mov
std
je
push
or
pop
std
(bad)
cmp
in
pop
mov
sub
jecxz
pop
rcr
ficom
adc
push
push
push
dec
cmp
jge
jmp
gs
and
enter
sbb
push
xchg
mov
aaa
adc
jle
and
pop
add
adc
mov
loopne
mov
dec
neg
sbb
and
mov
mov
add
cmp
jl
dec
inc
and
mov
aad
and
out
in
mov
mov
push
push
cmp
scas
sbb
jl
clc
(bad)
fnstenv
inc
sub
inc
pop
add
mov
into
lods
and
push
into
inc
ja
cs
jne
adc
mov
push
hlt
inc
mov
sub
test
add
popa
scas
add
dec
and
sahf
add
dec
out
mov
int3
int3
dec
mov
pop
push
cmp
and
iret
inc
push
inc
aam
inc
aam
jmp
push
mov
out
add
(bad)
and
jl
sbb
mov
enter
push
or
xchg
xor
mov
icebp
jecxz
mov
xor
push
rol
jno
mov
mov
jbe
cmp
xlat
push
add
dec
mov
xor
scas
sub
add
mov
mov
and
or
xchg
cli
stos
mov
or
jnp
mov
cmp
fsub
sub
test
jmp
lea
ficom
add
jecxz
and
mov
xchg
xor
ja
outs
push
cmp
je
push
inc
pop
pop
inc
mov
nop
into
pop
adc
mov
aam
and
and
add
out
(bad)
call
nop
push
mov
push
push
push
test
mov
jne
mov
mov
sar
or
mov
push
pop
add
std
pop
and
add
mov
cmp
jg
in
jne
mov
fmul
dec
add
add
mov
loop
cmp
adc
imul
pop
mov
add
fwait
adc
or
adc
outs
add
push
call
mov
mov
xor
shr
sub
loop
cmp
repz
into
add
adc
je
mov
out
pop
ins
sbb
test
je
xchg
pop
retf
jmp
in
xor
sbb
inc
aad
jmp
jl
mov
or
outs
test
add
add
mov
cmp
push
add
(bad)
pop
and
jg
push
push
xor
lea
scas
or
adc
shr
add
test
je
test
popf
loopne
add
mov
lds
mov
add
add
sbb
inc
and
push
pushf
sub
std
dec
gs
push
push
push
sbb
xor
ja
adc
or
mov
test
je
add
loope
je
mov
inc
jne
aam
jne
mov
ret
dec
or
xor
test
je
xchg
mov
(bad)
mov
sub
es
test
add
(bad)
in
inc
test
push
mov
je
mov
movs
sbb
inc
in
and
fld
push
lea
add
sub
out
das
dec
add
or
sar
lods
pop
pop
fdivr
int3
cmp
pusha
sbb
pop
mov
ror
stos
and
or
cli
fwait
ins
fist
stc
mov
addr16
iret
je
ror
push
call
jne
and
mov
lea
dec
fdiv
add
or
and
jne
sub
(bad)
nop
mov
cmp
jmp
mov
mov
inc
push
outs
cmp
mov
out
add
jne
xor
mov
inc
mov
popa
call
pusha
cmps
clc
fist
adc
jne
cmp
fdiv
test
lds
sbb
jg
add
cmp
je
mov
cmc
cld
ret
fisub
cld
je
adc
lea
test
enter
add
sti
push
leave
cld
jne
enter
je
mov
rol
add
xor
sbb
adc
(bad)
out
xchg
or
je
call
mov
mov
call
and
push
and
(bad)
in
adc
pop
mov
mov
dec
icebp
sub
or
dec
mov
push
(bad)
js
(bad)
push
mov
cs
pop
xchg
out
cld
bnd
std
test
mov
push
mov
addr16
cmp
inc
dec
jmp
adc
test
enter
jno
call
and
push
and
inc
fmul
push
gs
je
add
call
add
jmp
cmp
jl
cmp
mov
mov
ja
ja
adc
xor
cmp
sete
push
inc
cmp
push
sbb
add
rcr
or
je
push
and
push
imul
pop
dec
xlat
bound
and
outs
sbb
xchg
add
or
jne
outs
pop
xlat
inc
stos
or
xor
pop
js
xor
inc
xor
hlt
ja
adc
push
sub
or
sar
call
xchg
or
inc
push
lock
scas
push
and
add
rcl
push
and
loope
jno
adc
test
adc
icebp
ja
xchg
fmul
test
pop
sbb
inc
adc
je
sti
sub
cmp
xlat
cmp
dec
dec
inc
fwait
or
lock
pop
es
sbb
jbe
call
sub
xlat
rol
jne
mov
or
sbb
js
adc
jo
mov
and
mov
jmp
fdivr
sbb
js
je
and
mov
add
les
xchg
push
xchg
push
xor
adc
add
sbb
into
jge
and
adc
je
xor
cwde
shl
repz
add
cmp
sbb
lock
ja
je
push
scas
gs
or
mov
jne
add
out
aaa
repnz
inc
push
push
inc
inc
fwait
sbb
hlt
push
push
rcl
aad
cld
dec
and
stos
repnz
mov
cmp
or
icebp
mov
dec
push
or
data16
xchg
(bad)
mov
sbb
je
test
ret
je
xchg
jae
fs
pop
and
jo
push
mov
mov
(bad)
stos
cmp
mov
pop
xor
lahf
and
or
mov
pusha
fcmovb
lea
pop
dec
pop
or
dec
and
and
jo
fld
inc
pop
cmp
je
loopne
cli
dec
in
lods
add
pusha
xor
add
xor
pop
ins
test
add
or
outs
jo
mov
adc
lea
fldenv
pop
add
mov
sbb
sbb
outs
sub
jle
adc
jge
jg
enter
add
mov
loopne
jle
mov
test
push
or
(bad)
sbb
inc
mov
in
out
xchg
xchg
inc
cmc
jbe
test
mov
(bad)
push
jne
mov
inc
aad
mov
cmp
jne
lea
out
add
and
data16
mov
sbb
or
xchg
push
dec
add
or
mov
dec
loope
mov
add
mov
push
aad
sbb
dec
inc
cmps
fadd
sub
jg
cmc
call
add
pop
gs
cmp
ins
jae
dec
jne
add
sub
xchg
push
add
dec
push
mov
push
or
add
sti
adc
mov
mov
(bad)
movs
je
sar
push
mov
push
adc
add
cmp
inc
shl
fisub
fmul
adc
in
xchg
dec
adc
ss
xchg
call
and
ds
ins
ret
sbb
jne
(bad)
je
xor
add
cdq
cmp
dec
movs
adc
push
icebp
daa
add
fstp
test
jne
mov
cmp
push
clc
mov
inc
outs
pop
push
push
lea
jno
retf
lea
jo
push
mov
push
jmp
xor
test
jl
mov
loope
shr
cmp
jge
mov
jmp
mov
shl
adc
cmp
adc
cmp
mov
jmp
or
xchg
cmp
add
std
sbb
xor
add
cmp
gs
loop
pop
cmp
jne
retf
sub
xor
sahf
jne
hlt
pop
or
push
push
push
dec
adc
pop
push
add
add
and
adc
icebp
ins
cmp
sbb
adc
bound
call
imul
xor
push
dec
push
ret
push
or
cmp
fmul
outs
dec
mov
mov
adc
dec
and
pop
rcr
adc
xor
push
pop
add
in
fs
add
or
push
cld
das
xor
xlat
or
lods
add
xchg
add
push
cmps
push
mov
fs
out
test
xor
push
shl
push
mov
mov
xor
test
mov
mov
jne
push
push
mov
xchg
pop
loopne
lock
adc
or
test
adc
aaa
dec
push
lea
and
dec
icebp
arpl
inc
test
xor
div
sub
dec
or
add
or
and
lea
push
xor
push
sar
adc
loopne
push
jle
and
loop
ins
and
mov
loope
sub
fidiv
and
mov
add
inc
add
int3
lock
hlt
jmp
jae
adc
cld
push
adc
fild
retf
dec
hlt
fdivr
scas
leave
add
jg
push
not
and
test
xor
fst
add
jl
push
cmp
cmps
pop
jne
mov
call
sar
cmps
loopne
mov
je
mov
and
add
sbb
jo
jge
mov
lea
cmp
into
outs
lea
dec
xor
pop
jmp
mov
inc
inc
sub
jne
pusha
or
cmp
loopne
rcl
add
or
cld
push
xchg
and
mov
or
push
aas
add
std
dec
add
mov
cmp
jne
and
jne
dec
jbe
adc
jecxz
fdivr
xchg
mov
jmp
adc
dec
jmp
push
call
(bad)
push
xor
int
loop
xor
cmp
mov
popf
adc
cmp
lds
pop
imul
jmp
fisttp
push
and
add
jmp
inc
or
imul
cwde
cmp
push
mov
xor
pop
jne
sub
out
mov
xchg
add
shl
pop
xor
stc
adc
dec
lea
push
lea
test
adc
jle
mov
add
ret
jg
dec
scas
(bad)
dec
jne
imul
sub
add
mov
je
push
std
inc
ins
jo
sub
iret
mov
mov
push
rep
stos
retf
das
movs
mov
xchg
loope
pop
jo
sbb
ins
pop
sti
inc
xlat
or
push
push
pop
fcomp
mov
adc
add
xchg
mov
adc
push
sub
stos
cwde
stos
dec
cmp
pop
and
aaa
mov
mov
test
je
mov
cmp
je
mov
inc
test
jne
jae
adc
dec
cld
mov
inc
mov
ret
xor
iret
dec
mov
inc
push
push
cmp
push
mov
je
xchg
sub
std
cmp
je
push
stos
call
add
cld
call
pop
push
cmp
dec
test
je
aas
std
dec
call
dec
ins
lea
out
push
push
jp
inc
dec
ins
mov
lea
push
push
add
inc
je
and
cmp
jne
ja
dec
in
dec
xchg
js
fsub
mov
sub
push
push
push
lea
sahf
loope
add
xlat
mov
clc
mov
and
lock
push
int3
test
xor
cmp
icebp
adc
fwait
dec
xchg
jnp
dec
lock
add
mov
mov
dec
push
out
add
shl
arpl
dec
popa
jmp
call
or
jbe
sub
jne
mov
xchg
in
cmp
add
hlt
mov
inc
ficom
adc
jns
adc
je
add
dec
mov
sub
cld
mov
cld
add
idiv
jle
int
mov
mov
stos
jle
xchg
rcr
adc
inc
out
repz
sub
cmp
or
dec
in
add
jmp
sub
(bad)
cmp
sub
dec
loopne
cmp
xor
xor
ins
call
adc
xlat
mov
cld
xor
loop
out
push
xor
adc
jl
arpl
sub
mov
sbb
xor
jbe
push
nop
aam
shl
call
mov
jb
mov
xor
dec
nop
or
add
inc
push
or
mov
push
jmp
aas
js
and
loopne
cs
mov
in
pushf
and
pop
inc
pop
sbb
clc
stc
aaa
loope
movs
lea
jge
ror
or
mov
pushf
jmp
sar
sbb
xor
jmp
loop
lea
push
push
hlt
mov
dec
mul
pushf
inc
xor
mov
retf
add
jmp
lea
shl
add
dec
add
push
(bad)
pusha
stos
cwde
sbb
add
adc
aas
in
mov
pop
mov
or
sub
xor
pop
mov
fist
mov
cld
jne
(bad)
std
xchg
xor
call
(bad)
dec
mov
mov
or
jg
add
push
push
push
inc
add
cmp
cmps
in
call
daa
or
dec
dec
sbb
add
mov
(bad)
pop
push
mov
cmp
jbe
sbb
(bad)
call
xor
out
jg
cs
push
inc
clc
mov
jle
mov
(bad)
dec
mov
je
pusha
dec
popa
mov
dec
or
inc
clc
inc
cmp
sub
mov
fs
shr
test
jle
or
add
test
out
faddp
adc
add
push
call
bound
cmp
rol
into
out
cld
mov
add
mov
xchg
add
arpl
jmp
mov
or
jno
inc
push
aas
div
adc
xchg
call
push
jmp
xor
je
clc
push
push
(bad)
ret
stos
add
scas
pop
aad
mov
(bad)
sbb
xor
cmp
mov
xchg
and
or
lock
cmp
push
dec
into
push
mov
je
push
in
outs
mov
jnp
aas
inc
or
push
pop
mov
out
ss
pop
mov
jbe
or
(bad)
push
add
or
cmp
je
mov
push
call
push
cmp
jl
adc
push
push
lea
call
add
jb
cmp
mov
dec
push
mov
inc
adc
cmp
jle
fcmovbe
add
mov
cmp
je
(bad)
mov
cld
pusha
add
dec
dec
jne
lea
fs
or
or
adc
add
mov
sbb
(bad)
cdq
and
push
cmc
sbb
mov
inc
dec
js
dec
lods
cli
ficomp
ficom
stos
push
sbb
push
mov
pop
mov
call
xor
sbb
dec
mov
cmp
jne
push
cmp
jnp
or
pop
imul
jo
adc
pop
arpl
xchg
je
or
stos
loop
adc
jmp
mov
adc
jne
and
or
jne
or
fisttp
add
push
push
push
push
or
push
adc
enter
dec
xchg
cmp
or
outs
rcr
test
mov
test
sbb
daa
sub
mov
call
ret
xor
or
bound
add
pusha
rol
cdq
mov
cld
out
sahf
cmp
mov
push
xor
dec
cmp
ja
adc
leave
mov
jmp
fidiv
daa
or
(bad)
mov
clc
fimul
add
nop
mov
push
xor
dec
sbb
scas
mov
adc
out
sbb
add
inc
test
je
out
xchg
test
aaa
mov
inc
push
das
and
ds
push
mov
repnz
dec
sbb
add
cmp
push
mov
pop
and
dec
call
mov
iret
dec
call
fs
add
mov
and
add
push
add
add
push
add
push
push
mov
xor
cmps
dec
lea
push
push
push
lea
cmp
ret
sbb
sbb
sub
ins
or
repz
fdiv
sub
inc
adc
adc
popf
push
call
push
push
push
push
push
or
sub
add
push
push
dec
add
div
mov
(bad)
pusha
call
inc
push
mov
ja
imul
xchg
xchg
mov
int3
xchg
jmp
mov
rcl
adc
push
prefetchnta
mul
push
push
push
enter
(bad)
fistp
pop
mov
lea
mov
lea
mov
lea
jne
inc
rol
sbb
inc
pushf
mov
arpl
lods
repz
xor
cmp
jge
xor
enter
shl
add
mov
sbb
test
int3
pop
or
sbb
and
jne
sti
sbb
iret
mov
mov
sbb
(bad)
ret
mov
es
mov
add
pop
das
sti
add
add
loopne
xor
(bad)
daa
add
aam
sbb
push
cmp
jne
daa
or
imul
xchg
add
pop
pop
mov
adc
or
xchg
pop
or
pushf
data16
push
fwait
daa
push
inc
nop
add
mov
mov
mov
mov
xor
leave
in
push
aad
loope
rcr
nop
mov
lock
repz
adc
push
data16
fld
rcl
mov
push
dec
xchg
aas
dec
push
xchg
cmp
jb
loopne
and
aaa
in
mov
push
push
std
(bad)
pop
push
xor
je
cmp
xor
and
mov
fiadd
fimul
adc
pop
scas
fwait
mov
cmps
jmp
pop
add
pop
adc
adc
adc
dec
inc
xchg
pop
ins
xor
mov
fsub
mov
push
cli
sbb
leave
add
jmp
push
inc
sub
rcr
mov
sbb
or
call
enter
add
jmp
sub
push
push
xor
xlat
pop
pop
fbstp
daa
cmp
loope
sub
add
movs
imul
add
jl
cmp
push
push
in
adc
out
rol
adc
and
sgdtd
push
sub
enter
lea
lea
call
xor
std
add
shl
jae
nop
jmp
scas
hlt
retf
or
repz
pop
sbb
push
pop
mov
cs
xor
push
pop
jnp
pop
jmp
call
mov
outs
or
ror
or
inc
or
jge
add
xchg
xor
push
inc
outs
and
mov
icebp
xchg
pop
fimul
enter
ret
sub
adc
pop
and
std
xchg
ror
aaa
sbb
mov
aas
pop
push
mov
sub
ret
jne
xor
add
mov
dec
xor
retf
jne
les
pop
mov
loope
cli
xchg
inc
div
(bad)
jmp
jle
repz
cmp
jb
add
test
icebp
mov
cli
and
add
xchg
mov
loop
inc
stos
int
inc
mov
(bad)
jns
adc
test
fwait
mov
je
adc
inc
add
loopne
mov
sub
test
add
movs
jmp
sub
push
and
test
add
hlt
sti
push
ja
sbb
(bad)
fldz
mov
cdq
idiv
test
jge
add
and
pop
loope
add
clc
(bad)
jl
ficomp
rol
sar
pop
xchg
cld
xchg
std
ror
mov
js
cmp
inc
cdq
pushf
ror
and
xchg
sub
enter
hlt
and
jg
mov
mov
dec
test
jle
cmp
jl
mov
(bad)
sub
lea
loope
mov
mov
inc
mov
pop
test
je
cld
add
out
push
mov
inc
je
push
xor
fdivrp
aam
push
mov
and
dec
and
test
mov
ja
fisttp
rol
rcl
inc
test
mov
or
push
add
jnp
xor
pop
test
nop
xor
jbe
mov
push
ja
loopne
rcr
cmp
jge
hlt
dec
mov
jnp
js
jmp
pop
mov
mov
call
aas
shl
push
adc
push
dec
cmp
adc
push
iret
pop
rol
scas
inc
sub
(bad)
and
jns
and
(bad)
jg
test
ret
ret
push
add
inc
add
pop
das
mov
push
mov
add
add
std
jg
test
pop
pop
add
add
push
ins
inc
add
xor
rol
pop
outs
test
and
xchg
and
xor
dec
push
movsx
push
cmp
push
ja
jg
(bad)
jo
and
pop
jno
call
je
pop
mov
mov
or
xor
sub
nop
daa
ins
sete
mov
cmc
nop
sbb
fiadd
jbe
cld
adc
sti
dec
and
jg
test
dec
adc
push
mov
push
cmp
sbb
jle
add
jo
dec
add
cld
sbb
push
je
add
push
arpl
(bad)
hlt
stos
sbb
test
and
cmps
fiadd
mov
out
sbb
xchg
or
jnp
rcl
repnz
jb
fild
push
xchg
ror
aas
in
jo
cmp
inc
push
inc
js
cmp
sbb
jmp
sub
loopne
ins
inc
clc
or
rol
or
cmp
push
push
retf
mov
cmp
mov
push
mov
mov
mov
aam
stc
cmc
setge
mov
stos
sbb
out
mov
adc
leave
test
cmovl
mov
(bad)
sbb
xor
test
setne
mov
mov
sbb
dec
cld
(bad)
(bad)
mov
sbb
push
retf
sbb
pop
mov
jg
and
mov
pop
pop
repz
neg
dec
test
rol
cwde
and
pop
xor
fwait
mov
push
popf
ror
and
xor
push
add
mov
sub
(bad)
and
mov
je
inc
pop
xor
icebp
mov
add
mov
out
add
add
or
or
pop
xor
out
add
lsl
pop
aam
or
cmp
daa
add
fistp
xor
adc
add
xor
or
adc
stos
mov
push
push
mov
xchg
retf
inc
xchg
ret
call
das
retf
lea
imul
push
inc
fadd
mov
pop
or
add
test
push
je
cmp
jmp
loopne
add
jne
adc
adc
lods
ds
sub
mov
pop
js
cmp
pusha
adc
je
cmp
jne
mov
jmp
push
push
inc
add
add
adc
test
je
add
add
jne
loopne
stos
and
lea
adc
xor
jmp
and
xor
mov
nop
imul
(bad)
or
(bad)
mov
leave
jle
imul
add
inc
cmp
jl
or
cmp
or
in
mov
mov
enter
pop
mov
adc
out
nop
in
mov
sbb
push
push
rol
add
and
rol
xor
(bad)
cmp
lea
mov
mov
sbb
sub
mov
aas
or
pop
jl
dec
jl
add
rol
gs
out
add
pop
xor
lods
push
pop
adc
divps
inc
ret
test
jge
inc
adc
dec
pop
inc
ja
and
jecxz
inc
inc
sbb
add
dec
test
mov
mov
and
or
push
push
push
test
push
out
add
push
test
pop
xchg
rcr
scas
sub
pop
hlt
pop
cmp
mov
push
push
mov
call
adc
shl
push
mov
push
and
jl
push
or
add
sbb
xor
es
add
pusha
inc
dec
mov
xor
mov
jo
inc
push
adc
push
lea
or
and
mov
jle
cwde
test
lds
ret
call
inc
pop
test
and
add
lods
mov
push
mov
adc
test
and
test
js
add
es
xchg
or
inc
adc
mov
add
mov
pop
mov
out
xor
stos
sub
scas
push
sbb
adc
js
and
sub
push
push
jge
mov
scas
int
arpl
(bad)
arpl
push
xor
mov
test
jnp
jmp
adc
(bad)
out
je
add
or
mov
fadd
cmp
out
cmp
adc
pusha
cmps
ins
mov
jmp
add
and
adc
xor
dec
pushf
neg
xor
dec
mov
add
test
call
and
adc
or
cmp
stos
sub
int
mov
fwait
(bad)
cmps
or
ins
and
inc
sub
sub
ror
dec
fiadd
adc
adc
inc
xchg
(bad)
arpl
sub
mov
and
add
or
(bad)
loope
adc
out
add
push
fmul
add
mov
jmp
pop
loope
add
std
lea
mov
sti
jmp
mov
bound
ss
cmp
aam
cmp
jne
sbb
sbb
or
adc
mov
inc
and
push
out
or
mov
mov
inc
pop
sbb
mov
and
push
aas
idiv
ja
sub
pop
and
mov
mov
sub
sub
cmp
lock
test
lea
out
and
jmp
mov
lea
loope
add
cli
sub
push
sub
push
je
mov
or
jae
call
sti
fstp
test
jge
xor
jmp
mov
push
jmp
or
rol
sbb
jne
jp
adc
stos
push
mov
sub
add
push
cmp
jne
fistp
std
push
push
push
add
xor
gs
lea
push
sub
push
pop
adc
add
popf
mov
je
sbb
mov
lea
add
push
pop
xchg
stos
stc
mov
and
test
push
and
push
cmp
(bad)
mov
push
adc
xchg
fimul
add
sbb
sbb
cmp
jne
leave
add
xor
adc
dec
xor
loope
aas
sub
ret
mov
inc
pop
add
test
sbb
dec
and
or
mov
mov
out
ja
add
push
fwait
mov
xor
popa
adc
mov
sbb
jo
dec
adc
lds
sub
sub
sub
sub
sub
in
and
(bad)
ja
hlt
or
cmp
cmp
adc
mov
pushf
add
push
lea
mov
add
popa
daa
jl
pop
mov
push
push
xlat
mov
mov
fadd
dec
ret
inc
ja
or
lahf
add
adc
pop
cs
movs
(bad)
call
xor
xor
test
jle
mov
test
je
cmp
aaa
or
push
push
add
rol
shl
ret
push
aam
rcl
dec
and
xor
test
jne
shl
adc
mov
adc
cmp
lds
in
fisttp
jg
das
sbb
mov
jne
loope
aaa
add
jno
pushf
mov
add
and
fsub
cmp
jecxz
cli
xor
test
ret
cmp
push
aas
sub
add
leave
add
xor
or
pusha
cmp
std
aas
push
mov
xchg
jmp
xchg
ret
(bad)
dec
lds
loopne
lds
cmp
rol
mov
cmp
jb
jb
hlt
mov
retf
pushf
add
loopne
call
sbb
and
mov
mov
cld
sub
ror
and
cli
push
int3
sar
mov
xlat
aaa
das
add
shr
ja
adc
inc
adc
pop
aaa
adc
es
in
push
mov
or
cmp
sub
push
aas
dec
sbb
mov
jl
sbb
es
pop
clc
jne
sub
adc
je
inc
push
ja
adc
loopne
adc
push
test
jne
jg
ret
adc
(bad)
inc
rcr
jmp
adc
inc
xchg
dec
and
pop
icebp
pop
aaa
sub
mov
stc
sbb
xchg
sbb
xchg
nop
sbb
jo
ins
xlat
inc
mov
stos
sub
jns
les
out
sub
sbb
int
push
(bad)
mov
and
dec
dec
mov
xor
mul
jae
inc
(bad)
and
push
idiv
(bad)
jne
mov
dec
add
cmp
sub
add
push
or
mov
mov
rcl
je
push
inc
mov
sbb
xor
neg
xor
mov
jae
inc
gs
and
push
inc
add
push
call
mov
(bad)
clc
ret
push
push
sahf
pop
cmp
popf
aaa
icebp
jg
sub
jl
dec
rep
jmp
add
push
push
cmps
sub
and
lods
bound
xchg
pop
gs
popa
push
rol
mov
and
pushf
pusha
fstp
sbb
inc
push
mov
adc
mov
sbb
xchg
inc
dec
pushf
and
bound
pushf
ror
cdq
add
pop
and
push
test
loop
loop
pushf
dec
cmp
cld
mov
popa
test
xor
nop
sbb
pusha
jle
popa
push
push
sbb
xchg
adc
cld
lds
fisttp
jae
cmp
and
adc
jecxz
call
mov
jmp
and
jne
push
sbb
cmp
pop
arpl
ja
and
add
in
and
js
loopne
movs
ds
loop
les
ds
cmc
js
mov
and
mov
ret
push
push
cwde
add
sub
inc
sbb
dec
and
add
or
mov
or
jge
cld
enter
mov
sti
pop
and
lahf
sbb
mov
push
jne
add
mov
dec
xor
inc
add
js
add
cmps
sti
(bad)
out
pop
xor
add
inc
add
jl
add
inc
add
imul
pop
shl
dec
dec
mov
add
or
inc
add
ss
xor
xor
push
add
jmp
cmp
adc
xor
pop
sub
mov
and
div
add
movsx
pop
sub
inc
cmp
ins
adc
push
loopne
dec
sub
cmp
(bad)
xchg
mov
mov
std
test
je
push
(bad)
call
push
sub
mov
jmp
push
(bad)
sub
jo
and
aas
xor
daa
sub
les
or
xchg
jle
xor
cmp
xor
mov
add
mov
inc
outs
out
rcr
and
mov
nop
inc
(bad)
xchg
iret
lea
or
pop
lea
mov
rcl
outs
cmp
div
(bad)
mov
sub
xor
sub
cld
adc
idiv
lea
mov
mov
mov
sub
popa
mov
mov
mov
mov
call
mov
mov
pop
(bad)
int3
inc
or
add
dec
test
lahf
fdiv
adc
and
push
outs
add
int
outs
ins
mov
test
jne
rcr
push
outs
push
mov
mov
daa
inc
or
push
mov
jae
lea
push
mov
adc
or
add
es
lea
dec
or
dec
and
retf
mov
mov
std
xor
lea
(bad)
pop
shl
mov
adc
xchg
cmp
aas
in
dec
jo
cmp
in
pop
adc
jb
mov
lea
mov
add
into
prefetchnta
jb
lea
inc
ror
jb
lea
and
jnp
in
xor
adc
xor
xor
or
inc
(bad)
add
pushf
sub
or
mov
jge
into
mov
rcl
inc
fild
jae
mov
fcomp
out
or
lock
mov
fidiv
cwde
or
add
mov
aas
pop
add
inc
cdq
inc
push
sub
loopne
jbe
push
in
xchg
add
cmp
bound
mov
xor
ret
adc
dec
shr
nop
dec
(bad)
push
and
inc
in
mov
xor
nop
and
and
and
and
and
adc
test
scas
(bad)
outs
push
mov
cli
inc
xor
and
xchg
rol
ret
push
push
add
cmp
or
dec
adc
bound
jmp
std
push
cdq
add
lea
xchg
add
pop
adc
xlat
test
out
jg
add
inc
add
inc
add
or
add
rcr
loope
mov
jecxz
push
(bad)
psubsw
mov
push
pop
sub
sbb
inc
jb
or
pop
lods
fs
lea
test
add
sbb
mov
push
mov
and
je
movs
mov
adc
lock
pop
mov
mov
std
add
mov
std
lods
xor
xchg
rcl
pop
pop
pop
ret
add
call
push
les
jne
mov
leave
test
sete
(bad)
iret
push
lock
ror
add
in
addr16
sbb
int
ret
shr
fistp
and
pushf
push
push
adc
mov
sbb
arpl
test
adc
jno
ja
inc
xor
lea
push
push
test
push
cmp
shl
adc
push
cmp
and
cmps
xor
dec
ins
jmp
mov
mov
mov
push
push
push
loopne
(bad)
out
or
inc
sbb
ins
mov
ss
adc
movs
mov
mov
inc
inc
inc
aas
cwde
or
sti
add
loope
jle
sti
fst
mov
ret
or
mov
dec
or
add
jmp
ins
adc
adc
push
push
push
ins
js
pop
adc
nop
push
hlt
push
push
add
neg
jne
daa
add
or
addr16
cmp
push
xchg
adc
in
sub
and
les
mov
mov
loope
cmp
mov
push
lds
ins
and
je
mov
mov
cmp
mov
inc
jne
cmp
jne
cmp
leave
add
rol
jg
imul
jne
or
sahf
and
int
or
inc
add
(bad)
ficomp
or
inc
dec
add
ja
jmp
and
or
add
xchg
sub
jo
test
add
cmp
or
add
jl
dec
aam
cmp
mov
jns
call
push
je
dec
je
dec
dec
cmp
add
add
je
iret
jle
es
add
xchg
(bad)
(bad)
jmp
mov
push
call
sub
push
cdq
sub
mov
sar
call
sbb
pop
mov
ret
sar
adc
out
test
lea
mov
fidivr
int3
jne
adc
shl
mov
loop
aas
inc
and
pop
les
inc
adc
cmp
fisttp
push
dec
add
test
jne
mov
mov
or
add
call
stc
add
test
dec
push
xchg
mov
jo
ret
sub
push
sub
ss
push
push
push
push
mov
jle
jle
mov
inc
push
pop
aad
inc
test
cmp
stc
cmps
dec
xchg
in
inc
into
pop
jg
adc
sbb
sbb
ret
out
adc
retf
lea
(bad)
fild
sub
cmp
je
or
push
ja
mov
loopne
gs
add
or
(bad)
sahf
sbb
xchg
or
call
pop
sbb
mov
call
and
jle
jne
mov
add
or
imul
push
push
call
jbe
and
dec
adc
mov
pushf
sbb
add
and
add
ret
lea
imul
or
test
xchg
mov
in
fwait
(bad)
jg
aad
mov
or
fstp
repz
cmp
jne
mov
push
push
push
push
call
mov
pop
push
retf
push
call
retf
mov
inc
aam
jle
mov
mov
adc
sbb
sbb
test
or
dec
aam
sub
xor
mov
dec
cdq
xchg
lock
test
pop
mov
push
std
icebp
nop
push
fadd
xor
push
xor
mov
leave
push
adc
jmp
lahf
call
ins
jne
call
out
hlt
jne
or
cmp
adc
inc
push
fs
out
add
aaa
dec
adc
arpl
in
adc
(bad)
scas
scas
inc
sbb
cmc
jne
pop
xor
pop
jmp
add
cli
dec
clc
pop
push
ja
dec
aaa
in
xchg
inc
sahf
sub
dec
pop
les
(bad)
xor
seto
jg
pop
pop
fwait
sub
dec
push
and
add
loopne
test
or
jle
jnp
lahf
mov
jmp
fsub
fimul
daa
gs
xchg
dec
loope
add
cs
sbb
add
cmp
fwait
sbb
jmp
or
inc
push
push
push
ja
je
fs
fisubr
add
call
mov
push
pop
dec
dec
sbb
frstor
sbb
dec
dec
sar
mov
sub
mov
outs
cmp
je
mov
or
inc
add
enter
add
pop
int
add
pusha
mov
push
and
dec
cs
push
ret
cmps
adc
stos
xor
add
mov
cmp
xor
jmp
inc
stos
sub
cwde
sbb
rol
push
aaa
cmp
clc
jmp
mov
sub
adc
xchg
fs
and
into
loope
sub
and
aaa
dec
cmp
sub
add
inc
jo
call
jbe
test
inc
fs
or
or
retf
xor
dec
or
add
add
cdq
mov
aad
or
and
fwait
in
aas
add
sbb
inc
sub
call
cmps
sbb
(bad)
sti
loopne
sbb
adc
sub
outs
aad
dec
cmp
test
push
clc
cmp
jne
cmp
in
clc
and
je
push
sti
fs
mov
xchg
push
pop
or
mov
daa
add
lods
mov
cmp
push
push
add
mov
fld
xchg
push
push
jne
jae
imul
pop
movs
xor
rcr
dec
jo
add
arpl
sub
pop
add
adc
mov
popa
call
xor
mov
push
rcr
(bad)
sbb
xor
mov
mov
pop
add
adc
push
and
xchg
xor
cmp
xor
pop
mov
jl
dec
pop
add
mov
push
xchg
mov
jne
dec
sbb
sahf
into
sahf
adc
and
xchg
bound
loope
mov
or
inc
mov
ret
push
mov
push
mov
push
fiadd
call
cmp
adc
sti
inc
out
push
adc
dec
push
cld
xor
push
fist
sbb
and
lds
sub
mov
xor
js
pusha
and
push
out
push
push
add
retf
sbb
shl
fdiv
and
mov
mov
and
(bad)
mov
mov
rcl
xor
pop
wbinvd
cmps
jae
adc
ins
test
and
outs
ja
pop
adc
add
outs
fwait
out
cmps
movs
call
xchg
inc
add
push
push
call
cmc
or
cmp
imul
scas
jmp
push
add
outs
add
jmp
cmps
imul
dec
aas
inc
scas
push
add
or
cld
inc
and
xchg
mov
xchg
ror
out
mov
and
mov
pop
inc
mov
mov
push
inc
pop
mov
adc
jo
add
xor
in
or
mov
mov
sahf
and
and
add
add
jb
mov
lods
dec
adc
popa
xor
cmc
mov
or
push
mov
and
and
ins
fs
mov
push
jae
and
or
je
or
push
mov
mov
mul
sbb
sbb
and
cmp
mov
fs
sub
or
sub
sti
fistp
inc
push
push
adc
or
mov
les
test
inc
lods
and
lahf
or
xor
gs
and
add
retf
jae
jge
cmp
cmp
and
ins
jmp
scas
mov
(bad)
xchg
inc
add
popa
imul
cmps
stc
cmps
inc
inc
add
adc
mov
arpl
(bad)
and
mov
inc
push
aas
test
push
push
test
ficom
in
sub
sub
dec
add
push
add
lea
sbb
add
jg
mov
movs
dec
add
in
mov
adc
jne
mov
lea
mov
outs
pushf
movs
push
add
mov
or
(bad)
outs
lea
xchg
es
or
adc
add
and
mov
lea
push
push
dec
mov
sbb
mov
fwait
loope
inc
sub
or
or
ins
ror
jo
mov
jae
and
cmps
or
add
dec
rol
mov
popa
test
fisttp
enter
mov
(bad)
fs
ja
popw
or
das
xor
mov
cmp
std
mov
jl
xchg
or
or
test
mov
xor
add
(bad)
sub
dec
inc
xor
xchg
adc
or
or
lea
or
aaa
push
sub
push
fadd
or
xor
in
add
pop
fsubr
xchg
sub
enter
push
sub
das
sbb
mov
jne
je
setno
pop
mov
add
dec
cmp
stos
test
mov
mov
loopne
je
lahf
xchg
sub
jge
sbb
or
adc
clc
cs
lea
(bad)
(bad)
(bad)
into
dec
mov
dec
and
(bad)
adc
fwait
or
sub
adc
loop
push
push
mov
test
daa
push
cmp
or
xlat
xchg
ret
pop
inc
sbb
loop
aad
mov
adc
mov
push
(bad)
iret
sub
aaa
xlat
add
and
inc
or
push
xlat
add
add
fs
xor
or
cmp
jg
mul
icebp
xchg
in
add
out
aas
mov
adc
pusha
cmp
mov
xor
je
rol
or
add
fwait
push
call
lahf
outs
lock
mov
adc
pop
pop
ret
cmp
sbb
jmp
cmp
(bad)
sbb
jne
mov
leave
cmp
es
add
mov
repnz
add
add
mov
push
test
adc
mov
test
test
fs
fiadd
adc
add
mov
mov
adc
inc
adc
test
mov
adc
aaa
mov
pusha
sbb
(bad)
(bad)
icebp
clc
pop
and
mov
add
dec
(bad)
loope
xor
std
sbb
lea
sbb
push
cmp
dec
je
fadd
xchg
xchg
add
outs
mov
inc
xor
lock
dec
xor
jne
aam
bound
arpl
retf
sub
mov
mov
push
jl
aas
mov
adc
or
add
test
mov
mov
mov
dec
ret
mov
mov
cli
inc
int3
sbb
dec
add
cmp
jo
adc
les
ret
or
lahf
inc
mov
push
mov
mov
pusha
in
adc
pop
pop
mov
mov
or
fcmovnbe
dec
add
repz
test
jbe
xor
call
xchg
(bad)
(bad)
inc
push
cmps
js
mov
cmp
ror
ret
je
push
call
mov
inc
mov
dec
mov
xchg
inc
pop
adc
and
or
push
pop
mov
dec
add
(bad)
fild
js
adc
loop
add
pop
push
and
stos
(bad)
and
and
or
and
adc
inc
and
test
dec
jnp
add
pop
sub
das
sub
xchg
and
pop
xor
mov
mov
cmps
test
nop
mov
test
mov
jne
add
jne
push
mov
sub
add
cmp
cmp
call
add
push
cld
sbb
in
movs
xor
sub
fucom
neg
mov
rol
sbb
outs
mov
mov
sub
lea
xchg
mov
push
push
xchg
sti
mov
or
jb
rol
jbe
add
or
push
mov
bound
push
cmp
pop
sbb
rcl
fwait
add
or
mov
pop
cmp
add
adc
cmp
jne
shl
mov
clc
inc
mov
and
clc
add
jbe
stos
pop
outs
adc
jbe
jmp
enter
lmsw
sub
out
xchg
add
pop
add
loopne
push
mov
xor
cwde
xchg
cwde
or
cmp
mov
add
mov
je
push
xchg
and
adc
mov
clc
mov
dec
test
jne
fucom
aaa
out
or
add
sbb
adc
cmp
(bad)
cwde
sbb
fs
jmp
call
mov
daa
mov
imul
push
push
mov
mov
aas
push
push
inc
and
fsubr
inc
aas
xor
fsubr
fcos
fcom
inc
push
in
jmp
sahf
pop
jne
mov
push
mov
cmp
dec
add
pop
mov
inc
popf
or
sub
icebp
sub
clc
push
push
push
call
cwde
sub
inc
xor
shr
sub
dec
clc
pop
or
test
mov
dec
je
je
mov
push
hlt
add
mov
(bad)
dec
cmp
jle
mov
add
cmp
adc
pop
jmp
push
or
(bad)
push
dec
jg
loope
stc
jnp
mov
sbb
add
mov
loopne
or
dec
add
shl
push
add
arpl
mov
rcl
shl
push
push
popa
cmp
aaa
sub
mov
std
aaa
cmp
mov
add
cmp
and
call
add
sar
test
jne
jle
fdiv
cmp
inc
or
or
mov
pop
mov
call
xchg
add
sbb
xor
ja
push
push
push
push
pop
push
mov
cdq
std
push
add
mov
mov
or
stc
add
clc
add
jmp
push
push
xchg
ficomp
pop
xlat
push
(bad)
push
sub
mov
adc
push
and
add
and
and
movs
data16
adc
push
and
fiadd
loopne
out
(bad)
outs
cmp
pop
add
dec
xchg
lahf
(bad)
imul
lds
adc
les
xlat
cmp
jge
mov
push
push
mov
adc
or
mov
ins
and
mov
adc
sti
adc
add
lods
add
push
add
not
mov
push
ror
sbb
dec
(bad)
and
push
pop
pop
pusha
dec
add
out
icebp
(bad)
cmps
jmp
rol
sbb
mov
icebp
push
push
clc
mov
shl
or
arpl
jne
push
mov
mov
hlt
(bad)
sbb
mov
cmp
call
and
push
add
clc
lea
push
xchg
or
shl
push
sbb
pop
pop
mov
inc
add
xor
(bad)
pushf
test
jne
cmp
jne
push
call
ja
in
inc
push
test
je
mov
push
mov
call
pop
leave
cmps
pop
add
fild
adc
push
xor
ins
adc
cmp
cmp
mov
xor
inc
or
dec
or
add
push
push
(bad)
(bad)
pop
push
mov
cmp
pop
mov
cmp
je
cmps
adc
mov
enter
mov
add
xor
mov
ffree
add
add
shl
je
push
inc
mov
add
mov
dec
mov
retf
scas
test
or
ins
loopne
test
out
push
inc
inc
retf
loopne
xor
inc
adc
push
cmps
ror
dec
std
jg
sub
mov
sub
xor
cmp
shl
add
pusha
and
hlt
lahf
mov
inc
add
push
xor
push
fld
push
pop
jo
add
fcomp
mov
sub
fs
push
inc
mov
nop
add
lahf
or
addr16
jmp
cmp
addr16
jecxz
sub
sub
cs
fild
cs
push
dec
stos
stos
fwait
test
(bad)
cmp
jle
daa
mov
ja
hlt
and
ins
add
lock
pop
push
push
call
adc
push
push
jp
inc
add
and
adc
mov
inc
add
sbb
add
arpl
jmp
and
adc
pusha
adc
inc
and
cmp
adc
push
clc
jl
mov
push
add
add
add
in
loopne
add
xor
dec
jmp
push
add
mov
pop
clc
jmp
pop
or
in
jg
sub
mov
fiadd
pushf
pop
cdq
in
mov
sar
pusha
adc
fnstenv
add
add
(bad)
aas
fdiv
jno
(bad)
cmp
jg
cmp
fild
stos
add
mov
add
adc
cmp
fadd
repnz
leave
fcomp
jae
add
add
pop
sar
add
pop
push
push
sahf
dec
xchg
or
fadd
dec
cmp
add
add
and
add
xchg
add
pop
pop
inc
and
mov
add
pop
cmp
push
jmp
je
mov
push
sbb
ja
inc
add
or
js
sbb
or
and
xor
jecxz
scas
mov
sbb
mov
inc
or
cmp
sbb
jl
punpcklbw
mov
sbb
pop
jae
push
xor
mov
jo
nop/reserved
xchg
cmp
inc
shl
add
add
mov
inc
mov
fs
pushf
cmp
cmps
test
push
adc
scas
mov
xchg
fisub
mov
cli
cmp
je
push
add
adc
cs
or
xchg
in
test
jo
mov
jmp
test
and
xor
cmp
mov
jb
mov
into
add
xor
xor
dec
call
push
push
xchg
les
mov
push
push
movs
or
sbb
fadd
inc
add
pop
push
mov
dec
add
lock
inc
sub
ja
ss
mov
and
or
adc
test
inc
cmp
pop
scas
stos
mov
pop
mov
add
adc
push
push
mov
xor
or
and
pop
mov
cmc
cmps
clc
and
mov
lahf
cwde
mov
mov
cmp
sbb
mov
stos
push
xor
stc
test
inc
jl
mov
or
pop
inc
and
xor
add
out
lock
lar
sbb
fcomp
xchg
maxps
das
mov
pop
inc
aas
adc
cmp
push
aas
sub
in
jmp
pop
xor
pop
cmp
pop
add
push
mov
or
push
mov
cmp
add
mov
(bad)
dec
xor
dec
mov
scas
(bad)
fiadd
fnstcw
repz
sti
push
xor
std
dec
je
xchg
inc
add
cmp
jb
push
(bad)
mov
push
mov
pop
and
push
inc
mov
lock
mov
mov
dec
add
jae
and
inc
scas
or
push
aam
jle
push
cld
push
mov
test
test
inc
icebp
adc
je
cmp
jne
cmp
aaa
std
aas
add
cmp
jne
repz
adc
mov
add
pusha
dec
rol
into
icebp
push
gs
add
sbb
je
add
jge
pusha
fs
js
mov
push
push
push
or
call
ja
and
mov
in
cmp
jne
jb
jmp
adc
adc
adc
cmp
lods
cmp
je
mov
push
push
and
adc
daa
cmp
je
add
add
push
dec
add
test
arpl
cmp
inc
jmp
mov
add
push
push
xor
fcom
jg
inc
sbb
mov
xchg
mov
add
xchg
retf
test
mov
sub
jne
mov
push
push
jecxz
push
pop
add
outs
mov
cs
push
sbb
rcl
test
(bad)
mov
add
push
push
add
cmp
xor
push
mov
adc
mov
test
je
xor
dec
sub
movs
jmp
test
adc
dec
mov
mov
fs
push
push
test
inc
xor
movs
inc
or
leave
rcr
adc
pop
xor
add
xchg
ror
pop
push
rol
or
cmp
inc
je
test
je
push
call
adc
out
rcr
or
ins
les
test
push
add
or
inc
out
and
mov
fcom
ds
je
dec
popf
xchg
push
add
mov
pop
xor
aad
adc
fdiv
push
pop
int
pop
fbld
jmp
sbb
(bad)
mov
adc
loop
add
add
cmc
mov
and
jl
(bad)
sbb
push
test
jae
pop
sbb
ret
add
jne
add
aas
cdq
in
nop
nop
sub
call
mov
add
mov
adc
mov
push
adc
mov
out
loopne
mov
popf
or
push
or
mov
shl
mov
adc
mov
loopne
inc
push
push
push
lea
shl
mov
push
mov
rcr
and
pop
mov
not
xor
mov
jle
pop
sub
leave
cmp
jg
xchg
ror
adc
adc
iret
pop
xor
mov
cmp
(bad)
loop
cmp
jne
push
sub
mov
cmp
je
inc
add
cmp
jl
jmp
imul
outs
fwait
clc
mov
in
pop
pop
pop
je
jge
mov
push
push
call
push
lock
xchg
add
mov
call
mov
add
cs
sbb
nop
mov
pop
mov
jno
push
and
shl
jge
xchg
dec
gs
xchg
and
aam
jo
push
cmps
adc
mov
test
add
call
out
sbb
fld
sbb
adc
push
cs
sbb
mov
loopne
fst
lahf
js
sub
xchg
idiv
mov
je
sbb
mov
adc
add
je
lds
push
or
arpl
mov
and
jmp
std
call
push
sub
inc
cmp
push
fucom
ja
inc
or
je
pop
cmps
ss
call
jecxz
pusha
add
push
mov
fist
out
add
and
cdq
std
xor
push
or
sub
call
dec
adc
lds
xor
cli
scas
pop
sbb
pop
fmul
dec
mov
push
dec
je
test
inc
add
sbb
mov
bound
mov
xchg
cmp
fiadd
adc
sbb
pop
adc
push
js
jle
cld
pushf
push
movs
sub
test
pushf
adc
sub
test
mov
or
aas
aas
mov
sub
sub
dec
or
mov
adc
mov
adc
lea
lock
push
pop
add
fild
dec
dec
ror
push
xchg
mov
rol
adc
sub
scas
mov
jne
xchg
adc
test
(bad)
outs
sub
pop
adc
ret
add
adc
and
je
inc
add
xchg
add
and
lods
xor
mov
fnstcw
inc
cmp
cmp
cmc
daa
adc
pop
push
ror
xchg
iret
adc
and
cmp
mov
add
(bad)
inc
dec
js
cmp
jle
dec
sub
test
jge
js
outs
mov
add
cmp
mov
sbb
pop
cmp
xchg
dec
add
sub
outs
out
sbb
adc
and
jne
push
mov
xchg
arpl
jne
and
fwait
mov
inc
(bad)
(bad)
dec
mov
shr
or
mov
fistp
mov
inc
mov
add
loopne
mov
or
ret
jne
mov
scas
and
dec
fistp
fist
std
mov
cmp
jge
add
idiv
add
sbb
call
mov
(bad)
sbb
adc
sar
sub
test
jge
and
(bad)
adc
push
dec
rcl
mov
std
xor
mov
add
mov
clc
xor
daa
push
test
rol
push
cmp
jne
xchg
idiv
inc
cmp
jne
xor
jmp
dec
jns
jae
je
pop
inc
jo
mov
mov
and
sbb
fadd
aas
les
push
sti
add
push
pop
dec
and
jmp
push
int3
mov
repz
mov
mov
mov
adc
jne
pop
inc
out
xor
sub
and
jl
js
jp
inc
out
xor
mov
or
cs
data16
inc
xchg
add
add
pop
(bad)
xor
add
sbb
add
push
out
xchg
and
xchg
adc
add
and
repnz
sbb
loope
into
push
and
test
hlt
clc
and
mov
idiv
xor
sbb
cmp
movs
sub
and
pop
add
cs
and
xor
jnp
pushf
push
imul
push
mov
push
ror
test
mov
je
push
adc
xor
sub
mov
push
inc
sbb
xchg
and
add
mov
xor
fwait
add
and
and
jle
sar
xor
mov
cmp
jg
js
dec
cmp
dec
or
mov
xchg
sub
out
adc
xlat
xadd
mov
adc
mov
fsub
pop
scas
dec
sub
pop
lods
dec
mov
push
imul
sbb
add
mov
push
cmps
xor
rcl
and
or
add
mov
jl
js
cmp
or
or
push
xchg
jne
bound
jne
lods
jne
out
cli
cmc
dec
test
and
aas
xchg
or
sub
jae
and
(bad)
and
je
or
adc
fstp
adc
(bad)
jecxz
fstp
xchg
mov
dec
data16
push
(bad)
sbb
push
or
out
bound
stc
mov
int3
dec
add
cmp
je
cmp
push
call
lds
test
ss
fmul
test
rol
cmp
inc
cmp
ret
ins
sub
jne
mov
test
mov
call
test
cmp
daa
jmp
xor
jmp
adc
and
push
sbb
inc
shr
shr
sbb
test
dec
sbb
add
mov
push
mov
aas
add
push
popf
add
jne
js
add
stos
inc
mov
cmp
or
int3
jno
and
stc
cmp
bound
inc
pop
pop
add
ret
mov
add
adc
test
adc
cmp
mov
adc
ins
and
je
add
cli
ret
cmp
(bad)
rcl
add
cmp
neg
inc
mov
rol
xor
rcr
add
ror
cwde
outs
cdq
mov
pushf
or
inc
cmps
sahf
lahf
inc
cmc
sbb
rol
push
and
jo
jne
push
inc
pusha
add
mov
cld
push
mov
dec
push
or
jne
cmp
adc
repnz
jmp
add
stos
mov
cld
jne
dec
sbb
sub
(bad)
xor
and
or
lea
lock
adc
dec
add
cmp
je
pop
aaa
push
jmp
call
sahf
pop
inc
adc
les
pop
popa
adc
repz
nop
or
jbe
fmul
push
daa
je
push
call
push
or
lds
sbb
test
test
dec
push
mov
bound
push
in
pop
rol
mov
sub
add
pop
test
inc
loop
rcl
mov
nop
push
sub
dec
je
xchg
adc
(bad)
pop
mov
mov
cmp
xor
je
adc
into
aam
xor
test
adc
dec
fild
movs
je
cmp
sqrtps
test
in
inc
mov
jne
jmp
dec
sub
test
push
ja
mov
sbb
mov
mov
pop
je
mov
(bad)
aad
test
leave
adc
outs
adc
(bad)
enter
ret
add
adc
ss
xchg
jle
and
bound
pop
xor
add
popa
xor
xor
mov
aad
sub
in
cmc
retf
inc
sub
dec
sub
jbe
cmp
jne
in
cdq
push
fstp
lea
bound
adc
mov
push
and
and
push
mov
sbb
push
adc
aaa
and
je
mov
push
push
or
cmp
sub
test
je
push
jl
sbb
clc
clc
test
je
imul
add
push
cmp
adc
pushf
fiadd
lea
cmp
ins
loopne
cmp
dec
ret
jbe
pop
or
clc
je
cmps
cmp
hlt
and
push
or
or
mov
call
pop
adc
xor
arpl
and
or
or
fisttp
test
cmp
jecxz
js
sbb
fsubr
jne
push
push
or
and
push
mov
or
push
sbb
sbb
mov
or
dec
test
gs
add
inc
es
add
sbb
sahf
mov
outs
outs
sub
je
mov
jmp
jo
daa
mov
and
add
(bad)
pop
cmp
jge
(bad)
cli
cmp
je
je
cmp
jne
push
sahf
aas
mov
jae
sbb
ja
(bad)
adc
pop
pop
jns
popf
mov
adc
test
retf
adc
adc
add
mov
cld
mov
sub
jno
xchg
cmp
ss
xor
fwait
mov
add
mov
(bad)
retf
(bad)
sub
inc
add
test
xlat
sbb
sbb
xor
mov
cmp
jle
out
sub
sti
xor
imul
add
xor
in
jo
(bad)
retf
cmp
and
je
cmp
add
sub
cdq
pop
add
cmp
xor
jge
push
aad
mov
out
dec
and
call
test
popa
clc
mov
fbld
jo
cmp
cmp
or
(bad)
push
push
call
jbe
jge
cmp
je
cmp
ret
outs
shr
or
bound
aaa
jbe
add
stc
jo
test
cmp
adc
clc
add
test
sub
aas
cmp
push
jne
jmp
cs
adc
mov
cmp
jl
cmp
jle
cmp
jl
xchg
sti
pop
jg
add
mov
fdiv
test
sbb
outs
(bad)
mov
ins
stc
bound
adc
xchg
jne
push
push
cli
and
rol
lahf
xchg
add
push
pop
cmc
xchg
pop
and
and
shl
sbb
add
or
mov
cmp
xor
mov
push
fistp
inc
lahf
rcr
test
xchg
sub
lea
mov
je
mov
popf
int3
mov
sahf
in
popa
xor
and
mov
test
inc
jl
adc
jne
jne
je
out
rcl
fnsave
mov
clc
sub
in
test
rol
or
mov
hlt
jge
mov
sbb
jg
ret
ja
out
test
mov
fs
or
add
je
mov
cmps
sub
mov
fnstsw
push
mov
out
mov
jmp
mov
cdq
cmps
jmp
xor
add
aad
sbb
sbb
pop
scas
pusha
outs
dec
sbb
sub
mov
dec
outs
or
(bad)
ss
addr16
or
(bad)
aam
dec
loopne
xchg
adc
rdmsr
pusha
pop
pop
je
fs
sbb
add
ret
loopne
pushf
scas
sti
outs
cmp
sub
jmp
and
lock
add
add
or
push
or
xor
and
movs
jp
add
push
dec
dec
les
ds
push
cmps
movs
push
adc
sahf
test
nop
adc
inc
sbb
add
sub
mov
test
call
sti
(bad)
call
push
mov
xchg
es
push
fmul
adc
pusha
cwde
pusha
lea
jns
adc
fadd
jb
add
mov
add
pop
add
pusha
add
inc
int3
sbb
fcom
and
dec
pop
add
sub
add
dec
bound
push
and
jg
add
jl
les
(bad)
jne
mov
mov
push
sub
out
push
push
push
push
jmp
xchg
loopne
pop
jl
push
in
jo
inc
mov
cdq
or
mov
push
jmp
mov
dec
cmp
jne
mov
or
mov
lods
cli
push
mov
or
test
push
pop
mov
test
test
pop
je
dec
mov
dec
xor
dec
mov
xchg
mov
fisttp
xchg
je
ret
add
xor
daa
dec
jmp
mov
add
cmp
jnp
les
xchg
and
and
pop
jbe
cmp
out
push
stos
rol
or
dec
and
add
inc
or
inc
cmp
pop
dec
stos
jg
ja
mov
push
push
or
mov
test
call
xlat
xchg
jmp
mov
stos
daa
inc
jns
mov
pop
inc
mov
inc
and
cmp
jne
inc
mov
pop
cld
cmps
nop
mov
dec
or
xchg
in
inc
add
mov
mov
xor
push
mov
cmp
add
jmp
mov
call
pusha
jge
inc
or
pusha
aaa
add
push
adc
add
adc
add
ss
lea
mov
pusha
rcl
(bad)
or
sbb
pop
call
add
call
mov
lock
jmp
sar
mov
sbb
hlt
retf
mov
pop
add
mov
mov
stos
inc
test
(bad)
nop
mov
stos
inc
add
ins
and
movs
inc
sub
ret
pop
jge
jnp
mov
outs
pop
jno
inc
sub
clc
dec
inc
jo
mov
(bad)
mov
les
nop
xchg
retf
cdq
int
xchg
add
retf
inc
add
dec
shl
add
push
fild
cdq
sbb
add
adc
add
add
and
or
pop
mov
and
je
fiadd
adc
jo
fist
cmp
jne
test
fimul
push
clc
and
ja
leave
sbb
mov
add
in
dec
xor
cwde
sub
sub
add
adc
pusha
inc
loopne
hlt
enter
xor
sbb
add
shr
mov
jo
clc
xchg
(bad)
xlat
or
sub
scas
nop
adc
mov
les
test
push
adc
inc
stc
mov
or
push
repnz
cmp
adc
leave
pop
(bad)
das
rcr
loopne
add
mov
mov
dec
sbb
pop
push
push
push
push
jne
(bad)
mov
xor
popf
or
popf
inc
je
inc
scas
pop
fdivr
pop
and
adc
out
sub
aam
ret
add
dec
adc
jno
add
xchg
push
scas
xor
adc
add
in
or
(bad)
mov
lods
push
add
xchg
and
je
addr16
cmps
push
cmps
dec
jne
repnz
(bad)
or
out
or
xor
adc
hlt
(bad)
cmps
fwait
mov
mov
jne
adc
inc
mov
xor
shr
dec
js
add
(bad)
xchg
and
push
mov
mov
loop
push
dec
cmps
push
mov
inc
mov
mov
sub
cmp
je
rcr
jbe
add
mov
mov
jg
and
and
sbb
or
add
dec
jns
mov
and
jl
popa
sbb
mov
and
and
pusha
jo
sbb
sbb
sub
jmp
add
xchg
out
(bad)
dec
jnp
daa
mov
mov
sub
cmp
mov
iret
sub
(bad)
mov
sub
mov
push
(bad)
xchg
xor
gs
sub
dec
jns
adc
test
add
mov
sbb
clc
jecxz
cmp
inc
(bad)
cmc
cmp
xchg
add
add
push
and
ret
mov
inc
nop
inc
add
add
dec
shl
mov
xchg
retf
push
lock
cmp
(bad)
or
cmp
enter
ror
sub
xchg
in
inc
mov
pop
or
inc
xor
push
cmp
lea
test
call
add
mov
adc
add
xor
pop
fwait
(bad)
xchg
xor
or
push
test
rcr
push
sub
clc
push
cwde
add
sbb
pop
inc
fsub
or
push
pop
or
inc
lock
push
adc
idiv
fild
push
push
push
dec
ror
push
dec
add
or
pop
in
repnz
or
push
dec
push
mov
add
push
push
adc
js
shr
leave
inc
xchg
jnp
push
push
dec
lea
inc
inc
outs
push
jl
neg
adc
xor
adc
adc
add
push
or
push
sub
push
push
mov
sub
inc
add
scas
mov
loopne
daa
sub
or
or
cmp
add
xor
nop
scas
and
sub
sub
or
stc
push
push
mov
aad
inc
sbb
or
jae
lds
and
push
adc
outs
mov
(bad)
push
push
jmp
mov
mov
or
mov
adc
inc
ret
push
jo
push
sbb
jo
call
out
sub
adc
sbb
or
or
hlt
and
cmps
adc
sub
ficom
push
pop
loope
hlt
test
in
mov
sbb
push
push
call
(bad)
adc
xchg
jbe
popa
and
jmp
jl
mov
adc
or
sbb
ret
int3
(bad)
fld
sub
lods
punpckhbw
sar
add
push
fsubr
pop
pushf
sbb
push
mov
mov
out
fist
cmp
dec
cld
mov
push
cld
cmp
repnz
adc
add
jmp
mov
xlat
jmp
fs
cld
sbb
sar
in
cmp
xor
cmp
add
xchg
ret
jne
cld
add
out
call
and
sub
in
mov
out
add
pop
xor
movs
and
mov
dec
out
inc
repnz
or
sbb
mov
add
sbb
jmp
or
dec
or
push
into
out
sbb
clc
or
pop
adc
push
(bad)
fsub
je
cmp
aas
push
hlt
outs
mov
in
or
aas
dec
enter
sub
cmp
jb
and
std
push
push
push
mov
mov
outs
push
cmp
mov
mov
mov
fdiv
push
mov
adc
mov
cld
add
(bad)
call
or
call
jmp
mov
sub
mov
jge
add
push
std
mov
mov
fist
cmp
(bad)
push
cld
pop
pop
mov
mov
cli
addr16
mov
mov
loop
mov
and
jp
clc
mov
sahf
and
arpl
pop
pop
xchg
scas
inc
int3
int3
in
dec
add
mov
adc
es
(bad)
out
or
jbe
mov
shl
pop
lea
dec
push
aam
fdivr
add
cmc
mov
mov
outs
loop
jmp
loopne
jle
mov
mov
mov
cs
sub
xchg
ss
test
jne
cmp
je
cmp
xor
mov
mov
xor
inc
hlt
add
adc
std
(bad)
call
mov
mov
mov
cmp
ja
fcomp
or
inc
jmp
mov
aas
or
test
pop
push
sti
aas
fdivr
mov
xor
mov
mov
push
aam
mov
jmp
pushf
sti
fistp
jns
add
jne
mov
mov
jmp
xor
dec
mov
inc
adc
mov
jmp
sbb
(bad)
fstp
cmp
mov
jmp
cmp
mov
scas
(bad)
mov
mov
mov
mov
push
hlt
rol
adc
fld
add
in
jmp
xor
ins
je
push
push
(bad)
retf
gs
fwait
rcr
mov
mov
mov
xor
mov
add
ja
or
dec
clc
mov
adc
and
fmul
cmp
aas
fcmovu
adc
jmp
loop
add
fsubr
pop
adc
push
pop
xor
mov
sub
push
pop
and
scas
sti
pop
cwde
sbb
push
adc
mov
or
(bad)
mov
dec
xlat
push
xor
and
das
mov
xor
push
aad
and
cmp
pop
ss
arpl
sar
pusha
add
pop
push
mov
mov
adc
mov
in
adc
jne
shr
push
jnp
or
lock
fild
out
aam
add
xchg
jmp
mov
mov
pop
dec
shr
sar
push
sbb
sbb
jae
push
call
sbb
or
mov
mov
sub
inc
push
cmp
cmc
xchg
pop
push
push
mov
dec
ret
or
xor
cmps
push
add
adc
push
push
fsubr
leave
push
aas
push
loop
cmp
push
cmp
jne
mov
add
inc
and
retf
sbb
push
jnp
pushf
push
xor
or
mov
inc
pusha
xchg
pop
jne
jne
cmp
test
inc
pop
cmp
clc
scas
ja
dec
or
dec
or
push
or
push
hlt
sub
sub
adc
aam
or
mov
jge
mov
mov
cdq
inc
clc
push
das
retf
push
mov
add
jo
pop
adc
mov
push
mov
ret
push
push
sbb
sub
push
add
cld
add
add
mov
sbb
clc
aaa
jb
clc
push
call
or
sti
xor
adc
add
dec
adc
add
push
jp
push
add
add
push
sub
mov
mov
xor
test
jle
mov
mov
std
(bad)
call
mov
and
cmp
jne
mov
inc
test
je
jmp
loop
pop
addr16
inc
cmp
jl
pop
mov
pop
pop
call
mov
push
inc
ret
mov
xor
push
idiv
pop
mov
push
retf
fmul
or
pop
dec
xor
(bad)
jle
popf
imul
mov
push
mov
call
or
sub
push
add
adc
add
add
div
push
inc
sbb
or
pop
push
ret
jle
xchg
pop
add
jmp
mov
ret
and
ja
pop
xor
push
mov
stos
loopne
movups
mov
ss
arpl
movq
cdq
arpl
(bad)
jmp
push
(bad)
int
lds
rol
jae
pop
add
je
(bad)
and
or
mov
(bad)
pusha
jb
mov
ja
add
or
je
push
call
dec
call
add
adc
adc
adc
or
xor
ins
jne
mov
pop
jmp
or
mov
jmp
or
jne
mov
xchg
(bad)
call
xchg
mov
push
mov
cmp
jl
cmp
jle
mov
push
jmp
adc
mov
out
push
adc
adc
xor
or
call
add
pop
pop
imul
jg
and
mov
mov
cmp
and
jle
mov
jb
adc
cmp
cwde
imul
cmp
and
fwait
inc
add
test
ds
mov
mov
and
xor
dec
or
inc
jne
mov
push
cdq
mov
out
mov
mov
mov
add
pop
cmp
jge
mov
pop
pop
ret
mov
add
and
aaa
and
jl
or
mov
(bad)
(bad)
(bad)
push
cmp
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
sbb
cmp
jne
cmp
inc
rcl
jae
sbb
fldlg2
push
data16
fld
fyl2x
fstp
dec
push
push
mov
shl
sub
movsx
mov
(bad)
jg
sti
fild
fmul
fld
mov
cdq
xor
sub
(bad)
fistp
add
fstp
fld
test
fabs
jle
inc
out
inc
add
dec
clc
fcom
out
out
sti
fld
fmul
or
fcom
leave
cwde
and
add
sti
push
fmul
dec
hlt
mov
aam
div
push
push
or
sbb
in
cmp
inc
dec
inc
jne
fadd
dec
xchg
sbb
pop
pop
fnstsw
jle
jp
les
ror
(bad)
je
fchs
fmul
cld
adc
arpl
stc
adc
test
dec
or
scas
cwde
dec
or
mov
dec
daa
xchg
iret
ins
push
sub
fstp
push
pop
cmps
test
pop
sti
scas
mov
sbb
loop
add
and
test
push
(bad)
dec
ret
cmps
inc
lea
and
pop
or
add
jb
jo
and
sbb
push
mov
push
xchg
sub
cmp
and
push
add
mov
loope
ret
and
fld
fcomp
jge
cmp
xor
inc
jne
or
or
adc
cwde
adc
(bad)
add
cmp
mov
scas
call
or
xchg
inc
outs
xor
xlat
popa
and
fiadd
stos
or
and
push
fistp
inc
aad
call
sbb
stos
in
dec
mov
pop
pop
push
push
mov
push
inc
js
retf
push
fstp
or
mov
jg
rcr
in
inc
mov
or
adc
adc
push
xlat
mov
or
and
fst
push
mov
push
mov
pop
mov
ja
clc
adc
and
push
ds
(bad)
push
push
call
inc
push
push
nop
sub
add
sbb
ja
shr
pop
pop
sbb
push
push
test
je
ret
icebp
shr
and
sbb
cwde
adc
rol
inc
clc
(bad)
ds
mov
dec
rcr
dec
and
call
rol
mov
dec
adc
fild
inc
push
je
mov
mov
inc
mov
sbb
cmp
call
mov
inc
test
je
xor
mov
jb
ror
sub
fdiv
rol
inc
and
shl
(bad)
add
jmp
fidivr
jmp
sbb
cmp
dec
loopne
data16
aas
add
les
data16
ja
(bad)
mov
cwde
mov
cmps
movs
sub
in
cmp
ins
cmp
scas
add
popa
pop
xor
fist
aam
mov
mov
or
push
add
rcr
je
(bad)
inc
or
cmp
je
xor
mov
and
inc
cmps
adc
sar
(bad)
out
fimul
test
mov
je
cmp
jb
cmp
ja
lea
mov
cmc
aaa
jno
and
lea
(bad)
fist
inc
cmp
jle
stos
je
cmp
(bad)
mov
cmp
je
cmp
je
cmp
je
dec
icebp
mov
cmp
jne
add
inc
add
jmp
inc
adc
mov
and
pop
dec
add
out
out
and
sbb
fwait
cmpps
or
shr
or
pop
fsincos
pop
adc
addr16
sti
xchg
or
adc
das
je
addr16
push
out
into
das
jno
je
scas
and
push
adc
aad
xor
mov
jb
inc
xor
xor
or
adc
fs
dec
js
out
cmp
ins
and
fisttp
cmps
jp
ja
fisttp
dec
lods
add
iret
xor
mov
data16
xor
and
call
adc
ret
jne
cmp
and
inc
sub
push
popa
and
mov
mov
sbb
and
sub
add
int3
mov
add
cmp
jne
cmp
jne
sub
cmp
jne
rcr
cmp
jne
inc
and
jmp
cli
cmp
jne
push
and
mov
mov
and
sbb
pop
cmps
pusha
xor
or
xor
sbb
cld
xor
jbe
cmp
sar
lods
add
ret
xor
sbb
xor
rol
pusha
imul
sub
xor
push
mov
mov
or
pop
sbb
add
push
dec
push
push
mov
es
sbb
sbb
sub
or
fwait
cs
imul
sti
out
dec
shl
or
and
adc
jg
add
mov
cmp
je
cmp
jl
add
jmp
pop
pop
pop
pop
idiv
aaa
add
jle
xor
cmp
mov
jne
cmp
scas
ja
stos
jne
mov
ret
cmp
push
and
cmp
lods
out
jne
mov
ret
cmp
inc
(bad)
jmp
jbe
cmp
jae
and
ret
xor
sbb
and
cmp
sub
ja
(bad)
and
aas
push
mov
or
test
push
sbb
push
test
(bad)
mov
push
or
leave
inc
cmp
jge
cmp
jle
add
inc
jmp
mov
pop
add
cld
pop
pop
pop
mov
jae
inc
loopne
or
add
push
mov
mov
bound
out
adc
xor
cmp
aam
rcl
or
ss
ins
test
aam
sbb
push
shl
inc
mov
lea
les
pop
pop
pop
pop
or
or
or
inc
ret
push
pop
retf
sbb
sbb
and
sbb
cmp
lahf
sbb
push
sub
popa
test
fadd
fdiv
add
sub
enter
repz
pop
sub
adc
sub
mov
rdtsc
xchg
push
out
sbb
test
cld
sar
push
or
mov
jl
cmc
sub
dec
or
push
inc
into
xor
or
lahf
push
loope
outs
dec
mov
pop
mov
cmps
ret
and
mov
inc
mov
and
or
fadd
mov
push
mov
sub
sub
mov
nop
pop
push
jg
push
sbb
js
jg
add
push
push
xor
cmp
fidivr
and
cmp
jle
add
cld
mov
or
sbb
dec
cmc
call
mov
jg
add
mov
cmp
je
mov
add
mov
mov
cmp
add
dec
shl
cdq
sub
xor
pop
jbe
js
xor
jne
int3
push
enter
loopne
xchg
shr
out
sub
mov
rcr
jp
dec
add
push
or
sub
add
into
push
pushw
in
dec
add
cmp
je
cmp
je
movs
or
inc
neg
push
test
mov
push
mov
xor
sub
push
cmp
iret
sbb
pop
push
pop
push
cmp
loopne
stos
push
mov
popa
sbb
lock
lods
adc
dec
xor
mov
add
or
stos
mov
add
dec
add
mov
pop
test
jne
mov
pop
or
inc
adc
out
cld
add
(bad)
rcl
xor
ficom
mov
push
dec
imul
cs
push
cmc
or
imul
ror
and
test
mov
dec
mov
sub
pop
shl
lock
jg
cdq
sub
xchg
add
clc
sets
dec
push
and
xchg
push
mov
jnp
jge
dec
dec
sub
push
shl
sbb
and
arpl
inc
and
outs
fs
push
popa
les
push
push
dec
pop
je
mov
jae
xor
add
inc
test
xchg
adc
mov
push
xchg
dec
and
(bad)
push
sbb
mul
sbb
out
and
es
push
sub
out
mov
mov
push
push
and
outs
pop
bswap
add
xor
pop
inc
sar
mov
or
rol
push
cwde
jmp
jl
xor
push
xor
bound
jle
jae
out
mov
xor
mov
mov
jmp
or
je
add
jbe
enter
pusha
(bad)
loope
and
jmp
in
cli
idiv
repnz
mov
mov
add
jae
or
add
pop
sbb
test
pop
ret
push
sub
shl
inc
push
fidiv
shl
dec
add
test
jle
jg
(bad)
mov
in
or
ja
jmp
jmp
add
call
pop
add
ret
mov
push
mov
and
xor
sbb
add
adc
call
add
push
xor
or
push
and
push
enter
push
push
or
or
fadd
mul
call
dec
sub
loopne
or
add
adc
pop
pop
inc
mov
push
invd
push
push
pop
lods
popa
push
lock
or
cs
shl
mov
(bad)
call
inc
add
outs
jns
mov
add
sub
push
rcl
and
mov
cmp
enter
retf
push
push
inc
ret
and
jmp
stc
adc
jg
adc
xor
mov
or
clc
mov
and
mov
sub
fwait
aas
je
mov
cwde
inc
jb
add
js
mov
jle
xor
inc
popa
nop
stc
bound
cmp
or
mov
call
adc
push
add
ret
scas
or
movups
inc
add
mov
mov
inc
mov
mov
mov
cmp
je
or
enter
mov
ja
mov
div
add
push
js
cmp
adc
nop
sub
out
nop
repz
jmp
push
inc
and
add
adc
test
push
fcom
push
pop
daa
ret
sub
out
mov
add
xor
jp
cmp
lea
add
push
mov
dec
push
and
cmp
clc
or
dec
inc
les
es
cmp
nop
scas
div
mov
in
xchg
push
iret
push
loop
add
ja
inc
mov
pop
aam
nop
loopne
and
push
call
and
inc
push
add
test
jbe
add
or
cmp
call
or
push
add
test
test
dec
mov
(bad)
(bad)
dec
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
imul
jns
daa
ret
cmp
push
ss
cmp
sub
cmp
jne
mov
(bad)
ret
cmp
or
adc
outs
or
or
dec
aaa
(bad)
fnsave
ret
cmp
or
adc
or
sbb
jne
pop
adc
jne
ret
push
push
sbb
dec
xor
ret
lahf
clc
loope
add
ds
cwde
jle
sbb
adc
shl
or
or
or
add
popa
or
or
ja
xor
xor
(bad)
out
and
and
lea
push
mov
mov
inc
xchg
ror
lea
mov
adc
stos
lea
pop
pop
jmp
aaa
cmc
inc
sub
xchg
sbb
stos
test
stos
je
xor
add
cmp
je
mov
arpl
in
popa
stos
jmp
imul
sysenter
cmp
movs
movs
or
pop
mov
cmc
add
rep
movs
lods
pop
std
mov
test
mov
mov
adc
and
sbb
sub
sbb
or
mov
push
jbe
sub
aaa
add
stos
cmp
push
push
mov
jo
push
xor
or
test
jbe
adc
add
push
pusha
out
sub
push
sti
xor
jg
adc
clc
std
nop
das
sub
mov
sub
daa
lea
test
loopne
sub
sub
adc
adc
or
mov
inc
mov
test
jbe
push
add
inc
mov
es
sbb
inc
xor
push
stos
pop
inc
jmp
mov
mov
push
adc
and
push
rep
(bad)
aam
jmp
add
cmp
xor
mov
lods
std
push
push
ja
xor
adc
or
popa
sbb
add
call
push
ss
inc
push
mov
xor
cmp
fidivr
xor
mov
inc
xchg
jl
mov
add
push
and
jg
xchg
mov
movs
cmp
mov
mov
jle
xor
push
mov
xor
mov
neg
mov
jbe
sar
jno
adc
call
retf
aaa
adc
add
leave
xchg
inc
mov
test
pop
add
push
mov
lea
es
(bad)
call
inc
cmp
pop
or
cmp
adc
push
mov
push
(bad)
std
(bad)
daa
aad
or
jge
mov
mov
mov
mov
std
push
fisttp
dec
push
mov
inc
xchg
add
xchg
mov
dec
jne
mov
mov
mov
fdivr
std
jp
inc
mov
adc
inc
out
jle
mov
sub
ins
mov
jle
out
outs
(bad)
(bad)
jge
xor
test
jle
mov
add
mov
xor
inc
dec
jne
mov
aaa
mov
cmp
pop
mov
jbe
ret
or
test
aaa
loopne
stos
or
sub
lea
cmps
pop
call
lea
mov
mov
mov
loope
(bad)
jmp
ret
test
jle
mov
add
mov
mov
sub
test
mov
jle
dec
mov
inc
or
jge
rep
fisttp
repnz
cdq
rep
and
add
mov
lea
push
lea
mov
add
movs
mov
dec
cli
xchg
mov
cdq
sub
clc
or
cmp
and
jmp
mov
mov
add
lock
loopne
cmc
iret
mov
data16
stos
(bad)
out
iret
(bad)
hlt
stos
push
mov
push
push
push
dec
mov
les
nop
iret
add
(bad)
inc
je
(bad)
push
mov
lea
mov
push
lea
xor
push
push
mov
inc
adc
ds
in
dec
lea
add
pop
jmp
daa
fidivr
(bad)
idiv
(bad)
mov
jle
xchg
mov
lea
mov
cmps
(bad)
fisttp
js
shr
clc
mov
je
mov
jmp
aaa
mov
push
mov
mov
push
lea
xor
push
push
mov
loopne
pusha
jbe
push
mov
daa
adc
(bad)
js
sub
dec
or
pop
out
not
adc
dec
add
adc
or
cdq
mov
xchg
ret
popf
xor
xchg
mov
mov
std
jle
add
jmp
push
clc
adc
(bad)
(bad)
out
scas
das
add
add
mov
mov
mov
clc
(bad)
dec
cmp
jl
xor
lea
mov
mov
sbb
mov
inc
dec
scas
sbb
jl
push
mov
add
jb
mov
cmp
jne
cmp
je
cmp
jb
cmp
jge
inc
aaa
cmp
jne
push
jae
mov
add
mov
push
mov
cwde
lea
fist
add
inc
mov
je
push
mov
sbb
fidivr
repz
push
mov
mov
add
and
dec
outs
mov
fs
pop
pop
icebp
sbb
sbb
fmul
cmp
mov
js
pop
cmp
jle
sahf
cmp
mov
or
vcvtsi2sd
out
sub
inc
inc
push
mov
fmul
loopne
loopne
aam
mov
sub
xchg
cmp
or
add
out
nop
sub
push
call
add
imul
cmp
int3
pop
push
push
mov
loopne
push
jbe
mov
call
xor
hlt
or
jmp
add
mov
ror
inc
or
pop
xor
xlat
mov
es
xlat
or
fcom
or
sub
pop
call
sbb
call
cmp
jle
sub
push
mov
fsubr
adc
call
fs
cmp
xchg
jge
dec
lock
pop
push
and
push
push
pop
dec
jmp
sub
aad
push
push
cwde
mov
aad
pop
and
mov
mov
cmp
jge
sub
xchg
dec
jnp
pop
push
pop
and
sub
push
sub
push
add
je
loope
sbb
pop
xor
xchg
xchg
test
jne
movs
adc
mov
mov
pop
inc
inc
aad
cmc
aas
or
xor
mov
mov
lock
inc
jl
fisubr
mov
lea
cli
sbb
inc
imul
fisub
push
jb
xor
adc
inc
push
mov
dec
mov
fimul
ret
add
ss
mov
or
(bad)
and
inc
(bad)
jb
add
aaa
xchg
jae
js
pop
into
gs
mov
je
lea
adc
je
mov
loop
adc
add
dec
inc
call
loope
jg
outs
nop
sub
push
push
push
mov
mov
push
mov
(bad)
shr
and
mov
inc
push
add
inc
and
sti
cmp
pop
pop
and
sub
cmp
mov
fisub
outs
test
jg
jle
add
mov
arpl
sti
cmp
adc
rdmsr
test
sub
lods
out
ret
sbb
xlat
mov
inc
push
cld
inc
shl
sub
jne
adc
sub
mov
cmp
je
jmp
add
cmp
lock
mov
jmp
mov
inc
mov
jle
sub
add
popa
adc
shl
pop
sub
pop
rcl
pop
loopne
adc
enter
icebp
std
fwait
and
adc
fldcw
(bad)
sub
mov
mov
add
sub
bound
fstp
push
push
jbe
add
fsubr
out
and
mov
imul
jge
lock
cmps
or
sbb
pop
repnz
ss
cmp
inc
adc
push
dec
dec
and
cmp
adc
mov
inc
xor
mov
cmp
lea
in
cmp
push
rol
add
cmp
lea
xor
mov
add
iret
jo
jae
pusha
iret
cmp
pop
add
inc
fs
lds
jl
ds
add
dec
and
mov
inc
in
lock
std
dec
cld
xor
jmp
mov
jge
push
adc
sub
nop
test
jl
mov
inc
inc
jge
inc
push
popf
adc
fs
cmp
xchg
mov
dec
test
and
ja
ror
enter
mov
mov
push
xor
pop
push
in
cmp
sub
add
pop
or
into
dec
rol
push
loop
js
pop
xchg
hlt
stos
xor
cwde
pop
dec
add
xlat
ins
push
inc
fs
push
retf
aad
dec
or
mov
push
adc
gs
push
and
fst
mov
mov
hlt
cmps
sub
and
mov
test
sub
add
add
retf
mov
ins
jge
cld
mov
cld
push
cld
cld
cmp
mov
movs
push
mov
inc
and
cmp
aam
or
inc
aam
inc
mov
retf
sbb
and
mov
pop
add
sar
mov
mov
sahf
or
loopne
mov
(bad)
mov
cmp
mov
mov
lea
mov
push
add
mov
mov
not
adc
inc
adc
lods
xchg
ja
idiv
and
push
or
mov
and
adc
adc
andps
in
pusha
adc
sar
sub
sbb
in
pop
sbb
jle
sub
add
mov
dec
inc
rol
and
and
sbb
sbb
mov
mov
xor
add
pop
pop
push
adc
inc
mov
int3
test
jg
and
ss
ja
adc
mov
pop
sbb
jmp
mov
xor
fdiv
inc
xor
push
icebp
jl
bound
popa
xor
sub
mov
mov
adc
dec
mov
add
mov
jmp
dec
adc
fstp
adc
mov
adc
fisttp
pop
jg
and
mov
clc
and
add
inc
pushf
jg
sbb
mov
cmp
jl
and
push
std
mov
mov
mov
lock
or
les
push
push
mov
inc
ror
push
test
mov
jne
pop
jmp
dec
ja
mov
mov
mov
fadd
jmp
mov
jmp
mov
das
jmp
or
mov
mov
add
or
or
xchg
jp
jge
mov
inc
mov
mov
jne
(bad)
push
mov
dec
push
xor
cmp
setl
cmp
jne
mov
rcl
aam
mov
add
cmps
or
push
outs
sub
mov
icebp
ja
aaa
mov
lea
mov
add
lods
xchg
or
in
jmp
jmp
lea
mov
jge
lds
in
jmp
push
push
add
dec
out
(bad)
fild
mov
jne
lea
xor
loop
inc
cld
ja
jmp
add
inc
cld
add
sbb
scas
jo
mov
xchg
mov
add
mov
mov
call
cmp
jl
push
jbe
sti
in
fwait
daa
and
popa
mov
mov
pushf
push
lea
call
mov
adc
call
add
xchg
mov
cmp
jge
cmp
mov
mov
cmp
je
cmp
adc
mov
retf
jl
add
jo
mov
jne
or
jne
push
push
fiadd
jo
pop
mov
sti
fnstsw
dec
cdq
inc
sbb
ret
or
push
popf
pushf
test
outs
cmp
mov
jne
mov
mov
mov
inc
inc
mov
or
retf
test
je
pop
out
into
sub
add
mov
repnz
sbb
fild
ins
into
les
jl
out
inc
test
mov
or
fmul
push
mov
push
push
mov
call
mov
xor
test
lea
(bad)
rcl
ror
pushf
ret
xchg
into
call
data16
(bad)
(bad)
or
rcr
out
jg
or
aaa
inc
mov
dec
loopne
cmp
jo
call
shl
sub
xor
mov
leave
lea
out
xor
push
inc
mov
aaa
add
repz
mov
mov
jne
shr
adc
inc
mov
or
cmps
ja
or
sbb
adc
add
jae
sbb
push
push
cmps
cmp
in
or
sbb
rcl
mov
push
mov
mov
push
push
lea
rcl
(bad)
hlt
call
inc
or
cmp
push
or
ret
cmp
jne
mov
mov
jecxz
aaa
std
jg
retf
push
dec
in
ret
mov
adc
push
sar
mov
lea
sbb
jl
mov
out
iret
outs
mov
mov
sbb
jg
ja
daa
in
test
je
inc
mov
jnp
mov
jp
mov
shr
adc
ja
xor
mov
adc
sub
adc
int3
adc
mov
or
fcom
movs
pop
pop
adc
fisttp
jo
push
fcomp
mov
fdiv
adc
out
in
xor
add
mov
sbb
dec
or
add
test
push
mov
out
pop
or
cmp
gs
ret
mov
dec
jmp
dec
add
mov
add
add
xchg
movs
mov
add
les
pop
rol
inc
cmova
pop
sbb
pop
pop
andnps
inc
inc
add
popa
outs
cwde
pop
pop
setae
xor
pop
das
sbb
js
adc
scas
sub
(bad)
mov
add
scas
fisttp
jg
adc
dec
mov
mov
cmp
je
cmp
jne
gs
adc
push
add
pushf
mov
clc
mov
dec
daa
jo
or
les
inc
je
sbb
adc
mov
xchg
push
lock
xor
sbb
cmp
jne
mov
push
pop
and
(bad)
mov
or
and
mov
(bad)
mov
or
inc
add
dec
jne
and
pop
rcl
leave
mov
mov
mov
cmp
je
mov
sbb
jecxz
(bad)
fstp
les
xor
add
mov
les
cwde
cmp
mov
shl
pop
and
push
xor
pusha
or
push
lock
sub
mov
inc
add
mov
rcl
popf
mov
lea
je
aaa
mov
sub
pop
in
push
jo
test
jbe
mov
nop
adc
rcr
or
dec
and
cs
pusha
adc
mov
inc
mov
sbb
dec
and
push
iret
adc
push
xor
mov
inc
jnp
cli
push
add
add
sbb
or
and
jg
lea
pusha
jl
pop
add
push
repnz
mov
fsub
movs
aas
mov
mov
add
popa
inc
jmp
mov
add
add
push
push
add
aas
dec
adc
jge
mov
in
jbe
scas
mov
mov
dec
in
cld
pop
push
and
inc
push
mov
dec
mov
inc
push
cmp
fild
cmp
shr
mov
push
jne
inc
inc
enter
lock
xchg
lock
push
and
push
pop
les
je
sub
adc
mov
std
cmp
sbb
pop
push
pop
icebp
or
rcr
xor
mov
je
pop
cmp
pusha
iret
xor
jg
add
out
hlt
pop
pop
(bad)
cmp
jg
cwde
add
jo
adc
sub
scas
or
xor
jle
sub
jmp
dec
sbb
mov
adc
inc
mov
jb
sub
and
dec
imul
jno
xor
in
(bad)
lock
dec
sbb
and
loopne
fcom
pop
and
push
add
test
sbb
shl
push
add
pop
or
or
test
je
fst
aas
bound
pop
adc
pop
sbb
push
adc
cmp
pop
adc
pop
sbb
sbb
add
pop
and
clc
add
xor
je
mov
push
inc
pop
sub
in
loope
daa
add
or
mov
jbe
and
push
rcl
push
mov
dec
cmp
fs
shl
dec
inc
sbb
dec
push
cmp
call
mov
push
ficom
aad
cwde
rol
(bad)
xchg
jge
jmp
dec
outs
sub
dec
add
or
add
imul
iret
jne
scas
mov
std
cmp
popa
xchg
outs
cmp
je
popf
imul
and
mov
mov
ins
pop
pop
mov
cwde
stos
cmp
lahf
mov
jne
mov
idiv
push
rol
push
dec
push
mov
pop
test
call
jmp
clc
push
shr
test
mov
sete
push
dec
push
call
pop
adc
and
pop
ret
mov
ja
add
fcom
dec
push
xchg
int3
mov
(bad)
xlat
jp
add
rcr
je
pusha
mov
or
add
xchg
dec
inc
dec
jae
call
dec
and
add
call
mov
std
xor
jle
mov
push
push
mov
idiv
stos
cli
and
addr16
lea
add
fs
nop
scas
jg
add
(bad)
mov
push
push
mov
push
push
push
cmps
hlt
pusha
xor
sbb
push
add
push
pop
and
mov
lea
push
add
jo
shl
lea
imul
inc
mov
lea
pop
enter
dec
cmp
push
sub
add
xchg
pop
mov
xor
mov
and
in
or
sub
(bad)
sbb
xor
push
inc
mov
jnp
(bad)
add
in
add
(bad)
pop
or
xchg
add
ins
adc
fild
out
mov
mov
cmp
mov
jne
test
jle
sub
sub
mov
std
fwait
pop
imul
mov
adc
add
push
cmp
xor
sub
je
dec
jne
fcom
ja
mov
mov
ror
inc
inc
mov
dec
xor
cld
ror
std
pop
add
pop
or
mov
jne
stos
mov
jle
mov
cld
cmp
mov
(bad)
jle
dec
xor
mov
inc
sbb
sbb
pop
cmp
add
stos
loop
or
lea
sbb
adc
push
or
push
cmp
je
push
and
data16
adc
fdivr
call
jg
(bad)
call
and
fisubr
int3
push
call
pop
sbb
add
push
in
or
mov
ret
sbb
adc
not
mov
imul
inc
cmc
out
add
test
jle
mov
test
idiv
and
ins
mov
test
jne
dec
(bad)
mov
dec
and
lea
jg
mov
or
cdq
stc
ds
mov
xchg
xchg
adc
sbb
adc
push
cs
iret
or
ins
mov
xchg
adc
int3
inc
loop
xchg
sbb
ret
adc
push
rol
sub
cmp
jmp
cmp
retf
sti
sbb
cmp
je
mov
jmp
lea
out
jle
mov
adc
push
jmp
inc
or
jmp
or
pop
jl
sub
xor
dec
je
push
xor
jb
es
test
mov
pop
js
xor
fisttp
or
adc
adc
push
jbe
adc
inc
sub
dec
js
retf
xor
pop
jecxz
mov
jne
push
fiadd
sbb
mov
test
add
test
inc
ins
sbb
inc
pop
adc
fwait
push
sbb
call
je
pop
add
rol
data16
clc
mov
ja
xchg
pop
ficom
lds
mov
mov
add
dec
inc
pop
xor
add
cld
call
inc
or
mov
adc
sti
sub
ret
stos
mov
sub
or
xor
out
clc
push
push
and
mov
push
push
push
sbb
mov
add
mov
sub
cmp
push
push
daa
sbb
and
mov
rcl
cmp
or
push
add
sub
xlat
outs
fwait
sub
jne
xor
push
fld
adc
or
push
mov
aad
mov
adc
mov
push
sub
push
inc
and
(bad)
mov
sub
ror
dec
add
sub
mov
hlt
mov
fstp
push
mov
push
jns
ins
neg
mov
pop
lods
mov
and
test
mov
mov
sub
sub
inc
pop
sbb
add
data16
mov
mov
push
out
retf
shr
push
adc
sub
int
xchg
popa
test
xor
and
cmp
and
sub
mov
push
or
vsqrtps
lahf
inc
aad
dec
adc
or
inc
add
add
std
sbb
adc
mov
jmp
push
clc
in
and
data16
adc
pop
pop
and
and
sbb
add
scas
xchg
or
mov
push
sbb
in
in
push
push
ret
mov
and
mov
and
(bad)
pop
push
std
push
and
pop
ins
loope
(bad)
jmp
ja
pop
mov
dec
adc
push
add
imul
dec
cmp
clc
add
push
mov
push
and
mov
ins
dec
and
mov
push
dec
push
neg
(bad)
cmp
inc
dec
and
and
add
push
neg
inc
add
xchg
ror
aas
inc
mov
and
cld
mov
sub
cwde
in
or
mov
pop
std
rol
jg
pusha
cdq
sbb
push
pop
(bad)
adc
daa
add
adc
lds
push
cmp
jne
dec
aaa
cld
or
or
push
call
fdivr
add
cmp
je
dec
je
lds
test
jle
jo
sar
mov
add
adc
adc
mov
into
or
int3
jmp
inc
out
(bad)
(bad)
and
push
out
fdiv
or
jl
fld
xor
add
mov
ja
and
jmp
cs
jmp
into
cmp
jl
adc
out
call
mov
or
sbb
jo
sbb
mov
out
clc
das
add
xor
or
pop
cmps
jo
mov
or
dec
lahf
sub
ror
repnz
sbb
push
shl
add
cld
gs
out
cwde
or
test
jle
or
inc
jb
pop
cmp
test
je
push
addr16
(bad)
imul
xchg
and
sti
jne
push
adc
punpckhdq
sbb
push
js
push
adc
lea
loopne
lods
push
or
loope
or
in
jmp
xor
xor
(bad)
(bad)
(bad)
jg
nop
push
mov
push
cmp
jne
cmp
jne
mov
test
je
mov
push
mov
add
inc
jae
ss
inc
pop
mov
ja
or
sbb
stos
sbb
mov
mov
mov
inc
mov
pop
pop
pop
jmp
jle
dec
and
or
test
je
cmp
sbb
test
je
inc
dec
fmul
adc
test
in
pop
sbb
cdq
dec
out
mov
fild
jne
repz
sub
call
fsub
and
aas
or
fdivp
adc
xor
js
push
mov
sbb
xor
add
xor
add
or
lods
mov
push
or
xor
mov
push
inc
xchg
inc
and
cmps
je
and
mov
or
inc
inc
je
loopne
adc
cmp
push
pop
add
xchg
out
push
(bad)
gs
ret
xchg
jmp
mov
mov
test
xor
xor
outs
add
je
adc
adc
out
test
test
inc
adc
add
pop
adc
adc
inc
mov
les
imul
jns
pop
jge
sbb
test
fistp
xor
and
out
add
add
popa
cmp
(bad)
mov
add
(bad)
mov
or
in
and
dec
add
push
add
mov
push
mov
mov
(bad)
push
add
push
add
adc
js
add
add
lock
dec
jne
in
push
push
push
call
dec
mov
and
outs
ins
adc
add
mov
and
push
sub
and
adc
jbe
(bad)
out
push
adc
mov
jle
cmp
jae
mov
in
and
mov
popa
mov
mov
cld
sbb
sbb
push
mov
add
mov
mov
call
inc
cwde
ins
in
mov
add
mov
mov
mov
mov
push
jno
or
fs
adc
add
inc
les
and
add
add
add
fdivp
inc
inc
sub
sbb
test
pop
pop
sbb
sbb
mov
xor
aaa
icebp
ret
adc
pop
xchg
adc
adc
push
mov
sub
inc
test
add
mov
stos
jp
and
test
je
sub
inc
and
add
cmp
jle
mov
mov
(bad)
and
sti
lods
and
cmp
jle
add
lea
sbb
(bad)
lods
add
add
mov
jg
jne
popa
call
cmp
adc
and
sti
and
les
mov
ret
or
je
adc
dec
call
je
push
dec
jne
sbb
int3
rcr
mov
lods
jle
test
test
shr
jnp
sub
push
mov
mov
je
push
or
lea
sbb
cmp
call
out
push
push
fsub
loopne
ds
std
loopne
or
dec
and
sub
lea
call
or
jne
mov
jmp
cld
nop
add
add
mov
or
pop
lea
add
push
push
add
add
mov
jmp
or
loopne
rcl
sbb
ret
adc
and
lock
stos
aaa
mov
push
xchg
push
push
and
push
mov
idiv
add
adc
add
pusha
fldenv
dec
dec
adc
xor
xor
mov
cmp
loope
adc
push
add
outs
and
sar
dec
xor
test
sti
mov
(bad)
aas
dec
jb
add
jno
or
mov
and
aaa
cmps
aas
jbe
push
push
je
push
into
pop
push
push
push
push
jmp
(bad)
fst
and
test
je
xor
adc
adc
add
out
pushf
add
sbb
mov
mov
dec
mov
pop
mov
(bad)
in
sbb
(bad)
inc
rcl
adc
dec
gs
mov
mov
and
dec
and
or
push
push
push
push
or
mov
mov
push
sub
ja
jmp
push
outs
adc
push
push
call
out
sub
xchg
push
ins
inc
push
ins
push
push
fiadd
lahf
setns
sbb
jae
add
xor
push
xor
add
push
jne
outs
pop
(bad)
call
push
push
xor
push
cmp
je
jp
test
std
add
test
or
pop
inc
adc
mov
cmp
jne
mov
xor
repnz
clc
mov
sub
sbb
test
adc
cmp
xor
mov
or
sub
jmp
cmp
push
sbb
add
and
pop
mov
outs
push
shl
fs
adc
addr16
push
call
push
mov
loopne
adc
push
call
mov
cmp
jne
mov
push
push
sub
adc
sub
cmp
sbb
or
cmps
inc
pop
sbb
mov
push
mov
rep
inc
mov
jmp
mov
push
pop
adc
jl
inc
xor
je
push
test
jne
dec
sbb
jp
push
inc
cmp
jmp
and
add
mov
jl
inc
imul
push
mov
adc
mov
shr
mov
ret
jge
call
lea
mov
cmp
call
mov
push
add
xchg
fst
inc
leave
or
mov
fcomp
or
and
adc
xor
or
xchg
or
ret
or
imul
mov
jp
nop
cmp
add
mov
cmp
dec
cwde
dec
inc
sbb
mov
push
push
test
mov
je
loopne
test
je
xor
out
add
clc
fcos
pop
out
jle
xor
push
mov
(bad)
fist
add
lea
mov
xor
mov
fiadd
loopne
pop
push
push
lea
mov
mov
mov
push
scas
das
out
loopne
in
pusha
pshufw
or
imul
inc
or
inc
in
mov
dec
add
fs
pop
or
dec
pop
pusha
loop
loop
sahf
add
and
dec
sub
jo
inc
jl
in
cmp
je
add
shl
mov
pop
push
push
cmps
sub
inc
jne
pushf
(bad)
out
pusha
pop
ror
pop
and
jmp
push
cmc
call
fnstsw
neg
cmp
jge
iret
dec
les
mov
jmp
jle
stos
mov
cmp
sub
and
jmp
cld
call
neg
cmp
mov
pusha
sti
out
ja
dec
lock
jle
jle
hlt
sub
xor
loopne
in
clc
test
loope
add
xor
imul
lahf
push
add
sbb
inc
mov
lea
xchg
neg
cdq
sub
mov
inc
inc
sbb
and
lea
push
or
ja
push
notrack
add
call
dec
ins
xor
pop
add
sub
cmp
jne
cs
mov
int3
mov
ror
iret
stos
shl
hlt
or
push
push
push
(bad)
mov
mov
push
je
sbb
mov
sbb
mov
cld
ja
mov
and
mov
out
call
mov
adc
push
ds
pop
rcl
test
mul
ds
jnp
test
push
cmp
and
sbb
nop
and
mov
sbb
sub
je
xor
jp
mov
idiv
enter
sub
ins
retf
call
mov
dec
rol
mov
ja
ja
add
push
sub
and
sbb
fmul
aaa
add
adc
push
mov
or
mov
pop
inc
imul
(bad)
outs
and
push
sub
add
dec
jo
add
stos
je
xor
inc
cmp
cmp
in
pop
mov
mov
sti
rcr
ret
pop
lods
pop
ins
sub
clc
jg
inc
xor
ins
push
adc
jae
dec
ins
hlt
inc
and
adc
les
in
pop
lds
sbb
or
retf
aam
mov
and
xchg
rol
jo
test
add
pop
pusha
cmp
mov
test
ret
xor
sub
add
or
lock
mov
xchg
aad
shl
mov
(bad)
sbb
sbb
sar
mov
push
adc
sbb
test
fistp
push
sub
(bad)
mov
jle
xor
aam
out
je
adc
cmps
mov
push
and
and
loopne
add
push
shr
jle
jmp
add
dec
mov
shl
cs
adc
(bad)
push
xor
sbb
adc
and
sub
iret
adc
jmp
sbb
inc
dec
dec
xor
inc
js
dec
das
push
mov
sub
and
andps
mov
jle
push
push
lea
das
(bad)
out
and
ins
pushf
push
lea
push
push
mov
std
mov
add
inc
cmp
push
push
and
sbb
push
push
aas
add
sbb
jnp
pushf
stos
sahf
into
cmp
aad
test
pop
and
clc
fs
mov
sbb
mov
mov
add
push
mov
mov
hlt
mov
cmp
inc
sub
pop
or
into
mov
mov
and
(bad)
inc
ins
test
add
mov
or
dec
sub
mov
mov
mov
mov
ror
inc
push
push
push
mov
mov
dec
add
in
mov
adc
mov
sub
aad
or
pusha
adc
je
rol
jg
sub
lds
mov
sar
clc
or
xor
inc
and
dec
sub
lds
sbb
mov
xor
adc
mov
mov
mov
dec
and
sub
mov
mov
and
mov
sub
jecxz
mov
sub
mov
and
push
mov
pop
cmp
add
xchg
xchg
and
pop
movs
(bad)
ffree
adc
cli
dec
sub
jbe
push
lock
(bad)
mov
fist
sub
add
mov
sbb
push
jle
xchg
in
inc
clc
mov
add
rol
add
push
and
test
jp
inc
or
int3
cmp
dec
jo
add
pop
and
lea
add
push
cmps
push
retf
es
sub
clc
xchg
cmp
inc
mov
pop
scas
or
int3
pop
and
and
inc
mul
and
test
pop
test
jge
and
lds
cmp
mov
pop
adc
loop
aam
push
in
cmc
sbb
push
xchg
adc
loop
xor
and
ins
and
or
shl
ret
xchg
pusha
sbb
sbb
(bad)
adc
dec
jo
(bad)
lock
push
mov
push
push
mov
or
jae
popa
add
in
inc
adc
lock
fwait
jbe
clc
add
push
mov
jl
cmp
jg
cmp
jl
call
push
scas
cmp
aaa
sub
in
jg
jle
add
test
jle
mov
jge
add
add
mov
add
outs
or
mov
cmp
pop
dec
or
outs
or
loop
push
add
jmp
retf
xchg
cmp
jg
aaa
add
ret
jne
inc
sar
lea
aaa
inc
fnstsw
add
scas
cmc
rol
add
push
or
dec
je
mov
ficom
ins
pop
or
adc
daa
mov
jbe
add
sbb
add
(bad)
inc
cs
cwde
cmp
cld
jg
fstp
sub
dec
jo
inc
ins
mov
outs
call
xor
xor
push
sub
mov
sbb
lea
ins
dec
lock
mov
jmp
push
dec
jo
push
jne
add
rol
push
call
rol
and
jmp
mov
cmp
(bad)
pop
popa
and
mov
ja
cmp
jmp
adc
jg
mov
mov
dec
dec
aam
call
and
cmp
inc
test
push
les
cmps
imul
cmp
adc
(bad)
test
cmp
pop
retf
and
scas
fld
fmul
lea
cmp
jo
push
push
add
cwde
loope
jg
add
pop
mov
test
jle
mov
mov
rep
(bad)
idiv
fnstcw
clc
bound
xchg
mov
mov
or
fs
push
cmp
and
push
lea
push
imul
inc
add
dec
mov
and
xor
jle
add
imul
add
(bad)
jl
and
push
jo
inc
add
(bad)
cld
mov
inc
mov
add
jle
psadbw
mov
sub
dec
jne
jp
add
inc
cmp
mov
jl
jle
aam
addr16
int3
push
sbb
stos
and
adc
inc
add
push
test
lock
and
sar
shl
jne
jno
sbb
mov
push
inc
dec
fidivr
ret
adc
mov
fdiv
inc
fadd
call
sub
mov
sbb
cmc
test
jl
xchg
push
and
mov
add
mov
imul
mov
and
ret
enter
dec
packssdw
mov
jmp
aaa
add
mov
and
push
dec
cmp
rcl
push
add
inc
add
(bad)
and
cmp
jl
in
jb
and
cmp
add
inc
dec
cmps
pop
dec
adc
mov
retf
icebp
in
and
xchg
lds
mov
dec
adc
add
or
into
and
push
adc
sub
jb
loope
ins
sub
jle
add
lea
push
push
push
scas
mov
xor
out
in
pop
add
xor
lods
js
iret
scas
cmp
sub
ja
fs
sub
mov
popf
je
fadd
shl
jg
jg
out
push
adc
pop
fstp
dec
mov
cwde
mov
imul
add
mov
retf
and
(bad)
push
scas
cs
xlat
cmp
test
cmp
retf
xor
adc
inc
cdq
mov
add
inc
loopne
mov
int3
(bad)
enter
int3
clc
dec
dec
and
xor
mov
mov
es
test
push
add
and
ror
mov
je
pop
sbb
mov
xor
cmp
add
add
jno
call
fld
inc
add
inc
add
xor
scas
jmp
xor
add
pinsrw
xor
js
and
mov
cmp
stos
cdq
lea
push
idiv
inc
mov
(bad)
mov
lds
(bad)
cmp
jle
and
inc
mov
and
jmp
mov
sbb
mov
outs
sub
mov
shr
pop
mov
pop
pop
ret
js
push
cld
test
jne
fld
push
adc
out
call
fidiv
fcom
jnp
inc
inc
inc
jne
fstp
fld
jb
lods
sbb
mov
sbb
in
add
adc
sub
pop
mov
je
add
sbb
mov
out
(bad)
call
ror
shr
mov
dec
sbb
sbb
sub
and
and
dec
inc
mov
and
aam
jmp
and
mov
adc
xor
ret
sub
rcr
fadd
ja
mov
inc
push
inc
adc
inc
ins
push
test
je
mov
pop
sbb
sub
test
jle
mov
aad
mov
adc
shl
inc
(bad)
pop
push
mov
mov
sub
or
cmp
lea
add
push
push
mov
add
call
sub
test
enter
push
shl
daa
fcom
aad
fst
cmc
dec
xor
or
cmp
popa
call
movs
je
mov
push
call
adc
dec
sbb
call
movs
call
test
ror
call
adc
add
loop
add
rol
lock
mov
leave
mov
sub
mov
cmp
sub
adc
pop
daa
(bad)
mov
cmc
pop
loop
cmp
mov
mov
inc
mov
sub
push
push
call
xchg
jmp
pusha
push
push
cmp
pop
mov
and
cmp
mov
data16
es
in
pop
adc
mov
fist
pop
add
add
inc
jl
cwde
sar
mov
or
adc
ins
sub
mov
jl
leave
fnstsw
jle
test
or
adc
add
cmp
ror
dec
mov
ret
out
or
push
xor
push
jg
inc
sub
inc
lds
mov
rol
adc
aas
sub
cmp
loopne
jo
jg
cld
adc
sar
outs
hlt
sti
jg
push
adc
fidiv
enter
jle
mov
in
(bad)
aad
push
push
lea
push
cmp
sub
and
jmp
lods
sub
sub
adc
ret
and
dec
inc
push
fiadd
bndldx
bound
push
add
inc
mov
cmc
cmp
xchg
lock
loope
mov
push
jne
inc
mov
mov
enter
sub
mov
push
inc
jne
cmp
jne
add
mov
pop
sub
sub
push
imul
cld
ja
in
dec
push
pop
pop
mov
dec
mov
pop
sbb
psrld
or
adc
ret
cmp
jl
xlat
sub
push
and
cmp
stos
adc
or
inc
lds
sub
xchg
sub
data16
fild
aaa
js
js
repnz
add
xchg
xchg
cmp
push
push
cmps
test
loopne
push
mov
loope
add
dec
xor
mov
mov
cmp
jle
jb
adc
mov
popa
sbb
outs
mov
add
xchg
lods
in
iret
jne
dec
ror
aam
mov
inc
ja
add
pop
inc
inc
mov
xchg
xor
and
sar
jle
push
and
mov
push
push
call
sbb
js
push
jmp
jg
push
and
inc
add
std
sub
mov
cdq
jno
and
sar
cmp
jle
adc
push
inc
or
clc
mov
mov
xor
mov
inc
jle
mov
outs
mov
neg
neg
cmp
mov
test
jle
lods
test
jle
mov
ror
adc
jmp
push
push
jg
fld
stos
jmp
ret
cdq
ins
inc
in
push
je
repnz
jmp
fistp
mov
mov
inc
add
mov
movups
mov
(bad)
(bad)
cli
and
je
lea
push
dec
add
sbb
or
adc
add
sbb
sbb
lods
imul
jne
into
pop
and
lsl
rol
dec
mov
or
or
mov
out
jae
repnz
ret
ret
and
push
sbb
lea
test
jl
aam
mov
lea
cmp
inc
mov
sub
mov
(bad)
repz
sbb
push
sbb
jmp
les
and
jmp
push
inc
jle
mov
lea
mov
add
mov
sub
xor
add
inc
and
ror
mov
adc
dec
mov
pop
push
sbb
adc
inc
punpckhbw
int3
shl
imul
dec
push
dec
ins
fcom
(bad)
sub
and
inc
or
fist
enter
sub
shl
pop
push
movs
push
push
add
inc
and
xor
out
add
cmp
jnp
call
add
add
lock
hlt
push
fmul
sub
adc
mov
int3
and
fiadd
dec
adc
out
mov
nop
push
xchg
popa
add
in
and
pop
sbb
cmps
mov
add
pop
repz
adc
lock
fisttp
sbb
or
or
sbb
push
into
and
add
out
ret
lock
sbb
or
mov
push
push
push
mov
dec
stos
or
mov
jne
add
adc
push
sub
ja
jne
int
shl
sti
sub
xchg
adc
jae
out
add
and
cmp
add
adc
call
mov
or
jbe
cwde
leave
ret
push
or
or
adc
in
clc
loopne
add
mov
push
sbb
mov
ins
out
push
push
repz
int3
inc
repnz
and
adc
push
imul
cmps
inc
and
add
cmp
adc
adc
mov
xchg
ror
sub
inc
cmps
mov
push
(bad)
out
ficom
push
or
dec
add
mov
jl
bound
inc
cld
push
mov
inc
(bad)
out
in
sti
jge
and
in
mov
mov
inc
and
adc
aaa
add
or
outs
test
sub
adc
jl
sbb
rol
lds
mov
mov
mov
add
dec
jne
lea
add
dec
jne
mov
mul
pop
pop
pop
out
and
xor
rol
ss
shl
not
or
aaa
push
inc
pand
or
push
lock
into
pusha
fwait
add
nop
jmp
outs
or
and
out
clc
xor
inc
shr
push
cmp
fisttp
sub
jmp
mov
loope
imul
repz
and
xchg
jae
mov
mov
sbb
jnp
in
into
pop
sbb
retf
adc
pop
xor
ror
(bad)
pop
inc
xor
repz
loope
sbb
mov
push
outs
push
xchg
sub
test
scas
test
inc
push
xchg
xchg
push
test
xor
push
add
lea
arpl
jmp
shl
mov
imul
push
dec
xchg
test
jne
xor
cld
scas
aas
clc
ret
lea
test
adc
xor
call
div
ror
cmps
adc
inc
mov
clc
dec
and
add
xchg
adc
std
sbb
aaa
sbb
leave
je
mov
mov
pusha
out
dec
xchg
add
add
xchg
stos
je
les
ss
xor
jbe
fsub
ja
jmp
aad
inc
js
inc
sub
clc
pop
in
push
push
cwde
mov
inc
dec
mov
mov
cld
push
dec
sbb
pop
sub
or
lods
mov
bound
add
mov
cmp
pop
dec
add
add
jmp
in
sub
xor
push
add
mov
popa
push
jl
(bad)
lea
and
and
jno
arpl
mov
xor
movs
inc
cmp
dec
aaa
xor
aaa
js
inc
stc
or
add
mov
cmp
pop
add
jmp
add
sbb
sbb
push
dec
jmp
cmp
push
inc
pop
jmp
push
cs
sbb
mov
sahf
pop
inc
sbb
mov
pop
mov
push
movs
jmp
out
or
xor
pop
dec
add
pop
fild
je
push
jmp
je
cmp
je
fist
into
retf
add
(bad)
cmps
js
jg
je
jo
jge
mov
xlat
(bad)
call
mov
mov
mov
mov
mov
mov
push
mov
push
or
add
test
add
test
movs
or
loopne
mov
jbe
push
push
lea
push
push
push
fmul
adc
sar
push
add
loopne
jae
(bad)
jo
sar
mov
push
popa
je
adc
inc
mov
push
dec
xadd
fdiv
mov
mov
inc
mov
push
push
push
push
push
and
cld
mov
std
loope
push
dec
push
mov
push
and
ins
aaa
inc
push
push
push
adc
mov
sub
xchg
(bad)
(bad)
mov
imul
rol
cmp
jne
mov
mov
mov
add
push
push
add
push
xor
push
xor
add
dec
push
add
or
lahf
xor
xor
mov
push
aaa
adc
inc
shr
pusha
call
aaa
and
rcr
ins
and
shr
je
lahf
and
push
fstp
adc
cmp
and
stos
or
aad
xlat
mov
data16
inc
inc
and
and
dec
inc
push
loopne
scas
push
sbb
mov
(bad)
xlat
mov
call
jne
ja
and
imul
shl
cmps
add
test
mov
mov
mov
dec
jo
hlt
ret
or
cmp
mov
scas
xor
imul
or
fdivr
mov
cmp
jae
stos
(bad)
(bad)
cmp
push
add
inc
and
fmul
icebp
inc
mov
fs
xor
mov
call
retf
fmul
faddp
sub
stos
out
call
jl
mov
jmp
data16
jg
cmc
outs
and
inc
dec
jne
ins
inc
fstp
fstp
jmp
sbb
(bad)
push
add
cmp
aad
push
pop
push
out
push
cmp
aas
jo
sbb
jns
je
sub
push
jbe
pusha
adc
dec
push
pop
mov
sub
int
cmp
mov
cmps
mov
cmp
push
inc
adc
add
out
adc
ror
and
jnp
xor
push
fadd
les
hlt
mov
js
jns
xor
and
pusha
add
lock
sbb
or
mul
pop
cmc
js
xor
xchg
(bad)
pusha
xor
lds
pop
xchg
into
push
inc
mov
pop
mov
jo
or
inc
jecxz
test
jp
pop
and
push
jo
(bad)
call
jl
mov
call
and
in
clc
xor
out
dec
add
js
in
je
stos
jmp
fist
jl
add
jg
mov
ss
inc
adc
outs
and
inc
mov
pop
push
push
inc
es
scas
or
cmps
pop
adc
cmp
and
bnd
xlat
mov
jmp
add
cmp
xchg
and
fdiv
dec
sbb
mov
fld
and
mov
jb
dec
lds
xor
enter
(bad)
inc
cwde
jmp
xchg
jb
pop
jecxz
pop
inc
cmp
and
and
in
cld
fcom
pop
(bad)
popf
xchg
enter
cmp
mov
and
add
jmp
add
jae
call
mov
pop
mov
cmp
jne
push
fs
xchg
and
neg
push
shr
fistp
jo
rcl
add
sbb
sub
out
cmp
push
xchg
xor
dec
add
in
jb
test
ss
push
push
cmp
cmp
push
and
mov
add
imul
jbe
ret
(bad)
fcomp
mov
push
push
push
int3
mov
sti
je
mov
jnp
adc
shl
pop
mov
lock
clc
and
push
loopne
into
dec
retf
or
mov
outs
jne
sub
daa
bswap
sub
mov
adc
pop
push
ret
cmp
leave
sbb
sbb
jp
cmp
(bad)
fbstp
jne
add
or
mov
iret
adc
or
push
push
les
ss
cmp
cmp
xchg
jmp
inc
jae
sti
or
pop
pop
push
and
push
pop
fnstcw
ret
aaa
cmp
adc
push
push
xchg
mov
shl
inc
adc
(bad)
adc
mov
mov
mov
push
mov
sub
or
sub
or
out
xchg
sbb
shr
or
sbb
retf
nop
ret
inc
inc
add
add
bound
inc
ja
test
jl
fwait
sub
imul
or
inc
and
add
cmp
(bad)
cmc
mov
push
or
sub
mov
cld
add
jne
in
mov
and
es
push
das
cdq
mov
add
inc
cmp
call
jne
dec
sbb
cwde
push
ret
pusha
or
arpl
xor
mov
cmp
and
add
push
sub
(bad)
mov
jmp
inc
cdq
dec
pop
or
out
jns
sbb
pusha
xor
in
call
test
pop
cmp
je
cmp
je
add
aas
inc
call
add
mov
call
sbb
(bad)
arpl
pop
add
lds
xchg
xlat
cmp
mov
and
inc
and
add
inc
scas
sub
xchg
mov
loop
push
dec
out
movs
dec
xchg
cwde
fcomp
add
outs
inc
push
add
les
push
push
rcl
adc
or
cmps
push
es
adc
je
and
push
push
es
sar
fdivr
dec
les
push
jno
mov
mov
pop
push
out
xchg
pop
inc
cli
cs
mov
sbb
sub
retf
in
adc
sub
pop
pop
or
inc
adc
sub
cmp
xchg
pop
mov
and
xor
icebp
inc
cs
push
sub
popa
and
js
pop
pop
(bad)
jmp
and
add
add
xchg
sub
in
sub
arpl
jmp
mov
in
push
or
cmp
inc
je
xor
mov
add
mov
fiadd
sbb
inc
and
push
push
jmp
mov
pop
push
cmp
push
inc
xor
xor
inc
add
lds
sub
or
adc
xor
(bad)
ffreep
test
push
inc
add
(bad)
mov
mov
cmp
mov
jne
cmp
shl
cmc
je
cmp
sub
mov
mov
movs
mov
mov
(bad)
pop
inc
fadd
xor
add
add
aaa
jge
inc
outs
xor
mov
scas
pop
(bad)
idiv
mov
(bad)
lea
pop
mov
pop
clc
cmp
cli
pop
pop
ds
inc
lahf
mov
sbb
sbb
cmovns
mov
inc
test
mov
adc
inc
and
add
or
mov
or
push
and
push
add
or
push
sbb
pop
mov
pusha
shl
movs
je
push
inc
cwde
rcr
test
dec
pop
mov
push
mov
lea
jmp
xchg
aas
cmp
push
movs
add
inc
adc
or
cmp
push
(bad)
xor
xor
mov
xor
add
push
cmp
psubq
pop
or
or
jne
cmp
jne
mov
sar
call
fcomp
call
xor
add
cmp
adc
daa
cmp
push
adc
or
(bad)
mov
leave
jne
cmp
jne
cmp
jbe
outs
cdq
sub
and
push
aam
(bad)
fisttp
jbe
cmp
cli
inc
jne
jne
jne
cmp
jne
xlat
adc
inc
sbb
dec
add
stc
aaa
cmp
cmp
add
add
cmp
jne
jmp
mov
adc
ins
xor
push
out
xor
or
sbb
jne
js
add
push
cmp
sbb
mov
iret
js
dec
adc
sbb
push
lea
mov
jmp
mov
lea
push
push
mov
(bad)
int3
adc
and
add
or
jne
call
lea
dec
cmp
jmp
call
add
xor
dec
dec
rol
shl
frstor
std
out
adc
loopne
lds
cwde
push
enter
add
or
imul
add
push
aaa
add
xor
lea
and
and
mov
or
and
and
add
in
mov
cmp
dec
fisub
or
add
test
inc
loopne
cmp
jo
xor
pop
add
xchg
ret
push
call
(bad)
out
mov
(bad)
cmp
jge
mov
mov
rcr
add
push
push
lds
mov
lea
push
into
(bad)
(bad)
cmp
(bad)
push
xor
clc
adc
test
cmp
jb
cmp
shr
cli
jne
mov
stc
and
or
and
call
sete
cmp
jne
inc
jmp
mov
push
xchg
push
xor
jle
(bad)
cmp
mov
pop
xchg
out
dec
push
push
bound
mov
mov
enter
ja
cmp
je
push
mov
jmp
or
sbb
or
adc
inc
mov
push
mov
mov
cdq
sub
mov
sar
push
mov
push
sar
add
add
push
push
call
fistp
or
sbb
cmp
je
xchg
push
mov
pushf
imul
pop
jae
jno
dec
cmp
lods
and
stos
and
xor
jg
jp
pop
mov
xor
xchg
adc
setne
add
mov
sbb
or
xor
rcr
dec
inc
in
inc
fdivr
inc
test
data16
mov
and
mov
in
cmp
retf
nop
(bad)
ret
mov
sub
shufps
bnd
pop
or
jne
mov
test
xor
retf
mov
test
mov
jne
jmp
push
fcom
adc
xor
sbb
gs
lea
cmp
pushf
push
push
or
sbb
inc
jno
mov
(bad)
push
rcr
ds
cmp
outs
add
push
add
cmp
je
jno
(bad)
(bad)
push
xor
or
adc
pop
add
fild
ja
les
fmul
add
fmul
(bad)
sub
fmul
cmp
gs
mov
mov
adc
jecxz
das
jmp
xor
retf
adc
add
nop
mov
aam
dec
sar
ror
sub
push
mov
sbb
je
fimul
call
xchg
cli
mov
lock
call
and
dec
add
leave
je
mov
test
fisttp
in
or
add
mov
xchg
cmp
and
push
jo
aam
adc
test
xor
fadd
cmp
test
adc
mov
test
sbb
jmp
cmp
push
add
push
sub
in
push
inc
mov
and
cmp
push
or
or
xchg
ins
pop
mov
cmp
lds
sub
pop
add
sub
mov
add
fisttp
pusha
sbb
iret
sbb
mov
sub
int3
icebp
or
sbb
fidivr
mov
pop
fisttp
push
je
mov
sbb
sub
adc
fst
or
sub
sub
xchg
adc
xor
(bad)
jge
rcr
leave
mov
enter
mov
mov
or
adc
adc
clc
jmp
sub
push
fist
jmp
cmp
je
mov
sub
fimul
leave
inc
xor
aas
test
xchg
dec
and
push
cmp
cmp
add
fcomp
mov
mov
test
push
cld
add
rol
and
jne
lahf
or
add
dec
cmp
jne
mov
cmp
call
sub
adc
addr16
mov
lea
inc
popa
adc
adc
and
push
push
push
xor
mov
fdivr
push
into
fmul
push
mov
add
and
pop
xchg
add
mov
or
jnp
dec
jmp
or
jmp
loopne
iret
add
test
je
mov
push
cmc
and
push
add
das
or
mov
push
push
xor
cmc
dec
lds
aaa
or
pop
pop
aas
push
add
in
ret
test
sbb
cmp
je
xor
aam
dec
out
or
xchg
stos
cli
loope
mov
sub
fist
loop
shl
cwde
or
xlat
mov
adc
xlat
je
mov
jge
popa
or
lahf
mov
inc
sbb
or
xor
sub
mov
iret
push
sub
push
mov
fcmovnbe
gs
nop
mov
add
scas
fst
add
loopne
ds
add
out
add
dec
push
add
mov
popa
pop
inc
mov
xor
mov
sub
and
pusha
out
pop
mov
push
dec
lds
lock
jle
or
es
mov
or
dec
call
popa
or
ror
adc
add
push
dec
sbb
jmp
enter
jae
loopne
inc
add
adc
dec
ds
test
inc
or
leave
mov
stc
sbb
ins
adc
push
dec
or
mov
icebp
sub
xchg
inc
pop
sub
ins
dec
aam
imul
sbb
leave
or
mov
shl
mov
out
or
fld
push
add
mov
xor
inc
xor
psubusb
fldln2
adc
dec
sbb
sbb
or
shl
ret
sbb
pop
add
into
call
cmps
mov
xchg
aas
inc
cmps
rcr
or
add
jmp
ret
fdivr
test
mov
add
dec
(bad)
in
push
push
add
or
iret
sbb
aas
dec
and
or
pushf
fcom
mov
(bad)
mov
mov
mov
xchg
mov
movs
pop
push
mov
fst
iret
aam
jb
add
(bad)
je
mov
sub
mov
enter
pop
cmc
add
and
add
push
mov
xchg
push
aam
add
sbb
mov
pop
ror
ja
sbb
push
mov
pop
fucomp
dec
xchg
mov
or
fild
out
cmp
xchg
out
out
mov
lea
rep
add
jne
add
test
jnp
(bad)
jmp
mov
mov
mov
shl
adc
sub
inc
ficom
lds
dec
call
in
jg
pop
mov
cmp
jne
cmp
clc
inc
and
jne
push
pop
(bad)
mul
aas
push
push
pushf
add
test
cmp
jne
out
pusha
jp
mov
scas
clc
push
push
popf
sub
inc
jmp
push
pop
sub
xor
shr
lea
idiv
mov
mov
push
imul
sti
sbb
icebp
fwait
push
cmp
je
mov
hlt
dec
push
fist
mov
out
std
mov
ror
mov
dec
fwait
cmp
cmps
push
and
push
(bad)
jmp
lock
neg
mov
mov
mov
mov
and
and
inc
push
or
mov
mov
mov
sbb
and
add
cmp
ret
push
mov
pop
aad
xor
adc
mov
mov
sbb
jp
adc
cs
or
jle
jno
mov
xor
mov
inc
cmp
ja
adc
pop
mov
sub
jp
push
lahf
mov
adc
push
sub
call
addr16
mov
mov
mov
mov
shl
mov
sub
add
xchg
xor
stos
mov
add
jmp
int3
shl
push
in
add
jmp
cmp
jg
mov
inc
sbb
or
dec
and
pop
inc
and
jl
mov
sar
enter
and
sbb
out
mov
dec
mov
add
add
add
cmc
fiadd
sbb
scas
(bad)
dec
xchg
dec
pop
inc
add
add
mov
dec
add
add
add
in
or
or
xor
pop
inc
ror
test
call
inc
and
xor
xor
mov
data16
jmp
xor
xor
mov
mov
sub
sub
inc
xor
inc
cmp
adc
and
jmp
mov
or
push
add
push
mov
lar
(bad)
inc
and
outs
adc
(bad)
sti
clc
inc
je
inc
or
xor
or
inc
adc
sbb
ds
and
fmul
pop
jecxz
sti
scas
lds
add
mov
mov
mov
dec
adc
and
test
adc
repz
aad
mov
lea
inc
xor
lock
adc
leave
push
jne
add
mov
cmp
jbe
cli
sub
or
inc
jle
pop
into
mov
mov
adc
mov
dec
mov
adc
sbb
(bad)
icebp
loope
add
adc
and
jmp
xor
jge
inc
add
add
cmp
imul
enter
push
mov
xor
add
dec
mov
stos
and
cmp
add
ret
mov
xchg
fiadd
in
or
and
test
push
push
push
je
cli
mov
jbe
and
add
les
test
cmp
adc
or
jbe
or
mov
mov
out
js
or
sub
out
mov
push
or
dec
adc
retf
xchg
add
cmp
ja
add
push
add
aaa
cdq
push
cdq
mov
hlt
and
(bad)
inc
add
out
and
(bad)
hlt
and
ror
mov
and
inc
xor
add
add
pop
cmp
fs
push
and
xor
or
sub
test
xlat
mov
pop
add
mov
push
es
jl
(bad)
popa
jle
pop
push
shl
loop
jne
push
dec
inc
or
or
xor
adc
je
dec
jge
sub
inc
adc
cmp
hlt
push
je
mov
mov
mov
mov
inc
fimul
sub
cs
sbb
sbb
sub
inc
jo
adc
inc
aaa
test
pusha
cmps
enter
rcl
daa
and
cmp
clc
mov
mov
shl
mov
leave
mov
jmp
aas
loop
push
ja
mov
adc
test
rcl
sub
cmp
mov
outs
clc
xor
jo
mov
add
mov
push
mov
icebp
cmps
cmps
xchg
aaa
inc
and
push
sbb
xchg
sbb
out
ss
add
cli
or
rcr
add
imul
imul
pop
aad
std
shl
shl
out
sbb
loope
pop
push
jne
into
lock
cmp
inc
sub
je
sbb
mov
jecxz
fist
add
push
adc
jg
lea
mov
push
mov
xor
sub
rcl
push
lods
or
jp
add
adc
mov
sbb
punpcklbw
jmp
push
jne
je
adc
add
rcr
dec
rol
mov
cld
push
or
add
push
pop
icebp
aam
mov
mov
push
push
jb
in
inc
popf
jecxz
dec
xchg
mov
mov
dec
mov
fadd
mov
adc
shr
push
mov
sub
or
mov
jl
mov
pop
mov
and
dec
and
jg
jmp
and
js
pop
sub
mov
mov
cld
ja
mov
sti
inc
and
add
push
ins
test
aaa
loop
pop
in
push
add
adc
add
arpl
push
mov
pop
pop
inc
add
mov
addr16
inc
or
(bad)
cmp
mov
add
pusha
pop
cmp
(bad)
je
mov
add
or
cmc
pushf
and
xchg
sub
push
push
outs
jmp
jo
loopne
retf
push
xor
(bad)
loopne
adc
adc
test
sbb
push
ins
popa
mov
mov
pop
jp
movs
int3
adc
mov
sbb
push
push
mov
xor
push
(bad)
out
loopne
bound
pop
and
sub
(bad)
sub
pop
xor
inc
xor
mov
mov
mov
(bad)
push
inc
mov
mov
mov
mov
mov
mov
push
cmp
or
ja
not
je
mov
loop
xchg
push
adc
jne
mov
mov
jg
jmp
mov
mov
adc
into
je
lock
call
xchg
mov
add
cmp
jne
mov
mov
mov
(bad)
mov
xchg
pop
retf
fbstp
mov
sbb
inc
mov
adc
jb
sub
xor
add
aad
call
in
push
cld
and
leave
dec
nop
cmp
jbe
cmp
add
cmp
push
arpl
rol
push
mov
push
cmp
jbe
inc
or
jl
add
and
sar
hlt
outs
or
mov
mov
and
sub
jmp
loop
and
shr
shl
icebp
inc
push
je
add
lea
mov
add
mov
sbb
sbb
retf
inc
pop
sub
fsub
push
add
leave
mov
data16
fild
adc
call
sbb
mov
mov
adc
adc
clc
fnsave
sub
dec
and
dec
adc
dec
add
push
xor
sbb
jns
mov
mov
paddd
jmp
fmul
add
pop
ins
sub
(bad)
inc
shr
push
mov
sub
mov
imul
sar
inc
sbb
cmp
jae
sbb
aas
adc
out
push
add
sub
add
cmp
adc
jle
jo
jmp
ja
aas
inc
(bad)
jo
cmp
jae
cs
lea
sbb
lea
dec
add
lods
xor
outs
mov
fild
xor
cmp
jne
cmpps
push
ror
shr
imul
mov
shl
enter
or
loope
fucomip
(bad)
dec
ror
dec
pusha
mov
mov
sub
sbb
dec
sub
sub
(bad)
(bad)
stc
test
jne
or
jmp
lea
lea
push
jg
in
jle
add
jns
aaa
imul
(bad)
fmul
and
and
and
or
cmp
call
outs
ins
mov
mov
mov
mov
mov
cmp
fld
outs
push
adc
cmp
fst
sar
or
clc
call
adc
ret
sar
cmp
jae
jg
test
shr
mov
adc
test
adc
idiv
fld
jae
jmp
jbe
mov
add
push
push
pop
xor
imul
rcr
pop
xchg
mov
je
call
shl
jne
mov
or
(bad)
sbb
sbb
and
faddp
or
pop
pop
mov
pop
cmp
push
pop
aam
xlat
jecxz
aad
add
xchg
(bad)
or
inc
out
call
and
push
mov
outs
mov
cmp
jne
cmp
je
mov
mov
cmp
mov
xlat
inc
hlt
sbb
scas
je
push
outs
cmps
fadd
aad
(bad)
loopne
jne
jne
fcom
mov
(bad)
call
stos
rcr
jg
(bad)
jne
mov
je
outs
mov
mov
(bad)
mov
lods
stos
adc
mov
je
sub
fnstcw
out
cmp
je
push
call
std
or
and
mov
pop
and
jnp
xor
mov
or
pop
pop
add
loopne
and
ins
js
fcom
push
cmp
lods
pop
mov
pop
enter
cmp
fstp
pop
or
popa
(bad)
cmp
test
test
std
aaa
push
in
dec
or
push
pusha
mov
adc
(bad)
jg
sti
dec
pusha
mov
or
pop
push
add
push
add
adc
(bad)
push
ja
js
arpl
je
dec
inc
add
cdq
add
sbb
call
mov
xlat
inc
out
add
push
cld
(bad)
adc
test
mov
je
lea
jg
adc
add
inc
or
mov
cmp
sahf
call
sub
and
inc
dec
jmp
mov
loopne
fs
or
hlt
popa
(bad)
je
pop
push
arpl
mov
clc
jle
(bad)
cmp
jne
cmp
push
lea
sbb
inc
push
cmp
jne
jnp
or
jg
cmp
ret
cmp
je
cmp
and
test
fs
adc
dec
or
in
popa
cmp
dec
mov
mul
scas
mov
push
in
push
jo
mov
pop
inc
rcr
jae
test
sub
test
inc
adc
jg
cmp
jae
and
push
mov
jns
cs
mov
test
mov
ror
xor
sbb
pop
sub
je
loopne
sahf
sbb
lods
add
loopne
add
test
or
ss
jbe
cmc
jne
jmp
push
nop
ret
xchg
push
push
add
or
idiv
inc
test
mov
push
pop
sbb
data16
cmp
mov
cmp
(bad)
ja
sbb
jmp
and
mov
mov
mov
mov
js
es
or
push
push
sub
mov
mov
ja
(bad)
mov
sar
ror
test
add
add
fnstenv
mov
or
dec
adc
leave
pop
das
mov
mov
and
inc
adc
lock
cmp
mov
(bad)
fsubr
fild
mov
push
inc
neg
fisttp
je
mov
sbb
inc
adc
cli
inc
or
add
mov
and
add
push
cmp
je
mov
cmp
mov
lea
imul
fst
mov
mov
add
cmp
(bad)
jmp
pop
add
ror
test
sbb
jae
push
ret
jne
sbb
fiadd
xchg
data16
cmp
je
test
dec
test
cmp
inc
daa
pop
mov
lea
mov
sbb
sub
jb
vcmpsd
dec
xchg
push
sbb
rol
add
bound
xor
or
rol
dec
cld
(bad)
or
xor
int
retf
add
(bad)
fwait
push
sub
mov
mov
sbb
jg
out
and
cmp
jb
mov
cmp
jne
mov
or
mov
jmp
mov
jae
xchg
mov
push
push
mov
adc
sbb
xor
xchg
mov
push
xchg
fadd
aas
dec
inc
jne
lea
mov
sbb
mov
push
frstor
sbb
mov
lods
inc
xchg
int
pop
cmps
add
or
test
je
xor
pop
ror
add
jecxz
push
ins
inc
or
enter
int
in
xor
mov
and
push
sar
shl
or
test
jne
adc
sbb
mov
pop
cmp
icebp
(bad)
mov
ror
inc
mov
add
add
(bad)
out
clc
retf
cmp
push
jne
sub
sub
sub
ret
cmp
jbe
cmp
xor
push
push
je
pop
mov
pop
pop
mov
push
hlt
(bad)
mov
mov
mov
sub
mov
cmp
fs
(bad)
push
push
cmp
dec
cmp
jae
xor
(bad)
(bad)
cmp
je
mov
mov
mov
xor
add
inc
sub
ja
shl
div
cdq
or
ret
push
dec
inc
cs
inc
add
lock
push
mov
sub
push
dec
dec
mov
mov
mov
xor
mov
(bad)
ror
add
mov
lock
cwde
jnp
pop
jne
or
out
neg
ror
inc
dec
pop
and
test
push
scas
sub
jmp
cmp
push
je
cmp
(bad)
dec
lock
mov
or
outs
bound
or
xchg
setge
aaa
inc
cwde
sub
jge
adc
cmp
shr
mov
mov
(bad)
inc
shl
or
ror
xor
add
xor
and
dec
fdivr
inc
sbb
shl
div
mov
ret
sub
imul
out
mov
rcr
inc
add
mov
push
mov
mov
lea
cmp
push
call
jno
rcl
jne
ret
add
inc
pushf
lds
rcl
adc
sbb
adc
or
ins
mov
jne
pusha
add
rep
mov
mov
lea
jg
stos
jl
sar
add
mov
mov
mov
cwde
cli
xchg
stos
or
outs
or
test
xor
ret
xor
add
add
pop
or
cmp
jae
mov
add
mov
push
adc
jne
std
push
shl
dec
sub
push
xor
jbe
out
loop
pop
pop
iret
pop
jne
cmp
jbe
add
push
or
pusha
loope
add
rcr
and
and
cmp
push
in
jmp
adc
pop
mov
call
loopne
mov
or
pop
xlat
fild
mov
push
lea
jbe
sub
loop
mov
add
es
inc
in
lea
sti
in
ja
add
retf
dec
and
(bad)
dec
lea
mov
mov
lea
cmp
je
mov
gs
sub
and
out
or
mov
sbb
dec
jae
leave
push
neg
sbb
pop
nop
test
inc
dec
lea
mov
xlat
shr
loop
or
cmp
jne
mov
sbb
pop
cdq
fisttp
add
fstp
cmp
ret
jne
je
push
rol
or
mov
or
or
add
or
sub
jne
or
jne
popa
xor
jo
cld
rcr
ror
mov
mov
adc
cmp
add
xor
pusha
ret
nop
sbb
or
push
mov
pop
test
aaa
pop
cmp
sbb
jl
sbb
(bad)
xchg
jp
icebp
push
push
push
inc
mov
add
cmp
inc
cmp
pop
xor
and
popf
add
inc
push
adc
loop
out
xchg
mov
fsubr
jle
cmp
ret
sbb
mov
sbb
push
pop
mov
ror
std
pop
std
adc
mov
jne
add
pusha
xor
pop
mov
mov
mov
push
pop
popf
mov
bound
sub
sub
dec
push
push
call
inc
sbb
fbstp
or
stc
mov
mov
or
fld
test
pop
jmp
neg
inc
pop
in
icebp
xor
mov
fstp
aam
mov
adc
xor
dec
inc
mov
or
sbb
or
call
je
jnp
inc
push
or
shl
dec
bound
fdivr
dec
dec
nop
mov
and
push
mov
(bad)
je
or
ins
sbb
inc
inc
inc
mov
cmp
add
dec
dec
mov
test
inc
dec
push
rcl
push
dec
mov
and
test
fist
dec
jae
loope
cmp
jne
iret
mov
test
cli
cmp
loope
retf
add
mov
shr
mov
push
aam
mov
inc
pop
ins
pop
rol
and
dec
dec
int
mov
sar
jge
inc
mov
inc
and
adc
adc
enter
pop
push
push
or
test
popf
lds
add
(bad)
mov
js
icebp
cmps
xchg
icebp
ds
test
add
ja
sahf
add
jmp
or
sbb
vunpcklps
add
(bad)
or
jae
jmp
pop
push
sbb
adc
aaa
cld
jg
xor
mov
mov
add
push
push
call
dec
adc
nop
jl
jmp
add
les
dec
jne
ret
mov
mov
ret
xor
mov
fild
adc
or
retf
pop
add
popa
les
or
std
aaa
inc
mov
test
je
mov
xor
into
and
test
sbb
jmp
jo
jmp
sbb
adc
fisub
jmp
lea
test
outs
mov
inc
shl
push
sbb
pop
and
sbb
add
shl
mov
mov
rep
mov
add
add
stc
jecxz
in
mov
jbe
adc
fnstsw
and
lock
popf
sub
es
jne
mov
or
dec
ins
cdq
and
sti
mov
lea
je
mov
(bad)
dec
and
sub
add
test
je
cmp
inc
int
lock
cmp
shr
and
cmp
jne
(bad)
cmp
cmps
fwait
pop
xlat
add
lea
cmps
pushf
test
sbb
nop
mov
add
lea
pop
rol
cmp
or
dec
or
and
cs
mov
dec
mov
stc
cs
push
xchg
test
ror
repz
mov
je
mov
sub
or
mul
sbb
inc
xor
sbb
adc
fsubr
ror
pop
or
pop
mov
lock
add
sub
mov
sti
and
sbb
or
inc
ret
sbb
(bad)
aaa
add
push
or
push
mov
push
mov
cmc
cmp
rep
jne
call
stos
repz
cli
test
jbe
je
ins
ins
add
sub
mov
fsub
sbb
mov
xchg
mov
sub
cmp
je
sub
ret
ins
neg
sub
jno
mov
ja
sbb
adc
cwde
sbb
push
rcr
add
sub
jne
mov
jg
mov
xchg
or
push
hlt
cmp
je
ins
repnz
outs
or
loope
pop
pop
neg
data16
or
jbe
or
adc
add
mov
leave
jo
outs
adc
sar
cmp
push
fstp
mov
sti
or
aas
(bad)
dec
pop
retf
xor
mov
clc
adc
dec
mov
xchg
and
dec
xchg
xor
js
ret
icebp
and
enter
adc
or
add
pusha
push
push
ins
shl
mov
push
out
sub
mov
mov
add
test
movs
(bad)
out
sbb
cmp
lea
je
arpl
sub
add
xchg
add
or
xchg
xlat
inc
xor
sub
inc
add
dec
and
arpl
inc
and
or
mov
(bad)
mov
jne
xor
mov
mov
pop
lea
mov
aaa
nop
arpl
cmc
mov
sub
mov
enter
lds
jecxz
sub
int
outs
lea
ror
retf
lock
out
or
fld
jne
adc
clc
dec
je
add
sub
je
fnstsw
fld
push
mov
mov
jne
imul
or
cmc
xor
ret
mov
push
shl
lock
jl
jge
cmp
je
ins
add
sbb
rcr
push
shl
jo
sub
sub
cmp
mov
jne
lea
bound
mov
mov
icebp
dec
test
xchg
xchg
aam
(bad)
scas
ja
jmp
aam
pop
xor
sbb
dec
mov
and
(bad)
scas
add
ret
mov
das
add
inc
sub
(bad)
pop
and
lods
fldcw
iret
daa
cs
bound
cwde
stos
call
pop
jae
(bad)
retf
int
mov
mov
popa
lea
add
jae
fisttp
aam
mov
ret
push
adc
mov
sub
cmp
add
add
lds
inc
pop
rol
inc
ins
sbb
and
ret
push
cmp
aad
cmp
pusha
lahf
mov
bound
adc
cld
mov
mov
pop
dec
and
je
jmp
jno
aaa
pop
sar
sbb
inc
cdq
jns
adc
mov
clc
loope
retf
cmp
cmp
pop
lea
and
cmps
sbb
adc
int3
ror
or
out
pop
mov
leave
sub
inc
mov
pop
mov
push
or
imul
and
add
or
rcl
cmp
shr
lds
es
add
ret
je
jb
or
es
jb
fbstp
test
jns
or
jg
lea
adc
les
mov
outs
test
lahf
cmp
cmp
rol
fisttp
rol
mov
es
sbb
rcr
push
daa
adc
sbb
mov
pusha
sub
push
aas
bound
aas
jecxz
mov
je
mov
lahf
add
mov
cmp
icebp
jo
jae
adc
pop
or
mov
mov
loope
inc
jae
mov
push
nop
jne
xor
sbb
ror
push
ss
pusha
into
cmp
xor
xor
push
or
(bad)
mov
(bad)
cmp
cmp
mov
adc
or
push
pushf
sub
(bad)
and
add
adc
sub
inc
scas
test
dec
lahf
and
dec
adc
mov
sub
lea
push
push
push
call
adc
popa
or
(bad)
adc
enter
add
stos
mov
and
and
imul
mov
arpl
add
push
inc
jae
adc
push
push
xchg
sbb
addr16
pop
mov
mov
jle
sti
jle
add
add
mov
jno
jmp
cld
adc
inc
and
sbb
(bad)
sbb
pop
adc
and
(bad)
jg
shr
push
mov
cmp
popa
and
push
inc
sar
add
cmp
push
jne
mov
ja
std
inc
add
jmp
push
xchg
inc
or
cmp
mov
xor
add
aam
scas
sub
add
adc
add
out
dec
pusha
mov
sub
(bad)
cld
mov
or
mov
mov
push
push
push
pusha
sbb
or
push
push
ret
clc
push
sar
and
ret
mov
sub
and
js
push
mov
ret
fist
sbb
aad
push
mov
inc
shl
or
jmp
jp
push
or
fs
and
pop
inc
xor
pop
mov
pop
xor
sbb
stos
pop
inc
sub
ficomp
cmp
and
add
and
and
es
lea
mov
push
lds
std
ja
int
adc
(bad)
push
loop
or
add
push
mov
sbb
loopne
call
movs
adc
scas
jo
imul
inc
adc
jmp
inc
adc
mov
mov
dec
dec
fsub
lea
lea
mov
push
push
mov
mov
lea
add
mov
ret
arpl
add
push
pusha
jecxz
test
pop
fucomp
jp
adc
adc
pop
idiv
or
stc
or
cmp
jne
push
pop
sbb
or
inc
and
push
stos
mov
pop
cld
cld
cmp
cli
dec
shr
xor
mov
cmp
je
xchg
loop
add
retf
jp
jp
test
lea
add
push
lea
es
imul
mov
dec
add
(bad)
sub
jns
add
dec
fwait
dec
push
cmp
jbe
adc
(bad)
pop
inc
mov
mov
push
mov
call
pushf
cmc
shr
and
add
mov
cmp
(bad)
add
dec
pop
mov
or
(bad)
lock
push
and
cwde
add
out
push
sub
push
cmp
add
shl
fucom
push
call
leave
loope
add
aaa
sbb
sub
shl
rol
cmps
xor
xor
xor
daa
mov
cmp
je
(bad)
call
or
enter
push
mov
mov
mov
push
mov
lds
xor
inc
add
add
repnz
(bad)
loope
sahf
mov
test
add
dec
dec
add
add
dec
add
or
dec
sbb
pop
enter
add
mov
inc
ret
ss
mov
or
and
xchg
sbb
push
push
push
cmc
fist
in
out
push
push
mov
add
enter
push
call
lods
test
fistp
test
mov
jmp
sbb
ds
dec
mov
add
inc
mov
inc
adc
push
or
dec
sbb
dec
lock
(bad)
fdivr
mov
fmul
mov
mov
sti
mov
jge
and
inc
xor
aas
in
outs
aaa
adc
sti
cmp
dec
arpl
mov
ins
call
mov
mov
mov
pop
adc
mov
add
fld
cmp
jge
sub
sti
ja
fisttp
dec
mov
fiadd
mov
ja
std
mov
and
jnp
inc
add
jg
adc
xchg
pop
fdivr
pop
in
sub
sbb
or
jb
add
pusha
push
and
push
dec
push
cmp
or
push
ror
dec
fmul
xor
sti
sbb
mov
xlat
adc
lock
xchg
sub
jo
mov
mov
push
sbb
dec
or
outs
add
mov
test
mov
or
xchg
inc
das
jbe
in
or
push
xor
mov
adc
xor
inc
sbb
(bad)
test
jne
jg
mov
push
mov
sbb
jne
cmp
hlt
ror
(bad)
fistp
and
mov
mov
mov
dec
pop
add
ret
mov
sub
mov
pop
rcl
cmps
mov
inc
sbb
sbb
jmp
fnstsw
push
and
pop
clc
add
pop
inc
jmp
les
icebp
mov
add
cmp
pop
lds
jl
xor
push
or
mov
mov
and
dec
inc
sbb
movs
mov
rol
mov
jo
mov
fdivrp
and
adc
add
mov
sbb
sbb
adc
pop
scas
add
jmp
inc
je
mov
sub
dec
je
mov
mov
lock
adc
in
pop
sbb
daa
dec
or
aas
inc
lea
xor
push
test
jle
and
jmp
cmp
je
inc
add
mov
or
es
inc
adc
jo
lods
xchg
test
enter
add
dec
sub
push
add
out
jbe
add
sbb
adc
inc
fist
jge
sub
mov
push
inc
dec
mov
das
shl
push
adc
je
pusha
adc
add
(bad)
cmp
pusha
movs
test
packuswb
add
add
inc
xchg
add
adc
aaa
dec
xor
push
mov
cmp
jl
mov
test
jge
xor
mov
cli
push
rcl
dec
add
mov
inc
hlt
dec
into
rcr
cmp
sub
cmps
loopne
retf
adc
push
mov
adc
adc
xchg
call
and
mov
mov
add
pushf
sbb
punpcklbw
xor
mov
push
inc
push
push
mov
push
push
push
or
cmp
mov
cmp
xchg
xchg
in
mov
add
sub
mov
push
outs
in
adc
mov
mov
and
or
(bad)
or
ja
jg
pusha
push
add
cpuid
ret
nop
xchg
mov
mov
cld
cmp
bound
mov
fwait
call
push
push
push
call
adc
push
add
aas
mov
in
pop
adc
shr
inc
xchg
mov
xchg
sub
ror
jg
stos
push
adc
dec
add
sub
adc
es
pop
cmps
inc
jno
pop
call
mov
rol
mov
and
and
ret
dec
push
cs
and
adc
or
mov
scas
jmp
loop
jle
movs
pop
inc
dec
and
pushf
popa
cmp
enter
push
cmp
jae
sub
dec
dec
adc
mul
add
loopne
out
mov
or
cmp
xchg
or
adc
jg
sbb
fild
sar
pop
mov
and
mov
push
push
push
(bad)
mov
dec
or
into
call
pop
lods
sub
cmp
push
add
dec
sub
xchg
call
sub
stos
inc
and
mov
or
add
out
sar
add
or
inc
bound
sub
mov
add
outs
mov
inc
icebp
add
sub
adc
aas
jne
sbb
call
or
jne
push
push
push
fisttp
or
ret
in
adc
fistp
sub
shr
and
arpl
fs
push
jbe
push
pop
or
cdq
mov
adc
mov
cwde
or
add
cmps
or
jns
cwde
jne
stos
sbb
mov
xor
mov
ror
in
or
cmp
imul
mov
lock
push
pop
and
out
add
cdq
clc
sbb
or
sbb
outs
or
xor
adc
pop
in
test
dec
xlat
inc
pushf
push
loopne
add
mov
mov
add
add
inc
push
push
test
rol
inc
sub
fucom
pop
or
call
xchg
into
pop
add
pop
sbb
cmp
mov
xchg
loopne
lods
or
xor
add
inc
xor
and
retf
add
daa
cmc
add
ss
mov
cli
test
pop
jo
xor
jge
test
jl
cmp
neg
loop
jg
(bad)
jl
sub
loope
sub
clc
jg
lea
cmp
loop
inc
or
adc
cmps
cmp
and
cmp
mov
adc
pop
xchg
lahf
mov
xor
add
mov
sub
lea
add
xchg
sub
cmp
jg
dec
cmp
mov
je
push
cs
xchg
sti
cmp
push
or
js
sub
idiv
pop
jle
aam
mov
loop
mov
mov
lea
or
call
adc
push
or
dec
or
inc
mov
jno
hlt
test
add
adc
add
adc
(bad)
(bad)
add
or
call
cmp
jne
mov
mov
(bad)
jmp
ror
mov
lea
mov
mov
push
mov
mov
push
push
(bad)
and
xor
call
and
add
mov
ret
lds
xchg
sbb
xor
jg
sub
inc
in
iret
pushf
inc
cmp
and
mov
push
out
or
icebp
lea
clc
cmps
adc
ss
push
push
loop
fwait
je
movs
add
push
dec
fsub
fcom
dec
movs
xor
and
call
adc
shl
mov
or
xchg
out
enter
aam
aas
int
dec
enter
adc
push
mov
push
ret
out
enter
push
push
dec
retf
stos
pushf
or
mov
or
cld
retf
out
test
add
aam
js
out
inc
add
fcomip
jno
mov
mov
test
sbb
loopne
je
aaa
cld
push
mov
mov
jg
mov
push
pop
outs
adc
add
sbb
xlat
push
push
mov
and
(bad)
jmp
inc
or
clc
jle
jmp
dec
jmp
inc
cmp
jle
mov
dec
shl
pop
or
mov
mov
mov
inc
add
inc
or
mov
jne
sub
jmp
dec
inc
or
jle
inc
into
icebp
or
mov
loopne
(bad)
and
leave
outs
fistp
jno
add
leave
cdq
scas
popf
stos
lods
add
add
push
pop
mov
cmp
cld
test
mov
push
lea
add
jnp
popf
xor
pop
cmpps
test
and
xor
mov
and
dec
push
les
pop
mov
pop
adc
pop
daa
movs
ror
xor
rcl
mov
int3
add
cmp
test
sub
sbb
lea
adc
cwde
ret
adc
daa
loopne
retf
push
pop
adc
enter
pop
add
daa
adc
cmp
loop
ficom
adc
arpl
add
adc
sbb
xor
lea
push
cmp
xor
arpl
or
mov
daa
out
mov
sub
or
add
cwde
adc
mov
lahf
aaa
adc
pop
add
cmp
adc
push
sub
je
enter
loopne
pop
iret
push
dec
xor
or
sbb
pop
push
aam
mov
push
jae
adc
out
mov
xor
mov
out
xlat
adc
daa
or
sub
icebp
adc
jo
aad
cmp
add
in
je
adc
lock
clc
pop
jo
push
das
sub
add
ja
adc
or
hlt
jne
sbb
mov
sbb
mov
xor
xor
ficomp
xor
xor
daa
fbstp
sbb
xchg
adc
push
mov
sub
sbb
sub
xor
mov
sbb
adc
nop
icebp
adc
sub
mov
sbb
pusha
xor
adc
fadd
xor
adc
mov
arpl
and
popa
add
xor
cmp
or
dec
cmp
inc
int3
adc
inc
js
pop
sub
and
inc
inc
ror
jae
adc
push
daa
add
sbb
aas
xor
mov
es
pop
xor
add
out
adc
sbb
sbb
cs
cmp
sbb
xor
adc
pop
test
les
ret
test
mov
cmp
sub
inc
sbb
inc
mov
lea
xlat
push
out
cmp
imul
adc
psraw
dec
(bad)
sbb
mov
jns
shl
pusha
mov
(bad)
add
(bad)
jno
lea
cmp
enter
pop
imul
loopne
pop
gs
mov
popa
mov
adc
pop
mov
jmp
push
push
pop
mov
push
das
push
jge
pusha
pop
mov
je
or
add
inc
dec
das
dec
movs
nop
or
lea
jo
nop
add
(bad)
sahf
or
inc
mov
test
dec
pop
cmp
dec
pop
xor
sahf
rdtsc
adc
wrmsr
dec
cs
inc
add
add
jb
cmp
add
mov
cmp
push
push
inc
pusha
pop
nop
push
sub
or
in
mov
cmp
loop
adc
cmps
add
icebp
push
jmp
sbb
test
js
jne
jbe
mov
xor
lock
push
or
cld
fst
jl
mov
push
dec
(bad)
mov
push
mov
dec
add
add
call
lea
lock
sub
inc
adc
add
and
out
out
call
push
add
adc
(bad)
aam
sub
sti
enter
and
mov
pusha
mov
cli
lock
xlat
xchg
and
sbb
loope
mov
inc
adc
arpl
xchg
cmovs
sbb
and
addr16
and
test
mov
test
pop
push
mov
fcomp
mov
sub
clc
mov
mov
sar
out
outs
mov
test
je
push
xor
shl
js
mov
push
xor
jp
inc
neg
push
push
mov
inc
adc
mov
push
xchg
dec
add
push
sbb
fcom
pop
inc
jne
sbb
add
adc
test
clc
ffreep
adc
cwde
mov
cmp
jne
aad
sub
sbb
out
fdivr
dec
cmp
jle
inc
jo
sub
xchg
dec
adc
mov
dec
fmul
sbb
clc
and
and
scas
adc
dec
ret
cmp
jo
sbb
lea
ds
add
and
push
mov
mov
or
ficomp
ret
es
pop
adc
je
or
and
push
push
leave
add
mov
fs
add
fwait
aas
dec
and
fidiv
pop
cmp
call
jbe
unpckhps
or
cmp
lock
jmp
fadd
push
ret
rcl
push
inc
out
mov
inc
sub
mov
dec
ror
enterw
xor
cdq
mov
cmp
mov
push
and
mov
sbb
push
push
push
call
arpl
fild
test
pop
add
sahf
sbb
sbb
inc
fs
push
mov
movs
sub
clc
push
and
dec
aas
sub
push
std
push
push
jg
cli
sub
push
mov
or
(bad)
mov
mov
fld
call
push
call
adc
int
mov
push
test
jle
sbb
push
adc
mov
inc
cmp
jl
dec
pusha
inc
mov
(bad)
outs
sub
stc
push
stc
(bad)
jne
mov
push
push
push
call
mov
mov
xchg
inc
and
loope
add
add
adc
push
mov
mov
pop
call
mov
xor
test
jle
sti
(bad)
mov
sub
inc
cmp
jl
cmp
aas
add
cmp
jne
mov
lea
cmp
jle
mov
mov
jmp
jg
ins
adc
adc
xor
lahf
aad
cmp
jge
mov
adc
sbb
test
pop
add
jo
(bad)
xchg
(bad)
inc
in
scas
cmp
pop
mov
aam
xchg
out
sbb
lock
or
pusha
mov
push
inc
test
push
sbb
call
retf
pop
call
lea
inc
cmp
jge
jmp
cmp
cs
je
sbb
inc
jmp
pusha
lea
mov
test
inc
cmp
jle
ins
imul
fwait
bound
push
mov
jne
ret
mov
mov
dec
and
jge
xor
lahf
in
(bad)
out
(bad)
je
pop
xor
jmp
push
adc
mov
mov
sub
cmp
jl
(bad)
mov
mov
pop
adc
mov
std
fcomip
mov
pusha
shr
mov
dec
js
push
and
dec
push
call
jne
mov
xor
into
pushf
push
cld
pop
cmp
cmp
jl
je
or
xor
daa
pop
mov
xchg
lock
cmp
pminsw
sub
xchg
xor
inc
cmp
mov
or
sub
or
push
add
push
xor
mov
add
xor
dec
cmps
sub
scas
and
cmp
icebp
add
test
das
lea
test
xor
ja
and
mov
mov
push
sbb
jne
fist
jno
dec
and
add
xchg
mov
add
rol
lods
ja
stos
test
dec
shl
lea
mov
cmc
pop
shl
repnz
mov
arpl
(bad)
and
dec
or
fnstcw
mov
dec
mov
xor
pop
fmul
jmp
inc
ins
add
call
inc
lods
push
mov
add
xor
sbb
pop
ins
cmp
pusha
cwde
and
and
xor
call
mov
lea
sbb
adc
jg
mov
add
jge
stos
push
daa
pop
inc
inc
pop
jle
add
jecxz
push
push
gs
dec
fiadd
scas
test
outs
cmp
push
lock
inc
ret
enter
pop
sbb
pop
push
mov
push
mov
stos
jg
iret
je
sbb
cmp
push
cld
or
mov
mov
cmp
mov
cmp
cli
ja
pop
call
dec
js
cmp
jge
jmp
lahf
mov
mov
mov
and
push
push
pop
ss
fwait
out
and
cmc
mov
push
jne
xchg
dec
add
add
add
xor
call
int3
dec
add
scas
jae
add
add
call
mov
dec
push
or
mov
jmp
cmps
add
mov
or
push
mov
je
mov
inc
add
outs
jle
mov
xor
cmp
jne
cmp
je
jmp
loopne
cmps
mov
mov
mov
je
scas
inc
ret
sbb
leave
or
out
or
and
jg
cmp
cs
outs
or
mov
mov
mov
pop
gs
add
push
cmp
ins
adc
test
dec
add
xor
and
jno
es
jmp
or
fdivrp
pmulhuw
push
lock
popa
mov
mov
xor
les
adc
dec
add
and
ret
jle
push
dec
mov
ja
adc
icebp
adc
inc
aaa
shl
mov
dec
add
hlt
cmp
dec
inc
loop
pop
fcom
pop
mov
sbb
add
pop
retf
outs
out
push
test
sahf
or
add
ins
or
pop
scas
dec
std
push
pop
push
and
pop
inc
fdiv
not
push
push
push
push
icebp
push
cli
add
dec
xor
mov
lea
mov
add
add
mov
mov
mov
and
inc
ins
and
jle
mov
dec
shr
lods
or
adc
sbb
(bad)
(bad)
cld
mov
mov
mov
mov
ss
fisttp
(bad)
jl
cmp
xchg
jle
mov
push
mov
(bad)
ret
sahf
push
jae
popa
loop
ret
jle
cmp
jge
mov
fwait
bound
push
mov
test
je
push
ja
adc
(bad)
jg
xrelease
mov
mov
mov
mov
mov
mov
mov
jg
hlt
sub
inc
sub
dec
sbb
and
push
push
add
hlt
shl
cmp
push
sub
inc
xor
xor
push
cmp
cmp
inc
cld
jae
out
cmp
mov
mov
adc
add
or
inc
add
mov
aad
call
dec
push
mov
mov
mov
mov
mov
aam
pop
pop
(bad)
leave
mov
add
or
push
pushf
push
mov
mov
mov
sbb
xchg
or
scas
add
dec
add
inc
add
mov
mov
add
or
mov
mov
mov
jns
mov
mov
add
adc
dec
or
lock
mov
mov
cmp
mov
cli
div
inc
aad
xchg
loope
jnp
out
add
outs
call
test
or
mov
stos
mov
push
sub
dec
cmp
mov
(bad)
or
dec
adc
loop
push
xchg
mov
pop
jne
dec
and
call
(bad)
jmp
movsx
xor
outs
pusha
inc
ucomiss
jmp
pop
movs
shl
fstp
shl
(bad)
out
push
je
cmp
jne
cmp
jne
test
push
ja
in
outs
pop
add
jmp
push
mov
xor
mov
out
mov
xor
or
(bad)
ffreep
jmp
retf
mov
cmp
je
cmp
jne
sub
push
sar
cmp
ja
test
xor
jae
aas
add
pop
mov
dec
cmp
push
xor
sub
or
push
pop
cmc
hlt
sbb
sbb
aam
xor
adc
paddsb
shl
push
or
lea
sub
jbe
sbb
(bad)
and
fsub
inc
xchg
fdivr
add
push
cmp
add
adc
mov
lea
bound
xor
(bad)
ja
jmp
push
mov
cwde
jae
xor
adc
sub
sbb
add
loopne
and
int
push
adc
add
test
mov
mov
cmp
add
sbb
ror
add
add
retf
sub
(bad)
ins
inc
shr
aaa
cdq
into
add
repz
sub
or
mov
push
mov
aas
and
jle
mov
add
(bad)
add
add
or
dec
add
shl
lock
cmps
mov
cmps
sub
cmp
clc
rol
mov
xor
enter
inc
jle
rcr
mov
inc
xor
dec
xchg
adc
lds
ret
cmp
mov
test
xchg
mov
add
mov
push
rcr
cmp
jle
xor
mov
and
loopne
xor
inc
and
add
inc
stos
mov
iret
and
test
jmp
and
or
sub
xchg
lock
not
push
and
shl
int
imul
mov
sub
dec
cwde
sti
test
cmp
mov
jbe
or
jle
ret
aaa
cld
dec
and
rol
and
or
fbld
sbb
pusha
xor
sbb
pusha
stos
(bad)
aas
pop
scas
add
test
jle
push
mov
push
add
xchg
and
lahf
pop
inc
xchg
add
sub
jp
jp
gs
mov
adc
adc
or
aad
and
js
call
or
xor
sbb
movs
out
out
push
sub
(bad)
mov
cli
out
dec
mov
mov
rcl
into
jno
cmp
sbb
push
mov
je
ror
and
add
sub
jle
sub
jg
or
call
inc
fcom
call
call
add
adc
cmp
or
fdivr
push
xchg
gs
jle
in
out
call
mov
sub
push
push
mov
call
jne
push
push
fdivr
jbe
fwait
pop
fcom
push
jl
rcl
push
xchg
arpl
adc
leave
cmp
mov
add
adc
jle
inc
ins
and
pusha
add
pop
ret
sar
pop
and
sbb
push
test
sti
fs
pop
mov
mov
pop
mov
and
sub
add
cmp
or
pop
sub
cmps
call
or
(bad)
outs
or
mov
clc
cmp
push
movq
or
inc
inc
mov
jl
xor
sbb
je
inc
inc
cmp
std
jl
mul
rcl
adc
movs
popf
push
xchg
dec
push
xchg
dec
rol
xchg
(bad)
cmp
ja
push
daa
stc
pop
mov
cmp
add
inc
(bad)
outs
clc
leave
inc
mov
xor
mov
sub
add
(bad)
mov
mov
call
and
inc
and
adc
jo
inc
cli
(bad)
and
xor
scas
sub
mov
neg
add
dec
and
xor
test
jle
jmp
pop
fs
lea
xchg
and
push
push
push
mov
call
jne
(bad)
jmp
pop
je
or
adc
cmps
sahf
ins
inc
cmp
jl
and
lock
sbb
cwde
sub
jl
and
inc
rol
adc
push
or
cld
mov
push
cs
mov
ins
push
fild
push
add
sbb
and
fistp
outs
aad
or
cmp
out
sar
pop
ins
and
cmp
jne
cmp
aad
pusha
inc
xor
pop
pop
or
loop
cmp
(bad)
jne
push
cwde
mov
imul
and
jmp
add
inc
or
sbb
add
pop
adc
push
les
and
das
test
add
xor
loope
nop
push
ins
mov
std
add
jmp
inc
inc
and
adc
jg
popa
lods
in
pop
add
jae
add
adc
mov
adc
dec
mov
mov
lock
add
ror
mov
mov
add
shl
lahf
sbb
cmps
or
lods
mov
cmp
fwait
dec
xor
adc
dec
imul
jl
or
outs
test
push
je
add
or
int3
pop
gs
mov
jmp
hlt
outs
test
les
outs
mov
mov
loopne
rcl
movs
adc
test
push
add
fadd
fild
popf
(bad)
fisttp
xchg
and
loopne
jecxz
add
inc
out
mov
xchg
jne
xchg
push
cmp
mov
test
in
mov
fild
fcomip
inc
inc
add
mov
bswap
xor
leave
xor
mov
mov
adc
cld
mov
mov
outs
or
scas
sub
xor
sub
ja
dec
and
mov
or
enter
cmps
call
push
xor
cmp
je
icebp
pop
inc
mov
or
jl
ror
sub
and
xor
(bad)
inc
loope
pop
sbb
and
clc
sbb
add
push
mov
mov
dec
mov
rol
pusha
cmp
pop
push
and
push
fisubr
jle
push
mov
pop
mov
test
fist
data16
dec
push
pop
and
stos
or
cmp
cmp
bound
mov
jne
mov
adc
push
sub
jnp
or
jae
adc
les
push
adc
sbb
add
cs
stos
add
and
jl
add
das
xchg
add
adc
xor
sub
or
das
dec
js
loope
das
or
sub
pusha
js
push
adc
adc
das
jl
and
das
add
xlat
adc
test
jo
mov
mov
das
mov
or
mov
add
inc
ins
cmp
mov
popa
mov
cmp
je
push
call
cmp
or
cmp
push
jne
sbb
add
stos
ret
(bad)
pop
idiv
pop
mov
push
push
adc
nop
add
popa
push
xchg
mov
out
push
lea
mov
stos
mov
shr
or
add
add
push
inc
push
add
fmul
das
jo
fild
les
nop
add
xchg
rcr
push
push
sub
mov
inc
ja
fst
mov
or
add
jmp
repz
pop
jae
out
test
push
ss
xor
and
rol
cmp
or
out
mov
adc
aas
push
test
mov
adc
clc
das
stos
sbb
or
push
imul
add
(bad)
push
cdq
or
mov
out
retf
mov
mov
or
or
shl
ja
or
mov
dec
or
(bad)
or
push
sar
iret
cmp
jl
and
push
pop
sub
pop
adc
fnstcw
or
mov
jmp
push
mov
popa
fild
sub
cmp
sub
push
push
cld
stos
mov
mov
add
add
inc
push
mov
or
pop
ret
and
lods
jbe
in
fcomp
add
mul
cld
mov
cmp
jl
inc
or
fdivr
xchg
cmp
jg
cmp
or
add
push
lods
nop
jl
add
cld
adc
inc
mov
cmp
jmp
dec
push
mov
xor
and
add
mov
packsswb
xor
retfw
push
(bad)
rcl
add
js
mov
jo
mov
sbb
ret
ja
pop
out
stc
fadd
inc
clc
and
push
push
push
ins
mov
pop
sub
add
jo
mov
jne
add
retf
xor
xchg
dec
jns
inc
push
adc
sbb
in
or
sbb
cmp
adc
clc
dec
push
jns
or
cmp
push
sbb
jne
lock
cmp
mov
jl
cmp
(bad)
jmp
jge
add
std
jge
cmp
je
xor
je
popf
xor
nop
pop
pop
call
data16
sbb
rcr
clc
sub
jns
xchg
adc
mov
in
aas
jo
push
leave
sub
xchg
add
in
lods
cmp
mov
sbb
fwait
das
push
add
xor
ja
dec
add
push
and
add
add
push
push
(bad)
lds
cmp
xlat
lea
mov
in
push
adc
mov
inc
fwait
sbb
mov
dec
add
cmp
jns
je
jns
jnp
add
jl
lds
mov
scas
mov
iret
or
add
sbb
mov
push
mov
push
xor
ss
das
imul
rcr
push
mov
fidivr
or
test
je
mov
mov
mov
int3
js
sbb
push
scas
jl
or
je
and
bound
(bad)
push
push
push
pop
add
push
and
mov
call
scas
lea
sti
call
cmp
and
mov
adc
and
rcl
and
jo
cld
jmp
(bad)
loop
sub
aas
stos
mov
push
mov
fucomp
xchg
and
push
mov
into
add
or
out
(bad)
into
pop
mov
sahf
jnp
pop
lods
add
nop
mov
jmp
mov
sbb
je
and
not
push
imul
out
fwait
and
push
push
jae
cmps
mov
or
clc
xor
or
adc
add
clc
lock
call
out
sub
mov
test
cmp
(bad)
out
icebp
push
and
xchg
push
dec
add
sbb
stc
and
push
int3
cdq
and
cli
xchg
push
sbb
push
sti
popf
test
or
out
adc
jae
adc
adc
sbb
sbb
sbb
sbb
jae
popf
test
test
adc
mov
push
iret
fidivr
daa
lahf
xchg
and
pop
adc
push
add
inc
jns
push
or
or
pop
fmul
mov
jp
jnp
cmp
sub
sbb
mov
sbb
lahf
pusha
ss
icebp
mov
mov
ds
mov
scas
sub
push
push
and
popf
std
sbb
test
cs
and
mov
push
mov
popa
sbb
inc
add
push
adc
test
jae
xor
dec
mov
adc
sbb
jo
pop
mov
mov
inc
mov
dec
push
or
jge
pop
mov
sbb
out
out
outs
xchg
and
or
mov
or
cwde
mov
jl
inc
and
mov
pop
mov
jmp
inc
and
push
pop
arpl
sbb
cmp
scas
rcl
sar
xchg
cmp
lods
gs
inc
aad
test
push
jb
clts
pop
iret
or
or
mov
jno
pushf
add
or
fistp
mov
xchg
rcl
mov
ficom
sti
cmp
add
adc
jbe
push
pop
sub
push
or
mov
mov
cmp
jo
das
repz
push
dec
adc
jl
push
test
dec
(bad)
out
test
sub
push
in
sahf
pushf
push
sub
mov
jl
int3
adc
outs
call
add
cmp
and
test
xchg
sbb
xchg
mov
dec
cmp
(bad)
push
inc
adc
jne
xor
dec
inc
push
shl
fsubr
sbb
loopne
fst
mov
inc
inc
and
inc
mov
cwde
out
adc
cmp
fmul
pop
xchg
add
sbb
mov
jg
add
test
pop
aad
and
(bad)
pop
pushf
inc
cmp
jg
cmp
inc
mov
pop
cmp
push
fstp
lds
int
sbb
push
mov
mov
mov
mov
pop
or
lods
inc
cmp
jge
sahf
or
daa
inc
push
and
sub
test
cli
outs
mov
and
mov
inc
dec
or
and
scas
cs
adc
push
push
test
push
aam
sub
dec
(bad)
sahf
ror
jp
or
daa
and
fsub
jle
jl
dec
aas
add
cwde
add
add
and
mov
call
dec
mov
xor
sub
adc
fs
je
xchg
sbb
popa
ja
sub
push
in
pusha
sub
ret
scas
mov
push
(bad)
ja
mov
pop
or
adc
mov
sar
xor
shl
sub
js
cmp
jge
ja
mov
pop
and
jg
xrstors
push
cmp
aas
retf
lock
or
cmp
stc
add
add
rcl
mov
push
or
push
pop
add
test
pop
mov
pusha
adc
int3
scas
add
loopne
dec
aam
mov
inc
ror
add
ror
push
mov
call
imul
fs
add
in
iret
test
je
pop
sbb
je
add
rol
cmp
ss
cmovnp
out
aas
je
and
outs
fimul
push
ret
mov
dec
push
call
add
mov
dec
inc
jmp
test
lea
jl
in
jns
and
mov
or
inc
fiadd
xchg
pop
mov
imul
inc
push
mov
push
push
test
mov
mov
xchg
mov
xlat
xchg
cdq
cmp
mov
sub
pop
aaa
mov
mov
or
push
push
movs
aaa
mov
popa
pop
(bad)
push
dec
push
push
jno
retf
push
adc
xor
imul
adc
or
cmp
scas
push
sub
mov
or
shl
xor
test
adc
pop
mov
dec
xor
push
adc
cdq
xor
and
sbb
add
pop
fcom
mov
movs
adc
dec
and
push
mov
ret
shl
add
xor
test
mov
inc
and
test
or
push
xor
jecxz
and
and
inc
inc
add
cld
scas
pop
and
mov
ret
cmp
ror
(bad)
ror
xchg
cmp
xor
fnstcw
xor
in
mov
jmp
aam
push
sub
or
pop
and
mov
add
in
jg
js
call
daa
mov
nop
inc
ja
icebp
push
cmp
xor
aad
jne
inc
mov
rol
shr
sbb
loope
xchg
jnp
cld
sbb
jnp
addr16
push
pop
test
mov
and
mov
adc
push
add
arpl
lahf
pop
cmp
mov
inc
cmp
jmp
adc
cmp
and
jl
and
leave
push
rcl
jns
(bad)
sbb
push
daa
shl
and
add
cmp
sbb
das
xchg
push
push
imul
push
push
xor
xchg
xor
sbb
jnp
in
in
pop
xchg
retf
test
pusha
leave
mov
pop
push
mov
jb
jmp
or
or
loopne
or
dec
mov
pop
add
and
js
mov
jecxz
outs
pop
fs
mov
(bad)
fst
push
test
test
cmp
rdtsc
sub
ror
pop
mov
inc
add
sub
mov
mov
cmps
mov
add
and
jns
xor
pop
adc
cmp
cmp
sub
xlat
push
add
inc
push
lea
push
fidivr
inc
inc
jne
xchg
test
push
adc
xchg
cmp
fwait
cmp
outs
jmp
push
icebp
cmp
ret
adc
mov
push
xchg
dec
cmp
mov
jnp
dec
mov
mov
rol
mov
jnp
iret
jge
push
mov
fisttp
mov
out
inc
xchg
adc
or
cwde
jo
int3
jl
sub
push
push
inc
push
out
or
cmp
mov
fs
xchg
fld
out
call
je
fcom
xor
mov
ins
call
arpl
add
and
push
mov
(bad)
adc
clc
mov
outs
pop
add
pop
ins
xor
add
pusha
loop
ret
js
enter
fisttp
jl
adc
mov
retf
cdq
push
and
sub
(bad)
stos
ret
jg
jge
fcmovb
adc
mov
add
dec
sub
sar
sub
add
mov
cmp
jge
add
dec
in
(bad)
je
sbb
fadd
jo
mov
or
jl
or
jmp
dec
loop
adc
lea
and
inc
mov
adc
mov
or
push
sbb
fnstsw
xchg
stos
mov
and
xchg
push
xor
test
sbb
sti
push
enter
je
retf
dec
push
push
xchg
sbb
add
sbb
aas
scas
ins
pop
neg
jae
sahf
adc
mov
inc
jo
sub
(bad)
fsub
add
jne
sbb
cmp
je
xor
pop
xchg
and
jo
mov
adc
or
cmp
xchg
cmp
pop
inc
xor
push
or
jne
pop
mov
retf
es
add
push
mov
jge
mov
jmp
jo
sub
jne
cmp
(bad)
out
add
add
inc
cmp
cmp
sbb
jl
cmp
je
mov
inc
jae
(bad)
es
mov
mov
sti
fnsave
sub
je
mov
inc
in
or
xchg
and
add
jo
cmp
jnp
add
ss
xor
clc
pop
adc
loopne
shl
sar
setl
lods
test
shr
or
jmp
je
pusha
cmp
ret
add
out
and
pop
inc
addr16
cwde
test
je
out
cmp
mov
xor
das
idiv
push
push
push
push
push
push
dec
das
add
rcr
loopne
sbb
mov
dec
jmp
fs
test
(bad)
pop
repz
out
cwde
scas
xchg
and
push
push
push
lods
mov
std
sbb
loopne
jne
sub
push
sbb
pusha
dec
adc
mov
push
and
scas
fs
sbb
cmp
(bad)
lods
stos
pop
inc
punpcklbw
xchg
dec
cmp
loopne
pusha
ret
xchg
and
leave
push
mov
or
cmp
or
fidivr
and
das
adc
fs
mov
add
sbb
mov
xor
mov
shl
out
sub
clc
push
jle
lahf
enter
cmp
ret
xchg
js
jle
mov
push
dec
mov
shl
add
adc
add
mov
cmp
dec
rcl
cmp
push
push
mov
das
sub
retf
sbb
add
inc
adc
sbb
add
add
xchg
or
popa
xor
leave
adc
sub
(bad)
sti
inc
sub
fdiv
clc
(bad)
outs
mov
xchg
loop
sub
jae
push
sbb
sbb
cwde
mov
cmp
mov
xor
jae
push
sbb
sbb
call
add
or
mov
repnz
and
sbb
sbb
dec
rcr
inc
inc
mov
pop
xor
sbb
sbb
jnp
adc
push
sbb
adc
popf
cli
sub
push
mov
jns
mov
mov
add
sbb
retf
add
lock
call
mov
cs
in
mov
mov
fadd
cs
and
mov
fiadd
fadd
les
xor
in
or
push
xchg
cmp
enter
or
jns
fs
add
or
addr16
push
pop
adc
cld
jmp
mov
mov
and
xor
test
call
push
(bad)
push
and
push
push
fs
scas
aas
movs
mov
inc
out
cmp
jl
and
xor
dec
sbb
add
inc
mov
sub
inc
inc
pushf
popa
dec
mov
pop
pop
pop
mov
leave
stos
fld
cmp
and
mov
sub
mul
call
clc
mov
mov
mov
sub
mov
cdq
mov
mov
xor
or
push
(bad)
(bad)
jmp
retf
ret
ret
dec
inc
cmp
jl
mov
mov
mov
cmp
or
addr16
add
push
gs
push
push
push
mov
adc
fsub
adc
adc
push
jne
lock
sub
outs
mov
mov
ror
(bad)
pop
xor
push
push
mov
hlt
sbb
pop
jmp
dec
sbb
cmp
sub
mov
dec
adc
add
mov
ja
xor
sbb
call
add
push
pop
cmp
add
iret
push
push
jge
call
mov
adc
inc
cmp
inc
and
sbb
scas
add
inc
pop
xor
pop
adc
and
xor
mov
imul
push
and
inc
pop
rol
mov
sub
pop
pop
call
add
dec
in
add
adc
jb
xor
aad
fwait
xor
loop
imul
add
pop
mov
test
push
clc
loopne
loop
xchg
adc
add
pop
sub
fst
out
cmp
pop
xor
lds
and
sub
inc
jg
je
retf
push
in
jo
xor
dec
and
mov
adc
xchg
lods
rcl
ins
out
movs
jmp
sub
mov
push
mov
call
push
and
out
arpl
ror
call
sub
push
pop
(bad)
ficom
and
enter
sub
inc
sbb
and
and
push
ja
fcmovb
test
test
inc
adc
add
inc
inc
sub
test
test
xchg
cmps
jbe
mov
pushf
or
push
das
inc
addr16
jo
mov
movs
jg
(bad)
mov
xor
cmp
setl
dec
xor
and
cmp
rcl
adc
setl
loope
mov
loop
jge
ins
push
test
xor
xor
mov
push
jnp
pop
fst
clc
adc
pusha
ret
or
mov
clc
add
and
fcom
shr
enter
cmp
lods
retf
inc
and
xchg
jl
jo
adc
cmc
clc
push
and
hlt
and
leave
cdq
pop
(bad)
or
jo
je
out
aas
cwde
cmp
std
je
(bad)
ds
hlt
arpl
pop
mov
sbb
jmp
sub
mov
sbb
pop
sub
push
add
mov
inc
loope
test
add
sub
pop
cmp
jle
(bad)
call
jmp
mov
or
dec
mov
cmp
jge
jp
cmp
fmul
movups
mov
dec
add
push
(bad)
pop
repnz
jle
mov
call
cmp
addr16
aas
xchg
inc
and
outs
xchg
pop
call
pop
cmp
je
xlat
outs
mov
inc
dec
mov
dec
dec
aas
sbb
cmp
test
sub
ins
dec
and
sahf
ror
in
fsub
(bad)
loope
cmp
cmp
or
mov
jne
cmp
ret
mov
out
mov
aam
cmp
daa
pop
add
scas
xchg
adc
imul
(bad)
or
inc
dec
cmp
jl
aad
rcl
sbb
and
rcr
push
or
dec
pop
mov
bound
adc
cmp
and
xor
mov
ins
mov
adc
adc
add
mov
cmp
jne
cmp
cmp
mov
push
iret
or
je
or
push
add
mov
push
pop
lock
inc
pop
gs
pop
int
push
push
push
outs
retf
push
ficomp
pusha
push
add
mov
std
pop
mov
(bad)
out
mov
mov
mov
mov
je
mov
fwait
sub
xchg
and
inc
xchg
add
and
cmp
or
shl
mov
mov
push
and
pop
sbb
(bad)
pop
and
test
jl
mov
or
cmp
jne
test
je
inc
push
pop
inc
inc
mov
shl
ret
je
lods
and
imul
jmp
es
xor
xor
cmp
mov
cwde
cmp
pusha
loopne
dec
add
ins
and
(bad)
bswap
jge
jl
call
fiadd
int3
aas
jge
push
mov
add
and
push
push
scas
addr16
in
fmul
jno
add
jmp
fcom
push
dec
cmp
jne
cmp
jo
les
idiv
push
call
shl
mov
sbb
retf
dec
retf
mov
mov
and
adc
sub
test
je
les
mov
inc
xor
sbb
in
fldcw
aaa
in
pop
lea
mov
and
or
push
mov
dec
sbb
call
adc
outs
int3
and
loop
pop
push
push
loop
jp
push
fadd
push
out
jle
or
sub
(bad)
lea
adc
dec
xor
xor
adc
call
stos
fisubr
mov
imul
add
mov
add
pop
inc
stos
sub
xchg
js
rcl
outs
pop
pop
adc
pop
cld
add
push
push
movs
into
rol
adc
pusha
and
adc
ja
mov
pop
leave
push
add
mov
mov
jo
or
pop
mov
fmul
es
test
fiadd
or
loop
ret
jmp
mov
add
add
out
mov
sub
sar
xor
or
add
mov
mov
and
sub
lds
fnstcw
pusha
outs
pusha
inc
jg
inc
out
sbb
inc
mov
cmp
jl
push
sub
int
adc
out
dec
les
add
call
data16
enter
add
mov
xlat
aaa
add
mov
mov
xor
rol
push
add
rcr
gs
push
push
cdq
cmc
add
cmps
jb
sbb
sbb
cmp
cmp
or
in
add
je
aaa
sub
pop
inc
mov
jge
push
pop
pop
aas
cmc
mov
sub
fdiv
inc
and
mov
cmp
rol
adc
sub
in
sub
sub
sbb
sub
cdq
mov
ins
dec
and
sub
(bad)
mov
jne
mov
push
je
adc
cmp
and
add
adc
sti
jl
mov
je
sub
pop
mov
rol
mov
mov
lahf
xor
cmp
push
rcl
inc
and
adc
push
cmp
mov
inc
and
cmp
jg
cmp
jl
add
pop
cmp
or
add
xchg
clc
cmp
jno
push
add
cmp
add
ja
dec
add
sbb
ret
sbb
pop
cmp
add
(bad)
and
outs
call
jg
push
add
into
pop
hlt
add
neg
jae
popa
fild
(bad)
jno
(bad)
fcomip
outs
push
test
jl
push
adc
fdivr
jmp
sub
mov
pop
push
(bad)
cmp
dec
inc
cmp
mov
imul
aas
jecxz
jmp
sti
sub
mov
adc
mov
lahf
mov
jo
adc
mov
pop
or
data16
jb
cld
(bad)
call
add
sub
jmp
adc
addr16
fld
jo
shr
popf
push
sub
fs
dec
mov
lock
sub
or
dec
aad
mov
sub
sub
mov
(bad)
daa
std
or
push
mov
test
cmp
add
jmp
lds
or
inc
jmp
add
sbb
cmps
mov
sar
loope
adc
leave
add
neg
je
lods
rol
mov
mov
dec
ins
cld
loopne
push
mov
xor
cmp
rcr
pusha
or
and
test
jl
dec
jecxz
mov
mov
jge
xchg
mov
push
iret
in
cmp
clc
scas
xchg
sbb
in
aam
jmp
loopne
or
xor
fstp
(bad)
jge
and
mov
stos
adc
cmp
mov
(bad)
mov
(bad)
and
cmp
jge
dec
or
inc
push
add
jl
add
or
inc
mov
rcl
adc
adc
add
sub
jmp
not
pop
push
or
dec
sbb
sbb
test
pop
sbb
add
xor
call
cdq
dec
cmps
dec
mov
adc
dec
and
add
add
jbe
mov
xor
jmp
xor
mov
xor
dec
ins
lock
and
or
dec
pop
xchg
pop
add
pminsw
xor
add
pop
shl
popa
hlt
add
mov
push
int
js
add
movs
jl
inc
mov
add
leave
call
mov
mov
add
jns
pop
inc
and
jecxz
mov
aas
or
or
xor
test
je
inc
arpl
jge
stos
test
je
cmp
les
or
mov
add
loop
pop
add
shl
movs
lods
xchg
xor
pop
lds
pop
mov
mov
ins
sub
mov
daa
add
xor
adc
aam
adc
mov
popf
and
clc
(bad)
test
out
mov
inc
mov
test
stos
iret
mov
jp
push
and
push
pop
outs
jmp
adc
jmp
pop
dec
mov
fldenv
add
je
cmc
mov
push
out
mov
mov
inc
push
lock
sete
mov
test
jne
push
xchg
jmp
ds
add
lds
xor
fsub
inc
or
mov
or
jmp
mov
scas
and
add
mov
mov
add
sub
pop
xchg
xor
scas
and
sbb
sbb
(bad)
adc
cmp
pop
and
data16
pop
mov
or
sbb
and
inc
movs
mov
es
pop
mov
std
dec
jg
add
add
mov
test
cmc
or
push
lock
lock
mov
add
inc
inc
pop
push
ins
mov
sti
dec
xor
movs
add
inc
adc
push
and
mov
or
cs
fst
mov
test
jne
jmp
out
jbe
xchg
xchg
cmp
xchg
cmp
push
aam
xchg
adc
adc
test
mov
test
ss
mov
mov
jb
jae
sub
push
pop
push
pop
test
pusha
je
push
and
retf
call
adc
jno
aam
test
mov
fistp
mov
xchg
loope
pusha
sub
adc
addr16
inc
pusha
int3
or
and
in
add
call
push
ss
pop
jle
movs
sub
test
mov
stc
inc
test
pop
inc
and
mov
mov
inc
dec
cmp
or
stc
xor
aad
(bad)
sbb
xchg
ret
loop
jo
inc
sbb
xchg
or
lds
into
rol
out
push
or
jnp
pusha
pop
add
and
fwait
ret
test
mov
xchg
loopne
add
mov
mov
dec
push
inc
ja
shr
and
cmp
jmp
mov
and
ret
add
mov
inc
xchg
xor
sub
sub
mov
pop
fbld
mov
inc
dec
aas
xor
sbb
mov
mov
fadd
inc
inc
mov
sbb
xchg
adc
movs
pushf
or
clc
arpl
ja
pop
pop
push
sub
jb
in
hlt
push
xchg
inc
fnstsw
add
push
pop
push
dec
ja
ja
call
cmp
and
add
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
add
cmp
je
sub
pop
adc
inc
xor
jg
sub
or
or
push
bound
mov
retf
lahf
pop
sar
mov
inc
rol
jl
push
dec
xor
jg
mov
retf
aaa
aad
add
cmp
test
fsubrp
adc
in
clc
ins
or
mov
adc
lds
jnp
jo
loope
inc
dec
adc
jl
xor
fcom
stos
push
jge
push
jae
mov
inc
call
push
stos
push
xchg
fadd
mov
(bad)
outs
popa
xor
mov
pop
add
mov
jmp
jmp
je
cmp
jne
cmp
add
fs
outs
imul
lds
dec
push
ins
int
call
push
cmps
mov
ins
xor
jno
ret
mov
iret
adc
ffree
sbb
push
mov
push
xor
add
aaa
inc
(bad)
call
mov
push
push
mov
and
fs
lock
jmp
in
add
je
mov
pop
test
mov
pop
adc
jp
push
call
mov
jp
push
add
mov
sub
xor
dec
xlat
adc
add
or
shr
cmps
add
sahf
dec
fs
mov
xor
sbb
jno
scas
cmp
xchg
inc
sub
sub
cmp
jmp
pop
or
mov
push
rcl
push
push
inc
add
or
(bad)
in
cmp
ucomiss
adc
outs
add
icebp
fmul
or
pop
sub
add
fist
adc
(bad)
out
lods
icebp
jge
push
jno
cdq
sub
cli
jae
repnz
and
xor
cmp
retf
out
sbb
and
jmp
mov
cmp
ret
and
xchg
(bad)
mov
ds
and
mov
push
mov
sbb
cmp
adc
imul
and
fst
fidivr
jge
pop
jo
sbb
jl
fcomp
push
and
jl
fsubr
or
fcomp
sbb
inc
aas
sti
je
fstp
adc
inc
and
fild
add
call
sbb
sub
jno
call
add
jne
rol
mov
inc
cmp
xor
and
cmps
inc
and
lods
inc
in
retf
push
lods
ret
jl
or
fadd
adc
mov
(bad)
pop
std
cmp
add
jmp
push
jle
adc
ret
jl
adc
mov
aaa
dec
or
mov
inc
sar
push
add
push
push
ja
push
arpl
dec
mov
push
pop
cmp
push
or
adc
sub
add
inc
adc
xor
in
je
or
xor
cwde
push
mov
mov
inc
call
add
add
xor
dec
daa
ss
xchg
mov
jno
mov
das
daa
fs
sbb
xor
or
mov
cs
and
xchg
jmp
leave
push
test
pusha
add
pusha
add
mov
add
mov
add
add
(bad)
cmp
dec
add
inc
and
cdq
jmp
nop
jae
test
push
mov
je
sbb
add
xchg
jl
in
mov
mov
cmp
je
mov
adc
shl
xor
lds
mov
mov
xlat
(bad)
mov
jne
adc
leave
mov
ins
push
setne
dec
and
js
jmp
xor
or
fs
inc
and
jl
(bad)
out
or
xchg
rol
jge
mov
out
push
push
aaa
xor
add
loopne
adc
add
cld
shl
pop
mov
es
sub
sub
mov
mov
push
push
test
cmps
add
fs
add
xor
cmp
mov
call
aaa
ret
and
mov
iret
sbb
cmc
or
pop
jmp
inc
and
add
pop
rol
adc
ret
(bad)
(bad)
fild
adc
jne
cmp
je
cmp
jne
pop
inc
cmp
or
test
mov
je
or
iret
test
sbb
mov
scas
or
outs
push
and
push
ror
mov
push
je
mov
mov
xchg
push
jne
jle
add
push
jp
inc
cmp
stmxcsr
pop
cmp
dec
loopne
or
out
out
jmp
inc
push
popa
adc
jne
sub
dec
enter
inc
shl
fdiv
pop
mov
dec
aam
adc
mov
jmp
add
mov
and
mov
or
inc
cmp
and
lds
test
or
pop
adc
and
xchg
xor
test
mov
test
div
test
fs
mov
dec
and
inc
lods
or
in
stos
mov
call
xchg
adc
mov
cmc
into
adc
adc
in
xor
je
cmp
jg
scas
jo
cmp
mov
ret
inc
cmp
jle
cs
cmp
daa
jg
fs
daa
inc
and
pop
pop
xchg
adc
cli
mov
mov
cmp
xchg
add
jb
xchg
fld
adc
(bad)
out
(bad)
rol
push
fadd
inc
gs
rcl
pop
out
jl
jo
ins
and
or
add
leave
call
out
cwde
jno
pop
pop
inc
push
mov
jmp
mov
mov
mov
mov
xchg
mov
pop
jle
jo
icebp
pop
and
add
add
dec
and
push
jl
cmp
jne
xor
dec
adc
xor
push
cs
and
push
cmp
mov
inc
push
fstp
bound
mov
push
push
in
push
dec
and
cdq
gs
or
inc
paddusb
adc
inc
clc
inc
mov
mov
mov
mov
dec
and
pop
add
sub
or
mov
or
xlat
lock
enter
add
or
adc
sti
xor
add
lods
fild
or
clc
add
call
jmp
dec
jmp
inc
jmp
sub
jmp
add
push
sti
call
out
nop
ret
pop
jno
iret
or
shr
jmp
jmp
mov
add
ins
mov
sti
xchg
std
inc
add
inc
call
in
add
adc
lahf
xchg
cmp
pushf
add
or
and
and
pushf
push
mov
sbb
scas
mov
icebp
loope
mov
ja
shl
add
or
in
nop
and
pop
sbb
in
xor
fadd
loop
add
pop
sbb
call
jl
(bad)
mov
sbb
test
mov
inc
mov
aad
fmul
inc
ja
xor
aas
sub
add
sbb
sub
adc
leave
pop
jl
push
lock
ror
xor
xor
adc
xor
shl
add
rol
pop
sub
push
sub
add
enter
call
and
outs
pusha
sbb
sar
mov
ret
jl
into
adc
sub
sub
xor
cmp
jl
call
inc
and
mov
shl
push
aas
mov
mov
xor
rcl
inc
mov
les
pop
leave
clc
and
ffreep
sbb
(bad)
cmp
jge
rcl
adc
jo
push
fdiv
or
lods
fsubr
(bad)
aam
xor
nop
adc
outs
adc
pop
ret
jmp
nop
sub
mov
inc
mov
cmp
mov
or
xor
push
test
sbb
ffree
call
dec
inc
xor
adc
adc
(bad)
(bad)
inc
pop
cmp
je
cmp
je
cmp
je
cmp
je
sub
(bad)
std
and
std
and
std
and
std
inc
jne
and
out
fmul
jbe
std
push
adc
inc
pop
enter
test
cld
ret
jae
scas
jle
xchg
mov
inc
inc
push
fmul
imul
xor
jge
xchg
lock
sbb
mov
mov
stos
clc
dec
push
mov
aaa
adc
dec
inc
xor
dec
mov
xor
and
sub
clc
xor
xor
mov
cs
adc
ins
push
leave
adc
jne
sub
and
add
ins
pop
cmc
cli
and
fcomp
(bad)
sbb
or
rcr
loop
xor
jp
push
sbb
aas
inc
cmp
out
mov
push
ret
pop
neg
push
push
dec
or
repz
adc
pop
xor
bound
pusha
or
sti
add
jl
or
pop
imul
push
push
sbb
or
xor
jne
rcr
push
push
inc
xor
test
add
push
xlat
pop
pop
jmp
push
jmp
sbb
sbb
inc
aam
adc
adc
push
jmp
and
mov
sti
enter
inc
sbb
push
jmp
sbb
mov
add
cmp
jle
jmp
fnstcw
jmp
mov
ror
fdivr
dec
mov
add
icebp
aad
mov
dec
dec
cmp
jne
mov
inc
dec
cmp
add
enter
(bad)
xchg
sbb
and
sbb
dec
push
cmp
xor
mov
std
mov
cmp
and
push
aam
jle
clc
add
add
or
push
mov
call
fstp
add
jl
xchg
add
add
je
xlat
xor
sub
ss
pop
add
fdivr
dec
add
add
add
push
pop
or
or
push
pop
(bad)
or
or
push
fbld
dec
add
adc
push
je
jg
outs
js
or
repnz
out
ins
adc
clc
dec
test
jnp
stc
or
arpl
xor
cmc
push
mov
add
test
test
je
xor
pop
add
push
cmp
leave
adc
mov
pcmpeqw
lahf
mov
int3
jmp
mov
inc
mov
fsubr
(bad)
retf
stos
out
add
push
mov
push
or
inc
punpckhdq
loopne
or
dec
and
pop
dec
add
push
push
fwait
inc
and
pop
jne
sub
shl
out
stos
or
inc
jo
jmp
fadd
scas
cld
bound
mov
inc
cmp
sar
outs
xor
cmp
lea
dec
outs
mov
push
mov
std
loope
sbb
shl
(bad)
aad
adc
mov
jge
and
std
cmp
push
lods
cmp
xlat
mov
push
mov
push
xor
cmp
enter
paddb
add
(bad)
into
sbb
add
push
sbb
nop
nop
sbb
adc
je
xchg
add
scas
pop
ror
inc
dec
in
jno
pop
(bad)
push
push
loop
xor
push
clc
mov
scas
mov
in
mov
cmp
loopne
mov
jge
xor
(bad)
jg
imul
stc
fdivrp
sbb
add
push
push
jmp
cmp
jge
mov
mov
sub
mov
enter
cmp
mov
icebp
sub
sti
scas
aam
jo
aaa
dec
adc
dec
and
in
jmp
enter
sub
add
rcl
pushf
add
scas
sbb
jmp
cmp
pop
jle
js
cmps
mov
sar
dec
jmp
xchg
cmp
mov
adc
push
imul
or
add
sub
cmps
test
movs
lock
push
ret
or
push
mov
ja
inc
xchg
adc
cmp
jae
(bad)
pop
sbb
push
add
pop
add
cmps
pushf
mov
jg
adc
or
inc
or
mov
loopne
mov
popf
inc
pop
mov
mov
in
mov
int
in
mov
xchg
retf
xchg
in
icebp
add
add
mov
add
repz
jb
ret
movs
pop
jo
xchg
cmps
pushf
fisttp
mov
jnp
cmp
ins
nop
cmp
mov
in
cmp
push
push
daa
stos
pop
dec
push
mov
(bad)
jp
sub
mov
ins
call
mov
or
or
cmp
inc
mov
add
xchg
mov
fs
xor
xor
dec
pop
and
inc
das
loop
mov
adc
mov
jmp
push
and
push
push
cmps
pop
ja
adc
ret
mov
rol
cmp
add
(bad)
push
cmp
jge
cmp
jg
push
cmpps
lds
mov
or
cmp
daa
mov
mov
jmp
mov
push
sub
lods
enter
aas
sub
push
sub
(bad)
push
sbb
cli
cmp
jge
cmp
lods
or
pop
sub
cwde
and
xchg
inc
mov
and
ret
mov
std
add
add
push
leave
out
pusha
sub
popf
leave
or
xchg
iret
or
pop
xchg
ins
sbb
add
jns
repnz
dec
pop
iret
leave
scas
cmp
xor
add
and
sbb
xor
or
and
std
push
push
scas
adc
inc
and
inc
jo
xor
xchg
xor
cwde
loop
add
int
inc
jmp
xchg
xchg
test
xchg
das
data16
mov
shl
pusha
fcomp
sbb
bound
cmp
jne
jg
sub
mov
add
test
mov
ret
retf
aam
jnp
push
push
jecxz
pop
cmp
push
push
push
leave
or
sub
mov
test
je
scas
sub
clc
test
ds
add
(bad)
or
jb
in
sti
add
jo
add
inc
cwde
mov
ror
out
xchg
in
imul
jmp
rol
cmp
das
or
add
cmp
jne
in
adc
push
lock
cmps
push
adc
push
rol
inc
xchg
adc
aad
cmp
push
jp
dec
add
or
cmp
je
push
push
jmp
add
mul
inc
(bad)
nop
bound
in
pop
push
dec
test
jnp
sbb
push
outs
mov
sbb
(bad)
loopne
inc
or
push
mov
cmp
jmp
push
add
pop
fwait
rcl
mov
je
bound
scas
jmp
jo
lds
icebp
sub
mov
dec
je
test
lock
mov
add
jb
fild
dec
add
push
dec
push
pop
mov
dec
inc
xor
pop
dec
pop
and
scas
mov
inc
mov
and
icebp
test
mov
jo
jp
xor
mov
pusha
add
ror
ror
push
and
cld
and
enter
push
dec
jo
add
jmp
add
mov
or
jle
dec
and
ja
call
sub
imul
sub
mov
adc
jecxz
inc
jo
imul
or
or
add
mov
in
(bad)
adc
jmp
pusha
je
(bad)
dec
push
cld
inc
and
mov
jmp
test
jle
add
push
push
cmp
jge
mov
jge
adc
sbb
(bad)
aam
mov
popf
xor
and
enter
setns
mov
xchg
mov
push
sbb
jne
sti
sbb
or
cmp
dec
(bad)
mov
sbb
call
and
lds
adc
inc
mov
outs
mov
xor
sub
pop
cmp
mov
(bad)
push
fbld
ficom
inc
mov
sti
sbb
xchg
and
fld
push
mov
pop
add
lock
rcl
mov
push
jge
jnp
dec
rcr
push
das
cmp
add
lock
cli
in
sbb
and
and
push
sahf
sbb
push
test
ret
lds
or
cli
mov
cmp
jmp
popa
cmp
sub
dec
sbb
shl
sbb
loope
or
add
adc
push
add
sub
je
inc
inc
sbb
addr16
xchg
push
je
push
inc
adc
pop
xor
mov
jmp
cmp
je
push
and
inc
pop
mov
xchg
das
adc
inc
loop
push
pop
mov
dec
int
or
or
cwde
jmp
jmp
jb
jns
and
or
lock
and
add
jmp
or
jo
mov
icebp
adc
inc
cmp
jmp
enter
aad
push
cmps
xor
and
loop
jp
jmp
mov
sub
xor
add
data16
mov
add
punpckhbw
mov
and
mov
aad
mov
cs
mov
(bad)
push
dec
or
fisttp
push
xchg
outs
ret
push
and
fnstenv
mov
jmp
cmp
je
jne
sub
cld
js
test
mov
push
push
mov
mov
push
lds
push
and
mov
jb
cmovb
and
add
stos
add
js
pop
cmp
(bad)
xor
les
mov
repnz
xchg
add
xchg
mov
sti
(bad)
add
mov
(bad)
dec
mov
mov
cwde
xor
inc
and
je
lea
add
mov
xchg
and
icebp
xor
mov
or
cli
fild
cmp
push
je
mov
sbb
(bad)
pusha
cs
or
popa
sub
bound
push
add
mov
push
adc
lock
adc
popa
je
cmp
pop
push
and
and
mov
mov
clc
aaa
add
sbb
push
mov
mov
push
loopne
dec
mov
mov
add
sub
icebp
cs
cmp
mov
out
jl
dec
sbb
add
pop
pop
mov
mov
test
les
nop
sbb
enter
cli
fs
clc
inc
cmp
jne
sub
leave
xor
pop
mov
fiadd
cld
pop
mov
pop
or
daa
cmp
scas
add
sbb
and
add
xchg
mov
dec
std
in
pop
xor
movs
xor
fisttp
add
push
jnp
shl
xchg
and
mov
inc
int3
icebp
or
out
jl
pop
adc
fistp
das
and
jl
imul
push
push
xor
imul
add
jg
jae
fwait
and
jl
pop
and
cmp
jge
shl
inc
sub
popa
pop
iret
rcl
imul
add
inc
and
mov
push
push
mov
mov
loopne
pop
aas
call
out
sysexit
adc
ds
test
fst
adc
aad
push
mov
push
sbb
clc
mov
mov
and
xor
mov
mov
add
stos
mov
ja
pop
adc
push
int3
mov
cmps
sbb
inc
xchg
pop
test
sbb
adc
dec
data16
(bad)
in
fsub
pop
push
push
imul
(bad)
stos
cmp
bound
ins
or
adc
sbb
or
ror
add
add
push
inc
inc
xor
out
add
mov
inc
out
add
jg
jge
push
cmp
sbb
cli
and
test
je
mov
sbb
sbb
cmp
add
aas
and
or
adc
adc
mov
lds
je
mov
jo
push
or
lock
(bad)
sub
mov
inc
dec
ror
or
(bad)
mov
inc
movs
jb
add
add
add
dec
xlat
ja
push
or
push
call
mov
or
and
je
shr
or
xchg
and
jmp
retf
std
and
adc
in
and
pop
push
call
push
inc
sbb
and
push
out
sbb
push
sbb
dec
call
adc
sbb
cmc
or
or
xchg
push
add
call
push
mov
(bad)
mov
mov
mov
xor
sub
sub
cdq
xor
push
mov
sub
mov
inc
hlt
in
push
sub
mov
push
stos
pop
jno
add
or
dec
dec
iret
lds
icebp
xor
stc
jbe
(bad)
or
adc
es
or
pop
jne
neg
pop
in
inc
loopne
xor
mov
mov
mov
call
inc
inc
fadd
xchg
ficom
sbb
and
jmp
int
fadd
add
or
fs
push
(bad)
imul
xchg
sti
cs
test
pop
jne
adc
jne
cmps
jmp
call
push
out
cmp
cs
call
pop
adc
or
ret
adc
xor
mov
(bad)
(bad)
dec
push
push
cmp
mov
jl
mov
mov
mov
cmp
or
rcl
or
lds
cld
sti
push
sub
inc
clc
push
pop
mov
add
sbb
mov
sbb
cdq
mov
inc
loope
add
cmc
adc
mov
les
mov
push
mov
sbb
push
pop
rol
mul
lahf
sub
loope
adc
push
mov
in
dec
push
sbb
or
mov
int3
push
dec
add
push
inc
mov
jne
cmp
sub
fdiv
rcl
jne
xchg
nop
pushf
enter
icebp
imul
inc
and
popf
fcomp
sub
xchg
cld
add
pop
mov
adc
cmp
push
pop
xchg
dec
and
mov
call
dec
mov
cmp
jge
mov
scas
call
adc
dec
mov
imul
mov
pop
adc
add
dec
cs
mov
test
(bad)
test
jnp
jbe
jbe
add
test
fiadd
fadd
loope
jb
std
aad
mov
adc
sub
test
aad
push
dec
add
sbb
add
movs
inc
and
mov
enter
fmul
sub
mov
add
sar
mov
sub
inc
mov
mov
jge
mov
mov
mov
cmp
pop
jmp
mov
lods
stos
mov
arpl
and
cmp
bound
iret
inc
inc
out
sub
or
add
cmpps
mov
je
and
and
scas
sbb
push
push
mov
dec
push
push
fmul
sbb
call
scas
cmps
outs
and
inc
xchg
js
or
popa
dec
sub
ss
jmp
push
push
mov
or
(bad)
push
imul
out
dec
add
push
push
adc
out
ret
xchg
mov
adc
or
ja
push
cmp
pop
xor
(bad)
or
pop
js
add
imul
and
pushf
mov
js
adc
sbb
or
or
mov
add
shl
int3
pop
push
test
mov
inc
xchg
mov
mov
or
inc
pop
add
mov
push
pop
addr16
mov
mov
mov
xor
cmp
je
cmp
daa
push
xchg
and
or
push
sub
mov
repz
adc
iret
pop
adc
add
pop
jge
je
enter
pop
cmp
adc
repnz
push
pop
adc
pop
mov
push
call
sub
mov
pop
adc
mov
call
add
jl
and
inc
jnp
dec
push
push
sub
or
jmp
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
pop
or
fsubr
sub
inc
adc
xor
pop
or
add
jmp
push
sbb
hlt
jge
adc
pushf
or
dec
lds
jmp
mov
sbb
jmp
inc
aaa
icebp
(bad)
mov
or
ret
hlt
call
je
lods
mov
sbb
shl
ror
push
mov
add
(bad)
call
and
add
int3
fisttp
mov
xlat
ret
xor
or
add
outs
je
xchg
jmp
mov
idiv
xor
popa
push
and
mov
(bad)
scas
call
cdq
inc
xor
xor
cmp
stos
dec
mov
and
mov
ds
mov
call
sbb
test
les
mov
cli
add
pop
out
inc
and
cmp
sar
scas
mov
xor
push
push
push
push
push
push
dec
add
cmp
loopne
mov
popf
xor
je
sub
ja
mov
lea
popf
add
ja
cmp
add
repz
xor
das
inc
lock
inc
mov
mov
cmp
jge
jns
adc
shr
cmp
push
add
push
push
std
and
ja
inc
push
add
pop
in
push
inc
sub
sti
out
mov
leave
inc
enter
jl
sbb
mov
pop
fadd
dec
cmp
jl
mov
xor
aas
mov
sub
jg
sub
xor
loop
push
add
or
mov
sub
push
push
arpl
push
mov
jl
mov
fcomp
jle
jne
lds
call
dec
jge
mov
call
nop
adc
clc
sbb
call
push
sbb
sbb
dec
and
call
mov
out
ds
push
pop
xor
ror
out
jl
ret
cmp
sbb
push
push
push
dec
jmp
sub
add
inc
pop
sub
cmps
stos
repz
cli
mov
xchg
in
je
mov
or
push
imul
inc
out
jle
mov
dec
data16
push
add
push
aad
popfw
mov
sub
sbb
add
ret
and
ror
popa
retf
push
sub
cmps
sub
data16
shr
jmp
cmp
aas
add
cmp
add
push
pusha
push
daa
jnp
add
sub
gs
mov
mov
and
pop
push
repnz
mov
dec
shl
movs
(bad)
cmps
sub
je
lea
arpl
and
add
jmp
int3
add
and
mov
push
or
ffree
ror
or
mov
out
iret
loopne
or
rol
loopne
sub
add
shl
push
and
or
inc
jmp
pop
push
jl
fimul
sbb
push
adc
mov
add
mov
sbb
and
push
aad
push
and
jmp
jg
sub
push
pop
and
sti
mov
outs
lea
dec
add
jl
jmp
or
aad
call
pop
and
(bad)
push
(bad)
cld
(bad)
stos
loopne
dec
(bad)
jne
pop
push
call
mov
inc
add
ret
and
add
push
push
inc
and
dec
cmp
mov
add
add
leave
mov
out
(bad)
push
ror
cmp
jl
mov
ret
mov
push
loopne
xchg
out
xor
xchg
add
cmp
jne
or
jne
mov
jmp
mov
adc
adc
movs
cli
push
jmp
sub
or
adc
out
cmp
test
add
xlat
sbb
ret
or
repz
or
fwait
loopne
loopne
add
scas
stos
cli
das
(bad)
pop
lea
lds
(bad)
cld
mov
sbb
push
sbb
shl
xchg
cmp
das
mov
jmp
aas
dec
pusha
and
pop
int
(bad)
jmp
lea
and
xor
mov
nop
nop
cmps
stc
push
les
or
add
(bad)
jg
adc
or
test
je
adc
(bad)
pop
inc
cmp
jle
lea
mov
int3
add
adc
cld
lock
loope
add
mov
shr
push
push
and
loopne
sbb
(bad)
cmc
or
cmp
ja
add
mov
in
or
sbb
push
mov
mov
add
pop
movs
pop
adc
(bad)
stos
das
or
ret
nop
mov
jne
mov
dec
add
sar
ss
or
shl
push
pop
es
mov
imul
add
ret
and
sbb
add
push
push
mov
shl
push
jb
or
sbb
cli
fwait
(bad)
sub
jg
inc
lea
test
push
outs
sub
adc
or
xor
stos
test
movs
inc
push
xchg
jl
jne
sbb
out
add
stos
add
(bad)
cld
xor
xor
test
xor
and
(bad)
dec
cmp
je
add
inc
cmp
jl
jmp
loopne
jle
daa
and
mov
call
retf
je
add
out
jg
(bad)
aaa
jl
inc
test
inc
mov
adc
test
fmul
dec
or
sti
push
mov
sbb
jg
sub
mov
dec
and
sub
push
sar
push
test
add
adc
sbb
aaa
inc
aam
outs
mov
scas
sub
add
and
aas
pushf
cmp
push
push
and
test
call
(bad)
icebp
push
mov
and
adc
out
out
ror
push
mov
push
in
adc
rcl
sbb
mov
push
add
mov
mov
out
cs
test
mov
jne
in
jle
push
fst
sbb
nop
push
(bad)
sbb
sbb
popa
dec
jne
out
push
push
jb
mov
clc
icebp
test
push
and
jl
loope
and
push
stc
test
jle
pusha
add
inc
fisttp
add
ins
adc
cmp
cli
add
dec
or
xchg
xor
or
inc
mov
push
das
test
test
mov
pusha
cli
aas
mov
or
lea
and
add
dec
(bad)
mov
add
aas
cmp
mov
jne
gs
or
fdivr
mov
ret
mov
push
jg
add
push
cmp
and
adc
push
inc
jmp
xchg
retf
or
cmp
sti
push
call
jmp
call
mov
pop
clc
push
and
push
jne
test
mov
je
mov
fcomip
mov
lods
add
and
call
sbb
(bad)
cmp
sti
sub
add
mov
sub
sbb
push
cmp
scas
add
nop
jl
and
mov
and
out
in
dec
sub
hlt
mov
adc
mov
repnz
or
dec
add
nop
retf
(bad)
(bad)
mov
push
mov
clc
push
dec
sar
mov
jo
ins
test
ins
add
cmp
clc
jmp
imul
add
cmp
gs
in
(bad)
pop
loopne
mov
repz
jl
adc
loopne
dec
push
mov
scas
inc
jne
or
push
cmps
out
jo
push
adc
adc
sub
(bad)
inc
add
or
push
xor
mov
push
cs
push
xor
jno
fcom
les
add
cmp
daa
cmp
push
xor
or
xchg
add
cmps
pop
adc
sbb
mov
cmp
in
test
mov
test
jle
lea
add
add
sbb
int3
out
out
or
inc
pusha
mov
leave
popfw
imul
loopne
div
mov
cmps
inc
scas
push
arpl
sub
jns
daa
add
add
xchg
ror
inc
adc
mov
xor
mov
outs
loop
aas
add
add
mov
xor
dec
push
sbb
clc
add
mov
inc
iret
pushf
mov
faddp
add
mov
sar
in
mov
mov
(bad)
pushf
je
add
jae
mov
sub
test
pshufw
add
test
addr16
mov
mov
cmps
(bad)
fbstp
xor
push
inc
inc
push
mov
add
mov
mov
mov
cld
add
xor
mov
add
add
xor
cmp
outs
cmp
es
adc
test
jne
mov
push
push
mov
add
aaa
add
mov
mov
and
xor
clc
push
cdq
(bad)
and
inc
in
lds
cmp
add
jle
mov
dec
clc
test
mov
shl
push
call
frstor
cmp
fsubr
or
mov
inc
mov
dec
mov
jmp
mov
mov
inc
cmp
add
(bad)
out
xor
add
cmp
jne
mov
mov
mov
adc
gs
clc
shl
push
push
sbb
inc
xchg
push
xlat
invd
int3
fadd
and
or
jle
je
pop
out
out
mov
cmp
add
cmp
inc
test
fmul
ja
jl
pusha
mov
cmp
out
jg
jp
sub
lock
lea
test
and
rep
mov
out
fistp
icebp
sbb
stos
add
jmp
mov
or
rep
retf
mov
mov
sub
out
cmp
ret
xchg
dec
lods
mov
mov
imul
das
add
cwde
and
lea
into
cmp
mov
or
test
mov
sbb
les
pop
movs
sbb
test
mov
pop
sbb
std
fisub
mov
mov
std
ffreep
dec
add
inc
mov
jne
test
push
adc
push
fdivp
mov
mov
test
jne
les
stos
mov
imul
or
lock
out
xchg
add
fdivr
out
dec
dec
add
jmp
jecxz
(bad)
push
push
mov
jb
xchg
jg
or
mov
push
mov
add
bound
ja
push
adc
movs
pop
je
adc
mov
test
fld
ins
adc
xor
es
aaa
test
or
pusha
pop
out
movs
push
and
pusha
pop
(bad)
pop
dec
add
adc
fld
add
mov
and
icebp
jne
inc
or
std
fdivr
and
xor
xor
enter
push
push
mov
mov
outs
mov
aas
fs
in
or
test
jns
and
or
jge
test
jle
leave
aaa
push
mov
cdq
stos
cld
cmps
xchg
add
sub
int
sbb
or
cli
and
pop
(bad)
xor
push
push
dec
or
fmul
jge
jne
inc
lods
jmp
jmp
cs
push
data16
xchg
lock
jnp
and
push
ins
call
jge
je
and
adc
mov
push
xor
mov
fdivr
or
dec
or
mov
(bad)
(bad)
call
enter
sbb
pop
push
stc
sbb
push
out
dec
ds
fdiv
dec
inc
cmp
je
pop
les
std
or
cmp
jne
sbb
and
or
mov
push
mov
pushf
shl
add
shr
mov
inc
mov
adc
daa
pop
pop
pop
pushf
out
xchg
xchg
sbb
adc
cs
mov
lea
push
adc
loopne
movs
add
ss
mov
xchg
inc
in
(bad)
mov
pop
mov
push
mov
jo
adc
adc
mov
sub
xchg
push
mov
push
mov
add
mov
sbb
add
mov
inc
ins
mov
xchg
add
mov
ss
(bad)
cld
pop
dec
adc
cld
mov
mov
in
add
les
call
sub
out
rol
dec
pop
mov
jo
js
or
dec
add
inc
and
mov
push
mov
(bad)
loopne
pop
stos
inc
or
xchg
jmp
or
or
jge
adc
inc
sbb
dec
mov
gs
mov
jl
push
pop
xchg
cli
ffreep
cmp
mov
fucomi
push
mov
in
or
jge
mov
je
mov
mov
(bad)
mov
push
imul
mov
push
jae
push
mov
(bad)
mov
adc
cmp
or
fld
jmp
lea
cdq
push
lea
fdivrp
pop
sbb
lea
lea
jg
popf
popa
add
push
mov
lea
pushf
mov
jae
ins
add
push
aaa
sbb
push
mov
fdivr
inc
loopne
mov
cmp
jl
or
push
outs
adc
scas
add
nop
sub
or
fs
jp
sbb
cmc
pop
push
push
lea
add
push
sahf
movs
dec
inc
mov
mov
xchg
and
sbb
dec
or
add
add
pop
xor
xor
rep
mov
pusha
out
add
pop
inc
das
dec
push
inc
aad
add
imul
adc
sub
mov
adc
clc
out
pop
pusha
push
call
push
inc
or
inc
add
hlt
mov
loope
frstor
daa
jl
jne
mov
sbb
mov
es
push
or
inc
retf
sub
or
sti
or
lock
mov
mov
sti
mov
adc
sbb
adc
out
push
dec
hlt
xchg
and
(bad)
bound
data16
lea
push
adc
test
cmps
add
cld
xchg
stc
imul
add
(bad)
adc
(bad)
clc
test
jne
cmp
mov
push
es
dec
dec
inc
or
push
ja
and
inc
into
js
dec
add
bound
push
jmp
in
jnp
sbb
jne
(bad)
fistp
sbb
sbb
clc
mov
mov
dec
cmp
jno
sbb
mov
or
mov
push
push
push
retf
adc
or
push
mov
mov
psrad
push
xor
sub
sub
push
add
or
mov
pop
xor
xor
mov
mov
mov
mov
mov
jg
fld
push
lea
mov
sub
add
or
and
imul
test
loopne
mov
mov
inc
mov
fwait
sub
push
mov
pop
mov
(bad)
sar
jne
mov
je
mov
fnstsw
mov
add
inc
in
fisttp
test
outs
mov
(bad)
mov
push
mov
mov
out
jne
loope
repnz
icebp
mov
fimul
mov
push
sub
sbb
std
dec
test
cwde
jb
rcr
xor
dec
shr
xor
mov
push
push
inc
dec
mov
pop
(bad)
cli
xor
lea
pop
cld
aas
std
cmp
jl
mov
test
jle
lea
in
add
popa
add
aaa
and
inc
nop
jbe
fcom
pop
pop
cmp
js
imul
std
cs
pusha
dec
mov
mov
call
nop
sbb
jge
daa
scas
(bad)
aaa
rcr
stos
add
imul
fiadd
inc
clc
sub
(bad)
jmp
bnd
icebp
add
in
or
and
shl
xchg
rol
adc
push
fs
hlt
or
push
nop
xchg
push
punpckhbw
outs
loopne
add
pop
test
jg
rol
xchg
clc
mov
push
push
adc
out
add
mov
jne
and
jb
xchg
aaa
lea
mov
dec
mov
rep
lea
or
pop
inc
or
icebp
mov
jmp
mov
push
aas
aam
lock
add
push
xchg
cmps
xor
or
retf
fadd
pop
xor
sbb
mov
pusha
jo
outs
xor
xor
and
aas
outs
sub
es
ret
jnp
or
ds
add
dec
fisub
or
daa
sub
nop
and
fcomip
lahf
dec
adc
rol
in
inc
in
push
aas
sbb
shl
cmps
je
and
jp
and
lods
test
mov
cmp
test
loopne
inc
rep
adc
loopne
ja
xchg
xor
ins
mov
rcl
adc
dec
fcomp
div
dec
or
dec
icebp
pop
sub
adc
lea
fisttp
sub
pop
sbb
fs
lahf
push
je
jge
cmp
mov
jge
mov
(bad)
mov
add
mov
cmps
cmp
scas
js
rcl
aaa
aad
hlt
or
adc
dec
mov
inc
jmp
jmp
mov
and
dec
fmul
mov
ins
(bad)
(bad)
pop
fbstp
into
mov
or
mov
xchg
and
sbb
jecxz
inc
lock
push
mov
test
je
mov
add
jle
mov
mov
ins
mov
add
add
adc
inc
out
inc
xor
jge
add
push
(bad)
mov
shl
jbe
sar
div
adc
adc
(bad)
fbld
(bad)
je
mov
cmp
mov
je
mov
mov
xor
pop
ret
push
ins
inc
cld
push
sub
(bad)
je
rol
xlat
sbb
out
xchg
adc
add
or
push
aas
(bad)
add
sbb
clts
outs
loop
and
sub
mov
xor
add
push
out
or
dec
mov
jle
mov
add
adc
add
ror
cmp
ja
(bad)
jmp
mov
mov
cmp
ja
jmp
add
inc
adc
shl
pop
mov
cmp
xadd
push
mov
jae
add
jge
adc
pop
mov
mov
sbb
push
mov
push
sbb
add
ja
push
pushf
push
jmp
clc
(bad)
ror
xchg
or
daa
jg
sbb
(bad)
or
pop
fcomp
scas
push
(bad)
mov
mov
add
ret
sahf
in
adc
pop
fsubr
aaa
int3
push
inc
retf
cmp
fadd
jle
mov
test
inc
hlt
add
test
or
mov
inc
inc
jmp
fld
fstp
fnsave
adc
sbb
xchg
es
or
and
push
push
lea
and
sub
cmp
(bad)
mov
lock
pop
ja
jb
popf
jmp
neg
mov
push
mov
pop
push
sbb
jg
add
shl
sti
add
sar
mov
inc
add
dec
push
fs
cmps
jl
mov
arpl
pop
pop
or
rol
lea
push
inc
add
cmps
imul
add
loope
cbw
stos
(bad)
in
jo
cmp
lahf
aas
and
sub
clc
jg
push
push
cmp
jne
test
jne
push
xchg
imul
sbb
shl
jle
add
mov
cmp
jl
inc
add
cmp
jl
mov
push
stos
xor
retf
push
inc
cmc
dec
aad
mov
mov
dec
cmp
ja
jmp
cmp
sbb
retf
pop
hlt
add
add
fs
outs
retf
nop
adc
not
sub
add
arpl
aas
mov
or
daa
mov
mov
xchg
add
push
nop
push
enter
adc
lea
add
cmp
mov
jae
inc
test
add
mov
std
aaa
or
rol
sbb
mov
cmp
jne
cmp
jae
cmp
(bad)
(bad)
push
mov
push
cmp
jb
cmp
ja
add
mov
mov
cmp
je
add
pop
push
or
out
mov
leave
fistp
jmp
add
mov
inc
cmp
and
(bad)
jb
imul
xchg
lahf
sub
(bad)
rol
int3
dec
and
add
sub
sbb
shl
sub
dec
(bad)
aas
pop
and
or
mov
test
cli
pop
or
mov
inc
mov
inc
jmp
test
je
and
dec
lea
es
mov
jne
sbb
add
add
push
add
jl
sbb
and
jb
clc
sbb
add
xor
idiv
(bad)
dec
adc
jmp
push
aaa
adc
mov
sbb
mov
and
inc
cmp
jne
(bad)
bswap
inc
mov
xlat
jae
fadd
cs
stos
or
jge
sbb
dec
mov
lds
add
test
fild
pop
mov
dec
dec
or
outs
jmp
sbb
xor
aad
jmp
inc
inc
add
pop
pop
movnti
out
mov
test
aas
push
and
xor
sub
adc
mov
push
sbb
jbe
fiadd
mov
push
nop
lds
adc
push
inc
jmp
(bad)
(bad)
out
cmp
lods
xor
pop
or
mov
or
or
inc
add
mov
mov
sbb
test
lock
inc
sub
pop
push
push
jmp
test
push
test
mov
inc
mov
push
jl
ins
cmp
jg
(bad)
add
(bad)
cld
mov
add
adc
lods
test
jne
mov
mov
dec
and
cmps
mov
inc
idiv
es
lds
mov
(bad)
inc
jne
test
je
mov
mov
mov
pop
dec
or
ja
cmc
das
jmp
mov
fst
les
dec
xchg
push
or
test
jo
push
sub
sub
inc
adc
mov
inc
mov
dec
mov
pop
cmp
xlat
sub
inc
dec
and
dec
test
sahf
outs
das
(bad)
(bad)
cmp
xchg
push
mov
push
mov
mov
mov
out
loopne
inc
adc
sar
mov
pop
cmp
inc
cmp
dec
or
enter
cli
iret
aad
mov
mov
jl
cmp
jne
add
cmp
mov
pop
cwde
sub
xor
cmp
je
push
mov
fistp
xor
add
push
pushf
ins
add
ret
jl
sub
test
cwde
std
nop
xor
dec
clc
mov
push
aas
les
pop
dec
inc
and
je
push
std
sbb
add
jmp
mov
push
inc
mov
and
cmp
push
and
jae
sbb
sub
sub
dec
and
cmp
je
(bad)
xlat
fmul
loope
dec
(bad)
imul
data16
push
mov
jmp
test
xor
ret
add
and
int
ja
jmp
mov
or
stos
call
fcom
push
enter
test
add
pop
add
adc
call
add
outs
retf
movsx
push
push
sub
sub
xor
rol
lea
imul
test
jle
push
lea
cmp
add
sub
mov
lea
sbb
mov
inc
mov
retf
inc
mov
cmp
add
add
stos
call
mov
sub
xchg
out
int3
and
out
pop
xor
add
adc
inc
dec
and
push
push
je
cmp
jnp
mov
or
daa
(bad)
cs
test
add
bound
or
ss
das
pop
adc
scas
scas
inc
jne
fwait
sub
fild
mov
mov
mov
mov
xor
pushf
sbb
cmc
pop
mov
dec
mov
xor
sbb
add
pop
mov
push
cmp
add
dec
inc
add
mov
rol
sbb
push
adc
jg
cmp
(bad)
lea
ret
jle
push
lea
sbb
and
push
loopne
dec
cmp
inc
push
adc
retf
mov
ins
and
fwait
cmp
mov
or
jmp
inc
or
int
jp
mov
xchg
out
jmp
pushf
mov
add
mov
sub
(bad)
adc
sub
lea
rol
or
or
test
xchg
mov
call
mov
mov
adc
sti
out
aas
mov
dec
add
sub
inc
mov
and
mov
je
or
xor
aaa
pop
loopne
out
call
or
pushf
aam
add
test
mov
push
jge
jne
mov
sub
mov
mov
dec
add
in
pop
ret
sub
dec
adc
cmp
cmps
je
sbb
or
repz
lea
mov
push
push
push
mov
ret
retf
mov
in
lds
aaa
sub
jnp
add
or
inc
and
mov
mov
gs
add
push
adc
or
adc
js
inc
push
push
jno
jmp
inc
and
cmp
jmp
sahf
push
push
out
adc
sbb
jbe
sub
mov
or
lock
dec
sub
cmp
lea
scas
add
sub
add
inc
mov
xchg
mov
lods
into
loope
xor
inc
adc
mov
sub
dec
into
outs
xor
imul
ret
dec
add
sub
retf
push
add
push
movs
sub
daa
or
dec
adc
sbb
mov
push
pop
adc
sbb
sub
mov
loop
pop
shr
repz
dec
(bad)
rcl
fidivr
dec
mov
mov
rol
mov
xchg
cs
inc
inc
or
shl
minps
mov
push
push
into
dec
pushf
xchg
or
mov
test
lea
or
mov
dec
mov
cmp
fisttp
test
cld
adc
mov
mov
loopne
in
jo
jmp
or
in
ret
sbb
enter
lea
scas
xchg
xor
mov
xchg
(bad)
ffreep
inc
cmp
lea
jl
add
mov
mov
jbe
xor
or
shl
inc
(bad)
fadd
dec
jno
jmp
jae
pop
cmc
sbb
cmp
(bad)
cmp
pop
jge
mov
or
jl
add
cmp
neg
std
call
jne
cmp
jns
test
movs
test
int
or
cmp
cmps
scas
(bad)
sbb
mov
js
jmp
mov
sbb
inc
add
test
inc
aaa
jne
mov
add
rol
xchg
mov
cmc
mov
adc
mov
mov
push
push
inc
inc
pop
add
je
mov
hlt
sbb
dec
xchg
fwait
(bad)
cmp
inc
lock
pusha
xor
adc
sub
add
push
cs
scas
jo
enter
sub
inc
cmp
clc
cmp
je
xor
adc
mov
inc
adc
aaa
jg
jae
dec
push
fdiv
cmp
je
mov
jo
or
mov
cli
movs
btr
mov
popf
jecxz
push
pop
adc
jl
jmp
mov
inc
jg
pop
push
dec
jp
cmp
jge
mov
jbe
and
push
mov
inc
or
xor
inc
aad
sbb
and
xchg
dec
dec
cli
mov
push
mov
(bad)
sub
aas
sbb
jb
mov
in
cdq
cli
lea
push
jge
nop
add
into
adc
sbb
cmp
add
adc
xor
icebp
cdq
or
imul
jo
jae
addr16
je
sbb
lock
aam
push
push
mov
push
sysret
mov
cmp
mov
mov
mov
cld
or
adc
imul
jl
and
adc
inc
add
(bad)
xcrypt-ecb
cmps
xadd
and
push
push
push
outs
ret
clc
in
ds
retf
xor
push
(bad)
mov
jl
xchg
jecxz
inc
mov
test
mov
jae
or
cmp
ret
out
jne
jnp
or
adc
jbe
mov
or
ret
ds
mov
stos
or
test
(bad)
cmps
push
pushf
sbb
push
(bad)
sub
push
nop
lock
pop
(bad)
jmp
push
(bad)
adc
inc
cmp
push
lock
or
nop
push
fadd
and
pushf
push
add
push
popf
fs
in
and
mov
pop
and
add
mov
fistp
lods
or
mov
scas
mov
test
push
mov
je
imul
call
lock
je
and
jo
xchg
jo
cmps
mov
arpl
(bad)
test
dec
scas
add
sub
xor
lahf
push
push
ins
in
inc
sbb
sbb
and
clc
fwait
clc
cmp
lock
add
cmps
je
inc
cmp
cwde
nop
add
dec
jmp
xor
xchg
popa
loope
daa
adc
jmp
push
mov
and
sub
pop
lods
sub
sbb
inc
push
sub
push
es
cld
adc
jl
dec
jge
cmp
inc
cld
icebp
cmp
jle
push
inc
dec
sbb
inc
fist
push
sub
dec
lea
int
leave
jle
lea
xchg
add
mov
jmp
sub
cmp
add
add
jne
sti
jae
inc
or
mov
dec
ins
mov
inc
pop
scas
or
sbb
movntq
out
ds
or
into
mov
stos
dec
in
mov
dec
cmp
shl
or
rcr
fist
add
and
ins
and
mov
xor
cli
or
sub
jnp
and
jo
adc
dec
cmp
jge
push
nop
scas
stos
inc
add
add
or
sub
pop
dec
mov
xor
sub
int3
mov
or
inc
and
sub
push
add
adc
int3
outs
mov
cmp
cld
xchg
sub
call
cmp
xor
and
sub
jb
test
xlat
retf
mov
adc
dec
std
pop
rol
jle
sar
cs
push
sbb
sub
dec
or
mov
inc
or
adc
or
enter
inc
adc
dec
add
pushf
js
jno
push
adc
lds
addr16
jae
retf
ret
aam
inc
call
pop
push
dec
mov
call
mov
push
push
cmp
push
push
int
retf
sub
imul
adc
cmp
mov
fs
sbb
add
inc
cld
idiv
sbb
and
js
dec
ds
stos
cmp
ds
or
xor
xchg
ror
cmp
aad
cmp
xor
sbb
cmp
and
(bad)
call
test
test
push
pop
inc
push
gs
jp
push
addps
jmp
push
push
pop
jge
fwait
and
aam
add
xor
inc
les
sbb
ror
pop
add
(bad)
test
sar
add
mov
mov
push
or
dec
mov
xor
shl
dec
pop
lock
push
pop
cdq
sbb
retf
add
or
add
mov
or
xchg
add
inc
and
push
loopne
and
cdq
out
add
test
pop
pop
cmp
dec
test
pop
inc
inc
or
(bad)
fist
adc
mov
sbb
cmc
adc
dec
rcl
mov
fmul
adc
adc
ins
mov
inc
daa
cmps
sbb
push
into
xchg
mov
and
ja
jp
shl
dec
pusha
push
push
sub
and
inc
call
sbb
cmp
jge
adc
stos
movsx
cmp
jge
jecxz
push
and
sti
push
inc
movs
fmul
push
add
add
mov
adc
inc
push
rcr
inc
push
mov
jge
ja
inc
dec
push
or
rol
push
inc
hlt
add
inc
and
dec
bound
lock
or
ret
cmps
dec
and
xor
lock
mov
lods
adc
loopne
jecxz
xchg
jp
stos
retf
mov
stos
pushf
outs
pop
xor
sbb
cmp
das
mov
adc
mov
push
or
leave
ficom
out
or
push
push
mov
xchg
stos
sbb
add
and
mov
push
out
pop
mov
(bad)
push
cmc
jb
lea
sub
adc
inc
adc
inc
cmp
shl
push
xor
cmp
imul
add
mov
jo
xor
ret
xor
sub
das
fstp
mov
push
loopne
in
cmp
mov
movs
inc
mov
sbb
(bad)
jl
mov
push
sub
(bad)
lahf
inc
aas
add
add
sbb
mov
xchg
jo
pop
mov
clc
xor
enter
ins
pushf
ins
dec
fst
adc
jnp
inc
fdiv
and
pop
and
sbb
cmp
mov
mov
dec
mov
movsx
ret
into
aam
ja
add
cld
(bad)
call
xor
adc
fdivr
mov
inc
retf
inc
or
lea
nop
popa
mov
adc
and
test
jne
pop
pop
mov
mov
aad
sti
mov
push
in
inc
mov
add
push
or
cld
loope
sbb
pop
mov
or
xchg
popf
inc
or
lea
movsx
sbb
dec
mov
or
adc
retf
into
call
sub
inc
dec
push
leave
jl
xor
adc
retf
mov
aam
es
out
add
shl
aad
inc
sub
icebp
fst
mov
inc
and
mov
dec
sub
mov
add
cmp
push
jne
push
cmp
dec
xchg
and
sub
mov
xor
adc
xchg
out
jmp
mov
mov
fistp
hlt
mov
xor
sar
ins
js
add
xchg
ror
push
mov
xchg
mov
or
fcom
cs
pop
or
jb
cs
js
mov
mov
je
nop
mov
cmp
jmp
scas
or
push
retf
mov
add
inc
cwde
add
scas
sbb
or
out
cs
cmp
mov
arpl
jo
rsqrtps
pop
add
inc
leave
es
cmp
cmp
xor
push
push
add
xor
cmp
js
and
rcr
jno
or
xor
cmps
fs
in
(bad)
call
cmc
push
outs
sbb
and
and
mov
pusha
mov
popf
sbb
and
or
ud0
test
adc
pop
and
cmp
je
and
clc
arpl
ret
jge
loope
mov
add
and
adc
arpl
cdq
push
adc
add
jne
repnz
mov
cmp
mov
lock
inc
jne
mov
cmp
je
or
jecxz
popa
loopne
add
push
clc
xor
lods
jns
stos
mov
xchg
jp
mov
sbb
push
out
cmp
push
les
dec
cmp
cmp
sub
rcr
push
sub
je
add
dec
mov
sub
cmps
jne
call
add
outs
mov
mov
fidiv
cs
sbb
pop
int
pop
fadd
add
enter
addr16
fist
cld
je
cmp
je
jl
push
dec
or
mov
xrelease
add
mov
jmp
mov
push
shr
sbb
jne
mov
js
push
push
lea
push
out
jg
mov
mov
retf
or
mov
imul
pop
mov
test
movs
call
icebp
push
mov
push
adc
ins
pop
adc
add
sbb
or
(bad)
mov
xor
test
or
jne
jnp
inc
les
pop
ins
mov
retf
je
push
inc
or
adc
or
imul
sbb
add
lds
cmp
call
mov
xor
call
add
mov
fadd
adc
jle
jg
fmul
sbb
add
pop
lock
jmp
shl
add
mov
mov
pop
cmc
fwait
stos
fistp
test
call
or
je
ret
xor
and
popa
xlat
loope
cmp
lods
call
les
and
test
mov
dec
push
cld
cmps
push
dec
cmp
je
movs
add
push
test
or
ret
les
pop
ret
mov
(bad)
je
push
popa
dec
cmp
aaa
je
mov
ret
pop
lods
sub
or
aas
add
lods
sub
int3
push
push
push
mov
push
push
ss
sub
push
pop
(bad)
xlat
mov
xor
cmps
or
aam
push
sti
js
sub
add
sub
rol
xor
push
sub
sub
xor
cmp
xlat
push
jo
scas
mov
pop
push
push
inc
idiv
out
add
adc
push
push
adc
inc
pop
pop
push
(bad)
and
or
dec
loope
arpl
adc
adc
push
add
ret
test
dec
in
dec
add
out
out
push
mov
shl
push
push
push
or
adc
call
xor
popf
sti
aaa
mov
pop
push
inc
push
push
push
call
or
clc
pusha
pop
mov
push
mov
add
inc
inc
hlt
cmp
nop
cmp
push
dec
sub
add
dec
and
push
push
call
push
inc
test
loopne
pop
ja
neg
lahf
pop
cmp
shr
shr
push
and
mov
jle
or
je
mov
fistp
pop
or
pop
test
test
xchg
ret
or
sbb
sub
std
sub
dec
mov
mov
sbb
add
mov
stc
xor
mov
dec
je
dec
jne
lea
imul
jb
int
add
jmp
jne
lea
fimul
leave
fdivr
or
mov
test
jne
lea
xor
pop
pop
ret
mov
or
cmc
add
push
(bad)
scas
cmp
je
mov
xchg
and
dec
sbb
arpl
add
out
scas
or
jecxz
fdivr
xor
push
push
mov
clc
mov
push
out
nop
clc
dec
add
lea
dec
ja
add
mov
mov
mov
sbb
add
xchg
std
or
push
mov
shr
pusha
or
adc
cmp
sbb
(bad)
xor
push
add
dec
test
lea
jge
add
loope
inc
or
(bad)
loopne
xchg
in
add
adc
(bad)
pop
dec
cmp
fisttp
mov
xchg
lea
ret
je
rol
leave
and
add
sub
mov
mov
popa
add
dec
push
cmp
test
pop
mov
loop
loop
push
adc
pop
add
rol
sbb
je
add
js
xor
scas
fsub
mov
sub
(bad)
mov
jp
jne
sub
push
push
mov
pop
in
mov
or
dec
adc
and
dec
sub
mov
jg
into
gs
mov
push
push
push
push
call
adc
dec
call
fdivr
fdiv
push
jg
adc
push
mov
push
push
jb
sub
test
loope
xor
data16
pop
mov
push
cmp
mov
(bad)
in
ins
(bad)
pop
mov
stos
mov
add
dec
ss
push
ja
jg
xor
push
push
int
add
dec
fmul
js
xor
push
dec
pop
retf
or
loop
or
pusha
ins
xor
or
(bad)
mov
mov
fwait
adc
push
push
fwait
aam
adc
add
adc
in
pop
mov
mov
adc
pusha
ror
in
je
mov
dec
pusha
adc
and
dec
jb
mov
pop
fcom
pop
mov
pop
adc
aad
(bad)
pop
push
icebp
fisub
lahf
(bad)
push
push
or
sbb
push
mov
jmp
fild
cmp
push
(bad)
lock
push
fcomip
xor
push
dec
addr16
sbb
stc
rol
push
jl
add
dec
push
(bad)
out
mov
push
dec
add
add
dec
and
ja
popf
fist
add
hlt
(bad)
cmp
scas
aam
jns
add
sub
adc
xchg
sub
aam
sbb
and
sbb
(bad)
outs
push
sub
add
aad
sub
mov
test
inc
aas
sub
and
jle
or
inc
sub
mov
neg
add
mov
dec
add
jg
adc
add
cmps
test
inc
loopne
or
add
shl
dec
push
and
lds
mov
push
mov
fild
mov
push
sahf
sub
or
inc
adc
or
and
lea
add
sub
sbb
inc
push
mov
imul
sub
add
test
mov
je
push
call
jmp
mov
test
sub
push
stc
inc
add
pop
test
push
add
or
or
push
push
push
sbb
and
repnz
and
sub
outs
cmp
mov
xchg
call
lahf
push
push
and
push
imul
push
lea
xor
lock
pop
mov
cmp
mov
les
cs
mov
or
jle
push
push
call
adc
mov
in
je
cld
(bad)
mov
push
cld
add
xlat
mov
push
mov
call
pop
mov
lea
adc
mov
push
push
push
(bad)
adc
push
cdq
ds
cld
call
jmp
mov
mov
arpl
rcl
inc
mov
push
inc
jl
adc
jnp
pop
adc
je
dec
adc
add
or
xchg
push
adc
jo
nop
and
data16
lock
loopne
std
dec
mov
inc
ret
mov
dec
inc
ror
inc
cld
sub
mov
add
jb
inc
rol
xor
(bad)
(bad)
cmp
jne
mov
ret
mov
cmps
nop
adc
inc
pusha
sub
and
xchg
pusha
or
lahf
arpl
out
add
inc
inc
pop
mov
cmps
adc
push
jp
ret
cwde
cmps
push
add
shr
push
inc
inc
or
mov
jg
xlat
hlt
push
call
and
add
or
cmp
jle
dec
push
lock
jmp
cli
scas
dec
adc
call
xchg
or
cmc
adc
dec
aas
inc
sub
jg
mov
xlat
mov
(bad)
mov
or
lds
jg
icebp
inc
adc
or
cmps
es
push
iret
cmp
push
into
jno
retf
sub
(bad)
out
adc
sbb
enter
retf
add
push
sub
push
add
push
pop
inc
add
inc
cli
xchg
xchg
adc
xchg
ret
inc
add
or
mov
iret
je
and
cld
call
push
add
jle
je
jg
sub
iret
xchg
or
cmp
cmp
lea
xor
sbb
push
addr16
sbb
and
and
aad
test
jae
push
repnz
add
aas
jl
das
jnp
ja
add
jl
ja
and
mov
ja
pop
and
mov
sbb
or
mov
mov
push
push
dec
popa
mov
or
xor
inc
sub
pop
sub
and
add
add
fiadd
mov
and
push
ja
cdq
sti
fwait
or
nop
test
call
add
out
ins
jl
dec
mov
mov
ret
cmp
jmp
fs
mov
inc
add
nop
retf
mov
shl
cmc
xor
push
mov
adc
add
inc
and
test
je
arpl
fist
pop
lock
ja
ja
xor
in
add
ret
add
mov
push
push
fld
xchg
repz
adc
cmp
mov
test
mov
fnstsw
ins
test
jne
mov
mov
mov
ja
adc
push
les
or
mov
fimul
cmp
xor
push
ds
clc
cmps
jno
inc
push
push
push
repnz
adc
mov
sbb
adc
pop
pop
mov
push
sub
cs
fst
inc
cwde
adc
imul
(bad)
(bad)
(bad)
out
inc
or
(bad)
and
xor
ss
jecxz
adc
xor
jne
mov
outs
clc
rol
jbe
clc
sub
cmp
xchg
adc
and
je
sbb
out
xor
je
loope
mov
pop
cmp
lock
push
push
push
inc
enter
scas
or
outs
ret
add
inc
(bad)
iret
xor
push
fnsave
mov
shl
mov
int3
add
cwde
scas
adc
push
lock
add
jo
push
stos
cld
bswap
add
add
mov
or
mov
xchg
pushw
push
inc
mov
adc
jbe
adc
sub
push
scas
lahf
push
inc
push
sub
add
mov
jmp
mov
leave
adc
stos
fisttp
adc
sub
dec
adc
(bad)
mov
add
lods
pop
movs
data16
xor
mov
mov
mov
mov
mov
fimul
aaa
add
add
or
mov
shl
js
inc
je
push
mov
dec
mov
add
(bad)
je
add
and
xor
sbb
sbb
leave
ret
mov
sub
or
sub
fcom
inc
lods
or
(bad)
xlat
add
in
mov
mov
shr
adc
add
sub
jl
sbb
dec
push
xor
in
call
push
aad
add
inc
xor
pop
fs
shl
sbb
mov
fnsave
push
mov
mov
sti
mov
inc
push
jmp
fiadd
and
adc
test
xor
xchg
cmovno
mov
out
adc
jge
das
aam
add
and
add
std
inc
mov
add
sbb
ret
mov
shr
mov
sbb
adc
(bad)
call
sbb
cmp
jle
adc
xor
hlt
dec
loopne
fidiv
jns
push
and
add
add
fstp
frstor
fst
or
test
add
dec
add
push
js
ja
add
xchg
ds
cwde
(bad)
sub
mov
mov
sar
mov
add
mov
mov
mov
mov
scas
jg
add
(bad)
pop
sbb
clc
add
mov
call
and
leave
rol
mov
pop
pop
jo
popa
fmul
mov
fisttp
push
and
ror
and
cmp
cmc
mov
xchg
mov
daa
movs
inc
push
mov
mov
mov
cmp
mov
mov
push
test
into
cmp
jg
jne
mov
outs
loop
dec
dec
mov
sbb
mov
aad
mov
stc
dec
inc
mov
sbb
(bad)
outs
or
icebp
(bad)
aas
adc
add
jmp
test
jne
mov
into
xchg
dec
jno
test
and
inc
jecxz
fidivr
mov
(bad)
je
add
iret
ret
xchg
lods
loope
jno
or
mov
retf
push
jne
and
pusha
js
test
adc
es
out
dec
mov
add
push
push
inc
xadd
fcom
in
add
test
sub
addr16
push
aam
sub
sub
sbb
out
sbb
mov
and
cli
cmp
mov
sub
mov
dec
sub
and
cmps
jo
movs
jg
and
fwait
and
inc
test
and
xchg
cmp
dec
and
sub
cmp
and
cli
int3
dec
add
mov
out
pop
lods
pop
fnstenv
aam
inc
push
mov
call
mov
je
mov
add
sbb
mov
mov
sar
cdq
call
add
outs
aaa
mov
das
adc
pop
mov
cmp
jne
(bad)
or
sti
fcom
add
dec
cmp
je
or
mov
jne
ret
or
add
xchg
imul
xor
sub
jl
and
test
mov
cmp
xor
imul
add
push
adc
fwait
push
push
mov
mov
mov
cmp
ins
add
mov
push
add
adc
jo
dec
movs
(bad)
inc
cmp
jne
stos
sbb
nop
lds
mov
and
test
and
(bad)
aam
push
outs
adc
or
aad
xor
call
or
stos
test
and
adc
nop
imul
sub
aam
aad
dec
iret
and
popf
inc
int
add
sbb
loopne
int
(bad)
jmp
mov
je
sbb
fldenv
inc
and
mov
sub
inc
adc
add
das
sbb
rcr
cmp
clc
or
or
fild
call
mov
mov
pop
aas
(bad)
pop
sbb
mov
enter
xor
call
out
test
mov
inc
les
into
mov
test
jae
test
and
test
add
sub
cmp
stc
dec
pop
mov
cdq
inc
loope
stos
or
push
add
dec
aaa
out
mov
mov
inc
pop
cmp
push
xchg
jmp
jmp
shl
loope
jo
sub
xchg
rcl
call
(bad)
loop
fcomp
call
xchg
mov
repnz
inc
push
push
push
jo
mov
pop
sbb
push
and
mov
dec
rdmsr
cmp
pop
call
mov
add
in
call
pop
mov
xor
or
xor
cmp
fld
inc
rol
inc
pop
out
(bad)
cmps
add
xor
mov
jl
sub
xchg
and
fcom
data16
popa
in
xchg
out
popa
push
inc
pusha
enter
or
rcl
inc
inc
adc
dec
add
adc
dec
mov
mov
test
and
cmp
dec
movs
adc
push
pusha
icebp
mov
pop
and
push
inc
leave
dec
and
push
ror
(bad)
pop
push
and
push
xchg
pop
adc
push
xchg
xor
test
cmps
sub
push
shld
mov
inc
sbb
pop
dec
add
jo
stos
mov
add
jne
adc
inc
test
loopne
outs
adc
loop
pusha
xor
adc
jae
jl
test
push
sub
add
add
(bad)
ja
mov
lea
shl
jmp
shl
mov
inc
jmp
stos
xor
jg
push
dec
sub
cmp
jbe
push
dec
and
lea
daa
cmp
cmp
test
cld
xlat
pop
mov
mov
fiadd
mov
push
call
add
les
add
push
or
push
mov
mov
adc
push
(bad)
xchg
adc
dec
popf
(bad)
jmp
sub
(bad)
popf
sbb
(bad)
je
dec
adc
push
mov
sbb
or
or
jle
sub
jnp
jle
mov
cmp
lsl
(bad)
adc
cmp
jne
mov
jne
cmp
test
call
add
aaa
je
cmp
jne
cmp
jne
xor
jg
inc
xor
mov
xor
mov
or
(bad)
dec
jo
dec
or
rol
inc
rol
or
out
loopne
cmp
cld
pop
sti
neg
inc
mov
mov
lea
lea
cmp
jg
xchg
mov
daa
pop
mov
clc
mov
lea
int
and
int3
inc
cld
dec
sub
add
aas
add
lea
sub
lea
push
mov
jbe
je
cmp
mov
add
mov
dec
cmp
mov
push
dec
mov
cmp
imul
add
jae
mov
loope
xor
dec
test
jno
xor
cmp
mov
cmp
mov
jbe
mov
sar
mov
xchg
mov
aaa
ret
mov
sahf
div
stc
int3
(bad)
(bad)
cmc
add
mov
pop
inc
push
dec
clc
jmp
lods
and
and
fist
cmp
push
je
call
imul
lea
test
cmp
shl
(bad)
sub
mov
inc
mov
lahf
cmp
ja
sub
adc
inc
add
and
add
inc
sub
ds
mov
inc
dec
sub
(bad)
(bad)
pop
ja
xor
sub
push
push
inc
call
cld
and
loop
mov
mov
add
and
mov
icebp
add
adc
out
bound
xor
mov
fsubrp
add
cmp
mov
je
and
stos
and
lods
lea
add
inc
add
mov
(bad)
mov
cmp
inc
mov
dec
jl
(bad)
sbb
adc
ror
rcl
fwait
std
add
add
lods
arpl
in
add
push
push
ins
arpl
push
add
add
fadd
or
je
sahf
in
inc
pop
adc
pop
lds
(bad)
not
ret
jmp
xor
adc
mov
(bad)
mov
push
mov
repz
pop
js
aas
push
shl
rcr
out
push
pop
ret
mov
jbe
(bad)
(bad)
mov
test
test
add
sbb
pop
add
or
jecxz
mov
add
movs
fild
add
mov
sbb
in
xor
mov
push
ret
mov
add
data16
adc
mov
mov
mul
xor
xor
mov
adc
mov
adc
mov
or
adc
lea
pop
dec
ins
xor
int
mov
mov
pop
or
imul
push
add
(bad)
inc
add
push
cmp
push
mov
and
lea
lea
sub
mov
jmp
add
xor
mov
ja
les
adc
dec
jne
lds
mov
jmp
(bad)
mov
mov
add
mov
adc
or
clc
call
mov
mov
mov
mov
inc
paddd
sbb
ds
test
shl
cmp
cmp
pop
lock
(bad)
ds
or
mov
mov
mov
iret
retf
mov
xchg
cmp
sbb
add
cmp
mov
xchg
cmp
div
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
(bad)
mov
pop
mov
jne
jmp
mov
or
pop
(bad)
cmp
je
mov
adc
add
adc
jg
rcl
jle
mov
inc
mov
(bad)
std
mov
mov
push
mov
mov
sbb
add
inc
inc
cmp
jl
push
xor
jo
ror
inc
std
jg
mov
dec
sbb
add
rol
dec
mov
mov
mov
mov
dec
adc
jmp
cmp
inc
mov
aaa
inc
mov
mov
mov
mov
inc
cmp
jb
mov
mov
shl
mov
pop
and
retf
and
and
mov
shr
mov
mov
mov
sub
mov
cmp
ds
dec
dec
xor
cmp
cmp
xor
mov
mov
sti
mov
mov
mov
sub
add
fsin
dec
adc
dec
je
adc
iret
dec
or
mov
rol
xor
ins
div
dec
dec
sub
sbb
mov
jae
fisub
mov
inc
xor
jbe
sub
(bad)
ja
mov
pop
dec
sub
ror
mov
sub
mov
shl
mov
ffreep
out
sbb
jmp
sub
add
pop
cmp
push
loopne
enter
lahf
and
jmp
test
mov
shr
jecxz
sub
ss
lahf
std
mov
dec
in
xor
dec
xor
xchg
add
jmp
sub
sbb
dec
dec
sub
mov
sub
mov
stos
dec
and
sar
dec
or
retf
and
(bad)
adc
fisttp
inc
add
popa
pop
add
mov
or
inc
adc
cmp
mov
jb
fnstsw
adc
cmovne
jmp
or
mov
jg
jge
and
cmp
mov
jb
mov
mov
ret
dec
es
inc
and
into
js
jmp
retf
sbb
or
mov
jmp
es
outs
ins
or
outs
and
inc
jp
jecxz
xor
mov
sub
cmp
or
sub
pop
mov
shl
cmp
sbb
mov
test
(bad)
ror
loop
fidivr
aad
sar
jmp
mov
or
add
and
dec
inc
cmp
mov
mov
mov
shl
fsubr
xchg
and
(bad)
(bad)
inc
lea
shl
mov
add
mov
shr
sub
add
mov
mov
loopne
mov
mov
clc
dec
add
test
je
mov
mov
sbb
jne
mov
mov
cmp
jne
add
cmp
or
add
clc
out
xor
xchg
add
mov
jbe
adc
add
sar
mov
mov
aas
push
aad
ins
mov
imul
mov
std
out
(bad)
sbb
mov
jmp
push
mov
cmp
jne
mov
imul
jae
mov
or
sar
mov
xchg
jg
inc
cmp
ja
inc
add
and
jge
aaa
xor
xor
mov
je
xchg
add
aas
push
push
inc
add
push
add
ffreep
sbb
xor
fmul
sub
adc
adc
cmp
jge
add
and
push
dec
into
inc
mov
cdq
test
stc
stc
jg
in
stc
stc
jmp
inc
shl
dec
mov
ja
aas
sub
or
js
sbb
pop
add
out
and
ja
jl
pop
imul
add
inc
mov
je
pop
and
mov
adc
and
fld
loope
jmp
lea
push
and
pusha
ds
enter
cmp
loop
dec
pop
jl
mov
ret
and
loopne
mov
push
ret
or
adc
das
ret
std
arpl
adc
mov
push
inc
cmc
mov
and
lea
mov
mov
mov
sbb
sub
xor
loopne
inc
mov
add
mov
and
or
inc
sbb
mov
ror
sar
jmp
dec
les
mov
mov
push
arpl
mov
xor
pop
xor
icebp
xchg
popa
movs
aam
mov
shl
jle
rol
jle
sbb
cwde
cmp
pop
adc
push
pop
jl
arpl
mov
mov
or
push
dec
push
lock
xchg
jmp
ins
sbb
ret
test
sbb
or
leave
pop
aaa
cmp
aam
je
cmp
dec
outs
loop
push
jne
mov
ffreep
inc
sbb
xor
pop
leave
fnstsw
imul
or
enter
mov
sbb
add
leave
xchg
dec
aaa
jnp
inc
jmp
mov
sbb
je
cld
int
adc
test
mov
ret
sbb
mov
mov
jbe
cmp
xchg
mov
and
sbb
mov
xor
add
mov
dec
jge
push
dec
and
push
cmp
cdq
and
push
sbb
jne
mov
pop
and
xor
cmp
jle
(bad)
mov
pop
pop
and
icebp
out
and
mov
push
push
push
push
xor
sbb
hlt
addr16
inc
push
mov
xchg
in
and
inc
bts
push
ffreep
or
jb
jg
and
out
sub
lods
add
test
stos
or
mov
cmps
shl
out
add
pop
add
add
popa
inc
cld
cmovno
push
and
jbe
or
or
dec
mov
das
push
add
push
movs
loop
mov
dec
xor
jl
cmp
rcr
inc
or
mov
push
mov
fcom
inc
sub
loopne
mov
add
pop
mov
je
lds
lea
sbb
sbb
inc
add
sub
inc
loopne
jb
or
imul
retf
push
cmp
lds
cmp
cmps
rcl
cmp
sar
add
cmps
call
push
rol
cli
scas
mov
sub
mov
fild
dec
ror
or
ins
loop
push
int
jg
cmp
push
jb
cld
mov
mov
jo
mov
cmp
lea
mov
loopne
(bad)
pop
mov
mov
cmp
pop
jle
sub
pop
dec
pop
popa
mov
jp
inc
sbb
adc
jmp
xchg
mov
mov
mov
mov
pop
fadd
mov
(bad)
mov
mov
xor
mov
add
xchg
stc
add
jp
adc
test
and
mov
dec
aaa
add
xor
or
jmp
sub
adc
or
inc
push
div
adc
add
(bad)
(bad)
(bad)
jg
iret
mov
shl
add
test
jle
mov
mov
mov
add
add
dec
jne
leave
ds
neg
ret
mov
push
inc
xchg
int3
push
inc
inc
sbb
or
adc
enter
cmps
jmp
sbb
or
push
jbe
mov
sub
inc
aaa
rcr
pop
call
ja
and
cwde
es
sub
movups
ret
jne
jmp
outs
sbb
and
and
push
and
inc
mov
lock
jo
(bad)
sbb
adc
call
fmul
neg
ret
je
mov
dec
adc
jae
mov
inc
ror
add
or
push
xor
fsubr
ja
jae
inc
jmp
inc
call
jbe
ror
dec
out
xchg
adc
or
add
push
push
call
inc
jmp
inc
mov
fidivr
mov
pop
stos
out
das
fadd
add
pusha
lahf
mov
and
add
pop
mov
push
pop
fdiv
and
mov
xchg
(bad)
fs
add
in
mov
psubb
aad
mov
add
add
xchg
mov
loop
mov
push
pop
or
or
test
dec
pusha
(bad)
mov
mov
and
xor
stos
test
(bad)
jg
dec
and
xor
xor
xor
lea
mov
mov
push
push
push
add
sub
or
test
pop
and
sbb
xchg
mov
mov
test
jne
jg
add
aaa
lea
adc
iret
sub
cmp
add
push
test
je
test
je
test
jbe
push
sbb
test
push
and
add
jp
xchg
in
mov
test
jne
add
adc
cli
jmp
mov
ret
mov
push
mov
push
repnz
mov
test
or
sub
dec
push
sub
inc
test
add
test
add
mov
call
adc
adc
adc
sub
adc
enter
inc
(bad)
fidiv
loop
inc
xchg
xchg
and
inc
adc
jg
test
push
call
and
sahf
inc
add
shl
pop
dec
mov
push
lea
push
push
push
push
pusha
add
icebp
mov
fisub
sub
scas
or
sar
cmp
jae
jle
or
test
je
mov
stc
add
inc
and
shl
shr
fcomip
cmps
in
cmp
cmp
mov
je
(bad)
(bad)
ins
add
mov
jbe
add
in
js
or
and
ins
mov
lea
div
add
stos
jo
loopne
jne
lock
mov
mov
fsubr
push
inc
pop
mov
xchg
mov
sub
xchg
push
js
in
fst
test
jae
lea
xor
sbb
sub
cmp
lock
xor
sub
sub
and
icebp
sub
(bad)
cmp
(bad)
cmp
je
inc
and
inc
(bad)
cmp
jne
jmp
push
mov
(bad)
or
(bad)
jmp
add
cmp
je
sub
sub
cmp
mov
mov
jne
lea
and
push
adc
cmp
jne
add
dec
pop
mov
loope
xor
or
sub
push
ret
stos
adc
lods
loop
jo
std
xor
push
es
scas
xchg
add
lea
daa
mov
mov
adc
add
je
add
xor
je
lea
push
and
push
test
jle
mov
mov
shl
add
neg
xor
inc
add
inc
add
and
add
jmp
sub
cmp
push
jmp
test
jle
inc
inc
cli
dec
mov
add
mov
push
inc
mov
rep
mov
mov
add
dec
push
mov
call
mov
push
repnz
lea
push
(bad)
dec
aas
stc
pop
jge
push
dec
mov
mov
mov
ss
cdq
idiv
mov
int3
mov
adc
mov
je
int3
jl
call
inc
sub
mov
mov
rcr
jae
cmp
push
add
mov
cmp
adc
or
add
mov
add
inc
out
or
cmp
(bad)
and
test
jl
jmp
add
test
test
fst
(bad)
(bad)
adc
les
fcomip
cmp
(bad)
sub
nop
cmp
jae
cmp
xor
or
scas
xor
scas
movs
mov
lea
icebp
pop
mov
and
jge
fbld
add
pop
and
mov
or
dec
push
add
mov
push
mov
(bad)
mov
push
add
(bad)
lea
iret
push
and
ss
test
xchg
xchg
or
mov
cmps
inc
clc
xchg
icebp
adc
jle
push
adc
mov
pusha
call
pop
jle
mov
xlat
jmp
ret
mov
cmp
or
adc
xchg
xchg
nop
sub
and
push
rcr
pop
adc
and
mov
cwde
dec
test
ret
sub
test
and
aaa
mov
and
fwait
or
push
add
xor
add
or
add
int3
fisttp
or
int3
test
add
and
jne
je
out
sub
mov
push
popf
or
add
psllq
or
sub
push
push
jle
mov
outs
or
and
push
dec
(bad)
out
mov
add
movs
or
add
push
lds
test
mov
rcl
pop
test
(bad)
and
add
test
(bad)
inc
push
sbb
xchg
lea
push
out
fwait
xor
daa
ret
mov
inc
repz
fwait
dec
lea
mov
shl
lea
jmp
pop
push
cmps
data16
inc
arpl
loopne
push
push
lea
add
xchg
mov
push
dec
add
adc
sbb
int3
add
jns
or
mov
int3
push
jle
add
sbb
mov
pop
add
push
nop
mov
loop
les
push
push
add
sbb
les
adc
arpl
mov
inc
test
inc
test
sbb
mov
mov
pop
mov
jg
add
aam
or
je
sub
adc
cli
pop
xchg
jge
lea
ins
mov
or
(bad)
cmp
push
add
or
xchg
into
inc
mov
push
add
mov
push
add
fcom
mov
adc
or
jl
(bad)
call
adc
jmp
push
or
ret
jl
daa
(bad)
std
pop
stc
sub
sbb
dec
mov
shr
std
nop
out
add
(bad)
xor
mov
cmp
jle
mov
iret
jle
mov
mov
(bad)
je
mov
push
mov
jg
push
push
push
call
cs
cmp
jl
mov
es
scas
adc
push
push
lea
arpl
mov
add
data16
push
lea
mov
pop
jbe
adc
push
jg
ja
mov
les
loopne
aam
retf
es
jne
dec
nop
mov
icebp
outs
add
or
mov
push
sbb
push
push
mov
add
lea
mov
xchg
lahf
lea
push
inc
rol
sbb
addr16
sbb
xchg
jnp
retf
iret
and
call
lods
ins
jg
mov
mov
mov
shr
inc
and
cmp
push
std
iret
lea
jle
mov
mov
xor
mov
test
mov
jle
sub
sbb
sub
mov
fs
pop
sbb
je
call
call
push
and
scas
add
or
push
mov
mov
push
push
jmp
aaa
add
cli
cmps
in
add
pop
aaa
mov
lea
mov
cmp
je
push
sbb
lds
xor
or
add
cmc
(bad)
dec
test
jle
mov
cmp
je
mov
add
mov
jmp
add
call
lock
jl
mov
dec
ds
fimul
test
out
dec
in
lea
push
add
(bad)
leave
add
add
fs
mov
call
sbb
rcl
or
dec
mov
jmp
mov
shr
mov
sti
gs
ja
inc
fdivr
ret
ja
daa
and
int3
mov
push
ss
pushf
sbb
push
pop
adc
pop
cmp
cwde
inc
inc
enter
cld
add
dec
inc
lea
hlt
or
or
aas
add
stos
sub
add
fdivr
sub
rcl
sub
inc
stos
js
rol
(bad)
je
dec
and
cmp
pop
add
push
sub
jle
pusha
push
lock
mov
and
aad
and
jg
adc
aaa
inc
xlat
inc
inc
jae
cmp
push
mov
jle
lea
sub
out
add
jmp
add
xor
mov
add
or
inc
cmc
aas
mov
lea
cmp
jb
dec
loopne
loop
in
push
dec
push
push
mov
mov
mov
inc
dec
mov
push
mov
jle
push
cli
es
ins
mov
sbb
not
mov
and
(bad)
in
mov
out
or
lea
jmp
call
or
add
mov
and
not
and
or
cmp
call
push
mov
call
fst
loop
or
ja
mov
not
and
and
or
mov
test
and
jmp
jo
and
rol
jmp
jecxz
or
add
mov
and
not
and
or
sub
fisttp
pushf
pop
out
into
mov
out
shr
or
add
mov
(bad)
fstp
not
and
and
xor
std
mov
lea
(bad)
mov
shl
or
add
mov
and
not
cld
jns
mul
ret
js
add
shr
xchg
shl
out
(bad)
mov
add
mov
les
cmp
repz
test
shl
and
pop
imul
cmp
aad
add
ror
inc
xchg
pop
icebp
adc
rcr
inc
fcom
popf
mov
imul
mov
add
mov
icebp
enter
inc
add
shl
in
out
lahf
mov
loopne
cli
mov
mov
and
ret
out
jle
add
mov
les
shl
jg
fmul
test
ret
pushf
or
pop
add
shl
retf
mov
add
out
xchg
iret
popf
shl
iret
push
or
in
dec
(bad)
int
ja
and
nop
imul
loop
int
shl
fxch
out
(bad)
out
or
rcl
mov
std
adc
out
xchg
mov
or
sti
and
mov
and
les
xor
repz
cmps
xadd
adc
mov
fs
and
enter
fisttp
jecxz
dec
mov
mov
shl
shr
sbb
add
sub
cmp
mul
fucomp
sbb
push
test
loope
or
adc
cmp
add
and
and
in
mov
mov
mov
rcl
loop
or
mov
add
not
mov
and
dec
(bad)
out
aaa
jl
dec
mov
pop
push
pop
pop
es
or
mov
loope
pop
test
stc
dec
and
add
fidivr
mov
or
jg
mov
inc
pushf
add
das
(bad)
mov
shr
sbb
or
add
fstp
mov
mov
sub
pop
dec
sbb
cmp
push
adc
add
push
iret
add
not
mov
and
push
cmp
not
retf
ja
and
int3
adc
loop
mov
outs
cli
jmp
and
xor
ficom
shl
mov
enter
js
adc
out
xchg
or
jg
inc
ins
inc
neg
lea
ds
arpl
cmps
ret
dec
cmp
inc
cli
xor
mov
(bad)
pop
aaa
fadd
out
pop
shl
or
mov
add
int3
jg
push
jecxz
mov
jge
mov
mov
xchg
aad
and
rcl
shl
or
or
movs
xchg
sbb
adc
inc
mov
(bad)
loope
shr
mov
and
mov
push
sbb
add
jmp
in
inc
movs
inc
sub
shl
out
ds
clc
mov
pop
shl
(bad)
sbb
arpl
stc
add
sti
cmp
and
outs
clc
jg
test
fld
outs
addr16
int3
out
adc
loopne
mov
sti
loope
(bad)
push
or
movs
mov
mov
(bad)
loopne
pop
aaa
jge
xor
inc
shr
mov
add
xor
xor
add
outs
cli
mov
mov
dec
shl
or
mov
add
xor
(bad)
out
(bad)
xor
xor
sbb
fcmovb
jmp
shl
(bad)
jmp
fbld
xor
add
popa
popf
ins
mov
shr
sar
xlat
jmp
adc
cli
mov
add
xor
sub
lea
(bad)
cmp
std
mov
shl
shr
or
add
xor
clc
out
dec
and
out
inc
jmp
loope
(bad)
(bad)
mov
retf
lea
mov
shr
shl
or
mov
call
lea
hlt
(bad)
mov
jmp
shl
or
push
std
xor
mov
dec
and
push
ret
cmp
mov
jmp
ja
loopne
xor
add
lea
adc
mov
shl
or
(bad)
(bad)
mov
shl
rol
xlat
lea
mov
shr
shl
xchg
fmul
mov
push
aad
xchg
adc
(bad)
dec
fbstp
ror
ins
and
lea
outs
movs
inc
int
loope
shr
mov
mov
cmp
aam
jmp
shl
repnz
leave
shl
lea
aam
shl
(bad)
out
jmp
test
clc
jl
pop
mov
out
loopne
and
inc
(bad)
xor
push
xor
push
push
sub
fwait
aaa
gs
lods
(bad)
loopne
shr
or
fidiv
fwait
leave
sbb
push
inc
pop
inc
and
hlt
test
scas
outs
jmp
push
rol
or
outs
push
aad
rcl
outs
(bad)
icebp
xchg
jmp
inc
mov
shl
jl
pusha
add
or
(bad)
mov
pop
xchg
cmps
and
(bad)
aaa
cmc
fwait
push
inc
and
push
add
sub
push
mov
sub
std
ja
xor
push
add
lods
ds
mov
pop
pop
gs
and
clc
mov
push
push
dec
es
and
mov
xchg
int3
or
push
and
adc
push
loop
mov
inc
and
jg
mov
push
adc
hlt
out
jmp
pop
sub
movs
dec
push
and
and
imul
rcr
test
mov
je
cld
push
jb
inc
dec
or
push
and
inc
xchg
dec
and
je
and
adc
(bad)
pop
inc
adc
loopne
sub
push
je
add
jmp
mov
dec
push
or
sub
xor
mov
mov
adc
outs
or
inc
out
mov
and
push
push
je
(bad)
xchg
and
es
and
neg
adc
mov
adc
sbb
xor
xor
mov
pcmpeqb
je
add
mov
imul
and
push
push
je
mov
adc
mov
mov
adc
jle
sbb
ficom
add
mov
mov
cmc
inc
pop
mov
cwde
pop
add
mov
or
call
push
mov
cmps
mov
xor
rol
(bad)
pusha
and
jns
adc
inc
mov
add
adc
adc
mov
fisttp
jmp
iret
pop
lods
test
rcl
loopne
ficomp
sbb
aas
pop
add
js
rcl
jp
mov
xchg
rep
mov
mov
mov
mov
mov
(bad)
fdivr
jbe
xor
pop
inc
pop
loopne
das
jns
test
jbe
push
mov
mov
(bad)
call
into
dec
mov
add
mov
mov
shr
mov
pop
aas
push
xor
adc
test
in
(bad)
hlt
jb
pop
pop
lods
loop
in
loop
push
push
pop
add
mov
add
shr
dec
sar
and
cmp
jb
mov
push
cmps
dec
inc
mov
std
push
shr
inc
jg
pop
lea
push
cs
lods
cmc
inc
pop
and
mov
xchg
mov
add
add
and
shl
push
dec
idiv
adc
jmp
cmp
ja
mov
push
(bad)
aas
enter
call
add
lea
mov
sub
mov
and
cmp
repnz
mov
cmp
mov
clc
xor
rep
jl
pop
aad
adc
enter
or
mov
pop
push
call
push
mov
lea
adc
out
or
push
mov
jae
inc
mov
mov
mov
(bad)
(bad)
jmp
int
jnp
jb
mov
lea
and
loopne
repnz
mov
dec
lea
xlat
xchg
mov
aas
std
sbb
cmp
jae
adc
retf
lea
mov
xchg
mov
mov
sbb
in
aaa
add
shr
xor
adc
iret
lea
push
add
call
add
or
cmp
push
add
arpl
jmp
mov
sub
(bad)
mov
adc
lea
push
xor
dec
inc
into
call
mov
mov
push
push
push
mov
sub
lea
sbb
les
xor
pop
xchg
push
mov
xchg
sbb
cmp
mov
scas
mov
inc
add
pushf
sbb
add
lea
add
pop
mov
movs
jns
scas
test
push
call
rcl
push
fwait
jge
test
jne
ss
mov
jg
neg
mov
inc
mov
push
mov
mov
jmp
imul
mov
push
push
call
mov
popa
mov
lock
and
shl
push
and
neg
sub
add
or
test
pop
add
adc
adc
push
pop
movs
or
sbb
out
retf
push
xor
loope
pop
idiv
enter
lods
push
cs
push
cmp
popa
add
add
add
and
pusha
mov
pop
sub
dec
sbb
scas
inc
and
test
sub
ja
stos
jle
or
rol
dec
(bad)
jg
call
add
mov
pop
dec
dec
ror
add
(bad)
cld
mov
add
add
jle
std
(bad)
jg
push
adc
lea
mov
inc
mov
mov
mov
mov
inc
cmp
jl
pop
maxps
pop
dec
lock
push
lea
add
sub
push
mov
(bad)
xchg
stos
bound
addr16
and
lds
inc
ret
mov
add
(bad)
in
mov
mov
and
cmc
or
sbb
dec
into
push
push
lahf
push
push
mov
jmp
push
pop
sbb
sar
ja
mov
lock
push
push
push
and
inc
inc
jge
inc
in
je
(bad)
idiv
(bad)
movs
pushf
sbb
jne
cmp
mov
out
xor
test
mov
mov
cdq
mov
mov
xor
mov
sub
cmp
call
add
jp
push
repnz
sub
test
jne
jne
shl
stos
pusha
test
(bad)
aas
add
add
inc
inc
lock
out
and
ror
dec
push
mov
dec
inc
jo
(bad)
push
adc
pusha
clc
cmps
in
test
mov
xor
xor
inc
mov
fcmovnu
add
xchg
data16
retf
add
push
bound
fild
add
mov
fmul
ror
jmp
sbb
pop
inc
dec
in
enter
jl
mov
hlt
mov
enter
mov
out
jg
fld
test
mov
push
or
jge
lea
fwait
inc
call
das
push
mov
mov
sub
mov
mov
adc
std
pop
push
into
sbb
or
icebp
(bad)
(bad)
lea
mov
mov
test
add
icebp
call
push
inc
shr
mov
imul
mov
outs
ret
or
xor
pop
fmul
ret
jg
test
ror
scas
icebp
mov
sbb
test
jbe
sub
or
nop
cmps
sbb
fnstsw
dec
shl
mov
mov
mov
dec
rcl
or
cwde
ja
imul
lea
test
jg
xchg
mov
cmp
jl
mov
jl
loop
(bad)
push
jmp
cld
inc
aam
rol
nop
add
push
js
inc
(bad)
mov
mov
push
mov
loope
add
sub
mov
inc
sub
dec
call
or
dec
add
inc
add
inc
rol
stos
jmp
gs
mov
test
mov
lods
push
les
xor
fs
fisubr
mov
add
ror
xchg
push
or
jl
push
in
mov
sub
test
je
ror
es
iret
ror
loopne
cmp
mov
dec
push
loopne
inc
mov
in
sub
test
jne
mov
pop
fmul
inc
fdivr
cmps
aaa
mov
push
jne
xor
sub
ret
push
ret
xchg
and
adc
xchg
pop
inc
push
jl
ret
je
mov
xor
push
push
pop
or
movs
jmp
push
jle
mov
mov
(bad)
(bad)
call
lea
sub
add
sub
mov
mov
mov
inc
inc
mov
mov
mov
mov
sar
dec
mov
inc
add
dec
jne
mov
mov
lea
add
mov
fcom
or
loop
mov
aaa
mov
std
add
push
loopne
(bad)
loope
inc
lea
lds
call
out
(bad)
(bad)
inc
sub
jecxz
dec
in
inc
rcl
mov
or
cwde
pushf
call
xor
sub
mov
loope
mov
dec
add
not
and
add
inc
add
add
add
pusha
mov
sbb
add
or
cli
(bad)
push
jbe
add
or
sub
mov
inc
and
les
sbb
add
add
mov
mov
add
pop
jbe
mov
adc
lahf
pop
imul
loop
outs
jmp
lea
pop
add
or
in
enter
(bad)
mov
jl
or
repz
pop
pop
je
sbb
sbb
cmp
into
xchg
push
add
jge
les
jbe
xor
mov
div
push
sbb
int3
mov
ret
imul
push
adc
or
cmps
loopne
cmp
jae
xchg
xor
push
sbb
adc
scas
dec
je
inc
ins
loopne
cli
mov
ret
and
test
std
dec
push
fnstenv
and
and
xchg
cmp
pop
ret
test
jne
sbb
aad
test
test
inc
adc
test
mov
add
out
(bad)
pop
sbb
fisubr
(bad)
jne
pop
mov
pop
cmp
sub
sub
mov
adc
lods
loopne
jg
xor
mov
cmp
ja
mov
mov
mov
or
retf
or
test
adc
shl
jmp
cmp
pop
or
and
mov
push
dec
mov
xor
inc
fnstenv
test
dec
add
jne
fist
lahf
push
add
jne
adc
(bad)
aas
xor
cmp
jge
push
call
mov
lds
jnp
push
push
lods
or
push
adc
inc
rcr
cmp
add
push
les
add
dec
xor
cld
adc
pushf
jmp
pop
ret
daa
dec
pop
inc
sbb
cmovo
ret
fwait
sub
in
rcl
mov
mov
(bad)
dec
mov
inc
adc
inc
cmp
test
out
mov
adc
push
push
lea
hlt
push
push
mov
dec
fistp
mov
fmul
jne
mov
push
push
lea
lea
push
ret
inc
add
sub
fdivp
in
xor
sbb
push
mov
out
jns
mov
add
cmp
jmp
push
mov
pop
jne
sub
std
xor
je
mov
mov
pop
mov
mov
aaa
adc
inc
or
test
movs
pop
clc
dec
mov
nop
push
adc
loopne
out
jne
ret
inc
lock
dec
jmp
mov
cmp
sub
les
rep
pop
imul
mov
or
and
in
fistp
mov
test
je
push
add
push
push
push
pop
mov
fdivr
rcl
stos
lods
pop
sbb
add
push
jg
call
xor
cmp
je
repz
and
shr
test
je
stc
push
ror
jno
sub
aam
aas
mov
jmp
inc
sub
pop
out
bound
lea
ror
arpl
jmp
mov
in
cmp
jle
push
push
jmp
fcomp
mov
scas
in
xchg
pop
jmp
aaa
sti
ror
sti
mov
sbb
xchg
iret
mov
lock
popa
mov
inc
or
mov
xchg
sub
(bad)
jg
and
test
je
mov
call
adc
and
neg
mov
ret
test
popf
inc
push
xor
inc
adc
mov
cmp
mov
je
loop
adc
mov
ret
jbe
mov
inc
mov
inc
rdpmc
shl
mov
neg
mov
jb
ins
and
ins
and
and
sti
fwait
cld
jg
mov
int
rcl
mov
ja
mul
das
mov
ss
leave
pushf
mov
mov
push
into
xor
sbb
inc
jl
int
pop
and
mov
ret
je
mov
mov
push
sbb
dec
mov
or
xchg
xchg
jmp
sbb
cmp
pop
sub
sbb
push
mov
pop
add
out
pmaxsw
in
xor
ret
fimul
adc
jnp
out
ret
jle
add
data16
popf
icebp
imul
mov
mov
pop
sub
jmp
mov
sub
cmp
nop
js
xchg
out
data16
pop
mov
inc
sahf
jns
jecxz
js
or
jnp
movnti
adc
iret
xchg
or
je
mov
call
fstp
and
mov
mov
sahf
(bad)
ins
enter
inc
add
jbe
mov
adc
setns
mov
mov
jb
and
sub
inc
jg
cmp
std
xchg
or
je
and
not
and
pop
mov
ror
or
mov
add
mov
add
test
push
test
mov
shl
cmp
pop
inc
lea
mov
(bad)
(bad)
(bad)
sti
lea
mov
cmp
je
cmp
jbe
mov
mov
sub
cmp
jne
xor
pop
mov
add
cli
add
mov
ret
cmc
pop
pop
nop
inc
mov
(bad)
je
(bad)
fbstp
shr
mov
mov
mov
rol
std
xchg
or
test
push
cmp
aad
or
mov
mov
sbb
pop
retf
add
dec
and
cmp
lock
pop
cmp
ja
jmp
and
in
mov
or
in
dec
cs
sub
popf
sbb
xor
out
scas
sti
or
pop
cld
ret
inc
add
mov
fld
adc
pop
rol
sysexit
adc
call
or
adc
cmp
cmp
dec
cmp
idiv
jmp
je
push
test
je
or
mov
mov
outs
jl
dec
test
jne
xor
push
push
test
jl
outs
popf
push
or
mov
pop
aaa
mov
cs
mov
je
(bad)
inc
mov
push
push
mov
aad
adc
int
dec
adc
mov
add
jl
pop
dec
mov
mov
adc
and
cmp
or
clc
cli
aas
test
dec
popf
xor
cmp
sete
pop
ret
pop
adc
cmp
push
push
sbb
add
aam
(bad)
(bad)
mov
dec
jb
lds
or
and
dec
rcl
dec
pusha
adc
in
mov
test
je
or
jmp
and
test
mov
(bad)
es
and
test
jnp
leave
add
sti
or
and
push
clc
add
mov
jmp
and
lea
add
rep
push
add
inc
xor
adc
mov
fiadd
dec
xor
ds
outs
shr
dec
dec
sub
dec
add
push
aas
xor
pop
cmp
mov
les
sbb
or
xor
push
add
add
xor
and
pop
mul
nop
das
cmps
and
clc
cmc
sub
xor
or
ror
xchg
push
out
ret
mov
add
mov
mov
stos
and
clts
mov
cmps
add
js
push
add
mov
(bad)
stos
daa
add
pop
ret
js
and
pusha
and
dec
mov
mov
test
mov
jle
sbb
mov
add
mov
add
cmp
inc
or
xor
jnp
cmp
and
test
add
(bad)
mov
inc
push
push
(bad)
sbb
out
mov
int
ja
add
mov
mov
sbb
clc
lea
dec
clc
in
add
xor
sbb
lea
sti
outs
add
ins
push
sbb
pop
movs
mov
jmp
push
mov
pop
pusha
mov
cmp
add
push
(bad)
fadd
mov
adc
ja
mov
mov
popa
mov
adc
mov
mov
xchg
cmp
or
xlat
mov
mov
cmp
jg
jo
out
xor
shr
mov
mov
add
or
gs
mov
test
jl
loop
cmp
pop
adc
fisttp
mov
push
out
(bad)
scas
mov
(bad)
(bad)
xor
mov
addr16
mov
or
sbb
test
jl
xlat
or
aad
pop
push
or
inc
xchg
sub
dec
adc
js
sub
(bad)
pop
fwait
ins
add
ret
mov
and
stos
out
adc
ret
mov
dec
inc
sbb
push
adc
jl
imul
push
push
es
xchg
cdq
sub
sub
cmp
or
or
xor
out
and
inc
add
ret
sbb
xchg
jae
(bad)
je
jo
inc
adc
dec
outs
sub
or
retf
rcl
and
sbb
jb
jmp
dec
sbb
adc
lds
sbb
xchg
sub
adc
imul
call
jle
cmp
jle
mov
fcom
sub
pop
add
loope
out
sub
and
adc
inc
inc
xchg
mov
inc
mov
mov
ds
dec
mov
imul
lea
out
sub
and
(bad)
xor
pop
and
mov
movs
inc
jp
lds
ret
dec
or
mov
dec
fsub
pop
fmul
aad
mov
jb
or
mov
and
jno
adc
int3
icebp
shr
lea
sar
je
mov
sbb
mov
sbb
je
jne
pop
and
mov
sub
push
sub
add
loope
fisubr
dec
pusha
dec
dec
or
mov
cli
(bad)
fbstp
push
push
mov
mov
push
mov
sub
cmp
jl
xchg
add
cmp
jg
aas
inc
xor
mov
mov
sbb
sbb
in
pop
jnp
mov
mov
adc
mov
mov
adc
pop
sbb
mov
fdivr
jbe
xchg
mov
mov
daa
xor
aas
ss
adc
mov
mov
and
(bad)
aas
sbb
push
adc
icebp
sub
cmp
jl
add
cmp
jg
pop
(bad)
or
mov
dec
(bad)
or
push
mov
jmp
mov
js
gs
sbb
push
pop
test
test
je
lea
push
inc
mov
loopne
scas
xlat
adc
xor
or
or
sbb
pop
pop
pop
ret
test
jne
pop
pop
ins
push
lea
icebp
paddb
test
sbb
push
push
aad
push
dec
add
movs
or
mul
add
pop
je
adc
add
(bad)
fwait
xchg
add
and
push
imul
mov
movups
jmp
mov
lea
xor
mov
cmp
je
mov
in
mov
push
add
out
or
loop
sbb
add
pop
ret
lds
jnp
adc
daa
and
adc
mov
push
xor
fld
sbb
jg
cmp
mov
mov
jae
cmp
mov
mov
enter
movs
or
pop
mov
dec
outs
jb
adc
ret
push
push
push
je
push
outs
add
lock
sub
jl
inc
push
push
test
je
xchg
adc
dec
add
call
aaa
fldcw
add
test
out
mov
push
push
add
mov
xor
dec
sub
mov
add
pop
add
test
push
je
lea
in
cli
sti
pop
cld
add
sti
mov
inc
add
xlat
fwait
mov
lea
cs
inc
icebp
add
lods
push
mov
push
xor
imul
rcl
pusha
pop
aam
les
and
in
sbb
hlt
and
push
xor
fnsave
rcl
xchg
ret
xor
add
fcom
pop
add
sbb
(bad)
iret
std
(bad)
mov
shr
stc
add
cmp
iret
mov
shr
test
xlat
mov
shr
or
push
ret
inc
add
shl
mov
mov
daa
loopne
ret
fistp
ror
add
add
mov
sub
lahf
aam
pop
ds
mov
ins
adc
pusha
mov
mov
in
add
adc
or
in
jno
jae
ret
les
mov
jne
add
je
push
cli
std
out
ja
cmp
cmp
mov
or
jp
mov
xchg
and
ins
xor
xchg
les
cmp
xor
or
and
push
loopne
or
sbb
dec
fisttp
and
dec
sbb
sar
mov
shl
add
mov
add
ret
(bad)
jnp
sbb
sar
je
lahf
adc
mov
in
or
sbb
sbb
sub
iret
push
std
jmp
mov
pop
xchg
or
hlt
(bad)
jge
rol
dec
push
push
adc
lea
shl
(bad)
loope
cmp
jb
inc
mov
sub
fcomp
in
inc
dec
inc
aas
push
inc
push
cmp
add
mov
rcl
fsubr
aaa
pop
xchg
mov
add
push
push
cmp
add
and
mov
mov
idiv
and
daa
push
ret
sar
jae
popa
je
push
les
push
mov
das
add
inc
xor
repz
pop
pop
je
adc
push
add
and
aas
push
mov
jne
jmp
mov
dec
adc
mov
jl
adc
push
gs
inc
push
inc
je
mov
and
push
je
push
pop
pop
inc
into
neg
add
dec
aam
(bad)
adc
xor
push
lods
xchg
(bad)
fst
add
pop
xor
fistp
push
push
jle
xchg
sar
or
push
or
femms
(bad)
(bad)
jmp
popa
ins
arpl
ja
je
cmp
je
cmp
je
cmp
jb
outs
ins
je
jmp
sbb
push
sbb
mov
cmp
mov
mov
pop
jmp
dec
jb
je
cmp
jmp
jae
sbb
je
push
mov
icebp
jle
scas
adc
push
adc
scas
mov
push
scas
and
dec
dec
and
pop
je
pop
and
fisubr
inc
mov
inc
push
inc
add
cmp
js
or
push
(bad)
dec
mov
xchg
push
loopne
cmps
mov
mov
mov
mov
out
mov
mov
es
js
mov
or
sub
adc
sbb
jne
mov
mov
cmp
push
add
fisttp
or
stc
pop
dec
add
sbb
jbe
add
add
push
dec
push
mov
sti
sti
mov
or
fimul
mov
sti
push
lock
in
iret
push
or
jmp
jmp
test
or
xchg
sbb
or
les
repnz
push
and
les
and
fnstenv
sub
cmp
ja
inc
fild
std
sub
jl
jb
mov
jnp
pop
pop
sbb
jmp
inc
xor
or
cmc
rol
adc
lahf
bound
pop
cmps
(bad)
aas
jnp
shl
mov
shl
add
xor
mov
mov
inc
push
mov
or
inc
test
or
mov
or
inc
les
pop
sbb
xor
mov
mov
shl
adc
call
mov
ret
scas
ficom
xor
aas
mov
cmp
jne
std
mov
mov
shl
add
sub
pop
push
shl
adc
jg
ror
push
mov
mov
movs
daa
pop
ret
out
cmp
enter
add
cmp
jne
xchg
je
fisub
mov
push
cld
mov
mov
push
or
mov
mov
mov
mov
xor
add
push
or
(bad)
mov
test
mov
mov
adc
cli
add
jg
sbb
or
add
cmp
jne
fcom
loope
or
cmp
jne
jmp
js
mov
dec
push
xchg
dec
scas
ja
add
mov
and
inc
lock
jne
popa
dec
push
jb
sub
or
icebp
dec
xor
icebp
scas
jg
mov
cmp
je
dec
test
je
push
sbb
movs
out
es
push
adc
ret
and
std
inc
cmp
adc
mov
and
push
bound
push
and
out
mov
mov
pop
test
jmp
mov
pop
xor
sbb
add
pop
aas
xor
mov
pop
inc
pop
loopne
ret
js
sbb
pop
adc
adc
xchg
test
jmp
cmp
imul
je
mov
or
xchg
sbb
xchg
dec
and
lea
jmp
lahf
or
fdiv
pop
mov
mov
add
call
sbb
inc
and
or
cmp
xor
rol
int3
cmc
push
test
stc
sbb
out
jnp
ficomp
daa
into
js
sbb
or
ret
or
or
inc
pcmpgtd
adc
sti
add
je
lods
call
(bad)
jle
inc
lock
push
add
cmp
mov
and
or
jmp
jge
pusha
cli
pop
add
cmp
jg
cmp
jl
add
inc
jl
cmp
psubb
mov
push
add
mov
icebp
add
pop
je
push
lea
fild
xchg
mov
mov
daa
jg
sbb
outs
call
push
repnz
inc
les
inc
mov
sbb
in
sbb
test
sahf
jno
out
sub
jbe
push
dec
cmp
(bad)
sbb
xlat
leave
jg
cmp
(bad)
(bad)
aas
and
cmp
je
cmp
je
cmp
je
cmp
pop
fcos
or
sti
adc
inc
das
ins
and
test
jl
cmp
jg
inc
xchg
add
push
jle
push
not
std
add
dec
jg
jmp
jge
sub
jns
int3
sub
fistp
adc
test
cmp
jl
push
sbb
adc
sbb
pop
aam
inc
je
push
mov
jno
push
push
mov
neg
add
adc
clc
inc
jne
test
push
(bad)
in
mov
std
push
pop
xor
and
cmp
push
or
jne
and
pusha
pop
stos
add
push
mov
mov
cmp
cmp
jae
fild
adc
mov
aad
stc
cmp
xchg
add
rcr
fistp
mov
and
inc
mov
or
pusha
(bad)
aas
push
mov
add
and
and
lea
mov
(bad)
sbb
sub
or
test
jne
or
add
test
jne
test
je
or
xchg
ror
sub
or
or
sbb
sti
ja
jne
sbb
add
or
add
inc
mov
add
inc
and
cld
dec
pop
shr
pop
and
pop
fwait
call
xor
neg
inc
add
mov
and
add
add
push
add
push
out
or
or
add
cmps
imul
fistp
pop
pop
add
add
add
add
ret
push
mov
gs
jno
pop
adc
and
pop
mov
push
push
push
sub
jg
pop
scas
cmp
lods
push
retf
(bad)
sub
pop
add
push
cmp
jne
ret
jbe
ss
cmp
and
jb
rol
ja
out
out
dec
fild
dec
and
jg
je
sbb
add
mov
and
push
pop
or
mov
jle
xchg
lock
je
fcom
test
and
xor
add
cmps
std
dec
add
ret
fstp
xor
out
scas
cmp
nop
nop
addr16
fdivr
dec
fs
xchg
mov
dec
into
out
add
sbb
and
inc
add
sub
and
jmp
outs
fcomp
adc
hlt
iret
adc
mov
pop
pop
inc
pop
jp
into
xchg
inc
out
xchg
fild
fmul
sti
xchg
add
pop
or
loopne
into
nop
adc
dec
pop
adc
or
inc
add
dec
pop
lock
cmp
adc
cmp
dec
cmps
pop
cld
clc
mov
cmp
shl
fnstenv
dec
pushf
push
adc
pusha
mov
push
pop
xchg
icebp
sbb
add
jae
mov
mov
jg
sub
lds
mov
sti
aas
(bad)
sub
mov
out
fstp
std
jle
mov
int
jae
mov
ss
cmp
jl
inc
add
scas
daa
mov
jbe
xor
add
jnp
das
mov
es
inc
pop
add
jnp
xchg
mov
mov
dec
pusha
out
int3
add
push
sub
jle
adc
scas
(bad)
scas
or
not
cdq
dec
and
mov
bt
xor
out
add
rcl
loope
push
mov
and
cmp
sub
mov
inc
rcr
mov
cmp
or
xchg
sar
mov
sahf
stos
add
pushf
(bad)
jmp
scas
(bad)
test
(bad)
dec
mov
or
add
test
je
fdiv
ret
add
sub
pop
push
mov
sub
les
push
ret
sar
add
push
pusha
lea
xchg
xchg
out
out
aaa
lock
xchg
add
mov
mov
stos
or
mov
jmp
mov
inc
jae
mov
sub
jmp
xor
fwait
mov
(bad)
(bad)
inc
add
or
stc
add
and
add
jbe
mov
push
lds
repnz
cmp
(bad)
adc
shl
push
iret
out
enter
or
inc
or
push
or
clc
or
test
cmp
dec
mov
cmp
into
sub
lea
or
xchg
pop
push
sub
ret
loopne
cmp
add
retf
shr
and
sub
in
jg
mov
xor
push
adc
push
sub
sbb
jb
iret
ins
into
shl
dec
add
dec
mov
sub
shl
mov
sbb
retf
jno
aam
rcl
loopne
dec
icebp
sbb
push
mov
mov
cli
fist
xor
test
mov
jbe
mov
mov
or
bound
adc
push
mov
pop
sbb
jl
(bad)
jp
adc
and
imul
and
pop
and
fild
clc
or
stos
jg
loop
mov
shl
mov
add
sub
sub
je
xor
enter
inc
and
cmp
fbld
lahf
mov
inc
add
cmp
xor
ja
scas
div
adc
mov
(bad)
mov
ret
adc
ret
add
div
mov
mov
cld
dec
outs
sar
xor
sbb
add
cmp
mov
sub
cmp
sub
std
mov
in
dec
sbb
push
mov
dec
sub
push
add
mov
fs
add
enter
sbb
daa
loope
or
dec
and
dec
inc
and
mov
jbe
mov
push
inc
(bad)
fnstsw
pop
sbb
jmp
push
jge
mov
lock
out
add
push
mov
rcl
adc
cs
sub
add
dec
mov
cmp
call
fistp
scas
dec
and
add
jmp
sbb
sub
je
shr
jmp
call
fmul
jmp
(bad)
jmp
jb
fild
adc
cmp
mov
mov
jb
retf
std
sub
and
cmp
mov
xor
call
mov
mov
mov
inc
and
inc
mov
cmp
mov
jb
pop
or
or
and
cmp
push
push
push
ja
aad
sbb
clc
push
inc
arpl
daa
sbb
adc
aad
ds
jb
pop
pop
mov
cmc
inc
loopne
jb
pop
add
test
clc
call
je
mov
test
jne
push
push
mov
push
or
push
lock
adc
in
sbb
and
pop
add
jne
ja
pop
inc
repnz
mov
test
inc
push
pusha
and
shl
(bad)
std
test
mov
je
push
mov
test
sub
repz
sub
addr16
shl
call
mov
into
mov
ret
fisttp
sbb
sub
jl
add
sbb
and
ror
lock
jmp
push
(bad)
(bad)
xor
jecxz
push
push
lea
nop
jmp
push
mov
push
or
mov
test
bound
ins
adc
rcr
push
push
xor
push
inc
mov
xlat
ins
leave
lds
sbb
pop
add
aam
inc
pop
rcr
sbb
push
pop
out
sbb
sbb
std
fcomip
(bad)
mov
lock
push
push
or
pop
add
xchg
mov
add
mov
or
(bad)
pop
dec
sbb
test
push
je
ja
sbb
out
add
xchg
rcl
or
add
mov
sbb
stos
mov
call
dec
jne
test
paddd
icebp
jne
push
jmp
cmp
add
test
sbb
push
push
inc
adc
or
mov
das
(bad)
out
xor
pop
fwait
and
push
jp
sbb
test
sbb
push
dec
push
mov
out
(bad)
out
sub
push
add
jb
add
add
call
dec
dec
jne
xor
(bad)
xor
and
dec
jne
pop
mov
pop
pop
mov
sub
retf
jmp
data16
cmp
into
adc
bound
mov
data16
dec
arpl
xchg
add
fdivr
inc
dec
inc
addr16
test
cwde
stos
out
pop
push
push
dec
push
cwde
inc
jae
inc
outs
pop
fwait
ins
xor
inc
jo
pushf
sub
ret
and
jae
inc
(bad)
test
sti
jae
dec
das
call
xor
das
inc
inc
push
pop
jbe
pop
ins
mov
inc
inc
imul
pop
dec
push
das
xchg
(bad)
je
fld
jbe
inc
je
mov
pop
leave
ds
xor
push
pop
ret
nop
xchg
je
push
jp
mov
add
(bad)
and
cwde
lock
fisub
sbb
ficomp
ret
xchg
adc
ret
mov
lds
dec
add
pop
rol
test
jne
fdivr
inc
adc
xchg
pop
ret
push
push
aaa
ins
jecxz
mov
add
pop
push
outs
lahf
sbb
cmp
add
inc
inc
or
(bad)
or
cld
mov
std
or
and
mov
mov
adc
mov
or
cmp
adc
or
pop
mov
jecxz
call
jmp
add
outs
aaa
or
ret
lea
ror
mov
fist
test
je
inc
xor
mov
add
and
mov
out
inc
add
push
aam
and
in
add
or
add
add
pop
mov
mov
cs
push
add
jne
repnz
push
jg
mov
and
cmp
je
nop
inc
leave
test
jmp
cmp
fild
popf
inc
jmp
sub
(bad)
inc
(bad)
and
cmp
je
popf
test
je
jmp
test
fnstenv
pop
add
cmp
je
rcr
and
test
lock
fist
test
jne
push
movs
push
xor
adc
inc
push
mov
test
mov
adc
add
xor
or
mov
jg
inc
push
inc
push
in
push
sub
fist
push
push
or
loop
out
push
mov
push
mov
push
xor
pop
test
or
je
cmp
jmp
paddw
mov
inc
jl
fwait
or
mov
add
js
aam
popa
or
jne
ds
cmp
mov
mov
aaa
jae
out
mov
or
inc
and
je
push
loope
jmp
test
test
je
mov
inc
inc
mov
std
cmp
jae
fcom
inc
xchg
std
or
mov
adc
and
push
inc
hlt
xchg
adc
mov
call
sub
jg
or
call
xor
jo
std
or
dec
mov
ds
loope
ror
(bad)
test
push
call
jns
adc
xor
inc
add
jb
dec
shl
sahf
mov
pusha
add
add
push
push
mov
iret
loop
pop
adc
jne
cmp
jne
or
dec
pop
add
push
cmp
jne
and
test
jbe
mov
mov
mov
add
xchg
neg
sbb
(bad)
dec
jne
sbb
cmp
jne
inc
mov
push
xor
jne
call
inc
inc
adc
repnz
xor
xor
aad
hlt
dec
add
add
(bad)
or
punpcklwd
retf
sti
mov
(bad)
(bad)
inc
fimul
jmp
shr
mov
mov
add
dec
jne
ins
ror
cmp
jl
out
scas
scas
jmp
mov
push
sub
adc
add
pop
stos
sbb
scas
mov
fiadd
add
int3
jb
push
sbb
(bad)
adc
iret
in
mov
dec
cmp
mov
ds
mov
or
push
pop
add
or
es
push
or
and
add
add
les
adc
adc
add
and
and
mov
mov
add
sbb
dec
jb
mov
mov
lea
push
mov
jnp
jno
xor
mov
fadd
and
push
les
push
loopne
inc
jne
test
inc
push
call
push
push
add
mov
(bad)
ins
or
aaa
icebp
mov
rep
test
mov
pop
adc
mov
sub
push
adc
inc
je
mov
sub
fwait
jns
adc
xor
pop
mov
sar
adc
dec
rcr
mov
xchg
adc
jmp
(bad)
jmp
adc
xlat
push
pop
xor
pop
adc
mov
ins
push
mov
mov
jg
add
mov
add
fmul
and
xlat
ror
dec
or
loop
adc
inc
mov
sbb
xchg
test
loop
movs
jmp
cli
add
mov
or
mov
mov
sti
jmp
jne
xor
cwd
aaa
jmp
mov
retf
jae
loopne
sub
add
push
pop
sub
adc
ss
xor
mov
mov
add
call
cld
fwait
mov
add
call
add
test
rol
add
hlt
ja
jbe
jle
add
and
mov
push
and
lods
sbb
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
adc
aas
push
push
add
add
push
mov
bound
mov
inc
mov
cwde
mov
adc
shl
push
mov
jg
add
iret
sbb
int
add
sub
out
fst
pop
lahf
pop
mov
jo
mov
push
test
jo
loopne
inc
cmp
sub
pop
jle
test
jne
mov
dec
jmp
and
inc
mov
imul
add
ror
fld
loope
loopne
or
xor
fadd
xchg
add
js
cmc
cmp
jb
push
imul
inc
sbb
(bad)
fcos
test
jbe
test
jne
push
push
inc
fstp
jns
ret
mov
cmp
xchg
jl
inc
xor
adc
fbstp
out
clc
pop
inc
mov
add
je
add
loope
mov
hlt
lods
fst
dec
inc
sub
pusha
or
adc
push
push
mov
retf
add
js
push
fdivr
ja
push
clc
adc
add
nop
daa
push
adc
scas
xor
lock
(bad)
icebp
inc
xchg
xchg
and
mov
mov
pop
xlat
sbb
or
or
mov
out
push
(bad)
cmp
mov
shl
fiadd
fidiv
ror
in
in
push
shl
mov
cmp
push
cmp
jne
xor
add
or
sbb
fbld
dec
adc
retf
push
rol
je
or
cmp
ss
jmp
sti
push
add
(bad)
xor
adc
pop
push
cmp
push
push
je
mov
xchg
pop
adc
(bad)
dec
outs
pop
jne
cmp
clc
out
mov
add
or
xchg
fild
xchg
jmp
or
or
mov
mov
xlat
or
ffreep
sbb
les
add
inc
add
add
clc
push
add
(bad)
lock
ss
and
mov
out
dec
or
mov
mov
cmp
jbe
pop
push
jl
adc
shl
mov
fdivr
std
sbb
mov
pusha
sbb
xor
mov
and
imul
jmp
in
leave
and
add
jmp
sbb
cdq
sub
inc
push
jbe
add
xor
adc
je
or
push
push
push
jmp
add
adc
pop
cs
cmp
inc
jo
je
test
add
jno
bound
shl
pusha
mov
jb
mov
and
cmp
or
sub
mov
mov
repz
sbb
ret
pop
xor
add
push
push
pusha
add
pop
cmp
or
mov
and
adc
jbe
xor
loopne
adc
call
adc
test
cld
push
jnp
je
adc
imul
cmp
mov
fcmovnb
loopne
sub
push
mov
and
inc
fmul
add
push
mov
push
imul
mov
pop
fisttp
shr
add
pop
cmp
xor
loope
pop
and
and
iret
idiv
add
pop
and
add
push
mov
dec
and
cmp
outs
mov
sub
pop
sbb
add
lahf
loopne
inc
sbb
push
push
mov
sub
bound
shr
repnz
push
and
push
sbb
dec
push
loope
cmp
shr
mov
das
and
mov
mov
adc
pop
xor
push
sub
push
jne
mov
fmul
sbb
test
xadd
js
scas
ror
icebp
jg
mov
movs
mov
push
mul
mov
sbb
ret
clc
push
adc
call
dec
xor
call
push
push
inc
push
push
jg
ret
inc
test
mov
mov
inc
mov
mov
movs
push
ret
sbb
jle
movs
push
push
push
push
add
mov
sbb
sti
add
enter
loopne
(bad)
mov
mov
mov
adc
rcl
mov
jmp
test
adc
(bad)
xor
into
ds
cld
sub
mov
lock
or
and
sbb
dec
xchg
xor
or
xor
imul
cmp
mov
stos
sub
dec
aaa
adc
sub
ds
inc
lock
mov
mov
and
out
(bad)
mov
rol
scas
rcr
(bad)
call
add
call
shr
fstp
push
lods
and
jg
add
jmp
push
xor
sub
cs
sub
fs
std
xchg
addr16
or
cs
(bad)
shr
add
sub
dec
push
push
idiv
jl
inc
shl
mov
mov
xor
mov
(bad)
push
sub
shl
shl
stc
mov
and
adc
push
jl
shl
or
or
mov
sbb
inc
jo
sbb
adc
cmp
pusha
mov
sbb
jns
pop
push
es
cli
push
pop
add
rol
xor
loop
xor
xor
test
xchg
sbb
push
inc
les
mov
sub
push
int
cmp
jb
or
out
mov
dec
and
lock
retf
jle
in
adc
cmp
or
xchg
push
aaa
hlt
jl
and
inc
adc
adc
les
adc
mov
xor
mov
iret
pop
cmp
mov
add
cmp
jne
ret
xor
and
pusha
dec
sub
pop
adc
lock
xor
mov
add
dec
pop
(bad)
jmp
push
mov
push
shl
sub
push
mov
push
shr
rol
dec
add
xchg
mov
loop
inc
pop
cdq
mov
add
and
inc
adc
mul
mov
jl
pop
push
dec
js
mov
popf
bnd
cs
mov
push
add
xor
and
add
push
adc
loope
rcr
cmp
cmp
xchg
xor
daa
xchg
push
pop
mov
shl
sub
std
data16
dec
aas
jecxz
xor
je
popf
stos
jp
pop
cmp
mov
xchg
jle
add
retf
push
add
jbe
mov
loop
inc
bound
mov
mov
ja
xor
adc
(bad)
push
push
push
push
inc
adc
xlat
adc
fcmovne
jg
push
aad
(bad)
fadd
fild
std
jb
adc
lea
or
dec
fwait
xor
jne
adc
push
sbb
outs
enter
sbb
inc
and
inc
inc
imul
or
in
inc
xor
mov
movs
mov
mov
push
rcl
inc
ret
xor
les
call
cmc
add
jge
or
pxor
mov
fmul
inc
out
lods
sub
add
mov
and
loope
addr16
mov
xchg
mov
nop
adc
clc
mov
shr
add
mov
retfw
add
sysexit
xor
sar
jmp
cmp
xor
out
or
mov
stc
jae
sbb
mov
sbb
cli
shr
jo
ja
mov
lea
imul
(bad)
call
call
xor
adc
imul
mov
lea
adc
je
push
cld
aas
sub
imul
add
add
jb
add
or
cmps
je
pushf
mov
or
or
sbb
rol
xor
push
adc
cmp
mov
stc
push
sub
inc
rol
out
repnz
add
push
push
push
fwait
cmp
or
push
jns
pop
adc
ins
pop
pusha
and
aaa
sbb
js
push
sbb
dec
push
loopne
ret
or
xor
arpl
test
shr
jb
adc
or
and
dec
adc
adc
fwait
jle
push
push
dec
and
sub
in
add
sbb
push
and
call
call
das
xor
push
dec
push
cmc
jbe
cmp
outs
cli
pop
fdiv
or
add
leave
mov
in
xor
mov
and
je
aad
add
cmp
pop
rol
out
xor
pop
xor
mov
mov
(bad)
cmp
push
das
sub
and
sbb
js
and
ja
cwde
or
leave
test
sbb
xchg
adc
adc
push
xor
cmp
jae
ja
xor
jae
ret
jne
xor
dec
inc
sbb
jne
cmps
push
cmp
jmp
or
jmp
xor
push
mov
neg
dec
(bad)
xor
mov
push
push
mov
pop
or
test
push
xor
mov
push
call
(bad)
lods
sbb
inc
dec
sub
xchg
jge
jmp
dec
dec
push
jmp
push
fild
cmp
sbb
(bad)
loope
push
pop
xor
mov
mov
aas
dec
inc
adc
inc
mov
push
jb
(bad)
fild
xchg
xchg
sbb
add
cmp
shl
ret
cmc
fmul
sbb
inc
and
ret
inc
retf
jae
mov
push
cdq
loopne
jo
jmp
push
cmps
and
or
push
lock
pop
xchg
mov
test
add
or
retf
inc
and
dec
je
fst
inc
push
add
rcr
pushf
add
ror
mov
cmc
push
or
pusha
pop
add
xchg
push
dec
gs
ret
pop
sub
ja
push
jbe
sub
dec
or
ja
stos
sbb
jns
push
and
push
pop
lock
sub
(bad)
jmp
add
jb
and
pusha
add
add
push
cmc
mov
mov
ja
ds
mov
mov
ja
jae
sbb
jae
cmp
cwde
je
jmp
cs
jne
sbb
sub
jle
shl
mov
add
inc
int3
adc
aas
lea
pop
test
add
sti
inc
add
add
clc
psraw
sar
sahf
add
add
or
pop
push
jne
push
js
mov
jge
add
lea
lea
sbb
imul
sar
mov
mov
sbb
nop
sar
xchg
add
push
cmp
push
mov
cmc
dec
mov
push
push
push
pop
pusha
jb
fist
inc
retf
sbb
sub
imul
stos
lahf
add
sub
pop
dec
cli
pop
pop
jne
mov
mov
aas
lea
push
or
mov
xor
shr
jae
xor
fld
push
mov
enter
add
shr
or
mov
pop
je
mov
mov
mov
test
jne
add
in
or
outs
fdiv
dec
sbb
(bad)
add
test
fcom
add
jle
add
fsubrp
push
push
call
rcr
push
out
mov
xchg
mov
push
pusha
mov
mov
mov
sbb
popf
adc
pop
into
add
push
out
mov
push
fwait
push
mov
mov
push
pop
retf
sub
or
push
push
mov
es
into
stos
add
inc
and
pop
ret
adc
sbb
or
rcr
sbb
mov
jmp
mov
mov
loope
neg
sbb
neg
mov
(bad)
(bad)
fbstp
adc
retf
jne
cmp
je
xor
inc
add
or
fstp
pop
loopne
sub
aas
xchg
xor
faddp
scas
mov
mov
or
sbb
and
bound
xchg
mov
adc
fisub
ret
aam
mov
inc
inc
lea
push
je
out
sub
sub
test
sbb
(bad)
cmp
je
ficom
dec
ror
clc
shr
mov
mov
mov
in
jae
sub
in
mov
cmp
rol
mov
jle
ins
add
nop
rol
sbb
(bad)
pusha
pop
mov
jae
pusha
dec
xchg
adc
cwde
inc
adc
inc
push
xor
xor
adc
sbb
push
js
or
int3
neg
and
std
adc
inc
adc
mov
add
add
cmp
(bad)
ja
mov
sar
aam
cld
pop
xor
fadd
cmps
mov
jb
mov
mov
call
jmp
cmp
jne
test
jne
dec
test
sbb
adc
clc
dec
jmp
pop
or
cmp
(bad)
fldl2t
sub
cmps
sub
sar
mov
xor
or
adc
jg
add
push
lea
lea
lea
out
inc
lea
lea
leave
shl
add
shl
(bad)
sti
lea
sub
loope
lea
push
cmp
shl
sub
adc
jns
sbb
xchg
pop
and
sub
retf
in
xor
add
and
jmp
enter
mov
shr
shr
mov
sbb
xchg
test
cmps
push
pop
std
rcr
add
test
rol
push
inc
mov
int3
adc
push
std
enter
(bad)
or
xchg
sub
adc
imul
rdpmc
fild
call
xchg
push
sbb
jmp
dec
sub
xor
and
arpl
and
inc
xchg
sub
shr
shl
pop
or
dec
mov
adc
call
in
xchg
or
add
or
movs
and
test
lea
jp
clc
add
xchg
jg
xor
and
or
test
mov
(bad)
sbb
cli
mov
xor
cmp
jbe
xor
scas
ins
or
push
jmp
mov
add
xor
cmp
jle
mul
lds
mov
icebp
mov
or
and
or
inc
mov
std
jmp
sub
lds
add
jg
std
(bad)
jnp
mov
mov
pop
pop
lods
or
mov
xor
fwait
std
pop
jnp
xchg
daa
test
jbe
imul
sub
aas
push
push
fisub
sbb
xor
inc
or
test
je
inc
jo
ja
sbb
jo
or
cmps
jle
or
xor
dec
add
mov
mov
add
mov
popa
mov
xor
mov
adc
mov
nop
inc
inc
cmp
scas
or
cmps
jmp
mov
mov
hlt
dec
mov
or
mul
push
add
hlt
sbb
mov
in
sbb
xlat
in
nop
nop
das
add
xor
cs
loop
mov
or
push
xor
mov
pushf
out
(bad)
aas
sub
mov
lock
cmps
ss
add
push
push
push
rcl
ja
les
(bad)
xchg
leave
lea
fs
push
dec
adc
daa
mov
push
mov
push
push
sub
xor
hlt
cmp
cmp
(bad)
add
mov
in
add
or
mov
push
stos
sub
mov
mov
add
add
cmp
dec
or
rcl
pop
mov
xor
mov
dec
pushf
mov
push
cs
adc
dec
inc
mov
cs
add
push
jne
sbb
add
cmp
jg
out
and
xchg
push
inc
add
jmp
cmp
je
or
jge
or
cmp
jne
aas
jb
dec
push
movs
jne
xchg
mov
sub
inc
and
jne
(bad)
xchg
sbb
xor
and
inc
out
and
jne
adc
add
je
push
call
or
imul
inc
add
in
jge
mov
dec
imul
sub
mov
inc
inc
sbb
ror
pop
aam
add
pushf
add
mov
push
mov
push
push
mov
add
mov
adc
cwde
adc
mov
js
adc
scas
(bad)
fist
adc
inc
or
jae
mov
dec
test
jbe
inc
adc
adc
sbb
data16
mov
dec
mov
or
cmc
(bad)
sbb
dec
addr16
out
inc
and
(bad)
push
neg
push
mov
mov
add
pop
pop
dec
(bad)
cmc
(bad)
inc
or
push
push
push
call
push
push
add
xor
push
add
lea
pop
pop
add
cmp
mov
aaa
rcr
xor
retf
or
mov
push
xchg
lock
push
push
cdq
cmp
adc
inc
and
ror
add
pop
inc
cdq
mov
icebp
and
sbb
inc
and
push
sbb
in
cli
fist
inc
mov
and
mov
jle
sbb
xor
pop
and
cmp
out
test
cli
shl
sub
(bad)
sar
jmp
mov
mov
jmp
adc
sar
sub
jmp
cld
(bad)
ffreep
shl
or
and
sub
lea
mov
shr
test
je
dec
out
sbb
mov
mov
sar
shl
sar
(bad)
fcom
inc
iret
mov
not
and
shl
and
cmp
xlat
cmp
jge
lea
out
cli
cmps
out
dec
inc
ja
jmp
clc
adc
dec
adc
adc
mov
in
inc
(bad)
call
ror
sub
sbb
retf
add
inc
retf
loopne
add
imul
sub
pop
cmp
or
xor
and
cmp
stos
jmp
push
lea
mov
mov
or
jmp
ja
xchg
(bad)
fcom
inc
add
ins
and
jae
push
mov
ja
cld
dec
add
cmp
adc
lea
lea
clc
aaa
jno
lea
cmp
jae
mov
jno
push
lea
cwde
mov
add
hlt
test
mov
add
cmp
jb
push
call
sub
inc
(bad)
jmp
cmp
je
mov
jmp
mov
das
(bad)
or
ror
sub
loopne
rcr
or
or
push
sar
(bad)
cli
or
or
jmp
imul
mov
push
jmp
adc
sub
arpl
sbb
push
mov
xchg
add
shl
popa
pop
add
mov
inc
sar
xor
std
pop
jmp
mov
xor
sbb
cli
(bad)
add
mov
jmp
cmp
jae
fsubr
xor
push
mov
xor
rol
mov
add
jg
lahf
cld
push
add
or
inc
fwait
add
and
sbb
cmp
jb
add
addr16
cmp
xor
cmp
mov
jb
dec
add
adc
cmp
pop
cdq
mov
sbb
mov
cld
(bad)
aas
movs
push
sbb
adc
adc
inc
mov
fild
sub
inc
shl
shl
cmp
inc
dec
mov
push
mov
push
dec
and
and
and
pop
adc
sahf
les
call
cmps
ss
mov
loop
sbb
loopne
call
shr
adc
or
add
push
adc
add
add
sti
add
les
mov
pop
adc
ret
add
or
jne
das
jo
jmp
jmp
or
push
shl
(bad)
lds
std
test
je
mov
cmp
xchg
add
call
or
sub
mov
sbb
dec
add
cmp
mov
and
dec
scas
je
push
mov
push
jo
jl
les
push
sbb
retf
jne
jg
jg
bound
xor
div
add
push
test
push
je
paddusw
jmp
push
ret
aaa
and
pushf
test
and
je
or
cmp
ror
ret
stos
cs
adc
inc
pop
mov
jmp
cmp
movzx
data16
cmp
mov
push
push
and
push
push
dec
je
inc
mov
or
lea
jp
push
shl
dec
popa
mov
push
mov
add
mov
adc
mov
ss
or
test
je
sbb
mov
loop
push
jmp
js
scas
fist
add
and
fsub
out
sub
add
add
pop
mov
sbb
les
ret
adc
adc
je
add
mov
adc
out
xor
jecxz
test
je
popa
mul
adc
sbb
je
cmc
add
and
sub
jecxz
adc
add
pop
inc
mov
fisttp
mov
ss
jae
mov
shl
je
test
or
sub
sbb
cmp
inc
sbb
je
mov
or
test
sbb
pop
dec
xchg
lods
and
pop
or
jmp
ja
dec
in
push
push
sbb
jne
or
mov
test
mov
iret
push
sbb
cmp
adc
test
push
push
add
je
test
jne
or
push
push
and
adc
xchg
push
inc
test
mov
mov
adc
dec
je
add
test
jge
and
cmp
dec
scas
shr
ret
xor
retf
inc
and
cs
mov
popf
xor
xor
mov
and
xor
pop
inc
add
jge
mov
mov
mov
ret
out
jmp
add
sub
add
or
push
push
mov
dec
push
jmp
push
sub
js
push
sub
(bad)
mov
pop
call
or
sbb
lea
push
pop
pusha
sbb
xchg
mov
jne
or
mov
ja
and
add
loop
cmp
cmp
and
mov
popa
cs
cs
dec
xor
dec
mov
das
pushf
mov
js
xor
xor
mov
sbb
retf
add
shr
xor
dec
jmp
mov
inc
cmp
mov
and
cmp
add
(bad)
xchg
pmaddwd
(bad)
jmp
inc
into
mov
lds
and
loopne
leave
test
sbb
xor
out
and
jge
dec
(bad)
clc
lea
mov
jmp
loop
fsub
mov
shl
aaa
not
(bad)
jg
out
and
sbb
pop
shl
and
cmp
mov
inc
mov
adc
dec
jmp
je
add
push
adc
pusha
inc
pop
inc
jmp
cld
mov
jecxz
mov
adc
and
jae
inc
fimul
or
frstor
dec
test
idiv
(bad)
imul
pop
cs
aad
mov
push
mov
mov
xchg
ror
add
fcomip
mov
cmp
push
cmp
jae
fbstp
mov
test
mov
mov
rcr
pminub
(bad)
jns
fild
nop
stos
push
xor
cmp
mov
jae
xor
mov
mov
mov
mov
(bad)
sub
mov
fimul
adc
rcl
dec
add
shr
unpckhps
mov
xor
jmp
cmp
cld
and
mov
test
inc
sbb
jne
ss
cmp
pop
sbb
xor
ins
sub
add
mov
adc
fidivr
cld
lahf
add
cmp
test
xor
xor
das
ins
out
and
jo
adc
sbb
dec
cmp
sub
mov
sub
les
ins
push
pushf
sub
rcl
dec
ret
sbb
mov
or
add
pop
jg
adc
inc
jl
pusha
add
push
mov
inc
jl
inc
cld
push
sbb
ds
mov
cmp
sbb
mov
test
jne
or
scas
adc
push
push
(bad)
hlt
sub
bound
dec
je
xchg
sub
and
retf
sbb
test
push
xchg
fist
mov
cmp
je
sbb
sub
mov
pop
stc
icebp
cld
inc
fidiv
push
sbb
add
rcr
shl
and
jo
icebp
sbb
or
mov
sbb
ret
jle
out
cmp
and
push
and
mov
jmp
aad
inc
cmps
test
mov
mov
lahf
sbb
retf
test
paddd
loope
test
sar
lea
mov
mov
push
inc
mov
addr16
fsub
(bad)
cld
xor
cmp
je
add
mov
hlt
adc
pop
mov
rol
xchg
nop
mov
aaa
cmp
push
jae
je
sbb
xchg
mov
pop
cmp
jno
inc
cmps
cmp
shl
lea
add
sub
shl
mov
cmps
dec
call
ins
adc
add
fwait
cmp
mov
dec
icebp
jae
mov
mov
test
jbe
into
fs
cmp
rol
les
cmp
or
xor
mov
push
enter
pop
xor
jg
jmp
xor
cmp
rol
add
cmp
jb
or
ss
je
sbb
or
ins
and
dec
adc
mov
cmp
cmp
mov
xchg
dec
(bad)
imul
and
mov
inc
sub
jo
pop
sub
lods
je
sbb
add
add
jg
xor
or
and
inc
pop
xchg
sbb
or
cmp
and
pop
ss
cmp
(bad)
sti
jmp
rcr
or
mov
and
sbb
mov
(bad)
push
ror
mul
mov
pop
xor
in
push
fmul
jbe
ror
mov
loopne
push
ror
fdivrp
jg
dec
scas
rol
mov
sar
sub
shl
and
cmp
sbb
sub
dec
(bad)
xor
mov
xlat
adc
imul
pop
and
pop
add
jg
out
out
dec
test
jne
and
jae
add
int
sti
sti
cmp
push
les
mov
xor
sbb
push
cli
push
out
xchg
adc
adc
sar
sub
call
add
dec
jbe
xor
cmp
mov
jae
ret
inc
mov
(bad)
mov
jo
(bad)
push
ret
sahf
sub
mov
fstp
mov
in
je
fld
shr
xchg
sub
add
xchg
mov
jg
xor
repnz
(bad)
lock
(bad)
ja
adc
adc
fiadd
stc
sub
jb
cmp
sbb
mov
mov
push
mov
xor
clc
mov
adc
fsincos
sub
adc
repz
es
vsqrtsd
lock
sub
adc
cmp
mov
es
push
or
out
lea
aam
sbb
adc
add
jbe
xchg
mov
jae
mov
or
jmp
ret
inc
jp
shl
add
and
push
scas
push
mov
and
add
pop
cmps
inc
mov
sbb
jne
xor
shl
call
loop
and
inc
push
adc
sbb
fiadd
icebp
aaa
jl
inc
jb
push
push
jge
jle
dec
arpl
dec
(bad)
sbb
mov
adc
ror
push
push
inc
pop
and
adc
icebp
push
push
jp
xor
pop
jl
out
lea
shl
mov
aaa
mov
dec
add
sbb
adc
pop
in
add
std
pop
add
mul
popf
aam
das
lods
pop
add
sahf
sub
jge
and
test
mov
fs
pop
add
push
test
xor
push
js
stc
pop
pop
pop
pop
push
stc
das
stos
jp
mov
or
xor
pop
inc
and
cmps
mov
add
das
mov
adc
or
jnp
les
pop
fsubr
mov
bound
pop
mov
adc
das
adc
in
or
repz
push
jnp
add
jle
lds
sbb
mov
or
pop
jg
mov
dec
test
pop
mov
lods
adc
pop
das
ror
pusha
inc
adc
or
fs
and
(bad)
adc
dec
adc
out
test
push
inc
add
push
add
add
push
std
or
mov
mov
dec
adc
add
ret
adc
add
pop
pop
xchg
add
jle
lea
push
push
fisub
or
push
cli
adc
push
push
std
xor
sti
adc
outs
push
push
push
push
(bad)
mov
push
adc
in
push
push
push
push
in
pop
adc
mov
xchg
inc
push
push
xchg
(bad)
aas
push
push
push
push
lods
adc
in
push
push
push
add
adc
mov
push
push
push
push
retf
adc
push
push
xchg
adc
adc
or
pop
adc
pop
adc
add
push
jl
and
add
aad
sar
lahf
test
lahf
sbb
push
mov
xor
push
push
mov
jbe
push
adc
add
(bad)
mov
lea
pop
aaa
push
cdq
or
jns
or
push
cmps
(bad)
jmp
push
push
xchg
test
jne
push
push
push
xlat
sti
call
cs
sbb
and
cdq
sbb
inc
xor
jbe
icebp
pop
add
push
push
push
push
push
stos
push
adc
push
adc
adc
stos
mov
add
mov
fmul
add
(bad)
jne
mov
mov
or
or
jno
inc
shr
mov
adc
add
ja
jmp
inc
sub
mov
mov
adc
push
mov
mov
inc
add
daa
ret
mov
push
push
out
fnstsw
(bad)
xor
clc
add
mov
in
sbb
lea
mov
mov
push
lea
popf
data16
sub
ficomp
je
fs
pop
inc
push
adc
xor
xor
push
pop
inc
inc
mov
pop
adc
add
pop
or
les
dec
ud1
sub
leave
inc
adc
ins
add
loop
add
push
ss
cwde
push
push
and
aam
add
push
pop
cld
ror
test
add
dec
jo
mov
jge
sub
std
shl
ja
sub
loope
mov
add
(bad)
icebp
mov
add
test
adc
mov
xor
es
add
shl
and
dec
sbb
sub
add
mov
aaa
push
and
lea
mov
inc
pusha
adc
das
mov
out
dec
xor
add
and
in
cmp
rcl
dec
ins
push
push
push
fmul
pop
adc
or
cmp
push
push
retf
push
mov
adc
mov
leave
imul
and
cmp
pop
pusha
add
lods
mov
and
or
enter
shr
fld
push
enter
jns
sub
stos
mov
push
call
dec
pop
cdq
adc
fwait
jle
jo
or
in
data16
cdq
jo
inc
pop
and
inc
dec
push
jl
rcl
loop
jl
les
jg
add
sbb
sbb
sbb
sub
shr
and
xor
sbb
xchg
lds
sbb
jg
pop
pusha
adc
test
mul
jbe
das
ds
xchg
add
out
xchg
cmp
das
aam
push
sbb
mov
add
inc
or
mov
aam
add
in
xor
icebp
out
cli
hlt
xor
push
push
add
sub
mov
into
loopne
ds
mov
mov
sub
add
push
sub
cmp
sub
inc
(bad)
rcl
loop
cmp
test
add
push
aam
sbb
cmp
lea
loope
push
adc
inc
nop
inc
push
sbb
test
mov
stos
xor
xchg
and
inc
pop
test
mov
fst
adc
call
popf
mov
je
int3
inc
adc
and
lock
je
sub
cmp
sub
cmp
stos
cmps
dec
sti
adc
cmp
dec
push
popa
shr
jne
rcr
rcr
cld
test
je
inc
xchg
xor
rcr
cmc
add
push
inc
and
xor
clc
cmp
fnstcw
mov
mov
push
call
test
mov
lea
std
sbb
add
scas
push
adc
push
pop
and
mov
test
call
mov
add
lahf
pop
add
mov
mov
lea
mov
xor
shl
adc
push
enter
ror
movs
inc
(bad)
imul
xor
and
pop
inc
mov
push
push
pop
push
mov
iret
sbb
loope
inc
iret
fsubr
lea
loopne
sbb
push
and
out
push
mov
fadd
pop
cmp
mov
adc
add
push
mov
lea
and
out
into
or
cmp
mov
mov
ret
call
fadd
mov
cwde
out
xchg
push
repz
popa
out
jg
dec
je
dec
jne
mov
jmp
mov
xchg
push
jmp
mov
pop
jo
mov
xor
push
out
push
mov
sar
loope
sbb
call
push
add
fldpi
or
xchg
scas
(bad)
aad
lea
sub
fcomp
pop
test
mov
loopne
add
jo
dec
arpl
in
inc
hlt
test
jl
mov
push
jg
retf
lock
and
enter
push
add
cli
xlat
ret
mov
lea
mov
es
mov
prefetchwt1
ror
adc
inc
add
and
push
fidivr
enter
mov
lock
sbb
pop
shr
push
add
xchg
xor
push
push
out
mov
lea
push
fistp
ficom
lahf
pop
add
mov
add
in
jnp
cmp
jmp
xor
sub
sub
push
dec
push
ins
or
clc
mov
mov
mov
mov
xor
mov
mov
and
fdiv
mov
sub
popa
ins
inc
xchg
pushf
or
jo
cmp
bound
mov
das
out
hlt
lahf
mov
mov
push
cdq
mov
mov
cli
add
xor
sub
add
add
cli
mov
sbb
idiv
sti
adc
add
adc
clc
sbb
rol
or
push
push
push
xchg
bound
adc
inc
loopne
rol
or
push
test
call
mov
fmul
add
fcomp
ret
je
fld
sbb
daa
inc
loopne
shl
or
adc
rcl
push
add
and
sbb
call
push
scas
mov
mov
outs
add
push
call
test
jge
xor
jmp
mov
lahf
push
call
mov
into
icebp
enter
lea
or
dec
enter
or
sub
jge
arpl
adc
mov
add
enter
push
ins
js
cvtdq2ps
xor
jae
jmp
and
leave
loope
xlat
xor
xor
xchg
ror
mov
adc
std
xor
leave
cli
mov
or
dec
jo
clc
ror
cmp
pusha
xor
pop
xlat
adc
adc
push
push
aas
mov
fst
or
cmp
(bad)
bound
stos
xor
cli
or
push
cdq
popf
mov
fiadd
sub
cmp
or
mov
fstp
ror
lahf
xchg
jge
leave
push
add
push
inc
dec
jle
cs
jge
mov
xlat
jp
push
push
das
jbe
adc
(bad)
sbb
mov
add
jecxz
inc
pop
lock
mov
add
mov
and
xchg
and
sbb
test
lock
mov
add
sbb
loopne
pop
outs
or
jmp
push
out
dec
sbb
mov
(bad)
test
xor
lea
dec
or
into
and
sub
sub
pop
xor
sar
inc
and
inc
popa
or
or
stos
mov
cmp
xor
mov
dec
and
add
(bad)
gs
ins
and
fcomp
add
adc
mov
pop
xor
mov
or
mov
lahf
shr
jne
push
ret
add
ja
jl
and
cwde
cmp
in
push
mov
xchg
jmp
aas
add
or
lahf
add
dec
inc
add
push
cmp
inc
leave
push
add
mov
xchg
or
pop
aaa
int3
fcomp
aaa
sub
aaa
xor
or
ja
xor
cmp
adc
aaa
and
fdiv
sub
add
mov
clc
mov
mov
out
inc
add
add
xor
js
mov
jne
imul
xlat
or
sub
shl
cmp
push
pop
or
je
jge
jo
mov
or
and
inc
push
sbb
mov
push
mov
push
push
call
push
xor
(bad)
call
fild
push
or
sub
jg
mov
adc
fdiv
fstp
or
fld
push
mov
outs
fsub
sbb
xor
jno
xor
aaa
fs
adc
sub
adc
xlat
sbb
or
push
push
mov
cmp
int3
cmp
push
push
inc
out
cmp
sbb
retf
fs
out
out
sbb
outs
daa
dec
or
or
in
mov
lock
mov
or
jmp
dec
and
dec
and
mov
dec
pop
data16
daa
push
push
mov
and
call
mov
mov
popa
inc
daa
sbb
inc
icebp
mov
mov
add
or
sub
mov
(bad)
fmul
push
xchg
cs
cs
mov
jge
imul
call
or
push
mov
leave
and
(bad)
(bad)
jg
sub
ror
mov
pop
mov
mov
mov
sub
sub
pop
mov
(bad)
jno
add
rcl
repz
sbb
jg
imul
or
mov
add
loopne
and
dec
sbb
add
test
push
pop
or
(bad)
mov
jo
push
dec
mov
retf
lea
add
cmp
mov
add
push
sub
mov
adc
push
xor
jnp
inc
add
pop
adc
dec
nop
nop
mov
jmp
adc
(bad)
fldcw
push
jg
in
ins
push
push
inc
push
sahf
jno
jno
sub
fld
inc
loope
mov
and
mov
call
clc
or
(bad)
push
mov
inc
jl
xchg
push
and
and
sub
sub
push
cmp
ins
xor
adc
mov
int3
mov
dec
or
xchg
es
xchg
jl
pop
push
add
mov
inc
jmp
jecxz
in
and
xor
dec
cmp
push
je
mov
inc
pop
push
sahf
adc
inc
sub
std
test
add
dec
mov
mov
sbb
rol
adc
jae
push
dec
test
rol
or
ror
adc
add
iret
gs
pop
and
cmp
pop
push
jl
mov
add
shl
je
fstp
fcom
rol
mov
aaa
cs
sub
add
add
sbb
data16
add
gs
pop
push
fild
mov
dec
ds
push
lea
scas
fadd
or
jo
mov
xor
push
mov
into
fistp
cdq
pushf
das
rcl
pop
pop
enter
push
pop
pop
mov
sahf
and
das
and
add
cmp
ret
push
jno
mov
fild
aas
leave
pop
dec
call
add
push
(bad)
loope
into
mov
adc
mov
cli
xor
mov
jo
into
dec
ss
mov
sbb
popf
mov
dec
ins
mov
inc
movs
nop
adc
pusha
pop
cmp
(bad)
xchg
or
pop
repnz
repnz
je
mov
pop
nop
iret
ret
loope
mov
je
jo
leave
add
or
dec
sbb
xchg
movs
nop
shr
add
pop
retf
addr16
fs
loope
xor
in
xor
push
lea
ja
add
pop
or
scas
and
push
aaa
push
cmp
push
lea
fisub
add
enter
inc
stos
add
ror
mov
add
adc
in
adc
adc
sbb
or
add
push
mov
jo
jbe
shl
test
sub
je
call
test
lea
je
push
mov
xchg
inc
dec
add
std
(bad)
jg
jne
lea
lea
mov
mov
or
cli
push
pop
or
pusha
mov
mov
and
(bad)
mov
pusha
push
push
lea
lea
cmp
push
push
lea
push
lea
sar
hlt
mov
xor
les
(bad)
call
dec
jo
pop
add
mov
sub
mov
sar
sub
lea
push
push
mov
int
and
mov
mov
inc
sti
mov
and
out
js
mov
and
shr
pop
or
leave
(bad)
psubusb
jp
mov
or
dec
sbb
aam
add
mov
and
inc
jg
push
and
push
push
outs
and
and
sub
mov
inc
cld
sbb
les
sar
test
sbb
mov
hlt
dec
and
retf
mov
add
cli
add
retf
pop
lea
inc
icebp
sub
stos
mov
test
push
push
nop
push
cmp
sbb
and
test
add
fwait
icebp
and
mov
cmps
stos
retf
or
bound
mov
push
sub
xor
mov
sub
sbb
sbb
adc
xor
or
inc
(bad)
jle
mov
stc
jle
mov
jge
ret
test
mov
mov
sbb
inc
inc
xor
scas
push
adc
sub
test
sub
(bad)
jg
mov
dec
add
(bad)
and
sbb
or
dec
jne
out
pusha
xor
leave
add
cmp
retf
inc
popf
pop
je
add
xchg
or
mov
repnz
and
sub
lea
clc
popf
test
add
mov
sbb
push
lock
add
jl
inc
add
call
out
loopne
arpl
push
out
cwde
ss
lahf
push
push
test
pop
mov
cmc
jecxz
and
not
push
push
push
mov
mov
sbb
pop
mov
mov
cmp
ja
cdq
ins
inc
inc
add
repnz
or
lock
dec
jmp
inc
jmp
sub
ins
mov
and
pop
adc
(bad)
push
into
cmp
jle
inc
adc
fild
push
cmp
jge
mov
cmp
je
push
retf
bound
push
sub
or
not
push
sbb
sbb
es
mov
add
mov
jo
add
outs
add
sub
pop
sbb
mov
fsub
sahf
jmp
imul
mov
fbld
dec
shl
adc
sti
cmp
call
call
xchg
push
push
lods
adc
out
jge
xlat
sbb
pop
xor
push
(bad)
ret
rol
jmp
adc
mov
xchg
fdiv
ja
adc
rol
sti
mov
add
enter
push
cmp
retf
leave
adc
jae
lods
mov
cmp
jle
add
push
inc
hlt
test
jl
dec
push
fadd
ror
aas
sub
imul
inc
mov
pop
test
push
pushf
add
sbb
and
lds
cmp
mov
add
clc
mov
neg
shl
adc
push
or
out
repnz
shl
sub
push
neg
int3
pusha
jb
vpsubw
scas
add
shl
cmps
cmp
outs
aaa
je
add
push
add
xchg
leave
stos
mov
mov
add
xor
cmp
push
pusha
add
sbb
or
dec
dec
add
test
stos
and
prefetcht1
(bad)
cli
and
lahf
push
or
and
test
mov
sbb
test
and
test
rol
and
in
mov
out
or
or
xor
xchg
loop
mov
add
or
add
add
into
data16
sub
(bad)
mov
push
fcmovu
xor
sbb
loope
sbb
cwde
jne
fidivr
and
cmp
pushf
jmp
and
inc
adc
neg
fdiv
fs
sbb
call
push
mov
fwait
sub
mov
jg
xor
jmp
mov
or
mov
dec
ins
out
inc
add
jo
inc
pop
add
mov
ins
and
mov
sbb
lds
pusha
mov
sub
loope
aad
outs
ins
add
sbb
adc
mov
sbb
add
mov
out
add
push
mov
xor
fnstsw
pop
mov
add
mov
jns
push
add
xchg
dec
loopne
add
sbb
test
pop
jecxz
aaa
je
pop
inc
aad
add
aam
and
and
and
inc
cdq
cmp
push
dec
(bad)
inc
dec
sbb
xchg
push
jb
mov
loope
and
mov
or
mov
lods
or
ret
add
push
inc
and
add
fdivr
sar
pusha
loop
sub
call
cwde
add
call
outs
mov
pop
(bad)
cmp
add
fld
xor
dec
mov
jne
call
arpl
jne
rol
sar
mov
add
daa
sar
clc
inc
jb
std
out
scas
jmp
push
call
or
aam
sbb
push
js
sub
jnp
stos
push
jb
inc
add
dec
push
pushf
repnz
(bad)
and
push
adc
sbb
cwde
add
data16
jp
sbb
mov
dec
pop
mov
push
push
(bad)
pop
xor
cmp
jne
or
or
mov
pusha
pop
sub
jb
adc
xchg
mov
inc
xor
sbb
rol
jl
cmp
mov
add
mov
mov
xor
pusha
aaa
int3
xchg
add
data16
adc
rol
dec
inc
mov
adc
pop
cwde
loope
aaa
mov
xor
test
mov
mov
xchg
xchg
ins
(bad)
jmp
and
mov
mov
mov
mov
(bad)
call
mov
test
inc
and
add
out
and
mov
mov
aas
mov
inc
mov
mov
fdivp
pusha
call
(bad)
mov
and
push
push
mov
jle
and
cmp
xchg
std
pop
cmps
(bad)
pop
xchg
push
push
push
push
xor
aad
jl
xor
(bad)
jg
adc
je
cmps
or
add
mov
or
xchg
add
fisttp
sbb
lock
jns
fcom
lock
cmps
or
inc
push
push
push
into
es
xchg
inc
mov
adc
cwde
or
dec
pop
jecxz
inc
shl
(bad)
cmp
test
mov
cmp
pop
add
jnp
add
sbb
aaa
fucom
lea
clc
or
add
shr
(bad)
outs
push
test
jae
mov
mov
dec
mov
fist
add
cmp
mov
jne
(bad)
(bad)
call
jmp
cmp
jne
push
call
jl
dec
cwde
push
sub
cld
jo
mov
inc
or
xor
sbb
(bad)
sub
lock
cs
sub
fs
mov
sbb
mov
inc
clc
push
sbb
scas
sbb
add
js
sbb
cmp
mov
cmc
push
call
in
int3
mov
push
push
jmp
and
dec
mov
mov
ss
mov
or
(bad)
pop
and
jl
push
xor
mov
pop
pop
sub
inc
mov
and
and
loop
add
clc
call
pop
push
and
dec
and
sbb
jp
cmp
jl
mov
stc
cmp
jl
sbb
sbb
loopne
outs
sbb
cmp
bound
inc
xchg
mov
stos
(bad)
mov
stc
adc
pop
cmp
jne
inc
jmp
or
popa
test
adc
dec
rol
(bad)
adc
cmp
rcl
adc
(bad)
jmp
jmp
test
je
cmp
jne
lea
jmp
test
je
inc
inc
(bad)
(bad)
call
into
inc
inc
dec
cmp
jne
test
jne
cmp
jl
jmp
test
je
test
mov
je
xor
adc
test
inc
out
jmp
cmp
neg
mov
pop
xor
cmp
jne
inc
popf
push
sbb
inc
and
jmp
pop
lock
adc
stos
call
sub
inc
jge
inc
and
add
or
ret
push
loop
fucomp
std
sub
in
mov
push
xor
mov
mov
pop
ja
mov
retf
cmp
adc
mov
xor
lds
mov
cs
sbb
cld
fwait
dec
add
cli
sets
dec
and
cs
in
into
sub
add
xor
push
retf
add
sbb
dec
ja
push
test
sub
adc
inc
adc
or
xor
mov
out
inc
xor
mov
gs
loope
arpl
lds
pop
push
xchg
mov
or
js
pop
push
pusha
or
push
sbb
dec
aaa
std
leave
and
mov
je
sbb
je
dec
out
add
xor
inc
cmp
or
add
cmp
push
mov
outs
and
inc
push
inc
cmp
ret
out
push
push
mov
xchg
and
push
inc
inc
or
fisttp
or
xor
adc
or
pushf
add
xor
(bad)
lahf
test
jne
or
jmp
ds
bound
push
sbb
gs
cwde
lods
dec
adc
mov
mov
sbb
pop
scas
or
rcr
mov
cs
or
or
pusha
mov
aas
jne
push
or
adc
push
push
push
(bad)
jo
push
jno
and
adc
pop
cmp
sub
xchg
cmps
dec
and
dec
pop
out
lock
outs
sar
sub
dec
pusha
mov
push
mov
call
mov
(bad)
push
push
sbb
call
lea
pop
test
pop
jne
ret
mov
xchg
mov
xor
cwde
xchg
sub
or
adc
ss
pop
xchg
imul
inc
adc
pop
out
sbb
add
mov
add
sub
add
jge
out
js
mov
or
push
add
inc
dec
shl
test
push
adc
test
mov
fcom
xor
out
mov
push
add
adc
mov
pusha
mov
sub
push
mov
in
jmp
xor
mov
loop
aam
mov
or
lods
loopne
add
add
add
adc
fsubr
outs
jecxz
lea
adc
and
neg
push
cmps
mov
add
lods
cld
out
inc
inc
popf
sbb
or
push
jge
cmp
mov
and
push
fwait
and
and
sbb
cmp
test
mov
pop
sbb
dec
add
cs
pop
bound
jl
inc
sub
and
jge
aas
add
and
jne
push
pusha
lea
jo
mov
push
mov
dec
and
aas
jbe
mov
cmp
cdq
lods
push
stos
pushf
sti
sbb
adc
das
pop
inc
aad
or
adc
lea
(bad)
fst
add
and
sbb
and
sbb
push
xor
test
mov
push
xor
sub
adc
mov
(bad)
bound
xor
jb
ins
push
push
inc
std
ja
cmp
movs
mov
js
arpl
in
sub
sub
sbb
loop
add
cli
xor
add
sub
add
inc
xchg
sub
sub
jb
stos
inc
add
fwait
push
push
push
push
push
mov
idiv
mov
jbe
add
rcr
push
sub
jne
jle
sbb
cmp
pushf
cwde
xchg
adc
cmp
sbb
test
inc
sub
loope
or
pop
aam
push
ss
mov
jle
mov
push
push
push
pop
retf
cmp
lea
mov
call
daa
pop
push
std
mov
add
add
dec
sbb
adc
dec
inc
idiv
push
sub
or
push
jns
scas
call
inc
retf
hlt
adc
push
inc
jp
clc
inc
push
enter
pop
scas
loope
call
not
xor
adc
cmp
pop
mov
aaa
and
push
add
and
retf
cmp
add
jae
adc
xchg
cmp
pushf
and
sub
and
adc
cmp
and
aam
clc
xchg
loope
sub
out
and
int
xchg
popf
dec
inc
mov
jl
retf
mov
sub
add
js
xor
inc
retf
inc
adc
push
pusha
sbb
jmp
xor
dec
add
scas
retf
mov
out
fcomip
fadd
add
sub
(bad)
cmp
jl
xchg
add
cmp
lea
or
push
push
lea
ja
fs
xor
inc
outs
pop
sti
scas
sar
add
jg
icebp
sbb
dec
pop
scas
mov
mov
loop
call
nop
ins
and
jge
xchg
retf
sti
xor
xor
dec
push
inc
pop
mov
shr
pop
addr16
ret
je
inc
dec
test
or
cld
into
or
adc
mov
push
out
inc
and
adc
and
call
mov
inc
xor
jo
push
adc
push
and
mov
sti
nop
daa
pop
sbb
dec
push
push
cdq
mov
push
push
bound
std
push
and
pop
xchg
xor
or
ror
mov
dec
cli
mov
cli
jne
sub
adc
jne
sar
adc
hlt
jg
jmp
xor
sub
push
movs
mov
pop
mov
push
push
inc
les
adc
data16
bound
lahf
je
out
lock
adc
sbb
cmp
in
cdq
or
or
pop
daa
ins
add
cld
dec
jnp
or
xor
inc
xchg
mov
dec
sbb
ins
add
or
pop
in
or
jp
add
mov
movs
call
das
pushf
add
inc
xchg
xor
push
call
je
int3
adc
cmp
(bad)
jg
xlat
test
jne
mov
push
and
std
inc
add
cmp
mov
and
(bad)
cmp
mov
sub
push
xchg
dec
add
mov
dec
or
jg
repnz
popa
mov
add
(bad)
icebp
cmp
and
inc
jno
and
mov
bound
popf
cmp
push
nop
push
sbb
sbb
cmp
or
pusha
pop
nop
mov
lock
mov
les
mov
and
adc
bound
jmp
push
or
es
iret
iret
and
inc
ret
mov
add
out
in
add
push
or
nop
pextrw
cs
fild
or
iret
mov
fcomp
push
push
dec
lahf
stos
mov
outs
cmc
xor
nop
xchg
aaa
mov
xor
inc
imul
pop
mov
movs
mov
stos
pop
push
sar
test
sbb
lock
add
or
sub
push
cmc
fisttp
push
enter
lock
dec
int3
push
xchg
inc
and
cmp
jne
add
mov
into
test
push
cwde
stos
clc
mov
jne
mov
out
and
jl
cmp
int
add
gs
fiadd
push
push
movs
xor
push
adc
loope
sub
pushf
(bad)
adc
loopne
in
in
pushf
push
push
xor
push
mov
xor
mov
pop
inc
mov
mov
adc
call
or
mov
inc
cld
dec
mov
lea
mov
sub
and
sub
pop
add
inc
add
mov
stos
dec
add
rol
aam
xlat
lahf
stos
inc
or
adc
mov
es
mov
cmp
(bad)
pop
mov
data16
sti
data16
inc
ja
or
add
jle
mov
sub
mov
(bad)
(bad)
fild
stc
mov
mov
shr
mov
mov
add
dec
jne
jmp
mov
mov
push
pop
pop
pop
add
add
dec
cdq
mov
sub
and
pop
enter
(bad)
sbb
sbb
loop
inc
call
or
inc
pop
xchg
(bad)
test
and
pop
inc
jno
nop
sbb
aaa
pusha
cmps
mov
vfmsubss
mov
int3
loop
dec
dec
pop
or
rcr
lds
or
adc
cmp
jo
cmp
fsub
clc
(bad)
loopne
mov
icebp
test
inc
and
cmps
(bad)
outs
push
adc
push
push
add
call
inc
cmp
and
or
jb
lds
gs
inc
add
jg
adc
sub
push
push
push
push
adc
nop
loopne
add
inc
sub
inc
loopne
lods
daa
inc
jnp
xchg
and
sahf
or
dec
push
adc
retf
and
ret
scas
add
or
adc
sbb
sbb
lahf
adc
and
into
out
inc
add
cmp
and
(bad)
bound
cmp
stos
push
add
ins
mov
adc
inc
cld
pop
jge
nop
mov
pusha
mov
adc
hlt
aam
sub
cmp
adc
sbb
leave
je
fist
jmp
and
xor
lds
call
and
fild
outs
and
sbb
add
rol
or
stos
add
jo
stos
push
push
sbb
ins
(bad)
shr
push
fild
push
cld
icebp
push
mov
push
jle
push
in
mov
cmp
pop
inc
jmp
jne
cmp
je
jne
xor
fadd
add
ret
repz
or
(bad)
iret
dec
push
sub
ror
jbe
inc
pop
sbb
pusha
mov
or
data16
mov
sub
test
clc
es
outs
gs
mov
cwde
or
ins
cmp
call
mov
mov
dec
jp
lock
dec
push
xor
idiv
dec
or
mov
push
push
xchg
mov
clc
daa
jne
jp
xor
xor
jmp
adc
aas
fadd
jmp
jmp
jmp
mov
dec
cmp
jge
inc
jmp
aas
ins
push
xor
icebp
scas
jne
mov
out
fdiv
push
pop
into
(bad)
pop
inc
jo
xor
cmp
or
jmp
jne
pop
mov
jmp
lea
or
cmp
lock
push
jmp
add
fs
out
dec
jmp
clc
pop
mov
dec
dec
jmp
mov
lock
push
or
dec
cmp
dec
ret
jmp
dec
lock
push
stc
std
cmp
add
lods
sbb
cmp
jp
out
xor
cmp
jne
mov
fwait
test
mov
mov
jo
lock
and
xchg
add
push
sub
sub
add
pop
div
push
push
push
iret
add
push
and
sub
push
retf
sub
aaa
dec
ds
xlat
mov
(bad)
jl
adc
inc
dec
lods
std
push
xor
test
jle
jg
push
fwait
xor
push
fcom
inc
cmp
jl
mov
push
in
inc
pop
pop
aaa
(bad)
cmp
push
pop
rol
and
add
mov
add
ins
xchg
call
jo
and
or
xor
fwait
js
add
mov
push
lea
push
push
jmp
(bad)
jmp
mov
std
or
cs
jo
push
pop
jmp
or
or
mov
mov
or
jl
rol
cli
mov
mov
cdq
idiv
push
mov
add
xchg
add
jl
cmp
jge
cmp
je
or
push
das
aad
or
inc
mov
loope
pop
in
test
addr16
aad
(bad)
cmp
mov
and
cmp
dec
sub
add
adc
sub
mov
shr
and
mov
push
test
int
push
aaa
jle
pop
pop
push
cmp
xchg
ud0
(bad)
rcr
push
or
cli
(bad)
push
je
adc
mov
sbb
mov
cmp
fldcw
int
pop
sbb
fistp
test
jl
cmp
jge
mov
cmp
jge
imul
mov
jne
cld
cmp
(bad)
cmp
jl
pop
daa
nop
das
jmp
jne
fs
aad
mov
arpl
add
cmp
push
dec
leave
je
(bad)
fld
and
or
inc
cmp
pop
js
ja
cdq
idiv
jae
add
in
cmp
out
nop
sbb
or
jecxz
push
push
aaa
or
(bad)
push
jmp
push
mov
mov
push
clc
test
mov
mov
rol
loopne
jmp
cmp
je
inc
add
in
hlt
mov
je
div
cli
das
mov
pop
pop
mov
xchg
mov
adc
add
shr
push
cmp
mov
jne
mov
push
jecxz
call
inc
pusha
push
push
jmp
cmp
jne
mov
mov
jns
jo
xchg
xor
mov
mov
mov
inc
fnstsw
ret
test
jl
cmp
jge
push
ins
push
in
imul
clc
inc
inc
jl
adc
rcl
mov
push
jg
rcr
push
dec
add
mov
popf
jecxz
or
pop
fisub
les
inc
mov
sub
mov
add
add
mov
adc
adc
shl
aas
clc
inc
add
add
test
jge
xor
push
outs
aam
loope
cmp
sub
popf
add
clc
push
push
push
je
call
add
mul
xor
inc
jge
pop
test
sub
adc
ja
and
mov
push
jae
dec
sbb
inc
mov
in
xchg
sbb
je
mov
and
retf
pop
sub
and
cmp
jle
xchg
sub
(bad)
or
jp
and
outs
inc
pop
mov
sar
add
stos
shl
lea
cld
ja
or
mov
jmp
imul
dec
cmp
xchg
and
xchg
jne
fadd
mov
inc
push
cmp
fmul
mov
inc
add
pop
stos
js
test
fist
mov
dec
imul
call
ins
and
lea
rol
jno
push
aam
and
aad
rcl
lds
clc
clc
(bad)
aas
(bad)
pop
mov
mov
sub
cmp
jle
mov
add
mov
loop
dec
push
pop
lea
jg
mov
pop
adc
fld
retf
or
push
push
call
xor
inc
add
dec
or
loop
shr
xchg
ret
or
int
xor
imul
or
fnstcw
add
fstp
jmp
pusha
pop
mov
and
rol
sar
and
adc
(bad)
jle
fiadd
aad
outs
add
adc
out
bound
loop
cmp
mov
cmp
and
shl
sub
add
add
mov
adc
aad
add
rcr
add
shl
cmp
jle
sub
aad
sbb
inc
test
jge
neg
push
push
push
or
fisttp
push
adc
jbe
shr
or
xchg
mov
pop
add
clc
daa
loopne
nop
nop
sub
sbb
add
scas
add
push
sub
or
in
push
mov
jmp
mov
cwde
imul
lods
daa
adc
dec
mov
cmp
add
or
cmp
mov
retf
(bad)
xchg
data16
iret
sub
das
inc
popf
push
or
xchg
arpl
stc
sar
cli
stos
and
add
push
or
clc
push
push
add
sar
push
call
jp
ret
mov
inc
fcom
push
jbe
jle
call
inc
mov
test
mov
icebp
push
push
jmp
cmp
jne
jg
cmp
push
(bad)
std
add
jmp
mov
mov
jmp
add
inc
xor
test
pusha
adc
jnp
jno
mov
sbb
and
pop
add
inc
cs
add
icebp
popf
rcl
cmp
or
jbe
jle
(bad)
jne
mov
add
or
mov
or
fiadd
into
inc
add
lahf
jne
mov
jmp
mov
fcomp
xchg
xor
in
das
xor
adc
retf
test
adc
stos
sub
pop
mov
jb
ja
mov
jno
add
mov
into
call
mov
(bad)
loope
cmp
jmp
clc
xor
and
add
test
andps
pop
ins
xor
test
outs
and
lahf
lea
push
rol
mov
mov
xor
adc
inc
ror
lea
call
inc
out
inc
push
dec
idiv
or
fild
addr16
mov
(bad)
and
stos
outs
sub
aaa
jo
aas
mov
jo
add
sub
mov
je
scas
(bad)
push
push
lea
mov
sbb
mov
aaa
sub
or
sar
push
aaa
add
inc
cmp
mov
add
lock
aas
xor
inc
idiv
sbb
aas
inc
push
sar
jne
cmp
je
push
adc
pop
mov
sub
inc
jp
jne
sbb
inc
and
push
push
push
jmp
scas
or
(bad)
cmp
jne
mov
push
adc
cmp
sub
add
leave
fild
mov
std
or
mov
inc
and
push
mov
push
push
push
and
adc
sub
popa
(bad)
lock
je
inc
sti
std
jne
fbstp
pop
jo
jl
ins
push
push
pop
jle
push
jnp
dec
push
add
or
scas
lahf
jnp
dec
and
mov
mov
push
and
loop
add
inc
call
mov
mov
enter
call
or
aad
xor
or
dec
push
push
add
xchg
retf
call
loope
std
add
xchg
andps
loopne
ins
add
jb
neg
neg
jo
call
add
push
call
push
call
push
inc
cmp
test
dec
xor
ja
mov
mov
sbb
add
add
ror
and
add
dec
add
push
push
call
fist
add
add
push
aaa
test
jnp
and
sahf
inc
push
adc
xor
pop
icebp
mov
lea
push
test
test
pop
test
pop
sahf
stos
push
clc
push
sub
jb
xchg
push
xor
sbb
ja
jnp
and
cwde
mov
inc
mov
fadd
test
and
jno
mov
(bad)
fild
and
test
je
lea
cld
xor
(bad)
jg
inc
jo
rcl
cmp
jne
cmp
je
jecxz
mov
push
and
push
push
div
cmp
xchg
inc
shl
push
addr16
add
push
div
pop
and
push
inc
mov
mov
ror
jmp
test
inc
jne
into
add
shl
or
fistp
mov
or
hlt
pop
xor
js
dec
add
mov
add
sub
mov
fimul
or
inc
sbb
iret
scas
in
mov
sar
dec
mov
push
cmp
inc
add
xor
das
ror
and
into
mov
jnp
fsub
inc
test
cmps
adc
add
stos
pop
(bad)
outs
mov
test
xor
push
js
out
or
ror
in
mov
cli
scas
or
mov
push
call
loope
data16
lea
or
inc
enter
daa
xchg
pop
repnz
cmp
add
or
mov
rcr
xchg
cmp
cwde
and
add
sub
jl
mov
dec
inc
sbb
enter
inc
inc
or
or
and
sbb
mov
ror
xchg
adc
inc
(bad)
(bad)
(bad)
out
or
fild
add
or
add
add
aam
or
call
mov
push
mov
in
jp
xrelease
mov
lahf
add
ror
adc
lea
js
and
xchg
pop
mov
push
pop
lock
dec
jne
push
sbb
(bad)
sti
call
add
or
inc
adc
loop
add
out
add
int3
cmp
jge
mov
cmp
leave
ins
lahf
mov
inc
inc
pop
inc
add
mov
adc
or
and
inc
fcomp
or
and
test
add
pop
int
imul
mov
nop
pop
push
xor
cld
mov
dec
cmp
ja
xor
mov
jbe
add
cmc
mov
push
add
inc
adc
call
loopne
sti
cmp
adc
xlat
adc
xor
add
mov
and
call
pop
ret
loopne
popa
inc
mov
adc
xchg
ret
nop
mov
inc
add
add
call
push
test
xchg
call
mov
imul
pop
or
je
sub
std
cmp
dec
je
mov
mov
arpl
mov
je
xor
mov
inc
mov
ret
cwde
add
push
push
aas
outs
test
ror
mov
or
cmps
je
sbb
arpl
sahf
add
adc
add
mov
mov
pop
je
pop
pop
or
jmp
(bad)
icebp
jg
push
mov
push
push
mov
adc
sub
jp
out
(bad)
call
jmp
cmp
jne
cmp
jne
cmp
jne
jle
into
jno
mov
jmp
mov
push
xchg
inc
xor
(bad)
jmp
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
std
out
mov
mov
mov
push
adc
and
ror
ret
sbb
cmp
into
add
lahf
aad
jne
mov
test
jne
xchg
mov
cmp
jae
pushf
sbb
dec
inc
fdiv
shl
jmp
cmp
div
push
enter
es
inc
mov
push
pop
(bad)
cld
adc
je
mov
push
sbb
les
test
in
inc
enter
iret
jmp
ja
and
mov
xlat
cdq
stos
push
dec
push
jle
test
test
adc
xchg
dec
scas
out
pop
jne
outs
adc
je
mov
je
out
icebp
into
xchg
mov
aaa
cmp
adc
sub
cmp
fld
jne
out
mov
inc
or
shl
inc
jl
mov
or
lods
xor
pop
ret
mov
adc
push
and
push
add
xor
sbb
adc
dec
mov
cmc
(bad)
push
loopne
push
mov
je
jbe
add
rol
outs
jle
and
add
mov
jae
inc
jo
sbb
stos
cmp
dec
mov
je
mov
adc
fist
repz
push
push
sbb
pop
add
cmp
jb
outs
cwde
pusha
pusha
not
pusha
sub
mov
lea
clc
(bad)
sbb
mov
or
rol
dec
and
test
adc
fdiv
jl
or
sar
push
nop
mov
cmp
jb
dec
xchg
std
or
aas
xchg
adc
mov
jg
and
stos
lds
pop
add
pop
ret
and
fcom
push
add
add
(bad)
cld
sbb
mov
push
push
add
mov
inc
scas
add
push
mov
nop
sti
xchg
sbb
xchg
or
mov
adc
add
inc
or
push
adc
adc
inc
lds
inc
jge
add
add
pop
mov
test
inc
add
add
fldcw
(bad)
(bad)
mov
push
mov
call
test
ja
mov
clc
(bad)
mov
mov
push
push
call
fadd
pusha
or
mov
and
loopne
inc
loopne
add
in
mov
mov
mov
xchg
xor
xchg
or
fistp
push
mov
(bad)
cmp
adc
idiv
cmp
lock
push
sub
call
push
icebp
(bad)
call
jg
mov
sub
mov
mov
icebp
dec
inc
mov
sbb
jmp
int3
or
or
and
add
ins
mov
or
(bad)
mov
je
dec
js
dec
jl
mov
jmp
dec
nop
dec
mov
mov
mov
cs
sbb
das
pop
mov
int3
daa
dec
aam
ror
push
push
lds
cmp
adc
add
pop
sbb
jne
sub
dec
or
das
sub
inc
adc
adc
sbb
(bad)
out
dec
adc
or
or
mov
inc
inc
test
jne
mov
add
adc
out
mov
push
xor
xor
jg
outs
stos
xor
mov
xadd
cmp
xchg
pop
and
test
jne
dec
xor
sti
lea
jg
adc
xchg
xchg
and
mov
ja
loopne
(bad)
mov
sar
cld
je
cmc
test
mov
mov
push
cld
sub
add
mul
shr
mov
jmp
mov
scas
sub
dec
div
push
mov
sub
sbb
loopne
shr
jb
in
add
nop
push
jmp
xor
cmps
mov
(bad)
scas
mov
add
cmp
jne
pop
adc
out
xchg
jbe
test
je
dec
mov
int3
pop
sar
xor
ja
xlat
jne
mov
pop
mov
les
add
adc
xlat
push
and
outs
mov
jmp
je
cmp
jne
pop
cmp
cld
(bad)
cmp
and
cmp
jl
mov
sub
add
push
push
call
adc
icebp
ss
pop
ret
or
int3
or
push
inc
js
add
add
inc
je
adc
rol
into
outs
inc
lock
out
adc
in
cmp
add
mov
inc
or
ret
cmp
jno
and
je
in
int
pop
dec
fistp
das
inc
or
inc
sub
not
mov
(bad)
call
sbb
xchg
sub
add
and
mov
push
and
inc
cmp
mov
mov
dec
fadd
inc
sbb
push
(bad)
push
call
pop
(bad)
loopne
mov
mov
iret
sar
jmp
jmp
inc
jl
cmp
jg
cmp
jle
cmp
(bad)
(bad)
jmp
add
sub
pop
sar
and
inc
and
inc
mov
(bad)
jl
xor
mov
and
test
jge
(bad)
jmp
push
xor
adc
pop
and
adc
test
adc
out
shl
inc
inc
cmp
int3
shl
sbb
push
fnstenv
adc
test
push
inc
adc
pop
sub
test
or
and
aaa
cmps
or
loop
xor
pusha
and
push
add
js
out
add
in
inc
dec
inc
div
cmp
mov
je
jne
hlt
(bad)
cmp
jbe
cmp
je
lea
test
jmp
or
dec
sub
mov
mov
lea
add
dec
push
push
mov
mov
mov
test
xchg
or
mov
inc
pop
pop
nop
cmp
inc
in
adc
cmp
push
add
in
mov
push
aam
mov
and
pop
frstor
ins
add
pushf
add
loopne
push
mov
xchg
adc
cdq
or
dec
addr16
scas
dec
push
jecxz
adc
outs
das
or
je
data16
and
test
add
dec
aam
dec
jp
mov
mov
add
push
(bad)
dec
add
jo
(bad)
call
scas
dec
mov
lea
push
push
push
push
das
push
mov
jg
adc
or
mov
mov
and
jge
aam
mov
push
or
pop
sub
push
int3
mov
push
push
cmp
pop
sub
sub
outs
push
mov
mov
jge
adc
lea
push
sar
inc
sbb
or
mov
inc
js
movs
fisttp
or
push
cld
pop
jl
dec
cld
mov
in
mov
lea
push
inc
dec
xor
je
jl
xchg
fld
mov
pop
push
mov
call
mov
or
clc
mov
cmp
mov
inc
cld
mov
xor
cmp
in
or
dec
in
repnz
xor
rep
inc
aad
and
cli
scas
mov
add
push
add
fadd
sub
xchg
cmp
and
cdq
ret
sbb
inc
(bad)
out
jp
mov
cmp
repz
push
aam
(bad)
pop
sub
inc
das
or
push
adc
cli
dec
and
retf
and
(bad)
or
mov
add
pop
and
cmp
pop
pop
mov
jl
sbb
jg
jo
test
jne
push
addr16
sbb
or
jmp
push
shl
idiv
cmp
ja
imul
(bad)
add
jno
adc
cmp
cmp
mov
jg
and
in
je
test
jl
sbb
lds
mov
jle
push
adc
(bad)
cmp
ret
cmp
jg
lea
xlat
lock
jb
das
or
inc
xor
test
jno
mov
hlt
sbb
scas
int
inc
xor
jmp
daa
and
scas
std
mov
xor
add
jg
pop
pop
pop
mov
pop
pop
pop
xor
jne
mov
or
add
rcr
mov
jno
mov
fdivr
push
push
and
and
cmp
scas
setae
cs
or
adc
adc
xor
js
dec
cmp
or
ret
je
mov
or
rcl
retf
ret
mov
push
inc
push
add
addr16
mov
or
sub
icebp
cmp
dec
or
mov
mov
int
(bad)
nop
and
mov
xor
rcl
sub
test
nop
inc
and
mov
adc
dec
not
jb
inc
out
add
shl
fisttp
popa
mov
mov
or
ret
inc
pop
loop
imul
pop
add
or
rol
ret
addr16
ret
sbb
xor
adc
push
sbb
inc
out
cmp
test
imul
push
retf
es
or
loop
pop
not
cmp
(bad)
(bad)
call
cmp
je
mov
cmp
je
push
mov
mov
mov
mov
push
neg
sbb
push
add
icebp
out
mov
sbb
xor
pusha
pusha
add
xor
add
dec
nop
std
or
and
xor
loope
ja
mov
aad
in
(bad)
out
mov
pop
or
push
push
call
xchg
(bad)
int3
add
stos
inc
arpl
inc
pop
dec
lahf
or
add
mov
pop
adc
mov
sar
jne
loope
add
jne
cmp
jne
(bad)
call
inc
and
jne
mov
mov
out
(bad)
jle
cmp
jne
mov
mov
cmp
fs
sbb
cld
mov
pop
xchg
mov
mov
iret
mov
jge
mov
fld
inc
(bad)
sar
aas
mov
pop
cmp
jg
mov
lods
shl
mov
fadd
dec
adc
push
or
adc
jg
not
and
shr
std
xor
cmp
jne
adc
jne
add
outs
outs
cmovl
mov
ret
fs
add
pop
mov
shl
repz
push
push
sub
sahf
adc
fist
rol
add
mov
ja
sub
test
aad
inc
icebp
cmp
mov
dec
mov
pop
and
xor
mov
cmp
ja
ja
jmp
(bad)
fild
je
mov
mov
inc
mov
mov
cld
dec
or
inc
sbb
cmc
mov
inc
cmp
mov
je
mov
ins
and
inc
sbb
dec
add
jb
(bad)
dec
adc
jmp
cmp
jbe
and
mov
push
add
pop
repnz
sub
test
add
add
leave
mov
mov
inc
mov
mov
mov
mov
xor
and
mov
mov
rol
rcl
(bad)
jmp
ja
add
pop
and
fld
repnz
jne
pop
fwait
mov
sbb
dec
adc
pop
jno
inc
mov
or
sbb
sti
cmp
jne
enter
xchg
ins
add
add
pop
ds
and
adc
dec
add
ret
ror
adc
dec
or
or
add
(bad)
pop
dec
cmp
add
mov
scas
sub
pop
dec
arpl
add
fistp
mov
shl
jae
push
mov
push
inc
mov
dec
mov
push
add
aaa
cld
fsubr
lds
dec
inc
mov
cmp
ror
rol
jne
loop
add
xor
cmp
and
cmp
or
sbb
dec
jg
or
int3
cmp
outs
dec
xor
xor
loope
rol
test
cmps
cld
mov
rol
jns
add
icebp
jne
cmp
jbe
rcr
ret
imul
inc
add
pop
outs
jo
sar
shl
mov
xchg
cmp
mov
or
loope
sbb
inc
inc
inc
sbb
or
push
dec
addr16
mov
cmp
xchg
cmp
or
xor
data16
in
adc
or
sub
mov
and
pop
xor
dec
or
dec
xor
push
push
pop
imul
sbb
pop
inc
sbb
and
pop
add
pop
pop
pop
adc
dec
sbb
add
push
and
ficom
mov
mov
xchg
add
mov
mov
mov
(bad)
mov
pop
sbb
call
aam
add
loop
cmp
or
or
iret
and
out
cmp
add
les
xchg
fdivp
dec
and
sti
mov
push
ret
jb
mov
clc
(bad)
jg
loopne
jl
add
aad
fcmovb
loop
add
popf
jecxz
ret
add
or
add
add
inc
push
cmp
repnz
push
cmp
nop
cmc
div
clc
cmp
nop
inc
stc
cli
sti
in
inc
push
cld
std
inc
add
cmp
add
dec
jne
(bad)
jmp
retf
stc
dec
jne
mov
xor
mov
div
mov
mov
or
fisttp
ds
fild
mov
pop
shl
pop
or
xchg
push
sub
push
lock
je
out
es
push
rcl
add
add
cwde
cli
sar
sub
mov
mov
add
inc
ror
mov
add
push
imul
add
iret
cmp
mov
push
pop
aam
mov
and
push
leave
sbb
xchg
cdq
es
and
xor
jg
lea
mov
ja
inc
stos
add
das
mov
adc
mov
xor
mov
xor
mov
outs
neg
inc
cmp
mov
cli
add
fimul
mov
nop
cmp
sbb
sbb
mov
sbb
mov
mov
add
mov
mov
cmps
adc
and
adc
ret
push
retf
pop
aad
cmp
lock
je
mov
jg
add
stos
adc
push
push
jg
dec
popw
add
push
push
push
xor
icebp
(bad)
outs
and
push
ss
or
inc
pusha
mov
scas
add
ja
cmc
sub
inc
push
pop
(bad)
adc
push
adc
out
imul
mov
jl
mov
fnstsw
or
leave
push
bound
mov
mov
dec
or
repnz
or
add
xchg
mov
jbe
xor
pop
or
mov
dec
push
mov
sbb
(bad)
mov
or
or
push
loope
ds
nop
push
mov
mov
(bad)
cmp
sub
lea
push
push
add
scas
(bad)
arpl
fadd
push
(bad)
ds
push
add
push
rcr
je
cmp
jae
add
sbb
fcomip
pop
push
jmp
push
jmp
add
or
adc
clc
mov
in
or
inc
and
inc
adc
push
icebp
sbb
not
mov
adc
add
pushf
iret
stos
and
ret
lds
xlat
jo
adc
and
adc
push
jae
push
or
push
adc
ror
into
cwde
cmps
stos
push
push
(bad)
xor
or
mov
iret
lods
mov
cmp
inc
inc
pop
pop
jno
std
clc
cli
call
adc
jo
test
add
test
pop
add
stos
fld
into
mov
test
mov
test
jbe
mov
add
dec
(bad)
into
or
and
test
ja
jnp
sbb
pop
cmp
sub
xchg
mov
je
not
shr
and
jmp
or
or
shr
push
je
and
inc
imul
(bad)
jo
cmp
mov
adc
add
xchg
or
jmp
test
stos
call
add
or
add
add
neg
xor
pop
mov
les
push
xchg
dec
jmp
shl
or
sbb
or
add
mov
test
shl
sar
pop
setne
mov
pop
push
rol
pop
sub
xor
dec
jmp
test
jns
jmp
dec
inc
scas
xor
ja
mov
inc
adc
or
push
mov
mov
call
sub
mov
jg
push
and
mov
icebp
dec
jl
inc
sub
shl
mov
cs
inc
outs
mov
mov
jl
mov
xor
xchg
mov
fsubr
xchg
mov
sub
and
add
cld
aaa
sub
add
rcl
fwait
and
mov
je
sahf
mov
and
or
xchg
lahf
fld
add
sbb
add
adc
mov
pop
add
cmp
mov
sbb
(bad)
push
jmp
imul
add
shr
mov
mov
sub
and
push
push
inc
cmp
shl
inc
lods
stos
lea
stos
cmp
sub
or
push
mov
inc
xchg
inc
push
inc
gs
je
or
cmps
sub
retf
mov
mov
push
jmp
push
pop
sub
push
pushf
pop
ret
test
je
push
out
mov
add
mov
jecxz
or
cmp
cli
ja
pop
add
les
jne
sbb
push
add
jmp
in
cld
fstp
jle
lea
mov
xor
push
xchg
sub
push
and
jle
push
mov
mov
mov
mov
mov
fadd
(bad)
ret
push
shl
and
jmp
mov
add
(bad)
sahf
sub
ja
cmp
inc
sti
(bad)
std
pop
test
je
cmp
mov
je
mov
push
sti
add
cmp
je
es
movs
pop
pop
popa
and
or
push
pushf
sub
cmp
in
shl
loop
adc
sbb
sub
and
adc
adc
jg
sub
add
test
pop
(bad)
or
pusha
xor
ja
addr16
or
push
push
lds
scas
test
pop
push
xor
jae
jno
outs
inc
nop
or
cmove
bound
clc
cmp
je
retf
mov
outs
jmp
add
xchg
jmp
mov
pop
outs
stos
xchg
test
adc
and
dec
test
push
lea
mov
add
xchg
sub
mov
(bad)
std
push
aad
or
mov
ror
retf
sbb
sbb
cmp
adc
add
push
push
jo
xchg
add
lock
mov
inc
mov
test
mov
adc
adc
jne
add
ins
and
cmp
je
test
je
lock
xor
xlat
xor
pop
pop
pop
ret
adc
and
sbb
and
and
fimul
push
sar
clc
mov
xchg
jle
add
xchg
adc
clc
xchg
sbb
sub
retf
adc
ror
pop
mov
(bad)
add
cmps
mov
cld
adc
adc
out
xchg
movlps
or
push
push
push
mov
stos
jle
in
mov
lock
or
pop
ret
pop
adc
lds
add
mov
sti
inc
and
push
fidiv
arpl
mov
cdq
and
in
dec
push
addr16
jl
fadd
dec
ins
test
jne
mov
inc
and
sar
push
(bad)
adc
bound
shl
push
fst
push
loope
adc
les
and
xchg
push
and
add
push
sbb
ins
mov
push
les
dec
xor
add
ret
ss
push
jb
add
push
por
movs
jmp
adc
(bad)
adc
inc
das
xor
fwait
sub
leave
inc
cmp
sbb
push
sar
dec
and
and
push
shr
or
mov
out
or
or
js
je
adc
ins
cmp
je
data16
call
mov
push
adc
jg
lods
dec
or
push
push
mov
in
test
mov
or
shl
push
or
sbb
sbb
push
add
push
or
out
mov
pop
add
(bad)
aaa
add
shl
and
xchg
pusha
pop
call
icebp
mov
xor
sub
push
sbb
xor
add
xchg
nop
nop
sub
mov
mov
mov
mov
test
add
dec
add
mov
popa
or
daa
cmp
jae
inc
cmp
push
out
and
add
loop
leave
das
inc
sub
pop
pusha
(bad)
mov
jecxz
sbb
cmp
and
xchg
jne
xor
into
ins
pop
adc
outs
sub
mov
ja
sub
xchg
les
(bad)
xor
mov
cmp
jae
mov
test
je
inc
cmp
jb
test
es
dec
xchg
or
fucomp
or
adc
and
push
in
(bad)
push
or
sar
and
adc
xchg
mov
mov
and
adc
sbb
sub
push
sub
push
lea
cmps
and
inc
inc
in
xor
sub
mov
xor
pushf
loopne
std
aaa
lods
xor
jne
and
mov
push
jle
push
add
and
mov
fwait
jge
repnz
lock
pop
fmul
sub
push
push
mov
sub
test
mov
mov
xchg
mov
xchg
xor
mov
test
pushf
xor
hlt
push
jo
xchg
and
adc
pusha
dec
popa
jmp
push
push
jecxz
add
and
mov
add
jecxz
jb
fdivr
push
push
add
xlat
(bad)
sbb
and
in
cli
add
adc
add
loope
mov
lea
movs
or
add
daa
popf
lea
inc
xor
push
shl
(bad)
add
xor
rol
(bad)
push
jl
and
push
xlat
sub
push
lea
aas
pop
add
out
test
dec
lea
sub
jg
jmp
push
mov
inc
mov
xchg
inc
add
sbb
outs
mov
(bad)
fwait
test
jbe
test
sub
adc
xchg
dec
icebp
sbb
xchg
mov
mov
adc
and
mov
icebp
cwde
js
and
pop
mov
popa
inc
pop
les
js
add
js
xchg
je
lock
push
push
dec
add
add
add
sbb
loop
inc
je
dec
mov
mov
xchg
rcr
push
push
jg
test
push
js
dec
jl
add
jo
test
jae
outs
lds
adc
jmp
mov
lea
cld
add
and
jb
xor
mov
sbb
dec
pop
push
sar
inc
add
pop
test
cmp
(bad)
xor
add
sub
fisttp
adc
and
arpl
cmp
jmp
mov
fwait
and
mov
jb
test
jno
mov
xchg
sub
adc
ret
je
pushf
pop
mov
lea
push
add
enter
cld
xchg
cmc
rcr
jmp
adc
jmp
nop
ret
pop
loop
das
add
push
mov
xchg
cmp
out
test
or
pop
psraw
mov
xchg
push
adc
mov
sub
dec
sbb
adc
dec
mov
push
cmp
ins
add
adc
or
fdiv
in
nop
push
cmp
je
mov
mov
inc
out
(bad)
pop
pop
call
or
ins
dec
mov
fild
push
jo
mov
push
arpl
std
inc
push
mov
sbb
pop
push
jmp
movs
clc
sti
jnp
add
sbb
js
inc
shr
sub
sbb
ds
inc
mov
je
daa
push
aaa
shl
mov
push
mov
inc
cmps
inc
arpl
aaa
iret
iret
push
push
sub
or
mov
xchg
mov
and
xor
add
out
fsubr
pop
inc
in
dec
mov
mov
add
sbb
or
mov
push
add
(bad)
popf
das
aad
adc
mov
sub
test
mov
jbe
sbb
mov
ret
sbb
inc
mov
sbb
inc
mov
aas
add
mov
enter
jbe
cld
pop
inc
div
shr
cmp
and
add
lea
push
ja
cdq
cli
outs
js
clc
jne
cmp
ja
add
xchg
xor
pop
add
ficom
pop
add
in
mov
pop
pop
pop
ret
(bad)
bound
pop
sbb
mov
adc
sbb
cwde
xor
or
(bad)
aam
cmp
jne
jmp
sbb
ds
push
int3
dec
cmp
push
stos
xor
jae
mov
push
ret
mov
dec
mov
jecxz
shl
lea
push
pop
add
sbb
ins
and
push
jne
es
pop
movs
dec
out
ror
sub
adc
cs
imul
cmps
push
adc
pop
dec
and
mov
test
mov
je
mov
inc
test
jne
inc
lea
cmp
jbe
push
xchg
inc
ror
sub
std
(bad)
dec
inc
neg
sbb
sub
and
add
add
xor
mov
mov
(bad)
add
push
push
cmc
cmp
out
cdq
cdq
sbb
and
inc
push
in
sbb
loop
paddusw
jnp
sub
push
or
add
xchg
jmp
sbb
mov
add
add
adc
jne
inc
mov
adc
js
or
jg
aas
mov
inc
jmp
or
shl
add
add
sub
int
push
adc
adc
push
fdiv
js
and
dec
cwde
adc
sbb
add
cmp
cmovne
test
mov
push
and
out
mov
adc
push
push
mov
push
add
or
ret
sbb
push
mov
shl
daa
mov
pop
add
mov
pop
xchg
inc
mov
dec
cwde
call
and
pop
or
jns
out
inc
(bad)
mov
imul
fisub
sub
pop
clc
aas
fdiv
sub
in
je
test
je
loopne
call
mov
or
xor
pop
adc
add
adc
mov
inc
cld
xor
mov
data16
mov
add
mov
ror
or
test
mov
sub
cmp
je
fwait
vpaddsb
inc
mov
sub
hlt
out
test
inc
and
shl
xor
jo
and
popf
jnp
pop
lds
xchg
mov
xchg
inc
and
shl
add
mov
cmp
seto
sbb
je
jne
add
ret
xor
mov
sub
or
ja
test
je
mov
loop
jae
cmp
mov
push
xor
adc
add
jmp
add
push
rcr
push
daa
add
adc
ficomp
mov
aaa
(bad)
and
dec
stc
xor
add
rol
aas
rcr
jne
mov
jne
mov
inc
nop
stos
test
das
add
add
add
push
cmp
je
leave
ret
dec
add
test
ret
pop
ret
clc
scas
ja
or
shl
add
sbb
dec
mov
jle
adc
jb
enter
(bad)
jg
aam
ja
or
sti
loop
pop
mov
cmp
je
or
call
cmp
jb
push
mov
add
xchg
pop
add
add
sub
pop
xchg
sub
add
xlat
push
pop
push
and
into
cwde
cmps
mov
add
mov
jmp
test
mov
jne
or
xor
mov
int
ror
mov
das
inc
and
and
jmp
cmps
xchg
hlt
mov
push
fwait
movzx
call
push
jl
ret
int3
add
test
je
sbb
and
adc
call
mov
adc
sbb
(bad)
lock
inc
in
cmp
sub
das
(bad)
jno
pop
xor
or
fs
retf
je
adc
shr
cmp
loope
mov
xchg
mov
shl
push
(bad)
ror
xor
add
and
std
add
rcr
sub
dec
dec
xor
push
or
or
ja
ja
pop
pop
add
test
je
ja
call
enter
mov
jae
pop
or
je
and
ins
test
xchg
sbb
jmp
in
or
xor
xor
and
cmp
je
(bad)
fnsave
jne
mov
je
and
ret
ins
imul
fwait
mov
je
sub
scas
fldcw
mov
or
dec
jno
or
call
and
je
dec
or
sbb
mov
add
inc
inc
add
int3
cmp
adc
int3
mov
push
jae
mov
sbb
pop
adc
dec
adc
jnp
pop
add
adc
shl
aas
mov
adc
sti
cmps
jl
in
add
push
cmp
and
lock
mov
and
xor
inc
add
pop
cs
or
loopne
fidivr
or
ret
sbb
out
adc
fwait
dec
fcom
xor
or
popa
out
pop
pusha
femms
repnz
push
repz
push
dec
or
jne
sbb
add
xchg
mov
add
xchg
mov
pushf
lods
push
cmp
je
sub
pop
lea
add
scas
mov
and
jb
ret
loopne
mov
mov
and
xor
xchg
cmp
and
xchg
push
fistp
lds
xchg
imul
leave
add
inc
mov
push
das
sbb
mov
je
(bad)
jg
loop
add
leave
jne
lea
cmp
ja
push
adc
xor
fild
add
add
shl
lsl
mov
fst
push
sbb
sub
(bad)
sbb
and
or
mov
or
sbb
jae
pop
dec
(bad)
(bad)
cmp
jne
jmp
cmp
or
jne
jmp
cmp
or
xchg
cmp
push
cmp
jne
cmp
je
push
jge
inc
push
add
loopne
cmc
inc
int
jl
adc
add
inc
push
jae
mov
xchg
mov
push
push
push
std
sbb
inc
mov
mov
cmp
mov
ja
mov
pop
or
jmp
cmp
ja
retf
add
xlat
jge
jmp
mov
sbb
add
mov
test
movs
sbb
pop
sub
scas
xchg
mov
mov
sub
lds
mov
or
or
fadd
sbb
lods
ins
and
push
adc
or
mov
inc
push
iret
shl
int
lea
push
push
jmp
pop
lds
test
lea
mov
pop
outs
dec
repz
leave
lock
pop
pop
sub
bound
pop
inc
aaa
ins
jbe
sub
stc
sbb
es
je
sbb
xor
ror
std
add
sub
pop
and
hlt
arpl
add
add
call
push
cmp
je
cmp
je
arpl
inc
cmp
cmp
push
push
mov
pushf
adc
pop
cmc
call
sar
cmp
pop
(bad)
aas
inc
mov
adc
inc
test
mov
xlat
jbe
fst
adc
loope
cmp
out
int3
outs
in
sbb
mov
adc
outs
cmp
clc
xchg
ins
and
jne
fwait
pop
leave
xchg
dec
mov
aas
jl
xor
mov
push
push
push
inc
add
push
test
xor
adc
add
(bad)
sbb
and
jne
(bad)
mov
scas
fwait
cmovae
sbb
cmp
je
les
mov
pop
cmp
ret
ret
fisub
rcl
int3
xlat
add
sub
aam
push
rol
pop
lahf
adc
shr
jne
mov
jg
xchg
mov
fist
ud2
aaa
inc
call
and
mov
test
sbb
ja
adc
or
adc
es
push
mov
iret
not
sub
push
lock
push
mov
sub
mov
xor
lea
jne
aam
cmp
xor
pop
push
and
mov
and
ja
mov
push
lea
or
test
jne
add
mov
dec
push
push
jmp
jne
lea
mov
mov
mov
test
cwde
dec
sub
inc
add
cmp
je
inc
or
mov
rol
cmp
mov
call
jb
add
dec
sub
inc
ret
pcmpeqw
xor
pop
add
sahf
jecxz
adc
push
xor
aas
and
jg
inc
xor
and
mov
iret
cmp
push
pop
(bad)
sbb
mov
cmc
inc
clc
pop
imul
sbb
test
jne
xor
jg
jg
mov
aas
inc
je
ins
and
push
adc
std
fadd
sub
lahf
adc
xor
lds
pop
add
and
inc
sbb
enter
mul
xchg
cmp
add
cmp
jb
clc
cmps
and
cmp
ja
jb
adc
aad
or
jnp
movs
mov
test
je
mov
or
(bad)
push
scas
add
inc
inc
add
or
adc
push
mov
std
or
pop
add
xor
push
(bad)
js
cmp
adc
sbb
sbb
cmps
sub
xchg
sub
sub
push
adc
test
lahf
and
mov
jmp
mov
je
add
jg
jg
sbb
sub
or
(bad)
outs
and
mov
mov
jbe
cmp
test
adc
aaa
movs
and
leave
or
xor
in
add
add
sub
into
scas
clc
ja
cwde
cmp
jae
mov
mov
adc
lods
mov
sub
and
pusha
push
push
cmp
mov
test
mov
jl
sbb
std
add
test
lea
dec
out
leave
add
fcom
add
xchg
pop
push
int
add
add
push
sar
xchg
sbb
sbb
jp
out
test
aaa
push
mov
fwait
outs
sub
mov
or
jnp
je
stos
or
jne
hlt
sti
(bad)
mov
push
add
mov
test
jbe
mov
mov
int
pop
xchg
(bad)
fisttp
xchg
adc
jg
mov
clc
jmp
retf
jo
in
add
and
in
jle
push
xchg
cs
and
shl
add
movs
mov
mov
ret
mov
xchg
jo
push
data16
ss
outs
inc
xchg
ins
add
inc
retf
or
gs
or
xchg
cdq
jnp
data16
sbb
push
ror
mov
in
or
or
add
daa
or
out
jmp
out
out
mov
adc
and
push
test
push
mov
push
push
mov
mov
and
or
cmp
mov
ror
cli
hlt
mov
ja
push
retf
lods
add
add
(bad)
sti
popf
ret
mov
fsubr
mov
sbb
mov
xor
pushf
inc
cmp
jae
mov
sub
push
cmc
adc
nop
or
ja
jg
push
lds
mov
xchg
mov
pusha
mov
and
and
add
add
je
es
sub
test
jbe
cmp
jl
and
mov
push
pop
pop
mov
push
push
cmp
sub
hlt
and
dec
mov
in
and
in
and
sub
and
inc
int
add
or
inc
aas
or
inc
sbb
jmp
out
jmp
mov
inc
test
add
mov
add
inc
push
mov
cs
inc
inc
xor
test
into
loopne
test
icebp
cmc
mov
test
inc
mov
xor
inc
fist
adc
inc
or
inc
add
inc
loopne
or
inc
ds
cmp
jne
mov
add
loopne
ds
or
xor
cmp
sbb
ror
ret
add
add
sti
mov
adc
lods
jmp
lods
sub
adc
test
jne
cmp
ja
sub
or
ins
and
jmp
cmp
jae
lea
push
push
test
xor
mov
and
inc
popf
or
mov
dec
test
xchg
jno
cmps
and
inc
adc
(bad)
neg
sbb
add
dec
mov
inc
add
call
adc
pop
push
or
out
ret
add
not
mov
cmps
push
test
fnsave
xor
add
jg
push
mov
mov
ret
(bad)
in
je
(bad)
fld
je
in
and
pop
fcom
xchg
shl
xor
ja
aad
dec
test
lea
xlat
jnp
push
call
jge
push
stos
dec
out
in
fistp
mov
cmp
jge
xor
aaa
add
push
push
pop
push
fcom
jmp
sub
push
mov
leave
sub
cmp
je
cmp
scas
mov
xor
cld
or
inc
popf
jl
pop
movs
loop
cmp
je
aaa
adc
mov
gs
sub
je
dec
je
dec
je
dec
mov
push
and
aad
out
dec
xor
lds
mov
xchg
adc
mov
pop
bound
jno
mov
lods
push
pop
dec
xchg
or
pop
push
(bad)
cli
mov
pusha
adc
jmp
jae
push
jae
fwait
(bad)
je
or
int
dec
jb
pop
(bad)
inc
adc
jo
xchg
push
data16
shr
adc
std
ja
mov
mov
add
scas
mov
mov
mov
jmp
out
out
mov
mov
pop
std
fiadd
jne
mov
inc
mov
in
lock
imul
jbe
sbb
push
pop
cmc
xlat
adc
and
mov
sub
mov
jl
push
adc
hlt
(bad)
(bad)
aas
jno
clc
inc
jl
cmp
jg
cmp
jle
cmp
jge
push
bound
push
xchg
out
or
shl
ds
arpl
ret
push
fist
bound
popf
mov
and
pushf
sub
adc
add
rcl
inc
mov
les
xchg
cwde
imul
mov
aaa
popa
push
shr
sti
or
mov
shr
imul
jmp
mov
xadd
dec
lds
je
push
jbe
mov
inc
adc
inc
aad
hlt
test
ins
and
adc
jg
je
sbb
inc
cmp
rol
jmp
mov
pop
push
lea
and
mov
jb
adc
jne
mov
add
loop
add
cli
add
(bad)
sbb
fiadd
push
ficom
hlt
xor
test
mov
push
and
cmp
jae
xor
adc
sbb
mov
test
je
(bad)
aas
inc
aas
shr
sub
mov
and
shl
mov
ror
jmp
adc
mov
shl
push
aam
mov
loopne
mov
test
pop
adc
movs
add
leave
jmp
aaa
inc
out
sub
pop
sbb
dec
call
test
add
jp
shr
xor
cmp
inc
mov
ret
lea
push
xor
mov
(bad)
es
push
jo
js
outs
sub
xchg
mov
sbb
test
in
inc
or
jo
and
push
or
cmp
enter
push
cmc
ror
mov
mov
cmp
lar
adc
std
inc
dec
jmp
test
je
push
aam
add
es
mov
add
(bad)
jmp
and
sbb
test
mov
mov
je
mov
sbb
push
lahf
jns
into
mov
shr
shl
and
xor
or
jmp
adc
adc
clc
mov
push
into
movs
sub
clc
xchg
je
jne
or
ret
mov
jae
sub
fadd
and
cmc
sbb
ror
in
mov
(bad)
fbld
test
jne
test
jne
test
jne
test
jne
mov
mov
sub
shr
xchg
mov
add
mov
xor
ret
add
jmp
lods
xchg
or
call
add
add
cmp
jbe
mov
sub
mov
mov
inc
dec
jne
jmp
jge
jbe
sbb
push
shr
push
push
add
inc
jmp
jbe
sub
cli
push
mov
ror
xchg
pop
pop
cmp
rep
pavgb
sbb
xchg
xchg
add
inc
enter
mov
mov
mov
or
and
ja
stos
mov
cmp
mov
mov
mov
mov
mov
jbe
mov
rol
fsubr
call
sbb
cmp
cmp
xchg
mov
out
xor
jbe
sbb
fldenv
adc
mov
and
ret
and
pusha
imul
xor
(bad)
sub
and
lea
inc
inc
xor
pop
enter
add
dec
and
push
mov
mov
shl
pop
and
and
or
mov
push
mov
xor
inc
test
push
je
add
test
inc
cmps
fisub
xlat
sub
adc
xchg
inc
cs
rol
mov
xor
xchg
add
mov
mov
dec
je
add
out
add
adc
jmp
pop
dec
scas
jmp
fld
jne
jbe
mov
mov
mov
lea
and
(bad)
ja
xor
rep
jle
(bad)
cmp
rol
das
jmp
shl
fadd
loope
sub
dec
repz
stos
jb
movs
and
mov
inc
(bad)
cmp
fisttp
(bad)
jb
push
sbb
cmp
fs
or
cmp
stos
dec
dec
inc
imul
lea
lea
shr
shr
cmps
jmp
inc
pop
and
je
or
or
sub
sub
(bad)
push
neg
neg
shl
shl
and
and
cmp
add
add
or
push
(bad)
jl
loop
bound
mov
mov
sub
ror
out
cmp
out
sub
adc
pop
adc
inc
adc
imul
(bad)
mov
mov
shr
mov
and
test
jle
mov
(bad)
(bad)
jg
fisubr
into
mov
sar
mov
and
mov
shl
or
cmp
icebp
aaa
cld
test
add
je
repz
pop
ja
int
jne
xchg
jnp
mov
js
cmp
jne
xor
and
popa
js
jmp
add
or
call
lds
or
jmp
sbb
add
in
add
sub
je
dec
inc
sbb
inc
push
or
sub
nop
jmp
lea
mov
pop
mov
ror
jne
jne
adc
icebp
or
pop
in
fcom
loop
out
sbb
adc
jbe
adc
test
mov
jle
push
and
add
call
call
aas
aas
add
sub
sar
mov
and
mov
es
jl
shl
or
fidiv
lock
adc
and
and
popa
pop
rol
and
jne
adc
and
(bad)
sub
cmp
sbb
enter
in
add
faddp
(bad)
out
add
pop
inc
pop
rol
jo
ret
pop
sbb
aaa
loope
aas
sbb
and
mov
ret
xor
fimul
adc
xor
daa
add
push
std
add
push
sub
shl
nop
jg
xor
icebp
jle
es
adc
and
jne
inc
ds
dec
push
xor
test
mov
push
xor
sbb
sub
fwait
call
pop
pop
add
mov
je
sbb
jno
arpl
inc
xchg
inc
test
jne
shl
add
fadd
add
scas
imul
xchg
mov
fld
push
xchg
push
stos
ja
mov
(bad)
fild
daa
mov
mov
clc
mov
or
mov
dec
or
dec
dec
or
or
sar
(bad)
(bad)
clc
add
enter
sbb
rcl
repnz
mov
sub
mov
add
mov
inc
dec
jne
sti
out
lds
add
push
xor
mov
jg
arpl
or
div
push
repnz
mov
xor
inc
inc
cmp
jb
(bad)
mov
xor
push
push
mov
mov
test
and
adc
fisttp
sub
inc
adc
out
mov
mov
shr
add
inc
jb
sbb
pop
test
jbe
loopne
shr
(bad)
mov
mov
(bad)
mov
ret
ret
sar
add
inc
mov
inc
dec
jne
cmp
jnp
xor
outs
cmp
dec
mov
add
mov
inc
lods
dec
and
mov
inc
inc
std
inc
cld
cmp
jae
push
push
mov
(bad)
(bad)
mov
sbb
ret
mov
sub
sub
test
jge
mov
neg
call
xchg
cs
in
jge
neg
add
(bad)
dec
fdivr
add
int
sar
sar
(bad)
xor
rcr
cmc
mov
mov
and
gs
jb
push
add
adc
dec
push
push
mov
sbb
lds
mov
sub
sbb
cmc
jae
(bad)
mov
push
mov
add
inc
mov
inc
cmp
jb
mov
test
add
dec
ins
and
jae
mov
fild
ror
mov
mov
sbb
sub
inc
sub
cmps
ret
sub
mov
call
int
loope
je
ror
inc
cmp
jb
arpl
and
and
push
push
jns
push
mov
xor
mov
mov
inc
cmp
cmp
adc
and
lahf
mov
jne
pop
sbb
fnstsw
mov
aad
add
mov
mov
sub
cmp
mov
add
cmp
jbe
mov
push
mov
sbb
fcom
fwait
(bad)
inc
add
sub
sbb
sahf
or
ss
sub
aas
xor
cmp
je
or
cmp
lds
call
and
sti
adc
aaa
mov
dec
push
xor
adc
or
push
jmp
mov
add
cli
mov
jp
rol
jmp
je
mov
adc
in
pop
xor
cld
add
idiv
jmp
xchg
cs
push
rcr
mov
mov
(bad)
xchg
mov
mov
ror
enter
je
ret
mov
inc
adc
ja
pop
jbe
push
fnsave
or
jmp
inc
pop
xor
xor
loopne
cmp
inc
mov
sub
cmp
dec
sbb
lock
push
inc
js
jne
push
imul
repz
out
mov
or
or
movs
mov
and
ret
jne
mov
popf
lock
push
xchg
mov
add
push
lds
xor
clc
fadd
mov
cmp
jb
cld
mov
test
adc
mov
push
mov
adc
sar
xchg
repz
jg
sub
dec
ror
pop
jae
mov
and
std
aas
adc
mov
xor
dec
xor
mov
mov
retf
aaa
sub
lea
div
test
mov
shl
rcl
out
out
mov
rol
mov
ror
mov
sbb
or
ret
jbe
xor
fistp
mov
pop
pop
jb
pusha
shr
mov
inc
xor
(bad)
std
mov
lds
ins
test
jne
mov
sti
jnp
call
int3
mov
ror
mov
ss
lds
xor
aas
fcmovnu
in
hlt
mov
inc
mov
out
or
div
test
addr16
jmp
fdivr
jo
scas
push
mov
add
push
ret
add
push
cmp
sub
inc
jg
mov
and
push
pextrw
pop
inc
pop
adc
mov
add
mov
jle
jmp
addr16
xor
aaa
sub
sub
shr
mov
or
cmps
jmp
test
je
test
je
add
or
push
and
mov
mov
mov
mov
pop
je
mov
dec
lock
jne
int
setg
jge
fild
jmp
ins
je
cmps
adc
and
inc
sar
add
mov
test
iret
jle
or
(bad)
test
jne
push
cmp
or
out
add
es
jg
sub
sub
loope
aaa
fnstcw
jmp
adc
dec
jmp
sbb
(bad)
mov
ret
loop
add
mov
dec
sub
(bad)
jg
clc
ror
jo
scas
retf
jle
inc
cld
jae
cmc
dec
pop
mov
mov
add
pusha
shr
or
scas
enter
pop
adc
jmp
adc
dec
int
inc
adc
lea
mov
add
dec
stos
loop
xchg
push
adc
(bad)
sub
jl
out
add
xchg
pop
xor
sbb
mov
jbe
nop
add
ror
and
or
mov
mov
and
sub
dec
mov
cmc
shl
(bad)
mov
imul
mov
inc
cwde
cmp
jp
or
nop
lods
stos
xor
cmp
pop
je
sbb
push
pop
aaa
mov
xchg
cmp
sbb
scas
je
pop
add
cli
pop
popa
inc
js
ret
(bad)
pop
pop
and
and
pop
mov
mov
loopne
dec
jl
leave
je
or
rcl
push
inc
or
loope
ret
mov
aaa
lock
jle
and
and
or
js
fcom
jl
lea
adc
sahf
add
pop
add
mov
mov
cmp
ja
popa
fdiv
or
ret
and
inc
in
and
pop
outs
sti
fild
popa
add
adc
inc
je
push
xor
mov
aas
inc
sub
inc
je
jne
push
les
or
mov
push
je
add
out
je
or
and
pop
add
mov
adc
iret
or
fld
and
push
push
adc
int3
sub
adc
adc
inc
add
jmp
xchg
add
jle
push
cs
xchg
push
call
aad
(bad)
rcl
clc
add
jmp
mov
call
in
mov
mov
addr16
(bad)
mov
test
add
jmp
mov
jb
and
and
sub
pop
cwde
fild
add
sbb
push
or
cmp
mov
pop
cmp
add
push
mov
dec
call
fistp
dec
lea
or
call
and
xchg
lods
mov
cld
ret
mov
mov
ret
daa
inc
jl
and
ret
(bad)
rol
add
xchg
xlat
sbb
test
dec
cmp
je
cmp
je
out
cmp
add
(bad)
push
or
call
jmp
add
add
js
int
mov
aas
xor
pop
shr
add
inc
clc
test
fild
or
cmp
inc
jl
pop
aas
adc
ds
popa
aas
adc
cmp
pop
mov
ret
in
dec
loopne
adc
js
xor
adc
mov
sub
jo
mov
jnp
aaa
jmp
dec
or
jmp
or
fs
inc
add
or
push
(bad)
fwait
xor
jl
(bad)
push
dec
(bad)
jl
lea
cmp
loope
mov
mov
add
loope
retf
jmp
or
shl
mov
retf
sbb
adc
jbe
test
push
push
add
jne
or
mov
jne
mov
pop
scas
add
out
in
or
cwde
add
push
inc
je
(bad)
shl
clc
popa
jl
sub
dec
push
push
xchg
rcr
push
aaa
sti
and
jmp
mov
std
and
test
je
sbb
aaa
add
test
dec
int3
sub
push
pop
mov
int3
and
add
lds
enter
mov
je
test
jne
and
stos
enter
xchg
push
mov
and
sub
dec
dec
outs
jl
and
stos
fdiv
pop
and
add
xchg
sub
je
or
jne
mov
(bad)
je
int3
or
test
je
test
je
or
mov
ds
cmp
cmp
sbb
mov
mov
or
or
mov
push
cmp
jne
ja
sbb
or
sar
mov
lds
mov
je
loop
pop
std
lds
jne
je
sub
out
imul
dec
std
shl
sub
xor
out
adc
mov
cmp
sbb
push
adc
aas
pop
test
test
je
test
jne
xchg
std
aas
idiv
jne
mov
imul
rcr
pop
xchg
dec
or
and
push
dec
lea
and
jp
call
js
push
or
push
or
cwde
rcl
mov
cs
xchg
xlat
jne
dec
sbb
outs
add
jl
sbb
and
test
je
mov
and
(bad)
es
add
(bad)
pop
mov
push
jecxz
(bad)
popa
or
add
pop
mov
cdq
push
je
in
push
movs
add
jne
or
pop
mov
mov
push
dec
xor
cli
push
jbe
ja
jmp
mov
fimul
inc
(bad)
(bad)
jg
and
lea
mov
mov
jmp
cmp
je
push
movzx
add
ret
dec
fisttp
jmp
or
(bad)
pop
inc
add
std
xchg
sar
ins
and
mov
test
pop
fwait
gs
xor
not
dec
push
jmp
cmp
cmp
cmp
xchg
mov
sbb
rol
pop
or
popa
inc
jl
jg
iret
out
mov
cmps
sar
dec
add
ret
hlt
jg
mov
test
je
inc
push
sar
push
dec
add
pop
mov
and
jbe
sub
or
mov
xor
jg
add
mov
ret
jl
xor
mov
jmp
mov
xchg
adc
push
and
push
stos
mov
mov
mov
mov
ss
(bad)
aad
adc
je
dec
je
dec
je
(bad)
cmp
dec
fist
xchg
pop
sbb
xor
xor
xchg
mov
jmp
pusha
pop
pop
rcr
dec
or
arpl
retf
jb
inc
xor
push
lea
add
mov
sub
int3
mov
add
in
xor
and
imul
or
jmp
mov
sbb
sbb
loopne
adc
addr16
stc
fidiv
rcl
mov
push
inc
mov
imul
jae
inc
inc
and
imul
and
jb
push
aad
or
inc
ds
xor
adc
sbb
rol
sbb
cli
jge
imul
cmp
jmp
or
lea
push
cmc
sar
and
mov
int
mov
pop
(bad)
aas
into
xor
mov
xchg
rol
add
mov
jg
imul
sub
data16
lea
dec
push
xchg
ror
pop
loope
jmp
or
mov
mov
dec
dec
adc
add
mov
xor
push
and
push
jae
adc
jmp
jge
in
adc
jmp
mov
out
pop
push
pavgb
mov
xor
mov
(bad)
cmp
int
ror
and
and
rol
ret
aad
(bad)
clc
jl
(bad)
and
sub
mov
int
mov
dec
je
jne
hlt
dec
je
push
test
mov
mov
inc
cmp
(bad)
in
push
push
rol
inc
leave
in
call
cmp
jnp
add
sbb
aad
add
fbld
sbb
shl
call
iret
lods
add
ins
jp
pop
cmps
ja
dec
and
xor
push
rcr
dec
out
cmp
adc
leave
(bad)
mov
jne
or
fsub
sbb
xor
shl
dec
into
je
sar
pop
js
mov
inc
add
jmp
push
mov
jmp
ja
jb
cmp
out
pop
sar
iret
lods
or
inc
inc
addr16
add
sbb
fisub
dec
push
fdiv
shl
push
sub
push
or
fstp
push
mov
push
xchg
dec
and
test
jmp
aaa
jne
add
push
push
pushf
cmp
add
push
cmp
ror
(bad)
xor
(bad)
mov
adc
mov
mov
cld
adc
nop
jecxz
pop
dec
mov
adc
jne
dec
jbe
mov
pop
test
je
test
jg
test
add
scas
pop
xor
mov
mov
adc
add
sbb
dec
sub
and
test
sub
cmp
jge
test
jle
xor
mov
(bad)
push
lock
movs
mov
shr
add
inc
in
xor
mov
push
cmp
jl
jmp
fld
sti
or
xor
xor
mov
retf
add
add
lea
add
dec
jne
xor
xor
sbb
mov
add
sbb
sahf
sbb
inc
mov
add
inc
iret
sub
or
mov
and
xor
mov
(bad)
push
or
dec
jne
cmps
sbb
add
jmp
xor
test
jbe
mov
pop
(bad)
clc
div
rol
mov
inc
mov
push
xor
inc
cmp
jl
mov
jl
jo
and
(bad)
fwait
(bad)
mov
jo
jne
and
jl
push
jl
mov
pop
cmp
push
(bad)
adc
mov
leave
mov
jg
or
add
test
xor
mov
jo
push
push
in
add
push
or
(bad)
jle
dec
add
mov
sub
add
and
and
nop
mov
(bad)
dec
jmp
rol
iret
mov
jl
call
dec
mov
jecxz
jle
rol
cmp
aad
push
fcom
sti
jle
ja
and
div
add
ror
adc
add
(bad)
push
mov
rol
test
push
scas
xor
inc
leave
add
hlt
xchg
cmc
xor
dec
fbld
je
dec
je
sub
jne
mov
loop
sar
fxch
inc
retf
(bad)
lea
adc
lea
jmp
out
ja
call
(bad)
or
ror
add
add
or
jle
adc
das
jne
push
str
aas
push
or
sbb
pop
ret
out
or
or
inc
jl
lds
add
dec
sbb
xchg
jg
jg
mov
inc
push
sbb
and
add
mov
mov
movs
mov
push
(bad)
mov
adc
daa
movups
add
arpl
leave
add
cmp
jae
dec
mov
jl
xor
mov
je
lea
cmc
cmps
or
(bad)
(bad)
inc
aad
mov
adc
sbb
shl
mov
ins
rol
stos
add
dec
mov
fist
aas
inc
je
or
and
add
sbb
stos
clc
push
inc
je
mov
cmp
je
cmp
jne
mov
mov
or
jbe
(bad)
push
add
or
add
je
std
fwait
lds
mov
test
mov
jmp
sti
(bad)
jbe
sbb
je
and
data16
(bad)
out
sub
inc
sbb
lds
shl
push
sbb
out
ret
pop
cmp
add
add
inc
fcos
(bad)
aas
adc
je
mov
mov
cmp
jae
mov
mov
mov
or
loop
ret
sbb
cmp
mov
jb
pop
rcr
and
mov
mov
sbb
push
imul
add
add
lods
sbb
fnstsw
aaa
mov
mov
loopne
mov
dec
adc
inc
jne
push
jl
adc
cmp
es
or
jne
fs
sub
mov
push
inc
push
sbb
pop
add
jmp
mov
lock
xor
add
je
inc
pusha
sub
(bad)
out
inc
push
push
jmp
leave
les
inc
dec
pushf
sub
jne
mov
cmp
rol
pop
call
push
inc
fild
mov
pop
pop
or
adc
ins
sbb
inc
mov
push
mov
and
cmp
mul
adc
mov
and
loop
stc
sbb
push
in
jmp
bound
sbb
mov
test
jne
lods
jecxz
pop
push
or
les
test
(bad)
out
mov
in
push
(bad)
out
or
and
and
or
pusha
add
test
je
push
jne
int
jbe
js
jne
je
adc
push
(bad)
dec
cmp
pop
je
les
push
ret
push
test
adc
jbe
add
mov
ret
pop
(bad)
sti
dec
sub
add
cmp
fcomp
cmps
sbb
add
xor
sti
cmp
rol
mov
outs
xor
adc
adc
or
mov
add
push
mov
push
mov
or
sbb
lea
add
(bad)
nop
sbb
mov
push
cmp
lods
adc
xchg
test
adc
jl
or
xor
fiadd
pop
xor
cmp
fadd
add
and
pusha
loopne
aas
xor
js
xor
push
enter
dec
jg
fdivp
adc
mul
or
add
fadd
(bad)
mov
add
sbb
sbb
pop
mov
mov
jo
std
scas
cld
or
inc
jo
shr
or
rcr
mov
imul
daa
inc
or
xor
sub
pop
mov
push
lods
inc
or
scas
pop
and
mov
pop
mov
mov
jae
sbb
push
push
push
mov
dec
push
je
ret
add
popa
sub
sar
(bad)
mov
dec
shr
shl
add
lea
mov
mov
add
sub
test
jbe
and
mov
mov
shr
mov
adc
and
cmp
fs
add
jl
dec
push
sbb
loopne
and
cmp
out
add
loopne
test
sti
push
jbe
mov
push
add
xchg
push
add
dec
dec
jne
jmp
out
(bad)
fistp
mov
and
shr
add
lea
mov
xchg
pop
xor
add
dec
jg
in
adc
inc
or
enter
add
scas
(bad)
pop
jle
jmp
mov
mov
add
sar
and
cmp
je
adc
ror
je
cmp
sbb
mov
fimul
fisubr
sbb
sub
mov
add
mov
sub
pop
sbb
add
xor
push
add
fimul
sbb
xor
mov
mov
mov
add
adc
es
fwait
cli
aaa
mov
inc
and
mov
mov
and
cmp
jge
mov
or
cld
add
xor
rol
and
pop
add
jnp
add
cmp
push
mov
xchg
in
pop
test
jmp
adc
sub
cmp
movd
(bad)
aas
push
mov
shr
and
mov
inc
cmp
jb
inc
add
push
mov
sub
gs
sar
add
mov
shl
add
push
std
or
cmp
jae
adc
sub
sub
jmp
fidivr
sbb
(bad)
jb
inc
je
sub
lock
(bad)
xor
cmp
jae
mov
xor
shr
inc
cmp
jl
mov
ja
push
inc
cmp
jb
je
(bad)
fild
clc
xor
cmp
jae
pusha
leave
mov
mov
ja
jmp
mov
sar
inc
cmp
cmp
mov
or
or
(bad)
jb
lea
adc
cmp
inc
icebp
fwait
cmps
xor
add
add
and
inc
mov
jg
mov
adc
or
dec
add
mov
add
push
cmp
loopne
add
mov
jae
push
add
mov
inc
sub
add
(bad)
mov
shl
sub
sar
add
inc
mov
inc
cmp
jb
pop
mov
ja
ret
add
inc
pop
dec
or
mov
add
fld
or
push
add
enter
mov
cmp
jae
mov
js
or
shl
mov
xor
mov
cmc
add
push
inc
add
push
mov
mov
cmp
jne
iret
mov
dec
dec
mov
stc
or
add
test
mov
jbe
push
dec
ja
dec
mov
dec
mov
add
jne
pop
pop
ret
sub
pop
adc
sub
sub
pop
sub
sub
or
push
sub
in
ret
stc
add
pop
lea
pusha
jbe
pop
pusha
scas
sti
cmovns
mov
mov
jle
xor
es
push
test
fdiv
push
ins
je
test
or
add
test
jbe
mov
or
sub
sub
dec
mov
jne
cmp
mov
retf
ror
adc
mov
sub
sub
dec
mov
add
leave
pop
rol
add
fnstenv
cmp
cmp
adc
jmp
push
cmp
mov
jbe
and
mov
xchg
lods
scas
test
jle
mov
and
mov
shr
test
lea
(bad)
ja
popa
xchg
jne
test
std
sbb
(bad)
(bad)
push
je
cmp
jbe
lea
dec
dec
mov
mov
dec
dec
mov
jne
add
mov
mov
cmps
dec
add
inc
or
mov
and
jnp
dec
dec
mov
scas
aas
mov
daa
push
and
adc
test
jge
aas
jmp
xor
lea
je
sbb
imul
dec
mov
push
test
push
dec
mov
add
add
bswap
popa
ja
sbb
jmp
cmp
mov
inc
xor
dec
dec
mov
jne
aaa
sbb
leave
add
cmp
mov
mov
test
add
je
add
cmp
fidiv
lea
jbe
xchg
xchg
pop
xchg
loope
in
xchg
add
xchg
add
test
ds
pop
add
test
cmp
cmp
xchg
out
xchg
ss
push
or
in
div
outs
and
test
lea
lea
pop
push
mov
jae
jbe
mov
pop
push
clc
loopne
cwde
or
lock
inc
aaa
dec
out
fdiv
push
jecxz
test
or
daa
push
and
xchg
(bad)
dec
or
out
cmp
gs
test
jne
add
xlat
outs
sbb
stos
(bad)
fucomip
sbb
dec
inc
cld
xlat
jne
icebp
sbb
arpl
jne
(bad)
pop
push
dec
jecxz
leave
sub
(bad)
out
pop
outs
mov
xchg
pop
sub
jo
arpl
aas
in
outs
ret
jmp
cmp
jne
jb
inc
jno
arpl
fwait
cmp
sub
out
and
mov
lahf
mov
mov
fdiv
pop
ins
xor
scas
or
lahf
pop
push
mov
or
ret
(bad)
shr
clc
mov
mov
push
jmp
or
or
jnp
adc
jno
inc
inc
pop
je
sub
leave
mov
add
push
add
jb
fild
cmps
push
push
push
jl
xor
push
pop
sub
adc
mov
sub
jg
icebp
inc
inc
and
mov
sub
cmp
mov
sbb
rol
add
xor
test
adc
rcl
mov
pop
ja
mov
jbe
sub
dec
push
and
inc
mov
mov
or
and
push
cli
mov
jne
cmp
jne
mov
loopne
shl
sub
push
jp
mov
inc
jmp
jb
(bad)
rcl
push
into
add
sar
(bad)
cmp
scas
lds
out
mov
mov
imul
mov
fisttp
pop
inc
sbb
adc
lea
sti
cs
xchg
retf
shr
inc
outs
inc
fst
mov
mov
jp
aam
jl
jmp
stc
iret
sbb
adc
lock
out
and
or
inc
mov
mov
or
or
hlt
jmp
cmp
jne
cmp
je
push
adc
mov
cwde
dec
fisttp
scas
push
and
imul
ror
mov
adc
fild
adc
scas
aad
iret
add
retf
jmp
push
jg
inc
test
je
test
hlt
inc
pop
adc
and
and
test
sbb
fiadd
leave
mov
mov
or
mov
jmp
rcl
cmp
xchg
mov
aas
adc
mov
mov
add
test
mov
fdivr
inc
add
add
repnz
and
cmp
ds
cmp
jne
mov
enter
push
mov
aas
push
mov
js
out
(bad)
fneni(8087
jbe
or
mov
xchg
in
loop
mov
shr
mov
in
add
in
sar
fsubr
or
cmp
cdq
sub
mov
mov
mov
imul
std
shr
cmp
adc
xor
mov
jmp
(bad)
fist
mov
add
shr
shr
jmp
aas
ret
pop
adc
pop
sub
test
jmp
jle
lock
add
mov
jmp
mov
adc
dec
std
les
and
inc
mov
mov
mov
push
(bad)
mov
inc
test
cmp
mov
mov
inc
inc
sbb
adc
and
add
(bad)
sub
dec
push
mov
cmp
inc
dec
add
out
sbb
das
mov
add
add
inc
add
cs
ja
retf
cmp
je
leave
adc
cmp
test
leave
(bad)
xor
jno
and
scas
int
jae
xor
xor
(bad)
mov
inc
mov
ja
mov
or
out
fist
mov
inc
inc
stos
cmp
cmp
test
pop
xchg
or
pushf
cmp
or
and
cli
inc
or
outs
or
pop
or
inc
push
call
mov
lds
add
mov
rcr
mov
mov
pop
add
pmullw
pusha
jg
xor
shl
mov
js
or
jge
mov
gs
xchg
pop
add
adc
mov
inc
test
and
and
shr
test
mov
sbb
xor
and
xlat
(bad)
fwait
push
and
xchg
inc
pop
inc
add
in
retf
pop
or
cmp
ja
js
shl
ficomp
jmp
iret
test
add
leave
jbe
xchg
fcmovbe
jmp
aam
mov
xor
and
mov
cmp
inc
dec
sbb
sti
mov
and
mov
jg
loop
pop
test
jne
dec
scas
adc
inc
jmp
dec
dec
jne
cmc
dec
ja
jmp
xchg
sti
test
mov
or
sar
mov
mov
mov
jno
std
xor
sar
and
mov
jmp
and
rcl
out
or
aas
fldenv
add
mov
and
and
(bad)
cli
(bad)
loop
enter
add
shr
mov
sti
arpl
mov
jne
test
add
rol
mov
sbb
test
mov
jmp
or
sti
out
lea
push
and
add
mov
cwde
ror
loopne
xor
stos
add
xchg
or
adc
mov
inc
fild
mov
fld
jb
out
cmp
and
enter
mov
mov
add
enter
push
fisttp
mov
lahf
popa
fdiv
test
pop
jbe
push
xor
xchg
push
outs
test
cmp
jae
inc
cmp
jle
call
xchg
xor
sar
(bad)
test
mov
mov
cmp
rol
xor
mov
mov
inc
data16
xor
dec
jne
mov
sbb
(bad)
movzx
cmp
inc
dec
jne
cli
lahf
inc
add
ret
test
je
mov
push
mov
jbe
xor
dec
cmps
mov
add
xchg
and
mov
ffreep
out
dec
adc
shr
outs
dec
add
pop
add
dec
or
mov
mov
add
dec
jne
cdq
sub
adc
js
in
(bad)
push
xlat
mov
xchg
adc
psubq
mov
add
dec
jne
inc
cmp
inc
adc
call
jne
icebp
loope
sub
or
and
into
xor
(bad)
lods
xchg
jne
xlat
in
and
or
or
in
and
dec
inc
add
stos
mov
mov
sbb
sbb
lds
dec
xlat
or
or
jnp
loop
out
fadd
lea
xchg
xchg
scas
push
jle
push
xchg
pop
inc
mov
xchg
jle
mov
(bad)
cmp
mov
out
dec
and
add
and
addr16
push
in
jecxz
call
call
shl
jmp
lahf
jae
in
add
xlat
lea
xor
pop
addr16
aaa
xchg
in
adc
jmp
mov
sbb
es
lahf
jo
add
dec
add
imul
cld
ja
daa
dec
mov
mov
mov
shr
es
dec
or
es
aaa
je
fst
leave
mov
mov
and
fsub
and
cmp
add
aad
mov
dec
pop
fbstp
dec
jne
sar
vmwrite
mov
(bad)
fmul
cmovae
ror
push
push
push
je
or
vmread
cs
jne
push
inc
sbb
cdq
cmps
jb
js
setnp
adc
(bad)
add
push
add
test
mov
or
and
and
or
and
cmps
call
cmp
aam
loope
push
pop
xor
(bad)
clc
adc
inc
jne
aaa
xor
pop
mov
mov
jmp
or
push
data16
xor
mov
add
mov
sub
imul
sbb
scas
ror
and
movs
and
fcmovbe
lahf
add
clc
or
in
adc
or
pop
mov
or
pusha
loopne
pop
jnp
inc
pop
or
mov
test
jne
lods
jmp
or
cmp
jae
scas
sbb
ror
scas
fmul
xchg
dec
or
enter
mov
add
dec
jne
or
jmp
pushf
cmp
rol
sti
add
pop
jle
pop
lea
loop
sbb
and
mov
add
int3
adc
sbb
cmp
imul
sbb
hlt
cli
push
nop
dec
dec
lock
popf
in
cmp
mov
mov
jmp
pop
mov
hlt
or
sbb
push
dec
cmp
nop
mov
add
sub
loop
scas
ror
rol
adc
add
push
jg
test
je
adc
ret
call
repz
pop
jne
sbb
or
xchg
inc
lahf
int3
mov
mov
jb
jns
mov
adc
cmp
xlat
lock
test
or
inc
or
dec
and
sbb
sbb
add
mov
iret
sbb
shl
add
imul
lea
dec
out
add
add
inc
cmp
prefetch
lea
fld
mov
mov
sar
xor
dec
add
(bad)
ja
sub
dec
lods
fs
mov
test
jne
call
movs
mov
jle
inc
inc
icebp
and
sar
(bad)
mov
in
add
cli
fisttp
mov
jmp
fisttp
sbb
test
jb
punpckhbw
push
add
aam
pop
les
xchg
adc
push
ret
adc
pop
dec
dec
into
dec
mov
mov
mov
add
xlat
stos
dec
push
pop
ror
shl
push
and
jo
push
jae
dec
add
js
(bad)
sbb
aaa
mov
mov
popa
add
rol
inc
or
push
test
loop
dec
jnp
fst
loope
aaa
cmp
mov
sub
jle
sub
imul
stos
out
lea
aas
dec
mov
shr
add
sar
imul
xor
cmp
cmp
sbb
mov
(bad)
js
imul
lea
stos
sub
or
aaa
(bad)
mov
sub
pop
xor
jb
sub
mov
js
mov
aad
cmc
inc
and
cmp
xchg
fsubr
fs
add
cmp
jg
xor
mov
mov
adc
mov
mov
shr
jo
push
(bad)
lahf
dec
mov
mov
add
rol
dec
add
push
add
mov
mov
mov
cwde
add
fs
sbb
cmp
je
add
jno
sub
mov
aad
xor
jne
xchg
lds
fmul
jne
pushf
loope
sub
xor
add
loope
ret
or
dec
mov
push
dec
add
out
aam
hlt
push
xor
shr
add
and
test
jne
ds
and
and
fs
daa
jmp
imul
mov
or
sbb
xlat
lds
fistp
frstor
xor
xor
cs
or
and
add
pop
push
xchg
sub
pusha
cmp
add
movs
xchg
push
rcl
imul
shl
ret
dec
mov
mov
repz
ret
rcr
or
or
dec
adc
mov
sub
jnp
jne
add
rol
(bad)
jns
jne
jo
mov
(bad)
scas
js
dec
push
ins
stc
test
jne
pusha
add
pop
pop
push
loope
ror
addr16
into
mov
in
xchg
push
xor
inc
imul
or
ja
xor
shl
mov
test
fst
(bad)
ror
mov
jecxz
pop
sub
sbb
imul
imul
adc
je
or
or
shl
fidivr
jbe
in
dec
add
pop
push
add
adc
jg
scas
(bad)
sbb
cmp
movs
cmp
pop
dec
add
ds
add
jo
in
loope
jp
aad
loope
outs
sbb
dec
jne
dec
jg
in
inc
mov
inc
add
pop
inc
add
pop
add
fld
inc
add
sbb
stc
inc
add
cli
inc
add
add
test
sub
aaa
aad
lock
ja
mov
mov
mov
push
mov
mov
je
sbb
cmp
push
adc
mov
push
neg
inc
jne
add
add
pop
add
out
out
sbb
xchg
jmp
aaa
inc
mov
and
adc
ficom
inc
dec
pop
dec
loopne
dec
push
jne
stos
adc
lods
sub
xor
cmp
aam
add
loop
mov
rsqrtps
mov
sub
cmp
and
mov
push
add
fwait
clc
push
sbb
jne
xchg
aaa
mov
push
mov
mov
fistp
push
inc
(bad)
jne
ds
mov
int3
lds
stc
mov
sub
xchg
cmp
out
pop
pop
add
and
out
lods
add
lock
xchg
mov
enter
dec
or
xor
pxor
stos
das
jmp
add
clc
or
shr
mov
(bad)
fild
mov
and
mov
mov
lea
add
(bad)
(bad)
fiadd
add
std
add
fld
and
cmp
adc
fadd
fadd
call
cmp
shr
or
mov
sar
or
inc
add
or
shr
mov
and
pop
rol
clc
add
or
push
je
sub
loope
or
scas
adc
mov
(bad)
sub
sbb
scas
mov
out
mov
sbb
and
pop
or
inc
rcl
jno
shr
(bad)
out
(bad)
fwait
xor
loopne
and
sar
or
mov
mov
jg
jmp
add
loope
stos
shr
or
mov
inc
dec
jne
or
inc
jne
test
jbe
mov
mov
jne
cmp
jne
push
das
mov
adc
data16
jbe
in
jae
jge
or
popa
xor
pop
jns
add
pop
mov
inc
add
inc
das
cmp
or
push
mov
push
mov
test
cmovge
mov
jmp
mov
inc
fld
add
adc
pop
inc
pop
fadd
dec
add
jbe
xchg
(bad)
adc
add
dec
pop
cmp
aas
ret
cmp
jne
mov
push
dec
and
fiadd
loopne
call
(bad)
jbe
mov
lock
inc
movs
or
lahf
movs
adc
or
adc
aaa
cld
add
dec
jne
pop
inc
ret
push
out
inc
xor
add
adc
cld
ja
aas
or
inc
or
jne
lock
movs
sbb
jae
cmp
dec
je
push
cmp
cmp
aas
fdivr
(bad)
dec
loopne
add
shl
test
lea
xchg
lock
mov
popa
dec
jmp
loopne
mov
pop
fild
std
outs
lea
dec
and
mov
in
fcos
add
out
add
rol
shl
push
jbe
dec
cmp
xchg
adc
dec
pusha
dec
inc
mov
inc
dec
shr
and
xor
imul
rol
push
pop
push
arpl
add
inc
icebp
call
mov
mov
mov
cmp
jb
xor
sti
and
jmp
in
or
test
outs
lea
test
fist
adc
inc
push
ss
dec
stos
cmps
inc
adc
add
icebp
add
jmp
and
mov
mov
xor
dec
mov
dec
mov
lea
mov
ret
rcl
in
or
mov
add
dec
dec
and
push
add
mov
sar
adc
jae
pop
pop
cdq
and
inc
or
mov
pop
pop
ret
lea
xor
rol
popf
mov
add
add
loop
pusha
sub
mov
xor
test
add
and
sub
test
je
mov
jmp
jecxz
pop
add
dec
dec
cmp
clc
and
dec
setnp
push
dec
je
sub
jne
cmp
lea
mov
pop
ins
clc
sbb
dec
inc
out
shl
call
fld
popw
add
add
outs
sub
jmp
loope
or
cmp
mov
jne
xor
dec
jmp
mov
test
jno
jne
or
jle
push
pop
sbb
push
add
retf
call
bound
jecxz
xchg
lea
add
cmp
jecxz
xchg
mov
add
or
into
push
leave
ds
jle
jo
(bad)
fsub
enter
fs
jns
push
sub
imul
push
(bad)
mov
out
cmp
rol
dec
retf
hlt
sbb
sbb
pop
cmp
push
mov
and
inc
adc
loop
xor
add
int
shl
mov
xchg
inc
pop
(bad)
mov
sahf
xor
push
je
push
cld
xor
mov
push
push
add
shl
mov
jmp
cld
fist
aad
push
xchg
dec
mov
dec
dec
dec
jne
mov
div
fdiv
add
loope
add
cli
adc
xor
mov
pop
aad
movs
push
add
cmp
lea
jbe
pop
cld
fwait
cmp
mov
cmp
jne
icebp
push
cmp
jne
mov
dec
mov
jmp
mov
or
mov
dec
mov
and
mov
dec
dec
mov
lods
jmp
sbb
stc
daa
call
xchg
test
jmp
test
ins
mov
mov
mov
mov
scas
ss
loope
push
and
fmul
loop
ss
mov
shl
dec
and
cmp
jne
or
dec
push
mov
cmp
repz
dec
mov
xchg
(bad)
out
xchg
call
mov
rcl
push
add
dec
jb
fstp
mov
or
mov
loopne
es
adc
and
call
mov
cmp
jne
mov
jne
or
cmp
jne
repz
std
jne
adc
adc
push
mov
pop
adc
fadd
mov
jl
(bad)
mov
shl
mov
pop
jmp
jmp
pop
mov
add
inc
xor
adc
pop
cmp
or
adc
or
cmp
xor
add
add
add
cmp
jbe
mov
dec
jmp
mov
cmp
ja
mov
mov
shl
(bad)
jmp
shl
mov
mov
mov
pop
dec
dec
nop
nop
push
(bad)
mov
mov
mov
cmp
push
mov
dec
icebp
and
jne
xchg
sub
and
ret
cdq
ficom
or
add
push
aad
xor
(bad)
imul
outs
push
inc
mov
inc
xor
and
mov
inc
shl
(bad)
ffreep
cs
cli
add
ret
mov
mov
pop
and
mov
push
mov
cmp
mov
mov
jb
stos
call
or
scas
ret
pop
pop
mov
pop
pop
or
(bad)
scas
pop
adc
cwde
clc
fst
cmp
jne
lods
setb
adc
hlt
cmp
pusha
add
add
into
add
pop
push
push
xchg
les
out
inc
dec
mov
dec
xor
push
add
mov
add
dec
js
add
add
je
mov
sbb
jl
call
or
sbb
cmps
call
jae
mov
mov
add
push
sub
leave
and
mov
out
or
leave
je
mov
nop
mov
jl
sahf
(bad)
stos
or
inc
inc
retf
in
sub
adc
or
mov
inc
aad
mov
sub
je
sub
je
push
cs
mov
pop
adc
sub
jge
retf
and
call
adc
or
mov
ret
and
mov
or
push
push
test
and
jg
sub
cmp
add
jl
mov
or
or
sub
mov
es
pop
or
jl
add
add
mov
sbb
imul
sar
or
pop
ret
cmp
jne
cmp
and
ja
jle
inc
shr
push
dec
xrelease
jne
mov
jbe
cli
(bad)
sbb
jg
or
sub
lea
mov
sub
mov
not
lea
cmp
jb
sub
xor
cmp
jge
cmp
add
or
scas
or
adc
mov
dec
mov
mov
add
add
mov
jae
mov
add
out
sub
lock
dec
add
push
call
enter
add
sbb
push
sbb
add
shl
popa
mov
(bad)
push
pop
or
(bad)
jg
adc
mov
mov
add
mov
sub
mov
mov
jg
sbb
test
je
lea
jmp
lea
inc
adc
jae
dec
add
fisttp
into
jb
mov
jmp
add
test
xor
add
(bad)
mov
adc
add
cmp
adc
push
inc
inc
or
cmp
cvtdq2ps
(bad)
pop
mov
sbb
or
mov
ins
fldenv
aaa
pop
lea
pusha
leave
xchg
xor
bound
out
sbb
dec
fwait
jne
fisttp
int3
push
xchg
or
leave
push
push
ins
inc
push
mov
test
mov
cmp
jne
lods
add
(bad)
scas
shl
add
fnstsw
add
jg
mov
test
sahf
mov
ror
inc
cmps
and
add
or
jg
out
or
add
add
cmp
jne
ins
sub
jbe
and
jl
inc
cmp
dec
sub
push
fdiv
pop
ja
or
icebp
jge
dec
push
add
stos
inc
push
or
dec
jne
pop
ret
mov
leave
jge
daa
das
inc
das
inc
mov
or
add
mov
sub
push
js
cmc
adc
mov
shl
pop
jge
and
adc
adc
pop
mov
mov
add
scas
or
sub
(bad)
dec
lock
xchg
sub
and
push
sbb
cmp
mov
call
mov
shr
test
icebp
cmp
sub
add
leave
dec
cmp
push
rcr
mov
or
ror
idiv
ins
mov
mov
loop
cmp
jle
mov
fs
in
adc
jmp
jmp
ja
sbb
xor
ror
pop
adc
pop
cmp
jbe
mov
mov
cmp
retf
xor
inc
mov
push
add
out
or
xor
stos
pop
scas
lock
and
dec
or
inc
or
ins
pusha
push
mov
mov
loopne
ret
xor
pcmpeqb
jno
jmp
das
mov
dec
add
xor
push
jo
mov
mov
pop
data16
jb
sbb
inc
or
mov
pop
or
mov
fwait
xor
(bad)
mov
lds
inc
adc
xchg
jns
cmp
out
cli
ja
push
push
call
jbe
cmp
push
dec
add
mov
test
jne
push
add
nop
inc
mov
fdivr
xor
or
cmp
mov
jbe
adc
fist
mov
mov
sar
mov
cmp
jl
mov
pop
or
mov
pop
ret
push
iret
imul
adc
scas
sub
(bad)
and
sbb
cmp
aas
xor
push
sbb
add
mov
push
mov
int3
sub
mov
dec
and
xchg
(bad)
pushf
mov
mov
in
xor
push
mov
cmp
push
push
mov
mov
add
lods
mov
mov
les
cmp
fadd
adc
loop
mov
lds
inc
or
pop
in
jne
add
xlat
xor
cmp
leave
sub
inc
(bad)
cmovle
adc
rcr
mov
or
ret
scas
jmp
enter
and
cmp
push
test
push
invlpg
adc
mov
dec
rcr
jmp
pusha
xor
sub
push
and
test
jle
inc
inc
cmp
out
sbb
mov
repnz
test
dec
mov
inc
test
jl
cmp
jle
push
or
ret
jl
cmp
or
sbb
mov
push
and
add
sbb
adc
cli
gs
lods
retf
jne
add
in
jno
loop
stos
dec
scas
adc
jo
xchg
cmc
adc
cs
in
or
sub
mov
ja
adc
les
pop
test
sbb
daa
and
pop
sub
(bad)
sub
sub
push
pop
inc
mov
and
mov
mov
or
push
data16
aad
jbe
arpl
inc
les
sysret
jae
movs
lea
clc
inc
inc
jnp
ror
jl
adc
(bad)
fbstp
in
mov
loope
test
jle
cmp
mov
scas
sbb
inc
jge
mov
pop
mov
test
ja
or
mov
mov
mov
mov
pop
xor
inc
clc
lahf
inc
sub
dec
or
add
or
bound
sbb
push
add
aad
push
add
sub
sbb
leave
inc
mov
adc
stos
sbb
rcl
clc
add
clc
mov
iret
sub
aas
push
sahf
rol
and
mov
je
cmp
je
add
pop
sti
add
pop
xchg
push
and
in
sbb
cmp
adc
push
adc
cmp
retf
sbb
data16
cmp
mov
sbb
mov
jge
pop
test
sbb
in
push
mov
ins
fadd
loop
inc
push
je
adc
inc
mov
and
cmp
mov
push
sbb
adc
push
(bad)
adc
add
jnp
mov
retf
cmp
push
sbb
or
inc
cld
dec
or
xchg
or
sar
dec
aas
in
xchg
cmp
aas
nop
cdq
add
aas
(bad)
nop
xor
js
aas
push
push
push
add
jo
popa
mov
xor
outs
pop
lahf
fucomi
mov
jle
mov
push
push
jne
(bad)
xor
sbb
cmp
test
jle
test
je
test
jne
neg
cmp
lods
sti
add
push
mov
add
mov
adc
pop
add
cmps
jno
out
shr
lea
or
gs
lods
test
sbb
pop
mov
mov
in
and
or
inc
cmp
mov
mov
mov
(bad)
jnp
cpuid
and
clc
dec
or
das
inc
pop
push
mov
lea
sahf
mov
pop
mov
pusha
or
xor
ret
outs
add
in
adc
dec
sbb
push
clc
pop
and
jno
or
psubb
or
mov
test
inc
mov
jle
sub
push
jg
(bad)
(bad)
sti
mov
stc
idiv
lea
and
jmp
mov
sbb
enter
icebp
push
push
mov
sub
adc
in
jne
mov
push
push
push
xchg
mov
jbe
jnp
push
pop
mov
mov
ret
jno
test
pop
jo
scas
add
sbb
test
jnp
inc
xlat
jle
jo
mov
push
jle
mov
xchg
xor
call
add
enter
sub
je
mov
push
in
cmp
jl
mov
cmc
cli
add
lea
std
xor
dec
cmp
cmp
pop
and
jmp
mov
cmp
je
jl
add
pop
mov
jmp
sbb
dec
push
sbb
fisttp
add
aas
add
push
inc
outs
sub
mov
adc
pop
xor
inc
ror
sahf
ror
add
inc
sub
or
adc
add
test
mov
jmp
ja
mov
adc
movs
lock
(bad)
clc
jg
je
add
jbe
cmp
jle
mov
lea
dec
ror
scas
or
add
repz
outs
mov
mov
or
fimul
popa
xchg
add
and
lea
(bad)
call
add
ror
mov
mov
mov
push
add
add
cmp
je
mov
mov
daa
les
dec
or
(bad)
cmp
adc
adc
push
mov
mov
add
add
sbb
ds
pop
sub
push
dec
cwde
bound
xor
cmp
inc
add
mov
add
mov
jl
mov
ret
adc
push
les
inc
xor
test
test
sub
fild
cmps
fs
adc
mov
test
jne
mov
push
adc
or
cmp
je
cmp
ja
adc
(bad)
js
pop
ja
cmp
ja
cmp
ja
mov
pop
mov
xchg
mov
or
dec
mov
fmulp
ret
push
jp
ja
cmp
nop
push
or
sahf
cmp
call
sbb
sbb
div
mov
mov
sub
les
mov
out
(bad)
test
mov
cmp
sti
jg
mov
jle
out
push
hlt
jl
sbb
mov
adc
shl
mov
test
jne
call
and
int
outs
add
dec
add
enter
add
fdiv
std
arpl
push
cmp
jle
push
fstp
lea
dec
sub
adc
loop
push
cmc
jne
aaa
mov
pop
test
pop
je
les
add
(bad)
and
pop
lahf
mov
mov
adc
pop
ins
loopne
test
call
neg
ror
mov
lds
push
push
mov
jne
jne
add
ficom
mov
xlat
das
pop
sar
xchg
xor
idiv
add
je
shr
fadd
push
add
ins
inc
(bad)
outs
loop
clc
je
add
ror
jp
and
cmc
inc
popf
dec
test
cmps
dec
jne
adc
add
or
inc
jl
fnstsw
push
pop
jno
add
mov
je
mov
mov
mov
pop
cmc
out
dec
or
and
lea
daa
jmp
or
dec
and
push
or
jmp
push
shl
mov
nop
clc
call
and
push
add
jmp
and
adc
jo
das
cmova
mov
shr
inc
add
sub
int3
xchg
aas
pcmpeqd
push
icebp
jmp
jbe
adc
adc
inc
or
repnz
lahf
fsubr
outs
and
xchg
lahf
in
hlt
pop
xor
push
vmread
and
mov
sar
test
lea
lea
mov
mov
mov
mov
mov
mov
mov
(bad)
arpl
add
adc
dec
cmp
jne
lods
ss
mov
dec
pop
xor
inc
sbb
xchg
jmp
mov
mov
sar
add
test
dec
addr16
dec
mov
xchg
adc
and
lds
mov
dec
xchg
jne
aaa
xchg
and
or
jecxz
push
jne
add
xor
lahf
cmc
push
push
mov
jne
push
jo
pop
(bad)
fsub
ret
cmp
je
xchg
jmp
mov
pop
lods
add
jp
pop
push
inc
das
and
jo
xor
test
jl
xchg
repz
mov
mov
outs
inc
ja
out
inc
jge
mov
lock
jle
push
pop
and
mov
jp
(bad)
mov
sahf
pop
retf
ficomp
scas
pop
inc
mov
jnp
dec
add
add
cmp
push
add
mov
mov
and
js
mov
cmp
pop
dec
or
mov
push
push
call
fistp
mov
sub
dec
(bad)
dec
cmp
jbe
mov
mov
test
je
cmp
je
mov
mov
mov
mov
das
push
push
inc
sub
div
push
and
add
dec
mov
jne
test
jne
cmp
je
add
cmp
xchg
cwde
xor
jmp
mov
pop
mov
xchg
xor
push
add
cwde
jne
cmp
je
dec
or
adc
aas
xor
push
push
add
(bad)
mov
mov
adc
outs
and
jnp
add
pop
sbb
jg
xchg
ss
mov
mov
cmc
mov
sub
pop
or
dec
fcom
push
sbb
or
jo
es
(bad)
dec
push
push
and
aas
mov
fs
sub
call
push
or
out
lea
xor
ja
cmp
inc
and
sbb
outs
jbe
mov
imul
push
push
mov
stos
add
jnp
cdq
adc
cmc
xchg
das
sub
lahf
sub
dec
push
add
and
es
add
call
nop
add
(bad)
test
mov
scas
push
push
lea
push
add
jne
or
xor
add
xchg
sub
les
fsubr
call
push
mov
adc
mov
cmp
inc
and
push
pusha
inc
xchg
sub
scas
outs
ret
mov
pop
mov
add
(bad)
jmp
lods
adc
sahf
ins
cmp
mov
jmp
xor
adc
fwait
and
ret
adc
into
mov
mov
or
lahf
push
(bad)
add
sub
or
push
add
ds
push
cdq
add
xor
or
cs
jmp
sbb
adc
in
add
inc
loope
inc
sbb
pop
jae
ja
ja
or
and
inc
pop
inc
cld
pop
inc
mov
push
call
mov
int3
dec
or
push
lds
dec
add
or
push
mov
adc
ret
jne
mov
dec
inc
sbb
xchg
mov
mov
xor
or
inc
inc
mov
xor
div
mov
mov
mov
pop
cmp
pop
inc
mov
push
dec
mov
sbb
pop
ret
xor
cmp
sbb
sub
jle
cmp
jle
or
xchg
sub
sbb
sbb
loop
aas
inc
rcr
mov
mov
(bad)
fidiv
push
push
jl
imul
inc
or
cmp
mov
fstp
lea
jb
jbe
mov
(bad)
(bad)
(bad)
push
and
scas
xlat
mov
push
inc
xor
mov
div
mov
mov
imul
(bad)
(bad)
fimul
mov
into
cmc
paddw
push
aaa
aad
mov
ret
cmp
mov
inc
sar
lea
mov
ins
clc
sbb
mov
pop
jne
add
adc
inc
add
pmaxsw
add
adc
mov
pop
adc
idiv
loopne
test
sar
lea
add
(bad)
fisttp
mov
mov
test
jne
mov
jl
cmp
jge
mov
mov
mov
push
call
loopne
push
lds
push
js
adc
push
call
mov
mov
rep
mov
dec
idiv
add
inc
pop
outs
sub
sbb
stos
loop
sbb
inc
inc
jp
or
add
push
or
push
mov
lea
pop
ror
pop
mov
sub
into
add
fsub
je
dec
jne
mov
mov
fidivr
or
mov
push
ret
mov
pop
xchg
mov
xor
inc
mov
adc
inc
sbb
ins
add
sbb
add
ret
mov
aad
pusha
jne
retf
lds
mov
mov
aad
xchg
add
mov
sbb
add
cmp
out
push
xor
or
jge
jecxz
add
jle
push
cmps
dec
and
loopne
aas
imul
fisttp
inc
call
test
jle
lea
mov
repnz
and
mov
jg
mov
or
bound
mov
cmp
jg
mov
inc
mov
mov
(bad)
push
cmp
jl
sbb
std
in
mov
arpl
fcmovnb
xchg
or
jg
frstor
jmp
js
mov
mov
jg
dec
out
sbb
mov
mov
movq
in
scas
dec
sbb
shl
push
jmp
mov
mov
nop
es
inc
in
imul
xchg
xchg
push
lock
cmp
dec
jmp
les
mov
leave
mov
mov
pusha
xor
xchg
jge
dec
sbb
cmp
aad
mov
pop
cmp
add
and
pop
jl
mov
sbb
es
jg
pop
mov
stos
out
mov
add
int3
or
push
or
shl
push
call
scas
add
mov
or
bound
cs
push
push
mov
fcom
lock
add
push
shl
cmp
mov
pop
cmp
(bad)
mov
jg
lea
and
add
hlt
fdivr
je
lea
and
add
sar
sbb
push
lock
lea
cs
jl
loop
jb
add
retf
mov
push
dec
mov
je
dec
je
inc
jmp
jl
and
jo
fmul
mov
xor
pop
ret
mov
mov
fbld
mov
test
adc
(bad)
div
push
call
dec
je
lock
push
ror
inc
cmp
mov
inc
mov
pop
mov
test
mov
jne
ss
xor
adc
jne
jmp
adc
adc
add
mov
dec
cmp
push
imul
psadbw
sbb
add
fsub
bound
fsubr
retf
fdivr
(bad)
adc
jge
int3
mov
test
je
mov
xor
loop
inc
mov
mov
mov
mov
inc
or
arpl
push
icebp
aas
push
jg
and
add
xor
loop
les
inc
add
cmp
mov
xchg
jo
inc
or
sbb
lods
pop
adc
inc
or
cmp
cmps
mov
add
cmp
mov
loop
fcomp
push
mov
dec
pusha
cmp
xchg
jl
sub
lds
inc
bound
push
mov
inc
adc
mov
test
movs
daa
inc
mov
push
add
and
jne
loop
pop
(bad)
jg
xor
leave
mov
dec
add
inc
sub
cmp
jbe
shr
jl
or
sti
jg
add
adc
add
inc
inc
xor
inc
adc
sub
call
jmp
dec
and
jne
and
mov
cmp
paddusw
cmp
jne
ja
cli
inc
and
jne
ror
mov
mov
add
add
push
pop
jmp
sbb
rcr
sbb
add
mov
lods
imul
nop
dec
and
jb
push
mov
mov
arpl
mov
into
inc
cmc
or
or
inc
and
inc
fild
rcl
adc
add
and
ror
or
xor
movd
fst
(bad)
test
mov
imul
lea
inc
add
pop
mov
(bad)
push
add
adc
add
or
into
cmc
call
jle
mov
push
push
call
fcomp
ins
add
cmps
aaa
mov
pop
adc
jae
push
mov
add
or
fisttp
push
and
iret
or
or
ror
pop
add
inc
sub
mov
inc
rol
mov
sub
xor
xor
and
jbe
and
ins
xor
mov
inc
inc
das
jl
sub
xchg
sub
cmp
jnp
pop
fs
push
push
outs
jne
add
jne
sbb
and
jb
and
add
cdq
aaa
daa
(bad)
ja
mov
test
push
mov
outs
push
add
rol
push
xor
or
push
sahf
adc
dec
sbb
adc
test
movs
jle
or
or
push
push
mov
call
cmc
aas
pop
xchg
dec
mov
add
push
test
cld
mov
mov
adc
and
inc
adc
aas
or
add
sbb
sti
outs
jo
or
dec
add
mov
mov
adc
test
adc
into
push
pop
out
add
shl
jle
popa
add
push
xor
cmp
mov
in
cmp
jne
pop
cmp
(bad)
leave
loopne
push
jmp
adc
add
in
add
mov
inc
sti
jg
push
hlt
xor
mov
jmp
sti
test
sbb
jmp
push
jmp
push
push
jmp
jae
push
lds
push
add
push
bound
xor
xchg
sub
adc
nop
popf
pop
add
add
push
sbb
lods
out
sbb
xor
ss
xor
cmp
cmp
or
pop
add
cld
(bad)
jmp
sbb
add
popf
aas
pop
call
out
daa
ror
test
push
add
and
jnp
leave
sub
push
jge
sbb
sub
out
inc
inc
mov
cs
pop
push
and
push
mov
pop
bound
mov
push
cmps
imul
sub
add
call
fcom
jmp
rol
adc
xor
fwait
cmps
jo
add
add
fcomp
add
add
cld
mov
std
pop
or
or
or
adc
push
add
fs
mov
je
adc
loope
cmp
add
xor
into
cmp
mov
dec
cdq
dec
cmp
(bad)
(bad)
(bad)
jmp
add
add
mov
inc
lea
cmp
add
out
push
mov
or
push
aad
jle
mov
sub
add
add
or
add
mov
mov
sahf
xchg
inc
frstor
mov
(bad)
adc
adc
imul
add
mov
and
xor
je
sbb
mov
xor
sbb
in
push
and
and
adc
and
(bad)
xor
mov
dec
add
sub
inc
hlt
jle
leave
dec
mov
and
enter
dec
jg
(bad)
and
jbe
sbb
sub
add
mov
es
jnp
mov
es
sbb
dec
sbb
les
test
and
add
es
xchg
or
shl
jmp
mov
mov
inc
add
out
xchg
mov
mov
push
or
mov
push
pop
inc
sbb
shl
inc
sbb
mov
test
jg
push
icebp
adc
lea
adc
ret
cmp
and
cmp
and
dec
and
push
add
ror
push
jne
push
sahf
mov
inc
mov
inc
mov
scas
adc
mov
adc
mov
cmp
jne
pusha
add
or
jmp
dec
cwde
imul
cmps
and
inc
inc
mov
and
sar
and
mov
sbb
push
and
mov
mov
mov
push
and
mov
sub
ret
fiadd
jl
cmp
adc
mov
push
adc
cs
sub
xchg
and
xor
jg
push
mov
mov
mov
mov
test
jne
dec
or
push
call
jg
inc
jns
mov
xor
dec
mov
inc
out
jo
outs
xchg
push
and
jne
call
add
lods
add
enter
popa
xchg
adc
xchg
mov
push
lock
shl
cmp
cmp
add
in
mov
mov
fadd
inc
and
cmp
add
jle
sbb
push
xchg
ss
xchg
mov
das
and
(bad)
adc
add
add
mov
and
cmp
sub
je
and
retf
inc
or
pop
pop
xchg
and
lock
fbld
pusha
inc
push
adc
inc
sbb
ficom
sbb
shl
sub
add
sub
push
adc
ret
mov
mov
popa
push
sar
mov
daa
loope
sti
jne
xchg
je
pop
jb
and
pop
pop
inc
daa
jmp
add
daa
mov
mov
jp
add
mov
inc
pop
mov
test
dec
ds
inc
mov
push
arpl
les
fisub
sti
or
inc
mov
push
push
jle
adc
adc
pop
rcl
inc
add
xor
pop
inc
fwait
cwde
sbb
(bad)
mov
neg
leave
dec
mov
inc
test
mov
jne
push
repnz
mov
and
and
leave
or
sbb
jl
and
jle
mov
push
inc
xor
push
lods
ins
pop
dec
cmps
jb
fcom
pop
test
sbb
pop
jns
add
sbb
out
js
pop
test
mov
and
xorps
jno
mov
rol
loop
sar
mov
mov
jbe
fcomip
mov
and
call
pop
mov
pop
pop
mov
add
add
jge
jge
xor
push
inc
push
pop
or
xor
pop
add
das
test
(bad)
mov
xor
dec
mov
or
mov
inc
test
call
les
mov
xor
dec
mov
add
cli
out
into
hlt
inc
sub
push
lahf
jle
mov
xor
push
ror
sbb
or
push
dec
aad
inc
aas
and
add
mov
mov
xlat
inc
lock
add
sbb
xchg
xor
call
adc
ror
ror
add
inc
(bad)
and
out
adc
(bad)
adc
sbb
pop
cld
and
push
push
cmp
cmps
and
adc
dec
and
jle
sub
sub
lea
adc
jle
mov
cmp
out
mov
dec
mov
inc
inc
xchg
sbb
into
ja
jmp
shr
sub
lea
jmp
or
loope
mov
add
sahf
xlat
das
sub
cmp
jne
inc
lods
adc
jo
jo
pop
mov
fst
lea
mov
mov
loopne
add
xor
and
or
loopne
icebp
jg
mov
mov
add
mov
and
xchg
(bad)
ja
jg
mov
mov
add
(bad)
or
lds
loopne
add
mov
sub
jmp
add
pop
mov
adc
fisttp
ds
push
sub
push
fldenv
inc
in
aas
fsub
leave
dec
mov
add
inc
sub
dec
mul
push
cld
retf
and
push
jae
inc
retf
push
outs
jne
push
inc
rcr
rcr
mov
inc
sar
loopne
retf
sub
jecxz
jecxz
push
inc
ja
cmp
mov
inc
jo
add
cmp
cmp
adc
call
mov
inc
test
xchg
and
mov
int
xchg
sbb
mov
loop
push
and
mov
push
inc
add
int3
add
fldcw
add
jmp
and
or
and
fisttp
mov
or
lock
cwde
into
dec
into
and
mov
jl
jo
sbb
add
ds
adc
push
and
out
cwde
ficom
cdq
push
sbb
scas
add
je
dec
lock
adc
pop
adc
hlt
jge
add
add
test
repnz
lock
push
push
add
adc
call
pusha
mov
je
cmp
in
sbb
ss
and
lods
adc
mov
add
inc
cmp
cwde
push
add
mov
xchg
xor
pop
dec
sbb
cmp
test
inc
mov
pop
jle
mov
jecxz
cmp
cmp
ds
push
loopne
push
mov
outs
fadd
mov
sbb
rcl
inc
sbb
mov
mov
dec
inc
scas
pop
adc
out
data16
ins
push
or
sbb
xchg
mov
es
cwde
jecxz
loopne
pop
cmp
mov
add
cmp
pop
and
xchg
shl
mov
lea
retf
sub
push
push
mov
or
cmp
add
dec
mov
inc
and
mov
inc
dec
adc
fbld
sub
pop
adc
cmp
int3
add
leave
jecxz
mov
mov
fimul
push
sbb
test
jge
push
mov
aas
push
dec
scas
fist
jl
adc
fist
addr16
std
xor
push
jne
or
lock
jg
call
push
call
mov
test
mov
dec
add
inc
add
dec
push
or
or
dec
or
and
sbb
sbb
push
adc
icebp
out
and
push
push
and
push
sub
push
inc
dec
std
mov
dec
sub
inc
cmp
push
add
sub
dec
jne
add
mov
xchg
push
mov
call
push
cmp
je
lea
jge
inc
fisttp
push
push
outs
fidivr
js
das
sbb
test
jle
mov
cmp
je
in
mov
loopne
dec
jne
or
lea
add
loopne
or
icebp
dec
add
inc
and
push
adc
pop
sub
add
jle
stos
cli
sbb
add
jmp
inc
out
jbe
push
loop
test
push
nop
mov
and
jbe
clc
out
mov
add
mov
test
sar
or
mov
jnp
inc
mov
pop
cmp
adc
mov
mov
call
sbb
(bad)
adc
cmp
dec
add
fucomp
mov
jnp
(bad)
cmp
jbe
mov
lea
ds
jg
ds
out
cmp
and
div
push
adc
add
imul
and
out
loopne
adc
mov
add
loopne
add
mov
test
adc
mov
div
dec
hlt
mov
jne
sbb
add
pop
mov
dec
add
push
add
add
mov
mov
sub
adc
add
add
test
fild
adc
into
sub
fist
pop
mov
inc
adc
cmp
cmp
cmp
outs
sbb
push
es
jno
pop
add
xor
retf
test
or
clc
add
adc
pop
(bad)
(bad)
jmp
push
adc
ret
dec
mov
mov
mov
mov
add
inc
sub
adc
push
aas
jmp
pop
fist
jg
mov
push
sub
xchg
es
adc
test
push
mov
push
retf
shl
xor
mov
jg
cmp
jbe
mov
xchg
jb
cmp
imul
sub
jge
div
std
sbb
(bad)
lea
add
mov
xor
add
dec
jne
cmp
jb
popa
sbb
pop
ret
push
or
pop
outs
adc
jecxz
mov
or
dec
and
cmps
imul
and
call
hlt
dec
push
adc
mov
or
into
xor
or
cmp
sub
add
jg
dec
and
mov
and
or
lahf
js
dec
or
push
and
inc
sub
dec
inc
and
inc
mov
jb
inc
pusha
pop
inc
inc
(bad)
(bad)
out
sbb
mov
push
xor
xor
mov
test
je
cmp
jne
jmp
mov
imul
add
mov
pop
cli
mov
push
mov
inc
push
and
mov
shl
sub
sub
cld
dec
std
fild
push
mov
push
push
push
push
gs
jmp
jl
mov
jmp
cdq
idiv
mov
test
jg
(bad)
cmp
inc
or
mov
xor
(bad)
cmp
dec
div
inc
cmp
pushf
dec
add
dec
adc
and
push
xchg
inc
daa
pop
std
ja
xlat
lea
push
push
push
mov
pop
pop
je
call
add
idiv
push
cmp
mov
dec
xor
mov
mov
mov
mov
leave
sar
dec
xchg
mov
jae
fs
jmp
mov
mov
dec
(bad)
lods
stos
mov
xor
jbe
add
sub
push
sbb
jae
add
push
nop
shl
arpl
push
popa
adc
call
and
adc
adc
sbb
push
cmp
ja
cmp
ja
hlt
push
add
jp
push
mov
call
retf
mov
cmp
jb
mov
and
cmp
jbe
mov
or
rcr
mov
add
or
mov
cmp
jbe
mov
jmp
cmp
add
inc
sbb
add
mov
cmp
jae
cmp
and
adc
in
xor
add
xchg
sbb
sbb
inc
and
fbstp
xor
clc
aas
clc
call
mov
push
mov
shr
inc
cmp
jb
loope
int3
inc
les
xor
daa
test
jne
push
sti
fistp
sbb
inc
push
pop
sub
pop
pop
lea
pop
pop
ret
adc
sbb
inc
add
sar
push
add
push
mov
jl
ja
cmc
imul
pop
pop
and
jle
cmps
out
mov
dec
adc
enter
cmp
iret
sub
cmp
jl
or
or
add
aas
inc
clc
into
in
imul
(bad)
ror
push
mov
push
push
(bad)
mov
or
xchg
sbb
call
jmp
mov
push
lea
add
push
mov
rcr
mov
add
add
add
cmp
jl
enter
fdivr
inc
inc
add
outs
xchg
inc
ins
xor
xor
pop
pop
lds
iret
std
jae
cmp
repnz
or
fisttp
jae
mov
jno
iret
call
xchg
cmp
rcl
push
enter
and
pop
and
ja
dec
fcomp
fisub
call
add
ret
sbb
loopne
sbb
scas
outs
sbb
jns
jnp
loop
sbb
sbb
call
(bad)
or
mov
mov
loopne
and
jmp
inc
adc
(bad)
(bad)
out
mov
sti
je
cmp
je
lea
mov
push
push
call
std
out
mov
cmp
jne
mov
(bad)
jg
sahf
retf
and
jl
sbb
inc
dec
pop
mov
add
cmp
cmp
adc
add
dec
je
std
fist
sub
mov
test
mov
jne
movs
sbb
(bad)
xor
and
or
sbb
inc
or
dec
pusha
out
(bad)
jns
mov
push
mov
push
(bad)
and
or
inc
call
pop
ret
aaa
pusha
mov
and
dec
add
loope
add
fisttp
pop
xor
jb
fld
jmp
pop
push
call
mov
mov
inc
inc
mov
or
or
adc
push
cmps
retf
cdq
dec
add
and
or
jge
xchg
or
icebp
add
je
shr
call
mov
lea
mov
shl
or
aaa
jne
inc
sbb
or
inc
jo
imul
mov
adc
mov
sub
sub
leave
pusha
xor
inc
mov
adc
adc
inc
push
jae
mov
pop
xchg
cld
jmp
mov
loopne
int3
in
(bad)
push
jo
dec
out
call
ds
push
jg
inc
pushf
fisttp
or
xchg
lahf
mov
cmp
adc
xor
cli
mov
imul
shl
cmp
(bad)
fild
jg
mov
mov
imul
shl
cmp
jg
add
das
jl
imul
jo
add
and
rcl
jl
cmps
pop
lds
fist
dec
add
mov
inc
imul
imul
push
call
or
adc
stos
mov
sbb
cmp
ja
jmp
mov
jmp
mov
add
invd
or
xor
mov
mov
test
mov
jne
mov
push
mov
fwait
dec
or
cmps
add
minps
push
mov
mov
pop
sub
or
test
mov
pop
add
call
inc
mov
dec
jae
adc
and
imul
(bad)
call
inc
and
cmp
jne
cmp
jne
mov
in
and
fdivrp
es
cmp
jne
cmp
jns
add
clc
push
inc
std
cmp
jne
cmp
jne
mov
cwde
jns
cmp
jne
cmp
jne
cmp
mov
mov
jge
punpckhdq
add
call
mov
jmp
adc
shl
mov
jecxz
push
add
dec
not
inc
dec
adc
mov
xlat
and
int3
mov
xor
push
mov
mov
dec
in
mov
mov
mov
push
dec
and
push
js
cmp
jne
mov
mov
mov
cmp
clc
je
(bad)
xchg
hlt
jno
jle
xor
jle
add
outs
and
add
jmp
cmp
repz
push
pop
or
add
add
jg
xchg
sub
ins
jne
nop
lahf
jne
push
xchg
push
sbb
mov
mov
push
xchg
or
icebp
push
je
movs
rcr
sbb
pushf
fstp
sub
cwde
lods
mov
add
pop
inc
jle
mov
mov
add
or
jecxz
cmp
jne
clc
push
arpl
add
shr
mov
push
jno
mov
or
sub
mov
add
sbb
cdq
cmp
push
lea
iret
je
hlt
ins
aaa
sti
inc
dec
push
push
je
jne
(bad)
jle
std
fbstp
inc
add
outs
imul
mov
(bad)
es
inc
or
leave
mov
mov
adc
mov
setne
lock
adc
inc
xor
sub
pop
xchg
cli
push
push
add
mov
ins
or
add
and
xchg
jae
(bad)
clc
jg
mov
rep
mov
inc
or
add
dec
mov
mov
mov
xor
das
cdq
rep
daa
add
(bad)
add
fcomp
iret
xchg
shl
sar
mov
jno
inc
or
mov
add
sbb
xchg
mov
iret
adc
mov
movs
call
add
jmp
mov
inc
mov
outs
pop
cmp
mov
push
adc
push
aam
pop
push
add
sbb
cmp
sbb
or
jmp
cmc
xor
xchg
pop
inc
xor
int3
mov
push
pop
mov
add
add
icebp
das
(bad)
test
fimul
or
mov
movs
add
les
inc
(bad)
(bad)
mov
mov
xor
mov
xor
test
pushf
and
ret
and
mov
mov
mov
mov
shl
mov
adc
dec
cmp
test
push
xchg
rcl
mov
test
je
mov
inc
ds
adc
jecxz
loope
aaa
lock
cld
je
mov
mov
sar
cmp
fcomip
fist
cmp
mov
push
push
call
mov
or
mov
push
aad
dec
adc
jg
mov
mov
cmp
fisttp
bound
dec
inc
and
je
sub
out
adc
add
ror
xor
xchg
bound
adc
push
mov
inc
sub
mov
test
jne
mov
mov
push
push
and
sti
mov
jne
mov
push
push
nop
or
jb
cli
repnz
sub
out
movs
push
push
inc
sub
sbb
dec
fild
add
pop
jge
and
inc
les
xor
push
add
push
xchg
imul
dec
cmp
fcmovb
xchg
push
xor
pop
ret
and
add
mov
cmp
in
aaa
adc
or
or
inc
pop
xor
enter
pop
paddd
sub
dec
icebp
inc
jmp
mov
sub
mov
cmp
ja
pop
inc
cld
test
je
sbb
cmp
add
jl
lds
pop
add
mov
mov
mov
mov
shl
add
adc
out
ja
repnz
xor
adc
lds
jmp
or
mov
shr
and
cmp
mov
sbb
imul
(bad)
dec
out
(bad)
mov
and
shr
shr
sub
aas
inc
dec
mov
mov
lea
scas
shr
add
push
cmp
push
inc
pop
loopne
rol
test
xor
fcom
adc
inc
ror
mov
stos
cdq
rcr
sub
xchg
cmc
mov
neg
pop
mov
add
cmc
(bad)
mov
adc
xor
cmp
je
in
mov
or
jl
sub
mov
inc
out
aam
(bad)
mov
not
and
rol
jmp
cmp
mov
cmp
mov
cmps
ja
xor
je
lds
mov
xchg
test
sub
outs
add
leave
jne
fist
pop
inc
cmp
jne
mov
mov
cmp
je
mov
cmp
dec
add
dec
mov
jmp
sub
test
mov
xlat
lock
jne
cmps
dec
dec
dec
push
push
push
mov
and
cmps
and
(bad)
lods
mov
mov
cmp
xchg
jl
dec
mov
mov
sub
dec
cli
dec
sub
retf
idiv
and
jne
mov
cmp
shr
jbe
hlt
(bad)
sub
repnz
mov
jmp
and
or
pushf
push
movnti
mov
(bad)
test
add
rol
or
mov
leave
sbb
loope
iret
adc
add
shl
imul
adc
add
sub
lock
jne
inc
cmps
sbb
jne
mov
arpl
aaa
inc
lods
and
cs
or
cmp
test
je
loopne
fsub
xchg
je
cli
je
lds
adc
push
aas
ja
sbb
and
cmp
ja
cmp
loopne
cmp
ins
adc
push
shr
mov
loopne
lea
push
pop
in
or
ror
pop
sub
sar
push
mov
inc
aam
call
mov
shr
shl
jae
and
add
nop
mov
rol
or
adc
push
sbb
nop
xor
or
add
aam
(bad)
out
jo
retf
lea
dec
add
add
or
jnp
sti
mov
mov
jo
jb
xor
out
enter
xor
pop
pop
rol
ins
add
enter
push
mov
push
lea
lea
push
mov
push
push
push
(bad)
push
cs
jb
je
sgdtd
repnz
rcr
inc
or
add
call
xor
ret
shr
loop
add
enter
pop
push
stos
adc
cmp
jae
outs
int3
add
div
push
xchg
test
loop
adc
or
inc
cmp
movs
loopne
out
mov
add
xor
(bad)
xor
mov
lea
call
mov
cmp
aas
jp
jae
mov
sub
mov
add
mov
inc
call
dec
addr16
retf
adc
je
lea
jg
(bad)
out
sub
push
sbb
add
and
or
add
cmp
jae
or
or
cmp
jb
jmp
xchg
mov
and
add
sbb
out
add
sbb
(bad)
mov
rol
(bad)
out
inc
sbb
ret
ja
and
adc
jp
sti
push
fiadd
jb
dec
cmp
xchg
inc
and
xor
jmp
cld
sbb
in
or
in
call
cmps
punpcklwd
nop
lea
stos
xor
dec
and
push
(bad)
cs
in
push
or
jno
jle
xor
mov
shr
cwde
cmp
add
int3
push
push
mov
bound
pop
inc
mov
adc
cmp
fsubrp
test
cmp
push
push
movs
dec
sub
add
pop
adc
dec
and
sahf
dec
dec
cwde
cmp
sbb
stos
cmps
xchg
mov
pop
movs
xor
test
and
outs
xchg
mov
add
cmp
xchg
xor
push
aaa
mov
mov
mov
aam
std
ds
mov
cmp
iret
mov
(bad)
sbb
push
jno
push
push
icebp
mov
mov
cmp
jne
push
xchg
add
in
sti
les
add
xor
inc
pop
push
pop
es
mov
adc
jmp
sbb
(bad)
jle
call
and
mov
iret
mov
mov
xor
sub
adc
dec
cs
mov
add
mov
mov
popf
call
in
les
pop
add
and
adc
xor
(bad)
es
add
iret
xchg
inc
popa
pop
mov
push
push
cmp
mov
clc
add
retf
sbb
add
add
stos
js
or
push
sub
add
ret
ret
dec
dec
sbb
call
dec
leave
xor
add
rol
(bad)
mov
lahf
and
imul
inc
cmp
(bad)
sub
sbb
sub
add
dec
dec
push
sub
mov
dec
mov
adc
cdq
sub
rol
test
push
push
enter
adc
inc
pop
inc
and
adc
inc
sub
fbstp
sub
add
mov
sbb
jg
cwde
call
dec
and
mov
inc
mov
rol
lds
inc
mov
xor
mov
repz
mov
mov
adc
mov
push
mov
rcl
mov
and
outs
push
test
sbb
jp
dec
inc
sbb
mov
gs
mov
add
cmp
mov
xchg
jbe
fadd
mov
sub
xor
loop
scas
inc
or
and
push
push
(bad)
movs
adc
sbb
add
nop
push
or
ins
loopne
add
or
mov
arpl
sbb
mov
inc
sbb
in
jg
inc
or
dec
add
push
push
mov
lods
push
dec
add
outs
test
sbb
jne
inc
lahf
inc
daa
sbb
les
sbb
add
jno
jge
dec
push
add
push
mov
mov
sbb
jmp
push
and
push
inc
idiv
sub
lahf
out
shl
or
mov
shl
sbb
jg
fucomp
mov
or
cs
mov
sub
mov
pop
mov
cmp
mov
fs
mov
mov
mov
dec
push
or
lds
add
popa
call
dec
xor
sub
jl
jmp
push
jne
into
adc
retf
jg
sbb
push
lods
dec
ja
(bad)
mov
nop
adc
inc
add
pusha
inc
add
lods
popa
inc
xor
push
bound
arpl
mov
add
add
dec
xlat
daa
xchg
add
scas
data16
sub
dec
nop
scas
iret
sub
adc
in
pushf
mov
sbb
or
cmc
xchg
into
dec
sub
call
add
pop
add
sub
sbb
int3
shr
adc
mov
retf
push
and
cli
sbb
mov
test
je
enter
jl
or
rcl
(bad)
pop
add
sub
jne
aam
add
push
mov
mov
jmp
rol
jbe
mov
push
mov
push
mov
aam
les
xchg
retf
call
loop
and
or
dec
sbb
cli
sub
mov
mov
sti
ja
les
sub
mov
mov
and
mov
repnz
mov
inc
test
int3
xchg
add
jne
mov
mov
cmp
pop
or
dec
jmp
mov
cmp
je
cmp
je
cmp
jne
adc
jbe
mov
or
push
sub
fsubr
dec
mov
mov
out
or
adc
sbb
inc
cmp
and
mov
mov
inc
data16
sti
rcr
or
shr
cs
std
xchg
ror
std
mov
push
(bad)
fisttp
inc
or
sar
ret
jae
mov
mov
mov
loope
cmp
mov
add
or
jne
push
pop
xchg
cmps
adc
or
(bad)
dec
mov
dec
mov
mov
lea
je
cmp
jb
sub
mov
test
mov
ins
jl
mov
add
jmp
xor
sub
call
cld
mov
mov
push
mov
mov
pop
pop
mov
add
pop
add
int3
adc
and
shr
sbb
ror
or
dec
inc
xor
rol
add
jmp
dec
fs
mov
dec
jae
push
pop
test
cmp
add
or
rcr
and
inc
xchg
jne
call
std
add
pop
pop
and
pop
ret
mov
pop
sub
pop
adc
and
add
ret
mov
adc
dec
clc
daa
pop
and
mov
and
sub
jne
(bad)
fstp
adc
cmp
jne
mov
call
mov
cli
or
shl
jnp
dec
into
mov
das
mov
out
out
dec
push
sub
sub
mov
inc
mov
dec
cmp
lds
cmp
clc
or
sub
add
lds
sub
inc
fdivr
jg
dec
mov
jne
mov
mov
lea
pop
add
call
mov
mov
test
je
mov
mov
cmps
xor
into
add
push
fmul
sbb
and
(bad)
inc
enter
dec
ins
cmp
jb
mov
xor
jb
pop
btc
dec
xor
mov
xor
mov
and
adc
in
clc
or
inc
jne
add
inc
dec
cmc
dec
dec
mov
mov
cmp
rcr
(bad)
xor
aas
inc
sub
ret
mov
cs
aaa
cmp
dec
add
add
dec
xchg
test
xor
add
inc
rcr
sub
or
retf
add
pop
int3
push
push
ja
inc
or
jle
call
shl
jne
jmp
cmp
mov
or
std
ja
test
add
mov
mov
inc
js
pop
mov
add
pop
add
(bad)
fisttp
dec
cmp
(bad)
xor
mov
mov
sub
dec
cmp
ret
or
cmp
inc
mov
data16
mov
test
je
mov
mov
stc
lock
ja
add
je
xor
fwait
sub
mov
mov
jae
adc
xchg
outs
mov
pop
scas
pushf
add
sub
mov
ja
sub
mov
add
scas
daa
sar
pop
mov
xor
and
inc
sub
ror
add
test
xchg
lea
jmp
mov
jae
and
fimul
ja
ins
addr16
adc
call
fist
ret
fidiv
xchg
jb
dec
xor
(bad)
(bad)
(bad)
fnstsw
shl
xchg
ror
enter
dec
ins
ja
cmp
jb
loopne
(bad)
mov
mov
mov
inc
xor
mov
or
daa
jae
shl
mov
xor
dec
inc
(bad)
out
dec
sub
inc
cmp
rcl
dec
inc
mov
mov
ins
cli
mov
mov
arpl
pop
push
pop
scas
(bad)
ja
xor
(bad)
sahf
push
mov
push
add
loope
(bad)
jl
dec
inc
inc
jmp
jle
mov
dec
push
mov
mov
add
mov
cli
(bad)
push
fld
ror
stos
xchg
mov
push
push
dec
cmp
sete
dec
mov
sti
call
xchg
sbb
je
call
mov
add
scas
xchg
xchg
mov
pusha
cmps
(bad)
push
pop
or
mov
add
add
loope
pop
pop
inc
in
fidivr
pop
sub
or
fisttp
clc
(bad)
call
sub
je
push
mov
mov
mov
mov
inc
xchg
retf
push
cld
jmp
push
sub
add
sbb
das
mov
icebp
mov
lea
xchg
mov
xchg
mov
xchg
pop
cmp
jb
rcl
mov
xor
jbe
cld
dec
push
xor
(bad)
cmp
jne
fwait
push
sub
inc
sub
jne
cmps
mov
cmp
lock
(bad)
fild
inc
cmp
movs
add
inc
mov
inc
inc
cmp
jne
sbb
enter
xor
jb
and
mov
retf
jb
mov
lea
add
out
loop
jle
mov
mov
imul
jge
mov
mov
(bad)
mov
fist
mov
mov
and
xor
mov
stos
aaa
adc
sbb
lock
adc
cdq
mov
test
cmp
ja
test
lds
retf
xchg
inc
jmp
rol
lods
add
jb
cld
pop
test
test
dec
add
movs
xchg
xor
dec
shl
mov
xor
mov
fs
cmp
inc
movs
mov
fild
jo
inc
pop
mov
adc
js
retf
jae
mov
ds
and
ja
fiadd
je
cwde
jne
stos
loop
out
jmp
retf
add
add
jbe
pop
mov
sbb
add
cmp
ja
mov
mov
pushf
lea
mov
repnz
sar
push
stos
stos
stos
dec
stc
sbb
fldenv
into
clc
sbb
stos
sbb
inc
mov
adc
(bad)
push
ins
dec
xor
cmp
(bad)
movs
add
xchg
ret
sub
or
add
adc
mov
dec
fs
ja
ds
fucom
inc
(bad)
div
lods
push
sbb
inc
mov
mov
addps
cli
xlat
test
imul
fnsave
std
sub
push
push
aas
push
pop
push
mov
fidiv
or
push
je
inc
nop
add
gs
mov
dec
aam
mov
dec
add
cmp
jmp
adc
cwde
jo
adc
or
dec
sub
jmp
xchg
xor
ja
push
and
lods
inc
dec
ins
inc
inc
ins
add
dec
mov
push
pusha
mov
ja
xor
inc
mov
(bad)
inc
add
mov
sbb
adc
shld
inc
or
mov
push
mov
dec
ret
repnz
mov
leave
inc
cmc
mov
cmp
inc
add
cmp
or
rol
mov
sti
add
jb
xchg
jge
pushf
das
and
call
fwait
je
push
jno
ds
pop
out
ss
pop
add
retf
stc
into
outs
sub
scas
add
or
dec
xor
mov
cmp
pop
sub
sbb
dec
inc
push
jb
cld
inc
cwde
add
ja
lea
test
lea
jle
dec
std
aaa
in
dec
and
mov
mov
mov
pop
int
rol
add
jnp
inc
xchg
dec
rep
jne
test
pop
cmc
jg
mov
shl
adc
dec
mov
jae
add
ror
loop
adc
rep
xchg
test
fwait
sbb
push
call
mov
pop
xchg
sbb
jp
add
xor
mov
push
push
mov
and
sahf
shl
adc
add
jnp
add
jo
cld
add
mov
sub
inc
pop
add
mov
push
xor
pop
add
or
mov
add
add
fidiv
adc
adc
or
pop
push
shr
test
jle
push
lea
add
(bad)
or
or
imul
mov
lock
std
mov
clc
adc
or
add
(bad)
sub
dec
clc
push
cmp
jl
dec
nop
pop
scas
xor
push
push
lock
mov
es
cmp
call
jl
and
adc
call
nop
mov
dec
jne
sub
xchg
pop
add
sbb
cmps
or
lea
mov
imul
cdq
neg
dec
pop
lea
mov
push
push
jmp
sbb
or
inc
add
lea
test
mov
mov
inc
call
mov
mov
lahf
mov
les
sub
or
mov
iret
je
sbb
je
mov
push
dec
add
(bad)
mov
add
add
cmp
je
lock
jle
ins
pop
inc
add
imul
jle
mov
inc
fs
jae
or
jge
push
add
xchg
fcomip
in
mov
test
adc
bound
sub
mov
mov
lea
lea
push
mov
dec
adc
call
xor
and
dec
xlat
sbb
add
push
cmp
cs
(bad)
out
mov
sbb
or
mov
or
lea
imul
test
jle
mov
mov
sub
sub
sbb
sbb
sbb
scas
sub
sbb
add
dec
mov
jne
test
adc
jle
out
add
jmp
mov
imul
add
mov
test
outs
stos
loop
lea
sub
lea
mov
jmp
mov
icebp
aas
in
out
mov
inc
dec
jne
inc
test
jle
xor
lea
(bad)
inc
aaa
mov
mov
mov
sub
add
dec
mov
jne
xor
add
icebp
sbb
sbb
add
dec
and
jmp
sbb
mov
ins
(bad)
(bad)
(bad)
cmp
or
pop
pop
pop
pop
and
mov
mov
mov
dec
mov
push
push
call
sbb
outs
add
ucomiss
pop
gs
push
mov
jmp
fist
pop
xor
push
xor
push
ss
add
add
pop
jb
cmp
rol
add
in
fcom
push
adc
in
(bad)
dec
sbb
push
mov
push
test
push
sahf
je
dec
push
or
inc
mov
outs
stos
add
or
sub
je
dec
je
dec
jne
or
sbb
dec
dec
add
mov
dec
xchg
cmp
mov
mov
movs
ror
sub
adc
pop
inc
and
(bad)
pop
cmp
movd
mov
imul
(bad)
call
mov
or
cmp
push
cs
mov
or
jb
retf
vminps
dec
outs
into
mov
(bad)
push
sar
xor
mov
mov
xlat
cmp
push
mov
xor
cmp
cwde
std
adc
xor
cmp
jb
mov
pusha
push
add
sbb
sbb
mov
lds
into
jb
fsubr
jmp
mov
dec
push
lock
mov
mov
mov
sub
mov
call
mov
pop
test
pop
les
leave
pop
std
fwait
outs
sub
inc
sbb
jbe
scas
pop
fidivr
cmps
adc
cmp
mov
sub
pop
pop
and
mov
mov
add
sbb
call
adc
mov
mov
loopne
(bad)
sbb
in
adc
add
(bad)
push
mov
test
adc
ins
sbb
mov
mov
jecxz
cmp
inc
clc
sbb
data16
dec
and
shl
mov
inc
scas
cmp
sbb
pavgw
(bad)
mov
out
sbb
push
pusha
pop
sub
aam
xor
mov
or
or
push
jae
add
daa
mov
mov
or
(bad)
(bad)
aas
add
mov
div
mov
test
jne
mov
test
jne
sbb
dec
dec
mov
cmp
loopne
(bad)
mov
nop
cmp
mov
jle
lea
mov
mov
mov
call
jne
mov
hlt
push
cmp
imul
jl
fwait
pop
mov
call
adc
imul
add
or
pusha
sub
mov
fisttp
loopne
push
lock
in
mov
xchg
cmp
cmp
add
inc
add
inc
or
push
bound
and
imul
push
mov
and
popa
add
add
mov
out
(bad)
mov
je
lea
mov
push
mov
jl
mov
jl
push
cld
out
cmp
or
adc
imul
adc
inc
and
es
cmp
les
inc
mov
add
rcl
lea
pop
pop
mov
mov
xchg
mov
fst
push
(bad)
ja
add
add
lea
mov
(bad)
stos
and
imul
pusha
pop
test
xchg
jp
add
or
xor
sbb
mov
std
xchg
test
pop
dec
and
push
mov
popf
mov
mov
jle
jg
mov
mov
mov
jae
mov
dec
fdivr
ja
push
sbb
dec
adc
dec
sbb
mov
rcpps
sbb
push
ror
push
inc
je
add
add
sbb
mov
mov
out
test
adc
adc
sub
xor
jnp
push
push
mov
sub
pusha
dec
dec
mov
adc
jl
cmp
aam
cmp
out
aam
jge
jg
outs
adc
cmc
adc
xchg
adc
fwait
inc
mov
lea
shl
retf
push
mov
jb
push
jae
ds
les
push
sub
leave
cmp
mov
push
in
add
psllw
ret
or
sbb
inc
addr16
and
jbe
adc
sbb
inc
xor
dec
mov
dec
mov
je
adc
and
nop
out
mov
cmp
inc
jae
mov
cmp
push
xchg
or
xchg
sub
inc
and
push
mov
inc
mov
lea
jne
rol
xor
and
xchg
loop
call
add
cmp
jge
push
sub
stc
lock
fwait
or
and
push
push
push
call
mov
fcom
adc
aaa
add
cdq
(bad)
test
jne
inc
xchg
popf
pop
hlt
cmps
or
nop
imul
inc
cli
lea
jge
aam
or
aad
aas
pop
xor
ds
mov
add
mov
fstp
add
mov
and
mov
(bad)
(bad)
jmp
cmp
fadd
pop
nop
pop
and
cli
sub
xchg
sbb
jae
xor
jnp
or
push
adc
mov
mov
loope
add
jecxz
mov
inc
inc
mov
sbb
adc
push
movq
add
popf
sub
cmps
icebp
adc
mov
pop
inc
dec
adc
aas
push
call
add
jle
jg
sbb
sub
adc
xor
inc
mov
sub
mov
and
pop
(bad)
imul
lds
or
dec
adc
adc
pop
jb
fisttp
mov
popa
adc
dec
imul
mov
fbld
inc
mov
pop
or
(bad)
cmp
xchg
adc
jl
mov
dec
add
sub
mov
add
mov
jbe
xor
pop
and
vmread
mov
xor
or
mov
sbb
mov
mov
mov
mov
imul
adc
inc
sbb
sub
cmp
ficom
nop
xchg
push
and
xchg
mov
pop
aas
mov
jne
and
je
and
jno
jmp
clc
inc
cmp
jl
icebp
inc
stc
sbb
inc
lds
sbb
mov
mov
sbb
cmc
add
add
xchg
cmp
jb
rol
jb
loope
push
jmp
pop
scas
(bad)
jb
inc
and
call
lds
or
sub
or
outs
call
pop
inc
cmp
and
push
lds
fisttp
jmp
adc
xor
not
mov
adc
enter
out
bound
inc
push
cmp
pop
in
shr
push
mov
stos
ss
hlt
ja
sbb
add
inc
icebp
aas
sub
sar
mov
clc
(bad)
dec
jmp
mov
mov
ret
pop
test
mov
inc
push
mov
jne
inc
and
sbb
mov
cmps
cmp
(bad)
dec
pop
das
inc
adc
adc
mov
mov
mov
(bad)
push
hlt
(bad)
lahf
dec
inc
add
mov
mov
jecxz
dec
js
add
adc
dec
fnsave
shl
icebp
adc
sbb
and
add
loope
cmp
push
or
jle
popf
icebp
dec
jg
push
jg
sbb
ins
add
dec
cmp
(bad)
push
ficomp
xor
push
push
sub
and
dec
sbb
mov
push
sbb
(bad)
ret
loopne
cmps
pop
cmp
data16
es
nop
stc
add
imul
xor
xor
idiv
xchg
imul
inc
sbb
mov
mov
ss
push
add
(bad)
lods
dec
cmp
ins
and
add
mov
or
cld
std
lahf
cmc
ret
xchg
out
inc
mov
or
ret
rcr
add
test
ss
and
add
xor
inc
rcr
adc
xchg
call
mov
cmp
(bad)
sbb
lahf
inc
je
or
jne
inc
mov
lea
shl
push
push
clc
cmp
add
mov
mov
mov
add
add
pop
movs
adc
mov
add
test
cmp
and
adc
je
out
aaa
outs
fiadd
and
je
adc
je
add
je
mov
dec
movs
sbb
retf
add
(bad)
lea
sub
mov
inc
mov
mov
mov
test
in
sub
(bad)
mov
dec
jne
cmp
sar
sbb
(bad)
add
lock
xchg
jl
inc
dec
aad
push
add
add
sub
xchg
stos
loopne
mov
(bad)
cmp
daa
cmp
and
(bad)
mov
lock
jg
mov
cmps
pop
sub
inc
cmp
jne
mov
mov
xchg
mov
sete
add
cmp
ja
adc
push
addr16
push
xchg
mov
xor
and
out
ret
push
mov
pop
push
mov
dec
sub
mov
jmp
or
jo
lds
inc
and
cs
pop
adc
or
lock
mov
sub
or
inc
adc
shr
mov
push
or
ss
mov
push
dec
adc
popa
cli
push
ret
adc
xor
test
pop
ds
jbe
add
dec
imul
mov
add
push
in
mov
js
add
and
jae
in
dec
jmp
and
and
cmp
pmaxsw
add
sbb
xchg
pop
call
test
add
pop
add
mov
mov
sbb
or
inc
in
sbb
xor
(bad)
jne
mov
mov
adc
or
mov
mov
scas
pop
add
mov
sbb
leave
adc
mov
pop
push
and
test
dec
rol
jmp
jnp
add
mov
sbb
cmps
(bad)
mov
push
test
mov
je
mov
stos
pusha
test
je
pop
(bad)
call
mov
jne
mov
call
xor
(bad)
in
sub
mov
dec
xor
inc
mov
pop
and
ret
pop
fnstsw
add
cmp
sbb
push
scas
and
test
cmp
fwait
imul
jmp
jmp
push
adc
fistp
xor
in
adc
inc
sbb
mov
outs
cmp
add
inc
pop
sub
aas
push
aam
sub
lea
mov
shl
js
test
jg
adc
ret
in
idiv
add
cs
(bad)
jg
add
loop
ret
lea
jmp
sub
in
add
sub
lock
fnsave
push
bound
dec
or
fwait
rcr
inc
add
adc
pusha
xchg
jl
mov
adc
dec
or
jl
xor
jne
or
jbe
lea
cdq
xor
and
or
pop
adc
enter
test
test
jl
add
or
mov
xchg
add
adc
ins
sbb
sub
pop
and
scas
or
add
pop
out
idiv
xchg
test
or
jg
out
jns
add
jne
add
mov
push
pop
pop
or
test
jmp
xor
inc
mov
xor
xchg
and
push
push
push
push
call
cwde
shl
push
dec
loopne
push
add
sub
jmp
dec
outs
xor
test
add
dec
ja
nop
jl
add
retf
icebp
call
mov
clc
or
xor
js
call
push
adc
xchg
adc
or
aas
out
sbb
cmps
in
and
jl
aas
pop
and
clc
outs
jmp
pop
mov
ret
cs
and
dec
call
lds
out
cmp
imul
mov
mov
jno
call
pop
dec
add
dec
fwait
popa
xchg
sbb
in
arpl
pop
inc
fs
and
stos
imul
xor
mov
cld
mov
bound
mov
mov
or
(bad)
(bad)
jmp
mov
leave
mov
mov
cmp
jl
lea
mov
mov
mov
mov
mov
sar
shl
mov
cmp
jmp
jecxz
and
rep
sub
and
mov
adc
cli
adc
mov
mov
(bad)
(bad)
mov
rol
movsx
cmp
jne
lea
xchg
movsx
inc
mov
cmp
je
mov
shl
xchg
xor
(bad)
sti
dec
imul
inc
dec
cmp
je
mov
mov
fist
mov
add
adc
adc
push
(bad)
cld
es
push
inc
cmp
jle
(bad)
cli
(bad)
inc
xor
dec
add
sar
in
or
rep
push
jmp
sbb
adc
nop
adc
outs
stos
pushf
add
call
push
mov
lea
lea
cmp
loopne
fstp
sti
(bad)
ja
and
aam
add
lea
js
or
fldenv
sub
cmp
inc
pop
inc
test
xchg
and
cmp
sbb
mov
inc
std
pop
adc
sbb
mov
pop
sbb
adc
loope
or
xchg
fild
cli
jg
adc
std
sbb
sub
aaa
cmc
mov
jne
test
jne
mov
push
adc
sbb
dec
add
inc
cld
jmp
inc
adc
cmp
add
cmp
bound
sbb
or
nop
je
push
sub
and
pop
je
test
jne
or
sub
ss
dec
and
jge
mov
popf
jne
inc
push
rcl
aaa
add
push
add
push
sbb
(bad)
aam
push
pop
enter
add
sbb
cmps
or
mov
sbb
mov
xchg
sti
jg
push
sbb
mov
mov
in
pop
mov
loopne
fmul
pop
jne
repz
or
or
lahf
jmp
jge
push
std
xchg
cmp
les
hlt
mov
or
pop
ret
mov
mov
dec
sbb
(bad)
mov
mov
repnz
(bad)
out
(bad)
sar
mov
shl
mov
lea
dec
and
mov
cmp
jle
shl
cmp
jge
push
inc
cmps
pop
es
div
dec
mov
mov
dec
sar
cmp
aaa
push
cld
and
in
or
xchg
(bad)
icebp
jg
adc
dec
jno
mov
and
push
or
mov
call
call
or
mov
ins
xchg
adc
ror
cmp
push
test
xor
push
push
test
dec
aad
adc
mov
inc
mov
pop
cld
xchg
inc
add
rcr
push
adc
jmp
lahf
push
inc
adc
xor
(bad)
add
mov
fsub
cmp
adc
fwait
mov
add
jne
cmp
leave
add
mov
cmp
jle
pop
lea
lea
out
add
xchg
sbb
add
pop
inc
ja
ins
adc
mov
xchg
mov
fstp
sti
sbb
push
mov
inc
cmc
lea
lahf
add
and
loop
popf
cmp
dec
and
add
adc
add
add
mov
faddp
add
adc
cmps
mov
sbb
mov
xor
pop
add
dec
or
ficomp
dec
and
adc
pop
jle
or
sub
sub
and
push
and
sahf
push
test
add
outs
add
inc
and
pop
hlt
mov
loope
or
or
xchg
mov
(bad)
or
loope
js
loopne
mov
cmp
mov
mov
mov
ret
(bad)
call
push
lea
mov
sub
inc
jae
mov
xor
jne
pop
les
test
jle
pop
lea
(bad)
jae
lahf
dec
cmp
add
sbb
out
mov
imul
je
sub
jp
ja
pop
jge
and
mov
je
rol
and
popa
lds
cmp
sub
dec
clc
mov
sar
jns
mov
lock
mov
xor
mov
jmp
mov
push
push
fadd
call
or
adc
test
ficomp
std
ja
jl
into
dec
test
je
cmp
jge
sub
mov
ins
mov
sub
or
(bad)
loop
ror
dec
and
adc
jge
mov
add
jmp
mov
add
and
jno
mov
lea
push
loope
xor
or
les
jle
dec
in
in
sub
mov
or
ror
sbb
xchg
rcr
ret
cmp
je
add
adc
fcom
mov
adc
or
cmp
mov
mov
jmp
cmp
jne
pop
test
inc
std
inc
jl
add
add
adc
lods
nop
and
adc
sub
jno
add
jmp
lds
xchg
in
aam
or
mov
popf
sbb
adc
xor
push
and
dec
mov
es
push
adc
inc
pushf
mov
add
sbb
mov
mov
mov
push
inc
fisttp
sub
add
fist
and
jnp
dec
pop
mov
pop
xor
ret
mov
sbb
or
mov
(bad)
dec
loop
add
mov
sar
add
mov
mov
adc
repnz
lods
outs
loop
xchg
jne
pop
pop
ret
(bad)
xor
adc
lods
aaa
test
loop
out
mov
xor
jl
ret
mov
test
stos
scas
push
or
push
mov
call
cli
jmp
popa
sub
xor
mov
mov
mov
jbe
add
mov
sbb
adc
bound
pop
xor
or
aaa
cmp
mov
adc
mov
shl
push
inc
cmp
jl
add
aas
sbb
in
lahf
jne
and
lds
ror
or
leave
cmp
mov
mov
scas
mov
adc
mov
(bad)
cmp
jg
cmp
jl
cmp
add
sbb
aam
lds
dec
cmp
(bad)
pusha
mov
sbb
cmp
je
xor
inc
dec
test
and
ja
mov
mov
movs
or
sub
pusha
(bad)
pop
fist
xor
inc
xlat
aas
add
push
add
mov
adc
(bad)
cmp
jg
lea
mov
xor
dec
in
mov
cmp
sbb
inc
inc
shl
inc
mov
adc
(bad)
pusha
ja
jle
test
ret
adc
mov
mov
mov
adc
in
cmp
call
jne
cmp
je
mov
jmp
or
mov
adc
xor
movs
inc
inc
int3
jno
daa
sbb
xor
lea
in
jp
mov
popf
inc
mov
leave
jne
xor
push
cmp
jbe
sub
mov
and
xchg
inc
mov
into
inc
dec
and
sar
lea
push
dec
adc
mov
sbb
adc
push
(bad)
mov
loope
or
ret
ret
sbb
adc
pop
movs
add
xor
mov
mov
mov
clc
or
inc
fisttp
pop
inc
enter
push
iret
clc
lds
and
push
push
mov
and
cmc
std
inc
sbb
les
cld
dec
mov
and
inc
aaa
inc
jl
sub
push
mov
push
dec
lea
lea
mov
frstor
inc
pop
sahf
clc
out
mov
or
test
js
sub
movs
mov
or
loopne
outs
mov
lods
inc
inc
outs
pop
pop
fstp
mov
or
xor
(bad)
cmp
mov
je
sub
add
dec
mov
clc
shl
mov
and
or
loope
inc
and
inc
ret
push
lea
or
pop
adc
or
dec
fadd
mov
xchg
dec
and
mov
add
and
stos
or
mov
and
daa
sahf
push
lds
adc
inc
inc
dec
loopne
and
mov
xchg
dec
(bad)
jecxz
into
pop
cmp
pushf
pop
pop
jl
xor
je
cmp
aaa
je
dec
xor
add
inc
mov
mov
and
(bad)
mov
or
movs
dec
pop
pop
mov
call
push
or
add
cwde
dec
(bad)
test
cmps
mov
inc
mov
pop
inc
jg
mov
data16
fcmovnbe
adc
ds
(bad)
je
mov
aad
dec
call
mov
adc
push
adc
dec
cmps
jmp
cmp
aam
mov
aad
and
shr
sbb
sbb
imul
ins
and
push
mov
cmp
pmuludq
push
(bad)
(bad)
ja
iret
mov
and
scas
es
push
sub
inc
sbb
inc
shl
pop
sub
icebp
sub
and
std
or
faddp
sti
add
inc
jne
sbb
cmp
movs
arpl
xchg
and
xor
ror
sbb
arpl
test
(bad)
rcl
push
push
jmp
cmp
jne
jo
lock
pop
and
sbb
mov
or
mov
cs
mov
mov
shl
test
mov
je
cmp
jge
sbb
sbb
sbb
call
xlat
sub
mov
or
(bad)
cli
dec
and
add
dec
cwde
adc
fld
dec
push
sub
mov
mov
mov
and
mov
(bad)
cmps
push
sub
pop
dec
pop
mov
mov
imul
xor
outs
and
pop
add
mov
loopne
scas
sahf
je
adc
xchg
or
mov
push
cld
sub
idiv
xor
inc
or
aam
lea
sub
sub
sub
mov
mov
jge
push
push
aas
or
rcl
push
dec
and
sub
inc
xor
mov
sar
test
je
xor
adc
push
aam
jg
loope
push
inc
add
cmp
sub
jl
sbb
mov
in
mov
or
mov
sbb
cmps
fadd
dec
or
mov
cld
xor
inc
add
nop
sub
std
and
lds
(bad)
sar
scas
inc
jns
add
xor
and
mov
pop
cmp
mov
mov
aas
cmp
or
add
and
add
and
jmp
sar
xchg
and
inc
xchg
sbb
or
jl
or
mov
and
(bad)
mov
inc
push
adc
inc
adc
pop
adc
test
cmp
jp
es
inc
and
mov
inc
sbb
inc
add
add
call
and
aas
inc
jmp
dec
clc
mov
sar
pop
mov
mov
xchg
cmp
jmp
mov
popa
imul
jb
add
test
jl
dec
pop
mov
xchg
dec
ins
or
unpcklps
std
add
test
aas
stos
enter
cmp
jge
push
popf
mov
xchg
xchg
add
test
mov
ror
and
dec
out
sbb
cmc
xor
popa
cmps
iret
push
lods
sbb
sbb
dec
jne
sahf
cmp
pop
idiv
pop
push
cmp
and
add
cmp
add
xchg
ror
pop
sub
jmp
test
cld
loopne
sub
(bad)
mov
sub
mov
push
test
jl
add
mov
jmp
sub
or
outs
mov
loopne
js
xchg
sbb
loopne
jo
cs
jle
jl
in
je
mov
es
(bad)
test
inc
mov
push
test
sbb
cmp
scas
(bad)
cmp
das
adc
mov
cwde
aaa
fcom
pop
cld
mov
and
je
cmp
jge
push
push
lea
scas
aam
and
aaa
add
cmp
dec
and
pop
jo
(bad)
cmp
push
fsub
movs
jbe
dec
or
adc
cmps
jmp
dec
and
dec
ret
(bad)
fisttp
mov
pop
inc
inc
je
pop
cmp
lods
test
mov
cmp
test
je
pop
bound
push
int
jge
push
jnp
stos
dec
xchg
add
mov
jae
jle
push
push
add
mov
push
ds
inc
inc
call
sbb
push
push
add
mov
dec
pop
mov
mov
add
xor
sbb
mov
cld
fsub
call
add
pop
sbb
add
jne
in
xor
pop
sub
jecxz
js
lahf
push
fisttp
stos
es
mov
in
sbb
cli
repz
dec
mov
add
push
push
sub
add
mov
push
cmp
and
mov
xor
stos
mov
stc
lahf
push
xchg
test
inc
cld
adc
(bad)
pop
pop
pop
mov
push
and
jp
xlat
aas
jno
adc
pop
adc
mov
fdivr
xor
lea
jnp
jg
std
aas
sub
clc
pop
ja
and
add
mov
(bad)
adc
jae
sbb
sbb
inc
dec
cmp
xor
pop
pop
cmp
cmp
pop
arpl
adc
mov
adc
jae
in
mov
mov
fmul
cmp
dec
test
ror
test
mov
mov
jp
in
bound
test
aaa
mov
jle
push
call
ds
mov
mov
add
mov
xor
mov
ror
mov
add
lock
fild
cmp
ja
fmul
fmul
fstp
jl
add
cmp
push
inc
inc
and
mov
outs
jmp
movsx
rol
sbb
(bad)
out
(bad)
inc
fld
add
sti
or
pop
cld
cmp
cmp
sbb
jns
xor
jmp
mov
dec
cmps
jb
pusha
or
ror
cmps
dec
push
or
mov
mov
pop
pop
fcomp
ret
mov
adc
std
mov
pop
add
dec
punpckhdq
pop
adc
mov
inc
mov
ficomp
or
mov
and
je
jae
retf
adc
daa
cdq
inc
inc
adc
dec
dec
mov
push
push
jl
push
js
les
imul
sar
mov
add
push
adc
or
cmp
loop
js
sbb
test
dec
fwait
mov
push
sub
mov
inc
dec
test
dec
shl
mov
mov
or
adc
mov
(bad)
test
std
pop
and
test
je
mov
and
es
jne
lea
cmp
call
fcom
adc
mov
inc
and
dec
add
std
inc
or
cld
or
mov
mov
ror
test
lea
test
mov
icebp
add
and
and
adc
push
scas
and
push
push
jmp
or
xchg
inc
lea
es
push
push
call
cmp
sbb
add
mov
lods
xor
cmovae
mov
lea
jne
test
in
push
push
call
inc
ja
or
inc
or
xchg
add
bound
inc
push
mov
sbb
push
rcl
fs
jbe
mov
mov
adc
lds
push
lea
push
in
dec
add
mov
les
add
push
or
enter
mov
pop
mov
inc
test
stos
jbe
aas
les
sub
push
push
mov
shr
ret
leave
lods
inc
add
xchg
push
push
push
lods
mov
adc
sub
sub
cmp
mov
lahf
mov
sbb
ret
call
xchg
test
pop
push
repz
xchg
outs
and
add
inc
jbe
fild
add
mov
mov
mov
cmp
ret
cmp
push
or
adc
push
loop
and
add
jp
push
call
mov
xor
mov
scas
mov
bound
inc
add
push
ror
test
jp
je
adc
popa
cmp
jle
je
je
adc
jp
cmp
jg
sub
mov
mov
jle
push
adc
xor
mov
bt
call
cdq
idiv
xchg
inc
sbb
dec
fistp
push
aad
enter
xor
and
sbb
(bad)
jne
mov
mov
xchg
sbb
clc
jne
cmp
push
mov
add
adc
cld
jecxz
mov
fscale
adc
cmp
mov
mov
inc
lea
cmp
jne
call
adc
mov
es
push
mov
mov
sbb
test
jne
push
jo
sbb
cdq
idiv
or
and
add
mov
inc
or
xor
push
dec
dec
cmp
test
xchg
adc
add
jmp
icebp
pop
add
cmc
mov
push
jo
jle
pop
add
push
push
push
push
add
mov
lock
les
push
lds
jl
xor
push
adc
ja
or
mov
(bad)
mov
pop
mov
mov
daa
sbb
sbb
call
sar
lds
jmp
sbb
sbb
jae
and
stos
test
sbb
inc
push
push
push
push
sbb
push
outs
push
sar
jb
retf
das
sub
adc
inc
inc
add
push
jge
mov
rol
cmp
and
jb
pop
mov
sub
cmp
js
mov
out
enter
inc
fdiv
jbe
mov
dec
sub
cmp
hlt
dec
inc
or
mov
popa
in
(bad)
call
mov
sub
add
mov
mov
mov
aaa
adc
jl
adc
add
add
or
adc
cmp
sub
retf
std
adc
push
inc
sbb
xor
add
mov
pop
xor
push
mov
cli
mov
nop
fidiv
sar
and
adc
and
inc
sbb
mov
mov
or
mov
xor
mov
add
cmp
jae
mov
inc
in
dec
and
jle
mov
mov
mov
mov
lock
inc
inc
push
(bad)
rcr
add
and
iret
test
mov
push
sub
idiv
cmc
jb
cmp
cli
add
mov
dec
jne
push
lea
push
pop
cmp
mov
pop
out
xor
or
sub
or
sysenter
sti
adc
icebp
xlat
add
mov
js
rcl
xchg
popa
add
add
or
push
mov
or
mov
adc
add
push
sub
or
push
dec
jo
xor
add
cmp
jae
mov
inc
mov
or
lahf
aaa
shl
and
mov
pop
and
cmp
or
sub
xor
cmp
push
xlat
pop
push
jae
loopne
or
out
(bad)
mov
mov
dec
enter
inc
dec
jo
push
add
add
sub
or
add
xor
sub
add
adc
lock
adc
cmps
cmp
xchg
mov
add
adc
ficomp
cmp
inc
push
les
push
or
and
sub
aaa
sbb
or
mov
(bad)
mov
inc
mov
lea
sar
mov
jmp
push
sub
mov
mov
push
ds
dec
or
adc
inc
dec
jne
mov
lahf
push
mov
mov
or
lea
sar
scas
or
cmp
add
xchg
stos
mov
jecxz
in
int
outs
int
pop
pop
push
leave
add
scas
rol
bound
mov
mov
cmp
inc
and
(bad)
sub
mov
add
add
xor
sbb
les
mov
cs
mov
loope
mov
adc
fadd
mov
mov
je
out
jle
xchg
mov
inc
add
mov
(bad)
(bad)
jmp
pop
push
add
inc
inc
jge
lea
imul
cli
lahf
sub
adc
out
inc
inc
lea
adc
inc
mov
sub
mov
je
mov
xor
fucomip
shl
push
mov
cmp
inc
inc
lea
neg
cli
adc
lea
cmp
inc
mov
mov
ss
div
xor
inc
sbb
and
xor
adc
lea
cdq
call
mov
arpl
stc
scas
and
mov
fild
xlat
dec
and
adc
xchg
pop
inc
cmp
jl
add
imul
ror
mov
pop
mov
mov
mov
add
in
jmp
leave
jle
add
and
mov
jle
sbb
je
lahf
and
lahf
xchg
jmp
or
jge
mov
mov
pop
rol
iret
dec
je
sub
je
cmp
loopne
or
push
and
add
mov
out
cmps
push
outs
add
clc
or
push
sbb
jae
add
pop
mov
cmp
add
loope
ss
clc
add
mov
xchg
cld
inc
push
mov
add
mov
jmp
rol
dec
cmp
mov
dec
js
(bad)
je
sar
aaa
fst
sbb
push
and
ror
sub
and
dec
add
inc
cld
inc
mov
push
jl
jl
add
mov
inc
inc
js
mov
in
fist
repnz
xor
inc
pop
scas
mov
nop
(bad)
mov
adc
add
push
mov
mov
(bad)
call
mov
mov
sbb
adc
das
fstp
mov
adc
cmp
push
xor
add
(bad)
(bad)
call
mov
mov
mov
mov
mov
sar
mov
mov
mov
inc
ret
(bad)
fild
add
cmp
(bad)
mov
fadd
add
adc
jmp
mov
add
push
push
add
rol
sbb
loopne
(bad)
push
inc
jae
jo
xor
jo
dec
sbb
add
dec
sub
inc
and
dec
adc
test
test
push
sub
xor
mov
xor
push
lea
out
mov
mov
mov
mov
xlat
sbb
fdivr
mov
imul
and
push
call
fisttp
xchg
mov
add
sub
sub
loop
shl
xchg
(bad)
pop
and
ja
loopne
xor
add
xlat
loopne
push
repz
mov
add
(bad)
cli
jg
mov
add
mov
mov
push
mov
push
and
sti
into
lock
outs
and
sbb
adc
sti
pop
mov
add
cld
xor
dec
mov
push
mov
jne
pop
mov
rol
aaa
inc
xchg
inc
jne
cs
jb
jg
push
mov
mov
push
nop
sti
aaa
mov
fst
shl
inc
push
push
aad
mov
push
sar
xor
mov
or
(bad)
out
sub
mov
add
test
jbe
mov
inc
mov
add
dec
jne
pop
in
mov
lds
bnd
jle
stos
loopne
mov
push
retf
inc
je
xor
sub
je
add
mov
adc
in
stos
adc
pushf
out
mov
push
mov
mov
in
and
daa
jl
test
out
imul
adc
out
inc
xchg
out
pop
pop
xchg
jae
inc
in
stc
cmp
dec
sbb
lea
dec
xchg
dec
outs
jo
loope
inc
mov
mov
mov
out
inc
mov
int3
inc
test
mov
push
inc
dec
jb
adc
or
cmp
clc
sub
push
adc
add
sbb
dec
and
add
sbb
adc
sub
mov
ja
mov
add
and
js
jecxz
mov
or
jmp
out
mov
pop
std
sbb
fisubr
pop
mov
inc
inc
mov
add
adc
sbb
mov
test
rcr
dec
sahf
dec
and
test
xor
push
nop
nop
push
std
rcl
and
xor
sbb
mov
mov
lock
push
add
jmp
js
scas
dec
jo
jnp
cmc
ja
sbb
inc
sub
inc
add
and
inc
or
mov
sub
cmp
mov
daa
fnstsw
in
pop
pop
ret
push
sub
xor
fdivr
push
add
ret
cmps
xchg
scas
mov
dec
mov
mov
scas
sbb
imul
sub
sbb
scas
sbb
and
pop
xchg
stos
fwait
scas
sbb
(bad)
or
add
jp
mov
call
dec
je
dec
icebp
xchg
mov
loopne
add
in
or
loopne
inc
es
mov
shl
or
cmc
xor
push
stos
cmp
pop
push
lea
lea
push
push
popa
xor
jp
daa
test
jle
mov
inc
sub
push
adc
cmp
jae
mov
aas
dec
jecxz
out
stos
and
inc
stc
fisubr
inc
call
sub
mov
jbe
mov
sub
fcom
inc
and
jmp
add
or
out
(bad)
mov
xlat
mov
mov
mov
mov
jne
inc
add
sub
out
sbb
or
icebp
cmp
and
lea
jge
cmp
push
push
mov
jmp
push
push
call
mov
dec
inc
mov
mov
inc
mov
and
(bad)
or
mov
or
lea
add
fcom
and
add
mov
mov
cli
pop
(bad)
inc
mov
mov
mov
mov
mov
mov
cli
(bad)
sbb
fdiv
push
jo
add
jmp
ja
sub
rol
adc
cmps
or
inc
jae
stos
ret
sbb
inc
ret
call
scas
add
sbb
add
mov
mov
mov
(bad)
adc
pop
cli
lea
add
or
sub
inc
inc
daa
add
sbb
mov
mov
mov
or
popf
adc
lock
test
adc
call
inc
jo
je
adc
cmp
xor
mov
stos
mov
sar
call
or
add
or
mov
mov
adc
push
and
mov
mov
pop
push
sbb
push
ins
sbb
pop
pop
cmp
push
ja
push
mov
mov
lea
sbb
mov
ds
(bad)
cmp
or
xchg
int3
cmp
or
jo
or
xor
add
jle
fs
xlat
pop
mov
inc
inc
inc
xchg
or
add
fadd
pop
cmp
sub
fld
cmp
sti
mov
cmp
mov
sub
cmp
mov
or
cmp
adc
call
mov
sbb
mov
mov
cmp
js
adc
push
cmp
inc
xor
adc
(bad)
sub
lea
sub
(bad)
cmp
popa
adc
pop
push
sbb
jns
push
mov
jmp
pop
add
iret
mov
adc
test
and
xor
stos
xchg
push
test
retf
pop
add
cmp
std
sbb
and
add
xchg
sbb
leave
xor
stc
sub
add
gs
std
mov
mov
cmp
leave
mov
pop
xor
fld
stc
add
or
mov
mov
sbb
rcr
inc
scas
or
iret
lahf
std
fist
ja
pop
push
ret
inc
add
inc
or
aad
xchg
jae
push
and
daa
mov
push
mov
mov
in
daa
mov
mov
adc
inc
pop
icebp
fs
dec
dec
les
mov
pop
mov
cld
jl
mov
add
xor
adc
or
cs
mov
add
add
nop
adc
pop
adc
pop
mov
add
aaa
inc
push
dec
pop
cmp
pop
jo
push
add
outs
cmp
adc
shl
mov
mov
sub
packssdw
or
pop
cmc
fistp
mov
mov
push
push
call
add
xor
loop
sub
leave
xor
mov
data16
jmp
mov
pop
das
sub
inc
dec
dec
jne
lea
lea
mov
sub
neg
inc
mov
mov
sbb
fimul
inc
cld
popf
and
retf
cmp
jl
int
dec
mov
mov
neg
lea
sub
mov
add
repnz
mov
jo
call
mov
jne
lds
cmp
mov
adc
add
add
inc
mov
scas
mov
sbb
les
or
int
push
mov
cmp
cmp
xor
ret
loopne
das
stos
push
xor
rol
fwait
inc
pop
aas
inc
mov
add
lea
mov
scas
sub
add
aas
add
jo
add
inc
and
sbb
push
cdq
sub
inc
sub
pop
bound
push
inc
sbb
pop
mov
adc
inc
mov
xor
outs
js
cmp
jmp
mov
pop
jecxz
loop
ror
jno
test
jle
xchg
adc
(bad)
sbb
test
jbe
mov
push
mov
add
call
mov
shr
shl
shr
(bad)
mov
or
(bad)
mov
inc
lea
mov
test
ja
dec
mov
or
xor
sbb
adc
cmp
shr
scas
pop
loopne
adc
test
in
add
push
jo
or
mov
adc
push
sub
push
xchg
dec
adc
sub
and
push
mov
mov
test
jbe
sub
repz
out
and
xchg
inc
mov
adc
jmp
inc
xor
mov
mov
shr
shl
add
inc
cmp
lea
pop
push
push
push
pop
sub
mov
(bad)
(bad)
mov
mov
inc
scas
sub
lods
cwde
adc
xchg
push
js
ja
adc
inc
and
jmp
pop
mov
add
leave
in
in
mov
and
push
sbb
sbb
push
push
mov
int
and
jbe
sar
sar
mov
xor
and
loope
xchg
shl
mov
out
aas
add
push
std
xchg
push
push
jmp
out
mov
lea
push
cmc
es
push
mov
outs
push
push
and
mov
rol
test
aam
add
cs
in
shl
out
bound
call
mov
cs
sub
mov
push
hlt
arpl
shl
add
jmp
inc
add
add
outs
mov
imul
dec
jne
add
dec
jne
adc
cmp
push
ret
mov
sub
dec
mov
or
jae
dec
je
mov
jg
pop
pop
ror
retf
ffree
or
lea
sbb
jne
add
add
inc
xor
dec
xchg
mov
fbstp
lea
lea
sar
sar
test
ja
stos
fiadd
and
cmp
adc
jo
mov
add
inc
call
sub
(bad)
push
in
and
xor
ror
ss
sub
add
stos
call
loop
scas
rol
inc
add
loopne
scas
sar
(bad)
(bad)
dec
jge
mov
sub
lea
mov
imul
add
sub
jmp
lea
xchg
scas
or
les
sar
(bad)
jg
rol
mov
xor
iret
pop
add
pop
sbb
and
cmp
mov
(bad)
enter
mov
fistp
retf
jge
xor
pusha
mov
sti
inc
jmp
cmp
jg
je
lea
cmp
std
sub
sbb
xchg
jne
sub
sub
inc
dec
xor
add
add
retf
outs
imul
sbb
adc
mov
pop
fcomp
ret
fs
cmp
fcom
mov
and
test
jle
mov
push
and
jns
loopne
call
mov
cmp
jg
mov
inc
inc
add
cmp
jl
jbe
les
cli
nop
add
push
xchg
push
mov
pop
xor
nop
mov
pop
inc
cmp
jle
sbb
pop
dec
xchg
jns
(bad)
pop
inc
cmp
jo
mov
rcl
js
jmp
mov
jp
adc
outs
test
mov
fcos
push
or
sub
xor
lea
mov
adc
loopne
mov
stc
fist
scas
stc
add
and
lea
call
add
ror
jl
lea
shl
shl
cmc
xor
add
loopne
icebp
je
and
xchg
scas
or
mov
adc
push
rcl
push
lods
jmp
push
jge
mov
mov
add
int3
inc
pusha
jp
mov
dec
jne
sbb
enter
and
ffreep
sti
out
out
std
sbb
inc
or
jne
and
clc
add
or
std
sub
jne
sbb
cmove
loope
jl
sub
jl
pop
pop
add
ret
push
push
ds
(bad)
sahf
jge
nop
pushf
std
sbb
mov
cmp
test
sbb
pop
sbb
xchg
sbb
add
add
ins
mov
ret
xor
je
or
xchg
inc
mov
sub
repz
inc
je
cld
inc
or
mov
mov
je
fisub
jo
xor
mov
js
or
dec
ret
fild
je
inc
ud0
inc
push
inc
dec
add
pop
mov
or
fadd
xchg
inc
xor
jp
jle
icebp
in
into
sub
fbld
xor
xor
cmp
jo
mov
adc
adc
dec
inc
std
aaa
cld
mov
lea
mov
dec
xor
cmp
xchg
adc
stc
add
adc
cmp
inc
and
mov
js
repnz
add
(bad)
fldenv
push
add
add
adc
mov
push
push
add
push
sbb
mov
pop
mov
mov
loop
call
xor
sar
mov
mov
sar
mov
inc
cmp
cmp
sar
ds
sbb
add
mov
jge
add
or
leave
pop
ja
push
push
push
mov
adc
xchg
sar
rol
sub
dec
mov
cld
dec
and
sub
hlt
arpl
mov
pushf
or
cli
jg
push
adc
into
add
add
add
mov
inc
xchg
and
imul
scas
clc
add
add
and
mov
or
sub
(bad)
cmp
sbb
retf
add
add
add
and
mov
int3
push
je
inc
js
push
fwait
call
add
pop
inc
jl
xor
add
dec
lock
call
jne
push
ja
outs
cmp
shl
je
cmp
pop
cmp
mov
or
or
sbb
retf
loop
dec
xchg
jo
xor
inc
jne
inc
or
pop
pop
fmul
mov
test
mov
inc
mov
ss
inc
test
(bad)
outs
mov
pop
int
or
adc
inc
add
push
jg
inc
ins
cdq
fstp
push
mov
dec
cld
push
dec
or
dec
adc
mov
mov
or
test
inc
ret
and
jmp
adc
ret
mov
mov
cmp
jl
mov
push
mov
shl
sti
mov
jne
mov
and
cmps
dec
xor
arpl
push
clc
and
ja
push
mov
mov
mov
and
adc
sar
rcl
fsubr
stos
mov
or
jge
rcr
xor
or
or
nop
gs
idiv
mov
sub
into
fld
add
lea
cmp
mov
test
(bad)
dec
mov
add
test
jne
inc
cmp
jle
adc
sbb
add
cmp
jle
or
in
mov
pop
inc
cdq
xchg
mov
out
mov
push
bound
cmp
jle
jmp
call
and
icebp
mov
icebp
je
xor
mov
sar
retf
ja
push
pop
and
and
jge
call
(bad)
and
aad
adc
mov
pop
je
or
dec
sub
and
and
jge
adc
popf
jae
lods
sub
cmp
jge
mov
loop
loope
sub
cmc
shl
test
adc
clc
jg
(bad)
inc
lea
mov
mov
or
(bad)
cmp
jg
sbb
pop
shl
test
jne
inc
cmp
sbb
xor
cmp
inc
mov
fcomp
add
and
jmp
call
xor
das
inc
(bad)
cmc
jg
xor
(bad)
jle
mov
mov
test
daa
ror
fs
dec
xor
sub
sbb
inc
or
jmp
lea
dec
dec
ja
and
add
cmp
jg
cmps
(bad)
ffree
and
mov
shl
lea
mov
cld
dec
push
cmp
ret
jg
shr
inc
add
or
and
inc
rcl
fidiv
dec
mov
push
mov
into
mov
and
add
and
(bad)
js
xchg
sub
lahf
push
cmp
jle
mov
lds
sub
push
jns
pop
pusha
push
ds
mov
add
mov
ja
jnp
jb
lock
(bad)
jge
jmp
and
push
test
adc
(bad)
fstp
cmc
sbb
(bad)
stc
mov
lea
mov
inc
stc
fs
outs
and
ja
imul
mov
shl
jg
add
cmps
mov
and
(bad)
icebp
(bad)
loop
mov
xor
cmp
jg
push
jecxz
scas
sbb
lea
jo
enter
sbb
stos
ja
ins
and
cmp
adc
mov
clc
inc
js
jg
(bad)
arpl
cmp
jg
lea
dec
je
inc
sbb
and
out
or
jne
dec
test
rol
push
std
dec
and
push
cmp
mov
add
cmp
push
push
mov
adc
jge
std
xchg
into
and
clc
jge
mov
and
xor
sbb
lea
inc
sbb
push
cmp
push
jg
into
ret
mov
push
add
mov
add
mov
lea
mov
ja
inc
mov
mov
mov
(bad)
adc
mov
mov
clc
jg
adc
cmp
adc
(bad)
mov
test
xchg
imul
or
jg
out
shl
cmp
jle
mov
dec
xlat
jle
(bad)
(bad)
call
sub
je
dec
je
dec
jne
mov
mov
add
cdq
sub
rcl
mov
inc
jae
sub
or
pop
cld
jmp
imul
add
neg
mov
jl
add
jp
dec
sub
ret
add
pmaxub
adc
mov
jge
and
ret
or
push
xor
push
adc
or
add
ficom
cmp
jle
mov
test
jle
lea
add
mov
mov
add
dec
jne
pop
clc
and
and
out
or
sbb
call
out
sbb
mov
cmp
mov
ret
jno
fst
icebp
dec
or
xor
jo
inc
push
retf
sub
fs
mov
adc
bound
mov
stos
sub
(bad)
fwait
push
xor
sbb
lock
call
add
sub
mov
(bad)
add
in
inc
jg
add
xor
mov
inc
push
mov
and
je
mov
adc
adc
scas
fadd
jmp
popf
ret
hlt
or
adc
lds
or
jnp
cmp
mov
cdq
sbb
ror
jne
nop
sbb
les
add
ret
inc
fisub
add
fst
jne
adc
sbb
adc
jl
jmp
sub
scas
stos
rcl
sub
jbe
mov
stos
and
add
dec
lea
sbb
push
adc
rcl
pop
addr16
push
add
sbb
mov
mov
push
or
sub
xor
add
(bad)
adc
adc
adc
pusha
nop
pop
pop
daa
push
sbb
sbb
aas
dec
adc
add
mov
pop
dec
mov
mov
sbb
inc
cmp
sub
aas
push
ds
pop
mov
add
cmp
add
or
aas
mov
add
push
push
mov
outs
mov
push
and
mov
or
gs
jne
adc
cwde
fdivr
out
mov
arpl
push
push
call
mov
adc
add
sub
je
mov
js
mov
ror
cmp
sbb
sub
adc
sub
and
mov
jle
xor
mov
xor
inc
(bad)
mov
adc
arpl
and
jecxz
(bad)
fistp
(bad)
leave
test
jle
mov
add
inc
cmp
mov
jl
dec
mov
jmp
clc
and
sar
adc
fiadd
adc
pop
cmp
push
mov
dec
sbb
fmul
gs
lods
mov
push
jl
pop
inc
and
mov
inc
mov
dec
adc
mov
dec
adc
iret
es
in
adc
and
mov
mov
(bad)
(bad)
jg
cmp
add
dec
dec
scas
ret
dec
jne
cmp
adc
stos
clc
jle
dec
cmp
xlat
jo
pop
jle
jg
inc
(bad)
jg
mov
mov
mov
rep
imul
dec
jne
fist
fstp
repz
pop
jg
jle
mov
ror
and
jns
in
push
and
mov
jmp
mov
sub
fwait
lea
mov
jne
imul
cmp
jg
jmp
sbb
mov
adc
fmul
sbb
mov
jmp
and
and
lock
jne
rcr
ins
jg
(bad)
sbb
or
lock
outs
add
pop
cdq
idiv
jne
mov
and
(bad)
call
push
mov
mov
sbb
call
or
add
add
sbb
or
or
dec
sbb
add
mov
jnp
es
push
call
cs
js
inc
adc
push
cmp
out
xor
push
std
lea
test
aaa
push
inc
and
inc
xlat
add
inc
(bad)
(bad)
frstor
mov
je
mov
mov
lea
add
or
fisttp
adc
push
push
push
push
out
fucomip
push
mov
enter
icebp
jle
cmp
mov
sbb
leave
enter
fbld
jne
mov
and
imul
mov
inc
cmp
adc
mov
in
jl
idiv
jno
mov
inc
mov
mov
cmp
fimul
add
inc
scas
jle
mov
cmp
std
pop
pop
and
pop
mov
rol
loop
sub
lea
nop
nop
out
pop
stos
clc
shl
dec
jo
lea
lods
pop
std
dec
jle
push
lea
mov
push
daa
lds
jp
mov
cs
out
and
inc
call
or
adc
daa
mov
sub
mov
dec
adc
dec
je
dec
je
(bad)
jg
sub
out
ret
mov
lea
cmp
mov
nop
fist
inc
std
out
jg
inc
jo
dec
test
jle
mov
pusha
cs
push
add
mov
mov
xchg
push
call
fld
mov
mov
cmp
push
cmovne
jp
dec
lods
cmp
jne
retf
pop
adc
or
inc
jbe
aad
(bad)
ret
or
dec
mov
mov
stos
xchg
pushf
ds
(bad)
push
lea
mov
movs
idiv
lea
cmp
je
inc
(bad)
call
sbb
or
or
retf
hlt
mov
rol
and
mov
jmp
xchg
pop
lahf
leave
push
call
jbe
mov
shl
test
sub
cmc
xor
xor
clc
mov
fistp
call
loop
ret
sti
inc
cmp
adc
(bad)
adc
fwait
hlt
jl
jge
nop
nop
pop
add
or
jb
push
push
push
mov
mov
jo
mov
sbb
and
or
mov
dec
and
add
shr
fyl2x
mov
xchg
sub
jge
jo
and
jbe
cmp
dec
(bad)
jle
jmp
sbb
ror
sbb
adc
add
inc
dec
jne
nop
test
jmp
cmp
push
cmp
(bad)
out
sbb
adc
push
jo
shr
data16
jmp
pop
pop
pop
pop
popa
(bad)
cmc
mov
lea
and
outs
adc
mov
xor
push
mov
push
mov
push
sub
sti
dec
jno
stos
inc
and
mov
mov
test
jbe
sbb
xor
faddp
out
(bad)
shl
leave
inc
mov
ret
fisttp
add
inc
je
mov
ror
push
ror
sub
jo
bound
js
loopne
pop
push
cmp
jne
fwait
lods
mov
add
jg
and
mov
push
aam
cmp
ss
xchg
and
setge
sub
iret
gs
push
sub
push
jbe
sahf
inc
mov
mov
lock
ss
push
ror
xor
mov
shl
mov
push
lea
cmp
push
in
je
adc
add
adc
pop
aad
dec
mov
add
add
xor
cmp
jbe
movq
sbb
pop
add
and
fimul
add
cmp
xor
add
inc
inc
and
sti
cmp
inc
in
mov
and
mov
sbb
aad
adc
rol
xchg
cmp
xchg
enter
sbb
add
mov
aam
and
lods
mov
adc
clc
lods
shl
scas
and
inc
das
dec
jo
rol
rcr
cmp
leave
mov
inc
aaa
sti
adc
cmovae
call
ret
std
cmp
ret
push
push
mov
movs
inc
call
mov
mov
cmp
push
push
or
cmp
push
shl
or
add
add
jg
and
hlt
leave
test
jbe
sub
sbb
add
sbb
adc
stos
mov
and
add
add
pop
adc
add
mov
inc
cmp
add
adc
cmp
pushf
inc
inc
xchg
sti
jae
adc
mov
sbb
shr
xor
icebp
push
inc
inc
inc
add
and
loope
push
adc
or
jbe
ret
add
xor
cwde
xor
inc
push
cmp
dec
popw
mov
and
scas
push
adc
jbe
jle
adc
popa
cli
jl
dec
sub
push
push
xor
add
(bad)
inc
mov
imul
inc
mov
inc
inc
and
xor
call
mov
add
pop
dec
and
je
jle
std
mov
add
imul
add
mov
inc
or
neg
fwait
mov
xor
inc
inc
std
add
aad
cmps
and
(bad)
sub
dec
sbb
addr16
or
cmp
sar
and
sahf
loopne
inc
int3
sbb
xchg
and
pop
xor
jle
cmp
inc
add
mov
inc
and
lods
push
call
mov
add
mov
pushf
mov
dec
sub
add
mov
lea
add
add
add
mov
inc
sbb
cmp
xor
xchg
mov
popf
outs
dec
ret
dec
jp
mov
lods
and
test
jnp
inc
cmp
jne
test
mov
push
mov
jl
sbb
jl
xor
sete
mov
sbb
cmovs
mov
xchg
and
aaa
adc
call
fimul
push
stos
jbe
loopne
push
and
xchg
and
jne
and
mov
or
dec
out
stos
and
inc
xlat
das
shl
mov
in
das
dec
xchg
jb
(bad)
sbb
mov
mov
lods
pop
add
mov
call
mov
cmp
jae
sub
jecxz
sub
retf
(bad)
ja
adc
or
sti
push
fiadd
and
inc
push
adc
std
lds
les
adc
push
or
and
push
pop
or
sub
outs
cmp
mov
mov
or
ret
mov
add
adc
xor
dec
sbb
xchg
push
iret
ror
fsubr
std
adc
paddusb
or
int
inc
cmp
les
cmp
mov
shr
push
je
add
iret
and
ja
lds
mov
mov
jmp
nop
and
sbb
fs
or
sbb
fs
xor
dec
mov
push
sbb
or
loopne
and
mov
or
sbb
inc
add
or
or
loop
js
std
and
or
add
xor
stos
mov
dec
add
call
inc
movs
and
shr
xor
out
xchg
sbb
leave
mov
adc
or
out
rcr
test
je
js
fdivrp
adc
sbb
jnp
xchg
rol
(bad)
out
jg
retf
clc
dec
add
or
xor
fcom
sbb
test
cwde
pop
add
pop
mov
retf
into
mov
repz
daa
add
sub
jmp
out
adc
cmp
add
popf
push
fld
xor
pop
and
mov
lock
sbb
or
pop
jne
and
sbb
adc
sub
cdq
sub
push
sub
mov
jg
enter
scas
sub
out
shr
adc
inc
or
ret
and
pop
jmp
ret
adc
xor
adc
outs
jo
ret
test
jne
mov
fdiv
push
mov
cmp
je
mov
cmp
cmp
cmps
pop
add
sub
ds
and
jne
xchg
push
and
addr16
or
add
loopne
ins
push
cmp
ins
xor
mov
adc
sub
dec
and
jne
pop
adc
inc
jmp
je
xor
dec
and
inc
dec
mov
mov
mov
mov
add
nop
inc
adc
jecxz
idiv
sub
pop
pop
jecxz
add
sti
adc
mov
(bad)
push
pusha
in
pusha
shl
inc
in
mov
(bad)
pusha
mov
ror
ffreep
icebp
outs
or
mov
sbb
xor
inc
xor
xor
aad
add
aas
add
or
add
mov
mov
movs
neg
mov
outs
dec
lock
dec
add
mov
int
inc
add
sub
push
add
push
dec
das
push
pusha
popa
xchg
dec
in
aaa
adc
mov
push
push
cmp
sti
pop
jbe
push
sub
mov
jo
push
push
jae
je
int
cmp
je
in
aas
mov
sub
adc
mov
add
push
mov
mov
or
add
ss
sbb
push
loop
add
adc
lss
(bad)
outs
nop
repz
add
out
ja
jecxz
add
in
add
add
inc
add
inc
add
call
mov
add
xor
mov
and
mov
sbb
adc
add
adc
outs
cmp
test
jne
xchg
pop
mov
cmps
push
sbb
ja
fwait
or
scas
aaa
and
push
push
adc
mov
fidivr
sub
push
push
inc
sub
sbb
add
(bad)
(bad)
ja
stos
pop
ret
cmp
je
cmp
jne
pop
inc
mov
mov
(bad)
push
js
ins
popa
sub
or
and
mov
mov
adc
push
xor
mov
cmps
jmp
push
call
pop
pusha
xlat
add
je
pop
mov
mov
push
pushf
sbb
xchg
mov
push
inc
mov
lea
inc
dec
mov
jne
cmp
jne
jbe
mov
xchg
or
std
or
mov
mov
cmp
mov
sbb
xor
mov
cmp
jmp
cmp
jne
inc
add
cmp
jbe
mov
sub
rcl
cmp
shl
xor
(bad)
mov
mov
cmp
jne
dec
sub
cmp
jne
cmp
pop
add
ja
sub
push
add
mov
(bad)
jmp
shl
cmp
jae
lea
sub
js
inc
rcl
adc
dec
mov
repnz
and
dec
or
js
fcom
sub
add
jns
std
or
add
push
mov
jnp
call
xor
dec
je
xor
add
dec
dec
mov
mov
loop
pop
xor
mov
cmp
or
and
ja
fcom
mov
adc
loope
sbb
mov
mov
dec
mov
aas
mov
neg
mov
mov
scas
loope
pop
mov
xchg
and
nop
cmp
and
cmp
fwait
sbb
cmp
(bad)
cdq
or
gs
dec
dec
popa
add
test
data16
out
dec
test
adc
test
jmp
lods
mov
ret
and
or
cmp
xor
push
jmp
dec
gs
sbb
fld
int
inc
mov
sub
dec
cmp
jbe
mov
rol
inc
add
cmp
jbe
out
and
jg
loope
add
add
mov
add
push
jmp
(bad)
adc
mov
mov
mov
cmp
out
out
and
cmp
pop
mov
or
in
aaa
push
popa
sbb
icebp
inc
and
sbb
je
mov
shl
jno
mov
dec
mov
adc
or
and
faddp
shr
mov
icebp
(bad)
fild
inc
sub
mov
mov
jmp
cmps
mov
ror
adc
or
mov
(bad)
aas
sbb
sbb
ror
mov
jb
mov
mov
dec
mov
inc
sub
icebp
jae
cmp
ds
and
add
xor
jmp
sub
and
jle
lods
shl
mov
or
mov
ret
xor
and
call
enter
inc
adc
call
jae
pop
push
jo
loop
lea
xor
jno
(bad)
repnz
jno
add
and
push
jmp
mov
je
xor
shr
test
jne
add
in
or
sets
in
mov
lea
xor
dec
and
cmp
je
ficom
dec
sub
sub
(bad)
cmp
or
jne
std
add
ror
cmc
jo
inc
adc
ror
test
mov
cs
inc
aam
sub
jecxz
(bad)
mov
mov
xor
cmp
je
fidiv
out
mov
in
or
mov
adc
jb
inc
(bad)
add
lods
into
nop
outs
jp
sbb
push
push
push
inc
popa
add
push
and
add
jne
xchg
add
add
dec
and
inc
or
xor
sub
push
push
std
ror
push
push
icebp
add
jne
jo
adc
outs
jmp
and
sub
fbstp
adc
xor
inc
rol
push
push
lea
push
ja
add
fadd
cmp
mov
or
mov
push
call
inc
and
in
jne
mov
push
push
and
sbb
mov
push
cmp
inc
sbb
test
push
hlt
add
mov
cld
je
cmp
enter
push
sub
sub
push
inc
mov
test
and
sbb
mov
(bad)
fnsave
dec
and
mov
adc
rol
push
icebp
fld
inc
adc
add
dec
inc
dec
sbb
push
loop
mov
cmp
jl
push
hlt
sbb
mov
mov
sub
cmp
pop
call
sub
ja
and
jne
add
add
add
mov
mov
mov
mov
aaa
(bad)
adc
push
call
mov
test
jae
mov
push
adc
jmp
add
rep
test
loopne
pop
dec
sub
std
push
jl
adc
test
mov
test
stos
fwait
jb
push
add
scas
mov
mov
adc
xchg
sbb
mov
inc
pop
test
int
fld
lds
pop
int3
pop
sbb
sbb
push
jnp
push
test
not
mov
sbb
push
or
add
mov
icebp
xor
lea
dec
jne
in
add
test
clc
add
add
xchg
adc
add
ret
stos
and
or
add
jb
mov
cmp
jle
jle
push
push
mov
shl
mov
push
or
jg
div
mov
or
mov
(bad)
(bad)
(bad)
jo
mov
mov
mov
adc
mov
into
pop
shr
add
lock
fdiv
mov
pop
pop
mov
jge
add
shl
or
add
mov
mov
or
push
or
add
stc
ins
js
jmp
add
push
mov
test
jle
data16
push
cmp
cmp
add
sub
aas
push
nop
in
lea
add
mov
in
push
jmp
inc
mov
add
or
add
call
retf
jmp
lea
mov
lea
cmp
ja
sahf
test
aaa
inc
je
je
inc
and
and
idiv
iret
cmp
mov
inc
and
pop
mov
vmovdqu
sti
dec
or
xchg
out
mov
or
ud0
mov
inc
retf
retf
mov
mov
mov
dec
inc
mov
retf
call
push
cmp
(bad)
mul
xchg
adc
loopne
or
sub
and
fld
jle
mov
or
popf
mov
push
add
aas
imul
mov
shl
or
mov
or
fcomp
inc
mov
sub
mov
out
sub
mov
loopne
(bad)
push
mov
(bad)
mov
pop
(bad)
mov
mov
clc
dec
adc
in
sbb
xchg
mov
jl
push
add
push
sahf
stos
sbb
sub
add
jb
adc
add
loopne
or
aad
mov
mov
mov
or
mov
mov
xor
aaa
jno
bound
enter
xchg
add
mov
jle
mov
data16
and
mov
mov
jp
jno
inc
mov
mov
mov
loope
test
add
push
mov
(bad)
jg
push
loop
jl
xor
pop
cmp
jge
inc
mov
inc
inc
mov
adc
add
mov
mov
fist
je
inc
dec
add
xchg
cmps
ja
fadd
mov
pop
jl
mov
cmp
sti
and
cdq
sub
mov
sar
cmp
jl
push
push
xlat
lock
adc
mov
mov
adc
add
mov
sbb
mov
push
mov
(bad)
adc
mov
add
adc
jnp
dec
dec
mov
mov
mov
mov
push
dec
mov
mov
mov
add
(bad)
inc
mov
mov
push
cmp
jb
sbb
stos
sahf
jmp
ja
les
mov
adc
rol
mov
mov
add
add
fstp
pop
sub
add
lea
cmp
or
lods
ret
dec
cmps
mov
mov
mov
cmp
imul
push
dec
add
fimul
mov
add
je
sbb
lods
mov
push
mov
dec
adc
clc
dec
sub
jge
mov
and
(bad)
fild
mov
cmp
jb
jne
mov
pop
pop
adc
cmp
ja
lahf
adc
mov
call
adc
jmp
and
and
cmp
jle
shl
mov
jle
js
pop
in
cmp
jne
pop
dec
(bad)
inc
nop
pop
jns
mov
add
xor
and
push
xor
mov
adc
push
lock
mov
mov
push
cdq
retf
xchg
xor
stos
loopne
jmp
mov
rep
mov
mov
jmp
je
add
(bad)
push
jge
and
xor
sti
sub
add
or
adc
mov
mov
dec
mov
mov
inc
cmp
jle
and
inc
aaa
pop
adc
into
popa
mov
pop
cmp
jg
aam
inc
mov
into
jl
mov
sub
mov
mov
add
(bad)
enter
imul
add
sbb
xor
push
pusha
mov
(bad)
adc
daa
add
mov
pop
out
lods
jmp
stos
mov
test
or
jg
retf
push
lea
cmp
fcos
pop
jne
sub
dec
cmp
je
call
add
jae
adc
sub
test
jg
test
mov
je
int
pop
inc
lahf
loop
adc
add
xor
push
loope
lea
sub
or
xor
sub
(bad)
(bad)
sti
dec
iret
push
cmp
je
mov
sub
or
mov
scas
call
(bad)
test
or
ds
test
jne
ss
mov
dec
stos
pop
mov
jne
sub
(bad)
lock
inc
fdiv
outs
or
in
and
pop
(bad)
(bad)
dec
and
push
lea
sub
push
mov
loopne
jmp
add
clc
shl
mov
dec
mov
jne
test
jl
pop
out
mov
add
dec
add
mov
test
dec
or
inc
add
mov
add
stos
cmp
add
fld
inc
push
outs
aas
mov
and
xor
cmps
sub
loope
loopne
neg
sub
mov
outs
ret
test
ffreep
xchg
nop
hlt
aam
add
jne
dec
adc
daa
lock
add
jg
dec
inc
adc
rol
fcomp
or
xor
push
mov
push
or
ja
(bad)
cld
adc
mov
mov
xchg
stos
push
jno
out
sbb
(bad)
inc
cwde
push
(bad)
dec
mov
inc
push
mov
ffreep
aas
cld
sbb
add
inc
cmp
pop
shl
dec
add
pop
cmp
je
sti
mov
inc
cmp
jg
or
mov
xlat
std
mov
xchg
test
jne
sub
cmp
clts
jmp
popa
fnstenv
xchg
jmp
stos
(bad)
sbb
lds
loopne
add
(bad)
mov
mov
add
pop
jle
mov
rcl
push
fwait
cmp
jle
leave
pop
cld
pop
add
xchg
adc
test
(bad)
cmp
mov
adc
mov
pop
lea
cmc
mov
add
xchg
pop
pop
xchg
fnsave
in
mov
jne
lea
push
push
test
outs
enter
or
inc
cld
add
xchg
add
jle
cmp
jle
leave
and
xchg
cmp
(bad)
xor
test
jle
or
or
xor
mov
or
xchg
xchg
mov
xchg
sub
xchg
sub
imul
test
std
jl
rol
vpcomud
mov
and
aad
(bad)
out
mov
inc
xor
dec
add
mov
pop
add
fist
inc
and
sbb
test
dec
sub
xor
push
mov
xchg
mov
nop
mov
cld
cdq
out
adc
jmp
fild
mov
cmp
ja
jge
cmp
dec
inc
out
jmp
jge
lods
and
jmp
cdq
sub
cmp
jle
xchg
std
mov
shl
mov
or
aad
mov
cmp
mov
inc
stos
sbb
mov
mov
iret
icebp
test
sti
sbb
push
int3
and
sbb
mov
and
into
mov
mov
jmp
push
test
fmul
mov
add
add
ins
and
je
sbb
mov
test
jae
pop
xchg
rcr
aas
sub
mov
(bad)
fstp
pop
add
xchg
loopne
add
xchg
ds
pop
push
cmp
xchg
loopne
(bad)
repnz
mov
(bad)
js
pop
cs
cmp
cmp
sub
add
jg
dec
add
js
inc
cmp
push
arpl
mov
or
mov
ds
fcom
sbb
mov
adc
add
xor
adc
arpl
xor
add
xor
xor
ret
pop
(bad)
mov
rol
or
imul
jecxz
nop
and
mov
mov
jecxz
aaa
inc
jl
adc
cli
add
stos
and
loope
or
push
add
xor
mov
es
ins
and
push
push
test
je
mov
jge
push
(bad)
cmp
mov
jns
sbb
inc
test
mov
adc
cmc
mov
xchg
add
xchg
idiv
into
jle
leave
je
add
outs
adc
push
or
mov
inc
mov
pop
mov
cmp
data16
ffreep
xchg
xor
lea
mov
dec
test
pop
add
adc
call
test
mov
add
sub
out
loope
sbb
mov
int
jno
and
or
xor
xchg
loopne
add
pop
adc
mov
(bad)
fmul
inc
mov
jmp
push
dec
adc
cwde
add
mov
iret
cmps
retf
shl
and
or
pop
popf
adc
scas
retf
mov
mov
or
or
mov
test
je
retf
or
add
dec
add
fidivr
rcl
sti
retf
jle
mov
mov
jmp
push
xor
mov
cmp
jae
xor
mov
iret
shr
addr16
ror
cdq
jno
and
fwait
xor
and
fcomip
mov
popf
pop
sbb
(bad)
cmp
jle
hlt
push
popf
add
xor
mov
mov
icebp
and
and
sbb
movlps
jecxz
and
sbb
adc
out
stos
xchg
mov
or
scas
stc
mov
or
jno
mov
lods
adc
test
scas
iret
(bad)
and
lock
xchg
mov
push
jmp
sbb
mov
ja
retf
and
add
add
dec
inc
bound
ret
xchg
add
mov
xor
cmp
leave
sbb
push
pop
mov
mov
or
adc
inc
out
pusha
xor
lea
cmp
push
gs
dec
jne
push
lea
dec
mov
mov
add
add
sbb
repnz
jge
mov
mov
cli
(bad)
(bad)
fild
mov
rol
dec
jne
shr
cmp
pop
setbe
mov
pop
xchg
xchg
xor
jg
stos
(bad)
(bad)
inc
xor
mov
and
or
shr
shl
dec
test
jg
shr
pop
mov
push
push
mov
cli
or
mov
jg
jo
mov
push
aam
pop
mov
daa
(bad)
cli
adc
leave
mov
mov
dec
push
std
or
mov
mov
xor
test
retf
push
lds
loope
lahf
mov
clc
in
imul
and
add
xchg
je
xchg
add
cli
push
or
std
pop
rol
pop
mov
inc
not
mov
mov
jle
mov
not
xor
inc
mov
mov
mov
cmovno
and
pop
popa
mov
dec
test
je
(bad)
iret
adc
(bad)
jg
sub
mov
mov
mov
inc
inc
dec
mov
jne
pop
adc
or
dec
lahf
sub
inc
test
mov
fbld
shl
jno
push
push
mov
mov
imul
xor
mov
mov
push
adc
inc
or
jns
and
sub
inc
jo
pop
inc
ins
popf
xor
cdq
sub
jmp
inc
pusha
push
adc
clc
or
(bad)
(bad)
mov
mov
shl
add
mov
mov
mov
mov
stos
clc
icebp
inc
pusha
mov
mov
cmp
xor
das
add
inc
movsx
(bad)
(bad)
std
and
and
mov
imul
lea
or
(bad)
(bad)
jmp
add
lock
lea
shl
add
movsx
lea
lea
shl
sub
lea
(bad)
(bad)
(bad)
call
lds
mov
shl
add
shl
sub
lea
mov
dec
push
movsx
mov
rol
lea
sub
out
shl
lea
(bad)
dec
jae
lea
sub
mov
js
xchg
and
and
mov
cld
(bad)
(bad)
mov
scas
xchg
movsx
imul
mov
imul
mov
mov
imul
sub
lea
add
mov
lea
jmp
mov
sub
and
fisttp
mov
pop
add
fwait
shl
add
push
sbb
lea
pushf
es
shl
(bad)
jmp
and
sbb
pop
sub
shl
lahf
out
inc
sub
shl
sub
movsx
mov
shl
sub
add
push
loopne
(bad)
jmp
mov
imul
(bad)
out
fnsetpm(287
sub
xchg
dec
and
mov
imul
lea
js
in
xor
frstor
and
sti
sub
fist
add
aam
outs
mov
clc
add
add
fwait
mov
jnp
lea
add
inc
aam
inc
add
lea
sbb
pop
clc
cli
pop
rcr
and
lods
sbb
sub
jg
add
clc
or
retf
xchg
std
cmps
push
cmp
std
or
mov
cmp
imul
neg
or
daa
mov
dec
call
dec
xor
mov
and
sar
daa
jns
out
icebp
xor
and
xor
jmp
stc
cld
(bad)
(bad)
cmp
inc
sbb
jge
push
jo
xchg
mov
je
ss
inc
and
and
or
xchg
and
and
add
mov
push
sti
mov
mov
mov
or
pop
adc
sbb
(bad)
call
sbb
add
xlat
or
jne
mov
add
sar
and
inc
mov
add
inc
add
add
clc
inc
push
mov
mov
push
add
pusha
inc
(bad)
adc
shl
sub
out
adc
sbb
rcr
mov
fmul
cmp
shl
fidivr
add
inc
or
out
sbb
mov
lea
or
out
jmp
sub
fist
cli
fld
stos
scas
add
add
popa
stos
lods
mov
lahf
cdq
sbb
and
lds
mov
jb
test
dec
sub
shl
or
pop
sbb
fcmovnb
add
call
fadd
mov
jnp
call
or
js
cmp
mov
int
jecxz
retf
lea
add
sub
inc
cmc
cmp
ret
add
sub
sar
stos
ds
rol
inc
and
mov
aad
sbb
pop
lahf
mov
pop
and
clc
sbb
(bad)
or
sar
xor
push
and
mov
mov
test
sub
(bad)
xor
add
xadd
xor
mov
sub
(bad)
mov
inc
xchg
lock
sub
jg
shl
and
mov
mov
outs
or
outs
(bad)
xor
(bad)
mov
in
outs
xor
inc
push
cli
test
std
(bad)
(bad)
cmp
sub
mov
add
sahf
adc
ror
mov
push
push
mov
jb
mov
push
call
sar
push
and
mov
dec
sub
sbb
jl
mov
jl
mov
jae
sbb
xor
out
movups
or
add
sub
or
or
cmps
cmp
mov
dec
scas
cmp
mov
mov
mov
mov
mov
mov
leave
sbb
es
add
inc
dec
imul
mov
mov
call
js
imul
movsx
mov
pop
sub
lea
sub
and
dec
fisttp
das
shl
sar
sub
repz
outs
loopne
retf
cmp
sub
push
pusha
loopne
gs
ins
xor
push
arpl
les
in
imul
(bad)
cmp
jns
fidivr
adc
imul
mov
xor
sub
mov
mov
aad
adc
adc
mov
shl
sub
sub
ins
or
std
lea
lea
sub
fiadd
neg
sar
sbb
sar
jg
inc
adc
sub
add
lea
lea
add
test
(bad)
fnstenv
fisttp
adc
push
sbb
pop
and
sar
test
adc
jmp
dec
loopne
scas
cwde
lahf
dec
cmp
sub
dec
js
jg
xor
cwde
sbb
icebp
mov
cmps
adc
push
pusha
push
xor
jecxz
adc
js
push
inc
das
rcr
dec
ficomp
jne
loope
push
push
xor
or
loope
mov
add
mov
mov
bound
pop
or
add
adc
adc
push
sbb
imul
adc
and
inc
mov
mov
or
add
cmp
or
or
adc
adc
jmp
sub
mov
mov
mov
loopne
push
add
add
push
add
push
pop
inc
cld
jg
add
mov
lea
sub
mov
lea
sub
lea
lea
lea
lea
shl
sar
sub
sub
lea
sub
(bad)
ds
pop
mov
xor
pusha
inc
in
vunpcklps
or
and
add
cli
aad
daa
sbb
retf
mov
dec
and
and
frstor
sub
lea
lea
sbb
retf
add
fsubp
and
or
push
sub
cmp
push
or
loop
xchg
pop
add
lahf
retf
loop
xor
rcl
rcl
lea
sub
mov
mov
ror
adc
add
sti
add
test
sar
xchg
mov
scas
cmp
pop
pop
lea
sub
sub
cs
rcr
and
adc
xor
stc
push
sbb
mov
mov
fwait
cmp
sub
sar
pop
out
(bad)
pop
in
or
mov
lea
adc
jmp
std
(bad)
std
add
in
mov
and
adc
inc
pop
arpl
cdq
add
pushf
and
(bad)
rcl
dec
xor
test
add
jo
mov
pop
(bad)
pop
out
or
stos
mov
add
xor
sbb
call
in
(bad)
pop
xchg
add
jo
push
add
lea
out
jnp
movsx
and
mov
fst
fst
fst
fst
fst
rcl
fld
mov
jae
mov
mov
cmc
mov
adc
and
inc
fdivp
dec
xor
fld
fldcw
pop
test
adc
leave
fldcw
getsec
inc
loopne
fmulp
movsx
and
adc
sar
aaa
fstp
ret
sbb
leave
fsub
fxch
fstp
fld
fadd
ja
(bad)
pop
sub
or
sbb
das
inc
and
cmp
xor
adc
rcl
test
inc
and
pop
push
jl
sub
ins
inc
pusha
adc
mov
jp
or
dec
or
adc
fs
pop
sbb
adc
sbb
adc
mov
sub
pop
sbb
or
fisttp
fsubr
daa
dec
adc
adc
out
mov
ret
sub
adc
or
(bad)
xor
inc
adc
arpl
fstp
xor
mov
jp
sub
sub
pop
and
fild
ret
or
scas
mov
cwde
enter
and
cwde
add
push
and
inc
fs
loope
loopne
cmps
and
inc
(bad)
jb
ficom
and
test
and
cmp
sub
mov
(bad)
fld
fadd
fld
fsub
push
std
out
rol
fld
fadd
fld
fsub
jo
xchg
loope
xchg
sub
xor
pop
and
and
mov
(bad)
pop
and
fld
fadd
add
cld
cmp
mov
jmp
adc
inc
pop
and
rol
adc
and
push
addr16
mov
xor
loope
in
cmp
mov
xor
retf
sbb
xor
push
pop
or
loopne
pop
add
clc
add
adc
mov
sbb
add
mov
sub
sub
rcr
inc
lahf
mov
fs
sbb
jmp
ja
outs
pusha
cmp
and
cmp
sbb
sbb
sbb
out
add
ror
or
push
retf
or
aam
stc
mov
cli
push
loopne
out
push
sub
test
(bad)
mov
xlat
adc
dec
pop
add
outs
daa
pop
adc
xchg
sbb
jl
add
add
mov
shl
aas
adc
iret
add
sub
mov
push
add
mov
and
scas
add
xor
mov
sub
imul
mov
adc
or
scas
mov
sbb
aad
or
adc
mov
or
fisub
(bad)
(bad)
(bad)
call
or
or
test
jne
movsx
imul
shl
mov
mov
mov
mov
push
shr
jns
or
xor
lea
imul
mov
add
sub
mov
push
jge
mov
mov
in
sub
sub
shl
lea
add
and
loopne
sub
cli
retf
lea
sub
mov
std
retf
lock
mov
push
and
mov
retf
mov
scas
jmp
mov
mov
movsx
shl
mov
sub
imul
imul
adc
(bad)
push
adc
sub
add
push
sub
mov
add
cmp
lea
lea
xor
in
add
out
pop
sbb
in
cmc
lea
(bad)
jmp
mov
sub
adc
push
adc
add
(bad)
loop
sbb
sub
lea
jmp
(bad)
push
int
or
add
test
push
clc
or
inc
loopne
(bad)
push
or
xor
mov
sar
sar
shl
sub
aas
inc
(bad)
and
rol
mov
aaa
cmp
test
sar
and
(bad)
es
sub
ret
pusha
jae
mov
sbb
add
adc
dec
ja
or
mov
shr
xor
mov
or
stc
cli
(bad)
es
or
or
mov
or
pop
sub
bnd
mov
cmp
push
scas
inc
adc
hlt
jg
dec
movsx
mov
movsx
dec
sub
mov
push
test
pop
sub
sub
shl
lea
add
push
sub
fisttp
inc
and
movsx
sbb
loopne
jl
mov
sub
movsx
mov
cld
or
jmp
ror
sbb
sub
cmps
pop
add
mov
push
mov
add
lea
stc
mov
add
je
adc
add
add
add
sar
mov
in
mov
mov
lea
jmp
xrelease
sar
add
sub
cmovg
scas
mov
mov
dec
and
loope
ret
pop
arpl
adc
mov
mov
(bad)
arpl
out
add
mov
sub
xor
push
mov
or
bound
push
or
jp
call
cwde
pop
lea
sub
cmp
je
sub
and
or
test
mov
push
jnp
loopne
cmc
or
or
loope
fcomip
mov
or
div
imul
shl
mov
fisub
popa
mov
nop
cmp
imul
push
pop
mov
add
shl
out
lea
add
xchg
xchg
scas
aad
mov
mov
xchg
lea
mov
add
repnz
dec
pop
shl
sub
mov
fwait
aad
sar
imul
fst
adc
sub
lea
shl
jle
lds
adc
lea
dec
dec
mov
sar
mov
pop
add
push
dec
adc
jg
jp
(bad)
jmp
push
rcl
pop
test
pop
add
jno
push
mov
mov
add
or
jne
mov
fwait
(bad)
jg
out
add
mov
int3
adc
xor
repnz
sbb
movsx
shl
adc
and
mov
movs
call
sbb
sbb
fisub
or
adc
sub
xor
(bad)
dec
add
mov
adc
(bad)
cli
sbb
adc
cmp
pop
mov
stos
mov
inc
pop
add
adc
cli
sub
aas
pop
xchg
lock
das
and
push
lds
or
dec
push
data16
je
jl
and
mov
pop
and
iret
clc
and
adc
stc
add
mov
imul
sub
pop
rcl
sub
xor
add
cmp
sbb
inc
add
call
inc
inc
sbb
or
xrelease
jmp
mov
sub
cmp
mov
ret
push
lock
push
and
adc
scas
retf
xor
mov
mov
shl
pop
push
aam
add
or
inc
push
jb
sbb
xor
retf
mov
lea
test
je
dec
add
jmp
adc
test
jne
outs
ror
dec
add
add
cmp
test
xor
fnstcw
sub
jb
mov
jb
std
retf
shr
cmp
mov
mov
mov
jae
and
xor
out
push
je
xchg
cmp
jae
icebp
pop
jg
ja
cmps
adc
shl
or
inc
cmp
aaa
add
div
mov
dec
(bad)
sbb
cli
inc
out
sbb
add
mov
sub
ret
sub
pop
cli
jg
fcomp
mov
adc
fldcw
fidivr
fbstp
mov
sub
sub
push
inc
mov
push
sub
call
sub
sub
mov
call
sub
idiv
fbstp
sub
out
sub
inc
pop
out
loope
jne
xchg
sbb
mov
and
arpl
and
mov
add
sbb
aaa
sbb
cmp
adc
cs
jb
cmp
jb
push
adc
aad
mov
lock
shr
cmp
mov
ror
and
sub
stos
ret
sbb
cmp
call
inc
std
jmp
adc
ret
mov
mov
aas
sub
pop
add
enter
dec
adc
mov
inc
xor
jnp
add
adc
test
je
dec
jno
mov
pop
add
cdq
sub
mov
push
ret
in
call
nop
call
push
push
adc
std
nop
nop
mov
bound
not
punpckhbw
and
arpl
pop
and
pop
pushf
adc
add
ror
or
ret
or
lahf
jae
or
sub
pop
ja
gs
push
adc
sbb
dec
outs
mov
mov
add
fdivr
mov
jb
out
into
in
ss
add
xchg
adc
or
and
fild
adc
sbb
jbe
adc
pop
scas
xor
push
or
sbb
in
test
push
and
pop
dec
(bad)
call
fisttp
or
add
fimul
mov
mov
cmp
inc
into
nop
push
es
adc
mul
add
adc
or
outs
add
mov
pop
mov
xlat
enter
rol
and
adc
xchg
fsub
mov
fmul
add
aas
push
cmp
push
cmp
jg
test
rcr
push
call
ret
jmp
push
xchg
mov
push
mov
test
jne
or
mov
or
inc
pop
adc
cli
ficom
inc
or
sbb
ret
out
mov
mov
mov
mov
test
jne
or
mov
xchg
mov
cmp
jnp
or
ds
scas
or
mov
mov
scas
push
mov
fwait
push
retf
adc
aas
mov
mov
and
scas
(bad)
mov
push
mov
lea
jbe
sbb
out
fmul
mov
push
cmp
adc
sbb
and
add
mov
dec
and
jno
in
loop
mov
mov
stos
outs
push
test
mov
mov
xchg
add
ror
test
adc
call
mov
call
sub
mov
dec
xor
sbb
inc
mov
push
mov
push
call
test
push
add
mov
js
push
push
enter
cmp
clc
xchg
push
xor
fimul
or
inc
add
or
adc
outs
sbb
adc
ja
out
mov
push
push
mov
test
addr16
mov
repnz
ja
out
xchg
sbb
mov
sub
je
mov
jae
lea
pop
dec
adc
or
ret
in
shl
push
lea
idiv
mov
cmp
mov
xor
ja
sbb
xchg
jecxz
inc
retf
cs
je
cdq
or
shl
imul
push
test
test
jne
cmp
inc
cwde
mov
imul
mov
xor
stos
shl
jecxz
sbb
mov
or
xchg
dec
push
push
add
mov
std
sbb
pushf
dec
add
sbb
div
(bad)
sub
push
push
call
mov
ret
jnp
add
xor
sbb
pop
jg
push
cmps
pop
xchg
push
lea
push
push
inc
pop
jecxz
call
mov
mov
or
ror
add
add
jmp
jmp
mov
or
dec
cmc
enter
mov
outs
pusha
(bad)
push
mov
sbb
test
or
mov
adc
ret
add
mul
or
cmp
cmc
lds
xor
jg
dec
adc
js
pusha
jg
sub
dec
or
hlt
sysret
push
jge
dec
addr16
int
arpl
sub
dec
push
mov
xchg
pusha
mov
xor
(bad)
aas
lds
setne
mov
loopne
loopne
(bad)
and
cdq
push
and
inc
push
push
pushf
push
ins
neg
xor
daa
pop
out
push
sbb
(bad)
mov
mov
jnp
mov
and
rol
test
inc
sbb
sbb
xchg
add
adc
and
leave
mov
adc
dec
clc
inc
xchg
sub
jp
inc
adc
popf
into
adc
arpl
fild
push
push
push
call
mov
out
(bad)
ja
sbb
push
clc
inc
push
push
push
push
adc
mov
inc
push
push
push
ret
loopne
ret
or
mov
mov
mov
push
mov
pop
push
jmp
pop
mov
mov
xchg
nop
push
daa
inc
or
push
mov
push
ja
(bad)
push
(bad)
cmp
mov
mov
mov
je
cmp
je
test
add
dec
int3
mov
es
dec
add
cld
mov
mov
(bad)
mov
inc
call
mov
call
xor
push
jp
paddb
idiv
adc
add
push
sbb
and
dec
unpcklps
inc
push
lea
push
lea
push
mov
lea
in
outs
and
mov
cmp
je
mov
mov
(bad)
mov
mov
test
push
sbb
sbb
add
dec
call
dec
in
push
mov
sahf
xlat
xor
mov
dec
or
add
pusha
std
pop
jecxz
inc
cld
push
enter
out
(bad)
xchg
in
ret
xchg
in
push
push
mov
push
xchg
lods
adc
mov
cmp
add
jne
jne
test
pop
loope
ficomp
dec
lea
dec
push
lea
ss
jne
idiv
or
dec
ror
(bad)
jg
pusha
in
mov
mov
push
lea
push
push
push
push
jle
(bad)
add
lods
pop
mov
call
fisttp
pop
int3
enter
pushf
gs
jg
adc
ss
dec
push
push
adc
xor
mov
dec
pop
inc
sar
xor
and
lea
push
lea
leave
push
push
push
push
mov
pop
mov
lea
jns
out
fistp
test
jle
inc
cmp
jbe
sub
jmp
mov
jmp
pop
cmps
mov
dec
xchg
ficom
dec
fcom
dec
clc
scas
mov
xchg
adc
sub
sub
mov
shr
inc
mov
movs
test
inc
fmul
push
(bad)
mov
add
push
shl
mov
(bad)
cmp
mov
mov
add
loope
adc
pop
int3
mov
je
outs
imul
pop
adc
(bad)
aam
hlt
pop
pop
xor
jmp
retf
pop
jmp
mov
cmp
add
jo
sub
rcr
sub
mov
add
movs
and
sub
(bad)
add
ficom
retf
xchg
jmp
jle
and
mov
sti
ficom
ja
push
js
pop
rol
mov
dec
cmp
mov
inc
aaa
cmp
jge
push
add
push
inc
and
sbb
mov
add
mov
or
add
adc
inc
or
lea
mov
inc
or
hlt
pop
dec
add
call
xor
lahf
icebp
push
dec
call
adc
inc
add
mov
dec
mov
or
nop
nop
dec
and
push
mov
fnstenv
cmc
add
push
mov
inc
dec
jne
push
test
dec
pop
pop
js
dec
add
call
fs
jb
add
jae
aam
call
inc
jmp
xor
mov
cmp
jl
cmp
je
sub
or
out
inc
test
mov
pop
lea
mov
and
aaa
add
mov
cmp
jge
inc
push
add
jae
push
mov
dec
pop
inc
rcr
push
sahf
and
sti
fistp
mov
mov
jbe
push
or
and
or
js
je
ror
adc
clts
pop
fcmovnu
xchg
and
mov
push
(bad)
(bad)
mov
push
jno
lea
cmp
jb
lea
or
jae
mov
pop
sub
sub
cdq
and
inc
xor
inc
clc
or
inc
xor
mov
pop
dec
push
add
sbb
push
xchg
je
sbb
es
add
test
jle
xor
jno
lea
cdq
and
std
outs
mov
mov
push
push
sbb
out
sub
lods
stos
pushf
push
pop
adc
(bad)
and
pop
aas
aaa
jo
(bad)
push
mov
push
test
outs
jle
mov
mov
mul
enter
rcr
push
push
push
adc
push
mov
cld
repnz
pop
jne
inc
sub
mov
pop
pop
pop
mov
and
aaa
push
adc
mov
test
je
test
jne
push
jnp
inc
mov
shl
ret
xor
mov
xchg
push
and
fsubr
fwait
and
mov
lock
je
mov
sbb
pop
or
cmp
jle
cmp
adc
or
(bad)
cdq
lock
stos
jbe
and
icebp
adc
lock
sar
push
push
out
sbb
push
and
sub
add
popf
mov
add
mov
add
push
ret
mov
and
aas
in
inc
or
clc
js
or
push
pop
jl
push
and
sbb
sbb
push
and
adc
cwde
sub
push
int3
jge
(bad)
into
push
push
add
push
ret
pop
je
scas
mov
je
or
and
lea
ror
loopne
or
push
mov
push
pop
out
fiadd
adc
repnz
pop
push
test
repnz
call
inc
or
push
mov
jg
mov
lea
rep
lea
ss
iret
mov
ja
shr
movs
add
mov
cmp
sub
dec
into
mov
mul
sub
mov
push
lea
bound
push
inc
mov
inc
in
mov
fs
pop
xor
add
or
push
pop
jl
mov
push
fistp
and
jmp
pusha
cli
out
or
mov
inc
mov
adc
out
mov
fadd
sti
add
jg
pusha
loopne
mov
inc
mov
mov
jbe
call
or
and
shl
mov
mov
gs
push
inc
cld
(bad)
out
sub
lds
inc
add
mov
mov
jne
inc
add
xor
adc
xchg
je
inc
mov
outs
xor
push
mov
loope
jno
mov
inc
pop
mov
test
push
bsr
shl
lds
sub
out
xor
mov
inc
dec
jne
push
ins
adc
mov
in
mov
cli
add
in
nop
mov
std
addr16
xor
aad
and
adc
mov
cmps
mov
push
xor
jp
cwde
add
pushf
jnp
inc
cmp
cmp
sar
pop
(bad)
psadbw
and
mov
sub
ffree
inc
inc
xor
popa
xor
sbb
in
call
scas
push
or
jae
sub
les
aas
out
push
je
lods
dec
fldenv
scas
mov
sub
add
call
sub
test
xor
cmp
setne
mov
add
cwde
jae
inc
add
jbe
or
jmp
xor
ficomp
push
jge
mov
or
dec
icebp
ss
or
add
add
mov
push
jg
mov
mov
sar
mov
or
rol
fdivr
mov
ficom
ror
inc
mov
iret
or
add
and
repz
repnz
jbe
les
test
mov
sbb
add
stos
and
push
sub
outs
pusha
and
icebp
daa
and
dec
leave
pop
add
add
jg
dec
dec
out
sub
pop
sub
push
inc
and
mov
fwait
jge
mov
xchg
push
add
xor
(bad)
iret
adc
cmp
add
retf
push
and
mov
shr
push
sbb
inc
mov
jmp
clc
pop
jne
xchg
sbb
mov
push
out
or
push
push
push
jns
jp
sbb
add
cmp
sbb
aam
rcr
test
inc
(bad)
neg
push
test
jae
pop
mov
pop
inc
(bad)
out
aaa
mov
lea
jg
xchg
int3
dec
sbb
inc
and
jmp
inc
sub
xor
inc
mov
mov
cmp
dec
mov
mov
mov
jmp
ins
inc
push
stos
cmps
mov
and
jbe
out
mov
movaps
popf
imul
fist
mul
pop
cwde
nop
sub
mov
inc
or
add
inc
add
and
das
or
inc
call
sti
std
mov
mov
or
inc
or
call
leave
je
lea
sti
sub
add
dec
jne
mov
dec
fstp
adc
lea
or
mov
and
or
xchg
jge
rcr
mov
or
and
iret
adc
sbb
in
dec
sbb
data16
and
and
jo
pop
iret
daa
adc
pop
out
and
das
or
movs
push
add
dec
dec
and
fdiv
or
dec
add
sub
test
mov
pop
and
mov
dec
push
(bad)
mov
push
nop
push
dec
and
or
jmp
mov
or
and
into
daa
in
lea
jl
pop
push
addr16
adc
ins
sbb
or
(bad)
lea
imul
(bad)
push
push
lea
sub
pop
mov
inc
mov
adc
xchg
and
xchg
adc
xor
cs
mov
xor
cmp
jle
push
push
sbb
cs
js
mov
ins
call
cmp
jl
xor
pop
mov
cmp
int3
ret
aam
daa
call
pusha
push
jmp
ffreep
jp
xor
sub
je
dec
je
dec
jne
mov
add
sbb
mov
add
dec
ficom
aas
aaa
das
pop
and
sub
sbb
call
xchg
push
daa
xor
(bad)
jmp
sub
mov
je
dec
je
dec
jne
cld
inc
and
adc
push
jo
pop
pop
and
dec
ror
push
out
mov
adc
add
je
mov
jmp
mov
mov
or
mov
cmp
add
and
jmp
inc
adc
push
and
(bad)
sub
mov
cmp
sbb
push
adc
inc
jnp
or
cdq
loope
xchg
shl
and
stos
or
and
push
sub
mov
mov
mov
test
es
add
pop
mov
fs
jmp
in
rcl
cli
mov
adc
xor
mov
ror
adc
sub
and
pop
add
loop
ror
push
mov
mov
mov
adc
add
test
ja
mov
imul
sub
sar
sbb
push
push
add
add
jno
sar
sbb
ins
and
dec
adc
add
adc
or
push
mov
inc
or
call
retf
push
mov
and
inc
sub
out
(bad)
push
outs
cli
add
sub
movs
push
sub
jge
cmp
xchg
sub
daa
mov
jne
and
jb
inc
fxch
dec
dec
cmps
dec
into
(bad)
push
push
stc
fild
sahf
jb
in
xor
sub
and
or
gs
jmp
add
sahf
popa
mov
add
les
jmp
adc
and
mov
gs
and
and
mov
int3
or
mov
jmp
inc
in
push
fwait
adc
push
xchg
nop
pop
inc
xbegin
add
js
outs
or
mov
push
mov
cmc
ss
cmps
dec
retf
pop
add
mov
scas
mov
loopne
add
jge
xchg
imul
push
ins
dec
and
push
lds
or
sbb
jle
jmp
(bad)
and
sbb
mov
jp
and
mov
or
cmp
inc
mov
pop
nop
sbb
or
mov
push
push
push
iret
inc
sub
inc
pop
jecxz
sub
or
mov
adc
xchg
xchg
mov
inc
sbb
(bad)
cmp
adc
push
adc
out
add
inc
pusha
pop
icebp
pop
push
cmp
je
and
and
mov
cmp
and
jne
cmp
dec
and
xor
mov
or
pop
inc
test
sub
lods
cmps
movs
fwait
adc
hlt
cdq
xor
fidiv
adc
jmp
xchg
sbb
nop
or
popf
faddp
int
and
push
lea
test
(bad)
xor
cdq
sub
into
stos
mov
adc
lahf
inc
and
ret
sbb
clc
scas
cmp
inc
test
sbb
and
or
cs
test
mov
mov
and
add
xor
and
sub
inc
jg
or
xor
icebp
mov
xor
lea
or
ror
adc
jnp
shr
mov
adc
test
xchg
push
xchg
add
cmps
dec
pusha
jle
stos
push
mov
push
xor
mov
clc
scas
mov
mov
jne
or
sub
fisttp
idiv
(bad)
adc
movs
mov
xor
and
rep
lea
and
es
dec
or
fst
fnstenv
mov
pop
test
jne
push
call
outs
mov
add
pop
or
les
fwait
adc
inc
inc
aas
mov
sub
dec
sbb
stc
xor
push
push
lea
or
inc
xor
adc
adc
and
out
loopne
call
fld
test
add
mov
mov
add
and
popa
and
fdivrp
pop
sub
ret
mov
daa
jl
push
adc
mov
pop
push
jo
or
(bad)
out
(bad)
cmp
and
sub
dec
jns
xor
inc
adc
iret
lea
jge
push
fwait
ins
push
daa
(bad)
dec
test
outs
clc
int
hlt
test
je
imul
out
(bad)
adc
or
jne
push
sub
dec
fnsave
sub
push
inc
mov
call
or
push
sub
sub
ror
xchg
push
inc
add
fnsave
add
cmp
loopne
and
push
mov
push
cmp
cmp
adc
sbb
cli
test
lea
jl
cmp
jb
cmp
je
(bad)
dec
mov
lock
(bad)
inc
jmp
(bad)
fnsave
loopne
xchg
and
inc
les
out
daa
add
mov
jmp
scas
fs
adc
aam
mov
add
add
sub
sub
mov
add
add
adc
push
out
cli
or
add
inc
xor
mov
cmp
or
jg
and
mov
add
cmp
mov
jae
fsub
fdivr
ror
mov
mov
sub
dec
dec
mov
cmp
(bad)
(bad)
js
and
dec
cmp
ja
mov
mov
mov
test
je
cmp
ja
mov
inc
and
push
(bad)
push
push
dec
fwait
cli
out
push
cmp
je
mov
or
(bad)
out
clc
or
mov
dec
push
jmp
mov
lea
(bad)
(bad)
(bad)
inc
ja
mov
mov
lea
jbe
mov
ss
pop
inc
xchg
icebp
push
add
xor
jbe
inc
add
aaa
cld
call
and
lea
cmp
jae
jae
add
lock
out
mov
andnps
(bad)
push
push
fsub
push
mov
xchg
mov
aad
imul
arpl
adc
cmp
test
rcr
sbb
lea
push
mov
cmp
bound
setg
mov
or
cmp
daa
ret
push
jno
push
ja
pop
mov
xor
and
or
ins
jmp
sub
adc
cmp
je
sbb
sbb
and
pop
xor
jg
cmp
jne
std
or
jae
or
mov
and
push
dec
cmp
adc
(bad)
and
add
xor
pop
push
add
mov
dec
and
inc
or
aad
add
into
mov
xchg
les
jns
pop
xor
out
das
enter
adc
sub
sar
in
or
jmp
inc
add
jne
cmp
jmp
mov
jmp
add
dec
dec
sbb
push
mov
shl
add
(bad)
or
or
fstp
push
shl
pop
xchg
mov
adc
adc
shl
pop
add
sbb
fld
not
test
je
mov
lock
out
mov
cmp
test
inc
push
je
mov
cmp
into
sub
in
cmp
inc
fnstcw
cwde
ja
xor
mov
mov
dec
and
jne
lea
dec
std
mov
mov
xor
aas
jl
imul
inc
(bad)
shr
or
out
jg
ins
cmp
jge
mov
shl
mov
lea
sbb
jg
lods
(bad)
lea
repz
shl
push
cwde
and
sar
cmp
jge
pop
js
pop
mov
cmp
push
(bad)
adc
add
cmp
pop
adc
pop
mov
sbb
dec
or
shl
cmp
addr16
idiv
ret
into
leave
enter
cmp
ror
add
push
mov
adc
jo
cmp
mov
and
push
add
sbb
mov
add
shl
rol
sbb
push
mov
mov
aad
scas
mov
shl
popf
inc
inc
daa
pop
xchg
ret
je
rcl
(bad)
push
jl
mov
xchg
inc
test
je
push
jecxz
add
jecxz
pop
add
iret
nop
int
or
pop
mov
push
inc
adc
mov
adc
or
cmp
clc
arpl
xor
cmp
jne
sti
cmp
jmp
mov
mov
sub
add
outs
or
lea
or
inc
or
adc
cli
mov
fbld
stos
or
jmp
xchg
daa
cmp
jle
mov
lea
sub
xor
rep
inc
inc
and
cmp
loopne
inc
in
and
push
lea
or
xor
ret
ret
add
and
push
or
cmp
jl
fs
xor
push
and
movs
mov
scas
fmul
push
or
dec
push
pop
pusha
fiadd
lds
sub
pop
(bad)
push
pushf
test
pop
cmp
test
lock
ss
rol
add
sbb
ins
and
mov
out
cmp
je
pop
xchg
jne
dec
dec
fcom
mov
jo
or
dec
adc
shr
fistp
iret
jne
lea
packuswb
test
pop
(bad)
ja
fadd
movs
(bad)
sbb
movs
popf
stos
or
jo
dec
push
adc
mov
or
aam
and
(bad)
sbb
dec
mov
imul
rcr
fcom
inc
mov
jp
lods
xor
xchg
ror
jle
mov
stos
mov
dec
clc
aam
cmp
adc
jp
sti
pop
pop
push
daa
mov
dec
jne
pop
pop
inc
push
shl
or
pop
outs
sbb
inc
add
lahf
or
lahf
cld
xchg
cmp
ret
mov
mov
adc
and
push
aas
int3
xor
clc
fwait
cmp
iret
sub
sti
xor
aas
xlat
cmp
cmp
mov
pop
(bad)
std
jg
cmp
jle
push
push
push
push
call
add
push
std
and
push
sub
repnz
shl
add
add
fsubr
jo
cmp
sbb
add
stos
pop
add
and
push
push
push
icebp
cmp
push
aas
in
pop
add
bound
lds
and
jg
fmul
je
mov
dec
adc
pop
or
adc
or
test
sbb
adc
out
je
mov
add
inc
cmp
adc
push
inc
ins
(bad)
popf
leave
xchg
push
lods
sbb
or
push
inc
aas
in
add
sub
or
xor
mov
dec
mov
sub
nop
nop
fwait
mov
mov
or
test
inc
jo
pop
pop
lea
add
and
mov
xor
add
or
add
add
aas
cmp
cld
push
xor
(bad)
enter
push
or
inc
or
clc
scas
xor
loop
or
xor
sbb
rol
mov
(bad)
inc
and
push
push
ds
jg
push
inc
push
mov
mov
mov
call
(bad)
add
fistp
inc
call
add
add
mov
push
pop
daa
mov
mov
push
push
shr
cmp
jecxz
jae
dec
je
mov
das
mov
imul
cmp
call
sahf
sub
maskmovq
test
push
pop
in
push
jo
rcr
sub
push
movs
dec
js
pop
pop
pop
lahf
rcr
add
cmp
add
and
and
mov
jp
sbb
add
or
es
fbstp
adc
add
push
dec
sbb
ret
push
out
cs
stos
xor
rol
add
add
pop
fst
je
adc
push
cmp
add
pushf
sbb
inc
pop
dec
jmp
or
hlt
shl
int3
jns
mov
xor
ficomp
mov
repz
lahf
or
jae
lahf
jo
sbb
jo
sub
jo
xchg
ret
dec
push
push
rcl
das
xlat
or
push
leave
std
add
int
push
fs
add
or
retf
or
scas
adc
jno
jp
scas
and
jne
sub
or
mov
add
xor
push
aad
or
out
sub
and
dec
xor
sbb
mov
jb
sbb
add
dec
mov
mov
call
xlat
push
inc
aas
shr
aaa
mov
add
push
dec
into
adc
ret
jo
or
and
mov
push
adc
and
(bad)
sub
mov
loope
int3
fadd
fcom
sbb
xchg
xchg
adc
rcl
lock
jne
xor
rol
cmp
enter
cmp
mov
call
ret
push
aaa
aad
add
xor
inc
mov
pop
out
add
and
jp
push
mov
nop
push
inc
mov
sbb
shr
je
mov
(bad)
ffreep
mov
mov
je
inc
push
mov
mov
or
pop
mov
jne
push
push
push
push
push
mov
aaa
xor
(bad)
clc
jne
mov
push
push
and
icebp
das
loop
call
add
shld
iret
add
dec
dec
mov
or
mov
pop
mov
push
inc
ins
(bad)
xor
scas
(bad)
out
mov
add
add
(bad)
mov
imul
push
mov
cmp
shr
mov
mov
add
xchg
pop
or
push
pusha
test
je
mov
aaa
shl
(bad)
aas
loop
add
push
inc
or
lea
retf
adc
int
nop
mov
and
add
xor
xchg
pop
push
pop
jno
adc
or
inc
mov
cs
sbb
push
push
adc
add
leave
(bad)
mov
test
jle
idiv
jmp
push
mov
xor
add
push
call
add
push
mov
or
inc
shr
lock
jne
pop
mov
or
push
(bad)
pop
and
add
neg
mov
cmp
inc
push
test
jbe
sbb
pop
add
add
sbb
push
cmc
cmp
inc
fwait
bound
fwait
add
xor
test
jbe
push
mov
cdq
fidivr
(bad)
mov
pop
test
pop
jne
test
je
loopne
push
add
add
mov
or
pop
adc
ss
add
cmps
dec
inc
add
push
dec
rol
or
or
inc
out
add
or
add
(bad)
aam
xor
xor
xor
cli
jmp
or
ret
mov
cmp
mov
cs
aaa
mov
jmp
dec
(bad)
outs
and
clc
adc
repz
sub
popa
adc
inc
add
test
mov
ret
mov
or
and
mov
inc
push
push
out
xor
cmp
cmp
cmp
cs
or
or
push
mov
rcr
mov
add
rol
push
sbb
xlat
popf
mov
or
dec
leave
pop
jno
test
pop
gs
clc
and
pop
iret
mov
lds
push
aam
mov
ds
pop
dec
in
add
push
sbb
clc
adc
add
pop
xor
cmp
(bad)
dec
cmc
scas
sub
dec
mov
jne
inc
or
jmp
mov
sub
push
fst
loope
push
pusha
jmp
clc
or
or
push
push
adc
test
pushf
call
sbb
cmp
jmp
or
fnstsw
xor
mov
sub
ds
pop
or
pop
add
xor
daa
or
ficom
test
imul
out
inc
or
fisttp
iret
push
push
cmp
xchg
dec
pop
dec
inc
jg
mov
cmp
dec
lock
in
ss
and
sbb
or
mov
sbb
imul
pop
or
dec
jg
inc
mov
jmp
fbstp
adc
fidiv
push
sbb
shl
in
ds
xor
aad
push
aam
gs
jge
je
sbb
push
inc
inc
push
jne
aam
outs
cmp
cmp
push
cmp
nop
jo
(bad)
not
mul
xor
xchg
xchg
dec
or
push
cmp
sbb
pop
cmp
inc
jo
pop
add
mov
mov
cs
shr
push
and
(bad)
mov
outs
sbb
je
outs
add
mov
push
mov
cmp
mov
rcl
and
lods
jmp
inc
sbb
pop
cmp
jne
or
xlat
dec
sbb
es
push
push
push
mov
mov
rol
retf
nop
mov
pop
add
mov
mov
and
inc
and
jg
int3
or
call
int
mov
cmp
jne
or
dec
cmp
add
xchg
stos
dec
add
mov
adc
iret
add
push
cdq
iret
dec
jb
push
sub
ds
mov
popa
gs
jg
mov
sub
or
add
dec
hlt
mov
ja
dec
gs
jl
cmp
fstp
push
inc
push
lock
clc
aaa
inc
or
leave
sar
dec
push
push
add
es
or
dec
cdq
retf
jae
and
ret
pop
rcl
mov
mov
aas
in
shl
cmp
cs
push
jg
push
and
(bad)
mov
test
or
add
ret
rcl
popa
sub
adc
dec
mov
nop
xor
inc
out
rcl
xchg
xchg
mov
xchg
fdiv
push
adc
dec
push
xchg
or
dec
push
or
mov
rep
mov
push
test
or
add
aad
inc
push
inc
mov
jl
inc
cwde
pusha
jb
into
xchg
jae
test
cmp
call
cmp
and
push
clc
adc
push
test
push
jne
mov
jg
cdq
adc
fidivr
repz
mov
xor
call
setne
add
mov
das
add
add
test
jne
test
loope
imul
je
dec
adc
lock
mov
add
out
pop
cmp
mov
mov
dec
push
out
push
in
or
adc
jbe
bound
add
dec
pop
mov
adc
aaa
pop
push
push
lea
and
enter
jle
pcmpgtd
jmp
jb
adc
sub
outs
ja
xchg
les
sub
(bad)
jne
push
(bad)
push
push
gs
mov
and
cmp
jne
mov
call
lea
imul
fwait
xchg
es
mov
test
fild
mov
lea
pop
jmp
sub
mov
add
xchg
sub
sbb
jg
add
mov
ja
fistp
inc
or
cmp
fmul
cmp
dec
retf
inc
and
push
and
mov
mov
mov
add
out
sbb
add
dec
and
aaa
lea
fcomp
pop
retf
inc
sub
hlt
out
push
mov
jmp
pop
inc
sub
inc
cmp
jbe
inc
mov
mov
and
ror
outs
fxch
std
or
fstp
cmp
sub
or
inc
or
or
or
and
shl
mov
add
jnp
adc
pop
add
shr
iret
inc
test
push
or
cmc
aas
mov
add
mov
mov
ret
call
xlat
pop
sub
mov
rol
cwde
pop
xor
inc
add
lods
and
xchg
sub
stos
xchg
jbe
push
mov
rcl
mov
pop
and
das
push
mov
mov
push
push
lea
and
jl
dec
pop
inc
daa
lahf
dec
push
cmp
add
fild
push
push
push
push
call
cmp
jne
idiv
and
sbb
add
xlat
push
cmp
mov
push
(bad)
pop
or
ins
adc
mov
fmul
push
data16
mov
and
ins
adc
pop
int3
cmp
adc
xchg
out
mov
ja
push
lea
pop
add
mov
loop
jmp
add
add
clc
add
mov
fisttp
add
pusha
push
add
imul
pop
push
add
fwait
dec
and
dec
mov
shl
inc
lods
xor
je
lds
mov
rol
mov
or
add
inc
std
pop
in
mov
adc
or
xor
adc
ret
(bad)
or
adc
xchg
or
dec
sahf
sbb
mov
call
xor
and
pushf
mov
test
inc
mov
and
add
inc
mov
or
mov
pop
fcom
mov
xor
fstp
adc
push
push
call
jle
aaa
adc
dec
or
inc
sub
and
xchg
sbb
pop
adc
add
je
loopne
jl
push
push
mov
inc
icebp
mov
push
ja
aam
std
sub
mov
lea
mov
loope
ins
mov
inc
mov
pushf
fs
pop
push
pop
cwde
mov
and
loope
pop
adc
add
test
jge
push
mov
or
jle
ja
cmp
lea
cs
mov
mov
push
push
mov
rcr
sbb
mov
mov
sbb
pop
inc
jg
pusha
and
mov
adc
or
jmp
push
adc
xor
push
and
mov
lods
nop
(bad)
int3
mov
xor
add
xchg
pop
sub
cmp
mov
shl
xor
cmp
sbb
int3
stos
neg
fimul
push
call
test
mov
xor
cmp
lods
add
pop
imul
add
fsub
sub
aad
or
fisttp
add
push
xchg
cmp
cmp
fsub
mov
sbb
or
pop
lods
jno
add
shl
push
push
call
pop
or
inc
push
je
sub
push
bound
in
int3
add
fdivrp
mov
rcl
adc
and
call
shr
dec
js
or
mov
inc
inc
mov
mov
push
push
push
mov
mov
and
retf
stos
adc
ror
jg
cmp
fcom
movs
sub
or
sahf
mov
push
call
lock
test
pop
xor
mov
add
pop
inc
mov
add
outs
mov
add
hlt
cmp
call
adc
mov
xor
dec
sbb
or
sbb
add
pop
mov
push
xchg
push
addr16
mov
add
mov
pop
pop
pop
pop
cmp
movs
repz
test
je
xor
cmp
lods
jmp
mov
inc
inc
mov
cmps
ret
mov
mov
or
xchg
dec
pop
test
jne
fs
push
js
mov
mov
sub
push
and
mov
push
pop
arpl
jae
inc
daa
pusha
ss
sub
cmp
ja
xor
cmp
adc
xor
xor
mov
jb
cmc
jne
sahf
push
iret
jge
add
or
add
nop
add
aas
and
jae
add
lea
shr
lea
pushf
pop
mov
push
popa
mov
pusha
push
je
out
inc
and
push
fs
lahf
mov
pop
push
mov
or
(bad)
pop
push
jno
or
dec
xchg
pop
lahf
fldcw
(bad)
push
nop
sbb
or
and
or
add
cmp
pushf
(bad)
js
pop
arpl
xchg
or
mov
pop
mov
scas
or
xor
push
pop
imul
scas
cmp
push
aaa
pushf
jmp
(bad)
xlat
sub
out
imul
mov
cmps
dec
dec
call
dec
xchg
pop
sub
inc
mov
sub
inc
aad
mov
xchg
or
out
inc
aas
in
test
je
stc
add
retf
mov
imul
dec
sbb
mov
sbb
sbb
xor
push
mov
ja
xchg
fld
inc
xchg
mov
cmp
jne
cmps
imul
aam
pop
cmp
sbb
add
pop
sbb
mov
pusha
mov
mov
mov
xlat
inc
lock
pop
push
mov
mov
shr
stos
out
inc
pusha
inc
aas
(bad)
mov
aad
dec
mov
cmp
jne
fadd
fwait
mov
add
sbb
arpl
xchg
add
adc
add
idiv
sub
jmp
inc
pusha
mov
js
ret
jne
mov
jne
sti
inc
mov
jne
or
jmp
mov
and
(bad)
fcomp
pop
or
jmp
or
scas
sti
neg
xchg
pop
mov
push
scas
add
pop
and
push
mov
push
cli
mov
push
(bad)
mov
out
ss
shl
pop
dec
mov
cmp
xor
mov
popa
mov
inc
aas
push
sub
xor
into
hlt
outs
mov
data16
mov
push
lea
jmp
xchg
jne
mov
push
add
or
push
and
sbb
mov
mov
sub
dec
xor
push
pop
add
retf
inc
arpl
push
mov
mov
mov
push
aam
lea
clc
push
inc
xor
mov
and
call
adc
inc
pushf
add
push
jmp
dec
cmovae
and
inc
dec
or
adc
sti
add
xchg
adc
fadd
call
add
push
adc
loop
cmp
add
arpl
adc
aas
lahf
adc
add
cli
add
add
add
rol
fld
add
cmps
inc
or
cmp
add
test
test
add
fnsave
and
push
add
xchg
jmp
or
int3
push
dec
add
push
or
out
js
lock
add
mov
jmp
add
inc
xchg
jnp
or
jg
sahf
bound
mov
mov
pop
jmp
adc
cmps
and
sub
dec
test
cmp
cmp
rol
out
add
or
das
mov
fcomp
jo
das
ins
push
and
push
call
mov
hlt
push
mov
and
dec
mov
ja
cmp
sbb
mov
xchg
call
dec
and
mov
and
mov
nop
dec
sbb
mov
inc
mov
lock
scas
xchg
or
sbb
pushf
mov
ret
pop
or
test
add
add
sub
adc
inc
push
push
test
je
mov
je
xchg
(bad)
outs
dec
push
mov
sbb
mov
rep
cmps
(bad)
movs
sub
add
cmc
in
cmc
(bad)
add
sub
call
pop
add
cmp
push
mov
or
mov
dec
call
and
or
inc
cdq
mov
xchg
mov
loopne
mov
test
mov
jle
mov
push
dec
fadd
xor
add
and
and
out
cmp
and
sbb
and
call
adc
adc
add
mov
and
or
mov
nop
jecxz
scas
xchg
dec
mov
gs
mov
ss
ficom
test
sub
pop
sbb
mov
ins
sbb
or
pop
push
inc
dec
add
data16
lods
inc
loop
(bad)
xchg
pop
movs
mov
or
or
lods
das
add
rol
data16
add
nop
xor
add
xor
adc
adc
or
rol
loope
hlt
sbb
mov
pop
repz
mov
ror
push
push
push
call
xor
push
ins
xor
pop
mov
add
repz
push
cmps
js
add
sbb
mov
mov
inc
mov
adc
loope
mov
cmp
daa
push
xor
lds
dec
dec
cmp
add
xchg
in
dec
scas
mov
fs
mov
adc
dec
gs
add
add
daa
or
scas
or
add
jne
clc
pop
cmp
inc
add
or
and
pop
mov
data16
retf
mov
mov
adc
enter
inc
sub
sbb
loopne
je
je
jo
pusha
cdq
or
lock
inc
jg
sbb
add
cmp
push
hlt
add
mov
mov
push
(bad)
mov
mov
test
jne
xor
mov
jle
les
add
and
mov
(bad)
aaa
push
jae
push
mov
test
pop
je
push
xor
or
pop
ret
pop
add
and
cmp
inc
inc
jno
lahf
mov
lds
out
cmp
push
mov
maxps
sbb
mov
call
das
xor
pop
les
add
push
adc
bound
call
mov
or
xor
inc
and
pop
repz
dec
xor
jne
and
push
dec
das
add
out
loop
aad
add
push
push
push
adc
mov
pop
push
cmc
cmp
sub
adc
pusha
ret
sub
xor
clc
daa
or
or
out
add
dec
push
dec
and
adc
test
pushf
dec
fs
push
push
and
dec
jo
and
mov
add
aam
mov
test
jle
add
pop
mov
mov
rcr
shl
int3
neg
mov
rcl
and
xor
and
pop
mov
add
adc
mov
jne
pushf
ins
sbb
test
inc
pop
lea
mov
mov
jge
add
add
dec
ins
or
js
stos
test
or
xchg
sbb
or
add
cmp
mov
xchg
(bad)
xadd
cld
mov
call
mov
mov
movs
call
mov
jne
rol
iret
icebp
pop
cmp
das
push
mov
push
and
adc
cmp
mov
leave
ds
push
pop
xor
ret
out
cmp
pop
cmps
xlat
mov
enter
or
add
(bad)
cmps
daa
jp
fisttp
jbe
scas
repnz
lds
jle
nop
nop
mov
xor
add
ins
ins
inc
data16
nop
push
fbld
adc
test
call
cmp
cmp
cmp
shr
cmp
push
push
sbb
add
inc
mov
adc
sbb
jne
or
push
mov
jmp
jmp
push
add
push
push
adc
call
push
xchg
push
ins
dec
adc
pop
call
mov
push
ins
or
mov
lea
(bad)
(bad)
xor
adc
pop
mov
add
(bad)
pop
mov
lods
cmp
add
push
cmp
not
loope
iret
iret
sub
mov
dec
push
ss
ret
clc
call
sub
sub
add
cwde
add
and
sahf
add
jo
xor
in
cmp
mov
and
mov
pusha
add
jno
test
add
push
sbb
push
sub
or
cmp
sete
mov
das
push
int3
cmp
cdq
das
mov
(bad)
cli
sub
jp
mov
xchg
outs
inc
mov
pop
or
pop
sub
sub
aaa
adc
gs
mov
sub
and
xor
add
pop
mov
je
cmp
je
jne
push
adc
dec
call
mov
push
mov
push
push
mov
cmp
cdq
inc
ds
lahf
mov
push
mov
jo
add
retf
jne
jmp
sub
sbb
dec
and
inc
je
adc
pop
(bad)
jmp
outs
mov
sbb
sbb
mov
imul
push
mov
(bad)
pop
or
je
mov
idiv
pop
cmp
jne
push
call
push
push
push
push
inc
jge
shr
mov
pop
dec
push
xchg
dec
mov
aaa
inc
xchg
clc
mov
push
popf
sub
jl
sbb
sti
mov
call
sbb
xor
adc
and
lea
adc
add
push
push
mov
push
push
push
aas
out
mul
push
sub
xor
xchg
and
call
jnp
fdivr
outs
xor
push
push
and
push
call
push
call
loope
add
pop
je
add
and
std
xor
ins
mov
pop
pop
pop
mov
push
fist
lock
push
adc
xor
push
push
xor
call
cmp
inc
and
enter
inc
std
sbb
loopne
mov
add
(bad)
je
(bad)
aas
sbb
adc
add
jp
xchg
mov
fstp
push
add
pop
cmc
cmps
push
fisttp
push
bound
inc
clc
outs
js
inc
xor
sub
(bad)
sub
mov
prefetcht0
shl
fist
and
cmps
pop
and
in
addr16
sub
jmp
sub
push
in
push
or
mov
add
pop
pop
cmps
fadd
in
addr16
xor
mov
popf
cmp
push
push
push
sahf
xor
add
sub
push
rol
xchg
push
(bad)
call
dec
lock
pop
push
mov
fild
test
dec
inc
mov
dec
inc
sbb
loopne
jne
sbb
mov
out
mul
out
ficom
add
xchg
mov
pusha
mov
pop
dec
fadd
or
sbb
sahf
call
sbb
fcomp
jle
std
push
mov
push
mov
sub
cmp
test
je
push
or
adc
ret
std
mov
(bad)
sar
dec
push
push
mov
lock
sar
jne
shr
sub
push
dec
mov
or
ins
mov
push
inc
mov
jg
int3
inc
dec
das
inc
add
fisttp
hlt
popa
bound
mov
mov
jo
mov
clc
inc
and
or
cmps
push
xor
add
jbe
push
and
pusha
sbb
mov
jl
sub
push
pop
mov
inc
gs
ins
fs
sbb
sbb
sbb
int
or
pop
sub
inc
inc
or
dec
adc
jp
sbb
mov
push
push
pop
push
inc
push
cld
inc
js
inc
xor
mov
add
push
inc
inc
bound
adc
inc
push
mov
add
dec
xor
mov
test
sub
shr
sub
adc
jmp
or
cmp
and
push
push
loope
int
and
jmp
sub
les
push
sbb
clc
add
push
mov
adc
ja
push
and
mov
push
sbb
icebp
popf
or
xchg
ret
push
and
xor
sub
ror
ret
lds
cmps
sbb
sar
push
aam
dec
fbstp
rcl
push
dec
jmp
pop
inc
mov
xor
or
stos
mov
mov
push
push
push
lea
mov
mov
xor
cmp
je
mov
lea
cmp
jle
test
lods
stc
or
pop
push
push
mov
adc
add
aam
mov
clc
rol
mov
mov
inc
loopne
xor
push
mov
mov
mov
sbb
out
xor
lahf
fisttp
xor
dec
inc
pop
lock
mov
adc
fistp
push
mov
add
xor
cwde
scas
ins
add
lock
dec
movaps
inc
mov
imul
and
out
gs
imul
push
adc
pop
mov
push
cmp
pop
rcl
or
mov
sbb
in
cmp
loope
inc
and
mov
jle
outs
(bad)
and
mov
sub
inc
mov
jne
add
mov
cmp
push
das
aad
or
je
mov
push
push
inc
ret
or
or
rol
fstp
pusha
clc
push
mov
push
icebp
xchg
inc
push
mov
xchg
retf
rcl
or
aaa
clc
push
sbb
xor
adc
out
sbb
aam
scas
mov
int3
stos
sub
adc
clc
mov
jle
mov
add
mov
sbb
and
pop
sbb
mov
shl
mov
inc
or
int3
sbb
sbb
sub
add
xor
mov
(bad)
call
xor
fs
xchg
mov
stos
ret
xor
xchg
loop
stos
mov
inc
and
push
add
mov
or
add
sbb
les
dec
sub
stos
and
xor
push
push
jge
adc
mov
rcl
jge
fistp
aad
addps
aaa
xor
add
dec
and
cmp
and
and
leave
fnstcw
ret
inc
or
fistp
sbb
push
push
mov
inc
and
or
jno
in
mul
push
xchg
push
loope
inc
mov
mov
mov
or
inc
add
xor
adc
xor
stos
push
mov
movs
inc
cmp
in
cld
mov
and
jno
push
ficomp
push
test
jne
cmp
addr16
and
ret
jno
sbb
pop
mov
imul
dec
push
xchg
dec
mov
adc
adc
clc
and
icebp
fadd
push
outs
jg
cld
scas
mov
mov
mov
adc
rcl
es
dec
push
shl
add
mov
sub
test
jge
adc
jae
or
jle
pop
popf
cmp
pusha
aam
xchg
rcl
jg
push
push
push
push
xor
(bad)
mov
jno
mov
mov
test
je
fsub
call
dec
jno
addr16
adc
xchg
call
or
mov
aad
cwde
add
push
lock
mov
and
in
adc
inc
and
imul
or
inc
inc
popf
ror
push
push
rol
out
add
das
loop
shl
cmps
mov
ins
dec
les
adc
xchg
gs
data16
sbb
jbe
cdq
popa
add
jo
(bad)
adc
jle
mov
outs
call
pop
add
dec
shl
mov
pop
and
xor
dec
dec
xor
sti
xor
into
mov
loop
cwde
jmp
and
xlat
cmps
dec
shl
cmp
xchg
aaa
stos
pop
pop
aas
cdq
cmps
cmp
test
xor
test
or
test
xchg
and
xchg
inc
jne
and
pop
pop
and
push
mov
ror
and
xlat
daa
inc
add
fs
retf
mov
and
out
or
and
dec
daa
test
inc
and
mov
and
rcr
dec
jne
mov
mov
lea
jmp
push
sbb
into
loope
es
shl
fst
(bad)
xor
jle
cs
mov
cmp
add
or
inc
rcr
inc
xchg
dec
inc
and
mov
lods
sub
loopne
and
out
jne
push
and
xchg
jmp
jae
into
and
xor
push
je
and
push
xor
je
mov
retf
xor
jge
sub
inc
out
pop
or
xor
or
xor
or
lea
imul
dec
stc
imul
je
add
(bad)
in
sbb
push
lea
les
add
ficomp
inc
push
outs
pop
pop
mov
jmp
dec
add
aam
int3
adc
data16
pop
in
in
jno
cvtpi2ps
cmps
mov
mov
mov
lar
or
fs
out
paddq
stos
xchg
cdq
adc
jg
call
mov
pusha
cwde
add
cmovbe
and
adc
cmp
shl
test
sbb
mov
mov
je
add
dec
mov
mov
in
add
enter
jmp
add
add
sar
pusha
(bad)
mov
ins
adc
push
dec
call
scas
mov
and
inc
cmp
mov
sbb
mov
pop
or
mov
ret
int
pop
pop
test
daa
sti
scas
test
jle
add
push
out
call
test
sub
je
mov
std
out
ins
in
test
dec
dec
add
(bad)
mov
xor
je
push
mov
push
call
mov
mov
lds
sub
and
add
fcmovnb
jbe
jmp
and
cmp
mov
sbb
add
and
sbb
sub
and
neg
jmp
das
clc
add
hlt
nop
mov
adc
push
add
xor
push
cwde
jb
clc
pop
cld
sub
mul
inc
sbb
or
adc
fild
rol
cmp
stc
sub
mov
add
pop
or
int
cmp
push
jne
sbb
fldenv
jmp
jnp
sub
test
sbb
push
push
push
mov
push
out
out
dec
add
adc
mov
jne
sub
sub
pop
test
mov
or
add
add
add
add
inc
and
jmp
or
jmp
fisubr
loop
xchg
mov
ret
std
imul
pop
pop
or
jmp
ud2
jne
cmp
push
in
mov
add
mov
outs
loopne
or
mov
test
jne
inc
hlt
sbb
cmp
sbb
aaa
shl
adc
add
mov
inc
or
cmp
add
sbb
or
cmp
dec
push
data16
aam
cmp
push
ja
or
ja
add
add
cmp
jb
dec
xchg
or
inc
or
jne
movzx
mov
push
cdq
pop
idiv
xchg
push
mov
mov
mov
xlat
adc
push
aaa
(bad)
fild
adc
shl
adc
aaa
inc
lds
sub
mov
mov
js
push
adc
sub
mov
add
cmp
jg
sub
adc
pxor
outs
or
cmp
xchg
jle
dec
dec
mov
or
mov
push
shr
add
mov
imul
call
(bad)
sub
add
add
xor
add
cmp
je
std
(bad)
add
mov
adc
sbb
cmp
ret
(bad)
xchg
or
(bad)
aas
mov
mov
fild
test
fmul
jge
fchs
fild
mov
push
push
lahf
(bad)
fadd
fstp
pop
fstp
aam
pop
pop
leave
ret
sub
fld
or
dec
fcomp
fnstsw
sahf
ja
(bad)
fadd
stos
xchg
adc
test
mov
lahf
sub
fld
fld
or
fld
pushf
or
lock
add
fist
inc
cmp
push
or
or
pop
pop
fmul
(bad)
aas
paddq
jmp
mov
cdq
pop
mov
idiv
mov
mov
inc
sti
(bad)
(bad)
dec
sti
mov
mov
cdq
idiv
mov
mov
mov
lea
mov
sbb
(bad)
jge
in
lock
mov
mov
(bad)
pusha
fild
push
cld
jne
and
and
pop
cdq
mov
idiv
mov
push
dec
mov
mov
lea
mov
(bad)
(bad)
(bad)
dec
lea
xor
imul
add
cmp
pop
lea
mov
jne
cmp
je
xlat
lahf
mov
jne
mov
dec
int
push
jnp
pop
mov
jb
mov
mov
ja
int3
frstor
mov
shl
je
jno
mov
jmp
or
idiv
inc
cmc
add
cmp
aaa
jle
inc
mov
jmp
add
xor
push
jae
(bad)
dec
or
or
mov
jmp
mov
mov
cdq
pop
pop
out
fsubr
mov
lock
(bad)
and
mov
push
add
(bad)
xor
scas
jg
inc
and
cmp
jbe
pop
mov
pop
dec
mov
inc
test
and
or
pop
and
add
cmp
fwait
into
(bad)
jae
cmps
mov
mov
or
loope
pop
fsubrp
mov
cmp
xor
ror
sar
lea
ror
jg
ja
adc
sub
out
jno
jne
fld
pop
inc
psadbw
push
mov
add
data16
ja
dec
mov
or
jl
mov
dec
mov
iret
xor
xlat
or
call
cmp
pop
or
fadd
or
mov
and
mov
ss
mov
jecxz
fwait
lock
mov
cmp
jne
cdq
add
ret
add
ret
sub
add
add
add
mov
sbb
enter
xor
or
pop
je
mov
dec
repz
push
push
mov
add
or
mov
inc
add
inc
shr
xchg
inc
inc
or
pop
mov
or
out
add
dec
push
fstp
fld
dec
push
mov
fcomp
mov
mov
mov
pop
xor
pop
mov
push
push
dec
or
xor
and
pop
ret
inc
mul
adc
xchg
jbe
in
jle
loopne
adc
inc
adc
adc
or
mov
mov
loopne
inc
clc
push
push
push
pop
mov
sar
icebp
mov
dec
mov
je
lea
pop
push
mov
dec
inc
imul
push
(bad)
call
dec
mov
pop
leave
ret
mov
push
xor
mov
call
(bad)
adc
into
pusha
pop
stc
mov
pop
sub
inc
add
(bad)
cmp
dec
inc
scas
sub
mov
jle
push
adc
push
call
add
outs
dec
clc
jge
iret
add
add
xchg
imul
clc
in
cmp
test
stos
xchg
(bad)
dec
xor
adc
inc
mov
sub
xor
loopne
fcomp
push
lock
dec
dec
cmps
in
ret
outs
push
cwde
outs
inc
or
data16
lods
mov
add
mov
or
push
pop
aaa
or
jg
sbb
aad
push
or
sbb
mov
dec
cmp
push
fstp
daa
dec
xor
mov
sub
xchg
dec
gs
dec
jne
xor
daa
add
xor
add
je
or
sub
jmp
adc
jno
sub
cmp
and
and
pop
or
jne
daa
(bad)
jmp
dec
or
mov
movsx
mov
xchg
mov
pop
ret
xor
aad
fiadd
mov
pop
push
cwde
sbb
dec
pop
jmp
jae
dec
xor
dec
or
push
je
loopne
add
add
mov
add
mov
xor
cmp
push
push
je
std
(bad)
adc
sar
pop
or
xchg
shr
push
xchg
jns
adc
les
cwde
and
jbe
xor
hlt
dec
add
(bad)
lahf
sar
ret
mov
push
dec
dec
push
in
and
cmp
jle
stc
sub
les
je
jle
mov
fldenv
sbb
in
sti
std
pop
mov
mov
inc
out
mov
test
fist
icebp
jmp
adc
jne
cli
(bad)
call
lock
or
cmp
jle
mov
push
call
cmp
jge
aam
mov
movs
xlat
cmp
jl
add
adc
iret
sub
arpl
jg
loopne
jmp
call
inc
or
je
sub
out
ja
jmp
jecxz
adc
or
mov
dec
mov
or
fnstsw
inc
pop
pop
inc
adc
mov
cmp
adc
push
ins
(bad)
dec
jmp
mov
pop
or
idiv
fidiv
fistp
jb
inc
push
push
push
push
call
push
mov
(bad)
(bad)
(bad)
std
mov
push
mov
add
lea
lea
movs
movs
movs
cmp
or
add
mov
pop
jb
add
push
push
mov
or
mov
test
jne
fiadd
sbb
adc
int3
ret
jae
pop
cmp
xor
jmp
lods
ucomiss
xor
push
push
cld
adc
or
mov
adc
xor
xchg
add
add
jmp
add
hlt
cmp
add
aad
push
mov
mov
popa
add
or
sub
test
mov
call
mov
push
push
pop
mov
xor
push
mov
add
mul
cmp
fdivr
push
push
push
xchg
add
sbb
mov
lock
cmp
arpl
sbb
cmp
fld
sbb
push
or
adc
nop
fsubr
sar
sbb
add
add
sbb
icebp
daa
xor
and
inc
loopne
mov
push
push
std
sbb
mov
mov
adc
jb
xor
loopne
or
in
mov
int3
adc
mov
mov
call
outs
and
xchg
mov
and
ret
mov
cld
push
mov
cmp
div
xchg
std
xor
out
jg
push
mov
push
push
sbb
xlat
cwde
ins
sub
mov
add
in
or
push
stos
call
lock
cmp
jne
xor
mov
adc
or
std
aas
jmp
inc
cmps
inc
add
mov
cmc
push
je
test
mov
je
mov
jne
push
or
test
(bad)
pop
and
(bad)
gs
adc
pop
sbb
je
int3
mov
sub
cmp
mov
pop
leave
ret
mov
or
add
out
mov
imul
mov
lea
mov
sbb
cmp
or
and
(bad)
frstor
mov
pop
mov
mov
xor
push
jp
add
shl
imul
jp
sub
jne
mov
inc
sub
inc
cld
fldcw
stos
inc
lock
lea
lea
mov
(bad)
call
(bad)
fisttp
sbb
inc
in
sbb
add
retf
sbb
inc
idiv
mov
aam
add
jge
add
mov
dec
sub
in
aaa
fldcw
addr16
(bad)
push
sbb
or
sahf
and
adc
add
pop
xchg
outs
adc
xor
mov
sub
inc
adc
es
adc
dec
pop
test
(bad)
cwde
ins
mov
lock
inc
lods
call
gs
(bad)
aas
mov
jne
ins
or
lock
(bad)
and
mov
imul
add
cmp
(bad)
pop
adc
pop
jmp
push
and
mov
jle
jmp
rcr
push
push
lea
aas
add
cmp
call
cli
xor
or
push
add
(bad)
sbb
js
jmp
and
mov
je
lea
clc
int3
lea
idiv
test
dec
xor
je
ja
or
inc
mov
jmp
mov
pusha
xchg
jae
add
mov
lea
pushf
cmp
dec
and
cmp
jae
mov
add
fwait
and
cmp
xor
xor
mov
cmp
std
out
(bad)
cmp
jne
xlat
int
cmp
jne
mov
sub
aaa
fs
and
das
cmp
jne
push
(bad)
fisttp
lea
sub
mov
jmp
in
mov
push
mov
or
mov
or
data16
iret
(bad)
(bad)
out
inc
std
(bad)
jp
add
jne
mov
jmp
mov
mov
xor
push
sbb
sbb
sbb
fwait
jns
jecxz
out
adc
test
jge
mov
mov
mov
inc
cmp
mov
dec
push
mov
ja
add
sbb
add
call
adc
xchg
arpl
inc
or
dec
dec
or
or
or
xor
and
inc
cli
pop
ins
jmp
daa
or
shl
add
int3
mov
cmp
aaa
cmp
push
mov
xor
ja
rcl
ret
test
lock
inc
add
scas
jmp
xlat
shr
or
pop
stos
retf
clc
mov
cmp
jl
std
ja
vpcmpeqw
mov
mov
jb
ror
je
cmp
jne
mov
call
mov
jne
push
or
les
out
mov
xor
out
mov
ror
js
(bad)
call
cmp
jo
adc
dec
mov
sbb
cmp
pop
mov
mov
fld
mov
push
push
sbb
push
mov
(bad)
(bad)
mov
mov
mov
inc
les
mov
fwait
ja
mov
mov
mov
mov
inc
ror
mov
jge
neg
mov
js
(bad)
(bad)
outs
jne
and
mov
push
call
mov
imul
fdivr
inc
cdq
idiv
add
mov
push
mov
sub
sahf
inc
mov
call
not
jge
mov
lea
mov
cld
and
sar
push
popf
(bad)
fisttp
or
fnsave
push
cmp
arpl
or
pop
test
leave
push
retf
inc
sbb
dec
int
or
fadd
gs
je
mov
jp
retf
pop
or
jbe
lahf
or
inc
cld
add
rol
add
or
add
ffreep
daa
inc
push
add
push
push
mov
push
add
rol
scas
loop
cld
sbb
mov
sar
jmp
inc
and
mov
xchg
mov
cmp
jne
and
sbb
mov
call
xor
mov
test
jne
push
push
push
xor
sbb
adc
pop
add
push
call
add
adc
and
cmp
jg
mov
aaa
icebp
out
pop
xor
or
xchg
rcl
fs
jmp
pushf
loope
xor
add
cmp
dec
fsub
add
sub
js
mov
fs
sub
dec
add
js
mov
adc
mov
retf
adc
(bad)
adc
lea
jp
ja
ja
fs
push
mov
add
inc
xor
jmp
movsx
lea
scas
sti
test
movsx
(bad)
mov
test
je
cmp
jne
sbb
inc
aaa
jp
pop
mov
pop
xor
mov
cmp
jae
and
push
je
out
fiadd
dec
mov
add
les
loope
sbb
enter
out
sar
push
adc
inc
pop
add
sub
cwde
stos
fcomip
ins
into
fsubr
push
mov
cdq
outs
sbb
jge
sbb
sbb
mov
jo
dec
fcom
jne
test
pop
aad
nop
cwde
sbb
xchg
int
or
enter
or
call
lock
mov
rol
jne
xor
adc
gs
jmp
(bad)
jle
mov
add
or
mov
and
add
adc
retf
hlt
lock
dec
in
je
jnp
or
mov
outs
or
ds
or
dec
mov
ja
jbe
(bad)
push
shld
addr16
clc
add
aam
(bad)
push
ror
mov
cmp
fbstp
rol
inc
add
or
pushf
and
test
mov
sbb
mov
pop
je
shl
jne
push
or
rcr
ds
inc
and
aaa
mov
push
sbb
xor
pop
lods
lock
inc
cli
(bad)
jg
and
cmp
mov
jbe
mov
ins
or
jp
out
cmp
ret
fsubr
sti
adc
add
leave
add
or
mov
mov
add
mov
or
jle
test
add
cmp
adc
mov
ret
into
sub
adc
or
fcomi
inc
fadd
call
or
mov
mov
mov
inc
mov
and
sbb
inc
fsubr
shl
lahf
mov
inc
es
fdiv
call
jmp
cmp
mov
pop
xor
shl
stos
in
jp
inc
dec
mov
test
mov
inc
jmp
push
mov
pop
mov
test
fdivr
repz
je
cmp
aas
popa
pop
aam
push
fcom
push
mov
popf
dec
mov
mov
loopne
fistp
pop
call
(bad)
xor
adc
aad
sbb
jne
cmp
je
dec
cmp
jbe
cmp
call
mov
repnz
or
push
mov
ret
dec
adc
scas
ss
je
push
fldl2t
push
or
test
sbb
mov
ret
add
stos
ins
mov
(bad)
(bad)
push
rcl
cmp
mov
sete
test
je
mov
lea
jmp
lea
sbb
mov
push
cmp
pop
jne
add
prefetch
into
jbe
fisttp
sbb
(bad)
push
jmp
jg
inc
add
jne
test
je
neg
sbb
and
inc
dec
aad
in
lea
sbb
cld
nop
sbb
scas
loop
and
xchg
add
add
jae
pop
jne
imul
into
jge
(bad)
mov
lea
and
add
and
add
and
loope
fwait
mov
mov
xchg
mov
sbb
mov
mov
push
adc
inc
scas
stos
push
pop
mov
shl
dec
or
into
lock
cld
je
retf
mov
ds
ror
ss
test
ret
jg
cwde
mov
mov
cmp
adc
inc
fbld
dec
movzx
lea
repz
fcmovb
and
ror
adc
adc
mov
call
movs
push
jne
jmp
cmps
mov
and
jnp
jno
pop
mov
and
pop
push
adc
(bad)
fisttp
push
(bad)
mov
mov
mov
sub
xor
lahf
add
js
push
mov
out
rcr
lea
inc
and
push
pop
mov
in
jle
mov
(bad)
jg
adc
mov
lea
jne
lea
cmp
push
add
jnp
or
inc
hlt
icebp
jmp
sar
fbld
dec
clc
dec
mov
jne
cmp
jne
aaa
or
xor
sbb
push
push
push
aam
dec
aam
pusha
push
mov
add
adc
hlt
jo
call
lock
inc
in
mov
aas
cwde
add
inc
test
mov
inc
mov
jnp
pop
mov
sub
add
fcom
ins
or
dec
add
dec
ss
pop
pop
call
mov
inc
or
dec
lock
jne
push
in
or
xor
mov
bound
scas
je
jecxz
xor
pop
xchg
jne
adc
retf
and
or
call
outs
sbb
sbb
loop
sar
pop
dec
sub
push
mov
sbb
dec
in
push
mov
add
ret
jne
lods
fwait
dec
loop
cmps
(bad)
push
add
push
clc
jmp
mov
mov
mov
xor
cmp
push
nop
mov
cmp
mov
je
push
dec
add
dec
cmp
or
cmp
je
mov
pop
inc
inc
jmp
add
cmp
lock
cmp
(bad)
(bad)
jp
je
cmp
je
cmp
je
cmp
jne
arpl
mov
inc
cmp
mov
jne
lea
cmp
je
out
call
pop
push
pop
jmp
push
adc
adc
xchg
mov
inc
add
mov
sbb
lahf
adc
jne
mov
push
sbb
hlt
add
icebp
adc
sub
jecxz
pop
je
push
push
call
pop
std
push
push
dec
add
inc
clc
jne
mov
jmp
mov
lock
cmp
movq
into
rol
sbb
mov
cmp
je
call
dec
pushf
adc
inc
push
cmps
retf
call
(bad)
in
fcomp
push
push
mov
mov
add
xor
mov
stos
ret
add
jmp
dec
xor
inc
or
clc
add
out
add
cmp
mov
push
addr16
cmp
std
cmp
cli
push
hlt
adc
movzx
push
fimul
mov
jo
sbb
xor
aad
out
xchg
hlt
xor
mov
ds
dec
cmp
ja
sub
cmp
push
out
out
add
cmp
lock
jge
add
test
jae
add
pop
int3
les
das
mov
lods
lahf
jbe
push
or
jne
pop
mov
out
ret
pop
add
(bad)
(bad)
inc
bound
lea
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
push
mov
or
mov
inc
adc
rcr
test
lods
lea
mov
or
mov
inc
push
movsx
add
push
movsx
mov
lea
inc
or
add
mov
jbe
push
les
xchg
test
and
jne
icebp
jb
mov
sub
jmp
jbe
push
push
call
push
add
sub
xor
mov
xor
cmp
fstp
pop
in
in
fdiv
jnp
mov
add
add
or
inc
aam
dec
hlt
cmp
mov
jbe
xor
add
ins
sbb
mov
std
mov
inc
cmp
jne
cs
cli
into
or
or
mov
out
and
out
pop
fs
inc
clc
sub
add
lea
jmp
push
sbb
sub
inc
rol
push
mov
push
push
cwde
loopne
sbb
repz
sub
(bad)
mov
sbb
ja
mov
xor
sub
add
mov
lea
push
push
xor
dec
add
push
call
fld
push
lea
inc
movs
add
push
enter
mov
retf
cs
sub
neg
sbb
mov
and
cmp
jl
cmps
hlt
push
push
cld
mov
fadd
je
push
xor
cmp
fwait
ds
ja
jg
xchg
rcl
mov
adc
ror
push
push
push
cmps
push
mov
jmp
fisub
dec
adc
mov
push
push
mov
sahf
push
call
adc
mov
jmp
and
pusha
test
lea
or
mov
mov
xor
jl
dec
loopne
mov
aad
es
cmp
pop
stc
jne
jb
retf
sbb
mov
pop
and
sti
dec
call
nop
or
mov
pop
out
mov
xchg
jge
sbb
pusha
mov
add
aas
mov
add
push
or
adc
movs
mov
push
add
nop
or
mov
xor
push
addr16
repz
lock
mov
imul
jne
jecxz
lds
in
pop
imul
pop
in
push
lea
push
call
cmp
mov
and
dec
push
lock
pop
cs
xor
call
icebp
push
xchg
jne
lea
loopne
cmp
jg
push
jne
push
fimul
mov
(bad)
(bad)
dec
dec
mov
imul
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
pop
outs
test
adc
inc
ret
mov
add
(bad)
sbb
mov
ss
push
das
imul
lock
or
or
mov
mov
dec
pop
pop
sub
adc
jbe
lods
sbb
sbb
mov
xchg
push
mov
pusha
lock
bound
or
add
ret
fimul
sbb
mov
cmp
mov
enter
add
mov
sar
fisttp
mov
sbb
scas
jecxz
mov
mov
test
data16
bound
ins
aas
shr
idiv
call
mov
in
jl
xor
mov
push
icebp
ja
in
pop
mov
mov
adc
mov
jle
mov
fmulp
loop
push
push
mov
mov
dec
push
mov
mov
lods
scas
sub
mov
mov
cwde
cmc
jbe
mov
or
in
movlps
int3
or
push
aad
or
out
lds
sahf
es
mov
mov
mov
pop
pop
and
scas
loope
jne
inc
add
scas
push
pop
inc
sar
mov
sahf
inc
jo
and
mov
mov
fnstenv
cmp
mov
sar
mov
jbe
lea
mov
aad
(bad)
mov
mov
push
push
scas
psubsw
mov
lds
jo
inc
push
add
pavgb
adc
adc
je
mov
mov
jnp
rcr
or
push
mov
push
mov
push
sub
(bad)
scas
or
push
sub
or
pop
loopne
fsub
lea
loope
jno
push
movs
(bad)
sahf
fwait
je
mov
imul
sub
cmp
push
or
loopne
add
and
adc
or
dec
ret
mov
aad
rcl
ror
sub
loop
dec
fdivr
ror
adc
scas
pop
mov
fmul
push
push
loope
xor
jnp
lock
dec
test
jl
lea
xor
and
mov
loopne
ja
add
mov
xor
dec
test
setge
xor
or
aam
loope
repnz
pop
cs
leave
ret
mov
push
mov
xor
cmp
mov
cmp
and
inc
and
pop
sar
dec
fild
add
stos
push
cmp
fcomip
fld
inc
inc
or
mov
or
inc
and
jmp
mov
cmp
jne
push
lea
mov
inc
dec
loop
aad
lahf
mov
call
int3
enter
in
mov
cmp
call
mov
lea
lea
mov
mov
inc
fadd
ret
pop
jmp
mov
inc
call
movs
movs
movs
push
movs
push
push
out
or
daa
xor
cmp
xor
rol
icebp
mov
inc
mov
mov
aaa
xor
inc
push
aas
shl
ret
pop
or
add
add
gs
jmp
mov
and
cmp
mov
je
lea
lea
les
ja
push
mov
lea
push
xor
adc
loope
xchg
sub
(bad)
mov
mov
cld
mov
cmp
jnp
push
push
xor
push
inc
jmp
jnp
inc
pop
adc
push
push
mov
call
push
jmp
mov
mov
call
sub
call
mov
lds
mov
jl
adc
xor
(bad)
aas
fnstcw
sub
add
jge
mov
push
call
std
jg
out
push
xor
cmp
jl
mov
iret
jmp
xor
mov
cmp
je
es
dec
push
out
mov
jae
sub
jae
mov
in
mov
adc
shr
out
push
not
mov
mov
mov
test
or
jae
jl
fs
je
mov
add
imul
mov
fdivrp
(bad)
mov
and
push
or
ins
push
call
jnp
cmc
popa
push
cmp
(bad)
loopne
mov
and
mov
hlt
mov
dec
adc
push
jg
adc
mov
push
pusha
cmp
jne
lea
in
call
jge
push
push
push
out
call
inc
dec
xchg
jl
push
(bad)
in
cmp
or
ss
jo
fist
jmp
lea
out
push
iret
inc
scas
and
push
adc
or
adc
aad
sbb
inc
cld
inc
pop
leave
inc
add
xor
lea
mov
cs
pop
lock
push
push
pop
in
pop
push
mov
add
mov
add
inc
mov
nop
lea
jl
inc
xchg
mov
clc
jg
pop
mov
mov
pop
mov
xchg
push
cld
mov
cwde
mov
(bad)
(bad)
cli
pop
and
push
call
in
je
mov
or
push
or
xlat
sub
std
(bad)
call
iret
sar
sub
cmp
pop
push
push
in
mov
cmp
lods
sbb
dec
mov
jo
(bad)
in
push
movs
push
push
dec
std
out
cmp
test
pop
jge
and
pop
lea
push
lea
mov
fimul
jmp
repnz
in
pop
aaa
cmc
dec
push
aam
ror
inc
adc
call
movs
test
inc
fdiv
das
ret
and
and
mov
pusha
mov
or
movs
jle
mov
push
push
push
push
ss
push
adc
mov
rcr
fisub
ret
mov
push
mov
push
mov
inc
enter
sub
jne
pop
dec
jo
rcr
jmp
push
pop
test
je
mov
add
mov
push
xor
jne
cmp
je
add
jge
mov
cmp
adc
ret
sbb
push
jne
add
(bad)
cmp
cmp
push
lea
push
push
push
mov
mov
sbb
or
adc
xchg
inc
or
ss
ins
or
jne
adc
lock
push
pop
or
bound
lock
push
mov
(bad)
jp
or
nop
dec
aam
mov
pop
rcr
in
sub
push
adc
outs
out
bound
xchg
jnp
outs
ins
popf
loope
(bad)
imul
jl
rol
or
pop
or
sbb
adc
inc
adc
push
shl
std
push
push
lahf
call
dec
into
ds
in
iret
mov
add
inc
stos
std
push
sub
fsubr
je
(bad)
call
push
push
mov
call
and
cmp
sbb
push
repnz
bound
cs
call
pop
call
jge
or
inc
adc
mov
in
pop
dec
(bad)
out
lea
scas
and
call
fs
clc
push
push
push
push
das
in
adc
xchg
xor
sbb
inc
call
push
(bad)
mov
add
pop
adc
and
icebp
jmp
jne
mov
test
jne
rcl
jbe
mov
jge
fsubr
or
mov
call
pusha
cmp
iret
push
mov
dec
sar
leave
loopne
mov
jl
push
test
pop
ret
mov
ret
push
lea
lock
sub
inc
dec
push
mov
sub
sbb
aaa
jne
push
je
sbb
sbb
call
jg
jl
hlt
test
je
test
jne
xor
add
mov
adc
mov
and
xor
lock
js
sbb
dec
inc
mov
and
cmp
je
or
xor
mov
sar
jmp
dec
lea
mov
push
push
push
call
loope
mov
scas
aaa
sub
adc
or
jecxz
jo
push
dec
addr16
call
sbb
push
mov
lea
les
loop
jg
jl
mov
dec
mov
sub
mov
popf
push
pop
mov
lea
adc
push
add
mov
hlt
loope
cdq
ret
addr16
push
cmp
je
adc
dec
ss
ins
xor
xchg
push
xlat
or
in
and
mov
cli
jge
mov
dec
xchg
push
hlt
mov
out
push
jg
scas
hlt
xchg
hlt
mov
aam
out
ficom
push
in
aad
mov
(bad)
pop
(bad)
test
jne
lea
push
push
pop
inc
mov
mov
xor
mov
call
pop
mov
xchg
bound
cmp
sbb
inc
lock
cmp
push
inc
inc
or
push
push
inc
and
or
sbb
aaa
cmc
loopne
cmp
lock
lock
movzx
cmp
jb
jmp
dec
(bad)
mov
jge
gs
mov
sub
adc
outs
call
inc
cmp
xor
push
call
jbe
push
mov
mov
movs
movs
sbb
jne
pop
adc
dec
or
adc
inc
adc
in
sbb
adc
in
loopne
sbb
xlat
fistp
push
lea
push
and
pop
mov
mov
cmp
jo
add
repnz
stos
xchg
push
adc
push
lock
add
adc
or
inc
jl
outs
mov
cmp
je
je
movzx
push
lea
clc
(bad)
(bad)
shl
xor
push
inc
mov
pop
movzx
push
push
push
call
scas
rol
pop
pop
cld
jle
mov
mov
mov
js
ja
imul
test
or
movzx
and
cmp
dec
(bad)
(bad)
push
mov
cmp
je
inc
add
cmp
jl
jmp
xchg
jo
fwait
imul
pop
pop
(bad)
out
inc
(bad)
mov
inc
jno
jne
mov
call
rol
add
hlt
out
pop
jl
or
jbe
jmp
daa
ss
icebp
xor
ja
add
pop
jl
pop
cmp
adc
mov
dec
and
inc
inc
cmp
jg
cmp
mov
mov
pop
xor
and
add
sbb
je
mov
push
(bad)
cmp
daa
(bad)
aas
inc
les
dec
or
push
sbb
jge
xor
pop
cmp
pop
(bad)
out
adc
and
stos
adc
leave
je
mov
push
imul
sub
jbe
call
je
xor
dec
push
inc
sbb
mov
lock
push
add
cmp
or
pop
aaa
and
sub
xor
mov
inc
jae
(bad)
cmp
je
and
adc
push
xor
cmp
fisttp
pop
and
sbb
pop
and
or
push
push
sar
or
cmp
jne
push
pop
or
mov
adc
shl
or
setne
dec
and
add
push
jne
jmp
jg
mov
mov
lea
xor
push
push
push
push
mov
push
call
pop
jg
mov
or
inc
mov
dec
xchg
sbb
adc
push
icebp
or
push
ficom
call
aaa
adc
aaa
add
push
jl
mov
push
adc
je
push
pop
ret
mov
or
mov
mov
dec
je
lock
adc
push
pop
mov
dec
mov
and
sti
jg
pop
adc
mov
ret
mov
mov
mov
push
out
mov
test
pop
test
pop
mov
mov
xor
or
lea
push
push
push
sar
inc
popf
mov
cmp
jne
or
sti
or
sbb
es
into
ins
mov
mov
cmp
fwait
push
push
inc
pop
push
push
push
dec
cld
fisubr
add
or
sbb
and
mov
sti
je
or
idiv
sub
mov
sti
fistp
in
mov
push
push
push
scas
push
addr16
and
pop
rcr
jmp
icebp
scas
adc
shl
inc
ins
or
jmp
ins
or
lock
inc
push
mov
not
and
push
pop
push
call
mov
or
enter
mul
fsub
clc
xor
adc
jg
ror
ret
cli
sbb
shr
mov
ds
dec
push
fstp
or
xchg
jle
dec
jl
outs
in
or
or
clc
xor
jmp
cld
mov
dec
je
out
fsubp
dec
fbld
push
push
push
imul
adc
sti
xchg
xchg
lock
mov
push
push
ins
xor
ret
xor
mov
dec
or
pusha
ret
rol
call
es
jnp
dec
cmp
lock
push
sar
push
test
or
or
lock
xchg
ds
jb
call
call
call
jno
push
sub
lock
lods
sbb
or
ret
dec
or
push
ror
fdiv
mov
aam
add
mov
loope
dec
pop
pop
sub
mov
lea
cmp
mov
movs
mov
mov
scas
xor
add
fild
enter
push
div
cmc
call
mov
push
mov
sub
mov
sub
pop
(bad)
sbb
sub
add
mov
inc
cld
push
push
pop
inc
jno
jmp
lea
mov
mov
push
loop
pop
leave
ret
push
push
mov
dec
pusha
loopne
shl
ret
xor
inc
mov
icebp
ret
and
sbb
add
inc
sub
inc
cld
mov
cmp
dec
stc
or
test
mov
pop
lock
inc
xor
dec
cmp
inc
sub
dec
xor
push
pop
dec
bound
sti
not
shr
and
mov
lods
mov
cld
call
mov
add
inc
or
pusha
retf
add
jb
js
(bad)
and
stos
outs
loop
popf
sbb
mov
call
xor
and
sti
(bad)
(bad)
call
clc
add
clc
add
cmp
jg
or
jmp
push
pop
mov
push
push
sbb
dec
mov
push
pop
ins
mov
cld
push
push
push
lea
mov
xor
cmps
pop
push
xchg
xchg
sbb
jmp
aam
mov
dec
scas
fld
push
dec
push
mov
out
push
push
adc
hlt
or
push
add
pop
xor
cmp
out
sete
pop
out
pusha
ret
cmp
test
cs
mov
sub
std
mov
int3
pop
ret
push
call
sbb
ret
push
jo
ret
mov
xchg
jne
inc
inc
shl
mov
dec
mov
int
test
mov
add
hlt
add
cmp
xor
add
push
cmp
adc
or
cmps
popf
daa
add
mov
sbb
dec
sub
(bad)
adc
das
adc
mov
inc
xor
mov
lahf
ins
jp
and
xor
lea
add
jecxz
gs
or
push
push
jnp
pop
outs
pop
pop
ret
inc
out
call
mov
cmp
je
cmp
pop
nop
jmp
or
retf
mov
je
xchg
xor
sbb
stc
lock
mov
fld
pop
mov
or
adc
inc
or
mov
xchg
lahf
add
jge
dec
pop
lock
ja
ja
gs
hlt
xor
or
(bad)
push
inc
or
dec
inc
or
or
cld
(bad)
pop
push
pushf
lock
add
push
mov
jne
jge
adc
std
add
push
add
jle
or
mov
sbb
hlt
xor
test
mov
jne
popa
call
das
mov
(bad)
(bad)
mov
push
call
or
xor
bound
sti
sbb
fnstsw
xor
or
movs
shl
sbb
adc
push
mov
enter
mov
add
pop
rcl
sbb
aad
mov
bound
sar
push
mov
and
add
rcr
cmp
mov
dec
test
pusha
rol
or
cmp
out
mov
sti
mov
push
mov
sar
jmp
mov
ss
dec
adc
scas
dec
gs
sub
sbb
jp
sbb
mov
add
and
ja
push
jmp
add
pop
add
jge
xchg
pusha
mov
or
mov
cli
add
mov
cmps
sbb
out
dec
jo
jo
pop
or
inc
loopne
push
mov
or
inc
shl
fild
cmp
mov
adc
add
sub
lea
pop
xchg
jmp
lea
movs
mov
push
xor
and
add
pop
mov
adc
adc
mov
xchg
movs
adc
dec
push
in
mov
xor
sahf
push
int
(bad)
dec
mov
mov
test
mov
je
clc
push
mov
cmp
mov
lea
push
push
mov
call
jne
mov
sbb
sub
sub
mov
ret
dec
mov
paddd
fstp
fild
jmp
je
(bad)
inc
adc
mov
pop
add
pop
test
je
mov
fld
call
out
inc
pop
hlt
or
add
pop
out
cmp
pusha
bound
and
or
out
(bad)
push
adc
adc
mov
sti
lods
sti
push
test
push
add
and
(bad)
adc
retf
cld
pusha
push
push
sub
sbb
and
mov
xor
mov
sbb
mov
or
push
mov
rcl
adc
std
(bad)
std
jg
add
add
adc
out
sahf
add
in
dec
je
pop
out
in
movs
inc
push
pop
daa
push
adc
mov
jmp
jmp
add
mov
mov
loopne
sub
jmp
add
stos
test
jmp
out
or
hlt
cmp
inc
enter
call
enter
pop
int3
mov
mov
mov
mov
idiv
mov
push
mov
cmp
jne
shr
mov
xchg
ja
dec
aam
inc
dec
mov
push
mov
add
pop
sbb
xlat
jl
push
lea
add
pop
cmp
or
std
fstp
lea
movs
push
lea
push
lea
inc
push
pop
push
push
call
cmp
(bad)
cmp
sbb
push
call
cmp
and
repz
aam
fdivr
ror
jno
fistp
cmp
jl
mov
xchg
(bad)
sub
movq
push
jo
lea
mov
jne
call
mov
lock
std
lahf
dec
hlt
mov
or
scas
push
push
fmul
hlt
cmp
ja
mov
sbb
lock
push
cmps
mov
lock
(bad)
hlt
xor
cmp
lea
out
adc
xlat
or
sub
xor
pop
pop
cmp
pop
loopne
inc
sbb
push
call
and
inc
call
mov
cs
(bad)
test
mov
sbb
and
je
shl
cwde
leave
jae
fcomip
ffreep
xchg
push
xor
push
lea
mov
or
push
adc
cmp
push
cld
jg
mov
cmp
push
std
lahf
add
dec
mov
mov
mov
inc
loop
inc
jne
sti
mov
out
push
or
icebp
inc
and
fstp
pop
pop
(bad)
out
adc
xchg
ret
je
mov
aas
mov
xor
or
aaa
mov
or
mov
inc
xor
mov
adc
outs
cmp
sbb
out
or
mov
(bad)
cmp
je
mov
push
mov
mov
push
inc
test
jmp
(bad)
dec
cmp
je
xor
cmp
jle
mov
(bad)
sub
inc
inc
out
adc
ret
adc
jle
jl
stos
cmp
push
hlt
je
push
push
outs
push
cld
push
in
adc
std
outs
pop
pop
mov
mov
or
(bad)
(bad)
mov
pop
cmp
mov
jle
xor
mov
mov
mov
and
aaa
idiv
add
mov
sbb
cmp
and
pop
int
in
out
call
inc
in
add
scas
cmp
jl
scas
sti
push
adc
mov
dec
pop
stos
or
mov
inc
push
jmp
cld
cs
push
shl
push
push
inc
add
shl
sti
nop
retf
adc
inc
dec
pop
push
int3
or
dec
cmp
je
lds
and
mov
in
inc
push
lock
stos
ret
mov
loope
xchg
push
lock
jbe
push
mov
push
and
mov
stos
in
lock
sar
adc
in
jl
outs
add
adc
out
fidivr
push
call
inc
cmp
jb
push
mov
ins
push
sbb
sbb
pop
xor
pop
lea
push
jle
xor
or
test
sbb
xchg
dec
mov
sahf
shl
inc
add
mov
or
push
loope
and
std
test
cmp
add
or
sahf
or
or
adc
fs
xor
repz
push
out
out
dec
mov
push
push
push
int3
mov
pop
pop
cmp
adc
cmp
or
xlat
push
mul
adc
push
out
stos
div
xchg
sbb
fnsave
push
ja
stos
jmp
dec
pop
push
cwde
mov
mov
pop
aaa
std
add
sub
push
inc
pop
in
je
dec
xor
dec
add
dec
fmul
add
push
or
sti
(bad)
(bad)
mov
push
sub
push
push
mov
cdq
sub
sar
push
mov
sub
or
gs
push
ror
gs
jbe
jle
sbb
push
ret
clc
pop
mov
lea
push
push
clc
outs
nop
push
or
pop
mov
jne
jne
cmp
ja
jg
cld
jge
je
xchg
jo
mov
mov
sub
jne
push
loop
fstp
je
mov
and
in
jmp
push
mov
mov
and
xchg
jne
pop
test
and
ret
jne
mov
lea
push
push
in
inc
xchg
push
xor
popa
xchg
std
mov
mov
lea
push
push
jbe
adc
shl
stos
mov
lods
jg
das
cmps
(bad)
and
push
mov
js
inc
mov
mov
mov
ret
in
push
(bad)
mov
jne
mov
bswap
sbb
jl
clc
jl
or
movs
or
cmp
imul
mov
cmp
jg
ret
xor
leave
ret
mov
cmp
aas
push
or
push
cmp
mov
mov
mov
cmpps
mov
in
push
push
mov
(bad)
mov
jl
xchg
and
js
xchg
ror
push
pop
push
mov
or
into
add
mov
mov
test
push
inc
pop
mov
ins
sbb
or
jne
repz
(bad)
push
mov
shl
add
icebp
pop
xchg
or
cmp
cmp
pop
je
leave
add
js
mov
sbb
js
mov
cmp
mov
push
dec
xlat
dec
cmp
fisttp
mov
mov
push
mov
mov
lea
call
mov
je
dec
adc
mov
loope
ret
add
pop
xor
xchg
or
(bad)
or
rcl
lock
push
aad
mov
ja
or
fcom
push
in
jg
inc
inc
xor
jl
shl
clc
push
inc
(bad)
loop
fild
lea
push
mov
aam
mov
and
jge
mov
dec
lods
dec
lea
mov
pop
cld
jge
mov
mov
inc
mov
push
cmp
push
sbb
call
jge
in
pop
inc
adc
stos
inc
fadd
(bad)
lea
mov
push
xor
push
mov
add
enter
das
push
and
data16
or
push
and
out
mov
into
pusha
mov
and
inc
shr
in
mov
and
jle
mov
jle
xor
cwde
ret
ja
sbb
call
add
or
or
mov
fcomp
in
add
mov
jge
cmp
je
push
cmp
jle
add
mov
inc
hlt
sbb
add
fbstp
sbb
sbb
jo
mov
call
jmp
sbb
add
inc
lock
inc
pop
mov
inc
lock
dec
call
aam
push
stc
inc
dec
hlt
or
loop
pop
mov
xor
add
mov
push
stos
or
xchg
leave
adc
into
std
mov
mov
in
adc
pop
shr
cmp
imul
inc
sbb
mov
xchg
and
jnp
xor
daa
cmp
and
sub
ja
mov
clc
push
mov
neg
sbb
jge
and
fistp
ret
add
test
push
adc
shl
inc
and
jge
dec
mov
out
push
imul
aas
fdivr
dec
or
jbe
mov
or
jl
add
je
cmp
pop
nop
add
shl
or
sbb
add
xor
mov
push
push
aad
dec
cmp
push
adc
mov
std
mov
retf
add
dec
add
adc
mov
popa
pop
(bad)
cmp
stos
cmp
jl
lock
sbb
pop
scas
and
dec
call
push
dec
jl
cmc
or
inc
inc
cmp
xchg
ja
adc
inc
in
out
cmp
or
(bad)
adc
and
adc
push
push
or
inc
scas
call
dec
jge
loope
xchg
jo
xchg
je
cmp
dec
mov
push
adc
lea
mov
push
into
fdivrp
mov
into
pop
and
xor
in
fimul
jmp
mov
mov
loopne
xchg
imul
xor
arpl
mov
loope
(bad)
call
call
pop
fsub
inc
fbld
mov
(bad)
outs
lods
ja
cld
dec
push
jne
cmp
jae
adc
jmp
js
idiv
jg
push
ja
cmp
je
xor
jmp
and
push
gs
neg
or
jmp
mov
mov
ror
test
and
(bad)
inc
lea
mov
movs
add
mov
or
or
out
(bad)
mov
dec
adc
cmp
push
add
add
inc
adc
(bad)
mov
(bad)
push
iret
and
add
add
lea
fcomip
jns
push
push
push
mov
push
push
mov
mov
adc
jo
push
push
pop
push
fisub
push
fdiv
dec
jne
add
inc
mov
xchg
pop
lods
fcomp
cmp
jne
in
retf
add
ror
jge
(bad)
ficom
cmps
cmp
inc
add
and
repnz
inc
or
fcomip
cmp
jne
cmp
adc
ja
ss
xor
mov
xor
jae
pushf
enter
addr16
xor
mov
jmp
cdq
dec
hlt
xor
rcr
mov
in
cmp
pop
fwait
mov
or
scas
adc
push
test
dec
xor
dec
mov
clc
jg
add
or
pop
jo
jne
push
(bad)
jg
mov
inc
and
mov
fdivr
jne
sbb
and
push
inc
(bad)
(bad)
call
push
push
call
test
mov
jle
add
push
push
add
dec
pop
jne
pop
inc
sbb
std
mov
pop
pop
pop
ret
dec
mov
(bad)
(bad)
call
test
pop
je
mov
jmp
mov
mov
mov
mov
(bad)
ffreep
push
sbb
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
jg
or
mov
mov
mov
mov
pop
cmp
mov
mov
sar
loop
dec
or
sbb
or
inc
cli
(bad)
inc
mov
mov
cmp
je
or
mov
pop
or
mov
lods
(bad)
push
push
sbb
mov
sub
je
dec
je
dec
je
jmp
pop
neg
icebp
mov
mov
xchg
movs
mov
mov
jmp
ud0
and
std
or
lea
pop
push
outs
ret
dec
and
test
es
push
mov
pop
adc
dec
shl
pop
push
pop
ja
inc
push
jno
inc
jae
pop
pushf
push
je
and
or
pop
dec
je
jmp
and
pop
push
lea
mov
lea
mov
and
or
test
jle
aaa
ror
dec
retf
inc
shl
mov
pop
push
lea
or
(bad)
in
jne
mov
mov
fcomp
fistp
(bad)
(bad)
jbe
mov
test
jne
mov
cmp
jl
das
and
sbb
jl
push
outs
jmp
je
mov
push
mov
dec
push
in
adc
pop
je
inc
mov
mov
dec
adc
lea
mov
sbb
jmp
cmps
push
adc
xor
mov
loopne
jg
or
cmp
jle
test
jbe
add
fsub
push
or
sbb
push
movntq
out
inc
add
cmp
jl
add
or
mov
aam
scas
ss
sbb
sub
loopne
div
or
dec
mov
or
or
add
cmp
jb
xor
jmp
mov
jmp
mov
je
inc
mov
push
lea
cmp
ja
sub
mov
mov
push
push
push
add
xchg
xchg
icebp
out
scas
jmp
push
je
jmp
push
add
or
xchg
into
test
and
add
pop
or
xor
sbb
je
into
and
sbb
push
push
push
shl
ficom
dec
arpl
fist
dec
aaa
fisttp
cmp
push
je
cmp
add
cld
jle
jle
xor
xor
jle
push
adc
sub
pop
pop
xchg
push
bound
mov
jle
loop
ja
adc
shl
sub
cmp
repnz
sbb
and
adc
pop
inc
inc
mov
psubb
cld
push
ins
mov
(bad)
mov
mov
push
add
add
adc
mov
inc
or
cmps
out
ficom
cmp
(bad)
dec
push
(bad)
jecxz
dec
cmp
mov
mov
mov
and
or
in
cmp
pop
and
inc
cld
mov
sbb
mov
test
(bad)
mov
inc
add
popf
(bad)
or
imul
dec
cmp
stc
push
mov
nop
sti
adc
out
push
cld
xchg
adc
xor
cmp
je
call
(bad)
inc
pop
cmp
mov
push
add
jge
mov
xchg
cmp
mov
icebp
and
pushf
mov
lods
push
jmp
bound
xchg
imul
xchg
(bad)
cmp
je
mov
cmp
je
cmp
je
mov
jecxz
ret
cmp
jmp
cdq
add
inc
push
mov
cmps
(bad)
mov
pop
lea
xor
push
push
push
mov
mov
(bad)
cs
(bad)
call
cmp
lods
loope
and
ret
mov
fnstsw
(bad)
mov
add
lea
sbb
hlt
pop
ja
mov
add
(bad)
loopne
sub
jmp
jge
add
test
repz
push
jmp
retf
mov
in
je
aam
inc
icebp
mov
xchg
add
ret
sbb
ror
push
and
pop
test
clc
or
(bad)
mov
icebp
jg
test
test
add
je
popf
je
rcl
inc
loope
or
inc
dec
jne
xor
mov
xor
icebp
jg
inc
or
inc
or
sbb
out
ja
push
xchg
inc
outs
mov
rcr
mov
pop
cmp
fimul
jb
xchg
fcmovne
pop
call
inc
cs
add
xor
adc
(bad)
jg
mov
mov
mov
lea
pop
pusha
pop
xor
leave
pop
inc
lods
pop
inc
int3
int
rcr
fisubr
mov
lea
rcr
pop
push
dec
push
inc
pushf
add
fstp
lea
adc
pushf
push
add
adc
pushf
push
cmp
je
mov
test
stos
cmp
push
hlt
jo
hlt
add
adc
add
inc
cmp
jne
mov
add
pusha
inc
stc
xchg
cmp
dec
push
test
mov
push
push
lea
or
xchg
pop
pop
sub
or
pop
mov
test
inc
in
stos
ror
xchg
sbb
and
sbb
mov
(bad)
(bad)
jmp
or
popa
outs
cwde
mov
push
add
jmp
dec
or
cwde
fwait
or
sbb
inc
loopne
mov
inc
scas
imul
mov
cmp
add
sbb
jmp
dec
mov
pop
scas
pop
ja
je
sub
adc
rol
mov
sbb
bound
les
movzx
movzx
movzx
movzx
movsx
push
push
adc
and
push
push
push
lea
fld
xlat
and
and
pop
and
lea
test
sar
lds
stos
and
fdiv
fldz
popf
fwait
out
push
fstp
mov
fcom
mov
push
push
push
xchg
cmp
xchg
pop
mov
fs
xchg
adc
out
or
and
mov
test
dec
push
out
mov
lea
movs
fldz
xchg
mov
push
push
push
mov
aam
pusha
(bad)
or
add
pop
xchg
lea
jns
fadd
fmul
sbb
mov
popa
push
and
enter
jg
movs
movs
fild
mov
mov
dec
test
jbe
fld
fmul
fstp
inc
mov
cmp
jne
fld
fchs
fstp
fstp
jmp
add
jg
push
nop
rcl
xor
xchg
lods
jno
shr
mov
and
xor
add
mov
or
imul
xchg
mov
add
ret
sub
cdq
mov
mov
sbb
loop
test
xchg
ss
add
mov
call
mov
and
mov
mov
jmp
xor
(bad)
int3
mov
jmp
adc
add
inc
or
add
mov
call
sub
push
mov
xor
cmp
mov
sar
and
push
mov
mov
rol
test
je
xchg
xor
loope
mov
jmp
mov
sar
call
mov
mov
cmp
(bad)
lea
test
pop
dec
das
sub
push
ret
out
jmp
inc
call
lea
loop
outs
push
enter
add
sar
jmp
mov
add
pop
fdivr
mov
mov
mov
inc
push
mov
or
in
inc
mov
lea
mov
jmp
mov
push
mov
push
push
push
loope
push
mov
push
call
and
push
loopne
add
jge
add
inc
mov
cld
mov
xchg
xchg
rcr
mov
add
ret
jg
aas
cmp
lgs
dec
adc
mov
sub
lock
xor
cmp
leave
ret
mov
aas
inc
je
cmp
cmp
mov
std
cs
mov
je
push
je
pop
cmp
jmp
aam
mov
mov
mov
mov
(bad)
rcr
push
cld
fwait
(bad)
je
mov
ficom
mov
loopne
jg
je
call
cmp
inc
call
inc
lea
jnp
dec
rcl
leave
xchg
test
cld
mov
fidiv
test
mov
add
pop
push
add
mov
lock
and
add
push
ins
xchg
jmp
push
ja
stos
xor
je
adc
clc
push
jecxz
mov
add
xchg
cmp
inc
in
xchg
adc
dec
call
and
push
push
mov
push
add
push
pop
push
push
push
dec
cmc
sbb
repz
repz
(bad)
in
icebp
fsub
scas
dec
inc
movs
sbb
mov
add
mov
mov
imul
add
or
hlt
mov
mov
xchg
xor
ja
test
push
out
je
cmp
pop
pop
popf
lods
es
push
imul
pusha
test
test
popa
ror
cld
fld
mov
nop
jge
fstp
mov
push
inc
je
cmp
sbb
adc
and
mov
push
int3
jge
jl
add
(bad)
pop
fisttp
push
xor
xchg
in
cdq
push
mov
in
add
mov
pop
mov
xor
call
lahf
mov
adc
rcl
xchg
enter
xchg
sbb
push
push
pusha
adc
mov
cmc
cmp
xchg
pusha
cmp
(bad)
mov
push
enter
adc
and
sub
mov
xchg
pop
imul
xor
mov
jmp
push
push
aas
mov
dec
push
mov
dec
jmp
enter
mov
dec
mov
fiadd
jne
lea
xor
movs
rol
movs
and
data16
sti
and
or
dec
jp
(bad)
fidiv
or
mov
sbb
adc
inc
cld
fwait
mov
adc
(bad)
shr
push
mov
jne
or
dec
inc
cwde
pop
xchg
and
call
mov
xlat
jne
test
inc
inc
verw
cwde
or
pop
call
mov
mov
ret
mov
mov
stc
pop
pop
cmps
ret
das
jmp
mov
pop
mov
cwde
lea
or
ret
sub
jne
push
mov
nop
sub
jg
mov
xor
jmp
and
(bad)
push
mov
loopne
jle
aaa
mov
mov
push
repnz
pop
adc
jmp
inc
or
pop
add
out
ret
shl
adc
(bad)
and
rcl
inc
mov
cmp
jmp
mov
call
retf
mov
(bad)
(bad)
cmp
jle
mov
xor
lock
and
cmp
lea
jne
mov
jmp
sub
rol
cmp
pop
cmps
jb
mov
jle
xchg
sub
int3
mov
inc
mov
lea
shl
mov
daa
dec
dec
or
or
and
cmp
je
mov
cmp
jne
mov
or
mov
adc
mov
or
rcr
inc
je
xchg
sbb
cmps
mov
push
add
mov
movzx
lods
cmp
daa
cmp
jle
sub
clc
or
call
sbb
mov
jne
or
jmp
jl
mov
dec
test
xchg
inc
cmp
add
adc
add
inc
add
nop
dec
std
(bad)
out
mov
and
or
jne
mov
mov
cmp
add
ret
push
adc
fwait
jmp
cld
push
in
sbb
lock
mov
or
inc
int3
sub
cmp
jl
sbb
sar
je
pop
mov
mov
inc
inc
mov
cmp
je
arpl
push
push
or
jmp
sbb
test
jne
inc
inc
les
inc
sub
jne
loopne
test
inc
adc
inc
dec
rcr
jge
jne
or
mov
out
push
add
sbb
lock
out
cmp
cmp
jge
retf
(bad)
sti
cld
(bad)
inc
push
mov
push
xor
xor
mov
mov
test
jbe
push
jecxz
jmp
cmp
jb
dec
mov
mov
test
je
mov
arpl
loop
push
and
aad
mov
mov
push
push
push
xor
add
push
cs
push
lock
enter
pop
xor
fdivrp
pop
ret
mov
std
xor
inc
mov
mov
sub
inc
or
xor
sub
sbb
cmp
mov
inc
imul
push
mov
mov
dec
inc
or
jmp
mov
ret
mov
mov
hlt
daa
and
pop
cld
dec
push
cmp
mov
je
sub
sub
cmp
outs
js
retf
leave
outs
inc
adc
sbb
inc
adc
popf
jecxz
imul
push
push
push
add
push
add
je
jmp
inc
adc
sar
mov
dec
mov
push
lock
push
push
mov
cmp
jne
push
pop
stos
pop
xchg
fiadd
adc
mov
mov
ret
adc
jmp
mov
inc
adc
jbe
jle
push
push
sbb
ficomp
rcr
mov
xor
add
xor
xlat
mov
push
sar
or
push
mov
add
add
push
or
ret
cmp
mov
test
cmp
push
stos
je
addr16
adc
ret
push
push
lock
add
or
je
(bad)
push
lea
cmp
push
int
sbb
lea
adc
sar
push
or
or
xchg
ret
jbe
fst
int
adc
mov
adc
mov
push
pop
cmp
or
push
push
inc
cs
cmp
push
adc
ret
cmps
inc
sub
and
leave
inc
mov
in
pushf
jnp
cmp
adc
and
sbb
or
push
mov
test
je
mov
je
and
fwait
addr16
xor
adc
sub
sub
jbe
ret
jb
mov
adc
std
inc
out
cld
inc
and
pop
sbb
pushf
(bad)
pusha
dec
adc
mul
dec
pop
sbb
arpl
ret
mov
cwde
sub
sbb
mov
pop
sub
shr
cwde
push
mov
push
cmp
cmps
sbb
jmp
push
test
cmp
je
cmp
je
cmp
je
mov
and
jne
cmp
je
and
inc
dec
mov
or
push
shl
adc
push
xor
push
adc
adc
retf
inc
jb
jnp
push
and
or
imul
je
push
sar
xor
imul
jno
push
inc
dec
scas
ror
dec
ja
test
je
cmp
jne
cmp
clc
(bad)
out
ficom
clc
push
je
mov
je
cmp
je
cmp
je
mov
mov
jle
lods
mov
test
add
pop
adc
sub
div
mov
and
sbb
dec
mov
push
xor
into
mov
outs
pop
xor
add
push
(bad)
push
in
mov
push
or
bound
dec
cmp
(bad)
(bad)
clc
push
ja
movzx
jmp
shl
or
inc
jmp
push
(bad)
(bad)
inc
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
lea
push
scas
push
jnp
mov
xchg
mov
sar
jmp
pop
inc
add
add
dec
shl
mov
fwait
or
add
pop
pop
add
add
or
mov
out
add
add
add
xor
adc
retf
push
retf
adc
mov
sub
(bad)
dec
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
dec
push
pop
test
pop
jne
xor
jmp
inc
cli
add
test
mov
adc
in
call
sbb
fsub
cli
test
out
mov
push
fst
cwde
sbb
ret
inc
cdq
fmul
sub
adc
(bad)
dec
sbb
xor
push
sub
dec
mov
pop
je
dec
je
fsubr
(bad)
jg
je
dec
jne
mov
jmp
mov
or
pop
inc
call
or
push
dec
inc
ds
inc
sbb
sub
pop
je
sub
je
add
sub
jne
sbb
fldpi
or
pop
sar
fisttp
jo
xor
push
cmp
jne
call
adc
cmp
jne
cmp
je
mov
jge
push
jne
cmp
jne
xchg
push
adc
dec
adc
jbe
xor
inc
push
mov
mov
test
pop
out
loope
inc
adc
fdivr
sub
jp
xchg
mov
mov
lea
adc
outs
ret
lock
leave
ret
sub
jmp
jne
sub
mov
push
popa
ins
sub
push
pop
cmp
pop
int3
adc
cmp
les
adc
jbe
mov
adc
sbb
adc
call
pop
push
jo
sub
cs
sbb
ret
js
test
pop
fwait
mov
mov
cwde
or
int
mov
adc
jmp
out
mov
or
mov
or
clc
push
(bad)
pop
or
dec
sbb
dec
and
mov
xor
mov
and
fdiv
ja
or
xchg
push
push
mov
push
adc
sub
les
mov
cmp
sti
(bad)
(bad)
out
loop
sbb
mov
mov
cmp
jl
cmp
jle
cmp
jmp
xor
add
add
leave
cmp
fst
jmp
xor
cmp
jbe
and
mov
mov
pop
sub
fild
xor
test
cmc
outs
push
in
push
cmp
push
clc
enter
push
pop
or
mov
daa
idiv
inc
mov
les
stos
pop
addr16
jnp
jmp
and
and
dec
cmp
and
dec
push
dec
sete
mov
jle
mov
xor
sti
shl
xchg
cli
or
stos
xchg
je
sar
ja
(bad)
call
add
cmp
fadd
inc
fadd
loopne
(bad)
mov
mov
add
add
rol
loope
push
mov
push
mov
sub
les
lea
mov
add
add
rcr
jo
inc
shr
in
push
jbe
retf
push
imul
ins
ret
out
ja
movsx
leave
sbb
push
pop
inc
jmp
into
mov
sar
mov
dec
fucom
or
add
ret
mov
in
add
mov
je
jae
mov
cmp
mov
les
mov
mov
or
call
or
mov
xor
cmp
setne
test
mov
je
idiv
lock
add
js
push
jns
cmp
jne
rol
mov
jne
mov
bound
out
(bad)
dec
cmc
push
cmp
je
jmp
cmp
ja
cmp
jbe
add
cmp
push
mov
test
jne
pusha
pop
xchg
jmp
jmp
mov
sub
sbb
inc
out
clc
or
push
sbb
inc
or
(bad)
and
push
mov
xchg
or
loopne
and
push
or
xchg
je
push
add
cmp
mov
sbb
and
inc
jne
cmp
jle
inc
push
jbe
mov
call
lock
mov
call
test
div
mov
push
cmp
cmp
pop
mov
mov
xor
push
call
stc
or
mov
jne
inc
push
sbb
std
cmp
lahf
xor
cmp
je
cmp
sbb
cmp
mov
push
xchg
test
mov
add
jle
test
je
pop
fdivr
lods
sub
(bad)
and
shl
adc
loope
push
push
jmp
test
jne
daa
cld
(bad)
jbe
jl
test
push
dec
(bad)
sbb
(bad)
pop
pop
fimul
xchg
pop
aaa
adc
sbb
shr
lods
push
sbb
or
fist
or
push
int
dec
das
sbb
fwait
scas
call
push
mov
inc
cmp
je
cmp
jg
inc
xchg
sub
pop
push
inc
mov
dec
dec
fmul
arpl
add
(bad)
f2xm1
das
jle
xchg
jne
cmp
jne
jmp
jle
jmp
cmp
or
inc
jno
or
enter
jno
jne
cmps
ins
in
imul
mov
jl
call
inc
pop
shl
cmps
pusha
(bad)
iret
sbb
dec
leave
es
push
xchg
mov
(bad)
push
cmp
je
test
jne
sub
cmp
dec
jl
retf
inc
(bad)
push
ret
jmp
fwait
or
push
test
mov
aam
sbb
popa
mov
mov
xor
and
mov
stos
enter
pop
mov
xor
adc
int
lods
cmp
xchg
jbe
mov
out
scas
ja
lea
jb
call
xor
jo
inc
fild
inc
pop
fwait
je
adc
enter
add
adc
fcmove
push
sub
mov
push
cmp
fwait
push
push
pop
pop
pop
aam
mov
adc
arpl
aaa
inc
cmp
sbb
xchg
sub
inc
add
adc
pop
ret
fwait
sbb
(bad)
sbb
div
pop
add
faddp
mov
mov
jle
or
cmp
cmp
aas
pop
ret
inc
or
jg
push
pop
dec
jecxz
loope
add
test
mov
inc
je
xor
push
cmp
mov
(bad)
push
xor
bound
addr16
xchg
add
mov
leave
mov
inc
dec
and
or
sbb
dec
dec
jne
push
fidiv
out
clc
std
jmp
push
push
je
adc
fisubr
mov
not
pop
or
fiadd
div
pop
cmp
cdq
loope
les
mov
call
shr
cmp
jne
movzx
jmp
push
pop
jp
leave
add
push
push
sub
inc
xor
std
add
or
jae
jo
jmp
mov
test
adc
cmc
call
out
xor
retf
in
ss
or
or
jne
test
ret
mov
ret
or
test
add
cmp
mov
hlt
xor
sub
sbb
or
adc
and
push
hlt
stos
aam
pop
in
cmps
out
cmps
dec
pop
add
push
xor
jmp
dec
and
and
adc
inc
xor
sub
xchg
adc
in
addr16
lahf
cmp
pop
pop
loope
jp
add
and
jmp
mov
(bad)
out
fiadd
dec
sbb
dec
fmul
add
call
pop
call
pop
jbe
loope
pop
fist
add
add
add
sti
or
xchg
inc
mov
je
mov
mov
push
mov
adc
sbb
test
rcl
mov
sbb
xchg
mov
add
mov
cmp
in
stos
jo
stos
je
xor
scas
xor
cmp
mov
mov
or
or
add
neg
sbb
jne
push
adc
add
je
ss
push
add
cli
ffreep
and
mov
mov
xor
push
sub
push
mov
pop
mov
or
sub
jne
in
jne
push
inc
aaa
lock
adc
shl
adc
xor
jne
cmp
(bad)
ss
add
or
jge
je
aas
std
mov
std
(bad)
inc
or
test
jne
mov
cmp
jne
test
jne
or
pop
sbb
out
xchg
dec
mov
dec
rol
dec
inc
push
mov
push
pop
pop
add
pusha
jb
push
outs
push
lea
mov
or
stc
sbb
pop
add
test
lock
or
stc
or
jmp
inc
or
mov
les
xor
inc
loopne
xor
in
je
or
add
push
mov
sbb
mov
ins
jo
xor
xchg
pop
add
sub
mov
adc
sbb
stos
push
xchg
jmp
test
test
jne
dec
(bad)
std
jmp
xor
dec
pushf
rol
mov
push
lods
push
scas
push
rol
and
(bad)
cmp
iret
cdq
in
pusha
jg
mov
stc
and
jle
stc
es
jle
(bad)
cmp
jne
cdq
mov
in
or
into
leave
pusha
loop
lea
jmp
jp
xchg
xor
fdiv
or
rcr
(bad)
(bad)
call
or
call
into
mov
je
push
push
clc
into
cmc
cmp
push
push
addps
add
ja
out
cmps
aaa
push
pop
sub
jnp
xor
rol
pop
and
inc
in
add
adc
test
jne
ret
dec
add
(bad)
pop
push
or
xchg
inc
test
sar
xor
js
add
test
xor
adc
xchg
je
mov
iret
sbb
lea
mov
push
push
and
ss
mov
or
iret
mov
push
push
inc
rol
sub
fwait
test
(bad)
cmp
call
aam
std
inc
inc
call
mov
add
out
fisttp
retf
in
or
adc
mov
adc
arpl
jmp
push
or
(bad)
pop
add
push
pop
jge
add
cmps
adc
mov
mov
in
dec
add
pop
dec
mov
sti
add
or
inc
mov
lea
xchg
sbb
(bad)
mov
inc
pushf
test
je
movzx
in
pop
ret
sub
sahf
pushf
push
push
push
jle
repz
mov
mov
mov
mov
push
std
sti
mov
pop
pop
ret
mov
push
pop
add
add
outs
out
xlat
mov
push
inc
ror
das
and
aas
fcom
pop
and
ret
or
(bad)
push
add
mov
ins
push
or
loop
mov
mov
cmp
add
inc
add
inc
or
jbe
mov
jne
dec
or
ret
int3
int3
int3
test
loopne
sub
fxch
fstp
fst
(bad)
out
pop
fnsave
ret
lea
outs
xchg
mov
push
fstcw
cmp
je
jae
popa
and
and
cmp
or
add
mov
je
outs
inc
push
std
jo
pop
fyl2x
and
(bad)
out
dec
add
fchs
cmp
adc
add
lea
sbb
fisubr
sbb
fs
out
adc
in
pop
lahf
pusha
outs
xchg
test
cmp
or
inc
jmp
faddp
por
adc
jmp
lock
dec
jmp
xor
jmp
xor
and
or
jne
mov
mov
cmp
mov
and
jne
or
jne
pop
or
pop
mov
sub
mov
push
es
and
ja
test
outs
and
popa
or
add
int3
cmp
mov
adc
or
or
test
push
(bad)
out
or
fstp
ins
adc
je
lds
inc
mov
shr
or
inc
and
sub
xchg
test
je
out
jmp
mov
out
test
je
fchs
adc
fcomp
imul
fstp
pop
adc
fld1
adc
out
push
sti
mov
in
rcr
test
jne
fld
jg
pushf
fld
frndint
fcomp
mov
fstsw
sahf
jne
fmul
fstp
rcl
rol
fadd
mov
push
push
movs
add
jns
mov
fbstp
xor
inc
add
and
repnz
fld
push
push
fstp
fld
std
jg
into
cmp
js
mov
jle
cmp
jle
cmp
jne
in
pusha
(bad)
sbb
jle
into
jno
outs
pop
jno
jl
or
sbb
jg
retf
ds
push
fldz
inc
or
push
mov
out
ss
or
je
fadd
push
cs
clc
fld
jae
sub
push
push
mov
pop
mov
rol
adc
lahf
xor
dec
mov
fstp
or
sbb
cs
sbb
sbb
cs
jnp
gs
adc
inc
clc
fxch
mov
or
jo
scas
jp
or
cmc
dec
aas
sbb
leave
cmp
clc
cdq
fsubr
xchg
out
fnstenv
jbe
inc
sbb
push
jecxz
push
in
jmp
mov
cld
(bad)
(bad)
inc
retf
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
inc
test
out
mov
in
pop
rol
push
cmp
test
pop
push
xchg
push
xchg
or
and
sub
sub
and
add
jo
sbb
jmp
or
daa
inc
or
push
push
jmp
sub
pop
or
ret
outs
es
push
aas
clc
and
ret
and
dec
push
or
xor
cmps
jmp
adc
int3
pop
add
fstcw
fwait
mov
idiv
ja
or
data16
fistp
fldcw
mov
mov
imul
mov
out
jmp
(bad)
jg
inc
adc
fs
ffreep
sbb
mov
cmp
jne
je
mov
dec
pop
je
dec
je
dec
mov
add
stc
push
jmp
cli
fcomip
pop
inc
pop
ret
and
ror
inc
or
push
pop
icebp
adc
sub
and
out
mov
pop
ret
push
inc
hlt
mov
jne
call
and
add
pop
ret
or
add
clc
pop
ret
push
push
mov
or
call
or
pop
mov
(bad)
pop
ret
cmp
(bad)
jg
outs
xor
push
je
test
jne
cmp
bound
push
mov
adc
test
je
add
jl
je
mov
mov
mov
cmp
pop
jbe
mov
cmp
jne
push
dec
(bad)
fist
imul
jmp
mov
lea
xor
mov
pop
loop
inc
xchg
mov
ror
mov
adc
push
inc
fbld
arpl
mov
jmp
repz
pop
pop
xchg
jmp
push
es
adc
cld
sbb
pop
inc
add
cld
mov
rep
bound
mov
inc
add
cs
in
aas
mov
mov
mov
dec
out
or
xchg
cld
lea
push
adc
dec
mov
or
xor
in
scas
jo
ins
sub
bound
ins
inc
lock
mov
inc
adc
inc
lock
add
cdq
mov
jb
inc
in
lea
les
(bad)
push
push
push
xchg
mov
neg
(bad)
icebp
mov
dec
cld
push
push
push
push
push
rcr
cmp
(bad)
aaa
push
mov
push
fadd
mov
add
sbb
mov
cmp
ja
in
push
cmp
push
cdq
push
xor
bnd
jle
sahf
sbb
mov
mov
popf
fmul
test
mov
mov
lea
sar
hlt
jg
popf
call
pop
pop
and
cmp
daa
loope
mov
jmp
mov
(bad)
loope
xor
frstor
add
loopne
je
scas
mov
jmp
pop
jmp
push
adc
jo
dec
add
and
or
xchg
loope
adc
or
(bad)
jle
and
arpl
dec
je
push
cmp
(bad)
cmps
call
pop
adc
cld
jl
cmp
(bad)
(bad)
call
pop
xchg
imul
add
dec
or
jg
mov
push
or
dec
xor
jge
mov
add
inc
cld
mov
inc
daa
sbb
ja
outs
and
add
lock
xchg
imul
retf
inc
pop
pop
icebp
push
leave
push
std
shl
push
and
adc
lods
(bad)
es
inc
adc
inc
add
mov
jnp
loop
adc
mov
mov
mov
push
push
push
xor
test
xor
and
(bad)
(bad)
fnsave
test
cmp
je
lea
mov
mov
cmp
fild
add
push
jge
or
aam
(bad)
call
jmp
fs
daa
out
scas
or
mov
and
mov
mov
cmp
jne
ret
pop
shl
push
push
mov
or
dec
xchg
dec
push
dec
mov
mov
pop
xchg
inc
jle
(bad)
call
push
mov
cmp
jle
movzx
push
cwde
ds
(bad)
jg
xchg
push
mov
mov
and
sbb
add
rcr
push
rcl
inc
call
xchg
xchg
mov
les
leave
ret
push
nop
add
adc
pop
lock
mov
movzx
inc
cmp
mov
ds
ja
inc
sub
rdpmc
fild
push
aaa
aas
cmp
jno
or
add
lea
cmc
(bad)
sti
fwait
lea
xor
iret
cmp
mov
jne
idiv
xchg
or
adc
ret
xchg
sbb
add
sub
mov
cmp
xor
inc
call
inc
shr
cdq
mov
push
or
push
mov
ss
sti
mov
mov
repnz
out
mov
cmp
loopne
ffreep
pop
mov
adc
neg
jmp
mov
pop
pop
pop
pop
pop
loope
sahf
pusha
stc
pushf
push
push
test
shl
adc
std
inc
loope
pop
or
push
out
adc
enter
or
add
push
adc
mul
ret
push
mul
div
xchg
unpcklps
or
loope
rcr
or
cmp
jne
mov
ja
cwde
mov
fisubr
or
pop
mov
movzx
inc
mov
test
icebp
inc
add
push
mov
test
pop
gs
jmp
sti
out
aaa
push
mov
push
or
push
movzx
inc
or
add
(bad)
aam
outs
sub
jmp
enter
cmp
data16
je
jmp
not
iret
push
cmp
pop
dec
dec
jmp
adc
add
in
or
fwait
sbb
cmp
outs
xor
pop
cld
mov
rcr
sbb
inc
(bad)
(bad)
(bad)
fdiv
add
dec
or
cmp
jne
xor
jmp
push
lea
push
sbb
push
push
push
push
push
push
fnsave
cdq
inc
pop
cmp
jne
inc
jge
jmp
lds
ins
das
jne
sti
fild
add
inc
pusha
jmp
movzx
mov
sbb
adc
and
or
cld
std
mov
inc
inc
test
je
cmp
imul
popa
out
enter
cld
jmp
pop
fistp
jne
add
out
add
jmp
inc
hlt
jmp
movzx
mov
adc
and
jmp
(bad)
jne
test
je
fisttp
icebp
push
and
mov
sbb
js
cmp
xchg
mov
mov
xor
aaa
lock
enter
jge
inc
mov
neg
neg
sbb
inc
add
and
sbb
retf
inc
cmp
sbb
and
shl
icebp
mov
pop
shr
ja
push
mov
cld
adc
adc
jmp
sbb
shr
rcr
or
jne
pop
lock
sahf
(bad)
(bad)
(bad)
jg
and
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
iret
sbb
(bad)
neg
neg
sbb
and
mov
push
pusha
leave
popa
arpl
inc
cmp
push
and
popf
jnp
mov
adc
adc
sbb
cmp
inc
and
mov
xor
dec
jns
push
inc
in
dec
jmp
mov
repnz
ins
xchg
or
enter
adc
idiv
or
push
or
or
inc
and
sbb
pop
in
je
dec
or
dec
jns
pop
lods
mov
mov
push
(bad)
or
push
cdq
adc
mov
mov
add
cmp
jbe
cmp
jb
std
mul
jne
shr
and
cmp
jb
rep
jmp
mov
pop
mov
or
loopne
add
jmp
fstp
and
dec
push
nop
jmp
add
add
and
mov
mov
mov
mov
mov
push
mov
add
xchg
cmp
pop
int3
lea
sub
add
add
pop
xchg
scas
cmp
inc
sbb
jne
sbb
adc
add
jmp
hlt
add
mov
mov
pop
call
call
fwait
cmps
imul
add
fld
mov
popa
mov
add
mov
mov
or
ret
in
mov
adc
or
nop
lea
lea
jg
cs
or
xchg
rep
cld
adc
gs
adc
or
mov
into
cmp
nop
call
xchg
scas
xor
mov
and
mov
dec
cmp
jae
pop
rcl
xchg
and
sub
sub
mov
(bad)
pushf
or
nop
daa
and
sub
cli
lock
add
inc
jmp
pop
test
add
movs
lods
mov
shl
pop
sbb
ins
jb
fmul
adc
jle
leave
pop
pop
mov
pop
or
add
out
outs
and
int
repnz
loopne
adc
ins
mov
sub
inc
or
inc
add
ins
xchg
(bad)
lss
int3
cmp
lds
cmp
sbb
jge
ins
enter
imul
sub
or
out
call
mov
or
add
jmp
(bad)
(bad)
inc
add
mov
inc
test
ja
and
dec
mov
mov
mov
mov
dec
inc
cmp
jb
cli
call
sbb
jge
or
cmp
jge
test
push
sbb
pop
std
test
pop
ret
das
pop
jb
pop
pop
test
add
call
les
jne
adc
jne
cmp
jg
or
dec
jae
push
js
aam
repz
jge
and
(bad)
push
push
je
mov
mov
mov
inc
neg
adc
neg
jmp
unpckhps
xchg
mov
ror
inc
sbb
mov
mov
iret
or
(bad)
(bad)
call
add
mov
inc
test
ja
jb
test
ja
and
dec
outs
mov
mov
mov
out
sub
push
mov
dec
inc
xor
jb
stc
ret
push
(bad)
(bad)
mov
jae
cmp
jae
shrd
shr
ret
mov
(bad)
cli
and
shr
mov
rol
push
mov
push
mov
inc
pop
aas
pop
push
jbe
pop
test
ret
cs
inc
je
push
push
loop
add
mov
fwait
imul
and
loopne
xchg
call
push
cmp
loopne
inc
jb
cmp
dec
enter
add
std
scas
add
pop
js
adc
je
cmp
clc
jne
mov
or
push
pop
add
cld
inc
dec
sbb
sti
inc
push
pop
adc
mov
test
or
jne
mov
jmp
adc
mov
or
jb
sbb
and
ja
neg
xor
pushf
push
pop
std
cmp
xchg
sub
int3
mov
je
push
push
sbb
je
adc
(bad)
repz
mov
jmp
jmp
mov
inc
mov
inc
dec
je
test
je
pop
fmul
(bad)
div
mov
sbb
je
and
inc
adc
adc
pop
adc
sahf
fnstenv
je
xor
jne
cmp
jne
pop
pop
jmp
stos
aaa
scas
or
mov
(bad)
(bad)
(bad)
jle
(bad)
(bad)
dec
lock
ret
add
test
je
test
je
test
je
test
sti
add
add
add
jne
mov
jmp
jl
add
into
sub
push
mov
push
jae
(bad)
jg
ror
xor
mov
add
dec
jne
mov
test
push
cmp
adc
push
push
in
add
xchg
mov
dec
jo
sbb
jl
inc
pop
test
cld
scas
jge
cdq
pop
mov
jnp
repnz
cli
pushf
les
gs
je
push
addr16
movs
jmp
xor
push
or
inc
pop
mov
out
mov
hlt
pop
mov
dec
popa
outs
mul
jne
inc
stos
dec
adc
dec
cmp
jne
test
mov
mov
xor
push
lock
push
jnp
ret
jle
mov
jo
add
add
cs
add
ja
pop
pop
xchg
imul
push
cmp
cmp
inc
lds
scas
gs
or
fbld
test
fisttp
inc
xor
xor
popa
xchg
adc
in
cmp
in
retf
mov
pop
mov
and
sub
movs
pop
(bad)
inc
add
jae
push
pop
mov
cmp
and
(bad)
xor
ja
sub
mov
xchg
add
nop
pop
div
xor
lock
push
jmp
xor
inc
add
and
push
cmp
add
cmp
popa
pop
xor
or
call
loop
sub
cmp
pop
scas
aaa
push
push
mov
pop
and
mov
dec
mov
push
push
test
pop
jne
and
push
cmp
scas
jle
sti
jge
mov
mov
dec
pop
mov
sti
(bad)
and
push
mov
(bad)
out
or
adc
mov
xor
mov
mov
(bad)
mov
and
(bad)
dec
add
leave
mov
rol
add
pop
adc
or
xchg
inc
(bad)
inc
or
add
inc
cmp
pop
push
psubusb
jg
push
cmp
je
mov
idiv
jb
cmp
sub
sar
add
push
mov
xchg
mov
rol
cs
jge
push
gs
and
lahf
push
dec
and
call
cs
push
loope
(bad)
retf
push
and
mov
jp
out
popf
xchg
dec
(bad)
mov
mov
mov
sub
dec
push
mov
cmp
push
sbb
ret
sub
call
pop
inc
xlat
sub
sub
stc
imul
adc
pmuludq
push
add
dec
inc
or
jmp
and
scas
pop
in
push
push
icebp
neg
dec
ret
je
and
jg
pop
xor
inc
jne
push
adc
mov
push
pop
and
movsx
ret
imul
fdivr
popa
jl
cmp
jg
sub
pop
ret
push
mov
push
mov
push
mov
sbb
pushf
mov
dec
add
call
push
push
test
pop
mov
scas
jle
and
fistp
shl
mov
pop
jmp
sub
(bad)
in
push
adc
mov
jne
add
clc
popa
jl
ss
loope
pop
sbb
js
and
shl
inc
mov
jo
pusha
jmp
outs
mov
lock
and
inc
mov
jmp
mov
clc
(bad)
(bad)
(bad)
dec
movzx
test
je
and
mov
mov
push
jmp
and
mov
and
inc
cld
push
pop
lea
pop
push
mov
or
jg
xor
cmps
adc
cli
test
inc
cmp
(bad)
out
cld
jmp
add
cld
shl
or
nop
sbb
nop
loope
or
push
mov
mov
push
faddp
and
jno
and
mov
sbb
inc
pop
call
pop
inc
cmp
je
cdq
or
mov
inc
cmc
pop
pop
pop
aam
lock
lea
mov
popa
add
cmp
inc
add
sbb
inc
je
jmp
xor
xor
ret
loop
inc
dec
ret
mov
add
sar
xsavec
push
push
(bad)
dec
or
ds
(bad)
push
sub
or
push
hlt
(bad)
clc
pop
cmp
je
cmp
ja
cmp
out
je
mov
sub
mov
cmp
je
stos
(bad)
dec
cmp
jne
inc
cmp
jne
cmp
je
jno
les
mov
jmp
sub
lds
ror
lea
lea
xor
mov
mov
imul
push
push
xor
je
mov
inc
cmp
je
test
je
adc
sbb
jne
or
push
scas
jecxz
push
or
mov
mov
std
ror
xor
jg
xor
cmp
icebp
ret
loope
jne
and
jne
cmp
xor
pop
pop
dec
mov
cmp
je
cmp
aaa
out
cmp
je
dec
out
call
fnstenv
fstp
adc
aam
xchg
pop
pop
mov
(bad)
aaa
or
jae
ret
lea
push
cld
ror
fist
push
scas
inc
neg
dec
mov
std
repnz
or
scas
inc
cmp
je
add
sub
outs
xor
and
push
stc
inc
pop
(bad)
cs
dec
movzx
movzx
test
push
add
push
cmp
adc
mov
and
(bad)
aas
jne
lea
in
(bad)
(bad)
(bad)
jmp
test
jmp
or
jne
inc
mov
and
sti
dec
idiv
mov
or
or
sub
mov
and
call
push
(bad)
(bad)
jmp
popa
popf
push
mov
pop
xor
lea
push
rep
pop
mov
mov
movzx
mov
and
shr
shl
lea
or
mov
(bad)
mov
mov
jne
push
mov
mov
push
lock
pop
and
aaa
cld
dec
shl
shr
mov
test
je
pusha
add
loopne
fimul
mov
and
and
pop
shl
and
jmp
sti
and
inc
dec
pop
pop
mov
mov
sub
movs
and
xor
(bad)
dec
inc
mov
or
ins
dec
sub
fisttp
out
clc
xchg
add
xor
je
dec
je
xor
idiv
pop
out
sub
jb
push
mov
shl
add
push
adc
fucomip
pop
pop
and
jg
rol
sub
pop
ret
daa
jmp
push
std
fs
sbb
dec
xor
dec
je
mov
mov
xor
je
shr
or
jmp
sbb
mov
cwde
pop
rol
add
call
mov
mov
mov
mov
mov
mov
mov
cli
xor
mov
div
push
mov
mov
leave
je
or
inc
and
jne
inc
cmp
or
mov
adc
pop
push
push
lea
lea
cmp
jbe
mov
enter
ret
int3
mov
mov
mov
cmp
mov
adc
les
inc
je
lea
(bad)
(bad)
out
mov
mov
push
mov
cmp
inc
and
adc
push
sub
call
jmp
mov
mov
cmp
dec
or
mov
ja
stos
loope
jb
mov
lock
mov
pop
jmp
add
dec
or
test
je
mov
jmp
pop
mov
sub
push
out
pop
dec
cwde
or
jno
jmp
lahf
jge
aad
cli
and
inc
push
test
arpl
mov
push
jmp
mov
mov
and
in
and
and
aaa
mov
mov
sub
(bad)
(bad)
jmp
mov
mov
and
call
icebp
cmp
jb
pop
cmp
sti
cmp
ja
sub
mov
cdq
mov
or
cmp
adc
rol
sub
jnp
push
shr
add
and
popf
pusha
nop
or
push
sub
out
punpckhdq
push
mov
pop
dec
cmp
loop
xor
fistp
popa
popf
test
mov
jge
dec
cmp
jne
push
sbb
repz
mov
(bad)
(bad)
inc
test
mov
je
mov
mov
mov
cdq
idiv
mov
imul
out
(bad)
(bad)
add
lea
xor
add
lock
sub
inc
push
adc
lock
add
inc
sub
mov
cdq
mov
(bad)
inc
add
(bad)
mov
mov
imul
add
test
jne
mov
mov
rcl
pop
add
adc
pop
neg
ins
jge
not
dec
mov
push
sub
mov
(bad)
mov
mov
mov
cmp
or
stos
push
(bad)
sub
pop
mov
outs
or
icebp
call
xor
inc
add
lds
icebp
inc
cmp
lock
mov
mov
aam
(bad)
mov
cli
jae
add
ret
test
je
test
call
out
mov
pop
sbb
ret
ret
aad
int3
int3
cli
inc
mov
push
mov
add
test
je
imul
clc
test
jle
push
les
mov
push
mov
test
mov
std
mov
jmp
or
or
xor
mov
add
push
std
xchg
fs
push
xor
xor
or
pop
jg
sbb
jle
mov
outs
pop
fnsave
or
je
adc
push
sbb
sbb
dec
or
rol
punpckhbw
idiv
jle
mov
jmp
adc
rol
push
sbb
loope
pop
jne
or
inc
push
or
cmps
pop
pop
inc
cmp
mov
mov
test
mov
je
ja
jo
ss
push
and
pop
(bad)
xor
and
jmp
xlat
push
in
jge
imul
sbb
loopne
test
int3
dec
or
lock
(bad)
aas
pop
dec
inc
or
add
inc
sbb
mov
ins
jmp
mov
sub
dec
xor
mov
jb
mov
push
push
push
cmp
or
sub
add
jno
jge
jmp
cmp
jb
jg
cld
adc
adc
shr
push
push
or
mov
sbb
push
sub
add
jmp
(bad)
mov
sub
js
xchg
or
add
test
cwde
mov
add
ret
js
mov
add
sub
div
jmp
push
mov
faddp
inc
in
dec
adc
inc
call
ds
inc
mov
lea
loopne
loopne
sar
shr
les
or
push
xor
imul
mov
in
(bad)
loopne
adc
fstp
repz
push
ficomp
jmp
mov
sbb
cmp
ss
inc
mov
and
out
cmp
pop
mov
aad
(bad)
dec
loopne
out
mov
push
pop
push
jmp
xor
sub
dec
inc
cmp
adc
xchg
jo
pop
out
pop
inc
jl
cmp
push
push
add
ror
sub
aas
ins
cmp
daa
cmp
scas
gs
das
ins
push
cmc
test
jne
mov
ret
loopne
jo
push
dec
call
inc
pusha
add
sbb
inc
in
jg
scas
aaa
lock
std
dec
in
lock
dec
and
jmp
sub
ret
test
pop
(bad)
sar
adc
sub
xchg
or
mov
or
push
push
pop
mov
lea
mov
add
mov
mov
or
je
push
mov
inc
and
les
inc
cmp
sbb
and
add
add
xchg
push
jle
dec
rcr
rcr
mov
inc
fdivrp
scas
loope
jg
push
jmp
lock
or
inc
mov
cmp
fist
pop
repnz
adc
or
js
fdiv
sar
fnstsw
js
cmp
je
sbb
sbb
mov
pop
or
jne
dec
inc
ja
sub
and
ror
iret
sub
sub
call
daa
mov
push
(bad)
popf
or
inc
jmp
cmp
cmp
repz
cs
and
xor
shl
rcl
shl
js
pop
mov
lea
or
jno
je
sbb
xchg
adc
jge
add
push
mov
add
fist
out
mov
mov
inc
iret
repz
pop
push
movzx
add
clc
div
scas
fwait
sub
addr16
int
addr16
push
mov
add
test
je
mov
or
inc
sub
pop
or
(bad)
cmp
jne
sbb
das
loop
or
sbb
cdq
and
jecxz
push
ror
jle
(bad)
jne
fsubr
(bad)
push
loopne
loop
wrmsr
or
cmp
je
adc
ja
push
cli
pop
mov
movs
mov
pop
fsubr
cmp
ret
(bad)
pop
or
dec
dec
cmp
push
(bad)
in
mov
sbb
cmp
inc
fadd
jp
jg
les
fdiv
lahf
push
push
pop
cmp
sub
push
fwait
push
and
push
dec
jmp
cld
xor
cmp
jne
pop
add
cwde
push
push
push
adc
inc
fmul
addr16
imul
test
pop
movs
cld
(bad)
(bad)
dec
icebp
lods
or
sub
jne
push
div
push
loopne
mov
imul
xor
mov
adc
inc
scas
cmp
and
push
hlt
test
je
out
(bad)
jae
mov
shr
mov
aam
jne
aad
mov
push
jb
or
sub
ds
movzx
shl
lds
int3
ja
jne
sti
mov
push
inc
sbb
ja
imul
cmp
clc
adc
adc
jo
sbb
adc
rcr
xor
push
je
push
jecxz
cs
test
sbb
dec
dec
or
dec
sbb
mov
or
inc
rcl
or
cmc
jg
and
push
inc
xor
pop
inc
xor
adc
stos
out
push
cld
xchg
pop
aad
mov
xchg
cmp
dec
shl
clc
jae
mov
mov
xchg
sti
(bad)
dec
pop
je
push
push
lea
call
pop
pop
inc
mov
rcr
xor
and
out
push
lods
push
or
ss
mov
bound
call
outs
pop
push
(bad)
mov
jmp
ja
and
repnz
dec
jmp
pop
shr
in
push
aas
pop
jo
aas
xor
mov
mov
push
mov
pop
sbb
es
add
fst
push
pop
mov
mov
rep
rcl
outs
loop
and
push
inc
push
jmp
add
add
mov
sbb
pop
push
outs
mov
push
or
add
(bad)
(bad)
std
inc
jmp
mov
or
nop
inc
mov
adc
bt
jae
mov
add
jo
aad
popf
addr16
ja
jbe
data16
sbb
jmp
mov
mov
shr
mov
jne
cwde
add
or
and
leave
xlat
mov
fmulp
fdiv
cmps
(bad)
aaa
lock
add
test
je
jge
jmp
mov
ds
mov
xchg
adc
dec
and
leave
add
cmp
jg
add
js
jge
pushf
push
push
add
mov
into
push
ror
(bad)
xchg
jp
cmp
inc
inc
cmps
outs
pop
push
cmp
pop
jge
pop
mov
cmp
retf
movs
js
or
mov
punpckhdq
test
cwde
push
push
test
jo
or
lds
scas
cmp
jne
and
jle
push
pusha
pop
pop
cwde
dec
inc
add
rol
pop
jne
out
cmp
sub
jo
test
adc
push
xor
adc
mov
shr
lea
add
jnp
sub
sbb
(bad)
outs
call
ins
fs
push
add
imul
ins
mov
lock
mov
or
pusha
js
xor
adc
loopne
inc
fisttp
pop
cmp
jmp
sub
dec
or
nop
mov
pop
ret
cmp
inc
push
mov
mov
lock
fsub
mov
xlat
stos
jne
sbb
xor
jg
shl
rol
hlt
cld
add
or
adc
add
pop
call
inc
dec
dec
add
add
(bad)
inc
push
mov
add
mov
inc
inc
data16
(bad)
inc
rcl
dec
ret
int3
int3
push
push
enter
add
or
mov
lock
or
add
loop
push
sti
fcomp
jmp
fild
sbb
fisttp
test
je
or
icebp
dec
movzx
popa
sbb
test
(bad)
(bad)
(bad)
push
mov
movzx
shl
or
cmp
je
jmp
movzx
cmp
je
inc
jmp
jg
dec
int3
inc
pop
shr
or
pop
mov
pusha
or
inc
or
inc
sub
push
mul
add
pop
xchg
shl
icebp
mov
add
shl
inc
shl
push
mov
dec
sub
aaa
(bad)
inc
je
sub
mov
inc
dec
jne
mov
shl
add
push
adc
and
pop
test
and
and
(bad)
aas
imul
mov
mov
and
inc
loopne
adc
test
je
inc
rol
mov
je
aaa
cmp
pop
pop
ret
push
jl
adc
mov
cmp
inc
cld
aaa
les
cmp
je
mov
movzx
hlt
(bad)
call
push
jne
mov
cmp
je
cmp
lea
je
mov
loope
aaa
inc
cmp
je
inc
jmp
cmp
jne
movzx
inc
add
out
cmp
je
jne
shufps
pop
lock
movs
push
movzx
sub
xchg
rol
dec
ret
cli
test
pusha
adc
add
push
icebp
jne
les
addr16
add
ds
call
xor
adc
out
push
add
je
jmp
lea
push
sub
ret
lea
or
jmp
mov
dec
cmp
push
or
sub
or
and
cmp
mov
or
shl
inc
nop
mov
ret
push
mov
adc
fadd
or
or
xor
sti
(bad)
(bad)
jg
je
mov
cmp
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
mov
or
dec
mov
sub
jne
pop
pop
ret
mov
and
(bad)
arpl
repz
je
mov
mov
and
or
jmp
rcr
jmp
sbb
pop
sbb
pop
ret
loope
call
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
test
inc
push
push
out
mov
push
push
jns
mov
rcr
push
sub
pop
jne
fstp
xchg
mov
jecxz
das
mov
cmp
push
je
or
fsub
ret
adc
push
inc
fsub
dec
adc
sub
jle
jmp
inc
pop
cwde
fwait
push
mov
fchs
pop
jmp
mulps
sbb
mov
mov
pushf
retf
and
hlt
out
cs
pop
pop
mov
xchg
pop
mov
push
and
outs
jge
movs
push
call
or
xchg
inc
xchg
call
ds
inc
loope
rol
(bad)
(bad)
(bad)
mov
hlt
add
jle
cmp
jge
sub
mov
mov
and
ret
les
add
lock
repnz
aam
test
jne
sub
sbb
sub
lock
mov
add
ret
mov
aam
pop
test
mov
pop
je
sub
cmp
(bad)
push
pop
cdq
mov
idiv
test
mov
jge
add
mov
sub
mov
stc
cdq
idiv
add
and
pop
push
push
add
or
idiv
push
add
push
cdq
idiv
pop
add
and
and
lahf
ins
test
or
pop
idiv
mov
test
mov
jle
mov
inc
sbb
add
pop
xor
add
std
mov
mov
stc
and
mov
outs
jg
add
dec
mov
(bad)
fadd
inc
ins
add
add
inc
repnz
xchg
xor
inc
push
dec
and
add
dec
cmp
mov
push
push
mov
add
add
cmp
outs
mov
call
mov
sub
add
jg
sbb
cmp
cld
mov
jbe
mov
ror
and
(bad)
jg
adc
or
dec
or
inc
dec
(bad)
jmp
fisttp
mov
or
mov
inc
cmp
jne
mov
push
lea
sub
push
mov
push
xlat
ins
mov
inc
xor
inc
push
add
cmp
js
ror
mov
aam
or
dec
and
call
mov
inc
cmp
add
retf
push
jg
add
jl
clc
dec
jg
push
adc
mov
call
call
pop
idiv
dec
je
sub
je
dec
jne
push
mov
xchg
pop
mov
mov
mov
push
push
push
push
ins
or
sbb
jns
inc
sbb
dec
xor
inc
adc
je
push
xor
adc
sbb
add
pop
mov
mov
mov
push
adc
inc
int3
std
inc
dec
sbb
pusha
add
push
sub
je
pop
aam
jg
xchg
cs
dec
je
dec
je
ret
loope
add
add
add
adc
add
call
add
fs
mov
cdq
pop
add
idiv
imul
(bad)
(bad)
jmp
dec
inc
add
mov
mov
mov
loope
aaa
push
inc
xlat
push
push
jmp
mov
pop
mov
test
jne
push
pop
jmp
std
das
lods
add
mov
cmp
jge
jg
add
pop
jg
cdq
pop
idiv
push
mov
ds
cmp
stc
cmp
jl
inc
arpl
push
pop
mov
or
add
xor
inc
ins
stos
clc
cmp
jg
xor
popa
je
dec
addr16
jo
ret
dec
je
sub
jne
ja
pop
pop
stos
dec
mov
push
inc
push
dec
pop
shl
and
push
mov
sbb
cmp
mov
mov
mov
sub
dec
inc
adc
mov
in
dec
mov
adc
fcmovnu
in
(bad)
dec
inc
std
je
push
jo
clc
aas
mov
inc
dec
push
inc
ror
cmp
cs
mov
scas
xor
and
pop
push
xor
sub
je
outs
sub
je
in
dec
je
dec
je
adc
xchg
popa
clc
outs
add
or
xor
cmp
or
idiv
xor
dec
add
pop
jbe
aas
test
push
push
cdq
shl
call
and
loope
mov
and
add
xchg
jmp
jle
ret
mov
ins
or
js
or
mov
xchg
push
and
stos
aaa
leave
inc
or
fwait
mov
je
sahf
mov
or
push
test
adc
mov
inc
pop
add
mov
push
add
cmp
fist
mov
dec
xor
inc
mov
adc
dec
jae
dec
mov
lea
add
fiadd
push
arpl
mov
cmp
cld
push
add
mov
cdq
idiv
inc
dec
cmp
add
fstp
inc
cld
add
sub
pop
jmp
mov
repnz
push
mov
mov
cmp
jbe
inc
inc
or
push
sub
inc
inc
push
or
mov
mov
dec
or
clc
dec
sbb
adc
shl
std
or
push
cmp
(bad)
std
mov
adc
leave
cmp
je
arpl
mov
lea
fisttp
(bad)
adc
push
add
ret
dec
movsx
cmp
jg
fimul
clc
daa
je
cmp
inc
sets
push
rcl
outs
test
inc
mov
test
push
loopne
(bad)
jg
mov
mov
inc
dec
mov
mov
mov
inc
inc
dec
pushf
and
shr
xchg
leave
ret
mov
ret
outs
stos
mov
mov
xlat
pop
test
(bad)
mov
dec
cmc
xor
fwait
mov
sbb
das
push
mov
dec
ins
inc
xor
pop
jne
add
jmp
push
out
mov
mov
push
jo
sbb
fild
cwde
dec
add
mov
test
je
and
or
je
mov
adc
mov
mov
fcomp
fld
jmp
inc
push
dec
cmps
add
push
stos
pop
or
std
dec
je
dec
je
push
test
int3
jne
inc
sbb
popa
or
pop
or
push
push
icebp
sub
andps
add
adc
nop
(bad)
(bad)
call
ins
rcl
pop
push
ins
int3
inc
rcr
inc
sbb
in
daa
sbb
mov
sub
jecxz
xor
or
push
loopne
inc
push
mov
mov
sub
lock
or
push
inc
mov
or
inc
mov
test
je
ds
cmp
out
fadd
adc
scas
je
dec
je
pushf
push
fcom
mov
xor
jmp
sbb
pusha
pop
push
enter
adc
pop
mov
jo
cmc
or
cmp
test
jge
neg
cmp
test
je
mov
jl
xor
repz
sub
push
icebp
je
xlat
lea
mov
add
shr
in
inc
std
loope
add
loopne
dec
dec
push
sbb
retf
add
dec
dec
stc
push
push
iret
cmc
sub
cmp
adc
pop
xchg
nop
add
dec
aaa
push
pop
cmp
cmp
dec
add
or
adc
push
call
or
or
push
mov
mov
lods
jne
pop
mov
and
push
lea
cmp
jb
pushf
inc
sbb
int3
jge
icebp
jae
pop
push
cdq
pop
pop
push
fisttp
push
fistp
or
inc
pop
and
mov
call
mov
mov
or
and
jae
cmps
aas
lock
jo
add
in
pop
sbb
push
and
sbb
mov
or
jne
cmp
jbe
stc
dec
mov
pop
jne
fucomp
mov
jge
sbb
out
mov
stos
push
(bad)
pop
ja
adc
push
aas
push
add
ror
outs
ret
mov
dec
xchg
imul
cmp
jne
xor
and
fdivr
aam
add
sti
mov
test
mov
shr
jne
inc
pop
ins
std
push
push
std
mov
push
pop
adc
pop
jmp
add
jg
jecxz
mov
xor
sbb
mov
cmp
and
mov
mov
arpl
or
push
shl
mov
pop
(bad)
mov
or
or
mov
call
xor
push
adc
jne
rol
inc
cwde
mul
or
mov
shl
push
add
adc
adc
dec
or
cmp
loope
jb
or
or
dec
int3
pop
add
in
or
cld
aaa
rol
push
sbb
mov
lea
mov
push
cmc
adc
movzx
push
sub
test
out
push
inc
jmp
cmp
xor
adc
jmp
hlt
cmps
pushf
sti
cmp
jne
pop
adc
test
jl
je
clc
add
test
mov
adc
cmp
mov
sbb
inc
adc
clc
jmp
mov
cmp
je
cmp
adc
(bad)
ja
in
pop
mov
cmp
jne
sub
or
dec
jne
mov
inc
inc
arpl
add
sub
lods
jmp
push
pop
je
dec
movsx
sub
jmp
cs
movs
pop
test
mov
ja
je
and
mov
movsx
(bad)
call
enter
cmp
jae
mov
in
or
jne
jb
mov
push
pusha
cmp
jbe
add
or
scas
jne
mov
clc
mov
xchg
mov
pop
or
or
mov
test
jmp
pop
sub
test
mov
test
jne
and
je
aaa
std
mov
adc
ja
test
jne
cmp
jbe
adc
cdq
div
adc
mov
clc
(bad)
jmp
push
and
or
fdivr
mov
test
je
mov
sub
je
cmps
jp
pop
clc
neg
mov
jmp
call
aam
mov
icebp
leave
ret
push
ins
and
push
jmp
dec
xchg
and
inc
jl
or
jg
jg
ja
test
jl
cmp
jle
push
mov
push
sahf
push
sti
jmp
adc
pop
idiv
test
mov
jge
add
dec
or
or
jnp
mov
test
push
pop
icebp
add
cli
add
inc
lea
clc
fild
imul
add
lea
call
ror
leave
jl
test
jl
test
clc
int
leave
jge
or
jbe
loope
mov
mov
pop
adc
rcr
xchg
ret
jmp
xor
push
mov
mov
test
dec
dec
cmp
shl
dec
shl
neg
in
mov
imul
inc
cmp
out
or
mov
sub
and
ja
enter
mov
inc
adc
mov
jl
test
add
fcmovbe
jl
jmp
pop
add
sar
rcl
aaa
cmp
ds
sar
and
push
cmp
dec
test
jg
jge
cmp
jle
(bad)
and
or
push
retf
jne
or
icebp
and
scas
or
inc
or
movs
xor
pop
add
lock
cwde
add
popf
imul
push
xchg
sbb
pop
mov
not
mov
push
imul
mov
add
sbb
shl
cmp
lea
push
push
call
fcomp
call
scas
nop
push
and
mov
call
jne
rep
stos
mov
xchg
outs
cmp
std
aas
in
test
test
je
movzx
movzx
cmp
ja
clc
add
add
jmp
xchg
push
dec
push
out
or
rep
ss
lea
jg
jg
retf
je
mov
and
cli
cmp
ja
mov
mov
clc
fmul
or
jbe
inc
inc
inc
lds
add
mov
fnstsw
add
test
add
mov
movs
movs
ins
cli
fstp
pop
mov
inc
jns
add
test
mov
cmc
test
inc
shl
jg
into
ds
shr
mov
pop
and
add
dec
stos
stos
stos
jmp
cmp
sahf
add
push
pop
push
sub
mov
call
push
rol
and
adc
add
mov
jne
clc
std
adc
mov
pop
aam
dec
add
jbe
inc
hlt
jmp
je
sub
jp
cmps
add
adc
mov
add
add
mov
sbb
push
jno
test
inc
xor
pop
mov
pop
pop
iret
pop
ss
fldenv
sub
cwde
adc
mov
mov
in
(bad)
out
jg
pop
inc
cmp
jb
mov
mov
aaa
push
push
(bad)
fsub
call
movzx
movzx
cmp
ja
sub
lea
or
js
push
repz
push
inc
mov
test
jne
pop
pop
push
lea
adc
ja
lahf
jp
adc
ja
adc
test
std
and
pusha
mov
fist
push
mov
cmc
inc
retf
pop
add
es
lods
jbe
cmp
pop
xor
lea
inc
add
std
mov
add
mov
out
out
adc
sbb
ret
adc
and
jecxz
xor
mov
inc
add
jg
mov
clc
inc
jb
cmp
ja
xor
mov
add
mov
fcomp
jb
cmp
ja
sbb
loopne
dec
outs
dec
mov
dec
add
jne
push
push
cmp
ficomp
add
mov
push
cmp
pop
mov
lea
loopne
lea
mov
shl
add
aaa
aad
push
inc
add
je
cmp
je
inc
mov
(bad)
(bad)
push
shr
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
fild
pop
or
xor
jmp
sub
mov
sub
jle
fdiv
add
push
sar
outs
or
xor
add
add
xor
popa
arpl
cmp
jg
lea
cmp
shl
add
cmp
jne
push
icebp
fbld
mov
jne
lea
out
sub
stc
int
inc
or
push
sti
mov
inc
cmp
adc
dec
add
pop
pop
pop
inc
mov
inc
and
mov
push
push
cmc
lea
mov
ja
scas
cli
inc
inc
test
call
jmp
out
and
or
mov
leave
mov
je
loopne
sbb
adc
sub
inc
inc
inc
inc
add
mov
test
je
dec
je
xor
shr
rep
adc
data16
(bad)
push
sbb
and
push
xor
js
inc
popa
popf
mov
push
xchg
pop
mov
rol
loope
test
(bad)
mov
test
pushf
je
loopne
or
out
mov
pop
cmp
jp
sbb
loop
mov
mov
or
dec
push
mov
dec
cld
add
stc
or
test
adc
mov
push
(bad)
(bad)
(bad)
(bad)
cmp
jge
lea
shl
mov
add
and
mov
(bad)
jg
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
pop
cmp
mov
cmp
mov
xchg
wbinvd
mov
cs
push
cmp
xchg
popa
jmp
cmp
stos
fadd
pop
or
jbe
push
call
pop
mov
pop
(bad)
or
or
push
push
mov
push
stos
loopne
pusha
jmp
test
clc
push
dec
add
seto
mov
push
lahf
or
(bad)
(bad)
(bad)
push
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
sahf
ss
ja
cmp
pop
or
push
mov
mov
xchg
jg
jne
mov
scas
pop
stos
and
adc
jmp
jl
out
retf
and
inc
jmp
cmp
js
inc
push
inc
cmp
ja
movs
add
jmp
in
pop
add
push
push
pop
mov
adc
cmp
je
cmp
je
inc
clc
inc
adc
inc
pop
inc
call
lock
jbe
data16
mov
pop
cmp
mov
sti
mov
(bad)
jne
pop
or
cmp
je
push
cmp
add
ds
call
cmp
in
out
jnp
repz
pop
mov
cs
mov
call
xor
lea
add
cmp
jne
pop
inc
and
pop
mov
pop
mov
push
push
dec
fadd
mov
les
push
(bad)
push
repnz
clc
(bad)
sar
mov
pop
mov
cmp
je
mov
lea
mov
xchg
outs
xor
pop
xchg
mov
mov
add
and
les
cmp
mov
popf
jmp
mov
cld
add
dec
fs
mov
mov
dec
and
push
and
mov
int3
(bad)
aas
or
test
je
mov
add
mov
(bad)
(bad)
jge
cmp
jne
mov
inc
cmp
je
adc
push
retf
add
push
jbe
ins
adc
inc
or
jmp
or
mov
aas
add
add
inc
inc
jmp
adc
dec
(bad)
or
inc
add
inc
inc
push
ja
and
cmp
jne
test
jne
dec
aam
mov
add
inc
and
xor
div
push
mov
adc
daa
add
icebp
pop
inc
dec
adc
inc
(bad)
idiv
pop
inc
add
fild
inc
inc
jmp
xchg
mov
(bad)
jmp
ret
add
xor
cmp
je
cmp
lea
jne
out
pop
xchg
or
add
in
cli
jg
sete
mov
shr
mov
dec
mov
mov
inc
in
add
(bad)
inc
dec
jne
mov
cmps
dec
out
or
push
push
mov
je
movs
je
sub
sbb
push
mov
pop
cld
jmp
mov
inc
add
sbb
xor
inc
push
dec
xbegin
and
mov
ret
push
push
mov
mov
sub
xor
xor
xor
cmp
jne
call
mov
lock
je
mov
and
pop
add
xlat
pop
sbb
aam
pop
and
sub
or
je
(bad)
jg
cmp
mov
je
inc
inc
cmp
jne
push
repnz
mov
ja
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
out
test
xor
and
push
push
hlt
fbstp
and
call
test
jne
push
into
push
adc
daa
dec
add
sti
push
push
call
push
cmp
jne
cmp
jne
mov
cmp
std
out
(bad)
cmp
mov
je
inc
cmp
jne
add
sub
inc
mov
popw
ins
stos
inc
into
jne
or
hlt
ficom
sar
adc
adc
cmp
pop
push
dec
std
add
inc
adc
or
add
xor
xor
loop
push
and
lea
push
xor
adc
data16
or
ffree
inc
add
(bad)
add
add
inc
mov
inc
inc
cdq
jp
cmp
mov
pop
mov
test
inc
mov
lea
lea
mov
mov
sbb
sar
cmp
test
ds
jae
add
mov
shr
fimul
and
jmp
cli
std
jmp
mov
add
add
dec
outs
cli
arpl
mov
push
mov
test
or
(bad)
push
add
or
push
call
je
mov
mov
int3
mov
mov
mov
xor
mov
mov
(bad)
aaa
inc
cld
add
inc
cmp
jl
xor
mov
cmp
lea
sar
inc
mov
jne
push
pop
jmp
mov
clc
mov
cmc
or
cmp
je
ins
sub
data16
and
and
in
or
ja
fs
xor
or
add
add
add
xor
sbb
adc
ret
into
mov
fcomip
pop
call
jmp
cmp
cwde
mov
add
idiv
push
daa
add
(bad)
popa
mov
push
das
and
jg
dec
add
push
mov
pop
inc
jne
push
sbb
mov
add
push
nop
sti
xor
stos
in
cmp
clc
call
fld
(bad)
aas
ins
es
inc
push
ret
pop
(bad)
or
test
jmp
inc
pop
sub
adc
pop
xor
iret
mov
add
ffreep
inc
dec
pop
jne
mov
ret
ror
sbb
mov
int
sub
add
or
lea
cmp
les
retf
call
push
std
add
add
cmp
add
jbe
test
mov
sti
(bad)
in
(bad)
jmp
adc
add
mov
dec
jbe
pop
test
fucomip
arpl
jmp
popf
add
call
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
inc
push
push
push
jo
jae
int3
push
scas
(bad)
lods
or
jmp
lea
pop
cmp
mov
lea
add
push
cmp
cmp
je
push
fiadd
inc
les
fcomp
(bad)
(bad)
fwait
clc
je
inc
mov
add
cmp
jne
mov
jmp
repnz
jecxz
mov
add
dec
je
cmp
je
dec
shr
mov
out
pusha
push
sar
adc
add
xor
push
scas
and
bound
sete
mov
inc
imul
mov
inc
mov
jne
or
push
pop
dec
add
out
push
cmp
ret
ds
lds
jl
addr16
movs
out
and
cmp
inc
loop
sbb
pop
xor
jno
add
sar
fsubr
in
movs
clc
out
clc
sbb
leave
mov
je
add
inc
cmp
or
push
mov
shl
cmp
xchg
test
jo
xor
cli
jne
cmp
es
test
not
lods
adc
jo
dec
adc
leave
pop
adc
lea
inc
pop
cmp
pop
inc
xchg
jbe
sbb
sbb
inc
add
push
xor
push
jne
cmps
adc
push
fldenv
call
aaa
jae
in
push
mov
out
push
pop
jg
dec
adc
add
adc
daa
xlat
mov
loopne
mov
jmp
lea
lea
rcr
and
lods
out
ss
call
sbb
and
pop
leave
ret
xchg
or
jl
sbb
call
sti
fld
clc
fld
inc
lock
fmul
fsubr
xchg
call
sbb
cmp
mov
sub
test
adc
ss
mov
syscall
push
rol
and
push
fwait
data16
push
cmp
cmp
pop
je
inc
pop
sysret
mov
sbb
jl
or
push
push
or
aam
or
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
cmp
neg
inc
and
mov
jbe
pop
(bad)
retf
inc
sbb
je
cs
mov
gs
cmp
cmp
(bad)
(bad)
(bad)
in
mov
dec
cmp
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
mov
fld
push
adc
or
(bad)
(bad)
out
js
jne
je
inc
add
or
pop
mov
mov
mov
mov
ins
adc
pop
inc
pop
std
sub
jp
xchg
cmp
pop
ficom
push
jmp
or
inc
add
rol
leave
test
setg
add
fsub
loop
add
test
jne
xchg
arpl
add
xlat
adc
cmp
pop
idiv
and
sbb
sbb
sar
or
lahf
rcl
add
ds
add
pop
imul
(bad)
out
jmp
mov
lea
and
dec
add
ret
push
ror
out
mov
add
add
test
icebp
enter
add
inc
push
sar
or
inc
cmp
pop
add
jns
neg
(bad)
fild
jg
sti
fs
mov
push
pop
add
mov
cdq
cmp
dec
or
or
pop
add
and
icebp
test
test
shl
add
and
pop
sbb
add
sub
(bad)
jmp
mov
push
mov
dec
cmp
je
cmp
jne
xor
add
fcmove
mov
mov
and
adc
fwait
sub
lea
test
jg
push
sbb
mov
pop
xor
jmp
add
xor
sti
inc
popa
pop
mov
mov
inc
pop
test
jge
fs
stos
loopne
add
fsubrp
pop
neg
fwait
add
mov
retf
push
outs
cmp
adc
in
push
mov
xor
lock
push
push
xchg
icebp
mov
hlt
mov
lea
sbb
jle
stc
div
push
repnz
(bad)
(bad)
(bad)
inc
sbb
cmp
setl
cmp
jl
cmp
jge
test
je
mov
inc
test
jne
and
out
stos
push
ds
push
ret
std
in
adc
adc
push
xchg
push
add
out
jle
sub
push
cmp
je
add
add
outs
data16
sub
and
sti
cmp
jne
adc
adc
fldcw
ret
push
jl
adc
test
push
add
or
in
and
push
dec
lds
nop
mov
dec
in
jne
fxch
fyl2x
jmp
adc
in
fldl2e
inc
(bad)
(bad)
fstp
leave
stos
imul
faddp
test
je
fld1
cli
(bad)
jns
fdivp
test
ret
add
std
or
(bad)
(bad)
jbe
ins
adc
lods
or
je
xor
mov
add
aad
loope
lahf
sbb
add
nop
or
ret
push
lods
push
js
xor
ret
fldln2
and
fstsw
test
inc
jne
fyl2x
ret
and
pop
fisttp
ret
or
jnp
leave
jne
ret
fldlg2
jmp
xor
and
fiadd
adc
fldz
cmp
jne
xchg
mov
sbb
sti
(bad)
out
jmp
fstp
cmp
push
les
out
fidivr
add
vmread
ins
pop
mov
dec
add
sbb
out
jg
test
ret
fld
fabs
fld
sbb
xchg
sbb
ins
mov
popa
fld
jle
loope
lock
cld
fcom
neg
movs
or
push
mov
and
ret
call
jmp
repz
push
pop
inc
scas
and
cmp
in
add
mul
jg
jbe
frstor
fld
add
pop
cmp
sbb
pop
(bad)
aad
cmp
jne
mov
mov
and
mov
jmp
mov
mov
mov
lods
add
mov
dec
or
add
loope
stc
rol
mov
and
mov
movsx
and
fadd
rcr
fxam
jle
repz
jne
lods
js
sar
rol
mov
mov
test
push
test
in
in
les
add
lahf
fstp
jbe
aad
test
pop
sti
fldz
ret
push
call
or
lods
add
mov
or
pop
or
jbe
pop
add
add
leave
sub
ds
or
pop
or
faddp
push
mov
ds
mov
or
scas
and
(bad)
adc
(bad)
loopne
inc
loopne
inc
sbb
sbb
inc
hlt
jmp
sar
push
mov
adc
jno
xor
(bad)
in
loopne
push
adc
jge
inc
clc
cmp
je
xchg
and
(bad)
fldcw
int3
or
jne
jp
f2xm1
sub
std
fstp
ret
adc
(bad)
dec
loop
add
add
push
and
fldcw
ret
test
push
je
mov
add
hlt
mov
dec
jp
cmp
add
add
adc
dec
or
mov
push
mov
shld
shl
(bad)
mov
ret
and
sub
add
push
add
sbb
mov
ret
je
(bad)
inc
fldcw
pop
ret
mov
cmp
and
je
fstsw
or
outs
add
in
add
sub
adc
mov
ja
add
les
adc
je
ret
jle
popf
scas
pop
pop
sub
and
(bad)
loopne
sbb
fs
add
cld
add
or
inc
loope
sbb
sub
sahf
mov
or
jmp
fld
out
sub
movaps
mov
sahf
fmul
into
dec
inc
mov
jne
push
xor
xor
and
lock
fbld
jg
add
lock
cmp
jne
cmp
jne
fadd
ja
or
clc
mov
inc
sbb
pop
and
jno
pop
idiv
add
dec
adc
and
push
sub
or
jae
jmp
cmp
xor
push
or
test
mov
(bad)
aas
mov
push
fmul
jmp
adc
jmp
cmp
jne
cmp
in
xor
mov
frstor
jbe
fld
adc
daa
add
push
and
sbb
fld
out
adc
hlt
fcomp
pop
and
fld1
or
(bad)
enter
and
xchg
std
(bad)
pop
test
pop
jne
fst
fist
xchg
popf
or
xor
cmp
mov
pop
(bad)
jno
test
add
add
add
pop
mov
xchg
frndint
and
jbe
cmp
add
aam
inc
or
xor
sbb
mov
xor
loop
xor
call
(bad)
(bad)
inc
add
add
push
cmp
pop
cwde
jb
sbb
pop
push
lea
rol
pop
jne
mov
pop
and
and
adc
sar
enter
pop
jb
add
mov
or
jne
pusha
xchg
pop
jne
sbb
dec
fld
add
push
inc
sub
pop
xor
leave
pop
ja
mov
jae
xchg
sbb
jmp
dec
or
rcl
cmps
mov
push
push
mov
aad
inc
dec
pop
mov
mov
jmp
aaa
cmps
mov
std
pop
xor
fcom
arpl
retf
je
inc
into
add
xchg
add
mov
xor
test
mov
xor
adc
mov
mov
not
and
and
std
dec
add
shl
or
pop
jbe
not
fisttp
sti
fistp
and
shl
and
or
push
shr
sbb
loop
push
shr
and
and
mov
pop
(bad)
push
add
out
or
cmp
or
test
je
push
or
test
out
mov
adc
or
test
or
or
sub
dec
push
mov
and
je
cmp
stos
outs
mov
shl
jg
cmc
or
jmp
mov
and
or
jmp
sub
lock
or
or
mov
jmp
and
inc
outs
in
ja
sbb
add
add
cmp
lahf
sti
and
jmp
pop
xor
or
dec
push
(bad)
idiv
leave
or
and
std
fdivr
adc
loope
and
rcr
or
dec
and
loope
or
mov
sbb
add
fstp
add
mov
dec
mov
push
mov
mov
fld
fstp
push
or
jns
cs
jne
pop
xor
inc
or
je
and
cmps
jns
dec
or
add
(bad)
aas
neg
test
fisttp
(bad)
inc
idiv
(bad)
inc
je
dec
je
dec
je
dec
jne
or
jmp
mov
and
or
jmp
or
out
(bad)
push
or
mov
jmp
and
mov
shr
and
xor
dec
je
dec
jne
and
jg
call
jmp
mov
and
or
jmp
or
mov
fld
fstp
(bad)
aas
and
push
push
mov
and
push
test
mov
je
test
je
add
pop
and
or
sbb
ss
xlat
push
test
je
jmp
pop
sbb
test
je
inc
popf
sbb
je
jecxz
mov
and
je
fld
or
and
enter
fld
stos
retf
cmc
pop
iret
fld
in
fdiv
shr
sbb
iret
xchg
add
repnz
loopne
pop
daa
cmp
xor
jmp
add
cdq
in
inc
daa
push
pop
(bad)
std
outs
push
outs
fstp
and
fldcw
or
je
rcl
retf
repz
fld
xlat
mov
int
mov
add
adc
js
mov
(bad)
mov
mov
cli
(bad)
inc
(bad)
jge
fldz
mov
dec
jbe
jmp
xor
add
shr
add
ror
inc
hlt
and
or
cli
mov
cmp
jge
sub
(bad)
mov
hlt
je
test
jne
shr
test
je
or
shr
dec
jne
sti
or
je
hlt
out
sbb
sub
neg
pop
xchg
and
test
out
cmp
or
mov
out
shl
sete
leave
sub
sbb
fiadd
ja
test
addr16
cmp
jne
push
or
(bad)
lock
xchg
jne
ins
mov
mov
xor
in
(bad)
clc
mov
mov
aas
jns
arpl
mov
mov
lock
ja
pop
pop
pop
leave
ret
cmp
jns
dec
sar
pop
pop
pop
ja
fld
mov
clc
add
sbb
clc
add
sbb
push
ret
dec
and
call
xor
mov
cmp
lds
icebp
jl
xor
jmp
mov
int
sbb
mov
jl
push
jmp
cdq
call
cmp
push
aam
push
test
je
push
pop
ret
and
add
movzx
jno
push
push
lock
and
cmp
loopne
jo
or
mov
shr
les
jge
lock
or
push
pop
out
mov
jmp
dec
mov
out
mov
enter
pop
cmp
test
jg
pop
add
cmp
pop
pop
ret
xor
fwait
inc
sti
sbb
pop
jne
fldz
xor
add
xchg
test
into
adc
dec
dec
inc
mov
imul
inc
push
adc
shl
test
je
or
shl
dec
jmp
and
out
icebp
out
(bad)
cmp
dec
jecxz
xor
js
outs
mov
mov
mov
cmp
aaa
mov
adc
sbb
call
pop
movsx
sub
mov
pop
mov
fstsw
movsx
clc
gs
fnclex
push
fstcw
out
inc
out
movs
mov
and
dec
cld
or
mov
fldcw
and
out
loopne
cld
xor
dec
in
add
sub
ds
pop
or
cdq
out
test
sbb
dec
cdq
(bad)
adc
rol
movs
icebp
fstp
xor
test
push
jae
jmp
mov
inc
push
int
iret
add
push
pusha
icebp
add
fwait
adc
fnsave
shl
or
mov
out
jmp
jp
(bad)
(bad)
fxch
fst
jmp
in
inc
or
fstp
sti
ins
ins
sbb
add
add
pop
mov
jl
add
jmp
or
dec
add
mov
xchg
fistp
(bad)
push
(bad)
dec
mov
or
je
cmp
je
cmp
je
loope
mov
or
movsx
mov
fidivr
jnp
mov
sub
(bad)
and
jmp
fldcw
ss
jge
gs
cmc
or
je
aam
int
stc
je
jmp
sub
out
inc
retf
fmul
xchg
sahf
mov
xor
or
sub
loopne
out
int3
adc
push
fmul
fimul
push
push
mov
aas
cld
aas
in
(bad)
test
lea
lea
idiv
push
mov
lea
lea
movs
movs
fstp
lea
(bad)
int3
push
push
inc
mov
cmc
mov
fstp
fld
std
cmp
push
ret
jg
je
dec
ret
xor
cmp
(bad)
hlt
push
data16
mov
or
cmp
retf
(bad)
jg
mov
retf
shld
shl
or
neg
ins
imul
add
ja
int3
fld
add
inc
and
add
jae
cs
(bad)
je
xor
inc
fdivrp
ret
shr
cmp
sub
cmp
and
cmp
outs
clc
es
aas
dec
and
add
or
and
sbb
mov
sbb
xor
fmul
pop
mov
ja
and
fmul
jne
pusha
push
addr16
xchg
jne
push
repnz
je
cdq
in
loop
test
adc
shl
inc
and
(bad)
or
sub
fld
fmul
and
sti
out
fiadd
fwait
jae
jl
or
fdivr
jmp
add
ret
add
push
fdivr
push
into
bound
or
pop
mov
or
rcr
and
leave
jl
xchg
int3
mov
sbb
and
mov
leave
fxch
xor
fmul
pusha
cmp
int3
in
jl
or
jne
adc
jae
sbb
aam
fsubr
ins
jo
cdq
fxch
pop
add
push
inc
pusha
ja
out
dec
dec
or
push
bound
sbb
fxch
xchg
leave
shl
lods
sbb
adc
ds
ret
xor
pop
rcr
push
pop
inc
sbb
retf
int
xor
pop
add
das
stc
push
or
fxch
jno
ins
pusha
xor
ins
mov
pop
icebp
fstp
jl
sbb
or
pop
adc
jae
fs
pop
add
xchg
or
fxch
mov
lds
push
adc
xchg
inc
push
pop
adc
dec
and
fxch
pop
mov
mov
or
inc
fxch
mov
jae
mov
dec
repnz
xchg
int
int
mov
int3
mov
xchg
push
or
fxch
mov
and
pop
sub
pop
mov
mov
push
adc
mov
sbb
pop
add
in
push
or
fxch
mov
add
mov
mov
mov
outs
adc
sahf
sub
mov
inc
push
adc
cmp
cmc
(bad)
cmp
je
fnstsw
and
fst
add
add
in
fnstsw
pop
dec
adc
add
and
les
fdiv
pop
dec
or
mov
fisttp
add
and
cdq
mov
dec
or
fmul
xchg
pop
fld
push
xchg
cmp
pusha
inc
out
cmp
(bad)
cmp
inc
out
call
mov
dec
enter
jl
pop
cdq
sbb
dec
mov
dec
(bad)
cmp
push
mov
(bad)
cmp
or
xchg
mov
push
ret
sbb
pop
ret
push
adc
(bad)
inc
sub
xor
test
add
loop
add
shr
and
cmp
jo
es
inc
mov
je
pushf
adc
je
and
sbb
sbb
jo
pop
push
test
push
or
push
push
or
pop
mov
aas
mov
and
push
enter
sbb
js
pop
test
sbb
sbb
xor
retf
sub
and
or
sub
mov
and
mov
and
sub
mov
(bad)
clc
sub
jmp
fstp
jmp
test
sbb
sbb
pop
je
dec
xor
xor
sub
int3
add
sub
sbb
jg
arpl
out
retf
and
xor
clc
out
leave
mov
pop
sub
loope
shl
div
push
ret
jg
add
loope
leave
fmul
add
push
div
into
mov
fld
fmul
sub
fchs
jmp
adc
and
std
lahf
sub
clc
add
push
fnstsw
test
pop
add
jmp
daa
sub
fmul
(bad)
(bad)
fisttp
fxch
and
sub
fnstenv
and
(bad)
mov
and
fldenv
add
pop
pop
pop
ret
push
sub
xchg
sbb
xor
push
add
outs
stos
mov
test
ret
sbb
outs
call
add
cdq
add
jns
mov
mov
dec
das
retf
mov
loope
mov
and
cmp
or
fmul
pop
in
imul
cmp
ret
pop
cmp
fsub
sbb
or
jbe
mov
jbe
push
or
or
mov
and
dec
cmps
cmc
cmc
add
and
add
pusha
cmp
mov
mov
inc
(bad)
out
mov
fpatan
ret
fptan
ret
push
mov
dec
xor
call
push
cmp
fs
or
cmp
pusha
cmove
xor
jne
push
jmp
mov
mov
pop
test
jne
or
adc
pop
push
jne
call
push
or
sbb
ss
call
push
std
adc
cmp
inc
aaa
inc
cmc
rcr
push
xor
or
aam
push
push
icebp
(bad)
push
test
jne
ds
push
popf
pop
ret
add
pop
in
jb
mov
loop
and
push
cld
fnstsw
push
push
inc
ror
ds
pop
(bad)
aad
(bad)
pop
rcl
je
push
push
push
or
(bad)
mov
shl
je
or
sbb
pop
mov
inc
ret
pop
sub
sub
jne
mov
(bad)
jmp
push
mov
jne
cmp
je
(bad)
(bad)
cmp
push
pxor
mov
pop
cmp
pop
mov
je
cmp
je
(bad)
jmp
fstp
pop
add
xchg
ret
cmp
jne
jg
or
inc
pop
mov
push
cmp
je
cmp
rol
cmc
xchg
outs
mov
pop
push
cmp
jne
fild
push
mov
pop
je
mov
xor
sbb
out
aas
les
mov
push
popf
mov
sar
mov
inc
cmp
je
test
je
push
lea
mov
lahf
adc
mov
inc
dec
jmp
mov
sar
inc
hlt
loopne
push
call
pop
xor
pop
test
pop
je
jmp
push
(bad)
dec
jmp
test
jne
test
jge
neg
lea
sub
inc
dec
xlat
daa
dec
and
je
mov
and
in
mov
add
jnp
or
ds
jle
je
pop
(bad)
call
mov
pop
sub
pop
add
and
inc
test
not
and
push
push
call
add
retf
lock
loop
popf
sub
pop
push
pop
stos
call
or
cmp
cwde
lock
je
sar
xlat
mov
sub
mov
stos
add
ret
por
xor
fcom
add
ret
sbb
lea
je
mov
mov
call
jne
push
push
lea
jle
adc
pop
test
mov
adc
add
scas
adc
pop
mov
mov
cmc
adc
ret
and
sbb
adc
outs
retf
jmp
and
mov
pop
pop
pop
cmps
imul
push
loope
loop
and
jmp
mov
in
or
push
jne
loop
aas
xchg
cmp
test
je
push
add
inc
sbb
cmp
jmp
lea
jmp
iret
call
add
je
cmp
dec
je
mov
inc
adc
jmp
cmp
icebp
push
mov
adc
mov
cmps
loope
mov
test
je
pushf
inc
je
pop
add
cs
push
mov
mov
or
inc
add
fist
leave
or
ret
mov
sbb
pop
add
mov
cmp
das
xchg
imul
add
je
cmp
je
data16
inc
(bad)
(bad)
push
mov
jmp
icebp
add
jmp
(bad)
dec
cmp
jne
cmp
jbe
mov
add
dec
mov
test
je
movzx
push
(bad)
cmp
jmp
push
call
add
jmp
pop
call
jne
sbb
(bad)
aaa
sbb
mov
mov
and
inc
sar
mov
cmp
mov
jl
mov
cmp
jl
in
and
fst
jg
(bad)
jg
pop
push
jne
adc
jne
cmp
jne
cmp
jmp
cmp
cmp
es
cld
jg
popf
imul
jo
pop
inc
jo
add
inc
adc
inc
in
pop
shr
fnclex
cmps
pop
imul
inc
push
adc
sbb
sbb
ror
add
xchg
jge
ror
pop
inc
dec
adc
(bad)
fstp
aad
cmp
jae
jg
cmp
jg
mov
mov
mov
shl
or
hlt
jle
loopne
fist
js
mov
adc
jle
add
aaa
cdq
mov
xchg
sub
sbb
dec
clc
add
cmp
jg
dec
add
push
test
mov
jg
jmp
jmp
add
call
test
ficom
movs
mov
adc
push
pop
nop
adc
inc
fcom
pop
xchg
sub
pop
leave
ret
xchg
dec
lods
lock
mov
nop
jmp
aad
xchg
or
push
js
data16
ret
imul
and
sti
xor
xor
mov
mov
out
add
jbe
lock
(bad)
(bad)
(bad)
clc
jae
cmp
jl
cmp
jg
mov
mov
shl
add
mov
neg
or
xor
add
mov
jno
dec
mov
mov
call
pop
pop
leave
ret
push
call
or
(bad)
js
add
mov
mov
mov
shl
addr16
mov
or
test
je
test
je
push
adc
add
jg
add
add
pop
add
jmp
mov
mov
jmp
push
dec
inc
jg
push
add
pop
or
jae
mov
jge
cmp
je
cmp
jle
cmp
add
pop
and
mov
mov
movs
or
or
add
lods
add
ins
fucomi
sbb
mov
sar
mov
mov
push
sub
ss
pop
jmp
mov
dec
push
aaa
mov
mov
stos
clc
je
xor
leave
mov
push
cmp
adc
je
add
and
stos
xchg
gs
xchg
out
cmp
dec
jne
push
jmp
push
jp
mov
jne
inc
pop
popa
xchg
icebp
mov
adc
push
inc
mov
bound
adc
loop
aam
inc
int
and
dec
or
fs
call
add
mov
aam
gs
aam
fadd
mov
mov
mov
les
ins
mov
lea
jo
cmp
or
mov
dec
adc
mov
inc
nop
sbb
mov
hlt
ret
xchg
mov
inc
pop
cld
add
or
out
push
dec
xchg
in
mov
sbb
jns
ins
xchg
cmp
inc
and
outs
xor
jmp
mov
jge
mov
mov
or
dec
xlat
mov
aas
test
sub
pop
js
cmp
jge
add
cmp
loop
mov
jg
or
push
stos
jne
cmp
cmp
cmp
jb
les
inc
sbb
sub
mov
adc
jne
or
je
psraw
or
jl
or
loopne
adc
test
je
mov
jbe
mov
or
test
sub
loop
pop
adc
jg
lock
mov
mov
cmp
jmp
pop
pop
mov
pop
xchg
or
add
add
lods
and
jae
aaa
add
jae
dec
(bad)
push
cld
dec
(bad)
jae
push
inc
or
jle
add
test
mov
pop
ret
pop
inc
push
(bad)
or
xchg
cmp
push
inc
xor
lock
cmp
int3
jno
je
push
xor
pop
test
es
pop
jmp
adc
fwait
mov
cmp
dec
stc
ficom
mov
out
out
cmp
push
add
sbb
add
and
ja
and
mov
mov
mov
push
or
sti
ret
push
mov
dec
cmp
pop
push
inc
mov
sbb
add
mul
xchg
test
jo
push
sar
or
xchg
shl
or
js
adc
scas
or
dec
test
jl
mov
mov
or
add
add
pop
add
lahf
adc
inc
pop
ficom
or
push
pop
mov
out
dec
push
push
call
pop
pop
mov
pop
adc
jmp
stc
nop
add
add
inc
lock
pop
adc
pop
pop
pop
test
fidiv
test
popa
popf
cmp
je
mov
xor
jmp
xor
out
sbb
pop
and
pusha
pusha
mov
jnp
dec
push
pop
call
jmp
push
rol
mov
jnp
in
not
add
mov
out
lods
xor
push
fdivr
not
sbb
ret
add
or
mov
jmp
(bad)
clc
and
adc
ret
add
clc
add
dec
cmc
jge
cmp
jne
or
xor
dec
cld
sub
fld
mov
pop
fstp
pop
mov
sbb
or
pop
and
or
movzx
jmp
mov
push
ins
xor
sub
stc
jg
aam
bound
sbb
add
adc
test
mov
loope
dec
or
inc
inc
repz
cld
aam
sar
mov
leave
ret
movzx
and
mov
pop
scas
(bad)
call
or
jne
mov
cmp
jne
or
je
cmp
jne
or
je
loop
call
inc
add
adc
cmp
jne
mov
or
jne
mov
cdq
nop
sbb
shl
inc
outs
div
loop
mov
lds
add
jmp
inc
mov
mov
add
es
outs
mov
add
jmp
add
add
test
xor
cmp
jne
push
push
push
pop
push
push
in
cmp
mov
or
sbb
push
push
push
psubb
fcmovnb
test
or
add
adc
in
test
cdq
add
mov
js
int3
inc
adc
sbb
sbb
iret
test
sbb
adc
cmp
unpckhps
pop
push
fwait
cmp
jne
adc
mov
push
add
mov
add
pop
enter
inc
push
mov
sar
fmul
je
jg
jge
lea
sub
les
adc
retf
add
sub
je
ja
pop
in
jge
je
rcr
aam
sbb
loopne
fs
hlt
mov
sub
movs
(bad)
jg
(bad)
mov
cmp
je
test
je
cmp
ss
mov
js
jne
jg
fimul
xor
ins
xor
inc
or
pop
xor
lea
les
adc
popa
mov
fild
mov
cmp
je
push
fs
loop
jg
mov
(bad)
push
push
jne
push
push
jmp
mov
push
lods
sub
mov
je
loopne
lds
cmove
or
cs
or
cmps
add
jl
add
adc
adc
push
add
sbb
fstp
repz
or
cli
mul
mov
add
mov
add
add
cmc
push
inc
adc
sub
inc
and
jns
jb
sbb
push
add
adc
xor
adc
or
adc
sbb
sub
pop
or
or
sub
add
push
mov
dec
call
pusha
jae
add
mov
and
push
pop
mov
aam
add
pop
ret
mov
cld
out
or
mov
cmp
jae
add
push
or
cli
add
adc
jb
outs
xor
pop
add
jmp
les
dec
or
(bad)
mov
push
mov
add
sub
shr
mov
imul
outs
xor
dec
lock
dec
test
(bad)
out
inc
mov
jne
xor
hlt
mov
mov
mov
test
(bad)
(bad)
inc
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
jmp
dec
add
shl
pop
mov
sub
pushf
sub
and
pushf
mov
sbb
loop
pop
add
mov
pop
or
add
push
or
hlt
mov
mov
xchg
test
inc
add
or
test
and
hlt
jne
mov
lahf
sti
(bad)
inc
sti
add
aas
mov
dec
pop
cmp
jbe
mov
add
mov
inc
cmp
loop
(bad)
mov
fidiv
dec
or
jno
cmp
jne
cmp
jae
clc
mov
mov
shr
not
and
add
(bad)
bound
sbb
mov
jne
in
pop
mov
stos
pop
lods
dec
or
into
push
mov
dec
and
pop
or
jne
cmp
je
out
jg
pop
rol
add
mov
add
jno
sti
or
or
mov
push
mov
inc
mov
frstor
ret
and
jne
ds
xchg
or
fdivr
sbb
or
jmp
and
outs
and
pop
and
adc
(bad)
loope
push
mov
mov
mov
mov
dec
jne
xlat
mov
jg
ja
mov
mov
lsl
mov
inc
push
push
push
call
pop
xor
mov
or
sbb
std
fld
movs
mov
add
inc
or
adc
(bad)
jns
add
and
adc
imul
adc
jo
sub
xor
cmc
mov
sub
sub
fcom
add
lea
push
lea
xchg
pop
sbb
(bad)
sti
hlt
dec
xchg
add
dec
jbe
sub
mov
push
and
xor
int3
xor
mov
lea
push
lea
sub
dec
clc
(bad)
fcomip
pop
and
and
stc
add
cmp
jge
or
shr
or
ja
es
or
xor
shr
push
mov
jge
inc
cmps
mov
or
(bad)
push
and
and
or
jne
add
cmp
sbb
pop
es
push
mov
cmp
jae
es
jmp
cmp
jne
and
adc
int3
loope
out
or
aaa
jmp
adc
sbb
lds
add
frstor
cli
dec
mov
adc
cmp
(bad)
(bad)
fmul
mov
inc
adc
mov
je
mov
mov
jl
inc
scas
aaa
mov
jo
and
call
cli
push
clc
and
mov
mov
jne
mov
jmp
add
(bad)
and
or
je
mov
mov
out
and
retf
pusha
hlt
mov
jne
data16
(bad)
fistp
test
jl
shl
inc
jmp
mov
mov
mov
sub
(bad)
mov
clc
sar
dec
cmp
jle
pop
sar
aaa
icebp
cmp
cmp
jne
cmp
jge
add
pop
ja
iret
shr
xor
pop
in
and
mov
jg
out
add
pcmpeqw
mov
and
jmp
lea
scas
sbb
sbb
lea
out
sbb
(bad)
jne
sub
add
add
dec
or
mov
add
mov
mov
aaa
std
bound
jl
mov
iret
std
std
add
dec
or
or
popf
mov
cmp
fbstp
mov
jge
inc
cmp
mov
jne
mov
shr
cmp
(bad)
cmp
(bad)
inc
jmp
sub
pop
sti
or
sub
cld
lea
push
test
aaa
mov
mov
mov
mov
mov
jne
add
mov
dec
add
xor
lahf
mov
test
lea
mov
jne
cmp
in
jne
ins
cmp
jne
outs
movs
dec
fild
inc
add
add
jmp
or
(bad)
cmp
jne
lea
jmp
hlt
ret
xor
push
dec
add
(bad)
je
xor
enter
cli
mov
add
push
inc
xor
and
inc
repz
mov
je
push
push
cmps
push
shl
lahf
xchg
std
or
adc
jbe
fs
xor
jmp
or
mov
(bad)
push
add
xlat
mov
or
sbb
mov
mov
mov
mov
xor
test
dec
loopne
(bad)
jl
push
imul
xor
sar
ja
inc
or
or
hlt
mov
push
shl
add
jge
xlat
pop
imul
test
jne
(bad)
(bad)
mov
popf
lea
cmp
ja
lea
or
repz
(bad)
inc
add
lea
cld
lock
icebp
mov
out
(bad)
(bad)
inc
sub
adc
aam
clc
aaa
lea
lea
cmp
jbe
jb
dec
or
(bad)
(bad)
inc
mov
add
mov
lea
mov
mov
cmp
inc
add
inc
inc
mov
inc
test
jp
dec
mov
jne
or
arpl
push
or
inc
add
mov
sbb
clc
mov
jge
sub
(bad)
dec
sub
mov
and
shr
mov
or
dec
cmp
pop
cmp
mov
cld
jle
test
add
jmp
repz
aas
lea
lock
mov
pop
pop
mov
cmp
jne
push
jae
loop
dec
xchg
cmp
pop
nop
ror
js
sub
and
shl
push
pop
and
add
push
mov
dec
add
jg
and
jmp
adc
into
add
ins
jle
arpl
inc
lea
sbb
(bad)
jp
mov
lea
mov
sub
mov
adc
add
pop
add
dec
rcr
pop
or
mov
sub
pop
add
arpl
jge
cmp
or
lea
pop
popf
mov
gs
jmp
and
xor
es
or
inc
test
dec
sbb
jmp
xor
mov
mov
and
inc
cld
mov
ud0
cmps
nop
cmps
xchg
jge
dec
push
or
jne
mov
xor
das
call
push
pop
test
pop
add
jne
sbb
dec
add
dec
or
pop
imul
into
dec
je
jns
jb
ret
dec
jns
jns
lock
loopne
jbe
or
jns
(bad)
pop
fdiv
add
mov
jg
adc
jne
mov
push
retf
inc
ret
in
jnp
pusha
ds
push
add
push
shl
cli
popa
in
lods
bound
lods
shl
jbe
in
or
inc
in
jns
(bad)
lock
jb
popa
dec
loopne
adc
or
mov
pop
mov
dec
add
jb
imul
push
or
sbb
fiadd
nop
pop
or
test
mov
push
mov
ss
test
push
les
add
cli
pop
add
call
add
mov
pop
cmp
jne
cmp
pop
cmp
out
fnstsw
sbb
pop
jmp
mov
mov
mov
mov
lea
mov
inc
cmp
lea
mov
ja
outs
das
adc
mov
cmp
setge
dec
and
inc
mov
cmc
dec
inc
mov
setae
popa
push
push
cld
mov
add
cmp
jae
or
dec
mov
imul
(bad)
jmp
mov
adc
mov
(bad)
stos
je
push
inc
push
mov
mov
inc
pop
ret
inc
push
add
xor
cmp
jne
mov
in
jne
mov
mov
inc
dec
sar
mov
mov
lahf
test
add
pop
ret
or
icebp
push
push
pop
dec
loop
adc
sub
mov
mov
aas
add
mov
dec
add
(bad)
(bad)
(bad)
jns
test
ud0
or
mov
(bad)
cmp
(bad)
jbe
mov
fs
jmp
(bad)
dec
je
sub
test
jge
and
je
mov
jns
push
push
lea
pop
out
inc
push
cli
ja
mov
out
add
fcomp
push
shl
jg
ret
pop
and
inc
and
mov
cmp
jbe
clc
(bad)
inc
or
aaa
jmp
test
jne
mov
mov
loopne
out
loop
bnd
(bad)
jmp
mov
enter
add
sub
mov
sub
pop
sar
loop
add
lea
ret
push
push
push
sbb
stc
or
inc
enter
movzx
add
and
cmp
adc
inc
add
jne
inc
inc
jo
call
xor
adc
movs
push
mov
pop
inc
jl
je
lea
outs
pop
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
jne
(bad)
ja
cmp
jl
cmp
jbe
push
lods
cwde
sti
push
cmp
and
jne
mov
add
lds
jb
inc
out
retf
pop
or
adc
jbe
inc
cmp
jae
sbb
fisttp
adc
push
fcomp
loope
mov
es
add
jge
cmp
in
clc
jb
inc
cmp
sahf
aas
inc
shl
pop
lods
xchg
loopne
dec
mov
cmp
je
cmp
jne
mov
cmp
inc
mov
xlat
mov
mov
sub
(bad)
push
sub
sar
shl
add
cmp
jne
add
mov
rol
or
div
jo
mov
push
push
mov
pop
(bad)
jne
clc
jmp
push
cmps
pop
ror
adc
cmps
lea
and
jmp
mov
inc
pushf
ret
cmps
jmp
sbb
dec
cld
jne
mov
test
(bad)
cmp
jae
cmp
je
sbb
repnz
sbb
and
mov
cmp
or
sub
xchg
lea
cmp
movs
movs
(bad)
mov
push
dec
adc
sbb
jne
adc
shl
mov
mov
sub
lea
push
sbb
pop
dec
or
xlat
mov
mov
lea
and
(bad)
(bad)
call
jb
lea
mov
cmp
jae
add
sub
jmp
and
lea
(bad)
inc
xlat
mov
cmp
lods
stos
add
cmp
je
mov
lea
cmp
(bad)
dec
jae
mov
test
jne
cmp
pop
cmp
jne
inc
inc
jmp
cmp
jae
cmp
add
inc
jne
mov
jmp
std
dec
sbb
mov
mov
jmp
movzx
add
(bad)
dec
mov
div
lea
cmp
jae
call
inc
push
pop
add
inc
inc
jmp
lea
cmp
jg
dec
jae
sub
mov
push
cwde
jno
mov
mov
lods
sti
(bad)
jg
jmp
cmp
jae
sub
jb
mov
jmp
movzx
add
jmp
lea
aaa
dec
lods
cmp
inc
ror
imul
shl
or
shl
mov
push
movzx
push
mov
dec
aas
inc
adc
clc
or
dec
adc
jl
sbb
mov
dec
push
(bad)
adc
enter
cmovg
pusha
jae
adc
inc
lea
lea
lea
cmp
jae
cmp
jne
inc
jmp
inc
inc
adc
add
sub
lock
idiv
jmp
jae
xor
mov
cmp
jne
inc
cmp
je
mov
cwde
jo
ret
arpl
or
push
cmp
ret
mov
add
shl
sbb
or
inc
mov
sbb
(bad)
(bad)
ficom
adc
cmp
add
pop
add
inc
cmp
cmp
push
add
lea
mov
fcom
pop
and
pop
ja
push
(bad)
jne
lea
push
mov
inc
add
std
fwait
xor
or
sbb
or
sbb
pop
pop
add
je
push
(bad)
in
test
je
inc
sub
and
and
and
aas
push
dec
adc
add
in
dec
add
cli
inc
inc
or
leave
push
mov
mov
inc
test
aad
mov
mov
je
mov
mov
jns
dec
les
(bad)
out
(bad)
mov
cmp
jl
and
sti
js
push
movsx
xchg
call
and
in
mov
dec
add
jg
fs
mov
ja
test
lock
add
rcl
enter
mov
pop
mov
stc
mov
dec
ja
(bad)
jg
call
call
call
dec
je
or
lods
fist
or
mov
or
pop
in
pop
or
or
adc
clc
mov
cmp
jne
into
out
or
arpl
lea
add
adc
or
test
inc
movsx
lea
lea
jmp
and
inc
jle
addr16
push
clc
jge
mov
(bad)
(bad)
aas
out
add
sti
push
ins
je
cmp
jne
std
add
cld
pop
mov
xor
and
cmp
jne
cmp
jne
inc
inc
or
mov
add
mov
mov
xchg
dec
inc
ins
sbb
jne
sub
adc
aad
push
sub
mov
push
dec
sub
cmp
cmp
jge
pop
jg
jmp
pop
call
add
jb
add
or
push
out
clc
jne
inc
cld
xor
jmp
clc
call
je
mov
sbb
test
pop
jo
je
ja
test
jne
mov
hlt
mov
add
test
je
inc
push
pop
out
inc
inc
jmp
(bad)
xor
push
inc
mov
inc
mov
lea
mov
jge
clc
das
fdivr
pusha
jns
mov
ins
(bad)
cmps
fist
or
nop
push
lea
(bad)
out
out
dec
jge
mov
sub
sub
je
dec
je
ja
outs
mov
cmp
mov
inc
sahf
add
bound
test
inc
je
jae
ja
mov
sub
movsx
shr
jecxz
mov
xor
iret
sbb
or
(bad)
cmp
fistp
push
addr16
sar
add
xor
add
icebp
clc
cmp
inc
clc
add
addr16
je
(bad)
mov
scas
and
clc
imul
jne
cwde
mov
clc
mov
mov
test
mov
out
push
lea
push
mov
mov
add
and
mov
push
pop
jne
mov
arpl
adc
or
not
cmp
dec
add
aas
sub
mov
test
inc
jnp
ds
adc
inc
imul
mov
pop
rol
or
push
mov
jb
scas
dec
adc
test
mov
rol
int3
daa
mov
and
sbb
stos
mov
sbb
inc
ins
icebp
sub
and
lock
into
inc
lods
cmp
cld
xor
fwait
enter
pop
mov
mov
add
mov
mov
jmp
and
je
or
mov
adc
pop
or
out
push
mov
mov
jmp
pop
mov
packssdw
mov
jno
or
je
jp
out
xchg
sbb
cmp
adc
dec
pop
mov
pop
movsx
cdq
jmp
adc
add
(bad)
pop
movzx
jmp
and
and
or
rcr
aas
cld
(bad)
push
sar
jl
test
jae
neg
adc
mov
neg
mov
sub
fsubr
push
or
xchg
pusha
and
mov
add
(bad)
clc
ror
idiv
inc
clc
mov
jo
mul
or
sub
add
dec
test
(bad)
in
sar
je
mov
cdq
mov
mov
mov
sti
fnsave
in
jne
fmul
fadd
call
cmp
add
pop
int3
mov
dec
mov
jmp
push
(bad)
cmp
hlt
xchg
add
je
mov
cmp
jne
ja
in
ret
jne
and
shufps
sbb
test
jmp
es
stos
lahf
jge
je
mov
ret
or
jmp
idiv
or
and
and
sub
or
push
sub
test
jne
mov
jg
mov
add
(bad)
retf
push
jmp
adc
add
test
xor
xor
sti
pop
loopne
inc
cmp
jle
inc
add
push
fwait
outs
mov
out
pop
sar
mov
pop
iret
pop
pop
push
mov
loopne
push
jae
jmp
hlt
sbb
mov
cmp
je
sbb
pop
and
pop
pop
cli
dec
dec
loop
jne
push
dec
test
call
out
rol
mov
dec
xlat
jne
daa
or
addr16
xor
inc
std
push
stos
mov
dec
js
mov
mov
mov
inc
adc
fmul
stos
mov
out
jbe
cmp
adc
or
pop
ret
jmp
adc
call
iret
jne
dec
fidiv
(bad)
cmp
sbb
popa
or
ret
dec
push
adc
mov
je
adc
mov
mov
jae
sbb
aas
ret
dec
push
loop
add
lahf
add
arpl
call
mov
mov
mov
nop
push
add
mov
inc
pop
push
aaa
push
lock
cmp
mov
mov
shl
mov
pop
inc
test
je
sti
adc
sub
inc
cmp
mov
sub
add
add
ret
push
push
dec
add
call
call
pop
and
inc
cmp
jl
pop
and
clc
dec
sbb
inc
or
or
(bad)
pop
lock
out
test
je
or
mov
std
sbb
add
or
or
cmp
call
adc
mov
sbb
jbe
fidiv
add
outs
mov
mov
call
test
jne
mov
push
adc
mov
sar
(bad)
aas
push
cld
and
mov
cmp
jmp
mov
std
(bad)
inc
mov
pop
and
cmp
jne
or
mov
cmp
sar
ror
or
lds
or
(bad)
or
mov
inc
mov
pop
ret
shl
adc
inc
or
pop
sub
mov
adc
leave
je
mov
mov
xchg
inc
sar
dec
mov
mov
mov
lea
(bad)
(bad)
inc
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
or
call
jne
dec
jne
xor
cmp
je
sub
nop
pop
not
add
fidivr
push
aad
lock
and
adc
mov
jbe
sar
dec
pop
je
or
je
inc
inc
push
mov
aas
and
cmp
jne
dec
jne
xor
cmp
je
jne
and
lock
neg
in
push
pop
adc
sbb
out
retf
pop
les
clc
push
push
pop
std
pop
adc
push
mov
push
inc
or
fwait
sub
mov
add
leave
cmp
ror
rcl
sub
jne
dec
dec
or
xor
inc
jae
mov
lahf
sub
pop
je
sub
lock
jno
mov
or
cwde
jne
fwait
or
inc
sbb
and
adc
adc
sar
jle
pop
pop
dec
push
pop
je
adc
pop
add
enter
mov
jl
pop
dec
jmp
sub
andnps
push
int
call
arpl
push
mov
and
sar
pop
mov
lea
and
out
and
test
je
sub
pop
inc
das
jecxz
adc
rcr
je
test
je
lock
call
and
pop
mov
add
dec
jo
xor
dec
push
sbb
push
je
and
inc
add
ja
jmp
sub
and
pop
cdq
mov
jmp
jg
mov
mov
xor
adc
std
add
sub
push
idiv
(bad)
mov
add
pop
jmp
mov
fadd
mov
cmp
jne
cmp
cld
bound
(bad)
dec
mov
push
cld
ja
fnstenv
cmp
je
push
pop
dec
push
add
inc
or
cmp
je
or
clc
add
sbb
mov
jne
mov
(bad)
call
mov
pop
call
xor
add
aaa
add
(bad)
cmp
jge
lea
shl
iret
ror
popf
adc
fs
add
cli
cmp
sar
jmp
mov
call
or
cmovbe
pop
jmp
aam
rcl
or
push
push
rol
or
mov
inc
hlt
mov
popa
add
loopne
cmp
jp
add
adc
cmp
jne
inc
push
jecxz
data16
lock
sbb
call
jae
mov
and
enter
test
clc
xor
je
inc
pop
(bad)
mov
pop
movaps
mov
xor
test
xchg
xchg
adc
or
pop
out
pop
mov
jmp
inc
xchg
int3
repz
push
enter
pop
inc
and
xchg
shl
hlt
stos
xchg
in
dec
push
mov
sub
(bad)
cmp
ret
lahf
add
mov
mov
popa
mov
or
inc
mov
sbb
imul
sahf
cli
and
add
fdivrp
inc
hlt
mov
mov
add
add
out
push
sbb
cld
mov
jbe
ror
(bad)
fild
cmc
jno
sub
cld
mov
cmp
jne
(bad)
(bad)
inc
inc
mov
inc
mov
inc
mov
lea
push
(bad)
fstp
cmp
clc
cmp
clc
lea
push
ret
sbb
(bad)
aas
pop
push
push
mov
push
call
dec
sub
clc
cmp
jl
mov
sub
cmp
xor
movlps
jmp
add
jne
mov
ss
jmp
xor
pop
push
dec
lea
cmp
sti
scas
pop
mov
jmp
ror
sub
pop
adc
pushf
push
inc
sub
add
inc
je
or
cmp
je
jp
push
call
jmp
sub
cmp
out
mov
adc
and
sub
mov
push
inc
mov
test
jle
inc
xor
mov
push
call
bound
out
add
mov
test
jne
and
shr
push
fist
(bad)
dec
mov
mov
lea
sbb
add
or
adc
and
dec
call
xor
mov
in
push
jge
xor
adc
pop
dec
js
dec
test
call
hlt
add
jo
std
clc
lea
mov
adc
inc
cmp
jne
or
jmp
and
mov
mov
mov
add
cmp
mov
jae
add
scas
or
or
inc
inc
rcr
(bad)
(bad)
mov
jae
mov
inc
cmp
jne
add
jmp
mov
inc
inc
jmp
out
ja
jae
sub
push
shl
or
ror
fld
push
cmps
and
pop
stc
dec
je
mov
push
(bad)
(bad)
(bad)
mov
inc
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
xor
add
or
pop
test
jb
mov
repz
test
jo
clc
out
in
mov
sub
mov
or
inc
jb
test
enter
gs
dec
mov
mov
mov
test
mov
je
ins
bound
xor
std
popa
push
(bad)
movzx
push
ja
push
jno
sub
jne
dec
cld
or
cld
push
lea
cmp
jp
pop
xchg
int3
arpl
pop
xchg
jmp
inc
or
idiv
adc
dec
pop
jmp
cmp
jne
and
call
xor
icebp
jmp
add
sub
hlt
mov
mov
movzx
adc
ret
push
aaa
test
movzx
pushf
add
adc
(bad)
call
jno
inc
loopne
inc
ror
cmp
jg
je
cmp
(bad)
ffreep
push
sti
inc
je
cmp
leave
sti
dec
jne
inc
jmp
cmp
sbb
cld
push
cmp
lea
jne
inc
xchg
idiv
jg
fcomip
jmp
inc
jmp
cmp
je
cmp
ss
(bad)
mov
inc
jmp
cmp
inc
sti
jmp
dec
dec
cmp
mov
(bad)
(bad)
inc
jne
jne
adc
add
fnsave
in
fisttp
jmp
adc
push
cmp
dec
push
inc
je
or
jmp
mov
jp
mov
or
cmp
xor
les
(bad)
arpl
(bad)
jnp
cmovs
sbb
pop
outs
jmp
push
and
(bad)
(bad)
(bad)
mov
inc
in
xor
cmp
je
cmp
je
cmp
jg
out
or
nop
or
cmp
psubq
fimul
mov
addr16
cmp
je
jo
lock
mov
mov
test
mov
push
push
pop
mov
cmp
jne
jmp
cmp
lds
mov
mov
adc
add
pop
pop
rcr
adc
dec
cmps
or
pop
mov
cld
fist
jge
cmp
je
cmp
jnp
pop
mov
call
test
or
(bad)
(bad)
lock
fisttp
in
inc
mov
inc
pop
mov
adc
sub
data16
std
push
ins
pop
and
push
mov
jmp
push
loope
mov
sti
gs
cmp
cmpxchg
mov
push
movs
adc
jne
mov
inc
fst
shl
jmp
add
mov
xchg
push
pop
cmp
adc
icebp
fild
inc
int3
arpl
test
sti
rol
jne
int3
and
lea
call
mov
aam
and
adc
in
mov
inc
(bad)
mov
mov
jle
jmp
pop
add
(bad)
movs
jb
js
pop
mov
les
adc
xchg
adc
(bad)
out
jle
std
(bad)
call
je
movzx
cmp
jne
jmp
cmps
cmp
mov
mov
ficom
retf
popa
mov
inc
out
aas
pop
jne
icebp
(bad)
lea
(bad)
pop
cli
xor
pop
and
or
push
mov
mov
stc
add
cmp
jne
mov
sti
js
je
cmp
jbe
inc
add
(bad)
js
hlt
imul
jl
pop
or
cs
jnp
jnp
jg
int3
arpl
push
pop
adc
mov
mov
push
jmp
lods
mov
call
inc
mov
(bad)
jg
in
jge
jnp
push
cmp
jne
mov
inc
mov
jmp
push
std
inc
mov
mov
cmp
je
inc
cmp
jne
cmp
(bad)
(bad)
(bad)
call
ss
cmp
jae
mov
jmp
mov
mov
cmp
ja
movzx
movzx
sub
inc
mov
mov
and
inc
and
mov
shl
or
inc
dec
jne
inc
idiv
call
movzx
mov
mov
push
jmp
and
add
dec
cmp
xchg
mov
jne
mov
inc
push
test
add
sbb
add
je
mov
push
fs
movsx
inc
(bad)
call
loop
enter
movsx
xor
test
je
into
jne
cmp
inc
lock
push
jmp
inc
pop
sbb
jbe
cld
pop
cmps
fld
pop
mov
(bad)
jmp
or
int3
lea
iret
rcr
shl
call
mov
inc
inc
jmp
sbb
add
enter
jmp
cmp
outs
sub
sub
fadd
jne
sar
jae
in
je
inc
aam
or
and
and
retf
push
add
mov
ror
jmp
bound
out
stos
jno
and
jecxz
jecxz
sbb
ja
cmp
jne
pushf
mov
popf
pop
std
jo
or
and
mov
fmul
xchg
jmp
ret
mov
mov
sub
adc
sbb
enter
fnstenv
cli
dec
push
sti
cmp
jge
dec
add
punpckhdq
push
push
mov
pop
imul
fcom
push
fsubr
add
mov
and
jge
leave
jo
gs
jge
aas
(bad)
(bad)
neg
adc
push
neg
mov
add
adc
retf
adc
add
je
cmp
je
les
or
add
aas
lea
shl
jmp
cmp
cld
push
ret
aaa
push
shl
jae
xor
cmp
(bad)
call
pop
je
neg
cmp
inc
sbb
inc
adc
add
add
and
out
add
mov
(bad)
push
dec
add
adc
je
mov
jmp
mov
inc
inc
mov
jmp
fist
movzx
inc
cmp
fcom
push
cmps
adc
sub
mov
inc
cmp
and
pushf
cmp
nop
test
dec
mov
cmp
jne
mov
xor
ja
ja
test
(bad)
(bad)
jmp
(bad)
jmp
jmp
cld
lods
pop
(bad)
cmp
imul
pop
cmp
inc
cmp
cmp
mov
mov
mov
add
add
add
jle
test
jb
dec
or
and
leave
jo
sbb
fild
push
push
jge
jmp
dec
js
mov
jbe
ret
mov
mov
push
mov
xlat
jmp
xor
mov
dec
inc
psubusb
jne
xchg
mov
sar
inc
or
pop
adc
cld
jne
test
pop
add
adc
fistp
adc
test
jnp
mov
mov
pop
icebp
lahf
out
or
and
or
popf
and
add
push
pop
je
push
or
lds
jo
jbe
jne
jg
lock
add
mov
mov
sub
lea
les
dec
dec
test
mov
jle
push
cmp
jmp
cmp
je
mov
mov
out
mov
mov
and
clc
je
push
push
shl
out
pop
mov
mov
jmp
push
lea
pop
push
cmp
pop
hlt
stos
call
dec
or
jmp
mov
movs
jmp
lahf
adc
movd
in
and
cmc
xchg
push
mov
sub
jl
adc
jg
bound
mov
adc
ret
add
mov
add
inc
sar
jmp
(bad)
aas
adc
(bad)
mov
add
mov
add
mov
sti
jmp
inc
in
or
imul
add
add
or
and
mov
pop
pop
lea
inc
or
push
push
mov
pop
lea
aam
pop
mov
scas
add
adc
add
sub
pop
aad
stos
push
jmp
mov
add
lock
mov
mov
fiadd
aad
test
shl
(bad)
(bad)
fild
add
adc
mov
push
adc
cmp
and
out
mov
gs
fstp
ret
mov
movs
push
pop
push
sti
xchg
push
push
inc
add
(bad)
jmp
sbb
xchg
push
call
fmulp
sbb
inc
jp
mov
aam
or
add
or
mov
inc
pop
push
xor
rcl
xor
cmp
sbb
call
inc
and
sbb
loopne
ret
je
mov
lea
daa
add
add
jne
push
mov
test
aaa
inc
or
(bad)
cmp
je
push
add
pop
jg
pop
ficomp
push
adc
in
pop
lea
inc
inc
mov
and
mov
retf
popa
xor
(bad)
test
call
and
push
add
dec
add
int
mov
mov
jo
xor
push
cli
jmp
mov
(bad)
mov
test
call
add
lea
pop
adc
add
xchg
inc
or
retf
lock
or
lea
or
(bad)
jg
aaa
aas
push
push
push
xlat
mov
xor
or
repnz
cmp
(bad)
(bad)
(bad)
(bad)
je
dec
dec
cmp
jae
mov
mov
mov
mov
inc
dec
jmp
mov
pop
sub
shr
outs
inc
inc
push
mov
aas
jb
aam
cmc
cmp
call
mov
pop
jne
cmp
jle
call
mov
xorps
pop
xor
push
mov
xor
push
or
or
add
movs
xor
push
iret
mov
pop
cmp
jne
scas
sti
fwait
mov
pop
inc
ja
das
or
test
mov
push
sbb
cmp
cmp
pop
mov
mov
jg
je
mov
imul
add
adc
call
mov
sub
mov
xchg
aas
mov
sbb
test
dec
xor
push
push
push
mov
cmps
add
add
push
push
add
call
cmp
jne
mov
add
or
and
inc
or
fcomp
jmp
pop
shr
add
jne
movs
mov
push
fist
mov
adc
fidivr
jg
test
add
add
xor
and
rol
xor
icebp
mov
mov
adc
ss
mov
lods
dec
push
push
dec
(bad)
(bad)
fsubr
aaa
pop
or
add
add
and
cmp
jne
cmps
mov
mov
inc
adc
mov
mov
imul
inc
mov
or
ret
jl
cmp
jg
inc
jmp
cmp
jne
sub
dec
pop
mov
add
mov
cmp
mov
and
xor
and
xchg
pushw
in
movsx
test
mov
fdiv
sub
or
mov
add
pop
jmp
push
nop
adc
mov
or
mov
cmp
push
adc
pop
call
adc
pop
mov
cmp
add
clc
je
pop
je
jle
mov
cmps
mov
cwde
pop
push
lahf
inc
mov
pop
mov
(bad)
jne
pushf
or
sahf
or
lahf
sbb
xchg
push
push
push
jmp
sbb
push
or
out
out
(bad)
rcl
push
(bad)
cmp
mov
push
sub
inc
push
jmp
inc
or
push
pop
dec
(bad)
jne
dec
jne
sbb
push
and
mov
pop
push
push
inc
(bad)
cmp
cs
inc
jmp
daa
push
ins
add
or
and
fisttp
push
push
push
xor
pop
cmps
(bad)
cmp
push
xlat
inc
mov
mov
add
dec
sbb
sar
fwait
cmp
cmp
jl
(bad)
mov
retf
dec
push
cld
push
cmp
jge
mov
cmp
jg
cmp
pop
mov
sub
inc
(bad)
jg
adc
push
imul
cmp
jne
xor
cmp
xlat
(bad)
fld
sar
mov
mov
xchg
push
jne
fbld
inc
adc
pop
adc
lock
shl
mov
mov
jmp
or
sar
jmp
call
clc
add
clc
lea
and
cdq
idiv
mov
pop
cmp
jg
imul
sub
add
lea
jmp
fiadd
ret
or
sbb
or
and
push
mov
push
sub
jmp
mov
or
jae
add
jle
dec
test
cld
cmp
sub
ss
inc
sub
jle
sbb
add
mov
adc
push
sub
jmp
jns
add
dec
mov
or
adc
sub
inc
adc
call
lds
push
cmp
sar
lea
cmp
cmp
movzx
mov
test
cmc
push
cmc
jne
cmp
add
mov
inc
fisttp
and
std
ja
(bad)
rol
add
clc
sbb
push
push
jne
push
push
or
es
mov
xor
push
push
std
sahf
std
jnp
mov
mov
mov
fidivr
call
mov
inc
push
call
in
ficomp
test
adc
out
push
out
adc
(bad)
aaa
cmp
shr
or
loopne
nop
add
mov
not
and
shl
or
lock
adc
and
xor
fldcw
pop
inc
xchg
test
xchg
fadd
aam
xchg
gs
push
test
add
pop
idiv
add
add
mov
or
test
or
add
add
add
cmp
mov
push
mov
mov
outs
mov
call
adc
or
add
(bad)
jne
or
jmp
or
(bad)
(bad)
(bad)
jmp
or
and
pop
je
cmp
jne
inc
add
jmp
add
pop
pop
mul
or
pop
je
add
ret
xchg
push
jp
sub
mov
xchg
add
pop
add
and
ret
mov
add
retf
mov
cmp
je
pop
or
or
mov
mov
retf
and
add
add
or
jmp
or
pop
dec
add
pop
je
adc
sbb
ja
or
and
pop
popa
inc
and
cdq
idiv
pop
mov
(bad)
push
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmp
jne
ret
push
inc
add
adc
call
xor
and
fisttp
cmp
push
push
ins
loopne
add
push
push
(bad)
test
pushf
dec
js
sbb
adc
dec
push
sub
test
jge
or
mov
push
lea
push
jne
test
ret
pop
pop
mov
(bad)
jmp
fwait
inc
or
add
mov
jle
cli
jg
repnz
mov
shl
test
je
inc
add
fldcw
add
cmp
push
cld
pop
pop
in
push
pop
and
mov
inc
cmp
jge
mov
add
enter
jg
(bad)
mov
dec
and
push
push
sub
pop
mov
mov
sbb
cmc
pop
ret
out
xor
(bad)
shl
add
leave
and
add
rol
sub
jge
pop
or
cdq
mov
mov
mov
(bad)
out
fadd
nop
xlat
and
mov
shl
sub
not
mov
mov
and
jmp
or
mov
movs
mov
add
shl
inc
jmp
dec
or
fmul
pop
mov
push
pop
out
(bad)
out
ficom
cmp
jl
ror
adc
or
add
jmp
sbb
mov
mov
or
add
call
mov
mov
movzx
(bad)
mov
jmp
aas
sbb
cmp
add
inc
cld
jne
lea
xor
sbb
test
pop
scas
mov
repz
enter
pop
in
(bad)
adc
mov
push
clts
fimul
adc
add
pop
idiv
mov
mov
sub
cmp
jge
sbb
pop
jmp
cmp
jg
sub
mov
fcomp
pop
hlt
push
fsub
aad
jbe
repz
dec
mov
xor
int3
adc
inc
xor
fmul
pop
jl
xor
pcmpgtd
cli
repz
mov
mov
adc
add
push
fmul
push
mov
std
ficom
and
and
repz
xor
shr
jmp
dec
or
jg
shl
mov
sbb
sub
(bad)
mov
jne
cmp
jne
mov
clc
mov
mov
jmp
cmp
jne
xchg
xor
mov
(bad)
push
mov
push
cmps
je
push
push
(bad)
repnz
lock
ins
cmp
jne
or
mov
retf
xchg
fst
add
leave
les
fiadd
mov
push
(bad)
(bad)
out
or
jle
mov
test
mov
jle
mov
xor
(bad)
jg
add
push
movsx
inc
jmp
push
pop
mov
inc
(bad)
(bad)
(bad)
jg
dec
or
and
test
jl
cmp
jl
dec
cmp
jne
mov
jmp
call
push
xor
inc
jmp
xchg
mov
jno
aas
or
(bad)
pusha
mov
inc
or
sahf
fisubr
jle
dec
jne
push
push
push
out
mov
movs
movs
movs
in
dec
mov
lock
call
mov
mov
movsx
mov
movsx
mov
(bad)
fadd
ss
pusha
lea
pop
jmp
mov
mov
mov
mov
and
mov
jmp
mov
mov
movzx
call
cmp
fisttp
cmp
mov
loop
je
lea
jmp
mov
fcomip
dec
mov
cmp
jne
push
mov
mov
mov
jmp
lea
add
mov
mov
shr
shl
or
(bad)
(bad)
fbld
loop
mov
mov
test
jne
mov
add
mov
shr
or
lea
icebp
scas
mov
add
fistp
mov
or
iret
mov
push
inc
or
jg
mov
sub
mov
std
(bad)
dec
mov
mov
push
dec
mov
je
dec
je
dec
je
dec
je
dec
(bad)
cmp
jmp
dec
jne
push
jmp
mov
push
jmp
push
jmp
arpl
inc
push
jmp
push
pop
lea
push
dec
jne
out
call
clc
adc
clc
push
je
cmp
mov
push
movs
jmp
mov
fld
and
fstp
sbb
mov
mov
lea
lea
adc
and
cwde
cmp
pop
pop
je
pop
stos
cmp
sti
cmc
sub
daa
ja
clc
pop
push
daa
mov
lods
push
push
mov
pop
jmp
call
les
push
pop
jne
push
mov
mov
adc
mov
cmp
mov
mov
(bad)
hlt
mov
and
cmp
jle
push
inc
mov
out
adc
pop
sbb
adc
js
sbb
push
mov
mov
jp
sbb
xor
pop
call
xlat
lods
loop
cmp
jne
and
fdivr
and
repz
push
jne
sar
sbb
or
loop
cmp
jle
mov
cmp
inc
lock
idiv
lea
push
call
xor
call
sub
jge
add
lea
cmp
je
mov
cmp
je
mov
mov
adc
dec
cmp
jb
cmp
jbe
inc
cld
out
add
movs
xchg
inc
(bad)
jbe
jle
xor
repnz
mov
or
retf
in
imul
int
loop
loopne
push
push
shr
jle
aaa
adc
inc
in
ret
je
loope
add
cmp
mov
cld
inc
cwde
(bad)
jo
mov
fsub
jbe
fwait
cmp
sti
sub
inc
or
ffree
and
jns
cmp
arpl
jne
jae
jns
pop
dec
add
sub
jge
pop
cld
mov
inc
loopne
fdivr
(bad)
fbstp
call
mov
cmp
je
push
pop
dec
add
or
push
in
inc
cmp
adc
sbb
gs
mov
hlt
out
enter
rcl
dec
push
(bad)
out
fnstsw
inc
mov
dec
test
jne
or
jne
sub
ret
mov
ret
push
push
pop
ds
mov
lea
adc
xor
sbb
sbb
call
aaa
loope
ja
mov
lea
mov
rcr
mov
call
ins
mov
mov
sbb
loopne
aam
ftst
mov
mov
mov
(bad)
(bad)
fist
je
cmp
je
cmp
je
cmp
jne
inc
jmp
(bad)
fcomip
jmp
pop
mov
inc
cmp
ja
test
sti
xor
arpl
aaa
cld
sti
cmp
push
hlt
in
cmp
fild
push
(bad)
movsx
sub
je
dec
dec
je
sub
jne
loopne
sbb
sub
mov
in
mov
jmp
dec
mov
jl
push
jle
call
pushf
dec
pavgw
cmp
je
jg
jmp
sti
xor
sti
inc
jle
inc
jle
cmp
jle
push
cmp
push
arpl
(bad)
dec
push
pop
xchg
outs
pop
push
jl
push
jle
push
rcr
jne
add
lock
jge
adc
jle
movzx
fdivr
sbb
jmp
ror
dec
inc
mov
jge
sbb
fwait
mov
jmp
inc
add
push
lock
ret
inc
clc
sub
mov
jne
xchg
sti
scas
sti
es
sub
pop
mov
jne
jbe
fst
repz
inc
sbb
iret
jbe
jae
mov
dec
clc
mov
outs
fmul
je
test
or
jecxz
pop
jne
rol
pop
mov
jmp
lea
xor
loope
add
mov
or
sbb
mov
or
mov
int3
add
push
sbb
jl
mov
or
jl
movq
push
pop
dec
xchg
dec
into
jno
push
inc
jmp
cmp
je
pop
lea
and
add
cld
je
dec
dec
jne
sub
push
int3
add
dec
dec
pop
cmp
je
cmp
pop
out
mov
sbb
dec
test
fadd
cmp
push
cmp
rol
ret
push
adc
jne
dec
nop
test
dec
jmp
mov
das
pop
sub
jbe
sbb
shl
inc
jbe
cmp
jl
inc
jp
dec
test
cmp
and
xchg
rol
adc
sbb
dec
push
lock
movs
push
jmp
mov
(bad)
les
dec
mov
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
lds
pop
mov
mov
adc
inc
xor
mov
push
ja
rol
inc
in
sub
jmp
cmp
out
or
jmp
(bad)
mov
mov
ror
mov
or
jmp
xor
xor
xor
xor
jmp
or
stos
mov
mov
cmp
push
(bad)
out
call
inc
fcomp
jno
mov
mov
mov
mov
pop
mov
pop
leave
ret
fs
add
add
call
add
gs
mov
dec
mov
inc
add
mov
pushf
mov
inc
jecxz
sbb
dec
add
dec
xchg
add
push
or
fistp
or
pusha
sub
or
inc
mov
cmp
cmp
add
sbb
data16
dec
inc
ja
push
mov
pop
pop
ret
lea
mov
inc
aas
push
push
imul
add
mov
push
inc
add
lds
dec
xor
je
sub
popa
sub
enter
add
dec
xchg
repz
push
stos
mov
mov
je
push
fdivr
add
adc
lea
sbb
push
std
loopne
iret
mov
and
dec
add
sbb
jmp
adc
dec
push
inc
mov
xchg
or
jle
shr
inc
sub
mov
xor
(bad)
jmp
ficom
jne
or
retf
je
movzx
add
icebp
shl
fsubr
loope
call
js
xor
jb
clc
add
cmp
jl
es
push
leave
cmp
setne
iret
push
push
int
jge
or
jmp
popf
xor
out
sub
cmp
jne
mov
ja
test
xor
ds
push
movups
gs
(bad)
jmp
ret
sub
leave
cmp
movs
ret
ret
pop
add
loop
inc
mov
cmp
push
je
call
mov
jne
test
je
test
jne
or
pusha
mov
fist
or
mov
adc
mov
sbb
call
ret
adc
push
mov
cmp
je
adc
pop
pop
jle
(bad)
mov
mov
inc
and
push
mov
mov
loope
add
popf
and
mov
or
cmp
jb
cmp
jae
sbb
enter
pop
mov
movs
fninit
add
call
test
pop
lea
push
push
dec
pop
adc
pusha
jg
add
inc
or
push
pop
or
arpl
pop
repnz
(bad)
(bad)
(bad)
call
xor
add
mov
lea
shr
or
mov
mov
mov
shr
sar
pop
sub
loope
sub
add
out
jmp
out
shr
or
jle
or
out
shr
or
aam
aad
pop
outs
or
and
dec
xor
cmp
push
mov
dec
inc
adc
push
mov
jbe
push
outs
rep
mov
xor
movs
push
ja
sbb
sub
retf
mov
pop
push
adc
gs
add
mov
jg
and
or
dec
adc
xor
pop
cmp
jne
mov
clc
(bad)
inc
rol
adc
mov
shr
shl
or
xor
pop
jg
inc
cld
lock
jmp
mov
jne
in
cli
mov
cld
call
mov
mov
or
adc
push
sbb
mov
push
add
enter
loope
and
push
mov
mov
out
call
jmp
in
pop
add
outs
out
sti
mov
add
(bad)
(bad)
(bad)
mov
jmp
add
test
jne
test
jne
cmp
jne
and
ja
icebp
jg
mov
mov
out
aam
cmc
fist
lock
jne
add
add
cmp
jne
out
mov
inc
jne
push
jmp
test
sti
jg
leave
je
or
cmp
jne
push
push
shl
mov
adc
es
sar
lahf
lea
or
lods
push
jmp
movzx
mov
push
jmp
sbb
adc
add
out
or
push
lea
mov
dec
mov
imul
mov
lea
push
popa
loopne
sar
mov
movsx
neg
adc
cli
mov
data16
jb
in
mov
out
fstp
test
mov
je
mov
xor
add
test
jg
in
rcl
call
or
out
call
mov
cli
sub
jl
add
inc
sbb
inc
clc
push
adc
jmp
dec
pop
jne
test
jge
neg
and
add
sbb
dec
pop
jne
lea
test
mov
sbb
push
mov
lea
movs
mov
jbe
lock
test
xchg
dec
div
adc
dec
sbb
aaa
hlt
cmps
rol
dec
mov
jne
mov
out
cmp
mov
dec
dec
cmp
lea
jl
cmp
jb
movs
push
mov
icebp
(bad)
(bad)
dec
icebp
cmp
jae
inc
inc
inc
sub
sub
mov
movsx
and
neg
in
shr
ret
das
or
cmp
jne
dec
jmp
sub
hlt
adc
add
xor
inc
adc
rcl
jg
mov
xor
dec
in
fnsetpm(287
jg
aas
(bad)
mov
mov
mov
ret
and
or
adc
mov
jae
inc
jg
sub
mov
mov
or
test
mov
jg
cmps
dec
arpl
add
or
push
jne
jmp
rcl
dec
push
push
jp
cmp
jne
cmp
jne
mov
mov
mov
lock
lock
(bad)
aad
mov
stos
mov
add
cmp
jle
add
lea
ja
outs
enter
dec
hlt
mov
push
dec
hlt
cvttps2pi
(bad)
push
imul
mov
add
push
push
push
fsub
ja
pusha
cmp
xor
or
hlt
add
enter
add
inc
lock
out
js
fisttp
pop
jg
add
jle
test
push
(bad)
out
cs
jmp
sbb
data16
push
(bad)
jg
fdivr
adc
mov
add
mov
idiv
inc
xor
inc
fadd
je
in
inc
push
dec
jne
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
fadd
xor
inc
fsub
cmp
jne
cmp
jne
and
cmp
ja
loop
jne
and
sub
(bad)
push
xor
inc
out
sub
mov
dec
inc
jmp
inc
jmp
fisubr
(bad)
out
loop
sbb
or
mov
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
and
add
sbb
loop
add
and
mov
pop
cmp
mov
dec
add
pusha
cmp
je
jge
jge
add
mov
fisttp
push
adc
clc
ficom
or
inc
or
(bad)
cmp
inc
or
and
cmp
je
lea
or
inc
cld
dec
movs
dec
lea
push
inc
aaa
aad
pushf
mov
dec
or
or
int3
shr
push
dec
stos
push
dec
stc
(bad)
(bad)
push
push
popf
pop
icebp
ror
jbe
cmp
jae
dec
mov
mov
add
neg
sbb
not
and
push
repnz
or
push
adc
ret
mov
mov
mov
and
mov
push
mov
call
ret
mov
push
push
push
push
fbstp
add
jmp
mov
call
push
push
call
push
call
cld
mov
mov
test
and
adc
fs
jne
inc
fwait
mov
cmp
jne
ds
inc
add
lahf
xchg
pop
ret
push
pop
mov
or
(bad)
cmp
sbb
jae
push
add
fnstenv
lock
repnz
ret
push
into
cmp
push
icebp
mov
dec
add
jne
or
xor
test
fsub
repnz
mov
inc
in
add
repz
sbb
or
pusha
add
inc
pop
xor
ins
sub
and
or
xchg
sub
shl
lahf
and
push
dec
add
and
cmp
mov
and
inc
call
ret
jmp
and
mov
jne
push
inc
ins
test
push
(bad)
ret
sub
daa
push
ret
jecxz
sub
xor
aaa
mov
push
repz
add
pop
mov
mov
or
push
pop
cmp
xchg
or
aas
inc
inc
mov
add
sbb
test
push
hlt
or
stos
cmc
cmps
retf
ror
dec
ss
stos
push
enter
push
inc
and
sub
and
call
push
inc
adc
cmp
jne
dec
jne
jmp
pop
and
int3
int3
int3
mov
push
call
cmp
je
cmp
je
push
call
add
ret
mov
lock
add
ret
add
icebp
mov
jl
ds
rcr
movsx
push
stos
cmove
mov
and
push
push
mov
cli
jle
or
adc
and
dec
xor
mov
call
fdiv
mov
adc
mov
das
test
(bad)
pop
or
add
jne
inc
(bad)
push
cld
mov
mov
mov
add
cmp
jae
xor
fidivr
je
or
or
out
call
or
std
fild
push
mov
mov
mov
cld
call
sub
mov
imul
add
cmp
mov
jl
xor
std
(bad)
jnp
add
lea
push
mov
mov
das
pop
jno
inc
in
push
push
fbld
or
or
jne
and
imul
ins
mov
inc
add
cmp
sub
nop
pop
push
ficom
es
mov
pop
je
mov
ret
aam
cld
jno
hlt
sub
lea
sub
add
add
push
into
stos
sbb
cmp
fbstp
jne
jae
sub
and
(bad)
std
push
add
inc
lock
daa
mov
jne
cmc
dec
add
cmp
jb
mov
mov
mov
ror
add
xor
lods
cmp
mov
lods
test
jge
xor
mov
cmp
jl
jge
mov
ja
inc
add
jne
mov
push
pop
sub
push
add
fiadd
mov
or
cs
sbb
or
jns
add
adc
enter
or
add
pop
outs
fild
into
xchg
leave
jnp
lock
ja
ror
adc
sub
js
add
sbb
xor
addr16
cld
dec
cmc
mov
mov
jne
retf
pop
pop
push
mov
dec
cwde
mov
ins
inc
test
pop
clc
ss
push
mov
mov
dec
clc
jg
aad
add
cmp
push
outs
sub
jne
jmp
sub
iret
scas
sbb
in
arpl
jne
pop
xchg
mov
mov
in
push
out
fwait
clc
nop
sti
add
fimul
adc
outs
fdiv
cmp
cmp
je
(bad)
test
ret
(bad)
mov
sub
add
jl
mov
outs
and
cld
jmp
cmp
je
pop
cmp
je
cmp
jne
dec
add
add
cld
jne
adc
mov
in
imul
mov
jp
rcr
sbb
mov
fild
adc
jo
xor
mov
mov
sub
cmp
jge
sub
add
push
mov
scas
test
jne
add
mov
jmp
mov
add
je
fdiv
ja
jnp
mov
pop
cmp
add
call
or
add
(bad)
jne
dec
add
pop
mov
lods
push
add
movsx
or
cmp
add
ror
inc
pop
ror
cmp
fist
ds
pop
sub
je
mov
and
cmp
inc
push
lock
adc
fdivr
clc
imul
ja
je
inc
jo
mov
je
add
and
dec
je
pop
fimul
ins
idiv
popa
sub
pusha
je
sub
je
add
test
cmp
inc
inc
inc
neg
sbb
cmp
pop
jmp
push
push
cmp
std
push
pop
jmp
or
jne
mov
sbb
mov
cmp
out
cmp
and
test
retf
je
pop
cmps
loop
cmp
jl
mov
cmp
jg
adc
or
jle
jbe
sub
inc
pop
or
mov
push
add
fld
fstp
push
dec
push
js
push
xor
add
sbb
xor
push
cld
sub
push
sub
je
dec
je
dec
je
sub
je
sbb
fdivrp
call
and
add
and
mov
adc
lock
ja
jmp
test
je
sbb
jmp
add
jmp
jmp
add
pop
or
push
push
pop
add
mov
and
xor
dec
mov
push
call
lea
push
sbb
mov
xor
je
clc
popa
ret
pop
pop
adc
adc
adc
inc
or
fadd
adc
jnp
add
xchg
stos
dec
lds
jmp
mov
je
and
sbb
jne
jns
sti
rol
(bad)
or
inc
adc
(bad)
in
add
mov
inc
ret
lds
add
push
push
dec
push
mov
xchg
dec
dec
sbb
loop
xchg
cmp
xor
push
mov
or
jmp
inc
cmp
inc
pop
push
push
push
(bad)
ficom
cwde
cld
aaa
cmp
pop
or
xchg
sbb
ror
xchg
mov
mov
xor
xchg
mov
fwait
jmp
inc
adc
and
add
sbb
js
inc
cld
out
mov
dec
ss
outs
enter
mov
ja
pop
fadd
xchg
inc
sbb
sbb
jne
sub
dec
pop
xor
jnp
adc
je
or
adc
sub
adc
jg
add
add
push
push
mov
inc
je
push
lea
(bad)
push
and
push
jns
mov
push
dec
pop
mov
push
inc
jmp
mov
mov
inc
retf
push
lock
sbb
call
test
push
push
push
add
pop
xchg
jl
sub
add
js
sbb
pop
and
mov
mov
or
or
sub
adc
mov
xchg
cmc
adc
push
call
jbe
call
cmps
call
(bad)
stos
mov
mov
je
mov
jmp
sub
push
call
lock
inc
aas
fdiv
mov
arpl
out
aaa
add
adc
call
pop
xor
into
inc
aad
pusha
call
call
push
dec
mov
xor
adc
pop
inc
add
pop
pop
pop
ret
mov
xor
lock
add
in
mov
mov
adc
pop
or
cmp
push
cli
ret
pusha
add
lea
push
(bad)
(bad)
mov
xor
push
push
push
mov
or
or
jmp
(bad)
jmp
clc
(bad)
in
or
or
cmp
je
(bad)
pop
add
mov
push
push
pop
mov
dec
gs
inc
sbb
cwde
sbb
in
loopne
out
push
adc
and
inc
add
and
and
test
pop
cmp
cmp
ffree
por
xor
jp
rol
adc
push
add
xor
pop
pop
rol
xchg
adc
or
inc
pop
adc
push
mov
gs
fwait
adc
test
cmp
add
cmp
out
imul
cmp
shr
aas
pop
cmp
fild
adc
add
imul
out
jmp
or
adc
push
push
inc
nop
pop
jle
adc
mov
mov
(bad)
push
push
push
or
ror
push
push
jmp
or
call
adc
scas
push
push
sbb
rol
shr
retf
(bad)
mov
in
push
dec
add
stos
mov
pop
pop
in
push
(bad)
cwde
mov
shl
sahf
mov
xchg
mov
dec
mov
add
push
mov
cmp
xor
sub
jle
push
push
push
mov
out
dec
cmp
inc
cmp
mov
push
bound
ret
out
mov
inc
or
adc
jne
dec
jae
test
jle
cmc
or
mov
inc
js
test
iret
je
add
adc
repz
dec
mov
mov
push
add
pushf
and
adc
mov
and
popa
out
mov
icebp
movs
aas
(bad)
mov
les
test
je
cli
push
add
(bad)
jmp
pop
pop
ret
push
mov
jb
jle
dec
add
ret
or
xor
inc
xchg
push
mov
sbb
inc
jecxz
push
dec
add
push
loop
xchg
clc
and
mov
push
add
inc
pop
xchg
(bad)
cmp
dec
out
fdiv
stc
ins
pop
jae
lahf
scas
sti
inc
movzx
push
push
pop
or
push
getsec
push
(bad)
push
movzx
push
lea
loope
cmp
push
dec
xor
loopne
out
dec
sub
lea
call
retf
cmp
pop
xchg
mov
test
xor
push
pushf
dec
cmp
add
dec
std
push
sbb
sbb
or
mov
mov
cmp
fwait
pop
sub
xchg
or
sbb
lea
dec
xor
inc
sbb
xor
jg
jne
and
mov
or
test
sbb
xor
or
add
add
je
lds
push
mov
idiv
or
mov
sbb
jg
(bad)
or
push
or
jle
mov
or
pop
cmp
jne
mov
pop
in
mov
cwde
push
mov
or
je
adc
mov
jne
mov
retf
inc
mov
or
cmp
les
and
clc
jne
adc
push
add
cmp
clc
rol
jb
das
dec
jl
lock
jp
cli
jge
push
cmp
out
xchg
adc
jp
cmp
dec
daa
ds
je
popa
xchg
neg
cmps
retf
verw
dec
cmp
dec
adc
push
cld
adc
adc
mov
adc
adc
nop
std
jle
adc
xor
jmp
cmp
pop
call
push
cmp
adc
jbe
clc
pop
ret
push
mov
fcomi
arpl
or
xor
add
xor
or
sti
(bad)
pop
add
or
or
dec
push
push
xchg
xchg
ret
inc
push
cmp
les
lock
jge
adc
push
sub
dec
adc
push
hlt
mov
retf
cmp
cmp
sub
xor
xor
sub
dec
pop
(bad)
adc
std
sub
inc
int3
repz
lock
pop
inc
cmp
lds
add
daa
push
mov
jle
in
and
cmp
or
sub
adc
dec
(bad)
cmp
je
sub
sbb
add
lock
add
outs
in
jb
add
or
push
push
lea
call
dec
xor
mov
adc
je
sbb
push
adc
ds
adc
add
clc
arpl
call
jmp
inc
xor
lea
inc
repnz
mov
mov
mov
mov
stc
popa
scas
or
xchg
repnz
xor
adc
add
cwde
cmp
jne
(bad)
std
retf
dec
cwde
xor
inc
cwde
es
int
or
jge
std
sbb
lock
add
push
add
adc
ret
outs
rcr
lea
jb
mov
and
inc
adc
loope
mov
in
pop
push
pushf
cmp
loopne
cmp
inc
int3
push
cs
inc
push
pop
dec
in
mov
popf
aaa
pop
add
cwde
jnp
cmp
clc
mov
cwde
popa
fmul
mov
mov
sbb
or
mov
cmps
(bad)
xor
pusha
cs
push
or
inc
inc
lods
adc
mov
sub
push
inc
cdq
adc
in
(bad)
in
retf
clc
es
xchg
icebp
js
or
or
cmp
or
or
push
or
cmp
add
ds
xchg
mov
scas
mov
leave
mov
xlat
or
mov
xor
ficom
mov
add
add
adc
in
mov
pop
push
pop
inc
inc
or
aad
fucom
xor
pop
icebp
ins
add
mov
push
(bad)
fnstenv
pop
inc
(bad)
call
or
jno
mov
jle
add
(bad)
dec
hlt
je
push
push
push
xor
dec
aas
push
inc
mov
lock
cmp
push
push
push
jl
add
mov
pop
inc
loopne
sub
sub
inc
and
les
add
add
add
pop
fmul
lahf
or
test
push
xor
repnz
std
mov
lds
jle
sbb
lods
or
mov
push
lea
sub
sub
pop
aam
cmp
jne
cmp
push
or
imul
sub
pop
add
cli
mov
sbb
scas
mov
adc
neg
(bad)
jo
into
aaa
mov
dec
cmp
xor
out
outs
sbb
xchg
mov
pop
add
or
loope
mov
call
sbb
or
mov
xor
cmp
pop
adc
mov
inc
js
push
push
push
int3
push
push
push
or
push
push
push
push
xor
cmp
je
cmp
push
add
(bad)
je
mov
mov
inc
push
pushf
test
xor
in
bound
mov
movs
or
xor
scas
push
push
or
call
test
xchg
inc
adc
dec
mov
push
mov
push
pop
lea
repz
(bad)
dec
cmp
xor
jge
je
lea
lea
nop
mov
push
dec
clc
jbe
test
cs
mov
adc
arpl
in
sbb
dec
aam
mov
mov
ret
push
xchg
mul
xor
add
or
mov
push
or
enter
or
dec
add
cld
mov
cli
inc
adc
je
push
inc
inc
jo
push
push
mov
ds
pop
sub
push
and
add
jbe
nop
sub
add
call
push
adc
pop
pop
sbb
push
ficom
lea
xchg
jp
jo
jne
xor
or
test
aam
pop
(bad)
adc
pop
lds
mov
test
lahf
jo
xor
and
xor
clc
or
sub
xchg
inc
inc
and
scas
sub
cmp
(bad)
(bad)
jmp
mov
mov
push
push
nop
cmc
push
mov
or
inc
in
add
cmps
mov
or
aaa
out
lock
mov
mov
and
rol
add
mov
enter
and
pop
mov
rcl
xchg
or
lods
add
loop
adc
mov
nop
bound
fisttp
and
jne
jmp
adc
add
or
clc
jmp
mov
mov
ret
xor
push
fild
mov
sub
jecxz
pop
push
in
sbb
mov
or
or
pop
xchg
and
add
xor
in
jbe
cs
push
je
cwde
sub
sbb
jge
jge
add
jno
cmp
jne
mov
jns
xor
clc
push
mov
iret
push
call
mov
cmp
je
mov
jns
fmul
push
ror
dec
ret
xor
cmp
imul
clc
mov
leave
test
test
inc
in
or
rcl
mov
ja
push
jl
pop
cmp
cmp
fst
popa
push
and
outs
pop
mov
cdq
mov
push
push
sbb
sbb
aam
inc
push
mov
lahf
jp
mov
push
adc
mov
cmp
jne
mov
out
sub
ffreep
jecxz
or
inc
push
push
push
mov
mov
dec
jns
mov
sub
cmp
jg
mov
cmp
jle
mov
std
pop
std
ror
addr16
add
shl
push
aaa
xlat
icebp
pop
loopne
addr16
mov
enter
inc
push
or
adc
add
(bad)
jle
mov
jmp
adc
push
pop
add
cmp
mov
jl
mov
or
loopne
mov
fdivr
dec
(bad)
jo
push
das
jno
(bad)
shl
add
or
inc
les
jecxz
pop
mov
nop
vmread
add
inc
ret
mov
mov
xchg
sub
mov
push
outs
test
mov
jl
push
std
fisttp
lea
inc
cld
out
pop
adc
and
add
jne
jae
or
daa
stos
stos
and
pop
adc
aam
mov
shl
(bad)
and
inc
push
push
inc
mov
enter
inc
jo
loop
mov
cmp
jp
jge
mov
sub
push
jle
sub
push
adc
cld
out
lea
movups
mov
iret
sub
mov
js
fidiv
int3
fistp
inc
or
les
scas
lds
rcl
cdq
ret
jmp
or
dec
jne
mov
(bad)
(bad)
call
stc
cmp
jl
lea
push
retf
inc
or
out
mov
adc
xor
push
mov
mov
xor
stc
mov
inc
outs
cmp
outs
inc
add
sub
sub
push
mov
pop
test
pop
je
push
mov
shl
(bad)
sub
sbb
fcmovbe
arpl
sub
arpl
lahf
inc
adc
icebp
inc
and
pop
es
push
(bad)
mov
mov
jle
mov
lea
loope
std
fcomip
or
or
sub
xchg
sbb
sbb
mov
mov
stos
sub
xchg
pop
iret
jo
cwde
cmp
jl
enter
cmc
inc
adc
lods
xchg
nop
adc
jo
sub
jmp
sbb
push
lock
push
mov
cmc
sbb
inc
add
adc
or
adc
push
dec
mov
inc
jg
(bad)
(bad)
adc
je
rcl
cmp
sbb
pop
dec
adc
cmp
jl
lock
fcom
adc
sbb
add
iret
ds
mov
xchg
and
and
push
fadd
and
cdq
inc
pop
and
xchg
nop
inc
js
cmp
add
nop
or
lea
call
aaa
xchg
retf
and
add
loopne
jg
xlat
shl
or
and
ror
adc
not
pop
add
add
loope
xchg
and
add
sbb
cmp
fs
and
test
test
and
ins
adc
shr
add
mov
add
and
loope
add
sar
pop
cmp
ja
dec
mov
inc
add
or
rcr
shl
lea
sar
mov
push
inc
or
fcom
ja
push
inc
mov
ja
nop
xchg
out
pop
iret
gs
das
sub
ins
push
adc
stos
add
mov
into
xchg
or
scas
aas
cwde
mov
movs
popf
retf
xchg
adc
pop
in
jne
(bad)
loop
sbb
dec
test
jle
or
dec
mov
call
jp
push
popf
push
int
inc
nop
xor
ja
icebp
adc
push
call
adc
enter
adc
dec
test
lea
push
jo
(bad)
jl
inc
mov
mov
xor
out
pop
data16
leave
mov
jb
icebp
or
inc
or
aad
and
add
out
add
push
xor
dec
or
inc
adc
or
push
into
rcl
mov
mov
push
ss
push
xchg
and
fcos
(bad)
out
or
adc
mov
je
and
call
add
popa
or
or
outs
mov
(bad)
mov
inc
add
pop
mov
and
pop
mov
mov
mov
cmp
or
inc
or
or
cmp
add
jb
ss
add
cdq
inc
add
je
mov
cmp
jne
jmp
hlt
pop
adc
and
and
xchg
pop
adc
outs
clc
ja
adc
add
or
scas
adc
xor
sbb
and
test
cwde
test
sar
loopne
adc
dec
mov
xchg
fstp
aam
add
test
pop
fstp
pop
call
mov
add
ret
mov
ret
sti
mov
in
nop
add
sbb
jo
(bad)
cmp
cmps
out
or
shr
div
mov
fdivr
dec
not
mov
ror
cmp
cld
jecxz
enter
repz
and
mov
or
pusha
pop
mov
mov
xor
scas
add
dec
cmp
test
je
cmp
je
mov
jmp
mov
sbb
or
fbstp
jge
lea
push
mov
popa
xor
sbb
das
cmp
jne
mov
test
pop
sbb
xor
sti
mov
jg
dec
or
add
push
or
ror
and
mov
fistp
cmp
shl
mov
mov
mov
push
mov
idiv
xchg
jg
dec
push
pop
daa
xchg
out
jg
inc
ret
xor
mov
xor
test
jbe
loope
call
div
inc
add
cmp
jb
mov
test
jne
fidivr
mov
xor
and
inc
cmp
jae
sub
sbb
or
shl
pop
push
jno
ffree
push
fisttp
adc
pop
mov
(bad)
or
add
add
push
lods
or
aas
inc
add
cmp
mov
inc
cmc
and
je
out
out
xchg
leave
xchg
sub
mov
push
jg
inc
xor
cmp
je
push
xor
cli
out
(bad)
fstp
outs
or
push
scas
mov
cmp
je
lea
and
dec
loopne
mov
jmp
inc
cmp
jb
pop
and
mov
out
xor
mov
mov
mov
push
mov
adc
pop
pop
jecxz
in
mov
push
mov
add
push
lea
adc
mov
shl
mov
addr16
adc
xor
pop
fild
lea
les
xor
and
cmp
xchg
ror
imul
movsx
add
mov
inc
jmp
shl
loopne
fimul
adc
nop
test
je
movs
mov
aas
and
sbb
mov
jmp
mov
sub
ds
mov
mov
out
sub
sbb
mov
mov
cwde
jecxz
add
loopne
or
jg
push
push
push
lea
push
push
inc
mov
sbb
cmp
iret
out
inc
cmps
ret
push
add
sbb
daa
jg
adc
lock
lea
(bad)
or
lea
and
in
mov
mov
loopne
jmp
(bad)
icebp
call
ret
mov
or
adc
add
mov
enter
jne
rcl
or
dec
inc
sbb
out
pop
and
(bad)
sub
(bad)
fild
mov
cmp
jl
mov
add
push
dec
push
lahf
outs
jmp
and
push
scas
call
mov
push
or
lds
inc
inc
push
mov
loop
push
arpl
mov
ret
push
jmp
cs
jns
scas
loopne
inc
push
pop
das
fnstcw
sub
pop
sub
push
aaa
xchg
test
arpl
xor
xor
cs
out
add
add
lds
xor
mov
pop
add
push
cmp
jg
mov
call
jmp
mov
pop
mov
adc
mov
sub
ror
in
cli
pop
pop
jmp
lea
pop
sub
jo
xor
xor
lock
or
inc
or
push
ins
aad
cmp
push
jne
push
push
mov
push
(bad)
jmp
cmp
jg
ret
mov
fsubr
int
outs
rol
dec
hlt
cmp
popa
(bad)
or
rcl
std
test
jg
jmp
mov
repz
ja
xor
sub
sub
xchg
loop
clc
add
add
pop
and
push
jge
(bad)
stc
mov
cmp
jle
test
cmp
jbe
push
inc
xor
inc
clc
inc
push
push
fs
xchg
jg
cmp
xchg
push
and
hlt
add
inc
loopne
pop
jno
sub
cs
popf
enter
and
or
add
mov
(bad)
adc
jmp
out
bound
stos
push
bound
std
add
pop
pop
pop
bound
push
scas
push
cli
jno
dec
stos
test
mov
je
mov
shr
dec
or
mov
lds
inc
inc
or
jmp
mov
(bad)
mov
push
int3
hlt
adc
and
pop
jle
and
lea
outs
jb
pop
mov
and
cmp
inc
push
icebp
cli
in
inc
inc
or
push
aam
loopne
mov
pop
dec
loopne
or
inc
icebp
pop
fistp
xchg
push
inc
les
js
mov
and
jg
xchg
cmp
add
push
mov
cmp
je
cmp
jge
pop
push
jecxz
add
jne
add
adc
jle
mov
loopne
adc
sbb
or
and
mov
icebp
leave
add
ret
fmul
dec
hlt
into
lea
pop
push
sti
push
inc
mov
jbe
add
test
add
or
jmp
in
pop
test
fnsetpm(287
data16
clc
arpl
inc
adc
icebp
lea
and
and
pop
jno
sbb
push
push
push
jmp
jo
aas
sub
mov
adc
ss
push
js
scas
cmp
or
clc
popf
test
jno
lea
dec
inc
pop
mov
cmc
pop
inc
fld
add
mov
and
dec
or
cmp
push
cld
popa
adc
cld
jne
or
jne
add
push
xor
mov
push
jae
xchg
or
adc
add
push
out
push
test
int3
dec
arpl
add
pop
hlt
jg
mov
lea
cmp
jg
push
add
popa
cwde
push
sbb
add
ret
out
and
push
movs
adc
push
outs
(bad)
loope
mov
cld
or
ins
lods
mov
push
and
adc
adc
mov
lds
dec
adc
mov
add
idiv
dec
cld
jle
push
mov
cmp
jge
mov
push
outs
pop
jmp
lea
push
lea
add
es
pushf
jmp
cmps
mov
mov
and
or
xchg
push
pop
push
mov
and
pop
in
sub
inc
jp
sti
and
mov
sti
test
sub
and
push
ror
dec
and
nop
or
mov
or
cli
inc
cwde
or
mov
lock
pop
pop
sbb
push
pusha
and
std
jg
inc
adc
add
pop
xor
pop
pop
ret
xor
cmps
pop
sbb
loop
les
mov
sub
inc
pop
scas
mov
(bad)
cmp
mov
mov
mov
test
ret
in
in
sar
add
mov
lea
push
lea
push
aas
push
(bad)
adc
daa
ret
sti
push
lea
gs
(bad)
test
pop
(bad)
jne
mov
or
cmp
sti
ja
xor
sub
or
loopne
aam
dec
push
inc
xchg
movs
ret
pop
sar
js
add
lea
inc
not
ja
pushf
cmp
mov
mov
add
ret
jnp
pop
sbb
aas
adc
or
dec
add
mov
ins
adc
mov
xor
rol
dec
and
inc
xor
pop
mov
sbb
mov
sub
mov
lea
and
(bad)
and
mov
sbb
dec
call
fnstsw
lea
sub
mov
and
fmul
push
pop
add
aas
adc
aaa
push
mov
lock
dec
aaa
jae
in
ja
cs
test
mov
mov
hlt
and
ret
mov
add
out
daa
add
mov
je
and
mov
sub
push
or
call
push
cmp
pop
icebp
xchg
daa
je
adc
xor
sub
fidiv
cmp
call
push
push
add
jne
test
je
rol
add
in
inc
add
sbb
movs
(bad)
inc
or
cmps
inc
(bad)
movs
sub
jge
and
ret
psubd
or
lea
and
pop
and
bound
sbb
pop
push
mov
mov
mov
(bad)
xor
and
sub
je
dec
je
dec
jne
mov
jmp
push
inc
jmp
cmp
add
add
and
(bad)
jg
call
clc
and
clc
xor
or
or
jmp
mov
mov
gs
add
das
add
and
mov
adc
add
dec
add
jmp
push
pop
push
inc
inc
push
push
bnd
call
mov
push
jne
jbe
loop
fild
rcl
dec
adc
mov
mov
xor
sbb
jg
cli
sub
inc
push
rcr
xchg
call
retf
cmc
jo
push
jb
popa
or
scas
scas
pusha
lahf
sahf
jge
lea
dec
inc
ja
cmp
push
jbe
gs
ds
push
cmp
jge
je
out
sbb
dec
or
pop
pop
dec
inc
lods
jae
push
dec
jns
adc
adc
inc
jmp
cmp
jne
fdiv
add
jo
loopne
add
sub
sub
mov
sbb
xor
leave
aaa
(bad)
adc
mov
inc
es
in
bndstx
jecxz
clc
jne
and
lea
and
je
add
int
inc
mov
sbb
add
aam
jl
jne
jae
dec
or
and
add
jg
pop
or
call
ins
inc
and
sbb
push
xor
sub
sub
push
sub
lahf
push
mov
cmp
and
add
jge
sbb
in
dec
adc
and
loope
cmovle
test
mov
jne
scas
cmp
jo
and
or
jp
lods
fcom
push
(bad)
inc
shr
test
push
lea
xchg
call
and
inc
idiv
mov
add
and
add
jne
lea
push
mov
es
xlat
lock
mov
lea
adc
add
or
(bad)
mov
rol
out
sbb
or
mov
fisttp
ror
(bad)
mov
mov
cmp
je
cmp
loopne
outs
sub
das
jne
mov
or
cmp
cld
push
add
or
fidivr
sbb
inc
mov
pop
pop
add
add
test
push
pop
sub
or
jno
jns
jne
sbb
mov
mov
dec
mov
mov
stos
or
je
rol
and
aaa
cld
xchg
or
div
lea
adc
add
jp
push
pop
repz
test
fist
mov
int3
sub
adc
or
js
icebp
jmp
jp
pop
ret
and
loopne
sbb
mov
push
push
das
jle
or
xor
(bad)
pop
mov
xchg
ret
js
and
jecxz
cwde
sub
jle
inc
add
pop
or
push
ins
adc
pop
mov
sbb
add
push
push
(bad)
out
push
clc
jg
test
je
push
leave
or
xchg
xor
movs
(bad)
or
pop
push
pop
jp
pop
and
clc
add
push
cmp
or
pop
cmps
mov
inc
test
mov
adc
xchg
adc
or
pop
scas
add
push
inc
ins
pop
push
mov
jo
or
sbb
mov
cs
in
push
call
cmps
lods
fcmovnbe
cmp
sbb
and
jo
je
addr16
repz
das
or
cwde
gs
loope
out
ins
add
and
popa
add
inc
or
mov
mov
fist
pop
aam
loop
outs
mov
jne
xor
ja
push
ja
or
and
mov
xchg
pusha
sbb
rol
pusha
sbb
mov
sub
(bad)
call
imul
pop
or
inc
mov
sbb
call
mov
cmp
je
jmp
loop
inc
loopne
repnz
in
mov
test
std
pop
or
add
xor
cmp
sub
stos
cmp
out
rol
pop
push
cld
push
sti
movs
clc
jle
and
push
xchg
adc
jne
cmp
jne
push
dec
jae
push
adc
inc
push
or
add
cmp
ja
into
and
sub
cmp
mov
clc
adc
dec
sub
or
cmp
sub
or
mov
frstor
mov
push
push
pop
pop
call
ja
lea
mov
and
and
sbb
es
inc
fadd
popa
inc
dec
xchg
out
add
mov
xor
xchg
push
sbb
mov
cmp
je
mov
push
jg
je
and
inc
out
or
movs
and
test
cld
sbb
(bad)
cmp
mov
out
hlt
mov
mov
and
shr
xchg
shl
mov
push
add
add
jo
pop
ret
adc
pop
aaa
out
and
or
ins
sub
push
sbb
inc
and
movzx
mov
mov
cld
xchg
cmp
call
pop
or
and
push
popf
push
mov
mov
mov
dec
push
pop
or
addr16
push
(bad)
and
inc
out
mov
dec
push
add
jecxz
enter
jle
push
jg
and
add
popf
push
ret
mov
sbb
mov
jne
mov
mov
xchg
(bad)
push
cmp
xor
pop
or
push
or
jbe
pop
add
adc
adc
jo
add
loop
cmp
inc
push
sub
jmp
push
or
cmc
mov
inc
out
(bad)
cmp
xlat
pusha
inc
clc
mov
je
gs
dec
adc
sahf
add
push
add
imul
push
mov
inc
call
pop
pop
xor
dec
das
sar
je
les
lock
into
pop
pop
fs
je
push
pop
std
paddsb
cmp
je
push
mov
gs
jmp
mov
pop
push
in
inc
mov
xchg
cdq
(bad)
mov
lea
push
dec
add
inc
test
out
out
sbb
or
push
or
iret
and
xor
inc
sub
pop
cmps
mov
inc
dec
arpl
clc
or
push
je
or
inc
jae
inc
xor
or
fucom
fdiv
mov
nop
pop
push
mov
shl
cmp
imul
and
leave
mov
je
loope
inc
sub
push
dec
test
je
mov
push
push
push
call
jmp
mov
push
mov
push
call
cli
cld
adc
jbe
pop
mov
sbb
test
je
adc
mov
inc
(bad)
sar
data16
ret
mov
xchg
or
cmp
push
(bad)
fist
cmp
mov
adc
push
push
mov
iret
dec
and
int
push
mov
add
jle
arpl
adc
pop
pop
leave
ret
ret
inc
ins
mov
jne
fdiv
or
or
pusha
pop
shl
adc
fmul
jp
ret
mov
dec
push
cwde
xchg
inc
or
push
jle
pop
leave
mov
and
data16
mov
and
test
clc
in
ja
push
xor
cmp
dec
jg
ja
mov
je
in
mov
out
ja
(bad)
jg
jmp
push
test
pop
je
sub
aad
add
push
jne
mov
mov
mov
jmp
or
pop
cld
fwait
or
test
cmp
test
jne
xor
xor
mov
cwde
add
pop
cmp
inc
add
inc
cmp
or
mov
add
add
cmp
or
pop
into
push
movs
call
data16
xor
add
or
push
jp
and
inc
push
xor
ss
sbb
push
mov
ffreep
push
sti
nop
enter
pop
add
or
xor
adc
icebp
or
scas
mov
ss
push
mov
cmp
xchg
add
xor
aaa
das
or
cmp
(bad)
mov
bound
xor
ins
or
jp
(bad)
mov
mov
mov
or
xor
imul
and
xchg
push
mov
and
push
retf
pop
jle
sbb
mov
push
lea
sbb
add
ds
sbb
mov
loop
call
call
not
and
or
mov
call
sub
sti
fwait
clc
jne
push
inc
sbb
shl
push
push
add
ffree
in
call
ret
push
and
(bad)
sbb
je
or
or
pop
sbb
or
(bad)
cwde
sbb
jecxz
aad
or
aam
(bad)
outs
xor
aaa
mov
fld
jae
cld
inc
adc
push
jne
jo
ja
fiadd
out
push
jne
push
sbb
adc
cmp
mov
cmp
jne
mov
cmp
jne
push
pop
call
jb
scas
mov
(bad)
aas
and
pop
sub
xchg
jecxz
pop
test
and
shr
cdq
jne
dec
add
inc
jne
xlat
push
cwde
mov
mov
inc
cwde
cmp
inc
inc
sbb
dec
sahf
test
add
push
mov
pop
clc
inc
inc
add
outs
icebp
or
enter
test
(bad)
(bad)
frstor
jge
(bad)
push
jne
cmp
je
or
pop
fst
or
jne
mov
clc
mov
ds
fs
imul
pop
sub
adc
sbb
cmp
je
popf
data16
loopne
pusha
js
rcl
pop
pop
adc
pop
cmp
iret
jg
sub
sbb
push
pop
mov
pop
std
lea
lea
xchg
mov
mov
rep
mov
dec
cmp
inc
mov
or
jae
mov
jne
mov
clc
pop
ins
add
ror
cmp
pop
push
lea
fcom
test
mov
jne
mov
mov
inc
push
call
sbb
nop
jne
or
jmp
dec
or
sar
outs
push
mov
mov
add
push
mov
ins
jae
and
jmp
push
mov
or
daa
mov
dec
sub
push
dec
push
mov
pop
lea
mov
out
mov
sbb
push
in
aaa
jmp
adc
inc
out
ud0
mov
mov
dec
mov
lea
loop
sub
mov
mov
test
icebp
outs
adc
push
call
mov
xchg
cmp
push
adc
jae
inc
sbb
push
sbb
push
sub
push
mov
dec
lahf
push
mov
jge
cmp
pop
mov
push
shl
divps
jge
mov
push
xchg
data16
mov
jmp
aas
pusha
mov
repnz
push
xchg
sbb
je
(bad)
and
clc
push
mov
lea
sbb
add
(bad)
push
mov
cmps
or
dec
test
into
cmp
jle
xor
enter
pop
mov
daa
and
cmp
xchg
outs
cld
cmp
xor
inc
aad
retf
sub
cmp
push
sbb
outs
jne
int3
icebp
pop
adc
or
add
adc
adc
ja
push
call
add
mov
outs
sub
push
jge
mov
jecxz
dec
add
mov
or
or
shl
fcom
push
jmp
sub
pop
je
xor
and
je
sub
test
sbb
push
lea
cmc
or
call
push
adc
jbe
push
in
and
add
or
mov
arpl
add
jne
push
jge
in
out
inc
xchg
pusha
aaa
push
ds
call
dec
adc
add
pop
pop
mov
mov
aaa
push
repnz
pop
fwait
and
invlpg
int3
push
cwde
or
and
das
ret
int3
push
adc
cmp
test
je
and
rcl
cdq
iret
dec
cmp
inc
or
cmp
mov
mov
jo
adc
loopne
retf
mov
inc
mov
pushf
fsub
mov
enter
mov
cld
inc
shl
lock
inc
cmp
xor
call
aad
mov
cmp
rcl
(bad)
call
or
push
push
lea
loope
aam
dec
pop
fwait
sub
mov
jmp
mov
add
mov
adc
adc
jge
add
pop
addr16
rol
xchg
jo
call
fist
sub
push
mov
bound
cld
mov
adc
pop
or
rcl
test
jne
jbe
test
dec
cmp
mov
out
je
push
test
sub
add
test
inc
sub
test
jne
and
lea
push
push
pushw
mov
dec
in
dec
pop
adc
xchg
push
ins
add
push
test
stos
inc
add
cmp
pop
xchg
mov
(bad)
jmp
push
xor
popa
cmp
jne
mov
jmp
jg
add
add
push
gs
loopne
test
mov
je
test
mov
push
push
cli
cmp
out
sbb
mov
sub
push
sub
push
and
fmul
and
adc
pop
inc
dec
test
je
add
adc
and
jmp
sbb
data16
cmp
fdivr
push
or
and
xlat
cmp
sub
ja
mov
cmp
mov
jne
mov
ret
pop
jg
stos
push
push
push
fisttp
clc
je
adc
data16
push
cdq
bound
ja
and
adc
sub
and
cmp
test
(bad)
adc
jno
jno
inc
sub
pop
cld
sub
scas
fwait
dec
or
test
es
jg
and
pop
or
xor
js
ror
add
sub
inc
push
je
fs
clc
hlt
lock
xor
call
inc
fwait
loopne
icebp
jg
cmp
mov
mov
mov
(bad)
mov
inc
or
aam
inc
xor
data16
and
pop
jle
pop
xor
mov
jmp
cdq
or
sar
jne
or
cs
adc
loopne
inc
idiv
hlt
push
push
call
inc
add
inc
ja
push
in
setne
ret
add
pop
cmp
jle
add
sub
mov
shl
push
fmulp
push
test
push
cld
pusha
push
adc
xchg
mov
js
shr
sub
push
push
add
fadd
push
or
pop
sub
shl
pop
inc
sub
xchg
mov
aam
jno
jp
xlat
and
cmps
inc
je
cmp
(bad)
pop
je
or
inc
(bad)
sbb
add
add
or
jo
jne
and
push
daa
sub
loopne
dec
cmp
popf
or
cmp
add
mov
push
cmp
clc
xor
cmp
je
mul
xor
ja
jne
sbb
pop
adc
sbb
cmp
jne
dec
adc
js
or
icebp
(bad)
(bad)
out
xrelease
cmp
jne
mov
mov
cmp
je
fdivr
out
or
xor
test
pop
je
mov
push
scas
aaa
sar
je
inc
mov
test
je
mov
jg
add
sub
inc
aam
mov
inc
xlat
adc
and
push
(bad)
jmp
mov
add
add
jp
cmp
mov
fwait
sbb
xlat
mov
int3
clc
fstp
xchg
cmp
push
cmp
jne
inc
cmps
pop
adc
lds
mov
les
add
(bad)
jmp
push
imul
je
jmp
jmp
push
push
mov
movs
push
add
jmp
adc
cmp
int
xchg
mov
mov
push
loope
adc
ret
push
test
mov
jne
xor
sub
addr16
pop
jo
add
inc
test
xchg
inc
xor
add
jmp
ror
sbb
pop
call
or
(bad)
lds
mov
adc
add
or
push
add
pop
mov
inc
adc
jl
mov
add
test
pop
inc
in
or
call
jg
test
jl
mov
push
iret
out
sbb
xchg
or
fxam
pushf
push
sbb
jae
or
cld
dec
dec
mov
rol
(bad)
push
cmp
jb
mov
or
or
jge
push
lds
push
mov
sahf
cli
mov
jne
or
mov
shl
pusha
pop
cs
sub
dec
add
jmp
in
xor
(bad)
js
and
cmp
and
mov
lock
mov
cmp
jne
push
jbe
cdq
jp
fdiv
push
or
adc
mov
push
jle
mov
xchg
popa
inc
shl
and
out
mov
jmp
or
inc
or
loope
cdq
jmp
or
add
jecxz
add
ret
xlat
ror
adc
icebp
rcr
xchg
(bad)
sti
test
mov
and
push
retf
rcr
fdiv
inc
cdq
mov
adc
mov
inc
xchg
mov
(bad)
outs
into
and
cmp
je
inc
cmp
jl
test
out
adc
inc
jmp
adc
dec
loopne
sbb
cmp
jne
push
jmp
mov
gs
cld
fmul
sub
jo
sar
adc
pop
mov
push
push
pushf
sbb
xchg
or
inc
mov
sbb
add
and
dec
mov
sbb
dec
out
or
inc
enter
sbb
and
jbe
call
adc
mov
mov
xor
fnclex
sbb
ror
mov
(bad)
(bad)
mov
jbe
mov
lea
push
call
lea
mov
push
push
add
adc
mov
jmp
jo
mov
pusha
fwait
sbb
add
xor
cmc
push
shl
mov
xor
scas
lock
or
pop
jge
or
js
adc
cmp
jne
cmp
jne
or
mov
add
dec
add
adc
mov
push
leave
add
movs
sub
inc
dec
mov
sbb
mov
xor
sbb
mov
adc
mov
xor
lock
xchg
push
inc
ins
sbb
nop
push
sbb
or
dec
jo
xchg
dec
rcl
sar
out
mov
mov
cmp
out
push
push
cmp
sbb
jo
and
stos
pop
sbb
addr16
inc
add
inc
jmp
ror
sub
pop
cld
dec
in
rol
and
div
pop
jg
push
push
sbb
xlat
push
push
or
and
jp
cwde
push
mov
and
stos
adc
add
ret
je
aaa
inc
pop
outs
clc
push
call
mov
or
sbb
adc
rcr
clc
scas
popa
push
push
sahf
popf
ret
jae
gs
aad
add
adc
stc
or
mov
fdiv
sbb
mov
and
cmp
(bad)
(bad)
inc
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xlat
mov
push
cwde
xor
mov
sub
mov
out
dec
mov
xor
push
adc
push
xchg
es
pcmpeqd
imul
repnz
mov
daa
out
sbb
push
cmp
sbb
sub
push
mov
dec
push
mov
sub
sti
dec
jne
je
std
pop
mov
mov
lea
push
jl
iret
call
add
test
sub
dec
outs
or
push
jne
or
int3
(bad)
dec
sub
mov
shr
push
movsx
rcl
or
arpl
hlt
mov
dec
or
fs
and
fild
enter
fstp
xor
lea
cmp
lea
(bad)
inc
push
mov
jne
cmp
jne
mov
push
mov
mov
mov
cs
cmp
dec
in
sbb
call
or
push
mov
push
mov
push
xchg
add
jo
jmp
arpl
es
adc
jmp
mov
sbb
push
je
jmp
or
dec
adc
je
rcr
dec
xor
push
div
sub
adc
xor
arpl
pop
int3
mov
cmc
hlt
jmp
push
mov
and
mov
cmp
mov
jne
(bad)
(bad)
mov
cmp
sbb
and
add
dec
cmp
psraw
icebp
xchg
add
mov
mov
fstp
out
xor
in
imul
pop
cmp
push
jb
or
dec
mov
jg
xchg
dec
mov
aaa
mov
stos
jbe
mov
mov
adc
cmps
pop
mov
jle
push
push
fisttp
int3
xchg
push
add
pop
jo
inc
mov
outs
enter
gs
and
test
popf
ss
inc
pop
sub
loope
les
sub
sbb
inc
fnsave
xlat
cmp
cld
dec
sub
push
cmps
or
jmp
push
pop
(bad)
fld
movzx
push
dec
mov
ror
dec
idiv
jbe
inc
das
and
fcomp
push
dec
or
and
inc
sub
mov
push
sahf
ret
mov
or
push
in
ret
sbb
mov
xchg
shr
sbb
jl
xchg
or
cmps
pop
xchg
aas
adc
sbb
aaa
popf
ins
jmp
fs
adc
out
adc
mov
js
sub
int3
jmp
test
cdq
jnp
ror
cmp
movups
stos
sub
or
int
in
cmp
mov
(bad)
or
pop
and
int
dec
push
push
jmp
push
cld
cmp
out
xor
adc
jno
add
or
dec
lds
pusha
xlat
sbb
sub
(bad)
loope
(bad)
stos
ins
jmp
sub
into
lock
addr16
ds
call
ret
push
pop
(bad)
dec
int3
loop
(bad)
ja
mov
adc
add
or
je
addr16
cs
(bad)
push
pop
dec
add
push
jl
pop
dec
add
dec
adc
push
out
fwait
scas
jmp
fs
add
jns
dec
add
mov
add
mov
iret
add
dec
xlat
xor
daa
adc
sub
xlat
or
cdq
pop
lds
sti
sahf
jmp
pop
xchg
xchg
add
dec
adc
fistp
cwde
add
test
xlat
mov
pop
mov
lds
mov
dec
mov
dec
mov
mov
add
dec
fadd
dec
add
push
clc
in
icebp
inc
cmp
add
dec
jne
cmp
je
(bad)
call
mov
and
push
push
push
or
call
cmp
je
retf
jge
sbb
push
cld
or
pop
ja
loop
pop
xchg
mov
mov
add
or
sbb
je
int
sti
jne
xor
jmp
std
push
adc
or
jne
mov
push
cmovl
jb
adc
dec
sbb
arpl
inc
or
push
inc
(bad)
dec
in
inc
sbb
push
and
add
add
mov
in
jmp
dec
leave
add
dec
add
mov
push
push
mov
mov
lods
mov
cmps
xor
pop
je
dec
push
scas
cmp
push
or
sub
fiadd
jmp
iret
ret
test
mov
dec
adc
scas
mov
ror
daa
mov
and
inc
cwde
mov
inc
ffree
and
or
(bad)
and
pop
push
mov
add
push
mov
sbb
push
add
popf
add
dec
mov
mov
rol
into
popf
jne
inc
ror
in
mov
push
mov
mov
jmp
cmp
mov
loop
aas
inc
adc
or
adc
pop
in
pop
adc
adc
es
push
xchg
leave
jae
inc
ins
js
xchg
mov
xor
push
and
adc
ds
mov
sbb
jne
push
xor
lahf
call
cmp
xor
nop
xor
inc
or
js
push
fwait
or
adc
fisubr
push
push
ja
jo
push
jge
jo
mov
add
xor
jge
add
push
mov
leave
(bad)
call
dec
push
lods
jle
leave
add
add
mov
mov
call
lods
test
arpl
add
loopne
ret
xor
cmp
lods
sub
and
loope
data16
adc
ja
fsubr
call
mov
push
sbb
into
mov
pop
pop
jo
jge
call
popw
cwde
mov
and
call
xor
jl
or
jne
and
push
push
mov
data16
adc
sub
das
cmp
jnp
call
xchg
adc
je
xor
mov
jmp
sub
add
cwde
call
and
inc
jmp
xor
das
mov
or
out
sbb
jge
lea
pop
inc
arpl
fadd
jne
push
lods
push
clc
lds
inc
mov
inc
push
jbe
(bad)
mov
dec
xor
dec
mov
loopne
sbb
mov
push
push
dec
sti
jne
jge
mov
push
ins
or
cwde
cli
leave
sub
and
mov
add
cmp
les
mov
jne
lea
push
ins
sbb
(bad)
pop
jb
cmp
xor
ret
add
adc
add
into
call
enter
adc
or
ja
je
cmp
ud0
cmp
jbe
cmp
je
cmp
jne
xchg
jmp
jge
mov
cmps
std
push
or
test
movzx
or
sbb
mov
pusha
aaa
xor
sbb
sbb
mov
push
push
(bad)
out
xchg
push
cmp
pop
je
mov
jmp
cmp
jp
and
adc
adc
jne
test
add
les
fdivr
dec
jae
cmp
sub
fistp
jge
lea
not
push
push
mov
push
retf
cmp
pop
inc
sbb
add
add
loopne
or
or
jne
push
ret
add
or
call
add
mov
inc
rol
jl
jne
stos
inc
lock
xor
iret
stos
daa
loopne
cmc
imul
imul
sbb
push
fnstenv
or
std
lds
sbb
ret
and
ret
inc
add
pop
add
rcl
cdq
ds
dec
push
stos
aad
adc
sub
ins
mov
pop
bound
push
pop
jae
ss
cmp
test
push
mov
and
test
pop
cmp
out
xor
sub
adc
repz
push
(bad)
fisttp
sub
(bad)
lahf
push
push
sub
mov
xor
adc
test
call
mov
xlat
test
jl
sahf
std
mov
push
adc
push
adc
and
adc
pop
adc
pop
adc
jae
and
cmp
jne
xchg
or
push
movs
daa
dec
cmp
lea
test
cmp
fimul
loopne
add
cdq
or
mov
push
shr
push
add
cmp
or
push
push
lea
jmp
scas
ja
push
call
push
jmp
fdiv
and
call
xchg
jo
inc
js
imul
fldcw
into
sub
sub
add
cmps
mov
dec
push
repnz
jo
std
and
std
cmp
or
xchg
je
add
out
jbe
shr
cmp
je
cli
je
jle
lds
je
push
cmp
je
jo
call
outs
jp
mov
or
adc
mov
clc
jno
adc
mov
sbb
and
loopne
sub
dec
sbb
and
add
mov
mov
xchg
pop
pop
mov
clc
xchg
add
jne
mov
mov
fisttp
call
mov
pop
loopne
(bad)
aaa
adc
lods
in
jmp
mov
in
or
daa
(bad)
icebp
add
push
mov
daa
adc
es
ins
push
nop
or
hlt
mov
dec
rcl
pop
add
mov
mov
pop
das
dec
and
cmp
fcom
pop
imul
out
movs
mov
js
jmp
test
xor
inc
mov
jmp
jg
mov
test
je
push
out
test
add
jb
and
jo
rcr
cdq
or
inc
jne
lock
inc
enter
je
(bad)
je
xor
test
mov
test
push
lea
push
push
jle
inc
in
pop
push
xchg
xchg
push
xchg
mov
sbb
lea
push
enter
sub
push
push
mov
mov
cmp
and
cmp
sub
inc
shl
lea
(bad)
push
sbb
push
push
push
stos
sar
call
mov
mov
add
sub
mov
cdq
sub
sub
mov
mov
idiv
mov
aam
stc
sar
sub
mov
add
adc
mov
push
(bad)
(bad)
jmp
(bad)
adc
cmp
jge
mov
jmp
mov
add
cmp
jle
sub
add
(bad)
out
inc
mov
cmp
sbb
jmp
add
cmp
jle
mov
sub
add
jno
es
push
push
push
push
popa
clc
lds
loope
mov
(bad)
cmp
mov
je
mov
test
or
jge
loope
adc
ret
je
push
fst
xchg
or
cmp
mov
hlt
xor
fprem
push
les
test
in
mov
loop
lods
mov
test
(bad)
test
sar
mov
push
test
je
mov
mov
inc
inc
mov
mov
jmp
xor
mov
je
cmp
jne
mov
cmp
(bad)
sbb
push
pop
sbb
(bad)
fdivr
or
mov
loopne
cmc
call
sub
cmp
je
cmp
jne
stos
push
push
jp
cmps
mov
push
call
jg
sub
test
add
fadd
inc
or
adc
push
add
fdiv
cld
pop
in
push
and
mov
add
pop
cmp
inc
inc
cld
xchg
jb
cmp
xor
push
sub
icebp
(bad)
call
push
inc
and
add
mov
mov
mov
je
out
or
sahf
pop
adc
adc
ficomp
dec
es
and
lds
mov
lds
sahf
sbb
call
call
jge
xor
gs
inc
shl
imul
dec
jae
add
push
sbb
sbb
push
jne
pusha
push
push
dec
adc
and
add
inc
push
push
push
lock
movs
jbe
mov
cmp
jmp
(bad)
inc
je
cld
pop
gs
adc
inc
add
mov
add
div
or
sbb
jmp
popf
inc
push
inc
jecxz
jmp
push
push
pop
bound
fadd
sub
jmp
enter
and
mov
or
add
pop
mov
and
sub
jg
add
inc
sub
test
je
and
mov
les
jmp
sbb
cmc
push
bsf
movzx
or
(bad)
adc
inc
or
cmp
mov
jne
push
add
xlat
or
inc
ins
jb
xchg
push
adc
push
cli
add
push
xchg
or
push
lock
inc
shl
push
push
idiv
adc
jmp
sbb
add
and
adc
shl
jne
call
jmp
ss
jle
mov
adc
sti
pop
xor
sbb
into
sar
call
shr
inc
dec
and
paddsb
xor
sbb
shl
inc
or
cmp
and
int3
push
popa
mov
test
pop
push
inc
shl
or
inc
or
dec
fsub
inc
in
pop
hlt
je
lea
mov
xchg
push
mov
jge
fnsave
add
and
dec
int3
mov
stc
in
adc
and
into
and
out
mov
mov
pop
js
inc
inc
pusha
mov
add
and
jp
icebp
mov
push
pop
int3
mov
(bad)
loop
xor
call
add
pop
or
add
fucomp
pop
mov
push
popa
sub
popa
sub
out
rol
fisttp
repz
adc
push
(bad)
fdivr
inc
and
or
shl
je
out
leave
mov
inc
pop
adc
xor
cmp
sbb
mov
pop
cmp
push
test
je
int
mov
inc
sbb
jmp
inc
clc
jp
xlat
jne
sbb
push
test
adc
cmp
cmp
loopne
test
xor
js
sbb
and
test
es
inc
sbb
mov
or
sbb
sbb
es
fcomp
ret
dec
cwde
pop
cwde
dec
or
ret
sbb
call
mov
mov
mov
mov
and
cmp
jne
or
or
mov
shufps
or
sub
lock
and
faddp
div
add
add
ret
xor
ret
fisubr
or
adc
das
add
push
push
jo
lock
xor
cmp
aas
cmp
jne
mov
inc
bound
fdiv
lods
mov
dec
ror
pop
and
loop
inc
push
cmp
pop
pop
ret
addr16
and
adc
imul
push
lods
aad
or
dec
xor
movs
fnstsw
dec
push
push
ret
mov
mov
ret
mov
ret
mov
or
and
icebp
mov
or
int3
jmp
mov
add
jo
sub
or
add
test
ins
retf
push
jmp
icebp
test
ret
jl
push
jmp
rcr
push
adc
xor
xlat
rcr
add
inc
and
daa
jne
pop
push
pop
cmps
mov
adc
or
(bad)
and
xchg
jae
mov
mov
push
call
ja
out
and
or
mov
xor
mov
push
xlat
daa
ret
mov
bound
in
je
shl
sbb
jno
lods
mov
xchg
cmp
adc
add
js
dec
xor
cdq
xchg
sub
test
or
jmp
imul
xor
into
es
push
jno
fsubr
clc
xchg
or
mov
cs
int3
add
mov
(bad)
sbb
in
mov
jle
sbb
xor
or
mov
push
inc
addr16
mov
xor
and
sub
mov
fstp
sbb
dec
sbb
sbb
push
sub
cmps
pop
ret
xor
and
lock
mov
inc
xor
and
es
xchg
int
inc
xchg
mov
pusha
xor
sub
aad
mov
fadd
cmp
add
xlat
xchg
adc
call
mov
shl
adc
loope
inc
fisubr
int
pushf
test
je
cmps
bound
jne
and
adc
mov
not
cmp
or
adc
leave
call
pop
jle
pop
xor
pop
(bad)
shl
dec
out
jno
push
mov
test
je
cmp
jne
(bad)
add
popa
cmp
mov
mov
dec
mov
pop
jno
aam
and
into
push
dec
xor
pop
lea
push
push
cld
into
adc
push
lea
into
and
int3
xor
in
cmc
adc
daa
rol
and
(bad)
sub
and
lea
in
aas
push
lea
or
xchg
in
mov
push
stc
adc
pop
popf
lea
pop
xchg
test
imul
sbb
sar
add
retf
(bad)
cmp
je
call
ss
clc
push
adc
jmp
adc
cmp
mov
cmp
(bad)
(bad)
(bad)
jg
cmp
jne
and
jmp
push
call
je
mov
lea
jg
jmp
mov
push
mov
lea
adc
adc
or
mov
out
add
push
and
inc
aas
xor
mov
dec
xchg
mov
sar
adc
aam
call
pushf
pop
pop
out
repz
jo
pop
push
xchg
or
xchg
call
add
adc
std
pop
jge
push
and
add
pop
mov
cld
push
dec
je
sub
je
push
xor
push
cmp
clc
aaa
popa
jne
cmp
jne
inc
inc
add
or
ss
jecxz
sti
push
dec
mov
push
push
push
call
adc
mov
pop
pop
jmp
cmps
push
jae
mov
ficom
mov
imul
xor
mov
mov
cmp
lahf
(bad)
or
lea
push
adc
mov
jne
jmp
cmp
jl
adc
xor
push
pop
pop
setl
push
xor
ds
cdq
add
sbb
sbb
mov
mov
add
add
push
call
mov
jo
push
push
aad
aam
xchg
pop
fst
cmc
pop
idiv
(bad)
je
or
dec
div
push
std
adc
jg
xchg
push
push
(bad)
aas
push
mov
dec
call
push
dec
sub
and
bound
inc
pop
cdq
ss
pop
popa
out
bound
push
pop
xor
mov
mov
add
push
or
push
add
lds
mov
ret
mov
sub
rol
add
add
or
push
sbb
dec
hlt
mov
fwait
(bad)
fbld
mov
push
push
push
test
pop
je
xor
push
and
or
inc
sbb
clc
sub
je
dec
dec
mov
or
je
sub
je
pushf
dec
jne
(bad)
popf
mov
xor
add
push
adc
adc
cmp
jne
jmp
cmovge
jnp
jg
sub
push
jl
adc
addr16
je
bound
out
rol
adc
lods
sbb
mov
mov
cmp
add
fistp
push
xor
sete
cmps
in
sbb
pop
pop
jmp
mov
inc
cmc
adc
ret
add
retf
cmp
mov
jne
data16
add
mov
or
push
call
loop
dec
adc
ins
test
jnp
(bad)
fist
mov
mov
mov
call
dec
jmp
jge
add
mov
mov
or
inc
adc
jbe
xor
sbb
and
sub
push
sub
mov
or
inc
(bad)
jg
loopne
mov
add
jmp
mov
jmp
test
push
cmp
or
push
fmul
mov
shr
mov
jne
mov
rcr
bound
sbb
jmp
push
in
pop
pop
dec
mov
(bad)
jo
or
add
adc
out
imul
sbb
or
mov
ins
and
in
inc
fisttp
jb
mov
enter
pusha
add
add
call
pushf
adc
pop
mov
jno
cmp
sbb
sub
test
add
add
jle
add
or
or
mov
addr16
mov
aam
sbb
out
sub
jge
pop
jl
pop
std
pop
stos
(bad)
std
add
or
push
push
outs
sub
loop
mov
push
and
dec
jmp
sbb
xor
call
xlat
(bad)
cmp
mov
or
dec
sbb
cmp
sahf
and
data16
fistp
cs
pop
mov
add
(bad)
add
or
or
lods
das
mov
mov
and
sar
cmp
sbb
xlat
test
je
sbb
icebp
jmp
pop
mov
pop
pop
popa
push
mov
xor
xor
cmp
or
mov
dec
add
jle
je
cmp
jne
cmp
jle
or
mov
xor
inc
inc
push
xor
xchg
icebp
sbb
cmp
loopne
mov
mov
push
mov
adc
movs
sub
and
or
push
frstor
pop
je
pop
sub
aad
fneni(8087
stos
push
cwde
dec
lods
or
or
or
dec
in
cmp
or
mov
jl
dec
add
call
or
dec
bound
fadd
add
out
mov
push
mov
mov
repz
cmp
sub
xor
push
cs
push
mov
sbb
(bad)
sbb
sub
outs
xor
jnp
clc
aaa
xor
cmps
adc
adc
push
pusha
mov
add
(bad)
cmp
jne
sbb
push
je
mov
cmp
push
repz
mov
ja
push
dec
adc
dec
push
dec
shr
sahf
xor
mov
retf
jg
(bad)
jo
cmp
je
cmp
(bad)
aas
inc
cmp
shr
mov
mov
cmp
jne
cmp
cld
mov
add
out
jo
mov
mov
dec
mov
jg
adc
sub
push
push
xor
push
cmp
or
adc
pop
mov
mov
cmp
mov
and
cmp
je
fcom
and
sbb
push
pop
push
push
out
pop
fisubr
std
cmp
push
push
push
or
mov
adc
es
cmps
int3
dec
add
mov
std
jo
cmp
je
je
cmp
je
cmp
gs
pop
xor
mov
pop
adc
xor
sbb
push
mov
nop
push
or
add
pop
adc
push
lods
mov
inc
cmp
jle
imul
std
or
pusha
out
push
jmp
adc
sub
mov
jnp
xor
not
jmp
cs
cmp
mov
call
icebp
mov
cmp
je
mov
mov
jg
inc
add
(bad)
jae
push
push
push
mov
lds
mov
cmp
jne
jmp
mov
(bad)
jle
je
or
cmp
je
push
xor
push
cld
rcr
in
jae
adc
jae
call
xor
pop
pop
pop
jp
inc
ret
xchg
cmp
jne
pop
jb
or
(bad)
fidiv
ret
add
push
sti
or
cld
add
sub
(bad)
xchg
pop
nop
outs
pop
loop
loopne
pop
shr
xlat
pop
add
cmp
jne
sbb
call
popa
fmul
or
cmp
dec
push
mov
jne
test
jge
add
in
pop
adc
sub
xchg
add
xchg
push
call
jmp
push
mov
out
adc
push
push
test
add
cmp
aaa
cmp
jne
mov
shr
test
jne
mov
add
cli
pop
push
dec
and
ins
repnz
push
jmp
dec
(bad)
mov
in
or
dec
cs
scas
loopne
je
sub
je
js
ret
or
inc
push
aaa
inc
xor
cmp
inc
pop
stos
scas
or
dec
aas
loope
jl
(bad)
rol
cmp
je
gs
cld
cmp
cmps
or
sbb
xor
jne
jbe
aam
mov
sbb
adc
fdiv
(bad)
cmp
mov
jae
push
sbb
(bad)
inc
sti
adc
ja
jmp
cmp
jne
mov
cmp
je
mov
xor
inc
jle
push
mov
cmp
push
lea
add
mov
push
add
rep
mov
mov
jp
dec
(bad)
dec
sbb
loopne
inc
push
inc
ficom
or
mov
sub
push
dec
in
mov
leave
movs
mov
jne
mov
xor
or
leave
jmp
rcl
jle
push
push
mov
push
call
cmp
je
call
jge
cmp
es
pop
push
push
ret
call
add
jne
in
jno
call
pop
inc
sbb
gs
mov
sbb
mov
jne
jp
and
aad
mov
adc
push
and
sbb
jne
pop
push
pushf
jne
or
xchg
sbb
gs
xor
add
loopne
add
rol
xchg
sbb
pop
ja
inc
ja
pusha
cmps
mov
popa
mov
inc
fnstcw
fwait
clc
icebp
test
mov
sbb
iret
mov
call
jo
inc
adc
dec
or
into
adc
aaa
push
cmp
jecxz
or
add
ror
mov
(bad)
push
push
sbb
mov
and
or
adc
clc
lds
and
sub
add
add
lods
fidivr
and
push
push
push
mov
in
(bad)
pop
rcl
leave
lea
jo
inc
lds
cmp
add
push
pop
jmp
ins
aam
inc
stc
and
lock
lock
pop
ss
sub
or
adc
hlt
cmp
xchg
add
paddb
(bad)
jg
cmp
ja
je
cmp
ja
test
mov
loopne
aas
adc
dec
js
add
mov
rol
cmp
cmp
ja
je
cs
out
and
aaa
adc
je
dec
dec
mov
test
mov
or
jle
or
jp
call
dec
je
jg
scas
and
lods
test
push
jmp
add
cmp
ja
sub
mov
(bad)
(bad)
jg
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
je
out
jp
pop
dec
je
push
push
jns
sub
je
push
mov
mov
dec
je
pop
mov
sub
jmp
mov
push
je
jmp
clc
jne
in
call
xchg
dec
je
dec
adc
mov
push
jmp
push
jmp
sub
xor
idiv
test
test
out
popf
sti
pop
inc
sub
je
dec
mov
fnsave
cmp
xchg
or
call
pop
sub
pextrw
outs
neg
test
or
je
imul
(bad)
push
(bad)
sbb
pop
or
je
imul
mov
je
dec
dec
jne
sub
sub
es
pop
push
sbb
mov
pop
push
daa
rcl
mov
(bad)
iret
xor
xlat
shl
mov
sbb
paddsb
or
sbb
mov
jb
pop
das
sbb
fidiv
out
add
add
mov
and
pop
push
loopne
mov
adc
mov
repz
ror
je
sbb
push
test
rcl
add
mov
inc
mov
in
or
push
adc
inc
or
gs
mov
mov
call
or
dec
hlt
pop
pop
leave
ret
mov
call
mov
cld
mov
push
push
(bad)
iret
xor
enter
cs
sbb
aad
push
gs
add
icebp
stos
dec
call
push
mov
sbb
sbb
push
fmul
sti
addr16
mov
sub
dec
clc
add
mov
lods
fnstsw
das
test
(bad)
clc
dec
lahf
shr
push
mov
sbb
movs
(bad)
push
hlt
(bad)
push
lea
and
push
outs
repz
cmp
ret
jle
and
cmp
pop
pop
pop
sub
add
xor
adc
adc
call
adc
nop
cmp
push
stc
movs
add
push
out
sbb
push
inc
ret
mov
aam
fcomip
jg
cli
fdiv
test
test
pop
dec
cmp
mov
sbb
not
jne
or
cmp
mov
push
mov
push
add
push
call
lock
hlt
out
mov
push
jge
mov
pop
pop
sti
fidivr
std
pop
cs
and
add
or
mov
xor
jmp
xsha1
cmps
dec
(bad)
cmp
mov
push
add
adc
je
push
sub
rcr
pop
push
loopne
add
inc
or
and
pop
clc
dec
cmp
pop
pop
and
jp
setne
jns
and
daa
push
push
lea
add
aas
push
call
jle
push
jge
fs
push
mov
mov
add
push
or
lods
sbb
(bad)
lock
or
cmp
inc
test
ja
mov
push
cmp
mov
mov
hlt
mov
mov
test
xchg
mov
jne
cmp
sub
add
push
cmp
and
jne
lea
pop
or
(bad)
(bad)
push
dec
inc
mov
add
cmp
jne
mov
jmp
test
mov
mov
dec
stos
xor
icebp
jp
jp
add
pop
aaa
push
cdq
sbb
inc
out
(bad)
fdivr
loope
xchg
push
xor
ret
add
jbe
add
ret
add
jb
jo
push
xor
loop
sbb
dec
jle
push
mov
or
(bad)
clc
je
push
pop
lea
jb
inc
cld
mov
fbstp
pop
add
and
add
stos
xor
add
(bad)
mov
(bad)
cmps
pop
leave
nop
or
sar
push
or
mov
jmp
std
jg
pop
push
dec
scas
ret
into
and
jle
pop
or
dec
icebp
or
inc
push
push
jno
or
mov
push
call
jbe
mov
add
pop
call
aad
or
jne
mov
jmp
and
mov
push
not
shr
and
mov
and
sbb
(bad)
pop
xchg
add
adc
ret
mov
and
shl
aam
mov
jmp
sub
and
shl
cmc
rcl
add
hlt
add
or
push
xor
push
sub
(bad)
jnp
(bad)
call
xchg
sar
adc
sub
rcr
inc
leave
into
push
pop
scas
and
jle
inc
lea
fdivr
out
mov
pop
pushf
push
mov
jmp
add
neg
std
or
call
test
movzx
rol
test
fistp
cmp
mov
rol
add
aaa
je
and
jmp
push
sar
rdmsr
pop
movzx
dec
lea
jne
sub
pop
lds
cwde
inc
aam
add
shl
pop
pop
inc
cwde
std
fnstsw
jle
mov
pop
cmp
add
or
leave
sub
sti
out
push
and
setne
dec
and
xor
call
das
and
push
sbb
xchg
push
or
xchg
or
dec
push
push
xor
cmp
mov
dec
test
push
push
push
(bad)
jle
fsub
add
jg
inc
add
(bad)
dec
xchg
rol
fwait
inc
(bad)
jmp
jg
mov
and
adc
add
out
jge
je
cmp
fcomip
or
retf
lea
push
test
push
rcr
add
(bad)
dec
inc
sbb
pop
mov
xor
mov
cmp
je
lea
dec
scas
aaa
jg
dec
inc
add
cmp
and
lea
fnop
adc
pop
out
lea
adc
or
dec
or
test
jbe
mov
sub
add
push
(bad)
mov
in
ja
lock
adc
or
(bad)
push
mov
mov
into
(bad)
clc
(bad)
push
clc
sub
add
push
add
call
(bad)
hlt
jmp
sahf
inc
push
push
loopne
jae
mov
ret
mov
push
or
in
or
dec
dec
lea
push
push
aam
push
rcr
and
add
(bad)
arpl
lock
jge
neg
mov
push
push
(bad)
fdivr
add
push
push
push
call
mov
dec
ins
add
jmp
arpl
push
push
mov
outs
jno
icebp
push
call
push
sub
adc
inc
sub
or
adc
inc
pop
(bad)
fnstenv
cmp
mov
adc
xlat
mov
inc
les
scas
xchg
es
cmp
or
xlat
cmp
ret
(bad)
adc
jle
int
push
(bad)
cmp
mov
mov
push
push
call
push
push
mov
out
mov
push
push
sbb
sahf
ret
push
or
lock
shl
mov
pop
cmp
jb
daa
out
push
les
pop
cmp
popa
test
pop
js
sub
push
push
add
mov
rcr
pop
scas
pop
push
push
clc
mov
adc
or
ret
clc
push
jl
(bad)
cwde
in
dec
add
or
ja
mov
test
inc
and
add
mov
bound
push
add
inc
add
cwde
jmp
dec
imul
rcl
add
adc
dec
add
adc
lods
adc
push
ret
packuswb
call
cmps
cmp
mov
inc
inc
inc
add
rol
adc
push
js
push
mov
rcl
adc
cmp
ret
mov
and
cmp
adc
or
les
pop
and
retf
inc
and
mov
push
cmp
and
add
push
push
add
(bad)
push
push
shl
mov
xor
lahf
xor
inc
or
add
fmul
or
out
jmp
mov
xchg
dec
push
cmp
pop
je
or
xor
or
or
rol
inc
inc
mov
pop
or
add
cld
xor
pop
ret
test
push
adc
adc
mov
in
scas
shl
push
pop
add
xlat
cmp
add
pop
dec
sub
aaa
xor
test
je
mov
adc
in
inc
add
cmp
test
int3
lds
call
push
pop
ret
dec
mov
cld
add
ins
icebp
or
mov
or
call
js
cmp
cmp
mov
cmp
in
int3
inc
sub
fs
cwde
pusha
push
sub
or
dec
pop
ficom
jne
add
icebp
cmp
push
or
push
sbb
(bad)
shl
inc
pop
stos
mov
clc
pop
pop
rcr
cld
jbe
dec
add
or
add
dec
push
push
mov
jbe
adc
sbb
outs
sub
and
ins
push
cmp
add
mov
add
ret
or
sub
push
pushf
(bad)
movs
push
(bad)
sub
das
add
jl
sub
mov
jp
and
pop
mov
nop
adc
(bad)
pop
pushf
xchg
je
or
sbb
cmp
stc
out
xchg
ja
pop
les
dec
jbe
jmp
fldenv
(bad)
ss
call
mov
imul
adc
inc
dec
retw
add
adc
adc
int3
mov
rol
add
adc
je
mov
sbb
add
mov
pop
mov
jbe
sbb
pop
or
call
mov
sub
je
sub
add
pop
adc
loopne
cdq
mov
loop
mov
add
loopne
mov
add
sbb
or
test
sub
push
xor
mov
je
enter
(bad)
outs
(bad)
or
push
call
pop
push
(bad)
call
or
cmc
adc
dec
add
or
mov
or
into
and
sub
mov
xchg
lds
add
sub
nop
sub
mov
or
xchg
scas
and
push
test
mov
jl
dec
add
inc
sbb
mov
sbb
jb
stos
push
shl
add
add
mov
fwait
movs
sub
dec
jno
outs
or
das
fdiv
mov
and
xor
(bad)
adc
inc
es
movs
aaa
mov
mov
cmp
lea
or
ret
add
push
add
dec
add
sbb
add
adc
mov
dec
or
mov
inc
adc
int
movs
adc
gs
push
ins
push
and
dec
aas
and
test
aas
loope
xor
and
aam
xor
nop
or
xchg
aas
sbb
dec
or
mov
pop
cld
xor
mov
or
adc
jo
lds
dec
adc
and
shl
pusha
clc
mov
adc
loope
inc
(bad)
pop
enter
popa
daa
or
dec
add
jae
xchg
adc
daa
and
push
xchg
push
lock
inc
mov
or
mov
mov
mov
jge
mov
mov
push
mov
(bad)
out
or
cli
(bad)
inc
add
push
call
or
aaa
inc
aad
inc
sbb
mov
jmp
adc
dec
or
and
shr
lds
jae
mov
inc
push
in
loopne
fldenv
xchg
push
push
sbb
outs
pop
add
push
movzx
jmp
lods
das
or
ja
add
cld
(bad)
push
push
(bad)
push
cmp
clc
jmp
movaps
call
add
(bad)
adc
nop
mov
clc
jmp
or
mov
es
adc
std
pop
cld
cs
jne
jne
mov
ficom
pop
push
and
add
push
das
sub
sub
stos
data16
xchg
adc
(bad)
je
push
xor
xchg
in
mov
and
dec
cld
push
and
mov
push
jle
cmp
mov
lea
or
mov
add
repz
nop
or
and
mov
icebp
mov
push
pop
jne
push
mov
(bad)
(bad)
mov
test
dec
adc
xor
not
test
mov
mov
ja
aam
mov
mov
mov
add
mov
inc
inc
cmp
add
add
sbb
std
sub
dec
adc
inc
jo
idiv
(bad)
dec
mov
jge
mov
mov
jmp
mov
mov
cmp
mov
jne
jns
pop
inc
je
push
push
push
cmp
mov
jne
ja
or
inc
pop
mov
mov
xor
mov
call
enter
add
mov
add
mov
dec
mov
call
rol
ret
fcmovnb
cmp
je
cmp
add
pop
inc
mov
xchg
shr
ins
sub
jge
mov
mov
jle
mov
bound
icebp
out
sbb
dec
mov
and
dec
cmp
iret
je
cmp
mov
add
pusha
adc
sub
(bad)
xor
xchg
mov
lods
test
sub
fcomip
dec
aad
pop
adc
sub
clc
cmp
push
clc
jae
mov
push
ins
sub
cmp
and
jge
add
mov
loopne
sub
mov
div
mov
sbb
sti
sub
and
lea
cld
mov
dec
call
dec
or
inc
clc
sub
test
jbe
ins
ja
sub
cmp
clc
xor
test
or
add
pop
cld
cmp
ja
jbe
mov
inc
clc
inc
add
loope
push
jbe
cmp
jb
sub
lea
jns
lds
jmp
js
inc
sub
adc
pop
pusha
movq
mov
(bad)
rol
adc
pop
sub
push
js
push
ins
jp
in
(bad)
push
mov
shr
ret
or
mov
aaa
fdivr
pop
dec
and
cli
push
sub
sub
sub
idiv
add
call
cmps
pop
enter
lods
std
add
adc
sbb
imul
pop
mov
lea
shl
sub
push
push
mov
call
mov
fucomip
push
sbb
or
aas
neg
add
cmp
je
sub
mov
call
jmp
adc
push
sub
mov
push
push
push
call
pop
adc
scas
loope
mov
push
call
pop
push
sub
jae
or
sbb
or
add
into
mov
and
jge
(bad)
jle
mov
mov
xchg
or
jne
adc
fild
clc
push
clc
mov
cld
add
sub
leave
or
(bad)
mov
ja
add
cmp
mov
push
cmc
inc
sub
sub
push
neg
mov
push
call
inc
ja
sar
push
stos
add
mov
hlt
pop
(bad)
call
inc
and
pop
cmp
jae
out
add
(bad)
int3
mov
add
sub
push
mov
and
xlat
out
(bad)
cld
or
fadd
icebp
in
(bad)
(bad)
push
adc
or
mov
xchg
cmc
and
sbb
dec
pop
leave
ret
mov
enter
mov
and
xchg
adc
sub
fst
loopne
push
push
mov
or
les
mov
jmp
jnp
inc
cld
add
add
cmc
cmp
add
sub
lahf
adc
cdq
sbb
in
jg
add
pusha
inc
sbb
add
push
mov
enter
mov
pusha
and
cmp
jmp
inc
hlt
push
push
call
out
push
push
adc
xchg
mov
lea
loopne
jae
fdiv
dec
sub
(bad)
push
sub
or
call
int3
mov
push
xor
adc
add
je
cs
xchg
jnp
and
(bad)
mov
imul
jle
add
push
cmc
push
jmp
mov
movs
adc
stos
jmp
loope
mov
sbb
cmp
ja
push
lea
mov
call
add
pop
or
mov
mov
xor
cld
call
pop
pop
idiv
mov
xor
es
push
push
push
pop
js
std
jmp
bound
div
add
mov
and
rol
jo
xchg
je
mov
add
push
pop
mov
inc
je
push
sub
(bad)
stc
cmp
je
pop
mov
loopne
push
xchg
xchg
pop
push
mov
push
test
cli
scas
sub
push
dec
add
cdq
xchg
jle
push
in
dec
jne
push
scas
xor
mov
adc
cmp
mov
add
cmp
dec
mov
push
add
ret
dec
and
test
pop
jmp
sub
sub
cmp
or
dec
add
cwde
stos
push
push
sbb
mov
and
mov
adc
es
cld
xor
mov
mov
lds
mov
dec
loopne
(bad)
cli
leave
cld
sbb
mov
add
dec
sbb
inc
xor
cli
(bad)
ja
inc
dec
jnp
data16
not
and
bound
cs
dec
sbb
in
not
hlt
or
popa
adc
mov
xor
out
mov
sbb
inc
and
sub
xor
mov
mov
fist
sbb
ret
mov
jmp
lds
pushf
push
mov
fcmovb
es
jle
imul
adc
xor
and
or
leave
ret
call
jo
addr16
ret
cmp
call
push
fimul
add
dec
or
or
jne
inc
call
shr
rep
mov
push
add
movs
outs
xlat
adc
add
and
inc
cs
jmp
(bad)
(bad)
jbe
jb
pop
cld
sub
mov
and
adc
clc
jl
mov
sti
sbb
inc
xor
push
push
push
or
pop
add
aas
sbb
mov
cmp
sti
sbb
sbb
mov
shl
adc
add
aaa
shl
adc
je
mov
fild
push
pop
and
lea
cmp
ja
call
jbe
sub
mov
mov
mov
add
push
push
ins
je
adc
push
pop
add
int3
sbb
inc
out
mov
adc
(bad)
cmp
push
push
call
inc
aaa
cpuid
mov
adc
adc
in
std
arpl
inc
adc
inc
sbb
add
and
dec
stc
mov
jne
mov
add
jne
jmp
adc
je
add
push
add
test
jge
stc
jmp
or
out
ret
or
mov
sbb
xchg
rcr
push
xor
and
ds
adc
or
jle
je
mov
(bad)
cmp
ja
loopne
rol
cmp
mov
jbe
orps
add
mov
inc
idiv
xchg
sbb
mov
shr
push
mov
cmp
jne
cmc
out
pushf
ror
and
sub
adc
inc
push
ret
fnstsw
jne
and
cmp
xlat
fcmovnb
pop
pop
add
sub
jbe
out
sbb
mov
sub
dec
sbb
(bad)
jge
or
mov
sub
jns
pop
sub
pop
adc
dec
adc
jecxz
loopne
jmp
jmp
je
mov
test
je
fdiv
call
(bad)
gs
les
in
test
xor
mov
push
mov
popf
push
(bad)
(bad)
jg
sar
ret
mov
je
push
push
push
add
cld
cmp
cmp
je
mov
jmp
cmp
je
lea
jb
pop
cld
pop
clc
je
mov
mov
and
repnz
mov
ret
lock
cmps
jae
cmp
outs
loopne
add
cmp
ja
or
pop
add
sbb
cmps
gs
push
lea
mov
adc
movs
gs
push
push
(bad)
mov
clc
je
mov
mov
je
push
out
push
xchg
or
and
jbe
ja
jbe
xor
jo
push
dec
aad
inc
jne
push
xchg
sbb
adc
popf
jle
mov
adc
mov
xor
lea
xor
fnstsw
out
clc
push
cmps
cmps
out
cmc
rol
and
jmp
js
jp
add
push
mov
and
cmc
jne
lahf
xchg
out
outs
inc
sbb
or
jle
adc
dec
mov
fdiv
test
jne
and
inc
sbb
mov
xor
outs
js
lock
test
je
inc
cmp
loope
outs
test
test
je
cmp
je
push
push
mov
call
(bad)
jmp
mov
aaa
scas
pusha
inc
je
inc
inc
jge
xchg
jmp
and
fadd
std
and
les
mov
jg
mov
xor
or
mov
(bad)
and
sar
xor
call
lahf
(bad)
(bad)
jle
sbb
jne
mov
pushf
jmp
push
cmps
mov
daa
dec
mov
mov
add
or
xchg
or
push
pop
iret
jo
jmp
add
xor
stos
push
xchg
call
sbb
mov
jne
mov
push
pop
adc
inc
adc
adc
into
jne
xor
sbb
call
(bad)
faddp
add
cmp
push
pop
fist
hlt
push
(bad)
dec
add
xchg
jl
not
or
sbb
xchg
test
sub
mov
loopne
or
push
and
adc
ins
sbb
gs
or
and
mov
mov
(bad)
out
fs
jmp
push
mov
push
mov
inc
sbb
addr16
addr16
add
test
jl
pop
xchg
pop
jo
push
lea
pop
or
inc
adc
push
leave
jne
and
adc
push
dec
add
test
sete
inc
fist
repnz
add
mov
add
push
adc
mov
ja
pop
movs
aam
or
adc
int3
test
je
out
add
adc
mov
mov
inc
je
jnp
inc
adc
push
mov
mov
adc
(bad)
cmp
cli
(bad)
cmp
je
mov
jne
mov
cmp
jl
fdivr
(bad)
cmp
jle
cmp
jl
cmp
jg
or
movsx
sub
jmp
pop
loope
std
push
inc
inc
cmp
jge
mov
mov
je
lods
inc
push
push
add
jmp
movzx
test
push
ret
inc
inc
inc
cmp
jne
xchg
(bad)
(bad)
aas
adc
xor
clc
cmp
je
mov
cmp
jne
mov
xchg
out
outs
inc
cmp
inc
add
mov
inc
jmp
je
or
add
cld
dec
enter
mov
inc
inc
mov
mov
inc
inc
jmp
sub
mov
inc
sbb
add
inc
push
mov
and
add
or
loope
das
mov
mov
push
mov
nop
bound
pusha
ret
aam
test
push
pop
aaa
nop
clc
jne
and
test
mov
push
and
push
push
jne
call
fidiv
push
inc
xor
mov
cmp
xchg
call
mov
dec
inc
(bad)
frstor
or
cmp
add
or
add
push
stc
test
daa
out
retf
add
inc
call
je
dec
or
add
je
sub
mov
cli
mov
iret
es
scas
mov
sbb
cwde
mov
jmp
sub
jmp
out
imul
cli
add
push
add
movups
sbb
push
xlat
xchg
in
loopne
in
and
loop
push
add
je
push
pop
cld
dec
add
inc
cmp
adc
call
mov
call
pop
sbb
and
jne
push
jmp
push
out
push
lea
add
adc
sbb
pop
adc
add
jp
xor
pop
push
jae
inc
lea
pop
cwde
out
dec
add
pop
adc
(bad)
out
inc
rol
jne
outs
stos
pop
pushf
aam
test
sub
js
mov
add
xchg
adc
push
adc
cs
add
inc
inc
into
mov
sar
cmp
je
mov
push
shr
dec
cmp
jmp
mov
and
fwait
mov
add
(bad)
pusha
or
xor
add
jge
mov
inc
mov
adc
call
jne
dec
inc
pop
cmp
cld
pop
or
movs
pop
jae
ret
add
add
and
cmp
es
add
es
add
sub
cwde
push
push
std
leave
dec
add
ret
inc
cmc
push
loopne
cmp
jne
push
push
(bad)
loopne
push
pop
lea
mov
xchg
sbb
test
xchg
xor
call
push
pop
dec
sub
aam
test
mov
mov
inc
cmp
jg
mov
add
mov
jmp
mov
inc
sub
loop
xchg
pop
push
add
sbb
add
cmp
push
adc
mov
fadd
dec
gs
sbb
sbb
jle
stos
bound
add
sbb
push
call
sbb
bound
push
fs
add
push
cmp
push
jne
mov
sbb
in
push
mov
mov
(bad)
jg
pop
xlat
imul
cmp
jge
out
mov
jl
fdivr
push
inc
or
idiv
add
mov
mov
mov
inc
inc
jmp
dec
in
cmp
push
ss
and
inc
cld
jge
pcmpeqw
in
inc
into
rcl
jg
arpl
mov
and
jmp
mov
aas
cmp
arpl
cmp
xor
mov
jge
adc
sbb
jge
xor
mov
jnp
js
dec
jmp
fist
loope
xor
shl
iret
push
in
mov
push
push
push
jle
mov
test
loopne
push
push
cmps
mov
inc
fld
js
call
add
dec
jne
lea
(bad)
fs
pop
inc
pusha
fcom
data16
into
mov
push
cmps
dec
mov
mov
dec
push
outs
jmp
je
mov
dec
xor
mov
bound
loope
mov
jl
int3
in
xor
cmp
dec
cwde
test
rol
mov
cmps
adc
dec
inc
mov
cdq
idiv
push
push
mov
in
(bad)
cmp
movs
call
mov
(bad)
lahf
or
test
push
push
push
add
les
add
jmp
gs
movzx
or
push
push
imul
jo
call
pop
sub
sub
es
movs
push
push
mov
icebp
or
dec
cmps
dec
int3
push
out
push
and
rol
retf
jbe
test
cmp
xor
icebp
jne
test
push
push
dec
xor
sti
pop
mov
clc
dec
cdq
mov
mov
dec
pusha
clc
cwde
sub
shl
or
mov
jge
ins
push
adc
push
or
cmp
inc
adc
push
sbb
add
cmp
xchg
lock
mov
push
push
pop
inc
push
fsub
sbb
in
xor
fist
adc
push
push
xchg
shr
sub
add
or
test
je
test
movs
popf
test
imul
jae
cmp
lds
sbb
mov
ins
neg
xor
xor
mov
popf
or
add
sub
or
mov
mov
sub
cmp
push
push
and
and
sbb
add
pop
ins
mov
mov
test
je
adc
push
adc
add
scas
sbb
mov
out
pop
ja
add
ret
fdivp
jae
and
mov
mov
lds
js
jns
(bad)
int
jmp
mov
pop
or
jnp
imul
mov
jl
fcomp
in
or
ja
call
cld
je
inc
push
and
sub
dec
jmp
pop
pusha
xchg
nop
add
add
xor
scas
mov
or
sbb
xchg
aaa
pop
jmp
inc
xor
push
push
push
mov
into
sbb
sub
inc
mov
or
xor
mov
dec
inc
or
mov
mov
and
or
lds
and
mov
pop
(bad)
outs
add
mov
je
test
mov
jne
push
mov
les
loope
sbb
adc
inc
or
dec
mov
inc
jne
(bad)
or
ds
mov
and
and
std
sbb
jle
cmps
mov
sbb
mov
sub
adc
push
lds
push
add
ins
sbb
or
xchg
push
test
je
mov
outs
call
pop
jge
cmp
je
int3
add
and
push
xor
(bad)
adc
dec
mov
xlat
push
sti
fwait
jp
test
call
push
sbb
mov
movs
mov
in
or
mov
push
push
sbb
xor
std
stos
or
and
pop
enter
xor
movs
(bad)
rcr
dec
div
cmp
ds
push
or
loopne
cwde
mov
(bad)
iret
add
mov
push
or
sahf
sbb
scas
sbb
in
push
push
push
adc
popa
sub
mov
sbb
and
push
sbb
mov
or
inc
lock
cmp
inc
and
mov
push
xor
push
int3
inc
mov
push
dec
fbstp
test
adc
inc
and
jb
sub
dec
enter
mov
cmps
mov
cmpxchg
mov
sub
mov
imul
jne
mov
rol
mov
call
mov
or
pop
add
jle
mov
inc
mov
add
mov
fistp
cmp
je
jmp
dec
sub
inc
cs
pshufw
inc
in
fmul
push
cmp
sub
(bad)
and
sub
adc
jp
push
mov
jne
jmp
xor
cmp
punpckhbw
ja
mov
sbb
push
add
xor
push
jno
push
je
adc
fimul
and
das
shr
mov
out
(bad)
mov
adc
push
push
lea
mov
push
inc
jnp
lea
ja
jg
mov
add
inc
pop
push
lock
ret
cld
push
push
loop
inc
fiadd
jne
clc
mov
shr
mov
jne
hlt
adc
rcr
mov
je
fild
out
les
add
ins
mov
or
call
mov
mov
mov
dec
je
dec
push
cmp
aad
inc
xor
sub
mov
jg
icebp
mov
jmp
pop
mov
sbb
or
add
jmp
or
outs
sub
mov
adc
mov
sahf
cmp
jge
add
xor
mov
mov
(bad)
aas
mov
push
push
push
lea
pop
push
push
out
jg
xor
jne
mov
add
xor
cmp
mov
mov
in
clc
mov
add
or
mov
sti
dec
add
loopne
pop
adc
cmp
add
call
ja
test
mov
mov
push
lods
cmp
jne
fisub
loopne
out
mov
scas
and
inc
mov
xor
movs
mov
lds
xchg
lock
aam
call
mov
pop
add
fcomp
adc
inc
fidivr
xchg
les
xchg
push
inc
inc
push
scas
dec
or
push
clc
add
sbb
or
ds
cli
inc
push
jo
aam
mov
jmp
sub
lock
mov
jg
(bad)
cld
les
fisttp
add
push
(bad)
mov
mov
aaa
mov
inc
(bad)
push
xchg
rcr
test
xor
aaa
push
aaa
fstp
add
(bad)
out
out
xchg
xor
cmp
div
mov
imul
ins
mov
or
push
arpl
(bad)
loop
push
test
mov
mov
aam
and
dec
test
nop
das
ret
push
add
push
aad
mov
mov
and
pop
sar
mov
sub
cmp
inc
inc
or
add
or
sbb
pusha
add
out
enter
dec
mov
push
xchg
mov
sbb
lods
inc
cld
je
inc
je
inc
out
dec
dec
pop
sbb
mov
mov
idiv
add
in
push
mov
dec
cs
sbb
nop
mov
cmps
mov
fimul
inc
inc
adc
pop
sub
adc
loope
sub
and
jecxz
mov
ds
popa
mov
jp
xor
push
enter
xchg
arpl
or
sbb
pop
jno
es
lods
or
(bad)
cmp
aas
arpl
mov
in
add
or
mov
add
aas
mov
jl
mov
inc
mov
ret
aaa
add
cmps
mov
ret
mov
push
test
sbb
popf
lock
rcl
test
pop
mov
and
enter
xchg
xchg
inc
pop
mov
clc
or
cmp
call
je
sub
push
ret
adc
bound
es
push
mov
arpl
shl
mov
cmp
imul
int3
mov
pop
mov
add
nop
push
push
xchg
in
ja
mov
leave
mov
popa
adc
push
shl
mov
mov
enter
mov
ret
mov
or
adc
test
inc
add
mov
cmc
mov
ss
xor
adc
or
add
hlt
xor
not
mov
or
inc
xor
xor
pop
add
fmul
jbe
add
jle
push
or
add
xor
test
jge
int3
mov
ret
push
jae
mov
push
xor
ja
inc
xor
mov
push
sbb
push
and
fdivr
adc
dec
cmp
lea
or
and
push
aad
add
inc
sub
mov
es
mov
mov
mov
sbb
push
adc
sbb
daa
mov
div
mov
ins
or
test
push
mov
in
fiadd
adc
mov
lock
xchg
pushf
push
rcl
inc
iret
mov
sar
push
jns
imul
into
pusha
or
and
or
jno
mov
or
ror
cs
adc
fsubr
fnstenv
bound
lds
add
dec
adc
mov
das
add
adc
sbb
mov
and
xor
jo
aad
xchg
cmp
pop
cmp
dec
adc
or
mov
(bad)
jmp
mov
dec
xor
xchg
sbb
or
xor
add
mov
mov
int3
add
nop
mov
into
push
shl
xor
jne
out
push
push
ret
add
mov
mov
icebp
lea
rcr
sbb
ins
jmp
call
sbb
sub
daa
mov
adc
add
clc
out
mov
mov
push
xor
ins
das
push
ret
pop
adc
mov
pop
iret
mov
aam
jmp
or
mov
adc
pop
mov
clc
out
fld
aad
and
push
push
and
sbb
add
dec
std
xchg
add
cmp
jg
sbb
jne
mov
mov
mov
jmp
test
(bad)
out
(bad)
push
dec
add
mov
cmp
je
mov
sub
je
mov
mov
xchg
add
jge
mov
or
push
sbb
xlat
sub
cmp
push
xchg
fadd
inc
adc
xchg
jecxz
inc
inc
call
mov
ja
jne
inc
sbb
mov
mov
sahf
mov
mov
ret
or
sbb
scas
inc
addr16
mov
push
cmp
je
jb
xchg
adc
adc
adc
pop
outs
or
mov
xlat
adc
jns
daa
clc
push
cli
scas
pop
lods
into
push
popa
add
push
inc
pop
pop
ret
push
push
inc
dec
and
call
jmp
mov
cmp
jge
dec
test
je
jbe
pop
cmp
jle
adc
add
out
dec
sbb
jl
cmp
jl
adc
lds
test
push
jne
mov
shl
push
push
in
cmp
xor
and
(bad)
fcom
jo
test
push
mov
dec
dec
pop
sbb
call
mov
ficomp
dec
pushf
sbb
pop
cld
cmp
call
mov
dec
inc
mov
add
lea
shl
push
or
call
pop
adc
or
mov
push
lea
imul
lea
adc
call
or
cmp
aas
or
dec
inc
sbb
jp
ja
mov
jmp
and
pop
or
scas
mov
mov
push
push
or
and
mov
test
jne
mov
push
mov
and
dec
and
xchg
mov
(bad)
call
xor
ret
sbb
or
add
inc
jl
je
jo
inc
(bad)
call
jmp
add
cmp
xor
push
lea
jnp
add
lock
mov
loopne
push
push
mov
jmp
or
add
ja
sbb
xchg
inc
es
mov
jp
jge
push
mov
push
aas
add
and
pop
add
adc
pop
dec
inc
adc
and
lds
(bad)
out
dec
sub
mov
pop
pop
mov
pop
dec
fwait
test
add
rol
jp
add
mov
mov
push
es
out
push
fstp
jle
mov
jle
cmp
mov
cmp
je
data16
add
loop
cmp
jmp
mov
daa
jmp
jnp
loopne
clc
ret
in
push
lea
inc
paddusw
jbe
dec
into
jo
ja
call
or
call
js
jae
call
adc
jne
sub
inc
stos
fwait
sub
or
sub
fs
imul
adc
sbb
jmp
inc
inc
cmp
cmc
jns
dec
jbe
xor
fwait
test
jne
mov
std
ja
loopne
mov
mov
xor
mov
mov
mov
sub
cs
outs
sub
add
ror
imul
dec
ss
enter
xor
and
mov
adc
mov
sub
arpl
pop
ror
lock
jne
jne
sbb
ja
xor
or
mov
mov
mov
in
add
sbb
call
and
push
cmp
add
mov
mov
or
mov
or
inc
rol
sbb
ret
jl
add
or
div
mov
and
add
mov
sbb
ins
mov
ja
fisubr
inc
push
cmp
jge
cmp
je
push
pop
dec
sbb
inc
js
jl
js
add
xor
mov
sar
xor
mov
(bad)
outs
enter
movs
mov
mov
mov
mov
sahf
mov
inc
push
inc
les
aas
add
ja
dec
mov
in
(bad)
mov
mov
mov
add
sbb
mov
mov
xchg
js
mov
in
dec
fiadd
in
mov
jle
aas
mov
pop
inc
or
mov
mov
mov
ja
lea
adc
cld
aaa
dec
or
jmp
and
add
mov
dec
sbb
and
xor
jle
inc
xor
mov
cmp
dec
mov
mov
mov
ror
sbb
test
push
ret
mov
lock
mov
add
dec
add
cmp
cmp
xlat
loope
adc
popa
cwde
jmp
mov
cld
std
jg
fimul
cmp
jne
mov
cmp
pop
add
jbe
mov
jbe
retf
call
or
jg
sbb
sbb
nop
arpl
into
mov
push
out
push
bt
inc
test
or
push
adc
push
push
and
push
and
pop
sub
pop
and
cmp
je
add
and
push
jge
ja
lahf
jp
mov
xchg
and
call
mov
pop
ret
mov
push
sbb
(bad)
sub
(bad)
sub
push
cmp
(bad)
retf
add
ja
shl
mov
mov
or
dec
sbb
mov
rcr
loopne
push
or
push
dec
add
add
pop
fsubr
and
jbe
xor
ins
or
add
lahf
mov
lods
add
inc
push
pop
jb
mov
test
out
or
es
ja
mov
jno
push
mov
sub
mov
mov
cmps
add
enter
mov
jle
push
pop
lea
lea
(bad)
push
cdq
sub
sar
mov
mov
sar
shl
add
sub
cmp
and
push
pop
mov
enter
inc
hlt
fisttp
push
mov
mov
mov
loopne
shl
push
add
sar
imul
add
mov
xlat
mov
aad
iret
movzx
shl
inc
xor
not
push
pushf
std
dec
mov
add
dec
jne
push
push
mov
push
or
(bad)
cmp
test
mov
pop
jne
push
(bad)
std
adc
adc
ret
mov
movs
or
repnz
push
pop
enter
mov
imul
add
cmp
mov
mov
and
enter
ja
or
mov
cmc
mov
mov
jle
mov
mov
(bad)
mov
fs
jle
mov
or
mov
inc
stos
stos
test
aam
mov
es
int3
movs
(bad)
push
pusha
or
add
dec
add
arpl
std
arpl
or
mov
sbb
(bad)
sbb
xor
fst
add
sub
xchg
cmp
leave
dec
mov
and
xor
xor
jbe
jp
mov
sub
cmp
inc
mov
jge
fldenv
test
jge
lahf
jge
jbe
push
adc
(bad)
pusha
retf
out
mov
leave
xchg
push
sbb
gs
and
ret
sti
cmp
test
mov
dec
add
jg
repz
mov
out
mov
ret
push
mul
sub
shl
push
and
cmp
add
cs
xchg
daa
ret
push
data16
ss
and
in
stc
ins
in
addr16
ds
mov
push
xchg
or
adc
into
push
retf
or
mov
js
xor
out
fist
or
push
call
sbb
jp
mov
mov
sub
out
push
loopne
xor
mov
mov
fisttp
mov
hlt
adc
dec
je
retf
sbb
adc
pop
test
fist
shl
or
add
loop
cwde
or
and
inc
push
sbb
mov
mov
fmul
call
push
dec
iret
and
adc
hlt
daa
aam
push
lock
and
cdq
cld
lea
ficom
sbb
xor
or
sti
les
sahf
leave
jne
sbb
push
adc
pop
js
xor
loop
adc
push
push
lahf
cmp
push
jmp
dec
pop
push
js
inc
adc
sahf
push
jo
(bad)
out
lea
pop
cld
push
out
mov
mov
and
mov
sbb
and
bound
mov
adc
pop
mov
xchg
push
xlat
dec
imul
clc
jmp
mov
cmp
je
cmp
je
cmp
inc
ret
cmp
test
inc
out
mov
lock
cmc
add
mov
inc
jmp
mov
enter
dec
ja
cmp
pop
sar
pop
cmp
pusha
mov
adc
fnsave
cdq
or
mov
add
rcl
and
xor
push
jmp
dec
hlt
mov
push
mov
(bad)
push
mov
mov
inc
and
and
loopne
mov
mov
hlt
cmp
sub
sar
int
int
test
dec
and
shl
int
int
push
add
xchg
adc
shr
sub
adc
es
aaa
adc
add
(bad)
inc
push
mov
fisttp
mov
cmp
mov
leave
xor
and
out
pusha
fsub
lds
inc
add
movzx
shl
and
dec
push
lds
cmp
mov
sbb
dec
sbb
pop
inc
xor
sub
cmp
mov
mov
je
(bad)
sbb
add
add
sbb
inc
mov
jl
push
mov
push
push
pop
and
or
cmp
sbb
push
call
push
push
push
xor
cmp
mov
mov
sbb
test
inc
adc
jbe
icebp
inc
outs
sub
aas
call
shl
xchg
add
cmp
sbb
neg
leave
dec
adc
ins
outs
into
xchg
arpl
imul
inc
add
push
jne
push
pop
mov
jae
test
cmp
add
jmp
pop
pop
mov
push
mov
test
or
add
sub
cmp
cmp
or
mov
in
std
add
ret
sbb
out
add
sti
xor
jb
jge
pop
inc
cs
sahf
cmp
add
ficom
mov
leave
std
jge
lea
jne
push
mov
pop
out
sbb
lock
lds
mov
push
push
ins
xchg
mov
sbb
sbb
std
(bad)
loopne
pushf
scas
adc
lea
rcr
mov
loopne
adc
pop
push
push
lea
push
mov
outs
retf
xor
push
xchg
fldcw
or
add
or
mov
cs
dec
add
cmp
fnsave
adc
lea
push
push
push
or
mov
addr16
shl
out
sbb
hlt
push
mov
and
sub
jne
call
cmp
mov
in
add
clc
or
call
jmp
(bad)
adc
xchg
push
push
xor
push
mov
adc
daa
mov
fsub
jb
push
push
push
(bad)
adc
mov
pop
mov
adc
ret
mov
cld
push
adc
push
movs
enter
call
and
clc
push
push
mov
push
push
push
push
push
push
call
mov
mov
push
ficomp
mov
and
out
adc
push
sbb
mov
push
inc
and
adc
lods
fwait
inc
nop
or
jnp
aad
add
dec
mov
out
or
mov
push
je
cmps
add
enter
or
data16
lods
or
inc
adc
inc
call
and
sbb
and
sub
sub
ret
mov
sub
mov
push
dec
or
mov
dec
test
jge
jae
jg
adc
xor
jmp
mov
jb
pop
pop
mov
xchg
imul
fisttp
movs
adc
and
add
sar
inc
cmp
dec
pop
adc
add
mov
out
mov
imul
pusha
pop
ins
and
add
xor
add
iret
adc
(bad)
cmp
out
and
mov
lea
adc
in
adc
adc
test
add
inc
xchg
add
or
js
and
add
or
adc
call
sub
pop
cmp
jbe
push
(bad)
sbb
jmp
push
cmps
imul
inc
cmp
adc
pop
xor
mov
ja
shl
cmp
mov
mov
fisttp
add
mov
mov
inc
aas
cmp
aas
(bad)
mov
out
outs
jg
aam
push
aas
push
lea
in
sbb
ficomp
test
cmp
inc
sbb
mov
cdq
jle
je
in
mov
leave
dec
mov
mov
fild
call
fcmovnb
push
aaa
add
loope
fwait
rol
test
mov
adc
inc
loop
jne
sub
je
repz
pop
ja
scas
mov
call
or
or
test
add
out
push
loop
clc
pop
jg
inc
adc
fstp
ret
je
mov
push
lea
cli
pop
rcl
push
push
push
mov
loope
dec
mov
pop
fcom
sbb
jne
push
or
push
mov
cmp
call
and
jle
add
inc
xor
(bad)
mov
pop
add
add
push
(bad)
cmp
popf
icebp
cmp
add
mov
pop
ret
push
outs
mov
jne
adc
add
fwait
ret
inc
or
push
mov
jo
lock
add
call
sbb
or
loop
idiv
mov
push
cmp
into
repz
push
mov
cmp
or
add
call
mov
xor
cmp
je
mov
add
cmp
jne
add
jmp
mov
cmp
jne
jmp
div
cmp
push
add
or
sub
jne
and
inc
add
sbb
(bad)
fist
adc
or
or
add
add
jmp
add
aas
test
jne
xor
push
push
mov
adc
call
(bad)
mov
sub
ror
test
je
mov
mov
mov
or
inc
mov
sbb
jne
mov
sub
adc
pop
(bad)
or
iret
mov
and
lock
sub
je
jg
(bad)
push
loope
mov
push
aad
mov
mov
dec
and
add
aam
add
push
xchg
and
or
mov
je
xor
sub
mov
dec
cmp
jne
call
int3
cs
sub
push
mov
sbb
arpl
push
lds
cmp
mov
mov
sar
or
jg
cs
jl
mov
cmp
mov
(bad)
push
icebp
je
xor
mov
xor
mov
add
xor
sbb
(bad)
ror
push
fwait
rcl
adc
mov
outs
and
jl
adc
mov
out
das
je
or
push
pop
or
inc
jo
out
add
push
jge
dec
xchg
ds
not
ja
not
add
das
cmp
and
dec
dec
cld
test
add
call
push
lock
jp
dec
adc
loopne
call
push
pop
cmp
je
cmp
jne
mov
cmp
je
cmp
adc
push
cmc
out
jmp
or
jno
jb
push
sbb
jne
or
add
push
add
adc
and
mov
loop
sbb
sbb
add
adc
inc
xor
push
pushf
adc
nop
xchg
sbb
mov
add
outs
cmp
and
xor
shr
inc
jg
cli
or
jbe
push
outs
sub
add
pop
adc
sub
dec
sub
bsf
inc
sbb
imul
add
inc
adc
push
pop
iret
jb
add
fdiv
sub
push
sub
ret
cmp
mov
inc
pop
idiv
jne
and
ret
mov
push
add
fbstp
xor
dec
into
(bad)
pop
jbe
push
mov
mov
sub
ret
sbb
lea
aas
test
add
push
test
and
and
push
mov
push
rcr
mov
or
pop
push
loop
and
pop
or
inc
adc
inc
sub
adc
je
mov
(bad)
push
inc
push
movs
push
add
dec
jmp
mov
es
sti
jmp
cli
mov
dec
je
sub
jne
inc
add
test
dec
scas
pop
jne
or
cmp
call
xchg
jo
xor
push
mov
test
push
arpl
push
std
cmp
xlat
add
outs
jmp
jb
xchg
int3
pop
outs
pop
or
inc
std
aas
mov
int3
call
jb
aam
call
push
lea
and
push
mov
add
(bad)
outs
add
inc
or
call
jnp
(bad)
dec
je
mov
jmp
mov
mov
add
fdiv
push
add
dec
mov
ret
ror
mov
sbb
add
adc
es
push
push
mov
dec
dec
call
sbb
sub
or
mov
sub
or
rcr
pop
ret
mov
mov
push
sahf
or
shl
and
xor
dec
mov
cld
jg
add
mov
xor
fld
push
aas
push
cld
jge
clc
pop
push
pop
or
in
add
mov
es
lds
clc
lods
mov
idiv
add
je
cmp
fdiv
gs
scas
jle
std
jne
mov
rcl
adc
fwait
sahf
fcmovnb
(bad)
xor
jb
fist
jmp
sbb
sub
sub
js
xchg
xchg
scas
lea
dec
or
in
sbb
mov
push
sub
aaa
adc
sub
das
ja
movs
sbb
mov
add
mov
imul
cmp
jbe
mov
add
inc
dec
jnp
jg
sbb
inc
xor
inc
jb
retf
push
retf
fwait
adc
lods
push
retf
xchg
loopne
(bad)
mov
js
jne
cmp
push
je
push
add
daa
mov
push
mov
or
push
push
inc
ss
sbb
sub
jmp
call
or
inc
clc
cmp
mov
(bad)
adc
out
mov
je
adc
inc
xor
aam
shl
mov
pushf
bound
push
cmp
je
out
or
cmps
or
or
pop
jl
dec
data16
js
pop
cmp
jbe
push
idiv
ja
jne
xchg
pop
lea
push
mov
jns
jno
ja
sub
cli
je
push
push
push
push
jno
in
mov
inc
leave
mov
je
pop
add
jmp
push
jo
(bad)
xor
(bad)
push
sbb
addr16
jmp
mov
push
mov
mov
pop
jmp
mov
test
sbb
push
xor
xor
out
jg
pop
cmps
pop
pop
and
mov
and
add
rol
out
sub
mov
add
stos
add
dec
paddd
jle
je
cmp
aaa
ret
mov
add
stos
loopne
add
je
push
push
lea
mov
mov
aaa
test
add
or
mov
jmp
xchg
inc
mov
test
mov
je
ds
lahf
add
add
push
add
and
loopne
lahf
std
iret
mov
add
jne
push
inc
mov
ffree
adc
aas
add
xor
and
test
(bad)
fist
push
mov
lea
add
mov
dec
inc
in
mov
xor
clc
xchg
std
and
or
movzx
mov
jg
mov
test
add
cmp
ja
out
or
and
js
dec
add
jge
mov
add
mov
(bad)
loope
mov
mov
xchg
or
pusha
mov
call
inc
sbb
add
jg
add
push
and
sub
jb
ss
pusha
mov
mov
loope
adc
dec
adc
add
push
mov
call
pusha
add
push
repz
push
or
cld
sub
pop
das
cs
pop
inc
cmp
dec
add
mov
add
mov
push
test
leave
mov
cmc
call
inc
pop
adc
mov
(bad)
hlt
je
bound
mov
jmp
addr16
loopne
push
ja
add
jae
mov
add
movs
add
pop
jmp
add
sbb
(bad)
inc
das
mov
pop
sbb
add
cld
dec
out
add
mov
sub
sub
inc
lods
mov
outs
mov
cmp
aaa
adc
cmp
lea
xor
popa
cld
jmp
jne
je
lea
push
lea
pop
addr16
out
(bad)
mov
add
lea
add
mov
adc
add
sub
aad
or
mov
inc
sub
mov
mov
ret
(bad)
dec
cmp
sbb
add
push
jne
push
call
(bad)
(bad)
jmp
inc
cmp
jne
jmp
outs
xor
pop
cmp
jge
sbb
aam
cmp
je
dec
shl
cmp
or
pop
pushf
push
call
push
or
mov
es
inc
adc
ret
mov
out
mov
adc
or
xchg
(bad)
and
pop
cwde
mov
(bad)
out
call
push
add
mov
jne
call
cmp
adc
pop
mov
mov
mov
xlat
mov
lock
cmp
push
mov
mov
lea
push
mov
out
sub
(bad)
ss
mov
cmp
je
or
jmp
out
je
push
ret
push
push
add
mov
repz
pop
adc
fcmovnb
psubusb
shl
movzx
add
into
icebp
xchg
lahf
hlt
inc
adc
dec
int3
mov
jmp
sub
dec
int3
fwait
sub
or
mov
add
cmp
jne
(bad)
jp
shr
pop
jmp
mov
xor
cmp
jecxz
add
adc
imul
das
adc
cmps
or
pop
hlt
lea
call
ret
adc
dec
add
dec
add
pop
mov
pop
add
or
and
xchg
push
add
cmp
add
jmp
popa
add
push
repz
add
cmp
sbb
or
inc
or
int3
jge
push
add
fs
add
sbb
xchg
fwait
mov
xor
lahf
push
mov
(bad)
jmp
jo
push
push
push
call
push
push
mov
call
or
fdivr
frstor
pop
mov
add
push
mov
pop
pop
pop
ret
movzx
mov
add
nop
or
mov
int3
test
je
push
cmp
mov
sbb
rol
push
jne
mov
movzx
and
add
mov
or
cld
add
leave
jne
int3
(bad)
or
dec
sbb
lsl
cmp
je
push
adc
out
or
mov
add
mov
and
add
or
xor
fld
sub
dec
adc
or
(bad)
(bad)
mov
cmp
je
mov
loope
inc
add
adc
out
push
cmp
jl
and
aaa
std
mov
xor
add
cmp
paddw
dec
add
mov
cmp
je
mov
mov
fld
add
sbb
dec
or
cmp
je
(bad)
xor
xor
add
ja
sub
jp
stc
push
jne
mov
call
ja
adc
repz
mov
(bad)
std
sub
sbb
call
shl
fistp
mov
cmp
pop
sbb
mov
cmp
jg
mov
ja
dec
add
mov
inc
or
jle
jne
adc
sbb
(bad)
xchg
jmp
sub
out
cmp
imul
add
add
add
mov
adc
fld
fstp
jmp
adc
pop
mov
mov
add
jmp
sbb
jmp
test
jmp
movzx
add
push
xor
add
call
sbb
mov
add
add
mov
sbb
push
adc
adc
rcl
cmps
je
adc
add
xchg
add
jmp
jmp
sbb
add
add
dec
add
jge
sahf
pop
adc
pop
adc
int3
sbb
mov
add
cld
or
int
in
sub
gs
dec
mov
mov
(bad)
push
cs
mov
jne
lea
pop
jmp
(bad)
and
ffreep
inc
mov
mov
data16
inc
lea
dec
adc
test
loopne
or
cmp
cmp
(bad)
jmp
adc
jne
push
pop
or
inc
mov
and
mov
and
aas
fsubr
add
or
out
mov
dec
mov
lock
fadd
je
push
push
push
cmp
std
fwait
loop
push
mov
in
mov
lea
sbb
cld
sub
test
jne
jnp
or
lock
mov
or
pop
fistp
jno
or
mov
outs
cmp
push
movzx
and
sub
cmps
pop
dec
push
push
cld
dec
push
cmc
dec
push
dec
or
ss
jmp
popa
out
call
push
(bad)
pop
int3
jmp
push
push
sbb
cmp
push
fst
int3
inc
mov
ds
jbe
mov
push
cmps
cmps
inc
mov
or
inc
shl
adc
sbb
push
retf
inc
adc
test
idiv
das
or
mov
add
cmp
ja
lea
fild
pop
fsubr
mov
jmp
sbb
cmp
jb
paddb
clc
mov
jmp
ror
lock
or
fs
mov
or
push
fld
fstp
dec
outs
sbb
(bad)
jb
lea
es
aam
jmp
push
shl
inc
push
jmp
inc
xchg
sar
por
test
je
mov
push
call
jmp
push
inc
or
dec
sub
adc
inc
mov
mov
pop
adc
aas
cmp
add
xor
out
clc
dec
add
test
dec
push
xchg
mov
(bad)
and
je
sahf
add
sub
mov
loop
dec
add
and
jecxz
or
or
and
call
xor
inc
popf
add
xor
xchg
loope
daa
pop
aas
adc
xor
dec
or
(bad)
push
mov
mov
leave
mov
mov
mov
mov
mov
mov
mov
lock
je
cmp
fsubrp
sub
xlat
push
(bad)
ror
inc
clc
sbb
mov
cmp
xor
(bad)
cld
xchg
or
inc
inc
or
jo
je
and
(bad)
push
push
cmp
xor
jmp
test
repz
cs
mov
push
jnp
mov
out
add
icebp
jmp
jmp
adc
icebp
cmp
test
mov
cmps
or
hlt
or
sar
push
pop
fnstcw
jno
mov
jne
push
loope
loopne
add
cmp
test
inc
fs
and
xlat
cmp
jne
cmp
je
pop
icebp
popa
push
add
sbb
sub
add
ja
mov
inc
lea
inc
les
inc
clc
mov
mov
push
jle
jo
lock
pop
hlt
or
mov
push
mov
test
jbe
mov
add
pop
(bad)
(bad)
sub
daa
jge
mov
add
neg
sbb
iret
jo
sbb
cmps
loop
push
out
sub
or
and
jmp
sbb
and
add
mov
repz
add
push
push
shr
push
push
(bad)
jmp
or
push
pop
ret
pop
pop
pop
add
mov
sub
mov
push
dec
ret
mov
mov
mov
nop
fdivr
test
je
call
jbe
leave
adc
xor
or
loopne
push
push
mov
test
mov
sbb
or
push
test
ja
sub
cmc
sti
mov
mov
(bad)
jns
in
push
inc
push
inc
clc
xor
cmp
jne
mov
test
adc
nop
mov
iret
test
out
js
test
cmp
jne
cmp
jmp
shl
or
std
sti
ja
cmp
lock
jne
push
nop
stos
cs
loope
jle
inc
inc
repnz
sbb
call
out
cwde
xor
jmp
std
xor
pop
xor
sub
ins
add
outs
add
jg
xor
cmp
lock
mov
mov
aas
add
rol
add
fcom
cmps
shl
mov
and
mov
pop
or
sahf
mov
dec
shr
add
adc
mov
adc
adc
fisub
adc
mov
push
sbb
or
adc
push
pop
push
push
xchg
push
out
xchg
adc
loop
pop
add
add
push
adc
adc
xchg
inc
xor
mov
test
sahf
push
and
cmps
inc
pcmpeqd
pusha
js
je
mov
call
pop
cli
aas
dec
cmp
je
mov
or
dec
hlt
pop
push
dec
add
and
xor
aas
or
jbe
test
je
js
loopne
dec
out
ror
iret
mov
out
or
sub
iret
xor
fist
add
cmc
cmp
je
push
push
xor
imul
cmp
pop
mov
pop
mov
sbb
or
js
jle
aaa
xor
push
mov
iret
mov
lock
add
ret
imul
add
jp
cs
mov
add
or
iret
ins
inc
add
add
xor
mov
push
sub
push
gs
push
push
aas
fld
or
pop
pop
pop
pop
mov
(bad)
fisttp
loopne
push
add
mov
jmp
adc
adc
add
inc
or
daa
pusha
or
dec
lock
mov
sbb
(bad)
loopne
jg
jge
jg
and
xor
pushf
mov
lea
jmp
sti
into
add
lea
dec
mov
ins
test
mov
sbb
nop
popf
or
pop
and
cmp
pusha
add
fbld
lss
pop
mov
mov
mov
sbb
mov
fdiv
mov
mov
or
xchg
lahf
lea
mov
dec
out
sub
lea
xchg
push
or
popa
enter
cld
lea
xchg
lea
mov
out
and
call
or
ss
test
in
data16
or
jnp
std
test
movs
jns
pop
and
popa
pop
cdq
(bad)
sub
dec
in
jmp
jecxz
gs
xchg
lea
mov
cwde
pop
es
sub
xchg
jmp
cmp
add
lea
outs
(bad)
sahf
and
mov
lds
or
shl
(bad)
pop
lea
scas
mov
mov
mov
int3
outs
sahf
out
xor
push
(bad)
xlat
fsub
out
push
popa
gs
repnz
invd
mov
out
pop
add
dec
or
cmp
or
pusha
xchg
xor
(bad)
scas
rcl
sbb
or
out
test
loopne
jg
out
mov
icebp
test
inc
lea
xlat
sbb
(bad)
dec
mov
mov
sub
sbb
cld
fild
fdiv
aam
cmp
mov
fdivr
push
mov
adc
add
lea
or
enter
iret
sbb
jnp
push
xlat
jno
push
lea
pop
mov
or
call
ja
push
mov
scas
mov
mov
lea
repnz
lea
push
push
and
or
dec
adc
add
push
mul
add
push
sar
pushf
mov
xchg
outs
aas
xchg
hlt
js
in
mov
out
bound
shl
dec
sysret
mov
cwde
cmp
add
(bad)
mov
adc
or
sub
ins
js
aas
test
add
lea
(bad)
mov
add
mov
test
test
pop
sub
pop
sets
addr16
ja
nop
popa
fmul
lock
ja
mov
jle
pushf
add
lods
int3
mov
(bad)
fcomp
add
lds
and
jne
retf
xchg
add
mov
test
mov
ret
ror
call
pop
add
gs
or
lock
or
push
add
lods
mov
pusha
sub
les
add
pop
or
xchg
cdq
add
mov
stos
cdq
mov
dec
aaa
lock
or
int
adc
or
cmps
cmps
or
mov
dec
mov
or
add
or
test
xor
push
add
mov
cmp
nop
mov
and
and
in
sub
mov
or
or
sub
nop
or
sar
sbb
movs
add
add
(bad)
(bad)
fld
sbb
cld
test
xor
xchg
add
inc
js
push
shr
icebp
or
push
cld
mov
add
dec
pop
pop
cmp
sub
push
sbb
test
or
cs
and
or
cs
prefetchw
or
prefetchw
sbb
pusha
mov
loope
xchg
or
mov
or
prefetchw
pusha
mov
or
cs
and
or
cs
prefetchw
or
prefetchw
sbb
pusha
mov
loope
xchg
or
mov
or
ud1
pop
(bad)
mov
mov
or
adc
nop
std
cmovne
add
or
adc
or
mov
push
add
mov
pop
sbb
stos
das
cwde
pop
pop
fwait
rcl
or
pop
sub
ins
shl
test
lea
mov
xchg
lds
daa
adc
pop
dec
jg
sub
or
sbb
or
out
pop
iret
out
pop
jg
fsub
mov
push
(bad)
js
lea
or
mov
fadd
out
fmul
or
imul
sbb
mov
out
xor
ror
mov
adc
je
pop
std
sub
sbb
xlat
or
lods
jo
or
je
in
adc
cmp
mov
lea
pop
sub
int
dec
lods
lea
inc
mov
jo
dec
add
sub
into
add
mov
in
shl
outs
fistp
in
dec
add
inc
pop
(bad)
sbb
bound
repnz
in
es
xchg
jo
xor
fadd
sti
mov
push
ja
sub
and
adc
loop
and
and
(bad)
mov
fwait
enter
xchg
and
out
daa
mov
sysret
out
adc
mov
inc
pop
sbb
out
mov
inc
(bad)
movs
out
or
inc
pop
aas
ins
out
xor
pop
das
pop
mov
add
scas
mov
xor
fadd
pop
ret
das
pop
mov
or
inc
push
pushf
ja
dec
test
mov
cmp
inc
aaa
mov
xchg
mov
dec
xchg
mov
xor
mov
cmp
(bad)
mov
sbb
sub
xor
sbb
and
rol
lods
jle
ret
mov
in
(bad)
cmps
or
nop
jle
jmp
lea
dec
xor
int3
or
or
or
or
mul
mov
lods
and
pop
fsub
xor
mov
out
push
inc
or
sub
cs
pop
or
outs
mov
ja
sub
pushf
or
add
jmp
or
cmp
add
lea
pop
lea
or
add
in
mov
iret
or
add
mov
mov
lea
loop
cs
add
nop
adc
(bad)
adc
nop
mov
lods
sbb
mov
push
scas
int3
mov
mov
xor
inc
mov
add
or
fs
add
add
sbb
nop
or
and
cmp
pop
or
cmp
test
mov
mov
mov
sbb
mov
lea
xor
xchg
retf
bound
adc
xor
inc
dec
or
ret
add
jbe
or
dec
pop
or
pop
mov
scas
adc
out
cwde
pop
popa
cmp
das
mov
or
dec
rol
mov
out
dec
jno
loope
cmp
ror
jmp
xlat
jbe
or
mov
inc
inc
adc
dec
out
fadd
sahf
inc
es
dec
in
imul
mov
outs
sub
dec
or
frstor
popa
pop
call
xchg
aaa
test
inc
pop
xor
or
jnp
or
fnstcw
mov
jp
xchg
adc
push
aaa
inc
or
lahf
ja
mov
and
pop
popa
mov
ret
jg
push
pop
dec
or
(bad)
add
pop
mov
movs
cmp
lahf
pop
lea
cmp
adc
push
test
fisttp
fmul
pop
add
xor
mov
in
push
sub
pop
push
pop
nop
das
jmp
mov
in
add
outs
add
jmp
mov
nop
mov
xor
pusha
imul
xlat
pop
mov
popa
daa
adc
mov
mov
push
ror
ret
test
push
or
ret
or
mov
cwde
xchg
fistp
pop
scas
pop
int3
sbb
jnp
call
lds
jg
push
imul
dec
icebp
lea
xchg
lods
or
sbb
adc
lea
xchg
dec
not
(bad)
ror
sub
retf
ds
or
test
ror
xor
mov
cmp
ss
outs
(bad)
adc
or
xchg
jge
mov
or
fsubr
sar
cs
or
test
and
adc
sub
or
or
cmp
inc
fcom
mov
cmp
call
mov
lock
ficomp
or
cmp
xchg
out
or
sbb
push
sub
sbb
adc
xor
and
mov
(bad)
sbb
sub
fsubr
enter
aaa
lock
sub
aaa
push
or
loopne
mov
dec
adc
popf
add
xchg
or
arpl
ror
mov
popa
aaa
dec
or
hlt
inc
rol
pop
mov
push
out
fucomp
lea
adc
or
jg
hlt
or
dec
lea
or
and
dec
add
xchg
push
push
add
sbb
(bad)
mov
rcr
add
xchg
mov
(bad)
adc
sbb
push
cmp
inc
mov
sub
mov
mov
xchg
out
pusha
adc
and
mov
pop
mov
jo
das
mov
push
xchg
push
sub
lea
cmps
mov
ins
and
enter
test
cld
lds
pop
lods
ror
pop
sub
(bad)
leave
or
dec
bound
fnstenv
push
cdq
mov
adc
or
xchg
pusha
sar
lea
adc
dec
lea
push
mov
arpl
adc
mov
bound
js
pop
ins
push
fwait
mov
movs
or
or
or
or
ins
push
cld
or
ins
or
enter
inc
or
shr
jp
sbb
out
cmp
pop
aas
and
sbb
lods
fs
sub
inc
jb
gs
mov
dec
pop
add
sbb
in
fcom
(bad)
jo
xchg
into
add
das
aaa
mov
cmp
xchg
(bad)
hlt
in
dec
adc
shl
push
adc
(bad)
fsub
sbb
cwde
sbb
adc
mov
popa
imul
sub
pop
inc
or
popf
or
out
lahf
mov
mov
dec
int3
(bad)
cmp
mov
popa
popa
daa
pop
les
je
cmp
pop
aas
mov
jo
aaa
aaa
aaa
fsubr
jle
iret
daa
ins
cmp
outs
retf
push
test
mov
aaa
lahf
sub
aaa
mov
and
call
test
movs
adc
pop
pusha
or
popa
pop
mov
fcom
inc
xchg
xchg
fdivr
inc
jmp
adc
repnz
and
ret
mov
adc
int
inc
mov
mov
(bad)
mov
or
cwde
or
add
or
mov
pusha
adc
add
add
das
or
sub
push
sbb
pop
(bad)
ins
cmp
js
and
inc
or
dec
mov
sti
inc
mov
cmc
bound
mov
xchg
daa
dec
ja
xor
jl
add
pop
fdivr
call
sbb
ja
mov
add
mov
jb
test
aas
inc
jns
das
push
mov
das
addr16
cs
mov
push
arpl
lea
or
mov
cmps
mov
or
aas
or
les
xor
push
dec
dec
mov
ret
ins
popa
cmp
pop
das
inc
ret
or
shl
les
fnstenv
xor
add
mov
pop
das
mov
fsub
call
pop
add
dec
fcom
jge
and
jnp
fcmovb
out
mov
dec
das
hlt
pop
jle
mov
(bad)
cmp
js
(bad)
fld
pop
dec
pop
pop
inc
mov
in
mov
pop
mov
sub
mov
inc
mov
mov
fcomp
lock
in
push
pop
rol
mov
jmp
addr16
add
ret
or
test
xor
or
rol
push
dec
call
mov
xchg
cmp
adc
mov
popa
(bad)
addr16
popf
cmp
cwde
daa
or
push
pop
dec
inc
adc
xor
xor
mov
inc
xchg
sbb
dec
xor
mov
les
push
dec
add
sbb
pop
test
das
or
sbb
and
mov
mov
das
push
xor
xor
mov
add
xchg
dec
movs
nop
mov
add
adc
add
mov
pop
ds
or
sbb
and
mov
scas
wrmsr
push
add
aas
mov
shl
mov
pop
xchg
sbb
lahf
pusha
fs
or
and
push
loopne
jg
pop
cmp
in
add
sub
dec
mov
pop
add
push
(bad)
ror
test
xchg
or
dec
lea
lds
adc
aaa
test
mov
or
dec
push
or
or
or
pop
rcr
add
mov
fistp
lods
sub
(bad)
mov
inc
fild
fwait
and
out
pop
adc
in
pop
bound
pop
sub
dec
out
pop
ins
outs
pop
cdq
jp
cmp
dec
xchg
jge
or
fs
sbb
scas
mov
inc
inc
or
nop
and
inc
movs
add
inc
add
es
pop
aaa
inc
scas
push
inc
sub
iret
addr16
add
inc
adc
and
shl
stos
lahf
cmp
push
aaa
ror
jl
or
mov
add
(bad)
dec
mov
sub
les
lods
adc
mov
test
(bad)
addr16
ja
cmp
psubsb
and
mov
inc
enter
mov
push
in
cdq
mov
aaa
pop
pop
jge
jno
jg
aad
mov
test
cmp
test
mov
mov
mov
add
sub
or
or
and
or
sbb
cs
or
jl
xor
inc
dec
sbb
pop
(bad)
jg
aad
cdq
bswap
inc
mov
cmp
pusha
mov
inc
push
sub
pop
daa
lock
into
cmp
mov
or
xchg
seta
fdivr
mov
or
outs
sbb
and
ins
test
lea
fidiv
lea
fidiv
add
lea
inc
inc
and
sub
pop
lea
sub
or
push
sbb
gs
(bad)
or
and
rol
adc
aaa
or
push
sub
cdq
push
cmc
sbb
lea
jbe
mov
es
dec
test
mov
mov
sbb
adc
aas
adc
xchg
add
and
mov
lea
loopne
add
or
mov
dec
push
mov
into
or
cmp
pop
arpl
mov
pop
sbb
outs
pusha
daa
mov
leave
push
aas
mov
pusha
pop
cmp
loopne
inc
fcomp
pop
(bad)
or
lahf
fcomp
add
push
fsub
mov
jnp
addr16
add
mov
mov
test
(bad)
lock
(bad)
rcr
retf
mov
push
sbb
pop
mov
jg
int3
lahf
mov
inc
and
sub
inc
add
sub
fdivr
mov
in
outs
aas
cmp
aas
or
pusha
push
push
jb
ins
mov
sub
test
push
dec
cmc
ins
or
cwde
mov
(bad)
das
dec
xchg
ja
stos
jo
pop
inc
pop
mov
pop
lods
pop
aas
or
and
out
mov
xchg
out
cwde
dec
pop
popf
or
sbb
pop
movs
movntq
pop
push
test
js
fiadd
xlat
pop
(bad)
in
bound
fist
mov
(bad)
fsub
rcl
push
nop
jnp
loopne
outs
and
push
sbb
rol
pop
shl
pop
pop
pop
mov
or
inc
aas
mov
sbb
pop
enter
xor
mov
sub
or
fdivr
addr16
adc
or
mov
inc
dec
sbb
mov
pop
fdiv
adc
inc
sub
idiv
push
aam
mov
xchg
inc
cwde
or
cs
retf
jo
ret
inc
fldcw
test
add
or
pop
mov
in
sub
lock
mov
jbe
ret
xlat
mov
pop
adc
aas
mov
xchg
call
mov
mov
cmp
or
outs
pop
ret
mov
xchg
xchg
daa
xor
adc
inc
pop
(bad)
std
rcl
mov
pop
sub
mov
xchg
dec
mov
mov
and
cmp
dec
imul
adc
pop
idiv
clc
mov
cdq
or
sbb
cmp
pop
loope
cmp
pop
(bad)
cmp
pop
(bad)
sbb
mov
mov
retf
or
scas
mov
mov
pop
adc
arpl
sub
div
sbb
repz
adc
xchg
cmp
adc
shl
ds
sbb
loope
dec
xchg
mov
imul
inc
and
dec
sub
test
adc
int3
ja
mov
in
frstor
add
ret
push
(bad)
mov
and
mov
or
xor
xor
mov
aaa
pop
stos
loope
js
xor
mov
addr16
rcr
pop
and
mov
pop
adc
out
push
mov
xchg
push
clc
sub
sbb
or
sbb
ja
fxch
dec
push
ret
mov
pusha
sub
xchg
pop
adc
adc
repz
pop
retf
push
inc
adc
mov
fs
scas
add
mov
dec
xor
xchg
aam
fnstenv
daa
outs
rcl
or
es
pop
mov
inc
dec
mul
mov
adc
ins
dec
inc
cwde
adc
cld
(bad)
daa
dec
adc
adc
pusha
std
dec
add
jb
mov
xchg
adc
retf
clc
test
or
or
xchg
sbb
adc
jo
jnp
rcl
scas
cmp
movs
gs
sbb
mov
jo
dec
jbe
sub
aaa
mov
test
and
jg
in
xchg
or
sbb
mov
xchg
movs
pop
or
out
sbb
in
mov
outs
adc
frstor
mov
pusha
dec
and
je
retf
xor
cmp
lea
fnstenv
or
cmps
fstp
rcl
jb
adc
sti
adc
imul
mov
lock
jle
and
int
add
push
mov
push
mov
cmp
or
in
or
xor
dec
mov
retf
daa
xchg
rcr
fidiv
retf
ds
leave
pop
mov
mov
fldenv
rcl
clc
or
mov
push
test
add
mov
fadd
ss
outs
cmps
add
nop
popf
adc
aas
loopne
das
pop
mov
repz
adc
fist
xchg
xor
mov
or
stos
cli
repnz
cmp
sub
jge
pop
mov
mov
add
pop
scas
adc
pop
pop
push
pop
or
and
div
or
cmp
nop
scas
pop
push
and
xor
mov
xchg
daa
jl
inc
adc
in
mov
xor
cli
cld
and
mov
fwait
push
cli
mov
sbb
cdq
dec
push
int
pop
sub
test
je
stos
fs
fcomp
mov
int3
mov
push
lock
pop
lea
ss
jnp
cli
pop
outs
adc
aas
pop
mov
adc
xchg
sbb
jle
adc
bound
sbb
and
pop
cmps
pop
sub
add
mov
lock
scas
ret
mov
test
xor
bound
jne
lds
bound
or
fist
mov
or
repz
add
jne
and
xchg
push
int3
mov
sbb
push
das
loopne
nop
mov
inc
mov
fwait
or
fs
sbb
adc
pop
or
mov
mov
or
sbb
mov
dec
adc
leave
cmp
int3
adc
ja
pusha
push
pop
ror
and
push
add
cmps
imul
test
scas
adc
add
add
add
push
sub
inc
imul
imul
mov
mov
in
or
sbb
sub
inc
into
into
or
clc
iret
or
loopne
imul
imul
imul
add
imul
outs
cmps
imul
out
or
int
add
(bad)
(bad)
cmps
imul
imul
cmps
imul
dec
add
int3
shr
push
out
or
cld
add
aaa
dec
repz
dec
push
ror
and
cmp
(bad)
or
xor
add
dec
mov
sbb
cli
aad
shl
mov
mov
xor
jl
push
cmp
add
xor
aaa
call
retf
dec
shl
fs
xor
shl
cmp
sbb
shl
add
int3
ret
xor
mov
cwde
mov
xor
shl
xor
adc
jl
add
ror
add
rol
stos
xor
shl
mov
inc
xor
xlat
rcl
push
pop
sar
inc
or
call
repz
shl
lock
ret
push
dec
shl
je
dec
shl
mov
jp
dec
shl
dec
and
shl
or
ret
stos
add
(bad)
dec
shl
ins
pop
xor
shl
cmp
add
xor
xlat
cli
outs
out
add
into
ret
xor
mov
xchg
adc
outs
mov
add
push
pop
adc
xchg
pop
sbb
xlat
pop
or
or
iret
xor
rol
mov
xlat
hlt
mov
add
mov
mov
scas
jecxz
or
enter
jae
add
mov
(bad)
or
neg
imul
pop
dec
cmp
adc
repnz
or
out
imul
imul
out
add
retf
fmul
mov
scas
loop
aam
les
call
cmps
stc
cmps
imul
add
enter
call
imul
cmp
out
cmps
and
dec
or
in
loopne
imul
imul
imul
cmps
imul
cmps
imul
xor
or
sub
sbb
or
(bad)
or
lock
imul
imul
cmps
imul
cmps
imul
cmps
imul
imul
sbb
add
pop
fiadd
call
xlat
or
adc
xor
cmps
imul
imul
mov
add
ds
shl
push
fisttp
add
xor
shl
loop
shr
dec
shr
push
push
add
xor
adc
mov
cmp
(bad)
les
call
dec
xlat
hlt
inc
add
add
pcmpeqb
add
jae
pop
mul
or
pop
add
add
xchg
(bad)
arpl
add
cmps
sti
iret
xor
inc
sbb
add
push
out
add
cmps
imul
mov
push
jmp
or
or
add
push
aaa
jnp
fcomp
add
add
inc
add
dec
add
fnsave
mov
dec
add
xor
add
dec
add
call
push
dec
add
dec
add
outs
call
jg
mov
cmps
imul
aam
loope
pop
pop
dec
add
imul
imul
imul
dec
jnp
imul
gs
xor
retf
fs
ins
add
ja
outs
imul
or
jp
(bad)
aas
xchg
popa
inc
jb
popa
je
push
outs
outs
ins
push
xor
popa
jo
std
(bad)
(bad)
jmp
je
push
jb
arpl
jae
xor
jb
je
inc
ins
outs
jae
dec
popa
outs
fs
jmp
xchg
sbb
js
add
outs
sub
push
gs
imul
adc
je
jne
jb
outs
je
push
mov
add
jbe
inc
add
je
je
add
inc
or
std
inc
outs
outs
arpl
dec
je
jo
push
gs
gs
aas
ins
test
outs
fs
push
gs
fs
(bad)
(bad)
fadd
ret
jne
jb
dec
outs
outs
inc
add
ins
je
inc
jns
xchg
aas
or
fs
push
push
outs
sbb
add
mov
dec
add
js
dec
add
adc
dec
add
sub
add
jo
rol
cmp
icebp
stos
pop
dec
pop
aaa
and
pop
hlt
(bad)
cmp
bound
or
sbb
fstp
add
pop
inc
test
push
fs
pop
fidiv
daa
jnp
or
out
mul
xchg
fstp
sbb
mov
cwde
cmp
imul
ret
mov
inc
or
(bad)
lock
pop
xchg
adc
push
pop
out
retf
add
mov
loopne
(bad)
and
xchg
add
pop
inc
in
xor
jae
(bad)
sti
(bad)
popa
(bad)
in
or
(bad)
fdivr
pop
push
outs
pop
ja
enter
pop
jne
pop
push
and
sub
xor
inc
xor
neg
mov
jnp
das
or
mov
fisttp
lods
pop
sbb
iret
and
ror
lsl
loopne
mov
add
mov
mov
mov
inc
arpl
(bad)
call
fadd
(bad)
xor
data16
xor
cmp
cmp
cmp
(bad)
(bad)
push
ss
popa
data16
arpl
xor
xor
mov
retf
rol
(bad)
cmps
mov
mov
(bad)
jmp
add
outs
inc
add
jo
add
arpl
xor
mov
inc
add
pop
add
add
and
mov
pop
pop
add
inc
add
inc
ja
xlat
jne
push
aas
add
pusha
xor
seto
(bad)
(bad)
(bad)
fld
and
aaa
inc
inc
xor
xor
inc
xor
cmp
xor
inc
inc
xor
inc
shl
push
cmp
cmp
rol
mov
shr
aaa
xor
arpl
aaa
xor
xor
xor
arpl
xor
data16
data16
(bad)
aas
fdivr
xor
add
clc
xor
inc
add
aaa
bound
xor
fs
(bad)
(bad)
push
xor
xor
cmp
ss
add
test
ret
out
(bad)
jmp
sar
xor
cmp
ss
inc
inc
xor
bound
or
idiv
jg
ss
cmp
ss
inc
add
mov
mov
out
js
adc
xor
cmp
cmp
inc
xor
sti
(bad)
push
xor
xor
fmul
loop
cmps
(bad)
fdiv
xor
(bad)
cmp
inc
xor
xor
inc
xor
xor
cmp
inc
xor
xor
inc
cmp
mov
xor
sti
loopne
fbstp
(bad)
aad
pop
or
xchg
shl
sub
fsub
inc
sahf
imul
sub
push
add
add
add
pop
add
fwait
int3
ret
or
scas
pop
fcomp
xchg
cmp
add
dec
add
data16
inc
inc
or
mov
stos
ins
xlat
dec
push
or
mov
fmul
lods
pop
xchg
sti
xchg
jae
add
xchg
xor
and
fcom
jb
nop
fmul
push
je
add
add
cmp
adc
lahf
sub
jne
addr16
data16
jne
add
int3
mov
(bad)
mov
mov
mov
push
push
outs
ja
or
add
mov
mov
add
inc
in
dec
jmp
or
inc
repz
dec
test
outs
and
out
add
add
inc
mov
jae
jne
add
add
add
hlt
daa
(bad)
mov
dec
adc
dec
repnz
ins
add
in
clc
lahf
jmp
or
add
mov
xlat
jmp
jb
jne
sub
sub
mov
jnp
mov
loopne
add
add
adc
cmp
test
pcmpeqd
mov
movs
add
je
outs
outs
add
stos
rcl
shr
adc
packsswb
lods
movs
add
push
sbb
dec
adc
mov
rol
push
imul
and
scas
cli
int
ret
mul
ret
mov
(bad)
test
outs
jae
popa
bound
mov
or
jnp
add
pop
or
push
add
imul
daa
sbb
pop
sub
clc
ins
push
imul
popa
outs
xlat
add
ret
pop
je
adc
fbstp
in
add
push
sti
lahf
ins
adc
rcr
add
inc
add
out
(bad)
mov
add
inc
add
fiadd
jo
xor
inc
add
pop
xlat
mov
add
and
je
cmp
das
ja
fadd
cld
push
ins
outs
ins
push
arpl
das
sub
cs
mov
and
add
out
push
sbb
add
jbe
jb
je
je
and
pop
ja
outs
mov
outs
dec
popa
jae
push
gs
inc
(bad)
(bad)
(bad)
(bad)
pop
mov
mov
rcl
mov
ret
stos
ror
retf
mov
enter
sti
ffreep
jmp
mov
xlat
out
rol
and
mov
jl
sti
fxch
clc
mov
mov
mov
push
mov
imul
loope
or
inc
mov
sbb
sbb
popa
sar
inc
pop
shl
mov
push
inc
or
jb
addr16
xor
ins
dec
dec
sbb
retf
es
jo
jae
das
xor
(bad)
(bad)
jmp
cmp
cmp
bound
bound
cmp
jo
or
add
lods
add
add
push
(bad)
(bad)
(bad)
call
inc
push
add
gs
inc
outs
je
add
jp
ins
ins
popa
das
xor
xor
sub
(bad)
(bad)
out
jmp
popa
je
bound
and
dec
inc
and
xor
and
outs
(bad)
(bad)
(bad)
fild
and
xor
and
xor
cs
inc
push
and
push
and
xor
pop
aaa
adc
xor
jg
(bad)
xor
xor
pop
xor
xor
sub
std
(bad)
aas
ss
push
push
push
das
xor
xor
push
gs
jb
out
aas
in
xchg
or
add
inc
arpl
jo
inc
fmul
das
sub
addr16
call
cmp
push
adc
jp
sub
outs
dec
pop
in
(bad)
imul
mov
jo
or
imul
sub
jb
sub
(bad)
out
(bad)
outs
arpl
gs
inc
outs
outs
imul
and
dec
outs
sub
add
add
push
gs
push
add
or
add
in
push
cmp
xlat
add
inc
and
and
std
mov
das
repnz
jge
rol
pop
and
add
cmp
in
aas
cmp
je
add
pusha
popa
bound
je
bound
fild
cmp
popa
ror
shl
jp
ins
das
cmp
and
and
and
ja
xchg
xchg
add
add
mov
mov
add
add
data16
call
aaa
(bad)
and
add
(bad)
add
push
call
call
jmp
mov
add
pop
add
dec
or
sbb
add
mov
fild
inc
pop
enter
mov
mov
add
add
dec
pop
add
loopne
popa
iret
mov
sbb
push
dec
dec
fwait
pop
push
add
ret
fcom
or
daa
push
add
cwde
dec
pop
in
in
dec
push
add
adc
mov
mov
mov
imul
adc
or
lods
push
push
and
xor
out
mov
int
inc
mov
and
jg
pop
add
inc
add
mov
add
sub
xor
into
or
das
in
or
out
repnz
out
mov
fnsave
inc
ret
in
inc
pop
or
jnp
retf
pop
push
ror
sub
pop
jnp
fld
add
add
sub
pop
or
cmp
sub
adc
add
xchg
data16
pop
or
or
sub
xor
and
ret
push
fdiv
xchg
jge
xchg
ja
push
jae
add
mov
repz
aam
scas
mov
(bad)
jg
mov
call
jo
(bad)
ret
add
add
pop
and
mov
sbb
stos
adc
add
push
popa
scas
jnp
cmp
add
pop
add
mov
cmp
loopne
xchg
mov
pop
div
mov
add
pop
test
(bad)
mov
shl
rol
mov
shr
clc
mov
mov
mov
aam
enter
rcl
push
(bad)
dec
retf
aad
ror
(bad)
(bad)
retf
ret
cwde
or
popf
fsub
pop
push
push
and
sub
inc
in
mov
jns
push
add
mov
pop
add
std
ja
add
add
fidiv
mov
iret
ret
mov
sbb
std
(bad)
out
fdiv
cmp
mov
mov
out
jns
add
jmp
add
stos
(bad)
jg
xchg
cld
adc
mov
into
sar
in
ret
or
jmp
(bad)
fidiv
(bad)
scas
xlat
and
rol
jne
pop
pop
add
stos
lods
out
add
(bad)
dec
push
jmp
mov
iret
ret
ret
push
push
call
mov
mov
cli
adc
or
cmp
popa
outs
fs
outs
cs
popa
rcr
ret
inc
loopne
mov
(bad)
pop
test
dec
xchg
cmp
stos
or
rcr
push
jo
das
dec
sub
or
not
int3
std
sbb
xbegin
out
sbb
sbb
loopne
das
jnp
add
and
or
lods
jae
lods
loopne
aas
pop
add
pop
test
out
pop
and
pusha
pop
inc
add
(bad)
(bad)
push
sbb
inc
sub
mov
pusha
jb
add
sub
jb
dec
add
neg
push
xor
add
cmp
pop
ja
add
add
dec
add
pop
fistp
jge
cmp
jg
xchg
sbb
cmp
out
add
inc
add
jo
cdq
add
pop
ud0
fld
sbb
outs
inc
icebp
dec
add
mov
int3
adc
adc
adc
mov
outs
or
popw
xchg
add
nop
test
pusha
or
clc
and
add
dec
aaa
xor
pusha
xchg
xchg
jo
pop
sbb
or
imul
rcl
sub
jnp
xlat
inc
stos
loopne
icebp
lsl
or
loopne
inc
add
mov
ror
xor
and
ret
pop
push
mov
cmp
xor
mov
add
add
xor
or
loopne
inc
add
adc
fadd
pop
push
push
sar
xchg
les
add
xchg
call
adc
call
cmps
adc
add
ror
loope
(bad)
lahf
jo
add
call
xchg
fldenv
test
pop
imul
and
xchg
sub
xor
add
lock
cmp
out
push
in
and
and
lock
inc
add
cmc
das
xchg
mov
out
inc
add
ds
in
pusha
adc
pop
shr
jmp
add
or
add
push
and
lsl
loopne
inc
add
adc
pop
or
add
pop
(bad)
mov
fbld
cld
add
push
xchg
pop
nop
xchg
inc
add
xor
cmps
xor
out
adc
mov
xchg
addr16
adc
test
dec
adc
or
inc
mov
ja
mov
repnz
(bad)
jle
cmp
push
add
clc
and
(bad)
xor
dec
daa
xor
loopne
or
mov
aaa
add
dec
add
mov
inc
add
push
add
or
mov
inc
adc
add
pop
mov
adc
ror
dec
lahf
js
adc
sbb
das
mov
push
or
adc
push
pop
add
int
clc
adc
js
jle
pop
jae
or
cwde
pop
pop
mov
fiadd
pop
lahf
add
aaa
pop
push
mov
sbb
pop
data16
or
ret
scas
or
mov
ja
pop
stc
add
repnz
and
mov
daa
and
shl
inc
das
cdq
pop
pop
and
rol
call
mov
sbb
ret
add
jae
aaa
push
push
fsub
fbstp
mov
mov
adc
pop
xor
xchg
and
mov
pop
sar
call
dec
inc
retf
test
lock
push
ja
mov
add
retf
scas
xor
xor
cmp
scas
nop
pop
inc
add
adc
or
nop
aaa
sbb
in
add
dec
pop
retf
dec
sbb
inc
xchg
inc
das
nop
fdiv
xor
pop
ins
jp
ret
aas
pop
lock
adc
xlat
and
aaa
jo
adc
jmp
pop
mov
sbb
ud0
adc
addr16
adc
daa
ror
mov
mov
loopne
rcr
and
or
xor
test
and
fld
add
pusha
pop
and
pop
sbb
arpl
or
add
push
push
pop
mov
inc
xor
lock
shr
data16
fcom
(bad)
shl
out
push
scas
pop
mov
or
inc
inc
ja
xor
pusha
pop
int3
mov
pop
push
add
dec
arpl
call
cs
(bad)
rcl
sbb
pop
inc
jle
cmp
pop
mov
pop
popw
push
jbe
sbb
scas
dec
xchg
ffreep
adc
loope
int3
cmp
push
mov
mov
out
pusha
inc
add
pop
pop
mov
test
pop
or
fidivr
jo
mov
in
cmp
jb
add
gs
cmps
push
push
push
xor
add
in
or
mov
pop
daa
cmp
sbb
or
jecxz
push
pop
pop
mov
pop
out
add
mov
jnp
add
cli
dec
add
dec
add
sbb
outs
fadd
inc
add
cwde
out
and
lock
jmp
scas
cmp
xor
loopne
popa
icebp
and
out
clc
add
or
fbstp
inc
add
imul
pop
mov
add
pop
inc
pop
push
inc
pop
or
add
adc
nop
call
add
jg
das
in
(bad)
and
or
addr16
mov
or
and
add
pop
ins
and
cmp
stos
add
pop
pop
cdq
xlat
and
jo
leave
adc
inc
inc
xchg
sbb
outs
js
pusha
push
sub
and
aas
adc
lahf
add
ffreep
int3
add
add
loopne
and
dec
pop
or
call
pop
fadd
mov
jg
pop
inc
(bad)
xor
or
pop
pusha
dec
ins
fs
adc
or
out
adc
pop
inc
(bad)
shl
dec
outs
pusha
push
push
and
in
mov
pop
and
inc
jo
add
xchg
addr16
cmp
or
mov
dec
fwait
aas
mov
cwde
adc
jg
test
add
rcl
adc
(bad)
fdiv
loopne
pop
int3
add
add
inc
add
pusha
mov
lahf
inc
pushf
not
test
pop
or
pop
ins
or
jmp
sub
out
sbb
nop
not
adc
mov
inc
add
inc
add
(bad)
dec
add
mov
jl
add
push
fistp
dec
mov
dec
add
dec
add
rcr
add
pop
xlat
jne
hlt
or
add
cli
or
neg
popa
iret
pop
sub
or
adc
add
out
(bad)
in
jg
push
dec
add
arpl
sub
or
add
outs
dec
add
fnstsw
stc
adc
add
xchg
inc
add
mov
xlat
std
ja
ins
jae
add
pop
dec
add
imul
es
(bad)
mov
(bad)
imul
lock
inc
add
test
add
enter
test
scas
ret
add
dec
adc
add
idiv
mov
ret
add
dec
add
mov
add
inc
pop
and
sar
xchg
mov
in
mov
out
mov
pop
and
jnp
mov
inc
add
add
inc
add
inc
add
out
outs
xor
inc
add
punpcklbw
pop
lock
cli
fwait
scas
sti
pop
nop
pop
mov
loopne
(bad)
dec
add
cmps
dec
xor
add
push
jg
add
and
pusha
daa
jno
dec
add
inc
repz
inc
test
inc
add
or
retf
test
imul
dec
mov
add
ds
add
pop
sub
add
or
shl
iret
rcr
dec
js
sub
mov
(bad)
out
and
loopne
inc
add
mov
inc
add
or
cmc
pop
scas
mov
neg
dec
add
mov
inc
jmp
sub
add
pop
call
das
adc
mov
neg
dec
aas
add
mov
inc
das
or
icebp
add
inc
add
or
aaa
inc
mov
adc
sti
and
inc
sub
in
push
xchg
adc
bound
cmp
inc
scas
inc
arpl
mov
and
and
or
push
pusha
into
inc
mov
and
xchg
inc
pop
inc
add
xor
int3
adc
pop
or
add
lock
lock
inc
add
jmp
nop
outs
mov
fs
gs
mov
rcr
nop
fdiv
aas
lock
jmp
lods
inc
unpcklps
aas
jo
dec
jl
cmps
inc
movups
les
xor
rol
xor
rol
mul
inc
icebp
push
in
or
push
inc
or
cmps
cmp
add
aaa
pusha
movs
dec
mov
nop
stc
sub
mov
add
pop
mov
dec
adc
jmp
mov
(bad)
lock
idiv
dec
scas
pusha
aaa
mov
shl
pop
lds
push
mov
lock
addr16
pop
cmps
test
add
and
aaa
adc
nop
aaa
mov
je
ror
inc
das
pusha
xor
add
inc
scas
mov
cdq
loopne
or
mov
jo
push
jae
pop
addr16
pop
xchg
dec
or
pop
adc
or
or
cmps
aaa
sar
cwde
aaa
fsubrp
cmp
adc
std
outs
push
sbb
push
mov
pop
pusha
inc
inc
mov
jo
retf
jle
pop
add
nop
sbb
add
fdiv
fist
and
popf
mov
pusha
adc
in
(bad)
push
dec
out
or
and
mov
mov
aas
test
pop
out
dec
add
fsubrp
adc
add
add
dec
add
ret
sub
add
cmp
scas
dec
add
test
lock
mov
dec
add
jo
inc
add
jg
(bad)
rol
push
sbb
jg
jge
xlat
aad
push
and
pop
das
das
nop
xlat
sbb
add
cmp
mov
inc
xor
and
adc
call
mov
add
ror
add
(bad)
fsub
js
add
add
jo
and
or
sub
mov
(bad)
sbb
sbb
out
sub
push
push
nop
pop
sbb
add
lds
enter
add
add
sbb
loopne
inc
add
xor
inc
xor
or
lahf
add
cdq
cmp
adc
inc
add
adc
xchg
sti
hlt
pop
repz
add
mov
add
inc
and
out
pop
inc
add
add
pop
das
inc
fnsave
jnp
les
dec
and
fcomi
cmp
mov
(bad)
pop
lock
add
daa
inc
add
inc
add
adc
dec
pop
push
jge
jae
xor
cmps
mov
pop
(bad)
xor
das
xor
gs
add
cmps
mov
mov
das
adc
jmp
add
iret
lock
repz
add
scas
test
lahf
lock
add
add
pop
test
fild
add
add
das
jmp
xchg
scas
push
arpl
mov
aas
pusha
daa
sub
add
ja
outs
inc
add
or
adc
dec
mov
xchg
xchg
ins
fwait
outs
push
sub
jbe
outs
fadd
leave
add
and
out
mov
outs
mul
outs
add
icebp
rcl
inc
add
inc
add
outs
fistp
inc
inc
bound
dec
popa
jb
inc
jo
pop
jns
dec
jne
add
jne
or
push
gs
dec
arpl
outs
jbe
inc
arpl
add
add
call
sub
jne
add
pop
add
es
add
fist
adc
adc
add
lods
scas
mov
add
add
(bad)
fadd
sbb
add
(bad)
call
sub
(bad)
out
shr
mov
or
add
pop
add
(bad)
cmp
repnz
in
inc
js
cmp
mov
dec
and
aaa
(bad)
pop
leave
cmp
repz
(bad)
(bad)
fist
mov
fsubr
cmp
add
js
data16
imul
(bad)
(bad)
jmp
sub
and
js
mov
push
xor
int
sub
push
sub
pop
mov
mov
(bad)
xlat
push
mov
imul
push
pop
rcr
or
add
pop
mov
push
test
push
movs
sbb
pop
or
jmp
pusha
cld
repz
add
sahf
repnz
and
(bad)
(bad)
mov
add
push
add
ja
mov
lahf
add
add
add
add
add
(bad)
(bad)
(bad)
inc
push
add
mov
stos
add
add
add
add
add
jge
movs
add
add
add
(bad)
(bad)
(bad)
inc
mov
in
sbb
add
add
add
in
add
mov
(bad)
(bad)
(bad)
inc
xchg
pop
fld
sub
jp
retf
or
enter
jns
aad
xor
xchg
or
or
mov
or
or
pop
push
int3
push
cmp
scas
mov
xchg
adc
adc
adc
adc
(bad)
call
adc
adc
mov
inc
pop
rcl
data16
sbb
sbb
push
sbb
sbb
(bad)
(bad)
(bad)
call
inc
pop
icebp
pop
mov
and
and
and
and
jmp
mov
(bad)
(bad)
jmp
jnp
inc
sub
jecxz
mov
mov
adc
xor
imul
xor
and
cmp
cmp
cmp
or
inc
sbb
inc
xor
push
(bad)
(bad)
(bad)
inc
inc
jl
xchg
dec
mov
iret
dec
lock
adc
dec
popa
push
mov
push
jmp
push
xchg
(bad)
(bad)
(bad)
call
pop
cmp
pop
or
pusha
sahf
popa
in
bound
fs
gs
imul
(bad)
(bad)
(bad)
jmp
outs
lea
jno
jae
je
jbe
ja
jns
jp
jl
jge
jg
add
sbb
(bad)
inc
sbb
out
mov
xchg
xchg
xchg
call
(bad)
(bad)
call
cld
movs
ret
test
stos
and
scas
mov
mov
mov
mov
(bad)
(bad)
(bad)
mov
mov
movs
les
xchg
int3
xchg
into
cdq
shl
(bad)
int3
fsub
(bad)
(bad)
(bad)
(bad)
(bad)
fcom
fild
loope
jecxz
in
out
jmp
dec
lock
hlt
cmc
div
stc
je
mov
(bad)
(bad)
inc
or
movs
sbb
and
sub
sub
sub
cs
(bad)
(bad)
(bad)
push
adc
mov
inc
xor
mov
adc
cmp
lea
inc
icebp
inc
sbb
(bad)
(bad)
(bad)
inc
inc
jb
xchg
dec
lahf
dec
movs
dec
cmps
dec
movs
dec
lahf
dec
xchg
push
mov
push
gs
dec
push
xor
(bad)
call
push
xlat
push
mov
mov
pop
ss
pop
pop
xlat
pop
movs
pop
outs
pop
cmp
pop
les
popa
dec
bound
(bad)
(bad)
(bad)
jmp
arpl
lods
popaw
addr16
imul
imul
fldcw
sub
(bad)
(bad)
jmp
outs
jne
sbb
jo
jno
jno
jb
jae
jae
je
jne
jne
jbe
jbe
ja
(bad)
(bad)
(bad)
(bad)
js
js
jns
jns
jp
jp
jnp
jl
jl
jge
jge
jle
jle
jg
jg
cmp
(bad)
(bad)
inc
xchg
sbb
and
stos
test
test
xchg
xchg
mov
(bad)
(bad)
(bad)
dec
mov
sub
mov
lea
mov
in
(bad)
fs
(bad)
(bad)
(bad)
call
cmp
xchg
xchg
or
xchg
rcl
and
xchg
xchg
add
(bad)
(bad)
call
dec
cdq
mov
call
inc
pushf
mov
sbb
pop
sahf
ret
(bad)
call
sti
lahf
arpl
cdq
mov
retf
mov
sti
mov
daa
(bad)
(bad)
(bad)
jmp
push
cmps
mov
pop
cmps
jns
(bad)
(bad)
test
test
sub
(bad)
jmp
pop
lods
mov
lods
shr
jmp
scas
pop
mov
mov
(bad)
(bad)
(bad)
push
and
xor
cmp
xchg
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
push
lods
mov
mov
push
mov
pop
mov
pop
mov
add
mov
add
sti
mov
hlt
mov
jmp
cmp
shl
(bad)
(bad)
inc
add
shl
pop
ret
addr16
mov
pop
les
cmps
(bad)
test
lds
(bad)
(bad)
inc
add
(bad)
sbb
mov
enter
leave
mov
xlat
leave
and
jo
mov
(bad)
dec
push
retf
mov
int3
test
ror
sbb
data16
int
int
into
xchg
into
fmul
es
jo
mov
iret
add
dec
rcr
shl
rol
ror
xchg
shl
shr
shl
mov
(bad)
(bad)
(bad)
call
xchg
aam
aam
aad
aad
aad
aad
(bad)
test
retf
(bad)
adc
pop
xlat
lahf
xlat
in
sub
jb
mov
fdivr
fadd
fxch
fst
pop
ficomp
fld
mov
neg
cmp
sbb
fmul
(bad)
(bad)
(bad)
(bad)
fisttp
xchg
fst
fstp
ficomp
fsubp
fisub
fild
lods
fcomip
fbstp
loopne
loopne
loopne
loopne
(bad)
(bad)
(bad)
jmp
and
loope
loop
loop
loop
loop
jecxz
jecxz
jecxz
jecxz
in
in
in
in
in
(bad)
(bad)
(bad)
jmp
call
out
out
out
out
out
out
out
call
fucomp
sbb
(bad)
(bad)
jmp
sbb
pop
jmp
push
jmp
jmp
jmp
in
dec
in
mov
int3
in
or
dec
(bad)
(bad)
(bad)
(bad)
in
xchg
(bad)
in
add
inc
out
jle
mov
out
je
mov
out
out
sub
push
lock
(bad)
(bad)
(bad)
push
pop
icebp
cwde
icebp
aad
adc
dec
repnz
(bad)
repnz
aas
repz
mov
repnz
push
cmps
hlt
loope
(bad)
(bad)
push
sbb
cmc
iret
cmc
or
inc
test
xor
ins
mul
clc
push
clc
nop
(bad)
(bad)
(bad)
(bad)
clc
retf
clc
add
stc
mov
in
stc
daa
cli
popa
cli
fwait
cli
aam
push
sti
dec
sti
cmp
sub
cld
data16
mov
std
dec
std
test
mov
(bad)
data16
lahf
(bad)
xlat
(bad)
adc
dec
inc
(bad)
(bad)
dec
leave
sahf
xor
inc
inc
cmp
xor
das
cs
daa
daa
es
jmp
and
and
and
pop
pop
push
push
push
sbb
sbb
sbb
sbb
mov
adc
adc
adc
test
push
and
enter
test
dec
or
test
pop
and
pop
call
cmps
loopne
add
sar
(bad)
fbld
sbb
mov
inc
add
xor
cmc
imul
outs
inc
(bad)
out
(bad)
popf
mov
out
inc
adc
add
bound
inc
add
std
(bad)
dec
dec
add
dec
inc
add
inc
push
add
dec
push
add
inc
inc
rol
iret
(bad)
mov
add
not
into
jnp
mov
daa
inc
pop
pop
cmp
add
popa
add
test
pop
jo
inc
pop
neg
pop
pop
inc
aaa
pusha
fbstp
add
xor
pop
out
in
cmp
pop
add
sahf
cmp
pop
or
out
add
das
and
or
pop
add
fild
out
das
nop
sub
inc
add
ror
xor
repnz
lock
add
and
jnp
mov
inc
dec
pop
add
push
test
jl
or
add
mov
test
loopne
out
or
pop
inc
sub
neg
gs
das
add
adc
push
push
mov
not
and
and
retf
ret
xchg
inc
inc
mov
xlat
mul
out
or
add
inc
add
jno
jg
(bad)
jg
aas
aas
stos
push
pop
push
fdiv
xor
add
push
(bad)
(bad)
(bad)
inc
cmp
jbe
cmp
loopne
rcl
mov
jl
xor
out
cmps
(bad)
dec
aaa
fcos
(bad)
(bad)
(bad)
aas
cmps
push
retf
mov
inc
mov
in
sahf
cmp
movs
aas
mov
daa
sar
sar
mov
and
ins
cmp
jnp
scas
inc
loope
test
mul
pop
xor
pop
jmp
cmp
lahf
cmp
fadd
cmp
add
loope
jg
mov
pop
and
add
nop
xchg
das
xchg
inc
pop
or
add
pusha
pop
pop
(bad)
gs
inc
add
cmp
in
add
nop
ret
add
shl
sahf
or
repnz
lock
mov
xlat
pop
das
add
or
and
add
mov
inc
fadd
push
inc
inc
add
add
xlat
rol
loop
mov
nop
inc
inc
inc
inc
inc
xor
xor
pop
mov
(bad)
adc
or
mov
inc
mov
jo
test
mov
(bad)
fisttp
invd
cdq
sti
xchg
pop
push
inc
push
add
cli
stos
(bad)
adc
xchg
ret
ins
pop
mul
push
inc
add
std
xchg
int
loopne
push
add
push
outs
and
fidivr
jge
add
and
inc
dec
out
jnp
js
and
stos
out
arpl
mov
cmps
sar
ja
pop
addr16
adc
mov
jae
add
enter
inc
imul
inc
or
sar
and
xor
xlat
adc
hlt
jb
fisttp
jecxz
mov
jmp
aaa
jl
int3
mov
bound
pop
add
add
lahf
pop
xor
ret
xor
inc
cli
xor
lahf
and
or
xchg
mov
mov
jg
jno
pop
pop
xlat
dec
and
push
jb
das
inc
pop
sbb
pop
push
adc
pop
cmps
dec
pop
rcl
das
xor
xchg
adc
mov
(bad)
jnp
add
pop
shl
loopne
inc
mov
mov
xchg
idiv
pop
add
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
fdivr
rcr
pop
xchg
xor
ja
(bad)
(bad)
jmp
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
(bad)
(bad)
call
jmp
rcl
mov
sub
mov
sbb
(bad)
(bad)
(bad)
dec
mov
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
(bad)
jp
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
(bad)
(bad)
(bad)
call
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
(bad)
(bad)
inc
popa
sar
and
mov
cdq
xchg
mov
mov
or
(bad)
push
jmp
outs
das
adc
stos
sbb
data16
inc
fdiv
jno
add
(bad)
(bad)
(bad)
mov
adc
out
mov
mov
movs
in
lahf
xor
mov
js
stc
add
(bad)
(bad)
(bad)
dec
cwde
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
(bad)
(bad)
(bad)
fdiv
test
(bad)
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
(bad)
(bad)
(bad)
jmp
cld
fistp
ficom
gs
aam
pop
popa
mov
into
push
mov
(bad)
(bad)
(bad)
push
mov
inc
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
(bad)
(bad)
inc
lods
sar
add
in
add
pop
dec
or
cmp
add
daa
(bad)
(bad)
(bad)
call
adc
mov
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
(bad)
(bad)
(bad)
jmp
cwde
shl
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
dec
mov
call
jmp
fild
push
fdiv
or
test
fs
(bad)
(bad)
(bad)
(bad)
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
(bad)
jmp
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
pop
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
(bad)
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
(bad)
(bad)
(bad)
push
dec
add
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
jmp
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
call
push
pop
cmps
call
ret
shl
sbb
ret
es
(bad)
(bad)
(bad)
call
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jmp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
(bad)
(bad)
(bad)
(bad)
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
(bad)
(bad)
(bad)
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
(bad)
(bad)
(bad)
call
dec
ret
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fcos
(bad)
(bad)
jmp
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
(bad)
push
xchg
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
(bad)
sti
(bad)
(bad)
inc
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
mov
lahf
inc
add
mov
mov
add
shl
xor
jecxz
cmp
call
mov
lock
or
dec
push
rcr
rol
inc
int3
fmul
je
xor
add
lock
inc
lock
xchg
neg
add
add
jp
xor
jnp
bound
pop
and
and
jp
push
inc
lahf
add
add
add
add
or
or
mov
rol
adc
aam
add
or
pusha
loopne
nop
push
shl
mov
lock
push
call
cmp
inc
les
fs
xchg
push
aam
mov
hlt
or
dec
int3
sub
ins
(bad)
(bad)
(bad)
(bad)
in
sbb
pop
fdivr
jl
add
(bad)
adc
jb
or
push
(bad)
(bad)
(bad)
jmp
jp
push
xchg
cmps
data16
xchg
push
(bad)
ss
test
dec
into
cs
outs
(bad)
(bad)
(bad)
(bad)
out
push
sahf
pop
fidivr
mov
inc
shl
popa
loope
xchg
push
shl
mov
icebp
or
imul
sbb
jns
add
movs
gs
xchg
push
aad
mov
cmc
or
lods
ins
(bad)
(bad)
(bad)
(bad)
in
sbb
mov
inc
ret
and
push
shl
mov
repz
imul
(bad)
(bad)
jmp
fwait
pop
fstp
mov
inc
(bad)
daa
cmps
addr16
xchg
push
xlat
aaa
mov
test
scas
outs
(bad)
(bad)
(bad)
(bad)
out
pop
lahf
pop
fistp
mov
add
push
nop
shl
pusha
mov
lock
test
adc
xchg
(bad)
(bad)
(bad)
call
and
movs
in
je
hlt
or
enter
fsubr
push
mov
int3
sbb
pushf
(bad)
(bad)
(bad)
(bad)
fsubr
lods
in
cmp
mov
rcl
xchg
shl
popa
mov
icebp
add
push
xchg
(bad)
(bad)
(bad)
call
and
jne
cmc
or
leave
sbb
fldcw
imul
int
pop
popf
(bad)
(bad)
(bad)
(bad)
(bad)
jge
std
add
ret
xchg
shl
bound
repnz
inc
xchg
push
push
xchg
(bad)
(bad)
(bad)
call
data16
out
jbe
test
mov
sbb
fisubr
push
jmp
mov
push
pop
sahf
(bad)
(bad)
(bad)
(bad)
fisubr
outs
scas
out
ds
inc
inc
add
push
xchg
shl
arpl
repz
inc
xchg
pop
push
xchg
(bad)
(bad)
(bad)
call
daa
cmps
out
ja
test
pop
fld
imul
cmovg
(bad)
(bad)
(bad)
(bad)
fild
outs
scas
out
aas
jg
inc
adc
xor
pusha
jo
nop
mov
lock
and
inc
push
popa
(bad)
(bad)
(bad)
push
xchg
mov
icebp
add
and
inc
push
bound
xchg
mov
repnz
and
inc
push
arpl
(bad)
(bad)
push
xchg
mov
repz
and
inc
push
fs
xchg
movs
mov
aam
hlt
add
push
gs
(bad)
(bad)
push
xchg
movs
mov
aad
cmc
push
push
es
push
data16
xchg
cmps
mov
(bad)
out
pop
pop
daa
aaa
inc
push
addr16
(bad)
(bad)
push
xchg
cmps
mov
xlat
out
or
sub
dec
pop
push
mov
or
sub
dec
pop
imul
mov
jmp
cmp
mov
jmp
sbb
cmp
imul
stos
mov
or
sub
dec
pop
ins
jl
pushf
lods
mov
or
sbb
ins
jge
popf
lods
mov
push
push
cs
pop
outs
jle
sahf
scas
mov
ud2
and
call
das
aas
dec
pop
outs
jg
lahf
scas
mov
out
(bad)
dec
icebp
push
imul
jae
jo
inc
dec
add
mov
pop
jae
push
jae
dec
push
add
inc
push
mov
je
sub
dec
dec
inc
add
dec
shl
daa
mov
cmps
push
addr16
inc
cmps
or
adc
test
addr16
xchg
cmp
addr16
mov
rol
add
add
popa
add
ror
pop
or
sub
xchg
push
xlat
xchg
loopne
adc
(bad)
pop
(bad)
(bad)
es
movs
mov
rol
ret
pop
(bad)
(bad)
dec
add
fs
popa
je
and
xor
xor
inc
outs
jo
jb
addr16
mov
xor
dec
gs
outs
sub
and
imul
xchg
nop
ins
inc
mov
jnp
out
jnp
add
or
push
add
add
int
pop
add
add
inc
sub
adc
or
sbb
or
jns
mov
add
add
mov
adc
shl
xor
imul
push
mov
ja
addr16
cmp
sbb
add
jle
inc
sub
sbb
push
add
adc
cmp
mov
lahf
sub
(bad)
add
sub
aad
sub
out
cmp
and
adc
cmp
lods
add
xchg
es
test
dec
adc
add
or
cmp
es
xlat
xor
add
shl
add
pop
or
add
dec
shl
das
aaa
retf
xor
add
adc
lea
xor
ret
jecxz
dec
mov
loopne
push
jo
cmps
jmp
add
add
icebp
push
xchg
imul
add
cmp
clc
lock
call
lea
(bad)
(bad)
call
lds
push
inc
dec
add
xor
pop
and
jae
push
(bad)
(bad)
mov
sbb
ins
push
bound
sub
bound
bound
inc
dec
(bad)
jg
(bad)
and
mov
aas
dec
xor
cmp
and
sbb
(bad)
(bad)
jmp
or
inc
sub
aaa
sbb
adc
adc
ret
adc
adc
or
or
lock
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
inc
push
(bad)
aas
stos
adc
shl
ficomp
cmp
jmp
(bad)
(bad)
inc
jnp
push
loope
pop
stos
jb
push
test
aas
add
xor
or
cmp
add
xor
bswap
aas
inc
push
jl
inc
mov
(bad)
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
call
pop
mov
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
(bad)
(bad)
(bad)
call
push
stos
imul
add
xor
push
into
inc
shl
or
inc
(bad)
(bad)
(bad)
push
jle
inc
mov
lea
jge
loop
shr
out
push
fisub
loope
shr
(bad)
(bad)
(bad)
(bad)
call
pop
mov
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
dec
(bad)
(bad)
(bad)
(bad)
mov
jbe
dec
mov
jne
jmp
sub
sbb
and
push
js
call
push
test
gs
push
call
mov
jb
and
loope
clc
inc
fs
gs
and
movs
(bad)
inc
cmp
dec
scas
daa
idiv
lock
(bad)
adc
sti
out
ret
adc
push
mov
jae
scas
and
fidiv
ret
or
pushf
retf
inc
div
in
sub
jnp
jnp
mov
add
rol
jne
neg
jnp
add
push
dec
aas
xor
pop
fidivr
xlat
imul
jmp
xlat
push
scas
add
xlat
sub
cmp
xlat
xor
add
add
loope
retf
add
inc
sbb
add
xchg
mov
arpl
dec
pop
xor
pusha
cmp
inc
sbb
dec
jnp
jp
aas
sahf
add
pop
xchg
pop
test
add
add
mov
and
mov
test
add
xchg
outs
fadd
mov
xchg
sbb
popa
pusha
add
add
add
pop
fdiv
aas
xor
sub
add
pxor
adc
add
pop
or
or
or
add
push
or
mov
shl
lods
ins
in
dec
shl
cmp
xor
shl
cld
add
rol
and
jne
jno
xchg
pop
push
add
xor
jb
or
ror
sub
xor
sbb
xor
shl
cli
push
xchg
xor
rol
cmps
data16
shl
ss
dec
shl
test
dec
shl
outs
out
dec
shl
ds
jle
add
cmp
pop
and
mov
cmps
loope
xchg
push
rcr
mov
icebp
or
inc
leave
pop
sub
test
imul
xor
shl
mov
out
and
test
pop
and
cmps
imul
imul
imul
cmps
imul
imul
mov
add
add
add
call
xor
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
pop
add
jne
add
and
pusha
add
dec
shl
dec
sub
pop
cmp
xor
rol
and
adc
shl
and
dec
inc
ret
and
xor
sbb
cmps
imul
imul
popa
call
shl
adc
shl
adc
sbb
or
jg
pop
add
add
add
add
adc
mov
add
gs
pusha
pop
add
call
xor
add
cmps
das
add
add
adc
adc
pop
mov
add
xor
test
add
sbb
sbb
inc
and
ret
loope
add
or
or
or
retf
popf
test
pop
add
inc
and
adc
and
ret
ror
add
and
in
nop
push
add
and
sub
outs
push
xchg
or
movs
jle
mov
icebp
bound
pop
js
loop
mov
scas
inc
xchg
mov
adc
pop
add
aaa
sbb
add
or
xchg
or
call
push
push
push
xchg
add
sub
clc
push
nop
mov
jae
mov
arpl
jbe
jp
xchg
add
dec
dec
add
inc
pop
add
add
dec
daa
inc
pop
sub
repz
sbb
mov
and
add
xor
add
add
ds
idiv
inc
add
dec
add
dec
inc
add
dec
or
adc
add
adc
add
sub
cmps
les
inc
(bad)
loope
inc
push
daa
lock
data16
pop
fldenv
rcl
push
fldenv
pusha
push
outs
xchg
inc
jb
push
push
imul
data16
fdivr
call
push
pop
xchg
sbb
inc
mov
(bad)
xchg
add
test
push
pop
pop
mov
push
inc
pop
ja
dec
out
jnp
add
sub
adc
inc
rcr
not
fisttp
add
dec
dec
pop
rcr
adc
inc
add
mov
jno
aaa
add
hlt
inc
out
or
push
pop
pop
addr16
add
pop
and
pop
mov
je
mov
jg
mov
and
outs
pusha
popf
fist
cmps
adc
sub
pop
add
mov
mov
push
mov
add
iret
fmul
rcr
lahf
ja
pop
or
mov
pop
arpl
pusha
bound
mov
push
pop
or
rol
inc
fcom
pop
and
inc
(bad)
nop
pop
nop
popf
cmp
das
sti
inc
mov
xor
pusha
pop
xchg
shl
inc
jo
cmovno
push
pusha
mov
lock
pop
int3
sbb
dec
and
pusha
loop
xor
pop
and
push
mov
ret
pop
adc
push
add
jnp
push
jbe
add
add
getsec
or
dec
cmps
adc
add
sub
or
pusha
ins
lahf
(bad)
and
out
and
jae
inc
adc
push
add
cmp
div
std
dec
add
ret
or
pop
mov
das
add
pusha
jle
mov
sti
int
xchg
call
adc
test
pop
push
das
call
add
pop
sub
add
cmp
in
add
mov
je
and
data16
dec
mov
and
pop
jmp
jp
push
or
rcl
imul
aaa
nop
dec
push
add
out
add
dec
(bad)
xor
nop
sbb
jno
mov
ja
daa
add
add
cli
clc
rcl
xchg
ja
or
sti
dec
hlt
nop
push
jnp
nop
daa
add
lahf
xor
mov
adc
lock
mov
call
out
(bad)
add
test
stc
xor
pop
lahf
mov
cli
loopne
inc
(bad)
adc
cmps
add
push
push
(bad)
sti
fisttp
call
neg
loopne
pop
add
mov
and
jb
mov
add
add
fnstenv
add
add
add
jae
cmp
add
iret
pop
test
fisttp
add
bndldx
pop
sbb
mov
mov
mov
add
pop
jmp
cld
aas
int3
and
or
sbb
mov
popf
je
enter
idiv
add
stos
nop
punpcklbw
and
pop
add
aas
in
mov
mov
sbb
mov
fisttp
inc
jo
push
or
scas
int
adc
leave
loop
popa
stc
push
mov
xor
adc
ja
xlat
add
sub
dec
and
cmp
add
dec
call
mov
fisttp
push
ror
pushf
repz
test
push
pop
inc
dec
outs
je
jne
jo
jb
gs
js
push
stos
es
sub
jb
sub
pop
mov
add
adc
imul
sub
lahf
lock
sub
into
les
jbe
mov
or
xchg
ss
add
dec
in
nop
std
add
lds
ret
pop
aas
push
cmp
out
daa
mov
add
sbb
aaa
dec
or
add
cmp
dec
add
dec
add
call
add
sub
retf
clc
(bad)
xor
or
jbe
xor
inc
pop
xchg
add
sub
js
repnz
xchg
and
dec
mov
movs
lods
dec
add
add
xlat
jne
in
popf
adc
cwde
pop
ins
add
push
fwait
cmps
outs
lods
shr
ret
pop
daa
sub
mov
ja
cwde
sub
dec
mov
(bad)
call
jo
imul
add
mov
inc
std
cmp
in
or
inc
inc
add
leave
xchg
rcr
xlat
inc
inc
fcom
aad
addr16
lock
push
outs
(bad)
std
popa
ins
gs
gs
sbb
(bad)
jg
inc
imul
inc
outs
sbb
mov
pop
inc
jb
jae
fcomp
and
cwde
pop
and
or
pop
adc
ins
ret
dec
ret
(bad)
popa
imul
cmp
lahf
daa
xor
daa
xor
adc
inc
ins
imul
cmp
xchg
and
mov
pop
pop
ja
mov
dec
sar
fadd
outs
jne
arpl
sahf
mov
arpl
xchg
(bad)
(bad)
xchg
xor
sar
repz
cld
aaa
fbstp
xchg
dec
add
xchg
dec
add
xchg
dec
add
pusha
repz
dec
lods
clc
inc
cwde
dec
add
xor
dec
add
mov
shl
mov
int
cmp
ja
leave
pushf
and
mov
add
jge
dec
ss
js
xor
loopne
ret
mov
sub
(bad)
push
dec
xlat
mov
add
sbb
dec
invd
cs
add
rcl
or
into
ja
movd
adc
sbb
(bad)
pop
mov
outs
or
mov
js
dec
add
add
nop
(bad)
push
inc
inc
imul
ins
outs
addr16
inc
xor
xchg
add
mov
pop
fiadd
and
cmps
xchg
cdq
stos
setne
fisubr
shl
jae
jmp
lar
and
or
jle
cwde
adc
pop
dec
inc
mov
add
sub
add
add
jge
adc
stos
pop
icebp
(bad)
fmul
inc
imul
add
outs
add
push
pop
jge
add
dec
call
repz
mov
inc
dec
inc
xchg
mov
add
ins
jbe
dec
push
(bad)
out
(bad)
push
popa
outs
jae
push
gs
ror
push
inc
ins
addr16
adc
jnp
add
pop
aas
dec
xchg
fist
iret
push
outs
xor
idiv
daa
mov
mov
scas
sub
sar
iret
pop
add
lds
add
and
pop
pop
sub
popa
leave
pushf
add
ss
stos
add
inc
enter
das
aaa
inc
xor
add
add
jecxz
dec
add
adc
inc
cli
out
pop
clc
push
dec
add
adc
xor
dec
and
dec
out
add
add
cmp
inc
out
stos
pop
dec
pop
xor
pop
mov
cmp
push
add
push
aad
xchg
int3
ret
adc
pop
cmps
fs
push
or
push
lock
push
dec
add
adc
mov
imul
into
outs
push
add
mov
pop
mov
or
and
add
mov
sbb
or
xchg
sti
mov
pop
sbb
add
pop
fimul
popa
ss
push
add
mov
aaa
out
jge
int3
or
inc
push
add
pop
pusha
add
js
ins
fs
and
push
or
dec
add
push
out
jbe
xor
inc
or
jg
fild
outs
ins
inc
popa
jb
pop
dec
inc
dec
inc
jb
ins
adc
or
jb
imul
add
cmp
add
jne
inc
imul
fdivr
jns
outs
outs
imul
jb
ins
push
outs
and
push
push
fs
gs
sub
out
(bad)
jns
je
ins
dec
gs
imul
push
movs
(bad)
(bad)
mov
ins
arpl
pop
inc
jb
addr16
imul
jbe
imul
mov
imul
(bad)
or
add
nop
add
btc
gs
fld
js
add
and
(bad)
(bad)
scas
loopne
add
repz
xor
add
inc
movq
(bad)
jg
jo
inc
int3
inc
dec
dec
inc
push
dec
xor
cs
dec
pushf
jo
mov
xor
inc
enter
add
pop
ja
and
mov
call
dec
fbld
leave
out
push
je
inc
jb
popa
jns
lock
add
arpl
pusha
aaa
fbld
rcr
fild
pusha
ret
or
sbb
bound
mov
and
or
enter
(bad)
out
push
imul
in
fwait
mov
or
cmp
adc
inc
xchg
mov
xlat
push
adc
out
imul
or
push
ret
(bad)
jnp
sub
adc
mov
push
(bad)
fcom
push
xor
(bad)
stos
shl
mov
retf
out
adc
cli
ret
mov
retf
add
enter
mov
xor
add
outs
mov
jnp
xchg
int3
jmp
or
scas
das
mov
push
sbb
adc
in
adc
icebp
das
pop
add
dec
mov
rcr
jae
cmp
cld
or
dec
mov
mov
pop
jae
pusha
xor
mov
mov
imul
pop
or
and
sub
pop
bound
test
xchg
mov
rol
mov
dec
push
lock
dec
(bad)
xchg
mov
movd
dec
add
mov
dec
add
add
jl
sub
dec
inc
mov
out
dec
add
mov
add
sub
sub
adc
int
push
aad
dec
add
or
and
(bad)
adc
add
add
nop
cmps
jmp
or
add
fwait
out
mov
pushf
retf
test
retf
dec
add
jae
dec
add
sahf
outs
addr16
dec
fdivr
fwait
cli
xor
jmp
dec
add
imul
xchg
mov
dec
stos
pop
aas
add
outs
inc
jo
add
aad
add
clc
and
loopne
into
les
inc
pop
push
cmps
cmp
mov
jnp
dec
cmps
cmp
pop
inc
adc
sbb
neg
inc
push
js
adc
(bad)
rcr
cli
push
jb
jbe
push
popa
addr16
push
gs
jg
div
addr16
scas
sbb
ss
add
push
jmp
aam
das
inc
cmp
fadd
in
jle
jmp
or
cld
cld
inc
jp
call
ds
icebp
cmp
pop
push
sub
dec
ins
ficomp
add
pusha
daa
dec
test
push
add
daa
daa
addr16
jae
loopne
pushf
mov
mov
out
addr16
add
add
fdiv
mov
add
mov
daa
push
outs
dec
aaa
mov
aaa
jmp
or
add
test
dec
add
mov
sbb
add
jo
dec
add
mov
xor
inc
jb
push
ja
out
add
movs
out
inc
(bad)
addr16
cmps
mov
int3
push
and
(bad)
call
inc
push
push
ins
ror
push
ror
js
call
rol
mov
sbb
pushf
or
popa
cwde
xor
push
gs
add
(bad)
(bad)
(bad)
(bad)
add
test
fsubr
or
pop
neg
jge
retf
or
and
add
shr
sub
faddp
pop
and
lsl
mov
add
lock
sbb
dec
add
inc
xchg
movhps
add
in
pop
push
ja
mov
add
add
add
mov
push
and
pop
cmp
jg
cmps
imul
adc
jbe
cmp
call
fucomip
jge
and
lahf
cwde
or
cmp
fbstp
pop
push
or
aaa
pusha
add
mov
xchg
out
jnp
out
cmps
add
add
gs
int3
adc
push
add
pop
(bad)
xor
sti
dec
outs
jne
add
daa
lods
mov
and
dec
add
pop
mov
stos
out
push
pop
xor
push
dec
out
dec
add
sbb
adc
arpl
bound
outs
popf
ror
jb
(bad)
mov
das
mov
and
rol
inc
sbb
lock
jmp
dec
add
and
mov
hlt
aaa
cmp
daa
push
into
add
jb
adc
mov
cmp
xlat
arpl
cwde
sti
and
aaa
mov
dec
push
imul
scas
cmp
ins
dec
into
inc
aad
scas
sbb
ret
out
mov
pop
ds
int3
inc
fist
pop
cmp
push
add
(bad)
pop
adc
mov
arpl
sbb
fcom
push
sub
test
repz
(bad)
and
xlat
je
outs
ins
je
jo
pop
arpl
ds
add
mov
inc
push
inc
outs
ins
push
in
shr
sbb
lods
jo
test
outs
(bad)
fst
sub
add
dec
add
adc
sbb
inc
lahf
pop
jecxz
jle
loopne
xor
cmps
xchg
das
add
inc
adc
sbb
scas
call
pop
dec
pop
add
popa
or
add
sti
out
dec
push
mov
js
dec
add
dec
add
add
jmp
adc
push
dec
dec
dec
dec
dec
add
add
inc
dec
inc
push
inc
add
or
push
add
inc
add
or
pop
jecxz
mov
cmp
arpl
mov
mov
loopne
add
add
(bad)
daa
dec
pop
call
out
push
mul
and
iret
ds
inc
fwait
nop
add
dec
add
retf
jl
xchg
mov
or
adc
loope
ret
nop
inc
je
pop
add
cmp
inc
cmp
or
sbb
xor
mov
inc
add
stos
out
pop
mov
pop
sub
jne
outs
call
xchg
scas
mov
add
outs
call
dec
ins
stos
jmp
xor
add
xchg
outs
mov
add
fwait
cmps
cmps
scas
lea
inc
pop
rcr
js
add
mov
add
aam
or
xor
dec
add
mov
ud0
idiv
cmp
jnp
fst
scas
sti
out
push
push
dec
out
call
dec
add
lock
mov
inc
add
add
mov
add
adc
fwait
outs
je
inc
add
xchg
inc
add
dec
add
and
or
mov
ins
gs
inc
loopne
mov
je
push
and
popa
outs
or
ret
inc
pop
aaa
ss
cs
add
or
scas
inc
pop
aas
mov
cli
pop
sbb
cwde
addr16
inc
aaa
fnsave
xor
add
dec
add
test
dec
add
pop
jecxz
push
test
clc
aaa
mov
iret
cs
sbb
inc
dec
add
sbb
je
or
add
xor
or
test
dec
dec
dec
cs
adc
enter
or
add
and
nop
aam
push
outs
loop
add
outs
and
ins
fs
addr16
push
gs
inc
inc
mov
add
push
daa
xchg
sbb
bswap
(bad)
push
xor
dec
popa
ins
adc
out
imul
popa
je
dec
dec
inc
push
gs
inc
push
popa
outs
addr16
outs
je
cbw
mov
add
push
or
loop
test
ret
fisttp
mov
jno
jmp
ja
add
sub
mov
cmp
inc
or
daa
push
jns
arpl
inc
jb
je
arpl
or
arpl
pop
jo
mov
pop
adc
cmp
aaa
adc
or
and
popa
jo
mov
iret
clc
frstor
add
sub
cli
(bad)
test
rcl
xchg
call
leave
adc
in
mov
inc
and
xchg
and
stos
add
retf
mov
push
pop
sbb
jne
pop
cmp
mov
out
fbstp
pusha
sbb
pop
rcr
and
aas
ja
push
dec
add
mov
pop
mov
xlat
push
adc
cmp
jo
inc
xor
pop
sahf
jmp
fmul
add
xor
lahf
jmp
cmp
out
enter
into
inc
add
cmps
imul
add
fwait
outs
mov
jg
rol
pop
add
inc
add
call
add
rol
fnstsw
mov
mov
push
or
push
add
(bad)
out
(bad)
(bad)
inc
aas
les
or
add
inc
add
add
xor
inc
add
popa
scas
sti
inc
or
loopne
mov
sbb
or
fbstp
push
add
inc
add
inc
dec
add
sub
cmp
add
shl
pop
lods
push
aas
out
mov
mov
add
jge
xchg
cmp
inc
add
or
add
out
ror
pshufw
fnstcw
add
add
aas
js
or
xchg
inc
add
jnp
jmp
add
fnsave
add
(bad)
psubusb
xchg
lea
mov
xlat
cmp
mov
ret
push
or
push
mov
in
(bad)
ja
call
inc
add
clc
inc
add
mov
ja
daa
adc
and
call
dec
(bad)
and
stc
cmps
jmp
popa
xchg
jmp
cmps
jg
imul
js
and
fnstenv
movs
and
les
pop
fsub
inc
jb
popa
je
mov
ja
or
add
imul
in
fwait
std
jmp
inc
gs
jb
jo
outs
jb
add
pop
mov
pusha
sub
inc
ins
bound
cmp
ins
out
pcmpgtb
cmp
pop
push
ja
gs
add
jbe
push
loope
call
sub
call
xchg
cmp
pop
add
xchg
stos
and
out
mov
adc
inc
add
mov
push
scas
out
stos
push
adc
and
out
inc
and
aaa
arpl
mov
std
and
ret
fbstp
add
or
in
dec
add
inc
mov
push
add
shl
adc
nop
or
call
pop
cmp
jae
cmp
dec
inc
jae
push
daa
pop
daa
and
jmp
mov
rcr
xlat
or
enter
sub
cmc
mov
sbb
or
xor
and
inc
dec
push
dec
inc
mov
and
outs
jae
jb
popa
bound
jo
push
mov
outs
je
arpl
pop
push
je
imul
addr16
jbe
mov
(bad)
gs
pop
xor
es
daa
(bad)
dec
ror
sub
and
adc
or
stos
mov
adc
dec
arpl
jb
xor
outs
ins
xor
test
mov
mov
xlat
push
jb
and
push
ins
cdq
jnp
popf
sub
sub
aaa
sbb
add
cmp
les
xchg
mov
pop
js
cmps
or
pop
aaa
pop
pop
mov
cmps
imul
add
mov
inc
gs
jne
je
lock
add
jae
loop
ja
fwait
jne
add
std
stos
inc
push
fmul
push
ret
loop
push
(bad)
clc
add
inc
adc
push
jb
outs
jg
fs
les
mov
je
outs
jae
inc
std
inc
xor
call
add
add
dec
add
cmp
fwait
in
add
test
in
aas
sub
cdq
scas
cmp
push
mov
add
call
add
jae
pop
cmp
jo
pop
or
mov
cmp
or
push
psubq
add
xchg
ja
in
pop
je
out
js
dec
add
add
lods
mov
dec
rcr
inc
add
dec
add
xchg
or
ja
out
daa
pop
daa
lock
daa
std
add
adc
aaa
mov
dec
add
sub
xor
enter
pop
or
pushf
xor
clc
or
aas
pop
outs
std
das
sbb
inc
inc
add
ins
loopne
mov
push
out
push
add
and
and
cmp
cmp
add
and
cli
int
and
and
dec
das
fs
jns
push
dec
cmp
out
add
inc
add
mov
mov
arpl
gs
xchg
jecxz
adc
jne
jne
mov
dec
jne
inc
add
dec
jne
jp
mov
cmovge
arpl
jnp
aaa
dec
inc
bound
popa
jb
popa
outs
or
cmp
cmp
dec
aas
ins
add
jp
jp
inc
pop
jb
fist
outs
ja
popa
je
jb
(bad)
cld
fcomp
stos
add
imul
jae
add
iret
push
mul
outs
gs
jne
dec
outs
outs
sbb
push
jne
sar
add
ja
cmp
add
add
loope
sbb
jo
popa
ins
das
jo
inc
scas
neg
mov
pop
or
pop
lods
(bad)
(bad)
(bad)
mov
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
(bad)
mov
pop
pop
add
outs
je
ins
and
jb
loop
fwait
or
push
dec
dec
push
push
or
mov
inc
push
add
inc
dec
dec
adc
add
pop
push
xor
cmp
outs
in
and
imul
popa
ins
imul
jo
add
aaa
out
(bad)
(bad)
aas
outs
outs
je
outs
outs
jne
push
arpl
data16
outs
ja
xchg
in
and
pop
outs
outs
aaa
ss
dec
and
fs
jo
jb
and
jb
jne
ins
and
outs
cmp
arpl
jnp
in
popa
ins
ins
pusha
xchg
xor
xchg
mov
idiv
outs
outs
gs
je
popa
je
and
ss
gs
pop
iret
xor
aaa
imul
outs
and
pop
or
fs
arpl
rcl
test
gs
arpl
inc
mov
inc
add
rol
push
jae
and
imul
ins
outs
arpl
pop
call
fs
je
or
dec
inc
ins
and
addr16
ins
and
jo
add
cmp
iret
pop
outs
sub
fsubr
outs
outs
ins
outs
je
sub
sub
fdiv
or
addr16
jae
xlat
xor
mov
(bad)
data16
outs
(bad)
outs
and
(bad)
cmp
and
adc
add
cld
ret
fwait
loopne
jb
sub
push
imul
push
mov
pusha
pushf
dec
imul
icebp
(bad)
popa
push
inc
mov
or
cli
aam
ret
cmp
outs
popa
aad
or
imul
outs
hlt
add
sar
inc
out
outs
sub
inc
dec
jae
mov
outs
jb
gs
gs
jb
jae
les
aaa
or
push
dec
inc
dec
dec
add
sub
xor
jg
mov
add
aas
jg
xor
fimul
leave
and
push
aad
out
clc
sbb
mov
cmp
je
mov
cwde
out
lock
mov
add
xor
xor
data16
fistp
ins
outs
fs
add
jns
outs
mov
arpl
pop
ins
fs
push
sub
fldenv
add
std
inc
cli
add
fiadd
je
outs
add
jae
jae
outs
add
jb
mov
add
outs
mov
pop
sar
popa
and
xor
jae
ja
aaa
pop
push
pop
ins
outs
addr16
int
jnp
pop
add
ja
xor
jae
add
sub
pop
cmp
cmp
mov
ds
mov
vphaddubq
daa
and
scas
cmp
add
or
add
iret
jne
mov
push
pop
pop
add
out
iret
jge
mov
add
(bad)
jae
mov
inc
add
or
stos
inc
add
push
add
push
mov
add
add
add
inc
inc
add
add
sub
push
pop
pop
or
aaa
xor
out
mov
pop
add
and
mov
pusha
add
add
fistp
and
pop
add
or
add
add
add
add
(bad)
sub
outs
add
ins
add
add
outs
jne
sti
mov
ins
ins
or
cmp
inc
add
ins
ins
gs
mov
and
outs
arpl
jmp
mov
imul
gs
hlt
dec
ret
cli
jo
jns
inc
mov
ins
gs
mov
icebp
arpl
dec
outs
push
jae
popa
jbe
imul
add
add
enter
outs
pop
or
(bad)
ficom
popa
jbe
imul
sub
rol
imul
and
inc
jb
imul
imul
popa
outs
jns
ins
loope
mov
test
gs
fs
and
ins
int
cmp
jbe
fimul
add
fsub
push
imul
data16
add
je
outs
outs
mov
scas
jge
ror
outs
popa
jo
jo
imul
sbb
pop
pop
je
outs
ins
and
dec
lea
dec
or
ins
pop
retf
xchg
xchg
adc
pop
retf
(bad)
jecxz
xchg
dec
cmp
pop
or
and
je
popa
adc
popa
outs
or
jne
push
cdq
push
push
pop
in
gs
inc
imul
push
xchg
shl
je
add
add
and
jp
push
add
fs
rcr
add
jae
pop
or
mov
imul
in
bound
or
or
or
ja
mov
mov
push
(bad)
ror
adc
add
lahf
clc
inc
js
arpl
popa
xchg
jecxz
fstp
pusha
inc
jb
retf
jg
sub
adc
push
repz
inc
add
jo
je
outs
jne
push
fcom
paddd
inc
jb
jo
gs
adc
xor
mov
dec
fwait
pop
rol
jp
(bad)
cmp
and
lahf
bound
push
mov
fist
add
add
pop
sbb
fs
push
sbb
in
mov
call
dec
popa
jns
mov
jb
fsub
inc
clc
jg
call
daa
push
pop
add
inc
gs
popa
jae
inc
jno
sti
mov
outs
jo
jo
xorps
(bad)
aas
adc
add
jae
popa
addr16
outs
js
add
gs
xchg
or
dec
inc
xlat
mov
(bad)
out
(bad)
jae
fwait
sub
inc
add
xor
push
dec
inc
dec
add
xor
dec
dec
pop
addr16
mov
push
pop
jg
call
aad
pop
dec
pusha
adc
call
adc
cs
adc
pop
dec
jbe
and
inc
push
cmp
and
popa
rcl
rcl
pop
xchg
sbb
(bad)
pop
test
inc
(bad)
(bad)
aas
xor
push
mov
inc
scas
into
adc
dec
push
and
fldcw
xchg
and
(bad)
mov
pusha
add
loopne
loop
fdivrp
pop
retf
and
adc
cmp
gs
cmp
sbb
pop
xchg
(bad)
dec
leave
nop
mov
ins
push
fisttp
dec
aad
(bad)
out
pop
cmp
mov
mov
sbb
test
sysenter
sbb
pop
pop
xlat
sbb
fs
data16
add
fld
(bad)
dec
nop
std
dec
adc
push
iret
(bad)
(bad)
iret
adc
add
or
std
sbb
loopne
sbb
push
inc
add
add
adc
call
or
cmp
sar
adc
push
mov
nop
push
jmp
add
inc
in
jecxz
jle
add
rcr
jnp
pop
xor
add
fdivr
add
inc
add
das
pop
sbb
push
pop
pop
lods
int3
bound
ror
pop
rcr
cmp
add
pop
das
and
sbb
inc
adc
out
arpl
add
adc
fist
or
pop
add
pop
dec
rol
xor
repz
inc
xor
pop
jg
add
add
pop
adc
pop
shl
ja
add
push
(bad)
das
adc
rcr
add
or
add
add
and
pop
push
stos
mov
xor
mov
xor
push
outs
pop
lahf
pop
xor
push
add
in
lahf
pop
lahf
pop
push
add
xor
xor
pop
lahf
lods
xchg
pop
inc
(bad)
test
or
xlat
add
add
ja
dec
jnp
pop
push
cs
lock
fist
mov
jge
pop
add
pop
ja
out
mov
add
pop
mov
and
cmp
das
or
dec
cmp
aas
mov
mov
dec
add
ret
rcr
or
in
or
adc
push
rcr
jb
sub
and
fsub
dec
cmp
push
push
(bad)
push
cwde
cmp
cmps
repz
sbb
sbb
push
sahf
and
call
sti
in
mov
sbb
add
fdiv
inc
fcom
mov
fild
sti
add
dec
add
outs
mov
or
mov
pusha
out
push
pop
out
fdiv
in
mov
inc
js
out
xor
mov
push
sbb
mov
dec
pop
inc
fsub
inc
enter
lock
icebp
or
dec
or
sbb
jnp
dec
add
adc
dec
sbb
pop
dec
pop
ret
mov
add
adc
dec
and
and
jo
add
add
fadd
dec
pop
pop
rcl
or
in
jnp
inc
rcl
cmp
push
popa
outs
clc
pop
dec
adc
mov
and
xor
mov
and
add
jae
jne
pop
adc
and
adc
pop
aas
in
sbb
fcomp
test
pusha
outs
or
push
outs
cwde
jnp
daa
call
jae
jge
clc
adc
dec
and
ja
cmc
rcr
push
sti
xchg
adc
push
xchg
sbb
push
js
(bad)
in
jnp
fcom
test
rcr
sbb
aas
cmp
addr16
pusha
out
add
fild
das
dec
fmulp
jo
add
push
rol
pop
jae
in
mov
or
dec
jge
sub
xor
cmp
cmp
and
fwait
push
or
(bad)
pop
outs
adc
mov
aaa
nop
add
inc
test
mov
rcl
mov
ret
addr16
pop
mov
mov
dec
sub
pop
neg
add
mov
mov
inc
test
pop
sbb
push
sti
inc
nop
adc
dec
mov
sub
pop
sti
push
inc
loopne
adc
push
out
sub
add
and
pusha
push
dec
cmp
sub
and
addr16
test
adc
xor
test
pop
push
rol
sti
push
out
push
dec
call
sbb
push
adc
pop
sub
push
dec
inc
adc
pop
add
push
call
push
or
inc
nop
adc
faddp
or
fcom
xchg
cmp
sbb
sbb
das
add
adc
or
xor
and
push
sti
fidiv
dec
pop
inc
xor
enter
in
sub
lahf
call
and
add
inc
mov
daa
sbb
add
adc
enter
pusha
call
pop
addr16
pusha
out
call
clc
nop
punpcklwd
xor
add
sub
mov
sbb
inc
fcom
fmul
dec
dec
jo
sub
cmp
dec
mov
dec
push
xor
pusha
pop
inc
cwde
adc
pop
scas
add
push
rcr
repz
add
call
or
xor
sbb
dec
push
and
inc
cmp
ror
ja
mov
sbb
sar
lock
fcom
out
mov
dec
enter
(bad)
dec
push
inc
fcom
adc
sar
dec
arpl
cmps
lock
pop
sub
sbb
ja
test
sti
add
xor
push
sti
xchg
adc
xchg
sbb
push
jo
mov
jnp
fmul
mov
sbb
mov
pop
mov
mov
mov
sbb
xor
pusha
fild
adc
fmul
sbb
dec
add
xor
sbb
sbb
inc
inc
adc
dec
push
out
sbb
add
test
fsub
call
mov
cmc
push
mov
out
jmp
sub
add
test
push
or
repz
xchg
pop
mov
jnp
mov
xor
sar
xchg
adc
retf
adc
nop
sbb
in
dec
out
add
adc
dec
push
or
enter
lahf
dec
out
dec
or
adc
adc
dec
dec
(bad)
cmp
out
aaa
xor
xor
inc
add
inc
adc
dec
xor
mov
dec
mov
mov
sbb
add
pusha
fild
adc
or
dec
rcr
dec
test
loopne
ror
mov
cmps
and
movq
jae
cmp
pop
add
push
outs
mov
adc
dec
sub
movs
xchg
fadd
sar
dec
mov
mov
pop
dec
mov
sbb
inc
ret
inc
lock
cmps
jae
and
sbb
dec
add
sub
mov
fadd
push
push
adc
pusha
scas
js
scas
fdiv
xchg
inc
mov
aaa
mov
popa
fs
rcl
xor
jnp
loopne
das
add
adc
test
dec
add
fidiv
test
sti
inc
inc
adc
int3
inc
sub
add
mov
pop
push
inc
fxch
sbb
ret
pop
ss
xlat
sbb
sub
cmp
retf
enter
push
sti
xchg
dec
loopne
mov
fadd
or
and
sbb
sbb
inc
xor
cmp
adc
mov
add
fld
cmp
mov
(bad)
int3
je
jo
jae
test
add
adc
push
out
clc
pop
sub
adc
push
aaa
test
jo
nop
pop
sub
xor
pop
cmp
mov
push
sti
xchg
dec
nop
adc
add
aas
fdiv
xchg
inc
loopne
adc
adc
ror
pop
daa
ja
les
and
dec
add
xchg
adc
into
dec
jb
dec
pop
jo
mov
aas
jnp
sbb
add
jae
jge
cwde
adc
and
inc
cwde
cmp
rcr
fdiv
das
add
adc
or
dec
push
mov
addr16
or
add
cmps
jae
push
add
lahf
out
or
add
fdivr
mov
adc
push
adc
xlat
mov
pop
pop
add
enter
adc
inc
cmp
mul
sub
pop
outs
sbb
fcom
clc
sbb
add
adc
dec
mov
sbb
and
add
pusha
dec
push
inc
adc
xchg
out
or
xchg
push
test
inc
cmp
dec
jo
shl
mov
sbb
fsubr
pop
das
add
adc
or
push
xor
push
fsub
inc
pop
add
jmp
xlat
push
pop
or
add
adc
push
scas
fcom
xlat
push
xor
sbb
xlat
shl
out
arpl
inc
rcl
pusha
out
add
or
aas
sub
addr16
fcomp
adc
add
cmp
sbb
add
adc
out
add
iret
js
addr16
xor
sbb
addr16
pusha
fistp
out
arpl
inc
mov
fsubr
fisttp
jnp
add
sbb
test
fmul
inc
dec
add
add
or
sbb
mov
or
clc
dec
add
shl
ja
mov
add
xchg
adc
sbb
dec
rcr
pop
in
jnp
fsubr
sbb
inc
clc
adc
cwde
sbb
cwde
jae
inc
mov
mov
fdiv
push
pop
pop
add
popa
outs
mov
adc
dec
pop
dec
mov
pop
sbb
enter
adc
rcl
sbb
pop
scas
call
aaa
rol
scas
add
mov
mov
inc
adc
mov
pop
cmp
aaa
popa
cmp
dec
adc
out
or
or
sbb
pop
inc
cwde
adc
dec
adc
aaa
mov
int3
jne
cwde
out
fdiv
rol
aaa
in
mov
add
xchg
cmp
add
loopne
inc
sbb
add
dec
add
sbb
sub
jae
sar
aas
add
mov
push
js
and
fistp
ret
mov
cmp
dec
or
adc
cmp
add
lock
mov
mov
dec
sti
sub
pop
jae
add
adc
lds
pop
mov
fidivr
add
daa
xchg
daa
lock
pop
das
int
fist
das
adc
push
or
add
daa
fadd
dec
retf
and
outs
add
iret
jge
sub
push
dec
pop
pop
add
sbb
daa
push
mov
punpcklbw
jecxz
out
sbb
mov
loop
add
inc
cmp
packuswb
pop
daa
mov
push
pop
es
inc
mov
jo
js
addr16
ror
aas
addr16
inc
jnp
test
int
daa
clc
pop
pop
add
or
nop
push
fwait
pop
ja
sub
mov
inc
idiv
das
mov
or
shl
xor
push
and
test
add
sbb
xor
popa
pop
and
dec
test
daa
pop
dec
daa
adc
sbb
pop
cwde
pop
pop
and
js
jg
sbb
mov
dec
push
mov
pop
(bad)
into
outs
push
sbb
pop
in
test
add
dec
add
pop
sbb
ret
fsub
and
cmps
and
(bad)
adc
mov
daa
push
sti
jo
push
dec
push
pop
pop
inc
in
loope
inc
dec
addr16
mov
cmp
mov
js
das
or
nop
jge
mov
sub
push
mov
mov
pop
sti
int3
pusha
adc
pop
in
out
pop
xchg
icebp
jae
daa
cli
pop
aaa
add
jge
test
push
jo
inc
div
in
mov
pop
and
outs
fdiv
sysret
sub
jg
sub
pop
mov
movs
dec
sub
test
mov
pop
rol
scas
jge
and
dec
clc
daa
inc
xchg
dec
pop
popa
xadd
outs
sub
pusha
push
mov
and
push
daa
sbb
pop
stos
xchg
pop
mov
pop
montmul
cmps
pop
pop
scas
pop
ja
out
jae
das
mov
sbb
fdiv
test
outs
sub
push
pop
shl
in
and
mov
dec
xlat
xchg
sub
iret
jge
movups
jae
mov
mov
pusha
aaa
inc
jge
fsub
daa
mov
pop
das
inc
nop
out
aaa
nop
das
pusha
daa
das
push
sti
fdiv
(bad)
pop
sub
test
pop
and
add
add
xchg
sub
pusha
lahf
sti
int3
loopne
call
jge
clc
int3
clc
xchg
add
jo
add
nop
inc
and
cwde
enter
inc
outs
shl
jae
sbb
push
sti
int3
pusha
setae
mov
xchg
pop
mov
stos
adc
addr16
ret
mov
pop
sbb
cmpxchg
out
mov
push
add
mov
outs
out
aaa
sub
xchg
jo
inc
pop
enter
pop
lahf
inc
cwde
daa
and
sahf
sbb
xchg
xchg
daa
call
adc
dec
outs
sbb
cmp
pop
ja
pop
pop
mov
daa
adc
(bad)
daa
mov
xchg
pop
aaa
nop
jge
fsub
xor
and
ja
pop
dec
adc
sbb
push
pop
shl
push
psllw
out
jo
inc
jnp
das
jae
pop
push
xchg
nop
daa
das
mov
pop
repz
fs
jge
mov
(bad)
pop
rcr
push
sbb
sar
fadd
and
fincstp
outs
sub
outs
out
jbe
adc
das
push
fsubr
fdiv
push
fwait
sbb
fbstp
pop
mov
daa
adc
int3
pusha
mov
pop
and
push
mov
mov
aaa
inc
daa
out
xchg
ret
fmul
das
test
idiv
push
das
in
aaa
jecxz
mov
push
out
idiv
mov
push
xchg
or
pop
and
aaa
mov
sti
fmul
daa
and
mov
stos
not
jae
pop
xor
pop
test
bts
pop
retf
or
(bad)
das
fcom
out
sbb
xlat
sub
ret
push
enter
pop
pop
inc
pop
rol
jb
mov
pop
mov
jne
scas
outs
pop
mov
nop
jmp
pop
mov
sbb
jae
pop
arpl
push
ret
daa
rol
pop
test
xor
pop
mov
inc
scas
add
adc
pop
scas
add
je
or
repz
pop
push
enter
and
rol
jne
mov
pop
inc
sub
dec
pop
adc
xlat
out
pop
pop
jmp
push
push
js
rol
sbb
jnp
mov
scas
sbb
mov
ror
mov
pop
push
(bad)
pop
mov
rol
loopne
ja
pop
ja
or
ror
sbb
loopne
fcom
sub
ja
pop
cmp
inc
pop
ja
pop
ja
jo
out
rol
jo
ja
pop
push
fadd
ja
pop
ja
mov
ja
pop
ja
pop
pmaxsw
cmp
loopne
ja
stc
cmp
ja
pop
ja
or
add
pmaxsw
pop
ja
pop
ja
pop
loopne
fadd
push
pop
add
pop
pop
ja
pop
pop
out
ret
jne
jp
fwait
mov
push
xchg
ds
pusha
pop
sahf
addr16
push
mul
scas
adc
pop
jge
aas
cmp
sbb
pop
dec
pop
push
cdq
outs
fadd
pop
pop
add
loopne
jl
xchg
pop
pop
call
ficom
pop
pop
cmp
mov
add
out
xor
fmul
cmp
out
push
test
psubusb
cmp
fmul
repnz
daa
sub
mov
or
push
sti
int3
inc
and
sub
xor
out
cdq
inc
cmp
and
in
and
adc
daa
neg
pop
push
or
mul
pop
pop
mov
nop
pop
or
cwde
pop
ja
dec
(bad)
inc
test
ret
or
out
lahf
jnp
mov
sar
daa
jg
pusha
out
dec
jo
jg
ja
sti
fidivr
or
add
pop
push
add
pop
jno
popa
das
pusha
xchg
fistp
cmp
daa
xor
daa
loopne
mov
dec
js
mov
adc
sti
fsub
into
jg
pop
and
pop
pop
cs
maskmovq
mul
stos
and
cmp
leave
pop
psrlw
mov
cmp
jae
fsub
cmova
cvtps2pd
jge
das
test
pop
pcmpeqw
aaa
das
jge
js
pop
setae
setnp
mov
mov
clc
sbb
xlat
daa
outs
xor
dec
daa
mov
pop
lahf
add
jge
sbb
dec
psubq
dec
jo
sbb
push
cmovns
adc
xlat
sbb
jnp
loope
inc
mov
add
jae
inc
inc
daa
or
inc
push
pcmpgtd
pop
imul
pop
xchg
jg
inc
xchg
and
sahf
jnp
pop
cmp
add
pop
ins
mov
cmp
out
xor
pop
push
(bad)
iret
jge
out
pop
pop
stc
pop
pop
pop
outs
and
mov
idiv
pop
dec
xor
dec
inc
pop
jge
mov
daa
dec
pop
pop
daa
gs
mov
pop
fistp
aaa
ret
jae
out
xchg
dec
xchg
pop
out
or
or
pusha
pop
push
mov
dec
rcr
and
rcr
enter
inc
arpl
jecxz
lahf
inc
clc
pop
add
test
push
adc
push
and
in
or
cmp
lahf
inc
daa
int3
inc
not
add
daa
pusha
ret
jae
sti
jg
pop
push
jo
pop
sub
add
pusha
aaa
test
(bad)
nop
pop
jnp
sar
pop
ja
pop
aas
or
fadd
aas
shl
enter
sti
sahf
das
inc
shr
loopne
data16
push
clc
add
aaa
add
cld
dec
and
daa
jge
push
xchg
dec
and
jo
xor
pop
iret
or
nop
sbb
jge
and
jnp
daa
nop
push
cwde
jge
mov
pop
shl
idiv
pop
pop
iret
pop
pop
fisubr
xchg
pusha
pop
lock
shl
adc
push
or
nop
pop
js
xor
mov
pop
fmul
cmp
das
ret
sbb
jae
sti
pop
and
mov
and
(bad)
jnp
nop
pop
arpl
jecxz
(bad)
mul
ds
pop
mov
cmps
cmp
sti
adc
addr16
loop
add
dec
lahf
and
inc
push
mov
iret
jne
jg
setg
mov
and
lahf
rcr
pop
fistp
adc
jae
lahf
cld
pop
lahf
pop
adc
ds
nop
jge
ror
pop
push
pop
dec
jae
dec
jle
dec
mov
xchg
sbb
bound
leave
cmp
add
mov
pop
daa
mov
add
xchg
mov
out
mov
lahf
mov
fadd
cwde
iret
fdiv
loopne
loopne
mul
dec
add
add
inc
or
pop
push
pop
adc
ss
sbb
aas
inc
daa
or
push
leave
nop
cmp
aas
loopne
xchg
jge
clc
pop
mov
xchg
sub
bound
mov
fs
cmp
(bad)
stc
fidiv
pop
loopne
fsub
push
call
push
clc
pop
iret
cmp
push
dec
imul
xor
data16
pop
sbb
pop
in
and
inc
xor
(bad)
enter
cdq
adc
(bad)
cdq
rol
addr16
or
out
popa
outs
sub
das
and
add
neg
mov
das
retf
cmp
mov
daa
pusha
rcr
daa
loopne
or
call
div
jmp
pop
rcpps
inc
lahf
call
pop
xor
(bad)
and
ja
sub
add
add
out
rcr
in
aaa
fld
xor
cmp
pop
pop
inc
dec
sbb
jae
dec
push
pop
pop
aaa
neg
out
lahf
jo
sbb
popa
out
sbb
jo
sysret
sbb
mov
mov
out
pop
rcr
stc
fidiv
imul
call
nop
fld
jmp
cmp
out
mov
pop
call
pop
push
pop
add
push
sti
and
push
aas
(bad)
inc
and
pop
cwde
arpl
xchg
out
loopne
rcl
daa
ror
inc
push
lock
daa
das
cmp
add
dec
adc
out
ficomp
test
sub
mov
in
(bad)
or
sbb
scas
pop
test
scas
popa
out
jae
pop
dec
pop
daa
pusha
pop
inc
ss
mov
js
xchg
ret
add
push
mov
pop
push
add
push
and
push
mov
mov
aas
addr16
clc
dec
push
add
adc
jae
sbb
jnp
dec
and
push
out
xchg
xchg
dec
pusha
add
pop
inc
xor
pop
lahf
sbb
mov
cmps
enter
jae
(bad)
fsubr
loopne
sahf
sti
fadd
lock
aaa
into
js
std
adc
adc
daa
sbb
enter
das
cmp
xor
nop
and
push
xchg
and
add
pop
or
jbe
adc
pop
dec
add
jo
psllq
pusha
(bad)
adc
add
inc
aas
aaa
jecxz
and
jmp
fdiv
daa
nop
pop
push
pop
or
nop
jge
nop
push
cwde
packuswb
aas
imul
fistp
test
fsub
pop
mov
rol
pop
out
jae
(bad)
fadd
stos
out
fwait
sbb
mov
aaa
push
rcr
sti
adc
jae
xlat
add
sub
ret
imul
cmps
aas
pop
jo
loope
pop
dec
pop
pop
push
pop
add
mov
scas
imul
xor
pop
pop
add
pop
mov
pop
xchg
pop
pop
add
daa
lods
pop
xlat
inc
scas
and
mov
jb
in
(bad)
retf
pop
daa
(bad)
pop
pop
add
daa
in
pop
fiadd
and
sbb
shl
sbb
scas
mov
pop
and
cs
sbb
cmp
imul
and
add
xor
gs
or
adc
cmp
cmps
jmp
push
push
jnp
sub
xchg
sub
xor
pushf
pop
sbb
cmps
pop
pop
mov
imul
leave
jne
adc
rol
dec
scas
nop
ss
nop
ins
jg
mov
outs
out
cs
pop
mov
sbb
out
ror
mov
pop
mov
fadd
cmp
mov
pop
sar
mov
pop
mov
jo
out
jae
mov
pop
mov
pop
loopne
fadd
stos
pop
cmp
mov
mov
jo
out
rol
jecxz
mov
pop
push
cmc
cmp
pop
mov
sbb
idiv
pop
mov
mov
out
js
out
daa
pop
out
jae
out
pop
out
pop
lahf
jno
jge
jae
out
pop
out
pop
dec
add
nop
jge
enter
lock
or
arpl
outs
out
ja
lahf
loopne
lahf
jmp
jnp
fincstp
fdiv
pop
xchg
sahf
cmp
das
cmp
and
daa
test
nop
add
push
rcl
and
or
or
daa
jo
or
or
test
outs
nop
(bad)
iret
les
lahf
fwait
ja
cmps
pop
or
sahf
fdivr
rol
leave
cmp
pop
push
call
dec
out
repz
push
inc
push
or
sahf
fcom
pop
pop
cmp
sub
push
xor
out
xor
pop
inc
popa
idiv
pop
addr16
ja
lahf
sti
fsub
pop
xchg
cmps
mov
pop
mov
pop
(bad)
mov
test
and
jno
loopne
sbb
ret
cmp
lock
clc
in
aaa
stos
lahf
pop
add
sbb
jb
mov
sbb
pop
jnp
daa
neg
out
and
sub
lahf
mov
nop
das
inc
daa
das
dec
pop
sahf
sti
fadd
not
arpl
aas
jge
and
or
aas
jo
aas
js
mov
iret
pop
das
push
add
nop
or
fsub
daa
das
cwde
pop
mov
cmp
int3
pusha
lahf
das
aam
fbld
in
mov
fldcw
add
ja
pop
ret
jae
sbb
fistp
pop
aas
outs
mov
add
test
xor
(bad)
mov
jo
js
jae
fsubr
push
das
add
daa
das
add
popa
out
pop
pop
das
xor
cmp
pop
pusha
das
nop
push
fs
iret
jge
cwde
pop
pop
lahf
nop
das
cmp
daa
das
mov
data16
pop
(bad)
pop
rol
mov
lock
aaa
clc
pop
mov
dec
or
adc
and
fldenv
xor
xor
pop
daa
push
jg
iret
jge
jae
jnp
pop
mov
pop
clts
mov
mov
mov
mul
daa
daa
cwde
pop
das
cmp
das
in
and
inc
mov
(bad)
clc
daa
neg
pop
push
out
cmc
fsub
pop
mov
pop
addr16
cmp
into
sbb
and
sbb
aas
add
neg
and
aaa
or
inc
enter
daa
cwde
pusha
or
nop
or
sub
daa
jg
ja
out
test
add
add
aas
sbb
out
mov
xchg
xlat
shr
add
push
mov
lock
dec
add
cmp
ret
jae
loopne
push
maskmovq
imul
aas
mov
cwde
sti
dec
mov
addr16
jg
jnp
or
pop
add
add
mov
inc
xlat
xor
in
add
loopne
push
add
jnp
aaa
es
outs
daa
pop
or
or
pop
and
daa
mov
and
lsl
cmp
xchg
add
aaa
xchg
jae
retf
setb
xchg
rsm
movq
fsub
push
js
aas
nop
pop
push
ins
add
jnp
outs
and
add
outs
imul
inc
cmps
jg
fcom
or
inc
outs
aaa
in
cmp
xchg
fild
and
and
test
cmp
jge
xor
pusha
das
dec
js
push
sbb
mov
outs
sysret
in
jnp
or
nop
aaa
fist
aas
out
aas
test
shr
aaa
add
add
out
outs
xchg
pop
fild
pop
idiv
inc
add
adc
xchg
(bad)
in
popa
(bad)
inc
xchg
out
and
pop
or
mov
sti
sahf
imul
movzx
dec
xor
or
mov
in
fcomp
mov
jo
jnp
jnp
jnp
sbb
int3
jge
and
(bad)
pop
retf
pop
iret
outs
pop
and
sub
push
fsub
push
mov
daa
loopne
push
call
ret
push
fsubr
push
outs
fs
add
xchg
mov
das
sub
jge
mov
add
adc
jecxz
iret
pop
(bad)
push
pop
(bad)
mov
add
push
sbb
mov
fdiv
jo
test
jae
aaa
js
das
cmp
jge
and
mov
nop
daa
xor
fst
fs
pop
daa
rol
sbb
xor
pop
loopne
cmp
aas
add
fs
mov
shl
loope
mov
and
adc
pusha
dec
out
or
pop
dec
pop
push
mov
int3
push
scas
dec
aaa
jo
and
not
cwde
daa
xchg
call
cmp
add
daa
(bad)
iret
cmp
or
ror
lahf
sti
xchg
jecxz
pop
jmp
xor
and
(bad)
arpl
cmp
aaa
sbb
xlat
pop
movs
inc
pop
outs
fmul
enter
pop
idiv
xchg
sbb
jo
sahf
stc
fidiv
and
daa
and
mov
sub
pop
mov
pop
pop
shl
out
mov
int3
jge
and
pop
inc
mov
inc
pop
dec
test
mov
adc
cmp
out
and
mov
les
mov
mov
xchg
mov
outs
aaa
mov
jmp
adc
idiv
pop
ja
pop
(bad)
(bad)
lahf
sti
fsub
pop
ja
pop
jnp
pop
jmp
test
fadd
pop
sub
pop
clc
adc
jg
sub
pop
adc
sub
xlat
add
or
pop
addr16
pop
jne
jmp
mov
sbb
mov
inc
mov
mov
mov
cdq
pop
mov
mov
and
lahf
sti
out
daa
bswap
pop
das
fld
iret
or
das
jmp
nop
cmp
pop
aaa
and
cmp
sub
enter
enter
daa
push
cmp
pop
pop
pusha
xchg
or
aaa
sub
mov
loope
iret
pop
mov
aaa
cmp
daa
outs
mov
inc
idiv
nop
das
shl
mov
inc
loopne
ror
outs
lock
jg
pop
jnp
sub
push
pop
pop
sbb
xchg
ds
std
(bad)
sub
cmp
nop
sbb
pop
das
pop
push
daa
nop
sbb
ds
pop
pop
das
mov
daa
das
js
das
stos
mov
das
nop
daa
mov
daa
sahf
sti
int3
inc
mov
mov
popa
lahf
imul
out
daa
das
ret
or
mov
pop
icebp
and
mov
cld
pop
mov
pusha
mov
daa
dec
sub
fsub
test
dec
dec
pop
enter
dec
pop
pop
lahf
sti
mov
out
jae
sbb
dec
xchg
pop
idiv
pop
dec
lods
pop
dec
mov
ds
pop
pop
rol
pop
xor
mov
in
adc
mov
jbe
adc
dec
pusha
daa
or
xor
mov
dec
ja
xor
(bad)
daa
jo
js
or
pusha
push
add
pop
nop
lock
pop
sbb
xchg
mov
ja
pop
rol
out
das
neg
shl
iret
or
jae
repnz
clc
mov
sub
inc
xor
pop
shl
outs
sub
outs
ss
iret
jnp
and
arpl
xchg
js
and
aaa
int3
cmp
getsec
fsub
push
fcomp
xor
stos
push
ds
pop
xchg
js
mov
add
aas
out
mov
rcr
nop
outs
xor
mov
inc
xlat
arpl
pop
fsubr
or
jmp
push
inc
idiv
mov
das
jae
sti
fdiv
jnp
pop
aaa
sub
addr16
jnp
jae
das
add
jge
jae
test
arpl
sar
pop
das
aaa
pop
das
int3
pusha
pmaxsw
das
dec
pop
pop
out
jae
sti
pop
pusha
pop
daa
push
out
mov
pop
inc
rol
call
adc
out
daa
push
enter
add
ret
mov
out
idiv
sysret
adc
sbb
pop
add
call
loopne
xchg
pop
addr16
test
dec
push
or
push
das
pop
fadd
retf
popw
pop
jno
fs
rcr
jl
xchg
popf
jae
pop
mov
xor
aam
cmp
jmp
add
inc
clc
cmp
dec
inc
daa
fbstp
out
pop
das
mov
iret
or
pop
out
pop
enter
arpl
aas
or
aas
ret
fadd
stos
pop
das
out
jae
fadd
mov
pop
mov
in
jnp
jae
das
loopne
fwait
jne
sbb
xor
scas
neg
add
in
xor
das
and
test
mov
div
ins
cmps
shr
daa
inc
aaa
in
loopne
adc
lahf
pusha
ja
mov
sub
jecxz
cli
cmp
aaa
lock
add
and
mov
pop
inc
nop
iret
jl
pop
pop
add
inc
jbe
xchg
xadd
xor
call
add
lea
lock
xchg
push
fs
sar
daa
adc
pop
pop
cmps
das
push
das
cwde
das
xor
sbb
push
aaa
shl
inc
in
xor
fcomp
pusha
(bad)
clc
aaa
xor
mov
mov
das
ds
lock
test
nop
sbb
pop
das
pop
shl
sbb
ds
retf
pop
das
mov
daa
das
call
ret
mov
or
sar
sbb
xor
jae
out
sub
imul
lahf
mov
(bad)
fist
jg
iret
jge
jae
dec
arpl
dec
outs
pop
dec
out
add
mov
pop
xchg
pop
mov
and
mov
not
pop
das
nop
fadd
inc
jg
das
loopne
out
jae
sti
pop
call
xchg
clc
pop
jge
lods
jle
add
or
mov
jae
out
rol
sbb
adc
pop
xchg
mov
test
cmp
nop
pop
inc
daa
pop
and
push
mov
fnstcw
pusha
mov
pop
out
jae
sbb
js
mov
pop
ret
add
popa
xchg
rol
enter
call
faddp
sahf
sti
push
ror
sub
test
dec
ret
pusha
fild
and
ds
pop
jmp
das
add
pop
mov
cmp
push
xchg
das
js
sti
fcom
dec
pop
das
add
nop
push
das
dec
xchg
xor
jae
sbb
imul
test
das
xchg
dec
ret
mov
stos
inc
add
test
iret
push
jb
cmp
aas
add
nop
pop
jecxz
xchg
pop
in
cdq
scas
jmp
loopne
rol
outs
add
sbb
aaa
rol
inc
sti
push
out
or
or
(bad)
sahf
dec
add
addr16
sub
mov
aas
rol
retf
pop
pop
rol
out
cdq
sar
fild
jecxz
sbb
inc
neg
dec
xchg
jmp
add
daa
mov
(bad)
cwde
push
xlat
inc
js
and
and
nop
sub
push
add
dec
push
lock
pusha
push
fcomp
xchg
iret
inc
daa
inc
xor
add
nop
xor
add
loopne
or
add
xchg
out
aas
and
pop
xor
push
ss
daa
sub
pop
xchg
test
js
pop
mov
pop
ret
jge
ja
pop
cmps
dec
lock
add
nop
mov
inc
sbb
iret
sbb
movs
das
push
pop
cmps
cmp
mov
aam
dec
sti
fsub
rol
sbb
nop
pop
mov
pop
es
mov
add
add
adc
test
push
dec
mov
gs
fcomp
daa
call
gs
add
cwde
pop
outs
mov
ficom
scas
dec
push
dec
fistp
push
mov
pop
push
pop
push
fdivr
neg
pop
daa
das
push
pop
pop
add
or
fdiv
ficomp
or
sub
sub
sbb
lock
jg
in
add
add
iret
or
daa
dec
call
xchg
pop
daa
pop
or
out
mov
cdq
inc
jbe
cs
add
xor
cwde
cmc
sbb
aaa
add
aaa
fistp
and
pop
daa
sub
xor
cmp
pop
aaa
jg
aaa
fadd
adc
ret
sahf
sti
das
enter
dec
or
jnp
fadd
or
sub
loopne
xlat
xor
das
mov
shr
jp
jo
push
cmps
outs
mov
ret
or
and
outs
fadd
push
pop
fs
push
mov
daa
test
sbb
dec
push
lods
rol
and
out
add
rcl
daa
jo
fld
pusha
daa
aam
xchg
jnp
fadd
in
cwde
leave
or
fld
mov
or
(bad)
imul
daa
popa
out
xor
and
in
or
sbb
add
push
inc
push
jg
pop
jg
mov
jbe
das
push
ja
pusha
add
shl
dec
jg
sbb
fsub
daa
das
clc
pop
imul
fidiv
or
sub
imul
pop
pop
cmp
mov
ror
push
inc
pop
lahf
sti
xchg
jg
test
and
jae
xlat
das
jo
ins
and
jg
das
aam
daa
xor
add
enter
fldcw
add
lea
popa
add
add
pop
cld
fs
adc
xor
mov
pop
scas
js
push
xchg
add
push
daa
mov
inc
enter
and
lock
sbb
jmp
test
test
aaa
mov
repz
ret
leave
(bad)
jae
fdiv
ret
ret
inc
jo
fs
jge
aas
push
mov
jge
popa
lahf
les
int
ja
mov
mov
lock
in
jmp
jbe
daa
sbb
and
fnstenv
dec
inc
daa
adc
enter
sub
cmp
or
sbb
out
fs
xor
add
dec
sbb
push
and
arpl
out
and
lock
inc
aaa
jo
jo
test
dec
out
inc
neg
add
mov
ret
sbb
and
lahf
fisttp
neg
jecxz
inc
pop
retf
pop
add
sahf
cmp
fsubr
dec
lahf
dec
pop
ja
mov
xlat
nop
or
add
lahf
sti
(bad)
outs
pop
fld
ja
pop
aaa
or
clc
daa
fmul
xlat
(bad)
out
jae
enter
xchg
pop
pusha
add
popa
jg
das
inc
daa
neg
out
push
jo
scas
add
add
ficomp
fisttp
pop
or
pop
add
fisubr
add
mov
xchg
fbstp
add
push
mov
pusha
jg
lock
je
xor
addr16
jge
xchg
add
lock
push
add
pop
js
mov
jnp
fmul
pop
fdiv
ficomp
or
sub
mov
or
cmp
stc
pop
shl
add
mov
clc
cmp
fadd
jmp
sub
sysret
sbb
push
fidivr
fimul
pop
or
mov
push
das
scas
pop
movs
test
add
scas
push
sbb
add
aas
test
push
mov
dec
mov
sbb
das
jae
sti
fsub
pop
inc
sub
wrmsr
pop
(bad)
or
out
lock
xchg
add
jnp
xor
or
sub
pusha
fild
sbb
mov
das
mov
pop
dec
aaa
pop
sar
jg
mov
das
mov
and
or
pop
add
das
pusha
(bad)
das
sub
mov
fild
addr16
rcr
sar
dec
add
push
pop
cld
add
inc
clc
daa
scas
and
daa
dec
mov
idiv
sahf
pop
stos
pop
aaa
fidiv
pop
and
xchg
ficomp
test
or
sub
shr
or
sub
enter
out
pop
mov
(bad)
mov
aaa
add
idiv
jg
enter
push
mov
out
(bad)
aaa
call
fsub
daa
aaa
lock
aaa
sti
pop
ret
push
sub
sub
mov
daa
xor
das
pusha
pop
popa
out
or
or
cmp
or
sub
js
scas
and
fistp
mov
cmp
mov
pop
pop
addr16
jnp
lock
xchg
cmp
cmp
add
test
jnp
ficomp
daa
sysret
or
jp
sti
ficomp
inc
das
(bad)
out
es
xchg
daa
or
pop
aaa
add
jnp
xchg
pop
sub
cwde
das
aaa
and
pop
fcomp
out
daa
fadd
cmp
dec
out
mov
add
add
mov
push
xlat
pop
push
xchg
test
je
jae
sar
pop
pop
fist
push
xchg
sbb
jg
mov
sub
js
cs
lock
test
outs
pop
rcr
pop
dec
xchg
nop
jge
dec
fsubr
mov
or
add
and
sub
enter
fs
inc
push
fsubr
mov
or
add
pop
retf
add
mov
in
xchg
scas
fdiv
sbb
add
sbb
daa
sub
or
push
mov
daa
js
sbb
mov
ret
add
out
mov
or
sub
add
out
div
lock
aaa
and
add
mov
mov
sbb
test
scas
sub
ja
shl
fdiv
jnp
rol
push
sahf
and
jg
pop
sar
addr16
mov
das
jno
fbstp
popa
out
rol
cmp
push
mov
pop
pop
xor
cmp
pusha
xchg
clc
aas
adc
scas
add
lock
repz
jg
int3
pop
mov
fs
cmp
arpl
or
rol
pushf
out
iret
jge
nop
pusha
xchg
mov
das
out
mov
dec
xorps
add
mov
mov
iret
pop
ret
pop
aam
loopne
daa
sbb
xchg
dec
pop
lock
or
or
or
push
mov
in
and
dec
and
fmul
jmp
fadd
sbb
mov
xchg
xchg
mov
inc
dec
adc
mov
daa
or
mov
rol
das
or
jge
pop
iret
sub
pop
xor
or
das
cmp
fadd
push
push
push
in
xor
mov
push
dec
(bad)
pop
jnp
mov
or
mov
ficomp
call
cdq
iret
push
sbb
clc
repz
add
or
pop
xor
out
jnp
(bad)
out
xor
mov
push
cmp
inc
dec
cmp
jge
mov
pusha
das
jmp
mov
jmp
pop
add
push
jo
iret
jge
mov
pop
aad
fld
and
push
sbb
lfs
inc
push
sbb
sahf
xchg
push
sbb
retf
sbb
push
inc
dec
repz
test
inc
mov
outs
mov
lods
jnp
xor
cmp
outs
and
das
mov
out
mov
pop
aas
pop
pop
aaa
jecxz
iret
cmp
mov
aaa
in
mov
add
pop
mov
sub
shr
sbb
add
test
dec
jg
add
repnz
inc
push
xchg
das
daa
push
test
mov
daa
das
mov
xchg
add
pop
pop
icebp
or
imul
add
push
daa
rcr
ret
fidiv
mul
loopne
cmp
dec
jge
mov
sub
clc
pop
repnz
das
push
inc
jmp
phsubsw
add
pop
pop
push
nop
ret
add
add
push
jmp
sbb
nop
pop
cmp
sbb
in
pop
dec
pop
adc
les
fdiv
sub
test
push
iret
cmp
or
pop
fcomp
daa
sbb
in
mov
dec
pop
jecxz
xchg
mov
outs
mul
sub
push
pop
fistp
push
nop
xor
pop
dec
clc
pop
xchg
das
or
daa
pop
or
jge
imul
das
cwde
out
popa
iret
pop
inc
add
daa
(bad)
out
or
jecxz
jl
add
aaa
mov
jae
sti
es
loopne
daa
clc
pop
inc
add
cmp
mov
pop
or
push
aaa
in
add
add
or
push
pusha
lds
lds
rcl
inc
sahf
int
add
and
in
retf
cmp
add
rol
adc
push
jbe
shl
int3
pusha
push
test
cmp
adc
inc
mov
inc
adc
mov
add
push
das
inc
xchg
xchg
push
imul
inc
push
dec
or
xchg
push
push
pop
mov
and
push
push
dec
dec
dec
add
inc
stos
mov
push
push
push
inc
rol
and
aas
add
or
add
das
(bad)
mov
inc
sbb
inc
enter
retf
adc
dec
add
dec
aaa
(bad)
push
mov
dec
add
jg
ss
jmp
add
jecxz
add
add
(bad)
(bad)
(bad)
inc
xor
and
inc
add
stc
inc
add
aam
add
inc
add
mov
inc
add
xchg
inc
fbstp
inc
jo
inc
add
and
inc
add
add
fbstp
jmp
inc
add
sub
aam
dec
add
xchg
inc
dec
add
jmp
inc
dec
add
mov
dec
add
rol
mov
add
fimul
dec
loope
sar
add
add
sub
dec
add
sar
aas
add
ins
xor
pop
xor
add
fiadd
mov
mov
adc
add
dec
rcr
add
or
or
or
or
or
add
jns
add
or
add
adc
add
adc
loope
add
pushf
cmp
or
outs
sub
aam
add
mov
add
retf
dec
sahf
std
mov
(bad)
cmps
int
pop
rcr
int
xchg
jecxz
idiv
dec
std
retf
(bad)
into
in
stc
(bad)
fbstp
retf
fcmovnb
stos
xor
jae
pop
xor
xor
dec
dec
ror
ret
loop
(bad)
mov
(bad)
mov
and
fs
and
and
fs
and
fs
jmp
pop
add
mov
cmovl
pop
cs
inc
push
adc
ret
rcr
pop
dec
ins
push
inc
test
sub
mov
and
or
pop
rol
iret
mov
(bad)
jmp
xor
mov
and
jb
add
idiv
retf
test
mov
adc
jl
jl
stc
rcl
inc
sar
jl
add
cmp
jb
lods
(bad)
mov
mov
ja
inc
push
pop
lods
add
fld
adc
fcomp
add
sar
in
dec
add
sub
mov
or
scas
sbb
mov
adc
mov
pop
int3
inc
mov
add
cmp
adc
pop
and
enter
cmc
js
jae
das
lahf
arpl
rcl
adc
mov
add
arpl
jnp
push
push
ret
or
mov
cmp
adc
add
add
test
adc
fmul
aas
sub
in
or
or
cli
sub
out
mov
dec
add
push
jnp
inc
add
lsl
movs
int3
xor
test
adc
jnp
popa
inc
lahf
dec
repz
dec
adc
lsl
popa
xor
inc
das
push
lds
dec
pop
or
add
div
sub
add
mov
dec
or
adc
adc
add
(bad)
fadd
xchg
push
add
add
gs
adc
xchg
add
and
sub
or
ficomp
out
dec
or
mov
lahf
cmp
in
add
dec
adc
push
sbb
das
daa
push
xchg
hlt
fisub
add
cmps
repz
sbb
mov
inc
ret
das
sbb
in
xor
dec
add
das
and
adc
sbb
adc
out
mov
xor
repz
imul
aaa
lods
imul
add
xchg
movs
or
inc
mov
out
cdq
sbb
enter
mov
aas
aaa
daa
lods
xchg
xor
ja
fild
adc
or
add
add
outs
cmp
add
or
test
pop
lahf
test
adc
adc
dec
ja
arpl
pop
add
xor
ret
fild
adc
mov
imul
rol
adc
faddp
push
add
xor
fmulp
fidivr
add
cmp
mov
adc
cmp
rcl
(bad)
adc
pop
mov
push
retf
mov
mov
loop
scas
pop
add
mov
adc
mov
mov
inc
dec
cdq
jnp
and
or
retf
adc
xor
inc
neg
out
sbb
or
or
adc
adc
or
and
adc
push
daa
jnp
sbb
outs
xor
add
and
jg
adc
sub
add
ja
add
ret
adc
jecxz
aaa
add
add
add
ja
add
daa
push
aas
cmp
pusha
add
ret
pop
jnp
xor
pop
add
pop
xchg
lock
add
and
neg
jmp
cmp
xor
loop
mov
add
or
fidivr
add
adc
xchg
mov
or
daa
add
sub
add
mov
stos
pop
or
and
add
and
sti
and
add
xchg
adc
and
adc
not
popa
add
adc
jmp
or
adc
add
addr16
sbb
mov
bound
fisubr
mov
mov
add
pop
stos
mov
out
add
add
inc
sbb
pusha
adc
adc
cmp
mov
add
mov
xchg
hlt
fimul
xchg
arpl
sahf
loope
jnp
out
jmp
sbb
pop
add
pop
mov
push
daa
adc
fild
and
ins
xor
pop
cmp
fcomp
or
arpl
push
or
repz
outs
add
ja
mov
retf
fisub
and
add
or
or
mov
and
lahf
scas
mov
pusha
outs
fs
mov
inc
in
add
fwait
xor
cdq
popa
xor
xlat
sub
in
lea
cmp
xchg
sub
jae
add
movs
test
arpl
add
add
mov
out
mov
jnp
or
fmul
mov
adc
jnp
neg
fcomi
or
daa
outs
adc
ja
inc
js
pusha
arpl
mov
pop
add
and
adc
mov
jnp
xchg
shl
daa
ret
xor
repz
(bad)
ss
inc
call
fild
inc
std
add
or
add
mov
or
add
out
add
int3
jg
add
stos
add
pop
push
or
pusha
out
out
pop
push
add
test
adc
pop
adc
inc
add
mov
stos
shl
adc
mov
inc
pop
and
jne
pop
or
mov
xchg
ja
(bad)
aas
int3
jne
ja
pop
int3
add
add
xor
pop
data16
jl
clc
add
add
add
add
add
jl
pop
push
xchg
jmp
fld
add
xor
stos
retf
add
fadd
fadd
mov
or
lds
mov
mov
fsubr
imul
leave
mov
arpl
inc
sysret
jg
add
add
(bad)
jo
fild
sti
adc
add
add
add
add
dec
frstor
add
add
add
add
iret
add
call
out
cld
add
jg
(bad)
adc
iret
mov
mov
pop
(bad)
sbb
mov
aad
jne
push
jge
loope
mov
fsincos
ja
jge
sar
loope
aas
std
pop
add
neg
jnp
ja
pop
pop
repz
add
mov
iret
mov
add
mov
popf
add
and
fld
sar
add
pop
mov
jnp
imul
xchg
add
add
je
inc
xlat
outs
jmp
rcr
xchg
test
jb
pop
add
or
hlt
xchg
or
aaa
xor
ret
stos
adc
js
mov
jmp
fsub
adc
adc
adc
push
and
rol
outs
mov
mov
retf
add
mov
jnp
add
mov
lahf
lahf
stos
mov
add
jnp
or
outs
xchg
and
inc
jo
push
mov
ins
fcomp
or
retf
movnti
sbb
fist
xchg
jp
jnp
daa
adc
pop
enter
daa
adc
or
mov
fst
(bad)
out
clc
push
add
sti
mov
adc
dec
xlat
aam
jb
jne
je
loope
shl
ja
add
mov
add
and
adc
add
add
mov
add
cmps
and
xchg
or
daa
and
fcomp
arpl
xchg
lahf
daa
rep
pop
add
fidivr
add
fisttp
iret
or
adc
and
add
add
or
lahf
inc
loopne
push
inc
std
out
adc
mov
fild
repz
cmps
imul
xor
dec
sub
push
push
dec
jo
sbb
fs
jo
adc
div
pop
add
inc
sbb
inc
inc
pop
dec
(bad)
cmp
(bad)
(bad)
frstor
retf
stc
int3
loope
test
mov
retf
ffree
loopne
int
mov
(bad)
(bad)
dec
shr
mov
test
in
std
xlat
jmp
shr
jmp
into
lods
adc
fcom
jmp
repz
shl
repnz
into
lods
retf
cmp
jle
mov
adc
mov
iret
out
shl
sti
xchg
not
std
(bad)
mov
shl
lods
mov
sar
mov
lea
cmps
add
mov
mov
mov
(bad)
sti
out
mov
repnz
pop
(bad)
idiv
fimul
rcl
out
mov
mov
mov
push
mov
ror
(bad)
iret
mov
mov
stc
mov
fistp
jle
ror
and
inc
dec
dec
dec
mov
(bad)
mov
aad
mov
into
inc
and
cmp
push
(bad)
mov
(bad)
movs
(bad)
inc
mov
aam
sar
rol
iret
ret
popa
iret
jge
add
out
fnstcw
std
mov
into
stos
xor
sar
mov
(bad)
mov
stc
mov
les
aaa
into
mov
ret
mov
retf
stc
shr
mov
in
ret
shr
xor
ret
xor
inc
dec
adc
adc
add
sub
push
push
push
dec
dec
add
sar
cs
add
sub
sub
int
ret
cmps
or
jno
ds
mov
xor
add
pop
and
jae
sar
add
clc
(bad)
jg
add
ins
popa
imul
dec
pop
push
imul
sub
add
push
dec
inc
pop
add
mov
lods
push
add
ret
mov
das
jp
rcr
inc
popa
je
bound
aaa
ds
scas
sub
gs
adc
sub
pop
jno
adc
add
aas
inc
xor
repnz
stc
aam
cmp
inc
aam
enter
mov
mov
cvtpi2ps
add
mov
mov
outs
pop
adc
add
xlat
jmp
repnz
ror
mov
add
(bad)
fidivr
mov
and
cmps
mov
addr16
aad
mov
fist
aas
add
and
sub
mov
xchg
(bad)
pop
adc
das
sub
(bad)
aas
mov
(bad)
and
mov
out
pusha
push
cmova
push
jae
stos
mov
mov
std
scas
jmp
rcl
retf
and
int3
and
push
outs
jb
pop
aaa
inc
add
jmp
or
inc
inc
push
dec
push
pop
dec
inc
mov
add
iret
out
add
mov
sar
mov
into
retf
std
mov
les
int3
in
sar
mov
retf
(bad)
cmp
pop
and
into
mov
sbb
xor
pop
ror
hlt
clc
sti
xlat
stos
mov
(bad)
retf
pop
adc
inc
push
gs
outs
jbe
push
ins
popa
jns
das
pop
sbb
inc
out
ja
mov
or
sar
xchg
outs
and
add
nop
mov
mov
bound
add
iret
adc
ins
or
inc
sub
pop
daa
adc
inc
add
dec
rol
(bad)
dec
push
sub
lock
(bad)
(bad)
aas
add
(bad)
jg
jg
or
sti
and
(bad)
pop
or
sbb
pop
sbb
sub
pop
ins
mov
pop
dec
stos
push
jg
adc
jl
(bad)
(bad)
call
pusha
sub
fdiv
pop
sbb
inc
push
push
sbb
std
pop
mov
and
std
sbb
jae
adc
xor
scas
jmp
lods
daa
pop
dec
cdq
sbb
std
(bad)
fild
(bad)
arpl
(bad)
jg
pop
pop
dec
(bad)
jg
xor
dec
jmp
addr16
xor
idiv
aas
xor
int3
dec
inc
aas
push
(bad)
(bad)
dec
pop
jg
aas
int3
dec
xor
(bad)
jmp
add
stos
sub
(bad)
call
call
stos
cmp
push
stos
cmp
push
test
inc
(bad)
aas
test
jmp
dec
sbb
sub
add
xor
adc
jne
(bad)
jg
inc
xor
sbb
addr16
sub
mov
push
pop
adc
je
push
or
ja
(bad)
push
or
arpl
dec
hlt
push
mov
sub
call
or
out
(bad)
mov
jmp
adc
cmp
pop
add
mov
sbb
(bad)
(bad)
push
xor
cdq
sbb
pop
call
adc
pushw
mov
inc
add
int3
dec
xor
loopne
scas
pop
cmp
(bad)
jg
jmp
sbb
imul
(bad)
jg
sub
imul
loopne
lods
inc
xor
dec
mov
cwde
pop
(bad)
(bad)
(bad)
jmp
push
pop
outs
hlt
push
test
inc
sbb
jg
daa
inc
popa
data16
push
xor
or
and
or
test
and
(bad)
call
bound
add
sbb
mov
ret
sbb
aas
or
adc
mov
pop
icebp
pusha
add
aaa
aas
or
jne
add
sub
add
jecxz
into
loopne
lahf
and
pop
cmp
cmp
fcom
xor
pop
into
sbb
fwait
dec
cmp
das
scas
das
xor
jg
push
or
into
cmp
push
sub
cmp
inc
or
pop
pop
jno
clc
ret
dec
in
arpl
xor
outs
call
es
sbb
int
fsincos
(bad)
add
data16
cdq
pop
data16
add
data16
pop
ret
aas
and
xor
idiv
ret
pop
outs
es
and
xor
and
cdq
sbb
sti
pop
(bad)
(bad)
add
ins
pop
mov
sbb
inc
jg
(bad)
idiv
ins
pop
data16
gs
int3
dec
add
and
sar
cmc
add
loopne
fbld
lds
pop
sar
sbb
push
outs
call
pop
daa
sub
adc
pop
mov
cmps
mov
or
not
pop
inc
add
call
inc
add
pop
inc
add
add
inc
add
loopne
jmp
les
sbb
(bad)
dec
loopne
into
mov
mov
rcl
mov
adc
or
out
xlat
rcr
add
jle
mov
pop
pop
mov
sbb
sbb
xor
ret
add
mov
mov
xor
mov
or
shl
add
ja
loope
jg
cs
inc
into
add
xor
mov
imul
pop
mov
aad
add
mov
outs
jne
add
fadd
add
aam
add
pop
pop
xchg
jmp
int3
pop
fcmovne
pop
scas
jmp
test
les
or
rol
mov
pop
popf
mov
pop
daa
mov
add
scas
and
mov
iret
out
or
lahf
test
cmps
mov
pop
mul
inc
daa
pushf
pop
xlat
add
xchg
pop
adc
pop
and
mov
daa
jo
inc
mov
pop
mul
call
pop
adc
js
cmps
sub
je
lahf
jo
push
mov
pop
pop
fadd
ja
pop
neg
pop
fwait
pop
pop
add
ret
loope
lahf
push
pop
push
test
lahf
dec
pop
sub
xlat
lahf
inc
pop
and
cmp
dec
push
mov
lahf
xor
call
sub
push
add
sub
sub
xlat
push
test
xor
and
lahf
and
push
adc
pop
lahf
or
pop
cmps
adc
rol
pop
push
add
pop
add
push
sbb
add
pop
inc
lods
sti
dec
scas
add
ds
imul
(bad)
(bad)
mov
fs
imul
jno
jae
jne
ja
jns
(bad)
(bad)
(bad)
jp
add
or
or
add
or
adc
adc
adc
adc
popa
xor
mov
fldenv
outs
outs
xor
jae
jbe
cmp
(bad)
(bad)
(bad)
jns
cmp
add
sbb
pop
sbb
sbb
sub
and
sub
xor
sub
cld
xor
sub
and
addr16
imul
jp
outs
sbb
sbb
sbb
push
xchg
push
fdivr
pop
and
and
and
and
sbb
sbb
add
std
cmp
add
sbb
retf
mov
std
add
add
add
pop
leave
add
sbb
add
sbb
jbe
mov
add
add
(bad)
ffreep
add
or
or
add
fs
add
add
add
add
and
add
or
jge
out
sub
add
add
sub
das
add
add
enter
add
add
and
out
mov
adc
add
xchg
cld
add
adc
adc
sbb
adc
mov
adc
and
iret
sahf
std
adc
adc
add
add
add
and
or
and
xchg
fld
sbb
sbb
sbb
fcomp
sbb
sbb
sbb
mov
out
sbb
add
add
add
jbe
push
sbb
add
and
and
adc
add
add
and
sub
add
cmp
or
add
add
out
idiv
add
add
add
cmp
add
nop
das
cmp
aas
das
in
sub
sub
sub
sub
jnp
fwait
adc
or
add
add
prefetcht0
add
enter
and
and
or
ss
(bad)
xor
pop
or
popf
mov
jbe
or
xor
adc
or
add
test
xor
or
(bad)
jle
inc
or
aaa
cmp
or
ds
add
or
cmp
repnz
sahf
jge
cmp
or
ins
out
aas
xor
xor
add
or
xor
jg
inc
or
and
add
and
in
add
add
add
and
mov
inc
add
add
or
add
pop
add
pop
leave
and
pop
pop
sbb
push
sti
leave
dec
inc
adc
inc
add
add
ins
pop
ror
pop
dec
mov
and
and
sbb
add
sbb
sbb
or
or
add
or
add
dec
or
dec
or
sbb
or
inc
repnz
cmp
push
adc
or
sub
aas
inc
sub
push
or
sub
push
or
push
or
dec
jle
xor
sbb
repz
sbb
shl
xchg
push
and
push
add
pop
test
pop
or
push
pop
add
push
sub
pop
or
jbe
cmp
aaa
push
pop
sbb
(bad)
dec
xor
or
add
sub
push
sub
sub
fdiv
pusha
or
add
or
inc
repnz
and
add
in
bound
xor
or
or
ss
adc
add
nop
sbb
xor
xor
in
sar
ud2
push
rdpmc
imul
dec
test
sub
jg
rol
add
or
sti
or
add
adc
lmsw
adc
jb
jae
je
xchg
fmul
pop
add
or
or
sbb
add
xor
add
(bad)
not
fsubr
or
sbb
(bad)
ucomiss
popa
daa
in
aaa
(bad)
or
btc
sbb
(bad)
in
addr16
jns
(bad)
or
or
add
jmp
add
xor
add
xor
sbb
sbb
nop
addr16
and
in
jnp
prefetch
add
xchg
sahf
sbb
or
xchg
dec
push
sub
and
or
mov
xor
mov
lahf
xor
mov
lea
xchg
sbb
or
test
out
pop
mov
nop
adc
mov
fcom
sbb
or
cmp
and
repnz
xchg
adc
seto
or
xchg
or
sti
xchg
mov
or
push
xchg
mov
cdq
or
ror
or
xor
xor
xor
dec
fsubr
call
or
add
leave
pop
cmp
sbb
popf
add
in
fdivr
fstp
sbb
sbb
mov
or
add
add
or
pop
push
add
push
movs
mov
add
movs
add
cmps
add
ss
add
sub
test
mov
sub
add
push
das
push
xor
ds
jb
push
cs
and
add
lods
add
add
push
aaa
in
(bad)
aas
enter
scas
sub
mov
or
aas
in
xchg
mov
or
sbb
sbb
or
nop
pop
leave
aaa
pop
or
or
mov
or
or
lahf
and
mov
or
xor
daa
out
fwait
daa
pop
or
or
add
repnz
or
or
or
push
sbb
xor
add
and
add
(bad)
jmp
xchg
add
add
pop
nop
cld
xchg
in
or
add
add
cmp
add
add
add
add
xor
add
out
mov
mov
rol
or
ret
or
mov
lds
mov
bswap
aaa
dec
jbe
add
retf
add
retf
or
xor
add
int
fadd
jbe
add
sub
or
rol
or
adc
aas
cdq
mov
rol
aam
dec
cwde
sti
fst
das
add
adc
aad
adc
xchg
aas
ret
adc
adc
aaa
(bad)
adc
and
nop
aaa
sub
xlat
adc
inc
mov
xor
fld
adc
and
cmp
sbb
sbb
and
and
pop
out
repnz
sbb
adc
sbb
leave
aaa
adc
adc
adc
adc
cmp
dec
adc
fild
sbb
sbb
and
adc
fld
fiadd
or
sbb
sbb
sbb
sbb
add
sbb
add
and
add
fsubr
(bad)
or
and
add
in
test
adc
add
xchg
pusha
lahf
in
in
or
xor
arpl
out
call
add
fld
daa
jmp
xor
add
aaa
add
sbb
jge
sbb
sub
out
(bad)
repnz
xor
xor
sub
add
add
add
add
cmp
add
add
adc
fld
test
sub
das
sbb
cmp
mov
sub
adc
xor
add
and
test
add
or
repnz
stc
psubusb
in
sbb
add
or
or
add
fwait
sbb
add
iret
inc
pop
fsubr
add
or
or
jns
mov
sbb
cmp
or
or
or
mov
or
or
dec
ret
pop
and
sbb
sbb
sbb
sbb
inc
jbe
in
and
add
sub
adc
pop
add
pop
add
pop
and
add
and
aaa
pop
push
xor
idiv
or
or
adc
or
mov
pop
or
or
push
or
pop
and
nop
add
sbb
out
add
or
xchg
mov
adc
repnz
or
adc
daa
adc
adc
std
(bad)
in
adc
push
adc
add
fadd
sbb
sub
add
in
mov
adc
sbb
xchg
and
sbb
jb
ins
test
push
leave
and
sbb
and
push
jbe
dec
sbb
ss
add
fadd
mov
adc
ja
adc
xor
add
add
and
sub
dec
test
adc
and
aaa
push
and
pusha
(bad)
daa
and
push
push
sub
adc
push
daa
adc
add
add
in
or
and
adc
or
adc
adc
adc
sti
add
sub
adc
add
adc
adc
adc
sub
sub
add
add
sbb
repz
add
add
add
sbb
leave
or
std
xor
add
add
add
setb
sbb
add
test
das
mov
aaa
and
add
cmp
into
std
cmp
adc
or
mov
or
cmp
sbb
add
add
pop
mov
and
aas
add
add
enter
inc
add
add
movaps
add
sti
mov
adc
inc
adc
pusha
aas
sub
sub
sub
adc
jmp
add
add
(bad)
pop
aaa
or
or
mov
add
inc
or
push
add
xor
cs
icebp
or
cmps
add
dec
or
mov
ss
adc
sbb
xor
(bad)
jg
adc
add
sub
or
push
sbb
pop
pop
jmp
jle
(bad)
or
and
ss
in
or
xor
sub
(bad)
(bad)
dec
xor
pop
sbb
add
daa
add
or
adc
aaa
adc
push
aaa
add
(bad)
mov
add
or
daa
or
sbb
mov
test
add
sbb
add
push
or
add
ud0
(bad)
jmp
or
push
sbb
or
adc
or
inc
daa
push
sub
pop
sbb
sub
xor
call
add
pop
and
ss
or
pop
push
sbb
das
push
jg
push
adc
or
or
cvttps2pi
sub
sbb
out
(bad)
add
sub
sbb
add
adc
aaa
push
xor
adc
adc
mov
sub
out
aaa
push
sub
arpl
push
sbb
or
push
sbb
das
or
add
(bad)
(bad)
mov
add
push
aaa
or
adc
sub
daa
add
comiss
sub
sbb
dec
aaa
or
or
push
and
add
(bad)
or
xor
or
sbb
adc
add
push
xor
aaa
adc
or
or
sbb
push
aaa
add
add
adc
cmp
dec
sub
xor
and
add
aaa
adc
sbb
or
sub
and
sbb
scas
xchg
push
add
cvttps2pi
pop
adc
add
pop
jne
es
or
(bad)
add
push
pop
push
mov
sbb
or
adc
pop
and
and
mov
sbb
es
inc
sbb
aaa
pop
sbb
add
mov
ja
or
cld
adc
push
adc
sbb
ss
lods
or
dec
sbb
sub
xor
sbb
sbb
add
push
sub
aaa
icebp
inc
sbb
aaa
add
and
push
sbb
das
psllw
jmp
mov
sbb
pop
adc
add
and
pop
and
cmp
fist
push
jge
and
pop
or
jg
(bad)
push
push
add
or
aaa
add
pop
or
add
and
(bad)
dec
or
or
push
xor
sbb
ss
adc
or
(bad)
(bad)
out
clc
push
sub
sbb
or
aaa
adc
aaa
or
push
xor
sbb
sbb
push
sbb
sub
and
mov
or
or
pop
sbb
adc
adc
pop
imul
scas
mov
pop
sbb
add
adc
adc
pop
sub
push
adc
add
add
popf
sbb
or
add
and
aaa
getsec
adc
(bad)
(bad)
mov
sbb
daa
or
push
xor
sbb
daa
adc
push
xor
pusha
and
(bad)
inc
bound
push
sub
adc
pop
cmc
adc
adc
push
sub
(bad)
inc
daa
arpl
(bad)
or
or
rdtsc
push
sbb
(bad)
(bad)
dec
ss
and
sbb
push
sbb
adc
sbb
xchg
(bad)
and
add
(bad)
mov
xor
sbb
ss
jmp
or
push
(bad)
fisttp
sbb
mov
sti
or
cvttps2pi
sbb
xor
sbb
(bad)
mov
fnstenv
add
add
sbb
jg
adc
call
add
adc
push
and
add
pop
sbb
sbb
popf
(bad)
ffreep
mov
or
std
aaa
adc
sbb
adc
out
cli
mov
or
adc
or
int
xor
xor
fwait
(bad)
push
sbb
ja
inc
sbb
ss
sub
add
ss
sbb
sbb
sbb
aaa
xchg
sub
sbb
ss
xor
or
push
dec
jp
ss
cdq
ins
add
jg
and
push
pop
or
add
pop
aaa
outs
sub
adc
push
or
push
or
and
add
ins
or
add
getsec
add
mov
or
add
adc
push
aaa
sbb
adc
add
fldcw
add
(bad)
push
pop
add
sub
sub
xor
adc
daa
add
push
sbb
(bad)
(bad)
(bad)
jg
aaa
adc
adc
or
push
sub
xor
or
push
ss
or
add
add
jmp
push
add
(bad)
or
and
and
add
sbb
aaa
out
jae
(bad)
(bad)
mov
add
or
imul
and
or
daa
or
neg
sbb
push
sub
adc
add
clc
outs
clc
ss
or
jmp
push
ss
xor
(bad)
jg
and
sub
push
sbb
or
sbb
aaa
add
adc
std
(bad)
push
pop
sbb
and
xor
add
ja
or
aaa
adc
add
push
and
aaa
lock
or
or
or
add
cmp
or
jmp
add
ss
or
(bad)
(bad)
(bad)
jg
xor
adc
and
das
push
and
pop
adc
sbb
xor
add
cld
(bad)
inc
or
add
add
sbb
sub
ss
daa
add
or
add
sub
add
xor
sbb
sbb
sbb
add
sbb
dec
xor
add
ja
cld
aaa
adc
push
aaa
cmp
or
test
push
jle
or
pop
and
sbb
sbb
imul
adc
add
or
add
push
movs
or
rdpmc
adc
call
or
push
sbb
xor
xchg
or
sbb
dec
sub
push
sbb
and
sbb
fiadd
call
push
and
sbb
ss
or
add
mov
sub
mov
push
sbb
add
push
and
sbb
call
mov
add
adc
sbb
or
push
and
cs
xor
xor
inc
and
sub
xor
cvtpi2ps
test
xor
test
jge
popf
adc
aaa
loopne
ja
add
cdq
push
and
sbb
sbb
cld
cmp
daa
adc
cmp
xor
add
adc
or
adc
cmc
add
adc
push
cmps
xor
and
cs
adc
cmc
outs
ret
add
and
add
or
mov
add
xor
push
or
xor
sbb
call
add
pop
aaa
or
cmp
sbb
adc
(bad)
dec
adc
or
and
xor
adc
jecxz
outs
loop
or
sub
das
adc
pop
and
sbb
sbb
sbb
call
xor
sbb
sub
lea
imul
loopne
mov
inc
sub
xor
aaa
or
xlat
ucomiss
leave
adc
push
xor
sbb
aaa
adc
push
and
sub
xor
and
or
and
sbb
add
sub
pop
push
dec
(bad)
out
xor
and
add
nop
or
xor
xchg
cmp
sub
addr16
push
sub
and
das
popf
push
xor
jmp
adc
xchg
or
xchg
(bad)
cmp
jmp
add
adc
add
adc
lahf
sar
push
sub
aaa
daa
or
add
or
pop
(bad)
jmp
and
jnp
or
add
adc
xchg
add
sbb
add
outs
sub
or
mov
or
push
or
cs
mov
add
daa
adc
or
adc
cwde
or
fdiv
pop
movs
or
adc
aaa
adc
mov
sub
or
aaa
add
ror
sbb
ror
cli
(bad)
push
pop
pop
push
sbb
and
add
push
sbb
cvttps2pi
jmp
sub
sub
aaa
(bad)
adc
push
ret
(bad)
push
push
add
xor
daa
or
push
sbb
adc
adc
or
adc
xchg
shl
adc
sbb
fdivr
call
inc
and
adc
xor
aaa
adc
push
sub
sub
dec
xor
and
call
xlat
icebp
sbb
daa
or
pop
fwait
push
or
xor
ret
push
pop
sub
xor
ss
adc
xchg
(bad)
or
add
push
and
sbb
sub
sub
out
loop
hlt
ss
xor
and
jns
comiss
ret
ror
sbb
add
or
sub
daa
mov
(bad)
sar
dec
and
rcr
loope
and
movs
pop
or
push
and
and
faddp
fcomip
and
aaa
or
adc
jmp
add
adc
mov
aaa
fwait
adc
sub
ss
cli
add
sbb
or
add
pushf
adc
cwde
iret
sub
add
xor
pop
ret
aaa
or
pop
adc
aaa
pop
(bad)
mov
(bad)
or
adc
sahf
lods
adc
pop
and
sbb
or
(bad)
jg
sti
adc
pop
sbb
pop
jge
push
sub
sub
or
add
cdq
cli
rdtsc
add
adc
add
xor
and
icebp
(bad)
call
sub
sbb
and
adc
push
out
cmps
dec
add
adc
push
sub
daa
and
ja
loop
or
add
add
adc
push
and
call
sbb
xor
or
cmp
xchg
xchg
sbb
pop
sbb
aaa
push
call
push
sub
xor
sbb
add
sbb
xor
sub
scas
aaa
xor
xor
adc
pop
pop
stc
out
push
dec
push
or
aaa
movs
adc
push
sbb
sub
cvttps2pi
aaa
add
adc
adc
pop
sbb
jle
mov
add
sub
sbb
(bad)
inc
or
movs
or
add
sbb
or
(bad)
(bad)
mov
or
test
ucomiss
xor
sbb
rcr
rcr
pop
aaa
wrmsr
adc
adc
push
add
stos
or
and
sbb
push
dec
ss
adc
stos
adc
add
lea
or
add
inc
and
call
fwait
sub
daa
add
pop
and
and
sbb
sub
cmp
add
add
aad
or
adc
push
int
xor
daa
or
push
and
add
ffreep
mov
add
and
add
and
or
mov
or
or
add
push
sbb
add
adc
or
sbb
pop
jmp
and
sub
and
or
or
(bad)
mov
sbb
aaa
add
adc
add
and
clc
(bad)
mov
or
adc
adc
push
xor
sbb
jo
jg
add
or
cmp
push
and
aas
clc
inc
push
sbb
sbb
push
rdmsr
push
loope
jb
jl
sbb
test
jmp
adc
(bad)
or
mov
adc
or
or
pop
aaa
or
mov
push
dec
getsec
mov
add
das
mov
mov
cmp
cvttps2pi
xchg
pop
outs
adc
add
sub
sub
sub
and
xor
loop
add
or
sbb
push
sub
adc
push
and
daa
adc
or
or
add
or
push
sbb
sub
call
fdiv
xor
pop
add
add
adc
(bad)
or
dec
sbb
sbb
or
or
jmp
or
(bad)
mov
inc
aaa
adc
sbb
sub
std
cmp
icebp
and
add
mov
or
add
add
or
nop
jecxz
dec
adc
mov
ss
add
mov
and
xor
sbb
sub
ret
dec
aaa
pop
and
and
sbb
out
mov
or
aas
or
adc
add
adc
std
scas
mov
push
sbb
(bad)
pop
and
sub
cvttps2pi
sub
add
mov
je
loop
jmp
xor
add
mov
jecxz
or
add
aaa
or
aaa
adc
add
or
mov
aaa
add
or
or
or
or
push
sbb
jmp
dec
push
adc
adc
xor
pop
or
xchg
(bad)
(bad)
(bad)
(bad)
mov
sub
ss
or
mov
xor
and
xor
pop
and
add
(bad)
(bad)
dec
or
add
or
or
or
or
push
sbb
xor
sub
sbb
xchg
fisttp
rol
sub
add
retf
lock
inc
and
adc
aaa
or
or
add
or
pop
pop
aaa
adc
sbb
dec
inc
jne
ss
ss
std
mov
adc
adc
adc
stos
or
rol
xchg
sbb
aaa
ret
pop
or
sbb
cmp
inc
pop
add
pop
sbb
sub
aaa
or
or
push
sbb
jmp
imul
adc
push
and
outs
mov
or
or
add
add
push
pop
add
or
add
or
add
adc
sbb
sbb
push
aaa
add
test
xchg
loope
add
adc
fwait
add
dec
lock
pop
lds
ss
std
add
ud0
or
mov
or
mov
sub
and
and
add
sub
sbb
add
aaa
ja
fwait
(bad)
sbb
and
sbb
add
xor
cs
jmp
or
ja
add
and
or
xor
add
repz
xchg
das
or
add
adc
or
sub
inc
push
ss
add
add
adc
sub
sbb
xor
or
enter
cmps
dec
sbb
and
lock
add
add
xor
jg
mov
pop
aaa
or
or
ja
pop
add
(bad)
adc
sbb
add
repz
lods
sub
cs
add
or
or
or
adc
push
rol
or
adc
or
add
or
leave
inc
xor
ja
adc
inc
sub
add
add
scas
outs
ret
mov
cvttps2pi
ficom
icebp
and
or
aaa
or
push
sbb
sub
call
sbb
retf
and
sbb
shl
or
xor
pop
and
and
sbb
fisttp
sbb
mov
and
fcom
(bad)
push
and
sub
or
imul
jmp
or
sub
adc
cli
push
adc
add
add
push
sbb
sub
sbb
lods
imul
and
and
cmc
and
stos
into
mov
add
or
sub
adc
mov
or
add
add
das
cmp
xor
add
adc
rdmsr
adc
rol
clc
ja
sbb
ss
xor
sbb
scas
out
fisubr
das
or
mov
or
and
shl
adc
and
sbb
add
sub
das
xor
push
sbb
cmps
ja
jo
sbb
sbb
sub
fild
das
or
or
mov
push
and
and
or
add
push
sbb
(bad)
mov
or
or
sub
sbb
sbb
xor
aad
leave
sbb
shl
pop
lds
inc
inc
mov
out
jae
ffreep
jg
sbb
sbb
xor
sub
icebp
or
aaa
adc
dec
mov
xlat
push
sbb
sbb
test
lds
and
inc
or
or
adc
add
cmp
sub
sbb
sbb
sub
push
xor
outs
ret
aaa
pop
sbb
ja
xor
jmp
pop
mov
sub
pop
out
fadd
sbb
xor
es
add
xlat
jmp
std
mov
ret
or
jmp
sbb
cld
sbb
xor
ss
add
sub
daa
adc
adc
mov
adc
xor
xchg
icebp
ja
jmp
add
or
sbb
or
add
adc
ret
les
(bad)
inc
mov
sbb
(bad)
add
or
or
push
fwait
clc
shr
add
add
pop
sbb
add
dec
ss
push
(bad)
call
and
sbb
sbb
push
sbb
xor
adc
add
outs
ja
mov
adc
stc
sub
ss
or
adc
pop
dec
arpl
adc
adc
sbb
pop
xor
bound
sbb
push
fst
inc
push
ffreep
ss
cvttps2pi
in
(bad)
jg
jg
fadd
pop
arpl
cs
or
adc
adc
or
add
cmovge
(bad)
and
or
stos
movs
adc
or
push
(bad)
mov
add
add
or
or
or
aaa
or
fdiv
sbb
sbb
aaa
jae
adc
clc
out
(bad)
cmp
aaa
add
fiadd
arpl
rcr
cmp
ins
popa
and
sbb
arpl
rdtsc
or
push
sub
aaa
cmc
sbb
add
mov
sub
sub
aaa
or
sar
daa
pop
sub
sbb
fadd
outs
pop
ja
adc
add
mov
push
js
or
dec
push
and
mov
sub
ficom
ss
pop
or
mov
add
sub
sbb
out
push
aaa
mov
add
or
sbb
sub
shl
or
pop
aaa
jg
lahf
jmp
sbb
add
dec
sub
aaa
adc
sbb
pop
and
rcl
and
fcmovnbe
add
or
mov
xor
and
adc
or
adc
outs
clc
cmp
or
sub
mov
and
adc
dec
mov
add
adc
and
or
add
sbb
sbb
xor
sub
or
out
jbe
enter
mov
and
sbb
xchg
add
or
add
or
push
and
push
sbb
and
clc
(bad)
mov
sbb
das
or
sub
or
sbb
add
push
adc
push
sub
das
push
and
sub
or
aaa
push
retf
sbb
add
or
or
add
push
sbb
adc
clc
ffreep
aaa
or
sbb
pop
pop
push
sbb
pop
mov
sbb
pop
and
add
pusha
add
add
adc
add
pop
add
mov
sbb
and
push
ja
add
add
(bad)
adc
sbb
add
adc
adc
(bad)
mov
adc
and
sbb
and
jge
and
sbb
outs
inc
out
sbb
add
add
sbb
dec
je
and
add
fstp
leave
add
pop
add
in
cmp
or
push
add
add
sub
add
push
add
and
es
inc
adc
adc
and
jbe
in
jbe
or
add
or
sbb
cdq
add
mov
or
or
out
push
int3
fld
add
sub
sub
fisttp
or
or
mov
adc
jae
adc
out
out
jbe
and
xor
xor
xor
push
pop
and
pop
inc
out
cmp
sbb
sbb
sbb
add
push
and
ret
fstp
sbb
or
push
ror
or
add
and
and
test
es
and
add
xor
cs
test
and
add
xlat
in
arpl
push
adc
add
(bad)
fucomp
jg
sbb
and
and
and
sbb
aaa
adc
add
push
xor
clc
sti
jne
sbb
sub
sbb
loop
std
outs
popa
push
sub
ror
add
mov
add
cmps
jl
jbe
lods
das
pop
xor
or
jl
dec
cvttps2pi
add
adc
test
mov
pop
ss
add
sub
getsec
mov
arpl
add
adc
popa
ret
xor
aaa
getsec
jns
aaa
or
wrmsr
bswap
mov
xor
mov
or
mov
or
and
xchg
fmul
inc
or
adc
and
jle
mov
sub
(bad)
call
or
and
ja
mov
or
xlat
in
inc
or
push
xor
add
or
or
or
or
adc
iret
mov
or
add
mov
or
dec
das
push
(bad)
clc
add
push
sbb
into
push
sbb
xchg
daa
push
and
jge
xor
push
or
fild
imul
mov
iret
xchg
in
and
out
ja
add
and
and
and
out
and
or
or
(bad)
jne
into
or
ja
sbb
lahf
or
or
pop
xlat
add
aas
jbe
add
add
add
pop
cld
pop
daa
add
pop
pop
jle
push
or
add
out
popf
in
pop
aaa
cmp
cs
or
not
das
adc
sub
test
int
add
mov
adc
add
das
ja
push
push
jae
mov
aaa
hlt
add
sub
ret
mov
ret
adc
fist
xor
fst
xor
fucomp
adc
add
add
add
std
out
lds
sbb
add
sbb
pop
add
mov
mov
fild
sbb
fld
sbb
fnsave
mov
add
add
and
or
add
jmp
xor
std
or
add
mov
sub
add
adc
scas
fucomip
adc
ss
adc
adc
out
or
or
xchg
xor
xchg
or
shl
out
out
fsubr
xor
or
pop
sbb
cmps
mov
jae
inc
add
add
and
mov
pop
aaa
and
adc
ss
add
mov
push
inc
add
pop
adc
push
sub
icebp
je
adc
adc
ror
aam
sub
das
packssdw
das
dec
adc
push
sbb
sbb
xlat
pop
aaa
ret
dec
ja
rol
aaa
adc
adc
adc
adc
adc
push
sbb
add
and
cs
cmp
addr16
ss
cdq
push
ss
lods
ja
or
adc
std
mov
push
popf
or
sub
push
xor
xor
jle
test
sbb
adc
adc
ins
icebp
adc
test
adc
add
add
(bad)
scas
ja
add
and
and
sbb
popf
add
add
add
add
mov
add
pop
popf
sbb
sub
or
jge
inc
adc
(bad)
mov
and
sbb
(bad)
fsubrp
fadd
in
sub
and
jae
push
push
das
or
add
add
or
dec
add
stc
cdq
or
iret
into
push
lahf
xor
popa
comiss
adc
and
or
pop
stos
adc
or
push
pop
fwait
push
or
rol
or
lods
pop
and
test
add
movs
mov
xor
adc
mov
adc
cmps
arpl
fwait
adc
sbb
sbb
or
sbb
fild
and
sbb
jo
mov
cs
add
mov
and
add
cdq
loope
sbb
pop
or
adc
in
leave
adc
add
es
pop
push
and
sti
or
dec
and
pop
or
add
setnp
add
push
wrmsr
imul
or
add
xchg
jo
cmp
movntps
out
clc
imul
add
mov
adc
add
sub
adc
aad
lds
jne
sub
or
es
ret
pop
loope
pushf
loope
push
sub
pop
inc
std
cmp
adc
add
or
out
cdq
jae
inc
adc
jge
sub
adc
add
jb
jge
push
sub
pop
add
ds
jmp
push
popf
mov
or
cmp
sub
mov
ja
pop
pop
sahf
add
and
hlt
cli
mov
lds
add
cvttps2pi
adc
cmps
sbb
lahf
sbb
pop
sbb
dec
add
adc
sbb
add
add
push
xor
or
cmps
inc
test
push
or
or
test
sbb
mov
daa
or
mov
retf
lock
add
sub
add
adc
push
cmp
and
shr
xchg
and
adc
add
js
loope
add
add
sahf
icebp
fwait
sub
daa
sar
pusha
inc
dec
daa
lds
cmp
arpl
adc
psllw
and
jmp
ffree
into
push
int3
and
sbb
add
add
jbe
add
jne
pop
in
fsubr
fnsave
or
add
jne
pop
add
fstp
je
pop
add
outs
add
mov
fiadd
jne
imul
add
out
test
pop
mov
mov
add
push
add
jmp
or
outs
dec
popa
sbb
out
popf
inc
add
gs
inc
scas
and
lock
scas
add
inc
arpl
shl
add
mov
add
and
loope
popf
and
push
add
add
jne
adc
pop
jo
bound
popa
add
ja
(bad)
jbe
dec
jp
jp
add
jp
sbb
add
add
jg
in
or
cs
(bad)
rcl
mov
rol
arpl
sub
and
and
fs
(bad)
or
mov
leave
mov
mov
daa
pop
pop
mov
mov
mov
scas
mov
xlat
mov
adc
fwait
in
mov
leave
sbb
cmp
mov
cmp
mov
(bad)
lods
aam
rol
shl
andps
add
mov
xor
pop
leave
stc
shl
jg
add
jbe
push
inc
push
cmp
cs
fwait
int3
push
ror
or
or
push
or
dec
push
fbstp
or
push
add
les
popa
sbb
push
jnp
adc
mov
mov
cmp
jno
add
add
call
js
imul
imul
cmps
imul
jo
add
lock
call
cmps
imul
cmps
imul
imul
cmps
imul
imul
add
imul
imul
imul
sub
add
add
test
and
imul
adc
or
inc
add
dec
or
dec
or
xor
pop
dec
add
or
adc
push
add
scas
jmp
and
daa
xlat
inc
inc
sbb
dec
popf
test
adc
loopne
sar
cmps
int
aaa
jo
scas
mov
or
add
ja
jns
imul
jb
cmps
imul
cmps
imul
or
jno
call
je
jbe
push
cdq
cmps
imul
pop
sahf
cwde
lea
mov
inc
add
add
jae
jecxz
push
and
(bad)
push
inc
xor
pusha
es
mov
sbb
data16
jo
out
popa
push
rcr
movaps
adc
punpcklwd
adc
les
sbb
mov
popa
cs
setle
mov
or
mov
mov
in
or
or
or
in
sahf
or
jnp
or
sbb
ret
or
nop
rol
mov
cmp
cmp
sbb
xor
xor
xor
add
inc
xor
xor
inc
fld
inc
int
scas
jmp
inc
lds
inc
mov
lods
inc
movs
inc
ss
loopne
fwait
mov
lahf
enter
pop
pop
push
push
and
push
or
push
push
push
dec
or
enter
dec
xor
and
and
and
inc
mov
inc
add
mov
test
xchg
rol
push
dec
add
sbb
dec
inc
add
push
push
popf
push
cmp
xchg
and
and
aaa
int3
or
push
adc
cmp
adc
not
or
push
jl
mov
adc
loopne
mov
mov
(bad)
mov
push
add
pop
pusha
cmp
cmp
sbb
push
or
ja
call
sldt
sub
sub
sbb
dec
add
dec
add
into
shl
add
mov
call
add
mov
cmp
add
jb
fs
gs
ins
loop
fidiv
out
and
mov
add
call
jge
add
pop
mov
js
call
cli
xlat
adc
cmp
dec
shl
mov
not
idiv
shl
cmc
in
int3
repz
dec
mov
jmp
xchg
out
js
fwait
cmps
imul
je
aaa
adc
pop
jmp
enter
xor
mov
jl
scas
jmp
out
pop
out
or
out
jp
add
out
add
fmul
jne
jecxz
les
loop
loope
or
rol
jmp
pop
fisubr
cmps
in
jns
add
pinsrw
shl
lods
fst
test
xlat
(bad)
pop
xchg
imul
add
adc
ror
add
shr
js
add
loopne
mov
pop
iret
lfs
into
pushf
cmps
imul
imul
adc
ja
add
psubsb
(bad)
mov
rol
mov
out
mov
ret
paddq
dec
add
pop
cwde
jne
inc
in
dec
xlat
(bad)
pop
mov
shl
mov
xor
or
lock
je
test
sets
mov
xor
shl
pusha
mov
xor
xor
mov
mov
jne
add
shl
and
hlt
ret
fadd
jmp
add
rcr
mov
cli
lahf
adc
mov
cld
rol
push
mov
icebp
xor
into
mov
adc
fdivr
adc
retf
inc
cld
dec
or
add
mov
out
stc
in
(bad)
aas
and
fdiv
mov
int3
cmc
call
sub
cli
sub
mov
mov
retf
push
mov
mov
inc
inc
adc
push
add
call
mov
les
mov
retf
mov
xor
dec
call
mov
mov
(bad)
out
std
sar
mov
aad
test
jmp
mov
mov
dec
mov
add
mov
add
fwait
cmp
adc
push
mov
cmp
sahf
mov
out
pop
pop
stos
or
scas
leave
call
add
int
adc
cmp
jge
lock
cmps
add
mov
ja
adc
pop
neg
into
mov
addr16
mov
ds
std
mov
unpckhps
sbb
ror
(bad)
(bad)
into
retf
les
mov
pop
out
mov
iret
cmps
iret
out
add
rcl
mov
xlat
out
mov
idiv
adc
pop
std
fiadd
repz
push
mov
add
jne
test
mov
xlat
jecxz
add
retf
stc
mul
stos
repz
jbe
(bad)
jle
fidiv
sar
sar
sub
sub
std
mov
pop
iret
out
les
jmp
mov
fldcw
ins
ret
sub
mov
pop
fcom
shr
imul
push
xor
out
repz
inc
outs
mov
(bad)
(bad)
shl
div
sti
and
push
clc
int
sub
stos
rcr
ja
mov
sub
dec
push
mov
mov
sbb
int3
stos
mov
addr16
adc
and
rcl
mov
jmp
pop
dec
inc
pop
in
std
aas
test
mov
mov
daa
sbb
xchg
das
mov
mov
mov
mov
retf
sbb
test
mov
enter
out
inc
lds
stos
int
ror
loop
ins
fsubr
popa
lds
mov
xchg
or
iret
xchg
xchg
add
dec
dec
push
idiv
mov
xchg
mov
add
fsub
(bad)
les
pop
dec
dec
push
retf
mov
ret
sti
mov
inc
mov
ins
into
stos
enter
mov
(bad)
xlat
(bad)
les
xlat
(bad)
mov
sti
pop
mov
addr16
std
xlat
(bad)
mov
xchg
(bad)
int3
stos
mov
call
mov
std
mov
or
cld
xchg
lock
push
sub
dec
mov
sbb
mov
aam
(bad)
fdivr
mov
ret
sti
mov
rcr
shl
popf
aaa
nop
lahf
lea
dec
mov
mov
das
fsub
pop
inc
imul
ja
and
sbb
sub
scas
mov
and
mov
push
jg
sti
loope
mov
(bad)
cmps
mov
mov
in
sbb
seta
sbb
mov
leave
cli
popa
mov
int
outs
fnstsw
mov
(bad)
sbb
aad
add
(bad)
(bad)
xor
pop
gs
into
mov
ret
mov
xor
iret
mov
jecxz
aas
cmp
pop
push
fsubp
push
sar
out
std
das
mov
jno
daa
adc
iret
xchg
ret
mov
pusha
and
dec
sti
sub
int
cmps
stos
aad
inc
outs
ins
outs
jne
push
imul
inc
add
rcl
leave
stos
(bad)
sbb
loope
inc
(bad)
ins
je
mov
inc
push
sub
inc
sti
pop
cmp
fcmovb
mov
add
and
dec
imul
aaa
inc
or
inc
and
add
add
jmp
mov
je
outs
je
popa
ins
and
gs
ins
outs
ja
jg
push
loop
outs
addr16
jp
ins
ins
outs
arpl
sub
add
loop
(bad)
jmp
je
jb
outs
outs
imul
push
ins
imul
push
imul
loop
ja
sub
outs
outs
jb
imul
sbb
ins
or
test
cmp
inc
icebp
mov
and
je
jb
pop
fmul
fs
add
jae
or
xor
stos
xor
test
dec
add
add
sti
imul
jne
imul
ins
gs
call
je
fs
add
pop
and
jb
sti
(bad)
out
mov
bound
and
jb
ins
gs
jb
and
add
mov
dec
xchg
adc
ins
imul
arpl
inc
pop
mov
pusha
cmps
outs
and
pop
addr16
ins
ins
call
and
and
sbb
popa
outs
addr16
sbb
fs
or
lds
push
cld
outs
gs
ins
pop
inc
xor
outs
xor
pop
outs
and
add
outs
sub
mov
outs
inc
add
inc
mov
mov
out
gs
ja
test
arpl
arpl
daa
push
sbb
adc
and
inc
mov
outs
fs
xor
mov
mov
into
sti
ficomp
mov
sar
ds
and
shr
sti
pop
cwde
popa
jb
arpl
add
and
daa
add
mov
and
ja
adc
ret
xchg
ins
outs
addr16
add
call
fsubr
je
and
jne
dec
add
xchg
dec
inc
inc
and
push
and
fs
mov
jg
addr16
arpl
outs
imul
jl
stos
loop
or
push
pop
add
div
mov
sub
dec
jae
mov
popa
arpl
mov
and
rcr
and
push
fdivr
inc
jb
jns
ins
outs
jb
push
cmp
sbb
fiadd
xlat
out
push
inc
inc
and
inc
push
or
sub
out
cmps
addr16
jae
popa
ins
xor
out
aas
add
imul
in
dec
imul
xor
cmp
jg
lock
jae
and
imul
add
fisub
arpl
cmp
ret
aas
popa
pusha
or
ins
fsub
jae
sub
je
popa
and
mov
cmc
nop
xor
cmp
mov
or
shl
mov
aam
jne
jno
mov
outs
jb
je
xchg
mov
jbe
add
and
imul
outs
jb
jmp
push
jg
arpl
ds
pop
pop
push
and
push
xor
stos
gs
add
dec
dec
inc
push
and
xlat
add
add
push
mov
outs
fs
and
dec
or
pop
dec
dec
inc
and
pop
mov
fdiv
popa
jb
inc
idiv
rcr
popa
ds
mov
push
adc
aas
movs
stos
arpl
jo
mov
frstor
ja
sbb
lds
jg
mov
call
das
jo
mov
dec
jo
pop
bound
add
out
test
popa
pop
in
or
popa
retf
cmp
imul
mov
adc
cwde
sti
sub
ja
sbb
xchg
js
gs
int3
mov
ins
imul
sub
push
adc
and
int
or
inc
mov
das
je
cld
jecxz
mov
jb
bound
pop
add
jmp
dec
inc
inc
xor
xor
data16
dec
fucomip
ins
sar
push
inc
xor
and
sbb
and
or
sbb
cmp
inc
pop
dec
fs
jne
ins
gs
imul
ret
jo
das
cmp
jnp
inc
xor
xor
lds
xor
call
test
jae
stos
clc
sbb
jne
inc
enter
es
call
xchg
popa
jo
imul
xchg
or
rcr
adc
popa
je
std
xchg
jnp
sbb
repz
clc
pop
fiadd
scas
mov
jo
jno
gs
jno
mov
dec
push
dec
sub
mov
dec
daa
rcr
sti
add
add
bound
imul
addr16
inc
pop
and
xchg
inc
rcr
shl
inc
pop
sub
cmp
call
jno
mov
xor
fild
or
sbb
(bad)
cmps
jns
nop
cmp
in
test
outs
mov
push
rol
xchg
shl
int
or
jbe
mov
(bad)
xor
pop
pop
mov
ins
popa
jo
cmp
lahf
add
mov
aaa
cmp
bound
imul
sbb
and
adc
inc
mov
movs
jp
loope
or
mov
pop
cdq
retf
lock
sub
xchg
xchg
sbb
(bad)
sub
inc
pop
cmp
cmp
sub
bound
or
jo
jne
sbb
add
fcom
mov
cdq
ret
test
ja
sub
mov
cmp
outs
sbb
dec
in
aaa
je
addr16
bound
popa
and
add
daa
sub
mov
xchg
dec
inc
pop
(bad)
pop
and
outs
pop
addr16
and
inc
mov
or
daa
pop
xor
mov
cwde
and
and
popa
and
jne
je
sbb
and
ins
imul
jns
je
nop
test
hlt
xchg
test
cld
repz
mov
push
outs
pop
xchg
xchg
cmp
sub
pop
ja
icebp
jo
(bad)
pop
sub
xchg
and
and
pusha
add
fisttp
outs
outs
ja
dec
(bad)
and
sbb
mov
pop
scas
pop
sbb
mov
sti
outs
outs
jae
hlt
and
or
jae
popa
jo
and
in
push
cmp
(bad)
outs
gs
and
inc
lds
jecxz
pusha
jmp
pop
test
pop
fnsave
pop
shr
mov
out
pop
mov
cmp
addr16
mov
shl
(bad)
(bad)
cdq
mov
outs
sbb
sub
add
xor
(bad)
cmp
mov
cs
jmp
rol
fld
sti
adc
cmp
sti
fist
cmps
add
fiadd
leave
iret
mov
xlat
repz
mov
rcl
rol
iret
ret
call
adc
inc
enter
shl
jb
jg
(bad)
out
std
lds
mov
mov
lds
rcl
(bad)
lock
(bad)
ret
pop
or
and
adc
dec
xor
ja
adc
mov
inc
mov
in
sub
jmp
mov
imul
sti
mov
je
pusha
pop
mov
dec
inc
cmp
retf
mov
mov
mov
mov
retf
cmc
shl
add
mov
mov
enter
pop
cmp
mov
cmp
xor
pop
sub
shr
xchg
aad
aam
pop
jg
(bad)
sti
out
das
and
or
mov
mov
or
and
not
mov
add
mov
repnz
jnp
shl
mov
pop
dec
xor
and
mov
leave
sub
fsubr
das
test
test
rcl
add
pop
cmp
stc
repz
add
or
pop
xlat
adc
add
add
lock
out
out
mov
rol
loopne
add
stc
add
inc
sar
add
enter
push
mov
cmp
add
adc
out
add
cwde
pop
xor
add
outs
mov
loopne
pop
shl
js
test
add
fcomp
add
push
pusha
nop
ja
stc
out
pop
pop
add
mov
pusha
rol
stc
repz
imul
cmp
push
add
add
sub
leave
out
mov
in
fdivr
shl
(bad)
loopne
mov
iret
inc
mov
in
pmovmskb
leave
stos
sar
in
(bad)
clc
mov
pop
(bad)
fld
mov
aas
mov
sahf
cmp
aaa
(bad)
fild
mov
aas
shl
mov
inc
mov
aas
mov
jl
mov
(bad)
or
(bad)
mul
fld
mov
mov
mov
xchg
leave
out
aas
(bad)
aam
fnstenv
(bad)
fidivr
push
ins
add
(bad)
jne
or
push
jl
outs
addr16
jge
ss
xor
gs
and
cs
mov
cmp
fwait
add
jb
add
inc
std
and
push
jo
add
push
xchg
das
fwait
outs
or
cmp
popa
jns
ins
mov
arpl
inc
ins
sbb
and
stos
out
bnd
inc
and
or
les
jno
jae
mov
out
xchg
gs
lods
sbb
dec
shl
add
push
xlat
mov
add
ins
ins
inc
push
inc
mov
call
and
add
(bad)
and
(bad)
dec
and
outs
daa
je
jae
pop
outs
add
mov
dec
fs
xchg
pop
data16
mov
ja
imul
call
jae
ins
add
jb
arpl
add
nop
or
imul
add
gs
jb
mov
jns
inc
push
inc
dec
dec
adc
in
fimul
dec
outs
je
sub
test
sbb
add
adc
jo
fadd
and
popa
repnz
push
push
adc
push
es
loopne
mov
(bad)
loop
and
jb
add
xor
mov
daa
addr16
xchg
test
les
cmps
push
or
popa
jmp
in
mov
iret
lds
nop
adc
(bad)
(bad)
mov
imul
outs
jb
or
mov
or
push
adc
xchg
mov
pop
movs
cmp
retf
mov
and
and
mov
jp
or
cld
mov
outs
arpl
ins
gs
push
dec
push
xor
jno
imul
enter
outs
jae
hlt
cmp
push
and
mov
ins
popa
ins
adc
lods
and
adc
arpl
scas
jecxz
adc
and
sub
repz
shl
xchg
shr
xchg
sub
or
xor
adc
jb
or
jne
push
inc
ret
imul
enter
sbb
push
jne
je
cwde
xor
and
loop
int
cmp
outs
outs
sub
mov
lahf
sbb
push
pop
out
adc
or
inc
xchg
test
or
dec
pop
and
inc
xchg
and
or
adc
movs
jo
dec
and
mov
xor
add
adc
dec
xor
fs
and
arpl
fiadd
fisttp
mov
xchg
cmp
outs
data16
call
cmp
jo
gs
jae
push
inc
xchg
cmc
xor
jo
mov
push
in
std
fcomp
jae
push
popa
jbe
adc
push
jae
inc
aas
sub
(bad)
xor
or
bound
cmp
adc
or
inc
xor
test
mov
dec
push
fst
(bad)
test
movs
and
js
fs
adc
pop
daa
xchg
sbb
adc
inc
push
cmp
push
sbb
fistp
inc
test
cwde
aas
inc
adc
imul
(bad)
cmps
and
push
or
add
retf
add
mov
inc
pop
ret
mov
stos
popa
cwde
jo
push
outs
icebp
sub
lds
or
fwait
out
inc
pop
dec
cmps
ins
xchg
and
jnp
adc
sub
daa
scas
add
push
bound
and
push
push
jge
gs
out
fs
or
adc
cmp
adc
scas
out
mov
pop
push
push
inc
arpl
data16
ret
fadd
addr16
ins
(bad)
and
xor
outs
pushf
popa
outs
fs
sbb
push
sbb
shl
add
adc
xor
add
mov
stc
push
mov
xor
outs
pop
(bad)
sbb
and
stos
shl
jo
xchg
nop
ins
cwde
xor
inc
jne
sbb
test
je
test
xor
sub
retf
adc
iret
pop
imul
pop
ret
adc
or
retf
jle
outs
pop
pushf
outs
je
mov
jo
das
and
and
and
jne
inc
int3
gs
test
stc
add
push
out
mov
ins
dec
and
sbb
ja
js
and
data16
shl
jmp
cwde
or
sbb
daa
adc
jmp
dec
and
leave
add
xor
xor
mov
add
cmps
rcl
dec
adc
push
jle
ret
jo
mov
push
mov
popa
jae
push
or
loopne
jo
fwait
cmp
xor
test
xor
in
stos
sbb
jg
fs
ins
sbb
and
jae
enter
aam
outs
pushf
stos
sbb
jne
daa
adc
cmp
arpl
loopne
stos
scas
fisttp
sbb
pop
sbb
pushf
jno
pusha
fs
ror
xor
cmp
sar
popa
imul
int3
adc
cmp
push
pop
out
fsubr
adc
fld
aaa
pusha
dec
or
retf
cld
lods
inc
(bad)
retf
sar
and
aam
mov
xchg
sbb
xchg
jecxz
push
imul
sub
rol
add
test
xchg
repnz
mov
jb
test
pop
dec
push
mov
push
out
icebp
aad
sbb
inc
or
fmul
add
sbb
jnp
or
add
and
adc
sub
xchg
pop
inc
es
pop
and
ss
adc
jae
lods
dec
add
sbb
fwait
sbb
retf
ficomp
ja
inc
mov
mov
test
cwde
pusha
repz
dec
les
sub
push
(bad)
jmp
in
jmp
sti
int3
clc
xlat
stos
mov
shl
fs
and
ins
fs
shr
lock
dec
inc
dec
jg
je
add
je
xchg
jo
popa
sar
hlt
aas
cwde
xchg
push
test
je
outs
push
das
loope
ss
ins
bound
push
jae
(bad)
adc
or
dec
mov
or
xchg
dec
add
lahf
dec
cmps
jmp
mov
inc
in
aam
enter
sti
sub
dec
add
mov
ins
jo
bound
mov
addr16
adc
dec
push
or
adc
add
sbb
in
fwait
int3
pusha
call
sub
pop
cmp
imul
sbb
repz
pusha
mov
inc
add
mov
out
jae
push
push
push
pop
cld
push
pop
cmp
in
pop
dec
add
xor
loopne
iret
add
inc
rcl
pop
aas
lahf
sti
dec
xor
pusha
sysret
and
add
jnp
adc
aaa
femms
pop
cdq
sub
or
cmp
aas
lock
adc
fisub
lahf
pop
pop
sbb
aas
out
jne
adc
push
pop
cmp
aaa
xlat
jne
mov
pop
cmp
rol
push
pop
iret
jge
sub
aas
push
xlat
popf
sub
mov
aaa
add
pop
inc
mov
dec
pop
pop
xor
pop
jg
pop
imul
xor
add
or
inc
jg
pop
sti
sbb
jnp
daa
pop
mov
stos
sahf
jg
pop
xchg
fdivr
fcomp
test
inc
jne
mov
pop
test
inc
pop
jg
add
iret
pop
jg
aaa
xlat
jge
cmp
cwde
pop
push
fistp
pop
pop
cwde
pop
loopne
inc
adc
fcom
and
mov
js
shl
pop
sub
pop
ds
aad
out
inc
pop
mov
pop
dec
pop
jg
pop
jg
push
adc
push
pop
iret
add
xor
sti
pop
push
mov
pop
sub
xor
sahf
sub
es
add
mov
pop
and
fwait
jg
pop
and
sahf
or
loop
jae
jge
xlat
daa
sbb
xchg
pop
call
pop
pop
mov
sub
lahf
jmp
push
out
jge
addr16
sub
lahf
out
sbb
lahf
mov
(bad)
cmp
pop
hlt
pop
jg
aaa
cmp
jl
push
sysret
push
shl
add
fdivr
push
or
ja
cmc
dec
loope
ss
sub
jae
iret
push
mov
mov
es
lods
pop
aaa
fistp
psubusb
ins
int3
cmp
call
out
rcl
pushf
jb
jmp
ja
and
dec
outs
xor
lahf
add
pop
fdivr
or
push
pop
nop
maskmovq
idiv
mov
aas
dec
pop
pop
sahf
cmp
push
(bad)
mov
daa
jae
inc
jp
jmp
rcl
ret
in
rcl
cmp
addr16
cmps
pop
mov
cmp
cmovno
jg
pop
idiv
pop
(bad)
sbb
or
xchg
pop
jg
iret
inc
mov
pop
sti
faddp
adc
imul
pop
and
mov
fisub
mov
dec
pop
shl
add
lahf
add
out
sbb
sbb
jae
push
pop
add
lahf
mov
retf
inc
inc
jp
jmp
and
maxps
and
test
loopne
jmp
and
mov
call
(bad)
jge
jg
cmp
jae
fimul
lahf
jmp
ds
xor
sbb
lahf
lea
dec
inc
jp
jnp
jg
pop
jg
mov
dec
inc
nop
sahf
sub
(bad)
inc
mov
(bad)
cmp
mov
cmp
iret
adc
das
inc
jp
popa
pop
dec
bswap
push
inc
or
pop
out
call
scas
iret
pop
xchg
addr16
jmp
pop
cmc
aas
sahf
sbb
js
loope
stos
imul
xor
and
pop
shl
lahf
jb
jp
mov
or
mov
js
add
lahf
push
pop
push
add
out
xor
loopne
aad
sahf
(bad)
(bad)
fstp
ja
scas
daa
inc
add
int3
jg
xchg
or
mov
movq
scas
mov
fcomp
aas
outs
adc
maskmovq
idiv
jg
pop
aas
pop
pop
test
mov
das
outs
out
jne
jae
pop
das
pop
pop
mov
fsub
(bad)
cmovg
pop
mov
call
add
inc
ret
and
hlt
sbb
mov
inc
lea
push
xchg
shl
adc
loope
aas
inc
xchg
pop
jg
and
test
inc
call
dec
or
loopne
jg
jmp
sahf
and
xchg
sahf
cmp
aas
jg
test
nop
(bad)
dec
dec
bound
aas
jg
dec
jnp
test
mov
sbb
inc
mov
xchg
jno
inc
adc
fstp
push
adc
scas
addr16
mov
test
(bad)
stc
pop
jg
or
and
inc
mov
call
xor
sahf
cmp
jmp
inc
nop
sahf
mov
sbb
xchg
push
jae
adc
lahf
push
pop
jg
nop
sbb
(bad)
dec
jmp
pop
dec
add
adc
fistp
pushf
dec
and
call
inc
jp
popf
pop
(bad)
(bad)
call
shl
fstp
(bad)
dec
mov
adc
or
sbb
dec
or
cmp
data16
sbb
jg
fucomip
aam
and
pop
aas
out
dec
bound
pop
call
dec
(bad)
call
pop
and
movs
cmp
adc
push
jg
hlt
fcom
jg
sub
lahf
dec
aas
inc
adc
jg
push
or
add
jg
sub
push
mov
dec
or
loopne
(bad)
(bad)
call
rol
sbb
mov
cmp
lahf
and
movs
out
jg
addr16
and
inc
pop
call
ret
sbb
jmp
sbb
dec
mov
dec
sbb
(bad)
call
dec
(bad)
call
jmp
mov
aas
pop
lahf
jmp
cmp
add
jg
sahf
cmp
mov
iret
pop
(bad)
fcom
scas
pop
cmp
(bad)
out
pop
xchg
les
sahf
jg
jmp
lock
dec
iret
adc
dec
(bad)
jmp
mov
inc
jg
(bad)
mov
pop
push
cld
lahf
push
pop
or
inc
mul
pop
dec
pop
pop
add
push
pop
push
mov
add
pop
add
mov
pop
mov
js
aas
aas
fistp
push
out
sub
call
pop
in
xlat
add
pop
fistp
sti
jb
inc
xchg
pop
rol
mov
aas
add
cmc
pop
push
sti
jg
jg
in
jo
sbb
add
jg
or
jnp
jg
jg
mov
jg
jg
and
cmp
(bad)
jg
fmul
jg
icebp
call
lahf
ins
gs
and
popa
ins
imul
std
and
add
inc
je
jne
clc
rcl
shl
dec
pop
ins
and
inc
inc
push
add
and
sbb
lea
int
dec
inc
mov
jb
sbb
push
mov
sub
xchg
and
(bad)
push
xchg
sbb
pop
pop
pop
adc
and
pop
or
jmp
and
push
inc
imul
dec
aad
add
das
push
loopne
pushf
es
add
aam
add
pop
sbb
pop
cld
(bad)
mov
ja
ja
fs
je
arpl
arpl
loopne
push
fwait
outs
jo
sub
adc
add
scas
sar
and
outs
gs
inc
js
ins
outs
jb
jb
adc
inc
fild
sub
(bad)
jg
sbb
clc
xchg
jnp
add
rcl
test
sbb
shl
fdiv
neg
scas
push
add
or
(bad)
out
add
jp
ins
ins
popa
das
xor
xor
sub
jg
and
dec
inc
and
xor
and
adc
cli
jg
and
and
add
jp
inc
xor
inc
arpl
clc
mov
das
sub
mov
jbe
(bad)
inc
inc
push
add
push
push
das
xor
test
scas
cmp
bound
xor
jae
imul
aas
cmp
sbb
inc
aas
add
test
add
add
dec
dec
dec
dec
dec
sbb
cld
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
mov
mov
push
aam
hlt
inc
push
sub
jae
add
or
inc
hlt
jg
mov
push
jb
outs
jae
gs
inc
cld
jg
sub
and
xor
dec
dec
dec
xor
push
gs
cmp
mov
rcr
test
jo
popa
imul
popa
jb
gs
and
aaa
loop
and
jb
das
ins
imul
loopne
jmp
cmp
push
dec
inc
inc
push
pop
and
stos
push
gs
jns
push
outs
jge
setnp
and
push
jne
out
test
mov
popa
je
scas
int3
int
cmp
inc
arpl
dec
mov
xor
popa
sub
and
popf
sti
(bad)
jmp
and
cmp
and
add
and
cld
(bad)
out
push
dec
push
(bad)
push
dec
push
push
ror
mov
icebp
(bad)
not
and
ja
and
mov
mov
pop
iret
in
shl
add
out
loopne
aam
add
mov
mov
retf
pusha
nop
jno
outs
mov
mov
(bad)
jbe
mov
mov
in
dec
add
scas
sti
pop
push
cmp
das
jne
rcr
xor
pushf
ror
cvttps2pi
das
add
bsf
dec
adc
lods
subps
adc
mov
dec
add
mov
fistp
daa
add
(bad)
mov
or
(bad)
add
pop
out
sbb
pop
paddsb
jae
mov
scas
and
jae
pop
mov
sub
or
pop
and
sbb
jne
out
adc
or
adc
fwait
in
push
add
cld
mov
inc
lahf
jmp
lock
in
repz
stc
pop
ja
pavgb
adc
fcom
sbb
add
les
mov
aaa
or
pcmpeqw
jl
jae
pop
push
out
out
rol
dec
and
add
or
fdivr
dec
add
int3
or
add
shl
mov
test
pushf
add
(bad)
in
add
add
pusha
or
xor
jbe
popa
adc
or
push
mov
add
rcl
mov
push
cld
(bad)
mov
(bad)
fidivr
mov
mov
mov
repnz
rcl
shr
rcl
aam
mov
mov
(bad)
(bad)
(bad)
inc
lods
enter
aam
into
stos
mov
retf
mov
leave
mov
mov
rol
mov
sub
popa
push
retf
mov
int
shl
mov
jecxz
not
sti
pop
mov
shl
test
(bad)
(bad)
out
ffreep
fdivr
call
lock
mov
mov
mov
mov
enter
pop
jge
mov
test
jmp
popf
dec
lock
jnp
or
retf
jno
add
rol
xlat
not
fidivr
add
and
add
std
rol
div
int3
loop
push
out
mov
add
inc
cmp
add
and
mov
lods
int3
cmc
cmp
test
sub
je
add
cmp
mov
or
add
scas
or
ins
cmp
sub
gs
or
push
add
xlat
jg
sti
iret
aam
mov
repnz
mov
shl
ret
out
fcom
mov
mov
sbb
mov
mov
ret
and
loope
out
cmp
mov
mov
mov
out
popa
pushf
dec
mov
aad
mov
cmp
xchg
(bad)
fcmove
frstor
sti
enter
call
cmps
cmp
rcl
scas
loop
retf
mov
(bad)
lock
out
jne
ins
add
mov
pop
sbb
out
jmp
(bad)
shl
test
mov
mov
mov
push
imul
jnp
mov
jle
loope
call
icebp
mov
mov
out
ret
out
ror
xor
popa
add
dec
data16
imul
fbstp
out
fdivrp
fisttp
add
mov
or
int3
mov
ja
mov
ror
pop
int3
in
cmp
jp
out
push
call
xlat
(bad)
int3
in
add
jne
sar
xor
add
mov
and
sar
jae
bound
mov
je
addr16
aas
sub
jp
add
rcl
add
mov
lahf
pcmpeqb
add
ins
gs
addr16
(bad)
(bad)
idiv
add
(bad)
rol
gs
in
or
lahf
sub
(bad)
scas
(bad)
mov
loopne
push
mov
retf
int
lods
pop
(bad)
push
mov
mov
out
shl
mov
pxor
mov
aas
iret
mov
lahf
mov
shr
or
lds
lods
adc
out
sbb
(bad)
mov
sbb
add
call
mov
mov
clc
mov
mov
repz
push
inc
cld
retf
mov
push
xor
(bad)
mov
mov
retf
int
ret
xlat
mov
bswap
fidivr
cmps
mov
addr16
cdq
cmp
shl
retf
mov
iret
out
fsubrp
mov
pop
sub
in
hlt
jp
pop
sub
arpl
aam
icebp
lahf
icebp
jle
(bad)
shr
mov
repz
sahf
dec
mov
(bad)
stos
(bad)
in
add
int3
loop
data16
shl
sbb
xchg
sub
pusha
fnstenv
xor
sub
stos
aaa
std
popa
adc
mov
mov
jmp
jns
jae
gs
push
int
test
xchg
iret
xor
mov
stos
shr
pop
rcl
xor
gs
movs
mov
push
mov
ffreep
mov
mov
loope
mov
sub
cld
sbb
jns
mov
mov
imul
out
ss
xlat
vpsubq
sub
mov
jmp
into
mov
mov
sbb
sar
and
jle
adc
les
mov
arpl
(bad)
in
adc
mov
mov
xchg
jle
xlat
test
mov
aas
jnp
mov
mov
out
jmp
repz
mov
mov
(bad)
retf
rcl
mov
aaa
ins
test
and
mov
mov
imul
jmp
add
ficom
loope
outs
aas
(bad)
ret
fnsave
xchg
lods
rcl
dec
fidiv
push
jg
outs
fs
push
sbb
std
push
into
retf
mov
mov
jmp
sbb
mov
add
pop
ss
or
imul
jg
jmp
sti
jg
lods
into
stos
rcl
iret
ret
sar
mov
mov
ret
retf
std
mov
mov
imul
add
dec
(bad)
adc
pop
lods
jge
enter
mov
mov
jmp
retf
dec
push
idiv
xchg
or
add
dec
add
add
sbb
sbb
jmp
jne
push
ja
pop
pop
add
es
fldcw
loopne
xor
ins
or
jbe
imul
and
(bad)
push
scas
jae
and
ret
mov
cmps
fdiv
add
fadd
pop
in
add
pop
retf
in
push
sbb
outs
mov
mov
mov
add
ja
and
test
cs
jnp
jo
add
pop
loopne
mov
add
push
cmp
das
adc
and
pusha
jmp
rcl
jne
add
xor
add
aaa
dec
ins
push
push
dec
or
and
xchg
jnp
ret
sub
loopne
inc
adc
and
ss
cmc
pop
adc
pop
aas
inc
push
in
sub
pop
xor
loope
mov
retf
pop
ja
jmp
sub
or
popf
jg
xchg
test
pop
mov
daa
in
cmp
inc
adc
mov
inc
and
add
dec
pop
sub
pop
fist
fadd
test
fdiv
outs
sbb
inc
inc
dec
inc
jmp
cdq
and
popa
pop
(bad)
jnp
mov
pop
imul
ret
fs
push
xlat
fmul
or
movs
and
dec
and
iret
inc
adc
mov
test
xchg
jecxz
aas
push
outs
sub
mov
sbb
mov
movs
pop
sbb
dec
in
pop
inc
ins
push
dec
push
pop
push
gs
sbb
xchg
add
call
outs
push
jb
arpl
jg
adc
push
pop
inc
inc
pop
pop
ret
add
push
inc
push
inc
and
jae
and
fistp
pop
sbb
or
or
or
and
push
xchg
dec
inc
inc
dec
dec
dec
push
push
mov
mov
fwait
daa
inc
pushf
mov
lods
mov
push
addr16
mov
ins
outs
outs
jge
jbe
pop
mov
fadd
pop
xchg
push
dec
push
inc
inc
xor
dec
dec
dec
inc
push
dec
inc
mov
enter
inc
addr16
inc
test
inc
push
inc
pop
dec
add
movs
std
dec
test
push
adc
push
inc
or
mov
nop
or
sbb
and
bound
inc
popa
je
push
retf
xchg
cmp
dec
dec
lds
inc
aas
inc
ds
pop
pop
pop
in
sub
jo
push
inc
push
jb
inc
sub
push
inc
enter
cs
test
and
and
test
jp
inc
mov
pop
(bad)
pop
out
icebp
add
fs
mov
jecxz
add
es
sbb
aaa
(bad)
and
inc
jnp
cmp
adc
mov
test
(bad)
ja
ins
or
push
int3
adc
aaa
movs
cmc
ret
xchg
mov
or
fwait
push
and
xlat
mov
test
popa
cmp
addr16
outs
outs
ins
popa
or
and
inc
and
dec
dec
push
imul
jecxz
stos
dec
popa
aas
inc
add
ret
jg
popa
outs
popa
ja
pop
push
gs
or
imul
add
or
test
outs
push
and
ja
sbb
fs
outs
push
cli
push
dec
sub
daa
sbb
dec
pop
push
pop
or
xor
addr16
push
sbb
cmp
outs
ins
push
popa
imul
inc
fsub
mov
sub
dec
add
push
dec
push
sub
rol
ins
popa
jns
xchg
xor
and
(bad)
jl
push
xor
daa
test
lea
push
inc
inc
jo
adc
imul
jb
aam
cmp
rcr
pop
retf
push
aas
pusha
outs
ret
arpl
popa
outs
popa
sub
add
jnp
dec
jmp
push
out
test
scas
xchg
xor
enter
je
mov
push
or
add
jg
dec
push
gs
outs
out
neg
gs
ins
lahf
pop
adc
inc
xlat
xor
pop
int3
and
cmp
mov
out
sbb
and
add
out
jne
adc
pop
xor
outs
addr16
add
pop
push
mov
push
outs
ja
gs
imul
popa
pop
pop
pop
pop
ss
push
not
je
das
pop
and
sbb
dec
outs
addr16
push
sbb
out
pop
dec
fsubr
push
sub
lock
cdq
inc
inc
inc
jbe
jae
pop
add
pop
push
pop
push
fwait
push
sub
das
lahf
push
adc
adc
pop
lahf
arpl
xchg
fs
or
popf
lea
ret
push
dec
pop
(bad)
and
out
imul
inc
sub
das
add
pop
push
fwait
lock
jb
jo
jb
jns
pop
hlt
fs
pop
xlat
daa
add
ins
pop
ss
fsub
mov
push
pop
inc
ins
bound
ds
das
push
ret
aas
addr16
ss
or
dec
rol
enter
sub
call
and
mov
out
cmpxchg
cmp
push
dec
dec
inc
dec
pop
leave
mov
sub
daa
mov
pop
dec
xor
sbb
sbb
sub
dec
xor
popa
aaa
and
or
dec
test
and
cld
adc
test
(bad)
adc
cwde
add
jae
(bad)
sbb
in
inc
mov
add
aas
shl
add
add
repnz
push
add
inc
add
pop
and
addr16
or
pop
add
das
and
pop
aas
pop
add
test
es
and
pop
sub
cs
lds
jnp
add
mov
add
lsl
ja
adc
pusha
out
and
call
out
push
cmps
das
aaa
add
daa
pop
test
cmp
add
push
pop
pop
sahf
mov
test
xor
pop
scas
sbb
add
pop
icebp
push
iret
fwait
push
(bad)
adc
cmps
add
icebp
or
xor
pop
fwait
bswap
inc
cmp
mov
lds
(bad)
jecxz
cmp
icebp
pop
jmp
shl
iret
repz
jnp
pop
inc
icebp
or
pop
dec
and
repz
jp
mov
retf
fsub
and
sub
cmp
pop
enter
jmp
ret
sub
sahf
or
retf
movlps
sbb
or
loop
stos
lahf
push
ret
out
sahf
pop
fistp
sbb
sbb
pop
inc
add
inc
xor
jecxz
clc
xlat
dec
add
outs
rol
cmps
mov
add
add
ja
out
(bad)
cmp
aas
sbb
add
xor
dec
dec
shl
and
sbb
repz
shl
or
hlt
sbb
call
loopne
ror
enter
shl
mov
xor
shr
out
xor
sub
pop
jo
push
pop
push
dec
cmp
lahf
imul
mov
inc
add
call
aas
mov
add
mov
imul
out
inc
jle
pop
test
cmp
fisub
fsub
and
inc
pop
mov
jg
enter
iret
mov
in
jae
loop
call
ja
mov
pop
jle
xor
push
ficomp
jbe
(bad)
fisub
add
push
pop
sub
mov
rcr
fsubp
stc
add
xor
dec
rcl
out
hlt
fstp
add
or
lea
mov
adc
sbb
xchg
pop
pop
test
fcom
mov
inc
cwde
jnp
cmp
add
scas
pop
rol
sbb
and
scas
mov
add
sbb
add
ds
test
daa
pop
pop
add
mov
xlat
add
sub
sbb
sub
xlat
dec
add
pop
sbb
in
jo
xchg
and
mov
jecxz
pop
mov
pop
jne
scas
add
rol
mov
inc
cld
rol
shl
dec
add
mov
jnp
out
inc
add
stos
add
jmp
add
cmp
fsub
jno
or
push
(bad)
dec
or
sbb
xchg
std
aas
and
cli
loopne
add
sub
add
and
add
cmc
xor
popa
jnp
sbb
sar
(bad)
and
(bad)
pusha
inc
lock
or
or
add
or
jo
in
mov
sbb
pop
pop
out
jae
idiv
jnp
movd
lods
pop
daa
movs
pop
pop
pushf
pop
out
retf
jne
or
push
fadd
aas
test
addr16
jo
test
inc
add
jo
mov
ins
pop
pop
push
pop
mul
pop
imul
mov
push
fadd
xchg
scas
cmp
lahf
xor
sti
sub
test
mov
pop
and
sbb
scas
test
pop
sbb
and
xchg
jae
add
dec
sub
data16
add
adc
xchg
adc
jo
or
adc
mov
dec
in
add
mov
add
jge
jnp
sbb
out
sbb
sahf
mov
pop
dec
pop
out
jg
rcl
pop
(bad)
(bad)
(bad)
jg
lea
mov
call
cmps
stc
cmps
imul
add
push
call
outs
mov
lods
mov
out
call
add
aaa
push
push
jbe
call
fistp
cli
sbb
pop
imul
outs
call
inc
add
cmp
inc
bound
mov
ret
out
xchg
inc
add
inc
cmp
cmp
nop
dec
pusha
outs
or
push
fld
inc
test
pop
ss
or
inc
add
fisttp
ss
ins
jns
and
sub
sbb
rol
add
add
add
add
add
mov
mov
add
add
cmp
jmp
inc
gs
pop
pop
sti
ret
cmp
mov
loope
add
xor
out
push
fnstenv
sub
and
add
push
push
dec
add
dec
add
push
dec
add
add
sbb
pop
test
mov
dec
and
xor
adc
call
imul
imul
cmps
stc
lock
in
les
nop
jo
cmp
sub
shl
adc
add
(bad)
fadd
int3
sar
xor
test
mov
cdq
cmps
jmp
dec
xor
or
stos
loop
sub
add
popa
and
or
or
xor
pop
test
mov
jo
sbb
fild
and
add
mov
dec
ins
and
sub
jcxz
sub
xor
loop
ret
icebp
(bad)
call
adc
add
inc
aas
sub
(bad)
dec
add
add
jp
or
mov
add
cld
(bad)
inc
and
imul
sub
sub
add
xchg
out
std
sbb
xor
in
pop
test
enter
or
or
in
sahf
push
ret
mov
adc
aas
stc
and
mov
leave
sbb
(bad)
(bad)
in
int3
into
sbb
ror
and
sahf
mov
sub
inc
rcr
and
sbb
add
(bad)
push
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
(bad)
(bad)
(bad)
(bad)
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
(bad)
(bad)
(bad)
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
(bad)
(bad)
(bad)
(bad)
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
(bad)
(bad)
jmp
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
call
xchg
and
and
int3
(bad)
(bad)
sti
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
(bad)
(bad)
(bad)
inc
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
push
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
(bad)
(bad)
dec
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
(bad)
(bad)
(bad)
jmp
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
(bad)
call
aas
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
(bad)
(bad)
(bad)
jmp
push
ja
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
(bad)
(bad)
(bad)
fmul
call
cmp
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
(bad)
(bad)
(bad)
dec
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
(bad)
(bad)
(bad)
push
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
(bad)
(bad)
dec
gs
std
or
in
ficomp
frstor
int
(bad)
out
sbb
or
cmps
xor
add
xchg
add
cld
int
cld
add
lea
cwde
dec
add
dec
xchg
cdq
dec
add
dec
(bad)
int
jae
fwait
dec
add
dec
je
popf
dec
add
dec
jne
lahf
push
add
(bad)
int
push
xchg
add
jbe
mov
xchg
hlt
sbb
add
xchg
add
(bad)
jmp
ja
ror
js
xchg
add
jns
icebp
scas
mov
cmp
popa
adc
and
jnp
add
add
cmp
aaa
add
dec
inc
aas
sbb
xor
aaa
add
pop
popf
add
cmp
adc
or
or
(bad)
(bad)
(bad)
dec
add
lldt
add
add
adc
push
add
add
adc
inc
add
add
push
push
add
add
adc
daa
adc
add
sbb
add
jne
push
pop
push
imul
add
pop
outs
add
add
jo
push
add
add
sbb
jnp
je
inc
sbb
add
pop
add
sbb
std
mov
popa
add
jmp
movnti
jae
push
add
add
pop
add
data16
push
adc
add
add
and
jge
hlt
dec
adc
and
dec
mov
add
aas
lock
ja
and
add
cmp
mov
sar
pusha
add
hlt
push
add
jp
pop
add
add
dec
adc
cli
sub
add
mov
and
cmp
clc
jbe
push
add
(bad)
bound
inc
add
add
xor
dec
loopne
out
and
xor
dec
pop
add
sub
jl
mov
cs
add
fiadd
push
pop
ins
or
jae
cmp
sbb
pop
xor
add
cmp
mov
inc
push
sub
jo
add
push
mov
imul
bound
ins
out
add
ins
mov
pop
add
mov
add
pop
add
jo
add
sbb
pop
add
mov
pusha
add
pushf
dec
cmp
add
hlt
dec
cmp
add
cmovnp
add
xor
cmp
add
clc
add
dec
xor
ins
push
xor
add
les
adc
add
xor
add
xchg
pop
add
test
xchg
mov
mov
xchg
or
loopne
loopne
loopne
xor
xor
add
or
fmul
mov
add
add
dec
add
inc
add
mov
add
add
pop
pop
or
fnsave
test
inc
add
dec
add
inc
and
jne
fadd
or
inc
andnps
(bad)
(bad)
call
dec
jb
jae
jne
arpl
push
outs
arpl
and
popa
data16
(bad)
push
cs
push
inc
and
imul
pop
pop
dec
dec
pop
push
push
dec
ds
dec
push
inc
push
pop
push
inc
push
dec
push
push
inc
inc
push
or
inc
das
mov
enter
inc
inc
dec
inc
push
push
fnstcw
inc
push
push
pop
inc
imul
popa
out
sub
sub
jl
and
mov
pop
push
inc
push
inc
pop
inc
dec
push
sub
sbb
pop
push
dec
dec
xor
out
(bad)
push
or
inc
push
inc
inc
inc
and
and
and
popa
ins
popa
and
fs
mov
popa
sub
xor
xor
das
das
aaa
cmpps
push
arpl
mov
add
das
and
popa
outs
fs
jb
push
ins
jo
outs
outs
mov
jae
dec
push
inc
add
sub
out
cmps
jmp
add
add
addr16
pop
add
(bad)
call
push
add
add
sub
cmp
add
movs
sub
add
fistp
jnp
lldt
pop
enter
add
sub
jae
or
cmp
data16
scas
sti
cmps
jle
rol
jg
jg
(bad)
popf
xor
pop
js
jo
gs
mov
std
add
(bad)
jmp
aas
(bad)
push
mov
(bad)
inc
add
cld
add
pop
movhps
aas
push
sti
(bad)
(bad)
adc
(bad)
sbb
(bad)
cld
cmp
cmp
adc
sar
psubusb
add
add
adc
pop
add
pop
push
inc
and
inc
and
jae
mov
adc
dec
popa
and
add
pop
out
mov
add
pop
pop
inc
mov
cmp
std
add
ins
add
add
xor
outs
sub
push
out
ds
popa
add
add
lock
lock
jmp
outs
mov
add
pop
add
pop
rcl
sar
clc
aaa
clc
sub
and
push
ror
cmp
cld
jne
mov
cmp
xor
call
loopne
inc
adc
sbb
pop
add
add
pop
lsl
sub
add
adc
push
ins
add
mov
sbb
(bad)
(bad)
aaa
push
fild
into
push
pop
inc
rcr
inc
pop
add
rol
sar
fistp
rol
add
add
aas
shl
jg
jo
inc
clc
popa
cmps
jmp
add
sar
inc
dec
mov
push
cmps
mov
fwait
lahf
minps
sahf
jnp
mov
scas
jmp
add
add
test
add
leave
dec
add
test
dec
or
xlat
rol
add
cmp
add
test
mov
mov
clc
pop
add
js
xor
out
mov
add
nop
push
jne
jbe
add
inc
jae
out
mov
sbb
add
movs
sub
and
add
add
mov
sub
add
rol
mov
neg
push
add
push
add
mov
into
jle
adc
clc
mov
inc
(bad)
or
gs
mov
(bad)
ja
js
fsub
js
ja
pop
jge
sub
mov
js
mov
sub
xchg
mov
movlps
mov
push
jbe
cmp
daa
popa
xor
fdivr
push
adc
(bad)
loopne
outs
mov
xchg
adc
push
imul
inc
fld
fld
jg
popa
into
in
(bad)
add
fst
add
pop
cmp
in
fcomp
iret
mov
pop
repz
mov
add
(bad)
mov
out
fidivr
fisttp
test
(bad)
mov
jae
cs
das
lock
syscall
cmp
mov
sub
xchg
mov
(bad)
cwde
mov
adc
cmp
pop
pop
dec
jg
fs
sahf
mov
das
pop
jae
mov
mov
outs
addr16
jnp
es
sti
sti
adc
leave
cmp
pop
scas
mov
lock
fld
mov
mov
sysret
pop
push
(bad)
sub
ret
add
sbb
mov
into
mov
(bad)
or
xchg
add
nop
dec
mov
in
mov
mov
(bad)
iret
mov
(bad)
adc
movs
adc
xor
dec
mov
popf
mov
clc
xchg
ja
add
jnp
(bad)
jnp
not
push
bound
jae
lahf
adc
(bad)
adc
iret
add
sti
aaa
test
les
add
add
and
inc
rol
add
(bad)
cmp
loope
idiv
push
mov
or
pop
cmp
add
jo
or
mov
nop
test
sbb
js
mov
pop
in
js
das
mov
enter
push
or
xor
add
aas
fadd
adc
or
add
adc
lahf
xchg
adc
xchg
jae
push
or
movs
int
pushf
loope
scas
mov
jnp
bound
or
mov
fild
adc
cmovo
das
or
mov
adc
mov
jb
dec
out
or
push
or
gs
or
pop
or
adc
inc
dec
push
and
sbb
sbb
sub
pop
(bad)
or
sbb
popf
push
iret
dec
dec
fs
popa
sub
mov
cmp
mov
or
cwde
sub
sub
add
retf
or
or
sbb
cmp
mov
dec
xchg
lds
cwde
add
or
int3
mov
or
das
push
rcl
xor
or
push
pop
or
sbb
fwait
or
or
or
test
mov
push
sbb
popa
mov
sar
(bad)
push
or
cdq
ins
and
int3
cmp
push
add
add
popa
add
mov
enter
fist
pop
into
mov
add
pop
inc
jmp
push
ins
pusha
cmps
inc
or
or
movs
sbb
js
jp
clc
mov
std
jecxz
leave
or
pop
mov
ins
out
fadd
mov
xor
jp
aas
sbb
and
mov
add
fwait
jmp
jp
add
(bad)
fcos
add
or
or
or
mov
or
and
aas
fdivr
mov
mov
str
inc
add
jo
push
or
rcr
mov
add
lock
outs
popa
outs
enter
inc
xor
into
xor
inc
retf
adc
pavgb
adc
int3
jne
mov
in
sbb
mov
ret
pop
stos
add
or
clc
jp
cmp
push
push
pop
jle
add
mov
adc
mov
mul
cmp
push
jae
sub
pop
xor
je
ja
mov
jg
out
inc
or
(bad)
xlat
std
fld
xchg
test
push
xchg
mov
jg
and
mov
clc
pop
adc
and
or
ja
jg
clc
inc
ret
cdq
sti
(bad)
cmp
add
push
and
add
popf
arpl
xchg
fincstp
clc
add
ins
enter
xchg
or
fs
jp
js
into
mov
mov
js
mov
push
pop
scas
(bad)
fs
js
push
xchg
adc
std
mov
or
xor
cmps
cmp
xor
popa
ja
push
adc
push
jno
es
fadd
dec
clc
or
push
fcomp
mov
sub
dec
sbb
(bad)
jle
or
or
jns
daa
sti
clc
ja
clc
sbb
add
enter
ja
clc
dec
addr16
mov
fsub
inc
addr16
nop
and
xchg
int3
je
add
mov
and
repnz
mov
clc
clc
loop
mov
xchg
popf
and
js
mov
xor
mov
and
(bad)
movs
sbb
loope
push
push
xchg
out
inc
fadd
loopne
add
leave
mov
or
add
or
or
jecxz
or
sbb
mov
jecxz
mov
cmp
mov
add
or
sub
(bad)
jp
xchg
sbb
sub
neg
push
add
lock
push
mov
js
lock
ins
ja
adc
sub
lock
jmp
ds
sbb
daa
dec
pmaddwd
out
jge
lock
daa
or
sub
ja
or
fadd
es
out
xchg
or
sbb
nop
or
add
inc
lods
xchg
add
add
call
adc
clc
xchg
or
jae
adc
test
daa
cmp
clc
xchg
dec
or
xor
adc
cmp
clc
xchg
ja
gs
adc
js
sub
ja
adc
test
adc
les
dec
inc
push
adc
pop
jmp
adc
add
xor
adc
add
add
mov
adc
xchg
cdq
adc
add
call
add
ins
add
add
popa
add
add
scas
inc
enter
add
sub
inc
repnz
sti
std
add
ja
outs
pop
add
das
push
or
dec
jmp
nop
add
and
xchg
add
push
mul
jne
or
ins
pusha
iret
inc
pop
xchg
div
inc
and
push
pop
arpl
fidiv
js
add
push
add
and
(bad)
add
sbb
loope
ss
sbb
loopne
or
and
or
pop
and
imul
push
xchg
sbb
daa
or
daa
sbb
add
jae
daa
pop
jle
data16
dec
mov
add
add
and
aas
nop
xchg
sti
and
cmp
cmovno
rcr
cld
sti
ins
mov
and
adc
(bad)
mov
fcom
push
fs
mov
add
scas
sti
push
xor
and
fdivrp
add
bound
stos
mov
push
add
xchg
sbb
pop
jp
jo
outs
arpl
or
lahf
inc
shl
inc
repz
xchg
add
adc
iret
std
ja
or
xor
cmps
add
add
inc
icebp
test
or
jmp
adc
add
add
push
add
add
add
sbb
xchg
bndstx
dec
add
mov
jae
pop
cmc
sbb
popf
cmp
(bad)
or
add
xchg
add
mov
pop
pop
xchg
push
add
add
inc
push
ins
popa
sbb
call
mov
xor
adc
add
outs
lods
sub
mov
add
dec
or
pop
pop
push
bound
push
icebp
and
pop
neg
add
pop
add
add
push
push
sub
in
sti
add
inc
daa
xor
xchg
add
pop
gs
dec
pop
leave
enter
cli
dec
mov
cmp
add
ja
daa
inc
ja
daa
out
pushf
std
fisttp
pop
add
nop
(bad)
or
fsubr
add
push
mov
popa
sbb
inc
push
inc
adc
fiadd
das
loope
test
cld
add
pop
add
(bad)
gs
add
sti
loope
mov
push
pop
add
add
or
test
out
xchg
aaa
sbb
dec
add
mov
mov
add
(bad)
(bad)
jg
ret
sar
dec
and
rcr
stc
iret
arpl
clc
mov
mov
add
aas
test
cmp
xor
adc
mov
sbb
outs
js
mov
(bad)
fcomp
in
movs
daa
jmp
sti
icebp
data16
add
rol
sar
xchg
adc
and
hlt
jg
bound
sbb
or
in
sbb
push
das
retf
pop
add
or
dec
ret
out
add
aaa
jmp
fcom
jmp
sub
mov
mov
add
add
or
dec
push
mov
pop
fisttp
xchg
out
or
jg
inc
add
cmp
inc
add
add
and
(bad)
xor
mov
aas
sti
test
and
es
inc
sbb
(bad)
fisttp
add
add
inc
daa
cwde
imul
xor
test
daa
ss
std
dec
add
daa
add
fstp
adc
sbb
icebp
lods
pop
pop
add
jne
dec
fcos
dec
cwde
mov
add
dec
dec
cmp
jmp
jae
sub
rcr
adc
mov
add
mov
inc
push
ja
jbe
xlat
xor
push
add
jne
cld
add
add
arpl
pop
pop
jg
add
daa
sbb
cmps
xor
add
push
mov
popa
push
jnp
sbb
or
popa
add
aaa
jnp
add
xor
dec
pop
out
mov
test
xor
pop
jnp
addr16
ds
or
dec
jb
cmps
dec
imul
or
dec
inc
popa
sbb
dec
jnp
xchg
out
pop
(bad)
jbe
jg
gs
pop
adc
sti
cdq
add
or
pop
push
fdivrp
jbe
add
xor
jle
pop
and
sbb
pop
and
add
inc
pop
sbb
push
sub
pop
jno
adc
or
popa
sub
sbb
movs
shr
sbb
jae
pusha
adc
jle
push
push
aam
pop
and
xlat
and
xchg
mov
xchg
mov
shl
pop
pusha
(bad)
adc
jg
add
aaa
fwait
add
mov
cmc
add
xor
sub
jbe
pop
maxps
sub
xchg
in
cmps
pop
sbb
mov
pop
adc
das
bound
cmp
sub
loop
fidiv
gs
adc
popf
movs
dec
jne
lea
and
imul
test
add
or
cmp
inc
pop
jne
imul
push
inc
cmp
or
push
and
or
ins
adc
push
push
jg
out
inc
sar
pop
add
jle
addr16
jae
pop
into
push
and
mov
outs
adc
dec
add
add
scas
push
pop
imul
sar
add
xchg
add
adc
xor
and
idiv
dec
jo
shl
jge
and
add
inc
mov
sti
add
inc
and
arpl
xchg
dec
dec
outs
jg
dec
rol
mov
cwde
mov
push
dec
aas
sti
popa
popa
loop
aas
stos
xchg
cdq
jne
ret
ja
int
inc
inc
ret
mov
fs
xor
add
mov
sub
add
(bad)
dec
or
pminsw
or
mov
inc
push
ds
int3
loope
clc
jne
jp
jge
in
jp
mov
add
add
pushf
sub
mov
push
dec
clc
xchg
jae
add
add
iret
imul
cld
fdivr
dec
mov
sub
cmp
cmp
lods
gs
xor
mov
ja
stc
add
aad
pop
out
test
lds
add
leave
adc
pop
out
push
(bad)
mov
mov
add
add
and
push
inc
fldenv
mov
retf
add
lahf
shl
xchg
repz
popf
pop
ja
and
sysret
ja
xlat
fsub
and
repz
ret
add
pop
dec
inc
pop
hlt
loop
je
add
dec
call
arpl
inc
(bad)
(bad)
add
loopne
add
push
arpl
push
ja
push
mov
add
mov
jle
mov
dec
bound
mov
or
or
and
dec
cdq
enter
jo
jb
pop
je
pop
addr16
pop
sbb
push
movq
and
jae
imul
aaa
or
push
popa
xor
add
pop
sub
test
dec
inc
sbb
xchg
xchg
fwait
mov
and
adc
mov
inc
rol
mov
and
jg
sub
pop
dec
or
iret
daa
mov
push
inc
les
fild
mov
jg
add
jg
xlat
shl
push
add
add
call
mov
add
jl
xchg
out
aaa
pop
dec
sub
and
push
push
add
add
dec
xor
adc
cld
or
sub
in
pop
mov
push
jnp
pop
ret
sbb
pop
sub
fst
inc
inc
loope
inc
pop
test
dec
mov
jecxz
rcl
adc
hlt
cmp
icebp
or
cmp
(bad)
dec
mov
aaa
ret
shl
cmp
fld
add
neg
das
cmp
dec
or
cdq
test
out
aaa
aas
mov
imul
and
test
add
out
jbe
jbe
out
cmps
into
addr16
jno
fnstenv
dec
ss
rol
dec
push
mov
dec
jp
xlat
jo
jecxz
mov
or
mov
adc
cmps
add
add
pusha
ja
or
icebp
aaa
ja
lahf
jns
pusha
lahf
push
repnz
repz
pop
add
test
dec
or
lods
mov
shr
cld
or
add
loopne
pop
push
out
inc
add
dec
sub
push
or
or
or
push
add
pop
(bad)
(bad)
jmp
or
xchg
pop
or
push
sbb
add
or
(bad)
(bad)
(bad)
call
bound
jl
jle
dec
das
add
jbe
fs
dec
add
or
lds
xchg
test
(bad)
(bad)
(bad)
dec
aad
xchg
pop
xor
xor
pop
or
xor
add
push
mov
xchg
in
test
xchg
out
mov
inc
clc
out
fld
iret
dec
test
or
add
sti
arpl
pop
and
ins
cli
xchg
cmps
pop
cmp
push
and
push
and
and
sti
fild
retf
jp
jp
or
in
push
sub
pop
or
cmp
idiv
push
bound
pop
add
or
ins
das
push
test
sub
lahf
jae
sbb
std
cmp
out
(bad)
call
jne
jp
pop
adc
jge
in
cmp
mov
lea
pop
test
and
dec
dec
pop
and
sub
ins
mov
cwde
repnz
stos
mov
jns
xchg
jbe
adc
push
mov
xchg
pop
test
add
(bad)
jg
or
inc
push
sbb
sub
call
ins
das
sti
shl
add
sbb
imul
(bad)
std
mov
fcom
bound
pop
add
adc
sub
jg
sti
sub
xor
imul
loopne
outs
loopne
mov
pop
fimul
setno
dec
and
test
(bad)
(bad)
aas
in
(bad)
cli
push
adc
xor
addr16
or
imul
push
mov
jb
add
or
jg
test
gs
adc
sahf
std
mov
and
mov
and
push
mov
push
mov
mov
dec
hlt
xchg
test
sbb
dec
add
sbb
dec
sbb
dec
mov
dec
test
pop
es
or
nop
jmp
(bad)
xchg
or
xchg
and
xor
xor
add
jmp
in
mov
cdq
adc
in
pop
mov
add
(bad)
fldcw
in
std
mul
xchg
cmp
jae
daa
lea
pop
pop
or
jl
add
test
and
icebp
cmp
setae
mov
jmp
test
test
lea
std
pop
or
push
arpl
js
adc
js
jbe
sbb
push
test
push
outs
add
pop
dec
stc
pop
stos
xor
pop
pop
xor
(bad)
popf
or
sbb
iret
jle
pop
mov
dec
mov
cdq
push
cmp
jmp
loopne
cmp
pop
das
jmp
bound
pop
pusha
mov
sbb
mul
std
sbb
push
pop
jne
dec
inc
icebp
add
mov
xor
fldlg2
fld
or
pop
add
or
sti
mov
push
cdq
push
jns
daa
(bad)
adc
in
cmp
xor
std
lahf
dec
test
gs
arpl
xor
pxor
add
gs
ror
add
dec
outs
add
fist
nop
sbb
or
dec
bswap
pop
pusha
add
arpl
or
cwde
sub
xor
push
mov
data16
cmp
ret
jecxz
add
push
xchg
cwde
icebp
xchg
pop
(bad)
xlat
jmp
iret
sub
add
gs
xchg
lock
or
cmps
test
pop
(bad)
push
stos
mov
(bad)
popw
cld
(bad)
fnstsw
xor
inc
dec
push
xor
addr16
fdivrp
pop
xchg
jmp
clc
jbe
push
push
and
clc
sbb
push
sahf
or
or
sti
or
jae
push
cli
pop
das
rcl
(bad)
mov
xchg
in
jle
dec
(bad)
iret
pop
pop
rcl
and
mul
xchg
scas
clc
ins
js
dec
lahf
das
add
clc
stos
mov
dec
das
mov
inc
dec
fisttp
sub
sbb
lock
(bad)
(bad)
jbe
ds
out
jp
js
ret
mov
jbe
scas
sbb
push
push
xchg
push
call
push
mul
pop
jbe
sbb
pusha
xchg
push
inc
pop
sub
or
dec
jg
xchg
fwait
cmovs
xchg
sub
lods
stc
pop
popa
mov
xor
popa
icebp
cli
ret
jecxz
add
test
push
fxch
(bad)
xchg
icebp
add
popa
mov
jge
psubsb
or
add
add
xor
push
aaa
xor
and
push
add
cmp
inc
lea
add
(bad)
xor
call
dec
adc
add
(bad)
(bad)
(bad)
inc
je
or
add
ins
je
inc
jns
gs
outs
push
imul
add
je
popa
(bad)
(bad)
(bad)
jae
inc
jb
outs
or
imul
dec
outs
outs
jb
popa
je
outs
(bad)
ds
outs
add
pop
push
gs
or
ins
gs
outs
push
jns
div
ins
or
push
gs
jo
dec
popa
ins
gs
jbe
dec
ins
popa
outs
fs
imul
sbb
(bad)
std
aas
push
jb
arpl
fs
jae
cmovge
jne
gs
sub
(bad)
call
sub
je
jb
outs
arpl
fs
js
push
add
dec
jae
popa
inc
ds
fs
outs
fs
je
or
sub
(bad)
fild
popa
jb
push
je
imul
mov
pushf
sti
fstp
push
jns
gs
iret
nop
ins
jo
add
ins
jno
jo
pop
jae
test
js
jb
je
fwait
std
(bad)
push
imul
ins
mov
dec
popa
jo
push
(bad)
aas
or
jbe
jb
outs
ins
outs
je
ja
push
sti
popa
jb
popa
(bad)
fild
jb
xlat
dec
gs
and
cmp
inc
jb
popa
je
inc
gs
jb
jns
cwde
xor
sub
ror
outs
jne
je
call
xor
fnstcw
add
test
das
sbb
loopne
(bad)
sub
(bad)
push
or
push
je
clc
out
out
mov
add
in
push
imul
mov
fwait
pusha
fisubr
outs
arpl
dec
fdivr
adc
outs
fs
ja
shl
push
je
xor
pop
dec
inc
dec
push
mov
jnp
or
adc
cmp
in
xor
ja
ins
jle
ins
outs
bound
inc
ins
popa
sub
lock
jne
jb
push
push
fidivr
or
jae
push
popa
ins
jne
movs
cwde
jae
cmp
call
push
sbb
out
cs
jge
xchg
sub
sub
ds
outs
sbb
ins
jo
sub
hlt
inc
je
ins
cmp
int3
xor
and
adc
sbb
imul
adc
add
sub
xor
jo
mov
data16
int
(bad)
rol
add
mov
jg
mov
jae
adc
jne
in
add
inc
jne
ins
imul
cdq
leave
bound
outs
xchg
sar
stos
push
outs
inc
dec
adc
push
ss
jns
addr16
lds
jbe
imul
mov
pop
inc
arpl
sub
sbb
jne
popf
std
jb
inc
imul
jns
mov
cmps
or
or
loopne
imul
je
jae
dec
inc
ins
outs
jae
(bad)
call
pop
or
jb
je
shr
dec
aaa
inc
imul
je
outs
jb
pop
or
in
ins
gs
bound
arpl
sbb
out
pop
outs
pop
(bad)
push
popa
je
pop
pop
or
dec
retf
mov
add
gs
int3
jb
ja
je
inc
jbe
cmp
popa
clc
lods
popa
xchg
imul
iret
gs
add
pusha
fild
push
leave
(bad)
dec
outs
popa
ja
jb
or
dec
imul
int3
add
gs
arpl
iret
xor
nop
or
fsub
push
outs
imul
jb
ja
data16
push
gs
mov
xchg
popa
jae
ret
shl
and
add
inc
inc
dec
in
mov
dec
dec
gs
jbe
adc
xlat
xchg
push
popa
jbe
pop
add
repz
dec
jo
int3
loopne
outs
add
mov
pop
xchg
cmp
pop
sbb
push
jo
gs
(bad)
outs
arpl
and
inc
nop
and
scas
mov
dec
and
js
je
xor
mov
out
add
imul
jne
or
in
or
dec
imul
hlt
jae
gs
je
or
push
imul
shl
in
fbstp
lods
pop
xor
aaa
cmp
or
ficomp
adc
mov
(bad)
mov
in
icebp
sbb
ins
ins
ret
repz
rcl
push
sub
pop
or
into
xchg
or
jo
outs
or
(bad)
mov
sbb
push
jne
jb
mov
into
lds
ret
pop
xchg
xor
out
sbb
adc
ins
and
div
clc
dec
imul
push
cmp
fild
je
push
pop
or
imul
outs
ins
outs
jb
std
pusha
out
cmp
xchg
and
and
xchg
js
push
sub
push
or
fwait
js
push
xchg
jae
xchg
add
push
je
pop
xlat
(bad)
das
jne
inc
push
dec
or
jb
loope
imul
or
ins
jns
das
push
lahf
lods
ins
adc
push
xor
pop
leave
pop
les
or
(bad)
call
gs
outs
jb
dec
jb
inc
js
add
data16
jb
xlat
iret
mov
popa
jo
retf
lods
outs
cmp
xlat
mov
dec
jl
push
xor
sbb
gs
outs
ja
mov
xchg
mov
ins
pop
xor
arpl
xor
jle
ins
imul
(bad)
loope
xor
and
add
jbe
(bad)
dec
pop
jp
int3
push
outs
sar
push
(bad)
je
addr16
imul
sti
inc
cmp
sub
or
outs
inc
push
outs
dec
outs
mov
pop
leave
gs
push
and
push
adc
mov
pop
inc
dec
inc
imul
ds
popa
and
dec
push
inc
outs
dec
gs
pop
int3
add
or
sbb
sub
setge
or
lds
or
xchg
sub
inc
jle
and
mov
or
and
sub
push
outs
and
adc
inc
ins
mov
clc
or
adc
fs
ffreep
add
ins
popf
data16
or
and
lds
xor
adc
pop
inc
inc
popa
or
pop
bound
daa
push
gs
int3
aad
push
fmulp
outs
ins
bound
or
(bad)
pop
cld
addr16
push
outs
ins
imul
inc
jo
add
outs
sub
inc
ins
dec
call
outs
and
and
push
inc
mov
adc
sbb
add
rcl
icebp
xor
inc
fcomip
xchg
outs
ins
lea
outs
inc
mov
inc
pop
dec
jmp
fwait
mov
sbb
into
xor
xor
cli
dec
jle
inc
gs
arpl
popa
jo
add
or
(bad)
jecxz
je
mul
cdq
ret
add
sub
clc
mov
dec
outs
dec
pop
or
dec
cld
add
push
outs
jne
gs
inc
scas
(bad)
mov
dec
jae
cmp
or
das
push
gs
imul
popa
jae
adc
mov
mov
ins
gs
ret
ins
out
outs
popa
jb
adc
ficom
push
pop
lea
jae
inc
movs
outs
fst
in
mov
popa
jae
dec
gs
mov
jmp
inc
dec
push
dec
inc
inc
jb
ins
mov
inc
pusha
enter
adc
aaa
sbb
imul
dec
xor
add
mov
add
mov
push
(bad)
jmp
inc
add
adc
call
call
add
adc
(bad)
(bad)
jg
dec
jmp
or
inc
inc
add
mov
inc
add
adc
add
fidiv
lock
test
or
add
loopne
add
jae
out
aam
shl
xchg
or
outs
outs
outs
outs
add
sbb
inc
je
mov
cmp
jo
loop
in
push
push
dec
fwait
clc
aas
data16
pop
dec
outs
je
data16
arpl
add
aas
mov
gs
add
ja
jo
and
inc
data16
push
(bad)
not
dec
das
push
xchg
popa
hlt
sbb
cwde
or
ret
iret
xchg
or
je
adc
sbb
mov
or
sub
aad
jae
scas
vmread
jmp
pushf
push
inc
jb
jne
dec
je
ins
int
shl
das
mov
data16
ins
adc
jae
adc
inc
aas
cmp
cs
inc
add
jne
ja
jnp
retf
imul
jo
popa
outs
loope
ror
ins
sub
and
inc
jb
ja
jb
ins
gs
(bad)
jb
ins
xor
arpl
rcr
outs
arpl
cmp
adc
ss
cmp
push
push
mov
imul
xchg
xor
and
int
addr16
add
inc
dec
shr
jbe
mov
push
in
mov
pop
pusha
sbb
(bad)
call
jo
jo
outs
jne
add
mov
or
(bad)
or
add
mov
arpl
popa
push
je
jb
addr16
sbb
jbe
jp
pop
inc
je
ins
sbb
inc
adc
jnp
outs
and
js
mov
xor
in
call
popa
jo
popa
outs
addr16
cmp
push
mov
les
paddb
iret
mov
push
popa
jb
inc
imul
inc
cmc
mov
push
sar
adc
xchg
addr16
and
add
data16
adc
push
test
mov
mov
push
outs
idiv
and
xor
repz
pop
mov
bound
push
jae
aad
jmp
cmp
cwde
push
dec
push
outs
and
xor
loope
int3
dec
int3
das
mov
arpl
data16
or
jae
outs
outs
imul
int
outs
out
(bad)
jg
addr16
outs
jne
outs
ins
popa
jns
inc
minps
jl
iret
js
xor
popa
fcomp
lahf
or
jg
xchg
push
push
adc
adc
aad
pop
rcr
push
es
aam
xor
scas
cmp
outs
ret
ret
cli
xor
je
jne
je
add
dec
pop
pop
outs
outs
ins
gs
or
cwde
cmp
data16
arpl
jno
int
stos
adc
(bad)
out
outs
mov
or
or
or
gs
jae
cmp
popf
mov
and
push
fwait
std
xchg
xchg
inc
arpl
gs
rcr
adc
and
cdq
push
fdivr
aad
arpl
fwait
es
jae
outs
xor
imul
lods
sbb
sbb
cmp
xchg
movs
sub
mov
imul
sbb
xor
mov
jb
jl
outs
jo
pop
aad
pop
cld
outs
ins
ins
push
or
cmp
adc
sbb
add
aam
mov
outs
jb
xchg
popw
or
add
loopne
push
push
pop
int
sbb
dec
mov
push
cmps
fdiv
jae
int3
call
out
sbb
fisub
stos
or
outs
outs
addr16
stos
nop
pop
push
repnz
sub
leave
popa
ss
cmp
(bad)
ret
mov
ins
mov
pop
push
gs
jae
xchg
pop
jae
or
gs
mov
cmps
dec
add
stos
pusha
jno
popa
pop
push
jo
cmp
sbb
add
and
es
or
dec
outs
jbe
(bad)
fs
xchg
jb
pusha
int3
(bad)
imul
cmp
push
or
mov
jp
push
int3
call
add
inc
fimul
and
outs
mov
int3
pop
cwde
xor
add
(bad)
cmp
int
and
adc
or
popa
or
xor
fld
gs
(bad)
jo
fidivr
pushf
hlt
xor
add
mov
add
jnp
dec
xor
in
jmp
rol
loop
mov
inc
adc
popa
arpl
sbb
xchg
stos
jb
repnz
pushf
or
in
les
movs
jae
push
pop
scas
or
xor
cld
nop
jmp
jbe
mov
es
pop
adc
push
mov
jnp
mov
outs
push
jg
push
jge
out
add
add
ret
pushf
add
fwait
outs
gs
inc
cld
je
popa
outs
outs
outs
lahf
imul
test
sbb
arpl
dec
je
jo
push
iret
add
jne
jae
adc
imul
ret
cmc
outs
inc
add
inc
add
pop
mov
jne
dec
imul
mov
mov
es
fwait
jle
stos
mov
jnp
add
mov
fld
pop
lds
push
outs
jo
gs
jnp
xchg
dec
and
pop
push
mov
rcl
cmp
dec
or
pop
gs
xchg
pop
dec
add
jno
aaa
sar
mov
add
imul
ins
daa
movhps
jb
jns
test
add
push
mov
pop
mov
xor
sbb
push
adc
or
jmp
lea
pop
cmp
inc
shr
sub
mov
and
(bad)
mov
jae
add
je
inc
dec
pusha
jae
gs
adc
(bad)
cmc
add
inc
test
mov
inc
add
dec
add
and
add
add
add
and
loop
pop
or
inc
sub
jmp
adc
pop
pop
add
push
push
or
inc
or
xor
aaa
movd
mov
adc
or
push
or
xor
bound
dec
mov
outs
inc
cmc
scas
add
nop
sldt
or
add
popf
mov
sbb
xor
jg
or
xchg
inc
pop
adc
and
add
ins
out
xor
lea
sbb
and
or
mov
cmps
adc
or
add
daa
pop
pop
xor
mov
cs
jb
adc
inc
aad
jne
add
fistp
add
add
add
add
add
add
add
add
adc
add
add
inc
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
