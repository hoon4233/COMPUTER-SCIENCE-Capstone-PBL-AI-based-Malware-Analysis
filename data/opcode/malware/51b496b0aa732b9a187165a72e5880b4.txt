mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
outs
(bad)
test
pop
dec
outs
je
addr16
and
rcr
xor
add
jns
ins
daa
push
outs
jb
add
pop
jns
inc
outs
(bad)
mov
repz
add
cwde
or
push
je
sub
in
push
int
pop
push
sub
cmp
out
push
cmp
xor
xor
in
pop
push
dec
bound
arpl
pop
sbb
sub
rol
loop
jae
ins
mov
adc
int
jl
(bad)
dec
jb
popa
arpl
add
(bad)
aas
cmp
int3
add
jmp
fdivrp
and
adc
mov
ja
ja
xchg
gs
mov
(bad)
loopne
jno
add
in
stc
mov
inc
xor
cmp
adc
xchg
out
push
and
notrack
sets
nop
mov
mov
xchg
jl
je
xchg
xchg
xchg
xchg
ins
push
xchg
xchg
pop
test
push
xchg
xchg
xchg
xchg
push
sar
dec
ror
xchg
xchg
xchg
xchg
enter
push
jl
xchg
cmp
les
add
imul
outs
push
sub
je
movzx
mov
ss
pop
ret
(bad)
xor
cmp
cmp
sub
and
cmp
cmp
sbb
push
mov
rep
fadd
push
add
enter
add
xor
pop
enter
mov
mov
ret
lea
outs
(bad)
dec
push
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
std
outs
ja
scas
mov
mov
xchg
ins
test
xchg
mov
mov
mov
jmp
lods
mov
mov
adc
add
jne
mov
mov
adc
ret
out
cld
mov
mov
mov
mov
mov
add
rcr
lock
out
push
or
push
or
ret
and
mov
outs
in
hlt
mov
push
or
inc
add
adc
or
aaa
sub
jne
(bad)
mov
cmp
call
push
(bad)
fisttp
sbb
xor
mov
add
loopne
mov
into
int
bound
jne
mov
ss
ins
shl
or
mov
dec
ret
jmp
pop
mov
pop
shl
add
iret
pop
repnz
sub
stos
fiadd
sub
mov
lock
pop
ret
mov
aam
or
or
xor
sbb
scas
sbb
sti
jne
sbb
nop
int
add
es
mov
cmp
mov
add
imul
adc
push
jg
mov
mov
test
je
mov
mov
cmp
(bad)
mov
push
sub
inc
lock
push
mov
data16
jge
stos
sub
rol
push
lahf
push
xchg
mov
add
mov
add
in
mov
pop
sbb
fucomip
mov
mov
pop
in
mov
call
test
mov
adc
in
es
(bad)
sbb
ja
mov
add
cmp
ja
cmp
jp
popf
sbb
jbe
or
push
in
cmp
or
mov
fild
mov
cdq
in
or
adc
sbb
shr
lds
pusha
sbb
pop
dec
scas
mov
outs
mov
mov
and
outs
add
ret
ds
mov
jb
sub
or
lds
xor
cmp
add
and
mov
cmp
or
or
jbe
scas
adc
sti
push
push
cmp
jmp
ss
mov
and
push
jb
sub
cs
inc
(bad)
xor
jmp
scas
dec
jne
sahf
nop
out
sub
fistp
xor
cmp
jae
mov
cmp
xchg
add
sbb
inc
mov
pop
inc
add
shl
mov
ja
ds
sti
mov
mov
(bad)
aas
or
add
repnz
rcr
jmp
idiv
inc
xlat
mov
push
movs
sbb
jmp
mov
inc
ds
dec
xor
(bad)
pop
add
sub
mov
jne
pop
cmp
movs
es
out
jmp
push
push
inc
in
xchg
ins
rcl
mov
jl
mov
ret
je
cmp
jne
or
jle
stos
pusha
mov
sub
jl
mov
xor
lea
or
mov
mov
add
pusha
pop
fcom
dec
xchg
ins
out
arpl
ins
hlt
add
test
xchg
jmp
ret
sbb
cmc
jne
xchg
cmp
jnp
add
cmp
sub
loope
ds
popf
adc
adc
xchg
lea
push
jge
inc
mov
cmp
lock
jae
mov
ret
add
or
pop
cmp
test
(bad)
ret
jns
cmps
add
jo
add
adc
xor
jecxz
jl
add
sbb
std
cmp
push
push
push
mov
push
ja
dec
cmp
and
jno
mov
push
test
xchg
mov
or
sar
xor
jle
hlt
inc
cmp
jo
and
in
mov
mov
mov
pop
ds
pop
pop
push
adc
(bad)
loop
xor
je
in
sub
push
dec
pop
xchg
test
or
xchg
sbb
iret
add
or
in
out
mov
mov
fs
mov
add
outs
push
push
mov
sub
sbb
xchg
and
(bad)
fistp
mov
cmp
adc
sub
or
or
pop
adc
test
jns
add
sar
test
mov
das
sub
fnstenv
hlt
mov
add
inc
iret
lds
dec
fadd
add
std
sti
jb
add
or
mov
cmp
call
xchg
lea
pop
(bad)
inc
cmp
jl
mov
jb
sahf
div
mov
retf
or
mov
and
(bad)
imul
inc
sub
test
cld
dec
adc
jnp
loopne
adc
jbe
or
push
or
dec
mov
pop
or
xchg
or
fistp
add
and
push
(bad)
xor
iret
or
or
or
fisubr
(bad)
sub
inc
pop
mov
test
je
mov
sub
fistp
test
jo
cmp
test
add
test
aad
add
mov
xor
add
imul
and
fsub
test
jne
mov
(bad)
dec
adc
or
and
mov
pop
out
pop
movups
add
dec
xor
dec
xor
into
push
lea
sub
cld
jg
cli
mov
test
sub
sub
cmp
jge
mov
icebp
or
out
ins
jmp
daa
add
out
adc
lea
and
in
mov
aad
(bad)
lds
stos
clc
add
dec
jae
lea
shl
test
jp
inc
mov
pop
or
xchg
pop
out
rol
jae
add
movs
mov
cwde
jo
(bad)
aaa
adc
out
test
mov
enter
mov
sbb
sbb
mul
mov
adc
add
sub
fcomp
or
fs
mov
stos
sbb
and
ins
sbb
adc
or
mov
xchg
xor
daa
or
cmp
push
or
stos
mov
dec
lea
movs
movs
mov
cwde
lds
fwait
pushw
mov
and
or
ja
out
or
push
mov
cmp
pusha
xchg
lods
sub
or
inc
push
adc
repz
(bad)
sbb
or
sbb
adc
out
cmp
push
fsubr
xor
mov
(bad)
or
mov
arpl
fld
pop
mov
fadd
sbb
fadd
pusha
pop
pop
inc
xlat
test
or
ret
pusha
(bad)
cmc
inc
enter
xor
inc
sar
cmp
stc
mov
adc
or
pop
in
mov
jmp
stos
jo
or
cmp
sbb
mov
inc
mov
jle
adc
lods
cs
pop
mov
pop
je
(bad)
out
mov
sub
pop
xor
mov
sbb
jle
adc
jne
movs
sub
cmp
adc
mov
add
xor
sub
sub
xor
jmp
jmp
xchg
dec
pop
inc
and
and
test
leave
jmp
repnz
jne
(bad)
int3
jne
js
pop
xor
scas
push
mov
xlat
test
jns
rol
movs
pusha
or
xor
mov
je
sti
clc
stos
jle
inc
cld
in
clc
pop
jbe
addr16
push
push
mov
mov
xlat
cmps
add
or
sti
mov
mov
push
test
jg
and
test
outs
push
pop
inc
scas
shl
push
or
mov
or
xor
jge
out
pop
cdq
cmp
mov
mov
call
or
and
jbe
jmp
sub
sub
cmp
cwde
fimul
movzx
in
xor
xor
adc
(bad)
arpl
push
sbb
push
adc
mov
push
sbb
mov
sub
jne
out
or
das
pushf
cmp
adc
or
mov
mov
test
sbb
mov
jne
test
ja
(bad)
or
jbe
or
call
add
add
or
or
test
(bad)
jge
sbb
call
add
lds
mov
ret
mov
cmp
pop
loopne
sub
in
and
jle
sbb
jg
loop
dec
mov
adc
ret
sbb
add
cli
test
aaa
or
jmp
mov
cmp
clc
add
mov
adc
or
adc
dec
jae
and
cmp
sbb
dec
adc
jg
add
out
lock
mov
(bad)
jge
mov
test
loope
add
mov
(bad)
lock
fldenv
add
pop
sbb
push
pushf
(bad)
into
not
sbb
mov
cli
add
inc
sub
sub
test
loopne
push
pop
cmps
mov
xor
sbb
in
sub
mov
cmp
imul
(bad)
sub
addr16
mov
jl
fmul
addr16
call
daa
add
inc
lahf
add
and
dec
or
xor
mov
fbld
fiadd
pop
add
push
sbb
cmp
xor
mov
jo
or
xchg
or
pop
mov
ret
adc
cmp
xchg
ret
inc
in
cmps
jmp
add
ret
push
fdiv
push
hlt
jo
mov
sbb
test
push
inc
cmps
pop
retf
enter
movhps
adc
sbb
mov
jmp
out
adc
xchg
ret
mov
fdiv
(bad)
mov
(bad)
add
fdiv
mov
xchg
dec
sbb
dec
xor
daa
and
test
jle
call
push
stos
adc
add
(bad)
cmp
mov
ds
je
loopne
dec
add
xor
sbb
dec
jnp
mov
dec
inc
pop
or
add
push
jmp
push
xor
add
xlat
mov
arpl
cs
outs
push
mov
inc
dec
mov
push
jle
mov
rol
sbb
mov
sbb
loop
mov
inc
or
xlat
push
dec
jg
mov
das
out
cs
jle
jecxz
cmp
add
or
lahf
cwde
add
jo
mov
mov
ja
adc
pop
mov
xchg
or
sbb
ret
push
push
push
xor
xchg
fidiv
rcl
jmp
jp
mov
mov
inc
or
je
pop
jle
cmp
push
cld
ret
sub
inc
fdivr
sar
(bad)
mov
inc
rep
jmp
mov
ss
leave
jmp
mov
jl
pop
jp
pop
scas
mov
add
pop
adc
stos
nop
sbb
(bad)
mov
in
dec
clc
adc
adc
js
rep
xchg
loope
scas
mov
xor
lea
xor
std
xor
mov
(bad)
ds
inc
mov
aas
jmp
nop
push
fnstcw
pop
sub
fistp
jbe
adc
or
fst
dec
sti
es
fldcw
fldcw
pop
inc
jbe
dec
ret
aam
push
int3
adc
pop
sub
fs
cld
add
(bad)
push
fdiv
mov
fimul
sub
(bad)
(bad)
fwait
scas
adc
sbb
je
mov
in
xor
add
adc
mov
inc
xlat
out
sbb
adc
dec
div
imul
xlat
ja
and
adc
jne
retf
jb
push
sbb
lock
adc
pop
(bad)
loopne
sahf
jmp
cmp
ror
cli
dec
int
(bad)
ja
sbb
retf
sub
jne
or
mov
inc
inc
and
sub
fstp
mov
mov
inc
inc
mov
ja
add
push
shr
je
mov
cmp
jne
dec
sbb
stos
dec
aam
dec
fcomp
sbb
ror
jmp
outs
or
loop
push
adc
add
and
je
mov
cmp
jne
dec
repz
dec
je
mov
cmp
jne
or
add
(bad)
mov
adc
cmp
jne
shr
sbb
cmp
adc
add
out
loope
int
mov
dec
dec
pop
cmp
rol
dec
rol
pop
and
iret
cmps
jns
mov
cmp
jne
dec
dec
dec
and
shl
sbb
sub
dec
mov
loopne
mov
cmp
rol
or
stos
mov
stos
pop
outs
aas
jl
daa
push
shr
int3
add
push
inc
int
test
je
mov
or
je
or
je
and
fwait
fwait
sub
pop
pop
je
xor
dec
sti
jnp
movs
and
cs
jmp
or
push
mov
jg
ja
cmp
ja
lea
push
add
push
outs
out
das
clc
idiv
int
or
jge
jmp
inc
mov
js
pop
sub
jmp
(bad)
fld
jmp
mov
fild
popf
mov
xchg
and
add
or
xor
stos
aad
cmp
outs
cwde
pop
xor
mov
inc
mov
test
cmp
cmp
pop
icebp
jg
push
inc
mov
dec
jne
pop
dec
out
sub
xchg
out
or
sbb
sub
je
fsubr
adc
lea
lea
mov
lods
push
or
add
je
das
mov
push
cmp
add
popa
push
and
sbb
dec
lock
pop
xchg
jge
mov
dec
sub
xor
sbb
int
(bad)
stc
jmp
fstp
fld
fldz
mov
je
adc
jns
leave
aas
mov
cli
or
daa
inc
pushf
or
ret
mov
adc
repnz
pop
mov
out
sbb
stc
retf
inc
stc
add
mov
imul
fistp
lock
mov
sub
test
out
sub
jle
xor
mov
lds
mov
(bad)
out
inc
jbe
imul
cmp
mov
(bad)
mov
bound
out
lods
inc
cmp
xlat
fadd
outs
xor
xchg
dec
mov
push
push
int3
into
sbb
ror
mov
push
pop
test
pop
cmc
call
enter
mov
inc
push
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
(bad)
(bad)
(bad)
cmp
sbb
pop
(bad)
mov
addr16
leave
repnz
bound
and
push
(bad)
(bad)
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
stos
mov
(bad)
(bad)
(bad)
out
cmp
or
mov
pop
out
sub
imul
(bad)
div
jl
pop
icebp
inc
leave
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
(bad)
(bad)
(bad)
jmp
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
(bad)
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
(bad)
inc
xchg
push
cmps
scas
mov
pop
or
add
cmp
xor
in
jg
(bad)
(bad)
cmp
sahf
xchg
pop
cmps
lock
mov
popa
movs
mov
and
(bad)
(bad)
(bad)
jmp
repz
mov
sub
and
and
outs
bound
xor
add
imul
and
repz
das
inc
pop
or
pop
jne
push
pop
and
sub
and
mov
movs
xchg
push
(bad)
outs
pop
hlt
movzx
hlt
mov
lea
push
push
sbb
jmp
push
pop
icebp
aaa
mov
push
mov
mov
add
hlt
push
data16
add
sbb
and
in
das
fistp
ja
mov
jmp
adc
hlt
mov
pop
aas
or
adc
adc
push
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
push
dec
add
push
dec
popa
jae
push
popa
ins
jne
fninit
fwait
mov
(bad)
mov
jg
xlat
mov
xor
mov
inc
rep
push
or
sar
push
push
mov
or
dec
cld
jne
dec
mov
xor
loope
das
cs
jne
call
fadd
add
cmps
jo
push
or
mov
ja
popf
out
aaa
and
ja
rcr
idiv
movs
fiadd
inc
push
movups
xchg
xchg
jo
fs
mov
ret
xor
mov
cmps
lods
jle
xchg
outs
loopne
mov
rol
or
push
cld
es
jl
mov
xor
push
mov
jmp
pop
(bad)
mov
push
add
pop
fdivr
mov
jmp
cmp
je
pop
mov
mov
or
add
jae
mov
jnp
mov
push
sbb
push
loope
cmps
cmp
outs
lods
(bad)
mov
mov
push
pusha
or
pop
cmp
jg
inc
jmp
stc
out
jae
rol
pop
shufps
and
loope
jo
pusha
mov
add
mov
adc
inc
or
mov
les
test
pop
clc
push
push
cld
mov
dec
xor
fstp
inc
mov
and
pop
outs
mov
xor
add
mov
cs
and
call
lea
push
sbb
and
jecxz
jecxz
(bad)
dec
setne
lahf
cmp
in
lods
popf
lock
xor
mov
mov
xor
xor
jb
cmp
fmul
call
or
push
sub
inc
inc
fcom
ja
ja
pop
add
in
mov
or
popa
mov
rcl
ror
mov
leave
jne
mov
sbb
(bad)
xor
nop
push
xchg
jmp
retf
je
mov
sqrtps
scas
je
pop
in
not
call
ret
pop
add
sub
mov
pop
cs
xchg
out
mov
les
jmp
cmp
jb
mov
cmp
mov
mov
hlt
mov
push
pop
pop
jno
xor
push
xchg
xor
cld
pop
sub
sub
adc
pop
sbb
mov
popa
lock
ds
sbb
dec
int3
bound
je
mov
dec
push
cmp
sbb
add
dec
jne
icebp
dec
sar
jnp
jmp
push
jmp
add
sbb
jecxz
dec
inc
cmp
scas
pop
iret
mov
jle
int
lahf
adc
push
add
stos
div
adc
pop
jmp
xor
xor
loopne
fadd
ror
add
iret
ds
sbb
fcomp
sbb
jmp
pop
fwait
out
pop
mov
rcr
jl
dec
xor
(bad)
adc
mov
mov
mov
add
pusha
mov
mov
pop
adc
jns
call
cmps
mov
nop
or
push
outs
mov
sub
sub
out
call
fistp
mov
(bad)
jg
loopne
in
add
and
pop
pop
cmp
or
jbe
sbb
cli
in
push
sub
adc
pop
push
mov
push
push
cmp
mov
in
cmps
cmp
mul
mov
or
jae
data16
xlat
jmp
push
and
sbb
jmp
mov
or
jne
movsx
inc
inc
jmp
add
push
pop
addr16
and
or
(bad)
cmp
push
aas
loop
fdivr
je
sbb
(bad)
jecxz
pop
(bad)
mov
test
cmps
pop
cmc
frstor
push
push
dec
adc
outs
ret
sar
xor
adc
test
(bad)
mov
out
lds
cmp
je
or
fdiv
jbe
test
cmc
sub
pushfw
int
mov
pop
jbe
cdq
cmc
enter
(bad)
jmp
adc
adc
and
sbb
push
jns
retf
fidiv
dec
add
ss
cmp
push
sbb
push
sub
cmp
sbb
dec
pop
dec
cld
fimul
add
push
add
test
je
jecxz
mov
mov
cmovno
xor
clc
mov
xchg
je
dec
adc
jns
add
mov
dec
inc
pop
sbb
or
hlt
pop
or
add
lds
pusha
clc
mov
out
or
jb
add
fild
fdivr
dec
fdiv
in
push
jmp
inc
inc
mov
jg
push
lock
mov
rcr
loop
jno
adc
inc
jmp
sbb
sbb
push
adc
lahf
adc
adc
ins
or
inc
push
(bad)
cmp
sbb
mov
aam
adc
pop
or
paddw
mov
popf
pop
(bad)
cmps
mov
ret
pushf
ret
push
sub
xor
inc
outs
or
mov
shr
aas
pop
push
push
push
push
push
mov
add
jns
and
loopne
add
mov
cmp
push
jbe
lahf
sub
and
test
mov
ss
aaa
and
pop
mov
mov
cmc
lea
jae
mov
push
lods
adc
inc
pop
ins
test
loop
xor
mov
xor
test
ret
out
and
test
je
sbb
mov
adc
push
sub
sti
(bad)
dec
dec
jmp
add
sub
jb
je
jmp
cmp
cmp
lods
push
cs
adc
jmp
sub
cmp
jmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
ror
push
(bad)
or
retf
xchg
fisub
or
pop
loope
or
inc
mov
jg
out
jno
jge
push
outs
imul
cmp
hlt
call
push
inc
sbb
add
and
mov
or
neg
sti
and
inc
sbb
cmps
push
sub
test
xor
scas
add
lock
ret
fmul
adc
mov
mov
xor
xor
inc
test
repnz
cmp
aas
push
push
jne
and
mov
add
pop
dec
mov
mov
out
lahf
cmp
call
jle
dec
mov
inc
sbb
inc
call
and
xor
mov
clc
mov
pop
iret
stos
(bad)
adc
cmp
dec
mov
ins
js
pop
sbb
in
cmp
jle
add
sbb
dec
mov
mov
sbb
mov
cmp
call
mov
mov
out
div
pop
sub
test
cmp
sbb
shr
push
dec
push
add
add
jo
nop
fidivr
ss
jne
pop
pop
pop
inc
pop
sbb
jbe
push
jmp
dec
repz
movs
std
add
mov
xchg
or
mov
sbb
mov
push
add
and
mov
add
add
imul
push
es
mov
(bad)
sar
xor
fst
mov
mov
out
xor
add
pushf
loop
rol
sbb
cli
mov
ja
add
mov
mov
leave
mov
push
cmps
dec
jno
cmp
js
cmp
cmc
les
mov
stos
push
ins
lock
push
push
add
or
popa
lahf
pop
adc
inc
sub
add
pop
ret
and
add
mov
cmp
shl
xor
lods
or
xor
mov
inc
cs
jnp
je
cmp
adc
rol
pop
add
pop
mov
call
and
dec
sub
xor
loopne
mov
add
je
mov
sbb
add
jmp
adc
dec
xlat
clc
ret
cmp
or
je
fimul
es
ins
inc
popa
sar
add
push
cmp
and
jne
cmp
or
mov
add
lock
ret
mov
ret
pop
pop
sub
ror
mov
push
pop
dec
jmp
neg
(bad)
pop
mov
adc
dec
push
inc
inc
pop
call
push
pop
push
stc
(bad)
mov
push
sbb
add
or
push
test
dec
jne
pop
dec
or
inc
inc
jg
cmp
das
imul
lods
push
and
dec
sbb
stc
add
xchg
xchg
fild
push
jle
pop
jle
push
add
aaa
ror
dec
pop
mov
pushf
bound
pop
mov
fist
jns
sub
ins
cs
xor
iret
mov
das
stc
mov
loopne
clc
pusha
inc
or
mov
cmp
and
push
push
mov
fadd
test
push
adc
sub
repz
cmp
aaa
mov
xchg
add
cld
jg
ins
scas
xchg
clc
fdivr
ret
pop
lea
test
cli
add
sub
aam
dec
cmp
mov
cmp
das
push
jl
dec
(bad)
mov
and
cmp
shl
movs
cmp
sbb
add
cmp
clc
adc
push
mov
mov
or
mov
je
int
movs
add
jle
add
fild
jmp
inc
add
(bad)
(bad)
cmp
sub
and
fcmovu
repz
pop
or
push
push
addr16
in
add
jae
ja
mov
inc
adc
call
xchg
std
add
repnz
loopne
pop
add
pop
pop
xor
add
and
pop
cld
pusha
xchg
mov
fnstcw
or
test
es
xchg
aas
pop
loope
loopne
add
aas
xchg
test
aaa
mov
mov
push
cld
add
cmp
ins
lds
dec
and
and
das
sub
mov
cmp
je
cmp
mov
cmps
les
cmp
mov
mov
loopne
cld
add
(bad)
fwait
std
mov
mov
lds
push
sbb
retf
jle
clc
mov
mov
sbb
sub
jmp
jle
lods
fsub
adc
or
outs
xchg
cmp
mov
dec
jmp
dec
sub
add
cmp
fs
dec
jne
mov
lock
enter
cmp
push
add
dec
jmp
cmp
push
mov
repnz
(bad)
out
into
pop
dec
jne
mov
pusha
push
fmul
and
out
push
jmp
lea
jmp
xchg
mov
sar
sahf
push
or
push
jmp
iret
pop
call
cmp
lods
or
mov
or
loopne
aad
retf
loope
jo
add
fisub
shr
aam
pop
aas
pop
jno
cmps
push
clc
inc
das
dec
mov
add
add
shr
je
push
(bad)
ss
das
shl
mov
adc
dec
inc
es
popa
out
ror
inc
or
mov
es
jl
cmp
jge
xchg
jbe
jb
adc
inc
jg
sbb
xor
xor
jmp
inc
jmp
push
stos
mov
and
xchg
stc
(bad)
(bad)
xor
mov
sub
mov
mov
add
fild
stc
add
lea
inc
dec
movs
push
cmp
xor
dec
xor
or
icebp
pop
cmp
lahf
cdq
mov
push
mov
cld
in
clc
sti
sub
xlat
adc
imul
add
gs
cmp
sub
mov
lea
lock
sub
pusha
add
mov
jl
add
mov
cmps
pop
dec
dec
js
mov
inc
jb
adc
das
loopne
pop
adc
inc
push
cmp
in
pop
fsub
pop
mov
bound
inc
push
int3
dec
out
dec
loopne
lods
and
sbb
cs
push
pusha
xchg
xlat
clc
pop
sub
and
(bad)
mov
mov
lods
jmp
out
(bad)
arpl
cli
pop
cmp
(bad)
pop
call
ret
push
push
test
mov
shl
xchg
push
push
push
das
loopne
xchg
mov
and
push
loope
and
pop
(bad)
lock
jp
add
sub
push
add
in
jno
in
stc
inc
xor
inc
jecxz
iret
mov
ss
fs
dec
sbb
add
ss
push
lock
dec
das
int3
(bad)
test
or
pop
push
mov
and
or
pop
add
and
add
mov
pop
fwait
pop
xor
add
jns
push
je
mov
adc
in
xor
ins
mov
mov
and
push
cvtps2pd
or
xchg
pop
adc
out
stc
jle
loopne
adc
jge
or
adc
pushf
push
ret
std
call
cmp
push
lods
add
add
dec
or
add
and
daa
cdq
xor
sub
stos
add
lods
sahf
std
mov
leave
xchg
fstp
mov
dec
sbb
adc
sbb
adc
cmp
mov
out
sahf
mov
xchg
push
add
lock
cmp
je
cmp
je
cmp
je
push
je
cmp
mov
cmp
je
mov
arpl
cwde
clc
jmp
adc
mov
ret
adc
jmp
xchg
aad
push
cs
mov
cmps
or
cs
adc
out
mov
jmp
cmp
mov
sub
fdiv
add
lock
xchg
mov
and
or
dec
pop
call
call
add
cmc
ret
jns
out
mov
jbe
dec
jo
pop
test
push
mov
imul
cmp
test
int3
jg
inc
and
xchg
out
ror
pop
emms
push
xor
push
dec
aam
mov
jmp
in
inc
add
jmp
test
int3
lods
mov
test
cmp
add
jmp
stos
ins
adc
push
cmp
xchg
and
or
(bad)
push
mov
add
cld
test
clc
push
push
add
sar
add
loope
mov
push
mov
fwait
fwait
pop
ret
cmp
xor
or
je
or
fwait
push
push
je
pusha
adc
xchg
pop
xor
or
lahf
sbb
ins
jmp
and
in
sub
adc
adc
lock
call
cs
je
clc
or
sbb
cmp
(bad)
mov
outs
jns
xor
xlat
in
cmp
inc
adc
and
test
jne
jo
pop
rcl
add
add
ins
push
sub
and
mov
in
inc
push
popa
test
test
loop
test
jmp
mov
dec
jne
sub
add
cmps
sbb
adc
push
mov
xor
add
es
ja
push
sti
add
pop
add
inc
jmp
das
push
icebp
mov
jo
add
je
es
mov
cmp
sar
inc
jmp
int3
lock
and
sub
jno
mov
mov
xlat
push
fild
ror
neg
and
add
(bad)
adc
pop
pop
ret
sbb
mov
sete
dec
(bad)
jne
popa
mov
cmc
xor
out
call
loopne
mov
mov
les
push
sbb
jg
cs
test
xor
and
jmp
lock
or
mov
or
jmp
add
cld
push
daa
loopne
(bad)
hlt
mov
sbb
cmp
mov
imul
dec
in
in
sbb
cs
mov
and
dec
sub
call
mov
cmp
jge
xchg
and
pop
sbb
adc
ins
imul
sub
add
inc
loopne
push
in
fcomp
mov
or
das
mov
retf
in
jge
pop
jnp
sub
mov
push
in
test
clc
sbb
sbb
push
sbb
lds
add
into
stos
dec
mov
dec
shr
pop
and
fld
xrelease
addr16
cmp
adc
fisttp
test
add
cmps
cmp
jle
mov
or
xchg
dec
jo
and
imul
ror
inc
test
ins
icebp
loop
push
dec
jne
enter
mov
cmp
test
push
xchg
add
outs
cmovl
jg
xor
dec
jne
push
les
cmps
cdq
mov
in
xchg
mov
addr16
pop
dec
mov
dec
and
mov
scas
adc
dec
push
push
push
and
lds
out
pop
pop
mov
jle
pop
jle
(bad)
in
sbb
cdq
enter
clc
pusha
cmp
je
add
fs
xor
xor
jnp
inc
cmp
lock
push
xchg
lock
hlt
test
les
xchg
inc
or
and
pop
adc
adc
jbe
pop
jbe
cmp
loopne
adc
aad
(bad)
or
je
or
ret
pcmpeqw
ret
jmp
sbb
(bad)
ja
mov
test
cmp
jne
ds
sbb
dec
mov
popa
xchg
push
pusha
lfence
fnstsw
push
and
or
pop
or
add
test
rcr
les
mov
inc
mov
cmp
cmp
or
add
jl
pop
add
mov
cmp
test
out
in
ja
mov
in
jne
mov
fisubr
pushf
lea
mov
iret
mov
data16
rol
cli
dec
jg
push
push
push
les
mov
adc
and
xchg
in
shl
xor
(bad)
cwde
lea
in
mov
cmp
test
sub
dec
push
mov
mov
(bad)
fsub
test
lahf
push
jae
imul
jg
jmp
ins
xor
cs
ins
pop
inc
gs
outs
outs
addr16
popa
je
dec
popa
ins
gs
sub
inc
daa
outs
loopne
data16
scas
loope
sbb
fnstsw
mov
call
out
out
add
add
rcl
movs
cmp
rol
and
inc
pop
or
outs
fst
push
adc
ins
or
sub
inc
ins
xchg
into
pusha
stc
int
aas
data16
add
push
popa
cmp
add
push
inc
into
jno
dec
out
and
(bad)
scas
imul
push
lods
repz
js
cmp
xor
cmp
repz
cmp
out
push
sar
dec
mov
push
add
cmp
stos
div
jne
adc
inc
add
aas
inc
dec
shr
rcr
popf
loopne
or
push
adc
jbe
imul
repz
or
xor
cmc
add
sbb
dec
mov
mov
ja
jb
inc
mov
popa
ins
gs
mov
call
lock
jo
or
inc
addr16
push
add
cmp
mov
adc
fucomip
cmps
icebp
and
pop
mov
inc
mov
ja
lds
jbe
ds
daa
mov
add
mov
or
fwait
movs
fdiv
icebp
mov
mov
dec
mov
or
jg
mov
mov
push
rol
scas
cmp
test
add
xor
(bad)
sub
mov
mov
(bad)
shl
pushf
xor
or
(bad)
int3
test
push
sub
add
stos
movs
and
or
cmp
or
iret
in
jmp
mov
cmp
rcr
cmps
xchg
fiadd
outs
jmp
repnz
mov
call
sub
data16
lock
push
test
mov
(bad)
or
dec
push
inc
sahf
mov
push
rcr
mov
push
and
push
mov
xor
cs
mov
dec
pop
sbb
jnp
aas
mov
pop
pop
ret
sbb
sub
sti
lock
xchg
ret
push
lods
and
dec
jmp
nop
push
test
js
push
pop
(bad)
or
mov
and
aam
mov
ror
xchg
pusha
cwde
or
(bad)
cmp
mov
dec
js
inc
(bad)
or
ret
popa
jnp
inc
sub
packsswb
sbb
sbb
push
mov
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
and
lea
cmp
ja
fcmovb
jmp
or
mov
xor
sbb
and
retf
push
jecxz
xor
test
and
and
cmp
dec
pusha
rol
idiv
dec
or
cmp
jb
or
dec
mov
add
and
sbb
add
pop
add
cmp
lea
ret
add
xlat
mov
hlt
cmp
push
cmp
mov
add
push
jnp
(bad)
(bad)
cmp
das
clc
das
fdiv
hlt
cli
mov
inc
test
je
or
jae
adc
je
cmp
adc
mov
add
cmp
jecxz
cmp
jne
add
shl
or
mov
pop
lea
out
bound
dec
dec
cld
mov
jl
fsubr
inc
inc
call
imul
dec
cmp
pop
scas
mov
mov
ret
push
pusha
xlat
and
sbb
adc
fsubp
cli
xor
sbb
or
jb
inc
pop
or
push
sbb
mov
adc
xchg
pop
(bad)
imul
adc
add
in
cdq
lea
mov
test
ficomp
xor
inc
push
and
xor
add
mov
dec
outs
add
adc
cmp
stc
jp
cmp
jge
nop
push
loop
and
cmp
pop
add
fadd
add
inc
ss
xor
lods
inc
inc
cwde
aaa
inc
push
jb
cwde
xor
and
enter
push
addr16
(bad)
pushf
popa
mov
jb
inc
rcr
jno
add
jecxz
cld
pop
cmc
cmp
jge
push
imul
add
fadd
mov
inc
js
icebp
or
out
repz
add
push
in
push
pushf
pop
pop
push
lock
pop
dec
xor
pop
lea
push
push
pop
adc
lock
pop
outs
loopne
push
and
xor
xchg
sub
jge
pop
lock
ret
inc
loop
out
xor
push
daa
mov
mov
push
(bad)
and
and
mov
bnd
adc
and
or
xchg
scas
clc
sub
test
or
add
adc
add
adc
add
adc
inc
adc
lahf
(bad)
push
xor
push
mov
adc
add
push
sahf
call
cmp
adc
pop
ret
adc
and
in
sub
cmp
fidivr
jmp
jge
enter
nop
jbe
and
sbb
mov
in
loopne
xor
jb
fcom
clc
jnp
jle
dec
ins
outs
mov
push
push
(bad)
mov
cmp
jl
sub
loop
dec
test
sti
mov
sub
or
mov
sub
or
leave
jne
push
out
pop
push
cmp
je
cmp
das
retf
mov
ret
mov
movs
inc
sub
ja
mov
arpl
mov
fwait
mov
sub
lods
or
mov
jge
sub
fwait
in
pop
push
or
adc
add
push
mov
inc
inc
or
mov
inc
jmp
ins
fild
enter
dec
push
or
dec
repnz
or
xchg
adc
jo
add
cs
and
dec
mov
and
or
jbe
cmc
fs
gs
xchg
gs
jb
jns
scas
ins
fidivr
inc
imul
inc
push
fistp
inc
outs
arpl
inc
gs
jne
je
dec
outs
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
(bad)
(bad)
call
push
(bad)
outs
ins
bound
outs
js
imul
ja
nop
aam
inc
sti
pop
cmp
andps
outs
dec
inc
xor
je
cmp
xor
dec
add
hlt
lock
sbb
in
cld
xor
hlt
xor
sbb
mov
in
cmp
cmp
(bad)
aam
cmp
cmp
int3
enter
cmp
sar
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
pushf
cmp
add
xor
(bad)
jb
jb
call
jb
(bad)
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
jns
jb
sbb
adc
cmp
cmp
push
dec
inc
inc
cmp
cmp
cmp
push
cmp
cmp
cmp
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
mov
cmp
cld
xor
pushf
hlt
lock
call
in
(bad)
mov
ror
mov
cmp
sar
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
ins
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
or
cmp
xor
sub
daa
daa
mov
(bad)
and
jb
and
adc
or
jb
jb
add
cld
xor
cmp
sbb
hlt
lock
cmp
cmp
call
cmp
cmp
aam
int3
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
xor
mov
movzx
shl
or
and
jmp
mov
sar
dec
sub
dec
movs
sti
into
xchg
(bad)
and
or
fwait
sbb
mov
cli
out
nop
jmp
movsx
or
pop
(bad)
and
xchg
mov
enter
imul
push
sub
pop
stos
push
pop
out
push
mov
xor
add
ss
or
add
fcomp
or
adc
sbb
and
and
out
push
pop
cmp
lock
cmp
mov
out
ret
or
scas
cmps
jno
rcl
add
stc
mov
push
or
pusha
rcr
out
clc
push
jbe
mov
fld
push
push
js
lahf
rcr
push
shl
ins
inc
push
mov
sub
inc
or
inc
rol
jae
pop
or
xchg
(bad)
pop
jecxz
jb
sar
pop
add
gs
add
dec
push
push
dec
inc
inc
dec
add
div
pop
push
and
dec
push
mov
push
dec
pop
and
ror
pop
sub
in
ja
cs
inc
dec
pop
dec
dec
dec
inc
push
das
repnz
inc
pop
daa
sub
xor
jmp
popa
js
mov
js
popf
inc
punpcklbw
movs
psllw
daa
daa
daa
daa
repz
cmc
mul
daa
daa
daa
idiv
stc
cli
daa
daa
daa
daa
sti
cld
std
(bad)
daa
daa
daa
daa
jmp
loope
daa
daa
daa
daa
jecxz
in
daa
daa
daa
daa
out
jmp
daa
jmp
in
out
daa
daa
daa
daa
out
rcl
shl
daa
daa
daa
rcl
aad
daa
daa
daa
daa
xlat
fcomp
fisub
daa
daa
daa
fcmovnu
fstp
daa
daa
daa
daa
ffreep
rol
daa
daa
daa
ret
(bad)
(bad)
daa
daa
daa
(bad)
enter
daa
daa
daa
retf
int3
int
daa
daa
daa
daa
iret
mov
mov
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmps
test
stos
enter
pop
jno
jl
gs
push
js
jl
mov
push
fist
pusha
leave
loop
(bad)
shl
push
jo
xor
xchg
fld
(bad)
aas
or
arpl
je
outs
outs
cmp
sub
jmp
aas
adc
test
std
leave
mov
jo
nop
xchg
mov
sub
mov
dec
jne
dec
inc
inc
add
ins
outs
jb
lock
jge
push
leave
lock
or
outs
nop
adc
mov
dec
outs
scas
dec
outs
add
or
retf
sub
into
mov
mov
push
xlat
add
cmp
add
push
mov
outs
scas
call
pop
mov
or
imul
cld
pop
gs
nop
mov
rcr
bound
popa
outs
or
fst
out
outs
outs
rcr
data16
outs
ja
mov
or
dec
jb
ds
cmp
nop
mov
sub
jo
jbe
sbb
scas
adc
ins
popa
popa
dec
(bad)
ins
jle
gs
sbb
ret
rcl
scas
in
sub
outs
andnps
mov
daa
or
nop
sbb
nop
cmp
push
movsx
imul
pop
ds
add
inc
popa
jae
(bad)
jge
jb
mov
or
jne
dec
shr
adc
mov
jae
inc
add
loopne
dec
jae
push
adc
enter
push
nop
jae
jae
loopne
inc
push
jb
ins
mov
nop
sub
mov
arpl
xor
and
nop
inc
je
inc
je
cmp
inc
fidiv
inc
sub
sbb
pushf
scas
ds
sub
jb
popa
outs
clc
mov
mov
mov
mov
popa
fsub
nop
adc
pop
jne
pop
jne
add
jb
test
out
mov
mov
dec
adc
mov
jbe
in
adc
loope
loopne
inc
push
stos
push
push
push
notrack
mov
data16
cmp
cs
xor
mov
dec
invd
fs
mov
mov
inc
ins
jae
movs
inc
cmp
jl
add
add
aas
inc
lock
push
popf
xchg
lds
adc
jb
popa
fs
xchg
mov
les
int3
add
jb
mov
test
sbb
stc
and
push
aam
iret
jnp
inc
aam
(bad)
pop
push
xor
inc
dec
xchg
jp
dec
dec
pushf
fist
jno
cmp
mov
push
mov
mov
cs
adc
mov
jne
push
mov
add
or
push
fadd
lods
and
outs
arpl
cmp
fdivr
cmp
shr
div
sahf
inc
mov
add
test
mov
mov
or
mov
mov
xchg
mov
in
push
sub
adc
push
sbb
xor
push
push
xlat
adc
or
mov
mov
mov
adc
repz
nop
or
add
mov
mov
mov
pop
mov
add
fcom
mov
sti
(bad)
fsubr
mov
aaa
std
mov
mov
cmp
push
cmp
ja
sub
mov
inc
inc
dec
push
pop
ror
lea
add
sbb
inc
(bad)
jg
mov
cmp
jbe
cmp
repz
je
movzx
xor
push
call
mov
add
add
(bad)
add
or
cmps
jne
add
inc
inc
ds
sti
mov
shl
add
or
jle
add
push
(bad)
jle
(bad)
out
and
sti
je
loopne
out
sub
pop
movs
jnp
xchg
mov
movs
cmp
inc
or
pop
add
fisttp
add
adc
inc
or
dec
or
jb
cmp
outs
add
mov
mov
das
fstp
push
push
adc
and
ins
out
jmp
dec
mov
mov
jl
cmp
jbe
adc
mov
mov
std
or
pop
dec
sub
clc
push
sub
or
mov
xor
jl
xor
add
sbb
sub
je
(bad)
jae
cmp
xchg
hlt
test
jl
inc
mov
sahf
mov
sub
jb
push
stc
pop
or
out
dec
std
cmps
(bad)
jae
inc
dec
jne
adc
xchg
int
dec
leave
jne
jns
div
cli
mov
sub
mov
shl
icebp
dec
mov
cmp
stos
ret
push
push
std
pop
sub
jmp
jbe
add
cwde
sub
jmp
idiv
inc
mov
dec
jne
push
mov
sub
xor
push
outs
cdq
jl
repnz
cmp
pop
pop
or
xor
mov
add
xor
cmp
popa
xor
pop
daa
ins
sbb
es
inc
cmps
mov
add
adc
or
outs
dec
imul
dec
add
xor
daa
and
push
and
fistp
ret
add
ret
mov
sub
add
ror
(bad)
fdivr
mov
dec
mov
xor
ins
pop
sub
rcr
cmc
loopne
jae
ret
ret
xchg
int
(bad)
ffree
ffree
ffree
pop
aad
(bad)
add
xor
frstor
push
daa
imul
call
jg
aaa
cmp
add
ins
xor
push
stc
push
pop
sub
and
aam
and
lock
adc
mov
mov
or
add
jbe
cld
mov
aaa
movs
clc
inc
push
idiv
aam
imul
lods
pop
addr16
cmps
mov
mov
mov
pushf
pop
rcl
mov
mov
push
div
xchg
cmp
hlt
jge
les
and
mov
lods
add
out
out
test
movs
or
add
shl
(bad)
jns
mov
xchg
repnz
jl
inc
lods
cmp
mov
into
push
add
adc
cmp
jmp
gs
push
or
push
sub
not
mov
lea
jo
fwait
mov
pushf
adc
ins
lock
jle
les
xchg
add
dec
ss
js
inc
rcr
ffreep
pop
outs
or
add
inc
mov
int3
test
dec
ret
mov
xor
imul
pop
add
(bad)
bound
nop
adc
loopne
xor
aaa
jmp
mov
inc
pop
ror
and
xchg
cmp
aaa
clc
or
mov
les
inc
ja
jo
loop
(bad)
(bad)
inc
ja
add
add
or
push
push
(bad)
leave
mov
add
dec
mov
pop
mov
push
mov
(bad)
test
es
sub
popa
jae
fist
rol
outs
outs
test
push
icebp
add
repz
inc
push
push
dec
cwde
pop
(bad)
out
add
daa
mov
and
xchg
mov
out
clc
or
mov
mov
out
popa
mov
shr
push
cld
ret
add
and
aaa
mov
ss
jg
add
ds
lods
cmp
je
test
add
xor
jg
or
xlat
addr16
fisttp
add
notrack
lds
mov
push
pop
xlat
popf
jne
dec
stos
or
bnd
pop
mov
pushf
sar
js
push
outs
data16
sub
jns
aas
pop
cmp
mov
push
adc
pop
push
push
xchg
mov
ror
inc
(bad)
mov
out
call
sahf
jbe
mov
push
push
hlt
clc
cld
push
adc
out
lock
lahf
cld
imul
test
mov
dec
push
fdiv
adc
xchg
imul
adc
dec
or
xchg
inc
lea
lock
shl
loope
adc
(bad)
movs
push
fcom
sti
mov
mov
mov
ret
das
lea
daa
sbb
sub
pop
push
cmp
test
inc
jmp
call
retf
in
xchg
inc
add
dec
cmp
mov
retf
dec
lock
sbb
inc
sub
pop
cli
mov
(bad)
xlat
push
dec
sbb
mov
push
repnz
adc
lahf
stc
sahf
in
fst
cmp
jmp
xchg
(bad)
xlat
mov
xor
xor
repz
mov
mov
cwde
fst
dec
rol
fild
jno
xchg
pop
cmp
add
out
cli
jmp
sub
ror
mov
and
fld
cmps
mov
jmp
shl
scas
xchg
inc
inc
rol
inc
(bad)
sti
mov
dec
je
mov
mov
pop
sub
jbe
sbb
pop
and
(bad)
mov
(bad)
lods
mov
mov
push
add
sub
jne
jo
cdq
mov
xchg
or
lea
mov
imul
ror
mov
inc
mov
scas
call
rcr
ja
cmps
add
mov
sti
pop
jbe
mov
(bad)
sar
jne
in
out
scas
add
retf
mov
mov
add
cmp
pop
int
adc
and
and
and
push
ret
daa
call
neg
add
sbb
xchg
adc
out
jp
adc
sub
xchg
push
rcr
mov
sub
bnd
adc
hlt
mov
mov
call
or
and
repz
ss
sub
ja
sub
iret
lock
inc
jmp
mov
cmp
sub
fdivr
jg
(bad)
jne
cmp
jne
cs
and
lods
jmp
addr16
push
inc
repnz
inc
sbb
xchg
mov
fcom
test
pop
fisubr
jae
fild
(bad)
sub
sub
inc
movs
xchg
pop
add
fstp
mov
rep
sbb
cmp
dec
push
push
je
pop
pop
mov
adc
xor
cmp
ja
imul
or
movzx
add
and
in
add
mov
adc
push
lds
cld
or
jl
je
ret
je
mov
ror
ret
and
mov
sbb
xor
pop
pop
jne
lea
mov
call
lock
aad
mov
lahf
push
xchg
inc
daa
xchg
pop
loopne
xchg
out
or
bound
pop
hlt
and
mov
mov
fsubr
rcl
lea
clc
fwait
xor
sub
je
sbb
xchg
mov
ds
rcr
xchg
or
jmp
jl
mov
push
pop
outs
adc
loope
in
hlt
hlt
out
inc
or
jmp
jbe
cmp
jne
aas
pop
ret
sbb
add
mov
aad
into
in
ja
jne
jmp
xor
inc
inc
mov
sbb
enter
pushf
inc
(bad)
add
repnz
or
jne
aas
and
(bad)
pop
cld
call
pop
js
mov
add
mov
fdiv
pushf
cdq
ror
mov
mov
jecxz
dec
mov
fidivr
int
cwde
pop
ds
leave
jle
loopne
sub
add
mov
outs
mov
inc
je
mov
mov
inc
je
mov
inc
je
mov
dec
je
dec
lock
mul
mov
ret
mov
inc
ss
xchg
adc
jecxz
adc
mov
pop
ficomp
pop
sar
xchg
mov
inc
iret
shl
sub
nop
mov
xchg
ret
xor
sahf
faddp
and
in
xor
pop
ds
add
daa
xchg
mov
stos
push
and
test
sahf
jns
ret
ret
mov
xchg
xchg
nop
cdq
lock
push
inc
dec
mov
mov
sbb
xchg
or
push
dec
sahf
fucomip
xchg
mov
call
adc
mov
xchg
cmp
or
es
(bad)
clc
dec
cld
lea
popa
fild
out
or
fbstp
inc
mov
ret
jmp
add
push
popf
cdq
sbb
fiadd
adc
lea
loopne
push
push
lea
push
mov
jb
clc
push
xor
stos
or
xor
pop
jge
mov
neg
jmp
or
enter
adc
jecxz
mov
call
push
lods
mov
inc
dec
mov
jmp
cmp
jne
inc
cwde
adc
pop
pop
aas
aam
ja
push
or
mov
mov
mov
cli
mov
test
mov
sbb
adc
sbb
inc
add
(bad)
jae
rcr
add
scas
mov
adc
jb
shl
jl
mov
movzx
sub
adc
mov
jp
push
cmp
(bad)
lea
mov
dec
outs
sub
adc
mov
outs
add
ja
movsx
mov
add
lea
jl
fstp
sbb
call
dec
stc
ficom
cld
pushf
jmp
stc
push
xor
call
lods
or
xor
mov
(bad)
in
sub
dec
aam
cld
stos
or
adc
jg
cmp
jl
pop
sbb
stos
pop
je
mov
stos
neg
sbb
(bad)
std
jp
stos
jmp
inc
inc
mov
loop
movlps
sti
inc
stos
pop
pop
inc
clc
dec
test
xchg
jne
mov
mov
xchg
scas
adc
dec
sbb
sub
(bad)
hlt
cmp
add
leave
mov
mov
mov
fwait
sub
mov
ins
cmp
cli
adc
mov
mov
sub
push
fcomip
pop
scas
je
mov
dec
mov
repz
inc
test
dec
je
dec
jne
sbb
test
stos
xor
ficomp
shr
sub
sti
add
fidivr
dec
je
inc
jne
pop
mov
ret
xchg
je
lock
repz
or
repnz
sub
mov
adc
or
lea
mov
or
inc
push
push
push
cmp
(bad)
fmul
sbb
or
push
mov
test
or
add
add
retf
sub
sub
and
jbe
fcomi
adc
and
sub
inc
sub
sub
sub
sbb
and
sub
pop
sub
or
scas
idiv
sub
sub
sub
cmps
or
movs
mov
mov
jge
retf
jp
ss
adc
mov
pusha
mov
ret
movs
cmp
test
ficom
mov
or
add
inc
push
xchg
fld
add
je
imul
and
sbb
push
out
inc
push
adc
pop
frndint
sar
mov
jmp
fstsw
fwait
mov
test
je
fidiv
xor
pop
fbstp
lea
mov
inc
sub
mov
shr
and
add
push
cmp
xor
stos
jmp
clc
add
jns
call
idiv
fistp
daa
cmp
jb
mov
js
dec
mov
cmp
jmp
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
or
shr
mov
add
xchg
jge
cmc
test
xor
adc
cs
sar
je
into
neg
test
(bad)
or
or
outs
xchg
sub
adc
jl
mov
cmps
aaa
sub
inc
or
sbb
inc
loopne
push
bound
dec
in
in
ins
or
sub
xchg
cmp
mov
mov
add
mov
push
sub
pop
loopne
push
pushf
and
jne
dec
sub
cmp
adc
jl
and
inc
add
dec
adc
sub
mov
cmp
add
jbe
pop
jmp
mov
cmp
or
iret
inc
pop
adc
comiss
add
jns
fwait
lds
push
fldz
cmps
movs
fiadd
inc
mov
cmp
lods
or
mov
push
lods
cmp
or
ja
test
and
fistp
sub
add
jg
ret
jne
mov
sahf
pop
cmp
adc
push
mov
(bad)
loopne
adc
aas
jmp
fstp
dec
test
or
test
pop
ins
and
push
int
adc
add
and
outs
pop
js
add
jae
fimul
inc
jmp
push
sbb
neg
add
cld
daa
es
push
inc
imul
push
cmp
not
push
jge
ror
xchg
push
sub
fadd
test
adc
push
jb
dec
fistp
mov
mov
jmp
movs
fist
nop
scas
dec
dec
push
mov
cmp
addr16
fld
fstp
fwait
pop
push
fnstenv
mov
sbb
inc
mov
fld
inc
jl
leave
push
test
xor
adc
mov
xor
push
adc
adc
add
ss
pop
pop
mov
or
xor
fist
or
cmp
inc
stc
inc
and
sub
sahf
jae
out
and
in
data16
add
enter
ss
call
(bad)
or
xchg
push
lods
mov
mov
fstp
fwait
push
(bad)
pop
dec
je
push
add
outs
pop
aas
sub
pop
jp
adc
adc
sbb
dec
(bad)
mov
push
out
ret
cmp
in
iret
and
push
push
dec
retf
call
xchg
movs
mov
xor
and
into
and
fldcw
jp
mov
div
adc
mov
nop
add
test
pusha
ret
call
push
fsub
sbb
(bad)
cmps
cmp
and
cmp
fwait
inc
add
ja
and
cmps
std
push
shl
or
jb
sti
ins
cli
(bad)
cmp
(bad)
sar
pop
inc
(bad)
ja
adc
push
rol
pop
dec
inc
jne
sub
dec
mov
aas
ins
loopne
call
ins
call
add
sub
ds
ds
add
add
lods
pusha
ret
or
lds
std
pop
pop
sbb
inc
xchg
call
jg
call
jg
jl
push
push
clc
hlt
or
xchg
adc
ds
ja
mov
push
cmp
std
cmp
add
inc
add
and
jge
shl
lods
mov
xor
add
or
dec
lock
mov
cmp
add
push
sub
ins
jae
repnz
pop
stos
shl
sub
or
cmp
aad
pop
mov
mov
push
in
sahf
mov
aas
cli
js
or
push
pusha
loop
adc
nop
cmp
jb
sbb
inc
sub
pop
sbb
ds
or
hlt
mov
cmps
push
adc
cdq
xlat
ss
add
(bad)
cmp
sub
or
sbb
jge
mov
arpl
mov
call
inc
mov
rcr
ror
cdq
cld
sbb
push
fidivr
ja
mov
and
jno
rcr
or
and
xor
pop
or
adc
jp
sti
test
aas
sahf
adc
icebp
dec
push
jb
pusha
in
clc
mov
sbb
ins
push
mov
test
outs
mov
xor
sbb
pop
dec
and
mov
dec
clc
or
dec
idiv
dec
sti
je
mov
dec
jnp
inc
hlt
out
push
cmp
jne
(bad)
jo
add
push
lea
or
jnp
mov
hlt
adc
inc
in
add
and
xor
xor
repnz
out
jmp
jecxz
cmps
call
mov
ret
in
xchg
cdq
mov
test
jo
inc
sbb
inc
push
aas
pusha
pop
loopne
cmp
or
xor
add
jne
jmp
nop
cwde
call
sub
push
pop
aam
jnp
jmp
pop
sbb
cs
or
mov
cmp
xor
lods
mov
cmp
push
sub
adc
sbb
jne
push
add
xor
inc
dec
adc
in
movs
ja
sbb
push
pushf
les
ja
xor
jecxz
xchg
xor
imul
add
mov
pop
addr16
iret
in
adc
ret
out
xchg
loope
push
mov
add
jmp
xor
adc
ret
outs
js
push
inc
cmp
jne
push
or
push
ret
jge
lods
in
xchg
out
jns
add
add
(bad)
mov
cwde
fadd
dec
inc
jbe
fimul
mov
pop
mov
jle
fsubr
pop
inc
int
adc
jecxz
inc
and
movs
les
mov
mov
sub
lods
mov
or
cmp
repz
sahf
nop
jns
mov
lahf
dec
cmps
add
mov
iret
cmc
dec
cmp
jne
mov
xor
xchg
fiadd
cmp
xchg
ds
pop
jbe
std
jmp
or
or
sahf
push
or
or
add
jnp
xchg
iret
add
add
or
jnp
or
push
lock
fnstcw
sub
repz
fs
ret
hlt
sti
pop
ret
test
pop
or
push
mov
push
and
xchg
test
icebp
mov
cdq
test
std
inc
mov
mov
dec
push
lea
jmp
movs
fcomp
push
enter
xchg
hlt
loopne
mov
sbb
xor
pop
mov
rcr
lock
xchg
xor
leave
mov
or
dec
add
jmp
out
aad
call
mov
adc
ss
xchg
mov
cld
sahf
xchg
and
adc
inc
das
xchg
loope
xlat
or
cmps
pop
mov
push
jbe
add
add
dec
jg
je
mov
(bad)
add
push
jmp
sub
je
pop
je
pop
jmp
cmp
dec
mov
jmp
lock
sub
push
dec
in
mov
rol
jmp
sbb
cmps
adc
loope
add
or
push
jmp
outs
dec
push
xchg
jmp
fwait
add
or
sbb
inc
or
xchg
mov
inc
adc
push
dec
fistp
pop
inc
call
adc
push
add
and
and
add
in
mov
sub
aad
jne
sbb
xchg
ficom
pop
cmp
int
and
in
stos
daa
jns
add
ja
jns
arpl
jae
retf
cwde
inc
jmp
and
add
outs
cmc
xchg
push
inc
sub
(bad)
les
add
lods
gs
add
cmp
ret
push
(bad)
mov
or
jmp
adc
call
loopne
sbb
add
cmp
push
imul
xchg
je
inc
xchg
pop
aad
adc
popa
sbb
push
test
fucomi
add
test
mov
mov
sub
mov
pop
push
jmp
adc
repz
sbb
clc
inc
mov
mov
std
add
inc
inc
dec
das
push
dec
cmp
dec
xchg
or
adc
mov
out
clc
in
sbb
ins
mov
xor
jmp
push
mov
outs
lea
sbb
lea
(bad)
dec
adc
test
mov
sbb
enter
les
pop
(bad)
clc
sbb
jg
push
jmp
je
mov
add
sub
je
dec
(bad)
int
lods
sbb
cmp
xor
jmp
mov
add
pop
push
add
lock
pop
(bad)
jmp
sbb
mov
xor
sub
jae
dec
ins
movs
pop
jnp
int
sbb
pop
fcomp
ret
out
test
xor
and
push
xchg
shl
add
xchg
adc
jmp
out
jp
mov
nop
inc
loop
ror
pop
and
cdq
test
xchg
sbb
push
mov
jno
and
push
je
cs
dec
loope
addr16
mov
push
ret
sbb
pop
jl
dec
stos
cli
pop
in
(bad)
cmp
jne
inc
call
pop
(bad)
arpl
ret
sub
and
sub
je
dec
je
sub
(bad)
ja
xchg
je
jmp
mov
jmp
push
push
push
mov
jbe
push
inc
mov
jle
fadd
or
pop
dec
(bad)
pop
mov
add
or
lods
and
ror
add
push
pop
dec
pop
pop
xchg
inc
adc
cmp
call
pop
push
out
xlat
mov
or
jmp
jb
pop
scas
xchg
sbb
test
jmp
cmp
rcl
add
test
adc
cmp
jg
mov
xor
aaa
cdq
xor
sub
add
inc
in
sahf
add
add
cmp
jle
cmp
adc
pop
and
out
cld
gs
mov
mov
fmul
fadd
pop
lea
loopne
push
jmp
cmps
lea
cmp
sbb
loopne
dec
add
pop
and
adc
xchg
popf
xchg
mov
inc
idiv
or
push
mov
ds
and
xor
xchg
daa
mov
sbb
sub
push
cmp
setb
jo
jnp
sbb
adc
dec
pop
push
cmp
xchg
cmp
xchg
lods
nop
pop
stos
test
jo
push
stc
sbb
or
sbb
pop
repnz
jmp
into
add
lock
fwait
push
bound
mov
ret
push
mov
and
in
call
fld
push
sbb
ss
out
pushf
sbb
hlt
sbb
js
cdq
nop
jmp
mov
pop
push
movs
or
and
jmp
cmp
ja
fisttp
lds
(bad)
fsubr
(bad)
push
fstp
into
mov
shl
aaa
out
in
fild
jbe
(bad)
cmp
jle
and
fs
jne
mov
pop
loopne
test
or
sub
push
pusha
ds
dec
paddb
or
cmp
rcl
je
fwait
adc
test
add
adc
int
hlt
push
xchg
loop
or
jl
jne
sar
add
(bad)
fild
sahf
js
mov
sub
pop
dec
rcl
pushf
fsubr
push
add
xor
inc
repnz
out
dec
and
xchg
sti
push
cmps
add
mov
jno
mov
in
or
out
mov
repnz
push
push
stos
hlt
fild
dec
fsubr
int
ds
and
and
inc
and
(bad)
jmp
push
pushf
pop
mov
xor
adc
sub
inc
or
pop
ins
push
adc
and
add
xor
cmp
or
es
retf
xchg
iret
je
xor
push
enter
pop
inc
fs
or
(bad)
add
sbb
test
test
xor
mov
mov
or
ds
sbb
cmp
sbb
(bad)
adc
loopne
sub
and
or
pop
sub
mov
scas
(bad)
fcomp
mov
fsub
fimul
pushf
popa
pop
push
scas
dec
cmp
mov
into
je
or
sub
popa
inc
or
cmp
test
fs
call
cmp
pusha
rcr
in
mov
popa
clc
mov
dec
ficomp
cmp
ret
jne
dec
clc
lds
cwde
movs
jmp
fst
fcomp
fist
fsubr
or
scas
mov
retf
fs
adc
jle
(bad)
fstp
push
pop
dec
and
ficom
push
xor
jg
loopne
jmp
mov
push
add
sub
jb
or
sub
retf
xchg
add
enter
fwait
sub
test
jmp
cmp
dec
lods
pop
sub
les
scas
int3
sub
das
sbb
push
push
or
pop
xchg
loopne
movs
xchg
stc
(bad)
call
jp
lods
xor
movs
cdq
cmp
(bad)
mov
pop
jle
add
push
sbb
xchg
pop
leave
and
imul
mov
leave
js
test
inc
fisubr
test
fmul
push
push
(bad)
movs
icebp
adc
mov
lea
dec
or
in
retf
mov
mov
les
sbb
lock
add
neg
scas
ror
and
pop
add
scas
scas
xchg
push
jge
dec
shr
call
fs
xchg
in
dec
call
or
sub
call
lahf
repnz
or
cmp
in
test
lock
jl
je
xchg
cmp
add
sbb
into
or
pop
fwait
js
push
push
movs
inc
mov
xchg
sub
mov
push
push
test
inc
mov
push
mov
jle
mov
in
pop
lods
sub
sub
es
cwde
or
(bad)
test
fs
add
lods
aaa
adc
add
repz
pop
push
mov
fdiv
or
dec
jne
push
push
push
push
jb
adc
sub
fdivr
xor
mov
rol
nop
scas
pop
in
push
nop
gs
pop
scas
or
adc
clc
test
add
fwait
and
or
repz
add
pop
or
mov
jmp
mov
test
je
sub
je
scas
ret
add
cmp
cmp
sahf
and
push
loope
(bad)
mov
pop
push
in
lock
fist
ja
lock
add
jg
popf
out
loopne
mov
mov
mov
push
mov
mov
add
jmp
and
in
push
mov
jmp
pop
je
jne
xor
jmp
and
jle
mov
xor
and
xor
and
lahf
push
addr16
push
pusha
pop
mov
add
sub
jmp
mov
sub
pop
(bad)
test
cmp
mov
(bad)
or
cmps
test
cld
and
sbb
jne
out
out
iret
pop
mov
xchg
test
dec
cmp
and
pusha
aaa
jg
test
pushf
fsubr
or
popf
gs
int3
and
dec
mov
xor
xor
rol
and
ins
pop
xchg
mov
or
push
sub
test
and
mov
scas
and
test
jmp
or
adc
push
sbb
es
cld
push
inc
add
push
in
sub
icebp
push
ds
out
sbb
adc
dec
pop
sbb
js
mov
iret
movs
popf
sahf
mov
xor
mov
xchg
out
mov
mov
xor
sahf
stc
push
lea
dec
xor
cmp
js
pcmpgtd
adc
cs
or
cmp
test
add
sub
xchg
adc
pop
mov
adc
nop
test
push
outs
inc
push
or
push
or
or
dec
mov
xchg
fwait
lods
dec
loopne
clc
clc
inc
popa
gs
pusha
xor
inc
xor
add
pop
pusha
push
push
cmp
sbb
push
push
gs
out
pop
xchg
test
out
gs
scas
xor
jle
lea
fld
test
test
mov
push
imul
dec
pop
pusha
push
xchg
mov
cmc
shr
dec
or
adc
les
pop
stos
mov
pop
add
push
inc
adc
test
pop
pusha
mov
and
fsubr
xchg
arpl
sbb
cmp
cli
std
mov
and
push
add
push
or
aas
xor
mov
xchg
add
cmp
jg
cmp
pop
sbb
sbb
inc
je
push
sub
(bad)
xor
ss
pop
push
cmp
or
pop
aas
sbb
jmp
push
loopne
stos
pop
push
sar
retf
adc
jmp
ins
inc
adc
push
cwde
popa
lock
test
inc
lea
outs
dec
dec
(bad)
or
pop
adc
mov
ret
pop
pop
push
cmp
jb
or
push
(bad)
xchg
pusha
daa
or
ror
out
cmp
xor
mov
or
fucomi
mov
push
in
push
loopne
sbb
nop
enter
lods
je
int
push
jns
sub
inc
add
test
push
jle
cmp
jns
and
or
mov
add
cmp
inc
mov
adc
inc
mov
xchg
retf
leave
vmulsd
cmp
in
stc
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
mov
shl
pop
or
push
shl
push
in
sub
push
daa
movs
je
mov
nop
jb
into
add
or
mov
retf
mov
cs
lods
pop
cld
cmp
sub
xor
mov
sbb
cld
sub
bound
or
arpl
mov
test
xchg
adc
cdq
das
sbb
clc
inc
push
test
adc
in
in
xor
add
mov
jae
xchg
dec
jnp
or
enter
loopne
fbstp
inc
loopne
int
xchg
cld
jo
outs
in
jmp
sub
repnz
xchg
jge
mov
mov
movs
test
add
dec
nop
or
sbb
mov
mov
in
dec
mov
adc
cs
es
bound
gs
mov
pop
lods
jmp
std
rol
or
adc
jae
jae
cmp
call
dec
adc
mov
pop
(bad)
hlt
add
mov
shl
sahf
push
outs
push
mov
cmp
or
leave
sahf
mov
adc
lea
pop
cmc
xlat
scas
fs
pop
daa
inc
dec
ins
mov
and
cmp
call
push
jbe
rep
test
push
gs
fidivr
clc
mov
lock
mov
adc
mov
fidivr
mov
xchg
daa
sbb
add
mov
lock
js
xchg
jbe
inc
cwde
cwde
adc
loopne
into
inc
aaa
fs
out
loopne
xor
push
int3
sbb
pop
sbb
sub
daa
adc
stos
push
ins
call
or
sbb
enter
jno
les
adc
enter
clc
or
add
mov
lock
bnd
sti
popf
sbb
adc
adc
add
fwait
add
int3
mov
fnstsw
add
jne
cmp
sbb
or
sbb
(bad)
frstor
mov
lock
cmp
adc
and
mov
cdq
cmp
or
add
mov
adc
jp
repz
and
pop
dec
xor
or
loop
xchg
pop
pop
or
(bad)
fld
mov
js
pop
push
mov
mov
cmp
adc
enter
sub
dec
or
test
jmp
dec
cwde
adc
aas
or
jb
mov
sub
and
jns
or
clc
dec
or
inc
data16
add
add
xchg
add
daa
lahf
or
and
mov
jp
inc
stos
xor
xor
cmp
add
pop
daa
xor
ja
fidivr
or
xchg
xlat
stos
adc
imul
leave
(bad)
out
inc
pop
jg
mov
scas
das
adc
jl
mov
adc
sti
adc
push
lods
and
inc
inc
inc
jge
shl
nop
call
sub
mov
inc
(bad)
or
mov
lock
pop
outs
repz
aad
and
push
addr16
push
push
add
nop
call
shl
xchg
les
mov
sar
imul
inc
(bad)
es
dec
cmp
or
(bad)
mov
jmp
dec
add
and
sbb
or
pop
iret
jbe
sbb
int
jge
pop
cmovge
in
mov
xor
adc
xlat
sbb
push
daa
xchg
pop
and
xor
push
mov
rol
mov
cwde
mov
and
adc
inc
ret
push
(bad)
ins
mov
push
jp
call
clc
mov
sub
inc
mov
mov
mov
push
je
cmp
out
fidivr
jge
xor
or
and
test
sahf
xchg
adc
dec
mov
out
add
lock
ror
je
mov
pop
fisubr
sub
dec
fimul
aaa
fiadd
add
mov
and
push
(bad)
sub
cmp
jbe
(bad)
xchg
ds
inc
daa
shl
pop
inc
mov
push
or
inc
daa
ret
ror
repnz
movs
jae
clc
pusha
and
mov
push
in
add
xor
inc
inc
nop
cwde
push
jns
(bad)
jne
pop
repnz
cmps
hlt
add
stc
add
add
mov
cmps
hlt
xor
cmp
fcomp
or
push
aaa
jge
or
sub
push
mov
fwait
(bad)
inc
jo
neg
aaa
push
mov
sub
jb
inc
mov
loope
jb
mov
stos
(bad)
sbb
retf
jne
mov
data16
inc
(bad)
jp
ss
pop
aas
mov
pop
ja
pop
or
setb
xchg
sahf
xor
add
rcl
dec
adc
jne
xor
mov
test
adc
enter
xchg
adc
mov
or
xchg
mov
push
inc
xor
mov
or
xchg
scas
jo
call
dec
mov
out
jle
mov
push
cmp
pop
mov
mov
ret
sbb
xor
sbb
or
or
popa
mov
jg
xchg
mov
inc
inc
cmp
test
loope
cmps
sbb
push
inc
fstp
cmp
push
scas
movs
call
das
mov
xchg
ror
mov
jne
jmp
push
sbb
(bad)
and
sub
rol
push
add
ret
popa
aam
out
outs
rcr
jg
dec
jne
push
scas
ret
cdq
inc
pop
cmc
lods
mov
in
cmc
inc
jge
mov
(bad)
xor
mov
sbb
cmp
adc
pop
lea
mov
scas
loopne
mov
fimul
call
std
sbb
test
xchg
mov
xchg
xchg
push
sbb
mov
dec
out
ins
das
mov
shl
movs
dec
jb
mov
mov
pop
cld
jl
or
and
fcomp
mov
xor
sar
dec
push
sbb
mov
mov
inc
and
int3
mov
xchg
xor
cwde
or
dec
enter
mov
push
adc
sub
and
sub
les
repnz
dec
xor
aas
ret
adc
repnz
adc
enter
lock
fs
push
hlt
mov
add
lock
mov
or
add
aas
xchg
rol
sar
icebp
pop
push
jmp
add
das
fs
xlat
scas
ins
add
add
and
das
add
mov
jo
push
adc
inc
jg
and
ror
cmp
fbld
lahf
int3
pop
push
cmp
ss
test
pop
iret
in
in
cli
sbb
and
dec
test
aaa
mov
nop
loope
lock
in
mov
jo
es
(bad)
hlt
shr
in
push
mov
lock
mov
int3
adc
xor
mov
add
mov
add
xchg
cmp
xor
or
or
jmp
dec
mov
sbb
repz
add
adc
add
or
out
adc
mov
sar
and
mov
ret
aaa
pop
or
add
ss
ja
int3
imul
gs
jo
aas
and
xchg
xchg
lock
inc
sub
pop
or
pop
dec
ret
xchg
and
test
mov
in
pop
shl
mov
and
push
or
mov
inc
sub
mov
cmp
jne
mov
and
sbb
jle
adc
mov
mov
jmp
cmps
mov
inc
les
jl
shl
mov
in
xchg
add
jmp
jmp
sbb
mov
test
inc
mov
mov
fs
inc
mov
cmp
jle
pop
mov
daa
mov
mov
or
xchg
inc
sub
pop
dec
cli
or
or
pop
mov
adc
pop
je
inc
sbb
movs
fsubr
aas
and
retf
xor
and
mov
imul
scas
fdiv
fstp
adc
sbb
xchg
sub
push
jbe
sub
sbb
pusha
xchg
(bad)
pushf
mov
test
cs
or
mov
fst
adc
cmp
sti
sub
dec
mov
dec
jb
push
sbb
lock
icebp
or
adc
clc
mov
adc
lds
cmp
je
push
mov
mov
xor
mov
hlt
out
lock
seta
mov
lea
mov
jmp
push
inc
out
adc
push
out
aad
jns
or
add
add
leave
fisttp
or
mov
loop
cld
rcl
cmpps
sbb
data16
add
test
xchg
inc
dec
cmp
test
loop
inc
shr
mov
or
loopne
retf
pop
xchg
int3
fbld
loopne
xor
inc
or
add
cmp
sti
mov
(bad)
cmp
clc
jmp
inc
aad
ja
and
adc
mov
dec
inc
int3
mov
mov
ja
dec
or
sub
adc
dec
out
xor
jl
push
mov
stc
ror
stos
jmp
and
hlt
(bad)
call
pop
movs
adc
xor
add
push
ror
mov
test
rol
cmp
std
xchg
pop
jge
and
fild
mov
jo
stos
retf
test
iret
pop
mov
add
jne
movs
pop
and
movs
mov
cld
sbb
lea
inc
prefetchw
or
push
fs
mov
sbb
fnstcw
pop
cld
int3
sub
out
mov
data16
jmp
jecxz
and
cmp
push
retf
movs
out
je
je
sbb
sub
cld
add
push
lar
imul
ds
mov
fadd
cmp
cmp
lods
les
mov
int3
mov
lods
sbb
mov
xchg
adc
scas
push
repz
fmul
jl
jns
jnp
je
cmp
fs
or
out
out
pop
lahf
push
push
dec
jo
dec
push
jnp
repz
loopne
sahf
fs
into
jnp
out
or
and
out
and
adc
add
repnz
mov
pop
adc
les
iret
enter
push
push
or
sbb
pushf
cmp
add
paddb
in
fld
(bad)
clc
push
dec
inc
hlt
add
dec
sahf
xchg
fdiv
cwde
in
push
mov
leave
jae
sbb
pop
or
sahf
pop
ja
mov
fcom
or
cmp
aam
rcl
pop
fmulp
mov
enter
mov
dec
shl
mov
mov
sbb
mov
xchg
ja
int3
lods
mov
test
leave
cmp
movs
shl
dec
ficomp
xchg
jae
iret
leave
test
clc
mov
ja
jbe
fs
push
shl
js
iret
je
xchg
nop
jb
dec
add
(bad)
in
mov
test
mov
ret
push
pop
adc
inc
sbb
movs
sti
icebp
mov
mov
add
or
repnz
sub
imul
fs
out
and
fmul
cmps
and
ins
bound
sub
xchg
or
fsub
or
arpl
pushf
mov
and
in
pushf
cwde
nop
mov
nop
inc
adc
shl
mov
xchg
sub
scas
cmp
sub
retf
inc
sub
rcr
int3
adc
popa
mov
mov
scas
clc
iret
or
das
push
test
fs
cld
jmp
test
js
daa
dec
mov
jl
call
cmp
mov
fwait
mov
data16
or
ficomp
ret
cdq
movs
xchg
pop
dec
not
or
ds
dec
cwde
mov
pop
nop
ror
or
and
clc
mov
nop
les
sbb
adc
dec
leave
popa
adc
rol
in
repnz
es
rcl
dec
cmp
or
mov
repnz
push
cwde
fs
jb
cmp
test
dec
xor
cld
xchg
jl
clc
lea
outs
inc
cmp
cmc
sbb
xchg
retf
adc
mov
std
add
clc
adc
xchg
or
or
xchg
push
adc
cmp
pop
adc
test
test
rcl
repnz
sbb
nop
and
add
add
adc
sbb
push
aam
pop
pop
adc
lods
push
or
mov
dec
xor
mov
nop
jl
adc
aam
in
movs
imul
mov
shl
mov
cmp
adc
mov
add
lahf
push
push
sbb
lea
mov
lahf
and
mov
cdq
fs
dec
movs
shr
pop
fsubr
mov
mov
xchg
dec
es
cdq
mov
xchg
dec
xor
les
mov
sbb
fs
mov
jo
dec
push
mov
fdivr
ror
mov
mov
and
push
in
js
mov
ror
dec
push
cwde
lock
test
jo
dec
hlt
sbb
sbb
pop
cmc
adc
adc
mov
daa
dec
add
outs
je
fs
das
jg
push
jne
das
dec
jne
inc
imul
imul
jb
test
xor
jb
ins
push
je
dec
enter
push
cmp
sbb
repnz
ror
aas
inc
jae
mov
inc
jns
(bad)
pop
outs
es
outs
xlat
fst
test
xlat
cwde
cmp
ret
add
and
(bad)
jge
add
and
pop
out
sub
cmp
add
cmp
mov
imul
xchg
add
inc
dec
loopne
fadd
cmps
(bad)
dec
call
or
and
jnp
out
inc
std
push
jl
push
inc
sub
xchg
sbb
push
les
adc
dec
ficomp
cmp
inc
cmp
gs
addr16
adc
sub
or
add
out
pusha
fst
push
je
dec
pusha
jnp
inc
mov
pop
mov
add
mov
adc
test
es
(bad)
and
in
mov
mov
mov
or
push
inc
jb
retf
seto
(bad)
lock
popa
mov
jnp
push
fist
outs
adc
xchg
fs
in
xchg
mov
and
dec
rol
cld
dec
outs
fidiv
mov
iret
and
popa
add
inc
jb
sbb
scas
inc
cs
mov
inc
jp
ins
jo
xchg
add
leave
in
in
cmp
fstp
pushf
call
outs
jge
adc
div
int
push
jno
mov
lods
call
arpl
les
mov
sub
cld
es
cmp
icebp
pusha
adc
ficom
ret
mul
and
add
jbe
call
xor
cmp
adc
mov
call
dec
push
jns
es
mov
in
xchg
dec
enter
fidiv
in
add
or
daa
nop
or
mov
fild
xchg
inc
and
enter
stos
fist
cmp
jns
pushf
aam
add
daa
or
aad
loop
loope
add
fsub
fwait
add
mov
dec
es
jae
sbb
sub
push
scas
(bad)
cdq
std
sti
ror
sub
dec
je
sbb
pop
icebp
cwde
fs
fldcw
int
push
nop
es
jbe
add
loopne
xor
mov
adc
or
add
pop
mov
daa
clc
mov
pop
lahf
inc
fiadd
hlt
mov
fistp
mov
iret
and
inc
in
mov
iret
and
fs
call
and
mov
jmp
mov
inc
mov
stc
dec
loopne
fst
sti
cmps
jecxz
mov
cli
enter
pop
ror
and
les
jmp
cmp
fcomp
enter
add
sbb
rdtsc
rcl
enter
loop
rcr
mov
loop
or
xor
add
sub
sub
fimul
je
add
cmp
into
and
iret
adc
repnz
iret
loop
cmp
lods
or
add
loop
enter
aad
adc
retf
lea
enter
add
adc
loopne
mov
adc
dec
shr
adc
out
jge
fmul
pop
and
xor
inc
xor
mov
mov
add
in
jne
pushf
xchg
ds
lea
dec
aam
nop
mov
xchg
aad
rcl
xor
add
(bad)
cld
mov
jg
sbb
test
cs
add
and
sub
and
cmps
or
test
dec
and
ja
xchg
pop
les
adc
arpl
jmp
and
cmps
sbb
movzx
lock
or
pop
adc
inc
xor
lea
pop
jo
call
add
mov
call
rcl
test
aaa
ins
pop
adc
inc
sub
inc
pop
dec
inc
push
jbe
add
sahf
jmp
inc
mov
dec
cmp
inc
sub
dec
repz
dec
sar
sbb
sub
in
fsub
test
je
movs
jge
das
fst
shr
fadd
repnz
in
sbb
scas
(bad)
fsub
or
call
cmovns
and
jbe
sbb
sti
ja
sub
or
adc
repnz
div
and
retf
jp
jmp
sub
out
ins
scas
sub
adc
int
xor
(bad)
(bad)
jne
inc
aas
stos
call
jne
ret
aas
jns
and
clc
push
inc
es
fimul
call
sub
push
push
pop
in
or
adc
push
inc
loopne
xor
enter
in
and
loopne
std
mov
mov
or
pop
jmp
in
add
iret
lods
jae
dec
and
adc
test
xchg
aad
dec
pop
inc
push
movs
call
mov
dec
push
ret
outs
cmp
mov
inc
call
(bad)
and
adc
or
mov
add
cmps
dec
mov
shl
push
push
sub
repnz
jns
pop
add
jge
adc
or
push
and
sbb
fwait
popf
dec
inc
adc
cmp
xor
inc
(bad)
cld
push
xor
mov
inc
(bad)
sub
sub
or
(bad)
jle
xchg
adc
sbb
jno
add
or
pop
out
add
repz
pop
jne
push
sbb
cmps
imul
or
retf
std
dec
cmp
not
cld
xchg
enter
xor
jecxz
pusha
mov
xor
push
aaa
inc
sbb
mov
add
outs
mov
and
nop
sysret
in
adc
jns
push
jmp
mov
push
dec
add
mov
and
out
je
and
inc
cli
adc
or
mov
cld
imul
ss
jmp
inc
lock
sbb
dec
repz
and
mov
lock
into
cwde
arpl
pop
call
sbb
jmp
clc
sub
adc
mov
shl
cmp
lea
pusha
mov
sub
adc
aaa
dec
out
cmp
rcl
jno
ja
cmp
or
fchs
fst
add
inc
mov
sub
mov
les
test
or
aam
nop
xchg
xchg
pop
or
fadd
out
fist
fsubr
cs
cmp
je
cmps
push
add
leave
mov
retf
mov
push
pop
sbb
pop
pop
and
rol
in
or
dec
jb
cmps
psubq
jmp
enter
movzx
cmp
ja
push
test
adc
ss
lahf
out
sahf
jno
mov
out
adc
sahf
out
xor
dec
xor
dec
jp
out
stc
push
and
daa
xchg
mov
int3
cdq
add
fldcw
loopne
cmp
and
cmp
sbb
dec
les
loope
scas
movsx
imul
in
sub
clc
or
fldcw
fcmovne
inc
push
aaa
dec
cs
movs
in
xchg
imul
lock
sbb
add
sub
fsubr
call
and
in
push
inc
xchg
in
mov
sub
loopne
xchg
mov
jl
in
push
fsub
fstp
and
test
movsx
fcom
jb
sub
aaa
aam
cs
adc
xor
fiadd
call
fild
ror
enter
mov
jb
enter
xor
push
in
test
pop
dec
je
jmp
sbb
fwait
cmp
rcr
xor
test
add
push
test
mov
fstp
xor
stc
out
push
out
idiv
cmps
xor
xchg
mov
inc
sahf
imul
daa
in
and
iret
jnp
push
cmp
test
shl
les
xchg
mov
mov
mov
mov
xchg
fnsave
or
in
mov
cmp
cs
adc
cwde
popa
movs
and
jno
popf
movs
inc
push
imul
es
outs
pushf
cmp
adc
add
leave
sbb
xchg
jmp
sbb
fsub
dec
mov
jmp
pushf
mov
sub
ret
push
mov
adc
mov
cmp
pop
movs
xchg
fcomp
js
or
mov
or
jo
and
mov
adc
push
in
out
jmp
(bad)
icebp
test
in
add
jecxz
cmp
dec
iret
mov
fld
in
(bad)
xor
sub
sub
inc
jb
push
loop
xor
mov
shl
loopne
xor
adc
mov
jne
pushf
xor
mov
push
in
loopne
push
cmp
dec
in
repnz
es
test
fcmove
xchg
cmp
clc
xor
stc
cmp
repz
call
jl
cmps
cmp
dec
cmc
push
xchg
push
ds
daa
mov
push
out
clc
sahf
call
push
xor
leave
out
or
ss
dec
dec
fcom
push
xor
dec
xor
popa
sbb
popa
push
inc
dec
fcomp
xor
mov
push
xor
push
dec
adc
dec
enter
aaa
and
lods
dec
loopne
(bad)
movsx
fdiv
fdiv
shl
xor
aaa
rcl
iret
pusha
dec
dec
pop
jno
inc
fistp
mov
nop
out
sbb
aaa
call
rol
sbb
inc
aaa
ror
pushf
std
fs
test
jno
in
repz
mov
test
repz
xchg
nop
pop
add
iret
push
je
ss
pop
dec
or
repz
mov
aaa
mov
mov
cwde
add
ja
mov
test
popa
mov
cmp
add
dec
test
test
or
es
movs
aaa
movs
aad
and
cmp
test
cmp
es
cwde
jno
ficomp
aaa
jecxz
dec
adc
loop
nop
popf
mov
push
loop
push
dec
mov
push
mov
cmp
cld
sbb
clc
mov
repnz
push
test
sbb
(bad)
int3
push
dec
mov
nop
fs
add
test
loope
mov
call
inc
xor
mov
jmp
mov
ja
cmp
dec
not
mov
cs
rol
outs
pushf
push
jbe
and
or
adc
xlat
add
jbe
fst
or
jmp
(bad)
push
sub
sub
lock
(bad)
dec
push
inc
or
pushf
or
push
out
pop
lock
cmp
jb
fdivrp
js
(bad)
xor
mov
mov
push
mov
iret
inc
ins
jo
jns
xor
sub
dec
jne
pop
(bad)
and
adc
popa
jb
mov
pop
inc
push
xchg
pop
jnp
ds
add
inc
outs
jne
add
jne
jb
outs
arpl
add
push
and
shl
popa
fst
push
and
add
in
pop
fwait
aas
push
lahf
in
push
outs
imul
inc
arpl
cmps
loopne
and
leave
and
inc
jns
sahf
test
mul
push
fcomp
aaa
ss
out
clc
ret
sub
adc
std
cmp
test
and
or
iret
dec
ja
test
xlat
mov
movs
outs
push
inc
xchg
test
pop
xor
push
ins
das
cmp
push
pusha
jmp
lea
cld
lods
dec
sbb
xchg
cld
stc
jb
aam
aam
pop
jne
xlat
mov
push
cmp
rol
or
sahf
rol
fmul
call
jl
(bad)
and
cmp
xchg
push
or
jl
inc
inc
add
std
dec
cmps
mov
out
in
sub
adc
mov
test
jge
mov
gs
push
dec
and
pusha
aad
jae
jle
cmp
je
in
lods
cld
wrmsr
xor
mov
inc
jne
daa
xor
mov
mov
push
inc
shl
wrmsr
sub
fisub
ss
xor
sbb
cwde
cmp
sub
push
and
jbe
out
jb
dec
in
dec
popf
sub
out
hlt
add
ins
jecxz
sti
mov
lds
jo
push
stos
xlat
sbb
sbb
sbb
icebp
dec
jl
test
cmp
je
outs
test
(bad)
adc
repnz
xchg
call
pop
outs
pop
mov
xor
jnp
(bad)
imul
inc
jp
cmp
adc
add
add
add
mov
xchg
int
pop
inc
mov
call
mov
add
rol
(bad)
outs
add
mov
push
sti
dec
loop
mov
adc
shr
ja
xchg
adc
sahf
push
dec
mov
(bad)
in
push
cmp
scas
dec
inc
sbb
xchg
jle
and
mov
invd
outs
jecxz
mov
stos
push
imul
push
dec
mov
jae
psrld
test
pop
ins
mov
pop
add
xlat
dec
add
push
mov
jb
or
jbe
jo
sbb
repnz
sbb
cld
sbb
inc
mov
fwait
xchg
sti
cmp
xchg
cmp
setg
inc
mov
lods
repnz
fwait
call
jne
or
in
loope
add
jbe
dec
ret
daa
lock
dec
or
add
dec
pop
(bad)
adc
jl
inc
xor
cmc
mov
or
mov
sub
lock
inc
rol
add
xor
imul
add
dec
jne
add
xor
mov
add
sbb
int
shr
mov
xchg
sbb
lock
loopne
dec
pop
enter
jecxz
bound
jb
cld
inc
add
xchg
nop
dec
retf
adc
aad
and
mov
in
cmp
jae
xor
inc
sbb
jns
sti
sub
mov
sub
rcr
xchg
call
mov
xor
cwde
in
enter
mov
nop
stc
sbb
or
fdivp
mov
fsubr
pop
adc
repz
push
and
xchg
stos
xchg
xchg
xchg
xchg
lods
lods
scas
scas
xchg
xchg
xchg
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
xchg
xchg
xchg
xchg
add
xchg
test
pop
stc
dec
add
sub
inc
sbb
pushf
adc
mov
inc
mov
es
add
movs
nop
dec
xchg
dec
add
adc
pop
mov
pop
push
fsub
push
dec
adc
sbb
test
mov
retf
add
inc
dec
xor
cmp
jle
sub
test
push
in
ja
js
ins
add
repz
hlt
inc
mov
mov
sbb
sub
xor
and
jmp
pop
pause
pusha
and
cmps
or
mov
rcr
cmps
fisttp
jg
sbb
mov
dec
jl
or
add
mov
xchg
(bad)
push
cld
cmp
je
mov
and
sbb
push
mov
mov
(bad)
jmp
jle
in
add
sbb
loop
mov
ins
sbb
test
out
jg
call
push
mov
mov
mov
cmp
je
mov
cmp
aas
push
lar
(bad)
dec
dec
ja
mov
jmp
call
jmp
adc
int
xchg
mov
cmp
jle
jae
cld
push
add
add
adc
jmp
mov
movsx
push
pop
(bad)
cmp
sbb
(bad)
mov
fisttp
jns
push
adc
mov
mov
jl
push
cmp
ja
jb
add
add
call
(bad)
fdiv
retf
out
mov
mov
or
or
sahf
push
(bad)
in
fwait
lahf
data16
adc
inc
cmp
pop
dec
mov
xlat
or
xchg
(bad)
idiv
test
jb
into
inc
mov
lods
cmp
call
stos
mov
out
test
adc
or
fist
mov
mov
mov
rcl
xlat
test
jo
aaa
clc
inc
jl
pop
fst
or
lahf
test
inc
inc
cdq
push
adc
pusha
loop
push
and
loopne
or
ret
sub
sbb
xchg
or
or
adc
mov
dec
int
pop
out
sbb
mov
aaa
adc
and
mov
sub
inc
mov
jp
or
or
mov
push
cli
xor
div
xchg
dec
sub
jne
mov
xchg
nop
inc
jecxz
ins
addr16
xchg
dec
cmp
dec
push
std
mov
ror
mov
mov
sti
mov
adc
nop
retf
push
xor
iret
lods
pop
mov
xchg
xchg
pop
inc
push
xchg
ja
adc
mov
fadd
push
cmp
cmp
aaa
sbb
inc
inc
mov
pop
sti
push
jge
or
neg
ins
or
sbb
(bad)
movs
daa
dec
call
push
inc
xchg
cmp
adc
arpl
fmul
sub
or
pop
retf
add
mov
mov
mov
cld
stos
sahf
or
aaa
or
sahf
mov
(bad)
add
sbb
fstp
fwait
push
out
push
clc
fisttp
rcr
in
dec
inc
push
fistp
dec
nop
pop
sub
ja
jns
test
push
push
addr16
shr
pop
jmp
add
jmp
adc
push
inc
push
or
fbstp
inc
sbb
inc
fsubr
stc
lods
push
mov
jp
mov
push
push
jge
add
call
fwait
push
mov
or
add
in
ret
xchg
out
ins
add
shr
ja
jae
jne
lods
dec
repz
pop
adc
or
jbe
add
repnz
mov
mov
mov
pusha
jb
retf
inc
(bad)
jmp
cmp
ja
xchg
sbb
push
enter
jecxz
add
mov
push
call
cdq
rcl
(bad)
rcr
jae
sub
inc
je
sub
pop
mov
es
sub
cmp
inc
inc
iret
scas
mov
inc
aas
jo
(bad)
mov
add
push
inc
ins
imul
jmp
lea
jl
pop
ins
jl
mov
gs
push
jg
mov
sbb
push
gs
inc
cs
mov
int3
xchg
gs
fsub
jnp
xchg
add
scas
add
(bad)
dec
or
inc
imul
push
sahf
add
bound
sbb
sar
nop
adc
dec
outs
mov
sbb
xchg
cmp
imul
test
jns
inc
or
iret
add
adc
push
pusha
int
mov
pop
bound
popf
mov
je
ins
or
cmps
or
and
(bad)
std
dec
imul
lea
mov
mov
jae
(bad)
rol
or
dec
dec
jg
inc
inc
and
je
add
retf
ja
sub
mov
cmp
dec
gs
ja
jbe
sbb
jae
and
cmps
inc
sar
jne
sub
cmp
or
adc
mov
dec
or
push
sub
in
mov
adc
push
add
pusha
push
or
ret
mov
or
mov
pop
inc
mov
inc
les
and
ins
rcl
sub
mov
xor
sub
mov
(bad)
pop
cmps
inc
dec
and
or
leave
inc
repnz
js
aam
pop
nop
shr
pop
sbb
add
pop
mov
adc
mov
adc
inc
ins
xchg
jmp
nop
test
cmps
ins
and
int3
push
mov
mov
push
and
loopne
dec
imul
cmp
inc
xor
add
stos
adc
scas
push
cmp
imul
mov
lock
add
ins
jo
push
mov
xchg
push
xchg
mov
cwde
jo
(bad)
push
nop
jb
or
sbb
outs
adc
xchg
xchg
or
sbb
jle
jae
pusha
or
ja
adc
adc
cmp
push
xor
ss
inc
daa
mov
push
js
(bad)
push
add
mov
ins
and
inc
mov
lahf
and
les
or
add
push
pop
push
sbb
mov
and
xor
add
mov
aad
pushf
cmp
fisttp
(bad)
jmp
adc
or
out
iret
shl
mov
and
mov
jmp
out
push
(bad)
pusha
or
add
mov
imul
push
dec
lea
or
sbb
(bad)
sbb
inc
push
xchg
sbb
push
sub
cmp
inc
cld
dec
pop
shl
jno
adc
adc
xchg
fucom
pop
xor
cmp
ja
push
std
sub
cmovns
jae
fs
jo
lds
xor
cmp
push
rcl
sahf
cmps
add
scas
cmp
mov
adc
je
(bad)
xchg
push
push
dec
call
int
push
lods
xlat
in
fdivr
inc
stc
sahf
(bad)
xchg
pshufw
fs
imul
dec
mov
ror
outs
jnp
fdiv
data16
add
mov
ds
ss
push
inc
test
jl
out
mov
push
push
dec
dec
movs
cmp
pop
xor
mov
inc
or
loope
adc
jmp
inc
push
or
sub
bound
ret
cmp
and
aas
int3
pop
adc
xchg
mov
adc
mov
hlt
dec
sbb
in
or
push
push
pop
inc
ss
int
push
dec
push
ins
dec
js
adc
dec
into
lock
push
dec
sti
cmps
sbb
pop
fadd
out
cmp
mov
push
add
lahf
mov
mov
lock
push
(bad)
sbb
nop
sub
pop
sbb
clc
push
cs
push
in
cld
push
pop
sti
mov
push
push
push
(bad)
lods
fbld
aas
iret
inc
enter
inc
into
repz
fcom
lock
mov
fbstp
cmp
sbb
sbb
inc
sbb
and
pusha
sbb
popa
sbb
addr16
out
push
cmp
mov
xlat
mov
in
sub
adc
push
inc
xchg
xor
sbb
imul
sbb
repnz
dec
pop
inc
in
pop
movs
pop
inc
popa
int
and
pop
xlat
repz
cmp
in
(bad)
nop
imul
sub
pusha
pop
test
pop
mov
cmps
in
jb
pop
cmp
sbb
pop
jb
pop
adc
sbb
pop
jb
and
les
jb
push
add
sbb
and
in
iret
repz
inc
push
sbb
sahf
out
ds
cmc
test
sar
adc
sub
stc
sub
cs
repz
scas
sbb
sbb
push
mov
inc
add
jns
iret
xor
movs
or
nop
hlt
cmp
mov
es
sbb
out
inc
pop
cmc
push
fbld
mov
rol
aas
or
sub
push
adc
adc
cmp
mov
sbb
dec
rcr
pop
scas
adc
jle
(bad)
mov
(bad)
fistp
(bad)
ss
add
cmps
fldcw
xor
xor
call
jo
sbb
(bad)
pusha
(bad)
sub
inc
sti
sbb
push
data16
ss
adc
push
push
aas
inc
sar
lock
mov
inc
bound
jmp
mov
mov
fmul
nop
out
fdiv
das
nop
adc
push
cmp
aam
push
or
cmp
repz
imul
aaa
ret
mov
xchg
int
dec
or
in
xchg
push
jecxz
aas
mov
push
sub
pop
mov
fidiv
lock
add
loopne
in
icebp
push
xor
nop
inc
mov
adc
(bad)
ds
jbe
push
and
xchg
jbe
xor
sub
je
clc
xor
les
fld
cld
(bad)
sti
inc
fisttp
(bad)
clc
push
push
push
push
push
push
loop
push
dec
out
cmp
push
aam
and
fdivp
cmp
or
idiv
les
or
nop
xlat
pop
and
adc
mov
call
and
mov
cmp
pop
add
aad
sar
addr16
and
int
mov
repz
sbb
mov
mov
fcom
push
inc
push
mov
arpl
cmp
sbb
mov
pop
fs
ins
push
push
sub
push
cdq
mov
push
enter
push
xor
mov
push
ins
mov
pushf
sahf
add
pop
push
add
bound
pop
and
push
mov
push
dec
dec
fs
sbb
fsub
call
data16
lds
dec
int3
fadd
les
data16
and
pop
mov
(bad)
idiv
push
test
jnp
into
movs
lahf
dec
inc
xchg
jle
enter
jne
add
xchg
xchg
sar
or
add
mov
outs
add
add
jb
jne
(bad)
clc
push
leave
jae
scas
clc
and
cmps
mov
jae
add
and
out
cmp
pusha
add
xor
push
outs
cmps
pop
clc
mov
dec
push
movs
and
bound
sbb
add
rcl
pop
je
mov
or
sub
jmp
dec
or
outs
ja
or
xor
and
mov
test
js
cdq
jge
sti
push
sub
sub
(bad)
add
and
xchg
inc
fcomp
jmp
sbb
adc
fist
add
scas
fucomip
adc
push
jmp
xchg
ret
and
xchg
or
mov
sbb
push
cmp
fmul
cmp
sbb
stc
pop
jl
loopne
add
add
add
clc
or
daa
pop
icebp
mov
add
xlat
fistp
sar
js
(bad)
jge
movs
or
inc
add
xchg
je
push
sub
push
pusha
pop
xlat
sbb
pop
dec
mov
pop
pop
mov
pusha
sbb
inc
jb
jmp
das
movs
or
inc
or
(bad)
lds
mov
xor
js
push
ss
out
xchg
dec
jne
pop
add
xchg
push
pop
hlt
retf
and
cmp
xchg
add
adc
in
adc
hlt
xor
xchg
(bad)
pop
or
sbb
push
adc
shl
adc
or
mov
sbb
fidiv
gs
setge
and
ds
jnp
(bad)
mov
push
cwde
sbb
jno
cmps
lock
adc
lods
and
or
enter
cmps
adc
imul
lds
dec
imul
and
xor
adc
push
xchg
sbb
inc
xchg
sbb
adc
loope
imul
mov
inc
mov
dec
inc
xchg
cmps
in
mov
(bad)
loope
mov
or
push
out
inc
ds
cmp
fmul
jg
push
pusha
fcmovbe
cmp
inc
adc
cmps
inc
sub
sbb
clc
cmp
sub
in
jl
inc
xor
cmps
jg
jne
push
inc
dec
jne
(bad)
rcr
(bad)
call
test
xchg
iret
xchg
lds
inc
sbb
adc
push
pop
jg
inc
pop
retf
pusha
inc
rcr
nop
sub
mov
js
dec
loopne
pop
ror
sub
ins
add
(bad)
dec
and
and
jmp
gs
push
inc
cli
dec
cmp
imul
mov
add
icebp
je
repnz
push
push
aaa
call
adc
lds
pushf
or
xlat
and
les
and
and
add
mov
adc
out
cmp
jp
push
call
mov
cmp
add
or
imul
fcom
sub
(bad)
jne
push
xor
cmps
(bad)
push
dec
jne
add
rcr
sbb
mov
mov
adc
cmps
and
in
push
inc
test
enter
es
shr
pop
mov
sbb
in
int
ror
mov
pushf
add
pop
aaa
xor
nop
xor
sbb
pop
(bad)
out
fnsave
dec
xchg
les
hlt
xchg
push
pop
xchg
push
mov
lea
sub
mov
mov
inc
nop
sub
or
pop
mov
mov
adc
(bad)
int3
xor
xlat
enter
call
pop
js
rol
xchg
adc
pop
sub
add
or
dec
jae
je
aam
xor
inc
in
test
mov
or
mov
and
(bad)
sbb
imul
xchg
inc
push
sub
call
pop
add
aas
sub
or
jns
sub
mov
es
adc
lar
inc
sti
and
movs
xlat
xchg
sub
loopne
and
repnz
ja
rol
sub
out
lahf
enter
or
mov
jbe
sbb
or
push
inc
jge
jne
rol
outs
add
iret
in
sbb
out
pop
jns
in
cs
jmp
sbb
cmp
test
mov
shl
sub
xchg
inc
push
sbb
push
inc
xchg
mov
and
fwait
in
inc
mov
nop
inc
dec
sbb
cli
pop
adc
lahf
dec
das
pushf
ss
inc
in
mov
sar
das
test
add
mov
mov
add
or
ss
loopne
jae
addr16
add
imul
push
and
push
mov
pop
pop
(bad)
imul
sub
outs
(bad)
je
cld
cmp
xor
popa
and
jmp
add
or
cwde
mov
cmp
mov
pop
ret
mov
lock
and
push
push
mov
lea
add
mov
sub
cld
mov
jmp
ret
add
enter
mov
ss
movs
inc
xlat
mov
adc
sti
sbb
add
jnp
or
retf
and
mov
pop
mov
push
mov
sub
jecxz
sub
or
and
ja
loop
pop
imul
push
or
clc
cmp
jl
pop
mov
pop
popa
add
push
mov
movs
in
xor
and
out
test
add
and
pop
dec
or
popf
es
sbb
rol
push
xchg
dec
inc
xchg
or
xor
inc
sbb
cmp
pop
dec
xor
sbb
fcom
inc
xor
(bad)
dec
cmp
push
sub
pusha
clc
inc
sub
nop
pop
out
dec
jg
add
jbe
or
idiv
dec
nop
sahf
mov
jo
data16
aas
xlat
cmps
pop
cs
mov
pop
outs
dec
(bad)
ins
pop
bound
or
out
call
or
xchg
adc
daa
loope
dec
outs
lock
mov
push
or
xchg
push
pop
jle
cmp
shl
mov
sti
arpl
mov
stos
(bad)
dec
std
in
xor
fstp
xor
loope
das
mov
jo
je
mov
clc
ret
nop
cmp
push
pop
mov
outs
icebp
inc
les
ror
fadd
dec
push
test
fnstenv
adc
sbb
jno
mov
mov
xor
sbb
fsubr
and
movs
or
imul
add
sub
aas
add
push
sub
jmp
inc
cdq
inc
call
mov
das
fmul
jno
out
aas
cdq
sub
mov
idiv
add
das
push
or
es
and
test
jae
loop
inc
adc
test
push
sbb
inc
or
leave
or
ins
xchg
in
int
outs
pop
rcl
das
sub
jecxz
cmovb
into
cld
jecxz
dec
jp
out
ret
inc
dec
sub
js
or
sub
loope
jle
jmp
inc
jecxz
sbb
xchg
cmc
mov
icebp
push
push
sbb
das
inc
movs
jo
mov
das
sbb
cmc
addr16
jl
add
xchg
adc
jmp
mov
push
nop
(bad)
jae
clc
xor
xchg
mov
into
test
je
push
das
inc
outs
inc
ret
add
or
mov
pusha
xor
adc
ja
es
jmp
and
push
and
ficom
add
mov
aad
jg
aaa
scas
sub
add
dec
or
in
std
inc
add
mov
sbb
leave
shl
jle
mov
push
push
les
jo
inc
sbb
dec
mov
hlt
jecxz
or
sbb
push
xor
test
mov
(bad)
mov
shl
call
mov
subps
test
(bad)
or
lea
ror
push
add
call
push
scas
aam
scas
dec
(bad)
shl
test
aad
xchg
pushf
and
or
push
scas
inc
sbb
mov
push
test
inc
mov
cmp
xchg
scas
add
xor
inc
or
sub
jg
dec
hlt
dec
dec
inc
loope
sbb
bound
outs
aaa
shr
push
sub
and
rol
inc
and
cmc
mov
mov
call
nop
add
mov
push
ja
mov
inc
sub
in
shr
jno
mov
jmp
and
inc
fmul
xchg
inc
jne
sub
jne
mov
mov
stos
and
loopne
inc
mov
pop
push
pop
sahf
adc
inc
and
movs
movs
pop
das
aaa
pop
push
sub
out
(bad)
cmp
enter
pop
dec
pop
or
test
add
push
pop
sahf
fcom
in
adc
cmp
cs
sub
mov
fcomip
imul
jbe
aaa
push
xor
mov
push
inc
clc
add
dec
and
pcmpgtd
sub
shl
cmp
je
mov
call
mov
pop
mov
push
push
pop
sbb
es
mov
in
push
xor
push
xchg
fcom
add
jo
(bad)
cs
cmp
jae
dec
or
je
or
inc
stos
adc
btr
push
add
mov
pop
rol
iret
int3
push
push
inc
adc
xchg
fmul
add
add
dec
test
add
pop
out
add
enter
mov
cli
pop
ja
and
bt
jb
ja
sbb
add
adc
adc
jmp
inc
cmp
jne
xchg
(bad)
aad
dec
jne
les
or
bound
push
loopne
push
add
rcl
imul
(bad)
mov
and
in
xchg
cmp
es
xchg
push
sbb
adc
test
inc
fmul
adc
lock
pop
adc
adc
cmp
mov
inc
add
mov
ret
dec
lock
outs
imul
jl
es
icebp
cli
dec
cmp
add
mov
mov
and
dec
xor
sbb
or
lock
retf
push
js
xor
test
push
cmp
inc
mov
add
add
xor
sbb
cwde
xchg
cmp
lods
mov
or
or
dec
push
and
mov
imul
xchg
je
or
bound
popa
pop
and
sbb
enter
or
fcomip
pop
cmps
add
mov
inc
push
jmp
jns
retf
in
pop
pop
jbe
and
adc
nop
(bad)
cmp
and
sub
scas
popa
adc
aaa
dec
or
adc
test
mov
test
and
movs
xor
icebp
pop
adc
nop
hlt
retf
aas
inc
iret
xor
mov
mov
icebp
lock
ret
sub
push
jmp
call
fcomp
bound
mov
cmp
(bad)
xchg
inc
adc
sub
or
mov
aas
inc
clc
inc
test
xchg
and
clc
test
inc
imul
xchg
add
inc
mov
mov
push
mov
adc
pop
mov
mov
or
and
js
pop
ins
inc
test
sub
mov
xchg
fwait
mov
aaa
sbb
sbb
jo
sub
mov
daa
daa
(bad)
dec
outs
add
repz
adc
retf
cmp
or
inc
daa
movs
inc
sbb
xor
mov
mov
clc
mov
push
adc
mul
retf
push
xor
and
dec
shl
jae
push
cmp
or
and
mov
xchg
jno
xor
cmp
lock
xlat
dec
cmp
push
in
sbb
jge
xor
inc
shl
enter
and
inc
in
mov
inc
out
out
xor
adc
push
and
aaa
dec
xor
(bad)
popa
rcl
lds
in
inc
or
inc
cmps
rcr
imul
fadd
repnz
mov
sahf
fidiv
fwait
cld
adc
enter
push
outs
push
jbe
sub
dec
jae
xchg
(bad)
sbb
clc
and
scas
nop
inc
(bad)
inc
pop
inc
std
sub
nop
xchg
lock
xor
mov
es
xchg
inc
sbb
aaa
imul
sbb
jae
dec
retf
shl
add
jmp
push
mov
clc
sub
into
in
inc
nop
rcl
dec
xor
add
lods
xchg
xor
loopne
mov
movs
sahf
push
push
jmp
push
mov
outs
jae
ins
in
fwait
pop
xchg
icebp
push
xchg
call
jno
jecxz
adc
out
add
in
in
repnz
inc
loopne
add
jo
mov
xchg
cld
or
add
inc
ret
addr16
clc
lods
jp
inc
hlt
add
jo
and
or
and
fcom
adc
inc
cmp
pop
(bad)
or
scas
call
add
pusha
popa
call
gs
inc
loopne
cmp
or
retf
enter
push
mov
dec
test
fist
into
mov
not
sub
and
xor
dec
pushf
push
(bad)
invd
jne
loope
push
add
cmp
mov
inc
nop
(bad)
lods
jecxz
push
mov
imul
sub
cmp
or
or
or
push
or
les
outs
loopne
mov
retf
sbb
xor
xor
adc
cld
jae
add
addr16
out
add
jno
and
push
clc
add
or
clc
add
fimul
inc
pusha
test
in
sub
lea
push
push
(bad)
jmp
sti
xchg
or
out
sub
pop
movs
pop
and
mov
and
enter
dec
imul
jb
bound
dec
push
repnz
aas
dec
or
pop
popa
enter
pop
sub
in
mov
dec
sahf
mov
fild
xor
out
jmp
lahf
test
xchg
sbb
or
and
cmp
fistp
out
leave
cmp
inc
pop
into
and
lds
dec
cmp
pop
dec
int
scas
inc
dec
call
das
push
ds
(bad)
js
dec
loopne
sbb
jnp
pop
jo
or
lock
(bad)
clc
dec
fimul
sbb
sbb
jo
push
ins
adc
sbb
repnz
mov
and
daa
jnp
test
inc
cmp
dec
adc
std
cmp
mov
cmp
fs
dec
inc
jmp
fsub
sbb
fidiv
mov
cs
or
add
retf
sub
pushf
xchg
mov
and
cmp
jne
or
rcl
int
dec
lea
leave
jno
jp
dec
ret
jl
or
pushf
arpl
inc
mov
imul
dec
xchg
add
aas
jecxz
pop
iret
test
cmp
inc
lock
(bad)
cmp
jne
mov
mov
test
or
sbb
lods
pop
aam
(bad)
(bad)
and
lock
je
sub
in
(bad)
sbb
pop
(bad)
neg
inc
or
push
adc
mov
sub
sub
cmp
lods
and
jb
scas
sub
lock
rol
loope
xchg
mov
push
push
inc
add
nop
aam
cli
loopne
leave
mov
test
mov
mov
mov
addr16
data16
rcr
enter
movs
cmp
fdiv
sub
fild
dec
cmps
sbb
mov
mov
xchg
lods
dec
adc
or
xchg
retf
push
or
pop
inc
pop
adc
jl
add
test
ja
sbb
inc
stos
add
outs
adc
or
rcr
imul
fld
sbb
jnp
movs
xchg
neg
in
sbb
(bad)
pop
cld
lock
dec
shl
sbb
jmp
jmp
nop
pop
add
add
mov
lock
cdq
mov
adc
and
je
pusha
outs
outs
push
jg
mov
(bad)
jmp
mov
gs
aam
(bad)
mov
out
add
out
ror
sbb
or
xlat
dec
je
add
jge
rol
mov
lock
(bad)
out
ss
jp
(bad)
(bad)
or
test
neg
outs
adc
push
fimul
adc
repnz
mov
inc
cs
mov
or
pop
push
cmps
push
scas
shr
call
push
mov
or
push
and
loope
test
or
ror
je
dec
jl
jle
arpl
sub
dec
add
jmp
and
sbb
sbb
sti
lea
push
seto
mov
adc
push
ficomp
mov
(bad)
push
nop
lods
ret
jl
repz
imul
imul
push
xchg
mov
push
bound
pop
dec
mov
sbb
add
inc
hlt
shr
out
sahf
sbb
mov
and
add
(bad)
jmp
and
add
mov
or
or
mov
mov
mov
sbb
jle
xor
test
(bad)
nop
pusha
hlt
jl
dec
and
or
inc
fcom
xor
adc
out
sub
lock
adc
sbb
pop
imul
shr
clc
retf
or
enter
in
pop
js
cmp
push
jge
or
adc
jo
jle
push
add
rcr
gs
push
push
inc
test
jo
sti
and
xchg
adc
mov
adc
mov
or
call
xor
jbe
inc
mov
and
ins
ret
jno
jmp
stc
mov
(bad)
mov
pop
sub
pusha
js
fisttp
(bad)
ja
mov
(bad)
movs
cmp
cmp
xor
add
add
jle
inc
jb
sbb
pop
mov
leave
inc
lea
mov
lods
jmp
shl
cmps
pop
dec
mov
add
daa
ins
inc
cmps
scas
dec
or
mov
cmps
outs
ins
mov
lea
or
mov
sbb
call
or
test
daa
mov
and
sbb
add
sbb
es
inc
dec
pop
rcl
mov
jne
bound
outs
cld
mov
xor
push
out
mov
jecxz
sub
push
movs
ret
or
retf
mov
shr
xchg
fisub
clc
(bad)
dec
into
lea
pop
ret
lock
sub
cld
imul
enter
pop
outs
adc
je
pcmpeqd
popf
sbb
lock
or
inc
cdq
adc
or
(bad)
adc
icebp
or
sti
add
add
jbe
dec
fcomp
xor
inc
add
call
test
mov
sahf
add
mov
jge
in
in
jmp
idiv
push
lods
and
retf
stc
inc
mov
dec
inc
lock
sub
push
adc
sqrtps
mov
sbb
scas
lods
in
push
out
aas
pop
mov
test
es
add
sbb
pop
dec
je
clc
inc
push
mov
lock
call
sbb
and
sbb
mov
mov
ja
inc
outs
mov
clc
jmp
ret
push
sbb
das
cmp
(bad)
cdq
mov
jo
cdq
xchg
sub
sbb
pusha
mov
mov
in
movs
je
mov
(bad)
mul
mov
push
inc
xchg
mov
lds
adc
add
pop
adc
xor
nop
push
(bad)
add
in
retf
pop
icebp
cmp
push
dec
outs
jmp
pop
sub
mov
jmp
nop
icebp
inc
push
cmp
add
fbstp
sub
int3
fbld
pushf
ins
cmps
cwde
lock
in
add
sbb
and
jmp
mov
shr
movs
enter
add
or
add
mov
fcomp
sbb
mov
pop
or
or
mov
mov
xor
or
aam
or
push
inc
adc
or
mov
test
pop
cmp
je
or
std
lods
add
xchg
test
je
fwait
mov
add
je
dec
or
adc
add
nop
enter
hlt
outs
sbb
pop
or
jo
add
daa
mov
or
lock
lock
sbb
ss
ficom
cmp
sub
dec
aam
ret
sbb
mov
mov
movs
sbb
adc
add
dec
and
std
movs
cmp
jge
data16
xchg
enter
test
and
aam
nop
pop
sbb
or
inc
adc
test
fiadd
cmp
cmp
in
pop
mov
inc
loopne
mov
or
lods
mov
xor
push
daa
or
push
add
pop
jmp
sub
mov
mul
dec
test
cmp
push
or
adc
cmp
dec
add
inc
sti
popf
or
or
or
adc
lds
int
mov
and
repnz
push
mov
sbb
push
movs
or
dec
mov
aaa
xchg
in
sbb
scas
pop
or
in
inc
adc
js
cmp
add
fst
pop
mov
mov
or
add
retf
mov
xor
mov
xor
xchg
sbb
adc
jecxz
test
sub
xchg
pop
pop
rol
loopne
jmp
adc
leave
add
push
push
les
mov
popf
pop
pushf
movzx
push
pop
fcmovu
mov
test
nop
addr16
sbb
jmp
dec
das
or
push
or
push
mov
std
adc
ret
cmp
pop
cmp
pop
cmp
daa
push
cmp
test
sbb
fs
fwait
sbb
adc
xchg
cmc
push
or
outs
jo
imul
ins
mov
out
mov
pop
inc
mov
mov
push
ret
nop
push
and
inc
adc
test
or
inc
enter
pop
jnp
adc
sub
and
fild
fidiv
lods
cs
rcl
pop
jbe
sub
mov
lea
in
push
inc
sbb
(bad)
push
and
shl
scas
cmc
pop
inc
or
cmc
and
xchg
xchg
lahf
jmp
inc
pop
test
outs
sbb
add
fadd
cmps
add
push
nop
or
mov
sub
lea
xchg
and
mov
je
pop
sub
repnz
inc
lods
enter
push
fistp
mov
jmp
movs
push
xor
mov
mov
jmp
inc
mov
adc
mov
mul
push
fld
or
mov
mov
ret
add
fs
sub
test
push
and
sbb
int
sbb
push
and
jl
inc
and
mov
push
fadd
cld
xchg
dec
inc
es
mov
mov
mov
xchg
adc
lock
mov
xor
cmp
jle
sbb
sbb
sub
stc
xchg
imul
adc
push
fs
sub
div
sub
inc
push
dec
hlt
inc
je
popa
or
aas
das
dec
mov
cld
xchg
jmp
aaa
hlt
pop
inc
cmp
jl
or
sub
and
arpl
jmp
icebp
or
adc
and
sbb
inc
xor
mov
mov
lods
in
sbb
mov
xchg
loopne
xchg
cmp
(bad)
pop
test
and
mov
rol
or
sub
pusha
add
jne
or
adc
es
fst
pop
mov
and
mov
and
adc
or
inc
or
rcl
and
add
xlat
adc
sbb
daa
retf
aad
push
mov
cmp
adc
xchg
gs
cmps
cmps
mov
xchg
pop
es
pop
retf
lock
add
push
xchg
fcomp
add
xor
mov
lock
mov
push
adc
popaw
ret
sahf
adc
inc
sbb
das
outs
test
loope
jb
cmp
jle
adc
jae
xchg
fidiv
ret
mov
xchg
xor
and
adc
push
inc
adc
push
fisubr
icebp
cmps
arpl
fimul
mov
ret
out
dec
jnp
pusha
mov
adc
ds
icebp
lods
push
jp
push
dec
cmp
mov
adc
leave
stos
xchg
sbb
aad
hlt
mov
pop
cmp
sti
fisttp
je
add
mov
aaa
test
cmp
pop
fsub
push
cdq
add
mov
test
call
adc
add
int3
push
inc
into
sar
call
add
mov
add
(bad)
cmc
xchg
es
jl
adc
and
pop
into
xchg
adc
cmp
pop
fild
cmp
ins
cmp
push
fs
xchg
push
in
test
ftst
inc
jbe
(bad)
gs
cmp
push
add
push
push
or
jne
in
push
loope
adc
cmp
pop
fild
inc
rol
pop
gs
addr16
in
cmps
(bad)
cli
inc
sbb
jmp
sbb
mov
in
div
pop
frstor
sbb
sub
lea
dec
sbb
adc
arpl
push
mov
mov
dec
sub
ror
xor
mov
dec
pusha
movs
inc
jmp
mov
xchg
leave
add
dec
push
addr16
dec
xchg
sub
rcr
adc
adc
add
sub
int3
arpl
xlat
es
stos
mov
and
ja
jmp
cmp
hlt
rol
push
(bad)
pop
lods
mov
jmp
scas
sbb
(bad)
xor
xchg
mov
movsx
lahf
mov
jmp
push
xchg
xor
rcr
shl
fucomp
cmp
xor
loopne
nop
test
sub
cs
jge
and
mov
(bad)
dec
retf
dec
ja
sbb
fsubr
sub
rol
cmp
iret
xchg
mov
push
jecxz
ret
xchg
sub
sar
std
(bad)
retf
mov
and
add
pop
xor
mov
jg
sbb
fnstenv
(bad)
neg
push
sub
push
push
dec
mov
clc
and
aam
cld
add
pop
add
into
mov
xchg
sbb
adc
and
xor
push
loop
aaa
(bad)
aas
imul
inc
ins
stos
into
cdq
dec
jle
push
mov
and
inc
or
outs
sub
lods
test
mov
lds
xor
daa
or
lods
xor
add
arpl
mov
jns
fwait
cmp
je
cmp
mov
xchg
pusha
loopne
popa
mov
pop
repnz
ss
pop
push
or
xchg
or
daa
ss
sbb
outs
repnz
icebp
adc
and
and
cmp
mov
das
test
nop
fcomi
in
mov
mov
inc
mov
inc
push
or
clc
imul
(bad)
pop
push
pop
cmp
shl
and
mov
mov
inc
cmp
inc
mov
test
mov
or
or
xor
not
and
cs
ss
int3
ret
dec
mov
(bad)
or
leave
lock
add
xor
mov
or
jbe
pop
dec
orps
mov
pop
xor
retf
nop
(bad)
pop
test
pop
push
js
sbb
popf
xor
mov
lock
cld
sub
cdq
jle
pop
or
push
int3
sahf
ins
push
xor
scas
xor
in
add
dec
push
int
xchg
shl
jo
imul
adc
in
dec
jno
xchg
bound
ss
scas
push
pop
mov
dec
sbb
adc
and
sub
sub
add
lods
pop
add
(bad)
(bad)
inc
push
shl
and
in
addr16
xor
out
mov
mul
cmp
adc
clc
mov
mov
sub
xor
pop
aam
adc
xchg
or
shl
cmp
in
or
adc
push
dec
repnz
enter
add
xor
cmps
mov
nop/reserved
dec
test
sub
push
lahf
(bad)
repnz
fadd
ss
sub
rcr
push
or
and
pop
sub
mov
fldenv
fcom
sbb
idiv
outs
sbb
fisub
push
test
mov
xchg
je
sbb
fs
jmp
mov
mov
ss
cmp
dec
and
mov
cmp
adc
mov
mov
pop
push
ret
bnd
jne
pop
les
add
adc
add
test
rcr
sbb
mov
add
call
inc
pusha
sbb
push
xor
es
loope
mul
jb
push
xlat
jo
out
sbb
xor
mov
inc
cdq
sbb
nop
sbb
and
xor
fidiv
or
lods
clts
ret
or
sub
fsub
adc
dec
xor
in
mov
add
xchg
add
jmp
test
cmp
mov
fwait
test
push
pusha
mov
sbb
mov
mov
pop
ja
dec
dec
xlat
pop
out
out
test
jmp
cmp
jle
jmp
loope
iret
sub
push
xchg
sti
aaa
sub
jno
fmul
cmp
imul
jge
popa
sub
xor
pop
or
xor
clc
cld
hlt
sub
mov
in
push
cmp
sub
add
sbb
das
cmp
aam
pusha
aaa
dec
ret
or
fild
adc
xchg
scas
sbb
nop
xchg
psubw
nop
add
or
sbb
leave
enter
or
adc
and
or
lods
and
in
pop
jb
ror
in
fild
add
adc
pop
lahf
adc
or
xchg
fld
adc
cmps
mov
or
call
retf
jb
(bad)
sbb
add
add
jnp
std
adc
pop
jae
icebp
sub
xor
inc
dec
or
add
push
dec
shl
or
add
xor
loope
dec
jo
inc
das
cmp
cmp
sbb
aas
xor
pushf
jns
lods
mov
push
inc
pop
add
lahf
adc
in
xchg
sub
scas
mov
adc
push
ss
mov
fsubr
lahf
movsx
daa
lock
push
inc
movs
push
adc
fisttp
not
mov
mov
in
ins
movs
xor
sqrtps
push
out
movs
mov
adc
aas
std
pop
mov
mov
mov
jne
xchg
sub
ucomiss
push
push
mov
cmc
pusha
adc
jno
xchg
inc
mov
mov
cmp
cmp
add
add
push
mov
add
(bad)
fsub
dec
repz
lock
inc
sub
inc
or
(bad)
fcomp
xor
stos
pushf
jne
das
pop
(bad)
dec
aad
cmp
(bad)
in
retf
mov
and
fcomi
push
pop
imul
inc
ja
inc
sub
hlt
inc
xor
retf
cmp
sub
into
or
jge
aam
(bad)
mov
add
jl
jmp
jne
xor
xor
xor
aas
test
mov
aam
mov
cld
hlt
inc
pop
push
data16
shl
xchg
std
pop
data16
jno
ds
pop
cmp
test
icebp
sub
dec
imul
or
mov
adc
cmp
sub
and
lods
add
sbb
and
iret
imul
xor
ror
scas
mov
add
popa
xor
lds
xor
pop
jl
push
pcmpgtb
xor
mov
push
push
fstp
out
stos
mov
jb
ja
xor
cmp
mov
cmp
popf
mov
xor
stos
sbb
stos
cmps
inc
enter
jns
push
jg
cs
push
adc
nop
sub
cmp
enter
fld
xchg
(bad)
lock
sbb
add
jns
in
xor
xor
repz
sbb
pop
popa
out
ss
xlat
test
popf
pusha
sub
daa
cli
retf
push
jle
(bad)
pop
das
clc
jge
mov
mov
fs
cmp
dec
and
cmp
ret
pop
mov
mov
call
jl
icebp
inc
push
sbb
cmc
daa
add
sub
lods
sub
xor
inc
cmc
daa
pop
jne
mov
mov
test
add
aam
cmps
jge
pop
paddusb
jp
pop
js
mov
cli
push
jnp
jnp
div
daa
fsubr
pop
pop
or
push
(bad)
sub
pusha
mov
sbb
mov
xor
enter
ins
or
ret
push
pop
lock
in
ret
dec
js
sahf
cmp
xchg
(bad)
jb
mov
mov
enter
push
movs
cmp
fdiv
fsub
mov
inc
dec
xor
jae
aam
sub
and
fiadd
sbb
cmp
adc
xor
mov
lock
or
inc
push
sbb
mov
dec
fsub
pop
or
xor
fwait
mov
and
jmp
mov
adc
cmp
cmp
cld
daa
loop
aaa
or
jnp
jno
fist
(bad)
shl
inc
fist
aas
xchg
das
dec
cmp
pop
sbb
jl
or
push
mov
out
jno
out
push
mov
es
jmp
inc
push
jge
mov
jne
(bad)
ins
mov
(bad)
imul
xchg
fwait
dec
lea
aaa
jp
shl
cld
and
xlat
rcl
sbb
rol
fcomp
fimul
(bad)
jg
adc
ret
repz
dec
aaa
jbe
dec
sbb
adc
sbb
xor
cld
frstor
add
call
das
jo
shr
dec
sar
cmp
jne
push
mov
shl
xor
mov
xchg
mov
shl
fisttp
sar
dec
aam
inc
jl
out
sbb
dec
xchg
pop
jns
pop
sbb
sar
je
int
ins
dec
or
sbb
inc
inc
and
mov
or
call
(bad)
mov
jle
pop
imul
push
mov
call
xchg
dec
arpl
adc
jmp
call
xchg
and
and
cmp
je
add
push
push
push
mov
push
or
fisub
loope
lods
inc
push
movhlps
jne
fistp
je
in
jae
ret
aaa
(bad)
push
cmp
test
movs
mov
adc
inc
sbb
mov
cli
fdivr
pop
clc
push
in
adc
push
pop
hlt
lods
jg
dec
les
and
sar
shl
aas
mov
sbb
sub
xchg
sbb
pop
or
sub
loope
retf
adc
push
fs
push
jmp
mov
bts
jmp
lds
movs
mov
sub
sub
xchg
adc
mov
add
adc
or
inc
adc
mov
dec
push
xchg
neg
fsubr
pop
add
test
mov
lods
jmp
test
je
adc
call
pop
in
push
pop
idiv
fld
xchg
les
cmp
xchg
shl
test
xor
xchg
retf
xor
xchg
test
inc
jo
ret
ja
adc
sbb
inc
lock
jmp
push
inc
aaa
cwde
bound
or
ds
dec
cmp
ror
and
clc
dec
jl
enter
mov
or
ja
add
cmp
sbb
push
addr16
mov
nop
xchg
ret
mov
loope
sub
cld
jmp
add
cs
ja
adc
pop
shl
cs
shr
jbe
jno
and
scas
shl
adc
cmp
xor
pusha
repz
xchg
dec
inc
dec
pop
mov
pop
xor
test
test
sti
fcmove
dec
fild
test
inc
push
mov
jbe
ds
out
popf
cmp
cwde
cmps
mov
push
mov
jns
in
add
push
jmp
ins
sbb
in
pop
pop
mov
adc
add
ret
add
mov
mov
jmp
das
pop
push
adc
pop
imul
inc
mov
dec
fiadd
cmp
add
or
popa
cmp
pop
das
jge
adc
pop
dec
or
or
test
mov
hlt
mov
test
mov
imul
mov
lock
xor
xor
fild
test
imul
sub
or
xchg
mov
aad
daa
mov
jb
inc
mov
es
inc
inc
and
inc
dec
push
push
inc
jo
test
jge
ss
sahf
gs
push
fmul
es
mov
xor
inc
or
push
test
inc
dec
sbb
xlat
dec
in
sbb
ror
out
dec
inc
clc
clc
inc
push
mov
mov
into
adc
clc
inc
inc
call
jmp
or
(bad)
pop
lea
xchg
test
mov
movs
pop
cmps
sbb
jns
cdq
xchg
inc
sbb
test
retf
push
add
adc
arpl
cmps
add
sar
pusha
jmp
and
test
(bad)
lods
jle
dec
addr16
and
mov
push
sub
sub
pop
jg
js
lods
mov
(bad)
jns
add
dec
cmp
popa
lea
sbb
jmp
pop
push
xchg
cli
jl
adc
inc
bound
cld
mov
cmp
je
adc
icebp
inc
mov
aas
out
loopne
sbb
repz
ror
in
push
lock
scas
mov
ret
clc
clc
fwait
lea
mov
lea
cmps
test
shl
and
sbb
pushf
mov
mov
jg
sbb
push
sub
mov
sbb
hlt
outs
cmp
cmp
stc
dec
call
shr
inc
mov
sub
mov
aas
sbb
xor
xchg
adc
xchg
cmps
mov
popf
scas
jge
cmp
mov
imul
push
jns
xchg
lods
cld
das
sub
xor
sahf
push
shl
jns
aam
call
movs
(bad)
jne
je
pop
jp
or
jnp
ror
mov
mov
pop
mov
(bad)
cs
push
movs
sbb
in
enter
dec
bound
adc
xor
sub
add
movs
add
into
jb
xor
jmp
mov
mov
fld
sub
pop
push
lahf
std
pop
ffree
jmp
push
mov
hlt
or
loopne
lea
leave
pop
and
rcr
mov
mov
cmp
nop
push
loopne
repz
(bad)
dec
or
dec
clc
(bad)
jg
outs
jnp
sbb
sub
push
mov
add
add
dec
es
mov
pop
or
xor
hlt
shl
data16
mov
dec
and
mov
or
iret
or
ds
jle
jl
or
sbb
scas
sbb
cmp
jnp
test
hlt
jl
adc
jg
mov
push
add
shl
and
mov
mov
jge
push
(bad)
or
fucomp
aaa
(bad)
xor
pop
mov
xchg
outs
bswap
push
push
call
pop
ss
aaa
add
(bad)
aaa
or
push
push
xchg
dec
(bad)
xchg
call
cmp
leave
(bad)
nop
sub
mov
or
fcomp
rcr
push
adc
push
and
xor
add
shr
nop
mov
inc
sub
mov
adc
add
(bad)
jge
pop
out
test
stos
(bad)
adc
je
sbb
daa
cld
test
adc
inc
jl
jle
jmp
pop
and
daa
xor
dec
mov
je
sti
and
push
push
cmp
xchg
int3
xchg
jg
movs
push
out
jle
mov
mov
dec
sbb
adc
push
sbb
sbb
mov
or
cmp
in
mov
mov
mov
push
jo
fs
outs
mov
or
jg
cmp
call
push
pop
xor
lods
(bad)
adc
inc
and
cmp
inc
clc
xor
cmp
scas
add
xchg
lahf
into
add
arpl
adc
jle
or
mov
addr16
mov
lods
push
adc
adc
lea
mov
push
and
adc
pop
xchg
dec
push
ret
cmp
sub
sub
push
dec
mul
fdivr
jnp
cmp
lock
add
ss
fsubr
and
cwde
fisttp
arpl
test
sti
mov
nop
or
dec
mov
sbb
mov
jp
(bad)
sbb
xchg
daa
sbb
mov
sbb
repnz
push
sbb
jmp
adc
adc
mov
add
daa
jno
or
mov
pop
adc
xlat
add
mov
dec
sub
sub
and
jnp
jnp
or
test
(bad)
and
sub
adc
sub
enter
adc
dec
outs
enter
push
cmps
(bad)
test
lock
jb
aam
add
data16
fadd
mov
inc
sbb
sub
sub
shl
jmp
push
cmp
rcl
sub
aam
shr
movs
cdq
cmp
or
inc
push
cdq
clc
push
adc
lock
or
inc
xchg
adc
or
test
xchg
adc
or
lods
pop
jnp
stos
adc
inc
inc
fwait
scas
shr
(bad)
or
shl
(bad)
adc
aad
je
out
push
inc
dec
jp
and
adc
xor
cmp
jl
add
mov
mov
sahf
data16
and
or
sub
jle
or
xchg
std
data16
pushf
fisubr
setne
mov
test
(bad)
inc
cld
sbb
inc
mov
sbb
je
(bad)
jne
pop
pop
(bad)
das
stc
dec
gs
outs
jo
cmps
mov
cmp
mov
inc
in
mov
not
arpl
int
dec
mov
inc
xchg
fwait
or
add
fist
lock
pop
arpl
jne
mov
js
inc
sti
dec
ret
inc
pop
push
cmp
jne
daa
call
hlt
and
jne
hlt
dec
clc
mov
movs
adc
lods
mov
push
push
adc
imul
ret
sub
imul
sar
pextrw
xor
je
loop
call
in
sbb
pop
push
ret
push
mov
jle
arpl
inc
dec
jne
in
add
es
pop
sbb
fsub
mov
sub
push
sbb
cwde
dec
jecxz
mov
and
mov
sub
xor
jmp
sbb
xchg
test
or
jmp
pop
jecxz
dec
jp
pusha
shl
cmp
aas
inc
aam
loopne
adc
leave
aas
test
adc
push
ror
outs
jge
mov
(bad)
jg
push
dec
cmp
(bad)
xlat
sbb
jge
xor
sub
pop
pop
pushf
pop
xlat
inc
mov
dec
call
or
sbb
and
shl
mov
call
lods
sbb
and
add
popf
mov
and
aas
add
sbb
mov
ja
repnz
dec
mov
leave
and
test
add
cmp
pop
xchg
inc
pop
mov
arpl
sbb
inc
sar
xchg
or
mov
inc
and
iret
and
xchg
sbb
or
inc
and
sbb
pop
push
pop
mov
jmp
push
mov
dec
xor
pop
cmp
ins
loope
mov
ins
shl
sar
scas
aas
or
add
pop
shl
das
icebp
add
jne
or
jmp
push
(bad)
or
sbb
test
test
out
xchg
cmp
lock
int
jl
rol
or
xchg
add
or
and
jg
sub
and
inc
or
xor
inc
adc
add
dec
sar
and
sbb
pop
out
inc
push
inc
and
aas
cmps
mov
pop
jns
sbb
icebp
dec
dec
in
or
ja
call
push
sub
dec
shl
pop
arpl
repnz
rcr
inc
lods
pop
lahf
aaa
dec
dec
jl
in
dec
dec
cmp
or
test
or
inc
je
dec
push
fmul
out
sbb
ret
or
adc
out
mov
mov
xor
stc
xor
ret
or
dec
cmp
xor
push
test
test
xchg
xlat
es
cld
jnp
call
call
push
mov
pusha
cmp
mov
xor
sbb
pop
mov
pop
bound
mov
or
cwde
mov
inc
push
in
(bad)
and
adc
push
adc
add
push
iret
daa
push
mov
mov
mov
jne
(bad)
sahf
cli
push
cmp
inc
imul
test
imul
or
retf
sbb
xor
repz
sub
inc
add
add
xlat
pop
adc
ja
xor
pushf
jle
sti
add
or
imul
xor
inc
or
mov
call
xor
add
or
aam
add
sbb
repnz
xlat
pop
sti
fstp
jp
int
loope
mov
sbb
cmp
jne
jmp
retf
call
imul
movs
mov
iret
mov
hlt
loope
mov
test
in
dec
add
sahf
retf
ds
adc
add
hlt
add
adc
(bad)
add
or
jne
dec
fwait
mov
fmul
pop
mov
adc
mov
aaa
hlt
jle
mov
jecxz
addr16
jo
or
enter
fwait
adc
aad
shl
push
jo
add
fcomp
pop
loop
xchg
push
lock
cld
daa
mov
pop
loopne
inc
and
cld
mov
aad
and
(bad)
sub
(bad)
and
push
(bad)
div
ret
ret
or
ja
aam
or
sbb
mov
popa
sub
cld
inc
sbb
pushf
dec
xor
in
xor
in
in
(bad)
mov
adc
lds
call
ss
sbb
dec
(bad)
mov
push
or
xlat
adc
pop
add
sbb
ret
push
daa
aam
sub
lods
daa
fld
daa
lahf
inc
mov
lahf
inc
sub
movs
sbb
movs
sub
xchg
dec
sbb
and
sub
repnz
mov
(bad)
daa
or
or
ret
daa
mov
or
or
sbb
cmps
cmp
xor
ins
sub
pop
das
add
(bad)
cmp
adc
dec
push
mov
sub
xchg
lock
add
adc
mov
ret
mov
test
(bad)
jp
aam
inc
ror
pop
test
lock
dec
loopne
lock
sar
out
fstp
sub
mov
pop
or
push
and
adc
mov
add
aas
cmp
popf
test
fisttp
mov
pop
mov
push
or
sbb
stos
adc
movs
push
mov
push
mov
iret
mov
out
dec
aas
mov
dec
pop
cld
cmp
push
push
sbb
ins
xor
mov
mov
jbe
pop
paddq
push
pop
inc
pop
inc
mov
pop
aas
(bad)
push
push
es
add
mov
pop
test
push
pop
jo
inc
pop
add
adc
push
add
icebp
push
push
cld
push
test
xchg
sbb
xor
cld
push
jo
inc
rsqrtps
sti
xor
push
sub
js
jns
(bad)
nop
mov
mov
pop
xor
dec
inc
(bad)
pusha
push
push
out
arpl
jb
jle
lea
xor
jle
mov
dec
mov
in
imul
mov
in
dec
xchg
mov
mov
and
or
jae
retf
inc
cwde
ja
aaa
add
data16
cmp
sub
ret
les
movhps
pop
and
adc
xor
pop
mov
out
out
push
sub
mov
mov
mov
mov
pushf
pushf
jb
je
pushf
pushf
pushf
pushf
jbe
js
pushf
pushf
pushf
pushf
jp
jl
pushf
pushf
pushf
pushf
jle
pusha
popa
pushf
pushf
pushf
pushf
bound
gs
pushf
pushf
pushf
addr16
pushf
pushf
pushf
push
ins
ins
pushf
pushf
pushf
pushf
outs
outs
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
push
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
xor
pushf
pushf
pushf
pushf
xor
xor
inc
into
or
mov
movs
sub
repnz
mov
movs
mov
add
push
clc
add
(bad)
ins
outs
cs
add
aad
daa
cmp
inc
pop
xchg
and
add
fisub
arpl
scas
inc
sbb
cmps
nop
dec
and
outs
outs
je
imul
mov
or
rcl
daa
or
aaa
je
mov
aam
sbb
mov
fistp
or
inc
pusha
fnstcw
scas
nop
or
push
add
add
je
cwde
inc
cld
fsubr
cmps
fist
jns
imul
inc
enter
je
add
or
sbb
gs
cld
and
outs
imul
mov
cs
inc
js
or
jae
xchg
cs
iret
es
outs
inc
sti
cmp
int
mov
jo
outs
sbb
(bad)
fild
push
inc
popa
jae
add
sbb
or
rcr
add
inc
jl
or
ss
outs
jae
les
fst
clc
iret
or
bswap
hlt
ins
inc
ins
out
out
mov
push
push
push
dec
outs
jo
call
inc
jns
sbb
or
or
addr16
and
add
sbb
adc
xor
imul
or
jnp
ss
adc
cli
or
adc
mov
add
jne
jl
inc
fimul
mov
bound
pop
cs
add
dec
jl
jp
cmps
pop
(bad)
or
push
loop
nop
iret
jl
adc
cs
inc
imul
out
pop
outs
jb
jae
es
adc
pop
test
adc
push
fimul
and
mov
mov
mov
jge
mov
or
cmps
lock
test
(bad)
imul
outs
or
cmps
inc
xchg
mov
add
outs
or
push
cmp
sub
cwde
mov
fdivr
hlt
or
and
retf
add
sahf
pop
pop
adc
ret
pop
adc
inc
ret
push
dec
add
stos
sbb
(bad)
(bad)
sbb
inc
push
add
test
call
push
push
dec
gs
div
add
cdq
adc
sbb
gs
cmp
mov
add
sahf
push
cmps
mov
mov
add
lahf
push
ret
jae
loopne
aam
idiv
stos
mov
mov
push
add
mov
scas
pop
sbb
lds
xchg
les
lds
mov
aas
add
inc
scas
pop
xchg
add
mov
xor
(bad)
lds
sar
(bad)
ds
out
fs
add
push
inc
mov
(bad)
lods
jmp
lods
sbb
aaa
leave
jl
movs
push
push
cmp
loope
pop
sbb
add
add
(bad)
in
(bad)
(bad)
inc
pop
mov
movs
clc
enter
mov
cmp
add
mov
xlat
jae
pop
daa
clc
leave
add
imul
in
into
ret
jl
inc
popa
sbb
pop
sbb
push
movs
fsubr
adc
int
add
pop
daa
and
pop
aas
push
int3
push
cmps
ins
mov
or
or
sub
pop
fsubr
call
mov
push
cmp
or
test
retf
and
rol
(bad)
fmul
repz
imul
adc
retf
mov
es
out
repz
sti
dec
pusha
mov
mov
and
not
scas
sahf
imul
jl
in
add
push
sub
mov
push
ins
in
jecxz
xchg
sti
aas
mov
out
out
test
jae
outs
psubsb
pop
cld
les
cmp
repnz
pop
adc
sub
or
add
enter
or
clc
scas
cmps
shl
leave
cld
scas
mov
mov
gs
ins
popa
addr16
pop
mov
mov
ds
lods
mov
in
inc
jmp
pop
xor
mov
mov
pop
sub
les
shl
or
loopne
lds
inc
adc
push
enter
mov
push
push
add
dec
or
and
inc
dec
hlt
test
push
dec
or
push
push
or
fisubr
xchg
push
adc
push
pop
or
addr16
sbb
test
pop
push
dec
jae
mov
mov
loopne
pop
dec
jg
or
hlt
mov
adc
mov
pusha
xor
xchg
dec
push
inc
xlat
jl
inc
fsub
mov
sbb
ds
xlat
jae
repnz
cmovb
adc
push
cld
pop
pop
mov
xchg
push
adc
push
pusha
cmp
cmp
add
and
pop
sbb
cmp
ds
push
mov
in
push
sbb
js
inc
sub
ja
popa
outs
(bad)
inc
jno
mov
shl
add
daa
lock
dec
jne
xchg
dec
and
adc
ror
popa
dec
sub
ret
movsx
add
test
mov
mov
mov
sbb
nop
lahf
add
mov
inc
add
adc
sub
and
data16
sbb
jne
(bad)
(bad)
add
fcom
mov
out
xlat
(bad)
inc
cmp
xor
xor
sub
adc
sbb
cdq
nop
lock
sub
push
sub
mov
push
dec
and
pop
lahf
inc
dec
xchg
daa
xchg
js
pop
mov
outs
jno
nop
add
mov
and
adc
inc
js
lock
xchg
int
add
sub
cmp
xchg
adc
vmwrite
and
sub
in
pop
adc
adc
lods
xchg
sbb
icebp
cli
jmp
ins
adc
xchg
dec
aam
mov
pusha
fucomp
jnp
fidiv
test
in
mov
test
xlat
cmp
and
and
pop
sidtd
jmp
mov
push
jle
or
dec
cmps
aad
test
push
fs
mov
jmp
mov
jge
enter
pop
sbb
arpl
frstor
or
(bad)
in
mov
dec
inc
mov
lods
pop
jge
mov
int3
imul
lahf
cld
jg
mov
loopne
jns
popa
adc
adc
retf
adc
push
cmps
or
adc
in
or
push
inc
cwde
int3
iret
shr
arpl
xchg
movs
ins
pop
outs
or
ins
dec
popa
jb
outs
outs
inc
inc
out
repnz
sub
pop
dec
ins
imul
das
stc
dec
popa
jbe
add
jb
ins
gs
xor
add
push
gs
ins
pop
and
push
imul
orps
ins
gs
pop
gs
ins
in
pusha
leave
outs
ja
jne
or
jle
inc
arpl
imul
and
mov
fadd
add
push
imul
adc
scas
pop
in
inc
dec
data16
add
stc
fisttp
pop
xor
inc
add
jo
sahf
mov
xor
inc
popa
pop
fst
pusha
pop
jo
push
pop
imul
rol
or
addr16
and
mov
inc
je
inc
test
outs
in
push
xchg
dec
or
mov
xor
das
or
psadbw
sbb
push
gs
mov
add
push
push
lds
xchg
imul
sbb
push
sbb
or
fld
adc
push
and
pop
pop
jg
mov
adc
repz
adc
aaa
adc
adc
aaa
pop
or
outs
inc
adc
mov
jg
imul
pop
outs
jne
pop
rcl
bswap
push
das
lahf
dec
dec
mov
ret
cs
push
arpl
add
scas
jecxz
inc
xor
rcl
lods
outs
das
cmp
add
daa
or
movs
das
or
cmp
sub
sahf
jge
xchg
shr
or
push
mov
dec
popa
int
daa
pop
xlat
mov
push
sbb
scas
gs
pop
add
mov
mov
das
lods
jns
pop
addr16
xor
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
push
dec
push
mov
inc
arpl
inc
dec
dec
arpl
rcr
pop
dec
inc
inc
push
adc
sub
inc
push
dec
dec
push
mov
rcr
and
dec
and
out
repz
inc
inc
xor
xor
adc
inc
enter
dec
inc
and
inc
xor
inc
dec
inc
repnz
pop
mov
push
push
dec
dec
push
dec
dec
(bad)
mov
data16
(bad)
das
sbb
mov
inc
das
inc
inc
dec
push
mov
cld
push
push
push
dec
inc
dec
or
push
dec
lock
rcl
adc
push
push
push
dec
push
inc
jecxz
repnz
dec
inc
dec
push
mov
and
out
push
dec
sti
mov
mov
scas
or
add
into
push
fcomp
jl
add
jg
lock
mov
dec
or
sbb
jns
adc
add
fs
in
or
lea
mov
dec
sbb
and
repz
sbb
sbb
sbb
aam
push
push
scas
adc
test
or
add
inc
ror
add
mov
dec
pusha
addr16
shl
fmul
mov
cwde
and
jbe
mov
sbb
fistp
mov
cmps
loope
pushf
or
stos
test
sub
add
loope
imul
add
mov
or
cwde
es
cdq
add
xchg
mov
and
das
jp
xchg
mov
movs
nop
push
xor
lahf
ret
mov
or
test
mov
cmc
cmp
cmp
test
pushf
sbb
dec
add
fisubr
mov
das
cwde
add
jmp
shl
jae
jmp
xchg
dec
leave
adc
pop
push
cmp
loope
cdq
and
or
pop
(bad)
mov
add
inc
mov
mov
rcl
pop
(bad)
inc
adc
or
adc
mov
std
ins
push
lea
xor
dec
out
mov
je
dec
jae
pop
or
enter
mov
test
mov
fnstcw
xor
or
gs
inc
aam
add
or
dec
mov
(bad)
mov
adc
lea
loopne
js
push
sbb
sbb
outs
push
aas
sbb
mov
pop
xchg
and
jo
inc
ficom
inc
fiadd
push
popf
(bad)
ss
fcomp
sub
cli
inc
pop
or
pop
inc
fild
or
daa
inc
out
jmp
outs
push
sbb
or
adc
or
js
dec
pop
out
out
ret
xchg
xor
out
shl
repz
movs
sub
(bad)
aam
in
repz
lods
mov
ret
scas
les
sub
shl
push
mov
ins
in
adc
push
inc
lods
sbb
xchg
fisub
lahf
adc
push
sub
lea
push
mov
rcr
push
sub
cdq
mov
es
cmp
dec
xor
xor
neg
dec
data16
fdivp
ficom
mov
mov
ret
xchg
mov
push
pop
lods
jne
or
and
and
xor
inc
sbb
push
mov
bound
or
sbb
dec
sbb
rcl
js
dec
fsubr
xchg
mov
inc
add
push
ss
pop
enter
stos
cmp
test
add
xor
les
mov
rcl
rol
push
fs
dec
adc
icebp
(bad)
fsub
and
xchg
mov
mov
push
or
paddsb
mov
add
js
mov
mov
jne
int3
mov
sbb
mov
push
mov
inc
mov
push
cs
or
or
and
fcomp
lods
or
push
cmp
add
das
sbb
iret
dec
inc
lock
or
in
or
xchg
sub
xchg
cwde
loopne
enter
loopne
je
(bad)
lods
dec
js
pop
enter
(bad)
pop
(bad)
loopne
repnz
mov
nop
outs
or
and
push
nop
js
nop
sbb
test
xchg
push
out
mov
outs
mov
fisttp
fs
and
dec
mov
clc
daa
and
jne
js
add
or
and
xlat
lock
mov
push
xchg
jae
in
fistp
test
outs
add
ins
das
push
cmp
cmp
sar
mov
xor
add
jmp
sub
jmp
je
out
icebp
in
push
adc
cmp
add
jp
gs
lock
loopne
sbb
push
aas
mov
mov
mov
and
or
cmp
sbb
mov
push
pop
clc
inc
cmp
inc
xchg
fild
scas
inc
mov
mov
adc
es
dec
inc
jl
pop
xor
mov
adc
lods
inc
inc
sub
mov
adc
dec
call
and
hlt
leave
shl
les
xchg
popf
add
ins
ret
inc
jecxz
rcr
daa
ins
xchg
jno
in
add
mov
mov
add
icebp
nop
das
aaa
jl
daa
jge
mov
adc
std
mov
mov
mov
(bad)
out
dec
push
or
push
add
or
pop
or
or
call
or
out
push
sub
push
push
(bad)
xchg
sbb
push
add
nop
inc
sar
or
cmps
pusha
sbb
add
std
and
test
lahf
rcl
iret
ss
jmp
test
and
and
mov
nop
sub
iret
dec
loope
dec
rol
in
adc
xor
adc
ret
test
ror
leave
adc
pop
sar
mov
in
lock
dec
idiv
push
cmps
mov
ret
ins
push
and
outs
or
shr
pop
inc
sbb
or
mov
(bad)
rcr
mov
mov
int3
push
mov
fsubr
and
jns
lahf
sbb
popf
mov
iret
ficom
bswap
int3
add
dec
cs
movs
xchg
jle
add
int
push
add
fnstenv
mov
es
mov
aad
aaa
(bad)
cmp
daa
cli
pop
int
or
cmp
nop
adc
pop
mov
int
dec
pop
int
pusha
sbb
out
cmp
and
xlat
pusha
or
sbb
adc
and
ds
push
fmul
sbb
sbb
inc
es
adc
pop
rol
or
adc
movs
mov
and
fisub
pop
push
das
xchg
mov
ss
ins
imul
inc
es
sub
mov
mov
pop
inc
(bad)
mov
dec
mov
and
mov
cmp
je
mov
cwde
ds
mov
mov
nop
mov
sbb
jne
add
pusha
test
fs
les
mov
dec
mov
sub
mov
and
shr
(bad)
adc
lea
icebp
mov
push
fsubr
push
lock
not
and
mov
je
gs
add
and
mov
sti
and
lods
in
or
pop
adc
dec
imul
imul
add
jbe
out
or
cmp
mov
jb
popf
pop
xor
adc
push
push
fwait
jns
push
dec
xchg
mov
out
inc
push
pusha
push
adc
jl
test
pusha
jb
pop
cwde
cmp
pop
sbb
and
hlt
fmul
push
xor
and
push
movs
xor
inc
or
imul
push
pop
sub
je
xor
sti
add
bnd
ds
mov
in
mul
pop
dec
lock
pop
or
mov
mov
mov
in
rsm
rol
push
add
xchg
inc
mov
inc
sub
add
lds
push
rol
daa
mov
dec
jmp
jb
adc
das
lea
pop
ret
imul
dec
bound
rcr
rol
sar
ror
out
jg
shl
add
jge
fnstcw
and
adc
in
ds
mov
push
fdiv
sbb
and
add
add
push
inc
mov
xchg
fwait
sub
fisub
fstp
jae
inc
mov
bound
push
js
cmps
loopne
mov
mov
dec
sahf
jbe
call
in
push
sub
aam
jle
push
mov
pop
push
rol
(bad)
jle
xchg
ret
(bad)
adc
inc
push
cmp
jg
(bad)
ds
jmp
outs
add
pop
mov
push
inc
sbb
shl
add
cli
inc
adc
xor
not
and
xchg
sar
pop
dec
push
and
mov
lea
neg
mov
mov
cmp
dec
jnp
add
adc
sbb
out
add
sbb
ret
test
jo
retf
ret
aam
add
sbb
xor
or
cmps
ror
or
jmp
imul
inc
xor
xchg
rcr
mov
cmps
fcom
adc
dec
cmp
in
loopne
adc
push
jge
jns
mov
es
movs
mov
push
and
cmp
pop
ins
dec
push
sub
dec
jmp
pop
ret
(bad)
mov
sub
inc
dec
movs
ret
add
stc
fild
push
add
int
cmc
fs
push
outs
xor
add
or
add
movs
rcl
loopne
push
and
call
add
cmp
mov
fcmovb
or
push
inc
sub
test
ss
mov
push
add
jp
dec
mov
mov
or
add
inc
aaa
add
dec
(bad)
faddp
inc
add
fcmovb
test
je
ins
sub
adc
dec
push
mov
movs
sahf
xor
repz
lea
mov
pop
pop
xchg
push
mov
dec
jne
sbb
mov
jge
adc
adc
adc
sbb
push
inc
add
movs
and
(bad)
sub
inc
sbb
lods
icebp
xor
xor
stos
stos
jo
and
ins
mov
enter
inc
jmp
or
jmp
shl
mov
in
(bad)
mov
sub
shl
je
sbb
jmp
xlat
(bad)
inc
jmp
sldt
adc
shl
pop
pop
xchg
cld
push
mov
popa
sub
push
jg
mov
adc
mov
mov
jnp
(bad)
rol
cmp
add
ds
ds
fidivr
xchg
lea
jp
xchg
pop
push
cmp
cs
jmp
addr16
and
(bad)
out
or
pop
pop
repnz
fdivr
(bad)
icebp
loopne
xor
push
jmp
mov
(bad)
xor
adc
xor
cmp
add
cwde
inc
ins
adc
das
mov
icebp
aaa
das
loopne
mov
add
xor
inc
(bad)
sbb
test
mov
xchg
pop
cld
or
dec
pop
rol
dec
lock
pop
cmp
dec
clc
fnop
mov
cmp
std
ins
sahf
push
popf
aas
and
shl
xchg
cmps
les
lock
push
push
movups
and
sbb
xchg
mov
enter
(bad)
fadd
gs
xor
jp
sahf
in
xor
xchg
(bad)
jg
(bad)
adc
and
push
push
or
sub
cmc
push
inc
cdq
jle
add
ret
cs
dec
loopne
fadd
(bad)
jge
ret
les
rol
or
pop
les
imul
jb
add
pop
and
retf
adc
push
cwde
and
repnz
push
test
pop
retf
sub
es
sub
movs
in
sub
adc
pop
sub
adc
movs
in
test
fstp
adc
mov
mov
add
cmp
pop
mov
arpl
pop
pop
adc
or
stos
shr
cmp
push
and
imul
and
ins
pop
cld
push
push
and
add
add
sub
imul
mov
outs
mov
add
dec
and
dec
mov
enter
fsub
pop
add
fdivr
ss
jbe
cmp
dec
sar
lods
and
cmp
jg
test
jle
cmp
iret
dec
xor
jl
mov
enter
movs
jg
cmp
pop
clc
jle
cmp
bound
inc
inc
stos
sub
push
adc
and
pop
pop
push
add
and
add
or
jne
push
sbb
ins
les
or
aam
or
xchg
push
add
fcom
mov
frstor
cmp
xchg
and
cmps
or
xchg
push
and
xchg
popa
mov
lods
sub
fdivr
inc
test
add
retf
cld
xchg
into
and
popa
pop
test
or
ds
ret
outs
aaa
pop
(bad)
push
jg
or
jl
push
cmp
or
mov
xor
or
mov
popf
(bad)
mov
jnp
adc
add
xor
xchg
xor
cli
mov
aam
jae
ss
mov
in
add
sub
fs
ins
adc
pop
sub
add
dec
pop
int3
sbb
inc
cmp
inc
mov
mov
jbe
sub
pushf
nop
pop
cwde
jb
cmp
imul
sbb
imul
xor
sbb
sbb
add
jnp
xor
and
rcl
sub
add
push
push
ret
xchg
push
mov
test
inc
mov
outs
outs
mov
addr16
push
and
xchg
ret
ror
repnz
rcr
jp
add
ds
or
test
pusha
lock
aad
int3
pop
or
lods
mov
mov
or
out
mov
sbb
inc
jl
mov
js
sub
sub
jb
je
lahf
inc
movs
scas
or
dec
sub
add
mov
add
(bad)
outs
add
xchg
(bad)
mov
push
jle
fcom
fild
jmp
push
push
movs
sti
cs
jmp
andps
adc
lods
imul
pop
scas
mov
or
inc
and
imul
rcr
pop
push
push
push
sub
stos
xor
mov
inc
adc
push
loopne
les
xchg
mov
mov
sub
dec
or
mov
push
out
adc
out
add
add
sub
adc
adc
push
or
adc
pop
pop
push
fstp
fld
rol
hlt
arpl
ja
les
fild
jns
or
xchg
loope
mov
push
push
push
or
xchg
clc
pop
inc
inc
scas
rcl
shl
ret
mov
mov
cwde
cmp
sahf
loope
clc
hlt
hlt
sub
mov
pop
retf
dec
jb
lock
mov
mov
lods
mov
push
repnz
(bad)
out
(bad)
out
jns
nop
push
sbb
adc
push
push
jecxz
add
imul
hlt
int3
or
inc
call
push
ja
or
in
call
loopne
fidivr
or
mov
pop
dec
mov
fcom
loopne
add
lods
jp
dec
jmp
repnz
sbb
push
daa
addr16
sbb
add
or
mov
mov
sti
test
push
add
push
lods
or
lods
data16
push
pusha
jl
push
ins
mov
lods
cmps
mov
outs
sbb
lods
mov
shl
add
push
push
imul
test
test
aam
lock
xchg
cmps
repnz
jecxz
loopne
fsubr
clc
call
into
mov
int3
cmp
push
xchg
pop
nop
outs
std
mov
add
add
scas
addr16
aaa
pop
mov
in
mov
mov
scas
sbb
pop
inc
or
adc
mov
push
sub
inc
je
ror
pop
nop
in
pop
adc
sysenter
xor
iret
imul
inc
push
adc
adc
in
imul
movs
jmp
clc
icebp
adc
inc
out
sub
xor
cmp
cmp
or
mov
or
je
sub
xchg
ss
and
repnz
cmp
movs
int3
and
aas
clc
test
inc
dec
hlt
rcr
and
add
xchg
jbe
test
push
cmp
mov
pusha
add
inc
cmps
nop
mov
imul
clc
mov
das
mov
ret
cmps
sbb
dec
push
push
out
push
out
and
and
rol
sbb
mov
push
push
adc
xchg
mov
cmp
jo
out
cmps
pop
ret
adc
fist
pop
loop
push
hlt
daa
daa
cmp
ror
xor
out
sub
shr
ins
and
mov
add
enter
cs
ins
and
add
or
icebp
adc
popa
pop
(bad)
enter
inc
and
pop
popa
add
jl
dec
mov
sti
add
mov
xor
xor
xor
repnz
jecxz
and
add
fcom
stos
dec
dec
pop
adc
in
test
push
imul
or
inc
sbb
sub
adc
mov
loop
cmp
rcr
dec
ret
mov
sub
push
push
jg
adc
jns
out
add
(bad)
fild
ds
inc
dec
mov
clc
enter
popa
inc
pop
fcom
std
je
sub
xor
jmp
pop
mov
in
fxch
jmp
pop
pop
jg
dec
pop
repnz
shl
mov
pop
xor
in
adc
add
and
fmul
in
cwde
test
xchg
cwde
push
inc
or
stos
cmps
fcmove
add
repnz
jmp
fstp
data16
pop
int3
push
push
not
inc
pop
jl
loope
jns
inc
aad
mov
sbb
das
iret
push
dec
add
sar
jo
or
mov
push
mov
mov
add
fs
dec
or
push
or
mov
ja
cmp
je
mov
cdq
or
inc
or
sbb
test
adc
add
sti
fisttp
fnstsw
or
xchg
aad
xchg
adc
lock
leave
in
stc
jp
pusha
xor
jecxz
jg
and
and
in
imul
mov
in
jnp
inc
mov
cmp
pop
icebp
(bad)
not
add
add
jge
movs
inc
mov
pop
mov
push
or
loopne
dec
lods
cld
scas
test
test
cmp
jne
add
rcl
lods
add
jmp
cmc
mov
(bad)
les
int3
mov
sbb
and
stc
sbb
sbb
fdiv
or
sbb
add
mov
movs
nop
dec
pushf
inc
shl
fidiv
and
xlat
inc
sub
leave
push
ret
fdivp
inc
and
jecxz
repnz
jmp
jae
mov
pop
call
inc
adc
scas
dec
pop
outs
or
out
or
ret
inc
sub
fucomip
js
popa
mov
fistp
inc
mov
mov
outs
fadd
in
mov
repz
out
mov
lds
add
sub
and
inc
sbb
sbb
ret
adc
jo
(bad)
or
retf
repz
sbb
sub
mov
fistp
int3
push
aad
xchg
cmps
push
or
xor
and
add
pop
or
dec
int3
sahf
mov
cmps
hlt
adc
fdivr
cld
pusha
stos
add
in
nop
add
je
scas
fwait
or
inc
cmp
and
or
sbb
inc
mov
pop
rcr
pop
mov
pop
daa
sub
loopne
lds
adc
imul
push
add
or
push
arpl
jne
ret
xchg
push
cmps
mov
push
mov
scas
inc
cmp
test
dec
jo
popa
clc
cmp
jne
mov
xor
test
dec
imul
push
push
js
mov
mov
(bad)
inc
and
lock
imul
mov
xchg
inc
ins
out
fcom
or
outs
jg
xor
xchg
inc
imul
dec
jo
jns
and
imul
sbb
into
popa
ins
dec
add
adc
sub
push
lock
ror
mov
pop
xchg
nop
in
jmp
pop
mov
(bad)
cld
repnz
add
jmp
push
add
and
scas
test
dec
repnz
jmp
pop
loopne
pop
jp
fisttp
ret
mov
loopne
adc
int3
inc
enter
xor
ja
or
loopne
mov
or
call
push
xor
mov
(bad)
cmps
push
outs
mov
xchg
xor
cmp
imul
push
jecxz
mov
pushf
push
push
sbb
xor
lock
mov
dec
popf
jge
xchg
and
cmp
into
cdq
dec
mov
dec
iret
add
and
and
jle
sbb
cli
dec
stos
jb
xchg
loope
cmp
inc
push
pop
and
fwait
and
out
or
sbb
das
sbb
movs
pop
out
jmp
cwde
add
push
(bad)
mov
sub
shl
xlat
stos
mov
bswap
mov
mov
cld
cmp
loopne
ds
rol
xchg
sahf
in
cmps
pop
mov
pop
inc
addr16
fs
mov
leave
hlt
mov
cmc
shl
xchg
call
pop
test
cdq
mov
or
fcom
jbe
cmp
pop
daa
adc
mov
lock
pusha
sub
imul
test
cmp
out
sub
push
cmc
hlt
js
out
sbb
in
popa
pop
push
mov
xor
loop
aaa
fmul
jno
and
addr16
rol
rol
inc
bound
shl
mov
sub
fidiv
inc
add
mov
ins
(bad)
in
fmul
push
adc
and
push
movs
mov
pop
test
shr
aam
fisubr
mov
push
or
or
xchg
test
mov
sub
clc
pop
pop
mov
jno
adc
xor
cmp
add
outs
nop
pop
sbb
mov
sbb
dec
nop
out
adc
retf
imul
iret
adc
lods
and
cmp
syscall
loop
xor
movs
xchg
mov
cmc
xor
or
jl
jno
ret
xor
dec
ret
retf
mov
mov
hlt
movs
sahf
xchg
cmp
sub
or
dec
sbb
inc
jo
sub
xor
ss
test
out
es
xor
cld
cld
or
add
jmp
enter
add
push
call
inc
xor
leave
clc
mov
lods
mov
push
fadd
rcl
or
and
leave
sub
mov
xor
inc
sub
adc
(bad)
loopne
or
push
scas
push
push
aaa
and
in
lahf
sub
xor
adc
test
xchg
jbe
icebp
ret
inc
inc
adc
les
sbb
push
cmp
and
mov
stos
ins
push
sbb
mov
(bad)
movzx
push
dec
sub
scas
shl
xor
loop
scas
std
pop
lds
and
lds
push
ret
mov
cmp
push
dec
push
(bad)
dec
cmp
les
push
xchg
dec
movs
add
imul
pushf
cli
sub
pop
leave
fild
sub
sti
inc
sbb
loopne
shr
xor
xor
loopne
or
call
aam
pop
dec
inc
or
inc
leave
outs
imul
push
pop
and
push
add
mov
and
pop
ret
jbe
out
js
mov
mov
fnstenv
or
mov
sbb
add
pop
jne
or
mov
adc
jo
out
inc
ret
loopne
stos
hlt
sub
rol
pop
jmp
jno
xor
xor
dec
mov
mov
mov
and
adc
cmps
stos
sub
cmp
dec
sbb
add
jno
in
and
cld
xchg
das
jnp
add
mov
sbb
daa
or
shl
adc
fsubr
pop
adc
cmc
dec
xor
inc
xor
xor
shr
(bad)
cmp
out
inc
ds
or
(bad)
xchg
add
sbb
arpl
or
ret
and
mov
pmulhuw
cmp
call
lahf
or
sbb
test
int3
mov
mov
pop
out
add
inc
test
mov
cmp
test
sub
jmp
test
and
cli
pop
sbb
inc
clc
sub
comiss
hlt
ret
mov
sbb
cmp
fist
in
sbb
repnz
or
ret
inc
and
dec
push
inc
push
fimul
or
mov
into
data16
fs
adc
push
ja
mov
adc
test
cdq
inc
add
mov
imul
cmps
inc
retf
push
cmp
aaa
iret
jne
les
outs
imul
ds
lock
pop
std
and
int3
mov
ss
dec
ffree
add
(bad)
aaa
jp
je
loopne
sub
adc
push
mov
das
dec
cli
xor
mov
dec
or
xor
ficomp
dec
mov
or
or
std
in
push
or
inc
adc
pop
dec
mov
(bad)
int
mov
xor
inc
clc
mov
cmp
mov
jbe
adc
xchg
adc
mov
xchg
test
sub
call
fmul
leave
loopne
mov
leave
dec
sub
xor
pushf
sbb
push
push
leave
dec
jo
or
shl
and
call
adc
jno
inc
mov
adc
adc
xor
xor
popa
fs
xor
mov
mov
mov
adc
lods
retf
sar
sahf
rol
les
inc
mov
das
in
sub
inc
and
mov
jecxz
mov
jmp
inc
pusha
pop
sub
(bad)
cmc
(bad)
sub
mov
test
outs
xlat
dec
in
inc
adc
or
mov
lock
(bad)
mov
mov
dec
sub
mov
dec
lock
or
retf
adc
ins
and
clc
cmps
push
mov
shl
push
bound
add
popa
les
in
or
in
add
pop
or
inc
mov
(bad)
sbb
icebp
add
cmps
mov
or
pop
andnps
ror
fmul
dec
inc
pusha
loopne
jmp
or
fild
add
loopne
mov
jp
loopne
or
add
inc
ss
pop
inc
mov
add
sbb
dec
mov
adc
mov
les
sbb
push
cmp
cs
sbb
push
or
push
sub
inc
ret
repnz
in
pushf
add
add
or
clc
add
xchg
sbb
sub
gs
lea
and
jl
push
aam
scas
sbb
rol
add
pop
sbb
xor
push
mov
adc
out
fcom
ror
daa
(bad)
push
adc
add
inc
push
neg
pop
mov
test
or
call
lds
jo
xchg
je
or
sub
lock
mov
jmp
push
cmp
mov
push
in
mov
or
popf
or
add
loop
inc
dec
and
mov
pop
dec
inc
or
aam
in
pushf
sbb
je
jbe
add
xchg
xor
lock
and
adc
test
scas
lea
add
mov
add
hlt
add
dec
ss
jecxz
cmp
retf
or
pop
jmp
jmp
dec
push
leave
inc
push
nop
into
pop
lods
adc
sub
in
repz
aam
jmp
jbe
mov
enter
es
hlt
inc
scas
ret
cmp
xor
adc
and
or
add
sub
adc
(bad)
aaa
pop
dec
dec
call
pop
inc
or
mov
sar
stc
mov
mov
add
xor
cmp
inc
in
imul
xor
nop
mov
bound
out
xchg
sub
pop
pop
mov
in
out
or
mov
jbe
adc
adc
mov
adc
fs
and
outs
ins
mov
dec
cwde
and
sub
enter
add
jno
add
es
in
jb
push
adc
bound
mov
fisttp
dec
sub
adc
or
push
mov
push
fisttp
inc
lds
pop
adc
and
xor
lock
imul
or
inc
sbb
cmp
imul
ror
movs
or
dec
push
jle
fstp
rcr
jmp
sbb
adc
or
xor
or
cld
arpl
push
dec
add
enter
pop
cld
imul
adc
inc
sub
out
xchg
cwde
cmp
mov
add
xor
adc
sbb
adc
push
push
sub
jno
out
add
(bad)
push
jo
add
pop
dec
mov
jg
or
inc
add
and
in
jnp
(bad)
iret
sbb
loop
push
mov
push
cwde
loopne
adc
clc
out
movups
push
jo
xchg
int
mov
mov
lea
(bad)
pop
mov
adc
into
or
and
repz
nop
lea
ror
xchg
or
test
xor
sahf
lock
loop
inc
adc
jmp
xor
add
lea
mov
jmp
push
sbb
xchg
fiadd
push
movs
clc
sub
and
or
(bad)
(bad)
outs
inc
mov
push
and
inc
stos
ret
xchg
adc
jg
ret
fiadd
sub
push
add
mov
shl
inc
retf
fcmovbe
loope
out
add
jle
or
adc
and
sub
inc
xlat
mov
shl
lahf
inc
js
bound
jae
or
movs
mov
into
mov
arpl
aad
jge
and
xlat
dec
xor
inc
mov
retf
aam
jns
xchg
mov
mov
movs
dec
cmc
pop
iret
push
or
sub
cld
inc
lea
or
(bad)
jge
xlat
(bad)
fisttp
rcl
sbb
sbb
sub
cli
dec
daa
pusha
add
aaa
aam
inc
jl
adc
sub
es
add
icebp
hlt
lds
ror
loopne
les
ins
adc
xchg
sahf
fbld
int
jl
repz
push
sbb
cmp
dec
sbb
fld
scas
push
push
push
xor
sbb
lea
popa
cmp
mov
and
icebp
jmp
adc
scas
fimul
mov
jae
push
add
call
jg
or
or
(bad)
out
or
sub
push
sbb
fild
mov
or
ss
push
out
jae
inc
arpl
cmp
ss
cmp
adc
xor
push
data16
pop
inc
sbb
sub
or
cmps
and
test
push
inc
call
sub
xchg
repnz
in
daa
and
mov
popa
jbe
and
popa
mov
enter
mul
push
push
add
cmp
xchg
fsub
adc
faddp
lock
loope
jle
cmp
outs
cmp
or
cmp
and
inc
push
xor
test
push
pusha
in
add
pop
jns
les
enter
fsubr
pop
sub
push
cmp
push
enter
imul
jg
test
dec
xor
cmp
sub
inc
jne
xchg
mov
add
arpl
sahf
gs
mov
mov
add
dec
mov
or
mov
daa
in
sbb
add
push
sub
mov
ret
aas
cmps
add
xlat
inc
loopne
test
mov
sbb
mov
pop
sbb
inc
iret
fwait
pop
sbb
fnstenv
stc
adc
mov
xor
xchg
lea
or
inc
ins
pushf
jmp
dec
or
add
sub
rcl
mov
mov
add
pop
popa
mov
sub
add
xchg
xchg
mov
scas
pop
xchg
outs
add
jmp
sbb
adc
in
sub
mov
dec
adc
aas
shr
test
test
push
sub
mov
add
call
cmp
add
add
and
dec
pop
adc
pop
rcr
push
rcl
adc
int3
cwde
inc
mov
test
test
test
or
inc
cmps
jne
outs
(bad)
push
cmp
add
imul
dec
jo
mov
mov
pop
clc
sub
dec
enter
sbb
xor
adc
cmp
dec
and
(bad)
mov
xor
pop
sub
shld
jae
xchg
cld
(bad)
stos
pop
sbb
push
retf
xchg
add
jno
movs
or
and
and
mov
pop
outs
push
mov
add
dec
loop
or
ret
cdq
sub
sbb
add
outs
add
dec
jo
addr16
dec
jns
and
sub
mov
xlat
cmp
aaa
sub
out
and
(bad)
mov
mov
cmps
mov
daa
mov
or
pop
push
adc
mov
mov
ficom
mov
(bad)
clc
add
and
xchg
enter
jno
or
daa
dec
pop
(bad)
stc
push
mov
adc
and
or
jnp
cmp
cmps
movs
push
push
fnsave
dec
or
dec
cmp
sub
mov
shl
loope
xor
inc
adc
mov
inc
mov
mov
dec
jb
sub
sbb
dec
pushf
jp
inc
pop
push
or
addr16
mov
lods
clc
push
gs
gs
and
sub
inc
add
imul
sbb
push
add
lahf
leave
adc
mov
add
int
cmp
jne
push
xor
sub
cmp
jge
mov
rcr
inc
and
adc
add
or
out
dec
sbb
add
push
dec
ins
add
fs
adc
mov
outs
pusha
sbb
lods
clc
loope
or
inc
jp
adc
ins
or
mov
dec
or
xchg
rcl
(bad)
add
and
sbb
mov
and
fisttp
enter
call
dec
or
inc
cmp
mov
xor
cdq
push
addr16
add
ror
push
or
movntq
out
(bad)
pusha
pop
ss
lds
test
cmp
dec
jb
sub
daa
push
hlt
jns
sbb
not
bound
hlt
inc
fsubr
clc
sbb
sub
test
mov
js
(bad)
xlat
je
popa
cmp
subps
push
cdq
js
pop
mov
ins
jmp
pop
or
pop
rol
inc
push
popa
jg
adc
sahf
imul
in
fcomp
enter
mov
inc
push
cmp
adc
loopne
add
fnsave
sub
out
enter
adc
xor
imul
xor
pop
inc
test
in
shl
dec
push
adc
pop
lock
sbb
mov
add
push
or
fsub
sub
mov
mov
or
fisttp
adc
sub
fsub
adc
pop
out
and
xchg
add
pop
or
sahf
and
mov
or
jg
pop
call
cmp
ja
cmp
jg
(bad)
cmp
xchg
xchg
sbb
sub
repnz
lock
push
in
add
ds
add
push
into
mov
inc
and
push
rcr
iret
fs
stc
stos
xchg
mov
push
test
(bad)
mov
mov
add
ror
cmp
mov
sbb
inc
push
push
fcom
fcom
mov
and
push
ja
jne
and
das
adc
arpl
or
sbb
lds
retf
xchg
rol
mov
adc
xchg
mov
daa
aad
adc
aaa
or
adc
addr16
(bad)
xchg
pop
lock
or
imul
and
mov
outs
or
scas
mov
sbb
sub
dec
sbb
xchg
and
and
lock
movs
or
push
setae
ror
mov
push
clc
and
js
jb
cmp
aaa
(bad)
ror
mov
mov
lods
test
jb
jb
mov
jb
xchg
nop
mov
jb
es
sbb
inc
sbb
add
ficom
adc
and
adc
and
mov
inc
push
push
jbe
enter
jae
inc
add
aam
daa
inc
idiv
sub
or
xchg
xchg
xor
mov
add
(bad)
test
inc
retf
mov
test
js
into
lods
imul
or
pop
mov
adc
mov
sbb
cmp
pop
das
and
add
call
stos
mov
daa
seta
add
lods
clc
inc
adc
mov
jmp
push
adc
aam
sub
jb
cmc
jne
ret
cli
dec
adc
adc
or
nop
or
sbb
fild
sbb
rol
push
arpl
pop
jle
inc
in
jmp
aam
jb
das
xchg
jg
lock
sbb
ja
mov
rol
add
push
sbb
loopne
add
cmp
dec
sbb
push
add
and
or
push
popa
mov
mov
cmp
jle
push
pop
cmp
mov
xchg
icebp
sub
rcr
sub
lock
inc
inc
pop
addr16
pop
out
retf
push
and
and
push
jae
add
dec
ds
cmp
adc
push
push
sbb
jo
sub
push
test
imul
or
lock
push
cmps
pusha
mov
adc
daa
adc
pop
inc
inc
sub
dec
cmp
ins
pop
dec
and
and
push
sbb
jecxz
add
jmp
xor
xor
xor
xchg
and
imul
cmp
mov
add
and
mov
dec
rol
and
xor
add
or
outs
shr
call
jne
xor
sub
std
or
mov
xor
jae
sahf
push
dec
jne
or
pop
mov
push
adc
jle
lea
sar
add
pop
mov
push
push
sbb
cmp
xchg
jl
dec
pop
shl
push
push
lock
mov
dec
inc
pop
cmps
xchg
dec
in
and
jb
xchg
xchg
or
and
test
inc
cmovno
jb
es
push
xor
leave
leave
adc
hlt
pop
adc
push
aam
movs
repnz
shl
cs
ins
mov
adc
push
pop
ret
jmp
rcl
mov
inc
adc
jg
inc
in
call
and
test
ret
dec
adc
clc
mov
test
neg
mov
mov
push
sub
and
test
push
mov
and
call
push
jmp
outs
lock
ds
add
adc
lds
daa
mov
push
adc
or
outs
jne
mov
ja
mov
clc
jae
push
push
mov
add
fiadd
xchg
dec
cld
push
push
rol
mov
call
or
repnz
sub
adc
pusha
jmp
cld
ret
push
push
inc
push
retf
dec
in
addr16
mov
mov
cmp
mov
sbb
add
inc
std
push
xchg
adc
prefetchw
adc
and
dec
mov
cld
mov
pop
rcl
mov
sub
jns
cmp
inc
add
fst
dec
cmp
and
push
push
out
cwde
shr
and
cdq
xor
adc
sti
push
imul
lock
xor
imul
inc
dec
fnsave
add
ja
or
imul
jnp
add
inc
dec
sub
xor
or
ins
add
mov
dec
ds
add
jo
adc
aad
repnz
mov
popa
loopne
pop
daa
cs
out
sbb
and
push
dec
pop
leave
in
stos
sub
add
les
enter
rcr
add
adc
dec
aam
nop
and
push
int3
pop
jns
out
lods
arpl
ins
inc
dec
push
out
sahf
out
mov
ja
push
out
sahf
xchg
test
ds
cs
fcomp
push
aaa
fild
fdiv
nop
mov
sbb
daa
inc
pop
add
or
cmps
es
(bad)
icebp
ins
xor
adc
jmp
shl
xchg
and
push
(bad)
enter
inc
ss
bndldx
xlat
stos
add
aaa
dec
sub
mov
cmp
inc
daa
mov
call
jne
loopne
adc
sbb
xchg
lods
mov
inc
les
call
test
shr
out
jle
imul
push
sbb
fs
mov
lock
sbb
jl
or
fcomp
daa
sbb
inc
sbb
mov
lahf
jl
push
movs
pop
sub
popa
sub
shl
jne
sbb
adc
ret
into
sub
and
adc
inc
add
pop
jo
stc
mov
pusha
or
adc
nop
and
xlat
mov
jmp
rcl
ja
cmp
sbb
mov
sub
push
lds
inc
adc
add
int3
inc
mov
jecxz
mov
scas
jg
pop
and
prefetchnta
nop
je
xor
rcr
ss
push
adc
test
jmp
popa
lock
sub
mov
dec
add
xor
sbb
mov
push
xor
lock
sbb
sbb
lahf
and
add
push
adc
jbe
mov
rcr
hlt
sub
mov
imul
adc
or
pop
mov
adc
(bad)
mov
cs
mov
shl
pop
jmp
or
in
daa
adc
sub
push
and
sub
(bad)
stc
pop
jge
push
mov
xchg
mov
enter
push
pop
daa
pop
lds
add
pop
cmp
jge
aad
push
jne
out
dec
sbb
jg
jne
sbb
xchg
pop
movs
aam
or
mov
lds
sub
sahf
into
and
push
mov
jge
inc
adc
add
xchg
sub
mov
daa
rcl
push
movs
adc
inc
and
inc
xchg
(bad)
std
popf
das
inc
dec
sahf
(bad)
test
add
or
data16
fldcw
mov
ja
xor
ret
lods
pop
add
icebp
push
pop
inc
pop
fdiv
mov
xor
push
or
dec
adc
pop
mov
dec
mov
dec
bound
or
dec
add
adc
mov
ins
jle
fwait
or
add
or
pop
adc
daa
mov
(bad)
xor
stos
or
call
fstp
dec
in
js
fdivr
cmp
test
ins
jb
test
inc
dec
(bad)
repnz
jmp
xchg
or
lahf
pushf
mov
lock
loopne
das
dec
shl
fiadd
jmp
pop
leave
imul
xor
and
sbb
sub
movs
shl
ja
in
in
nop
daa
call
fldenv
or
lahf
xor
dec
cmc
pop
jnp
mov
inc
adc
jne
mov
inc
xor
inc
test
adc
mov
in
lock
pop
wbinvd
cdq
mov
sbb
inc
call
call
ret
jmp
cld
loopne
push
cmps
xor
movs
test
inc
push
pop
fisttp
loop
or
sbb
outs
and
loope
sub
sbb
shl
int3
sub
xor
xlat
pop
clc
loope
xchg
cld
xchg
mov
out
xor
and
adc
push
shl
xor
push
stos
stos
xor
clc
and
mov
adc
inc
or
pop
push
mov
dec
push
dec
sbb
inc
add
mov
mov
loope
and
into
cld
mov
cmp
dec
je
or
sbb
and
cld
jnp
pop
popa
test
jmp
adc
or
in
jmp
push
mov
ret
lods
mov
dec
mov
pushf
aas
pop
and
push
dec
mov
inc
aas
les
adc
fdivr
and
or
sbb
pop
loope
adc
add
rcl
das
cs
adc
jle
inc
imul
aam
add
dec
cmp
xor
jbe
ins
jne
in
pop
cmp
leave
mov
xor
and
xor
pop
repnz
cmp
cmp
mov
dec
mov
sbb
leave
xchg
in
aam
and
sbb
inc
push
mul
in
adc
mov
sbb
push
ins
push
pop
sbb
cdq
dec
ins
(bad)
push
xchg
push
imul
dec
push
jo
dec
push
xor
outs
push
push
push
cdq
fs
push
or
xor
mov
fs
out
inc
out
pop
rol
inc
push
pushw
jb
xchg
inc
fmul
arpl
pop
push
jns
hlt
dec
sbb
or
push
add
and
or
push
xor
push
push
cmp
pop
dec
cmp
add
push
lock
outs
ins
arpl
xor
mov
and
shr
push
inc
daa
push
sub
(bad)
adc
jb
inc
inc
stos
push
das
push
popa
gs
inc
outs
movs
fcmovb
inc
or
ja
dec
xor
fidivr
push
jnp
lods
xchg
or
jae
daa
push
sub
mov
pusha
nop
aaa
jne
cmp
pusha
and
xchg
ds
mov
aaa
inc
fs
xchg
push
je
push
push
mov
or
cmp
inc
cmp
dec
pop
ds
movs
(bad)
sub
repz
adc
imul
retf
push
xchg
movs
jg
pop
add
ja
daa
mov
ror
lock
scas
add
add
adc
adc
push
fs
cmp
xchg
sub
pop
mov
pop
sub
enter
imul
jle
dec
jl
adc
push
mov
add
push
mov
mov
xchg
cwde
mov
test
mov
mov
enter
mov
rcl
fmul
in
mov
clc
mov
cld
add
add
mov
sbb
and
repz
jg
cmp
sbb
(bad)
adc
push
rcr
out
loop
cmp
adc
or
cmp
pop
arpl
test
xor
push
jbe
mov
fmul
push
dec
jmp
dec
gs
and
inc
sub
sbb
push
mov
cmp
sbb
fs
sub
cwde
js
add
lods
movs
xor
xchg
movs
mov
push
push
lods
loopne
push
movs
jb
or
sbb
sub
ror
or
gs
enter
xchg
add
push
movs
xor
pushf
fsubr
mov
push
aam
in
or
gs
gs
sub
test
inc
in
and
push
add
or
push
sbb
dec
gs
sub
or
fcomp
pop
mov
and
or
and
xchg
add
push
movs
xor
xor
pusha
and
push
ds
sbb
jne
je
gs
fcom
push
sbb
ins
outs
jae
and
mov
pop
ret
gs
push
mov
ficom
dec
cmp
aas
(bad)
scas
sub
je
add
dec
lods
xor
test
je
mov
mov
or
xor
imul
sub
fs
pop
dec
arpl
or
clc
jno
jae
adc
mov
daa
lea
das
jno
or
jns
jp
jae
sbb
out
dec
imul
and
mov
nop
pop
ficom
retf
adc
ret
push
lods
loope
push
or
adc
rol
scas
pop
add
fcom
mov
adc
xor
mov
iret
shl
dec
outs
push
inc
lods
mov
xor
popa
and
add
daa
(bad)
push
adc
das
fstp
(bad)
push
(bad)
cs
pop
xchg
pop
mov
pusha
sbb
jl
mov
ja
out
adc
and
mov
outs
movs
jbe
(bad)
addr16
jne
ins
outs
das
jecxz
sbb
inc
imul
das
pop
inc
fs
mov
cmp
or
xor
push
pop
loope
and
jge
push
xchg
pop
lock
cmp
outs
pop
repz
and
cmp
or
add
mov
jl
fadd
jne
xchg
in
jp
jne
add
repnz
xor
inc
arpl
mov
scas
sub
cwde
imul
cmp
mov
scas
adc
dec
inc
sub
inc
inc
scas
sub
outs
dec
inc
mov
dec
xchg
add
in
add
dec
rcl
in
push
fcom
inc
dec
push
enter
inc
nop
dec
push
fs
inc
pop
sbb
jns
fs
cs
sbb
inc
mov
xchg
add
xchg
mov
push
in
lock
inc
out
pop
mov
adc
mov
push
or
xchg
mov
inc
mov
mov
jle
push
fadd
push
or
add
push
out
call
cmovs
les
ins
ins
hlt
les
or
xchg
sub
xor
push
xor
xor
xchg
and
inc
dec
sbb
add
inc
int3
or
ds
(bad)
leave
cmp
ret
or
test
test
mov
leave
jl
dec
push
push
add
cwde
pop
xor
mov
or
add
int3
add
inc
inc
icebp
push
mov
inc
adc
sub
or
or
cmc
push
xor
cmp
js
out
dec
jmp
add
cmp
push
add
nop
mov
sbb
aas
cmp
sbb
js
dec
mov
test
xor
clc
inc
sub
inc
es
and
adc
sbb
pop
pusha
leave
arpl
outs
inc
retf
nop
mov
neg
hlt
out
mov
xchg
sub
sahf
aaa
nop
(bad)
fs
push
push
adc
ja
out
inc
movs
and
lea
cli
xchg
mov
gs
stos
out
push
ins
push
push
movs
add
or
dec
mov
in
dec
in
fldenv
push
nop
retf
jno
and
push
pop
xlat
cmp
das
leave
cwde
add
mov
push
fcomp
ds
adc
adc
ins
inc
es
push
lods
push
dec
es
mov
movs
mov
out
or
daa
push
push
push
adc
push
sbb
pop
mov
sub
in
add
add
test
sar
hlt
arpl
adc
sbb
bound
xor
push
push
popf
lock
and
pop
dec
outs
outs
cli
popa
das
xchg
xchg
inc
ins
ins
pop
push
outs
pop
sub
and
push
cli
inc
dec
mov
shr
dec
mov
adc
dec
aas
push
mov
sbb
shl
dec
outs
(bad)
jbe
jne
add
sub
lock
and
add
cs
inc
loopne
add
and
mov
loop
mov
aaa
ins
fs
addr16
lock
inc
imul
jnp
sub
mov
jb
retf
cmp
xlat
nop
pop
or
into
aad
cs
mov
ds
outs
mov
enter
adc
cmp
or
mov
jns
fidivr
mov
push
jl
iret
leave
les
mov
sbb
mov
push
xor
xor
out
sub
adc
jbe
pusha
jne
cmp
and
icebp
shl
xor
cmp
mov
mov
cmp
cmp
dec
inc
add
test
sbb
add
rcr
cmp
js
test
push
pop
adc
pushf
adc
test
inc
cs
dec
pop
mov
ja
push
lock
inc
aaa
cmp
fild
test
mov
outs
loope
imul
adc
(bad)
or
sub
jae
jae
mov
jae
rcl
xor
or
jge
inc
ret
sub
js
add
inc
sub
sbb
add
and
movs
push
adc
add
dec
jle
add
inc
sbb
jns
dec
xchg
inc
sub
pop
jne
push
and
or
and
cmps
xor
sbb
xchg
mov
stos
push
jmp
mov
scas
add
nop
out
fmul
sti
jmp
xor
mov
rol
test
push
sbb
mov
pop
and
pop
xor
cmp
or
or
aas
xor
mov
fidivr
xor
or
into
rcl
cmp
in
pop
fstp
push
cmp
leave
leave
ins
cmp
cmp
ds
leave
leave
leave
aas
and
and
leave
leave
leave
and
leave
daa
sub
sub
leave
leave
leave
sub
leave
das
adc
adc
leave
leave
leave
adc
leave
pop
sbb
sbb
leave
leave
leave
sbb
leave
pop
add
add
leave
leave
leave
add
leave
pop
or
cmps
or
cmps
stc
mov
mov
out
sahf
lock
call
sahf
out
fcom
sahf
out
sar
out
sahf
mov
test
mov
jns
push
nop
dec
mov
jns
out
cmp
sahf
out
sahf
jo
push
sahf
out
pop
adc
or
repz
out
inc
cld
dec
cmp
iret
repz
xor
sub
and
cmp
repz
aam
int3
or
iret
repz
mov
jns
out
lods
call
jns
pushf
fcom
out
test
jl
je
jns
out
ins
test
mov
pop
cwde
push
out
test
call
mov
dec
daa
nop
das
mov
and
xchg
je
mov
sub
fst
in
pop
ins
dec
das
out
in
or
and
push
xchg
push
add
sub
push
cli
inc
cld
rol
pop
pusha
mov
fsubrp
pop
jle
xchg
and
loope
push
ins
cmps
mov
std
and
arpl
loopne
and
pop
ja
push
inc
jb
cmps
xchg
mov
imul
push
push
mov
mov
push
xchg
inc
out
call
pop
or
push
inc
aas
xor
xor
xor
int
sub
fmul
dec
fisub
jo
inc
push
adc
in
push
nop/reserved
adc
cwde
mov
cld
(bad)
mov
add
and
scas
inc
ror
repnz
(bad)
push
mov
sbb
and
sub
mov
ret
mov
mov
sub
aaa
repnz
dec
push
mov
sub
mov
ror
and
(bad)
enter
les
xor
iret
dec
inc
push
dec
jg
push
(bad)
imul
jp
rcr
fstp
push
push
push
and
ja
and
je
mov
cmp
sub
shl
pusha
xchg
int3
scas
push
mov
lods
fcom
or
fmul
ja
repnz
push
cmc
pop
adc
jg
lock
sti
stos
aam
push
push
adc
inc
outs
jb
popa
je
or
pop
es
sbb
jb
data16
je
aas
cli
jnp
or
mov
test
popf
sub
movs
cs
or
inc
push
add
jg
dec
xchg
jb
and
jne
daa
adc
bound
das
push
fmul
xchg
in
into
adc
fsub
push
inc
xchg
fcom
pop
add
repnz
nop
push
(bad)
fmul
xchg
push
jo
pop
loopne
mov
push
push
push
mov
test
(bad)
pusha
mov
mov
(bad)
mov
xor
xor
sub
xor
dec
imul
sub
push
add
(bad)
xchg
fisttp
jle
outs
add
arpl
ins
push
arpl
imul
mov
outs
pop
js
bound
fnstsw
jnp
es
jb
jb
popa
or
mov
popa
dec
es
mov
fnstsw
jae
jbe
es
div
test
mov
addr16
in
fnstsw
jb
addr16
add
mov
imul
and
cmps
ins
daa
push
idiv
jg
sub
ins
das
(bad)
mov
sbb
and
sbb
not
shr
loope
cmp
pop
je
jo
ins
leave
sti
pop
jb
arpl
jns
or
dec
pushw
das
add
shl
imul
hlt
lock
jecxz
lea
ret
add
add
mov
cmp
inc
pop
inc
pop
cmp
adc
add
sbb
push
loopne
pop
mov
jo
dec
pop
dec
add
lock
imul
push
add
mov
jg
jo
sbb
gs
rol
inc
mov
xor
movs
lahf
or
js
mov
push
push
xor
retf
ins
pop
push
xor
ins
ins
push
or
add
scas
mov
loop
push
call
fstp
or
or
ret
cs
icebp
movs
jb
jae
sbb
cld
or
mov
xor
into
shl
or
mov
add
xchg
add
xor
sub
call
xor
push
lock
sub
enter
adc
sahf
add
mov
inc
es
mov
mov
(bad)
data16
sbb
xchg
int3
push
xchg
or
nop
push
or
popa
loope
dec
sub
inc
mov
sbb
fs
sbb
repz
inc
jb
cmps
imul
out
fwait
push
pop
pop
or
or
or
or
or
or
out
adc
adc
adc
jns
out
push
pop
sbb
sti
(bad)
jns
sbb
sbb
push
pop
and
and
and
fs
fmul
repz
or
sbb
repz
adc
out
or
jns
cmps
sbb
cmp
pop
sahf
out
sahf
outs
adc
out
aad
hlt
add
repz
repz
sub
dec
push
pop
imul
xchg
retf
fwait
add
jb
in
or
mov
sub
or
retf
dec
or
or
in
sbb
push
or
and
and
xchg
push
cs
and
adc
in
retf
adc
push
mov
push
inc
push
cs
dec
xchg
dec
sub
in
retf
pop
sbb
jmp
xor
sbb
sub
bound
xchg
cmps
pop
and
and
xchg
cmps
push
fs
and
in
push
jns
and
and
movs
xor
and
add
mov
jecxz
in
mov
pop
xor
inc
xor
loopne
les
sysret
jmp
sbb
dec
ret
dec
fcomp
inc
cmp
inc
sahf
mov
shl
push
lea
ja
inc
sub
push
jnp
arpl
test
std
pop
ret
pop
push
inc
clc
push
jb
retf
fsubr
add
sbb
dec
lock
sub
lock
aad
in
scas
adc
int3
mov
pop
gs
xor
xchg
in
addr16
fs
push
loopne
fadd
jmp
dec
push
nop
lea
mov
dec
dec
lods
sar
sbb
fsubrp
and
dec
dec
jbe
mov
pop
fs
jnp
addr16
jecxz
and
xor
inc
push
jg
cmp
popf
cmp
in
adc
lock
cmp
adc
adc
push
sub
push
push
mov
cmps
jne
sub
inc
test
sub
xchg
jo
push
stos
pop
add
xor
out
mov
add
or
add
xchg
dec
dec
imul
rcl
rcr
sbb
jae
in
popa
cdq
pusha
or
or
sub
ja
mov
scas
mov
ds
xchg
rol
jns
test
mov
inc
pop
icebp
inc
out
sbb
pushf
out
scas
inc
adc
aam
neg
ret
es
mov
push
and
cmp
jnp
jnp
jl
pusha
push
fsub
push
clc
push
jo
mov
jnp
push
in
sub
es
test
jge
mov
cmp
lods
out
push
cmp
jne
je
jecxz
add
inc
mul
fs
adc
sub
push
add
dec
ret
inc
(bad)
jmp
inc
(bad)
push
or
or
push
push
and
push
add
xor
inc
(bad)
lods
cdq
cmp
outs
data16
nop
hlt
push
fsubr
imul
popf
repz
fsub
push
call
xchg
add
and
xor
loopne
mov
mov
ds
arpl
or
mul
cmp
jge
mov
cmp
ins
ds
sar
ins
iret
cmps
fimul
inc
jp
les
add
faddp
call
cmp
ja
fcos
mov
aam
cwde
jnp
push
push
cmps
sbb
outs
loopne
popa
mov
sub
pop
inc
xchg
and
push
push
jae
adc
mov
out
test
and
hlt
bound
jge
jg
jg
sub
pushf
jle
mov
(bad)
idiv
push
mov
mov
mov
cmp
adc
ret
cmp
popa
nop
addr16
and
shl
push
xor
jo
sbb
fistp
or
or
add
dec
repnz
int3
jge
or
sbb
pop
pushf
mov
popa
mov
je
jmp
inc
add
add
sbb
and
mov
jo
jo
inc
int
push
loope
or
mov
fdiv
and
mov
jnp
mov
int3
push
in
jnp
inc
dec
mov
in
repz
in
or
xchg
xchg
xor
add
mov
lock
mov
imul
and
mov
jae
movs
test
lods
jp
push
cwde
push
sub
sbb
pop
lods
mov
jp
es
es
in
adc
xor
mov
(bad)
clc
mov
add
shr
pop
fwait
adc
call
inc
pop
pusha
sbb
add
(bad)
push
sub
jnp
adc
push
addr16
js
in
test
iret
inc
push
mov
mov
and
dec
inc
test
or
cmp
ret
rcl
adc
add
fs
mov
push
push
inc
sbb
pop
or
sti
js
dec
sbb
or
adc
call
test
dec
push
fsubr
sub
and
push
push
outs
jo
jo
jns
call
fs
ss
mov
imul
lea
inc
push
sahf
pop
daa
retf
xchg
call
addr16
fiadd
xlat
rol
ficomp
pop
mov
jae
and
add
in
and
and
adc
test
fadd
int3
pop
mov
cdq
pop
inc
and
xchg
sub
xor
pop
in
mov
xchg
out
jns
xchg
sub
add
add
fwait
in
mov
push
push
dec
daa
rol
jb
iret
imul
ret
or
nop
out
fmul
sub
or
lock
sbb
ins
rcl
pop
repnz
shr
pop
jl
dec
neg
inc
enter
push
in
call
mov
fcomp
mov
push
cs
outs
sub
pop
repnz
add
push
int3
jb
pop
fnsave
xchg
call
loope
sahf
dec
push
call
cmps
and
das
xor
or
fnstcw
fcomp
xor
dec
loopne
leave
pop
repnz
add
ficom
jbe
add
xchg
into
xchg
or
dec
mov
adc
xor
mov
inc
rcl
test
xlat
sbb
or
add
adc
bound
pop
adc
sbb
adc
mov
push
sbb
or
ror
mov
ins
adc
dec
mov
lea
or
sbb
daa
rol
mov
out
or
add
xor
dec
mov
scas
adc
and
xchg
add
lds
cmp
add
aaa
or
addr16
das
js
mov
fimul
(bad)
(bad)
mov
pop
sahf
and
jl
movs
int
jb
in
xchg
xchg
and
cmp
loope
repnz
fnstcw
push
sub
or
ds
cmp
lods
mov
mov
cdq
adc
lea
adc
call
adc
ins
dec
mov
paddusb
mov
add
adc
mov
mov
out
imul
mov
push
mov
xor
xchg
add
in
imul
push
xor
lods
dec
(bad)
icebp
loopne
and
mov
or
lods
test
push
xlat
or
xor
pop
rcr
call
cld
js
mov
jo
mov
inc
inc
ins
test
push
inc
js
(bad)
into
shl
sbb
dec
push
call
sbb
aad
push
dec
or
mov
mov
pop
jnp
inc
mov
or
cmp
ror
imul
cmp
lods
test
arpl
mov
ret
fcomp
xchg
cld
dec
dec
jbe
ror
inc
gs
lea
adc
movs
jae
dec
arpl
pushf
in
add
adc
jns
adc
sub
xchg
gs
mov
or
add
dec
or
rep
fcom
dec
jne
pop
jb
or
inc
push
fs
adc
push
adc
adc
mov
add
imul
adc
ins
mov
push
jecxz
jecxz
jne
outs
jae
sbb
xchg
or
sbb
and
sbb
call
cmp
mov
test
push
pop
rcr
or
sub
test
jae
mov
dec
ins
gs
add
and
fmul
jl
sub
mov
cmp
and
lods
jnp
ds
test
sbb
dec
clc
push
fst
adc
repnz
or
push
jmp
add
or
and
or
mov
daa
add
sub
sub
ret
push
popf
inc
push
jnp
bswap
or
dec
mov
xlat
sub
inc
cmp
loop
outs
mov
call
push
lock
add
adc
sbb
xor
enter
test
and
sub
pusha
into
jne
or
or
and
push
xor
dec
jo
lahf
mov
add
repz
les
xchg
cmp
dec
popa
leave
shr
and
dec
cmp
cmp
cmp
ds
sbb
inc
mov
xor
pop
inc
add
fisttp
inc
inc
add
inc
inc
or
inc
(bad)
jns
mov
daa
subps
dec
inc
push
or
adc
test
cmps
jge
je
pop
adc
mov
inc
cmps
dec
in
sbb
retf
xchg
add
int3
add
in
add
cmps
add
xor
inc
les
mov
or
or
xor
push
test
jne
out
push
sub
test
mov
or
pop
adc
dec
jge
mov
retf
mov
rcr
adc
mov
and
push
imul
adc
out
adc
push
or
inc
inc
and
(bad)
ffreep
or
leave
addr16
ss
ja
ss
int3
idiv
pusha
arpl
jmp
and
jecxz
push
xchg
pop
retf
adc
jg
popf
jne
mov
or
arpl
ror
fild
in
jle
adc
jo
mov
and
jp
sbb
cwde
mov
adc
(bad)
pop
sub
repnz
mov
jecxz
mov
mov
fbstp
mov
xor
or
sbb
enter
cmps
adc
std
je
jmp
cmp
pop
push
add
js
bound
aad
dec
inc
and
push
(bad)
mov
or
loopne
inc
dec
mov
xchg
add
or
imul
pop
add
cmp
push
scas
mul
mov
aam
dec
or
dec
inc
cmp
cmovle
std
adc
mov
out
imul
mov
in
adc
add
adc
mov
mov
clc
cld
adc
add
mov
push
jns
jno
addr16
add
push
push
mov
sbb
ror
cmp
sub
push
or
es
xor
mov
xchg
cwde
cmp
imul
jb
and
fs
dec
mov
cdq
ret
aad
mov
adc
mov
jecxz
cmps
pop
pusha
mov
or
jecxz
inc
arpl
repnz
jne
cmp
ror
cmp
dec
pusha
jns
mov
pop
cmp
subps
fsub
fcomp
xor
and
adc
lock
mov
add
pop
xor
in
push
push
mov
or
jmp
cmps
push
cdq
in
das
xchg
adc
add
ins
cld
mov
or
and
and
popf
(bad)
add
xchg
adc
xor
es
ret
add
cmps
inc
push
push
push
dec
dec
push
scas
sub
add
xor
lahf
mov
sub
xlat
and
enter
add
iret
or
fisubr
pop
fsub
popa
jmp
dec
(bad)
jp
les
sub
mov
xor
add
mov
or
sbb
test
pop
ret
test
adc
add
push
push
and
dec
dec
xor
mov
sub
jae
dec
(bad)
lods
jne
aaa
mov
jmp
lods
push
push
sbb
jne
aam
mov
es
pop
arpl
push
sub
inc
xor
ins
adc
xchg
mov
pop
cmp
inc
xchg
dec
dec
imul
or
icebp
add
push
add
jmp
mov
das
sbb
xchg
sbb
aad
pop
add
call
(bad)
or
loope
js
inc
adc
int3
mov
in
and
daa
mov
div
adc
aad
dec
les
scas
adc
or
out
out
push
cmp
adc
add
(bad)
dec
lahf
cmp
mov
sub
inc
xor
xchg
addr16
mov
popa
movs
dec
xor
and
(bad)
jge
inc
or
stc
or
add
mov
and
push
and
push
and
lods
sbb
xchg
cmp
cmp
push
dec
rcl
test
aaa
inc
mov
add
sbb
push
mov
mov
inc
inc
pop
sbb
test
lea
stc
data16
mov
scas
movs
ret
fdiv
imul
xlat
inc
sbb
sbb
(bad)
xlat
mov
sub
xlat
popa
sbb
imul
inc
daa
ins
mov
adc
js
lods
xlat
jmp
inc
test
iret
inc
stc
or
cmps
adc
test
and
scas
aaa
cmp
xor
mov
xor
repnz
mov
(bad)
inc
push
add
mov
sti
idiv
scas
pop
add
sub
shl
and
push
adc
cdq
inc
dec
ret
xchg
cmp
cmp
cmps
mov
pop
jmp
stos
js
daa
pop
xchg
mov
adc
fwait
test
mov
xor
popf
arpl
push
retf
sub
out
aas
pop
and
add
sub
and
or
and
jmp
mov
js
loope
shl
ret
jae
mov
repz
cmp
jl
inc
mov
test
pop
adc
mov
mov
dec
ret
frstor
xor
imul
cmp
push
cmps
sub
xor
fist
leave
adc
pop
dec
ret
(bad)
push
mov
loopne
xchg
mov
jge
sbb
nop
mov
mov
ret
pop
(bad)
test
and
test
(bad)
and
lock
pop
jmp
mov
loopne
jecxz
push
or
retf
clc
scas
xor
fimul
sub
bound
fiadd
push
inc
call
and
fs
mov
cmp
or
push
test
lock
sahf
xor
pop
cmp
xor
cmp
xchg
jge
and
sub
out
jmp
dec
push
or
push
(bad)
adc
nop
sub
fistp
mov
jo
xor
inc
or
sbb
mov
movs
and
inc
lds
pop
out
std
push
xchg
arpl
int3
xor
imul
mov
aam
js
aaa
add
inc
jne
jmp
dec
mov
imul
jns
dec
mov
daa
call
pop
jecxz
sahf
pop
rcr
call
retf
test
fld
ss
adc
mov
or
sbb
pop
loopne
(bad)
mov
pop
sbb
xlat
xchg
fucomp
push
lods
cmp
jnp
or
ret
mov
dec
fcmovu
add
aaa
fdivrp
adc
mov
inc
sbb
add
ret
xor
add
xchg
lods
ins
xlat
mov
mov
imul
add
mov
pop
or
neg
mov
adc
outs
leave
mov
dec
lahf
inc
cmps
in
das
mov
pusha
jmp
adc
fisub
mov
cmps
xchg
xchg
jle
sbb
in
xchg
dec
xchg
dec
xor
cmps
cmp
cmp
(bad)
push
jmp
je
rcl
and
test
push
fwait
push
push
push
mov
adc
push
cwde
in
add
xor
and
retf
clc
and
test
or
dec
xchg
and
pop
push
in
lods
or
sar
cmp
cmp
daa
add
or
retf
sub
loope
inc
xchg
and
dec
sbb
jmp
cmp
add
xchg
push
mov
cld
ins
pushf
mov
push
rcl
test
inc
jne
mov
cdq
fiadd
movq
xor
rcr
jns
pop
ds
mul
jb
(bad)
sbb
inc
cmp
outs
ret
inc
pop
sahf
push
je
inc
xor
sbb
adc
inc
jne
mov
mov
jb
pop
sbb
or
pop
jae
sub
pop
call
xchg
ins
mov
add
mov
or
and
push
push
xchg
pusha
or
rol
jno
loopne
pop
mov
push
adc
push
and
adc
popa
xchg
shr
enter
addr16
nop
push
dec
es
aas
cmp
add
push
mov
or
ror
and
mov
dec
pushf
lock
or
xchg
(bad)
mov
je
push
sub
hlt
popf
gs
cmp
sub
sub
mov
mov
jg
push
imul
dec
or
pop
in
scas
mov
mov
and
js
and
mov
mov
or
jg
xor
cs
and
fwait
test
std
cmps
in
inc
jne
inc
pop
jg
pop
add
pop
dec
sbb
add
mov
dec
repnz
add
call
popa
sbb
jmp
cmc
setb
push
adc
xor
(bad)
xor
xor
retf
retf
push
add
sahf
test
test
repnz
aaa
rcr
or
cmps
cmps
nop
add
jns
jb
jb
or
or
push
and
fsubr
test
pop
call
mov
stc
jne
and
or
jmp
fcomp
shr
enter
and
nop
cwde
aam
pop
dec
dec
push
push
inc
dec
pop
fistp
ss
jnp
xchg
add
inc
pop
lock
push
xor
sbb
scas
in
xchg
jge
rcr
loopne
mov
scas
sub
pusha
mov
jo
retf
jl
aas
sbb
mov
sub
pop
(bad)
adc
and
add
add
mov
pop
inc
sbb
scas
stos
in
sub
xor
pop
arpl
ins
shl
or
or
or
and
add
or
dec
mov
cmp
out
ror
add
(bad)
clc
mov
inc
loop
jnp
xchg
arpl
lock
mov
and
in
int3
or
mov
scas
xchg
push
xlat
in
in
xor
arpl
mov
cmp
(bad)
aas
add
(bad)
jmp
jle
dec
mov
add
push
ss
mov
(bad)
repz
adc
mov
or
adc
mov
clc
aad
inc
add
aas
(bad)
cmps
mov
lock
out
pop
int3
scas
pop
xor
jge
or
pop
mov
daa
mov
pop
pop
or
jmp
inc
fcomp
cmc
in
push
xchg
jmp
pusha
jp
dec
(bad)
jo
movs
adc
lock
add
adc
mov
or
pusha
gs
mov
push
mov
imul
mov
adc
fdiv
in
xor
cmps
nop
xchg
loopne
sub
call
push
lods
xchg
call
dec
and
inc
xor
cmp
in
mov
lea
adc
cmp
cmp
jge
and
xchg
movs
cmp
or
das
xor
add
aam
mov
loop
icebp
dec
pop
shl
add
pop
adc
rcl
mov
mov
lea
sti
dec
xor
int3
callw
mov
push
inc
or
mov
mov
cmp
cmc
or
add
sbb
mov
add
shr
aas
sbb
or
push
aam
loopne
nop
mov
(bad)
test
sub
in
mov
call
sub
xchg
or
or
dec
xchg
or
add
lods
and
call
pop
add
stos
xor
repnz
inc
jmp
sub
test
add
mov
or
jae
adc
jb
mov
add
adc
inc
mul
mov
stos
cmc
inc
inc
sub
push
mov
int
xor
clc
ret
adc
je
retf
cld
popa
sar
and
push
mov
rol
dec
push
xlat
xchg
fwait
jp
mov
out
pop
adc
mov
pop
pop
and
push
jp
nop
jp
in
push
xchg
test
sbb
arpl
dec
adc
push
xchg
jo
pop
cwde
jbe
and
jo
sbb
test
adc
or
xchg
xor
mov
push
mov
lea
sar
ins
ret
pop
pop
push
clc
data16
mov
sub
loope
adc
inc
xlat
add
inc
sbb
mov
movs
xchg
xor
je
fs
jne
xor
sar
movs
std
add
ret
sbb
lods
inc
mov
adc
in
mov
int
sbb
mov
sub
fwait
and
mov
(bad)
int3
dec
xchg
test
sbb
sbb
nop
mov
pop
fldcw
sub
and
dec
std
xor
shl
(bad)
loopne
pop
je
jg
aam
add
fdiv
or
push
dec
les
nop
arpl
inc
sub
jg
mov
fwait
sbb
je
sub
push
sub
loop
add
push
ret
push
mov
push
retf
rol
xchg
mov
in
hlt
fwait
mov
add
dec
adc
pusha
adc
das
sbb
das
test
dec
mov
adc
and
cmp
aaa
rol
mov
sub
cmp
add
and
sbb
adc
sbb
add
xor
loope
push
jle
or
fucom
mov
pop
addr16
adc
pop
push
push
aam
sbb
or
loopne
xchg
movs
cmp
rcl
rcl
test
lea
sub
test
rol
and
aas
sbb
xor
adc
pop
mov
pop
xor
add
mov
inc
sar
mov
das
cmp
pushf
pop
shl
push
or
xchg
xchg
mov
jmp
dec
push
lock
movs
into
dec
in
repnz
lock
nop
push
lock
and
outs
fistp
push
bound
mov
jb
je
mov
(bad)
sbb
lea
inc
popf
dec
int3
xchg
xchg
mov
test
daa
rcr
enter
lds
and
nop
fsub
add
pop
mov
aas
in
inc
add
inc
movs
mov
inc
mov
enter
inc
clc
mov
push
mov
or
or
and
xor
add
cmp
and
outs
jae
pop
mov
jnp
rol
loopne
jae
popa
shr
mov
mov
cmp
xchg
mov
xor
clc
out
or
cmps
adc
psubusw
enter
cwde
xchg
lods
aas
and
jb
enter
lock
push
jb
adc
push
jns
jo
sbb
loopne
pop
xchg
inc
loopne
pop
mov
sahf
out
jne
test
xchg
popf
movs
lods
dec
push
push
sahf
out
pop
gs
add
loope
sbb
stc
aaa
fcomp
adc
push
sbb
xchg
(bad)
es
(bad)
push
lea
stos
inc
and
xor
test
loope
push
stos
jbe
sbb
xchg
push
xor
mov
in
adc
and
ret
jo
sbb
bound
mov
push
lahf
fwait
jns
cmp
int
into
adc
clc
push
pop
mov
push
mov
dec
movs
mov
inc
xchg
ret
or
iret
sub
in
leave
pop
popa
adc
push
or
push
popf
pop
ficom
loop
pop
add
push
fild
inc
pop
mov
pop
mov
loope
lea
nop
in
sub
sbb
add
dec
loope
or
popa
test
bound
inc
pop
cld
cmc
hlt
cmp
test
xchg
jns
test
(bad)
cmp
or
add
push
or
out
lods
sti
mov
jecxz
dec
mov
mov
cmp
inc
dec
dec
(bad)
mov
and
popa
mov
adc
pop
inc
xor
ss
popa
dec
int3
enter
add
dec
or
jmp
mov
rcr
pshufw
movs
loopne
and
stos
mul
mov
push
ins
cmp
xchg
mov
dec
sbb
sahf
in
add
jo
in
loopne
aam
call
inc
sbb
fs
push
lock
scas
push
cmp
cmp
add
xor
cmp
stc
fwait
movs
push
in
or
sub
jecxz
aaa
add
sub
sub
and
gs
xor
sub
push
pop
sbb
cmp
push
sub
and
dec
gs
dec
xor
sub
les
fimul
mov
cwde
or
out
add
in
adc
mov
xchg
or
daa
or
inc
pop
ror
test
xchg
mov
lds
test
inc
or
lock
mov
jmp
mov
ss
aad
mov
pop
daa
sbb
out
push
or
imul
ret
outs
or
(bad)
sub
mov
cmp
pop
push
mov
or
(bad)
stc
sub
jo
cmp
cld
mov
ins
jo
inc
call
jo
sub
or
sbb
adc
leave
and
sbb
sub
push
pop
ret
fcom
mul
in
xlat
aaa
sbb
in
imul
or
add
sbb
dec
les
and
cmps
cmc
or
push
(bad)
(bad)
dec
movs
(bad)
cmps
test
jae
lahf
test
loop
fnop
and
lods
xor
or
xor
retf
add
cld
or
adc
or
pop
or
js
xchg
sbb
imul
enter
cwde
rcl
pop
inc
mov
dec
jnp
inc
lock
mov
mov
jne
and
and
in
dec
and
sbb
lock
xchg
out
shl
or
adc
out
aaa
mov
and
fld
mov
push
add
mov
xor
mov
sbb
pop
cs
push
dec
dec
dec
inc
dec
push
add
inc
mov
mov
test
xor
aaa
aaa
test
hlt
jne
or
or
xor
scas
loopne
inc
bound
cmps
adc
jns
jmp
test
outs
aas
dec
cwde
inc
aam
cmp
jne
push
push
jne
mov
ins
imul
sti
jmp
bound
pop
retf
jno
add
xor
inc
fwait
rcr
aam
mov
cmp
aaa
jb
or
inc
and
add
adc
or
mov
and
mov
repz
fcomp
push
push
aaa
movs
pop
mov
cwde
lock
movs
cs
pop
add
sbb
ret
cmp
or
or
mov
stos
std
jp
or
mov
(bad)
pop
loopne
mov
sub
dec
pop
aaa
xor
cwde
jb
cwde
sbb
psadbw
add
inc
mov
push
(bad)
je
adc
and
or
adc
jo
mov
std
stos
out
push
lods
call
sub
jo
cmp
aam
ficomp
cdq
add
adc
mov
mov
pop
shl
add
push
inc
xchg
ds
out
add
fidivr
add
adc
dec
xchg
leave
imul
les
popa
add
lods
or
inc
outs
jnp
rcl
ins
jmp
adc
adc
push
push
or
push
or
outs
lods
push
add
das
stc
inc
lods
inc
add
inc
add
xlat
inc
repz
mov
aad
imul
(bad)
rcr
std
sub
push
inc
loopne
in
mov
and
ror
pop
inc
inc
pushf
xchg
mov
shl
push
adc
xlat
push
sar
es
push
push
adc
sbb
cmp
adc
or
loopne
push
dec
push
test
test
int
sub
lods
inc
ss
inc
clc
xlat
adc
add
fdivr
adc
daa
or
scas
pop
cmp
cmp
push
jb
scas
pop
fcom
sbb
push
inc
mov
pop
fdiv
(bad)
(bad)
sub
leave
push
mov
fidivr
rcl
pusha
push
adc
sub
dec
ror
js
aas
and
ret
xor
mov
das
mov
mov
mov
scas
push
fiadd
ret
inc
cmps
adc
ss
mov
add
scas
sub
and
inc
imul
sbb
mov
das
nop
mov
xchg
xor
aaa
mov
dec
sbb
dec
fs
xchg
and
nop
sbb
mov
ret
cmp
or
inc
adc
sub
cmp
jbe
or
pop
ins
ss
xor
add
ins
bound
ret
inc
je
or
stc
or
or
lods
jge
lods
clc
or
cli
ins
popa
in
arpl
xchg
scas
(bad)
out
mov
or
sbb
xor
fs
stc
aaa
arpl
jbe
or
dec
cld
emms
add
sub
psubb
pop
jnp
in
imul
ror
fwait
add
mov
mov
push
push
cli
sub
movs
dec
pop
mov
push
repnz
jo
repz
popa
imul
adc
test
imul
mov
pop
or
mov
xchg
add
and
test
not
dec
pushf
rcr
xchg
xor
mov
cmp
sbb
test
inc
jl
ins
push
adc
sti
push
imul
mov
inc
adc
adc
and
jmp
add
mov
hlt
js
inc
or
out
ins
dec
dec
push
or
mov
adc
add
xchg
dec
repnz
pop
imul
or
adc
sbb
push
shr
dec
adc
and
std
mov
retf
dec
das
or
adc
add
mov
inc
mov
and
push
test
xor
pop
mov
mov
sub
mov
xor
dec
leave
add
mov
sub
xchg
dec
lock
inc
jnp
punpckhbw
leave
ins
xchg
out
ja
push
inc
cwde
mov
aas
pop
iret
xlat
add
and
xor
mov
inc
leave
imul
cmp
push
nop
lock
or
xor
inc
and
into
push
mov
ret
mov
das
sbb
or
mov
cwde
(bad)
adc
imul
popa
jb
gs
mov
(bad)
test
outs
arpl
sbb
in
scas
inc
pop
mov
iret
out
adc
adc
sbb
push
outs
leave
jmp
enter
out
aaa
xchg
loope
js
gs
cmp
add
mov
(bad)
fstp
paddusb
sbb
(bad)
(bad)
adc
xchg
movs
xchg
adc
adc
add
jnp
add
sti
pop
adc
dec
and
rcl
jmp
xor
test
add
mov
das
mov
add
mov
push
add
adc
add
push
sti
rol
and
xchg
imul
and
nop
xchg
cmp
scas
out
and
adc
jbe
sub
or
xor
clc
dec
adc
gs
imul
sbb
push
mov
stos
ja
sbb
test
xor
mov
sbb
int3
test
lahf
mov
mov
push
push
aaa
test
mov
stos
xor
rol
mov
cmp
pop
jbe
pop
add
and
xor
pusha
adc
lods
bound
out
aas
lds
inc
ds
inc
dec
out
shl
xor
adc
push
pushf
adc
aam
push
inc
xor
cmp
aas
int3
sub
fcmove
adc
push
push
xchg
or
in
and
into
jle
aas
or
xor
dec
mov
lods
dec
cli
add
add
add
add
jg
hlt
or
pop
add
or
push
mov
mov
mov
mov
mov
or
dec
mov
or
sbb
cmp
inc
mov
sbb
(bad)
in
(bad)
jmp
jmp
(bad)
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
(bad)
mov
xlat
call
call
call
call
call
call
call
dec
fwait
dec
adc
into
dec
dec
dec
dec
icebp
call
ins
pop
in
leave
dec
cs
retf
sub
jl
iret
jnp
cmp
push
movs
push
cld
in
ss
sbb
jge
ja
pushf
hlt
xor
cs
or
sahf
cmps
repnz
sbb
dec
and
sahf
out
push
hlt
cwde
and
js
nop
ss
div
test
pop
aam
push
js
lds
and
push
fadd
jb
std
(bad)
ja
push
xchg
adc
or
or
in
and
pusha
pop
cli
inc
add
lahf
out
jl
or
push
or
xor
iret
data16
xor
inc
and
and
repz
fldcw
pop
int3
sbb
sbb
div
push
mov
mov
cmp
mov
out
cs
push
pushf
test
push
push
test
nop
or
pop
sbb
sahf
call
enter
mov
jmp
loopne
outs
sbb
mov
or
or
add
jmp
add
shl
js
fwait
nop
data16
add
fcomp
cmp
inc
mov
inc
mov
pop
call
sub
cwde
pop
outs
or
pop
mov
add
mov
mov
test
or
mov
jl
mov
xchg
mov
or
cmp
loopne
pop
dec
cli
and
into
adc
inc
xchg
jg
es
adc
add
push
and
call
push
xlat
and
js
cmp
dec
ins
or
outs
cmp
mov
adc
into
adc
ficomp
inc
add
adc
xlat
fs
push
inc
jp
inc
cmove
mov
push
dec
popa
je
xchg
or
loope
push
add
imul
sub
scas
retf
popa
sbb
or
jg
push
mov
mov
sbb
mov
xor
cmp
je
fnstenv
bound
and
outs
ja
or
push
popa
and
adc
push
mov
arpl
pop
mov
gs
inc
bound
bound
popf
(bad)
dec
rcl
jae
jns
xor
jle
mov
aam
retf
dec
imul
ins
(bad)
adc
gs
mov
icebp
sbb
sbb
mov
imul
xchg
ror
pusha
mov
cmp
xor
jmp
add
jb
pop
jp
pop
add
repnz
es
test
es
dec
inc
adc
mov
pop
sbb
jl
(bad)
pop
add
adc
dec
cmp
imul
sub
inc
pop
stos
add
add
add
add
mov
das
dec
mov
mov
jbe
adc
sbb
push
and
call
push
add
aaa
mov
mov
(bad)
dec
xchg
pop
mov
or
mov
mov
mov
mov
mov
mov
(bad)
mov
and
and
mov
mov
mov
ret
inc
xor
cmp
sbb
sbb
(bad)
jg
in
inc
inc
inc
inc
inc
inc
inc
inc
ret
es
mov
(bad)
mov
inc
dec
test
adc
xchg
rcr
mov
push
cmp
repz
push
inc
push
sahf
cmps
stc
sbb
inc
mov
dec
jge
out
shl
dec
push
push
repz
dec
pop
pushw
clc
pushf
pop
ins
pop
adc
iret
jnp
pop
xor
push
mov
out
jnp
push
sub
pop
push
js
into
cwde
jns
push
jns
test
push
jl
movs
cmp
mov
pop
cmps
push
mov
ror
out
repz
push
nop
push
or
int3
out
mov
push
clc
ds
mov
push
pop
out
imul
int3
cs
pusha
push
aam
push
in
cmps
stc
cmp
or
lock
bound
push
in
push
dec
pusha
ds
js
push
data16
mov
popf
push
push
mov
mov
adc
idiv
in
fld
push
push
movs
cmp
es
push
cmp
repz
loopne
push
jo
xor
dec
push
mov
xchg
jmp
(bad)
sahf
imul
push
pop
inc
sbb
lods
fsubr
data16
ss
data16
nop
shl
push
in
test
ins
xchg
into
and
and
jo
or
je
jns
cwde
sub
addr16
enter
mov
add
mov
jo
dec
mov
mov
rcl
cs
popa
mov
sbb
aas
pop
sub
(bad)
(bad)
mov
enter
les
retf
adc
cmps
sbb
(bad)
sbb
and
sahf
data16
jl
adc
jle
jg
cld
mov
add
adc
lock
push
icebp
jb
stos
and
hlt
jno
fmul
and
leave
pop
enter
xlat
les
ror
test
sub
cmp
(bad)
jle
add
pop
jp
or
or
and
xor
adc
clc
add
and
xchg
sub
cmp
mov
ror
aam
fiadd
call
out
imul
sahf
cwde
movs
mov
int3
retf
pop
js
add
cs
dec
pop
inc
mov
push
dec
mov
mov
int
cmp
push
push
xor
inc
add
sub
outs
cdq
sub
stos
mov
mov
call
push
sbb
sbb
daa
inc
dec
and
int3
sbb
mov
push
lds
and
scas
dec
ret
sub
and
mov
adc
aaa
js
xor
lock
dec
in
or
xchg
adc
lock
push
sbb
push
add
sub
cmps
pop
dec
or
mov
cmp
add
mov
nop
ret
popf
xor
or
sbb
daa
add
push
adc
pop
add
push
and
iret
ins
imul
pop
lea
jbe
mov
push
lock
xchg
test
or
add
or
add
dec
or
cmps
push
push
icebp
push
jbe
adc
jne
dec
in
cli
jne
xor
test
jae
and
xchg
inc
fadd
jne
xor
and
pop
pop
add
jno
(bad)
outs
shl
mov
jge
cmp
xor
popf
and
xchg
mov
adc
cmp
cld
outs
push
or
or
test
iret
jb
mov
fild
daa
inc
jb
ja
add
call
xor
shl
or
push
sbb
das
ss
push
push
inc
push
inc
outs
pop
das
cwde
daa
push
jo
daa
or
pop
or
inc
ins
popa
clts
push
ins
add
outs
cld
(bad)
dec
push
jo
imul
mov
mov
popa
push
nop
or
ffree
add
mov
inc
add
dec
lods
das
or
jo
mov
sbb
outs
daa
add
inc
aam
adc
pop
rcl
pop
nop
mov
mov
nop
ret
outs
fs
xor
push
stos
adc
int
out
jl
lock
loope
push
in
(bad)
or
push
das
inc
cmc
adc
and
cmp
mov
or
pop
mov
dec
inc
adc
bound
sub
mov
mov
scas
lods
rcr
mov
ds
mov
into
inc
adc
out
and
inc
aaa
add
xchg
dec
fadd
push
test
retf
pinsrw
push
or
adc
les
or
test
mov
cmp
push
fcomp
test
ficomp
xchg
or
retf
or
push
sub
cmp
add
das
jmp
(bad)
mov
lods
clc
adc
and
adc
mov
push
sbb
test
adc
sub
shr
push
out
adc
jg
(bad)
pop
mov
dec
jne
xlat
push
cmp
cmp
jge
cmps
sub
es
push
push
fldenv
or
push
push
es
dec
mov
add
push
(bad)
mov
inc
pop
aas
in
call
adc
imul
imul
adc
scas
push
push
mov
xchg
add
xor
int
adc
cmp
mov
push
fdiv
push
ficomp
push
(bad)
pop
mov
and
add
mov
inc
sub
sbb
add
(bad)
jo
mov
push
dec
je
ja
inc
sbb
repz
push
sbb
sbb
rcl
rcl
(bad)
shr
dec
mov
mov
dec
inc
sbb
jne
mov
cmp
lods
(bad)
adc
mov
or
dec
lods
mov
or
test
add
push
movs
add
add
inc
sub
fs
pop
push
mov
aas
inc
fcomp
or
or
jmp
jb
iret
ss
gs
stos
dec
das
lods
inc
es
xlat
or
ss
adc
cmp
xor
adc
mov
fwait
rol
sbb
and
adc
(bad)
and
mov
cmps
and
push
mov
mov
adc
xor
add
test
lea
xchg
dec
dec
fisttp
sbb
cmp
mov
or
and
ror
push
jp
xor
or
dec
mov
shl
test
scas
jle
pop
pop
jae
(bad)
inc
xchg
xchg
xor
enter
leave
jae
mov
sub
push
aad
imul
sub
cwde
daa
inc
pop
xchg
lods
pushf
mov
(bad)
push
hlt
cmovs
mov
push
push
shr
and
ins
repz
mov
inc
mov
pop
xchg
inc
ficomp
addr16
addr16
in
or
enter
xchg
lock
call
test
push
or
inc
test
loopne
add
or
sub
out
sub
mov
jo
dec
adc
in
or
dec
or
adc
shl
adc
neg
retf
mov
inc
inc
test
xchg
jae
or
sbb
daa
ficomp
cwde
ja
mov
enter
clc
pop
mov
cmp
mov
sbb
jns
xchg
imul
mov
ja
add
pop
fdivr
not
pusha
sar
jb
jne
mov
aaa
shl
adc
xor
scas
add
push
push
fistp
lea
xlat
les
sub
sbb
pop
jmp
iret
or
in
push
adc
xor
mov
mov
cmp
ret
push
and
xor
jne
out
retf
inc
sub
rol
sub
fdivr
cmp
(bad)
jnp
rcl
inc
je
pop
cs
wrmsr
movs
in
sub
push
sub
shr
dec
in
lods
lods
xchg
and
inc
add
or
shr
sbb
push
fidiv
mov
push
mov
push
in
xchg
sbb
test
xor
adc
scas
or
xchg
sar
and
inc
in
sub
push
jmp
std
add
and
push
aas
cmp
je
dec
sbb
mov
push
and
sbb
or
jecxz
cs
mov
inc
pop
in
dec
in
(bad)
cmc
popa
dec
(bad)
cwde
vmread
xchg
dec
lock
or
test
ss
jmp
inc
and
xor
sahf
rol
pop
pop
es
dec
adc
outs
(bad)
and
pop
in
mov
js
jnp
(bad)
push
mov
push
cmp
sti
xchg
xchg
lea
jp
mov
sub
push
or
mov
bound
cwde
fisub
xor
sar
inc
pusha
dec
jle
inc
jo
dec
repz
daa
test
push
imul
fmul
dec
in
mov
les
inc
dec
jne
or
(bad)
jo
test
cmp
adc
retf
call
mov
div
je
xor
and
cmp
sti
dec
outs
inc
jne
and
push
cmp
and
and
mov
cmp
adc
hlt
xchg
fisubr
pop
in
sbb
xor
mov
or
adc
rcr
call
cmp
add
fisttp
inc
dec
push
lock
mov
push
pop
inc
cmp
and
adc
sbb
or
or
imul
xchg
ret
push
dec
mov
xchg
movs
test
sub
aaa
hlt
xlat
ret
jmp
push
jo
mov
jne
add
cmp
icebp
cmc
js
inc
cwde
lods
or
push
sub
pop
fisubr
fdiv
pop
sub
jb
and
adc
mov
or
popa
iret
mov
int
xchg
inc
jo
jl
mov
mov
jae
mov
inc
int3
fmul
adc
aas
mov
hlt
mov
cmc
add
je
out
imul
fxtract
and
push
add
dec
mov
xchg
loopne
inc
mov
popf
ss
cmp
jne
pop
clc
(bad)
mov
shr
mov
cs
jge
mov
push
iret
push
imul
sub
sbb
jg
mov
repz
sbb
cmp
fsub
jnp
xchg
loopne
das
sbb
or
test
jnp
jb
lea
(bad)
mov
aad
add
jmp
xchg
add
jg
cmp
add
cmp
je
out
mov
iret
mov
xor
cmp
push
loope
mov
sub
xor
adc
cwde
cwde
mov
or
pop
fiadd
mov
adc
lds
push
out
daa
sbb
(bad)
ss
dec
mov
nop
sbb
cmovae
xor
push
or
inc
push
and
(bad)
std
outs
adc
adc
sbb
dec
cmovno
xor
sti
xor
xor
jae
jmp
pop
dec
adc
imul
xchg
test
pop
das
sub
test
out
sbb
mov
push
cmp
dec
out
pop
xchg
les
pop
pop
and
(bad)
ficom
ret
dec
adc
pop
fdiv
mov
jmp
push
(bad)
outs
sub
imul
out
dec
adc
push
es
sbb
pop
mov
mov
stos
xor
xchg
pop
mov
xor
js
nop
fwait
rol
mov
jg
xor
mov
mov
test
add
pop
aam
inc
fisttp
mov
mov
mov
inc
frstor
pop
sub
inc
or
lea
js
sbb
les
sub
or
jp
loopne
es
cmp
inc
inc
sti
cld
mov
or
addr16
clc
pop
push
stc
fstp
fwait
jmp
inc
and
mov
arpl
push
sub
fcomp
mov
adc
cli
imul
(bad)
in
imul
push
push
ins
pop
sub
rcl
(bad)
add
jmp
pop
xchg
dec
scas
dec
adc
or
pop
sub
inc
jne
or
enter
rol
push
nop
xor
push
arpl
(bad)
xor
scas
loopne
nop
shl
and
push
cmps
shr
mov
pusha
add
sub
sub
dec
dec
jne
adc
push
cdq
pop
int
add
les
and
jecxz
stc
sbb
sbb
ins
and
jo
mov
adc
and
inc
push
aaa
imul
xor
jb
addr16
retf
xor
jmp
rcr
add
in
fs
jnp
adc
call
in
mov
push
dec
sub
add
jnp
mov
pop
jno
dec
xchg
cmps
xchg
out
mov
shl
test
sub
add
pusha
xor
test
ror
lock
inc
sbb
into
push
push
jne
push
xchg
jle
mov
sbb
xchg
les
pop
sub
lahf
pushf
jecxz
sbb
push
add
xor
add
stos
clc
mov
pop
ds
(bad)
jb
lock
or
lods
add
sbb
cmps
fwait
mov
mov
xchg
adc
sti
mov
adc
sbb
cdq
cwde
xor
pushf
lahf
and
test
ret
mov
adc
inc
ins
cmc
and
inc
sub
cmp
mov
adc
mov
(bad)
jmp
and
imul
(bad)
pop
pop
je
adc
movs
loop
inc
sbb
jge
fdiv
jp
jns
arpl
cs
push
pop
outs
je
pushf
call
iret
add
adc
pop
fisttp
mov
add
stos
popf
add
mov
or
loope
jae
or
pop
pop
pop
mov
xchg
push
mov
or
sub
(bad)
add
dec
jo
jmp
push
sub
add
and
inc
jb
adc
addr16
sub
in
xor
pop
and
mov
cli
aam
push
mov
lahf
not
outs
adc
cs
fdiv
inc
outs
xchg
lods
pop
ins
les
cmp
in
nop
dec
adc
sbb
jo
dec
ret
jecxz
dec
mov
sahf
fwait
(bad)
push
repz
lds
push
imul
faddp
inc
les
jno
add
add
loopne
push
(bad)
scas
fld
imul
push
enter
fisub
add
xchg
(bad)
pop
mov
and
cmp
jge
add
dec
sub
outs
pop
add
adc
add
sub
pusha
es
mov
das
pop
test
je
adc
sub
fincstp
(bad)
push
sub
and
daa
lock
inc
popf
xchg
dec
xor
ins
cld
add
lock
aas
xchg
pop
sar
xor
fdiv
lea
inc
out
ins
int
fimul
mov
es
dec
outs
and
sub
hlt
adc
inc
retf
adc
imul
pop
icebp
lahf
push
mov
push
sbb
push
xchg
fs
adc
pusha
das
pop
dec
xor
cmp
jmp
adc
pop
out
sar
push
jl
fidiv
lea
pop
cmp
pop
(bad)
ret
or
dec
sbb
fsub
push
pop
stos
mov
add
cmp
das
pusha
ins
popa
pop
into
ins
add
rol
push
pop
sub
pop
mov
mov
jae
mul
or
in
jns
add
ret
mov
add
mov
or
xchg
faddp
cmc
and
clc
mov
ror
fldenv
mov
and
mov
or
or
add
inc
jne
or
sysret
mov
out
test
sub
dec
hlt
ins
or
dec
out
pop
data16
outs
(bad)
jmp
cmp
je
mov
test
jbe
push
adc
pushf
sbb
mov
jge
cmp
push
or
sub
dec
push
adc
je
xchg
movs
sti
pop
xor
cmp
cmp
ror
je
cmp
or
mov
sbb
xor
shl
sbb
pop
pop
das
in
jns
jne
in
jns
ret
mov
dec
and
add
jbe
pop
add
dec
imul
xlat
shr
cs
jl
adc
les
xor
xchg
test
sub
(bad)
(bad)
jns
in
mov
es
cmps
test
sti
add
lods
daa
pusha
mov
add
xor
loop
mov
ins
push
arpl
sbb
jb
and
push
xlat
stc
xchg
inc
pusha
or
lock
stos
sub
mov
sub
ret
popa
add
fs
ror
and
or
out
pusha
lods
jnp
sar
or
nop
outs
sub
mov
and
jl
cdq
fiadd
cmps
sbb
daa
in
mov
mov
lahf
add
iret
mov
push
push
push
imul
inc
mov
loope
dec
mov
push
js
push
mov
sub
popf
xor
sbb
sar
cmp
jp
mov
mov
add
xchg
sub
push
repz
adc
dec
xor
or
sbb
inc
shl
jne
stos
xor
cmp
jge
jne
cmp
xchg
sub
inc
jo
xchg
stos
dec
loope
daa
ins
cmp
add
les
mov
addr16
or
neg
mov
push
nop
pop
mov
mov
mov
xchg
xor
dec
mov
push
mov
popa
jo
daa
dec
mov
out
jmp
je
sbb
adc
(bad)
and
rol
inc
push
add
pop
or
pop
add
sti
fucomi
adc
push
pop
add
jp
jmp
ror
add
jbe
ds
add
mov
sbb
stos
ins
(bad)
pop
mov
ja
push
add
add
jo
xor
int
pop
add
mov
cmps
xor
jmp
daa
add
mov
push
inc
ins
xchg
mov
(bad)
adc
je
push
fs
xchg
(bad)
dec
and
out
or
ficom
add
(bad)
xor
dec
inc
xor
jo
jnp
mov
fisttp
inc
movs
loopne
mov
ins
xlat
loope
xor
iret
inc
fwait
cmps
mov
add
cmp
jne
jecxz
dec
mov
dec
daa
sub
sti
push
push
cmps
lds
fwait
pop
and
mov
fdivr
jbe
je
push
mov
out
pop
xchg
xor
sbb
push
push
push
outs
mov
and
dec
bnd
or
lahf
jp
adc
or
xor
pusha
fdivp
jns
push
mov
inc
or
ja
int
rol
push
cmp
arpl
nop
imul
loopne
mov
dec
popa
xchg
inc
int3
ds
ret
adc
jbe
push
xor
or
xor
ret
adc
inc
and
sbb
inc
cmp
daa
dec
dec
push
push
popa
sbb
aaa
outs
adc
leave
xlat
movs
and
arpl
fcom
and
fmul
mov
enter
or
xor
cmp
jo
mov
push
and
jle
or
jb
jmpw
and
push
(bad)
or
in
xchg
push
add
mov
jp
xchg
leave
mov
jno
call
pushf
fbstp
or
jo
fsubr
(bad)
push
je
xor
rcr
push
out
dec
adc
sub
xor
aaa
test
cs
dec
and
mov
inc
dec
push
push
dec
dec
pushf
ss
mov
dec
xchg
test
pop
mov
adc
and
adc
les
jno
push
repz
sbb
add
mov
add
inc
inc
jbe
jnp
jne
xchg
test
dec
jne
push
or
loope
popf
fcom
sbb
repz
mov
inc
inc
mov
mov
aas
jl
mov
push
dec
xor
or
adc
and
dec
add
jle
pusha
add
sub
test
cmp
pop
frstor
inc
repz
mov
out
nop
add
add
sete
call
xlat
sbb
mov
dec
mov
mov
push
adc
adc
sar
cwde
add
mov
movs
test
add
xchg
sub
add
imul
cmp
and
(bad)
xchg
jg
jmp
and
xor
pop
fnsave
sbb
inc
dec
das
pop
dec
cs
xor
jbe
jno
(bad)
rol
dec
mov
rol
call
push
inc
dec
add
in
sub
dec
add
mov
push
push
inc
or
cmps
pop
rol
in
mov
bound
jg
cwde
mov
and
adc
pop
sub
and
cmp
adc
loopne
mov
shl
mov
adc
or
adc
xchg
in
test
cli
clc
dec
and
enter
mov
push
dec
inc
shr
repnz
(bad)
mov
pop
mov
mov
repnz
es
mov
adc
or
mov
add
lar
mov
inc
lock
imul
call
test
add
xchg
loop
jnp
scas
(bad)
xor
cmp
dec
retf
mov
dec
add
add
mov
sbb
dec
fsub
out
cli
push
mov
jmp
or
xor
int
mov
imul
inc
xchg
(bad)
push
shl
sbb
jmp
cmp
cmps
jle
jmp
pmaxub
xor
(bad)
test
dec
lahf
mov
sbb
cdq
adc
mov
mov
pmulhuw
adc
inc
xchg
inc
sbb
sbb
mov
add
or
add
and
push
xor
mov
inc
fild
inc
test
mov
nop
xchg
or
push
sub
int3
xchg
xchg
dec
and
adc
and
inc
bound
sub
aas
mov
mov
shl
mov
inc
push
pop
stc
push
std
inc
and
cmp
imul
cmps
es
mov
mov
les
(bad)
jmp
sub
or
cmp
je
imul
push
mov
or
bound
mov
js
call
rol
out
call
mov
xor
inc
in
add
pop
je
pop
sbb
loopne
movs
push
add
mov
add
pop
call
xchg
dec
adc
sub
sbb
mov
nop
add
pop
ret
call
sahf
or
or
mov
stos
dec
adc
dec
add
ret
push
mov
or
rol
fld
push
rcl
jecxz
pop
xchg
or
fst
xchg
or
out
pop
cmp
bound
xchg
lods
xor
cmps
inc
pop
push
and
xchg
mov
pop
popf
movs
adc
popa
(bad)
neg
push
cmp
je
mov
pop
ret
mov
inc
cmp
push
push
and
xor
add
loopne
or
ja
addr16
mov
xor
jg
sbb
and
sub
adc
lock
dec
pop
out
push
popf
inc
dec
jo
cli
push
outs
jnp
imul
xor
inc
sahf
add
iret
pop
inc
push
dec
aaa
pop
cmp
add
adc
pop
add
sub
sbb
and
pop
pop
lock
pop
push
je
pushf
int
inc
ins
jp
push
xor
mov
mov
xchg
mov
pop
adc
je
mov
push
mov
nop
shl
nop
pop
push
add
lods
push
rol
jmp
lods
mov
and
fs
cmps
rol
xor
dec
loopne
or
adc
mov
lea
cmp
mov
mov
imul
inc
push
add
mov
and
jae
mov
inc
movs
mov
xchg
test
(bad)
in
mov
outs
adc
or
aaa
aaa
and
fadd
mov
test
adc
pusha
shl
leave
xchg
ja
cmps
stos
push
inc
imul
push
fsubr
pop
in
and
cmp
jns
or
aaa
adc
sar
cs
push
add
push
or
mov
rcl
daa
cs
je
mov
or
xchg
or
cmps
mov
aam
aas
or
nop
cdq
out
sti
jp
arpl
dec
not
nop
and
and
inc
mov
push
cmp
mov
jo
or
xchg
pop
pop
pop
or
xchg
dec
dec
inc
pusha
pusha
cmp
data16
data16
jle
or
pmaxsw
pop
cmp
push
sbb
or
cwde
xlat
jnp
clc
mov
jp
add
push
ret
sub
push
or
xchg
loopne
xor
mov
lea
push
mov
daa
xchg
xor
jno
mov
scas
cdq
mov
aaa
mov
les
or
shl
dec
sbb
push
cld
mov
push
or
repz
adc
ret
pop
adc
add
push
mov
cmp
in
sahf
(bad)
lods
mov
dec
dec
mov
and
mov
add
fadd
in
xor
mov
mov
ret
xchg
cmp
push
mov
sbb
dec
lea
frstor
jmp
sub
xor
call
fmul
xchg
or
dec
out
or
jno
pop
push
call
mov
jg
jne
lock
push
iret
mov
ja
das
or
xchg
int
mov
adc
jne
call
add
dec
add
pop
pop
sbb
add
jge
in
ret
aas
push
cmc
push
sbb
add
or
pop
outs
xchg
dec
mov
push
push
mov
xor
das
bound
cmp
je
inc
inc
cwde
sbb
rcl
jne
inc
inc
pop
inc
pop
add
push
add
pop
les
add
clc
in
pop
dec
jmp
arpl
pusha
adc
or
test
sbb
push
ret
mov
ret
pop
cmps
xchg
retf
pop
pop
xchg
pop
pop
inc
mov
inc
push
pop
cld
add
push
popa
mov
and
push
inc
cdq
arpl
dec
mov
inc
adc
cmps
clc
mov
jae
xchg
fcom
jecxz
and
mov
addr16
mov
arpl
(bad)
and
das
add
or
or
add
pop
inc
xchg
adc
sbb
push
(bad)
adc
repnz
mov
mov
pop
cmp
push
pop
dec
adc
fst
or
push
adc
push
js
dec
add
mov
xchg
retf
add
dec
iret
mov
xor
jecxz
add
add
add
dec
or
imul
lock
add
mov
lahf
add
fwait
ret
mov
shl
or
sbb
or
mov
push
enter
dec
retf
lock
pop
jbe
inc
ja
jmp
or
in
call
retf
adc
adc
(bad)
adc
xchg
xchg
xchg
push
repnz
sbb
sbb
adc
sbb
pop
fidivr
add
fistp
fcom
xchg
aam
out
ss
adc
lods
push
adc
jb
dec
and
inc
or
loope
or
add
mov
adc
adc
inc
fld
sbb
gs
or
outs
add
outs
or
push
inc
jno
jecxz
pop
sub
inc
add
shr
add
adc
idiv
dec
jl
mov
push
ins
push
mov
mov
xchg
and
in
xchg
xchg
xor
mov
or
enter
or
or
add
xchg
repnz
add
add
xchg
cdq
pop
hlt
and
data16
aas
sbb
fwait
jp
mov
not
xchg
(bad)
adc
rol
inc
or
add
pop
sub
rcr
sti
xchg
xchg
cmp
pop
inc
lock
or
ficomp
lea
dec
mov
jmp
xor
adc
loopne
mov
mov
movs
mov
xchg
mov
test
push
xchg
add
cmp
add
push
or
jp
inc
push
dec
add
pop
dec
push
or
push
sar
add
jl
adc
add
cs
dec
dec
or
xchg
jg
mov
int3
ds
fsubr
xchg
out
pop
loopne
cmp
enter
or
inc
mov
mov
test
dec
push
and
push
or
pop
aad
mov
push
idiv
sub
sub
cmp
push
icebp
mov
inc
in
xlat
outs
xchg
dec
sub
cmp
(bad)
aaa
call
mov
loopne
in
or
push
push
pop
ja
in
push
xor
jnp
fs
pop
loopne
sub
adc
dec
leave
in
and
es
or
mov
in
outs
and
mov
dec
pushf
add
aaa
cmp
cmp
scas
addr16
add
pop
je
mov
sub
jb
je
ret
add
ja
mov
ss
lock
lods
ret
or
les
and
push
mov
fwait
mov
mov
jb
nop
or
inc
fisub
retf
add
pusha
and
sbb
mov
mov
cmp
add
push
ds
(bad)
imul
adc
aad
fsubr
xchg
mov
push
loopne
xlat
inc
sbb
nop
pop
pusha
idiv
ret
dec
mov
push
(bad)
xor
push
pop
in
call
call
aam
mov
mov
in
sahf
sti
jmp
jo
cmp
dec
mov
sub
sub
inc
adc
and
les
push
scas
mov
repnz
pop
adc
or
or
mov
xchg
push
and
mov
js
or
popf
or
adc
jle
push
lea
jne
pop
push
imul
ja
and
pop
and
aam
mov
retf
and
icebp
push
adc
es
dec
sti
(bad)
nop
and
loopne
mov
jnp
iret
dec
inc
or
sbb
jmp
jmp
jmp
and
and
or
and
dec
add
fstp
int3
and
and
or
dec
aas
add
xor
out
rcl
test
push
popf
les
cmps
adc
pusha
jo
cmps
jnp
cmc
inc
and
pop
add
into
mov
push
iret
adc
push
cs
je
jle
xor
push
pop
movs
inc
or
and
pop
mov
jae
mov
or
cmp
add
xchg
pop
add
cdq
xor
push
mov
inc
or
or
sahf
lahf
mov
iret
ja
add
retf
add
cdq
int3
inc
ror
pushf
enter
aam
loop
push
inc
int3
test
sub
jp
and
inc
outs
sub
push
pop
jg
xor
push
add
adc
or
add
popa
mov
imul
inc
shl
adc
pop
ror
adc
mov
sub
in
in
or
or
xchg
or
pop
adc
dec
packsswb
cmp
and
adc
and
adc
push
jmp
js
or
xor
or
add
rol
or
or
dec
repz
add
jmp
sub
push
add
push
or
icebp
or
xchg
sbb
mov
cmps
inc
dec
push
pusha
adc
or
addr16
mov
or
push
inc
or
or
and
push
dec
mov
dec
cdq
dec
mov
push
dec
loopne
mov
outs
popa
popa
mov
addr16
mov
add
retf
xlat
or
or
or
dec
inc
and
xchg
pop
sub
dec
and
and
cmp
pop
inc
sub
popa
stc
adc
je
mov
les
push
adc
dec
fld
sbb
cmp
and
test
add
cmp
jg
jb
cmp
movs
jo
push
mov
gs
cmp
add
add
dec
jg
jb
adc
icebp
or
push
xor
add
out
sub
bound
pop
dec
popa
or
sbb
cmp
out
rol
(bad)
icebp
clc
mov
test
test
in
lahf
fsubr
push
dec
push
add
jle
push
(bad)
jmp
mov
cmp
pop
fs
adc
cmps
test
push
cmp
jns
inc
nop
test
ret
nop
mov
lds
imul
adc
and
push
or
mov
sbb
lods
sbb
call
dec
in
call
ror
je
test
add
jmp
and
sti
and
outs
push
jo
or
in
xchg
or
div
retf
jb
and
cs
mov
(bad)
mov
sbb
xchg
and
cmp
push
sub
adc
(bad)
fstp
call
mov
xor
push
push
clc
test
ja
ja
mov
adc
in
inc
cmp
and
aam
xor
sub
mov
call
iret
or
add
push
inc
mov
ja
cs
add
dec
and
mov
out
mov
sub
sbb
mov
and
inc
or
adc
test
xchg
mov
push
or
fsubr
sbb
dec
repnz
sub
sub
sub
ret
mov
add
add
push
xchg
std
fmul
cmp
rol
and
addr16
not
rol
cmp
or
jecxz
adc
add
dec
call
inc
cmp
push
adc
or
fcom
aad
mov
mov
adc
dec
jno
pop
call
mov
out
cmp
mov
repz
jmp
adc
add
bound
in
pop
dec
test
sbb
xchg
adc
rcl
jl
or
mov
xlat
and
fild
ret
addr16
and
mov
imul
je
bnd
dec
inc
cs
cmp
adc
cld
(bad)
pop
push
clc
cmp
and
mov
add
imul
out
rol
iret
test
ret
pop
jge
popa
fs
xlat
stc
loope
pop
or
mov
scas
fs
pop
leave
in
dec
mov
mov
push
lahf
outs
and
sub
cli
fiadd
enter
(bad)
jmp
pop
dec
xor
enter
cmp
xchg
arpl
push
aam
mov
daa
ret
pop
aam
fild
pop
push
rcr
dec
or
scas
leave
or
mov
cdq
in
mov
rol
rcl
shl
dec
adc
nop
adc
rcl
ret
cmp
std
jecxz
xchg
cmps
xchg
loope
mov
adc
enter
lahf
or
jo
outs
nop
and
jbe
inc
aas
add
xor
pop
xchg
mov
pop
retf
push
shl
mov
mov
int3
pusha
adc
and
sbb
and
cmp
or
ins
push
imul
or
push
dec
pusha
xor
pop
ret
and
push
shl
fcomp
mov
sub
addr16
inc
jle
je
push
xchg
pushf
mov
lock
es
iret
shl
sbb
adc
adc
jle
adc
push
sbb
or
pavgw
(bad)
adc
mov
bound
jne
test
outs
or
adc
movs
push
imul
push
add
add
add
jae
fs
add
aad
pushf
pop
push
inc
loop
dec
inc
rcr
arpl
rdtsc
(bad)
mov
and
sub
(bad)
bnd
jo
mov
cmps
popa
pusha
loope
fs
mov
or
cwde
cwde
push
jo
xchg
stc
mov
bound
das
sbb
push
mov
mov
sub
xor
movs
inc
xlat
add
ja
push
aad
dec
stc
add
(bad)
mov
adc
js
mov
push
or
mov
fwait
pop
xchg
fild
xor
push
repnz
out
pop
cmp
xlat
mov
ins
sbb
in
push
ret
das
mov
outs
dec
push
mov
aas
(bad)
ins
ret
and
fcomp
jmp
icebp
or
xor
inc
pop
cmp
adc
or
dec
daa
sub
cmp
ss
outs
add
loope
fmul
shl
movs
sbb
mov
dec
outs
sbb
fs
mov
xchg
mov
fidivr
push
inc
or
pop
inc
inc
mov
or
and
lea
test
mov
jb
nop
push
sub
fnclex
sub
cmps
cwde
hlt
or
fdiv
fimul
push
mov
sub
les
jno
js
jle
dec
lock
or
cmp
adc
and
jl
or
xor
scas
add
sub
jbe
sub
dec
and
inc
rcr
out
mov
fsub
pop
adc
stos
push
and
ror
test
mov
add
mov
push
clc
fst
mov
js
and
sub
cmps
xchg
push
cmp
bound
cli
inc
cwde
add
push
cmp
jno
xchg
push
and
xor
cmp
or
or
data16
and
push
inc
mov
shl
or
xchg
loope
and
xor
outs
loop
loopne
sub
sbb
sbb
call
or
and
xchg
mov
in
mov
mov
or
xor
push
shl
mov
(bad)
nop
data16
push
aaa
fsub
inc
pop
inc
push
(bad)
cwde
push
inc
(bad)
icebp
and
(bad)
push
jbe
popf
sbb
lock
mov
adc
mov
(bad)
push
adc
xor
mov
mov
jecxz
bound
rcl
test
cwde
xchg
(bad)
int
cmps
add
fld
fcomp
add
sbb
adc
inc
and
mov
jb
das
mov
xor
dec
(bad)
and
pop
mov
add
leave
inc
aas
add
jmp
mov
push
add
ins
push
dec
push
fnstsw
cli
push
bound
jmp
lock
dec
or
loopne
add
sub
jae
mov
xor
and
and
iret
xor
fwait
outs
std
add
cdq
and
adc
sub
or
je
and
push
jmp
bnd
in
aam
int3
ret
mov
je
outs
push
sbb
rol
(bad)
ins
lods
and
stos
sbb
sbb
data16
leave
mov
call
dec
fcom
nop
inc
dec
(bad)
xlat
mov
xor
sbb
rol
retf
(bad)
add
pop
sar
or
retf
add
add
add
or
rcr
inc
pop
out
lods
pop
xchg
pop
gs
dec
push
mov
repnz
cmp
dec
sbb
and
pop
imul
dec
sbb
aam
or
test
inc
movnti
or
pop
addr16
adc
or
add
or
mov
jmp
imul
sbb
mov
push
dec
out
or
(bad)
sbb
lea
sub
mov
rol
leave
and
sub
or
ins
xor
outs
or
popa
jbe
add
mov
inc
sbb
and
mov
mov
or
ds
pusha
lods
jno
clc
test
or
aad
sub
mov
add
push
xor
mov
sar
push
daa
adc
mov
add
je
sbb
adc
mov
stos
mov
pop
(bad)
and
ja
push
inc
loop
daa
je
push
adc
aam
repnz
sbb
loop
push
push
and
imul
mov
push
cmp
mov
add
add
test
inc
cmp
or
or
and
jmp
pop
stos
cmp
imul
mov
add
fs
(bad)
push
in
neg
clc
pusha
jmp
or
out
cmc
pop
push
and
inc
mov
mov
hlt
lea
or
clc
stc
out
and
pop
call
cmp
or
lods
leave
fst
nop
icebp
es
inc
ror
cmps
sti
sub
and
mov
pop
nop
neg
cld
push
jne
shl
sbb
je
pop
inc
xchg
jg
add
and
adc
and
inc
popa
mov
sub
pop
push
sbb
or
in
stos
jbe
xor
pop
nop
push
shr
mov
jbe
(bad)
pop
jge
enter
outs
jmp
ins
shr
push
mov
sbb
pop
lock
out
shl
jb
sub
sbb
or
add
enter
jnp
test
popa
in
lahf
pop
fdiv
lahf
pop
hlt
and
adc
adc
rcr
xor
mov
pop
mov
pop
push
push
out
pop
inc
les
mov
popf
mov
imul
daa
cmp
cmp
setg
jmp
das
(bad)
cmp
dec
dec
inc
add
cmp
setle
xor
movs
imul
dec
push
ror
dec
adc
cld
xor
xchg
xchg
mov
mov
or
mov
sbb
push
retf
push
test
aad
sbb
sti
mov
mov
popa
jmp
or
stos
repz
adc
movs
dec
lock
dec
dec
jne
test
adc
enter
shr
pop
xchg
sub
aaa
pop
xor
add
mov
test
ss
add
inc
adc
adc
add
or
sbb
mov
jmp
aaa
test
jne
in
fdiv
sbb
add
sar
push
rcr
in
jo
mov
or
test
mov
call
aaa
lock
add
mov
lea
popa
popf
mov
sub
push
les
inc
js
das
mov
icebp
push
jne
loope
sub
icebp
mov
nop
mov
add
add
jl
xchg
add
dec
cmc
fs
or
in
ficom
pop
add
pop
add
(bad)
aam
icebp
(bad)
lock
scas
inc
and
(bad)
jnp
imul
outs
sub
push
or
push
mov
xor
add
(bad)
call
or
sti
fwait
inc
addr16
xor
add
jmp
sbb
or
adc
cmp
push
sbb
xchg
dec
sub
push
push
adc
pop
int3
mov
inc
mov
mov
adc
stos
cmp
mov
mov
mov
mov
mov
mov
ss
or
push
inc
cli
add
xchg
push
dec
adc
lock
daa
push
ss
cs
push
sub
or
push
daa
shl
sar
(bad)
in
inc
lods
push
xlat
sbb
sbb
nop
adc
sub
mov
sbb
add
sub
sub
out
sbb
sub
and
sbb
cmp
jne
push
push
mov
jmp
add
sub
sbb
sbb
jo
sbb
mov
fsubr
sub
inc
sbb
jp
shl
dec
or
dec
push
cmp
inc
out
add
sub
jnp
cmp
jge
push
sbb
ins
retf
xchg
sbb
(bad)
cmp
leave
or
mov
js
ins
inc
pop
xor
pusha
sub
test
jg
rcr
(bad)
into
jmp
push
rcl
add
shl
push
push
mov
xor
cmp
xor
fs
fcomp
cvtdq2ps
(bad)
sbb
inc
or
or
sar
mov
push
test
sldt
not
push
adc
pop
sub
pop
sub
pop
xor
jmp
xchg
ds
sub
fcomp
xchg
pop
cmp
dec
xchg
mov
cmp
xor
xor
adc
add
add
call
cmp
leave
mov
sbb
xchg
cmps
mov
xor
and
pop
pop
mov
inc
mov
(bad)
gs
pusha
nop
(bad)
in
mov
xor
call
jge
or
(bad)
pop
(bad)
pusha
outs
(bad)
ret
lods
call
mul
sbb
push
mov
jne
test
jb
lock
lods
xchg
es
xchg
sub
sub
shl
cld
inc
les
and
test
mov
adc
mov
xchg
pop
imul
xor
inc
push
and
inc
scas
pop
cmc
xor
retf
dec
sub
(bad)
shl
cmps
mov
mov
inc
mov
add
dec
push
vcvtdq2ps
xor
pusha
or
pop
mov
pop
push
sbb
push
adc
mov
sub
(bad)
or
ror
mov
inc
cli
rcr
aas
adc
mov
in
jne
mov
push
or
push
dec
mov
idiv
xor
out
jmp
mov
adc
inc
add
push
or
fs
push
xor
rcl
pop
inc
out
fsubrp
inc
inc
sbb
inc
pop
xor
lea
popa
cmp
into
jg
pusha
add
add
and
test
push
ins
gs
cmps
push
aas
xor
(bad)
push
add
jo
sub
stos
xor
push
shl
sbb
popf
rcl
(bad)
mov
dec
dec
jne
test
adc
fs
in
repz
icebp
mov
mov
sub
push
xchg
xchg
cmp
jne
inc
adc
ins
(bad)
(bad)
mov
loopne
pop
ret
and
xor
dec
ss
adc
iret
ret
sti
mov
aas
pop
mov
adc
jmp
lds
adc
nop
sub
mov
pop
add
lods
test
jecxz
test
loope
push
and
push
je
pop
icebp
shl
jp
lods
jmp
cmp
cmp
mov
push
loopne
in
imul
add
push
or
pushf
ret
xchg
ret
jmp
adc
sete
daa
retf
dec
push
xor
sub
loop
adc
mov
add
out
pop
in
or
inc
scas
ja
jb
dec
(bad)
retf
sar
pusha
add
inc
es
sub
mov
inc
rcl
inc
retf
mov
push
add
ret
and
xchg
add
lock
lock
adc
or
movs
and
fist
sbb
and
jnp
sub
test
stc
or
fimul
cmp
xor
mov
mov
lea
pop
not
ret
sub
je
or
lods
movs
mov
mov
push
sub
cmp
std
xchg
out
sbb
or
addr16
dec
sub
jge
cmp
adc
and
xchg
mov
adc
and
push
sbb
push
call
xor
mov
push
dec
test
and
dec
cmp
in
inc
xchg
sub
inc
xor
cmp
xchg
mov
cdq
mov
xchg
or
mov
test
push
fiadd
jmp
stos
test
mov
inc
add
inc
inc
mov
sbb
add
ror
mov
add
add
test
sti
cs
xchg
push
inc
je
and
int3
out
popf
inc
push
mov
(bad)
aas
push
popf
and
push
inc
or
add
inc
mov
out
out
retf
jnp
bound
scas
cwde
data16
ins
mov
sar
nop
mov
inc
jl
and
xchg
adc
cmp
pop
icebp
inc
test
push
adc
add
sub
movs
xor
pop
add
inc
ret
mov
mov
inc
inc
call
push
lods
push
lods
repz
or
adc
shl
and
push
and
adc
pop
mov
pop
and
fisttp
adc
xor
(bad)
pop
and
and
fcom
xchg
fs
ficom
ins
pop
and
xchg
cli
sbb
(bad)
push
and
or
or
and
adc
arpl
mov
lea
ds
add
fmul
add
test
cmp
(bad)
pop
push
cmp
mov
jg
or
popa
jne
pop
leave
mov
loopne
lea
or
jle
fisub
arpl
das
inc
mul
(bad)
cld
cmp
sub
les
xchg
sub
cwde
pop
mov
pop
call
and
jbe
fsub
inc
pop
call
adc
xor
enter
mov
xlat
imul
inc
and
mov
iret
leave
fsubr
icebp
add
cmp
adc
push
jo
cmp
push
jl
inc
std
retf
gs
es
outs
inc
dec
mov
xchg
pop
rcr
inc
pop
repnz
mov
adc
xchg
sbb
cmp
in
mul
mov
add
repz
out
adc
lahf
and
sub
mov
and
cmp
jbe
xlat
push
sub
enter
mov
call
adc
dec
movs
out
ins
in
mov
ja
sbb
sub
jg
je
into
add
popa
(bad)
out
and
mov
dec
pop
xchg
sbb
js
jmp
push
cmp
cmp
mov
inc
xchg
push
loop
and
ret
dec
jne
int3
adc
pop
test
mov
test
xor
sbb
adc
sbb
and
call
add
je
mov
mov
je
jmp
cmp
je
sbb
mov
push
xchg
hlt
add
sbb
lods
adc
fimul
add
sbb
jmp
sbb
movs
cmps
je
sub
xchg
ret
test
movs
add
in
outs
loope
cmp
push
arpl
mul
fadd
cmp
call
add
ss
and
mov
mov
lods
inc
inc
daa
(bad)
inc
mov
inc
ret
mov
or
jmp
dec
inc
inc
sbb
or
or
mov
retf
test
push
and
cmps
mov
inc
lahf
push
add
push
inc
sub
mov
push
push
sbb
pop
in
push
add
rcl
(bad)
and
lods
int3
add
and
jne
test
sar
mov
xlat
sbb
loope
enter
jp
hlt
jmp
arpl
inc
and
sbb
or
(bad)
rcl
pop
push
lahf
mov
adc
mov
dec
dec
mov
pop
pop
jne
es
adc
shl
sub
xor
inc
mov
mov
xor
sub
adc
ins
cwde
test
xchg
ror
mov
(bad)
pop
xor
adc
test
xor
and
sbb
fild
inc
or
test
sbb
inc
mov
sar
sbb
sbb
or
nop
sahf
dec
fcom
mov
sub
jp
sbb
cmp
call
push
adc
je
push
pop
bnd
sub
jo
xor
jb
or
inc
mov
(bad)
ins
imul
cmp
(bad)
jmp
and
fmul
outs
and
test
jno
std
dec
add
inc
in
les
rcr
adc
jge
inc
mov
pop
or
in
and
test
jae
push
inc
adc
lds
loop
dec
pop
inc
jmp
dec
jo
and
sbb
push
inc
add
sbb
mov
jecxz
cmp
sbb
xor
aas
jae
aaa
add
pusha
xchg
mov
test
ss
push
mov
sti
or
jb
add
jmp
inc
push
mov
retf
ss
push
mov
add
push
dec
jo
add
cmp
xor
cmp
mov
pop
or
fild
pop
or
jno
pop
mov
js
inc
clc
or
sbb
ins
add
adc
repnz
sbb
xor
add
mov
pop
inc
add
ret
pop
mov
lock
pop
add
adc
repnz
inc
or
cmps
add
inc
adc
out
ss
push
addr16
mov
or
ret
push
inc
xchg
cwde
or
ins
xor
loope
shl
and
aaa
je
ret
or
or
pop
inc
xor
push
nop
movs
and
cwde
test
adc
add
scas
adc
rcr
cmp
sub
inc
sbb
add
mov
(bad)
(bad)
adc
xchg
out
add
stos
adc
loopne
push
es
jl
pop
stc
push
cmp
push
xchg
cmps
push
pop
lods
inc
dec
jge
fistp
push
inc
outs
not
mov
sub
pop
adc
xchg
icebp
add
mov
pop
add
add
adc
mov
inc
je
add
sbb
mov
push
jmp
sbb
sub
das
jmp
pop
jp
test
leave
adc
jo
cmps
push
out
dec
rol
imul
pop
in
or
(bad)
rol
adc
adc
jge
push
mov
or
sbb
push
(bad)
push
outs
adc
push
js
xor
das
ret
lock
dec
unpcklps
push
call
cdq
inc
inc
ins
ret
rcr
adc
mov
int3
dec
sbb
imul
lods
les
ja
xor
es
push
xchg
jmp
add
and
lock
cmps
inc
aam
push
xchg
or
in
ss
test
jp
inc
add
test
mov
push
neg
pop
rcl
(bad)
push
sbb
rol
das
jl
(bad)
pop
sbb
mov
or
xchg
xchg
cmp
and
add
xor
lea
scas
lock
jmp
lds
xchg
xor
xor
jge
add
in
test
dec
mov
push
xor
inc
pop
(bad)
mov
cmc
into
and
in
push
add
adc
movs
pop
rcr
mov
sbb
add
add
adc
sub
cld
jo
lahf
cmp
mov
dec
inc
mov
imul
dec
sar
pop
dec
pop
sbb
test
cmp
cmp
add
pop
aaa
test
add
ftst
adc
ret
dec
nop
stos
add
cld
mov
shr
fld
adc
iret
sar
sbb
je
xor
fistp
aas
mov
inc
cmp
shl
push
xor
or
and
test
pop
inc
daa
aas
mov
int3
call
mov
adc
clc
mov
dec
xchg
inc
daa
daa
push
and
sbb
add
ret
dec
add
(bad)
jmp
repz
mov
inc
or
scas
sub
xchg
sbb
add
inc
mov
add
lock
push
mov
mov
movs
cmp
cs
adc
int3
mov
push
loop
aas
sbb
fcom
add
(bad)
push
enter
xor
inc
add
call
adc
or
pop
(bad)
pop
cmp
push
stos
sbb
out
test
sbb
cmp
shl
in
sbb
mov
dec
call
lods
call
dec
adc
jnp
or
push
adc
push
or
pop
mov
outs
pop
jo
outs
ret
adc
or
and
ins
dec
add
pop
repz
sbb
and
cmp
xor
jbe
inc
loope
jle
push
ja
pushf
not
add
mov
dec
call
dec
mov
hlt
jae
cmp
nop
in
xchg
stos
xchg
jbe
inc
ss
sub
shr
inc
jnp
pop
movsx
dec
jmp
cmp
movs
mov
or
cmps
mov
push
pop
jmp
cwde
mov
jecxz
cmps
pusha
int3
push
xor
xchg
loop
fild
daa
inc
mov
daa
inc
mov
mov
mov
add
and
adc
sub
jmp
mov
pop
cdq
add
leave
adc
jne
mov
jp
jno
add
cmp
push
jbe
rol
mov
jmp
jl
cmp
out
jne
punpckhdq
(bad)
out
aad
shl
xchg
xchg
adc
in
add
inc
jne
push
xlat
test
pushf
and
cs
push
test
bnd
xor
pop
jno
cmp
and
xor
inc
sbb
call
shl
push
pop
mov
movs
jb
ret
xchg
retf
test
enter
inc
cmp
stos
or
push
sbb
push
adc
mov
bound
call
inc
dec
jmp
out
mov
mov
pop
out
movs
xchg
ret
mov
ds
ret
pop
add
adc
pop
cld
(bad)
mov
or
scas
aaa
jecxz
jmp
xor
push
sar
fisub
mov
mov
xchg
lods
lea
inc
loopne
enter
xor
fwait
add
aad
mov
adc
test
div
movs
ret
sbb
ja
dec
mov
lea
addr16
sbb
in
jmp
push
push
add
jo
shl
rol
cs
shr
push
outs
xchg
mov
lds
movs
cmp
out
(bad)
ins
mov
push
sub
out
inc
ins
sbb
out
loop
push
mov
(bad)
retf
daa
cmp
imul
sub
stos
and
mov
and
xchg
add
jne
dec
mov
sbb
dec
pop
adc
sbb
push
cmp
mov
psrad
sub
jle
test
cs
dec
movs
pop
push
dec
mov
mov
loope
or
fcomi
sbb
cmp
(bad)
mov
mov
sahf
mov
push
push
adc
sub
and
xor
sbb
mov
xchg
add
sub
mov
add
add
add
sbb
xor
sbb
mov
pop
push
pop
push
pop
dec
push
or
test
cmp
xor
xchg
push
mov
add
push
test
mov
inc
cmp
loopne
shl
enter
pop
sbb
cmps
mov
cmp
or
mov
mov
add
inc
push
movs
mov
inc
push
lea
enter
cwde
int3
push
sbb
push
ror
xchg
cmp
jmp
dec
mov
and
add
mov
fcomp
enter
add
mov
sbb
cmc
push
mov
jbe
iret
add
sub
js
inc
dec
add
push
inc
or
sbb
push
xor
mov
xor
add
pop
pop
or
inc
daa
xchg
and
dec
mov
les
cmp
gs
cs
jmp
dec
ins
arpl
or
(bad)
test
fistp
push
loop
movs
jb
in
(bad)
and
sub
shl
sbb
cs
mov
aaa
mov
xor
xor
xchg
xor
push
adc
and
outs
and
push
xor
out
and
lea
push
rol
and
xchg
fsubr
adc
or
dec
add
adc
push
and
pop
loopne
icebp
push
std
dec
mov
aad
cli
movs
pop
add
pop
pop
aas
call
and
sbb
or
or
je
adc
bound
add
adc
sahf
fnstcw
pop
inc
pusha
adc
push
jbe
pop
or
in
lea
push
pop
mov
or
jne
stos
pop
push
sbb
add
add
ret
out
jo
add
and
(bad)
and
cmps
sub
or
sbb
xor
fidiv
mov
ret
jle
mov
nop
in
xor
sub
mov
(bad)
xlat
mov
adc
jge
mov
movs
sub
cmp
mov
sbb
jle
or
jne
test
sbb
add
sbb
jno
inc
data16
rcr
ror
test
sub
imul
(bad)
push
adc
pop
push
das
es
int3
call
ds
shl
(bad)
icebp
out
fisub
ror
imul
dec
adc
in
es
xor
push
call
add
sti
icebp
jg
or
push
mov
and
cli
repz
aaa
mov
rcr
adc
add
push
sbb
jne
mov
scas
inc
out
cmp
into
pop
add
add
loop
push
jns
enter
sbb
pop
test
outs
xor
arpl
inc
das
dec
adc
rol
loope
movs
sub
push
imul
aas
arpl
test
pop
jo
mov
cmp
pop
pop
outs
test
mov
cmp
or
sbb
dec
and
pop
pop
std
sbb
jb
ret
jle
mov
add
das
in
scas
or
outs
sub
jo
adc
jecxz
and
pop
mov
movntq
jecxz
into
jnp
add
add
cmp
push
ss
jmp
cmp
cmps
or
add
pop
jmp
or
xor
retf
(bad)
stos
jne
or
sbb
out
dec
js
dec
mov
adc
pop
jmp
mov
je
xor
inc
cmps
mov
pop
or
inc
adc
imul
jo
inc
rcl
xor
sbb
or
and
rcl
pop
or
(bad)
mov
test
add
xchg
xchg
push
cmp
js
jae
je
mov
sahf
push
fist
movs
lods
dec
add
lods
or
test
outs
jmp
inc
add
clc
sbb
cs
fucomi
rcl
or
je
adc
pop
jmp
add
add
hlt
jb
outs
or
ins
mov
lahf
or
add
inc
or
push
shl
daa
clc
test
into
add
ss
add
iret
xor
jo
les
pop
(bad)
dec
push
out
dec
movs
sbb
jmp
add
jne
pop
iret
adc
pop
movs
cmp
cmps
in
add
imul
out
mov
test
fbstp
sti
fwait
pop
movs
sbb
and
and
shr
mov
mov
je
push
(bad)
sub
fs
mov
mov
or
pop
jle
loopne
jno
cmp
inc
aam
xor
inc
test
(bad)
shl
movs
adc
inc
xchg
inc
push
sub
lods
dec
and
mov
call
shl
and
xor
xchg
out
jecxz
pop
adc
popa
(bad)
icebp
or
fisub
or
push
das
push
cld
je
and
aas
adc
je
sub
mov
push
push
cmp
in
sub
dec
jge
and
cmps
xchg
lea
mov
and
loopne
jl
pop
sar
add
or
in
je
out
je
dec
pop
icebp
or
cwde
hlt
inc
push
xchg
mov
rol
mov
inc
or
fcom
xor
pop
hlt
icebp
mov
jmp
retf
jne
cmp
lods
inc
and
movs
popf
or
inc
and
sub
ins
push
hlt
dec
lock
and
or
xchg
rcl
push
rol
inc
hlt
dec
lods
adc
mov
sub
(bad)
inc
cwde
pop
shr
loopne
cmp
push
inc
sub
test
fbld
jg
les
dec
ret
add
mov
add
xchg
test
adc
or
xchg
gs
sbb
adc
mov
mov
adc
add
and
mov
sbb
addps
sub
jp
call
je
mov
div
add
mov
push
fcom
movs
lea
aam
neg
ret
mov
jle
adc
(bad)
push
dec
or
xor
sbb
sub
push
and
and
movs
pop
jmp
loopne
push
mov
gs
adc
mov
or
sbb
out
mov
rol
pusha
mov
fistp
pop
or
nop
aaa
sbb
js
pop
or
or
adc
mov
cmp
not
add
sub
push
push
(bad)
stos
push
pop
pusha
push
xor
movs
scas
and
daa
push
mov
mov
call
pop
pop
pop
inc
ret
or
rcl
xor
call
or
shr
pop
push
je
dec
or
jns
punpckldq
push
push
ins
cdq
mov
or
xchg
call
xor
fdivr
clc
mov
or
push
fs
and
adc
mov
sar
scas
xchg
mov
push
and
or
dec
aas
push
or
adc
in
popa
es
mov
in
add
dec
fisub
dec
xor
push
adc
lahf
icebp
leave
shl
outs
xchg
xor
ret
sub
pop
test
xor
shufps
and
add
shufps
dec
adc
sub
cs
(bad)
test
dec
adc
xor
cwde
add
daa
popa
pop
aaa
out
test
mov
xlat
jnp
or
arpl
adc
xor
cmp
mov
adc
cmp
(bad)
aad
pop
int3
inc
imul
xchg
es
pop
xor
pop
scas
mov
call
dec
mov
retf
sub
loopne
adc
and
add
cmp
xchg
sub
sbb
push
repnz
ins
xchg
cmps
das
mov
ins
mov
inc
ds
xor
sbb
xchg
or
call
hlt
out
and
push
test
pop
sti
add
or
fcom
rcr
and
clc
sub
pop
clc
pop
adc
push
nop
frstor
imul
sub
dec
mov
add
shl
cmp
cmp
cdq
push
jbe
pushf
mov
inc
jl
add
test
(bad)
nop
(bad)
out
mov
xacquire
cmp
rol
jl
dec
sti
mov
hlt
add
in
adc
mov
pusha
push
(bad)
mov
xchg
xchg
(bad)
sbb
add
fld
inc
push
ret
imul
mov
shl
pop
lock
adc
out
punpcklbw
test
loopne
jne
or
fcom
and
cmp
adc
into
inc
adc
push
imul
mov
mov
dec
jge
outs
in
sub
cmp
add
ficomp
repnz
or
mov
push
in
push
pusha
mov
dec
add
aaa
jecxz
push
add
xchg
popa
fimul
add
call
push
clc
xor
loop
push
add
mov
ret
jns
or
repz
dec
add
(bad)
lea
imul
adc
mov
(bad)
repnz
mov
adc
js
call
adc
sbb
sbb
or
jecxz
mov
xor
jmp
imul
mov
fnstcw
inc
(bad)
mov
sbb
es
push
mov
mov
mov
mov
inc
fisubr
xchg
inc
dec
push
dec
dec
scas
sub
sub
inc
inc
mov
mov
sbb
test
cmp
xchg
mov
cmp
adc
clc
clc
lock
rcr
jns
cdq
out
call
sbb
xor
or
dec
fmul
fmul
aam
inc
sub
les
push
iret
ss
inc
stc
pop
and
cmp
cmp
mov
add
call
test
ins
xchg
pop
and
push
mov
push
shr
dec
call
inc
outs
push
or
xor
and
or
xor
xor
cmp
xchg
imul
sub
and
sbb
shr
dec
icebp
ss
clc
or
rcl
lods
xor
push
mov
jb
mov
retf
sub
(bad)
ins
fwait
xchg
mov
dec
or
call
adc
jmp
aas
mov
into
and
mov
jmp
inc
fisttp
inc
pop
adc
sar
dec
shr
and
push
adc
outs
das
cs
out
(bad)
xchg
data16
and
jle
adc
adc
push
rol
dec
sub
add
scas
mov
into
adc
fmul
adc
ja
or
pop
mov
and
into
adc
into
inc
dec
add
add
(bad)
mov
adc
loopne
xchg
arpl
call
pop
pushf
add
sbb
fsubr
adc
shl
in
(bad)
dec
int3
mov
sbb
xchg
jmp
enter
aam
call
or
dec
and
nop
mov
sgdtd
add
mov
or
into
bound
(bad)
push
mov
movs
and
rol
cmp
cs
xchg
or
dec
pop
mov
imul
inc
jnp
push
adc
int3
in
cmps
dec
(bad)
adc
add
xrelease
sbb
rcl
sub
xchg
sti
fcom
cmp
enter
mov
or
mov
push
or
inc
loope
aad
sbb
cwde
leave
push
dec
mov
or
mov
sub
add
fmul
(bad)
mov
or
pop
inc
std
dec
sub
inc
sub
dec
jmp
ror
int
enter
lock
ret
jmp
mov
jle
(bad)
lods
jge
rol
or
mov
add
cmp
adc
int
push
clc
xchg
xor
xor
sub
test
fmul
dec
movs
ror
hlt
add
and
mov
and
cmp
mov
sbb
scas
jo
mov
popa
dec
call
pop
dec
arpl
push
jle
dec
lods
mov
arpl
and
fwait
nop
gs
pusha
push
mov
cmp
ins
inc
fwait
out
or
xchg
adc
(bad)
push
inc
push
mov
mov
shr
sbb
xchg
ret
mov
imul
data16
into
jbe
add
adc
add
add
jo
outs
sub
or
and
inc
popa
mov
inc
cld
gs
ins
sbb
and
xchg
mov
mov
adc
mov
out
pop
pop
sub
push
add
xchg
pop
inc
aam
sbb
dec
cmp
test
dec
inc
mov
in
imul
or
shl
pop
xor
and
push
sub
push
mov
retf
add
sbb
cli
bswap
add
test
mov
sbb
xchg
sub
loopne
adc
loopne
dec
push
jg
aad
adc
sub
sahf
xchg
cdq
xchg
and
fcom
add
or
fs
add
addr16
jg
rol
xchg
repz
je
jo
dec
adc
aam
xor
lock
jns
jne
mov
imul
mov
test
ret
mov
adc
push
sbb
mov
inc
cmps
inc
adc
adc
adc
jp
jnp
loop
shl
lods
xchg
or
xor
adc
sub
xor
out
cli
std
sub
jae
dec
add
and
cmp
inc
outs
cmp
xchg
add
inc
cmp
inc
nop
sysexit
jl
mov
or
imul
inc
repz
and
imul
or
mov
sbb
shl
push
shr
lea
jno
call
push
sub
adc
cli
rcr
inc
cmp
xchg
pop
adc
mov
or
sub
mov
jmp
add
adc
mov
or
sub
leave
adc
test
mov
jo
xchg
mov
pushf
and
outs
push
call
dec
xor
clc
push
aaa
xor
dec
inc
in
push
or
iret
out
mov
jp
outs
in
and
scas
(bad)
mov
adc
hlt
add
or
test
daa
jmp
bswap
push
rcr
stos
cmp
add
adc
mov
fild
retf
ins
or
or
xchg
inc
xor
add
cmp
sub
inc
sbb
adc
inc
stos
mov
or
or
or
loopne
add
adc
xor
aas
pushf
popf
push
jge
cmp
jne
or
mov
(bad)
mov
rcl
inc
push
test
cdq
adc
and
xor
sub
add
adc
cli
jge
pop
outs
and
repnz
fldcw
xor
add
retf
fcomp
jg
shl
icebp
js
sbb
gs
xchg
mov
and
dec
add
xor
pop
pushw
mov
cmps
inc
nop
dec
movs
mov
dec
call
js
adc
pop
sub
(bad)
cmps
dec
push
mov
arpl
push
lods
push
and
rcl
push
xor
mov
gs
pop
inc
or
cmp
jge
xchg
xchg
push
out
sbb
mov
(bad)
sbb
pop
das
sbb
sbb
push
or
shr
adc
xor
nop
adc
out
fnstcw
add
into
push
adc
add
ins
xchg
cmp
mov
jg
mov
add
inc
bound
lock
xchg
adc
xchg
(bad)
mov
lock
test
iret
sahf
push
pop
mov
push
mov
add
add
add
jns
dec
fisubr
or
sub
add
mov
pop
shr
cdq
pushf
add
mov
fldcw
push
ds
add
es
ja
ret
or
push
xlat
int3
add
loope
ret
cmp
data16
movs
dec
addr16
js
xor
sub
adc
pop
adc
push
cld
jo
or
ss
jae
push
push
mov
add
push
cmp
or
(bad)
dec
into
and
mov
pusha
xchg
adc
mov
xor
fld
test
popa
add
add
mov
add
or
inc
mov
cli
mov
imul
jnp
sub
loope
mov
mov
inc
mov
inc
push
jg
jne
dec
out
push
mov
dec
fdivr
cmp
mov
inc
mov
nop
int3
push
fadd
out
add
es
push
js
jb
jbe
jl
xor
sub
sbb
jmp
pop
ret
mov
ret
cmp
je
pop
ja
add
ins
pop
test
ret
pop
dec
outs
popf
jo
imul
mov
mov
mov
fsubr
data16
popa
mov
and
and
ja
fisttp
push
fprem1
or
dec
jge
aam
add
aam
rcl
add
loopne
lahf
das
dec
cmp
inc
lock
cdq
mov
xchg
lods
imul
and
and
popa
leave
inc
cmps
or
push
xchg
daa
dec
jp
mov
test
int
cmp
hlt
and
pop
or
out
test
and
push
test
sar
mov
in
xor
in
ins
pop
or
arpl
push
xchg
rcl
fcom
xchg
pop
dec
xor
jmp
mov
or
and
popa
hlt
cmp
clc
jle
jle
cmps
scas
cmp
push
sbb
inc
fs
es
and
add
pop
adc
(bad)
loope
fisub
sub
adc
inc
xor
jmp
inc
div
add
mov
jmp
mov
add
daa
stos
test
xor
jbe
test
or
cmp
mov
mov
cmp
nop
outs
aas
arpl
fs
ret
push
add
mov
jge
adc
leave
jno
fisub
lds
rol
cmp
ja
and
jmp
pusha
repz
xchg
cmp
loope
dec
cmp
jp
jmp
pop
push
mov
fsubr
sbb
xor
enter
(bad)
or
arpl
test
enter
xor
fild
fs
push
mov
in
add
sti
or
xchg
fmul
ss
inc
adc
(bad)
ror
mov
dec
loop
inc
shl
jp
lock
push
rcpps
push
pop
xchg
sub
jmp
aam
jmp
adc
fs
mov
inc
ins
cmp
out
jne
pop
sbb
add
je
loop
pop
or
inc
adc
adc
bound
push
sbb
in
fistp
mov
add
cmp
or
pop
mov
cmp
ins
mov
inc
jmp
push
lea
(bad)
std
mov
pop
addr16
jns
add
test
sub
push
pop
clc
ins
or
pop
sub
cwde
cmps
mov
or
ins
scas
push
sbb
fisub
xchg
dec
mov
dec
xor
hlt
sub
mov
outs
push
push
cmp
pop
cmp
mov
cmp
fcmovbe
(bad)
lahf
jne
gs
dec
jns
sbb
cmp
and
cmp
sbb
adc
hlt
inc
pusha
dec
call
(bad)
rcr
mov
lahf
in
inc
call
adc
in
popf
jno
sbb
jp
push
test
(bad)
push
pop
push
adc
push
push
fdiv
fdivr
lock
cmp
jns
and
jmp
sub
pmaxub
jo
jo
imul
jno
repz
and
xlat
je
add
inc
adc
enter
push
push
mov
pop
jbe
loope
fs
dec
push
or
add
jo
push
add
dec
push
mov
rcl
mov
pop
cs
loopne
cmp
xchg
and
add
xchg
jbe
pop
xchg
adc
cmp
icebp
clc
mov
bound
cmps
js
or
int3
and
mov
push
sbb
call
cli
and
fnstcw
xor
(bad)
or
movs
imul
dec
imul
adc
sbb
pop
cmc
fsubr
shl
(bad)
mov
add
push
add
xchg
xchg
pavgb
dec
or
xor
les
fnop
add
or
push
cli
mov
and
mov
hlt
inc
cmp
mov
dec
cmp
cdq
xchg
lods
inc
adc
sbb
inc
out
sub
in
mul
mov
outs
adc
fwait
pop
adc
adc
fnstcw
and
xor
jg
inc
pop
clc
das
mov
mov
xor
adc
jb
add
lea
lahf
lods
gs
adc
dec
sti
dec
cmp
xor
mov
cmp
adc
adc
and
ins
mov
mov
fistp
test
(bad)
sar
call
add
add
add
or
outs
or
inc
ins
push
dec
ins
xchg
test
push
in
push
sbb
xor
mov
sub
cs
dec
pop
jmp
sbb
push
add
xchg
jge
pop
aaa
or
pop
mov
mov
pop
mov
cmc
xor
ret
fprem
fs
retf
rcl
mov
xlat
adc
jo
xor
ins
inc
(bad)
call
aam
les
xchg
xor
mov
adc
push
(bad)
mov
xor
daa
icebp
and
es
aad
inc
cli
nop
add
ja
daa
in
pop
xlat
mov
jg
cmp
xchg
arpl
ror
pop
hlt
or
or
es
outs
not
push
pusha
lock
cwde
cmp
inc
clc
or
enter
dec
xor
es
mov
fs
inc
adc
inc
jge
sub
jecxz
push
movs
mov
add
call
dec
rol
pop
or
leave
push
cmc
or
pusha
sub
jg
lods
xchg
push
rcr
dec
add
je
pop
je
cmp
xor
lock
cs
call
loope
ret
add
adc
xor
div
out
ins
icebp
mov
sub
adc
mov
mov
dec
jne
mov
xor
mov
or
lea
sub
sub
xor
mov
dec
or
(bad)
cmp
mov
jmp
push
add
cmps
xchg
popa
or
push
dec
pop
inc
loopne
aas
jnp
push
into
push
mov
jo
imul
jne
adc
into
add
pop
jle
sbb
add
add
add
not
add
mov
test
sbb
jo
call
loope
ins
iret
push
push
neg
jne
push
inc
mov
shl
or
pop
add
cwde
add
or
xor
idiv
and
mov
add
xor
adc
cdq
sbb
int
dec
add
movs
add
push
pop
push
lds
lds
or
push
cmps
sbb
inc
loop
or
call
or
or
xchg
add
adc
jmp
pop
mov
adc
push
mov
ror
sbb
(bad)
(bad)
fimul
js
jmp
mov
or
popa
stos
or
fadd
jne
mov
aaa
adc
push
xor
test
and
or
or
not
shl
sbb
sub
movs
pusha
rol
cmp
dec
shl
adc
jmp
sub
sbb
xchg
xor
out
faddp
mov
movhps
lods
sbb
aas
sub
inc
icebp
pop
not
xor
xor
clc
sub
xor
add
xchg
test
add
add
fdivr
add
xchg
jle
aaa
pop
imul
add
clc
out
push
jmp
lods
aam
(bad)
clc
sbb
inc
out
add
cmp
xor
push
cmp
rcr
jnp
cmp
add
aaa
mov
mov
cmp
in
sub
aas
adc
ja
lods
mov
add
xchg
jns
pop
mov
cmp
ret
(bad)
jne
adc
(bad)
jg
pop
jg
cmp
add
xor
(bad)
pop
adc
outs
loop
add
pusha
push
sti
and
sbb
jne
movs
repz
push
sbb
or
and
add
inc
test
loope
xor
add
push
cmp
add
adc
outs
xor
pop
icebp
pop
enter
sbb
add
lods
cmp
(bad)
and
cmp
add
cdq
xchg
push
mov
push
pop
loope
out
push
sbb
push
and
push
jo
xchg
cmps
icebp
add
push
dec
sbb
cmp
or
in
jns
add
pop
jnp
push
sub
push
daa
jne
push
xchg
movs
lock
mov
test
xchg
push
and
dec
pop
popf
push
xchg
adc
jle
ds
adc
mov
sub
or
aaa
ja
fst
cmps
(bad)
cld
cwde
clc
jno
cmp
repnz
push
pop
jns
mov
scas
fistp
enter
mov
pop
inc
les
icebp
mov
scas
push
xchg
or
sbb
push
lea
mov
push
lock
xchg
mov
jo
sbb
lock
sub
inc
cmp
lock
sti
ins
jne
sub
movs
loopne
(bad)
test
inc
clc
dec
and
ds
push
add
int3
xor
jae
mov
and
ins
pop
or
xor
imul
sub
fadd
mov
cmp
lods
and
mov
dec
jae
add
inc
sub
or
adc
add
xchg
push
cli
in
push
adc
cmps
fld
pushf
add
loopne
inc
pop
sub
cld
and
mov
out
clc
enter
jno
cdq
inc
and
and
aas
push
mov
add
and
and
add
and
iret
add
pushf
adc
clc
sub
and
nop
out
push
add
sbb
pushf
or
mov
out
iret
(bad)
xchg
mov
dec
in
leave
mov
adc
in
enter
retf
dec
and
add
popa
xor
test
test
add
mov
pop
sbb
mov
jg
add
inc
add
xor
test
pop
inc
(bad)
xor
dec
pusha
or
jmp
push
jae
ins
or
sub
inc
mov
pusha
mov
imul
sbb
add
in
dec
or
jo
bound
jmp
in
add
mov
push
stos
xchg
cld
push
pushf
or
adc
and
in
inc
pop
in
xor
dec
inc
ins
test
add
ret
data16
xor
call
and
fst
add
sub
adc
sbb
sbb
call
pop
in
dec
lock
movs
call
icebp
mov
inc
adc
(bad)
das
imul
fwait
mov
mov
sbb
mov
rcl
fldenv
inc
inc
or
mov
sub
lods
or
leave
bound
cmps
mov
leave
pop
adc
ret
jle
cwde
int
or
mov
div
cmp
sbb
push
push
or
mov
sub
add
push
pop
jl
push
fs
das
add
jnp
ret
enter
cdq
pop
cmc
jae
dec
fcmove
dec
test
or
or
and
(bad)
jns
adc
inc
neg
push
popf
pop
or
and
dec
pusha
es
push
jne
add
add
xchg
or
iret
pusha
lock
add
add
pop
or
rcl
cmp
pushf
and
xchg
dec
dec
cmp
into
push
pop
push
outs
sbb
not
or
or
mov
cmp
or
fs
scas
add
push
or
and
inc
push
xchg
inc
push
les
ds
mov
stos
xor
or
cmp
movs
add
jecxz
and
jle
sbb
push
into
xchg
push
pop
ffree
pop
pop
rcl
jmp
mov
or
lock
push
or
dec
dec
pop
pushf
nop
sbb
mov
in
daa
mov
rol
adc
add
lea
jnp
dec
clc
repz
push
cmp
adc
push
and
xchg
push
mov
push
rol
mov
pusha
out
inc
push
(bad)
adc
mov
dec
bnd
mov
xor
std
and
jecxz
inc
and
fld
dec
pusha
fs
test
rcr
in
dec
jae
pop
cs
push
pop
or
js
add
out
sbb
imul
pop
pop
in
int3
sbb
jmp
pop
sub
dec
xor
sbb
or
(bad)
ror
shl
rol
das
sysexit
test
sub
mov
sub
js
icebp
or
ja
xchg
xchg
jg
mov
mov
(bad)
xlat
shl
sbb
jne
in
push
das
adc
into
adc
cdq
add
push
ja
mov
pushf
sbb
push
adc
retf
mov
push
sbb
std
sbb
or
jl
xor
sbb
ror
sub
push
pop
jecxz
push
mov
js
xchg
(bad)
scas
sbb
iret
push
fld
push
test
add
inc
dec
pop
xor
lahf
arpl
push
leave
or
dec
inc
adc
pop
add
imul
add
xor
(bad)
jp
int
cli
stos
jle
push
dec
pop
icebp
sub
and
push
call
and
adc
test
cdq
adc
and
add
dec
push
clc
adc
adc
or
push
pop
inc
sub
out
or
xor
repnz
xchg
ficomp
in
ins
movs
shl
dec
ja
inc
std
lock
sbb
dec
and
mov
adc
stc
push
add
xor
cmp
adc
pusha
add
pusha
or
push
mov
pop
pop
rcr
lods
pop
loope
in
and
je
push
lahf
push
push
inc
and
xor
enter
and
and
mov
sub
adc
sahf
inc
jns
xor
loope
movs
in
mov
sub
data16
sub
xchg
pop
jne
mov
mov
inc
mov
dec
dec
jae
cmp
jne
pop
cs
cmp
sbb
push
cwde
mov
xchg
js
and
mov
adc
cmps
out
add
mov
push
sub
jnp
add
retf
imul
mov
or
push
xchg
and
push
pop
adc
add
xor
dec
sbb
iret
icebp
aas
mov
mov
fs
mov
daa
adc
push
inc
call
jecxz
or
cmp
punpckhbw
ficom
xchg
cmp
mov
adc
and
or
jp
cmp
add
and
mov
xchg
xchg
ret
mov
and
inc
jp
pusha
iret
ss
jmp
je
minps
push
push
sub
adc
dec
jne
ret
sub
jl
(bad)
daa
scas
imul
dec
jne
inc
cmc
mov
fcomp
xor
or
mov
lea
movs
(bad)
cmps
add
mov
addr16
jo
movs
ds
repz
in
mov
test
fdiv
inc
lods
mov
aad
and
ds
(bad)
jle
push
adc
dec
cmp
jbe
pop
mov
daa
sub
lea
es
xor
enter
in
inc
call
sub
mov
and
push
xor
or
shr
pop
mov
clc
jne
je
(bad)
je
and
clc
cmp
push
cmp
movs
add
fistp
retf
push
adc
std
mov
xlat
scas
sbb
sub
push
pusha
adc
pop
inc
push
or
adc
arpl
loope
jg
mov
jge
jle
jl
shl
loopne
sub
sti
fidiv
inc
ss
es
push
lahf
or
je
and
sub
adc
in
lock
pop
inc
and
and
dec
or
sub
sbb
adc
sbb
cwde
rcr
aam
mov
jle
pop
dec
mov
ret
loope
pop
push
shl
jo
jbe
mov
aas
aad
cdq
push
pop
adc
hlt
and
mov
and
call
(bad)
xor
mov
scas
pop
(bad)
cmp
sub
and
pop
(bad)
sub
cmp
fnstsw
push
mov
mov
pop
mov
ret
push
sahf
and
dec
xor
or
fcomip
aaa
adc
inc
pop
push
retf
aam
das
fadd
add
inc
or
add
inc
shl
fistp
nop
mov
outs
pop
inc
add
lods
add
mov
jo
xchg
push
sbb
mov
sbb
push
push
adc
and
cmp
cdq
test
or
and
ins
or
ss
mov
inc
inc
adc
cmp
jl
or
cmp
xor
mov
sub
jg
mov
jmp
push
push
push
pop
mov
ret
fidivr
add
jl
inc
add
retf
and
mov
and
add
sub
gs
lahf
inc
cld
cmp
jns
pop
fldlg2
sub
test
adc
test
movs
lea
xor
fimul
inc
inc
dec
in
call
imul
aas
xor
lea
mov
xchg
pop
push
or
sub
fwait
adc
test
lds
add
and
mov
lods
mov
mov
lock
fldcw
add
and
add
popf
hlt
xchg
sbb
outs
mov
jne
fnstcw
ret
je
jne
iret
inc
popa
pushf
dec
call
movs
add
and
add
jno
movs
cmp
and
sbb
add
adc
push
rol
sub
jno
add
inc
ret
lods
out
mov
lods
add
pop
jae
fistp
xchg
and
jne
jb
retf
aam
cmp
xchg
bswap
mov
(bad)
adc
add
or
test
lock
inc
add
dec
mov
sub
sbb
adc
and
pushf
idiv
cwde
adc
mov
inc
adc
aad
scas
push
xchg
inc
das
and
inc
xor
push
xor
jge
add
retf
ss
rol
mov
cdq
(bad)
mov
cmp
push
pop
add
pop
push
mov
jg
push
xor
loopne
loopne
inc
(bad)
in
sub
or
inc
nop
xlat
cmp
call
inc
dec
pusha
sbb
mov
add
inc
js
test
aam
ret
jmp
adc
mov
pop
cld
sbb
loopne
aaa
inc
repnz
outs
add
cs
fs
mov
or
add
add
push
mov
adc
adc
jge
js
cmps
mov
adc
and
aaa
add
shl
outs
bound
popf
adc
mov
or
clc
or
pusha
xchg
push
cmp
inc
mov
sub
inc
ins
xor
inc
adc
push
rol
outs
ins
jp
add
lea
push
and
sbb
sbb
lods
sub
mov
int
mov
pop
iret
add
sbb
xchg
jmp
or
jp
popa
mov
jge
in
sbb
pop
or
and
push
popa
pusha
cmp
in
outs
add
sbb
add
nop
cs
sub
mov
xchg
inc
jmp
aaa
add
xor
scas
add
in
bound
ret
xchg
cld
sbb
stc
pusha
sub
mov
and
ja
sbb
fsub
or
dec
jae
loopne
and
fmul
jbe
dec
ins
or
push
dec
in
jnp
js
sub
test
cld
mov
and
push
movs
xor
cmp
push
js
sub
push
fs
test
xchg
test
mov
fwait
shl
pop
fs
push
nop
aas
xchg
push
push
mov
movs
mov
dec
push
daa
xchg
add
dec
dec
inc
add
ins
leave
dec
(bad)
xchg
fcom
inc
gs
lods
sbb
fst
dec
or
movs
add
movs
nop
out
adc
jae
push
cmps
test
ins
jo
dec
ins
add
movs
mov
inc
in
inc
out
pop
popa
lea
jge
xchg
dec
jae
nop
fadd
nop
pop
aas
mov
cmp
jae
outs
mov
sbb
push
mov
lods
jb
fwait
scas
fist
mov
(bad)
aad
mov
push
int
enter
aaa
lods
movs
mov
add
mov
mov
stos
push
jge
popf
or
jo
fiadd
outs
sub
nop
popa
jg
cmp
adc
cmps
nop
mov
je
jmp
fld
dec
mov
adc
sbb
ins
xlat
cmp
je
loopne
popf
inc
ret
xchg
pop
cmp
leave
outs
adc
sub
pand
pusha
and
push
mov
and
sub
sub
inc
nop
dec
call
adc
or
stos
pushf
test
inc
rol
addr16
fdiv
dec
xor
fld
imul
in
ds
mov
les
retf
or
clc
and
repnz
inc
inc
xor
inc
sti
fwait
mov
ror
or
loopne
mov
sbb
and
push
or
sub
sub
xchg
adc
push
push
jbe
outs
ror
lahf
mov
and
dec
add
jle
cmp
ret
mov
sub
fs
mov
cmp
aas
xor
jp
aas
sub
add
pop
or
push
jg
adc
xor
sbb
inc
push
add
push
or
fbstp
adc
or
add
pop
mov
jmp
jp
iret
mov
aaa
ja
outs
pop
gs
pop
pop
pop
clc
add
dec
adc
push
(bad)
xor
in
cmps
cmps
mov
jg
mov
or
cmp
and
cmps
cmps
aam
push
or
mov
in
or
cmps
fs
ss
add
adc
adc
setae
dec
mov
retf
inc
pop
test
mov
fs
sbb
sbb
aam
sbb
icebp
fdiv
pusha
nop
setb
shl
xor
inc
push
adc
(bad)
(bad)
pop
arpl
nop
lahf
clc
(bad)
out
retf
movs
cmps
stc
pop
je
mov
adc
inc
xchg
and
stos
inc
das
xchg
xor
(bad)
pusha
shl
and
add
and
scas
or
imul
xor
daa
sar
add
mov
push
push
out
mov
or
inc
push
pop
fs
adc
inc
add
push
repz
sbb
ret
inc
dec
js
jmp
shr
and
mov
add
sub
mov
in
cmp
and
retf
dec
or
or
or
mov
sub
cmps
jge
sbb
mov
pop
push
enter
push
sub
push
inc
mov
nop
ret
inc
fdiv
dec
add
outs
jl
mov
out
dec
push
je
or
popa
push
inc
mov
shl
adc
add
mov
repz
bound
sub
jmp
repz
call
stc
adc
and
dec
pusha
out
sahf
out
push
out
sahf
js
add
or
test
jns
ss
mov
xor
add
xchg
jne
mov
and
pop
(bad)
sbb
add
popa
cwde
outs
and
xor
lock
ja
add
sbb
push
xor
aas
rol
push
scas
dec
adc
sbb
sub
mov
pop
mov
add
mov
ret
(bad)
ficomp
or
cmps
pop
test
sbb
pop
sbb
add
jb
fcom
mov
(bad)
xor
movs
pusha
(bad)
movs
jnp
add
add
mov
pop
cs
stos
xor
pop
fdivrp
jl
and
cwde
adc
jecxz
add
idiv
rcl
adc
add
pusha
and
ja
sbb
pusha
and
aam
inc
(bad)
xor
fcom
aam
sahf
add
sbb
ret
inc
fstp
dec
mov
xor
and
jmp
xor
dec
jo
ins
lock
(bad)
(bad)
pop
out
sbb
push
push
dec
and
and
push
or
call
or
pop
mov
sbb
fistp
rcl
aam
dec
(bad)
out
pop
and
ror
cmps
cmp
sub
xor
enter
and
sub
sbb
push
cmp
jle
daa
mov
sub
jle
jbe
add
stos
loopne
inc
arpl
jno
or
pop
shr
jmp
aas
daa
jecxz
xchg
push
addr16
rsqrtps
mov
adc
sub
pop
xor
scas
mov
addr16
sti
sub
sbb
push
icebp
adc
aam
les
adc
addr16
or
inc
addr16
push
add
in
dec
or
data16
inc
adc
inc
pop
add
ins
addr16
stc
push
and
sbb
aas
sub
stos
popf
cmp
sbb
xchg
mov
xor
cs
pop
jmp
or
aas
repnz
adc
fcomp
inc
jmp
xor
push
push
adc
dec
mov
test
daa
and
fdivr
push
(bad)
push
inc
pushf
inc
add
stos
imul
shl
iret
movs
jge
shl
adc
fst
movs
nop
add
add
add
or
in
out
(bad)
out
xchg
and
adc
mov
push
je
adc
jb
adc
jl
inc
fimul
data16
out
adc
retf
pop
jae
add
(bad)
es
mov
ds
xor
shl
cmp
jmp
call
imul
xchg
push
sti
daa
push
jo
xchg
add
outs
or
push
dec
scas
fisub
sbb
xor
outs
inc
push
stos
mov
repnz
ret
push
lock
dec
cmp
and
add
inc
popa
leave
add
mov
sbb
adc
jne
test
or
pop
out
test
mov
movs
test
cmp
and
je
lds
fiadd
into
mov
rol
cmp
(bad)
int
push
sbb
aas
ret
and
je
movs
pop
lods
(bad)
cmp
mov
sbb
sub
cmp
inc
mov
push
add
xchg
mov
push
jmp
pushf
dec
lods
xor
sub
or
call
int
sbb
inc
sbb
cmp
je
test
cmp
fs
push
add
iret
je
das
enter
ins
jns
or
push
and
out
mov
cmp
mov
jmp
add
mov
xchg
dec
rcl
mov
dec
mov
mov
imul
mov
pusha
push
gs
cmp
or
retf
or
das
imul
or
push
mov
mov
rcl
add
and
ror
xchg
pop
xor
mov
sbb
pop
sub
jmp
sub
mov
imul
add
mov
jl
pop
or
sahf
test
ret
(bad)
rcl
or
jl
(bad)
nop
or
out
(bad)
dec
jecxz
sar
or
sub
xlat
and
inc
or
xchg
outs
scas
and
and
dec
and
sbb
es
neg
vpackuswb
sub
pop
popf
retf
shl
mov
xor
imul
int
xor
les
fbstp
stos
xchg
mov
rcr
loope
mov
push
pop
(bad)
mov
push
mov
(bad)
cmp
and
sbb
adc
punpckhwd
(bad)
neg
cmc
lods
loopne
retf
xlat
or
add
push
mov
inc
(bad)
inc
mov
mov
rol
and
adc
(bad)
inc
fdivr
push
add
cmp
getsec
pop
xor
int
sub
jo
scas
jne
add
rol
dec
test
jae
mov
out
adc
je
inc
push
mov
add
and
jno
inc
xor
or
push
lahf
mov
adc
std
inc
cmp
out
mov
mov
je
dec
lods
xor
sbb
in
inc
pop
test
ror
xchg
jl
cmp
ret
xor
jge
int3
pushf
push
bswap
sbb
popa
test
inc
add
js
sbb
out
or
sahf
xchg
add
push
xor
int
xor
dec
je
mov
xor
ret
call
test
or
xchg
mov
xor
dec
imul
dec
popa
and
rol
mov
pop
mov
and
test
cwde
ret
pop
add
mov
movs
xchg
into
inc
sub
icebp
icebp
aas
or
mov
popa
inc
cmp
xor
out
or
xor
sbb
xor
pop
or
and
mov
cmps
pushf
mov
movs
mov
inc
and
dec
(bad)
mov
movs
js
test
fs
xchg
xor
icebp
or
out
sub
or
stos
cmps
ret
adc
cmp
mov
rcl
xor
push
iret
inc
shl
cmp
jge
cmp
xchg
loope
cmps
retf
retf
mov
inc
push
xor
popf
jecxz
sub
mov
icebp
dec
jecxz
dec
cmp
adc
loope
jecxz
sar
and
or
hlt
imul
cmp
adc
and
add
loope
ret
mov
sbb
mov
adc
mov
rol
enter
push
rcl
les
iret
xchg
sbb
push
mov
cmp
mov
cwde
outs
shufps
mov
nop
cld
jb
inc
adc
retf
push
mov
adc
sbb
cmp
xchg
mov
jae
add
(bad)
popa
sub
mov
out
jne
jb
mov
or
iret
fmul
jmp
sub
fimul
sbb
fldcw
ret
jns
xor
add
(bad)
imul
and
xor
push
cmc
and
pop
dec
push
aaa
add
pushf
mov
xchg
xor
sub
add
sub
jo
cdq
dec
xor
shl
push
pop
aaa
push
xchg
adc
add
add
mov
mov
jnp
dec
adc
jne
ror
or
push
or
inc
and
cmp
mov
sub
push
cmp
inc
pop
dec
mov
and
add
sub
pop
and
pop
inc
push
inc
cdq
mov
pop
loop
sub
shr
push
dec
cs
jns
mov
adc
add
rcr
scas
cwde
pop
and
test
lahf
(bad)
popf
hlt
mov
sbb
push
sub
dec
push
in
or
cwde
inc
test
pop
psubsw
jnp
popf
jl
xor
repz
stos
jb
clc
dec
ja
test
jl
sub
lock
adc
in
jl
pop
fmul
ins
int3
imul
push
mov
mov
ret
add
call
enter
call
xchg
sbb
ror
sbb
pushf
inc
mov
sbb
mov
clc
mov
fiadd
mov
sbb
cli
or
(bad)
sti
les
push
cmp
call
cmps
cs
imul
enter
mov
or
pop
inc
mov
cmc
push
inc
inc
ret
inc
test
arpl
stos
adc
lea
inc
add
mov
adc
loope
cmp
std
(bad)
and
ins
xchg
(bad)
sub
ja
arpl
lods
rol
and
or
out
fmul
ins
sbb
cli
cmp
(bad)
jl
pop
sub
loope
stos
sbb
enter
cmp
push
outs
push
je
mov
(bad)
ja
adc
mov
xor
cmps
fcomp
push
aam
es
jg
or
dec
push
push
and
inc
dec
mov
popf
add
aas
mov
or
mov
fiadd
inc
bound
sub
sub
mov
nop
test
nop
test
and
shl
dec
adc
and
add
mov
movhps
push
aam
mov
add
jbe
dec
xlat
mov
inc
dec
and
push
out
scas
mov
sub
retf
test
(bad)
adc
fist
lds
inc
pushf
ins
lea
pop
retf
xchg
lods
(bad)
fxtract
mov
dec
jne
inc
mov
adc
adc
push
fiadd
fiadd
and
fidiv
in
nop
scas
push
retf
inc
call
sbb
nop
fs
mov
inc
sbb
das
enter
xchg
push
cmp
repnz
retf
fiadd
and
sahf
mov
scas
ror
scas
mov
add
inc
add
sbb
loop
frstor
sbb
ins
push
inc
adc
inc
ins
jmp
dec
jge
and
push
jno
and
cmp
jb
mov
cmp
imul
in
xchg
and
xor
push
mov
jmp
xchg
aam
(bad)
call
ret
xor
xchg
xor
pusha
out
jno
add
jb
repnz
movs
add
sahf
inc
imul
scas
adc
cmp
inc
(bad)
and
stc
in
hlt
lea
pop
mov
sbb
dec
in
inc
mov
imul
push
lea
pop
dec
inc
push
loopne
push
ja
jnp
jp
fnstsw
fadd
xor
pop
push
lock
movs
in
outs
fst
xlat
in
push
in
cmps
(bad)
sbb
pop
(bad)
movs
scas
inc
hlt
enter
push
add
inc
sbb
cmp
(bad)
test
or
mov
fs
fist
shr
xchg
fbld
stos
loope
adc
sub
out
aas
test
push
lds
dec
nop
dec
fimul
dec
cmp
adc
out
mov
inc
out
xchg
push
add
daa
dec
and
je
push
or
lock
clc
faddp
mov
jecxz
fild
push
inc
jl
mov
aas
xor
inc
mov
js
popa
fxch
sub
add
loopne
mov
and
repz
adc
mov
inc
xor
jmp
sub
sti
dec
jne
dec
dec
jmp
add
je
retf
or
or
cwde
xchg
mov
pop
xchg
xchg
in
and
push
bnd
push
test
in
adc
adc
add
dec
mov
jb
xor
loopne
pop
test
cld
push
gs
mov
cmp
inc
ins
xor
(bad)
mov
sub
and
int
or
xchg
loopne
and
fwait
sbb
in
addr16
mov
inc
ret
push
add
ss
(bad)
jle
dec
cmp
mov
xor
inc
pop
cmp
add
enter
mov
add
movs
loope
repnz
inc
xchg
lods
loope
sbb
aas
ret
add
cmps
cmps
and
mov
outs
jbe
cmps
sub
inc
jo
and
cmp
mov
idiv
jbe
or
or
popa
jb
add
cmps
push
push
jle
adc
xchg
aam
popa
repz
push
add
bound
ins
dec
rcl
sub
inc
scas
lods
adc
ins
xor
mov
inc
js
xchg
cmps
cmp
inc
pop
call
dec
pop
scas
aad
lods
data16
xchg
push
inc
fs
arpl
push
dec
inc
stos
mov
icebp
rcr
adc
mov
add
sbb
push
mov
pop
cmps
nop
lahf
add
(bad)
adc
sub
push
inc
ror
addr16
push
or
ins
xchg
cmps
adc
xchg
aas
adc
sub
or
xchg
add
mov
das
xor
inc
mov
inc
push
outs
inc
scas
fmul
(bad)
clc
inc
or
inc
lock
div
mov
ret
repz
push
nop
in
or
fimul
stc
mov
push
dec
stc
(bad)
stc
mov
jnp
not
lods
push
int3
in
enter
adc
imul
loopne
adc
out
xchg
and
and
iret
dec
or
xor
mov
mov
sbb
push
cmp
movs
push
mov
cwde
sbb
sbb
aaa
loope
sbb
and
shr
and
sbb
lods
sbb
dec
push
cmp
sbb
cmps
pop
icebp
or
movs
sbb
xchg
add
mov
inc
add
call
add
adc
test
movntps
lock
mov
ds
sub
add
inc
test
jns
dec
push
sahf
nop
dec
cmp
sub
add
clc
sub
fs
xor
sub
pop
fadd
fcmovbe
add
cmp
sbb
sbb
ret
dec
add
loopne
ds
and
inc
xchg
repz
or
inc
mov
add
lock
or
or
cmp
fnsave
cmp
add
or
fcmovnbe
cmp
sbb
push
xor
out
or
jl
and
mov
or
xor
or
scas
dec
sbb
push
dec
pop
push
xchg
mov
syscall
frstor
and
(bad)
and
sub
jb
rol
(bad)
push
sbb
cmp
aad
xor
and
cmp
cmp
and
(bad)
nop
sbb
sbb
mov
(bad)
lea
xor
shl
inc
sub
and
outs
inc
out
jmp
and
ds
rcr
cmps
mov
adc
dec
cwde
cmp
nop
cwde
push
add
and
jns
popa
pop
mov
adc
lea
rcr
inc
lock
fisub
push
push
push
pop
pop
imul
push
in
sub
push
hlt
test
xor
xor
dec
sub
pop
xchg
xlat
sar
pop
es
dec
(bad)
loopne
stc
push
xor
add
loope
sub
fild
add
loopne
pop
xor
popf
rol
or
out
(bad)
sbb
lods
pop
add
pop
in
pusha
add
cld
push
push
dec
arpl
xor
mov
shl
cmps
and
xlat
and
push
or
add
lea
sar
adc
dec
ds
and
dec
lock
push
pusha
inc
add
add
cwde
shl
push
add
test
lock
out
pop
cmps
push
xor
shr
mov
ss
pop
jnp
inc
mov
or
rol
cmp
repnz
jmp
pop
mov
or
xor
sbb
mov
push
jo
or
gs
sbb
mov
add
leave
ja
push
jb
arpl
jl
or
ss
xor
jg
add
pop
push
fcomp
cmps
cmp
jae
add
sub
push
sub
lahf
movs
lods
adc
test
in
pop
and
push
sbb
int
and
and
sub
into
push
push
add
enter
pop
sar
push
scas
mov
inc
inc
scas
xor
daa
in
inc
js
(bad)
inc
or
push
nop
pop
pop
and
fst
or
ret
pusha
mov
and
mov
jmp
push
and
rcl
or
mov
xchg
inc
fisttp
ins
or
sahf
imul
jecxz
or
mov
dec
jbe
or
mov
push
in
jo
or
repnz
jo
in
xchg
xor
add
outs
lock
xor
ret
ds
mov
dec
dec
cmp
sti
movs
jno
xchg
nop
pushf
xlat
in
adc
test
je
jo
and
cmc
jg
cmp
(bad)
shl
xor
xor
inc
xor
xor
cld
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
fwait
rcl
xchg
and
push
push
push
adc
rcl
adc
adc
sub
jo
les
adc
and
fs
js
aam
pop
test
push
mov
pop
inc
ins
out
xor
inc
and
push
lds
scas
test
clc
xchg
test
data16
and
add
jo
cs
add
xchg
add
or
push
sbb
or
or
pop
sar
pop
mov
aam
jp
push
xchg
jo
sub
lahf
push
(bad)
sbb
add
shl
mov
repz
inc
inc
clc
pop
mov
sub
clc
fidivr
or
push
push
and
sub
das
mov
mov
push
inc
jge
shr
xchg
mov
xor
dec
or
cmps
jge
(bad)
mov
cli
push
sbb
nop
xchg
inc
cwde
fstp
into
rcl
xor
cmp
fcmovnb
add
sub
or
mov
jmp
loope
or
ffreep
xor
xor
push
inc
inc
jle
in
inc
dec
pusha
sub
cmps
movs
nop
sbb
popf
and
lock
mov
jp
mov
xor
sahf
add
xchg
(bad)
repnz
sbb
inc
in
cs
lock
fcmovne
cmps
adc
pop
xchg
sbb
int
aaa
mov
inc
pop
mov
loope
rol
inc
xor
or
mov
xor
add
ss
test
mov
lea
and
retf
(bad)
xchg
pop
push
loope
mov
js
push
xchg
clc
gs
cmc
sbb
xor
cmp
jmp
mov
into
sbb
out
mov
nop
jl
inc
jmp
popa
in
xor
lock
pop
imul
enter
add
icebp
in
outs
mov
or
jmp
inc
(bad)
sti
push
add
cmp
inc
iret
lds
pop
mov
lods
out
sub
mov
and
int3
xor
or
xchg
push
inc
nop
arpl
or
dec
adc
dec
mov
aad
inc
aas
mov
inc
push
sbb
xor
add
or
add
pop
inc
dec
popa
jg
adc
add
mov
ret
adc
pop
dec
arpl
pop
and
mov
or
adc
jmp
xchg
mov
adc
dec
arpl
scas
lods
int
es
sub
mov
pop
xor
jmp
cmp
ja
pop
rol
dec
jo
mov
in
fidiv
jmp
in
and
add
pop
leave
pop
dec
mov
out
in
xlat
adc
add
or
cmps
fld
jg
pop
movs
jno
div
mov
in
pop
sbb
xchg
sub
idiv
mov
and
fwait
xchg
add
cld
jno
rcr
ss
inc
imul
sbb
pop
mov
cs
push
jb
out
inc
je
xor
pop
xor
push
inc
clc
pop
fisub
cmp
xor
mov
rcr
movzx
cmp
fbld
sub
gs
add
push
inc
xor
xchg
ss
push
add
xchg
xchg
daa
mov
adc
mov
jb
sub
jl
inc
imul
leave
nop
and
mov
cmps
leave
or
imul
mov
mov
loopne
fisttp
pusha
xor
aas
cmp
mov
sbb
aas
adc
adc
xor
repnz
sti
inc
xor
mov
push
cmp
add
cmp
aas
and
(bad)
pop
xor
inc
mov
js
(bad)
enter
jmp
daa
adc
retf
or
test
js
test
stos
jmp
int3
in
fild
cs
mov
jle
(bad)
adc
mov
push
loope
int3
js
adc
or
call
rcr
or
jbe
(bad)
push
adc
leave
add
xor
dec
xchg
add
pop
inc
outs
rol
clc
sahf
jl
jl
cli
add
loope
test
pop
nop
xor
add
call
dec
pop
pusha
mov
mov
pop
push
adc
fs
pop
jmp
and
dec
loope
dec
fdivr
xor
mov
sub
fst
loope
jae
push
lock
dec
pushf
aas
add
adc
lock
push
mov
add
scas
or
je
xor
call
adc
mov
cmp
data16
leave
mov
or
scas
stc
and
dec
push
neg
jmp
in
and
xor
pop
cmp
xor
loop
inc
into
pop
xlat
or
xchg
or
mov
jmp
or
and
and
test
mov
jge
cmp
xor
adc
dec
add
nop
call
cld
rol
adc
pop
fcmovnu
push
jno
cmc
in
push
or
push
in
or
pop
inc
push
adc
push
push
dec
xchg
retf
rcl
inc
add
adc
pop
push
pop
sub
iret
lods
dec
sti
in
xor
dec
and
lahf
or
or
call
jmp
push
mov
jbe
pushf
pop
or
es
push
or
push
sbb
out
mov
mov
call
daa
ret
pop
sbb
(bad)
clc
add
pop
lods
test
outs
sbb
or
and
icebp
inc
mov
mov
sbb
mov
loopne
fadd
(bad)
pxor
add
mov
ins
scas
enter
pop
in
adc
xchg
push
je
(bad)
dec
cmp
test
test
adc
scas
add
lock
lock
dec
xor
and
call
dec
scas
clc
or
sar
es
inc
shr
xor
ret
mov
int3
push
aad
jge
mov
push
fwait
and
pop
sbb
daa
xor
xchg
inc
popf
fiadd
mov
xchg
cmp
fld
daa
sahf
inc
dec
mov
jg
cmp
adc
xchg
test
aad
cmp
jae
mov
jp
mov
or
adc
adc
mov
loope
shl
inc
xor
xor
inc
inc
mov
xor
movs
lock
or
jg
sub
or
sub
mov
popa
vpmaxsw
ds
sub
cmp
push
loop
adc
clc
add
jo
xchg
jmp
rcr
add
xchg
test
push
invd
repnz
in
add
xchg
ror
dec
cwde
mov
mov
or
push
adc
outs
fidiv
and
and
add
jo
pop
adc
sbb
mov
and
adc
es
vmread
push
and
movs
test
and
inc
retf
retf
sub
test
aad
outs
and
enter
dec
ins
pop
fcom
mov
add
push
inc
or
jl
add
repnz
or
cmp
mov
out
mov
aam
or
aaa
mov
adc
or
dec
add
movs
mov
add
sahf
adc
xor
xor
mov
fstp
add
adc
mov
and
jnp
adc
mov
push
cmp
add
fcomip
add
cmp
arpl
sub
xchg
icebp
scas
xchg
dec
sub
lock
push
mov
jae
adc
pop
retf
inc
or
fbstp
in
xchg
dec
and
sub
add
div
mov
shl
scas
and
push
push
sbb
rcl
popa
push
xlat
cmp
push
mov
xchg
stos
inc
cmp
aad
hlt
mov
cmp
pop
inc
dec
dec
fst
sub
idiv
sub
inc
iret
dec
pop
das
loopne
sti
fs
and
sbb
mov
gs
enter
or
mov
add
xchg
jne
push
call
rol
inc
stc
and
rol
jbe
js
inc
push
jle
sbb
add
mov
cmp
cmp
push
sbb
ss
push
sub
push
xchg
test
and
icebp
mov
dec
sbb
jmp
hlt
mov
add
fild
add
sub
or
inc
add
add
or
sub
xor
enter
test
pusha
pop
pusha
dec
sbb
lds
xor
loope
sub
or
cmp
mov
ins
inc
cmp
mov
mov
xchg
jmp
and
nop
dec
adc
push
ins
clc
push
inc
lock
inc
cwde
pop
add
leave
inc
popa
imul
jl
mov
pop
push
push
inc
adc
idiv
imul
clc
jmp
add
mov
lods
sub
pop
mov
jge
loope
mov
clc
xchg
loopne
push
cmps
inc
call
sbb
xchg
popf
mov
int
push
or
clc
ss
or
sub
sub
sub
(bad)
inc
push
sub
pop
lock
enter
rcl
inc
aad
faddp
rcr
fsub
inc
pushw
mov
test
daa
and
(bad)
ret
pusha
or
movs
pop
test
js
cmc
sub
cmp
push
inc
mov
sub
sbb
sbb
mov
or
pop
iret
hlt
xor
hlt
sub
and
inc
add
rep
lock
clc
or
pop
jns
push
xor
inc
jne
add
sbb
xor
leave
lock
ror
add
sar
and
sti
or
in
(bad)
pop
fild
push
sbb
or
and
fs
sub
adc
lea
add
sbb
add
adc
or
sbb
jge
aaa
gs
mov
add
loopne
pop
test
and
cmp
and
daa
pop
jl
ja
or
mov
and
loopne
ret
call
dec
iret
push
inc
pop
or
and
add
push
pushf
dec
add
fmul
or
dec
dec
loopne
or
adc
cmps
fisttp
add
xchg
add
(bad)
or
lahf
dec
or
icebp
add
cmp
jge
mov
sub
jmp
push
dec
pop
push
ret
lock
repz
adc
sbb
sub
aam
cmp
sub
enter
data16
ret
cmp
dec
call
sub
ret
add
adc
loope
rcl
(bad)
push
(bad)
dec
and
xor
or
cmp
push
and
(bad)
les
call
nop
clc
adc
std
shld
mov
stos
inc
clc
in
xchg
xchg
add
xor
lods
clc
sub
repnz
call
sub
dec
lock
and
dec
clc
add
mov
stos
adc
adc
or
clc
mov
and
add
add
sbb
pop
test
lock
call
test
pop
test
movs
leave
test
and
dec
push
adc
pop
push
shl
and
dec
cmp
ror
imul
push
outs
adc
xchg
cwde
loopne
dec
repz
rol
jecxz
rol
shl
adc
sbb
ret
xlat
fbld
mov
cmp
jge
jns
dec
dec
fwait
jae
jl
jge
pop
ret
inc
adc
push
fcmovbe
cld
pop
and
rcr
lods
inc
cmps
sbb
outs
enter
sbb
pop
cs
xchg
scas
cmps
jae
sub
ret
imul
mov
sbb
pusha
inc
push
cmp
jge
and
adc
xor
pop
pop
mov
pop
xchg
retf
cmp
fs
jl
mov
movs
rep
pop
adc
ins
mov
inc
or
out
jp
call
push
icebp
lea
pop
nop
lock
push
sub
push
adc
xchg
push
sub
sbb
dec
ret
cmp
fadd
pop
adc
cld
add
in
clc
push
sbb
or
mov
nop
stc
loopne
mov
mov
push
call
mov
adc
inc
ja
fwait
pop
inc
xor
cmp
xor
adc
cld
add
loopne
(bad)
inc
xchg
push
sub
and
call
adc
(bad)
mov
pop
dec
sbb
movs
push
xor
aaa
dec
dec
es
bndldx
jmp
adc
es
out
loop
out
adc
mov
or
or
cmp
fadd
pcmpgtd
test
add
mov
dec
xchg
cld
ja
sbb
(bad)
int
mov
and
sbb
xchg
push
lock
mov
ins
add
data16
add
dec
sub
push
loopne
popa
jne
cmp
xor
inc
add
mov
jp
cmps
pop
clc
xchg
push
out
lods
and
inc
push
popf
xchg
xchg
fdiv
ret
loope
xchg
popa
inc
push
dec
and
ds
sahf
dec
fld
xor
adc
ret
dec
ret
pop
pop
outs
cmp
xchg
lea
sub
mov
mov
daa
mov
je
jb
pop
jp
imul
or
(bad)
fstp
adc
mov
cmp
daa
or
inc
or
ret
inc
enter
add
loop
pop
inc
push
in
out
xchg
mov
push
adc
cmp
xor
out
inc
mov
je
cmp
imul
sub
mov
or
(bad)
mov
sbb
cwde
jno
fnstenv
je
(bad)
sahf
movs
dec
and
sbb
and
and
ds
push
jne
inc
adc
pop
mov
add
adc
ror
pusha
repnz
paddd
add
mov
test
outs
fidivr
ds
lods
add
inc
adc
push
mov
ret
add
inc
xor
adc
adc
mov
test
sbb
dec
pop
mov
inc
sbb
sub
or
jl
mov
and
lock
test
sbb
xor
pop
in
(bad)
pop
cmp
shr
cwde
cmp
fs
inc
mov
and
pop
push
mov
cmp
pop
mov
fwait
and
sbb
es
mov
mov
xchg
je
mov
push
icebp
ror
pop
mov
lidtd
adc
cmps
adc
mov
push
pop
inc
cmps
mov
push
aas
jbe
and
rol
fdivr
test
cmps
lock
or
sub
jmp
pop
mov
jne
adc
xchg
push
mov
or
out
pop
add
push
mov
das
jmp
ret
pusha
pop
and
int3
mov
or
out
popa
dec
cmp
lock
ficomp
nop
xchg
lock
shl
inc
inc
and
jne
xor
xchg
(bad)
sub
mov
sub
(bad)
adc
mov
xor
arpl
mov
jo
das
sbb
add
shr
sub
into
adc
loopne
xor
ss
pop
sbb
adc
or
xchg
push
ret
push
add
(bad)
in
jmp
ins
mov
retf
mov
js
test
test
ja
fsubr
adc
ss
sub
fsub
movaps
jmp
call
out
pop
adc
sbb
xchg
dec
jno
cdq
push
sub
popf
pop
mov
push
dec
jnp
fsub
adc
dec
mov
addr16
sbb
out
inc
inc
scas
inc
leave
xchg
inc
cld
and
push
add
dec
push
or
add
cmp
adc
jg
(bad)
adc
out
cmp
add
add
jo
iret
int
ds
pop
xchg
aaa
enter
and
cmp
jo
and
cmp
(bad)
(bad)
outs
out
pusha
mov
retf
push
cmp
fstp
mov
cmp
jnp
es
push
push
and
mov
xchg
sti
mov
imul
aas
pop
mov
push
les
cmp
loopne
lock
mov
cmp
jmp
aad
lods
inc
jo
push
pop
pop
mov
lea
outs
ja
sbb
pop
movs
aas
ins
jge
inc
call
aas
mov
sub
std
dec
cdq
jle
push
push
data16
add
cmp
enter
add
mov
inc
pop
(bad)
push
rcr
cmp
mov
enter
and
xchg
scas
inc
aas
cs
mov
and
cmp
and
cs
mov
add
mov
adc
dec
push
pop
adc
fsubr
enter
mov
mov
les
sub
jge
and
adc
idiv
fs
arpl
adc
stc
or
jmp
push
pop
outs
push
adc
jl
mov
cmp
ret
ja
js
mov
add
test
mov
inc
xchg
in
movs
pop
mov
xchg
(bad)
mov
inc
adc
inc
mov
jae
cvtps2pd
mov
lock
and
repz
movs
or
adc
dec
adc
dec
mov
xchg
dec
xor
xlat
push
sbb
and
xor
inc
sub
sar
call
cmp
mov
add
sub
daa
aaa
mov
repz
mov
adc
cmp
mov
mov
nop
mov
out
ins
add
jne
cmp
inc
sbb
push
rol
fisttp
imul
sub
push
mov
and
jne
push
sbb
push
sub
push
in
idiv
sbb
aaa
push
dec
inc
add
adc
into
movs
mov
or
ins
es
xchg
xchg
aas
add
cmp
and
mov
dec
mov
cld
in
mov
call
inc
sub
sbb
mov
xchg
js
inc
jmp
sbb
or
sbb
arpl
mov
inc
xor
imul
adc
test
hlt
sbb
xor
clc
leave
dec
inc
in
rol
enter
mov
mov
repnz
retf
sub
sub
sub
push
jnp
mov
cmp
mov
sbb
mov
adc
sti
cmp
fadd
loop
and
pop
dec
xor
loopne
push
push
sti
cmps
xchg
sbb
aam
je
push
sbb
mov
repz
and
mov
pop
retf
push
adc
xor
mov
sub
cdq
int3
enter
inc
call
int3
push
push
stos
mov
lds
inc
push
and
and
or
add
add
in
mov
ret
add
mov
xor
jnp
inc
jmp
pop
xchg
dec
mov
jns
call
dec
fimul
ins
xor
add
inc
jmp
fdiv
rcr
add
out
retf
adc
adc
push
int3
addr16
pop
pop
jo
into
fsubr
cmp
adc
mov
ins
sbb
clc
cld
mov
or
or
mov
adc
fsub
lods
dec
sub
jns
xor
sahf
(bad)
xchg
sbb
popa
movs
leave
mov
sbb
add
xchg
sbb
clc
and
cli
arpl
into
add
push
imul
sub
add
sbb
lock
mov
pop
xchg
(bad)
test
add
xor
mov
(bad)
pop
test
push
pop
xor
cmp
push
outs
and
int
xor
bswap
ss
push
fucomip
adc
into
mov
jmp
push
cmp
cmp
mov
push
rcl
aad
adc
xor
dec
pusha
cli
xchg
inc
pop
stc
cmp
and
(bad)
sbb
imul
add
mov
ret
ja
sti
jl
out
jp
aas
inc
test
in
fstp
test
inc
test
popf
jns
inc
rol
jne
add
dec
ret
fisub
pop
xchg
std
jle
mov
inc
test
sub
xor
scas
xor
jne
loope
in
rcl
jnp
movs
aad
mov
xchg
or
and
dec
inc
jne
mov
dec
jl
movs
popa
idiv
mov
push
test
inc
dec
pop
cmp
jmp
sbb
and
test
push
cmp
inc
add
sbb
xor
dec
in
retf
pop
push
fadd
jmp
cmp
jecxz
pop
jo
inc
push
das
add
iret
lds
fdivr
inc
cmp
retf
test
add
or
(bad)
retf
xor
inc
jae
mov
mov
pop
inc
xor
popa
lods
repz
es
test
ja
stc
adc
cmp
daa
pop
pusha
cs
add
ins
mov
push
add
(bad)
lock
lahf
sbb
inc
jmp
ja
in
test
es
in
aam
ret
add
repnz
or
nop
push
add
adc
push
inc
xlat
cmps
hlt
xchg
mov
jecxz
adc
shl
clc
cmc
ret
mov
pushf
test
je
fwait
(bad)
(bad)
inc
sub
pop
stos
loopne
arpl
mov
inc
and
and
mov
add
dec
shl
rcr
call
out
xor
cld
cmp
aad
pop
xor
inc
fs
lea
ins
js
int3
js
inc
ins
ret
retf
movs
cmp
or
mov
or
fimul
add
push
jge
sar
xchg
stos
pop
sbb
or
dec
jecxz
ret
or
fist
adc
int3
mov
sbb
(bad)
and
aas
shr
pop
cs
out
cmp
add
jp
lock
mov
test
hlt
xor
icebp
sbb
sub
jo
or
ret
(bad)
xchg
push
or
or
dec
test
rcl
cmp
add
dec
sub
pop
pop
xchg
jae
xor
cs
adc
sbb
mov
and
pop
shl
(bad)
xchg
mov
add
cli
xor
fwait
xchg
jbe
mov
or
push
out
arpl
adc
push
cli
or
jg
mov
lods
popa
inc
mov
lock
or
adc
int3
pop
and
jns
or
xor
add
inc
sub
cmp
jp
add
adc
add
xchg
add
push
aaa
or
add
push
pop
mov
jno
inc
add
xchg
mov
mov
jb
loop
add
push
push
cli
data16
cli
sub
push
sub
cmc
add
push
jge
mov
cmp
adc
mov
and
outs
push
push
pop
add
mov
add
pop
cwde
xor
repz
ror
pop
rcr
push
pop
adc
adc
mov
repz
or
push
inc
arpl
xor
je
push
loope
sub
cmp
push
push
pop
ror
movs
add
add
and
nop
pop
push
lds
xor
retf
mov
cs
push
adc
adc
xchg
adc
push
sub
pop
push
mov
xlat
(bad)
sub
and
and
sbb
inc
cmp
je
xor
push
shl
mov
jmp
mov
mov
mov
cmp
pop
xchg
ffreep
mov
loopne
dec
or
aam
adc
xor
jmp
and
test
ss
outs
test
popa
into
pop
sub
add
loope
push
lahf
shr
inc
push
add
rcl
cmp
and
pop
clc
jb
stc
sub
inc
emms
std
or
mov
test
test
fisttp
shl
(bad)
sbb
or
adc
pop
cmp
add
jge
xchg
shr
sbb
push
sar
add
pop
add
inc
popa
ds
pop
add
test
inc
popa
test
cmp
xor
sub
mov
inc
mov
adc
xor
jno
push
dec
js
sbb
cdq
lahf
pop
adc
outs
push
out
movs
cs
ret
mov
inc
or
pop
shl
jg
dec
dec
rcr
and
add
(bad)
cmp
inc
add
inc
shr
addr16
test
(bad)
addr16
or
xor
or
fild
xchg
pusha
ss
fs
or
adc
adc
pop
cmp
pop
cmp
cdq
push
dec
aas
push
test
dec
push
mov
inc
dec
and
retf
test
or
aad
cmp
push
nop
or
and
xor
je
ret
sbb
add
test
add
sti
lock
xor
cmovno
lock
leave
test
je
pop
push
dec
fs
test
or
add
ja
add
mov
cmp
inc
(bad)
out
push
pusha
or
and
sbb
jge
xchg
aam
push
aaa
xor
inc
xchg
or
inc
shr
pop
push
push
sbb
adc
inc
xor
jo
ret
add
mov
pop
mov
dec
call
enter
(bad)
aam
or
push
dec
lock
fimul
cmp
ja
outs
mov
aas
rol
sub
lea
(bad)
fs
es
adc
call
scas
(bad)
cmp
(bad)
jmp
sbb
mov
lods
adc
cmp
xchg
sub
out
push
mov
(bad)
jl
adc
xor
jne
jmp
pushf
test
dec
loop
add
add
jns
jno
fisttp
daa
dec
or
mov
or
or
and
mov
and
pop
sbb
adc
xor
push
enter
in
aaa
arpl
stc
dec
dec
mov
push
pusha
pop
sbb
push
ss
leave
push
clc
pushf
lods
imul
inc
mov
push
das
or
rol
xor
test
dec
or
cmp
xor
xor
jb
mov
ins
dec
frstor
xchg
cmp
xor
pop
jl
or
imul
dec
inc
inc
adc
inc
js
aaa
sbb
call
push
pop
push
push
jp
add
fsubr
push
and
test
aaa
adc
jl
mov
adc
dec
mov
mov
imul
xchg
pushf
push
xor
ret
aas
cmp
or
in
adc
push
mov
fcom
add
arpl
sub
daa
inc
loopne
push
sub
in
or
adc
inc
cmp
dec
fcomp
retf
ror
push
sub
mov
add
cmp
int3
inc
adc
jg
adc
cmp
jne
xor
out
imul
push
add
cmp
ret
xor
pop
add
jbe
iret
sahf
(bad)
repnz
es
es
and
adc
or
inc
nop
push
jmp
int3
div
popf
jo
sub
test
dec
dec
or
add
daa
sub
sub
inc
sub
add
(bad)
or
pop
add
sub
and
mov
mov
mov
pusha
or
lods
adc
imul
mov
lock
loop
pop
rcr
test
add
mov
jne
inc
pop
mov
mov
push
xchg
xchg
or
push
inc
adc
outs
or
xlat
mov
repz
leave
hlt
add
and
mov
add
lods
mov
out
in
cmps
fmul
sbb
popa
and
cmp
mov
dec
test
add
xlat
mov
adc
mov
int3
and
sub
or
inc
nop
xchg
sbb
or
adc
dec
jge
fs
mov
ficom
imul
or
ja
jg
pop
test
mov
mov
inc
dec
test
xor
dec
sbb
and
cdq
xchg
fdivr
or
or
ret
push
scas
aas
fdivr
and
cmp
push
sbb
xor
mov
mov
mov
push
lea
pop
ret
int
arpl
xor
cwde
pushf
pop
mov
out
jns
ins
lods
mov
gs
inc
cmp
fcom
and
je
fdivr
sub
adc
in
icebp
inc
dec
pop
ret
and
int3
inc
in
scas
test
imul
jmp
fmul
rcl
xlat
inc
mov
enter
in
loope
or
jns
inc
jne
sub
pushf
add
push
js
call
push
push
push
dec
mov
xchg
lea
in
test
(bad)
jmp
and
mov
sub
push
push
lds
jecxz
dec
xchg
add
and
je
shr
xchg
pop
adc
jl
ror
cmp
rcl
sbb
out
mov
push
pop
push
sar
adc
add
dec
mov
xor
call
adc
cmp
inc
imul
mov
add
mov
and
add
ret
add
jb
push
inc
or
sbb
xor
push
mov
mov
aaa
push
add
shr
mov
inc
test
jmp
jge
push
push
les
push
stc
stc
stc
xchg
jns
cmp
ror
(bad)
imul
push
sbb
or
cmp
pop
mov
add
ret
test
int3
ss
mov
pop
mov
jle
clc
loop
std
pop
ss
xchg
aaa
sbb
cwde
mov
outs
inc
xor
jmp
dec
inc
xor
jp
inc
mov
sbb
push
dec
sbb
sub
idiv
test
fsubr
or
in
pop
push
and
or
fbstp
adc
fstp
push
stos
inc
ror
and
adc
add
movs
cmp
add
ficomp
pop
and
sub
fsub
pop
or
ret
aas
(bad)
dec
dec
sub
in
cmp
dec
stc
push
adc
test
inc
and
jne
or
and
xchg
pop
push
mov
push
xor
icebp
sbb
fidiv
(bad)
push
je
add
jno
les
sbb
pop
stos
and
mov
bnd
push
push
mov
in
mov
cmp
and
jo
or
jecxz
pop
clc
out
sar
loope
or
es
xchg
or
es
xor
sub
scas
push
sbb
and
adc
sub
add
lods
jmp
sbb
push
inc
jg
push
outs
lock
inc
pop
mov
adc
lock
push
cmp
jl
mov
test
adc
and
push
jmp
les
lods
fs
jl
inc
sbb
push
xchg
push
ins
js
ret
mov
stos
adc
inc
fcmovnu
push
je
or
jmp
clc
movs
nop
pusha
outs
sub
inc
inc
ins
jmp
imul
pop
repz
xchg
push
aam
cmps
stc
cmp
in
loopne
adc
jnp
jge
or
cmovbe
loopne
push
iret
jnp
out
adc
sub
outs
cwde
(bad)
repz
idiv
ror
mov
cmp
mov
aas
test
lods
push
addr16
jmp
in
inc
inc
test
fild
dec
(bad)
mov
fidiv
aad
xchg
nop
xchg
imul
stc
sub
mov
push
gs
xor
adc
push
add
inc
dec
jle
lods
and
out
inc
mov
out
add
ins
mov
jl
sub
push
dec
outs
arpl
in
add
js
xchg
adc
add
inc
xchg
btc
js
add
cmp
inc
add
jne
ss
adc
je
mov
ins
add
cmp
dec
add
and
iret
lds
lods
dec
adc
dec
les
imul
xor
outs
mov
shl
pop
xor
clc
movs
and
push
or
jb
dec
jmp
repnz
loope
xchg
sub
mov
adc
inc
ja
ja
hlt
jb
push
pop
and
nop
mov
int
fidiv
pop
push
xchg
out
add
or
(bad)
mov
pop
or
add
add
mov
je
push
dec
jns
ds
mov
push
ins
outs
fs
add
add
mov
sbb
xor
call
and
cmp
add
mov
or
push
pop
sbb
sbb
jns
inc
sbb
sbb
add
or
or
cs
pop
out
mov
xor
jae
shl
jae
into
je
and
imul
jbe
ficom
pop
push
dec
pop
dec
add
fwait
adc
ss
sbb
or
xchg
hlt
jbe
xchg
pop
or
jl
inc
lods
jge
scas
pop
stc
inc
add
inc
inc
ja
jecxz
rol
dec
push
jp
jl
shr
mov
jl
adc
fs
push
sbb
sub
mov
pop
adc
jp
sbb
add
mov
jmp
inc
sbb
add
pop
test
dec
inc
nop
cmps
sbb
xchg
dec
or
pop
mov
cmp
int3
test
push
mov
xor
add
enter
or
cmp
mov
or
xor
push
ret
es
ins
push
fist
push
outs
mov
sbb
ror
jae
dec
(bad)
add
fist
dec
pop
pop
dec
prefetch
ret
fs
adc
inc
dec
movs
sbb
idiv
jmp
inc
std
das
mov
popa
sbb
out
push
cmps
nop
or
cmps
sub
out
add
int
pop
inc
adc
popf
add
shl
sub
mov
in
or
sbb
pop
neg
pop
or
add
add
mov
outs
fsub
xor
js
dec
mov
shl
push
cmps
mov
dec
neg
sti
outs
jne
sbb
add
dec
cs
fbstp
popf
repnz
pusha
sahf
push
or
mov
xchg
nop
js
inc
lea
adc
adc
mov
or
addr16
adc
mov
adc
mov
inc
and
sub
popa
push
gs
dec
lock
ror
imul
xor
in
and
imul
movs
mov
loope
dec
(bad)
mov
cmc
inc
dec
xor
jg
fs
mov
push
jb
ins
popa
jb
or
or
test
into
cmps
push
pusha
popa
xor
fs
jo
sbb
inc
cmps
pop
and
cdq
mov
add
cmp
loopne
sub
push
inc
lods
xchg
arpl
dec
imul
or
iret
inc
and
sbb
push
retf
sub
ja
add
js
cmp
adc
and
jo
xchg
push
add
(bad)
jge
mov
add
pop
addr16
push
push
dec
pop
or
xchg
jnp
je
add
ja
adc
paddusw
or
xor
fcomp
js
ret
pop
push
or
or
adc
push
mov
femms
out
pusha
push
daa
push
push
loopne
cmps
ins
push
clc
push
pop
jbe
clc
mov
lock
inc
add
inc
pop
cmps
inc
imul
pop
push
add
lahf
cmp
xor
adc
into
push
pop
test
nop
pop
jns
lea
inc
add
push
nop
inc
test
inc
pushf
mov
and
ror
xchg
in
(bad)
pop
jl
inc
add
movs
inc
add
sbb
lods
inc
sbb
inc
cld
mov
fwait
dec
mov
cmp
sub
sar
dec
cwde
(bad)
(bad)
iret
mov
pop
dec
jp
mov
add
hlt
adc
add
add
add
jmp
add
add
add
add
adc
push
jle
rcl
or
test
add
enter
mov
push
popa
add
adc
mov
mov
es
adc
jg
mov
mov
push
lahf
xor
jmp
add
stos
imul
pop
scas
push
in
cmps
stc
mov
jl
mov
rcl
out
jl
in
xor
fdiv
xor
jge
cmp
dec
mov
push
cmp
push
xor
(bad)
mov
mov
call
ss
retf
fild
sub
cmp
jl
inc
mov
into
data16
les
xor
lods
xchg
or
push
pushf
lods
push
mov
mov
in
jge
into
leave
mov
les
in
xchg
js
cmps
(bad)
xor
test
enter
mov
add
adc
pop
and
mov
nop
fs
dec
pushf
jmp
pop
pop
push
pop
adc
cmp
add
imul
hlt
push
retf
sub
push
push
push
loope
xchg
or
cwde
push
add
sub
inc
add
leave
mov
aas
bswap
add
ror
push
in
ins
add
push
add
repnz
loope
inc
adc
cld
adc
ucomiss
or
lahf
fst
pusha
repz
loope
xchg
cld
js
mov
add
pop
or
fisttp
ins
xor
ret
sar
xor
dec
pop
add
and
adc
pop
dec
mov
inc
xchg
mov
repz
repnz
cmp
dec
jo
push
dec
add
xchg
pop
adc
sbb
ins
add
push
sbb
pushf
or
mov
shr
hlt
and
dec
rcl
push
mov
inc
sbb
inc
dec
mov
mov
sbb
push
inc
js
or
mov
pop
sbb
mov
call
pop
not
(bad)
push
xchg
in
push
clc
retf
cmp
push
add
test
pop
inc
or
pop
and
push
cmps
enter
dec
push
push
jae
(bad)
(bad)
cmp
mov
add
and
frstor
ret
pushf
inc
popf
sub
pop
push
adc
and
enter
movs
mov
daa
pop
adc
mov
sub
stos
imul
int3
ins
cdq
mov
or
leave
clc
mov
dec
sbb
inc
push
test
sbb
dec
fstp
xor
clc
jmp
push
jmp
daa
shl
pop
cwde
rcl
sub
cmps
sub
jbe
add
jbe
lock
adc
mov
cmp
cs
ins
fimul
imul
pusha
sahf
mov
push
ret
adc
dec
add
xchg
xchg
out
xchg
ins
mov
sbb
mov
push
imul
push
mov
inc
mov
adc
fs
dec
enter
rcr
xor
xor
pushf
pop
inc
xor
iret
push
je
out
in
xchg
(bad)
aas
shl
(bad)
int
add
mov
out
push
sbb
inc
cmp
lea
repz
repnz
or
jns
sar
gs
inc
ja
inc
or
enter
cmp
scas
inc
add
clc
mov
cs
popf
(bad)
push
retf
rcl
dec
jo
dec
pop
mov
push
mov
pusha
leave
mov
pop
xchg
sub
sub
repz
dec
cmp
sub
mov
outs
add
pop
dec
ds
pop
enter
test
fcom
sub
push
inc
cwde
mov
mov
cwde
stos
inc
ret
sbb
add
add
xor
pop
adc
inc
sub
mov
inc
sar
rcr
push
mov
fild
sub
test
fadd
je
xor
sub
jns
mov
shl
jns
fdivp
lock
mov
cmp
or
dec
pusha
jb
dec
mov
cmp
cdq
and
adc
mov
add
stos
add
dec
mov
cmps
inc
rcl
dec
add
das
or
enter
push
and
and
and
lock
inc
rol
or
mov
rol
rcl
ror
ins
adc
mov
adc
jno
inc
dec
test
push
jno
adc
ror
mov
mov
cmp
adc
inc
xchg
mov
cmp
inc
push
add
inc
sahf
cmp
dec
imul
das
mov
mov
rcl
sbb
clc
add
es
and
push
push
pop
repnz
and
adc
test
mov
loopne
pop
call
or
lock
sbb
add
bound
test
pop
clc
xor
repnz
mov
add
inc
or
rcl
out
mov
out
push
mov
cs
push
lock
jns
fisttp
data16
xor
retf
int3
cs
inc
es
inc
jmp
ss
pop
sub
or
mov
daa
in
out
nop
fmul
add
push
data16
jg
push
pop
pop
jnp
sub
xor
fs
test
cs
js
scas
push
mov
test
rol
and
scas
cmp
inc
xchg
sysret
sbb
dec
cmc
cmp
mov
movs
and
pop
in
add
enter
or
pop
mov
add
gs
jecxz
xchg
inc
dec
sbb
push
jbe
mov
jb
push
setnp
cli
or
push
adc
mov
xor
nop
addr16
and
mov
mov
jae
fmul
fcomip
mov
in
repz
jp
mov
jne
data16
pop
cmp
je
and
fcos
push
inc
push
and
and
mov
call
push
retf
adc
and
adc
and
pop
dec
mov
es
das
jmp
rcr
xlat
ins
dec
push
or
adc
jae
ror
enter
and
mov
jbe
pop
cld
pusha
xchg
push
clc
jae
jns
mov
xor
jge
das
xor
fs
sbb
repnz
xor
mov
add
sub
repz
and
and
mov
or
xchg
sub
ficomp
jae
pop
push
dec
or
rcl
push
ins
sbb
aaa
loope
lahf
ret
or
xchg
sbb
mov
je
mov
adc
test
test
jne
shl
push
mov
pop
mov
pushf
or
jo
push
adc
ss
or
adc
ins
lahf
je
mov
add
sbb
aaa
ror
and
adc
pop
in
sbb
xchg
(bad)
scas
mov
or
inc
mov
std
xchg
dec
adc
nop
fild
add
push
sbb
cmp
repz
jecxz
and
call
loopne
sub
int3
pop
dec
lahf
and
sbb
pusha
test
imul
sub
jae
push
sbb
addr16
(bad)
ss
push
loopne
push
sbb
pop
push
lock
(bad)
cs
lea
mov
or
adc
add
retf
jae
add
add
adc
adc
sbb
cdq
fisub
je
mov
fs
adc
xor
ja
test
sbb
adc
add
add
dec
jae
or
adc
mov
mov
xchg
add
xchg
push
mov
cld
xor
xor
sub
push
or
and
inc
jle
aaa
not
add
(bad)
imul
xor
mov
lods
and
mov
hlt
adc
es
ja
sbb
push
mov
push
fcmovbe
dec
or
mov
dec
fstp
inc
or
or
and
or
mov
or
sub
push
inc
add
mov
nop
(bad)
mov
pop
(bad)
push
dec
inc
sbb
add
sub
push
les
adc
bound
or
lods
or
sub
add
lea
call
dec
pop
mov
add
mov
ins
stc
push
add
or
nop
es
das
adc
(bad)
mov
sub
mov
jle
fild
add
je
inc
and
mov
push
or
sub
adc
inc
sti
or
push
inc
add
shr
or
or
or
add
sbb
push
hlt
xchg
xlat
xlat
dec
into
retf
push
xor
jae
fsub
inc
imul
ret
or
adc
ret
pop
dec
mov
adc
inc
xor
hlt
(bad)
je
cmp
clc
xchg
daa
cmp
push
cmp
jmp
jmp
sub
cmp
cwde
js
fild
push
mov
or
adc
cmp
adc
fadd
or
loope
leave
dec
cmp
sbb
adc
fld
(bad)
inc
add
lock
xchg
mov
lea
push
in
push
sub
add
ret
pop
push
data16
or
inc
add
repnz
and
sbb
and
sub
neg
jmp
arpl
je
xchg
inc
(bad)
add
jg
shl
push
test
or
repnz
push
mov
inc
outs
daa
pushf
int
pop
stos
shr
add
aas
adc
mov
or
dec
sbb
pop
adc
les
or
cmp
pushf
xor
sbb
sub
sbb
call
nop
and
cmc
ds
xor
sub
pop
ss
push
push
(bad)
jnp
mov
dec
call
sbb
xor
(bad)
jecxz
mov
js
adc
jecxz
retf
data16
or
ins
cld
or
jmp
mov
dec
imul
or
sbb
icebp
jmp
inc
xor
mov
inc
or
mov
dec
or
retf
fsubr
or
into
fwait
lods
push
mov
mov
ret
and
pop
push
push
mov
in
cs
out
sbb
dec
sub
(bad)
int3
out
scas
xor
push
jmp
mov
and
adc
rol
(bad)
inc
push
outs
mov
mov
or
in
lods
inc
jmp
sub
xchg
pop
add
js
sub
ja
daa
movs
inc
jno
popa
push
jge
repz
cdq
mov
push
in
nop
and
cdq
daa
xchg
shl
adc
aaa
add
(bad)
hlt
into
ins
and
dec
inc
xor
clc
xchg
clc
cmp
inc
pop
pop
ss
xor
fs
push
adc
shl
sbb
leave
inc
sub
push
sbb
ins
pop
push
movs
adc
push
jl
xor
fdivr
push
and
inc
(bad)
rcl
sbb
loop
dec
dec
sahf
or
inc
cmp
inc
add
xor
imul
(bad)
sub
or
inc
sub
push
sbb
dec
inc
iret
sub
jecxz
add
sub
mov
(bad)
test
shl
pop
pushf
lods
ins
ret
xor
cdq
aaa
mov
clc
daa
pop
adc
push
loope
ins
cmp
sahf
stos
jecxz
cmps
mov
dec
pop
das
mov
mov
out
mov
cld
cmp
call
sbb
cmp
je
and
inc
mov
mov
(bad)
push
cmp
mov
rol
loopne
cmp
cs
js
adc
ja
lods
xor
mov
and
ds
js
or
and
outs
mov
mov
mov
loop
fadd
ret
(bad)
xor
sbb
jnp
push
add
cmp
test
ins
pusha
xor
cdq
lea
(bad)
jb
or
xor
fcomp
sbb
dec
ins
inc
loop
mov
retf
pop
add
shl
mov
add
and
mov
cmp
mov
xor
push
mov
jb
push
sub
in
sub
pop
(bad)
lock
cmp
inc
fisttp
sbb
stos
lock
push
(bad)
and
push
mov
mov
mov
clc
sbb
sub
mov
or
xor
or
adc
jmp
fwait
push
inc
cmps
sub
out
aas
or
not
inc
and
hlt
(bad)
pop
pop
adc
bound
(bad)
cli
lea
pop
ret
xchg
int3
mov
adc
xchg
rcl
stos
add
mov
pop
pushf
cmp
mov
mov
adc
popa
inc
ins
sub
fsubr
or
or
xor
ret
jg
add
and
mov
call
xchg
inc
pop
sub
push
xor
or
and
pop
and
jne
movs
and
stos
inc
mov
je
ja
mov
inc
xchg
mov
or
daa
push
mov
aam
pop
dec
pop
adc
jmp
scas
or
lock
sbb
jle
js
mov
outs
aaa
xchg
cmp
out
ds
ror
sub
pop
jp
dec
or
aaa
inc
(bad)
and
shr
scas
and
dec
add
mov
nop
call
push
in
push
sbb
shr
pop
aam
inc
call
add
jne
pop
adc
adc
pop
loopne
or
mov
xchg
pop
je
mov
sbb
xor
loopne
push
inc
mov
inc
rol
cmc
mov
or
test
sbb
test
mov
imul
jp
pop
fisttp
sbb
loope
jp
xlat
xchg
cs
sbb
and
sbb
imul
pop
dec
outs
or
pop
cmp
add
lods
aas
pusha
push
jo
fwait
xor
stos
imul
or
push
cmps
icebp
push
cld
sub
mov
mov
cmp
sahf
add
or
sbb
push
aad
or
sbb
push
inc
push
iret
sbb
adc
popf
lods
push
or
adc
push
push
lea
or
push
sbb
dec
fs
add
adc
fisub
or
(bad)
add
outs
or
lds
sbb
out
sbb
pop
xchg
push
jno
push
jle
mov
dec
dec
ja
mov
inc
jge
ror
or
sbb
xchg
and
push
inc
push
push
add
jge
adc
mov
std
adc
scas
xchg
(bad)
fcomp
adc
stos
inc
fcomp
js
add
sbb
or
in
and
adc
in
add
add
rol
das
retf
inc
push
pusha
(bad)
imul
pop
mov
dec
ds
outs
bnd
cmps
icebp
ins
loop
sbb
add
xchg
scas
mov
pop
dec
je
mov
outs
add
mov
mov
mov
scas
and
xor
sub
jge
fild
mov
or
add
movs
xor
inc
or
push
mov
mov
jns
or
pop
sbb
ins
(bad)
mov
inc
or
sub
out
sbb
(bad)
sbb
xchg
dec
push
adc
xchg
xor
and
fnstsw
enter
cld
pop
xchg
mov
lea
dec
add
sub
pushf
push
dec
dec
or
cmp
out
and
sub
test
pop
cmp
jb
clc
xor
xchg
add
push
xlat
sbb
test
cmps
lea
push
sub
rcr
adc
mov
sbb
add
mov
add
test
(bad)
mov
nop
jg
jb
nop
rcl
pop
sbb
das
add
or
ret
icebp
in
out
test
mov
jg
popa
outs
and
and
daa
add
aad
je
ins
pop
mov
add
push
mov
cwde
paddsb
js
xor
nop
nop
hlt
mov
mov
lea
cmp
push
adc
add
mov
outs
in
dec
pop
ins
sub
adc
movs
dec
jp
pop
xchg
js
in
icebp
test
and
mov
mov
fistp
inc
inc
and
add
js
in
jl
or
dec
and
fdivr
and
mov
adc
mov
add
hlt
popa
and
jmp
ror
push
daa
or
adc
fsubr
pop
and
and
mov
jp
sub
add
ror
imul
das
test
(bad)
xor
test
mov
and
add
movs
sub
pop
adc
je
aad
test
push
mov
data16
adc
shl
sbb
mov
fild
out
xor
mov
into
sub
movs
test
(bad)
xlat
mov
rcl
stos
movs
(bad)
aad
or
push
add
stos
xchg
fwait
mov
je
mov
lods
dec
inc
lods
jge
clc
jne
sub
ret
sbb
lock
xchg
ss
outs
or
xor
lock
and
sbb
push
js
or
add
dec
xchg
xor
jns
sub
es
sub
or
imul
sbb
lods
jnp
addr16
jno
add
ficom
in
iret
cmp
test
enter
pop
jb
inc
inc
popf
mov
loopne
pcmpeqb
stos
adc
and
loopne
outs
adc
push
pop
pop
test
or
movs
jae
xchg
mov
push
inc
add
sbb
sub
ja
add
div
jecxz
leave
aam
sub
cmp
mov
xchg
jnp
mov
sbb
or
in
jp
jle
jne
fs
add
mov
scas
xchg
sbb
add
sahf
vaddpd
in
mov
mov
xchg
pop
cmp
fs
iret
(bad)
xchg
cmps
popa
cmp
sub
add
inc
imul
mov
and
sti
add
adc
push
xor
ret
adc
xor
xchg
sbb
and
push
in
jnp
pop
jo
dec
sar
inc
adc
xchg
cld
pop
sub
daa
push
push
or
pop
ins
lods
(bad)
(bad)
shl
mov
push
or
pop
jnp
inc
pop
pop
js
repz
mov
shl
scas
fnstsw
jo
push
sti
or
hlt
aaa
add
and
push
cwde
jnp
stc
adc
pop
fs
cmps
in
ins
ins
adc
xchg
pop
and
adc
push
or
jmp
arpl
xchg
fs
or
retf
cwde
xchg
test
push
mov
cmps
mov
sbb
or
and
imul
mov
push
and
test
ja
mov
jo
push
mov
xor
mov
xchg
mov
xchg
sbb
lods
dec
adc
das
es
fiadd
inc
inc
mov
pop
arpl
xor
enter
mov
or
inc
in
mov
xor
or
adc
push
adc
pop
in
mov
in
xor
aaa
fidiv
xor
xchg
fs
xchg
push
xor
sbb
adc
sub
call
or
pop
(bad)
out
pusha
or
push
imul
sub
or
mov
cld
or
test
ret
fnstsw
cmp
pushf
xchg
and
call
inc
daa
inc
sbb
jmp
pop
jns
cwde
xchg
cli
es
sbb
pop
mov
jno
shr
retf
mov
out
mov
or
add
lods
fld
xor
pop
dec
jbe
add
nop
add
and
mov
mov
mov
(bad)
mov
int3
enter
mov
clc
lds
jmp
dec
push
cmp
sub
xor
imul
sub
add
(bad)
sub
add
push
mov
rol
add
inc
inc
pop
nop
cmp
adc
adc
(bad)
dec
rcr
ss
xor
stc
icebp
jl
push
add
xchg
jns
aad
mov
pop
xchg
cmp
adc
or
xor
dec
sub
inc
stos
retf
rcr
push
mov
jmp
sti
jbe
aam
sub
stc
inc
push
and
inc
pusha
xor
sbb
cmp
int
aas
cmp
(bad)
aad
and
dec
hlt
(bad)
int3
dec
and
sub
ins
mov
xor
adc
pop
dec
ja
(bad)
push
aam
test
mov
cmp
mov
inc
int
or
jb
mov
adc
test
outs
test
xor
rcr
inc
and
xchg
add
loopne
pop
push
(bad)
pop
mov
fst
lea
cmp
jne
sub
xchg
test
test
xchg
(bad)
pop
jne
int3
jno
mov
aas
cmp
gs
xchg
lock
lods
stos
dec
mov
xchg
mov
les
arpl
das
add
imul
mov
add
inc
jg
movs
or
jl
ret
jb
or
jmp
or
test
loop
cmp
call
mul
(bad)
daa
cmp
cmp
jb
shl
sbb
push
test
jne
and
fstp
add
sub
jmp
sbb
and
cmps
xor
xor
cmps
pop
xchg
push
enter
push
inc
push
fld
add
inc
mov
and
or
mov
sub
iret
sub
dec
xchg
inc
shl
sub
adc
and
sbb
inc
and
sbb
add
fldenv
test
in
lea
push
mov
aam
imul
cmp
or
lods
push
and
sbb
mov
nop
in
lods
xor
pop
push
ret
jno
inc
cs
mov
ja
xchg
retf
adc
mov
adc
or
sbb
hlt
nop
and
push
out
jmp
add
arpl
rep
pop
leave
inc
mov
xchg
imul
ja
mov
lock
cmc
lock
adc
xchg
and
inc
cmc
add
test
jmp
hlt
les
push
xchg
and
and
and
cmp
or
sbb
ror
jnp
adc
jmp
jae
adc
sbb
rcr
pusha
add
loop
aaa
inc
add
sti
jno
sub
mov
mov
push
cli
or
add
dec
cmp
add
fnstenv
scas
add
jne
or
into
mov
call
test
mov
xchg
push
add
xchg
or
add
inc
cmp
sbb
or
imul
repnz
push
movs
xchg
pop
jo
inc
sti
add
or
push
dec
add
or
repnz
xchg
lea
jmp
call
div
push
mov
ret
les
sub
push
call
mov
fs
xchg
rcl
test
sbb
out
inc
or
neg
lock
sub
in
loopne
jns
xor
mov
repnz
cmp
lock
xor
sti
in
out
jo
xchg
movs
addr16
xchg
scas
add
push
sti
sub
sub
push
adc
jp
mov
push
fimul
or
and
xchg
jo
or
dec
mov
push
nop
daa
adc
xor
pop
xor
dec
fistp
dec
add
dec
push
add
pop
push
and
mov
mov
pop
push
das
aad
pushf
add
(bad)
ffree
push
sbb
(bad)
sbb
jnp
in
jne
push
cmc
and
aam
add
cmp
xor
adc
push
xchg
(bad)
and
jo
or
pop
imul
enter
jmp
xchg
inc
dec
movs
or
or
fild
xor
mov
sub
xchg
sub
adc
cli
pop
mov
pop
mov
mov
out
(bad)
loop
clc
test
pop
(bad)
lock
rdmsr
pop
icebp
jnp
pop
rcl
add
test
inc
fdiv
cmp
je
xchg
addr16
mov
sub
sub
jge
aaa
bound
mov
shr
sub
mov
xor
aaa
cdq
add
pop
cmps
and
aad
movs
and
add
rol
imul
add
dec
daa
or
sbb
add
add
mov
and
and
fs
cli
cmp
add
nop
and
mov
adc
movs
test
nop
arpl
shl
push
or
popf
test
and
loope
cmp
cmp
into
push
leave
je
cmp
sbb
or
mov
pushf
pop
adc
push
loopne
sbb
es
mov
les
stc
test
lahf
mov
mov
jmp
jl
mov
mov
mov
and
add
jnp
adc
iret
scas
add
add
(bad)
or
pop
inc
bswap
jmp
dec
sbb
pop
cli
mov
out
add
adc
pop
mov
int3
mov
jmp
mov
add
sbb
add
arpl
cmp
sbb
and
stos
js
xor
in
test
cmp
cmp
dec
loopne
dec
xor
shl
jmp
mov
xchg
inc
push
add
adc
dec
lds
mov
inc
adc
mov
inc
cmp
xor
push
ret
je
popa
(bad)
das
xor
(bad)
fdivp
mov
pushf
push
call
pop
dec
jp
popa
mov
popf
cmp
jmp
fstp
scas
test
mov
fstp
xchg
mov
movs
jmp
and
mov
push
sbb
je
enter
mov
rcr
cmps
xchg
call
or
mov
cwde
mov
dec
xor
dec
je
add
push
mov
push
xlat
push
nop
ret
clc
je
cmp
mov
cli
aam
pusha
jmp
int
cdq
mul
xor
imul
cli
push
popf
add
leave
jae
std
sbb
ror
sar
cmps
dec
adc
push
push
and
lods
mov
(bad)
cmps
xchg
loopne
fistp
mov
or
mov
pop
or
add
or
inc
popf
mov
sbb
cmp
nop
cmp
cmps
sub
dec
cmps
mov
cmp
div
add
jg
sub
inc
scas
add
mov
jp
dec
dec
scas
push
ss
cmc
mov
add
popa
loope
jne
in
xchg
sub
sar
mov
arpl
test
fisubr
inc
pop
dec
or
retf
adc
jmp
mov
pop
and
sbb
adc
rol
outs
push
lsl
shl
xor
bound
rcr
enter
adc
icebp
mov
cmp
movs
inc
ja
cs
in
add
outs
mov
out
push
mov
xchg
sbb
push
cmp
cwde
xor
pushf
das
mov
out
cmp
movs
add
aad
cmp
into
sub
inc
cmp
mov
outs
sbb
aam
xchg
or
in
or
jno
sub
mov
add
jp
das
mov
sbb
imul
mov
les
test
vcvtsd2ss
rcl
mov
dec
and
(bad)
fwait
mov
add
sahf
pop
mov
cmp
pop
cmp
shr
imul
sub
sbb
ins
push
xlat
es
add
add
aaa
rcl
and
imul
xor
or
or
xor
inc
push
mov
ror
sub
pop
sub
adc
push
xchg
adc
pop
and
test
inc
cld
mov
inc
call
adc
(bad)
adc
pop
cmp
addr16
lods
aas
fstp
sbb
jne
cmp
push
rcl
pop
sub
data16
cld
mov
clc
sbb
xor
mov
iret
aas
xchg
or
in
push
push
or
sbb
cmp
xchg
sbb
mov
cmp
aam
leave
add
add
add
cmp
ja
mov
push
popa
push
(bad)
cmp
in
pop
adc
psrld
sub
sbb
sbb
cwde
pop
ja
mul
add
jne
adc
xor
adc
jmp
out
dec
push
or
xor
adc
or
lods
lea
mov
xor
add
xchg
fisub
hlt
fdiv
sub
add
add
xchg
test
push
inc
add
or
inc
or
les
pop
pop
pop
or
call
lock
sbb
ret
and
adc
sbb
push
rcl
sbb
push
fmulp
jnp
add
push
or
mov
scas
inc
add
sbb
jecxz
or
bound
sub
pop
add
lahf
addr16
lods
nop
cmp
sbb
or
jl
rol
das
repz
arpl
aaa
outs
xlat
fmul
(bad)
xchg
(bad)
add
mov
jge
pop
es
and
mov
jmp
sub
mov
scas
movs
mov
and
lods
and
shl
add
sbb
fcom
sbb
js
es
or
in
je
mov
je
js
adc
xor
push
in
sbb
push
or
add
pop
std
adc
dec
dec
inc
dec
push
add
dec
jmp
es
adc
cmps
lods
test
sub
mov
jge
imul
sbb
dec
je
add
les
push
int3
fadd
(bad)
fsubp
pop
shl
or
adc
adc
shl
clc
and
sub
es
shl
in
and
sti
pop
push
pop
mov
lock
and
lods
mov
pop
pop
pushf
pusha
test
xor
mov
hlt
fs
xchg
xchg
or
inc
dec
(bad)
cld
pop
add
pop
or
and
(bad)
push
in
daa
hlt
inc
sub
fbld
ds
cmp
adc
mov
cwde
xor
loope
or
ret
ds
inc
cmp
lods
mov
fbstp
jnp
inc
imul
jne
xor
mov
clc
ficom
ja
mov
or
add
aad
push
xchg
mul
mov
mov
or
out
inc
sub
mov
jae
or
xchg
mov
outs
sahf
cs
cs
xlat
or
rcr
add
xor
inc
sub
cmp
outs
sbb
cdq
(bad)
adc
test
cmp
and
movs
(bad)
fbld
js
dec
cmp
sub
ds
sbb
add
xor
pop
adc
jno
dec
jmp
and
push
sub
sbb
popf
xchg
push
push
or
je
shr
pop
stos
push
stos
cdq
js
rcl
into
push
pop
adc
mov
les
ss
pop
pop
cmp
pop
cmp
shl
add
rol
push
mov
mov
and
jmp
and
movs
mov
adc
sbb
ds
mov
mov
mov
ficomp
loopne
imul
loopne
rol
inc
add
sbb
jne
pop
mov
and
jle
dec
inc
ror
mov
mov
pop
pop
sar
imul
sahf
pop
xor
adc
mov
mov
adc
jle
shl
push
push
pop
mov
add
cdq
mov
or
pop
outs
nop
and
xchg
push
adc
lods
xchg
sub
outs
inc
enter
loope
pop
lock
sub
mov
dec
adc
cmps
mov
jge
aaa
cmp
mov
sub
ror
adc
mov
lock
sbb
xchg
dec
push
cmc
sahf
mov
add
ror
sbb
(bad)
push
test
ins
adc
mov
push
mov
je
mov
fistp
mov
cmp
inc
inc
je
out
xor
cmp
je
xor
jecxz
movs
xchg
push
or
sub
aam
mov
shl
cmc
cmp
test
mov
mov
add
call
push
inc
fidivr
loopne
push
dec
mov
ds
cmp
or
sub
push
in
rol
mov
cdq
jmp
nop
ud2
test
xchg
imul
popa
jb
in
movs
mov
outs
mov
pop
adc
or
add
sti
loopne
dec
dec
mov
mov
inc
mov
cmp
sub
inc
pop
leave
sti
sbb
test
call
mov
imul
dec
dec
inc
cmps
add
push
jecxz
fild
push
mov
mov
mov
xlat
inc
dec
movs
mov
fiadd
test
mov
(bad)
cmp
in
(bad)
repz
jne
arpl
cmp
dec
push
and
cld
push
mov
push
shl
mov
pop
xor
jno
mov
push
iret
sub
iret
xor
xor
sub
cmp
jne
rol
push
loop
hlt
mov
cs
in
push
(bad)
cmps
into
sbb
adc
lea
nop
popa
push
or
adc
(bad)
mov
sbb
push
aaa
mov
pop
daa
push
push
push
inc
movs
dec
(bad)
xchg
or
and
(bad)
mov
shl
fist
test
ins
aad
and
push
mov
sbb
shl
adc
xor
es
xchg
cmp
add
dec
lock
add
jmp
dec
jbe
mov
outs
mov
push
add
push
ror
pmaddwd
(bad)
adc
addr16
lahf
dec
dec
xor
jae
fdiv
fwait
add
xchg
ja
adc
sbb
imul
jo
es
arpl
loope
fld
xchg
mov
push
or
mov
mov
add
sbb
sbb
adc
xchg
dec
inc
jo
sub
xor
dec
test
or
inc
fbstp
mov
add
cld
pop
pop
aam
jmp
fstp
call
cld
dec
ror
push
cmps
ins
sbb
or
leave
adc
and
test
clc
ds
mov
xor
mov
xor
push
icebp
jp
(bad)
call
vphaddbd
test
sbb
cdq
xor
ror
sbb
xchg
sbb
jo
cs
daa
adc
out
in
data16
aad
mov
jecxz
pusha
adc
push
out
pop
mov
mov
scas
mov
push
mov
adc
je
sbb
fbld
movs
cwde
jo
pop
adc
sbb
sub
jbe
(bad)
push
jecxz
mov
push
or
push
repnz
mov
or
nop
cmp
jae
push
pop
adc
repnz
sub
mov
les
imul
jno
inc
aam
and
nop
add
cmps
fwait
inc
xor
fldenv
or
adc
inc
imul
fldenv
call
adc
inc
pusha
pop
push
pop
or
mov
pop
push
dec
jmp
pop
lods
adc
into
mov
push
xchg
or
add
or
jmp
and
dec
cmp
lock
jno
inc
add
popa
test
stc
mov
arpl
loope
sub
inc
aaa
dec
pusha
pop
cmp
and
cmc
adc
daa
aad
rol
and
xor
ret
mov
aam
add
sbb
neg
dec
shl
jno
mov
loop
fild
add
sbb
std
add
add
loopne
xchg
scas
fucom
adc
pop
lock
loope
(bad)
lods
push
add
mov
fsubp
adc
add
push
add
pop
adc
scas
cmp
hlt
data16
mov
jne
dec
xlat
add
outs
adc
xchg
xchg
push
pop
cmps
inc
or
inc
cmc
leave
push
push
cwde
sbb
mov
adc
pop
adc
mov
cdq
xchg
loopne
fdivr
ficomp
xor
sbb
pusha
retf
sbb
dec
fmul
or
fsub
ret
mov
in
mov
dec
push
fist
sbb
mov
pop
sub
or
cdq
test
scas
(bad)
test
sub
and
aam
enter
or
or
and
mov
pushf
(bad)
test
nop
jmp
xor
sbb
sub
sub
mov
lahf
pop
lock
inc
pop
mov
sub
dec
mov
or
mov
mov
call
cmps
std
imul
sub
rcr
fs
or
inc
and
and
mov
or
shr
xchg
adc
jne
xlat
xor
add
sub
punpckhbw
or
add
icebp
mov
mov
rol
fcom
les
inc
popa
or
inc
or
jle
or
mov
push
rol
fadd
rcr
dec
cmp
loopne
sbb
lock
stc
push
mul
and
js
adc
int3
lods
xlat
in
das
sub
mov
pop
lahf
xor
shl
fs
jmp
jmp
jl
inc
jmp
dec
sub
push
xchg
cmc
jb
jmp
retf
jl
sub
rol
gs
ret
test
xor
inc
ror
movs
push
cli
daa
mov
cmp
and
push
or
adc
imul
repnz
inc
aaa
jge
mov
nop
pop
dec
mov
clc
mov
call
fdivr
adc
sbb
xchg
mov
repnz
add
test
mov
sbb
xchg
xor
pop
dec
add
int3
mov
rol
cld
xor
pop
dec
sar
fbstp
add
fld
fwait
or
xor
ficom
pusha
imul
jmp
sub
rcr
out
enter
xchg
cmps
outs
adc
cmp
sbb
ror
fmul
push
jo
or
into
sti
jo
dec
iret
aam
jmp
jne
sub
loope
push
ror
pop
dec
addr16
inc
ror
and
pop
add
pop
retf
(bad)
leave
inc
sub
mov
cmp
inc
popf
xchg
and
pop
sbb
and
adc
cwde
retf
ss
(bad)
or
and
pop
(bad)
add
push
sbb
add
pop
jno
mov
sbb
stos
lods
add
add
fist
jmp
scas
std
in
enter
aaa
and
xor
mov
fucomip
or
pop
and
cmp
(bad)
fmul
loope
pop
push
(bad)
or
outs
imul
retf
push
or
dec
mov
mov
inc
stos
ins
sbb
and
dec
pop
mov
pop
shl
in
mov
add
cmp
and
or
test
jns
mov
test
add
shrd
or
das
mov
pop
ss
ja
or
cmp
gs
sbb
jmp
leave
xchg
das
enter
rcl
xchg
xchg
xor
inc
cmps
mov
shr
(bad)
and
stos
jo
ds
inc
push
xchg
push
dec
inc
jg
dec
mov
mov
xchg
pop
test
adc
lock
lahf
nop
in
push
sbb
or
cmps
pop
rol
jb
aam
mov
push
int
cmp
jmp
xchg
push
mov
jmp
push
sbb
dec
and
mov
pop
(bad)
mov
ffreep
adc
inc
cs
pop
rcr
adc
adc
fst
xor
mov
sub
hlt
out
ins
fidiv
inc
or
stc
rol
dec
inc
add
scas
adc
mov
call
add
jle
por
cmp
pop
sbb
or
xchg
ror
mov
aaa
jg
hlt
jb
aas
sbb
lea
ret
les
sub
jo
int3
ror
push
mov
dec
cdq
and
xchg
ret
push
jmp
mov
loopne
jl
add
and
xor
cmp
add
bound
xchg
pusha
outs
loopne
jl
loopne
mov
adc
pop
sbb
mov
push
call
add
inc
(bad)
cmc
in
sub
mov
jge
rol
js
pop
stos
fstp
call
cmp
jno
mov
mov
out
cmp
sub
les
lock
popf
add
pop
push
(bad)
in
adc
adc
or
push
jbe
out
jns
adc
jne
ror
dec
add
fsub
dec
cwde
cmps
ror
add
push
xlat
ins
sub
mov
shr
ret
cli
es
or
sbb
push
dec
out
push
cmp
pop
jl
gs
adc
mov
adc
mov
ret
ret
or
sbb
int3
or
pop
nop
shr
clc
inc
div
cmpxchg
push
sbb
mov
(bad)
jecxz
sbb
pop
xor
push
mov
add
and
inc
pop
cmp
adc
or
loope
add
add
mov
ror
dec
adc
mov
dec
aas
dec
lea
mov
xor
mov
dec
and
push
sub
test
add
push
fist
mov
pop
jg
push
test
cmp
ror
in
sub
adc
push
mov
loopne
or
inc
ds
fdiv
jo
movs
push
lahf
(bad)
pop
xchg
sbb
push
sbb
add
ret
adc
mov
mov
xchg
adc
rol
aaa
cmp
sbb
loop
xor
adc
stos
ds
mov
shl
(bad)
rcl
or
out
sbb
ins
dec
xchg
or
stos
push
inc
xor
add
mov
mov
cmp
xchg
inc
sbb
cmp
cmp
inc
ja
jmp
dec
dec
sub
(bad)
ss
pop
sbb
adc
mov
xchg
mov
popa
cmp
dec
pop
pop
out
ins
shr
sub
mov
lea
pop
mov
pop
aas
jno
jge
daa
adc
sbb
sahf
cmps
pop
pop
cwde
push
xchg
xchg
cmps
adc
or
push
sub
sbb
mov
adc
inc
dec
add
sub
loope
jmp
mov
pop
scas
test
cmp
add
stos
retf
mov
arpl
into
mov
jmp
pop
test
mov
shl
cmc
xor
call
mov
adc
cmp
or
push
sub
and
mov
test
xlat
js
movs
push
push
and
loopne
loop
ret
ja
in
out
inc
dec
pop
ret
es
cmp
mov
call
inc
arpl
aas
je
call
mov
pop
mov
xor
cmp
retf
mov
sbb
ins
rol
add
test
pop
jge
cmps
pop
mov
ja
xlat
dec
or
pop
retf
cdq
imul
lea
xor
jns
push
add
test
int3
aaa
cmps
daa
call
adc
inc
imul
mov
sub
ds
and
lea
cld
scas
inc
xlat
sti
inc
cmp
stc
mov
call
xchg
int3
hlt
cmc
pop
movs
xlat
inc
dec
or
xchg
pop
and
add
xchg
frstor
mov
call
inc
push
daa
mov
iret
xchg
and
sbb
(bad)
fiadd
or
pusha
neg
jmp
mov
js
pop
and
data16
jno
mov
pop
sub
scas
sub
inc
das
jge
je
inc
js
inc
pop
fnstcw
ret
mov
loopne
ds
add
mov
je
ins
cdq
and
fwait
ret
mov
add
or
scas
add
jnp
cmp
outs
sbb
mov
stc
call
push
iret
dec
or
or
cmp
test
or
sub
loop
loope
sub
cld
cld
and
sbb
cld
inc
add
jb
push
xor
cld
cld
enter
xchg
adc
add
inc
mov
sbb
add
test
xor
pop
js
inc
adc
jno
add
add
mov
or
dec
in
adc
in
cmp
or
lahf
mov
fadd
and
lods
dec
mov
adc
sti
jmp
aad
pop
adc
pop
adc
inc
leave
leave
adc
pop
xor
sbb
cmps
or
xchg
test
adc
push
push
xor
and
pop
jl
fwait
cmp
push
in
or
inc
sub
sub
add
and
push
or
lahf
add
adc
adc
lock
mov
mov
pop
xor
dec
sti
aam
fiadd
pushf
fcomp
xor
popf
pushf
pushf
pushf
xor
pop
jle
xor
cmp
inc
pop
mov
scas
cwde
pop
inc
and
lds
jp
pop
sub
fild
popf
and
enter
sbb
(bad)
aas
push
fcmovnb
dec
cs
jbe
pop
dec
dec
push
nop
in
dec
dec
(bad)
cwde
in
ss
pop
pop
dec
jnp
sbb
or
push
push
cmps
movs
sub
xlat
xchg
mov
dec
ss
aad
and
and
sbb
sub
lea
movs
jo
xchg
shl
iret
and
mov
mov
mov
sbb
mov
rcr
dec
adc
mov
push
and
imul
adc
les
inc
ins
pop
xchg
jnp
call
cwde
inc
pusha
call
fcmovnu
push
xchg
ins
mov
out
jl
or
jle
push
dec
cmp
mov
xor
xor
ja
test
ja
movs
inc
sar
retf
cmps
xchg
test
dec
inc
xor
clc
xchg
clc
fmul
nop
pop
or
jmp
adc
add
xchg
xor
pop
sub
mov
fs
sub
adc
dec
jbe
pop
jg
shr
push
or
sbb
leave
push
jle
shl
das
pop
mov
pop
xchg
adc
(bad)
test
lock
push
js
sub
and
popf
cmp
hlt
mov
scas
mov
cs
xor
pop
out
movs
sar
xchg
push
cmp
sbb
lahf
xchg
push
pusha
sar
jbe
pushf
inc
adc
cmp
sbb
or
fnstsw
dec
lock
and
cmp
fsub
lods
fadd
mov
in
std
into
enter
or
cmp
cwde
in
std
repnz
adc
inc
jns
loopne
xchg
or
(bad)
cmp
push
add
out
jno
mov
call
or
neg
pop
sbb
mov
mov
inc
cmp
jbe
addr16
xor
xchg
add
cmp
ret
clc
inc
popa
mov
lds
add
mov
adc
cmc
pop
dec
adc
outs
jne
jae
or
adc
outs
ins
sbb
ret
inc
add
inc
call
push
push
(bad)
data16
inc
mov
jne
cmp
(bad)
std
mov
arpl
pop
in
pop
imul
add
xor
fcomp
dec
pop
lock
outs
or
cli
cmc
push
xor
ins
shl
pusha
adc
sar
mov
iret
xor
jae
scas
mov
mov
div
ret
pop
adc
add
shl
and
adc
add
clc
xchg
jne
inc
js
scas
(bad)
and
dec
xor
or
push
mov
push
dec
jmp
mov
pop
sbb
inc
dec
pop
xchg
or
and
ins
sub
aaa
ins
lds
push
mov
shr
(bad)
push
push
ret
jo
retf
cmp
pop
mov
and
daa
rcl
rcl
mov
cdq
aad
mov
or
ins
es
call
sbb
and
xor
stc
out
inc
sbb
adc
xor
adc
cld
icebp
or
push
mov
add
pop
jns
mov
mov
mov
push
test
inc
add
or
out
inc
out
sub
sbb
dec
mul
lock
adc
in
jb
mov
pushf
shr
dec
loopne
cmp
cmp
arpl
gs
shr
jbe
sbb
xor
add
out
popa
add
and
dec
das
jge
jmp
jns
cmp
rol
push
es
adc
sub
mov
scas
je
clc
hlt
push
pop
fcmovu
lods
call
in
adc
mov
pushf
fmul
push
sbb
test
push
lock
sbb
lods
xor
push
loop
jmp
sbb
xor
pop
sub
test
into
push
mov
add
xchg
push
or
jne
pushf
imul
mov
pop
(bad)
push
dec
cmp
rcl
xchg
add
xor
cwde
xor
call
iret
outs
jp
mov
lods
sbb
scas
inc
and
or
xor
lock
sub
pop
push
pop
pop
xor
inc
jmp
sbb
mov
sbb
jno
hlt
sbb
es
rol
fwait
dec
adc
cmp
mov
or
sub
cmp
imul
push
(bad)
pusha
add
in
ret
test
rcr
nop
inc
call
mov
mov
pop
fiadd
xor
mov
rol
hlt
je
clc
add
imul
sub
inc
add
xor
retf
outs
es
fild
jne
xchg
dec
shl
sub
pop
ins
fild
lahf
mov
rcl
inc
imul
sysret
test
pop
dec
mov
pop
lea
gs
sub
lods
xor
aaa
lock
ins
in
mov
rol
addr16
xchg
lahf
clc
(bad)
fld
movs
pop
adc
xchg
inc
push
sbb
add
dec
push
cs
mov
dec
pusha
push
xlat
aaa
cli
push
fcom
ins
shl
(bad)
fucomip
pop
sbb
sbb
in
xor
add
sbb
push
pop
xchg
mov
fcom
push
mov
je
aam
sub
mov
add
xchg
adc
daa
push
loope
inc
or
mov
inc
cmp
jmp
mov
add
sub
mov
sub
add
sbb
inc
fwait
int
inc
and
ret
dec
(bad)
xlat
mov
jge
mov
mov
cmp
outs
pop
clc
nop
sbb
into
or
cmp
jge
pop
push
cmps
inc
add
test
mov
dec
inc
lock
xor
test
jp
adc
push
mov
aas
js
mov
es
out
mov
mov
jns
in
(bad)
jg
popa
inc
sbb
aas
movs
(bad)
bound
mov
push
jbe
jo
dec
jae
sbb
add
les
add
adc
les
int3
sbb
je
mov
inc
and
loopne
into
leave
je
pop
push
sub
xor
push
(bad)
jecxz
sub
xor
int3
sbb
ret
daa
mov
clc
sub
and
or
pop
fadd
push
leave
or
ret
push
xor
fiadd
cmp
outs
cdq
not
inc
bound
mov
(bad)
rol
push
push
push
ret
cmc
and
push
add
mov
test
pop
jne
pop
fimul
ins
test
hlt
test
jb
adc
stc
nop
xor
in
or
mov
or
pop
test
or
mov
stc
mov
xor
out
loop
dec
or
add
cwde
adc
hlt
xor
cmp
test
les
add
inc
pop
xor
mov
(bad)
(bad)
arpl
xchg
xchg
outs
(bad)
or
adc
add
jge
daa
pop
cmp
in
cs
add
mov
pop
lea
xchg
stc
pop
mov
loope
aam
pop
xchg
adc
inc
pop
enter
jge
adc
fisttp
jmp
inc
cld
dec
inc
dec
dec
dec
inc
or
or
xchg
icebp
cmp
rcl
and
xor
jge
or
or
or
inc
sbb
outs
xchg
mov
cmp
or
mov
cmc
pop
pop
add
ret
mov
jmp
arpl
push
or
pop
call
repz
sub
repnz
(bad)
adc
adc
wbinvd
pop
outs
popa
sub
adc
cdq
mov
bound
or
mov
cwde
add
and
test
cmps
dec
(bad)
xchg
rcl
jbe
xchg
imul
int3
movs
jmp
inc
inc
aad
sbb
addr16
or
int
pusha
jp
sbb
inc
mov
or
and
or
mov
popf
or
retf
inc
push
mov
and
repz
bound
pop
lods
repnz
xor
js
mov
and
adc
and
dec
inc
ins
and
retf
sub
loopne
inc
sbb
add
push
sbb
and
nop
push
enter
add
repnz
imul
inc
aam
cmp
inc
xchg
mov
popf
push
add
cwde
inc
adc
push
dec
sbb
push
fs
sbb
jae
sbb
push
push
or
je
xor
add
push
cld
ins
sbb
jb
jmp
xor
test
mov
adc
je
das
js
test
imul
fisub
push
xor
jmp
cli
adc
nop
shl
or
sbb
xchg
icebp
cmps
push
fcom
xchg
inc
fstp
xchg
mov
nop
jo
mov
add
shl
inc
mov
loopne
js
dec
jl
je
cs
nop
or
dec
push
int3
pop
adc
sbb
cmp
sub
add
sbb
mov
add
and
dec
or
inc
mov
or
mov
or
pusha
add
hlt
loop
imul
jmp
dec
hlt
getsec
(bad)
mov
add
js
sub
jle
mov
inc
lock
jne
test
push
push
mov
or
retf
or
xor
jo
adc
cmp
sbb
dec
pop
push
inc
dec
pmullw
dec
pop
or
sub
daa
loopne
repz
lods
arpl
into
call
addr16
loope
add
xor
jns
push
push
xor
adc
adc
ja
jmp
adc
inc
lea
fidiv
dec
mov
scas
xor
cwde
push
loop
mov
pop
adc
lock
inc
stos
inc
clc
cmp
ret
sub
jno
push
ins
daa
mov
and
call
and
adc
xchg
jmp
cmp
fcom
fst
rcr
xchg
jg
into
mul
add
adc
add
push
dec
jmp
push
dec
push
in
pop
mov
ins
leave
sahf
daa
(bad)
jmp
jmp
jbe
adc
(bad)
sbb
call
sbb
inc
add
imul
aaa
cmp
adc
cmp
imul
add
sub
sub
outs
or
bound
jb
fxch
xchg
in
js
add
add
add
and
iret
push
add
dec
icebp
add
loopne
sbb
xor
shl
and
pop
and
pop
jmp
into
pushf
jne
test
sbb
loopne
dec
push
sbb
jo
mov
mov
fstp
pop
xor
ror
arpl
addr16
pop
fadd
push
clc
mov
jno
pop
cld
js
jbe
xor
cmp
and
add
imul
popf
mov
bound
xlat
mov
cdq
and
cdq
xor
and
add
jo
or
mov
les
inc
push
lods
cmp
das
mov
out
or
push
sub
sub
clc
loope
xchg
rol
mov
xor
mov
pop
(bad)
lsl
fdiv
dec
add
push
inc
push
fidivr
ficomp
mov
pusha
fdivp
and
pop
lds
cld
sbb
movs
adc
movs
push
or
ja
xchg
xor
das
mov
mov
or
imul
push
test
das
in
mov
mov
push
jmp
or
mov
mov
cmp
sbb
pop
inc
sub
sti
es
cs
and
jmp
shr
enter
push
shl
dec
jmp
(bad)
adc
cmp
pop
int3
pop
in
das
(bad)
push
cmp
and
shr
aaa
in
sub
jae
or
or
fcmovnu
adc
sbb
push
add
sti
ja
sub
sbb
cmps
xchg
and
add
and
test
pop
inc
sar
inc
in
mov
cmps
mov
fdiv
cmp
jae
je
fistp
jmp
xor
mov
mov
add
fwait
mov
in
lods
imul
add
or
and
sbb
mov
ins
out
test
push
jnp
test
jecxz
mov
or
jbe
ins
je
push
xchg
cmp
xor
or
lods
mov
icebp
sbb
aas
ror
lods
adc
inc
inc
pop
cmp
cwde
pop
mov
mov
xor
test
pop
(bad)
arpl
jo
inc
inc
repz
shl
je
push
push
mov
gs
push
inc
push
inc
jmp
xor
add
inc
xchg
into
cdq
(bad)
or
je
ret
sbb
sub
clc
mov
mov
and
nop
cmp
pop
pop
or
pop
dec
icebp
or
add
and
mov
mov
iret
adc
mov
sti
(bad)
in
or
sbb
xchg
or
push
std
add
add
loope
retf
out
pop
bound
lea
push
std
jp
imul
push
pop
shr
jecxz
lahf
fs
pop
and
test
pop
popa
repnz
imul
mov
push
sbb
(bad)
xlat
shr
mov
test
mov
inc
loopne
mov
cmp
jne
dec
jmp
mov
or
pop
in
cmp
adc
imul
inc
movs
fwait
lahf
jg
rol
stc
jb
mov
or
imul
mov
sbb
test
mov
shl
sbb
and
pusha
sbb
mov
sbb
mov
popa
add
mov
cmp
dec
adc
pop
push
rcl
jne
inc
dec
mov
pop
pop
js
(bad)
gs
fisubr
test
daa
mov
xchg
fcomp
jmp
add
jmp
(bad)
(bad)
xchg
outs
out
mov
cwde
add
and
jl
(bad)
dec
inc
popf
jg
iret
adc
nop
inc
mov
mov
dec
jge
push
loope
add
xor
push
mov
jne
sahf
loopne
dec
adc
mov
sbb
xchg
xchg
fdivr
mul
cmp
aad
inc
daa
cmp
xchg
addr16
jecxz
das
sbb
xor
loop
adc
and
xor
mov
xchg
(bad)
into
push
add
in
sbb
sub
add
movs
sub
add
sub
popa
xchg
test
imul
add
dec
xchg
mov
mov
imul
inc
nop
sbb
dec
dec
ja
mov
mov
add
stos
cmp
popf
jns
pop
xor
cmp
mov
dec
adc
and
cmp
push
mov
sub
sub
adc
or
popf
(bad)
ror
push
js
sbb
test
sub
sub
rcr
ret
push
adc
cwde
or
xchg
ret
enter
ror
sti
mov
cmp
inc
adc
gs
test
test
mov
push
lea
ret
mov
rol
adc
test
pop
(bad)
or
jno
or
push
jp
loopne
and
jae
div
aad
and
and
fincstp
movs
test
inc
xchg
add
clc
inc
lods
push
pop
cmp
inc
push
add
or
gs
daa
push
push
or
inc
movs
rcr
js
add
cmp
nop
mov
and
add
call
sub
pop
jp
outs
lods
inc
push
sub
jecxz
and
popa
hlt
(bad)
hlt
and
xchg
xchg
and
std
mov
call
and
pusha
mov
nop
mov
and
cmc
push
imul
mov
stos
les
retf
add
ds
retf
cs
mov
push
test
rol
outs
inc
xchg
jo
xor
mov
sbb
in
and
adc
retf
add
stc
add
fyl2xp1
inc
sbb
stos
sbb
out
or
loopne
jno
movs
sbb
mov
inc
or
pop
cmp
in
or
cs
dec
dec
outs
pop
or
xor
cmps
cli
inc
sbb
call
xor
lds
xchg
or
retf
pop
sbb
jbe
sbb
add
dec
jp
loop
sbb
mov
call
retf
rol
push
scas
cli
inc
clc
add
sbb
dec
nop
ja
mov
adc
sbb
mov
ss
push
repz
test
cmc
xor
add
dec
jecxz
pop
xchg
sub
repnz
rcl
xchg
xlat
adc
cmp
sub
add
or
lods
adc
dec
push
fadd
sti
mov
inc
or
sar
loop
test
add
jno
cmp
jae
pop
push
js
mov
fs
sub
xchg
add
pop
(bad)
loopne
es
dec
mov
fs
hlt
push
pop
jo
xchg
adc
push
pop
cmp
push
jns
xor
rcl
mov
push
jb
movs
adc
add
test
inc
lock
or
fistp
scas
stc
mov
aam
movs
addr16
fadd
sub
je
adc
pop
xor
jb
adc
dec
push
or
add
inc
push
out
cmp
sub
(bad)
sar
and
lock
jbe
pop
push
adc
fucomi
adc
js
adc
mov
pop
add
imul
and
cdq
and
dec
cwde
fadd
inc
and
lea
leave
js
or
aaa
dec
dec
mov
cmp
je
imul
sbb
or
iret
outs
sbb
push
cmp
jne
adc
inc
int3
mov
dec
adc
or
xor
lock
dec
lock
adc
mov
lahf
nop
test
nop
adc
sub
fs
and
or
out
adc
mov
sti
aas
push
and
outs
dec
das
push
and
test
adc
cdq
shl
hlt
xchg
add
mov
cwde
inc
inc
fadd
push
adc
mov
cmp
and
loopne
mov
rcl
movs
jno
lods
adc
fwait
(bad)
or
and
mul
sbb
push
xchg
inc
test
jbe
inc
push
bound
and
loope
dec
jmp
ror
xchg
dec
loop
add
mov
je
nop
lahf
dec
jne
inc
push
inc
xchg
movs
pop
je
adc
hlt
test
imul
xor
sbb
pusha
push
inc
push
jp
xchg
jl
lahf
mov
aad
sub
pop
daa
xlat
cs
add
aam
out
add
stos
stos
xor
cmc
scas
test
pop
jmp
test
mov
xchg
sbb
test
sub
lea
mov
and
xor
shl
inc
sub
jecxz
pop
mov
sbb
xchg
hlt
sub
mov
inc
leave
or
mov
pop
push
push
and
fisubr
add
test
and
loopne
sub
cmp
addr16
jno
inc
inc
adc
or
(bad)
mov
cwde
pop
mov
adc
(bad)
cmp
jne
xchg
dec
add
add
or
ret
sar
pop
aas
add
inc
pop
lods
fild
test
dec
mov
mov
jle
inc
repz
or
and
pop
xor
push
add
xchg
movs
sub
sbb
dec
adc
or
fs
div
mov
(bad)
jmp
rcr
xchg
mov
pop
outs
add
xor
sub
pop
dec
and
jle
push
pop
mov
scas
pop
xchg
movs
mov
cmc
sbb
aam
nop
and
inc
sub
cwde
rcl
jge
pop
repz
sub
cmps
add
ror
in
jp
dec
cdq
fmul
rcl
sbb
sahf
jl
bound
add
pop
nop
mov
adc
frstor
rol
clc
inc
jne
pop
add
mov
ja
inc
xchg
js
jne
cmps
mov
inc
xor
imul
ret
loop
test
loope
sar
adc
cs
sub
jge
mov
sub
sbb
fst
lods
or
sub
aam
shl
push
dec
js
add
inc
jns
idiv
pop
jle
loopne
in
fiadd
outs
or
push
xor
call
(bad)
in
or
ret
into
ss
dec
mov
push
push
mov
fdiv
xor
test
sbb
pop
xchg
shr
xchg
mov
pushf
jg
lahf
mov
push
and
add
popa
loope
adc
or
sub
dec
(bad)
retf
sub
add
and
shl
dec
cmp
or
pop
inc
std
add
add
les
frstor
adc
sub
xchg
je
and
push
fwait
mov
mov
xor
fmul
in
inc
jmp
or
pop
add
push
add
jle
fimul
pop
push
shl
xlat
sar
jne
scas
add
test
mov
aas
mov
mov
push
pop
mov
and
mov
dec
or
adc
in
sub
enter
daa
repz
ret
das
cs
jge
retf
sub
fs
adc
sub
xchg
lea
adc
add
mov
mov
out
sbb
dec
test
mov
adc
xchg
jo
(bad)
cmp
cmp
je
push
mov
push
push
aam
push
dec
mov
fcom
mov
arpl
xor
inc
jp
cmp
xchg
sbb
call
pop
adc
loopne
push
jecxz
xor
ds
xchg
xor
push
sbb
mov
xchg
mov
pop
dec
je
adc
push
clc
push
adc
push
push
jge
cwde
add
mov
pop
ds
fmul
push
ret
(bad)
stc
xor
mov
(bad)
fdiv
mov
sub
aas
mov
pusha
adc
sbb
adc
ror
ins
jo
in
pop
add
int
sub
rol
mov
mov
loopne
ret
popa
stos
lods
cmp
push
aam
aad
bound
cmp
push
lods
or
scas
loopne
add
movs
cmp
adc
xor
imul
in
add
hlt
mov
push
pop
pop
push
dec
fsubr
mov
push
dec
cmp
cld
mov
mov
outs
inc
cmp
je
test
aaa
lds
pop
(bad)
mov
lods
mov
cmp
mov
sub
and
adc
inc
je
xor
add
pop
rol
dec
gs
xchg
lods
bswap
enter
inc
ins
lods
movs
leave
add
or
movs
add
xchg
lock
ins
in
and
mov
dec
or
pop
adc
cld
popa
xchg
inc
je
or
bound
dec
sbb
and
and
inc
out
mov
mov
sbb
cmp
pop
push
pop
or
mov
sub
push
push
adc
add
int
les
dec
and
and
push
push
nop
xchg
xchg
daa
pop
sub
push
sub
mov
int3
push
mov
adc
push
pop
outs
push
mov
popa
jb
int
int3
mov
push
dec
or
add
cmp
or
mov
push
stc
xchg
add
add
add
xor
loopne
mov
push
dec
dec
xchg
inc
push
xchg
pop
sbb
fdivr
arpl
lock
dec
outs
push
outs
cdq
ja
popa
arpl
retf
(bad)
mov
shl
mov
mov
mov
mov
xor
xor
adc
or
sub
push
adc
cmp
icebp
call
add
ins
lds
add
sub
mov
inc
and
mov
iret
(bad)
add
cs
cmps
xor
mov
mov
xor
fwait
mov
(bad)
fnstcw
mov
mov
inc
xchg
dec
sub
push
cmps
sub
jecxz
ret
pop
xlat
jnp
ja
cmps
(bad)
push
pop
xor
add
adc
xchg
dec
pop
cld
dec
jg
mov
inc
add
xlat
test
pop
sub
jne
outs
dec
pop
xor
shr
adc
push
popa
(bad)
push
push
repnz
(bad)
(bad)
dec
xor
xor
jl
repnz
pop
and
test
mov
pop
add
or
popa
or
lods
dec
adc
mov
and
push
dec
or
xor
mov
xor
repnz
cmp
fdivp
lds
xor
add
inc
push
movs
test
jg
adc
mov
xor
push
mov
mov
and
xor
js
clc
inc
js
mov
outs
inc
xor
mov
push
add
xchg
ds
or
mov
pop
sub
sti
xor
and
test
pop
and
clc
jnp
cmp
inc
pop
pop
xor
out
dec
ror
xor
push
jg
jg
shl
pop
jp
(bad)
mov
xor
inc
loope
stos
in
in
(bad)
(bad)
fistp
pusha
dec
cmp
(bad)
mov
sub
push
sbb
cld
sbb
jl
fisttp
loope
push
add
int3
and
(bad)
push
ret
dec
push
add
clc
or
(bad)
dec
adc
jg
pop
jp
mov
cwde
push
iret
sub
lods
and
cmps
fcomp
lds
mov
mov
out
outs
dec
jp
loope
nop
sbb
test
iret
sub
nop
jle
sbb
push
div
and
sbb
sahf
dec
jo
adc
sar
iret
pop
xor
add
xor
mov
(bad)
fsubr
sbb
inc
push
mov
fisubr
add
sub
dec
stc
pop
push
ret
(bad)
out
mov
mov
xor
mov
loope
and
(bad)
sti
fild
or
xor
adc
xchg
xchg
add
sub
shl
sbb
add
(bad)
xor
ror
jp
repnz
int
adc
or
(bad)
push
xor
mov
xor
push
and
mov
pop
(bad)
xor
(bad)
mov
xor
mov
jl
fimul
mov
inc
jnp
jmp
and
cmp
js
ja
push
fdiv
shl
lock
imul
je
mov
or
cld
mov
mov
pop
repnz
sbb
aaa
mov
pop
fistp
call
mov
xchg
jb
add
xchg
dec
jmp
fild
aaa
call
pusha
dec
adc
mov
xor
cdq
adc
add
xor
adc
enter
adc
in
(bad)
fcmovnbe
mov
sbb
outs
or
ins
test
ins
cmps
add
arpl
jmp
mov
xchg
sub
cmps
shl
xor
add
xor
push
mov
or
fistp
inc
gs
or
dec
cmp
das
mov
std
outs
xchg
add
mov
xor
cli
add
jmp
add
cmc
cmc
inc
sahf
cs
pop
or
data16
push
inc
mov
into
or
and
push
jo
pop
out
add
pop
icebp
cmp
push
or
add
retf
add
add
cmps
(bad)
movs
(bad)
jg
fstp
clc
mov
mov
add
mov
pop
or
ret
int3
or
das
adc
or
mov
ds
cmps
cli
mov
test
pop
inc
mov
(bad)
outs
mov
sar
dec
fwait
cdq
mov
mov
fisub
sub
mov
mov
adc
jmp
(bad)
jle
repz
mov
add
push
cmp
outs
add
push
sahf
fisttp
mul
cwde
ficomp
pop
lock
fdivr
mov
and
dec
in
scas
ins
fidivr
cmp
hlt
lds
sub
retf
jbe
add
inc
retf
mov
pop
arpl
push
(bad)
mov
cmp
pop
xchg
jl
or
push
ficomp
or
or
add
sti
add
dec
adc
inc
push
es
adc
mov
sub
shr
lds
dec
std
pop
sbb
push
or
mov
out
test
push
xor
inc
fstp
push
xchg
ins
pop
or
test
test
icebp
(bad)
pop
push
xchg
adc
mov
push
mov
adc
add
adc
data16
lock
and
mov
icebp
in
add
sub
(bad)
mov
and
push
push
mov
pop
repnz
inc
jnp
clc
mov
ror
or
fdiv
add
jecxz
mov
adc
jns
push
push
jns
aam
mov
fild
rcr
add
or
mov
cld
pop
sub
push
mov
aam
in
mov
mov
pusha
mov
sar
sbb
or
mov
repnz
loopne
nop
jb
aad
pusha
or
shl
jg
xchg
mov
adc
dec
scas
mov
nop
sbb
aad
cmp
cmp
add
mov
mov
adc
mov
push
test
sub
jae
addr16
push
add
call
and
daa
jg
push
sub
mov
ss
fs
sub
sub
cmps
push
jo
outs
xlat
punpcklwd
dec
mov
ins
pusha
xor
sub
retf
mov
dec
pop
int
cmp
cmp
sub
cmp
(bad)
imul
jl
retf
adc
jo
xor
or
xchg
nop
test
jae
mov
out
add
mov
mov
push
or
mov
cmp
call
jle
jecxz
into
data16
inc
jmp
mov
xor
outs
jg
(bad)
mov
add
mov
sub
bound
dec
shl
hlt
(bad)
fimul
jmp
ficomp
add
sti
add
retf
sbb
inc
test
aad
sahf
push
add
xor
mov
add
cmc
adc
retf
xor
lock
retf
sar
stos
and
adc
mov
xor
fld
loope
pop
or
cwde
push
sbb
sbb
sbb
inc
nop
aad
sbb
add
mov
outs
ror
scas
aam
xor
add
push
xlat
mov
add
or
mov
mov
inc
addr16
or
inc
jge
and
dec
fist
add
or
xor
mov
mov
xor
jg
xor
xor
clc
add
fidiv
add
and
sub
push
lods
xor
or
ins
mov
push
mov
(bad)
dec
addr16
leave
mov
mov
loopne
jo
jmp
mov
inc
pushf
add
mov
mov
test
xor
scas
cmp
jg
icebp
call
or
adc
test
shr
add
shl
mov
mov
xchg
push
in
aaa
mov
(bad)
retf
clc
mov
xchg
cmp
xor
inc
out
push
mov
ret
dec
push
clc
add
ds
mov
and
neg
sub
pop
mov
xor
sbb
stos
jns
push
cmp
add
shl
test
cmp
cs
out
xchg
sbb
push
xor
mov
xor
icebp
data16
clc
mov
inc
push
mov
bound
push
addr16
inc
inc
clc
int
push
cmp
jge
sub
mov
push
sbb
inc
and
mov
cmp
pushf
adc
fmul
mov
mov
dec
add
ret
jne
cmp
push
push
mov
imul
in
push
mov
cmp
adc
xchg
pop
and
cld
or
inc
in
mov
pop
out
icebp
pop
loopne
fist
mov
cdq
mov
arpl
in
sti
call
push
add
mov
push
or
push
aam
stos
inc
inc
pop
push
adc
mov
xor
jbe
xchg
retf
xchg
add
jmp
cmp
or
shr
std
and
pop
idiv
and
sub
mov
pop
call
js
data16
fild
dec
jmp
sti
bound
push
or
idiv
invd
jl
xor
push
mov
sahf
or
add
pop
mov
clc
test
inc
sub
pop
jecxz
pop
sar
sahf
cs
dec
lock
mov
add
and
inc
into
inc
push
mov
mov
cdq
mov
adc
sbb
cmp
mov
cwde
movnti
jb
sub
dec
sub
ror
push
into
dec
mov
pushf
fisttp
jno
arpl
icebp
sub
or
cmps
loop
mov
in
retf
(bad)
fiadd
jp
pop
outs
das
jo
and
or
sub
or
lock
add
mul
push
fs
call
push
dec
test
xor
loop
loope
sti
sub
add
sbb
push
loop
and
and
or
push
mov
pop
sbb
(bad)
jns
push
push
or
or
pop
pop
inc
push
sbb
dec
retf
pop
(bad)
je
sbb
sub
popa
pop
add
cld
sbb
sub
mov
mov
mov
xor
sub
push
outs
ret
mov
jnp
(bad)
ror
rcr
sub
push
xchg
(bad)
ja
push
mov
xchg
mov
test
jg
hlt
lock
mov
mov
sbb
imul
inc
and
ret
cmp
mov
xor
fs
push
sti
sbb
outs
mov
mov
imul
jl
les
xchg
inc
leave
cmp
mov
mov
mov
push
add
(bad)
call
jo
mov
sahf
sbb
jge
mov
push
or
out
jo
jb
call
int3
jmp
fisttp
out
cmp
repnz
ret
loop
mov
mov
into
xor
rcl
js
mov
xor
xchg
mov
mov
mov
fcos
fstp
hlt
push
pop
mov
mov
cs
pop
mov
or
outs
(bad)
mov
aas
sub
mov
push
ins
sub
jns
pop
mov
jg
jg
mov
adc
les
mov
add
cld
(bad)
int
push
in
dec
ja
xchg
mov
call
mov
shl
sub
dec
mov
push
adc
mov
les
es
sbb
jmp
fisttp
adc
mov
sbb
add
mov
(bad)
sbb
data16
mov
sbb
call
jns
jp
addr16
scas
mov
arpl
adc
inc
xor
mov
inc
mov
or
or
out
mov
pushf
mov
icebp
add
outs
cli
cmps
(bad)
jmp
retf
pop
jp
(bad)
adc
jb
mov
fnsavew
inc
in
ret
fisubr
mov
jmp
rcl
pop
pop
mov
mov
in
or
cs
add
or
add
shl
mov
or
inc
pop
xor
ss
cs
in
mov
or
add
and
lods
add
push
or
mov
daa
mov
je
and
mov
add
rol
out
sar
(bad)
cld
xor
out
(bad)
sbb
dec
retf
sub
fist
or
sbb
mov
lods
jo
push
xchg
dec
adc
push
mov
shl
les
icebp
shr
dec
add
push
lock
add
cmp
or
mov
xor
sub
mov
mov
hlt
inc
push
push
inc
test
and
sub
and
loop
neg
xor
sub
in
in
jg
cmp
fiadd
xlat
outs
adc
or
mov
xor
mov
xor
test
das
cmp
push
lock
dec
add
or
movs
jecxz
or
test
(bad)
inc
sub
ror
retf
push
ins
add
mov
sbb
dec
xchg
sbb
xor
adc
cmp
rcr
sti
das
je
pusha
and
inc
inc
or
and
dec
adc
popa
fnstcw
sbb
daa
inc
lods
mov
pushf
jno
aas
fcom
push
adc
jecxz
jnp
push
mov
fwait
(bad)
mov
mov
xchg
and
mov
(bad)
out
rcr
sbb
lahf
clc
mov
or
cmps
xor
ins
rcl
aas
add
push
mov
pop
lock
clc
das
jo
mov
mov
mov
mov
lock
sbb
dec
lods
sbb
mov
pop
and
ret
sbb
jecxz
inc
and
xor
mov
adc
lock
test
shr
jo
rcl
(bad)
push
push
push
cld
rol
out
mov
mov
xor
add
cmp
adc
cli
mov
pop
xor
sub
test
or
in
jg
adc
or
ror
sbb
push
lock
pop
pop
mov
mov
mov
add
mov
iret
or
sub
push
sbb
xlat
mov
xchg
cli
test
jmp
out
pushf
pusha
fidivr
jns
sbb
add
imul
rcr
or
(bad)
(bad)
fwait
pop
std
idiv
mov
add
stc
or
push
mov
mov
int3
add
or
test
inc
out
aas
cmp
sub
(bad)
xchg
enter
or
outs
xchg
xor
into
addr16
dec
loope
fstp
and
cmc
sbb
rcr
enter
or
mov
xchg
mov
add
cmp
loopne
jge
popf
or
and
inc
adc
in
or
hlt
mov
cld
jle
std
std
test
pop
mov
ror
mov
xchg
xor
push
mov
mov
xchg
jbe
iret
push
retf
cli
popf
sbb
loop
jmp
pop
lds
loopne
push
add
sbb
outs
stc
cli
repz
fwait
mov
jno
mov
shl
imul
jnp
add
mov
xor
jbe
mov
shr
loop
add
and
outs
sbb
sbb
int
dec
mov
pop
sub
pop
push
dec
outs
les
mov
mov
adc
inc
pop
pop
sbb
pop
stos
pop
jmp
and
enter
inc
cwde
cwde
sbb
std
out
aas
sti
xor
push
sub
ret
xlat
das
cli
bound
xor
inc
and
mov
adc
push
jge
xor
xor
pop
(bad)
arpl
pop
into
add
out
paddd
add
inc
cs
fsub
sbb
fild
dec
dec
pop
sub
out
mov
movs
ins
ss
adc
dec
and
lock
mov
xor
or
inc
clc
jg
shr
inc
sub
xchg
push
jne
pop
xor
mov
movs
and
add
in
ror
fidivr
cmp
retf
js
adc
push
cld
(bad)
mov
add
xor
mov
push
lds
mov
daa
or
imul
test
mov
add
scas
inc
fistp
pop
lock
leave
sub
push
dec
daa
ds
cmp
mov
mov
mov
adc
out
repnz
aam
add
mov
imul
repz
addr16
jmp
xchg
sbb
fs
or
push
movs
shr
jg
cwde
fs
aam
or
aaa
cmp
call
enter
(bad)
mov
mov
fdivr
pop
cld
sbb
sti
outs
(bad)
(bad)
sbb
add
pop
lods
cmp
and
les
sbb
inc
mov
inc
clc
cmp
xchg
pop
imul
repz
call
xor
mov
dec
test
and
or
mov
sub
dec
addr16
jmp
add
mov
(bad)
mov
jl
add
or
or
mov
sbb
jnp
loopne
scas
js
pop
nop
ds
cld
outs
(bad)
pop
es
jmp
sbb
mov
out
add
les
inc
repz
jg
repz
aas
clc
jmp
xchg
pop
mov
and
adc
fiadd
pop
add
inc
jp
adc
idiv
push
test
fmul
cwde
adc
sbb
and
mov
stc
mov
sub
mov
add
pusha
in
test
push
or
push
test
mov
ins
fistp
xchg
sahf
sub
into
gs
fisttp
mov
ins
or
mov
push
push
push
xor
dec
scas
mov
and
sub
fisttp
add
outs
clc
pushf
adc
pop
pop
arpl
movs
or
sub
fild
cwde
movs
xor
pop
dec
mov
mov
mov
sbb
jo
fs
js
push
inc
xor
rol
test
in
xchg
in
mov
push
add
je
pushf
add
dec
adc
mov
xchg
cmp
push
and
xchg
xor
in
push
outs
and
inc
lods
popa
cmp
or
pop
mov
jne
dec
in
mov
jg
(bad)
adc
fist
push
(bad)
mov
sub
jmp
je
mov
xor
and
push
jge
sub
cmp
xchg
cmp
jmp
pop
cmp
in
pop
mov
push
add
imul
xchg
sub
or
xor
add
or
out
jle
sub
pop
imul
into
xchg
jmp
loope
hlt
call
outs
mov
mov
xor
mov
dec
cmp
jmp
cmp
shl
mov
jmp
mov
add
mov
and
rcr
bound
std
int
jmp
loopne
imul
pusha
push
neg
(bad)
ins
sti
mov
or
ret
xor
add
loope
push
ror
sub
test
add
std
icebp
or
(bad)
jmp
mov
imul
inc
inc
ret
jne
dec
stc
jle
fist
lock
or
add
mov
mov
(bad)
pop
cmp
jae
mov
sub
mov
mov
(bad)
stos
add
pop
lock
(bad)
jne
inc
push
xor
jns
outs
sub
push
pop
in
add
inc
mul
cmp
call
mov
dec
or
cmp
mov
(bad)
aad
(bad)
pop
(bad)
ret
or
inc
adc
sub
ja
shl
retf
jnp
cmp
fimul
adc
xor
rcl
jmp
adc
or
mov
iret
int
movs
mov
xor
aad
cmp
dec
movs
dec
push
mov
test
hlt
mov
fs
cmp
(bad)
or
sar
and
(bad)
sub
into
or
enter
sbb
and
add
pop
mov
fldenv
aaa
jo
sti
enter
add
push
jo
pop
jbe
mov
mov
pop
mov
(bad)
std
jmp
xor
shl
cli
xchg
mov
inc
inc
aam
call
sar
sbb
sub
(bad)
mov
xor
sub
pop
movs
jg
hlt
ret
xor
push
cwde
int3
cmp
push
lock
in
sub
call
mov
sub
mov
and
or
xchg
adc
scas
add
int3
aam
mov
(bad)
lahf
mov
fisttp
(bad)
inc
sbb
push
test
mov
pop
xor
(bad)
mov
jge
cmp
pushf
stos
push
mov
add
mov
add
fdivp
mov
idiv
lods
test
jb
or
das
sub
pop
add
pop
cmp
inc
add
xor
jno
mov
retf
jmp
in
adc
dec
ret
adc
aas
daa
xchg
cli
(bad)
mov
in
lock
loopne
rol
loop
stos
or
adc
mov
push
aaa
xchg
imul
mov
iret
xor
sub
jb
sub
out
jnp
push
dec
bound
add
adc
mov
mov
(bad)
pop
add
adc
lock
mov
or
xor
jle
aam
sub
push
sar
mov
or
cwde
repnz
xor
mov
mov
(bad)
cld
in
adc
int3
add
loopne
mov
mov
or
mov
dec
mov
sti
mov
pop
retf
add
mov
mov
push
inc
mov
sub
mov
jnp
(bad)
and
xor
hlt
rep
fs
rcr
loopne
das
xchg
mov
mov
outs
inc
or
inc
mov
add
add
adc
add
fidivr
push
shr
add
cmp
jp
or
pop
fdiv
xor
jae
xor
push
ss
inc
outs
pop
xor
out
push
mov
jmp
mov
or
clc
imul
cmps
sub
sub
test
add
mov
cld
mov
xor
inc
push
sub
jmp
inc
mov
add
mov
add
dec
bnd
or
mov
ret
outs
jle
sbb
in
add
jmp
pop
(bad)
mov
inc
push
mov
add
pop
mov
mov
loop
mov
stos
sti
clc
out
xchg
and
or
je
outs
lods
adc
mov
shr
push
(bad)
(bad)
mov
adc
cmp
loope
nop
test
(bad)
in
or
dec
pop
mov
dec
sub
pop
push
mov
jno
cld
pusha
mov
push
sub
add
push
cld
inc
mov
pop
xor
fwait
ss
hlt
jbe
sub
mov
mov
and
sub
jl
inc
push
mov
adc
xchg
jo
int3
add
cwde
mov
mov
mov
sub
inc
sub
cmp
mov
shl
inc
xchg
xchg
iret
or
stos
or
pop
pop
mov
into
or
fs
add
repnz
gs
call
xchg
in
add
pop
cmp
or
shr
sub
adc
add
test
bound
mov
popa
scas
nop
adc
aas
shl
sub
mov
add
(bad)
jg
int
fidivr
mov
mov
push
push
retf
hlt
add
or
cmps
pop
add
(bad)
aas
sbb
dec
mov
add
mov
fcomi
(bad)
mov
xor
dec
dec
outs
stos
es
push
xor
cs
push
enter
shl
call
push
jae
setg
(bad)
test
iret
push
jns
cmp
out
clc
jecxz
fadd
mov
ret
test
mov
mov
mov
add
mov
mov
add
jb
fbld
jl
or
test
and
outs
sub
test
mov
fidivr
or
pop
mov
pop
mov
cs
inc
add
pop
jle
mov
mov
popa
and
ins
ja
test
sahf
fcomp
jl
inc
ins
dec
loope
xchg
xor
jl
mov
aaa
and
ss
and
mov
dec
clc
adc
je
test
pop
lock
fisttp
into
mov
mov
imul
xor
adc
add
arpl
ficom
jbe
xchg
loopne
inc
lahf
ud0
push
aam
jl
pop
or
icebp
or
sbb
add
mov
pop
inc
push
cwde
call
mov
add
popa
adc
mov
cmp
das
js
adc
push
dec
(bad)
imul
fstp
jl
loopne
and
sbb
cwde
out
out
xlat
mov
in
sbb
and
mov
adc
(bad)
pop
or
icebp
mov
push
pop
ret
mov
enter
ret
push
movs
sbb
fistp
loop
mov
push
or
inc
dec
add
adc
clc
fild
(bad)
or
jmp
push
hlt
call
imul
in
inc
dec
mov
pop
sbb
jns
out
mov
adc
inc
int
xor
push
mov
push
mov
and
mov
push
add
pop
jo
cmp
pop
sar
cmp
mov
imul
out
ret
sub
jmp
ins
add
sub
add
mov
mov
std
or
sub
mov
mov
xchg
test
jbe
lock
clc
(bad)
fbld
fidiv
ror
fs
sub
lock
or
aas
std
xor
sub
xchg
or
(bad)
mov
neg
pop
adc
dec
cli
sbb
or
retf
push
mov
sbb
clc
(bad)
dec
sub
xchg
js
test
mov
pop
test
aaa
aad
mov
in
xchg
cmp
push
mov
push
js
sbb
(bad)
xor
ja
ret
mov
add
ss
int3
lock
mov
sbb
inc
and
bound
nop
add
ret
sahf
std
das
xor
icebp
mov
mov
add
iret
call
xchg
daa
jp
loope
(bad)
mov
dec
xor
dec
inc
ja
(bad)
mov
add
xor
mov
add
jge
xchg
loopne
adc
lock
in
sbb
enter
sub
hlt
mov
pop
arpl
fsubr
push
sar
mov
sub
loopne
jg
jecxz
inc
push
mov
cld
mov
xchg
add
and
sbb
pusha
and
or
scas
out
sub
pushf
push
sahf
in
mov
aas
rcr
jbe
ins
add
dec
xchg
pop
or
imul
fdivp
(bad)
jno
mov
ror
dec
cmp
arpl
push
dec
mov
push
popa
adc
mov
stos
push
or
inc
and
fisttp
fnstcw
add
mov
ds
push
call
and
cld
das
xor
aam
or
mov
fisub
call
and
ss
sub
push
(bad)
mov
add
retf
push
outs
neg
sub
lock
loope
movs
ret
inc
jns
imul
rcl
scas
les
xor
mov
cmp
xchg
hlt
test
push
add
mov
mov
push
inc
push
push
scas
fcmovnu
(bad)
outs
int
pop
retf
(bad)
pop
std
sub
or
pop
mov
dec
lock
imul
test
inc
sbb
(bad)
push
or
xchg
sbb
sbb
ds
dec
add
leave
das
adc
dec
sbb
aaa
data16
rcr
push
and
outs
add
repz
inc
push
push
(bad)
pop
imul
jle
sbb
xor
out
add
div
jle
mov
sub
mov
aam
jle
cmps
movs
call
inc
cmp
sub
popa
stos
nop
and
push
scas
push
push
xor
fild
imul
push
rol
cld
(bad)
jle
sti
mov
and
mov
mov
lahf
ins
and
aad
sbb
fnstenv
push
sar
(bad)
jge
pop
mov
out
cmp
and
inc
jmp
mov
xor
dec
and
inc
inc
jl
cmp
sbb
jle
xchg
enter
inc
lock
mov
stos
aaa
push
in
mov
fld
mov
sbb
add
push
inc
pop
push
jbe
popa
add
outs
bound
fild
test
je
imul
or
push
ins
push
adc
cmp
pop
mov
jae
ins
pusha
xchg
imul
and
cwde
ss
push
mov
inc
cmp
pop
jno
fadd
(bad)
or
add
mov
inc
idiv
push
(bad)
cmp
addr16
retf
idiv
mov
push
and
xchg
ficom
push
jle
adc
pop
dec
call
(bad)
cmps
imul
aas
adc
pop
push
call
adc
pop
jle
pop
stos
hlt
cmp
dec
je
mov
nop
xor
inc
inc
inc
imul
data16
or
outs
addr16
retw
aaa
mov
jae
jne
popa
add
bound
adc
gs
pop
push
stc
outs
jo
add
daa
ins
cld
shr
push
mov
fwait
cmp
sbb
cmp
dec
add
das
xor
or
pop
pop
je
cmp
or
xchg
pcmpeqd
dec
adc
xor
sbb
gs
je
push
or
(bad)
gs
(bad)
mov
or
(bad)
jle
repz
push
cmp
jne
fucomip
js
aas
jne
or
push
inc
jle
sub
(bad)
cmp
sti
jl
add
jmp
loopne
sub
adc
xor
mov
cs
je
push
push
xor
shl
mov
or
jg
js
aas
neg
push
movs
jo
addr16
add
mov
cwde
shl
call
xor
ja
(bad)
dec
jb
aas
sub
and
and
jg
aas
adc
jge
mov
sbb
inc
dec
mov
outs
data16
xchg
aad
jno
xchg
push
ss
scas
loop
fs
xchg
dec
imul
data16
gs
imul
add
cli
mov
mov
fistp
sbb
push
mov
(bad)
xsaves
and
les
pmaxub
jg
mov
mov
ret
xchg
push
in
hlt
pop
repz
lahf
div
and
pop
add
sbb
mov
mov
adc
and
mov
sbb
add
shl
mov
cs
add
sar
test
inc
ret
(bad)
repz
les
inc
jmp
(bad)
(bad)
dec
inc
mov
das
out
(bad)
dec
fdivr
addr16
push
sub
(bad)
(bad)
out
push
jp
lds
push
mov
sti
xchg
imul
mov
scas
adc
dec
add
clc
(bad)
(bad)
dec
mov
repz
cld
add
mov
pop
inc
mov
not
pusha
add
dec
(bad)
ins
jae
dec
in
cld
ret
mov
lds
call
inc
xor
outs
and
lahf
std
dec
lea
scas
add
(bad)
push
and
cld
inc
cmp
fmul
mov
pop
and
jnp
jno
mov
cmc
in
mov
jge
jmp
adc
or
pop
in
(bad)
popa
out
cmc
pop
sbb
sbb
xor
sbb
inc
mov
mov
adc
adc
mov
dec
adc
jae
mov
cld
push
push
mov
scas
mov
mov
inc
and
hlt
mov
neg
ins
mov
xchg
add
dec
lock
push
mov
sub
std
(bad)
mov
addr16
stos
jmp
sti
std
(bad)
inc
adc
dec
rol
or
shl
cmp
sbb
pop
dec
fnstenv
jnp
jbe
push
add
into
sbb
jl
enter
push
dec
inc
fld
adc
jae
jnp
adc
add
cld
mov
mov
jecxz
mov
add
add
inc
sub
add
dec
push
stc
jnp
mov
mov
outs
fiadd
mov
mov
sub
jge
or
or
inc
mov
ins
ret
(bad)
mov
(bad)
lods
pop
mov
pop
mov
outs
(bad)
out
push
sti
bound
inc
dec
jmp
ret
dec
ins
push
(bad)
inc
push
add
pop
repz
(bad)
outs
inc
inc
jmp
mov
test
push
push
repz
dec
ss
ins
push
je
mov
cmp
repnz
push
mov
div
xchg
mov
xor
aas
(bad)
cmp
pop
pop
pop
(bad)
je
outs
cmps
mov
dec
sar
in
mov
mov
or
fcomp
fs
mov
adc
push
push
ins
rcl
jg
push
or
fld
jae
mov
shl
jg
inc
jb
push
mov
test
pushf
push
aam
dec
or
fisub
mov
pop
aas
gs
xchg
aam
mov
pusha
pop
or
jmp
dec
push
mov
pop
fwait
xor
pop
sbb
call
push
cmps
mov
je
dec
mov
mov
jb
xor
pop
mov
hlt
arpl
xchg
sbb
sti
mov
mov
or
inc
outs
or
dec
inc
push
clc
jmp
aad
ins
and
dec
psubq
mov
aas
pop
sar
pop
pusha
popa
stos
pop
mov
outs
push
sub
dec
(bad)
imul
(bad)
arpl
jecxz
cld
push
outs
inc
pop
ds
rol
je
pop
or
aam
inc
imul
push
add
mov
call
shl
add
je
cld
adc
mov
gs
repnz
sahf
mov
dec
xor
and
fdivr
imul
inc
add
pop
jl
(bad)
push
pop
rol
ja
(bad)
add
sub
sbb
fnstsw
add
cmps
jnp
ret
int3
pop
jmp
pop
add
mov
arpl
cld
(bad)
and
(bad)
push
std
mov
pop
cmp
mov
add
push
jecxz
xchg
rol
iret
pushf
sbb
mov
stos
push
mov
push
or
inc
mov
jg
out
cli
(bad)
cmp
add
or
mov
mov
push
je
ret
push
mov
mov
xchg
rcr
popf
push
ja
cmp
mov
int
pop
push
xlat
and
lock
(bad)
sub
add
test
cld
add
push
mov
cli
mov
push
sahf
jno
rcl
arpl
jbe
adc
aaa
or
sbb
scas
ret
mov
je
rcr
ret
test
push
mov
adc
cmp
dec
dec
ret
mov
add
mov
inc
out
das
jno
inc
or
dec
and
push
inc
or
dec
lods
(bad)
addr16
mov
fs
cs
inc
mov
pop
sub
pop
(bad)
mov
push
imul
inc
inc
pop
arpl
add
pop
call
jg
(bad)
outs
(bad)
jmp
push
outs
inc
xor
pop
out
jae
cmps
pop
ret
test
clc
(bad)
popa
inc
sbb
ss
or
mov
jo
cli
aaa
mov
minps
mov
mov
aaa
cmp
adc
mov
xlat
push
aam
call
dec
(bad)
pop
mov
dec
push
ja
bswap
inc
xor
jge
outs
push
inc
out
dec
inc
(bad)
call
jb
mov
push
cld
add
pop
inc
imul
fild
outs
add
(bad)
sbb
(bad)
aaa
mov
add
mov
call
or
jg
push
ret
cmp
or
cli
lods
adc
pop
(bad)
jg
jmp
inc
mov
xchg
add
out
push
sbb
(bad)
add
lods
jae
jno
sti
inc
push
div
mov
add
not
add
out
adc
push
and
mov
je
aaa
jl
sbb
dec
xor
jb
fcmovu
jmp
daa
pop
inc
push
inc
mov
sti
ret
(bad)
push
ret
adc
aaa
(bad)
data16
push
(bad)
push
gs
mov
ins
jmp
inc
test
jg
mov
mov
in
mov
std
push
add
out
enter
push
xchg
adc
xor
pop
inc
mov
out
enter
mov
lds
outs
ret
jl
dec
push
mov
push
jmp
and
push
xor
mov
or
(bad)
call
or
dec
pop
ret
(bad)
in
jle
and
pop
cwde
(bad)
aas
sub
push
mov
pop
mov
xor
outs
push
repnz
out
shr
sbb
into
daa
imul
jge
cli
mov
xchg
jge
xor
retf
cmp
(bad)
pop
sbb
mov
iret
and
add
add
cli
dec
das
dec
mov
fild
dec
push
push
imul
jbe
add
xchg
ins
enter
cmps
add
inc
mov
push
adc
into
lahf
ret
shl
aas
dec
imul
push
xchg
sti
scas
out
mov
mov
cmp
add
aad
ds
add
push
push
repz
sbb
jg
ss
jg
in
outs
aaa
mov
fs
push
(bad)
pop
inc
test
jp
sub
or
cmc
es
(bad)
fwait
mov
inc
out
lods
out
test
out
(bad)
push
sahf
or
paddd
shl
(bad)
and
push
jg
add
out
xor
xchg
pop
nop
fwait
mov
sbb
push
add
sub
jae
mov
mov
dec
enter
mov
rcr
and
es
jbe
sub
sbb
je
fld
dec
and
sti
mov
retf
call
jecxz
std
je
push
inc
mov
inc
sbb
jg
dec
aas
adc
(bad)
rcr
fmulp
hlt
mov
call
push
add
or
(bad)
mov
pushf
ja
or
daa
add
mov
dec
imul
mov
into
out
ins
dec
pop
mov
aas
adc
dec
(bad)
idiv
out
cmp
add
cmp
sbb
imul
test
movs
dec
ja
dec
out
dec
inc
out
aas
pop
arpl
push
push
add
rol
pop
and
jmp
mov
cmp
shl
jae
and
pop
mov
cmp
mov
lock
pop
mov
rcr
loop
and
test
add
or
pop
aam
add
ret
pusha
adc
lds
arpl
inc
mov
xlat
pop
jns
dec
mov
push
mov
mov
rcr
cmp
push
xchg
pushf
mov
std
mov
add
inc
(bad)
cmp
out
out
sbb
jg
popa
inc
call
in
js
jmp
add
out
xor
pop
out
(bad)
adc
mov
jnp
mov
in
clc
or
sub
add
inc
es
pop
adc
pop
mov
(bad)
push
dec
sti
ja
imul
and
mov
fwait
(bad)
xor
addr16
imul
xor
add
out
std
mov
mov
jmp
inc
push
cld
or
ret
idiv
cli
data16
sti
cmc
push
push
mov
ja
push
xor
pusha
inc
add
pop
adc
dec
icebp
add
mov
cmp
fsubp
into
arpl
inc
pop
hlt
daa
pop
xchg
sbb
and
mov
je
xchg
retf
adc
pop
jmp
inc
pop
and
dec
into
gs
or
ret
jb
fild
jmp
pop
xlat
frstor
call
mov
cmps
outs
inc
pop
repnz
lods
fs
daa
xor
in
fcmovnu
rol
pop
inc
add
dec
mov
and
mov
push
inc
and
lods
jp
push
std
pop
fld
jge
mov
jg
pop
mov
mov
cmc
dec
sbb
out
or
xor
imul
lock
in
bound
outs
gs
or
loop
lds
inc
(bad)
push
pop
jle
(bad)
mov
pop
xchg
add
add
ror
inc
cmp
ret
add
cmp
mov
push
(bad)
fdivr
call
sbb
sbb
std
mov
mov
(bad)
je
inc
(bad)
fst
jo
push
xchg
retf
xchg
rol
arpl
add
ds
add
dec
mov
loop
pop
sub
add
out
idiv
push
pop
cmp
and
inc
push
xlat
rol
stos
push
push
pop
mov
inc
bound
mov
dec
dec
jg
test
(bad)
xor
test
mov
add
mov
push
xlat
dec
jae
rcl
sub
ret
(bad)
cld
daa
ret
and
add
jo
ficom
and
pop
ror
jmp
movnti
outs
push
mov
outs
and
push
in
adc
and
js
or
pop
dec
mov
push
call
jmp
ret
mov
addr16
call
mov
mov
inc
pop
data16
add
cmp
out
add
lds
shl
(bad)
mov
pop
add
adc
out
push
jg
sar
call
(bad)
fist
loopne
push
adc
push
pop
aas
mov
aas
jnp
dec
sub
mov
mov
add
ret
add
ja
xchg
push
dec
mov
and
push
not
xchg
add
jle
fiadd
data16
mov
xor
pop
mov
push
jmp
inc
jmp
adc
enter
stc
jmp
xchg
sbb
cli
or
jnp
add
cld
scas
jmp
loopne
cld
pop
lds
jae
xor
setbe
loope
inc
sub
and
enter
jg
pop
pop
jnp
jmp
ins
inc
call
pop
xor
cmp
pop
leave
addr16
push
sti
int
sbb
lds
xchg
cmp
cli
cli
outs
das
pop
add
imul
test
imul
je
mov
enter
cli
adc
jno
pop
sub
sbb
(bad)
(bad)
jmp
pop
xor
mov
mov
pop
dec
add
inc
or
cs
add
fimul
xor
xor
pop
and
pop
mov
ret
arpl
cli
ins
call
cmc
jg
inc
loope
aas
xor
out
ret
add
ret
push
mov
test
ss
scas
cmp
(bad)
repz
out
jmp
je
sti
fild
cld
or
inc
mov
and
sub
test
add
cmp
dec
pop
inc
cli
inc
(bad)
fbstp
bound
mov
and
gs
mov
pop
in
mov
lahf
sub
push
sbb
dec
jo
shl
jmp
enter
push
mov
mul
clc
push
ja
ins
stos
out
jmp
std
dec
push
mov
pop
inc
cmc
aas
xor
xchg
ret
icebp
imul
or
aaa
je
or
pop
mov
lahf
adc
mov
xor
clc
add
scas
dec
inc
pop
mov
pop
push
sti
(bad)
jb
(bad)
push
add
jle
cmp
pop
pop
sub
jl
add
adc
push
out
je
add
push
fadd
cmc
sub
std
mov
or
pop
xor
aas
add
or
aas
in
push
pop
pop
les
adc
push
mov
jmp
inc
pop
or
add
cmp
(bad)
push
inc
outs
jecxz
sahf
pop
mov
inc
rcr
mov
shl
sub
data16
add
jmp
rol
pop
loop
cmps
jp
cld
daa
push
int3
push
in
pop
mov
sti
repz
or
jmp
jb
or
ret
cli
add
mov
aas
outs
test
mov
movs
rcr
bnd
jmp
cmp
dec
inc
fiadd
(bad)
or
add
sub
xor
jge
mov
pop
mov
dec
ins
xor
fs
fsub
mov
sar
out
mov
sahf
or
sbb
mov
mov
sti
enter
inc
inc
pop
and
fistp
mov
ins
loop
add
sahf
loopne
jne
lods
out
mov
push
dec
mov
xor
sahf
add
lods
sbb
xchg
(bad)
jg
stos
fiadd
inc
adc
inc
out
sbb
pop
dec
(bad)
sti
mov
jae
adc
inc
call
mov
adc
jp
popf
ret
(bad)
out
push
pop
add
aaa
xor
add
inc
and
mov
sti
test
mov
dec
mov
std
fwait
stos
inc
pop
xchg
inc
stc
push
mov
cmp
inc
out
mov
pop
mov
jp
pop
ins
adc
xchg
(bad)
scas
jmp
mov
mov
cli
cmp
push
ret
jae
add
jmp
or
cmp
lahf
inc
cld
pop
mov
loope
je
je
jnp
std
pop
push
stos
inc
xor
fidivr
xchg
(bad)
xor
sub
mov
retf
scas
call
fs
xor
add
sub
add
call
(bad)
dec
add
repz
mov
stos
movs
jg
jg
out
add
inc
dec
inc
mov
sti
sbb
mov
mov
std
fadd
pop
imul
mov
push
or
sbb
or
div
mov
sbb
and
(bad)
fcmovnb
sti
or
dec
mov
or
call
cld
sbb
imul
pop
mov
inc
mov
out
jbe
jbe
(bad)
add
inc
fstp
inc
push
call
aas
test
fwait
add
pusha
out
mov
pop
jecxz
xchg
add
shl
enter
inc
cmp
jmp
jl
pop
mov
add
in
loopne
jmp
out
aas
inc
inc
sub
xor
fld
add
jg
push
push
or
(bad)
idiv
aaa
scas
call
mov
xor
mov
inc
pop
inc
mov
xchg
push
jl
sar
into
outs
iret
ror
clc
(bad)
cmp
mov
aad
out
mov
iret
(bad)
mov
dec
out
adc
add
(bad)
aad
mov
and
jl
ins
sahf
(bad)
retf
es
jg
movsx
cmp
aas
push
loopne
and
sbb
pop
movs
pop
xor
cmc
pop
dec
push
lds
ror
addr16
mov
sub
loopne
pop
cmp
ins
xchg
mov
mov
mov
cli
mov
aas
sti
mov
or
jb
clc
xchg
add
out
or
outs
(bad)
mov
push
push
mov
pop
ret
and
push
pop
and
add
icebp
outs
clc
stos
aam
data16
mov
cmp
je
pop
inc
inc
dec
aas
push
pop
jg
loope
fisubr
dec
xor
add
call
dec
ret
push
outs
add
push
outs
pop
aas
sbb
out
rol
mov
outs
jmp
fsubrp
icebp
(bad)
jge
aam
sub
std
inc
cmp
rcl
inc
mov
mov
and
clc
fisttp
ret
cmp
xor
push
(bad)
mov
fcomp
fld
mov
push
mov
sub
add
pavgb
and
jl
adc
ret
mov
dec
add
fiadd
xchg
out
cmp
(bad)
jmp
adc
jb
push
test
mov
pop
(bad)
push
add
inc
jmp
pop
sub
xor
ret
(bad)
xlat
ret
xor
aam
jae
mov
mov
fwait
cmp
aas
mov
mov
outs
out
add
(bad)
es
push
mov
out
push
call
(bad)
out
mov
sti
inc
push
xor
push
fs
pop
inc
bswap
sub
outs
mov
dec
add
sar
nop
std
pop
or
dec
jmp
sti
adc
mov
jmp
inc
lea
push
add
xlat
sbb
or
or
mov
out
push
nop
mov
add
outs
sbb
(bad)
mov
jae
cmp
cmp
call
cmp
pop
iret
sti
add
aam
push
ret
jo
mov
dec
dec
pop
(bad)
push
push
or
xchg
sti
adc
clc
inc
in
clc
mov
xor
imul
add
fistp
mov
std
out
inc
and
cmps
add
push
arpl
inc
push
xor
aaa
or
aas
cmp
pop
(bad)
movs
sti
stos
cli
mov
addr16
ret
je
or
xlat
pop
pop
fsubr
jbe
sbb
jmp
inc
sbb
imul
push
pop
aas
jnp
cmc
mov
push
fidiv
mov
xor
or
and
gs
das
call
jecxz
stos
add
inc
sub
mov
movs
pop
iret
pop
lds
dec
imul
mov
ret
iret
and
xor
inc
mov
xchg
cmc
ja
mov
push
out
aas
inc
mov
jl
dec
mov
call
pop
data16
inc
(bad)
push
dec
inc
fst
cld
daa
inc
icebp
dec
(bad)
je
inc
adc
jle
test
lods
jmp
or
in
jae
repz
imul
icebp
pop
add
xor
inc
cld
(bad)
push
call
jl
xchg
in
add
push
out
cmp
pop
or
xchg
mov
xchg
inc
addr16
mov
daa
lahf
mov
add
sub
jp
xor
loop
lds
stos
outs
add
pop
(bad)
out
test
cmovp
inc
retf
pop
test
mov
mov
inc
mov
or
and
aad
mov
xchg
mov
(bad)
(bad)
cmp
cmp
adc
or
test
sbb
mov
add
aas
ret
cli
(bad)
sub
repz
cmp
(bad)
outs
je
out
out
(bad)
mov
(bad)
repz
or
int
pusha
aam
and
inc
dec
mov
idiv
pop
or
xchg
or
xchg
dec
pop
dec
sbb
(bad)
test
repz
mov
mov
daa
add
dec
adc
mov
jmp
push
push
nop
xlat
(bad)
and
push
mov
aam
pusha
aas
push
out
arpl
jae
inc
push
add
mov
cs
std
xlat
inc
jbe
ret
inc
imul
mov
xor
ret
call
push
inc
outs
cmp
pop
jge
dec
xor
mov
jb
cli
into
inc
movs
lock
adc
mov
mov
mov
cld
pop
shl
push
(bad)
jno
inc
rep
das
add
inc
test
enter
js
inc
call
fadd
adc
jmp
je
lds
sub
(bad)
(bad)
mov
xchg
push
(bad)
scas
add
std
lods
jl
add
xchg
add
enter
dec
jle
jge
xor
cmp
out
lds
out
inc
mov
push
test
and
pop
or
add
add
outs
(bad)
jge
push
add
cmp
dec
shl
repz
jbe
adc
push
jg
lahf
pop
add
push
sbb
push
shr
out
xor
adc
(bad)
nop
mov
aaa
test
jge
mov
inc
outs
fdiv
scas
xlat
xor
push
pushf
cli
movs
push
pusha
aam
add
mov
mov
mov
push
add
inc
xchg
je
addr16
(bad)
sbb
xor
or
test
ja
inc
loop
jb
cli
push
sbb
gs
je
cmp
test
jmp
jmp
imul
jg
cs
adc
xlat
pop
aaa
mov
pusha
mul
sbb
jp
cmp
dec
inc
adc
add
mov
jno
xchg
mov
push
or
pop
les
xlat
movs
cs
mov
test
imul
shl
ret
ret
ins
sti
stos
mov
pushf
add
idiv
push
das
addr16
dec
jnp
inc
ins
inc
stos
inc
pop
scas
xor
jno
xchg
push
and
xor
add
xor
mov
or
lock
lds
push
and
imul
sub
mov
inc
in
lahf
mov
pop
push
xor
lds
xor
inc
add
rol
xor
fisttp
cs
fwait
mov
cmp
jmp
or
mov
mov
mov
aas
(bad)
stos
jo
mov
out
mov
lock
pop
mov
and
mov
or
dec
div
add
popf
shr
call
inc
outs
push
sti
gs
mov
stc
pop
mov
test
aaa
jecxz
or
mov
pop
add
or
clc
(bad)
jmp
(bad)
out
add
ins
mov
mov
repnz
sti
sti
imul
loope
mov
(bad)
push
xchg
xor
pop
add
add
cld
(bad)
(bad)
sbb
sti
inc
mov
push
inc
mov
or
fimul
mov
add
push
ficomp
inc
loopne
xchg
movs
ins
(bad)
fiadd
add
jmp
mov
and
pop
inc
push
sub
xchg
adc
cmp
mov
mov
mov
scas
dec
fild
dec
adc
test
xor
mov
(bad)
(bad)
mov
daa
pop
or
das
sub
mov
in
outs
imul
paddb
inc
mov
inc
push
inc
sti
or
fmul
fiadd
sbb
shl
popa
iret
or
pop
inc
outs
rcr
out
cmp
loope
mov
out
push
xor
mov
or
jecxz
inc
rol
imul
test
jae
cli
and
inc
loopne
or
pop
je
test
jbe
push
shl
xor
pop
test
adc
or
jg
cli
cld
xchg
call
push
mov
loop
add
inc
loopne
jae
cmp
bnd
mov
(bad)
sbb
push
mov
or
or
jp
xor
out
mov
mov
and
jg
pop
add
mov
ins
cmp
popf
xchg
and
dec
out
inc
pop
out
inc
loopne
loope
adc
aas
cld
fiadd
int
ror
add
mov
lock
dec
push
xchg
ds
ret
mov
push
xchg
inc
jle
push
push
test
scas
adc
jae
bswap
cmp
pop
cmp
mov
mov
cmc
aaa
addr16
jo
add
loop
(bad)
(bad)
(bad)
jmp
dec
bound
cli
mov
mov
push
add
push
mov
cmps
inc
push
loop
in
xor
add
cli
fwait
adc
push
ret
mov
pop
add
inc
(bad)
jle
ret
add
jmp
cmp
add
xchg
arpl
mov
push
pop
mov
sbb
movs
lahf
or
sbb
dec
add
mov
std
inc
retf
movs
push
retf
xor
add
scas
mov
inc
and
outs
hlt
push
cmp
xchg
adc
pop
pop
mov
mov
push
sbb
fiadd
mov
xor
inc
push
mov
(bad)
stc
imul
add
movmskps
scas
mov
inc
jmp
test
cmp
and
sahf
cli
inc
(bad)
arpl
mov
push
xchg
ins
jg
pop
mov
cdq
pop
xor
xor
sahf
push
adc
sbb
inc
dec
push
mov
inc
addr16
loope
call
mov
sub
dec
jg
fbld
loop
xor
sub
pop
and
je
call
push
mov
movs
pop
pusha
or
push
xor
add
js
mov
mov
xor
ss
dec
push
sbb
jmp
pop
add
pop
out
cmc
jmp
fsubr
jecxz
xchg
scas
dec
mov
cld
movups
cli
dec
and
inc
jmp
pop
addr16
hlt
dec
push
sti
mov
xchg
ja
mov
cmp
lds
push
push
call
xor
pop
lods
add
and
or
sahf
lds
adc
bound
jmp
jmp
push
xchg
adc
jmp
data16
mov
scas
imul
sbb
mov
mov
shl
(bad)
std
adc
das
add
and
jmp
mov
(bad)
pop
pusha
aas
outs
int
shl
out
dec
push
fmul
in
push
push
sbb
arpl
retf
inc
jae
sti
jg
mov
push
pop
add
inc
cld
mov
push
cmp
(bad)
cmp
pop
add
jnp
add
cmp
rol
daa
imul
xchg
loop
inc
push
out
retf
jg
jo
dec
mul
loop
mov
loopne
pop
mov
or
scas
cli
add
xor
in
jg
inc
cmc
jae
mov
add
mov
aas
pop
jp
jecxz
cmps
cli
sub
inc
mov
fs
inc
aam
cld
(bad)
in
call
inc
jecxz
ret
out
inc
imul
sbb
or
mov
pop
sbb
in
add
in
js
out
xor
mov
fld
cwde
ins
push
arpl
clc
inc
and
or
aas
push
or
inc
inc
stc
push
in
adc
cmc
jno
imul
inc
dec
sub
mov
mov
inc
inc
jne
aaa
add
pop
jecxz
rcl
and
pusha
(bad)
jne
dec
cld
ja
scas
iret
xchg
fadd
out
xor
out
and
inc
add
pop
add
fidiv
inc
lahf
shl
jg
add
cs
iret
add
cmps
inc
rcr
ret
ins
pop
sar
jae
pop
and
dec
add
sar
and
inc
dec
inc
sub
sbb
push
sti
add
aad
push
push
pop
fsub
enter
fcmovb
pop
xor
ret
and
add
push
push
in
out
scas
jo
sbb
cld
rol
xchg
xor
jle
add
adc
add
sahf
jg
pop
pop
fsub
(bad)
lahf
add
lock
adc
or
inc
aas
aam
pop
pop
aad
xor
mov
(bad)
cmc
inc
adc
sbb
cld
shrd
inc
ret
add
push
jp
fadd
inc
xchg
sub
rol
call
out
pop
xchg
pop
imul
jg
pop
push
outs
mov
cli
lahf
mov
inc
pop
cwde
bound
addr16
loop
add
xchg
and
push
cmp
push
mov
cmc
fwait
adc
mov
add
mov
cld
popf
sbb
xor
neg
paddsw
gs
push
or
(bad)
loop
les
push
(bad)
out
inc
lock
inc
adc
or
adc
adc
rcl
jae
call
out
jae
dec
repnz
pop
scas
adc
ror
or
mov
nop
(bad)
aaa
ror
shl
mov
(bad)
(bad)
icebp
pop
rcl
inc
add
push
push
fstp
pop
icebp
out
cmc
lods
mov
sbb
ins
jg
xor
test
push
mov
vpminsw
fimul
and
in
adc
or
jle
aaa
jg
cs
mov
or
pop
push
nop
inc
xchg
mov
test
pop
mov
addr16
sti
cmp
inc
test
pop
(bad)
pop
scas
xor
es
retf
mov
or
fs
jae
mov
out
mov
cmp
(bad)
jmp
fsubp
push
inc
mov
mov
inc
fidivr
pop
and
jmp
pop
ins
(bad)
fisubr
test
pop
mov
imul
(bad)
ja
jg
add
pop
call
arpl
fdivr
pop
xchg
ret
(bad)
push
ret
add
push
inc
push
inc
je
pusha
dec
ret
jb
loopne
inc
mov
sub
xchg
aas
ret
aas
stc
mov
aas
or
gs
inc
pop
and
inc
int3
xchg
mov
add
add
stos
mov
js
imul
push
add
rol
movs
dec
push
mov
mov
(bad)
std
push
jp
dec
pop
push
mov
mov
pop
jo
popa
lds
or
cld
jp
sub
add
hlt
jge
aaa
test
inc
jg
sub
mov
push
test
lock
adc
xor
enter
aad
mov
outs
add
push
dec
pop
clc
pop
and
cli
lock
icebp
(bad)
dec
mov
xchg
dec
jno
xchg
out
push
xchg
cmps
sbb
(bad)
and
mov
popa
add
mov
mov
inc
pop
stos
push
aam
pop
pop
dec
shr
push
jl
repnz
inc
jno
cli
mov
cmp
out
xor
mov
inc
inc
jge
scas
jg
jg
out
repz
(bad)
subps
xor
ins
fild
sbb
out
inc
cmps
jmp
stc
push
ins
ss
jmp
mov
inc
arpl
push
or
mov
mov
mov
jbe
adc
pop
mov
mov
rcl
mov
and
push
call
call
fs
(bad)
push
test
xchg
mov
in
(bad)
mov
jg
add
or
mov
inc
adc
jmp
pop
cs
(bad)
fcomip
jg
push
mov
inc
std
push
inc
push
out
mov
(bad)
arpl
mov
mov
into
adc
push
stos
or
cmps
push
mov
xlat
test
out
inc
test
jecxz
arpl
jmp
(bad)
sbb
std
fdivr
jnp
push
enter
outs
fidiv
gs
or
pop
jp
cmc
or
add
stos
jbe
(bad)
mov
cmp
fistp
xchg
push
jmp
mov
mov
cli
lds
std
push
mov
dec
call
ror
cmp
adc
push
mov
(bad)
movs
pop
fucomip
jo
jle
inc
shl
push
ins
add
out
pop
aam
mov
inc
out
and
pop
sti
mov
inc
mov
mov
jle
push
add
add
call
add
loope
inc
xchg
or
movs
mov
cmp
mov
lahf
(bad)
call
push
push
pop
jge
pop
add
sub
inc
sar
clc
(bad)
adc
rcr
mov
add
cli
imul
mov
dec
lds
mov
add
sub
mov
add
into
or
adc
xchg
adc
mov
cmp
sar
dec
addr16
or
jae
pop
out
inc
nop
or
jnp
push
loopne
and
call
sti
clc
pminsw
add
push
fsubr
bound
fisub
sub
xlat
sti
ud0
jae
out
(bad)
jmp
mov
std
sub
fs
jmp
(bad)
jg
push
push
jp
and
or
mov
inc
pop
and
std
add
mov
xchg
push
stc
pusha
movs
std
stos
sbb
out
arpl
jno
cmp
inc
cmc
call
enter
push
and
push
push
fmul
pushf
cmps
pop
pusha
sti
jg
(bad)
adc
xor
add
adc
rcr
jne
or
and
xor
inc
xchg
in
pop
mul
or
je
out
outs
push
adc
inc
call
mov
add
and
push
dec
push
pop
jo
jb
out
or
inc
cmp
push
shl
(bad)
sahf
cmp
mov
clc
push
jp
and
add
inc
jbe
dec
out
jae
xchg
add
pop
out
ror
adc
scas
mov
in
mov
(bad)
cmp
fcom
and
cmps
add
xlat
ja
mov
xchg
push
pop
push
adc
outs
sti
sub
jmp
push
arpl
outs
data16
(bad)
stos
int3
add
gs
pop
ret
out
repz
mov
push
jecxz
add
icebp
sub
ret
adc
lea
inc
add
jae
mov
xchg
mov
sub
push
mov
jo
scas
clc
mov
sti
outs
psllq
sbb
dec
push
jecxz
dec
and
call
sub
cld
out
push
inc
add
push
retf
push
cdq
inc
or
inc
sar
mov
loop
pop
sti
push
pop
add
out
fiadd
xor
add
add
push
inc
add
(bad)
pop
fist
cmp
fimul
jmp
mov
ficom
push
inc
dec
gs
inc
mov
push
mov
shr
arpl
push
jmp
inc
push
arpl
add
(bad)
sub
ror
jo
xor
sti
sbb
loope
dec
cmp
lahf
out
mov
std
push
adc
ret
add
das
mov
add
test
add
sub
mov
dec
xchg
outs
loop
sub
shufps
push
lahf
(bad)
aaa
push
sar
inc
sbb
cmc
inc
(bad)
call
hlt
(bad)
jnp
aas
lds
out
inc
js
add
push
mov
pop
mov
pusha
out
sub
push
aas
inc
cmp
jl
test
fdiv
cmp
or
mov
push
inc
aas
je
std
xchg
into
jecxz
arpl
lock
jae
into
js
(bad)
rcr
std
jae
add
ror
jg
out
xor
mov
mov
(bad)
or
std
ja
or
jmp
inc
jmp
sbb
add
mov
std
mov
stos
inc
pop
adc
mov
iret
in
or
add
mov
and
test
mov
retf
or
in
mov
(bad)
mov
push
add
push
icebp
ret
add
add
or
js
mov
pop
or
push
ret
rol
push
dec
je
and
imul
mov
xlat
stos
or
inc
std
retf
jae
pop
(bad)
int
lods
es
sahf
mov
pop
inc
jecxz
xor
imul
sub
pusha
xchg
mov
sti
mov
sbb
mov
pop
push
or
into
inc
ret
test
fs
cmp
out
addr16
call
jbe
and
push
std
pop
jmp
inc
loopne
or
dec
mov
pop
in
xchg
bound
push
call
mov
sub
jae
(bad)
in
inc
xchg
ds
addr16
mov
ss
and
pop
mov
shr
add
mov
(bad)
sbb
pop
add
jmp
clc
xor
xor
mov
xchg
inc
(bad)
(bad)
jmp
aaa
lea
out
xor
ret
inc
out
and
or
je
sbb
(bad)
(bad)
jmp
adc
pop
das
arpl
dec
pop
ficom
dec
jmp
jg
(bad)
xchg
push
xor
mov
jecxz
add
fld
gs
jo
push
(bad)
les
xchg
or
ret
movmskps
push
cli
jmp
fdivr
mov
pop
arpl
data16
(bad)
push
(bad)
(bad)
mov
pop
dec
out
retf
cmc
add
or
pop
push
cmp
xlat
cmpps
jmp
xor
test
xor
or
mov
dec
out
es
jae
clc
pop
imul
adc
push
out
mov
cmp
push
mov
inc
mov
add
inc
mov
cmp
inc
mov
xor
inc
outs
stos
jae
sbb
and
(bad)
pop
jg
mov
xor
inc
sbb
addr16
dec
push
inc
ret
movs
scas
outs
jg
dec
fiadd
inc
push
push
inc
hlt
inc
(bad)
fs
mov
sbb
inc
jb
iret
push
rcr
(bad)
mov
add
sahf
push
inc
sbb
out
add
cmp
neg
test
push
xor
inc
int3
icebp
test
xor
icebp
jle
test
ins
aas
or
sti
jg
mov
add
js
in
mov
pop
or
xchg
call
adc
pop
stos
xlat
bound
jae
sub
ss
inc
call
clc
sbb
retf
out
add
dec
sbb
hlt
in
dec
stos
and
pop
inc
or
pop
xchg
pop
dec
retf
out
push
out
or
push
add
and
lahf
aaa
dec
ret
rsm
mov
mov
(bad)
std
out
sub
repz
cmp
pusha
mov
jno
fild
ficom
sti
hlt
push
add
les
jmp
push
aas
jb
imul
mov
pop
cli
xor
lahf
push
mov
(bad)
xor
pop
add
jmp
inc
outs
add
shl
mov
push
add
cli
in
es
add
ret
add
inc
push
std
int
jg
fld
mov
inc
and
data16
test
push
sbb
stos
dec
test
or
ret
out
xchg
cmp
push
ret
es
and
clc
and
lods
jmp
or
or
stos
inc
add
fldcw
mov
sbb
mov
adc
pop
call
push
(bad)
fistp
data16
xor
pop
inc
mov
mov
pop
xchg
jbe
inc
jmp
jae
ret
mov
hlt
ret
into
std
sbb
(bad)
jg
not
or
movs
jg
xor
push
add
outs
test
dec
cli
add
es
nop
xchg
cli
push
jmp
loope
and
xor
jp
jg
add
mov
and
test
call
mov
xchg
pop
push
add
inc
or
inc
sti
xchg
inc
into
jae
mov
mov
(bad)
xchg
dec
js
call
mov
xor
pusha
jo
rcr
les
pop
pop
inc
mov
mov
cwde
bound
adc
ror
fisub
and
jmp
adc
pop
(bad)
mov
inc
dec
push
inc
mov
fisubr
or
xor
out
sbb
push
hlt
jmp
or
dec
dec
out
inc
xor
mov
mov
mov
pop
push
or
xlat
sub
jg
aaa
add
push
mov
clc
ret
dec
iret
xlat
ret
xchg
mov
repz
mov
inc
pop
add
fild
push
sub
xor
or
inc
add
jno
fild
lahf
xor
or
inc
pop
mov
adc
pop
out
ss
in
arpl
or
and
inc
xor
stos
push
or
lods
popw
mov
jg
mov
jb
jmp
es
cmp
add
(bad)
imul
xchg
dec
ja
jae
leave
add
loopne
inc
pop
mov
mov
adc
jmp
dec
imul
and
std
ja
sar
ret
add
add
test
adc
mov
pop
sar
mov
addr16
push
(bad)
jg
mov
(bad)
pop
or
add
mov
and
(bad)
fcomip
pop
jmp
xor
(bad)
scas
pop
and
mov
mov
aaa
dec
mov
imul
enter
xchg
inc
mov
out
sbb
cmps
(bad)
jge
and
pop
or
mov
fbstp
jbe
pusha
adc
jae
mov
test
test
mov
(bad)
div
nop
xor
push
ins
outs
mov
outs
xor
cmp
rcl
pop
inc
jl
adc
jle
adc
cmp
cmp
mov
adc
sti
mov
call
jae
inc
xchg
cs
into
(bad)
and
in
push
call
inc
xlat
out
pop
push
inc
mov
mov
(bad)
jmp
rol
iret
(bad)
adc
pusha
mov
inc
addr16
arpl
ins
fisub
call
inc
or
add
retf
xchg
pop
dec
in
fcom
adc
mov
call
js
adc
or
jmp
retf
call
mov
fisub
push
mov
pop
inc
sub
call
push
imul
mov
sbb
push
push
pop
fs
call
or
jno
pop
jae
sti
add
dec
call
push
sbb
fdiv
adc
mov
pop
jmp
call
and
sub
mov
(bad)
je
dec
iret
es
call
pop
rcl
xrelease
sub
into
mov
je
jae
std
pop
lock
test
or
inc
dec
enter
mov
mov
sbb
mov
ret
or
mul
or
sti
jl
or
dec
xor
xchg
xlat
sub
add
and
popa
mov
ror
fidiv
and
fwait
rol
(bad)
xor
mov
xor
cwde
inc
mov
jae
(bad)
in
lea
push
ret
cmp
inc
push
add
xchg
xor
inc
and
push
lea
pop
push
(bad)
mov
mov
sub
jp
out
inc
sub
lods
pop
ret
int3
test
aad
mov
pop
adc
or
adc
js
out
das
(bad)
cmp
mov
cmps
imul
mov
mov
enter
mov
pop
rcr
call
out
add
jmp
out
push
lds
jmp
adc
mov
sub
std
aas
push
out
jae
outs
add
mov
and
ret
jb
nop
mov
or
jg
mov
jmp
sub
pop
mov
movs
xchg
jg
fdivr
enter
pop
pmullw
je
(bad)
mov
cwde
push
mov
jg
xchg
jle
inc
ret
call
adc
test
out
sar
push
cmc
xor
jl
pop
stos
cld
or
pop
add
mov
test
mov
mov
lock
ret
cli
lods
stc
inc
inc
aas
pop
xor
push
xchg
js
dec
pusha
repz
icebp
push
addr16
pop
pop
pop
cld
outs
je
adc
jmp
call
ds
add
dec
push
push
mov
scas
and
dec
sub
idiv
cmp
push
inc
inc
sar
inc
loop
xchg
outs
or
pop
ret
arpl
inc
ins
arpl
mov
fwait
sar
and
mov
xchg
and
(bad)
xchg
call
inc
mov
das
sbb
pop
arpl
retf
add
aam
ret
outs
cwde
or
ins
(bad)
pop
add
(bad)
into
jecxz
jae
arpl
add
add
jo
retf
jbe
push
movq
inc
fbld
call
sub
mov
daa
cmp
cmp
neg
push
dec
or
ror
in
mov
sbb
call
iret
or
pop
and
jl
inc
inc
nop
ret
xor
xchg
xchg
retf
and
push
das
sub
imul
jmp
push
ds
cmp
imul
ror
dec
pcmpeqb
inc
popa
pop
push
rol
add
adc
sbb
and
mov
and
push
ret
add
jne
movs
(bad)
movs
aas
stos
or
out
jl
in
repz
ficomp
push
hlt
mov
jmp
aas
leave
dec
cld
sbb
inc
repnz
fdivr
jb
hlt
pop
mov
add
arpl
ja
xlat
je
jmp
mov
mov
arpl
inc
ret
jle
xlat
addr16
cmp
pop
xlat
add
out
sub
dec
inc
loope
test
and
mov
pop
jnp
lock
fwait
dec
pop
sti
add
cld
inc
loopne
out
add
repz
outs
clc
outs
fwait
dec
out
(bad)
sub
test
add
add
movs
mov
call
jmp
sub
mov
mov
test
inc
mov
lahf
jmp
iret
inc
ret
imul
lock
inc
ja
jecxz
sti
and
and
je
jg
icebp
mov
fiadd
int3
mov
cld
xchg
sbb
rcl
arpl
outs
cwde
dec
clc
xor
in
mov
jp
add
ret
(bad)
out
gs
push
mov
das
xchg
cmove
out
aaa
mov
outs
add
xor
adc
push
loopne
mov
dec
add
fxch
mov
fwait
jl
push
add
and
sbb
sbb
dec
mov
add
cmc
add
inc
lock
mov
adc
mov
cs
push
scas
js
inc
movs
and
cld
retf
cmp
ins
sub
ret
jg
mov
inc
(bad)
mov
add
inc
into
std
dec
div
adc
and
inc
rcr
dec
lahf
mov
pusha
push
adc
add
dec
ins
inc
(bad)
fs
sbb
jmp
sbb
outs
push
inc
add
jno
add
retf
mov
sub
mov
(bad)
sti
les
xchg
(bad)
push
je
add
movnti
aam
sub
sub
fidiv
in
and
retf
rol
call
pop
sub
xor
add
add
cmp
mov
and
lds
dec
inc
retf
inc
pop
add
mov
pop
pop
push
pop
pop
cwde
push
mov
dec
fmul
sti
fdiv
fdivr
ret
(bad)
inc
std
dec
mov
inc
jecxz
pop
outs
jp
pop
fidiv
inc
aaa
inc
push
pop
jo
pop
mov
jp
aas
xchg
push
add
cmp
ret
call
les
dec
fs
adc
sbb
out
movs
pop
aas
sub
mov
mov
push
inc
xor
stc
arpl
mov
push
inc
jbe
retf
mov
(bad)
inc
ret
and
std
sbb
out
pusha
data16
mov
dec
cld
adc
add
mov
sbb
sub
jno
mov
mov
cli
add
mov
add
dec
(bad)
aam
stos
push
ds
jno
inc
fadd
adc
sbb
pop
jp
pop
cmp
add
ret
outs
inc
mov
xor
pusha
fdiv
(bad)
jo
dec
xchg
aad
es
ja
add
lods
push
push
test
(bad)
out
xor
ror
(bad)
dec
(bad)
jl
mov
call
pop
pop
es
dec
push
inc
pop
aas
inc
stos
jl
mov
jae
arpl
cld
mov
movs
sbb
add
clc
sbb
(bad)
pop
xor
and
xchg
add
cmps
sub
push
mov
adc
test
pop
mov
mov
je
shr
dec
(bad)
push
jmp
or
sbb
aas
xor
repnz
js
push
cdq
push
sar
inc
sbb
loopne
dec
xor
xor
cmp
outs
shr
js
arpl
rcr
push
mov
lea
mov
cld
outs
inc
rcl
cwde
aas
js
inc
mov
jmp
pop
dec
call
in
add
mov
mov
fnsave
sbb
stos
(bad)
fst
add
mov
mov
mov
lods
inc
mov
inc
(bad)
mov
js
das
test
retf
mov
cli
repz
sub
push
pop
enter
ret
sti
mov
fwait
loop
jb
les
jp
bnd
idiv
jo
(bad)
xchg
mov
(bad)
cli
imul
add
ins
out
or
inc
in
rol
shl
xlat
and
iret
xor
sti
sti
sub
jmp
add
test
push
mov
inc
mov
repz
test
loopne
push
fs
and
xchg
jno
cmp
push
aaa
popa
aad
pop
adc
cmps
ss
fstp
std
stos
imul
xor
pop
dec
add
adc
jecxz
jmp
call
or
mov
dec
sub
idiv
jnp
sub
pop
loopne
cmp
push
pop
inc
mov
test
stos
jecxz
fld
iret
inc
(bad)
and
mov
xor
add
add
(bad)
pop
js
aad
test
ret
(bad)
cmp
pop
ret
sti
mov
rol
push
cli
and
(bad)
cmps
in
outs
dec
cmp
push
mov
jns
inc
push
inc
adc
sub
outs
and
jp
xlat
inc
sti
(bad)
ret
iret
cmc
out
jae
inc
ficom
xor
aas
xor
call
inc
xlat
mov
inc
(bad)
sub
pop
nop
xchg
pusha
js
sub
std
sub
jb
lock
add
scas
add
jl
add
ja
jg
sub
pop
cmps
push
fiadd
inc
sub
pop
(bad)
push
inc
enter
data16
add
std
push
outs
je
pop
aam
sbb
push
neg
sti
jle
mov
push
or
inc
aas
xor
mov
cs
pop
mov
outs
or
gs
xor
loop
int
fisubr
mov
das
push
fild
addr16
ins
mov
inc
les
cmp
jmp
loopne
(bad)
jmp
(bad)
mov
ins
pusha
bound
fs
ret
mov
xor
mov
adc
ins
dec
(bad)
ds
mov
(bad)
ins
fsub
outs
shl
movs
(bad)
data16
andps
add
push
mov
lahf
mov
mov
mov
push
xor
inc
pop
adc
adc
ds
sbb
(bad)
test
and
push
shr
call
(bad)
ins
out
or
inc
or
add
mov
push
std
pop
jne
hlt
push
shl
and
add
outs
and
jp
out
gs
shr
repz
or
push
add
jg
push
and
dec
mov
inc
inc
jae
add
push
jmp
sub
call
dec
adc
dec
adc
push
loop
push
xchg
cmp
inc
inc
add
pusha
mov
xchg
je
rol
mov
(bad)
xchg
movs
mov
sbb
push
inc
pop
imul
int
mov
outs
cmps
adc
jle
and
inc
adc
and
(bad)
aas
mov
out
dec
push
jmp
mov
cli
push
call
push
pop
push
add
dec
push
data16
jle
out
jbe
je
push
cmc
pop
(bad)
(bad)
push
inc
(bad)
(bad)
mov
pop
out
sar
inc
xor
mov
repz
ret
dec
aas
or
pop
add
ret
add
add
ret
imul
mov
pop
cli
sub
jl
mov
test
imul
stc
mov
pop
mov
out
xor
mov
ret
mov
sar
cmps
lahf
inc
push
ret
push
lds
jg
xor
mov
sar
arpl
and
daa
clc
push
add
jae
mov
jae
inc
outs
outs
pop
test
ins
neg
ja
call
(bad)
(bad)
cld
inc
(bad)
imul
je
adc
add
push
icebp
aaa
loop
sbb
dec
jmp
fmul
and
cld
sbb
loope
bound
and
push
pop
push
repnz
fst
inc
cmp
xor
outs
sub
rcr
and
cwde
jmp
or
add
inc
aam
add
adc
adc
inc
(bad)
mov
loopne
out
dec
out
push
pop
sbb
push
(bad)
call
test
or
add
fild
pop
inc
je
push
clc
cmps
or
mov
scas
xchg
pop
repnz
push
xchg
inc
(bad)
cmp
mov
and
mov
(bad)
and
push
sti
stos
xchg
fidiv
movsx
bound
xchg
push
lock
dec
mov
pop
out
(bad)
cs
adc
push
(bad)
xlat
(bad)
fdivr
lahf
xor
or
cs
cli
fcomip
retf
add
iret
out
aas
add
xor
inc
nop
stos
fldenv
gs
ret
out
pop
aaa
loopne
and
mov
inc
inc
mov
sbb
mov
fldcw
or
ret
loop
push
aaa
jmp
dec
scas
das
movnti
xchg
out
mov
fbld
aas
aaa
pop
call
retf
adc
cld
cmps
daa
call
scas
mov
jl
test
call
and
or
xor
inc
cld
adc
mov
pusha
lods
mov
add
and
shl
mov
mov
fld
mov
adc
push
scas
xor
ret
inc
aaa
jl
icebp
scas
je
mov
nop
imul
push
jae
les
ret
add
mov
add
mov
lds
pop
add
shl
push
les
shl
xor
push
ins
push
dec
mov
push
outs
adc
dec
pop
outs
pop
cld
add
inc
mov
scas
fiadd
call
int3
inc
dec
mov
push
aas
(bad)
pusha
fst
pop
inc
(bad)
dec
push
mov
jg
push
fwait
(bad)
(bad)
(bad)
mov
cmp
(bad)
sar
push
cmc
mov
pop
aas
jb
fs
jecxz
das
mov
pop
movs
ins
pop
jno
pop
or
aad
xor
jo
shr
and
aas
inc
pop
vmread
jmp
xor
sti
xchg
std
xor
mov
add
pop
mov
(bad)
outs
xchg
retf
fcmovb
call
pop
or
sub
xchg
add
fs
pushf
pop
dec
std
daa
push
aas
pop
dec
push
dec
dec
jne
outs
arpl
inc
out
fld
mov
add
add
cwde
fmul
push
fcmovb
mov
outs
ret
(bad)
cwde
xchg
sti
jmp
pop
out
jg
cwde
and
xchg
test
test
adc
pusha
inc
push
sub
jmp
dec
sbb
xchg
mov
xor
inc
adc
adc
scas
cli
and
daa
out
ins
sbb
push
inc
cld
jg
ins
lahf
(bad)
jecxz
pop
mov
mov
test
jecxz
dec
out
lods
mov
out
mov
(bad)
pop
add
dec
adc
out
mov
lea
push
or
jno
push
and
in
addr16
in
test
call
lahf
add
(bad)
mov
fsub
clc
mov
xor
and
daa
sar
add
arpl
mov
test
cmp
lahf
pop
mov
sti
mov
adc
push
jle
mov
test
fild
les
(bad)
sbb
or
inc
dec
dec
(bad)
pop
dec
mov
push
(bad)
jb
stc
sti
push
aam
sbb
shr
mov
ret
sbb
cli
pop
jb
in
xchg
je
cld
add
pushf
xor
(bad)
jg
out
push
test
push
or
cmp
mov
rcr
scas
fs
jmp
jle
dec
or
fxch
pop
inc
xor
aaa
jecxz
jae
stc
ret
push
or
shr
sub
repnz
mov
jg
push
jmp
aam
ret
not
cs
push
or
scas
xchg
out
pop
add
(bad)
mov
mov
inc
sti
mov
test
call
or
inc
aad
icebp
pop
push
out
sbb
sub
sub
shl
pop
ins
shl
cmp
dec
mov
push
ficom
pop
mov
sbb
mov
mov
mov
(bad)
bound
push
add
outs
jb
xor
add
idiv
sbb
shr
mov
jno
inc
pop
or
je
pop
jmp
jge
and
mov
or
sti
mov
dec
out
rol
push
aas
mov
(bad)
mov
fcom
out
clc
(bad)
jae
fcomip
ret
xor
fs
cmp
mov
mov
mov
and
bound
add
jo
(bad)
adc
(bad)
ret
pop
inc
mov
(bad)
jmp
xchg
inc
test
or
jg
inc
or
mov
add
cld
add
sub
mov
test
loopne
rol
sub
xor
std
xchg
pop
pusha
test
imul
jmp
inc
jecxz
(bad)
mov
cmp
ret
and
mul
pop
jno
sub
inc
sbb
sbb
movs
fwait
(bad)
jmp
sti
fld
or
sub
pop
inc
mov
inc
outs
fisub
cmp
mov
lods
js
pop
dec
pop
test
pop
gs
fidiv
aaa
cld
(bad)
sti
enter
(bad)
fistp
pop
jmp
sbb
push
push
add
(bad)
cli
(bad)
cmp
push
(bad)
mov
jae
ret
call
add
add
(bad)
call
pop
mov
rol
mov
push
(bad)
call
inc
shl
cmp
sti
mov
ins
out
adc
inc
aad
jo
pop
ror
dec
jl
lock
ins
pop
or
adc
mov
xor
aas
imul
out
(bad)
inc
push
inc
pop
test
inc
shl
call
and
std
(bad)
imul
push
add
push
sti
mov
hlt
dec
in
clc
push
cmps
fidiv
dec
jmp
iret
xor
cli
addr16
adc
sbb
(bad)
jp
jge
(bad)
inc
std
mov
test
jg
clc
inc
imul
test
xor
push
ficom
mov
movs
pop
push
sub
retf
mov
dec
rol
xlat
call
sbb
(bad)
into
jp
dec
jb
mov
arpl
mov
jp
and
mov
dec
imul
sti
push
fisub
xor
pop
sbb
pusha
in
fbld
sbb
ficomp
out
mov
mov
das
cmp
je
ret
inc
jae
pop
cmps
mov
jmp
ret
add
dec
add
jb
jecxz
pop
and
cvtps2pd
push
adc
dec
retf
jae
inc
std
dec
mov
das
jmp
dec
mov
push
mov
xor
ds
inc
push
add
push
dec
push
test
out
pop
ret
pop
cli
outs
jo
lods
sub
ins
inc
jbe
push
in
inc
sub
pop
xchg
int
and
add
pop
mov
je
stos
jge
xchg
adc
ret
outs
jmp
mov
cs
aad
jmp
push
repz
pop
dec
mov
movs
das
pushaw
xor
push
lock
gs
add
mov
mov
push
cmps
ss
and
jno
mov
pop
pop
mov
addr16
adc
xchg
xor
out
adc
pusha
test
(bad)
aaa
jge
inc
dec
ins
jg
add
out
jae
inc
pop
mov
lods
xor
pop
movs
mov
mov
in
add
add
mov
cmp
sbb
sub
and
fcmovu
ret
inc
add
leave
hlt
stos
sub
sti
imul
xor
inc
push
mov
sbb
inc
sti
add
addr16
mov
mov
pusha
ja
sahf
xor
dec
lahf
add
jmp
mov
mov
out
mov
shr
sub
sbb
push
ret
xor
push
and
cmp
test
push
cld
call
retf
jge
call
(bad)
sbb
inc
aas
or
arpl
xor
aas
retf
inc
lds
xchg
mov
dec
std
push
enter
inc
(bad)
xchg
add
cmp
add
inc
xlat
dec
cld
aam
rol
dec
add
(bad)
out
aas
jp
aas
pop
sbb
mov
retf
lods
inc
cld
pop
mov
aas
(bad)
sbb
fistp
inc
add
test
inc
mov
std
(bad)
std
jbe
sub
hlt
movs
adc
add
aad
add
aaa
pop
xchg
bound
cs
add
adc
mov
mov
(bad)
xchg
and
inc
mov
(bad)
jae
jnp
or
dec
mov
and
jl
(bad)
jmp
call
fiadd
pop
pop
cmc
(bad)
pusha
jb
addr16
aas
jg
icebp
sbb
neg
add
add
ret
inc
dec
mul
push
inc
(bad)
addr16
sub
sar
push
add
pop
mov
cli
cs
dec
jecxz
lods
jecxz
push
clc
jbe
js
jg
mov
mov
or
(bad)
sbb
out
sbb
ror
in
fucomi
scas
repnz
imul
out
and
pop
jb
dec
mov
pop
pop
adc
pop
out
pop
and
dec
pop
or
in
push
(bad)
out
pop
sti
ret
std
ja
ret
pop
stc
out
inc
(bad)
mov
ins
dec
jg
outs
scas
outs
push
scas
sbb
mov
mov
and
jecxz
imul
(bad)
(bad)
call
jp
inc
mov
mov
push
mov
div
pop
mov
mov
xchg
mov
repz
adc
movs
push
xor
(bad)
icebp
push
and
dec
push
mov
adc
jecxz
adc
fs
ror
cmp
fist
out
jns
sub
push
mov
(bad)
adc
sbb
loopne
mov
imul
ret
mov
mov
(bad)
repz
bnd
mov
push
in
call
push
pop
mov
mov
mov
frstor
and
dec
hlt
hlt
aad
and
fwait
pop
or
mov
and
(bad)
aaa
icebp
call
mov
push
call
inc
sub
mov
inc
cvtpi2ps
add
pop
test
cmp
push
(bad)
cmp
loop
adc
std
inc
xlat
xchg
mov
and
pop
or
xchg
fist
adc
test
xchg
aas
cmc
cmc
add
das
idiv
pop
xor
nop
imul
add
mov
cld
inc
(bad)
(bad)
adc
xchg
aas
addr16
add
add
mov
hlt
rcl
aad
fsubr
inc
push
dec
inc
and
push
es
(bad)
ficomp
aam
pop
adc
cld
sub
inc
push
sbb
stos
cs
dec
inc
pop
push
idiv
jl
jmp
cmp
xor
mov
sub
call
xchg
add
or
mov
jecxz
or
sub
mov
in
(bad)
jmp
add
adc
cmp
in
mov
jbe
mov
or
dec
pop
sub
bound
add
inc
adc
jle
lods
xor
(bad)
(bad)
or
arpl
aad
mov
add
clc
in
mov
daa
aam
sar
retf
add
or
xchg
out
rcr
cmp
or
test
push
clc
mov
pushf
mov
gs
jecxz
dec
ins
sbb
mov
loopne
mov
mov
push
cld
aas
outs
rcl
sar
jae
mov
(bad)
pop
icebp
sbb
cmp
mov
pop
pop
rol
mov
inc
mov
or
push
or
test
inc
repz
mov
ja
mov
jmp
out
retf
(bad)
fcmovbe
dec
push
pcmpgtd
pop
ret
outs
fwait
retf
mov
and
out
push
mov
jmp
add
jae
mov
and
adc
push
ss
jae
or
jg
jmp
js
sub
into
mov
cmp
sub
add
call
or
jae
adc
or
mov
inc
mov
inc
xchg
cmc
scas
icebp
call
popa
ret
adc
stc
add
sub
jmp
mov
ret
add
je
jbe
(bad)
dec
je
jg
dec
dec
push
ret
ins
push
sub
test
jge
mov
and
push
sbb
cwde
inc
dec
pop
test
jle
mov
and
mov
inc
sar
loopne
or
sbb
sti
xor
push
shr
xchg
dec
adc
int3
xor
add
ds
mov
push
push
mov
out
dec
pop
inc
mov
shl
inc
push
push
push
dec
add
sti
or
xor
ret
inc
je
cmp
aas
movs
mov
pop
mov
ins
xchg
mov
ret
out
jb
ret
inc
jmp
ds
mov
pxor
xor
js
shl
inc
push
(bad)
jl
(bad)
push
jp
ja
dec
pop
xor
out
mov
out
dec
(bad)
arpl
fcomp
xchg
push
sti
cld
pop
add
mov
ret
sysret
ror
inc
add
jecxz
das
fsub
js
(bad)
adc
mov
pop
aad
xor
sub
int3
in
sub
sbb
mov
neg
dec
inc
pop
inc
cmp
stos
dec
push
imul
jae
icebp
call
js
inc
pop
gs
pop
or
mov
jle
pushf
add
icebp
sub
or
push
pop
repnz
push
xor
inc
call
ja
mov
call
pusha
push
ror
dec
mov
ret
scas
fs
jb
ret
sub
je
dec
sti
pop
sub
pop
int3
(bad)
sub
xor
cmp
cli
dec
jmp
js
mov
fs
jg
inc
inc
(bad)
xor
push
mov
add
inc
inc
and
mov
ins
test
mov
in
pop
std
call
jle
std
aam
add
test
(bad)
fs
jmp
jmp
jno
mov
enter
push
ins
xor
push
sbb
or
in
jmp
mov
and
pop
loop
mov
jg
inc
sti
ret
(bad)
out
sub
mov
jnp
lds
inc
mov
add
fs
aas
aas
pop
sub
mov
fwait
cmp
pop
add
sbb
pop
dec
adc
jg
jg
fcos
inc
xchg
test
lock
cli
pop
push
cli
mov
xor
repz
ret
xor
or
sbb
cmp
idiv
test
je
mov
(bad)
rcr
mov
jo
rcl
cld
add
inc
mov
push
inc
push
xor
or
pushf
cmp
push
pop
sub
fild
pop
stos
lds
ret
int3
mov
fadd
fisttp
pusha
xlat
test
or
jmp
bound
jb
out
mov
fdivrp
(bad)
mov
dec
adc
sti
jmp
call
push
std
test
mov
fsubr
add
mov
inc
fist
inc
out
cmp
pop
div
add
popf
jp
cli
add
das
stos
cmp
cld
and
inc
sar
add
inc
test
cmp
and
push
dec
js
cmp
or
jl
or
inc
mov
(bad)
sti
imul
push
and
mov
mov
sbb
pop
jl
and
sti
push
out
cmp
(bad)
rol
fadd
lahf
ret
(bad)
fild
cs
sub
outs
aad
imul
jg
push
mov
(bad)
out
pop
cmovb
out
pop
mov
popf
test
inc
jmp
ja
inc
jg
pop
push
mov
outs
outs
jae
add
(bad)
aad
push
mov
xor
aam
adc
xchg
mov
std
outs
add
or
push
out
inc
cld
pop
sar
(bad)
cmp
dec
dec
fstp
push
outs
or
ret
mov
rcl
out
cli
sub
inc
xor
das
mov
and
fwait
(bad)
push
aas
and
mov
push
cmc
cmp
jae
test
retf
idiv
and
sbb
mov
mov
mov
cmp
repnz
data16
fs
inc
aad
rcr
imul
scas
push
push
imul
pop
cli
mov
jmp
mov
scas
sbb
add
add
(bad)
cmps
pop
call
das
mov
push
mov
add
ror
daa
in
int3
(bad)
jmp
inc
fist
ins
add
aaa
mov
fimul
dec
mov
dec
mov
addr16
pop
lock
dec
xchg
pop
mov
jae
das
cli
and
pop
loopne
push
xor
pop
ret
and
mov
lock
xor
sbb
jo
aas
rol
pop
add
mov
add
out
pop
rcl
or
mov
jle
add
dec
mov
add
dec
adc
adc
repnz
jg
icebp
adc
(bad)
push
cmp
and
loop
xchg
pop
and
or
mov
jae
inc
add
xor
inc
push
std
das
or
add
dec
inc
jl
out
inc
pop
or
add
cmps
sbb
fwait
mov
cwde
sar
das
icebp
icebp
sub
call
mov
mov
mov
add
ja
cld
push
pop
xor
inc
(bad)
mov
dec
pop
cmp
pminsw
shl
mov
push
dec
icebp
fcmovb
adc
shl
movs
or
inc
pop
out
cmp
fwait
sub
xchg
std
test
or
sti
mov
inc
adc
mov
jl
ficom
jge
mov
out
pop
int3
mov
xlat
inc
dec
mov
jae
inc
mov
dec
mov
push
fsubp
retf
push
inc
cli
inc
xlat
pop
mov
sbb
jne
jmp
cld
mov
das
das
pop
dec
sub
mov
out
xor
pop
js
(bad)
out
std
push
test
jb
sub
or
inc
push
aas
rep
loop
fst
imul
push
jl
mov
scas
(bad)
pop
push
rcl
pop
or
sub
add
push
push
sub
jecxz
das
clc
call
sbb
or
arpl
cmp
mov
mov
hlt
sbb
rol
fistp
add
xchg
neg
std
ins
(bad)
cmp
inc
dec
(bad)
mov
outs
jo
ds
xor
das
or
(bad)
pop
pop
mov
and
pusha
xchg
or
into
fdiv
add
aas
or
fist
or
mov
jle
push
jne
inc
out
stc
lahf
retf
cmps
inc
arpl
mov
outs
data16
das
push
jae
and
pop
pop
(bad)
jg
lock
aas
pop
cmp
jb
add
je
iret
aaa
xor
pop
mov
push
in
xchg
push
or
ret
add
sti
inc
sahf
adc
pop
jbe
pop
call
prefetch
pause
jb
pop
jbe
sahf
inc
out
adc
call
add
(bad)
fiadd
adc
aaa
test
icebp
and
sbb
(bad)
inc
mov
je
xlat
and
xchg
inc
imul
out
arpl
sar
ret
aaa
sbb
ret
pop
add
test
sti
inc
movs
loop
pushf
xor
or
je
inc
test
fsubr
push
dec
add
jmp
and
(bad)
in
fldcw
xor
adc
pop
fild
jecxz
jno
push
cmc
out
outs
jg
call
add
adc
mul
les
mov
lahf
xor
cmp
dec
push
add
pop
inc
ja
sbb
test
push
add
mov
div
div
sub
fs
idiv
bound
push
pop
mov
or
mov
mov
dec
xlat
mov
inc
inc
dec
arpl
or
add
inc
sar
inc
push
inc
ret
scas
jmp
lds
jmp
push
(bad)
xchg
cmp
(bad)
in
ret
test
sub
rol
mov
(bad)
rol
fst
cdq
inc
mov
add
add
adc
push
call
inc
pop
lds
sbb
push
jae
inc
aas
sbb
imul
xchg
sub
push
jae
jge
pop
cmc
pop
adc
aad
add
jmp
add
inc
rdpmc
gs
push
push
pop
jl
fist
jae
add
cmc
mov
rcr
mov
out
mov
outs
mov
jae
(bad)
xor
sbb
xor
inc
xor
imul
push
mov
clc
sub
push
mov
cli
adc
mov
cmp
neg
clc
das
xor
inc
lahf
dec
inc
icebp
in
mov
aaa
xchg
stos
lock
push
out
ret
jae
cmp
fadd
inc
(bad)
xor
aas
jle
add
push
or
jmp
jae
pop
cmp
cmps
push
mov
cld
loopne
xor
(bad)
pop
inc
mov
inc
xchg
add
lock
(bad)
mov
pop
push
call
push
add
sbb
clc
shl
xor
enter
or
pop
inc
(bad)
cld
xchg
std
rcr
sar
mov
loop
push
pop
mov
push
imul
shl
je
aas
in
addr16
dec
shl
clc
fimul
mov
mov
ret
arpl
mov
or
add
fs
pop
lahf
dec
pop
cmc
mov
icebp
aaa
jp
inc
cli
push
push
xor
pop
sub
mov
inc
cmc
addr16
mov
or
add
push
adc
add
cli
(bad)
cdq
adc
(bad)
pop
jecxz
inc
fsin
mov
cld
fsub
addr16
out
inc
mov
out
jmp
addr16
push
inc
and
xor
test
mov
out
out
js
jp
cld
pop
addr16
xchg
test
cmp
sti
ret
push
xchg
mov
mov
pop
push
ins
fidivr
mov
out
jae
add
sbb
scas
jbe
push
mov
mov
add
mov
dec
push
jae
inc
sti
sub
add
add
sti
je
addr16
ja
inc
jg
mov
ret
inc
shr
xlat
or
outs
mov
mov
mov
retf
ret
sti
outs
adc
jne
mov
jae
es
aas
inc
and
pusha
aas
inc
add
hlt
add
outs
jmp
inc
adc
xor
imul
jmp
(bad)
test
push
push
es
idiv
dec
fistp
or
and
inc
loop
sub
mov
sub
sub
call
ja
jnp
(bad)
out
cli
ret
adc
or
dec
xchg
add
cmp
not
sbb
ins
fs
call
loopne
icebp
add
ins
pop
mov
xor
dec
add
pop
lock
addr16
push
pop
or
sti
movs
push
push
repz
call
mov
hlt
inc
lahf
mov
pop
jg
icebp
retf
mov
out
inc
mov
mov
pop
dec
or
test
(bad)
jmp
cmps
add
callw
push
retf
mov
and
jmp
xor
jbe
sub
cmp
mov
jle
gs
lsl
jl
enter
sti
in
adc
imul
jg
jl
outs
push
and
enterw
ret
jmp
ret
pop
and
fdiv
or
add
pushf
or
fild
adc
inc
(bad)
mov
dec
(bad)
cli
and
push
xor
dec
xor
jl
jmp
inc
adc
ret
clc
imul
call
sbb
inc
(bad)
jg
and
dec
inc
arpl
xchg
and
ins
and
mov
adc
push
sbb
(bad)
jmp
mov
rol
add
and
in
daa
test
loop
mov
mov
xchg
lock
lea
push
inc
mov
ret
stc
push
gs
adc
rcl
data16
inc
into
jmp
test
imul
push
dec
fs
lock
fcom
dec
xchg
pop
dec
fst
mov
jg
add
add
mov
xchg
jecxz
shl
jmp
arpl
xor
(bad)
mov
sbb
mov
push
sub
sar
add
mov
pop
(bad)
pop
inc
jnp
push
pop
push
mov
inc
enter
add
jb
sti
jecxz
sti
repz
mov
and
out
add
aaa
mov
inc
loopne
outs
pop
and
or
mov
push
mov
pop
outs
(bad)
inc
stc
sub
inc
js
mov
xor
call
sbb
fiadd
xor
movs
shl
pop
xchg
and
rcr
rol
inc
cli
call
out
add
adc
cmc
add
jg
mov
add
push
mov
jae
push
out
repz
add
icebp
iret
inc
fwait
(bad)
out
imul
mov
and
mov
add
dec
and
in
inc
shl
pop
mov
iret
xchg
pusha
mov
and
inc
(bad)
xor
dec
mov
inc
jp
fcom
add
(bad)
outs
inc
pop
jl
data16
dec
das
inc
and
ds
xchg
rcr
add
lods
test
pusha
add
inc
arpl
cwde
mov
lock
in
sar
jp
jmp
imul
repz
mov
cwde
(bad)
or
add
pop
ja
or
mov
fdivr
std
adc
lods
mov
out
mov
push
mov
mov
sbb
enter
pop
cmc
pop
dec
pusha
fcomi
mov
mov
sbb
hlt
aas
out
scas
push
pushf
enter
fwait
test
xchg
dec
push
mov
push
mov
cmps
and
jp
dec
sbb
inc
clc
sbb
xor
sbb
sub
mov
sub
mov
addr16
rcl
scas
mov
push
inc
inc
ret
dec
adc
mov
jg
add
addr16
jmp
int
inc
std
neg
sbb
sti
outs
pop
test
xor
mov
stc
cmp
pusha
mov
cld
cmp
mov
fld
test
ud2
aad
xor
test
mov
inc
push
jg
adc
mov
jns
jmp
inc
lds
mov
mov
(bad)
out
pop
push
cmc
sbb
inc
outs
sbb
mov
sti
std
das
aas
jg
push
aas
sbb
inc
mov
push
mov
push
xor
fwait
xor
mov
or
push
mov
jmp
mov
repz
pop
jbe
or
xchg
cli
mov
inc
add
xor
add
mov
mov
sub
rdmsr
fsubr
xor
cs
or
(bad)
mov
jae
jmp
test
mov
call
cmc
(bad)
mov
pop
cdq
push
arpl
add
sbb
xchg
les
cmps
clc
sub
hlt
out
rcr
les
add
repnz
adc
or
loop
stos
xlat
mov
call
inc
jb
jae
das
stos
je
sbb
xor
and
jae
pop
jge
out
pop
test
pop
dec
inc
xor
pusha
out
mov
(bad)
aas
dec
scas
js
mov
mov
push
pop
clc
fs
nop
in
add
push
fadd
and
out
shl
aas
js
cli
inc
rol
add
mov
fdivrp
(bad)
ret
(bad)
pop
mov
cmp
pop
adc
or
enter
or
inc
mov
mov
cli
scas
add
in
xor
push
jae
pop
adc
inc
sub
(bad)
jl
inc
push
ins
xor
inc
sbb
in
fistp
add
and
xchg
scas
repnz
pop
out
js
pop
stc
push
je
add
pop
sti
xlat
inc
pop
push
clc
(bad)
lods
jae
pop
push
jne
pop
inc
call
mov
inc
mov
sar
adc
imul
mov
jb
bound
test
lahf
vpshufhw
sar
fild
cmp
(bad)
cmp
stos
aas
es
add
stos
xor
add
inc
sti
pop
test
gs
push
pop
pop
xor
dec
leave
fnstcw
jle
xor
sbb
aad
inc
shl
(bad)
popa
out
mov
inc
adc
outs
lods
js
ret
call
je
adc
pop
stc
popw
(bad)
aas
mov
jle
inc
mov
inc
push
mov
inc
or
adc
dec
inc
icebp
mov
dec
test
bound
jg
cli
faddp
cmc
jecxz
pop
dec
inc
in
clc
mov
jno
push
jle
lock
cwde
xchg
pop
cmp
das
add
inc
add
inc
cmp
mov
inc
ins
mov
imul
or
test
in
jle
push
adc
pop
add
std
jmp
sub
clc
in
std
clc
ins
push
(bad)
xchg
dec
push
rol
rcr
ret
test
cmp
pop
jno
and
dec
push
adc
fistp
test
std
stos
pusha
mov
call
ins
mov
mov
ins
inc
js
pop
and
psubq
add
mov
dec
ret
push
push
sbb
dec
mov
sti
call
mov
jg
or
rcr
add
adc
out
mov
inc
add
xor
jo
dec
rol
pop
in
inc
pop
sbb
sub
pop
cmp
mov
mov
(bad)
push
push
ret
sbb
movs
mov
mov
pusha
add
std
inc
std
jmp
outs
(bad)
xchg
inc
das
push
pop
dec
add
std
mov
ret
lock
xchg
inc
pop
inc
adc
xlat
mov
ret
pop
outs
out
imul
or
call
mov
or
faddp
jno
or
xor
xor
dec
ins
loopne
fld
push
mov
mov
sbb
cmps
push
loopne
pusha
dec
jns
jg
add
lock
fist
rcl
mov
addr16
(bad)
fisttp
lods
pop
jmp
mov
xlat
shr
mov
or
add
sar
out
push
lahf
aaa
jl
adc
xchg
push
and
mov
jmp
imul
inc
les
dec
fs
inc
lahf
(bad)
jg
push
add
mov
fs
add
inc
inc
adc
jp
sti
mov
jmp
and
cmp
addr16
out
push
pop
lds
mov
arpl
ffreep
mov
mov
jl
add
div
xor
outs
fisubr
ficomp
mov
xor
inc
sub
mov
or
cld
out
ret
div
fdivr
dec
cld
mov
mov
add
popw
cmp
or
xchg
fld
pop
and
adc
cld
cmc
pop
or
dec
inc
mov
dec
sub
pop
pop
mov
sbb
popa
pop
jo
sub
xor
out
fld
ins
pop
call
test
fisub
dec
xlat
sub
jns
inc
inc
lock
hlt
xor
nop
pop
jno
rcl
xchg
add
lock
inc
cmp
xor
add
add
out
mov
pop
outs
cld
jmp
sti
ins
ficom
call
mov
shl
adc
and
ds
inc
ret
jp
inc
mov
inc
push
mov
sti
inc
xchg
push
add
jae
add
jo
loopne
or
or
mov
inc
add
fmul
sbb
stos
inc
and
(bad)
pop
cmps
cli
xor
and
mov
out
add
gs
in
(bad)
sub
int
(bad)
push
ret
adc
xchg
inc
sti
les
xor
(bad)
mov
ror
cmps
adc
jae
lds
inc
addr16
std
bound
imul
leave
add
push
or
sbb
inc
pop
push
jnp
pcmpeqb
and
mov
mov
xor
inc
jmp
sti
addr16
and
fdivr
ss
movs
lds
call
sub
mov
mov
adc
xor
jmp
in
push
(bad)
mov
inc
(bad)
push
test
(bad)
jmp
out
add
add
outs
(bad)
addr16
push
mov
std
adc
out
sbb
out
push
sub
fcomi
jg
mov
xor
xor
popf
jecxz
out
xchg
js
rol
cmp
clc
(bad)
aaa
push
(bad)
lock
clc
test
mov
adc
jg
ret
syscall
fist
fwait
lahf
fs
mov
pop
inc
ror
test
sahf
sub
(bad)
mov
inc
jmp
xor
pop
cmp
inc
test
(bad)
and
and
or
mov
pop
mov
loop
call
int
data16
cld
rol
mov
jmp
xchg
mov
inc
dec
or
sti
call
mov
scas
and
je
fisub
call
add
lods
or
ret
shl
cmps
inc
call
push
int3
sub
mov
xor
into
scas
mov
ret
add
add
push
adc
js
dec
aas
std
outs
mov
jl
and
outs
je
jl
sldt
je
fistp
(bad)
mov
cmp
pop
jae
and
lds
push
push
mov
adc
add
les
xchg
jmp
test
jl
push
dec
dec
je
out
mov
mov
lea
jle
inc
gs
push
inc
mov
das
(bad)
out
pop
imul
mov
out
aas
sti
pop
dec
(bad)
jmp
xchg
dec
pop
push
adc
aam
cld
fs
xchg
(bad)
cmp
jl
adc
sub
clc
das
sti
(bad)
jae
adc
mov
je
xchg
adc
or
mov
addr16
push
xor
ret
pusha
mov
jg
cmc
test
inc
mov
aad
or
adc
data16
lock
pop
test
cs
add
scas
push
inc
dec
push
lds
push
xor
adc
mov
out
loopne
out
xor
mov
xchg
xor
mov
add
pusha
dec
dec
bound
int
jle
mov
das
xlat
jnp
fwait
bound
loopne
clc
leave
mov
pop
mov
mov
fild
mov
dec
and
cld
out
ror
pop
lods
push
xor
push
iret
js
ret
adc
inc
xlat
dec
in
ds
(bad)
imul
std
dec
cmp
or
mov
jne
pop
(bad)
je
test
add
pop
mov
lock
mov
rcl
scas
js
xor
gs
inc
cwde
xor
aad
ret
call
inc
sti
jmp
add
mov
cmp
inc
push
mov
adc
call
mov
(bad)
jg
xchg
scas
pop
call
xor
in
std
or
ret
push
add
pop
inc
xor
mov
inc
je
mov
loopne
mov
mov
or
push
add
sub
dec
adc
cmp
fimul
inc
pop
pop
add
lds
inc
inc
out
cmp
pop
bswap
mov
push
out
jle
fimul
ret
xor
imul
std
cmp
lahf
jb
xlat
or
and
(bad)
mov
mov
in
test
adc
jo
mov
int3
fisubr
outs
push
(bad)
fiadd
aam
inc
mov
ret
into
push
retf
in
push
aam
mov
enter
add
push
cmp
xor
pop
add
jne
jmp
ret
imul
jno
not
or
addr16
pop
and
dec
mov
mov
mov
sbb
jle
push
outs
cli
ret
mov
adc
std
mov
jge
push
jae
push
adc
mov
out
add
scas
push
push
clc
mov
gs
mov
inc
int3
or
(bad)
sbb
cmp
out
lds
xor
push
std
xor
ret
sar
dec
mov
mov
jmp
std
imul
mov
test
add
pop
arpl
(bad)
ja
jg
test
mov
sub
mov
aas
ror
xor
add
(bad)
in
inc
je
ja
aas
xchg
dec
jg
add
jb
push
std
inc
ret
pop
call
arpl
push
test
add
jmp
int3
or
jo
test
(bad)
lods
mov
mov
mov
sub
ins
fcomip
ja
ins
cmc
dec
inc
inc
std
arpl
mov
addr16
mov
enter
pop
inc
pop
push
adc
add
push
inc
ret
hlt
das
cmp
std
add
hlt
inc
dec
inc
xchg
inc
push
hlt
bound
pop
(bad)
dec
jp
pop
add
and
mov
dec
cmp
push
jmp
enter
xlat
add
icebp
pop
mov
outs
push
inc
(bad)
push
mov
les
aas
outs
add
mov
sub
fnstcw
xlat
arpl
loope
push
push
mov
lahf
jae
cmp
mov
call
push
pushf
test
jmp
scas
inc
neg
js
mov
inc
fsubr
retf
(bad)
lahf
jo
pop
mov
aas
das
mov
test
mov
push
mov
mov
inc
push
cdq
or
(bad)
inc
xor
(bad)
jnp
sti
dec
and
add
ret
ss
mov
mov
add
mov
adc
fidivr
in
jle
(bad)
add
pop
mov
sub
cmp
sbb
mov
neg
fstp
jl
lock
or
ret
push
pop
inc
add
mov
inc
cld
test
inc
sbb
rol
popa
aaa
test
or
cld
cmp
dec
inc
div
dec
test
fisttp
loopne
or
mov
jmp
clc
sub
xor
inc
jg
adc
jae
imul
fadd
ins
push
xchg
loop
pop
cmp
dec
div
pop
rol
jg
inc
mov
add
mov
test
push
arpl
sti
adc
mov
mov
dec
mov
out
pop
cwde
mov
mul
or
mov
cmc
add
jae
rcr
push
fdivr
xlat
clc
mov
mov
sbb
std
adc
dec
jmp
fisub
lods
mov
int
(bad)
and
inc
xchg
pop
fcom
ins
pusha
(bad)
ficom
cmp
(bad)
mov
push
push
rol
adc
push
sub
vpsubd
pop
or
inc
push
mov
add
mov
cmc
sbb
(bad)
ins
push
mov
(bad)
mov
in
imul
nop
rol
adc
sti
or
outs
jle
mov
jae
fdivr
add
test
fcomp
or
and
inc
pop
push
mov
pop
xchg
jae
inc
push
lods
cmp
push
sti
ins
mov
js
cmps
fwait
or
arpl
dec
test
outs
push
out
ins
je
loopne
jg
fisttp
sbb
push
inc
xor
sar
inc
pop
out
cmp
add
dec
ins
or
jecxz
mov
jp
cs
push
aaa
mov
call
mov
pop
dec
mov
loopne
pusha
jae
jae
pop
cmps
xor
es
dec
cmp
xchg
cmps
out
fucomp
mov
sbb
push
cmp
jg
call
pop
sbb
imul
adc
mov
(bad)
pop
(bad)
mov
cmp
jl
or
mov
xchg
aaa
adc
pop
loopne
xchg
les
iret
dec
inc
pop
push
push
xor
dec
sti
jmp
pop
pop
inc
xor
jnp
cmp
pop
dec
addr16
add
xor
push
(bad)
std
in
or
and
mov
int
jmp
fadd
out
push
in
in
push
push
add
xor
ds
arpl
ins
js
cmc
pop
into
sti
inc
or
stos
jp
mov
test
mul
ret
ficom
test
cmp
pop
or
aam
aad
mov
js
loopne
dec
mov
push
and
and
adc
xor
jg
mov
adc
add
ret
mov
(bad)
aas
pop
jbe
push
out
mov
int3
inc
dec
je
(bad)
and
out
aad
mov
stos
pop
not
push
mov
cli
jmp
std
cdq
(bad)
sbb
fwait
push
push
adc
fs
inc
pop
lods
loope
cmp
inc
jno
int
ret
(bad)
push
dec
fist
jbe
pop
mov
push
xchg
pop
out
inc
dec
test
jmp
aaa
cmp
jo
ficom
pop
(bad)
je
out
cmps
or
int3
mov
inc
movs
bound
aas
pushf
xchg
mov
pop
mov
cmc
das
and
sub
mov
inc
mov
mov
sub
or
push
dec
lods
xlat
das
ss
call
test
daa
jno
inc
(bad)
jmp
sbb
cmc
add
mov
and
xor
cli
jae
pushf
and
ret
push
cld
(bad)
stc
pop
mov
mov
jae
inc
ret
out
inc
imul
mov
inc
out
sub
push
sub
int
add
jo
adc
(bad)
cmp
js
fist
dec
movs
out
jbe
or
inc
add
jl
enter
cmps
xor
inc
clc
adc
test
or
(bad)
in
jmp
stos
stos
pop
mul
mov
call
icebp
(bad)
aas
adc
cmp
push
ret
pop
arpl
ja
and
pop
ret
pop
movs
pop
fst
pop
lock
push
cmp
cmp
mov
pop
mov
push
push
push
call
xchg
lock
jmp
test
sub
call
jne
jge
mov
arpl
inc
idiv
cmp
lods
rol
jne
ret
pop
mov
fs
out
psllq
cli
push
pop
mov
dec
mov
adc
mov
je
xchg
sbb
jl
out
aam
inc
inc
push
sbb
and
sub
jl
pop
adc
push
cld
add
inc
or
fs
dec
sub
pop
mov
dec
pop
scas
cld
gs
mov
push
or
js
push
add
jb
stos
or
ret
clc
jmp
std
xor
inc
inc
jge
add
and
movs
aas
fiadd
inc
add
cmp
fcmovnu
add
sti
je
or
pop
repz
jno
lods
retf
shl
scas
dec
mov
inc
inc
mov
stos
mov
dec
pop
ret
sub
sahf
call
call
mov
dec
lds
ret
arpl
cli
inc
lods
clc
mov
ret
sub
loope
adc
(bad)
outs
push
mov
test
sti
inc
idiv
add
rcr
and
xor
lahf
push
call
dec
mul
xlat
add
je
aas
femms
xlat
pop
pop
out
inc
aad
push
fnstcw
ret
scas
adc
pop
or
int3
pop
lods
sub
outs
call
call
pusha
dec
ret
pop
push
out
adc
sbb
push
cmp
out
repz
push
push
xor
mov
mov
xor
xchg
mov
push
jg
(bad)
out
inc
jmp
dec
dec
adc
mov
pop
inc
stc
int3
ins
test
and
xchg
pop
inc
xor
(bad)
neg
test
cmc
mov
retf
mov
test
mov
ds
xlat
cmps
dec
mov
ret
pop
push
adc
fidiv
sub
mov
and
ret
mov
xchg
mov
out
adc
and
loopne
les
adc
sbb
pop
jecxz
dec
sub
loopne
nop
add
icebp
xchg
or
jmp
stc
mov
mov
fwait
sar
idiv
mov
test
aas
pop
pusha
cmp
mov
dec
or
sub
mov
dec
clc
or
adc
aaa
cs
sti
push
fld
je
jnp
xchg
fsubr
lds
rol
push
and
push
and
das
les
mov
pop
(bad)
dec
mov
jno
mov
mov
mov
gs
push
mov
outs
mov
adc
les
dec
jmp
dec
das
clc
push
add
push
add
jo
mov
xor
adc
add
mov
pusha
std
and
push
(bad)
jae
xor
adc
hlt
std
fdecstp
add
mov
lds
jmp
dec
inc
push
push
cmp
imul
adc
or
mov
push
inc
xor
jbe
adc
mov
mov
(bad)
std
sub
dec
cld
or
inc
sub
adc
mov
sub
imul
loopne
fild
dec
clc
out
cmp
inc
(bad)
repz
ret
dec
sub
(bad)
fist
adc
cmp
pop
cs
and
add
mov
push
jae
(bad)
xlat
mov
inc
mov
cs
outs
inc
out
jg
or
retf
hlt
inc
inc
push
imul
mov
js
ficomp
repnz
add
in
(bad)
jmp
push
add
or
call
(bad)
inc
dec
(bad)
adc
ret
inc
in
das
pop
pop
mov
std
add
inc
(bad)
sbb
fsubr
pop
mov
mov
cwde
fisttp
bound
xor
and
pusha
arpl
mov
adc
push
mov
dec
dec
xchg
pop
cmp
push
push
xor
dec
add
inc
shr
pop
pop
lahf
push
or
lods
nop
lods
repz
dec
sub
dec
ret
call
mov
dec
cs
stos
in
aas
loope
ja
xchg
out
xchg
mov
mov
cwde
pop
jge
clc
dec
dec
shl
add
sti
mov
(bad)
(bad)
call
sbb
scas
data16
cmp
mov
push
cmp
push
pop
pop
xor
sar
dec
stos
ins
std
mov
sti
iret
mov
jg
add
out
(bad)
out
sub
aas
xchg
(bad)
mov
call
mov
out
das
xor
xchg
(bad)
fisttp
add
fldenv
ret
addr16
add
mov
add
add
cmp
jl
test
(bad)
push
push
jecxz
lods
push
pop
imul
and
pop
xchg
inc
sti
xchg
scas
xchg
pop
(bad)
mov
and
push
and
mov
inc
xlat
sub
mov
stc
cmp
pop
jbe
clc
mov
cmps
pop
or
mov
inc
scas
mov
sub
inc
xor
std
jbe
pop
push
dec
add
xor
out
lock
add
inc
mov
xchg
mov
dec
lods
out
mov
call
ret
imul
fstp
into
add
(bad)
xor
inc
jno
es
out
cli
(bad)
cli
out
or
jle
leave
add
(bad)
sub
ret
sti
jb
aad
icebp
call
xor
inc
out
out
mov
shl
adc
jo
popa
aaa
cs
mov
nop
loopne
icebp
repz
or
mov
add
jo
mov
push
out
push
add
add
loop
movs
imul
mov
jnp
mov
jae
test
add
(bad)
je
(bad)
pop
adc
aas
push
lahf
pop
ret
inc
push
jno
inc
cmp
pop
xor
enter
std
aad
mov
arpl
and
pop
arpl
iret
clc
sub
mov
mov
dec
add
inc
xlat
mov
pop
push
add
pusha
mov
inc
cmp
sbb
sub
imul
mov
loopne
shl
mov
xchg
mov
es
lods
test
inc
(bad)
sbb
int3
inc
(bad)
push
push
fmul
inc
(bad)
ins
icebp
add
push
cmp
push
jbe
mov
dec
or
inc
retf
sbb
cld
mov
xor
stos
ret
out
dec
aas
jecxz
fcomp
ins
ret
outs
mov
retf
stos
jg
aas
mov
int
(bad)
xor
or
rcpps
inc
pusha
fild
sbb
sbb
cld
je
imul
push
daa
adc
in
outs
movs
dec
lock
cmp
mul
sbb
fdivr
add
push
mov
jl
std
js
(bad)
mov
shr
ficom
not
mov
or
in
movs
stos
push
je
je
pop
dec
adc
jg
or
das
call
(bad)
sti
or
add
xchg
mov
adc
push
dec
movs
sbb
cli
add
pop
mov
push
add
push
or
jae
jae
shl
enter
mov
aad
dec
mov
xchg
xor
push
test
movs
mov
mov
dec
xor
sti
inc
add
push
call
dec
adc
adc
inc
(bad)
in
scas
sar
call
sbb
arpl
mov
(bad)
repnz
(bad)
repz
ds
sbb
jae
sti
in
pop
and
rcl
(bad)
test
push
inc
adc
add
rol
ret
pop
add
add
inc
xchg
cld
and
mov
scas
adc
cld
pop
dec
js
je
es
inc
repnz
inc
(bad)
arpl
mov
cmp
sti
adc
inc
cld
fbstp
arpl
pusha
bound
or
fsub
mov
fcomip
pop
pop
cmp
or
jb
mov
or
xchg
inc
lods
xor
mul
inc
aas
dec
mov
add
or
shr
int
xchg
xor
loop
sti
mov
lods
pushf
jmp
or
jae
pop
stos
or
cld
vpmovwb
cmp
(bad)
add
(bad)
jmp
pop
inc
jae
mov
je
fld
add
add
mov
inc
and
jg
add
xor
cmp
add
dec
stos
mov
add
mov
call
or
gs
push
idiv
mov
(bad)
retf
rcl
rcl
add
add
sub
retf
sbb
add
push
inc
(bad)
scas
or
push
jmp
mov
shr
or
inc
rol
pop
ret
push
std
adc
and
pop
add
push
pop
jns
pop
dec
fimul
mov
adc
and
add
add
inc
xchg
mov
push
mov
(bad)
adc
inc
std
(bad)
jmp
jg
push
sbb
out
cmc
loopne
pop
ret
fucomi
pop
mov
in
jge
dec
outs
pop
push
mov
add
xchg
out
inc
dec
cwde
push
out
retf
repz
mov
addr16
pop
add
inc
repz
cld
adc
inc
or
ret
sbb
or
inc
stos
dec
mov
and
push
mov
xchg
mov
ja
sti
ror
cmovle
jmp
ret
xor
dec
pop
push
pusha
mov
popa
inc
xchg
pop
arpl
jmp
(bad)
pop
jne
push
mov
mov
aaa
cmp
push
dec
sub
mov
inc
mov
ret
add
je
mov
sti
jle
xchg
ret
cmp
pusha
and
xor
test
jle
push
test
xor
push
(bad)
push
add
sub
add
mov
(bad)
push
adc
xor
mov
das
add
adc
push
mov
lahf
pop
ret
dec
js
jle
add
add
call
jo
jbe
ins
ins
inc
mov
repz
push
(bad)
ja
sbb
ds
fs
inc
aas
dec
dec
aas
cmp
cli
jmp
and
add
pop
inc
fistp
jno
add
adc
push
push
inc
jg
lock
push
retw
fcomp
call
mov
xor
mov
ret
pop
adc
pop
pop
into
inc
xor
(bad)
scas
inc
sti
mov
and
psrlq
cmps
outs
mov
inc
mov
push
xchg
clc
wrmsr
(bad)
loope
pop
iret
mov
mov
pop
call
lds
mov
xchg
adc
inc
out
std
pop
fwait
or
cmps
lock
inc
bound
pop
cmc
(bad)
out
push
lods
pop
or
in
add
pusha
(bad)
adc
or
call
inc
add
pop
jp
test
xchg
xor
or
pop
mov
adc
ret
mov
inc
call
outs
mov
(bad)
jae
imul
xchg
and
popa
imul
ins
adc
push
jmp
jb
lods
cmps
jno
jl
or
sbb
dec
add
nop
mov
xor
xor
scas
ja
mov
cmp
rcr
or
mov
pop
add
jnp
adc
add
add
aas
fisttp
ins
xlat
add
push
loope
xor
(bad)
in
imul
outs
out
and
(bad)
cld
mov
lods
(bad)
sar
xchg
pushf
jbe
cld
lods
fld
pop
les
out
iret
xor
(bad)
std
lahf
out
adc
adc
dec
sub
adc
add
push
test
icebp
dec
xchg
daa
popa
xor
inc
cwde
pop
icebp
cmp
ret
popf
and
sub
mov
xchg
nop
out
add
xchg
xchg
inc
adc
je
xchg
out
mov
pop
jmp
dec
fild
inc
inc
adc
add
add
jl
test
(bad)
cmp
or
ret
fbld
arpl
out
clc
iret
dec
scas
(bad)
cli
pop
mov
lods
mov
ret
sar
jae
xor
mov
push
or
inc
sub
fwait
inc
mov
out
or
ret
les
push
fs
xchg
push
inc
inc
sbb
and
sti
mov
xchg
xchg
add
fdivrp
sub
or
adc
(bad)
mov
sbb
aas
es
jbe
adc
je
mov
pcmpeqd
add
and
dec
pop
icebp
dec
je
push
into
ss
dec
mov
push
jg
pusha
push
int3
add
push
mov
dec
imul
out
adc
cli
sti
(bad)
out
jg
into
inc
std
add
ss
fdiv
push
out
xchg
pop
pop
pop
in
sti
push
jmp
into
inc
push
inc
xlat
or
mov
sub
out
dec
dec
cs
popa
sub
lahf
pop
ret
ret
cmp
dec
push
jmp
dec
mov
jle
clc
retf
pop
pop
mov
jle
pop
cmp
add
inc
cmp
xlat
iret
into
mov
jmp
and
pop
(bad)
xor
inc
call
mov
mov
rol
mov
sub
test
pop
in
jmp
cs
je
stos
stos
mov
pop
dec
fbld
inc
sbb
enter
mov
je
fwait
add
cwde
xchg
stos
pop
mov
mov
fmul
ror
dec
outs
movs
cld
xor
mov
outs
mov
inc
xchg
adc
mov
out
ret
ret
inc
iret
aaa
mov
outs
outs
or
(bad)
push
or
ficomp
push
out
mov
push
loopne
jmp
mov
and
jge
dec
push
(bad)
sub
jg
mov
push
fimul
add
inc
and
gs
cwde
(bad)
xor
inc
push
xor
or
and
pop
sub
pop
push
call
push
jmp
or
add
add
or
add
stos
ds
mov
outs
outs
pop
push
push
mov
jmp
call
inc
and
arpl
mov
xor
push
or
pop
pop
add
push
retf
(bad)
mov
cmps
lds
call
(bad)
in
mov
sbb
pop
(bad)
jno
inc
imul
not
push
gs
in
sti
pushf
mov
cli
aam
cld
add
jae
push
xor
pop
call
mov
aas
je
(bad)
cld
aas
addr16
rcl
rcl
jg
jbe
mov
ret
js
mov
and
sti
inc
jbe
pop
push
ret
mov
inc
hlt
inc
out
fiadd
jno
test
inc
jecxz
jl
add
and
mov
inc
inc
dec
mov
idiv
or
mov
sub
mov
or
xchg
cdq
xchg
or
outs
pop
jl
inc
rcr
fiadd
neg
jo
pop
sti
push
add
dec
or
push
sti
xor
sbb
pop
dec
xor
out
mov
mov
mov
inc
ret
(bad)
jle
or
mov
(bad)
xlat
ret
aad
out
mov
retf
pop
mov
in
jle
mov
xor
test
push
jmp
adc
inc
cli
out
inc
lds
sub
jno
pushf
nop
ret
test
mov
jmp
inc
addr16
mov
sub
aam
inc
ds
test
pop
pop
bound
pop
stos
dec
mov
gs
xor
xchg
mov
or
mov
jb
inc
fimul
mov
pop
pop
or
sub
nop
push
sti
out
mov
rol
jp
inc
mov
mov
aaa
lods
xor
imul
icebp
push
jmp
lds
or
imul
mov
scas
inc
or
sti
add
ret
(bad)
rcr
jb
inc
ins
xor
ret
das
and
mov
jae
call
add
sbb
das
and
sub
mov
pusha
inc
adc
rol
jmp
das
fisub
ds
(bad)
loop
(bad)
inc
sti
jmp
jo
dec
inc
mov
cmp
mov
ret
lock
pop
shr
jp
idiv
es
out
jg
pushf
jmp
in
xchg
push
mov
lock
aam
mov
xor
jnp
test
dec
arpl
push
fs
add
inc
test
mov
mov
repnz
je
cld
mov
cwde
lahf
jo
pop
(bad)
cli
adc
clc
sti
mov
loope
adc
inc
lahf
cmc
mov
push
mov
(bad)
je
call
imul
jmp
mov
jns
adc
push
bound
(bad)
in
ins
hlt
sbb
inc
(bad)
jl
pop
mov
(bad)
fiadd
cmp
adc
std
inc
idiv
out
sti
pop
inc
sub
add
ins
push
loopne
mov
std
push
bound
cmp
inc
jmp
popa
xchg
add
sub
or
push
imul
add
cwde
int
jmp
inc
scas
cld
(bad)
mov
sub
neg
and
push
cld
data16
lds
and
mov
shl
les
call
retf
push
mov
stos
inc
mov
pop
jg
retf
cmps
push
adc
adc
fcomip
fild
push
div
out
pop
inc
or
test
push
aaa
mov
aad
adc
jnp
or
(bad)
rcr
push
push
jb
add
lds
jmp
push
sub
dec
pop
(bad)
dec
cwde
mov
loop
out
inc
mov
mov
idiv
jb
cmc
lock
and
xor
aas
adc
cmp
outs
push
frndint
lahf
ret
aas
adc
ret
dec
stos
or
cmp
pop
add
into
ret
outs
sbb
imul
jno
jg
mov
fild
sbb
push
sub
movaps
dec
push
push
loopne
cmp
sub
jmp
and
or
arpl
(bad)
hlt
and
clc
xor
test
or
pop
mov
(bad)
icebp
je
shl
pop
pop
mov
or
add
add
loop
cwde
mov
clc
or
inc
xchg
xchg
fxch
sub
xchg
outs
add
mov
sub
popa
sti
out
add
adc
pop
cmps
add
pop
(bad)
sti
mov
adc
imul
inc
adc
lods
test
call
cmp
data16
gs
xchg
shl
inc
outs
mov
mov
mov
out
mov
ds
push
retf
adc
ret
sbb
in
xchg
mov
ret
fs
pop
sbb
add
inc
loope
dec
add
inc
pop
add
add
pop
push
inc
push
or
ret
sti
(bad)
xor
jnp
aaa
rcr
push
mov
call
dec
inc
mov
inc
mov
jge
paddw
jg
mov
lock
add
outs
test
(bad)
xor
inc
mov
push
aas
mov
mov
fwait
xor
push
icebp
jg
inc
std
add
pusha
add
(bad)
xlat
push
jg
jae
cld
imul
cld
jge
add
mov
push
sub
into
cmps
mov
add
(bad)
outs
pop
mov
add
je
adc
loop
push
add
nop
cld
inc
push
push
jg
pop
pop
fcom
add
stc
ss
js
xor
je
push
sar
adc
inc
fild
pop
xchg
sbb
xor
push
pop
arpl
ret
mov
jg
std
push
cmp
mov
and
mov
int3
mov
cmp
aam
adc
pop
std
dec
out
inc
and
or
inc
in
jbe
jbe
push
add
push
int3
sub
lahf
pop
add
adc
js
retf
rol
aad
rol
(bad)
push
loop
mov
mov
iret
fdivr
stos
lods
clc
fisttp
mov
sbb
je
mov
sbb
jbe
ret
ror
(bad)
in
ret
pushf
pop
add
loopne
js
test
sahf
sub
add
ds
loopne
cmp
aas
sar
fs
push
mov
or
(bad)
sbb
add
shr
cli
jmp
out
dec
test
dec
fistp
jmp
loop
pop
aas
sar
sub
out
mov
xor
ins
adc
inc
in
cld
mov
cli
pop
(bad)
fisttp
imul
aas
add
mov
test
dec
mov
mov
rol
mov
outs
jnp
enter
add
syscall
sti
stos
nop
adc
mov
pop
jg
sub
pop
test
aad
repz
fs
push
or
inc
ret
sub
pop
ror
or
adc
ret
mov
push
pop
rcr
and
adc
add
pop
cld
mov
ds
lods
retf
aas
mov
jns
adc
das
addr16
out
mov
cwde
movs
pop
aam
mov
outs
test
push
cmp
das
je
clc
pop
mov
jge
jb
inc
gs
aaa
adc
inc
ror
sub
jmp
mov
jbe
inc
inc
(bad)
sub
xor
in
int
dec
or
and
mov
(bad)
mov
jg
(bad)
iret
sbb
add
mov
xchg
adc
je
mov
fadd
push
add
pusha
add
mov
cmp
(bad)
(bad)
jg
mov
jae
and
stc
cmp
sub
pop
sar
test
xor
ins
(bad)
out
push
pop
aam
jmp
pop
aaa
stc
dec
mov
shl
mov
out
or
adc
mov
fimul
dec
ins
ja
mov
(bad)
je
pop
out
or
data16
test
sti
pop
xchg
fs
sub
dec
dec
jl
in
dec
jbe
add
dec
imul
dec
or
mov
jmp
pop
cli
loopne
dec
cmp
pop
mov
push
(bad)
cmp
rcl
push
imul
push
cwde
std
ret
adc
or
fcom
lds
xchg
int3
rcl
jmp
jb
pop
pop
stc
or
cmps
push
dec
cmc
inc
mov
xchg
inc
xchg
and
out
js
push
addr16
icebp
pop
in
cmp
js
test
cmc
add
inc
rol
(bad)
jmp
mov
pop
xor
push
sub
add
pop
cmp
mov
call
scas
clc
and
jno
(bad)
sbb
pop
daa
sub
fdiv
add
inc
sub
mov
mov
inc
leave
cmp
adc
out
xor
cmc
enter
outs
(bad)
sbb
push
push
je
popa
jecxz
sbb
add
arpl
add
sub
fild
jno
mov
mov
les
push
jmp
mov
out
mov
or
mov
sub
aam
dec
and
and
add
mov
lahf
jmp
std
inc
inc
call
test
inc
jae
push
mov
adc
test
fidivr
jg
dec
jmp
sbb
pop
clc
and
jmp
pop
(bad)
sub
pop
mov
add
test
dec
rcl
outs
ja
inc
inc
add
js
and
or
inc
cmp
mov
mov
ror
(bad)
in
ins
ret
aas
jbe
push
loop
dec
xor
ret
cld
push
movs
sbb
push
add
or
pop
inc
jmp
mov
dec
pop
lock
mov
ds
push
inc
or
sbb
mov
out
outs
xlat
sub
popa
mov
push
jl
inc
fdivp
mov
inc
shl
push
lods
push
or
push
adc
jmp
pop
loop
add
jne
sub
and
mov
sub
push
repz
mov
je
mov
loop
call
inc
or
cld
fwait
adc
stos
and
mov
inc
xor
add
pop
sub
icebp
cmps
jg
sbb
aas
out
int3
add
dec
adc
sti
inc
pop
lock
cmp
inc
xor
scas
retf
pop
push
adc
call
push
stos
jo
loop
mov
stos
mov
cld
adc
pop
pop
mov
xor
push
mov
inc
pop
ins
pop
cmp
inc
pop
jne
mov
adc
fcomp
jl
cli
bound
mov
stos
cmps
mov
jmp
lds
push
pop
addr16
jp
aaa
out
inc
add
and
pop
shl
fwait
into
or
lock
loopne
ror
(bad)
jnp
js
mov
inc
ror
es
movs
add
dec
fbld
dec
pop
push
jb
ret
push
lods
stos
or
dec
add
cs
(bad)
lea
cmp
xchg
ins
mov
cmp
ret
pop
das
iret
fsub
pop
int3
add
es
fsubr
or
adc
pop
or
xchg
lods
fbstp
push
pop
mov
add
pop
or
sbb
pop
push
push
push
hlt
mov
shr
mov
jb
jb
xor
dec
push
call
dec
ja
inc
test
push
mov
inc
pop
xor
mov
iret
ficomp
push
mov
push
repnz
push
cmp
call
push
jnp
dec
jg
bound
cli
add
daa
mov
shr
(bad)
jbe
inc
mov
push
add
mov
shr
adc
adc
pop
ins
adc
imul
dec
out
mov
or
push
out
iret
push
call
retf
add
(bad)
dec
mov
add
ret
outs
loop
mov
das
add
push
loopne
inc
xchg
xor
xlat
cli
(bad)
inc
mov
mov
add
pop
adc
dec
imul
push
je
inc
inc
add
jle
ret
in
cs
ret
adc
push
jmp
fimul
cmp
jno
(bad)
pop
sbb
dec
push
xor
ret
or
pop
xor
(bad)
jmp
xchg
imul
xor
sub
mov
mov
mov
push
pop
xchg
test
jg
mov
retf
push
ja
inc
aas
(bad)
je
aaa
fdiv
fild
mov
inc
add
das
aam
add
push
dec
not
push
hlt
sti
jg
cmp
pusha
push
dec
shl
push
and
movs
mov
jg
dec
inc
inc
add
enter
pushf
rcl
inc
(bad)
out
inc
shl
rcl
mov
popa
jp
in
test
fisubr
sar
ds
test
pop
fsub
or
mov
jb
xchg
dec
cmp
lock
inc
push
sbb
mov
jmp
js
add
gs
pop
jb
add
pop
pop
loopne
hlt
jmp
(bad)
addr16
arpl
int3
(bad)
jg
sub
push
mov
push
adc
je
jmp
mov
cld
mov
int
jp
mov
retf
mov
(bad)
aaa
stos
push
jmp
dec
(bad)
call
and
pop
scas
sub
test
jne
pop
lds
mov
xor
stc
add
add
dec
(bad)
repz
cwde
ret
mov
pop
les
inc
adc
sbb
sti
jb
repz
or
pop
or
dec
(bad)
cdq
and
mov
not
inc
jae
mov
out
push
inc
add
adc
aaa
push
add
push
out
cli
arpl
out
adc
mov
fs
and
mov
psubd
jae
fwait
xchg
add
in
cld
retf
mov
inc
icebp
add
test
and
mov
lock
adc
xor
xor
add
lock
std
mov
repnz
(bad)
nop
add
or
enter
das
mov
dec
pop
push
(bad)
neg
mov
(bad)
fadd
mov
(bad)
push
fild
push
mov
idiv
dec
mov
dec
adc
cmp
xor
jge
jbe
jl
inc
imul
in
add
mov
add
out
icebp
mov
mov
test
ins
mov
sub
mov
(bad)
inc
push
cmp
vmread
dec
sub
push
clc
je
mov
mov
cs
xor
rol
test
cmp
pop
sbb
xlat
add
out
mov
(bad)
(bad)
jg
add
mov
add
dec
sub
push
scas
nop
sbb
jb
inc
lods
push
add
je
push
or
sti
pop
add
neg
shr
mov
mov
dec
mov
mov
idiv
dec
add
sub
aas
pop
mov
icebp
dec
(bad)
cmp
and
add
adc
jb
rcl
test
add
jmp
or
cs
movs
jb
mov
scas
lods
push
push
(bad)
iret
xor
or
inc
clc
shl
imul
dec
add
sar
psraw
sbb
inc
add
(bad)
imul
xchg
add
or
sbb
out
mov
(bad)
(bad)
jmp
add
mov
test
push
xor
(bad)
sub
es
cwde
add
jo
inc
mov
or
fwait
inc
jno
jmp
mov
jbe
mov
dec
mov
push
mov
das
js
xchg
add
mov
xlat
inc
lods
dec
push
dec
push
mov
dec
movs
add
ret
xor
cwde
popf
and
icebp
inc
mov
cmp
mov
jl
fild
mov
cmc
push
sub
mov
and
(bad)
cmps
(bad)
push
cdq
add
or
(bad)
xlat
inc
pop
jle
jmp
push
xor
mov
sbb
inc
mov
mov
pop
aad
data16
enter
cld
sbb
or
mov
jg
in
pop
xchg
push
pusha
mov
jmp
pushf
aas
mov
(bad)
or
mov
stos
inc
pop
pop
or
mov
mov
ja
icebp
arpl
fimul
push
(bad)
fwait
scas
cmps
adc
pop
jp
idiv
cmp
mov
stos
and
lock
inc
js
adc
adc
or
sub
mov
fdivr
pop
lock
cld
out
ins
cmp
sub
dec
sub
imul
xor
mov
in
cmps
inc
rcr
jnp
push
je
push
inc
sahf
lds
in
pop
add
sub
pop
mov
add
pop
clc
arpl
aas
(bad)
adc
inc
out
dec
lahf
jecxz
lods
and
add
inc
test
pop
sub
mov
fldpi
popf
arpl
je
push
jnp
ret
jecxz
xchg
cmc
call
jle
cmp
int3
loope
mov
adc
dec
nop
call
ret
mov
adc
aas
aam
push
pop
outs
mov
adc
mov
lea
adc
shl
pop
out
xor
mov
sub
inc
ret
inc
push
rcr
mov
add
popa
loope
std
xor
mov
jmp
mov
test
test
call
push
clc
push
int3
dec
cmp
(bad)
pop
and
push
adc
sub
ficom
dec
std
(bad)
mov
xchg
dec
sbb
adc
push
inc
(bad)
cmp
aas
and
clc
idiv
(bad)
pop
idiv
push
mov
cli
cmp
test
sub
pop
repnz
loopne
add
and
add
adc
mov
jg
mov
inc
mov
(bad)
mov
inc
inc
inc
pop
adc
icebp
or
ret
les
scas
repz
jne
ja
pop
scas
cmp
dec
sub
jae
adc
shr
mov
pop
mov
aas
in
ss
(bad)
mov
mov
mov
aas
jmp
bound
pusha
cmp
push
js
lahf
sub
jg
mov
ret
xlat
imul
out
push
sbb
jbe
mov
add
stos
loop
jno
ss
mov
call
inc
ret
add
adc
stos
inc
test
add
push
cmp
inc
and
scas
mov
adc
jae
sti
div
inc
mov
xor
jo
mov
add
sub
push
push
mov
imul
add
sub
mov
dec
movsx
jmp
rcl
gs
push
mov
pop
loopne
push
jle
inc
imul
sub
adc
mov
xor
mov
(bad)
push
mov
jmp
call
inc
shl
sti
mov
sub
push
push
rol
fwait
inc
or
aas
xor
jmp
rcr
dec
std
push
xchg
inc
mov
pushf
out
ret
mov
je
add
push
call
les
jp
test
inc
imul
push
push
inc
push
mov
test
sbb
add
sbb
adc
out
mov
xchg
clc
inc
push
inc
adc
mov
dec
push
mov
sbb
js
cmovge
add
lock
push
loopne
stos
(bad)
int
mov
imul
call
std
cld
dec
rol
(bad)
cmp
mov
ret
lahf
adc
scas
inc
aaa
pop
cmp
push
jl
add
push
sti
(bad)
movs
hlt
sbb
call
push
in
add
jg
ins
dec
(bad)
jae
lds
ja
mov
arpl
xchg
push
dec
outs
inc
pop
inc
xchg
add
(bad)
shl
add
inc
jmp
(bad)
fs
pusha
fdivr
cmp
add
xchg
rcl
cld
dec
mov
stc
call
aad
inc
push
pop
xchg
pop
inc
mov
ins
rol
in
mov
lahf
dec
rcr
loop
mov
ror
sbb
add
inc
add
cmps
add
dec
xchg
add
retf
pop
ja
lea
loop
outs
idiv
int3
jle
add
pop
ret
mov
or
jmp
add
add
lds
inc
jmp
stos
inc
add
dec
jb
dec
pop
jae
inc
mov
jno
jge
inc
push
xor
fs
push
ja
out
jmp
inc
mov
add
rsqrtps
add
jnp
out
(bad)
sub
add
scas
into
(bad)
inc
fstp
aaa
push
repnz
scas
call
ret
ret
cmovp
pop
enter
fucomip
xchg
and
pop
das
(bad)
or
pusha
ret
iret
mov
push
add
pop
mov
aas
das
inc
out
push
xchg
xchg
xor
dec
es
pop
and
jecxz
pop
(bad)
mov
fwait
mov
cmp
pusha
pop
mov
pop
repz
adc
cmp
or
inc
js
xor
jne
adc
mov
or
mov
inc
cdq
xchg
or
dec
pop
fisttp
or
(bad)
or
nop
sti
add
lds
mov
cld
cmc
gs
xchg
xor
inc
pop
ins
aad
sub
mov
push
add
xor
call
push
cld
scas
in
sub
idiv
shl
fmul
clc
xchg
mov
mov
movs
add
fadd
dec
test
lock
cld
imul
(bad)
(bad)
mov
xchg
mov
or
adc
adc
xchg
arpl
mov
sbb
mov
rol
ins
pop
inc
(bad)
out
cmp
(bad)
(bad)
shl
out
inc
loope
xchg
mov
push
rcr
pop
icebp
xor
fnsave
(bad)
add
mov
sbb
xor
mov
dec
mov
dec
repz
xchg
clc
fiadd
add
dec
(bad)
neg
(bad)
rol
ret
popa
(bad)
sbb
mov
clc
jg
cdq
mov
inc
push
(bad)
mov
mov
test
pop
fsubr
callw
pop
rcr
pop
jmp
fidiv
adc
ja
in
push
jle
xor
push
jle
test
mov
ins
push
push
add
test
jbe
scas
mov
int
xchg
mov
add
dec
mov
jmp
mov
hlt
std
pop
mov
pusha
clc
jg
jecxz
pop
icebp
mov
or
cli
mov
leavew
repnz
imul
ror
push
(bad)
adc
cmp
push
shl
mov
fsub
mov
call
inc
pop
(bad)
mov
jnp
hlt
(bad)
aas
pop
jo
test
std
inc
cld
xor
sbb
add
dec
push
mov
add
es
push
xlat
out
xor
(bad)
bound
mov
ja
or
in
aas
xor
xor
inc
push
loopne
jnp
pusha
xor
xchg
mov
mov
dec
xchg
aas
add
push
mov
fwait
imul
bound
sbb
dec
(bad)
in
(bad)
xor
add
add
and
ds
jl
stos
add
call
inc
add
lock
leave
gs
in
movsx
(bad)
je
sbb
aam
out
arpl
or
out
adc
clc
mov
(bad)
jno
aaa
inc
mov
mov
fidiv
pop
mov
mov
and
imul
pop
ins
dec
sub
or
dec
xchg
push
sub
scas
inc
lds
dec
cli
loop
sub
in
push
push
cmps
mov
dec
jmp
xor
arpl
push
mov
jae
fcomp
sti
sbb
lock
lock
call
push
dec
add
int
dec
gs
jae
push
test
pop
cli
pop
ret
xor
mov
ret
add
mov
sbb
mov
inc
imul
push
pop
stos
(bad)
inc
add
add
aas
gs
pop
inc
sub
mov
xlat
add
rcr
mov
pushf
idiv
aad
pop
iret
aad
(bad)
std
loop
mov
push
cmp
dec
xor
out
cmp
push
add
ret
pop
out
sub
add
sbb
ss
mov
add
cmp
(bad)
sub
psrad
mov
push
pop
jno
push
inc
jmp
out
cld
mov
stc
dec
stos
adc
fs
outs
or
jmp
mov
hlt
add
inc
mov
je
push
jg
and
stos
add
ret
mov
call
into
mov
jl
fs
into
or
call
xor
mov
rol
pop
mov
or
push
push
pop
ja
(bad)
(bad)
fnsave
cmp
call
adc
pop
rsqrtps
push
(bad)
inc
or
sbb
mov
lods
dec
(bad)
scas
mov
shl
hlt
pop
les
mov
push
test
or
inc
ss
test
inc
dec
int3
(bad)
cmps
ret
dec
into
ss
push
mov
ja
push
xor
inc
out
imul
push
sub
add
mov
adc
push
inc
test
sbb
and
cmp
inc
mov
pop
inc
sub
mov
das
mov
and
nop
sahf
(bad)
aam
cwde
lods
aaa
mov
aas
call
push
and
(bad)
mov
or
push
inc
enter
sbb
mov
in
jecxz
mov
mov
out
jp
jns
das
shr
add
and
addr16
xchg
adc
or
mov
bound
std
jmp
push
dec
add
aas
test
jecxz
aas
mov
ret
mov
dec
push
xlat
add
mov
mov
das
lds
or
sub
jl
dec
int
adc
pop
ret
ret
cmp
rol
or
stos
test
aam
xor
mov
aas
pop
xor
sbb
push
pop
adc
sbb
jo
push
mov
or
or
fs
adc
call
sbb
inc
jmp
retf
mov
or
jle
pop
xor
add
xor
xchg
xchg
sbb
pop
mov
add
jmp
mov
add
int
out
aam
push
sub
pop
push
inc
lds
inc
inc
adc
push
js
inc
jnp
stc
clc
inc
mov
add
scas
call
add
mov
inc
std
mov
mov
cmp
adc
xchg
cld
jno
add
(bad)
getsec
add
mov
lods
cmp
inc
add
push
mov
lods
(bad)
idiv
jg
mov
dec
cmc
pop
outs
cmc
std
add
repz
imul
loop
push
mov
xchg
scas
les
push
or
inc
cs
push
pop
mov
bts
sbb
aaa
pop
cmc
mov
call
pop
pop
(bad)
pop
ret
jmp
push
int3
push
mov
mov
aaa
mov
ss
cmp
sub
mov
ror
xor
push
sti
cld
(bad)
jmp
push
or
push
inc
jno
sti
inc
arpl
fneni(8087
mov
push
xlat
imul
pop
xor
and
aas
add
mov
jmp
(bad)
push
inc
push
push
out
adc
cmc
mov
mov
mov
pop
stos
add
xor
add
mov
or
addr16
sbb
aad
std
push
stc
jns
cmc
and
push
mov
(bad)
(bad)
push
(bad)
jg
jle
enter
fisub
test
div
cmp
cmovg
ret
sbb
cs
dec
std
sub
(bad)
pop
rol
inc
stc
fst
(bad)
sub
clc
stos
xchg
into
dec
ret
mov
outs
jmp
pop
push
sti
xor
pop
pop
sbb
call
pop
aas
xchg
and
inc
es
loope
or
mov
push
sbb
jmp
sub
aaa
mov
retf
add
lds
xchg
lock
pop
xchg
pop
test
and
repz
mov
loopne
mov
dec
and
push
mov
add
xchg
jecxz
addr16
and
xchg
push
xchg
xchg
lahf
adc
fcom
or
push
inc
xchg
xchg
aas
or
mov
pop
stos
jae
mov
gs
xchg
mov
pop
or
ret
lock
ss
mov
inc
push
xor
mov
xor
add
sbb
(bad)
pop
sub
(bad)
fmul
test
(bad)
out
mov
xor
add
outs
test
cmp
imul
mov
scas
clc
out
add
push
cs
inc
inc
add
mov
ret
pop
or
out
ret
xchg
add
nop
and
sbb
cs
loop
jne
das
dec
xor
jno
das
jmp
mov
jae
call
pcmpgtb
ja
mov
je
xor
mov
outs
push
jmp
dec
mov
mov
add
call
in
das
test
xchg
add
fild
inc
mov
inc
pop
push
sbb
imul
dec
add
fs
pop
mov
outs
pusha
aaa
mov
pop
push
out
out
mov
lods
lods
push
mov
and
cld
daa
sbb
sbb
loop
push
push
arpl
and
jecxz
test
fcomp
mov
mov
inc
inc
pop
ret
add
js
cmps
sbb
mov
cld
mov
inc
push
(bad)
xor
inc
mov
scas
cmps
clc
cmp
rcl
add
add
mov
mov
(bad)
cmc
inc
pop
fs
out
push
push
add
arpl
call
pusha
ja
jg
out
pop
pop
jae
pop
shl
in
dec
shr
(bad)
ja
(bad)
sbb
ds
mov
aad
add
mov
arpl
push
or
sub
cmp
xlat
ret
jmp
test
clc
outs
mov
xor
movhps
sbb
dec
mov
jne
ins
mov
jmp
xchg
mov
dec
xor
inc
inc
(bad)
mov
out
push
sbb
pop
jp
ror
push
aas
std
push
mov
and
sbb
or
lds
pop
jo
aas
jp
loopne
inc
leave
mov
repnz
sti
push
pop
adc
inc
jmp
mov
sti
cmp
push
add
enter
out
aaa
pop
aas
mov
(bad)
dec
inc
sub
dec
outs
dec
lds
inc
pop
das
inc
add
pop
mov
cs
mov
mov
dec
shl
stos
inc
jns
pushf
outs
push
ret
mov
pushf
push
rcl
sbb
pop
test
xor
ficomp
inc
outs
adc
pop
mov
(bad)
stos
push
add
outs
xor
in
cli
std
jae
out
jl
and
inc
pushf
push
jg
pop
inc
std
xor
bound
push
dec
pop
fs
push
push
add
retf
pop
das
loopne
xor
push
adc
(bad)
mov
add
cmc
imul
xchg
(bad)
and
push
mov
dec
inc
mov
mov
push
aas
dec
fs
outs
mov
repnz
ror
out
cmc
out
dec
loopne
pusha
cmps
xor
mov
or
es
pop
add
outs
xchg
inc
std
fnstcw
cmps
std
cdq
adc
jo
out
add
mov
xchg
mov
push
in
pushf
xchg
lock
sti
test
(bad)
jmp
add
jecxz
push
mul
dec
mov
cli
ins
loopne
add
lahf
or
xor
dec
mov
push
mov
mov
sub
movs
cs
cli
jg
mov
mov
enter
out
cmp
push
adc
add
in
push
push
movs
jmp
cmc
inc
push
call
or
pop
(bad)
jg
fdiv
or
xchg
scas
test
outs
mov
mov
cmp
shl
and
pop
xchg
inc
pop
and
stos
outs
sahf
repz
dec
or
aas
je
ins
mov
mov
mov
xor
mov
sbb
(bad)
je
jmp
pusha
inc
je
dec
jge
mov
sbb
mov
xor
ss
push
sbb
cmp
and
or
sti
sub
out
adc
add
add
rcr
add
push
shl
(bad)
addr16
add
shl
and
sub
inc
shr
lock
int
jae
push
sub
cwde
rcl
ins
xor
xor
retf
jo
ins
lods
mov
loopne
or
mov
movs
cld
fld
ins
xchg
ss
mov
ret
test
or
dec
ret
add
test
mov
je
push
int
scas
mov
das
inc
mov
push
dec
adc
add
clc
inc
mov
(bad)
arpl
xchg
outs
inc
push
repz
and
movs
popa
es
enter
xchg
inc
rol
pop
or
and
ror
mov
dec
cmp
mov
or
enter
pusha
frstor
les
out
pop
or
not
scas
add
pop
xor
push
jbe
adc
inc
mov
ret
sub
mov
push
add
pop
mov
and
mov
push
dec
push
cmps
dec
push
adc
std
push
fs
push
push
or
mov
mov
(bad)
cmp
mov
jb
ss
pop
push
add
in
sbb
fidivr
pusha
mov
jmp
jb
jnp
cmp
mov
test
stc
daa
or
lock
ret
pushf
xor
hlt
add
inc
mov
(bad)
fisub
out
(bad)
push
dec
or
dec
fidivr
pop
adc
test
inc
or
daa
loop
and
aam
jg
(bad)
push
xchg
sar
sub
enter
(bad)
jae
mov
adc
ja
xchg
fmul
add
pop
popa
cdq
pushf
sub
aaa
push
js
(bad)
jno
mov
adc
jle
mov
out
dec
loop
(bad)
arpl
add
test
ret
ins
adc
mov
call
out
(bad)
shr
pop
mov
mov
adc
jbe
fdivr
inc
aaa
pop
jmp
aas
push
test
or
mov
dec
dec
rol
or
adc
pop
sbb
inc
ret
popa
mov
ret
sub
hlt
int3
mov
stos
xchg
stos
aas
inc
out
iret
push
es
mov
outs
push
xlat
mov
mov
cmp
pop
or
inc
adc
aam
sti
pop
dec
sub
dec
mov
arpl
sub
or
shl
sbb
rol
add
jae
jmp
add
mov
cmp
pop
or
sti
add
push
and
pop
hlt
and
inc
fsin
ins
add
mov
aas
cs
imul
clc
mov
or
push
sub
lock
pop
pop
out
push
push
nop
xor
push
test
push
or
in
dec
jo
out
inc
dec
xlat
js
call
xor
shr
adc
cmp
pop
nop
jae
call
test
sbb
fistp
out
pop
or
scas
jb
dec
cmp
cs
push
aas
in
add
aad
jge
mov
sti
or
add
mov
imul
add
xor
mov
xor
push
sbb
in
mov
test
jp
mov
push
adc
sahf
outs
(bad)
fcmovbe
movs
jecxz
dec
pushf
hlt
adc
movs
(bad)
fdivr
or
jl
push
cmp
jno
sbb
inc
scas
xor
mov
fst
xor
out
add
push
seto
stos
adc
loop
and
arpl
xchg
xchg
mov
push
adc
sub
or
push
xchg
add
adc
push
and
jae
adc
ss
aas
or
xor
(bad)
call
aam
pop
cmp
mov
mov
add
jecxz
call
loopne
push
mov
pop
rol
shr
add
or
xor
jmp
into
pop
mul
imul
xor
sbb
adc
jmp
and
add
loop
sub
je
cld
pop
and
add
push
outs
adc
ret
xor
adc
inc
dec
std
inc
or
pusha
in
(bad)
shl
in
sti
mov
js
outs
sub
mov
jle
push
ret
fbld
(bad)
dec
addr16
call
cmc
and
in
jne
add
imul
shr
jb
aas
scas
je
(bad)
and
aas
or
and
jnp
add
and
push
cmp
dec
sbb
dec
in
cmp
scas
add
sahf
retf
aas
add
push
(bad)
pop
mov
pop
sbb
sub
xchg
mov
in
xor
adc
jp
push
dec
xor
sub
dec
add
std
cmp
mul
jae
jcxz
inc
int3
ds
call
xor
rol
push
or
mov
sti
or
inc
jo
mov
xor
push
cld
call
adc
add
adc
cmp
out
imul
aaa
push
(bad)
aam
jb
dec
loop
add
dec
add
shr
and
inc
adc
cmp
pop
cli
(bad)
pop
inc
add
sti
arpl
outs
sahf
sbb
mov
add
push
dec
push
std
int3
data16
mov
loopne
add
pop
in
fmulp
mov
dec
icebp
add
pop
repnz
test
inc
sub
cmp
sar
add
das
mov
call
pop
mov
or
mov
pop
test
or
inc
mov
loop
adc
lds
or
adc
ins
pop
pop
stos
push
add
jp
scas
shl
mov
mov
push
push
or
sar
mov
cmp
or
cs
adc
pushw
push
sub
dec
(bad)
cs
daa
push
out
(bad)
xlat
jmp
add
aam
fucomp
outs
or
add
or
sahf
leave
dec
lods
inc
xlat
test
or
sub
pop
mov
mov
mov
add
js
jo
adc
jae
loop
mov
pop
inc
movs
dec
enter
sub
ret
pop
lods
inc
push
push
jg
cmp
fidiv
out
xlat
mov
or
nop
and
pusha
cmp
das
add
rcl
rol
inc
jno
push
call
sbb
jp
test
lds
test
ja
cs
xchg
jmp
inc
cmp
lock
call
fstp
mov
jae
pushf
inc
pop
jnp
xor
sar
xchg
(bad)
andps
jg
inc
out
pop
mov
lock
aas
pop
dec
ret
(bad)
loope
gs
test
pop
lahf
pop
push
loop
das
inc
ret
jae
pop
clc
fild
inc
(bad)
or
imul
xor
cmp
hlt
xchg
lods
dec
aaa
push
xor
xchg
push
fs
push
ins
push
icebp
mov
outs
add
aas
or
nop
ret
fadd
mov
or
push
das
bts
pop
pop
inc
ror
inc
mov
(bad)
pop
aaa
aad
xchg
test
mov
jge
jle
not
jae
test
push
push
loopne
fild
mov
inc
mov
fcmovbe
mov
std
add
cmp
inc
ja
push
sbb
cmp
or
xor
pop
xchg
hlt
(bad)
cmp
ins
mov
cmp
ins
mov
cmp
add
ret
es
jo
and
jp
mov
in
repz
mov
mov
pop
cmp
push
ins
loope
test
out
inc
mov
(bad)
push
inc
jnp
jae
push
mov
add
mov
or
jecxz
or
mov
mov
shr
clc
push
inc
mov
outs
pop
push
out
inc
stc
neg
imul
xchg
ins
mov
std
adc
repz
or
jg
mov
sahf
das
xchg
push
int3
addr16
aas
cmp
pop
inc
ins
mov
push
inc
xchg
xor
ss
fidiv
dec
adc
xor
mov
inc
mov
mov
ins
xor
fwait
or
ret
test
adc
inc
adc
iret
sbb
imul
pusha
pop
and
or
cld
inc
or
and
lock
pop
jmp
cli
mov
sahf
mov
scas
xchg
xchg
dec
ret
jae
test
loope
adc
jo
and
fimul
jg
sub
or
inc
jg
(bad)
fcmovnb
xchg
mov
cld
push
pop
pop
cld
mov
jb
into
out
je
ret
pop
push
push
(bad)
inc
adc
and
mov
paddd
push
adc
inc
mov
inc
shr
(bad)
add
add
inc
push
call
outs
xchg
ss
push
repz
ins
into
or
cmp
push
and
mov
jge
lods
test
pop
sub
retf
mov
pop
pusha
pop
mov
adc
or
fcom
and
jmp
add
mov
je
inc
adc
clc
inc
mov
mov
mov
inc
sbb
ret
bound
dec
hlt
inc
xor
xor
stc
mov
dec
xor
dec
inc
fistp
shl
ins
and
jle
xor
pop
xchg
sub
cmovbe
pusha
sti
test
jp
jb
das
outs
ins
fidiv
ret
dec
std
ret
out
fist
sbb
xor
(bad)
inc
xchg
push
ja
mov
mul
push
pop
jno
add
inc
sahf
pusha
pop
cwde
pop
lds
test
sahf
mov
push
je
sub
stos
adc
push
xor
hlt
inc
daa
xor
cmp
or
sti
jg
push
adc
sbb
mov
mov
jmp
jnp
(bad)
not
outs
or
mov
push
jg
jmp
mov
add
mov
jg
mov
ins
in
push
inc
out
int3
(bad)
xlat
xor
adc
inc
mov
jp
add
sti
pop
dec
add
scas
fld
ret
je
data16
and
rcl
or
scas
int3
ret
mov
xlat
ins
push
(bad)
jae
and
add
mov
sti
sub
pop
xor
aas
cmp
add
movs
or
inc
push
pop
inc
inc
jecxz
push
xlat
pop
add
sbb
push
xor
enter
stos
ror
scas
icebp
inc
add
jmp
jmp
inc
dec
xor
push
bound
packssdw
pop
(bad)
mov
std
cmp
xchg
sti
jge
mov
adc
or
jge
sbb
inc
sbb
inc
repz
inc
outs
in
xchg
adc
movs
adc
xchg
rcr
add
cli
mov
push
mov
cmp
mov
sti
je
std
mov
sub
ret
mov
mov
mov
push
jmp
add
mov
rcr
call
mov
adc
xchg
jmp
call
scas
wrmsr
xor
inc
xor
xchg
mov
mul
inc
in
loop
call
sub
stos
and
out
je
addr16
packsswb
xor
pusha
add
add
jg
lock
pop
(bad)
fist
mov
add
inc
mov
mov
and
std
(bad)
std
inc
add
inc
mov
repnz
mov
fsubr
pop
ret
mov
or
scas
sub
aas
lods
push
push
loope
hlt
loopne
movs
mov
mov
add
data16
fild
call
add
add
add
dec
sahf
mov
gs
stos
movs
mov
cld
out
pop
(bad)
in
jb
pop
shr
or
add
jecxz
pop
mov
jp
inc
ins
mov
and
add
xor
mov
xor
xor
dec
bound
dec
lock
pop
out
jmp
push
sub
sbb
dec
dec
or
mov
dec
mov
add
sbb
imul
add
(bad)
shl
dec
xchg
mov
push
sbb
aas
mov
add
das
push
(bad)
in
add
ins
cli
xor
inc
scas
add
in
(bad)
dec
push
stc
pop
jle
and
inc
mov
(bad)
fwait
(bad)
jnp
stc
add
popa
ins
fsubp
(bad)
sti
ja
inc
push
mov
fisub
pop
xor
mov
mov
mov
add
adc
loopne
push
fimul
enter
xchg
clc
pop
pop
loop
mov
call
std
(bad)
mov
push
sti
cld
cli
lahf
ror
push
mov
arpl
jne
cmp
cld
mov
gs
xor
dec
jg
dec
loop
shr
sbb
xchg
add
push
jb
and
stc
or
jge
inc
mov
adc
aaa
jle
mov
mov
std
or
test
inc
add
add
ret
xchg
jl
and
jmp
stos
dec
add
adc
push
pop
mov
cmp
sti
push
addr16
jae
mov
push
(bad)
pop
pop
and
movs
sti
xor
fs
and
inc
iret
or
or
xlat
(bad)
cmp
sub
mov
ficom
sti
aad
push
inc
test
call
and
xchg
daa
dec
mov
test
sbb
shl
or
into
out
movs
es
loopne
retf
cli
ret
in
jae
(bad)
mov
inc
inc
inc
ret
inc
imul
jae
aas
jle
push
sbb
dec
ss
push
out
or
call
sti
pop
pop
mov
add
fst
outs
cmp
adc
rol
ins
xchg
pop
seta
mov
cmp
(bad)
dec
mov
add
add
cmp
in
sbb
dec
sti
cld
dec
std
std
pop
test
mov
mov
xor
sti
gs
out
movs
jle
addr16
xor
push
xor
pusha
add
fisub
inc
add
add
inc
push
and
rcl
lods
mov
adc
je
mov
add
inc
pop
pop
lock
fistp
loop
push
add
shl
mov
dec
or
sub
and
sub
mov
call
sbb
into
mov
jmp
mov
ds
(bad)
push
pop
out
push
js
test
fistp
sbb
test
je
cld
mov
jg
mov
jmp
or
call
jmp
adc
mov
addr16
imul
(bad)
addr16
fdiv
gs
push
xor
sti
sub
push
frstpm(287
xor
cld
arpl
test
mov
add
and
sub
push
cmps
mov
out
(bad)
push
add
jno
mov
shl
(bad)
call
rcl
push
sbb
test
xor
xlat
ret
(bad)
pusha
and
sbb
push
push
(bad)
cli
pop
in
mov
mov
or
cs
push
dec
sti
push
adc
ret
pop
push
repnz
pop
add
or
(bad)
xor
or
inc
neg
js
lock
mov
inc
sti
movs
and
pop
inc
lods
add
add
fmul
js
and
arpl
adc
pop
xchg
and
dec
jge
je
dec
aas
pop
out
xor
scas
test
or
jmp
daa
les
arpl
aaa
xchg
cmp
inc
sti
test
test
loope
call
xchg
(bad)
jg
xor
mov
jle
add
jl
add
xchg
or
out
out
je
push
call
nop
push
dec
call
nop
mov
stos
push
mov
es
jl
adc
dec
mov
and
xchg
or
bnd
enter
push
inc
dec
adc
pop
push
mov
mov
mov
inc
aas
cli
jno
xchg
or
(bad)
push
inc
xor
jecxz
and
cli
mov
je
pop
push
adc
out
jmp
xchg
icebp
outs
sbb
or
hlt
xchg
test
cmps
push
xchg
dec
jo
inc
iret
push
sub
mov
imul
loop
cmp
jae
adc
call
mov
cs
(bad)
cdq
sbb
std
mov
or
mov
push
mov
loopne
add
push
cmp
and
aas
mov
ror
inc
les
inc
pop
lock
loopne
mov
add
pop
inc
inc
adc
sub
je
cmp
das
js
push
mov
das
test
inc
and
cmp
or
push
ds
xor
fbld
mov
pushf
call
into
das
jp
add
jmp
pop
ins
dec
test
fwait
std
jmp
mov
pop
mov
fild
sbb
add
jne
xor
popa
fiadd
movs
add
jle
dec
cwde
je
inc
sub
jmp
push
mov
cli
jg
shr
into
pop
pop
(bad)
imul
push
mov
push
or
push
idiv
mov
push
add
and
xor
movs
mov
or
loopne
jbe
dec
nop
hlt
aas
mov
add
mov
test
mov
push
jmp
inc
icebp
xchg
ins
out
jae
cld
push
adc
dec
bound
cmp
loopne
test
push
pop
pop
xchg
into
jmp
xchg
aam
enter
add
cdq
jmp
outs
outs
mov
jle
sti
mov
add
dec
push
or
inc
arpl
jb
jecxz
push
mov
into
ins
sub
ins
xor
and
out
and
fwait
cld
mov
inc
xor
sub
test
inc
pushf
(bad)
sub
outs
jmp
mov
lods
scas
jmp
inc
push
test
ficomp
idiv
mov
and
and
xor
lds
fmul
mov
shl
mov
sbb
or
push
or
inc
cmp
sbb
fld
inc
push
dec
adc
jae
add
dec
mov
or
lea
out
out
lahf
add
dec
mov
movs
push
inc
mov
mov
pop
lock
(bad)
(bad)
aam
ret
pop
and
cmp
pop
ja
fwait
mov
das
mov
(bad)
aaa
(bad)
pop
hlt
mov
push
inc
inc
jg
fisub
adc
mov
scas
fiadd
mov
dec
xchg
addr16
push
nop
dec
push
shr
sub
mov
and
jmp
mov
mov
pop
inc
inc
cmps
add
retf
out
dec
xor
inc
leave
jmp
iret
(bad)
mov
std
es
push
leave
push
sti
aas
out
pop
mov
add
cmps
xlat
(bad)
test
stos
add
sub
movs
out
call
inc
sub
xchg
add
add
pop
inc
enter
add
sti
loopne
ret
aam
adc
mov
mov
or
out
add
(bad)
lods
bound
mov
aam
mov
ins
call
add
pop
inc
pop
js
or
out
xlat
or
cld
push
jo
pop
mov
mov
adc
pop
push
jb
gs
mov
dec
mov
adc
or
adc
std
addr16
jg
or
outs
pop
(bad)
jae
stc
retf
loopne
in
push
add
daa
sbb
push
or
je
inc
icebp
int
adc
push
das
ror
push
int3
push
sub
call
add
fisttp
fwait
call
cmp
dec
xlat
sub
lahf
ret
call
push
scas
out
(bad)
jnp
sbb
int
icebp
lahf
adc
or
sti
outs
xchg
xor
ja
and
mov
adc
mov
inc
fild
dec
pusha
jae
aas
aad
jbe
mov
mov
je
mov
cli
repz
add
xchg
push
pop
mov
out
mov
add
and
(bad)
fst
dec
lds
fild
and
pop
pop
jmp
imul
pop
xchg
inc
cli
mov
je
ins
inc
cmp
div
ret
add
loopne
jo
add
jecxz
pusha
inc
push
mov
out
repz
paddw
dec
out
mov
iret
mov
mov
loop
inc
inc
out
(bad)
push
pop
repz
test
add
repz
mov
push
out
cmps
sahf
js
inc
shr
addr16
dec
out
adc
in
loope
and
push
imul
push
sub
je
sar
outs
jae
cmp
stos
and
adc
das
and
or
dec
(bad)
lock
in
arpl
xor
sub
dec
push
inc
push
lahf
das
test
rol
jl
and
inc
cmp
shr
call
pcmpgtd
cld
std
aaa
fdivr
dec
cmp
jae
out
add
(bad)
pusha
das
xor
aaa
mov
cmp
ret
xor
retf
enter
test
mov
cmc
inc
push
mov
adc
(bad)
fnstsw
cmps
pop
les
mov
jne
xor
sbb
es
dec
cmps
ds
fiadd
je
cld
nop
arpl
loope
pop
xlat
xor
loop
outs
adc
repz
or
sub
out
jmp
cmc
call
dec
xor
cmc
pop
cmps
sbb
ss
lds
mov
inc
sub
or
jg
or
inc
inc
lahf
mov
test
add
sbb
xlat
call
or
sbb
inc
mov
fiadd
nop
push
mov
xchg
sar
mov
push
xor
jae
aas
add
nop
add
xchg
aam
and
aam
out
mov
push
or
clc
add
fwait
retf
xchg
dec
ins
jae
movs
jo
clc
push
push
pop
inc
cmp
inc
fisub
mov
cmps
sub
pop
fisubr
pminsw
mov
mov
sub
das
jecxz
mov
jmp
mov
mov
hlt
std
test
mov
dec
mov
test
and
stos
mov
pop
jo
rcr
pop
dec
cmp
xor
imul
push
adc
dec
out
mov
jns
xor
mov
or
inc
imul
mov
ret
mov
mov
fcomp
(bad)
in
pop
pop
push
xchg
adc
inc
stos
fimul
mov
or
cmp
push
mov
in
jmp
fs
rcl
mov
push
pop
jae
or
dec
or
mul
cmc
add
pop
popf
jbe
dec
jb
mov
fwait
in
pop
mov
dec
jbe
mov
sub
fs
pushf
add
pop
or
adc
inc
jmp
dec
push
sti
add
mov
stos
mov
push
bound
add
push
and
xor
das
adc
or
sbb
mov
lock
inc
rol
call
and
pop
dec
mov
aaa
or
rcr
inc
aas
and
test
cdq
lods
add
pop
mov
push
or
mov
dec
pop
inc
add
inc
pop
(bad)
ins
dec
mov
dec
mov
dec
dec
add
add
loop
adc
push
out
xchg
ins
add
xor
push
outs
adc
enter
test
loop
ja
ret
push
cmpps
fwait
xor
test
out
push
bound
jae
out
cld
dec
dec
xchg
icebp
dec
es
pop
aas
push
inc
outs
jo
inc
jo
xor
jmp
imul
inc
stc
mov
and
repz
mov
fucomip
mov
into
(bad)
shr
(bad)
std
pop
push
mov
pop
je
mov
(bad)
aas
icebp
sar
or
(bad)
hlt
mov
sbb
out
jnp
mov
adc
ss
div
inc
jbe
shr
xor
push
jge
stos
neg
cmp
sbb
or
pop
sti
inc
mov
outs
push
sti
mov
add
outs
fwait
(bad)
and
ret
lods
inc
jge
inc
pop
pushf
xchg
outs
push
fdivp
sti
push
xlat
sub
fwait
add
ins
out
mov
fild
mov
out
jmp
popf
out
jg
add
push
or
mov
inc
add
xchg
jmp
aaa
add
clc
rol
repz
cli
mov
aad
mov
retf
or
xor
mov
add
push
(bad)
out
adc
sbb
mov
iret
jmp
and
and
ret
sti
push
inc
mov
inc
leave
dec
adc
loopne
imul
cmp
pop
aam
pop
fdiv
ret
in
xor
mov
cpuid
sub
mov
lock
call
out
sub
cld
out
dec
repz
inc
add
popa
mov
nop
fs
mov
inc
and
(bad)
neg
xor
mov
mov
adc
(bad)
xor
or
inc
sub
daa
mov
adc
add
pop
inc
inc
add
jg
loope
cdq
(bad)
lods
pop
pop
and
cld
mov
push
inc
mov
sub
sub
xchg
push
scas
icebp
xor
inc
mov
fisub
cld
scas
xor
jge
mov
je
xchg
push
pusha
out
rol
test
fs
mov
sti
clc
scas
push
cld
outs
out
retf
aam
loop
lds
mov
inc
int
hlt
or
mov
add
inc
add
ret
mov
aam
mov
aas
pop
and
cmp
adc
xor
mov
mov
add
aaa
push
(bad)
aas
cld
stos
lods
(bad)
fadd
dec
mov
xchg
xor
jecxz
pop
mov
and
ss
mov
add
arpl
sahf
push
mov
rol
xchg
jb
or
test
add
push
xchg
mov
lods
xchg
adc
add
push
das
rol
mov
ss
jge
xor
sbb
ss
imul
stos
mov
cli
inc
(bad)
sbb
add
cli
ret
push
jge
test
arpl
push
pop
ror
push
inc
or
jmp
push
sbb
jb
(bad)
sub
adc
or
shl
pop
sbb
cmps
cwde
mov
mov
or
add
nop
add
pop
and
pusha
jl
(bad)
cmp
cli
fwait
cwde
out
fidivr
adc
(bad)
idiv
adc
add
add
addr16
jecxz
(bad)
pop
out
inc
mov
sub
stos
stos
icebp
in
xchg
push
imul
inc
jb
(bad)
jmp
sbb
pop
je
out
mov
add
daa
(bad)
lods
add
sahf
call
dec
xor
xlat
adc
jmp
inc
stos
dec
movs
loop
push
or
mov
outs
push
xor
push
cmp
shl
arpl
push
pusha
(bad)
push
iret
inc
pop
(bad)
in
pop
dec
addr16
inc
dec
adc
fdiv
sti
push
clc
cld
fcomp
ret
xor
adc
push
sbb
add
and
arpl
call
ret
es
popa
pop
mov
(bad)
mov
push
std
mov
jg
fisttp
mov
popf
add
sbb
jmp
or
add
push
(bad)
popf
fst
sub
arpl
adc
aas
inc
inc
test
add
mov
xor
test
push
test
inc
mov
fbstp
test
data16
mov
mov
clc
add
push
out
mov
adc
jbe
mov
pop
std
loopne
jp
xchg
mov
add
in
add
jbe
add
add
jbe
test
add
and
outs
jb
jmp
lds
js
out
call
add
cs
push
jbe
push
pop
(bad)
(bad)
(bad)
pop
cmps
sub
clc
inc
pop
inc
xlat
pop
dec
aas
push
sub
ficom
cwde
rol
fidiv
ret
or
push
add
adc
addr16
test
inc
and
ret
xchg
fistp
cmc
inc
rol
repz
xlat
or
clc
add
push
jge
sbb
inc
jle
push
mov
inc
(bad)
jb
lea
jp
pop
push
and
mov
retfw
add
imul
test
ds
add
dec
cli
fadd
pop
ficom
rcr
cmp
jl
dec
fld
aas
sbb
xor
adc
sar
inc
inc
mov
test
and
imul
xchg
adc
inc
pop
pop
pop
mov
push
fs
push
mov
cmp
fiadd
add
outs
add
hlt
xor
fcmovnu
scas
xchg
(bad)
dec
dec
out
mov
cli
outs
fiadd
inc
pop
or
push
dec
and
es
pop
cmc
push
dec
add
dec
add
push
adc
sti
adc
fcmovb
pop
adc
rcl
and
pop
pop
fs
ins
aaa
mov
push
add
inc
or
inc
clc
bound
add
pop
jmp
ins
jnp
dec
xlat
loop
hlt
ins
shl
js
jno
les
push
sbb
inc
sub
mov
xor
pop
mov
pop
scas
dec
lds
gs
pop
adc
pop
adc
push
div
es
ficom
dec
or
dec
adc
ins
mov
stos
xor
jae
ret
mov
sub
dec
fld
movs
aas
push
push
lods
or
mov
mov
inc
dec
cli
jmp
ret
sti
mov
rcl
ds
cld
lds
outs
les
push
add
push
aad
imul
into
pop
aas
sub
cld
fcmovnbe
add
jl
sbb
inc
xchg
pop
fneni(8087
push
imul
dec
pop
(bad)
inc
dec
and
clc
adc
pxor
push
mov
cmp
add
aaa
inc
push
or
jp
nop
shl
pop
mov
je
add
inc
add
mov
lock
fisub
inc
aas
fistp
ins
shr
pop
inc
push
inc
inc
aas
push
dec
inc
and
mov
jae
xchg
addr16
push
pop
push
add
mov
fcom
sub
adc
inc
or
add
fidivr
mov
mov
pop
xor
aad
jbe
mov
push
inc
mov
sub
(bad)
jmp
pop
clc
add
xor
cmps
daa
(bad)
fwait
cdq
mov
cmp
test
mov
inc
ret
adc
neg
push
mov
loop
push
outs
pop
jg
sub
add
add
dec
ins
dec
pushf
cmc
jmp
nop
add
retf
adc
in
dec
xchg
dec
xor
pop
or
or
and
or
and
mov
stos
mov
cwde
xor
mov
outs
retf
pop
mov
mov
mov
jmp
sti
inc
je
push
xlat
inc
dec
ret
xor
sub
or
sub
retf
dec
lahf
stos
fild
(bad)
imul
add
into
cmp
mov
(bad)
aam
mov
mov
jmp
jp
dec
adc
inc
push
adc
fsub
and
sub
int3
div
(bad)
std
add
not
rcl
pop
mov
xor
sahf
sbb
add
cs
sbb
stos
outs
call
xchg
xor
mov
mov
pop
sahf
pop
push
pop
mov
xchg
and
inc
rol
iret
adc
ret
jg
lods
mov
lahf
push
push
pop
push
cmp
push
inc
cmp
repz
dec
(bad)
call
jno
dec
xchg
(bad)
shl
or
(bad)
pop
(bad)
call
mov
lods
data16
js
mov
fimul
nop
dec
sti
sub
div
cld
mov
xchg
daa
inc
(bad)
inc
sub
loope
push
into
and
add
xor
push
hlt
mov
nop
cmp
jns
inc
mov
pusha
movs
mov
pop
inc
jo
pop
test
test
xor
or
sub
test
mov
pusha
push
mov
adc
pop
lock
retfw
lahf
das
sti
out
pop
test
enter
pop
and
pop
xchg
jl
arpl
jle
jecxz
adc
mov
fnstcw
mov
pop
mov
rcr
add
std
(bad)
mov
push
push
add
xchg
adc
or
inc
cmp
rol
pop
std
xor
lea
mov
pop
cmp
inc
mov
mov
push
jno
lds
movs
add
imul
mov
lock
push
mov
scas
call
pop
xor
inc
cmp
sub
fld
xor
xor
inc
and
dec
mov
xor
push
pop
cmc
xchg
or
inc
(bad)
push
mov
cmp
dec
cdq
or
adc
das
sbb
or
fsubr
(bad)
rol
pop
dec
pop
test
mov
mov
and
pusha
movs
ret
(bad)
stos
push
xor
lods
pop
out
adc
imul
scas
icebp
xchg
nop
leave
out
mov
inc
shl
xor
push
add
xor
mov
aam
outs
js
push
ins
(bad)
and
pop
icebp
xor
and
dec
or
push
inc
sti
pop
lahf
inc
lds
nop
push
(bad)
or
punpcklbw
in
out
jb
pop
add
data16
lods
push
jmp
adc
into
jp
out
movd
dec
adc
pop
addr16
jmp
add
pop
or
push
fadd
pop
add
ss
dec
xchg
arpl
fcom
shl
call
ss
dec
hlt
rcl
pop
out
scas
push
gs
jge
aas
cmps
mov
in
call
loopne
repz
dec
pop
add
data16
mov
mov
push
push
imul
out
jb
aas
lods
mov
or
mov
sti
retf
jnp
fidivr
js
int3
mov
mov
dec
add
push
add
mov
sti
pop
mov
imul
rol
ja
add
call
cmp
and
mov
dec
and
xor
inc
into
outs
push
shr
push
sub
inc
jl
call
in
test
push
cmp
and
mov
std
(bad)
stc
add
push
add
std
push
or
and
push
push
push
sbb
imul
mov
retf
push
push
mov
and
pop
cmp
in
fwait
jb
add
cmp
cmp
cli
dec
popa
mov
lea
add
and
ss
gs
xchg
inc
mov
add
inc
and
add
addr16
pop
je
ret
addr16
add
mov
test
sbb
xor
not
fild
jg
mov
push
dec
pop
sub
ja
mov
add
inc
or
push
aam
(bad)
daa
or
jmp
loop
push
psubsb
cmps
inc
fdivr
call
ret
out
add
xor
dec
jno
test
je
adc
mov
push
add
pop
inc
mov
pop
mov
jmp
cmp
aaa
sbb
jno
mov
mov
repz
jg
xchg
icebp
lahf
aaa
mov
pop
pusha
inc
add
inc
add
fs
ret
(bad)
loope
jo
dec
je
add
mov
dec
sub
je
(bad)
ja
jecxz
mov
imul
add
and
fld
test
or
sar
or
fs
pop
mov
push
xor
jmp
pop
and
xor
sbb
mov
push
push
dec
popa
add
push
sbb
call
mov
add
jb
cmp
jp
and
(bad)
test
or
imul
stos
stos
pop
push
dec
rcl
xchg
lahf
ja
mov
add
out
push
pop
jae
call
push
aas
dec
or
ins
inc
sbb
and
cld
jae
xor
pusha
pop
cld
mov
mov
icebp
push
cli
push
push
shl
pop
aaa
mov
dec
je
add
inc
cmp
cld
inc
ds
add
popa
pop
mov
mov
dec
dec
inc
jl
sbb
sbb
xor
retf
mov
xchg
adc
(bad)
(bad)
cld
xor
sub
pop
xchg
in
xlat
sbb
cmp
gs
inc
je
fild
inc
mov
cmp
add
inc
nop
add
gs
adc
cmp
jb
das
mov
(bad)
data16
mov
data16
xor
ds
add
inc
mov
and
mov
mov
loop
nop
or
inc
hlt
cdq
fnstsw
les
out
mov
push
cmp
mov
fiadd
(bad)
push
mov
jg
sub
xchg
sti
push
imul
jae
out
call
dec
pop
mov
inc
pop
mov
mov
inc
push
adc
stos
add
or
fst
xor
pop
jbe
push
sar
or
sar
bound
push
inc
and
sbb
pop
cld
mov
pop
xchg
call
nop
mov
cld
jmp
or
jno
out
dec
ret
cmc
push
shl
sub
mov
pop
jle
fdiv
cli
(bad)
jmp
fdiv
inc
pop
std
adc
pop
add
add
(bad)
push
jae
dec
(bad)
fisttp
jae
jmp
test
xlat
je
(bad)
jg
loope
mov
xchg
add
mov
push
cmp
xor
dec
push
mov
inc
cld
fild
cmp
bswap
push
and
inc
cmp
loope
jecxz
bound
add
push
fs
clc
pop
imul
xchg
push
mov
(bad)
jl
pop
std
arpl
scas
mov
or
cli
je
cmp
adc
inc
std
add
sub
push
sub
mov
sti
test
mov
outs
fs
clc
das
ss
pop
mov
pop
pop
inc
(bad)
aas
ret
sar
push
test
sahf
pop
push
mov
mov
ror
pop
cmp
sbb
xchg
add
xchg
xor
mulps
out
sahf
xchg
stos
fiadd
sub
js
iret
(bad)
mov
clc
movs
call
rol
and
shl
inc
pop
ja
dec
jbe
xor
inc
inc
ret
mov
(bad)
out
adc
xor
sti
(bad)
sub
xor
rol
mov
cmp
sar
out
push
jmp
clc
out
jns
out
pop
stos
pop
dec
cli
daa
pop
aas
bound
aam
add
lock
jae
into
push
add
mov
add
pop
shl
arpl
ret
and
inc
push
jmp
cld
rol
jmp
jmp
push
push
sbb
pop
dec
and
fistp
clc
clc
add
inc
push
paddd
mov
pushf
arpl
sub
push
inc
xchg
xchg
push
xchg
loop
stc
out
xor
sbb
add
jae
fisttp
sahf
cmc
fmul
out
sub
call
inc
mov
xchg
es
lock
add
add
jo
pop
je
push
inc
sbb
pusha
fucomip
repz
mov
retf
xor
cs
add
mov
stos
sbb
lahf
movs
add
pop
mov
in
mov
or
jecxz
jg
test
push
(bad)
add
or
add
mov
js
lock
xchg
stos
push
in
adc
inc
test
out
mov
call
(bad)
nop
movs
adc
enter
inc
loop
test
sbb
cmc
outs
add
dec
out
sub
push
out
imul
lods
dec
push
and
push
add
iret
adc
test
pop
inc
das
ror
or
dec
sti
and
bound
cmp
sti
das
ret
adc
aas
jecxz
ret
(bad)
outs
scas
mov
xchg
dec
add
add
sub
or
mov
mov
or
jbe
sar
dec
les
add
je
ds
jp
loopne
fld
inc
inc
retf
les
(bad)
mov
lahf
sub
aad
mov
xor
(bad)
xor
out
pop
cld
je
add
jg
pop
inc
movq
cmp
mov
arpl
sbb
(bad)
sti
add
and
movs
(bad)
fcomp
ds
add
pop
add
jno
out
cld
and
pop
inc
out
add
cmp
dec
and
sti
in
cmp
mov
add
scas
push
inc
pushf
(bad)
movs
jg
ss
clc
fistp
pop
push
call
scas
pop
rcr
aam
add
enter
or
push
cld
xchg
xchg
ret
adc
out
sbb
cmp
pop
lock
dec
push
fadd
dec
sar
inc
cmp
push
ja
dec
test
mov
sti
inc
dec
xchg
mov
pop
sbb
paddq
pop
push
dec
and
outs
pop
dec
pusha
aaa
mov
cmp
inc
adc
inc
push
xlat
mov
jg
mov
ror
add
inc
ins
cdq
mov
enter
cld
out
arpl
lds
int3
les
and
call
sbb
ret
icebp
sbb
adc
pop
or
cmp
movs
or
jno
sbb
(bad)
or
bound
jmp
in
mov
pusha
xchg
lds
inc
add
add
in
imul
jo
mov
mov
pop
inc
sbb
mov
pop
loope
adc
enter
adc
lds
dec
pop
and
stos
add
sti
ins
lock
mov
inc
inc
outs
je
or
xchg
xchg
mov
xchg
je
outs
push
xor
inc
pop
iret
inc
inc
sbb
icebp
xor
addr16
(bad)
sbb
adc
pop
jg
fs
(bad)
pusha
sti
hlt
push
(bad)
fbld
mov
xchg
push
jle
(bad)
mov
mov
fdivr
mov
adc
outs
xor
jbe
inc
push
lds
gs
dec
ret
push
das
mov
add
add
bound
xor
dec
(bad)
push
sti
jno
pop
popa
and
mov
dec
ficomp
imul
in
push
pop
(bad)
loop
mov
mov
xlat
push
mov
or
rol
movs
(bad)
lahf
or
sbb
jp
jmp
mov
sub
arpl
out
pop
enter
pop
ins
mov
jmp
sub
mov
push
fbld
push
and
add
retf
mov
ret
inc
inc
and
cmp
js
aaa
std
or
inc
cmp
je
sbb
push
jg
inc
fs
ret
out
inc
popf
and
and
outs
adc
pop
inc
push
pop
adc
fwait
nop
xchg
mov
push
xor
das
jmp
aaa
add
add
add
sbb
add
jl
(bad)
ror
rol
ret
mov
je
sub
add
jbe
and
inc
std
fs
out
sti
mov
and
mov
dec
cld
cs
lahf
mov
xchg
retf
pop
mov
call
or
and
inc
mov
mov
adc
aas
aas
fbld
or
pusha
inc
out
push
fst
xor
fs
pusha
dec
cmp
adc
cmp
inc
push
xor
icebp
mov
inc
aas
dec
cmp
js
fld
jg
xor
pop
jp
jmp
mov
out
dec
mov
iret
cmc
inc
adc
pop
(bad)
jbe
retf
mov
ret
mov
jp
jg
inc
cwde
jecxz
push
or
jmp
std
or
fs
xlat
je
add
ins
inc
sub
enter
mov
jl
pop
outs
inc
test
inc
ss
(bad)
sbb
and
das
and
inc
ret
add
xor
je
sub
pop
icebp
add
or
jae
(bad)
retf
sti
test
or
imul
addr16
inc
or
xor
xchg
add
aam
fwait
add
jecxz
xor
cli
imul
adc
repz
inc
inc
not
and
push
stos
fcmove
mov
dec
sti
cs
loope
push
rol
sbb
inc
aas
ss
add
push
mov
push
push
loopne
cmp
ins
pop
(bad)
adc
int3
or
in
fs
pop
(bad)
shl
xchg
dec
loop
add
dec
pop
fmul
stos
inc
call
aaa
mov
push
shl
mov
dec
xchg
call
ret
pop
bound
aas
frstor
sbb
jbe
out
fisub
sub
xchg
or
push
jae
and
xor
bound
add
or
xor
and
mov
(bad)
lock
(bad)
aas
movs
or
imul
cmp
lea
test
mov
out
sbb
inc
call
ficom
xor
sub
or
push
js
pop
cld
lods
mov
sbb
add
ret
adc
addr16
loop
clc
mov
cmc
pop
pop
push
pop
sti
and
cdq
xchg
mov
push
or
mov
ret
push
int3
fsubr
add
dec
sub
mov
call
push
sub
adc
mul
sbb
mov
jmp
or
fild
xor
test
inc
scas
xchg
lock
cmp
inc
je
lock
push
pop
out
icebp
jg
test
dec
jmp
push
sti
inc
aad
mov
inc
jge
pusha
and
sar
xor
std
sbb
out
mov
les
out
or
repz
test
fs
data16
sbb
add
jne
ja
mov
push
sbb
or
push
sub
dec
and
add
mul
enter
inc
loope
mov
imul
xor
and
fisttp
repnz
xchg
outs
(bad)
(bad)
outs
fild
mov
inc
inc
inc
mov
pusha
xchg
adc
std
jp
inc
sbb
mov
add
inc
pop
dec
scas
adc
sar
mov
jmp
add
sahf
xor
push
inc
mov
loop
sbb
pop
lock
xor
pop
add
pop
rcr
or
mov
mov
cmp
add
ja
jg
mov
imul
jmp
aas
pop
push
movs
jmp
or
adc
xlat
pop
scas
in
(bad)
jg
or
ins
and
pop
ret
inc
pop
or
or
adc
add
ror
not
pop
push
adc
jg
(bad)
mov
ret
cmp
fs
mov
imul
pop
cs
test
das
mov
cld
adc
pop
add
sar
fild
pusha
pushw
ss
mov
gs
add
mov
xchg
push
or
inc
(bad)
es
and
loope
jge
jmp
mov
dec
emms
inc
dec
dec
or
sti
fadd
test
push
sahf
adc
or
push
lods
hlt
inc
push
xor
mov
fdiv
push
leave
jl
sbb
jno
xchg
mov
dec
cmp
mov
ror
jbe
sbb
lods
data16
hlt
inc
push
inc
mov
push
xchg
(bad)
xrelease
pop
inc
outs
mov
mov
call
shl
inc
dec
jmp
and
stos
fidiv
out
clc
jmp
fadd
jo
mov
sbb
inc
dec
aas
dec
adc
aad
loope
mov
in
ror
pop
cmp
pop
jg
push
xchg
mov
push
add
cmp
jle
push
scas
and
push
aas
(bad)
jns
jae
or
(bad)
mov
pusha
aad
cs
cmp
add
mov
and
mov
jg
push
rcl
fsubp
(bad)
cmp
stos
out
icebp
adc
scas
(bad)
std
ins
fidiv
xchg
(bad)
cmp
pop
sbb
xchg
test
or
cmps
fsub
es
imul
sub
or
lahf
add
std
pusha
dec
call
je
mov
xchg
fbstp
or
sbb
xor
sub
xchg
add
inc
jecxz
mov
push
jae
bound
add
inc
call
adc
dec
stos
cmp
sub
jns
sbb
aaa
not
add
(bad)
jmp
fwait
mov
mov
cmp
or
inc
xor
jb
mov
inc
inc
jb
bound
fdivr
in
es
stos
xor
inc
mov
add
xchg
cmp
or
cmp
add
mov
scas
pop
mov
mov
inc
call
pop
fbstp
bound
inc
sti
ffree
inc
pop
add
add
lock
push
xchg
ret
add
sub
add
jae
(bad)
out
jmp
inc
add
sbb
mov
repz
cmp
push
sar
push
or
xor
sahf
cmp
adc
mov
out
je
mov
stos
loop
inc
mov
jge
sti
xor
mov
jae
or
and
and
push
mov
pop
call
(bad)
cld
pop
push
xor
mov
outs
dec
hlt
jmp
jae
sti
sbb
mov
add
ret
inc
and
jnp
shl
mov
enter
xor
fstp
pop
mov
aam
push
or
out
pop
pop
(bad)
jecxz
cs
mov
lock
mov
push
inc
inc
(bad)
(bad)
and
jmp
fs
int3
je
(bad)
xor
pop
sar
fst
mov
cmp
push
xor
inc
jl
lds
push
cmp
sti
mov
icebp
arpl
jg
mov
ret
ret
popw
sub
inc
loopne
pop
es
push
cli
out
or
mov
fisttp
ret
rcl
push
sar
push
mov
hlt
and
push
out
les
jp
stos
retf
call
mov
push
(bad)
outs
inc
mov
call
rcr
inc
es
push
(bad)
std
inc
jae
pop
and
jg
mov
add
dec
mov
(bad)
std
sbb
mov
push
push
test
(bad)
inc
add
add
or
mov
mov
std
stos
movs
add
push
dec
xchg
scas
test
and
hlt
cs
mov
aaa
add
sti
mov
cmp
pop
adc
in
jmp
sub
fld
dec
and
rcr
or
mov
push
sbb
pushf
dec
sbb
xor
mov
xor
(bad)
inc
icebp
call
es
sti
adc
(bad)
mov
sbb
ror
xchg
add
outs
pop
std
pop
fisub
mov
jno
inc
fcomip
xchg
ret
pop
mov
add
mov
jno
inc
out
pop
out
sub
and
sbb
xor
mov
jmp
int
(bad)
pop
(bad)
fild
sub
mov
mov
pop
jb
sti
aas
cld
inc
add
loope
mov
out
sbb
cld
push
lods
push
push
jae
xor
push
mov
int
push
mov
stos
ja
pop
mov
and
mov
cmc
add
dec
inc
(bad)
out
sub
mov
mov
jg
scas
mov
jecxz
push
(bad)
sub
ror
push
push
add
xor
mov
in
adc
imul
fstp
lea
arpl
and
js
ror
jae
inc
ret
call
out
and
xor
scas
inc
sbb
jmp
out
icebp
gs
lock
ins
mov
rol
addr16
add
inc
mov
mov
mov
lea
mov
outs
rcr
push
pop
mov
or
inc
cmp
add
fs
add
neg
(bad)
cli
mov
je
cmps
push
adc
mov
adc
jae
pop
pusha
retf
inc
mov
pop
mov
cmp
jbe
pop
inc
sbb
je
inc
mov
(bad)
inc
cwde
pop
mov
imul
push
or
or
add
std
fwait
sub
xor
mov
std
jg
add
mov
ficom
jg
xchg
imul
push
inc
add
pop
imul
push
sbb
add
ret
hlt
add
xchg
push
push
pop
cmp
inc
add
fcom
sti
inc
inc
push
scas
sbb
adc
inc
or
js
repz
clc
sbb
add
inc
mov
dec
int
mov
outs
push
jmp
addr16
jg
ret
dec
adc
ss
outs
dec
mov
sbb
movs
cmp
cmp
dec
sahf
into
mov
jb
and
mov
fidiv
fadd
inc
and
cmps
mov
pop
jp
sbb
pop
inc
mov
inc
mov
mov
movs
jne
icebp
inc
add
inc
jnp
dec
mov
mov
rcl
jae
aad
pop
push
test
pop
mov
cmps
call
cli
ins
inc
pusha
cmp
std
add
outs
pop
out
xchg
xor
(bad)
loopne
sub
into
mov
push
push
pusha
iret
inc
dec
mov
inc
sar
add
inc
cwde
imul
and
lods
push
cs
mov
pusha
outs
into
jae
dec
ret
call
jno
out
push
pop
repz
(bad)
aaa
bnd
jmp
lds
inc
sbb
cmc
cs
fs
mov
mov
or
arpl
jo
push
push
pop
add
push
cmp
arpl
dec
add
dec
push
into
pop
jmp
mov
add
push
jb
xchg
pop
neg
or
push
(bad)
rcl
sub
fiadd
jb
push
call
daa
mov
mov
das
and
mov
add
je
pop
or
add
ffree
(bad)
jg
jno
add
sub
jmp
pop
xor
mov
mov
test
(bad)
jge
add
adc
lock
sbb
(bad)
aas
es
xor
inc
(bad)
mov
dec
push
fcom
das
add
push
xor
daa
in
add
inc
pop
sub
(bad)
jg
sar
push
push
xor
inc
or
mov
ja
or
sub
pop
cmp
lahf
mov
push
add
push
aas
add
cli
aas
inc
aas
out
mov
retf
push
mov
inc
mov
aad
xchg
pop
fwait
xor
sti
mov
xlat
sub
add
inc
jge
scas
add
outs
add
std
mov
call
les
mov
xor
call
and
cs
sbb
and
cmp
sub
ret
jbe
out
mov
adc
ret
mov
adc
ret
(bad)
call
pop
fwait
pop
xchg
mov
mov
popa
jnp
outs
jmp
add
stc
lds
inc
iret
push
addr16
rol
(bad)
(bad)
mov
or
daa
and
cmp
aaa
fsub
mov
fimul
lock
and
mov
(bad)
or
cld
xchg
dec
jle
pop
push
push
inc
pminsw
pop
addr16
jg
fwait
cld
stos
cmp
push
scas
nop
test
pop
call
outs
push
sbb
imul
inc
test
push
mov
lock
aaa
dec
push
add
test
sub
mov
sub
push
movs
(bad)
test
fs
(bad)
cli
xor
les
stos
or
sub
das
or
inc
ret
aas
loop
shl
lds
call
arpl
cmp
js
push
mov
adc
das
cmp
arpl
ins
mov
(bad)
das
jle
out
bound
push
jmp
pop
jge
mov
jmp
push
cmp
inc
inc
gs
pop
push
dec
idiv
pop
(bad)
xor
mov
xchg
sub
loopne
and
xor
enter
pop
mov
mov
add
fild
mov
je
jb
jmp
cld
retf
les
fcom
mov
std
call
xor
inc
call
stc
mov
dec
xchg
dec
add
(bad)
aad
sub
mov
mov
jae
or
lock
add
out
push
jle
mov
into
push
sbb
fisubr
mov
add
cmp
(bad)
adc
in
inc
jecxz
aam
xchg
push
call
xor
(bad)
mov
stos
mov
adc
ret
fs
add
jg
cmp
ret
ins
js
inc
sub
sub
mov
jmp
ins
aas
std
sar
rcr
rcl
inc
push
adc
into
cmc
add
outs
inc
push
or
jae
cmp
push
sub
lahf
add
je
(bad)
ret
lods
scas
lds
or
push
pop
cmc
jle
enter
sti
pushf
mov
aas
out
add
and
dec
outs
xchg
dec
mov
xor
sbb
ret
and
mov
sub
push
push
pop
push
xchg
fisub
ss
cld
adc
sbb
xchg
push
es
add
(bad)
out
outs
mov
push
in
out
(bad)
je
inc
in
ret
jae
outs
inc
mov
ins
push
inc
(bad)
out
in
mov
(bad)
add
fistp
mov
push
xchg
push
xchg
loopne
loopne
sub
out
sbb
jp
js
push
out
push
je
(bad)
adc
mov
add
add
inc
xorps
mov
xor
ds
push
adc
lock
mov
or
jne
outs
(bad)
inc
int
ins
inc
jg
mov
mov
inc
dec
push
mov
and
(bad)
stc
inc
add
dec
clc
adc
xlat
xor
push
pusha
add
int3
or
pop
ins
push
in
lahf
icebp
jg
adc
push
pop
fcomp
jecxz
push
pop
sti
std
mov
test
sub
mov
sbb
pop
pop
jg
push
jl
stos
outs
xchg
(bad)
sbb
pop
popa
add
aam
push
clc
pop
sti
ins
push
bound
arpl
sub
cmps
iretw
dec
jmp
mov
scas
punpckhdq
jae
add
cmp
jl
xor
mov
psubsb
sub
mov
inc
(bad)
jg
hlt
popa
adc
int
mov
aas
and
pusha
mov
call
mov
pop
ins
hlt
scas
adc
add
nop
in
inc
sub
inc
or
mov
push
dec
in
pop
out
dec
sub
add
out
mov
adc
std
xor
and
call
jp
dec
es
inc
push
jo
mov
and
sub
rcl
(bad)
mov
mov
ret
or
inc
pop
cdq
icebp
aas
dec
adc
(bad)
add
rcr
jno
stos
jmp
call
mov
ret
inc
aam
repnz
fidivr
(bad)
cmc
aas
arpl
std
sub
call
push
jae
or
jge
mov
ror
lds
sbb
sbb
or
enter
shl
arpl
cmp
aam
clc
push
cli
test
jae
mov
adc
fsubr
ret
cmp
pop
retw
int
cmp
js
jae
mov
in
adc
ret
(bad)
test
inc
pop
jmp
ret
cli
pusha
cld
inc
pop
fadd
cmp
sub
pop
pusha
pop
fnstcw
add
jae
or
inc
push
push
jg
add
add
xchg
clc
inc
add
adc
popa
and
push
addr16
sbb
adc
repnz
enter
push
or
sub
mov
jg
in
add
jmp
out
inc
jmp
xor
into
div
das
add
pop
dec
mov
rcr
mov
xchg
ret
and
and
bound
mov
rol
pop
push
shl
add
sbb
mov
sbb
jnp
and
or
mov
inc
cld
inc
push
xor
pop
pop
cs
call
repz
cmp
mov
xor
inc
cmp
adc
dec
ret
and
sti
add
mov
dec
fnstsw
test
arpl
inc
fild
es
pop
pop
dec
sbb
dec
or
cli
clc
aas
adc
inc
jno
jmp
outs
fidivr
or
aam
ins
aas
dec
add
and
sar
mov
add
gs
neg
and
mov
cld
inc
std
out
stos
sbb
push
add
add
ret
inc
jge
test
sub
push
jl
icebp
xchg
mov
and
hlt
pop
mov
add
out
ss
inc
mov
aad
movs
inc
mov
push
loope
dec
out
inc
(bad)
mov
mov
call
dec
imul
ret
ret
cmp
lahf
(bad)
dec
add
je
add
jmp
mov
lds
sbb
hlt
lds
ins
addr16
xlat
cld
loope
adc
adc
cld
dec
cmps
add
imul
cmp
mov
push
pop
sti
mov
call
out
cli
int
pop
aaa
push
adc
or
test
out
mov
and
cs
dec
pop
sub
mov
mov
push
cmp
sub
out
jns
call
hlt
mov
dec
pop
and
fcmovbe
push
sub
aaa
icebp
mov
or
(bad)
clc
pop
pop
cmp
dec
sti
mov
and
vunpckhps
sub
push
out
icebp
or
adc
sbb
xchg
inc
(bad)
jg
imul
push
add
outs
push
cli
arpl
inc
xor
stos
in
cmp
(bad)
cli
outs
pop
inc
inc
push
out
ins
je
inc
adc
sbb
ds
dec
je
adc
push
dec
adc
or
ins
ror
cli
inc
pop
mov
aaa
std
fild
inc
outs
pop
cmp
push
sbb
and
outs
jae
test
(bad)
aad
jae
movs
and
lds
js
push
sti
inc
js
inc
dec
nop
jno
jne
sbb
mov
fisub
fisub
mov
test
sub
sahf
and
adc
add
xchg
xor
test
ret
or
inc
pop
cmc
xchg
xor
cmp
mov
ret
call
stos
out
clc
aas
xor
cmp
stos
sti
cli
sti
data16
aaa
inc
iret
ret
fwait
push
mov
jg
xchg
pop
dec
inc
inc
adc
dec
and
pop
iret
mov
jae
pop
data16
pop
outs
inc
call
outs
pop
inc
mov
pop
enter
sbb
fs
(bad)
add
mov
jle
arpl
aas
test
(bad)
stos
jne
pop
test
jecxz
jmp
ret
mov
lock
sub
loop
call
mov
test
cwde
inc
xchg
cmp
sbb
loopne
fs
mov
sub
sar
or
out
arpl
xor
cli
pop
shr
sub
or
push
test
stos
push
call
push
into
pop
jae
pusha
mov
test
pusha
hlt
xchg
neg
push
fistp
(bad)
ja
inc
arpl
inc
sahf
push
test
sub
add
sub
test
cli
jbe
push
push
out
aas
das
aas
shl
das
and
inc
sub
nop
mov
(bad)
mov
in
icebp
xlat
jb
cmc
pop
or
mov
pop
bound
daa
add
test
mov
mov
cwde
push
out
(bad)
cmp
psrlw
jmp
outs
push
jmp
and
pop
add
pop
dec
pusha
push
pop
ins
popa
mov
push
inc
cmps
mov
(bad)
nop
push
leave
or
addr16
bound
jle
test
inc
or
and
inc
mov
ret
mov
idiv
inc
mov
add
cs
mov
outs
push
push
sbb
xlat
mov
lds
cmp
push
cmp
xlat
pop
xchg
adc
push
std
sti
or
test
imul
hlt
xlat
inc
call
ss
push
scas
add
pop
add
and
nop
pop
repz
adc
add
or
das
aam
mov
call
aas
sti
jb
inc
mov
mov
pop
adc
outs
or
ds
xchg
xor
fisttp
jae
ror
adc
jae
addr16
dec
pop
mov
push
push
cli
(bad)
xchg
les
push
(bad)
imul
cmp
adc
pusha
adc
xor
push
fidivr
inc
test
test
test
enter
pop
out
push
cld
stos
out
pop
fst
je
dec
test
and
pop
popa
clc
mov
cs
mov
mov
(bad)
push
push
push
mov
adc
or
repz
cmp
pop
inc
and
mov
lock
(bad)
mov
test
jle
not
jmp
mov
mov
outs
out
ins
(bad)
aaa
ins
push
inc
pop
loopne
and
xchg
lock
scas
inc
sub
test
(bad)
push
ins
jnp
mov
mov
xchg
pop
mov
dec
push
xchg
mov
mov
ret
shl
ss
inc
loop
inc
jg
dec
jb
(bad)
fisub
mov
dec
sbb
mov
retf
or
das
inc
cmp
sbb
jbe
ret
pop
sahf
dec
int3
test
sti
fwait
mov
add
fs
out
cmp
ja
lock
jb
inc
push
inc
xchg
xchg
bound
jae
add
mov
fdiv
sub
inc
repz
pop
or
xchg
push
inc
push
mov
enter
jp
ret
jg
ror
adc
cmc
add
push
add
mov
mov
test
nop
mov
mov
adc
cmp
inc
in
add
enter
xchg
inc
ins
add
(bad)
scas
mov
pusha
pop
mov
dec
dec
dec
daa
call
adc
mov
xlat
sub
loope
xchg
(bad)
fiadd
lock
sbb
les
push
push
inc
jmp
push
cli
pop
pusha
inc
lods
pop
cmp
cmp
and
pop
inc
(bad)
(bad)
jb
mov
sub
jnp
mov
mov
add
and
js
sub
sub
pop
sti
adc
sbb
mov
pop
push
add
nop
jmp
jmp
and
pop
out
mov
sbb
sub
mov
sahf
mov
push
int3
mov
xchg
int3
pop
sub
sti
add
cmp
call
ins
(bad)
push
scas
pop
out
mov
pop
(bad)
or
and
aas
stos
inc
adc
out
sti
cli
inc
xchg
push
mov
je
xor
mov
push
repz
dec
and
jle
mov
xchg
push
add
ret
addr16
inc
fidiv
pop
mov
aas
add
aam
xor
and
rcl
jg
pusha
(bad)
call
je
(bad)
or
aas
inc
adc
xchg
fmul
inc
les
enter
push
loope
mov
imul
inc
ins
fild
and
xor
mov
mov
out
cmp
and
push
sub
mov
dec
mov
cmp
(bad)
pop
sub
push
sti
ret
pop
mov
jg
and
mov
or
call
push
push
push
mov
add
mov
(bad)
and
xor
push
mov
out
and
pop
loop
sti
add
ret
(bad)
cli
inc
jno
sbb
imul
daa
rcl
mov
dec
xor
push
js
int
pop
scas
in
push
mov
loope
push
pushw
pop
push
add
nop
and
adc
mov
(bad)
ret
xchg
cmps
sub
lock
je
xchg
dec
neg
jno
mov
lds
pop
cmp
(bad)
sti
pop
push
loope
inc
xor
lock
je
push
ret
add
out
mov
std
xchg
xor
push
add
sbb
aad
bound
cmc
pop
mov
mov
inc
lds
or
std
pop
loope
fcomp
mov
mov
out
jle
loopne
call
xchg
inc
das
dec
fist
mov
test
push
jg
(bad)
mov
adc
cmp
push
pop
inc
adc
mov
mov
and
aas
jnp
push
popa
pop
inc
mov
jg
cld
idiv
xchg
cli
mov
jle
pop
or
scas
(bad)
adc
jmp
push
nop
fild
out
repz
iret
push
push
cmps
pop
sbb
push
sahf
inc
push
xlat
aaa
movs
fisttp
arpl
into
adc
or
aaa
test
mov
outs
jmp
out
cmp
and
xchg
movs
data16
scas
idiv
mov
sbb
mov
les
jmp
inc
xor
and
cmps
call
(bad)
push
das
add
ror
neg
std
sbb
das
and
dec
cli
popf
sar
addr16
inc
bnd
mov
jmp
call
push
push
inc
inc
sbb
mov
outs
je
jge
mov
mov
outs
clc
(bad)
out
xor
cmc
cmp
xlat
call
cli
cmps
retf
pusha
adc
(bad)
adc
arpl
jl
mov
sub
lock
pop
ret
jmp
loop
lock
jmp
(bad)
mov
mov
adc
retf
or
push
adc
(bad)
ja
jp
xor
std
(bad)
dec
inc
adc
jae
add
add
sbb
xlat
inc
dec
push
rol
sub
call
mov
push
imul
pop
inc
add
adc
pop
push
jmp
sbb
(bad)
add
(bad)
push
mov
mov
aas
push
push
(bad)
mov
push
add
ret
jns
mov
aad
mov
ins
ret
call
mov
or
pop
add
xchg
inc
inc
pop
mov
inc
ins
xor
daa
add
inc
inc
xor
das
hlt
or
add
imul
ins
add
fsubr
jmp
clc
mov
mov
or
jp
ins
jg
inc
fstp
cvtps2pd
(bad)
pop
xchg
mov
pop
sub
lea
push
push
call
cmp
pop
cwde
fdiv
add
mov
xchg
jmp
cmp
dec
inc
loop
jmp
(bad)
inc
fisttp
xlat
mov
pusha
(bad)
inc
sbb
pop
mov
dec
xchg
mov
xchg
cld
pusha
rol
xchg
mov
xchg
xchg
or
adc
push
xchg
call
or
pop
fcom
popa
test
clc
jg
mov
push
aas
(bad)
outs
xor
lahf
mov
repz
hlt
dec
and
mov
jne
push
hlt
push
aam
dec
mov
inc
ja
fild
ins
inc
movs
and
xor
xor
loopne
cs
xor
(bad)
cmp
ret
mov
sub
mov
imul
xor
fs
adc
iret
arpl
fild
mov
pusha
loopne
mov
cld
cmps
les
test
mov
pop
xor
cdq
jl
outs
std
sub
shl
lds
ins
inc
ss
mov
pop
xchg
jns
add
out
arpl
sti
inc
psllq
and
cmp
dec
sbb
in
imul
inc
xor
(bad)
ds
jmp
mov
je
out
(bad)
push
pusha
in
mov
xor
fiadd
iret
mov
into
push
inc
pop
mov
out
ins
ss
inc
sbb
lock
jp
pop
dec
pop
(bad)
jb
pop
ins
pop
adc
and
add
jg
jge
imul
out
sete
stos
add
ficom
cwde
pop
movs
inc
mov
mov
push
sub
sub
mov
pop
xor
imul
adc
jnp
sub
shl
dec
xchg
and
xchg
pop
icebp
sbb
adc
aaa
mov
or
push
shl
mov
jnp
add
test
(bad)
dec
out
adc
shl
mov
test
test
push
mov
das
fadd
dec
aam
punpckhwd
std
(bad)
in
mov
inc
arpl
cmp
out
inc
mov
std
out
ret
aas
mov
sti
inc
adc
(bad)
call
jg
ret
and
push
xor
xor
sub
rcl
shl
adc
hlt
test
(bad)
cmp
xor
je
push
or
in
dec
in
(bad)
ds
or
outs
or
push
enter
ss
xor
not
ss
pop
dec
pop
out
xchg
or
pusha
dec
xchg
jp
(bad)
sub
test
sub
pop
and
inc
loope
icebp
mov
or
jl
sti
imul
pop
clc
ret
cld
(bad)
ja
movs
iret
xlat
aaa
mov
jle
ror
push
add
jp
aas
dec
push
movsx
add
sub
mov
(bad)
jl
int3
gs
add
es
mov
int3
and
xchg
jp
mov
sbb
(bad)
mov
or
nop
xchg
mov
mov
add
or
dec
addr16
push
jmp
out
inc
and
aam
cld
(bad)
aaa
stos
scas
push
cmc
(bad)
mov
ret
jnp
mov
pop
dec
cld
cmp
je
pop
or
mov
cli
xchg
add
outs
popa
(bad)
call
pop
(bad)
sub
mov
jecxz
push
xor
add
ud2
cwde
add
shl
mov
push
sub
sbb
dec
(bad)
fidiv
adc
mov
dec
jl
arpl
aam
fisubr
xchg
push
mov
push
arpl
test
sbb
mov
jp
jmp
sub
jmp
push
push
fild
retf
jae
jge
pusha
adc
sti
pop
push
or
int
cmp
jmp
fdiv
hlt
mov
inc
dec
mov
jae
push
(bad)
das
or
xor
pop
adc
xchg
and
push
push
add
mov
or
das
jp
inc
xchg
adc
mov
push
pop
xlat
repz
shl
sti
imul
(bad)
das
or
mov
(bad)
pop
pop
push
adc
xlat
ja
lods
loopne
mov
sub
cli
jecxz
std
sub
mov
enter
or
movs
or
arpl
sbb
hlt
pop
pop
pop
pop
add
sbb
mov
fs
or
enter
xor
std
inc
and
call
mov
arpl
ret
(bad)
mov
adc
mov
mov
or
jecxz
or
sub
aaa
pop
arpl
pop
pusha
jp
mov
ror
cs
push
call
stc
fldcw
sbb
jne
jmp
xchg
mov
(bad)
fwait
jmp
(bad)
inc
xor
xchg
xchg
ins
inc
mov
inc
pop
fidivr
pushf
inc
ficom
adc
mov
pop
fs
jg
or
sbb
mov
js
sbb
das
inc
out
pop
pop
clc
pop
push
sbb
pop
fs
jmp
pop
or
mov
aad
outs
push
push
(bad)
inc
into
aam
ror
es
xor
aaa
push
sbb
and
outs
sar
mov
pusha
inc
inc
xchg
lods
rol
mov
sbb
dec
jecxz
or
(bad)
mov
pop
push
fld
aaa
pop
mov
jmp
bndstx
push
sub
xor
pushf
mov
dec
mov
or
fwait
xchg
imul
lahf
push
dec
shr
mov
add
or
dec
add
mov
jno
pop
jg
sbb
mov
iret
xor
push
scas
inc
dec
inc
les
inc
cmp
int3
cmpxchg
jmp
lock
fimul
inc
inc
ja
out
rol
test
outs
pop
das
imul
mov
and
mov
div
inc
cmp
icebp
push
add
and
and
fwait
scas
dec
adc
inc
fwait
pusha
mov
fs
pop
and
inc
sub
jmp
and
sti
push
add
xchg
pop
jae
xchg
cdq
and
loopne
fs
movs
push
cmp
adc
push
clc
out
cli
or
addr16
or
push
jb
loopne
mov
cli
xor
mul
imul
jecxz
pop
jno
hlt
sub
ret
data16
fs
loopne
push
loopne
push
icebp
(bad)
cli
inc
mov
and
or
test
adc
ss
inc
or
add
mov
xchg
gs
sub
jae
add
les
daa
movs
xor
push
push
sub
pusha
xchg
push
push
nop
repnz
push
inc
loop
jno
test
xchg
push
sbb
cld
xlat
xchg
lahf
and
xlat
inc
std
sub
mov
sub
out
mov
scas
xor
push
mov
add
daa
adc
mov
xor
mov
inc
imul
cs
pop
mov
jmp
adc
add
les
shr
(bad)
adc
xor
add
push
push
sub
(bad)
jmp
mov
push
jae
inc
pop
and
adc
jo
(bad)
lahf
inc
inc
cmp
add
imul
sub
pop
adc
outs
(bad)
in
sub
inc
push
cmp
dec
adc
and
sbb
xor
mov
fisub
fimul
mov
push
clc
cmp
outs
arpl
mov
jb
add
pop
jmp
cmps
mov
push
gs
cld
std
(bad)
push
out
sbb
inc
dec
(bad)
std
js
ror
test
jmp
out
jl
mov
and
(bad)
outs
inc
or
aas
push
out
push
pop
bound
outs
mov
cmp
movs
push
data16
add
lea
cld
dec
cld
(bad)
dec
mov
imul
xor
fidivr
adc
pop
jl
adc
retf
sbb
sub
dec
in
loop
push
adc
dec
jle
xor
xchg
jle
in
mov
add
push
ror
jae
sar
ins
ds
scas
adc
pop
retf
xor
and
jbe
xchg
add
add
mov
das
fmul
stos
cmc
mov
sub
sub
(bad)
gs
mov
mul
repz
push
xchg
dec
adc
push
inc
outs
xchg
or
adc
aas
cmc
(bad)
addr16
lds
pop
imul
pusha
mov
nop
jnp
lods
mov
sub
addr16
test
mov
cmp
pop
les
dec
inc
and
mov
add
mov
push
lds
inc
inc
mov
aam
pop
lds
fwait
mov
cld
out
jno
data16
test
add
mov
add
inc
out
loope
jmp
iret
mov
scas
lods
ret
or
or
sub
xor
adc
jmp
mov
mov
xor
ins
sbb
and
pop
inc
ret
and
sub
adc
add
xor
ins
mov
adc
push
mov
repz
sub
or
arpl
enter
and
out
inc
pop
ret
push
mov
outs
xor
add
xchg
push
mov
rcl
add
sbb
mov
inc
icebp
pop
pop
lock
movs
mov
test
cmp
xchg
push
jg
mov
add
cmp
aam
adc
add
jg
mov
sbb
pop
jmp
cmp
adc
dec
ds
inc
sub
or
mov
ret
je
repz
cmp
cmp
pushf
pop
pop
pushf
pop
cmps
ja
mov
outs
jmp
inc
sbb
mov
adc
cli
fstp
rcl
push
jecxz
outs
sar
lds
or
mov
push
mov
std
or
rcr
adc
neg
imul
push
cli
jg
jmp
outs
mov
cwde
mov
jl
test
mov
push
mov
sahf
push
out
mov
inc
daa
mov
fidiv
inc
push
xchg
inc
(bad)
rol
add
std
push
jns
ret
xor
ins
mov
aad
adc
out
ins
aaa
and
mov
inc
inc
jmp
mov
mov
add
xchg
outs
pop
ret
sbb
push
fdecstp
jae
rol
push
arpl
in
inc
xor
std
adc
lds
sub
enter
mov
dec
pusha
jmp
out
dec
js
mov
xchg
mov
pop
push
mov
xor
mov
jl
enter
push
mov
xchg
leave
into
mov
jmp
(bad)
sub
dec
mov
push
cli
jmp
mov
push
inc
jmp
add
push
mov
enter
inc
jmp
jae
test
setae
jno
out
dec
jmp
push
hlt
aas
inc
in
mov
sub
and
mov
add
add
movs
repz
movs
jge
scas
lods
push
pop
mov
adc
clts
pop
lods
adc
mov
cwde
pop
add
stos
enter
imul
mov
mov
cmp
loopne
ret
jp
loopne
gs
rcr
and
sbb
(bad)
lock
ins
pop
add
inc
add
loopne
dec
lods
add
mov
sbb
repz
add
sbb
jae
daa
rcl
fdivrp
bnd
push
lock
(bad)
push
xor
out
(bad)
jge
jae
clc
cmp
lea
pusha
jg
inc
inc
jg
out
sti
jg
in
push
jge
and
jmp
sbb
mov
xchg
es
push
inc
dec
outs
inc
inc
jbe
jno
out
xchg
ret
mov
dec
push
add
nop
and
shl
aad
add
push
inc
aad
jg
xor
ret
or
pop
idiv
aaa
dec
pop
add
fisttp
repz
std
mov
popa
sbb
or
outs
and
je
or
fdivr
(bad)
cli
dec
push
sbb
mov
push
jae
inc
pop
pop
clc
mov
add
or
sub
les
mov
jne
xor
mov
inc
in
jg
jmp
sar
push
cmps
add
inc
push
ds
fmul
ret
cmp
cmp
push
pop
std
fs
out
jg
adc
add
push
xor
mov
sub
arpl
sbb
pop
pop
sbb
ficom
addr16
rcr
mov
xor
dec
adc
cli
dec
call
imul
rol
cmps
jl
popa
sub
sub
outs
aas
ret
inc
jo
xor
fiadd
fs
sub
inc
inc
outs
cmp
or
dec
ret
push
inc
mov
in
(bad)
sub
call
pop
xor
hlt
jl
jmp
or
inc
je
xor
bound
stos
xchg
pop
adc
(bad)
sub
and
xchg
call
call
movs
cmp
arpl
cld
xchg
mov
das
jmp
std
mov
loop
loopne
mov
pop
jg
fisub
outs
mov
pop
sar
mov
test
dec
and
imul
loopne
add
jmp
jmp
push
ss
sbb
add
pop
add
jle
hlt
xchg
inc
outs
and
xchg
xor
pop
fsubp
sar
imul
bound
sti
idiv
fld
mov
sub
sbb
ins
cmp
dec
jae
pop
dec
jecxz
add
push
add
mov
and
mov
out
sti
push
or
pop
std
outs
add
push
pop
add
cmps
inc
stos
aam
cld
sbb
mov
int
sub
mov
call
(bad)
rol
movs
mov
inc
mov
or
mov
pop
and
push
cmp
mov
add
dec
or
(bad)
push
sbb
sahf
out
dec
sti
push
inc
jb
cmc
(bad)
stos
push
pop
push
int
xchg
push
xchg
jmp
adc
jnp
ins
call
xor
ret
mov
cmp
mov
(bad)
jmp
sub
bound
movs
aad
pop
xor
push
mov
sub
fistp
loopne
addr16
scas
test
sub
lock
jg
pusha
xor
inc
pop
push
mov
cmc
add
push
add
test
ss
add
popf
cli
add
std
jno
jns
jo
mov
mov
pop
sbb
dec
pop
inc
sar
call
inc
pop
mov
fisub
adc
sti
pop
cmp
fsubr
mov
rol
mov
test
xchg
mov
cs
xor
and
adc
push
and
cmp
outs
mov
push
inc
sub
ins
(bad)
out
ret
call
push
add
int3
fcmovu
hlt
inc
or
add
pop
mov
pop
mov
push
arpl
mov
loopne
out
mov
dec
popa
and
mov
pop
sbb
fild
xor
out
out
mov
sbb
add
out
hlt
pop
das
cmps
sbb
mov
dec
inc
jle
jmp
or
fs
mov
sbb
and
idiv
push
pop
cmp
call
aam
and
inc
scas
lds
inc
std
xchg
and
jmp
retw
lock
pop
ss
icebp
in
pop
aas
inc
add
inc
mov
dec
cli
mov
pop
push
enter
and
pop
inc
pop
jge
or
adc
repz
add
add
push
xchg
pop
mov
cld
sub
fcomip
cmp
inc
(bad)
pop
mov
jp
mov
add
shl
imul
hlt
addr16
jno
push
add
aas
inc
fisttp
pop
and
in
mov
jo
and
aas
inc
cli
sbb
outs
call
jmp
outs
add
setg
fs
xchg
das
clc
sbb
(bad)
sub
mov
aas
sbb
or
xchg
lahf
mov
lds
(bad)
mov
push
dec
pusha
inc
dec
pop
mov
or
add
pop
adc
es
ficomp
out
out
mov
les
lods
cmp
retf
push
scas
pop
xchg
or
sub
mov
mov
jg
out
adc
loope
aad
sub
push
fdiv
add
(bad)
fdivrp
inc
and
xor
mov
stos
mov
jae
test
(bad)
lahf
popa
int
inc
dec
mov
xchg
mov
inc
xchg
and
push
pop
int3
push
inc
enter
mov
mov
pop
sub
outs
inc
out
mov
fld
lds
inc
mov
cwde
adc
dec
or
out
stos
add
push
(bad)
(bad)
sub
mov
cmp
out
mov
sub
jle
mov
lahf
fstp
nop
mov
lock
shr
mov
dec
pop
push
out
mov
or
fs
mov
or
pusha
call
jae
cmp
mov
in
aas
out
aaa
ds
je
inc
(bad)
stos
adc
call
pop
mov
cld
not
push
and
xor
mov
or
ret
mov
js
dec
add
mov
std
scas
inc
mov
xchg
lock
and
fnstcw
push
inc
cmp
mov
fistp
(bad)
fbstp
jle
pop
mov
mov
stos
inc
and
je
sub
(bad)
call
(bad)
sbb
ret
mov
cmp
cmp
inc
cmp
push
inc
sahf
adc
and
xchg
and
adc
mov
clc
add
mov
pop
out
rol
fwait
shr
mov
mov
loope
jb
inc
mul
(bad)
and
or
ins
ins
cmp
(bad)
add
xor
fsub
xor
mov
(bad)
jg
mov
cmps
call
pop
xchg
mov
mov
pop
jno
ret
jp
div
or
ret
clc
jmp
ficom
inc
out
jle
add
ret
out
lahf
out
inc
jmp
int3
sbb
mov
xor
add
jle
push
aad
and
xchg
shr
ss
push
shl
inc
cmps
(bad)
pop
add
push
jp
stos
inc
(bad)
cmp
lahf
inc
and
mov
mov
add
retf
ins
xor
inc
jb
cmp
(bad)
es
cdq
(bad)
jg
mov
jno
and
ret
dec
xchg
dec
inc
fadd
hlt
sub
repz
inc
add
jge
pop
or
repnz
mov
mov
call
add
enter
and
mov
sub
(bad)
push
lods
sub
nop
sub
scas
cmp
pop
dec
ret
push
fs
jmp
pop
sub
cld
jns
mov
cmp
dec
aad
inc
add
fstp
jecxz
jae
dec
add
(bad)
inc
xchg
je
xor
or
adc
imul
xor
push
add
mov
dec
inc
fadd
add
ds
repz
fs
push
inc
add
push
cli
push
xor
xchg
rol
into
fmul
cli
dec
or
push
aad
inc
repz
inc
outs
dec
mov
and
loopne
inc
mov
movs
arpl
xlat
jae
into
push
and
sbb
dec
push
and
in
push
in
imul
or
(bad)
adc
mov
or
inc
add
mov
xchg
out
xchg
ret
jecxz
retf
xchg
push
dec
test
test
les
aas
hlt
mov
js
push
sahf
lods
cmps
aam
inc
and
pop
pop
shl
jnp
cwde
mov
ins
xchg
jmp
add
mov
(bad)
add
movs
cmps
xor
push
xor
ret
xor
push
cmc
pop
ja
adc
adc
pop
inc
int
cvtpi2ps
inc
sti
ret
xor
sti
dec
sar
pop
xchg
and
mov
jae
scas
(bad)
and
cld
or
and
adc
pop
movs
jo
and
ins
fbstp
pop
arpl
push
xchg
inc
imul
mov
fcmovu
das
out
jo
xrelease
outs
mov
sbb
jo
pop
push
repnz
adc
cld
pop
sbb
fisttp
add
sbb
push
cli
ds
mov
cmps
dec
push
or
mov
loopne
xchg
cs
shl
mov
mov
test
sbb
loope
sbb
scas
push
cld
dec
and
add
cmp
dec
sbb
pushf
add
pushf
ret
jb
jl
ja
and
retf
mov
scas
xor
push
mov
mov
mov
push
jge
mov
gs
gs
cmp
pop
pop
pushf
test
or
lods
sbb
jmp
sar
inc
xor
(bad)
out
mov
dec
(bad)
mov
(bad)
call
(bad)
out
and
aas
add
enter
add
cli
popf
jo
push
mov
or
jne
sar
jb
aas
mov
jae
ss
dec
fadd
sti
das
cld
ss
add
cmc
xor
add
out
aaa
adc
sbb
ret
idiv
mov
icebp
mov
inc
jg
sbb
nop
mov
mov
adc
std
pop
mov
cld
mov
int3
inc
(bad)
and
test
retf
in
lds
mov
inc
xchg
pop
(bad)
adc
xor
iret
mov
add
pop
inc
pop
aas
and
or
jmp
inc
ins
dec
xor
outs
aam
mov
mov
adc
and
add
add
setl
out
cli
push
push
push
(bad)
aaa
push
cmp
sbb
rcr
pop
lds
mov
ror
loopne
xor
jp
jb
mov
add
add
scas
adc
ds
and
adc
mov
pop
inc
loop
gs
stc
push
or
inc
push
cmp
mov
cwde
retf
pop
xchg
push
or
cld
aad
test
push
cmp
lods
ret
cld
sbb
dec
inc
ret
outs
loop
adc
inc
jmp
ins
inc
icebp
jmp
std
aaa
mov
in
fincstp
out
mov
stc
add
pop
and
add
nop
outs
fisubr
into
dec
jge
sub
pop
pusha
inc
and
mov
out
mov
out
pop
pop
movs
pushf
sub
test
or
sub
call
push
leave
jmp
inc
test
lock
inc
out
sbb
iret
jbe
out
add
inc
inc
aas
add
jns
jg
jecxz
and
and
test
arpl
rol
and
mov
inc
mov
xchg
adc
fld
xor
mov
inc
jnp
mov
test
and
and
adc
inc
xchg
cmc
aaa
jmp
fwait
xor
dec
mov
cmc
dec
mov
adc
sbb
movs
je
pop
jg
pop
xchg
sar
loope
cs
mov
rcr
xchg
hlt
fs
push
test
add
adc
jle
add
fdivr
(bad)
rcl
mov
pop
(bad)
sti
std
jg
pusha
daa
jle
daa
add
int3
push
xchg
add
sti
and
call
mov
outs
(bad)
cld
scas
aas
cmp
add
ret
adc
fisubr
mov
xchg
int3
cli
mov
adc
clc
fcmovbe
jb
iret
mov
pop
pop
pop
mov
pop
mov
sar
gs
xlat
inc
pop
mov
sti
ror
ret
push
pop
(bad)
outs
or
cld
jg
inc
mov
xchg
jo
mov
cmc
inc
cmp
pushf
or
mov
test
xchg
jl
mov
test
or
scas
or
pop
clc
adc
pop
add
retf
inc
sbb
pop
adc
call
adc
push
mov
or
xor
scas
ss
pop
sti
or
mov
and
ret
and
pusha
(bad)
inc
jae
jno
fcomp
pop
xor
std
mov
jle
cli
add
jle
mov
jb
mov
popa
std
pop
clc
mov
inc
fcomp
inc
std
loopne
pop
mov
sub
das
inc
arpl
rcl
jmp
mov
test
pop
je
mov
cli
push
jmp
dec
cmp
loopne
jmp
test
or
addr16
mov
movs
test
cmp
cmps
mov
add
or
push
bound
or
mov
adc
cwde
cwde
mov
clc
(bad)
std
push
xchg
and
and
pop
cmp
sub
or
outs
iret
sub
retf
add
add
ret
mov
sbb
ss
arpl
adc
add
std
inc
cld
cmp
cmp
out
cmp
mov
iret
ret
pop
rol
inc
dec
push
sbb
adc
jmp
lds
(bad)
push
jg
mov
clc
fcmovne
out
dec
mov
push
xchg
sub
arpl
(bad)
mov
std
pop
xor
lods
mov
push
cmp
pop
mov
adc
(bad)
inc
or
push
pop
out
inc
pop
(bad)
dec
cmp
cmp
and
jp
add
aaa
dec
jae
add
ret
or
bound
iret
je
lock
imul
push
aad
scas
es
pop
test
dec
mov
fs
cli
push
add
mov
and
sub
lock
fsubr
xor
je
jbe
out
mov
shl
add
pop
das
cld
dec
fst
add
outs
xor
xor
arpl
aad
bound
nop
pop
ret
loopne
sbb
mov
push
mov
add
mov
lahf
and
mov
cmp
jae
(bad)
pop
or
lock
idiv
mov
xlat
pop
push
lock
jnp
sbb
add
jle
jmp
data16
mov
dec
push
and
pop
iret
inc
ret
aaa
add
push
dec
pusha
push
or
rol
clc
inc
mov
mov
add
mov
push
imul
outs
sbb
dec
arpl
mov
xor
and
std
add
push
xor
push
adc
xchg
sub
mov
adc
mov
and
pop
push
pop
scas
jle
not
push
xchg
push
adc
push
add
mov
ja
gs
inc
push
ja
pop
add
fs
popf
pusha
mov
jmp
fimul
dec
dec
cmp
dec
int
retf
addr16
idiv
mov
out
mov
cmp
adc
add
sbb
add
inc
push
dec
gs
inc
or
xor
ds
pop
pop
pushf
(bad)
jge
adc
gs
pop
jge
and
add
adc
xchg
lods
pop
inc
add
add
pop
sbb
and
mov
push
out
jae
or
mov
push
dec
fwait
xchg
adc
lods
ss
mov
pop
out
repz
push
push
in
ret
dec
or
fdivr
jecxz
pop
shl
or
sahf
shl
push
scas
push
into
inc
(bad)
sti
push
jae
cmp
pop
push
(bad)
xchg
movs
outs
jg
jno
lods
pop
clc
daa
xlat
repz
pop
out
add
or
or
fistp
test
lods
(bad)
pop
adc
ds
push
inc
ret
or
pop
push
inc
mov
adc
pop
xor
ror
add
loope
into
jmp
lds
and
out
inc
sub
js
push
pop
ins
push
dec
or
jg
mov
retf
push
repz
jae
mov
jno
addr16
or
scas
add
sub
add
sub
mov
sbb
nop
mov
xor
fisttp
dec
xor
mov
mov
mov
or
add
jg
mov
je
(bad)
xchg
jg
pusha
inc
mov
imul
dec
pop
je
ror
outs
sub
fmul
jmp
std
outs
imul
lods
call
mov
xor
ficom
and
aas
dec
pop
jmp
mov
sbb
jmp
adc
repz
dec
das
add
inc
mov
cdq
add
neg
aas
pop
sub
add
mov
data16
lods
sbb
inc
jns
adc
hlt
retf
fdivr
pop
rcr
inc
push
inc
or
pop
adc
pop
leave
adc
inc
bound
push
xchg
xchg
sar
or
adc
shl
js
(bad)
call
std
dec
repz
mov
add
jmp
or
fs
fs
fnstsw
cmps
xor
jl
push
inc
xchg
add
cmc
add
fisttp
sub
push
inc
jg
inc
jg
add
pop
pop
pop
add
fwait
add
es
push
lock
movs
je
std
and
jae
lock
sub
pop
jb
js
pop
inc
dec
fs
ret
jmp
ror
xchg
adc
pop
lahf
adc
and
inc
aas
inc
mov
pop
inc
fbstp
push
pop
push
sbb
add
(bad)
sahf
pop
mov
push
mov
cmp
inc
push
dec
cvttps2pi
mov
(bad)
scas
cli
push
dec
sub
ret
mov
pop
push
push
mov
fild
push
push
mov
mov
xchg
(bad)
jg
mov
test
adc
jbe
dec
cli
sub
or
fidivr
sbb
sti
jno
or
jecxz
call
inc
dec
push
scas
pop
jae
push
das
or
dec
sbb
xlat
mov
xchg
outs
dec
out
cli
add
loopne
jnp
inc
cmp
sbb
pop
mov
aas
jae
cmc
(bad)
dec
(bad)
arpl
sbb
addr16
enter
cmp
les
(bad)
sub
inc
inc
add
repz
add
add
inc
jbe
call
std
adc
or
or
pop
cmp
lds
inc
call
push
sbb
bound
(bad)
or
or
xchg
sbb
or
cmp
push
xor
mov
cmp
add
aad
dec
inc
xor
jae
xor
mov
rcr
fstp
and
jp
mov
dec
push
mov
pop
pop
int
jb
test
es
push
add
mov
or
inc
scas
mov
inc
add
mov
ret
mov
cs
pop
or
or
pop
and
mov
mov
mov
pop
inc
(bad)
mov
loop
test
push
inc
cmp
pop
mov
cli
fdivr
cld
add
or
pop
adc
(bad)
imul
pop
fidiv
cli
ins
inc
inc
aas
mov
pop
cmp
push
push
ret
inc
dec
ins
jecxz
sub
add
cmp
mov
call
push
fcos
sbb
nop
mov
mov
dec
(bad)
adc
inc
popa
rcl
ss
shl
sub
cli
inc
ss
loopne
xor
imul
pop
std
jbe
push
sbb
addr16
push
pop
xor
pop
test
jo
or
push
jno
ja
pop
std
scas
inc
test
sub
add
or
(bad)
aad
(bad)
and
jno
(bad)
(bad)
icebp
xchg
std
je
push
call
push
cmp
inc
pop
inc
mov
push
pop
test
add
adc
add
ror
das
inc
and
test
jmp
stos
push
push
pop
(bad)
(bad)
mov
pop
jo
or
add
dec
push
push
fcmovbe
enter
mov
(bad)
ins
cs
pop
dec
push
push
xchg
pop
fbstp
push
push
paddd
aas
jp
in
ret
cwde
sub
mov
inc
jmp
or
inc
pop
mov
out
jg
(bad)
ror
outs
jmp
clc
pop
sar
mov
jl
add
mov
je
jbe
inc
or
stos
pop
and
sahf
sub
pusha
jmp
test
mov
jg
or
je
push
inc
or
inc
jae
pop
fs
hlt
mov
cwde
xchg
lods
push
fild
sub
push
(bad)
ins
mov
(bad)
aas
and
out
mov
add
pop
(bad)
mov
ja
jae
(bad)
mov
sub
mov
arpl
outs
ror
fmul
and
pop
sub
add
add
sbb
mov
ss
push
and
push
or
xor
jae
mov
jmp
fmul
jg
rol
test
repz
ja
cwde
add
jmp
shl
sub
sbb
dec
mov
mov
push
pop
xor
addr16
pop
pop
xlat
fist
pop
cmps
pop
ret
sar
add
inc
loope
xor
fbstp
jl
add
pop
jae
xchg
ins
stos
mov
sti
popa
enter
and
jne
mov
ret
repz
fmul
jns
mov
ret
(bad)
mov
xchg
(bad)
and
pusha
cld
dec
dec
call
pop
lds
dec
cwde
dec
push
or
mov
adc
or
mov
shl
arpl
mov
push
jne
aam
es
(bad)
outs
arpl
add
nop
push
or
mov
push
clc
pop
ficomp
cwde
dec
jmp
mov
movs
mov
call
inc
jecxz
stos
fnstcw
add
mov
pop
add
cmp
mov
fcomip
mov
add
mov
add
inc
imul
jg
call
cli
jmp
add
sti
adc
add
xor
loopne
pop
hlt
sub
xor
adc
fs
mov
cmp
js
inc
adc
jbe
add
clc
sti
les
test
mov
rcr
in
sbb
ss
dec
push
jbe
lock
jg
fsubr
test
push
sti
scas
lahf
inc
jnp
cmp
cmp
add
pop
mov
dec
movs
pop
mov
xor
mov
pop
dec
jne
xor
clc
daa
movs
popa
push
jmp
shl
fistp
pusha
hlt
xchg
mov
jbe
(bad)
ins
call
bound
push
outs
or
add
mov
xchg
or
mov
ds
mov
cld
mov
add
lahf
(bad)
xchg
cmp
and
gs
clc
lds
push
mov
mov
idiv
inc
mov
pusha
mov
das
dec
cmc
mov
cmp
scas
or
ss
push
mov
pop
push
mov
ret
push
mov
mov
cmps
aaa
or
inc
or
dec
ror
dec
lea
jle
inc
imul
or
ja
fwait
clc
aas
pmaddwd
push
inc
xor
je
adc
nop
cmp
inc
fdivr
dec
das
add
rep
mov
out
ror
ds
mov
gs
aaa
xchg
gs
inc
cwde
ret
dec
sbb
enter
cmc
dec
jne
sub
adc
jae
pop
in
lahf
icebp
add
xor
pop
cmp
les
jecxz
pop
clc
out
ja
pop
in
adc
sar
pop
mov
cmp
aas
out
ret
(bad)
pusha
mul
jae
jl
or
xor
call
shr
outs
jge
or
pop
adc
cmps
push
push
lds
fstp
lock
ret
push
aaa
pop
add
xor
cld
inc
pop
pusha
enter
mov
add
or
sub
rol
sar
mov
add
shr
ja
or
sub
mov
pop
push
adc
aaa
and
pop
cld
mov
add
push
dec
xchg
(bad)
aaa
mov
iret
adc
xlat
cmps
arpl
or
or
jnp
xchg
pop
sbb
mov
pusha
test
sub
push
jl
shl
pop
fs
sbb
push
rcl
out
setg
and
xchg
mov
and
cmps
or
or
scas
mov
je
or
push
icebp
adc
imul
xchg
inc
inc
(bad)
gs
jecxz
cwde
pop
push
sub
sub
dec
out
push
push
push
icebp
aas
push
je
and
lock
xchg
or
bound
test
dec
mov
fiadd
cmc
int
xor
cld
call
inc
(bad)
(bad)
jmp
push
pop
jmp
jbe
pop
js
neg
mov
inc
fldcw
adc
mov
push
mov
mov
jg
ret
dec
mov
sub
jle
pop
inc
loopne
or
cld
add
gs
(bad)
(bad)
mov
or
push
ror
or
out
adc
rcl
jg
xor
push
mov
pop
inc
mov
push
pop
mov
rol
sub
test
movs
aam
ins
(bad)
fstp
fsubr
ret
mov
fild
cmp
mov
das
and
dec
inc
inc
inc
cli
sbb
dec
mov
dec
push
push
xor
call
in
and
push
inc
cmp
cld
test
inc
pop
cmp
fstp
aas
push
stc
mov
fadd
mov
pop
mov
mov
dec
movs
loopne
mov
add
and
mov
js
lahf
inc
xchg
inc
or
cs
pop
nop
sub
cld
stc
adc
xchg
pop
xor
das
jo
in
push
movs
ret
das
adc
add
pusha
adc
jmp
xchg
inc
out
xor
pop
mov
(bad)
fwait
xchg
outs
push
jl
out
clc
dec
and
out
push
lea
test
sub
inc
add
mov
adc
test
ficomp
(bad)
mov
test
pop
das
jl
xchg
mov
push
dec
xchg
and
pusha
aaa
jmp
clc
ja
sub
outs
enter
cmp
sti
ret
xchg
jl
outs
call
xchg
mov
ret
push
rcr
push
call
rol
jmp
dec
fdivr
ror
pop
push
out
out
std
or
stos
dec
nop
xor
xor
xchg
ss
sub
mov
test
call
mov
mov
xor
mov
mov
fdiv
icebp
ins
enter
dec
stc
add
rol
dec
rcl
adc
jmp
jmp
jo
pop
cld
add
test
add
(bad)
mov
(bad)
jo
lock
pop
cli
mov
arpl
pop
dec
ret
inc
inc
cli
popf
loop
(bad)
outs
push
inc
push
xchg
test
add
pop
jmp
sbb
je
mov
test
pusha
das
mov
dec
or
test
ds
(bad)
sub
(bad)
jae
xor
inc
stos
inc
cmp
sub
push
xchg
cmc
dec
push
stc
jl
xlat
mov
test
cld
add
dec
push
jmp
and
lds
scas
je
mov
adc
lea
sbb
pop
jnp
jmp
loopne
dec
out
inc
inc
sub
iret
inc
ins
push
pop
pop
sahf
movs
jmp
mov
cld
mov
mov
add
and
inc
pop
mov
ja
fidivr
pop
je
out
push
ret
cli
mov
(bad)
sbb
and
pop
pop
inc
mov
gs
sbb
hlt
cs
adc
xlat
dec
mov
inc
fwait
inc
sbb
stos
dec
sti
mov
push
sbb
in
fmul
cmps
stos
or
call
inc
idiv
cmc
mov
sub
lds
push
lds
push
dec
cvtps2pd
mov
mov
add
mov
sbb
jo
ror
and
jl
iret
sub
das
push
fadd
cld
mov
dec
(bad)
lds
call
hlt
mov
lahf
(bad)
es
int
cld
mov
pop
mov
pop
xor
loope
rcl
cli
mov
jg
aad
std
jp
push
enter
ret
mov
or
imul
sti
push
lahf
imul
sbb
add
sub
ss
dec
or
xchg
mov
inc
mov
xchg
in
aas
pop
add
retf
enter
sti
mov
mov
js
pop
mov
push
test
and
sar
pop
mov
adc
arpl
xchg
sbb
and
retf
mov
push
add
shr
add
movaps
xchg
gs
push
xchg
adc
bnd
(bad)
mov
mov
push
inc
push
add
push
mov
sub
sub
(bad)
scas
push
cmp
mov
cmp
data16
dec
out
rcpps
mov
pop
test
shl
sbb
xor
out
scas
test
aas
or
(bad)
mov
jae
add
dec
xchg
add
cmp
inc
or
add
sub
iret
mov
add
clc
inc
dec
xor
or
inc
adc
push
nop
xor
fcomip
(bad)
inc
iret
aas
jmp
cmp
retf
mov
jae
mov
arpl
dec
mov
pusha
push
adc
test
inc
cvtps2pi
mov
(bad)
bnd
and
aaa
xchg
inc
add
dec
jae
xchg
aam
add
sti
jmp
jmp
jl
push
loopne
ins
loope
dec
(bad)
fs
add
pushf
clc
mov
scas
pop
pop
push
and
sub
adc
and
stos
inc
mul
dec
outs
retf
movs
test
push
rcr
mov
sti
mov
leave
pop
enter
sub
and
jmp
(bad)
(bad)
out
fdiv
sub
inc
sub
(bad)
push
call
inc
sti
jg
jmp
je
inc
adc
cld
cmp
add
(bad)
mov
nop
inc
mov
sbb
mov
iret
ret
sar
adc
lds
add
test
pusha
add
xchg
mov
mov
xor
icebp
add
pop
ins
add
rcl
call
(bad)
pop
cmp
and
push
mov
lahf
inc
iret
stc
pop
inc
jno
xlat
cli
inc
iret
add
inc
cmp
enter
pusha
cld
or
jmp
int
xor
cld
ret
pop
je
into
xor
mov
sbb
cmp
push
xor
sar
fs
sti
aam
xchg
mov
mov
mov
dec
(bad)
push
add
pop
jge
or
scas
outs
xor
mov
dec
push
cli
in
or
xor
dec
idiv
das
jmp
arpl
dec
sbb
add
add
dec
mov
mov
std
fwait
mov
gs
and
xchg
jmp
sbb
into
arpl
div
ss
add
jp
adc
inc
push
xchg
mov
inc
pusha
addps
fwait
mov
outs
xor
call
pop
pusha
mov
push
shl
cwde
std
cmp
xchg
add
pop
or
not
jmp
inc
loop
addr16
xor
xor
ds
xlat
scas
les
dec
pop
inc
into
or
ss
mov
ds
dec
adc
xchg
retf
inc
inc
inc
jnp
xchg
fprem
pop
and
(bad)
dec
inc
mov
push
mov
jg
mov
test
outs
cdq
add
(bad)
push
mov
pop
dec
int3
xor
rcl
jmp
pop
add
xor
cmc
neg
inc
in
stos
push
mov
imul
push
shr
add
dec
nop
add
cs
ins
add
out
adc
push
sbb
cld
stos
addr16
add
dec
(bad)
out
mov
inc
cmp
clc
bound
xor
int3
add
jle
inc
push
cmp
fmul
loope
mov
add
sbb
jb
mov
push
aaa
test
shr
push
add
sbb
call
push
inc
aas
not
mov
push
bound
data16
cmp
addr16
int
pop
inc
fld
mov
adc
xor
inc
cli
xchg
adc
adc
sahf
sbb
xor
pop
test
dec
push
addr16
xchg
or
jl
jmp
cmp
div
cmp
sbb
jmp
jecxz
pop
inc
inc
mov
inc
sub
cld
pop
xor
or
inc
xor
ret
dec
movs
popf
mov
or
gs
loopne
and
out
xchg
fcmovnbe
inc
fbld
pop
retf
pop
jmp
sub
jmp
adc
cs
adc
shr
push
mov
arpl
(bad)
dec
stos
js
and
fild
je
jae
outs
push
scas
mov
in
jg
cld
test
dec
je
(bad)
cli
and
mov
mov
fwait
inc
push
or
aas
das
fsubr
push
add
and
push
mov
dec
sub
inc
xor
mov
mov
fdiv
xchg
cmp
(bad)
lods
stos
sahf
ret
test
push
jecxz
jae
iret
jbe
std
aad
or
(bad)
aas
jb
mov
or
inc
movs
je
add
add
add
push
pop
inc
jmp
int3
cli
push
xor
dec
scas
rcl
or
pop
cmp
and
and
and
push
loop
cld
and
adc
inc
mov
es
and
and
out
clc
adc
inc
sbb
scas
jbe
add
(bad)
out
out
inc
adc
mov
cmp
sub
jmp
and
out
stc
xchg
sbb
scas
add
scas
and
mov
push
ret
clc
xchg
xchg
movs
aaa
xchg
dec
sbb
push
or
sub
push
jmp
jmp
push
xor
mov
je
xor
xchg
pop
dec
jo
std
inc
paddusb
xchg
fldcw
rol
xchg
sbb
ins
mov
inc
(bad)
ins
and
xor
ficomp
mov
lds
adc
icebp
(bad)
mov
cld
pop
push
clc
cs
test
inc
sub
xor
jg
shl
pop
fnstcw
mov
sbb
jmp
xchg
ds
lods
jg
ror
inc
fcomp
cld
mov
stc
nop
loopne
mov
test
outs
idiv
pusha
(bad)
xor
shl
loop
clc
repnz
mov
aaa
add
ret
(bad)
clc
aad
fstp
push
(bad)
cli
stc
mov
bound
sbb
cmp
push
push
add
retf
dec
aad
fild
xor
jo
aam
and
sbb
add
je
inc
retf
inc
and
push
div
and
outs
inc
hlt
or
clc
scas
or
add
fdiv
fidiv
loop
loope
mov
jbe
test
cwde
push
loope
hlt
mov
mov
mov
xor
jnp
push
jp
cwde
pop
aam
mov
mov
popa
cld
ja
ds
mov
cmps
fistp
addr16
not
and
cmp
sti
mov
ins
jae
out
jae
cld
sbb
pop
add
push
out
and
push
test
int3
std
mov
inc
sbb
ror
mov
aad
push
mov
jae
idiv
pop
test
dec
pop
dec
pop
ret
outs
add
test
add
add
jb
or
sub
fsub
clc
imul
or
or
mov
lock
jnp
jge
mov
pop
outs
mov
sbb
sbb
adc
add
das
and
cwde
sbb
enter
mov
test
adc
jnp
mov
shl
mov
imul
xchg
xor
ins
push
add
gs
ret
nop
mov
stos
movs
cmovo
or
popf
sbb
dec
add
inc
xor
mov
les
rcl
jg
outs
xor
jb
je
mov
inc
jmp
mov
push
push
or
or
mov
ret
adc
pop
ret
jg
fiadd
and
push
sub
test
jbe
mov
mov
push
pop
ret
fild
mov
scas
lahf
cmps
lock
jle
cmp
aas
arpl
push
xchg
clc
or
pop
dec
dec
aaa
scas
shl
and
jg
or
js
ja
xor
cli
jg
add
inc
outs
inc
daa
mov
inc
dec
out
imul
pop
(bad)
mov
pusha
lds
cdq
pop
int
leave
push
jle
out
jb
pusha
shl
movntps
or
call
push
outs
inc
(bad)
and
or
push
cmp
inc
sti
out
fisub
push
dec
sti
dec
loope
rsm
mov
ret
pushf
add
cmc
cmps
sti
pop
retf
dec
fist
adc
pop
add
xor
jle
hlt
bound
adc
and
enter
add
ss
jb
mov
loop
jl
ret
push
mov
jge
fwait
adc
ret
ret
inc
mov
(bad)
mov
pop
aas
inc
jae
std
inc
aad
leave
lds
gs
sahf
cmp
(bad)
xor
ficom
clc
dec
add
inc
in
test
xor
mov
out
icebp
(bad)
jle
sub
add
push
cdq
clc
xchg
mov
ret
xlat
add
ins
adc
inc
mov
xor
inc
ret
rcl
inc
mov
or
mov
and
(bad)
sbb
add
cmp
adc
pop
outs
or
push
fadd
dec
je
cmc
push
mov
xor
imul
xchg
push
and
pusha
out
push
mov
pop
lahf
and
rcr
inc
dec
jno
push
ror
mov
aas
jge
fld
cmp
les
ja
out
dec
mov
add
shl
pop
and
into
cmp
or
xlat
stos
pop
out
jno
in
jg
test
push
idiv
outs
mov
cld
outs
xchg
out
mov
outs
(bad)
(bad)
inc
jno
jae
daa
add
dec
cld
test
test
scas
inc
cmp
std
push
aad
enter
mov
dec
add
fisub
leave
mov
xor
jle
gs
push
out
mov
mov
clc
lahf
xchg
add
pop
(bad)
inc
adc
pop
mov
jae
mov
inc
jb
xor
jecxz
outs
or
and
arpl
clc
xor
jge
push
and
rcl
jmp
out
mov
add
out
ror
dec
fwait
add
cmp
arpl
retf
inc
adc
fadd
sub
push
scas
pop
sub
(bad)
jmp
dec
or
and
add
(bad)
pop
movs
out
jle
and
inc
movs
fbld
jl
xchg
mov
pop
gs
jmp
mov
enter
add
(bad)
dec
call
jmp
jg
aas
iret
sub
mov
adc
or
inc
mov
inc
mov
mov
or
pop
ret
sub
add
or
or
and
pop
sub
(bad)
test
pop
inc
in
inc
fld
pop
pop
imul
movs
lods
adc
push
inc
(bad)
mov
loopne
and
clc
jmp
int3
sub
scas
mov
inc
ret
aaa
pusha
cmps
fldcw
pop
xor
xor
(bad)
aas
dec
pushf
xlat
push
inc
icebp
out
test
push
inc
adc
(bad)
and
push
mov
out
popa
mov
mov
mov
push
mov
rcl
sar
or
lahf
cli
pop
std
cmps
pushf
es
add
jmp
outs
pop
addr16
mov
or
adc
(bad)
mov
std
add
sbb
out
(bad)
push
add
add
dec
jmp
inc
(bad)
push
nop
jge
xor
or
jg
mov
ror
or
push
bound
mov
mov
and
dec
aaa
cli
out
mov
inc
mov
jae
pushf
add
fild
cwde
pop
mov
push
mov
fsubr
pop
out
inc
pop
or
dec
sti
pop
es
std
jmp
mov
push
inc
pop
cmp
sbb
ret
pop
hlt
pop
add
cmp
(bad)
dec
je
dec
gs
push
in
test
mov
rcr
imul
add
jbe
jp
cmc
inc
xor
sbb
adc
mov
pop
push
dec
xor
mov
outs
call
call
arpl
je
sbb
movs
push
retf
mov
clc
inc
xchg
push
aam
fwait
xchg
cmp
gs
inc
xor
(bad)
mov
push
aas
and
lea
add
or
mov
pop
mov
ret
mov
push
mov
xor
ins
mov
dec
inc
sbb
pop
inc
ins
dec
push
inc
xlat
push
mov
fmul
clc
cli
add
add
out
pop
hlt
jmp
push
pusha
stos
add
rol
ret
dec
sbb
or
ja
push
gs
add
call
push
xchg
inc
inc
sahf
or
ja
hlt
or
push
pop
dec
inc
pushf
pop
pop
jae
lds
fcom
mov
and
lahf
jp
sbb
push
jecxz
xchg
aas
lds
add
je
jns
xchg
(bad)
push
cmp
mov
lds
or
jmp
ins
outs
jmp
mov
or
call
shl
(bad)
and
fimul
ror
std
stos
push
push
sbb
icebp
test
pop
ret
call
mov
cli
cmp
sbb
clc
pop
movs
mov
push
aas
inc
push
inc
dec
jmp
stos
gs
xor
add
xor
inc
add
arpl
and
or
jle
jg
js
mov
inc
mov
test
pop
push
add
sbb
fimul
stos
xchg
hlt
push
sbb
push
call
jecxz
xchg
out
movs
jmp
inc
add
xor
aaa
aam
add
mov
sbb
pusha
dec
pop
mov
push
mov
mov
mov
sub
inc
std
mov
or
stos
xor
std
sub
jmp
mov
pop
adc
dec
pop
cmc
push
jae
jb
js
and
mov
push
push
jbe
aaa
shl
(bad)
out
inc
pop
pop
inc
inc
add
push
inc
xchg
mov
test
jmp
cmp
scas
ss
ss
cld
out
rep
push
mov
pop
and
out
out
loope
xchg
ins
add
repz
and
out
inc
(bad)
shl
pop
out
mov
and
inc
xchg
dec
jg
aam
xor
push
sti
add
popa
xor
mov
inc
cld
xchg
rol
cmp
ins
mov
add
inc
jp
push
cs
add
pop
xor
cmp
cmp
and
arpl
rol
inc
push
adc
faddp
outs
sub
imul
mov
fs
mov
out
xlat
loop
inc
add
push
adc
enter
push
mov
add
inc
aas
add
mov
sub
pusha
sahf
sbb
and
inc
sbb
aas
out
adc
xchg
inc
xor
movs
mov
push
mov
out
movs
jle
inc
push
pop
inc
inc
test
dec
mov
out
and
mov
outs
sar
dec
add
sti
xchg
repz
xor
out
inc
jmp
jmp
dec
(bad)
pop
xor
push
mov
out
mov
mov
add
mov
repz
add
add
adc
push
out
pusha
out
inc
pusha
stos
pusha
add
mov
clc
sbb
push
js
(bad)
fidiv
push
jmp
test
and
stos
adc
xchg
pop
pop
xchg
inc
inc
cmps
mov
jmp
adc
dec
arpl
pop
jne
popf
adc
mov
xor
push
das
mov
jb
js
lock
aas
scas
add
pop
inc
push
and
test
push
les
test
icebp
ins
inc
mov
out
clc
enter
xchg
xchg
cmc
retf
fild
pop
sti
fisttp
xchg
or
push
jp
push
jb
cld
cmp
inc
ret
pop
(bad)
mov
add
div
inc
inc
bt
mov
outs
ds
or
mov
cmp
fsubr
je
sti
in
and
out
out
xor
js
scas
fwait
fs
hlt
jo
inc
jp
(bad)
(bad)
ja
mov
ds
rol
jmp
fdivr
nop
test
mov
xor
addr16
jl
repz
fdiv
scas
jle
sbb
push
fbld
sbb
or
jnp
shl
clc
mov
sub
push
scas
add
lods
je
add
push
(bad)
jae
cmc
das
cli
fs
jg
mov
sbb
out
xchg
and
xor
inc
add
sbb
out
xchg
lock
push
push
add
mov
(bad)
out
clc
ja
call
pop
inc
jl
inc
ret
pop
mov
add
and
sbb
mov
xor
retf
fsubr
push
inc
sbb
push
into
xor
pop
stos
push
xchg
mov
add
sysret
push
push
mov
mov
ret
aaa
mov
push
adc
dec
gs
cld
sbb
push
ins
add
aam
dec
add
sbb
inc
cs
mov
mov
sub
pushf
mov
xchg
jp
mov
add
jp
dec
dec
in
adc
dec
jp
imul
ds
inc
bnd
mov
jb
push
sub
test
loop
mov
add
sub
idiv
outs
mov
push
inc
aas
jecxz
inc
pop
ins
mov
hlt
xlat
call
sbb
imul
out
add
and
push
gs
ja
fcmovnb
pop
rcr
push
mov
jae
push
cmp
cmps
push
push
js
sub
dec
les
jmp
xchg
cmp
sbb
lods
inc
dec
jl
lds
mov
push
(bad)
xor
mov
mov
outs
dec
mov
xor
clc
push
das
dec
je
pop
(bad)
mov
rcl
mov
mov
jmp
out
add
outs
call
or
adc
ret
pop
inc
jmp
std
mov
scas
inc
ret
(bad)
neg
jg
cmc
not
jnp
pop
scas
or
fwait
pop
sbb
pushf
pusha
imul
aas
push
je
or
je
mov
xchg
or
(bad)
mov
cli
lds
pop
out
mov
push
rcr
cwde
xor
push
addr16
add
mov
inc
shr
push
(bad)
(bad)
mov
add
sbb
retf
addr16
pusha
lods
dec
pusha
pop
hlt
call
ins
scas
push
xor
sub
push
pop
pop
add
jge
adc
ss
sub
hlt
(bad)
fbld
jbe
pop
jne
sbb
jmp
jae
cmc
inc
or
xor
xor
test
fcos
dec
mov
scas
push
ins
cmp
xchg
inc
in
pop
ror
mov
jbe
push
push
xchg
sub
cmc
and
mov
inc
push
int
into
add
call
or
xor
lods
sub
fdivrp
dec
loope
inc
(bad)
dec
(bad)
jle
push
jg
and
repz
ret
mov
cmps
cmc
or
(bad)
push
cs
ja
add
jnp
jmp
(bad)
mov
push
push
jecxz
aas
push
popf
xchg
push
lock
mov
test
cmps
and
inc
or
test
clc
lock
js
cs
test
add
add
add
sub
icebp
das
xchg
xor
or
adc
dec
dec
push
and
adc
push
outs
push
push
adc
mov
push
inc
add
mov
cmps
mov
sbb
add
jne
jecxz
clc
adc
std
push
and
data16
fcmovnbe
push
jl
mov
into
add
pop
pop
rcr
aas
mov
fcmovnbe
outs
dec
sub
cmp
inc
sub
jno
mov
fild
(bad)
gs
or
dec
cld
inc
int3
sti
push
pop
sub
fadd
jmp
xchg
xor
mov
jl
dec
in
call
ins
mov
add
cmp
pop
iret
out
jae
adc
pop
xchg
mov
add
add
jp
and
sbb
aad
xchg
movs
jo
xchg
pusha
mov
ja
rol
push
sbb
jg
add
mov
jl
ins
adc
daa
div
sbb
shl
jbe
xor
inc
or
mov
dec
jge
fist
std
mov
mov
imul
ret
sti
sub
call
ret
mov
clc
in
cmps
pop
or
inc
ret
bound
call
pop
add
push
je
xor
data16
mov
add
and
cmc
iret
dec
add
mov
pop
adc
dec
pop
cli
enter
and
outs
ficom
dec
and
inc
mov
mov
xchg
test
cmp
ret
sbb
call
jg
push
xor
je
(bad)
and
clc
(bad)
xchg
push
sbb
ret
pop
lds
into
pop
outs
je
clc
pop
pop
call
mov
xchg
cld
fisttp
pop
cmp
inc
shufps
ret
out
outs
data16
mov
pop
clc
add
mov
jl
je
and
out
adc
enter
add
mov
pop
mov
ret
out
inc
push
cmp
mov
dec
arpl
sbb
clc
push
ins
mov
pop
mov
dec
out
mov
cli
cs
push
out
dec
add
out
or
dec
cdq
fst
lock
inc
mov
push
clc
inc
ins
mov
aad
std
sbb
jl
xor
jcxz
inc
mov
into
add
out
test
adc
aas
sahf
mov
std
das
shl
pop
(bad)
xor
fimul
ds
adc
cmp
call
js
add
mov
les
push
mov
cwde
xor
mov
jmp
fild
inc
scas
add
scas
push
in
cli
sbb
cmp
jmp
adc
fucom
clc
xchg
xchg
aas
dec
or
add
ret
imul
pop
push
sbb
mov
sar
sub
push
out
out
inc
adc
lock
push
fdiv
sbb
scas
or
mov
in
mov
cmp
mov
inc
or
push
hlt
inc
das
mov
sub
mov
inc
fst
push
inc
mov
popf
pop
jmp
or
sbb
bound
mov
pop
push
inc
jne
push
hlt
mov
jae
sti
outs
xchg
nop
imul
or
adc
add
push
ins
push
arpl
cli
mov
push
mov
imul
dec
add
mov
outs
adc
or
jge
mov
mov
inc
bound
push
push
je
stos
and
or
or
repz
and
sub
rol
and
out
jmp
push
and
inc
xor
lds
pop
sub
(bad)
pop
mov
or
and
nop
adc
dec
cdq
xor
xchg
ins
mov
jo
cli
cli
pop
add
mov
push
push
(bad)
jnp
sti
inc
sti
sahf
mov
call
push
dec
and
jp
popf
inc
pop
lds
push
loope
mov
and
and
mov
jmp
sub
pop
fadd
shl
je
push
mov
les
iret
(bad)
(bad)
pop
je
sti
pop
sbb
mov
push
shl
mov
pop
xor
inc
pop
fstp
dec
cs
mov
push
bound
jg
mov
mov
and
rol
rcl
jmp
dec
push
dec
sub
arpl
lods
rsm
push
adc
inc
test
bound
xchg
mov
sar
js
test
xchg
adc
je
sub
sub
xor
or
adc
pop
mov
out
xor
clc
pop
jp
sbb
dec
subps
adc
and
xlat
iret
mov
add
mov
or
fimul
jmp
and
mov
add
add
jmp
jbe
rol
push
push
push
out
outs
stos
push
pushf
cmp
test
jge
hlt
mov
push
bnd
cli
dec
cld
mov
jae
div
push
dec
mov
jp
fisubr
pop
add
data16
mov
cmps
jmp
adc
push
icebp
stos
not
cld
add
into
xor
mov
das
cmc
inc
jmp
mov
or
sub
stc
shr
aaa
rcl
mov
fcos
add
mov
sbb
jecxz
add
mov
mov
mov
or
scas
pop
inc
ss
push
sti
out
je
cmp
xor
cmp
xchg
addr16
(bad)
mov
out
js
stos
ss
inc
lock
adc
mov
aas
push
aas
imul
and
out
jmp
(bad)
pushf
jo
add
pop
inc
js
sub
icebp
fadd
pop
arpl
and
out
std
test
xchg
inc
add
fidiv
sti
pop
dec
iret
mov
fnsave
cmp
mov
xchg
xor
mov
add
aad
add
pop
movs
fadd
fisub
out
pusha
lds
mov
push
cmp
push
and
lods
push
cmp
je
push
lock
jmp
or
dec
inc
push
pop
test
fbstp
mov
gs
push
xchg
ror
cli
inc
jae
repz
pop
test
jno
add
arpl
(bad)
dec
add
push
push
cmp
in
add
add
mov
into
jg
cmp
adc
hlt
test
xchg
add
sbb
push
mov
test
add
icebp
mov
ret
or
lds
jmp
cmp
xlat
push
pop
add
loop
xchg
xchg
xor
aas
pop
cld
out
dec
push
or
pop
fidivr
mov
fcmovnbe
add
dec
xor
sbb
mov
xor
mov
outs
(bad)
or
retf
pop
push
jmp
ror
cs
sbb
test
and
pop
push
adc
jmp
into
dec
je
mov
push
inc
or
xor
jecxz
out
xor
or
mov
pop
mov
pop
xchg
outs
dec
add
mov
pusha
je
mov
push
mov
js
je
cmc
push
rol
xor
add
mov
push
sbb
inc
out
sbb
in
cmp
jmp
arpl
scas
pand
sbb
inc
push
and
mov
call
xor
mov
mov
gs
push
jmp
add
push
add
xchg
inc
mov
inc
add
xchg
sub
mov
push
or
add
pop
mov
jp
mov
mov
fpatan
jl
jnp
inc
xlat
xlat
out
mul
aam
test
inc
pop
add
pop
out
f2xm1
and
inc
pop
sbb
sbb
out
cli
test
adc
out
add
add
xor
dec
call
in
or
cli
push
inc
xlat
jno
xchg
fisubr
mov
ret
mov
nop
call
cli
inc
add
xlat
mov
push
cmp
jl
inc
les
rcl
mov
sub
sahf
dec
xor
rcr
mov
push
mov
cli
pop
adc
(bad)
jne
pusha
adc
mov
pop
lods
push
cmp
adc
aas
push
xchg
jg
push
pop
dec
jmp
or
mov
adc
repnz
mov
push
jg
je
pop
outs
pop
dec
nop
sbb
out
push
xor
add
ins
aas
pop
inc
inc
inc
mov
rcr
fsubr
rcr
adc
mov
push
movs
inc
outs
push
imul
push
jb
push
pop
xor
push
shr
sub
and
sbb
add
rol
xor
xchg
add
cld
cmp
mov
dec
add
(bad)
arpl
sbb
pop
xchg
add
add
call
push
jg
pop
xor
(bad)
mov
xchg
dec
sbb
mov
jbe
inc
or
inc
push
xor
and
repnz
pop
or
or
movs
push
and
fisttp
bound
push
mov
and
jne
cmovg
pop
pop
and
aad
mov
jl
inc
iret
outs
(bad)
mov
jmp
push
adc
(bad)
cld
(bad)
ins
sahf
jae
scas
push
out
adc
adc
(bad)
sbb
push
stos
test
repnz
add
push
xor
outs
jbe
stos
outs
mov
sahf
xchg
jl
add
mov
shl
popa
call
sbb
add
or
js
add
mov
xchg
out
out
aas
inc
lock
les
mov
push
cmps
adc
dec
hlt
mov
xor
ins
js
mov
push
adc
xlat
dec
js
ins
mov
sti
mov
xchg
std
or
imul
sar
inc
out
ss
cmp
push
rep
sti
jg
sbb
pusha
jg
pop
stos
(bad)
test
inc
mov
sbb
je
inc
rol
das
mov
pop
cmp
scas
cli
jg
xor
adc
push
add
loop
adc
shl
add
add
clc
pop
dec
popf
push
and
or
and
je
or
jmp
cmc
mov
rol
pusha
arpl
cmps
lahf
mov
pop
ins
dec
pop
inc
push
arpl
and
cmc
add
(bad)
inc
mov
inc
xor
imul
fidivr
(bad)
jns
push
fcom
pop
iret
and
and
cmp
das
cli
mov
es
mov
add
ss
push
into
jle
pop
arpl
inc
dec
mov
mov
sub
daa
push
mov
(bad)
mov
ja
lds
mov
push
cli
jmp
aaa
push
jp
out
push
pop
cli
mov
fild
sbb
cmp
fiadd
test
(bad)
scas
jl
sbb
aaa
ret
mov
out
test
out
mov
mul
(bad)
out
jmp
push
fimul
mov
or
mov
dec
mov
push
push
push
add
and
jmp
inc
or
inc
aam
out
mov
scas
adc
mov
inc
mov
push
inc
add
(bad)
idiv
push
xor
test
pop
jmp
icebp
and
xor
outs
and
mov
cmp
outs
call
pop
aad
mov
adc
mov
loopne
popa
cmp
sti
mov
das
cli
(bad)
jmp
mov
stos
xor
test
(bad)
pop
std
push
imul
shr
adc
les
push
pop
mov
pusha
outs
adc
fisttp
add
sub
arpl
mov
(bad)
jmp
ret
ret
sti
push
or
and
jae
aad
mov
add
push
dec
push
sub
or
sar
bound
dec
dec
jmp
inc
xor
ja
adc
cmp
fsubr
sub
push
bound
(bad)
push
xchg
or
jmp
adc
sti
sbb
jb
pop
mov
stos
pop
mov
shl
pop
bswap
(bad)
jg
repz
add
fs
aas
add
aas
aas
jnp
ss
nop
ins
test
mov
or
ins
or
(bad)
or
or
out
gs
cmps
icebp
adc
or
inc
movs
je
add
sub
jne
pop
and
mov
pop
fwait
jmp
inc
cli
into
add
pop
repz
cmp
push
pop
jo
xchg
sbb
mov
jge
jno
(bad)
sub
sti
dec
inc
(bad)
pop
std
adc
inc
idiv
mov
and
mov
mov
dec
pop
cmc
adc
call
xchg
mov
fild
test
jmp
fidivr
mov
mov
ret
scas
cli
rol
out
je
inc
iret
test
or
outs
add
mov
add
jmp
push
sub
das
and
xor
add
jl
scas
push
mov
add
lods
fs
fstp
bound
pop
out
aaa
xchg
nop
jle
xor
out
or
jnp
cli
push
jmp
pop
sbb
cmp
sti
aaa
push
movaps
fimul
mov
(bad)
repz
std
push
(bad)
hlt
jmp
or
fild
out
inc
mov
cmp
mov
in
icebp
scas
push
lahf
pusha
fsubr
ret
add
push
mov
dec
test
inc
inc
and
add
xor
add
xlat
fs
ja
pop
imul
mov
jae
not
jmp
mov
mov
xor
pop
inc
push
enter
in
es
add
jle
mov
pop
mov
push
les
lock
call
dec
inc
shl
jmp
inc
mov
dec
repz
sbb
mov
xor
push
je
inc
jmp
pop
popa
loopne
push
lahf
pop
jmp
fst
call
push
jno
pop
ja
and
cli
call
xlat
dec
adc
std
sub
sub
(bad)
mov
push
(bad)
and
inc
loop
and
push
xor
or
pop
in
jmp
addr16
inc
pop
es
mov
adc
adc
scas
xor
sti
mul
mov
jmp
jle
xor
ja
or
push
add
pop
(bad)
ror
push
popf
xchg
scas
and
add
inc
dec
and
mov
mov
jg
push
jle
add
mul
pusha
punpcklbw
jg
push
dec
add
add
cwde
hlt
ret
cmp
pop
push
lds
or
and
nop
jg
or
inc
cmp
pop
pop
psubb
mov
cld
sbb
shl
aas
pushf
mov
jmp
fcom
inc
mul
add
cmp
jae
imul
ror
inc
mov
mov
push
dec
je
mov
add
add
mov
sar
mov
push
aad
mov
pop
dec
inc
inc
sub
jbe
aas
test
out
add
sti
dec
test
push
push
std
addr16
(bad)
mov
adc
jmp
aas
in
inc
addr16
icebp
fidiv
jle
inc
hlt
cs
lds
movs
push
sti
aas
inc
add
(bad)
cmp
push
sti
call
dec
mov
pusha
push
cmp
pop
cmp
fdiv
cmp
mov
pop
test
mov
ret
jg
sub
rcl
and
outs
ret
std
retf
jl
and
sub
retf
inc
push
fs
push
pop
add
inc
dec
push
inc
push
xor
sbb
inc
pushf
arpl
mov
js
arpl
xor
add
mov
xchg
enter
test
call
outs
add
loop
cmps
jmp
icebp
mov
inc
sahf
push
dec
mov
xchg
inc
ret
sub
inc
mov
cmp
mov
mov
push
dec
xor
cmc
push
lock
mov
adc
inc
mov
mov
jecxz
push
fnsave
sub
and
jle
add
fimul
cld
mov
jmp
imul
mov
je
cli
push
int3
dec
pop
(bad)
cmps
lds
add
fild
retf
adc
push
and
sar
outs
dec
shr
lds
jmp
or
push
outs
xchg
mov
push
mov
push
cmp
add
popa
adc
jg
outs
or
inc
dec
(bad)
std
push
jmp
xchg
inc
pop
or
ficom
scas
retf
movs
bound
cld
mov
fdecstp
sub
cmps
lods
icebp
iret
ins
jmp
mov
scas
inc
inc
inc
je
pusha
mov
mov
add
pop
sbb
js
xchg
(bad)
push
(bad)
push
dec
sti
clc
mov
pop
mov
xor
icebp
cmp
inc
into
ret
or
sub
push
stos
lods
cmp
fmul
xor
xor
jmp
cmps
dec
sti
pop
pop
mov
jmp
je
mov
std
cmps
mov
mov
jecxz
push
cmp
cmp
pop
addr16
xor
adc
inc
xor
ret
add
dec
inc
loop
push
jg
hlt
add
test
xchg
mov
ins
mov
push
adc
dec
add
inc
aas
aas
xor
xchg
push
lock
and
js
ror
pop
loopne
or
push
sbb
inc
ror
pop
fld
xchg
mov
pop
cs
mov
mov
mov
jecxz
popa
jmp
or
sbb
mov
out
pop
jge
shr
div
jbe
or
push
loopne
test
cmp
and
push
adc
mov
dec
pop
sar
test
loopne
push
cmp
out
sub
jnp
and
jno
push
call
push
cld
mov
mov
xor
push
or
jbe
out
xlat
(bad)
xchg
and
and
in
and
inc
dec
jg
gs
and
das
(bad)
jmp
add
rcr
(bad)
mov
and
(bad)
xor
leave
ret
pop
inc
sbb
jge
test
sbb
pop
mov
add
cmps
ins
imul
jg
mov
add
mov
call
inc
pop
les
add
(bad)
pop
arpl
imul
push
mov
retf
cmp
ret
enter
xor
ss
sbb
cmp
ror
aaa
sbb
clc
jbe
cmps
xchg
ficomp
call
sbb
jno
jo
pop
aam
jo
inc
sti
ss
popf
out
cmp
xor
adc
sbb
mov
add
in
cmp
adc
add
xor
dec
inc
pop
call
inc
cld
aas
fwait
mov
dec
sub
(bad)
add
inc
(bad)
mov
cmps
mov
pop
mov
pop
inc
(bad)
push
mov
cmc
mov
dec
lods
add
add
mov
inc
ret
cs
mov
scas
test
pmaddwd
xor
aaa
fs
mov
dec
test
push
jmp
call
mov
(bad)
inc
jno
std
pop
rcr
shl
sbb
rol
es
sub
xor
jmp
clc
mov
cmp
mov
pop
and
mov
test
(bad)
call
push
inc
adc
xlat
inc
dec
aad
inc
pop
cmp
dec
nop
add
inc
or
dec
inc
aas
or
rcr
popa
out
(bad)
daa
repz
jmp
enter
xchg
add
mov
call
xor
jno
ret
jbe
(bad)
addr16
jmp
push
push
inc
add
clc
aas
and
jnp
stc
out
inc
inc
add
sub
and
(bad)
data16
pop
add
inc
inc
inc
add
iret
inc
sub
in
inc
ret
sahf
outs
cmp
imul
and
add
(bad)
inc
dec
xor
adc
fidivr
jae
scas
inc
jle
pop
mul
es
(bad)
mov
sub
out
push
jae
or
das
shl
out
push
jae
mov
ret
dec
lods
mov
xor
pop
sub
arpl
int3
(bad)
push
add
out
addr16
shl
and
data16
aaa
xchg
in
in
cmp
mov
mov
push
push
push
cmp
adc
dec
inc
leave
dec
ss
mov
inc
jl
push
out
(bad)
sub
retf
fcmovb
ins
cli
push
mov
jns
jg
dec
jae
pop
mov
inc
mov
mov
jmp
ret
mov
mov
rcr
sub
pusha
push
xchg
sbb
daa
add
icebp
or
pop
cwde
cmps
push
lock
jp
cmps
outs
and
jmp
xchg
adc
mov
dec
mov
mov
sbb
dec
and
mov
xchg
(bad)
call
push
jnp
cmp
inc
sbb
add
xchg
test
mov
add
adc
retf
pop
ret
in
mov
adc
out
push
inc
pop
jno
mov
(bad)
jp
sbb
adc
shl
pop
pop
sbb
adc
idiv
add
add
xchg
inc
loope
pop
test
xchg
sbb
pop
pop
ret
out
jmp
cwde
fdiv
rol
inc
test
mov
jg
inc
cmp
dec
add
pop
aam
call
mov
ret
pop
add
int3
adc
arpl
lahf
je
jo
sub
lods
aaa
cmp
out
neg
mov
jge
ins
pop
addr16
repz
aas
mov
dec
push
adc
cld
(bad)
(bad)
in
push
inc
jmp
jg
inc
das
fs
or
push
mov
cli
call
add
mov
dec
push
stos
aaa
test
bound
call
xor
lock
push
je
cmps
sbb
es
arpl
add
shr
(bad)
inc
push
or
(bad)
lahf
inc
push
mov
inc
sub
fsub
pop
push
(bad)
movs
dec
(bad)
pop
add
aaa
add
dec
dec
cld
mov
jle
add
cli
dec
dec
loopne
push
and
jl
inc
(bad)
fdivr
dec
repz
call
xor
cs
dec
add
jmp
loopne
aas
fcmovnb
adc
rol
mov
(bad)
mov
or
inc
shl
vandnps
jle
add
not
mov
dec
aaa
push
pop
mov
xor
mov
xor
push
fld
cmp
out
mov
cli
lock
inc
sbb
push
inc
fiadd
mov
(bad)
jg
push
xchg
lds
shl
inc
inc
xchg
dec
mov
gs
push
cmp
pop
inc
xchg
dec
dec
mov
push
jae
les
or
pop
mov
xlat
pusha
mov
xchg
pop
into
push
mov
test
arpl
inc
add
pop
jmp
dec
(bad)
(bad)
inc
outs
mov
sub
push
inc
cmp
sbb
inc
int3
psubw
ds
adc
pop
mov
aaa
mov
lahf
dec
call
inc
aas
pop
(bad)
push
aas
push
movs
test
(bad)
scas
rol
lea
call
add
push
or
mov
pop
adc
xor
adc
test
fild
and
repz
mov
fimul
or
adc
pusha
ds
popa
sbb
mov
jle
ds
cmp
mov
inc
test
cmps
mov
jno
adc
test
repz
jmp
push
xor
pop
cmp
hlt
adc
in
(bad)
or
add
bound
loopne
mov
or
mov
(bad)
and
repz
sbb
inc
ss
pop
or
(bad)
jo
js
push
mov
cmc
sub
inc
ficomp
add
lds
mov
dec
xor
movs
(bad)
pop
jne
aam
popa
int
push
jnp
inc
not
or
dec
sar
movs
out
dec
movq
inc
cmp
dec
inc
call
ret
or
fmul
or
mov
adc
xor
jl
jg
fdivr
mov
test
pop
add
test
rcl
adc
adc
(bad)
push
pop
adc
pop
(bad)
call
not
xchg
ror
xor
jl
inc
jecxz
pop
mov
and
mov
mov
or
jg
data16
(bad)
inc
es
sahf
dec
or
sar
fsubr
retf
inc
sar
test
mov
pop
add
jo
push
jae
mov
out
inc
pop
xor
xchg
nop
push
cmp
push
push
pusha
mov
inc
clc
fbld
mov
sbb
adc
(bad)
jne
add
out
mov
sahf
add
call
add
call
lock
out
and
retf
push
dec
push
cmp
icebp
mov
pop
(bad)
out
call
call
or
ror
scas
jg
mov
add
mov
call
loopne
dec
lock
fisttp
cmps
test
inc
push
jmp
inc
push
aaa
mov
out
in
cmp
pop
out
cli
loope
or
pushf
add
jmp
inc
test
xor
test
xor
adc
dec
inc
data16
add
inc
fwait
in
mov
dec
jns
lahf
(bad)
mov
imul
and
mov
ret
fild
inc
pusha
(bad)
mov
gs
ret
or
push
and
adc
stos
dec
mov
test
adc
push
es
sub
jge
out
dec
pop
bound
outs
mov
ins
out
pop
clc
pop
imul
ss
jmp
bound
push
bound
scas
dec
inc
call
sbb
add
xlat
add
push
push
cmp
mov
jg
pop
dec
jmp
cmp
mov
pop
add
ds
lds
push
inc
div
push
je
mov
adc
push
inc
xor
dec
mov
adc
rcl
push
ret
fcomip
add
add
push
xor
add
push
sar
add
mov
cld
sbb
xchg
dec
cmp
pop
mov
les
mov
dec
jle
inc
xchg
fisub
pop
inc
cld
mov
mov
les
mov
lods
jp
cwde
push
and
sbb
and
pop
add
dec
jg
xor
aad
fild
adc
clc
push
push
inc
push
push
inc
arpl
lods
mov
cwde
add
std
call
adc
pusha
dec
sti
inc
mov
rol
into
loop
stos
sub
dec
xlat
cmc
adc
addr16
fimul
xchg
icebp
mov
pop
push
mov
mov
in
push
retf
mov
jmp
mov
pop
pop
or
xlat
mov
and
nop
inc
cmp
push
sahf
lahf
fisubr
retf
jbe
add
dec
hlt
aas
jg
adc
sti
inc
pop
imul
jmp
cwde
mov
arpl
pop
xchg
and
push
lock
push
enter
dec
adc
or
push
daa
hlt
pop
push
mov
dec
xor
icebp
dec
sbb
mov
aad
cld
out
xor
cmp
js
or
ret
add
xor
xchg
or
mov
adc
aad
call
jg
mov
call
push
ret
inc
mov
iret
xor
dec
sub
adc
mov
mov
add
mov
add
in
push
xor
dec
cli
xor
call
ret
int3
cwde
rol
aaa
push
jns
jne
hlt
(bad)
(bad)
cmp
mov
lods
xchg
and
pcmpeqb
jmp
mov
mov
inc
(bad)
cmc
call
lods
pop
fcomp
ret
push
push
cmps
in
add
ins
pop
push
cmc
pop
mov
ins
mov
or
inc
xchg
mov
ja
mov
push
iret
mov
add
iret
aas
scas
or
rcl
sub
mov
lods
ror
call
xor
pop
imul
mov
cmp
add
pop
mov
scas
jle
add
into
push
dec
mov
jmp
jp
xor
dec
or
pop
cwde
mov
cmp
scas
out
jae
inc
test
dec
ret
(bad)
cmp
mov
mov
out
inc
repnz
push
sti
sti
and
mov
stos
loope
jle
jmp
mov
inc
and
shl
pop
jb
out
xor
aad
mov
js
in
inc
jne
mov
mov
lds
ret
das
adc
sti
jae
test
xchg
cli
loopne
sti
pop
or
test
addr16
push
aad
adc
pop
add
js
pop
inc
xchg
aas
pusha
mov
pop
and
aam
sub
mov
retf
into
jb
jmp
mov
sbb
jno
femms
sbb
enter
mov
xor
out
sar
sti
mov
pop
(bad)
dec
test
cmp
sub
out
jmp
das
adc
das
cli
imul
std
call
mov
mov
inc
and
pop
std
call
out
vpshuflw
adc
paddq
aas
jae
mov
xchg
xchg
outs
inc
mov
mov
imul
mov
and
push
dec
sbb
jae
push
ins
imul
pop
jo
dec
sbb
mov
mov
cmp
pop
dec
cwde
mov
dec
dec
ins
push
fmul
or
pusha
adc
push
mov
add
mov
add
je
dec
pop
ins
xor
xor
mov
ja
push
add
(bad)
repz
xor
(bad)
or
add
xor
cmp
int3
mov
retf
mov
add
dec
cmps
cmp
xor
sbb
xor
mov
push
xchg
mov
and
out
das
sbb
lock
push
pop
mov
mov
or
dec
outs
out
lds
add
add
or
mov
or
into
arpl
xchg
movs
or
outs
inc
lds
cli
mov
jb
inc
add
mul
adc
mov
push
(bad)
lahf
jg
dec
dec
jmp
and
jle
lock
lds
lock
mov
pop
out
ins
add
add
lock
or
pop
mov
in
int3
jnp
enter
or
(bad)
sar
(bad)
ja
(bad)
jecxz
pop
jae
mov
sub
lods
(bad)
punpcklbw
inc
test
inc
xchg
ds
fmul
fdivr
(bad)
xchg
test
xor
rol
add
pop
push
cmp
ret
mov
push
pop
fsubr
mov
push
clc
mov
push
and
adc
je
(bad)
jae
test
mov
imul
add
push
mov
add
mov
push
sti
data16
call
(bad)
sub
retf
cmc
push
test
push
(bad)
push
inc
sub
add
sbb
(bad)
mov
hlt
mov
pop
dec
and
dec
mov
jmp
sub
loope
pushf
mov
mov
mov
mov
stos
bound
xchg
pushf
(bad)
cli
push
xchg
pusha
push
out
rcl
gs
sti
pop
(bad)
pop
xor
es
ja
ret
rcr
adc
mov
call
ss
pop
push
out
addr16
mov
add
push
mov
xor
loop
inc
inc
cdq
std
or
or
push
pop
mov
jmp
pop
les
cmp
dec
rol
mov
in
mov
retf
cs
jge
push
ds
add
adc
retf
add
fadd
and
sbb
xchg
push
add
push
or
adc
js
stos
repnz
std
add
cs
imul
rcl
es
add
retf
out
sbb
repnz
mov
(bad)
mov
call
mov
not
dec
outs
addr16
ret
and
mov
add
std
hlt
mov
xor
movs
cmp
mov
sub
adc
push
push
es
mov
scas
mov
mov
test
jecxz
jno
push
sub
jg
rol
dec
imul
imul
inc
mov
and
ins
add
in
ret
dec
adc
imul
aas
xchg
mov
xor
and
pop
and
aas
invd
pop
push
je
bound
pop
mov
cld
inc
mov
mov
mov
jmp
mov
pop
ja
clc
push
jmp
out
mov
mov
sbb
lock
jmp
add
(bad)
cmp
movs
pusha
jmp
mov
push
cld
test
and
push
hlt
out
cld
call
lock
xlat
jno
repz
sti
push
sbb
idiv
call
out
pop
sub
es
push
push
and
sub
mov
shr
movs
mov
or
jae
fs
pop
and
jl
neg
cld
mov
adc
or
fdiv
jg
jae
sti
jmp
in
adc
inc
addr16
pop
pxor
ret
cmps
push
out
es
cmp
ret
dec
push
js
dec
rcr
(bad)
mov
addr16
mov
lock
inc
icebp
rcl
scas
sbb
sub
aaa
mov
xchg
push
xchg
shl
or
xor
inc
repz
jle
ins
xchg
mov
jmp
mov
sbb
push
xor
lods
shl
dec
xlat
arpl
ffreep
adc
je
gs
xor
push
pop
adc
aam
jae
aas
lds
push
lock
mov
mov
pop
add
mov
push
adc
repnz
aam
push
jge
sti
dec
sub
outs
sti
movs
out
outs
scas
jmp
dec
dec
aas
shl
cli
test
or
jb
dec
add
aas
mov
fistp
jl
sbb
pusha
pop
sti
in
sub
inc
pop
test
stos
or
inc
mov
xchg
xchg
fwait
aas
xor
lock
repnz
fisub
movs
cmps
aaa
jnp
out
je
fsub
push
and
scas
fmul
inc
arpl
enter
pop
or
les
adc
adc
(bad)
push
pop
pusha
and
mov
xchg
out
test
cvtdq2ps
mov
jmp
jmp
mov
out
sbb
add
mov
dec
adc
pop
jmp
jo
mov
xor
ret
mov
call
jmp
jle
sbb
adc
call
push
jb
rol
add
(bad)
pop
std
scas
nop
adc
inc
ret
inc
inc
pop
(bad)
mov
push
xor
sbb
out
call
(bad)
aas
pop
mov
ins
test
aas
xchg
mov
ret
cld
mov
out
out
mov
imul
or
hlt
jecxz
das
(bad)
pop
mov
mov
xlat
mov
cvttps2pi
mov
or
bound
hlt
inc
push
jbe
dec
fadd
or
ins
mov
test
loope
sbb
cld
jge
mov
and
push
repnz
lds
dec
or
push
sub
es
pop
push
addr16
call
gs
pop
je
stos
(bad)
stos
ret
clc
jne
add
pop
xor
push
sbb
ror
(bad)
jp
mov
push
sub
and
xchg
push
rol
mov
push
mov
repnz
repz
cmps
or
clc
pop
xor
pop
mov
shr
inc
pop
inc
sti
sbb
mov
xchg
jl
lods
shl
add
repz
fwait
ret
cld
je
vandps
int
stos
xor
xchg
or
jno
pop
clc
(bad)
or
fs
idiv
retf
stos
push
adc
sbb
pop
inc
add
inc
mov
jbe
add
or
inc
inc
mov
inc
mov
sbb
ror
jmp
sbb
out
pop
inc
ins
sbb
add
adc
or
or
repnz
sub
push
out
retf
out
lds
jbe
and
add
mov
cmp
dec
mov
push
lods
shr
inc
push
ja
(bad)
cli
out
jo
add
cmp
sbb
int
test
sbb
add
add
aad
rol
or
and
inc
ins
push
cmp
imul
mov
aam
push
inc
mov
mov
jo
jmp
inc
dec
push
jae
loopne
pop
mov
sub
fidivr
push
stos
ret
les
loopne
scas
push
sbb
cmp
pop
push
inc
push
add
fbld
add
addr16
aaa
sbb
and
loop
imul
jl
in
add
pop
mov
shr
jo
ret
add
xlat
addr16
dec
test
add
inc
cmps
clc
pop
pop
jp
mov
pop
mov
add
(bad)
xor
or
push
push
sbb
sbb
cmp
adc
ds
ret
leave
jae
outs
jne
sub
inc
mov
push
cmp
push
sub
(bad)
stos
sub
jmp
aam
xor
jecxz
mov
ss
(bad)
adc
add
mov
mov
push
adc
pop
int
mov
mov
xlat
push
cli
out
sar
sbb
push
scas
push
inc
cmp
ja
cs
cmc
dec
dec
push
sub
and
or
adc
iret
mul
in
xchg
mov
pop
(bad)
in
call
(bad)
ror
or
cmp
adc
sbb
push
repz
mov
dec
sbb
add
adc
sar
mov
shr
out
iret
test
out
neg
pop
and
pop
dec
push
fsub
mov
push
stc
je
sbb
clc
fwait
jle
addr16
jnp
inc
rol
gs
dec
pop
push
ficom
sbb
xlat
test
sub
movs
mov
sub
pop
push
(bad)
sub
jmp
enter
test
lahf
mov
ret
arpl
dec
shl
or
dec
jp
scas
or
jo
rcl
mov
mov
mov
cmp
pop
movs
add
imul
adc
pop
iret
or
test
xchg
jae
xor
jmp
retf
inc
and
ror
fisttp
cmp
and
add
xlat
stos
(bad)
cmc
aas
sti
push
mov
out
mov
sar
push
xor
mov
sub
adc
and
jp
repnz
xchg
add
mov
mov
fisttp
movs
out
jmp
lds
and
jo
cld
std
inc
clc
lahf
outs
dec
mov
lock
in
aaa
ins
add
pop
or
mov
mov
inc
push
jge
jecxz
shr
xor
xor
lahf
scas
xor
push
mov
gs
loope
repz
pushf
outs
inc
push
inc
mov
imul
bnd
sub
push
mov
lock
add
je
xor
xor
mov
cmp
xor
sbb
mov
retf
add
jl
outs
(bad)
test
(bad)
ins
in
push
ja
adc
retf
lds
arpl
jo
ins
shr
call
sub
add
mov
std
and
and
and
sbb
pop
pop
mov
add
std
(bad)
dec
loopne
mov
add
jo
pop
scas
cmp
push
dec
inc
cmp
push
fdivr
xor
push
ret
dec
add
clc
ret
inc
enter
jg
inc
pusha
push
pop
dec
nop
(bad)
call
add
fsub
or
inc
ret
(bad)
mov
(bad)
je
or
(bad)
daa
inc
sti
repz
(bad)
jb
mov
test
mov
mov
push
neg
outs
mov
jmp
push
mov
jmp
inc
dec
mov
addr16
imul
scas
ret
mov
cld
or
push
push
inc
push
inc
pop
mov
sti
sub
sub
ret
jle
cmp
mov
mov
sub
fiadd
push
and
pop
test
popa
test
arpl
add
cld
push
cmps
adc
(bad)
fs
push
xlat
inc
adc
push
sub
mov
les
std
lds
mov
js
jmp
add
cmp
cmc
scas
push
add
jmp
(bad)
push
loopne
(bad)
lock
push
mov
fbld
sti
lds
jp
or
and
inc
mov
in
lahf
mov
mov
loop
pop
ins
mov
enter
add
pop
call
icebp
jae
out
inc
xchg
push
dec
pop
bnd
add
loope
hlt
add
or
je
mov
push
loopne
push
and
out
imul
mov
out
mov
cld
jmp
ror
or
mov
(bad)
push
rol
ret
xor
adc
xor
dec
loop
sar
mov
ss
pop
cld
not
gs
fisttp
dec
and
inc
push
add
add
lock
lock
out
xchg
(bad)
and
rol
clc
pusha
add
test
fadd
fistp
xor
cmps
sub
or
adc
xchg
out
dec
pusha
repz
scas
sub
xchg
aaa
push
jno
rcl
leave
scas
cmp
dec
jle
mov
mov
push
inc
push
cwde
(bad)
jp
cmp
push
rcr
xlat
and
push
inc
je
mov
ret
jbe
lds
aas
dec
and
push
pop
mov
dec
cmp
and
lds
cs
test
add
jmp
imul
push
dec
and
test
or
pop
add
cld
add
pop
ins
leave
add
and
mov
push
ds
sub
jmp
pop
xor
sbb
mov
mov
push
inc
out
movsx
inc
add
fimul
add
xor
mov
cwde
mov
addr16
scas
rol
adc
mov
xor
fisub
(bad)
cmc
mov
add
dec
cmp
daa
xchg
cli
jmp
out
imul
jp
int
jae
fistp
adc
add
pop
cli
cmp
mov
outs
aas
push
arpl
push
inc
pop
loopne
and
loopne
or
inc
pop
std
and
jmp
mov
mov
rcr
loopne
cli
(bad)
data16
push
sbb
or
mov
or
cmp
cmp
fstp
or
aam
jo
sub
xlat
mov
andps
mov
fsub
shr
std
inc
ins
mov
jmp
sbb
adc
ret
xor
(bad)
mov
cmps
pop
adc
pop
pop
aad
fs
xor
mov
lods
dec
add
xor
ins
push
mov
arpl
mov
and
sub
or
in
test
and
movs
(bad)
les
neg
std
sbb
add
inc
mov
(bad)
xor
das
rol
dec
mov
sbb
and
adc
sub
and
loopne
push
movs
aas
out
and
adc
cli
cmps
pop
dec
(bad)
inc
outs
call
sbb
jne
cmps
add
popa
mov
aaa
jmp
and
add
mov
add
add
mov
cs
jbe
js
inc
mov
mov
jp
retf
or
out
add
loop
xchg
(bad)
jp
das
dec
loopne
pop
add
dec
xor
stos
inc
sub
std
scas
out
push
ins
mov
inc
sar
dec
aaa
movs
adc
or
ds
push
cmps
or
sti
dec
jno
pop
test
inc
push
and
push
mov
add
add
push
retf
jg
xor
out
adc
ds
rcl
add
and
xor
jl
ins
lahf
sbb
sbb
ss
xchg
mov
add
out
push
inc
cmp
and
mov
ror
sbb
lds
sti
int
inc
push
and
add
aaa
dec
mov
dec
aad
sar
out
add
mov
call
inc
cwde
and
call
jae
call
jmp
das
jg
sbb
ss
pop
mov
pop
(bad)
rol
push
jmp
push
shl
push
xor
cmp
aad
pop
clc
pop
dec
mov
test
xor
inc
sub
lods
mov
inc
nop
add
pop
pushf
push
cmp
mov
pop
lods
add
out
sbb
(bad)
(bad)
repnz
cmc
mov
pop
and
mov
call
add
aas
(bad)
(bad)
push
addr16
dec
xor
or
sti
sub
fbstp
test
jbe
add
das
pop
jmp
cli
loope
mov
sti
jae
test
inc
xchg
pop
or
add
mov
push
inc
or
scas
inc
les
fisubr
test
mov
jno
movs
outs
xchg
push
call
adc
add
test
fcom
mov
mov
loop
ret
cmp
xor
add
fisubr
jo
imul
fcom
fisub
and
(bad)
push
xchg
jbe
add
jmp
test
push
pushf
ja
stc
adc
outs
mov
mov
push
add
jo
or
loopne
xor
dec
add
push
ins
push
cdq
retf
fiadd
mov
xchg
call
mov
or
(bad)
add
push
mov
sub
sti
jbe
lock
int3
mov
sti
inc
test
push
pushf
and
cli
sub
inc
mov
inc
pop
scas
pop
jo
bound
add
test
xchg
icebp
out
aam
pop
int3
push
inc
inc
inc
push
adc
push
sbb
push
(bad)
push
inc
mov
(bad)
xchg
and
inc
inc
fcmove
ret
push
je
dec
movs
pop
(bad)
xchg
out
psubsw
add
std
fbld
mov
add
cmc
or
in
dec
pop
maskmovq
xor
sub
sub
or
das
jl
arpl
arpl
sbb
fs
mov
inc
shl
push
jle
(bad)
jmp
mov
sbb
dec
repz
aad
mov
aaa
sub
add
ins
je
mov
lock
std
jp
mov
xor
jg
aas
xor
sub
push
inc
ja
out
mov
and
inc
xchg
xchg
adc
lock
jge
rcr
mov
(bad)
or
pop
repnz
add
mov
pop
(bad)
pop
shl
mov
pop
scas
jmp
sub
inc
in
or
adc
cmp
or
outs
je
mov
or
out
(bad)
inc
mov
sahf
inc
push
out
lds
add
in
(bad)
push
pop
xchg
ds
pop
jmp
inc
ret
mov
add
pop
mov
ja
scas
or
icebp
(bad)
imul
push
mov
pop
jmp
outs
jnp
sub
mov
and
in
sub
dec
rcr
sahf
je
lock
pop
outs
dec
jg
add
mov
stc
cld
xchg
push
inc
sbb
mov
jmp
push
xchg
lods
outs
shl
hlt
and
jmp
(bad)
dec
mov
jge
pop
cmp
xchg
add
and
pop
hlt
fcomi
and
pushf
mov
mov
fiadd
call
fisub
jl
add
jg
lea
jmp
sahf
aas
mov
xor
mov
cs
iret
inc
fisub
jmp
inc
int
push
enter
jg
fnsave
push
lods
push
cmp
scas
jno
jnp
mov
je
fwait
in
cmp
fisubr
pop
or
leave
ficom
adc
sub
push
aas
sahf
fdivr
(bad)
lock
mov
fisttp
div
inc
push
push
pop
movs
stos
mov
out
inc
dec
fcmovbe
mov
xor
pushf
add
lods
sub
fnsave
adc
jecxz
cmp
and
pop
adc
jmp
arpl
cmc
ret
or
jge
push
pop
scas
mov
adc
imul
jp
test
push
and
or
mov
xchg
in
mov
dec
les
pop
push
mov
add
fs
xor
push
cs
test
fwait
add
(bad)
mov
shr
xchg
imul
cld
and
dec
dec
and
jp
aas
inc
movs
test
xchg
gs
out
and
or
adc
test
add
mov
(bad)
inc
test
popa
push
aas
fsubr
push
mov
xchg
cmp
fnstsw
mov
mov
inc
and
mov
or
addr16
je
rol
push
frstor
test
jb
xor
add
sub
imul
or
outs
xor
out
mov
out
mov
(bad)
test
fs
int3
ds
xor
in
or
inc
cs
sbb
outs
fbld
mov
jo
mov
or
test
std
or
jmp
icebp
push
pusha
and
fidiv
jle
dec
mov
test
std
(bad)
stc
mov
ret
ja
ja
movs
mov
xor
add
loopne
add
cmps
es
xchg
push
into
dec
xchg
fcmovnu
add
pop
test
sub
add
(bad)
out
ret
inc
adc
mov
pop
jae
cmp
jge
retf
inc
nop
aam
push
push
loop
jno
fsub
lock
std
ja
xor
inc
cdq
fsubr
xlat
inc
sar
out
add
ds
rcr
dec
jne
jecxz
and
loopne
leave
push
cs
gs
xor
dec
pushf
or
sti
or
das
and
pop
aaa
bound
aad
outs
movs
sti
test
xor
test
cld
jae
in
lahf
shl
sub
out
hlt
sbb
fwait
mov
jmp
xchg
(bad)
scas
inc
push
icebp
mov
jb
mov
mov
stc
sbb
sub
pop
dec
call
mov
out
push
jmp
std
add
arpl
mov
push
outs
push
cmp
aam
syscall
xor
add
dec
dec
or
sbb
fstp
inc
ret
xor
push
cld
inc
jmp
and
or
nop
rcl
mov
lods
mov
jns
pop
jmp
lahf
in
jg
jg
arpl
test
jmp
repnz
adc
es
ret
repnz
fisubr
lock
lock
push
addr16
adc
das
xchg
aaa
sbb
or
add
push
cmp
mov
jno
gs
dec
adc
rdpmc
sti
push
pop
int3
fisub
add
mov
shl
jbe
and
push
mov
std
push
inc
call
jb
or
push
xor
jmp
dec
mov
aas
je
cld
add
fs
xchg
das
jecxz
jl
lahf
mov
scas
or
inc
pop
mov
inc
inc
push
out
call
cld
sub
inc
xor
outs
mov
mov
inc
ret
(bad)
xchg
or
jae
xchg
fimul
sbb
pop
push
clc
sub
loop
xchg
out
mov
ja
push
mov
dec
clc
or
out
xor
push
std
add
push
pop
test
dec
dec
dec
and
test
dec
adc
pop
ins
mov
(bad)
adc
cmp
inc
mov
(bad)
jmp
mov
aaa
je
out
out
and
mov
cmps
pop
mov
retf
pop
dec
pusha
or
inc
retf
sti
dec
data16
mov
ret
scas
shl
push
jle
or
jae
or
fcomip
jbe
adc
movs
dec
sti
push
cmp
and
jmp
jmp
pusha
inc
mov
dec
mov
inc
out
rol
test
or
add
fistp
imul
adc
sbb
and
mov
in
or
pop
mov
(bad)
push
dec
orps
jne
mov
xlat
ret
clc
inc
into
stos
pop
mov
or
mov
sbb
xchg
inc
and
inc
loope
inc
pop
pop
add
jb
mov
addr16
push
out
mov
add
mov
(bad)
(bad)
mov
loop
sub
and
mov
loopne
inc
mov
pop
out
sbb
div
in
(bad)
mov
adc
cmc
or
inc
pop
jmp
aas
mov
inc
dec
fcomp
inc
sbb
push
dec
lds
ds
xor
jmp
inc
pop
mov
mov
dec
cmp
out
and
pusha
loope
mov
sti
inc
inc
std
das
retf
add
mov
aam
dec
cwde
hlt
outs
(bad)
or
mov
push
imul
pop
clc
pop
and
rol
std
xchg
repz
fcomip
xor
das
mov
mov
lds
add
loop
test
pop
mov
add
das
pop
mov
inc
adc
or
cs
aas
add
dec
jecxz
loopne
jl
adc
push
jb
push
imul
pop
inc
jmp
(bad)
and
add
push
je
xchg
in
and
and
push
call
sbb
jg
leave
sub
dec
ret
add
inc
aaa
call
xchg
mov
add
js
inc
cmp
mov
xchg
sub
adc
out
je
push
sbb
add
push
mov
xchg
add
sbb
mov
cmp
xor
mov
(bad)
es
das
and
cld
fistp
mov
add
std
push
mov
dec
lock
nop
aas
adc
pop
dec
imul
enter
cwde
xchg
call
jno
jae
fs
std
sbb
sbb
push
mov
push
xchg
cli
in
add
pop
jp
push
xchg
test
outs
(bad)
sti
lock
mov
jb
ja
pop
pop
out
dec
pop
xor
mov
or
cmc
add
adc
jp
scas
movs
add
pop
xor
inc
pop
push
mov
retf
jno
test
push
xchg
and
mov
dec
jmp
out
push
inc
outs
xchg
add
sti
pop
and
test
js
shl
xor
mov
cmp
pop
dec
es
dec
outs
or
mov
or
fs
sub
sub
mov
mov
add
or
pop
(bad)
cmp
adc
push
push
xchg
pop
push
scas
xor
retf
mov
rol
call
std
sbb
dec
jb
outs
sti
ret
adc
mov
(bad)
in
dec
push
pop
add
inc
mov
fild
dec
jae
push
shr
push
inc
mov
mov
dec
add
aaa
jo
inc
push
push
lods
push
mov
pop
mov
adc
xor
ja
dec
shl
xor
inc
daa
arpl
mov
mov
stc
in
(bad)
jg
das
push
and
das
push
cld
jmp
dec
xor
cs
out
aaa
test
repz
push
mov
pop
jo
mov
sub
or
sub
addr16
sub
lds
cli
inc
cli
sbb
adc
push
loop
jp
ret
xlat
mov
xchg
inc
add
mov
fisttp
or
in
push
cld
jp
add
inc
cwde
enter
dec
xchg
or
jmp
pop
lods
xchg
in
ins
fs
ja
clc
outs
pop
mov
pop
and
sub
push
inc
(bad)
sub
sar
cdq
outs
enter
dec
ds
xchg
mov
pop
jge
push
outs
inc
fwait
mov
pop
test
add
(bad)
out
(bad)
imul
ret
and
stos
inc
fs
arpl
jmp
ins
sbb
mov
cmp
mov
ret
pop
rcl
data16
xchg
cmps
mov
sub
mov
sub
sbb
or
or
xor
mov
call
fsub
pop
ds
mov
inc
adc
inc
mov
and
mov
mov
xor
dec
sbb
mov
and
cmp
inc
cmps
enter
push
test
or
inc
loopne
xchg
nop
bound
mov
cmp
aaa
adc
mov
sti
push
aaa
movs
sbb
push
sti
adc
add
add
lds
xchg
xor
(bad)
fcomi
mov
mov
outs
add
pusha
jae
aas
dec
adc
(bad)
sub
inc
xchg
icebp
sub
jp
xchg
inc
shl
push
mov
adc
into
sbb
sbb
nop
adc
enter
fild
inc
ret
cmp
cmp
push
aas
hlt
mov
mov
mov
inc
add
fcomp
jmp
dec
aas
mov
mov
test
push
dec
dec
out
jge
retf
dec
pop
aas
mov
lock
mov
add
dec
aad
add
mov
hlt
dec
hlt
out
ret
out
shrd
mov
out
dec
fld
pop
sbb
and
pop
hlt
mov
mov
call
mov
push
xor
push
or
or
xcrypt-ofb
cmps
stos
fimul
inc
clc
mov
int3
dec
ins
ret
cmp
jb
js
pop
and
mov
scas
rcr
sub
mov
sub
inc
jmp
or
add
call
test
adc
test
aam
(bad)
scas
inc
dec
fs
dec
data16
or
mov
test
daa
mov
pop
dec
daa
inc
(bad)
sub
mov
mov
mov
retf
mov
mov
or
push
(bad)
aam
call
and
inc
mov
dec
cmps
sub
out
push
lock
sti
push
mov
lahf
dec
add
pop
mov
mov
inc
ins
adc
sub
add
pusha
repnz
fs
push
or
xor
jmp
sbb
jmp
mov
push
ret
mov
add
out
push
add
stos
pop
mov
adc
aaa
mov
out
mov
jnp
es
mov
pop
test
push
pop
or
add
jl
push
inc
test
xchg
(bad)
out
iret
mov
cmc
jo
mov
mov
add
cli
xor
sub
push
mov
push
pop
sar
(bad)
pusha
xor
je
cs
sub
dec
pop
jg
mov
(bad)
mov
fimul
jmp
cld
(bad)
pusha
mov
or
sub
je
pop
xchg
repnz
or
fs
adc
xchg
fldcw
scas
fcmovu
icebp
pop
adc
loopne
xor
jbe
inc
jno
imul
xchg
loope
mov
pop
mov
add
call
pop
mov
pusha
add
pusha
fbld
cmc
mov
cli
loopne
push
mov
aam
inc
push
js
lods
pop
and
or
sbb
das
dec
out
(bad)
xor
pop
addr16
mov
out
mov
icebp
mov
add
out
xor
out
fs
mov
dec
ja
or
in
repz
lds
mov
inc
or
fs
loop
cmp
std
imul
push
je
je
xchg
fld
xlat
sbb
mov
pushf
inc
add
adc
mov
jge
ins
jmp
pop
pop
adc
jae
setbe
sub
std
xor
sub
inc
data16
push
push
lods
fdiv
mov
cld
xchg
nop
mov
pop
inc
dec
repz
mov
out
mov
jmp
retf
mov
stc
sbb
ret
pop
adc
adc
jae
outs
cmp
add
mov
sar
aam
jl
or
out
sar
aam
enter
ret
jbe
mov
out
mov
add
or
inc
sub
mov
add
mov
ret
push
lock
dec
mov
test
(bad)
gs
mov
add
outs
ret
clc
loop
aad
or
push
cli
cli
dec
sbb
in
movs
inc
jno
xor
adc
call
adc
or
xor
push
or
sub
adc
retf
aas
call
sbb
out
sbb
inc
mov
(bad)
or
ja
(bad)
sbb
mov
ins
fild
jnp
jae
inc
inc
ins
jmp
movs
mov
in
mov
pop
dec
sbb
shl
add
jae
push
aas
out
inc
and
pop
(bad)
push
pop
subps
mov
lods
mov
push
dec
inc
push
sbb
or
adc
add
lds
pop
out
pop
add
cld
adc
out
ret
ror
add
push
pop
inc
cs
aam
jecxz
ucomiss
loopne
loopne
adc
sbb
mov
div
lds
and
movs
mov
pusha
gs
or
dec
add
out
outs
aaa
fisttp
mov
add
lods
scas
and
rol
add
enter
sbb
sti
mov
mov
mov
ret
mov
sub
inc
les
out
aaa
dec
push
pop
js
mov
cli
sub
pop
nop
mov
je
pop
inc
pop
add
ret
pop
sbb
pusha
mov
and
jno
sub
mov
mov
loopne
or
sbb
fwait
and
scas
js
add
dec
(bad)
jae
bound
mov
mov
sbb
aam
cmovae
xchg
sar
xor
(bad)
imul
movs
pop
test
pop
inc
push
std
lahf
outs
outs
syscall
jmp
cmp
(bad)
cmc
pop
mov
xor
mov
mov
jmp
fs
dec
ficomp
ins
inc
loope
cdq
enter
arpl
and
or
test
ret
out
(bad)
pop
clc
cmps
add
xchg
inc
xchg
cmp
mov
mov
mov
xchg
and
xor
push
ja
pop
test
(bad)
fisttp
aam
xor
call
scas
out
pop
add
push
pop
xchg
cmp
add
and
mov
mov
aaa
sahf
out
cli
pop
or
es
mov
int
arpl
dec
hlt
cwde
mov
xchg
cmp
in
cmp
mov
shl
inc
inc
mov
cmp
pop
dec
xchg
adc
add
pop
lock
ret
(bad)
arpl
and
call
add
cmp
mov
pop
arpl
sbb
popa
mov
mov
mov
mov
fs
sbb
xlat
dec
push
jmp
aas
imul
test
sbb
push
mov
sbb
cmp
pushf
mov
pop
lock
xchg
mov
fidivr
push
ret
jl
push
dec
mov
repnz
add
(bad)
ja
out
(bad)
push
push
add
sbb
or
jmp
add
add
and
nop
or
inc
push
and
data16
je
xor
push
pop
push
add
dec
pop
call
xor
jmp
jmp
fstp
cld
mov
js
inc
mov
retf
push
ror
add
pop
mov
push
lods
mov
mov
xor
rol
or
(bad)
fnsave
lock
js
add
daa
sbb
sahf
and
call
or
out
inc
sub
xor
mov
sti
rol
inc
push
xor
sub
push
fs
retf
clc
xchg
fsub
and
rcl
cld
call
dec
es
sbb
sbb
add
push
(bad)
in
test
or
mov
cwde
add
pop
push
shl
arpl
pop
aaa
and
mov
lds
xchg
imul
scas
adc
inc
paddb
pop
lods
and
adc
mov
mov
call
js
ds
aas
fbld
mov
add
jg
add
test
sub
pop
es
xchg
adc
mov
test
mov
stos
mov
shl
pop
hlt
pop
std
mov
xchg
stos
xor
in
rcr
pop
push
cmps
sar
adc
push
mov
inc
rcr
mov
imul
call
push
mov
imul
add
repnz
mov
jp
das
dec
dec
pop
sub
or
pop
inc
out
mov
and
jecxz
add
ins
loopne
xor
pusha
inc
pop
push
add
shr
mov
ret
xchg
add
adc
aaa
js
dec
push
sub
stc
mov
pusha
mov
push
sbb
ror
push
sti
pop
jl
fwait
adc
push
test
enter
aam
(bad)
das
mov
(bad)
cmps
(bad)
jmp
sbb
dec
inc
call
outs
or
loope
mov
out
inc
jl
mov
push
outs
cmps
adc
retf
pop
mov
lods
call
jg
xor
add
(bad)
adc
push
bound
xchg
addr16
push
pop
js
pop
or
or
mul
dec
ret
enter
in
and
jmp
push
out
adc
mov
and
addr16
mov
outs
mov
cld
not
sar
inc
shr
rcl
nop
scas
xor
fiadd
dec
dec
xchg
cmp
pop
inc
lods
xchg
aam
sbb
inc
aad
add
test
mov
pop
xor
inc
inc
leave
ret
push
adc
inc
or
adc
ja
sub
adc
arpl
mov
pop
push
pop
(bad)
outs
adc
add
jnp
outs
xor
dec
inc
adc
add
inc
mov
sbb
push
adc
push
bound
sub
cmp
push
jae
xor
repz
neg
aaa
inc
mov
hlt
inc
sub
jae
out
mov
mov
hlt
aas
gs
cwde
sbb
punpckhbw
test
lds
and
or
sbb
pushf
sub
sysret
sub
cmc
imul
mov
lahf
add
adc
std
adc
dec
mov
cmp
push
ja
cld
add
jge
pop
add
js
xor
hlt
mov
mov
rcl
scas
cmps
inc
xor
inc
das
jp
jecxz
int
inc
inc
mov
dec
test
jle
mov
sbb
(bad)
or
mov
sub
call
js
(bad)
fisttp
inc
inc
outs
dec
inc
cmp
inc
cwde
ret
or
aas
xor
popf
bound
push
xor
pop
cmp
mov
dec
ret
stos
ins
jb
mov
or
inc
pop
loop
dec
ret
cmc
(bad)
push
inc
xor
adc
enter
push
hlt
(bad)
jg
cld
push
mov
clc
jmp
push
sbb
sub
ret
adc
push
jle
cli
mov
xor
dec
iret
test
mov
pop
xor
clc
ins
mov
cs
xchg
push
cld
pop
lods
shl
fs
add
push
bound
adc
add
sbb
lock
sub
fs
inc
movs
sub
xor
jmp
outs
lods
ss
adc
cld
or
sbb
leave
pusha
mov
and
js
(bad)
pop
mov
inc
jl
movs
cmps
loop
jmp
inc
imul
fiadd
(bad)
sbb
mov
inc
dec
(bad)
pop
scas
call
xchg
ret
ins
mov
push
fisubr
cmp
xrelease
mov
out
aad
dec
outs
rcr
iret
fcmovnb
call
aaa
or
rol
loopne
cmp
add
adc
adc
cmp
add
inc
jb
push
jmp
inc
pusha
fadd
not
cmc
call
rcl
dec
mov
outs
hlt
dec
mov
push
push
pop
and
(bad)
dec
pop
sub
ins
mov
xchg
call
pop
outs
(bad)
dec
or
or
push
jmp
or
stos
add
add
test
cli
into
xchg
sub
sbb
jae
inc
pop
arpl
push
or
adc
aaa
cwde
jg
or
pop
push
inc
dec
es
pop
push
xor
cmp
jmp
pop
and
cmps
call
and
add
rcl
inc
aaa
test
arpl
push
mov
out
push
pop
ins
frstor
call
mov
add
inc
pop
pop
ret
sbb
adc
daa
bound
pop
push
sbb
repz
mov
inc
in
mov
loop
sub
inc
add
and
fdiv
jns
push
or
pop
mov
loope
push
(bad)
(bad)
in
mov
pusha
div
jecxz
gs
cmp
xor
or
ins
mov
jle
pop
inc
add
fidiv
push
(bad)
idiv
aas
cli
add
cld
sbb
pop
idiv
push
or
ja
mov
movs
jnp
(bad)
scas
dec
pop
add
dec
inc
or
icebp
bound
mov
aaa
(bad)
outs
dec
sub
stos
mov
js
and
push
and
fsub
sbb
dec
jmp
add
or
aas
adc
inc
inc
mov
(bad)
push
or
add
retf
clc
dec
and
xchg
(bad)
pop
in
dec
pop
mov
mov
repnz
push
jae
icebp
aas
inc
inc
aaa
test
movs
test
lds
xchg
pop
push
jp
cmovle
mov
ret
mov
sbb
cld
mov
fmul
scas
sub
ss
add
call
adc
mov
sbb
dec
cmp
add
bound
test
jmp
(bad)
aaa
and
jmp
(bad)
and
push
dec
pop
ins
outs
jnp
pop
mov
aas
cmp
(bad)
or
inc
mov
dec
push
jbe
and
test
or
jg
addr16
arpl
jnp
mov
add
sbb
or
out
fsubr
mov
jg
ja
inc
outs
push
inc
mov
shl
xor
push
add
les
jmp
cmp
or
cmp
iret
dec
sub
popa
pusha
jnp
mov
push
movs
aam
push
sti
and
out
repnz
call
test
mov
jmp
and
xchg
sub
inc
call
pop
and
sub
jne
cmps
cmp
pusha
ja
call
add
or
fcmovb
and
add
mov
or
xlat
cmp
add
pop
cmc
(bad)
aas
inc
dec
inc
(bad)
mov
pop
aas
pop
ret
jecxz
stc
je
out
mov
add
fdivr
sub
dec
sbb
aas
jmp
jp
and
mov
and
mov
sbb
cld
or
add
enter
and
inc
push
or
pusha
das
add
imul
push
cmp
bnd
stc
mov
jg
inc
add
in
fisttp
mov
fs
mov
ins
sbb
mul
out
bound
push
inc
div
adc
mov
je
cmps
pop
ret
in
cmp
and
inc
xchg
mov
aas
adc
dec
add
ret
imul
fs
fwait
scas
add
(bad)
(bad)
daa
mov
add
lds
xchg
mov
dec
or
dec
in
inc
pop
or
fisub
adc
inc
xor
mov
xchg
mov
mov
pop
add
ret
add
enter
call
dec
jmp
loop
pop
inc
jnp
add
or
cwde
ins
inc
fadd
enter
add
pusha
dec
in
stos
icebp
push
push
add
mov
push
sbb
xor
mov
sub
mov
mov
mov
mov
push
sti
xchg
hlt
or
sti
scas
push
fisubr
push
mov
js
pop
push
div
dec
pop
add
xchg
mov
adc
pop
das
push
das
cmp
inc
test
push
and
pushf
xlat
pop
aad
not
mov
jl
clc
mov
adc
mov
mov
add
test
or
jmp
push
inc
or
aas
iret
shl
outs
loop
fdiv
jmp
rcr
and
jecxz
sub
ret
add
arpl
inc
inc
out
ret
cmps
ss
ss
sbb
cmp
mov
inc
out
out
mov
std
sbb
cmps
add
lds
inc
aam
add
sbb
or
je
adc
jb
inc
mov
imul
test
jno
dec
lods
jl
push
leave
ficomp
scas
ror
pop
dec
cmp
jl
jnp
icebp
mov
and
push
scas
adc
cmp
add
mov
dec
dec
pop
pop
inc
dec
cs
xchg
inc
mov
push
push
fadd
jmp
xor
add
sbb
div
sbb
xor
or
mov
and
mov
(bad)
icebp
shl
xor
mov
add
cmp
dec
sbb
dec
push
push
mov
dec
or
fucomip
pop
into
call
dec
or
movs
pop
add
aas
xchg
fs
sub
cs
das
sbb
test
mov
ins
lds
jle
jnp
inc
(bad)
test
cmp
daa
jmp
or
or
fcom
or
or
lock
call
xor
rcr
add
je
add
aam
mov
mov
std
addr16
call
mov
xchg
push
call
and
mov
scas
push
mov
pop
mov
stos
test
mov
push
and
sbb
push
adc
ss
fwait
add
xor
push
(bad)
paddq
inc
xor
add
cmp
push
daa
int
call
mov
pop
test
pop
sbb
test
ds
es
ret
mov
fs
repz
pop
sbb
stos
fistp
add
fiadd
gs
repnz
and
das
pop
inc
loop
and
call
out
dec
cmc
pop
arpl
inc
xor
(bad)
(bad)
jmp
cmps
jne
js
mov
mov
sti
jg
add
push
arpl
push
add
and
jmp
sbb
lahf
adc
fldcw
cmc
fimul
ja
xchg
push
cld
xor
scas
mov
and
(bad)
fcmovnb
sahf
aaa
jp
sbb
push
aas
jmp
sbb
dec
mov
dec
xor
imul
inc
nop
sbb
scas
loop
(bad)
mov
jno
inc
retf
fs
push
call
scas
mov
push
sub
add
pusha
(bad)
arpl
je
or
stos
lock
inc
jbe
pop
push
push
or
pop
dec
in
push
fild
pop
cwde
div
inc
mov
adc
cwde
(bad)
mov
push
inc
dec
push
cli
repnz
out
push
inc
mov
inc
movs
and
jne
cmp
xlat
inc
ret
jecxz
cld
call
out
pop
dec
cld
dec
mov
adc
adc
or
ins
cld
rol
popf
lods
into
sbb
add
push
or
ret
mov
fs
xor
cmp
or
xchg
push
push
xor
dec
and
loopne
and
vmovups
fs
mov
jno
movs
mov
ds
ins
and
ins
scas
ss
ror
add
push
rol
in
mov
cli
not
sar
outs
es
push
rsqrtps
xlat
xor
test
fs
dec
cs
bound
dec
loope
jmp
add
pop
fcmovbe
outs
mov
sahf
sbb
push
inc
pop
push
test
cmp
(bad)
mov
xor
adc
push
ret
and
sub
xchg
push
add
sub
je
push
(bad)
dec
div
xlat
add
mov
pusha
sub
movs
or
jno
jae
imul
and
out
mov
sti
inc
mov
nop
mov
fsubr
retf
add
dec
fisttp
and
inc
enter
mov
inc
or
inc
(bad)
jg
jge
pusha
aad
fs
xor
xor
xchg
jl
push
jb
neg
cld
inc
sahf
cmp
mov
pop
movs
mov
cs
sti
xchg
mov
aad
mov
mov
out
ret
cmp
jmp
cmp
ins
inc
int3
and
cmp
sbb
(bad)
(bad)
mov
or
add
repnz
cmp
std
mov
dec
mov
retf
es
aas
popa
inc
aas
inc
mov
mov
pop
fisub
aas
add
sar
(bad)
jae
dec
rcl
call
nop
je
scas
inc
imul
ins
dec
xor
add
pushf
sbb
xchg
rol
jb
xchg
mov
adc
ja
cmovle
shl
loop
dec
mov
sub
retf
dec
xchg
xor
or
scas
cmp
pop
mov
push
dec
pushf
dec
mov
mov
dec
push
add
sub
jl
pop
and
ins
pop
mov
mov
retf
jle
jmp
and
mov
loop
out
das
sub
adc
pop
or
out
(bad)
xlat
ja
or
mov
sti
jnp
lock
pop
inc
add
sub
or
push
dec
shl
push
dec
fdivr
inc
sar
push
or
pop
push
xchg
mov
ss
pop
inc
lods
jmp
loope
inc
push
es
mov
mov
not
out
hlt
psubq
mov
cmp
shr
mov
rcr
inc
mov
jg
mov
dec
inc
and
dec
sti
sti
push
arpl
out
movs
cmp
icebp
je
ret
add
mov
mov
mov
sbb
repz
mov
fstp
ficom
add
mov
ins
stos
and
push
retf
inc
push
jo
push
push
sti
ins
inc
sti
loope
lods
div
fwait
gs
cli
xor
pop
daa
bound
pop
popa
push
or
push
adc
adc
fs
or
sti
inc
jae
sub
mov
(bad)
jg
sbb
inc
je
mov
inc
and
ja
in
lahf
(bad)
pxor
adc
jg
mov
(bad)
(bad)
das
sar
inc
ret
int
sub
inc
jnp
mov
mov
js
adc
add
out
dec
jmp
add
es
dec
loop
jecxz
(bad)
pop
and
inc
adc
scas
inc
fs
imul
add
dec
in
xchg
adc
ret
and
je
les
pop
jae
xor
push
push
js
mov
(bad)
aas
xabort
adc
add
mov
sub
inc
pusha
add
retf
sub
pop
mov
or
jp
test
inc
or
aad
lds
pop
es
and
scas
mov
inc
ret
ins
andps
cmps
add
aam
xchg
sub
fild
add
pop
mov
sbb
(bad)
dec
scas
dec
add
cld
push
pop
or
loop
(bad)
fdiv
js
add
jo
jle
push
jne
or
jae
push
adc
stos
bound
xchg
push
mov
push
rcl
push
pusha
fidivr
test
sbb
jge
mov
push
(bad)
mov
xchg
push
aas
or
sti
mov
pop
int3
xchg
gs
daa
add
nop
xor
cmp
inc
add
out
xchg
dec
mov
adc
inc
mov
test
jmp
adc
pop
cmp
sub
out
pusha
add
imul
and
aaa
std
xchg
jbe
adc
test
ret
push
push
cmp
(bad)
rol
jmp
or
out
mov
std
pop
sbb
inc
out
xchg
inc
aad
call
or
mov
pushf
mov
inc
arpl
ficomp
and
in
xor
mov
and
out
sbb
push
cmp
sar
aas
push
outs
ret
add
jmp
fldcw
or
add
addr16
scas
adc
inc
pop
pop
pop
add
jb
sbb
rol
inc
dec
sbb
inc
out
loopne
je
or
ftst
dec
push
jmp
or
push
add
inc
adc
pop
repz
or
faddp
inc
pop
inc
and
in
or
jge
dec
pop
out
lahf
and
outs
add
call
add
xlat
cmp
cmp
xlat
pop
std
stos
dec
push
xchg
jbe
es
or
daa
sbb
sub
rol
inc
rol
fisub
mov
repnz
fcom
mov
lods
cmc
pop
ja
push
int
gs
push
push
in
dec
ja
stos
fwait
mov
nop
je
out
push
jl
in
cmp
adc
push
or
ss
pop
or
push
push
std
adc
pop
xor
out
mov
lds
pop
cli
cmp
add
push
(bad)
mov
xrelease
sub
inc
lods
add
pop
and
xor
mov
jmp
arpl
call
jae
push
mov
push
inc
inc
or
mov
fmul
bound
in
mov
repnz
sbb
mov
mov
outs
inc
or
mov
inc
clc
dec
mov
cld
fwait
jmp
xor
xlat
xchg
mov
repnz
out
fsub
lods
(bad)
xchg
cli
clc
adc
push
in
hlt
sub
clc
mov
add
jbe
es
(bad)
scas
(bad)
inc
mov
sti
pop
ret
es
or
pop
or
sub
mov
lock
sbb
pop
dec
repz
inc
push
mov
pop
add
dec
jl
push
push
push
test
sub
push
push
pop
retf
std
jmp
cmp
mov
sti
hlt
sbb
shl
fidiv
inc
arpl
jmp
inc
mov
cld
or
cmp
fcomp
(bad)
jmp
je
push
mov
mov
dec
cli
bound
inc
mov
(bad)
jg
adc
jg
jnp
je
fild
sub
xchg
scas
ror
hlt
mov
rol
inc
xor
mov
ins
mov
clc
push
mov
ja
add
ret
push
pop
fldl2e
jmp
add
dec
icebp
push
(bad)
jmp
retf
mov
push
inc
xchg
mov
push
pusha
mov
dec
out
jnp
xlat
gs
outs
inc
lods
clc
movntq
out
aas
call
ret
pop
cmp
test
inc
sub
add
jp
pop
int
call
dec
popa
pop
inc
mov
jl
add
test
jle
and
icebp
cmp
das
fiadd
mov
jl
dec
dec
test
out
pop
out
sub
nop
mov
push
mov
clc
(bad)
or
or
mov
mul
mov
or
popa
xor
adc
mov
sbb
pop
test
push
jnp
iret
jmp
test
push
repz
push
fs
es
inc
lods
pop
clc
add
outs
pop
das
mov
outs
or
lods
xor
(bad)
cmps
jo
test
call
loopne
inc
jg
(bad)
clc
jmp
fdivp
ins
cs
adc
mov
stos
add
cmp
popa
cli
and
scas
sahf
inc
das
leave
jmp
add
push
mov
xor
mov
clc
inc
ret
lods
ss
and
mov
or
sub
int3
dec
loopne
(bad)
push
or
pop
inc
sti
inc
lahf
cli
inc
and
mov
(bad)
push
xor
cmps
into
dec
ret
jno
add
xlat
loope
nop
or
jg
inc
(bad)
int
mov
ja
sub
enter
cli
push
push
fwait
sbb
jmp
dec
push
dec
xchg
push
mov
hlt
mov
sub
sbb
lods
hlt
arpl
imul
pop
inc
call
push
add
out
dec
push
jbe
adc
dec
inc
je
pop
adc
cmp
inc
mov
ret
call
mov
xor
pop
inc
clc
aas
inc
es
aam
xor
test
or
lds
neg
push
adc
mov
shl
xor
mov
loop
(bad)
cmp
adc
push
add
sub
gs
add
gs
add
pop
enter
cli
xchg
pushf
jmp
ror
or
push
dec
adc
or
inc
sbb
mov
mov
test
pop
es
dec
loop
xchg
addr16
sbb
jmp
pop
mov
in
(bad)
in
clc
jnp
xor
inc
push
call
sub
nop
lock
rcl
(bad)
jae
dec
clc
(bad)
and
daa
add
add
ret
dec
cli
and
inc
sti
inc
scas
cli
add
xchg
repz
jmp
add
lods
lods
ret
fiadd
ret
jl
ins
jmp
adc
adc
inc
adc
add
jle
movs
out
cld
xchg
jmp
push
sbb
je
push
bound
test
(bad)
pop
pop
xor
pop
arpl
sub
jecxz
adc
or
jecxz
jle
dec
cld
push
sti
(bad)
mov
call
push
pop
(bad)
jae
inc
loopne
push
cld
jb
adc
add
std
ins
out
stos
mov
inc
emms
sub
inc
in
inc
jg
add
(bad)
dec
sub
ja
add
mov
test
(bad)
arpl
das
mov
cmp
pop
adc
pop
arpl
call
lea
hlt
or
push
retf
dec
ins
mov
(bad)
aam
les
add
pop
jmp
inc
mov
pop
cli
je
add
jp
push
pop
imul
cmps
out
cmps
sbb
adc
cmp
aam
vorps
fild
xor
push
jle
ret
inc
loope
ret
or
add
sbb
and
pop
cmp
daa
mov
out
retf
js
or
(bad)
push
xchg
or
xor
sbb
pusha
cld
mov
pop
call
bound
pop
out
into
add
sbb
cmc
add
ds
xor
cs
or
inc
cdq
sar
fwait
mov
inc
test
hlt
push
push
add
in
call
mov
add
xor
sbb
movs
icebp
mov
ret
test
cs
push
adc
test
pusha
ret
adc
outs
sbb
out
test
cld
mov
arpl
add
mov
inc
dec
cmc
cmp
ja
jg
inc
pop
and
and
jecxz
push
jmp
out
(bad)
jg
movs
mov
xchg
es
pusha
pop
add
inc
adc
pop
sbb
mov
mov
add
jo
bound
mov
adc
fidiv
mov
(bad)
mov
jb
(bad)
sti
pop
inc
retf
neg
ret
stos
jecxz
dec
sti
mov
sar
lock
jae
mov
rcl
fs
cmp
ds
sti
jg
mov
dec
(bad)
aas
dec
add
repnz
pop
sub
rol
mov
mov
dec
inc
data16
sahf
push
cmp
or
jmp
push
cmp
add
adc
(bad)
mov
fs
(bad)
push
stos
push
and
cmp
jae
inc
pop
sbb
sar
dec
add
ja
mov
pop
sbb
pop
inc
push
push
stos
fldcw
adc
jl
pop
cs
cmps
add
mov
mov
test
mov
bound
mov
and
mov
inc
inc
xor
lods
xchg
jo
sahf
(bad)
rol
adc
pop
clc
or
cs
and
push
and
sub
or
sti
ds
out
cmps
jb
push
test
cld
xchg
aas
mov
lods
xor
mov
fdivr
das
mov
inc
xchg
adc
sub
add
mov
mov
aam
inc
ds
add
dec
fcmovnb
mov
movs
ja
sub
adc
dec
addr16
pop
inc
sti
clc
add
lea
rol
push
in
push
ret
adc
lds
out
arpl
pop
jmp
pusha
test
rcl
clc
aam
pop
xor
jp
sub
add
and
dec
mov
mov
pop
outs
mov
std
fbstp
mov
add
mov
push
lods
pop
fild
call
add
push
push
aad
div
les
mov
ret
call
(bad)
std
inc
jmp
into
movsx
inc
movs
push
jl
pop
push
out
sbb
add
cli
mov
push
mov
lahf
pop
retf
pop
sub
adc
xchg
xor
idiv
fiadd
pop
or
jnp
pop
mov
sbb
(bad)
es
mov
add
cmp
addr16
aaa
pop
mov
push
add
pushf
mov
pop
mov
(bad)
push
sti
dec
or
mov
das
call
les
or
pop
pop
mov
stos
(bad)
aad
inc
sub
std
loopne
adc
in
xchg
icebp
sub
jmp
or
inc
adc
arpl
jecxz
fcmovbe
test
dec
jo
mov
outs
movs
jae
addr16
(bad)
inc
pslld
(bad)
repz
mov
push
jo
pusha
arpl
xlat
mov
xor
push
sbb
jl
(bad)
mov
adc
arpl
cmp
dec
mov
mov
bound
aas
inc
int
adc
cmp
adc
std
aas
js
repnz
jae
push
jle
cmps
fisub
call
outs
mov
int
and
sbb
les
mov
(bad)
mov
loopne
push
cmc
mov
mul
shl
cli
mov
sbb
push
int3
(bad)
or
test
mov
mov
cld
cmp
clc
nop/reserved
inc
mov
ret
xor
addr16
jmp
mov
dec
shr
jmp
inc
push
push
inc
scas
push
push
add
inc
pusha
inc
in
xor
add
adc
sub
int
adc
and
mov
pop
out
call
push
pop
adc
je
(bad)
mov
test
(bad)
and
pop
sub
fcomp
shl
iret
inc
adc
add
mov
(bad)
lds
or
repz
or
cwde
sbb
das
(bad)
data16
lea
mov
mov
sahf
sbb
mov
std
add
mov
inc
loope
(bad)
mov
and
scas
cld
push
ins
inc
je
movs
inc
movd
mov
arpl
mov
xor
adc
add
mov
mov
jmp
icebp
cmps
mov
(bad)
push
or
push
add
push
push
xchg
sub
ret
std
sbb
call
inc
mov
pop
fidivr
add
repnz
pop
jmp
jmp
sub
test
or
mov
xor
and
mov
sti
ins
push
mov
inc
jb
stos
pop
daa
and
push
(bad)
jg
xchg
xlat
ss
or
mov
xor
mov
fisubr
iret
inc
jl
(bad)
jmp
pop
jne
pop
jmp
ins
aas
out
out
push
aas
mov
lock
cmp
ror
cld
push
xchg
pop
fst
sti
mov
or
(bad)
out
pop
movs
add
inc
inc
adc
imul
ficom
cmp
mov
inc
add
push
out
push
lods
add
add
add
push
pop
call
out
inc
jmp
and
jae
and
out
pop
push
push
inc
fmul
shl
sub
outs
call
js
sub
push
ret
inc
out
or
mov
push
ss
lods
not
jo
syscall
fcomp
icebp
test
adc
and
dec
loop
xor
xor
mov
cld
push
xor
xor
adc
nop
add
xchg
add
and
stc
cmps
call
mov
mov
imul
inc
xchg
mov
in
push
pop
push
mov
adc
ret
or
pop
or
stos
(bad)
retf
ds
fiadd
dec
iret
add
or
adc
dec
jb
push
push
push
cli
push
jecxz
xchg
aam
inc
adc
mov
aas
add
mov
adc
mov
inc
scas
inc
push
fild
inc
fs
out
stc
out
push
push
adc
in
push
pop
xchg
mov
sbb
(bad)
cmps
jecxz
cli
call
add
mov
add
dec
je
push
dec
mov
arpl
mov
inc
loopne
adc
xchg
mov
lds
imul
mov
sub
sub
or
out
xor
call
adc
and
das
cmp
pop
or
cs
xchg
and
aam
mov
mov
add
(bad)
push
push
xchg
aad
xchg
sar
sub
push
push
ret
shr
sbb
div
loop
jmp
in
jno
dec
loopne
xchg
push
push
mov
xor
shl
mov
in
cli
mov
or
test
mov
sub
push
push
test
inc
ins
test
cli
scas
xchg
pop
cmp
push
iret
data16
mov
push
cmp
adc
add
pusha
sub
cmp
icebp
stos
mov
mov
push
inc
mov
lds
inc
inc
pop
popa
xlat
jg
out
jl
dec
mov
arpl
add
pusha
fisttp
fimul
xlat
xchg
dec
inc
enter
lahf
add
call
pop
jns
mov
ud1
imul
or
sbb
mov
outs
and
push
div
arpl
mov
inc
jnp
sub
dec
mov
out
dec
inc
sub
dec
sbb
out
inc
adc
cwde
pop
stos
imul
fwait
fwait
adc
or
mov
dec
cmps
or
pop
jle
sbb
out
dec
adc
dec
push
add
dec
dec
std
ja
mov
or
dec
dec
push
out
or
xor
stc
add
add
mov
mov
pop
pop
add
ja
fnstsw
aas
adc
inc
mov
das
mov
jnp
xlat
call
adc
adc
jg
rol
jae
lds
aaa
(bad)
out
xchg
ins
jg
or
xor
out
xchg
lods
dec
ret
mov
test
adc
in
dec
loope
cwde
(bad)
rol
add
lods
test
push
ds
cmps
mov
loopne
outs
xor
jge
add
data16
mov
xor
ret
jo
retf
fadd
pop
adc
test
add
jno
and
call
loopne
pop
jg
test
(bad)
sbb
imul
jb
call
cli
pop
adc
add
xchg
out
pop
iret
cmps
mov
enter
xor
popf
mov
cs
dec
aad
dec
js
data16
shl
popf
scas
dec
mov
mov
ins
shl
es
xchg
dec
mov
fstp
fmul
pop
xlat
sbb
dec
add
or
pop
(bad)
jle
inc
aam
adc
jg
dec
out
idiv
cmp
or
sti
iret
cmp
in
and
jmp
push
inc
add
adc
imul
add
mov
aas
stos
pop
inc
pop
lock
dec
dec
cld
call
inc
inc
loope
loope
shufps
call
test
mov
mov
mov
aad
mov
retf
xlat
mov
je
not
fwait
(bad)
(bad)
int3
mov
arpl
push
push
inc
jmp
xchg
test
dec
jae
inc
or
scas
fwait
ret
sub
push
dec
jmp
mov
sbb
loop
mov
mov
or
or
aad
test
or
jno
add
out
into
cmp
hlt
jmp
dec
mov
(bad)
stc
mov
inc
cmps
push
and
jp
scas
inc
aaa
sub
pop
int3
ror
fimul
mov
es
jmp
sbb
sbb
inc
(bad)
mov
shr
adc
aas
push
push
rcr
call
mov
les
mov
sbb
mov
or
mov
or
mov
ret
pusha
fnsave
or
adc
test
sar
pcmpeqb
dec
frstor
mov
mov
xchg
adc
xor
mov
inc
test
mov
je
push
das
xor
mov
jae
or
inc
push
add
inc
push
clc
or
pusha
xor
shl
ret
pop
sub
pop
jo
sub
pop
je
mov
dec
outs
adc
mov
sbb
inc
stc
pop
pop
scas
xchg
hlt
rcr
mov
pop
cld
data16
retf
gs
(bad)
jg
mov
mov
adc
xor
inc
sbb
jmp
jmp
rol
int
ja
in
(bad)
xor
(bad)
mov
add
sbb
rcl
adc
idiv
sti
push
outs
aam
pop
inc
dec
inc
pop
cmp
lahf
dec
cli
pop
adc
dec
stc
jmp
jnp
mov
ins
jbe
int3
sbb
jle
out
push
sub
ret
push
mov
xlat
push
push
or
push
fist
cmp
add
and
push
mov
dec
push
fcom
clc
adc
push
cs
idiv
xlat
repnz
cdq
lea
push
mov
fwait
(bad)
loop
smsw
mov
pop
push
imul
es
cwde
ret
sub
fsubr
mov
inc
xor
out
mov
ret
inc
jge
push
jmp
test
mov
dec
jmp
mov
push
pop
pop
pop
jae
inc
inc
ret
adc
xlat
cmp
mov
dec
(bad)
mov
push
out
(bad)
in
fcmovb
jmp
jae
arpl
xor
push
inc
mov
cld
(bad)
std
adc
das
inc
inc
push
pop
pop
stos
pop
je
and
fidiv
add
adc
enter
loopne
rcl
sub
and
push
add
mov
(bad)
xchg
ret
cmc
inc
cld
and
inc
xchg
call
and
mov
ret
mov
or
inc
js
or
aas
xchg
aam
fbld
mov
sti
pop
(bad)
cli
call
out
jae
mov
inc
and
loopne
loop
xchg
mov
inc
or
or
fs
jo
sbb
aaa
nop
add
xchg
mov
lods
sti
inc
gs
push
fld
stos
das
mov
imul
ss
and
ins
loopne
adc
ja
enter
jbe
cmps
fdivr
stos
(bad)
aas
fmul
je
ret
mov
pop
mov
cld
mov
xor
jecxz
adc
scas
and
and
sti
xor
bound
mov
add
dec
ret
push
jmp
add
xor
mov
sub
clc
inc
xor
add
or
cmp
test
idiv
jmp
and
jns
(bad)
imul
scas
pxor
push
adc
and
clc
lea
cs
je
and
inc
pop
(bad)
vmaxss
into
cmp
xchg
mov
mov
sub
push
adc
hlt
adc
xor
xchg
sbb
pop
push
cs
mov
or
icebp
addr16
mov
sub
pop
enter
cmps
mov
pusha
out
xor
call
mov
mov
jmp
repz
sub
push
cmc
push
aaa
adc
inc
(bad)
and
add
cmps
es
mov
xor
dec
inc
jno
mov
jae
mul
jge
lods
lds
xlat
add
cmp
cs
xor
mov
fbld
movs
add
clc
or
aaa
inc
fs
out
and
mov
mov
cld
sub
adc
ins
movnti
xor
pushf
xor
stc
mov
jg
xor
std
stos
push
push
mov
dec
add
push
xor
cmp
cwde
cli
fcmovnbe
test
push
inc
sub
or
and
lahf
(bad)
das
mov
jle
xchg
jo
int3
mov
rcl
adc
push
(bad)
push
gs
inc
and
mov
pop
cli
test
sbb
cmp
pop
sbb
dec
mov
push
xor
outs
push
add
mov
pop
aas
call
sbb
jae
sti
jb
je
fcmovb
mov
push
xlat
dec
in
ins
jae
push
push
rol
mov
mov
ret
bound
cwde
ret
inc
lahf
leave
or
mov
ja
sub
inc
imul
aas
push
ins
cmp
stos
and
sbb
test
push
sbb
aas
je
inc
push
jne
add
xor
mov
repz
and
add
mov
add
inc
and
and
ja
dec
fcom
or
outs
sbb
or
jae
inc
movs
pusha
outs
adc
inc
cmp
(bad)
sbb
bound
fisub
mov
jl
adc
and
call
ror
mov
mov
push
and
mov
out
push
gs
loopne
neg
cdq
mov
test
std
sub
data16
sar
jg
inc
out
xlat
outs
mov
inc
inc
mov
mov
mov
outs
sti
setle
shl
xor
sbb
jmp
push
push
lock
or
lds
(bad)
fucomp
(bad)
scas
mov
aaa
pop
or
mov
sti
outs
pusha
std
inc
dec
or
sahf
pop
pop
adc
js
out
ss
lock
push
sub
addr16
push
or
add
add
xchg
ficom
call
push
cmp
dec
mov
cmps
arpl
fs
aaa
adc
je
xchg
add
arpl
test
pushf
aam
int3
std
jae
arpl
push
(bad)
aaa
fsubr
xor
out
inc
mov
add
sub
repnz
outs
mov
push
cmp
inc
and
push
cmc
ss
outs
mov
rcr
mov
jl
push
inc
adc
or
dec
aam
call
fimul
mov
push
or
xor
sti
pop
cmc
inc
test
sbb
mov
pop
or
xchg
loope
outs
pop
jb
dec
push
call
push
mov
imul
xchg
jae
push
xor
outs
add
mov
cmp
out
xor
sub
shl
imul
pop
in
imul
fs
fiadd
pusha
push
xchg
fldpi
add
push
mov
push
call
mov
pop
add
jle
mov
push
mov
push
pop
and
mov
push
dec
sbb
push
sbb
je
sub
repz
lahf
mov
or
or
bound
xchg
mov
cmps
js
sbb
sub
dec
mov
ret
fiadd
ja
fadd
add
int3
mov
mov
(bad)
jp
or
xchg
(bad)
xlat
rol
shl
mov
add
add
jmp
(bad)
sbb
push
fcomp
and
inc
repnz
pop
push
ret
mov
(bad)
mov
mov
js
pop
add
in
neg
ret
jae
int
lock
arpl
and
ret
fadd
xor
bound
jo
mov
add
jmp
fisttp
mov
psrld
addr16
inc
add
daa
(bad)
pop
adc
pop
nop
or
add
scas
repz
inc
sub
xor
and
dec
retf
inc
inc
mov
adc
mov
addr16
repz
popa
fst
cmps
inc
lahf
inc
les
inc
mov
adc
pop
shl
shl
aas
dec
pop
cmc
mov
jo
pop
pop
inc
inc
ret
(bad)
add
or
aam
sub
das
pusha
(bad)
aaa
add
stos
jbe
lock
cmp
xchg
xchg
inc
xchg
cmp
das
push
push
add
adc
cmps
ret
or
xor
pop
inc
test
fwait
jo
jnp
ins
sub
pop
pop
cli
(bad)
or
jmp
inc
add
test
aas
adc
pop
push
pop
out
push
jmp
cmp
pop
mov
imul
inc
mov
push
rcl
dec
jae
inc
(bad)
push
sub
cmp
push
sti
mov
test
inc
xchg
xor
int3
dec
push
sbb
(bad)
xor
nop
sbb
adc
mov
(bad)
mov
aas
stos
adc
xor
cmc
jmp
ja
xor
call
push
mov
fild
bound
int
sub
rcl
or
imul
xchg
dec
ret
std
inc
mov
pop
xchg
xchg
push
or
pop
mov
adc
stos
cs
jle
pop
adc
add
mov
adc
jne
xrelease
dec
fiadd
lea
push
lods
xor
ret
mov
dec
dec
dec
xchg
cld
sbb
jg
out
push
movs
icebp
dec
add
out
test
sub
dec
mov
mov
outs
mov
test
add
cmc
test
add
pop
pop
xchg
cld
pop
jno
xor
popa
adc
xlat
push
ret
inc
sar
or
inc
pushf
lea
fadd
xlat
fisttp
push
mov
push
(bad)
or
imul
arpl
xor
pop
sahf
test
xor
inc
aaa
es
or
cmp
lods
and
pop
in
pop
sub
mov
rcl
sub
cli
adc
inc
add
xor
fmul
inc
push
add
popa
rol
pop
add
int3
mov
inc
sti
jp
mov
pop
in
stos
ret
or
push
fidivr
sbb
hlt
jae
mov
push
call
retf
es
loopne
add
push
idiv
adc
add
mov
push
scas
push
xlat
xor
push
loopne
inc
add
pushf
add
sub
aam
test
and
mov
stc
push
lahf
inc
or
pop
sub
xor
mov
ficomp
scas
cld
in
inc
out
mov
jmp
sbb
test
stos
clc
push
xor
fimul
mov
ins
inc
jp
arpl
or
ins
loop
sub
mov
cmc
addr16
sbb
push
ins
nop
hlt
cmp
cmp
lea
repz
push
push
ins
loopne
sbb
or
add
fadd
inc
push
fs
cld
adc
cmps
or
les
add
fwait
hlt
push
pop
jmp
pop
dec
pusha
test
ret
aad
inc
jno
jg
sbb
push
pop
(bad)
fcmovb
mov
dec
mov
or
mov
cmc
dec
ret
call
mov
push
or
mov
dec
fdivr
jns
je
pop
out
xchg
hlt
mov
or
fidiv
clc
or
mov
out
movs
lea
sbb
add
mov
jmp
arpl
add
mov
out
xchg
push
xor
pop
xchg
icebp
add
inc
pop
cmps
jg
xor
mov
inc
inc
gs
mov
add
mov
(bad)
dec
stc
push
cmps
mov
and
jle
mov
jbe
add
cld
stos
pusha
daa
and
jno
fdivr
out
repz
pop
lahf
inc
push
cld
fbstp
pop
arpl
out
inc
push
add
outs
push
call
adc
mov
cwde
setbe
inc
or
enter
pusha
sub
push
pop
sar
dec
inc
or
xlat
and
pusha
shl
jg
call
sub
jo
sub
ss
lea
clc
inc
mov
fidivr
pop
mov
mov
jbe
adc
adc
hlt
push
daa
mov
sub
and
jg
mov
or
das
adc
pop
(bad)
pop
adc
mov
(bad)
xchg
mov
xchg
aaa
mov
sub
loopne
cmp
inc
push
mov
xor
mov
mov
inc
or
add
pop
mov
not
mov
inc
xor
pop
push
push
cmp
cli
movs
cs
clc
fdivr
pop
mov
adc
jb
retw
xlat
pop
out
mov
add
push
mov
jb
clc
pop
add
dec
(bad)
out
ret
(bad)
movs
idiv
lea
add
test
rcl
dec
test
jg
jp
add
dec
cmp
xchg
pop
adc
mov
xchg
and
sbb
or
push
and
ror
fbld
ficom
dec
into
dec
mov
dec
xor
shl
mov
lds
push
aam
mov
jp
sbb
and
cmp
sub
pop
mov
ret
js
jecxz
pop
bound
(bad)
jg
or
inc
or
sub
imul
inc
outs
cli
or
sub
xlat
test
sub
loope
lods
or
sub
xor
cmp
ins
and
nop
cmp
and
mov
xchg
fbstp
imul
and
retf
mov
ret
and
mul
call
rcl
add
adc
dec
jae
or
jbe
mov
mov
mov
xchg
out
mov
adc
jmp
jbe
add
retf
mov
loope
mov
add
xchg
push
inc
mov
(bad)
sbb
xor
test
or
inc
jp
push
inc
mul
add
rol
out
(bad)
ins
ret
out
jnp
sti
sti
jb
fist
jmp
and
inc
mov
dec
mov
shl
aaa
inc
out
outs
test
sub
mov
aam
mov
aam
jmp
xchg
iret
and
clc
outs
mov
push
cmp
lods
xor
(bad)
mov
pop
shld
(bad)
lsl
mov
push
rol
add
jecxz
shl
inc
int
ret
pop
jle
lock
gs
xlat
jae
push
gs
or
dec
or
dec
push
popa
xor
xor
repnz
pop
adc
shl
push
mov
dec
xor
add
sbb
outs
fnsave
pop
pusha
push
cld
rol
call
call
pushf
shl
ins
push
inc
inc
push
mov
xor
add
pop
sbb
pop
push
sbb
out
ret
mov
inc
mov
mov
ds
or
rol
sub
ret
pusha
adc
pusha
sbb
jmp
push
adc
xchg
add
cs
push
xchg
in
mov
test
add
pop
jmp
call
les
mov
jl
lods
dec
mov
idiv
dec
inc
rol
push
pop
adc
mov
or
sti
jne
sub
inc
or
cld
sub
pop
add
mov
in
xor
push
mov
xor
pop
pop
cmp
dec
or
lds
mov
ins
in
or
and
pop
clc
jmp
dec
je
(bad)
mov
iret
push
sti
inc
push
cmp
and
jmp
add
adc
xor
sar
sbb
sbb
mov
lahf
fmul
dec
pop
push
jae
push
mov
in
cmps
retf
dec
stos
mov
ja
add
outs
pushf
inc
(bad)
fs
push
popw
enter
jecxz
jae
jp
add
push
fmul
mov
mov
mov
mov
loope
xor
pop
neg
lds
dec
call
fisub
icebp
popf
clc
mov
add
sti
ja
(bad)
xor
pop
xchg
pop
dec
ss
mov
fdiv
mov
jo
and
sbb
test
call
add
test
ret
cmp
adc
sub
daa
jno
out
inc
cmp
adc
xor
add
cld
add
mov
add
mov
mov
test
(bad)
lea
pop
jb
adc
(bad)
xor
pop
xchg
push
sub
push
mov
cmps
mov
mov
sti
xchg
push
pop
cld
ja
adc
icebp
das
fadd
inc
imul
cwde
les
imul
sub
inc
xchg
mov
xchg
cld
out
and
xchg
test
out
sbb
ja
mov
mov
aaa
mov
or
mov
or
xor
ja
ror
js
fnstsw
push
jmp
or
lock
mov
mul
dec
lods
std
fisub
ins
mov
inc
add
gs
or
add
or
add
mov
ja
push
in
add
je
sbb
out
clc
(bad)
aaa
sar
icebp
pop
add
dec
mov
add
mov
add
sti
jmp
jmp
fisttp
adc
add
mov
pusha
mov
adc
mov
scas
inc
cld
outs
retf
mov
push
sahf
adc
push
sub
push
adc
and
out
sbb
fnsave
dec
psrld
push
ret
or
inc
cmp
out
or
add
lea
call
mov
inc
cmp
aam
bound
adc
sub
daa
add
popf
push
js
iret
je
or
xor
aaa
sti
stos
repz
mov
ins
aas
push
ins
pop
mov
jp
and
and
mov
movs
(bad)
push
mov
test
adc
jne
dec
lds
sub
test
pop
mov
push
fistp
xor
arpl
sub
pusha
out
mov
std
push
inc
pop
repz
out
or
add
and
jbe
lods
cmp
xor
adc
mov
xor
pop
xchg
ret
fild
push
sub
jne
outs
inc
arpl
jmp
and
xor
cli
and
mov
adc
inc
sbb
inc
xchg
pusha
add
jmp
nop
cmp
mov
xchg
jmp
ror
(bad)
adc
push
sar
idiv
mov
add
sub
(bad)
xchg
pop
jne
idiv
xor
icebp
jbe
fwait
adc
in
push
inc
xchg
stc
jbe
jp
fwait
dec
pop
xchg
loopne
test
add
mov
outs
jg
push
push
fisttp
imul
cli
jmp
push
call
pop
push
mov
inc
outs
pop
add
mov
(bad)
in
add
cs
xor
stos
mov
jne
inc
push
fidivr
ja
dec
add
push
and
sub
imul
sbb
xchg
add
(bad)
mov
fiadd
jecxz
and
mov
push
add
mov
pop
ret
mov
dec
retf
push
add
push
xor
test
lahf
push
mov
outs
adc
mov
pop
fcmove
out
jmp
ja
mov
out
repnz
(bad)
cmp
js
fcmovb
call
dec
mov
mov
add
pop
test
mov
aad
mul
ja
mov
retf
out
xor
pop
cld
add
mov
sbb
and
mov
inc
add
push
out
pop
(bad)
dec
cmp
shr
pop
inc
(bad)
call
pop
imul
std
daa
cli
gs
push
imul
pop
inc
stos
mov
ret
push
adc
inc
sbb
jg
call
out
inc
(bad)
cmp
cmp
cdq
pop
sub
ret
mov
push
adc
jo
mov
scas
inc
xor
idiv
adc
pop
cmps
mov
dec
xchg
and
jmp
bound
inc
sub
mov
push
inc
push
nop
inc
push
ja
add
jg
arpl
push
fdiv
scas
aas
cmc
sbb
adc
and
sti
dec
inc
test
sub
adc
dec
jo
cmc
pop
push
pop
pop
pop
stos
xor
shl
jle
push
js
jle
adc
sbb
test
outs
inc
das
add
add
inc
pop
mov
stc
dec
nop
aas
jle
inc
push
push
inc
mov
push
jmp
inc
add
(bad)
ss
inc
adc
mov
(bad)
cwde
pop
ret
push
push
inc
mov
mov
pop
pusha
mov
add
jb
add
jo
or
push
jae
add
ffree
fist
or
mov
xchg
pop
divps
pop
(bad)
out
ret
jbe
add
xor
out
(bad)
outs
add
stos
jo
stos
push
mov
ret
adc
ret
adc
(bad)
call
adc
mov
loopne
push
mov
jae
iret
add
push
arpl
scas
push
dec
arpl
sub
aaa
ss
std
ret
or
pusha
mov
ds
mov
cmp
or
xchg
adc
(bad)
push
mov
out
cli
ins
inc
add
out
paddw
mov
push
mov
inc
jbe
push
enter
push
ins
push
(bad)
out
es
mov
pop
out
or
ds
or
mov
push
push
addr16
push
jmp
sub
or
es
add
push
retf
loopne
cmp
(bad)
push
imul
or
sub
push
xor
sub
mov
cmp
and
or
clc
fs
add
fwait
mov
clc
sbb
jl
pop
push
and
xchg
push
mov
inc
sbb
out
xchg
adc
dec
movs
jae
call
add
add
jmp
mov
push
mov
or
cmp
sub
ins
mov
mov
or
in
enter
dec
loope
movs
pop
fwait
pushf
shr
mov
or
mov
dec
inc
inc
sti
call
inc
inc
fild
dec
dec
stc
bound
cs
xor
in
outs
push
add
stos
test
mov
ss
jg
xor
dec
mov
add
push
aaa
mov
xchg
sub
mov
sar
pop
mov
repnz
(bad)
(bad)
cmc
data16
clc
dec
add
push
jmp
das
inc
test
mov
out
jb
loop
call
sub
mul
aas
daa
xor
xchg
pop
daa
sbb
push
(bad)
cld
sub
je
scas
or
ins
mov
jae
sar
pop
icebp
inc
dec
(bad)
mov
mov
jle
jnp
or
inc
add
ret
out
imul
push
ins
or
adc
out
scas
and
icebp
call
xor
mov
cmp
iret
push
std
and
sbb
imul
sbb
neg
cmps
pop
das
jle
scas
mov
jmp
leave
ror
jmp
fild
fcomp
sub
push
add
call
dec
lds
je
js
dec
and
loopne
rol
or
movs
push
add
mov
sbb
rol
out
jb
push
call
push
xor
jbe
or
push
inc
xrelease
inc
add
and
into
add
xor
hlt
pop
ficom
bound
or
and
pop
call
(bad)
(bad)
or
push
add
lods
sbb
sbb
hlt
out
push
sub
sbb
cmps
xor
je
jae
sub
sub
lds
cmc
pop
sbb
repnz
cmps
sub
dec
jb
out
js
mul
sub
mov
dec
jmp
add
fiadd
idiv
(bad)
loopne
movups
add
dec
dec
call
jo
ins
xlat
dec
or
inc
or
jg
pop
outs
je
xchg
push
arpl
pop
les
mov
adc
outs
mov
aaa
inc
mov
mov
inc
test
fisttp
les
mov
dec
mov
mov
popa
xchg
std
push
cmp
add
mov
div
sub
push
and
out
outs
clc
popa
ins
sbb
or
ret
leave
imul
or
out
adc
push
pop
je
push
fwait
add
dec
or
mov
clc
push
xchg
cmp
push
mov
push
jmp
shr
add
hlt
inc
sub
fs
xchg
(bad)
shr
pop
data16
aas
push
mov
inc
outs
pop
rcr
dec
ins
jl
add
fs
jmp
dec
xor
pop
ret
add
inc
jmp
(bad)
movs
pop
sbb
xor
or
fbld
out
call
push
cmp
into
xchg
mov
scas
xor
jle
mov
pop
aas
mov
sbb
jb
jb
inc
data16
out
add
add
aam
push
outs
jecxz
mov
(bad)
jl
or
punpckhbw
movs
mov
xor
push
sbb
cmc
arpl
push
aas
fst
shl
out
test
xor
das
ins
xor
dec
push
inc
sub
sub
cmp
jne
fiadd
sub
stc
push
outs
rol
cmp
out
jbe
mov
mov
ret
aas
push
cli
xchg
setp
xchg
dec
or
imul
mov
cld
das
add
pop
arpl
bound
adc
(bad)
fiadd
pop
call
add
mov
(bad)
mov
or
dec
js
cli
inc
lds
push
add
jmp
aam
(bad)
ret
jg
add
xor
sub
and
imul
dec
add
lock
call
daa
shl
mov
dec
xchg
or
nop
push
sbb
adc
inc
inc
in
das
out
mov
sub
scas
fadd
(bad)
inc
div
xchg
pop
iret
push
jns
je
adc
adc
and
ins
sbb
pop
dec
dec
mov
mov
dec
jp
sti
dec
cmc
push
ret
mov
cmp
mov
std
inc
bound
mov
jno
jle
and
les
or
add
cmp
sub
out
pop
pusha
dec
inc
les
iret
movs
es
out
(bad)
mov
clc
cmp
xor
clc
mov
ja
jmp
or
sbb
add
inc
ins
mov
jbe
cmp
mov
xor
outs
pop
add
cli
loopne
dec
(bad)
idiv
mov
pop
sti
test
mov
mov
sub
in
dec
mov
push
push
cmp
neg
xor
inc
and
aam
add
or
push
push
jmp
fisttp
popa
fsubr
inc
inc
push
(bad)
rol
add
sub
or
(bad)
xor
fwait
sub
std
mov
adc
es
lahf
add
push
mov
(bad)
or
je
inc
ficom
adc
mov
push
(bad)
dec
pop
or
std
mov
cli
inc
mov
(bad)
pop
sbb
clc
pop
pop
movs
lods
add
and
rol
jl
xchg
or
lock
dec
test
mov
mov
mov
dec
je
ins
xor
push
sar
xchg
cld
ret
mov
and
rol
add
mov
xchg
lea
ror
mov
ret
icebp
bound
mov
jge
dec
js
movs
es
repz
jmp
fcmovb
aas
gs
sbb
lock
and
sbb
inc
mov
sbb
mov
inc
dec
shr
pop
jb
sbb
(bad)
pop
inc
dec
jnp
das
cli
cmp
test
sti
ror
sub
(bad)
add
psrlq
mov
fcomp
xor
sti
mov
clc
mov
mov
push
inc
js
pop
ret
daa
cmp
fdivr
ror
cmp
push
repnz
and
dec
out
iret
jle
inc
dec
dec
push
cmp
(bad)
cdq
imul
dec
sahf
mov
inc
sbb
push
or
adc
outs
push
loopne
sti
call
(bad)
out
and
add
and
jno
jg
out
mov
jmp
pop
lea
dec
xor
std
dec
out
aam
pop
push
nop
mov
outs
or
sub
call
gs
je
mov
inc
mov
push
jmp
inc
aaa
jl
rcr
call
mov
add
xchg
sub
and
hlt
je
cmp
mov
xor
jp
mov
push
rcl
mov
xor
push
test
adc
add
test
icebp
mov
inc
cmc
pop
mov
mov
arpl
inc
add
cdq
outs
mov
adc
pop
add
stos
mov
or
int3
arpl
xor
mov
pop
adc
(bad)
mov
(bad)
int
dec
and
fscale
je
inc
xor
dec
cmp
out
push
je
iret
pop
and
mov
out
dec
lds
sbb
ficom
mov
sub
lock
shr
fwait
test
sbb
dec
add
ret
movs
das
hlt
mov
push
dec
inc
add
les
imul
rol
(bad)
pusha
and
sahf
mov
cmovge
cmp
dec
loop
add
or
jg
imul
test
pusha
jge
cld
xchg
pop
call
push
mov
and
cld
dec
fs
(bad)
jle
lods
es
or
inc
cmp
sub
and
push
stc
cmps
jae
add
xlat
mov
xor
rcl
add
mov
sbb
pop
fcomp
les
loop
mov
adc
sub
mov
pop
fs
dec
or
adc
sbb
adc
mov
mov
sbb
int3
loopne
mov
mov
sbb
cmc
jb
add
clc
(bad)
pop
lods
push
pusha
and
rcl
adc
inc
fadd
ret
and
int3
pop
ret
and
mov
fmul
mov
mov
mov
push
outs
or
fs
xchg
and
stc
ret
fsub
leave
nop
pop
adc
and
hlt
les
and
ins
mov
xchg
push
fwait
add
je
jne
mov
call
mov
push
mov
ins
cli
adc
enter
pop
in
xor
div
stos
adc
inc
adc
mov
mov
jb
inc
sub
mov
or
push
inc
mov
rcr
cmp
cli
rol
ins
movs
mov
or
jl
rol
ja
ret
call
lods
retf
push
call
inc
scas
fsubr
push
pop
movs
(bad)
aas
ret
adc
jg
pop
push
mov
push
mov
and
sub
ror
fwait
out
mov
pop
add
add
jno
jne
loope
push
ror
sbb
xor
sbb
add
into
aaa
(bad)
xchg
(bad)
push
dec
xor
sbb
xor
cmp
push
mov
addr16
lock
mov
or
adc
or
pop
popa
jmp
and
test
and
(bad)
test
jmp
rol
ja
imul
fsubr
lahf
pop
dec
inc
xchg
mov
jmp
push
nop
mov
jl
mov
clc
test
pushf
pop
mov
cli
pop
add
retfw
mov
test
ror
mov
sar
std
dec
inc
or
add
ins
ror
out
push
out
dec
jmp
xor
ret
repnz
pop
push
addr16
or
enter
dec
dec
pop
xlat
cmp
ja
pop
clc
inc
aas
push
out
inc
dec
pop
xchg
adc
pop
inc
clc
int3
add
in
pop
mov
and
ret
push
inc
mov
ins
inc
sub
pop
adc
push
pop
push
cmp
les
add
fistp
aas
push
sti
arpl
lds
and
and
in
pop
add
jp
cwde
outs
enter
call
add
sbb
ja
add
leave
pop
inc
fmul
pop
jae
inc
xchg
sub
stos
cld
xor
popa
fsub
mov
cmp
repz
sahf
aaa
mov
loopne
fdiv
mov
outs
imul
inc
repz
loop
push
cmp
inc
cld
out
movs
rol
push
out
iret
adc
(bad)
push
mov
das
sub
dec
xchg
pop
outs
sar
mov
inc
mov
dec
xlat
pop
inc
stos
or
or
inc
jg
push
push
pop
pop
(bad)
jg
mov
sti
(bad)
mov
pop
gs
mov
imul
es
pop
sbb
xor
out
nop
fbld
loop
push
ret
xlat
mov
push
sti
mov
test
dec
cmc
adc
retf
pop
mov
es
ficomp
jmp
or
push
cwde
xchg
push
push
shl
cmp
push
test
mov
sbb
aas
add
xchg
dec
inc
arpl
add
adc
jl
fcmovu
add
dec
pop
pop
sub
loopne
add
and
mov
mov
sbb
hlt
sbb
daa
and
fisub
aaa
add
scas
jmp
into
add
add
ret
je
push
gs
and
cli
jae
das
xor
mov
ds
fstp
add
adc
mov
jnp
inc
mov
push
add
rol
test
and
cli
jg
xor
ret
xor
inc
inc
push
mov
je
or
int3
arpl
push
enter
cmp
mov
out
imul
cld
pop
loopne
mov
ss
sub
xor
push
retf
fisubr
jg
pushf
jmp
out
push
out
push
mov
rcr
data16
or
push
mov
out
shr
sbb
mov
jno
inc
aas
data16
inc
sar
adc
mov
add
fadd
aad
sahf
out
jo
cmp
add
iret
aad
sbb
pushf
push
ret
xor
jle
(bad)
mov
jmp
add
or
mov
inc
mov
inc
adc
or
inc
pop
adc
sub
inc
mov
and
sub
cdq
test
xor
stos
jo
shl
jg
and
stos
push
inc
add
mov
adc
imul
repz
inc
cmp
inc
mov
mov
xchg
lea
ret
mov
xchg
in
push
add
(bad)
pop
pop
fisub
mov
aas
aas
mov
dec
xor
ror
pop
retf
inc
pop
dec
add
jbe
add
cwde
mov
cmps
mov
or
jmp
mov
test
aas
push
xlat
ret
mov
aam
dec
loop
and
fs
xchg
outs
adc
pop
adc
out
ret
call
mov
xchg
add
dec
mov
pop
adc
or
(bad)
and
sub
(bad)
jmp
mov
jg
pop
pop
mov
push
xor
add
out
dec
loopne
xor
xor
ret
or
sbb
sti
les
jp
loopne
and
cld
sti
out
push
js
sub
enter
push
pop
pop
call
lock
and
test
push
jmp
or
inc
adc
sub
in
or
out
lds
arpl
adc
dec
frstor
test
lods
das
and
adc
and
mov
inc
xor
push
add
mov
xchg
das
and
out
fadd
ret
push
aaa
mov
sub
inc
sbb
std
arpl
push
outs
cmp
or
sbb
mov
rol
jb
add
add
mov
dec
loopne
lds
out
sub
lock
add
mov
gs
push
pop
repnz
sub
outs
push
mov
add
cmp
mov
add
ret
or
ss
mov
jl
sbb
and
adc
dec
dec
mov
dec
dec
mov
int3
(bad)
dec
pop
test
xchg
out
xor
mov
mov
jp
out
inc
inc
daa
sub
push
ret
(bad)
fs
pop
ja
cli
add
ss
add
add
jg
push
dec
pop
dec
and
std
add
add
dec
mov
and
ss
pop
scas
xchg
mov
or
int3
cli
loopne
sbb
cmp
xor
sti
or
push
dec
not
pop
push
push
sbb
inc
dec
sub
push
pop
add
cmp
in
imul
pop
or
mov
in
(bad)
sti
call
pop
pop
pop
xor
out
ret
imul
fadd
sbb
jae
push
sub
aam
push
and
test
ins
fisttp
icebp
movs
inc
mov
pop
adc
xchg
jmp
sub
adc
xor
push
dec
xchg
jp
xor
xor
int
cmp
mov
push
pusha
and
jbe
jg
adc
add
and
ret
leave
add
or
test
pop
push
mov
jmp
out
or
ss
and
cld
(bad)
gs
(bad)
sbb
inc
mov
rcl
das
push
inc
cwde
in
jo
push
mov
push
fsubr
sub
dec
add
les
dec
adc
mov
add
add
rcl
xor
jbe
out
out
ins
sub
mov
pop
inc
std
adc
out
jle
add
inc
imul
test
jmp
(bad)
gs
xchg
mov
cli
push
dec
(bad)
jg
imul
xor
in
mov
rol
mov
or
je
shr
ds
in
idiv
imul
int3
ror
call
sbb
loopne
cmp
push
push
or
add
mov
and
mov
out
ins
loop
rcr
in
mov
loop
add
test
inc
dec
je
add
push
call
adc
neg
inc
dec
(bad)
(bad)
stos
inc
pop
lahf
call
sbb
mov
cmp
push
mov
push
xlat
jmp
bound
sbb
aad
pop
sub
sub
pop
add
mov
add
mov
fwait
ret
(bad)
nop
sti
add
into
data16
outs
inc
jg
mov
dec
pushf
sti
sbb
inc
fs
cmp
inc
push
jnp
jae
dec
ret
adc
push
xor
cmp
push
test
jle
cmp
(bad)
in
pop
push
push
(bad)
call
shl
fs
push
inc
daa
loop
outs
sub
add
pop
add
xchg
movs
or
sub
or
clc
dec
ror
mov
rcr
inc
push
imul
xor
sub
mov
inc
div
dec
lods
(bad)
dec
fwait
mov
jg
add
retf
out
push
imul
dec
and
call
mov
add
ret
fistp
dec
xor
cmps
cmc
ret
outs
add
or
nop
mov
(bad)
(bad)
and
jae
sti
sbb
out
mov
pop
or
enter
aas
mov
aas
fdivr
add
or
jg
xor
push
jmp
es
fimul
adc
dec
add
rol
add
dec
or
push
pushf
inc
add
dec
and
pop
add
sti
stos
fldlg2
adc
js
add
ret
cmp
in
cmps
xor
pop
pop
rol
jmp
mov
dec
mov
ror
addr16
popa
inc
call
pusha
pop
mov
fsub
pushf
imul
jne
outs
add
cmp
pop
and
jl
mov
jmp
xor
pop
mov
push
dec
inc
jae
cmp
fs
mov
dec
lea
or
retf
data16
jg
add
xchg
mov
movs
iret
mov
sub
mov
pop
mov
mov
xor
sti
xor
cli
add
jle
pop
inc
aam
dec
mov
sub
ret
mov
(bad)
xlat
(bad)
stos
sahf
jae
stos
outs
adc
dec
retf
(bad)
out
and
ja
inc
push
(bad)
push
and
fiadd
popf
mov
bound
imul
rcr
sub
mov
sub
jl
outs
aas
dec
(bad)
jnp
mov
imul
inc
cmp
and
push
cdq
in
mov
cmp
jmp
mov
idiv
mov
test
call
js
ror
dec
mov
and
sbb
fstp
add
xor
clc
mov
test
add
add
xchg
or
cs
pop
or
out
fimul
push
rcr
push
jo
imul
retf
out
push
ret
xor
and
movs
adc
inc
sub
mov
hlt
bswap
aam
retf
mov
(bad)
scas
outs
frstor
lds
rol
stc
packuswb
cmp
mov
sbb
jmp
lock
fsubr
sub
sbb
pop
mov
aaa
and
jnp
adc
push
sti
add
sar
mov
mov
mov
gs
adc
pop
sti
pop
inc
call
sbb
aas
xchg
inc
outs
out
fsub
addr16
mov
mov
in
xor
xchg
fmul
fistp
movs
test
pop
add
or
pop
hlt
int
cmp
mov
jae
sub
xor
stc
out
inc
push
cmp
dec
jg
mov
add
pop
mov
push
mov
sub
test
sub
out
ret
sar
pop
cmc
repz
jg
fnstenv
dec
(bad)
sub
ss
bound
pop
add
mov
and
add
cmp
das
pop
test
mov
inc
leave
imul
in
dec
in
(bad)
jg
push
out
daa
mov
add
push
sti
pop
sbb
pop
push
inc
inc
xchg
pop
add
aad
loop
dec
cmp
sbb
inc
aas
push
xor
xor
mov
stos
push
icebp
ja
sub
jmp
inc
pop
in
dec
or
sub
jmp
ins
cli
cmc
push
push
ret
retf
adc
sti
mov
jne
mov
adc
dec
mov
pop
add
jmp
stos
mov
push
les
jne
pop
cli
ds
ret
fcmovb
or
nop
dec
repnz
add
jnp
lea
mov
xor
push
cmp
jo
sub
sbb
fcomip
pop
js
push
(bad)
jle
jb
out
pop
movsx
sub
pop
cmp
bound
cld
sbb
(bad)
xlat
push
or
mov
inc
dec
jecxz
int3
pusha
pop
psraw
inc
ja
inc
jp
add
(bad)
xchg
clc
int
dec
sbb
inc
or
mov
pop
and
cmp
cmp
fidivr
(bad)
push
rol
and
xor
call
sahf
ret
arpl
fwait
or
cld
and
xor
sbb
mov
push
ds
mov
dec
cmp
pop
dec
cmp
cld
ja
push
jle
mov
sub
lds
dec
pop
add
jae
pop
mov
std
nop
cmp
mov
add
out
jmp
cmp
ret
stos
fild
pop
jmp
push
inc
push
ret
sub
fdivr
fs
retf
sub
inc
push
adc
push
jg
inc
retf
add
int
cmps
dec
mov
mov
xchg
dec
xor
int3
outs
mov
movs
add
mov
push
adc
test
aam
mov
outs
jmp
mov
jge
mov
or
in
inc
stos
mov
pop
pop
push
fs
iret
xor
xor
repz
ficom
ret
cmp
stc
sbb
inc
(bad)
fidiv
retf
dec
jp
or
jecxz
dec
push
mov
sub
pop
inc
pop
mov
outs
cmp
push
add
adc
pop
jae
(bad)
jae
xor
scas
es
sti
pop
adc
push
mov
stos
gs
pushf
xor
xor
das
outs
mov
daa
inc
lahf
movs
out
mov
xor
jbe
inc
rol
jg
xor
xor
mov
push
pop
and
xchg
cmps
enter
sub
push
jp
adc
pop
mov
xor
push
sbb
imul
cmps
cmp
dec
clc
mov
push
push
(bad)
std
adc
gs
or
dec
or
lock
sbb
mov
aad
xchg
cmc
dec
fisttp
cmp
das
out
add
add
pusha
push
lods
arpl
test
mov
jo
mov
daa
scas
xor
inc
pusha
jmp
cli
push
dec
sbb
out
pop
cld
dec
push
test
adc
scas
and
add
pushf
call
fiadd
push
bound
scas
push
inc
jle
fiadd
mov
inc
cmp
jno
out
inc
sub
nop
jbe
adc
push
pop
(bad)
mov
repnz
repz
leave
aas
mov
add
test
ins
sub
leave
or
mov
mov
xchg
cli
dec
pop
dec
out
inc
xor
xor
mov
and
jbe
mov
shr
test
je
bound
mov
arpl
ja
inc
or
sub
psubq
sbb
dec
mov
push
jle
outs
(bad)
xchg
or
aas
pop
sar
jmp
or
inc
add
loopne
int3
pop
dec
rol
add
repz
std
sbb
pushf
fdiv
loop
push
jae
jnp
sti
jecxz
test
or
push
push
mov
cmp
or
or
mov
mov
mov
(bad)
std
or
jl
dec
jb
das
dec
stc
jbe
(bad)
xchg
sub
sti
test
sub
fdivrp
pop
and
retf
add
or
mov
sbb
mov
sbb
xor
pop
adc
jecxz
dec
xchg
(bad)
sub
test
cmp
lahf
pop
pop
pop
cmp
test
ret
sub
or
sub
push
inc
push
addr16
inc
int
cld
inc
or
fyl2xp1
sbb
loope
and
mov
adc
addr16
ss
fs
ror
loopne
dec
xor
ret
out
xchg
jmp
icebp
inc
xor
(bad)
cld
xor
fcom
jl
pop
pop
jmp
ret
ret
xor
cli
fld
arpl
inc
rep
sar
mov
sub
rcl
cmp
inc
pop
inc
ds
fbld
out
inc
jl
ja
jmp
mov
retf
cmp
mov
push
cmp
and
sub
js
push
jb
fwait
or
mov
pop
frstor
hlt
and
rol
push
enter
hlt
stos
push
add
push
pop
add
das
mov
pop
pop
stos
fs
(bad)
fldenv
lds
outs
(bad)
jg
dec
pop
inc
jg
mov
mov
mov
punpckhdq
mov
pop
or
mov
add
sti
push
in
push
inc
xor
lahf
shl
inc
mov
jne
scas
jp
jl
pop
mov
push
repz
inc
cmp
push
or
out
jae
mov
dec
sub
outs
dec
in
mov
sbb
bnd
mov
cs
aam
push
out
add
xor
push
xor
mov
shl
ret
mov
or
test
jmp
aaa
test
add
cld
sbb
cld
or
mov
mov
or
test
sahf
inc
pop
aas
sub
add
adc
lds
inc
adc
inc
cmc
jo
clc
sbb
mov
cmc
aaa
cwde
push
jg
inc
out
mov
fs
push
ret
adc
test
or
aaa
or
mov
sbb
dec
push
pushf
scas
pop
dec
int
dec
add
mov
fdiv
shr
(bad)
cli
jb
pop
dec
and
inc
pop
push
xor
pop
and
(bad)
outs
add
lock
cmp
xlat
mov
add
xlat
mov
push
adc
jae
in
cld
mov
push
or
call
imul
les
xchg
inc
add
mov
out
call
xor
mov
mov
ins
mov
and
jge
push
inc
test
and
jle
shl
movs
mov
stos
(bad)
mov
ror
pop
push
push
test
sub
pop
add
mov
push
sbb
gs
movs
cmc
adc
out
ret
sbb
ja
mov
dec
inc
adc
or
int
(bad)
ret
push
push
adc
out
addr16
sub
dec
sbb
scas
(bad)
cs
dec
pushf
je
adc
adc
iret
and
call
dec
or
enter
add
adc
jae
fsubr
lahf
sub
or
fcomp
std
ins
dec
call
cwde
std
inc
pop
ret
add
inc
dec
out
mov
nop
sub
and
mov
inc
jbe
jb
sub
xor
jge
cmps
cs
mov
ret
sub
push
add
inc
pop
or
out
(bad)
xchg
mov
jae
xor
push
cld
sub
cmp
outs
fcom
or
or
aas
mov
xchg
dec
push
fs
inc
xlat
push
dec
(bad)
fs
fcomip
call
mov
sbb
pop
cwde
inc
mov
sub
dec
imul
popf
pusha
dec
aas
xlat
nop
mov
loopne
ret
add
(bad)
les
pop
sbb
jne
xor
out
cmp
mov
dec
xor
clc
sub
dec
gs
push
sbb
pop
dec
js
cli
or
sub
outs
xor
fnsave
mov
dec
mov
test
sbb
(bad)
mov
inc
cmp
and
mov
and
mov
repz
jno
push
pop
or
imul
mov
pop
pop
or
sahf
jne
aas
je
pop
mov
mov
fsubr
out
or
cmps
hlt
mov
xor
clc
(bad)
jbe
out
add
xchg
shr
pop
dec
jnp
sbb
aaa
cmp
or
test
(bad)
icebp
push
retf
cld
pop
mov
cmove
jno
imul
add
mov
pop
jo
add
pop
mov
or
sbb
(bad)
cmp
gs
das
jg
aam
push
add
inc
ret
adc
jmp
test
sbb
push
inc
mov
aas
mov
into
jmp
jle
data16
adc
mov
jecxz
out
inc
mov
bound
loop
dec
pop
mov
jg
repz
aas
pop
fs
fmul
pusha
mov
mov
cmps
pushf
push
pop
aam
retf
sub
xchg
mov
ja
or
or
loopne
sub
or
xor
and
int3
cwde
test
add
test
lods
clc
pop
rol
mov
int
icebp
push
in
sysenter
xchg
inc
dec
pop
jg
ret
add
or
loop
mov
and
mov
pop
mov
(bad)
daa
sti
ret
aaa
mov
jecxz
inc
test
pop
and
cmp
js
adc
cld
je
call
loopne
dec
cld
mov
jae
test
test
pop
jg
or
inc
gs
outs
xor
bound
outs
repnz
jle
pop
dec
bound
imul
fbstp
outs
jae
je
add
xlat
fdivrp
sar
xor
xor
(bad)
cmp
inc
test
mov
mov
inc
add
pop
xor
cmovs
loop
ror
rol
call
les
inc
loopne
cmp
pusha
mov
xor
mov
mov
mov
xor
pop
xor
and
mov
arpl
(bad)
mov
fbld
xor
mov
mov
add
clc
call
call
(bad)
adc
pop
(bad)
jmp
mov
inc
adc
pop
mov
fcom
inc
test
mov
and
pop
fcom
mov
or
sar
mov
xchg
clc
mov
dec
scas
mov
call
cld
inc
mov
add
add
push
mov
xor
inc
adc
cmc
add
mov
pop
mov
jp
ins
pop
mov
cmp
fsub
sub
add
out
push
mov
adc
cwde
je
mov
add
sub
or
xor
dec
add
or
(bad)
mov
xor
outs
and
jae
push
mov
inc
pop
push
(bad)
push
movs
xchg
loope
dec
xor
mov
xor
(bad)
int3
(bad)
and
xchg
inc
dec
jp
mov
test
jle
shl
sbb
push
pop
push
inc
repz
repnz
push
loop
js
pop
push
sbb
test
icebp
call
mov
xor
pop
xor
or
icebp
add
das
xchg
lock
adc
shr
dec
xchg
clc
(bad)
clc
rcl
sbb
xor
add
mov
xor
add
clc
in
aas
push
pop
add
inc
cmp
dec
lds
sar
(bad)
(bad)
jmp
add
adc
dec
adc
into
mov
xchg
push
mov
pop
xor
xchg
adc
aam
adc
(bad)
sbb
addr16
xor
mov
inc
xchg
push
retf
jl
imul
repnz
test
mov
mov
dec
adc
xor
mov
sub
add
xchg
in
jg
mov
xchg
les
lods
add
cli
jns
xchg
and
pop
add
sub
out
and
js
repnz
xchg
loope
mov
add
sbb
mov
add
aas
xor
cs
mov
into
xor
hlt
dec
xor
xchg
cmp
jno
add
mov
mov
fdiv
fwait
inc
mov
rcl
sbb
xor
mov
bound
adc
pop
mov
or
(bad)
fbstp
fimul
pop
jp
push
xchg
je
inc
inc
retf
dec
test
or
xchg
jb
into
mov
or
sub
mov
mov
jl
jae
adc
mov
push
movs
add
ja
mov
xor
mov
idiv
xor
in
or
xor
ret
pop
xchg
sbb
mov
sub
out
mov
int
pop
mov
xchg
les
(bad)
test
scas
fistp
mov
mov
xchg
mov
rcl
mov
in
cs
pusha
cli
sub
cmps
(bad)
push
sbb
xchg
fdecstp
cli
lock
mov
sbb
mov
push
inc
aaa
mov
inc
les
jg
push
push
mov
mov
fst
cmp
ret
outs
jo
inc
xor
cmp
(bad)
stc
pop
pop
jnp
shl
xor
jbe
sub
xchg
mov
mov
or
cli
jg
int
mov
(bad)
das
aam
add
adc
les
loopne
sbb
mov
imul
fsubp
movs
push
mov
rcr
xor
sti
mov
jl
loop
mov
ret
push
xchg
or
dec
add
mov
cwde
or
stos
add
push
mov
shl
mov
ror
dec
add
push
mov
jecxz
test
fs
rcl
adc
rol
(bad)
mov
sbb
inc
inc
cmp
mov
xor
or
(bad)
movd
mov
lock
fdivrp
pop
xchg
push
mov
stc
clc
test
mov
sub
mov
add
mov
jl
outs
mov
cmp
xor
cmps
ins
in
xchg
jbe
(bad)
fld
rcr
adc
jmp
jecxz
push
jns
jecxz
xor
xor
mov
xlat
test
sub
push
mov
mov
inc
fimul
inc
cmp
jmp
int
fdivp
je
out
hlt
pop
mov
int
ja
sbb
xor
pop
mov
repz
add
dec
jae
xchg
(bad)
sub
imul
icebp
stos
inc
mov
pop
xor
jo
retf
push
add
dec
jg
cmc
(bad)
mov
inc
xor
sub
jo
repz
push
pop
mov
fld
stc
or
sti
cdq
inc
es
mov
push
mov
mov
adc
xchg
js
mov
sar
xchg
add
push
add
or
jmp
push
ds
movs
test
mov
sbb
or
inc
cwde
sub
test
cld
outs
pop
leave
inc
stos
ds
test
enter
pop
fsubr
inc
cwde
or
mov
rcr
mov
inc
mov
icebp
push
call
lock
push
nop
xchg
push
mov
jnp
dec
cmp
inc
xchg
mov
inc
add
dec
lea
push
(bad)
fwait
aaa
xchg
jp
and
sbb
cmp
iret
ret
inc
or
adc
rcr
nop
push
push
xchg
jne
leave
push
xor
add
pop
push
add
adc
mov
mov
daa
dec
lods
inc
pop
mov
scas
and
add
aam
xchg
xchg
in
sub
push
aam
shl
lock
jb
pop
je
sub
push
ror
mov
rol
in
mov
and
ret
shl
mov
and
push
fcomp
mov
inc
cmp
sar
fmul
mov
mov
scas
mov
xchg
push
mov
or
xlat
sahf
or
stos
(bad)
dec
sub
push
into
add
inc
and
imul
or
ret
and
lock
mov
jle
xor
cld
mov
nop
not
nop
sub
ret
std
ja
bound
aad
mov
(bad)
pop
lahf
loopne
loope
ror
or
sub
cwde
enter
mov
loope
pusha
mov
loopne
xchg
push
add
or
xor
mov
xchg
cwde
in
outs
mov
imul
mov
cmp
push
and
or
dec
cmp
imul
or
mov
xor
fidiv
mov
data16
mov
test
push
pop
bound
mov
enter
and
inc
mov
int3
add
je
cmps
icebp
cmp
cwde
dec
je
ins
mov
dec
or
mov
outs
sub
jb
scas
adc
int3
retf
pop
push
repz
test
cwde
ror
inc
out
dec
outs
sbb
mov
sar
jmp
or
repnz
aas
sbb
pop
fwait
mov
or
ss
pusha
out
mov
(bad)
fwait
or
fdivr
mov
ss
cld
mov
scas
cli
gs
inc
fsubr
push
pop
mov
mov
cld
dec
lock
int3
inc
mov
inc
jo
cmp
jne
add
mov
cli
or
cmp
(bad)
push
cmp
das
xchg
or
gs
or
push
cwde
fs
les
sub
test
and
xlat
mov
pop
cwde
inc
clc
inc
ins
xchg
dec
push
or
adc
lahf
push
fcom
and
mov
xor
mov
mov
jl
loop
imul
loopne
(bad)
sub
mov
stos
iret
mov
cmp
(bad)
aam
outs
outs
ret
add
add
rol
outs
pop
dec
test
ins
fstp
cli
inc
xchg
clc
xor
movs
mov
hlt
cmp
adc
mov
cld
outs
adc
add
in
mov
inc
es
cmp
add
retf
cmp
out
add
dec
sbb
cmps
daa
push
adc
sbb
es
cmp
stos
out
int
dec
mov
mov
lahf
sub
ret
mov
mov
lahf
pop
clc
adc
mov
mov
push
aaa
mov
push
fnstsw
hlt
lock
ss
sub
imul
and
rcr
std
add
push
pop
(bad)
loop
mov
pop
push
push
jle
jno
(bad)
enter
xor
pop
mov
pop
pop
mov
fiadd
popa
and
daa
pop
pop
fild
rol
xor
test
sbb
add
sbb
xor
dec
mov
rol
dec
mov
call
cwde
retf
jle
push
xor
push
lock
add
and
int
int3
sar
sub
mov
(bad)
jno
mov
aam
or
rcl
(bad)
(bad)
mov
add
sbb
push
push
mov
rol
test
dec
push
fdivrp
pop
mov
js
shr
add
sar
test
sub
pop
rol
inc
and
push
and
mov
(bad)
out
call
jb
push
mov
lods
xor
add
pop
sub
xor
sbb
pop
das
cmp
push
pop
mov
fadd
jbe
sbb
add
dec
mov
mov
mov
neg
mov
adc
pop
sbb
or
ret
add
ins
inc
movs
sub
loopne
lock
je
dec
test
ja
push
pop
xchg
push
or
aas
mov
div
pop
mov
rcl
push
std
enter
xor
add
hlt
int3
add
mov
xchg
cli
xor
lea
xor
ret
sbb
jmp
mov
or
mov
xchg
repz
into
xor
fld
jmp
adc
imul
push
adc
adc
or
sub
or
sub
and
sbb
(bad)
(bad)
jmp
sub
daa
or
pop
and
sub
and
aaa
xor
xor
ss
(bad)
(bad)
cmp
ds
push
inc
inc
push
inc
inc
dec
dec
dec
dec
push
dec
inc
dec
dec
inc
push
pop
push
dec
push
inc
push
pop
push
pop
pop
pop
or
pop
pop
pop
bound
push
test
(bad)
(bad)
jmp
gs
jbe
imul
xchg
test
xchg
jl
(bad)
xchg
(bad)
jmp
mov
clc
adc
rcr
sahf
cmp
ret
(bad)
(bad)
(bad)
inc
jmp
xchg
xchg
hlt
mov
retf
mov
aad
lea
ffreep
lods
cld
loopne
(bad)
fist
(bad)
(bad)
jmp
in
rcl
stos
test
retf
mov
mov
mov
(bad)
(bad)
(bad)
fidiv
cmc
popf
cli
jmp
out
enter
lock
test
call
scas
mov
shr
push
adc
jmp
jp
xchg
mov
or
add
and
mov
or
inc
mov
or
fistp
(bad)
jecxz
sbb
retf
add
push
jmp
(bad)
retf
std
jg
test
mov
jo
push
repnz
cmp
mov
int3
mov
dec
adc
dec
retf
mov
mov
fdivr
push
or
or
ins
or
adc
imul
sub
or
push
mov
(bad)
test
mov
mov
imul
lds
inc
ins
out
fld
out
mov
push
add
mul
sub
or
aaa
mov
push
icebp
or
xor
adc
inc
out
push
movs
aam
dec
mov
call
dec
cmp
shl
sbb
push
(bad)
mov
cwde
adc
cmp
mov
je
pop
pop
pop
mov
xchg
out
cmp
pop
cmps
out
es
out
mov
mov
mov
dec
daa
in
loop
loopne
adc
imul
clc
into
add
xchg
in
mov
mov
xchg
jbe
movs
add
(bad)
out
pop
clc
mov
pop
inc
or
or
xchg
pushf
test
push
pop
lock
loope
fdivrp
inc
inc
vpshad
push
cmps
fnstcw
stc
mov
sub
jno
movs
pop
push
es
(bad)
jge
ins
call
dec
jecxz
data16
add
addr16
lds
mov
mov
movs
adc
fiadd
(bad)
mov
adc
aas
out
mov
xchg
pop
xchg
loop
mov
jmp
xchg
into
sbb
push
dec
xchg
add
or
xor
dec
int3
retf
inc
(bad)
jg
inc
int3
inc
dec
push
adc
dec
int3
rol
cs
jae
inc
inc
dec
push
pop
cmp
jne
div
xlat
jb
cs
pusha
pop
movs
inc
push
test
add
mov
jg
mov
jg
jbe
inc
ins
mov
test
out
ins
fwait
cli
lods
std
(bad)
(bad)
or
xchg
fmul
push
mov
push
lahf
mov
adc
pusha
adc
fisub
js
mov
push
mov
jle
adc
push
cmp
fcom
sbb
pop
inc
cs
sbb
stc
inc
xor
fdivrp
cmc
push
fwait
popf
jb
inc
jno
push
push
inc
xchg
xchg
or
push
iret
inc
xor
mov
pop
mov
mov
mov
fstp
mov
adc
push
push
aaa
pop
mov
in
dec
push
clc
neg
jp
adc
mov
sar
add
sbb
or
inc
and
rol
inc
or
movs
cmp
or
mov
push
loope
movs
push
es
int
sbb
movs
or
or
lods
mov
mov
scas
clc
addr16
dec
retf
lea
inc
and
push
loopne
or
fwait
cmp
dec
jl
push
dec
loop
adc
stos
and
sub
imul
shl
cwde
lods
xor
and
mov
inc
sbb
lds
fwait
sub
add
imul
sub
push
rol
pop
pop
or
jb
(bad)
jle
add
inc
inc
ret
sbb
(bad)
cdq
sub
dec
aas
(bad)
cmps
call
jbe
outs
arpl
xor
scas
inc
je
xor
cld
jbe
push
arpl
pop
sti
outs
inc
mov
pop
pop
inc
jbe
imul
sti
cmp
dec
je
jbe
jbe
aas
push
(bad)
mov
sbb
stc
test
adc
mov
push
sbb
mov
mov
fistp
cld
mov
sbb
in
(bad)
(bad)
sbb
cmp
fist
in
(bad)
fcmovnbe
or
sub
mov
pop
icebp
push
sti
imul
sbb
inc
push
shr
fisubr
jbe
sub
add
xor
jne
daa
lock
pop
into
jl
adc
jne
das
ins
xlat
lods
jle
(bad)
mov
(bad)
push
xor
enter
sub
cwde
add
mov
icebp
xlat
cmp
mov
mov
inc
mov
outs
inc
(bad)
pop
mov
mov
mov
cmp
aam
add
das
cli
xchg
xor
clc
mov
push
idiv
mov
sbb
or
imul
xchg
scas
xor
push
push
mov
std
sub
mov
sbb
out
or
call
jp
sub
lahf
mov
data16
mov
xor
adc
push
sbb
cmp
rcl
or
adc
mul
xor
xchg
cmp
add
sbb
das
cmp
cwde
aam
push
sbb
mov
int3
std
inc
sub
(bad)
adc
mov
sbb
iret
fwait
mov
dec
int3
mov
ds
cmp
mov
sbb
aas
mul
int3
out
mov
mov
mov
dec
push
sbb
xchg
add
dec
mov
pop
or
jecxz
and
sub
loop
pop
jbe
arpl
jge
mov
in
push
xor
sbb
pop
or
push
aaa
out
push
cmp
or
rcr
or
cmp
rcr
and
mov
add
and
jl
mov
push
jle
or
mov
mov
adc
loop
xchg
add
mov
jmp
aam
ds
(bad)
in
pop
dec
or
lss
lods
adc
mov
imul
pop
js
idiv
stos
inc
sbb
imul
outs
sbb
jns
add
in
add
cmc
sbb
jns
sub
or
add
jmp
push
inc
inc
es
adc
add
pop
inc
or
and
adc
jae
loopne
add
call
ins
jnp
xchg
pop
jo
addr16
dec
mov
jno
cmp
xchg
cmps
sti
ins
or
pop
xor
pop
sub
cs
add
fdivr
arpl
jae
or
and
mov
jl
push
push
dec
push
push
test
inc
inc
lds
push
add
adc
mov
bound
leave
jnp
scas
out
dec
pop
inc
jnp
sbb
adc
dec
data16
inc
inc
sbb
jb
inc
mov
add
imul
and
and
mov
mov
aas
sub
pop
push
add
add
pop
push
imul
jns
pop
pop
aas
adc
pop
sbb
xor
out
push
aam
sub
push
dec
dec
popa
jne
call
icebp
xor
in
jbe
push
out
neg
cmc
mov
add
cdq
mov
leave
leave
leave
out
mov
or
daa
daa
sbb
lds
xchg
dec
jl
mov
dec
not
call
push
adc
or
pop
or
test
push
pushf
fmul
push
xchg
(bad)
pushf
pushf
mov
scas
popa
lahf
mov
cmp
cld
arpl
hlt
jp
int3
shr
cmp
scas
adc
push
sub
int
icebp
(bad)
cmp
mov
mov
pop
mov
cmps
inc
out
push
mov
mov
ret
jge
mov
scas
loope
inc
ja
stc
mul
lea
adc
pop
inc
adc
pusha
pop
adc
xchg
rol
push
test
pop
xor
not
add
mov
adc
sbb
mov
mov
adc
rcr
inc
or
or
push
pop
cmp
push
and
ret
int
pop
inc
mov
or
adc
movs
add
sub
in
mov
mov
xchg
fmul
pop
pop
pusha
cli
ja
xchg
js
js
scas
mov
xchg
mov
icebp
jbe
mov
push
jae
mov
popa
and
mov
cmp
or
mov
dec
ret
mov
movs
ds
mov
push
mov
adc
outs
cmp
or
pop
jbe
pop
push
adc
fmul
icebp
mov
out
jo
sti
(bad)
jo
or
cmp
push
sbb
das
xor
and
icebp
fwait
scas
pop
add
fst
push
fwait
jecxz
cli
xor
dec
mov
or
(bad)
mov
imul
mov
arpl
add
push
inc
mul
cmp
jle
push
mov
adc
pop
or
mov
fs
push
test
push
leave
dec
mov
pushf
ss
shl
dec
in
popa
mov
xor
popa
fucomip
mov
(bad)
shl
pop
sub
or
or
mov
neg
push
sar
push
stos
icebp
adc
aam
inc
mov
sar
jp
cmp
push
pop
jb
inc
mov
inc
imul
mov
mov
add
and
mov
mov
adc
add
test
and
mov
and
pusha
sbb
mov
push
sbb
lods
add
das
outs
mov
mov
popf
add
push
out
loope
dec
ds
sbb
xor
ror
pop
cmp
push
scas
and
mov
or
jb
retf
sbb
pop
add
jae
cmps
movs
loopne
and
out
js
pop
inc
jb
inc
or
xor
cmp
mov
or
sbb
fdivr
sbb
imul
or
imul
add
sbb
sahf
adc
inc
stos
scas
adc
sbb
dec
out
loopne
(bad)
dec
ja
(bad)
iret
mov
ds
mov
cmp
jmp
and
mov
cdq
inc
push
aas
cmp
xor
mov
mov
in
mul
mov
jne
inc
call
and
pop
not
mov
cmp
pop
mov
out
sub
jl
ficom
ret
imul
cmp
push
or
or
loop
mov
push
sbb
out
dec
dec
mov
clc
pop
mov
or
sub
adc
sub
push
lea
fst
mov
cmp
xor
jmp
pop
sbb
xchg
fidivr
mov
push
xchg
cmp
mov
ja
mov
jo
xchg
xor
mov
mov
ficomp
dec
jg
mov
into
and
sahf
push
icebp
and
xchg
adc
fisubr
mov
(bad)
(bad)
jo
xchg
lods
popf
(bad)
test
pop
push
int3
mov
imul
and
or
push
add
jmp
js
ror
ja
and
push
pop
or
sbb
ss
inc
je
ds
lods
fstp
ss
cmp
adc
or
sbb
std
adc
lods
pop
sub
vpshaw
sub
or
lods
push
jnp
clc
stos
pop
add
mov
push
jnp
out
out
lods
icebp
mov
add
mov
push
pop
pop
loopne
ds
push
push
push
add
xlat
sub
cli
mov
mov
popf
add
mov
push
dec
pop
sub
test
into
lds
and
sbb
arpl
add
fwait
bound
ja
cmp
pop
sbb
add
adc
adc
out
call
mov
and
loopne
out
fsub
mov
shl
(bad)
cwde
jecxz
sbb
mov
mov
adc
jb
or
adc
loopne
es
shr
xchg
mov
test
jbe
xor
test
or
retf
movs
pop
adc
cmp
movs
push
push
push
es
dec
pop
or
mov
fwait
out
push
or
dec
mov
xchg
out
mov
adc
clc
add
or
push
sub
mov
idiv
shr
mov
sahf
adc
sub
call
or
adc
adc
or
ins
pop
test
add
xchg
pop
and
ror
(bad)
xchg
or
mov
sbb
push
(bad)
xor
inc
imul
popa
neg
lods
in
cmp
aas
adc
add
mov
sbb
cmp
mov
sbb
push
inc
cmps
ss
stos
cmp
push
pop
add
mov
push
(bad)
mov
add
mov
(bad)
pop
jle
or
xchg
daa
scas
mov
test
adc
add
add
xchg
jmp
sahf
mov
rol
hlt
(bad)
mov
xor
(bad)
sbb
scas
(bad)
sbb
pushf
sbb
ja
pop
out
cmp
daa
mov
add
inc
int
mov
int3
enter
into
jnp
mov
xchg
ins
stos
clc
adc
dec
imul
sbb
adc
mov
push
call
push
cmc
push
sub
xchg
iret
mov
cmp
xchg
neg
adc
int3
retf
out
repz
enter
add
mov
pop
xor
mov
hlt
inc
adc
pop
adc
mov
adc
es
mov
mov
add
adc
pop
xor
out
movs
sbb
mov
push
lock
popa
dec
mov
or
pop
es
dec
add
mov
or
add
or
lds
ret
not
pop
mov
cmp
pusha
xchg
sub
adc
or
or
loop
test
sub
loopne
pusha
(bad)
loopne
mul
fiadd
test
cmp
test
pop
or
inc
leave
out
mov
not
sbb
mov
adc
adc
pop
inc
stos
pop
test
shl
pop
inc
mov
or
jmp
adc
or
push
fdivr
mov
push
jmp
sub
nop
add
add
test
or
lock
lfs
mov
sub
mov
or
pop
or
ins
lock
sub
test
jmp
sbb
jmpw
xor
out
mov
aam
adc
pushf
mov
aad
das
push
sub
adc
xchg
sub
or
aam
xor
dec
adc
mov
(bad)
jmp
inc
and
test
ds
add
push
js
lea
or
pop
rol
sbb
inc
pop
add
shl
jo
push
adc
mov
imul
adc
stc
repz
pop
sbb
push
pop
rcr
dec
push
xchg
retf
mov
sbb
pop
fadd
adc
xor
pop
or
jbe
sub
loop
mov
push
push
loopne
add
mov
stos
and
cmp
pushf
daa
dec
and
or
aad
or
mov
in
sbb
rep
sub
or
out
cmp
shr
dec
sub
mov
push
sbb
adc
sub
test
adc
ds
sbb
inc
arpl
mov
shr
cmp
xadd
pop
push
ja
or
sbb
mov
sub
ins
jecxz
sub
mov
shl
out
xor
das
das
sahf
jno
xchg
xchg
lock
call
test
ja
inc
and
add
lahf
push
adc
mov
add
jo
inc
or
jecxz
add
jge
fbstp
iret
shr
das
call
cs
in
ret
js
pop
mov
adc
push
stos
rcr
mov
in
fwait
and
adc
xchg
test
mov
imul
inc
cli
div
xchg
and
xchg
or
movs
sub
shl
pop
inc
add
sbb
in
add
adc
xchg
cmp
das
pop
mov
dec
push
in
sub
pusha
adc
lea
jg
xchg
loop
cli
shl
retf
fisttp
pushf
das
adc
test
loope
cmp
cmp
or
push
std
xchg
xchg
and
clc
cmp
lock
in
stc
or
mov
sub
cmp
stc
ror
mov
movs
pop
loope
fist
pushf
imul
mov
pop
or
mov
pop
loopne
sub
ja
push
rcl
xor
js
cmp
test
out
call
cs
(bad)
outs
dec
addr16
push
xor
lahf
adc
mov
adc
and
mov
push
les
dec
cld
sub
popa
inc
out
mov
inc
pop
lea
add
jb
add
add
push
test
or
cmp
mov
fadd
movs
sbb
sub
and
push
pusha
(bad)
jno
in
out
call
and
scas
jl
push
fsub
mov
add
jecxz
into
mov
mov
repz
push
sbb
inc
or
jp
add
mov
mov
movs
cmp
and
fwait
ds
mov
ret
dec
pushf
adc
mov
test
cs
inc
mov
mov
pushf
and
xchg
inc
mov
cmp
mov
lds
inc
out
and
fmul
not
cmp
aaa
daa
iret
imul
dec
jnp
dec
xor
cs
mov
dec
xor
jo
mov
and
(bad)
push
xor
loop
sub
jno
add
loopne
scas
(bad)
repz
push
mov
sbb
cld
ss
add
not
cdq
sbb
div
or
rcl
mov
or
scas
cs
and
mov
imul
jmp
mov
scas
mov
sub
or
test
dec
cld
ss
add
inc
addr16
xchg
or
jmp
jbe
adc
test
mov
scas
jo
cmps
test
ds
call
scas
lock
add
sbb
cmp
jb
loope
das
cmps
loope
adc
adc
cli
cmp
mov
fiadd
sbb
push
pop
movs
add
pop
(bad)
push
pusha
neg
das
push
in
dec
mov
in
xor
mov
ret
mov
div
add
mov
cmp
movs
push
outs
xor
int
adc
jb
add
jb
sti
xchg
sbb
inc
inc
adc
in
or
shr
iret
mov
mov
retf
out
mov
mov
sbb
es
push
mov
out
or
pop
popf
push
inc
movs
movs
push
xor
push
out
and
push
or
icebp
nop
stos
sbb
jle
mov
lds
mov
adc
add
mov
mov
fwait
enter
mov
add
pop
pop
xchg
push
or
ins
lods
ins
cmp
mov
and
lea
int
push
inc
mov
push
push
pop
loop
test
imul
cmp
fwait
scas
xor
call
lock
sub
mov
pop
pop
rcl
fisub
mov
popa
setno
mov
sbb
pop
daa
pop
sbb
inc
aaa
(bad)
sub
cld
mov
mov
xchg
mov
mov
loopne
push
lea
lock
pushf
adc
inc
xchg
or
mov
adc
mov
sbb
or
loope
mov
cs
sbb
pop
jg
cld
xchg
push
dec
push
push
repnz
mov
movs
not
add
inc
dec
arpl
dec
outs
(bad)
(bad)
test
pop
sub
xlat
add
sub
in
push
imul
imul
call
jg
jnp
inc
sahf
imul
loope
xor
(bad)
adc
(bad)
jp
fdivrp
jmp
adc
adc
push
fdivrp
scas
mov
psrld
jmp
call
inc
pop
sub
movs
push
scas
rol
in
idiv
rcl
and
xchg
sbb
dec
jae
cdq
mov
(bad)
loope
or
shl
mov
aaa
call
scas
sub
call
(bad)
cmps
mov
clc
dec
mov
push
push
jne
(bad)
and
or
adc
pop
fcomp
pop
in
push
and
push
jg
fsubr
adc
mov
(bad)
aam
ins
test
fs
div
inc
ss
jmp
sub
arpl
mov
sub
or
add
in
adc
inc
hlt
test
imul
sub
outs
ds
cli
mov
in
ins
xchg
loope
fild
ins
cld
ins
xchg
(bad)
ds
and
ins
shr
fwait
cmp
mov
push
push
pop
inc
pop
inc
(bad)
inc
mov
bound
pop
push
outs
arpl
je
pop
dec
dec
add
mov
imul
arpl
mov
nop
lds
lods
sbb
cmps
ins
push
sub
sar
sbb
aaa
xchg
fld
cmp
xchg
lds
(bad)
inc
test
outs
jl
imul
xchg
lock
push
or
ins
adc
push
push
jo
es
ins
xor
outs
(bad)
outs
clc
popa
outs
push
int
or
push
mov
sbb
retf
mov
push
mov
push
push
retf
lods
(bad)
cmp
adc
pop
cdq
push
adc
out
imul
les
ins
push
mov
xchg
loop
push
push
sbb
cmp
pop
loopne
add
inc
inc
add
lds
div
(bad)
push
stc
jmp
cmp
test
test
push
xchg
rcl
repnz
sti
jmp
jge
mov
mov
mov
sub
sbb
ins
(bad)
es
sbb
ret
lds
jo
(bad)
cmp
es
call
(bad)
dec
cmc
add
push
cli
test
inc
mov
add
mov
and
adc
pop
push
test
pop
push
pop
cmp
pop
adc
imul
dec
pop
imul
inc
mov
sub
movs
iret
add
pop
(bad)
pop
mov
cmc
sbb
jl
mov
inc
pop
and
pop
pop
out
loope
sbb
lods
jg
rol
out
add
mov
aaa
movs
es
pusha
dec
jne
adc
mov
pop
iret
pop
cs
adc
xlat
clts
inc
push
out
sbb
push
pop
call
ss
pop
or
push
push
movs
repnz
ret
push
ss
push
idiv
inc
xor
and
fsub
nop
fld
pop
aas
(bad)
pop
mov
les
pusha
add
idiv
pop
(bad)
std
lock
mov
cli
or
add
clc
inc
inc
mov
jns
test
add
aaa
out
and
jl
xchg
fcom
jmp
lods
jo
fwait
movs
rol
add
neg
mov
jo
mov
jp
mov
neg
maskmovq
test
mov
arpl
jmp
push
sub
lock
or
xchg
test
jns
imul
test
adc
mov
cmp
and
pop
mov
sbb
pop
les
(bad)
mov
mov
dec
dec
lea
fild
xchg
push
les
mov
orps
out
and
lods
sub
push
jo
mov
mov
inc
adc
imul
cmps
inc
leave
xor
scas
lods
add
xor
data16
dec
retf
dec
movs
cmps
mov
xchg
pop
adc
scas
sbb
out
add
dec
mov
jbe
dec
mov
add
add
fst
nop
jmp
pop
mov
push
arpl
pusha
push
and
push
push
rol
inc
mov
inc
rol
inc
xor
inc
ret
loop
inc
push
adc
add
sub
imul
fist
add
push
push
xchg
cmp
movs
stc
out
(bad)
in
pop
adc
not
jbe
imul
push
and
outs
fnsave
add
movs
cmp
dec
cmp
movs
(bad)
mov
in
movs
or
test
mov
test
lahf
movs
add
push
test
mov
movs
call
call
stc
push
xchg
pop
pop
neg
in
sbb
mov
xor
gs
xor
jle
imul
jl
out
or
and
adc
dec
cmp
(bad)
inc
imul
fwait
dec
les
loop
mov
pop
cmps
sub
inc
inc
push
or
mov
add
scas
inc
test
xchg
lods
jg
xchg
enter
fs
sbb
aas
xchg
adc
in
inc
push
repnz
jmp
adc
push
data16
and
mov
pop
dec
push
dec
add
adc
lahf
xor
mov
or
std
xor
adc
(bad)
and
aam
or
mov
push
jae
or
out
push
mov
or
push
mov
and
mov
loope
cmp
mov
adc
dec
push
sahf
xchg
cld
mov
mov
inc
and
push
test
mov
mov
cld
push
xchg
mov
adc
mov
out
jbe
xchg
xor
xor
push
pop
inc
mov
ret
aaa
rcl
add
test
imul
icebp
test
div
and
lods
jmp
push
inc
dec
and
mov
push
cmp
mov
push
pushf
push
call
fwait
push
ret
pop
push
ficom
addr16
add
push
adc
test
div
ret
adc
cmp
jecxz
push
(bad)
dec
stos
sub
jge
fdiv
or
daa
push
gs
nop
and
jecxz
jnp
push
scas
mov
push
mov
les
in
adc
dec
push
mov
fistp
shl
mov
mov
mov
cmp
adc
or
out
cmps
jecxz
and
inc
aad
cs
test
sbb
mov
jno
shl
fsubr
mov
xchg
push
ins
fwait
cmp
add
jle
and
xchg
add
mov
mov
or
sbb
test
not
mov
push
stc
popa
xor
inc
jae
jne
dec
fistp
mov
jno
push
add
adc
cmp
sbb
inc
add
push
or
adc
cs
and
ds
inc
(bad)
hlt
es
push
cli
and
pop
and
test
xor
mov
push
push
mov
adc
pop
test
xchg
adc
in
add
jb
dec
sbb
(bad)
push
nop
mov
adc
jecxz
pop
lock
ins
aam
cwde
mov
popa
push
pop
or
adc
xchg
stos
retf
es
lock
mov
inc
mov
mov
test
rcr
je
mov
pop
adc
cmp
nop
sar
(bad)
dec
test
dec
cmp
mov
in
test
mov
push
adc
push
add
push
jne
mov
jno
dec
push
dec
or
pop
jle
push
jmp
mov
dec
or
push
dec
or
in
movs
adc
inc
jmp
pusha
ins
xchg
sbb
pop
in
mov
test
ret
xchg
mov
(bad)
scas
or
jo
pop
nop
sub
rcl
pop
add
nop
dec
inc
mov
or
push
jle
cmp
mov
call
pop
or
mov
mov
div
rcl
mov
add
scas
out
and
mov
xlat
xlat
das
push
sub
mov
adc
inc
pusha
sti
ror
std
movs
pop
loope
shl
jns
fwait
sbb
pushf
and
or
pop
repnz
loopne
ds
ret
fld
clc
ror
push
or
push
mov
loopne
cwde
(bad)
add
push
gs
pop
pop
pushf
idiv
fdivr
push
out
pop
mov
mov
(bad)
push
(bad)
mov
add
imul
or
mov
cmp
movs
test
lock
add
out
scas
mov
or
out
loopne
sub
sbb
mov
call
adc
mov
xor
out
jmp
mov
sbb
push
or
sti
mov
sbb
or
mov
or
pop
pusha
test
and
and
sub
cmp
xchg
lahf
scas
bound
pop
cmp
cmp
jnp
xchg
out
jmp
cwde
mov
inc
enter
std
sahf
in
or
aam
lds
push
sbb
mov
sbb
pop
push
mov
dec
ret
frstor
or
loope
shl
push
adc
fisttp
mov
aaa
mov
shl
jmp
pop
femms
push
mov
dec
push
xchg
sbb
mov
js
(bad)
mov
jb
xor
push
push
xor
inc
imul
movs
or
inc
aam
jge
mov
xchg
and
add
lahf
test
push
call
hlt
pop
mov
ret
pop
adc
or
dec
cmp
or
(bad)
hlt
das
clc
mov
jae
ret
mov
inc
jp
adc
pop
mov
mov
mov
add
enter
push
xchg
loop
xchg
ror
cmp
je
outs
fisub
xchg
(bad)
int3
das
push
xor
jge
push
xor
fistp
mov
mov
adc
movs
daa
shl
or
pop
pusha
add
pop
mov
add
adc
test
dec
fild
int3
jg
mov
aad
bound
xor
xor
enter
adc
pop
in
cmc
scas
add
enter
xchg
gs
inc
sub
pop
cs
jo
mov
pop
out
cmps
mov
mov
pop
or
test
ficomp
push
ins
jl
(bad)
jmp
or
and
mov
pop
mov
fidivr
das
mov
add
mov
dec
pushf
test
mov
fdivp
mov
dec
adc
push
cld
sub
stc
dec
sub
and
xlat
and
adc
js
aas
lock
dec
in
push
pop
sbb
(bad)
jle
imul
pushf
aaa
pop
mov
push
mov
shl
sbb
pop
inc
jb
sbb
mov
pusha
imul
cmp
pop
xchg
ds
pop
push
jg
sbb
dec
lds
lock
daa
xchg
addr16
sub
mov
mov
lods
mov
in
les
pop
movs
and
scas
out
inc
jnp
fbld
out
lock
lock
movs
lahf
cs
jnp
inc
aam
sub
popa
push
push
outs
pcmpgtb
add
pop
pop
idiv
call
sub
iret
cld
pop
mov
daa
inc
idiv
push
or
lahf
jb
fstp
test
xlat
xor
add
fsub
jo
mov
addr16
nop
out
jmp
or
mov
and
mov
xchg
adc
inc
out
adc
rcr
inc
push
pop
idiv
retf
cmp
adc
xchg
pop
mov
das
inc
push
sti
xor
aaa
push
out
push
pop
adc
sbb
cmp
adc
dec
leave
not
jg
add
loopne
jle
add
cwde
icebp
mov
cmp
push
adc
jae
and
mov
out
adc
jp
iret
sbb
mov
sbb
jno
lahf
imul
push
dec
push
jmp
add
xor
jns
ss
ins
push
retf
aad
or
packsswb
jo
mov
clc
or
inc
add
pushf
lods
mov
icebp
push
push
cmp
sub
call
sbb
fdivr
push
inc
push
retf
inc
or
mul
out
add
out
push
and
inc
xchg
cmp
add
and
sbb
push
adc
sub
jmp
xchg
add
pusha
or
cld
cmp
aas
adc
and
or
call
not
out
loope
mov
in
jmp
dec
pushf
adc
and
call
in
data16
leave
jecxz
pop
jg
js
call
outs
push
or
mov
and
pop
pushf
jno
mov
pop
int3
add
pop
aas
sub
fmul
jmp
test
(bad)
(bad)
fucomip
stos
add
cmp
imul
cmp
imul
cmp
imul
or
and
js
jge
out
mov
in
sbb
mov
or
and
pop
call
push
mov
inc
push
pop
sbb
dec
sbb
add
mov
cmp
pusha
movs
sbb
add
mov
test
pop
or
out
jbe
dec
repz
mov
push
or
iret
pop
jb
jl
movs
mov
scas
push
mov
pushf
jmp
shl
xchg
pop
int3
cmp
es
mov
cmp
jns
(bad)
test
jb
nop
loopne
movs
pop
popa
mov
movs
sbb
popf
fxch
arpl
sbb
and
lock
daa
mov
movs
and
lods
and
pop
loopne
or
cli
sbb
dec
mov
ins
mov
or
outs
cmp
dec
out
div
sbb
mov
(bad)
sbb
adc
in
add
inc
div
bound
mov
out
popf
je
je
(bad)
pshufw
push
(bad)
pop
(bad)
adc
jmp
pop
push
outs
or
fsubp
push
ficom
mov
iret
xor
mov
sub
mov
call
jb
call
leave
xchg
add
mov
scas
sub
jp
fidiv
sub
and
inc
(bad)
jmp
lock
fwait
inc
(bad)
mov
or
jecxz
xor
scas
call
fwait
sbb
push
push
icebp
les
or
stos
cdq
xor
repnz
cdq
cmp
popfw
xor
(bad)
inc
or
jge
or
xchg
cmp
or
push
pop
not
retf
xchg
retf
(bad)
mov
xor
xchg
push
sub
retf
(bad)
adc
popf
lds
loope
call
add
movs
loop
push
inc
fwait
push
nop
jg
mov
in
cwde
cmp
test
out
shl
pushf
jecxz
sub
jp
call
mov
dec
add
or
outs
test
test
aam
cmp
lods
adc
sbb
xchg
int3
xchg
cmp
dec
add
(bad)
sar
scas
neg
push
push
lods
mov
sub
mov
add
or
stc
add
movs
or
std
or
push
adc
dec
inc
xor
or
out
jg
rcl
jno
sar
and
mov
loop
pop
jne
nop
jmp
stos
pushf
inc
loopne
and
imul
nop
shr
ja
jo
mov
add
push
add
or
push
or
mov
dec
ucomiss
mov
push
push
push
pop
jg
add
aas
adc
call
xor
in
pusha
adc
sahf
add
mov
xchg
jbe
fiadd
test
jns
jl
imul
adc
mov
adc
jno
cmp
test
idiv
cmp
jl
neg
and
ins
cmp
test
(bad)
movs
push
sahf
out
add
or
jmp
push
dec
push
and
push
ins
sbb
cmp
cmp
xor
popa
cmp
dec
imul
pop
into
ret
lods
jp
pop
out
test
cmp
cmp
or
in
cmps
icebp
mov
sub
in
mov
sbb
ret
idiv
xchg
dec
or
ja
shl
push
pop
outs
outs
ret
scas
out
push
sub
dec
jno
push
cmc
int
push
adc
and
xlat
ja
aaa
sub
sbb
dec
sub
test
mov
std
call
(bad)
mov
mov
mov
test
mov
pop
mov
push
or
push
jl
mov
inc
ror
int
add
sahf
and
or
cmp
jbe
xor
cmp
(bad)
(bad)
jecxz
jns
inc
or
push
sub
neg
cmp
cmp
add
in
retf
jge
add
daa
daa
mov
pop
pop
cmovnp
daa
daa
daa
dec
push
push
out
sub
sbb
mov
imul
lods
xor
mov
sub
out
call
das
add
add
jecxz
ins
loopne
mov
cmp
std
out
add
pushf
mov
and
(bad)
aas
cld
pop
ret
mov
pop
fadd
cdq
add
add
in
shr
jge
(bad)
aas
popf
jecxz
fisttp
mov
or
cmp
imul
jg
ins
gs
push
fistp
inc
addr16
loop
dec
lods
call
dec
(bad)
jmp
inc
add
bound
mov
mov
lds
in
dec
fsubr
adc
pop
(bad)
mov
lds
(bad)
(bad)
call
push
mov
jle
mov
ror
mov
pop
add
xchg
gs
gs
mov
and
jb
(bad)
or
or
pop
lods
stos
adc
mov
lods
dec
je
stc
jmp
xor
add
lahf
outs
inc
fxam
shr
add
loopne
add
mov
cmp
mov
js
pusha
gs
js
dec
lods
push
imul
sar
ret
cli
imul
dec
nop
int3
leave
xchg
inc
add
stos
fdivr
inc
dec
cdq
ins
fldenv
shl
sbb
xor
sub
dec
push
sub
or
cmp
repz
loope
inc
inc
dec
out
dec
fisttp
adc
add
and
dec
dec
das
imul
sbb
xor
out
retf
cmp
xor
not
out
push
pushf
xchg
fcomip
iret
and
push
lods
lods
in
outs
(bad)
xor
jg
jmp
aas
cmp
mov
fldenv
and
mov
mov
mov
stc
out
(bad)
mov
fs
fimul
clc
inc
and
jb
push
cld
mov
xor
std
mov
lods
mov
idiv
and
mov
rcl
push
loope
call
out
imul
or
cmps
call
ins
pop
enter
mov
adc
ror
cmc
fwait
(bad)
out
js
jle
pushf
sbb
pop
(bad)
pop
hlt
dec
lods
inc
cwde
inc
sbb
clc
das
fbld
inc
js
fldenv
push
out
aam
mov
push
stos
dec
cmps
sbb
fbstp
pop
jl
ins
fs
xor
ret
cmps
add
sub
rol
dec
loop
and
push
inc
or
sar
(bad)
call
aam
push
mov
mov
cmps
xor
in
mov
dec
ja
xchg
inc
dec
sub
loope
jnp
mov
out
add
xchg
ja
fdiv
cmp
pop
pop
cmp
dec
dec
out
jae
push
mov
arpl
rcl
cmp
pushf
mov
rcr
push
loopne
lock
cmp
je
out
test
push
sub
and
sub
shl
int
adc
add
gs
js
inc
call
je
ins
imul
lds
inc
daa
out
or
xchg
das
(bad)
sub
js
retf
add
je
pop
hlt
cmp
mov
rcr
adc
in
push
rcr
js
jle
xchg
push
mov
jle
cdq
fidiv
dec
lahf
jmp
clc
mov
jge
(bad)
nop
iret
fs
push
push
or
not
push
mov
lock
(bad)
jmp
lock
cld
out
pop
or
out
clc
(bad)
mov
jmp
push
mov
sbb
gs
iret
je
inc
cdq
xor
lods
jecxz
shr
cmp
(bad)
dec
or
fucomip
retf
mov
cdq
int
enter
outs
and
add
fs
jg
cld
cmp
xor
mov
es
fld
pop
stc
movs
(bad)
dec
loop
dec
jmp
pop
(bad)
(bad)
jmp
add
xor
addr16
enter
scas
popf
mov
out
mov
lds
call
sub
ins
xor
iret
sub
(bad)
ja
mov
lods
lds
cmps
arpl
xor
and
retf
stos
mov
sbb
jne
push
repnz
out
shl
mov
push
retf
push
movs
dec
gs
adc
push
push
int3
pop
stc
jecxz
shl
call
outs
fidivr
push
pushf
mov
lods
movs
movs
pop
cmp
je
pop
cmc
jmp
mov
sar
dec
(bad)
lods
mov
mov
pop
mov
dec
shl
push
sar
or
dec
xlat
or
and
les
pusha
nop
nop
bound
(bad)
nop
mov
retf
imul
fcomp
fdiv
mov
data16
jle
out
retf
outs
sbb
clc
jmp
scas
sbb
sar
cmps
push
ins
xchg
out
mul
sub
jnp
arpl
jmp
xlat
hlt
out
mov
and
aas
cmp
jg
or
push
movs
daa
fmul
inc
scas
out
mov
xchg
adc
fadd
idiv
push
imul
sub
cs
add
push
and
out
call
pop
bound
xor
in
mov
mov
jo
xchg
dec
or
jo
js
movs
dec
sbb
lock
cli
retf
sub
(bad)
dec
and
or
and
dec
clc
addr16
pop
dec
and
out
push
or
fs
push
lock
pop
xchg
jl
pop
iret
daa
(bad)
movs
ss
outs
cmp
pushf
outs
mov
mov
add
aas
jge
js
ins
aam
(bad)
out
inc
js
js
sbb
clc
out
jno
fcompp
lods
mov
daa
pop
lods
xchg
jmp
ss
cmc
out
mov
cmp
ror
cwde
out
dec
out
pop
outs
mov
pushf
add
dec
pop
addr16
dec
lds
pop
push
repz
in
cli
dec
nop
sar
ror
out
bound
pushf
push
lods
push
or
cs
lock
(bad)
sub
test
dec
jmp
add
add
loop
pop
adc
inc
shr
ds
push
inc
jo
jl
inc
add
aam
xlat
pop
out
mov
leave
movs
pop
lods
cld
mov
lods
adc
jl
pop
hlt
mov
dec
push
jmp
jmp
pop
out
cld
pushf
nop
(bad)
movs
mov
jae
xchg
outs
shr
cmps
cld
sbb
mov
jp
in
in
jl
and
push
cmps
hlt
in
or
push
shr
mov
bound
pop
inc
fld
sbb
xor
lods
or
push
outs
cli
ret
fiadd
adc
outs
in
iret
mov
mov
jl
or
jnp
rcl
or
leave
dec
(bad)
dec
loope
xor
add
cs
lahf
inc
mov
and
xor
pop
sub
jle
xor
sub
xchg
ja
mov
or
sub
add
inc
js
cld
jmp
lods
and
push
pop
call
xchg
xor
sbb
std
or
xchg
retf
cmps
outs
icebp
add
fwait
icebp
test
dec
mov
iret
das
test
lahf
out
pop
outs
xchg
retf
cmps
mov
adc
nop
das
aaa
out
mul
out
mul
push
fwait
retf
gs
push
pop
or
cmc
idiv
in
test
arpl
lods
jg
fiadd
sub
push
scas
mov
inc
outs
mov
inc
iret
push
xor
movs
or
aaa
enter
pop
cmp
add
fs
inc
nop
(bad)
jecxz
into
test
xor
cmove
call
or
pop
adc
retf
inc
sbb
adc
inc
push
fwait
pushf
icebp
pop
or
sbb
push
pop
aam
mov
bound
pop
lock
push
hlt
cli
out
mov
movs
cmp
neg
add
jl
je
mov
jl
hlt
hlt
cmp
push
mov
cdq
cdq
(bad)
repnz
aad
test
inc
mov
scas
js
push
adc
cmp
push
cs
push
sub
jae
cli
push
mov
loop
push
and
dec
mov
mov
jl
cmp
or
idiv
fimul
inc
(bad)
xor
or
inc
push
sub
int3
dec
movs
mov
sbb
mov
icebp
ins
scas
cwde
xor
mov
dec
scas
mov
or
sub
test
call
retf
test
iret
mov
addr16
fs
ror
imul
and
out
lahf
jo
mov
stc
cld
(bad)
call
mov
pop
xor
aam
stos
add
or
adc
pop
in
je
hlt
jns
pop
and
jbe
hlt
jge
xchg
pop
mov
cld
add
jbe
cmp
pop
add
dec
retf
add
mov
mov
cwde
in
loopne
ja
jge
pusha
inc
mov
pop
jne
xor
fisub
das
fnstsw
sahf
retf
hlt
in
ja
mov
mov
ret
inc
jne
lods
daa
jge
out
mov
and
xchg
outs
or
rol
xchg
popa
rol
test
and
inc
jp
push
xchg
inc
jae
scas
int
popf
cld
(bad)
stc
inc
add
scas
sbb
lea
mov
(bad)
sbb
test
gs
out
pop
fild
push
outs
sub
scas
(bad)
in
test
rol
inc
mov
lds
hlt
fnstcw
jo
out
push
test
retf
in
jb
lods
(bad)
(bad)
(bad)
mul
sbb
dec
test
test
jle
pop
jle
test
xchg
std
jmp
repz
hlt
mov
ss
sar
mov
inc
jb
mov
or
icebp
idiv
aaa
xchg
xchg
out
or
sar
out
cs
xchg
inc
jge
test
sbb
out
mov
xchg
xchg
out
(bad)
idiv
xchg
lods
out
xchg
shl
inc
std
inc
mov
jge
in
xor
loope
div
dec
neg
jnp
push
sbb
jnp
pop
jl
mov
or
inc
push
mov
div
inc
inc
int3
sbb
rcr
out
fadd
dec
dec
loopne
cmp
mov
mov
(bad)
fld
cs
push
mov
cmp
enter
mov
mov
fld
(bad)
fcomp
xchg
inc
ds
xor
ja
pop
and
push
xchg
js
aam
aas
(bad)
jmp
cmp
mov
mov
cmp
or
imul
pop
pushf
js
add
pop
js
mov
xor
mov
div
dec
add
xlat
pop
cld
rcr
cld
shr
cmp
pop
bound
addr16
sbb
mov
lea
sti
pop
fadd
rcr
xlat
add
sahf
or
(bad)
(bad)
fs
call
mov
(bad)
pop
sub
aam
jo
imul
mov
xlat
mov
gs
mov
jo
add
lods
push
sbb
pushf
add
cmp
std
aas
enter
lds
mov
cs
mov
call
(bad)
inc
mov
lods
jo
pusha
inc
mov
cs
daa
dec
test
daa
fcomip
lahf
icebp
int
mov
scas
out
or
retf
ss
cs
call
lahf
push
jb
aam
lods
retf
adc
fild
ss
mov
call
and
jecxz
add
mov
jmp
das
and
loope
adc
push
lds
mov
(bad)
or
out
and
out
imul
nop
xor
hlt
pop
in
stos
(bad)
(bad)
stos
sub
je
data16
cmp
mov
retf
sub
push
pushf
sahf
pop
fxam
fidiv
jecxz
push
test
cmp
sbb
sub
out
fiadd
or
sub
push
or
(bad)
and
(bad)
lock
cld
push
jl
ins
popa
add
or
ins
mov
pop
lods
push
outs
cmp
retf
add
fs
pop
stos
out
lds
cwde
jl
jg
mov
mov
leave
fs
bound
jo
and
fs
(bad)
jmp
add
add
rol
out
imul
xchg
mov
xchg
out
nop
out
add
mov
aam
push
xchg
pushf
push
nop
lods
adc
push
shl
enter
cmp
movs
mov
je
sbb
mov
add
(bad)
pop
sbb
jmp
or
les
cmp
stos
es
imul
mov
dec
popa
lock
fs
lods
out
jb
push
pop
cwde
loopne
sbb
pop
pop
push
(bad)
mov
jmp
xor
stc
pop
gs
call
pop
loopne
xor
nop
cmp
shl
mov
fmul
je
add
lahf
mov
push
rol
xchg
xchg
lds
jg
fld
adc
xchg
xchg
inc
add
lock
pop
cld
jmp
ficom
push
and
ins
(bad)
xchg
push
rcr
aaa
lods
push
ins
mov
push
pop
test
out
jg
xchg
aam
add
les
out
jb
pop
fcomp
inc
in
dec
dec
pop
pop
out
enter
add
xlat
jecxz
dec
movs
fld
cmp
cdq
je
scas
inc
pop
jnp
ret
arpl
xchg
sbb
in
pop
je
sub
add
mov
cmp
xor
aam
mov
xor
inc
or
nop
or
icebp
(bad)
call
adc
ror
ss
retf
shl
mul
ret
adc
mov
adc
outs
shl
sbb
out
mov
addr16
add
push
jle
mov
call
inc
js
push
push
je
jmp
cdq
inc
daa
inc
retf
idiv
adc
aaa
(bad)
cmp
push
aaa
ds
pop
mov
ins
inc
mov
rcr
push
retw
adc
ins
dec
push
fidivr
lods
pushf
fs
push
pop
out
rcr
pop
test
aas
and
nop
xchg
sub
arpl
clc
outs
sbb
or
je
ret
xchg
in
mov
scas
into
push
and
clc
add
sldt
rcl
fsub
adc
repnz
jbe
jmp
cmp
ret
add
pop
mov
adc
mov
stc
aaa
cmp
cmp
mov
add
adc
mov
out
push
adc
cdq
ret
das
jmp
sbb
jne
jmp
cmc
mov
jae
jl
div
nop
imul
retf
gs
pop
lahf
cdq
mov
inc
adc
pop
call
stos
out
out
fstp
in
pop
outs
stc
div
enter
stc
data16
div
idiv
jl
jl
not
in
int
push
pop
mov
div
retf
dec
jae
mov
in
ffree
div
test
jle
mul
in
not
lods
div
mov
std
loopne
test
out
leave
test
jmp
adc
std
jmp
not
mul
jae
jns
pop
jmp
add
lahf
sub
mov
leave
inc
or
dec
xor
ficomp
mov
dec
pop
movs
sbb
(bad)
jns
ret
jno
test
and
sbb
cdq
pop
cwde
int3
and
inc
hlt
inc
(bad)
out
fisttp
test
mul
push
dec
push
inc
pop
(bad)
mov
inc
gs
icebp
fstp
out
xchg
jmp
out
mov
or
pop
sbb
int3
cmc
adc
mov
sbb
ja
inc
in
dec
loopne
arpl
sti
push
xchg
imul
pop
push
dec
popf
shl
jmp
shl
sbb
dec
xchg
xor
push
jne
mov
cmp
jae
iret
jne
dec
push
scas
out
loopne
mov
rcr
(bad)
pop
add
ds
jae
and
inc
movs
jmp
mov
repnz
mov
dec
push
test
add
in
repnz
dec
xor
mov
out
pop
pusha
and
cmp
test
pop
mov
je
mov
in
mov
mov
and
out
inc
pop
jns
cdq
pop
fs
pop
lahf
inc
in
loope
mov
xlat
retf
push
pop
dec
stc
mov
or
loope
shl
push
cs
add
loop
push
pop
jmp
push
out
push
lods
mov
es
call
mov
mov
ja
push
movs
pop
scas
aaa
mov
pop
loopne
clc
shr
jb
inc
scas
adc
ror
adc
test
jmp
popf
lock
jns
sub
test
push
dec
in
mov
icebp
sbb
jae
inc
sahf
retf
push
dec
out
neg
jns
ins
sub
(bad)
mov
mov
push
stc
sbb
popa
fnsave
mov
xchg
mov
scas
jnp
mov
or
imul
mov
shr
push
cmp
fist
inc
pop
ret
in
test
adc
jecxz
mov
loope
add
or
xchg
aaa
or
xor
aam
(bad)
rol
in
push
and
loopne
adc
shl
out
push
out
cwde
jnp
daa
std
xacquire
sub
push
je
adc
loope
scas
retf
mov
sub
xchg
nop
mov
ds
ret
jae
popa
adc
in
icebp
pop
leave
inc
stos
mul
inc
sub
mov
or
inc
mov
mov
test
clc
pusha
fist
dec
(bad)
sbb
mov
mov
and
jne
push
mov
fsubr
outs
push
or
inc
mov
andps
push
pop
fdivr
addr16
xor
mov
inc
jbe
cwde
and
inc
mul
push
mov
leave
fs
stos
shl
xchg
jp
rol
mov
push
ret
mov
(bad)
xor
xchg
inc
fs
dec
inc
inc
pop
out
mov
push
push
cmp
or
adc
push
push
xchg
data16
mov
outs
mov
mov
sub
int
push
rcr
mov
dec
popa
shl
xor
jo
cmp
leave
and
push
sbb
(bad)
xor
adc
mov
cld
push
movs
xor
not
pop
inc
push
jg
in
test
sbb
neg
sub
daa
adc
mov
loope
xchg
cmps
loopne
aas
push
pop
mov
hlt
neg
in
movs
cs
out
neg
mov
shl
jmp
aad
mov
lahf
jno
rcl
call
fiadd
push
sbb
push
loopne
je
idiv
je
adc
or
mov
out
int
dec
push
jo
xchg
mov
inc
mov
movs
popa
ins
shl
(bad)
mov
jge
sbb
xlat
adc
sbb
psubb
(bad)
jl
mov
cs
aam
mov
cmps
aad
cmps
lods
cld
or
cmp
scas
mov
ins
out
cmp
out
cmp
(bad)
dec
cld
push
jge
push
retf
jno
fisubr
adc
ficomp
stos
push
fbld
jl
xor
adc
xchg
sti
rol
dec
pop
add
jmp
adc
cmp
lods
test
adc
cs
mov
xchg
loope
lods
test
es
test
push
mov
mov
adc
mov
adc
rol
xor
loope
pop
or
mov
repnz
mov
or
retf
scas
add
or
scas
adc
inc
addr16
and
lahf
lods
adc
(bad)
jne
adc
(bad)
test
xor
xchg
mov
enter
loop
retf
jae
sub
loop
ja
test
push
inc
dec
or
aam
sbb
mov
nop
loopne
fldcw
test
and
jle
test
stc
mov
xor
(bad)
mov
pop
mov
movs
adc
retf
dec
in
xor
push
sub
mov
cdq
push
jnp
outs
(bad)
pop
or
out
outs
sub
push
ins
push
and
inc
mov
sti
(bad)
push
test
jecxz
fldcw
cmps
dec
adc
push
and
push
call
push
push
pop
test
sub
cwde
push
push
sbb
inc
adc
idiv
jg
jle
pop
sbb
or
cmp
push
cmp
or
imul
adc
pushf
imul
dec
mov
push
sbb
idiv
dec
push
pop
pop
push
fs
push
add
pop
sub
xchg
hlt
cwde
or
add
inc
mov
out
repz
mov
and
jb
fmul
pusha
mov
inc
sub
fnsave
nop
dec
mov
nop
dec
es
std
out
push
in
pmulhuw
movs
and
(bad)
in
out
push
and
mov
sub
shl
push
sbb
jmp
xor
xchg
test
xor
cmp
jle
pop
cmps
and
add
add
sub
out
enter
or
aas
pusha
cmps
push
ins
loop
pusha
loop
sbb
cmp
add
mov
xchg
cs
cs
popf
ror
push
xchg
mov
pop
(bad)
mov
xchg
out
ins
out
add
clc
mov
lock
ins
push
arpl
fadd
bound
loop
sti
bound
inc
dec
sbb
dec
or
dec
sbb
pop
rcl
xor
and
or
add
mov
imul
jno
xchg
sbb
rcr
test
mov
sar
xor
loop
lds
sub
mov
and
inc
mov
adc
ds
jb
rol
xor
nop
push
stos
mov
(bad)
jmp
icebp
pop
movs
leave
mov
inc
(bad)
(bad)
cmps
popa
sahf
jg
stc
dec
call
dec
dec
push
in
sub
sub
push
mov
movs
into
inc
shl
adc
mov
cmps
adc
sub
sbb
mov
add
mov
push
movs
mov
sbb
imul
mov
inc
cdq
test
jnp
fwait
cmp
jbe
dec
test
(bad)
push
push
movs
sub
push
pop
push
push
jb
pusha
push
cwde
clc
mov
loope
sbb
inc
loope
out
les
and
push
jbe
mov
addr16
imul
cwde
sbb
sub
or
jecxz
mov
inc
sbb
xchg
mov
jo
repnz
adc
cld
jne
fstp
out
cmp
loope
mov
lods
xor
xor
out
jae
idiv
jns
mov
js
sbb
lock
in
mov
inc
jns
nop
pop
in
mov
jns
push
adc
ror
push
mov
(bad)
repz
rcr
stc
mov
nop
sti
mov
nop
neg
lods
lds
lds
push
sbb
xor
add
adc
inc
fwait
scas
push
fs
imul
ret
fist
lods
inc
mov
mov
add
jb
arpl
xchg
xor
pop
call
sbb
test
mov
cmp
jns
ret
popf
in
mov
and
inc
mov
icebp
lods
mov
jl
loop
lods
test
popf
neg
jle
idiv
mov
push
push
and
xor
outs
(bad)
cmp
mov
mov
loopne
ja
fst
ret
push
icebp
lea
jbe
xchg
mov
aas
adc
imul
dec
(bad)
out
lahf
shl
xchg
ja
retf
inc
xchg
mov
sub
lods
xchg
cmp
xchg
jno
iret
retf
jmp
ja
mov
sbb
gs
xchg
or
jg
pop
or
add
dec
fstp
hlt
out
aaa
xlat
je
movs
push
adc
mov
in
dec
fsub
push
repnz
fbld
cmp
ret
jae
cmp
inc
repnz
jg
or
retf
adc
je
enter
pop
sub
pop
repnz
xor
out
jns
or
out
sub
or
in
jl
test
(bad)
(bad)
call
repnz
cwde
in
cwde
fistp
(bad)
fwait
mov
push
mov
lds
fs
daa
add
mov
sub
sti
cmp
cwde
mov
std
cdq
nop
or
cld
push
dec
movs
out
pop
iret
scas
mov
cmp
(bad)
jbe
ds
adc
inc
inc
movs
repnz
jg
pop
mov
es
adc
and
adc
or
test
xchg
dec
or
imul
jo
test
imul
imul
pop
aas
loopne
add
loope
add
out
adc
inc
xchg
imul
int
add
jbe
mov
gs
not
out
fwait
cmps
mov
movs
mov
in
adc
xchg
retf
and
in
mov
cmc
sti
xchg
cdq
stc
dec
sub
stc
sar
and
jns
out
movs
jb
int
cmc
adc
xor
dec
out
cmp
sub
dec
adc
in
pop
and
aaa
out
pop
push
cwde
imul
nop
or
or
push
pop
daa
add
loop
je
jle
inc
and
fst
push
xchg
dec
ret
sub
xchg
aaa
(bad)
in
nop
shr
mov
ja
lods
sbb
or
adc
push
out
leave
sub
or
and
cmp
xchg
mov
and
inc
hlt
fld
jecxz
cmp
xor
or
je
bound
adc
adc
or
cmp
pop
test
pushf
adc
and
mov
in
mov
int3
xor
dec
lods
es
cs
popa
movs
xchg
jbe
add
adc
or
mov
icebp
test
lods
shl
pusha
icebp
mov
cmp
sub
push
mov
mov
sbb
push
cld
push
dec
fs
test
mov
out
jb
or
mov
lods
ret
jb
inc
imul
nop
or
sar
cmp
lods
loop
jp
mov
adc
cmp
stos
or
ror
inc
and
cmp
mov
mov
jle
psadbw
jmp
push
pop
(bad)
cmp
inc
sub
jp
mov
cmp
loope
(bad)
or
sbb
jp
add
push
or
adc
mov
mov
out
adc
sar
or
mov
outs
bound
push
fistp
xchg
pavgb
add
pop
xor
addr16
icebp
call
mov
mov
lock
and
pop
add
test
inc
js
call
xchg
gs
push
loope
add
adc
add
out
xor
add
xchg
cmp
mov
push
mov
pop
cdq
test
adc
or
inc
bound
test
pop
ror
sbb
and
loope
xor
push
push
imul
addr16
adc
xlat
in
test
mov
xor
js
push
dec
call
pop
xchg
pushf
or
mov
push
mov
mov
pushf
(bad)
or
das
xor
pusha
mov
and
xchg
movs
dec
jecxz
dec
sub
xchg
pushf
push
mov
xor
dec
fsubr
fcom
cwde
adc
movs
adc
loope
adc
dec
cmp
fst
inc
in
adc
out
inc
jge
inc
mov
ds
add
cmps
shr
fstp
and
jae
jg
enter
adc
inc
ret
daa
add
retf
in
not
or
loope
sbb
xlat
push
cld
retf
fnstenv
mov
div
adc
rcr
ret
aad
(bad)
cld
iret
inc
cmp
test
popa
mov
outs
dec
stos
push
loope
es
stc
push
mov
(bad)
xchg
jg
rcl
ds
mov
ss
mov
pop
or
dec
fnstcw
bound
inc
in
mov
mov
cld
mov
push
inc
cmp
clc
stos
lahf
pop
inc
jl
cmps
mov
ds
pop
inc
popf
(bad)
(bad)
(bad)
jmp
cmp
inc
mov
js
mov
repnz
cmps
das
fwait
inc
inc
test
outs
inc
call
sbb
inc
mov
mov
mov
rcr
shr
in
(bad)
(bad)
(bad)
(bad)
cmp
std
out
ror
xor
lods
es
jmp
jae
and
mov
jno
test
mov
cmp
jmp
movs
inc
in
movs
mov
push
inc
std
and
and
dec
les
test
or
data16
mov
inc
sar
out
jge
or
add
out
xchg
jecxz
(bad)
(bad)
(bad)
mov
popa
ret
jnp
cdq
stc
aas
lods
ss
shl
add
rol
push
(bad)
push
jmp
cli
call
dec
inc
cmc
xchg
xor
xor
int
push
data16
pusha
cmp
call
sbb
call
std
xor
pop
mov
adc
js
(bad)
(bad)
dec
in
pusha
mov
sbb
adc
push
mov
popa
and
mov
inc
push
in
movs
iret
xchg
mov
aaa
call
fcomp
in
retf
cmp
adc
call
ds
add
sbb
ficom
lods
fistp
movs
and
scas
push
ins
inc
outs
lahf
test
push
cs
push
in
(bad)
cmc
in
movs
inc
cmp
push
sub
fs
dec
mov
mov
(bad)
cmp
sub
scas
test
fisub
nop
mov
adc
and
outs
push
pop
shl
aad
dec
sub
mov
pop
push
push
mov
es
clc
push
retf
mov
add
pushf
ins
pop
mov
ins
push
add
test
std
mov
lods
lods
inc
jmp
and
outs
mov
cmp
mov
not
neg
cmp
lods
loopne
dec
cli
pop
jmp
out
xor
add
mov
aaa
sbb
fsub
sbb
nop
idiv
sbb
es
cmp
test
(bad)
pushf
imul
rcr
outs
pop
dec
xor
push
xlat
sbb
and
sub
add
loope
fcom
out
xor
iret
lea
mov
xchg
jo
dec
fild
das
inc
imul
mov
push
and
xchg
icebp
mov
js
mov
adc
fcmovnb
in
adc
pushf
loopne
dec
jp
aad
dec
adc
sub
adc
adc
xchg
and
push
in
add
or
imul
or
jo
sbb
sub
icebp
ret
aaa
mov
not
imul
stc
adc
scas
add
ret
ret
adc
daa
fnstsw
or
cld
cmp
or
dec
scas
pusha
inc
add
loopne
retf
jnp
add
not
mov
adc
in
imul
pop
(bad)
sub
fwait
cmp
and
mov
push
adc
retf
dec
mov
neg
xor
and
add
xchg
addr16
pop
call
rcr
adc
and
and
cmp
ja
int3
pop
push
sub
inc
push
cs
retf
mov
pop
mov
mov
push
jb
mov
imul
sub
mov
mov
push
movs
inc
dec
jle
xor
shr
and
ss
mov
sbb
sub
xchg
or
fwait
clc
jmp
mov
fwait
adc
pop
add
ins
sbb
(bad)
mov
mov
inc
repz
nop
push
adc
in
pop
nop
xchg
sub
cmp
jno
push
add
loope
arpl
fistp
lea
xor
out
ja
cld
xchg
pop
test
out
shl
pop
lods
and
scas
add
inc
pop
sub
lods
jg
cwde
jne
cmps
xchg
adc
cmp
adc
aas
or
sub
adc
sti
arpl
cwde
out
push
clc
pop
idiv
loopne
pop
aas
sar
inc
mov
ret
retf
jmp
int
fidivr
push
sbb
add
rol
jns
xchg
add
mov
sbb
test
xor
and
push
jmp
retf
shl
sub
leave
push
cwde
loop
inc
xchg
mov
pop
push
jmp
or
push
lds
sub
(bad)
lods
or
mov
mov
ror
pop
add
stos
xchg
cmp
jge
jno
xor
pop
lds
add
sbb
movs
and
outs
fsubr
jnp
loope
xchg
not
and
rep
movs
add
dec
mov
repnz
retf
dec
retf
mov
imul
cmps
ror
leave
retf
data16
mov
pop
int
mov
movs
cmp
add
cmp
call
adc
xor
mov
data16
mov
lods
push
int3
jp
mov
jl
sti
gs
mul
pop
enter
test
push
repnz
adc
push
jp
int3
les
mov
pusha
(bad)
pop
call
and
sbb
lea
and
inc
fld
adc
retf
inc
test
inc
lea
and
sbb
fisubr
ror
push
inc
cmc
retf
inc
push
jbe
or
test
mov
push
mov
adc
push
stc
lods
div
xchg
mov
aaa
push
jle
xlat
push
imul
icebp
out
leave
das
loope
test
push
xchg
or
push
jne
xchg
dec
mov
or
sti
nop
jns
daa
mov
mov
add
add
and
push
mov
pop
inc
jle
not
or
fdivr
not
std
cmp
imul
mov
shl
cmp
or
or
idiv
cmp
outs
imul
push
cmc
cld
sub
mov
in
cs
push
sbb
cmp
or
mov
outs
dec
jo
fild
daa
imul
cmp
pop
jp
cmp
or
and
xchg
ror
repnz
sbb
add
test
(bad)
cdq
stc
xor
repnz
in
mov
xchg
stc
jno
xchg
aaa
xchg
(bad)
stc
cdq
div
sub
retf
mov
adc
mov
and
and
xchg
add
(bad)
jmp
sbb
mov
jg
lods
test
iret
push
mov
pop
ret
clc
mov
(bad)
pop
ins
(bad)
push
popa
(bad)
fdivr
sub
mov
call
ins
ss
or
sbb
mov
cmp
jle
ret
dec
pop
iret
inc
xchg
call
add
pop
jge
inc
(bad)
jp
add
adc
sbb
in
(bad)
movs
jne
imul
ror
push
or
push
mov
adc
pop
(bad)
(bad)
jbe
or
rol
iret
loope
sub
lods
ret
sbb
sbb
and
rcr
sub
packssdw
(bad)
loopne
or
scas
test
and
cli
aad
inc
mov
inc
mov
imul
adc
jne
mov
loopne
xchg
inc
jno
inc
ror
fwait
mov
rcl
inc
adc
xchg
test
sub
dec
ret
aam
pop
inc
pop
daa
pop
pop
aaa
ja
dec
xor
add
xchg
push
adc
cmp
(bad)
cmp
xor
and
jp
jmp
hlt
test
mov
cmp
scas
pop
add
push
push
xor
test
or
aad
jo
addr16
fst
mov
lock
cmp
lds
out
call
add
stc
icebp
cmp
adc
sbb
imul
jne
ds
pop
fcmovbe
mov
and
(bad)
mov
xor
push
jo
xchg
scas
push
jmp
or
in
cs
loop
leave
and
loope
imul
iret
add
(bad)
mov
inc
jp
xchg
fild
scas
mov
retf
jb
neg
and
maxps
nop
(bad)
nop
pop
adc
(bad)
xchg
test
adc
mov
pop
jg
(bad)
and
stos
push
repz
adc
dec
ins
jge
out
mov
sbb
adc
(bad)
mov
aad
add
adc
scas
inc
cmp
leave
sub
xor
add
sub
jns
push
test
mov
or
pop
adc
dec
daa
sub
xor
ficomp
shl
mov
ds
popfw
jne
in
out
cli
add
add
rol
fld
test
sbb
pop
ins
scas
sbb
jne
sub
out
push
jne
rol
aas
gs
xchg
(bad)
pop
fwait
sbb
and
das
sti
adc
repz
mov
jb
add
das
test
fst
jle
fdivr
cmps
mov
mov
sub
enter
sbb
xor
pop
mov
jle
cs
aas
dec
sbb
out
inc
add
add
or
call
movs
inc
mov
pop
ja
mov
repnz
idiv
ds
add
mov
rol
mov
lea
in
clc
jmp
aas
(bad)
push
and
iret
retf
retf
jmp
mov
or
into
xchg
dec
iret
mov
fnclex
mov
loopne
or
jno
call
xor
mov
xchg
xor
mov
fimul
adc
or
dec
addr16
icebp
loop
pop
sbb
mov
idiv
mov
inc
stos
add
inc
dec
cmps
shr
jb
clc
mov
push
pop
xchg
mov
xchg
adc
jne
and
mov
pushf
fcmove
mov
add
pop
mov
mov
jae
mov
fldenv
out
pop
cmps
xchg
or
mov
(bad)
mov
mov
or
retf
mov
je
icebp
popa
push
inc
mov
inc
outs
xor
shl
imul
adc
call
pushf
adc
or
xor
imul
cmp
lds
or
mov
jns
xchg
mov
xor
bnd
mov
and
pusha
fsub
jecxz
lds
push
jae
movs
mov
xor
cmp
jbe
(bad)
cmp
out
pop
loopne
loope
cmp
mov
xor
shl
xor
mov
pop
test
imul
test
dec
repnz
sbb
repz
inc
and
call
fsubr
jl
fisubr
mov
cli
pusha
inc
pop
das
(bad)
rcl
pop
jb
stos
push
div
mov
clc
frstor
ficom
adc
or
jge
in
lea
leave
hlt
jge
mov
dec
and
hlt
add
loop
fwait
lds
out
lock
adc
out
jns
xchg
xlat
xchg
mov
dec
sub
mov
out
daa
aas
scas
dec
mov
imul
push
dec
jle
dec
imul
movs
dec
or
ds
sbb
sbb
not
lods
ja
sbb
outs
push
rcl
out
and
arpl
(bad)
std
xchg
out
xor
pusha
push
daa
push
dec
add
inc
movs
ror
imul
test
xchg
iret
fwait
repz
popf
push
movs
jnp
xchg
inc
cld
movs
pop
fwait
inc
and
ins
test
in
push
add
test
loop
adc
add
call
adc
stos
mov
ret
jne
pop
add
jmp
scas
add
imul
rcr
push
ins
test
lea
int3
call
xor
fist
or
fmul
fsub
les
scas
sub
mov
inc
test
adc
pop
xor
jg
dec
jecxz
icebp
sbb
mov
jecxz
fwait
idiv
mov
push
fwait
stos
xchg
adc
imul
lods
out
pop
cmp
xchg
cmp
jl
push
retf
cld
lea
xchg
mov
(bad)
loope
or
mov
jmp
gs
and
or
add
ss
rcr
out
ds
jnp
loopne
sbb
xlat
jmp
and
mov
call
icebp
call
push
sahf
sub
xchg
ins
aaa
pop
scas
hlt
std
jp
mov
xchg
add
popa
push
dec
mov
fcos
(bad)
dec
xor
adc
pop
(bad)
fidiv
imul
xchg
jg
pop
loopne
jge
leave
imul
xchg
sub
(bad)
(bad)
mov
sbb
cwde
jb
lock
xor
cmp
and
mov
imul
fldenv
inc
addr16
or
cmp
lods
out
out
xchg
mov
nop
dec
retf
(bad)
vucomiss
movs
(bad)
(bad)
(bad)
push
pop
add
iret
stc
(bad)
adc
inc
je
les
cdq
loop
call
ror
mov
out
jmp
mov
enter
into
scas
mov
inc
arpl
jnp
retfw
sub
(bad)
(bad)
push
sub
ja
sbb
rcr
xor
aad
mov
(bad)
jmp
xchg
clc
ret
cmp
push
mov
in
mov
cmp
mov
push
cmp
and
adc
scas
shr
movs
sbb
movs
sbb
lds
adc
int3
xor
ins
fiadd
cmp
mov
inc
mov
cld
adc
scas
lods
jno
push
pop
enter
shl
cmp
inc
in
jbe
ja
adc
cmp
ins
std
into
fidivr
ds
in
mov
or
dec
xor
scas
mov
movs
sub
adc
or
mov
adc
mov
push
push
mov
mov
aaa
jb
stos
mov
cli
inc
push
add
dec
shl
xchg
pop
pop
and
call
mov
mov
fwait
mov
jmp
cmp
adc
xchg
add
daa
pop
xchg
in
push
push
sbb
ret
ud2
xchg
mov
dec
or
aam
xchg
add
sbb
ror
(bad)
mul
cmp
in
outs
ror
xchg
in
sbb
push
mov
push
icebp
leave
retf
dec
shr
cmp
into
lahf
shl
loope
imul
lds
or
push
aad
add
out
(bad)
shl
sub
sbb
fucomp
ds
lock
fdiv
mov
jmp
adc
pusha
add
jp
mov
test
icebp
push
xchg
aaa
xor
push
push
call
add
inc
mov
mov
idiv
ja
dec
mov
push
dec
xor
jns
fwait
cli
(bad)
aam
or
adc
inc
or
jne
jl
mov
sahf
sbb
in
fdiv
sub
jg
fcomp
into
call
rol
cs
jge
add
sbb
mov
scas
push
add
rol
mov
dec
add
call
adc
xchg
dec
and
rol
push
cwde
add
dec
add
inc
cmp
std
inc
xchg
scas
adc
cmp
inc
jp
push
push
imul
or
and
popf
iret
xlat
clc
adc
fcom
(bad)
loope
enter
test
xor
sbb
clc
add
cwde
or
in
mov
or
mov
xor
push
xchg
push
data16
stos
add
loope
pop
outs
inc
adc
rcr
push
lods
pop
jecxz
jge
sub
mov
(bad)
cli
fistp
adc
into
pop
xor
scas
imul
cmp
rcr
les
cmp
sahf
mov
add
adc
or
add
psubd
pop
mov
call
lahf
inc
in
pop
dec
and
inc
enter
pop
das
or
lods
sub
ret
sbb
inc
pop
fild
icebp
mov
scas
repz
jno
mul
out
inc
pop
in
lods
mov
push
icebp
in
push
dec
cmp
fmul
movs
(bad)
clc
daa
popa
jb
les
mov
fist
fs
sbb
outs
jmp
fnsave
addr16
call
push
loop
lahf
or
mov
sub
mov
ja
in
sub
or
inc
into
aam
rol
rcl
ror
pop
push
mov
sub
pop
inc
dec
or
pop
(bad)
cmp
sub
cmps
lods
repz
mov
cmps
dec
test
js
rol
dec
mov
mov
js
jns
sahf
lea
call
loopne
and
aad
out
sub
xchg
popf
xchg
mov
int3
add
sysexit
fstp
out
clc
push
mov
dec
jne
aas
push
cwde
pop
test
call
xor
jnp
mov
into
xor
sub
jg
mov
adc
leave
div
xchg
lods
enter
jmp
mov
inc
cs
scas
xor
mov
sub
je
movs
add
test
stos
dec
mov
sbb
out
movs
(bad)
inc
rol
stc
jp
sbb
loope
cmp
pop
loop
or
es
dec
push
sbb
push
jl
call
jg
push
mov
cld
(bad)
movs
adc
test
loop
call
jb
adc
aas
jo
pushf
inc
mul
xor
jecxz
(bad)
stos
push
xor
fsubr
sahf
add
sbb
inc
stos
xlat
sub
cdq
push
mov
jmp
dec
bnd
jge
or
and
cmps
mov
out
into
sub
fs
(bad)
or
test
add
scas
add
push
dec
xchg
jno
add
or
push
cmps
pop
ins
sahf
adc
je
inc
push
movs
out
mov
push
xor
out
cli
dec
xchg
out
jo
xor
or
cmps
ss
or
test
rol
ret
pop
fsub
movs
(bad)
push
retf
or
sar
fsubr
jmp
or
hlt
and
int
adc
xor
adc
div
shl
pop
inc
sbb
(bad)
push
or
aad
or
out
retf
enter
and
xor
sbb
enter
test
sbb
lahf
sbb
push
imul
pop
xchg
ja
mov
pushf
push
ds
imul
xor
and
jp
xor
sbb
add
xor
inc
test
mov
test
or
aaa
xor
cmp
pop
and
cmps
mov
das
hlt
fiadd
and
test
add
adc
dec
dec
int
dec
add
mov
std
mov
jl
add
pop
cld
cmps
push
fisttp
add
shl
dec
fild
mov
push
mov
xchg
cmp
sub
pushf
push
xchg
adc
push
icebp
pop
xor
fcomp
fisttp
fstp
cmps
sbb
ret
inc
jbe
ss
and
add
stos
jno
inc
inc
clc
mov
inc
sar
movs
aaa
mov
add
pop
jmp
sbb
mov
push
inc
js
or
inc
xor
push
or
outs
jmp
mov
in
sar
fimul
pop
jg
in
or
test
or
sbb
icebp
mov
loop
mov
repz
xor
cmp
(bad)
icebp
add
rcl
or
xor
popa
sbb
icebp
xor
push
cmp
movs
sar
daa
push
loopne
jecxz
mov
add
jo
ja
jno
fsubr
sbb
lods
lock
or
repz
pusha
out
repnz
push
pop
mov
xor
out
mov
inc
cmps
imul
rcl
add
les
not
clc
push
pop
xchg
ret
pop
gs
je
pop
fwait
sbb
mov
sti
ins
adc
in
jb
cmc
xor
dec
mov
loope
cs
movs
or
aam
test
and
adc
mov
scas
cmp
mov
mov
push
mov
push
cs
and
test
inc
(bad)
cs
mov
enter
daa
out
mov
pop
xchg
lock
and
mov
jge
mov
add
retf
mov
or
xor
loop
nop
mov
stos
add
inc
mov
ss
adc
and
mov
xchg
ficomp
loope
add
icebp
mov
pop
test
or
mov
inc
or
inc
retf
and
mov
xchg
and
inc
dec
push
add
jg
adc
or
addr16
push
dec
xchg
add
repz
inc
clc
or
and
(bad)
repz
inc
cmps
xchg
and
inc
(bad)
lock
adc
dec
push
pop
jae
leave
retf
xlat
std
mov
imul
inc
sbb
push
lock
push
push
adc
movs
fiadd
cmp
pop
and
add
mov
data16
mov
(bad)
fdivr
add
test
stc
pop
adc
les
(bad)
idiv
mov
sub
imul
add
dec
(bad)
jno
xor
mov
sbb
sahf
das
iret
test
cs
add
test
xor
mov
pushf
movs
push
js
or
not
fisub
jmp
adc
pop
(bad)
xchg
outs
mov
inc
cld
sti
mov
xchg
pop
movs
push
adc
mov
(bad)
(bad)
test
cld
push
pop
add
xor
int3
pusha
shl
mov
add
mov
and
sahf
xchg
sub
(bad)
ss
fldpi
adc
mov
cmp
inc
out
scas
neg
adc
fsubr
pop
xor
dec
xchg
dec
bound
adc
jp
adc
xchg
inc
sbb
xor
add
je
pop
js
jb
int
inc
pop
jnp
inc
rcr
dec
sub
(bad)
(bad)
push
add
mov
cmp
dec
push
outs
mov
sbb
ret
xor
sub
push
push
mov
adc
and
xchg
sub
mov
mov
mov
add
xor
jg
pop
push
push
adc
and
xor
or
call
pop
xchg
idiv
loop
dec
cmp
lods
mov
lods
push
xor
aam
push
pop
mov
in
adc
rcl
aam
pop
add
enter
dec
bound
stos
push
xchg
lahf
push
pop
repnz
loope
mov
jl
dec
das
mov
and
out
nop
mov
ja
enter
dec
clc
jae
repz
fidivr
ins
mov
ins
xchg
(bad)
js
or
adc
sbb
pop
xchg
add
sub
int
movs
mov
nop
in
jo
and
sar
pop
inc
jae
call
sub
adc
adc
stos
sub
test
fdiv
mov
mov
xchg
gs
mov
sub
sar
xchg
inc
nop
push
cmp
adc
xchg
mov
lea
cmp
mov
or
sbb
jmp
push
or
out
fs
cmp
aaa
or
pop
icebp
xchg
popf
jne
mov
(bad)
(bad)
mov
cmp
xor
loope
scas
repnz
punpcklbw
in
xchg
cmp
loope
pop
test
(bad)
pop
mov
repnz
xchg
imul
fistp
sub
add
sbb
pop
(bad)
jae
jns
aaa
xor
mul
cmp
stos
lods
mov
mov
add
test
or
aad
jg
or
sbb
jnp
and
push
mov
adc
mov
adc
stos
add
arpl
sbb
stc
mov
sub
adc
movs
popf
loop
cmp
push
aam
push
and
add
ret
ds
loope
movs
imul
cld
inc
outs
mov
pop
and
ror
in
inc
arpl
mov
loop
jbe
sbb
out
pop
(bad)
lods
imul
jo
push
sub
lock
gs
xchg
or
and
pop
mov
inc
mov
das
xchg
jp
add
dec
xchg
push
xor
icebp
cmps
out
shl
jp
inc
or
adc
xchg
out
aam
push
jo
pop
dec
xchg
xchg
pop
bnd
mov
jl
dec
mov
in
mov
test
inc
add
gs
mov
pop
mov
xchg
adc
sub
and
stc
in
fmul
imul
int
sbb
bnd
outs
inc
(bad)
ret
mov
aas
cld
push
mov
(bad)
(bad)
inc
cld
push
mov
fmul
sahf
fmul
inc
or
cmc
cld
jno
int3
cmc
mov
or
dec
jecxz
xor
loop
xchg
loopne
fst
jge
div
imul
rcl
les
xlat
dec
aad
js
adc
mov
imul
mov
test
cmp
(bad)
xor
nop
loope
(bad)
sub
pop
jne
xchg
xchg
mov
add
ret
or
push
std
push
fstp
push
test
(bad)
ret
(bad)
(bad)
out
fs
int
jecxz
in
aaa
or
dec
xchg
shr
jle
inc
fiadd
push
xchg
test
outs
cmp
and
fwait
mov
xchg
das
and
mov
icebp
fwait
in
data16
imul
rcr
gs
pop
dec
lea
add
xchg
(bad)
adc
pop
sbb
add
jl
in
xchg
pop
xchg
pop
cmps
movs
sub
fs
nop
cmp
retf
pop
sub
out
push
mov
lea
enter
sbb
inc
clc
mov
jle
loope
lahf
test
jle
xchg
fld
adc
mov
stos
mov
cmp
scas
xchg
xchg
inc
xchg
scas
or
push
lods
dec
xchg
std
test
ss
stos
gs
jle
mov
sbb
add
ins
pusha
sbb
icebp
push
push
pop
fld
fwait
cld
xchg
sbb
and
pop
mov
fwait
rol
push
movs
es
stc
les
repnz
(bad)
cmp
mov
neg
add
xor
repz
mov
jmp
adc
pop
add
loop
out
push
and
push
xchg
mov
idiv
mov
clc
push
xchg
jle
adc
sub
stc
gs
jnp
mov
aas
add
xchg
repz
sbb
(bad)
push
fadd
adc
xlat
push
jle
and
mov
mov
and
dec
mov
loope
pop
mov
sub
ror
ror
ja
(bad)
cdq
pop
sub
in
mov
cmps
lock
adc
mov
out
loope
pop
xor
enter
fs
std
fdiv
test
test
and
inc
push
lods
jmp
xchg
nop
mul
pop
scas
pop
setle
lods
sub
add
push
pop
addr16
in
pop
icebp
adc
test
mov
and
out
mov
cmp
imul
sub
sbb
in
je
dec
lods
cmp
or
push
or
push
dec
push
adc
sahf
ret
add
mov
pushf
mov
aam
repnz
call
das
and
cmp
dec
retf
imul
dec
retf
retf
xchg
jbe
dec
pop
pop
lea
(bad)
imul
and
pop
loope
cld
sub
or
enter
adc
test
xchg
cdq
ficomp
pop
shr
sbb
xchg
pop
(bad)
lods
or
popf
idiv
movs
not
in
leave
adc
pushf
pop
mov
clc
pop
popf
les
test
dec
mov
jecxz
mov
cmp
add
jmp
int3
adc
adc
dec
dec
push
aam
push
das
and
lock
mov
ret
cmp
movs
and
(bad)
fwait
(bad)
cdq
dec
sti
push
test
inc
pop
adc
outs
iret
repz
mov
push
lds
jns
fwait
cld
mov
test
repnz
imul
or
loopne
mov
adc
and
jmp
and
scas
shl
or
cwde
mov
sub
sti
xchg
test
ret
iret
pop
inc
pop
arpl
mov
ret
test
mov
push
cmp
pop
push
loop
popf
jae
js
(bad)
mov
(bad)
sbb
sahf
push
stc
dec
daa
cmp
arpl
stc
outs
dec
enter
mov
or
test
in
and
cmp
jmp
pushf
jmp
fnsave
in
adc
fnsave
(bad)
push
das
js
fisub
mov
sbb
add
ja
mov
xchg
or
aad
xchg
(bad)
jl
push
xlat
cmp
cmp
push
frstor
and
pop
sbb
jnp
xor
xchg
(bad)
sbb
scas
out
pop
pop
cmp
andps
xlat
ror
jmp
fstp
mov
xchg
out
out
add
jmp
inc
rol
stc
or
xchg
fnsave
adc
adc
or
pop
adc
in
clc
and
pop
dec
push
shl
add
xchg
sbb
sub
push
mov
addr16
mov
les
neg
in
inc
pop
frstor
adc
je
loope
add
and
push
cs
push
mov
into
and
bnd
cmp
popa
xchg
in
ins
(bad)
jp
and
jp
jo
pop
and
add
enter
iret
mov
push
push
fadd
and
cmp
sbb
inc
xchg
out
sbb
das
sti
xor
xchg
or
sub
in
aaa
mov
push
cmp
rcr
out
adc
mov
addr16
push
jnp
in
jb
popa
sub
mov
xlat
test
je
mov
add
add
adc
stc
fsub
add
stos
push
std
and
inc
mov
mov
in
cmp
aaa
test
in
jb
cs
cmc
neg
in
outs
mov
sub
in
pusha
outs
pop
in
ds
lahf
iret
mov
ss
nop
pop
adc
jmp
and
sbb
sahf
bound
ja
jb
cmp
or
add
add
emms
xchg
outs
mov
sub
and
cmp
outs
sbb
das
pop
sbb
push
scas
adc
enter
push
scas
or
jns
dec
push
test
nop
fld
add
hlt
jns
inc
ret
cmp
and
mov
pushf
pop
fld
test
or
cmp
and
cmp
jb
(bad)
sti
neg
mov
jb
add
fsub
mov
out
outs
test
inc
mov
nop
test
jge
idiv
sahf
retf
test
push
cs
inc
push
sbb
jne
or
lods
mov
pop
mov
inc
ret
fs
mov
mov
lods
arpl
jb
enter
and
sub
lahf
inc
inc
push
scas
jp
out
xchg
jg
repnz
daa
cmp
adc
movs
arpl
pop
pushf
push
test
fistp
push
inc
pop
retf
jle
sub
mov
and
sub
jbe
pop
loop
das
pop
mov
adc
sub
inc
loopne
xor
out
and
sar
sbb
test
ja
icebp
ja
jo
cmp
and
sub
pushf
dec
add
mov
cmp
xchg
adc
adc
and
retfw
jo
cmp
add
jo
movs
loop
pop
in
daa
iret
jo
imul
and
sbb
into
pop
cmp
test
fucomip
call
pop
dec
popa
out
dec
pop
jb
fistp
ss
cmp
adc
je
iret
(bad)
(bad)
fild
(bad)
leave
adc
ret
push
mov
icebp
push
push
int3
and
sar
adc
(bad)
cmp
mov
ds
(bad)
(bad)
jmp
add
dec
pop
fwait
outs
mov
fs
sbb
leave
adc
xlat
or
dec
cmp
sti
call
inc
push
pop
dec
and
dec
daa
outs
ret
lahf
outs
in
lea
sub
into
push
leave
push
push
ret
daa
scas
or
xor
mov
xor
mov
cli
outs
mov
ss
xchg
nop
or
dec
dec
(bad)
stc
inc
scas
adc
mov
inc
jno
pop
pop
stc
ins
xor
int
out
inc
sbb
int
ss
or
add
push
adc
mov
mov
pop
ret
mov
sbb
pop
inc
jbe
and
cmp
mov
jg
outs
inc
jp
inc
or
(bad)
fdivr
(bad)
retf
test
jmp
pop
mov
daa
arpl
rcr
mov
mov
mov
pop
cld
div
push
and
push
mov
fistp
(bad)
mov
ds
push
in
out
xchg
div
mov
push
dec
push
xor
pop
pusha
push
push
test
push
outs
xchg
dec
inc
cld
clc
cld
(bad)
(bad)
adc
mov
cdq
stc
push
leave
es
or
dec
ss
jg
dec
or
inc
gs
pop
daa
bound
(bad)
test
not
sub
mov
(bad)
shl
xchg
xor
mov
add
enter
inc
sub
add
mov
retf
jo
push
aam
and
sub
shr
push
inc
in
jmp
sbb
xor
dec
or
clc
xsavec
aas
jne
xor
mov
daa
jmp
push
int3
xchg
call
in
pop
aas
stc
dec
test
cwde
adc
ret
in
(bad)
mov
mov
pop
push
ds
imul
pop
push
pop
xor
(bad)
fwait
mov
jmp
lds
xor
dec
xor
popa
xchg
adc
jle
sti
inc
sub
pop
dec
(bad)
in
sub
loop
nop
fsub
add
inc
dec
cmp
and
add
jmp
test
lock
retf
jp
cli
out
pop
loopne
cwde
xor
and
dec
retf
js
sub
test
mov
mov
sbb
inc
dec
cmp
push
mov
dec
add
sar
push
xchg
push
fidivr
adc
mov
xor
ror
(bad)
add
je
ins
in
mov
das
mov
ss
and
push
mov
out
pop
inc
add
push
sar
pop
sahf
in
test
sub
xchg
pop
cmp
xchg
shr
pushf
inc
dec
pop
es
ins
push
ja
xchg
sbb
xchg
sbb
and
or
or
les
jg
js
(bad)
cmp
or
mov
push
cmp
and
test
inc
iret
ret
stos
xor
jbe
mov
adc
inc
cs
inc
adc
pop
mov
jge
int
mov
inc
mov
jg
leave
mov
outs
stos
dec
adc
mov
jbe
mov
das
push
pop
xor
sub
fwait
in
rcl
pop
pop
sbb
push
je
(bad)
ins
push
daa
inc
push
push
out
mov
dec
pop
push
jle
pop
int
mov
push
cmp
(bad)
and
sbb
ss
cmp
cmp
ficom
fwait
xor
ss
pop
shl
sbb
pop
ss
shl
je
lahf
popa
test
icebp
jne
lock
repnz
int
fldcw
test
in
cs
jge
ja
fcom
out
cmp
mov
xor
test
int
mov
pop
and
push
pop
xor
cmp
pop
in
shr
pop
sbb
push
and
inc
cmc
cmps
fnstcw
push
das
push
inc
or
dec
jb
fcomi
(bad)
push
(bad)
and
xlat
cs
out
add
ins
mov
data16
xor
push
(bad)
daa
test
jmp
setnp
es
or
mov
xchg
push
rol
stos
ds
cmps
stc
xor
ror
out
mov
mov
out
mov
push
push
mov
jnp
mov
mov
movs
pushf
clc
mov
and
iret
mov
or
arpl
mov
ins
push
fimul
inc
stc
push
push
jmp
ss
jbe
inc
cmc
(bad)
test
sti
jns
mov
jno
lea
fsin
cli
cmp
fwait
js
ds
aas
sbb
or
and
mov
ss
ss
sub
xor
loope
sti
mov
push
xor
cmp
aaa
or
icebp
stos
mov
loopne
leave
ret
pushf
(bad)
(bad)
mov
inc
out
imul
pusha
push
je
(bad)
add
pop
inc
mov
sbb
(bad)
rcl
push
pop
mov
mov
push
mov
loopne
fucomip
outs
fdivr
nop
mov
mov
add
outs
xchg
ja
jmp
cld
movs
cld
mov
or
cmp
pop
das
add
idiv
fbstp
je
test
cld
mov
inc
push
push
sbb
aad
mov
into
or
sahf
lahf
ins
xor
jmp
jle
push
or
push
cs
fbstp
add
inc
pop
and
cs
rcl
(bad)
(bad)
and
or
ds
pavgw
in
jbe
into
push
daa
outs
movs
stc
dec
(bad)
lahf
daa
xlat
or
jno
int
fisub
jo
test
outs
aaa
cld
mov
and
lahf
scas
or
push
mov
or
aam
inc
retf
aaa
test
clc
loop
cld
mov
outs
cmps
out
push
pusha
xor
jbe
push
or
scas
es
pushw
sbb
in
pop
add
movs
cmp
add
scas
push
jns
in
lds
pop
cmp
mov
adc
push
mov
jmp
pop
dec
rcr
cli
das
popf
movs
jge
jne
retf
push
dec
div
test
and
add
or
and
loopne
popa
sbb
inc
daa
or
fidiv
lahf
idiv
retf
jp
dec
(bad)
adc
xchg
test
and
imul
push
mov
dec
pop
xchg
inc
mov
lods
test
(bad)
fs
xchg
pop
jp
sub
sub
repnz
push
out
jg
pop
idiv
jae
in
sbb
sahf
or
xor
jle
mov
iret
ins
adc
cmp
(bad)
sub
popa
test
lods
and
xor
sbb
adc
rcr
aam
inc
fstp
cli
lods
add
push
inc
dec
cmp
aas
jno
mov
and
push
bound
jb
xor
(bad)
mov
fs
daa
in
push
xor
in
and
call
mov
stos
add
iret
lea
shl
jb
sub
push
lods
(bad)
jg
push
fs
fdivr
push
stc
xor
nop
sub
or
enter
jmp
nop
cmp
mov
cmp
std
test
inc
mov
push
sti
pop
fst
das
(bad)
iret
sub
(bad)
(bad)
mov
in
imul
stc
in
pop
sbb
ret
nop
outs
(bad)
push
das
lock
sub
test
inc
inc
js
daa
js
shr
outs
fist
or
xor
jns
mov
cmp
mul
clc
and
mov
test
pushf
lods
jns
fucomi
(bad)
imul
xchg
das
movs
mov
jg
jb
iret
aaa
mov
femms
(bad)
outs
gs
mov
xchg
scas
bound
and
gs
popf
inc
cmp
sbb
sbb
icebp
js
push
push
push
mov
out
jle
lock
dec
adc
aas
js
in
or
push
mov
pop
stc
hlt
mov
mov
jne
cs
and
and
leave
push
js
je
je
test
push
jne
push
test
inc
and
dec
ins
leave
cmps
shl
rol
fs
cmp
inc
fsub
mov
sbb
repnz
inc
xchg
ins
shl
mov
add
dec
sbb
or
lods
ss
(bad)
cmps
jno
sbb
add
mov
xchg
test
pusha
icebp
stc
or
mov
enter
push
ja
push
stc
enter
enter
ss
jbe
pop
cdq
cli
int3
adc
xchg
push
das
lods
(bad)
xor
fistp
mov
ss
test
pushf
push
cmp
mov
cmp
rol
cmp
(bad)
shl
retfw
or
xchg
retf
(bad)
xchg
mov
dec
sbb
mov
adc
push
js
mov
or
sbb
cwde
popf
push
in
xor
cmp
sar
push
aad
div
and
xchg
and
cmp
shl
xchg
call
icebp
xor
popa
(bad)
push
add
pop
call
adc
test
push
jmp
push
lods
cmp
movs
pop
and
cdq
es
xor
xchg
stos
sbb
or
xor
das
movs
xchg
cmp
retf
pop
loopne
xchg
sub
inc
xor
pop
aas
(bad)
out
inc
lahf
and
push
aaa
sbb
sbb
nop
daa
fcomp
je
test
jae
xchg
jmp
jp
jne
bswap
xor
fldenv
test
add
lods
(bad)
push
inc
es
imul
adc
clc
adc
mov
lea
cmp
retf
pop
pop
nop
popa
xchg
mov
pop
lahf
inc
mov
xor
pop
push
push
mov
and
pushf
popa
inc
cmp
nop
add
and
cmps
inc
bound
sub
int
jp
scas
jecxz
das
shl
test
in
scas
pop
aad
fnsetpm(287
in
pop
pop
popa
xor
lds
mov
leave
and
lock
loopne
pop
(bad)
push
mov
dec
loope
push
nop
inc
mov
sub
(bad)
(bad)
mov
sbb
lds
in
popa
xor
dec
jnp
pop
fldcw
jo
adc
jb
stc
jnp
jle
int3
jle
not
fs
sub
xor
loopne
fnstsw
pusha
popa
cmp
xor
mov
pop
adc
not
inc
xor
loope
pop
mov
jne
iret
iret
aas
mov
loopne
add
ret
mov
test
jne
fild
xchg
jo
pop
and
repnz
pop
test
pop
mov
nop
es
pop
imul
xor
and
jg
push
add
or
add
cs
test
xor
cmp
cmp
xor
cmp
dec
sbb
sbb
es
inc
lds
push
or
or
push
adc
les
inc
xchg
cmp
mov
lods
bound
xchg
xor
loop
aas
sbb
lds
aad
inc
adc
pop
push
mov
or
xchg
movs
cmp
xchg
push
push
xlat
jmp
mov
loope
inc
push
jae
loope
jmp
pusha
sub
stos
push
and
js
xchg
dec
pop
test
inc
jp
jmp
loop
adc
imul
add
mov
adc
xchg
ret
loopne
lods
xor
adc
inc
mov
sbb
nop
ret
data16
or
xor
jne
loope
push
fwait
(bad)
push
ins
mov
and
push
inc
call
or
nop
xor
adc
pop
and
adc
cmp
jb
dec
adc
popa
(bad)
jb
fldenv
imul
les
sbb
lods
and
cmp
(bad)
dec
and
repnz
xchg
out
or
(bad)
and
mov
jno
pop
aaa
pop
les
or
mov
neg
xchg
shl
aaa
cmc
imul
daa
movs
sbb
dec
push
addr16
xchg
out
mov
pop
pusha
dec
pusha
inc
adc
add
frstor
into
imul
out
pusha
test
pop
daa
add
dec
or
adc
and
mov
mov
mov
mov
and
movs
or
loopne
dec
adc
and
pop
mov
adc
es
pusha
sbb
outs
int
pop
inc
vminps
add
cmp
aam
outs
popa
inc
pop
add
push
shl
aam
dec
xchg
and
pop
xchg
xchg
ficomp
ror
mov
(bad)
lods
(bad)
and
push
idiv
sti
leave
pop
daa
cmp
ficom
mov
sub
dec
inc
push
pop
jl
mov
pop
push
push
(bad)
push
dec
inc
push
dec
es
inc
dec
dec
dec
push
xor
push
push
xor
xor
idiv
jg
ja
je
ins
ins
outs
popa
bound
outs
data16
cmp
cdq
add
add
push
sbb
ds
dec
adc
cli
dec
dec
dec
dec
dec
inc
inc
push
inc
push
in
dec
inc
pop
pop
mov
pop
pusha
inc
dec
push
jae
jns
div
aas
mov
outs
js
popa
mov
int3
addr16
imul
xor
cmp
ss
sbb
push
pop
dec
adc
gs
add
or
pusha
imul
enter
(bad)
pop
jp
inc
ror
sbb
mov
jp
loope
pop
dec
push
test
adc
inc
cdq
icebp
cmp
icebp
inc
scas
pop
cmp
js
dec
enter
pop
inc
xor
repnz
push
pop
mov
jns
outs
test
das
stc
adc
cmp
mov
push
push
mov
push
(bad)
jo
jecxz
mov
sbb
cs
xchg
test
jne
or
mov
lods
mov
xor
push
rol
push
cmp
xchg
cwde
out
ret
inc
mov
dec
dec
push
add
mov
je
jno
movs
push
fnstenv
rol
sub
test
enter
nop
xchg
test
xor
test
iret
push
ret
test
sbb
sbb
push
mov
xchg
lods
cmp
adc
aaa
or
sbb
sub
in
cmp
cmps
cmp
retf
pop
dec
in
repnz
jge
mov
std
mov
test
and
repz
or
cmps
mov
fs
and
in
not
loope
in
jns
mov
inc
push
mov
push
out
push
pop
imul
cmp
and
mov
sbb
mov
sti
add
push
cmp
jb
fs
adc
mov
lods
pop
or
out
movs
test
das
in
imul
xor
fs
push
mov
call
adc
jne
jne
and
jb
pop
and
repnz
xchg
int3
out
movs
pop
loope
test
movs
mov
das
call
dec
leave
in
retf
neg
lods
dec
add
stc
inc
mov
inc
add
dec
xor
adc
mov
inc
lahf
dec
adc
xchg
inc
mov
or
adc
xor
(bad)
mov
fld
xor
and
cmps
adc
(bad)
jns
fnsave
or
and
xor
cdq
jle
or
iret
mov
adc
cmp
and
xor
and
push
push
cs
fdivr
and
jb
push
sbb
adc
xchg
retf
int3
adc
cmp
(bad)
imul
sbb
push
pop
cs
je
(bad)
jns
sbb
sbb
jmp
sub
sbb
call
retf
lea
out
retf
ror
jae
adc
seta
or
lea
or
jnp
cmps
lods
cmp
lds
mov
and
mov
push
es
jle
cmp
retf
aad
ret
cwde
cs
cmc
xor
in
mov
(bad)
pop
lods
mov
arpl
pusha
inc
pop
pop
lock
inc
mov
(bad)
adc
bnd
scas
movs
int
icebp
cmp
mov
sub
in
xor
enter
inc
push
dec
sar
add
repnz
xchg
push
sub
scas
icebp
scas
jne
adc
pop
ins
stc
cmc
outs
cs
retf
aaa
jno
cmc
idiv
test
mov
packsswb
pop
cs
aaa
cdq
mov
test
adc
mov
inc
out
ins
and
pop
scas
mov
jmp
aad
and
jmp
idiv
enter
mul
cld
and
ja
aas
out
pop
mov
test
dec
and
test
(bad)
jae
adc
xor
(bad)
xchg
mov
push
mov
pop
int3
lds
jnp
loopne
or
aam
mov
jmp
cmp
pop
dec
rcl
xor
push
in
pop
dec
jo
stos
inc
pop
and
xchg
daa
popf
fwait
cmp
xor
cld
jmp
test
cmp
shl
lods
test
jp
mov
dec
adc
sbb
mov
fs
adc
bound
jp
sbb
add
cmc
scas
xor
ja
(bad)
enter
lds
es
mov
mov
xchg
scas
adc
dec
push
cmp
retf
loope
add
mov
call
push
out
or
or
or
call
add
aam
les
xchg
popa
inc
jecxz
inc
inc
sbb
pop
icebp
dec
rcl
mov
pop
movs
inc
pushf
icebp
leave
(bad)
popa
sub
mov
loope
and
mov
cld
loope
addr16
fild
jns
pop
adc
jmp
sub
out
sar
dec
add
ret
xor
jbe
hlt
mov
jge
cld
in
adc
aas
daa
push
aas
xchg
imul
sbb
adc
adc
push
dec
adc
lds
fisttp
mov
inc
imul
fs
or
push
inc
xchg
cld
arpl
(bad)
jmp
ja
cmp
retf
xor
scas
stos
(bad)
imul
xchg
xor
push
mov
dec
mov
jge
hlt
stos
dec
push
cmp
sub
inc
scas
cwde
mov
idiv
xchg
mov
dec
sbb
pop
dec
push
data16
call
sbb
gs
out
test
icebp
lds
jge
jge
xor
lods
arpl
add
sub
jmp
pop
sbb
jmp
xor
mov
ins
bnd
fld
clc
cmp
lods
repz
and
adc
sbb
xchg
pop
mov
div
xor
icebp
push
retf
test
sbb
icebp
xor
call
sbb
jl
movs
mov
dec
cmp
mov
idiv
test
mov
jo
sub
xchg
mov
fdivp
adc
xchg
jne
pop
dec
inc
pop
xchg
adc
punpcklbw
jmp
test
inc
cld
mov
jl
ins
out
ret
(bad)
adc
(bad)
fidiv
div
in
xchg
pop
xchg
mov
or
dec
jns
retf
pop
push
mov
inc
cmps
daa
ror
and
cmp
jo
inc
jae
mov
lds
xor
aad
pop
pop
jg
inc
fiadd
shl
je
and
push
repnz
ret
sbb
mov
add
(bad)
scas
mov
adc
mov
jle
jg
mov
pop
(bad)
imul
mov
inc
xchg
pop
dec
push
loopne
sub
inc
daa
xlat
inc
pop
lock
out
cli
xchg
sub
push
pop
inc
in
fisttp
sbb
imul
push
push
or
es
push
push
cmp
retf
mov
inc
jmp
mov
out
cdq
dec
rcl
jp
imul
sbb
or
or
dec
fdiv
aad
or
and
mov
pop
jp
adc
cmp
lods
add
loope
shl
das
enter
cmp
dec
push
in
or
pusha
les
pusha
popa
sti
cmps
(bad)
nop
sbb
dec
pop
or
adc
and
xchg
and
(bad)
pop
pop
jmp
std
icebp
test
push
sbb
aaa
(bad)
xchg
das
mov
scas
xchg
hlt
call
test
paddw
push
out
lock
pop
xchg
out
fs
dec
dec
addr16
mov
jno
cmp
int3
out
sbb
xor
sar
out
dec
test
out
lods
dec
jmp
and
push
push
(bad)
movs
inc
and
sbb
(bad)
repnz
dec
and
sbb
aam
sbb
add
or
push
mov
dec
in
arpl
gs
sub
adc
sbb
mov
cmp
mov
push
inc
ret
push
xchg
push
rcl
sbb
sub
std
lods
or
adc
xor
outs
movs
cmp
jns
and
sbb
jne
mov
loopne
push
mov
adc
xchg
or
iret
cmp
dec
sahf
mov
jg
mov
pop
test
lea
xchg
lahf
movs
jbe
into
call
cmp
inc
iret
pop
loop
call
test
mov
jne
fcomp
xor
(bad)
call
sbb
cmp
mov
hlt
div
aas
jg
add
jmp
sub
gs
arpl
sbb
je
pop
(bad)
xchg
push
push
ret
dec
iret
pop
in
pushf
sbb
inc
arpl
and
mov
pop
imul
add
iret
lock
sbb
inc
add
mov
push
call
inc
and
or
icebp
fst
inc
cmp
dec
xor
sub
adc
xchg
movs
fs
dec
in
test
push
inc
push
sub
push
lds
pop
shr
dec
fadd
nop
inc
ds
cmp
fnstsw
arpl
aas
repnz
lock
dec
loope
and
clc
and
or
dec
test
pop
push
sbb
ja
dec
dec
sub
push
arpl
push
ucomiss
repnz
(bad)
mov
lea
push
sub
and
das
add
adc
inc
wbinvd
pushf
jmp
rcl
mov
sbb
outs
rcl
test
inc
push
jbe
and
mov
call
nop
das
out
stos
cdq
dec
dec
push
cdq
imul
inc
stc
xor
call
cld
or
out
not
cdq
pop
sub
sub
hlt
push
push
gs
mov
neg
int
push
xor
scas
cmc
jns
inc
call
ret
and
sbb
xor
adc
pop
push
stc
jle
adc
jg
mov
inc
jne
mov
xchg
xchg
inc
or
xchg
pop
push
aas
push
jmp
mov
push
pusha
sbb
inc
pop
or
aaa
enter
push
jge
cmps
and
mov
mov
sbb
cli
xchg
push
cmps
div
push
pop
pop
add
mov
nop
xchg
inc
(bad)
push
std
idiv
sbb
lods
sub
cmps
adc
inc
movs
push
jl
add
nop
into
and
mov
pop
cmps
inc
push
xchg
adc
pop
outs
outs
jl
add
pop
xchg
dec
in
jno
sub
pop
add
and
imul
out
outs
arpl
and
pop
repz
fwait
nop
xchg
adc
adc
popa
fistp
addr16
movs
jb
outs
pop
pop
outs
pop
and
xor
jb
pop
cs
dec
push
dec
in
sbb
adc
inc
dec
dec
cmovs
inc
jmp
gs
mov
into
retf
gs
dec
push
pop
inc
xor
rcl
pusha
sbb
dec
enter
xor
jb
repnz
push
cs
sbb
and
sub
or
dec
fistp
sub
outs
sbb
lock
push
in
call
mov
push
add
mov
fild
gs
retf
sbb
dec
cs
xchg
retf
or
(bad)
or
cmp
push
dec
pop
rcl
retf
in
jb
mov
cs
adc
inc
sub
(bad)
scas
mov
dec
imul
mov
outs
jb
jb
mov
sub
xchg
test
inc
cs
inc
arpl
pop
xchg
in
mov
out
xchg
retf
in
jg
cmps
mov
xchg
jns
cmc
aaa
cmc
jb
or
test
stc
test
retf
cmp
cdq
fdivr
retf
and
pop
push
cs
and
mov
inc
out
in
retf
jns
adc
in
test
test
icebp
lds
adc
fs
push
mov
xchg
xchg
retf
lods
inc
inc
lods
fisttp
mov
(bad)
in
jb
test
xchg
retf
add
retf
shl
pop
push
cli
cmp
fdiv
adc
enter
pop
outs
(bad)
fnstenv
jo
repnz
retf
in
jb
ror
adc
xchg
sar
jge
sbb
fnstcw
xchg
dec
in
mov
push
ins
loop
hlt
sub
scas
movs
xor
in
mov
pop
dec
xor
adc
neg
pop
push
repnz
xor
dec
pop
ret
sbb
mov
adc
lock
and
xchg
pop
test
in
cmp
dec
inc
pop
push
and
adc
or
fdiv
sbb
in
jle
(bad)
cmp
mov
cmp
jnp
and
fnstsw
enter
fnstcw
sub
cmp
xchg
fsub
sbb
enter
fdivr
in
xchg
sub
shl
popf
popa
push
test
jg
jle
xchg
lock
loopne
gs
icebp
aaa
repnz
aas
(bad)
push
inc
aaa
mov
xor
jno
outs
xchg
fucomi
adc
outs
xacquire
ret
dec
push
and
bnd
xor
jle
and
jns
(bad)
adc
std
bnd
xchg
cmp
add
add
push
ret
inc
push
cdq
mov
in
aad
inc
xchg
loope
mov
mov
fchs
pop
xor
call
pop
movq
cmp
mov
mov
mov
outs
arpl
mov
fs
push
xor
inc
push
in
inc
imul
rcr
jno
cs
push
test
lahf
test
xor
dec
sti
xor
data16
push
xchg
mov
dec
add
out
fucomp
jbe
inc
push
add
adc
lods
fst
stc
inc
ins
nop
and
dec
or
jle
dec
scas
in
jne
sbb
sbb
jo
movs
xor
std
inc
arpl
add
ins
pop
push
popa
push
pop
lahf
or
jp
mov
push
push
push
add
xchg
and
adc
add
pop
fwait
(bad)
mov
aaa
cmc
sub
call
es
test
shl
mov
inc
shl
popf
pop
cwde
mov
je
outs
sbb
jbe
jbe
add
sbb
nop
je
fldcw
das
push
or
mov
jge
and
push
push
push
test
sahf
out
ficomp
inc
push
xor
jns
out
loope
fnstcw
sahf
ja
out
test
dec
outs
push
xor
jns
push
jns
out
jle
stc
out
iret
repz
(bad)
pop
dec
or
dec
pop
cmp
repz
jl
(bad)
jns
cmps
stc
add
xor
out
sahf
out
test
jns
out
cmc
(bad)
xor
repz
push
ds
rep
test
add
jns
out
dec
pop
imul
idiv
pop
dec
mov
sahf
out
sahf
push
fnstsw
adc
push
inc
cmp
repz
pop
addr16
mov
into
dec
push
dec
pop
iret
repz
arpl
iret
repz
mov
ds
repz
mov
jns
out
inc
dec
push
sahf
jl
jge
lods
lds
out
in
out
mov
int
mov
and
repz
xor
jl
iret
repz
shl
test
repz
out
mov
cmp
repz
cmp
cmp
repz
cmp
jl
stc
pop
test
push
push
xor
sbb
pmullw
jg
fld
aas
jle
inc
out
xor
adc
std
adc
push
lods
push
test
or
cmc
out
add
push
int
shr
cmp
ins
ds
sbb
or
inc
out
jns
jnp
add
cdq
adc
std
fs
fidivr
jnp
stc
mov
push
out
div
addr16
mov
iret
push
pusha
sbb
neg
mov
data16
test
test
xor
xor
mov
mov
xor
jbe
push
push
push
out
ss
lock
idiv
xchg
fld
loope
addr16
push
push
xor
cs
stc
push
jle
ss
add
cmp
pop
push
dec
push
fist
aaa
xor
out
adc
jnp
cmp
sbb
stc
ss
push
jl
popf
out
jns
out
jle
push
inc
(bad)
scas
imul
adc
pop
adc
(bad)
jge
mov
test
lahf
scas
push
fidiv
xchg
lods
cs
cs
repnz
push
pop
xchg
push
imul
push
mov
idiv
mov
push
in
cmp
push
lds
into
addr16
test
pop
(bad)
arpl
or
addr16
adc
idiv
sbb
mov
push
cdq
xchg
pop
fidivr
jns
push
test
push
(bad)
sahf
repnz
sbb
jle
into
sbb
in
cmp
inc
scas
sub
dec
repz
pop
push
and
sub
push
xchg
pop
or
push
sahf
idiv
push
or
jmp
fdiv
dec
dec
push
sbb
push
loope
out
mov
push
cs
dec
shl
shl
(bad)
retf
push
push
xor
inc
arpl
out
daa
scas
xor
or
or
jb
sar
xor
pop
jmp
daa
iret
repz
lods
mov
out
sahf
cmps
stc
cmp
or
sub
inc
jns
out
pop
jne
std
sahf
out
sahf
out
jle
cdq
aam
sti
sahf
push
aaa
or
push
or
cmp
iret
pop
fs
lods
iret
jnp
jae
fiadd
div
ss
or
pop
push
cmp
inc
pop
arpl
in
jns
mov
test
inc
out
sbb
arpl
sbb
outs
inc
jbe
imul
arpl
ins
push
gs
outs
bound
jnp
jae
add
das
dec
jns
mov
je
imul
mov
cdq
or
pop
xor
imul
data16
or
dec
push
(bad)
fs
fstp
gs
push
ret
imul
test
push
imul
push
hlt
in
adc
imul
fimul
xor
sbb
push
mov
(bad)
sar
div
jecxz
jns
jbe
int
push
push
xor
test
jg
pop
imul
je
outs
inc
fisub
cmp
sub
jnp
xchg
mov
mov
jbe
ss
cmp
xchg
in
cli
push
hlt
adc
outs
inc
cmp
fisub
fcom
push
jb
jno
jae
mov
js
push
outs
inc
ficom
xchg
pop
mov
mov
lock
addr16
add
bound
jg
outs
imul
fs
or
int
pop
and
inc
lds
mov
imul
sbb
adc
inc
sbb
mov
xor
jo
out
push
push
sbb
icebp
aam
in
dec
ficomp
push
push
push
jg
pop
and
push
outs
xor
push
daa
(bad)
sub
adc
stos
das
dec
or
xor
lahf
test
add
pavgb
cs
bound
pop
int3
jno
push
pop
das
or
outs
(bad)
xchg
mov
push
xor
xor
xor
xor
xor
dec
or
push
dec
xor
xor
jne
jbe
ja
(bad)
(bad)
(bad)
jg
xor
xor
xor
xor
xor
xor
repnz
xor
pop
rol
push
sbb
cmp
aas
aaa
inc
aaa
dec
ficomp
ins
(bad)
(bad)
cmp
aaa
gs
mov
push
xor
loop
add
xor
je
(bad)
(bad)
(bad)
jmp
xor
xor
xor
cmp
xor
xor
xor
xor
push
xor
outs
xor
ret
sar
xor
xor
xor
push
mov
xor
xor
ss
daa
ss
(bad)
(bad)
dec
ss
ss
ss
ss
jb
mov
xchg
ss
lods
ss
div
adc
std
jmp
cmp
sar
and
add
push
movs
cmp
cmp
(bad)
(bad)
(bad)
inc
cmp
cmp
cmp
cmp
cmp
aas
jns
imul
retf
aas
(bad)
(bad)
(bad)
push
aas
es
ds
ds
test
mov
popf
ds
mov
sqrtps
or
xor
xor
xor
xor
outs
cmp
push
loope
(bad)
xor
xor
xor
xor
icebp
pop
punpckhbw
jne
jge
fidiv
aam
(bad)
(bad)
(bad)
in
test
mov
jne
jno
loope
mov
fidiv
xor
xor
cmp
(bad)
(bad)
call
inc
cmp
cmp
cmp
xor
fwait
xor
lea
inc
(bad)
push
aas
xor
xor
xor
xor
cmp
(bad)
inc
(bad)
cmp
jmp
push
ss
pop
cmp
jg
(bad)
(bad)
cmp
pop
cmp
call
cmp
cmp
cmp
shl
clc
cmp
jg
dec
std
cmp
pop
jae
lea
mov
pavgw
out
adc
or
ficomp
das
sub
ins
xor
pop
in
sahf
sub
jmp
(bad)
dec
pop
aaa
popa
aaa
fs
jns
imul
aaa
mov
mov
mov
aaa
jle
dec
(bad)
(bad)
(bad)
out
repnz
fdiv
sbb
sbb
dec
xor
ja
into
xor
xor
inc
xor
push
stos
add
push
cmp
cmp
cmp
data16
sti
jmp
add
mov
cmps
ds
ds
ds
(bad)
jmp
sbb
xor
(bad)
(bad)
push
xor
(bad)
xor
xor
xor
cmp
xchg
xor
cmp
inc
pop
(bad)
(bad)
(bad)
cmp
inc
cmp
jno
outs
cmp
cmp
cmp
into
lahf
add
push
inc
rcr
cmp
inc
xor
(bad)
(bad)
mov
xor
mov
xor
sysenter
and
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
inc
push
xor
xor
cmp
xchg
outs
cmps
cmp
cmp
cmp
cmp
cmp
sub
adc
push
aas
cli
aas
push
aas
ins
aas
arpl
test
inc
mov
aas
stos
aas
mov
mov
fidivr
scas
aas
pop
and
ins
inc
jp
lock
mov
out
jmp
fnsave
call
aaa
cmp
push
aaa
ins
aaa
imul
sbb
fcom
xchg
sbb
ins
jb
xor
pop
(bad)
inc
cmp
repz
cmp
dec
xor
push
xor
xor
xor
(bad)
call
xor
fbstp
in
fidiv
mov
cmp
cli
(bad)
(bad)
call
cmp
sbb
dec
cmp
call
cmp
(bad)
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
aas
sbb
push
aas
lods
push
dec
call
scas
add
inc
ds
outs
ds
cmps
sub
cmps
pop
push
test
add
xor
int3
xor
arpl
ja
pop
inc
mov
aaa
inc
rcr
test
push
cmp
pop
cld
call
xchg
pop
xor
nop
xor
or
or
mov
xor
xor
xor
(bad)
cmp
jns
pushf
cmp
xor
xor
ss
cli
ss
cmp
(bad)
cmp
jno
loope
test
cmp
cmp
cmp
pop
std
sbb
cmp
cmp
std
push
std
cwde
cmp
sub
aas
dec
aas
aas
clc
or
sar
aam
push
ds
ds
cmp
call
mov
fucom
sar
scas
stos
sbb
and
xor
pop
xor
jns
addr16
aas
repnz
xor
xor
aaa
pop
aaa
dec
aaa
ret
xor
cli
jmp
outs
cs
cmp
jl
jge
lds
(bad)
jg
mov
xor
jl
hlt
xor
outs
das
clc
dec
out
xor
cmp
ins
cmp
cmp
out
lock
outs
das
mov
imul
sub
dec
lock
xor
mov
mov
cmp
cmp
jle
cmp
ret
aas
les
loop
mov
ds
mov
mov
psraw
xor
jmp
xor
out
xor
data16
add
ds
sar
xor
xchg
xor
xor
cmp
xor
push
shl
daa
xor
xor
xor
xor
xor
xor
cmp
aam
je
adc
ja
mov
mov
lods
mov
rdpmc
dec
xor
or
mov
ss
cmp
(bad)
inc
cmp
inc
cmp
cmp
cmp
cmp
cli
clc
cmp
cmp
loop
sbb
cmp
jne
outs
adc
aas
or
(bad)
js
mov
push
ds
ds
stc
ds
mov
xor
retf
xor
aaa
inc
or
mov
aaa
and
lods
outs
cmp
scas
mov
cmp
cmp
repnz
sbb
cmp
xor
xchg
xor
xchg
or
xor
ja
xchg
ds
inc
(bad)
(bad)
cmp
cmp
cmp
in
mov
cmp
jmp
retf
aas
dec
aas
mov
ret
(bad)
xchg
cld
aas
inc
cmp
repnz
ja
inc
adc
(bad)
clc
aaa
out
xor
push
(bad)
call
cmp
cmps
xor
mov
and
xor
xor
xor
(bad)
dec
cmp
xor
xor
imul
pop
pop
(bad)
add
jnp
(bad)
cmp
pop
cmp
cmp
cmp
aas
xchg
aas
cmp
aas
add
(bad)
add
jg
out
scas
repnz
je
mov
xor
aaa
in
mov
pop
inc
xor
xor
mov
fidivr
jg
adc
loopne
sbb
xor
cs
xor
ja
ror
shl
dec
xor
pop
inc
cmps
cmp
xor
ds
sbb
pop
xor
mov
outs
pop
(bad)
(bad)
(bad)
call
sahf
cmp
inc
cmp
cmp
aas
sbb
cmc
aas
data16
les
sar
pop
loop
push
xor
cmps
and
xor
xchg
mov
shr
mov
(bad)
aaa
mov
adc
add
xor
popa
cmp
jmp
ins
(bad)
(bad)
mov
push
cmp
cmps
cdq
cmp
cmp
xor
push
(bad)
aas
cmps
aas
nop
aas
jmp
cdq
ds
xor
add
mov
jp
(bad)
pop
push
aaa
bound
xchg
xor
movs
xor
cmp
mov
mov
dec
(bad)
(bad)
cmp
cmp
cmp
xor
push
mov
aad
jbe
xor
(bad)
sub
xor
cmp
cmp
cmp
cmp
(bad)
frstor
hlt
xor
mov
xor
shl
inc
inc
(bad)
daa
cmp
dec
cmp
cmp
cmp
cmp
jmp
outs
ret
dec
std
cmp
cmp
cmp
xchg
nop
icebp
push
jbe
jnp
lahf
aas
adc
bound
push
sub
icebp
push
cmc
dec
mov
and
push
xor
add
mov
and
pop
mov
add
outs
xor
mov
mov
xor
in
xor
stos
jp
xor
push
xor
mov
xor
xor
xor
cmp
cmp
(bad)
(bad)
push
cmp
dec
cmp
je
jo
fnstcw
mov
in
cmp
xor
test
or
lock
xor
or
sub
das
ss
pop
(bad)
mov
ss
cmp
out
call
scas
rcr
xchg
cmp
cmp
jp
cmp
cmp
jbe
or
(bad)
hlt
(bad)
cmp
or
dec
in
aad
sar
mov
add
xchg
pop
icebp
push
pop
adc
dec
jl
shl
xor
xor
xor
fimul
and
dec
aaa
jp
loope
sar
mov
aaa
scas
repnz
push
xor
jmp
dec
xor
mov
mov
es
inc
adc
cmp
ret
outs
dec
imul
xor
adc
outs
out
xor
xor
xor
xor
xor
mov
out
mov
cmp
jp
sar
cmp
xor
popf
clc
jmp
xchg
ss
mov
(bad)
cwde
xor
(bad)
push
es
ss
ss
xchg
lea
nop
movs
ss
ss
cmp
push
cmp
stos
dec
fmul
mov
push
aaa
(bad)
mov
mov
dec
adc
repnz
cmp
jbe
call
cmp
data16
sub
or
aaa
mov
push
cmp
jmp
test
cmp
lods
out
lds
mov
pop
fbld
out
cmp
cmp
cmp
stos
cmps
cmp
cmp
aas
or
hlt
inc
imul
xchg
daa
sbb
mov
jno
xor
test
(bad)
push
into
out
mov
xor
xor
xor
xor
ja
ret
add
aaa
or
cs
sbb
sbb
or
push
inc
aaa
xor
inc
aaa
push
aaa
dec
loop
mov
pop
(bad)
pop
das
out
ret
fs
arpl
jno
addr16
test
aaa
test
jecxz
aaa
std
out
cmps
bnd
cs
fdiv
test
lock
cld
pop
or
aaa
(bad)
aaa
out
cmps
cdq
aaa
mov
sub
xor
fdivp
xor
loop
push
retf
pop
out
xor
xor
scas
sbb
or
loope
movs
xor
mov
mov
pop
xor
sub
push
loope
xor
imul
jl
push
clc
call
std
xor
xor
jmp
hlt
adc
aad
cmp
jle
fnsave
lds
mov
stos
cs
xor
xor
xor
pop
xor
xor
mov
or
(bad)
sbb
add
cmp
cmp
sub
loopne
repnz
xor
dec
cmp
inc
cmp
pop
and
cmp
fs
xor
xor
and
xor
dec
xor
push
clc
cs
fs
addr16
sbb
xor
cmps
sbb
scas
ret
fnstenv
test
popf
clc
dec
xor
lds
in
xor
stc
test
or
xor
div
test
mov
xor
or
xor
xor
out
sbb
xor
add
xor
xor
call
dec
xor
xor
xor
cmps
pop
dec
push
cmp
imul
pop
test
jl
std
retf
shl
(bad)
fnstenv
xor
xor
xor
xor
xor
xor
mov
xor
xor
call
inc
(bad)
out
xor
xor
push
cmc
xor
xor
xor
xor
cld
(bad)
(bad)
push
xor
xor
cmp
cmp
cmp
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
ins
dec
or
push
stos
push
cmp
cmp
cmp
pop
cmp
cmp
jno
(bad)
mov
test
loope
jl
xchg
cmp
cmp
cmp
pop
loop
out
cmp
cmp
cmp
cmp
cmp
push
test
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
inc
xor
xor
xor
xor
sbb
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
inc
xor
dec
xor
stc
inc
adc
das
jp
bound
jns
adc
or
loope
push
jnp
repz
xor
cmps
inc
aas
cmps
mov
out
outs
lahf
fs
push
test
push
jl
pop
add
inc
imul
sbb
dec
add
and
push
sbb
dec
and
push
inc
inc
add
pop
cmp
mov
xor
cmp
in
je
jb
arpl
je
jae
jno
add
in
imul
outs
out
bound
ins
xor
sbb
or
pop
push
jp
inc
cmp
jae
push
int3
imul
mov
push
ins
xchg
(bad)
mov
gs
lea
arpl
jae
(bad)
push
jne
push
jg
push
and
adc
jne
or
add
(bad)
cld
(bad)
call
jmp
pushf
xchg
jmp
xchg
jmp
ja
ja
loope
inc
pushf
loope
ja
mov
mov
ja
ja
jmp
imul
push
push
pushf
ss
inc
(bad)
jmp
jle
mov
ins
mov
fwait
push
and
ret
jo
cmp
xchg
js
jae
pop
lahf
cmp
xchg
stos
lods
jb
in
jle
xchg
loope
mov
mov
cdq
xor
mov
xor
adc
pushf
cs
pushf
add
cdq
ror
ja
ficomp
fcomp
pop
mov
mov
pop
pushf
outs
pushf
mov
cmp
call
rcr
xchg
mov
pushf
push
or
jmp
loopne
in
xchg
shr
pop
test
or
xchg
ja
pushf
pushf
cdq
popf
int
mov
stos
mov
or
sbb
ds
ins
mov
data16
adc
push
pop
loope
int3
xor
pop
push
pop
bound
pop
stos
jo
scas
ins
or
ja
inc
ror
and
rcr
push
mov
fstp
sbb
hlt
cmp
sbb
fiadd
jmp
push
jbe
test
clc
jbe
mov
mov
out
ja
movs
rcr
cmp
jmp
add
(bad)
mov
pop
pushf
or
into
xor
sub
imul
in
push
fnsave
mov
pop
call
and
mov
or
cwde
data16
xchg
add
or
cdq
fnsave
adc
fwait
popa
ror
jbe
pop
test
in
int3
call
inc
pop
into
into
movs
lock
nop
xchg
fcom
or
enter
dec
jo
hlt
jp
cmps
xchg
mov
ret
xchg
(bad)
mov
push
add
pusha
and
xchg
pop
cld
loopne
pusha
mov
mov
fsub
ficom
and
ss
loope
sbb
ins
test
fadd
ror
cwde
daa
mov
push
push
idiv
mov
les
jo
stos
sahf
mov
add
mov
mov
enter
adc
mov
fimul
cmp
in
in
mov
stos
lods
sub
sub
inc
sbb
sbb
mov
inc
loope
dec
sbb
loopne
call
test
pop
mov
cmps
xor
out
js
je
mov
(bad)
pop
sub
push
je
mov
mov
xchg
jae
aad
mov
ret
test
add
sar
mov
mov
ret
cmps
push
sbb
cmp
mov
ins
or
out
ins
shl
sahf
call
mov
mov
in
push
ror
jecxz
cld
cmp
cmps
xchg
cdq
jge
repnz
add
fsub
out
clc
or
jbe
out
aad
pop
sbb
inc
cmp
cmc
mov
mov
scas
shl
sub
scas
test
ins
mov
in
cmp
ss
imul
fdiv
ds
inc
(bad)
mov
fldl2t
pop
jp
mov
pop
lods
ds
ss
push
sbb
or
outs
dec
jbe
jp
mov
cwde
ss
aam
cmp
xor
xor
into
pop
xchg
es
outs
mov
push
int3
sar
cmp
xor
and
out
mov
(bad)
xchg
test
jmp
mov
or
seto
outs
xchg
hlt
or
push
fwait
out
sbb
enter
loop
sub
jbe
dec
outs
leave
pop
outs
movlps
mov
int3
mov
jg
or
or
xchg
cmp
push
pop
mov
push
mov
clc
dec
push
inc
dec
push
pop
push
mov
sti
idiv
mov
(bad)
std
idiv
sti
stc
cli
div
clc
hlt
cmc
cmc
stc
std
stc
hlt
cld
sbb
or
std
idiv
(bad)
fidiv
clc
test
add
mov
imul
cli
push
adc
dec
jo
push
imul
std
nop
stc
clc
outs
sti
std
cld
or
cwd
(bad)
ficomp
or
sub
cmp
hlt
test
and
sub
ret
sub
cld
adc
pushw
sub
ss
(bad)
push
(bad)
call
sti
jle
mov
mov
jle
cld
cmp
rcr
movs
push
enter
cmp
in
add
cld
div
ror
pop
test
xor
int3
in
(bad)
ins
hlt
jmp
xor
idiv
clc
clc
pusha
imul
cmp
inc
rcr
mov
cmp
xor
ins
(bad)
fstp
movs
add
imul
popf
cwde
or
loop
neg
sbb
dec
push
not
inc
and
pop
cli
sbb
inc
pusha
xlat
outs
push
inc
pop
idiv
ss
data16
out
les
movs
push
out
jo
add
jbe
mov
adc
ins
xor
cwde
ret
pusha
xor
mov
mov
push
add
hlt
xchg
in
pusha
data16
call
mov
or
mov
lds
inc
call
js
adc
inc
data16
or
mov
lock
scas
cli
out
push
(bad)
cmp
cld
cmp
or
std
mov
je
push
add
in
push
fcomp
rcr
push
data16
mov
test
sbb
ja
xchg
cli
repnz
(bad)
loop
fdivr
push
jbe
mov
add
push
xor
cmp
ds
xlat
rcr
neg
jb
or
dec
loope
loopne
pop
loop
shr
outs
mov
pushf
add
je
xor
addr16
sbb
stc
nop
into
cmp
loopne
or
sbb
bound
cmp
cmp
adc
add
and
ja
je
test
ret
cdq
(bad)
dec
fdivr
aaa
mov
xor
test
push
out
cmp
xchg
ins
gs
ret
or
adc
fucom
cmp
idiv
mov
in
sbb
mov
int3
sbb
dec
ins
xor
dec
enter
rol
sahf
sti
test
cmp
or
hlt
in
pop
sbb
push
push
mov
and
retf
stc
cmp
int3
mov
ss
lds
mov
fadd
inc
inc
sahf
dec
std
call
fisubr
pushf
data16
mov
loope
je
push
rcl
jl
popa
mov
clc
inc
int
mov
xchg
loop
(bad)
xor
cld
rcr
into
dec
les
sar
xor
test
cmp
ficom
clc
push
in
cmc
push
scas
loopne
aad
jmp
inc
and
bound
es
fidiv
into
retf
mov
test
lea
cwde
mov
xchg
gs
cmps
test
mov
add
push
scas
push
js
and
xchg
test
repz
cli
fadd
inc
pop
ja
adc
sub
push
hlt
and
pushf
xchg
std
cmp
add
mov
jb
cmp
cmp
pushf
pushf
dec
out
icebp
fdivrp
mov
sti
inc
mov
cli
lods
scas
push
sub
clc
xor
mov
lds
or
ret
mov
jecxz
cmps
sbb
cs
sti
es
mov
cli
push
push
jl
(bad)
in
cmp
cs
pop
cdq
mov
rol
mov
dec
inc
mov
sub
inc
mov
jle
cmc
cmps
cli
inc
xchg
popf
push
out
push
idiv
inc
mov
sub
mov
sub
add
aad
pop
hlt
std
dec
lods
sub
mov
mov
ds
adc
shl
rcl
dec
addr16
xor
add
inc
inc
cli
scas
push
pusha
shr
push
popa
mov
clc
frstor
or
or
push
movs
pop
add
icebp
mov
pop
mov
mov
add
mov
sub
cmp
pop
gs
and
neg
fsub
mov
dec
pop
cld
add
pop
sub
cld
xchg
outs
icebp
mov
mov
cs
push
add
mov
jmp
add
fldcw
and
sbb
cmp
mov
xor
into
(bad)
jmp
push
dec
clc
add
xchg
pop
pop
jo
cmp
inc
lock
inc
or
in
fbstp
cdq
or
ret
nop
iret
cmc
test
dec
sbb
jnp
mov
sub
sbb
enter
imul
sbb
mov
cli
jo
xchg
pop
inc
sbb
call
xor
push
add
cmp
or
inc
sahf
int
sti
jl
push
dec
ins
jl
cld
int
cmps
stc
cld
rol
mov
sbb
(bad)
fnstcw
push
pushf
mov
ss
dec
repz
push
sbb
xor
xor
and
dec
repz
imul
mov
inc
add
int
pop
sti
ins
inc
inc
out
inc
push
inc
cmp
adc
inc
xchg
int
imul
in
fdivr
repz
movs
je
cs
push
stc
xor
out
push
mov
popf
pushf
cmp
jnp
cmps
or
inc
mov
hlt
int
repz
sub
ror
push
dec
lahf
out
ds
inc
cmp
add
push
call
xchg
push
pop
out
in
in
mov
jnp
ja
clc
push
outs
lahf
push
sub
fadd
fbstp
push
lock
sar
push
push
push
inc
popa
imul
mov
add
retf
jnp
shr
fs
or
pop
add
jmp
mov
xor
dec
sub
jmp
test
pop
jmp
fwait
and
jo
lock
xchg
lock
adc
add
out
fisub
add
pop
jg
fld
call
clc
and
pop
idiv
call
iret
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
pop
mov
xchg
outs
je
ins
and
and
popa
je
xor
xor
xchg
xor
pop
pusha
xchg
cmps
cmp
push
adc
aam
ins
sbb
ja
int
not
jle
jle
adc
pop
inc
pop
shl
sub
rcl
push
xor
ret
(bad)
push
push
or
dec
add
and
imul
iret
imul
xor
inc
iret
repz
dec
push
pop
fs
je
iret
repz
test
rep
lods
mov
(bad)
iret
repz
int3
aam
in
hlt
sahf
cmps
stc
cmp
add
or
sbb
sahf
out
and
xor
inc
jb
mov
(bad)
add
fs
gs
and
or
mov
mov
daa
and
js
xor
inc
adc
call
in
xchg
daa
mov
jbe
xchg
mov
and
rol
test
cmp
push
adc
adc
adc
lock
(bad)
mov
lock
cmps
stc
add
adc
xor
out
sahf
out
push
out
sahf
test
(bad)
fsubr
clc
mov
sti
xchg
add
adc
into
fs
test
popf
sbb
inc
xor
pop
jmp
pusha
adc
bound
mov
push
stos
int3
dec
push
cmp
jo
dec
fist
pusha
pop
push
and
scas
mov
pop
adc
retf
fbld
add
mov
cwde
out
or
rol
push
inc
pop
jnp
cmp
fdivr
lock
out
repz
and
and
jle
cmps
push
(bad)
xor
lock
pusha
out
out
stc
mov
or
push
add
mov
int3
pmulhuw
out
adc
adc
mov
repz
cmp
push
sahf
out
out
sbb
push
adc
or
repz
out
or
add
mov
adc
push
pop
push
add
push
mov
mov
pop
int3
push
add
cmp
push
or
add
iret
repz
into
dec
(bad)
push
add
add
jns
cmp
dec
outs
or
and
iret
repz
cmp
iret
repz
test
iret
repz
sahf
out
fnstsw
sbb
xor
out
out
dec
jmp
(bad)
(bad)
mov
add
jbe
(bad)
cmp
jnp
push
and
xor
push
punpckldq
imul
ret
mov
lods
xor
adc
pop
(bad)
in
sbb
out
or
mov
out
ins
xchg
push
movs
pop
push
pusha
push
add
dec
pop
push
clc
add
sahf
out
sahf
adc
xor
push
pusha
out
out
jns
jo
js
or
mov
rcr
repnz
pop
adc
and
lds
jbe
lods
add
jmp
dec
pop
mov
push
out
fsubr
xchg
jge
xchg
das
sti
setbe
or
(bad)
add
daa
daa
daa
daa
adc
adc
fisttp
add
or
xchg
push
or
adc
pop
add
mov
rcl
cmp
add
repz
clc
mov
or
and
repz
xor
inc
ds
push
inc
loope
dec
imul
int3
jp
leave
not
push
push
push
push
pop
pop
or
mov
lods
push
aam
lock
cmp
repz
sub
dec
pop
repz
repz
cwde
movs
iret
repz
mov
or
sub
pop
or
shl
and
adc
lods
cwde
pushf
adc
mov
sub
push
and
fiadd
out
add
(bad)
add
or
nop
pop
mov
mov
cld
in
imul
stc
adc
clc
out
sahf
out
idiv
test
sahf
cmc
pusha
hlt
je
test
out
repnz
icebp
lods
lock
sahf
out
out
aam
out
call
in
clc
in
or
jmp
cmp
sbb
xor
dec
xor
add
fdiv
add
ret
or
xchg
and
pop
sub
or
or
add
add
ja
sbb
lock
adc
(bad)
lods
add
cmps
add
push
bound
or
in
and
daa
or
fsub
pusha
cmp
cs
xor
pop
pop
retf
add
xchg
das
arpl
pop
adc
lahf
adc
add
fdiv
jb
mov
push
xchg
pop
add
outs
xchg
stc
mov
out
mov
jns
out
(bad)
inc
add
out
sahf
test
stos
adc
jns
add
lea
sub
or
push
das
add
fisttp
push
push
sbb
clc
sbb
push
pushf
imul
(bad)
data16
and
loopne
call
pop
inc
ret
add
es
scas
pop
dec
add
fdivr
xlat
mov
cmp
sub
jge
push
out
test
adc
push
int3
jbe
fistp
lods
jle
push
sub
lea
ja
loopne
adc
sbb
mov
imul
jbe
imul
push
mov
dec
xchg
inc
cs
cld
mov
sar
addr16
mov
mov
neg
mov
push
imul
mov
es
jnp
int3
xor
data16
sub
cmp
js
cmp
sbb
add
or
adc
enter
rcl
imul
jge
sbb
push
adc
sub
adc
inc
aam
jle
ror
lds
mov
pop
push
push
pop
iret
sar
(bad)
in
push
pushf
out
or
jo
or
(bad)
inc
faddp
sbb
push
push
xchg
cld
push
hlt
push
mov
mov
outs
mov
data16
jo
loop
inc
inc
xchg
fist
jl
or
or
scas
or
into
mul
daa
mov
add
jae
loopne
cmps
or
test
hlt
mov
mov
ss
mov
cmp
jnp
mov
pop
hlt
dec
es
sub
push
adc
mov
ds
sbb
neg
pop
(bad)
and
in
xchg
lock
not
fs
pop
push
xor
ins
int3
add
or
loopne
and
mov
jle
xchg
fidiv
push
int3
dec
mov
and
mov
xlat
sahf
rol
sbb
pop
hlt
(bad)
nop
divps
and
cmp
pop
xor
lock
out
pop
pop
es
sub
out
or
pusha
test
cmp
dec
xchg
mov
fs
iret
push
push
int3
iret
out
xchg
imul
repz
ss
out
imul
aam
or
adc
icebp
dec
jb
sahf
add
sar
cld
ds
mov
dec
or
data16
push
sub
lock
xor
push
add
mov
inc
out
cmp
in
or
mov
nop
jnp
les
xchg
xor
inc
(bad)
pop
push
pop
ror
adc
ins
adc
add
add
rol
push
pop
or
push
push
push
dec
add
sub
push
push
aad
xchg
adc
add
nop
inc
stos
and
add
enter
add
push
inc
jnp
push
xor
pop
fmulp
jnp
inc
sbb
inc
and
dec
pop
push
popf
outs
fcomip
and
pop
dec
aaa
push
pop
dec
add
cmp
add
adc
dec
xchg
repnz
push
inc
mov
in
mov
push
xchg
dec
xor
or
fiadd
dec
push
push
cs
and
inc
push
cs
and
sahf
neg
xor
dec
cmp
test
jnp
imul
dec
cs
or
(bad)
shl
inc
dec
and
add
or
pop
js
or
cmps
pusha
mov
pop
(bad)
stc
rcl
inc
add
enter
rol
sbb
sub
dec
xor
mov
add
fist
inc
push
inc
mov
jg
clc
aas
push
pop
jmp
ins
in
jns
(bad)
cld
add
pop
or
push
aas
(bad)
jg
repnz
add
fld
prefetch
push
mov
pop
jo
pusha
cmps
fstp
adc
add
cwde
fmul
clc
jg
addr16
push
out
imul
neg
out
fimul
dec
ret
out
ja
add
loopne
dec
mov
ret
lock
sbb
pop
push
(bad)
aas
mov
mov
pop
xchg
addr16
lock
out
ss
xor
pop
std
cmp
push
fld
ins
jl
inc
add
jbe
jg
cmp
jbe
inc
add
jo
enter
iret
rol
inc
ret
repz
lock
push
or
cmp
fist
push
add
nop
es
repz
add
nop
jg
aas
into
push
add
fdivp
mov
adc
daa
not
out
loopne
retf
comiss
shl
mov
add
stc
cmp
sub
jg
push
mov
aas
rcr
dec
add
(bad)
mov
pop
outs
clc
(bad)
push
sub
add
pusha
addr16
jmp
loopne
pop
out
data16
lods
sub
add
jbe
mov
ds
jg
xchg
or
add
mov
pushf
fcom
pop
in
les
test
fnstsw
(bad)
aas
nop
ds
mov
add
aad
add
cld
pop
cmp
or
aaa
dec
cmp
adc
jmp
iret
std
or
fldcw
jle
or
push
sub
inc
add
imul
inc
add
pusha
xor
push
mov
push
push
sbb
sub
or
shl
cmp
fldcw
push
sbb
push
sbb
or
test
xchg
push
shl
cmp
xchg
adc
add
add
push
fiadd
(bad)
into
sahf
adc
add
and
add
into
inc
add
in
inc
push
jns
mov
cmp
sub
jle
sub
sbb
cmp
(bad)
xor
mov
and
xor
fisub
adc
and
jae
fidiv
inc
cmp
clc
dec
push
dec
push
jae
int
mov
push
push
daa
inc
outs
fucom
cmp
daa
xchg
mov
ss
(bad)
sbb
cdq
sar
mov
jge
stc
push
(bad)
(bad)
ja
push
daa
ret
mov
sbb
or
add
mov
lahf
adc
cmp
xor
cmp
inc
and
cmp
xor
and
fiadd
mov
daa
in
jns
dec
sub
repz
xor
mov
repnz
dec
sub
clc
xor
in
cmp
pop
push
es
mov
xchg
push
int3
push
and
jbe
mov
and
mov
cmp
pop
push
(bad)
cmp
and
fs
fs
xlat
push
pop
(bad)
mov
retf
push
and
xor
loope
mov
or
adc
xsavec
push
lds
inc
push
addr16
mov
sub
add
fdivr
add
test
inc
inc
or
dec
dec
dec
push
pop
xor
outs
lods
ins
mov
movzx
dec
in
jns
dec
pop
daa
mov
out
in
jns
enter
mov
lahf
sbb
(bad)
(bad)
(bad)
clc
add
daa
add
mov
repz
or
xor
es
or
(bad)
xor
inc
arpl
mov
ds
shl
mov
cmp
out
clc
add
daa
lahf
cmp
pop
and
inc
mov
out
fs
fisttp
fwait
daa
push
in
cmp
retf
retf
aas
daa
dec
retf
jmp
inc
inc
es
daa
cmp
mov
fwait
jle
xor
xchg
push
sub
jecxz
(bad)
shl
test
adc
xor
push
aas
xor
js
(bad)
in
inc
xchg
sbb
or
stos
movs
jb
sahf
or
or
daa
xor
xor
cmps
arpl
sar
mov
rcr
mov
push
inc
sub
push
jbe
leave
aas
push
xor
push
sub
add
outs
iret
dec
in
data16
inc
push
shl
mov
mov
daa
cmp
and
inc
aas
ret
sti
call
stos
sub
pop
lock
jo
fsub
movs
pop
enter
xor
dec
xchg
daa
mov
sub
mov
lahf
jmp
pop
das
pop
xchg
jne
inc
jo
jmp
mov
fdivr
or
sub
and
push
cmp
sbb
xchg
(bad)
xchg
sbb
loop
fwait
add
sub
adc
daa
(bad)
xchg
fisttp
in
jl
and
clc
mov
sbb
xchg
fcom
mov
dec
xor
dec
xor
dec
out
jae
gs
dec
daa
dec
daa
clc
dec
jnp
cmp
or
dec
sar
dec
jl
jmp
inc
adc
ror
add
daa
(bad)
cmp
pop
aaa
mov
ret
shl
lock
cdq
cdq
push
mov
test
cdq
and
aad
mul
adc
arpl
aaa
inc
push
sbb
cmp
mov
leave
xor
(bad)
jb
mov
not
(bad)
sbb
outs
inc
frstor
push
daa
cmp
dec
mov
push
inc
sbb
stos
pop
dec
adc
icebp
loop
inc
sub
inc
jae
lahf
push
ret
loopne
es
mov
mov
sub
mov
pushf
aaa
es
loope
sahf
fstp
repz
daa
aaa
xor
loope
aaa
daa
and
sub
jbe
stos
inc
push
xchg
sub
push
mov
ins
mov
cmp
push
imul
sbb
jnp
jnp
fnsave
push
ds
pop
jbe
xchg
out
dec
xchg
add
movntq
aas
test
push
retf
sub
sahf
cmc
adc
mov
inc
adc
daa
lahf
(bad)
or
(bad)
jmp
setns
paddb
cs
cld
stc
lock
add
pop
mov
lock
mov
xchg
dec
push
ins
test
or
test
movs
sub
add
inc
sub
xor
or
dec
mov
fiadd
jae
xchg
push
cdq
adc
in
mov
inc
push
add
pop
add
xor
push
dec
or
jne
cmp
adc
mov
(bad)
sub
or
push
adc
ret
sub
dec
outs
sbb
sar
sbb
cmp
inc
sbb
push
push
jae
cmp
shr
adc
push
dec
adc
inc
mov
dec
ins
push
or
cmps
sub
push
push
ss
imul
jbe
push
mov
sub
push
gs
mov
inc
push
mov
push
fisub
imul
stos
popa
ja
jo
cmp
popf
mov
pop
adc
dec
mov
dec
or
or
and
cmp
xor
push
pushf
jbe
or
data16
rol
add
inc
adc
mov
fwait
mov
ja
out
ds
push
jbe
mov
push
adc
mov
adc
and
addr16
add
xchg
ins
adc
mov
add
jbe
add
mov
xchg
xor
pop
pop
cmp
jle
ins
inc
add
jne
pop
(bad)
js
out
push
add
mov
mov
je
scas
mov
and
adc
sar
jnp
imul
push
cmp
shl
pushf
push
imul
xchg
scas
or
cmps
pop
mov
jbe
out
push
retf
bnd
outs
je
ins
hlt
jno
push
ins
push
jae
pop
(bad)
sbb
outs
and
stc
pop
jb
ins
push
jbe
ins
iret
ja
addr16
adc
out
and
popf
xor
je
push
sub
outs
ret
jp
fidivr
adc
pop
push
jae
cmp
xchg
ret
cmp
and
mov
loope
mov
add
loope
idiv
sub
jns
gs
repz
jbe
jb
adc
out
mov
jl
pop
outs
jmp
jecxz
add
bound
push
xor
mov
dec
sti
mov
aas
outs
ss
or
adc
jae
fsubr
cwde
pop
jb
and
sbb
sub
add
ins
fwait
lahf
fidivr
ins
ja
(bad)
je
mov
cs
xchg
cmp
rol
jnp
jns
push
xchg
add
aad
push
es
pop
shr
cmp
js
sbb
stos
cmp
ss
xchg
add
addr16
into
add
inc
mov
inc
add
push
mov
mov
not
fadd
ja
dec
xchg
add
aad
cli
sbb
(bad)
and
sar
jle
rol
sub
sub
icebp
arpl
stos
(bad)
dec
je
out
jmp
jo
call
ss
adc
jne
jo
dec
mov
cs
sub
add
fiadd
cs
jecxz
pop
sbb
mov
jae
mov
push
rol
out
mov
push
imul
cmp
xchg
pop
inc
stos
arpl
ss
addr16
push
inc
out
fwait
sbb
js
xchg
inc
outs
cmp
jle
lds
xchg
or
inc
daa
and
or
sub
sti
pop
pusha
(bad)
ficom
add
(bad)
sbb
sar
add
pop
call
pop
popa
loope
push
lods
dec
stos
into
ja
je
ret
ins
lahf
outs
daa
and
or
mov
mov
jnp
outs
mov
pop
fwait
add
iret
xchg
adc
imul
addr16
repz
mov
addr16
ror
aaa
push
not
jae
imul
jbe
imul
dec
lahf
fisub
daa
push
dec
pop
or
mov
pop
mov
out
jnp
adc
popa
pop
xor
in
sub
cmps
ja
lds
aam
sti
stos
pop
mov
and
arpl
cwde
sbb
fs
add
outs
sbb
mov
ins
rol
sub
push
cmp
xchg
fsub
mov
(bad)
les
fcomip
ret
fwait
jbe
imul
and
adc
dec
mov
add
loope
stos
dec
fimul
mov
ja
out
lock
push
jg
jae
jo
sub
mov
in
xor
daa
dec
out
and
ins
xor
add
push
fs
movq
fist
mov
mov
adc
mov
aas
pop
ja
pop
mov
inc
cli
sub
mov
aaa
retf
cmp
ret
bound
pop
cli
scas
mov
adc
jbe
hlt
lods
xor
inc
push
pop
jo
inc
add
fistp
fcomp
stos
inc
mov
jb
mov
addr16
pop
inc
daa
das
xlat
fisub
(bad)
in
cmp
xlat
cs
dec
dec
pop
out
sbb
jbe
sbb
mov
ins
ret
aad
test
mov
adc
lahf
pop
jne
dec
ret
push
pop
adc
push
adc
jns
loope
shl
push
icebp
je
lock
das
shr
les
push
sbb
je
imul
adc
mov
push
dec
pop
add
popa
jmp
pop
outs
(bad)
mov
fisubr
mov
xchg
and
scas
popa
mov
arpl
mov
aaa
in
inc
fdiv
add
sub
mov
dec
call
ss
xor
pop
rcr
test
and
jp
adc
mov
mov
mov
mov
out
rcr
jno
int3
pop
ret
jb
or
sbb
mov
cmp
or
ja
stos
xor
xchg
add
or
aas
ret
adc
test
add
push
jno
mov
sti
pop
retf
mov
(bad)
push
aaa
jmp
cmp
inc
pop
jmp
push
ret
pcmpeqw
loope
outs
push
sub
xor
ror
out
cmps
jmp
push
loopne
sub
and
imul
das
or
inc
sbb
loop
dec
aaa
outs
addr16
adc
addr16
add
ret
add
mov
push
jo
int3
push
lods
aad
or
push
cmp
xchg
aaa
mov
repz
mov
jae
fs
xor
ja
push
pop
cwde
inc
ja
aam
jne
and
(bad)
loop
imul
push
shl
movs
push
mov
inc
lea
pop
cmp
sbb
jle
xchg
outs
xor
push
rol
test
mov
jne
jae
sbb
mov
pop
push
jae
or
bound
ret
sahf
sahf
(bad)
inc
adc
rol
add
jg
sbb
pop
dec
addr16
push
ins
ret
mul
jo
aas
jae
sub
mov
cmp
push
lods
cs
scas
mov
movs
mov
jg
sahf
je
cmps
or
dec
pop
test
push
jb
imul
rcr
xchg
cmp
jecxz
sbb
rol
mov
mov
push
call
push
ins
add
arpl
jmp
dec
into
jb
inc
lock
push
and
je
mov
imul
ds
jnp
adc
into
clc
aas
inc
xcrypt-ecb
cmps
or
fwait
or
out
jb
cmc
(bad)
in
jo
ficomp
or
jbe
imul
and
(bad)
(bad)
outs
emms
add
mov
adc
sub
dec
push
lods
sbb
push
push
stos
push
ins
mov
loop
fsub
call
mov
fild
mov
cmps
shl
daa
loop
sub
fimul
push
pop
xor
inc
aam
mov
arpl
cmps
jbe
mov
jo
inc
sub
movs
sub
mov
add
(bad)
(bad)
sbb
dec
mov
jecxz
sysret
add
inc
repz
retf
add
push
shr
mov
dec
xchg
fist
or
mov
sbb
pop
ins
sub
pop
div
test
stos
jbe
lea
jg
inc
stos
fcom
scas
and
icebp
xor
xor
dec
ret
push
fadd
(bad)
push
je
popaw
push
ror
jg
pop
in
ret
jmp
cmp
push
xor
imul
fcom
inc
push
dec
add
bound
iret
pop
adc
add
stos
pop
pop
mov
adc
pop
je
sub
sbb
sbb
das
or
imul
mov
shl
and
jg
add
out
mov
imul
jae
cmps
push
jo
jge
fwait
das
mov
inc
push
sbb
xlat
(bad)
jae
sbb
dec
push
or
inc
pop
pop
jno
(bad)
mov
shr
push
outs
outs
or
sub
push
arpl
mov
add
add
xlat
ficom
add
or
or
mov
push
or
(bad)
mov
stos
xlat
nop
and
jl
loopne
xor
jo
test
xchg
push
pop
adc
cmp
test
mov
imul
xchg
mov
pusha
inc
jnp
mov
ins
mov
pop
stos
jnp
das
jne
jo
or
and
lahf
xchg
js
mov
test
jb
adc
mov
and
sub
ret
sub
pop
test
inc
das
ds
ds
jae
repz
mov
push
add
mov
xchg
adc
jne
sahf
adc
fisubr
jns
sbb
adc
popa
repnz
cwde
fwait
fs
imul
sbb
lock
outs
movzx
dec
inc
pop
imul
arpl
shl
outs
lahf
jb
jge
jns
arpl
adc
push
fsub
jg
xlat
jp
lds
pop
outs
ds
stos
arpl
inc
mov
pop
pop
stos
sub
and
(bad)
daa
or
(bad)
mov
jg
mov
pop
inc
in
jg
ret
mov
pop
fwait
cmp
dec
dec
(bad)
add
push
push
bound
adc
(bad)
mov
nop
test
sbb
adc
sbb
push
or
sbb
or
and
push
push
add
outs
adc
jbe
pop
outs
jb
and
dec
sbb
xor
add
add
jge
mov
xor
movs
sub
or
inc
cmp
imul
popa
jo
add
adc
pop
adc
push
add
mov
jbe
loope
jnp
gs
fbstp
sub
adc
or
push
pop
addr16
fs
js
sbb
jb
(bad)
mov
mov
sub
out
cmp
push
push
dec
fistp
inc
add
jae
outs
jl
push
inc
pusha
add
ficom
addr16
(bad)
fwait
mov
inc
outs
outs
ins
arpl
inc
bound
test
dec
mov
cmp
jne
int
nop
lock
jg
mov
and
js
sbb
inc
ins
addr16
xor
dec
shr
adc
enter
mov
mov
add
mov
pop
loopne
push
dec
cmp
mov
mov
dec
jae
jbe
sbb
imul
push
loopne
ins
bound
push
js
fs
jo
sbb
sar
cmps
push
jbe
gs
mov
pushw
imul
arpl
xchg
inc
imul
push
lahf
push
sbb
jle
sub
gs
outs
lahf
push
test
movs
movs
add
push
ja
(bad)
clc
dec
cld
fadd
lock
add
add
and
popa
adc
or
cmp
inc
loopne
sbb
inc
mov
ss
arpl
cmp
addr16
mov
retf
add
mov
sbb
sub
jg
sbb
jge
mov
pop
or
or
push
lods
loope
pop
jg
or
add
jmp
and
and
inc
xchg
xor
add
push
jb
add
jb
push
add
jno
(bad)
inc
adc
in
jg
out
pusha
or
add
gs
and
jb
add
mul
jns
adc
int3
jnp
add
iret
xchg
xchg
pop
jg
stos
sub
push
add
push
adc
mov
cmp
imul
ret
xor
gs
xchg
movs
xchg
mov
ret
add
sbb
rcr
dec
(bad)
sti
xor
rcr
outs
fs
ror
mov
xchg
add
imul
in
popa
fs
adc
dec
imul
movs
and
push
push
and
(bad)
mov
ins
les
mov
xchg
(bad)
xchg
xchg
inc
movs
movs
inc
jp
xor
popa
and
add
pop
stos
inc
fs
dec
push
or
inc
js
(bad)
xor
sti
pop
push
imul
jo
xlat
and
jo
enter
jno
loop
jmp
std
sbb
sbb
and
popf
sbb
push
ror
in
dec
mov
imul
mov
pushw
sub
and
xor
cmp
inc
add
or
cmps
cld
inc
jne
ins
jnp
mov
push
sbb
sbb
push
test
xchg
mul
mov
arpl
push
loope
mov
xor
push
xlat
or
inc
ror
pop
fild
sbb
and
mov
sbb
call
jecxz
sbb
inc
inc
cld
sub
shl
mov
xor
adc
xor
push
and
pop
push
xor
jmp
push
in
les
fnsave
fs
mov
or
aaa
sbb
xor
shr
mov
adc
add
push
stos
dec
sbb
push
inc
add
sub
in
sub
rcr
adc
push
outs
ss
add
jns
hlt
adc
popa
aas
xchg
ret
add
mov
dec
xchg
loop
mov
cmc
shr
adc
dec
cli
outs
pusha
mov
cmp
ds
pop
rcr
push
jo
dec
das
pop
js
pop
daa
push
xchg
lock
add
mov
inc
outs
or
pop
ja
adc
jmp
test
add
in
out
mov
out
and
pop
popa
and
sbb
jbe
ins
mov
add
inc
xchg
xor
jnp
mov
stc
and
outs
jnp
add
ret
add
fsubr
sub
(bad)
pop
push
dec
outs
mov
pusha
and
and
outs
cmp
daa
stos
sub
test
into
pusha
das
and
lods
and
mov
ja
or
jle
rol
mov
pusha
or
sub
xchg
(bad)
sub
adc
sbb
add
addr16
push
xchg
ret
mov
pop
and
aaa
fcomp
sub
inc
ins
xchg
or
mov
pop
rol
and
in
push
or
jae
jge
sar
std
push
dec
push
xor
push
clc
push
retf
(bad)
gs
popa
bound
test
ins
test
push
adc
inc
mov
test
sub
shl
sbb
sbb
push
pop
mov
lds
dec
sar
pop
mov
jae
loope
ror
dec
ret
inc
dec
dec
enter
mov
inc
(bad)
aaa
xor
gs
rcr
jmp
pusha
push
stos
dec
movs
add
lods
div
dec
adc
mov
cmps
inc
pushw
pop
xor
push
inc
arpl
add
add
fld
leave
inc
outs
pop
mov
loopne
sbb
fnstcw
sub
and
pop
jg
ficom
mov
and
in
frstor
mov
imul
call
sub
xor
popa
ins
jo
jmp
and
mov
les
sub
jnp
mov
sahf
cmps
je
push
lods
push
ds
data16
xor
outs
push
inc
and
cdq
fsub
and
inc
data16
data16
pushf
adc
fisub
inc
js
arpl
lds
dec
hlt
sub
cmp
mov
push
dec
mov
ret
or
std
add
jno
test
sbb
push
jo
cmps
pop
or
add
popf
inc
fwait
dec
mov
imul
push
nop
add
sbb
mov
(bad)
adc
ret
add
rol
pusha
movs
ret
jb
inc
or
add
inc
add
mov
in
cmp
jae
inc
lock
xor
fiadd
inc
sbb
(bad)
xchg
mov
cmp
cmp
sub
popf
mov
push
ret
add
(bad)
and
loopne
jge
jo
or
leave
test
and
fwait
xchg
xor
int3
inc
jbe
loopne
jmp
arpl
mov
or
inc
add
sar
jne
cwde
popa
imul
test
push
outs
sub
cmp
imul
hlt
and
adc
pop
mov
cmps
shr
stos
and
adc
sbb
pop
push
xchg
push
fs
enter
int
add
fmul
jne
and
or
xchg
fcomp
gs
icebp
out
inc
xor
cmps
call
ins
inc
or
push
push
repz
popf
sub
sbb
cmp
ret
sub
and
scas
sub
imul
jne
jae
add
test
and
lods
cmp
fst
add
xchg
mov
add
imul
or
into
fdiv
cmp
dec
into
jae
cwde
popa
sub
sbb
pop
fadd
sbb
sbb
inc
bound
adc
(bad)
mov
stc
inc
pop
sub
cmps
inc
mov
js
pop
xchg
mov
and
repz
sbb
daa
and
jne
push
cmp
inc
and
dec
inc
ins
xchg
adc
stos
das
pop
ins
push
(bad)
sbb
dec
inc
sbb
lods
push
mov
(bad)
push
pop
cmp
daa
jmp
and
sub
sbb
add
fisub
cs
push
mov
nop
push
sbb
lahf
sub
sub
sbb
xor
xchg
sub
add
mov
je
push
xchg
add
test
sbb
mov
popa
fbstp
xor
leave
sbb
and
inc
loopne
jnp
loope
xor
sub
es
adc
ins
cmp
test
adc
sub
outs
or
mov
nop
ins
arpl
retf
sbb
dec
fnstenv
jg
sub
iret
dec
pop
icebp
das
ins
pop
imul
retf
push
test
and
ds
enter
imul
dec
int3
(bad)
sub
dec
loope
pop
cmp
frstor
jmp
pop
pop
cmp
inc
adc
push
pop
ror
loope
inc
inc
fs
rol
and
(bad)
je
inc
(bad)
and
mov
sbb
xor
sbb
test
mov
ja
ja
jbe
or
mov
hlt
aas
xchg
or
sbb
sub
loopne
pop
add
or
add
lods
cdq
pop
sar
mov
lea
xor
jnp
mov
sbb
jae
movups
aam
dec
xor
fsub
jo
sbb
mov
ret
pusha
or
xor
loopne
inc
dec
inc
inc
scas
pop
jmp
xlat
add
and
inc
test
mov
adc
adc
or
leave
lods
bnd
inc
push
push
jno
or
loopne
push
shr
popa
add
xor
lods
dec
leave
and
ins
push
jb
call
and
bnd
sbb
add
push
dec
gs
jo
loop
and
pusha
and
dec
pop
test
or
jnp
out
call
or
test
dec
xchg
inc
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xor
add
add
