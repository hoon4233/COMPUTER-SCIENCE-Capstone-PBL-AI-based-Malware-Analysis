pop
mov
ret
jnp
sub
jns
ins
jae
inc
out
pop
inc
out
pop
pop
in
(bad)
dec
ins
jae
mov
and
outs
sbb
lea
dec
jge
jg
xchg
inc
jg
ins
jae
ror
dec
ins
clc
cmp
clc
daa
inc
out
jae
xchg
mov
imul
bnd
clc
jae
out
pop
inc
out
jae
adc
jnp
sbb
cwde
or
jp
ins
jae
retf
and
ss
ror
jg
ins
sbb
pop
sub
fwait
adc
ins
jae
push
xor
mul
in
cld
movs
and
push
cmp
and
ss
loope
cmp
stc
das
jae
or
jg
ins
jl
cmc
ins
jae
shr
hlt
or
cli
cmp
ins
(bad)
cmp
push
jg
xor
xor
sbb
add
imul
and
cmp
into
inc
iret
or
sub
fnsave
jg
das
ja
jno
xor
cmp
(bad)
pop
ins
jae
les
iret
or
dec
jge
xor
enter
fnsave
jg
push
inc
iret
or
and
xchg
daa
lock
xor
mov
ret
sub
inc
mov
les
arpl
sbb
lock
ret
hlt
or
sub
gs
add
loopne
or
pop
cld
xchg
sub
cwde
push
sbb
sbb
xchg
and
retf
adc
stc
das
jae
dec
ins
jae
inc
test
add
lock
push
jge
cmp
dec
pop
jnp
and
jae
retf
jbe
sbb
ins
jae
mov
sbb
mov
arpl
or
xor
lea
dec
pop
fnsave
jg
dec
movq
mov
icebp
ins
jae
dec
xor
adc
lahf
and
das
jae
cmp
retf
jle
ins
jae
mov
ins
sbb
sub
dec
ins
jae
mov
ins
jae
sbb
xchg
adc
or
in
sub
push
jg
ins
jae
movs
jge
sub
in
xchg
sbb
pop
dec
outs
stos
push
ins
out
mov
and
jg
inc
ret
cmp
or
pop
stc
das
jae
or
jae
mov
pop
iret
or
dec
ins
fnsave
jg
pop
push
iret
or
pop
pop
fnsave
jg
sbb
mov
js
cli
xor
ins
jae
mov
sar
ins
jae
dec
cmp
call
fmul
dec
ins
and
push
ror
sbb
sbb
xchg
fimul
jg
ins
sbb
sbb
ins
jae
leave
add
fwait
ins
xor
test
test
mov
cli
mov
dec
pop
mov
and
jae
int3
cdq
rol
ins
jae
int3
xchg
rol
sbb
enter
dec
ins
and
js
sbb
std
sar
mov
lea
dec
ins
lock
dec
ins
pop
jp
lods
xor
sub
dec
call
mov
mov
cld
cdq
rol
xor
imul
cwde
dec
inc
push
repnz
or
les
mov
les
(bad)
das
and
inc
dec
bound
dec
pop
jae
dec
xchg
push
jae
sbb
hlt
adc
jg
stos
repnz
inc
fwait
pop
jnp
lods
cwde
inc
mov
imul
pop
jae
cmp
mov
mov
mov
dec
ins
cli
mov
rcl
jg
fwait
pop
jnp
lods
cwde
imul
push
jge
ins
jae
inc
in
mov
adc
dec
mov
imul
int3
test
or
jge
jae
mov
in
repnz
and
push
ins
jno
and
or
push
ja
cmp
jg
in
jbe
sbb
mov
mov
pop
xchg
push
arpl
ins
mov
pop
xchg
push
and
mov
cmp
fwait
popa
xor
jbe
sbb
mov
cwde
jbe
xchg
test
mov
sub
call
clc
or
xchg
sub
neg
xor
or
jg
add
ret
test
mov
fnstenv
jg
xchg
cwde
cmp
sub
ja
shl
inc
shl
jo
push
jle
in
cld
adc
mov
pop
xchg
ss
sub
or
push
jp
sub
and
test
mov
ss
sub
mov
sub
push
xchg
add
mov
(bad)
hlt
or
cli
mov
leave
push
jb
cmp
dec
cmp
xchg
mov
mov
jae
push
xor
mov
cmp
call
dec
or
and
push
out
jae
xor
int3
xchg
mov
xor
test
inc
mov
fcom
jbe
std
das
jae
or
cli
mov
leave
push
jb
cmp
dec
mov
dec
ins
mov
mov
inc
xor
gs
imul
jp
ins
mov
mov
xchg
mov
int3
xchg
mov
mov
mov
mov
test
xchg
mov
mov
ins
mov
dec
xchg
mov
pop
ss
cld
movs
jns
sub
out
jae
sub
(bad)
cdq
dec
jae
mov
xchg
cli
cmp
test
ins
clc
add
mov
test
mov
push
inc
mov
mov
pop
pop
xor
hlt
or
mov
push
ins
clc
cmp
sub
cmp
xor
mov
cmp
call
cs
sub
hlt
or
cli
mov
mov
test
ins
clc
add
mov
test
mov
push
inc
mov
mov
pop
pop
xor
(bad)
nop
pop
jae
mov
xchg
cli
cmp
das
jae
or
mov
push
ins
sub
adc
sub
cmp
or
imul
xor
or
cli
mov
mov
jbe
std
das
jae
mov
gs
dec
push
cli
test
clc
xor
int
pop
push
mov
aas
mov
adc
cmp
inc
mov
mov
cli
call
push
ja
mov
mov
in
or
dec
xchg
push
jae
xor
cmp
clc
and
and
pop
mov
jg
test
mov
and
adc
xor
test
mov
mov
xchg
test
mov
cmp
call
cs
in
sub
aad
adc
shr
test
pop
jg
in
adc
mov
jae
sbb
mov
inc
pop
jae
dec
test
cmp
jae
scas
in
xchg
stos
mov
jp
cli
(bad)
push
xor
mov
cmp
call
jnp
cmp
daa
enter
dec
ins
lock
aad
xor
sbb
aad
xor
out
sbb
clc
cmp
add
sub
out
cmp
sbb
cli
xchg
in
xchg
nop
sbb
sub
retf
sub
cmp
or
ss
cli
dec
cli
xchg
cli
mov
das
imul
dec
ins
(bad)
cmp
das
jae
rcr
xchg
cli
mov
inc
icebp
mov
or
jp
cmp
and
jg
imul
das
mov
in
dec
mov
aad
cli
cmp
in
cld
mov
pop
jmp
imul
ins
jae
dec
in
(bad)
cmps
and
mov
xchg
(bad)
out
mov
mov
jbe
mov
jb
shr
adc
mov
pop
ss
(bad)
gs
jb
mov
ds
fsub
stos
push
xchg
in
(bad)
je
(bad)
cmp
dec
sbb
adc
rol
std
das
jae
or
jl
sub
xor
xor
scas
repz
dec
ins
lock
aad
xor
sbb
aad
xor
out
sbb
repnz
ret
cmp
jg
dec
out
fmul
ins
jae
mov
jae
(bad)
call
and
cmp
adc
or
cli
test
lea
mov
lock
dec
ins
push
jae
dec
out
fmul
ins
jae
adc
sahf
xchg
ins
repnz
jae
les
xchg
ret
hlt
or
hlt
jno
and
shr
cld
xor
jae
int
jb
dec
out
push
or
push
dec
ins
jae
sub
jae
je
(bad)
cmp
dec
sbb
xchg
call
mov
mov
dec
adc
cmp
jo
bswap
or
js
dec
bswap
or
fidiv
sub
jg
pop
jae
mov
jae
adc
stos
dec
xchg
in
sbb
out
xchg
sub
jg
sub
cld
movs
jge
cwde
lock
xor
clc
add
clc
inc
mov
push
test
cmps
mov
xchg
lea
mov
push
sub
icebp
sar
or
cmp
jns
jg
ins
jae
or
jp
cmp
cli
cmps
pusha
mov
mov
mov
and
aad
xor
out
sbb
jae
dec
in
add
push
push
mov
inc
push
mul
jbe
cmp
ins
jae
je
sar
call
cmp
jnp
or
clc
cmp
out
pop
xor
xor
aad
je
ins
test
xchg
cli
mov
mov
cli
call
int3
mov
gs
(bad)
cmps
pushf
movq
test
mov
ins
jae
sub
jae
or
repz
jns
jl
fldcw
jg
mov
imul
jae
mov
in
xchg
stos
cwde
pop
rcr
outs
cmp
clc
cmp
aaa
jl
push
inc
or
inc
or
push
or
ja
sub
sbb
fwait
cmp
cld
lea
xchg
in
mov
dec
ins
fwait
adc
sbb
sub
jae
xor
jae
push
int3
daa
fisttp
ins
rcr
std
das
jae
add
mov
in
cld
sub
jae
xchg
in
mov
stos
cwde
arpl
pop
jnp
sahf
push
jge
jg
cmp
ja
jne
or
jne
push
jnp
or
xchg
stos
xor
inc
jns
jl
jp
mov
retf
jg
bound
or
lods
and
jae
xor
mov
pop
ins
jae
dec
pop
jae
dec
pop
jae
dec
add
sbb
sub
xchg
push
sub
adc
es
jae
or
cli
mov
leave
push
jb
cmp
cli
mov
mov
mov
mov
or
dec
ins
sbb
sub
(bad)
cmp
div
popf
clc
cmp
xchg
fwait
test
mov
(bad)
loope
jno
mov
ds
popa
push
aad
or
test
xchg
cli
mov
dec
ins
mov
mov
lea
or
sbb
int3
cdq
mov
mov
mov
mov
xor
mov
dec
ins
cli
cmps
js
cli
mov
cmp
xchg
and
jae
shr
xor
cli
mov
mov
(bad)
cli
lea
cdq
test
out
dec
jecxz
das
jae
cmp
ins
jae
stos
in
iret
mov
mov
mov
neg
call
cmp
cmp
or
jp
cmp
cli
cmps
mov
xchg
lea
xchg
xchg
lea
or
cli
test
out
sbb
jg
ins
cli
cmp
pop
jnp
dec
in
mov
push
ins
jae
int3
lods
mov
jmp
sub
in
add
cli
dec
gs
and
(bad)
mov
mov
mov
mov
cli
ret
lea
mov
shr
jmp
inc
stos
test
mov
call
cmp
psadbw
jp
inc
call
adc
xor
ror
jo
lock
dec
pop
jb
pop
mov
jg
call
and
retf
test
lea
dec
ins
jl
int3
retf
mov
dec
ins
jl
jo
jae
inc
(bad)
fnstenv
loopne
xor
sar
dec
test
mov
out
xchg
lea
jmp
enter
xchg
jae
je
(bad)
cmp
mov
enter
dec
ins
sbb
mov
and
or
push
mov
popa
dec
xor
jb
xchg
mov
inc
fwait
mov
mov
jae
cmp
xchg
lea
and
test
int
jg
test
jae
xchg
mov
sbb
add
inc
mov
lea
mov
lock
dec
ins
pop
jne
call
jb
dec
ins
sbb
rcl
or
fnstcw
dec
xor
jb
lock
jg
ror
xchg
rcr
inc
mov
jae
cmp
xchg
lea
and
test
int
jg
or
jae
xchg
mov
sbb
add
inc
mov
lea
mov
lock
dec
ins
pop
jne
call
jb
dec
ins
cli
cmps
mov
xchg
lea
and
xchg
cmp
or
imul
jae
inc
stos
not
mov
mov
ins
jae
dec
add
sbb
jmp
cdq
mov
mov
jae
cmp
xchg
lea
and
test
int
jg
mov
mov
je
mov
sbb
adc
or
ret
lea
mov
lock
dec
ins
push
bound
ins
sbb
test
nop
mov
mov
popa
dec
xor
not
mov
mov
ins
jae
mov
out
into
xlat
mov
mov
jnp
jp
fnstenv
jg
loopne
xor
mov
(bad)
or
ficomp
or
cmp
xchg
in
mov
mov
call
sub
dec
loopne
cmps
mov
mov
ret
xor
and
shr
jbe
(bad)
test
aad
xor
out
sbb
cli
cmp
in
cld
xor
jae
int3
test
jg
out
(bad)
stos
mov
mov
sahf
fnstenv
dec
ins
lock
out
into
(bad)
mov
mov
jecxz
jg
ins
repnz
das
stos
mul
mov
mov
stos
neg
mov
mov
ins
jae
int3
in
xor
out
cmps
mov
mov
ret
sub
stos
mov
xchg
mov
mov
imul
and
xchg
cmp
mov
mov
ret
imul
dec
in
add
cli
ja
jae
(bad)
call
and
int3
mov
clc
inc
mov
mov
cmp
in
cld
xor
jae
int3
ins
ja
dec
loopne
xchg
mov
mov
ret
xor
and
shr
jbe
(bad)
div
mov
xchg
test
xchg
xchg
lea
push
push
cli
cmp
ins
test
xchg
cli
mov
inc
call
(bad)
cli
lods
xchg
lea
mov
mov
ret
sub
ss
inc
cmps
shr
cli
sub
xchg
sbb
lock
xchg
mov
int
jg
call
and
retf
cld
in
or
dec
test
mov
fcomp
cli
mov
lea
or
cli
mov
lea
dec
ins
lock
xchg
in
sbb
xchg
jno
ret
xor
lea
mov
and
cld
in
xor
ins
jae
in
loopne
div
jge
cwde
lock
hlt
test
mov
pop
test
mov
dec
ins
lock
xchg
lea
push
ins
jae
int3
leave
mov
test
jae
int3
icebp
mov
mov
dec
jg
ins
jae
or
jp
inc
call
repnz
xor
jg
call
and
int3
leave
mov
mov
pop
test
mov
dec
ins
lock
xchg
lea
dec
ins
sbb
xchg
sbb
xor
cmps
js
cli
mov
mov
mov
out
xlat
mov
mov
int3
adc
idiv
mov
mov
(bad)
fadd
xor
xchg
(bad)
dec
ins
jae
mov
xchg
lea
scas
aam
jg
ins
sbb
rcl
xor
and
shr
(bad)
cmp
jae
mov
xchg
lea
mov
jl
sub
jae
retf
xor
mov
test
jae
int3
in
mov
mov
dec
jg
ins
jae
or
jp
inc
call
lock
lea
dec
ins
jae
int3
or
sbb
fadd
cli
int
lea
push
dec
cli
cmp
in
cld
xor
jae
int3
mov
jg
or
ret
lea
dec
ins
jae
hlt
add
jl
mov
jg
call
and
mov
or
mov
lock
rcl
xor
jg
shr
xor
jg
stos
test
ins
jae
dec
xchg
(bad)
xlat
mov
mov
int3
nop
mov
test
nop
mov
and
cld
lea
repnz
lea
leave
push
jb
cmp
cli
cli
mov
lea
dec
ins
mov
adc
xor
xor
test
push
dec
ins
lock
int3
nop
mov
test
nop
mov
and
cld
lea
mov
sub
retf
xor
idiv
mov
mov
ret
sub
stos
mov
xchg
mov
mov
mov
int3
int
xor
pusha
lea
mov
mov
ret
sub
mul
mov
mov
ret
sub
not
int3
mov
mov
mov
or
mov
mov
push
cli
mov
lea
dec
ins
test
xchg
cli
mov
mov
and
jns
and
xor
imul
ret
sub
into
stos
mov
mov
popa
clc
cli
popf
xchg
lea
pop
gs
cli
xchg
xchg
lea
pop
gs
cli
xchg
xchg
lea
pop
gs
cmps
js
cli
mov
mov
and
jns
and
xor
imul
xor
mul
dec
or
jg
ins
jae
sub
ins
jae
movs
jns
sub
in
xchg
mov
xchg
inc
jle
pop
(bad)
and
fdiv
dec
ins
mov
mov
jae
dec
in
ss
or
jg
test
dec
ins
lock
mov
lock
leave
fnstenv
jg
sbb
xor
mov
test
out
lahf
mov
push
xchg
mov
scas
sub
cli
cmp
sar
xchg
sub
adc
clc
cmp
ins
jae
sub
cs
shl
imul
xchg
in
pop
leave
fnstenv
jg
ins
sbb
or
aas
dec
pop
jae
dec
test
dec
ins
cli
mov
dec
ins
sub
mov
cli
call
cs
adc
sub
cmp
mov
dec
sbb
cmp
ins
imul
(bad)
mov
or
cld
ins
push
in
ds
ins
lock
inc
std
xor
stos
jbe
aam
jae
dec
ins
jae
dec
sub
ds
imul
ret
ins
sar
shr
jo
push
jp
inc
loope
jge
ins
dec
or
jo
push
jno
dec
xchg
push
cli
(bad)
xor
pusha
imul
ins
xor
mov
pop
retf
or
mov
fsubr
xor
or
jb
jno
xor
push
jno
dec
in
jle
(bad)
sub
aas
mov
inc
jno
dec
fwait
jbe
shr
jle
pusha
rcl
dec
push
in
ds
xchg
dec
push
in
ds
in
mov
stos
call
push
in
ds
test
jp
fnstenv
jg
push
arpl
dec
pop
mov
data16
jae
enter
dec
ins
repz
repnz
int
out
ins
shr
sub
mov
or
or
mov
dec
outs
jae
enter
dec
ins
repz
repnz
test
xchg
test
repnz
sbb
test
mov
leave
pusha
imul
ins
jnp
or
xor
sub
nop
xor
sbb
test
jge
ins
cli
(bad)
pusha
popf
cli
mov
or
mov
dec
outs
jae
dec
test
xor
sbb
test
jge
ins
repnz
inc
bound
leave
pusha
imul
ins
jno
dec
sub
ds
outs
jae
dec
test
xor
push
cli
(bad)
mov
or
xchg
dec
ins
jae
call
ins
jbe
(bad)
sub
(bad)
push
push
jae
mov
in
inc
ds
sub
jae
movs
lock
lods
jno
dec
push
in
ds
test
cmp
sub
jle
gs
dec
test
jg
ins
rcl
dec
push
in
ds
test
jg
ins
mov
fnstenv
jg
push
jno
aad
jae
rcr
jp
repnz
test
jg
ins
inc
mov
dec
in
jle
(bad)
sub
pop
enter
dec
ins
cli
mov
out
fstp
int
jg
(bad)
jmp
adc
cld
mov
or
mov
imul
icebp
das
jae
leave
ins
jae
xor
ins
jae
jae
push
cli
mov
xor
pusha
imul
ins
xor
das
jae
data16
lahf
loop
ins
jb
jno
xor
dec
mov
repnz
popf
inc
pop
stos
repz
repnz
xchg
mov
mov
and
pop
retf
or
jp
repnz
(bad)
idiv
sub
cmp
mov
push
push
mov
or
jl
dec
sbb
xchg
js
sub
inc
mov
jg
jmp
repz
push
repnz
push
das
jae
inc
(bad)
test
jg
sbb
or
push
lock
or
sbb
xor
jae
sbb
push
test
aas
cld
dec
gs
dec
outs
cwde
cmp
adc
jb
repnz
in
jle
in
test
out
ds
(bad)
lds
lock
lea
xchg
repz
adc
jp
std
xor
in
push
mov
popa
jecxz
dec
ins
cwde
shl
popa
jecxz
dec
out
test
mov
std
xor
gs
dec
push
jbe
fldcw
popf
and
ins
jae
ins
popa
jecxz
dec
ins
cwde
shl
popa
jecxz
dec
out
test
mov
std
xor
push
in
ds
push
jbe
fldcw
jbe
std
das
jae
add
js
xor
adc
das
pop
cmp
xor
sub
mov
in
or
dec
add
fwait
or
ins
jae
mov
and
enter
jmp
lds
ins
and
cmp
jae
jmp
je
ins
test
pop
and
sbb
jae
jmp
lds
ins
and
or
jae
jmp
lds
ins
and
jl
jae
jmp
mov
cmp
call
enter
or
test
jae
int
xor
sub
das
mov
das
fisttp
ins
mov
mov
in
jle
in
cld
sub
jae
or
cli
cmp
ins
jae
enter
dec
ins
lock
ins
mov
fnstenv
jg
or
cmps
shr
cmp
stos
mov
icebp
or
call
les
lds
ins
cli
cmp
das
jae
or
jno
dec
ins
retf
adc
ins
jae
stos
in
jmp
scas
mov
std
ins
jae
dec
out
push
(bad)
dec
loopne
ret
les
mov
jg
enter
cmp
jae
or
and
dec
in
dec
xchg
in
repnz
and
sbb
jae
dec
pop
ja
dec
xchg
push
fwait
mov
loopne
fistp
xchg
push
fcmovnb
sub
das
and
sub
or
dec
pop
jae
cmp
sbb
ins
sbb
imul
ins
retf
mov
ins
jae
stos
in
out
shr
and
mov
fnstenv
jg
sub
repnz
and
dec
out
fwait
mov
dec
jae
push
xor
mov
cmp
call
push
js
and
cmp
sub
cmp
sub
or
clc
xor
ds
or
sub
imul
cmp
cmp
jae
or
and
mov
inc
loopne
ins
clc
cmp
xchg
bound
dec
ins
mov
cs
shl
jb
xchg
cli
mov
or
or
mov
dec
aad
add
shr
test
xchg
cld
movs
popa
and
push
out
ja
xor
dec
sbb
cmp
jmp
inc
mov
jae
cmp
jl
or
ins
jae
cmp
jl
or
ins
jae
cmp
jl
or
ins
jae
cmp
jl
or
ins
jae
inc
jmp
clc
cmp
aaa
jl
out
inc
sar
or
jae
jmp
mov
imul
(bad)
jns
inc
mov
call
mov
jl
pop
jnp
mov
dec
ins
cli
test
xchg
(bad)
jns
inc
mov
or
mov
cdq
jl
(bad)
jo
push
adc
xchg
lock
dec
(bad)
lds
push
fwait
jg
ins
push
and
and
jl
dec
push
and
inc
(bad)
and
addr16
js
ret
or
das
mov
in
xchg
movs
mov
sbb
(bad)
sub
jb
retf
push
cdq
outs
ss
test
or
clc
cmp
aaa
jl
ins
mov
mov
in
jp
ins
jae
mov
xchg
sbb
fwait
shl
jg
sbb
xchg
jb
jle
mov
or
inc
ja
push
sub
xchg
cmp
jne
ja
add
mov
mov
imul
xchg
dec
in
dec
jns
sbb
mov
fwait
jnp
(bad)
jne
pop
ins
je
jae
dec
sbb
mov
fwait
jp
push
jne
cmp
cli
cmps
dec
sub
sbb
imul
push
ins
jae
leave
push
dec
jge
or
xchg
in
dec
jns
sbb
div
push
jne
cmp
cli
xchg
test
jne
jno
pmulhuw
leave
dec
imul
ins
jae
dec
push
call
movs
mov
sbb
(bad)
sub
jb
retf
push
cdq
ins
stos
cld
mov
out
outs
les
jo
dec
xchg
lock
dec
out
xchg
jns
jle
ins
jae
jne
jb
sbb
mov
leave
push
jne
cmp
cli
xchg
test
jne
jb
ja
mov
mov
ins
push
dec
rcl
jnp
push
dec
or
lea
ins
pop
js
xchg
jae
dec
sbb
loopne
jae
ret
repnz
out
cdq
jnp
imul
enter
dec
ins
jl
(bad)
nop
mov
mov
cli
call
mov
fnstenv
jg
sbb
push
pop
mov
sbb
enter
dec
ins
add
jl
ins
add
out
jae
test
dec
push
mov
xchg
test
mov
std
das
jae
(bad)
cmp
stos
outs
clc
inc
pop
dec
loop
dec
pop
test
mov
stos
das
mov
xor
jp
fnstenv
jg
(bad)
je
jae
dec
sbb
ins
jae
cmp
ins
cwde
jno
mov
cmp
jns
or
jnp
sub
add
push
in
popa
les
ins
jle
ins
cli
cmp
inc
mov
jle
in
mov
sub
ret
neg
outs
jnp
sub
add
retf
idiv
in
jle
ins
mov
cmp
loopne
popa
dec
out
xchg
jge
jp
fnstenv
jg
movs
mov
loopne
popa
dec
ins
mov
cmp
imul
pop
(bad)
lds
pop
lods
xchg
jge
pop
data16
cmc
das
jae
cmp
test
mov
(bad)
adc
mov
and
xor
mov
aad
jg
push
jae
dec
in
add
call
jb
int3
sahf
pushf
xor
xor
in
into
pushf
xchg
xchg
mov
jl
leave
int3
sahf
pushf
xor
xor
sbb
hlt
mov
inc
fcomi
mov
push
jno
dec
xchg
nop
mov
cli
jmp
jl
inc
pusha
dec
ret
or
xchg
loopne
jae
ret
mov
fdivr
(bad)
or
pusha
lods
les
ins
and
in
mov
xor
jae
lods
xor
xlat
mov
pop
dec
loop
dec
in
test
test
repz
dec
mov
cmp
add
mov
mov
jae
(bad)
clc
adc
out
dec
push
cld
xor
(bad)
mul
dec
ins
jae
(bad)
clc
adc
out
push
hlt
xor
clc
cmps
mov
cmp
rcl
jo
cli
jb
dec
test
xchg
cli
cli
xchg
mov
xor
clc
jmp
mov
pop
lods
nop
imul
sub
pushf
xor
jae
dec
ins
and
shr
jge
fxch
xchg
scas
jae
dec
ins
dec
loop
or
mov
sbb
sub
dec
ins
mov
fnstenv
jg
enter
xchg
jae
lds
jg
xchg
mov
xchg
(bad)
xchg
cmps
xchg
mov
mov
jl
mov
lock
inc
lods
pop
sbb
mov
jae
aam
lods
xor
test
popf
dec
outs
es
leave
cld
scas
imul
mov
jp
enter
dec
ins
add
dec
ins
add
mov
jg
ins
jae
int3
in
lods
xor
arpl
in
mov
ins
jae
call
mov
movs
or
call
pop
xor
pushf
xor
mov
dec
xchg
(bad)
cmps
xchg
xchg
mov
mov
(bad)
(bad)
or
js
out
or
jmp
xchg
fcomp
xchg
jge
mov
xchg
dec
lods
xchg
jge
and
repz
test
cmps
xchg
mov
mov
xor
outs
mov
mov
rol
jnp
ins
add
mov
pop
retf
or
ret
mov
pop
shl
jg
lds
fist
outs
addr16
ins
jae
sar
mov
xor
test
lods
xor
mov
fdiv
lods
xor
cli
cli
fnsave
shl
fnsave
cli
cli
fnstenv
fbld
popf
mov
add
scas
mov
(bad)
call
and
mov
adc
dec
ins
clc
cli
popf
mov
xor
mov
ret
mov
std
mov
or
mov
stos
mov
or
pop
dec
ins
jne
and
jmp
jg
ret
mov
inc
aas
sbb
ins
jae
fadd
lods
xor
(bad)
cmp
mov
(bad)
jno
les
(bad)
stos
xchg
xchg
mov
inc
js
jmp
pushf
xor
pop
fsubr
pushf
xor
and
shr
mov
inc
call
repz
jl
jae
jae
ret
nop
mov
jl
dec
push
call
adc
inc
jmp
call
cdq
pushf
xor
jae
retf
repnz
mov
xchg
xchg
mov
rcl
cld
mov
leave
push
jae
popa
in
cld
mov
sbb
mov
push
jae
pop
in
cld
mov
sbb
mov
push
jae
inc
and
retf
or
leave
fmul
lods
xor
data16
into
lods
xor
call
imul
mov
imul
and
clc
cli
mov
xchg
pop
pop
jp
outs
push
push
into
fwait
xchg
xchg
mov
xchg
xchg
mov
(bad)
fcom
outs
clc
ret
pop
leave
test
jg
push
dec
jle
ins
jae
cmp
repz
je
jae
dec
ins
push
popa
leave
push
dec
jl
ins
jae
cmp
repz
je
jae
dec
ins
push
jne
push
dec
jp
ins
jae
cmp
(bad)
(bad)
mov
add
fcmove
adc
cmp
sahf
pushf
xor
mov
mov
fwait
or
popa
repz
mov
in
cdq
pushf
xor
mov
nop
lods
call
xchg
clc
sti
pop
test
mov
xchg
mov
imul
cmp
inc
pop
cmps
xchg
mov
fcomi
mov
jae
inc
dec
mov
cmp
xchg
mov
mov
cli
call
clc
and
xchg
add
mov
xor
dec
shl
jg
jl
jg
sahf
xlat
hlt
or
cli
cmp
or
cmp
pop
test
ins
retf
ins
jae
in
loopne
scas
les
ret
retf
ins
jae
in
in
push
xchg
jg
push
adc
inc
repz
in
jle
in
xchg
jnp
jl
(bad)
xor
repz
sub
outs
cmp
call
(bad)
lds
mov
aaa
push
(bad)
div
dec
ins
jae
or
cmc
aas
dec
ins
repz
ins
dec
mov
sub
cmp
dec
mov
dec
ins
lock
sbb
or
jb
jmp
jb
mov
xchg
js
xchg
ja
inc
out
mov
lock
adc
or
jb
jmp
jb
or
inc
out
xchg
js
xchg
jbe
dec
in
or
xchg
scas
pop
mov
jmp
jb
mov
jg
in
jae
dec
sbb
or
ja
jmp
mov
jae
inc
fwait
xor
sbb
or
ja
or
jb
xor
jl
retf
cmp
dec
xchg
dec
(bad)
lds
mov
aaa
push
sbb
or
jb
inc
in
or
or
(bad)
and
fnstcw
dec
ins
jl
dec
push
lock
ins
push
jnp
sub
push
xor
mov
cmp
call
enter
cmp
jg
add
and
sub
retf
aas
leave
push
jb
cmp
cli
mov
ja
push
js
sub
xchg
retf
add
mov
pop
ss
dec
dec
jae
mov
cmp
icebp
add
xchg
test
mov
cli
mov
les
jg
mov
jnp
int3
ins
xchg
xor
jae
int3
ins
xchg
xor
jae
lea
xchg
cli
mov
sub
jmp
cmps
idiv
dec
pop
jae
dec
xchg
push
ja
ins
fwait
loope
ins
jae
adc
imul
and
loope
ins
push
dec
ins
sbb
in
jae
dec
pop
jo
dec
pop
jo
dec
ins
jae
mov
jnp
push
aas
jae
shr
cld
xor
jae
dec
out
jae
dec
jae
mov
xchg
test
mov
and
xchg
dec
cmp
jg
scas
lock
mov
in
or
(bad)
jl
ins
sbb
adc
cmp
in
mov
in
mov
sbb
jg
cmp
hlt
or
cwde
jns
xchg
pop
xchg
stos
sub
adc
sub
cmp
dec
addr16
pop
div
pop
jae
leave
ins
jae
and
jg
ins
sbb
ins
mov
cmp
fwait
add
(bad)
in
mov
inc
ins
jae
mov
push
jnp
lods
cwde
and
jg
ins
and
jg
sub
mov
mov
jle
sbb
repnz
and
sbb
mov
pop
jae
or
and
or
xchg
lock
jg
call
sbb
jae
dec
xor
imul
int3
int3
inc
leave
addr16
push
jae
mov
in
adc
dec
ins
sbb
ins
sbb
ins
jae
mov
and
in
div
cdq
cli
mov
dec
pop
mov
fs
jno
dec
pop
jae
mov
pop
jae
or
and
inc
cmp
div
cmp
dec
mov
imul
push
ja
sub
(bad)
and
cld
pop
dec
ins
inc
movs
shl
inc
dec
scas
xor
xor
jnp
and
cmp
dec
ins
repnz
add
fwait
adc
lea
movs
mov
jae
pop
jl
xor
cmp
jg
out
mov
or
jae
test
mov
ins
push
jnp
imul
xor
lea
jg
inc
and
out
mov
ret
test
sub
adc
sub
cmp
and
push
jae
sub
dec
mov
dec
ins
sbb
jae
mov
pop
mov
cmp
jae
test
jae
retf
cmp
add
dec
test
or
cli
mov
mov
sub
imul
and
leave
and
shl
mov
retf
jg
or
jg
adc
cmp
dec
ins
sbb
lock
call
leave
adc
cmp
adc
jg
sub
(bad)
sub
cwde
push
icebp
adc
dec
call
inc
(bad)
add
jp
out
mov
dec
sub
or
push
xchg
dec
in
cwde
fidivr
jae
and
jb
xor
jae
and
jae
fidiv
jge
sub
cdq
inc
ins
jae
jmp
lea
sub
retf
jle
test
add
add
jle
adc
cmps
mov
in
hlt
or
jl
dec
out
ja
fisub
cdq
add
adc
jae
(bad)
cmp
cmp
in
hlt
add
cli
mov
sub
mov
sub
enter
sub
les
(bad)
cmp
cmp
fidiv
ja
cmp
(bad)
aas
jnp
cdq
ins
ss
ret
xchg
dec
in
jle
in
and
ss
out
fscale
retf
jg
sub
std
aas
dec
std
retf
jp
out
int3
lods
jecxz
fscale
pop
push
fscale
jecxz
js
jecxz
fscale
xor
fscale
jecxz
or
jecxz
fscale
xor
fscale
jecxz
or
jecxz
fscale
dec
cmps
fscale
jecxz
cmp
jecxz
fscale
retf
jg
das
jae
repnz
retf
scas
xor
int3
lods
jecxz
fscale
pop
arpl
std
jecxz
js
jecxz
fscale
lock
jo
jecxz
fscale
push
xchg
fscale
jecxz
sub
jecxz
fscale
adc
sar
or
jecxz
mov
xor
jecxz
xor
jg
inc
push
inc
or
hlt
push
std
jecxz
(bad)
cmp
std
jecxz
sbb
out
fstp
fscale
jecxz
mov
out
fst
fscale
jecxz
movs
std
jecxz
fldz
mov
fscale
jecxz
jno
jecxz
fstp
mov
push
fscale
jecxz
(bad)
call
sub
jae
push
jp
jg
das
jae
test
jae
inc
scas
xor
std
retf
jg
sub
jecxz
fscale
sub
fscale
jecxz
retf
out
fscale
pop
sub
bnd
cli
cmps
fscale
jecxz
pusha
lods
jecxz
fscale
inc
lods
fscale
jecxz
sbb
jecxz
fscale
cli
mov
std
jecxz
mov
std
loop
fscale
jecxz
adc
jecxz
fscale
int
push
jp
out
js
jecxz
fscale
jb
fscale
jecxz
stos
lahf
jecxz
fscale
retf
jg
das
jae
retf
out
fscale
pop
sub
repnz
cli
cmps
fscale
jecxz
pusha
lods
jecxz
fscale
inc
lods
fscale
jecxz
sbb
jecxz
fscale
cli
mov
std
jecxz
mov
std
loop
fscale
jecxz
adc
jecxz
fscale
int
inc
scas
xor
js
jecxz
fscale
jb
fscale
jecxz
stos
lahf
jecxz
fscale
adc
fscale
jecxz
test
mov
mov
sbb
xchg
cld
movs
jne
sub
out
ja
sub
shr
mov
ja
clc
cmp
in
cmp
mov
mov
in
jle
cmp
mov
shr
test
jne
or
jae
arpl
cli
cmp
ins
int3
js
ins
jae
(bad)
cmp
out
xchg
cli
mov
mov
cmp
jg
or
cmp
sbb
add
shl
outs
inc
fstp
test
sti
outs
inc
(bad)
je
jae
dec
sbb
xchg
ins
cmp
(bad)
jmp
mov
in
dec
ret
ins
sbb
std
jae
dec
loopne
lea
test
xor
jl
or
and
xchg
ins
sub
sub
jle
cmp
jae
dec
loopne
lea
in
jle
cmp
jae
lea
mov
jg
jae
das
xchg
pop
ss
push
mov
retf
jne
xor
imul
and
mov
fs
dec
ins
fwait
adc
ins
jae
inc
ins
jo
sbb
mov
mov
pusha
mov
push
inc
mov
mov
je
into
cmp
js
call
lea
cmp
cld
lea
mov
bound
jg
fisttp
nop
mov
ffreep
or
imul
dec
in
xor
adc
nop
mov
fcmovnb
or
mov
mov
or
xchg
mov
jae
and
jg
popf
jo
(bad)
shl
jg
sub
jg
out
mov
call
in
and
jae
rcr
scas
hlt
das
jae
pop
out
or
ret
jo
test
xor
sub
ret
cli
cmp
ds
mov
in
idiv
js
ret
inc
outs
retf
jnp
mov
jbe
hlt
das
jae
or
add
in
mov
dec
out
mov
mov
lods
mov
dec
scas
hlt
das
jae
mov
test
xor
cli
cmp
ins
clc
add
scas
jl
fwait
lods
xchg
outs
inc
mov
xor
sub
jae
mov
das
jae
mov
out
mov
call
in
mov
pop
jae
rcr
scas
hlt
das
jae
pop
out
mov
mov
jp
shl
jg
sub
ret
cli
cmp
outs
ss
js
ret
inc
outs
retf
jnp
mov
jbe
hlt
das
jae
or
add
(bad)
shl
jg
(bad)
nop
cwde
(bad)
clc
imul
into
cmp
hlt
das
jae
inc
push
cli
mov
mov
or
leave
sbb
mov
fwait
hlt
das
jae
inc
mov
cmp
enter
dec
ins
repz
add
xchg
sbb
cmp
cmp
mov
mov
lea
jg
ins
sbb
ins
sbb
ins
jae
or
cmp
in
fwait
enter
dec
ins
sbb
sub
sub
and
jg
sbb
jg
test
or
jae
mov
in
and
ss
(bad)
movs
jne
jg
ds
aad
aad
push
dec
ins
test
mov
cli
mov
or
jg
ins
(bad)
bound
popf
inc
pop
stos
fwait
rol
jae
call
mov
xchg
ins
push
and
shr
neg
xchg
lea
dec
xchg
fsub
jae
inc
fisttp
xor
ds
mov
lods
mov
cmps
cli
scas
adc
mov
mov
jmp
xchg
lea
dec
out
xor
mov
call
jae
sbb
jae
shr
mov
mov
mov
dec
xchg
mov
adc
repnz
xchg
lea
call
mov
jg
call
and
and
jg
outs
sbb
ins
sbb
ins
xor
int3
xchg
mov
push
ins
jae
int3
cdq
mov
icebp
in
cmp
add
adc
mov
mov
and
dec
add
mov
mov
pop
cmp
in
jle
in
cmp
mov
dec
ins
mov
fnstenv
jg
add
(bad)
cli
mov
mov
dec
ins
(bad)
cli
mov
mov
or
cli
mov
mov
dec
in
fwait
sub
ins
jae
enter
mov
nop
mov
cmp
scas
lods
cmp
or
cli
mov
mov
dec
in
fwait
pop
dec
ins
jae
and
lods
cmp
or
jge
ins
repz
inc
ins
jae
retf
(bad)
mov
xor
imul
and
cmp
int3
dec
xor
pop
div
xchg
jbe
std
das
jae
mov
xchg
test
mov
les
mov
les
(bad)
das
and
inc
dec
bound
dec
pop
jae
dec
xchg
push
jae
sbb
push
pushf
lock
sub
push
xchg
sub
adc
cmp
mov
mov
pop
ss
ins
repnz
jbe
jae
mov
(bad)
xchg
mov
jae
push
xor
mov
cmp
call
repnz
pop
sub
jg
sbb
inc
sub
and
cmp
mov
pop
xchg
push
jae
sbb
jl
jae
retf
and
imul
inc
push
rcl
test
imul
push
outs
mov
jg
cmp
fwait
jns
ins
jae
lea
mov
cmp
call
popf
xor
shr
cmp
imul
pop
jae
dec
pop
jae
cmp
mov
inc
test
aaa
dec
ins
jp
cmp
pop
mov
push
xchg
push
imul
push
outs
mov
(bad)
xchg
and
jae
inc
lods
pop
jae
sbb
jg
lods
cwde
outs
rcl
or
ins
inc
mov
sbb
xchg
cld
movs
jge
sub
sbb
or
adc
les
movs
push
(bad)
mov
stos
jne
rcl
cmp
outs
jae
dec
xchg
push
jae
sbb
mov
lods
pop
jnp
lods
cwde
inc
les
imul
pop
jae
dec
xchg
push
outs
mov
(bad)
xchg
lods
sub
inc
lods
pop
jae
sbb
jg
lods
cwde
gs
(bad)
xchg
cld
sub
inc
fidiv
addr16
xchg
pop
ins
jae
scas
in
pop
stos
sub
sub
sub
rcl
sbb
jae
retf
stos
or
or
je
dec
ins
and
shr
div
int3
(bad)
dec
cmp
sub
sbb
dec
pop
jae
dec
add
fwait
and
mov
xor
call
cmp
inc
mov
mov
xor
and
and
jae
push
xor
out
in
push
and
ja
pop
or
cmp
mov
cli
call
jnp
adc
mov
mov
xor
jl
ss
pop
mov
xchg
xchg
jne
jle
addr16
push
xchg
cmp
and
push
ins
jae
lea
xchg
clc
sub
ja
dec
in
cld
mov
push
enter
pop
ins
jae
leave
push
dec
jg
test
movs
cmp
ins
push
rcl
or
outs
(bad)
ins
jae
or
neg
ins
cli
cmps
or
stos
das
mov
in
dec
icebp
sbb
jp
cmp
mov
cmp
hlt
or
cli
mov
mov
stos
jle
xchg
mov
sub
imul
and
adc
mov
mov
in
push
(bad)
ins
pop
jae
sbb
cli
cmp
out
mov
push
pop
xor
shr
dec
mov
imul
cmp
pop
lock
cmp
ja
orps
xchg
mov
adc
or
add
add
in
(bad)
push
ins
jae
rcr
mov
pop
in
(bad)
push
ins
jae
repz
mov
movs
in
cld
mov
hlt
xor
and
adc
or
dec
ins
lock
mov
les
mov
xchg
ret
mov
scas
imul
fwait
add
ins
jae
pop
cmp
xor
xchg
dec
mov
mov
out
(bad)
xchg
mov
mov
call
and
mov
gs
mov
shr
mov
dec
out
into
xchg
pusha
and
js
call
jns
xor
ins
jae
int3
mov
xor
test
mov
lea
mov
clc
ret
mov
mov
inc
hlt
fdivr
iret
inc
dec
imul
sbb
jae
shr
xor
jae
mov
jnp
dec
ins
jae
mov
in
push
mov
gs
cli
cdq
xchg
mov
mov
repz
dec
ins
push
xchg
stos
sbb
clc
mov
test
test
mov
lock
or
or
cld
cmp
lock
or
retf
lea
dec
out
mov
mov
aam
jg
ins
jmp
jle
(bad)
cmp
mov
dec
ins
lock
mov
sub
lock
dec
hlt
test
push
mov
dec
ins
retf
ins
jae
mov
xchg
mov
xchg
das
jae
mov
out
mov
mov
aam
jg
ins
jmp
jle
(bad)
cmp
mov
dec
ins
lock
or
retf
lea
dec
out
mov
mov
aam
jg
ins
jmp
jle
(bad)
cmp
mov
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
and
jae
lock
jae
dec
hlt
test
mov
mov
and
cmp
or
jge
or
popa
mov
mov
lea
or
xchg
add
jae
retf
(bad)
cmps
test
jg
test
dec
ins
retf
ins
jae
mov
adc
mov
fmul
cmp
lea
jne
das
jae
cld
xchg
mov
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
mov
fmul
jne
ins
jae
lea
jl
das
jae
cld
xchg
mov
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
call
push
jae
dec
hlt
test
mov
mov
and
cmp
or
cld
lea
or
div
pop
retf
ins
jae
mov
mov
jg
shr
xchg
and
jae
(bad)
call
and
mov
lea
or
xchg
sbb
jae
retf
xchg
js
jae
lock
dec
hlt
test
push
ins
cmp
ins
retf
ins
jae
mov
xchg
mov
xchg
das
jae
mov
out
mov
rcr
xor
jg
aam
jg
ins
jmp
jle
(bad)
cmp
mov
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
xor
xor
jae
lea
(bad)
ins
jae
inc
ins
jae
rcr
push
ins
and
mov
das
jae
retf
idiv
add
mov
pop
out
xor
lods
cmp
or
cld
lea
and
ins
jae
inc
ins
jae
rcr
push
ins
and
mov
das
jae
retf
xchg
jo
jae
lock
dec
hlt
test
pop
add
mov
mov
lea
dec
out
mov
mov
aam
jg
ins
jmp
dec
fwait
jge
ins
jae
sub
jg
call
mov
and
ja
xor
test
pop
out
push
pop
dec
(bad)
idiv
dec
ins
jae
in
test
call
ins
jae
mov
repnz
push
push
jae
retf
xor
mov
int3
lods
mov
mov
mov
out
mov
hlt
lods
mov
jb
mov
push
ins
jae
rcr
and
mov
imul
test
cdq
jl
clc
iret
xor
sub
shl
mov
and
adc
jae
mov
and
and
jg
test
jae
mov
xchg
mov
mov
mov
mov
repz
ins
jl
cmp
xchg
push
loopne
jg
xchg
mov
ret
xor
xor
test
ins
lock
dec
ins
retf
ins
jae
mov
adc
adc
xor
fmul
popa
or
cld
lea
movs
or
mov
jg
call
and
mov
sub
jnp
mov
test
aas
dec
ins
retf
ins
jae
mov
adc
mov
fmul
mov
ins
jae
lea
cli
lea
jae
mov
xchg
mov
lea
mov
jl
(bad)
xchg
mov
mov
cli
(bad)
mov
xchg
mov
dec
ins
jae
or
cli
cli
mov
lea
dec
in
into
jg
xchg
mov
jmp
cli
(bad)
js
cli
mov
dec
movs
jae
jo
mov
(bad)
jae
ret
xor
mov
adc
xchg
push
sub
jg
les
mov
jle
sbb
ret
mov
shr
sbb
(bad)
cli
(bad)
xchg
mov
mov
mov
mov
loopne
mov
fmul
jnp
call
mov
mov
sbb
cld
popf
mov
mov
mov
and
lods
cmp
jbe
jae
lea
stc
jbe
jae
inc
ins
jae
rcr
push
ins
and
lods
cmp
mov
mov
retf
idiv
test
inc
dec
ins
retf
ins
jae
mov
adc
xor
xor
jae
lea
dec
jbe
jae
inc
ins
jae
rcr
push
ins
and
mov
push
jae
retf
cmp
mov
dec
ins
repnz
mov
xchg
dec
ins
mov
mov
mov
inc
test
shr
xor
loopne
mov
sbb
das
jae
cld
xchg
mov
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
adc
xor
fmul
popf
ja
jae
lea
loope
ins
jae
inc
ins
jae
rcr
push
ins
and
mov
push
jae
retf
idiv
test
mov
and
jae
lock
dec
hlt
test
pop
add
mov
mov
lea
dec
out
mov
and
cmp
mov
mov
retf
xchg
jl
jae
lock
dec
hlt
test
push
push
inc
dec
ins
retf
ins
jae
mov
xchg
mov
xchg
das
jae
mov
out
mov
mov
aam
jg
ins
jmp
jle
and
xchg
mov
dec
ins
lock
arpl
xchg
pushf
push
jae
lock
dec
hlt
test
pop
add
mov
mov
lea
dec
out
mov
mov
aam
jg
ins
jmp
jle
(bad)
cmp
mov
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
xor
jg
push
jae
dec
hlt
test
mov
mov
and
cmp
je
jae
lea
push
xchg
das
jae
cld
xchg
mov
dec
ins
lock
mov
push
jae
lock
dec
hlt
test
pop
add
mov
mov
lea
dec
out
mov
and
cmp
mov
mov
retf
xchg
dec
push
jae
lock
dec
hlt
test
pop
add
mov
mov
lea
dec
out
mov
and
cmp
mov
mov
retf
(bad)
mov
test
dec
ins
jae
mov
adc
mov
fmul
cdq
jne
jae
lea
cli
xchg
xchg
mov
mov
mov
and
cmp
jne
jae
lea
stc
jne
jae
inc
ins
jae
rcr
push
ins
and
mov
push
jae
retf
pop
dec
mov
jg
fmul
in
jne
jae
lea
xor
jae
inc
ins
jae
rcr
push
ins
and
mov
push
jae
retf
(bad)
ds
jae
mov
xchg
mov
jne
jae
mov
call
outs
ins
jae
ret
xor
xor
test
ins
lock
dec
ins
retf
ins
jae
mov
adc
mov
fmul
jno
ins
jae
lea
mov
cld
xchg
mov
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
mov
fmul
test
lea
mov
sub
mov
aam
jg
ins
jmp
dec
fwait
add
sub
jg
call
mov
and
ja
xor
test
dec
ins
lock
or
retf
lea
dec
out
mov
and
jg
outs
sbb
ins
sbb
ins
xor
jno
jae
int3
test
xor
jae
cld
xchg
mov
dec
ins
sbb
rol
das
mov
pop
mov
or
(bad)
xchg
mov
mov
mov
pop
jle
jae
mov
ds
jmp
int3
or
lods
in
lahf
ja
ins
jae
mul
jb
in
mov
xchg
mov
mov
dec
jo
sub
dec
loopne
xor
dec
jg
in
dec
mov
mov
dec
add
(bad)
cli
mov
mov
dec
in
fwait
mov
jno
cmp
push
jbe
test
xor
daa
scas
cmp
dec
in
fwait
lods
mov
mov
jg
mov
cmp
or
jl
ins
repz
rcr
(bad)
cmps
xor
jg
xor
(bad)
movs
stc
jno
dec
ds
lds
in
dec
mov
mov
in
icebp
mov
inc
in
dec
jle
stc
mov
test
nop
mov
dec
push
cli
cli
lds
pop
xchg
stos
inc
movs
ret
test
cmp
ins
clc
sub
daa
jge
das
cli
jmp
inc
dec
dec
ins
cli
cli
xor
fcom
xor
jae
sbb
clc
repnz
cmp
les
jno
or
out
mov
mov
mov
mov
mov
fwait
jge
ins
jae
int3
adc
(bad)
fbstp
jae
shr
xor
mov
dec
out
ja
loopne
xor
clc
repnz
cmp
les
jno
or
out
mov
mov
mov
add
fwait
sar
int3
stc
mov
inc
ins
jae
pop
pop
jae
int3
leave
mov
jo
jae
sbb
jae
sbb
sbb
ins
jae
int3
(bad)
rcl
mov
jg
outs
jae
leave
test
mov
lock
inc
cmp
dec
mov
jo
xchg
mov
dec
ins
jae
(bad)
call
and
int3
(bad)
sbb
cld
stc
mov
mov
mov
mov
(bad)
div
mov
mov
mov
(bad)
call
and
retf
test
mov
inc
cmp
dec
mov
fist
xchg
lea
jno
jae
mov
mov
mov
test
xchg
mov
(bad)
call
and
mov
in
sti
mov
mov
int3
aad
xor
jae
lea
xchg
cli
mov
mov
aaa
jg
ins
mov
lods
xchg
mov
das
stos
not
dec
out
into
sti
mov
mov
jno
mov
mov
jae
mov
jg
loopne
(bad)
mov
mov
mov
xor
cli
in
nop
mov
mov
mov
and
jg
dec
sbb
ins
sbb
call
and
dec
ins
jp
inc
jmp
mov
loope
mov
dec
in
push
mov
mov
cld
stc
mov
or
add
xchg
lea
jle
jae
lea
cli
cmp
pop
(bad)
mov
loopne
xor
scas
cmp
dec
ins
cli
mov
and
sbb
ins
repz
cmp
test
mov
pop
mov
pop
dec
adc
inc
jg
out
into
out
mov
mov
sbb
ins
jae
jo
jae
and
jg
loopne
xor
les
ins
sbb
pop
scas
cmp
mov
mov
mov
out
mov
je
mov
sbb
in
icebp
mov
retf
xor
adc
dec
xchg
in
icebp
mov
rcr
jg
call
and
icebp
cli
ins
jg
call
mov
mov
mov
pop
jae
cld
leave
mov
dec
ins
mov
in
nop
mov
dec
out
jecxz
xchg
mov
ins
test
mov
cli
mov
mov
sub
mov
xchg
pop
ds
ror
jae
rcl
or
mov
mov
rcl
or
enter
cli
mov
mov
arpl
shr
xchg
call
scas
adc
enter
enter
scas
inc
fisub
mov
jl
sbb
(bad)
cmp
and
dec
ins
cli
mov
dec
ins
inc
mov
inc
stc
mov
or
sti
jns
imul
vpshaq
jl
jae
lea
or
cmp
push
jae
mov
jg
(bad)
sub
aas
sbb
cli
xchg
cli
mov
(bad)
sub
jo
cmp
das
mov
ds
or
(bad)
cmp
jl
sbb
jb
inc
fisub
mov
sub
sbb
(bad)
cmp
add
sbb
ins
fwait
test
jae
(bad)
in
pushf
sub
fstsw
jae
or
and
mov
cmp
hlt
or
sub
adc
xor
jae
enter
sbb
and
adc
int3
fwait
push
jno
div
aad
ja
ins
test
mov
cli
mov
mov
xor
ins
(bad)
cli
cmc
lea
test
or
push
dec
ins
cli
mov
fldcw
jg
call
cld
test
cld
dec
dec
ins
lock
push
xchg
(bad)
mov
xchg
mov
jns
jae
mov
xchg
test
xchg
xor
cwde
daa
mov
iret
lahf
mov
xor
ins
(bad)
cli
cmc
lea
test
test
dec
ins
jp
cmp
xchg
cli
mov
test
pop
jae
retf
jbe
sbb
cld
movs
xchg
xor
pop
jg
pop
mov
mov
and
jg
mov
mov
cli
call
loopne
dec
ins
and
push
out
ja
(bad)
das
mov
in
mov
jg
jae
mov
sbb
ins
jae
adc
jg
mov
mov
sub
push
xchg
stos
sbb
mov
test
test
mov
lock
or
xchg
or
jae
retf
(bad)
mov
in
push
mov
mov
jg
call
and
retf
xchg
test
jae
lock
dec
hlt
test
pop
add
(bad)
cli
dec
lea
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
loopne
jae
lock
jae
dec
hlt
test
test
xor
into
jg
xchg
mov
mov
out
mov
mov
aam
jg
ins
jmp
jns
(bad)
repnz
ins
xchg
xor
jae
lea
(bad)
pusha
popf
cli
mov
dec
loopne
jg
xchg
mov
mov
out
mov
mov
aam
jg
ins
jmp
jns
(bad)
repnz
ins
xchg
xor
jae
lea
gs
jae
inc
ins
jae
rcr
push
push
mov
aam
jg
ins
jmp
lea
or
ret
mov
dec
ins
lock
and
cmp
test
dec
lods
cmp
test
mov
jg
out
mov
rcr
mov
mov
aam
jg
ins
jmp
jns
(bad)
repnz
ins
xchg
xor
jae
lea
jne
das
jae
int3
ins
xchg
xor
jae
lea
or
jae
inc
ins
jae
rcr
push
imul
xchg
cmp
test
stc
inc
jg
out
mov
and
cmp
test
in
inc
jg
out
mov
rcr
mov
mov
aam
jg
ins
jmp
inc
fwait
popa
jnp
jae
sub
jg
call
mov
and
adc
jae
mov
and
pop
pop
jae
retf
pop
pusha
mov
jg
call
and
retf
xchg
test
jae
lock
dec
hlt
test
pop
add
(bad)
cli
dec
lea
dec
ins
lock
or
cli
dec
lea
dec
ins
lock
mov
pop
jae
lock
dec
hlt
test
pop
add
(bad)
cli
dec
lea
dec
ins
lock
or
cli
dec
lea
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
mov
call
and
retf
(bad)
mov
xchg
push
jae
call
and
addr16
jg
call
and
retf
xchg
push
pop
jae
lock
dec
hlt
test
pop
add
(bad)
cli
dec
lea
dec
ins
lock
or
cli
dec
lea
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
mov
call
and
retf
(bad)
jbe
jae
mov
mov
add
fwait
sar
jae
mov
call
outs
ins
jae
(bad)
shl
mov
and
pop
mov
jg
shl
mov
and
aam
jae
retf
xchg
xor
jae
lock
dec
hlt
test
pop
add
(bad)
cli
dec
lea
dec
ins
lock
or
cli
dec
lea
dec
ins
lock
or
xchg
je
jae
lock
dec
hlt
test
pop
add
(bad)
cli
dec
lea
dec
ins
lock
dec
ins
retf
ins
jae
mov
adc
dec
pop
jae
lock
jae
dec
hlt
test
test
xor
into
jg
xchg
mov
mov
out
mov
and
idiv
xchg
mov
mov
out
mov
and
jg
outs
sbb
ins
sbb
ins
xor
in
jg
in
adc
fs
loopne
jg
xchg
mov
mov
pop
jae
hlt
xchg
lods
xor
xchg
xor
mov
dec
xchg
mov
inc
jae
js
xor
in
and
ss
(bad)
movs
jmp
and
test
in
mov
xchg
mov
mov
(bad)
jecxz
xchg
mov
fwait
repnz
ret
sub
int
jg
out
ja
cmp
sar
xor
cli
cli
leave
xchg
mov
bound
das
mov
test
mov
repnz
and
cmp
dec
ins
cli
cli
jmp
jge
jg
call
and
and
jg
loopne
retf
mov
mov
and
scas
cmp
or
jge
ins
repz
test
test
not
dec
ins
jae
dec
ins
jae
(bad)
call
and
int3
(bad)
inc
arpl
div
xchg
(bad)
fbstp
mov
retf
jbe
(bad)
test
jmp
call
and
(bad)
call
and
int3
xchg
lea
ins
jae
mov
call
cli
xchg
cli
mov
(bad)
call
and
retf
dec
stos
test
xchg
mov
dec
ins
jae
int3
mov
jg
out
into
out
xchg
mov
jno
mov
mov
jae
mov
sbb
loopne
(bad)
mov
mov
mov
xor
cli
in
nop
mov
mov
mov
and
jg
dec
sbb
ins
sbb
call
and
dec
ins
jp
inc
jmp
mov
loope
mov
dec
in
jle
in
cmp
mov
or
add
xchg
lea
fs
jae
lea
cli
ss
mov
mov
test
sbb
push
dec
ins
cli
mov
and
add
ins
repz
ss
mov
mov
mov
pop
mov
jbe
ins
jae
dec
popf
jae
mov
in
push
mov
mov
dec
ins
jae
(bad)
call
and
mov
pop
jb
and
jecxz
mov
and
retf
inc
mov
jae
inc
jmp
(bad)
cli
lds
fwait
iret
mov
gs
inc
jmp
sbb
fsub
xor
mov
dec
ins
repnz
push
jae
(bad)
call
and
mov
aas
test
xchg
cli
mov
mov
fwait
xor
inc
mov
jg
jno
jg
cmp
jae
mov
out
mov
inc
lods
push
push
and
cmp
dec
ins
clc
loop
nop
mov
shr
jmp
xchg
mov
retf
xchg
push
out
jecxz
xchg
mov
mov
fsub
xor
mov
lea
nop
lods
push
jae
pop
test
ins
mov
aad
mov
(bad)
call
and
rcl
jg
fcom
xor
jae
cld
leave
mov
dec
ins
clc
cli
aad
mov
inc
(bad)
jg
xor
mov
imul
pop
ds
sar
lea
dec
ins
and
shr
cmp
xor
sbb
(bad)
sub
and
dec
ins
cli
mov
outs
ins
jae
mov
jae
mov
in
sub
dec
pop
jg
xchg
push
jae
cmp
sbb
and
les
(bad)
das
and
pop
out
xor
ins
sbb
jge
jg
in
adc
popa
ins
jae
mov
xchg
test
das
pop
test
pop
dec
ins
and
jg
sub
mov
dec
jge
jg
stc
push
jg
cmp
aas
sub
dec
dec
ins
sbb
sbb
mov
jae
shr
mov
js
cwde
cmp
xchg
jl
dec
loopne
jle
xchg
mov
pop
test
mov
jg
int3
ins
add
xchg
mov
lea
xor
adc
jae
dec
cmp
test
mov
ror
cmp
cli
ins
(bad)
mov
or
sub
cmp
das
jae
or
and
enter
dec
ins
(bad)
cmp
cs
dec
xchg
inc
(bad)
call
inc
jae
inc
fidiv
or
xchg
test
dec
loopne
mov
test
push
dec
ins
lock
sbb
jae
or
mov
pop
loopne
ins
fwait
test
jae
mov
lea
sub
jmp
lock
inc
cmp
cmp
test
dec
call
and
jge
ins
sbb
push
sbb
ins
sbb
dec
ins
jae
dec
pop
jae
dec
pop
arpl
shr
mov
stos
sbb
pop
inc
cmp
dec
test
push
dec
ins
sbb
pop
inc
cmp
dec
test
dec
ins
sbb
pop
inc
cmp
dec
test
dec
ins
sbb
pop
inc
cmp
dec
test
dec
ins
sbb
pop
inc
cmp
dec
test
dec
ins
repnz
xlat
cmp
and
jns
inc
push
(bad)
sub
xchg
jo
jae
and
jns
inc
pop
(bad)
sub
xchg
pusha
inc
jae
and
jns
inc
out
jmp
jg
ins
and
jns
inc
or
das
jae
inc
inc
jae
rcr
jle
pop
inc
cmp
dec
test
jle
pop
inc
cmp
dec
test
jle
pop
inc
cmp
dec
test
jle
pop
inc
cmp
dec
test
retf
popa
ins
jae
scas
in
mov
stos
sub
sub
add
call
mov
fwait
loop
ins
fwait
cmp
jae
imul
hlt
aas
dec
pop
pop
dec
test
dec
ins
sbb
or
pop
outs
ins
jae
jne
xor
jge
aas
dec
pop
pop
dec
test
ins
repnz
gs
and
xor
xchg
push
jg
into
push
loopne
ins
sbb
sub
inc
push
(bad)
sub
xchg
movs
dec
jae
and
xor
mov
jae
or
outs
into
sub
inc
arpl
sub
jae
and
xor
fst
dec
into
or
or
outs
into
sub
inc
push
(bad)
sub
xchg
in
dec
jae
and
xor
loope
jg
into
pop
out
ins
sbb
sub
inc
pop
(bad)
sub
xchg
enter
rcl
xor
fwait
sbb
push
repnz
jge
aas
dec
pop
pop
dec
test
dec
ins
sub
sbb
xchg
cld
movs
jns
sub
cdq
or
push
in
pushf
mov
mov
sbb
fst
sbb
mov
out
mov
jmp
das
mov
in
test
push
ins
jae
or
and
mov
pop
jae
jl
in
ds
pop
jae
ret
push
or
and
or
pop
cmp
ins
sbb
in
and
xchg
mov
jg
mov
jge
ins
fwait
inc
outs
ins
jae
or
ins
mov
repnz
ins
and
bound
cmp
or
adc
dec
ins
repz
and
test
jg
gs
jg
into
ja
or
xchg
cli
mov
jge
xor
ins
mov
int
jg
std
jb
dec
out
xchg
cmp
or
adc
inc
ins
repz
and
test
jg
test
adc
or
jg
outs
sbb
ins
sbb
ins
sbb
ins
sbb
shl
dec
pop
jae
dec
pop
jnp
pop
test
ins
cli
mov
jns
inc
jnp
sub
xchg
sub
jae
and
dec
jge
xor
ins
mov
int
jg
jge
dec
dec
ins
jae
sub
ins
jae
and
test
dec
add
sbb
xor
pmaxub
ins
repnz
jae
and
dec
jge
xor
ins
mov
int
jg
jge
pop
dec
ins
jae
xor
pop
pop
dec
ins
jae
and
cmp
or
jg
jno
jg
into
rcr
or
jg
pop
inc
loopne
ins
sbb
pop
aaa
fisttp
ins
sbb
mov
sar
ins
sbb
ins
jae
sbb
sbb
dec
test
jae
sub
adc
(bad)
sub
adc
jmp
add
sbb
dec
ins
jae
popa
add
sbb
xchg
das
jae
xchg
mov
jg
ins
fwait
aad
ins
jae
pop
repnz
ins
mov
repnz
ins
mov
int
jg
or
sbb
(bad)
jae
dec
pop
addr16
dec
ins
repz
and
mul
mov
into
fwait
loop
ins
repnz
and
test
pop
or
sbb
sbb
xchg
das
jae
dec
add
mov
lock
jno
jg
pop
jae
jl
in
ds
pop
jae
jl
sar
dec
ins
sbb
(bad)
jae
dec
pop
or
dec
ins
repz
and
mul
mov
into
repz
ins
repnz
and
dec
jge
xor
ins
mov
int
jg
inc
jb
dec
pop
dec
pop
jecxz
jae
and
jae
dec
add
sbb
int3
mov
jg
ins
fwait
mov
ins
jae
repnz
inc
mov
jl
in
ds
pop
jae
jl
sar
dec
pop
arpl
dec
ins
sbb
dec
ins
jae
dec
ins
jae
and
test
movs
or
jg
loope
jg
into
jecxz
or
xchg
in
adc
(bad)
sub
adc
jmp
add
sbb
pop
ins
jae
and
jg
add
sbb
dec
test
dec
ins
ror
call
xchg
inc
dec
(bad)
sub
adc
jmp
pop
adc
push
ins
jae
and
jae
dec
cmp
jae
xchg
mov
jg
ins
fwait
jno
ins
jae
jns
xor
ins
mov
repnz
ins
mov
int
jg
jge
or
pop
js
jae
and
sbb
ins
and
pop
mov
jg
mov
cmp
pushf
dec
jae
jmp
cmp
dec
pop
jae
jl
sar
dec
pop
arpl
dec
ins
sbb
dec
ins
jae
dec
ins
jae
and
cmp
or
jg
icebp
push
jg
into
out
or
jg
pop
inc
loopne
ins
sbb
pop
adc
or
and
jg
add
sbb
ins
jae
sbb
sbb
das
jae
dec
outs
jae
mov
into
neg
or
jg
pop
inc
loopne
ins
sbb
pop
adc
or
addr16
jae
dec
add
sbb
ins
jae
sbb
sbb
das
jae
dec
outs
jae
mov
into
outs
jmp
cli
mov
jge
xor
ins
mov
int
jg
jne
push
and
addr16
dec
ins
repz
and
jb
or
jg
ins
jae
lods
dec
jae
jmp
cmp
dec
pop
jae
jl
sar
sub
ins
sbb
ins
jae
sbb
sbb
das
jae
dec
outs
jae
mov
into
push
loopne
ins
sbb
pop
inc
loopne
ins
sbb
pop
aaa
fisttp
ins
sbb
div
dec
add
sbb
ins
jae
sbb
sbb
dec
test
pop
dec
ins
shl
jmp
add
pop
xchg
stos
fwait
clc
mov
mov
pop
movs
mov
ror
sar
arpl
xchg
inc
xchg
stos
sbb
cmp
fwait
push
mov
add
and
or
arpl
inc
repnz
xchg
pop
xchg
stos
sbb
pop
jnp
or
jns
ins
jae
or
and
mov
pop
jae
jl
in
ds
pop
jae
ret
push
or
and
or
pop
cmp
ins
sbb
in
and
xchg
mov
jg
mov
jge
ins
fwait
lods
imul
jg
ins
mov
repnz
ins
and
bound
cmp
or
adc
dec
ins
repz
and
movs
or
jg
icebp
push
jg
into
ja
or
nop
and
jae
and
dec
jge
xor
ins
mov
int
jg
inc
jb
dec
out
xchg
cmp
or
adc
inc
ins
repz
and
test
jg
xor
adc
or
jg
outs
sbb
ins
sbb
ins
sbb
ins
sbb
shl
dec
pop
jae
dec
pop
jnp
pop
test
pop
dec
ins
cli
mov
jns
inc
jnp
sub
xchg
mov
jae
and
dec
jge
xor
ins
mov
int
jg
or
sbb
jns
imul
jae
sbb
sbb
xchg
das
jae
dec
test
aam
jae
cmps
je
jg
add
sbb
cs
dec
cmp
jae
cmp
xor
ins
sbb
ins
jae
jl
out
ds
test
pusha
dec
ins
repz
fxch
xor
sbb
dec
pop
jb
pop
ins
jae
mov
fwait
loop
ins
fwait
add
pop
pop
jae
dec
add
mov
lock
or
pop
jae
jl
in
ds
pop
jae
jl
sar
dec
ins
sbb
jns
add
sbb
sbb
xchg
das
jae
dec
test
dec
ins
sar
call
ins
mov
mov
jae
jl
in
ds
pop
jae
jl
sar
dec
ins
sbb
jns
ror
jae
dec
ins
repz
and
mul
mov
into
pop
loopne
ins
fwait
pop
mov
xchg
inc
dec
(bad)
sub
adc
jmp
add
sbb
and
jg
add
sbb
das
jae
xchg
mov
jg
ins
fwait
movs
push
ins
jae
cmp
ins
mov
repnz
ins
mov
int
jg
jge
sbb
jmp
dec
ins
sbb
ins
and
or
test
dec
pop
jae
call
pop
jmp
ins
test
mov
jae
jl
in
ds
pop
jae
jl
sar
dec
pop
arpl
mov
jae
and
jae
dec
pop
pop
pop
dec
ins
jae
and
cmp
or
jg
xor
dec
into
and
ins
sbb
pop
inc
loopne
ins
sbb
pop
aaa
fisttp
ins
sbb
cmp
(bad)
dec
ins
jae
jmp
ins
jae
sbb
sbb
dec
test
dec
ins
shr
jmp
dec
(bad)
sub
adc
jmp
add
sbb
push
add
sbb
nop
das
jae
xchg
mov
jg
ins
fwait
xchg
push
ins
jae
xor
ins
mov
repnz
ins
mov
int
jg
jge
or
pop
mov
jae
and
jg
ins
and
push
mov
jg
mov
cmp
clc
jo
jg
int
cmp
jl
in
ds
pop
jae
jl
sar
retf
ins
jae
and
imul
jae
sbb
sbb
das
jae
dec
outs
jae
mov
into
outs
jmp
jae
and
dec
jge
xor
ins
mov
int
jg
jne
push
and
sbb
ins
jae
sbb
sbb
das
jae
dec
outs
jae
mov
into
pop
loopne
ins
sbb
pop
inc
loopne
ins
sbb
pop
adc
or
and
sbb
and
jg
in
and
xchg
mov
jg
ins
test
jge
ins
fwait
jns
ins
jae
imul
mov
repnz
ins
mov
int
jg
jp
in
ins
jae
or
and
jg
in
and
stos
mov
jg
xchg
stos
cmp
test
jg
cmc
sar
mov
retf
cmps
sbb
mov
stos
fwait
movs
mov
movs
mov
ror
sub
dec
inc
mov
mov
stos
sbb
in
jae
dec
pop
jo
dec
pop
jo
dec
ins
jae
mov
jnp
aam
jae
shr
out
dec
ins
jae
dec
cmp
test
jae
sub
jae
or
ja
dec
ins
cli
xchg
in
repnz
and
or
and
or
and
std
das
jae
dec
ins
jae
mov
out
mov
jo
(bad)
or
pop
jae
cmp
sbb
sbb
sbb
cmp
fwait
mov
lea
cmp
pop
ja
dec
loopne
xchg
xchg
push
outs
and
cmp
dec
in
fwait
add
xchg
mov
lea
xchg
cli
mov
mov
cli
call
and
neg
pop
popa
sub
in
(bad)
cmps
fidiv
iret
or
cli
dec
xchg
mov
dec
ins
fwait
test
jae
inc
ins
jae
rcr
cs
mov
jl
ret
jae
int3
ins
mov
push
ins
jae
mov
in
push
or
pop
xchg
fnsave
jg
call
and
leave
adc
stc
das
jae
int3
ins
mov
push
ins
jae
xor
ja
pop
add
(bad)
cli
dec
xchg
mov
dec
ins
cli
(bad)
mov
cmp
sbb
das
jae
int3
ins
mov
pop
ins
jae
xor
jne
pop
add
(bad)
cli
dec
xchg
mov
dec
ins
repz
or
cmp
mov
mov
mov
in
push
add
pop
retf
jg
call
and
rcr
add
iret
ret
loopne
jg
xchg
mov
mov
in
push
add
pop
xchg
fdiv
jg
call
and
leave
adc
sti
das
jae
int3
ins
mov
pop
ins
jae
xor
jg
pop
add
(bad)
cli
dec
xchg
mov
dec
ins
repz
push
sar
xchg
mov
mov
in
mov
xchg
mov
(bad)
in
push
add
pop
sbb
xor
call
and
and
jg
das
stos
cmp
or
cli
dec
xchg
mov
or
xchg
lods
xchg
mov
jb
xor
rol
cmp
or
and
jp
mov
out
mov
rcr
xor
xor
mov
imul
push
out
ja
mov
sbb
mov
in
idiv
ins
jae
adc
test
mov
lock
inc
pop
jae
mov
xor
jg
in
(bad)
movs
push
jnp
dec
ds
ds
test
and
dec
dec
jg
add
(bad)
cli
movs
call
dec
ins
fwait
mov
inc
ins
jae
rcr
mov
mov
mov
jl
sar
das
jae
int3
add
ins
jae
hlt
sahf
mov
and
not
mov
in
into
mov
jl
cwde
sti
das
jae
int3
add
ins
jae
in
jl
jg
mov
cli
lods
call
mov
sbb
dec
fidiv
jg
call
and
leave
rol
or
push
or
cli
movs
call
dec
ins
repz
mov
jge
xor
call
and
leave
rol
or
cmp
or
cli
movs
call
dec
ins
cli
(bad)
mov
mov
jnp
pop
add
(bad)
cli
movs
call
dec
ins
repz
mov
ret
jg
call
and
leave
rol
or
fxch
or
cli
movs
call
dec
ins
repz
mov
sbb
jg
call
and
rcr
mov
rol
or
fwait
int3
or
cli
movs
call
dec
ins
repz
mov
dec
fnstenv
jg
call
and
leave
rol
or
push
retf
or
cli
movs
call
dec
ins
sbb
jmp
add
xchg
mov
mov
mov
xor
xor
loop
cmp
mov
lock
mov
sahf
mov
retf
mov
push
jo
dec
in
popf
inc
jae
mov
mov
xor
mov
xchg
pop
jae
cmp
xor
sub
xor
lahf
xchg
call
call
xchg
pop
sub
leave
ror
jo
push
jb
dec
in
into
xor
pop
jle
ins
mov
mov
mov
dec
ins
test
mov
cli
mov
mov
and
jl
xor
call
and
retf
cld
hlt
xchg
mov
mov
xlat
mov
push
mov
mov
mov
push
inc
mov
mov
mov
mov
and
dec
out
dec
pop
aam
jae
cmp
sbb
call
mov
jg
call
and
rcr
out
call
mov
jg
call
and
retf
xchg
add
ins
(bad)
cli
mov
mov
dec
ins
retf
int3
adc
in
scas
mov
loopne
xor
stos
cmp
mov
mov
mov
add
(bad)
cli
mov
mov
dec
ins
lock
mov
mov
mov
loopne
xor
and
int3
xchg
mov
xchg
das
jae
int3
xchg
mov
pop
ins
jae
lea
jg
call
and
and
xchg
das
jae
int3
xchg
pop
aam
mov
lea
mov
dec
ins
(bad)
cli
mov
mov
mov
xor
cli
mov
mov
shr
mov
ror
jo
pop
jb
dec
xchg
mov
int3
xor
mov
xor
fs
out
mov
and
sar
xchg
mov
mov
loopne
xor
addr16
in
stos
mov
out
stos
mov
push
pop
or
imul
int
pop
inc
xchg
(bad)
stos
mov
mov
add
rcr
mov
fmul
cli
mov
mov
or
cli
mov
mov
dec
ins
lock
mov
mov
mov
in
mov
xchg
mov
hlt
xchg
lea
pop
ins
jae
hlt
movs
test
pop
cmp
aas
mov
in
mov
(bad)
bound
loopne
xor
xchg
pop
ins
jae
int3
xchg
mov
pop
ins
jae
hlt
xchg
lea
mov
adc
test
outs
dec
ins
(bad)
cli
mov
mov
cld
cdq
mov
or
jg
ins
fwait
and
mov
loopne
xor
(bad)
xchg
mov
mov
retf
test
mov
mov
mov
enter
dec
ins
sbb
ds
xchg
jl
jae
adc
and
movs
mov
dec
cmp
call
enter
and
push
(bad)
ror
dec
cli
cmps
js
cli
mov
dec
pop
jae
dec
ins
ins
jg
dec
popa
jg
in
(bad)
sbb
mov
pop
jb
inc
js
jg
in
cwde
loope
ins
jae
or
ror
sub
mov
dec
stc
jae
dec
in
mov
xchg
mov
mov
fwait
sbb
mov
jae
and
sar
dec
ins
fwait
dec
pop
ins
jae
mov
in
cwde
mov
dec
ins
jae
(bad)
call
and
pop
ins
jae
dec
add
(bad)
cli
clc
or
xchg
lock
dec
ins
jl
push
ins
jae
retf
retf
or
scas
ins
sbb
cmp
std
das
jae
mov
imul
ins
leave
lods
add
arpl
shr
mov
pop
mov
mov
mov
rcl
or
jb
jg
add
ins
jl
hlt
ficomp
xor
jge
test
mov
push
inc
mov
mov
mov
or
xchg
jb
int3
ficomp
or
ins
jae
int3
(bad)
sahf
xor
jae
mov
mov
loopne
mov
movs
xchg
mov
call
and
fxch
xor
mov
mul
movs
xchg
mov
mov
in
cmp
ins
jae
dec
loopne
loopne
xchg
mov
(bad)
call
and
(bad)
call
and
(bad)
call
and
retf
adc
movs
xchg
mov
mov
pop
jb
jl
jae
enter
dec
ins
sbb
xchg
das
jae
fxch
xor
stos
stos
cmp
or
fstp
jae
hlt
setge
lahf
das
jae
push
or
pop
std
mov
jg
std
sar
or
psubsw
jae
cmp
jae
shl
ret
mov
or
bound
jae
das
enter
das
jae
fxch
xor
stos
stos
cmp
or
cmp
hlt
(bad)
sahf
xor
jae
push
jae
mov
mov
jg
std
sar
or
jg
sub
xchg
pop
jle
jg
test
sahf
xor
jae
inc
ins
jae
mov
mov
mov
and
jg
ins
sbb
ins
xor
dec
repz
cmc
jl
dec
in
retf
and
jg
ins
and
mov
retf
add
repnz
and
int3
fcomp
inc
ins
jae
(bad)
fcomp
or
dec
jle
sbb
(bad)
pop
cmp
mov
mov
pop
jae
or
and
or
or
test
push
sub
mov
retf
add
repnz
and
int3
fcomp
pop
ins
jae
(bad)
fcomp
or
dec
jle
sbb
(bad)
pop
cmp
mov
mov
pop
jae
or
and
or
or
test
dec
ins
mov
std
test
dec
ins
retf
stos
cmp
mov
xchg
mov
int3
fstp
repnz
mov
lahf
call
in
mov
push
cli
cmp
ins
sbb
sar
in
stos
and
jg
pop
jae
lock
shr
(bad)
mov
stos
mov
and
in
pop
ins
jae
or
mov
cmc
outs
jae
dec
in
push
xchg
in
mov
dec
ins
mov
sub
ret
sbb
sbb
pop
inc
loopne
ins
sbb
ins
sbb
ins
sbb
ins
sbb
cmps
jae
test
xor
mov
xchg
dec
jge
jg
ins
in
ds
add
sbb
ins
fwait
cmp
dec
test
int3
mov
lock
dec
ins
dec
jg
ins
repz
or
gs
ins
jae
aaa
mov
jg
test
ins
cli
cli
in
mov
dec
ins
fwait
mov
dec
cmp
mov
mov
ja
dec
ins
cli
cmps
pusha
mov
mov
mov
and
int3
rcr
std
das
jae
xor
(bad)
cmp
dec
in
lock
jp
cmp
lock
and
stos
jbe
std
das
jae
dec
ins
jae
ffree
mov
shr
sbb
jae
dec
add
sbb
ins
fwait
jno
ins
jae
mov
loopne
xlat
cmps
xchg
mov
and
jg
jb
aas
dec
pop
jae
dec
test
and
jg
ins
sbb
dec
xchg
inc
jg
sub
xchg
adc
jg
jne
cmp
ins
jae
mov
jg
loopne
fwait
sbb
sbb
ins
sbb
sub
jg
fs
pushf
xor
jg
in
(bad)
movs
push
jno
dec
ds
sub
dec
ins
jae
or
lock
imul
dec
ins
jae
inc
out
mov
jmp
call
ins
jae
inc
jmp
dec
ins
dec
ins
jae
push
push
bound
ins
jl
in
jae
je
jb
dec
(bad)
test
aam
jae
retf
retf
or
jo
mov
xchg
fnstenv
jg
push
xchg
xor
mov
mov
mov
mov
mov
movs
nop
mov
mov
mov
shr
xor
mov
mov
mov
inc
lods
jl
int3
ins
jae
(bad)
call
and
dec
test
cmp
nop
mov
mov
lock
dec
out
scas
mov
mov
mov
push
out
fwait
mov
mov
mov
ret
xor
mov
and
lods
nop
mov
mov
and
int3
lea
cmps
mov
mov
and
jg
pop
aaa
fisttp
ins
fwait
aad
ins
jae
mov
out
dec
sbb
das
jae
inc
jmp
rcr
std
das
jae
and
xor
call
sub
in
dec
paddw
jae
cmp
and
adc
dec
paddw
jae
inc
call
mov
fnstenv
jg
adc
add
ins
jae
mov
mov
mov
jae
or
cmp
neg
dec
ins
jae
dec
test
ins
call
repnz
sub
inc
xchg
push
ja
jns
jg
aad
push
dec
ins
test
mov
cli
mov
dec
out
imul
mov
and
jg
push
pop
cmp
pop
fimul
ins
pop
inc
jb
inc
out
ins
pop
dec
jb
and
ins
pop
push
jb
out
or
pop
jb
pmaxub
ins
pop
arpl
rcr
or
imul
loopne
ins
pop
jae
push
jl
xchg
imul
ins
mov
pop
test
cli
mov
mov
or
outs
jb
rcr
or
ja
push
push
jb
frstor
dec
xchg
push
outs
mov
add
mov
pop
test
jae
ins
retf
push
gs
jae
scas
in
cmps
mov
mov
mov
(bad)
mov
retf
xor
mov
inc
ins
jae
int3
test
sti
push
ins
jae
pop
imul
xchg
pop
xchg
stos
sbb
int3
ins
mov
mov
cmp
mov
mov
dec
sbb
ins
sbb
das
jae
dec
test
dec
ins
mov
lock
imul
dec
ins
cli
xchg
cli
mov
mov
sti
cli
mov
call
jae
je
(bad)
cmp
shr
jg
xchg
jae
dec
loopne
jle
xchg
mov
mov
neg
or
stc
inc
ins
jae
les
mov
mov
jle
sbb
bound
ins
sbb
test
jae
aam
mov
fist
dec
xor
jae
dec
add
sbb
movs
jns
dec
xchg
inc
sti
call
addr16
mov
aad
inc
dec
ins
test
mov
cli
mov
mov
and
int3
cwde
mov
xchg
das
jae
int3
cwde
mov
inc
ins
jae
lea
or
repnz
ins
mov
push
clc
xor
cmp
mov
mov
dec
sbb
ins
sbb
das
jae
dec
test
push
clc
xor
imul
dec
ins
(bad)
repnz
xchg
mov
leave
push
jb
cmp
lock
push
adc
scas
mov
fwait
pop
inc
ins
jae
jl
out
dec
test
dec
ins
jae
int3
ins
mov
inc
fcomi
jg
xchg
mov
int
jb
mov
dec
dec
xor
dec
sbb
ins
sbb
dec
test
dec
push
clc
xor
std
jp
dec
test
jnp
ins
repz
dec
xchg
mov
mov
mov
pop
retf
inc
mov
mov
idiv
xchg
mov
(bad)
call
and
fs
jg
call
and
retf
pop
mov
jae
(bad)
call
and
dec
test
dec
xchg
mov
dec
pop
jae
mov
fwait
adc
jl
sar
dec
ins
call
sbb
loopne
jle
xchg
mov
(bad)
call
and
fs
jg
call
and
retf
pop
mov
jae
(bad)
call
and
dec
test
ja
ins
repz
mov
dec
pop
jae
loope
xor
ins
fwait
jge
ins
jae
jl
in
ds
test
ja
ins
call
pop
mov
mov
idiv
xchg
mov
(bad)
call
and
jmp
xor
call
and
retf
pop
mov
jae
(bad)
call
and
dec
test
ins
repz
mov
dec
pop
jae
and
fwait
in
ins
jae
jl
in
ds
test
dec
ins
call
ins
mov
or
dec
jle
sbb
pop
and
jg
inc
movs
cmp
sub
jae
mov
pop
loopne
ins
fwait
ins
inc
ins
jae
dec
outs
jae
(bad)
mov
jae
je
(bad)
xchg
mov
mov
mov
adc
jo
push
adc
gs
fwait
pop
inc
ins
jae
jl
in
ds
test
mov
int3
xchg
lea
mov
mov
rcl
cli
dec
xchg
mov
mov
mov
and
cmp
mov
mov
mov
out
mov
and
idiv
xchg
mov
mov
push
loopne
ins
fwait
cmp
hlt
ins
mov
and
jg
jl
cmp
in
jae
mov
push
loopne
ins
fwait
and
add
call
jae
je
(bad)
xchg
mov
mov
mov
adc
jo
push
adc
cmps
mov
fwait
adc
jae
jl
in
ds
test
dec
ins
call
xchg
lea
dec
xchg
mov
leave
push
jb
cmp
jl
fcom
mov
loope
mov
in
repnz
ins
mov
mov
add
(bad)
cli
mov
test
ins
lock
dec
ins
test
mov
clc
cli
mov
stos
sbb
ins
sbb
ins
sbb
ins
jae
or
fwait
jmp
int3
cdq
lea
dec
pop
jae
cld
cdq
lea
dec
ins
repz
cmp
xor
sbb
inc
pop
jmp
in
dec
jle
sbb
repnz
and
jns
xor
fadd
movs
dec
ins
jae
dec
loopne
(bad)
mov
mov
and
(bad)
cmp
lea
dec
ins
(bad)
repnz
movs
mov
leave
push
jb
cmp
sbb
clc
add
lock
cld
cdq
lea
dec
ins
sbb
call
and
or
retf
mov
dec
xchg
(bad)
mov
imul
or
ror
adc
dec
pop
jae
dec
add
sbb
sub
jae
shr
xor
nop
mov
mov
cli
mov
and
retf
mov
dec
loopne
out
jmp
jae
adc
mov
dec
loopne
(bad)
mov
mov
or
retf
mov
dec
pop
jae
int3
popf
mov
and
(bad)
mov
imul
mov
fwait
or
dec
add
cmp
dec
in
push
mov
mov
dec
pop
ja
and
adc
cmp
or
jle
ins
repz
iret
loope
or
imul
sub
xchg
pushf
push
imul
xchg
test
mov
pop
xchg
push
imul
mov
inc
test
and
movs
mov
dec
cmp
call
clc
or
adc
cli
xchg
cli
mov
dec
ins
jae
inc
call
lock
jl
mov
jg
pop
neg
or
je
pop
fwait
loop
ins
fwait
loope
ins
jae
mov
xchg
test
loop
ins
push
je
pop
repz
ins
fwait
std
dec
ins
jae
jl
sar
jl
in
ds
test
dec
ins
dec
dec
repnz
data16
clc
xor
xor
dec
in
mov
stos
dec
dec
push
clc
xor
data16
repnz
sub
inc
push
(bad)
sub
or
inc
pop
(bad)
sub
xchg
imul
or
imul
add
or
or
inc
xchg
aam
jae
pop
imul
or
pusha
leave
push
add
or
or
inc
sti
call
outs
jae
mov
mov
cmp
push
inc
xchg
aam
jae
dec
out
pop
fsubr
sar
push
push
in
ds
push
inc
push
(bad)
sub
or
outs
pop
(bad)
sub
(bad)
cmps
mov
inc
arpl
sub
outs
jg
sub
in
ds
sbb
push
adc
inc
pop
(bad)
sub
or
outs
push
shr
sar
push
jno
ds
fs
pop
xchg
push
imul
and
jg
xchg
mov
jg
xor
jg
xchg
push
ja
das
jae
fldcw
jg
xchg
push
jae
das
jae
fldcw
jg
xchg
push
outs
mov
ins
jae
dec
xchg
push
imul
jae
dec
xchg
push
pop
mov
ins
jae
dec
xchg
push
push
mov
ins
jae
dec
xchg
push
dec
mov
ins
jae
dec
xchg
push
dec
mov
ins
jae
dec
cmp
call
jae
mov
dec
pop
cmp
sbb
xchg
xor
mov
out
mov
shr
jbe
sbb
mov
cwde
jle
in
dec
pop
cmp
(bad)
int
inc
lods
pop
jp
xchg
push
or
shl
sbb
mov
pop
mov
ins
fwait
mov
dec
cmp
jg
test
mov
sub
mov
xchg
dec
jge
jg
ins
arpl
call
arpl
push
cwde
push
(bad)
call
jae
dec
out
pop
inc
pop
mov
mov
mov
mov
out
pop
inc
sti
clc
add
sbb
jmp
inc
ins
jae
dec
xchg
push
aas
mov
ins
jae
dec
xchg
push
cmp
ins
jae
dec
xchg
push
aaa
mov
ins
jae
dec
xchg
push
xor
ins
jae
dec
xchg
push
das
mov
ins
jae
dec
xchg
push
sub
ins
jae
dec
xchg
push
daa
mov
ins
jae
dec
xchg
push
and
ins
jae
dec
xchg
push
pop
mov
ins
jae
dec
xchg
push
sbb
ins
jae
dec
xchg
push
pop
mov
ins
jae
dec
xchg
push
adc
ins
jae
dec
xchg
push
bts
out
fldcw
jg
xchg
push
or
ins
jae
dec
xchg
push
pop
mov
ins
jae
dec
xchg
push
add
ins
jae
dec
xchg
push
(bad)
mov
ins
jae
dec
xchg
push
sti
mov
ins
jae
dec
xchg
push
idiv
ins
jae
dec
xchg
push
repz
ins
jae
dec
xchg
push
out
mov
ins
jae
dec
xchg
push
jmp
das
jae
fldcw
jg
xchg
push
out
das
jae
fldcw
jg
xchg
push
jecxz
das
jae
fldcw
jg
xchg
push
fistp
ins
jae
dec
xchg
push
fstp
ins
jae
dec
xchg
push
xlat
mov
ins
jae
dec
xchg
push
sar
ins
jae
dec
xchg
push
iret
mov
ins
jae
dec
xchg
push
retf
mov
ins
jae
dec
xchg
push
(bad)
mov
ins
jae
dec
xchg
push
ret
mov
ins
jae
dec
xchg
push
mov
fldcw
jg
xchg
push
mov
fldcw
jg
xchg
push
mov
das
jae
fldcw
jg
xchg
push
mov
das
jae
fldcw
jg
xchg
push
scas
mov
ins
jae
dec
xchg
push
stos
mov
ins
jae
dec
xchg
push
cmps
mov
ins
jae
dec
xchg
push
mov
fldcw
jg
xchg
push
lahf
mov
ins
jae
dec
xchg
push
fwait
mov
ins
jae
dec
xchg
push
xchg
mov
ins
jae
dec
xchg
push
xchg
mov
ins
jae
dec
xchg
push
xchg
ins
jae
dec
xchg
push
cmp
jae
dec
xchg
push
jg
das
jae
fldcw
jg
xchg
push
jnp
das
jae
fldcw
jg
xchg
push
ja
das
jae
fldcw
jg
xchg
push
jae
das
jae
fldcw
jg
xchg
push
outs
mov
ins
jae
dec
xchg
push
imul
jae
dec
xchg
push
addr16
ins
jae
dec
xchg
push
arpl
ins
jae
dec
xchg
push
pop
mov
ins
jae
dec
xchg
push
pop
mov
ins
jae
dec
xchg
push
push
mov
ins
jae
dec
xchg
push
push
mov
ins
jae
dec
xchg
push
dec
mov
ins
jae
dec
xchg
push
dec
mov
ins
jae
dec
xchg
push
inc
mov
ins
jae
dec
xchg
push
inc
mov
ins
jae
dec
xchg
push
aas
mov
ins
jae
dec
xchg
push
cmp
ins
jae
dec
xchg
push
aaa
mov
ins
jae
dec
xchg
push
xor
ins
jae
dec
xchg
push
das
mov
ins
jae
dec
xchg
push
sub
ins
jae
dec
xchg
push
daa
mov
ins
jae
dec
xchg
push
and
ins
jae
dec
xchg
push
pop
mov
ins
jae
dec
xchg
push
sbb
ins
jae
dec
xchg
push
bsr
jae
fldcw
jg
xchg
push
or
ins
jae
dec
xchg
push
pop
mov
ins
jae
dec
xchg
push
add
ins
jae
dec
xchg
push
(bad)
mov
ins
jae
dec
xchg
push
repz
ins
jae
dec
xchg
push
out
mov
ins
jae
dec
xchg
push
jmp
das
jae
fldcw
jg
xchg
push
out
das
jae
fldcw
jg
xchg
push
jecxz
das
jae
fldcw
jg
xchg
push
fistp
ins
jae
dec
xchg
push
fstp
ins
jae
dec
xchg
push
xlat
mov
ins
jae
dec
xchg
push
sar
ins
jae
dec
xchg
push
(bad)
mov
ins
jae
dec
xchg
push
ret
mov
ins
jae
dec
xchg
push
mov
fldcw
jg
xchg
push
mov
fldcw
jg
xchg
push
mov
das
jae
fldcw
jg
xchg
push
mov
das
jae
fldcw
jg
xchg
push
scas
mov
ins
jae
dec
xchg
push
stos
mov
ins
jae
dec
xchg
push
cmps
mov
ins
jae
dec
xchg
push
mov
fldcw
jg
xchg
push
lahf
mov
ins
jae
dec
xchg
push
fwait
mov
ins
jae
dec
xchg
push
xchg
mov
ins
jae
dec
xchg
push
xchg
mov
ins
jae
dec
xchg
push
(bad)
mov
ins
jae
dec
xchg
push
mov
ins
jae
dec
xchg
push
xchg
ins
jae
dec
xchg
push
cmp
jae
dec
