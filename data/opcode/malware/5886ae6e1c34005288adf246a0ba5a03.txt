daa
mov
rcl
xor
push
popa
inc
sub
xor
mov
inc
aaa
lods
push
inc
and
lahf
pop
es
and
inc
jmp
popa
push
scas
xor
es
jmp
popf
adc
movs
call
adc
mov
xchg
popf
sub
movs
push
ss
fincstp
jb
aaa
es
popa
xor
dec
mov
fs
or
dec
push
or
push
push
mov
popa
outs
jns
cmp
jae
test
jno
jmp
call
out
popa
lds
xor
mov
push
popa
xor
push
call
repnz
in
ja
lahf
and
lods
gs
mov
fstp
in
es
popa
mov
test
inc
xor
dec
push
jmp
mov
repnz
jmp
(bad)
and
lods
push
gs
push
(bad)
and
jo
xor
stos
sub
fs
jmp
mov
nop
and
scas
sub
fs
cmp
jmp
aas
mov
push
sbb
lods
ins
imul
xchg
movs
ss
jge
fs
mov
imul
fwait
ins
inc
lods
adc
mov
test
fwait
ins
inc
lods
and
fild
int
(bad)
mov
fwait
or
dec
jmp
sahf
int
shr
shl
push
popa
cmp
push
popa
pop
sub
push
loop
cs
mov
cmc
and
mov
xor
jl
fisub
popa
xor
arpl
daa
push
popa
xor
xor
retf
dec
(bad)
fldenv
jno
fs
mov
pop
push
popa
mov
push
sahf
pop
ss
and
into
jmp
sahf
pop
popa
xor
dec
ds
jge
lea
xchg
pop
push
out
popa
xor
fnstenv
es
popa
fxch
mov
repnz
or
fdecstp
cmp
int
add
xor
test
jle
repnz
or
inc
lahf
inc
xor
push
popa
mov
push
xor
add
jbe
pop
push
inc
xchg
ins
push
es
movs
ss
push
or
dec
mov
repnz
or
out
popa
fidivr
push
dec
repnz
sahf
pop
add
and
fldenv
inc
repnz
call
xor
pop
sbb
es
movs
sub
fucomip
jg
inc
mov
pop
push
popa
sti
in
ret
push
popa
icebp
es
call
xor
(bad)
out
es
xor
mov
fld
push
or
dec
adc
or
es
loope
push
mov
xor
out
xor
lahf
mov
mov
push
adc
int
or
stos
xchg
xchg
sbb
pop
pusha
xor
jmp
sbb
es
xchg
mov
into
cli
sbb
es
xchg
pop
daa
jle
and
adc
ror
fld
sbb
push
popa
mov
sbb
push
popa
inc
and
mov
lds
shl
xchg
loop
int3
fldenv
out
outs
mov
popa
xor
icebp
call
int
sar
ins
jge
mov
fidiv
inc
ss
aam
sbb
xchg
aad
push
xchg
mov
loope
and
jbe
and
jbe
popa
pop
sbb
outs
xor
xor
inc
sub
adc
into
sbb
shl
add
std
and
push
push
sahf
inc
xor
adc
dec
push
sahf
inc
ss
sbb
int
jmp
shl
add
std
js
pop
out
pusha
inc
and
mov
scas
out
xchg
aad
push
xchg
mov
jns
test
jae
test
inc
fmulp
jb
pop
mov
loope
and
jbe
js
and
or
fldenv
int
push
mov
push
popa
mov
and
mov
sub
arpl
push
or
xor
arpl
push
jmp
loopne
adc
into
push
sbb
inc
and
mov
jb
adc
cmc
adc
jns
test
jae
test
jno
adc
loope
cdq
std
push
mov
pop
jp
push
sahf
aaa
pop
shl
xor
jae
xor
jnp
jmp
in
mov
aaa
pop
shl
xor
jmp
popf
xor
popf
xor
sub
jne
pop
(bad)
adc
gs
nop
mov
jmp
popa
inc
fild
mov
(bad)
lods
push
jno
arpl
adc
lods
push
popf
fldcw
push
push
ficomp
cdq
jne
out
cli
fst
push
daa
push
adc
pop
rcl
sahf
fst
mov
movs
ficomp
xor
pop
ja
sbb
dec
fldl2t
sahf
mov
jmp
jmp
lahf
xor
jns
cmp
in
call
xor
(bad)
jbe
es
xor
adc
popf
and
xor
lahf
mov
jo
lahf
mov
mov
movs
ficomp
xor
pop
hlt
push
pop
cmps
mov
push
sahf
int
std
dec
mov
fidivr
xchg
mov
sbb
cmc
aaa
daa
push
sahf
int
sub
call
icebp
lods
push
jno
(bad)
shl
aaa
daa
push
sahf
int
fwait
in
es
mov
ins
js
test
jae
test
inc
ss
fidivr
cmp
popf
and
scas
aam
lock
inc
popf
add
std
inc
ficomp
ins
popa
xor
pop
add
ja
mov
xor
in
lahf
mov
scas
aam
lock
sahf
jne
pusha
das
mov
into
scas
aam
lock
inc
popf
mov
ds
ds
jge
mov
popa
jo
jmp
jg
daa
cmps
push
popf
fisub
popa
add
std
inc
(bad)
ins
popa
xor
pop
add
ja
mov
xor
in
lahf
mov
scas
aam
lock
sahf
jne
pusha
das
mov
dec
loop
popa
mov
ds
loopne
fiadd
es
aas
imul
inc
xor
adc
lods
dec
jne
arpl
add
loopne
(bad)
cmp
es
popa
mov
arpl
outs
mov
cs
jg
sbb
es
das
mov
and
mov
or
push
mov
daa
aam
fisub
mov
icebp
jae
test
inc
aaa
lods
arpl
jne
push
sbb
rcr
xor
arpl
mov
(bad)
pop
iret
fldl2t
call
ds
or
jne
int
inc
jmp
or
push
int
fst
push
popa
(bad)
and
scas
sar
ins
jge
mov
fs
cmp
cdq
test
cdq
sbb
lahf
cmps
int
push
mov
popa
mov
es
sub
fldenv
pop
es
fcmovu
pusha
popa
xor
push
cmps
ss
dec
cmp
inc
call
mov
data16
or
loope
pop
scas
xchg
push
popa
xor
shr
push
sahf
popa
cs
daa
fldenv
mov
scas
out
push
retf
jmp
inc
imul
jns
cmp
inc
call
popa
jo
jmp
outs
loopne
push
inc
popa
xor
aas
cdq
mov
es
(bad)
gs
xor
cs
jo
inc
inc
es
call
inc
es
push
repnz
int
scas
out
and
das
(bad)
adc
jo
mov
ss
push
in
ja
inc
mov
push
popa
mov
std
sbb
repnz
push
mov
out
push
mov
jbe
test
xor
and
and
add
push
popa
mov
je
popa
add
pop
mov
ja
pop
mov
jb
sbb
retf
call
int
jmp
aas
imul
scas
push
xor
push
mov
push
push
popa
popa
jo
ficomp
pop
xchg
dec
mov
in
pop
mov
push
popa
int
push
popa
inc
and
popa
xor
das
and
sub
jmp
push
call
icebp
movs
sub
and
and
cmp
push
popa
mov
mov
lahf
mov
xor
jle
int
push
in
mov
jmp
adc
into
cmps
adc
es
pop
cmp
xchg
or
jmp
sahf
int
shr
fldl2t
popa
xor
loop
mov
inc
xor
push
call
icebp
stos
push
xchg
bound
adc
mov
scas
push
popf
mov
loop
cmp
es
sbb
es
pop
daa
push
popa
mov
out
popa
mov
xchg
movs
jo
jmp
dec
mov
in
fs
push
popa
mov
cmps
shl
xor
loop
cmps
shl
xor
mov
mul
ja
lahf
mov
mov
add
es
fidiv
popa
popa
xor
add
es
xchg
shr
jmp
and
and
jmp
xchg
movs
jo
fwait
and
jbe
adc
movs
cli
jno
shr
xchg
lods
imul
adc
mov
scas
push
popf
mov
lar
es
mov
and
mov
push
jmp
popa
xor
loope
mov
fstp
popa
inc
adc
sahf
bound
inc
jmp
push
call
jmp
out
je
and
sahf
xor
popf
and
pop
xchg
mov
push
cmps
std
clc
imul
loop
mov
bound
mov
popf
push
int
push
sahf
ja
lahf
mov
loop
call
and
pop
push
cdq
cmp
fst
popa
xor
cmp
in
call
popa
jo
fidiv
mov
ficom
cdq
mov
aad
adc
sahf
ds
es
mov
lods
push
imul
es
mov
into
daa
push
popa
xor
push
popa
(bad)
and
scas
ror
jmp
jmp
sub
sub
xchg
add
es
and
stos
push
bound
jbe
icebp
and
push
push
popa
mov
push
call
cmc
loopne
rol
loope
int
(bad)
adc
xor
push
xchg
mov
bound
xor
std
sub
loope
add
es
mov
or
bound
aad
arpl
xor
and
lods
adc
pop
imul
inc
jmp
es
jmp
sbb
adc
jmp
popa
mov
jmp
dec
es
mov
es
mov
fsubp
xchg
dec
push
or
dec
adc
xor
xor
push
and
mov
adc
es
and
dec
adc
xor
ficom
fs
xor
xchg
test
xor
arpl
mov
fldenv
int
loop
dec
push
push
popa
mov
aas
popa
xor
icebp
call
fisubr
push
xchg
bound
sub
push
popa
int
loop
fs
push
popa
int
loop
rcl
ins
js
test
jae
test
into
or
xor
inc
aaa
gs
loop
push
xchg
mov
mov
in
in
fld1
sahf
xor
xchg
jo
inc
pop
es
call
int
xchg
movs
int
jmp
sahf
int
pop
mov
xor
scas
shr
xchg
shr
jmp
cmp
push
or
into
ss
inc
es
call
int
fwait
in
fld1
sahf
(bad)
into
fistp
movs
sub
and
rcl
popa
mov
mov
lahf
mov
int3
fld
scas
xchg
push
popa
bound
lahf
and
das
(bad)
adc
cmps
in
xor
push
in
mov
jmp
jmp
mov
jmp
pop
int
sub
es
call
cmp
es
xchg
jno
push
popa
mov
fld
scas
xchg
push
popa
bound
lahf
and
das
(bad)
outs
mov
push
popa
xor
shl
jmp
sahf
fcmovb
out
sahf
int
shr
loope
call
int
into
push
jmp
lahf
int
inc
shl
xchg
xchg
push
aas
push
popa
mov
fld
scas
xchg
push
popa
bound
lahf
and
das
(bad)
outs
mov
push
popa
xor
fmul
xchg
xchg
xor
push
loope
fucomi
lahf
int
sbb
cmp
push
popa
pop
daa
jle
shl
fucomi
lahf
int
(bad)
fcmovnb
fldl2t
loop
sub
retf
int
jmp
popa
xor
mov
sahf
psubusw
popa
xor
xchg
stc
xor
push
outs
test
push
xor
fld
bound
fs
xor
xchg
retf
int
jmp
shl
push
loop
mov
lahf
int
scas
mov
es
xchg
shr
jmp
adc
fs
popa
cmp
es
pop
es
xor
shl
(bad)
push
(bad)
fldl2t
loop
sub
sahf
int
push
adc
retf
aam
popa
mov
fld
sub
jmp
pop
int
push
popa
inc
sub
in
fld1
sahf
xor
push
popa
mov
in
pusha
pop
retf
xor
shl
dec
imul
sub
adc
aam
popa
mov
fld
jecxz
jmp
pop
int
push
popa
inc
sub
in
fld1
sahf
xor
push
popa
pop
daa
jle
shl
xchg
push
popa
fimul
shr
fldl2t
popa
xor
or
dec
repnz
jo
fmul
fld1
sahf
gs
cdq
xchg
int
xchg
movs
ds
sahf
xor
bound
mov
pop
popa
xor
jl
pop
call
inc
shl
dec
(bad)
fldl2t
loop
sub
sahf
int
push
adc
(bad)
aam
popa
mov
fld
jg
jmp
pop
int
push
popa
inc
sub
in
fld1
sahf
xor
push
popa
mov
push
add
es
pop
cdq
in
xor
shl
inc
fldl2t
loop
sub
sahf
int
push
adc
int
jmp
or
dec
mov
xor
shr
sahf
mov
sbb
push
popa
inc
sub
in
fld1
sahf
xor
push
popa
pop
daa
jle
shl
xchg
push
popa
(bad)
loop
int
shr
fldl2t
popa
xor
or
dec
repnz
jo
fmul
fld1
sahf
gs
lods
xchg
int
xchg
movs
ds
sahf
xor
arpl
jle
shl
fucomi
lahf
int
(bad)
inc
fldl2t
loop
sub
sahf
int
push
adc
int
jmp
fldcw
or
popa
(bad)
in
fld1
sahf
mov
fld1
sahf
xor
mov
push
popa
pop
jbe
and
into
jne
int
xchg
movs
ds
sahf
xor
bound
jle
shl
xchg
push
popa
fisubr
sahf
int
shr
fldl2t
popa
xor
cmps
mov
jmp
popa
xor
push
loop
mov
lahf
int
arpl
and
jo
push
in
mov
jmp
push
enter
fnstenv
shl
push
popa
xor
mov
mul
fldpi
adc
loopne
pushf
int
jmp
popa
xor
aad
jmp
mov
mov
fld
or
inc
cmp
repnz
in
mov
jmp
in
fld1
sahf
bound
lahf
and
cmps
aad
xor
push
push
ss
loop
bnd
mov
mov
(bad)
sahf
int3
fst
loop
sahf
jmp
out
mov
push
popa
mov
cmc
call
int
aad
cmc
mov
add
mov
pop
popa
xor
fwait
in
fld1
sahf
bound
jmp
sahf
int3
fld
add
inc
jge
(bad)
daa
mov
out
call
xchg
jo
popf
in
fld1
sahf
bound
push
popa
xor
lahf
and
das
(bad)
outs
mov
adc
stos
xchg
mov
fsubr
xor
fld
or
xor
(bad)
in
fld1
sahf
mov
es
xor
push
popa
mov
fld
mov
jmp
pop
int
cs
cmp
es
mov
fld
fwait
in
fld1
sahf
bound
jmp
or
pop
mov
into
es
clc
and
xor
es
in
fld1
sahf
bound
jmp
ss
scas
push
popf
cmp
sbb
pop
and
gs
xor
xchg
(bad)
sahf
xor
mov
or
push
popa
mov
fld
clc
dec
push
popa
mov
sbb
xchg
retf
int
jmp
es
or
into
xchg
rdmsr
es
mov
int
cli
sahf
int3
fstp
sahf
bound
xchg
jo
fwait
in
fld1
sahf
(bad)
into
into
rdmsr
es
movs
es
into
pusha
jmp
sahf
int3
fst
mov
fstp
sahf
mov
fld
xchg
cli
jno
shr
xchg
stos
mov
loop
ss
xchg
aad
jmp
popf
pop
int
cmp
ja
lahf
mov
mov
jmp
es
les
scas
into
pusha
jmp
lahf
int
jle
shl
xchg
lahf
int
popf
pop
int
sub
es
call
cmp
es
mov
and
popa
mov
fld
mov
jmp
pop
int
jp
ja
pop
mov
xor
xchg
les
iret
retf
es
fisubr
lahf
mov
xor
lahf
mov
int
jmp
int
fsubr
call
int
xchg
jmp
mov
fst
fdiv
es
popa
rol
sahf
mov
push
call
xor
in
mov
fld
or
arpl
call
icebp
movs
imul
es
loop
stos
jmp
in
fld1
sahf
bound
xchg
jo
popf
in
fld1
sahf
bound
push
popa
xor
lahf
and
cmps
std
out
es
push
xor
push
loop
stos
jmp
in
daa
push
popa
mov
fld
xor
mov
jmp
popf
pop
int
ss
xor
lahf
mov
cmp
es
(bad)
dec
jmp
in
es
popa
mov
data16
int3
fst
outs
mov
push
popa
xor
jmp
sahf
int3
fsin
pushf
rcr
loop
cs
cmps
jne
stos
add
jmp
or
fucomi
popa
cmp
es
ret
sahf
xor
push
popa
mov
in
gs
mov
in
fld1
sahf
bound
xchg
jo
fwait
in
fld1
sahf
(bad)
into
cmps
or
es
fwait
pushf
int
jmp
loope
daa
push
adc
scas
xchg
cdq
int
jmp
pushf
int
xchg
or
fucomi
xor
fstp
lahf
int
dec
es
loop
sub
mov
iret
fld1
sahf
bound
xchg
jo
fwait
in
fld1
sahf
(bad)
into
inc
or
and
aad
(bad)
int
bound
mov
inc
jmp
mov
in
fld1
sahf
or
sbb
and
jmp
sahf
int3
fld
add
inc
imul
fstp
sahf
int3
fld
add
inc
imul
fstp
sahf
or
sbb
in
fucompp
sahf
mov
out
int3
fst
adc
loopne
pushf
int
jmp
sbb
es
in
fld1
sahf
bound
xchg
fsub
fld1
sahf
xor
jmp
popf
push
int
push
loopne
mov
xor
jmp
in
fld1
sahf
bound
popf
in
fld1
sahf
bound
popf
in
fld1
sahf
bound
lahf
mov
mov
fld
add
inc
imul
jns
cmp
in
call
mov
mov
mov
xor
push
xor
xor
es
loop
ds
aaa
gs
jae
cmc
arpl
and
jb
jmp
lahf
adc
loope
popf
xor
push
popa
mov
daa
call
cmp
es
mov
loop
mov
shr
sahf
mov
xchg
movs
jo
push
adc
int
jmp
lahf
adc
int
cmps
ja
jmp
push
cmc
arpl
pusha
xor
push
jmp
shl
mov
imul
arpl
jmp
mov
pop
cli
cmp
xor
shl
fldl2t
sahf
int
dec
cmp
test
popa
xor
xchg
gs
mov
cdq
add
lahf
cmps
pop
mov
push
or
dec
mov
popa
pop
inc
hlt
jo
cmp
call
cmc
jns
mov
fiadd
inc
aaa
mov
push
pop
mov
arpl
call
mul
in
movs
xor
pushw
popa
mov
arpl
call
sub
mov
shl
test
cmc
and
int3
jae
adc
shl
push
popa
ss
popa
mov
test
jae
sbb
aaa
mov
das
(bad)
outs
mov
sbb
popa
xor
sbb
mov
add
loope
ds
adc
es
sahf
aaa
pop
shl
xor
(bad)
loope
push
sbb
repnz
xchg
xor
daa
adc
addr16
mov
push
popa
mov
push
into
jae
push
xchg
xor
sbb
jbe
push
popa
les
push
enter
adc
jae
pop
or
jmp
popa
mov
pusha
popa
xor
imul
ja
lahf
mov
xor
adc
addr16
mov
and
popa
int
outs
movs
jo
loopne
sub
adc
iret
inc
bound
es
mov
es
xchg
shr
xchg
ins
sub
push
enter
jno
pushw
mov
fldl2t
sahf
les
push
into
jae
adc
adc
repz
xor
xchg
ins
sub
adc
sub
adc
iret
call
mov
push
into
jae
push
shl
popa
nop
data16
and
iret
int3
lahf
int
loopne
sub
adc
iret
les
es
mov
popa
mov
push
into
jae
pop
cmps
aaa
retf
xor
popa
xor
xlat
mov
and
into
jae
adc
xor
and
popa
mov
push
into
jae
adc
cli
pop
fsubrp
repz
and
xor
push
mov
jmp
movs
jo
jmp
popa
mov
mov
sub
sbb
xor
mov
lahf
addr16
pusha
aaa
push
mov
push
xor
loope
mov
cmps
sbb
addr16
and
rcl
xor
xchg
mov
popf
addr16
mov
es
popa
xchg
bound
imul
retf
xor
adc
addr16
mov
and
jo
xchg
or
mov
xor
xchg
nop
leave
ss
popa
mov
cs
jae
adc
popa
add
inc
ds
test
mov
test
jo
sbb
aaa
jbe
and
das
(bad)
sbb
dec
and
inc
mov
fisub
xor
xchg
popa
xor
push
psubsw
popa
xor
sahf
push
mov
xchg
ins
sub
sub
xor
and
fimul
cs
jae
std
dec
int
cs
jae
lahf
test
mov
push
into
jae
push
mov
pop
(bad)
mov
push
popa
mov
push
popa
xor
imul
ja
lahf
mov
jo
loopne
sub
xchg
stos
xor
push
call
nop
push
cmps
and
scas
fisub
scas
xlat
outs
test
data16
xor
ja
sbb
aaa
push
cmps
and
movs
mul
arpl
outs
test
pop
repnz
popa
cmp
es
sbb
data16
and
shl
mov
push
push
popa
cmp
cmps
push
popa
xor
shl
popa
xor
push
shl
pop
jbe
push
popa
xor
loope
aad
adc
cmps
imul
cs
xor
gs
or
ins
sub
mov
cmp
out
mov
addr16
outs
test
repnz
jae
xchg
xor
sub
data16
push
shl
loopne
test
popa
xor
push
popa
fnstcw
lahf
xchg
je
add
pushw
jmp
scas
adc
push
popa
int
sbb
jb
mov
xchg
pushw
pop
aaa
sub
call
ja
lahf
mov
jb
push
mov
scas
out
mov
es
popa
mov
fs
sahf
aaa
sub
into
jae
das
fs
inc
std
jmp
popa
mov
and
and
and
mov
fs
push
dec
cmp
retf
call
mul
aas
in
push
popa
(bad)
ja
xor
push
popa
fs
fiadd
xor
mov
and
pmaxsw
cmc
dec
cmp
test
popa
xchg
ss
stos
jo
inc
mov
mov
stos
jo
inc
mov
mov
pusha
retf
or
push
popa
fs
xchg
add
es
and
in
call
popa
jo
(bad)
inc
jb
mov
in
fs
loop
popa
pop
scas
fsub
xor
add
ja
push
popa
xor
xchg
mov
adc
popa
mov
cli
popa
mov
(bad)
shl
pushw
popa
xor
into
pusha
jmp
sahf
aaa
pop
shl
xor
repz
xor
loope
mov
movs
jae
xor
push
mov
mov
inc
popa
xor
cmc
call
cmc
arpl
pusha
xor
push
in
aaa
pop
fsub
xor
outs
movs
jo
shl
and
popa
xor
push
cmps
ja
pop
popa
xor
xchg
add
es
mov
mov
imul
xchg
xchg
stos
push
mov
push
popa
xor
fwait
and
jbe
je
mov
mov
inc
popa
xor
cmc
call
mov
es
and
jbe
popa
pop
es
pop
and
adc
into
retf
es
and
jbe
adc
stos
push
shl
pop
mov
inc
push
popa
int
outs
movs
jo
jl
int
mov
xor
ss
adc
push
es
call
icebp
fldenv
ficom
jbe
xor
adc
mul
ja
inc
sahf
inc
xchg
fwait
and
jbe
je
mov
mov
scas
into
xchg
shr
dec
aas
imul
xchg
lea
loope
popf
outs
hlt
pop
mov
ret
rcl
jae
mov
ficomp
xchg
mov
ficom
mov
jae
call
pop
es
mov
arpl
xor
push
out
or
stos
push
xchg
bound
inc
cs
popa
mov
sahf
fisttp
es
into
scas
push
mov
icebp
jae
test
sub
cdq
xor
lahf
cmps
int
outs
movs
jo
jmp
sahf
daa
ss
xor
push
outs
in
call
popa
jo
jmp
adc
mul
int
mov
popa
xor
arpl
nop
push
push
xor
jmp
dec
cmp
sbb
popa
xor
arpl
nop
push
push
xor
jmp
jno
nop
push
push
ss
popa
xor
sbb
cmp
popa
mov
and
sahf
jne
loopne
sahf
xor
mov
gs
inc
fisub
xor
mov
outs
mov
push
popa
xor
add
in
in
es
popa
mov
sub
adc
scas
in
loop
and
das
mov
mov
adc
and
pop
fisub
push
popa
inc
js
xlat
ja
jge
cmp
jmp
xor
sbb
fnstcw
es
add
push
popa
pusha
jbe
(bad)
ins
es
call
int
inc
jno
jb
fs
xchg
mov
shufps
xchg
mov
scas
push
xchg
mov
and
(bad)
gs
and
popa
xor
std
inc
cmp
out
loope
and
lods
jo
push
adc
xor
and
dec
loop
popa
mov
sub
jb
cdq
jp
sub
push
pop
call
mov
adc
data16
cdq
mov
adc
adc
scas
out
loop
and
xlat
and
or
sub
xor
push
adc
fisub
xchg
pop
xor
arpl
(bad)
adc
pop
aaa
movs
cld
gs
adc
xor
popa
xor
xchg
pop
or
arpl
ficomp
push
and
outs
scas
out
loop
and
pop
xor
arpl
mov
cmps
sub
push
push
call
cmp
into
push
popa
xor
pop
(bad)
push
popa
inc
or
jno
jb
fs
xchg
mov
shufps
(bad)
gs
ss
and
mov
adc
ficomp
daa
push
popa
xor
inc
call
xor
arpl
mov
cmps
sub
push
sub
retf
bound
adc
adc
and
pop
rsqrtps
pop
int3
es
popa
inc
and
sahf
xor
push
adc
into
cli
cmp
and
in
loop
and
popa
xor
sahf
xor
push
popa
cmp
(bad)
imul
xchg
lea
jne
ss
outs
movs
jo
popf
adc
int
push
int
adc
push
sbb
adc
popa
xchg
sahf
fisub
xchg
sahf
fisub
push
jmp
push
pop
hlt
push
into
mov
es
popa
mov
sbb
aaa
pop
shl
xor
mov
arpl
pushw
push
jmp
jbe
cmp
fldl2t
cmp
and
jo
sbb
cmp
mov
es
adc
xor
bound
inc
jmp
arpl
jmp
and
popf
xchg
and
popf
inc
into
std
inc
mov
cmp
popa
mov
daa
int3
dec
loop
in
pusha
call
rcr
xor
scas
push
bound
and
fs
lods
xchg
test
call
daa
int3
pusha
loop
(bad)
gs
adc
pop
jmp
outs
movs
jo
xchg
test
data16
pusha
loop
(bad)
gs
iret
lahf
gs
push
popa
xor
outs
test
mov
daa
jp
and
into
bound
ds
cmp
in
call
xor
(bad)
outs
imul
inc
mov
leave
sahf
int
(bad)
call
push
loope
and
in
stc
jmp
xchg
fstp
jmp
movs
jo
adc
pop
leave
sahf
int
arpl
nop
xchg
xchg
fstp
jmp
lods
jo
pop
adc
in
fldl2t
popa
inc
xor
stc
sahf
int
sub
push
popa
xor
mov
hlt
ror
sahf
mov
fnstcw
cmp
jmp
xor
popf
hlt
call
xor
mov
mov
fnstcw
sub
sbb
push
popa
arpl
hlt
arpl
fldl2t
push
daa
jbe
and
into
cmp
es
hlt
xchg
clc
jmp
inc
xchg
pushw
loope
aad
sahf
int
sbb
mov
stc
sahf
int
(bad)
jg
sbb
cmp
push
popa
cmp
fnop
in
leave
jmp
hlt
ror
sahf
repz
push
xor
shl
outs
mov
adc
sub
sahf
repz
xor
jae
lahf
hlt
out
jmp
movs
jo
xchg
(bad)
stc
jmp
div
es
mov
jmp
mov
dec
loop
popa
mov
fstp
mov
aaa
es
and
scas
xchg
xchg
fstp
jmp
or
ss
popa
popa
into
out
xor
lahf
cmps
mov
pop
mov
(bad)
fdivrp
sahf
int
xchg
mov
or
pusha
mov
mov
inc
mov
and
jo
xchg
(bad)
fmulp
jmp
popa
xor
jle
int
push
sahf
xchg
stc
sahf
int
mov
mov
loop
call
inc
inc
xchg
les
lods
mov
in
fldl2t
mov
jmp
arpl
les
ficomp
movs
lock
jmp
sahf
xor
push
popa
inc
sti
xchg
sahf
int
push
popa
inc
sub
popa
xor
jmp
popa
and
push
loopne
es
xor
sahf
inc
(bad)
jae
fldl2t
cmp
fst
popa
xor
popf
in
clc
jmp
popa
xor
xchg
(bad)
fstp
jmp
sahf
int
adc
mul
xchg
leave
sahf
int
push
xor
jmp
xor
push
outs
test
xlat
xor
add
push
popa
mov
fst
sahf
xor
jmp
mov
shl
jo
stos
add
cmps
sar
sahf
int
hlt
arpl
out
arpl
imul
clc
cmps
sbb
int
loop
int
xchg
fadd
leave
jmp
popa
inc
xchg
jmp
popa
mov
cmc
mov
imul
mov
push
call
int
aam
and
popa
xor
lahf
hlt
scas
clc
jmp
bound
scas
xchg
stc
in
fldl2t
jmp
cmp
fldl2t
loop
cmp
mov
xchg
clc
jmp
mov
mov
fstp
sahf
mov
fstp
sahf
pop
cmp
sahf
(bad)
fldenv
mov
ret
fldcw
in
stc
jmp
in
stc
jmp
mov
out
stc
jmp
mov
icebp
dec
push
popa
xor
jl
mov
(bad)
mov
je
hlt
mov
jmp
xor
push
pusha
xor
or
fldl2t
mov
fs
outs
test
xlat
xor
fwait
mov
mov
scas
sbb
push
popa
cmp
fldl2t
mov
daa
push
mov
xor
jmp
popa
pusha
into
xchg
cmp
es
in
stc
jmp
in
daa
push
popa
mov
push
popa
cmp
es
in
leave
jmp
pop
(bad)
push
popa
inc
sub
in
daa
push
popa
fstp
xchg
xchg
fstp
jmp
popa
xor
xchg
mov
stos
push
arpl
scas
xchg
test
fldl2t
cmps
mov
enter
xchg
int3
(bad)
stc
jmp
test
fldl2t
call
xor
call
mov
push
adc
scas
out
fisub
add
ret
gs
push
adc
scas
out
fisub
xchg
pop
xor
das
fldpi
jmp
popa
cmp
fldl2t
mov
daa
or
int
xchg
ret
jmp
pop
(bad)
push
popa
inc
xor
popa
xor
es
fscale
jecxz
sar
outs
mov
fst
cdq
sbb
pushf
jbe
ss
pop
pop
leave
sahf
int
jmp
lahf
test
sahf
int
sbb
cmps
test
sahf
int
hlt
arpl
fldl2t
cmps
xor
daa
push
popa
xor
arpl
sbb
arpl
es
popa
inc
cmp
popa
xor
arpl
sbb
xor
push
popa
inc
sub
pop
mov
popa
xor
bound
int
outs
test
pop
mov
cmp
bound
nop
xchg
xchg
fstp
jmp
mov
out
jmp
sahf
int
shr
fwait
cmc
mov
jo
mov
fstp
jmp
mov
(bad)
xor
iret
mov
xor
add
ss
jmp
sahf
mov
loop
int
push
xor
fs
and
jo
dec
fldl2t
loope
aad
sahf
int
sbb
mov
stc
sahf
int
(bad)
jg
sbb
cmp
push
popa
cmp
(bad)
imul
xchg
lea
jne
ss
fisubr
jnp
pop
xchg
and
xchg
xor
push
call
outs
lods
jo
scas
jo
es
xchg
xchg
lods
push
popf
mov
jae
in
dec
(bad)
fwait
push
mov
sub
popa
xor
mov
dec
neg
popa
mov
push
popa
xor
mov
ja
lahf
mov
into
cmps
sub
loope
fst
loopne
ficom
shl
es
ja
and
sub
daa
shl
arpl
fldcw
and
daa
xchg
sbb
aaa
test
es
cmps
ja
push
mov
and
sub
daa
(bad)
sbb
scas
es
popa
mov
jmp
fst
outs
test
pop
repnz
popa
dec
dec
sbb
jno
xor
retf
gs
in
pusha
mov
pop
aam
ficomp
xlat
jno
lahf
mov
enter
mov
adc
movs
out
and
xchg
and
daa
sbb
jno
loopne
xor
arpl
(bad)
adc
retf
gs
in
bound
pop
aam
ficomp
xlat
jno
xor
mov
push
popa
inc
and
or
cmp
xor
mov
popa
xor
xchg
jno
cs
cmps
push
call
imul
fldl2t
cmps
ja
push
mov
adc
pop
jbe
(bad)
adc
cmps
push
call
pop
loope
ficom
adc
lods
push
popf
mov
out
loope
(bad)
scas
push
movs
mov
and
push
adc
cmps
push
call
dec
cmp
in
call
fs
adc
popf
jmp
lds
or
es
popa
fs
push
mov
jb
popa
mov
xchg
pop
xor
arpl
mov
sub
add
imul
popa
(bad)
and
scas
aad
ins
jge
mov
ss
push
popa
ficomp
inc
popa
xor
fdivrp
jge
das
mov
mov
lahf
cmps
mov
jbe
xor
fwait
adc
jo
adc
stos
xchg
popa
rcr
jmp
popa
xor
jmp
popa
xor
aas
cdq
mov
fidivr
cdq
mov
in
call
jg
pop
loopne
out
push
or
fldenv
pop
es
shl
push
outs
in
call
popa
jo
fiadd
pop
jg
fidivr
cdq
mov
cmps
push
popa
xor
xor
xor
push
loope
push
push
mov
jb
popa
mov
push
add
dec
sub
adc
mov
push
loopne
inc
xor
pop
(bad)
mov
push
aaa
fidivr
inc
popa
xor
push
popa
(bad)
and
scas
shr
jmp
mov
jne
popa
mov
daa
out
call
dec
sub
adc
mov
stos
push
cdq
mov
(bad)
inc
sahf
inc
fiadd
loopne
push
popa
fs
loop
xor
popf
and
int
call
ja
lahf
cmps
ins
js
test
jae
test
inc
lea
shl
es
or
dec
xchg
popa
xor
jl
pop
es
pop
es
popa
repnz
fisub
shr
retf
call
inc
and
mov
pop
es
fs
sahf
xor
es
cmps
imul
mov
movs
ficomp
xor
call
fiadd
int
sbb
(bad)
inc
popa
xor
ja
inc
or
dec
push
xchg
jo
inc
mov
into
dec
xor
es
mov
push
popa
mov
push
popa
xor
cmp
in
call
gs
test
lahf
cdq
add
lahf
cmps
mov
jns
xor
icebp
call
pop
es
xor
push
or
dec
push
or
dec
push
popa
xor
jmp
xor
es
cmps
mov
jmp
mov
dec
adc
xor
fcmove
inc
popa
xor
ror
xor
arpl
push
sbb
ficomp
inc
popa
xor
mov
retf
call
ins
js
mov
popa
jo
jmp
jo
das
cmps
push
popf
inc
push
push
popa
add
popf
and
scas
aam
lock
inc
popf
add
std
cmp
pop
xor
push
pop
dec
sub
popa
fldenv
pop
addr16
xor
data16
es
shl
jae
popa
mov
push
push
jmp
and
xor
in
xor
inc
xor
es
movs
cmp
cmp
pop
(bad)
jmp
lahf
xor
pop
jmp
pop
xor
cmps
sbb
or
sbb
shl
jae
popa
mov
push
ds
jge
mov
bound
ss
sub
and
push
jo
je
xchg
es
into
scas
push
cdq
mov
aam
popa
fcmove
inc
popa
xor
sahf
fnstenv
inc
or
aam
popa
(bad)
inc
popa
xor
loope
(bad)
push
popa
pop
add
and
into
stos
xor
ins
jge
mov
ficom
inc
aaa
gs
pop
mov
xchg
shr
jo
ja
pop
popa
mov
cli
popa
mov
(bad)
popa
mov
repnz
mov
mov
adc
les
es
sbb
daa
arpl
loope
sub
popf
and
sub
sahf
(bad)
xchg
xchg
pusha
sub
popa
cmp
nop
push
fs
movs
(bad)
jg
arpl
loope
fst
movs
jnp
xor
aad
pop
fst
loope
fst
adc
lods
push
ins
cmp
arpl
mov
scas
aad
test
outs
test
nop
mov
or
into
xchg
sbb
and
gs
(bad)
arpl
shl
call
mov
call
popa
inc
in
scas
test
push
xchg
shr
popf
and
sub
outs
test
mov
out
pusha
xor
sbb
les
into
lock
push
test
or
pop
add
lahf
and
daa
push
test
data16
addr16
pusha
and
mov
xchg
inc
cmp
scas
in
or
push
xchg
shr
popf
and
sub
imul
lods
push
test
and
mov
icebp
inc
xchg
mov
ss
popa
mov
es
inc
inc
cdq
and
mov
adc
mov
mov
and
data16
mov
mov
icebp
mov
mov
pop
jmp
icebp
mov
out
popa
mov
es
sub
or
mov
mov
icebp
mov
mov
loop
and
icebp
mov
mov
icebp
mov
mov
push
fld
jbe
mov
into
push
popa
xor
dec
icebp
mov
dec
sub
xor
push
icebp
mov
mov
sub
mov
icebp
mov
mov
jb
mov
icebp
mov
adc
mov
mov
icebp
dec
retf
mov
mov
icebp
mov
push
icebp
mov
mov
icebp
push
mov
icebp
mov
daa
jmp
xor
push
popa
outs
mov
popa
inc
inc
cdq
and
out
popa
retf
popa
sub
or
mov
ss
popa
mov
mov
mov
movs
out
popa
mov
mov
icebp
mov
es
jmp
xchg
mov
mov
push
loopne
xchg
mov
mov
call
mov
mov
lock
jle
icebp
mov
inc
cdq
and
mov
pusha
retf
icebp
mov
mov
fnstenv
out
popa
mov
mov
adc
mov
es
jmp
xchg
mov
mov
push
loopne
xchg
mov
mov
call
mov
mov
lock
jle
icebp
mov
arpl
mov
mov
pusha
retf
icebp
mov
mov
add
inc
call
fucomi
mov
mov
add
fs
and
inc
lahf
and
popf
and
dec
push
lahf
mov
add
lahf
mov
push
loope
xchg
xor
inc
and
xor
inc
mov
scas
aam
fst
arpl
arpl
popa
(bad)
push
arpl
push
call
dec
es
fidiv
nop
inc
sahf
mov
shr
call
stos
shr
call
mov
and
adc
sub
inc
aaa
popf
and
daa
out
cmp
imul
clc
scas
push
jmp
sub
and
push
outs
test
sbb
jg
aas
stos
mov
push
push
popa
pop
cs
xor
push
in
ja
inc
mov
nop
push
sahf
bound
inc
in
ja
sbb
fcom
mov
into
bound
xor
lahf
mov
pop
and
and
daa
out
fidivr
popa
xor
loope
mov
movs
shl
fst
cmp
pop
shr
sub
sahf
int
dec
cmp
in
call
popa
jo
fbld
enter
es
bound
push
fstp
es
xchg
fsub
fsub
sub
jg
mov
ret
call
jmp
inc
sub
mov
xor
shr
ja
inc
sahf
inc
cs
sbb
fldl2t
loop
cs
mov
adc
popa
cmp
rcl
sbb
jne
mov
and
scas
shr
pop
(bad)
ss
rcl
sbb
mov
jo
inc
mov
jl
mov
jmp
popa
xor
xor
stos
pop
popa
xor
(bad)
xor
xchg
(bad)
in
push
popa
mov
lods
add
and
fisubr
jmp
popa
or
adc
xchg
lods
jo
lahf
and
int
call
mov
es
jno
(bad)
pop
xchg
mov
and
bound
cli
(bad)
xor
push
cdq
inc
(bad)
(bad)
es
push
call
jge
push
jmp
aam
test
xlat
and
shr
repnz
xor
push
mov
push
popa
mov
imul
outs
test
lahf
mov
shl
pop
mov
sbb
lods
jo
jl
pop
call
aaa
loop
and
jbe
fidivr
loop
sub
call
mov
arpl
call
ja
popf
je
jmp
popa
add
xchg
and
and
bound
neg
and
pop
push
xchg
inc
lock
jmp
ja
std
jo
(bad)
adc
cmp
movs
push
xchg
ss
lods
jo
adc
popa
or
adc
scas
leave
bound
out
(bad)
xor
mov
jmp
popf
ins
out
push
popa
mov
punpcklwd
scas
leave
bound
out
(bad)
xor
mov
jmp
popf
ins
shr
push
popa
mov
leave
pop
adc
movs
jnp
sub
mov
mov
jo
inc
mov
loop
or
dec
push
or
dec
push
or
dec
push
popa
xor
adc
into
imul
xor
lahf
and
cmps
clc
into
pusha
es
or
stos
push
mov
arpl
fidiv
popa
xor
arpl
xor
(bad)
js
push
call
ja
lahf
cmps
add
push
ds
jge
mov
fidivr
adc
xor
mov
mov
xor
loope
mov
fstp
movs
jo
mov
jl
xlat
push
popa
mov
xchg
dec
xor
(bad)
cli
jg
push
fndisi(8087
imul
xlat
xchg
fsub
in
data16
dec
clc
scas
(bad)
cmp
scas
in
jmp
int
out
ret
cmps
ja
pop
mov
jle
xor
sbb
dec
fldcw
mov
fcom
mov
mov
movs
aam
mov
fldl2t
loope
fst
jmp
fldcw
imul
sahf
xor
cmp
es
mov
cmp
xchg
fs
jmp
sahf
int
and
ret
call
int3
fldl2t
xor
cmps
and
dec
jecxz
jo
fwait
in
fucomi
sahf
(bad)
into
sbb
es
pop
es
pop
es
pop
es
popa
jb
xchg
call
pop
popa
xor
jmp
in
out
fs
xor
sti
pop
popa
xor
push
or
stos
xchg
xchg
iret
fldl2t
xor
or
xor
lods
jo
jmp
sahf
fisub
pop
popa
xor
mov
mov
and
jo
inc
or
xlat
push
popa
mov
fld
movs
push
popa
mov
int3
push
xor
fwait
in
fucomi
sahf
bound
nop
jo
fwait
in
fsubr
sahf
bound
popa
xor
push
sahf
aaa
pop
shl
xor
nop
jo
jle
ret
fs
in
mov
call
popa
xor
xchg
mov
es
popa
mov
popaw
xor
lock
int
shl
pop
dec
out
xor
nop
jo
jle
xor
xchg
mov
es
popa
mov
inc
ds
jge
mov
fidiv
inc
aaa
lods
arpl
fidivr
out
es
sahf
aaa
pop
shl
xor
push
xchg
mov
es
and
jbe
and
jbe
popa
pop
sbb
outs
xor
xor
inc
sub
adc
into
out
sub
es
pushf
aas
es
xchg
aad
push
xchg
mov
out
jmp
popa
inc
fistp
cdq
fs
pop
or
fldenv
int
jmp
push
jmp
rol
outs
xor
dec
aas
imul
inc
fiadd
add
mov
add
xor
jmp
sub
es
(bad)
fldenv
int
push
sahf
inc
sub
adc
into
das
popa
xor
xchg
movs
sub
mov
lea
leave
xor
push
or
dec
adc
ja
inc
sahf
inc
ss
imul
movs
sar
and
popa
ins
jnp
xor
ret
xchg
lea
jno
popa
js
inc
fsincos
xor
popa
(bad)
and
scas
shl
cmc
jnp
popa
xor
push
popf
bound
xor
adc
pop
es
pop
es
imul
das
(bad)
adc
psubusw
int
add
int
push
sahf
inc
(bad)
inc
js
push
push
inc
(bad)
xchg
jnp
push
push
repnz
sahf
inc
(bad)
mov
push
fld
sbb
popa
(bad)
and
scas
rcl
dec
test
jae
test
lods
arpl
arpl
pop
mov
sbb
jne
ficom
cdq
mov
es
xchg
aad
push
xchg
mov
stos
push
popf
bound
popa
xor
jl
int
sbb
jnp
push
push
repnz
in
ja
inc
aaa
pop
es
int
push
sahf
inc
(bad)
bnd
push
push
inc
(bad)
push
jnp
push
push
repnz
call
cmc
fldenv
fidivr
popa
xor
mov
test
jae
test
cdq
inc
inc
jmp
cmps
mov
push
mov
push
adc
xor
inc
mov
popa
mov
inc
push
popa
(bad)
and
scas
rol
xor
push
popa
or
adc
pop
(bad)
and
sbb
loope
popa
xor
xor
push
xlat
push
popa
fisubr
pop
popa
xor
lahf
cwde
xor
lahf
scas
cmp
arpl
out
jne
fidivr
cdq
mov
into
push
popa
fcmovbe
push
popa
xor
fbld
mov
ficom
mov
stos
add
ret
fs
call
inc
jl
popa
sti
in
call
popa
jo
jmp
push
popf
stos
or
arpl
data16
push
call
push
sbb
adc
scas
out
dec
jmp
sahf
inc
ss
sahf
jp
push
loop
sub
xor
loopne
arpl
cmps
jnp
movs
inc
push
popa
mov
iret
xchg
popa
xor
push
loope
sbb
adc
das
int
sbb
xor
retf
pop
xor
arpl
arpl
cmps
xor
scas
and
es
xchg
push
ficomp
popf
mov
scas
out
jmp
call
mov
jae
push
ret
xor
push
push
mov
push
popa
mov
daa
aam
ficomp
fdivrp
ja
out
jae
arpl
call
(bad)
shl
mov
fimul
imul
xchg
lea
jne
ss
(bad)
(bad)
dec
sbb
popf
and
scas
push
lea
retf
(bad)
scas
push
xchg
popa
into
fisub
es
and
scas
shl
gs
push
mov
bound
popa
mov
(bad)
jns
xor
daa
xchg
fnstenv
sbb
ss
(bad)
adc
add
and
adc
inc
shl
es
mov
mov
pop
or
push
popa
stos
shr
call
fs
out
fsubr
es
popa
mov
movs
jl
hlt
mov
shr
inc
jmp
push
popa
gs
loop
xor
xchg
movs
es
jmp
and
sbb
popf
and
scas
push
mov
push
cli
lahf
and
scas
push
xchg
mov
jge
mov
jp
adc
fcmovb
push
popa
xor
mov
shl
xchg
shr
lahf
int
xchg
(bad)
fcompp
jmp
xor
shr
mov
jmp
adc
into
repnz
fst
push
repnz
fs
es
fmul
fld1
sahf
xor
xor
sub
xor
(bad)
mov
push
popa
mov
loopne
adc
into
mov
in
fldpi
sahf
mov
push
popa
xor
mov
int
jmp
pushf
int
stos
mov
(bad)
(bad)
jmp
hlt
out
jmp
mov
es
ss
data16
shl
push
call
int
loopne
push
es
sahf
inc
cs
xor
push
mov
push
call
int
xlat
loop
fst
push
daa
push
adc
scas
ror
cmp
jmp
test
fldl2t
loop
cs
cmps
scas
push
push
popa
pop
jae
and
fldenv
fcmove
push
popa
xor
out
xor
mov
mov
push
mov
push
popa
xor
adc
dec
push
xchg
jo
jmp
sahf
ficom
shr
push
push
popa
xor
(bad)
xchg
retf
movs
in
fs
add
push
fcom
push
popa
stos
shr
xor
fld
or
push
popa
gs
dec
daa
xor
xchg
movs
and
push
mov
push
popa
mov
popa
xor
adc
dec
push
xchg
jo
jmp
sahf
fidiv
popa
xor
out
xor
mov
mov
push
popa
mov
push
mov
arpl
popa
mov
popa
xor
adc
dec
push
xchg
jo
jmp
sahf
fidivr
push
popa
xor
stc
sub
es
mov
es
fdivr
es
popa
stos
shr
loop
and
(bad)
push
popa
xor
(bad)
xchg
retf
je
fmul
fld1
sahf
gs
sub
mov
popa
mov
push
sahf
inc
add
ret
fs
jmp
jle
ret
fs
xor
xchg
xor
leave
add
es
sbb
push
fdivr
es
popa
stos
shr
loop
and
pop
ds
xor
mov
mov
loop
or
xlat
push
popa
int
jmp
es
loop
cs
and
push
fdivr
es
popa
stos
shr
loop
and
pop
ds
xor
mov
mov
push
popa
mov
push
loopne
add
xor
nop
jo
jmp
sahf
fisubr
popa
xor
push
popa
xor
(bad)
xchg
retf
movs
in
fs
add
push
fcom
push
popa
stos
shr
xor
fld
or
push
popa
gs
out
xor
xchg
movs
and
ror
mov
adc
cwde
pusha
dec
jmp
jo
fsubr
fldpi
sahf
gs
fisub
in
fldpi
sahf
(bad)
fldenv
mov
fld
loop
push
popa
(bad)
into
mov
movs
adc
call
es
clc
(bad)
fwait
aaa
pop
xor
popa
mov
popa
xor
stos
popf
int
jmp
and
jno
push
jbe
push
loop
ss
cmps
xchg
cmp
popa
fidiv
popa
xor
(bad)
xchg
retf
movs
in
fs
xor
push
sahf
xchg
jmp
and
cmp
cmp
xor
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
data16
push
fdivr
es
popa
stos
shr
loop
and
pop
ds
xor
mov
mov
push
popa
mov
push
loopne
push
xor
xchg
jo
jmp
popf
int
jmp
and
jbe
mov
div
(bad)
fidiv
push
fdivr
es
popa
stos
shr
loop
and
pop
in
out
xor
mov
mov
gs
popa
mov
push
call
mov
jmp
mov
push
popa
xor
adc
dec
push
xchg
jo
jmp
sahf
fimul
shr
dec
push
popa
xor
(bad)
xchg
retf
movs
in
fs
add
push
fcom
push
popa
stos
shr
xor
fld
or
push
popa
gs
inc
and
es
movs
and
xchg
out
es
loop
out
jmp
cmp
es
cmps
mov
push
sahf
int
lahf
xchg
sbb
lahf
cmps
mov
rcr
dec
lods
xchg
test
mov
jmp
cdq
int
jmp
data16
loope
mov
fstp
sahf
iret
fst
sahf
cmp
fisubr
clc
(bad)
mov
mov
popa
xor
xor
adc
pushf
int
shl
inc
inc
in
(bad)
es
sahf
int
jle
ret
fs
in
(bad)
es
sahf
int
dec
jo
push
loop
xor
in
fldpi
sahf
mov
rcr
xor
sbb
inc
fldl2t
sahf
int
loop
int3
fldl2t
adc
stos
xchg
popa
xor
jmp
sahf
int3
fld
push
(bad)
push
popa
(bad)
into
bound
xor
xchg
movs
sub
loope
mov
fstp
popa
xor
(bad)
xchg
retf
movs
in
fs
xor
push
sahf
xchg
jmp
and
es
movs
cmp
and
es
imul
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
call
push
popa
stos
shr
loop
and
pop
ds
xor
mov
mov
fs
popa
mov
push
loopne
out
jmp
popa
xor
xchg
xchg
int
jmp
lahf
int
xchg
test
mov
call
(bad)
int
jmp
call
xor
popf
and
scas
xchg
cdq
int
jmp
popa
mov
push
popa
int
push
outs
mov
pop
popa
xor
push
jmp
push
pop
mov
jmp
xor
es
jmp
xchg
(bad)
int
jmp
cmp
fs
in
mov
jmp
or
push
loop
sub
sahf
mov
jmp
popa
inc
fistp
stos
int
jmp
call
int
xchg
movs
int
jmp
popa
xor
jmp
stos
int
jmp
sahf
iret
fld
pop
sbb
popa
mov
fld
inc
fsubrp
sahf
mov
adc
mov
jmp
xchg
int
jmp
aam
fldpi
sahf
mov
fld
push
(bad)
push
popa
(bad)
into
cli
and
es
movs
sub
ror
mov
popa
xor
adc
dec
dec
xchg
jo
jmp
sahf
fcmovb
push
popa
xor
push
popa
xor
(bad)
xchg
retf
movs
in
fs
xor
push
sahf
xchg
jmp
and
es
movs
cmp
push
xor
scas
imul
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
xchg
sbb
lahf
cmps
int
out
iret
fsin
bound
es
sahf
mov
jmp
popa
xor
jmp
sahf
int3
fld
clc
shr
sahf
mov
sbb
mov
jmp
outs
mov
call
xchg
jo
jmp
sahf
fisubr
popa
xor
push
popa
xor
(bad)
xchg
retf
movs
in
fs
xor
push
sahf
xchg
jmp
and
es
movs
cmp
ror
mov
popa
xor
adc
dec
fst
into
fld1
sahf
fcmovu
sub
movs
shr
lahf
sub
lahf
sbb
xor
(bad)
xchg
retf
movs
in
fs
xor
push
sahf
xchg
jmp
pop
xor
xchg
movs
cmp
xchg
jo
jmp
sahf
(bad)
sub
movs
shr
dec
sbb
shl
call
int
ror
mov
popa
xor
adc
into
jbe
xor
scas
add
es
clc
(bad)
jmp
jle
ret
fs
fidivr
popa
xor
sub
lahf
sbb
xor
(bad)
xchg
retf
movs
in
fs
xor
push
sahf
xchg
jmp
pop
xor
xchg
movs
cmp
push
pop
xor
scas
imul
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
xchg
(bad)
in
fldpi
sahf
mov
es
fdivr
es
popa
stos
shr
loop
and
pop
ds
xor
mov
mov
push
popa
mov
push
mov
sbb
popa
mov
popa
xor
adc
into
cmps
pop
xor
scas
add
es
clc
(bad)
jmp
jle
ret
fs
fimul
shl
(bad)
and
fldenv
mov
push
call
hlt
into
bound
es
imul
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
ret
sahf
xchg
jmp
pop
xor
xchg
movs
cmp
sub
es
imul
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
ret
sahf
xchg
jmp
pop
xor
xchg
movs
cmp
loope
mov
fstp
popa
xor
(bad)
xchg
retf
movs
in
fs
xor
push
sahf
xchg
jmp
pop
xor
xchg
movs
cmp
jmp
sahf
int3
fld
xor
push
popa
(bad)
into
ret
es
movs
and
mov
imul
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
xchg
xor
lahf
cmps
pop
es
xor
mov
mov
loop
mov
popa
mov
popa
xor
adc
dec
push
xchg
jo
jmp
sahf
fidiv
shr
ja
popa
xor
(bad)
xchg
retf
scas
shl
xor
jno
fmul
fld1
sahf
gs
dec
je
push
popa
mov
push
call
hlt
into
ss
xor
scas
imul
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
frstor
xchg
jmp
pop
xor
xchg
movs
cmp
(bad)
pop
xor
scas
imul
push
clc
(bad)
fwait
aaa
pop
add
popa
int
jmp
es
loop
cs
(bad)
pusha
xor
sub
lahf
sbb
xor
(bad)
xchg
retf
movs
in
fs
add
push
fcom
push
popa
stos
shr
xor
fld
or
push
popa
gs
mov
movs
and
mov
jmp
sahf
ficomp
shr
es
pop
and
popa
pop
es
xor
push
sahf
inc
cs
push
or
push
call
int
out
ret
sahf
xchg
jmp
pop
xor
jl
mov
fld
int
jmp
fldpi
sahf
fidiv
mov
mov
push
push
popa
int
jmp
es
fld
push
popa
(bad)
in
fldpi
sahf
mov
push
push
popa
mov
fscale
ins
mov
mov
lahf
cmps
ins
js
test
jae
test
es
fsubrp
cmp
es
mov
lahf
cmps
hlt
arpl
popa
fstp
lahf
cmps
cmp
dec
popf
mov
fwait
in
fsubr
sahf
(bad)
into
ficomp
es
pop
mov
xchg
sahf
int3
fldl2t
xor
push
popa
mov
push
xchg
int
xchg
movs
cmps
push
sahf
xor
fistp
jle
frstor
js
push
popa
pop
daa
push
popa
mov
xor
int
jle
fsub
call
int
and
dec
adc
mov
test
cdq
add
lahf
cmps
ins
out
aad
mov
and
popa
popa
jo
fidivr
pop
or
shl
call
int
shl
xchg
mov
popf
and
cmps
cs
cmp
daa
lahf
in
fucomi
sahf
mov
and
popa
xor
lahf
in
mov
loope
xor
daa
mov
aaa
jo
or
push
jmp
push
call
int
out
push
retf
aaa
fisub
popa
xor
jmp
sahf
int
and
es
xor
lods
fwait
sbb
fldl2t
in
data16
in
data16
and
fld
and
push
popa
mov
fldl2t
aam
fucomi
sahf
fisub
cs
xor
jmp
sahf
int
loop
xor
popf
xor
lods
fwait
adc
data16
jmp
inc
imul
inc
arpl
fs
hlt
mov
and
icebp
call
int
ror
ss
push
popa
(bad)
and
scas
xchg
cmc
iret
fldl2t
call
cmc
dec
push
or
stos
xchg
(bad)
jmp
popa
xor
jbe
xor
inc
mov
push
popa
pop
and
popa
xor
jmp
and
dec
mov
arpl
es
mov
jmp
push
ficom
(bad)
mov
push
popa
mov
fild
xor
(bad)
fwait
iret
fldl2t
call
cmc
dec
adc
es
in
fsubr
sahf
bound
jmp
popa
xor
mov
sahf
xchg
mov
sahf
xchg
mov
sahf
xchg
fwait
in
fucomi
sahf
(bad)
into
lock
int
xchg
movs
adc
jmp
aaa
ficomp
and
scas
out
dec
retf
push
repnz
push
arpl
es
fsub
mov
call
ret
push
call
cmc
stos
xchg
aad
fldl2t
xor
fld
mov
adc
sahf
int
xchg
in
fldl2t
call
cmc
dec
push
or
stos
xchg
fxch
fldl2t
xor
das
das
popa
xor
daa
cdq
mov
fsubr
sahf
jbe
push
popa
cmc
mov
pop
popa
xor
jo
mov
call
call
mov
jmp
int
shl
(bad)
mov
bound
loope
mov
fldl2t
pusha
xor
shr
mov
call
sub
fldl2t
cmp
fld
mov
call
popa
pop
es
pop
es
pop
es
in
fsubr
sahf
bound
in
adc
popa
cmp
sbb
in
es
popa
int
mov
inc
es
loopne
xor
popa
xor
mov
or
xlat
push
popa
pop
pop
clc
and
stos
xchg
popf
int3
fldl2t
xor
mov
popa
xor
jno
int
push
mov
loope
sub
push
in
mov
call
adc
fs
mov
adc
popa
mov
cmp
push
mov
push
popa
mov
jno
int
pop
jmp
inc
jmp
int
adc
cli
das
int
imul
push
pop
es
loopne
jp
popa
xor
jmp
popa
ret
mov
adc
popa
pop
and
popa
xor
jmp
push
xor
jl
pop
dec
clc
and
stos
xchg
popf
int3
fldl2t
xor
lods
sahf
int
shr
fldl2t
popa
xor
loop
mov
std
jge
or
cmc
js
popa
xor
sbb
xchg
mov
xchg
cmps
int
push
popa
mov
fld
or
push
popa
mov
mov
lahf
cmps
fs
inc
push
xor
jl
int
mov
int
inc
push
es
call
cmc
fldenv
mov
mov
dec
aas
imul
lahf
test
jno
cmp
cdq
mov
cdq
(bad)
and
scas
rcr
cmps
jbe
popa
(bad)
and
scas
rcr
push
es
call
int3
fldenv
fiadd
aam
mov
shl
call
int
push
mov
in
call
dec
adc
popa
mov
rcl
popa
cmp
xchg
inc
popf
xor
sbb
rcl
mov
xchg
inc
xchg
mov
dec
push
mov
loopne
cmps
xchg
popa
add
xchg
sbb
daa
sbb
repnz
push
test
arpl
xor
mov
popa
xor
push
call
(bad)
into
push
push
xor
lahf
cdq
xor
lahf
cmps
int
sbb
arpl
in
jbe
adc
(bad)
into
out
push
xor
jmp
and
stos
push
addr16
sub
jno
jbe
mov
cmp
bound
fs
neg
(bad)
rcr
and
push
popa
mov
es
or
es
(bad)
and
call
cmc
dec
jmp
popa
xor
(bad)
data16
push
aaa
ficom
and
xor
shr
ja
dec
aas
imul
scas
sub
pop
push
popa
popa
jo
jmp
jns
dec
dec
push
popa
(bad)
in
(bad)
jmp
cdq
mov
(bad)
jmp
popa
mov
fld
mov
neg
fsub
movs
push
push
popa
mov
mov
lahf
cdq
sbb
lahf
cmps
popa
fldenv
mov
push
popa
mov
push
push
xchg
neg
fisub
daa
popa
xor
rcl
data16
add
mov
push
jle
es
cmps
(bad)
sub
popa
mov
fld
mov
neg
jo
push
popa
cmp
bound
fldenv
mov
push
popa
mov
push
push
xchg
neg
fimul
out
dec
retf
push
repnz
ins
(bad)
mov
xor
popa
ins
js
test
jae
test
into
jb
xor
inc
aaa
lods
dec
imul
rcr
mov
push
popa
(bad)
in
stc
jmp
or
daa
push
popa
fiadd
daa
popa
xor
shr
jmp
ficomp
xor
call
call
std
scas
sahf
int
shr
jae
and
jne
popw
es
loop
cs
xchg
(bad)
in
stc
jmp
mov
pop
push
xchg
popa
rcr
jmp
popa
xor
and
lahf
sbb
xor
(bad)
xchg
retf
movs
in
fs
xor
shl
neg
push
es
loop
cs
jmp
xchg
(bad)
in
fldl2t
call
xor
scas
imul
push
clc
(bad)
fwait
aaa
pop
aas
mov
popa
mov
popa
xor
stos
popa
rcr
jmp
and
stos
stos
popa
rcr
jmp
popa
xor
and
lahf
sbb
xor
(bad)
xchg
retf
movs
in
fs
xor
shl
neg
push
es
loop
cs
ret
fs
in
mov
neg
push
es
loop
cs
xchg
add
lahf
cmps
fcmove
and
popa
xor
(bad)
xchg
retf
movs
in
fs
xor
shl
neg
push
es
loop
cs
cmps
add
push
fdivr
es
popa
stos
shr
loop
and
ficom
jne
xor
(bad)
xchg
retf
je
fdiv
(bad)
jmp
(bad)
jo
fdiv
(bad)
jmp
push
xor
xchg
movs
and
arpl
xor
and
stos
xchg
popa
rcr
jmp
and
stos
xchg
popa
rcr
jmp
popa
xor
pop
add
inc
add
push
fdivr
es
popa
stos
shr
loop
and
pop
ds
xor
jmp
popa
xor
out
xor
jmp
popa
xor
bound
inc
es
fdivr
es
popa
stos
shr
loop
and
pop
ds
xor
jmp
popa
xor
out
xor
jmp
popa
xor
and
xor
(bad)
xchg
retf
movs
in
fs
paddd
push
es
popa
stos
shr
xor
fld
push
push
popa
mov
fld
cld
adc
popa
mov
push
or
(bad)
push
popa
mov
fld
in
adc
popa
mov
push
fstp
pusha
push
popa
(bad)
in
stc
jmp
jmp
push
popa
stos
shr
loop
and
pop
ds
xor
jmp
popa
xor
clc
and
stos
xchg
popa
rcr
jmp
popa
xor
and
xor
(bad)
xchg
retf
movs
in
fs
xor
shl
neg
add
push
loop
cs
ret
in
mov
neg
add
push
loop
cs
xchg
sbb
lahf
cmps
fidiv
and
xor
(bad)
xchg
retf
movs
in
fs
xor
shl
neg
add
push
loop
cs
popa
rcr
jmp
and
stos
xchg
popa
rcr
jmp
popa
xor
daa
popa
xor
(bad)
xchg
retf
movs
in
fs
xor
shl
neg
add
push
loop
cs
ret
in
mov
neg
add
push
loop
cs
xchg
add
lahf
cmps
fisubr
sbb
xor
(bad)
xchg
retf
movs
in
fs
xor
shl
neg
add
push
loop
inc
add
push
fcomp
and
out
call
adc
fwait
push
or
enter
fwait
push
or
pop
push
popa
mov
push
mov
push
popa
mov
popa
xor
adc
dec
push
xchg
jo
fwait
in
(bad)
jmp
push
xor
xchg
movs
cmp
xchg
test
fldl2t
call
jo
fwait
in
(bad)
jmp
push
xor
xchg
movs
cmp
out
xor
scas
imul
push
clc
(bad)
fwait
aaa
pop
add
sub
push
popa
mov
fld
cmp
push
popa
mov
push
mov
push
push
popa
mov
popa
xor
adc
into
scas
push
xor
scas
add
es
clc
(bad)
in
(bad)
neg
fsub
(bad)
neg
add
push
loop
ss
frstor
mov
neg
add
push
loop
cs
pop
es
pop
es
pop
es
popa
jb
(bad)
pop
pop
es
call
int
clc
loop
es
in
mov
neg
pop
es
or
stos
stos
cdq
in
fldl2t
bound
jmp
mov
pop
es
sahf
xchg
leave
sahf
int
es
xor
scas
mov
aam
xchg
sub
pop
(bad)
and
and
cmps
ins
js
test
jae
test
es
aaa
gs
es
sar
dec
sbb
push
xchg
aad
xchg
in
fldl2t
call
iret
fldl2t
popa
mov
loope
xchg
mov
cmp
lods
inc
imul
fst
popa
mov
mov
lahf
cmps
fcmovb
cmp
scas
sbb
aad
sahf
mov
loope
fisub
and
push
popa
mov
fnstcw
es
in
fucomi
sahf
(bad)
into
dec
dec
xor
jle
xor
push
in
mov
jmp
int
jle
fsub
xchg
push
popa
pop
and
popa
mov
rol
push
das
(bad)
outs
mov
adc
xor
pusha
xor
fwait
in
fsubr
sahf
bound
jmp
popa
xor
rcr
int
fwait
in
fucomi
sahf
(bad)
into
in
int
xchg
movs
ds
(bad)
outs
mov
adc
xor
(bad)
jo
fwait
in
fsubr
sahf
(bad)
into
push
dec
xor
fwait
in
fucomi
sahf
bound
jmp
popa
xor
int
int
lahf
in
fucomi
sahf
mov
loope
and
mov
jmp
dec
xor
xchg
movs
cs
out
pusha
retf
cmps
mov
call
popa
xor
xchg
test
fldl2t
pusha
xor
push
loop
mov
bound
loope
mov
fldl2t
pusha
xor
push
in
mov
call
xlat
fldl2t
cmp
fld
mov
call
popa
pop
es
pop
es
pop
es
in
fsubr
sahf
bound
test
push
popa
cmp
sbb
mov
xchg
mov
cmp
es
loopne
std
jo
xor
mov
or
xlat
push
popa
pop
pop
clc
and
stos
xchg
popf
int3
fldl2t
xor
imul
xor
imul
sbb
push
in
mov
call
adc
fs
mov
or
pop
mov
xor
push
mov
imul
int
adc
cli
das
loopne
mov
pop
popa
xor
xchg
xor
dec
retf
call
xor
fwait
in
fucompp
sahf
bound
add
es
or
dec
jl
jo
fwait
in
fucompp
sahf
(bad)
into
sbb
movs
ds
sahf
xor
sbb
loopne
push
popa
mov
fld
ficomp
int
shr
out
in
es
popa
pop
es
sahf
mov
fld
fmul
push
popa
mov
add
es
in
fucomi
sahf
(bad)
fldenv
mov
repz
mov
cmp
sbb
push
or
enter
xchg
cmp
xor
push
fs
aaa
fisubr
shl
out
dec
pop
sub
or
popf
cld
scas
fucomi
sahf
mov
sub
mov
fldenv
mov
lock
mov
fldl2t
loop
adc
sbb
jmp
cmps
jp
push
popa
fs
mov
es
scas
fucomi
sahf
xor
push
popa
mov
mov
in
fucomi
sahf
(bad)
into
dec
dec
xor
lahf
cdq
xor
lahf
cmps
pop
es
sahf
(bad)
aas
popa
xor
mov
mov
mov
ficom
cdq
mov
out
aam
xor
test
jno
cmp
cdq
adc
ror
mov
push
popa
popa
into
repnz
xor
lahf
and
fldenv
(bad)
aas
popa
xor
adc
pusha
dec
push
mov
movhps
loopne
cmps
out
and
popa
popa
jo
into
adc
xchg
aas
popa
xor
arpl
jb
pusha
pusha
into
mov
es
mov
add
popa
mov
es
or
inc
push
popa
pop
es
fiadd
rcr
jae
push
popa
(bad)
and
scas
ror
int
(bad)
sbb
push
in
ja
inc
aaa
(bad)
xor
jo
sahf
adc
pop
out
call
ins
js
test
jae
test
into
ss
xor
inc
lea
push
cmps
shr
inc
es
or
fldenv
fisubr
shr
push
adc
int
call
cmc
dec
jmp
in
(bad)
jmp
adc
es
or
fldenv
mov
fld
fisttp
sbb
push
popa
inc
and
cdq
sbb
lahf
cmps
pop
and
mov
movhps
loopne
into
ins
js
mov
fidiv
inc
fidiv
sahf
and
arpl
call
int3
daa
push
mov
out
push
retf
outs
test
xor
clc
and
stos
push
(bad)
(bad)
into
inc
dec
xor
fwait
and
jbe
popa
pop
gs
popa
xor
and
and
movhps
xchg
push
lahf
mov
adc
and
stos
push
(bad)
(bad)
into
ds
xor
xchg
movs
sub
push
or
push
popa
int
cmp
jae
(bad)
loop
es
loopne
push
add
and
sub
ins
dec
test
lahf
test
inc
lea
out
pusha
retf
or
dec
adc
xor
aaa
dec
pop
or
dec
push
or
dec
xchg
es
pop
es
pop
ss
cmps
sbb
push
call
pop
es
or
jo
push
int
xchg
shl
(bad)
jle
es
or
jo
push
int
dec
jae
(bad)
outs
sbb
push
call
cmc
dec
pop
aaa
pop
push
jmp
popa
fcmovu
ds
xor
pop
push
jmp
popa
fcmove
ds
xor
pop
push
jmp
popa
(bad)
ds
xor
ror
xor
push
int
ds
jae
(bad)
mov
xor
push
int
ss
jae
(bad)
rcr
es
or
jo
push
int
xchg
jo
inc
sbb
push
or
jo
push
int
(bad)
shl
(bad)
repnz
push
loopne
push
popa
xor
pop
push
jmp
popa
ficomp
popa
xor
pop
push
jmp
popa
fimul
popa
xor
push
popf
mov
dec
es
pop
mov
and
into
inc
dec
xor
jl
fs
es
pop
mov
push
dec
xor
scas
fldenv
push
xchg
aad
push
cdq
mov
in
call
mov
fisub
cdq
mov
adc
int3
jae
(bad)
mov
adc
lahf
and
dec
jmp
into
scas
inc
xor
jl
int
xchg
shl
(bad)
(bad)
adc
mov
pop
repz
and
dec
jmp
into
add
lahf
cdq
(bad)
and
scas
ror
into
fldenv
dec
popf
addr16
mov
push
popa
xchg
add
call
int
cmp
jae
inc
adc
fldenv
jge
pushw
mov
popa
xchg
es
xor
call
int
or
jb
(bad)
and
fldenv
dec
popf
addr16
mov
add
popa
xchg
pop
cmps
and
dec
ret
call
int
ds
jae
(bad)
jle
es
loopne
mov
jmp
into
push
inc
xor
mov
fwait
pushw
or
scas
push
popa
pop
fucompp
push
adc
xor
dec
jmp
into
retf
es
popf
addr16
or
scas
push
popa
pop
fucompp
push
mov
push
popa
(bad)
xor
scas
out
push
retf
ds
in
call
fs
dec
add
js
retf
call
jo
jmp
popf
int
lahf
cmps
pop
retf
xor
or
fldl2t
loop
ss
popf
addr16
loopne
or
popa
xor
fcmovb
xor
cmps
stc
ror
push
in
ja
inc
aaa
(bad)
xor
dec
push
sahf
pop
adc
aaa
mov
rol
ja
cmp
popa
pop
es
xor
push
popa
pop
iret
sti
and
dec
push
arpl
es
adc
push
ret
push
popa
pop
es
popa
pop
es
or
lods
push
cdq
sbb
loop
inc
inc
or
dec
add
xor
xchg
xor
sti
and
dec
hlt
mov
jl
ficom
popa
xor
lahf
cdq
(bad)
and
scas
ror
xor
and
addr16
or
fldenv
and
mov
arpl
dec
ja
xchg
mov
jl
pop
xor
xor
push
popa
pop
(bad)
sti
and
dec
push
mov
push
popa
xchg
inc
cmps
and
dec
push
or
dec
push
or
dec
adc
xor
xor
mov
popa
pop
es
pop
cs
ficom
popa
xor
jl
int
adc
jae
(bad)
scas
pop
es
or
fldenv
push
popf
addr16
or
fldenv
and
and
arpl
es
pop
push
jle
xor
inc
or
push
popa
pop
(bad)
sti
and
dec
push
mov
add
popa
xchg
pop
cmps
and
cmps
stc
call
and
addr16
or
fldenv
and
and
arpl
es
pop
push
jle
xor
inc
or
retf
push
popa
pop
(bad)
sti
and
dec
push
mov
movs
and
dec
push
sahf
pop
adc
sahf
pop
bound
or
daa
push
popa
pop
xchg
popa
xor
xor
push
xor
cli
and
dec
hlt
mov
jl
fisubr
popa
xor
jl
int
and
jae
jl
int
push
shl
jl
pop
pop
pop
popa
xor
popa
xor
jl
pop
es
popa
bound
lea
jle
fbld
xor
add
mov
popf
addr16
or
fldenv
push
popf
addr16
or
fldenv
add
dec
jb
cwde
es
popa
pop
xor
xor
push
popa
pop
stos
cli
and
dec
push
mov
add
popa
xchg
into
mov
dec
push
es
or
es
xor
push
xor
mov
imul
gs
popa
xor
and
mov
push
popa
pop
es
popa
pop
es
popa
pop
or
popa
xor
cwde
es
popa
pop
pop
jle
xor
push
popa
pop
stos
cli
and
dec
push
mov
popa
xchg
cmps
cmps
and
dec
push
sahf
pop
adc
sahf
pop
inc
cmps
and
dec
cmp
es
pop
mov
popa
xor
popa
xor
jle
xor
push
popa
pop
stos
cli
and
dec
push
mov
add
popa
xchg
or
push
xor
loope
mov
into
adc
int
jl
int
and
jae
jl
int
push
shl
jl
pop
sbb
push
or
push
popa
pop
es
popa
bound
lea
jle
fbld
xor
out
xor
mov
and
xor
pop
adc
sahf
pop
bound
or
fst
popa
xor
pusha
xor
jle
xor
inc
or
push
popa
pop
(bad)
sti
and
dec
push
mov
cmps
and
dec
push
sahf
pop
adc
sahf
pop
bound
or
push
pusha
xor
jle
xor
push
or
es
xor
cli
and
dec
hlt
mov
jl
ficom
popa
xor
jl
int
and
jae
jl
int
push
shl
jl
pop
fist
popa
xor
pusha
xor
jl
pop
es
popa
bound
lea
jle
fbld
xor
sub
es
lahf
addr16
call
cmc
dec
push
sahf
pop
adc
sahf
pop
bound
or
pusha
xor
jle
xor
push
or
es
xor
cli
and
dec
hlt
mov
jl
fcmovu
xor
xor
jl
int
and
jae
jl
int
jbe
jo
jl
pop
or
popa
xor
popa
xor
jl
pop
es
loope
dec
retf
es
fisub
xor
popa
(bad)
xor
xor
jl
int
and
jae
jl
int
jbe
jo
jl
pop
movs
push
popa
xor
popa
xor
jl
pop
es
loope
dec
xchg
jo
jle
fisub
xor
popa
fisub
or
jb
lahf
cdq
sbb
lahf
cmps
pop
es
popa
pop
es
popa
pop
ds
pop
cli
push
popa
xor
xor
xchg
xor
out
xor
lea
jle
xor
push
mov
popa
xchg
push
mov
sahf
pop
adc
sahf
pop
inc
cmps
and
dec
push
or
jecxz
xor
jl
pop
es
loope
dec
retf
es
fisub
xor
popa
fisubr
xor
xor
jl
int
and
jae
jl
int
push
shl
jl
pop
mov
mov
jg
es
loope
dec
std
mov
jle
fisub
xor
ret
es
and
mov
cmp
shl
call
fiadd
sahf
int
dec
test
jae
test
cdq
shl
cmps
xchg
push
push
popa
pop
sar
and
fldenv
fcmovu
loopne
int
ror
fmulp
push
popa
fs
std
xchg
int
xchg
movs
and
lahf
cdq
sbb
lahf
cmps
pop
es
popa
fiadd
popa
xor
push
lea
jbe
mov
push
popa
pop
es
popa
pop
es
jmp
popf
and
or
push
or
dec
push
popa
mov
jle
ret
fs
or
retf
push
popa
pop
es
xor
xor
es
and
xor
and
addr16
or
jbe
pop
mov
(bad)
xchg
mov
jl
pop
xor
xor
push
popa
pop
(bad)
sti
and
dec
push
mov
push
push
popa
xchg
and
dec
retf
or
fldenv
push
popf
addr16
or
fldenv
and
push
daa
push
popa
mov
(bad)
xchg
mov
jl
pop
xor
xor
push
popa
pop
(bad)
sti
and
dec
push
mov
inc
cmps
and
dec
push
or
dec
push
or
dec
adc
xor
xor
mov
popa
pop
es
pop
cs
fcmove
ss
xor
jl
int
adc
jae
(bad)
sub
es
or
fldenv
push
popf
addr16
or
fldenv
add
dec
jb
es
add
xor
xchg
xor
out
xor
lea
jl
fisub
popa
xor
lahf
cdq
xor
lahf
cmps
pop
movs
cli
and
dec
push
or
push
popa
int
dec
jae
(bad)
call
push
popa
pop
es
xor
push
sahf
pop
into
mov
jle
es
pop
mov
push
add
xor
jl
push
popa
int
dec
jae
(bad)
cmps
sub
dec
push
or
dec
pop
pusha
xor
jmp
popa
ficom
push
sahf
pop
adc
sahf
pop
inc
cmps
and
dec
cmp
es
pop
xor
and
retf
es
fisub
xor
mov
xor
mov
and
inc
push
popa
(bad)
and
scas
ror
xor
and
addr16
or
fldenv
add
daa
push
popa
pop
sbb
mov
popa
xor
popa
mov
jle
ret
fs
or
es
ds
mov
ficom
push
sahf
pop
adc
sahf
pop
bound
or
dec
jle
xor
push
or
es
xor
cli
and
dec
hlt
mov
jl
fiadd
or
test
jo
xchg
xchg
enter
pop
es
popa
pop
es
popa
pop
ss
pop
mov
aad
xor
jle
xor
inc
or
push
popa
pop
(bad)
sti
and
dec
push
mov
cmp
popa
xchg
push
mov
sahf
pop
adc
sahf
pop
bound
or
es
popa
pop
xchg
popa
xor
xor
push
xor
cli
and
dec
hlt
mov
jl
fimul
out
jae
xchg
cmps
mov
push
popa
pop
es
popa
pop
es
popa
pop
ss
pop
lahf
push
popa
xor
popa
xor
jle
xor
inc
or
push
popa
pop
(bad)
sti
and
dec
push
mov
push
popa
xchg
mov
and
dec
push
sahf
pop
adc
sahf
pop
bound
or
daa
push
popa
pop
rcl
xor
xor
push
xor
std
and
dec
hlt
mov
jl
ficom
or
test
jo
jl
int
and
jae
jl
int
push
shl
jl
pop
fist
popa
xor
popa
xor
jl
pop
es
popa
bound
mov
jle
fbld
xor
out
jl
es
and
popf
addr16
or
fldenv
add
dec
xchg
popa
xor
jl
pop
xor
xor
push
popa
pop
das
cli
and
dec
push
arpl
es
fisubr
es
ret
push
popa
mov
loope
popa
int
and
jae
jl
int
jbe
jo
jl
pop
push
jl
pop
xor
xor
push
popa
pop
das
cli
and
dec
push
arpl
es
loop
es
ret
push
popa
pop
es
popa
pop
es
popa
pop
ds
pop
jns
jne
es
loope
dec
retf
es
fisub
xor
popa
fisubr
popa
xor
jl
int
and
jae
jl
int
push
shl
jl
pop
mov
push
pusha
xor
jl
pop
es
loope
dec
std
mov
jle
fisub
xor
add
mov
and
mov
loope
mov
jmp
xor
ret
xchg
lea
jne
lea
daa
push
cmps
stc
(bad)
xor
push
or
dec
xchg
popa
xor
jl
pop
es
pop
es
popa
mov
arpl
retf
or
xor
sbb
cmps
es
popa
pop
es
mov
aas
push
popa
mov
adc
popa
fs
push
jnp
es
add
shl
and
popa
xor
push
in
ja
inc
in
ja
inc
in
ja
inc
sahf
inc
ss
mul
xor
push
loope
call
or
adc
push
sahf
inc
fidivr
fldenv
outs
int
popa
int
sbb
aam
jmp
and
das
(bad)
adc
ss
push
cdq
(bad)
fldenv
pop
sbb
and
dec
pop
popa
xor
jmp
cdq
add
lahf
cmps
ins
js
test
jae
test
es
aaa
mov
dec
scas
arpl
loope
mov
fstp
jb
es
repnz
in
mov
jmp
ret
push
mov
push
popa
mov
push
popa
xor
sahf
cmp
cmps
imul
out
popa
mov
fld
dec
ds
popa
mov
jmp
std
repz
in
mov
jmp
add
es
call
hlt
cmps
imul
out
popa
mov
fld
je
push
popa
mov
jmp
jl
fs
in
mov
jmp
dec
sub
push
loope
fst
adc
dec
sub
xor
jmp
jns
es
cmps
test
push
popa
mov
jmp
cmp
fs
in
mov
jmp
call
adc
dec
iret
mov
xor
jmp
jbe
es
sbb
arpl
fst
and
stos
xchg
popa
int
jmp
popa
xor
pop
or
mov
inc
mov
adc
es
sbb
sub
jo
aam
and
stos
xchg
popa
int
jmp
popa
xor
pop
or
out
popa
mov
fld
mov
push
popa
mov
jmp
push
repz
in
mov
jmp
or
sbb
cmps
imul
out
popa
mov
fld
jl
push
popa
mov
jmp
add
mov
jmp
push
and
dec
push
or
push
popa
pop
jne
and
stos
xchg
popa
int
jmp
and
into
push
test
fnstcw
fldenv
jecxz
push
popa
pop
mov
into
dec
pushf
int
jle
adc
cmp
ds
hlt
iret
and
int
dec
cmp
in
popa
scas
repz
inc
ss
and
mov
jbe
xor
icebp
call
mov
push
popa
fs
fidivr
es
xor
into
jne
mov
loop
push
xor
repnz
push
loopne
inc
ss
xor
cmp
in
popa
scas
repz
push
push
popa
xor
mov
out
aam
xchg
test
fldl2t
call
ret
or
in
popa
mov
fld
ins
xor
popa
fcmovu
or
xor
(bad)
xchg
retf
scas
adc
aad
sahf
int
arpl
add
and
stos
xchg
mov
fldl2t
xor
pop
add
scas
out
ret
loope
aad
sahf
int
arpl
addr16
xor
jmp
popa
xor
jmp
add
fs
in
mov
loope
int
(bad)
xchg
daa
es
loope
aad
sahf
int
arpl
pop
aad
xor
jmp
popa
xor
loope
mov
fstp
cdq
int
adc
dec
and
shr
sahf
(bad)
into
mov
fadd
fsubrp
sahf
xor
pop
or
mov
inc
mov
fwait
in
int
adc
dec
fsub
(bad)
jmp
je
es
xchg
sbb
lahf
cmps
mov
in
int
push
adc
dec
mov
(bad)
jmp
je
es
fadd
fsubrp
sahf
cmp
or
mov
inc
mov
popa
mov
in
int
sbb
and
mov
(bad)
jmp
je
es
xchg
xor
lahf
cmps
mov
in
int
sbb
mov
(bad)
jmp
je
es
fadd
fsubrp
sahf
ds
pop
or
mov
inc
mov
xor
popa
mov
in
int
sbb
dec
xor
jo
fwait
in
shr
sahf
(bad)
into
into
jne
es
fadd
fsubrp
sahf
cmp
pop
or
in
popa
mov
fld
mov
push
popa
pop
push
cmps
and
stos
xchg
mov
fldl2t
xor
sahf
cli
sahf
int
clc
cmp
push
or
push
popa
pop
sub
and
into
mov
int
xchg
movs
and
jmp
sahf
int
bound
fwait
(bad)
xchg
int
push
adc
iret
xor
es
xchg
dec
dec
push
popa
mov
mov
xor
xchg
cmps
sbb
push
popa
mov
loopne
mov
and
out
sahf
mov
push
call
int
(bad)
outs
mov
adc
xor
std
arpl
es
fmul
fucompp
sahf
xor
xchg
shl
es
loope
(bad)
sahf
int
sbb
pop
daa
push
popa
mov
jmp
outs
mov
pop
popa
xor
xchg
sahf
into
fldl2t
popa
mov
loopne
in
fsubrp
sahf
bound
mov
fwait
in
fucompp
sahf
(bad)
into
(bad)
jns
es
movs
movs
stos
cdq
retf
popa
inc
paddd
sub
push
fcomi
mov
add
xlat
xchg
fsub
in
data16
dec
clc
scas
(bad)
cmp
fsubrp
sahf
int
xchg
pop
xor
push
loop
inc
mov
push
pop
mov
and
dec
and
jo
fwait
in
fsubr
sahf
(bad)
into
inc
jns
es
(bad)
ins
daa
push
popa
pop
mov
and
dec
xor
into
fsubrp
sahf
(bad)
into
cs
es
movs
sub
push
or
and
popa
mov
fld
push
xor
popa
mov
lods
xor
fwait
in
fsubrp
sahf
bound
mov
fwait
in
fsubr
sahf
(bad)
into
adc
es
fldenv
mov
out
sahf
int
(bad)
jbe
es
loop
xor
sahf
(bad)
into
dec
je
es
in
fucompp
sahf
mov
adc
mov
fld
xor
push
popa
mov
fld
lock
popa
mov
push
or
stos
xchg
popf
retf
xor
retf
add
scas
out
aam
xchg
mov
hlt
dec
pop
or
int3
push
popa
mov
fld
jecxz
jmp
push
xor
push
in
mov
jmp
into
push
jbe
es
call
int
loopne
cmp
push
loop
sub
push
popa
int
out
cdq
int
jle
and
int3
push
popa
mov
fld
je
push
popa
mov
push
or
in
popa
mov
fld
dec
xor
popa
mov
fld
dec
xor
popa
mov
fscale
inc
mov
fst
sahf
int
arpl
mov
shl
aaa
(bad)
sahf
int
std
outs
int
retf
fst
sahf
xor
call
hlt
fldenv
in
mov
call
mov
mov
call
stos
and
push
loop
ss
in
fsubrp
sahf
(bad)
into
push
jne
es
in
shr
sahf
mov
fld
int3
xor
into
xchg
int
fwait
sbb
jb
cmp
es
in
fsubrp
sahf
mov
fld
xchg
out
sahf
int
fidiv
es
xchg
sbb
lahf
cmps
mov
fld
lock
jmp
shr
sahf
int
push
xor
(bad)
and
push
in
mov
out
sahf
int
jl
int
loop
int
jle
inc
pushw
or
dec
push
mov
ss
es
in
fucompp
sahf
bound
aam
fsubrp
sahf
fiadd
shr
in
mov
int
jmp
sahf
fimul
out
ret
or
or
popa
xor
cmps
enter
ins
jge
mov
xlat
sahf
jb
xor
(bad)
and
push
xor
mov
jmp
inc
arpl
push
or
es
xor
push
mov
popa
mov
fstp
mov
movs
aaa
push
popa
pop
daa
(bad)
cs
es
cmp
es
and
test
into
jae
shl
push
popa
cmps
es
popa
mov
in
xor
aaa
push
popa
pop
fst
popa
xor
shl
dec
and
push
mov
into
jp
xor
lahf
mov
pop
and
popa
xor
jmp
mov
aaa
push
popa
pop
daa
jle
and
xchg
clc
sahf
int
(bad)
adc
sub
mov
pop
popa
xor
push
imul
es
popa
mov
xor
cmc
call
int
aad
aam
push
popa
mov
pop
add
ja
mov
xor
in
lahf
mov
scas
shl
cmc
addr16
fwait
mov
fnop
in
retf
jmp
mov
stos
(bad)
(bad)
jmp
jno
scas
xlat
xchg
fsub
in
data16
dec
clc
scas
(bad)
cmp
scas
in
cmps
sbb
in
retf
jmp
(bad)
(bad)
jmp
cmps
mov
sti
sahf
int
dec
es
call
inc
sub
in
retf
jmp
iret
(bad)
jmp
xor
es
in
retf
jmp
shl
jle
fsub
mov
cli
sahf
int
(bad)
cs
or
stos
xchg
ret
jmp
(bad)
int
inc
mov
mov
inc
mov
mov
int
inc
mov
loopne
sahf
mov
push
loopne
ss
popa
xor
mov
cli
sahf
int
(bad)
and
push
call
icebp
dec
pop
mov
push
popa
mov
in
movs
fsub
mov
call
push
into
jae
(bad)
mov
pop
int
and
fs
fcom
es
popa
rol
fldcw
popa
xor
mov
jle
and
int3
push
popa
pop
push
cmps
and
into
mov
fcomp
enter
adc
es
jl
es
xchg
push
sub
shr
jmp
mov
jle
and
int3
push
popa
pop
push
mov
xor
data16
es
retf
jmp
mov
scas
inc
xor
push
xchg
push
adc
pop
cmp
xor
shl
jle
fsub
xor
add
and
fstp
popa
mov
push
popa
xor
mov
jl
push
popa
(bad)
in
retf
jmp
popa
pop
es
pop
es
pop
es
popa
jb
push
iret
jae
(bad)
(bad)
cmp
xchg
xchg
mov
pop
and
popa
pop
es
mov
sub
popa
cmc
arpl
in
ja
inc
in
mov
stc
sahf
int
dec
cmp
push
in
mov
movs
ficomp
xor
or
stos
arpl
fs
fadd
fldenv
fcmovbe
sbb
dec
push
in
ja
inc
or
dec
push
xchg
jo
jmp
outs
xor
xchg
xchg
inc
inc
push
popa
cmc
arpl
in
ja
inc
in
mov
stc
sahf
int
(bad)
jmp
stc
sahf
int
ficomp
xor
or
stos
arpl
fs
fadd
fldenv
fidivr
push
in
ja
inc
or
dec
push
xchg
jo
jmp
outs
xor
jmp
outs
xor
scas
cmp
shr
jmp
sahf
int
aad
aaa
iret
sti
and
scas
push
adc
and
and
scas
into
push
jmp
popa
pop
es
scas
cmp
bnd
dec
es
or
into
fisubr
es
and
loope
mov
mov
in
popa
fiadd
push
mov
xor
push
cmps
ja
push
popa
xor
xchg
mov
cmc
arpl
popa
xor
push
in
ja
inc
mov
jmp
popa
pop
es
pop
es
pop
es
pop
es
stos
xor
mov
jle
fbld
xor
push
jno
es
popf
addr16
or
es
fidiv
popa
xor
inc
xchg
jmp
mov
push
popa
mov
cmp
stos
int3
push
popa
fimul
sbb
dec
xchg
mov
inc
mov
sub
popa
mov
fstp
mov
xor
int
mov
in
enter
es
popa
mov
mov
in
retf
jmp
int
fldl2t
xor
shl
xor
mov
jle
mul
xor
push
loope
out
test
cmp
arpl
add
jo
push
mov
jmp
mov
call
or
dec
popa
adc
jl
pop
dec
es
xor
sbb
xor
jmp
popa
pop
cwde
arpl
xor
xor
sbb
es
mov
jle
xor
push
or
fldenv
popa
popf
addr16
mov
popa
fnstcw
fwait
and
jbe
mov
es
loopne
sbb
popa
xor
ret
es
pop
es
mov
push
sbb
das
(bad)
adc
jns
cmp
in
popa
scas
repz
sbb
xor
lea
imul
es
jmp
xchg
clc
xor
push
push
cmp
out
arpl
push
and
push
popa
cmp
sub
es
adc
xor
sbb
test
push
popa
nop
popa
xor
xchg
jmp
push
popa
mov
jp
jo
push
outs
mov
push
popa
xor
mov
jmp
popa
(bad)
cmc
sahf
int
xchg
(bad)
iret
fldl2t
loopne
nop
jb
xor
mov
inc
mov
loop
call
int
out
pusha
retf
in
mov
jmp
int
jmp
sahf
fimul
sbb
das
(bad)
outs
mov
push
popa
xor
jmp
shl
(bad)
jb
es
push
mov
jmp
int
xchg
mov
fisub
popf
hlt
loop
jmp
pushf
int
das
mov
cmp
sahf
sbb
xchg
mov
lods
xor
jmp
add
ret
int
xchg
mov
mov
fnstcw
sahf
bound
xor
and
hlt
sub
popa
mov
mov
lahf
cmps
mov
jle
jo
push
outs
mov
adc
xchg
jo
mov
mul
(bad)
xor
mul
mov
bound
xor
fldl2t
cmp
es
adc
fldenv
or
adc
jmp
dec
retf
mov
push
popa
mov
loope
popa
popf
addr16
pop
ja
sbb
pop
and
popa
pop
es
jp
es
mov
push
popa
mov
xor
icebp
call
int
rol
xor
push
outs
mov
adc
fldenv
fidiv
sbb
iret
and
xor
lahf
cdq
(bad)
in
fucomi
sahf
mov
scas
xchg
cdq
int3
fldl2t
pop
aaa
mov
and
push
push
pop
aaa
push
cmps
and
push
sub
push
mov
pop
aaa
(bad)
mov
pop
aaa
mov
and
push
xor
pop
cmps
and
push
or
xchg
pop
aaa
sub
pop
aaa
xor
mov
es
or
fldenv
fcmove
sbb
lods
xchg
cdq
int3
fldl2t
pop
aaa
pop
cmps
and
push
push
pop
aaa
xchg
pop
aaa
adc
or
push
push
mov
sub
popa
pop
fldl2t
sahf
xor
arpl
(bad)
sbb
cmps
rol
es
loop
(bad)
jmp
int
xchg
(bad)
out
fucomi
sahf
xor
shr
mov
jmp
int
(bad)
cli
ds
call
int
dec
xor
cmp
pop
fst
popa
xor
jmp
int3
jae
(bad)
sahf
cmp
push
loope
daa
jmp
inc
pop
es
pop
jno
and
dec
push
mov
push
popa
int
dec
jae
(bad)
jbe
es
mov
and
popa
mov
inc
add
es
in
fldl2t
sahf
mov
fnop
in
fucomi
sahf
xor
push
pusha
cmp
es
xor
push
in
mov
jmp
push
mov
push
popa
fidivr
fwait
pusha
int
jmp
loope
daa
push
adc
movs
out
fs
cmp
mov
mov
fldl2t
xor
or
ins
psubusw
popa
xor
or
dec
push
or
es
mov
pop
mov
sahf
imul
dec
aaa
es
fld
ins
push
popa
(bad)
in
fucomi
sahf
mov
fldl2t
sahf
bound
jmp
and
stos
xchg
xchg
iret
fldl2t
xor
mov
popa
xor
push
popa
xor
jmp
les
(bad)
sahf
cmp
push
loope
daa
jmp
inc
pop
es
pop
xor
and
dec
push
mov
push
popa
int
or
jb
(bad)
jbe
es
mov
and
popa
mov
fst
pop
xor
arpl
adc
xor
mov
jl
ficom
sbb
xor
and
pushw
mov
das
push
popa
fnclex
adc
loopne
popa
int
jmp
xlat
mov
jmp
fs
jmp
gs
pop
push
popa
pop
int
and
dec
push
mov
das
push
popa
int
or
jb
inc
cmp
push
mov
mov
pop
jmp
es
adc
scas
shr
mov
jmp
in
fucomi
sahf
bound
mov
fwait
in
fucomi
sahf
(bad)
into
mov
movs
and
popa
xor
fwait
in
fldl2t
sahf
(bad)
fldenv
loope
fs
mov
das
push
popa
mov
pop
sahf
int
push
adc
dec
push
or
dec
fisttp
ficomp
popa
xor
and
and
das
push
popa
fld
adc
scas
out
xchg
aad
xchg
test
fldl2t
call
int
jmp
pushf
int
inc
or
int3
push
popa
mov
fld
or
push
or
es
popa
mov
fld
pop
or
imul
fldl2t
sahf
xor
or
dec
push
or
es
outs
cmp
push
sahf
pop
or
imul
es
call
cmc
stos
xchg
pusha
int
jmp
pushf
int
inc
or
jecxz
int
inc
mov
sub
popa
mov
push
or
es
popa
mov
fld
pop
push
mov
imul
fldl2t
sahf
xor
or
dec
push
or
push
popa
pop
es
cmp
push
sahf
pop
push
mov
imul
es
in
mov
movs
ficomp
xor
loop
and
jl
pop
push
jmp
xor
inc
cs
popa
int
ds
jae
(bad)
jle
es
mov
and
jmp
mov
sub
sahf
mov
fldl2t
pop
add
pop
or
or
dec
push
or
iret
push
popa
pop
es
push
cmp
push
sahf
pop
push
mov
data16
jmp
mov
call
in
fsubr
sahf
push
and
aas
cdq
mov
fldl2t
sahf
bound
jmp
and
stos
xchg
xchg
iret
fldl2t
xor
ret
pop
popa
xor
push
popa
xor
jmp
into
jae
(bad)
cs
daa
jmp
inc
pop
es
pop
xor
and
dec
push
mov
adc
into
jae
inc
xor
and
popa
hlt
mov
push
mov
sub
sahf
mov
fldl2t
pop
add
pop
or
or
dec
push
or
into
push
popa
pop
es
sbb
push
mov
data16
jmp
es
loope
fsubr
sahf
int
fwait
in
xor
jmp
and
fistp
xlat
cmps
fsubr
sahf
int
aam
call
in
mov
jmp
in
fucomi
sahf
bound
mov
fwait
in
fucomi
sahf
(bad)
into
or
es
movs
and
xor
xor
xor
push
and
mov
xor
lahf
in
fsubr
sahf
mov
mov
popf
in
fucomi
sahf
mov
es
int
loop
int
(bad)
shl
es
loope
push
shl
xor
arpl
mov
es
test
xor
arpl
mov
fld
push
mov
xchg
int3
fldl2t
mov
and
popa
pop
es
in
fucomi
sahf
bound
sub
push
popa
int
loop
int
(bad)
scas
aaa
es
in
mov
movs
ficomp
xor
or
stos
adc
stos
mov
xchg
loop
int
inc
aaa
es
or
stos
xchg
xchg
iret
fldl2t
xor
jle
shl
shr
sahf
int
sahf
xor
xchg
xchg
aad
push
popa
int
loop
int
(bad)
jp
es
sahf
pop
bound
xor
pop
es
pop
es
pop
es
popa
jb
shl
mov
mov
call
lds
push
or
dec
push
or
fldenv
mov
and
popa
mov
es
test
xor
arpl
mov
fld
mov
and
fldenv
mov
and
popa
pop
es
in
fucomi
sahf
bound
ret
popa
int
loop
int
dec
retf
call
int3
fldl2t
mov
and
jo
pop
popa
xor
xchg
cmps
xor
popa
pop
and
push
shl
xor
mov
jle
mul
xor
push
loope
xchg
lahf
sahf
int
sar
and
push
cmp
adc
scas
out
xchg
aad
xchg
mov
cmc
int
sahf
inc
xor
adc
fldenv
int
push
mov
and
popa
ins
js
test
ss
xor
ret
xchg
lea
jne
ss
sbb
xchg
lods
push
ins
(bad)
pop
popa
xor
xchg
mov
retf
call
cmp
xchg
stos
xor
push
pop
pop
mov
sbb
and
into
mov
cdq
sbb
lahf
cmps
or
dec
jae
arpl
adc
out
ss
pop
pop
cmps
cmps
and
push
sbb
and
into
push
xor
sub
popa
inc
sub
push
popa
fimul
popa
xor
rcr
cmp
sahf
pop
push
mov
xor
sub
popa
inc
sub
push
popa
ficomp
adc
sahf
stos
dec
xor
loope
mov
sbb
push
adc
cmps
sub
inc
sub
push
popa
fidiv
adc
sbb
push
adc
cmps
sub
inc
xor
push
popa
fcmovu
adc
call
cmc
pop
int
pop
into
mov
jmp
out
pusha
retf
pop
pop
cmps
cmps
and
push
adc
das
sbb
dec
popf
addr16
adc
lods
or
addr16
call
cmc
sbb
push
adc
lods
or
pushw
pop
pop
push
mov
jmp
and
addr16
adc
lods
or
pushw
pop
pop
mov
adc
das
cmp
adc
int
push
sahf
inc
sub
ficom
popa
xor
adc
retf
call
sti
in
popa
xor
jmp
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
call
mov
push
popa
mov
push
xor
and
inc
xor
xchg
movs
cmp
bound
loope
mov
popa
xchg
pop
adc
mov
popa
sbb
xor
movs
out
inc
inc
aad
pusha
jne
test
cmp
bound
ss
hlt
es
popa
pop
daa
inc
or
jbe
mov
fldl2t
ds
in
loopne
es
popa
xor
push
jno
es
gs
sbb
jno
es
loop
gs
fincstp
popa
xor
popf
xor
mov
jmp
xchg
pushf
ror
in
jnp
popf
and
dec
add
xchg
xchg
mov
mov
bound
gs
popa
xor
jmp
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
popa
mov
es
