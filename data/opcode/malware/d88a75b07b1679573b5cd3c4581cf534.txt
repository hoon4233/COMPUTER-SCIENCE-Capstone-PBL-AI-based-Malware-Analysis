mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
add
inc
outs
jae
inc
fnsave
jb
inc
xor
add
add
aas
fild
or
outs
jb
dec
outs
je
xlat
retw
mov
xor
jg
test
ins
(bad)
ins
jmp
fbld
cmp
mov
gs
int3
fdiv
mov
push
mov
dec
shr
push
int3
fs
call
sti
adc
push
outs
imul
mov
pop
fs
add
adc
into
mov
out
ss
add
add
fmul
ins
test
inc
jns
lods
loopne
outs
pop
add
dec
popa
je
jbe
dec
jae
jae
scas
add
xor
inc
push
pusha
js
add
and
jge
jo
inc
mov
push
fs
mov
fsubr
inc
inc
outs
jne
add
les
out
ins
add
jg
jo
aas
aam
inc
jne
jb
arpl
(bad)
out
fstp
mov
push
je
mov
fistp
lds
push
xchg
xor
xor
loop
dec
sub
or
cmp
out
and
add
xor
pop
mov
dec
lock
outs
cmp
mov
sar
sbb
mov
ins
lds
loopne
and
clc
or
lds
icebp
hlt
xchg
push
mov
(bad)
push
push
movs
sbb
cwde
and
loope
adc
push
inc
ins
popa
jae
adc
add
push
loop
sub
dec
push
inc
push
push
dec
push
mov
push
inc
sbb
inc
adc
add
mov
add
xor
sbb
sbb
mov
inc
inc
push
xor
jmp
and
add
sbb
sub
outs
jo
inc
jno
sub
xor
je
cmp
jbe
(bad)
sbb
fiadd
gs
pop
add
sbb
or
cmp
addr16
imul
js
xor
xlat
sbb
movmskps
jb
popa
arpl
les
outs
adc
xor
cmp
push
andps
loopne
fadd
sbb
add
lea
and
add
(bad)
in
xor
stos
ss
add
push
push
popa
push
mov
adc
mov
data16
jo
sbb
push
in
and
inc
and
aas
or
pop
xchg
shl
inc
or
push
aad
or
jne
add
push
add
imul
aad
adc
cld
push
cmp
and
dec
loopne
rol
test
pop
or
popa
jge
add
ret
or
call
retf
inc
imul
push
pusha
stos
inc
retf
push
push
and
test
push
dec
jb
add
or
or
jecxz
fld
add
push
jecxz
adc
cmp
lods
push
add
push
sbb
inc
jns
scas
sbb
push
and
push
cmp
jl
out
inc
xor
ja
pop
iret
ror
clc
add
loopne
inc
adc
iret
jae
mov
add
pop
out
movhps
das
dec
je
scas
fadd
inc
sahf
pushf
pushf
pushf
jnp
cld
cmp
fnstsw
mov
lods
repz
xor
daa
daa
mov
punpckldq
mov
psadbw
daa
sbb
push
stc
jmp
cli
outs
push
psubq
push
fistp
pop
cld
dec
mov
lock
in
dec
dec
call
arpl
fmul
dec
clc
clc
inc
push
inc
aas
mov
add
jmp
push
gs
data16
and
(bad)
test
fiadd
dec
inc
sub
mov
imul
dec
jno
push
ds
or
cdq
stos
test
cwde
outs
mov
arpl
push
jmp
mov
dec
jnp
add
adc
jo
sub
sar
push
adc
push
iret
push
sub
ins
sbb
jo
inc
inc
push
mov
adc
cmp
push
add
push
fs
fmul
shr
add
jno
add
popa
jo
das
adc
bound
adc
inc
fisub
push
sub
sbb
imul
shl
jp
scas
jbe
xchg
cmp
jp
push
loope
push
push
outs
ins
shl
jae
jle
inc
add
push
add
ja
add
or
clc
inc
fs
sub
and
adc
imul
je
xchg
inc
add
mov
sub
mov
popa
or
cmp
pop
push
cld
out
imul
add
add
sbb
ins
jns
add
inc
inc
out
jb
jge
rcl
rcl
inc
mov
out
add
fmul
mov
or
outs
in
shl
mov
mov
xor
popa
ret
call
sub
imul
jp
mov
xor
rcr
push
shl
dec
gs
arpl
mov
mov
addr16
or
xor
dec
sbb
das
sbb
pop
push
xchg
dec
lock
mov
pop
mov
mov
and
and
dec
and
or
sbb
adc
gs
mov
sub
stos
div
outs
jbe
mov
mov
or
sbb
fimul
sub
test
mov
data16
jne
rcl
mov
jge
cmp
pop
aas
push
adc
(bad)
fadd
and
test
xchg
js
and
sti
add
push
out
pop
pop
push
test
sbb
aas
jecxz
(bad)
xor
and
xchg
fs
jge
add
or
ja
add
pop
sbb
or
adc
push
sbb
repz
shr
dec
add
sbb
outs
icebp
adc
or
cmps
add
adc
scas
add
sti
icebp
not
push
inc
jne
outs
ins
inc
je
bound
mov
shr
adc
and
dec
pop
das
inc
jo
outs
ss
aas
cmp
lods
sbb
dec
or
or
mov
enter
mov
in
das
into
das
cmp
adc
ins
mov
mov
mov
pop
push
adc
adc
pushf
or
pop
or
(bad)
mov
cmc
mov
inc
nop
or
jl
dec
fisttp
or
outs
jne
fld
xor
and
imul
imul
xchg
inc
add
mov
add
(bad)
aaa
dec
push
add
jmp
adc
neg
sti
and
or
lods
mov
fisttp
addr16
mov
push
fcom
and
jnp
and
mov
xchg
adc
sbb
pop
mov
adc
push
cwde
push
jb
mov
push
stc
push
test
repnz
jg
mov
psubd
or
xor
add
jmp
add
inc
cmp
bound
popa
add
add
cli
(bad)
sti
mov
xchg
push
scas
inc
mov
and
pop
outs
out
cmp
mov
cmps
sbb
or
jnp
xchg
cli
pop
adc
push
popa
cmp
pop
mov
or
fsub
push
data16
or
mov
das
loopne
push
mov
sbb
(bad)
(bad)
jg
fnstcw
or
push
push
inc
cmp
jmp
es
in
push
int3
push
repz
or
fs
jb
jns
or
xlat
pop
jmp
adc
push
cwde
jne
data16
in
ins
daa
add
movs
into
loopne
jmp
push
mov
xor
mov
mov
ja
daa
or
pushf
sub
(bad)
das
mov
das
pop
push
sub
(bad)
xlat
jnp
mov
fsub
add
push
xor
push
imul
add
daa
add
loope
aas
or
push
push
mov
jo
loopne
xlat
add
xchg
or
shr
(bad)
adc
cdq
mov
into
jo
xchg
add
or
inc
adc
shl
mov
frstor
xchg
das
cmc
aam
sub
jle
push
loope
mov
ins
sbb
daa
jno
add
outs
sub
add
or
ins
inc
dec
gs
imul
jmp
idiv
push
ja
xchg
js
es
xchg
popf
pusha
push
jb
pop
push
cmp
pop
and
cmp
push
sub
fst
add
push
add
add
mov
in
xor
lea
loopne
call
(bad)
xor
xlat
pop
or
neg
add
push
mov
in
fs
pop
push
adc
and
out
and
popf
fisub
aam
sub
int
inc
xor
adc
jno
sub
add
fmul
int
inc
cwde
and
xor
jne
mov
fs
ror
mov
jo
paddusw
add
add
and
and
dec
sub
sbb
or
lods
loopne
dec
(bad)
cmp
add
cmp
and
lar
or
push
cmp
or
xchg
xor
jbe
ret
jne
ret
cwde
mul
inc
push
push
add
adc
fwait
inc
bound
outs
and
and
loopne
sub
cwde
inc
xchg
add
aam
sub
xchg
jnp
pop
pop
dec
loopne
repz
mov
lock
adc
push
adc
jnp
push
or
fs
js
sbb
out
sti
outs
add
jge
fnstenv
dec
sub
push
jnp
dec
push
fld
or
adc
dec
and
in
sti
fsubrp
ret
jns
cmp
or
inc
jns
dec
push
mov
sub
ins
add
(bad)
scas
jp
cmp
or
push
call
add
add
add
cmp
daa
test
daa
add
inc
int
and
daa
sbb
aas
add
lea
inc
push
icebp
daa
pop
push
fwait
arpl
das
sub
test
in
cdq
push
add
lds
or
call
jmp
and
movs
mov
imul
sub
mov
fcomp
stos
sbb
iret
jl
or
push
push
pusha
jbe
movs
div
inc
mov
and
adc
lds
sub
push
push
js
sbb
xor
add
pusha
mov
jne
out
add
jne
xchg
or
imul
jo
push
or
push
inc
inc
dec
shl
or
inc
arpl
or
sub
inc
cwde
mov
in
xor
push
stc
add
or
rol
cmc
or
add
sub
jmp
push
das
pop
lds
add
jns
pop
jo
cs
push
inc
jp
cmp
cmp
jb
jnp
das
pop
shld
cmp
sbb
xor
inc
sahf
mov
and
daa
and
xor
sysexit
leave
enter
shl
in
stc
cmp
jle
jb
xor
add
inc
xchg
jmp
nop
loope
cmp
mov
cmp
dec
dec
dec
inc
mov
clc
xor
daa
daa
daa
and
std
ds
cmp
in
leave
leave
inc
xchg
(bad)
push
aas
cdq
and
fs
sbb
pmulhuw
enter
inc
mov
inc
jb
repnz
adc
out
fcmovbe
cmc
arpl
mov
es
add
xor
add
jno
cmp
adc
mov
sahf
lods
aad
add
dec
mov
js
dec
jne
dec
sub
pop
xor
or
sbb
jae
inc
xor
inc
inc
and
sbb
push
(bad)
jmp
add
or
ins
outs
arpl
jns
push
shl
sbb
and
or
cwde
adc
into
fsubr
loopne
add
mov
jo
ins
ror
cmp
or
pop
aam
xchg
call
mov
shr
std
pop
jo
das
out
fist
mov
inc
push
jb
sbb
arpl
or
rcr
mov
lea
pop
je
gs
fild
add
pop
xor
sub
ret
shl
mov
add
fld
outs
adc
xchg
fld
and
loopne
xchg
xchg
adc
hlt
fld
inc
ret
jmp
push
ins
fcmovne
mov
mov
xor
dec
adc
or
and
ss
sar
xor
cmp
in
add
test
xor
pop
dec
or
push
push
inc
cmp
dec
adc
push
jp
cdq
add
inc
mov
mov
mov
push
mov
mov
movs
sbb
fldenv
xchg
or
icebp
adc
sub
sbb
jns
inc
mov
sbb
mov
inc
mov
mov
pop
mov
mov
mov
xor
pop
mov
mov
fs
loopne
add
inc
dec
or
outs
jbe
test
das
add
add
and
push
jbe
push
jecxz
imul
sti
adc
add
movs
ret
movs
std
jnp
cmp
push
outs
outs
add
pop
xor
cmp
(bad)
jns
aam
ds
xchg
adc
cmps
out
ja
es
add
repnz
pop
or
add
sub
icebp
mov
push
push
add
shl
or
jb
push
int3
push
fcomi
inc
dec
or
and
and
mov
shr
jnp
xor
(bad)
ja
mov
xchg
mov
data16
sub
rol
dec
jp
push
sub
mov
and
jmp
dec
mov
and
add
in
and
sbb
popa
je
and
rcl
int
int
add
pop
add
adc
rcl
pusha
jge
mov
add
jge
test
mov
aam
push
jo
outs
das
push
dec
popa
js
imul
add
mov
adc
push
dec
je
fwait
mov
cmp
call
xor
leave
in
into
jmp
jae
outs
arpl
dec
retf
js
and
and
adc
mov
shl
enter
outs
int
inc
mov
adc
movs
pusha
into
fucom
inc
add
push
sub
imul
pop
add
jbe
(bad)
mov
and
add
jns
adc
retf
mov
add
or
test
xchg
ror
loope
outs
out
inc
fisttp
nop
dec
or
lods
aas
push
popa
into
cld
(bad)
(bad)
jg
call
popf
dec
js
cli
dec
add
adc
push
mov
jns
das
adc
jo
sbb
cmp
shl
cmp
or
adc
jge
pop
add
push
jge
or
ja
ret
mov
cmp
sti
pop
xchg
lock
je
cmp
arpl
jno
pusha
and
sub
ins
or
cmp
adc
push
jns
(bad)
cmp
mov
mov
out
jne
ins
and
ds
add
jbe
push
xor
and
adc
xor
enter
adc
inc
cmp
or
adc
outs
sbb
push
and
jo
in
adc
movs
dec
retf
mov
loope
out
mov
dec
dec
xlat
mov
push
inc
and
cmp
jne
add
add
adc
xor
leave
ins
imul
bnd
test
jb
outs
sbb
out
lds
call
jne
cmp
push
mov
bound
retf
push
xor
push
jle
sbb
jl
ja
clc
push
xor
add
add
gs
jo
or
sbb
mov
xchg
pop
mov
mov
test
mov
icebp
das
mov
lea
jp
rcr
call
add
xlat
repz
neg
add
push
or
test
sbb
inc
or
test
push
aaa
or
pop
push
fistp
add
adc
imul
push
ins
xchg
add
push
sub
cmp
ins
jmp
frstor
pop
push
outs
pop
or
ds
je
or
mov
inc
shr
in
and
sub
outs
jae
imul
nop
addr16
add
enter
sbb
dec
mov
adc
stc
in
push
push
and
js
dec
cmp
mov
jno
jle
push
add
imul
or
push
mov
jo
outs
outs
cwde
dec
or
cmp
inc
pop
arpl
xor
and
in
jae
popa
loopne
push
or
fbld
push
imul
loope
dec
push
add
imul
and
mov
lock
and
imul
push
loopne
push
int3
xor
addr16
push
clc
fdivrp
cmp
push
inc
add
dec
xchg
pusha
shl
mov
push
cwde
add
out
jb
sub
or
mov
cmp
add
or
jle
loopne
sub
xor
inc
or
loope
mov
(bad)
sahf
test
cmp
inc
aam
ins
mov
(bad)
adc
ins
bound
sbb
jnp
inc
mov
add
adc
xor
jo
add
scas
lahf
xor
stc
aas
or
jb
push
mov
sub
and
mov
push
je
ins
dec
dec
dec
dec
push
dec
dec
dec
pop
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
cmp
sub
dec
dec
dec
sub
sbb
and
sbb
pushf
pushf
pushf
fmul
or
add
jb
mov
pmuludq
jb
jb
in
call
jb
(bad)
movs
aam
jb
jb
cwde
xchg
nop
jb
jb
ror
enter
jb
ror
jb
push
xchg
add
test
pop
xchg
ret
(bad)
dec
jnp
jmp
cmp
lea
pop
scas
mov
nop
push
add
mov
outs
(bad)
push
or
data16
test
je
movzx
mov
inc
inc
pop
ret
outs
out
sti
addr16
add
and
jp
push
inc
fimul
das
sub
ins
add
ins
gs
imul
popa
jae
outs
arpl
jb
mov
pop
xchg
fs
push
cdq
dec
lahf
je
bound
arpl
or
dec
clc
jp
add
popaw
dec
leave
int
xor
imul
or
mov
push
test
and
(bad)
lods
lock
push
outs
imul
sub
daa
leave
sbb
push
daa
int
jbe
or
mov
lock
lods
jge
outs
dec
dec
add
inc
push
dec
add
inc
or
pop
imul
and
sub
or
adc
or
adc
or
adc
pop
imul
fild
add
mov
outs
lods
sbb
cs
jp
add
jp
cmp
dec
imul
and
cmps
mov
push
nop
inc
add
dec
xor
cmp
push
add
int
or
dec
cmp
arpl
pop
add
fs
inc
inc
jecxz
das
shr
jmp
retf
jns
(bad)
std
ins
mov
cs
push
cmp
add
js
and
data16
sub
cmp
dec
or
mov
add
nop
call
cmp
es
mov
mov
cld
call
retf
add
mov
mov
and
fucomip
jne
pop
mov
and
sub
ficom
adc
(bad)
sbb
and
add
adc
push
add
retf
push
or
inc
les
(bad)
addr16
sti
xchg
shl
or
sbb
push
ret
cmp
or
outs
mov
cld
add
or
outs
mov
sub
lea
mov
push
add
cmp
mov
pop
mov
cld
sub
stos
adc
ror
(bad)
fidivr
cmp
mov
fadd
pusha
push
fdivr
push
mov
inc
push
jmp
cmp
shl
fisub
mov
jno
(bad)
scas
pusha
add
icebp
sub
mov
out
mov
mov
shl
addr16
scas
ins
sub
sbb
xor
mov
std
loopne
mov
je
jmp
adc
cdq
aas
fstp
imul
cmc
dec
mov
add
ds
push
psubusb
xor
xchg
jle
in
push
push
mov
adc
daa
nop
dec
add
and
and
sbb
(bad)
mov
or
ja
sub
fnsave
in
mov
pop
add
mov
sbb
add
retf
je
mov
(bad)
cld
or
add
jae
(bad)
jg
mov
mov
mov
push
and
push
or
ret
sbb
shl
loop
in
jle
xor
jmp
sar
cmp
in
push
push
lea
push
push
jbe
sbb
les
pop
jne
mov
(bad)
out
push
push
mov
cmp
jbe
sub
add
jmp
test
jne
mov
into
or
(bad)
fimul
mov
add
and
jne
loopne
repnz
sub
pusha
lods
out
inc
inc
sti
fadd
loope
mov
adc
add
sar
(bad)
jbe
jmp
adc
jge
clc
and
add
call
and
jl
out
jne
and
call
cmp
jae
mov
push
xchg
out
dec
repnz
dec
and
jae
fdiv
cmp
add
rcl
sub
es
mov
xchg
jo
rol
pop
or
ins
call
fild
mov
jmp
mov
inc
inc
call
sub
add
jbe
mov
push
addr16
fild
call
and
ins
fsub
jmp
repz
add
das
dec
(bad)
mov
cmp
into
sub
push
lea
fadd
data16
jmp
test
lds
outs
dec
xchg
xchg
inc
adc
mov
add
and
(bad)
fidivr
test
je
(bad)
xor
add
movzx
add
xor
adc
jbe
mov
cmp
dec
loopne
pop
pop
clc
pop
or
or
loopne
imul
adc
sbb
cmp
fidiv
fdivr
je
lods
jne
xor
inc
jmp
inc
and
jnp
je
xchg
inc
or
(bad)
movsx
xor
adc
jo
mov
inc
mov
fbld
leave
lea
lea
fld
mov
cmp
xlat
jne
mov
lock
pop
btr
mov
mov
jmp
loop
ins
mov
dec
jnp
sub
lea
jbe
dec
add
test
push
and
iret
jb
mov
xchg
loopne
int
(bad)
jb
mov
sub
sub
loop
adc
cmp
and
inc
push
mov
mov
adc
and
lea
ds
cld
xor
das
mov
mov
mov
sub
lea
imul
ins
icebp
iret
mov
addr16
out
sbb
aam
dec
mov
pop
xchg
mov
mov
movs
or
mov
jecxz
mov
paddb
lea
or
ins
cli
sbb
loopne
test
aaa
rol
or
jmp
dec
inc
cmp
push
pop
popf
(bad)
xor
dec
push
add
enter
loopne
push
xor
push
clc
fnstenv
and
fadd
jp
push
loopne
dec
mov
jmp
mov
int3
loope
sbb
jno
adc
xchg
inc
mov
cmp
in
xor
dec
xchg
adc
test
push
pop
xor
adc
and
setno
(bad)
outs
pop
inc
xchg
mov
fisttp
push
test
daa
cli
nop
and
ss
rol
loop
xor
add
mov
jne
sub
in
xchg
es
inc
inc
jmp
pop
data16
mov
fisttp
mov
cmp
retf
leave
push
bound
cmps
loop
push
ret
inc
or
cmp
xchg
mov
ins
push
mov
cwde
cmps
(bad)
les
(bad)
xchg
xor
jmp
stos
movs
mov
mov
mov
lahf
cmc
inc
aaa
push
push
adc
out
pop
pop
lock
fmul
scas
test
sub
xor
test
jne
cmp
cli
je
lea
and
ss
xchg
mov
xlat
mov
mov
pop
sbb
je
add
cmp
ffreep
inc
aas
shr
pop
dec
clc
sub
sub
cdq
js
test
xchg
mov
sub
xchg
lahf
mov
mov
cmove
cmp
sbb
add
ret
pusha
mov
mov
out
sub
mov
add
mov
ret
loopne
push
in
or
in
push
ret
or
sbb
loopne
movs
xchg
je
retf
jb
jns
adc
pop
lahf
jb
inc
call
mov
mov
jg
(bad)
jne
or
lea
push
mov
loop
ror
mov
jmp
enter
hlt
xor
fild
jbe
clc
iret
mov
jl
push
sbb
imul
sub
div
ror
push
jle
add
cmp
xor
setae
cmp
jb
lods
les
mov
loopne
push
int3
push
mov
push
jmp
xor
xlat
xor
cmp
push
ins
mov
cs
push
cmp
and
or
mov
out
cmps
add
add
or
adc
cli
inc
ret
jmp
data16
mov
rol
xlat
sub
das
fisttp
cs
sahf
sub
or
lea
pusha
xor
pop
inc
(bad)
pop
fdivr
out
xchg
cld
test
mov
xchg
loopne
cmp
scas
loope
cmp
dec
fistp
iret
pop
xor
xor
rol
shr
push
sar
outs
xlat
je
iret
ja
cmp
add
(bad)
pop
mov
call
jmp
shl
xlat
add
test
add
inc
shl
push
ret
and
push
add
push
sbb
or
jp
jl
shl
or
add
pop
xchg
add
jae
pop
cmp
push
or
(bad)
dec
iret
inc
cmp
sbb
movs
enter
mov
push
jge
shl
dec
nop
push
loop
and
popf
fiadd
lea
jecxz
(bad)
(bad)
cli
jg
cmc
lea
or
jae
neg
fldz
fst
add
mov
les
mov
test
clc
lds
mov
pop
sbb
pop
fld
xor
adc
cmp
shl
rol
mov
retf
ret
sbb
ins
cmp
sti
(bad)
lods
sub
jle
cmp
jne
mov
pop
adc
sbb
jmp
jecxz
xor
fidiv
mov
pop
ret
adc
xor
dec
mov
iret
outs
in
mov
call
mov
test
test
xor
div
nop
pop
dec
push
sub
inc
mov
add
mov
adc
(bad)
mov
test
jne
mov
xor
jle
ds
mov
imul
div
and
iret
sub
sub
repnz
rcr
mov
inc
jl
ins
lahf
inc
ds
mov
push
mov
test
nop
push
mov
ins
aas
shl
adc
out
jbe
dec
jne
mov
(bad)
mov
mov
shl
mov
add
jo
(bad)
(bad)
mov
jae
xor
leave
mov
push
adc
lahf
icebp
sti
test
jb
adc
adc
test
je
adc
ins
add
jmp
out
or
pop
mov
pop
pop
dec
or
sub
jbe
add
mov
rol
mov
push
push
cmp
test
in
pop
aaa
mov
imul
and
fimul
push
cmp
daa
test
daa
mov
or
adc
lea
mov
pop
cwde
out
stc
and
fs
push
cdq
shl
cmp
in
dec
icebp
push
hlt
sbb
mov
push
sbb
(bad)
dec
fistp
pop
mov
dec
xchg
adc
call
scas
jecxz
xor
cli
adc
sbb
cmps
jno
(bad)
hlt
hlt
out
inc
setne
gs
js
out
mov
das
cmp
sbb
test
mov
and
jo
add
xor
cmps
adc
xor
fst
fwait
mov
jl
sub
pop
popa
mov
je
add
stos
add
mov
jge
cdq
retf
or
and
or
jne
ds
mov
sbb
fadd
bound
add
call
cmp
add
xlat
cmc
mov
add
dec
inc
and
rcl
sbb
pop
div
add
call
sbb
ror
or
cmp
je
out
out
cwde
aaa
dec
(bad)
clc
test
cmp
push
and
sti
test
jge
jmp
adc
inc
add
jge
test
in
jne
or
add
into
sbb
mov
lods
fld
cdq
test
inc
out
jae
xchg
ins
mov
dec
aas
ror
ss
fadd
and
ret
xchg
cmp
ss
retf
(bad)
jnp
jo
and
dec
fdiv
cmp
xchg
mov
call
and
call
jl
cmp
inc
cmp
das
mov
into
cmp
addr16
std
in
je
or
inc
cmp
movq
mov
(bad)
inc
fisubr
mov
fsub
cmp
fmul
xchg
test
jbe
mov
mov
add
jne
retfw
fstp
loopne
mov
jge
stos
mov
mov
fadd
mov
adc
adc
push
push
stos
jmp
xor
mov
cmp
push
mov
dec
inc
xor
add
push
xor
(bad)
pop
jne
push
xor
aam
or
rcl
jmp
out
sar
mov
aaa
and
add
mov
fs
ja
inc
sub
(bad)
mul
xor
mov
mov
jecxz
mov
mov
jl
jb
mov
repnz
inc
xchg
mov
push
jae
in
xchg
mov
pop
xchg
sti
pop
je
dec
fisub
cmp
test
call
ja
arpl
xchg
fadd
mov
adc
jle
mov
dec
and
jae
out
in
loope
jb
push
imul
push
mov
jge
(bad)
cmp
(bad)
retf
fmul
add
loopne
xchg
cmp
xchg
adc
jne
mov
adc
add
sbb
sbb
test
or
mov
inc
push
fdivr
and
sub
pusha
outs
pop
adc
jmp
retf
gs
jae
(bad)
ja
out
add
je
dec
je
jmp
in
ins
mov
add
ins
aaa
sbb
ss
mov
sbb
or
enter
inc
shl
js
adc
mov
xchg
dec
mov
sbb
(bad)
stos
icebp
push
cmp
add
pcmpeqw
xchg
sbb
inc
sbb
icebp
xor
pop
sbb
jg
sbb
inc
test
mov
pop
pusha
outs
sub
sbb
mov
adc
test
xor
pop
mov
push
sub
sub
dec
lock
inc
and
add
jne
mov
mov
sbb
push
sbb
shl
mov
add
push
pop
test
mov
xor
add
hlt
cmp
out
add
adc
clc
jbe
mov
cmc
call
ret
(bad)
aaa
jne
mov
or
cmp
push
(bad)
cli
dec
cmp
push
daa
cli
lea
mov
or
sub
mov
stc
cs
sar
mov
or
add
fimul
call
jbe
std
outs
push
jo
scas
mov
push
in
loopne
add
push
lods
dec
data16
call
cmp
loope
(bad)
cli
xor
sub
and
jne
scas
jae
mov
xchg
call
shl
mov
cmp
and
imul
mov
push
push
mov
adc
sub
divps
mov
adc
or
hlt
inc
js
or
jns
repz
inc
push
pop
adc
out
mov
push
push
mov
jle
jmp
push
push
loope
mov
xchg
push
retf
mov
cmp
jne
mov
inc
clc
sbb
mov
mov
and
stos
mov
enter
mov
or
repz
xchg
loopne
xchg
push
mov
add
loopne
xor
adc
neg
adc
mov
mov
mov
cld
sbb
(bad)
pop
cmp
fisttp
mov
sbb
out
mov
sub
add
ins
daa
dec
je
lahf
std
xor
ja
rol
push
push
inc
pop
inc
mov
or
adc
add
ret
mov
js
mov
push
pop
aam
dec
loopne
cmps
adc
aaa
xor
xor
pop
adc
retf
sub
addr16
adc
sahf
dec
sub
pusha
aaa
jne
lahf
mov
test
je
test
je
push
fmul
fimul
or
add
mov
ja
adc
jae
jne
test
call
sbb
push
or
mov
rcl
xchg
inc
or
pop
les
aas
add
mov
mov
(bad)
fcomi
sbb
push
fs
rcr
stos
iret
(bad)
out
ret
mov
jg
sbb
jecxz
out
jns
mov
dec
cwde
mov
(bad)
outs
cwde
mov
dec
cmp
ja
movzx
add
je
adc
adc
jl
(bad)
(bad)
push
mov
mov
fstp
mov
aaa
mov
and
movs
lea
pop
pop
jne
xor
or
loop
out
xchg
mov
xchg
cmp
pop
or
add
rcl
je
pusha
push
(bad)
inc
sub
jg
jmp
sbb
jle
push
int3
rcr
push
adc
pop
adc
or
add
repz
push
or
sbb
sub
outs
iret
repz
lea
lea
adc
xor
and
or
jl
mov
sbb
ret
jle
or
shr
retf
adc
jbe
mov
femms
adc
add
clc
sub
pop
fidiv
sub
cmc
pop
push
or
mov
(bad)
out
mov
cmp
mov
mov
(bad)
int3
adc
mov
fcom
fmul
pop
cmp
push
add
ret
pop
(bad)
sbb
cmps
pmovmskb
push
cmc
mov
jmp
mov
pushf
adc
push
call
cli
and
cmp
jne
or
or
(bad)
push
loope
adc
loopne
enter
std
and
pop
bound
inc
imul
in
je
cmp
pop
mov
xchg
rol
xor
jmp
pop
scas
mov
sub
pop
es
test
adc
outs
xchg
adc
daa
clc
add
ins
call
xchg
hlt
std
in
in
dec
loopne
jg
xchg
test
jne
push
inc
clc
add
aas
xchg
iret
add
pop
es
adc
jnp
pop
lea
div
fadd
dec
jmp
mov
or
xchg
add
sub
dec
or
mov
inc
in
cli
xchg
cmp
sbb
pop
xor
xor
pop
mov
sbb
addps
fnstcw
pop
adc
ror
add
sti
inc
not
scas
sbb
out
ins
or
(bad)
in
add
fchs
mov
(bad)
jl
add
test
ins
or
cld
fldcw
mov
pop
mov
add
fmul
fmulp
data16
idiv
jbe
jmp
call
fstp
pop
ret
in
cs
out
icebp
fwait
and
or
mov
fwait
pop
pop
pop
jb
push
cmp
iret
cmp
aad
xchg
adc
scas
and
rol
or
or
xor
inc
adc
add
push
or
push
adc
push
rol
push
add
add
mov
int
push
call
xchg
lds
test
adc
jb
push
test
out
or
xchg
lods
cmp
mov
jb
clc
sbb
inc
pop
mov
js
mov
push
loopne
cld
push
imul
xor
pop
test
test
and
sub
dec
je
or
aam
stos
loopne
rol
mov
sbb
ins
cmp
mov
inc
mov
movs
and
adc
dec
and
or
shl
movs
xor
adc
jne
lea
xlat
push
push
and
cmp
adc
cmp
(bad)
push
mov
add
cmp
mov
jmp
push
push
push
fist
mov
in
shr
xchg
jae
xor
jne
xchg
adc
sub
xchg
jl
adc
add
or
and
and
or
sub
push
mov
fwait
scas
scas
dec
mov
pop
loopne
cli
inc
sbb
mov
push
pusha
jbe
adc
call
pop
daa
cmp
loopne
adc
pop
xor
out
mov
inc
add
pop
inc
je
and
xchg
xchg
push
sub
push
add
add
adc
dec
inc
inc
nop
outs
cmp
jne
xor
loope
push
push
(bad)
sub
fisttp
dec
rol
movs
inc
mov
mov
or
push
mov
ds
fucomi
in
ja
sahf
add
adc
jmp
add
mov
repnz
pop
cmp
xchg
lahf
xlat
call
mov
sub
cli
or
movzx
push
pop
cmp
sub
dec
or
pop
pop
lock
cmp
mov
jle
pop
or
and
lea
push
fdivr
xor
inc
jae
and
in
aam
test
sub
jmp
add
mov
call
loopne
mov
fucomi
pop
cmp
cmp
out
and
adc
and
push
loope
mov
sbb
xor
(bad)
shl
inc
jb
add
sar
ret
je
pop
fsubr
inc
cld
and
out
push
movs
call
push
sub
sbb
adc
test
cld
jmp
inc
ret
sub
pop
adc
mov
popa
xlat
or
cld
mov
je
imul
sub
jo
mov
retf
icebp
sub
outs
int3
pop
or
in
mov
mov
jl
dec
jl
pop
test
add
push
pop
loopne
sar
or
push
ja
and
rol
jno
aaa
or
adc
imul
push
jmp
and
xchg
or
or
dec
and
push
dec
stos
test
adc
push
push
movs
fld
std
stos
lock
fst
fst
mov
and
sub
add
add
neg
loopne
sub
sub
inc
outs
inc
dec
bound
mov
and
inc
lea
xor
loop
xchg
sbb
sbb
int
mov
push
pop
push
inc
adc
repz
or
dec
push
rol
mov
xor
push
pop
sbb
mov
(bad)
(bad)
mov
xor
mov
or
sub
add
xchg
push
sbb
test
push
(bad)
outs
sahf
ret
or
dec
and
pop
loopne
out
add
pusha
adc
push
mov
loop
shr
mov
sub
je
push
mov
inc
je
mov
dec
loope
jo
or
sbb
push
and
je
sbb
sub
aaa
pop
test
out
stos
ficom
cmc
aas
sub
fidivr
lock
adc
addr16
and
fdivr
in
pop
mov
add
test
fstp
xchg
test
push
add
cmp
je
mov
sti
sub
mov
jb
je
js
outs
pop
je
jp
arpl
xor
arpl
push
push
data16
addr16
daa
cwde
or
sub
ja
cmp
ja
mov
gs
and
int
or
iret
(bad)
jmp
data16
push
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
or
addr16
sahf
popa
jb
sbb
call
adc
add
mov
add
(bad)
mov
retf
fbstp
jne
mov
out
mov
aas
inc
mov
mov
mov
xchg
stos
sub
inc
mov
rol
hlt
push
out
inc
jmp
add
add
pop
inc
dec
mov
and
hlt
dec
ss
inc
xor
not
jg
cmp
cmp
jne
dec
jne
add
cmp
push
call
out
repz
sbb
mov
inc
or
inc
dec
jne
push
jg
(bad)
and
xor
inc
ror
mov
sub
movs
adc
icebp
push
pop
nop
nop
fcom
mov
push
jl
sbb
sar
add
jge
(bad)
outs
jmp
push
mov
mov
adc
pcmpeqb
out
fadd
je
shl
xchg
jmp
fcom
jge
mov
xor
das
imul
fld
pop
adc
out
and
fistp
fild
cmp
ret
push
pushf
pop
enter
add
adc
enter
shl
mov
cli
adc
add
clc
adc
loope
add
cld
xchg
mov
jg
pop
mov
shl
pushf
mov
jge
mov
aad
inc
mov
mov
aas
out
(bad)
ret
stos
mov
(bad)
fistp
rcl
ja
push
mov
lea
mov
lods
add
mov
add
and
or
iret
and
and
mov
test
xchg
sbb
mov
adc
mov
sbb
mov
jp
jmp
inc
shl
mov
out
outs
ja
frstor
or
mov
sbb
scas
hlt
fwait
movs
ja
push
ror
inc
xor
push
(bad)
imul
lock
mov
int3
pop
push
or
outs
sbb
jle
ins
les
or
out
fild
mov
mov
call
sahf
inc
(bad)
xlat
stos
mov
loop
jo
dec
rep
pop
and
js
fidivr
mov
ror
add
pop
jmp
and
push
jmp
cmp
je
pop
mov
or
ret
sbb
into
push
mov
mov
pop
test
push
sbb
cmp
lods
aas
and
mov
mov
sub
jmp
mov
dec
jmp
ds
ds
xchg
cmp
paddd
movsx
jb
xor
jmp
jmp
pusha
jb
rcr
clc
mov
mov
push
ret
mov
or
clc
pop
xor
mov
mov
mov
imul
or
add
mov
pop
mov
pusha
xor
(bad)
pop
adc
clc
mov
jp
add
add
jmp
lea
push
sbb
nop
hlt
ins
push
data16
sbb
jmp
test
andnps
sbb
add
or
and
call
enter
leave
outs
rol
fs
add
add
sub
xor
lock
sbb
jno
jo
xor
or
pusha
xor
ss
call
lds
test
imul
pop
push
std
(bad)
jg
retf
add
mov
add
lea
cmp
out
pop
popf
dec
xchg
inc
mov
sti
mov
cmp
mov
and
in
jae
push
xchg
mov
jg
cmp
cli
mov
les
cmp
jmp
pop
sub
enter
les
xchg
shr
sub
push
pop
or
movs
push
test
mov
jmp
mov
push
xchg
jmp
sbb
jp
fs
add
repnz
jecxz
scas
lods
pop
mov
movs
cli
shr
pop
ret
pop
add
sub
cld
adc
push
xchg
ja
xchg
(bad)
adc
pop
stos
add
out
xor
pop
pop
ss
jb
test
ret
xchg
dec
dec
cmp
mov
pop
int3
and
popa
push
inc
stos
out
lahf
pop
(bad)
mov
dec
or
shl
push
rol
add
enter
pop
test
lock
push
inc
ret
push
dec
les
lea
dec
call
push
inc
mov
jmp
imul
inc
(bad)
fmul
add
push
cmp
jmp
or
rcl
push
ja
and
dec
dec
ret
jo
xor
ds
clc
dec
hlt
inc
mov
add
push
add
dec
jne
cmpps
pop
jmp
push
lea
imul
scas
mov
or
je
jmp
mov
mov
test
jne
xor
mov
fld
cmp
mov
nop
and
pop
addr16
js
pop
pop
dec
xor
mov
pop
or
cmp
dec
xor
test
js
xor
adc
push
add
aas
inc
(bad)
add
(bad)
push
(bad)
loopne
ror
cli
pop
add
pop
and
les
sub
jbe
adc
and
pop
jmp
lock
cmp
jmp
repz
sbb
daa
inc
out
jecxz
iret
push
pop
add
(bad)
iret
ins
fsubr
jp
and
sbb
xor
(bad)
xlat
add
adc
mov
mov
mov
inc
or
test
pop
imul
jo
sub
inc
mov
push
jnp
sti
sub
mov
les
outs
fcom
dec
add
xchg
call
loopne
sbb
in
or
or
or
aam
outs
sbb
or
cwde
jp
adc
popa
jp
mov
jmp
test
les
jg
cmp
sbb
push
push
inc
call
add
adc
xor
cmp
shl
mov
cs
cmp
or
test
scas
enter
add
rcr
outs
fdivr
les
cs
add
or
pop
inc
mov
xchg
lock
and
jle
xor
in
push
mov
push
cmp
push
outs
pusha
adc
imul
loop
pusha
jo
stos
xacquire
jbe
add
pause
dec
inc
(bad)
js
jg
ss
out
ss
fdivr
push
int3
or
jae
cmp
stos
lea
clc
push
fnstsw
lock
js
ret
jne
dec
xchg
pop
js
cwde
add
xchg
loope
mov
or
aaa
or
jge
jbe
push
cmp
dec
jne
cmp
jne
mov
mov
dec
jmp
enter
clc
push
dec
ja
cwde
loop
add
call
and
sbb
pop
add
je
outs
imul
jg
outs
arpl
jae
jb
outs
data16
je
outs
outs
dec
imul
add
cmp
or
ins
add
add
add
cmp
add
cmp
pop
mov
rol
push
cmp
imul
push
sbb
cmp
jne
cmps
call
mov
mov
jle
adc
mov
dec
out
cmp
mov
fild
sbb
push
mov
loopne
adc
sbb
movs
call
in
ret
test
inc
sub
adc
scas
cmp
and
push
add
rcr
fbld
outs
pushf
mov
pop
xchg
jno
cmp
adc
int3
and
xchg
xor
adc
(bad)
cmc
and
std
inc
clc
cmp
or
or
movs
test
sub
dec
push
mov
adc
imul
rcl
add
in
mov
pop
ins
sub
out
mov
outs
adc
jne
sbb
test
mov
call
xlat
loope
enter
cmps
or
push
js
xchg
dec
cmp
mov
cmp
dec
ins
or
je
das
mov
inc
mov
(bad)
mov
aam
lahf
mov
out
cmp
push
pop
andps
pushf
mov
inc
add
bound
psubusb
cld
bound
sub
sub
sub
mov
movs
and
push
loopne
cmp
push
lds
call
mov
push
lods
ret
rcl
sbb
jne
push
mov
mov
mov
dec
mov
adc
push
mov
adc
rcr
xchg
and
sbb
add
pop
mov
shl
loopne
sub
or
popa
cwde
add
xlat
out
add
push
push
das
(bad)
sahf
ds
jle
mov
inc
ins
(bad)
les
loopne
xor
adc
fild
add
clc
dec
(bad)
fldenv
cmp
xor
pop
mov
adc
icebp
test
pusha
sub
mov
add
mov
icebp
or
jl
jb
(bad)
hlt
fnstenv
mov
xor
jmp
add
mov
cld
mov
call
push
ror
mov
fidivr
imul
push
add
sbb
cmp
add
mov
or
ds
int3
push
add
adc
out
test
pop
call
add
jo
shl
rcr
pop
xor
in
ins
scas
inc
dec
xor
jae
int3
mov
or
scas
mov
xchg
inc
jae
jno
xor
sbb
push
or
cmp
inc
or
aaa
sub
ss
push
cmp
push
pop
call
pop
push
xchg
inc
test
sbb
sbb
pop
aad
pop
(bad)
mov
push
je
in
or
test
jae
jb
ss
es
je
add
mov
push
cmp
jne
or
fsubrp
outs
cmps
jbe
ins
dec
cld
cmp
jne
nop
sbb
jl
ins
cmp
push
jae
jo
jo
mov
outs
sbb
mov
inc
mov
or
jne
(bad)
mov
xor
and
adc
dec
lea
sbb
mov
add
call
or
mov
sub
dec
mov
sbb
or
imul
outs
es
lea
inc
push
outs
jne
outs
ror
lds
scas
inc
sti
cmp
add
sti
or
pop
xor
outs
(bad)
cmp
and
mov
fild
aas
or
in
inc
test
inc
jg
into
xchg
adc
(bad)
jno
mov
pushf
jp
jge
mov
push
iret
pop
push
test
adc
xor
(bad)
inc
(bad)
in
push
call
cmp
pop
push
push
push
push
fs
mov
cli
addr16
xchg
cmps
cs
add
mov
pop
cli
or
jae
jbe
lahf
es
push
push
add
(bad)
and
sbb
push
jnp
jmp
cld
movsx
inc
inc
adc
add
sbb
icebp
ja
push
jecxz
ins
mov
dec
adc
loop
int3
mov
cld
cmp
and
cmp
rcr
test
mov
mov
pop
dec
adc
outs
mov
hlt
jne
sbb
rol
dec
call
fisttp
loope
and
dec
add
cmp
jbe
fidiv
jae
sub
ja
inc
add
cmp
add
jbe
mov
cmc
or
jmp
adc
rol
clc
or
pop
inc
jns
jns
je
or
push
push
outs
xor
mov
push
cmp
sub
ror
mov
push
and
cmp
and
enter
mov
mov
mov
mov
jle
(bad)
mov
jecxz
jnp
aam
sti
sub
mov
mov
push
lock
pop
cmp
leave
xor
push
ss
pusha
jo
push
mov
inc
ror
pop
add
lds
push
pop
inc
mov
repnz
call
push
int3
cmp
jne
(bad)
enter
xor
mov
cmp
jne
inc
inc
mov
jg
push
sub
or
sar
xor
inc
or
test
daa
mov
push
in
es
and
adc
adc
adc
jno
or
nop
sub
adc
dec
cmps
sub
cmps
pop
or
xorps
or
inc
clc
mov
inc
xor
loopne
aaa
add
dec
ror
sub
or
or
stos
push
mov
lods
adc
add
in
mov
jecxz
and
sbb
sub
push
dec
test
jge
sub
mov
xor
movs
out
mov
or
fcom
stos
jp
mov
push
push
push
push
mov
je
test
push
je
push
cmps
ins
mov
add
jo
add
les
dec
in
add
xor
pusha
jp
jo
ror
das
cwde
mov
push
jns
ss
add
cmps
xor
and
sub
inc
adc
add
or
pusha
add
xlat
cmp
sbb
enter
ss
cs
adc
sbb
cmps
xchg
jae
jle
aas
pop
mov
sahf
or
std
test
loop
xor
nop
fiadd
adc
add
out
fdivrp
fcomi
mov
add
sub
pop
cmp
push
sub
and
xchg
jmp
mov
jno
(bad)
aas
sub
jb
je
jmp
cmp
sub
dec
push
cs
adc
jmp
sub
adc
das
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
jmp
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
or
mov
mov
push
sbb
xchg
daa
sbb
popa
mov
imul
je
push
dec
add
dec
dec
add
ss
cmp
adc
add
push
in
ja
pop
mov
mov
jmp
ja
mov
cmp
fmul
or
fld
push
adc
or
mov
cmp
(bad)
inc
pop
xchg
inc
lock
or
in
loop
sub
inc
add
and
mov
inc
cmp
bound
push
out
or
cmp
jne
add
jbe
movs
pcmpgtd
push
mov
movs
ret
jbe
cmp
inc
mov
je
add
pop
cmp
ret
clc
inc
(bad)
xor
iret
jmp
fld
mov
or
sub
xor
ror
mov
xor
inc
push
clc
and
sti
jle
in
fadd
les
jg
xlat
adc
ins
add
add
adc
mov
mov
mov
push
xchg
bound
sbb
mov
pop
jle
push
cmps
test
outs
or
push
les
in
pop
mov
mov
adc
popfw
adc
scas
jbe
out
cli
sbb
cmp
lea
(bad)
jg
dec
inc
add
sbb
dec
or
add
(bad)
pop
inc
(bad)
jg
jmp
jg
jmp
cmp
add
dec
jne
pop
adc
out
bound
sahf
xchg
mov
inc
or
jbe
in
inc
push
ret
test
test
je
aad
adc
sahf
mov
mov
pushf
mov
lods
adc
pop
jne
ret
ret
mov
and
and
(bad)
dec
sti
mov
mov
mov
cs
dec
pushf
inc
imul
ficomp
or
push
sets
js
fadd
in
mov
mov
outs
adc
ja
ins
scas
mov
add
mov
mov
ss
clc
dec
sub
neg
sbb
inc
leave
adc
inc
aad
push
scas
pop
jmp
fsubr
inc
or
adc
cmp
push
sub
jbe
mov
pusha
jo
xchg
in
push
push
sbb
pusha
xor
cmp
fild
inc
lea
inc
pop
ret
retf
mov
xor
jne
push
jmp
lds
and
enter
inc
sbb
lock
mov
and
and
out
fimul
xor
(bad)
mov
cs
jo
jbe
dec
popf
rcl
sti
mov
jle
jp
pop
rcr
mov
mov
call
xor
add
jle
add
outs
push
push
cli
mov
or
sbb
ja
or
outs
pop
call
and
fsubr
fiadd
cmp
adc
outs
and
test
je
push
arpl
leave
dec
loopne
fdiv
jne
call
sar
icebp
pusha
(bad)
xchg
fs
aam
cmp
cmp
mov
mov
mov
ja
dec
cmc
mov
mov
out
pop
xchg
jmp
inc
call
enter
mov
push
mov
push
xor
xor
int3
xchg
cmp
mov
test
in
inc
or
in
adc
add
es
(bad)
fs
out
sbb
push
xor
push
push
mov
push
sub
mov
mov
adc
ds
push
call
pop
pop
call
xor
jl
fisub
jnp
adc
clc
ret
les
mov
repnz
stos
sbb
or
or
lock
adc
lock
or
push
mov
mov
cmp
imul
xor
jle
cwde
dec
sbb
add
repnz
rcl
cmp
ret
enter
sbb
cmp
push
add
jo
jl
ja
push
jo
jecxz
or
mov
clc
mov
data16
and
or
xor
jmp
aam
mov
adc
or
adc
inc
push
ja
and
fadd
adc
push
jb
ja
ret
cdq
ss
push
dec
jb
(bad)
test
cmps
xchg
inc
sbb
cs
push
pusha
sub
xor
or
cmp
enter
add
loop
lahf
xor
ficomp
dec
clc
dec
jl
lock
hlt
jmp
inc
push
and
inc
popf
cmp
mov
pop
(bad)
mov
cmp
(bad)
mov
push
or
rol
dec
daa
pop
add
or
lds
inc
jge
sbb
fcom
inc
jle
shr
mov
clc
js
xor
dec
cld
shr
shl
pop
inc
rcr
and
dec
cmp
outs
(bad)
adc
xor
(bad)
les
push
or
dec
ja
shr
and
ss
jo
in
test
dec
pop
mov
mov
sub
sti
stos
lock
mov
dec
or
loope
pop
dec
mov
test
lods
pusha
rcl
push
popa
pop
pop
and
rol
add
dec
jl
lods
movzx
test
mov
adc
or
test
sbb
mov
data16
aas
test
fs
add
das
xor
test
out
cmp
cld
mov
hlt
fstp
test
adc
retf
sub
lea
cli
ds
sbb
xchg
call
loop
or
and
add
or
and
push
enter
dec
(bad)
mov
add
dec
inc
inc
xchg
push
fsubr
dec
daa
loopne
and
cmp
sbb
ds
mov
pop
xor
mov
adc
push
sub
xor
push
in
add
es
xor
in
lea
jle
mov
push
(bad)
dec
and
dec
pop
pop
nop
or
push
scas
rcl
add
dec
ds
cmp
icebp
inc
jg
jmp
sahf
inc
aam
dec
fsubr
inc
clc
cmps
add
xchg
adc
xchg
addr16
data16
jmp
adc
call
cmp
test
call
xchg
getsec
push
lods
push
xchg
aas
cmp
inc
sub
add
add
lahf
jb
or
add
cmp
add
test
add
sti
jae
cmp
or
fnstsw
lahf
je
push
inc
cmp
ret
imul
iret
xor
or
inc
cmp
mov
ja
xchg
mov
add
cdq
mov
mov
sbb
(bad)
push
jo
imul
xlat
xor
xor
mov
mov
inc
inc
sub
ja
add
xor
jg
push
shr
mov
fnstenv
dec
mov
std
or
push
out
pop
add
aaa
into
add
dec
jne
jmp
jg
jmp
and
je
mov
cmp
jne
push
adc
add
mov
adc
add
jne
add
jmp
pop
cmp
mov
std
jne
shr
shr
sbb
ret
fdiv
or
shr
or
loopne
cwde
mov
cmp
popa
mov
pop
and
ss
xor
pop
wrmsr
push
loopne
dec
and
imul
mov
jecxz
jle
add
jge
shl
bound
jbe
sub
mov
mov
inc
inc
sbb
xor
scas
cmp
push
je
or
push
cld
jle
cmp
jg
inc
inc
test
jl
cmp
jg
add
mov
inc
rep
jmp
sub
jmp
into
in
mov
out
and
fsubr
mov
mov
nop
push
mov
push
mov
jmp
xor
mov
dec
movs
jnp
pusha
shl
xor
adc
or
outs
int
add
mov
pop
sub
(bad)
inc
mov
cmp
dec
jo
iret
or
or
push
cmp
repnz
(bad)
in
add
lock
inc
fs
mov
inc
mov
mov
repnz
cs
pop
add
pop
pop
pop
cmp
rol
push
outs
out
mov
test
xor
call
jl
fldcw
addr16
or
lahf
inc
scas
ret
add
cld
xor
jmp
mov
push
cld
add
jo
push
je
mov
jne
sbb
mov
dec
xor
cs
out
lea
xor
lods
fisub
pop
int
cmp
push
push
sub
call
mov
in
jne
push
lea
lea
neg
dec
cmp
fcomip
adc
add
jp
sbb
add
je
mov
cmp
push
jne
cmp
stos
shl
push
cld
ret
cmp
pop
push
push
mov
test
or
mov
jmp
mov
sbb
inc
jb
pop
inc
fiadd
push
adc
push
push
enter
xchg
xor
dec
mov
clc
lock
data16
pop
shl
mov
and
mov
sbb
cld
add
das
mov
sub
jmp
cwde
lock
icebp
(bad)
icebp
xor
inc
pushaw
pop
pop
inc
add
movs
cmp
xchg
inc
and
add
jmp
das
push
adc
sub
loopne
and
ja
sub
jno
into
dec
hlt
mov
test
jl
test
outs
xlat
push
mov
add
push
(bad)
call
push
mov
push
jmp
cmp
cld
addr16
fld
sbb
pop
test
mov
pop
inc
and
jb
lahf
or
or
pop
das
or
rol
adc
outs
cmp
test
push
retf
test
sbb
jmp
cli
add
xor
jmp
dec
cmp
jge
sar
(bad)
fist
call
sub
cmp
and
mov
add
add
mov
cs
mov
sbb
fcomi
sub
mov
jl
pop
or
mov
shr
push
adc
lock
xchg
add
mov
dec
out
mov
ja
add
cmp
mov
cmp
push
imul
cs
out
push
in
inc
lock
cmp
sar
mov
jle
lea
add
mov
and
mul
xchg
fs
cmps
sbb
out
mov
ja
xchg
mov
xor
jbe
add
jg
addr16
mov
loope
out
add
add
cmp
jne
les
loope
push
mov
adc
xchg
adc
mov
(bad)
pop
cmp
mov
mov
add
mov
fs
lahf
pop
mov
add
jo
inc
jge
in
jp
jo
push
jmp
mov
js
jp
add
loope
mov
sbb
xor
xchg
push
pop
fnsave
iret
push
dec
scas
inc
nop
cmc
(bad)
test
or
sub
push
cmp
fldcw
retf
shl
ss
mov
retf
pop
outs
stos
test
add
imul
je
outs
ja
pop
pop
dec
xchg
push
cli
inc
cld
add
sub
sub
ror
ins
dec
mov
fcmovnu
inc
mov
push
mov
loop
cli
shl
pop
inc
cli
add
dec
add
mov
shl
mov
adc
push
pushf
jg
fisub
enter
sbb
or
or
mov
add
cld
mov
dec
jmp
test
adc
push
or
jae
iret
retf
in
push
push
xchg
cwde
sbb
sub
adc
out
aaa
dec
xor
mov
stos
inc
pushf
sbb
repnz
pop
jnp
mov
dec
jne
mov
call
ror
adc
les
imul
aas
jo
pop
lea
jmp
popa
ds
call
imul
enter
fst
sbb
cmp
jne
xchg
or
cwde
rol
sub
popa
(bad)
iret
xchg
sub
sbb
xchg
xchg
test
fs
addr16
mov
mov
std
cmp
jl
cmp
jl
nop
jle
dec
mov
mov
cwde
sub
sub
mov
jmp
or
(bad)
push
lea
mov
mov
adc
and
sbb
push
pop
xchg
xchg
jp
test
push
call
hlt
mov
jo
jg
call
push
fsub
or
sub
cmp
push
dec
cmp
fs
sbb
(bad)
cmp
push
pop
or
inc
sbb
jge
shl
mov
pop
fistp
sbb
pop
push
or
adc
pop
xor
mul
data16
fisubr
jo
int
add
adc
xor
ret
or
pop
jo
dec
jl
jl
les
xor
inc
inc
sub
sub
fidivr
shl
add
(bad)
add
mov
pusha
add
mov
sbb
mov
add
das
outs
sub
pop
cmp
adc
(bad)
ins
or
pop
sub
cmp
je
jbe
mov
xor
cmp
or
add
xchg
inc
and
shl
cmp
rcr
jge
push
pop
xor
and
jne
or
fbstp
mov
sahf
add
mov
sub
fs
mov
pop
cmp
inc
cmp
sub
inc
and
mov
add
jle
xlat
mov
and
jecxz
out
ja
cmovle
clc
or
sbb
mov
mov
pop
add
cmp
jnp
jle
sbb
jne
mov
ds
das
ja
test
cwde
pop
ret
sbb
or
mov
retf
fs
sbb
mov
or
push
jge
or
lock
mov
cmps
xlat
xor
pop
cld
js
sub
mov
sti
nop
test
cmp
ss
js
cld
and
fimul
add
add
add
dec
mov
jo
cwde
sub
inc
sub
or
cmp
cmp
push
test
or
mov
pusha
or
ins
mov
sub
pop
mov
jge
mov
out
aas
push
(bad)
(bad)
jl
cli
jnp
xor
clc
mov
es
dec
xlat
xlat
sbb
mov
mov
jge
jmp
adc
and
hlt
pop
xlat
rcr
mov
add
or
mov
jle
repz
adc
xchg
loope
xor
mov
mov
leave
push
mov
push
lea
jl
fdiv
sbb
xchg
pop
ja
pushf
dec
jg
xchg
ret
dec
and
push
add
or
cmp
loop
or
sub
je
cmp
je
cmp
cmc
sbb
je
cmp
test
add
or
mov
mov
dec
pop
cmc
fwait
mov
dec
or
adc
jmp
push
mov
cld
or
cmp
push
dec
cs
adc
cmp
outs
cmp
pop
jmp
cmp
mov
movs
push
mov
mov
sub
scas
cdq
les
js
pop
mov
ror
fnstsw
ret
mov
adc
(bad)
or
add
loopne
and
sub
xor
data16
jb
pop
mov
adc
push
mov
test
call
mov
mov
and
les
push
pusha
jmp
xor
pop
shl
jo
lods
xchg
repz
jnp
stc
and
jnp
ret
add
retf
jmp
test
mov
mov
sbb
and
loopne
adc
mov
jae
cmp
rcl
lods
xlat
fwait
sub
nop
xchg
into
adc
pop
pop
sbb
mov
shl
xor
mov
rcr
cmp
(bad)
repz
mov
pop
mov
test
cmp
cwde
cmp
and
push
push
mov
xorps
mov
sar
jb
sbb
adc
add
lock
xor
mov
lea
outs
cld
push
js
fadd
push
push
add
sar
mov
add
jo
inc
add
das
test
pop
xor
mov
or
sbb
or
push
or
pusha
or
and
and
or
jg
fsub
adc
xor
pop
cmps
push
mov
popf
sub
inc
mov
jge
call
in
fwait
lock
or
adc
push
pop
dec
loop
fcomp
sti
popa
inc
popf
push
pop
jmp
aas
add
shl
ss
jae
or
mov
and
ds
or
and
mov
push
cs
jne
or
xor
or
inc
cmp
bndstx
loope
sub
pxor
mov
stos
adc
sub
popa
icebp
sub
sub
pop
nop
or
push
sub
hlt
jmp
pop
inc
mov
adc
cs
sub
dec
sar
shl
cmp
dec
loope
mov
add
inc
call
adc
sbb
add
cmp
add
cmp
jmp
iret
push
iret
adc
xor
data16
pop
sub
lea
pushf
xchg
dec
xor
cmc
add
leave
bound
push
dec
adc
lock
daa
jle
or
jbe
push
or
out
mov
push
cmp
xor
push
mov
mov
out
adc
xchg
push
xchg
js
les
pop
ret
aas
xchg
or
push
push
sbb
mul
mov
add
int3
(bad)
sub
fs
add
inc
adc
pop
pop
sti
ret
cli
inc
push
pop
dec
jmp
loope
(bad)
pop
xor
xor
sub
(bad)
push
sbb
sar
(bad)
xor
xor
sub
sbb
jne
cmp
jb
mov
out
pop
div
xchg
add
retf
sub
cwde
jl
sti
les
and
shr
rcr
ror
fisttp
mov
ret
add
shl
(bad)
push
mov
imul
jg
or
pop
cli
sub
rol
fadd
cwde
mov
shr
xchg
push
and
sub
sbb
leave
mov
push
das
or
je
mov
mov
outs
add
push
not
loopne
rcl
(bad)
rcl
cmp
jb
in
cmp
jb
sub
push
clc
ficomp
out
inc
loop
repnz
repz
xchg
fwait
pop
sub
pop
push
jns
neg
neg
add
hlt
outs
xor
neg
neg
sbb
int
iret
mov
mov
pop
test
(bad)
ss
not
xlat
push
add
push
(bad)
sbb
mov
and
divps
jmp
add
push
mov
jmp
add
cmp
je
movzx
out
add
cmp
jb
add
pop
sbb
jne
movs
mov
inc
(bad)
jmp
jle
inc
cld
setg
jmp
xor
je
jb
outs
push
pop
je
cdq
adc
or
fild
cwde
sbb
adc
dec
and
and
mov
test
fcom
cli
inc
lahf
div
lods
mov
add
es
stc
push
jb
outs
pop
call
stc
sub
mov
ds
cmovno
or
push
or
jne
or
jb
aas
jmp
pop
sub
inc
and
jbe
jmp
push
and
(bad)
cdq
(bad)
pusha
mov
shl
add
ret
fwait
or
scas
push
adc
inc
xor
ins
inc
pusha
adc
mov
jno
scas
jnp
data16
rol
ret
pop
push
ficom
mov
push
add
pop
sbb
in
dec
inc
int3
add
push
jl
int3
sub
jg
retf
inc
xor
ss
hlt
inc
dec
adc
sub
pop
pop
jne
and
jl
sbb
out
sbb
sbb
xchg
pusha
add
pushf
sar
jg
clc
shl
repz
or
pop
or
(bad)
mov
inc
or
adc
jno
mov
not
imul
and
int3
icebp
jecxz
enter
adc
lods
xor
mov
pusha
ss
cli
and
or
ret
adc
add
ficomp
sbb
and
or
dec
push
sub
stos
pop
outs
pop
xchg
adc
push
fs
adc
into
xchg
and
and
sahf
pop
pop
push
out
shr
pusha
(bad)
movs
sahf
and
jl
aaa
and
push
cmc
adc
xchg
sbb
nop
(bad)
pop
inc
in
adc
pop
push
iret
cdq
add
movs
inc
gs
pop
adc
add
inc
sbb
sahf
and
sbb
jb
fild
sbb
xchg
sub
into
dec
hlt
mov
mov
test
popf
rol
in
mov
ret
inc
sbb
mov
fmul
jno
stos
ss
sub
je
and
xor
sub
(bad)
test
clc
movzx
push
clc
adc
inc
push
cmps
in
or
sbb
std
push
mov
add
imul
(bad)
cdq
idiv
cmp
adc
in
ss
out
mov
cmp
jne
push
jo
cmp
jle
int
movs
imul
rcl
sub
ret
sub
xor
dec
movs
lea
add
imul
cmp
jmp
fwait
pop
js
not
int3
fincstp
and
xor
xchg
sar
bound
dec
call
into
push
dec
push
fsub
add
and
cs
cs
ja
push
xor
mov
push
or
sbb
sub
xchg
(bad)
in
or
add
(bad)
and
add
dec
or
out
lock
xor
imul
cmp
clc
add
inc
enter
lock
call
hlt
mov
ds
sub
mov
jmp
adc
mov
dec
jl
loope
shr
inc
xor
push
dec
jne
jae
mov
add
add
pop
add
cmp
adc
mov
sbb
xor
cmc
retf
adc
ror
xchg
jmp
pop
add
push
jne
ins
arpl
lock
shr
jbe
ret
jne
or
ret
test
jmp
add
js
pushf
push
loop
call
mov
cmp
fidivr
fcmovbe
jbe
jl
or
mov
adc
cmp
sahf
fidiv
cmp
ret
imul
adc
mov
add
and
loopne
sti
test
mov
push
lock
push
xchg
sub
jo
mov
movs
(bad)
js
rol
inc
pusha
icebp
movs
(bad)
add
lea
cmp
and
data16
jns
add
lock
jne
push
mov
pop
push
mov
movs
and
mov
xchg
ins
xor
adc
les
push
xchg
pop
ret
add
jp
jl
sub
adc
sahf
cmp
outs
in
cwde
adc
dec
cwde
push
push
push
mov
inc
pop
pop
or
imul
ror
or
bound
sub
push
outs
inc
jb
sbb
lds
mov
jle
in
je
ins
or
iret
add
or
pop
(bad)
fild
or
add
inc
cmp
jle
mov
adc
icebp
ja
jmp
enter
dec
adc
sbb
and
xor
or
xor
adc
lock
je
jo
ds
clc
(bad)
test
adc
pop
inc
dec
dec
push
dec
xor
ror
and
and
pop
mov
cmp
out
lock
call
out
sbb
sahf
jne
add
es
pop
pop
pop
iret
call
(bad)
mov
mov
mov
adc
or
ror
test
jg
in
cmps
repz
mov
scas
inc
dec
jne
ja
in
pop
xor
push
lea
rcr
mov
adc
out
jne
inc
lock
mov
out
cmp
hlt
std
xor
push
or
call
dec
cmp
mov
xor
mov
stos
xchg
xor
inc
sbb
and
call
add
pop
inc
fidiv
es
or
jne
xor
and
fldcw
jne
push
add
(bad)
movs
pop
add
sub
fucomip
dec
dec
popa
outs
je
pop
gs
inc
push
pop
je
popa
outs
ins
mov
outs
bound
add
jmp
fneni(8087
jg
push
sub
sub
out
(bad)
sahf
push
ins
or
dec
sub
push
push
xchg
jne
ret
inc
push
push
jge
std
mov
jno
es
outs
arpl
push
xchg
or
shl
mov
jae
pop
cmp
jae
pop
or
cmp
pop
das
pop
fs
inc
inc
add
sar
aaa
aaa
aaa
and
cmp
outs
outs
mov
jg
add
sti
es
ins
sbb
ins
sub
jb
pop
or
dec
dec
inc
mul
div
push
inc
dec
jae
push
adc
xchg
xchg
rcr
addr16
in
(bad)
pop
push
pop
iret
nop
test
aaa
pusha
xchg
pop
test
xor
div
outs
mov
cmps
aaa
sbb
ss
or
push
data16
mov
cwde
loope
xchg
cmps
aaa
dec
dec
lea
push
xlat
rcr
js
mov
xor
setae
or
cmps
out
test
or
and
mov
push
fsubr
xor
xor
push
scas
adc
fmul
data16
push
dec
push
cwde
jne
addr16
adc
mov
jb
pusha
into
icebp
inc
out
or
xor
adc
sbb
pop
sub
fist
sar
jmp
in
push
jmp
rcl
movzx
mov
data16
jp
fimul
add
jg
dec
or
add
jmp
add
mov
leave
sub
mov
and
mov
sbb
sar
inc
(bad)
sub
(bad)
mov
in
jmp
fisttp
stos
lds
fcomp
mov
loope
pop
pop
outs
xor
cmps
add
xor
imul
js
mov
lock
adc
(bad)
sub
add
sub
fs
mov
rcr
add
push
(bad)
mov
cld
add
mov
dec
cs
femms
mov
hlt
scas
loopne
std
add
sbb
(bad)
scas
cmps
hlt
mov
adc
out
jb
jo
test
movs
jmp
add
add
fmul
shl
sub
mov
fcomp
mov
mov
mov
aas
pop
ret
pop
jmp
rol
cmp
sub
jb
adc
ja
hlt
or
mov
sub
mov
fild
pop
clc
shr
cmp
fst
cld
sti
dec
jmp
dec
or
xchg
cmp
ret
not
(bad)
scas
movs
jmp
jbe
les
add
test
pop
mov
xor
xor
push
push
ficom
cmp
pusha
pop
sbb
fs
and
lea
xchg
adc
mov
push
or
dec
test
inc
imul
mov
sub
inc
pop
adc
pop
sub
add
(bad)
std
hlt
dec
imul
sub
add
aas
inc
lds
icebp
mov
add
adc
(bad)
shl
jne
ret
and
in
pop
shl
out
lock
add
jb
cmp
adc
or
and
cmp
sbb
dec
cmp
lods
mov
js
and
jno
fwait
loop
je
and
add
lock
es
cs
(bad)
lods
push
movzx
sbb
shr
sub
and
dec
inc
in
ror
imul
les
outs
aam
xchg
ins
mov
cmp
pop
push
and
(bad)
cmp
lock
push
fisubr
push
sahf
adc
add
and
add
data16
or
xchg
xor
cmp
mov
mov
dec
sar
popa
test
xchg
ins
fldcw
gs
inc
push
push
sbb
cli
loope
adc
jns
jno
pop
mov
and
mov
(bad)
rol
mov
mov
sbb
xchg
ret
mov
push
je
mov
cmps
je
xchg
sbb
scas
test
fnstsw
mov
and
or
mov
ins
(bad)
xor
lea
sar
mov
sbb
mov
mov
and
mov
ds
add
pop
inc
sub
cmp
adc
data16
jb
pop
jne
in
dec
inc
jb
mov
sti
xor
inc
movs
pop
mov
push
and
rcr
and
aas
or
and
sub
scas
sub
int3
push
inc
dec
push
lea
adc
jle
mov
sbb
cmp
out
popa
xchg
adc
pop
data16
mov
in
mov
test
(bad)
fistp
jne
mov
sub
sar
jns
adc
inc
adc
rol
or
(bad)
in
daa
rcr
or
cmps
cmp
(bad)
sub
ss
out
(bad)
sar
outs
rol
add
test
add
jmp
mov
sar
add
into
lea
inc
sbb
test
adc
in
xor
test
and
int3
xor
loopne
push
add
(bad)
frstor
mov
dec
arpl
dec
sub
dec
shl
inc
shr
inc
add
idiv
test
add
popa
mov
pop
push
popa
out
scas
dec
pop
out
mov
je
dec
popa
ins
gs
daa
ffreep
mov
mov
fidivr
sub
jne
ret
rol
es
into
sar
jmp
ins
xchg
dec
aas
xor
daa
pop
mov
dec
lock
push
and
mov
add
pop
push
pop
inc
sbb
inc
jnp
inc
jg
pop
cmp
inc
sbb
inc
cmp
and
or
mov
xor
cmp
(bad)
mov
add
inc
pop
jg
jo
jo
jmp
inc
jnp
xchg
clc
pop
push
xor
imul
jmp
mov
add
push
or
sub
add
push
das
bnd
pop
lahf
pop
mov
push
add
test
(bad)
aaa
pop
loopne
add
popa
(bad)
shl
mov
add
bound
arpl
loop
mov
cs
or
(bad)
and
in
or
push
dec
int
inc
push
daa
imul
inc
data16
adc
push
shl
clc
xor
add
inc
inc
jo
rol
xor
push
shr
xchg
pop
cmp
and
mov
mov
mov
add
xor
dec
je
mov
cmp
lahf
je
mov
pusha
xor
jle
sahf
jnp
cmc
inc
mov
add
(bad)
icebp
mov
sti
popf
lock
jmp
in
push
retf
push
mov
retf
pusha
lock
mov
dec
xchg
ret
test
je
sbb
or
adc
test
ins
and
(bad)
and
mov
popa
jmp
(bad)
xlat
fwait
or
aam
mov
repz
enter
call
pop
cmp
jg
push
sbb
sub
call
sbb
sbb
aas
adc
xchg
mov
xchg
ror
or
lods
test
adc
jle
leave
push
jb
xchg
xlat
icebp
inc
fs
add
pusha
fwait
mov
in
add
xor
retf
sub
push
xor
fnstsw
cmp
movzx
cdq
and
xor
popf
cmc
cmp
xchg
adc
icebp
shr
xor
fcomp
sbb
pop
in
inc
add
xor
sbb
or
retf
mov
das
push
or
jb
and
xor
retf
int3
jmp
pop
je
adc
inc
data16
cmp
jl
push
and
add
jne
and
icebp
int3
push
lea
add
jmp
and
mov
and
push
or
dec
fmul
pusha
pop
in
push
mov
xor
cmp
loope
mov
jne
jecxz
sbb
outs
add
test
call
or
sbb
loop
or
cs
jp
mov
dec
call
neg
or
int
mov
or
jbe
cmp
cmp
inc
or
dec
mov
inc
mov
je
push
mov
mov
cdq
adc
fxtract
xchg
shl
cld
lods
outs
sar
cs
lea
add
xchg
mov
int3
fisubr
xor
adc
test
sbb
add
lds
ret
dec
jmp
(bad)
scas
les
(bad)
push
mov
call
dec
push
mov
adc
(bad)
clc
nop
pop
inc
js
pop
mov
pop
test
pop
add
push
add
xchg
cwde
popf
nop
cmp
dec
inc
mov
pusha
or
ins
fild
mov
xor
mov
iret
adc
stos
xor
ja
lock
cmp
cmp
adc
jmp
mov
sbb
adc
(bad)
cwde
rol
sbb
mov
fcmovnb
call
out
push
adc
mov
loopne
pop
out
fisttp
cmp
sbb
pop
mov
(bad)
adc
(bad)
jne
pop
add
or
jno
int3
xor
je
push
mov
jbe
sub
mov
or
loopne
mov
add
out
sbb
outs
scas
and
into
mov
lock
add
ret
imul
sub
(bad)
ror
xor
inc
mov
pop
cld
cmp
mov
push
adc
outs
or
cmp
add
scas
xchg
mov
add
cmp
add
call
loop
lods
push
add
popw
add
or
pop
xor
pop
dec
test
call
call
mov
rcr
push
or
jle
pusha
or
jb
arpl
or
push
scas
lods
mov
or
pop
cmp
ja
(bad)
outs
mov
sahf
jne
cmp
dec
and
mov
jbe
jmp
dec
jp
push
daa
jg
pop
test
adc
mov
push
loop
cmp
fild
sub
or
test
or
nop
xlat
loopne
or
pop
jb
push
push
jbe
pop
xlat
dec
xor
cmp
ss
mov
js
cmp
jb
xor
fs
out
outs
and
and
or
adc
fbstp
dec
push
mov
shl
sbb
xchg
(bad)
xor
push
cmp
xchg
dec
sar
test
or
pop
je
gs
mov
xchg
cmp
add
pop
(bad)
mul
add
lea
push
add
ror
aaa
add
mov
dec
jns
or
mov
enter
add
or
sbb
test
push
imul
jae
push
inc
inc
psubd
or
ds
jmp
sbb
(bad)
rol
enter
mov
xor
adc
pop
xchg
daa
and
sub
xor
stos
test
into
pushf
pop
mov
pop
add
rol
pop
or
icebp
mov
add
icebp
xchg
icebp
xor
adc
out
or
out
call
pushf
clc
dec
and
dec
add
xchg
push
inc
adc
push
das
rcr
push
xchg
call
add
pusha
add
leave
adc
(bad)
push
and
adc
arpl
cmp
mov
sub
add
cmp
lea
cli
mov
add
sti
enter
mov
xchg
outs
push
pusha
push
ins
loope
ds
rol
cmp
test
xlat
jge
dec
pop
retf
cmp
jo
sub
test
mov
xlat
stos
movs
shr
or
or
add
mov
repz
ja
or
adc
push
push
adc
jmp
mov
sub
mov
add
pcmpgtd
fcom
adc
sti
(bad)
xor
mov
add
stos
sbb
loopne
call
fs
ror
int
adc
mov
adc
xor
sbb
jne
push
cld
mov
add
or
add
ret
mov
shl
cwde
ret
outs
pop
not
jge
mov
add
mov
mov
popf
mov
adc
xchg
pop
cmps
dec
fcomp
jg
movzx
mov
fimul
dec
mov
add
xchg
push
outs
inc
mov
aad
mov
or
jg
mov
jmp
jb
aas
push
jnp
mov
ja
and
adc
inc
shld
jg
loopne
test
adc
rcr
scas
ja
and
pusha
(bad)
pushf
scas
or
jge
inc
sub
or
pop
jmp
or
xor
mov
and
xor
adc
ins
xor
pop
push
add
sbb
pop
test
les
dec
jmp
lahf
loopne
xchg
imul
data16
xor
pushf
jle
int3
inc
mov
loopne
jg
pop
mov
add
mov
cmp
(bad)
cli
or
jne
mov
dec
push
sti
bound
inc
xchg
adc
xchg
or
sub
dec
lock
popf
sbb
lock
das
jmp
xchg
push
mov
cmp
xchg
nop
mov
test
jp
or
push
out
aam
and
scas
dec
xor
push
mov
jne
cmps
adc
or
jmp
push
mov
popf
mov
cmp
or
test
jne
jecxz
mov
push
adc
fsub
js
hlt
mov
out
jge
fcmovnb
push
daa
loope
jo
mov
arpl
jbe
popf
lahf
(bad)
pusha
mov
inc
sub
dec
test
lea
ds
dec
mov
add
mov
das
(bad)
sbb
fmul
mov
pop
mov
lods
sbb
and
push
pop
int
pop
sbb
lods
add
or
int
sbb
inc
mov
sbb
push
adc
dec
jmp
neg
fmul
loopne
sbb
lods
jne
in
sbb
test
call
jle
mov
jne
mov
shr
mov
in
add
mov
inc
dec
frstor
push
push
outs
or
push
jecxz
add
(bad)
cwde
ret
inc
adc
retf
je
adc
sub
push
inc
test
(bad)
mov
cli
rol
clc
add
mov
clc
shl
add
test
sete
and
cs
mov
nop
pop
cwde
and
jmp
test
cdq
cmc
mov
and
dec
pop
mov
adc
repnz
sbb
jecxz
adc
test
dec
push
add
pop
ins
adc
jge
xchg
mov
jne
dec
adc
pusha
add
inc
sub
enter
into
or
push
fstp
adc
sub
fidiv
mov
xor
sbb
mov
sbb
lock
dec
lock
ret
(bad)
cmp
mov
movs
mov
test
add
mov
lods
adc
or
mov
js
inc
clc
add
cmp
push
or
adc
push
mov
cmp
movs
rol
sub
ss
call
add
mov
or
std
cmp
inc
and
or
dec
out
std
xchg
cmp
jg
pusha
inc
rol
inc
cmp
push
enter
jbe
mov
jg
inc
mul
call
mov
mov
mov
or
les
mov
add
neg
pop
movs
test
and
or
push
lods
sbb
adc
imul
jo
add
add
mov
push
push
popf
mov
or
test
mov
mov
cmp
mov
inc
or
imul
retf
dec
sbb
inc
(bad)
sub
shl
pop
push
push
in
sbb
cld
mov
or
xlat
jbe
pop
not
retf
into
and
sti
dec
fdivr
jo
jo
mov
sbb
(bad)
pop
stos
dec
sub
add
and
ja
pusha
inc
sbb
add
push
int
out
les
add
lods
push
outs
cmp
nop
loopne
or
dec
mov
or
push
push
lock
sub
jl
jl
cmp
jne
push
push
or
cmp
imul
ret
and
push
ret
je
mov
mov
aad
in
(bad)
cmp
jbe
push
xchg
mov
test
enter
ja
xor
xchg
mov
sti
mov
loopne
psrlq
adc
add
inc
test
push
neg
jb
cmc
or
mov
mov
inc
cs
sub
dec
mov
(bad)
(bad)
or
fbld
sbb
pop
inc
inc
dec
je
mov
cmp
je
movzx
test
pop
cs
lods
(bad)
adc
loop
add
sahf
jne
sbb
or
out
(bad)
xchg
jge
xchg
pusha
call
sbb
dec
cmp
mov
push
push
daa
fldcw
push
or
or
hlt
cmp
jne
or
cli
mov
div
scas
dec
cli
jmp
es
adc
push
push
je
imul
jb
popa
jns
mov
adc
dec
(bad)
push
jns
je
ins
cs
jns
gs
iret
mov
outs
add
push
inc
jne
ins
imul
arpl
mov
fs
outs
outs
data16
fnsave
adc
arpl
je
inc
mov
fisttp
or
arpl
xor
xor
gs
mov
sub
sbb
xchg
out
lea
push
add
inc
add
loopne
mov
pushf
adc
push
add
push
sbb
sbb
or
call
xacquire
adc
push
aas
mov
shr
out
adc
jb
add
ret
jg
jge
pop
dec
or
pop
inc
jno
popa
and
mov
push
cmp
adc
adc
push
popa
push
dec
outs
gs
(bad)
push
mov
mov
adc
aas
popa
rcpps
mov
popa
mov
or
shl
mov
add
add
cmp
or
popa
outs
movs
cld
mov
push
pop
adc
push
xor
dec
jae
adc
or
ds
sahf
sbb
ret
push
ins
push
ins
sub
jae
mov
add
pop
cwde
sbb
dec
retf
cmp
int3
adc
pop
ror
aad
mov
outs
add
movs
adc
movs
gs
adc
aad
div
cmp
inc
aad
pop
add
push
jb
push
mov
add
or
push
icebp
adc
stos
push
fdiv
xchg
int
in
push
leave
or
push
xchg
push
adc
inc
xor
popa
das
aad
inc
jg
leave
adc
ror
into
popa
cmc
add
push
push
jne
dec
inc
js
rcr
cs
shl
cs
rol
jb
ins
lea
add
jg
int3
or
mov
push
popa
retf
inc
push
cmp
lock
push
pusha
fmul
push
push
daa
dec
xchg
sub
pop
fadd
xchg
add
adc
movs
xchg
push
(bad)
loope
mov
imul
bound
mov
and
add
mov
push
inc
and
ret
imul
test
add
std
fbstp
pusha
std
xchg
add
push
jae
dec
gs
jle
push
addr16
sahf
or
inc
outs
je
outs
ins
daa
js
adc
push
fs
xchg
into
test
pop
fs
add
ds
arpl
push
push
in
fnsave
add
sbb
inc
add
stc
cs
add
mov
imul
ja
sbb
add
dec
jb
and
xchg
sub
in
fstp
add
push
lds
clc
sbb
adc
xchg
loopne
mov
scas
push
add
dec
xchg
cmps
or
inc
fwait
mov
pusha
cs
or
jb
hlt
jae
fild
xchg
outs
les
stos
add
or
and
popa
fimul
ins
pop
xor
popa
add
inc
adc
mov
pushf
xor
or
js
pop
aaa
pop
push
ror
jbe
inc
cmp
gs
sub
stos
or
stos
add
aas
push
cs
dec
int
push
dec
cmp
mov
add
adc
mov
adc
(bad)
clc
push
push
outs
test
xchg
dec
mov
lock
add
jecxz
mov
sub
rcl
sub
stos
pop
movs
pushf
outs
data16
adc
or
cmp
push
aas
ds
push
push
clc
pushw
arpl
cmp
inc
jnp
pop
js
clc
inc
or
stc
adc
test
jnp
cmp
xor
pop
add
sbb
test
mov
push
in
lock
cmp
mov
push
push
je
out
add
cmp
jb
xor
std
fild
ja
(bad)
outs
out
gs
imul
sub
outs
mov
pop
push
pop
or
lods
push
push
dec
dec
sahf
add
mov
pop
mov
push
(bad)
fiadd
inc
add
hlt
ds
mov
lahf
adc
add
or
sbb
adc
ret
sub
adc
adc
(bad)
call
jl
push
push
inc
jl
and
sub
fsub
xor
fld
cmps
sub
sar
dec
rcr
(bad)
and
pop
add
out
std
inc
call
lock
movs
inc
ret
add
je
dec
je
push
and
lahf
or
(bad)
cld
mov
jmp
xchg
mov
add
push
add
adc
sub
or
inc
add
lahf
push
xlat
and
add
rep
add
mov
cmps
inc
push
pop
jmp
jmp
fiadd
jo
fild
dec
or
pop
cmp
add
inc
rcr
mov
ror
add
sub
js
add
test
mov
cmp
push
pop
rol
inc
mov
pushf
or
or
neg
and
add
js
imul
sub
std
mov
aad
mov
sar
sbb
add
inc
add
add
push
fcomi
in
in
aaa
sar
sbb
xor
sub
mov
aaa
xor
pop
scas
mov
dec
sar
push
rcl
mov
add
adc
and
or
cs
bound
aas
das
in
mov
mov
push
add
cwde
and
mov
push
lock
loopne
ja
push
mov
and
data16
call
movs
or
sbb
ret
into
add
fstp
jg
js
repnz
mov
cmp
jle
xchg
adc
je
mov
and
pop
je
or
js
jno
or
jbe
sbb
xor
test
jne
push
xor
mov
adc
mov
hlt
cmps
out
adc
sbb
adc
sub
add
sbb
push
pop
lods
add
inc
test
jle
push
add
inc
es
into
pop
add
push
add
dec
sub
cmp
enter
dec
ret
je
jp
ja
imul
add
scas
dec
arpl
loopne
xor
imul
dec
loop
or
dec
aam
jge
fnstcw
push
dec
gs
jo
movs
ret
mov
push
dec
std
add
mov
or
jae
test
cmp
ja
je
cmc
test
xor
xor
ja
popa
mov
sbb
pop
jae
fs
jmp
(bad)
sub
push
inc
lock
or
push
jae
add
shr
test
ins
push
jo
inc
push
dec
add
es
stos
test
inc
aam
lock
cmps
cwde
movs
mov
out
aas
push
in
arpl
call
movs
std
xor
data16
gs
pop
add
sub
adc
imul
imul
add
xchg
push
out
sbb
adc
int3
fsubr
jno
adc
adc
push
jb
outs
inc
jno
outs
inc
ins
shl
cmp
or
xlat
cmp
adc
dec
jmp
ins
adc
cmps
xor
and
mov
mov
dec
push
or
int
mov
adc
and
mov
xchg
push
sub
jne
mov
(bad)
xchg
in
(bad)
scas
sar
jae
mov
or
and
or
inc
ins
rcl
xlat
adc
inc
dec
popa
das
jl
xor
push
ja
pop
lods
loopne
ss
outs
and
add
sbb
mov
or
imul
in
sub
xchg
arpl
dec
outs
jne
mov
int3
inc
mov
sbb
mov
fsubr
and
fcom
xor
jbe
sbb
test
sub
inc
adc
xor
sbb
push
repz
mov
push
add
imul
dec
mov
mov
jo
mov
mov
test
call
pop
cmp
addr16
pop
or
leave
je
popa
mov
inc
outs
ja
adc
adc
arpl
aam
adc
or
sahf
xchg
shl
jbe
xor
pop
xor
adc
call
xlat
adc
(bad)
sub
das
dec
jbe
repnz
imul
arpl
fs
pop
jp
mov
cmp
in
jnp
imul
sub
adc
add
ret
push
addr16
das
int3
iret
push
arpl
ins
ins
inc
jnp
jge
or
enter
loopne
enter
add
adc
outs
pushf
jae
loopne
push
jo
adc
adc
nop
dec
pop
adc
fdiv
rcl
arpl
or
and
add
jno
cmc
mov
enter
loope
ds
sti
ins
das
push
mov
sub
test
loope
add
ds
jo
cmp
out
cmp
dec
loopne
xlat
scas
fidivr
mov
les
push
jae
leave
pop
adc
sub
push
out
ins
adc
push
jo
cmp
push
idiv
push
push
push
dec
dec
dec
inc
clc
clc
mov
jmp
push
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
ja
pusha
out
jecxz
add
pop
lods
test
dec
xchg
(bad)
xchg
or
lock
push
cmps
daa
adc
dec
or
scas
retf
sbb
fs
mov
xor
fld
sbb
jns
push
das
mov
dec
or
push
pop
inc
in
push
pop
popa
mov
cld
outs
test
pop
add
and
add
mov
push
push
push
dec
inc
pop
add
or
not
add
mov
add
sbb
bound
fild
dec
sub
push
sbb
pop
inc
push
push
clc
sbb
in
dec
inc
inc
adc
inc
inc
pop
inc
inc
inc
push
inc
and
add
lods
das
loopne
pop
(bad)
or
and
sbb
adc
adc
loopne
aam
push
ror
nop
xor
popa
push
xor
adc
pusha
jo
mov
xor
ss
lea
or
jne
sub
out
inc
sub
out
ins
or
fnsave
xor
push
jo
add
sahf
or
adc
push
pop
add
push
add
or
nop
outs
loopne
sub
adc
add
imul
ins
test
or
fadd
mov
test
push
xor
cli
out
add
adc
or
jl
pop
xchg
outs
dec
jmp
add
outs
add
push
dec
inc
imul
ja
add
dec
xor
das
push
dec
inc
inc
inc
add
dec
xor
stc
addr16
inc
hlt
dec
nop
outs
out
fiadd
xor
das
pop
inc
push
push
push
dec
out
mov
dec
inc
inc
sub
inc
jbe
xchg
push
out
das
cmps
inc
and
xor
das
jl
scas
push
mov
in
das
xchg
push
add
es
inc
push
shr
bound
push
data16
enter
jo
das
loopne
dec
fst
dec
aaa
hlt
es
mov
test
inc
cmps
or
loop
mov
xchg
cli
inc
adc
push
adc
adc
sar
push
adc
pop
inc
or
les
push
imul
cmp
ret
in
call
xchg
mov
mov
loop
mov
xor
push
and
mov
push
fsubrp
or
dec
out
dec
sub
test
ins
(bad)
gs
ror
shl
push
xor
and
jmp
jle
pop
inc
dec
stos
sti
dec
mov
ja
cmp
push
cmps
scas
dec
push
ja
jo
and
or
jns
push
gs
sub
add
pop
dec
xchg
jne
xchg
or
xchg
or
pop
nop
les
and
dec
aaa
mov
mov
or
or
push
fild
ja
sti
cmp
pop
imul
xchg
test
add
mov
sub
add
aad
cmp
add
inc
lock
rcl
(bad)
sahf
mov
xchg
push
pop
mov
pop
dec
sbb
push
das
(bad)
pop
dec
add
cmp
pop
cmps
or
test
push
iret
mov
xchg
add
ret
xor
scas
test
(bad)
shr
pop
and
movs
or
jb
or
inc
jns
mov
cdq
push
push
ins
add
es
daa
adc
xor
jae
push
ins
imul
sub
or
sbb
inc
push
push
inc
inc
sbb
or
adc
int
pop
jb
bound
ins
add
in
inc
in
or
dec
outs
and
es
and
or
add
and
mov
inc
hlt
inc
push
sub
sbb
neg
sbb
sbb
cdq
pop
imul
pop
sub
rol
add
inc
pushf
jae
jmp
mov
enter
xor
sbb
lods
mov
dec
or
sbb
cli
jge
dec
cdq
jb
or
ins
jb
into
movs
int3
or
sub
sub
jb
mov
sbb
cmc
cmp
or
jnp
add
inc
add
and
or
mov
ja
popa
xchg
push
mov
pop
fsubr
popa
mov
outs
and
aaa
adc
adc
or
bound
jmp
dec
add
or
or
mov
sahf
push
fdivr
dec
inc
imul
add
push
inc
sti
pusha
loopne
dec
lahf
in
pop
or
mov
ss
fdiv
cmp
imul
sahf
jle
sub
shl
int
sub
or
mov
xor
push
dec
push
inc
outs
add
pushf
or
add
xlat
xor
add
pop
sub
jo
push
cmp
sbb
sbb
push
ins
and
add
test
xlat
sub
mov
xor
jmp
ins
jge
and
outs
fs
jae
lods
popa
jle
or
enter
sbb
es
or
mov
cmp
inc
outs
arpl
adc
hlt
mov
lds
dec
outs
je
unpcklps
xor
sbb
retf
and
test
imul
retf
or
aaa
xor
xor
outs
mov
outs
inc
outs
js
push
ret
mov
imul
xchg
loopne
add
push
pop
gs
pop
sub
add
sub
inc
pop
adc
loop
test
out
inc
inc
push
push
push
push
in
(bad)
rol
cmps
adc
dec
inc
in
out
ja
das
test
ds
(bad)
icebp
(bad)
js
push
jmp
in
test
fsub
in
in
aam
int3
in
in
enter
in
in
mov
in
in
movs
mov
in
push
(bad)
leave
in
(bad)
(bad)
test
pop
xchg
ret
cs
aas
mov
mov
data16
cmp
dec
dec
je
cli
(bad)
jb
xor
pusha
pop
cdq
bound
pop
push
mov
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
xchg
xchg
xchg
xchg
sbb
adc
sbb
xchg
xchg
or
add
daa
pop
xor
paddb
psubb
add
daa
lock
das
mov
add
mov
mov
xor
push
add
push
fs
ins
add
mov
mov
cli
jne
cmp
call
mov
jmp
lea
mov
mov
mov
fucomp
push
test
pop
pop
jb
push
fcmovnu
pop
sub
mov
je
lock
jmp
sbb
nop
push
pop
in
push
push
push
push
loopne
adc
mov
nop
dec
loopne
pushf
fmul
psubusb
rcr
inc
mov
cmp
nop
into
mov
fcomp
mov
fnstsw
xadd
mov
lods
xchg
xchg
xchg
xchg
test
mov
add
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
daa
daa
daa
xor
ins
push
daa
daa
pop
pop
push
push
es
daa
daa
dec
dec
inc
cmp
cdq
sbb
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
or
cmp
mov
int3
sub
call
paddb
outs
clc
hlt
xlat
retf
leave
leave
in
call
xchg
and
mov
sbb
fsubr
paddq
in
in
int3
enter
cdq
fld
mov
cmp
mov
test
cmp
cmp
mov
leave
dec
xor
mov
test
leave
leave
je
ins
push
mov
dec
dec
dec
dec
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
and
sbb
xor
sbb
dec
or
or
cmp
push
paddb
clc
daa
daa
daa
daa
hlt
lock
call
in
(bad)
daa
daa
daa
daa
aam
int3
enter
daa
(bad)
sar
mov
test
daa
daa
daa
movs
mov
daa
daa
xchg
nop
mov
test
mov
or
push
ins
dec
dec
dec
outs
punpckhbw
dec
dec
dec
dec
pop
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
cmp
sub
dec
dec
dec
sub
sbb
lds
sbb
adc
xchg
xchg
xchg
xchg
or
add
pushf
pop
enter
clc
hlt
lock
pushf
pushf
pushf
in
call
pushf
pushf
(bad)
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwde
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
ins
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
inc
mov
or
push
push
clc
add
(bad)
out
add
add
cld
cld
cmp
mov
in
xchg
xchg
or
call
xchg
xchg
fcomp
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
jbe
xchg
xchg
mov
in
in
jl
je
in
in
ins
push
in
pop
pop
push
add
enter
scas
cs
fist
dec
cmovs
inc
pushf
pushf
pushf
fmul
inc
cmp
xor
pushf
pushf
pushf
xor
and
pushf
pushf
pushf
and
adc
pushf
pushf
pushf
adc
add
inc
sahf
pushf
add
sti
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fdivr
cmp
cmp
ror
enter
cmp
shr
loope
xor
(bad)
mov
leave
fsub
lfs
sbb
out
pop
sti
fisttp
cmc
adc
xor
sahf
push
adc
fcom
outs
mov
sub
ret
pop
mov
out
call
push
push
mov
mov
mov
cmp
mov
push
push
or
dec
mov
adc
out
(bad)
iret
repz
cld
push
push
pop
add
sbb
outs
mov
jae
mov
pop
das
and
out
(bad)
div
scas
mov
mov
mov
sbb
inc
add
or
xchg
iret
mov
ret
pop
(bad)
and
push
cld
mov
push
mov
pushf
pop
pop
cmp
je
test
je
push
add
shl
jge
jl
or
pop
inc
xor
mov
cmp
cmp
pop
or
and
(bad)
fild
push
mov
add
add
ins
add
outs
cmp
(bad)
es
and
push
add
inc
add
cmp
add
pop
pop
inc
(bad)
fscale
pop
add
dec
push
add
inc
aas
cmp
inc
push
push
add
dec
push
push
(bad)
pop
pop
fdiv
push
push
or
adc
dec
add
sub
jb
arpl
aas
mov
mov
jo
stos
(bad)
pinsrw
cdq
mov
das
sbb
mov
sbb
add
(bad)
loop
(bad)
jmp
hlt
hlt
test
je
mov
mov
stc
sbb
add
ror
les
jge
jne
ret
xchg
push
mov
das
xchg
inc
xchg
outs
xlat
aam
sbb
loope
push
add
outs
je
pop
mov
pop
jp
mov
outs
push
sbb
push
repnz
or
icebp
bnd
jb
hlt
cmc
div
jb
jb
clc
stc
cli
sti
cdq
pusha
jb
cld
std
clc
setl
loope
pushf
pushf
pushf
pushf
jecxz
in
pushf
pushf
pushf
pushf
out
jmp
pushf
jmp
in
out
pushf
pushf
pushf
pushf
out
rcl
rcr
aad
pushf
pushf
pushf
pushf
xlat
fcomp
ficomp
fstp
fs
pushf
ffreep
xadd
in
in
ret
(bad)
(bad)
in
mov
leave
in
in
retf
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
in
in
mov
in
cmps
cmps
test
in
in
stos
stos
lods
lods
xor
in
scas
scas
dec
setno
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
xchg
cwde
cdq
daa
daa
daa
daa
call
daa
sahf
lahf
add
add
xchg
daa
mov
daa
daa
mov
daa
daa
jb
je
daa
daa
daa
daa
jbe
js
daa
daa
daa
daa
jp
jl
daa
daa
daa
daa
jle
pusha
popa
daa
daa
daa
daa
bound
gs
daa
daa
daa
addr16
daa
daa
daa
push
ins
ins
daa
daa
daa
daa
outs
outs
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
xor
daa
daa
daa
daa
xor
xor
daa
daa
daa
daa
ss
cmp
daa
daa
daa
daa
cmp
cmp
daa
daa
daa
daa
ds
and
daa
daa
daa
daa
and
and
daa
daa
daa
daa
es
sub
loopne
daa
daa
sub
mov
ret
jns
ror
adc
sbb
(bad)
dec
cmp
add
add
or
or
push
movups
adc
(bad)
(bad)
call
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
aam
fsub
adc
xor
pop
xor
or
xor
cmp
or
cmp
add
cmp
sti
outs
(bad)
jg
ds
adc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
cmp
push
push
pop
adc
mov
xchg
fidiv
push
push
pop
pop
pop
xor
pop
pop
pop
pop
or
push
rcl
pop
and
xchg
pop
pop
lds
test
add
push
jnp
popa
bound
add
add
and
and
adc
add
add
jg
(bad)
fisttp
jo
add
add
add
(bad)
add
iret
mov
data16
and
mov
inc
add
(bad)
aaa
mov
pop
add
jo
add
add
neg
inc
rol
loopne
lock
add
add
add
into
pop
ja
jae
jae
sub
push
movsx
jle
add
jo
add
outs
mov
rol
int3
(bad)
out
jmp
add
add
add
add
add
push
xor
inc
add
pusha
add
add
idiv
jo
add
add
mov
xor
mov
add
or
add
add
add
add
add
(bad)
jg
inc
add
push
add
add
add
add
add
add
add
add
sub
imul
out
inc
add
pop
xor
retf
jo
add
nop
add
ror
add
add
adc
and
xor
inc
push
push
push
pusha
push
pop
jo
add
push
mov
jg
push
push
rcr
loopne
lock
mov
(bad)
stc
and
xor
inc
push
pop
pusha
pop
jo
push
add
pop
mov
sub
mov
idiv
out
mov
or
or
or
or
pop
push
or
jo
or
clc
xchg
or
or
or
(bad)
jnp
jnp
or
or
or
or
or
push
or
and
rcr
or
or
nop
or
push
push
or
dec
add
test
xadd
rcl
push
lock
add
adc
sub
and
or
dec
icebp
(bad)
arpl
pusha
or
push
popf
jge
(bad)
or
push
or
or
or
and
scas
pop
ds
or
add
jmp
out
sbb
push
or
jo
in
push
sub
sahf
mov
loopne
or
add
ror
or
cld
popf
mov
fwait
cmps
or
adc
or
or
fcmovb
aaa
add
or
mov
jge
(bad)
out
cmp
or
jecxz
jae
or
jnp
fisubr
or
add
or
or
pop
gs
pop
adc
paddsb
xor
jg
out
cmps
push
pusha
or
nop
or
or
push
(bad)
push
or
and
xor
inc
push
push
push
pusha
push
jo
or
nop
push
mov
push
loopne
mov
ror
loopne
lock
add
fld
lar
wrmsr
cmovo
out
mov
punpcklbw
jo
or
add
fidiv
add
imul
ror
jb
iret
popa
retf
lock
ret
cwde
sbb
adc
jae
fimul
ds
cmovge
sbb
out
out
and
pusha
adc
adc
pusha
push
jo
mov
adc
rol
jg
adc
pop
add
ret
mov
push
add
push
adc
dec
and
outs
shr
sub
rep
mov
maskmovq
neg
aaa
jnp
arpl
push
adc
xor
add
mov
fld
add
(bad)
mov
sub
pushf
or
add
inc
mov
call
and
xor
(bad)
shl
and
fisttp
jae
call
btc
cli
sub
pop
adc
sbb
or
ret
pop
aaa
outs
add
ins
add
outs
or
in
push
or
push
ins
stos
adc
scas
adc
cmp
cmps
pop
nop
jp
adc
mov
mov
cs
lahf
adc
adc
adc
aaa
adc
adc
adc
retf
(bad)
out
out
adc
add
adc
adc
mov
sub
es
ror
cli
mov
loopne
lock
adc
jbe
and
mov
adc
adc
push
add
mov
and
pop
mov
nop
mov
add
fsub
cdq
ror
scas
lsl
or
rol
jbe
jg
lock
adc
push
xor
pop
(bad)
sbb
sar
fbld
cmp
adc
adc
pop
ds
jo
or
ja
(bad)
jbe
push
adc
retf
lock
adc
std
adc
mov
add
push
fwait
push
add
into
push
daa
jmp
test
cmps
xor
push
or
scas
inc
ja
mov
mov
mov
mov
pmaxsw
sbb
push
mov
fwait
add
outs
retf
fist
cmp
mov
shr
sub
rcl
add
ss
sbb
add
pop
jp
adc
pop
jno
sar
aas
daa
inc
pop
mov
pusha
aas
add
pop
add
dec
mov
mov
inc
popa
test
push
add
rol
mov
call
sub
push
bound
add
or
xchg
add
jecxz
pop
nop
pop
mov
xor
popa
or
pop
push
shl
pop
sub
loopne
imul
pop
test
adc
and
xor
mov
push
sbb
push
sbb
sbb
pusha
sbb
or
(bad)
neg
mov
push
or
call
rcr
loopne
add
lock
add
std
jnp
mov
sbb
pop
adc
cld
ss
xor
cs
add
dec
push
adc
aas
inc
inc
pop
adc
pusha
sbb
aas
dec
mov
nop
sbb
sbb
add
pusha
sub
jg
enter
nop
iret
pop
test
movs
jb
aas
das
add
mov
outs
shr
loopne
add
or
push
mov
js
jnp
sbb
add
fidivr
sbb
adc
or
(bad)
push
sbb
or
add
adc
jbe
add
fdivr
jle
sbb
sbb
add
sbb
pcmpgtd
adc
adc
test
emms
sbb
lea
adc
xor
fdiv
or
std
rcl
mov
pop
dec
adc
xlat
inc
pop
add
or
add
loopne
iret
leave
xor
and
mov
aaa
pop
inc
add
pusha
imul
pop
push
cmp
or
jnp
jae
dec
push
add
push
ficom
or
add
add
push
mov
sub
dec
add
js
adc
pop
xchg
inc
cmp
aaa
sbb
or
inc
cmp
pop
or
pop
or
ins
sub
add
(bad)
out
call
add
pop
add
sbb
add
int3
and
(bad)
add
in
ret
call
cmp
mov
dec
and
jg
add
pop
pusha
cmp
pop
add
xchg
mov
pop
add
pcmpeqd
dec
ret
ss
cld
ins
add
cmp
cmp
fisttp
in
rol
fs
fstp
cmp
fadd
xchg
pop
xor
popa
aas
sbb
add
dec
or
jbe
test
test
ins
mov
fisubr
xchg
sbb
shl
arpl
movs
popa
popf
movs
cmp
adc
fdivr
sbb
dec
cmp
imul
mov
jl
sbb
sar
push
mov
fild
adc
adc
pop
cmps
(bad)
loopne
and
daa
push
lahf
dec
sub
(bad)
out
pushf
jle
push
lods
xchg
add
push
sbb
add
cmp
cmp
call
ret
and
sbb
jmp
pop
mov
ja
sbb
ret
shl
std
sbb
add
cmp
mov
mov
or
cmp
mov
add
pusha
sub
mov
add
fs
jbe
lahf
pop
lahf
into
sbb
add
xchg
test
xor
push
adc
lahf
mov
and
ficomp
or
add
pop
std
adc
or
jne
or
scas
rol
jge
test
stos
xchg
jg
add
jnp
int
xchg
pop
rcr
ins
das
xor
sub
add
mov
arpl
add
ffree
add
add
sub
clc
add
adc
lods
movs
xor
add
inc
fdivr
xor
js
fnstenv
pop
add
sub
or
movs
and
push
mov
cmp
(bad)
pop
and
and
(bad)
(bad)
cmp
movs
lahf
pop
or
xor
lods
test
jno
sbb
dec
inc
mov
sub
rcl
cmp
xor
xor
div
fsub
add
movs
add
loopne
in
and
push
add
mul
scas
mov
shr
pop
add
outs
add
add
pop
lods
and
lock
add
es
xchg
add
add
cmp
mov
pop
pusha
inc
xchg
cmp
or
jo
enter
(bad)
in
lea
add
or
test
xchg
cdq
add
mov
pop
in
in
sub
ret
adc
ret
sbb
add
shl
xchg
sub
fsubr
das
aas
and
arpl
and
push
jne
shl
sbb
aad
adc
or
lds
pusha
add
add
ret
pop
add
inc
adc
add
fwait
jg
xor
add
lods
cwde
cmp
ins
(bad)
add
retf
mov
pop
sub
or
sub
cmp
sbb
out
imul
pop
add
push
mov
pop
add
scas
jo
js
outs
adc
push
adc
fist
mov
cmp
adc
sbb
add
mov
add
xor
rol
push
loope
push
push
mov
bound
mov
out
lds
sbb
(bad)
add
sar
or
and
inc
or
xor
sbb
add
pop
ss
add
sbb
sbb
in
mov
cmp
pop
pop
retf
mov
fisubr
shld
ins
add
sub
pop
mov
inc
mov
mov
xchg
xor
and
add
lods
add
ins
and
daa
(bad)
push
loopne
jge
(bad)
pop
push
pop
not
or
jnp
jb
push
adc
cli
add
mov
pop
xchg
loope
pop
pusha
or
dec
mov
sbb
push
lds
lea
and
imul
sbb
push
pop
jmp
and
(bad)
dec
sbb
push
daa
add
sbb
and
jmp
add
retf
add
cmps
mov
xchg
sub
dec
pop
inc
jmp
mov
add
jmp
pop
adc
or
std
adc
mov
xor
add
sbb
add
push
fiadd
(bad)
push
xor
ss
or
cmp
sub
pop
cmp
mov
loope
add
daa
xchg
pop
xchg
or
pcmpgtb
add
mov
xchg
mov
jae
fstp
in
test
add
adc
mov
pusha
outs
inc
call
add
dec
fisttp
fld
sbb
aas
or
test
popa
cmp
loop
adc
add
dec
jo
fistp
jo
mov
xchg
jmp
in
(bad)
pop
xor
jg
mov
cli
adc
arpl
xchg
xchg
push
jp
mov
sub
add
pop
arpl
add
mov
add
pop
stos
push
pop
pusha
test
sbb
sub
mov
pop
icebp
add
jno
mov
xchg
sub
scas
adc
fimul
je
xchg
dec
sbb
loopne
scas
adc
ja
pusha
fucomip
add
or
sub
sbb
sbb
add
mov
hlt
adc
(bad)
pop
and
stos
call
pop
cs
das
test
addr16
mov
movs
cmp
mov
out
sahf
push
test
or
add
jnp
adc
dec
sub
xor
smsw
add
out
sub
loope
pop
inc
push
popf
cwde
shr
adc
push
out
sub
pop
add
pop
adc
add
jmp
sbb
push
popf
scas
pop
add
daa
lmsw
add
xor
mov
and
or
pop
add
shl
sbb
add
rol
inc
sub
mov
jae
mov
ret
sar
adc
fdivr
push
and
mov
scas
fisubr
add
xor
mov
(bad)
dec
push
adc
add
out
add
cmp
mov
add
fs
popa
sub
or
pop
bound
push
pop
and
sub
fdiv
cmp
or
or
cdq
add
call
add
add
add
or
out
push
mov
les
adc
adc
adc
add
lods
jne
xlat
add
dec
sbb
inc
sbb
add
sbb
fcmovu
aas
stos
add
add
add
and
and
es
or
mov
mov
and
push
sub
sub
add
and
test
mov
add
pop
pusha
mov
and
or
mov
push
jb
add
pop
enter
push
add
pusha
and
imul
arpl
jo
sub
nop
xchg
pusha
add
mov
add
rcr
rcl
fisttp
or
add
xor
pop
shl
add
sub
adc
mov
lock
mov
mov
adc
and
xor
inc
inc
push
add
mov
push
add
fsubr
nop
add
rcl
int
ja
and
or
lock
mov
inc
add
add
adc
sub
ret
sub
add
sub
dec
inc
add
pusha
add
add
adc
push
das
rcl
ins
and
rcr
int
bound
cwde
mov
adc
pop
add
mov
aas
xor
inc
add
pusha
add
mov
add
jnp
mov
ins
add
rol
add
arpl
mov
sub
aas
adc
cmp
cmp
sbb
push
cmp
fisttp
pop
test
push
call
popf
or
sar
loopne
mov
mov
pop
nop
aas
cmpxchg
ins
jb
outs
ror
scas
lahf
sub
pop
push
and
pop
cmovo
sub
or
das
jg
push
test
jmp
dec
push
test
sbb
adc
test
call
in
jbe
clc
(bad)
das
or
adc
leave
leave
leave
push
sbb
and
jg
sbb
pusha
sbb
in
in
xor
ds
dec
in
jbe
dec
adc
push
test
jnp
lahf
mov
pop
jg
loopne
fimul
xor
xor
ret
jo
aas
add
movzx
mov
aas
jmp
fsubr
out
push
sbb
std
jmp
dec
ret
sar
aas
lds
aas
call
imul
push
aad
pop
push
dec
fcomi
in
test
push
in
leave
psubusw
xor
jecxz
les
je
sub
pop
push
lds
mov
stos
jmp
pmulhuw
aas
sets
sub
outs
adc
sub
add
iret
cvttps2pi
xor
mov
shr
push
clc
das
bound
ud1
sar
cvttps2pi
cmp
pop
pop
adc
aas
test
push
or
jg
mov
ret
dec
xor
xor
inc
(bad)
scas
sbb
inc
lahf
out
inc
test
or
and
ins
das
dec
invd
push
push
add
push
pop
add
outs
iret
ror
les
outs
push
(bad)
fisub
in
mov
aaa
cmp
in
in
cmp
cmp
mov
loopne
(bad)
aas
cmovo
add
ud0
fcomi
mov
sldt
movq
lds
pop
sldt
mov
ins
pop
sldt
str
xor
das
das
add
ja
push
fadd
iret
push
or
add
push
mov
fist
imul
btr
(bad)
out
rol
mov
jbe
mov
dec
das
lahf
pshufw
scas
cmovg
addps
aas
mov
(bad)
and
cmovl
pop
jecxz
jle
outs
addr16
push
cs
pop
pop
icebp
aas
repz
cmc
push
sbb
sbb
and
mov
(bad)
(bad)
jg
(bad)
xchg
cmp
jg
dec
xchg
call
jg
ret
sub
outs
lahf
out
data16
fsubr
adc
lahf
test
bound
ud0
or
comiss
pop
adc
jg
sbb
add
(bad)
mov
test
push
mov
das
pop
push
ins
add
push
xor
sub
mov
mov
fistp
jg
dec
add
jg
pop
jg
dec
str
sub
test
mov
and
jg
push
push
mov
or
punpcklbw
push
lahf
lahf
push
ins
push
mov
mov
bswap
scas
sub
sbb
sub
push
lahf
das
jg
mov
adc
test
or
fisttp
mov
jg
sub
jg
or
punpcklwd
xchg
inc
adc
or
iret
push
and
pop
jmp
ds
lar
test
out
cvttps2pi
inc
aad
pop
unpcklps
push
sub
(bad)
lahf
lahf
mov
inc
add
out
outs
mov
ret
nop
push
mov
js
outs
or
mov
mov
adc
or
fild
adc
adc
sub
xor
adc
nop
(bad)
jge
call
pop
ret
mov
push
push
mov
mov
mov
cmp
rol
pop
and
jnp
mov
cmp
jbe
mov
rcr
jg
call
movzx
shl
mov
shr
and
add
sub
xlat
in
int
nop
add
and
mov
jno
add
out
std
out
jmp
jmp
xor
pop
call
sbb
shl
mov
fsubr
dec
and
sbb
in
std
fidivr
or
push
clc
popa
jb
or
add
add
add
mov
cmps
xor
add
(bad)
push
mov
mov
sbb
push
pop
cmp
sete
dec
cmp
jb
adc
pop
or
push
mov
xor
jmp
jle
pop
cmp
pop
mov
jo
outs
pop
inc
cmp
jle
xor
mov
pop
pop
inc
lahf
adc
add
adc
call
loopne
fimul
shl
mov
out
not
cld
dec
cmp
jle
mov
add
ret
inc
test
xor
scas
adc
sbb
mov
mov
or
mov
mov
adc
push
push
mov
mov
fwait
inc
pop
add
or
jnp
mov
ins
add
into
xchg
sub
movs
jl
cmp
mov
sub
or
jmp
add
fnstsw
daa
mov
lods
sbb
lea
sbb
mov
cmp
mov
je
jl
jl
loopne
adc
pop
add
rol
test
jl
push
mov
xor
repz
add
mov
sbb
loop
rol
ror
adc
inc
xchg
stos
adc
adc
cmp
sbb
sbb
repz
jns
ret
sbb
fisubr
test
add
in
je
addr16
mov
js
pop
fsub
rcr
hlt
adc
pop
stc
je
addr16
lods
ds
les
leave
xor
sbb
jnp
(bad)
ja
push
sahf
xchg
iret
enter
mov
mov
mov
(bad)
repnz
ins
mov
mov
pop
push
pop
mov
out
imul
cmps
dec
push
pop
inc
inc
push
cmp
cmp
aaa
xor
mov
sub
call
mov
inc
mov
push
fdiv
repnz
push
mov
cld
mov
iret
enter
mov
cmp
inc
and
test
jmp
scas
pop
cld
fisttp
clc
lahf
xchg
iret
enter
fsubr
ds
sub
call
sahf
pop
aaa
in
test
loopne
fdiv
mov
cmps
das
aam
sbb
movs
push
mov
cwde
push
push
out
hlt
inc
(bad)
push
mov
inc
mov
and
outs
(bad)
push
pop
pop
xor
push
add
jmp
loope
push
sbb
push
inc
imul
call
push
or
outs
addr16
arpl
and
fst
adc
or
add
cmp
add
int3
(bad)
clc
or
and
inc
cs
cwde
ins
jp
inc
js
pop
jge
xor
arpl
add
(bad)
mov
pop
loopne
push
xor
dec
das
mov
mov
les
int3
and
ds
repz
cmp
xor
ja
daa
clc
imul
adc
mov
cmp
and
push
add
or
jns
icebp
jae
or
cmp
inc
cwde
(bad)
out
push
dec
add
call
call
xchg
in
fs
push
add
loopne
rcr
xchg
rcpps
(bad)
or
jne
addr16
bound
jb
pop
(bad)
jb
popa
je
cmc
adc
lock
or
push
ficom
ins
dec
daa
jo
fidivr
cmps
pop
inc
pop
je
outs
jns
aas
inc
xchg
inc
mov
sbb
je
push
pop
pop
sbb
pop
ins
in
push
outs
mov
xchg
sbb
jge
jbe
inc
dec
outs
fs
pop
pushf
add
ror
loope
mov
iret
add
add
(bad)
call
shl
jnp
sub
je
rcr
rcr
or
or
adc
shl
cdq
xchg
sub
sub
sub
mov
fwait
mov
add
or
popf
inc
or
inc
icebp
jge
jns
bound
and
pop
dec
sub
test
xchg
mov
sbb
and
lahf
jnp
add
outs
scas
mov
fisubr
mov
test
push
pop
inc
dec
stos
inc
jnp
adc
popa
punpckldq
push
add
mov
add
scas
add
add
ins
add
sahf
pop
cmp
add
push
adc
cs
or
popw
sub
es
mov
add
adc
jg
or
cs
add
cs
mov
outs
or
add
add
jge
cmp
outs
jne
je
xchg
out
push
call
scas
push
cs
mov
inc
xchg
push
sbb
add
out
ins
sahf
out
loopne
jbe
ins
ds
push
add
shl
xor
or
scas
jae
or
inc
dec
cmp
or
sub
mov
in
pop
jo
pop
hlt
cmovbe
jb
arpl
std
out
cmp
call
xor
inc
push
je
arpl
mov
outs
jno
adc
push
inc
inc
arpl
imul
add
add
cmp
mov
(bad)
cld
cmp
test
and
dec
shr
cwde
xchg
idiv
push
jp
pop
loopne
xor
inc
push
mov
sbb
xor
sub
pusha
ins
push
fadd
cmp
adc
jae
fnstcw
test
or
rol
loope
xor
shr
in
sahf
fiadd
aas
push
add
jb
add
push
test
adc
pop
push
xor
sub
mov
imul
lods
mov
fidivr
jb
ror
in
or
jnp
push
mov
repz
add
add
adc
lahf
ins
clc
sahf
or
or
inc
test
jge
inc
jns
pop
push
fisubr
push
popf
inc
lahf
inc
or
adc
add
les
sub
or
pop
mov
retf
adc
xor
add
adc
jbe
mov
push
sub
aam
inc
and
jo
rcl
inc
pop
pushf
sub
out
push
das
push
inc
popa
jae
iret
pop
dec
pop
ror
lods
add
mov
push
and
mov
mov
les
sub
pop
push
popa
imul
cmp
iret
sub
inc
pop
push
push
outs
ja
add
inc
or
cs
dec
ins
dec
fsubr
cwde
or
or
addr16
scas
add
and
or
or
or
push
aaa
inc
dec
or
shr
loopne
lds
out
std
inc
push
pop
pop
bound
nop
jbe
mov
mov
sub
push
jb
gs
mov
or
sbb
test
movs
pop
loope
out
test
mov
mov
or
or
ss
adc
jne
mov
ret
fcmovnbe
pop
xor
xchg
int
fwait
add
pushf
fld
outs
fs
cmp
inc
adc
inc
sbb
outs
adc
sbb
xchg
inc
sti
push
and
out
out
inc
adc
inc
or
xchg
outs
mov
sar
and
pop
add
or
aad
call
aaa
add
addr16
push
sbb
pop
xor
add
mov
pop
aas
add
ja
inc
dec
outs
pop
cmp
(bad)
je
jne
jo
jb
fs
adc
cmp
or
js
jg
pop
or
push
add
inc
inc
sbb
add
ds
inc
inc
jmp
cmp
dec
xchg
inc
lahf
(bad)
loopne
outs
adc
cmovle
retf
(bad)
shr
rcl
adc
pop
test
pusha
aaa
psubsb
in
adc
pop
or
push
pop
lock
dec
imul
add
pop
and
fist
inc
adc
mov
ins
popa
jae
mov
xor
jg
pop
enter
inc
jo
jg
shl
mov
inc
(bad)
mov
jnp
shl
push
fild
aas
adc
push
aas
(bad)
cmp
or
inc
ins
ins
outs
mov
inc
movs
jg
mov
ja
mov
dec
gs
jo
sub
sub
sbb
push
dec
outs
jp
outs
shl
pop
cmp
sar
fwait
outs
pop
xor
mov
mov
dec
xchg
jmp
inc
add
sar
and
add
in
mov
adc
sub
cmp
push
dec
(bad)
jle
mov
sbb
inc
outs
fs
xor
add
or
push
and
and
inc
add
int3
xchg
jne
pop
or
aam
imul
inc
push
add
std
xchg
(bad)
mov
inc
fs
or
mov
gs
popa
ins
or
pushf
cmp
inc
pop
inc
adc
xchg
add
add
adc
(bad)
mov
test
sub
or
xor
mov
push
pop
pushf
fld
add
push
cvtps2pd
push
adc
fadd
in
mov
add
or
lock
adc
mov
das
inc
dec
cwde
mov
test
add
xchg
inc
jns
xchg
mov
push
ins
fadd
mov
(bad)
test
shl
add
and
adc
cmps
dec
pusha
pop
dec
and
mov
xor
adc
data16
(bad)
push
js
mov
and
push
outs
fnstcw
fwait
sub
fld
or
shl
div
mov
dec
mov
sbb
mov
ins
rcl
andps
into
sahf
dec
nop
xchg
dec
ins
scas
push
js
mov
(bad)
loopne
sbb
dec
and
pushaw
mov
push
add
pop
inc
cmovbe
cmp
inc
fisubr
sub
pop
rol
loopne
cld
inc
lock
pop
push
fisttp
out
dec
pop
and
push
or
mov
es
rol
add
pop
mov
xchg
inc
movs
add
push
rcl
fsub
retf
add
and
adc
mov
push
pop
xor
cmp
rcl
xchg
movups
imul
nop
iret
pop
sub
sbb
in
and
pop
in
jmp
sbb
inc
popa
or
aaa
sub
mov
mov
mov
jo
setb
inc
out
or
cmps
sbb
(bad)
adc
and
and
xor
jae
pop
cmp
ds
pop
adc
arpl
push
imul
addr16
pop
sub
sbb
add
jnp
pop
(bad)
fisttp
out
pop
loopne
ins
sbb
xor
(bad)
mov
pop
pop
jo
add
mov
add
pop
nop
setbe
pushf
jne
push
inc
call
iret
scas
sub
pop
pop
cmp
pop
pop
inc
cmovbe
adc
or
ins
jo
push
mov
std
mov
sub
inc
shl
pop
in
jmp
popa
shl
(bad)
leave
and
mov
icebp
test
mov
push
jo
setbe
ror
je
jp
je
popa
inc
bound
ss
scas
sub
and
outs
mov
pop
inc
cmovbe
add
bound
ss
pop
sub
pop
rcr
stos
add
dec
lock
inc
cs
div
pop
mov
iret
scas
or
ss
sub
mov
rcr
mov
add
ffree
push
xchg
clc
jne
inc
push
pop
or
push
sub
pop
dec
adc
mov
xor
mov
jbe
or
pop
pop
punpckldq
rcl
push
mov
sbb
jle
daa
adc
out
mov
sub
test
bndldx
add
imul
ret
scas
sbb
inc
xor
mov
aas
mov
aas
sbb
xchg
and
imul
rcl
scas
or
sub
mov
mov
pop
jo
jbe
pusha
stos
xor
sbb
add
lods
or
pop
inc
inc
dec
add
or
stos
mov
pop
cmp
ds
inc
lock
pusha
cmpxchg
jo
push
xor
iret
push
mov
sbb
loopne
add
pop
mov
call
dec
bound
sbb
add
jae
xor
loopne
pop
sub
sub
outs
adc
push
inc
shl
cmp
or
lds
push
dec
xor
fnsave
add
push
inc
clts
adc
adc
sbb
ins
push
xor
popa
je
gs
push
jp
or
aaa
lock
ret
inc
ficom
add
sbb
pop
dec
dec
popa
mov
mov
add
popa
test
loopne
data16
call
sbb
repnz
jp
and
push
es
outs
pop
lock
push
or
cmp
xor
push
pop
mov
lock
pusha
xor
xor
pop
enter
xchg
leave
add
mov
push
repnz
mov
jo
xchg
(bad)
pop
sti
push
pop
daa
out
jle
(bad)
int3
and
jnp
or
pushf
fwait
je
imul
iret
maskmovq
test
push
sahf
out
sahf
xor
mov
mov
pop
enter
sub
cmp
add
push
inc
jne
push
arpl
jb
push
adc
sbb
stos
xor
xchg
pop
sbb
adc
pop
mov
push
cmps
sub
or
jo
push
push
xor
or
sub
xor
add
adc
mov
push
add
inc
dec
fwait
imul
and
push
adc
imul
jo
(bad)
stc
imul
sbb
mov
jns
aas
xor
inc
adc
ins
mov
shl
jno
xor
xchg
ret
repnz
pop
sbb
push
ja
xor
and
imul
push
fdiv
outs
ja
mov
shl
gs
arpl
out
add
and
inc
mov
jg
aad
add
add
cmp
outs
repnz
push
mov
sbb
jbe
or
push
lock
gs
xor
or
pop
test
mov
ror
dec
pop
push
pop
rcl
inc
push
push
jne
mov
test
add
add
mov
arpl
(bad)
or
in
mov
ss
add
lds
add
dec
push
xor
out
jns
inc
xor
adc
sbb
push
loopne
sbb
push
or
out
pop
cmp
test
fs
and
and
mov
jle
push
or
add
or
add
hlt
gs
add
arpl
popa
inc
aaa
mov
push
inc
arpl
jbe
dec
test
pop
lods
push
ds
xchg
inc
sbb
push
pop
test
add
clc
mov
rol
mov
cwde
push
inc
test
out
xor
mov
pop
into
jecxz
ror
dec
popa
jae
push
popa
bound
and
inc
mov
and
pop
hlt
call
shl
inc
adc
aas
imul
mov
ret
test
or
cli
cmp
xchg
dec
add
jo
inc
cmp
adc
add
ds
lds
add
push
mov
inc
xor
inc
shr
or
dec
test
nop
imul
sar
cs
adc
dec
pop
mov
mov
int3
add
jmp
paddq
pop
or
cmp
test
ror
iret
repz
imul
jns
dec
push
xchg
mov
pop
arpl
lock
add
neg
outs
jbe
xor
fiadd
leave
and
ror
scas
jecxz
inc
(bad)
es
iret
push
movs
add
mov
sbb
xor
jle
imul
add
es
mov
jo
add
hlt
pop
or
inc
icebp
push
stos
std
shl
inc
outs
test
push
pop
das
jg
popa
sar
clc
jns
repz
mov
xchg
jge
adc
sub
fimul
aas
xor
pop
out
or
sub
mov
adc
imul
loope
sbb
cli
inc
jle
outs
lea
push
lahf
scas
(bad)
lock
and
dec
jne
int3
ss
inc
int3
lods
out
jne
cwde
push
or
sub
sub
push
stos
es
jne
lods
call
out
cmp
pop
push
xchg
cmp
mov
inc
gs
and
jp
sub
pop
add
call
imul
adc
or
and
ret
cmps
pop
cwde
neg
shl
cmp
popa
fs
nop
in
add
imul
add
push
inc
test
outs
push
pusha
xchg
sbb
aad
ret
cmp
add
jle
pop
fnstsw
daa
xor
aaa
clc
jbe
fnstsw
push
jnp
cwde
inc
ja
or
inc
or
and
lock
outs
addr16
lock
jb
and
js
popa
jo
arpl
outs
rcl
jns
cmp
jne
sahf
pushf
fmul
scas
jecxz
(bad)
jp
in
jno
out
sbb
(bad)
cmp
cmp
test
pushf
pushf
mov
ret
clc
dec
dec
inc
sahf
sub
daa
daa
and
retf
mov
jmp
xchg
call
in
in
jmp
jb
repnz
xor
ja
cmp
jns
inc
xchg
pushf
pushf
mov
rcl
fisttp
inc
sahf
pop
shl
cli
daa
daa
and
shl
fidiv
aam
add
into
push
xor
lods
push
ret
add
xchg
inc
jne
rcl
jl
sub
bound
cmps
cdq
cmp
or
and
add
ficom
rcl
popa
mov
int3
mov
jno
or
push
popa
dec
lods
and
fisttp
push
sub
jns
popa
pop
mov
mov
add
and
xchg
xchg
stos
push
lea
pop
scas
mov
mov
push
sub
xlat
sub
inc
jo
rcr
(bad)
push
outs
xchg
push
xlat
add
outs
imul
imul
imul
retf
and
xchg
imul
inc
push
adc
xchg
sbb
fs
rcl
mov
cmp
mov
push
enter
inc
sbb
xor
push
lds
lds
imul
imul
imul
lahf
xchg
ret
and
data16
pop
push
or
movs
jmp
fistp
or
xor
xor
mov
sti
or
pop
mov
jecxz
cwde
icebp
out
mov
mov
ins
push
je
and
adc
or
cmp
xchg
mov
cs
inc
cmc
retf
popa
jns
ret
push
outs
dec
mov
jmp
lds
or
arpl
xor
stos
xchg
sub
add
stc
in
inc
or
sub
aas
lock
inc
outs
jae
gs
add
or
dec
mov
(bad)
adc
xchg
fisub
popa
aam
jno
dec
pop
mov
jns
and
or
test
mov
add
mov
pop
mov
mov
bound
sub
push
mov
mov
push
mov
inc
or
sub
test
jo
xchg
xchg
cmp
fild
lods
or
add
out
aad
or
xchg
xchg
mov
xchg
adc
adc
xor
movs
arpl
imul
ins
call
jae
ror
cdq
arpl
push
gs
outs
jbe
adc
popf
add
aad
add
lock
dec
cdq
pop
mov
push
clc
pop
or
push
add
(bad)
or
dec
gs
add
test
push
popa
retf
or
xor
adc
fcom
or
mov
or
xlat
ins
mov
sub
sbb
movs
fmul
inc
inc
fld
add
loop
push
test
pop
mov
jo
mov
mov
aaa
rcl
or
or
jnp
add
aam
xchg
or
ins
add
push
xchg
lea
and
(bad)
dec
push
cmp
rol
test
or
mov
retf
jmp
jle
push
mov
push
adc
or
add
div
adc
dec
xchg
inc
icebp
inc
shr
add
jg
cmps
sbb
(bad)
in
ins
pop
push
push
dec
ret
push
iret
mov
call
outs
shl
jb
outs
jb
or
mov
jbe
pop
mov
dec
xor
add
jne
or
fcomp
inc
shl
mov
inc
cmps
or
test
add
push
dec
clc
mov
mov
adc
push
jge
adc
cdq
mov
push
je
push
in
shr
mov
push
pushf
es
sub
repz
(bad)
and
out
pusha
ins
xor
mov
mov
sub
add
or
dec
jae
ins
or
dec
push
adc
add
call
cmps
sub
cmp
jns
repnz
push
ror
fisubr
fstp
add
pushf
loop
outs
(bad)
cmc
inc
fdiv
jge
mov
dec
push
fnsave
xchg
xchg
fimul
in
leave
ja
pop
loopne
jns
xor
sbb
xchg
ror
mov
sbb
adc
push
dec
inc
sahf
pushf
mov
in
sahf
fild
dec
jb
ret
push
or
push
enter
fnstsw
jg
or
push
hlt
add
xchg
push
mov
call
shr
xchg
add
xor
add
inc
inc
jbe
sub
cmp
pusha
jbe
nop
inc
out
mov
dec
or
jno
push
push
pop
push
or
or
retf
push
xor
retf
add
retf
data16
mov
retf
pusha
in
inc
sub
push
mul
pop
adc
add
push
adc
or
gs
xor
cmps
and
adc
popa
int
js
mov
fs
(bad)
(bad)
push
sub
inc
xor
and
ins
adc
inc
jne
stos
xor
data16
add
and
loopne
fdivr
and
mov
lods
xchg
add
adc
jae
sbb
jp
mov
xchg
push
test
pusha
dec
lods
lods
push
mov
in
jne
or
in
push
mov
sbb
sub
add
imul
les
fst
or
out
mov
ror
aaa
sbb
add
sahf
js
push
add
lahf
movs
stc
ud1
in
les
add
pop
add
das
lock
daa
mov
ret
leave
mov
push
pop
add
adc
imul
or
sub
inc
mov
cmp
jmp
fsubr
sub
adc
sbb
mov
das
js
push
loopne
xor
iret
sbb
sbb
mov
ja
nop
pop
mov
iret
jg
lock
iret
fistp
call
adc
in
sub
repz
adc
iret
push
mov
adc
(bad)
push
ins
std
add
pop
mov
dec
sbb
and
rol
pop
jnp
jnp
adc
sbb
arpl
inc
sub
push
rcl
jne
aad
les
fwait
jne
add
inc
jae
jne
add
outs
jne
adc
adc
xchg
add
xor
add
dec
and
and
jno
mov
movs
sub
rol
and
xchg
jnp
push
xchg
mov
inc
xor
cmp
add
test
aad
push
shr
push
iret
test
mov
mov
xchg
pop
sbb
push
and
into
iret
or
iret
out
fs
scas
test
pop
mov
std
or
mov
mov
pop
pushf
retf
inc
retf
cmp
das
or
xor
loope
cmc
ror
xchg
ficomp
dec
xor
push
push
xor
int
push
dec
popa
ins
gs
fs
inc
mov
mov
adc
sub
lahf
daa
test
or
pop
push
push
pusha
push
xchg
jo
sbb
int3
add
sbb
sbb
jmp
imul
stc
imul
cmp
imul
push
push
mov
mov
sub
pop
adc
mov
ins
cs
pop
fs
push
push
or
push
imul
jmp
mov
test
call
push
(bad)
loop
add
sub
imul
call
xlat
sti
push
mov
test
je
sbb
pop
iret
movs
scas
loope
movs
in
lock
adc
out
push
dec
out
idiv
mov
mov
xchg
push
cwde
cs
loopne
sub
add
push
mov
sbb
(bad)
add
inc
test
push
outs
push
cmovbe
xor
xor
push
cwde
fnstcw
inc
xor
mov
or
icebp
ud2
add
jmp
mov
test
mov
dec
clc
shrd
add
and
add
mov
sbb
push
inc
sub
inc
xor
jo
mov
rcl
dec
push
in
sbb
mov
jo
add
mov
outs
sub
cwde
push
push
pop
push
xchg
sub
mov
or
push
nop
sub
dec
jno
ret
xor
scas
addr16
addr16
push
dec
jnp
xchg
push
mov
(bad)
mov
or
add
(bad)
in
pop
xor
pop
xor
add
outs
mov
in
add
push
xor
pop
push
pusha
fcmove
in
(bad)
push
sbb
push
dec
mov
dec
xchg
aaa
xor
push
inc
aaa
cmp
mov
cmp
scas
clc
out
stc
inc
xchg
pusha
mov
xor
mov
sbb
popa
lods
stc
and
sub
dec
lds
(bad)
jbe
mov
enter
out
pop
mov
sub
vpmacssdqh
sbb
test
xchg
push
pushf
mov
inc
pop
jno
(bad)
pop
push
pop
sbb
prefetchnta
(bad)
xchg
mov
lahf
fsubr
push
mov
lahf
call
sub
sub
movs
sub
or
mov
add
test
jnp
inc
push
mov
add
xor
lds
pop
shr
add
or
fld
sub
mov
adc
test
lahf
out
sahf
xchg
mov
push
cld
add
mov
push
sub
(bad)
cmp
adc
popa
push
inc
xor
js
cld
or
dec
test
pop
and
enter
fbld
jne
inc
add
add
xchg
add
inc
bound
add
pop
add
mov
add
add
jnp
outs
add
xor
xchg
inc
and
shr
popa
sub
add
pop
fcom
push
(bad)
js
(bad)
in
imul
movs
mov
fmul
and
push
sub
or
dec
scas
and
sub
out
push
xadd
shl
addr16
mov
stos
mov
mov
mov
mov
lea
and
sbb
pop
cmc
das
rcl
adc
mov
(bad)
pop
push
add
ins
lock
push
inc
imul
cmp
arpl
repnz
hlt
inc
adc
leave
push
pop
outs
arpl
add
int3
push
add
jb
sub
push
addr16
xor
sub
add
fistp
das
add
dec
bound
iret
cmp
adc
cmp
jbe
dec
xchg
pop
xor
repnz
adc
shl
mov
pop
add
int3
add
jmp
and
popf
in
inc
and
adc
mov
enter
int3
stc
inc
repz
or
jnp
jmp
mov
inc
push
pop
cwde
inc
lods
push
xor
xlat
jbe
push
add
push
hlt
push
mov
sbb
push
push
pop
cld
nop
mov
adc
movs
mov
push
ss
sbb
jnp
mov
add
div
pop
inc
dec
outs
ins
pop
repnz
push
push
and
or
push
pushw
out
dec
lea
sub
jb
lahf
shl
and
dec
pop
push
loope
lock
sti
pop
jl
push
or
or
pusha
inc
repz
pop
test
ror
or
xchg
jl
jg
jle
or
neg
(bad)
or
mov
sti
adc
ds
push
(bad)
xchg
(bad)
sub
lods
add
sbb
add
test
cmp
push
xchg
inc
jg
or
repz
mov
or
sahf
inc
sbb
mov
mov
sti
jae
outs
jae
lahf
cmp
(bad)
scas
cwde
cmp
add
stos
lods
inc
or
bound
pop
loopne
cmp
xchg
and
cmp
jo
mov
add
jne
movs
push
cmp
cld
cmp
jne
daa
sub
inc
jle
dec
into
dec
jo
test
xlat
int
inc
or
dec
aaa
xor
or
dec
ins
fs
fmul
pop
dec
gs
call
in
sbb
xchg
add
shr
popa
gs
jecxz
push
inc
jbe
adc
imul
ins
shr
add
retf
adc
add
pop
add
jb
add
jns
movs
in
dec
push
lods
rol
dec
aam
in
test
push
jno
mov
push
push
call
ins
push
test
sbb
retf
jne
jg
and
add
ret
nop
push
mov
(bad)
(bad)
in
push
mov
mov
shr
div
mov
mov
add
pop
pop
ret
jnp
jg
mov
mov
mov
mov
and
add
pop
gs
addr16
push
push
push
mov
mov
cmp
aas
pusha
(bad)
dec
in
pop
pop
inc
mov
mov
mov
mov
mov
(bad)
fnstenv
push
push
clc
mov
leave
push
call
dec
xor
in
dec
sub
jb
adc
push
jb
out
mov
adc
dec
sub
add
or
sbb
fdivr
xor
sbb
es
into
jle
movzx
sub
add
and
and
and
pop
add
movs
ret
lea
push
jg
call
fisubr
cld
dec
cld
test
je
sub
mov
cmp
je
mov
jmp
fstp
or
repnz
xchg
rol
sub
clc
fild
add
xor
push
mov
jg
mov
add
dec
jmp
aaa
inc
cmp
jne
inc
adc
lea
cmp
push
lea
cwde
test
ficomp
inc
push
jae
inc
fcom
xor
popa
dec
jne
inc
add
(bad)
retf
ret
push
inc
aas
cmp
mov
and
test
or
jne
mov
cmp
adc
sbb
or
push
or
dec
inc
or
add
jo
sahf
loop
inc
test
adc
jg
bound
cs
mov
sar
call
dec
pop
mov
movs
pop
adc
sub
and
add
outs
cmp
ja
xor
rol
jle
bt
setb
pop
cli
add
(bad)
sti
inc
adc
(bad)
scas
xchg
call
mov
sbb
mov
jl
mov
jmp
clc
call
rol
dec
test
jne
out
fs
mov
ret
pop
sti
add
shl
push
push
pop
or
or
(bad)
jg
aaa
push
add
enter
pop
cld
xor
sub
push
adc
and
sub
sbb
in
cld
shl
cs
mov
xor
test
add
repz
mov
bsf
shr
add
add
jns
je
push
adc
sub
pop
pop
lahf
fiadd
test
inc
ret
sub
push
add
add
xor
add
cld
add
or
inc
(bad)
in
repz
cmp
push
movs
and
sub
jg
sub
pop
icebp
pop
mov
pop
adc
pop
idiv
xchg
sub
cmp
jg
aaa
or
sub
push
and
and
jecxz
pop
jg
movzx
cmp
jne
mov
pusha
jb
pop
inc
add
sbb
jne
xchg
mov
neg
bound
mov
mov
or
clc
add
leave
and
mov
jl
cmp
jbe
out
dec
cmp
je
data16
and
inc
and
xor
jle
mov
xor
cmp
sti
jmp
sub
jne
lahf
xor
int3
outs
and
and
sbb
ret
call
pop
lahf
mov
mov
cmp
jne
add
loopne
rcl
or
fimul
cmps
fwait
div
push
je
dec
aad
jne
add
dec
pop
jbe
xchg
jecxz
scas
mov
cli
or
nop
(bad)
xchg
mov
(bad)
shl
(bad)
jge
retf
adc
sbb
fstp
adc
ja
push
popf
(bad)
stc
hlt
imul
mov
out
lds
ds
mov
mov
not
retf
or
pop
jo
adc
or
bnd
in
mov
add
add
(bad)
add
mov
in
mov
mov
dec
xor
mov
jle
and
cwde
loope
xor
and
sbb
sbb
or
jmp
inc
cmp
jl
fcmovb
dec
test
in
and
bound
lds
xor
scas
jns
push
pop
fistp
into
sub
inc
arpl
push
mov
ror
(bad)
xor
daa
mov
or
push
mov
add
rol
inc
cld
xchg
pop
cmp
mov
xor
imul
fdivr
outs
mov
test
sub
mov
jne
lea
push
data16
jne
add
and
mov
mov
jmp
mov
push
push
inc
mov
daa
jle
sub
ins
js
cli
cmp
xor
(bad)
fild
jl
rcl
or
(bad)
sar
jns
ror
enter
xlat
cwde
add
rcr
das
retf
push
push
sbb
test
sbb
jge
or
sub
sar
loope
mov
sub
ret
cdq
pusha
pop
pop
pop
mov
mov
push
mov
pop
ins
hlt
ret
cmps
jp
jmp
push
clc
clc
ss
pop
push
mov
pop
sub
mov
test
mov
jle
cmp
test
adc
add
inc
ins
scas
mov
cli
inc
mov
jmp
sti
(bad)
fsubrp
sub
jne
adc
xchg
xchg
add
rol
or
ds
mov
inc
pop
sar
ret
(bad)
shr
aad
push
or
fadd
dec
add
iret
jo
mov
or
add
ds
dec
lock
or
inc
dec
inc
mov
imul
add
nop
push
das
nop
call
sbb
mov
rol
push
mov
add
and
ds
ds
test
test
and
pop
mov
inc
mov
movs
call
(bad)
jge
inc
je
jmp
cmp
sub
cmp
and
sbb
jne
data16
sub
out
inc
fistp
mov
cmp
sbb
or
aad
mov
or
repz
push
mov
imul
jbe
mov
nop
jmp
cmp
sbb
add
or
scas
mov
jb
push
push
inc
sbb
mov
or
adc
sbb
and
push
and
mov
xchg
jmp
dec
mov
push
sub
push
loopne
cwde
sbb
lea
fidiv
test
add
scas
jl
pop
je
shr
dec
xor
add
push
fs
xor
stos
(bad)
je
ins
scas
clc
sub
psubq
inc
cmp
stos
jns
adc
adc
and
push
or
fcmovu
inc
push
inc
dec
jne
jmp
lods
jl
movs
adc
or
xchg
or
push
std
mov
add
or
push
sbb
jmp
adc
xchg
jb
(bad)
cld
cmps
mov
cs
cmc
add
cmp
xchg
cmps
fistp
rcl
jmp
and
xchg
cwde
cwde
xor
out
and
xchg
jae
loope
add
fs
inc
das
jp
sub
cld
or
or
inc
movzx
(bad)
sbb
rcr
mov
test
sub
cmp
jle
outs
cmp
cmp
ror
mov
imul
sub
cmp
sub
add
je
cmps
clc
lahf
mov
add
add
mov
ret
xor
inc
ret
and
xor
idiv
or
fadd
rcl
adc
jge
je
cmp
pop
cmp
adc
jbe
sub
xchg
pop
xor
adc
test
add
aad
in
mul
sbb
dec
jo
hlt
jb
repz
push
test
add
adc
outs
xchg
and
shr
and
repnz
cmps
jb
add
(bad)
mov
mov
mov
cli
mov
or
inc
arpl
aas
sbb
xchg
ret
add
jmp
cs
mov
das
add
por
pop
das
aaa
xchg
jo
adc
pop
and
jb
push
cwde
es
pop
push
imul
push
es
call
call
mov
adc
ror
xor
adc
enter
push
loope
iret
push
push
push
ficom
push
lock
mov
jnp
rol
dec
adc
or
js
out
adc
inc
xor
push
aas
hlt
frstor
inc
sub
mov
loope
sbb
clc
or
adc
pusha
test
mov
sbb
xor
pop
inc
lahf
shl
push
push
in
and
dec
lock
aas
jle
ds
hlt
sub
pop
xor
pop
push
loopne
mov
mov
mov
shl
fsubr
(bad)
enter
xchg
(bad)
sub
call
mov
shl
mov
mov
push
ss
cmps
inc
jae
add
adc
or
or
call
xchg
fcmovnb
fs
dec
fadd
jae
xor
mov
ja
or
xor
sub
push
test
pop
xchg
adc
adc
inc
neg
mov
(bad)
sahf
test
inc
inc
into
loop
sbb
out
xchg
pop
sub
add
clc
jge
jl
movs
sbb
push
or
adc
neg
(bad)
mov
xor
(bad)
mov
jmp
dec
add
dec
movs
daa
inc
ror
and
data16
pop
adc
les
push
leave
mov
push
loope
and
sbb
mov
pop
pop
shrd
rol
mov
dec
hlt
jmp
inc
std
sub
mov
jp
loopne
fidivr
push
lea
mov
cmc
adc
cmp
add
(bad)
sub
shl
sbb
dec
test
jl
inc
dec
in
sbb
push
push
in
dec
or
dec
jne
mov
xor
adc
add
inc
push
add
add
and
sub
jle
xor
sub
xor
push
pop
and
loope
add
mov
sbb
push
mov
stos
or
(bad)
fsubr
popf
push
aas
out
xor
sbb
jno
repnz
add
adc
test
pop
cld
daa
lods
loope
in
dec
sahf
shl
jp
popa
sub
add
les
cmp
mov
inc
adc
imul
outs
mov
clc
mov
loop
or
es
in
aad
xor
hlt
fisttp
push
xor
scas
mov
and
xor
lea
test
rol
popf
mov
mov
ins
aam
jo
imul
ins
cmps
xor
stos
test
test
outs
popf
loopne
ins
xor
mov
inc
mov
cwde
in
sahf
dec
dec
in
cdq
in
or
or
in
test
cs
les
push
icebp
jge
jo
lds
push
bound
mov
out
nop
xor
push
pusha
mov
mov
xor
das
mov
ret
fadd
into
jp
jnp
push
mov
xchg
adc
mov
mov
mov
add
jne
mov
mov
mov
add
call
mov
xlat
mov
das
add
add
mov
in
add
loopne
lock
cmp
shr
or
mov
test
jl
inc
das
mov
add
lock
mov
aaa
les
mov
pop
add
push
mov
rcr
mov
(bad)
dec
call
and
mov
test
je
fldz
fld
fcompp
fstsw
sahf
setne
outs
dec
or
jmp
movs
sti
mov
jle
dec
and
iret
lods
push
lea
add
es
mov
and
(bad)
jo
pusha
test
cmovg
mov
jl
sub
icebp
(bad)
jo
test
test
sbb
out
pop
cmp
mov
por
and
and
adc
out
adc
add
dec
sbb
in
daa
jg
mov
enter
and
pusha
ja
mov
xchg
push
rol
push
sbb
sbb
fisubr
adc
jl
mov
add
or
sub
shl
test
scas
imul
(bad)
dec
scas
mov
xor
into
cwde
xor
pop
mov
mov
dec
jo
pop
mov
push
push
shl
mov
add
aam
pop
(bad)
ss
mov
leave
dec
push
pop
call
pushf
mov
ror
in
pop
add
add
push
ror
imul
or
pop
mov
das
fcomp
lea
ins
xlat
ins
xchg
or
xlat
clc
jmp
mov
cmp
and
clc
push
sbb
mov
xchg
iret
test
scas
fwait
call
mov
bound
xchg
push
push
icebp
icebp
cmps
out
clc
idiv
xor
in
cmp
ret
addr16
shr
dec
test
inc
rcl
(bad)
sbb
jns
aam
daa
rcl
sbb
into
pop
xor
or
leave
jo
cmp
test
sti
and
cs
daa
sub
rol
add
sti
add
or
div
sub
pop
push
push
mov
clc
sbb
cmp
sbb
sti
push
or
cmp
dec
test
inc
sar
push
push
je
adc
js
sub
add
adc
fmul
pushf
ror
pop
jge
arpl
jmp
adc
(bad)
mov
pop
jae
loopne
pop
int
jmp
push
xor
or
mov
push
or
or
je
sbb
add
cmp
mov
add
push
loop
cmp
adc
inc
xchg
cld
mov
mov
div
mov
jb
inc
sbb
outs
jnp
call
imul
fincstp
xchg
sub
push
cmovb
mov
stos
add
dec
test
jbe
add
push
ins
adc
add
jno
clc
pop
mov
cs
mov
or
sub
add
jo
jge
addr16
push
addr16
mov
(bad)
leave
add
(bad)
mov
mov
sbb
xchg
hlt
in
ss
clc
jmp
push
push
and
adc
call
jmp
pop
not
js
mov
push
cmps
js
mov
push
push
dec
and
cmp
fdivr
sbb
fbstp
js
add
jb
ud0
ja
add
enter
lock
sub
pop
add
sbb
repz
xchg
sbb
cmp
mov
fiadd
push
pop
dec
cs
dec
test
(bad)
test
mov
aam
in
jmp
jl
inc
outs
xor
inc
je
jmp
adc
(bad)
jge
mov
adc
adc
add
mov
(bad)
push
mov
loop
adc
adc
test
cmp
popf
retf
sub
xor
add
es
into
loop
fcomp
and
push
mov
dec
lock
adc
add
push
sbb
inc
fild
fild
or
shl
push
fistp
and
pop
jg
sub
mov
ja
fadd
or
call
std
pop
ins
fabs
jne
out
call
adc
sub
add
push
rol
add
fsubr
add
(bad)
cmp
add
jmp
movs
mov
sbb
test
not
and
ins
push
cmp
jle
push
out
pop
push
sbb
mov
xchg
add
(bad)
pushf
inc
push
call
cld
push
sti
adc
jno
(bad)
cld
imul
aad
inc
mov
hlt
cmp
mov
mov
and
(bad)
adc
dec
sub
push
jmp
sub
pop
add
push
into
adc
neg
mov
or
ret
loopne
outs
xor
pop
out
jo
add
ret
push
je
(bad)
ja
xor
je
push
int
adc
cmp
shr
pop
ret
inc
or
clc
add
mov
shl
mov
jae
mov
mov
rol
sub
mov
cmp
pop
xor
(bad)
xchg
push
retf
pop
push
mov
add
jne
stos
mov
xor
cmp
mov
mov
sbb
add
sub
jmp
add
jmp
in
add
ficomp
inc
retf
cmp
jae
lods
outs
pop
sub
div
mov
ret
push
mov
inc
push
jb
push
add
sub
push
push
adc
dec
cmp
jae
and
retf
ds
fld
loope
inc
jmp
adc
add
mov
das
adc
das
adc
call
jae
in
rol
cmp
lods
in
outs
ret
add
shr
push
fcomi
or
je
ficom
jne
data16
jo
sub
sbb
neg
pop
lds
fsubr
lock
icebp
in
mov
or
mov
call
xor
mov
not
dec
je
mov
mov
and
(bad)
ds
jbe
push
lea
mov
lods
and
mov
push
mov
repz
cmps
ffree
call
shl
inc
(bad)
jmp
pop
pop
seta
sar
adc
jmp
je
inc
ret
fild
xchg
sub
test
jl
inc
xor
adc
movs
es
pusha
je
and
sar
pop
cmp
sub
icebp
mov
inc
dec
jne
(bad)
movs
push
sub
mov
mov
mov
mov
js
sbb
sahf
or
push
add
in
or
or
call
push
popa
lea
lods
add
jbe
pop
lock
outs
scas
in
push
inc
scas
jmp
call
mov
lods
jo
sti
pop
jbe
mov
mov
mov
jne
dec
jb
enter
loop
jmp
les
xor
lock
aam
dec
mov
and
push
cli
out
(bad)
pop
adc
or
push
push
inc
xchg
or
hlt
sub
cs
inc
cmp
je
mov
test
or
mov
cs
test
cs
addr16
jmp
or
loopne
shr
addr16
out
inc
jmp
mov
adc
mov
and
bnd
xor
add
xchg
(bad)
in
loopne
test
sahf
or
push
stc
or
sahf
loop
shl
xchg
xchg
xor
int3
push
inc
or
inc
sub
push
jecxz
js
mov
lock
das
pop
hlt
push
push
gs
bound
mov
inc
fiadd
add
jge
and
fwait
mov
in
test
fistp
xchg
and
fild
xor
cmp
jg
or
add
jmp
pusha
inc
push
or
and
outs
and
popaw
mov
mov
jle
sbb
sbb
jle
lea
add
inc
pop
add
das
ret
jne
add
inc
cld
nop
push
add
mov
jge
cli
push
je
dec
inc
mov
sbb
push
(bad)
mov
hlt
lea
cmp
jle
pop
add
rol
cmp
hlt
cmp
sub
sub
jnp
ds
jmp
in
cs
in
je
and
(bad)
push
push
cs
in
add
xlat
mov
push
test
sti
data16
mov
hlt
clc
je
mov
and
fwait
cs
add
mul
inc
lods
push
jmp
add
and
inc
ins
jo
jne
adc
js
push
sub
dec
mov
xor
xchg
cmps
or
sub
sbb
pop
imul
frstor
fisttp
test
push
hlt
sbb
xchg
aam
or
push
sbb
jbe
push
sbb
push
xchg
pop
pop
je
xor
mov
add
ja
xor
cld
sub
jl
inc
xchg
idiv
or
jo
xor
xor
push
mov
clc
setb
or
sbb
add
test
(bad)
mov
adc
sub
and
adc
xor
mov
sub
adc
xchg
sar
fst
in
cmps
mov
push
clc
movs
add
pop
add
sbb
and
mov
sbb
mov
call
es
sub
or
xchg
bound
sbb
mov
adc
and
adc
pop
in
call
or
test
aas
sub
je
pushw
je
push
inc
shl
pop
hlt
mov
jge
push
sbb
or
sbb
or
fadd
or
xor
cld
sbb
outs
pop
pushf
inc
jne
sub
cmp
push
mov
call
add
adc
movs
xor
mov
call
es
ret
xor
jo
loopne
movzx
test
cli
ss
icebp
sub
xor
pop
sti
mov
add
inc
std
jnp
shl
adc
cmps
mov
xor
jbe
mov
jne
cmp
jo
retf
sub
sar
mov
ror
test
jp
sar
xchg
sbb
sbb
and
mov
jne
inc
in
sub
and
mov
sar
(bad)
adc
jmp
adc
imul
out
push
jmp
jmp
adc
or
inc
jmp
xor
add
cmp
or
xor
je
mov
inc
ja
mov
jmp
add
fld
clc
xor
jg
pop
pop
or
imul
loopne
xchg
sub
adc
push
cmp
and
outs
dec
pop
mov
aaa
or
(bad)
sbb
adc
(bad)
jne
cmp
jl
stos
mov
pop
adc
add
push
mov
cmp
fadd
mov
nop
sbb
add
inc
jmp
xchg
mov
sbb
ror
cld
movs
pop
adc
shr
and
mov
jg
mov
clc
adc
xchg
jmp
ds
jmp
xchg
and
js
mov
repz
push
das
aaa
fisubr
sbb
push
inc
call
push
cmp
xchg
mov
mov
pop
rcl
jg
sar
inc
int3
add
add
adc
je
mov
pop
mov
pop
idiv
sbb
dec
in
ror
sbb
cmp
sbb
daa
or
retf
ins
cmp
test
out
test
cmp
jne
lea
mov
ja
mov
jmp
sbb
and
xchg
pushf
add
mov
in
sub
(bad)
aad
call
or
adc
jo
out
add
dec
push
sbb
mov
pop
inc
rol
and
mov
dec
or
inc
and
mov
idiv
push
push
pop
mov
popf
jae
jo
add
push
mov
cld
mov
jne
sbb
sbb
xor
adc
push
(bad)
ror
dec
jmp
push
push
(bad)
add
add
push
mov
inc
xor
fmul
mov
pop
adc
js
mov
mov
or
daa
or
cs
loope
frstor
inc
ja
xchg
sbb
cmp
jge
mov
out
pop
mov
xchg
fcomp
out
xor
add
cmp
push
enter
loope
sub
lods
mov
xor
cwde
push
mov
fst
cdq
shr
and
dec
mov
mov
sub
cmc
mov
rcr
ins
and
sti
xor
jne
xor
inc
ret
sbb
and
sbb
scas
add
loop
fisubr
xor
sbb
or
aas
jo
ret
mov
into
jecxz
mov
scas
jmp
mov
out
pushf
push
pushf
out
mov
xchg
out
dec
pushf
mov
test
jl
fs
mov
sub
sar
fcom
jb
aam
dec
test
xor
push
call
idiv
adc
inc
call
mul
jmp
test
pop
inc
jbe
aad
push
dec
mov
push
xor
stos
adc
das
add
add
shr
or
sar
mov
neg
std
pop
pop
lock
or
(bad)
mov
inc
xchg
push
push
mov
sub
push
cld
inc
dec
div
xor
shl
leave
jg
movs
pop
imul
pop
std
cmp
jne
pop
mov
jp
fdivrp
xor
cmp
aam
sub
mov
(bad)
push
mov
enter
retf
repnz
jl
in
mov
fsubrp
adc
jl
push
out
mov
lods
pop
adc
jge
jecxz
adc
imul
xor
jo
push
mov
adc
jb
sub
popw
push
xchg
loopne
sub
jae
mov
cs
shl
(bad)
clc
mov
lock
fisubr
mov
jne
mov
jmp
jge
add
cmp
je
or
or
mov
jbe
mov
sbb
retf
cmp
sbb
call
mov
sub
mov
add
cmp
scas
cmps
adc
daa
sub
dec
and
adc
or
mov
xor
ret
dec
fsub
xor
push
mov
stos
cld
xchg
adc
(bad)
add
dec
adc
cmp
jl
repnz
inc
sti
mov
xor
push
inc
mov
fldenv
dec
mov
xlat
pop
inc
movs
je
sahf
and
cmc
adc
jne
loopne
push
stos
sbb
lods
retf
out
jo
adc
jmp
fisttp
out
cli
lods
add
scas
adc
loop
mov
sar
dec
cld
push
add
add
leave
mov
mov
mov
cmp
enter
(bad)
push
sbb
test
xor
jo
cli
adc
mov
mov
inc
mov
xor
or
enter
dec
add
repz
inc
mov
je
dec
jne
ss
jmp
push
push
sub
or
jecxz
(bad)
in
aaa
inc
ror
cs
jne
ret
stos
cmp
or
out
dec
ja
pop
out
stos
add
retf
dec
mov
jo
clc
jmp
pushf
fwait
mov
cs
mov
and
cmp
adc
adc
(bad)
out
out
or
sbb
add
pop
inc
loop
ret
push
mov
fild
push
dec
push
mov
(bad)
scas
and
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
out
in
jbe
sub
sbb
mov
or
sbb
push
call
push
xor
push
int
adc
dec
aas
mov
mov
mov
sub
pop
and
adc
pop
or
mov
sbb
pop
jmp
mov
or
and
hlt
dec
or
movzx
je
or
pop
xor
mov
push
in
mov
cmp
ror
push
push
cmp
mov
mov
inc
outs
xchg
ins
aas
cli
aam
cmp
dec
je
into
jne
sub
and
dec
psubusw
and
push
ins
sbb
mov
pop
pop
inc
xlat
push
cmp
icebp
sar
jne
je
cli
or
add
dec
(bad)
or
sub
cmps
push
je
add
mov
or
sub
push
adc
mov
or
out
in
adc
or
xor
les
add
pop
jnp
xor
jbe
lods
mov
xchg
enter
(bad)
mov
std
lea
mov
inc
mov
add
cmp
(bad)
and
xchg
call
test
idiv
or
gs
out
jbe
je
mov
jmp
inc
jmp
cmp
jge
mov
inc
mov
jmp
adc
jne
cmps
jmp
mov
jmp
pop
add
mov
fmul
fnsave
icebp
pop
jmp
out
jns
lock
add
(bad)
clc
add
or
jle
nop
add
push
scas
jnp
in
sub
xchg
or
pop
fcom
pop
les
sar
es
adc
aam
cmps
add
mov
repnz
jb
add
mov
pop
xlat
pop
in
fisub
inc
(bad)
pop
aam
jne
repnz
push
icebp
fdiv
xor
in
pop
dec
add
jp
sub
icebp
xor
pop
shr
jmp
lds
push
jmp
inc
jmp
or
sub
jmp
push
fwait
mov
inc
cmp
pusha
push
mov
push
push
xor
gs
loopne
das
imul
jmp
sbb
push
dec
pop
and
mov
inc
mov
adc
dec
js
push
gs
inc
push
or
dec
popa
bound
ins
sbb
mov
or
jge
nop
sbb
dec
outs
mov
fiadd
add
ds
fwait
lods
pop
or
ret
cmp
xor
ret
mov
nop
pop
rol
add
cmp
sub
hlt
and
shl
or
or
push
push
adc
sbb
cmp
sbb
inc
push
inc
xor
mov
jmp
cwde
fld
sub
rcl
or
clc
adc
pusha
ret
jmp
dec
or
xchg
gs
frndint
xchg
fld
mov
fnstsw
fwait
mov
test
je
fidiv
sbb
clc
fbstp
lea
mov
inc
sub
mov
shr
and
push
push
xor
sbb
jb
cmps
ret
or
mov
jmp
ins
pop
jge
cli
or
cmp
jb
push
in
out
fcmovnb
inc
or
dec
js
dec
and
mov
pusha
xor
jmp
mov
or
inc
call
inc
mov
mov
ret
xor
or
fs
adc
dec
dec
add
ror
je
push
neg
cmp
sbb
or
or
mov
das
adc
jl
mov
cmps
sbb
cld
mov
or
sbb
push
mov
xchg
inc
lods
fild
cli
mov
or
inc
or
mov
cmps
xor
setnp
leave
inc
sbb
adc
sbb
sub
adc
push
dec
pop
dec
jne
cmp
aas
hlt
mov
and
inc
jmp
sbb
into
cmp
jbe
push
jo
mov
mov
(bad)
mov
mov
pop
xlat
push
or
mov
xchg
icebp
pop
xor
jge
fclex
fldcw
dec
dec
int
js
cmp
and
push
adc
in
add
sti
sub
mov
ja
scas
aaa
mov
mov
and
sahf
push
mov
mov
mov
call
mov
fadd
mov
out
add
sar
cmp
add
loopne
inc
shl
jg
fistp
jmp
fstp
fstsw
test
mov
push
or
add
fdivr
sti
adc
jo
retf
and
sub
push
sub
jae
fimul
repz
add
jmp
inc
inc
push
push
jecxz
push
stc
mov
sbb
adc
imul
pop
cmp
adc
jb
dec
add
adc
or
or
mov
push
sub
addr16
ror
sbb
or
push
or
sbb
add
aam
enter
xchg
xor
loopne
fbld
push
add
(bad)
addr16
or
xchg
push
sahf
and
xchg
pushf
aad
outs
or
xor
add
adc
xchg
clc
(bad)
jecxz
fneni(8087
pusha
jle
mov
rcl
add
jle
rcl
ins
mov
xchg
adc
xchg
jle
xor
lods
into
mov
push
mov
push
sbb
adc
sahf
sbb
add
out
rcl
bound
outs
jge
popa
push
inc
and
sahf
and
xor
adc
fld
out
ret
sar
imul
call
test
and
aad
je
fcmovu
sub
call
ja
and
xor
dec
push
xchg
outs
jmp
or
jae
fstp
inc
cmp
jae
arpl
jb
push
nop
fcmovnu
pop
popf
mov
inc
push
leave
(bad)
jle
pop
sbb
and
sbb
add
xchg
and
gs
sub
or
fnstsw
add
dec
adc
xor
call
adc
fnstsw
outs
sub
fistp
fwait
in
push
imul
div
or
shl
xchg
mov
mov
fdivp
aaa
call
test
jl
cmp
or
adc
dec
jl
mov
add
sbb
push
or
ins
push
xor
push
xor
jp
loopne
sbb
xchg
das
loope
push
or
mov
movs
call
and
(bad)
movs
push
and
sbb
adc
inc
in
mov
or
ror
nop
push
scas
and
add
shl
dec
imul
rol
add
add
adc
mov
ret
lock
iret
divps
xor
pop
mov
inc
rcl
cwde
sub
iret
xchg
pusha
sbb
fcmovne
imul
jg
push
xchg
inc
scas
mov
or
push
or
cmp
push
cwde
jl
lock
or
cmp
mov
rol
add
shl
cmp
rcl
rcl
ret
(bad)
or
pop
xchg
add
mov
pop
fstp
fwait
mov
push
pop
add
pop
pop
sbb
cmc
push
push
fisttp
aad
or
movs
hlt
adc
sub
and
fdiv
push
mov
cld
push
push
sti
stos
jno
push
icebp
and
(bad)
mov
jge
imul
(bad)
push
cmp
dec
pusha
fidivr
and
rcr
xor
and
mov
and
fldenv
mov
clc
int3
div
retf
mov
outs
ret
mov
int3
or
mov
or
push
mov
push
retf
push
sub
adc
jg
add
lea
adc
xor
(bad)
sub
(bad)
pop
add
and
jb
dec
jb
mov
ins
je
cmp
ja
adc
call
or
jle
mov
pop
dec
inc
jne
sub
sti
ucomiss
dec
mov
aas
cdq
idiv
imul
push
hlt
das
xchg
cs
ret
cli
add
repnz
sar
in
jbe
ds
add
pusha
ret
or
mov
inc
std
std
int3
dec
or
inc
ds
adc
rcl
lock
icebp
rol
and
pop
pop
xchg
call
or
mov
loopne
or
cs
dec
in
test
jg
mov
inc
mov
adc
invd
xchg
add
sbb
sahf
sub
and
cmps
inc
mov
dec
mov
int
pop
cmc
stc
mov
add
add
add
jge
shl
lock
lods
mov
mov
sub
dec
mov
cmp
imul
push
push
mov
mov
pop
mov
xchg
in
ja
sbb
add
add
pusha
xchg
sub
(bad)
push
xor
adc
es
cmps
inc
icebp
popa
scas
inc
jbe
dec
cmp
mov
popf
ins
(bad)
dec
cmp
jb
adc
sbb
jmp
cli
sbb
clc
iret
mov
shl
adc
adc
adc
or
inc
aam
cmp
je
pop
cs
add
sub
sub
pop
sub
clc
cmp
xor
ret
push
and
jp
mov
repz
cmp
or
mov
push
scas
push
pop
adc
js
ficomp
nop
pop
sbb
inc
test
clc
mov
(bad)
or
fcom
sbb
and
push
xchg
movs
call
add
add
xor
outs
add
dec
adc
rcpps
je
xor
out
gs
cs
je
ins
jae
inc
mov
inc
aas
ds
mov
scas
mov
sub
push
pop
cmp
jge
ret
in
std
add
jmp
test
add
or
fs
stos
add
xchg
test
mov
xor
jge
lahf
clc
xchg
lea
adc
mov
pop
xchg
add
cmps
push
retf
inc
jo
ror
mov
mov
fstp
add
lock
cmp
test
sub
cmp
push
lods
sub
sub
rcr
dec
movs
add
js
jbe
mov
mov
or
out
shl
add
fwait
mov
into
js
aam
sbb
or
xchg
(bad)
retf
push
push
pop
mov
or
int3
mov
aaa
mov
push
out
js
ret
add
scas
clc
mov
add
in
lock
pusha
pusha
ins
aaa
pop
jecxz
jne
sub
push
jo
add
cmc
out
lea
lea
cmps
cmps
std
ins
and
cwde
adc
inc
jecxz
outs
loop
xor
pusha
inc
outs
push
imul
cdq
in
cmp
adc
mov
mov
test
jl
call
lea
in
mov
push
push
aas
push
jo
adc
inc
jge
and
clc
adc
pop
cs
adc
and
add
pop
mov
xchg
mov
mov
push
hlt
pushf
adc
je
mov
mov
dec
jne
xchg
xor
or
and
mov
sti
pop
sti
ins
nop
mov
sbb
xchg
xor
cmp
mov
mov
(bad)
ss
mov
cmc
pop
js
enter
inc
pop
add
fsubrp
and
inc
test
mov
adc
pop
pop
dec
jge
pop
mov
rol
xor
out
lock
or
psadbw
add
add
push
fdiv
adc
not
imul
or
inc
cmc
mov
pop
hlt
and
adc
mov
sbb
loop
je
or
pop
popa
lds
jle
cmp
jne
mov
ret
and
mov
xor
ret
out
cmc
ret
push
cwde
mov
add
sbb
das
pop
push
ret
rol
div
add
or
rol
test
mov
pop
ret
add
xor
inc
xor
test
inc
push
cs
js
fbld
jmp
add
jb
push
(bad)
fbstp
mov
add
push
xlat
add
inc
int3
ins
jo
or
jns
enter
cmp
sbb
mov
sub
and
sbb
mov
xchg
fisub
loopne
jne
mov
xchg
in
loopne
inc
fidiv
inc
lock
dec
into
movzx
inc
mov
push
or
outs
jnp
or
or
or
xchg
jp
pop
mov
add
add
jge
sub
js
mov
adc
push
add
outs
loopne
inc
into
inc
out
test
mov
push
movs
xor
int
inc
lods
loopne
jbe
mov
sub
pop
or
in
push
mov
add
call
dec
ins
icebp
mov
cmp
pop
adc
inc
mov
or
jbe
push
lea
inc
push
scas
xor
xchg
pop
js
ficom
rcr
dec
adc
jb
sbb
jmp
push
jae
sub
mov
lock
mov
sbb
loope
adc
loopne
sub
pop
dec
push
xor
xchg
dec
in
or
push
js
xor
sub
ins
push
jno
jnp
sbb
pop
pushf
mov
loopne
sub
inc
xor
dec
mov
push
ficomp
xor
je
pop
(bad)
ficomp
enter
fisub
or
je
test
dec
jg
je
in
inc
mov
xor
je
or
push
jmp
or
xor
fidiv
sub
push
cmp
dec
mov
loopne
mov
pop
cmp
fiadd
out
sub
adc
int3
inc
mov
add
push
aam
jnp
mov
xor
mov
add
lods
aas
jbe
lock
dec
call
mov
shl
je
(bad)
fidiv
in
out
stos
pop
fmul
jmp
sbb
ins
dec
loope
lods
jle
xor
mov
xchg
imul
or
les
mov
gs
ret
jnp
xchg
add
(bad)
out
pop
xchg
xchg
repnz
enter
adc
add
hlt
add
retf
push
or
js
adc
std
xchg
mov
fisubr
dec
xor
adc
out
stos
mov
jns
sbb
lds
xor
(bad)
in
xchg
xchg
mov
add
je
cmp
sub
lahf
or
(bad)
dec
aad
xchg
lahf
lahf
push
loop
xor
xchg
lea
test
mov
xchg
ret
mov
arpl
cwde
add
imul
jl
xor
mov
js
adc
push
pop
sbb
jno
into
ss
sub
push
or
xchg
test
add
dec
addr16
sub
or
xor
jmp
cli
mov
scas
scas
bswap
fmul
dec
adc
or
add
jb
and
mov
cmp
sub
fld
mov
push
in
sub
aas
mov
pop
sbb
adc
mov
scas
jg
xor
not
neg
jo
adc
test
mov
inc
(bad)
fdiv
inc
dec
xchg
(bad)
mov
add
xchg
gs
fld
push
or
adc
and
adc
shl
add
add
push
cwde
mov
fcomp
fisttp
and
pop
cld
adc
mov
inc
pop
dec
xlat
or
test
mov
call
mov
sbb
cld
mov
xlat
bound
inc
dec
mov
lods
cmp
shl
into
popf
xchg
push
and
inc
inc
fnstcw
or
popa
cld
retf
enter
or
sbb
xor
inc
xchg
test
rol
lea
jl
mov
loop
mov
jmp
nop
xchg
daa
pushf
xor
shr
sbb
outs
test
xchg
ss
fdivr
pop
xor
fabs
sub
add
mov
and
mov
adc
cmp
mov
inc
add
dec
dec
push
leave
inc
stc
aam
xchg
pop
retf
add
loopne
adc
das
ret
clc
jo
and
retf
add
retf
xor
pop
jg
es
jmp
inc
pop
mov
fsubr
jmp
pop
(bad)
and
pop
mov
out
dec
clc
mov
frstor
xor
mov
add
je
jp
idiv
mov
cs
mov
lea
ss
(bad)
xchg
jmp
data16
mov
xor
mov
add
loop
jae
ror
hlt
add
repnz
jle
jl
test
sub
mov
(bad)
xor
xor
shr
pop
jb
shl
repnz
ins
add
inc
dec
fistp
push
bound
xchg
sub
push
push
dec
clc
mov
add
add
loopne
xor
add
mov
outs
js
mov
and
cmps
push
fwait
inc
and
scas
(bad)
cs
or
push
int
add
(bad)
jne
inc
scas
je
lds
ss
pcmpgtb
jle
ins
or
jo
push
dec
je
(bad)
fimul
sbb
or
or
push
jmp
mov
sub
adc
push
add
jo
jle
ret
mov
dec
jmp
mov
mov
add
add
test
adc
cwde
mov
and
test
ret
xchg
add
inc
push
hlt
ret
or
das
push
mov
cmp
adc
cmp
jg
jae
mov
mov
ret
add
ror
bound
es
add
js
test
adc
pop
cld
jmp
dec
pop
cli
pop
fs
ret
pop
sbb
int3
cmps
mov
push
sub
cli
shr
push
and
sub
fadd
push
or
jmp
inc
and
mov
lock
push
push
pop
push
fucom
addr16
test
lock
jb
mov
dec
jo
mul
popf
ret
mov
lea
mov
adc
push
rol
mov
mov
mov
or
shl
or
mov
ins
add
inc
jl
xor
jne
push
jbe
fisttp
push
aam
(bad)
mov
shr
sbb
sub
je
sbb
test
inc
ficomp
jbe
enter
pop
fucom
clc
shl
fidiv
jb
ins
ja
mov
(bad)
sahf
cmp
push
jl
in
fnstsw
clc
call
pushf
jae
std
loopne
cmp
sub
dec
xor
iret
sar
sbb
(bad)
idiv
or
cmp
mov
jge
add
inc
add
mov
sub
aas
pop
data16
retf
aaa
add
fsubrp
mov
jle
and
fs
jne
mov
add
add
or
and
test
adc
test
add
cmp
push
cmps
fsub
dec
es
inc
and
mov
fucomip
ret
cs
inc
inc
mov
xchg
leave
cmp
sbb
imul
(bad)
and
int
mov
rol
inc
cs
jmp
xchg
cmp
rcr
cs
je
sub
dec
dec
dec
test
jo
int3
cs
ret
ss
dec
les
jmp
or
push
or
push
cmp
std
xor
add
mov
mov
mul
aaa
add
aaa
sahf
inc
xchg
and
rcl
sti
push
cs
pusha
iret
dec
dec
adc
arpl
adc
mov
sbb
(bad)
jmp
push
sbb
in
out
add
(bad)
jl
dec
push
test
clc
pop
popf
cmp
repnz
or
hlt
repnz
cdq
xor
dec
enter
xor
imul
and
pop
inc
hlt
iret
adc
adc
or
or
adc
jnp
push
sub
inc
and
inc
push
jnp
addr16
pop
mov
ds
ja
pop
or
sub
sbb
mov
cld
clc
push
jp
push
hlt
neg
xor
add
mov
sti
out
inc
push
test
sub
dec
iret
sbb
xchg
inc
inc
xchg
enter
cmp
adc
mov
imul
(bad)
sub
push
jb
jp
xchg
pop
cmps
lea
sbb
pushf
mov
dec
test
add
xchg
or
mov
jg
jne
or
jb
mov
mov
and
cmp
inc
mov
adc
push
sub
das
adc
sub
dec
and
stos
cmp
add
lea
or
add
outs
mov
dec
dec
push
or
fcmovnb
outs
xchg
and
inc
enter
jb
or
cmp
dec
jge
call
sbb
dec
imul
sahf
sbb
push
ds
mov
sahf
dec
or
dec
sbb
test
adc
(bad)
stos
sti
xor
in
ja
test
jne
jmp
fild
dec
dec
mov
test
je
scas
mov
test
ins
and
cmp
adc
mov
sbb
je
cmp
xchg
push
or
mov
sbb
or
adc
xchg
fwait
dec
adc
lahf
inc
jmp
out
and
scas
adc
ja
ffree
or
and
jne
mov
mov
mov
adc
int
or
push
mov
push
sub
inc
outs
stos
lahf
sbb
ret
shr
pusha
add
jnp
or
push
repnz
add
pop
or
pop
push
add
cmp
rep
daa
lock
inc
sub
push
jmp
dec
clc
fsubr
push
sub
sbb
sub
inc
and
jle
jmp
je
les
es
cmp
cmc
pushf
push
out
mov
call
bound
addr16
jno
sub
adc
and
imul
xchg
jnp
push
enter
sub
adc
push
mov
and
pop
push
adc
push
push
loopne
add
add
test
mov
out
out
adc
push
daa
dec
jne
(bad)
inc
add
push
mov
imul
hlt
pushf
inc
lea
arpl
test
jb
pushf
cdq
data16
adc
dec
pushf
cmp
sub
push
scas
adc
and
add
or
lods
jge
xor
(bad)
sar
ja
add
add
pushf
mov
call
dec
aam
call
cmp
mov
pusha
mov
mov
xor
test
fidiv
jmp
int
(bad)
cmp
push
push
cmp
pop
aaa
push
jl
add
cs
loopne
inc
push
call
push
pop
fmul
pop
push
cmps
add
mov
fmul
dec
or
inc
imul
add
adc
sub
sar
or
mov
or
movs
sub
stos
enter
aas
xor
add
inc
cmp
bound
daa
mov
or
nop
mov
daa
loopne
jo
jg
sbb
es
call
enter
and
inc
enter
nop
pmuludq
sbb
test
cld
push
mov
neg
lea
xchg
dec
xor
sbb
int
shl
jne
data16
adc
xor
mov
cmp
dec
cmp
mov
mov
dec
push
xor
pop
jo
jp
clc
ins
push
fs
int3
or
xor
dec
pusha
mov
inc
push
or
pop
popa
inc
daa
and
jo
loopne
xor
addr16
and
add
jg
sub
das
sub
das
push
pop
bound
adc
pop
daa
lock
imul
add
xchg
fldpi
dec
test
sar
push
push
cmp
jl
jmp
add
push
cmps
dec
lods
cmp
hlt
shl
mov
ins
jmp
jo
clc
mov
xor
adc
les
shl
pop
push
ja
in
retf
movs
xor
nop
inc
pop
sbb
or
popa
mov
add
adc
lock
lock
ins
add
push
jne
add
jne
sbb
in
inc
or
add
mov
pushf
push
cmp
nop
add
mov
add
add
scas
and
cli
push
push
push
into
dec
lea
js
push
jb
add
call
inc
lock
cmp
sub
xor
add
cmp
out
mov
or
fst
adc
jg
das
fld
push
sub
xor
or
mov
push
sbb
loope
add
add
sub
inc
xchg
push
cmp
imul
mov
sbb
fidivr
(bad)
jg
pop
dec
inc
adc
cmp
je
jb
popa
ins
inc
jb
adc
push
mov
arpl
fs
sbb
mov
div
mov
(bad)
rcpps
push
ins
cs
je
ins
jae
mov
nop
mov
push
lea
call
mov
sbb
or
outs
jne
sub
(bad)
add
jg
push
pop
inc
jbe
xbegin
pop
cli
ja
mov
popa
test
add
fdivr
test
jle
add
xor
push
mov
jo
ret
push
add
xor
or
loopne
dec
lea
dec
pop
xor
cmp
adc
mov
inc
mov
xor
(bad)
push
or
inc
dec
mov
pop
sub
mov
pusha
jo
popf
dec
pop
sbb
pop
add
je
inc
ficomp
fdivr
sub
xchg
push
or
mov
pusha
cmc
not
lea
dec
jo
shl
add
sbb
sub
pop
cmp
xchg
(bad)
mov
xor
fdivr
or
inc
lock
inc
leave
bound
jo
in
loopne
add
or
or
jno
jmp
xor
js
xor
movs
xchg
movs
sub
pop
mov
adc
cli
mov
mov
out
jae
push
push
jo
sub
out
mov
call
add
mov
(bad)
dec
xor
jb
test
clc
outs
xor
aaa
adc
push
mov
sbb
push
repnz
pop
jae
mov
push
pmaxub
loopne
mov
(bad)
jle
or
call
sar
mov
loop
data16
test
mov
push
(bad)
sub
pop
cmp
cld
jnp
add
arpl
pop
adc
dec
cmp
ret
sub
sbb
(bad)
xor
enter
push
daa
push
cmp
mov
inc
mov
ja
xchg
mov
cmp
or
add
not
mov
mov
pushf
or
fnstenv
arpl
push
test
test
jo
mov
sahf
into
mov
mov
rcr
sar
call
xor
out
jle
add
xchg
cld
cmp
and
inc
enter
pushf
adc
and
cmp
cmp
xor
les
add
test
mov
nop
push
mov
jmp
mov
daa
jne
xor
dec
mov
or
cmp
jne
add
mov
add
and
sahf
mov
add
jo
jge
mov
cmp
retf
sbb
push
mov
shr
push
pop
adc
shl
push
mov
sbb
out
cdq
jns
add
jge
je
sub
fdiv
sub
jmp
arpl
mov
aam
fld
inc
je
or
je
nop
icebp
jo
xor
xchg
push
mov
jmp
sub
adc
mov
cmp
add
or
(bad)
stc
(bad)
cmp
jg
pop
ins
fs
push
sar
or
jne
sar
sar
dec
or
loope
daa
mov
jp
add
into
push
fwait
(bad)
dec
mov
pop
jbe
dec
jo
adc
cld
and
push
jns
rcl
add
sub
cmps
std
ja
push
add
jmp
lods
inc
push
cmp
and
andps
cmp
cmps
xchg
ret
cmovo
push
dec
or
jno
push
test
mov
push
pop
(bad)
jne
push
xchg
sbb
mov
and
push
inc
xor
rol
jg
gs
test
cmp
cmp
out
add
xor
mov
das
daa
sub
mov
adc
add
scas
aaa
xchg
jb
mov
dec
and
inc
mov
cmp
dec
in
cmp
in
mov
dec
enter
sub
cmp
cs
add
in
mov
mov
pop
je
xor
and
je
gs
jbe
loope
cmps
add
dec
or
clc
ficomp
loope
or
scas
xlat
sub
jo
xlat
add
retf
cmp
and
jge
xor
test
cmp
(bad)
pop
push
div
fcomp
mov
push
push
and
int3
dec
inc
repz
pop
mov
sub
and
mov
inc
enter
sbb
clc
jmp
sub
gs
dec
mov
shr
clc
xor
test
out
cld
out
loopne
lods
push
sub
mov
ror
mov
xchg
(bad)
push
mov
fcomi
and
js
imul
aam
mov
cs
fs
jbe
sub
inc
mov
or
inc
add
pop
stos
movs
xor
add
xchg
pop
lods
pushw
test
test
adc
es
frstor
out
mov
out
imul
mov
add
cmp
mov
xchg
push
adc
fs
lea
dec
mov
xor
sbb
sbb
loopne
fs
add
adc
xor
jecxz
add
push
adc
cmp
cmp
dec
mov
push
mov
sbb
jb
loope
xor
test
test
pop
popa
or
and
hlt
and
pop
dec
jo
inc
aas
cmp
or
mov
cmp
mov
(bad)
shl
or
dec
xor
push
pop
gs
inc
seta
jl
xchg
cwde
push
data16
int3
test
push
sub
test
jmp
mov
push
mov
jle
hlt
ins
sub
or
fsub
cmp
xor
mov
fcom
out
or
xor
or
fnsave
mov
adc
cmp
dec
out
push
(bad)
into
test
lods
add
or
pusha
push
sub
or
xor
aaa
cli
and
mov
ins
jnp
and
in
sbb
inc
jg
push
test
je
push
and
adc
and
jp
inc
mov
sysexit
int3
fs
sahf
sbb
test
lods
push
jae
xor
inc
nop
imul
ins
xor
adc
or
hlt
les
fcom
mov
(bad)
push
and
es
fimul
ds
jo
cmc
lea
push
les
adc
in
movs
add
xlat
sub
inc
adc
sbb
loopne
mov
xchg
loopne
outs
add
outs
sbb
aaa
lock
outs
nop
push
jl
cmp
loopne
or
adc
adc
outs
fst
cld
and
jle
adc
xchg
inc
nop
xchg
ret
or
mov
ins
es
cmp
ja
inc
inc
mov
xchg
fild
cdq
push
fs
test
jle
mov
mov
mov
xor
sbb
add
cmp
imul
rcr
arpl
mov
inc
mov
cmps
mov
call
push
lods
fild
cmp
sbb
ss
or
popf
jo
mov
fadd
mov
jo
push
and
jne
out
hlt
call
add
js
mov
outs
test
fdiv
fld
pop
sub
(bad)
(bad)
jmp
inc
cmp
jg
cmp
jne
sbb
or
xchg
dec
mov
mov
mov
push
xchg
mov
test
inc
fmul
pop
pusha
mov
pop
pop
out
sub
sar
sar
retf
push
adc
jmp
and
xchg
ins
jmp
push
call
or
int
dec
shr
mov
call
or
mov
nop
push
mul
sub
mov
ret
int3
cmp
adc
iret
dec
or
cdq
neg
mov
add
push
popf
fcmove
xchg
and
inc
ss
mov
call
mov
or
jge
fwait
push
cmp
call
lahf
mov
dec
in
xor
std
movs
out
jmp
or
sbb
dec
inc
loop
mov
(bad)
movs
test
sbb
dec
cld
retf
push
pop
test
fisttp
mov
sbb
out
test
std
fild
cmp
sub
pop
cmp
ficom
adc
retf
xchg
inc
(bad)
sbb
xor
loopne
je
jmp
push
stc
out
inc
cmp
xor
adc
jmp
int
outs
(bad)
cmp
mov
ret
stos
add
xor
shl
pop
or
or
xor
push
push
sub
test
adc
xchg
(bad)
sub
push
push
sub
or
mov
or
mov
lods
cmp
jno
loopne
dec
mov
inc
adc
add
pop
jbe
fwait
cmp
pop
je
jmp
adc
rol
sub
test
mov
or
sub
pop
sbb
mov
test
or
and
push
pusha
jne
push
xor
sar
(bad)
out
je
mov
mov
or
addr16
sub
adc
jl
push
xlat
jge
add
xchg
push
in
mov
enter
sbb
lods
xchg
add
cmp
mov
pop
xor
lods
pop
inc
add
nop
fwait
jge
repnz
mov
in
movs
ret
push
jae
inc
mov
jo
ret
enter
jns
bound
and
(bad)
jne
adc
xchg
jne
xor
out
pop
iret
lds
add
lock
sbb
and
fnsave
lods
jecxz
pop
mov
std
sub
jb
je
dec
push
or
loope
jns
rcl
xchg
mov
shr
add
mov
pop
inc
cdq
out
add
pop
nop
and
pop
push
inc
clc
mov
push
push
inc
sar
enter
xor
shl
cmp
loopne
inc
and
jns
xchg
xor
jbe
add
pusha
jo
push
add
pop
retf
dec
int3
mov
xchg
jae
imul
mov
jmp
mov
add
mov
fldcw
mov
stos
pushf
mov
int3
add
fcom
sbb
adc
jmp
adc
int3
int3
rol
cmp
xchg
adc
in
mov
gs
adc
xor
sbb
mov
pop
pusha
lods
sbb
cmp
out
mov
mov
inc
sbb
adc
paddsb
test
aaa
inc
and
xchg
sbb
and
shl
fimul
sbb
sbb
dec
adc
xor
iret
aas
adc
adc
pushf
push
pushf
mov
cs
add
out
not
ret
test
lock
cmp
jne
inc
in
fild
adc
mov
sbb
shl
adc
rcl
into
push
shr
inc
aam
hlt
add
push
or
cmp
jl
popa
cli
lods
retf
loop
cmp
call
add
pop
add
dec
jne
test
jne
cmp
push
(bad)
mov
mov
jne
mov
inc
cld
ret
jl
xchg
loopne
jne
imul
inc
mov
push
jmp
adc
sti
pop
ins
mov
fs
jmp
loopne
test
fdivr
enter
mov
push
xor
adc
cdq
imul
mov
ret
test
push
retf
fld
lea
inc
sbb
inc
push
add
mov
cmp
add
jo
(bad)
test
xor
push
push
aaa
mov
push
mov
cmp
les
mov
test
pop
xchg
cmp
das
push
jmp
xor
repnz
inc
inc
mov
sti
iret
mov
sub
fsub
fld
test
mov
xor
add
fisttp
add
fs
in
jne
or
jmp
jmp
xlat
(bad)
in
pop
xchg
adc
pusha
sbb
dec
mov
push
add
daa
aas
ret
mov
or
rcr
fcomp
bound
push
push
cmp
push
retf
sbb
jb
mov
ror
or
test
mov
jmp
cwde
adc
jnp
test
out
add
jnp
hlt
push
or
mov
xchg
mov
sbb
dec
mov
mov
xlat
es
xchg
ret
xor
fdiv
fiadd
ins
jnp
sbb
jmp
ja
push
or
or
dec
xchg
mov
repz
cwde
mov
jnp
(bad)
or
sar
push
mov
sar
sti
leave
push
jne
inc
jbe
or
mov
mov
push
nop
sbb
in
and
inc
cmp
jae
jp
imul
sti
cmp
add
cmps
pop
imul
retf
push
push
int3
cli
in
dec
dec
pop
push
jb
or
clc
shl
nop
shr
mov
dec
test
mov
add
push
aas
mov
sti
mov
adc
or
lahf
inc
mov
mov
frstor
pcmpgtd
adc
jecxz
add
ret
mov
imul
fwait
jo
sar
jp
jo
sbb
sub
xor
(bad)
ror
scas
in
imul
push
sbb
or
xor
imul
imul
xor
xor
ins
inc
or
inc
or
sar
push
es
cmp
aaa
js
add
(bad)
pop
add
rol
into
test
data16
jg
jmp
setge
jmp
leave
test
xor
test
push
sar
stc
add
cmp
and
or
in
or
rcr
jle
jo
add
sbb
sahf
cli
or
mov
sbb
retf
and
jle
mov
rcr
daa
std
add
add
in
pop
xchg
mov
lock
scas
out
mov
sti
adc
sub
cmp
setl
test
cmp
cmp
nop
and
jmp
xor
add
add
jbe
ins
cwde
fisubr
mov
movs
bound
mov
rol
lods
sbb
jle
mov
out
lock
inc
cs
inc
cmp
add
cmp
jge
dec
in
jge
mov
add
iret
or
sbb
jno
jo
push
or
dec
ss
cmp
shl
mov
sbb
fild
and
pop
push
lea
add
dec
sti
dec
cmp
and
jle
shr
ret
jg
cmp
loopne
in
add
sub
int3
xor
ret
bound
cmp
retf
jmp
jo
pop
pop
adc
and
adc
dec
mov
sbb
or
rcl
pop
adc
xor
shl
xchg
xchg
sar
or
outs
and
(bad)
sbb
add
jb
orps
lods
sbb
ret
mov
adc
or
leave
or
add
ret
lods
je
inc
mov
adc
mov
adc
test
rcl
push
rcr
add
add
mov
hlt
js
mov
xchg
xchg
sub
or
rcr
cld
xchg
fist
stos
sti
imul
pop
sete
into
cmp
xor
sub
sub
push
test
jbe
inc
lods
mov
ss
sbb
add
cmp
jg
clc
mov
ret
adc
imul
adc
add
in
pop
sbb
cmp
xchg
nop
ret
fucom
xchg
sbb
iret
nop
icebp
xor
mov
daa
jl
retf
call
enter
jo
mov
jg
mov
pusha
pop
add
fadd
ds
loope
jnp
cli
mov
repz
xor
mov
xchg
(bad)
(bad)
sbb
or
or
sub
sar
(bad)
rol
inc
push
sub
sbb
cmp
sbb
add
pusha
idiv
je
cmp
adc
or
(bad)
in
push
arpl
mov
mov
jmp
mov
aaa
pop
sub
push
fistp
sbb
inc
call
pop
mov
std
mov
dec
jne
add
cmp
jge
pop
or
lea
ret
lahf
xlat
(bad)
scas
(bad)
imul
lods
xchg
mov
jo
mov
add
test
div
pushf
mov
inc
scas
cwde
mov
cmps
or
mov
jnp
and
push
ror
shr
mov
push
adc
jmp
mov
mov
mov
mov
xor
adc
pop
mov
push
cmp
stc
push
xchg
cmp
sbb
xchg
adc
xor
mov
js
mov
or
add
idiv
test
mov
mov
adc
out
mov
loopne
(bad)
mov
cld
dec
sbb
add
xchg
sar
out
or
cmc
or
je
nop
jnp
adc
push
inc
in
adc
lods
jo
push
stos
shl
lock
jb
adc
adc
aad
pop
loopne
daa
mov
lea
test
out
and
sbb
addr16
test
hlt
add
jge
push
(bad)
xor
pop
cld
lsl
add
mov
or
mov
push
loopne
sub
in
jecxz
clc
jb
inc
fcom
or
adc
ret
cmp
sar
push
scas
test
or
jecxz
(bad)
ficomp
xchg
push
call
test
and
xor
jne
push
sbb
jl
inc
repz
test
jb
aas
fmul
ret
arpl
add
or
inc
in
jge
add
ja
xchg
and
dec
and
adc
pop
lods
(bad)
add
jge
jl
lds
dec
cld
xor
and
imul
or
hlt
jnp
xor
pop
add
pop
or
(bad)
jg
push
push
push
outs
imul
je
jns
es
call
push
push
push
aaa
sbb
mov
inc
add
add
gs
shl
int
pop
lahf
push
push
jb
jbe
inc
fmul
idiv
xor
or
dec
outs
fs
gs
adc
lock
sub
mov
popa
ins
add
out
dec
fsub
or
jae
ins
ins
outs
ja
fs
ror
sub
push
inc
je
pop
es
push
iret
xor
mov
dec
outs
data16
pop
pushf
push
sub
adc
out
adc
push
popa
ins
imul
sti
int
or
jns
adc
adc
push
and
es
ins
cs
ds
push
test
out
push
cmp
add
fs
push
lahf
add
popf
(bad)
jmp
or
inc
rol
mov
les
inc
sbb
hlt
xor
add
add
mov
fisubr
fisttp
push
jl
inc
ss
mov
add
retf
mov
mov
push
xor
inc
dec
jne
mov
xchg
dec
push
dec
xchg
xchg
ss
add
or
mov
fdivr
(bad)
push
rcl
add
xor
sti
rcl
or
or
jg
or
xor
inc
jmp
pop
pop
pop
ret
pop
push
fidiv
(bad)
cli
dec
iret
sbb
stos
or
cwde
adc
ror
jl
push
mov
inc
(bad)
pop
mov
imul
mov
test
mov
repz
mov
fadd
inc
cmp
retf
es
fild
cmp
or
sub
jmp
adc
into
xchg
inc
inc
test
lea
aam
dec
in
jl
inc
xor
lea
inc
cmp
jo
mov
aaa
jl
add
xor
pop
sub
dec
sub
inc
mov
je
aas
push
je
mov
ret
xor
jge
in
push
or
add
jo
cli
cmp
jne
outs
call
xor
mov
jle
or
and
add
dec
jne
or
retf
push
test
sbb
adc
push
adc
lock
sbb
and
pop
or
lahf
ror
lahf
and
mov
xchg
dec
or
je
xchg
shrd
in
add
mov
xchg
scas
mov
inc
outs
inc
lods
mov
pop
sbb
enter
pop
mov
inc
mov
lods
adc
jne
adc
xor
sbb
mov
pop
in
mov
int
dec
in
in
and
aam
cmp
jbe
mov
pop
mov
mov
call
sbb
xor
jecxz
add
add
mov
mov
push
xchg
ret
std
mov
push
scas
jns
loopne
cli
clc
push
addr16
int
ret
cld
cmp
adc
icebp
and
add
push
or
and
int3
add
inc
adc
add
into
sti
pop
inc
sub
add
jae
inc
push
add
imul
mov
inc
popa
add
inc
add
push
dec
push
lods
(bad)
iret
daa
shr
mov
call
jno
and
cld
or
adc
inc
fwait
stos
xor
int
icebp
inc
cmp
jne
movzx
mov
loop
push
addr16
or
adc
xor
adc
push
jno
(bad)
lods
repz
xor
cmp
sub
push
icebp
inc
jmp
aas
out
outs
lods
lahf
xor
js
outs
push
hlt
jne
mov
xchg
add
xlat
test
cmp
jne
sbb
dec
jns
adc
jo
loopne
mov
cmp
inc
or
sub
ds
mov
shl
pop
cs
inc
test
adc
mov
bound
or
or
repz
out
fadd
(bad)
rcr
and
rol
sbb
jmp
fstp
xchg
sbb
add
fcmovnbe
mov
das
leave
inc
cmp
mov
adc
sbb
pop
pop
nop
repnz
mov
test
sub
add
nop
push
loope
add
jbe
cmp
adc
pop
pusha
inc
mov
imul
xor
sti
cmovo
in
stos
in
sub
jae
call
mov
aas
pop
retf
pop
sub
ror
retf
mov
xchg
adc
inc
jnp
jge
test
adc
push
adc
add
sub
js
or
xchg
jmp
pop
cmps
inc
or
rol
into
popa
shr
sbb
or
mov
pusha
out
push
pusha
es
callw
xchg
xor
xor
fistp
or
mov
stos
sbb
iret
sub
dec
jl
inc
xchg
pop
dec
shl
xor
inc
pushf
sub
sbb
jnp
mov
iret
cmc
ret
std
js
or
adc
xor
es
jnp
ror
lea
mov
push
mov
leave
inc
add
cmp
icebp
push
pop
lock
and
inc
pop
jne
pop
jp
jmp
lock
lock
aam
outs
mov
cs
dec
xor
mov
xchg
or
add
add
inc
movs
dec
jmp
inc
dec
std
jns
rol
dec
lock
lods
shl
or
jmp
test
loope
inc
xchg
adc
clc
sub
adc
adc
cmp
mov
inc
mov
test
jl
push
push
push
and
sub
arpl
das
mov
dec
add
cmp
mov
lea
or
scas
adc
push
pusha
sbb
cmp
pop
cmp
xchg
data16
cmp
push
xor
rcr
add
das
add
sub
and
scas
pop
xchg
(bad)
leave
pop
dec
leave
rcr
ror
xor
je
cmp
mov
jp
mov
add
outs
cmp
mov
mov
pop
inc
mov
fdivr
mov
les
sbb
popa
mov
call
add
sub
fdiv
xchg
xchg
mov
mov
pop
or
xchg
xor
push
cmps
mov
test
jb
or
add
pusha
push
pushf
mov
mov
dec
jge
icebp
test
fs
lea
clc
iret
inc
sar
lea
fwait
mov
cmp
add
jge
int
xor
inc
test
xor
dec
add
shr
sub
out
inc
(bad)
push
sub
inc
fs
in
ret
jnp
mov
inc
ret
inc
ret
sbb
pusha
cwde
add
aam
pop
mov
aaa
pop
inc
jl
(bad)
mov
xor
or
push
les
mov
in
aam
inc
xchg
ficom
sbb
(bad)
cmp
adc
sbb
es
(bad)
push
sub
pop
push
js
pop
sub
in
adc
mov
xor
shl
and
loopne
add
inc
cmp
adc
push
mov
inc
xor
jmp
inc
shl
mov
loopne
sbb
jl
(bad)
neg
in
inc
xor
movs
ins
push
fs
ret
cli
fucomip
push
jne
or
xabort
push
mov
loopne
(bad)
adc
xlat
inc
add
adc
sbb
adc
mov
iret
fst
mov
jp
xchg
sub
cld
repnz
out
inc
jbe
dec
xchg
fnstcw
and
dec
rcl
mov
ja
pop
xor
fldcw
push
repz
cmp
xor
ret
add
add
cmp
push
inc
sub
mov
mov
ret
call
sub
ror
outs
cmp
mov
sub
ror
xchg
call
push
xchg
inc
pop
pop
xchg
add
or
inc
out
outs
fmul
jne
push
or
shl
inc
mov
les
push
mov
adc
adc
iret
add
mov
sub
es
dec
push
inc
inc
lods
push
test
push
(bad)
cmp
xlat
mov
inc
jp
and
(bad)
mov
xchg
cmps
(bad)
sbb
aas
aad
pop
xor
(bad)
jg
pushf
pop
adc
add
lods
cmp
jbe
sbb
push
cmp
add
adc
out
mov
inc
pop
cmp
add
lahf
adc
cmp
jge
adc
jnp
inc
sub
mov
or
sub
inc
nop
and
outs
daa
cs
daa
mov
sbb
rcl
movs
out
push
add
loope
mov
out
mov
jo
jecxz
xor
dec
(bad)
shl
data16
inc
or
jbe
clc
push
movs
cmp
jge
rol
dec
or
push
lea
cmp
sub
scas
test
pop
pop
and
jo
fisubr
sub
shr
push
(bad)
test
mov
jle
mov
enter
push
cvtdq2ps
add
pop
mov
stos
inc
xchg
xor
mov
mov
dec
sbb
fiadd
scas
push
jmp
dec
js
mov
mov
ror
sub
dec
sub
and
cmp
(bad)
push
cmp
mov
retf
mov
push
or
ret
add
inc
mov
sahf
jecxz
xor
je
shr
inc
or
scas
lock
in
sub
pop
xor
cmp
adc
inc
dec
mov
iret
movs
xchg
pop
rol
call
shl
mov
xor
push
xchg
test
adc
adc
cmp
jb
mov
inc
pop
inc
adc
fidiv
addr16
mov
mov
ss
pop
and
push
or
movzx
xchg
and
xchg
pop
out
add
or
inc
int3
adc
jne
fst
inc
sbb
data16
sbb
sbb
xor
pop
xor
into
mov
inc
adc
das
out
cli
inc
or
push
push
fstp
scas
sbb
cmp
ja
loopne
bt
fistp
xor
test
adc
adc
das
add
ds
add
cmp
jne
inc
shr
aas
cmps
mov
test
pop
add
lea
ror
pop
cmp
adc
daa
sbb
rcr
pop
sbb
sub
sub
xor
nop
xor
inc
push
xchg
push
inc
and
in
lods
mov
lea
adc
adc
add
adc
and
loope
push
cld
mov
inc
lods
inc
xor
push
push
xchg
sub
cli
add
xchg
push
mov
adc
scas
adc
lock
inc
push
lahf
cmp
mov
jne
jle
bound
adc
jp
call
loopne
add
retf
pop
movs
adc
add
cmp
clc
call
ins
add
add
jmp
cmp
inc
lock
movs
sbb
outs
daa
fcomp
arpl
jmp
cmp
sbb
fistp
add
lock
rcr
mov
xchg
adc
call
adc
je
jo
cmp
movs
adc
dec
addr16
sub
or
sar
je
or
add
inc
xor
xchg
xor
cmp
adc
std
jmp
inc
dec
jne
ins
jge
or
xchg
pop
jbe
pop
adc
jl
push
xor
push
nop
lock
jne
mov
test
push
cmp
in
dec
pusha
and
ins
iret
retf
push
sti
arpl
cmp
jo
rol
cmp
cmps
or
push
test
sub
sahf
jae
lea
push
mov
jne
and
xor
xor
aam
cmp
pop
cmps
cli
aas
sar
jmp
(bad)
(bad)
jle
das
cmp
jbe
sbb
lahf
pop
jo
add
dec
sbb
jmp
inc
cmp
jl
ret
mov
out
push
jge
xor
jmp
dec
jno
and
sub
inc
pop
cmp
add
and
jle
or
or
ret
mov
sbb
ins
shl
or
push
loopne
add
daa
lahf
jne
sbb
and
ficomp
mov
push
lea
xor
push
mov
cdq
loopne
dec
mov
int
push
push
(bad)
or
mov
adc
stc
adc
stc
out
jg
fstp
push
loopne
mov
cld
mov
sbb
xor
dec
scas
ja
add
add
or
mov
and
add
add
dec
cwde
in
adc
jmp
jb
sti
fnstenv
test
and
jmp
popa
lock
dec
outs
dec
push
jmp
sub
pop
inc
and
cwde
mov
push
jbe
add
mov
fdiv
pop
aaa
rdmsr
jae
pop
sbb
mov
mov
mov
mov
cdq
mov
cwde
(bad)
fsub
cmp
(bad)
cmp
ds
repz
loopne
add
push
lock
test
dec
pop
mov
jle
push
add
pop
push
jmp
push
xchg
mov
loop
test
pop
cmps
ja
gs
bound
jne
mov
pop
rcr
mov
pop
cld
cld
sar
sar
mov
clc
sbb
jbe
cmp
add
jmp
inc
inc
dec
jne
rcl
aas
sub
fisttp
cmps
imul
dec
jle
sbb
sbb
sti
sbb
or
xor
sub
lods
loopne
call
inc
add
in
addr16
add
cmp
adc
scas
neg
stos
loopne
dec
push
lock
inc
js
ss
bound
mov
mov
test
push
mov
or
cmp
mov
out
fmul
adc
sar
mov
fdiv
ins
jnp
mov
pop
lods
mov
shr
add
aam
rcr
rcl
lods
loop
mov
test
hlt
or
call
movs
jle
int3
xchg
add
inc
add
lea
lea
xchg
fcom
jnp
inc
call
pusha
dec
or
mov
pop
movs
lds
enter
es
lock
push
lahf
jbe
les
dec
test
and
xlat
pop
add
nop
adc
adc
outs
fisttp
or
retf
mov
call
xlat
hlt
mov
push
pop
adc
daa
adc
xor
add
(bad)
out
hlt
push
pushf
pop
fld
mov
aad
fstp
jns
xor
jae
mov
test
add
or
retf
fld
outs
stos
mov
ins
push
lea
pop
and
dec
or
test
inc
cmp
jae
(bad)
je
push
outs
or
sbb
(bad)
mov
mov
nop
pushf
aaa
mov
les
sbb
add
daa
or
add
cmp
and
cmp
mov
ret
dec
cmp
pusha
mov
fild
sub
inc
pop
ins
mov
xor
add
fidivr
jne
jbe
push
mov
mov
sub
xchg
cmp
jle
jae
pop
leave
add
dec
jno
sub
or
cmp
sbb
aam
ds
add
push
sbb
mov
mov
cld
icebp
or
rcl
push
or
mov
fadd
mov
dec
push
mov
fcomp
ins
ja
or
inc
lea
test
xor
inc
sub
mov
shl
repz
test
imul
into
sti
xchg
in
mov
and
pusha
fstp
push
test
je
pop
shr
xlat
adc
adc
xor
loope
and
adc
pusha
ret
(bad)
or
or
pushf
ror
out
xchg
mov
xor
add
addr16
xor
in
cmp
addr16
into
ds
data16
cmp
sub
add
push
mov
je
push
clc
add
add
loopne
add
cmc
lods
pop
(bad)
mov
xchg
inc
call
jmp
mov
call
add
or
lea
push
(bad)
cmp
inc
xor
push
add
ret
cmp
mov
stos
je
(bad)
and
test
cmp
mov
mov
add
or
push
add
mov
sbb
ja
lea
clc
in
sub
or
mov
pop
pop
mov
lds
jo
mov
mov
xchg
inc
push
jl
call
inc
pusha
test
pop
out
push
sti
dec
loopne
mov
xchg
xchg
mov
les
or
fistp
shl
retf
in
test
xor
lahf
out
add
and
cmp
ds
sbb
adc
push
add
pushf
rcr
rol
mov
add
add
into
fsub
icebp
cmp
dec
je
sub
xor
int3
xchg
add
cmps
icebp
mov
cmp
mov
mov
or
inc
add
xchg
xor
xchg
jne
imul
clc
clc
or
sub
in
push
cmps
mov
push
mov
scas
cdq
add
jo
mov
rol
ficom
xchg
sub
cs
int3
test
lea
loope
rol
xlat
imul
test
add
or
std
dec
das
aas
mov
jmp
add
loope
push
sub
mov
or
movs
push
xchg
jmp
pop
aaa
scas
popf
mov
lds
leave
or
push
cld
sbb
sbb
movs
test
popa
inc
leave
scas
leave
scas
inc
mov
xlat
xchg
sbb
imul
jg
mov
mov
add
push
movs
aaa
rol
and
fld
(bad)
inc
pusha
outs
or
loop
retf
(bad)
sahf
inc
or
add
rcr
push
lock
mov
mov
cmp
mov
das
retf
sahf
imul
movhps
add
add
add
sub
out
pop
scas
push
dec
imul
sub
inc
(bad)
in
push
mov
jbe
test
sbb
mov
mov
nop
stos
push
enter
jg
sbb
sbb
fs
dec
idiv
mov
movzx
shr
mov
inc
movzx
and
adc
inc
cmp
add
dec
jne
sar
sahf
add
sti
add
push
int3
mov
jmp
test
jl
inc
or
call
adc
shl
or
mov
xchg
clc
mov
dec
jne
or
fidiv
inc
push
sbb
ffreep
imul
sub
adc
mov
cmps
push
popa
push
adc
mov
std
ret
add
or
or
jns
out
lods
shl
sub
daa
cld
hlt
aaa
mov
lea
pop
clc
std
dec
pop
or
push
or
pop
movs
outs
mov
dec
in
add
push
push
inc
push
or
adc
gs
(bad)
fdiv
lea
movs
add
in
into
sti
jne
repnz
xrelease
cmp
rol
sub
scas
mov
or
add
mov
rol
mul
adc
xchg
fistp
push
pop
addr16
cmp
adc
jg
aam
adc
neg
stc
mov
cmp
pop
mov
(bad)
jge
jl
ret
or
je
push
dec
loopne
pop
popf
cli
lock
mov
cmp
jne
sub
das
js
mov
add
xor
mov
cmp
mov
inc
or
test
mov
push
push
cmp
add
push
les
inc
mov
or
cmp
popf
in
sti
push
in
add
dec
inc
iret
jg
mov
dec
cld
adc
push
inc
xor
ret
ret
out
cld
xchg
fstp
dec
jne
jmp
sub
cmp
jne
cmp
pop
outs
sbb
mov
mov
or
inc
pusha
add
sub
xchg
dec
and
enter
and
mov
xor
in
mov
sbb
scas
adc
push
or
sti
dec
inc
add
ret
or
ja
mov
or
jmp
in
dec
out
or
sahf
jo
sbb
jne
test
in
out
add
je
sti
add
dec
(bad)
sahf
pop
xchg
arpl
fs
adc
dec
add
repz
jecxz
jbe
cmp
push
out
mov
(bad)
nop
sbb
in
in
call
jmp
xchg
and
into
or
test
xor
mov
sar
mov
inc
test
add
mov
not
mov
cwde
mov
xor
xchg
dec
sbb
sbb
inc
cld
sbb
nop
cmp
mov
mov
ss
jle
jbe
jle
jl
popa
sbb
sub
add
push
and
xor
ficom
sub
jmp
pop
and
jle
addr16
sbb
mov
push
cwde
mov
jnp
dec
scas
xchg
push
add
les
out
sahf
xchg
ja
push
xchg
or
add
push
mov
mov
jne
ja
push
add
clc
push
mov
mov
in
pushf
lock
in
push
in
fstp
es
push
push
xlat
in
mov
fsubp
push
lods
into
add
push
mov
es
push
cwde
aam
ja
hlt
outs
out
shr
cmps
int3
push
js
in
jne
xlat
add
push
cld
cs
push
xor
fstp
rcl
mov
mov
cmp
or
out
imul
lods
push
add
test
clc
mov
stc
push
push
pushf
push
fisttp
stos
sub
cwde
addr16
xchg
outs
js
loop
ins
mov
push
sbb
mov
pop
mov
mov
aaa
sbb
sbb
jl
mov
push
movs
mov
mov
push
sub
dec
push
mov
lahf
cmp
push
inc
inc
sbb
test
loopne
test
ror
push
fwait
mov
cmp
mov
data16
clc
faddp
inc
fwait
cmp
fstp
add
mov
mov
fdiv
mov
mov
mov
mov
test
ror
push
inc
mov
ja
mov
xchg
ficomp
in
or
test
push
in
scas
inc
and
or
lods
dec
ret
jnp
(bad)
out
push
push
sbb
or
inc
push
outs
jb
inc
imul
addr16
pop
xchg
inc
or
jae
popa
sti
in
aaa
in
adc
or
dec
add
addr16
mov
daa
ins
jo
sbb
add
push
push
popa
jb
ins
and
in
or
pop
mov
jne
je
int3
mov
popa
add
cmp
scas
daa
and
push
int
imul
gs
xchg
pop
push
das
or
jg
sub
and
daa
jg
or
jg
or
xor
jg
fsub
sub
jle
jg
pushf
mov
mov
jg
push
push
push
dec
dec
gs
sub
xchg
or
cmp
add
inc
push
gs
sar
push
push
outs
jne
gs
adc
sbb
pushf
or
pop
push
inc
popa
je
jecxz
and
push
or
add
pushf
xor
and
cdq
sbb
dec
add
cmp
xchg
movs
inc
ins
test
adc
cmp
or
add
xor
stos
adc
push
fs
js
push
mov
inc
mov
xchg
add
je
test
cmps
std
pop
dec
lea
std
and
nop
mov
popa
push
push
jbe
sub
mov
das
(bad)
jnp
shr
push
clc
es
push
mov
repz
mov
pop
jns
fstp
sbb
cmp
cmp
xlat
ds
xor
ja
inc
ins
ds
popf
test
hlt
sub
xor
adc
in
std
or
jb
push
loop
(bad)
test
sbb
inc
push
popa
gs
cmp
jns
push
retf
lods
push
mov
add
xchg
mov
stos
add
test
push
gs
int
ins
xchg
mov
mov
pop
sbb
inc
sti
div
pop
leave
add
cdq
mov
mov
ins
cs
js
je
adc
jae
add
outs
sub
pop
add
inc
adc
dec
mov
fsubr
push
adc
xlat
lahf
cwde
in
lahf
sbb
rcr
jne
fs
xlat
pop
enter
xor
pop
sub
mov
into
ins
mul
pop
add
or
sub
imul
add
xor
sub
sub
pushf
mov
add
push
sub
pop
iret
mov
sbb
sbb
div
jbe
jmp
push
movzx
cld
test
or
or
test
xor
and
call
mov
jnp
jb
iret
jne
pop
nop
ins
push
inc
out
pop
shl
cli
xlat
mov
mov
mov
icebp
mov
outs
aas
cmp
mov
loopne
mov
mov
push
test
mov
jbe
je
mov
or
es
xor
(bad)
and
xor
and
aaa
nop
fisttp
test
mov
adc
lods
pop
nop
fcomip
and
cmp
inc
dec
lea
(bad)
pop
clc
lea
(bad)
cld
loopne
jnp
loopne
rol
sbb
adc
stc
jno
in
xchg
clc
jg
test
sub
mov
add
adc
or
or
add
loop
mov
arpl
xchg
pusha
xor
out
or
jmp
mov
jns
adc
push
cmp
xor
push
leave
adc
(bad)
pusha
pop
fstp
cmp
mov
ds
lea
mov
sar
mov
jp
mov
and
mov
mov
shl
sbb
adc
adc
es
daa
or
scas
mov
pushf
paddb
clc
adc
je
movs
(bad)
add
push
mov
clc
mov
movnti
call
dec
adc
push
fadd
les
cmp
retf
add
movs
xchg
scas
outs
add
fisubr
dec
clc
mov
shl
adc
fsubr
shl
inc
retf
jno
popa
sub
hlt
jmp
outs
adc
aaa
pop
call
clc
push
add
rol
movs
icebp
aam
loope
mov
test
inc
jne
and
push
adc
cli
dec
mov
es
jmp
pop
ja
lahf
push
cmp
sub
pop
or
rol
in
dec
fcom
cld
sub
add
mov
pop
scas
aam
add
adc
lea
xchg
sbb
push
add
jns
je
lods
dec
lock
inc
cmp
repz
cmps
jne
cmp
pop
push
push
push
push
ret
repz
push
mov
fdivr
pop
mov
dec
movs
sub
and
sub
push
cs
in
fdiv
dec
xor
and
hlt
inc
xor
and
clc
dec
cld
in
xchg
dec
push
add
pop
xchg
dec
es
add
or
cdq
fs
or
xchg
dec
sub
hlt
or
pusha
movs
jb
mov
mov
movs
imul
mov
mov
xchg
dec
sub
and
mov
xor
aam
sub
jnp
cdq
movs
in
adc
mov
mov
ret
cmp
or
push
add
adc
add
cs
cmp
adc
and
add
popa
outs
je
outs
addr16
jns
gs
js
dec
gs
dec
outs
cmovno
push
jne
ja
mov
push
inc
imul
movs
fstp
dec
inc
outs
cmovg
pop
std
lahf
jmp
outs
adc
inc
ins
sbb
jb
ins
push
je
nop
cmp
pop
push
push
cmp
or
(bad)
jns
add
mov
inc
outs
outs
ins
inc
jae
pop
rcr
cdq
dec
aas
pop
(bad)
pop
xchg
inc
jb
inc
imul
adc
jo
mov
xor
or
dec
mov
push
pop
pop
adc
jno
popa
ins
or
loope
xor
add
sub
clc
jbe
fcomi
ins
cmp
and
mov
xor
int3
int3
jne
add
stos
push
mov
or
cmp
(bad)
add
and
and
push
movs
add
push
pop
mov
js
add
push
hlt
cwde
popa
(bad)
int
push
push
inc
and
int
scas
cwde
inc
enter
inc
fs
je
test
iret
repz
cld
jo
bound
xor
pusha
ins
push
pop
ins
push
mov
jnp
clc
push
add
fadd
jecxz
or
test
cmp
bndldx
ret
maxps
rcl
call
movntps
stc
push
add
pop
add
jmp
retf
add
or
sbb
das
or
jb
or
mov
mov
add
adc
or
mov
add
add
mov
mov
or
test
add
dec
add
or
cmp
(bad)
add
adc
fs
add
mov
mov
pop
inc
cs
scas
jge
cmps
pop
dec
jae
ins
shl
cmc
mov
mov
sub
(bad)
or
mov
add
fmul
les
add
jns
add
movd
push
outs
jne
arpl
jae
sti
adc
xchg
jg
push
or
inc
mov
or
jo
mov
add
or
bound
sbb
sbb
push
pop
sbb
jo
xchg
add
or
imul
and
imul
jns
jo
or
push
out
cmps
scas
add
mov
cmp
out
dec
adc
aas
inc
pop
push
stos
aas
rol
ins
mov
or
pop
iret
(bad)
dec
add
shl
jo
aas
imul
ja
scas
add
ins
inc
jmp
add
mov
fnstenv
stos
stos
ins
test
outs
outs
jae
imul
daa
pop
adc
ja
pop
adc
mov
ins
jge
call
and
lock
adc
retf
dec
gs
test
dec
push
leave
jns
sbb
leave
jbe
push
dec
cs
outs
imul
inc
inc
(bad)
cld
mov
push
pop
mov
retf
mov
jg
add
test
push
mov
mov
outs
adc
shl
jo
inc
xchg
ret
sbb
push
fs
dec
dec
in
push
sub
rol
mov
pushf
out
sahf
cwde
dec
pop
addr16
aaa
adc
or
scas
jge
mov
retf
push
add
js
ja
int3
pop
mov
add
sub
mov
aaa
mov
sbb
mov
push
pushf
out
and
add
push
dec
repnz
adc
retf
movups
test
add
cmp
loopne
dec
push
push
cmp
fs
or
jne
jle
shl
retf
pop
xchg
add
ds
jmp
mov
ror
ins
cmp
nop
xchg
and
mov
and
cmp
jb
push
je
push
add
jg
push
push
add
inc
gs
push
mov
je
lods
ret
sub
adc
leave
add
fld
mov
adc
mov
movs
mov
sub
jmp
unpckhps
mov
cmp
inc
sti
(bad)
jg
add
pop
mov
lea
push
lahf
push
cmc
or
xchg
xchg
adc
cmp
dec
int
int
out
fnstsw
bndldx
adc
into
push
inc
mov
xor
out
fimul
imul
fisttp
cmp
aaa
clc
out
bswap
jg
jo
pop
hlt
pop
aam
fidivr
and
adc
cmp
aas
xlat
sahf
test
and
xor
inc
push
into
into
ja
pop
nop
scas
and
setbe
jbe
out
loopne
ds
outs
ja
xlat
ja
xor
sub
sub
cmp
iret
jo
dec
rsqrtps
cmps
sub
ja
xor
arpl
cmp
cmp
fwait
or
pop
or
adc
js
add
inc
popa
xchg
pop
or
cmp
cmp
cmp
adc
outs
pop
in
pop
int3
psrld
xor
loope
push
pushf
gs
xlat
ja
push
add
sub
rol
jle
ja
inc
mov
jno
xlat
fild
cmp
cmp
adc
pop
dec
cmovle
sub
jg
imul
cmp
cmp
mov
femms
jg
test
adc
into
adc
ins
ja
pop
xor
xor
in
and
(bad)
outs
and
add
dec
push
xor
lock
mov
adc
cmp
mov
movs
pop
or
push
push
stos
cmp
outs
pop
es
sub
mov
mov
lock
aad
sub
mov
pusha
pop
inc
cmovbe
cli
jno
mov
imul
movs
retf
sbb
add
pop
push
sub
mov
pop
cld
das
add
ja
push
pusha
inc
mov
ja
mov
adc
dec
jne
ins
adc
inc
inc
fwait
and
inc
xor
xchg
push
cmc
push
or
outs
addr16
adc
sbb
outs
enter
div
add
shr
mov
lods
and
inc
outs
jae
fadd
jb
arpl
add
test
mov
je
(bad)
dec
mov
add
aas
les
ins
inc
loope
jo
lahf
add
cmps
and
sbb
rol
xchg
enter
mov
or
rol
add
cmps
in
push
xor
mov
not
mov
mov
and
retf
or
mov
add
mov
ins
(bad)
inc
adc
clc
es
in
fisubr
push
push
xor
mov
xchg
in
scas
pop
adc
push
ret
add
add
out
arpl
pop
in
fmul
sar
push
fs
cmps
call
pushf
push
mov
xchg
xor
loopne
sbb
cmp
xchg
pop
mov
and
mov
fimul
inc
test
call
adc
into
or
or
dec
jne
(bad)
(bad)
(bad)
int
cmp
test
sbb
je
sub
sub
popf
pop
and
pop
sub
std
xor
bound
xlat
aam
push
push
adc
iret
fsub
dec
adc
pop
add
mov
mov
mov
movs
inc
mov
cld
adc
mov
mov
ins
ins
or
call
dec
ins
and
js
sbb
lock
sbb
(bad)
dec
in
mov
mov
dec
call
adc
mov
xor
dec
loopne
and
inc
in
jnp
jae
loopne
shr
and
inc
neg
cli
int3
adc
lea
pop
add
xor
aam
les
fdiv
enter
and
je
int3
jns
mov
inc
xor
push
data16
fadd
loopne
ins
sbb
inc
ja
fimul
stos
pop
add
leave
nop
out
adc
mov
sub
cmps
sbb
je
jmp
mov
mov
jne
adc
hlt
outs
adc
pop
ret
nop
cli
sub
mov
cld
mov
inc
test
jge
mov
mov
mov
sub
in
scas
dec
mov
repnz
xor
lods
and
inc
push
xor
mov
sbb
mov
cmp
neg
enter
arpl
and
add
fnsave
pop
std
data16
sbb
and
add
test
jecxz
mov
das
mov
push
inc
scas
test
cmps
adc
pop
(bad)
push
push
and
cmp
jbe
push
push
mov
test
jne
mov
jg
pop
fwait
in
mov
xchg
and
cmp
jne
test
ret
sbb
mov
mov
jmp
mov
dec
mov
sti
test
push
cmps
js
xor
mov
out
int
sub
push
jmp
jl
inc
mov
ins
mov
xor
inc
dec
jne
jge
cmp
or
sbb
test
jle
fist
fbstp
test
inc
loopne
adc
fcomp
jae
adc
ja
inc
add
out
inc
ret
les
jmp
sub
inc
repz
xchg
jmp
add
ins
ret
jg
jo
adc
test
je
(bad)
(bad)
fadd
dec
dec
jmp
mov
jmp
inc
cmp
loopne
dec
mov
call
enter
out
sbb
or
push
jle
mov
mov
int3
mov
or
pop
nop
pop
not
stc
mov
and
test
inc
fild
xchg
ja
adc
inc
hlt
jmp
cs
mov
and
outs
fdiv
rol
cmp
je
pop
pop
jo
cmps
or
add
push
inc
sub
(bad)
cdq
push
sbb
cmp
and
inc
or
sbb
push
scas
and
jo
jmp
adc
aas
inc
mov
mov
mov
call
mov
daa
inc
fcmove
jbe
mov
out
nop
cmp
fsub
loope
xlat
lods
ds
pop
mov
pop
dec
or
mov
scas
cmp
mul
adc
in
call
push
fsubr
scas
lds
jae
mov
mov
sbb
adc
in
mov
mov
aaa
xchg
pusha
mov
div
xchg
sub
(bad)
push
jo
shr
mov
mov
jle
loope
mov
iret
fdiv
inc
add
push
adc
sbb
push
cmps
cmp
add
dec
mov
mov
clc
fild
in
xor
sub
cmp
xor
push
mov
dec
adc
lea
inc
data16
jmp
arpl
sub
mov
and
cmp
fistp
iret
mov
jne
add
or
lock
data16
or
or
mov
das
movs
mov
xor
inc
inc
idiv
jne
push
jle
jmp
mov
inc
je
test
adc
push
add
jmp
ret
cmp
or
daa
cmp
cld
lahf
je
pusha
and
cmp
pusha
(bad)
sub
push
or
jne
mov
loopne
push
(bad)
jmp
mov
jmp
mov
sbb
or
mul
push
mov
or
inc
aam
xor
sub
cmp
ja
jae
jg
push
xor
or
add
add
push
pop
or
or
or
add
movups
adc
or
dec
repz
adc
adc
push
sbb
sub
cmp
repz
push
push
mov
cmp
repz
mov
imul
jecxz
pop
xor
sahf
mov
(bad)
pop
mov
and
mov
iret
sbb
add
push
push
mov
dec
inc
ins
push
or
movs
(bad)
pop
aas
ins
xchg
mov
xor
cmp
cmc
sbb
sbb
ret
sub
call
mov
sbb
fcom
lds
mov
leave
outs
in
or
xchg
add
sub
mov
sbb
test
mov
stos
push
cmp
xor
dec
mov
in
sbb
mov
add
pop
mov
mov
jmp
xchg
or
jge
xor
push
pusha
add
add
sub
or
je
or
and
mov
jb
or
dec
or
adc
add
pop
cmc
dec
add
dec
in
test
sti
(bad)
inc
pop
mov
push
sahf
or
fild
std
mov
add
mov
cmp
dec
lahf
ret
shl
jge
mov
pop
(bad)
mov
pop
xor
add
mov
or
pushf
(bad)
xchg
adc
sti
jmp
fstp
jne
xor
jmp
mov
lock
adc
jle
nop
pop
xchg
fdivr
inc
sbb
ss
test
outs
(bad)
clc
adc
and
inc
pop
add
hlt
add
idiv
sti
ss
in
data16
sbb
jmp
pop
dec
test
jl
inc
xor
lea
pop
(bad)
ss
push
or
inc
cs
or
jno
mov
test
and
aad
(bad)
ror
adc
add
js
out
dec
jne
je
ins
stc
push
push
lods
push
(bad)
adc
(bad)
lock
jne
cmp
rol
dec
mov
sbb
jnp
sbb
imul
popa
pop
xlat
lea
sbb
ret
(bad)
repz
ret
aam
pop
sub
gs
pop
imul
loope
in
(bad)
cmp
loop
lds
inc
call
add
fwait
fs
xchg
jmp
push
adc
(bad)
imul
imul
xchg
push
adc
aas
cli
test
pop
call
dec
dec
and
jle
adc
adc
clc
mov
arpl
jne
mov
sbb
pop
ss
dec
push
sub
pop
pop
ds
mov
lods
shr
add
pop
or
inc
jne
pusha
cmp
or
shl
xor
dec
dec
inc
inc
sub
cmps
push
fisub
jbe
mov
(bad)
adc
push
pop
(bad)
js
data16
or
or
cmps
cs
loopne
mov
cmp
je
mov
inc
sti
jecxz
push
or
lock
repz
lock
loopne
pop
dec
push
into
inc
inc
cwde
xor
mov
sbb
ficomp
mov
js
xchg
push
sbb
dec
push
fidivr
adc
sbb
ins
add
xchg
cs
retf
shl
xchg
dec
sbb
jmp
add
movs
mov
xchg
lods
or
pop
fst
icebp
iret
repz
adc
hlt
dec
mov
outs
inc
popa
push
out
pop
jp
cmp
repz
mov
shl
loopne
sbb
adc
and
fcomi
ficomp
daa
mov
and
dec
fst
sub
leave
fstp
sub
inc
test
adc
fidiv
xor
fcomip
adc
xchg
jl
ficomp
rol
xor
loopne
adc
adc
add
jle
mov
and
add
cs
pop
pop
and
pop
in
popf
test
sub
dec
and
pop
cwde
xchg
aaa
ror
jmp
sbb
lock
push
test
adc
bound
fcomp
or
mov
mov
inc
mov
test
mov
add
addr16
outs
mov
dec
scas
push
cmp
imul
pop
int3
mov
ror
loopne
or
push
sbb
lock
lock
jecxz
ret
cdq
in
pushf
cmps
jnp
add
jmp
jle
xor
frstor
sbb
in
push
stc
lock
test
jecxz
push
mov
adc
movs
iret
push
cmp
xor
dec
(bad)
test
pop
enter
je
and
and
pop
xchg
xchg
xchg
sbb
sub
fnstenv
xchg
push
in
sub
pushf
frstor
xchg
dec
xchg
mov
test
ins
inc
or
in
jno
call
aad
aam
js
jb
clc
(bad)
and
aas
sub
push
mov
shr
push
add
pusha
adc
mov
or
popa
mov
push
push
movs
add
(bad)
push
mov
mov
inc
dec
add
(bad)
std
push
add
pop
fimul
adc
shr
adc
dec
xlat
sbb
lds
aaa
jp
daa
ror
xor
jmp
mov
je
rol
in
out
sbb
dec
cmps
pop
add
retf
lods
cmp
dec
nop
stos
cmps
or
adc
in
dec
pop
cld
adc
mov
rol
test
jmp
out
push
sub
dec
bound
cmp
jl
mov
daa
out
push
js
fstp
ins
pop
pop
in
es
cmp
jnp
pop
push
sub
push
add
cmp
sbb
xor
or
in
shl
call
xchg
ror
int3
cld
shl
lods
sub
out
imul
sub
clc
stos
xchg
sbb
std
clc
stos
cld
fstp
fwait
cmp
cmp
stc
(bad)
fnstsw
mov
pop
ss
fistp
add
mov
outs
int
xor
cwde
loop
add
mov
int3
sub
inc
mov
enter
sub
push
cld
push
fs
and
call
cmp
jo
push
pusha
lds
das
fcmovnu
jmp
adc
rol
or
je
add
jmp
dec
inc
jmp
jne
rol
adc
xor
lock
iret
mov
push
out
xor
push
add
and
pop
stos
popa
test
sub
cdq
or
enter
push
cld
out
lods
sub
(bad)
std
jg
dec
jmp
push
fistp
push
mov
xchg
dec
xor
dec
stos
(bad)
cli
mov
inc
xor
in
or
mov
cld
or
mov
test
jmp
mov
add
sbb
xchg
mov
loopne
push
call
movs
jecxz
rol
or
sbb
push
sub
adc
jmp
retf
arpl
push
jmp
sbb
xor
retf
pop
out
mov
xor
mov
or
pop
popa
sbb
out
aaa
pusha
das
xchg
(bad)
rcr
cli
lock
loope
adc
loopne
(bad)
cs
jbe
add
outs
push
lea
loop
das
jg
call
adc
or
out
xchg
push
adc
fist
sar
stos
sub
cld
cmc
xor
and
adc
hlt
mov
sahf
out
fimul
repnz
sbb
dec
push
ja
lahf
out
cwde
mov
scas
or
push
pop
pop
jmp
push
jmp
sub
bound
jbe
inc
nop
ss
daa
aas
xor
mov
sbb
(bad)
das
int3
fldcw
clc
pop
cmp
pop
sbb
add
cli
mov
inc
(bad)
aam
xchg
fild
fdiv
inc
lock
fbstp
movsx
not
test
jns
mov
xor
mov
add
add
jmp
out
(bad)
das
adc
pop
je
dec
je
or
jmp
and
loopne
sub
pop
movs
jl
test
and
imul
movs
enter
iret
jnp
mov
bound
jae
and
repnz
dec
mov
mov
pop
and
iret
repz
xor
add
sub
jbe
and
fxch
(bad)
test
fild
sbb
add
adc
and
mov
jmp
sbb
jae
int
adc
pop
adc
cmp
add
jae
daa
aaa
add
pop
jecxz
jmp
jo
add
or
scas
arpl
add
push
xchg
ja
xor
mov
lock
enter
inc
mov
loopne
sbb
cmp
rol
lods
add
inc
inc
shl
fisttp
popa
sub
jb
xor
add
out
or
add
fucomi
test
adc
mov
and
pop
adc
mov
or
pop
pop
popa
add
add
cmp
push
jb
and
or
cwde
ror
fld
imul
pop
addr16
add
adc
ins
xor
dec
addr16
neg
add
pop
push
mov
push
dec
push
loopne
stos
xor
cmp
outs
cmp
inc
mov
pop
add
push
add
idiv
push
cli
add
or
adc
(bad)
in
call
sahf
push
pop
jp
mov
adc
and
mov
add
jno
aas
add
add
push
in
and
pusha
or
out
adc
add
jo
out
loop
mov
out
add
in
repz
test
call
loopne
loope
adc
cs
sbb
mov
stos
mov
add
retf
or
fisubr
mov
fdivr
repz
scas
push
mov
(bad)
sub
loop
jmp
jmp
adc
mov
inc
iret
push
dec
adc
add
adc
test
mov
inc
mov
mov
sub
xlat
inc
call
enter
and
dec
sbb
icebp
add
hlt
adc
add
out
pop
sub
push
adc
(bad)
(bad)
cmp
inc
pop
aaa
cmp
(bad)
fmul
and
xor
aaa
sbb
adc
cmp
or
sub
or
sysenter
inc
dec
sbb
fdiv
je
fadd
dec
jbe
shr
pop
cld
loope
adc
fsub
fdivr
sti
dec
test
jne
mov
test
jne
cs
hlt
push
push
or
ins
jmp
inc
arpl
mov
adc
inc
jmp
adc
cmp
out
ins
dec
(bad)
push
out
std
push
xor
sub
pop
sub
es
pop
(bad)
and
inc
hlt
or
and
shl
xchg
sbb
out
outs
or
add
xor
mov
(bad)
cs
call
mov
xchg
push
sbb
rcl
mov
fs
mov
icebp
push
mov
int
mov
add
cdq
iret
cmp
inc
jecxz
repz
mov
cmps
push
mov
iret
fsubr
add
and
outs
in
jns
call
pop
sahf
out
sahf
pop
outs
adc
jno
cmp
sub
pop
cmps
push
movs
inc
or
pop
test
and
int
ins
sub
sbb
arpl
jmp
sub
mov
pop
daa
mov
push
and
push
or
adc
daa
add
sbb
sub
and
pop
and
lods
sub
mov
dec
dec
mov
in
xor
pop
sar
lahf
idiv
ret
push
jmp
add
sbb
cmp
fs
outs
in
push
out
pop
pop
jns
mov
movs
or
rol
leave
(bad)
mov
and
iret
das
pushf
xor
and
mov
xor
int3
or
lods
inc
test
and
aad
mov
sbb
mov
stos
inc
int
mov
and
sbb
add
inc
and
and
jmp
popa
xor
pop
lock
mov
xor
daa
test
inc
inc
icebp
int3
and
push
cmp
nop
xor
add
sub
jae
ds
jne
fwait
ds
xor
lods
jge
(bad)
push
jae
adc
jle
shr
add
call
shl
sub
repnz
sbb
push
or
push
ss
and
retf
daa
push
sub
xchg
and
loop
pop
cwde
pop
pusha
scas
add
ret
or
adc
jne
sbb
xor
inc
(bad)
in
jmp
out
sbb
daa
add
add
push
mov
inc
push
aad
or
jb
test
cmc
dec
mov
push
push
cmp
jge
add
rol
sti
cmp
hlt
aaa
hlt
jle
out
xchg
adc
or
mov
push
push
and
dec
cpuid
and
ret
call
push
dec
xlat
pop
or
pop
mov
mov
dec
iret
dec
add
add
inc
test
outs
inc
add
outs
ror
cs
outs
out
and
cwde
into
mov
inc
pusha
das
xchg
adc
dec
push
leave
adc
prefetchwt1
push
or
or
push
jb
pop
pop
loope
sub
add
sahf
pop
ss
push
arpl
int
jns
fwait
sub
cmp
push
sbb
pop
pop
mov
dec
mov
add
(bad)
jb
mov
inc
xchg
or
call
jnp
clc
xchg
in
jmp
sbb
sbb
out
fcomp
fstsw
sahf
and
fild
fcompp
dec
pop
mov
adc
loopne
sbb
pusha
mov
sub
or
cmp
or
add
rol
ret
and
pop
adc
repz
or
scas
or
or
xchg
enter
arpl
cmp
popa
je
neg
in
lds
repz
add
adc
mov
cmp
aas
pop
jae
cmps
pop
jnp
pop
pop
test
jns
mov
mov
jbe
push
sbb
xchg
adc
push
mov
add
call
and
jno
test
jmp
pop
push
into
add
clc
push
and
bound
jmp
daa
xor
cmp
push
add
mov
call
imul
fcomp
shl
sbb
rol
fcom
pop
inc
push
mov
mov
or
inc
outs
inc
mov
cli
cli
shl
mov
push
(bad)
pop
ror
fld
fstp
fwait
jmp
push
fadd
xchg
jp
sbb
sahf
push
sbb
jmp
test
xor
adc
xor
inc
or
cdq
in
add
mov
push
or
xchg
or
pop
outs
pop
add
add
mov
fwait
jno
bound
pusha
clc
cmps
add
rol
xchg
push
test
mov
or
bound
jb
mov
scas
mov
repz
clc
mov
add
mov
pop
pop
adc
pop
out
outs
jp
sbb
push
std
enter
add
mov
stc
(bad)
sub
outs
mov
dec
fnstenv
mov
or
bound
clc
and
mov
inc
adc
push
sub
mov
mul
jo
cli
movs
cli
fild
rol
xor
mov
stos
sbb
xor
add
and
fadd
in
and
cwde
jecxz
cmp
mov
add
pop
pop
pusha
enter
sbb
sub
cmps
cmp
jnp
es
adc
push
pushf
stos
mov
shl
inc
not
cdq
iret
repz
pop
or
and
cmp
mov
jb
fistp
fld
call
or
out
add
movs
std
inc
lods
adc
jno
rcl
mov
add
and
sar
cmp
push
jnp
adc
sub
cmc
jmp
out
sub
sub
jmp
jmp
imul
into
js
cmc
sub
(bad)
adc
inc
mov
fdivp
rcl
or
aas
mov
jmp
push
adc
push
and
mov
sahf
neg
mov
push
push
and
pop
cmp
jp
jo
jmp
add
push
sbb
or
xlat
mov
fild
pop
add
mov
loope
cs
add
or
fild
mov
push
in
lods
mov
push
adc
cmp
xor
inc
dec
jge
pop
jmp
cmps
pop
sub
es
xor
add
sub
mov
loopne
inc
push
adc
cmp
and
mov
pusha
in
adc
cmp
or
inc
xchg
test
ret
aas
adc
mov
push
add
xor
pusha
sub
mov
xchg
or
sahf
lea
adc
sbb
imul
sub
loopne
push
mov
in
or
pop
or
inc
pop
mov
neg
js
jo
pushf
adc
ret
push
pop
ret
dec
cmp
pop
ret
mov
and
les
nop
cmp
lds
leave
repz
dec
jns
iret
jae
clc
loop
repnz
je
out
pop
pop
sbb
iret
inc
pop
jbe
and
rol
add
call
dec
inc
dec
rol
or
aaa
fild
add
pop
ucomiss
inc
ucomiss
sub
sub
mov
and
or
(bad)
jne
outs
push
pop
push
fwait
push
pop
add
sbb
dec
jae
add
push
inc
je
xor
sbb
jne
add
sbb
dec
pop
sbb
pop
mov
loopne
jp
lods
mov
adc
jnp
add
mov
mov
fidiv
lock
add
rcl
sahf
out
xchg
pop
cs
pop
js
jo
jns
mov
and
test
pop
rol
mov
sub
push
pop
mov
adc
fsubr
dec
pop
sbb
push
mov
das
cmp
jmp
inc
enter
add
lods
jmp
fdiv
in
outs
sbb
outs
xor
test
dec
sbb
cmps
jo
or
jmp
add
in
mov
mov
cmp
rol
popa
adc
add
pop
cmp
cmp
inc
and
shl
inc
aaa
sbb
sub
cmp
and
mov
aas
mov
pop
xchg
aas
xchg
pop
loop
inc
aas
fistp
das
xchg
inc
sbb
fst
jge
loopne
add
jge
in
cmp
aas
xchg
or
jl
out
sbb
lods
push
mov
call
cmp
dec
xlat
test
jnp
push
sub
pop
pop
pop
es
repz
shl
and
xchg
aas
add
loopne
mov
inc
lock
fmul
and
dec
mov
dec
and
pop
cmp
mov
loop
push
inc
pop
(bad)
xor
ja
(bad)
add
rcl
or
add
sub
aas
mov
cmp
fadd
fdivr
movs
pop
bound
and
xor
pop
push
or
mov
add
mov
out
int
lock
cmp
pop
or
push
into
repz
cmp
inc
push
sbb
jns
inc
jbe
gs
xchg
es
jns
mov
int
or
sub
inc
fwait
sbb
fcmovnu
daa
xchg
cmp
jo
aad
jmp
pop
sub
inc
pop
ins
inc
add
cvtdq2ps
cmp
inc
cmp
push
daa
add
daa
jns
in
test
jae
in
and
daa
pop
call
xor
add
xchg
xchg
inc
inc
mov
fdiv
push
or
add
add
mov
mov
xor
fstp
cmovnp
sbb
outs
and
outs
(bad)
push
and
add
inc
xor
push
push
shr
popf
push
mov
adc
mov
sub
jb
je
in
add
push
dec
je
jmp
ror
sahf
jo
lea
add
jae
test
xchg
pusha
jmp
stos
inc
lock
jmp
inc
xor
clc
inc
aaa
sbb
jecxz
and
push
pop
in
jmp
nop
sub
iret
cwde
mov
mov
or
clc
or
mov
ror
sbb
fwait
inc
cdq
dec
push
js
enter
mov
nop
mov
fst
ins
mov
sete
inc
js
in
and
xchg
cmp
xchg
cmp
rol
gs
nop
or
mov
and
add
lock
pop
pop
mov
mov
pop
(bad)
in
int
sub
or
out
adc
jle
lock
cmp
je
sbb
mov
loop
retf
(bad)
in
mov
loopne
mov
push
sbb
push
mov
or
jo
push
add
jecxz
loope
dec
dec
jne
in
es
cmps
or
fcmovnb
cmp
stos
sbb
sub
cmp
repz
push
jae
(bad)
out
loope
and
out
jne
not
dec
push
pop
pop
xchg
cmps
push
(bad)
jo
idiv
or
sub
mov
mov
jno
xor
xlat
inc
mov
popf
ret
(bad)
call
inc
cmp
and
lods
dec
int
xlat
sar
test
cmp
add
(bad)
fstp
fwait
shl
aam
mov
inc
in
loopne
mov
push
call
gs
push
mov
add
cmc
inc
movs
fs
clc
push
mov
or
movs
(bad)
or
push
movs
movs
sbb
adc
mov
or
mov
xchg
dec
dec
jnp
in
(bad)
fs
pushf
push
cwde
stos
pop
mov
aam
aas
push
ror
daa
xchg
gs
adc
xor
aas
mov
adc
push
mov
and
in
add
inc
fld
and
inc
jo
dec
pop
pop
or
sar
das
sbb
jo
jl
lods
or
xchg
sbb
sub
icebp
sbb
jbe
jo
add
xchg
js
fwait
push
data16
mov
das
(bad)
(bad)
cmp
or
inc
and
call
adc
test
test
mov
sti
and
push
aam
and
in
cmp
ds
inc
fstp
sub
xchg
jo
inc
fimul
test
jmp
test
add
ins
add
pop
inc
xchg
dec
loope
xor
and
xchg
jo
mov
jp
mov
and
cmps
add
push
enter
mov
es
imul
inc
jnp
add
xchg
imul
push
cmp
inc
outs
cmps
xchg
xchg
adc
cwde
dec
push
or
and
mov
sub
je
pop
cmc
fs
mov
lea
or
inc
push
xchg
xchg
pusha
dec
mov
das
and
dec
in
add
dec
add
and
add
pusha
scas
rol
test
xchg
adc
adc
call
adc
push
imul
aas
jmp
mov
pop
test
dec
xchg
cmp
scas
dec
test
leave
das
and
cld
inc
push
or
(bad)
push
enter
cmp
outs
aad
mov
dec
call
test
fnstenv
push
lock
cwde
shr
sbb
pop
pop
cmp
xchg
cmps
out
add
test
call
inc
mov
test
test
pop
inc
mov
and
add
ucomiss
daa
sbb
sbb
cmp
dec
xchg
lea
les
in
adc
pop
sbb
iret
add
lea
into
inc
pop
or
pop
loopne
aad
and
pop
xchg
fcmovnbe
jp
inc
xor
and
mov
sub
xor
pushf
cmp
push
je
inc
ret
adc
cmp
jno
sub
mov
ja
ins
retf
mov
mov
fisub
ret
fsubr
ja
bound
pop
cmps
in
mov
sub
jns
xlat
ss
test
out
adc
ss
pop
js
sub
in
(bad)
jle
push
push
push
pop
pop
neg
mov
cld
sbb
aaa
push
xor
aad
mov
mov
jbe
pusha
mov
mov
inc
fisub
test
push
pop
xchg
movs
inc
movs
lods
pop
mov
sbb
cmp
ret
cmp
jno
lea
and
mov
or
fcomp
adc
nop
xor
mov
sub
jo
ret
movs
cmp
ror
pusha
retf
pop
and
or
pushf
push
sahf
pop
push
inc
mul
test
inc
sbb
popa
cmp
fsub
adc
loop
in
imul
jb
movs
stos
cld
add
cs
int
jns
jl
push
push
shl
sub
cmp
inc
push
in
and
bound
mul
pop
sar
(bad)
enter
xchg
mov
push
fwait
dec
les
sbb
pop
or
dec
or
sub
adc
fild
adc
xor
xor
fst
iret
pop
xor
sub
pop
mov
mov
in
pop
adc
(bad)
punpckhbw
mov
and
sub
add
and
xchg
adc
inc
add
xchg
test
in
adc
inc
(bad)
and
mov
sbb
and
jg
shl
sub
sbb
sub
and
dec
xchg
bound
mov
sbb
jmp
adc
jmp
das
test
shl
jmp
jb
inc
ins
xor
jns
cmp
jmp
adc
cmp
pop
inc
and
sbb
pushf
xor
pop
adc
and
arpl
xchg
data16
pop
jnp
adc
pushf
jae
mov
repnz
adc
loop
(bad)
mov
je
jmp
add
xor
adc
and
ins
pop
fucomip
fidiv
stos
and
stos
or
push
push
jl
out
ds
jae
scas
xor
iret
ror
mov
xor
call
fidivr
pop
iret
push
jmp
into
repz
ds
popf
xchg
and
mov
mov
test
add
and
test
nop
es
inc
sbb
xor
xor
sub
jmp
cdq
jmp
dec
enter
out
cmp
test
es
cmp
inc
not
cmp
scas
int
pop
inc
push
and
test
cdq
daa
dec
mov
fist
adc
movs
adc
daa
cmp
scas
or
sbb
ret
addr16
test
adc
sub
sbb
or
dec
sub
in
ja
mov
inc
sbb
cmc
jns
data16
gs
scas
xor
dec
push
stc
inc
or
test
leave
push
inc
jns
xchg
pop
pop
popa
push
sub
or
inc
sub
sbb
inc
xor
test
fst
pop
popa
add
test
add
dec
stc
es
inc
fadd
dec
push
fcomp
or
(bad)
test
xor
(bad)
and
dec
adc
dec
loope
adc
dec
fisttp
fisttp
mov
sbb
arpl
mov
add
sbb
ins
dec
jmp
mov
adc
test
dec
nop
mov
test
outs
and
pop
mov
dec
mov
out
dec
cs
mov
lea
add
or
jmp
(bad)
fistp
sub
xlat
bound
(bad)
out
aas
and
cmp
sub
or
ret
dec
mov
and
xchg
and
mov
(bad)
push
push
or
fadd
jb
scas
or
ja
jle
je
jmp
sub
or
or
adc
pop
mov
jmp
xor
sub
add
sub
loope
and
pop
or
addr16
inc
aas
sbb
mov
mov
hlt
jmp
ins
lds
je
ja
fbld
cld
mov
mov
and
push
adc
ja
retf
ret
pop
loop
pusha
ss
xchg
add
or
xor
mov
add
pusha
lock
outs
mov
push
mov
jbe
or
leave
dec
icebp
outs
add
adc
cmp
mov
pop
add
std
mov
mov
fdivr
test
je
mov
lods
jmp
lock
int
xor
sbb
(bad)
fild
sbb
pop
jmp
mov
mov
pop
call
adc
jo
int
jno
add
cmp
or
sbb
aas
push
adc
add
jg
rol
adc
or
or
or
or
or
adc
pop
xlat
add
into
je
dec
(bad)
hlt
dec
or
stos
retf
push
xchg
push
jl
mov
push
pop
clc
pop
xor
or
cmp
cmc
sbb
jns
dec
sub
inc
dec
sub
fstp
fwait
pop
mov
pop
inc
add
(bad)
fstp
fwait
mov
or
ret
dec
sbb
je
pop
and
xchg
mov
js
test
pop
add
lea
scas
rcl
mov
popa
inc
add
loopne
gs
and
pusha
dec
jmp
iret
jno
sub
out
dec
int
pop
or
clc
push
loop
add
push
sti
add
loope
xlat
(bad)
fs
outs
add
loop
add
mov
call
push
sbb
push
test
cmp
rcl
repnz
adc
inc
xlat
dec
cmp
call
dec
push
loopne
cdq
and
push
pop
xlat
loopne
cmp
push
sub
pop
call
clc
iret
sbb
aas
shl
cmp
jne
(bad)
and
movs
arpl
or
cmp
add
cmp
fidivr
je
lock
jb
je
dec
je
fs
pushf
out
mov
cmp
into
inc
mov
sub
loope
fld
fnstsw
je
xor
jmp
jnp
add
cmp
jle
sub
add
and
push
xor
jl
and
xchg
jno
cmp
js
xor
mov
cmc
jmp
and
push
out
stc
sub
jmp
mov
sub
mov
pop
stos
jmp
lea
jmp
ss
push
fistp
cld
sub
mov
and
ins
(bad)
dec
cmp
jae
sub
mov
add
(bad)
push
mov
mov
inc
pop
or
and
add
test
scas
pusha
push
or
cmp
mov
mov
bound
push
data16
xlat
sub
or
jne
xor
xchg
daa
and
pop
ret
pop
xchg
sbb
stc
loope
out
lds
out
inc
mov
cmp
push
je
or
es
mov
push
push
fild
arpl
mov
outs
push
xor
(bad)
loopne
iret
retf
mov
loope
dec
push
jbe
pop
inc
jg
push
xor
and
imul
cmp
add
sub
cmp
add
add
outs
ret
mov
cs
mov
mov
mov
sub
je
dec
adc
adc
adc
xor
adc
jb
ins
mov
mov
sbb
adc
xchg
fld
jmp
and
dec
mov
stos
retf
jg
cwde
sti
std
jl
xchg
or
jmp
xchg
jmp
mov
xor
pop
test
dec
test
inc
ficom
aaa
inc
jle
adc
xchg
xlat
fisttp
jmp
xor
dec
into
dec
sbb
add
fucomi
or
ss
cmp
cld
or
adc
mov
enter
xor
mov
or
pop
cmp
jae
xor
or
das
sbb
outs
pop
ret
jmp
xor
pop
inc
add
push
daa
std
in
push
fcomp
fstsw
sahf
jnp
xchg
neg
pop
push
fild
add
rcr
fcompp
cmp
and
push
push
shl
rcl
mov
inc
xor
push
div
cmps
pop
sbb
pushf
sub
sub
and
xor
std
cmps
je
aad
push
add
aas
popf
(bad)
mov
mov
out
push
pop
pop
cwde
hlt
sub
mov
gs
pop
and
pop
daa
xor
push
add
test
int
fwait
fs
pop
push
int3
pop
inc
cmp
mov
and
add
push
gs
sahf
cmps
stc
add
fstp
jg
xchg
loope
sahf
fwait
dec
push
pop
add
js
cli
icebp
xor
rcr
int
inc
pop
in
add
fabs
adc
pop
out
out
frstor
and
call
aaa
cmp
cmp
icebp
jo
aaa
test
loop
dec
stc
lods
and
and
fcomp
dec
mov
mov
in
pop
inc
or
inc
ficom
je
sbb
xor
jmp
mov
fistp
jmp
shl
cwde
mov
mov
xor
cld
jmp
push
jmp
inc
pop
pop
or
(bad)
jp
inc
push
mov
test
add
jae
add
adc
jo
xor
iret
int3
cmc
pop
mov
js
cmp
mov
add
lods
xor
aad
inc
stos
jmp
pushf
cmp
dec
sar
ret
xor
push
add
je
dec
outs
pop
sahf
hlt
je
inc
fdivr
je
repz
hlt
fdiv
addr16
frstor
dec
add
pop
mov
cld
push
add
mov
cmp
les
add
(bad)
add
inc
mov
dec
adc
xchg
or
cwde
in
inc
or
dec
adc
sub
add
adc
jnp
sbb
pop
xchg
mov
push
add
inc
cs
mov
xor
mov
stc
repnz
mov
and
mov
cli
scas
pop
shr
cdq
or
call
dec
or
mov
sti
lea
push
cmp
mov
mov
pop
pop
lods
fadd
lock
inc
push
jae
imul
outs
cmp
rcl
fsubr
xor
test
cmp
dec
scas
test
lods
dec
mov
mov
cs
mov
push
mov
and
jmp
cwde
sub
(bad)
rcl
push
pop
inc
cmp
call
pop
(bad)
je
std
xor
cmp
ficom
in
pop
xor
inc
loop
cmps
pop
in
adc
or
xor
sahf
gs
jp
cmp
jb
push
add
add
test
lods
sbb
jge
mov
mov
pop
mov
add
jo
je
jns
test
add
ins
add
das
data16
mov
popa
xor
sub
jg
pusha
aas
pop
push
dec
sub
addr16
jb
int3
fst
pop
ret
xor
outs
aaa
inc
add
bound
jo
aaa
out
xor
data16
push
push
mov
and
cmps
dec
fwait
pusha
mov
cwde
jmp
outs
push
push
jae
jae
push
sbb
jecxz
xchg
pushf
pop
cmp
addr16
jae
aaa
push
es
scas
xor
aaa
push
imul
or
ja
push
call
mov
push
and
xor
or
rol
ja
pop
add
xor
(bad)
(bad)
xor
sbb
inc
inc
pop
jne
jge
das
push
imul
cmp
lds
das
aas
pop
or
sahf
retf
add
mov
xor
inc
das
rcl
mov
jp
add
ja
cmp
mov
adc
mov
and
inc
or
mov
jl
xchg
sub
addr16
sub
les
add
push
sbb
jne
cmp
push
cmp
mov
inc
aas
xchg
xor
and
mov
or
or
shr
add
in
sbb
mov
popf
sbb
stos
inc
ret
xchg
pop
jg
or
adc
daa
out
and
cmp
sbb
test
xchg
cdq
or
es
es
pop
jae
ja
and
getsec
push
mov
mov
call
je
inc
dec
mov
mov
lods
loope
cli
jl
add
add
adc
push
jo
add
xchg
and
es
fsubrp
lahf
inc
cmp
je
or
push
jno
sahf
out
(bad)
sbb
or
fmul
sub
adc
adc
jmp
int3
adc
push
dec
add
add
dec
pop
xchg
mov
je
inc
adc
or
je
cwde
and
and
ret
xchg
rol
push
in
test
add
mov
sub
rcl
fild
sub
fwait
sbb
icebp
repnz
mov
sub
or
rcr
(bad)
jmp
adc
sub
pop
imul
pop
mov
sbb
xchg
mov
pusha
xchg
inc
add
sbb
call
outs
push
loopne
lds
or
adc
xchg
popa
and
xchg
xchg
or
adc
sub
in
nop
sbb
and
jmp
pop
adc
add
mov
sbb
fsub
in
rcl
adc
arpl
add
add
jmp
xor
xchg
xchg
adc
mov
mov
aas
mov
jb
or
mov
and
inc
mov
rol
call
sub
fs
mov
test
setne
test
je
jne
inc
je
in
ds
mov
mov
adc
or
push
cmps
fild
add
jo
inc
jle
(bad)
adc
je
xchg
icebp
or
jg
add
mov
(bad)
pop
sub
cmp
sar
jns
adc
jge
pop
clc
cmps
mov
fstp
lea
xor
(bad)
in
jo
sub
inc
mov
add
add
dec
jne
lea
test
mov
js
add
mov
xor
cmp
push
xor
pop
mov
adc
clc
pop
pop
ret
add
mov
cs
inc
or
retf
jae
repnz
add
sub
retf
in
pop
cld
or
dec
lea
dec
push
pushf
xchg
adc
popf
mov
push
fmul
test
push
or
scas
je
ror
rol
inc
sbb
xor
pop
outs
mov
sbb
ror
(bad)
mov
inc
loopne
pop
test
add
rol
popa
pop
ds
xchg
or
jle
adc
mov
sub
pusha
xchg
mov
jae
jl
add
adc
mov
cmp
add
dec
xchg
pop
cmp
and
icebp
movs
xor
jl
scas
jne
fld
sub
jecxz
popf
push
lahf
or
in
lea
lea
inc
or
and
cmp
je
bound
or
sub
in
in
adc
pop
nop
and
(bad)
jbe
mov
sub
adc
ja
pop
xchg
xor
in
lods
pop
or
adc
dec
and
pop
int3
push
push
in
bound
mov
fidiv
dec
mov
add
inc
jle
push
dec
ror
sahf
repz
pushf
jmp
xchg
dec
jle
call
sti
push
ss
daa
xor
out
inc
out
sub
out
add
jl
mov
sub
and
sub
inc
jg
pushf
push
daa
ss
fstp
or
call
push
pop
imul
inc
mov
xor
fcmovnu
fwait
adc
fiadd
and
ss
test
adc
add
test
inc
push
mov
in
(bad)
repz
cmps
mov
adc
mov
push
fcomp
mov
cli
cdq
dec
(bad)
mov
sbb
xor
jg
xlat
add
mov
adc
je
outs
jne
fs
jb
popa
fistp
mov
pushf
adc
je
add
in
gs
cs
jae
add
(bad)
cmps
or
mov
xchg
jo
fiadd
push
mov
xor
or
cmp
add
fadd
imul
out
pop
push
ds
dec
cmp
fadd
add
sbb
mov
jmp
inc
outs
pop
loopne
sbb
jle
mov
out
push
and
pop
push
dec
daa
xlat
inc
test
(bad)
cmps
ret
dec
mov
mov
sbb
add
fidivr
mov
cmps
cmp
pop
fadd
push
lods
or
inc
cmp
(bad)
fwait
add
rol
dec
mov
mov
mov
stos
xchg
es
mov
mov
pop
clc
sar
ret
addr16
mov
add
adc
add
add
mov
mov
push
jp
rcl
dec
mov
jbe
je
add
or
je
(bad)
or
cmp
adc
adc
mov
repnz
mov
sub
mov
cmp
push
xchg
sbb
mov
add
test
lods
test
pop
(bad)
mov
neg
push
adc
jnp
xchg
aam
or
(bad)
clc
out
adc
jne
mov
or
repz
and
push
inc
sbb
push
dec
inc
or
loop
int
pop
cmp
pushf
nop
sbb
pusha
repz
idiv
ss
sbb
push
ret
or
push
inc
pop
or
lods
inc
call
fdivr
xchg
mov
shl
mov
jne
or
inc
pusha
lock
ins
in
jae
ror
sbb
mov
xchg
(bad)
dec
imul
mov
pop
clc
xor
call
add
repnz
cmp
jle
rcr
push
imul
lock
fadd
pusha
sar
aam
clc
or
inc
sbb
pop
ror
fcmove
vxorps
pop
cmp
mov
cmp
push
fild
lock
clc
adc
xchg
call
jo
jmp
daa
jo
clc
or
pop
push
dec
mov
sub
or
fcmovbe
out
sub
jg
adc
push
jmp
loopne
mov
in
stos
scas
fwait
inc
rol
and
dec
in
pop
mov
fstp
cs
cmp
sbb
js
std
mov
in
ficomp
rol
sub
loopne
in
inc
pusha
ins
mov
imul
sbb
cwde
mov
xor
add
popf
int
add
dec
mov
push
add
test
jmp
and
mov
daa
xor
rcl
push
adc
jmp
pop
or
add
adc
push
inc
call
inc
adc
push
sbb
ds
nop
jne
sbb
movs
cli
mov
fadd
movs
cmp
sub
mov
mov
mov
and
xor
and
mov
mov
sub
add
xor
rcl
or
pop
ds
jg
cmp
dec
sub
jp
inc
sub
cs
cli
pop
inc
xor
imul
popa
ficomp
push
sub
or
aaa
jge
ror
jl
inc
xor
lea
cli
popa
stos
cdq
fs
es
inc
pop
adc
mov
inc
dec
jne
adc
add
lea
pop
aam
add
pusha
add
daa
int3
xor
daa
lods
inc
sar
pop
clc
sbb
ficomp
retf
push
pop
xchg
xchg
inc
cmc
cmp
adc
mov
pop
mov
jge
mov
cli
xchg
push
xchg
add
add
and
push
push
sbb
pusha
loopne
(bad)
lock
call
shl
popf
lods
mov
push
fcomp
and
inc
test
cmp
fidiv
jns
lahf
push
scas
push
mov
jnp
jnp
dec
or
push
sbb
sbb
loope
pop
lahf
mov
mov
fdiv
imul
dec
ror
xchg
pop
pop
adc
loope
data16
(bad)
fmul
(bad)
sbb
sbb
mov
xchg
pusha
aas
add
cmp
adc
jo
daa
mov
xchg
jge
daa
ins
scas
jge
xchg
pop
sub
pop
cmps
popf
test
jmp
mov
inc
pop
mov
push
in
add
xor
pop
xchg
ret
push
pop
mov
pop
mov
popa
jne
je
inc
aad
and
push
inc
sbb
push
popf
cmps
stos
aad
movs
lds
aad
test
jmp
cmps
aam
ss
xchg
ror
xchg
fidiv
shr
lea
out
mov
pop
push
or
mov
call
ins
cmc
iret
ins
push
out
push
hlt
cmps
mov
dec
cmp
jl
push
push
sub
mov
jo
cmp
push
fstp
mov
(bad)
cmp
adc
push
mov
jmp
or
out
xchg
mov
xor
ror
or
jnp
je
movzx
dec
mov
inc
cdq
sbb
cmovns
fs
adc
or
pop
in
stos
add
mov
rol
mov
lods
mov
je
dec
add
mov
pop
cld
mov
popf
popa
rcl
addr16
cs
bound
leave
dec
outs
xor
xor
aad
clc
or
or
mov
rol
movs
call
mov
(bad)
adc
(bad)
call
mov
adc
lahf
les
mov
mov
add
pop
add
es
mov
jg
inc
mov
mov
stc
inc
mov
shl
sub
mov
jbe
ret
jle
cli
mov
div
loopne
push
mov
pop
xlat
or
(bad)
sar
out
fimul
sub
jl
mov
mov
inc
dec
jne
inc
push
pop
rol
f2xm1
cmps
test
add
xchg
(bad)
mov
add
enter
sbb
int3
adc
and
ss
xor
dec
add
les
aam
mov
mov
mov
inc
bound
xor
push
clc
into
push
cs
(bad)
loop
icebp
jne
icebp
add
cmp
cmp
inc
es
push
shl
add
fidiv
mov
xchg
movs
sbb
(bad)
cmps
sbb
fisubr
leave
int
bound
push
inc
add
jg
push
imul
mov
add
mov
sub
and
sub
xor
xchg
mov
movzx
and
fwait
mov
test
hlt
gs
sbb
mov
inc
mov
jmp
inc
pop
push
xchg
aam
imul
xchg
ret
adc
inc
add
mov
call
jmp
into
push
mov
add
scas
into
inc
add
rcr
(bad)
mov
cmp
je
add
dec
push
(bad)
adc
xchg
loopne
aaa
fsub
sub
adc
shl
clc
test
cmp
cmp
les
push
outs
adc
add
sar
(bad)
push
and
push
jns
pusha
mov
call
jmp
xchg
jnp
ja
pop
sbb
popa
aam
jg
mov
mov
cmps
mov
(bad)
loop
mov
mov
add
out
sbb
xor
xchg
push
mov
scas
pusha
pushw
mov
sub
outs
sti
adc
cmp
sbb
adc
jno
setne
pushf
enter
pushf
es
addr16
xchg
mov
push
pop
sub
push
sbb
mov
pop
es
call
jmp
sbb
add
or
or
or
(bad)
sar
js
and
ds
daa
add
sub
loopne
or
clc
mov
in
adc
xchg
mov
nop
cmp
lock
pop
mov
sbb
inc
cwde
shl
add
adc
pusha
in
mov
xchg
adc
(bad)
jnp
dec
cmp
movs
jg
shl
xchg
push
hlt
mov
inc
push
xor
gs
sub
icebp
push
into
sbb
dec
sub
add
mov
cmp
out
mov
movs
bound
mov
ficomp
add
lods
ss
imul
adc
push
sub
xchg
mov
push
cmp
and
cmp
(bad)
xchg
add
fisubr
loop
cld
ds
push
iret
and
sbb
ins
or
data16
cmp
add
lahf
dec
inc
pop
fsubr
inc
mov
pushf
mov
fdivr
enter
xor
mov
pop
mov
mov
mov
dec
mov
jo
push
out
xchg
add
adc
add
mov
jno
or
aaa
lods
in
test
pop
mov
jne
mov
inc
mov
jmp
jnp
and
add
or
lds
dec
popf
imul
cmp
in
pop
adc
jmp
jnp
jmp
and
dec
jne
std
ds
push
pop
xchg
bound
mov
pop
movs
je
adc
xchg
cwde
mov
and
adc
test
mov
sar
pop
inc
lock
xchg
adc
or
pop
jbe
rcr
rcr
mov
cmp
test
sbb
or
pop
jo
sti
pop
cmp
retf
pop
lods
cmp
setg
ret
test
ds
mov
(bad)
and
add
fadd
scas
cdq
loopne
xchg
ror
mov
cmp
dec
pop
mov
mov
call
xchg
or
scas
leave
adc
and
into
adc
mov
mov
xor
cs
cmp
in
xor
push
cmp
jo
push
push
add
js
add
ror
adc
inc
ins
adc
cmp
mov
inc
xor
pop
and
ins
or
mov
lahf
shr
or
sbb
cmp
add
sti
(bad)
mov
cld
push
mov
bound
lock
pop
inc
xchg
aas
inc
push
jmp
push
pop
push
fadd
pop
fcom
xchg
xchg
clc
ret
idiv
pop
iret
pushf
and
or
push
push
inc
push
push
inc
dec
test
or
adc
retf
add
or
arpl
enter
popa
ins
add
jnp
movs
div
jns
and
and
bound
jp
cli
xchg
add
xchg
dec
out
and
arpl
and
sub
pop
jmp
jb
dec
outs
fs
arpl
push
jne
out
pop
mov
jo
jb
gs
xor
fwait
loopne
loopne
pop
add
push
mov
inc
inc
xchg
jae
jb
jns
pop
lock
test
dec
push
gs
outs
mov
popa
ins
ins
inc
enter
add
cmp
sbb
cld
(bad)
sub
adc
ja
push
push
imul
add
dec
mov
xchg
ins
jbe
jge
xchg
sbb
or
add
or
mov
ins
push
adc
push
inc
js
gs
outs
outs
pop
adc
pop
ja
mov
push
inc
dec
inc
gs
test
loopne
jge
inc
imul
in
add
jne
sahf
mov
push
je
addr16
sbb
or
loope
jg
inc
pop
inc
inc
push
dec
dec
inc
dec
mov
enter
sub
pop
cmovne
out
rol
aas
or
int3
xor
fidivr
inc
loope
lahf
add
ja
pop
jl
sbb
add
bound
push
outs
jne
pop
xor
out
sub
mov
pop
push
jae
jb
jo
outs
outs
xor
dec
adc
test
sub
gs
shl
jo
out
sub
adc
outs
sbb
rol
lock
cdq
cdq
adc
add
push
jle
int3
adc
xchg
pusha
pop
outs
andps
dec
inc
mov
pushf
pushf
inc
cmp
dec
cmp
call
or
cwde
xchg
int3
sbb
stos
ficom
fsubr
pop
fsubr
mov
shr
outs
xchg
push
je
into
mov
inc
xor
jmp
test
add
adc
fnsave
add
iret
or
cmps
xchg
mov
cwde
and
jns
dec
pop
push
cmp
adc
sti
mov
dec
(bad)
xchg
push
call
addr16
push
mov
aaa
pusha
add
adc
mov
inc
(bad)
mov
add
add
lock
mov
add
mov
mov
mov
add
ror
push
add
popa
jl
xor
lods
adc
and
in
mov
add
cld
test
jle
mov
ins
xchg
sub
add
dec
jne
dec
mov
push
or
mov
imul
dec
add
je
std
(bad)
jmp
sub
sar
lea
ins
mov
in
cmp
jne
xor
jg
jo
in
xor
push
lock
adc
ds
mul
adc
cmp
ret
rol
scas
lock
mov
sub
inc
fidivr
es
add
add
aaa
mov
mov
inc
popa
mov
es
loope
add
stos
std
(bad)
fcomip
stos
test
outs
add
fsubr
(bad)
sti
adc
addr16
add
jp
push
add
add
mov
pop
jl
push
int
mov
xlat
sub
sar
dec
shl
cmp
dec
movs
adc
cmp
jo
outs
movs
outs
jo
daa
inc
mov
add
or
xor
dec
jmp
pop
loopne
mov
pop
push
cmp
jg
adc
loope
xlat
scas
and
mov
clc
push
sbb
cmp
je
test
dec
aaa
lods
(bad)
pop
or
or
sub
jo
pop
cld
(bad)
mov
sub
push
adc
and
sub
sub
retf
add
sbb
jne
add
js
jecxz
shl
ins
bsf
shr
add
jns
xor
outs
sbb
mov
rcr
xor
ret
pusha
mov
jne
mov
das
sti
inc
cld
ret
sub
xor
adc
outs
push
test
cmc
sahf
adc
or
mov
add
add
ins
sbb
push
sub
ftst
fstsw
fwait
sahf
rcr
call
leave
fistp
fld1
fchs
push
fprem
add
fstp
cmp
mov
push
mov
js
adc
ds
mov
shr
je
enter
addr16
cmp
test
adc
or
adc
in
mov
leave
stos
ret
aas
and
std
(bad)
mov
and
cdq
ds
aam
pop
mov
ret
scas
xchg
mov
mov
jmp
inc
popa
adc
jb
xor
scas
and
cmp
inc
arpl
jge
adc
push
cwde
add
push
add
add
cmp
add
push
loop
push
push
jns
jl
les
int3
and
push
cmp
jl
out
inc
xor
ja
in
dec
into
clc
add
push
push
imul
outs
dec
ins
jo
ins
jge
or
sub
iret
pop
add
adc
mov
fild
xor
jb
arpl
pop
popa
jne
je
ins
rcl
fcom
adc
cmp
je
in
repnz
or
or
xchg
pop
fmul
cli
data16
hlt
inc
pop
and
jo
jo
sbb
mov
popa
jb
daa
mov
cmps
pop
dec
jb
push
(bad)
mov
push
ins
ds
push
push
push
gs
xor
pop
add
or
fnstsw
ins
rcl
add
sub
pmaxub
mov
add
adc
sbb
fnstcw
mov
or
imul
js
or
add
add
push
fistp
adc
mov
mov
dec
cmp
mov
mov
adc
pop
sbb
jge
or
and
xor
push
ror
ret
sbb
or
inc
or
test
dec
mov
sbb
sbb
addr16
inc
jno
mov
adc
or
je
popa
jae
fcom
add
stos
xchg
inc
xchg
stos
or
mov
add
fst
ins
dec
and
imul
mov
push
scas
fild
pop
lea
sbb
add
mov
dec
cmps
clc
cmps
ret
(bad)
pop
jp
add
add
and
sbb
ret
sub
clc
mov
adc
jnp
enter
hlt
adc
cmp
cmp
cmp
retf
outs
aad
fbstp
repz
dec
ss
pop
lds
adc
clc
ja
outs
add
add
jle
ret
out
mov
cmp
add
or
out
aas
mov
(bad)
aas
pop
inc
popa
js
inc
push
push
inc
jne
push
pop
mov
adc
or
xor
lods
push
xchg
jo
inc
sbb
or
pop
js
sbb
add
jo
and
jg
cmp
adc
mov
mov
lock
loop
or
out
mov
mov
retf
jmp
ret
inc
sbb
pop
xchg
mov
jg
xchg
or
shr
ret
retf
and
push
mov
les
daa
in
push
shr
movsx
data16
leave
mov
mov
push
mov
pop
mov
push
ret
push
jge
retf
dec
add
xor
add
test
(bad)
es
dec
mov
mov
mov
jbe
arpl
in
mov
jb
ret
pop
and
ja
and
iret
repz
push
enter
out
(bad)
clc
cmp
mov
mov
jb
and
adc
test
mov
lods
or
jg
pop
out
iret
sub
jb
push
or
and
mov
jns
sar
inc
inc
sub
(bad)
adc
push
or
add
dec
mov
movlps
xor
or
mov
arpl
pop
pop
pop
jae
pushf
fadd
cld
jmp
xor
retf
loope
sar
test
jge
jae
sbb
jbe
scas
scas
cmps
pusha
(bad)
mov
dec
push
add
sbb
mov
add
cmp
pop
pop
jae
jmp
or
pop
add
iret
fld
fcom
or
sahf
out
and
inc
fisubr
pop
cmp
xcrypt-ofb
cmps
sub
push
mov
or
fstp
fadd
loopne
aaa
and
popa
nop
fldz
fld
fcompp
pop
push
adc
or
pusha
mul
fstp
inc
cmp
iret
cmp
mov
fdiv
inc
dec
(bad)
fsubr
and
ss
lds
pop
ss
and
add
fild
test
rcr
aas
adc
cmp
fadd
push
mov
pusha
ins
jmp
popa
add
in
data16
jne
add
or
inc
or
fbld
outs
jbe
ins
adc
jbe
pop
and
das
xchg
call
out
pop
xlat
test
(bad)
pop
add
mov
fnstcw
in
push
hlt
sti
sti
cmc
adc
add
push
mov
or
dec
jl
into
test
or
iret
mov
out
out
xor
push
pop
sbb
sbb
mov
push
sub
in
push
mov
jle
ins
das
aam
mov
add
sub
push
or
inc
and
in
sub
xchg
xchg
ror
or
fsubr
pop
add
aam
into
sbb
scas
push
push
add
dec
je
add
mov
je
jmp
add
or
or
or
out
int3
add
stc
push
imul
lds
ret
or
mov
inc
push
fs
adc
stos
add
cmps
cli
mov
call
sbb
fsub
mov
call
xlat
data16
pop
push
sub
xor
xor
add
mov
outs
and
imul
repz
jge
add
add
scas
(bad)
xchg
jne
ficomp
or
add
pop
outs
loopne
xchg
cmp
cdq
or
cmp
adc
push
jns
xor
xlat
cld
push
retf
or
and
pop
mov
aas
push
adc
or
jbe
das
and
jg
sbb
sub
cmp
jb
mov
mov
inc
inc
rep
mov
lea
lea
stos
pop
fwait
jmp
push
adc
je
mov
idiv
mov
mov
sub
pop
retf
and
add
xchg
add
mov
lods
xchg
(bad)
addr16
or
add
cs
gs
xchg
cmp
inc
cdq
in
in
add
xor
mov
sub
(bad)
mov
aaa
cmps
cmp
and
lea
xchg
call
sub
push
shr
adc
lea
adc
jp
and
sub
or
or
push
xor
rcr
mov
jbe
pushf
aaa
mov
xlat
jbe
or
in
and
push
or
mov
bound
fiadd
test
aam
lea
push
fld
adc
aaa
(bad)
mov
inc
jb
(bad)
xchg
clc
mov
xchg
aas
lock
xor
mov
xor
call
(bad)
cld
cmp
jl
pcmpeqw
dec
push
lock
and
jg
and
sbb
sbb
push
test
and
jge
or
push
and
outs
sub
mov
xchg
loope
inc
xchg
and
or
test
scas
mov
mov
push
mov
dec
inc
dec
jne
push
xchg
test
add
push
fcmovnu
outs
cdq
or
sub
add
adc
out
das
cli
fstp
dec
mov
or
sbb
enter
xor
or
mov
cmp
in
sub
xchg
cmp
lods
data16
cld
cmps
rcpps
mov
jmp
adc
or
sub
ja
cmp
inc
mov
add
je
imul
or
adc
adc
push
sbb
je
jmp
cmps
cmp
loope
mov
lock
outs
inc
mov
sub
pop
les
add
cmp
push
mov
mov
dec
sbb
mov
iret
adc
inc
test
jo
retf
ret
adc
mov
xlat
dec
adc
dec
mov
cmc
into
jo
cmp
cmps
cmps
cld
outs
adc
adc
cs
xchg
ins
clc
push
lea
sbb
ins
clc
jo
sahf
pop
mov
adc
pushfw
nop
adc
mov
inc
mov
ficom
pop
mov
shl
add
scas
cmp
push
lea
xor
mov
div
push
mov
test
xor
jb
push
jmp
xor
or
scas
ss
or
aam
enter
mov
dec
lods
or
lea
jg
int3
or
add
sub
pop
sbb
inc
push
or
adc
sbb
out
adc
inc
or
das
pusha
shl
fld
ins
js
loope
pop
repz
and
add
cmp
test
xor
push
mov
movs
push
outs
and
leave
retf
mov
push
or
or
adc
mov
shr
shl
aaa
cmp
add
jecxz
add
xor
and
fbld
adc
inc
add
or
jns
mov
ficomp
sub
sbb
xor
xchg
int3
retf
jo
out
adc
cmp
add
pop
in
addr16
daa
pop
cmp
add
je
pop
in
fild
in
lea
retf
repnz
add
fiadd
jne
das
clc
mov
xor
xor
cld
not
add
test
outs
push
clc
pop
lock
jle
ss
into
call
invd
add
sub
or
xor
out
cmp
out
sbb
div
sbb
sub
sub
sub
mov
sbb
xor
ja
xchg
mov
xor
sub
cmp
jbe
and
adc
jns
test
or
cld
jae
add
push
fild
in
in
(bad)
push
inc
adc
xchg
popa
mov
xchg
push
pushf
scas
rcl
int
jns
cmc
or
and
ds
repz
ins
mov
pop
pusha
or
mov
and
fiadd
and
and
loopne
pusha
and
xor
add
add
sub
push
fisub
add
or
sbb
aaa
enter
ret
add
dec
loop
fcos
cs
mov
jg
shl
add
pop
add
mul
inc
add
dec
sbb
int
dec
sub
push
xchg
pop
xchg
pop
sub
and
mov
pop
or
(bad)
retf
mov
ja
(bad)
repz
loopne
mov
push
xchg
repz
outs
bound
inc
xor
sub
adc
sbb
add
loop
hlt
push
add
adc
xor
cmp
pop
mov
pop
adc
fs
mov
pop
in
fldenv
pop
pop
adc
cmp
pop
push
popf
bound
adc
(bad)
pop
lods
mov
out
adc
(bad)
sub
adc
sub
(bad)
mov
shl
or
adc
cmps
adc
fld
out
pop
and
imul
sbb
or
imul
xor
add
call
fidivr
loopne
je
or
ret
add
or
jnp
inc
clc
outs
fadd
and
inc
add
push
inc
outs
ins
ins
arpl
dec
outs
or
arpl
(bad)
pop
and
frstor
dec
pop
arpl
fs
mov
gs
outs
jbe
or
je
popa
outs
push
sbb
ins
xor
arpl
pop
add
cmps
lods
ins
(bad)
cmp
mov
or
ja
dec
gs
adc
add
fdiv
mov
push
inc
xor
popa
jb
jo
jae
imul
out
inc
scas
push
xchg
aaa
lahf
out
cmp
divps
xchg
and
add
ins
inc
outs
out
mov
mov
adc
jbe
ud2
and
pop
imul
or
iret
pop
sub
fadd
mov
mov
mov
inc
xor
femms
(bad)
sub
pop
adc
jbe
movs
idiv
adc
inc
jb
outs
jb
pop
sub
sub
push
rol
adc
outs
pop
mov
mov
call
push
jne
ins
mov
gs
mov
sub
xor
or
inc
mov
xor
jne
out
xor
outs
push
or
inc
ja
dec
jne
je
adc
or
jle
aam
inc
jg
or
mov
inc
sbb
jbe
inc
add
inc
jnp
mov
in
jg
in
sub
inc
inc
jae
inc
jns
es
add
pop
push
in
fs
int
mov
dec
aam
es
es
jmp
push
sub
push
inc
ins
popa
jae
fwait
or
push
leave
and
in
inc
enter
leave
xchg
sbb
sbb
fsubp
xor
inc
outs
jmp
or
les
sub
pop
and
ror
ret
jne
sbb
(bad)
and
mov
xor
jg
(bad)
sub
outs
mov
(bad)
jo
adc
pop
mov
test
lock
pushw
jnp
mov
add
sub
pop
add
clc
js
push
xadd
jo
dec
data16
test
mov
sub
or
inc
scas
dec
aam
dec
call
bound
neg
xor
dec
inc
nop
imul
or
pop
test
adc
add
or
pop
add
out
sub
add
dec
or
fsubr
inc
pop
ins
dec
mov
imul
inc
xor
dec
dec
hlt
pop
sub
aad
xchg
dec
xor
inc
outs
jp
les
std
push
inc
jno
jo
cmps
mov
jns
or
mov
jmp
push
jae
add
inc
test
dec
jmp
fidiv
fs
sub
sub
ror
data16
arpl
pop
and
and
jae
and
sbb
pop
mov
les
jo
inc
xor
pop
cld
das
popa
adc
jmp
xor
int
pop
sti
jmp
inc
mov
add
dec
push
or
sub
adc
in
or
xor
(bad)
pop
jb
dec
pusha
outs
stos
jo
sub
jle
out
pop
mov
dec
gs
loopne
adc
outs
outs
js
pusha
adc
jecxz
cs
or
add
xor
xor
xlat
fist
mov
dec
aaa
and
mov
sub
jb
popa
dec
mov
xchg
shl
outs
addr16
imul
adc
sub
rol
push
arpl
xor
mov
pusha
pop
sub
inc
cld
sub
movs
dec
shl
cmovne
add
ins
fsubr
in
push
adc
pop
loop
imul
push
or
pop
push
adc
shl
add
popa
imul
mov
add
pop
ins
inc
or
popa
rol
sahf
mov
pop
or
push
ror
xor
add
pavgb
cli
scas
push
adc
outs
jne
inc
xor
inc
stos
or
add
xchg
push
xchg
and
or
bound
mov
stc
arpl
adc
sbb
and
pop
sub
or
sbb
or
out
sub
loop
cmp
fsubr
mov
push
push
push
(bad)
repz
push
xor
dec
fcomp
out
mov
les
push
(bad)
loop
xor
arpl
aam
lock
rol
shl
jno
mov
inc
xchg
icebp
push
imul
or
call
outs
sbb
fcomp
add
xor
push
je
adc
ret
push
out
adc
cmps
mul
push
cmp
jl
add
ror
xchg
lock
leave
daa
adc
jl
pop
inc
add
push
loope
xor
xor
cmp
ins
mov
or
xor
jae
jo
pop
add
dec
xor
add
shl
push
fild
jecxz
ss
pop
mov
push
add
push
push
or
js
ret
pop
lahf
fsub
add
pop
mov
sar
or
fwait
sub
add
(bad)
mov
push
pop
cmp
nop
sub
fld
add
push
shl
scas
loopne
push
scas
pusha
ins
mov
test
jns
popa
hlt
sbb
xlat
pop
sub
and
mov
cmp
sub
jge
shl
push
lahf
scas
js
pop
mov
mov
scas
cmp
enter
adc
xor
push
je
data16
pop
rol
pop
int3
loopne
push
es
fld
enter
pop
es
push
cmp
jnp
mov
add
push
sub
rol
adc
xchg
xchg
idiv
arpl
icebp
or
push
push
sysret
xchg
mov
bswap
inc
wbinvd
add
fisttp
or
test
mov
imul
jno
scas
(bad)
verw
js
(bad)
adc
adc
movd
fcmovne
jmp
mov
xchg
test
sub
xor
xor
adc
ret
xor
xor
add
imul
or
addr16
xchg
dec
push
mov
push
jb
or
add
dec
pushf
outs
sub
jae
loopne
sti
adc
fwait
mov
add
sub
sub
push
mov
mov
mov
stos
and
das
xor
mov
jno
or
aaa
fcom
xchg
pop
or
js
cmc
dec
ret
pop
cmp
mov
hlt
xor
jae
sub
repnz
ret
ja
cmp
ins
ficomp
xchg
pop
and
rol
mov
imul
(bad)
ds
inc
call
pop
imul
pop
movs
or
sbb
ins
jno
add
add
movs
jno
or
push
jp
rcl
movs
sub
xchg
xchg
xchg
xchg
jne
mov
xchg
(bad)
clc
ss
mov
jo
add
add
ja
push
jne
ins
add
outs
sub
mov
mov
jp
dec
jae
in
sub
shl
pop
xchg
dec
mov
mov
and
or
cwde
fnstcw
inc
push
mov
outs
pusha
and
pop
fs
lea
shl
inc
popa
jae
xchg
mov
inc
adc
mov
or
sbb
fiadd
xchg
int3
stos
mov
mov
mov
movs
mov
xchg
push
push
dec
cmps
xchg
add
mov
mov
mov
xor
hlt
adc
pushf
push
aas
mov
out
pushf
fld
add
and
sub
pop
iret
mov
test
add
and
sub
fadd
xlat
ja
inc
add
sbb
sbb
jno
ja
or
inc
jmp
mov
retf
push
push
mov
imul
dec
stos
(bad)
cmps
push
outs
mov
pop
ror
call
fild
add
add
pop
test
arpl
add
movs
not
xor
test
sub
test
jl
mov
mov
stos
push
out
add
and
fsub
and
aam
out
adc
xor
fsubr
sahf
cmp
push
add
mov
xchg
rol
add
or
or
pop
gs
mov
popa
ror
in
test
push
xor
push
mov
adc
push
int
mov
mov
cmp
xor
and
dec
lea
xchg
daa
popa
add
movs
fst
aam
pushf
cmps
mov
push
sub
pop
in
fadd
inc
pop
pop
mov
xchg
add
dec
data16
push
mov
js
pop
(bad)
inc
xor
add
sbb
jbe
adc
ja
stos
popa
sbb
aad
pop
jns
fild
or
push
and
add
retf
add
subps
movs
hlt
movs
shr
adc
jmp
ins
(bad)
push
ja
cmp
into
sahf
les
(bad)
mov
push
push
(bad)
pop
push
rcr
loope
push
mov
rcl
jle
add
cmp
out
ds
outs
shl
sbb
vmread
and
push
test
in
sub
inc
(bad)
cmp
mov
add
outs
shl
xor
adc
push
lea
add
(bad)
or
inc
sub
adc
push
std
or
add
lods
(bad)
cmp
out
test
pop
das
xchg
push
fild
and
int
fisttp
pop
mov
(bad)
mov
jmp
add
mov
rcr
frstor
adc
mov
push
add
fnstsw
pop
add
dec
add
test
mov
jp
ins
mov
add
push
mov
and
sbb
lea
call
call
dec
xor
ficomp
dec
inc
scas
iret
aam
adc
jbe
jbe
stos
cmp
js
iret
out
mov
inc
iret
inc
clc
push
iret
je
mov
mov
mov
cli
and
xor
test
(bad)
fiadd
or
std
pusha
jmp
xor
scas
cmps
pop
and
fnstcw
lea
sub
xor
xor
mov
sub
sub
cmp
push
pop
aas
and
mov
add
popaw
adc
adc
add
sub
xchg
out
(bad)
ror
pusha
xor
mov
loop
mov
pushf
pop
dec
orps
mov
lock
or
jo
push
mov
jb
adc
pusha
pop
adc
push
xchg
cwde
adc
push
pop
lea
std
fdiv
clc
rcl
clc
inc
adc
add
or
clc
jp
(bad)
push
mov
xchg
and
imul
sbb
push
and
push
sbb
or
in
imul
ins
xor
adc
or
inc
jns
jp
xor
dec
gs
int3
or
or
push
ds
xchg
sbb
adc
outs
inc
fsubr
(bad)
(bad)
xchg
add
not
add
dec
sbb
mov
push
loop
adc
fld
fchs
add
push
fiadd
add
mov
and
sub
or
sbb
pop
mov
lods
std
mov
scas
and
outs
xor
xchg
ret
xor
pop
or
add
mov
mov
sub
shl
sbb
ror
jo
inc
gs
addr16
mov
jg
jge
push
fldcw
add
enter
add
xchg
inc
push
sbb
jbe
inc
pop
and
ins
or
inc
pop
and
inc
cmps
iret
inc
pop
mov
push
pop
xchg
inc
scas
add
xchg
add
out
xor
fwait
shl
je
fs
and
jb
rcr
jp
shl
adc
dec
cmp
or
add
or
sahf
mov
mov
or
push
xor
into
test
mov
sub
push
fld
pop
div
pop
cmp
xor
mov
mov
cmp
adc
and
sub
or
mov
je
mov
rol
sbb
loope
push
jle
add
pop
adc
mov
add
push
push
cmp
adc
cmp
aam
daa
cmp
push
mov
lds
outs
arpl
outs
or
fldenv
or
pop
add
mov
adc
or
jns
mov
retf
mov
cmp
(bad)
dec
or
sbb
inc
inc
clc
into
stc
add
test
aaa
jo
adc
inc
pusha
lock
rol
sbb
ins
adc
out
ja
pop
in
dec
inc
push
stos
inc
adc
lahf
sbb
out
or
pop
cmc
pop
call
pop
jb
sti
fisubr
scas
pop
lods
mov
mov
aaa
xchg
push
jl
int
loopne
inc
call
jbe
aas
scas
cmp
or
je
outs
jo
sbb
adc
sbb
push
fmul
gs
xchg
inc
jae
or
nop
mov
push
fisub
cmc
inc
loopne
test
mov
jl
or
mov
cmc
sbb
jge
pop
pop
pop
pushf
arpl
sub
sub
mov
loopne
loop
jae
adc
fcom
inc
cmp
sbb
sub
mov
sub
jbe
pop
cmovbe
arpl
clc
mov
jbe
imul
xchg
cs
push
outs
xchg
add
test
adc
test
cmp
inc
std
dec
inc
push
mov
icebp
(bad)
cmp
or
add
inc
or
adc
jp
mov
mov
out
inc
sub
ret
xchg
and
mov
pop
lea
daa
dec
icebp
or
repz
lock
pop
xor
sbb
in
hlt
xor
adc
and
xchg
mov
jle
push
mov
mov
push
ret
or
adc
jmp
shr
iret
enter
add
ret
add
push
ins
jb
pop
enter
ins
mov
or
shl
sbb
jmp
outs
out
push
out
adc
xchg
es
sbb
sbb
pop
ins
pop
fs
gs
add
push
aad
pop
adc
popf
dec
pushf
push
add
inc
xchg
inc
mov
add
idiv
cld
pop
es
mov
jg
(bad)
sub
mov
jge
jg
jle
repz
push
and
cwde
sbb
xchg
mov
push
add
add
sub
mov
push
sbb
mov
pushf
pushf
(bad)
test
js
push
mov
push
cmp
sub
inc
push
sbb
adc
cmp
pop
and
pop
add
or
jb
sbb
pop
popf
xchg
lahf
mov
mov
fiadd
xor
sti
mov
sbb
add
pop
loop
mov
and
pop
lahf
or
or
(bad)
rcr
mov
call
scas
push
cmp
or
movs
inc
sub
pop
push
(bad)
xor
pcmpgtw
xchg
leave
enter
(bad)
in
shl
ror
pop
sbb
jae
or
imul
in
shr
js
push
mov
stos
sbb
xchg
push
cmp
adc
enter
jo
in
mov
xor
enter
push
push
jo
loope
dec
or
or
outs
adc
jo
in
dec
or
mov
ins
mov
shl
dec
jmp
pushf
pop
jbe
loope
push
mov
push
dec
lods
pusha
and
jg
dec
inc
mov
sub
pusha
rol
adc
xor
imul
add
mov
paddsb
fcomip
push
cmp
and
push
add
push
add
ins
mov
cmps
ds
retf
inc
sub
xor
fsub
ins
sahf
add
or
or
inc
cmps
dec
dec
sub
sbb
push
lods
sub
ins
pop
fstp
movs
xchg
arpl
arpl
mov
mov
bound
or
pop
aas
pop
out
xchg
lods
scas
or
in
add
mov
popf
jbe
mov
mov
pop
mov
mov
aad
inc
mov
pusha
sub
mov
and
dec
mov
pop
mov
sbb
inc
adc
adc
in
dec
fcom
cdq
mov
pop
xchg
lock
push
lds
mov
xor
ja
jo
adc
push
ins
(bad)
mov
fstp
add
sbb
push
lock
pop
add
push
daa
pushf
pop
inc
mov
popf
daa
lock
xchg
je
push
inc
pop
fadd
aaa
pop
push
and
and
cs
inc
jmp
xchg
fnstsw
test
or
loopne
dec
mov
inc
mov
or
sub
pop
pushf
pop
pop
push
std
and
or
xor
mov
mov
(bad)
aaa
push
movups
pusha
jno
jne
icebp
out
sub
cwde
sahf
or
xchg
inc
inc
adc
jecxz
imul
shl
inc
or
push
test
arpl
pop
push
or
xor
push
ja
sub
movs
sbb
mov
dec
push
mov
adc
push
sub
inc
pusha
lea
jb
xchg
test
xchg
adc
ret
xchg
adc
int
test
iret
add
xor
fild
dec
and
cld
mov
in
sub
jbe
or
xchg
enter
xchg
sbb
dec
push
jo
or
mov
rcl
or
inc
xchg
adc
(bad)
or
sahf
dec
mov
add
add
or
shl
pushf
fsubr
or
push
mov
xchg
adc
push
pop
iret
pop
push
js
test
pop
iret
outs
add
cmp
sbb
sub
xchg
out
xor
neg
lea
xor
popa
push
mov
dec
es
adc
outs
adc
lods
adc
mov
adc
adc
ret
pop
(bad)
sti
dec
xor
add
mov
xchg
scas
(bad)
(bad)
jo
jno
fld
adc
or
and
movs
es
mov
inc
sbb
inc
jmp
inc
add
push
dec
inc
jl
fs
or
mov
and
neg
add
sub
mov
jae
add
lahf
pop
outs
(bad)
and
and
pop
jecxz
pusha
adc
add
pop
hlt
mov
add
sbb
shr
dec
jb
sbb
mov
sar
pop
sub
das
cmps
sbb
popw
sbb
adc
sar
popa
std
dec
stc
dec
lock
nop
into
adc
inc
dec
popa
js
(bad)
lock
mov
push
push
call
jl
fsub
sbb
mov
push
mov
test
xor
dec
sbb
xor
sub
cmp
or
int
inc
es
sti
adc
sbb
add
push
or
fsub
hlt
das
adc
aam
add
clc
jg
pop
iret
rol
js
lds
adc
adc
adc
or
mov
adc
retf
and
retf
push
mov
adc
mov
or
sbb
or
xchg
data16
adc
retf
pusha
ror
out
and
add
ret
and
xchg
iret
or
dec
sub
iret
lods
and
aas
(bad)
lods
popa
pop
jo
(bad)
ja
xor
cs
imul
lods
xchg
stos
add
xor
fmul
jbe
adc
cs
add
rcl
jecxz
popw
and
ss
xor
and
mov
sbb
and
push
adc
mov
shl
xchg
cli
inc
push
ss
cmc
js
push
xchg
cmova
and
imul
cmp
xchg
inc
or
mov
cmp
popa
ror
movs
test
pop
xor
leave
aaa
shl
movs
inc
jno
sar
mov
add
add
out
outs
add
repnz
xchg
movs
or
or
fisubr
push
outs
mov
xor
jno
push
stc
fs
add
test
test
xchg
inc
(bad)
(bad)
pusha
scas
aas
(bad)
push
and
inc
fistp
pop
add
jae
dec
adc
js
pop
punpckldq
pop
inc
test
add
mov
scas
cwde
pusha
mov
pop
sub
popf
sbb
mov
pop
aaa
push
mov
pusha
xlat
mov
dec
mov
inc
and
push
aam
or
loope
mov
pop
mov
mov
add
or
scas
test
movaps
mov
jne
inc
or
add
cdq
imul
mov
ss
gs
jbe
rcl
in
push
in
inc
or
or
pop
(bad)
popa
mov
pop
popf
xor
cmp
push
cmp
push
ror
ins
jns
fwait
enter
fld
adc
push
imul
mov
enter
enter
clc
jo
mov
cmp
xor
push
cmps
loope
add
pop
pop
daa
lods
ror
daa
or
push
in
add
fiadd
pop
mov
fwait
std
fbld
jae
push
push
or
data16
ss
inc
enter
imul
data16
mov
adc
and
xlat
cmp
pop
mov
xchg
xchg
push
push
pusha
or
adc
and
dec
scas
sub
sub
call
ja
and
nop
xchg
shl
fsubr
les
movs
rsm
push
ret
jne
das
in
call
add
aaa
or
pop
xor
or
xor
xchg
jl
dec
in
add
pop
inc
mov
addr16
mov
les
pop
les
retf
call
aas
mov
push
aas
shl
(bad)
xor
outs
jb
dec
sbb
bound
pop
jo
adc
sbb
sbb
and
sub
pusha
mov
fistp
pop
push
jmp
in
adc
ret
lock
stc
test
jb
popa
dec
cmc
inc
sub
push
and
push
je
rol
sbb
push
xor
add
in
or
popa
xchg
cmp
xor
jecxz
jmp
or
inc
mov
rcl
loopne
jg
test
(bad)
fnstenv
push
mov
pop
mov
pusha
fmul
in
ss
xchg
enter
scas
mov
clc
xchg
loope
jo
adc
popa
ins
imul
push
pop
xor
lods
sub
mov
pop
adc
or
inc
ret
mov
push
mov
loopne
dec
or
ror
inc
jne
cmp
popa
jb
sahf
ins
push
push
mov
mov
(bad)
fidivr
mov
inc
addr16
add
test
(bad)
add
push
loopne
sbb
outs
(bad)
imul
leave
fdivr
mov
popa
sub
out
pop
adc
popa
sbb
les
rcl
mov
or
or
loopne
fsubr
test
repnz
ret
and
xlat
mov
mov
scas
ret
(bad)
mov
push
maxps
das
mov
ficom
pop
pop
add
imul
sub
and
inc
or
jne
adc
push
add
mov
add
nop
dec
pop
jp
int
mov
ds
outs
outs
retf
dec
mov
push
mov
popa
mov
mov
pusha
jb
jns
or
sbb
arpl
mov
add
cmp
or
mov
jle
inc
sub
test
adc
mov
jo
inc
mov
cmp
nop
ret
out
mov
sub
inc
ficomp
sti
inc
jo
mov
mov
or
jmp
fistp
cmps
or
push
or
movd
js
je
pusha
sub
adc
jae
or
push
lds
sbb
add
fbstp
inc
mov
mov
cmp
jl
add
call
sti
and
dec
and
xor
inc
xor
xor
inc
xchg
(bad)
push
mov
or
dec
outs
outs
or
and
std
push
push
or
inc
iret
sub
mov
outs
push
pop
ja
pop
or
ja
mov
mov
add
add
push
inc
cmp
push
inc
jne
xchg
fimul
outs
ins
or
mov
push
adc
test
push
push
adc
scas
mov
inc
jne
arpl
bound
aaa
leave
add
cdq
popa
vminsd
fadd
or
shl
and
mov
push
in
adc
xchg
cmp
adc
dec
in
inc
or
or
call
adc
adc
sub
fcom
in
and
das
test
sbb
pusha
pop
dec
xchg
je
adc
nop
js
sbb
ds
mov
dec
ins
into
jns
jns
add
jg
aaa
sbb
lds
push
ret
call
mov
mov
in
xor
loopne
ins
(bad)
add
dec
add
push
xchg
out
inc
cmp
jmp
adc
mov
frstor
outs
jbe
dec
or
adc
clc
add
add
fmul
ret
mov
and
int
stos
mov
sbb
sbb
outs
in
add
mov
jae
add
pop
popa
add
popa
mov
dec
out
push
push
into
xchg
add
pop
mov
data16
int3
sbb
pop
add
out
cmp
repnz
iret
jl
ret
mov
call
jo
mov
(bad)
push
push
lods
popa
mov
fistp
push
out
cmp
daa
leave
loope
push
xor
sbb
lods
pop
int
shl
pop
aaa
pop
xor
cmps
push
outs
cdq
dec
mov
ror
sub
nop
push
das
pop
scas
adc
mov
aas
jge
add
call
pop
jbe
mov
push
retf
adc
shl
out
xchg
pusha
idiv
ss
xor
and
scas
or
add
out
popaw
jne
add
jecxz
jmp
mov
jo
dec
outs
or
inc
push
stc
xchg
mov
movs
cs
mov
jp
shl
pop
pop
loope
or
push
pop
or
cmp
nop
push
mov
div
add
out
inc
jecxz
jge
cmp
jmp
jmp
dec
das
push
out
add
push
xchg
mov
adc
push
add
xchg
add
cmp
mov
xor
mov
in
adc
fdiv
add
adc
sbb
adc
push
test
push
ins
outs
and
sbb
and
add
push
cmc
ins
outs
ror
shl
inc
test
push
pop
adc
sbb
cwde
jp
test
scas
xor
add
pop
cmc
or
(bad)
adc
push
pop
add
cmp
push
or
inc
jnp
inc
sub
mov
cmp
pop
push
inc
xor
jns
pop
adc
cmp
mov
jo
push
mov
mov
and
(bad)
int
data16
cmp
add
mov
mov
shr
sti
mov
xor
adc
ss
inc
aad
or
enter
sbb
push
movs
ds
sbb
loopne
je
test
mov
adc
add
inc
xor
dec
aad
sub
push
shr
pop
inc
sbb
bound
iret
test
fsubr
adc
jbe
xor
push
sub
outs
sub
out
mov
push
sub
mov
dec
jnp
push
stc
das
dec
icebp
push
and
ins
cmp
xor
test
neg
push
jo
int3
push
cmp
push
fwait
sub
add
and
pop
fistp
mov
add
pop
xchg
mov
outs
adc
push
retf
add
mov
jmp
dec
test
or
and
sub
sub
not
dec
sbb
jns
push
dec
cmc
mov
push
add
ret
hlt
pushf
pushf
mov
call
xor
or
daa
daa
and
cmc
pop
test
xchg
xchg
xchg
daa
sub
imul
or
push
xor
push
mov
push
stc
cmp
jns
jb
mov
ja
les
inc
push
mov
mov
mov
es
ss
scas
leave
leave
jl
jge
add
cld
mov
add
xor
mov
daa
add
mov
movs
jmp
xor
jno
jae
sbb
xor
dec
add
retf
(bad)
into
dec
bswap
movs
ds
dec
jae
lock
xor
inc
xor
or
popa
jg
jg
rcl
add
xor
fs
pop
push
mov
sub
cmp
cmp
bound
or
xchg
sbb
sub
xor
fldcw
cmp
lds
cmp
push
inc
outs
cdq
shr
mov
adc
or
stos
and
mov
fcomp
push
dec
inc
jae
push
adc
dec
out
pop
dec
xor
out
sub
add
or
dec
xchg
cmp
inc
add
ror
sahf
mov
pop
xchg
or
add
jae
imul
test
cmp
fadd
xchg
outs
dec
imul
push
inc
mov
add
pusha
add
sbb
or
mov
xchg
inc
mov
sbb
lea
sub
add
xor
imul
push
inc
xchg
fwait
adc
inc
inc
enter
inc
js
jo
gs
push
adc
rol
in
add
scas
ins
cdq
mov
mov
arpl
cmp
adc
dec
xor
(bad)
stc
xchg
loopne
adc
fs
add
dec
gs
xor
pop
mov
dec
dec
jg
cmp
dec
popa
pop
xor
inc
mov
mov
jo
cmp
add
dec
cmp
pop
inc
xchg
jae
popa
imul
call
psraw
pop
dec
mov
jmp
inc
add
(bad)
cmps
or
or
and
ds
mov
fisttp
popa
or
jge
inc
sahf
stos
xor
add
mov
dec
ins
or
shl
dec
or
or
adc
adc
and
mov
pop
xchg
mov
or
jmp
mov
push
jb
ins
mov
bound
mov
or
sub
call
mov
add
cmp
or
inc
pop
xor
jmp
jecxz
xor
jns
inc
sub
push
pop
mov
scas
cdq
pop
out
mov
or
inc
sbb
mov
sub
sub
or
popa
test
and
jne
rol
sahf
mov
jp
popa
mov
je
and
push
inc
shr
inc
int3
in
aas
or
pop
(bad)
retf
fldcw
in
pop
cmp
inc
add
adc
push
cmp
sbb
xor
mov
sti
loopne
in
adc
sub
inc
inc
xchg
xchg
adc
xchg
pushf
leave
pop
xchg
out
xchg
aam
sub
adc
xchg
inc
sub
test
mov
sub
pop
add
repnz
pusha
popf
adc
sbb
or
outs
add
shr
jge
or
inc
jnp
std
mov
inc
dec
pusha
shl
dec
cmc
ror
xor
sub
mov
lods
pop
sub
ss
inc
jge
in
inc
mov
push
mov
add
ja
mov
or
pop
in
push
shr
lods
mov
inc
loopne
sub
int
mov
add
pushf
mov
outs
popf
jb
lods
das
retf
cmp
and
pop
jmp
xor
push
pop
loope
xor
test
cmp
cmp
jmp
rcr
sbb
and
call
loopne
sbb
jge
and
jo
jnp
dec
inc
sub
ja
movs
add
div
add
xchg
add
push
cmp
or
dec
jo
mov
pusha
add
mov
push
xor
popa
jae
fsub
sti
jp
push
daa
(bad)
jns
jmp
sub
ds
xor
shl
mov
sahf
sti
aas
js
jl
out
adc
push
mov
inc
jno
je
or
pop
sti
sbb
mov
jo
ror
jl
or
iret
shl
inc
and
sub
or
lock
test
gs
add
add
das
das
call
mov
mov
add
jns
and
push
add
test
jns
add
add
jns
push
push
xor
mov
lahf
retf
add
ins
mov
outs
add
pop
je
or
jae
(bad)
cld
rcr
sahf
xchg
or
mov
inc
enter
sbb
adc
push
add
jecxz
sbb
aaa
inc
jmp
push
pop
inc
xor
ins
mov
cmp
scas
jnp
mov
push
shl
out
mov
cs
movs
add
mov
add
(bad)
xchg
pusha
loopne
add
inc
xchg
pusha
dec
pop
int
push
xchg
mov
or
xchg
fadd
fadd
push
mov
inc
sub
pop
das
dec
adc
popa
pop
sub
or
in
fld
jl
inc
das
push
push
adc
popa
jo
adc
(bad)
mov
push
push
add
cmp
add
pop
inc
or
cs
adc
fcomp
test
inc
jae
rol
or
ss
mov
or
or
and
inc
or
ins
jns
or
lahf
jg
pop
test
xchg
lds
sub
jge
mov
sbb
ret
mov
sub
inc
push
or
cmp
inc
mov
lds
in
sbb
fbld
inc
and
pop
mov
add
rcl
push
adc
cmp
xor
push
sbb
loope
pop
test
xchg
push
push
sbb
xchg
test
dec
push
xchg
dec
shl
xor
inc
mov
ret
xchg
push
inc
(bad)
mov
inc
mov
lea
enter
hlt
pop
adc
jg
gs
pop
adc
inc
push
outs
adc
into
adc
enter
push
loopne
pcmpeqd
out
xchg
add
mov
movs
mov
xor
lods
sbb
fld
and
je
inc
inc
add
pop
jbe
lods
ficomp
or
pop
test
(bad)
push
jg
cmp
les
out
or
std
jmp
push
adc
enter
stc
test
mov
imul
push
and
dec
cdq
out
cmps
leave
shl
cmp
sub
aaa
pop
sub
add
clc
or
cmp
pop
test
push
sub
pop
das
jae
adc
(bad)
lock
ins
xchg
les
add
sbb
repz
push
inc
xchg
xor
inc
and
xor
sbb
in
push
shl
scas
sbb
add
jp
pop
xchg
inc
add
pop
xor
out
test
out
fwait
call
popa
and
out
sbb
mov
dec
adc
and
dec
das
addr16
and
test
dec
xchg
out
lock
fwait
or
lods
fcom
push
or
xlat
adc
inc
scas
or
sbb
push
or
out
retf
jmp
aad
push
push
loope
sub
test
stos
test
or
retf
mov
and
call
sbb
ret
jbe
js
dec
inc
adc
adc
push
scas
mov
das
(bad)
push
aaa
enter
mov
jno
je
push
cld
aaa
shr
xor
xor
aaa
inc
add
cmps
push
sbb
pop
sbb
fsubr
mov
xor
xor
or
pusha
mov
pop
xor
nop
fst
fnsave
xlat
add
shl
cmps
fild
inc
ficomp
sbb
cmc
mov
fild
mov
pop
mov
dec
mov
push
jl
stos
sar
fwait
daa
cwde
sbb
mov
adc
jecxz
out
jo
mov
hlt
mov
jmp
mov
xor
or
ins
dec
inc
inc
jb
ja
push
xor
mov
or
dec
outs
les
cs
push
arpl
lods
pushf
inc
arpl
aad
bound
add
inc
adc
xor
call
punpcklwd
out
pop
cmp
mov
xor
adc
xor
pop
cmps
out
daa
sbb
push
jo
arpl
pop
ret
xor
push
and
mul
loop
cmp
sbb
mov
stos
and
pusha
push
cmp
aaa
lock
jno
dec
add
jno
add
or
xchg
add
pop
out
or
and
test
(bad)
std
or
popf
js
and
fld
sbb
dec
add
(bad)
bound
(bad)
pop
mov
or
xor
rol
push
mov
fprem
ss
mov
jp
in
loop
inc
repz
iret
outs
or
push
repz
ins
push
(bad)
lock
inc
popa
inc
and
add
mov
bound
push
cmp
push
or
push
jns
inc
rol
mov
and
ret
sub
imul
xchg
out
out
and
call
jae
pop
dec
xor
adc
shl
or
loopne
pop
out
pusha
mov
imul
sar
add
or
lds
jo
ret
inc
mov
push
pusha
sbb
or
xchg
add
cmps
pop
or
test
cmp
mov
add
xchg
xchg
retf
fpatan
or
add
loope
fst
add
aaa
xor
inc
pop
push
cmp
pusha
mov
add
aam
push
cmp
stc
jae
inc
inc
mov
adc
inc
dec
or
mov
sbb
test
je
jnp
mov
enter
or
mov
addr16
mov
xor
adc
pusha
sbb
mov
mov
push
fs
lods
push
push
push
imul
lock
add
jo
loope
clc
(bad)
icebp
pop
inc
dec
popa
outs
fs
mov
out
or
mov
sub
neg
pop
hlt
dec
xor
bnd
mov
or
push
dec
jbe
dec
adc
into
push
cmp
out
sbb
scas
jmp
cmp
or
lds
push
dec
aas
push
pusha
sub
pop
dec
ret
lds
mov
xor
lds
push
push
gs
jg
push
cdq
add
jg
or
dec
movs
addr16
xchg
sub
inc
pop
pop
imul
dec
lods
loop
out
pop
jecxz
mov
jmp
or
sub
cmp
sub
out
(bad)
jmp
cmp
cmpxchg
push
sbb
(bad)
fstp
mov
cmp
push
test
je
add
and
sub
sahf
adc
movups
fs
mov
out
sti
(bad)
out
push
push
push
and
sbb
fimul
test
je
push
and
fs
add
adc
jbe
test
add
cld
and
mov
xor
test
jle
dec
ja
ins
les
pop
ret
lea
mov
mov
push
push
mov
mov
rcl
dec
mov
ja
jbe
inc
fadd
dec
add
mov
lock
mov
dec
mov
lahf
push
push
push
mov
fstp
leave
jnp
lock
test
push
mov
mov
test
popa
sbb
push
mov
xor
fistp
sub
shl
cli
mov
xor
ret
shr
add
sbb
pop
test
repz
imul
sbb
xchg
jne
inc
int3
jle
jmp
inc
and
enter
adc
mov
int3
cdq
pop
jno
idiv
mov
loopne
jnp
mov
inc
and
ja
inc
push
add
add
push
push
push
or
pop
add
test
cmp
iret
push
movs
(bad)
mov
push
(bad)
sub
pop
push
test
or
xor
imul
test
mov
retf
or
push
xchg
push
test
test
ins
and
push
test
ror
or
pop
xchg
inc
or
mov
ja
or
xor
daa
cmp
ret
jecxz
test
sbb
outs
adc
jl
inc
xor
mov
mov
std
rol
xor
jne
lahf
and
sti
jne
cld
cli
pop
and
clc
mov
or
add
ins
and
je
sub
pushf
fsub
sbb
lea
mov
mov
cmps
cmp
add
and
jae
jne
pusha
dec
push
add
mov
cmp
call
call
mov
clc
jge
enter
pop
and
fnstsw
add
push
xor
fdiv
push
ret
pop
and
mov
div
bound
jnp
adc
add
or
cwde
pop
ins
jo
add
push
push
pop
and
or
inc
or
outs
push
mov
enter
sbb
ds
push
mov
mov
mov
push
pushf
test
jne
adc
lock
je
mov
cmp
clc
or
adc
call
adc
ret
mov
add
or
cmovl
pop
pop
mov
jmp
sti
imul
out
push
mov
js
setg
jmp
pop
mov
mov
cmc
sub
adc
rol
mov
out
clc
adc
or
idiv
and
mov
pop
jecxz
outs
out
not
xor
inc
pop
push
push
pop
fnsave
sahf
mov
pop
cmp
xor
ins
xor
aaa
sub
jb
push
or
popf
nop
sbb
xor
or
ds
out
ja
stc
in
or
and
pusha
iret
loop
imul
or
pusha
fmul
fadd
mov
inc
mov
loopne
mov
scas
sbb
sti
jle
ja
scas
rcl
cmp
into
or
mov
and
pop
fisubr
loop
pop
push
push
ror
sbb
add
or
sub
test
and
and
pop
mov
or
je
add
xor
aas
js
pop
push
push
inc
cs
push
push
sub
je
ror
pop
sub
je
dec
mov
call
add
push
sub
or
jae
in
dec
in
mov
in
mov
adc
imul
xchg
adc
not
lock
(bad)
jo
ror
stc
push
xchg
cmps
adc
mov
outs
daa
and
push
mov
adc
add
ror
daa
lock
lods
scas
pop
add
sub
add
or
add
div
cmp
je
lea
sbb
ficomp
xor
sub
test
mov
sub
add
test
or
out
or
fidivr
jae
mov
cmp
mov
shl
add
jns
mov
mov
lea
sbb
xor
arpl
sbb
push
(bad)
pop
pop
mov
repnz
jbe
inc
cmp
mov
(bad)
je
in
xor
or
mov
xchg
add
bound
sub
leave
jmp
aam
ins
mov
and
or
retf
call
inc
cli
add
cld
ret
aas
sbb
pop
dec
mov
paddsb
faddp
inc
shl
fild
in
mov
ror
or
test
xchg
cwde
mov
fcmove
popf
sbb
push
add
cmp
push
call
daa
push
sub
cwde
sub
inc
inc
add
aam
inc
aaa
adc
fild
cli
dec
outs
outs
pop
dec
add
popa
sti
(bad)
jne
out
sbb
mov
sub
mov
outs
pop
mov
xchg
shr
push
sbb
sbb
ins
xor
out
or
clc
ins
push
jecxz
inc
or
inc
inc
jne
dec
adc
push
fs
loopne
mov
imul
add
mov
mov
aam
arpl
mov
xor
ins
lods
jge
test
fwait
push
imul
(bad)
lds
out
fsubr
add
dec
or
nop
add
mov
dec
and
ret
sub
pop
push
popa
ja
jo
adc
cmp
sub
add
sub
add
mov
out
shl
add
pop
push
gs
outs
arpl
outs
(bad)
jo
adc
mov
sbb
pop
pop
pop
add
lods
cmp
popf
clc
imul
push
call
jne
mov
mov
xor
sub
loopne
push
std
das
js
call
mov
into
mov
mov
adc
sahf
mov
or
mov
dec
cmp
test
cmc
gs
pop
enter
xchg
in
icebp
test
mov
push
daa
pushf
jb
lea
popf
test
(bad)
test
test
into
jno
xchg
icebp
jge
pushf
sbb
fwait
div
add
mov
jecxz
dec
cmp
lock
xchg
dec
inc
pop
pop
fwait
jno
inc
movs
xlat
push
xlat
int3
js
jbe
ins
(bad)
clc
push
mov
ror
pop
push
push
add
xor
adc
mov
mov
mov
fild
(bad)
adc
mov
(bad)
or
test
dec
jmp
or
inc
aas
sbb
pop
xor
mov
les
fsub
adc
inc
add
mov
outs
add
retw
iret
xchg
test
lock
scas
and
cmovb
(bad)
and
sub
sete
cmp
inc
test
or
arpl
ja
nop
outs
mov
sbb
(bad)
aam
aam
out
xchg
(bad)
jne
sub
fbld
int3
and
popa
sbb
aam
add
outs
jbe
add
or
pop
mov
(bad)
enter
clc
adc
xchg
cs
loop
sub
pusha
cs
add
data16
neg
add
add
push
or
dec
das
cmp
repz
retf
push
sub
xor
inc
adc
cmp
lds
arpl
sbb
fadd
dec
jo
cmp
or
repz
arpl
(bad)
loopne
hlt
push
cld
mov
or
adc
or
gs
pop
(bad)
add
icebp
dec
adc
adc
adc
inc
xchg
push
(bad)
pop
movs
daa
inc
xchg
jo
cmps
fwait
adc
mov
add
pop
push
lea
sub
and
dec
xor
mov
add
pop
idiv
loopne
adc
xor
shr
mov
(bad)
fild
sahf
push
hlt
aaa
aad
and
aas
mov
loopne
sub
mov
sbb
or
mov
push
or
lahf
adc
jo
inc
scas
xor
pop
pusha
jb
jo
cmp
clc
in
pop
fs
xor
add
mov
pop
sbb
and
shl
pop
cdq
popa
stos
mov
les
jmp
nop
push
mov
hlt
(bad)
(bad)
fiadd
cmp
or
dec
cmp
mov
into
pop
cmpxchg
xor
(bad)
mov
(bad)
jne
cmp
cmp
xchg
lds
scas
aas
and
sub
dec
pop
ja
aam
inc
mov
sbb
cwde
cmp
adc
cmps
int3
pop
mov
adc
and
lock
cli
dec
sub
jb
mov
call
add
je
dec
and
cmp
push
and
pop
lock
cli
mov
inc
test
stc
and
add
fidivr
mov
rcr
iret
out
and
test
push
or
push
je
sbb
ins
xor
inc
(bad)
out
jge
add
push
mov
jns
fsub
icebp
cld
movsx
cdq
mov
mov
int3
not
jmp
fs
(bad)
sbb
movsx
rcr
ds
movzx
mov
fadd
data16
adc
rcr
bswap
test
fwait
js
lock
xchg
lahf
out
push
dec
ins
loope
mov
arpl
inc
xor
xor
xor
cmp
or
cli
cmp
jne
aad
add
xchg
add
call
gs
lock
mov
sub
rol
xor
in
out
cmp
loop
dec
movs
xchg
repz
cmp
push
ds
pop
addr16
bound
loopne
adc
xchg
dec
mov
mov
or
push
pop
jl
pop
inc
add
inc
or
adc
sub
push
mov
fild
fwait
jmp
fst
and
mov
jo
fld
jo
mov
mul
inc
jge
jne
dec
adc
sbb
and
jp
jg
pop
ss
adc
xor
test
mov
fist
adc
or
push
adc
xlat
into
sbb
sbb
and
addr16
leave
or
arpl
push
push
sbb
adc
cmp
dec
inc
daa
push
rol
lods
fmul
adc
movs
adc
and
push
lock
jg
loopne
cmp
mov
js
and
cld
pop
ret
in
or
adc
pushf
mov
icebp
mov
mov
loopne
arpl
cwde
pushf
push
cld
mov
lea
adc
mov
cmp
mov
shl
inc
dec
add
popf
pop
and
push
adc
or
push
rol
inc
fsubr
retf
mov
je
sub
imul
mov
mov
mov
outs
pusha
lock
es
es
mov
and
int
rol
ror
add
xor
pop
push
adc
pop
repnz
call
add
lea
dec
ds
add
lods
or
inc
rcl
stos
mov
xor
pop
loop
xchg
add
add
neg
inc
jnp
or
sbb
std
js
sbb
push
addr16
adc
dec
or
jecxz
mov
mov
cmp
(bad)
pop
mov
mov
or
add
or
adc
mov
or
test
rol
mov
or
lea
inc
pop
movs
mov
cmp
maskmovq
test
nop
call
push
jmp
add
pop
not
xchg
movhps
pop
ins
push
mov
sub
mov
repnz
in
das
out
adc
pop
inc
mov
add
push
pop
pusha
xchg
cmp
iret
push
and
sbb
and
sbb
jl
out
sub
sbb
sbb
push
add
fiadd
call
rol
rol
out
jns
and
clc
push
fild
fstp
fwait
push
and
mov
push
dec
iret
out
shr
mov
inc
call
cmp
jl
(bad)
loopne
add
xor
push
pop
add
mov
test
test
jge
adc
arpl
test
mov
daa
out
pop
mov
pop
cwde
push
retf
mov
sub
sub
call
sbb
ret
arpl
add
inc
sahf
dec
aad
mov
mov
in
mov
mov
addr16
xor
sbb
push
lods
scas
cmp
xchg
push
imul
push
add
pop
or
xchg
or
test
cmp
or
aaa
add
pop
xor
adc
je
xor
push
sbb
ror
cwde
sbb
js
xor
and
sub
push
push
cmp
lods
loopne
mov
(bad)
call
adc
push
fistp
outs
mov
cmp
pop
popa
inc
jo
enter
push
dec
(bad)
jle
mov
add
mov
inc
push
cdq
dec
nop
neg
(bad)
jbe
nop
ins
xor
lock
bound
xor
jmp
cdq
add
mov
push
pop
jge
data16
or
(bad)
sub
and
adc
or
into
aad
aad
inc
xchg
sub
inc
adc
xor
mov
xor
cdq
push
or
xlat
pop
adc
xchg
xor
push
shl
push
push
push
mov
mov
mov
add
(bad)
outs
call
clc
and
imul
sbb
test
or
mov
pop
ss
or
adc
jns
test
(bad)
mov
sub
addr16
test
int3
nop
jl
push
xchg
addr16
push
pop
sbb
pop
(bad)
test
xchg
adc
pop
test
aaa
or
adc
inc
nop
mov
aas
jne
push
cmp
mov
aas
add
cmp
pop
or
fstp
cmp
je
cmp
cmp
mov
cmps
cld
push
inc
test
pop
inc
adc
in
and
das
inc
sub
xor
adc
adc
pop
jmp
sub
mov
test
jne
mov
in
aaa
(bad)
cmp
cmp
cmp
sub
dec
xor
test
loopne
call
pusha
xchg
clc
mov
inc
std
cmps
xchg
clc
sete
sub
test
add
ror
or
add
call
add
bound
outs
add
push
loopne
inc
pop
sbb
shl
pop
mov
mov
cmps
je
repz
xchg
mov
mov
pop
add
cmp
inc
add
(bad)
add
pop
ins
mov
sbb
pop
retf
into
aaa
cmp
xchg
cmps
pop
add
std
xchg
xor
int
push
test
in
mov
cmp
sbb
sbb
pop
inc
add
sub
sbb
dec
inc
jns
repz
stos
sahf
aam
arpl
ja
ins
inc
mov
inc
pusha
mov
inc
push
fld
jns
in
pop
jo
push
movs
push
(bad)
xor
mov
ds
push
push
test
mov
sbb
mov
sbb
int3
das
fs
int3
dec
xor
ins
mov
das
lock
hlt
test
pop
je
push
mov
inc
add
shr
jns
call
push
sar
xchg
fwait
push
jno
or
fdiv
js
push
or
test
or
call
adc
popa
cmp
adc
adc
test
call
pop
sub
scas
popa
xor
ret
add
mov
xchg
sti
js
je
push
(bad)
fld
pushf
ret
add
mov
data16
or
mov
jb
push
adc
jae
mov
adc
fsub
adc
sbb
jo
jae
mov
add
jo
jno
cmps
div
loopne
jo
dec
out
push
and
inc
ret
repz
fbstp
je
mov
xor
pop
pop
adc
or
sbb
adc
scas
aaa
adc
cmps
sbb
or
jns
xchg
test
jae
rcr
xor
sbb
(bad)
std
aaa
adc
sub
fst
addr16
enter
mov
dec
adc
cmp
cmc
mov
pop
adc
popa
and
dec
int3
sbb
loop
fs
push
mov
mov
add
push
mov
mov
mov
jnp
lods
dec
ja
les
aam
mov
add
sub
dec
clc
hlt
mov
jge
add
and
push
lahf
xlat
dec
push
dec
sbb
jmp
lahf
or
and
loopne
inc
and
xor
or
test
adc
daa
or
lock
loope
adc
add
mov
inc
xor
push
repz
jg
ds
(bad)
call
or
out
add
ss
add
ds
jle
add
cmp
sub
pop
adc
inc
ins
loop
imul
mov
push
jl
push
fbld
or
push
xchg
cmp
sub
sbb
ins
ins
xchg
sbb
pop
sub
or
xor
pop
and
adc
jmp
pop
rcl
dec
xor
jge
not
adc
test
xor
leave
lds
js
and
push
mov
mov
nop
and
clc
pop
sbb
daa
fcomp
loopne
inc
dec
lea
nop
cli
int3
rcl
or
sbb
mov
outs
jbe
xchg
push
or
bound
sbb
xlat
jno
outs
movs
adc
add
inc
lea
iret
shr
jp
sbb
and
jmp
mov
icebp
adc
imul
(bad)
pop
icebp
data16
aaa
fsubr
(bad)
xchg
fbstp
lea
lea
movs
add
in
outs
rcl
cmp
jmp
in
sub
push
shl
jo
int3
jmp
xchg
fsubr
lods
int3
retf
mov
lahf
sti
or
or
sbb
call
pop
lahf
imul
or
or
and
lock
sbb
fs
cmp
or
inc
or
imul
jg
aam
or
pop
jae
adc
lods
ror
dec
pop
inc
es
sub
cld
int3
sub
ret
repz
test
data16
push
jge
sbb
inc
movsx
jmp
cmp
inc
mov
(bad)
push
cmp
push
or
and
fwait
mov
sti
pop
rol
into
out
cmp
cmp
or
and
jl
out
sahf
inc
call
loopne
sti
inc
sti
ds
xor
loop
int3
jno
cmps
pusha
xor
lods
jno
jmp
xor
pop
inc
sub
out
cmp
jb
xchg
arpl
repnz
sti
mov
jge
(bad)
fld
ror
mov
jae
jae
push
add
xchg
imul
xor
lds
mov
or
ins
adc
pop
mov
add
mov
std
mov
mov
inc
mov
mov
push
dec
stos
mov
inc
cmp
mov
mov
sbb
cmp
push
pushf
test
mov
or
sbb
ds
repz
pop
lahf
fild
push
aam
movd
sub
int3
fild
fadd
pop
and
pop
les
push
mov
ins
sub
repz
fstp
test
movs
mov
pop
push
test
mov
xchg
add
dec
outs
sub
bound
jge
test
outs
adc
adc
dec
mov
xlat
adc
xor
adc
adc
add
call
push
fmul
ins
addr16
push
repz
push
jae
cmp
cmc
popa
enter
mov
pushf
sbb
adc
push
daa
adc
es
sub
fmul
xor
jg
pop
sbb
shr
dec
leave
pop
sbb
mov
outs
mov
and
scas
or
and
add
mov
loopne
lahf
or
or
jp
rcr
sbb
jge
sub
inc
jl
ret
inc
cmp
jne
push
(bad)
out
dec
mov
cmp
jle
push
xor
cmp
jne
cmp
pop
jmp
jg
call
or
sbb
dec
lock
inc
ror
mov
repz
arpl
jg
neg
add
or
inc
or
jle
cmp
jne
retf
or
lock
push
jl
inc
out
inc
add
mov
add
sbb
ins
dec
or
pushf
pushf
adc
(bad)
xchg
jae
xor
jmp
ret
xor
cmp
adc
es
add
inc
xor
pusha
cmp
mov
pusha
xlat
mov
add
test
int3
add
rol
shl
push
sub
push
popa
push
sbb
add
jmp
cmp
add
out
ret
cwde
movzx
fsub
or
pop
sahf
into
adc
in
dec
push
or
addr16
pop
call
retf
fdivp
mov
push
pop
das
jbe
jg
mov
mov
dec
jp
call
je
dec
push
sbb
jno
or
sbb
mov
in
imul
sub
or
jmp
adc
add
dec
mov
mov
pop
sbb
adc
sar
and
pop
jecxz
sbb
mov
xor
in
test
shr
cmps
lock
lods
rcr
cld
and
and
inc
add
jle
cmps
jbe
add
xchg
shr
pop
je
push
dec
or
neg
movs
out
add
mov
jmp
sbb
fst
sbb
push
push
push
nop
or
xor
add
mov
sub
xchg
jbe
sub
adc
sbb
cmp
xchg
pop
in
xchg
jecxz
sub
adc
ins
xchg
lea
ret
push
data16
or
jmp
or
test
repnz
outs
aad
xor
mov
dec
jo
mov
mov
pop
adc
sbb
jmp
add
inc
mov
pop
inc
push
cmp
cmp
push
daa
das
iret
ins
outs
pop
pop
out
push
jb
aaa
retf
jnp
add
add
or
dec
add
mov
inc
jmp
push
sbb
xor
xchg
mov
mov
jb
mov
xor
in
sub
out
adc
push
push
mov
cmps
std
sbb
test
jne
cmps
not
push
or
adc
push
and
sbb
and
mov
scas
in
push
jmp
jmp
out
jmp
cmp
mov
xlat
and
mov
or
in
sbb
jnp
mov
add
pop
mov
(bad)
add
push
mov
jo
test
ja
push
jo
mov
mov
int
lahf
fs
adc
imul
in
xchg
mov
cmps
mov
shl
and
cs
pop
cwde
pop
mov
aaa
mov
idiv
push
mov
neg
mov
mov
sbb
sbb
js
sbb
cld
add
jge
xor
adc
sbb
je
push
jne
xchg
in
inc
shl
lods
sub
out
push
inc
push
cmp
loop
dec
bndldx
sbb
shl
(bad)
mov
ror
ror
lea
cmp
push
push
outs
or
shl
ss
shl
xchg
jnp
imul
push
xchg
xchg
jo
icebp
adc
in
add
mov
mov
mov
jbe
ins
cdq
cmc
and
cmp
gs
es
sub
daa
push
daa
mov
and
push
pop
out
sub
add
xor
mov
jae
scas
sub
push
jns
je
ins
cs
je
imul
bound
cmps
ins
cmps
das
mov
pop
jns
jbe
mov
push
push
inc
es
jmp
fchs
and
cmp
les
push
dec
ins
xor
inc
lods
mov
call
add
mov
pusha
dec
jmp
xor
fsubr
jbe
sbb
jnp
mov
pushf
jo
aas
inc
movs
movs
and
mov
pop
add
mov
cmp
add
pop
xadd
icebp
pusha
mov
add
adc
or
mov
mov
shr
mov
mov
and
loop
xchg
cmp
dec
jnp
sbb
enter
mov
push
mov
jmp
sbb
(bad)
imul
jnp
cmp
jns
cmp
xor
ja
push
ins
(bad)
push
call
push
jo
push
cwde
sub
mov
add
inc
rol
adc
inc
push
jns
gs
outs
outs
xchg
inc
jl
sti
xchg
daa
jp
or
popa
ins
gs
xchg
xor
xchg
sub
sub
icebp
mov
inc
sub
add
scas
cli
jne
test
add
push
gs
ins
push
popa
arpl
add
gs
daa
pop
inc
gs
jb
jns
add
jg
or
add
les
gs
pop
test
dec
or
je
jae
test
sbb
inc
sub
add
mov
fs
ss
push
add
sbb
push
inc
push
jne
imul
push
xchg
mov
fild
push
inc
add
pop
and
shl
dec
pop
pop
cmp
ins
jbe
pop
pop
fs
mov
cmp
ret
push
cmp
sub
sub
jo
ret
fucomp
rcl
cdq
cmps
add
(bad)
mov
mov
cs
fnstenv
add
jb
push
add
xchg
je
inc
jb
dec
add
(bad)
push
fbstp
(bad)
fld
ficomp
sbb
rol
inc
jae
inc
or
sbb
jae
ds
aas
gs
add
ret
aas
sbb
xor
adc
lds
mov
push
mov
lock
pop
or
push
add
jns
imul
push
call
inc
in
data16
push
scas
cmp
sbb
adc
in
ins
or
push
imul
pop
test
(bad)
fwait
jmp
or
mov
mov
fsub
push
gs
pop
add
jge
ror
ret
out
push
inc
push
sub
pop
push
enter
clc
sbb
push
test
mov
ret
ror
or
punpckldq
cmp
sub
dec
stc
xchg
or
xchg
mov
xchg
scas
inc
test
sahf
jecxz
mov
inc
ins
popa
jae
fstp
fsubr
or
inc
outs
(bad)
into
ja
or
xor
inc
dec
or
call
call
pop
jmp
adc
push
in
pop
push
cmp
mov
inc
imul
xchg
sub
rol
shl
addr16
sti
out
out
ret
pop
icebp
xchg
aam
inc
lahf
add
dec
gs
jbe
lock
add
fs
push
or
add
add
outs
add
xor
inc
addr16
test
sub
adc
jb
popa
jns
add
adc
jge
pop
(bad)
adc
xchg
cli
dec
push
aas
pusha
inc
adc
xchg
(bad)
sbb
pop
cwde
das
cmps
push
add
push
pusha
ins
push
adc
pushf
scas
in
xchg
outs
jne
mov
or
inc
sub
dec
outs
jbe
dec
gs
sbb
ror
jnp
in
xor
lahf
pop
in
push
cdq
sbb
mov
outs
stos
imul
arpl
nop
loopne
jecxz
cdq
in
add
add
sti
sbb
jp
add
sub
pop
inc
jne
xor
ins
jbe
pop
or
pop
sbb
cmp
push
xchg
pop
cld
ret
add
xor
sub
outs
inc
add
aad
dec
push
mov
rcl
cmp
daa
shl
and
mov
test
sub
mov
pop
push
outs
add
dec
aam
pop
dec
inc
sub
ret
jge
ffreep
and
movs
das
jg
adc
test
push
inc
test
push
inc
xor
imul
inc
dec
sbb
scas
xor
or
fst
aad
or
jae
in
fs
daa
pusha
pop
cs
xlat
pop
xlat
inc
adc
push
and
pop
mov
and
loopne
or
out
mov
test
movntps
jno
je
inc
ins
jo
test
cwde
pop
sti
ds
mov
shr
cld
or
fxtract
into
or
push
xlat
in
adc
dec
outs
or
inc
and
fldenv
add
test
bound
add
or
popf
pop
mov
dec
and
or
int3
and
nop
inc
add
jmp
(bad)
mov
scas
fcmovnu
inc
push
scas
pop
mov
adc
inc
movs
add
cmps
cs
ins
adc
mov
addr16
push
lar
adc
mov
xchg
cmp
sub
int3
aad
add
nop
xor
or
int
nop
or
push
fadd
popf
push
in
pop
add
jo
fldenv
pop
nop
das
scas
push
jg
out
add
xor
out
push
jnp
jns
push
jo
out
push
pop
add
js
(bad)
out
xor
lods
inc
stc
daa
mov
movs
pop
push
movs
jae
or
pop
dec
movs
out
mov
pop
push
xor
movs
lods
out
pusha
pop
mov
movs
dec
inc
sub
add
add
mov
call
ins
out
neg
inc
imul
sbb
dec
das
pop
push
adc
and
mov
movs
adc
popf
dec
pushf
movs
or
or
iret
push
inc
jle
scas
sbb
sub
mov
xor
fisttp
add
lock
sub
cmp
cmp
mov
and
push
add
loopne
or
or
call
cmp
xchg
jns
jg
push
push
stos
or
ins
imul
rol
fbstp
(bad)
adc
outs
(bad)
xor
dec
push
add
jecxz
out
xor
sub
in
js
clc
pop
fild
adc
mov
and
jno
scas
rol
xchg
fmul
int
inc
inc
stos
imul
push
inc
add
sub
test
xor
fbld
push
mov
int3
jmp
xor
mov
out
ret
jne
mov
xchg
outs
inc
shr
(bad)
sbb
sbb
(bad)
jbe
inc
add
sahf
push
daa
mov
and
es
loopne
xlat
(bad)
jae
daa
cmp
push
inc
mov
jnp
daa
(bad)
int
fadd
add
mov
call
xor
push
daa
inc
sbb
pop
xchg
inc
sub
and
loopne
dec
sbb
dec
rol
scas
sub
jns
add
test
push
pop
pop
stos
loop
bound
lock
call
and
mov
sub
out
neg
mov
dec
jae
and
dec
das
addr16
jnp
mov
shl
add
out
push
fcom
out
xlat
adc
push
mov
inc
xor
inc
out
retf
inc
adc
pusha
push
push
mov
dec
xchg
adc
(bad)
inc
mov
outs
push
inc
sub
or
jne
out
push
retf
sbb
mov
push
(bad)
sbb
xlat
call
dec
sbb
cmp
dec
cmp
push
dec
es
jmp
aaa
cmp
pop
and
dec
aaa
nop
xchg
mov
push
add
shr
popa
scas
inc
(bad)
pop
push
sbb
inc
jo
xor
cmp
mov
and
enter
jmp
mov
jns
retf
or
cmp
fnsave
loope
cmp
sbb
jbe
inc
push
dec
ficomp
add
test
ja
mov
(bad)
mov
push
enter
push
inc
retf
out
xor
lahf
mov
adc
fsub
repz
out
hlt
pop
xchg
mov
mov
cmp
imul
lea
inc
jb
ja
push
(bad)
fisubr
fs
pop
sbb
or
dec
outs
mov
shl
xchg
enter
arpl
in
leave
lods
xor
cmps
xor
xor
inc
xchg
sub
adc
out
push
inc
xchg
xchg
xchg
fldcw
js
popa
lods
out
sar
pop
push
xchg
call
adc
pop
xor
in
cmps
out
daa
jnp
or
test
and
sbb
test
add
mov
loop
cmp
fs
pushf
sbb
out
push
lds
adc
out
pop
mov
add
jno
lods
(bad)
loop
mov
add
mov
shl
rol
jecxz
add
cmp
or
push
enter
inc
shr
jae
rol
push
popf
fcom
adc
fwait
add
add
fs
dec
popa
test
loope
ret
add
sbb
mov
jne
push
js
sub
or
rol
jne
jb
xor
xor
push
mov
xchg
and
add
mov
iret
or
adc
mov
(bad)
arpl
push
es
sub
or
hlt
push
mov
pop
mov
and
(bad)
xor
pop
dec
loope
xchg
dec
adc
sbb
test
cmp
sbb
or
sbb
outs
jae
pop
mov
popa
or
cmp
outs
xchg
jnp
inc
sbb
out
add
dec
xor
inc
add
imul
mov
imul
add
xor
xor
sub
xchg
inc
loope
pop
stos
jge
pop
push
xor
add
sbb
and
daa
test
sti
or
cmp
mov
adc
adc
int
aaa
nop
add
call
pop
into
aas
in
add
push
add
jae
js
dec
test
pop
push
repz
call
inc
or
test
pop
dec
or
inc
es
mov
xchg
cmps
push
ins
pop
cwde
adc
and
sbb
data16
cmps
or
add
enter
test
xchg
pushf
sub
pop
push
shl
pop
mov
cmp
add
enter
cmp
in
das
cli
push
or
mov
aaa
or
loop
inc
cmps
aad
sub
inc
mov
shr
pusha
adc
ins
jnp
push
push
mov
cmps
xchg
ret
test
in
push
loopne
mov
popa
ins
in
in
push
add
nop
add
add
fwait
popf
sub
add
sbb
adc
mov
pop
add
mov
xor
dec
aad
sub
pop
sub
inc
or
daa
pop
test
cdq
add
adc
sub
aad
push
outs
pop
xor
mov
sbb
mov
inc
sub
add
loopne
ja
test
test
movs
das
fucomip
push
and
inc
fdiv
mov
rol
imul
ja
or
cmps
popa
inc
xor
adc
and
adc
and
fsub
jo
or
out
xor
mov
dec
inc
xchg
xor
add
cwde
jne
pop
sub
adc
pop
cmp
add
xchg
out
outs
fcom
(bad)
call
mov
sub
and
xor
in
xor
add
adc
or
pusha
stos
add
je
jns
add
test
or
pop
das
mov
sbb
in
adc
and
sub
test
push
xchg
es
das
jae
pop
mov
scas
mov
push
add
fistp
mov
shl
iret
push
sbb
sbb
inc
adc
adc
ja
(bad)
fucomip
pop
test
pop
loopne
jmp
pop
jmp
xor
out
adc
jo
int3
adc
inc
sub
adc
ret
xchg
sub
dec
ror
in
add
pop
shl
xchg
push
or
xchg
mov
push
or
fucomp
sub
xlat
pop
les
fldlg2
push
push
add
jno
jno
fsubr
push
pop
pop
(bad)
xor
sbb
push
out
(bad)
xor
pop
and
retf
or
sub
lods
jns
jg
adc
add
pop
sbb
sbb
jae
inc
mov
xor
pop
jo
in
sub
adc
jo
fsub
ins
das
pop
lds
mov
ja
shl
das
lds
xlat
or
xlat
xor
scas
cmp
inc
pusha
loopne
ror
jne
ins
retf
je
mov
pop
sbb
xor
push
repz
push
mov
pop
out
xchg
add
retf
aaa
add
pusha
mov
cmp
pop
cmp
sub
ja
mov
mov
ins
es
hlt
mov
push
aaa
mov
arpl
or
pop
les
aaa
mul
xlat
mov
sbb
dec
xor
sbb
and
dec
scas
push
(bad)
sbb
xor
jmp
adc
pusha
jns
inc
nop
inc
sub
stos
js
fstp
out
loop
xlat
sbb
fnstenv
cmps
fbld
fidivr
inc
mov
xor
or
div
xchg
aam
adc
cmp
push
push
ret
mov
inc
adc
cmp
popa
sub
and
xchg
adc
add
or
call
add
stos
adc
or
ins
mov
pop
packuswb
leave
leave
test
or
inc
lock
xchg
mov
and
xchg
pop
or
xchg
xchg
daa
adc
mov
jbe
pop
out
ss
dec
rcl
jno
pop
or
push
aaa
sbb
inc
jno
in
push
movs
jecxz
fimul
or
jecxz
add
loopne
inc
or
inc
inc
xor
jae
ss
hlt
je
adc
or
cwde
dec
add
xor
adc
ror
mov
rep
add
cld
add
or
inc
mov
lds
inc
push
rol
movs
enter
popa
mov
and
pusha
sbb
inc
test
cmp
add
inc
mov
mov
(bad)
add
lahf
inc
pusha
push
shr
cmp
test
push
lds
jno
les
push
or
or
xor
add
aaa
or
loopne
and
mov
xchg
out
mov
pop
xchg
or
xchg
push
jge
rol
push
xor
adc
adc
pusha
xchg
aaa
cdq
add
push
fs
add
aaa
test
dec
test
pusha
lea
push
test
je
add
call
mov
mov
mov
mov
mov
jle
add
or
(bad)
int3
fs
ja
imul
pop
or
pop
pop
ret
nop
jbe
push
push
xor
std
(bad)
outs
mov
mov
mov
add
add
in
inc
xor
xor
dec
jne
sbb
jg
call
mov
and
xchg
adc
hlt
enter
ins
les
pop
lock
mov
movlps
jo
or
xor
je
adc
pop
xor
or
or
aam
mov
pop
sbb
call
imul
ds
add
jg
cmp
cmp
jne
je
mov
add
mov
jl
sbb
ret
mov
int3
add
push
mov
xchg
add
jmp
ds
or
push
xchg
lods
cmp
sub
pop
push
gs
in
ror
cmp
cld
push
add
add
pop
xchg
cmovp
addr16
adc
js
scas
les
cwde
iret
push
movs
dec
mov
push
das
and
fdiv
jmp
mov
ss
and
mov
pop
add
call
push
dec
and
add
add
or
jne
in
pop
popa
addr16
addr16
mov
ret
outs
(bad)
fld
repz
jp
add
push
test
sub
mov
fisttp
lock
mov
inc
push
imul
add
pop
int
jno
ins
or
and
scas
lock
ja
pop
fiadd
pop
sahf
imul
cmp
pop
mul
jno
sbb
shl
cs
or
xor
push
mov
add
jne
(bad)
push
add
add
push
pop
es
sub
add
sub
gs
pop
xor
push
daa
test
out
or
(bad)
hlt
cli
mov
xor
mov
mov
idiv
dec
test
jl
inc
xor
sbb
jmp
add
cld
cwde
(bad)
(bad)
mov
add
test
aad
inc
pop
add
add
jbe
hlt
sbb
ins
inc
mov
push
dec
bound
and
aas
ins
shl
cwde
jmp
lock
xor
add
mov
push
lea
push
xor
call
push
mov
sub
or
adc
push
sar
pop
ret
nop
push
mov
mov
fcomp
and
lock
enter
adc
mov
cdq
ror
inc
call
xor
pushf
ret
mov
rcr
mov
in
loopne
aam
lock
mov
lock
push
jmp
ja
or
mov
jae
or
push
jno
mov
xchg
xor
mov
sbb
sets
add
xor
jno
js
jne
adc
jle
adc
or
pop
cmp
or
mov
cld
test
je
cmp
jg
mov
adc
test
inc
add
inc
repz
ins
xor
add
cmp
inc
jne
xchg
inc
and
loopne
mov
cmps
cmp
and
add
cmps
xchg
xchg
daa
jl
xor
or
ret
inc
mov
mov
ss
push
in
in
mov
dec
cmp
sbb
test
mov
sbb
dec
jne
adc
cld
add
mov
or
sbb
lea
movs
hlt
mov
cmps
js
retf
sub
dec
cmp
push
shl
mov
mov
jmp
ins
lods
and
push
jno
std
fdivr
jmp
cmp
mov
push
dec
call
cmps
test
add
add
popa
add
lods
sub
test
fisub
add
mov
ins
and
xchg
push
cmp
add
popf
mov
and
add
jns
sub
inc
or
sbb
nop
int
xchg
pop
jl
mov
dec
sbb
mov
popa
inc
cwde
dec
xchg
test
pop
lock
pop
jmp
and
pop
push
or
bnd
and
add
mov
adc
into
xor
(bad)
jmp
retf
lea
sar
jns
rcr
dec
fwait
test
mov
fidiv
ret
mov
aas
ret
add
sub
dec
jg
addr16
jle
mov
mov
push
aas
pop
or
xor
adc
push
and
mov
push
push
loop
push
fst
push
cli
nop
mov
dec
push
in
lea
xlat
adc
xlat
adc
add
or
rcr
cmp
add
push
lock
or
add
add
sbb
lahf
inc
xor
xchg
adc
call
sub
(bad)
sub
add
adc
add
sahf
popa
fldcw
scas
add
pop
das
add
push
(bad)
mov
daa
cmp
ja
xchg
push
push
add
or
outs
ins
push
outs
imul
adc
sub
add
push
call
or
movs
(bad)
es
ins
dec
outs
pop
mov
jg
pop
mov
mov
jl
or
mov
add
adc
xchg
sbb
dec
cwde
pop
out
test
or
push
call
dec
or
pop
test
cmp
lock
or
cs
lock
push
out
sbb
dec
loopne
jb
dec
cmp
xor
loopne
dec
dec
sub
movzx
and
(bad)
inc
ja
mov
les
xor
inc
mov
loop
add
mov
inc
pop
inc
cmps
pcmpgtb
call
or
fcomp
lock
sbb
clc
jne
inc
cmp
mov
adc
inc
retf
add
outs
daa
mov
add
pop
push
loop
out
jnp
mov
jbe
lock
push
push
dec
movzx
push
push
outs
(bad)
mov
jmp
xchg
add
add
adc
pop
clc
jl
retf
jp
pop
jne
or
aaa
cmp
lea
add
and
popf
loopne
movd
inc
cld
adc
sub
push
out
cmp
jne
xchg
adc
add
imul
pop
in
xchg
outs
mov
cmp
sbb
sar
mov
add
and
push
sub
in
add
inc
mov
dec
test
jl
mov
sahf
mov
call
mov
pusha
and
enter
(bad)
ja
xchg
add
dec
mov
les
clc
add
cmp
cmp
add
cs
mov
imul
nop
std
xchg
jmp
in
inc
add
lea
adc
jo
push
ror
mov
adc
loope
imul
jne
adc
call
je
push
loop
imul
inc
es
das
gs
nop
popa
fadd
sub
and
xchg
push
fcomp
and
mov
loop
movs
and
push
loopne
and
jb
lea
pushf
pusha
aaa
pushf
mov
sbb
and
add
jnp
fimul
sbb
dec
add
mov
xchg
mov
sub
ins
pop
mov
rcl
add
shl
and
mov
sub
jb
(bad)
test
pop
mov
outs
dec
sbb
mov
je
pop
adc
dec
stos
or
adc
xor
xchg
inc
xchg
sub
add
xchg
adc
xadd
aam
mov
inc
xor
ins
and
test
mov
ficomp
and
jno
dec
ret
scas
mov
push
stc
cmps
lock
cwde
cmps
add
(bad)
or
push
adc
jmp
std
xor
mov
mov
cmp
jne
(bad)
jmp
inc
mov
inc
mov
and
fdivr
adc
push
leave
mov
pop
test
xor
inc
mov
les
xchg
adc
xchg
in
sbb
push
xchg
js
xor
inc
cmp
push
int
pop
fcomp
js
pop
(bad)
enter
mov
dec
xor
fadd
(bad)
shl
mov
pushf
mov
movs
cmp
call
adc
dec
mov
lock
movzx
add
mov
into
fcmovb
sti
sbb
movs
shr
fdiv
shl
mov
(bad)
or
sbb
inc
int3
push
jo
ins
in
or
rcl
fadd
pusha
test
fmul
aam
aam
je
push
adc
out
or
and
ins
call
rcl
loopne
in
cs
jmp
lods
and
jo
rcr
sbb
adc
jne
sahf
pop
or
mov
push
mov
cmp
sbb
jne
rcl
test
jne
addr16
(bad)
jl
loop
jmp
mov
add
mov
cdq
jle
cmp
mov
mov
ins
xchg
xchg
movs
sti
lds
add
inc
je
mov
loope
into
fdivr
clc
(bad)
lock
mov
mov
cmp
cmp
pop
cdq
test
(bad)
jnp
mov
shl
dec
popa
imul
jmp
cli
ins
outs
jae
jb
aaa
cmp
xchg
in
loopne
push
add
test
or
(bad)
(bad)
lods
cwde
push
mov
popf
xchg
push
pop
shl
jno
pop
or
outs
fild
push
outs
ins
inc
es
add
bound
sub
xor
mov
jno
sbb
pop
movs
push
adc
sbb
aaa
aam
and
push
xor
out
imul
or
(bad)
stos
jg
stos
pop
push
lds
jo
mov
jg
fstp
ja
push
fidiv
xchg
fimul
pop
(bad)
or
bound
stc
daa
mov
jo
push
popf
sub
loopne
inc
out
add
rcr
sbb
mov
inc
sub
push
pop
gs
out
aaa
add
and
(bad)
mul
push
dec
imul
pushw
jbe
mov
add
lock
sar
mov
rol
ffreep
(bad)
ret
stos
cmp
push
lods
mov
out
jmp
xor
adc
les
mov
jo
add
mov
push
add
test
mov
lock
rcl
sub
js
push
leave
retf
and
add
or
add
inc
dec
inc
(bad)
push
scas
sbb
(bad)
clc
scas
sub
das
xchg
push
(bad)
out
add
push
jg
mov
mov
and
fwait
mov
es
pop
dec
popa
outs
add
push
in
cmp
cdq
mov
add
hlt
ror
pop
pop
adc
or
mov
sar
adc
or
outs
setnp
dec
push
js
or
jge
add
mov
sbb
jnp
sbb
int
jmp
and
mov
inc
imul
stos
mov
retf
scas
add
stos
add
pop
dec
pop
add
and
daa
hlt
inc
add
imul
int
mov
push
jo
cld
mov
mov
adc
imul
mov
xor
fs
mul
(bad)
das
movs
push
out
shl
inc
movs
ds
loope
es
fadd
mul
ror
adc
mov
inc
pop
or
jne
dec
rcr
push
add
daa
int
pop
push
jmp
xchg
pusha
mov
cmp
and
(bad)
inc
or
sub
xor
stos
ret
ins
lods
and
jo
aaa
pop
pop
push
test
cmp
or
xchg
mov
and
jno
or
mov
and
fstp
js
nop
movs
cmp
test
and
sub
adc
addr16
fsubp
xor
push
(bad)
loopne
push
movs
push
push
pop
cmp
loopne
sub
dec
loopne
and
inc
sbb
xor
test
mov
sub
mov
sub
push
mov
push
or
mov
push
mov
inc
(bad)
lock
fimul
dec
jecxz
add
test
mov
pop
push
xor
in
adc
sbb
jb
into
sbb
push
cmp
cmp
sahf
pushf
pushf
mov
cli
inc
mov
(bad)
xlat
cld
and
inc
imul
and
fist
mov
fstp
jno
loop
pxor
inc
adc
push
xchg
rol
cmp
inc
push
xor
mov
cmp
enter
pusha
cmps
out
or
or
adc
jno
fst
mov
pop
daa
mov
adc
pop
pop
mov
inc
xor
fs
cmp
dec
add
aas
lock
retf
add
or
loop
jae
enter
add
push
popa
test
enter
clc
jnp
test
fdivr
add
test
inc
cmp
jnp
push
popa
ins
jne
add
xor
push
xacquire
jmp
add
movs
pusha
add
or
add
dec
xchg
jae
cmc
add
push
pusha
enter
xchg
dec
xor
out
xchg
and
imul
cmp
push
xchg
and
mov
adc
jno
xchg
sahf
push
movs
jbe
pop
xor
jle
pushf
add
jae
imul
or
mov
imul
ret
jno
push
frstor
inc
imul
add
fimul
inc
add
xor
les
imul
xchg
movs
and
pop
inc
js
jo
adc
or
mov
imul
push
dec
test
or
lods
xchg
xor
sbb
fld
or
and
dec
gs
sbb
mov
inc
jae
mul
dec
popa
inc
add
outs
sub
sbb
dec
es
aad
add
dec
imul
sub
adc
and
pop
mov
mov
shl
or
dec
or
adc
push
and
int3
sahf
adc
mov
adc
add
inc
push
push
or
dec
ins
or
mov
or
mov
dec
or
cmp
adc
and
popa
pop
xchg
or
adc
xchg
dec
idiv
and
mov
push
jb
ins
test
arpl
cmp
xor
push
push
sub
xor
push
push
sub
pop
pushf
lss
fadd
push
pop
pop
and
inc
add
pusha
xor
retf
cmp
sahf
pop
mov
imul
sub
lahf
add
pop
mov
lahf
sub
jo
adc
add
sbb
jecxz
sbb
sub
inc
push
jecxz
mov
dec
arpl
jns
add
sahf
xor
push
or
mov
outs
push
pop
ret
inc
jmp
int3
add
xchg
push
push
jns
xor
lock
and
call
in
repz
int3
xchg
xchg
fadd
mov
add
jne
mov
mov
scas
jae
pop
mov
push
cdq
hlt
mov
mov
popf
adc
cwde
iret
mov
pop
xor
out
mov
jns
call
stos
mov
sbb
or
mov
dec
add
clc
fisubr
cwde
adc
add
ja
dec
lods
rol
dec
mov
or
jg
cmp
mov
pop
sar
and
lock
xchg
push
mov
push
jne
mov
or
cs
inc
adc
cmps
dec
cs
fcomi
mov
adc
push
fstp
leave
les
daa
mov
outs
cs
cmp
jne
lea
xchg
test
mov
cwde
and
nop
and
nop
and
adc
jle
and
mov
loopne
adc
or
jmp
or
and
push
or
adc
add
data16
xlat
or
retf
jecxz
xor
es
popa
in
and
out
imul
sahf
cmp
mov
mov
adc
ret
call
call
data16
rcl
push
mov
or
(bad)
and
nop
and
mov
clc
xchg
dec
repz
cld
fistp
loop
repnz
movzx
add
cmp
or
int
or
dec
cmp
(bad)
out
jb
cmp
xchg
dec
pop
clc
rcr
sub
sub
rcl
push
or
lock
js
mov
jl
fisttp
mov
ss
pop
loopne
sub
mov
stos
mov
add
dec
outs
sbb
not
sbb
push
add
mov
mov
and
or
sbb
(bad)
pop
mov
test
jle
stos
ins
les
pop
pop
aaa
or
inc
add
(bad)
test
bnd
(bad)
cmove
sbb
lock
inc
push
push
inc
repnz
out
mov
push
mov
lds
ret
mov
cmps
add
shl
out
cmovle
add
pop
nop
jmp
cmp
clc
pop
bnd
mov
add
xor
cmp
push
and
sub
dec
cld
mov
call
mov
sub
cmp
mov
inc
out
outs
in
mov
xchg
mov
pop
cld
lea
add
sbb
cwde
cmp
push
test
loopne
sbb
mov
test
dec
and
rcl
push
out
add
dec
or
leave
je
inc
inc
xor
inc
mov
test
cmp
mov
fs
fiadd
inc
ret
scas
or
mov
mov
or
dec
mov
imul
loopne
(bad)
mov
fwait
in
ja
add
mov
pop
les
or
jmp
addr16
(bad)
sti
add
cmps
or
sub
loopne
mov
mov
stos
add
inc
ins
or
das
pop
push
push
mov
addr16
jno
cmp
xlat
inc
or
push
call
enter
cmp
jne
adc
dec
mov
pop
or
mov
(bad)
(bad)
cwde
das
xchg
xchg
push
adc
shl
pop
repnz
fbld
or
stos
push
sub
and
loopne
mov
out
in
add
pop
dec
mov
fmul
int
inc
push
sub
sbb
(bad)
jmp
adc
call
dec
mov
push
cmp
jne
mov
cmps
fistp
add
neg
add
sub
pop
mov
(bad)
xchg
call
push
ins
sete
ret
jbe
adc
inc
mov
clc
jl
test
pop
inc
pop
jecxz
ret
push
aaa
mov
pop
aam
fst
dec
jns
push
test
mov
lea
xor
add
pop
(bad)
push
inc
mov
call
pusha
repz
(bad)
repnz
scas
mov
cwde
sub
fldenv
sub
push
pop
push
ficom
inc
dec
ins
lea
rol
movs
xchg
aam
ror
cld
fs
ror
pop
push
push
hlt
add
inc
pusha
cmp
adc
outs
sbb
cmp
scas
jl
mov
inc
loopne
add
add
popa
test
inc
mov
push
leave
rol
dec
jl
jne
pusha
and
pop
pop
and
add
pop
mov
inc
pop
and
mov
push
jge
or
shr
dec
push
and
daa
ja
retf
and
adc
mov
xor
sub
fadd
and
mov
sub
dec
lock
dec
int3
adc
xor
(bad)
call
fidivr
and
dec
add
call
loopne
clc
imul
loopne
sti
xlat
out
(bad)
ficomp
cmp
(bad)
sbb
ror
leave
outs
data16
out
je
(bad)
mov
outs
call
adc
jge
add
dec
daa
mov
mov
pop
jo
lods
getsec
pcmpgtw
gs
inc
gs
and
data16
add
nop
out
out
or
push
call
xchg
lds
scas
push
sbb
mov
movntps
fisub
les
js
mov
jne
inc
and
sbb
rcr
pop
cmp
add
and
sbb
pusha
sbb
and
add
mov
mov
pop
sub
les
rcr
xchg
sbb
ins
inc
sbb
pushf
pop
add
pop
sbb
inc
nop
add
out
(bad)
loopne
imul
jno
sbb
xor
jne
hlt
mov
add
aaa
sbb
std
pop
sbb
mov
pusha
sub
sbb
inc
sub
movzx
ds
rol
xchg
mov
sbb
iret
hlt
push
xchg
aaa
leave
or
into
jecxz
cli
pop
pushf
mov
mov
call
cmp
xor
cmp
xchg
adc
xchg
loope
ds
xchg
pusha
push
xchg
cmp
pop
call
inc
jg
mov
xor
dec
(bad)
js
pop
sbb
add
test
out
aaa
jge
add
xchg
rol
out
fimul
push
stos
pop
ret
add
adc
mov
sub
dec
xchg
dec
and
inc
imul
jge
sbb
out
add
push
push
push
and
add
rcr
jmp
fs
jb
jo
jns
outs
enter
mov
ret
in
jmp
adc
adc
je
outs
pop
xchg
sub
mov
and
je
xor
nop
popf
push
adc
div
cli
stos
sbb
jg
push
push
adc
push
mov
mov
das
mov
sub
mov
lds
push
cmp
and
sahf
scas
in
jge
fidivr
ds
aam
add
test
movs
fisttp
jnp
jge
int3
push
fsub
jle
push
cwde
cmp
iret
mov
xchg
push
rcl
es
daa
sbb
add
aas
loopne
ret
sbb
mov
add
ins
fcomip
mov
jle
and
or
mov
outs
push
jns
ds
add
sub
pop
inc
push
popa
ds
mov
ltr
dec
icebp
xchg
arpl
inc
ins
popa
fiadd
cmp
jae
imul
add
add
jb
mov
nop
or
dec
sbb
push
in
mov
not
mov
scas
scas
jp
je
rcl
or
inc
pop
sbb
add
pop
lods
ret
inc
dec
ins
adc
inc
or
mov
push
clc
pop
add
jns
lds
cwde
push
push
je
jp
xchg
ins
jno
mov
jns
xchg
es
xchg
sub
inc
call
out
loop
mov
ins
add
jnp
mov
outs
dec
movs
shr
loop
adc
push
inc
inc
cmp
pop
xchg
bound
xchg
or
int3
sbb
or
outs
arpl
sbb
push
mov
ror
pop
sbb
push
mov
sub
cwde
mov
sub
ins
stc
jmp
adc
cmp
iret
loopne
loopne
push
push
and
cwde
xchg
dec
dec
xchg
iret
sahf
aad
mov
pop
int3
and
mov
add
pop
call
(bad)
dec
test
loop
mov
mov
(bad)
pushf
mov
sub
outs
test
movzx
push
lea
xlat
add
mov
ror
jl
lea
test
add
sub
push
clc
dec
test
mov
fwait
or
je
adc
das
push
retf
sbb
and
lock
pop
dec
hlt
mov
call
jne
xchg
add
dec
cld
fcmovnb
xchg
adc
sub
mov
jo
loope
imul
inc
mov
inc
shl
je
inc
les
inc
dec
push
ins
pop
jmp
loop
and
jle
xchg
pop
test
add
push
(bad)
push
push
cli
mov
mov
and
dec
outs
sbb
push
or
(bad)
pop
je
push
cmp
out
les
mov
out
dec
jge
push
mov
pop
mov
push
test
call
enter
mov
dec
push
in
or
ret
push
or
lock
mov
stc
retf
push
clc
pop
cmp
je
mov
xchg
mov
fld
test
imul
dec
mov
int3
mov
and
push
jne
lock
push
inc
je
std
data16
and
test
icebp
ins
cmps
dec
mov
bound
pop
fadd
mov
inc
pop
test
or
inc
and
jbe
sub
cmp
je
cmp
lea
push
or
cld
push
ret
sbb
inc
jo
out
std
add
lods
(bad)
imul
loopne
pop
add
mov
mov
ins
cmp
psubq
mov
and
sub
push
in
pop
mov
idiv
xor
popf
aaa
inc
pcmpeqd
ret
push
fdiv
mov
and
lods
lds
ret
sbb
or
adc
in
shl
sahf
jns
or
sbb
pop
mov
repnz
fidiv
or
add
xor
ffreep
fbstp
sbb
enter
xor
push
cld
and
mov
sub
xor
je
sbb
xchg
mov
push
cmp
cmp
mov
mov
imul
mov
mov
jmp
xor
mov
js
adc
mov
add
sub
xor
pop
push
adc
cs
cmps
or
pusha
cmc
les
(bad)
jbe
lea
xchg
loopne
fucomip
lock
mov
fisub
sbb
mov
add
int3
in
inc
stos
add
fsub
retf
test
lea
inc
movs
inc
dec
xchg
lahf
jge
(bad)
push
adc
mov
xlat
and
add
cmp
jne
xchg
adc
lods
add
fnsave
or
add
inc
les
push
es
mov
fisubr
ffreep
loopne
mov
lods
sahf
out
out
push
xor
pop
push
and
lock
les
sub
cwde
out
push
loop
add
add
inc
mov
push
and
jno
lahf
sbb
outs
subps
add
pop
inc
js
test
push
cs
test
leave
or
rcl
outs
ficom
mov
outs
sbb
cmp
add
(bad)
and
push
(bad)
jecxz
sbb
push
or
popf
shl
pop
jg
loop
loop
push
sbb
inc
jl
mov
into
stc
sar
cmp
sbb
mov
pop
mov
or
fistp
mov
scas
pop
add
or
mov
mov
push
mov
push
fsub
lods
mov
inc
add
das
sbb
sar
cmp
sub
jb
je
push
push
mov
add
dec
mov
jmp
mov
jmp
ja
lods
jp
xor
je
inc
sbb
mov
xor
mov
jmp
daa
sbb
xlat
push
push
xor
adc
movs
pop
out
push
adc
out
addr16
mov
pop
and
push
inc
push
cmp
adc
movs
out
sti
inc
test
push
adc
pusha
xchg
retf
gs
outs
push
add
sub
sub
add
xchg
ja
pop
sub
add
jno
aam
push
mov
rcr
dec
cld
push
and
lds
ror
and
mov
ret
mov
nop
outs
test
(bad)
mov
or
sbb
test
jo
pop
pop
mov
je
jne
out
not
add
cmp
ret
jmp
gs
cmp
inc
es
rcl
mov
add
jmp
adc
or
cmp
cwde
iret
inc
loop
adc
or
cdq
fst
es
sar
push
sbb
mov
shl
mov
xchg
pop
ins
push
jno
jno
loope
pop
nop
dec
push
movzx
push
and
mov
push
add
or
or
add
and
pop
mov
push
ret
xor
inc
loopne
test
sbb
sbb
clc
test
push
inc
cmp
ins
out
add
jmp
movs
bnd
sbb
fisub
push
push
cmp
test
fdiv
push
in
cmps
clc
sub
add
stos
sbb
xor
aaa
mov
je
sbb
and
add
and
aas
sub
outs
aas
sbb
(bad)
and
mov
or
lods
sbb
mov
daa
rcr
stos
mov
test
ret
push
jecxz
xchg
sub
sbb
arpl
jb
out
and
outs
mov
push
and
push
stc
(bad)
sbb
in
mov
mov
(bad)
dec
or
inc
sbb
inc
fild
ret
xor
jmp
jecxz
xor
mov
push
es
fild
and
mov
pop
lea
lea
leave
cmc
fsubr
scas
loop
sbb
sbb
aaa
stos
mov
push
lock
or
inc
mov
fsubr
scas
ret
cmp
das
fcom
adc
mov
int
rcr
and
xor
loopne
jo
mov
js
dec
mov
and
nop
fdivrp
add
clc
pop
je
mov
mov
mov
cli
es
xor
mov
sbb
add
add
and
and
cmps
inc
add
fadd
inc
shr
and
push
and
add
rol
mov
(bad)
fldcw
mov
xchg
pop
cmp
lds
je
inc
jbe
(bad)
sub
(bad)
es
pop
xor
and
add
pop
push
push
invd
jmp
adc
sbb
rol
dec
and
add
sbb
mov
ins
(bad)
push
loopne
jl
adc
pop
and
cmps
cmc
mov
mov
dec
mov
mov
push
cmp
mov
add
adc
lods
ror
cmp
add
std
xlat
xor
or
inc
inc
sbb
mov
(bad)
fdiv
add
fs
nop
lock
aad
mov
je
and
mov
xchg
setp
inc
ret
dec
cld
pushf
mov
adc
jns
lock
aam
dec
adc
lock
or
xor
pop
cmp
cmp
xor
pop
mov
aam
das
mov
add
dec
mov
sti
mov
dec
aas
cmp
fdiv
push
test
mov
vpsraw
daa
shl
pop
sbb
add
adc
cmc
shl
xchg
outs
sbb
js
call
and
test
inc
movs
test
push
clc
dec
xor
inc
mov
sub
das
ror
dec
hlt
movzx
cwde
mov
inc
inc
or
fmul
fstp
xor
jno
mov
adc
inc
movs
adc
push
clc
pushf
hlt
add
sub
mov
mov
inc
dec
jne
nop
pop
add
mov
pop
loopne
test
out
fwait
jae
outs
or
cmp
add
and
enter
and
add
jmp
cmp
mov
jmp
inc
dec
jne
xor
sub
clc
mov
push
outs
mov
sbb
or
or
xchg
fdivr
pop
fidiv
jo
push
mov
xchg
shl
add
call
add
lock
shr
lahf
icebp
mov
in
pop
jo
jbe
ror
mov
gs
adc
or
es
mov
adc
push
ret
push
add
ret
cmp
aaa
pop
sub
sub
jno
adc
or
xchg
or
lock
pusha
rol
sar
cmp
test
ret
int3
sbb
add
lds
les
sar
outs
in
push
jae
frstor
push
retf
dec
xchg
xchg
dec
push
inc
sub
mov
call
fimul
mov
cmps
pop
xor
push
lock
popf
scas
sbb
hlt
inc
fiadd
lods
test
lea
iret
dec
loopne
add
fdivr
mov
aas
(bad)
jb
and
lahf
ins
and
inc
sub
jo
dec
inc
fwait
push
ins
daa
sbb
adc
sub
movs
out
jl
aad
retf
and
addr16
ins
and
sbb
add
clc
pop
into
popa
mov
mov
inc
jmp
cmp
jecxz
xchg
push
push
call
push
scas
retf
adc
push
push
test
retf
mov
dec
int
cwde
jl
push
mov
push
js
cld
pop
je
loope
mov
cld
add
js
jmp
aam
jle
add
push
stos
and
mov
imul
add
push
inc
mov
inc
jno
add
add
push
aas
adc
enter
mov
cmps
push
add
das
sub
and
retf
inc
inc
repnz
and
faddp
mov
rol
mov
nop
mov
loopne
in
mov
xchg
loop
xor
push
rol
mov
dec
(bad)
cmp
pop
xchg
cs
loop
mov
ja
jle
pusha
icebp
mov
jge
jmp
dec
pop
in
imul
add
xchg
sbb
imul
aaa
inc
scas
mov
sbb
mov
pop
scas
inc
push
mov
call
inc
sbb
push
inc
sbb
inc
aad
push
out
out
mov
and
inc
ror
mov
test
call
pop
cmp
push
mov
aam
mov
cwde
push
iret
lahf
push
bound
push
dec
xor
mov
out
daa
lds
cs
mov
out
int3
inc
repnz
ss
out
fdivp
mov
mov
push
jb
lahf
call
sub
push
pusha
sbb
imul
push
cmp
stos
sub
daa
cmp
push
add
push
(bad)
mov
in
popa
dec
inc
sahf
in
xor
xchg
dec
push
cmp
push
and
out
ja
imul
sbb
mov
ret
xchg
in
and
dec
ds
mov
inc
pop
adc
xchg
cmp
leave
inc
test
add
add
test
cmp
cmps
std
dec
sub
pop
push
adc
mov
add
mov
sbb
aas
push
push
mov
adc
das
cmp
ins
xor
xor
lahf
mov
inc
adc
or
pop
cmps
dec
repnz
jo
(bad)
and
jne
in
adc
gs
test
ficom
fild
test
add
pop
ds
outs
adc
or
movsx
add
mov
jp
(bad)
jne
push
ja
add
jno
(bad)
pop
nop
lods
fsub
lods
adc
pop
adc
test
push
dec
bound
jmp
fs
push
stos
aad
dec
adc
adc
sub
ins
mov
ret
icebp
adc
push
call
xchg
pushf
shl
pop
lods
adc
inc
fdivr
sub
popa
pusha
add
loop
push
pop
mov
mov
add
sbb
add
ja
(bad)
and
ret
add
in
and
mov
or
adc
mov
inc
sbb
(bad)
bound
(bad)
mov
push
inc
xchg
mov
push
cmc
enter
xchg
icebp
sti
sbb
xchg
pop
mov
mov
adc
push
lea
pop
add
xor
ret
add
cmps
pop
or
shl
out
ret
xchg
mov
mov
in
cmp
pop
aad
jp
adc
fsubr
(bad)
hlt
jle
mov
lods
sub
cld
push
fidiv
(bad)
mov
mov
xchg
dec
inc
jmp
mov
jmp
mov
jae
xlat
xor
add
clc
or
ret
gs
je
jns
and
aas
jge
and
test
fadd
jg
cwde
test
jne
push
and
in
js
pop
mov
sbb
out
cmp
sbb
add
(bad)
xchg
xor
push
sbb
clc
aad
cld
or
push
ins
adc
out
xor
shr
aad
clc
lea
mov
inc
and
es
cmp
or
push
cmp
inc
outs
xchg
cmovno
(bad)
fisubr
js
imul
or
nop
retf
aas
xchg
retf
jae
adc
mov
dec
xchg
add
popf
ror
xchg
adc
pop
pop
call
pop
ins
pusha
imul
push
mov
ror
out
adc
test
out
or
leave
mov
mov
mov
add
push
inc
mov
push
or
mov
dec
add
lock
pop
iret
dec
adc
jo
cld
dec
fild
adc
pop
mov
mov
mov
pop
push
xchg
or
sbb
cs
ret
cmps
xchg
add
mov
daa
rcr
test
jle
push
dec
loopne
sbb
rol
xor
outs
out
jne
add
loope
out
push
or
aas
adc
pop
mov
cmp
jne
mov
dec
push
cmovl
rol
push
cmp
push
cmp
adc
(bad)
or
scas
jecxz
js
out
or
pop
and
adc
adc
add
jge
mov
mov
sar
pavgb
rol
add
mov
pop
enter
gs
push
es
rol
xor
xchg
clc
push
pusha
ins
add
xchg
hlt
imul
push
inc
outs
jne
gs
je
jb
sbb
pushf
sub
mov
(bad)
out
add
jbe
dec
gs
mov
xchg
or
pop
pop
or
or
cmp
gs
rol
loopne
pop
pop
lods
xlat
mov
pop
daa
sbb
outs
xor
jae
inc
outs
pop
sub
imul
arpl
outs
jae
mov
xor
add
or
pop
adc
jb
outs
mov
popa
add
xchg
pop
or
sub
push
lds
shl
data16
pusha
xlat
jg
push
add
push
xchg
mov
push
xchg
movs
push
dec
push
or
shl
mov
cmps
daa
movs
pop
inc
gs
and
push
sbb
fmul
lock
sbb
xor
rcl
pop
out
pop
xor
ret
pop
cmp
adc
pop
push
mov
inc
sub
add
sbb
lahf
aaa
pop
add
xchg
mov
add
add
dec
imul
cs
pop
outs
push
mov
ror
in
idiv
(bad)
(bad)
dec
xor
push
je
xor
fcmovb
or
add
(bad)
not
xchg
popaw
jne
je
inc
mov
mov
or
push
cmc
dec
outs
or
inc
adc
jbe
cwde
rcr
inc
or
fsubr
fdivr
pop
popa
sbb
dec
bound
or
push
or
add
inc
cmps
pop
mov
push
into
push
fcmovnbe
and
xor
xor
mov
jnp
sub
inc
mov
outs
mov
rcl
pop
pop
mov
cmp
adc
lahf
neg
scas
cmps
aam
mov
adc
cmova
mov
push
add
cmp
popa
outs
popa
addr16
addr16
xchg
push
inc
fsub
add
sbb
pushf
cwde
rol
jne
iret
mov
rol
mov
adc
or
mov
dec
adc
and
sbb
add
add
fnop
sbb
jnp
sbb
int
jmp
and
mov
inc
imul
mov
retf
scas
add
stos
cmps
pop
int
mov
cld
dec
pop
jo
mov
es
aas
inc
ret
xchg
mov
dec
pop
lahf
dec
or
xor
jp
sub
and
push
inc
ret
lods
call
ror
or
in
mov
adc
cmp
push
pop
add
mov
push
push
push
test
mov
adc
sbb
inc
cmps
cmp
lock
popa
dec
jle
inc
stos
loope
scas
dec
mov
cmc
sub
loopne
mov
out
inc
mov
sbb
(bad)
or
cmp
add
and
push
movs
ins
ds
pop
add
mov
div
into
loope
and
dec
mov
cmp
add
push
inc
test
push
pop
or
add
cmp
and
cli
outs
pop
neg
jbe
push
mov
les
mov
adc
adc
cmps
imul
add
xor
(bad)
ss
jno
and
sub
mov
scas
xchg
retf
or
and
add
in
mov
das
push
add
or
enter
int
sbb
adc
mov
cmp
mov
adc
pushf
mov
dec
dec
dec
dec
jne
imul
adc
daa
daa
and
stc
inc
xchg
xchg
xchg
xchg
adc
enter
adc
mov
fs
xlat
adc
in
in
fdivr
push
punpckldq
fsubr
adc
xchg
pop
ror
fiadd
push
fwait
add
(bad)
fcom
mov
in
xor
out
pop
or
inc
call
shl
je
sub
or
sbb
pop
das
data16
and
adc
daa
sbb
push
dec
cmovns
ror
dec
dec
add
addr16
push
adc
or
or
inc
push
popa
jg
sahf
bound
jg
dec
jg
add
daa
daa
(bad)
inc
inc
fs
sub
test
jne
arpl
adc
or
hlt
mov
push
stc
ins
inc
jnp
cmp
add
outs
ins
xor
jmp
cdq
ja
xor
add
loopne
add
add
inc
jae
enter
add
out
mov
mov
out
xchg
xlat
or
push
jnp
or
dec
sbb
and
je
fwait
gs
dec
popa
arpl
inc
inc
push
xor
test
dec
jae
imul
test
add
imul
mov
mov
or
add
ror
imul
add
fimul
inc
add
cld
jmp
call
and
jmp
inc
inc
js
jo
mov
dec
mov
imul
stos
dec
test
add
xchg
pop
(bad)
ror
xor
or
ja
adc
sbb
jae
mov
and
in
dec
popa
inc
xchg
inc
dec
popa
cmp
add
jo
sar
or
stos
dec
aaa
inc
ins
push
and
shl
cmps
call
mov
mov
ins
inc
mov
cmp
dec
or
adc
add
daa
jns
sahf
adc
adc
xchg
loopne
outs
xchg
push
pusha
inc
(bad)
hlt
sbb
ins
or
sbb
call
int3
movs
add
adc
inc
ins
stos
jb
popa
pop
xchg
or
sub
hlt
fild
dec
sub
ins
cwde
pusha
lock
test
cmp
xor
push
(bad)
aas
jns
test
sub
ins
(bad)
lds
mov
call
pop
and
sub
adc
int
imul
mov
xchg
and
(bad)
pop
and
push
mov
in
mov
mov
jl
lea
sbb
rcl
sub
sub
imul
or
push
jmp
inc
mov
pop
popa
dec
arpl
loope
inc
sbb
in
inc
inc
leave
jo
jbe
adc
add
ret
test
pop
ret
sbb
cmp
aam
popw
sbb
mov
sbb
inc
add
add
jo
dec
call
jno
or
aas
cld
daa
jae
add
adc
retf
jmp
stos
dec
mov
pop
test
sub
mov
add
pop
add
rcl
ja
push
jg
add
ja
lahf
(bad)
and
loope
je
fmul
(bad)
ja
test
pop
add
rol
daa
mov
jae
push
popf
cmp
out
or
stos
pop
sub
sub
dec
inc
sub
and
aaa
pop
push
cmp
gs
pop
add
or
sahf
add
mov
fwait
ret
rcl
jae
shr
and
(bad)
xchg
or
sub
mov
das
(bad)
jbe
add
or
add
or
shr
sbb
add
ins
rol
fs
imul
add
(bad)
push
neg
out
repnz
xchg
jp
pushf
adc
xchg
mov
pop
add
sbb
adc
add
or
add
dec
and
int
or
(bad)
pop
imul
add
mov
pop
out
push
add
xchg
ret
add
pop
and
ror
add
iret
mov
push
mov
adc
pop
call
scas
sub
sub
cmp
ret
fsub
jno
lds
cmps
add
xor
aaa
je
jmp
mov
push
loope
hlt
cmp
add
shl
pop
stos
jo
xchg
and
mov
or
jl
add
cld
movs
cmps
push
adc
add
add
ja
jmp
out
push
movs
out
push
js
lods
push
sbb
push
push
push
or
fwait
sub
jns
add
xor
pop
push
add
add
sub
push
mov
cmc
sbb
xor
cs
and
push
(bad)
pop
add
mov
jbe
push
and
in
cld
sysenter
and
repnz
cmp
mov
cmp
jns
cli
das
daa
fs
mov
in
sub
dec
inc
sahf
pushf
sti
inc
sub
and
dec
mov
push
sub
daa
daa
xchg
retf
repnz
xchg
xchg
xchg
xchg
sub
repnz
dec
push
pop
jnp
sub
push
xchg
add
es
jno
dec
mov
rol
call
(bad)
or
jae
cmp
mov
cld
or
popa
mov
jae
inc
inc
xor
fiadd
jae
dec
add
mov
jnp
movs
bound
aam
mov
dec
push
add
add
mov
push
mov
jae
xor
add
stos
add
push
add
sub
sbb
add
mov
cmp
fwait
gs
add
pusha
adc
add
dec
adc
or
jae
add
xor
mov
repnz
jb
icebp
add
mov
jae
aad
nop
gs
nop
lods
or
add
jae
sub
add
jae
xchg
and
lods
fisttp
push
sub
push
add
aad
mov
push
test
xor
add
jae
mov
ror
adc
jae
bound
and
sbb
adc
adc
or
test
sti
(bad)
jae
add
jns
pusha
add
jae
dec
inc
add
jae
sbb
bound
xor
dec
adc
push
cmps
out
sub
mov
les
mov
sbb
xor
xchg
jae
dec
or
jno
xchg
and
loopne
imul
jae
cmc
(bad)
mov
or
sbb
adc
adc
mov
adc
sbb
mov
push
fnstenv
xor
push
push
cs
add
mov
pcmpgtd
add
mov
push
xor
leave
inc
imul
xor
mov
pusha
sbb
and
jne
and
leave
mov
and
das
js
pop
jbe
adc
pusha
xor
frstor
xchg
das
mov
ja
cmp
int3
push
xchg
sbb
std
push
xchg
add
addr16
outs
add
loope
daa
lahf
xchg
push
xchg
adc
pop
xor
out
pop
sbb
out
pusha
xchg
jmp
sub
dec
mov
mov
add
es
add
pop
out
int
mov
aas
rol
push
xor
and
sub
or
fiadd
je
or
pop
rcr
or
movs
inc
pop
ret
loopne
xor
mov
pop
inc
mov
add
daa
adc
nop
das
scas
push
out
scas
or
adc
aam
retf
or
mov
xor
add
xchg
sbb
or
or
cmp
adc
mov
add
sub
adc
inc
mov
or
add
mov
ins
mov
and
adc
and
test
push
push
stos
or
xor
adc
push
jl
cmps
das
mov
cmps
clc
into
(bad)
dec
add
sti
out
add
mov
inc
push
out
rcl
xlat
add
lods
rcr
inc
pop
pop
mov
fsub
sti
shl
mov
add
cld
and
xor
ins
nop
sbb
pop
pop
shl
lods
cmps
push
mov
mov
add
mov
push
icebp
and
pop
xor
movs
sahf
dec
push
adc
adc
dec
xor
sbb
enter
test
out
test
and
adc
popa
add
or
add
add
sub
push
mov
cmc
sbb
sub
nop
cmp
cmp
xor
(bad)
jecxz
das
dec
xor
jno
jnp
(bad)
xor
in
pop
cmp
cmp
jns
loope
cmp
mov
(bad)
or
sahf
pushf
xlat
or
and
jmp
daa
daa
jle
jmp
xchg
xchg
xchg
xchg
inc
jb
mov
hlt
cmp
fistp
pop
and
fimul
mov
xchg
add
dec
ja
cmp
shl
add
ins
dec
or
and
dec
inc
dec
jno
inc
mov
mov
add
adc
xor
or
test
add
dec
add
test
mov
add
loope
ins
push
fstp
push
add
mov
adc
dec
jae
bound
imul
dec
mov
mov
inc
push
add
ins
je
or
leave
fwait
add
mov
or
pop
cwde
sub
adc
or
dec
iret
movs
sub
inc
mov
add
jae
or
push
dec
add
jae
add
xor
or
add
mov
add
add
pusha
rol
adc
bound
cmp
add
push
add
or
mov
pop
push
ror
inc
ror
adc
push
or
dec
jge
nop
pop
mov
or
jns
inc
add
add
or
or
cmp
push
sub
dec
mov
sub
je
mov
stos
mov
add
dec
xchg
add
inc
pop
push
dec
imul
mov
pop
mov
or
stos
add
inc
lahf
push
xchg
xchg
pop
cmp
add
add
and
push
add
dec
rol
lea
lea
add
ss
add
clc
cmp
out
ins
pop
lock
pop
(bad)
sbb
pop
and
loopne
je
enter
cmp
les
call
loopne
js
inc
das
xchg
pandn
dec
add
ror
push
push
jb
or
push
cmc
arpl
addr16
jo
dec
in
data16
or
outs
imul
mov
xor
je
and
push
sahf
shl
popa
call
outs
mov
inc
sub
dec
sub
cld
cli
mov
outs
push
jns
cmp
pop
jo
mov
xor
sub
push
je
sbb
push
shr
dec
fs
xchg
mov
add
mov
popf
(bad)
or
fld
mov
pop
inc
rcr
popa
mov
add
add
mov
(bad)
fsubr
lods
lss
fdiv
lock
push
mov
lods
push
rol
and
mov
fild
and
pop
cwde
mov
dec
and
sahf
and
sbb
rcl
add
push
push
push
test
je
adc
push
add
in
(bad)
jmp
mov
mov
mov
mov
mov
push
push
mov
xor
mov
ss
(bad)
std
fnsave
mov
shl
cmp
inc
jmp
sbb
rol
sbb
mov
push
test
jle
mov
sbb
sbb
imul
mov
add
in
inc
cmp
je
pusha
je
loope
fs
xchg
add
or
pop
vcvttsd2si
pop
pop
pop
pop
ret
out
fmul
pop
mov
xchg
rcr
xor
push
add
fimul
inc
xor
lock
(bad)
push
mov
in
iret
inc
push
pop
clc
cmp
xchg
jmp
jnp
jo
lea
inc
cmp
jne
mov
ins
sti
sub
mov
adc
inc
mov
je
mov
adc
shl
xor
jbe
add
mov
fstp
mov
mov
call
mov
lods
xchg
push
fincstp
cmp
jge
mov
dec
jne
and
mov
inc
mov
mov
add
js
in
jle
mov
push
je
push
push
add
std
leave
push
je
je
dec
ucomiss
adc
pop
cmp
adc
in
inc
or
mov
sbb
adc
iret
sbb
jp
jmp
xchg
jno
in
jnp
in
ret
inc
mov
push
fsub
pop
jg
add
mov
inc
sub
lock
mov
ret
das
int
and
inc
and
dec
mov
sub
pop
jnp
adc
push
dec
inc
push
push
and
xlat
xor
repz
cmps
cmp
mov
inc
lods
add
inc
push
sti
aaa
je
dec
pusha
jl
inc
xor
push
mov
inc
call
mov
inc
adc
(bad)
sbb
inc
add
inc
(bad)
pop
pop
mov
call
fbstp
fisttp
pop
or
adc
lahf
cld
push
mul
popf
shr
idiv
cmp
xchg
dec
inc
(bad)
cs
adc
loop
loop
and
xchg
rcl
cmp
sbb
mov
mov
inc
mov
mov
into
sbb
xor
sbb
out
enter
xlat
or
mov
enter
mov
push
pop
pusha
pop
sahf
idiv
movups
jo
fsubr
add
xchg
in
sbb
scas
adc
and
repz
test
movs
push
(bad)
loopne
lods
iret
fdivr
clc
lods
push
ficom
mov
jb
shl
mov
rcr
push
fdiv
rol
fucomi
add
mov
(bad)
mov
lods
mov
neg
jl
push
(bad)
retf
mov
lahf
cld
enter
out
ds
fisubr
push
test
das
dec
arpl
arpl
add
out
sbb
pop
cmp
push
xchg
mov
fistp
in
jge
ins
mov
je
out
cwde
push
push
sub
cmp
add
dec
push
push
push
push
mov
jle
push
push
mov
out
push
and
add
or
jmp
fdivr
scas
add
push
dec
and
add
cmp
mov
jnp
inc
xor
or
or
cwde
adc
adc
aam
out
popf
xor
out
sbb
(bad)
fld
rcl
data16
popa
or
loopne
mov
pop
clc
mov
sbb
fild
out
stc
add
inc
adc
push
mov
add
leave
mov
mov
inc
ret
sbb
push
div
fbstp
cmp
iret
mov
fmul
mov
aaa
pop
mov
pop
mov
push
adc
mov
xor
push
je
mov
aaa
adc
xchg
shl
mov
push
dec
cld
dec
jb
jge
push
mov
pop
and
movs
pop
mov
pop
jge
ficom
pop
push
and
in
xchg
stos
call
inc
cwde
pushf
mov
mov
neg
cs
adc
fdivr
jne
pop
clc
add
rol
dec
sbb
(bad)
jbe
jne
push
mov
cmp
aaa
push
(bad)
or
and
sar
ffreep
dec
mov
pushf
or
inc
inc
call
pop
dec
sub
test
xor
mov
push
popa
daa
lock
enter
arpl
or
mov
div
cmp
xchg
sub
push
clc
mov
inc
push
enter
sub
hlt
sahf
mov
lods
popa
rcl
sti
in
lods
mov
push
jo
sbb
or
call
dec
test
int
pop
cld
jl
inc
mov
ja
push
fadd
cmps
imul
adc
mov
rol
adc
add
dec
jne
xlat
sbb
sbb
shl
push
into
sbb
push
push
inc
or
loope
mov
cli
movaps
jmp
mov
rcr
loopne
jno
add
jp
cdq
(bad)
lock
inc
ins
jo
jae
leave
or
and
call
out
ins
(bad)
icebp
jo
cmps
inc
data16
add
cmps
sbb
jbe
jb
je
dec
je
pop
jmp
push
xor
(bad)
adc
sub
adc
aas
mov
jmp
mov
adc
add
add
stos
jno
fisttp
in
das
mov
cmp
ins
mov
(bad)
out
nop
in
mov
ins
pop
mov
loop
test
add
dec
int3
call
sbb
cld
jp
adc
cmp
adc
sbb
jg
mov
scas
iret
jl
add
inc
shl
loopne
dec
imul
add
dec
push
mov
or
leave
push
add
push
cli
push
cmp
pop
pusha
nop
and
cmp
adc
rol
sub
and
retf
adc
jecxz
jecxz
xor
jl
inc
xor
dec
push
jo
(bad)
dec
mov
push
leave
mov
aaa
enter
mov
inc
dec
jne
dec
adc
xor
popa
inc
sbb
lock
into
and
jae
or
jno
sub
sbb
mov
jg
inc
aaa
jbe
test
or
fimul
cmp
mov
out
push
sbb
scas
push
ds
xor
sub
fsub
data16
and
jbe
jge
js
push
push
call
(bad)
add
sub
out
lock
adc
test
jns
adc
xor
jne
and
mov
aad
sub
and
loop
and
mov
cmp
mov
jnp
or
add
jno
mov
fdiv
dec
or
xor
xor
cwde
mov
inc
mov
push
push
mov
ins
or
mov
push
inc
mov
fadd
fwait
(bad)
push
adc
fisub
mov
aaa
adc
and
nop
cmp
out
inc
push
fadd
jbe
sbb
dec
xchg
inc
adc
mov
adc
je
rcr
lods
pop
adc
cmp
pop
mov
or
pushf
xor
sbb
arpl
cmp
inc
jl
sbb
cwde
dec
xchg
dec
inc
jo
loopne
pop
jb
sbb
or
pop
dec
sub
pop
into
adc
adc
shl
hlt
push
or
xchg
aas
xchg
jp
add
cdq
sbb
or
push
inc
cli
sbb
cmp
lea
outs
ret
xor
ret
arpl
or
adc
xchg
sahf
add
pop
retf
test
ja
pop
inc
sbb
mov
or
scas
cmp
inc
rol
add
clc
push
in
jp
(bad)
jns
dec
inc
and
hlt
push
sbb
lods
xor
hlt
adc
sti
pop
aaa
or
and
cmp
test
arpl
gs
mov
or
push
push
add
fistp
or
outs
dec
je
imul
add
mov
xor
and
cmps
mov
lods
or
and
les
cwde
add
adc
cmp
adc
out
les
inc
dec
and
add
add
mov
test
push
or
mov
xor
cs
xchg
jno
push
iret
or
mov
pusha
movs
pop
inc
ror
or
cmp
repz
push
xor
adc
and
adc
ins
sbb
jmp
sub
pop
pop
movs
sbb
lods
data16
lea
(bad)
out
outs
add
sbb
xchg
xor
inc
mov
inc
mov
sbb
or
inc
xor
cmps
mov
jg
aam
push
add
cmp
or
and
ja
sbb
or
inc
jne
sti
cdq
je
mov
adc
xor
in
iret
or
bound
mov
add
mov
inc
mov
add
xchg
ss
nop
sbb
add
in
sub
repz
adc
bound
aas
pop
test
sub
sbb
fisttp
mov
and
cmc
sbb
sbb
clc
ja
or
pop
(bad)
mov
sbb
std
jmp
test
add
adc
adc
jb
cmp
bound
or
xlat
xor
dec
xor
or
xchg
and
or
adc
or
xchg
pop
inc
inc
add
inc
test
popa
inc
add
aam
lock
repz
cmp
lods
jle
sti
push
mov
jne
xchg
add
sub
xor
and
jl
xchg
add
adc
or
xor
pop
dec
xchg
in
inc
mov
rcl
sar
(bad)
mov
ja
mov
or
div
inc
sub
ds
repnz
jmp
sbb
neg
ds
push
aam
inc
or
push
add
cmps
lods
cs
ds
and
cwde
inc
imul
adc
je
stos
cmp
scas
sbb
bound
shl
popf
(bad)
push
cmc
je
movs
je
in
add
xor
sbb
imul
jne
cmps
pop
call
mov
inc
pusha
pop
sbb
test
lods
imul
adc
push
xchg
sahf
lahf
mov
jo
xlat
aas
mov
loop
scas
ja
adc
inc
aas
mov
mov
adc
ficomp
jne
sar
ja
cmp
(bad)
dec
cwde
popa
fist
jg
sub
je
push
or
and
push
jmp
mov
mov
mov
jmp
sbb
or
int
stos
lahf
loop
add
cwde
stos
sbb
cs
jae
or
or
add
xchg
or
les
pusha
cmp
add
inc
pusha
nop
dec
push
inc
mov
jg
shl
add
stos
dec
call
add
jg
test
outs
jo
je
xchg
jl
in
or
or
push
out
xor
sbb
rcr
call
mov
pop
aam
int3
mov
arpl
enter
shr
cwde
push
inc
add
xor
mov
stc
scas
mov
clc
push
pusha
ins
jmp
pop
or
sub
sbb
ins
gs
je
jb
mov
pop
add
outs
popa
addr16
sub
(bad)
out
add
hlt
dec
outs
jbe
dec
gs
aad
cwde
test
mov
or
mov
adc
idiv
push
inc
outs
jb
arpl
inc
outs
ins
ins
arpl
fs
outs
outs
jae
sub
adc
out
adc
add
or
pop
inc
jne
jb
je
movs
pop
add
int
lods
das
retf
mov
cld
mov
push
or
xchg
sbb
cmps
shl
cmps
dec
push
dec
push
mov
std
pop
xor
add
lods
pop
inc
gs
mov
mov
add
jo
mov
popa
mov
jb
or
mov
cld
rcl
call
inc
pop
push
outs
inc
or
loopne
sbb
sub
pop
cmp
int3
dec
inc
sub
push
nop
mov
add
mov
fistp
sub
sub
mov
pop
aaa
js
popa
imul
shr
sbb
sar
mov
adc
sub
ins
jo
dec
lds
xor
adc
add
pop
adc
sbb
ss
jne
je
pop
cmps
std
jle
iret
lods
(bad)
or
inc
jae
outs
or
inc
cmp
loope
ins
ret
mov
push
cld
outs
fs
dec
(bad)
fsub
or
pop
ret
push
or
push
add
inc
mov
iret
and
xchg
push
sti
in
and
xor
xor
mov
jnp
sub
inc
mov
add
imul
adc
fistp
inc
scas
out
pop
push
cmova
mov
add
push
mov
out
pop
add
addr16
dec
or
or
movs
adc
xor
add
fwait
jle
adc
or
ins
dec
sbb
cwde
shl
enter
and
dec
rcl
add
jnp
test
xchg
int
rol
sbb
cmc
fild
fsubr
ins
imul
mov
scas
add
or
test
xor
dec
add
adc
jmp
popa
jp
pusha
addr16
adc
das
xchg
add
mov
push
jo
jns
fisub
mov
aaa
or
fcmovnbe
(bad)
add
mov
fsub
add
add
push
and
add
add
(bad)
rdmsr
push
jl
add
and
add
or
inc
scas
push
test
dec
dec
fdiv
or
add
sbb
ror
xor
xchg
out
push
inc
jb
sbb
ja
mov
add
adc
add
mov
rcl
aas
add
add
retf
add
clc
pop
rcl
fdiv
jo
shl
xlat
adc
nop
pop
add
sbb
mov
push
sub
jg
adc
cmp
jbe
dec
data16
sub
mov
push
je
(bad)
clc
jl
push
push
in
jecxz
xchg
add
adc
out
mov
add
push
and
mov
mov
scas
mov
ss
sub
jns
test
sub
push
fwait
retf
jmp
ja
push
aaa
or
sub
movs
test
retf
and
add
sub
or
movs
push
xchg
in
cdq
in
jno
fwait
push
jo
dec
mov
jno
mov
lock
(bad)
in
leave
leave
jle
dec
es
or
pmulhuw
in
pop
and
icebp
sub
stos
cmp
jns
in
jbe
addr16
cmp
mov
ja
jbe
mov
xchg
push
xchg
fimul
cmp
push
lds
mov
shl
sbb
mov
pop
int
pusha
mov
or
out
xchg
mov
add
add
fst
mov
mov
fmul
or
sbb
cmp
cmovns
jecxz
jbe
adc
add
addr16
adc
xchg
adc
push
popa
jg
jg
cwde
adc
mul
mov
mov
push
(bad)
and
popa
ins
jne
mov
cmp
bound
xor
add
push
sub
pusha
in
hlt
ins
out
add
or
(bad)
outs
cdq
ja
mov
or
test
das
test
movs
adc
sub
push
pusha
jo
enter
xor
add
call
xchg
pop
cmp
xchg
adc
push
leave
fwait
call
and
push
popa
arpl
dec
in
mov
inc
or
mov
pop
dec
rcl
push
push
mov
iret
dec
imul
jp
mov
aaa
push
jno
ffreep
or
sub
ficomp
and
lea
enter
dec
mov
dec
mov
jecxz
cmps
les
xchg
in
inc
inc
js
xor
mov
popa
dec
xor
add
imul
add
stos
pusha
retf
test
xchg
mul
xor
sbb
ret
daa
push
and
dec
gs
and
pop
(bad)
dec
popa
inc
xchg
mov
mov
add
sub
jno
add
jo
xor
sar
dec
aaa
inc
rcr
popa
imul
dec
ins
sub
mov
push
adc
mov
daa
jns
inc
mov
or
xchg
push
pop
xor
mov
(bad)
xor
mov
inc
retf
dec
or
repz
arpl
jnp
stos
popa
pop
rcl
xchg
or
xchg
add
dec
dec
test
(bad)
cmps
push
ins
test
cmp
xchg
xor
add
inc
fld
movs
push
sbb
sub
add
retf
(bad)
push
fmul
loopne
pop
mov
xchg
adc
ss
cmp
pop
and
adc
mov
cmc
inc
add
add
inc
aaa
mov
inc
inc
out
test
mov
aam
loopne
sbb
sub
sub
jns
pop
add
aas
jo
mov
sti
mov
popa
push
arpl
jns
(bad)
xchg
inc
jnp
(bad)
mov
out
and
xor
retf
test
pop
ret
jg
mov
jle
mov
mov
cmp
leave
jne
nop
jmp
mov
jmp
mov
add
jg
mov
les
pop
and
and
add
or
push
cld
mov
mov
mov
inc
and
sbb
or
or
fstp
or
add
sbb
inc
and
add
adc
dec
add
arpl
pop
pop
pop
aas
ja
add
push
mov
mov
les
sub
mov
jg
cwde
inc
inc
xor
lea
mov
push
(bad)
std
fwait
add
movzx
xor
pop
pop
jo
adc
sub
push
ror
or
pop
movs
add
inc
dec
jne
(bad)
add
sar
popf
inc
mov
(bad)
adc
jg
outs
call
clc
dec
sub
jb
out
add
sbb
pop
mov
xor
rcl
test
push
ret
push
add
inc
mov
lea
pop
daa
test
xor
xchg
and
adc
js
rcl
enter
sub
and
cmp
rol
and
es
jb
adc
sub
mov
mov
push
int3
fmul
sar
mov
shl
mov
lahf
(bad)
adc
xor
mov
sar
xchg
pop
mov
mov
mov
jo
mov
xor
fidivr
mov
imul
sti
pusha
inc
mov
test
aaa
mov
mov
rol
pop
pop
jmp
mov
xor
test
je
mov
and
imul
cwde
cmp
xor
test
(bad)
fdivp
add
les
mov
mul
mov
mov
add
(bad)
sub
jae
jne
inc
inc
jl
loope
push
lods
and
shl
rcr
std
fild
cmp
adc
push
jmp
push
mov
dec
add
clc
mov
imul
inc
ins
mov
or
aaa
dec
add
jge
ret
adc
and
loopne
popa
add
xor
mov
mov
pusha
in
or
sub
jmp
sete
int3
call
inc
and
test
das
lock
sub
add
mov
test
aaa
xor
and
push
dec
clc
sub
adc
push
cmp
jge
arpl
and
jne
add
or
fs
jmp
shl
movs
je
cmc
dec
in
scas
rol
xlat
inc
es
sbb
or
das
test
sbb
and
jmp
loop
outs
(bad)
fisubr
inc
cmp
add
cld
and
pusha
push
in
outs
shl
add
outs
rcr
sti
jl
pop
fbld
rol
cs
nop
adc
adc
add
add
push
mov
test
inc
or
in
sbb
pop
test
and
xor
or
cmp
adc
jae
lods
cs
in
and
push
or
dec
push
jg
cdq
fsub
and
mov
bound
jmp
jae
out
xor
adc
add
pop
mov
inc
add
imul
in
adc
aas
or
jo
jb
ds
loopne
dec
push
push
push
push
inc
jg
aaa
js
mov
stc
push
and
cmp
fisub
fadd
test
test
loopne
pop
ins
hlt
sbb
dec
adc
mov
clc
pop
dec
xchg
ror
scas
push
sub
jbe
mov
push
mov
xchg
dec
cs
push
push
mov
xchg
jmp
add
xchg
dec
xchg
jo
arpl
ret
jo
arpl
dec
mov
jnp
(bad)
pop
xchg
or
pop
adc
xor
lods
inc
fwait
inc
popa
scas
movs
ss
fisubr
push
xlat
dec
popa
imul
xor
mov
mov
xor
jle
mov
jmp
movs
jl
inc
xor
test
inc
mov
loopne
cwde
stos
mov
mov
imul
mov
aam
mov
xchg
and
movs
mov
outs
ror
mov
mov
mov
adc
mov
rol
inc
fmul
bound
popa
add
inc
sbb
mov
mov
push
cmp
aaa
xor
pop
xor
data16
jle
push
adc
int3
outs
bound
push
mov
sub
loopne
aam
cs
aas
out
push
jnp
call
dec
dec
loopne
cmps
inc
cmp
push
push
stos
stos
movs
mov
mov
and
inc
xor
cmp
out
fcom
arpl
xor
cmp
xchg
test
mov
daa
fidivr
fsub
and
adc
ins
pop
pop
(bad)
push
cwde
ror
sar
fwait
cs
test
mov
xlat
or
movd
jp
dec
adc
addr16
addr16
jnp
shl
les
add
mov
test
or
sbb
call
push
xor
mov
mov
dec
or
loopne
in
addr16
adc
data16
add
movq
jp
lea
xchg
lahf
data16
into
cmp
sub
and
or
fcmovu
es
sub
jg
js
ss
jmp
loopne
add
fs
push
outs
ror
fs
nop
mov
mov
in
bswap
lock
shl
push
and
mov
fisttp
ret
mov
das
mov
fadd
mov
js
scas
das
movs
adc
fs
mov
int3
dec
sub
xchg
test
adc
pop
clc
or
in
mov
or
pusha
stos
mov
aam
ror
mov
jmp
loopne
iret
mov
lea
in
and
mov
adc
add
in
pusha
inc
pusha
ja
test
movs
shl
sbb
outs
das
xor
push
add
adc
add
in
cld
push
pusha
mov
cli
and
push
add
lds
out
ins
hlt
push
ror
cdq
push
leave
loop
in
mov
movs
imul
rol
sbb
and
adc
push
adc
jmp
les
pop
sbb
mov
pop
sbb
mul
std
cmps
ins
or
mov
push
pop
pusha
pop
aas
dec
bndstx
dec
movzx
xor
inc
sub
mov
fist
add
pop
jne
sbb
cmp
or
mov
fld
mov
xor
mov
ja
jbe
movs
mov
cmp
lods
adc
sbb
pop
ror
pop
ins
xor
pop
inc
sbb
mov
push
add
js
aaa
daa
mov
(bad)
jl
shl
fmul
pop
or
dec
inc
add
sbb
mov
ja
scas
ss
pop
scas
mov
cmp
inc
add
push
pop
lahf
test
loope
das
movs
push
sahf
fdiv
and
push
inc
push
les
fadd
shl
push
in
push
test
jo
cli
call
jbe
add
lock
add
adc
add
push
inc
inc
ins
popa
neg
push
or
popa
jb
cs
loopne
jns
adc
push
add
mov
je
dec
gs
cmp
pop
jb
pop
aaa
out
movs
pop
dec
mov
mov
add
lea
test
mov
mov
push
sahf
push
(bad)
das
or
test
or
das
enter
or
cld
das
sahf
neg
not
sub
push
js
mov
nop
lods
push
mov
sbb
sub
inc
pusha
call
xchg
jg
or
xchg
add
ins
or
pop
jle
popa
imul
or
mov
(bad)
(bad)
mov
push
and
jb
in
pop
pushf
mov
(bad)
retf
or
cs
cmp
sub
ror
sbb
xor
lar
pushf
and
data16
xchg
repz
outs
xlat
cmp
fsubr
xlat
xchg
pop
test
loope
mov
jnp
xchg
pop
or
inc
les
mov
sbb
push
inc
push
dec
mov
in
push
pop
in
int3
push
inc
or
dec
xchg
push
and
(bad)
call
push
jle
lock
(bad)
aas
dec
push
sbb
add
test
jmp
js
hlt
movzx
lea
push
cld
mov
cmp
sar
test
jmp
cmc
sbb
in
add
mov
xchg
xor
dec
cmc
add
push
sbb
jbe
add
add
aad
sbb
popa
push
sbb
mov
inc
inc
dec
jne
push
and
xor
mul
add
test
bound
cmp
jnp
pcmpeqd
push
loopne
push
movs
jbe
adc
add
pop
dec
mov
mov
dec
add
fld
add
pop
or
inc
xchg
cmp
or
sub
cs
sahf
ret
rcr
mov
adc
add
addr16
mov
js
push
enter
cmps
or
dec
sbb
xlat
into
mov
stos
in
ror
add
mov
and
test
and
xor
xchg
fsub
xlat
lock
rol
add
hlt
test
test
cmps
js
lock
add
add
lock
and
adc
dec
into
add
fbstp
mov
mov
mov
add
(bad)
inc
add
mov
loopne
xchg
ss
lods
mov
es
pinsrw
mov
xor
retf
adc
push
jae
and
add
inc
push
aad
cmp
jne
mov
or
mov
je
add
adc
mov
cli
add
inc
test
outs
in
(bad)
or
sub
or
test
sahf
or
push
sbb
inc
mov
sbb
add
mov
mov
push
scas
mov
cmp
inc
sub
inc
fcom
int3
addr16
add
pop
repnz
push
mov
mov
dec
fcomp
or
push
xor
call
add
jo
repz
test
add
add
pop
and
sub
mov
inc
push
shr
mov
push
pop
xlat
mov
ins
and
aaa
outs
sbb
in
cwde
mov
or
es
add
or
cmp
add
push
or
rol
xor
cmp
int3
xor
mov
ja
imul
sub
add
shl
vhsubps
adc
add
clc
(bad)
fdiv
add
mov
mov
in
sti
and
push
jne
sti
call
cli
sub
push
push
and
fisttp
mov
push
jmp
pop
cmp
mov
stos
and
cdq
sbb
or
xchg
lahf
imul
rol
arpl
movd
pop
jg
mov
mov
hlt
sbb
or
mov
push
add
inc
fld
jo
or
dec
lahf
ss
scas
add
fcom
pop
(bad)
dec
fstp
cmp
pop
mov
dec
or
aas
das
in
sbb
ret
add
shl
mov
push
out
arpl
imul
sahf
and
and
js
fadd
mov
dec
add
sbb
call
or
push
stos
and
mov
mov
inc
adc
xor
and
dec
dec
fcomip
or
push
xor
push
clc
call
add
fadd
add
ss
icebp
push
inc
mov
and
cmc
aam
jle
add
jo
adc
push
push
loopne
int3
lods
bound
and
push
ins
jp
adc
sub
push
sbb
loopne
xlat
mov
or
adc
lock
add
add
movs
inc
sub
add
sub
dec
das
sbb
fucomp
or
outs
loopne
jae
or
add
jmp
test
and
mov
and
lahf
adc
dec
sbb
inc
jns
push
xchg
(bad)
jl
mov
sub
cli
test
lods
mov
xor
hlt
(bad)
push
mov
popa
pusha
or
add
out
into
sbb
add
test
jne
loopne
test
popf
movs
lahf
pop
loope
imul
sbb
or
fwait
cmp
sub
enter
inc
add
cmp
and
fdiv
bound
mov
pusha
mov
int3
push
jl
add
xchg
add
push
pusha
dec
es
das
push
add
dec
cmps
and
enter
lock
mov
pop
mov
adc
mov
sub
mov
xor
and
daa
psubd
pop
mov
adc
dec
mov
arpl
push
(bad)
pop
sbb
add
inc
or
jno
adc
jl
inc
mov
bound
jns
pop
lea
jp
inc
dec
jne
les
or
pop
lock
and
or
call
pushf
out
or
popf
mov
packsswb
cdq
pop
push
js
mov
xor
shr
mov
mov
xchg
cld
mov
add
sub
or
vmovhpd
jl
fdiv
sbb
sub
test
add
add
hlt
cmc
lods
cmp
ret
scas
cmp
cmp
nop
stos
sub
aam
mov
mov
or
cmp
xor
daa
push
pop
mov
pop
in
iret
(bad)
jne
mov
sub
fimul
and
dec
loopne
inc
movs
daa
(bad)
sub
mov
jne
xor
xor
ins
mov
pop
jmp
lods
(bad)
jns
loope
push
por
jmp
mov
cs
sub
pusha
add
add
fcomp
mov
loopne
add
xchg
sbb
adc
repnz
add
mov
hlt
xchg
bound
or
test
lods
adc
(bad)
mov
mov
test
inc
jmp
sbb
push
test
dec
push
pop
sbb
es
add
lea
(bad)
and
lods
pop
sbb
in
mov
(bad)
push
sub
push
loope
(bad)
xor
sbb
rol
xchg
ror
mov
xor
jmp
inc
mov
or
sub
stos
inc
cmp
adc
inc
mov
adc
dec
xor
mov
cmp
and
jle
cmp
push
push
lea
in
adc
push
push
lods
sbb
sbb
push
sbb
sbb
inc
or
pop
push
call
(bad)
push
(bad)
fdiv
dec
xchg
or
inc
fidivr
jns
mov
adc
add
xor
adc
ins
addr16
adc
add
lods
jne
loope
imul
pop
cmp
inc
sub
pop
pop
lods
std
movs
and
push
xlat
leave
push
(bad)
fnstenv
add
pop
sar
sbb
je
dec
je
add
jne
cmp
int
ret
or
or
jmp
ret
rol
aas
movs
add
aas
inc
adc
add
lods
lock
je
rcl
adc
mov
and
mov
add
jmp
and
add
ins
cwde
mov
add
inc
add
fadd
sti
das
sbb
xchg
push
ja
test
and
int
mov
pop
mov
dec
mov
add
mov
add
add
aam
adc
dec
std
mov
or
ja
mov
jo
jbe
jp
xor
enter
lods
mov
cmp
push
arpl
cli
fild
imul
outs
push
outs
imul
sub
fld
sti
neg
lods
clc
push
inc
jb
popa
ds
xor
or
aam
push
retf
pop
loope
and
(bad)
aas
(bad)
dec
or
or
popa
jo
arpl
jns
stos
nop
fistp
cwde
cmp
outs
or
add
pop
mov
mov
jb
pusha
add
xor
test
cdq
xor
mov
pusha
in
xor
mov
add
xor
(bad)
inc
ja
cmp
push
mov
shr
sahf
(bad)
or
mov
cld
pop
cmc
inc
cmps
push
mov
js
xor
push
(bad)
mov
daa
outs
inc
and
xchg
sbb
mov
nop
adc
stos
cmps
add
fcom
leave
mov
fdivr
cdq
push
mov
mov
(bad)
inc
nop
scas
xchg
inc
inc
xor
mov
popf
or
cmp
or
mov
lahf
popf
push
jmp
(bad)
jl
out
out
mov
cmp
mov
jb
and
xor
adc
movs
fcom
lock
dec
loopne
mov
xchg
aam
stos
or
shl
sub
loopne
rol
add
sbb
hlt
cmp
(bad)
sbb
cmp
nop
and
push
mov
inc
mov
daa
data16
push
fcomp
mov
push
(bad)
adc
sti
je
loopne
ror
adc
mov
inc
inc
rol
movs
xor
push
sti
and
fdivr
xor
push
add
or
add
add
and
pop
lods
lods
ror
push
or
mov
stos
xor
xchg
nop
fmul
repz
pop
dec
sbb
mov
inc
cwde
das
push
test
setne
fmul
test
lahf
das
push
test
mov
pop
test
sbb
ins
add
mov
mov
outs
inc
jmp
mov
test
je
inc
add
xor
xchg
sbb
pop
add
jmp
mov
shl
test
(bad)
(bad)
shl
mov
push
cmp
scas
dec
push
adc
mov
popa
push
movs
push
add
jae
or
clc
mov
mov
clc
xchg
jne
push
mov
xchg
lock
shr
out
lods
inc
fwait
enter
mov
mov
cmps
sbb
dec
xor
clc
jle
jle
arpl
cwde
ror
xor
push
dec
mov
pop
mov
xchg
inc
or
mov
jne
xchg
sub
inc
mov
mov
lahf
sub
call
call
ja
or
and
push
push
add
lods
fst
or
inc
jo
push
arpl
and
xor
dec
add
add
add
or
xor
mov
sbb
fld
add
scas
xor
gs
je
jns
call
pop
pop
jae
dec
push
xchg
adc
inc
pop
cmp
out
addr16
jae
cmp
js
scas
mov
scas
inc
sub
pop
mov
pop
and
add
cmp
or
add
clc
out
shl
and
hlt
adc
call
cmp
sbb
pusha
xchg
imul
cmps
imul
(bad)
das
jmp
dec
jnp
push
loope
cmp
adc
inc
test
fucomip
cdq
mov
sub
jp
gs
ins
rcl
jo
pushf
ins
loopne
outs
fcom
sub
loope
cs
xchg
inc
or
je
ror
and
adc
btc
cmp
jge
(bad)
ja
call
push
lea
dec
and
cmp
xor
cmp
pop
call
add
mov
mov
movs
cmp
jle
outs
mov
or
jge
mov
sub
daa
call
in
out
test
jl
cmp
jl
xchg
push
bound
or
mov
mov
call
or
pop
inc
pusha
mov
mov
dec
push
fucomip
lsl
adc
xor
das
xchg
pop
pop
cmp
jg
add
cmp
sub
inc
push
cdq
aam
lock
loopne
int3
cmp
or
push
inc
adc
push
adc
inc
sub
push
mov
frstor
inc
cdq
cmc
cwde
fidiv
push
loopne
cdq
pop
dec
aas
push
add
mov
aam
imul
xor
jl
in
pop
pop
jmp
je
inc
jne
add
add
cmps
mov
mov
cmp
pop
add
in
sahf
cmp
or
lahf
movs
mov
inc
cmps
cmps
push
jmp
test
lahf
lock
push
and
add
(bad)
outs
(bad)
das
loopne
js
sbb
pop
movs
push
mov
ret
sbb
mov
mov
inc
and
push
in
cmp
xchg
mov
icebp
push
lds
out
outs
push
shl
xchg
push
mov
data16
mov
dec
adc
cs
cmp
add
inc
push
cdq
test
pop
mov
or
xor
iret
repnz
or
jbe
push
push
mov
sar
add
cmp
jg
adc
inc
pusha
cmp
aam
test
mov
and
xor
imul
adc
loopne
xor
in
ds
mov
push
jmp
adc
push
adc
pop
enter
add
ret
call
es
sti
pusha
in
sub
rcr
pop
dec
mov
dec
loopne
jge
test
js
inc
aas
sahf
or
ss
clc
push
js
push
ins
test
cmp
inc
test
cmp
jge
dec
loope
(bad)
push
mov
fidivr
in
add
nop
add
push
xor
sub
dec
adc
mov
add
into
and
cmp
scas
(bad)
push
jo
and
inc
dec
jne
add
mov
and
sbb
aam
imul
xchg
rcr
rol
shl
or
loope
pop
je
sub
shl
test
call
sar
jae
and
mov
popf
sbb
addr16
adc
or
jnp
rol
daa
push
xchg
add
gs
aaa
jne
mov
stos
pop
mov
mov
vcvttpd2dq
push
in
xor
jg
inc
rol
ret
and
lahf
push
(bad)
mov
sahf
retf
lahf
xchg
js
cmp
pop
push
shl
mov
das
test
sahf
sbb
and
adc
rcl
adc
jp
mov
paddq
mov
shl
dec
xlat
pop
sbb
lock
adc
bound
pop
(bad)
in
adc
rol
push
idiv
push
inc
xor
pop
(bad)
inc
into
mov
ret
add
sub
adc
pop
xor
stc
sbb
leave
and
aad
in
cmp
sti
es
fwait
sbb
std
(bad)
cmps
test
mov
jmp
xchg
lahf
dec
ret
add
fucomi
mov
sar
add
or
mov
sub
setg
pop
test
jp
lea
or
jno
dec
xchg
fcmovbe
xor
(bad)
mov
add
test
rol
pushf
sub
cwde
add
fndisi(8087
shl
adc
add
adc
cmp
sbb
jmp
out
out
add
mov
inc
jb
out
add
(bad)
push
inc
aaa
add
jmp
add
or
or
out
inc
xor
aad
cmp
popa
jo
fadd
aad
sbb
add
ficomp
retf
sbb
push
pop
push
add
mov
pop
(bad)
callw
xlat
dec
shl
push
pusha
add
rol
cli
ror
fild
mov
cmp
sub
xchg
push
shr
lods
jl
leave
cmps
mov
jmp
push
and
sbb
fadd
xlat
push
cmps
or
enter
sbb
or
sbb
push
and
adc
sbb
jmp
sahf
sbb
inc
jbe
lahf
inc
jbe
adc
fidivr
or
test
scas
push
and
mov
sbb
jne
xor
add
je
or
dec
js
mov
rcl
add
out
jne
pusha
mov
mov
outs
cmp
adc
pushf
loopne
sbb
cmp
and
jle
les
and
call
xor
push
mov
fsub
xchg
fadd
xor
add
sbb
sbb
xchg
mov
dec
push
xchg
into
pop
shr
jle
add
in
in
pop
imul
or
cmp
jne
mov
or
jae
mov
xor
aam
jb
test
(bad)
pop
imul
sub
jae
jae
adc
and
shl
add
dec
in
cmp
inc
nop
or
cmp
jle
sbb
and
fist
cmp
add
test
cmps
lea
js
imul
or
adc
mov
push
mov
sbb
push
push
fimul
dec
add
mov
loope
int
add
and
push
pop
xchg
xchg
int3
xchg
movs
xchg
dec
fld
and
movzx
dec
sbb
popf
sbb
(bad)
je
pushf
daa
inc
sub
or
test
push
xchg
nop
das
and
lahf
sub
shr
push
dec
outs
popf
pushf
cmp
adc
or
adc
neg
jg
mov
shr
xchg
and
add
or
dec
movs
cmp
push
sbb
ins
or
shr
sub
push
push
mov
jns
movs
out
xchg
inc
adc
js
ins
shr
iret
sbb
pushf
cmp
or
iret
or
and
push
xchg
mov
xor
enter
jne
push
xchg
loopne
rol
jmp
cmps
inc
fstp
retf
or
and
jl
sbb
cmp
test
aad
xlat
xchg
sbb
popa
aaa
and
div
mov
mov
or
data16
pusha
in
test
or
call
ret
add
je
sbb
sbb
add
and
(bad)
aad
(bad)
js
enter
(bad)
lods
xor
out
std
adc
and
or
fstp
(bad)
popf
ret
lods
jno
push
add
inc
cmp
pop
repnz
into
adc
mov
cmp
retf
push
mov
and
test
mov
sub
fadd
jns
mov
xor
aas
stos
mov
test
dec
mov
adc
mov
push
jg
fadd
or
and
dec
cmps
pop
xchg
sbb
pushf
cmc
cs
adc
loop
test
or
dec
mov
cmp
pop
xor
push
test
loop
arpl
xor
fs
mov
ret
aaa
hlt
mov
pop
std
dec
inc
adc
aaa
jno
mov
jno
into
push
pop
arpl
enter
nop
cli
jae
ds
push
add
or
jno
pop
pop
div
jmp
push
inc
das
jp
push
nop
aad
pop
xor
mov
or
mov
mov
jo
mov
ss
adc
cmps
lods
dec
sbb
rcl
or
shr
test
aas
test
sqrtps
inc
stos
jg
cs
push
dec
adc
xlat
jg
aad
add
add
pop
add
dec
cmp
jg
mov
unpckhps
test
stos
call
mov
je
invd
jno
and
inc
test
mov
cwde
mov
shl
das
and
test
(bad)
mov
ja
movups
push
xor
lahf
lldt
test
stos
hlt
dec
jb
jns
int3
or
mov
sbb
test
or
cmovns
lahf
test
lea
mov
pop
rcr
push
mov
or
mov
mov
add
iret
stos
mov
lahf
adc
fwait
sbb
outs
mov
inc
add
inc
mov
xchg
or
mov
mov
test
mov
les
xor
xor
and
xchg
push
es
retf
mov
pop
scas
adc
xor
popf
mov
push
pusha
fadd
lea
adc
inc
jnp
(bad)
scas
js
adc
mov
pop
push
sub
rcr
pop
in
(bad)
dec
cs
sub
test
pop
fistp
addr16
pop
adc
mov
jle
inc
sbb
pop
lods
outs
adc
jle
xor
les
ins
dec
pusha
fsubr
outs
lods
enter
push
and
jmp
rcr
rcl
xor
push
enter
movs
outs
adc
xchg
sub
xchg
ja
cmp
into
int3
push
add
inc
aaa
or
xchg
in
mov
data16
mov
call
cmp
mov
add
rcl
jne
aas
in
push
add
add
fcom
enter
add
or
xor
adc
lock
das
hlt
les
(bad)
cwde
pushf
imul
ret
loopne
and
aam
pop
mov
inc
jge
add
popa
jmp
(bad)
hlt
jmp
push
add
add
rcr
mov
js
or
sub
mov
mov
cmp
xchg
pop
outs
or
pusha
mov
inc
dec
and
or
les
in
mov
out
ret
or
adc
(bad)
jo
add
out
adc
and
add
push
out
stc
out
ror
out
sbb
push
add
adc
add
xor
dec
inc
nop
add
add
mov
push
or
add
shl
xchg
lds
addr16
fcom
add
daa
add
xchg
mov
inc
push
add
fadd
fsub
aad
mov
aaa
adc
pop
sbb
sbb
mov
mov
jbe
addr16
inc
fdivr
adc
mov
mov
into
mov
fcomp
sbb
sahf
lods
icebp
mov
lods
fs
xor
sbb
add
mov
mov
and
test
mov
adc
outs
(bad)
enter
jmp
adc
mov
(bad)
(bad)
sbb
sub
mov
jmp
cmp
mov
ja
push
cvtpi2ps
mov
mov
mov
iret
outs
sbb
inc
dec
scas
leave
adc
outs
and
sbb
outs
mov
arpl
sbb
outs
out
mov
out
ja
ret
mov
clc
sub
add
aad
jge
popf
inc
pusha
pop
push
hlt
inc
pop
lea
xchg
(bad)
jmp
xchg
test
inc
xchg
addr16
fistp
cdq
and
cmps
lods
cmp
or
mov
sub
cmp
push
out
test
iret
mov
sub
aas
mov
aam
jae
mov
popf
push
xchg
xlat
mov
push
mov
and
xor
sub
das
cmp
cwde
aaa
adc
inc
or
daa
sbb
aaa
jno
sbb
dec
inc
loopne
fist
pop
mov
fbstp
mov
jae
sbb
rcl
pushf
pop
psadbw
adc
fs
aam
scas
sbb
mov
inc
repnz
mov
xchg
mov
out
xchg
push
daa
pusha
sbb
daa
push
ret
inc
pop
int3
outs
neg
daa
push
dec
scas
in
pop
dec
dec
das
inc
(bad)
pop
stos
ds
stos
mov
aas
je
cmp
mov
mov
adc
fiadd
and
loopne
fs
add
xchg
xchg
mov
les
in
stos
inc
mov
push
jmp
hlt
iret
movd
jo
jle
shl
popa
xadd
in
push
ror
dec
pop
pop
add
add
jo
hlt
pusha
or
ror
int3
mov
xlat
push
test
not
xlat
arpl
into
das
shl
mov
stc
or
aad
jae
sub
std
wbinvd
xchg
adc
outs
dec
sbb
xadd
sub
setno
inc
or
adc
mov
(bad)
jl
prefetcht0
adc
sets
movs
push
femms
inc
or
les
push
dec
nop
ins
push
adc
je
or
or
pusha
imul
imul
mov
xlat
xchg
jl
add
mov
dec
cmp
pextrw
push
sub
loope
ret
ret
jo
push
cmp
cvtpi2ps
sub
loopne
(bad)
ret
jno
(bad)
xor
popa
or
(bad)
mov
pxor
xor
xor
pop
xchg
cmp
lods
lock
popf
ret
loop
aad
pop
add
jmp
ret
push
cmp
push
mov
test
(bad)
mov
sbb
aas
enter
adc
dec
in
sub
fdivr
(bad)
fdiv
out
adc
cmp
adc
scas
les
enter
sub
push
leave
or
sbb
pop
push
sub
ror
lock
push
inc
rcr
and
leave
xor
leave
cwde
setno
xchg
sub
push
xchg
sbb
adc
and
push
push
or
add
adc
ror
push
pop
pop
adc
pop
mov
xlat
and
inc
dec
add
jo
xchg
mov
adc
mov
or
mov
jg
jno
std
icebp
mov
pop
sbb
std
or
cwde
inc
retf
adc
lock
fldenv
cs
add
xchg
push
inc
int3
cmps
pop
test
pop
add
xor
mov
sub
xchg
jnp
div
jae
jge
or
cmp
dec
push
test
jge
pop
dec
adc
lahf
xchg
cmp
jle
bound
test
jge
sub
daa
iret
sub
in
lea
add
cmp
popf
dec
add
adc
daa
jle
mov
cmp
sbb
jne
fucomip
lsl
adc
mov
mov
in
arpl
ror
inc
cld
or
adc
adc
push
adc
mov
xor
xchg
mov
mov
mov
dec
fdiv
dec
cld
(bad)
int
pop
stos
xor
je
push
loope
inc
and
pop
es
or
test
inc
fimul
iret
add
sub
sbb
(bad)
arpl
and
inc
sub
add
aaa
inc
dec
movs
dec
ja
and
lds
loope
mov
xor
retf
inc
jno
and
sbb
lahf
test
ss
mov
sbb
sbb
sub
mov
jbe
inc
push
or
mov
inc
in
out
ret
ret
mov
jmp
test
mov
in
jecxz
inc
push
pop
xor
arpl
loope
fs
sub
jmp
pop
fsub
mov
sbb
and
rol
loopne
dec
hlt
push
jp
xor
cmp
push
clc
add
cmp
dec
aas
loop
test
or
mov
scas
adc
movs
test
js
jnp
jge
mov
arpl
and
adc
add
push
pop
fwait
or
add
mov
dec
inc
push
int3
loope
sbb
outs
pop
inc
add
jle
dec
mov
add
mov
mov
xchg
push
inc
push
js
push
inc
lock
ins
inc
push
mov
das
lods
xor
loope
(bad)
push
mov
sbb
or
ret
add
sub
sbb
push
in
sub
mov
xor
mov
adc
test
inc
dec
jne
pop
loop
sbb
mov
and
loopne
int3
or
or
xor
add
cmp
cmp
out
sbb
cmp
cmps
shr
sub
pop
or
pusha
add
sub
cmp
lock
sbb
test
and
das
shl
and
add
jecxz
popa
jbe
inc
and
lahf
push
(bad)
js
or
mov
push
mov
popf
jmp
popa
rcr
adc
cs
dec
jne
push
out
or
int3
jnp
fisub
xor
test
jp
lahf
call
fild
inc
jle
mov
sar
idiv
mov
ins
add
inc
dec
jne
mov
test
xor
push
pop
imul
nop
or
cdq
loopne
sub
mov
inc
pop
aaa
loopne
loopne
in
sub
shl
movs
lea
aaa
or
xchg
js
pop
pop
adc
fld
xlat
cmc
pop
or
dec
cld
js
and
xor
loopne
scas
js
(bad)
leave
pop
inc
mov
push
sub
jbe
fcom
movs
in
xor
adc
and
jl
cmp
lods
ret
fadd
add
jno
call
and
cld
xor
(bad)
pop
and
cmp
test
jns
clc
cld
in
leave
test
out
mov
mov
pop
xchg
mov
pop
aaa
push
pop
sub
ss
add
aam
adc
cwde
sub
fld
push
mov
pop
lods
pop
loopne
xchg
pop
aam
(bad)
sub
dec
add
dec
loopne
xchg
ret
cmc
xor
and
fidiv
cld
jle
and
or
loopne
scas
cmp
call
in
cmps
cmp
or
aas
lods
je
adc
inc
js
xchg
ss
and
add
sub
or
push
loope
jno
sub
push
fmul
hlt
push
lods
es
pop
sbb
jl
mov
adc
push
or
and
jne
or
lea
push
ss
cmp
clc
ins
pop
add
jmp
add
or
xchg
test
xchg
add
add
(bad)
in
ins
inc
and
jg
scas
stos
in
in
xchg
push
arpl
xchg
sbb
xchg
and
sub
(bad)
dec
xchg
dec
xor
ret
stos
fadd
pop
and
fucomi
xchg
fmul
add
test
and
and
shr
in
fdivr
stos
ret
iret
fs
iret
inc
mov
pusha
loopne
iret
fst
iretw
jecxz
pop
adc
jae
iret
fnstsw
inc
jb
in
sbb
pushf
and
daa
fnsave
test
iret
jecxz
dec
push
inc
test
sbb
push
adc
mov
ins
iret
fistp
inc
test
mov
push
iret
scas
or
mov
or
sbb
iret
rol
mov
iret
lods
iret
and
and
mov
pop
adc
xor
test
and
aas
iret
dec
add
and
fadd
loope
dec
outs
lods
or
ins
mov
sbb
shl
and
ret
iret
jo
stos
jbe
push
popa
jecxz
iret
pop
xlat
jecxz
or
adc
adc
test
mov
cmp
iret
int3
ss
test
add
adc
adc
iret
dec
das
iret
mov
sub
in
mov
dec
push
iret
push
data16
push
push
iret
jmp
pop
jnp
cmp
push
iret
in
mov
jb
add
or
push
nop
pushf
sub
jmp
add
adc
dec
test
mov
xor
cwde
xor
mov
push
mov
adc
nop
mov
or
test
add
lods
mov
inc
test
in
jo
xchg
mov
mov
push
push
iret
aas
enter
iret
dec
sti
stos
sub
adc
push
lods
iret
sbb
iret
xchg
add
out
ret
inc
iret
sbb
stos
jmp
sub
fs
mov
in
sbb
iret
cmp
push
clc
and
nop
iret
pop
std
in
sbb
adc
mov
dec
push
iret
lock
iret
in
fs
adc
iret
inc
test
repnz
arpl
inc
jb
adc
mov
gs
daa
cmp
ins
in
test
jo
add
add
repnz
call
mov
iret
out
or
sub
iret
xor
leave
mov
(bad)
in
push
adc
movs
adc
lods
iret
repnz
sub
adc
add
or
sbb
adc
test
push
xchg
(bad)
lods
adc
sbb
loopne
in
out
es
or
bnd
cmc
mov
dec
pop
push
repnz
sub
xor
xacquire
add
(bad)
movs
add
(bad)
or
test
mov
sub
stos
add
push
add
sub
sub
test
push
adc
pop
or
in
out
movs
cmp
cmp
aam
cmp
mov
dec
test
jp
sbb
dec
ficom
inc
sbb
mov
xchg
mov
mov
ins
add
inc
dec
jne
gs
shl
das
cmp
int3
rcl
retf
ja
mov
inc
test
je
les
xchg
inc
cmps
fcomp
js
cmp
lock
push
sub
or
xor
pop
push
int
jnp
movzx
daa
hlt
or
xor
rcl
rcr
push
sbb
mov
jb
out
movs
js
mov
cmp
je
add
repnz
mov
fwait
push
push
or
or
dec
or
sti
loop
in
mov
movs
inc
add
adc
add
dec
mov
and
mov
add
lea
push
adc
outs
aaa
dec
cwde
or
lea
pop
pop
dec
movs
leave
rol
(bad)
addr16
outs
and
adc
push
dec
push
ds
mov
add
xor
bound
ds
add
mov
test
inc
inc
in
ins
xchg
fld
mov
stos
mov
dec
rol
adc
add
lock
push
retf
adc
push
adc
jno
sub
aam
xchg
xchg
push
fst
xlat
mul
out
xor
ret
jbe
cmc
xlat
push
xor
pushf
jmp
jge
xlat
pop
and
mov
pop
or
push
xor
fldenv
nop
inc
and
neg
ret
jmp
push
inc
push
mov
mov
dec
les
pusha
adc
ds
icebp
test
add
pop
xchg
jb
nop
pop
repz
or
or
mov
test
cs
or
sti
fs
inc
stos
(bad)
push
sub
sub
out
pop
mov
push
push
fadd
frstpm(287
pop
and
pop
jl
dec
lock
sbb
daa
js
cld
mov
adc
jnp
jae
jo
adc
sbb
add
lock
out
fidiv
sub
sbb
cmp
pop
cld
sub
and
xchg
inc
jmp
or
add
add
movs
or
pop
(bad)
out
pop
sub
std
les
push
dec
dec
add
add
lock
push
sbb
or
push
xor
xchg
and
daa
add
cwde
repnz
adc
add
mov
lods
jg
mov
pop
inc
ja
add
dec
cmps
inc
mov
and
inc
pop
icebp
add
ja
shr
push
push
and
daa
push
jl
inc
add
daa
out
push
adc
and
out
imul
test
or
push
add
cmp
push
add
in
repz
push
dec
mov
cmp
dec
add
out
pop
push
out
add
mov
xchg
out
nop
add
sbb
and
add
mov
leave
test
leave
mov
daa
push
in
push
cmp
lods
out
rol
sbb
inc
in
xor
arpl
inc
xchg
push
lods
out
loopne
jno
push
push
mov
push
(bad)
inc
add
cmp
(bad)
mov
pushf
aam
push
jbe
xchg
sub
dec
test
frstor
(bad)
and
nop
pop
or
aaa
leave
or
add
inc
add
and
nop
adc
xchg
nop
and
adc
adc
fsub
add
or
xor
and
lahf
sub
xchg
retf
scas
xchg
stos
jbe
xchg
push
xor
cmp
xchg
cmp
add
sub
nop
cmps
and
adc
daa
ret
pushf
dec
mov
test
mov
fwait
imul
jo
or
mov
add
add
sbb
cmps
or
bound
lock
in
add
mov
and
aas
adc
push
adc
in
scas
and
jmp
test
cmps
or
pop
xchg
add
cmps
or
pop
pushf
adc
loop
nop
fldcw
mov
movs
test
dec
cwde
mov
cmp
adc
or
or
inc
je
mov
sub
sbb
mov
test
jno
and
movs
adc
loop
dec
mov
sbb
in
push
pusha
sti
mov
xlat
sub
popf
xlat
fdiv
enter
clc
push
shl
imul
sbb
lea
xlat
xor
xlat
(bad)
pop
test
out
mul
sub
adc
lods
popf
fsub
mov
sbb
pop
pop
add
adc
lea
sti
cmp
pop
and
xor
and
rcl
xor
push
test
adc
call
dec
adc
or
sub
loopne
and
imul
push
adc
out
daa
adc
mov
in
add
aam
inc
and
sbb
aaa
mov
sbb
or
jmp
adc
cld
xchg
aaa
cmps
add
push
xlat
scas
add
pop
nop
call
pusha
sbb
sub
jecxz
adc
push
jb
sub
add
pusha
rol
push
movs
inc
pop
xor
lods
pop
adc
add
inc
push
loopne
es
add
push
loopne
out
cmp
sahf
lods
out
shl
cmp
xchg
cmovnp
fistp
adc
pop
add
pop
outs
pusha
shr
and
pop
enter
dec
dec
jb
adc
sbb
shl
or
in
setb
inc
and
sbb
lock
add
sub
add
sbb
add
xor
cmps
add
pop
push
lss
add
push
push
add
mov
inc
vmwrite
push
push
int3
add
add
and
add
push
test
lods
adc
lock
or
stos
inc
or
daa
sub
dec
dec
add
or
loope
lods
daa
sbb
cmovbe
daa
inc
xor
leave
popa
idiv
xor
movs
mov
inc
push
and
xchg
scas
mov
dec
repz
cwde
mov
loopne
mov
clc
xor
add
cmps
sbb
dec
(bad)
mov
(bad)
sbb
sbb
in
sbb
leave
dec
push
sbb
cwde
fs
add
push
inc
adc
sub
cmps
bound
das
fadd
scas
add
and
cdq
cs
sbb
fistp
fwait
pop
push
mov
add
nop
mov
or
test
add
fadd
rol
mov
shl
pop
push
fistp
inc
mul
inc
lea
div
sub
pop
xor
movs
push
adc
inc
push
neg
pusha
add
sbb
adc
push
adc
sub
cmp
sub
push
adc
and
pusha
pusha
aam
mov
xor
cmp
push
mov
mul
add
nop
cmp
push
mul
shl
dec
push
push
cdq
adc
jno
shl
push
sub
push
inc
pop
shl
pop
inc
call
sub
pop
stos
jne
daa
shr
add
(bad)
cmps
xchg
or
rol
jo
pop
jne
adc
sub
sub
cs
movs
das
fnstenv
jg
jmp
xor
add
jbe
jge
mov
mov
mov
dec
cmp
sbb
std
jge
cmp
jle
or
inc
dec
inc
loopne
push
cmp
push
push
pushf
popa
mov
mov
ret
add
pop
nop
adc
mov
ror
aad
sbb
or
inc
repnz
pop
hlt
xor
nop
scas
in
pop
adc
mov
push
lds
cdq
daa
lahf
jb
ficom
add
push
or
into
pop
popa
adc
or
leave
add
pop
adc
imul
push
sub
push
adc
jnp
(bad)
push
push
inc
rol
out
bound
xor
inc
jo
sbb
bound
push
and
dec
icebp
sbb
dec
clc
inc
ja
cdq
inc
mov
inc
cmp
sub
sbb
xor
out
and
add
in
mov
cmp
stos
mov
ss
add
or
cmp
push
nop
shl
dec
fsub
mov
pop
push
nop
or
stos
pop
scas
add
or
cmp
out
in
dec
adc
add
xchg
add
pop
sbb
pop
test
pop
mov
dec
ins
loope
les
shl
pusha
ror
frstor
adc
jmp
xchg
lea
cli
jnp
mov
pusha
jg
mov
pop
dec
or
or
and
adc
popf
adc
adc
cmp
es
jne
add
(bad)
aaa
mov
sar
test
push
mov
aaa
mov
pop
sbb
inc
add
cmp
(bad)
(bad)
call
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
je
imul
push
xor
cmp
outs
je
es
sub
popa
ins
mov
cdq
std
dec
outs
arpl
adc
jmp
hlt
jg
pusha
movs
arpl
inc
gs
jne
je
test
inc
xchg
pusha
test
inc
int3
add
push
mov
sbb
add
mov
cld
cmps
call
mov
pop
popf
lea
imul
add
push
enter
xlat
fucomp
pusha
inc
pop
dec
add
scas
call
les
int3
and
neg
sar
movs
inc
push
xor
mov
fidivr
xlat
add
popf
jle
or
int
hlt
push
pop
mov
sbb
sbb
xchg
xor
pushf
add
mov
cmp
push
gs
data16
pop
xor
add
(bad)
(bad)
mov
adc
add
fsubr
or
outs
retf
arpl
loope
in
xor
push
or
or
(bad)
pushf
mov
pop
imul
or
or
adc
mov
out
fist
mov
ds
or
push
imul
or
mov
ret
push
push
cmp
scas
ins
movs
loop
sbb
out
fild
les
sub
inc
push
dec
jns
test
push
cmp
pop
or
scas
mov
mov
push
and
vpmacssdd
loopne
dec
adc
(bad)
addr16
push
mov
xor
pushf
outs
jbe
inc
jb
jns
popa
outs
popa
addr16
inc
add
addr16
xchg
or
sub
push
inc
(bad)
jmp
rol
mov
js
sbb
add
and
add
rol
in
jnp
int
mov
int
shl
int
cmc
push
mov
inc
imul
imul
pop
mov
xlat
pop
fstp
mov
std
jg
jmp
imul
ins
mov
cmp
jno
frstor
pop
adc
mov
push
dec
test
or
cmp
inc
stc
jo
or
mov
inc
xchg
dec
mov
mov
push
outs
outs
sbb
jb
inc
or
push
ds
dec
aas
cwde
(bad)
call
int
mov
mov
mov
dec
dec
in
add
inc
sbb
add
sbb
push
dec
xor
or
jno
jns
movs
ficomp
rcl
scas
je
xor
(bad)
fidiv
daa
adc
push
sub
jo
daa
pop
aas
xchg
adc
jecxz
xchg
mov
xor
cmp
jo
add
inc
mov
scas
sbb
loop
mov
or
pop
push
sbb
mov
push
das
jg
mov
push
cs
push
test
push
ss
psubd
jle
push
jns
inc
and
push
mov
or
(bad)
setae
add
rol
loopne
xor
and
retf
xchg
adc
pop
out
or
mov
call
dec
inc
outs
jne
cld
bound
xlat
adc
add
pop
(bad)
fisttp
js
add
push
inc
pop
je
and
jns
and
popf
and
adc
dec
out
mov
dec
push
fsub
pop
push
add
inc
and
std
outs
mov
adc
mov
pop
in
ret
sub
adc
inc
out
xor
mov
dec
push
inc
push
out
ins
lahf
push
inc
and
clc
push
lods
test
add
gs
cs
sbb
add
enter
pusha
xor
push
xchg
jmp
sub
in
push
pusha
adc
pushf
and
ins
or
or
jle
pop
pop
mov
test
sub
push
push
mov
mov
rol
and
loope
fadd
inc
jne
mov
sbb
pop
add
push
movs
call
test
dec
das
mov
call
ja
inc
out
pushf
and
pusha
pop
int3
shl
mov
aam
push
fwait
sub
cwde
ret
push
sub
js
cmp
jae
ins
xlat
loopne
cmp
mov
sub
mov
sub
sub
push
add
(bad)
cmp
sub
cld
test
and
cvtdq2ps
shl
push
dec
adc
push
js
push
dec
dec
outs
adc
outs
(bad)
loop
push
daa
daa
daa
and
cli
dec
xchg
xchg
xchg
xchg
push
ins
mov
enter
mov
in
push
or
jb
xor
sub
jne
cmp
jns
loop
push
imul
aas
psrlq
sbb
mov
xor
pop
push
fist
inc
inc
es
and
xchg
imul
outs
dec
pop
cmp
(bad)
or
add
cmp
jno
or
test
ror
jae
popf
and
outs
jns
push
mov
inc
(bad)
pop
push
adc
fwait
cmp
add
addr16
adc
or
inc
mov
popa
jg
jg
and
sar
jg
sub
fld
inc
fs
mov
out
add
arpl
sar
push
ss
or
or
push
jns
bound
imul
pusha
movs
xchg
or
stos
cdq
shr
mov
adc
add
movs
or
inc
inc
mov
cmc
cmp
add
ror
adc
out
xchg
push
movs
xchg
jbe
not
xchg
push
inc
add
mov
cmp
fwait
gs
cli
les
and
(bad)
arpl
test
inc
or
test
hlt
add
jae
imul
sbb
add
imul
test
nop
add
inc
ror
mov
add
fimul
inc
add
jo
or
js
nop
imul
xchg
xor
std
inc
inc
js
jo
xchg
arpl
ja
mov
(bad)
xchg
pop
rol
jb
add
mov
(bad)
loop
mov
or
lods
or
mov
imul
jo
mov
fbstp
jl
dec
gs
xor
inc
xor
ror
mov
jg
out
dec
popa
pop
or
cwde
dec
and
pop
inc
mov
es
add
and
cmp
add
je
imul
or
dec
popw
dec
push
xor
sbb
or
mov
jns
retf
xor
fisttp
mov
fistp
xchg
push
pop
cli
mov
dec
ins
or
ret
(bad)
jns
or
arpl
and
adc
push
xchg
xlat
mov
sub
mov
mov
test
or
ins
xor
loopne
mov
jae
or
inc
ins
xchg
mov
fwait
dec
and
or
sub
sub
and
imul
jmp
call
pop
xlat
mov
nop
pusha
mov
loope
or
sbb
or
xchg
add
cmp
push
xchg
pusha
or
ror
pop
inc
mov
dec
push
mov
imul
cli
shr
stc
add
(bad)
fdivr
xor
xor
out
out
inc
ret
js
shr
cmp
push
add
pusha
inc
and
add
or
in
or
aas
or
pop
dec
sbb
add
outs
mov
mov
pop
pop
aam
repnz
push
xor
pop
ja
mov
jnp
clc
movdq2q
(bad)
sbb
leave
test
add
gs
cmp
add
test
retf
mov
pop
pusha
xchg
inc
mov
lods
out
lea
mov
aaa
push
lods
mov
ftst
xchg
add
and
adc
cwde
pop
lahf
fs
mov
es
das
loope
dec
adc
fiadd
sub
outs
xor
mov
in
push
add
lods
push
dec
mov
stos
cmp
push
sub
and
xor
xchg
fnstsw
dec
pusha
test
bound
sbb
adc
add
pop
pop
lea
mov
inc
aaa
cmp
pop
scas
fdivr
loop
cmps
ss
fnstcw
pop
mov
lock
aas
dec
push
mov
bound
shr
daa
push
push
cld
test
aas
ins
sahf
inc
fdiv
push
les
inc
push
movs
mov
xlat
les
push
cmp
xlat
xor
imul
add
xlat
xchg
pop
pop
cmp
pushf
lahf
mov
std
push
(bad)
cmp
bound
pop
scas
movntq
cmp
jns
arpl
in
pushf
pushf
mov
mov
sahf
pop
arpl
dec
sbb
scas
not
addr16
fs
mov
test
movs
leave
add
out
fs
movs
iret
jbe
fucom
(bad)
add
pop
cs
psllw
push
lds
and
push
leave
sub
adc
cmp
(bad)
or
and
pusha
push
xor
adc
jne
jmp
jmp
pop
dec
jne
ins
push
xor
inc
jo
xor
test
or
xchg
sub
add
out
sub
test
aam
or
xchg
das
add
mov
shr
push
or
pop
add
xor
dec
lods
shl
cmp
loope
movs
ins
adc
jo
imul
loop
sub
jmp
sub
inc
xchg
test
mov
je
lods
(bad)
jo
sar
inc
sub
cmps
push
sbb
and
out
dec
sub
sub
add
lds
push
mov
sub
sub
aam
jge
inc
adc
call
sub
add
cmp
or
ret
(bad)
sub
sub
add
pushf
jb
inc
sub
adc
dec
cdq
test
mov
(bad)
push
fadd
or
mov
xchg
or
adc
ret
shr
sbb
dec
pop
jbe
adc
lods
jg
cmc
(bad)
dec
rcr
jg
or
sbb
cmp
ror
cmp
shl
test
adc
dec
mov
mov
lds
add
push
xchg
ds
inc
and
xor
loope
add
dec
outs
pop
les
jmp
movs
pop
jnp
ins
jo
imul
pmaxub
and
sub
icebp
inc
pop
and
pop
inc
adc
add
int
pusha
inc
xchg
jb
icebp
xchg
mov
add
add
pop
cli
scas
loopne
or
dec
popf
pop
mov
push
dec
fst
xchg
sub
sub
jbe
jo
mov
fild
cmc
push
mov
or
out
push
pop
jbe
mov
add
fdivr
out
stos
daa
and
cli
push
push
push
add
mov
shr
or
test
adc
cmps
cmp
push
xchg
ins
shl
xchg
sub
pop
mov
outs
pop
cmps
inc
sbb
dec
ins
push
jno
loopne
lds
pusha
jno
jo
loopne
push
outs
out
movs
mov
stc
das
dec
jae
dec
or
push
cmps
mov
adc
hlt
lods
push
sbb
movs
test
jns
and
test
dec
xor
ins
imul
lods
dec
mov
dec
push
xor
test
int
je
cs
out
cmps
in
test
push
daa
and
and
sbb
nop
xchg
xchg
daa
daa
aam
jbe
leave
enter
ficom
ja
fs
leave
xchg
leave
adc
dec
lahf
jmp
cmovl
daa
daa
daa
jo
mov
daa
sub
scas
leave
enter
cli
xor
imul
sub
push
adc
sbb
fimul
push
shl
test
sbb
push
popa
vmptrld
call
dec
or
daa
xchg
adc
je
xchg
push
adc
lea
shr
xor
ja
popf
sbb
add
push
popa
mov
jnp
ins
aad
inc
cmp
jmp
sub
mov
mov
adc
xor
add
or
jne
out
cmp
adc
or
push
add
sub
add
mov
add
mov
and
cmp
popa
cmp
cmps
add
shr
and
push
stos
shl
test
add
popa
xchg
xchg
or
add
push
popa
lods
push
cmp
fadd
xor
cmp
or
popa
dec
push
sub
xchg
popa
mov
imul
add
or
push
or
push
popa
jge
les
cmps
popa
sti
or
jno
(bad)
popa
jns
or
xchg
adc
dec
popa
xor
lds
ins
jns
popa
les
dec
inc
dec
fnsave
sub
bound
push
sub
mov
mov
popa
xchg
push
mov
add
and
xchg
mov
pop
and
xor
jo
jge
xor
jmp
jp
call
jno
scas
mov
push
jno
inc
cmps
jb
dec
mov
lea
pop
push
loopne
adc
push
sbb
sub
jo
outs
jb
jmp
cs
adc
sub
adc
xor
sub
add
bound
mov
popa
push
sub
fs
inc
or
pushf
mov
mov
add
dec
push
push
loopne
and
je
mov
push
xor
bnd
xchg
adc
popa
adc
sub
adc
daa
pop
aas
xchg
stos
ror
mov
push
push
xchg
and
arpl
xor
in
in
jb
sub
inc
cmp
pushf
mov
add
xchg
push
mov
push
stos
call
(bad)
jp
iret
mov
or
pop
sbb
in
cmp
into
and
add
and
inc
aam
add
pusha
retf
inc
sbb
lds
jmp
adc
push
jmp
inc
jg
pop
sbb
ret
add
fisttp
xor
adc
out
test
pop
jmp
stc
push
push
cmp
imul
outs
fnstsw
pop
test
add
jl
pop
jmp
jnp
stos
sbb
jb
inc
cs
es
adc
xchg
shr
push
and
bound
add
cmp
fs
push
jmp
sub
in
pop
cmc
mov
mov
and
pop
add
sti
push
call
das
xchg
xchg
mov
push
sbb
xchg
push
test
cmp
fmul
add
loopne
or
(bad)
xor
imul
loopne
(bad)
cs
fadd
jp
test
dec
aaa
mov
jmp
jne
cwde
push
mov
outs
adc
(bad)
push
mov
mov
dec
jb
mov
xchg
xchg
daa
daa
(bad)
and
dec
enter
jge
(bad)
xor
mov
repnz
cmps
xlat
push
mov
jns
jb
push
mov
cmp
inc
ins
nop
(bad)
pop
out
cmp
xchg
cmps
outs
fucomp
mov
pop
cmc
push
jle
inc
andnps
lods
mov
add
lods
inc
mov
push
rol
xchg
call
outs
jns
dec
outs
dec
or
outs
popf
pop
add
shl
shl
pop
add
push
retf
mov
mov
sbb
or
inc
out
fcomp
xor
shr
rol
test
add
rcl
or
jae
sbb
sar
or
or
xchg
adc
cmp
leave
fwait
sbb
rol
mov
push
pop
shl
rol
push
iret
outs
add
shr
add
and
jae
mov
call
xor
gs
push
push
mov
rol
aas
xchg
jmp
fisub
scas
mov
xor
or
shl
jne
inc
push
(bad)
sub
add
call
sub
sbb
add
aad
adc
inc
add
add
mov
cmp
push
adc
sub
sub
mov
push
add
inc
add
or
add
xor
sub
pusha
test
inc
pop
sub
and
jns
mov
add
add
dec
sub
mov
or
xlat
mov
aam
inc
sub
dec
xor
ficomp
sub
scas
in
mov
xlat
and
sub
in
mov
add
inc
sbb
sbb
shr
xor
loop
xchg
mov
pop
add
or
and
cmp
sbb
push
sbb
add
inc
pop
stc
add
int
pminub
adc
inc
add
push
sbb
fadd
inc
aam
mov
and
loopne
add
movs
xchg
pop
and
push
shr
mov
mov
les
loop
pop
pop
aad
dec
xchg
jno
iret
jp
paddb
paddd
mov
inc
xor
mov
inc
pop
mov
in
mov
add
adc
mov
pop
mov
adc
cli
inc
and
mov
and
dec
mov
or
sub
std
add
adc
mov
stc
push
sbb
test
(bad)
lock
ss
adc
or
add
loopne
ja
lods
mov
mov
out
and
loop
sub
dec
aaa
lds
and
pusha
push
mov
sub
adc
pusha
test
in
adc
lods
imul
ss
retf
lods
add
jge
cmps
loop
fs
addr16
in
lods
mov
mov
push
call
push
addr16
and
adc
push
test
loopne
jne
sbb
mov
ja
mov
push
push
mov
mov
add
ja
inc
lods
mov
ja
stos
inc
sub
sub
inc
sub
jae
(bad)
cmc
in
xor
ja
sbb
jbe
push
jbe
fs
(bad)
push
and
sbb
in
xchg
fldenv
popf
jno
jns
jb
jecxz
sahf
dec
mov
cmp
inc
sahf
pushf
pushf
pushf
in
mov
dec
jne
shl
daa
and
mov
xchg
daa
daa
push
mov
xchg
fild
sub
in
fimul
push
jp
mov
jb
lds
push
cmp
dec
out
or
xor
jno
imul
xor
push
les
lds
inc
and
xor
ins
push
icebp
dec
or
bound
les
mov
bound
cwde
xor
mov
cmc
or
adc
xor
fwait
gs
and
adc
and
xchg
sub
xor
sub
lods
xor
xor
and
fdiv
inc
mov
dec
test
add
mov
or
pop
jae
adc
les
sbb
mov
or
adc
cmps
dec
or
(bad)
repz
pushf
pop
mov
fnstsw
fnstsw
inc
mov
dec
fisttp
shr
cmp
push
or
fst
pusha
sbb
cmp
sub
(bad)
fld
cmp
sbb
fstp
pop
inc
or
xor
shl
cmp
cmps
(bad)
adc
(bad)
mov
loop
(bad)
fnsave
lods
fsubr
xor
xchg
xchg
ret
cmp
imul
jns
xchg
rcr
dec
and
dec
sub
test
cdq
cmc
(bad)
pop
movs
lahf
jg
lahf
mov
adc
cmp
sub
test
retf
(bad)
ror
xor
or
push
je
add
cmp
sbb
sbb
inc
ret
jbe
dec
(bad)
sysenter
mov
aas
cmps
add
fucomi
sbb
push
mov
dec
fst
mov
dec
mov
jmp
mov
cmp
inc
jnp
dec
add
int
retf
mov
adc
mov
pop
mov
mov
push
sahf
sysret
call
shl
pop
in
mov
push
dec
das
popa
push
push
cmp
jp
shl
push
pop
lock
sub
or
je
mov
push
cmp
out
mov
or
pop
xor
sti
mov
push
push
xor
call
pop
pop
mov
lock
lahf
shl
push
mov
fadd
mov
in
pop
add
push
fs
loop
push
stos
inc
icebp
mov
cmps
push
fisttp
sub
sub
cmp
movs
push
adc
pop
or
lea
ja
mov
test
cmps
xor
sub
imul
or
sbb
lds
fidivr
loop
sbb
cmps
jl
cmps
mov
jnp
cld
push
pop
lods
pcmpgtd
leave
mov
jb
repnz
or
jb
xchg
loop
mov
mov
cmp
inc
sahf
pushf
pushf
mov
dec
dec
dec
dec
ins
mov
daa
daa
and
stos
hlt
(bad)
cmp
jp
lods
sbb
(bad)
xchg
sbb
xchg
mov
sbb
cmps
xchg
call
mov
mov
dec
rcl
inc
test
pop
add
xchg
xor
mov
xchg
dec
(bad)
and
inc
and
push
(bad)
retf
loope
xor
sahf
sbb
xchg
sbb
loop
pusha
or
add
jp
mov
or
xchg
das
sbb
sbb
xor
pop
xchg
mov
pusha
mov
push
mov
pop
mov
(bad)
or
sbb
jmp
and
test
xchg
xor
mov
gs
in
sub
xor
lds
cmps
aas
outs
adc
inc
inc
sbb
mov
mov
sar
xchg
xor
push
inc
dec
jg
push
jnp
jbe
out
rcr
push
push
jae
push
jmp
adc
adc
inc
adc
inc
jmp
test
or
jmp
test
jge
pop
(bad)
aam
inc
and
mov
push
sbb
adc
sub
xor
add
sub
in
sub
in
sub
enter
push
mov
xchg
adc
sbb
jmp
in
out
sub
inc
inc
mov
dec
mov
pop
jnp
mov
out
fnstcw
call
jb
xor
jmp
and
pushf
push
jmp
int3
inc
or
sbb
cmp
jmp
leave
jne
adc
push
je
cs
push
bound
(bad)
xor
inc
mov
jge
add
pcmpgtw
shl
std
xor
cmove
adc
aas
adc
ins
cmp
sbb
inc
gs
jne
movs
shr
fs
mov
push
xor
lods
sub
(bad)
sbb
push
cmc
outs
cli
jo
loopne
js
bound
adc
adc
sub
adc
daa
pop
aas
xchg
scas
aad
xchg
push
mov
xor
add
in
jb
sub
inc
inc
push
scas
fwait
sbb
push
fs
stos
pop
ja
push
aas
daa
mov
mov
ins
into
xor
cmc
aas
dec
mov
rol
push
xchg
pusha
lahf
cwde
in
xlat
adc
pop
or
adc
retf
add
test
and
or
mov
adc
dec
pop
bound
jp
add
inc
add
pop
push
add
mov
dec
out
inc
jne
daa
sub
out
mov
mov
das
jne
xor
stos
adc
mov
test
xor
fst
daa
ret
push
add
(bad)
stos
jg
adc
call
lahf
push
jg
sbb
and
xor
pop
pop
inc
(bad)
rcl
ins
jg
or
mov
cmps
clc
or
and
inc
aam
add
out
loopne
lds
out
xor
cld
call
clc
pop
outs
das
adc
xlat
adc
cmps
enter
cs
xor
xchg
push
adc
adc
add
push
xlat
xor
sub
imul
pop
data16
outs
sbb
jo
add
or
jp
mov
fistp
daa
in
(bad)
adc
push
(bad)
call
xchg
push
or
(bad)
xor
in
cmp
jbe
cmp
sbb
ret
push
mov
cmp
les
xchg
scas
cli
cmp
xchg
in
in
(bad)
(bad)
push
xor
in
cmps
int
(bad)
cmp
jb
xchg
call
cmp
inc
mov
adc
(bad)
inc
push
pop
jno
sub
push
fist
pop
das
mov
cmp
cmp
test
mov
dec
or
das
jno
rcl
pop
or
or
add
in
jo
push
add
cmp
xor
push
add
inc
add
sbb
cmp
mov
ins
push
jns
movs
or
shr
inc
add
push
pop
jae
sub
das
add
inc
mov
or
mov
das
fwait
and
push
inc
gs
or
or
push
add
dec
xor
or
das
iret
mov
add
add
das
cmps
add
rol
pushf
xor
sbb
add
jae
sub
sub
sbb
xchg
push
ja
retf
das
aas
mov
loopne
bound
scas
das
push
push
add
sar
xchg
push
add
push
inc
dec
jg
test
shl
adc
lds
cmp
mov
inc
pop
adc
das
imul
sub
xor
add
das
or
and
das
add
or
das
or
add
or
inc
pop
add
or
jns
add
add
das
pusha
mov
or
sub
cmp
rcr
mov
xchg
mov
add
pop
and
das
in
xor
or
fimul
dec
jns
pop
adc
or
loop
add
mov
xor
mov
add
push
xchg
rcr
sub
shr
mov
add
pop
add
je
jge
xchg
mov
int3
push
mov
cmps
sbb
outs
das
mov
lahf
aaa
call
push
movs
lahf
mov
push
(bad)
je
xchg
in
jp
add
and
das
addr16
jmp
fidiv
sub
add
or
pop
jo
or
pop
mov
inc
in
imul
mov
cli
sbb
and
dec
sub
fsub
lds
loopne
fdiv
add
mov
data16
cmps
(bad)
icebp
sbb
push
imul
or
ja
popa
sti
test
add
loopne
iret
mov
add
mov
int3
mov
mov
jne
fwait
cdq
gs
push
mov
bound
inc
push
mov
int3
add
push
mov
add
inc
jle
arpl
and
hlt
jmp
adc
ror
xor
or
aas
push
dec
sub
js
out
pusha
add
hlt
stos
out
xchg
sub
loopne
fs
add
xchg
pop
add
push
in
loopne
outs
daa
add
push
adc
jp
out
push
and
inc
and
xchg
cld
push
setg
mov
imul
xor
pusha
(bad)
cwde
popa
js
rcr
push
pop
dec
sub
test
in
mov
(bad)
(bad)
cmp
and
(bad)
fst
ins
xor
in
mov
and
sbb
push
stos
xor
pop
int
loop
xchg
cmp
pop
jecxz
iret
out
(bad)
pop
pushf
das
mov
mov
lds
sub
push
jl
jnp
lods
scas
in
fisttp
(bad)
punpcklbw
push
mov
adc
push
mov
pusha
and
pushf
nop
lods
jnp
adc
mov
jnp
shl
jnp
inc
and
or
xchg
sub
and
jnp
add
aad
inc
dec
fsubr
hlt
scas
and
adc
adc
push
jge
cmp
cmp
loopne
cmp
dec
add
cmp
dec
sbb
add
shl
test
jns
add
xor
mov
sahf
ja
xchg
push
fwait
push
movs
test
cmp
cwde
add
dec
(bad)
rcr
shl
dec
aam
mov
add
mov
test
paddw
push
loope
mov
iret
add
xchg
xor
aam
inc
add
gs
sub
sbb
push
inc
pop
adc
xor
mov
mov
lahf
pop
sbb
adc
ret
ins
test
or
dec
add
addr16
mov
pop
aad
push
push
xor
(bad)
mov
xlat
loop
paddusb
ss
dec
jg
mov
out
add
mov
aam
into
or
pop
(bad)
sub
mov
addr16
test
xor
xor
pusha
push
ja
add
add
loopne
retf
gs
add
or
in
mov
shl
xor
jmp
add
loope
fmul
push
retf
jge
cmp
iret
inc
iret
sbb
mov
add
jg
mov
outs
fs
add
or
fsubr
adc
ss
sbb
movs
fucomi
mov
push
sub
add
adc
iret
jmp
pop
mov
rol
add
add
or
retf
lea
loopne
sub
js
sbb
push
push
retf
add
jnp
test
mov
sbb
xchg
inc
inc
sub
add
ret
push
fidivr
out
call
cmp
sbb
mov
mov
test
mov
out
sub
adc
mov
lods
jmp
in
out
pop
aam
or
mov
jae
int
mov
mov
call
push
xchg
jle
or
popa
add
imul
pusha
push
mov
(bad)
fadd
xor
add
lods
mov
add
inc
mov
rcl
mov
shl
sub
mov
jo
push
jo
fst
pop
push
imul
je
mov
xor
popa
xlat
cs
ficomp
test
add
fist
inc
add
and
mov
in
add
jle
jbe
mov
mov
jmp
xor
push
aaa
mov
add
push
pop
add
loopne
add
push
push
ret
push
sbb
mov
(bad)
sub
call
lds
sbb
mov
mov
out
cmp
loope
mov
and
add
mov
out
rcr
test
loopne
vmread
out
mov
mov
mov
stos
mov
cmp
jmp
test
jno
int
xor
mov
sbb
nop
stos
mov
mov
and
retf
mov
xor
rol
lods
(bad)
shl
popa
add
nop
loope
ja
push
add
xor
loop
sub
ret
mov
add
mov
sahf
ja
mov
mov
cmp
inc
data16
mov
sub
pop
jecxz
loopne
add
mov
add
mov
test
mov
pop
push
loop
mov
mov
ins
xor
test
sbb
xor
sub
ss
lds
outs
xor
loope
dec
lds
loope
add
push
or
sbb
add
push
call
or
add
or
mov
xlat
mov
pop
sub
stc
cmp
addr16
cmp
in
push
and
xlat
ja
loopne
loopne
(bad)
fimul
fcomp
shr
ror
addr16
add
sbb
in
or
mov
in
in
push
or
cmp
retf
sub
mov
pusha
(bad)
push
or
inc
pop
imul
sbb
out
xchg
pusha
stos
sbb
add
lods
add
or
cmp
iret
xchg
pop
cmovbe
icebp
sub
push
or
push
jb
in
dec
mov
push
ds
sbb
call
inc
inc
fdiv
(bad)
adc
fcom
test
enter
dec
cld
push
and
fdiv
sub
add
ret
mov
movs
push
fnstcw
push
push
sbb
add
test
mov
add
imul
xchg
paddusw
inc
pop
xor
popa
movs
xor
adc
movs
sub
inc
add
sub
add
push
clc
div
ja
or
sbb
sbb
fistp
mov
hlt
mov
pop
sub
add
push
adc
pop
cmp
add
sbb
push
clc
scas
or
mov
push
pop
das
jo
scas
dec
ror
mov
icebp
out
add
movs
cmps
sbb
mov
nop
adc
mov
out
push
add
sub
and
dec
movs
out
sub
and
pop
out
pop
adc
mov
dec
daa
pop
sub
shl
xor
cdq
and
pusha
adc
cmp
mov
sbb
(bad)
xchg
out
out
mov
pop
mov
add
mov
push
jnp
pop
aad
iret
test
nop
scas
ins
scas
(bad)
cs
pop
push
sbb
push
mov
ret
add
pop
and
add
push
pop
out
mov
pop
jle
ror
fisttp
mov
push
xor
cmp
adc
jmp
sub
addr16
or
jmp
push
jmp
push
sub
cmp
mov
or
movs
or
bound
mov
rcr
fwait
pop
enter
aas
push
scas
mov
ret
pusha
mov
push
cwde
dec
or
(bad)
outs
jne
push
lock
mov
lock
jns
addr16
add
cwde
sub
inc
push
ins
mov
nop
and
pusha
mov
push
popa
cmp
add
sub
cmp
cmp
sub
or
jbe
rol
loope
add
pop
add
sbb
rcl
addr16
add
xor
xor
fs
test
aas
loope
rol
push
scas
cdq
push
mov
jo
add
cs
xchg
push
inc
hlt
out
add
mov
add
dec
mov
fcom
lsl
aas
gs
add
xor
add
popa
mov
popa
sub
sbb
cmp
mov
mov
pusha
sbb
sbb
aad
inc
xchg
aas
add
or
pop
jno
xchg
mov
pop
neg
cmp
int3
nop
cwde
lods
xlat
adc
cmp
xor
shl
mov
inc
or
into
aas
sbb
sbb
loope
cwde
test
test
pop
aam
xor
int
push
mov
inc
push
inc
popa
or
aas
or
pop
scas
aas
add
ins
aad
inc
outs
cdq
add
aas
fimul
push
ins
loope
jns
adc
mov
cmp
mov
xchg
js
push
jns
cwde
outs
cs
adc
stos
js
xchg
or
sub
test
push
pop
or
div
mul
push
rcr
push
rcr
xchg
in
cli
pop
les
loop
cmp
daa
sahf
out
mov
aam
pop
xchg
pop
xor
cmp
loopne
add
sub
cmp
lock
push
add
jbe
mov
inc
fld
mov
cmp
xchg
sub
xor
inc
xchg
xchg
sub
xchg
or
mov
loopne
sub
sbb
push
fdivr
das
pop
ret
jnp
cld
xchg
push
shr
xchg
pop
adc
push
add
adc
push
mov
add
push
test
movs
push
add
sub
xor
out
add
in
mov
or
push
mov
loop
dec
mov
xchg
mov
push
mov
aam
mov
and
add
jns
rol
push
xor
out
jmp
in
pop
jnp
xchg
push
call
lock
mov
or
dec
jae
rcr
ds
push
or
cmp
push
cmp
and
push
and
or
sub
shr
cmp
or
retf
add
push
sbb
push
or
or
or
int
dec
jno
add
add
pop
movs
pusha
pusha
lea
xchg
jns
push
push
mov
jl
add
mov
pop
js
(bad)
ror
mov
or
scas
adc
pusha
mov
sub
inc
xchg
sbb
int
pop
mov
push
shl
arpl
inc
stos
and
dec
add
push
mov
inc
xchg
cmp
sbb
mov
sub
inc
mov
mov
add
adc
sbb
dec
adc
cmps
add
repz
test
mov
cmps
pop
ja
ret
scas
sub
shl
cmp
pop
inc
mov
pop
ja
add
cmps
pushf
fild
out
ja
xchg
test
xlat
pop
cmps
sbb
dec
push
add
dec
or
mov
pop
or
inc
addr16
xor
or
push
push
cmp
xor
cmp
xchg
xchg
lock
mov
pop
mov
jecxz
xchg
sbb
pop
add
in
jl
les
xchg
rol
push
sbb
scas
test
inc
push
pop
jo
xchg
mov
push
mov
jno
and
push
dec
movs
add
xor
and
adc
jno
stos
add
and
loopne
jno
mov
xor
jno
pop
add
sbb
pop
and
ja
mov
sub
mov
leave
inc
ret
rol
gs
xor
sub
inc
sub
call
and
scas
mov
or
add
rol
pushf
out
push
fild
in
jg
aaa
loopne
lock
mov
outs
out
push
push
or
pop
add
push
push
jg
cmp
cmp
scas
minps
movs
sbb
inc
scas
xor
xlat
sbb
xor
ss
xlat
xlat
outs
xor
loope
adc
add
movs
or
sbb
add
add
and
mov
push
jns
mov
push
cs
mov
pop
sbb
push
mov
das
jmp
mov
and
int
ja
adc
xchg
test
pop
cmps
mov
add
sub
xchg
xchg
xchg
xchg
mov
stos
or
adc
mov
mov
out
test
ja
loopne
test
aaa
sbb
xor
mov
mov
add
mov
inc
push
fdivr
mov
and
and
jmp
adc
call
mov
add
pop
mov
lea
push
lahf
push
cmc
or
xchg
mov
out
add
adc
int3
es
mov
je
pop
call
dec
je
add
leave
push
cmps
int
add
push
je
test
mov
push
jo
js
push
mov
jne
fdiv
fiadd
ins
push
mov
add
clc
push
mov
push
(bad)
mov
(bad)
ins
xor
aaa
sub
push
push
adc
test
adc
pop
hlt
jne
mov
mov
or
out
sbb
mov
or
push
data16
je
je
je
(bad)
mov
jo
adc
sbb
adc
loop
rcr
add
sbb
sbb
(bad)
iret
dec
add
popa
ins
gs
push
fisubr
mov
pop
js
or
xor
dec
xchg
dec
ins
jne
fild
pop
mov
adc
add
xchg
xor
mov
sti
out
mov
add
push
dec
jb
popa
jnp
lahf
cmp
out
push
mov
outs
je
inc
jns
push
push
push
push
outs
mov
pop
rcpps
pop
clc
outs
pop
int3
vmptrst
push
inc
ins
outs
popa
in
cmp
cmp
or
add
adc
jo
test
or
inc
js
push
push
adc
rcr
or
ins
add
adc
hlt
imul
imul
mov
mov
jbe
imul
loope
dec
dec
cld
mov
push
pop
arpl
mov
sub
int3
mov
jg
push
fs
push
enter
fsubr
imul
or
dec
add
or
test
inc
or
and
mov
jae
ins
mov
movs
ins
xlat
mov
pop
adc
shl
dec
jo
adc
jbe
pop
jbe
out
mov
mov
gs
push
pop
lods
jmp
add
test
das
mov
nop
ins
cmp
mov
push
movs
mov
add
or
push
lods
sar
fs
daa
cli
xor
mov
je
and
xlat
adc
movs
push
mov
xlat
jae
leave
xor
add
push
(bad)
mov
add
or
dec
cmps
push
jne
mov
ins
inc
(bad)
outs
lods
jb
popa
loopne
pop
(bad)
arpl
pop
cwde
rcr
scas
cmps
aam
xchg
je
cdq
xor
xchg
fimul
aaa
mov
add
adc
leave
dec
es
push
push
add
imul
clc
cmp
or
test
or
inc
es
and
mov
inc
enter
xchg
mov
inc
or
es
fs
pop
inc
jno
mov
inc
mov
add
(bad)
repnz
pop
lods
jmp
or
cmp
dec
adc
fs
mov
push
outs
push
cmps
cs
cdq
ret
sub
into
add
aas
in
out
outs
lods
pop
pop
push
mov
movs
inc
xor
xor
ror
pop
pop
inc
pop
ins
xor
pop
push
ret
cmp
cs
test
or
arpl
fidiv
push
or
call
arpl
adc
adc
inc
cmp
adc
push
inc
je
cmps
jbe
inc
inc
pop
pop
aaa
push
das
adc
ins
je
inc
xor
lds
fistp
inc
jo
adc
scas
inc
jbe
pop
in
push
nop
scas
(bad)
scas
les
in
push
enter
or
add
or
icebp
pop
pop
fcmovb
dec
fmul
ret
mov
es
add
fsubr
xor
pushf
mov
and
mov
je
pop
sub
loope
inc
test
sub
mov
mov
xor
dec
daa
cmp
(bad)
into
add
lock
iret
nop
pop
adc
push
jg
js
mov
mov
xchg
or
scas
aaa
or
mov
add
mov
shl
and
xor
cmps
inc
inc
pop
add
dec
data16
dec
and
retf
or
retf
int3
adc
ins
xchg
mov
inc
sbb
out
scas
inc
add
pusha
or
cmps
jp
push
mov
push
imul
imul
shr
cmps
add
(bad)
mov
push
enter
out
or
mov
add
push
(bad)
mov
nop
push
push
adc
mov
or
(bad)
adc
push
push
aas
pop
add
xchg
sub
xor
or
scas
js
pop
rcl
pusha
sahf
adc
sub
in
bound
js
jl
jnp
cmp
sar
in
sbb
pop
xor
pop
ja
sub
inc
add
mov
pop
xor
adc
dec
sub
add
pop
push
gs
(bad)
loope
and
mov
add
mov
cmp
popa
jno
cmp
sahf
fcomp
into
push
mov
pop
call
inc
or
push
aas
pop
iret
xor
and
lods
jnp
push
xchg
push
mov
imul
mov
ds
cdq
pop
and
sub
push
imul
sahf
ror
sbb
vsqrtpd
jmp
sub
cmp
push
sahf
aaa
pop
fsub
dec
or
mov
sub
shr
push
jno
mov
push
push
jb
je
cmp
inc
xchg
mov
sar
inc
cmp
xchg
aas
cmp
pop
iret
dec
pop
and
jmp
push
sbb
mul
test
ja
pop
xor
inc
bound
jbe
adc
xor
mov
or
in
pop
cmp
jb
in
or
xchg
xor
adc
addr16
stos
es
es
mov
cmps
pop
pop
jno
jo
mov
sbb
xchg
pop
sbb
jbe
xchg
nop
ins
adc
inc
js
push
adc
les
push
fsubr
jb
int
add
xchg
pusha
xlat
enter
test
loopne
in
pushf
cmp
mov
prefetch
mov
or
sbb
test
pop
cs
jb
adc
inc
enter
pop
and
mov
mov
sbb
sbb
adc
inc
outs
push
icebp
mov
jp
pop
mov
pop
inc
repnz
jge
jo
jne
add
(bad)
jnp
fadd
add
pop
and
and
mov
arpl
lahf
pushf
inc
cmp
test
push
xlat
xor
mov
mov
sbb
cmp
add
xor
and
rcr
pmaxsw
test
mov
and
cs
add
xchg
in
nop
and
mov
xor
mov
inc
or
mov
xchg
dec
and
es
js
push
cmp
or
clc
nop
stos
mov
or
jp
in
ins
jo
cmp
jp
mov
(bad)
jmp
jecxz
or
sub
jge
test
xchg
sub
sub
push
mov
fnstenv
je
ud2
sbb
ret
nop
ror
dec
mov
neg
push
outs
imul
cmps
or
dec
mov
dec
test
adc
sar
loope
or
dec
ret
xor
or
sbb
push
js
inc
fld
push
das
cmps
jne
pop
fidivr
sbb
sub
lds
sub
xor
xor
int3
pusha
pop
stc
xor
add
adc
sub
xor
inc
xchg
and
stos
pop
jbe
push
sbb
test
lds
inc
jns
int
test
mov
movs
retf
pop
ficomp
call
cmp
or
adc
mov
ret
or
push
gs
fild
sahf
push
or
cmp
iret
shr
or
sbb
sub
sbb
push
or
enter
pop
xchg
popf
(bad)
xor
and
xchg
add
(bad)
pop
jp
lock
or
and
loopne
test
and
shl
popf
lock
and
cmp
popa
pop
add
fist
inc
ret
jne
or
sub
stos
aaa
push
sbb
loopne
pop
mov
imul
jbe
pop
sbb
ins
(bad)
das
push
js
inc
sbb
jnp
xor
popf
jge
adc
jne
mov
inc
(bad)
push
sahf
or
les
and
sub
ss
jb
inc
popa
and
add
scas
cmp
sbb
pop
inc
loope
or
pop
pop
sub
push
mov
push
and
sbb
mov
pop
sbb
jmp
or
and
inc
mov
loopne
popf
xchg
out
jle
ror
jns
mov
add
pop
sbb
and
xchg
clc
mov
ins
inc
out
imul
ins
ds
sbb
add
inc
jno
inc
les
iret
pop
sub
add
mov
in
pop
int3
psrld
adc
or
pop
xor
sub
dec
pop
lods
add
add
xor
das
and
xor
xor
das
mov
call
mov
push
push
push
push
push
add
cli
mov
mov
push
push
add
je
or
push
mov
inc
lea
adc
mov
dec
mov
mov
push
xchg
pop
pop
lock
adc
pop
pop
ret
(bad)
out
(bad)
clc
inc
mov
jnp
xor
mov
mov
pop
das
pop
(bad)
mov
add
xor
test
sahf
or
dec
push
adc
rol
ret
sbb
or
jg
cmp
and
jg
nop
sbb
or
add
out
repnz
cs
adc
fist
mov
cdq
loopne
or
sbb
daa
push
outs
cli
mov
mov
(bad)
xor
push
push
mov
add
add
add
or
cmps
push
mov
mov
xor
and
push
mov
mov
sar
(bad)
and
sub
mov
(bad)
mov
cmp
sbb
or
push
pop
mov
inc
pop
pusha
mov
pop
mov
stos
push
fstp
(bad)
add
fisttp
retf
adc
clc
add
push
push
mov
jne
push
xchg
add
mov
fidivr
or
rcl
sub
aaa
clc
push
mov
adc
add
push
add
xchg
inc
jmp
dec
sahf
out
fst
push
pop
out
xchg
sub
push
out
jne
ja
cmps
(bad)
fld
adc
out
out
pop
sbb
pop
jl
movs
push
xor
push
sub
jmp
push
sbb
add
dec
cmp
loopne
push
aas
xor
inc
cmp
and
fiadd
adc
loop
jne
lahf
adc
push
pop
sub
int
rcr
(bad)
push
lea
push
xor
dec
xor
out
sub
xor
sub
sub
push
lock
sbb
call
xor
call
call
int
imul
jmp
mov
sub
in
loopne
pop
adc
out
or
dec
(bad)
cmp
mov
mov
cmp
xor
mov
inc
cwde
inc
fadd
inc
loopne
shl
popf
adc
in
popf
cmp
pop
cs
ins
push
fcom
push
in
fcom
fsubr
mov
pop
mov
ret
je
jp
jmp
add
shr
rcr
push
ret
cli
retf
mov
loopne
dec
push
ins
xor
repz
sbb
cld
clc
push
cmp
sub
jae
and
std
fdivr
das
push
jmp
das
in
call
cmps
fwait
jp
cmp
sahf
cmp
jb
jmp
jl
daa
fs
retf
jbe
jle
jmp
mov
adc
lock
enter
cld
xchg
and
das
jecxz
pop
test
sbb
je
clc
call
add
pop
outs
(bad)
cli
push
or
in
ror
and
test
je
jp
outs
ja
aam
jne
sbb
add
xor
mov
push
push
hlt
test
(bad)
push
inc
adc
mov
add
xchg
ror
xchg
jmp
(bad)
jmp
xchg
in
mov
clc
clc
push
push
pop
das
sub
xchg
lds
mov
mov
add
mov
add
or
cwde
test
daa
jmp
daa
and
sar
mov
mov
xor
push
mov
push
jle
icebp
lds
loop
fucomi
pushf
jae
pop
aaa
daa
inc
ss
sar
pop
inc
arpl
xor
mov
cdq
mov
push
pop
pop
mov
ret
mov
mov
and
push
addr16
cmp
aas
inc
cmp
add
jne
inc
(bad)
stos
add
jmp
(bad)
clc
not
test
sahf
sbb
movs
sub
adc
mov
pop
adc
test
jge
test
test
ja
jmp
jne
cmps
loope
add
mov
cdq
lea
adc
aaa
aam
lfs
outs
ret
cmp
fwait
xor
dec
addr16
jno
push
cmp
xor
mov
aaa
call
(bad)
mov
in
pop
dec
sbb
outs
and
and
je
push
push
add
or
or
retf
push
stc
ins
cwde
fsubrp
aad
or
mov
sbb
add
(bad)
shl
mov
movs
push
sbb
jns
or
pushf
push
and
lea
push
xor
ret
mov
loopne
jbe
push
push
mov
cmp
pusha
pop
push
add
lods
mov
adc
pop
sub
xchg
xlat
dec
ret
sar
pusha
js
pop
stos
adc
xlat
sbb
pop
out
imul
add
lds
xor
mov
lea
ret
cmps
jmp
rcr
lahf
adc
mov
nop
ret
out
ss
xor
jbe
repz
xchg
sbb
inc
add
xor
mov
pop
or
sbb
xor
retf
inc
shr
mov
add
pop
dec
mov
test
sub
xchg
inc
sbb
ror
add
fdiv
cmp
cmp
(bad)
clc
mov
outs
cmp
aas
cmp
or
js
sub
test
push
add
add
lock
and
mov
inc
push
cmp
outs
mov
and
fistp
std
mov
mov
lea
xor
jmp
and
outs
div
test
test
sub
jmp
push
mov
xchg
jge
in
push
shl
cmp
sub
adc
sbb
jge
and
adc
(bad)
fimul
jne
ins
cmp
xchg
xchg
movq
and
add
cs
js
daa
mov
out
inc
ins
fimul
inc
ins
imul
jge
mov
xor
or
inc
dec
sbb
test
js
mov
cdq
retf
sar
mov
retf
daa
loop
call
mov
add
jns
or
push
adc
and
mov
hlt
xchg
cmp
push
jnp
push
sub
les
sar
mov
or
pop
xchg
paddsb
fwait
xchg
adc
(bad)
inc
js
fdiv
shr
mov
and
xor
inc
cmp
jne
push
test
(bad)
mov
data16
push
pop
jl
mov
call
movs
es
pusha
(bad)
sbb
inc
inc
mov
sub
je
cmp
(bad)
sar
xchg
xor
cmp
and
mov
ja
lea
test
test
mov
movs
and
lock
xchg
gs
movs
xor
push
cmp
mov
outs
dec
(bad)
(bad)
out
adc
inc
push
lea
pop
test
push
inc
mov
inc
ins
test
out
sahf
sar
clc
or
sbb
mov
jmp
movs
(bad)
mov
xchg
adc
mov
xlat
loopne
aas
pop
or
ror
daa
sbb
clc
push
je
mov
mov
adc
adc
push
add
inc
xor
dec
cmp
imul
cmp
test
add
lock
adc
mov
(bad)
fist
push
inc
mov
or
or
jne
or
adc
clc
add
push
mov
lea
aas
in
xlat
test
push
lea
(bad)
out
push
push
adc
add
jecxz
adc
icebp
lods
pusha
jg
lds
(bad)
test
je
xor
mov
push
or
call
jl
pop
xor
push
cmp
out
and
dec
cld
jne
idiv
pop
adc
test
jne
xor
outs
fstp
movups
fbstp
dec
jne
jmp
mov
loopne
in
pop
sub
add
or
cmp
add
clc
jle
mov
or
pop
mov
jl
mov
rol
add
push
mov
mov
jo
mov
int
lahf
push
aaa
sar
test
add
add
cli
pusha
cmp
mov
push
mov
jne
div
loop
sbb
cmp
and
sbb
repz
xor
mov
xor
inc
adc
adc
or
inc
add
sub
mov
jbe
push
push
test
jg
sbb
add
xor
mov
sbb
mov
push
lods
cmp
movzx
add
stos
push
or
call
mov
test
push
test
dec
sbb
sub
je
mov
dec
push
sbb
jne
inc
push
fucomi
mov
dec
mov
scas
movs
and
cmps
sbb
loop
mov
jg
adc
xchg
xchg
lds
in
fisttp
out
sbb
call
popf
pop
and
test
dec
or
dec
jno
test
push
icebp
add
test
sub
ja
push
jno
not
sub
mov
and
sar
(bad)
push
or
stos
mov
push
dec
cli
test
lea
sbb
mov
std
fwait
ins
call
mov
bndstx
jmp
shr
lds
or
sar
jg
repz
cmp
mov
jb
ja
movsx
add
call
ret
call
cmp
pusha
xchg
js
sub
mov
ja
test
push
push
sub
cmp
cmp
sub
push
adc
inc
pushf
jmp
loop
jne
ja
or
add
pop
sbb
pop
and
sbb
and
push
das
clc
add
add
push
jbe
lea
out
(bad)
sbb
push
cmp
dec
xor
inc
xlat
or
lock
inc
sub
fidivr
sub
adc
push
sub
jnp
ja
inc
xor
xor
cmp
cmp
mov
push
sub
push
push
push
inc
push
ja
cs
mov
int3
pop
mov
cmp
jne
sub
pushf
jmp
sub
ficomp
dec
sub
adc
hlt
dec
add
add
cmp
pop
sbb
add
push
sub
sbb
ja
into
sbb
inc
push
hlt
sbb
in
sbb
jg
dec
jp
ret
or
dec
out
inc
in
mov
dec
cld
sbb
rol
retf
nop
push
ins
and
fucomi
jns
mov
je
pop
push
mov
inc
int3
mov
sbb
inc
outs
in
mov
loopne
js
xlat
or
sub
mov
test
mov
shl
aam
add
push
or
sbb
loop
clc
sbb
iret
cmp
add
aas
inc
or
mov
dec
mov
adc
mov
clc
mov
sbb
push
js
or
cmp
bound
jne
sbb
in
xor
aad
stc
aaa
loopne
xor
push
dec
(bad)
movs
aaa
aaa
ins
aas
mov
cmp
scas
xor
jae
dec
in
xor
aaa
push
(bad)
lock
inc
or
or
cmp
pop
addr16
loopne
dec
push
pop
repnz
xchg
clc
jne
jne
jmp
jl
or
add
mov
fsubp
jne
stos
hlt
je
add
mov
jno
or
pop
mov
jg
jo
jmp
inc
push
or
and
mov
cmp
or
mov
jae
adc
xchg
pusha
in
outs
(bad)
sub
scas
(bad)
sar
(bad)
push
inc
icebp
xor
retf
or
cwde
or
mov
push
xchg
or
push
rcr
push
mov
lea
cwde
mov
mov
mov
mov
pushf
jle
and
xchg
shl
inc
mov
mov
push
ror
mov
sub
mov
push
xor
push
sub
pop
test
jbe
cld
cwde
and
mov
sub
movs
cmp
out
ror
movs
fwait
cmp
ds
(bad)
xor
adc
xor
mov
add
and
call
and
loop
inc
sar
push
sbb
cs
pop
ret
rol
sbb
jmp
push
sbb
and
pop
and
lods
lods
cmp
pop
ins
xchg
jbe
mov
mov
mov
dec
cmp
jmp
or
mov
push
ss
xchg
(bad)
jmp
dec
jno
call
or
or
pushf
dec
mov
xchg
sbb
aaa
movs
test
sub
lahf
adc
inc
and
cdq
je
mov
(bad)
adc
inc
cdq
(bad)
icebp
jno
add
mov
and
cwde
add
xchg
xchg
pop
inc
aam
or
and
pop
fimul
or
xchg
jge
dec
sbb
dec
ret
push
loopne
icebp
mov
mov
cmp
je
out
add
mov
es
and
and
ja
sti
call
(bad)
jmp
call
jmp
daa
add
mov
cmp
jb
mov
or
jb
or
adc
inc
mov
fcom
and
jle
mul
mov
dec
mov
mov
mov
in
jg
iret
xchg
fisttp
adc
add
retf
or
(bad)
or
push
add
jo
in
in
lock
mov
xchg
push
daa
ins
add
push
jge
mov
and
jecxz
add
enter
xor
test
sub
or
fcom
jbe
mov
or
jmp
iret
ja
push
movs
cmp
push
sub
cmp
mov
rcl
jo
mov
adc
xor
add
sub
jmp
fild
loopne
pop
xchg
push
mov
dec
movs
xor
in
or
xchg
xor
mov
stos
sub
ret
shl
ficomp
adc
mov
sub
out
jecxz
aam
or
imul
icebp
repz
adc
mov
and
les
sar
xor
sbb
imul
pop
push
in
(bad)
mov
xchg
cmc
popf
cmp
(bad)
xor
add
push
out
dec
add
dec
mov
ror
push
fisttp
sti
push
pop
clc
mov
pushf
(bad)
pop
inc
push
mov
dec
mov
add
push
std
mov
clc
pop
ja
bt
jae
cmp
or
scas
push
mov
mov
(bad)
sub
ret
sbb
and
dec
hlt
jg
inc
cmp
jne
cmp
push
jne
push
push
xchg
dec
or
or
sbb
mov
sub
pushf
vucomisd
pop
cmc
add
cs
sbb
clc
jg
fucomi
add
call
add
pushw
adc
out
call
or
push
xor
mov
mov
(bad)
dec
ret
cli
outs
push
fidiv
in
je
or
rol
fimul
out
loopne
ret
and
inc
cdq
xor
test
je
push
adc
in
adc
ret
ins
mov
jle
cmp
fdivr
add
sbb
(bad)
pop
jp
mov
pop
enter
inc
pop
push
enter
xor
push
or
fcmovnb
lock
stos
ficom
cmp
out
sbb
out
rcl
cdq
pop
ss
dec
pop
dec
cmp
and
push
add
pop
sti
and
inc
sub
repnz
in
jmp
in
mov
xchg
js
xor
jle
adc
fnstsw
add
call
push
ret
call
or
cmpxchg
xor
into
jmp
dec
or
lods
cmp
mov
shl
add
fldcw
jmp
dec
imul
xor
push
cmp
mov
inc
push
pop
sub
arpl
add
pop
mov
add
mov
mov
icebp
or
icebp
outs
(bad)
xchg
adc
repz
and
clc
inc
add
sbb
dec
popf
sbb
arpl
and
ins
jl
push
fcom
inc
sti
int3
pop
sti
fadd
dec
mov
add
sahf
into
push
mov
movs
push
retf
mov
jbe
lods
and
or
pop
jns
fwait
in
sub
sahf
addr16
call
cmp
inc
xor
xchg
sub
sub
or
or
xlat
addr16
fcomp
mov
jge
pop
test
arpl
lds
pusha
jo
cmp
xor
inc
popf
movs
cmp
cmp
lds
inc
add
dec
jmp
inc
retf
inc
mov
sub
pop
adc
adc
sub
pop
call
adc
push
adc
cmps
jno
fldlg2
add
icebp
sbb
mov
mov
cmp
je
jmp
fdivr
cmp
test
aam
inc
inc
sub
mov
mov
inc
and
imul
(bad)
imul
(bad)
std
inc
xchg
xor
xor
lea
cld
inc
sub
in
or
jns
adc
or
jl
xchg
dec
and
rcr
inc
cmp
inc
and
or
xor
stos
push
push
cld
add
xor
in
nop
mov
sub
ss
jmp
lea
sar
jo
lea
or
jmp
js
outs
or
mov
sub
jnp
iret
pusha
mov
xadd
mov
and
sbb
adc
adc
in
aaa
lods
fist
or
jmp
dec
je
add
dec
sbb
nop
xchg
daa
fild
and
hlt
cmp
mov
cmp
fiadd
mov
mov
xchg
sbb
retf
je
adc
pop
jmp
cmp
inc
jns
or
das
cmp
in
dec
mov
cmovl
pusha
setnp
das
ucomiss
add
xor
fcom
cwde
jo
mov
arpl
pusha
push
or
lea
loopne
dec
dec
aas
inc
jnp
push
sbb
outs
cmp
jmp
stos
das
or
je
out
or
dec
push
and
add
pushf
jo
or
push
mov
popa
push
add
xchg
pop
xchg
jno
test
cmp
repz
lods
shl
push
retf
out
test
movs
pop
jmp
daa
enter
sbb
push
push
mov
cmp
pop
push
call
mov
fdiv
ds
into
push
movs
aaa
add
add
sub
pop
mov
int3
idiv
sbb
imul
lahf
test
cmp
push
xchg
xor
dec
imul
iret
xrelease
cmp
or
cdq
push
sub
jae
fstp
cli
adc
cmp
pop
adc
inc
adc
or
or
and
jmp
outs
fistp
push
mov
push
cmp
or
lahf
js
and
add
scas
or
scas
cmp
push
jp
jl
mov
inc
int3
pop
das
pop
xchg
jge
mov
rol
in
add
shr
arpl
push
dec
cwde
push
dec
les
int3
sahf
out
and
cmp
cmp
jns
mov
imul
sbb
jmp
cmps
(bad)
mov
sar
push
jb
jo
gs
or
outs
or
ds
add
xor
arpl
cmp
ins
xchg
add
ins
in
mov
ins
pushfw
or
pop
sub
or
outs
push
outs
arpl
sbb
and
or
rol
add
in
scas
loopne
mov
dec
bound
mov
adc
adc
cwde
jae
jns
add
or
loope
push
or
sbb
das
dec
push
aaa
inc
ret
push
out
data16
cld
push
shl
push
push
imul
neg
sbb
xor
stos
mul
push
shl
push
pop
movs
mov
mov
fild
loope
neg
mov
das
retf
xchg
mov
sub
adc
push
dec
ins
gs
add
dec
test
sub
imul
or
sub
inc
push
aaa
xlat
test
xor
popa
xlat
and
fdiv
ss
xlat
popa
jmp
inc
dec
jbe
cdq
xadd
repnz
xlat
inc
outs
jne
inc
and
dec
mov
mov
gs
pusha
inc
xor
or
aaa
xlat
mov
popa
xlat
mov
ret
jo
push
loope
mov
add
pop
cmps
xlat
sbb
push
aad
inc
js
outs
push
fidivr
fistp
data16
inc
loopne
or
inc
mov
ins
ret
cld
mov
das
fcom
or
sub
inc
fstp
iret
jae
es
loope
outs
ins
jo
in
inc
xlat
rol
pop
dec
js
mov
rcl
xchg
pop
test
push
int3
mov
pop
inc
ret
or
push
iret
mov
mov
xchg
jb
arpl
sbb
sbb
xlat
ror
xlat
or
scas
add
adc
loop
push
push
scas
pop
add
jle
mov
(bad)
fild
sbb
adc
ror
and
scas
fdiv
pop
add
adc
jecxz
mov
pop
or
ficomp
nop
push
push
push
and
mov
mov
lock
cmc
dec
add
ja
jb
sti
clc
and
pusha
rcr
enter
xor
or
cmp
sbb
jne
jg
lods
stc
pop
pop
adc
or
add
ret
mov
dec
call
adc
shl
cli
shl
cs
mov
pop
cwde
shr
hlt
mov
push
push
mov
(bad)
fimul
adc
dec
pop
sbb
pop
cld
pop
call
dec
in
push
cmps
inc
push
call
lock
or
mov
pop
add
cmp
dec
xchg
rol
ja
rol
mov
(bad)
mov
add
add
ret
xor
(bad)
dec
(bad)
clc
mov
lahf
clc
sub
adc
repz
mov
mov
cmp
jnp
mov
and
push
xor
sbb
rcr
popa
sbb
loopne
shl
inc
pushf
fistp
jne
mov
mov
or
cdq
les
fiadd
xchg
mov
cmp
ss
cmp
pushf
dec
push
or
sti
clc
repnz
stos
outs
pop
data16
das
ds
xchg
jbe
mov
jmp
dec
mov
cmp
xchg
adc
xor
add
out
jae
inc
push
ret
stos
add
gs
mov
adc
movs
mov
mov
xchg
or
popa
ins
imul
adc
jns
add
push
inc
jae
fnstenv
loopne
int3
sub
add
add
loop
adc
push
pusha
or
(bad)
pop
leave
cmp
sub
pop
cs
je
inc
mov
cmp
arpl
push
inc
and
jecxz
push
pop
add
dec
or
test
test
mov
sbb
cdq
jg
adc
or
int3
mov
push
sub
and
add
jb
les
sbb
bound
mov
fimul
or
repnz
cli
aaa
ror
loopne
shl
and
retf
mov
pusha
jae
fwait
pop
or
cld
call
mov
and
add
push
fcomp
add
adc
fld
sti
xor
loope
pop
or
popf
test
sbb
add
push
add
inc
imul
push
gs
jmp
cmp
pop
sbb
cmp
iret
add
pop
call
or
rcr
jle
fbstp
(bad)
cmc
push
stos
loopne
adc
jmp
xor
push
add
mov
pop
add
mov
jp
xchg
push
push
fstp
adc
movs
add
jbe
popa
push
lock
or
add
lods
js
or
or
shl
mov
push
mov
ror
rol
or
or
or
pop
fisttp
and
add
mov
mov
sbb
push
or
sbb
dec
and
daa
and
in
lds
sbb
pushw
or
cwde
pusha
add
popa
pusha
adc
sbb
mov
movzx
pop
or
sbb
push
aaa
sub
or
sub
xor
dec
or
add
inc
adc
(bad)
add
add
push
pop
or
arpl
mov
je
xchg
fisttp
sub
scas
loop
out
mov
add
and
adc
add
or
popf
cmp
push
mov
add
push
push
gs
and
mov
jae
xor
sub
or
inc
mov
inc
outs
fs
ins
popa
jae
gs
(bad)
mov
or
mov
dec
xchg
imul
cld
or
data16
jne
imul
sar
or
gs
out
jae
push
cmps
jne
cmps
or
add
inc
imul
sti
sbb
cs
outs
xchg
(bad)
fnstcw
adc
dec
outs
pop
jle
pop
mov
sub
popa
fs
dec
outs
loopne
push
cld
out
adc
aam
add
push
in
or
xor
outs
je
das
sbb
in
outs
ins
adc
jae
pop
ins
fcomp
sti
jle
add
xor
pop
ss
push
jl
jae
je
or
jb
or
in
rcr
ss
push
dec
imul
and
push
add
push
fsubr
add
sbb
outs
push
jp
add
add
in
push
in
push
add
xor
or
or
dec
gs
mov
ds
xchg
jp
je
dec
add
outs
sbb
aas
test
or
gs
out
jnp
ins
mov
pop
push
add
not
jne
pop
jmp
or
cmp
or
push
ret
inc
jbe
push
or
movs
jmp
(bad)
sbb
cmps
dec
mov
mov
loopne
mov
sub
outs
pop
xor
xchg
fistp
nop
xchg
inc
pop
xlat
push
and
adc
inc
ins
ds
popf
test
retf
(bad)
adc
mov
enter
in
ret
js
xchg
jge
mov
div
pop
shr
dec
mov
aam
xor
xchg
clc
inc
movs
inc
scas
sub
imul
dec
gs
inc
and
xchg
push
jl
or
or
or
jmp
add
cmp
aam
add
lods
jnp
pop
or
mov
pusha
jg
int
sub
xchg
push
mov
outs
mov
add
pop
enter
add
ror
xor
sub
pop
add
and
adc
or
dec
mov
jo
stos
loopne
pcmpeqd
mul
push
outs
lods
mov
add
dec
jbe
inc
xchg
push
jno
pop
sbb
add
scas
dec
push
outs
rol
jb
(bad)
dec
adc
in
outs
mov
rcr
(bad)
mov
dec
sti
push
sub
or
dec
mov
pop
pop
sub
dec
outs
adc
sahf
jb
sbb
nop
stos
loopne
movd
mov
aam
push
rcl
mov
or
outs
adc
or
sub
adc
push
loopne
stos
loopne
push
inc
icebp
pusha
mov
push
inc
inc
outs
jne
fs
pop
sub
pop
scas
mov
mov
pop
ror
pop
adc
test
js
push
imul
(bad)
dec
and
add
je
push
jo
mov
push
stos
sub
inc
(bad)
jae
pusha
xor
jb
dec
and
push
dec
(bad)
jne
xor
adc
push
dec
sbb
dec
imul
iret
out
sub
sbb
add
fild
fcomp
ror
pop
push
je
wrmsr
ret
loopne
outs
outs
xchg
mov
push
push
adc
pop
jo
jbe
mov
mov
add
xor
dec
jne
dec
sbb
mov
inc
cmp
dec
pop
sub
sbb
outs
mov
jns
ja
pop
and
es
dec
aad
mov
jbe
ins
imul
popa
je
movs
iret
pop
sub
sbb
lock
icebp
or
push
outs
mov
cmp
in
out
je
jno
jo
outs
adc
dec
je
push
movs
scas
popa
jb
les
fdivr
dec
push
add
sbb
(bad)
loope
push
in
push
unpcklps
inc
rcl
arpl
and
cs
or
cmp
xor
or
jne
rcr
aaa
add
ins
pop
in
pop
scas
jo
add
or
in
scas
push
or
push
pushf
push
outs
imul
xor
imul
push
mov
aam
or
int3
jns
pop
ja
cwde
mov
push
add
push
adc
adc
vmlaunch
jl
in
loopne
in
inc
jbe
gs
xor
sbb
cld
or
add
int
lahf
mov
push
or
mov
ud0
jne
in
mov
ret
cwde
add
enter
push
pop
daa
lds
inc
rol
neg
sub
pop
lods
inc
jo
scas
and
add
mov
or
jbe
dec
aam
dec
mov
dec
push
dec
jle
mov
pop
loopne
fistp
addr16
jo
jo
add
dec
or
add
add
xchg
pop
aas
data16
fwait
es
nop
push
cmp
mov
fisubr
mov
push
adc
in
imul
push
shl
push
popa
sbb
bound
mov
int3
dec
daa
and
push
pop
pop
xchg
jno
in
inc
int
dec
nop
and
popa
mov
loopne
je
mov
dec
xchg
mov
lea
jl
dec
hlt
xor
pop
sahf
cmp
test
inc
call
das
xor
push
mov
dec
inc
sahf
pushf
cld
sub
stos
daa
and
in
adc
lea
cld
xor
push
and
cmp
push
cld
add
xchg
jb
ret
ret
adc
cmp
scas
sub
ins
dec
add
fs
pop
jo
cwde
sub
inc
repz
out
fadd
popa
and
pop
xchg
dec
cwde
jb
loop
sub
cdq
pop
push
push
clc
dec
jecxz
dec
add
(bad)
xor
mov
sbb
sub
inc
sbb
jnp
dec
jae
adc
inc
mov
adc
data16
(bad)
lock
xor
jg
pop
arpl
outs
addr16
and
add
add
pop
nop
push
cmp
xor
push
mov
mov
mov
and
cmp
mov
stc
dec
imul
sub
aad
fisub
add
inc
or
jb
inc
xor
xchg
inc
mov
inc
mov
pop
add
dec
or
mov
mov
mov
push
lock
adc
lahf
adc
movs
lods
push
and
jno
cs
dec
and
repz
repnz
ret
jg
stos
xchg
xchg
or
test
popa
sub
sbb
push
add
leave
and
or
inc
lahf
dec
or
ja
xor
push
rol
addr16
pop
test
cmp
add
or
aad
inc
nop
aam
push
xchg
imul
repnz
xor
lea
mov
cmp
imul
pop
fiadd
add
fiadd
jae
icebp
adc
js
sbb
ret
jle
cld
stos
test
push
jno
inc
mov
xlat
test
xor
xor
sub
imul
add
mov
push
adc
ret
mov
add
lds
mov
or
sub
adc
adc
mov
dec
inc
sbb
cmp
sub
xchg
xor
jg
sbb
(bad)
dec
cmp
mov
mov
jge
ret
push
ja
pop
mov
mov
inc
add
loope
int
movs
outs
add
mov
add
lock
xor
inc
inc
jne
ins
outs
neg
jno
adc
dec
iret
clc
shl
in
adc
push
inc
sbb
cmc
dec
xadd
leave
leave
jb
into
sbb
xsha256
cmps
push
push
push
add
movs
enter
loope
push
je
icebp
daa
jl
test
xor
dec
xor
cmps
xor
mov
mov
xchg
call
bound
or
xor
mov
lds
jo
pop
mov
outs
ret
mov
outs
sub
adc
xchg
push
outs
ins
push
mov
lahf
pop
or
out
jge
outs
sub
pop
outs
or
cli
or
push
dec
sbb
in
sbb
and
push
mov
cld
(bad)
jmp
stos
cmps
add
dec
mov
or
fdiv
rcl
imul
or
movs
sub
jo
mov
mov
ss
test
add
test
fist
jmp
mov
into
push
ja
adc
xor
pusha
add
fisubr
push
popf
gs
sub
sbb
mov
call
or
test
jmp
test
push
mov
inc
dec
sub
add
jae
pusha
mov
mov
lahf
pop
jne
or
jbe
test
mov
add
jmp
fcmovnu
call
seto
popf
aam
sub
fucomi
adc
jl
je
hlt
setnp
fisub
fistp
enter
loopne
inc
and
adc
mov
add
jge
mov
push
xchg
cmc
cmp
jnp
into
std
push
add
sbb
repz
iret
repz
push
pop
gs
jne
pop
xchg
inc
xorps
addr16
jg
movs
fimul
xor
mov
lock
add
daa
movs
push
add
push
sbb
and
xchg
aam
cwde
iret
xchg
push
pop
mov
push
pop
pop
jae
js
dec
not
add
adc
push
test
pop
mov
dec
lahf
push
sbb
imul
psubw
mov
cmp
xchg
int3
sbb
pushf
mov
dec
dec
inc
pop
test
adc
cvttps2pi
ret
inc
xchg
add
mov
sub
mov
out
dec
mov
aad
adc
and
or
scas
pusha
mov
ins
and
adc
dec
add
and
add
cmps
inc
pop
jo
push
scas
jns
jns
mov
stos
(bad)
outs
inc
push
or
add
jno
or
xor
pusha
xchg
jne
call
add
pusha
cmp
or
dec
das
add
cmp
cmps
xor
lods
loop
(bad)
sti
mov
push
pushw
mov
rol
and
fmul
pop
cmp
jge
jne
cmp
inc
push
mov
sub
scas
stos
cmp
aam
ret
xor
pusha
mov
gs
gs
cmc
adc
adc
inc
xlat
pop
ret
push
jecxz
cmp
enter
inc
push
rol
mov
inc
cli
aaa
inc
(bad)
(bad)
sti
xchg
inc
loopne
sbb
sbb
sahf
or
int
add
out
inc
cs
(bad)
ins
push
aas
lock
add
mov
gs
inc
cwde
shl
sub
jb
ret
out
add
cdq
push
push
ror
add
outs
push
mov
pop
push
repnz
mov
cmp
psraw
dec
dec
mov
adc
je
dec
dec
mov
sbb
(bad)
mov
dec
test
cld
mov
cmp
add
cmp
imul
jne
add
or
add
adc
push
test
inc
add
stos
inc
push
fiadd
add
adc
pop
pushf
div
pop
push
push
push
sub
add
or
adc
mov
push
enter
cmp
jae
push
sub
ins
daa
sar
inc
dec
int3
pop
or
mov
push
push
call
cwde
sub
add
mov
jmp
cmp
mov
(bad)
dec
popa
push
push
push
lods
mov
inc
or
aas
push
dec
cmp
jg
imul
xchg
mov
addr16
leave
out
and
clc
mov
mov
dec
mov
sbb
mov
pop
jno
sti
aam
sbb
mov
in
out
in
ror
fcmovbe
fucomp
cdq
enter
add
push
mov
jmp
push
push
pushf
adc
mov
push
cmps
mov
clc
dec
(bad)
mov
adc
jmp
and
popa
add
cld
cmovbe
outs
out
xchg
shl
retf
add
add
sub
adc
dec
fs
dec
int
sbb
test
aas
add
sub
mov
out
push
or
dec
dec
sub
lock
in
dec
dec
inc
sbb
add
push
out
pop
sub
inc
data16
pushf
jne
movs
xor
jmp
xchg
movs
cmps
and
xchg
pop
sub
inc
jecxz
xchg
cmps
jo
neg
lods
xchg
push
ins
movs
push
retf
mov
(bad)
jmp
in
(bad)
call
sar
fadd
add
aam
test
jo
ins
clc
push
fcomi
movs
cmp
and
add
ss
arpl
call
and
imul
inc
jo
push
dec
sti
fimul
fsubr
xor
andps
aam
or
or
test
das
xor
adc
shl
lds
push
or
out
retf
pop
dec
mov
inc
xor
mov
mov
ret
add
cdq
(bad)
in
outs
add
fs
xchg
or
push
pop
fs
(bad)
lods
adc
adc
(bad)
add
add
jbe
imul
rol
mov
aas
dec
or
push
js
xchg
inc
jns
(bad)
adc
ret
shl
xchg
and
fld
hlt
xchg
push
daa
sub
jne
dec
push
mov
(bad)
cmp
stos
jo
inc
inc
imul
mov
(bad)
movaps
push
xchg
add
loope
aas
lock
sbb
mov
or
sub
mov
in
cs
jge
sub
bound
dec
ja
xchg
shl
push
loope
inc
xchg
xchg
jno
push
pop
jb
xor
rcr
mov
add
push
fadd
jmp
cwde
push
push
repnz
iret
fndisi(8087
mov
add
push
jl
cmp
test
mov
shr
lock
enter
push
test
sbb
(bad)
or
mov
mov
dec
jecxz
xor
xchg
sub
or
push
jo
js
jnp
inc
leave
fld
inc
xlat
jne
in
add
or
inc
jo
mov
sbb
push
aaa
add
pop
aaa
cdq
imul
jnp
cmp
fmul
cld
sbb
sub
popa
cs
jbe
mov
pop
ror
push
mov
stos
pop
pop
push
sbb
(bad)
sar
cld
(bad)
sti
and
sahf
out
sbb
inc
shl
stos
stc
cmp
dec
cmps
cmp
daa
mov
sbb
pop
fild
sbb
jae
lds
iret
dec
mov
dec
and
in
pop
sub
pop
aad
inc
add
dec
sbb
inc
imul
push
les
mov
iret
dec
xlat
adc
loop
iret
pop
cmps
inc
pop
xor
sub
mov
add
inc
sub
aad
sbb
add
(bad)
imul
(bad)
pop
add
or
sub
stc
inc
shr
in
mov
je
xchg
sub
add
dec
rcr
mov
imul
or
ret
inc
mov
lock
push
int
adc
dec
(bad)
mov
push
pusha
sub
sub
jmp
or
outs
mov
dec
sahf
dec
js
fdiv
out
add
dec
xchg
mov
dec
push
jl
aam
add
repz
xor
dec
adc
rcr
add
xor
add
mov
xchg
js
push
dec
cmp
rcr
rcl
mov
adc
mov
popf
and
mov
push
or
scas
sahf
inc
leave
(bad)
(bad)
pop
mov
mov
outs
mov
cmovns
cmps
addr16
mov
pusha
mov
das
pushf
jae
push
mov
fdivp
rcl
sahf
cmps
js
cmp
lds
sahf
jle
add
xor
pop
cmps
clc
cmc
sti
fs
or
add
loop
pop
push
pop
jle
push
jne
xor
ins
adc
inc
adc
stos
or
xchg
jmp
push
imul
xor
jge
imul
ins
add
push
data16
mov
out
or
fild
mov
daa
xor
push
push
adc
or
pop
pop
test
inc
xchg
arpl
sti
fwait
xor
(bad)
adc
bound
adc
sbb
clc
imul
loop
imul
inc
int
lock
adc
adc
pop
ja
bound
pusha
pop
adc
push
or
sbb
xor
popa
adc
ror
mov
adc
push
les
in
pop
add
data16
bound
dec
cmp
push
ins
mov
xor
ins
cmps
jp
push
mov
aam
mov
(bad)
pusha
ins
pop
ret
lds
push
sub
aad
cmc
imul
iret
mov
jnp
fst
outs
push
aam
clc
push
sbb
pop
data16
fidiv
aam
es
aaa
push
push
cwde
push
in
dec
retf
push
repz
sbb
nop
lods
dec
mov
fbstp
push
fadd
loope
sahf
cli
and
or
fdiv
(bad)
out
mov
outs
fs
pop
outs
push
mov
nop
mov
xlat
es
push
loope
lock
popa
jne
mov
les
pop
dec
stc
or
(bad)
fs
mov
sub
sub
inc
gs
fcom
sub
stos
cli
fsubr
sbb
inc
pop
jg
arpl
jno
cmps
aas
clc
and
inc
mov
mov
aaa
imul
(bad)
sbb
push
mov
dec
dec
jmp
xor
enter
push
ficom
movs
les
add
fcmovbe
jmp
xchg
lds
adc
les
xchg
jne
xor
retf
cmps
movlps
(bad)
popf
es
das
imul
pop
stc
mov
pop
pop
cmps
adc
add
xlat
mov
pop
add
sbb
daa
test
jecxz
jo
push
jle
sbb
bswap
lahf
jne
xor
nop
nop
call
loop
push
stos
mov
ins
pusha
ret
repnz
add
sub
packsswb
fwait
cmp
out
shl
sub
lods
wbinvd
add
cmp
jecxz
push
push
ret
out
add
stos
adc
push
pop
mov
test
ret
push
or
lds
sbb
js
daa
xchg
test
add
cs
out
dec
ins
inc
std
push
add
cs
dec
mov
scas
or
or
inc
popa
mov
adc
popa
inc
jo
jmp
cmp
add
push
xor
cmp
jmp
lock
fnstenv
or
dec
pusha
in
xchg
ss
and
test
jnp
add
(bad)
aam
jo
cmp
rol
push
arpl
lods
push
push
sar
add
out
cdq
xor
sub
push
ds
sub
push
ror
add
sub
pop
jecxz
add
jl
inc
jae
daa
mov
icebp
dec
xor
dec
add
dec
adc
ret
fiadd
or
imul
ds
and
mov
shl
pop
add
ins
pop
xchg
jne
push
sbb
stc
add
pop
or
mov
(bad)
sub
(bad)
mov
fs
or
imul
fisttp
inc
and
push
xor
ret
sub
in
or
arpl
inc
and
sub
pop
or
push
sbb
sbb
rcr
ds
inc
push
pop
loop
mov
xor
pop
jno
lahf
push
ja
cmp
or
or
mov
sbb
les
ja
fldenv
add
adc
fwait
adc
push
xor
shl
cmp
add
data16
mov
or
fisubr
mov
inc
imul
jb
ins
mov
jne
in
add
mov
out
outs
mov
xchg
fiadd
outs
sub
push
pop
and
add
dec
stc
or
dec
push
imul
fcomi
and
and
movs
or
mov
jnp
dec
shr
xchg
xor
inc
or
add
sub
cmp
test
or
and
inc
call
outs
or
adc
dec
or
push
and
dec
(bad)
(bad)
ret
lods
inc
or
mov
dec
xchg
adc
xchg
adc
pusha
pop
inc
xor
add
cmp
bound
add
push
pop
pop
pushf
pop
sub
ins
adc
pop
fsubr
xchg
xchg
retf
pop
scas
aas
imul
mov
xchg
xchg
xchg
dec
ja
mov
sub
and
add
sub
and
pop
aad
aas
add
add
mov
adc
mov
add
cwde
or
not
and
add
jne
mov
pop
pop
and
leave
mov
test
into
push
or
ins
popa
out
(bad)
shr
xchg
pop
mov
lods
cmps
push
jmp
jnp
mov
lock
shl
or
or
and
ror
call
fisttp
retf
xchg
cmp
pop
out
cmp
and
scas
je
test
popa
inc
int3
ds
inc
xchg
nop
mov
rcr
xor
cmp
add
dec
xor
mov
ret
rol
ror
inc
adc
sahf
enter
add
pop
mov
pop
or
and
add
xlat
mov
add
mov
movs
add
adc
sbb
mov
cwde
pushf
fnop
repnz
xchg
and
ja
adc
out
ret
mov
gs
ss
in
pop
in
xchg
fs
inc
les
les
mov
jnp
stos
das
add
jae
enter
jmp
mov
pop
mov
pop
pop
add
pusha
aam
iret
movs
fs
fisubr
iret
adc
push
fisttp
push
inc
dec
into
enter
inc
popf
data16
hlt
iret
push
fiadd
or
xlat
ss
xor
cmc
mov
data16
mov
sbb
fcom
in
push
iret
out
mov
push
sahf
jl
mov
xor
fbstp
sub
push
xor
or
add
arpl
fcom
add
mov
sub
or
(bad)
imul
and
or
jne
out
or
mov
(bad)
sbb
jae
imul
je
push
mov
es
dec
outs
pushf
jle
dec
mov
ins
sub
mov
ja
push
iret
inc
cmp
mov
add
mov
jbe
js
mov
paddusb
repnz
mov
movlps
adc
sub
mov
orps
ja
add
add
inc
lahf
mov
sub
cvtpi2ps
or
add
shr
dec
adc
mov
sbb
aad
aam
or
cli
mov
cs
and
inc
sbb
sub
addr16
sub
jmp
sbb
repz
sub
out
xor
xor
inc
mov
xchg
adc
test
lahf
cmps
cwde
daa
xchg
mov
add
jmp
xchg
sti
pop
pop
mov
adc
sbb
and
test
push
or
mov
and
jb
scas
and
mov
jne
scas
mov
push
jo
shl
dec
xchg
sbb
push
xchg
push
push
fst
pop
rcr
push
mov
and
sbb
pop
and
pop
add
ror
add
push
xor
sub
xchg
add
inc
or
push
popf
inc
add
(bad)
fnstsw
ja
pop
and
mov
pop
dec
add
or
daa
hlt
retf
xor
mov
mov
test
repz
retf
call
aaa
lock
lods
adc
push
loopne
lock
daa
cs
add
out
dec
(bad)
shl
outs
sub
add
add
setnp
sahf
pushf
loop
mov
dec
dec
loopne
rcr
xchg
daa
daa
fisub
xchg
xchg
movs
fsub
ret
in
leave
mov
xor
in
mov
sbb
jb
(bad)
sbb
cmp
pushf
aam
(bad)
push
inc
sahf
pushf
pushf
call
dec
dec
stos
in
enter
daa
daa
lods
out
leave
enter
scas
call
leave
leave
imul
mov
xor
jns
jb
ins
mov
ss
cmp
sbb
lock
mov
mov
setae
ins
shl
inc
iret
das
test
into
leave
leave
leave
enter
scas
sti
repnz
in
rol
jb
xor
fisub
sar
cmp
gs
cmp
mov
push
aad
and
dec
xchg
ficomp
imul
enter
mov
in
leave
xchg
fild
fld
rcr
ficom
cmp
jns
fldcw
dec
idiv
ds
jmp
push
js
mov
dec
adc
adc
ins
or
test
js
jne
data16
fadd
scas
xchg
adc
inc
dec
add
stos
xchg
xchg
pop
pop
push
int
mov
pop
sbb
pusha
inc
test
pop
push
dec
sbb
gs
lock
imul
add
mov
movs
inc
xor
and
and
pop
test
xchg
push
pusha
outs
pusha
and
or
lea
in
lea
cmp
mov
mov
call
rol
outs
std
xor
push
pop
nop
outs
std
or
pop
or
outs
nop
or
push
std
fs
push
pop
outs
std
mov
push
pop
nop
outs
std
push
pop
nop
or
outs
pop
nop
or
std
int3
outs
call
and
bound
outs
std
fisub
xchg
clc
outs
std
mov
leave
and
outs
add
xor
adc
outs
std
mov
ins
mov
outs
std
ins
mov
leave
mov
std
mov
leave
adc
std
adc
dec
jl
or
std
dec
lea
push
pop
xor
test
inc
mov
adc
and
pop
cmp
push
and
xchg
jno
inc
adc
add
or
or
and
mov
and
inc
adc
or
pop
sgdtd
mov
and
add
sub
adc
inc
pop
add
mov
and
sbb
adc
inc
adc
sub
and
push
sbb
adc
or
add
add
mov
mov
add
jno
push
loopne
dec
xchg
add
add
adc
jno
or
pop
popa
and
add
or
dec
or
xor
add
and
jno
adc
inc
nop
call
or
or
call
pusha
or
or
or
imul
pusha
rol
xlat
mov
hlt
ins
or
adc
xchg
xchg
sbb
sbb
pop
xchg
add
xchg
xchg
xchg
mov
bound
add
fbstp
(bad)
dec
mov
xchg
rol
imul
xchg
mov
jo
test
in
sti
pop
push
mov
dec
cmp
mov
jns
dec
jnp
lea
and
add
test
adc
mov
adc
les
(bad)
(bad)
adc
rcl
fist
in
pop
xor
adc
test
and
adc
adc
adc
pop
adc
inc
adc
sub
adc
adc
adc
pop
adc
test
inc
adc
mov
push
lods
adc
mov
movs
lds
rcl
fst
jmp
add
dec
add
dec
add
pop
mov
adc
xchg
jbe
ins
ror
inc
and
and
fcom
fisttp
xor
clc
lods
pusha
pop
push
fs
or
jo
inc
jb
ins
(bad)
les
or
mov
jb
repz
lea
add
inc
or
outs
outs
gs
inc
dec
add
or
xchg
or
jae
outs
sbb
inc
jae
add
adc
ds
pop
jae
sbb
sub
add
jg
inc
cs
push
adc
scas
add
vpaddsb
popa
ins
and
add
sub
sub
sub
ficomp
outs
outs
movs
adc
mov
test
mov
mov
adc
cmp
rcl
pop
iret
and
pop
jmp
imul
lods
inc
daa
shl
pop
ds
mov
lods
mov
in
mov
loope
and
stos
test
mov
mov
add
push
jns
gs
cs
ins
popa
jae
jae
pop
sbb
repnz
push
or
fisttp
inc
(bad)
sbb
inc
mov
push
popf
add
jle
dec
push
outs
jae
imul
pusha
mov
inc
or
adc
call
dec
call
ins
out
adc
scas
pop
add
jmp
es
sbb
ror
frstor
(bad)
sbb
pop
int3
jle
cld
fild
mov
push
lock
das
inc
push
lock
push
mov
js
int3
push
and
out
cmp
cmp
xor
ja
cmp
test
out
sbb
idiv
rcl
push
xlat
pop
fmul
add
mov
inc
dec
ins
fs
pop
sbb
dec
div
jg
inc
add
inc
leave
cmovle
outs
or
dec
mov
xor
sub
xor
aaa
pop
or
dec
adc
push
lock
xchg
clc
pop
pop
cmc
jecxz
or
or
inc
icebp
add
add
mov
leave
add
adc
test
or
xchg
add
push
mov
inc
loopne
ja
or
pop
or
sub
cmps
popa
pop
cmp
inc
aam
jp
inc
test
movs
ins
xor
cmp
shr
fst
test
out
or
fwait
add
int
aas
push
popf
lods
push
add
push
hlt
adc
in
mov
push
loop
jmp
sbb
inc
adc
loopne
add
loop
fiadd
inc
mov
xor
and
add
or
cli
dec
mov
add
lods
sahf
pop
jo
(bad)
dec
push
mov
push
and
ss
mov
cmp
outs
lock
imul
sbb
dec
outs
test
push
add
adc
(bad)
loop
retf
(bad)
enter
or
je
add
inc
pop
fcomp
mov
sbb
jns
add
push
xchg
adc
pop
scas
pop
sub
pop
ja
sub
inc
lds
outs
or
dec
or
pop
add
fwait
jge
test
push
int3
es
adc
aaa
inc
add
mov
mov
int3
test
je
adc
jmp
or
push
dec
add
xor
xchg
mov
ins
dec
pop
pop
sahf
outs
jb
jle
and
add
or
shl
retf
ret
mov
xchg
nop
vmread
cwde
push
es
inc
and
dec
add
push
inc
jne
ins
mov
nop
inc
xchg
push
adc
movs
fs
inc
add
add
mov
inc
adc
test
ins
jno
mov
cwde
jmp
popa
ins
adc
lock
push
outs
fnstcw
sbb
dec
jns
push
enter
ja
jno
ret
jmp
mov
pop
fistp
arpl
ins
add
mov
pop
arpl
mulps
out
jns
xlat
push
mov
test
dec
in
xchg
mov
pusha
ja
sbb
leave
pop
jmp
in
push
push
ja
sub
test
inc
jg
jge
add
inc
popa
jo
arpl
push
sbb
add
cmc
or
out
rcr
pop
inc
movq
inc
xor
loop
mov
loope
pop
or
cmps
add
xor
scas
jmp
pop
and
push
mov
sbb
dec
js
hlt
repz
aam
pop
call
test
jp
stos
jnp
loope
dec
sub
aaa
cmp
stos
div
jno
aad
js
xchg
dec
gs
shl
loope
cld
push
mov
mov
push
dec
ins
push
loope
mov
add
mov
mov
xor
push
retf
mov
call
loopne
fmul
push
mov
je
mov
or
fsubr
xor
ja
in
pop
shl
jmp
ret
and
push
inc
inc
jns
call
sub
xor
add
sar
xchg
out
lods
sbb
jl
pop
dec
popa
xchg
xchg
sub
sbb
cmp
jmp
jne
outs
in
pop
pop
cmp
pop
fldcw
jbe
retf
xor
jmp
pop
loop
imul
push
sbb
aaa
or
jo
test
scas
cmp
adc
mov
sbb
dec
dec
cld
cmp
dec
inc
ins
outs
bound
mov
sbb
add
imul
mov
lock
xor
or
add
push
jno
sub
inc
xor
pushf
inc
mov
pusha
movs
adc
add
mov
pop
and
push
(bad)
add
mov
jo
or
add
out
inc
mov
shl
sbb
cmc
dec
mov
add
inc
push
mov
inc
inc
(bad)
push
cmps
pop
pop
pop
pop
push
cmp
repz
outs
add
jo
sahf
dec
pop
dec
ja
sbb
jo
fldcw
leave
add
cmp
movs
lods
or
xchg
pop
push
dec
fs
js
pop
int3
add
or
cmp
nop
add
nop
adc
sbb
nop
add
and
dec
outs
bound
push
add
rol
add
les
in
ror
in
shr
xchg
out
xor
pop
sub
jns
cld
xchg
ja
add
or
fsubr
into
mov
es
push
in
out
mov
push
mov
aas
out
out
cld
mov
xchg
dec
imul
cwde
iret
push
movs
(bad)
xchg
out
mov
xor
out
in
test
adc
js
(bad)
jo
sahf
cmps
stc
js
test
xor
adc
add
je
ins
ret
pop
inc
jnp
fsub
jnp
or
sub
mov
xor
xchg
push
jmp
push
xlat
fisubr
in
xchg
or
aas
pop
orps
test
cvtpi2ps
out
jg
out
xchg
(bad)
sysret
add
lock
retf
fbstp
push
jns
or
ret
jbe
aam
cmp
inc
fs
jo
jb
xor
shr
and
dec
clc
pop
or
or
adc
stos
adc
fwait
and
iret
jo
add
xchg
push
inc
ja
loope
sub
hlt
mov
xchg
loop
test
jo
add
or
arpl
push
and
mov
jo
jnp
push
sub
xor
mov
ret
je
rcr
in
lahf
pop
lahf
or
(bad)
in
in
sahf
or
bound
jbe
xchg
add
ja
and
push
add
jno
test
test
cmp
lds
call
adc
aaa
add
push
es
in
dec
push
outs
jae
hlt
jae
mov
sub
pop
jl
dec
ret
add
and
jne
inc
ror
mov
stc
ds
jge
movs
ret
es
jl
inc
addr16
dec
inc
ds
add
mov
mov
sar
pusha
jmp
pop
or
imul
add
pop
sub
or
add
pop
jnp
jle
scas
out
xor
xchg
mov
push
in
push
outs
ins
mov
adc
je
jae
lods
lods
or
inc
push
je
addr16
out
jo
jecxz
pop
ins
pop
add
jne
xor
mov
shr
xchg
mov
pop
nop
xchg
pop
jnp
add
add
cmp
xchg
shl
cmp
popf
pop
or
sub
mov
inc
psraw
mov
lods
or
push
inc
sbb
sahf
js
jbe
adc
push
cmp
add
ret
sub
add
inc
mov
pop
fldcw
fsubr
sub
add
loopne
out
(bad)
daa
pop
das
jg
outs
cwde
push
pop
push
bound
enter
dec
and
mov
add
add
push
pop
mov
inc
mov
push
loopne
or
pop
adc
pop
add
pop
inc
rcr
push
pushf
inc
lds
les
pop
xor
xabort
xchg
adc
dec
outs
arpl
mov
arpl
sub
rol
jae
xchg
lods
xor
test
ret
std
dec
lahf
gs
xchg
cwde
mov
or
ret
or
mov
add
or
and
(bad)
sbb
arpl
das
add
inc
add
popa
rcl
mov
jge
(bad)
jge
aad
or
or
(bad)
pushf
sbb
gs
push
adc
jbe
mov
jne
ins
or
mov
pop
jnp
sahf
std
or
xor
inc
js
mov
or
mov
fcomp
push
inc
mov
je
jb
jbe
div
ds
cmp
jns
push
adc
scas
pop
push
dec
imul
jbe
mov
dec
xchg
xor
mov
or
mov
outs
retf
(bad)
mov
push
iret
retf
jb
push
inc
cmp
jb
dec
pop
lds
jb
mov
shl
fild
cmp
shr
fbstp
int3
xor
xor
xor
jmp
cwde
or
lock
and
dec
push
sar
loopne
or
ud2
pop
clc
xor
popf
push
sbb
sub
jl
inc
bound
in
sbb
dec
push
and
jl
(bad)
pushf
nop
xchg
xchg
xchg
add
popa
mov
rol
sbb
dec
(bad)
or
jmp
sbb
dec
shl
lods
sbb
or
call
loop
in
pop
inc
(bad)
int
dec
add
pop
frstor
movs
xchg
pop
sti
xchg
mov
inc
cli
push
(bad)
push
xchg
das
mov
and
aam
test
push
pusha
ins
es
sbb
xor
dec
or
xor
adc
fs
inc
and
and
loopne
xchg
or
jge
dec
xor
mov
inc
or
test
mov
add
iret
and
pop
rcr
push
out
dec
and
push
jo
or
and
inc
or
or
sbb
ins
add
outs
and
pop
pop
jo
cmp
xor
pop
add
mov
lock
retf
cmovbe
inc
add
mov
push
and
sbb
xor
pop
xor
les
out
pop
jo
pusha
add
inc
(bad)
enter
inc
pop
jno
inc
sbb
pop
pop
ret
mov
fcomp
pop
cwde
dec
pop
mov
add
xor
pusha
aam
(bad)
mov
div
and
cmp
and
mov
add
adc
dec
les
out
mov
and
sub
ins
jne
push
ror
(bad)
mov
push
test
pop
sbb
mov
pop
jb
movs
inc
mov
iret
jecxz
ja
inc
cld
icebp
jmp
pop
dec
inc
popa
adc
sbb
adc
(bad)
fdivr
pop
inc
push
sub
(bad)
jne
sub
sti
pushf
adc
push
and
adc
push
or
out
cmp
cmps
sub
gs
outs
fs
jbe
xor
daa
push
adc
or
or
xchg
pop
inc
fs
call
add
inc
add
add
test
repnz
xlat
loopne
mov
rol
push
inc
add
(bad)
mov
lds
imul
sbb
daa
ret
test
outs
or
add
imul
jo
out
std
add
mov
add
movs
pusha
dec
cld
inc
pop
inc
fsub
int
or
and
sti
pop
mov
test
out
push
xchg
sub
fld
add
mov
(bad)
mul
(bad)
outs
pusha
xor
push
or
dec
pop
inc
hlt
imul
inc
or
adc
jno
xor
shr
mov
lds
sbb
or
jo
cmp
mov
shr
cwde
xchg
sub
dec
fsub
test
and
or
jmp
addr16
adc
pcmpgtb
sbb
pop
fsub
ja
or
or
sbb
sbb
mov
nop
mov
add
dec
xor
mov
mov
shl
push
mov
jo
inc
add
adc
add
aas
popa
inc
sub
ins
cmp
push
imul
(bad)
enter
or
iret
mov
or
mov
adc
daa
inc
(bad)
cmp
adc
or
sub
add
adc
mov
push
add
fdivr
dec
test
push
adc
pop
mov
pop
rol
add
adc
out
adc
add
jo
in
jnp
add
push
xor
pushf
add
dec
dec
cwde
lock
push
xchg
dec
mov
mov
adc
push
rol
xchg
pop
(bad)
lods
outs
ins
in
adc
cmp
adc
lahf
add
int3
daa
pop
or
jecxz
push
sbb
scas
lock
add
adc
popf
ror
pop
inc
push
popa
lock
mov
and
mov
and
faddp
stos
xor
cmp
xchg
outs
lea
jge
adc
and
push
sbb
add
push
dec
sub
ss
sub
cmp
push
pusha
cmp
inc
lods
es
or
mov
adc
cmp
sub
in
sbb
jge
push
ret
mov
xchg
sub
test
loope
dec
sub
or
imul
sub
outs
aad
js
jo
je
js
jge
add
sbb
or
fdivr
xchg
mov
push
orps
push
das
hlt
mov
mov
loopne
push
les
movs
daa
and
movntq
or
cmp
dec
xchg
pushf
mov
(bad)
or
dec
inc
sahf
pushf
repz
jg
daa
daa
and
or
jl
xchg
xchg
daa
daa
rcl
or
xchg
scas
fadd
push
sub
leave
leave
leave
pop
xor
sysexit
pusha
sbb
sbb
prefetcht1
dec
cmp
cmp
jg
loope
lds
jbe
push
or
jmp
dec
xor
retf
cmovb
movs
jne
sbb
mov
stos
or
arpl
(bad)
test
test
leave
sar
inc
jno
add
adc
outs
push
and
mov
outs
add
pop
out
outs
dec
pop
adc
cmp
or
dec
data16
fadd
sbb
ret
aam
sub
fiadd
push
lods
dec
fistp
nop
add
jg
sub
push
pop
mov
je
xor
push
inc
add
pop
mov
loopne
cdq
out
inc
xor
fadd
sbb
sbb
bound
adc
mov
mov
sbb
adc
ret
inc
mov
test
sbb
push
or
fs
add
mov
sbb
jb
int3
fs
out
imul
hlt
mov
add
push
xor
sbb
jb
mov
adc
add
movs
xchg
loopne
loopne
add
fcom
retf
inc
sbb
push
pop
int
dec
sub
or
push
imul
inc
add
inc
adc
pusha
fist
push
or
fwait
or
imul
sub
inc
out
pop
cmp
pusha
and
pop
add
xor
mov
and
or
xchg
xchg
inc
stos
inc
(bad)
cmps
add
sbb
sbb
rcr
je
retf
pop
stos
cvtpi2ps
jl
or
push
pop
push
jge
inc
push
cmp
push
fisttp
rcl
or
push
rol
sub
mov
and
lods
dec
aam
dec
cmp
pop
out
add
ret
adc
inc
inc
mov
add
or
call
outs
addr16
(bad)
js
mov
cwde
nop
pop
icebp
ret
sub
jbe
inc
cmp
test
add
push
js
rcl
dec
jmp
xchg
js
sbb
inc
or
les
add
inc
mov
call
retf
adc
sub
add
cmp
lds
and
outs
sub
mov
or
loopne
pop
sbb
dec
loope
add
dec
rol
int3
lea
pop
mov
add
nop
aaa
mov
ss
add
mov
stos
imul
lock
lds
or
add
xor
lahf
or
imul
sbb
push
das
add
pop
lock
mov
cmp
jns
pop
(bad)
push
push
adc
sbb
stc
or
mov
(bad)
sub
push
dec
pop
sbb
xor
sbb
and
inc
push
add
lds
or
mov
push
sbb
jecxz
sub
add
pop
inc
pop
int3
int
push
and
pop
inc
mov
dec
ja
movs
mov
cdq
dec
int3
int
xchg
inc
pop
or
scas
inc
movs
les
cs
int3
int
inc
push
adc
bound
lea
pop
pop
adc
je
adc
and
stos
cmp
inc
pop
xor
inc
test
sbb
add
fimul
adc
push
pusha
xor
lahf
or
add
dec
cmp
pop
sbb
or
and
cmp
mov
pop
jp
add
xor
mov
push
std
pop
repz
push
es
mov
mov
fild
dec
mov
sbb
rdpmc
adc
add
and
add
les
mov
mov
out
push
rcl
sbb
pop
cmps
push
push
jmp
push
inc
lock
mov
push
mov
mov
cmp
push
dec
push
lock
fstp
pop
xlat
nop
add
aad
or
xlat
or
pop
popf
inc
jne
outs
enter
fstp
ret
push
scas
xchg
adc
in
stc
hlt
or
jecxz
(bad)
xor
ss
dec
gs
mov
(bad)
jmp
add
adc
jno
clc
adc
jae
push
jne
push
ja
sti
ins
imul
add
outs
pop
add
mov
pop
push
or
(bad)
fidiv
inc
sbb
jb
inc
mov
daa
and
or
dec
xchg
fcom
sbb
leave
leave
enter
sbb
int
in
in
sbb
jb
repnz
imul
and
pop
scas
out
in
cmp
xchg
iret
jb
xor
or
inc
jle
cmp
jns
fcomp
and
aaa
cmp
cmp
dec
and
dec
jno
(bad)
fbld
cmp
and
(bad)
jb
test
test
popf
or
test
in
idiv
add
(bad)
mov
dec
add
push
or
push
add
xchg
sahf
xchg
and
push
or
mov
xchg
xchg
xchg
mov
mov
lea
lea
lea
lea
lea
lea
lea
ja
pop
sub
lea
ror
lea
jno
jnp
(bad)
push
push
lea
pop
xchg
cmp
mov
jmp
movs
fimul
push
add
pop
(bad)
add
out
and
ds
je
aaa
xchg
push
sub
add
xchg
jnp
aam
test
jns
dec
pop
loopne
cmp
mov
pop
ins
stos
icebp
lea
ret
cmp
or
cdq
xor
mov
or
jnp
test
sbb
pop
dec
arpl
cmp
jmp
lahf
call
sbb
sbb
repnz
adc
add
jo
and
in
pop
add
jae
jae
es
aas
add
adc
xchg
pusha
jecxz
pop
ja
sub
mov
test
sbb
test
inc
mov
lahf
add
inc
push
mov
scas
loopne
rol
mov
sbb
out
push
dec
mov
sbb
push
mov
test
inc
gs
mov
call
adc
pop
add
fld
imul
fxch
nop
or
jg
mov
inc
sub
sbb
xchg
aam
add
mov
mov
pop
add
sbb
push
cmp
sahf
ffreep
add
imul
lock
enter
push
inc
cmp
inc
sub
scas
inc
ins
add
jae
push
and
mov
add
fs
push
and
jp
in
pop
and
cmps
push
cli
pushf
pop
jne
cwde
pop
mov
push
std
push
and
inc
jo
jb
push
bound
loopne
inc
and
push
cmp
sub
icebp
mov
inc
mov
or
dec
shr
adc
adc
jle
push
and
adc
outs
mov
push
jae
cmp
sub
cs
leave
hlt
jns
mov
out
add
ins
inc
inc
ins
ds
aad
add
inc
push
push
jbe
and
sbb
fldcw
add
or
mov
aas
add
sbb
adc
mov
data16
adc
iret
pop
xor
push
cmp
mov
jle
pfnacc
and
jns
fild
int3
cmp
je
loop
or
outs
inc
jnp
mov
pop
adc
dec
pop
ins
mov
adc
push
push
mov
xlat
mov
push
imul
inc
repz
outs
fild
jnp
es
sbb
cs
inc
mov
cmp
je
jp
arpl
loopne
or
add
inc
retf
sahf
loopne
pop
test
xchg
push
cdq
and
iret
test
inc
push
and
jbe
or
fld
ds
shl
das
adc
lock
jae
aas
adc
add
sahf
sbb
(bad)
ss
adc
sub
daa
ss
fiadd
dec
and
push
imul
lds
jnp
mov
daa
mov
push
aam
push
ror
push
sub
cld
push
inc
jmp
fild
in
add
sub
movs
in
pusha
ins
push
mov
add
jo
xchg
ror
jo
push
(bad)
loopne
les
fmul
sbb
js
or
mov
test
pop
jmp
xchg
push
jne
jo
aaa
in
or
push
ins
(bad)
gs
xor
rcl
pop
imul
aaa
adc
pushf
jecxz
lock
mov
mov
inc
js
outs
sbb
clc
add
add
iret
popa
and
cs
cs
cs
add
jge
test
mov
cmp
xor
in
xor
mov
add
jmp
andps
test
push
les
or
idiv
(bad)
cld
push
sub
sub
inc
outs
xchg
xor
(bad)
popf
mov
sub
sbb
jb
int3
or
cmp
jnp
pushf
pushf
mov
or
pmulhuw
in
xor
mov
es
jmp
test
mov
push
adc
mov
mov
jmp
or
imul
inc
cmps
gs
cmp
add
inc
outs
pop
jns
outs
mov
out
fadd
pop
push
outs
or
fmul
push
jne
imul
inc
data16
inc
jo
jne
push
or
xlat
out
lock
mov
into
jae
push
and
and
les
mov
dec
sub
stos
lods
jg
ret
pop
inc
push
pop
push
popa
imul
ja
(bad)
adc
sbb
mov
test
(bad)
xor
jge
push
sbb
xchg
jmp
add
xor
push
popa
lahf
push
pop
jbe
daa
loopne
xor
fs
icebp
mov
rol
rcl
cvtps2pi
adc
mov
or
popa
pop
jno
scas
cld
or
sub
inc
xor
test
jo
jns
pusha
mov
pop
imul
rcl
lods
rcl
cld
inc
push
lea
jne
pusha
lea
test
add
pusha
jae
fcmovne
ror
sub
lahf
ins
add
and
sahf
lahf
jb
pop
push
jl
xlat
loop
sub
or
rcl
push
stos
mov
or
gs
nop
add
or
stos
or
jbe
lods
pop
add
pop
imul
xchg
inc
test
fmul
adc
fisubr
xchg
xor
sub
inc
push
push
push
jae
addr16
bound
jle
adc
jbe
push
add
cmps
push
sub
aaa
sub
icebp
ret
xor
cmp
mov
xor
sbb
push
inc
xor
or
mov
xor
dec
ins
dec
jo
mov
push
call
sub
push
jo
or
dec
imul
and
dec
ins
rcl
lea
pop
xchg
dec
mov
inc
push
sbb
cmp
rcr
les
inc
xchg
test
mov
imul
cwde
fdivr
or
adc
jae
int3
dec
mov
inc
inc
or
sub
aas
add
xor
es
das
pop
push
adc
loop
mov
xchg
adc
pop
clc
push
add
inc
mov
inc
dec
je
and
shr
scas
mov
ins
adc
jae
push
lods
push
(bad)
and
jbe
xlat
pcmpgtb
inc
sub
leave
test
loopne
xor
mov
sbb
mov
mov
pop
test
jb
mov
popa
lahf
lock
and
stc
dec
es
add
and
adc
outs
pop
dec
(bad)
jns
add
inc
outs
sti
add
add
mov
push
dec
or
dec
or
test
xor
outs
jo
cmp
sbb
je
add
test
call
xor
jno
add
outs
add
adc
jnp
sbb
cmp
or
sub
or
sub
or
push
jge
mov
jo
and
or
js
jo
adc
ret
sub
pop
(bad)
or
pushf
ss
ins
sahf
adc
dec
pop
or
rcl
setg
xor
pop
cmp
mov
pop
mov
xor
mov
loop
popa
mov
or
inc
jbe
imul
jle
lahf
xchg
push
mov
imul
std
(bad)
call
fidivr
add
cmp
or
dec
xor
cmp
sub
icebp
and
ins
push
cli
mov
and
retf
daa
cmp
or
(bad)
hlt
stos
addr16
imul
xchg
or
push
pop
push
and
mov
mov
aaa
mov
or
inc
push
je
adc
xchg
ins
loop
jae
jmp
pop
es
fdiv
dec
bound
mov
mov
add
push
es
add
pop
dec
inc
and
cmp
out
ss
xor
ins
pop
jbe
add
pop
or
adc
(bad)
pusha
ror
mul
cs
(bad)
ucomiss
mov
pop
or
das
jns
or
jno
cmps
jecxz
adc
mov
dec
mov
mov
pusha
mul
mov
push
daa
(bad)
pusha
lock
clc
cmp
cmp
adc
ins
sbb
dec
inc
lock
add
inc
mov
xor
jp
add
sub
sbb
hlt
adc
bound
cmp
nop
shr
cmp
dec
(bad)
sbb
test
pop
(bad)
aad
sar
pop
fs
jl
xchg
pop
fistp
dec
sbb
test
or
cmp
dec
ss
pusha
inc
(bad)
(bad)
call
or
push
xor
mov
jecxz
fwait
xchg
in
rcl
add
add
ja
dec
call
(bad)
pop
test
add
pop
cmp
stos
push
std
inc
sar
inc
xchg
movs
pop
sub
add
cmp
lods
in
cli
xchg
dec
inc
shl
imul
add
jl
dec
fwait
add
into
inc
fst
pcmpeqb
cs
adc
in
sbb
sar
inc
adc
in
xchg
push
int3
test
add
jge
hlt
push
add
mov
sbb
push
mov
cmp
xor
icebp
or
cmps
xchg
(bad)
mov
jle
dec
ftst
push
call
push
sub
push
movs
dec
test
mov
(bad)
jnp
mov
int3
mov
cmps
xor
xor
int3
jl
sbb
pop
pop
ins
fsub
sub
push
pop
shl
out
popa
daa
ror
pop
nop
xor
or
cmps
push
cmp
sbb
cmp
push
push
outs
(bad)
imul
(bad)
xor
rsqrtps
repnz
add
add
or
movs
rol
aaa
add
movs
ret
shr
shl
or
clc
jo
mov
lds
dec
dec
mov
push
push
or
icebp
cmp
add
sub
sub
sub
add
or
or
inc
nop
fcmovb
cmps
xchg
test
xchg
mov
add
(bad)
(bad)
lea
neg
into
(bad)
neg
sub
push
adc
aaa
or
or
mov
lods
push
and
xchg
jae
push
jb
jae
leave
adc
push
adc
std
adc
and
dec
imul
push
ja
add
dec
jne
je
xchg
rcl
movs
test
push
popa
xchg
out
pop
xchg
out
and
pop
push
pop
mov
jp
and
pop
xchg
mov
dec
outs
sub
xor
inc
sub
imul
pop
add
and
(bad)
mov
adc
jnp
inc
jmp
mov
pop
xor
fild
(bad)
inc
ret
push
add
jmp
xchg
or
add
mov
mov
pusha
xor
das
test
pusha
xchg
arpl
enter
jns
in
aaa
adc
int3
add
jnp
test
jns
out
(bad)
popf
cmps
cmc
pop
pop
jo
call
mov
xchg
pop
inc
(bad)
int
dec
add
mov
adc
ja
mov
ror
jecxz
push
add
push
movs
ins
aas
es
adc
xchg
mov
push
sbb
mov
lock
push
mov
pushf
(bad)
pop
sbb
dec
rol
loopne
inc
sbb
fist
mov
ss
mov
lock
mov
push
je
mov
rol
hlt
mov
loopne
jnp
mov
inc
jbe
ds
or
mov
add
xchg
clc
pop
dec
ja
and
fdiv
add
sti
sets
ss
push
popa
addr16
in
mov
push
jl
test
mov
fmul
jne
retf
outs
ja
push
adc
data16
mov
push
mov
cmp
sti
xchg
bound
mov
inc
dec
cmp
imul
xor
push
loopne
ja
cwde
mov
into
pop
test
xchg
xor
gs
ror
adc
outs
sub
mov
(bad)
jb
mov
je
fcom
lock
scas
cli
call
mov
psadbw
repnz
inc
pop
outs
and
outs
btr
sub
bnd
pop
icebp
dec
lock
call
js
inc
aaa
lgs
clc
call
inc
(bad)
(bad)
push
das
xchg
loopne
(bad)
bound
sub
rcl
adc
std
(bad)
cld
(bad)
sti
push
dec
jmp
int
mov
ss
push
repz
cmp
rol
sbb
and
and
hlt
cmp
jo
inc
push
dec
dec
pop
xor
push
adc
inc
push
sub
adc
pop
push
mov
add
mov
lock
xor
inc
shl
daa
pusha
test
ins
(bad)
popf
push
inc
cmp
adc
pop
push
shr
gs
cmp
inc
int3
mov
xchg
imul
mov
ds
adc
push
cmp
and
call
test
cmc
fcomip
fcom
sbb
dec
into
fimul
adc
js
sub
bound
xor
rcl
inc
repz
and
dec
popa
jbe
lds
pop
mov
or
(bad)
jo
call
sub
enter
cwde
push
push
stos
ins
les
push
cmps
ss
inc
pop
test
or
adc
popa
add
sbb
inc
sbb
and
push
push
push
jo
xchg
inc
cmps
xor
inc
scas
push
sub
dec
aas
pop
sub
scas
shl
shl
add
or
push
xchg
ins
test
sbb
test
push
dec
add
jnp
or
popa
data16
add
ins
ins
nop
sub
xchg
adc
addr16
js
popa
inc
(bad)
nop
or
imul
pop
mov
sub
rcr
mov
mov
xor
mov
add
xchg
dec
push
xchg
mov
mov
cmp
data16
mov
call
push
add
or
inc
mov
ins
adc
pop
sub
imul
mov
test
push
or
add
les
fdivrp
jne
aam
mov
jecxz
adc
mov
xchg
mov
mov
or
(bad)
loopne
fbstp
or
or
dec
or
and
test
and
adc
add
mov
mov
and
pop
push
xchg
movs
in
enter
add
shl
mov
setge
rcl
mov
pop
push
nop
or
and
adc
mov
xor
jmp
and
or
mov
dec
or
inc
xor
xor
inc
or
dec
fiadd
or
call
and
mul
out
das
adc
and
sbb
pop
cmp
mov
push
ins
cmp
mov
xor
out
push
fadd
add
loop
jno
mov
dec
inc
push
xchg
mov
push
sub
rol
pop
cmp
ror
push
push
or
mov
sysret
mov
imul
jge
aaa
std
das
mov
jne
in
leave
or
sbb
ss
push
fwait
xor
sbb
add
or
popa
sbb
mov
or
add
jnp
mov
dec
movs
dec
or
ins
lods
xchg
(bad)
daa
push
mov
in
mov
or
or
sbb
mov
fsub
mov
sub
sub
cmp
add
mov
inc
sub
sub
lods
or
loopne
add
fist
int
fcmovnu
mov
pushf
push
sub
inc
xor
dec
push
es
push
ds
popa
lds
outs
or
jae
jne
jae
mov
push
add
sub
es
push
xor
cmp
cs
mov
add
fdivr
xor
cs
mov
cwde
les
push
mov
mov
push
jbe
mov
push
mov
mov
xor
pushf
jecxz
adc
inc
jns
nop
(bad)
sbb
enter
jno
(bad)
out
lahf
outs
push
sbb
icebp
add
mov
popf
push
test
stos
cmp
outs
sub
popa
mov
add
inc
xchg
xor
pop
dec
pop
inc
mov
je
outs
movlps
lods
adc
pop
aad
mov
adc
out
dec
out
lea
bswap
mov
inc
cmp
lahf
ss
sbb
mov
popa
mov
ins
or
lds
add
adc
lds
push
popa
jb
inc
sub
and
xchg
cmp
dec
inc
xor
xchg
or
lock
popa
adc
jns
popf
inc
inc
sub
jbe
adc
dec
inc
imul
pop
retf
retf
or
xor
popa
ins
jne
push
jecxz
movs
mov
jg
sbb
cmps
pop
push
inc
stos
inc
inc
das
pop
xor
out
bswap
lods
add
add
push
add
xchg
jo
mov
out
ja
bound
pop
xor
mov
jno
cmp
aaa
inc
ja
adc
xchg
mov
and
push
push
scas
imul
es
push
cld
or
cs
push
xlat
xlat
add
retf
mov
dec
in
jne
mov
movs
retf
push
push
in
add
inc
jge
dec
push
imul
sub
or
aam
push
mov
dec
lods
repnz
xlat
addr16
pop
mov
pop
cmp
mov
or
sub
dec
jmp
scas
xor
mov
jle
fwait
jmp
ror
stc
(bad)
in
psubd
mov
std
(bad)
fild
xchg
aam
sub
or
popa
dec
add
xor
pop
pop
jno
mov
loopne
fs
push
fsub
add
imul
jno
push
ins
add
jno
shl
inc
sub
ins
ins
mov
test
jmp
movs
ds
inc
dec
pop
jb
mov
cmp
add
or
outs
add
pop
xor
or
sub
inc
mov
push
and
pop
push
test
(bad)
hlt
dec
and
add
jo
add
in
push
fldcw
dec
sbb
jne
xchg
push
inc
mov
push
and
or
add
inc
lds
and
ficom
sbb
jb
jns
or
push
arpl
gs
jnp
fs
clts
inc
pop
enter
cmp
shr
fimul
pop
ror
inc
push
pusha
ins
pop
pusha
std
xchg
in
test
ficomp
push
push
mov
mov
out
pusha
mov
pop
js
sub
dec
pop
popf
mov
xor
mov
mov
arpl
outs
ins
je
das
test
fincstp
sbb
inc
mov
adc
inc
add
push
pop
add
and
or
sub
pop
cwde
pop
scas
mov
xchg
push
imul
ja
push
mov
mov
add
pop
test
sbb
push
pop
enter
mov
sub
iret
jge
loopne
pop
xor
cmp
sub
dec
inc
sub
xchg
(bad)
aas
adc
or
push
add
js
adc
dec
sbb
inc
aaa
cmp
push
fistp
or
jl
nop
mov
xchg
fwait
xor
inc
fadd
sbb
sbb
lods
xor
sub
shr
cmp
leave
xor
ss
jb
lea
inc
test
nop
pop
mov
jecxz
(bad)
outs
lock
pop
and
gs
movs
ss
mov
and
push
imul
add
and
pop
fs
pop
push
nop
cmc
push
rcl
daa
neg
scas
das
mov
mov
adc
xchg
into
push
push
call
popa
outs
popa
sbb
in
pop
inc
add
lds
add
or
sbb
loope
test
stos
adc
in
xchg
pushf
sub
and
scas
and
int3
xchg
enter
int
mov
push
lods
shl
add
push
popa
ins
int3
std
mov
mov
sub
scas
add
mov
push
std
cmps
mov
push
dec
xlat
inc
or
sbb
jmp
and
cwde
ss
inc
xchg
arpl
sub
int
popf
push
ret
jnp
shr
add
das
sbb
push
ja
push
push
jo
jne
pop
and
jl
pushf
dec
invd
imul
push
sbb
mov
cld
inc
pop
push
add
jo
cmp
or
dec
xor
fst
pop
or
add
lods
aam
pop
push
popa
xor
daa
pop
wbinvd
push
jo
fwait
das
sbb
outs
test
fild
cmp
add
lds
ins
push
or
xchg
cmc
loop
or
dec
pop
dec
movs
cli
xor
(bad)
jmp
xor
(bad)
cmp
jmp
fwait
sub
or
js
inc
cwde
sbb
adc
push
jo
or
stos
mov
test
pushf
mov
sub
xchg
jl
lods
out
add
sub
and
mov
add
leave
lods
mov
ret
add
pop
into
std
adc
push
dec
or
jnp
xor
push
inc
movs
push
xor
femms
popa
dec
xchg
daa
daa
and
bound
aam
xchg
xchg
daa
or
mov
leave
enter
fs
mov
jmp
gs
setb
fst
xchg
xchg
xchg
xchg
dec
xchg
sar
leave
leave
leave
enter
pushf
clc
mov
push
or
inc
ret
sbb
add
cmp
cmps
pop
sbb
iretw
dec
or
adc
push
neg
ins
and
jno
mov
push
mov
jne
daa
dec
ja
fild
xor
dec
add
mov
jecxz
cmovns
add
addr16
in
or
push
int
jg
dec
jg
or
cmps
xor
push
or
ficom
mov
cmp
xchg
test
(bad)
ret
shr
or
sbb
xor
ja
xchg
ret
sbb
cmp
and
push
aad
add
shl
ror
mov
mov
or
jbe
xchg
or
or
or
and
das
leave
jno
xor
fwait
gs
inc
dec
pop
inc
push
scas
imul
inc
inc
push
or
adc
pop
loope
dec
jae
imul
mov
adc
mov
add
in
inc
imul
mov
jo
push
xor
lea
jns
lds
dec
add
or
add
mov
bound
xor
jo
push
pusha
xor
gs
dec
pop
mov
retf
pop
rol
sbb
add
or
inc
scas
mov
or
(bad)
xchg
dec
movhps
xor
mov
add
mov
xchg
xor
mov
out
or
shl
inc
pop
jae
xchg
push
push
lds
aaa
bound
jbe
das
out
dec
popa
pop
and
movs
fadd
adc
pop
lds
pop
out
or
jo
ins
cmp
aaa
and
je
popa
imul
shl
add
adc
lods
jle
dec
add
push
push
rcr
imul
or
cmps
or
mov
lea
les
push
mov
jge
push
sbb
jle
adc
ins
or
or
adc
repz
xchg
pusha
or
sub
xlat
mov
adc
xchg
add
add
dec
test
jo
lahf
ds
jb
ins
mov
jae
xchg
xor
sub
sbb
jmp
ja
push
pop
repnz
pop
pop
je
pop
arpl
in
inc
loope
and
jns
adc
sub
inc
stc
test
or
xor
add
pop
add
xchg
sub
add
(bad)
test
imul
int3
int
daa
leave
popa
push
aas
jae
loopne
loopne
sub
jo
mov
sbb
dec
(bad)
push
add
mov
popf
das
jecxz
adc
movs
push
xor
mov
fs
adc
lods
(bad)
test
outs
arpl
fisub
pop
jne
ins
mov
hlt
imul
je
cs
push
inc
shld
add
ror
push
push
push
xchg
jo
call
lods
pop
sbb
xor
in
sbb
push
inc
push
add
push
ficom
fld
data16
or
sub
push
mov
dec
mov
pop
mov
jb
inc
add
test
outs
pop
pop
add
imul
outs
ins
push
mov
(bad)
pop
xor
out
mov
stos
loop
pushf
mov
inc
lea
add
scas
push
cld
pusha
adc
xchg
xor
into
adc
(bad)
out
jmp
mov
data16
cmps
ins
jg
outs
pop
movs
das
mov
adc
ret
inc
mov
popf
loopne
or
or
push
sbb
and
inc
pop
push
sbb
nop
fld
retf
dec
adc
out
add
mov
cmps
cdq
add
outs
xor
or
push
push
xchg
stos
sbb
adc
test
xlat
xor
xchg
jo
cmps
mov
xlat
add
add
jne
push
and
(bad)
jo
mov
or
pop
int
xor
call
xor
xlat
clc
dec
fwait
loopne
or
xlat
stos
and
add
sub
call
cmps
xor
and
dec
mov
adc
mov
and
popa
jb
pop
rcl
or
mov
movaps
push
sbb
jl
(bad)
sar
(bad)
or
inc
ins
ror
aaa
loope
mov
push
sbb
add
jmp
add
add
inc
pop
fucomi
les
jb
mov
or
test
mov
(bad)
adc
pop
sub
mov
add
imul
adc
mov
int
adc
jns
jns
dec
adc
inc
mov
pop
aad
inc
in
xor
cmp
out
sub
ret
mov
add
fstp
xor
jge
sbb
add
aaa
clc
push
and
dec
das
gs
and
adc
or
test
pusha
sub
ja
iret
xchg
fsub
push
adc
pop
adc
jo
cmps
ror
hlt
mov
mov
ss
stos
fld
aas
add
pop
daa
int
inc
push
clc
outs
jecxz
jbe
and
add
xchg
fcomp
in
push
fs
push
ja
sti
or
dec
jne
retf
js
nop
clc
(bad)
mov
repz
repnz
clc
div
out
xor
push
fwait
sub
adc
mov
xor
popa
cmp
or
call
adc
sbb
push
test
pushf
int3
test
(bad)
mov
rcr
push
jb
jecxz
(bad)
xor
arpl
fwait
cmp
jns
xlat
adc
mov
out
cmp
inc
sahf
pushf
retf
pop
jge
xchg
daa
and
int
jle
stos
xchg
daa
daa
daa
iret
repz
xchg
xchg
xchg
ds
clc
leave
leave
leave
enter
jge
and
aas
or
mov
push
out
sbb
mov
and
jecxz
pop
sbb
mov
xchg
inc
cmp
dec
adc
adc
sbb
or
pushf
or
jae
add
adc
lahf
xor
xchg
sbb
sbb
inc
and
mov
adc
ins
push
movs
sub
rol
add
lds
adc
sbb
cmps
push
pop
jae
add
js
mov
or
adc
mov
adc
adc
mov
sbb
lds
push
or
push
xchg
sbb
cld
add
add
or
sub
cmp
test
ret
mov
add
xchg
inc
push
add
add
xchg
sbb
adc
or
inc
push
sub
jae
sbb
loopne
inc
nop
xchg
xchg
add
or
fdiv
sub
add
int3
dec
xor
push
lea
(bad)
add
adc
mov
xlat
sbb
imul
in
pop
bound
sar
sbb
test
push
dec
mov
inc
and
mov
imul
push
mov
ror
adc
adc
bound
sar
or
and
jns
adc
xchg
dec
or
sbb
arpl
jmp
dec
jmp
ret
shl
retf
cld
shl
inc
pusha
adc
xchg
stos
call
loop
pop
add
aaa
push
or
neg
push
and
loop
rol
enter
cmp
jl
movs
shl
sbb
lods
inc
xor
mov
sbb
jo
clts
ins
cmp
push
fnstsw
add
xchg
mov
or
adc
pop
jbe
add
add
adc
test
jno
lods
loopne
or
mov
clc
sbb
rol
adc
es
pop
xchg
test
push
call
pop
popa
jg
test
jbe
sbb
pop
xor
dec
xchg
push
or
aam
dec
test
pop
xor
push
inc
pavgb
fcom
jg
sbb
jo
jecxz
daa
(bad)
mov
jo
jne
clc
shl
pop
sbb
push
mov
jne
xchg
or
dec
and
add
push
inc
scas
push
mov
add
mov
add
xchg
jmp
push
add
pop
mov
mov
or
call
adc
fadd
fild
iret
adc
or
pop
jbe
xchg
add
loopne
sbb
mov
sbb
mov
mov
push
add
fcom
cmp
into
mov
xchg
into
iret
sbb
stc
inc
cmp
push
sub
sub
adc
pop
int
inc
inc
add
movs
or
scas
and
shl
pop
mov
mov
retf
add
cmps
bndstx
stos
add
adc
and
dec
les
add
imul
or
push
xchg
and
add
fcom
dec
das
fsub
adc
and
fs
cmc
and
movs
outs
sub
jo
jno
mov
add
js
imul
push
dec
ins
add
pop
cmp
and
(bad)
fisttp
es
mov
jo
inc
(bad)
js
icebp
mov
je
fmul
rcr
das
push
mov
sar
mov
xchg
adc
push
mov
pop
sbb
test
cmovo
push
cwde
push
cpuid
add
add
clts
add
pop
test
loopne
cvtdq2ps
inc
add
imul
add
add
push
xchg
mov
ja
test
adc
dec
mov
sbb
addr16
push
xchg
repnz
fs
pop
setae
jb
inc
xchg
fisub
xchg
cmp
cmp
inc
imul
in
and
pushf
pushf
shl
sub
jne
jno
dec
sar
fsubr
cmp
pop
(bad)
movhps
adc
adc
cld
xchg
push
push
xor
pop
cmp
test
mov
jno
icebp
out
loopne
dec
sub
sub
dec
sbb
xchg
arpl
mov
cli
jne
inc
or
mov
add
mov
or
add
loope
ins
push
jns
es
push
(bad)
test
sbb
add
adc
jae
bound
jecxz
inc
sbb
add
xchg
and
add
add
ror
add
adc
push
pusha
out
or
add
dec
or
out
sub
loopne
add
je
out
rol
pop
jno
sub
loopne
add
repnz
xor
out
adc
add
mov
jae
pusha
nop
sub
add
jae
add
add
inc
xchg
xchg
add
out
add
or
dec
adc
pop
pusha
shl
out
inc
add
inc
pop
nop
movs
or
sbb
push
pusha
xor
sub
adc
adc
mov
imul
lods
sbb
add
adc
sbb
pusha
sar
ror
sti
(bad)
out
add
add
rol
out
xchg
nop
add
dec
out
aam
test
or
push
retf
sub
push
pop
arpl
add
add
mov
jl
adc
sub
dec
pop
jecxz
add
adc
aam
add
inc
mov
dec
cwde
jg
sbb
or
(bad)
lds
iret
mov
sbb
(bad)
aad
iret
jmp
inc
mov
iret
mov
pusha
mov
adc
jmp
loope
add
sbb
mov
retf
and
xor
adc
adc
xchg
ins
cdq
cmp
fcomp
inc
mov
sub
sbb
pusha
mov
push
add
loop
arpl
inc
cmp
jecxz
sub
pop
pop
lods
sbb
jge
ret
xchg
xor
add
out
cmp
mov
cmps
mov
jg
xlat
pusha
movs
les
jo
out
inc
and
xchg
push
push
mov
sbb
stc
adc
daa
movs
cmc
test
sbb
pop
movs
in
mov
out
pop
stos
stos
shl
stos
shl
in
adc
ja
dec
inc
sub
aaa
pop
cmps
add
scas
pop
xor
mov
ja
mov
sub
adc
mov
leave
pop
add
or
push
iret
pop
test
push
ins
add
mov
in
add
test
inc
inc
add
and
xor
popf
mov
or
lea
outs
mov
mov
lahf
pop
les
loop
adc
imul
or
jo
sub
mov
popf
or
cmp
inc
pop
ins
adc
add
adc
add
add
arpl
pop
int
or
fwait
add
push
add
jmp
pop
adc
push
add
jmp
scas
dec
mov
das
stc
push
inc
inc
push
pop
dec
adc
out
add
std
hlt
push
dec
add
push
add
scas
sub
es
stos
pop
pop
xor
sub
cmp
add
add
out
or
mov
test
mov
arpl
add
ins
ds
add
add
mov
out
imul
push
loopne
test
call
push
add
add
outs
js
call
test
push
add
sbb
inc
test
outs
les
mov
mov
push
mov
push
cld
push
or
mov
pop
loopne
add
retf
loop
ret
imul
sub
lods
inc
pop
pop
(bad)
mov
cmp
jb
adc
add
add
js
push
mov
(bad)
mov
mov
pop
fs
leave
call
in
(bad)
call
jns
jb
rcr
test
cmp
pushf
pushf
pushf
pushf
jp
(bad)
dec
inc
sahf
xor
daa
and
lods
cmp
or
sar
push
ins
ja
pop
imul
inc
adc
fwait
add
adc
xchg
xor
add
pop
inc
bound
cmp
mov
or
mov
ret
xor
add
adc
xor
and
jo
inc
adc
pop
sbb
add
add
mov
push
mov
sbb
mov
sbb
jae
sbb
add
xchg
sbb
and
cmp
fwait
gs
add
pusha
adc
add
or
sbb
rcr
nop
call
or
sbb
xor
inc
ss
out
sbb
push
add
sbb
add
jae
and
jno
sbb
xor
ins
xchg
lods
fcmovne
add
sbb
add
mov
dec
sbb
cmp
inc
inc
mov
dec
inc
xor
sbb
imul
adc
jo
sbb
(bad)
push
shl
jge
pop
sbb
sti
mov
inc
sbb
jns
add
xchg
add
dec
dec
sbb
or
aas
movs
push
sbb
dec
fld
sub
inc
(bad)
push
mov
sbb
xor
sbb
xor
mov
add
dec
or
test
repnz
outs
sbb
add
xchg
xchg
pop
test
jo
add
add
sub
daa
(bad)
leave
adc
aas
cmp
add
xor
or
or
sub
dec
das
jb
ja
je
xor
fisubr
ret
rol
loope
xor
xor
add
push
aaa
add
arpl
mov
sub
add
inc
or
inc
push
jmp
add
scas
push
dec
mov
inc
add
jae
xor
out
cwde
loop
jb
unpckhps
jbe
int
add
call
popa
inc
mov
push
aaa
add
sbb
jno
xchg
pop
inc
mov
and
enter
in
pusha
outs
xor
std
stos
push
push
mov
lods
rol
mov
jmp
inc
pop
fcomp
jmp
add
push
push
lock
push
mov
or
mov
pop
jo
jmp
pop
xchg
push
aaa
mov
outs
or
push
arpl
dec
push
sbb
daa
neg
loop
sub
lds
(bad)
pop
xor
je
cmp
mov
inc
sub
inc
sub
call
mov
push
ins
mov
aas
push
inc
ds
inc
and
or
inc
add
jmp
enter
pop
mov
dec
je
mul
add
daa
aas
pop
aas
test
jmp
add
jo
or
push
out
(bad)
aas
(bad)
pusha
add
mov
inc
jno
adc
jns
push
sub
ja
push
and
call
or
pop
ror
pop
adc
pop
shl
sub
scas
add
mov
add
aad
pop
and
inc
or
or
add
jge
mov
inc
(bad)
push
dec
ins
loopne
or
inc
sbb
mov
int
jbe
mov
test
inc
cmp
rcr
rol
movs
or
sbb
inc
adc
cld
adc
das
inc
pop
xchg
add
push
test
xlat
je
xchg
stos
pop
(bad)
cmp
int3
aaa
add
out
ss
repnz
push
cmc
mov
dec
xor
das
push
pop
xchg
push
bound
or
loope
push
loopne
inc
loope
(bad)
pop
outs
sub
xchg
inc
pop
sub
aad
push
add
add
push
cmps
pop
add
in
inc
mov
sub
pop
pop
das
dec
add
sbb
sub
idiv
fistp
rcr
add
and
push
pop
pop
dec
sbb
pop
rol
adc
clc
or
icebp
int3
arpl
inc
cmps
inc
and
outs
sub
and
call
test
inc
test
adc
mov
sub
cmp
adc
xchg
push
or
inc
push
push
inc
and
je
shl
fdivr
xchg
test
inc
cmp
sar
or
mov
div
push
inc
imul
jo
jp
movs
mul
clc
push
dec
div
div
mov
xchg
add
mov
or
cmp
sub
shl
add
shl
mov
push
stos
cmp
stos
icebp
shr
add
retf
dec
stos
push
sbb
enter
shl
jmp
or
add
xor
es
add
fistp
or
bsr
dec
mov
fadd
push
(bad)
mov
icebp
xchg
push
mov
inc
mov
push
push
nop
adc
xor
lods
sub
sub
push
fnstenv
ins
jo
xor
fdivr
pop
add
and
enter
push
xor
loope
pop
je
cmps
mov
test
mov
lods
jge
adc
mov
push
jge
aad
inc
ror
pop
xor
cmps
rol
adc
sbb
dec
inc
sub
aas
outs
ins
add
test
iret
test
nop
shl
in
lods
adc
lds
fisttp
sahf
test
adc
pop
sub
nop
popf
inc
call
add
or
scas
cdq
out
mov
push
sub
jo
jo
dec
mov
pusha
cs
mov
xor
(bad)
je
je
sbb
pop
sub
stos
push
in
push
pop
adc
pop
jbe
push
sub
pop
mov
out
not
pop
(bad)
mov
push
fcom
cmps
movs
idiv
mov
add
jmp
outs
add
cmps
es
out
xchg
push
out
mov
jno
sub
stos
hlt
ss
lds
dec
push
sub
push
repz
or
or
(bad)
ret
popa
push
fincstp
addr16
mov
xlat
test
addr16
les
push
inc
ins
add
add
pop
add
lds
enter
mul
stc
das
nop
fld
add
outs
addr16
pop
in
pop
les
addr16
xchg
xchg
push
addr16
xchg
shl
mov
shl
mov
test
movs
je
inc
pop
sbb
xchg
arpl
mov
add
lock
ja
inc
(bad)
mov
cwde
adc
aaa
in
cs
mov
ror
mov
push
test
push
xor
inc
popa
(bad)
nop
movs
div
push
out
mov
or
push
in
push
push
fwait
aad
test
or
xor
cmp
adc
(bad)
cmp
shl
test
jmp
mov
and
mov
push
inc
inc
jb
ja
push
fs
pop
pop
dec
mov
dec
outs
inc
ja
in
push
jmp
leave
jo
xor
xor
xor
or
mov
adc
aaa
pop
push
sub
push
and
lea
psllq
leave
jns
xchg
daa
(bad)
cwde
in
push
cmp
cdq
ins
scas
sub
maxps
cmp
cmp
cmp
pop
sbb
in
test
ins
push
xchg
mov
mov
cmp
xchg
inc
in
call
push
sti
je
xor
out
arpl
jo
loopne
pop
mov
or
outs
and
fisubr
xchg
add
jg
adc
add
xor
push
mov
or
sub
or
sahf
pop
icebp
fwait
xor
mov
add
add
cmovl
inc
fs
inc
ret
sub
dec
rcr
into
imul
clc
mov
xchg
jl
push
cwde
push
pop
adc
fld
add
inc
mov
fild
ret
shl
push
inc
add
push
cmp
add
cmp
mov
mov
mov
push
movs
mov
adc
and
push
and
pop
ret
inc
stc
or
lock
xchg
out
xor
xor
inc
call
outs
jae
pop
mov
test
xchg
inc
jo
push
loopne
sub
xor
pusha
mov
test
test
add
sub
cmp
push
int
inc
and
xor
clc
std
sub
mov
and
out
rcl
add
pop
xor
add
cmp
daa
mov
int3
cmp
int
xchg
or
mov
push
and
xor
loopne
loope
stos
adc
sub
cmp
fidiv
dec
and
cmp
adc
bound
pop
inc
or
int3
dec
test
pop
dec
or
arpl
into
shl
test
das
inc
push
test
pop
sub
jb
imul
add
sub
adc
dec
in
pop
mov
enter
mov
pop
shr
fimul
pop
mov
xchg
das
or
mov
jmp
jae
cwde
sbb
xor
mov
addr16
mov
je
pop
xor
lds
add
xchg
push
rcr
fstp
and
ds
sbb
sahf
xchg
or
pop
mov
pushf
xchg
push
(bad)
lock
lds
inc
ret
push
test
inc
js
dec
hlt
push
mov
aam
aad
lods
xchg
pop
pop
xchg
cmps
add
dec
xchg
and
add
add
(bad)
or
add
jne
jg
hlt
daa
add
pop
rcr
push
and
push
repz
mov
xor
sub
push
outs
shl
or
cvtpi2ps
bound
inc
ins
xlat
cdq
lock
xor
cwde
and
ins
add
loope
add
adc
add
mov
aaa
pusha
jmp
mov
inc
mov
je
inc
aas
inc
ror
mov
pop
dec
das
push
dec
xchg
sub
out
div
cdq
mov
mov
cld
xchg
shr
(bad)
xor
dec
popa
outs
popa
or
push
(bad)
ja
clc
cdq
or
or
push
adc
add
cmp
adc
xor
ins
dec
frstor
xor
or
hlt
add
and
int
inc
jmp
jnp
sbb
int
cmps
outs
jnp
shl
loopne
adc
fisub
imul
mov
scas
add
adc
mov
(bad)
test
push
aas
ret
mov
aad
sub
xchg
add
aad
xchg
cmp
nop
cmps
xor
stos
add
jl
je
inc
jmp
mov
cmp
ins
pop
fild
push
(bad)
daa
xor
push
cmp
fstp
xchg
popf
push
out
sti
sbb
push
clc
dec
sub
jmp
inc
mov
xor
inc
mov
or
cmp
and
pop
push
aaa
push
call
and
cmps
dec
sbb
jnp
add
loopne
loope
mov
rep
icebp
jo
inc
rol
das
xlat
outs
test
pop
pop
popf
les
ss
add
loop
sbb
xchg
push
mov
mov
push
mov
pop
fimul
and
div
mov
push
and
sbb
hlt
test
lock
mov
arpl
mov
jmp
test
add
xor
sub
mov
mov
retf
or
or
add
add
test
push
jge
(bad)
push
out
push
cmp
dec
fisttp
inc
outs
push
mov
outs
psubusb
push
xchg
xchg
xchg
daa
daa
fisubr
xchg
sahf
ror
ficomp
mov
mov
fist
sahf
pushf
pushf
lahf
out
loopne
dec
dec
dec
dec
push
jnp
call
xor
fdiv
loop
xadd
mov
pop
pop
(bad)
fimul
mov
mov
push
mov
movs
push
mov
dec
lahf
dec
cmp
adc
push
pop
sbb
dec
or
adc
xor
jno
fwait
inc
daa
mov
test
add
cmp
cli
jno
popf
mov
fcom
or
sbb
jg
call
jg
inc
cmps
xchg
stos
inc
sbb
cmp
fstp
or
add
sub
dec
std
outs
loopne
sti
xchg
cmp
sub
cdq
ja
lea
adc
add
mov
nop
rol
jae
cmc
enter
xor
xchg
push
push
xchg
or
test
or
cmp
add
ror
mov
push
popa
arpl
mov
or
pop
dec
jae
imul
dec
imul
out
jno
sbb
add
dec
inc
test
add
imul
sub
(bad)
iret
add
inc
add
push
and
pop
lods
add
xchg
add
ss
pop
jmp
push
add
enter
push
add
bound
add
xchg
xor
pop
xor
cmp
sbb
xor
or
ja
and
jno
inc
jae
mov
and
loop
dec
popa
inc
mov
sbb
mov
cli
jo
jbe
adc
sar
dec
aaa
call
sbb
mov
adc
imul
mov
pop
inc
loopne
or
push
cwde
int3
sahf
adc
aaa
push
outs
xchg
sub
inc
stos
(bad)
jb
ins
rol
jno
inc
jmp
dec
or
adc
xor
or
xchg
or
or
pusha
xchg
dec
movs
test
inc
lahf
popf
cmps
mov
or
dec
add
test
sbb
jo
mov
sar
add
mov
push
xchg
inc
retf
sub
test
inc
mov
add
fimul
jmp
mov
mov
int3
or
add
call
fadd
add
js
int3
xor
add
or
and
push
adc
and
shl
stc
inc
ret
jmp
test
adc
call
mov
adc
jl
jmp
(bad)
pop
add
outs
imul
outs
or
add
and
outs
adc
xor
outs
(bad)
out
sbb
xor
out
jnp
inc
adc
sahf
icebp
add
popa
xchg
mov
or
fs
jmp
sub
adc
or
xor
inc
add
add
dec
ret
push
jl
sub
addr16
in
adc
push
and
jbe
rcl
xchg
gs
das
jmp
push
dec
iret
call
aaa
and
cmps
ret
inc
or
push
lods
jmp
and
ja
and
inc
cmp
add
dec
retf
icebp
push
add
inc
outs
out
or
xchg
sub
pop
push
sbb
jl
or
test
jmp
popf
shl
pop
call
aam
or
mov
jmp
pop
rol
ss
lock
pop
add
imul
jne
push
xchg
call
shl
pop
ins
and
jnp
aad
cdq
fucomip
shr
hlt
je
nop
call
add
xlat
sub
push
sbb
push
pop
retf
addr16
ror
jo
pop
adc
mov
sub
int3
call
inc
ja
add
aam
xchg
je
push
mov
mov
mov
les
icebp
or
add
out
shl
sub
stc
inc
jmp
ins
ror
add
jmp
das
pop
add
adc
ds
ret
fst
pop
add
xor
mul
rdmsr
jmp
pop
out
jno
pop
fld
add
push
cmp
dec
push
movs
inc
lods
and
adc
jle
ja
fmul
scas
dec
add
data16
cwde
push
push
outs
retf
test
(bad)
mov
dec
sub
inc
xor
pop
mov
sahf
inc
sub
or
hlt
xor
xor
jge
fisttp
fadd
xor
nop
mov
(bad)
pop
aas
sub
jns
mov
js
jo
add
add
push
sbb
js
sub
in
mov
pop
(bad)
(bad)
pop
dec
addr16
mov
mov
ret
push
push
mov
push
mov
in
(bad)
call
mov
mov
mov
mov
mov
pop
pop
ret
push
push
mov
pop
fdivr
stc
mov
mov
xor
es
mov
mov
ja
fistp
pop
pop
dec
cmp
jne
cmp
inc
xor
ret
(bad)
outs
div
test
test
je
cmp
je
add
mov
xor
outs
mov
cmp
ja
mov
jnp
outs
adc
jbe
push
add
je
push
jmp
pop
rol
cmp
je
ret
pop
ret
bound
pop
loopne
mul
test
jmp
push
mov
dec
fwait
xchg
sbb
lock
or
cdq
or
add
sub
jg
cwde
ret
sub
ror
loop
popa
ret
jne
mov
dec
fdivr
add
add
out
test
push
je
push
jb
bnd
loop
push
out
push
lea
sbb
andnps
add
call
stos
int
inc
mov
fcom
xchg
inc
or
ret
shl
call
mov
add
in
dec
or
push
inc
push
outs
in
lea
hlt
out
mov
inc
hlt
pop
ficomp
jnp
call
(bad)
cmp
js
add
outs
je
mov
cmp
add
outs
or
bound
in
loopne
mov
pop
xchg
enter
outs
test
sti
or
mov
jmp
repnz
add
jp
outs
dec
sbb
mov
push
dec
outs
add
mov
cmp
or
push
mov
jns
(bad)
jnp
and
addr16
mov
sbb
loopne
add
(bad)
aas
adc
cmp
adc
dec
jnp
sbb
lock
jge
outs
fs
gs
pusha
push
add
and
(bad)
ds
or
js
in
adc
adc
adc
add
xchg
fld
push
add
(bad)
daa
mov
iret
push
add
adc
mov
inc
jno
sbb
mov
imul
jmp
add
add
jne
push
jne
mov
in
movups
dec
sahf
pushf
pushf
pushf
mov
cli
aaa
hlt
jo
jb
aas
cmpps
ret
add
loop
or
sub
jae
data16
mov
cmp
dec
xchg
ror
in
rcl
jmp
sbb
inc
stc
inc
mul
and
add
xchg
ror
sub
dec
add
inc
pop
mov
dec
and
je
and
mov
jge
and
dec
add
in
or
ja
pop
mov
jno
or
add
xchg
sbb
inc
cmp
mov
sub
mov
adc
mov
add
cwde
mov
push
fisub
push
je
sub
fadd
call
ins
dec
mov
leave
push
add
sbb
inc
cdq
lea
add
mov
(bad)
cdq
movs
adc
pop
cmp
add
outs
pop
jmp
push
xor
push
popa
imul
mov
add
jb
outs
inc
mov
or
sub
out
add
sbb
add
call
add
js
arpl
mov
push
movs
inc
add
lods
(bad)
pop
pop
mov
adc
inc
adc
sub
cmp
sbb
into
gs
fimul
push
arpl
int
mov
pop
jl
mov
ror
or
nop
std
pushaw
ins
pop
outs
fild
cwde
ficom
pop
mov
sub
leave
lea
jbe
mov
rol
scas
xchg
ret
sub
pop
std
jnp
inc
add
and
push
sub
add
cmc
add
xor
mov
xchg
push
push
push
pop
push
stc
das
loop
mov
adc
pop
adc
xor
mov
sbb
das
fcomp
push
daa
or
cmp
push
add
adc
push
test
sbb
dec
bound
out
daa
stc
sub
dec
sub
bound
outs
xchg
pop
xor
mov
xchg
fadd
mov
and
shl
add
addr16
cwde
sub
push
push
inc
push
inc
cmp
mov
mov
add
sbb
jb
daa
or
fimul
icebp
stos
fsubr
or
push
add
sub
jae
lock
lods
dec
add
sti
out
inc
daa
sbb
or
xor
repz
and
repz
sub
fild
add
mov
add
adc
adc
push
(bad)
mov
pop
shr
push
add
aas
movs
mov
nop
inc
add
add
outs
xlat
sbb
les
xor
neg
(bad)
std
push
int3
es
das
adc
outs
prefetchnta
cmp
push
outs
sahf
jl
cs
push
add
dec
and
js
inc
addr16
fiadd
mov
pop
pop
mov
jp
push
adc
cmp
cmp
cmp
shl
push
aaa
rcl
or
sub
add
sub
sub
loopne
jns
xchg
add
arpl
push
jne
inc
lock
pop
shr
adc
mov
adc
jmp
pop
add
call
enter
nop
sub
jbe
push
push
sub
lods
pop
daa
out
inc
idiv
imul
mov
mov
and
mov
mov
xchg
push
out
xchg
pop
ror
xchg
xor
clc
xor
stos
mov
neg
imul
retf
push
sbb
ret
icebp
add
or
shl
(bad)
inc
sar
test
outs
inc
sub
test
mov
sbb
mov
clc
addr16
outs
xchg
ret
cld
addr16
call
imul
pop
add
push
adc
xlat
and
mov
mov
imul
xor
aaa
sahf
add
jbe
ins
mov
lods
pop
inc
rsqrtps
mov
or
xor
scas
mov
xchg
fs
or
sub
mov
sbb
or
nop
pop
stos
es
sub
add
add
outs
mov
mov
add
xchg
das
mov
sbb
loope
lahf
mov
pop
(bad)
push
inc
fild
scas
ret
mov
xor
inc
or
adc
or
mov
push
mov
imul
xchg
jecxz
push
jecxz
and
mov
adc
add
sbb
jg
jbe
clc
outs
and
and
push
sub
pop
(bad)
lock
in
adc
(bad)
adc
aam
fwait
mov
fld
add
test
and
mov
and
ret
and
ret
in
fs
shl
mov
add
pop
pop
imul
sub
aad
sub
into
mov
add
push
call
adc
mul
push
das
outs
push
mov
or
in
or
ins
repz
loop
out
push
out
and
dec
dec
aad
jns
ret
mov
xor
pop
fcom
adc
je
push
repz
stc
or
fild
fisttp
and
jmp
mov
outs
fcmovnb
jo
sbb
test
jecxz
retf
mov
mov
retf
adc
or
push
pusha
xchg
jp
in
es
das
cmps
push
outs
sbb
test
outs
ror
in
bnd
inc
sub
xor
adc
ins
in
or
add
ins
sbb
ins
xor
lods
and
jmp
pop
imul
std
mov
mov
pushf
or
ret
or
aaa
sti
push
fisubr
ins
lock
or
jecxz
sbb
mov
push
in
and
add
push
sub
push
adc
cmp
fwait
mov
fsub
inc
and
push
xor
pusha
lock
mov
cmp
imul
and
lods
loopne
ret
mul
rol
pop
ja
push
push
ret
es
hlt
push
jecxz
daa
mov
or
dec
outs
outs
movs
xor
fs
aam
arpl
iret
xor
jo
(bad)
test
push
pop
xor
sub
adc
fild
sub
addr16
bswap
enter
fcom
or
and
paddb
inc
sahf
aas
push
fs
cmp
and
orps
mov
pop
icebp
push
and
and
or
cmp
mov
inc
push
in
popa
inc
dec
cmp
std
or
inc
jnp
loop
inc
popa
and
je
jo
call
jno
cdq
jno
inc
mov
add
add
outs
aam
xchg
ret
mov
or
or
push
pop
mov
add
or
jae
test
and
js
inc
pusha
fwait
into
jo
add
inc
loope
sbb
retf
sbb
add
sub
gs
pushf
cmp
add
add
add
pop
inc
xchg
les
fild
repz
lock
cmp
adc
push
js
jmp
and
sub
pop
or
inc
arpl
push
adc
mov
jns
sub
add
(bad)
and
inc
adc
lock
in
inc
or
xchg
out
xor
test
shr
cmp
dec
pop
ret
push
mov
or
mul
xor
sbb
imul
out
xor
fxsave
movs
pop
add
sbb
pop
retf
sbb
xchg
addr16
adc
xor
mov
adc
sub
adc
add
popa
push
adc
es
mov
or
nop
add
rcl
dec
clc
shl
dec
sub
(bad)
aas
add
jae
or
push
fdivr
inc
cwde
cwde
fwait
ud0
inc
or
adc
and
inc
dec
or
dec
mov
dec
xor
aam
push
mov
push
inc
(bad)
shr
or
cvtpi2ps
cmp
and
push
sbb
inc
gs
jne
mov
add
je
ret
fadd
add
adc
in
add
xchg
dec
lods
push
mov
mov
retf
adc
cwde
fxch
push
(bad)
xor
scas
or
mov
adc
dec
jne
ror
imul
mov
or
scas
aas
or
nop
sbb
leave
and
inc
jnp
mov
pusha
ss
int
shl
(bad)
ja
(bad)
inc
sub
imul
mov
scas
mov
stos
add
mov
aas
or
cmc
imul
aam
cvttps2pi
pop
add
hlt
dec
xchg
add
cmps
xor
cmps
sbb
jns
jmp
mov
fistp
mov
add
fiadd
int3
push
push
hlt
es
push
xchg
mov
push
xchg
jge
adc
cmp
add
xor
(bad)
ret
daa
add
jecxz
or
push
xor
dec
pushf
or
repnz
cmp
xchg
movs
movs
or
cmovp
add
sbb
mov
sbb
ins
stos
or
pop
icebp
inc
pop
das
pushf
adc
sbb
or
sbb
pop
add
push
cmp
push
dec
sbb
lahf
sbb
and
xor
cs
sub
jo
sbb
push
xor
scas
mov
jbe
cmp
add
xchg
scas
imul
push
iret
pop
xchg
sbb
dec
in
or
or
(bad)
arpl
add
test
in
(bad)
sbb
ja
xor
xchg
ins
mov
cdq
les
inc
cs
sbb
leave
leave
jo
call
in
jbe
adc
jb
mov
cmp
sbb
aaa
pop
pushf
pushf
pushf
mov
enter
inc
sahf
adc
dec
or
daa
and
and
push
mov
mov
daa
sar
and
pop
pop
call
pop
mov
in
dec
inc
push
mov
push
mov
mov
push
push
mov
leave
lahf
dec
cmp
push
add
push
pop
sbb
adc
inc
mov
xchg
jno
push
lea
inc
or
xchg
add
xchg
lea
bsr
paddw
jae
fcom
add
push
ss
inc
jg
je
dec
mov
jg
enter
cdq
push
idiv
mov
dec
xor
bound
shl
add
push
nop
out
adc
bound
retf
push
adc
ror
or
dec
xchg
and
cmp
nop
jae
lea
sbb
enter
mov
xchg
xor
fdiv
or
js
adc
and
call
std
mov
add
popa
arpl
mov
add
xor
repz
and
aam
dec
jae
imul
inc
iret
pop
inc
mov
sti
sub
mov
or
add
inc
inc
imul
add
fimul
pop
push
or
or
push
js
(bad)
mov
jmp
ss
fisttp
cmc
add
dec
imul
mov
xchg
xchg
mul
xor
cmp
ret
daa
push
and
dec
gs
and
jno
inc
jae
mov
push
dec
popa
inc
mov
xor
push
nop
jecxz
dec
es
jo
call
aaa
adc
inc
gs
jns
push
adc
add
adc
dec
mov
mov
inc
loopne
dec
or
daa
mov
int3
sahf
adc
adc
sub
add
(bad)
jb
ds
pusha
(bad)
addr16
jmp
dec
or
les
pusha
adc
clc
and
push
cmp
adc
mov
test
or
mov
sbb
sbb
sbb
int3
shr
sbb
mov
mov
fcomp
mov
push
or
inc
rol
fadd
sub
imul
add
pop
xor
or
mov
xchg
fnstcw
or
push
in
popa
sub
sub
inc
mov
add
mov
add
icebp
add
mov
xchg
sbb
sub
out
sub
cmps
stc
inc
ret
sbb
scas
hlt
loopne
adc
lahf
adc
shl
sbb
ds
dec
idiv
icebp
fdiv
test
adc
cwde
fadd
loopne
push
jmp
pushf
jno
mov
cmps
mov
inc
repz
xor
cmp
pop
adc
push
pop
movs
shr
sahf
inc
mov
int3
pushf
stos
iret
inc
add
xor
cmp
or
push
es
in
xor
pop
and
ds
stos
mov
ja
push
pusha
movs
aam
cld
xchg
mov
(bad)
mov
sbb
stc
ror
daa
mov
sbb
inc
popf
add
mov
pop
mov
cmp
add
xor
sub
sub
ret
aaa
pop
or
xor
popf
in
add
sub
add
pusha
sub
sbb
adc
push
retf
leave
push
lods
inc
adc
jmp
(bad)
pop
lods
mov
cmps
dec
sti
lock
jle
push
out
lds
adc
cwde
add
fnstcw
pushf
inc
fs
dec
bound
dec
mov
ror
or
sub
jge
pop
mov
mov
push
retf
lds
nop
inc
add
ss
mov
mov
jo
push
push
scas
pop
mov
mov
sub
lods
sub
sub
inc
add
lds
out
add
xchg
pavgb
jo
je
into
xchg
pusha
or
add
push
jns
pop
and
shl
iret
jns
add
push
int
adc
cs
or
inc
xor
sub
sub
int3
das
scas
out
lea
pop
add
sub
inc
jne
mov
mov
sbb
inc
das
pop
and
scas
jne
jle
or
mov
cmp
push
push
add
inc
cmp
mov
aad
or
mov
test
pop
in
data16
rol
call
jno
pop
pop
pusha
adc
push
push
ins
bound
xor
jo
xchg
and
jae
fcomp
add
push
dec
add
popa
cs
mov
jbe
mov
das
shl
test
loop
pop
stos
ror
push
cmp
push
push
mov
push
das
dec
jb
test
add
jo
das
xor
mov
add
imul
or
loopne
das
xlat
test
std
pmaxsw
addr16
xor
xchg
push
aas
cmp
xlat
push
cs
xor
dec
jno
xchg
stc
cmp
in
in
xor
mov
xor
in
xor
jns
xor
cmp
cmp
(bad)
and
pop
inc
sahf
pushf
pushf
xchg
ficomp
aaa
aas
ret
dec
dec
dec
arpl
push
jno
punpckhwd
fwait
pop
enter
ror
dec
push
add
pop
adc
add
imul
cmp
loopne
out
or
and
adc
sbb
add
dec
push
loopne
test
hlt
(bad)
and
adc
sbb
add
ins
push
push
sbb
pop
loopne
(bad)
fld
and
test
rcl
and
add
adc
xchg
or
and
das
and
gs
and
cmp
mov
cs
and
push
adc
jmp
and
jno
add
adc
dec
cmp
sbb
(bad)
and
fadd
adc
push
push
and
sbb
stos
add
jae
add
add
adc
push
and
and
(bad)
jno
fild
add
dec
and
add
cmp
mov
push
adc
mov
adc
imul
ror
cmp
add
jge
loop
push
and
les
pushf
nop
(bad)
and
adc
or
adc
xchg
dec
or
cmp
arpl
popa
cmp
push
dec
popa
sub
push
xchg
pop
call
cs
or
(bad)
and
mov
and
add
mov
sbb
cmp
xchg
mov
inc
rcr
and
add
adc
add
test
dec
sbb
adc
inc
rol
mov
dec
(bad)
fist
fiadd
cmp
hlt
cmp
mov
cmp
mul
shr
out
push
sub
or
(bad)
push
add
rcl
sub
add
stos
and
inc
dec
sbb
push
xchg
stc
xchg
mov
idiv
sub
stos
dec
mov
jae
mov
or
inc
sti
add
sbb
dec
mov
and
ja
inc
mov
mov
sbb
inc
das
push
or
movs
adc
cmp
add
sub
ret
pop
pop
or
sti
jmp
or
xchg
or
fs
lea
push
push
push
add
mov
mov
xor
mov
jmp
aas
cmp
jo
dec
test
jl
inc
xor
and
bound
mov
mov
(bad)
fucomip
ror
push
test
je
test
je
mov
mov
and
(bad)
(bad)
jg
mov
inc
dec
jne
mov
pop
pop
pop
pop
pop
pop
ret
nop
push
mov
push
(bad)
mov
mov
mov
test
pop
test
inc
sub
mov
jmp
in
cdq
jge
xor
cmp
je
sub
sub
(bad)
jne
out
dec
xor
jmp
xor
sbb
outs
jmp
push
(bad)
sbb
jmp
(bad)
add
rcr
ret
xor
shl
lock
inc
mov
mov
fdiv
ror
aam
add
add
mov
jae
xor
mov
cmp
je
adc
(bad)
int3
fs
dec
add
ds
rol
xor
mov
push
cld
and
dec
packuswb
mov
push
xchg
repnz
push
test
jle
inc
ins
les
mov
mov
or
retf
add
(bad)
push
add
mov
in
push
pushf
cmp
jne
cmp
(bad)
pop
je
sub
xchg
cs
pop
mov
inc
jp
mov
(bad)
and
mov
pushf
xor
jo
or
jl
inc
js
mov
aaa
sbb
xor
call
dec
jne
pop
or
pop
test
cs
hlt
xchg
mov
xchg
xor
adc
aas
or
imul
push
mov
lea
push
data16
sbb
jle
or
sub
or
or
test
je
sub
jl
xor
inc
mov
push
outs
dec
sub
lock
and
clc
adc
mov
xchg
mov
jo
add
sar
ret
or
pop
pop
pop
not
push
lock
cli
jmp
jmp
fs
mov
inc
fs
div
push
or
xlat
dec
xor
loopne
sbb
xor
in
adc
nop
out
mov
cwde
clc
sub
adc
add
lods
loopne
sbb
test
pop
mov
dec
in
pop
call
inc
repz
call
enter
cmps
sti
mov
cmp
cmp
or
ins
fwait
movs
sbb
cmp
fidiv
out
mov
dec
inc
cmp
jl
sbb
shl
in
jb
or
jb
dec
adc
mov
sbb
push
inc
je
jl
mov
xor
js
cmp
lock
in
in
lock
aam
in
mov
jge
push
sbb
xor
xchg
push
cs
and
cmp
jne
leave
cmp
inc
push
push
mov
xor
sub
push
xor
and
cli
inc
mov
call
int3
jbe
mov
pop
inc
fcom
add
inc
pop
or
stos
or
xor
adc
adc
push
cwde
jmp
pop
mov
push
cdq
loopne
loopne
and
xchg
pushf
adc
xchg
jae
or
mov
jmp
push
or
and
sti
add
sbb
and
in
inc
setns
mov
aaa
xlat
xor
push
mov
dec
inc
or
push
je
xor
adc
hlt
add
inc
and
aad
and
mov
pop
cmp
and
inc
adc
jne
mov
xchg
out
clc
punpcklbw
add
into
loopne
add
add
out
mov
sahf
push
push
lahf
jmp
in
aaa
(bad)
jl
push
mov
push
sub
daa
lock
or
cmp
mov
daa
xor
add
in
add
test
call
pop
xor
jne
call
in
and
push
scas
cmp
mov
sbb
sub
lock
sbb
mov
dec
sbb
das
mov
rol
ins
pop
mov
mov
test
adc
push
inc
push
aam
lds
cld
push
lock
add
jnp
out
inc
adc
add
sbb
into
push
cmp
cld
clc
cmp
mov
in
mov
cmps
pop
ins
ja
mov
mov
push
jl
xor
push
loopne
pop
rcl
mov
add
xor
push
pop
cmp
add
sar
rol
cmp
rcr
add
xor
mov
pop
xor
sbb
push
dec
sbb
mov
or
daa
pop
add
or
aaa
cmp
cmp
push
add
cmp
cmp
lods
adc
icebp
rcl
inc
sbb
outs
icebp
aam
cmp
jmp
jne
push
sub
mov
jo
stos
sub
(bad)
dec
sub
xchg
sbb
popf
out
jmp
pop
cmc
in
or
fdivr
jnp
loopne
loope
xchg
inc
enter
mov
jnp
jnp
mov
xchg
add
adc
fdivr
add
add
dec
fmul
test
(bad)
(bad)
jmp
xchg
out
push
(bad)
rcl
nop
push
mov
adc
push
xor
sbb
push
clc
jmp
and
adc
sbb
out
cld
pop
adc
in
test
pushf
sub
mov
jge
adc
pop
rcl
call
sti
add
inc
adc
dec
fbld
and
jne
cmp
inc
pop
push
pop
inc
mov
push
inc
xchg
push
ret
mov
inc
hlt
mov
sar
sbb
mov
ficomp
jg
or
sub
mov
mov
(bad)
cmp
adc
cs
inc
jo
ins
cmps
shr
or
in
xor
xor
and
pop
into
and
add
inc
js
out
cmp
adc
or
mov
push
cmp
sub
add
mov
fs
or
pop
mov
(bad)
test
pop
out
dec
(bad)
pushf
push
sahf
sbb
les
daa
call
jl
clc
and
add
clc
jns
dec
cmp
jno
repz
sub
jmp
add
jp
clc
or
dec
ds
jbe
dec
jmp
push
fisub
jne
movs
clc
call
es
inc
mov
enter
lock
cmp
or
xchg
add
cld
sbb
add
add
repz
xor
lea
sbb
sub
inc
dec
shl
arpl
add
pop
hlt
movs
(bad)
pop
push
pop
mov
pop
pushf
push
add
cmp
in
sbb
jo
in
fsubr
lea
mov
icebp
xor
je
sbb
pop
idiv
mov
enter
shr
fcomp
jle
sub
add
dec
ss
mov
sbb
dec
lahf
jns
inc
jb
xor
cmp
into
and
test
sbb
mov
pop
sub
fst
adc
shr
test
cmp
lahf
ja
in
fs
push
daa
fild
in
push
adc
push
popa
add
loop
daa
inc
add
add
push
mul
ins
add
inc
sbb
(bad)
dec
fstp
movs
in
add
fisttp
loope
dec
mov
fadd
cmp
daa
xor
lock
test
pusha
push
mov
data16
or
mov
add
retf
and
std
lods
sub
sbb
sti
add
or
mov
sub
stc
add
test
pop
out
or
cmp
out
repnz
scas
jae
popa
xchg
pop
adc
push
dec
cmp
test
pop
adc
jmp
push
adc
loop
dec
das
xchg
pop
xor
inc
push
inc
loope
jg
pusha
ins
push
ret
pop
test
add
rcl
mov
adc
cmp
jg
dec
gs
inc
adc
loopne
add
nop
sub
push
movs
inc
xchg
retf
xchg
aas
lock
dec
jno
and
add
or
sbb
aas
pop
xor
les
ins
dec
jg
dec
pop
xchg
(bad)
push
jg
xlat
call
inc
push
mov
xchg
fisttp
(bad)
or
add
xor
in
bound
daa
mov
inc
inc
push
popf
sub
sbb
or
mov
pusha
imul
dec
sbb
add
inc
sub
ret
mov
lods
xchg
sub
test
add
loopne
mov
scas
stos
test
pop
outs
push
daa
loopne
push
mov
mov
add
adc
mov
scas
test
add
mov
cld
popaw
jne
je
cmp
and
pop
nop
test
push
out
pop
inc
add
mov
sub
inc
xchg
movs
retf
adc
pop
or
mov
mov
or
aaa
js
test
mov
nop
inc
int
xchg
add
or
rcr
bound
les
jo
pop
bound
pop
jl
call
xchg
mov
retf
push
pcmpeqb
add
daa
or
outs
popa
or
clc
pop
fstp
aaa
lock
or
mov
add
gs
pusha
lock
or
pop
adc
idiv
add
and
inc
add
int
mov
mov
movs
cmc
loopne
jo
push
inc
adc
bound
retf
ins
and
stos
or
pop
int
add
pop
mov
sbb
das
inc
mov
mov
adc
pop
push
inc
mov
mov
ret
lods
xor
push
pop
jnp
push
push
jo
fwait
das
mov
inc
inc
xchg
out
or
fs
dec
add
rcr
loopne
aam
aas
test
dec
fstp
jl
loopne
jbe
or
sub
adc
xor
sub
cmp
aad
rcr
adc
or
push
xchg
ins
cmp
or
push
loope
arpl
mov
push
ficom
push
addr16
pushf
mov
test
das
or
and
add
jbe
or
inc
loop
aas
push
cld
inc
xor
out
xor
push
fwait
daa
pushf
sahf
mov
cld
push
out
ret
add
xor
mov
lea
imul
call
sub
sbb
inc
mov
inc
add
xchg
pop
pop
jp
les
jecxz
pop
jp
pop
push
inc
imul
popf
(bad)
xor
in
adc
xchg
cmp
jns
fld
pop
ja
pushf
mov
rol
inc
sahf
pushf
rol
pop
push
pushf
daa
and
in
pop
sub
daa
js
in
xchg
xchg
xchg
xchg
pop
ins
xchg
mov
outs
fist
bsr
sbb
pop
sbb
fimul
xchg
and
adc
sub
add
mov
xor
sub
push
push
out
or
push
and
add
cmp
jno
and
add
mov
loop
pop
xor
dec
add
jo
xchg
dec
cmovns
cld
clc
add
addr16
les
push
int
sub
popa
jg
jg
out
sub
add
xor
fdivr
add
fs
or
sbb
push
popa
ins
jne
fdivp
or
push
lds
outs
repnz
ret
push
icebp
ins
retf
int3
add
pop
cmps
outs
lds
mov
cdq
ja
jecxz
xor
ja
test
ja
xchg
jb
jae
sub
cmp
enter
add
out
out
dec
and
inc
xchg
xchg
in
xchg
or
test
or
cmp
add
ror
mov
push
popa
arpl
mov
or
lock
dec
jae
imul
ret
adc
dec
imul
jo
inc
ins
mov
mov
add
shr
imul
push
sbb
(bad)
(bad)
cmp
inc
add
inc
push
or
rcl
mov
lds
stos
jmp
inc
inc
js
jo
push
add
add
or
xchg
sub
arpl
xchg
add
xchg
xor
fidiv
(bad)
in
lahf
sbb
adc
or
ja
loopne
or
and
jae
push
and
mov
mov
inc
dec
popa
and
rol
add
add
jo
sar
dec
rcr
mov
popa
imul
mov
loopne
dec
mov
inc
or
ret
or
inc
pop
adc
sub
adc
adc
xchg
ret
inc
(bad)
push
cwde
mov
enter
ins
or
xchg
jb
dec
or
adc
mov
pop
add
or
xchg
fwait
or
and
dec
sub
or
ins
test
cmp
push
retf
xor
ins
dec
popa
sub
test
pop
mov
mov
mov
fcomp
shl
xchg
or
dec
xor
cmp
lods
xchg
mov
or
adc
lock
mov
lahf
add
adc
fs
sbb
scas
xor
sub
addr16
add
sbb
jecxz
pop
push
xor
imul
add
dec
inc
rol
nop
(bad)
imul
movs
(bad)
pop
lock
arpl
ret
std
sbb
dec
add
ins
cmp
sbb
daa
mov
mov
jnp
mov
mov
pop
xor
pop
ror
repz
outs
arpl
fisub
test
jne
ins
mov
pop
mov
push
xor
mov
fsubrp
push
scas
pop
cmove
jb
ins
mov
data16
push
push
push
mov
jmp
push
xchg
mov
mov
xor
sbb
add
mov
stos
shl
sub
in
or
mov
rcl
and
xor
add
sbb
outs
mov
scas
add
mov
sbb
outs
ins
push
mov
push
xlat
scas
inc
stos
dec
sbb
scas
dec
stos
js
shl
pop
add
rol
es
xchg
dec
add
xlat
xor
mov
or
or
or
js
sub
test
push
mov
retf
mov
push
sbb
inc
repnz
pushf
dec
mov
mov
add
int
loop
dec
sbb
aas
(bad)
adc
lock
push
push
or
pop
xor
mov
and
scas
or
xchg
cmp
jne
mov
sub
sub
fild
int
sbb
xchg
aam
rcl
push
jb
jle
add
clc
mov
pop
lock
test
jl
inc
call
push
or
cmp
jne
mov
jmp
test
div
sti
(bad)
not
mov
adc
push
stos
adc
scas
add
push
push
or
add
jmp
push
or
adc
or
clc
jne
pop
or
test
mov
out
inc
mov
mov
idiv
mov
cmp
jne
mov
mov
mov
mov
cmp
or
out
add
mov
pop
int3
inc
pop
lock
ins
add
inc
fs
mov
sub
or
pop
push
adc
dec
mov
cmp
mov
addps
int3
pop
adc
out
pusha
movd
or
lea
lahf
xchg
adc
jnp
movs
pop
add
inc
imul
outs
pop
mov
sti
jne
sbb
mov
sbb
mov
add
jo
fst
push
scas
xchg
inc
or
je
add
fadd
out
or
cmps
hlt
cs
xchg
cmp
sbb
xor
adc
cmp
push
daa
mov
arpl
ins
int
add
jge
pop
int
pop
pop
xor
xor
dec
cmp
mov
popf
add
sub
dec
(bad)
jge
add
fisttp
jnp
(bad)
adc
mov
push
add
dec
and
cwde
sub
cs
int3
inc
or
push
int3
into
or
xlat
data16
adc
in
add
pop
cmp
push
add
and
or
imul
add
inc
add
sbb
mov
inc
sub
ins
jg
rcr
dec
mov
mov
sub
push
pusha
sbb
xchg
add
xor
adc
or
int
add
test
and
mov
sbb
stos
adc
push
push
stos
dec
repz
iret
lea
aad
sub
inc
dec
fs
xor
pop
push
neg
(bad)
aam
jo
clc
push
sbb
inc
das
adc
add
pop
push
cmps
add
mov
sbb
out
stos
sbb
shr
push
xchg
fadd
sub
and
push
fnsave
pop
fwait
push
adc
cli
cmp
mov
test
adc
daa
ins
pusha
add
cmp
dec
push
ins
mov
dec
pop
aaa
pop
mov
arpl
push
gs
mov
arpl
pop
add
fcomp
mov
add
jae
mov
sbb
xlat
mov
mov
in
inc
push
jo
or
cwde
jo
rcr
hlt
or
pusha
jb
adc
xchg
test
mov
xchg
sub
adc
pop
add
arpl
into
leave
ins
and
xchg
mov
ja
fdivr
leave
sub
jne
shld
in
loopne
jbe
stos
jb
repnz
inc
ja
lahf
cmp
jns
aam
js
mov
(bad)
and
mov
sahf
pushf
pushf
fdivr
and
and
dec
jle
add
daa
daa
daa
daa
bound
fdiv
sar
jmp
jbe
pop
cmps
and
add
dec
(bad)
cwde
es
aad
jno
pop
cmp
rol
sbb
mov
aam
jno
test
jnp
or
inc
xor
push
add
and
popf
adc
adc
or
inc
es
ins
push
jns
sbb
popf
cdq
lock
push
add
add
std
or
popf
aam
inc
mov
or
(bad)
leave
fwait
gs
push
push
popf
add
add
push
or
stos
add
popf
push
rcl
iret
popf
xor
popf
aam
rol
popf
sub
call
pusha
add
push
xor
stos
shl
mov
and
add
popf
xchg
inc
push
add
xchg
popf
and
rol
lods
fild
push
sub
popf
inc
or
dec
add
dec
xchg
test
push
popf
dec
push
or
ss
inc
fild
mov
add
or
lds
popf
push
shl
popf
ror
and
and
jns
add
or
sbb
bound
xor
or
out
and
mov
mov
loop
fcomp
xor
pop
xor
xor
xchg
popf
add
mov
jns
push
pop
cmp
lea
push
jge
push
or
adc
and
repnz
mov
push
shr
push
adc
push
or
sbb
cmp
mov
sar
fadd
rcl
jne
xor
aam
out
scas
add
mov
mov
cmps
std
cmp
test
jge
pop
cmp
pop
ret
nop
jno
cs
pop
lock
je
mov
jle
xor
cmp
sub
sbb
pop
shl
xor
(bad)
call
mov
push
pop
jg
push
and
ja
mov
ins
add
fdivr
adc
outs
les
add
ret
sbb
inc
imul
fiadd
sbb
pusha
(bad)
jbe
out
push
push
or
jp
xchg
pop
std
add
dec
push
xor
and
or
mov
mov
jg
xor
mov
push
outs
or
mov
cmps
cmp
daa
add
sub
lock
mov
add
arpl
xchg
mov
add
ss
and
sbb
in
inc
mov
in
ins
(bad)
out
inc
xlat
arpl
xchg
adc
add
xor
xchg
aad
retf
sub
push
xchg
push
pop
loop
and
jo
fld
fsubr
cli
push
pop
pusha
or
fild
inc
movs
cmp
out
js
mov
push
not
lods
data16
loope
sub
push
call
rol
(bad)
jo
rol
stos
pop
sub
aas
inc
pop
mov
xor
std
aam
out
pusha
or
dec
inc
sub
addr16
xchg
or
imul
dec
test
pop
in
add
lock
stos
inc
push
mov
or
cmps
psubb
add
add
nop
or
cmp
mov
and
or
lods
pop
shl
add
imul
fs
adc
outs
and
or
fwait
popf
test
js
inc
and
push
push
ja
push
inc
jno
mov
dec
xchg
and
cs
femms
test
push
dec
sub
daa
sbb
inc
or
fsub
and
add
daa
and
add
push
xor
daa
mov
pop
std
and
push
or
out
dec
aas
test
stos
mov
inc
add
mov
dec
cmps
inc
adc
js
and
ret
in
lock
add
push
(bad)
push
mov
or
leave
sub
adc
test
sbb
add
inc
ins
dec
dec
add
adc
or
lods
rol
ror
(bad)
fadd
sbb
push
push
std
ins
test
or
call
and
and
push
lock
mov
in
add
push
mov
mov
mov
jge
ror
jl
div
pop
and
dec
out
dec
push
xchg
repnz
push
adc
pop
xor
or
mov
pop
rol
test
cmp
inc
and
enter
pop
mov
and
pcmpeqd
(bad)
push
push
pop
mov
daa
daa
mov
adc
enter
(bad)
jge
adc
leave
arpl
fs
xchg
jb
repz
xor
inc
xchg
mov
cmc
cmp
sbb
xchg
ds
pushf
mov
rcr
xchg
pop
jg
sahf
pushf
pushf
mov
psubsw
jae
sbb
or
stos
fsubr
xor
fld
sub
jae
xchg
push
bsr
mov
sub
bound
sbb
cmp
and
inc
out
cmp
inc
xor
mov
xor
ja
cwde
(bad)
cmp
or
pusha
test
xchg
push
push
mov
ffree
or
inc
stos
sbb
cmp
mov
jae
add
and
cmp
cmp
ficom
sar
sub
cmp
add
pusha
mov
add
mov
jo
cmp
cmp
rcl
inc
cmp
or
cmp
retf
xor
cmp
jo
inc
cmp
push
add
pusha
nop
cmp
add
jae
adc
add
inc
xchg
xchg
adc
sbb
xchg
lods
loopne
mov
sbb
pop
mov
cmp
mov
cmp
cmp
lods
out
cmp
mov
mov
mov
test
sbb
imul
adc
pop
xor
mov
mov
lds
xor
jge
loopne
les
sti
mov
and
jns
add
cmp
movs
dec
cmp
jecxz
dec
or
test
lea
dec
inc
mov
cmp
stc
mov
mov
add
mov
add
xchg
test
xor
imul
pop
imul
sbb
aam
imul
mov
or
loope
add
xor
dec
push
inc
fwait
push
or
(bad)
xchg
mov
shr
add
mov
mov
or
mov
mov
imul
mov
fild
or
xchg
push
adc
not
or
movs
push
aas
fist
push
popa
mov
jl
cld
call
clc
inc
xor
mov
mov
adc
push
or
dec
jne
xor
or
pop
xor
add
inc
test
loopne
mov
push
or
call
adc
mov
ror
pop
inc
inc
and
mov
loopne
inc
xchg
cmps
push
push
fstp
xor
mov
movs
mov
cmp
je
push
push
mov
jp
add
jbe
xchg
pop
mov
push
cld
and
rcr
stos
push
or
rcr
inc
loopne
dec
cld
pop
push
outs
sub
fsub
sbb
or
ror
pop
cmp
in
add
mov
cmovg
jle
mov
adc
scas
pop
or
xor
xor
mov
sbb
and
hlt
or
cmp
sete
cmp
movs
sti
or
in
test
shl
or
adc
inc
not
add
pusha
mov
or
push
jbe
mov
(bad)
js
xor
in
aas
mov
inc
sbb
xchg
fdiv
sar
push
outs
rol
xchg
mov
mov
push
mov
enter
or
ins
into
mov
pusha
mov
(bad)
mov
call
or
pop
sbb
push
call
inc
xor
sbb
jge
jg
ror
jnp
stc
fdivr
inc
or
adc
sub
mov
retf
jmp
lock
out
pop
push
pop
das
shr
or
add
sub
or
imul
xchg
push
es
dec
dec
cmps
mov
test
adc
and
cmp
jne
cmp
pop
pop
jne
cmp
push
add
inc
sub
jmp
test
jne
mov
add
push
(bad)
mov
sbb
shr
jo
jmp
adc
sbb
jbe
ret
ret
leave
inc
or
lea
cmps
outs
sbb
test
ds
push
jg
test
jle
jg
les
add
mov
jae
push
adc
add
cmp
inc
test
je
sub
pop
lods
cmp
adc
leave
pop
and
call
mov
mov
(bad)
xor
mov
test
idiv
or
adc
sti
or
add
mov
enter
jl
lock
sub
enter
lea
or
push
mov
inc
mov
pop
dec
add
popa
xor
(bad)
mov
push
jno
adc
call
mov
repnz
fimul
lea
cld
jl
test
inc
add
pusha
jnp
imul
mov
jnp
or
mov
nop
popf
xchg
add
xor
add
outs
dec
in
lods
or
jbe
inc
adc
jo
pop
cmp
into
fadd
add
add
sbb
push
push
push
dec
jb
mov
call
iret
cmps
or
cli
inc
jle
mov
test
jns
add
sar
jmp
pop
push
mov
and
cwde
mov
mov
add
mov
add
idiv
jl
inc
xor
cmp
je
jo
inc
dec
jne
or
jl
jg
jle
test
loope
loopne
loopne
add
dec
cdq
cld
mov
jns
add
cmp
sub
sbb
repz
addr16
inc
sub
add
mov
sbb
(bad)
ds
push
push
inc
sar
stos
inc
xchg
cld
or
jne
sbb
inc
shr
loopne
add
xchg
aaa
repz
aaa
sti
ss
cmp
je
mov
bound
fistp
push
mov
pusha
lock
push
add
add
sub
mov
mov
or
xchg
std
imul
xchg
cli
imul
mov
mov
cmp
test
ss
push
pop
enter
jns
movs
test
je
cld
mov
jecxz
mov
sbb
push
imul
data16
sub
clc
sub
scas
bound
inc
sar
dec
mov
push
cmc
adc
sbb
in
cmp
push
add
or
inc
jle
mov
or
jmp
lock
adc
xor
pop
imul
shl
ret
cli
push
mov
cmp
pop
cmp
add
and
jle
sub
call
inc
push
adc
sbb
mov
into
jo
or
jmp
hlt
das
jg
cmp
jl
push
je
cmp
stos
adc
push
mov
push
rol
dec
cmp
cmp
jle
loopne
pusha
push
push
lock
adc
cmp
jl
cmp
cmp
in
xor
test
sbb
push
adc
popa
shl
add
push
unpckhps
cs
and
xor
and
and
outs
je
push
daa
push
or
popa
add
int3
add
mov
int
(bad)
out
lods
adc
les
stos
adc
cmp
std
ror
sbb
adc
rcl
cmp
fistp
enter
dec
push
add
daa
(bad)
push
dec
cld
in
inc
add
pusha
mov
cmp
or
adc
pop
(bad)
test
xor
das
mov
sar
cmp
mov
out
adc
or
lock
or
xchg
sbb
push
cmp
das
in
mov
mov
xchg
jmp
and
add
daa
mov
jmp
mov
dec
hlt
add
pop
add
cwde
sub
push
out
dec
xor
sahf
sub
and
mov
loope
lock
sbb
ss
xchg
mov
clc
sub
pop
icebp
mov
mov
jge
movzx
fidiv
jg
add
jmp
cmps
stc
cmp
pop
xchg
aad
movs
cli
stos
daa
call
or
dec
dec
jbe
adc
(bad)
cmp
cmps
ja
and
test
jmp
jne
pop
pusha
pop
retf
jle
or
pop
sbb
sti
jnp
push
inc
push
test
pop
sub
push
cmp
xchg
xchg
sbb
leave
out
leave
jne
outs
or
repz
mov
and
shr
sbb
iret
adc
or
or
inc
mov
jl
mov
sbb
mov
sub
rcl
cmp
mov
xor
lods
out
(bad)
xor
icebp
test
add
inc
xor
inc
jge
dec
or
rol
push
shr
aas
mov
adc
mov
and
je
je
sbb
jmp
pusha
cwde
push
push
sub
jg
aam
fwait
pusha
mov
test
jo
fs
js
fst
or
inc
in
outs
sbb
push
sti
or
or
fwait
imul
push
dec
and
int3
cwde
add
mov
mov
pop
and
or
jge
out
imul
xchg
mov
fs
mov
jmp
loopne
js
add
shl
nop
cmp
jne
mov
shl
cmp
retf
mov
inc
mov
adc
or
or
cmps
repz
mov
jecxz
xor
xchg
sub
or
loope
fild
(bad)
outs
in
(bad)
mov
retf
dec
shr
push
push
pop
(bad)
(bad)
ins
xchg
mov
movs
retf
out
(bad)
xlat
imul
sbb
fnsave
jg
mov
pop
mov
jg
and
mov
lea
loopne
sbb
sub
inc
mov
hlt
or
loope
dec
daa
add
(bad)
aam
lock
mov
mov
jo
fild
lea
(bad)
fdiv
loop
ins
adc
inc
mov
jns
cld
and
push
inc
into
in
inc
xchg
cmp
shl
aad
sar
cwde
mov
push
test
ds
repnz
mov
push
push
sub
je
or
cwd
cdq
ret
jmp
cs
nop
jbe
outs
dec
loope
loopne
cmc
loopne
aad
inc
lods
pushf
xchg
lea
fld
and
bndldx
jmp
cmp
jb
add
stos
dec
or
inc
xor
adc
psubb
pop
(bad)
jmp
jmp
call
mov
call
dec
sbb
inc
or
sbb
lea
bound
inc
or
xor
xchg
shl
(bad)
test
lahf
(bad)
in
pushf
add
xor
xor
jo
(bad)
push
adc
and
push
sbb
(bad)
jp
mov
(bad)
loope
cld
out
jecxz
push
or
inc
inc
in
push
(bad)
mov
out
push
cmp
shl
sbb
mov
adc
mov
imul
xor
add
inc
loope
pop
(bad)
fild
fadd
pop
scas
loope
lods
cdq
sbb
jge
in
ror
or
push
dec
xor
shl
mov
nop
arpl
xchg
repnz
lea
cwde
ficom
pop
xor
add
es
xor
mov
pop
movs
mov
cmps
popf
push
ja
js
pusha
add
push
lods
add
cmp
jle
shl
lds
or
xor
mov
adc
mov
or
out
popa
in
inc
movs
push
scas
imul
xor
lods
and
ss
cmps
jb
inc
push
mov
inc
jo
je
retf
mov
popf
and
test
(bad)
and
or
(bad)
dec
(bad)
imul
lahf
inc
sti
cmc
sub
or
je
lds
in
ja
pop
(bad)
jnp
fcmove
cmp
jge
mov
clc
xchg
jbe
mov
jg
push
xchg
add
test
jae
add
add
mov
ja
jbe
lahf
rol
test
or
pop
sar
(bad)
std
jg
jo
loop
lods
jns
dec
or
inc
add
dec
test
sub
icebp
out
ret
add
cmp
inc
sti
mov
sub
enter
and
in
rdpmc
pop
fwait
add
mov
add
add
out
je
adc
lods
push
push
stc
mov
js
and
mov
in
je
cmp
xlat
mov
das
adc
mov
in
aad
pop
and
cmp
push
mov
pop
pop
or
pop
aas
cmp
jae
jp
leave
je
stos
adc
fisttp
cmp
jecxz
call
mov
jae
fisub
xor
sbb
dec
inc
shr
push
popa
and
mov
mov
or
je
adc
je
sbb
je
cmp
or
ret
push
and
bt
jb
dec
shl
and
mov
and
add
ret
adc
push
inc
cmp
jne
inc
loopne
xor
bound
ret
mov
add
outs
jmp
mov
lock
jno
scas
ret
cld
je
add
call
add
fldcw
test
aad
mov
sti
add
je
stos
push
mov
jmp
shr
mov
cmp
mov
stos
jge
mov
inc
call
int
nop
inc
hlt
es
xor
push
mov
loopne
adc
sub
cvtdq2ps
in
mov
lea
sub
es
shr
mov
add
xor
outs
add
ins
push
jl
nop
clc
pusha
xchg
ss
movq
jge
and
mov
adc
xchg
add
mov
clc
(bad)
mov
jne
push
test
out
ja
lahf
ss
dec
gs
xor
jl
xor
dec
xchg
pop
imul
push
add
mov
pop
and
pushf
pop
xlat
sbb
sub
test
dec
add
rcl
int3
outs
add
or
fs
loope
js
hlt
jle
mov
cs
ficom
jmp
enter
add
or
ror
mov
sti
int3
test
jl
or
les
pop
rol
dec
mov
mov
scas
pop
pusha
inc
sar
loope
pusha
add
push
in
(bad)
fstp
cmp
sub
rcl
inc
test
or
in
adc
push
push
pop
and
sub
or
rol
aaa
cld
aas
ret
mov
call
rcl
stos
mov
dec
mov
shl
cmp
das
ror
sbb
dec
fcmovnu
test
and
cld
or
mov
ds
jmp
and
push
and
mov
inc
sti
stos
and
ds
inc
jb
sbb
add
out
xor
adc
push
push
sbb
jmp
add
push
mov
xor
cmp
add
aad
push
and
or
mov
dec
add
pop
mov
add
jns
jne
cld
sub
sar
sbb
add
mov
sub
mov
call
add
dec
xlat
shl
mov
leave
icebp
adc
je
pop
(bad)
lock
mov
cmp
push
popa
dec
mov
push
mov
inc
in
cmp
cmps
ret
fcomp
or
mov
ret
mov
in
or
fdiv
mov
mov
inc
dec
mov
xchg
push
mov
or
dec
add
xchg
cmp
and
call
inc
call
sub
neg
movs
loopne
dec
(bad)
inc
scas
add
outs
pop
cmp
jne
adc
cmp
sbb
jg
jl
rol
mov
dec
add
test
adc
pop
loop
push
jl
test
movs
sahf
ffreep
inc
or
mov
cmp
or
shl
lea
sbb
dec
sub
or
or
sbb
aam
mov
add
pop
and
jmp
lods
adc
jge
ins
loope
mov
jmp
pop
adc
js
jl
cmp
add
cmp
(bad)
push
pop
cli
jle
sbb
jg
es
push
and
(bad)
mov
push
or
clc
out
clc
out
addr16
loopne
std
or
jne
retf
adc
mov
retf
hlt
xor
jg
inc
or
dec
je
cmp
nop
pop
mov
or
jmp
aad
and
push
mov
mov
jle
in
daa
or
add
dec
rcl
scas
add
mov
pop
jp
adc
retf
xchg
pop
cmp
rcr
push
int3
out
add
js
pushf
push
add
cmp
loope
pop
inc
and
data16
dec
cli
stc
test
and
movs
push
cmps
movs
add
jecxz
es
pusha
shl
sub
pop
or
or
pop
fimul
aam
mov
xchg
mov
fcomp
jp
adc
mov
ds
cmp
cmp
dec
or
xchg
jp
mov
jmp
mov
add
cmp
xchg
xchg
jne
paddb
pop
and
sub
dec
gs
iret
adc
add
mov
add
push
mov
sti
pop
or
inc
pop
sub
jae
dec
adc
inc
fwait
inc
and
fadd
or
add
cmp
jne
sbb
fadd
js
cmp
jne
inc
inc
call
mov
ja
lahf
rcr
outs
pop
fcomp
add
or
pop
inc
or
pop
and
push
test
clc
push
inc
arpl
(bad)
mov
or
dec
add
(bad)
sub
mov
cmp
stos
push
iret
mov
dec
mov
adc
jmp
dec
mov
div
adc
iret
xchg
out
call
jne
xor
dec
push
push
mov
jmp
ftst
scas
ror
retf
jb
addr16
mov
jecxz
push
add
popf
jae
jae
js
inc
pop
push
sti
call
pop
push
mov
sub
jb
je
loopne
dec
je
mov
dec
pop
mov
inc
adc
test
sbb
ror
cmps
dec
mov
mov
sbb
fild
adc
mov
add
inc
sub
rol
cmp
ss
ja
div
cld
inc
or
pop
lea
push
fstp
movs
add
mov
inc
sbb
ror
ror
add
pop
mov
adc
fld
mov
pop
mov
sbb
or
cmp
fsub
pop
or
imul
inc
ret
iret
sub
push
ret
xor
cmps
mov
add
scas
mov
ins
xchg
inc
xchg
mov
mov
nop
push
scas
lods
sub
jge
lock
lea
adc
pop
push
enter
mov
inc
addr16
dec
cmps
(bad)
push
lods
pushf
mov
sub
push
cmp
mov
dec
dec
loope
outs
ins
adc
jg
pop
mov
popf
bound
push
imul
sbb
mov
mov
inc
les
mov
mov
lahf
loopne
(bad)
fs
mov
sbb
mov
adc
adc
cmp
sub
(bad)
test
sub
imul
call
loope
js
adc
mov
adc
iret
push
hlt
and
jne
adc
xor
and
ret
in
inc
lods
jo
add
pop
pop
daa
mov
stc
je
adc
dec
scas
adc
repz
push
and
shr
pop
pop
mov
out
and
push
repz
adc
rcl
ficomp
dec
pop
and
mov
cmp
(bad)
and
add
push
outs
nop
cmp
or
and
dec
and
pushf
xor
xchg
je
test
in
aad
sar
test
and
adc
lds
fdiv
pusha
int
cmp
cmp
arpl
lock
and
out
faddp
pop
hlt
push
in
mov
rcl
mov
sbb
and
les
pusha
mov
fs
aas
cdq
mov
pop
dec
call
sbb
xor
and
sub
inc
out
dec
xor
daa
push
jmp
not
dec
call
push
mov
pop
movs
ficomp
loope
rol
test
nop
sbb
add
xor
or
(bad)
jne
stos
fiadd
mov
add
push
shl
sub
(bad)
mov
sbb
data16
push
jno
xor
sbb
sub
xor
inc
mov
sbb
sub
in
or
inc
movs
dec
or
(bad)
dec
ret
pop
mov
xor
mov
jo
pop
mov
(bad)
jno
jl
adc
ror
ror
xchg
call
addr16
or
call
mov
fcomip
jmp
out
mov
inc
sti
adc
adc
sbb
mov
call
lds
adc
cmp
mov
pushf
adc
ja
popf
call
push
xchg
fmul
pop
daa
dec
cmp
ins
lea
les
enter
popf
popa
cmp
(bad)
inc
test
push
cmp
jne
in
ret
aad
jecxz
jge
and
les
and
adc
jne
dec
sub
loope
aam
mov
xor
or
ss
les
out
or
hlt
sub
ficom
loopne
ins
fst
je
push
mov
(bad)
push
lea
mov
pop
lea
add
mov
mov
push
pop
repnz
dec
push
inc
mov
jne
jl
out
(bad)
test
mov
inc
int3
mov
jge
push
mov
add
shl
test
in
(bad)
(bad)
cmp
imul
call
push
rcl
or
js
mov
ret
add
inc
ja
adc
hlt
xchg
add
jae
cmp
and
ja
ja
out
mov
sbb
mov
adc
xor
add
outs
fnstcw
and
pop
add
test
push
sbb
fstp
jbe
sbb
(bad)
bound
inc
ja
mov
or
sub
ret
or
test
adc
pusha
xor
ret
ss
add
add
rcr
add
mov
movs
adc
(bad)
cmp
dec
pushf
sub
fsubr
inc
call
jae
rol
add
iret
and
sub
out
aaa
scas
std
sub
jo
mov
jbe
cmc
cwde
adc
pop
or
mov
out
lahf
jo
add
fmul
fadd
dec
mov
movs
enter
daa
(bad)
sbb
or
ror
inc
call
test
xor
jne
push
cmp
in
loope
sub
into
fsubr
popa
fst
jg
test
sub
push
out
jmp
out
in
add
jecxz
call
xchg
fcomp
sbb
stos
ins
ins
imul
popw
add
inc
(bad)
retf
add
inc
ins
mov
mov
mov
and
dec
int
shl
pop
adc
inc
out
call
fdivr
push
cmp
out
scas
adc
jo
inc
fdiv
les
std
jl
push
mov
sbb
lahf
push
lea
mov
retf
xchg
xor
or
jnp
xor
pop
outs
int3
mov
enter
inc
in
sub
clc
mov
pusha
pop
sbb
sbb
call
clc
fcom
and
mov
push
cmps
adc
mov
sahf
xchg
pop
adc
add
repnz
push
addr16
dec
mov
add
dec
pushf
jne
cmps
inc
rcl
or
or
mov
cs
mul
aad
dec
into
dec
mov
cmp
inc
call
pavgb
mov
movs
les
fstp
add
retf
jmp
dec
mov
xchg
aam
adc
mov
inc
dec
jne
or
(bad)
loope
js
xchg
push
sbb
mov
dec
cmp
ror
pop
and
aas
or
xchg
push
push
push
push
retf
loopne
call
xor
ss
xchg
ds
imul
rcr
or
rcr
stos
and
fsubr
scas
cmp
adc
sbb
js
inc
cmp
test
or
daa
xor
imul
xchg
sbb
mov
pop
into
pop
pop
retf
das
pop
and
xor
pusha
adc
cmp
mov
iret
cmp
fcom
pop
mov
pusha
inc
mov
cmps
cmp
add
jmp
and
mov
int3
push
add
cs
dec
mov
pop
push
adc
call
push
test
mov
lods
sbb
sbb
addr16
push
xor
aaa
and
jno
xchg
xchg
bound
xchg
push
fstp
inc
xor
(bad)
adc
sub
sbb
fnstsw
repz
adc
xor
nop
popa
xor
and
and
push
mov
cmp
test
mov
xchg
and
mov
dec
mov
push
scas
imul
xchg
add
icebp
ret
add
clc
or
mov
pop
ins
movs
sbb
and
out
ret
and
and
mov
out
test
push
add
jb
or
outs
adc
lods
pop
lds
popa
sbb
jecxz
test
xchg
jg
add
call
test
dec
test
repz
sub
mov
inc
ja
xor
push
add
fwait
add
out
mov
jne
mov
cmps
aas
retf
or
dec
sub
push
clc
jnp
add
addr16
push
mov
loope
ret
jle
sbb
fsubr
or
sub
and
outs
push
pshufw
or
(bad)
iret
fst
mov
mov
iret
in
mov
fdiv
cmp
mov
add
test
or
dec
or
lea
(bad)
xchg
mov
mov
ja
and
inc
push
aad
ja
inc
aaa
sbb
mov
xchg
dec
xchg
push
add
shl
and
add
in
sub
pop
add
push
add
sbb
xor
mov
add
(bad)
push
jmp
mov
and
add
test
(bad)
fbstp
add
mov
sub
sar
test
sub
cmp
inc
and
popf
mov
fimul
pop
in
or
jne
jmp
hlt
cmp
in
ins
pop
jmp
pop
jmp
cmp
shl
fsubr
mov
sbb
xchg
add
sti
jne
or
pop
adc
fdivr
or
xchg
sub
adc
sub
and
loop
mov
sub
mov
and
xchg
add
inc
sbb
or
push
push
cmp
imul
imul
jl
jne
cmp
test
adc
sbb
jmp
ret
pusha
or
test
in
hlt
popa
test
xchg
lock
aas
test
cmc
test
les
lods
dec
and
cmp
inc
jo
mov
imul
add
and
or
pop
imul
add
shr
arpl
add
mov
fiadd
jb
jne
call
xor
mov
dec
(bad)
(bad)
jge
and
cld
ret
int3
push
jo
adc
add
mov
push
aaa
add
inc
add
jo
adc
lahf
es
jecxz
inc
cmp
add
push
ror
add
sbb
pop
pop
jae
push
jns
push
push
xor
pop
mov
inc
imul
fnstenv
repnz
cwde
cmps
or
adc
xor
dec
aaa
scas
cmps
in
jo
mov
add
or
mov
jne
stc
cld
(bad)
in
sbb
or
rol
iret
aad
xlat
mov
mov
rol
sub
sub
add
scas
nop
outs
sub
aaa
adc
loopne
mov
cs
and
dec
pop
shr
xor
jb
add
mov
inc
sub
and
inc
jmp
jle
xchg
adc
mov
les
mov
data16
dec
or
dec
pop
iret
in
arpl
iret
add
jae
xchg
push
es
adc
fstp
push
fimul
lea
inc
and
sbb
daa
sub
aas
push
cmp
imul
sbb
inc
ss
or
sbb
loope
jle
jl
loopne
add
cmp
sbb
out
and
mov
push
or
data16
jge
xchg
rcr
push
xchg
(bad)
ins
adc
jl
pop
(bad)
or
lods
outs
lea
and
add
push
xchg
cmp
es
js
add
push
add
call
and
or
jns
aaa
or
mov
test
cmp
aad
jae
mov
cmp
inc
outs
jl
mov
push
imul
jmp
sbb
mov
cld
adc
inc
sub
inc
fsub
pusha
adc
call
cs
or
pushf
xor
dec
inc
or
sub
ror
movs
adc
dec
add
jae
icebp
aad
rcr
mov
pop
and
jle
push
jmp
xor
add
inc
test
addr16
mov
push
cli
nop
int
shr
cmp
xor
shr
fcomp
int3
sar
mov
sub
jb
dec
je
jmp
jno
cs
adc
mov
push
cmp
mov
scas
popa
push
popf
mov
nop
(bad)
ror
jge
shl
mov
cmp
adc
cmp
mov
sbb
fs
adc
js
add
mov
inc
inc
ja
sbb
sub
dec
dec
dec
sbb
retf
push
and
mov
loope
xor
xchg
inc
jo
fs
ds
cwde
adc
mov
test
stos
lock
dec
test
in
dec
adc
stos
lock
jns
inc
dec
mov
or
mov
(bad)
sbb
dec
mov
icebp
adc
and
repz
mov
aaa
test
add
(bad)
xor
mov
imul
outs
jl
(bad)
sti
mov
adc
add
pop
in
pop
cdq
je
dec
xor
pop
icebp
pop
idiv
lock
sub
leave
add
add
cdq
adc
fimul
or
xor
fdivr
or
and
stos
je
rol
lds
mov
idiv
and
shr
jno
loopne
and
les
push
xlat
mov
add
mov
mov
pop
push
jle
or
mov
dec
add
push
xor
ret
xchg
and
inc
and
int3
fild
xchg
add
sahf
adc
cmp
dec
mov
add
push
shr
addr16
and
inc
sub
push
cmp
cmp
add
div
jmp
cld
imul
imul
xchg
jle
mov
mov
nop
xor
adc
pop
sub
add
jb
aam
cdq
ds
mov
xor
pop
and
xor
imul
pop
push
xor
cli
inc
jle
mov
test
dec
inc
push
stos
jp
add
stc
cmp
and
jmp
call
mov
inc
mov
test
jo
xchg
push
addr16
shr
sbb
jmp
pop
(bad)
sub
popf
xchg
jmp
lock
adc
and
mov
or
xchg
loop
loopne
test
push
mov
bound
test
cmp
add
cmovs
mov
cmp
test
sbb
pop
mov
addr16
push
shl
shl
outs
push
or
or
out
call
sub
fimul
push
adc
pop
mov
lahf
ins
sbb
jecxz
pop
test
data16
xor
popa
icebp
retf
mov
inc
hlt
shr
into
jmp
inc
int
adc
(bad)
test
and
jg
sub
and
cmp
test
xchg
scas
push
xor
jmp
cmp
jne
mov
or
or
mov
mov
shl
sbb
push
pop
push
fsubr
int
mov
pusha
hlt
jl
stos
pop
push
mov
mov
je
push
lea
or
pop
pop
pop
mov
ss
pop
jnp
add
test
nop
(bad)
xchg
movs
pop
ret
add
fmul
sub
inc
mov
aaa
(bad)
jbe
jb
pop
retf
or
and
pop
mov
jb
mov
xchg
test
ret
adc
sub
add
ror
dec
xor
cld
push
cmp
dec
mov
js
cmp
adc
daa
push
and
mov
inc
ror
ins
mov
out
inc
mov
pop
mov
dec
movs
movups
fistp
lock
cmp
mov
mov
test
mov
adc
xor
shr
cmp
cmp
adc
add
or
pop
adc
mov
push
add
inc
add
cmp
and
rol
push
pushf
inc
xchg
xchg
pop
adc
mov
mov
fcmovnb
fadd
jl
(bad)
ror
adc
xlat
ror
or
sbb
ins
mov
sub
cmp
xor
add
fisub
fidiv
and
pop
mov
movntps
and
jnp
lods
lods
mov
or
jecxz
cmps
fiadd
pusha
mov
fwait
mov
test
push
pop
inc
in
mov
pop
call
push
sbb
enter
ins
(bad)
ret
es
jecxz
ins
mov
push
lods
sbb
dec
fist
loopne
data16
out
in
lea
jae
add
in
mov
ja
or
(bad)
adc
mov
addr16
adc
inc
add
add
pushf
mov
pop
jp
sar
(bad)
jp
cmps
pop
cmp
jae
cmp
xor
cdq
push
push
lods
dec
(bad)
adc
rcl
push
or
movs
sub
sbb
jp
mov
cld
inc
out
mov
add
lock
loopne
std
loope
rcl
arpl
cmp
nop
adc
loop
inc
or
pusha
pop
jmp
not
rol
push
push
loope
test
shl
inc
stos
aad
push
and
inc
(bad)
in
retf
add
iret
add
adc
push
das
lds
adc
nop
and
cmp
jge
push
ret
jae
sub
outs
hlt
add
jns
pop
or
sub
shl
fidivr
ret
or
mov
sbb
in
data16
iret
dec
fiadd
add
jle
push
sub
pushf
add
(bad)
add
jge
loopne
add
jg
into
sbb
pop
not
xor
push
add
nop
or
fs
sub
div
rcl
ret
and
lds
sbb
mov
aam
and
mov
and
es
jg
cli
lea
add
push
xchg
cmp
ja
jg
addr16
pop
sbb
test
add
pushf
adc
ror
dec
or
leave
aad
(bad)
add
lock
enter
jmp
mov
scas
dec
dec
psubsw
pop
jmp
in
cdq
mov
stos
fsubrp
or
cmp
or
mov
sbb
shl
cdq
sub
data16
jmp
popa
jne
shl
in
add
mov
mov
or
push
hlt
popa
jmp
les
lock
ds
xor
enter
mov
adc
repz
and
sub
iret
xchg
add
push
scas
sbb
dec
mov
ret
lahf
(bad)
sbb
aam
ja
(bad)
cmp
adc
(bad)
scas
pmullw
xchg
in
out
(bad)
into
clc
or
(bad)
fcom
sti
push
xor
push
add
pop
pop
mov
xor
cmp
rcl
mov
ret
pop
fs
sbb
xor
das
call
xchg
and
inc
dec
retf
add
dec
sub
fadd
ins
sub
sahf
mov
cmp
adc
mov
push
pop
cmc
add
ja
into
jl
add
movzx
cwde
adc
fcmovnbe
test
push
fdivr
loopne
fsubr
jno
mov
push
jmp
inc
fld
not
aam
mov
and
cmp
fcmovu
or
jl
and
jne
mov
add
push
add
mov
jle
add
jne
lods
or
mov
inc
dec
xor
mov
call
in
inc
lods
in
push
adc
mov
movs
add
out
push
loope
mov
push
xlat
mov
adc
inc
shl
xchg
loopne
pop
adc
retf
mov
loop
fdivr
jo
or
xchg
jne
ja
jbe
fist
data16
xor
pop
add
cmps
push
out
retf
jle
loop
push
cmp
sbb
mov
jp
push
ds
sub
cld
and
adc
hlt
add
jo
adc
mov
test
aaa
imul
and
leave
jl
sbb
sub
test
jle
cmp
jge
mov
scas
add
outs
pop
dec
add
sahf
idiv
jo
mov
sahf
mov
dec
mov
adc
mov
sar
mov
lock
cmp
mov
dec
fs
push
dec
enter
shl
clc
xchg
(bad)
push
ror
adc
mov
pop
data16
jb
je
dec
je
test
push
add
(bad)
or
adc
xor
dec
cdq
test
push
push
ret
add
xchg
cmc
ror
xor
lahf
mov
or
mov
dec
popf
ins
fld
call
and
loopne
jo
add
cmps
add
mov
push
push
adc
dec
dec
push
xor
retf
(bad)
or
jmp
jg
push
dec
jno
and
pop
xchg
push
xor
aam
sub
xor
jp
mov
ds
adc
adc
cmp
pop
test
cmp
jge
movs
fwait
mov
test
cmp
jge
loop
dec
adc
push
add
ret
fsubp
stos
pop
pop
and
adc
(bad)
test
push
adc
ss
jp
(bad)
xchg
add
cdq
add
push
ss
sub
or
js
pop
add
les
lods
cmp
jb
xor
loope
xor
sub
pop
daa
shl
fidivr
fcmovnu
shl
(bad)
out
jle
cmp
jle
or
jle
mov
cmps
mov
in
add
ror
xchg
(bad)
adc
repnz
pop
mov
cmp
pop
push
inc
ret
sub
mov
and
hlt
neg
or
movs
sbb
clc
int
enter
jmp
cs
xchg
dec
lea
daa
sti
push
push
inc
ins
or
imul
call
dec
pop
push
lea
sbb
inc
sbb
inc
cmp
movs
adc
mov
pop
fidiv
or
ss
and
mov
mov
mov
shl
daa
mov
add
xchg
cmp
div
jmp
popf
push
push
push
aaa
or
dec
and
sbb
daa
mov
mov
ds
xchg
add
pop
jae
pop
movs
add
aam
popf
test
dec
pusha
test
dec
sbb
mov
mov
repz
inc
push
xchg
clc
pop
push
push
stc
push
outs
adc
cmc
xchg
adc
cmp
ja
loopne
shl
in
jmp
lock
pop
push
jg
dec
repz
inc
mov
push
cs
lea
adc
(bad)
pop
cdq
stc
inc
test
aad
fmul
or
sub
add
aaa
add
push
clc
adc
inc
stc
fisttp
lock
sbb
or
push
jbe
out
shl
push
sbb
push
xchg
js
int3
out
sahf
out
jnp
cmp
std
repz
xor
ja
clc
add
dec
add
add
imul
repnz
mov
ret
fbstp
int3
nop
mov
jo
inc
dec
outs
jae
popa
outs
arpl
add
dec
add
std
fcom
outs
outs
je
push
and
or
jb
jo
outs
sub
cmp
popa
ins
test
add
int3
add
hlt
call
loopne
ret
dec
add
or
sti
out
lahf
inc
imul
or
push
inc
jb
popa
je
fisttp
pop
pop
push
add
sbb
or
add
gs
cwd
xor
cwde
or
or
or
add
adc
or
push
mov
push
fadd
add
add
adc
imul
outs
bound
push
gs
sbb
push
add
add
xor
push
jae
ins
jbe
pop
add
loopne
dec
add
in
in
dec
imul
test
out
pop
comiss
pop
push
add
push
jns
gs
cs
neg
jae
(bad)
test
add
out
fwait
cld
pop
cwde
(bad)
ja
push
loop
add
shr
sub
xor
je
cmp
inc
jecxz
xor
clc
push
pop
lods
add
or
lahf
push
out
std
mov
xor
adc
push
inc
jb
popa
jns
dec
xor
xchg
jnp
cmps
add
jmp
sbb
push
push
adc
cmp
aam
loop
fldenv
pusha
ins
pop
jl
mov
leave
fisub
push
inc
outs
jne
or
jo
pop
je
jb
sub
(bad)
mov
fld
sbb
shl
pop
pop
out
pop
shr
push
fmul
add
imul
ins
pusha
cli
arpl
push
ret
into
add
adc
add
or
add
jo
test
inc
jne
xor
push
cs
push
sbb
ss
xchg
mov
jg
push
popa
pop
jno
out
loop
dec
test
dec
ret
shr
cmps
bound
stc
daa
movs
pop
inc
sub
xchg
in
movs
rcl
lock
xor
pop
int
pop
out
pop
xor
mov
outs
add
dec
ds
pop
inc
sub
add
loop
pop
xor
and
neg
sub
push
stos
cs
push
outs
push
das
leave
mov
retf
adc
add
xor
jo
push
or
mov
jae
adc
lds
sbb
push
popaw
jne
je
aas
add
jae
or
test
or
inc
adc
dec
aad
(bad)
fld
lods
inc
fs
popa
test
dec
bound
or
push
inc
sti
stos
ror
mov
or
push
aad
in
sbb
and
neg
mov
mov
inc
daa
cmps
ins
jae
scas
sbb
clc
push
stc
adc
frstor
and
inc
push
jle
lahf
int3
jbe
out
mov
ror
jb
into
push
mov
and
sub
dec
popa
outs
popa
cmp
mov
addr16
loop
ret
pop
je
xor
movs
pop
ins
adc
int
mov
dec
test
push
adc
inc
pusha
inc
mov
and
pop
and
add
jnp
das
rcl
int
rol
hlt
ins
shl
and
adc
imul
mov
scas
add
adc
retf
add
add
aaa
inc
mov
mov
push
add
jne
lahf
sub
sbb
sub
arpl
rcr
jae
adc
out
neg
call
sbb
inc
das
pop
push
inc
shl
je
out
clc
and
push
or
test
mov
cmps
cmp
lock
xchg
loope
out
adc
out
mov
xor
add
cdq
shl
ins
or
or
inc
shld
fsubr
push
sub
pop
pop
jo
xchg
out
ret
and
cld
push
jne
dec
push
popa
imul
pop
fnstenv
xchg
fcom
dec
test
push
popa
std
das
or
push
and
cli
outs
out
xor
call
pop
sub
xchg
push
push
push
sbb
test
mov
push
sbb
ret
ret
shl
outs
sub
jbe
sub
jecxz
retf
dec
push
push
dec
add
push
push
push
sub
test
dec
aaa
push
cmp
jno
cwde
push
or
scas
inc
fs
inc
mov
leave
leave
int3
cmp
or
cmp
add
repnz
dec
jge
cmp
jns
(bad)
xor
jle
pushf
pushf
mov
add
xchg
mov
sahf
pushf
pushf
(bad)
and
dec
dec
xchg
fistp
push
inc
popa
daa
daa
daa
fs
in
outs
(bad)
cmp
pushf
pop
leave
push
mov
loope
xchg
fimul
push
rol
push
fwait
es
cdq
push
xor
xor
cmp
dec
out
dec
movs
arpl
cmp
pop
or
inc
add
mov
shl
cs
mov
or
jae
pop
sub
xor
adc
mov
xchg
xchg
gs
cmovns
(bad)
aaa
dec
add
addr16
push
adc
or
inc
or
popa
jg
jg
dec
push
lods
add
xor
inc
inc
fs
leave
push
mov
mov
mov
and
bound
hlt
sub
hlt
adc
push
stc
ins
out
cmp
add
pusha
outs
or
mov
mov
mov
stos
shr
ja
test
add
jae
jo
nop
add
enter
push
shl
add
sub
or
fs
or
push
in
sbb
dec
xchg
and
das
leave
fwait
mov
mov
inc
inc
jmp
pop
xor
inc
or
pop
dec
jae
push
cmps
pop
imul
push
test
aaa
add
mov
ins
xor
bound
ffreep
or
mov
xor
mov
and
xchg
xchg
inc
sbb
lea
out
sub
push
mov
mov
xchg
js
jmp
loopne
pop
inc
js
jo
gs
dec
mov
xchg
sub
arpl
ficom
xchg
pop
xor
in
xchg
or
sbb
or
ja
xchg
inc
inc
jae
mul
dec
popa
inc
add
outs
sub
add
es
aad
add
dec
imul
sub
adc
mov
and
mov
mov
and
imul
push
popa
push
dec
or
mov
xor
or
lock
push
outs
xchg
popa
mov
inc
(bad)
or
and
and
cmp
inc
call
test
repz
and
xor
xchg
or
xchg
dec
add
nop
dec
test
(bad)
dec
push
ins
test
cmp
sub
or
aas
jno
dec
or
mov
mov
pushf
das
aad
ficomp
mov
sub
and
test
inc
retf
cmp
adc
adc
sbb
and
fnstsw
(bad)
repnz
cmps
add
pushf
mov
mov
or
or
adc
sub
sub
imul
repnz
push
jmp
push
push
or
imul
add
mov
jo
out
adc
xor
ret
test
pop
ret
pusha
xor
add
or
daa
loope
daa
or
jp
movs
xchg
bswap
push
dec
push
mov
xor
repz
push
or
imul
mov
mov
fsubr
mov
dec
clc
mov
(bad)
jge
je
ficomp
imul
push
es
cwde
xchg
push
push
push
inc
fs
data16
sbb
ins
xor
shl
pop
xor
add
inc
call
jecxz
jbe
push
or
addr16
or
icebp
xor
add
mov
sbb
cmps
mov
je
scas
dec
dec
or
ins
push
nop
arpl
mov
add
mov
xchg
cmp
push
adc
mov
pop
inc
cmp
add
aad
push
or
mov
sub
mov
mov
mov
inc
adc
push
or
adc
or
xchg
xchg
adc
jo
dec
(bad)
dec
jmp
mov
xor
mov
inc
adc
jg
shl
out
jmp
add
movzx
movs
ficomp
cwde
push
sub
jne
or
scas
std
sbb
sub
sar
scas
adc
mov
lea
(bad)
push
(bad)
addr16
sbb
inc
sbb
jg
xchg
js
add
outs
adc
mov
mov
inc
or
cs
push
in
pop
xor
mov
add
add
call
xchg
loopne
sub
iret
add
mov
mov
mov
add
push
inc
fsub
aaa
cli
(bad)
pop
adc
jl
test
jne
sub
mov
inc
add
dec
jo
xchg
mov
adc
popa
inc
stc
lock
cmp
pop
mov
xor
fs
(bad)
nop
adc
xchg
adc
test
je
fcomp
cmp
hlt
jno
fmul
jns
push
sti
ds
add
push
rol
jae
push
sub
sar
xor
test
shr
mov
xor
hlt
popa
sub
mov
inc
xor
fbld
retf
shl
mov
jmp
lods
cld
ja
(bad)
or
add
adc
ins
fld
add
push
cmp
mov
aas
loopne
and
or
sub
add
test
hlt
xchg
nop
xor
xor
movs
stos
and
inc
clc
dec
mov
sub
mov
out
icebp
add
dec
dec
add
adc
fisttp
add
das
inc
inc
xchg
pusha
push
out
xor
and
sbb
or
mov
and
xchg
and
jl
inc
push
sbb
mov
outs
cmp
je
xchg
mov
inc
cs
push
or
aas
or
xchg
and
mov
outs
pop
(bad)
or
adc
aaa
adc
ja
pusha
inc
and
xor
or
call
mov
mov
mov
dec
mov
mov
dec
not
cmp
movs
cmp
div
jnp
ins
xor
mov
adc
outs
les
mov
maxps
(bad)
mov
sub
test
jne
cmp
not
imul
push
add
fisttp
inc
mov
call
jmp
mov
or
sub
inc
jmp
sbb
(bad)
in
(bad)
hlt
pop
ror
push
push
sbb
loop
cmp
jl
nop
mov
or
loop
or
jl
inc
jle
pop
jge
fmul
dec
push
ds
adc
push
(bad)
(bad)
mov
addr16
inc
jne
mov
sub
mov
cmp
mov
in
(bad)
inc
jmp
push
mov
cmp
mov
cli
adc
mov
mov
xchg
or
push
and
movs
cmp
jl
push
pop
mov
loope
lock
std
in
mov
or
xchg
jne
test
jne
mov
sub
lahf
loop
push
adc
cmp
sbb
lock
rcl
dec
jmp
push
div
rol
sbb
or
mov
call
xchg
push
add
and
push
pop
or
mov
sub
dec
mov
pop
(bad)
mov
mov
inc
add
adc
nop
xlat
popf
idiv
test
push
loope
pushf
pusha
jno
test
and
xor
or
ret
mov
add
(bad)
outs
xchg
fmul
and
adc
or
mov
in
in
pop
pop
outs
push
test
inc
pop
or
or
mov
(bad)
aas
sbb
js
outs
dec
fcom
sub
je
add
cdq
push
mov
sar
sahf
cld
and
fstp
xchg
jae
cmp
ins
les
and
sar
daa
mov
fdiv
dec
in
sub
mov
xchg
clc
test
ror
cmp
xchg
push
or
push
add
xchg
adc
loope
into
add
xchg
sbb
or
push
push
adc
push
mov
jo
adc
add
scas
iret
ja
sbb
pusha
mov
jmp
stos
cmp
sti
sbb
dec
mov
mov
rol
ror
in
addr16
or
(bad)
mov
mov
rcl
rcr
push
clc
dec
pop
push
arpl
and
scas
or
pop
pop
ja
push
shl
adc
xchg
pusha
xor
data16
pop
mov
adc
push
mov
js
xchg
add
or
push
cmp
pusha
movzx
xor
mov
mov
inc
jne
pusha
jnp
cs
mov
shr
popa
fbstp
cmp
xchg
inc
not
push
outs
outs
(bad)
int3
push
rol
sahf
inc
jmp
(bad)
and
cmp
jno
imul
cmp
xor
sbb
push
es
jecxz
lea
ins
(bad)
test
add
cmp
mov
(bad)
outs
outs
xchg
cli
cmp
or
into
ret
cmp
push
cdq
fld
jnp
push
dec
xor
or
out
push
sub
push
sub
push
pop
push
add
push
add
mov
jne
test
cmp
rol
nop
pop
ja
push
inc
outs
sar
xchg
js
scas
pop
dec
fadd
fiadd
xor
xor
jl
mov
jbe
pop
sub
jmp
jb
les
mov
clc
and
mov
loope
call
int3
jp
or
inc
adc
jb
push
xchg
mov
jl
push
js
or
bound
pop
or
mov
cmp
inc
push
js
or
jg
sbb
lock
scas
mov
pop
or
mov
inc
(bad)
in
cmp
add
push
push
out
ja
test
push
and
fs
adc
pop
pop
mov
adc
leave
data16
scas
cli
sete
jo
dec
mov
push
inc
xor
mov
es
pop
or
in
and
ja
into
xor
fistp
mov
mov
or
jmp
adc
adc
mov
into
cmp
xor
mov
loop
sub
in
push
mov
push
test
sar
mov
mov
rcl
jae
(bad)
push
dec
jne
jnp
nop
nop
cmp
pushf
(bad)
push
jne
sub
mov
addr16
or
sbb
into
das
xor
(bad)
sub
inc
xchg
loopne
sub
iret
pop
push
(bad)
sub
les
call
push
mov
mov
mov
cmp
clc
add
ror
mov
enter
sub
call
mov
call
push
retf
ins
jl
div
pop
dec
add
jmp
sti
je
lds
push
mov
or
adc
aam
pop
or
sbb
fiadd
imul
fimul
dec
rol
jmp
inc
jl
add
in
mov
loopne
rcl
pusha
cmp
jo
jmp
push
das
inc
scas
shl
scas
sub
sbb
fstp
int
add
or
jo
xor
idiv
fisttp
call
scas
movs
jmp
stos
inc
jle
in
mov
das
mov
inc
push
mov
shr
inc
mov
inc
stos
mov
cmp
dec
pop
add
retf
add
sub
test
adc
rcl
and
in
mov
les
in
shl
out
push
test
es
add
sbb
fsubr
xchg
push
in
inc
ja
mov
pop
inc
cmp
and
test
rcl
mov
sbb
and
jo
(bad)
mul
or
movzx
adc
and
ret
mov
test
or
icebp
mov
add
iret
add
lods
dec
lock
cmps
shr
adc
add
je
dec
je
pop
adc
cmps
pop
(bad)
pop
cwde
and
adc
shl
mov
shl
movs
or
or
not
and
jmp
xor
or
push
push
movs
gs
jmp
mov
cmp
jle
cwde
adc
dec
add
es
dec
(bad)
and
mov
lods
shr
aas
fsub
out
pop
jge
mov
xchg
sub
stos
(bad)
repz
stc
lahf
xor
jmp
jo
fisttp
stos
clc
test
je
(bad)
mov
(bad)
fsubrp
aas
inc
push
push
inc
sub
sub
sar
in
sbb
cmps
cmp
jmp
jge
pop
test
dec
dec
jne
xchg
mov
sub
dec
ss
or
int
mov
dec
(bad)
or
call
pushf
cmp
not
data16
mov
inc
jmp
jne
mov
or
xchg
jmp
stos
add
fcmovnbe
pop
sar
enter
pusha
loopne
lods
pop
ret
jno
xchg
push
xor
sti
add
adc
shl
push
and
cmp
push
xchg
add
mov
mov
mov
in
sub
inc
pop
dec
inc
add
sub
mov
sbb
jnp
es
push
je
push
or
push
cmp
cli
jno
call
push
xor
dec
pop
mov
dec
sbb
adc
add
jmp
add
inc
or
aam
ror
mov
jmp
das
xchg
les
jl
mov
jb
push
fs
(bad)
jmp
add
sbb
mov
adc
sub
mov
sbb
push
sbb
mov
lock
mov
sbb
je
pop
lods
inc
mov
mov
pop
or
jne
in
inc
sub
jo
movs
sub
and
(bad)
dec
jo
sub
add
xor
sub
xchg
(bad)
adc
xchg
push
adc
sub
aas
cmps
fdiv
into
in
hlt
fiadd
push
call
or
ror
loopne
push
out
outs
cmp
adc
mov
jl
and
mov
sar
inc
sub
fcom
sbb
into
(bad)
pop
xchg
je
sub
xor
out
jo
into
push
test
or
outs
idiv
pop
jmp
adc
sub
aaa
je
test
xor
or
outs
aad
mov
add
add
mov
lahf
jne
(bad)
mov
sbb
dec
fsubr
sub
ja
int3
sbb
clc
or
sbb
add
mov
es
pusha
sbb
push
jo
loop
jno
push
outs
mov
retf
push
dec
clc
sbb
(bad)
sbb
or
and
or
aaa
jb
and
repz
sbb
mov
adc
xchg
rcl
push
jo
adc
bswap
add
pop
aad
or
fwait
add
dec
scas
mov
icebp
std
lea
jbe
xchg
pop
mov
or
gs
pusha
or
pop
fadd
and
mov
dec
mov
or
dec
pusha
or
or
fs
sbb
jmp
cmp
sbb
or
fmul
adc
sub
pop
mov
movs
ret
out
or
(bad)
or
test
bswap
jmp
sub
push
lds
out
dec
sti
fwait
dec
ror
aaa
fs
out
es
cmp
imul
jl
pusha
sub
adc
daa
ret
jl
or
and
stc
rcl
lea
xor
push
adc
sti
jne
xor
xlat
call
sub
mov
jmp
dec
mov
in
pop
adc
fstp
fld
rcl
inc
bound
retf
nop
popa
outs
sub
outs
sbb
fnstsw
je
inc
mov
fild
sbb
fld
les
mov
add
xchg
out
or
(bad)
add
xchg
jne
lea
mov
mov
ss
add
stos
xchg
push
xor
adc
adc
or
fs
sbb
fistp
mov
sbb
push
adc
mov
in
mov
or
and
pop
add
mov
jno
iret
add
lds
loopne
paddd
jg
clc
or
movzx
test
or
sbb
or
ds
jnp
std
and
jns
fldcw
inc
push
dec
push
pop
imul
div
dec
test
mov
(bad)
out
fadd
sbb
loope
mov
xchg
sub
pop
cld
test
(bad)
mov
mov
push
outs
clc
push
mov
out
add
mov
xor
mov
aam
jae
jae
in
adc
daa
loopne
sahf
adc
test
arpl
sub
loop
lahf
inc
sub
cld
add
ins
add
iret
scas
or
xor
ret
(bad)
out
push
imul
pop
push
jl
pushf
fisttp
sub
xchg
aaa
jmp
je
dec
je
push
ss
jmp
mov
add
adc
mov
push
adc
dec
xchg
outs
xlat
or
fnstsw
cmps
lea
xchg
or
sbb
or
mov
jecxz
icebp
adc
add
outs
push
ss
loope
popf
stc
mov
mov
sbb
and
cmp
fs
and
and
push
or
cli
add
push
fadd
mov
add
sub
out
jae
lds
add
add
inc
imul
pushfw
cli
stos
mov
cmp
inc
loopne
mov
or
adc
sbb
adc
sbb
pop
fcmovnbe
xor
inc
scas
inc
hlt
adc
stos
fcom
add
push
mov
sbb
jae
inc
jecxz
(bad)
aam
pop
lahf
or
xchg
bound
pop
xchg
xchg
loopne
loopne
fchs
scas
leave
out
jmp
mov
ds
inc
jbe
add
xor
sub
xor
mov
dec
cli
or
cmp
jl
pushf
push
add
jle
pop
(bad)
cs
ins
loopne
and
jl
add
dec
sti
add
cmp
ins
movs
push
idiv
fdivr
mov
nop
cmp
sbb
adc
add
dec
pop
sub
push
popa
sbb
inc
xor
outs
and
add
loopne
sub
cmp
pop
push
lods
lds
rol
ror
sbb
pop
add
jmp
jne
out
dec
jb
jmp
add
hlt
sub
sbb
mov
in
inc
jle
scas
rol
arpl
lahf
adc
outs
sbb
shr
jnp
sbb
loop
push
inc
adc
sub
(bad)
lock
push
jmp
dec
outs
jae
sbb
out
dec
xchg
cmp
xor
repz
push
ja
or
adc
adc
call
inc
xor
or
sar
sbb
mov
or
jae
rcl
add
sar
mov
inc
sbb
push
es
add
dec
lods
mov
adc
and
mov
fsubr
cmp
add
test
fild
shr
mov
mov
xor
sub
out
add
pop
(bad)
and
data16
jmp
dec
out
mov
sub
and
xor
add
xor
loopne
and
add
lods
sub
and
popf
dec
clc
inc
mov
push
out
cmp
ins
or
dec
pop
push
and
repz
lock
push
mov
outs
mov
stc
push
xchg
push
sub
clc
inc
xor
es
add
or
pusha
inc
cmps
add
pushf
sub
mov
dec
xchg
push
imul
jne
mov
loopne
ins
sbb
clc
adc
xchg
in
jnp
push
fsub
push
xor
push
dec
mov
movs
call
das
dec
jae
cmp
aaa
daa
ret
push
in
addr16
ds
cmps
add
inc
mov
adc
push
dec
push
mov
push
fisttp
push
dec
and
jle
xor
xor
or
mov
push
fsub
sub
daa
loope
sub
cmp
lea
mov
imul
mov
sahf
retf
hlt
mov
fild
cmp
sar
sub
mov
cmp
push
adc
inc
cmp
scas
(bad)
bound
jge
int3
aad
ret
pop
sub
je
or
mov
imul
mov
adc
cwde
loope
or
push
adc
mov
pusha
imul
fild
ds
imul
outs
stc
pop
add
movs
dec
mov
nop
fidiv
cmp
inc
stos
add
in
pop
aaa
jbe
or
daa
in
lock
jmp
outs
jmp
je
aas
dec
sbb
cmp
pop
dec
cs
sar
mov
dec
jmp
sbb
add
popa
(bad)
in
clc
call
fucomp
and
jge
(bad)
cmp
stos
mov
clc
or
pop
lock
mov
inc
outs
add
mov
push
shr
pop
ja
adc
or
dec
shl
add
fcomp
xchg
push
aad
pop
in
mov
inc
mov
dec
jae
mov
xor
nop
outs
sbb
aam
pop
mov
xor
xchg
movs
sub
cmp
out
adc
sar
cmp
cmp
jmp
push
frstor
jne
lods
fild
cmps
or
sub
(bad)
loop
xchg
lar
mov
inc
adc
xor
imul
ret
push
(bad)
dec
js
enter
or
loop
push
inc
loopne
mov
mov
sbb
enter
jo
mov
pop
shl
test
cmp
xor
adc
jbe
icebp
movs
mov
fs
or
mov
or
pop
leave
dec
test
popa
adc
iret
adc
lods
and
xchg
mov
jbe
jg
inc
and
inc
lock
sub
test
push
dec
rcr
shl
push
in
and
je
push
mov
fistp
sbb
pop
and
push
or
push
add
jmp
shl
aaa
dec
test
bound
sbb
add
xchg
sbb
jmp
ins
daa
pop
push
test
(bad)
push
int
inc
mov
ror
mov
pop
sbb
xor
cmp
pop
sub
movs
xchg
dec
das
ins
add
addr16
dec
add
mov
xor
dec
sbb
ror
dec
mov
xchg
adc
mov
js
xor
pop
xlat
cmp
cmp
sub
mov
pop
ja
bts
jmp
mov
lds
push
ret
sub
cmp
outs
shl
jl
add
cmp
rcr
add
je
mov
or
popfw
pop
inc
xchg
inc
mov
xchg
pusha
push
jmp
loopne
(bad)
lods
lahf
add
rcr
test
das
out
cmp
adc
sub
sbb
push
je
je
inc
xchg
mov
je
sbb
dec
daa
dec
cs
add
jo
ins
std
test
rol
sbb
push
mov
or
jmp
sub
fcmovbe
inc
mov
shr
in
pushf
adc
sub
and
jb
lods
lock
cmp
jle
imul
test
in
add
sub
les
in
arpl
mov
shr
pop
pop
jg
add
xchg
clc
and
mov
rcr
nop
inc
jmp
add
jmp
cmp
push
or
pop
xor
sahf
or
sub
or
loope
jmp
dec
int3
or
mov
or
fsub
mov
test
jno
imul
sub
mov
mov
lock
movs
sar
out
(bad)
std
sub
dec
adc
add
mov
mov
repnz
cmp
ds
lods
adc
out
xlat
les
cmp
dec
pusha
push
ins
push
jle
aaa
jns
nop
mov
fidivr
not
aad
fbld
in
push
test
push
adc
cmp
repz
and
inc
dec
rcl
scas
or
push
test
adc
and
dec
or
and
xor
pusha
sbb
cmp
addr16
mov
in
sub
fld
jmp
xor
sub
adc
jmp
mov
in
inc
cmp
dec
xchg
cmp
shl
push
cmp
pusha
(bad)
sbb
bound
outs
mov
jae
or
pop
mov
in
stc
add
inc
push
cld
mov
and
sub
lock
pusha
dec
jge
xchg
jo
in
adc
adc
adc
inc
push
mul
or
mov
mov
cmp
add
addr16
lods
sub
xchg
jmp
or
xor
mov
xchg
cmp
ds
js
xlat
(bad)
xchg
mov
test
pop
add
je
icebp
test
daa
cmp
cmp
je
sbb
mov
inc
pop
mov
add
xor
xchg
scas
cwde
cmc
xchg
mov
inc
and
xor
adc
fimul
sub
inc
push
rcl
in
adc
not
cmp
jno
jmp
cmp
fmul
pusha
outs
lea
ins
inc
pop
cmp
scas
pop
push
sub
fadd
cmp
push
sbb
daa
aam
pop
inc
sbb
inc
sbb
inc
sbb
out
add
je
push
sub
ins
cmp
and
scas
push
test
push
fimul
sbb
fnstsw
or
mov
loopne
xor
and
dec
dec
and
lds
mov
push
xor
(bad)
cmp
or
jmp
cwde
dec
fcomp
jmp
data16
mov
jg
mov
mov
jmp
add
dec
stc
clc
adc
aas
dec
ins
mov
addr16
fs
stos
push
jbe
pusha
addr16
hlt
ds
cmp
test
cmp
mov
jmp
aam
mov
or
inc
dec
dec
call
hlt
push
jmp
jl
ins
add
or
ins
pusha
rcl
sub
movs
iret
iret
rol
shl
xor
cmp
push
sbb
ret
enter
inc
and
jg
xchg
jmp
sbb
sbb
fadd
sub
enter
mov
add
pop
jle
or
and
mov
add
mov
loope
xor
add
push
or
fstp
xlat
sti
cmp
sub
mov
sub
jecxz
add
arpl
adc
dec
mov
call
or
inc
pop
sub
aaa
nop
dec
cld
aas
sbb
xor
mov
inc
xchg
add
pop
jle
into
adc
pushf
in
call
rol
or
inc
push
and
xlat
popf
out
mov
in
fidiv
mov
das
addr16
push
js
mov
ja
xchg
push
cli
pcmpgtb
rol
mov
test
adc
pop
sub
or
pop
cmp
sub
xor
mov
pusha
push
xchg
das
adc
sub
in
or
adc
xor
dec
inc
in
cmp
adc
stc
es
or
dec
test
and
ins
int3
and
(bad)
ds
aam
or
xchg
ret
loopne
inc
ret
test
or
push
or
xor
lods
jmp
stos
push
push
or
sbb
mov
les
add
hlt
xchg
in
mov
int
xchg
jp
sahf
in
outs
mov
dec
xor
mov
and
(bad)
test
add
lock
ins
les
ja
add
inc
repz
rol
adc
jge
jmp
xchg
call
ret
fs
dec
adc
jne
or
loopne
ds
test
out
cmp
inc
inc
xor
pop
repnz
add
movs
movs
mov
cmp
fmulp
ror
add
pop
loopne
xor
add
or
pop
ins
mov
call
jmp
lds
(bad)
jg
dec
add
cmp
jle
xor
mov
sbb
in
std
sub
mov
xchg
push
xor
ret
shr
outs
inc
push
push
mov
clc
jmp
test
jle
mov
sub
test
jne
or
jmp
and
sti
jg
mov
mov
add
out
mov
mov
inc
pop
dec
add
jmp
sti
ins
jg
pop
pop
add
sbb
clc
adc
in
rcr
inc
push
sbb
enter
fcom
loopne
jo
mov
xor
pop
push
inc
bound
pop
inc
mov
js
ret
pop
adc
and
mov
repnz
mov
iret
mov
push
adc
repz
pop
inc
ss
add
inc
or
aaa
dec
inc
cmp
jle
cmps
aaa
jl
sub
mov
dec
cmp
(bad)
jmp
adc
sub
push
and
or
icebp
mov
in
lock
sub
test
jg
(bad)
sub
inc
imul
loope
int3
xchg
loopne
pop
loopne
cmp
jge
or
scas
clc
test
loope
jo
sbb
rcr
pop
add
dec
add
add
mov
cmp
mov
daa
pop
fsubr
fsub
or
out
fadd
or
mov
pop
push
rcr
adc
pop
not
push
jne
cmp
jle
push
enter
sbb
mov
add
(bad)
test
dec
jne
adc
push
mov
(bad)
js
pop
bound
ret
push
mov
sub
push
in
ret
pusha
inc
scas
and
sub
nop
adc
pop
xor
nop
jae
inc
clc
mov
int
mov
bound
pushf
push
xchg
nop
jl
pop
mov
or
mov
out
pushf
cmc
add
push
fiadd
mov
jo
jl
pop
or
not
imul
and
add
inc
mov
add
inc
ret
test
pusha
xchg
push
push
fmul
test
in
outs
add
xor
fst
inc
out
mov
xor
add
cwde
push
fdiv
out
pop
push
sub
loopne
imul
js
lahf
push
imul
cli
pop
sub
or
add
add
push
or
push
sub
push
jmp
ror
push
loope
xchg
shl
sub
jne
and
adc
aas
in
pusha
inc
jnp
adc
pushf
inc
inc
dec
popa
test
dec
xor
add
mov
lods
ss
in
jl
inc
dec
pusha
mov
xor
ds
stos
clc
scas
out
fistp
inc
dec
jne
cmps
sbb
sar
mov
out
inc
loope
js
xor
mov
mov
jl
or
js
cmp
and
and
jb
cmp
add
shr
mov
inc
inc
call
loope
xor
mov
sub
ds
sbb
ja
xor
add
xchg
mov
pop
shl
sub
adc
les
les
int3
add
jl
mov
daa
push
fmul
rcl
push
aam
xor
push
sbb
push
or
sub
ret
dec
or
sub
xor
mov
cmp
inc
dec
or
test
movzx
stos
xor
je
stos
pushf
sbb
and
jl
rcr
and
mov
(bad)
scas
adc
or
adc
add
or
fadd
or
mov
pop
sbb
adc
inc
pusha
test
xor
jb
adc
and
cmp
adc
dec
cmp
push
add
mov
outs
inc
ror
aad
int3
add
int3
push
jo
mov
or
enter
outs
mov
mov
dec
mov
sbb
mov
sbb
sub
adc
mov
sbb
stos
fwait
loopne
ror
push
xchg
dec
jge
cdq
xor
xchg
push
adc
mov
or
loope
jns
adc
jecxz
lds
add
add
push
jl
push
fsubr
jle
ret
pusha
fwait
adc
retf
sub
and
jne
retf
xchg
fs
xor
inc
or
inc
ror
inc
and
pop
mov
adc
jnp
push
and
std
jo
sbb
loop
arpl
or
inc
sbb
push
cmp
enter
(bad)
pop
inc
pop
xchg
lock
xchg
arpl
in
aas
test
out
cmp
and
and
in
(bad)
xlat
xchg
test
ds
and
push
jnp
popf
sbb
div
add
xchg
lock
mov
cmp
add
ret
or
fdivr
xor
cmp
idiv
jecxz
inc
les
push
sbb
cwde
mov
cs
adc
push
setg
aam
int3
or
mov
inc
pop
sbb
inc
dec
lock
push
iret
or
adc
test
add
mov
imul
inc
imul
xchg
outs
fcomp
or
mov
imul
sub
dec
jmp
jbe
mov
outs
icebp
push
sbb
mov
pop
cmp
mov
sbb
test
cmp
in
sbb
push
push
mov
test
les
aam
or
sbb
arpl
dec
js
les
xchg
add
mov
and
mov
jns
mov
inc
inc
sbb
inc
clc
or
adc
push
add
inc
in
or
das
dec
sub
adc
sub
outs
sbb
mov
push
mov
(bad)
(bad)
and
jg
sbb
xor
aad
pop
and
mov
jle
and
(bad)
jg
jg
mov
ds
rcl
push
jmp
mov
sbb
adc
push
cwde
cmp
cmp
pop
daa
adc
add
push
and
jg
and
fidiv
and
call
adc
ds
sbb
jl
xor
in
retf
lock
addr16
push
cmps
icebp
mov
cmc
jmp
add
jae
fadd
dec
mov
lea
div
pop
out
add
(bad)
push
rcl
dec
mov
push
adc
add
mov
sbb
int3
adc
mov
mov
fwait
sbb
rol
pop
add
dec
push
xor
inc
add
xchg
lea
in
pop
sub
pop
cmp
test
ficomp
int
xchg
push
mov
mov
call
inc
dec
jne
test
or
fadd
rol
adc
bound
out
and
test
pushf
or
pop
clc
mov
mov
xchg
js
pop
shl
adc
out
sub
xor
sbb
or
add
sahf
add
and
push
inc
adc
out
ficomp
sbb
adc
lods
call
aas
or
inc
push
and
sahf
mov
push
cmps
ror
sub
push
sub
push
sbb
pop
or
movzx
iret
sti
sbb
pushf
add
jbe
mov
lea
cmp
iret
sahf
out
push
xor
xor
pop
xor
xchg
fisub
imul
inc
add
sbb
inc
jbe
ret
or
mov
add
pop
icebp
cmp
jmp
xchg
cmp
ss
add
js
push
inc
mov
jns
jae
(bad)
loope
add
adc
daa
xor
cmp
and
ret
mov
push
pop
jmp
and
lar
clc
cmp
fist
dec
push
add
jb
jmp
jl
push
cld
pop
add
js
cs
add
retf
mov
inc
pushf
jp
mov
cmp
sbb
dec
dec
mov
mov
shl
cdq
jo
push
loope
jg
mov
xchg
cmp
jne
mov
call
inc
xor
ins
dec
aam
add
or
and
cwde
pushf
mov
xor
pushf
jb
bound
addr16
fld
loopne
mov
mov
push
fcomp
add
sub
movs
repnz
inc
repnz
or
sub
push
ss
adc
mov
ret
pushfw
inc
into
jge
adc
mov
mov
loope
pop
adc
leave
add
shr
cs
adc
xor
push
(bad)
(bad)
ffreep
lea
push
cs
jmp
adc
ret
lock
(bad)
mov
popa
jo
jnp
mov
enter
jns
push
inc
xor
cmp
cmp
jge
je
and
lds
(bad)
(bad)
es
jo
add
xchg
xchg
xchg
(bad)
inc
cmp
add
dec
jae
aaa
lds
sar
jmp
sub
sbb
and
cmp
push
push
sbb
loopne
mov
add
sbb
loope
in
add
pop
loopne
in
cmp
cmp
lea
or
(bad)
adc
xor
xchg
lock
ret
out
mov
mov
retf
cmp
jge
fwait
jmp
cmp
fcompp
fild
jo
loopne
fadd
jmp
fchs
(bad)
dec
or
mov
xlat
xchg
pop
dec
loopne
es
rol
cwde
outs
in
or
add
nop
pop
mov
int
sub
fsin
add
pusha
xor
xlat
xor
jo
icebp
dec
lock
nop
or
push
cmp
jne
cmp
add
dec
fldcw
pop
and
in
push
dec
adc
sbb
push
sub
dec
adc
stc
out
popa
and
sbb
jbe
out
and
ret
loopne
adc
add
fwait
jecxz
cmp
jo
pop
add
inc
or
pusha
inc
pop
jno
leave
push
aam
inc
or
mov
cmp
adc
cld
into
rol
or
xor
shl
xchg
jmp
mov
repz
dec
jo
inc
out
dec
movs
add
sbb
mov
(bad)
test
mov
call
jb
rcl
mov
cld
mov
sbb
adc
les
mov
jg
test
arpl
and
sbb
aaa
sub
loope
cmp
nop
sub
jmp
cmp
mov
fsub
idiv
jne
ret
jle
(bad)
shl
dec
push
inc
mov
scas
add
loope
and
and
sbb
dec
mov
fild
out
ins
dec
jg
pop
push
and
pop
jbe
rol
jmp
or
dec
cs
sbb
add
(bad)
sbb
jecxz
mov
test
add
sub
jo
cmp
fimul
xor
ror
movs
daa
push
sbb
frstor
sbb
(bad)
call
mov
xchg
pop
inc
(bad)
int
dec
add
xchg
std
mov
and
push
cmp
push
or
adc
push
aaa
jnp
xor
cwde
(bad)
xchg
inc
xchg
sub
fisttp
sahf
clc
fist
add
(bad)
test
adc
out
mov
pop
mov
add
lock
pop
fidiv
adc
bound
adc
jo
sbb
in
mov
cmp
adc
sbb
mov
ins
mov
pop
cmp
inc
(bad)
int
pop
pop
jmp
dec
js
push
repnz
sub
cmp
dec
fdiv
and
je
xor
or
pop
pop
sahf
lea
dec
sbb
mov
or
stos
push
or
fld
addr16
inc
enter
pop
inc
and
pop
inc
jmp
dec
ds
push
shl
loopne
add
inc
je
mov
jb
and
shr
and
and
inc
jo
icebp
mov
xor
inc
xchg
xor
cmp
adc
loopne
mov
adc
ror
imul
mov
xor
adc
push
adc
xlat
outs
and
inc
neg
mov
jge
arpl
pop
jne
enter
sbb
add
add
sub
adc
sti
clc
adc
xchg
pop
int3
das
(bad)
in
jmp
xlat
or
add
add
add
or
cmp
mov
pop
sub
xor
push
adc
sbb
je
iret
repz
scas
inc
add
es
adc
xchg
xchg
inc
inc
cmp
xchg
lock
sub
adc
dec
adc
push
adc
dec
or
ds
sbb
cmc
xor
add
add
jbe
fist
jmp
pop
(bad)
pop
pusha
mov
stos
cmp
and
gs
or
dec
int
pop
std
add
fld
jnp
mov
clc
aaa
sub
mov
pop
push
sahf
pop
ja
bt
jae
mov
add
xor
add
inc
cmp
jne
sbb
icebp
and
push
mov
mov
aam
retf
daa
pop
add
xchg
cmp
loopne
cmp
test
sbb
add
rcr
mov
or
sbb
leave
xor
mov
(bad)
imul
sti
push
or
adc
jecxz
push
in
sub
mov
push
ficomp
aaa
fnsave
mov
shl
inc
pop
scas
xchg
movs
out
sub
(bad)
dec
popa
inc
jmp
popa
and
imul
or
jnp
sar
push
repnz
push
push
pop
pop
dec
iret
fnsave
xchg
mov
pop
cli
pop
mov
dec
hlt
mov
xor
sbb
imul
add
push
sti
mov
icebp
adc
ds
and
xor
add
pop
fsubr
imul
mov
into
mul
movzx
push
push
add
loopne
add
mov
in
pop
jg
sbb
pop
xor
jae
je
jns
push
sbb
or
in
sbb
out
aaa
mov
movnti
mov
(bad)
mov
add
or
shl
stos
and
adc
mov
inc
xchg
inc
arpl
inc
sbb
inc
add
(bad)
mov
aas
fiadd
cmp
pushf
push
sub
ret
jne
lock
fisubr
mov
mov
jg
and
jnp
push
push
sbb
ror
mov
dec
cmc
push
xor
data16
mov
nop
push
push
push
and
jo
push
pop
out
push
mov
cmp
sub
clc
and
dec
push
fisttp
icebp
add
sub
les
pusha
and
pop
sub
cmp
out
push
jae
ret
aas
in
sbb
push
adc
lea
test
ins
add
xor
mov
je
out
adc
mov
or
rcr
test
push
dec
cmp
(bad)
in
lock
sub
cmp
adc
jo
ja
sub
cmp
and
adc
add
adc
imul
ds
enter
in
int3
inc
sbb
adc
pop
or
mov
loope
hlt
add
loope
mov
or
xor
scas
sub
fstp
in
mov
sbb
and
jecxz
add
push
dec
xor
or
popf
and
sbb
sbb
or
and
test
inc
mov
(bad)
lock
stos
data16
sbb
add
and
pushf
mov
xor
adc
fwait
push
fs
push
xchg
xchg
adc
pop
test
push
add
(bad)
pop
jo
hlt
outs
mov
xor
xor
push
sbb
pop
fs
sbb
push
xor
mov
popa
test
enter
add
mov
mov
inc
jne
bound
mov
pushf
int
(bad)
mov
xor
mov
les
mov
xor
daa
sahf
out
leave
sbb
jo
adc
xor
leave
jl
in
jo
lods
cmp
pop
cld
bound
xchg
int
pop
xchg
cmp
cmps
push
or
retf
js
mov
pop
rol
dec
mov
pop
rcr
add
or
ret
push
jecxz
pop
push
pop
jno
aaa
adc
pop
out
sub
iret
repz
ret
int3
aad
daa
into
repz
mov
cmp
adc
xor
sub
mov
lods
xor
push
test
push
cmp
pop
imul
push
int3
sub
add
inc
outs
cmps
mov
dec
imul
rol
sbb
jl
hlt
ret
int3
ins
inc
clc
(bad)
mov
hlt
pop
mov
xchg
push
out
mov
or
add
mov
std
add
mov
and
or
hlt
pop
jg
add
adc
push
or
jns
shl
push
rcl
xor
fs
adc
sub
je
push
xor
test
not
lock
or
jb
out
ret
sub
cmp
sbb
add
fldcw
adc
jns
cwde
in
les
pop
cmp
add
add
xor
pop
sub
jmp
int3
fwait
push
aaa
cmp
inc
or
mov
mov
or
fbstp
rcr
fwait
dec
outs
fstp
cmps
enter
je
ss
and
sbb
pusha
or
stos
test
fadd
movs
lds
jnp
jae
jnp
jno
xor
mov
and
(bad)
shl
ins
inc
sub
mov
jbe
or
adc
rol
cmp
xor
leave
call
dec
mov
push
pop
in
dec
in
sub
adc
cmps
ret
(bad)
addr16
add
sbb
mov
dec
push
adc
call
inc
test
or
cmp
pop
into
stos
sbb
cs
xchg
inc
and
xor
bound
sbb
add
in
or
xlat
ffreep
sub
push
ret
into
and
mov
pushf
mov
imul
dec
mov
fisub
and
jae
dec
xor
shr
test
sbb
ins
push
arpl
sub
retf
add
mov
sub
inc
mov
aas
sbb
xor
pop
(bad)
icebp
xor
mov
jge
jno
xchg
test
cmp
mov
xor
mov
push
add
mov
clc
int
pop
mov
mov
(bad)
push
add
sub
std
dec
xor
jmp
lea
xchg
dec
adc
(bad)
rcr
(bad)
in
jno
push
js
clc
cmp
jbe
jb
push
sbb
mov
sub
jne
cld
pop
loope
outs
pop
jb
mov
movs
ror
fdivr
ficomp
xor
cmp
mov
sub
add
dec
es
jmp
pop
rol
adc
mov
imul
adc
adc
xchg
mov
mov
lods
add
push
xchg
mov
inc
jmp
int3
sbb
add
adc
and
or
loope
pop
rcl
pop
cmp
inc
shl
mov
clc
jae
out
ss
(bad)
pop
pop
push
mov
mov
cwde
outs
mov
jle
adc
push
sub
ss
sub
(bad)
(bad)
mov
push
inc
jb
popa
jns
push
jns
je
ins
cs
ins
popa
jae
gs
push
push
gs
jae
and
je
add
jmp
push
adc
jbe
test
add
add
ficom
add
push
int3
jns
cmps
stc
and
cmp
stc
cmp
out
mov
ins
outs
jg
adc
add
jmp
daa
push
inc
outs
pop
sub
jne
cmp
outs
jb
sub
mov
stos
(bad)
scas
mov
out
ss
dec
gs
js
xchg
pusha
jmp
add
or
call
sbb
fcomp
adc
sub
dec
inc
sub
imul
inc
outs
ins
ins
arpl
outs
jae
add
push
ret
addr16
inc
push
add
or
or
pop
or
sbb
jbe
clc
scas
js
xchg
pop
sub
inc
xor
sahf
push
xchg
pop
(bad)
scas
ror
jg
add
mov
mov
push
xchg
sbb
adc
inc
xchg
bound
stc
daa
cmps
pop
inc
sub
jb
loope
ret
add
mov
sub
je
call
xor
adc
dec
xchg
sub
fadd
push
push
loope
dec
movs
bound
pop
push
cmp
gs
div
enter
lods
mov
sub
cmps
sbb
stos
cs
pop
outs
push
aaa
push
push
mov
jae
data16
(bad)
(bad)
dec
xor
mov
inc
mov
jae
sbb
sahf
shl
push
popaw
jne
je
inc
or
jo
outs
cmps
std
mov
dec
outs
or
inc
adc
add
mov
adc
jle
pop
and
dec
bound
or
pop
or
ficom
clc
inc
movs
pop
mov
push
retf
shl
nop
pushf
ffree
loopne
add
adc
neg
sub
inc
mov
adc
outs
pop
test
jbe
nop
adc
scas
push
pop
pop
inc
scas
rcr
or
sti
adc
jne
js
lar
sub
dec
popa
outs
popa
addr16
dec
pop
add
call
call
add
cmp
xor
mov
div
add
inc
sub
js
sub
int3
jmp
add
(bad)
jne
in
int
mov
int
shl
xor
adc
push
ins
imul
test
scas
add
push
sub
int
mov
dec
mov
daa
dec
inc
and
xor
inc
retf
mov
cmps
les
add
retf
call
nop
mov
pop
js
loop
scas
push
mov
mov
int
add
fdivr
and
push
das
cmp
add
mov
sbb
dec
test
jnp
outs
dec
sti
fadd
add
xor
inc
xor
inc
cs
add
sbb
pop
fmul
jecxz
jge
adc
or
inc
arpl
push
ss
ins
add
pop
pop
clc
add
pop
test
inc
push
add
or
loope
ja
rcr
dec
push
shl
push
aad
sub
and
fisttp
inc
and
mov
out
pop
push
sbb
push
call
test
inc
or
pop
or
fadd
xor
shl
loopne
pop
pop
imul
sub
dec
ins
mov
lods
cs
mov
or
inc
pop
add
add
or
in
cmp
lods
out
sub
fmul
dec
push
inc
cs
cmc
mov
maskmovq
div
jge
pushf
pushf
mov
std
dec
jle
dec
dec
inc
cdq
mov
daa
daa
and
repz
xchg
xchg
xchg
xor
or
dec
je
in
in
rol
adc
in
mov
adc
jb
fist
cmp
mov
fidivr
mov
push
fwait
add
mov
mov
pop
int
pusha
mov
or
adc
jno
fst
mov
arpl
mov
icebp
or
inc
mov
jnp
cwde
cs
cmovns
sbb
stos
dec
add
addr16
and
fsubr
push
adc
or
inc
push
popa
jg
(bad)
push
int
jg
dec
jg
jecxz
cmps
xor
pusha
es
fs
inc
sub
mov
mov
jne
arpl
or
clc
adc
sbb
push
or
(bad)
dec
das
ins
call
sbb
hlt
or
outs
cdq
ja
call
lock
add
or
push
js
add
loopne
add
dec
and
out
xchg
adc
mov
add
rcr
or
dec
xchg
xchg
test
and
rol
gs
hlt
(bad)
cmp
push
popa
arpl
xor
xor
call
jmp
push
adc
inc
xchg
dec
ret
jl
or
sub
add
add
or
mov
je
or
push
sbb
lea
fsub
inc
add
js
adc
or
bound
scas
pop
dec
lds
xchg
pop
inc
js
jo
xor
add
fcom
imul
add
push
xchg
xchg
xor
pop
xor
test
or
and
dec
gs
and
arpl
inc
jae
fnclex
mov
das
and
xchg
inc
je
xor
es
cli
jo
shr
xor
dec
aaa
inc
ins
add
cdq
push
push
imul
and
sub
ins
mov
mov
push
adc
mov
push
or
and
add
push
outs
push
pop
xor
push
adc
xor
mov
ins
or
stos
jb
dec
sbb
and
or
adc
and
popa
pop
xchg
or
add
dec
rcl
jmp
sub
ins
test
cmp
mov
xor
push
sbb
dec
fld
sub
outs
(bad)
push
mov
mov
pop
and
inc
retf
cmp
xor
add
pop
sub
jbe
lea
scas
add
sbb
scas
pop
or
outs
adc
sub
sub
jae
imul
mov
mov
push
arpl
jns
les
dec
jmp
inc
jnp
mov
aas
aam
mov
fisttp
ret
or
sbb
mov
ins
pop
and
xor
add
daa
dec
mov
movs
outs
jnp
enter
movs
sub
test
(bad)
hlt
call
push
arpl
jmp
adc
ss
push
call
das
xor
push
js
xchg
sub
lds
dec
mov
les
add
mov
mov
mov
push
or
xor
push
(bad)
rcr
(bad)
mov
mov
cmovae
fs
loopne
and
les
pop
pop
ret
nop
xor
fisttp
add
int3
adc
lahf
rol
adc
and
mov
iret
out
rol
mov
popa
inc
mov
xchg
push
test
mov
sub
arpl
lock
and
xor
pop
movs
dec
stos
dec
sbb
fwait
adc
mov
adc
mov
or
jo
les
loop
ja
sti
(bad)
jne
imul
push
pushw
cmps
mov
sub
dec
(bad)
loopne
xchg
(bad)
daa
lahf
aas
shl
sbb
push
xchg
sub
cmp
pop
mov
pop
push
xor
cmc
in
pusha
pop
mov
ss
inc
sub
mov
cmc
das
dec
push
cmp
aaa
mov
jmp
scas
adc
dec
shl
dec
mov
add
xchg
dec
mov
and
add
and
addr16
add
or
addr16
pop
add
and
inc
add
daa
mov
ror
add
cmp
pop
and
xor
push
seto
pop
dec
inc
sub
mov
scas
loope
addr16
punpcklwd
cmp
and
mov
dec
cmp
pusha
jo
inc
adc
or
int
add
cwde
dec
and
mov
sbb
cwde
dec
lahf
pop
lds
pop
lds
(bad)
es
and
call
nop
test
xchg
sub
aaa
jbe
jp
mov
push
push
cmp
jmp
and
add
pop
imul
push
mov
int3
fwait
aaa
or
mov
push
es
lock
sub
das
(bad)
lods
fwait
ins
loopne
jo
es
nop
push
or
sub
loope
mov
sbb
add
sbb
das
mov
pop
lods
lahf
test
stos
ret
mov
or
xor
das
push
nop
pop
pusha
push
rcr
jp
jmp
es
xchg
daa
fs
or
aam
pusha
push
(bad)
push
hlt
push
push
cwde
push
rol
arpl
in
jno
mov
add
mov
cwde
and
add
rol
sub
stos
daa
fdivr
cs
test
or
add
pushf
idiv
xchg
jno
sar
push
es
push
cmp
jns
jnp
sysret
xchg
inc
jg
mov
ret
or
inc
sahf
pushf
int
xchg
aaa
and
dec
dec
mov
xchg
xchg
daa
daa
into
push
cwde
cmp
test
enter
sahf
(bad)
in
jmp
fucom
adc
out
cmp
cmp
dec
push
lds
jmp
xchg
sbb
ret
inc
es
mov
push
dec
int
dec
fimul
and
pop
add
adc
or
xor
sub
loopne
test
pop
sar
and
or
pop
mov
imul
dec
inc
and
fstp
adc
push
fst
pop
adc
jae
dec
sub
adc
adc
cwde
pop
xchg
and
lock
inc
xchg
mov
and
rcr
adc
pop
mov
rol
movs
call
or
iret
pop
rol
jno
sub
loopne
add
repnz
xor
push
and
or
mov
jae
pusha
nop
sbb
add
jae
or
add
inc
xchg
xchg
adc
cwde
pop
xchg
lods
push
cwde
adc
pop
inc
sbb
add
pop
dec
pop
bound
push
pop
cmp
test
mov
add
mov
imul
or
pop
or
pop
adc
dec
inc
pop
jge
adc
xor
sti
and
loopne
(bad)
pop
call
movs
pusha
add
add
or
cmp
mov
push
or
sbb
push
movs
int3
xchg
out
adc
nop
popw
or
loopne
xchg
xchg
mov
adc
pop
imul
imul
xchg
and
mov
pop
sbb
lahf
imul
clc
dec
shl
js
push
sub
sbb
pop
add
push
pop
and
call
add
xchg
xor
mov
push
adc
mov
mov
lods
adc
fs
lods
sbb
add
outs
arpl
fisub
add
inc
inc
jne
ins
sahf
mov
test
outs
lahf
icebp
(bad)
sbb
cmps
dec
(bad)
call
mov
xchg
jo
mov
aaa
xor
pusha
jecxz
mov
xchg
ds
fmul
add
std
push
or
inc
push
push
pop
push
and
stos
add
loopne
mov
add
inc
jl
das
add
mov
outs
or
loopne
pop
add
outs
ins
clc
pop
adc
test
outs
cmp
push
imul
xchg
mov
movs
inc
repz
sbb
mov
mov
add
addr16
fsub
outs
add
inc
jg
sti
cld
and
mov
or
jne
and
jbe
ret
mov
mov
dec
ds
push
jo
push
mov
push
xor
mov
xor
lock
cld
cmp
je
adc
pop
lock
push
fmul
push
push
mov
mov
dec
test
jl
(bad)
jge
adc
(bad)
mov
inc
push
mov
mov
pop
outs
jg
mov
pop
or
ret
jmp
in
dec
(bad)
jnp
push
pop
pop
pop
pop
pop
ret
adc
in
push
mov
xor
mov
pop
test
pop
ja
clc
loopne
das
add
pop
add
bound
xor
inc
bound
mov
out
mov
add
(bad)
outs
add
add
or
icebp
sar
and
inc
pop
pusha
mov
mov
sar
jle
mov
jmp
jmp
pushf
test
outs
in
jae
or
push
adc
fdiv
ss
mov
mov
adc
hlt
or
bound
and
pusha
shl
jmp
mov
mov
sbb
mov
int3
ja
cmp
fcomp
sub
in
mov
icebp
lods
sbb
sbb
or
sar
fstp
mov
cmp
or
or
adc
adc
xor
inc
adc
cmp
jmp
push
ja
cmp
neg
xor
adc
nop
mov
call
adc
in
and
or
sbb
jg
push
or
js
bound
push
cmp
sbb
stc
xchg
frstor
mov
je
jmp
lds
sahf
jl
dec
hlt
sbb
jg
aaa
xchg
jb
daa
mov
arpl
neg
out
push
(bad)
movnti
mov
fimul
aaa
mov
dec
enter
mov
fldenv
nop
mov
movs
imul
inc
or
or
push
xor
cmp
ins
sbb
mov
lahf
mov
adc
sbb
sahf
adc
retf
adc
aad
test
inc
fsub
cmp
adc
jbe
int3
add
pusha
adc
jmp
push
inc
cmp
(bad)
xchg
scas
xchg
arpl
inc
mov
inc
cmp
in
fcmove
push
cmp
ja
cmp
or
sbb
add
inc
add
mov
push
push
ins
cmp
push
mov
mov
test
jne
adc
clc
std
sbb
mov
push
aam
inc
lods
dec
sub
xchg
mov
adc
in
mov
mov
push
jo
in
mov
or
jno
xchg
add
inc
sub
cmp
scas
(bad)
jae
jmp
sbb
cmp
cmp
ror
xor
jl
xor
fwait
adc
or
push
and
call
je
dec
mov
or
mov
push
popa
aas
cld
add
mov
and
stc
addr16
cmp
mov
popa
mov
fs
and
add
les
inc
mov
xlat
call
add
(bad)
clc
iret
outs
push
push
xor
cmp
lods
ja
leave
mov
nop
push
or
pop
clc
jl
cdq
popa
je
les
leave
in
push
lods
(bad)
lock
adc
clc
or
pop
lods
xchg
int3
test
or
fdiv
mov
pushf
les
jge
mov
lock
xchg
mov
int
jl
popa
push
xchg
push
fdivr
or
xor
cli
sub
jb
sub
cmps
sahf
sbb
je
cmps
push
pusha
or
jp
cmp
loopne
push
rol
cmp
(bad)
shr
int3
jb
push
and
pop
cmp
mov
mov
xor
sti
inc
ret
fcom
mov
fldcw
mov
or
je
pop
xchg
cmps
or
je
cmp
pop
in
(bad)
aas
or
cmp
inc
in
aaa
js
shl
or
rcl
xchg
mov
repnz
outs
pop
push
(bad)
xor
sbb
mov
mov
lods
push
daa
jmp
xor
push
pop
sub
cmp
sub
jg
xchg
ret
mov
push
mov
fcomip
cmp
jne
or
rol
pop
jne
cmps
jbe
mov
inc
lods
dec
adc
test
xor
ds
sbb
inc
popa
pushf
cmp
xchg
push
adc
or
xlat
cld
push
sub
stos
xchg
sti
mov
lock
aad
jb
icebp
adc
mov
push
pop
out
cmp
pusha
mov
outs
cdq
outs
cs
push
push
stos
fiadd
lods
pop
dec
cmp
loope
ja
aad
pop
js
jmp
loop
or
pop
sti
xor
cwde
adc
push
adc
adc
hlt
cs
cmp
or
pop
nop
test
mov
mov
xchg
pop
test
ret
inc
dec
jo
mov
push
fdivr
pusha
adc
test
cli
inc
ins
cld
mov
or
inc
jle
icebp
add
leave
push
adc
shl
inc
pop
push
or
pop
test
jbe
daa
jne
mov
push
js
add
xor
ds
jo
adc
sti
jbe
push
sub
push
(bad)
fidiv
or
lea
dec
mov
lock
fdiv
leave
mov
mov
or
(bad)
inc
or
inc
enter
ret
sbb
test
and
popa
clc
dec
inc
jl
mov
inc
lea
cwde
loope
fstp
jne
test
je
sar
cmp
cmp
lods
or
mov
fdiv
cld
push
add
push
fisub
and
and
pcmpeqb
sbb
(bad)
jl
pop
in
xchg
lock
jmp
imul
mov
xchg
into
out
jo
daa
daa
pslld
sub
jo
popf
mov
dec
mov
or
sbb
(bad)
arpl
or
pop
daa
jp
mov
and
test
(bad)
pop
dec
jne
adc
repnz
pop
cmp
sub
fld
dec
and
jl
lock
(bad)
mov
xchg
and
into
sbb
or
fisttp
mov
sti
push
adc
lea
mov
inc
std
fsubr
out
jns
call
push
sub
outs
sti
dec
pop
sbb
jne
ds
jnp
mov
test
jne
jmp
push
movs
imul
or
nop
jae
or
in
xchg
les
jg
push
pop
jl
fiadd
sub
adc
mov
and
retf
cmp
jb
(bad)
mov
outs
gs
inc
cmp
xchg
push
dec
test
and
pop
test
(bad)
ja
leave
js
adc
cwde
pushf
in
pop
pop
xlat
daa
lods
inc
cmc
les
mov
cld
add
mov
idiv
adc
pop
in
sub
lods
xor
jl
arpl
data16
push
xchg
int3
push
bound
daa
sub
adc
cs
sbb
loop
jno
mov
push
jg
push
jecxz
stos
clc
ret
mov
add
je
add
mov
mov
(bad)
aam
in
lahf
add
movs
ret
mov
cmps
arpl
jle
popf
call
imul
sbb
call
dec
or
aad
cmp
inc
sbb
ins
nop
dec
push
in
add
sbb
jmp
push
or
ds
fwait
call
jp
call
mov
pop
push
cmp
inc
sub
inc
jge
sbb
dec
ins
adc
cmp
aad
or
mov
xchg
sbb
cmp
je
mov
psubb
mov
or
movs
cwde
retf
jmp
and
adc
repz
neg
xor
dec
sbb
cmps
test
jne
(bad)
sub
vpaddsb
enter
jl
add
cmp
adc
sub
ss
push
and
sub
mov
sbb
repz
xor
sbb
fmul
retf
push
sbb
(bad)
rcl
xchg
cmp
inc
dec
mov
jp
xor
push
cmps
push
loope
das
stos
in
mov
addr16
push
nop
push
cli
cmp
jp
mov
pop
jle
push
(bad)
lds
clc
psrlw
add
sbb
je
shl
pop
push
xor
xlat
sbb
or
adc
push
xor
push
mov
push
adc
icebp
in
mov
xor
pop
popf
fucomip
outs
cmp
push
fisttp
sbb
rcr
or
push
sub
sub
outs
sub
hlt
(bad)
sub
retf
xor
out
adc
cmp
(bad)
addr16
xchg
adc
cs
or
sbb
scas
call
or
cmps
fistp
call
xlat
mov
sbb
xor
sub
cmp
inc
mov
hlt
pop
push
mov
call
dec
adc
fidiv
fild
lock
pop
jmp
dec
imul
loop
mov
test
jne
jmp
mov
adc
cmp
xchg
mov
jmp
mov
lahf
inc
sub
fist
xor
xchg
adc
jecxz
ror
sub
mov
mov
(bad)
call
(bad)
mov
out
or
inc
dec
jne
jns
js
xor
movs
sbb
mov
retf
dec
sub
lahf
mov
sub
hlt
jle
fwait
jl
js
xchg
cwde
call
xchg
pop
dec
cmp
lea
daa
(bad)
shl
loope
fs
dec
test
or
jne
inc
fnsave
mov
sub
popf
add
sub
call
dec
jbe
mov
cmp
js
push
jge
cmc
add
arpl
add
mov
sbb
dec
cmp
ror
clc
ds
xchg
sar
xbegin
inc
add
inc
(bad)
push
retf
dec
gs
or
fisubr
and
pusha
mov
and
jl
add
lods
mov
or
clc
das
cmp
jg
push
add
jo
sbb
out
fild
push
int3
mov
ret
inc
bndstx
inc
inc
cmovo
pop
arpl
dec
imul
inc
xchg
pop
xchg
push
sub
pop
or
es
jne
mov
jmp
in
cdq
stos
fs
add
push
inc
push
fisttp
call
add
test
ins
mul
sar
add
and
mov
test
pop
cmp
dec
mov
jne
in
cdq
jbe
sub
push
adc
sahf
xchg
push
fs
shl
rol
fmul
cs
add
ss
pop
adc
push
add
dec
loopne
push
sub
outs
je
adc
jg
inc
and
xor
and
and
and
and
add
sbb
mov
pushf
push
sar
es
jb
jae
cmps
jo
mov
mov
inc
gs
jne
je
int3
add
fwait
sbb
add
(bad)
push
mov
les
and
jns
mov
add
stc
ja
adc
or
and
cmp
add
scas
push
xor
ins
jbe
push
add
push
inc
pusha
jo
push
cld
jbe
test
imul
pop
shl
mov
pusha
ins
shr
add
pop
idiv
sub
scas
xchg
retf
and
loopne
push
shr
xor
sar
add
add
pushf
push
cwde
add
gs
add
ret
mov
cld
(bad)
add
dec
mov
cwde
rcl
(bad)
loopne
clc
pushf
pop
sbb
mov
stos
mov
xchg
ds
add
or
sbb
push
imul
arpl
lahf
pop
sbb
sbb
adc
and
ror
mov
imul
ins
push
pusha
mov
das
inc
adc
mov
stos
outs
push
push
scas
loope
ins
fmul
cmp
jbe
sbb
add
or
mov
add
push
or
push
sub
push
rcl
addr16
idiv
add
mov
sbb
ins
adc
arpl
mov
dec
pop
dec
jno
or
dec
ja
cmp
adc
adc
xchg
out
loopne
push
aam
lds
iret
push
fldcw
jmp
mul
jg
and
push
hlt
fcmovnbe
cmp
add
jbe
add
push
add
rol
arpl
xchg
inc
mov
test
cmp
mov
push
mov
push
sub
nop
jbe
cmp
das
pop
jo
jne
ret
push
bound
pop
mov
dec
jl
jb
out
out
sbb
(bad)
seta
inc
(bad)
and
mov
sbb
(bad)
cmp
jne
mov
test
daa
neg
mov
stos
ins
cwde
ins
mov
or
dec
and
mov
jo
inc
xor
cmp
ins
jmp
js
dec
cmp
jl
lea
shr
and
mov
or
inc
xor
inc
cmps
mov
test
jge
lea
jmp
mov
dec
push
fcomip
and
jle
mov
jmp
test
pop
xor
fwait
or
sub
(bad)
(bad)
nop
ss
js
pop
fild
test
or
cwde
inc
mov
jge
int3
mov
clc
je
xor
inc
mov
repnz
repnz
shl
xor
(bad)
dec
leave
daa
cld
enter
mov
pop
jns
psrad
push
pop
jmp
sbb
test
and
pop
js
jo
arpl
lea
mov
call
js
or
xchg
pop
jecxz
xor
les
icebp
in
adc
inc
shl
jp
(bad)
pop
jle
or
and
or
mov
xor
sbb
sub
xor
into
mov
mov
push
rcl
push
adc
call
enter
add
dec
or
arpl
mov
out
mov
jge
shr
(bad)
jg
push
dec
cmp
inc
xlat
ror
pmuludq
gs
lea
sti
add
call
je
bound
loop
mov
xchg
in
adc
aam
xor
push
xchg
out
lock
je
adc
scas
mov
adc
adc
dec
fidiv
dec
in
pop
and
dec
adc
adc
add
repz
arpl
add
repz
sub
cmp
add
fild
xor
loopne
mov
inc
mov
movs
add
push
xor
add
sbb
add
enter
cmp
icebp
fiadd
pop
push
add
lods
pop
jmp
cs
loop
sbb
add
outs
inc
je
(bad)
lea
inc
sub
mov
xor
lea
jl
inc
les
sub
shl
add
mov
mov
xchg
js
push
clc
or
push
or
ins
(bad)
dec
mov
sub
jo
lea
pop
fsub
add
or
sub
cmp
fisttp
xchg
cld
wrmsr
call
(bad)
sti
ja
movs
sbb
or
jmp
or
add
jne
sbb
push
je
push
lods
inc
movs
popf
xchg
call
sbb
and
fucomip
pop
mov
jecxz
sahf
jp
fild
outs
(bad)
call
add
xor
add
or
add
fadd
je
push
into
dec
(bad)
sbb
fstp
fucomi
add
xchg
dec
sub
adc
mov
add
and
shl
and
dec
cmp
add
sub
and
imul
add
hlt
movs
inc
data16
clc
xor
xor
ret
jno
lods
mov
push
push
(bad)
sbb
dec
xor
outs
lea
clc
int
pop
sbb
frstor
inc
push
cmp
mov
or
inc
enter
sti
add
ins
imul
add
cmps
xchg
jg
sub
xor
sbb
pop
push
call
int3
push
adc
lds
jmp
push
pop
sbb
cmp
mov
push
leave
jne
nop
inc
mov
sar
push
add
aas
add
in
daa
push
sub
and
adc
xchg
cmp
shl
jl
and
aam
adc
pusha
call
ins
push
push
push
sub
daa
jmp
loop
(bad)
mov
push
mov
mov
mov
int
cmp
je
add
push
bound
int3
mov
adc
jmp
push
mov
mov
or
dec
imul
mul
inc
push
push
mov
loope
sbb
mov
jle
add
cwde
mov
sub
push
push
adc
test
popf
mov
rol
retf
push
lock
in
mov
mov
inc
inc
dec
pop
xor
xor
or
inc
dec
mov
test
or
push
inc
out
test
clc
enter
cs
sbb
inc
cmp
inc
daa
jmp
inc
arpl
push
sub
test
addr16
aaa
pop
xchg
movs
cmp
xor
push
loop
call
inc
or
push
je
int3
cli
or
push
and
sub
inc
mov
movups
out
out
xor
js
cmps
add
push
daa
hlt
popa
imul
pop
dec
out
dec
loop
inc
and
add
or
or
inc
mov
cmps
call
test
add
or
mov
cmp
(bad)
out
inc
inc
scas
mov
retf
sahf
xor
cmps
add
inc
iret
ins
adc
or
mov
mov
jno
daa
es
add
ss
aad
adc
dec
jns
push
cwde
add
ret
into
cmp
push
test
pop
push
inc
and
jne
mov
mov
or
push
or
sub
or
jge
add
cmp
cli
add
inc
sete
mov
clc
ret
inc
pop
and
(bad)
adc
push
and
add
data16
ja
aad
push
add
xor
call
add
inc
fisttp
sbb
cmp
xchg
dec
pushf
jno
add
loop
adc
loopne
sbb
mov
jl
or
clc
push
loopne
pop
and
mov
and
xchg
and
adc
pop
dec
push
mov
pop
hlt
aaa
sbb
push
adc
push
adc
cmp
push
mov
adc
or
cdq
jnp
(bad)
out
fmul
jbe
mov
adc
(bad)
inc
inc
call
in
or
push
pop
cmp
jne
cmp
add
or
hlt
sbb
jmp
rcl
sub
add
int3
push
add
mov
mov
fisttp
jle
mov
and
out
push
mov
cmp
inc
vpshufhw
lock
scas
(bad)
test
(bad)
mov
ret
cmp
aad
pop
mov
pop
sub
cdq
add
test
or
lea
push
push
xor
dec
ins
sbb
dec
pop
sbb
pop
loopne
clc
jne
ror
sbb
fdivr
call
sub
loopne
mov
(bad)
push
jp
sbb
xchg
lock
xchg
push
adc
or
scas
adc
test
cmp
das
xchg
push
sbb
and
sbb
dec
(bad)
loopne
in
call
cmps
in
std
(bad)
int
push
or
adc
rol
dec
pop
or
push
shr
rcr
push
pop
xlat
jmp
mov
out
pushf
pop
jmp
xor
cmp
xchg
sti
push
xchg
or
dec
add
stos
dec
lahf
bound
sbb
pop
inc
push
mov
adc
es
dec
mov
or
fmul
aaa
adc
mov
add
add
or
shr
or
add
test
imul
pop
adc
push
movs
out
cs
mov
dec
adc
sbb
mov
jo
or
sub
jmp
pop
pop
sub
inc
fidivr
loopne
adc
imul
retf
sub
add
adc
mov
jl
ja
sbb
mov
test
imul
adc
mov
inc
sbb
adc
or
push
mov
sar
add
push
sub
popa
mov
or
lea
sar
imul
and
adc
push
scas
lock
jl
cmp
jno
lahf
pop
xchg
dec
call
es
mov
js
push
xchg
arpl
retf
xor
imul
mov
(bad)
pop
xchg
das
push
mov
push
mov
jge
shr
daa
fisubr
aas
jecxz
add
inc
mov
cmp
test
jmp
aam
call
sub
clc
fcomi
or
adc
cmp
scas
jo
pop
mov
bswap
nop
loop
scas
xchg
outs
sbb
in
jne
pop
movs
ret
nop
out
int3
mov
inc
pop
fimul
mov
movzx
fmul
or
mov
and
arpl
std
xchg
xchg
xor
cmps
pusha
pusha
mov
out
ins
les
ss
mov
push
sub
pushf
sbb
inc
int
xor
outs
cmp
inc
aas
mov
gs
sbb
fcomp
cmp
xchg
mov
(bad)
mov
and
mov
xchg
and
jmp
loopne
(bad)
mov
inc
int3
jp
push
inc
clc
pusha
sbb
push
cld
cmp
setne
dec
cmps
and
dec
dec
pop
sbb
xchg
cdq
sub
sub
sbb
mov
dec
dec
push
mov
inc
dec
pop
jp
pusha
fadd
pop
mov
inc
add
mov
add
push
call
fisub
pop
pop
mov
mov
or
or
dec
ror
test
lock
pushf
movs
sbb
fcomp
and
mov
les
loopne
push
mov
ja
xchg
cmp
add
add
mov
push
ss
cmp
adc
add
adc
sti
add
mov
push
sub
mov
bound
sub
push
dec
fs
add
inc
std
mov
mov
inc
adc
ss
add
daa
ret
popf
mov
test
or
push
add
mov
xor
mov
add
(bad)
pop
fmul
jne
in
inc
push
shl
xor
push
push
push
add
mov
mov
add
jp
inc
cmps
std
pop
add
popa
test
dec
lea
pop
sbb
outs
lods
ds
xchg
pop
dec
loope
and
push
pop
clc
pop
mov
loop
inc
add
adc
sbb
add
sub
jg
push
mov
nop
ins
push
adc
xor
loopne
fild
lock
lea
sub
std
clc
cmp
pop
dec
mov
push
out
fstp
or
adc
mov
dec
leave
mov
inc
ss
or
or
cld
cmovl
out
je
fisttp
pop
mov
fcom
ret
sbb
mov
and
or
aaa
adc
mov
clts
sbb
or
sbb
jns
jmp
cmp
jb
into
test
mov
mov
cmp
iret
sti
dec
push
ins
dec
jne
push
push
(bad)
and
or
cmp
jne
inc
jmp
dec
cmp
ficom
inc
repnz
add
shl
dec
sub
push
in
jnp
ret
cmp
sub
xor
jecxz
jo
push
icebp
out
adc
jae
mov
sub
mov
mov
push
add
push
sbb
out
mov
mov
push
ja
mov
fcom
push
mov
inc
call
into
sbb
or
push
sar
cmp
sbb
inc
xchg
mov
mov
cmp
je
sbb
inc
pop
call
call
adc
sub
push
push
mov
ret
adc
into
cmp
jge
mov
cmp
lds
push
cld
mov
adc
adc
aad
add
enter
clc
les
fs
cli
test
adc
stos
mov
mul
dec
add
sti
ret
loopne
pop
rol
hlt
mov
dec
mov
cvtps2pd
scas
lock
cdq
xlat
jmp
add
mov
les
daa
cmp
push
fmul
jg
pop
xor
cmp
lea
je
push
mov
aam
retf
call
(bad)
xchg
dec
jp
bound
ins
adc
push
addr16
outs
or
lahf
push
inc
jbe
popa
or
popf
inc
aad
jnp
imul
jle
mov
jge
inc
add
pop
jle
cmp
sub
xchg
jp
cmp
jmp
hlt
adc
xchg
cs
xchg
shl
push
scas
fwait
adc
mov
sub
push
cmc
xor
rol
jmp
dec
test
stos
xchg
or
stos
dec
test
outs
sub
loopne
fidiv
adc
(bad)
pop
retf
cmp
aaa
sbb
sbb
je
inc
add
mov
adc
push
cld
daa
movs
sub
enter
loopne
sbb
or
fstp
or
sbb
cmp
shr
push
sbb
daa
and
mov
jne
fucom
add
sbb
and
jmp
in
jne
add
or
jmp
cmps
leave
xchg
pop
sbb
fs
(bad)
and
add
mov
jae
cs
or
sbb
add
(bad)
bound
adc
mov
ret
or
dec
or
sub
mov
aas
or
enter
(bad)
xor
test
mov
in
add
outs
jl
cwde
pop
mov
ins
js
sbb
push
inc
dec
test
and
jge
adc
lock
into
push
jp
lods
or
fnstcw
adc
mov
je
loopne
mov
sub
nop
iret
sub
je
(bad)
out
jmp
cmp
jle
bound
pop
jne
and
cmp
cmp
fadd
adc
leave
shl
in
pop
or
push
mov
add
movs
in
mov
fdiv
jmp
jmp
inc
jmp
add
or
in
cwde
aad
mov
daa
add
ret
push
or
jb
lods
loop
add
(bad)
cmp
cmp
in
mov
mov
in
push
jae
addr16
test
mov
jg
call
(bad)
call
scas
xchg
fcom
mov
ja
dec
mov
jecxz
fwait
xchg
in
rcl
pop
(bad)
(bad)
(bad)
(bad)
cmp
stos
push
adc
sub
add
call
fwait
add
push
xchg
call
lea
(bad)
push
mov
pop
xlat
mov
imul
cld
add
adc
adc
inc
mov
mov
jecxz
mov
cmp
jp
jae
xchg
sub
mov
inc
popa
adc
push
jg
ja
adc
mov
push
ins
fmul
sbb
imul
push
and
lock
test
lods
sbb
adc
adc
in
sbb
loopne
shl
mov
or
sub
mov
rdpmc
add
mov
cld
push
add
xchg
sub
mov
inc
pusha
mov
sar
dec
dec
cld
fstp
div
adc
adc
sbb
lock
jb
data16
push
sub
fmul
(bad)
pop
dec
mov
scas
imul
cmps
arpl
jbe
outs
cmp
inc
jnp
cmp
mov
test
jmp
mov
nop
cmp
iret
push
add
push
into
out
jmp
rcr
(bad)
jne
lea
div
ins
shl
inc
mov
je
sub
inc
cmp
inc
jno
mov
mov
shr
add
add
push
adc
shr
xor
add
mov
add
lock
xlat
push
dec
ss
lods
repz
add
mov
dec
outs
inc
scas
shl
fcomp
mov
pop
jb
add
aad
int3
xor
dec
lds
aad
push
adc
adc
push
js
push
aas
push
rcr
xor
fsubrp
jno
or
jl
mov
inc
pop
sbb
sbb
jne
inc
or
push
and
xchg
xchg
dec
or
je
xor
mov
fadd
or
addr16
mov
fmul
and
arpl
sbb
add
or
mov
pop
fstp
or
push
cld
mov
mov
and
mov
rcr
push
xchg
or
leave
aas
xor
cli
loopne
int3
mov
mov
into
pushf
sbb
mov
leave
sbb
push
popa
(bad)
push
xchg
repnz
and
(bad)
test
call
add
mov
loope
mov
lahf
xchg
es
push
cmps
push
fdivp
add
or
loopne
mov
push
popa
lods
lock
xchg
arpl
(bad)
inc
sub
xor
mov
ss
jo
ror
add
lods
lea
and
xchg
sub
push
xchg
repz
add
das
sbb
cwde
out
push
inc
or
add
test
or
inc
cli
fucomi
sahf
dec
mov
loopne
leave
inc
pop
test
loope
xor
sbb
test
add
mov
cmp
add
sub
mov
push
cmp
inc
test
sub
fisub
mov
inc
fsub
adc
outs
loopne
add
push
loop
mov
or
inc
outs
add
daa
inc
jecxz
mov
mov
mov
jns
adc
inc
and
pop
xchg
jns
ret
xor
push
pop
mov
aad
xchg
cli
push
ja
rol
lahf
dec
push
or
sbb
push
xchg
ss
syscall
les
jo
cld
jne
adc
std
xor
mov
adc
inc
mov
xor
(bad)
dec
enter
out
pop
cmps
adc
adc
nop
sbb
int3
ins
fbstp
cmp
enter
int3
loopne
idiv
movs
mov
dec
dec
adc
psrlw
mov
mov
dec
loopne
shl
clc
xchg
lods
inc
mov
add
push
cmps
pop
mov
add
mov
mov
mov
je
dec
ret
jno
xchg
je
xor
push
in
mov
inc
lea
inc
loopne
xchg
popa
and
add
pop
pop
xor
xchg
pop
nop
push
push
sbb
clc
imul
mov
jae
or
jno
mov
leave
inc
sbb
lahf
or
cs
aam
das
lock
cdq
jbe
leave
mov
imul
push
push
sub
dec
lea
cmp
or
pop
das
jmp
inc
and
inc
or
inc
jnp
inc
or
popf
or
xor
or
fmul
(bad)
push
pushf
pop
arpl
or
gs
cld
fldl2t
ficomp
inc
pop
sbb
xchg
xlat
ins
cli
pop
push
cmp
xchg
add
cs
push
cmp
push
pushf
inc
cwde
mov
add
add
sub
jae
jge
xchg
int3
push
lea
mov
or
cmps
cmp
cmp
test
popf
mov
dec
sbb
push
fdivr
mov
fwait
inc
ret
test
lock
mov
or
xor
in
in
mov
fisttp
movs
jl
or
scas
inc
add
adc
leave
and
or
lods
cli
cmp
mov
mov
mov
add
adc
add
cmp
jg
sbb
rcl
and
adc
and
mov
or
data16
jp
lods
xor
cmp
dec
lock
adc
je
mov
add
test
aam
aas
lea
push
mov
fistp
nop
push
or
(bad)
cmp
dec
cld
inc
sbb
jecxz
add
jbe
add
je
sub
push
dec
pusha
pusha
cli
mov
push
mov
dec
das
pushf
adc
cmp
adc
sbb
fwait
shl
adc
popf
or
mov
xor
xlat
into
lea
rcl
sbb
mov
or
cmp
popf
inc
(bad)
fstp
jmp
add
iret
xor
pusha
aaa
out
push
icebp
dec
hlt
mov
mov
(bad)
daa
or
aam
add
mov
mov
jl
push
lock
push
or
fldenv
inc
sbb
cmp
nop
add
movs
mov
dec
xchg
jecxz
inc
lods
rcr
sub
push
mov
call
adc
lock
sbb
aam
xor
push
retf
push
enter
mov
mov
daa
jle
aad
mov
xlat
pop
jmp
test
outs
cld
clc
mov
cmc
stc
test
push
or
lods
add
xchg
cmp
mov
out
mov
pop
inc
and
pop
adc
test
or
nop
data16
in
fidivr
pop
or
inc
and
cmps
in
cmp
xchg
in
iret
call
adc
fisttp
push
mov
clc
scas
add
mov
mov
add
add
fsubr
add
sti
in
movs
cmp
push
(bad)
adc
add
cmp
mov
rol
xor
and
xchg
sbb
shl
mov
inc
hlt
into
push
jmp
push
dec
cld
adc
or
cmp
mov
dec
mov
dec
in
dec
in
std
loopne
jge
test
js
inc
aas
into
push
js
int
and
xchg
add
mov
fcomp
mov
(bad)
jns
sub
inc
nop
add
sub
dec
adc
loop
sub
push
inc
xchg
add
add
ffree
lock
adc
mov
sub
jmp
in
sbb
test
mov
sbb
xor
mov
(bad)
push
imul
and
add
rcl
pushf
sbb
dec
pop
fbstp
or
sbb
add
sbb
rcr
call
std
mov
jmp
inc
dec
jne
or
jae
je
add
dec
inc
clc
and
jnp
out
test
jne
ss
mov
jmp
in
jle
sbb
dec
pop
movs
xadd
pusha
js
inc
xchg
sub
dec
fcom
cmp
cmps
ds
mov
jecxz
lock
call
push
xor
je
mov
xchg
inc
sub
outs
cmps
push
cmp
shl
jnp
xchg
and
test
(bad)
loopne
retf
scas
pop
enter
imul
cmp
push
ret
addr16
hlt
into
mov
push
jecxz
loopne
gs
adc
in
adc
adc
mov
sub
stos
pop
mov
or
push
outs
add
inc
xchg
jo
cli
and
lahf
ucomiss
lds
hlt
push
mov
test
pushf
push
das
loop
arpl
stc
sbb
pushf
sub
das
jmp
test
jp
fmulp
loop
mov
push
adc
or
les
xchg
loope
das
data16
mov
cmc
data16
(bad)
mov
mov
jns
and
sub
mov
mov
test
jb
in
jo
pusha
loopne
mov
pop
mov
or
add
mov
pop
sub
add
daa
dec
pop
or
(bad)
stos
and
xchg
xchg
bound
adc
adc
dec
jl
pop
jmp
inc
push
mov
je
lea
add
in
push
push
mov
retf
dec
or
sbb
pop
push
mov
mov
xor
or
pop
addr16
push
push
mov
nop
repnz
or
les
loope
daa
loop
mov
mov
nop
mov
xor
inc
daa
cmp
adc
and
dec
daa
fistp
jne
mov
test
mov
adc
mov
cmp
pop
ins
je
in
in
ficomp
jl
icebp
movs
ret
test
loope
and
sbb
stos
in
cdq
into
lods
sub
push
inc
xchg
sbb
ret
sub
cmp
sub
je
mov
aas
adc
or
in
adc
in
mov
jo
test
fmul
push
pop
jae
into
in
push
add
sbb
out
scas
dec
sbb
call
mov
(bad)
mov
scas
shr
push
or
clc
inc
push
mov
sub
test
pusha
cs
clc
ins
xor
stos
lahf
mov
add
call
mov
out
inc
pop
cmp
dec
loope
and
add
mov
jmp
lods
pop
push
clc
scas
sub
shl
call
and
cmp
mov
or
inc
xchg
add
mov
ret
in
or
jo
push
and
xor
and
sub
out
pop
pusha
inc
and
(bad)
dec
add
xchg
pushf
xchg
sbb
mov
and
cli
lock
ins
out
movs
mov
mov
xor
leave
es
nop
pushf
jo
adc
movs
adc
dec
out
and
enter
add
leave
mov
sahf
or
lods
xchg
sbb
xchg
push
or
mov
adc
sub
mov
or
xchg
out
xor
cmp
xchg
adc
mov
je
mov
loopne
xor
ins
push
ss
xchg
mov
cwde
mov
cmp
je
xchg
out
mov
in
daa
add
dec
jb
out
jl
xchg
or
repnz
sbb
aam
jo
mov
out
dec
clc
inc
js
mov
or
out
or
repnz
push
dec
mov
pushf
out
push
xor
pop
lahf
inc
add
sub
inc
xor
test
mov
xchg
mov
lock
nop
mov
add
loopne
and
add
jg
and
daa
cmp
hlt
js
rcl
ret
out
push
mov
add
loope
lods
out
popa
lods
cs
lock
inc
dec
pop
out
iret
push
cmp
dec
xor
push
jmp
push
or
dec
xchg
push
pop
test
inc
mov
neg
pop
and
fmul
xchg
adc
add
mov
inc
pop
scas
add
xlat
rcl
add
js
dec
jbe
sbb
cwde
pushf
xlat
xor
jns
add
scas
xchg
clc
inc
mov
inc
cmp
jmp
lea
and
or
dec
adc
fistp
sbb
or
cmp
fs
ror
sbb
mov
cdq
jge
push
add
fmul
pop
cdq
je
jmp
out
dec
test
push
in
js
or
inc
or
ins
mov
sbb
pop
arpl
loope
cmp
mov
adc
or
adc
or
or
push
in
adc
gs
cmp
arpl
xchg
dec
xchg
cmp
sub
cmps
add
fcomip
adc
push
and
jne
idiv
faddp
in
push
lods
ret
mov
jle
add
or
mov
idiv
mov
sub
mov
mov
popf
daa
push
arpl
ror
cmp
pusha
or
test
cmps
js
add
inc
xor
sub
cld
mov
test
push
fidiv
mov
daa
jmp
sub
lock
or
inc
mov
add
enter
int3
ret
mov
jne
out
add
repz
cmp
shr
add
(bad)
mov
or
or
xchg
cs
inc
clc
pop
bound
sbb
dec
or
outs
(bad)
lods
pop
cli
sti
rol
jnp
sbb
aad
fcomp
in
jo
popa
mov
add
(bad)
in
movs
mov
xchg
nop
jp
cmps
add
ja
rol
mov
test
or
ret
out
add
pop
rol
js
and
push
cmp
mov
stos
add
cmp
fidiv
push
cmp
sbb
sbb
dec
jne
inc
or
sbb
pop
call
pop
add
test
ds
xchg
cmp
jbe
jl
mul
adc
aas
inc
pop
or
push
adc
mov
xchg
sub
movs
lock
lea
fld
mov
jbe
fdivr
xchg
inc
mov
(bad)
sbb
mov
ret
sub
xchg
movs
int
imul
xor
jbe
pusha
outs
fcom
sub
call
aas
loopne
push
mov
mov
xor
or
std
mov
mov
or
jge
loope
sti
push
dec
pop
cmp
movs
call
or
adc
and
pop
call
adc
lds
fimul
into
test
or
push
or
adc
mov
sub
jae
jae
adc
push
mov
jge
push
div
stos
sbb
sbb
and
dec
sbb
add
je
int3
jg
cmps
lods
fisttp
or
xchg
push
push
pushf
ins
sti
cmp
movs
xor
mov
adc
into
add
dec
push
ret
mov
(bad)
out
push
or
sbb
aam
pusha
add
jbe
fadd
inc
xor
outs
push
and
das
pop
fdiv
outs
sub
cmp
mov
push
lea
inc
cmp
dec
test
sar
or
mov
bound
(bad)
or
pop
ret
pop
sbb
call
jo
icebp
push
out
sub
imul
xor
out
fmul
jle
jp
adc
cli
fcomp
mov
les
iret
sbb
sub
xchg
es
jg
loope
push
in
push
adc
sbb
pop
cld
and
rol
fisttp
mov
pop
pop
push
fcom
enter
xchg
xchg
in
and
fiadd
dec
imul
jo
out
enter
adc
ror
push
inc
jne
adc
cmp
inc
or
adc
mov
mov
ds
adc
mov
je
mov
adc
(bad)
sbb
jmp
mov
add
cwde
xor
inc
xchg
add
(bad)
aas
and
int3
inc
or
pop
shl
sub
adc
outs
sbb
push
popf
inc
inc
or
mov
ror
pop
rcl
jmp
aaa
push
pop
xor
(bad)
mov
cmp
mul
je
aas
sub
(bad)
push
lea
cwde
loopne
cmp
add
mov
sub
dec
out
aas
sub
ret
(bad)
adc
or
cmp
pop
pop
xchg
push
movs
test
sub
ror
dec
add
test
mov
into
sub
sub
add
pusha
sub
test
cwde
rol
pop
in
loop
jb
(bad)
mov
sbb
xlat
mov
arpl
xchg
xchg
mov
cmp
and
jno
lods
mov
inc
mov
fisttp
xchg
loop
data16
jne
int3
fistp
mov
or
pop
jecxz
xlat
je
inc
outs
inc
xor
mov
imul
pop
or
dec
push
cld
in
mov
add
add
fdivr
add
sbb
shl
add
nop
or
nop
enter
lods
push
push
nop
inc
mov
test
outs
lock
jmp
push
dec
push
jle
inc
fwait
out
stos
ret
scas
(bad)
mov
out
in
cli
fdivr
add
movs
and
cmp
(bad)
mov
fcomip
test
movs
adc
sar
mov
adc
ret
mov
or
ret
sahf
popa
jmp
shl
inc
es
and
and
addr16
rcr
inc
rol
test
test
ret
push
inc
push
mov
jmp
adc
cmc
in
into
movs
imul
sbb
push
outs
mov
hlt
loopne
loopne
ffreep
cmc
dec
ins
cmp
aad
nop
push
mov
adc
dec
ja
sub
mov
sub
aad
mov
test
jmp
inc
pop
push
inc
out
rol
rcl
sbb
push
imul
push
aas
sbb
push
outs
mov
pop
pop
xchg
repnz
mov
inc
imul
add
push
xchg
jb
adc
mov
sub
lock
ror
dec
pop
shr
cmps
mov
add
outs
push
xor
mov
mov
or
push
loopne
add
mov
cmps
push
adc
xchg
or
pop
sub
dec
push
rcl
add
arpl
sbb
add
add
in
adc
test
inc
loopne
cld
out
add
int3
ins
pop
adc
inc
test
lock
add
pop
jo
cmp
or
jg
push
je
or
clc
adc
scas
(bad)
mov
adc
mov
mov
lea
xor
stos
inc
or
adc
or
adc
inc
and
sub
inc
adc
call
add
in
add
cmp
lods
mov
mov
outs
sbb
into
inc
loopne
adc
shl
das
cld
aad
push
cwde
mov
shl
aas
ja
fadd
pop
(bad)
imul
and
call
jo
xor
test
add
das
aaa
push
add
ror
or
add
das
int
xor
icebp
and
jbe
pop
cmp
xchg
jb
loope
cmp
adc
add
pusha
lods
cmps
das
das
(bad)
mov
jae
stc
cmp
push
jne
mov
mov
add
cmp
and
adc
dec
push
add
imul
shr
sti
mov
sub
imul
pusha
sub
adc
add
das
or
push
jo
in
or
mov
sub
loopne
ret
ins
or
das
or
or
das
imul
imul
or
call
bound
(bad)
push
inc
and
xor
or
jg
lods
jb
adc
xor
cs
adc
icebp
xor
add
adc
add
lsl
inc
lock
add
jnp
dec
jg
pop
lock
jg
jo
sub
data16
iret
(bad)
es
add
add
inc
iret
and
cmp
iret
xchg
les
out
mov
sub
iret
rol
mov
(bad)
cmp
mov
setge
jp
jo
stos
je
cs
cmp
jmp
stc
loope
ficomp
add
xchg
jbe
adc
dec
loopne
adc
xor
jmp
aad
dec
jle
jb
adc
jl
pop
cmp
sti
mov
shl
je
sbb
mov
call
push
cld
lahf
sbb
push
daa
cmp
dec
aas
sbb
add
sub
adc
mov
sbb
aam
ins
cld
daa
sbb
push
cld
dec
add
cmp
push
mov
aas
fwait
sbb
adc
test
fdivr
outs
sub
dec
cmp
adc
(bad)
cwde
add
mov
fadd
sub
enter
das
sbb
ror
mov
sbb
xor
jno
dec
sub
dec
lea
xchg
fs
xchg
jne
xor
jnp
loop
add
sar
add
test
aas
enter
add
stc
sbb
sbb
dec
push
ss
das
cli
mov
es
daa
sbb
bndstx
or
add
jg
add
mov
enter
cmps
sbb
add
test
inc
sbb
pop
pop
imul
xchg
xchg
cmp
inc
sbb
sbb
mov
test
loopne
jle
add
inc
movs
push
adc
rol
fsub
xchg
or
out
test
push
out
movs
les
adc
pop
jb
data16
cs
div
cwde
mov
mov
push
or
push
jg
xor
jg
stc
xor
jg
sub
fld
das
cmp
jg
pushf
sub
inc
and
jb
ins
sbb
jg
mov
movs
xor
cld
fwait
sbb
mov
add
jecxz
or
mov
and
cwde
and
and
mov
lock
enter
jle
add
test
xor
je
add
pop
sbb
stos
test
data16
or
out
fs
inc
inc
cmp
in
(bad)
js
mov
out
cmp
mov
int
add
push
ror
(bad)
xlat
fadd
adc
sub
inc
fdiv
adc
(bad)
sub
inc
add
lea
mov
std
ror
mov
push
movs
fstp
xor
pop
adc
mov
xor
cmp
lods
scas
mov
lods
or
ror
fist
jl
in
pop
aas
push
fldenv
and
leave
imul
xchg
loop
mov
or
pop
iret
mov
inc
sub
dec
imul
add
xchg
test
add
adc
pusha
sub
dec
pop
push
and
mov
test
mov
adc
daa
adc
dec
jo
mov
xor
mov
add
jl
and
push
das
and
aam
(bad)
xchg
adc
and
push
and
pop
les
jbe
movaps
pop
and
adc
cmovg
cmp
and
dec
daa
and
test
xchg
and
sub
push
sbb
sbb
loope
pop
mov
jo
adc
fdiv
or
fdivr
push
xchg
pushf
add
pop
aaa
xchg
add
add
mov
pop
mov
pop
and
dec
es
pop
add
adc
and
cmp
dec
push
dec
mov
or
sbb
xlat
das
cmp
ret
inc
and
pusha
das
mov
adc
mov
das
pop
sub
das
add
inc
repnz
imul
retf
lods
pop
dec
cmp
cmp
sti
add
xlat
mov
pop
push
add
mov
es
cmp
stos
add
cs
test
add
jp
jae
push
adc
rcr
push
dec
das
dec
adc
loopne
cmp
inc
jl
add
xor
and
push
add
adc
je
sub
shl
je
jmp
xor
sbb
and
iret
sub
movs
stos
pop
adc
push
add
mov
cmp
retf
(bad)
scas
loope
fs
inc
mov
imul
or
adc
jo
cmp
iret
jle
(bad)
inc
xor
aam
inc
dec
add
or
ret
das
add
push
dec
pop
sub
jb
push
lea
stos
push
test
loopne
and
adc
lock
cli
mov
or
sbb
mov
fcomip
bound
mov
sbb
call
into
outs
dec
(bad)
mov
retf
push
lahf
push
inc
pop
mov
sbb
jmp
fistp
and
cmp
sub
jmp
les
fistp
popa
pop
popa
je
sub
and
retf
data16
in
or
mov
and
leave
cs
pushf
dec
sub
xchg
cs
fbstp
add
xchg
sub
cmps
outs
dec
sbb
adc
add
loope
scas
xor
or
rcl
add
inc
add
loopne
add
mov
movaps
addr16
xor
aas
ret
and
js
loop
loop
(bad)
das
shl
scas
in
adc
inc
inc
sub
adc
sbb
(bad)
dec
movs
(bad)
leave
mov
mov
(bad)
sub
adc
mov
mov
inc
stos
stos
adc
adc
or
and
sub
nop
dec
das
cs
inc
ins
add
das
cld
mov
pop
outs
push
das
xor
ret
and
jno
ss
popa
xor
inc
xor
push
adc
sbb
das
jg
cmp
inc
jle
mov
stos
or
pop
or
ret
jg
and
leave
xor
mov
xor
cmp
pop
in
dec
cmp
mov
pop
and
xchg
or
inc
sbb
or
push
jns
cmps
adc
dec
shl
xchg
test
dec
xchg
movs
xchg
dec
pop
dec
sbb
xor
cmps
adc
mov
ins
addr16
imul
dec
pop
test
cmp
adc
out
dec
push
xchg
pushf
or
push
fsub
test
sub
dec
out
sbb
xchg
loope
xchg
pop
outs
popa
imul
out
adc
enter
into
test
push
mov
and
jb
cmp
inc
jbe
imul
in
push
adc
out
nop
pop
daa
or
daa
mul
cmp
jb
in
xor
dec
dec
cmp
aas
je
pusha
or
cld
out
nop
pushf
test
fsub
es
dec
mov
mov
jno
cmp
out
xchg
pushf
add
dec
lods
adc
out
stos
or
or
adc
cmp
push
and
cmp
cmps
or
adc
ret
push
xchg
pushf
cmp
jle
dec
fsub
test
inc
pop
jbe
lahf
or
(bad)
shl
fdiv
mov
adc
mov
and
or
dec
dec
rol
jo
and
cmp
mov
scas
sub
jbe
dec
inc
jg
pop
jns
call
rcr
push
out
sti
sbb
add
inc
add
push
pop
xor
add
mov
arpl
inc
icebp
cmp
sub
add
jmp
inc
jle
pop
sub
inc
js
sbb
ss
pop
aaa
and
ret
inc
xor
data16
arpl
xor
add
loop
pop
inc
test
nop
pushf
inc
test
xor
test
pop
dec
and
test
push
ror
dec
inc
addr16
push
and
in
adc
and
cmp
inc
mov
fwait
push
addr16
dec
add
pop
movs
pop
sbb
or
mov
mov
inc
push
and
push
mov
bound
pop
stos
xchg
adc
jno
mov
addr16
wrmsr
repz
repnz
inc
aam
cli
xchg
movs
adc
imul
pop
jg
and
loop
(bad)
dec
mov
cwde
xor
fsub
in
dec
mov
imul
push
dec
lock
or
or
push
hlt
imul
or
neg
dec
pop
scas
mul
imul
bound
test
add
rol
push
js
shl
xor
int
js
add
sbb
in
dec
or
rol
nop
mov
loope
movs
inc
cmps
xchg
movs
mov
cmps
adc
in
and
dec
ror
in
repnz
jmp
xchg
pushf
or
xor
inc
in
bound
add
es
cmps
dec
push
cmps
dec
adc
ret
sbb
cmps
pop
jo
popa
pandn
cmps
enter
dec
cmps
outs
sub
adc
outs
push
sub
pop
push
outs
push
psrad
mov
sub
jns
(bad)
in
test
sub
adc
pop
jb
mov
int3
push
outs
add
outs
mov
or
pop
push
mov
stc
adc
gs
xor
(bad)
fdivr
cmc
or
ja
test
aaa
ret
data16
add
loop
daa
jmp
ja
nop
pushf
in
cmp
mov
mov
hlt
ja
sub
leave
pop
and
(bad)
adc
cmp
xchg
cmp
pop
cwde
addr16
and
inc
in
sbb
pop
push
mov
fcomp
add
and
aaa
adc
adc
stos
pop
cld
pop
and
and
or
mov
adc
push
dec
cmps
push
xchg
pushf
or
and
pusha
mov
scas
lods
dec
sbb
dec
in
mov
mov
mov
pop
push
adc
outs
scas
shrd
mov
fwait
adc
dec
add
mov
js
push
sbb
or
pop
rcl
mov
lds
cmc
mov
dec
sbb
jae
cs
iret
adc
or
or
iret
push
xor
push
lea
dec
or
leave
add
pop
xor
xlat
not
lea
dec
pop
dec
inc
ret
outs
cdq
push
push
push
ins
popf
mov
inc
rol
inc
dec
bound
push
out
bound
xchg
inc
push
shl
adc
outs
cmp
push
mov
push
(bad)
jne
mov
push
cmp
jle
test
jg
lea
dec
cmp
inc
test
jg
mov
cld
pop
xor
or
adc
inc
fcom
pop
jl
or
pop
sub
mov
adc
fistp
push
or
and
cmps
fisttp
adc
mov
movs
ret
dec
lock
(bad)
ds
and
push
or
pushf
or
and
sub
cmp
mov
cmp
movs
retf
xchg
add
adc
js
inc
mov
jl
mov
sbb
sbb
sub
or
mov
and
mov
stos
inc
pop
push
rcr
dec
xlat
je
cmps
cmc
pop
call
les
sbb
test
fstp
add
loop
fist
daa
hlt
sub
pop
adc
lods
push
mov
push
pop
mov
xchg
and
mov
ret
xchg
inc
pop
cmp
lods
mov
mov
neg
sbb
push
in
add
and
adc
mov
sub
data16
cmp
pop
ins
mov
adc
rol
inc
aaa
xchg
mov
rol
int
mov
fs
daa
adc
daa
fadd
sbb
out
adc
add
aad
leave
dec
js
gs
pop
sbb
add
gs
and
inc
jo
dec
cmps
add
cld
pop
imul
(bad)
jl
pop
test
cmp
inc
pop
sar
loopne
sbb
adc
pop
leave
sub
ja
cs
pop
push
xor
and
movs
pop
lods
rol
pop
jmp
rol
adc
adc
xchg
adc
sbb
mov
xchg
lods
out
and
push
sbb
mov
inc
fild
or
dec
gs
hlt
xchg
and
mov
pop
dec
mov
hlt
daa
push
cmp
add
out
mov
pop
leave
push
(bad)
mov
out
cwde
jge
add
pop
shl
es
mov
adc
mov
add
aam
leave
jle
fdiv
or
ins
and
or
fwait
add
(bad)
cmc
shl
adc
adc
shrd
inc
adc
paddq
add
nop
add
pop
imul
add
test
in
pusha
lea
or
and
jg
push
push
jb
xor
add
sbb
daa
mov
imul
adc
mov
and
aam
push
stos
adc
adc
push
and
add
or
inc
int
sbb
(bad)
mov
jmp
jo
xlat
add
out
dec
cmps
sub
or
imul
adc
femms
nop
pushf
in
inc
pushf
loope
cld
dec
push
leave
dec
jno
je
add
das
or
loopne
inc
adc
jbe
or
nop
or
aaa
ror
pop
mov
hlt
jb
(bad)
xchg
push
pop
xchg
push
jb
xor
adc
inc
pop
inc
test
fdivr
movs
pop
fmul
psubusb
dec
sbb
test
jno
das
scas
test
sub
sbb
cmp
aam
and
sbb
xchg
sbb
das
jno
push
dec
lea
and
dec
cmp
cmp
pcmpgtb
das
jbe
sahf
cmp
pusha
int3
das
jbe
jbe
mov
add
dec
outs
aas
sbb
add
outs
aas
sbb
and
iret
mov
arpl
sar
pushf
cmp
out
add
adc
aaa
pusha
dec
dec
cmps
or
in
sub
add
or
cmps
adc
popf
and
nop
xchg
add
shr
cmps
js
or
lahf
adc
push
sbb
test
jle
and
push
jp
shr
outs
ret
add
push
mov
sahf
jmp
inc
ret
in
mov
adc
fadd
jb
pop
(bad)
jmp
inc
sti
jmp
test
lea
mov
mov
push
mov
inc
dec
cmp
cmp
or
into
or
fdivr
ds
sbb
push
cmp
adc
pop
or
mov
xchg
add
retf
sbb
iret
push
dec
xor
ja
xor
ror
mov
and
nop
xchg
jecxz
inc
and
outs
pop
and
push
add
dec
inc
aaa
movs
test
mov
push
movs
mov
mov
(bad)
inc
nop
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
dec
outs
or
popaw
in
bound
adc
repnz
sbb
mov
outs
dec
imul
jne
je
add
rol
add
(bad)
cld
add
add
push
add
xchg
ret
adc
pop
hlt
cs
mov
or
fld
jecxz
in
int
or
clc
cs
in
fiadd
mov
push
add
out
cmp
cmps
push
push
xor
mul
js
int3
and
out
mov
movs
inc
push
xor
mov
clc
mov
push
clc
pusha
ins
rol
add
jle
add
inc
(bad)
mov
pop
fisubr
xor
cmp
shl
pop
mov
fistp
sbb
add
gs
data16
nop
add
adc
pop
jnp
sbb
outs
add
cmps
outs
xchg
jb
arpl
xchg
mov
or
or
int3
ins
dec
(bad)
or
inc
pop
setg
mov
test
adc
xchg
mov
ds
cmp
sbb
sbb
(bad)
popa
xchg
pop
(bad)
and
fmul
out
mov
lds
inc
add
sub
fst
adc
into
sbb
push
cmp
mov
ds
pop
int3
test
mov
out
mov
dec
adc
pinsrw
add
into
push
or
and
dec
outs
jbe
inc
jb
popa
jns
popa
mov
popa
addr16
xchg
add
push
xor
push
inc
xchg
mov
mov
jo
jb
mov
and
dec
pop
push
outs
and
cmp
rol
jnp
int
outs
jnp
data16
jg
test
sbb
inc
imul
ins
imul
or
lahf
pop
add
pusha
call
(bad)
sbb
ins
ins
gs
shr
adc
adc
push
jge
dec
or
rcr
mov
ins
xor
add
ins
popa
jae
gs
loopne
retf
pop
add
xchg
sub
dec
cs
add
add
sbb
xor
push
(bad)
add
push
icebp
mov
enter
add
xchg
rol
daa
jmp
adc
jbe
jle
xchg
shl
lock
add
mov
outs
mov
les
add
mov
push
mov
jo
rol
mov
cmps
pop
fnstsw
add
sub
mov
push
or
and
push
cmp
stc
xor
jnp
loop
ins
ss
(bad)
in
pop
mov
cwde
(bad)
movzx
and
sbb
or
mov
enter
movs
rol
add
or
mov
shl
shr
adc
or
push
or
mov
fnsave
pusha
(bad)
push
inc
pushf
jae
pusha
shl
add
mov
or
and
sub
jo
mov
into
xchg
fistp
push
sbb
mov
push
push
ja
popf
push
cmps
push
mov
fiadd
call
sub
dec
fwait
push
int3
add
pop
mov
add
jmp
test
paddd
or
add
sbb
mov
jo
fnstsw
inc
add
fild
sbb
fistp
or
mov
js
push
loopne
xor
sbb
xor
xchg
mov
in
bound
sub
stc
add
adc
jnp
or
pop
loopne
loopne
dec
xor
mov
add
and
xor
or
lahf
inc
sub
ins
push
movs
sbb
rcr
lahf
int
push
fsub
jno
lahf
push
add
inc
mov
lahf
xchg
pop
mov
call
or
jl
enter
imul
pop
cmp
movs
addr16
add
aas
sub
lahf
je
fld
mov
dec
test
popf
or
cwde
aaa
rcr
push
fild
mov
sbb
(bad)
sub
or
push
(bad)
enter
movs
inc
addr16
adc
jmp
ja
int
sbb
and
push
movs
adc
pop
arpl
inc
mov
and
xor
movs
mov
movs
and
int
sbb
push
xchg
ret
inc
jecxz
jmp
push
mov
imul
inc
inc
mov
sbb
das
cmp
popa
sub
outs
push
dec
(bad)
loopne
or
aas
inc
fdivr
imul
pop
ficom
stos
or
mov
xor
cmp
adc
dec
outs
or
inc
pop
push
or
cmp
cmp
inc
pop
lds
jno
add
xor
in
inc
pop
pop
scas
push
add
mov
or
and
mov
push
pop
scas
sub
adc
mov
ss
push
scas
pop
enter
out
cmp
repnz
fistp
push
jmp
invd
cmp
pop
cs
pop
(bad)
movs
out
stos
nop/reserved
into
sbb
push
cs
push
push
adc
movs
bound
jmp
(bad)
ror
cmp
nop
pop
int
int
pop
pusha
inc
jns
jns
add
push
cmc
jns
add
retf
jns
add
sbb
lds
rcr
mov
push
dec
dec
inc
outs
jne
dec
popa
bound
xlat
add
or
out
jp
inc
imul
js
or
push
inc
fdiv
push
ret
jns
mov
sub
sbb
push
mov
push
fwait
das
mov
inc
mov
sub
ds
outs
lock
push
fs
js
add
dec
mov
popa
lock
jnp
hlt
pop
cmp
inc
inc
pop
dec
pop
cld
inc
xor
inc
and
push
jl
inc
jecxz
outs
jb
sbb
push
inc
jb
sbb
or
fs
pcmpgtw
rcl
adc
inc
popa
add
add
add
and
or
push
xchg
pop
add
ins
xchg
and
mov
adc
add
or
jmp
cmp
dec
add
pop
inc
jne
jmp
out
stos
pcmpeqd
sbb
neg
pop
lods
push
loop
sbb
and
mov
inc
jno
dec
movs
in
in
push
test
es
js
push
fwait
cmc
push
mov
and
dec
jnp
ror
arpl
scas
shl
shl
stos
and
fsubr
jecxz
mov
pusha
not
dec
jge
jo
in
sub
sub
jo
add
add
cmc
fcmovne
invd
lods
inc
dec
dec
push
popa
test
push
daa
mov
out
mov
scas
rcpps
retf
imul
enter
cmc
sbb
leave
or
mov
xchg
daa
xor
call
xchg
xchg
xchg
xchg
js
xlat
cld
leave
leave
leave
enter
(bad)
fsub
in
in
mov
popa
cwde
sbb
in
loope
mov
addr16
xor
in
call
xchg
push
pop
push
mov
dec
jmp
shl
inc
aam
mov
cmp
dec
push
pop
push
movs
mov
pop
and
push
add
ret
test
pop
xor
in
mov
pushf
mov
daa
scas
adc
dec
sub
outs
jns
sub
inc
mov
call
popa
dec
cmovns
std
sahf
add
addr16
push
adc
sub
cmp
xor
mov
add
fs
mov
fwait
jp
push
popa
ins
jne
arpl
jmp
rcl
inc
sub
pop
stos
xchg
or
ins
cmp
outs
or
add
sbb
call
add
jb
jae
add
or
enter
out
inc
cmp
call
scas
mov
or
dec
xchg
and
das
leave
fwait
les
ror
lods
cli
xchg
or
pop
xor
inc
or
dec
push
popf
out
jae
imul
sbb
dec
iret
dec
imul
les
fisubr
ffreep
or
push
loopne
mov
sbb
push
or
lea
push
add
add
jb
or
sbb
mov
jmp
sbb
or
jb
adc
fcom
and
sbb
aas
add
scas
(bad)
mov
or
push
add
push
mov
(bad)
xor
xchg
xchg
dec
shr
or
ja
xor
mov
dec
jg
fld
jecxz
out
dec
popa
pop
add
inc
mov
test
es
int
pusha
push
cmp
add
pop
aaa
jae
je
imul
stos
and
dec
popw
mov
iret
imul
cmp
cmps
or
adc
add
daa
jns
retf
sub
fisttp
push
outs
fistp
stos
ret
pop
hlt
sbb
ins
or
sbb
loop
jns
or
int3
movs
add
adc
and
stos
jb
mov
test
aaa
adc
test
or
ins
sbb
mov
jae
or
test
xchg
xor
or
out
push
sub
sub
inc
and
outs
fsubr
movs
jmp
xlat
in
sub
arpl
mov
xor
int
loope
or
or
and
mov
hlt
xor
cmp
adc
fistp
fsub
arpl
add
ins
jnp
jbe
push
mov
repnz
or
mov
imul
add
xor
and
shl
push
aas
aaa
aaa
push
add
out
inc
adc
xor
adc
jl
add
push
ret
adc
push
sub
out
in
sbb
and
lahf
pop
mov
add
sub
xchg
mov
or
mov
push
mov
cmps
push
les
repnz
sub
jo
sbb
mov
pop
(bad)
cld
js
add
scas
inc
lods
add
int
xor
mov
sub
push
retf
jns
adc
cmc
(bad)
aaa
adc
sbb
pop
push
mov
fwait
cwde
xchg
aaa
dec
inc
scas
sub
dec
mov
je
xlat
push
push
es
xchg
push
outs
dec
mov
xor
push
mov
add
pop
pop
jbe
or
add
pusha
enter
stos
(bad)
mov
retf
adc
and
test
rcr
xchg
sbb
push
xchg
scas
std
push
mov
and
push
shr
inc
xchg
dec
pop
(bad)
cld
inc
scas
push
mov
mov
jecxz
clc
jns
aaa
cmp
add
push
push
fiadd
push
test
fstp
div
inc
ja
fnstsw
bnd
pushf
not
push
jl
div
or
js
push
ror
cmp
test
not
mov
inc
cmps
add
neg
rol
cmps
into
leave
ins
pop
mov
lahf
mov
div
push
div
leave
leave
ins
mov
pop
arpl
fwait
xlat
in
fs
rcl
dec
outs
sub
cmp
retf
daa
daa
and
ret
dec
xchg
int
xchg
xchg
daa
sbb
bound
iret
repz
ds
leave
leave
jne
clc
xor
in
in
fs
jge
std
aas
in
push
addr16
jae
mov
out
jmp
not
push
call
add
cmp
mov
dec
or
pop
test
mov
sub
cmps
mov
xor
jne
loopne
pop
push
mov
(bad)
aam
adc
inc
or
push
xchg
jmp
jne
(bad)
cdq
adc
add
mov
(bad)
nop
cwde
xor
jae
push
(bad)
xchg
and
cmc
adc
(bad)
cmp
adc
das
pop
push
or
(bad)
pop
inc
adc
aam
or
aad
mov
mov
adc
cmps
push
pusha
rol
cmp
js
pushf
or
sub
push
add
add
jns
add
adc
arpl
arpl
inc
dec
movs
movs
arpl
(bad)
dec
inc
fadd
xor
cmp
or
aaa
dec
push
sub
xchg
aaa
mov
imul
or
aaa
adc
or
push
aaa
jge
rcl
aaa
inc
add
cmp
(bad)
aaa
jns
inc
cmps
add
xchg
shr
jecxz
dec
or
sub
cmp
aaa
add
sub
jne
sub
call
lods
mov
mov
(bad)
test
dec
lea
xchg
and
fdiv
push
and
pop
adc
js
(bad)
int3
lods
jg
pop
movs
push
mov
or
adc
ffree
inc
mov
mov
dec
inc
cmp
mov
mov
pop
bound
sub
dec
and
scas
or
ins
movntps
mov
(bad)
into
movaps
xlat
icebp
add
retf
popf
out
adc
pop
mov
cmps
push
test
ror
(bad)
cmp
mov
(bad)
sub
adc
dec
leave
inc
pop
add
loop
ret
adc
adc
or
sub
movs
sbb
xchg
aad
popf
cli
mov
cmp
aaa
aad
add
dec
popf
and
cmps
das
iret
cwde
push
aad
jne
int
jmp
into
push
mov
mov
int
imul
das
jp
pop
fisttp
in
outs
clc
push
add
push
popf
outs
(bad)
fadd
xor
daa
or
dec
sub
cmps
and
push
pop
mov
add
dec
fld
ins
push
add
push
inc
aas
pop
daa
sbb
xchg
sbb
sub
lods
mov
shr
cmps
mov
pop
fild
outs
push
(bad)
out
cmps
fisubr
xor
scas
movs
cli
jg
imul
int3
jl
nop
jnp
xor
cwde
push
add
or
cmp
ror
xor
sub
imul
push
pop
pushf
scas
pop
test
jle
jne
outs
movzx
scas
sbb
(bad)
jge
cs
push
scas
cwde
push
fcom
lods
retf
sar
jp
inc
sahf
pushf
mov
and
dec
enter
jle
daa
daa
daa
mov
aas
(bad)
leave
enter
fbld
xlat
push
in
leave
leave
xchg
in
fs
in
jb
xor
adc
inc
nop
in
fnstsw
je
fisubr
push
xor
sti
push
mov
and
push
cmovo
int
call
lea
dec
dec
shr
or
int
sub
test
mov
retf
xor
test
int
cmp
cmp
int
jne
inc
mov
and
push
popf
int
ins
(bad)
stos
sbb
test
loopne
int
push
pop
mov
shl
xor
int
add
popa
das
int
sub
gs
pop
pop
mov
ror
add
int
add
mov
inc
cmp
push
int3
pushf
xor
loop
or
fwait
inc
dec
movs
sbb
add
dec
movs
js
pop
shl
sub
sbb
cmps
fsubp
scas
mov
stc
push
pop
add
ss
mov
outs
mov
rol
mov
push
retf
das
out
minps
or
push
adc
cmp
adc
(bad)
and
sub
lods
and
mov
or
and
mov
jge
dec
les
and
adc
adc
sbb
and
or
and
adc
lahf
and
(bad)
adc
and
(bad)
bound
je
in
adc
add
jo
and
loopne
in
cmp
jns
sub
sbb
pop
fwait
or
sbb
daa
fnstcw
test
mov
xchg
rcr
jmp
test
push
dec
mov
inc
add
xchg
push
add
retf
push
mov
fwait
aam
fadd
or
shl
xchg
sbb
(bad)
inc
dec
sahf
fimul
retf
stos
outs
imul
(bad)
int3
add
push
mov
push
and
add
jmp
adc
repz
int3
jns
add
ins
mov
add
fisubr
fstp
test
add
ficom
sub
add
adc
imul
cwde
iret
push
movs
adc
mov
ja
ds
inc
mov
into
jmp
sub
ret
push
or
call
or
aaa
test
mov
test
mov
mov
xor
mov
push
mov
addr16
pop
add
or
push
dec
jbe
pop
loope
push
mov
mov
mov
or
in
repz
inc
loope
jg
sbb
imul
shl
and
mov
sbb
cmp
push
jmp
pop
add
lods
mov
das
push
(bad)
call
lds
jg
loopne
push
fdivr
mov
pop
dec
adc
sub
and
push
into
xor
xor
push
add
or
jl
jmp
and
fistp
or
and
(bad)
stos
and
retf
xor
fstp
cmp
sbb
iret
mov
lods
pop
into
adc
pop
scas
jge
icebp
dec
sbb
mov
repnz
jmp
addr16
fdiv
jmp
push
stos
mov
(bad)
lock
popa
imul
mov
mov
je
jbe
pop
lock
not
push
jge
add
sub
inc
dec
pusha
inc
inc
mov
pop
cmc
loopne
inc
sbb
test
inc
inc
test
add
xor
and
mov
bound
sub
mov
lds
add
dec
pop
popa
mov
ffreep
or
jns
and
sub
jecxz
add
xor
sub
inc
rcl
or
mov
sbb
in
aam
sub
das
inc
push
aaa
js
mov
cld
(bad)
das
sub
je
imul
or
sbb
(bad)
cmps
ror
ins
int
int
xor
cmps
and
cmps
dec
cmps
push
movs
or
cmps
or
and
iret
shr
sub
push
adc
or
mov
out
push
addr16
adc
fimul
inc
shr
les
pop
push
es
das
add
sar
div
cmp
scas
jl
je
add
add
test
outs
pop
adc
sar
xchg
push
ret
or
sbb
xor
dec
in
les
fadd
(bad)
ror
addr16
aam
mov
or
pop
ja
mov
clc
(bad)
sub
jmp
and
bound
and
cmp
mov
pop
or
mov
lods
cld
repnz
fsub
in
popa
jmp
call
bound
push
rol
adc
jo
mov
sub
push
mov
pop
xor
imul
push
or
jno
dec
outs
jae
add
jecxz
punpcklwd
push
ret
mov
in
mov
push
xor
cmp
out
push
mov
cmovle
in
in
cmps
fsubr
lock
jb
pop
test
inc
icebp
mov
sbb
pushf
pushf
pushf
pushf
push
jnp
call
xor
mov
cmp
aas
xadd
je
shl
repnz
pop
inc
push
add
push
jmp
rol
cmps
push
xor
mov
das
cmp
cmps
dec
dec
and
dec
or
push
add
ror
sub
mov
mov
fbstp
jo
push
push
enter
xor
push
inc
jns
add
add
nop
or
or
stc
xchg
cdq
pop
and
sbb
adc
or
jae
fld
xor
out
push
push
add
or
test
push
xchg
das
sbb
inc
(bad)
leave
fwait
add
xor
gs
inc
or
mov
mov
or
or
mov
add
mov
push
jno
pop
inc
or
inc
or
xor
push
sub
add
push
arpl
push
mov
push
aas
mov
loope
scas
sbb
push
rol
adc
add
xchg
adc
add
pop
sbb
jg
pop
push
adc
mov
push
cmp
shr
inc
or
mov
ins
imul
inc
mov
add
sub
push
xor
push
jge
pop
and
push
inc
add
push
lods
pop
push
mov
push
rol
xchg
dec
xchg
push
or
je
xor
push
lods
mov
aaa
inc
add
mov
push
jecxz
inc
push
mov
adc
push
mov
scas
adc
pop
mov
out
in
add
sbb
cmp
add
mov
enter
inc
and
mov
or
inc
mov
or
ret
inc
mov
inc
lea
push
mov
sbb
sub
(bad)
stc
mov
fdiv
lahf
mov
or
add
push
push
pop
cmp
lahf
push
mov
hlt
push
js
add
pop
clc
daa
push
clc
lahf
fcomp
je
inc
jle
jae
mov
lahf
jne
or
or
sbb
lahf
mov
add
sbb
add
sub
sub
jnp
sbb
mov
lds
adc
sbb
sub
add
inc
daa
lahf
cmp
pop
add
pop
shr
rcl
test
mov
inc
xlat
jg
loopne
mov
(bad)
adc
lahf
(bad)
loopne
mov
setg
inc
add
addr16
test
adc
add
add
and
div
inc
push
test
idiv
lahf
in
add
push
dec
ins
adc
pop
mov
push
pusha
mov
into
(bad)
sar
nop
cs
and
xor
and
sub
inc
ins
je
fisttp
fcomip
jl
mov
add
xlat
adc
add
xor
jns
aas
push
dec
sub
sbb
add
loopne
fs
add
cmps
out
dec
mov
or
add
ror
add
inc
mov
push
out
mov
fiadd
add
jecxz
sub
outs
test
jg
adc
mov
test
mov
adc
mov
inc
fild
pusha
dec
rsm
mov
ret
push
addr16
je
jo
mov
leave
and
iret
cmp
rol
fnstsw
sbb
jmp
cdq
xor
push
(bad)
add
ret
add
add
loope
mov
xor
inc
inc
clc
test
and
or
xor
fdiv
sbb
xor
sub
ss
xor
loope
aas
icebp
push
in
loope
or
js
mov
or
cmp
lock
lods
or
xchg
pop
int
or
add
loope
ret
push
pushf
and
aas
add
ds
das
dec
push
faddp
sub
imul
mov
push
outs
or
adc
shufps
loope
fild
stc
(bad)
cmp
sbb
loope
mov
add
or
jne
add
dec
jo
shl
xchg
retf
inc
mov
in
adc
test
shl
rcr
pop
adc
mov
pusha
rcr
ret
push
bound
sbb
xor
dec
mov
and
mov
sub
add
push
cmp
add
in
pop
(bad)
sbb
push
pop
push
add
add
fsub
test
into
in
add
sahf
scas
dec
sete
xchg
mov
pusha
xor
mov
arpl
add
sbb
sub
outs
push
mov
mov
fdivr
mov
repz
add
adc
or
pusha
xor
mov
test
sbb
pop
nop
das
scas
push
cmp
stc
cmp
sar
push
lock
pop
ds
mov
mov
scas
adc
repz
test
add
or
and
movs
arpl
retf
mov
scas
mov
xor
cld
push
mov
js
mov
pusha
mov
add
cdq
adc
xor
ret
or
fs
ins
outs
(bad)
dec
add
inc
dec
aad
sbb
aad
repz
xlat
pop
lock
fdiv
inc
or
out
xchg
add
inc
cs
adc
xlat
xchg
jle
jo
pop
mov
or
sbb
jge
add
in
ror
xor
sbb
in
addr16
aaa
sbb
jo
push
in
push
div
add
push
push
mov
(bad)
adc
lods
sbb
or
lahf
scas
pop
in
mov
data16
adc
or
test
pop
adc
mov
push
push
cwde
ins
push
out
sbb
call
sub
mov
pavgb
nop
jmp
xor
sbb
movs
jnp
mov
pop
push
sbb
or
inc
stos
add
retf
(bad)
shr
rcl
mov
mov
sub
pop
sub
push
ss
mov
add
xchg
cmp
and
test
push
and
aam
dec
adc
add
adc
add
nop
cdq
out
mov
pop
imul
loopne
or
push
lods
push
xchg
mov
mov
push
nop
add
int
cmp
pop
adc
add
push
pop
mov
jle
test
das
jo
(bad)
xchg
inc
lock
mov
mov
pusha
adc
leave
stos
leave
ins
inc
add
sub
addr16
dec
push
leave
adc
xchg
mov
mov
add
and
cdq
(bad)
pushf
cmp
adc
mov
adc
mul
test
and
push
cld
push
sub
idiv
mul
lar
test
stc
test
mov
mov
adc
cmp
or
and
sub
movs
retf
sub
sub
adc
and
sbb
pop
or
je
inc
adc
vpshufd
shr
sbb
rcl
mov
pop
mov
add
adc
push
je
push
xor
aam
adc
outs
sar
cdq
push
mov
pop
out
jmp
mov
scas
lods
lods
inc
push
push
enter
pop
pop
dec
mov
pop
ja
add
outs
mov
jle
mov
les
add
dec
push
sub
lea
sbb
sub
sbb
sub
cmp
jo
inc
sub
jo
add
dec
inc
mov
repnz
and
repz
pop
aad
sub
adc
xchg
cld
dec
add
and
jo
mov
shl
js
pop
ins
fcomp
mov
out
mov
dec
mov
stc
inc
xor
test
mov
xchg
xor
sub
or
inc
stos
add
retf
bound
push
test
scas
pop
aad
movs
stc
shl
popa
lock
lea
loope
add
add
adc
xchg
sbb
daa
inc
or
push
jns
scas
or
push
adc
sbb
shl
sub
fild
jae
mov
cmp
add
sbb
rcr
pop
mov
fnstsw
into
cs
pcmpeqd
(bad)
sub
xor
cmp
xor
call
loope
loope
les
aaa
sub
addr16
and
inc
inc
add
pusha
loope
loope
js
ret
mov
inc
loope
add
sbb
lahf
rol
pop
aad
add
pusha
loope
sbb
fld
pop
pop
js
xchg
push
fisubr
js
add
fisttp
mov
into
imul
push
pusha
jg
mov
lock
fisubr
push
cmps
pmaxub
or
adc
loope
cwde
adc
xchg
loope
adc
or
loope
add
xor
loope
sbb
nop
stos
loope
loope
and
retf
loope
bound
stos
add
jnp
adc
loope
or
fiadd
fs
adc
mov
jmp
add
dec
rcr
and
pusha
daa
pusha
out
out
add
popa
fs
repz
scas
jns
add
ins
sbb
add
cwde
fbstp
popa
lds
and
int3
es
mov
pop
sub
add
push
jo
xor
push
ds
psrad
and
xor
xchg
push
pop
xlat
mov
add
sub
add
pop
add
or
pop
or
xlat
sub
aam
(bad)
mov
das
jecxz
sbb
sbb
xchg
pop
or
dec
adc
ins
lds
aam
add
in
out
ss
dec
into
pop
mov
out
loope
movs
rcl
push
cld
mov
sub
(bad)
orps
add
sub
mov
adc
fisub
(bad)
pusha
popa
sbb
(bad)
mov
push
mov
pop
sbb
pusha
int
and
(bad)
pop
nop
sub
(bad)
retf
sbb
sbb
cmps
pop
int
rcr
and
or
cmps
les
inc
add
and
pusha
scas
xor
pushf
sub
scas
(bad)
arpl
push
mov
popa
imul
inc
add
fwait
mov
arpl
adc
mov
outs
pop
es
rcr
sbb
pop
fsub
jle
push
sub
add
daa
pop
adc
daa
retf
cmp
test
and
mov
pop
dec
adc
add
mov
lea
sbb
sbb
addr16
aaa
sub
jo
xchg
pop
push
div
add
xchg
mov
das
adc
pop
sbb
xchg
sbb
and
mov
mov
sub
mov
pop
jp
mov
movs
(bad)
mov
pop
cmp
push
ins
sbb
or
pop
xor
mov
mov
movs
mov
push
jmp
or
fadd
mov
movs
xor
loop
bswap
jne
add
push
pop
sbb
mov
sub
movs
or
setno
mov
inc
and
aad
cmps
sbb
pusha
clc
push
adc
out
rol
loope
inc
or
xor
sub
movhps
hlt
sub
sbb
scas
sar
push
sub
pop
push
imul
je
scas
shl
mov
add
pop
add
cmp
add
push
scas
jo
pop
mov
movzx
add
scas
sbb
cmp
inc
add
ror
mov
(bad)
mov
mov
dec
inc
push
outs
movhps
add
pop
cmp
sub
adc
inc
and
pop
mov
in
mov
pop
add
xor
das
mov
push
inc
and
fist
clc
push
push
mov
loopne
or
fistp
pop
mov
das
into
invd
inc
pop
pop
fisub
mov
outs
addr16
ja
push
add
inc
sub
ja
ja
add
xchg
int
xchg
and
push
add
nop
inc
mov
ja
fsub
aam
idiv
fist
jo
adc
cmp
cmps
test
imul
sbb
sub
aas
test
xor
adc
sub
and
movs
icebp
pop
scas
pusha
shr
add
mov
xchg
jne
lds
jo
mov
add
xor
mov
add
pop
xor
push
xor
mov
ja
fcomp
jo
inc
test
daa
ds
sub
ins
or
or
xor
push
jne
xor
pusha
ins
jne
add
mov
jne
rol
jne
mov
mov
mov
loopne
mov
les
jne
pop
fnsave
shl
xchg
fmul
add
pop
add
loopne
jbe
xor
xor
retf
pop
and
jl
test
pop
fmul
inc
mov
rcl
push
loopne
add
shl
jne
xor
test
sbb
pusha
jg
int
jo
add
xchg
adc
test
xor
rol
call
(bad)
adc
sbb
sub
or
nop
and
ss
push
addr16
int3
test
and
addr16
xor
movs
or
and
push
pop
xor
adc
cmp
inc
and
pop
push
cs
sub
mov
fucomi
mov
push
pusha
push
add
cmp
loopne
loopne
adc
dec
cmp
fcomp
jg
(bad)
pop
dec
and
inc
mov
xor
add
sub
stos
sub
ins
inc
stos
stos
mov
sbb
push
mov
mov
stos
or
mov
adc
imul
imul
stos
inc
xor
pop
and
mov
in
mov
push
out
add
cmp
or
add
shl
mov
sbb
push
dec
pop
mov
int3
mov
into
sbb
js
push
adc
les
cmp
rol
mov
push
pop
cmp
pop
add
cmp
cmp
cmp
cmp
mov
jnp
mov
sub
mov
add
inc
pop
mov
or
fndisi(8087
test
ins
shl
rcr
mov
mov
xor
outs
(bad)
adc
data16
arpl
popa
je
push
push
sub
inc
in
jecxz
add
add
adc
dec
push
dec
inc
pop
dec
inc
dec
dec
inc
inc
push
inc
push
mov
lahf
and
fistp
push
bound
js
clc
and
jae
add
add
push
adc
cmp
sbb
dec
inc
pop
icebp
cs
mov
jne
and
and
ins
pop
popa
arpl
dec
jae
ss
stc
adc
jg
pop
add
fnstenv
mov
imul
pop
add
fs
adc
sbb
mov
push
or
jae
jne
sub
push
je
outs
push
and
ins
and
xchg
ins
gs
dec
daa
push
mov
sbb
mov
jae
je
mov
push
je
movs
sub
lock
jnp
adc
and
fs
hlt
add
mov
or
inc
(bad)
outs
stos
popf
push
sbb
retf
pop
cdq
jbe
dec
imul
and
pop
jo
retf
(bad)
in
(bad)
mov
inc
and
xchg
add
hlt
test
je
mov
mov
mov
ins
adc
or
loop
mov
lea
jl
mov
shr
add
mov
setbe
into
inc
repnz
pusha
xchg
inc
inc
adc
or
jns
inc
ins
ds
or
mov
aad
inc
iret
inc
in
jb
pop
and
or
cdq
ret
dec
push
mov
cmp
inc
add
mov
jne
cmp
xchg
jnp
mov
aam
push
dec
jbe
ret
pop
jno
and
adc
jno
jb
fs
ins
jo
jns
pop
mov
inc
fwait
pop
adc
shl
leave
dec
mov
adc
mov
call
jmp
in
arpl
dec
push
sub
(bad)
je
push
jae
in
cdq
popf
pushf
sbb
scas
inc
adc
out
les
iret
data16
(bad)
dec
add
mov
sbb
ss
iret
repz
dec
or
enter
int
repz
push
faddp
pop
repz
mov
data16
outs
jnp
fiadd
mov
enter
fistp
mov
cwde
push
in
push
dec
retf
push
jnp
int
sub
lods
dec
mov
dec
xchg
push
sahf
jl
mov
rcr
adc
inc
(bad)
jle
jo
cmove
sub
adc
and
scas
je
ins
push
push
cmp
clc
or
dec
push
inc
cwde
leave
add
xor
add
pushf
ret
pop
ins
or
cmp
ret
cmp
or
gs
jnp
cmp
jae
sar
jp
mov
loope
mov
add
fs
lds
call
dec
(bad)
aaa
xchg
and
jg
push
add
out
mov
push
hlt
push
inc
movs
ss
dec
dec
popa
das
pop
sbb
dec
ror
push
cs
sar
mov
imul
fld
mov
ss
mov
fadd
push
shr
fisub
mov
push
nop
push
hlt
mov
test
push
ins
push
mov
ds
les
cmp
call
jbe
push
mov
xor
sbb
cs
dec
outs
push
push
pop
mov
push
loopne
jno
jb
je
neg
repz
jle
push
mov
(bad)
loop
adc
sub
mov
in
ins
jl
daa
sub
popa
push
sub
or
sbb
shl
or
push
jbe
loope
nop
loope
inc
(bad)
pusha
(bad)
cli
ja
push
popa
jbe
outs
popa
bound
sti
jge
arpl
imul
dec
data16
mov
dec
popa
mov
jb
push
andps
outs
inc
fisub
pop
pop
aaa
add
or
mov
fmul
gs
push
jo
dec
ret
jp
(bad)
mov
jne
dec
inc
xlat
icebp
inc
in
mov
addr16
ins
inc
js
sub
jecxz
inc
dec
les
cmp
addr16
xor
das
dec
gs
fsubr
push
mov
lea
add
push
jns
add
cdq
dec
add
sbb
test
add
mov
cmp
mov
inc
ds
mov
sub
nop
imul
mov
out
add
cs
sub
sub
movs
imul
dec
pop
cwde
xor
inc
dec
outs
pop
(bad)
rol
pop
add
call
call
add
jmp
fsubr
mov
call
or
adc
inc
push
push
out
jmp
jge
xor
dec
xor
push
(bad)
out
js
stos
adc
mov
pusha
(bad)
loop
mov
inc
jb
mov
mov
loop
test
push
inc
dec
ja
hlt
aam
push
stos
daa
ins
push
and
outs
jns
add
xor
inc
xor
and
es
out
adc
arpl
pop
or
shl
jae
mov
push
push
mov
inc
inc
movs
adc
xchg
push
test
sub
adc
bound
ins
xlat
aaa
jne
inc
pop
or
cli
ss
mov
add
inc
mov
push
jbe
pop
in
add
ins
mov
dec
sbb
mov
jnp
sbb
mov
push
iret
sub
sbb
mov
sbb
add
xchg
and
icebp
adc
push
and
and
jl
enter
xchg
and
dec
sub
jl
das
and
mov
mov
xlat
loopne
sub
pop
inc
push
pop
adc
ins
mov
and
add
int3
(bad)
dec
int
pop
mov
ja
jmp
jmp
dec
xor
add
add
jo
daa
and
dec
add
pusha
mov
inc
cmp
dec
sub
(bad)
sub
pop
inc
xchg
jnp
inc
ror
mov
or
xchg
mov
pop
mov
inc
dec
ja
inc
or
leave
inc
pop
shr
inc
add
in
enter
push
test
or
(bad)
faddp
sahf
push
adc
out
and
inc
push
test
push
cwde
movs
popf
data16
aas
cmp
jo
push
dec
out
rcr
stc
inc
jmp
push
push
sbb
add
inc
or
mov
(bad)
and
dec
mov
call
add
das
into
push
pushf
sbb
cmp
aas
mov
cmp
push
push
ins
int3
fimul
iret
repz
fsub
imul
sub
dec
pop
push
out
cwde
test
mov
out
enter
pop
out
sahf
fcomp
loopne
mov
jb
add
les
push
ins
outs
imul
pop
xor
and
dec
pop
(bad)
and
push
add
xlat
cmp
and
popa
jae
add
ins
or
pop
adc
daa
loope
add
aam
add
push
add
jmp
int3
cwde
push
mov
(bad)
sub
fild
ret
inc
cli
mov
and
ins
icebp
daa
mov
js
adc
push
xor
inc
enter
popf
jno
call
adc
mov
adc
shl
add
leave
cs
sbb
or
mov
add
pop
sti
cmp
sbb
popa
es
mov
cmp
jo
clc
add
sub
test
and
dec
mov
mov
or
and
cmp
pop
inc
outs
ror
mov
popa
call
dec
xchg
popa
add
cmp
test
das
test
out
xor
div
jno
pop
or
outs
cld
ficom
shr
push
xor
mov
and
(bad)
jp
push
test
stos
iret
adc
push
iret
or
inc
js
ja
test
push
les
imul
popf
or
and
or
pop
retf
inc
push
enter
ficom
or
arpl
sub
cmp
push
jo
out
jecxz
xor
adc
dec
push
dec
daa
lods
sahf
adc
mov
add
dec
xchg
push
adc
repnz
dec
mov
push
std
(bad)
cmp
(bad)
mov
verr
and
push
jns
push
mov
cs
shr
jle
dec
ror
mov
cmps
shl
xor
ret
or
pop
sbb
ins
add
mov
pop
jmp
and
call
add
or
push
imul
(bad)
fadd
jne
in
xor
add
and
arpl
push
imul
or
mov
cmp
or
mov
push
(bad)
pop
push
push
add
dec
in
retf
inc
jns
jnp
outs
and
gs
jmp
adc
movs
pop
fild
fdivr
inc
loopne
cli
dec
outs
arpl
gs
jne
aaa
sbb
or
jo
mov
pop
xchg
sbb
adc
add
rcl
sar
or
loope
push
push
or
call
sbb
cmp
inc
jbe
mov
icebp
xor
mov
or
mov
sbb
cmp
xor
addr16
mov
add
jmp
(bad)
push
push
pop
fs
add
jge
popf
rcl
sub
or
or
push
push
mov
dec
mov
(bad)
xchg
inc
xchg
add
les
push
test
adc
push
pop
mov
lock
add
cs
popf
xor
ds
xor
ins
push
popa
inc
mov
ins
push
mov
push
loope
jae
mov
xor
mov
scas
xchg
xor
jnp
sub
push
mov
fsubr
jle
test
aaa
inc
in
rcr
lock
jmp
sbb
aas
push
outs
mov
out
add
or
mov
rol
push
pop
les
loop
cmp
bound
out
add
call
mov
jo
scas
arpl
mov
sbb
or
jo
xor
mov
cwde
add
mov
sub
dec
xor
dec
enter
push
iretw
dec
inc
sub
or
popa
inc
jg
add
add
jg
loopne
mov
mov
lock
outs
push
dec
adc
loop
push
loop
push
fisubr
dec
cmps
push
push
add
inc
sbb
jne
sbb
mov
aaa
xchg
stc
shr
push
pop
inc
gs
dec
jb
dec
bound
bound
jl
or
icebp
inc
push
shl
aaa
jo
or
aas
stc
jmp
nop
inc
fwait
mov
loop
pop
pop
sbb
sahf
push
or
aaa
inc
mov
add
pop
pop
lock
push
pop
dec
push
scas
rcl
neg
mov
adc
inc
xor
or
leave
ja
push
es
pop
scas
js
mov
mov
ret
int
add
scas
push
stos
and
and
xor
retf
xor
adc
jns
bound
pop
fnstsw
add
ret
outs
(bad)
pusha
mov
dec
xchg
dec
cdq
adc
xlat
xor
cmps
xor
add
mov
jmp
mov
clc
jae
push
in
fiadd
fcomp
sub
add
and
inc
push
inc
adc
jbe
sbb
retf
fiadd
add
push
mov
mov
jns
mul
test
lock
pop
push
inc
aaa
dec
xor
test
sbb
pop
push
js
stos
pusha
inc
jns
xchg
xchg
inc
shl
pop
das
xlat
leave
mov
inc
pop
adc
fcom
sbb
add
push
inc
mov
push
push
pop
adc
imul
sub
adc
enter
sbb
pop
inc
or
imul
loopne
loop
add
push
test
inc
add
inc
int
imul
imul
jne
sbb
iret
push
mov
in
les
cmp
sub
shr
and
xor
push
xchg
pop
jp
js
dec
in
push
inc
mov
pushf
fcom
or
(bad)
mov
hlt
cmp
shl
daa
and
arpl
lods
xchg
xchg
daa
daa
clc
sub
xchg
xchg
scas
sti
inc
gs
leave
leave
leave
mov
stc
pop
data16
fs
mov
adc
jb
xor
pop
xchg
fidivr
jbe
xor
push
pop
adc
push
loopne
punpckhdq
jmp
es
push
call
dec
lea
add
pop
or
mov
mov
add
push
cmps
pop
and
les
imul
inc
mov
cmps
dec
cmovns
addr16
stos
add
outs
push
adc
add
or
inc
cwde
inc
sbb
add
xchg
ror
xor
inc
inc
fs
or
ficom
mov
cmp
push
test
xchg
movs
ror
dec
ins
repnz
xor
jmp
outs
cdq
xor
add
ret
push
test
push
dec
jp
ss
and
es
jg
in
cdq
mov
dec
xchg
jo
or
or
sbb
das
leave
sub
fwait
gs
aas
loop
repz
popa
arpl
rcl
xor
popa
xor
jae
xchg
push
pop
pushf
imul
add
jb
ins
sub
jno
fisub
mov
add
ror
xor
aad
imul
add
out
mov
inc
add
movs
push
sbb
xchg
imul
ss
pop
or
push
xlat
inc
js
jo
gs
sub
imul
add
cdq
test
add
xchg
pop
les
mov
(bad)
cmp
xor
and
or
ja
adc
sbb
jae
mov
and
jbe
loop
dec
popa
inc
xchg
inc
pop
sbb
adc
es
cli
jo
fs
dec
aaa
inc
add
call
inc
dec
loopne
dec
data16
imul
inc
ror
and
or
sub
adc
aaa
push
cwde
sbb
mov
inc
adc
dec
(bad)
jb
add
jle
dec
ins
or
jmp
inc
repz
and
adc
xchg
stos
popa
pop
xchg
push
push
mov
cwde
xchg
dec
rol
ror
jecxz
daa
sbb
ins
test
cmp
arpl
adc
push
cmps
out
sub
shl
arpl
mov
shl
inc
add
add
mov
inc
dec
les
cmps
pop
pop
xor
jmp
in
add
ret
lods
shl
push
push
(bad)
ror
sub
add
test
sub
test
inc
mov
mov
je
icebp
add
cmp
in
xchg
sub
call
int3
dec
(bad)
stc
inc
ret
iret
cli
(bad)
fstp
push
push
push
push
push
mov
mov
mov
(bad)
inc
mov
call
mov
dec
test
jl
inc
xor
mov
and
call
cmp
jne
mov
mov
sbb
jmp
inc
dec
jne
mov
pop
pop
pop
ret
lea
test
sti
call
je
add
call
mov
js
ror
clc
mov
neg
fucom
mov
or
mov
or
(bad)
mov
cwde
mov
jg
mov
xchg
push
xor
mov
je
mov
push
sbb
out
hlt
mov
mov
xor
mov
loopne
mov
push
push
dec
fbstp
div
les
push
mov
mov
sbb
aaa
es
push
fs
push
ret
and
push
add
test
je
pop
push
movzx
mov
out
mov
adc
enter
jo
ins
jno
push
mov
fist
in
or
js
or
jl
sti
jge
ins
jl
xchg
in
xchg
adc
pushf
sbb
inc
cmp
sbb
mov
mov
in
(bad)
mov
rol
sbb
sub
mov
fld
xor
sbb
xchg
retf
xchg
clc
adc
fist
inc
or
inc
or
jbe
add
out
mov
jne
xchg
push
pushf
or
call
dec
dec
lds
jmp
test
jne
mov
rcl
loope
jnp
cld
adc
lea
mov
(bad)
fistp
mov
mov
pop
movs
es
mov
or
sbb
pop
outs
jg
scas
or
push
test
jmp
repnz
pop
mov
add
sub
add
add
or
push
lock
pop
cld
je
mov
xchg
hlt
jne
ret
or
ret
nop
loop
repnz
adc
clc
adc
es
add
xor
pop
fst
push
or
cmp
jg
inc
dec
cmp
je
mov
std
shl
inc
inc
inc
retf
loope
movs
pop
retf
sbb
nop
or
loopne
lods
test
jne
xchg
mov
cmp
xchg
ja
lods
(bad)
fcomip
sub
std
dec
das
push
mov
cmp
pop
sub
mov
add
arpl
mov
or
xlat
pop
lock
xor
gs
cmp
je
xchg
sub
xor
mov
ins
test
push
pusha
xchg
xchg
clc
je
(bad)
icebp
dec
mov
inc
pusha
test
jb
jg
xor
inc
mov
pop
push
out
jmp
les
dec
test
jl
inc
dec
dec
push
jl
cmp
mov
enter
das
in
retf
dec
jne
mov
jp
sub
das
mov
add
shl
(bad)
mov
lds
sub
aad
push
mov
lea
cli
inc
jmp
iret
jne
mov
cmp
push
je
retf
hlt
pop
jnp
push
adc
cmp
xchg
shr
xchg
mov
pop
ret
popf
addr16
cmps
dec
dec
(bad)
add
mov
push
ss
mov
pop
mov
xor
jo
sub
mov
xor
retf
adc
(bad)
fnstcw
clc
xchg
pop
int3
shl
xchg
or
mov
and
jle
add
and
cmp
imul
clc
cmp
je
ror
cld
cmp
jne
sbb
add
and
or
sbb
ret
dec
ja
popa
mov
loope
and
pop
jmp
je
dec
jns
fist
pusha
cmp
add
adc
jne
or
add
and
imul
shr
jo
add
test
setg
and
je
cmp
inc
movhps
or
cmp
daa
or
ret
cld
or
jp
pop
jg
(bad)
push
jmp
(bad)
or
sub
dec
sub
data16
call
inc
and
push
inc
sar
mov
dec
imul
xor
adc
pushf
cmps
into
or
push
pop
fs
mov
pop
push
iret
jl
out
and
jl
popf
adc
loop
nop
je
in
adc
popa
or
or
and
or
sbb
xchg
jo
or
ror
fwait
outs
sub
loope
lahf
out
lahf
add
inc
cmps
jl
lahf
dec
dec
add
push
cmp
jne
fadd
or
add
stos
fisttp
dec
mov
mov
in
push
shr
pop
js
pop
jp
or
fwait
push
sub
js
lahf
dec
mov
mov
or
mov
pop
push
adc
xor
cmp
cmps
push
ret
cmp
xor
test
xchg
test
pop
ret
adc
out
out
jmp
sbb
inc
dec
out
dec
inc
cmps
nop
sub
inc
pop
(bad)
shl
mov
shl
adc
lock
call
and
fs
jo
mov
mov
bound
adc
outs
mov
rdtsc
stc
clc
cmp
jmp
(bad)
outs
out
adc
ja
cmp
jg
lea
int
adc
adc
lock
adc
arpl
mov
xchg
xor
jecxz
(bad)
pop
lock
and
and
ja
loop
lock
jne
mov
in
push
cmp
mov
repnz
inc
loope
clc
and
push
mov
xchg
or
adc
mov
retf
mov
dec
jmp
add
pop
push
inc
add
imul
push
sub
add
add
jge
xchg
inc
cmp
jp
dec
rol
jg
inc
or
dec
call
sub
je
push
adc
inc
or
push
(bad)
or
adc
jne
fisub
mov
imul
ins
add
sub
lea
sub
add
cs
xor
mov
popa
xor
xor
inc
push
or
outs
int
sbb
cmp
pop
pop
test
imul
cmps
movs
outs
jnp
inc
inc
aaa
sbb
mov
pop
or
push
sbb
inc
push
inc
or
pop
call
ins
call
clc
retf
jp
rcl
and
mov
sub
lock
in
out
and
in
cmp
add
xchg
fsubr
call
movs
add
or
fstp
pop
cwde
sub
movs
in
loopne
lock
dec
add
sub
push
or
jne
stos
pop
jbe
aas
cmps
(bad)
enter
aas
add
mov
test
mov
jb
ds
ds
retf
jae
sbb
xor
imul
dec
imul
push
pop
test
add
scas
push
jge
mov
push
mov
pop
clc
loope
loop
inc
fs
pusha
jbe
imul
sbb
pusha
int
fnstenv
or
mov
iret
xchg
xchg
sub
pop
xchg
mov
(bad)
cmp
je
add
fiadd
ss
mov
inc
pusha
mov
aam
cld
mov
clc
aaa
fidiv
(bad)
mov
je
or
lods
pop
pop
pop
jg
dec
aad
mov
sub
jb
(bad)
aad
inc
cmp
jne
dec
clc
mov
jno
imul
mov
inc
jno
clc
push
cmp
cmps
icebp
test
jne
sar
je
mov
jbe
push
xchg
ss
shr
loop
or
(bad)
cmp
inc
xchg
jg
js
push
jno
jmp
push
ja
mov
pusha
daa
das
xor
and
inc
test
pop
mov
fdivp
inc
adc
adc
pop
or
xlat
adc
and
lods
or
add
(bad)
outs
and
mov
xor
add
push
and
sub
das
mov
push
scas
loop
adc
hlt
fwait
sbb
push
aam
adc
mov
movs
or
fnstcw
lods
js
(bad)
data16
jmp
push
(bad)
ja
jl
jecxz
mov
loopne
test
push
popw
and
cmp
movs
add
aaa
cmp
jge
outs
xor
add
add
ficomp
mov
cmps
cmp
add
or
cmp
mov
pop
push
fcomp
mov
in
maskmovq
cmp
jle
(bad)
inc
or
jge
mov
pop
imul
enter
jae
mov
pop
test
jl
cmp
jl
call
nop
daa
inc
and
sbb
jne
fucomip
lsl
adc
out
sub
sub
cmp
jg
movs
cld
cmp
mov
mov
(bad)
jmp
ror
inc
add
mov
fadd
rol
nop
dec
pusha
je
and
and
xor
add
add
mov
retf
dec
addr16
mov
call
je
or
lock
jnp
sub
push
push
push
xor
push
or
int
xor
adc
(bad)
xchg
inc
mov
enter
sbb
push
je
or
inc
adc
adc
or
add
enter
or
pop
jbe
dec
cld
mov
jo
jno
and
ret
sbb
rcr
in
ss
out
push
icebp
sbb
cdq
popa
in
cmc
mov
mov
mov
push
mov
lea
mov
or
fcompp
and
push
inc
sbb
cmp
(bad)
sbb
(bad)
fadd
hlt
push
adc
sbb
fst
push
xor
clc
shl
or
nop
cmp
(bad)
sbb
aas
popa
pop
movs
push
pusha
aam
adc
jle
stc
aas
popf
dec
inc
dec
cmp
les
lods
jmp
cmps
inc
mov
test
push
add
pop
cmp
call
rcr
ins
cmps
push
add
test
jle
icebp
jmp
cmc
xchg
je
jnp
aad
push
jl
(bad)
push
add
xchg
sub
or
inc
es
in
cmp
call
dec
neg
cdq
mov
clc
jl
mov
mov
loopne
jo
and
cmps
mov
inc
add
xlat
inc
mul
nop
or
or
fisttp
(bad)
push
(bad)
push
daa
dec
push
pushf
jmp
mov
idiv
add
cmp
jg
adc
xor
ins
inc
inc
pop
je
add
int
push
(bad)
add
mov
popa
cmps
mov
dec
or
push
jmp
push
dec
sub
test
cmp
rol
mov
(bad)
imul
jle
dec
mov
add
mov
push
mov
out
inc
aas
(bad)
clc
push
out
ret
(bad)
js
push
hlt
test
jo
fdiv
inc
idiv
sbb
test
inc
movs
shl
add
cmp
xor
adc
in
sub
cmps
inc
dec
or
inc
ins
test
mov
and
mov
mov
call
lods
mov
sbb
push
cmps
pop
iret
mov
dec
cmp
(bad)
retf
shr
inc
jle
and
inc
ja
sub
not
call
clc
lahf
push
lods
test
jmp
inc
dec
jne
cmp
xchg
mov
push
jne
or
lods
adc
add
mov
stos
sbb
call
mov
call
cli
(bad)
mov
lock
hlt
outs
inc
dec
dec
shr
and
addr16
add
add
add
inc
pop
mov
mov
mov
or
or
sub
inc
jae
and
fisub
mov
cmps
pop
inc
mov
mov
push
loopne
inc
mov
js
data16
dec
or
xchg
mov
lea
dec
or
leave
add
add
pop
adc
dec
xchg
or
call
adc
lods
pop
push
push
inc
rol
inc
dec
bound
fmul
bound
inc
and
cvttps2pi
push
test
imul
sub
sbb
inc
gs
jne
je
mov
sbb
retf
shl
add
xchg
ret
and
xchg
mov
repz
int3
ins
out
ja
and
add
sbb
sub
mov
pushf
jmp
sbb
add
mov
sbb
add
and
jp
test
test
and
jge
cmp
inc
push
xor
mov
mov
pusha
ins
xlat
add
gs
add
call
pandn
xor
sub
(bad)
sbb
jne
add
sbb
xchg
aaa
test
aaa
xchg
mov
inc
xlat
dec
sub
adc
lods
add
les
cwde
ins
xlat
cmp
nop
mov
jne
addr16
push
dec
addr16
scas
data16
xchg
mov
lea
sub
jp
in
loope
adc
or
int
mov
ds
inc
xchg
std
push
imul
fnsave
bound
js
xor
cmp
push
test
in
adc
mov
out
pop
push
jg
adc
or
mov
outs
jg
xor
pop
mov
pushf
psubusb
outs
add
xor
push
dec
outs
jbe
inc
jb
popa
jns
fdiv
lock
outs
popa
shl
outs
ret
rcr
jo
movs
sbb
inc
scas
shr
sbb
icebp
adc
outs
fs
sub
in
mov
and
add
pop
jne
icebp
jnp
int
outs
jnp
data16
jle
test
sbb
inc
sub
or
popa
ins
imul
or
add
pop
in
js
test
cmps
push
ins
ins
outs
ret
push
in
aaa
xchg
lods
fmul
adc
(bad)
pop
rcl
je
cmp
xor
add
lods
ret
test
push
addr16
scas
rcl
inc
inc
imul
inc
jl
arpl
add
push
repnz
dec
mov
jl
cld
inc
sti
xchg
xorps
jo
cs
outs
loopne
add
in
xchg
dec
mov
fist
les
loopne
clc
nop
push
(bad)
test
pop
fs
push
push
out
sahf
hlt
in
push
xchg
or
or
and
add
cld
js
ror
ins
add
push
cmp
add
mov
loopne
adc
inc
arpl
add
and
inc
nop
popa
cld
jo
loope
push
push
mov
dec
add
imul
fistp
dec
jb
ds
and
out
jg
mov
sub
inc
add
loopne
push
into
xchg
xchg
xor
xchg
retf
or
inc
fs
xchg
popa
neg
fld
adc
add
or
ror
in
inc
inc
sub
gs
sub
jne
je
movs
sbb
stos
cdq
or
jae
stos
ds
add
inc
mov
mov
mov
ror
into
in
ins
js
add
inc
xor
push
dec
jnp
(bad)
jle
adc
add
and
add
adc
push
add
add
mov
or
jb
aas
rcr
mov
dec
outs
aas
xor
or
lds
or
outs
jo
xchg
call
jno
add
dec
scas
addr16
stos
mov
lods
(bad)
add
addr16
iret
packuswb
cmp
dec
fild
jno
inc
ins
ret
push
js
jns
aad
push
and
ja
dec
outs
imul
shr
ins
pusha
pop
das
in
dec
jb
jnp
mov
sub
cmp
jae
aaa
adc
in
adc
adc
loop
push
out
sbb
or
or
mov
shl
dec
ins
jo
arpl
dec
mov
and
dec
inc
js
mov
mov
cmp
add
inc
test
sbb
push
add
mov
enter
loopne
cmp
fistp
push
push
push
push
mov
cld
idiv
cmp
mov
push
cmc
jg
outs
ds
ret
and
fild
fld
call
fmulp
fstp
fld
pop
pop
push
icebp
mov
nop
sbb
sahf
adc
loope
iret
adc
lds
push
in
aad
xchg
test
sbb
ds
enter
js
mov
sub
mov
push
pop
lock
(bad)
(bad)
push
fmul
fstp
fldz
fcomp
fstsw
sahf
ja
fld
fadd
and
jmp
sbb
cmps
inc
sti
int3
push
adc
sbb
mov
jbe
in
mov
cvtdq2ps
in
adc
xchg
jbe
fbstp
sbb
cmp
sahf
hlt
push
push
sbb
xchg
jne
les
or
aaa
pop
cmp
loop
pop
mov
jmp
fmul
mov
pop
rcl
popa
pop
sahf
inc
mov
loopne
adc
in
xor
add
sub
add
mov
addr16
imul
fadd
pop
xchg
mov
xchg
xchg
fwait
sbb
xor
adc
pop
clc
das
mov
push
sbb
xchg
fsubr
repz
inc
ins
ds
pop
mov
dec
outs
arpl
jp
jbe
fs
pop
sub
sbb
popf
test
call
out
or
add
pop
lods
emms
stos
xor
adc
xchg
jmp
add
sub
jo
xlat
push
pusha
mov
pop
xor
jo
or
out
jns
gs
imul
in
add
or
push
je
shl
fs
fs
xor
or
inc
ins
bound
xlat
aam
sbb
int3
rcr
pop
jbe
add
int3
das
and
iret
cwde
push
dec
popa
sub
jb
loope
add
add
push
hlt
dec
sbb
cdq
xchg
cs
mov
inc
add
pop
xchg
gs
mov
js
cdq
or
gs
arpl
data16
cmp
cmp
add
xor
sub
inc
push
xor
pushf
or
loopne
push
pop
dec
aam
push
xor
outs
sahf
sub
push
jg
pop
add
int
mov
push
outs
push
outs
imul
fwait
mov
fiadd
add
add
ror
(bad)
test
jle
add
ror
out
inc
imul
add
popa
adc
ja
jg
fs
les
adc
or
inc
bound
gs
int
or
jge
(bad)
shl
add
pop
test
ret
dec
jae
xchg
stc
push
sbb
adc
leave
scas
sub
adc
push
inc
adc
dec
lods
iret
pop
test
add
pop
scas
pop
fdiv
imul
icebp
sbb
popf
dec
(bad)
arpl
(bad)
mov
outs
or
dec
inc
cmp
cmp
outs
dec
add
rcl
or
enter
stos
jbe
lods
sub
dec
or
fisttp
cwde
xor
cmp
jne
and
mov
sub
add
shr
mov
add
inc
mov
adc
movzx
add
push
(bad)
das
xor
add
clc
out
mov
cli
mov
cwde
inc
adc
mov
(bad)
clc
or
out
inc
add
add
dec
mov
mov
inc
test
push
inc
ret
call
sbb
pop
es
sub
mov
adc
fisttp
add
adc
jb
dec
mov
fs
lea
fisubr
mov
jo
jl
fistp
pop
pop
int3
adc
test
stos
je
pusha
adc
int
loope
pusha
mov
sub
sbb
cwde
(bad)
clc
push
fs
sub
sbb
dec
push
mov
mov
ret
inc
mov
gs
inc
mov
inc
fisub
out
(bad)
mov
outs
(bad)
call
fild
add
faddp
pop
inc
in
add
add
jo
mov
mov
inc
sbb
or
or
xor
adc
iret
xchg
(bad)
xor
mov
and
test
dec
ds
xchg
adc
pop
fcos
jno
ins
pop
push
mov
mov
push
bound
call
cmp
fdiv
push
ret
adc
push
adc
xor
(bad)
sahf
add
mov
mov
inc
sbb
or
add
dec
fstp
jmp
adc
mov
jle
nop
pop
je
mov
cmp
sub
(bad)
aam
jo
adc
rcl
ins
adc
jae
xchg
push
daa
daa
stos
repz
sub
xchg
popa
fsubrp
aaa
sti
xor
cmp
xor
push
lock
sbb
fwait
js
outs
mov
popf
sub
cmp
cs
adc
cmp
sete
es
add
pushf
cmp
(bad)
std
cmp
cmp
fwait
sbb
fstp
call
ins
hlt
fcompp
xchg
add
setno
jmp
cmp
adc
or
scas
test
hlt
push
test
fldpi
push
addr16
mov
js
out
cmp
clc
fadd
xor
call
sbb
ret
add
scas
rol
push
add
add
mov
out
xor
sar
push
or
xchg
push
aas
jnp
add
je
int3
xor
xlat
ficomp
jo
xchg
cmp
sub
push
pop
inc
jne
(bad)
mov
or
pop
sbb
push
daa
not
fadd
div
jmp
pop
push
push
sbb
jnp
or
xchg
push
mov
cli
sbb
dec
jne
push
xchg
jmp
xor
hlt
xor
mov
inc
xor
neg
daa
mov
adc
ins
sub
enter
xor
mov
push
push
add
jl
fmul
daa
jae
int
out
fcom
aam
cmp
repz
in
cs
fst
int3
cs
lock
or
jmp
xchg
sbb
(bad)
ror
push
out
mov
add
mov
mov
shl
int3
push
pop
lock
or
dec
xor
mov
mov
inc
outs
sbb
mov
aam
call
mov
lods
movs
es
addr16
jo
int
data16
push
xchg
test
sti
dec
cwde
inc
ja
cmp
adc
mov
add
jbe
push
mov
inc
movs
call
add
push
scas
jecxz
fwait
dec
add
loop
xor
or
jno
pop
lea
jbe
ret
cvttps2pi
push
cmp
inc
iret
arpl
outs
stos
aam
dec
inc
push
push
mov
add
inc
inc
outs
sbb
mov
sub
pavgb
popa
and
or
retf
(bad)
and
je
push
fist
jbe
ins
test
in
or
daa
add
mov
cs
pop
gs
loope
pop
or
or
gs
pop
inc
mov
push
mov
push
in
cs
mul
les
xlat
push
lods
imul
or
sahf
push
shl
mov
adc
(bad)
sub
fnsave
or
adc
es
das
push
adc
cmp
pop
cwde
sbb
pusha
mov
push
cld
mov
mov
push
pop
gs
sbb
jecxz
call
push
dec
pop
mov
call
or
imul
mov
or
xor
pop
pop
add
dec
les
or
ret
bound
(bad)
outs
fwait
bound
mov
popa
push
dec
inc
push
push
popa
imul
popa
or
sub
lea
aam
inc
or
test
sbb
pop
add
ins
or
add
lods
mov
cmc
add
outs
add
add
fstp
or
inc
popa
add
inc
or
ss
push
adc
adc
fld
scas
movs
es
adc
enter
mov
dec
out
(bad)
push
jmp
cs
push
or
ss
shr
loope
enter
push
dec
gs
jne
hlt
cmp
mov
popf
mov
adc
sbb
mov
mov
test
adc
add
pop
or
mov
push
add
in
mov
loopne
dec
addr16
cmps
inc
je
cmps
pop
mov
in
pop
pop
stos
rol
dec
test
dec
push
xchg
or
add
ss
push
xor
test
mov
pop
push
mov
pop
iret
pop
xor
mov
add
aaa
and
ret
sbb
aas
aad
jo
sub
aas
cmp
jns
cmps
jl
dec
push
inc
ds
mov
dec
or
push
dec
adc
loope
or
add
add
ja
(bad)
dec
popa
jae
add
add
add
out
mov
js
out
lods
sbb
add
and
or
dec
aas
pop
mov
nop
inc
ins
jo
dec
js
xor
adc
mov
add
mov
clc
popaw
jne
je
enter
mov
push
jecxz
outs
or
inc
rcr
mov
push
fistp
dec
bound
add
mov
cmp
jns
xchg
add
pusha
loopne
sbb
addr16
add
ins
lods
inc
add
ss
sub
(bad)
push
scas
sbb
sub
inc
xchg
adc
outs
or
cmc
(bad)
fadd
arpl
(bad)
outs
push
scas
or
int
in
push
fsubr
xor
pop
loopne
inc
cmp
ret
addr16
cmps
addr16
pop
movs
push
dec
shr
add
call
fnstenv
pop
fld
and
pusha
aas
pop
lea
or
adc
adc
push
and
inc
xor
hlt
sbb
call
jo
mov
push
pop
xchg
push
add
or
dec
loope
mov
popa
sub
enter
call
pop
icebp
sub
mov
inc
mov
nop
dec
inc
sub
das
add
adc
jnp
daa
xchg
adc
ins
mov
jl
pop
mov
movs
das
mov
and
push
fcmovbe
daa
icebp
mov
pop
ins
jmp
shr
vshufps
sub
dec
mov
jbe
push
inc
dec
jl
and
in
or
add
cwde
call
sub
(bad)
sbb
xor
js
or
loope
sti
or
pop
and
inc
outs
add
shl
mov
xor
pop
cmp
gs
or
mov
jmp
or
shr
pop
add
mov
mov
mov
cmp
or
push
into
test
das
mov
in
cmp
(bad)
fild
sbb
mov
das
mov
and
rcr
add
stos
jmp
push
pop
xchg
push
pop
stos
sbb
cs
mov
cmp
dec
das
(bad)
out
das
stos
push
push
mov
shr
push
push
stos
std
push
std
pop
or
ror
xchg
add
cmp
enter
xchg
push
mov
add
movs
cmps
scas
add
push
adc
push
inc
movs
and
lahf
pop
popw
jg
mov
mov
sar
cmovb
es
push
cmps
jle
inc
adc
xchg
inc
rcl
pop
pop
test
popa
add
xchg
aad
add
mov
add
mov
xor
cmp
mov
ret
xlat
jl
das
test
adc
cli
xchg
and
out
push
aad
add
mov
mov
add
adc
push
stos
aad
aas
pop
jbe
int3
push
push
ja
retf
cmp
pop
lds
adc
xor
add
imul
mov
push
sub
xchg
push
mov
inc
pop
mov
in
mov
push
add
push
and
or
test
sbb
mov
push
sub
pop
inc
in
sbb
inc
jns
mov
adc
add
xchg
out
data16
cwde
stos
xchg
fdivr
and
lods
mov
pop
es
das
mov
mov
js
aaa
(bad)
ins
add
aaa
mov
or
daa
inc
push
daa
je
and
push
jmp
sub
je
test
jne
mov
je
add
xor
add
loopne
sub
dec
pop
adc
and
repz
loopne
sub
mov
mov
push
add
jp
in
mov
push
mov
push
xlat
int3
push
or
mov
lahf
xlat
loop
out
stos
movs
or
push
add
pop
xlat
jecxz
pop
call
into
sbb
ret
push
stos
mov
xor
mov
in
or
shl
aam
in
xor
ins
cmp
adc
je
pop
add
sub
push
add
js
js
outs
adc
push
add
push
lock
jnp
test
shr
rcl
shl
and
add
in
sahf
ins
push
mov
sbb
loop
outs
pop
cmovno
out
xor
push
cmp
loopne
mov
push
or
add
xchg
fbstp
inc
inc
jb
ja
push
fs
xor
xlat
rcr
dec
outs
xchg
push
les
arpl
fs
bound
std
xor
ins
or
cmc
imul
add
and
adc
test
leave
enter
fmul
adc
pop
call
in
or
jb
jb
out
(bad)
shl
cmp
jns
les
xlat
out
cs
adc
inc
push
pop
push
mov
jb
push
cmps
mov
and
cmp
in
cmps
adc
xchg
fisubr
(bad)
or
inc
popa
cmp
data16
jno
adc
bound
mov
scas
add
pushf
je
clc
add
cwde
cwde
mov
cmp
add
or
rcl
sub
or
(bad)
rol
daa
cmp
in
out
fcomp
dec
add
fs
ret
sub
push
sbb
dec
sub
movs
dec
jo
or
gs
sub
push
or
imul
inc
ret
and
outs
jge
sbb
sbb
cmp
xor
add
cmp
adc
mov
iret
or
ror
jb
(bad)
arpl
push
pop
sub
and
push
jns
mov
push
mov
mul
ds
cmp
loope
xchg
dec
jb
or
int3
pop
xchg
out
and
call
outs
jae
pop
mov
or
cmp
outs
xchg
imul
jb
inc
daa
loopne
xor
shr
add
popa
adc
(bad)
sti
push
add
loopne
lds
add
xor
pop
xchg
addr16
add
push
add
out
adc
fild
sahf
in
add
fs
or
mov
(bad)
div
(bad)
outs
add
add
or
dec
test
jmp
shrd
sbb
jge
pusha
push
add
jae
cmp
push
and
push
test
or
xor
adc
pop
dec
or
xchg
mov
mov
mov
iret
das
in
push
sub
je
cmps
sbb
xlat
mov
ins
push
add
aam
lock
or
dec
ja
jae
imul
jb
enter
daa
mov
pmullw
dec
cmc
mov
dec
dec
push
inc
cmp
and
sbb
inc
pusha
adc
lds
push
loope
ss
inc
loope
add
xor
mov
jbe
push
xor
sbb
test
add
inc
and
adc
push
test
je
add
call
inc
ins
je
fimul
(bad)
sbb
push
movzx
add
jo
sbb
cwde
mov
add
mov
mov
mov
push
hlt
mov
(bad)
dec
jne
test
je
fwait
int3
fs
jo
mov
outs
out
pop
pop
ret
in
push
add
push
pop
div
cmp
cmp
add
aam
add
test
aas
pop
mov
rol
sahf
pop
adc
sahf
mov
pushf
clc
mov
jbe
pop
mov
add
scas
push
sti
loopne
cmps
hlt
cmp
fisttp
pop
jg
shl
inc
outs
sbb
aad
mov
test
mov
and
add
nop
jle
loopne
cmps
adc
repnz
and
and
nop
push
mov
cld
loopne
in
push
cs
mov
lock
add
jg
sti
std
mov
jo
rol
mov
mov
outs
clc
(bad)
cmp
je
cmp
sete
and
je
(bad)
mov
pushf
mov
adc
pop
sub
pop
ret
inc
mov
cld
mov
adc
(bad)
and
sub
idiv
push
arpl
aas
mov
sbb
sbb
inc
add
std
cmp
sub
mov
mov
mov
xchg
ret
inc
les
and
hlt
or
test
jo
sub
cmc
iret
add
sub
pop
ins
xor
push
push
xchg
(bad)
push
mov
callw
cmp
or
ret
xor
mov
dec
cmp
outs
cmp
cmp
sbb
in
inc
(bad)
clc
jmp
lea
stc
pop
push
(bad)
mov
fidiv
jae
inc
loopne
shr
inc
aad
or
pop
(bad)
adc
pop
cmps
pop
rcl
add
jae
push
jmp
push
clc
loop
in
ret
mov
fsub
sbb
leave
cmp
jge
jne
cwde
enter
mov
call
xchg
hlt
div
mov
(bad)
pushf
add
sbb
pop
clc
fwait
xchg
cld
mov
fbld
mov
cmp
jae
and
mov
add
rcl
ret
add
ret
add
jmp
or
enter
xor
mov
jbe
ret
out
repnz
sub
call
popa
pop
inc
adc
pop
imul
cmp
loopne
xlat
and
(bad)
mov
pop
or
fcomp
mov
pop
xor
mov
xor
jb
fnsave
fadd
jmp
jo
out
jge
jle
test
ja
sub
dec
call
push
jb
(bad)
ds
mov
push
inc
jbe
aas
call
js
xchg
mov
cmp
jg
adc
fcom
mov
daa
adc
pop
fist
cmp
mov
jge
shr
mov
lods
add
dec
adc
popf
hlt
int3
cmp
sbb
es
sub
sub
mov
xchg
fidivr
test
(bad)
inc
dec
push
mov
dec
push
push
push
dec
sbb
jmp
daa
js
clc
fstp
fwait
cs
inc
std
out
mov
pop
adc
sahf
js
(bad)
movs
pusha
pop
das
fist
or
mov
or
pushf
inc
call
scas
push
call
imul
cdq
mov
cmp
test
and
and
inc
sub
arpl
dec
call
push
mov
idiv
sahf
jo
loopne
in
mov
js
setge
retf
repnz
mov
popa
shr
push
mov
jecxz
push
push
mov
cmps
ins
inc
pop
sbb
push
int3
mov
pushf
stos
sbb
pop
xor
test
xor
mov
push
mov
push
mov
pop
xor
mov
or
mov
push
mov
or
in
sub
outs
loop
imul
mov
xor
mov
and
mov
imul
pop
mov
test
sar
jbe
das
fdivr
xchg
mov
cld
pop
cmp
fadd
jg
nop
ja
mov
stos
mov
aad
orps
aad
and
mov
jnp
inc
add
jmp
mov
xchg
es
adc
sub
jle
ret
or
xor
loopne
mov
aas
adc
arpl
dec
call
mov
xor
push
sub
sub
pop
stos
js
fistp
mov
movzx
sub
push
sub
jne
mov
iret
test
rcl
adc
call
loopne
je
pusha
hlt
inc
or
ins
ret
xlat
mov
in
mov
mov
mov
inc
or
in
or
push
jge
js
fsubr
adc
into
pop
ret
xchg
ret
fadd
into
inc
pop
sub
and
or
pop
je
les
xor
fadd
sbb
ret
not
adc
mov
call
cmp
jne
cmp
mov
lahf
or
cmp
aam
fadd
cmp
lods
int3
adc
mov
push
cld
lods
adc
xchg
add
je
push
icebp
add
push
or
sar
hlt
jbe
xlat
dec
mov
dec
lock
iret
data16
sub
dec
add
xchg
inc
sbb
call
aad
loope
sidtd
and
xchg
pop
cmc
xor
sub
stos
outs
lahf
cmp
pushf
gs
hlt
push
das
mov
in
pop
mov
fmul
jae
fdivr
mov
jmp
or
outs
push
fstp
out
push
mov
adc
adc
push
ror
aam
mov
sub
or
jmp
xor
mov
add
in
xor
mov
inc
mov
mov
xbegin
fs
bound
aaa
xchg
add
(bad)
out
jbe
inc
repnz
daa
mov
push
and
fs
mov
mov
adc
int3
or
call
or
out
fcmovbe
mov
xor
xor
into
pop
fist
jo
fbld
aam
fsubr
or
in
aam
and
or
fdiv
add
mov
loope
adc
mov
mov
and
movs
hlt
sar
push
mov
xor
rcl
xchg
(bad)
push
and
xchg
pushf
loopne
(bad)
dec
out
popf
jg
je
add
mov
jmp
mov
inc
and
mov
fild
pop
and
inc
sbb
lea
aad
outs
mov
adc
mov
or
inc
add
and
imul
das
sbb
mov
(bad)
xor
push
ins
lock
test
clc
outs
retf
dec
xchg
test
mov
push
popa
xor
dec
push
push
clc
mov
in
fmul
ins
pop
push
xlat
cmp
pusha
add
movs
mov
(bad)
cmp
jl
nop
jl
sbb
xchg
push
cmp
mov
or
js
repnz
cmp
clc
or
inc
or
sahf
inc
or
pushf
test
stos
mov
aaa
inc
mov
daa
pop
or
pop
pop
fcomp
ja
sub
or
mov
jmp
lock
lods
clc
or
add
inc
sbb
adc
retf
sub
or
push
rcr
xchg
mov
and
or
pop
arpl
shr
adc
mov
(bad)
nop
push
iret
pop
add
add
lods
add
fadd
fild
lock
push
jg
pop
jecxz
mov
stc
(bad)
js
add
pusha
pop
movs
mov
cld
mov
add
pop
mov
add
neg
mov
push
and
clc
in
inc
loopne
adc
sub
push
push
out
mov
sbb
mov
lea
movs
retf
fwait
xor
mov
lds
and
xchg
pushf
test
pop
hlt
inc
hlt
xchg
pop
out
and
data16
pop
and
or
movhps
xor
push
aad
cmc
cmp
das
push
call
jno
mov
jmp
ins
ret
loope
add
sbb
enter
clc
add
adc
call
(bad)
in
call
sbb
fiadd
pop
(bad)
les
inc
jo
out
and
enter
and
pop
ins
inc
jp
out
test
ret
add
push
mov
pop
and
xchg
adc
xor
loop
imul
cdq
(bad)
dec
into
retf
adc
jae
fmul
adc
jmp
xor
sub
sbb
clc
jg
sub
jno
mov
jg
adc
adc
cmp
(bad)
loopne
cmp
sbb
sub
mul
cwde
sbb
xor
inc
cs
inc
ins
popa
in
in
mov
popa
and
sbb
sbb
test
mov
div
call
ss
fdiv
dec
test
xchg
jmp
cmps
rcl
sar
cmc
add
add
shl
cli
xor
jp
sti
mov
shl
test
cwde
cmp
push
pusha
push
fst
pop
mov
cwde
cdq
loop
xor
cmps
in
ja
and
xchg
and
push
int3
(bad)
shl
pop
jo
push
or
pop
ins
jecxz
adc
sbb
scas
sub
xchg
call
add
out
fiadd
jne
cld
scas
inc
add
cmp
ret
pop
test
xor
pop
jmp
imul
cmp
lock
jle
dec
gs
pop
mov
imul
cmp
dec
adc
fild
dec
inc
inc
jmp
mov
fmul
xor
cmp
cmp
mov
push
or
or
cmp
mov
imul
add
scas
inc
imul
scas
add
adc
cli
add
adc
js
je
sub
xchg
cmp
shl
cwde
mov
in
mov
aaa
mov
inc
xor
push
jmp
push
and
or
fdivr
fsub
loopne
jmp
icebp
pop
adc
and
lods
pop
cmp
inc
add
push
nop
push
in
data16
aam
(bad)
arpl
mov
and
ret
push
test
or
in
jl
dec
shl
cmp
adc
push
mov
jb
add
out
int
sub
pop
cs
iret
mov
in
adc
cmps
mov
xchg
in
out
or
inc
and
int3
fisub
into
cmp
sub
retf
loopne
into
pushf
(bad)
hlt
(bad)
or
push
or
(bad)
div
sbb
dec
mov
ret
(bad)
retf
loopne
aam
loopne
inc
retf
stc
ins
push
jp
jp
out
or
mov
or
xor
sub
cmp
mov
scas
adc
aam
pop
mov
or
adc
les
jge
sar
add
and
fistp
(bad)
fsub
aad
(bad)
mov
dec
in
ins
das
ret
loopne
rcl
loopne
adc
sti
jbe
cmp
add
aam
xchg
cmp
xchg
or
aad
sbb
dec
sbb
call
mov
jnp
adc
jmp
pop
clc
add
or
push
pushf
pop
add
mov
jl
mov
fadd
cld
xchg
imul
add
arpl
test
adc
adc
in
push
jo
inc
es
(bad)
xchg
pushf
or
jo
jl
or
mov
sti
pusha
lock
enter
das
xor
ins
sub
(bad)
and
or
cmp
add
jo
jns
ja
or
fsub
cmp
push
imul
push
(bad)
jle
lds
cmp
jge
mov
cli
pop
jecxz
fwait
inc
and
push
pop
das
sbb
push
lock
ret
mov
and
sar
add
or
mov
sub
sbb
jmp
adc
dec
inc
add
push
adc
arpl
(bad)
(bad)
jno
ret
cmps
test
jge
neg
mov
sub
adc
add
daa
mov
inc
test
stos
dec
push
adc
dec
lea
hlt
popa
fild
jo
add
push
inc
dec
jne
out
add
icebp
add
mov
jb
out
add
(bad)
sbb
push
call
xchg
add
xor
sbb
fsub
je
fmul
push
fdiv
call
rol
enter
popa
retf
(bad)
outs
clc
sub
push
mov
in
xchg
add
js
adc
mov
lock
sbb
rcl
add
loopne
test
or
dec
and
pop
je
ins
ins
add
mov
jne
nop
std
lods
pop
repnz
cmp
sbb
sub
iret
pusha
or
inc
or
shl
add
shr
inc
cwde
cmp
sbb
outs
inc
mov
or
fadd
cmp
push
or
in
addr16
hlt
sbb
outs
adc
adc
div
sti
jg
dec
jmp
movs
or
addr16
pop
(bad)
in
(bad)
mov
sub
and
add
(bad)
call
pop
fwait
push
nop
in
push
hlt
not
lea
mov
jne
xor
int
ins
fist
ss
push
je
enter
mov
nop
or
dec
pop
lock
pop
lea
jl
mov
cmp
adc
mov
imul
test
adc
xchg
cs
gs
mov
push
or
adc
inc
xlat
push
out
inc
push
xor
cmp
or
inc
mov
dec
sbb
das
and
int
and
das
push
and
sub
retf
icebp
add
loope
ins
cmc
sub
inc
add
loope
and
xchg
mov
xor
push
clc
aas
adc
and
adc
in
or
xor
mov
pop
out
(bad)
lods
mov
or
(bad)
dec
add
dec
jo
fisttp
loopne
adc
mov
pop
dec
push
dec
or
adc
jo
push
(bad)
fwait
xchg
mov
mov
push
das
in
or
jl
test
(bad)
fcomp
push
iret
sbb
push
movs
mov
jl
enter
std
sbb
cli
push
mov
not
mov
adc
sbb
pop
aam
mov
sbb
jmp
out
nop
stos
xchg
push
dec
sahf
movs
jecxz
add
inc
gs
test
iret
push
ss
loopne
inc
leave
dec
and
inc
cmp
push
addr16
push
movs
add
movs
in
and
or
inc
sbb
popa
jne
std
mov
sbb
icebp
or
and
mov
outs
lahf
mov
xor
icebp
xor
jp
test
jne
and
inc
retf
jmp
outs
aaa
ror
ret
mov
mov
jo
bound
jbe
sub
mov
test
mov
mov
mov
or
pusha
inc
sub
mov
aas
sub
mov
dec
shr
or
mov
fdivr
xor
fcom
test
mov
or
pusha
adc
sub
adc
xor
add
fcom
xchg
loope
out
ror
xor
popa
push
add
pusha
in
inc
hlt
and
mov
jno
rcr
mov
jo
xchg
adc
pop
ror
add
adc
data16
data16
out
les
jmp
ret
sti
neg
dec
gs
(bad)
fldenv
imul
xchg
jns
ja
ins
inc
gs
mov
dec
push
cld
adc
mov
mov
push
jne
fs
sbb
inc
adc
packsswb
cmove
or
mov
pop
push
movs
and
mov
mov
pop
lock
xchg
out
loopne
std
or
je
and
cmp
(bad)
mov
add
dec
vmread
daa
ficomp
adc
sbb
jno
movs
or
fistp
loop
jne
and
fs
jns
clc
cs
push
sub
inc
push
jmp
jno
mov
das
paddsb
comiss
arpl
pop
push
mov
fld
(bad)
mov
sbb
psubusw
daa
jmp
arpl
paddusb
mov
(bad)
setg
pop
inc
lock
pop
or
mov
pop
push
dec
mov
sub
mov
mov
rcl
add
xchg
fld
xchg
ror
out
mov
jge
xchg
imul
push
psadbw
add
les
fistp
add
pop
pop
sub
nop
cdq
inc
pop
add
inc
or
push
mov
xchg
stos
inc
or
mov
adc
in
mov
sbb
mov
add
sbb
cld
or
int3
adc
cmp
je
leave
retf
sub
and
sbb
rcl
push
(bad)
dec
push
and
or
aam
pop
int3
cs
push
iret
popa
js
(bad)
cmp
jge
or
rcl
mov
jno
add
adc
inc
add
pop
cmp
pop
mov
xchg
mov
(bad)
jge
mov
sub
in
test
push
fld
clc
(bad)
adc
(bad)
mov
or
xor
test
mov
adc
int3
scas
movs
dec
and
div
(bad)
fucomip
lsl
adc
or
in
and
adc
jecxz
sahf
pop
lods
add
cmp
cmp
or
int3
clc
adc
push
adc
inc
adc
sub
lock
inc
pop
in
add
clc
cmp
out
rcr
adc
leave
cld
loopne
jg
push
dec
push
test
push
push
arpl
aad
mov
or
jo
dec
mov
inc
sbb
call
pop
push
inc
pop
inc
add
add
not
mov
loopne
jecxz
inc
sbb
add
(bad)
lock
add
pop
jge
scas
xchg
lock
scas
mov
lock
sbb
pop
movs
push
test
or
jmp
add
inc
sbb
sbb
test
pop
ret
cmp
push
jmp
inc
or
jmp
sti
mov
mov
dec
pop
movs
int3
sbb
nop
ds
lea
test
push
stos
(bad)
push
loop
loop
ror
inc
jbe
das
repz
imul
int3
pop
add
cmp
adc
adc
or
push
or
pop
fadd
mov
jge
adc
or
in
xor
aas
test
and
push
jbe
xchg
mov
enter
sbb
xchg
sub
mov
jle
sub
adc
mov
loopne
push
rcl
call
(bad)
push
or
je
inc
fdiv
loope
movs
ficom
cmp
jmp
push
and
cmp
push
in
sub
sbb
xor
sub
adc
mov
push
inc
dec
jne
in
ss
jo
lods
std
sbb
std
jmp
add
imul
clc
aam
test
or
and
sub
in
xor
mov
bound
popa
lods
or
scas
dec
jne
ficomp
mov
je
and
loopne
pop
ror
add
mov
les
lods
inc
in
dec
enter
inc
cwde
add
jbe
push
add
add
ret
inc
and
dec
(bad)
setg
xabort
out
cmps
xchg
add
add
add
add
xchg
or
push
inc
mov
lods
sbb
xchg
pushf
in
in
in
lahf
stos
inc
in
ins
mov
mov
push
add
pusha
test
cmps
lahf
jmp
test
fist
adc
stos
ror
lahf
loopne
add
add
inc
pop
cld
loopne
inc
inc
lahf
out
out
scas
in
push
lahf
xor
inc
add
sbb
lahf
mov
lods
lahf
xlat
lock
loopne
add
and
out
in
cmc
pop
pop
js
mov
(bad)
jb
add
pop
xchg
clc
xchg
pop
jb
or
data16
sub
sbb
inc
xor
or
pop
adc
aas
push
adc
pop
xor
xor
pusha
inc
adc
add
fs
pop
test
stc
jmp
pop
outs
outs
js
inc
repnz
das
jmp
dec
out
jmp
sub
fmul
mov
(bad)
in
loopne
stos
adc
nop
bndldx
sbb
cld
out
sub
sbb
inc
out
sub
repnz
sti
loopne
scas
lock
cmp
(bad)
out
jmp
rcr
add
shr
cmc
sub
and
out
ror
leave
test
leave
mov
mov
jns
jmp
in
out
mov
sub
jo
outs
xor
out
rcr
push
pop
int3
outs
outs
lods
in
xor
sbb
or
or
sbb
ds
add
in
clc
push
sbb
cmp
push
out
shr
cld
out
xor
mov
pop
fwait
movs
cmps
inc
pop
test
pusha
test
mov
and
add
add
pop
adc
inc
jge
pop
dec
sub
das
pop
cs
adc
into
mov
pop
push
dec
rol
dec
dec
sbb
cdq
stos
mov
xor
bound
pop
dec
addr16
sub
jl
out
mov
rcr
xchg
or
sub
aaa
dec
sahf
adc
bound
mov
aaa
sub
inc
ror
jecxz
cmp
adc
ja
pop
or
mov
cmp
idiv
dec
imul
gs
cs
popa
or
imul
not
imul
sub
dec
outs
arpl
idiv
outs
call
gs
outs
outs
gs
gs
jb
jns
push
jae
ds
enter
popa
jns
push
xchg
pop
sti
in
not
xchg
sbb
imul
arpl
mov
xchg
aam
minps
inc
pusha
mov
ins
jo
dec
aas
adc
cmp
sbb
push
or
gs
jne
je
lods
js
ins
add
or
arpl
or
inc
jbe
pop
adc
or
push
mov
aad
out
or
pop
push
dec
bound
adc
add
add
add
inc
adc
adc
adc
adc
ds
clc
nop
inc
add
in
sub
sub
adc
pusha
xlat
ss
push
scas
sbb
push
jbe
add
add
push
cwde
push
cmp
cmps
ins
pushf
les
int3
and
cmp
iret
repz
xor
ja
mul
leave
out
pusha
ins
sbb
js
int3
scas
loop
retf
(bad)
pop
into
push
dec
or
fnsave
popa
push
inc
pop
dec
loop
in
rol
mov
fcom
jae
lock
add
add
add
xchg
rol
ins
data16
add
inc
xchg
adc
or
mov
test
and
int
adc
jne
sbb
jnp
shr
mov
imul
and
mov
xchg
or
xchg
std
mov
pop
pop
adc
push
stos
sub
pop
cmp
xchg
pop
add
neg
xor
pop
dec
inc
outs
jne
add
xor
inc
sub
add
mov
or
iret
aam
fs
cmp
ins
jo
jns
sbb
add
sbb
mov
add
pushf
add
or
cmp
fstp
jmp
adc
sub
pop
fadd
add
loopne
nop
ret
cmp
mov
std
jae
mov
hlt
push
push
inc
and
in
sbb
inc
je
xor
inc
jb
sbb
jp
add
fmul
and
test
lods
imul
mov
scas
xor
ins
add
or
cmps
pop
(bad)
popf
and
in
les
xor
fwait
in
in
mov
mov
add
mov
mov
out
cmp
or
in
push
push
lea
or
or
and
test
pusha
fcom
movs
push
xor
ficom
icebp
push
push
fwait
sub
ror
or
add
cld
xor
fadd
or
jae
aaa
imul
out
pop
sub
xchg
sub
sub
add
or
call
cmp
pushf
adc
cmps
jae
inc
(bad)
std
push
dec
inc
pop
mov
push
inc
cs
imul
out
push
pop
mov
in
cmp
mov
loop
adc
bswap
enter
jecxz
adc
in
les
cmp
repnz
in
mov
and
jb
jb
jo
shl
cmp
sbb
adc
sar
dec
fucom
jecxz
test
les
push
fwait
push
or
sbb
movs
test
adc
adc
jo
call
out
or
or
add
inc
jae
cmp
mov
shl
iret
pop
popa
inc
lock
outs
jns
adc
inc
or
dec
or
dec
mov
jnp
imul
dec
jae
ds
adc
or
inc
popa
jg
push
int
inc
jg
dec
jg
sti
mov
xor
inc
inc
fs
fwait
daa
push
inc
mov
ficom
mov
arpl
test
sbb
sub
test
ins
pop
add
push
sbb
cdq
inc
mov
shl
or
pop
test
test
movs
and
fild
pop
jae
sbb
ret
enter
push
mov
or
add
jnp
or
dec
xchg
pop
add
sbb
jecxz
gs
arpl
aam
mov
inc
(bad)
data16
add
jae
imul
mov
iret
inc
movs
mov
sbb
mov
adc
mov
ror
mov
aad
adc
add
fidiv
inc
add
add
push
imul
inc
arpl
xchg
sub
gs
inc
inc
js
jo
add
xchg
push
pop
mov
sbb
add
sbb
or
aas
add
cmps
outs
icebp
inc
scas
mov
dec
mov
add
shr
rol
(bad)
or
adc
leave
xchg
xchg
cs
or
ja
(bad)
push
lock
pop
add
mov
dec
jg
jg
or
fldcw
out
dec
popa
pop
and
add
pusha
push
es
xor
sub
dec
aaa
jae
cdq
push
sub
ret
(bad)
call
adc
dec
pop
and
push
popa
push
rcr
cmps
or
or
or
retf
sbb
scas
adc
mov
ret
jge
push
xor
pop
sub
mov
cli
or
mov
and
and
adc
es
mov
dec
and
pop
xchg
mov
xchg
dec
test
(bad)
fwait
sub
ins
mov
jae
leave
sbb
or
xor
xor
aam
retf
dec
dec
fcom
clc
push
and
sub
or
add
sti
outs
(bad)
call
in
and
pop
inc
pop
shl
arpl
in
inc
loope
adc
jns
loop
aaa
popw
add
xor
inc
inc
pushf
not
inc
or
add
xchg
push
idiv
fs
sub
sub
mov
push
or
cmp
popa
mov
arpl
jns
add
aam
jae
call
xor
inc
pop
add
pusha
sbb
mov
fwait
das
inc
ret
push
xor
fcom
into
sbb
or
popa
dec
inc
loope
pop
mov
neg
aas
pop
je
movhps
or
int
push
sbb
sbb
pushf
sbb
push
mov
ss
inc
push
push
imul
ja
mov
psadbw
into
add
cli
lods
push
sbb
rol
push
mov
das
pusha
sar
sub
add
mov
push
leave
and
mov
leave
(bad)
push
add
retf
(bad)
out
inc
in
jmp
push
sahf
nop/reserved
fwait
aad
push
xor
sbb
lods
and
mov
xlat
popf
jnp
test
test
push
add
dec
xchg
fiadd
ins
stc
pop
je
add
call
mov
inc
fsub
inc
ror
jns
mov
fst
xchg
jl
dec
outs
adc
xchg
sbb
push
dec
ins
jns
pop
sbb
imul
pushf
mov
(bad)
xchg
pusha
inc
or
ficom
sbb
mov
in
mov
push
adc
test
or
aaa
test
push
ins
cmc
mov
inc
clc
aas
push
loopne
pop
(bad)
mov
loopne
inc
dec
jo
and
and
xor
sbb
pop
hlt
lods
sub
jp
into
sub
sbb
inc
pop
jp
arpl
psubusw
pop
pop
(bad)
mov
push
jp
push
mov
push
push
in
(bad)
and
cmp
cmp
sahf
pushf
pushf
(bad)
jmp
dec
mov
xchg
daa
daa
daa
mov
xchg
xchg
xchg
pop
jl
(bad)
leave
leave
enter
and
in
loop
es
in
or
push
ds
mov
mov
punpckhdq
cmps
mov
mov
mov
cli
mov
pop
mov
mov
dec
fbstp
jmp
cmp
loop
pop
in
jno
mov
lea
add
push
shl
xor
outs
test
cli
rcr
idiv
jmp
stc
push
popf
jns
pop
sub
adc
outs
push
cmps
adc
gs
mov
jns
mov
cmps
jns
(bad)
and
out
or
push
nop
pop
jbe
test
aam
or
add
enter
das
movs
or
test
push
inc
and
sbb
sbb
in
pushf
jns
faddp
sub
xchg
sub
or
iret
push
dec
xchg
loop
jno
push
outs
add
test
ss
aaa
loopne
xor
jb
sbb
add
add
(bad)
lock
pusha
add
enter
jae
call
cmp
add
xchg
inc
mov
popa
sub
xchg
call
dec
nop
push
dec
lods
(bad)
imul
inc
adc
xchg
and
test
and
in
mov
pushf
and
push
dec
mov
imul
mov
sub
mov
bound
and
shr
mov
sti
adc
adc
arpl
jge
cs
and
inc
pushf
jb
(bad)
and
mov
mov
sbb
mov
and
adc
or
and
inc
icebp
cmp
rol
cmp
cdq
pop
dec
inc
sub
push
bound
test
call
add
fsubr
sbb
dec
loopne
sub
or
inc
dec
mov
loope
sahf
adc
(bad)
push
(bad)
outs
pop
xor
movs
outs
adc
jmp
sub
or
push
cs
sub
add
mov
jecxz
mov
lea
pop
push
xchg
and
adc
inc
div
(bad)
lods
loope
or
in
mov
pop
sub
(bad)
sub
pusha
test
sub
stos
dec
(bad)
das
dec
push
pmovmskb
cmps
out
mov
push
add
cmc
push
(bad)
pop
add
in
rol
ror
cmp
int
retf
push
and
adc
test
inc
mov
pop
cmc
sub
in
jne
test
sub
cmp
jecxz
and
mov
and
movs
mov
push
js
mov
adc
lahf
ret
inc
add
je
lahf
mov
in
daa
sti
fadd
dec
sbb
xor
lds
shl
mov
imul
les
mov
cmp
sysenter
jmp
adc
pop
inc
imul
test
cmp
lods
aam
xlat
test
sahf
and
add
js
outs
sub
jp
jmp
ss
arpl
xor
dec
inc
mov
cli
push
js
in
adc
push
scas
fcomp
mov
inc
or
push
cmp
xor
imul
jne
mov
fwait
paddq
xor
xor
jns
jno
scas
mov
(bad)
nop
cmp
cmp
pop
xchg
(bad)
mov
in
xor
dec
fwait
rcr
ss
daa
daa
and
out
xchg
xchg
xchg
xchg
aaa
push
ja
leave
enter
stc
das
cmp
leave
leave
mov
add
cmp
jecxz
in
fld
sub
sahf
mov
pop
sbb
psrad
ret
es
sub
xlat
cwde
sub
jl
ds
add
repnz
xor
add
cmp
or
mov
dec
mov
mov
or
fst
cmp
cmc
xor
pusha
test
mov
mov
fnsave
cmc
adc
push
cmc
jae
dec
aam
jmp
(bad)
cmc
xchg
adc
jp
cmc
and
das
cmc
push
inc
adc
gs
pop
dec
adc
(bad)
cmc
or
xor
mov
mov
cmc
jno
adc
(bad)
jmp
xor
add
and
jae
pusha
nop
xor
add
jae
adc
(bad)
sub
adc
pusha
inc
xchg
xchg
cmc
adc
rol
sbb
lods
add
les
inc
cmc
dec
cmc
mov
cmc
les
test
ins
add
push
mov
adc
mov
add
adc
mov
xchg
mov
(bad)
sti
(bad)
cmc
mov
add
jns
adc
xchg
dec
bound
lods
cmc
or
bound
jecxz
imul
add
adc
pop
les
cmc
mov
fdivr
scas
adc
push
cmc
xchg
sbb
xchg
cmc
test
add
imul
xchg
mov
push
fnstsw
lea
jp
mov
cmp
cmp
cdq
xor
fadd
outs
pop
int3
cmp
mov
adc
cmp
sub
push
imul
cmp
sbb
pop
push
arpl
pop
or
cmps
xor
mov
xchg
mov
fwait
add
fwait
add
add
push
mov
enter
add
inc
and
hlt
jmp
adc
into
repz
ror
movs
mov
out
pusha
or
add
cs
jbe
jnp
add
push
cmp
xchg
ds
fwait
pop
push
add
adc
jl
in
inc
mov
movs
mov
fst
fnstsw
jle
add
into
cmp
pop
loope
inc
adc
aam
test
xor
push
lahf
push
(bad)
rol
outs
pop
retf
addr16
sub
aaa
or
jne
dec
(bad)
shl
sti
cmp
pop
(bad)
icebp
inc
pop
(bad)
mov
mov
outs
mov
movs
cmps
xchg
cld
jmp
addr16
or
pop
inc
inc
inc
push
pop
cmc
cmp
dec
or
out
addr16
inc
add
(bad)
inc
inc
pop
test
mov
fst
cmp
mov
aam
or
loope
xchg
add
inc
jmp
gs
ins
cmp
or
inc
or
adc
inc
jmp
xchg
int
push
xor
inc
push
sbb
dec
movs
sbb
sub
pop
inc
adc
mov
push
dec
loope
jge
loopne
adc
jnp
jge
sub
sub
cmp
stos
and
xor
or
xchg
lock
add
sbb
jno
sub
scas
and
jl
adc
loope
outs
mov
scas
push
mov
add
out
mov
pop
sub
outs
inc
jle
pushf
fist
pop
jae
mov
rcl
dec
xor
mov
add
loope
je
pop
jo
addr16
loopne
xor
loope
daa
push
add
push
pop
loope
ret
cmp
loopne
ret
xor
mov
pop
xor
mov
das
retf
rol
sbb
sub
aas
jmp
stc
dec
push
inc
retf
cmovle
lock
mov
or
cwde
sub
and
cmc
mov
nop
and
pusha
mov
push
pop
ror
pop
sub
shl
dec
shr
sub
shl
pop
mov
call
add
inc
leave
aam
add
popa
push
sbb
ja
add
push
cmc
sbb
dec
cmps
adc
imul
sbb
inc
xchg
push
mov
sbb
ss
and
dec
push
mov
fwait
sbb
add
push
jo
xor
xchg
jle
(bad)
bound
femms
mov
pop
or
jo
xor
movs
mov
push
mov
movs
sub
movs
or
add
imul
movs
push
imul
test
mov
movs
inc
stos
mov
loope
(bad)
pusha
xchg
mov
or
or
in
inc
dec
out
cmp
and
inc
push
push
xor
out
enter
sub
in
adc
iret
test
push
jo
out
jmp
cli
data16
lods
sub
add
inc
stc
push
loopne
adc
(bad)
inc
or
mov
push
push
and
add
cs
xor
loopne
(bad)
xor
retf
xor
xlat
(bad)
std
add
shl
push
shl
jbe
and
adc
adc
cmps
xor
loope
ret
add
cmp
or
popa
pop
add
push
or
or
das
(bad)
das
push
aas
adc
mov
aas
inc
xchg
inc
ret
nop
push
mov
push
push
mov
xor
push
push
push
mov
xor
(bad)
sti
(bad)
dec
aas
sbb
dec
nop
test
jne
lea
sbb
mov
mov
std
sti
push
dec
mov
pop
mov
add
sub
pop
and
in
push
or
pushf
pop
pop
pop
nop
adc
cmps
(bad)
(bad)
sbb
xchg
ret
and
je
lock
pop
pop
ret
sbb
in
out
or
dec
mov
ds
lar
mov
cld
sbb
(bad)
into
push
add
mov
xchg
mov
mov
mov
xchg
or
mov
mov
pop
or
push
or
pusha
popf
sbb
out
inc
cmp
xor
pop
jbe
mov
pusha
xchg
iret
push
xchg
push
inc
test
je
shl
sub
adc
sub
push
xor
retf
pop
int
jmp
test
add
test
je
test
jne
stos
lock
mov
add
(bad)
or
push
adc
and
(bad)
pop
xchg
pusha
xlat
jae
pop
out
test
ret
push
inc
add
arpl
pop
add
nop
cmp
mov
cmp
push
push
push
push
(bad)
jo
xchg
or
push
xor
push
push
mov
mov
xlat
inc
pop
and
js
mov
clc
push
mov
dec
add
mov
sbb
loopne
lock
or
jp
and
inc
enter
in
in
shl
inc
or
xchg
ret
inc
fdiv
mov
jle
out
mov
and
add
jne
cmp
inc
mov
mov
out
mov
pusha
xor
add
div
mov
ror
jmp
adc
add
adc
adc
inc
outs
rcr
mov
inc
xlat
add
mov
test
and
adc
(bad)
mov
pop
fcomp
sbb
inc
sub
push
xor
push
ror
xchg
fisub
clc
and
es
xchg
mov
test
fwait
jmp
sub
push
mov
mov
cmp
and
fdiv
cli
or
test
pop
jmp
js
pop
fisttp
popf
mov
cmp
in
and
and
cmp
cmp
jg
test
and
mov
call
cmp
push
jle
and
sbb
mov
das
pop
nop
dec
dec
addr16
ret
mov
cmp
mov
or
jle
(bad)
fmul
add
enter
push
add
loopne
add
xlat
loopne
cmp
hlt
cmps
adc
shl
lods
or
jle
mov
inc
pushf
dec
call
adc
ret
hlt
mov
jbe
hlt
pop
jmp
sub
ins
push
mov
pop
test
retf
add
icebp
or
add
fs
inc
xchg
imul
daa
mov
ins
mov
ins
sbb
into
jbe
inc
enter
inc
or
cmp
jg
add
bnd
jg
pushf
outs
adc
mov
jecxz
inc
pop
cmc
inc
mov
mov
test
jne
mov
shr
and
je
lock
mov
(bad)
popa
add
call
push
mov
xchg
inc
aaa
add
outs
rol
dec
add
xchg
add
add
je
pop
jmp
int3
fisttp
xlat
aas
movzx
data16
sti
cs
adc
and
clc
and
add
fs
jl
jne
jle
xchg
dec
cmp
retf
adc
push
aaa
out
jmp
sbb
xor
mov
ja
dec
jne
push
jb
hlt
sub
test
lods
pop
das
jmp
xchg
pop
call
aad
jbe
mov
mov
or
sbb
in
and
imul
loopne
pop
inc
or
fisub
push
add
fsubrp
mov
dec
dec
sub
mov
dec
cmp
ja
cli
fild
push
push
push
jl
sbb
inc
dec
repz
add
loop
lea
mov
popa
cmps
mov
jle
daa
jne
mov
sbb
adc
jp
inc
das
mov
inc
cmp
movzx
outs
rcr
(bad)
inc
push
outs
jmp
cmp
add
in
mov
pushf
jmp
cmp
jge
pusha
sbb
pop
jne
cmp
mov
pop
pop
mov
cmp
xchg
xor
xor
and
fcom
add
fcomp
sub
dec
sbb
sti
jne
bound
cmps
sbb
dec
sub
shl
inc
sbb
mov
aad
popa
jne
aaa
sbb
in
ret
pop
add
adc
adc
test
sbb
fadd
test
enter
add
lds
pop
sub
fdiv
mov
adc
js
(bad)
pop
cmps
pop
push
es
std
inc
lock
lock
cmp
xchg
cmp
(bad)
cmps
in
mov
push
imul
stos
aas
cmp
cmp
cmp
jle
sub
rol
outs
xor
cmps
ror
call
jbe
jmp
dec
arpl
in
leave
inc
mov
les
mov
sub
dec
mov
imul
xor
je
and
mov
mov
push
and
jae
and
add
jns
stos
test
push
mov
mov
xor
sub
mov
je
shr
cmc
sbb
push
hlt
mov
push
sbb
loope
jp
bound
push
sub
xchg
jecxz
(bad)
scas
fldl2t
pop
call
and
test
mov
and
fidivr
aam
sub
ror
adc
push
and
dec
add
add
xlat
adc
mov
add
sub
inc
into
jl
push
shl
mov
mov
mov
and
sbb
pop
inc
lds
add
inc
mov
or
imul
pop
sbb
jne
add
xchg
inc
push
mov
add
pop
lods
cmps
push
popa
and
xchg
scas
adc
add
ret
add
pop
xchg
rcr
dec
and
rcl
sub
inc
lahf
sub
jae
sbb
loop
je
sbb
inc
jb
loope
mov
or
cvttps2pi
shr
pop
add
jl
popf
xchg
(bad)
lea
(bad)
js
dec
mov
jbe
sub
jb
je
dec
je
jmp
mov
pushf
dec
ins
clc
outs
add
inc
and
push
push
push
mov
add
pop
movs
pop
inc
xsave
mov
jbe
dec
xor
mov
and
cmp
cld
mov
call
ret
inc
sbb
adc
test
shl
or
add
push
cmp
dec
fild
leave
xor
pop
xchg
or
dec
mov
and
aaa
adc
sahf
sub
adc
push
and
add
inc
and
test
add
pop
push
mov
inc
xor
jmp
and
mov
dec
add
cmp
cmp
dec
mov
aas
push
add
jnp
cmps
fbstp
or
xor
sub
sar
jns
xlat
add
stc
clc
or
(bad)
ins
sub
sub
jbe
mov
dec
jmp
adc
lea
add
fsubp
lock
add
adc
icebp
jge
pusha
jo
and
xor
test
inc
jl
jmp
cld
or
add
add
xor
pop
sub
mov
mov
aam
jmp
das
mov
inc
ja
cmp
bt
and
ins
push
inc
add
ds
fadd
mov
xchg
test
jns
cld
jg
sub
icebp
in
mov
mov
test
aaa
and
movs
sub
aaa
cmp
jecxz
push
sbb
pop
aaa
js
cdq
sbb
nop
sahf
add
mov
pop
in
lea
jne
or
and
and
sahf
pop
push
inc
retf
cld
mov
cmp
push
jmp
push
fwait
add
nop
addr16
(bad)
mov
xor
sub
push
xchg
rcl
leave
or
fcom
js
xchg
or
push
inc
push
loopne
cli
ret
pusha
neg
fwait
pop
inc
push
jnp
jle
adc
pop
dec
enter
pop
xor
out
mov
fwait
clc
mov
mov
add
pop
add
or
and
out
mov
cmp
inc
ins
ds
and
mov
inc
push
gs
outs
dec
std
jns
js
gs
xlat
pop
xor
daa
in
fiadd
adc
pop
xchg
test
outs
cs
mov
or
addr16
jns
outs
outs
push
add
push
mov
jg
mov
ins
push
jne
inc
jae
sub
add
gs
mov
or
popa
ins
jne
jnp
or
pop
loopne
or
push
pop
mov
sbb
popa
sub
cli
fiadd
adc
adc
imul
test
dec
add
push
jns
gs
jg
mov
or
push
outs
imul
outs
or
push
ret
push
adc
jo
inc
jo
popa
outs
sbb
or
ror
(bad)
pop
pop
pusha
xor
js
push
xlat
sbb
gs
sbb
inc
and
pop
cwde
adc
adc
outs
xchg
mov
hlt
inc
xchg
add
bound
sub
ins
or
xor
aad
dec
fs
sub
push
or
push
iret
inc
cmp
jnp
mov
or
add
add
add
shl
inc
jne
jb
je
sub
sbb
outs
outs
daa
push
ret
aas
test
or
popa
jp
push
pop
sub
or
jbe
mov
push
pop
dec
or
gs
clc
ret
mov
stc
inc
inc
arpl
jae
xor
sbb
mov
adc
loopne
and
out
jbe
lss
(bad)
(bad)
(bad)
in
(bad)
fs
add
aaa
adc
cmps
xchg
xchg
xchg
daa
pop
push
xchg
leave
leave
enter
addr16
and
lods
jecxz
push
in
add
sbb
ror
push
jns
cmp
cmp
dec
inc
sahf
pushf
mov
daa
and
ficom
ins
popa
mov
add
leave
enter
outs
ins
mov
out
mov
add
mov
cmps
les
mov
add
add
shr
push
xor
aaa
add
mov
bound
dec
in
pop
inc
loope
and
not
outs
jns
sub
call
jo
push
jp
ss
scas
in
and
push
int
mov
or
adc
or
jb
or
out
xchg
loop
add
cmp
popa
jno
pop
pop
(bad)
inc
ins
inc
in
dec
test
xchg
scas
add
or
sub
push
pop
retf
push
push
retf
js
loopne
add
rcl
imul
xchg
jns
or
sbb
xor
mov
and
and
rcr
inc
mov
int
jnp
push
fild
fist
les
push
pop
or
ret
lahf
add
loope
pusha
xor
cmp
and
or
jae
rcl
or
lods
inc
jb
pop
and
aaa
or
and
retf
sub
dec
jle
pop
mov
add
push
inc
inc
js
cmp
dec
rcl
inc
mov
mov
popa
fs
sbb
sbb
ins
sbb
mov
mov
mov
popf
fcomp
test
ins
outs
xchg
pop
dec
gs
push
retf
aam
push
pop
mov
jl
mov
mov
outs
cmp
fwait
popaw
outs
ins
jg
add
fidiv
adc
dec
outs
mul
add
or
stos
jmp
adc
rcl
push
out
pop
mov
xchg
fstp
ja
clc
int
mov
data16
cdq
inc
pop
push
mov
outs
or
imul
mov
push
and
loope
mov
imul
mov
jae
ins
and
inc
jmp
je
mov
pop
sbb
xor
ins
outs
dec
fsubr
(bad)
adc
add
jno
loop
add
cmp
fucomi
(bad)
rcr
sar
push
xor
leave
inc
outs
outs
outs
ds
mov
push
dec
inc
int3
mov
ret
jecxz
and
add
sbb
or
(bad)
mov
jo
popa
arpl
jmp
scas
jne
inc
mov
popa
add
push
jo
dec
rcl
push
test
and
rcr
xlat
std
push
popa
jno
add
(bad)
in
dec
push
sub
stos
add
or
sbb
or
mov
cmp
pop
imul
add
(bad)
mov
mov
mov
or
cdq
add
shr
push
xchg
inc
not
or
test
and
aas
iret
aas
or
sti
mov
hlt
in
xchg
out
pusha
fisub
rcl
mov
ja
inc
inc
mov
aam
cs
pop
pop
jnp
movs
xchg
jle
adc
xor
js
bound
or
fs
jno
dec
inc
push
pop
fs
imul
pop
lods
add
xor
sar
gs
dec
nop
push
push
push
xor
loope
pop
xchg
or
aas
fisttp
cmp
fucomi
clc
rol
fisub
fimul
dec
jae
call
pop
xchg
pop
xor
xchg
pop
hlt
xchg
and
inc
or
mov
retf
push
ins
add
jo
fmul
adc
pop
and
fdiv
movs
stos
jb
sbb
mov
jl
les
jb
mov
cmp
xchg
pop
in
add
add
adc
adc
sbb
mov
pop
or
arpl
cli
dec
add
jne
mov
je
mov
jmp
adc
jmp
mov
jp
clc
adc
xlat
lock
mov
inc
push
ins
je
scas
add
fadd
mov
sbb
(bad)
add
inc
or
mov
cmovnp
fcom
mov
fisttp
orps
add
mov
rol
outs
and
mov
adc
inc
add
inc
outs
sub
sbb
bound
fdivrp
in
cld
and
aaa
addr16
push
pop
adc
sub
mov
test
jo
pop
stos
gs
test
and
out
pop
jne
push
dec
repnz
and
xor
fcom
cmps
mov
dec
and
sbb
fidivr
mov
jae
test
cmp
push
mov
pop
sub
mov
xchg
mov
pop
mov
push
shr
dec
clc
leave
je
out
xchg
mov
push
or
lock
les
dec
sti
mov
nop
jl
out
add
cld
mov
or
popa
push
mov
icebp
cs
inc
shr
les
sti
dec
push
adc
xor
mov
shl
jp
nop
push
sbb
in
mov
xchg
sbb
xor
push
(bad)
fmul
pop
inc
pop
int3
mov
add
sbb
cli
xor
clc
loopne
xchg
rol
push
cld
dec
mov
aam
push
hlt
pop
or
xchg
push
mov
nop
cli
dec
push
or
loope
cwde
xor
rcr
hlt
mov
leave
mov
mov
jle
and
lock
or
out
(bad)
sti
fnstcw
or
ret
loopne
add
test
pop
jmp
xor
jmp
and
in
push
jmp
in
enter
xchg
test
add
mov
push
fcom
jp
retf
sti
push
sub
xor
add
add
pop
imul
cld
mov
mov
adc
fisub
inc
or
or
add
pop
push
ret
inc
fstp
in
fimul
cmp
frstor
cmp
rcl
add
add
pop
aam
in
fmul
je
test
fsubr
aas
sbb
dec
lea
mov
data16
pusha
shl
mov
fadd
into
add
push
fstp
xor
cs
ret
loopne
xor
popa
adc
sbb
data16
mov
sbb
mov
ror
call
inc
dec
jne
shl
and
adc
shr
pusha
xor
pop
dec
or
test
je
cmp
add
pusha
jg
push
add
adc
xchg
push
movs
inc
lock
out
add
adc
push
push
push
push
add
push
das
scas
(bad)
add
dec
dec
nop
imul
push
pop
adc
ss
ret
jae
int
nop
push
push
ss
jbe
add
mov
or
cmps
or
ja
add
jo
int3
pushf
or
inc
push
and
cs
adc
data16
adc
nop
imul
or
cmps
inc
pusha
mov
cli
jae
cmp
xlat
xor
jmp
sbb
adc
dec
adc
xchg
mov
add
mov
sub
mov
cwde
mov
std
push
inc
and
imul
(bad)
stos
cmp
push
inc
or
add
push
fcomi
push
sti
int3
lock
imul
add
pop
pop
ret
mov
mov
and
ss
inc
pusha
add
out
lahf
outs
in
sbb
push
ins
xor
or
iret
imul
imul
sar
pusha
jo
mov
push
jl
or
mov
mov
xchg
imul
add
mov
adc
or
push
cmp
mov
xlat
xchg
arpl
sbb
xchg
call
popa
nop
pop
adc
sbb
sti
pop
xchg
sti
cmp
bound
dec
scas
add
inc
or
xor
call
(bad)
test
sti
or
movs
inc
xlat
mov
push
pop
and
popf
call
repnz
xor
jne
in
jne
int3
call
loopne
push
jnp
pop
mov
push
loopne
mov
jl
mov
adc
cs
push
pop
cs
icebp
(bad)
or
add
add
add
adc
jne
ins
test
xor
aas
cs
add
ja
jmp
stos
aaa
retf
add
mov
scas
sub
inc
mov
ins
aaa
jne
sub
aaa
add
cmp
dec
mov
sub
inc
movs
xchg
test
pop
xchg
scas
xchg
or
jo
test
push
dec
add
ss
iret
retf
xor
adc
jg
xor
xor
aas
add
push
add
xor
add
fs
aas
inc
or
(bad)
xor
rol
push
dec
add
xor
inc
xchg
add
mov
bound
data16
jb
dec
and
inc
idiv
inc
rcl
data16
adc
mov
pop
mov
aaa
aas
(bad)
ja
test
aas
add
mov
push
(bad)
pop
retf
xchg
adc
imul
cli
adc
add
and
outs
cmps
and
ja
int
cdq
fidivr
jmp
push
pop
pop
jbe
pop
xor
int3
or
scas
xor
inc
push
xchg
fwait
ret
rcl
adc
pusha
xchg
call
out
inc
or
inc
aas
lds
add
or
and
in
bound
pop
cmps
pop
scas
add
ja
call
cs
xor
movs
es
push
xchg
sbb
push
(bad)
jno
xor
xchg
outs
dec
mov
inc
mov
nop
pop
mov
mov
cwde
ret
inc
inc
mov
test
push
fstp
sub
dec
or
sbb
fcmovnu
ret
fldcw
sbb
push
out
jb
test
and
cli
mov
fs
mov
push
out
stos
(bad)
add
dec
xchg
ret
push
dec
fidiv
sbb
out
dec
es
loopne
inc
push
jmp
push
push
cs
fisttp
js
out
mov
add
dec
pop
jbe
test
pop
aas
cmp
mov
inc
iret
mov
ja
or
adc
jg
push
inc
or
jnp
sub
aaa
inc
inc
pop
push
pop
out
adc
pop
aas
mov
inc
(bad)
aaa
add
sbb
out
aad
or
out
ss
cs
test
mov
rcl
push
or
xchg
cmp
sub
dec
sbb
pop
aaa
daa
ret
adc
add
daa
pop
push
ror
adc
push
sub
xor
aaa
out
cmp
outs
pop
mov
push
test
mov
mov
xchg
scas
test
scas
cmps
aam
jo
mov
add
add
add
(bad)
test
or
push
mov
mov
rcr
add
push
add
fcmovb
outs
ret
in
js
hlt
or
push
aam
xlat
add
xor
retf
lds
jg
push
xor
pop
dec
aaa
push
dec
shr
rol
sbb
lods
xchg
push
fwait
pop
rol
aaa
neg
je
or
rol
rol
pop
ds
add
xor
push
pop
jg
imul
jo
and
cmp
add
cmp
or
or
pop
adc
add
shl
xchg
dec
aaa
(bad)
jg
loope
cs
out
cwde
and
push
sbb
add
inc
dec
(bad)
jns
movs
or
add
retf
dec
cwde
ret
adc
mov
dec
pop
push
and
pop
pop
dec
fimul
push
cwde
adc
mov
add
imul
add
inc
mov
loope
daa
ins
push
addr16
adc
xor
sbb
sub
xchg
xor
push
add
add
cmova
(bad)
adc
and
or
dec
sti
dec
fwait
inc
les
test
dec
ret
and
inc
and
pop
push
xchg
add
or
inc
pusha
push
xchg
call
pop
movs
dec
aas
mov
dec
das
lahf
push
inc
jo
and
push
sbb
pushf
adc
jmp
test
iret
xchg
xor
xor
push
mov
dec
adc
inc
or
cmp
iret
pop
inc
or
ror
sub
push
or
out
fwait
daa
inc
add
pop
scas
xor
or
imul
xor
and
test
fist
scas
jnp
mov
inc
xchg
pop
mov
xlat
xchg
pusha
add
pop
jae
sub
push
cdq
sar
inc
das
add
inc
sub
jo
inc
push
mov
test
mov
out
sbb
push
jmp
dec
mov
ss
call
add
add
adc
xchg
aas
aas
jle
fadd
rcl
or
mov
mov
xlat
dec
ret
mov
and
call
dec
pusha
xor
out
ds
aas
sbb
push
push
fistp
dec
scas
pop
fcom
lahf
dec
push
inc
push
popa
fbstp
add
push
and
sub
shl
or
mov
and
pop
dec
ss
or
(bad)
mov
je
xor
ret
ja
pop
dec
sbb
jmp
adc
ins
lahf
jnp
and
push
xchg
mov
inc
mov
add
dec
pop
nop
xchg
cmps
add
dec
sub
pop
push
and
adc
pop
add
pusha
mov
dec
rol
adc
and
push
add
shr
xor
movs
mov
pusha
dec
sbb
push
sub
in
inc
dec
cmps
pop
adc
sub
out
add
sbb
popa
dec
and
aas
cmp
pop
(bad)
into
out
pop
mov
xlat
das
addr16
mov
adc
dec
pusha
add
aaa
push
mov
inc
xchg
cmp
adc
mov
outs
push
inc
sbb
(bad)
pop
mov
scas
jo
pop
adc
or
and
pop
into
or
xlat
mov
addr16
or
add
pop
xchg
or
jo
or
das
jns
aam
push
inc
mov
les
add
add
or
mov
sbb
aaa
mov
add
dec
push
push
mov
push
stos
adc
inc
push
adc
and
jecxz
dec
jo
push
(bad)
push
into
adc
add
scas
xor
jnp
dec
stos
xchg
test
push
fmul
enter
xor
loop
addr16
push
ret
mul
dec
dec
sbb
pop
test
pop
push
and
cmp
add
pusha
or
add
xchg
mov
lahf
out
dec
sbb
mov
fisubr
aaa
adc
xchg
xlat
push
and
push
lods
adc
xchg
mov
or
pop
lods
inc
ds
leave
add
ss
push
test
jbe
dec
push
fidivr
loopne
stos
dec
push
imul
dec
push
push
(bad)
retf
test
outs
push
ret
je
(bad)
aas
push
pop
and
cmp
ins
rol
dec
outs
inc
rcl
or
add
add
mov
aas
mov
nop
stos
mov
mov
ret
aas
pop
push
adc
or
inc
ins
xor
cmp
and
dec
mov
xchg
mov
inc
daa
fbstp
cs
mov
push
push
xchg
mov
xor
xchg
loop
push
mov
jb
or
dec
lds
inc
xchg
push
mov
fsubr
pop
mov
push
xor
movs
lods
push
aas
pop
mov
xor
push
test
adc
aas
push
retf
or
jg
movs
mov
mov
adc
(bad)
jg
ret
adc
push
mov
xor
push
add
fdiv
sti
push
std
rcl
popf
dec
xchg
push
mov
lea
mov
call
mov
sub
cwde
sbb
mov
(bad)
call
inc
cmp
ds
xor
movzx
cmp
jne
mov
jmp
in
mov
sete
test
je
dec
hlt
imul
push
int
fldlg2
mov
mov
mov
lock
int3
ins
mov
and
adc
mov
jne
or
xchg
push
mov
cli
aam
jmp
out
cs
ins
pop
pop
pop
pusha
adc
jl
mov
fcmove
add
or
or
push
mov
pop
mov
pop
ret
pop
sbb
aas
outs
and
xor
inc
xchg
dec
xor
pop
add
shr
push
push
mov
mov
ja
sahf
add
xchg
cmp
mov
mov
and
pop
loopne
pop
test
jne
retf
add
xor
mov
mov
rol
mov
xchg
inc
es
loopne
push
inc
ret
pop
pop
pop
pop
jg
ins
adc
repnz
loopne
push
nop
lahf
test
add
(bad)
vucomisd
jle
popa
inc
cmp
jl
or
inc
jmp
ins
dec
push
retf
mov
push
adc
push
mov
xor
lea
retf
ret
jge
jle
into
clc
push
(bad)
mov
mov
mov
int3
adc
outs
xchg
xchg
movs
loop
or
cmp
jne
xor
pop
out
in
push
inc
pusha
xchg
mov
ret
hlt
mov
addr16
outs
xchg
nop
push
mov
cvtps2pi
leave
leave
leave
cs
adc
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
push
pop
sbb
leave
leave
leave
leave
sbb
sbb
data16
push
pop
test
add
dec
dec
add
add
dec
dec
dec
dec
push
pop
or
dec
dec
dec
dec
or
or
and
dec
push
(bad)
(bad)
icebp
daa
daa
daa
daa
repnz
cmc
daa
daa
daa
daa
div
clc
stc
daa
daa
daa
daa
cli
sti
cld
std
daa
daa
daa
daa
(bad)
jmp
loope
daa
daa
daa
loop
in
daa
daa
daa
daa
out
call
daa
jmp
daa
out
out
rcl
daa
daa
daa
daa
rcl
aam
daa
daa
daa
daa
(bad)
xlat
fcomp
daa
daa
daa
daa
fcmovu
(bad)
daa
daa
daa
daa
(bad)
rol
daa
daa
daa
ret
lds
daa
daa
daa
mov
leave
daa
daa
daa
daa
retf
int
daa
daa
daa
into
iret
mov
mov
outs
add
mov
xlat
push
lock
sbb
mov
mov
imul
ins
inc
dec
jnp
cmp
cmp
xor
fisub
inc
ins
ds
ja
xchg
inc
dec
outs
jbe
ins
imul
arpl
int
or
sub
add
mov
not
ins
sub
add
ret
add
pop
test
scas
push
fist
rol
sub
adc
mov
sub
pop
cmp
cmp
movs
inc
push
or
mov
sti
push
push
gs
bound
sub
lods
aaa
sti
aas
shl
push
push
dec
popa
outs
fs
bound
or
mov
or
je
nop
cmp
mov
nop
dec
stc
imul
imul
dec
jb
gs
adc
push
sub
lock
add
mov
and
and
jns
mov
inc
rol
inc
push
xchg
or
mov
add
popa
ins
inc
jo
mov
inc
push
jne
outs
imul
lock
cmp
push
fcom
or
jo
push
outs
jp
push
nop
xchg
std
cs
jae
add
sbb
or
(bad)
in
fld
inc
jl
or
pop
xor
inc
cmps
out
or
push
sbb
or
in
div
sbb
gs
jo
sbb
jl
fidivr
dec
outs
js
jge
sub
add
popa
arpl
push
pop
js
add
shl
dec
outs
jo
je
ins
inc
push
jns
mov
adc
ins
dec
(bad)
addr16
and
sbb
xor
adc
xor
(bad)
lahf
retf
fdivr
adc
pop
outs
(bad)
mov
fidiv
pop
adc
and
xchg
cmc
xchg
add
lods
cmc
push
pop
cmc
add
add
or
out
mov
mov
push
inc
jb
jl
dec
test
pop
pop
pushf
xor
bound
push
adc
dec
mov
jp
mov
or
push
stos
sahf
in
outs
pop
arpl
inc
inc
imul
mov
outs
jae
es
test
or
dec
adc
push
sbb
pop
lock
push
inc
xchg
ins
mov
enter
jbe
push
aaa
test
mov
xchg
dec
(bad)
movs
jl
scas
jle
adc
push
outs
jne
arpl
sbb
mov
das
mov
movs
pop
add
in
sbb
mov
js
rcr
ins
iret
sub
pop
data16
or
jne
mov
aaa
int3
dec
das
or
(bad)
dec
add
clc
jecxz
(bad)
mov
and
dec
(bad)
push
push
mov
mov
or
(bad)
outs
sar
add
rol
push
sub
test
add
xor
push
pushf
pop
add
or
cs
fucomi
imul
shl
add
sbb
mov
dec
sbb
mov
fimul
dec
test
sub
not
or
dec
outs
or
sbb
inc
es
jp
cmp
mov
push
inc
dec
bound
arpl
push
test
fcomp
outs
sub
push
in
fs
pop
add
ins
data16
fild
lea
int3
nop
dec
inc
pop
in
or
pusha
or
inc
mov
dec
pop
call
pop
outs
outs
add
and
mov
sub
clc
pop
sub
or
mov
cmovns
(bad)
sti
loop
imul
pop
cmps
inc
rcl
sahf
xchg
or
fldenv
js
cmp
cmp
call
push
ret
fnstsw
or
daa
push
sub
inc
jno
(bad)
or
cmps
adc
push
clc
push
in
jmp
or
push
adc
inc
div
rol
xchg
push
inc
push
imul
outs
push
sbb
mul
cmp
pop
sbb
test
push
add
loope
mov
push
dec
loopne
add
retf
add
mov
push
(bad)
cmp
daa
jno
inc
jo
mov
jns
ss
popa
ja
cmps
push
inc
jmp
add
fadd
lock
dec
and
aas
cmp
mov
in
in
dec
mov
and
pop
or
fcomp
fist
or
push
mov
jno
push
ss
push
aas
or
add
jns
jo
mov
cmp
in
pushf
(bad)
jg
adc
push
cmp
nop
aad
push
and
sub
dec
mov
mov
loopne
cld
push
add
xchg
or
cmp
jp
loopne
sbb
cmp
sub
pop
jl
or
mov
mov
retf
pusha
pop
daa
fadd
push
lods
cmps
repnz
das
mov
or
or
xor
jb
push
lods
aaa
push
jl
xor
xor
ja
mov
test
mov
xor
bound
(bad)
int
cs
popf
cmp
mov
or
ja
out
pusha
cmps
hlt
push
xor
dec
das
addr16
cmp
ror
dec
adc
add
daa
add
sahf
cmps
adc
or
add
rol
xchg
push
mov
mov
pop
inc
shl
lock
dec
dec
outs
dec
jge
jge
xor
cwde
push
jl
jge
push
ins
dec
jge
ror
loopne
sbb
fmul
push
xchg
cmp
cmp
adc
or
scas
push
outs
(bad)
pusha
imul
adc
jo
sub
cmp
or
sub
pop
jnp
jl
jbe
sbb
add
xor
mov
mov
fisttp
pop
inc
or
jnp
ss
xor
daa
lock
inc
mov
add
bound
and
dec
jb
push
mov
daa
imul
jbe
xchg
cmc
(bad)
push
cmc
mov
push
cmp
mov
push
jns
cmp
stc
in
pop
stc
push
dec
adc
pusha
mov
stc
dec
add
inc
sbb
aaa
sti
jb
fisub
out
hlt
pop
call
or
mov
enter
sbb
ret
mov
mov
mov
xchg
or
(bad)
fisub
cs
and
mov
pushf
enter
pop
sbb
not
pop
push
lds
sbb
inc
or
ins
ins
xor
adc
data16
call
adc
or
xor
add
fnstsw
push
inc
sahf
jbe
pop
push
loop
idiv
cmp
cdq
clc
ss
add
xchg
or
adc
call
push
or
xchg
iret
out
add
fcom
movs
add
(bad)
js
out
push
clc
pop
or
gs
outs
push
out
sysenter
ja
addr16
(bad)
lahf
(bad)
push
add
add
mov
aaa
cld
ficom
push
enter
pushw
je
outs
ins
or
or
ins
arpl
es
in
ss
adc
repnz
ins
sub
lock
scas
imul
mov
sbb
push
jo
push
sub
mul
jae
sbb
ins
and
loope
push
jbe
addr16
and
push
jo
call
outs
inc
cmp
imul
sbb
push
je
sbb
sbb
mov
mov
call
sbb
jo
or
ins
add
mov
out
imul
mov
push
mov
rol
mov
inc
aas
dec
outs
ins
jns
cmps
jo
mov
inc
lea
cld
ins
jo
adc
xchg
jo
pop
xchg
mov
or
in
or
add
rcr
or
mov
push
add
inc
xor
push
(bad)
cmp
ins
es
fdiv
in
test
pop
add
xchg
add
cmps
push
popa
fbstp
cmps
or
call
or
ins
lea
lods
add
cmp
retf
int
xor
push
pop
mov
add
nop
retf
mov
sub
add
push
add
sldt
jno
jb
lock
mov
adc
in
adc
jae
cmp
mov
scas
dec
stc
not
add
push
or
pop
ja
push
mov
sbb
push
mov
mov
mov
sbb
pcmpeqd
repnz
adc
push
add
mov
mov
mov
scas
fnstsw
pop
and
inc
mov
das
ret
adc
ror
gs
idiv
mov
ror
push
mov
xor
or
add
scas
jl
sub
inc
jb
inc
inc
cmp
adc
or
push
inc
in
shl
add
pop
inc
pop
pop
mov
or
ret
(bad)
or
pop
mov
xor
out
popf
or
cs
call
adc
pop
push
add
add
rol
loopne
or
sbb
inc
lidtd
add
addr16
das
pop
push
push
inc
mov
add
movs
mov
or
sub
daa
fisub
ja
gs
push
clc
fiadd
data16
inc
retf
fst
add
dec
push
popa
test
push
fcomp
sub
int3
or
adc
mov
aam
rcr
ss
test
call
or
add
push
jl
add
sbb
cmp
fldenv
pop
popa
inc
imul
out
inc
pop
dec
jo
arpl
cmp
or
lds
jno
jnp
jl
sar
pop
xchg
inc
dec
jg
shl
or
or
adc
push
add
adc
in
cwde
call
outs
outs
lock
xor
inc
sub
loop
shl
sub
push
adc
cmp
push
adc
adc
sub
dec
inc
add
sbb
dec
dec
adc
in
add
adc
dec
outs
jbe
dec
sub
adc
pushf
popa
stos
pop
push
lock
clc
add
push
lock
push
add
inc
or
dec
adc
cmp
ins
mov
outs
jne
jb
cmp
inc
gs
xor
or
mov
movs
jae
ja
push
pop
cmp
jne
push
dec
mov
adc
inc
sbb
add
jae
mov
xchg
mov
fs
pop
inc
push
aam
ins
sbb
popa
push
and
pop
popf
(bad)
into
and
popf
push
add
add
add
fstp
in
mov
clc
push
mov
sbb
sbb
aas
mov
aad
imul
in
inc
ins
mov
and
nop
inc
(bad)
xchg
add
adc
push
inc
(bad)
add
sub
mov
test
and
mov
test
cwde
mov
xchg
rcl
imul
xchg
or
nop
xchg
xor
push
scas
pop
add
imul
pusha
add
or
add
push
rol
push
addr16
add
data16
jne
mov
es
dec
push
push
outs
test
or
inc
xchg
and
pop
daa
dec
inc
int3
sahf
and
dec
jnp
fadd
push
jne
xor
xchg
addr16
pop
or
mov
pop
and
ret
or
and
aad
sbb
add
lock
mov
out
js
sub
pop
call
imul
pop
outs
add
rol
inc
or
xchg
movs
adc
or
fdiv
dec
cli
lea
inc
test
cmp
jl
inc
inc
xor
vcvtps2pd
push
outs
jae
inc
pop
loope
add
mov
sub
lock
mov
xor
ja
xchg
push
ins
iret
out
les
ret
add
ins
rol
pop
cmp
shld
add
push
pusha
sti
push
in
push
sub
sub
or
es
out
in
cmp
sub
int
repz
push
fs
test
imul
sbb
dec
xchg
jl
ja
shl
and
push
xchg
rcr
out
cmp
int3
or
push
push
pop
xor
dec
ficom
es
ins
daa
mov
push
sub
add
xor
add
adc
call
sahf
test
xchg
pop
sub
and
jl
inc
push
jo
add
stos
pop
ret
sub
and
mov
inc
push
inc
into
dec
lods
sar
and
loope
adc
add
stc
lods
sti
(bad)
(bad)
cld
out
push
cld
push
mov
(bad)
mov
push
(bad)
push
fadd
xchg
aas
(bad)
(bad)
cli
mov
enter
not
sub
movlps
jl
(bad)
fmul
retf
(bad)
mov
pop
dec
push
add
or
pop
add
inc
nop
sbb
int3
cld
adc
add
add
push
add
jle
int
and
imul
and
xadd
hlt
call
and
pinsrw
sub
aas
push
in
push
sub
pop
or
push
xchg
lock
xchg
ds
adc
inc
pop
je
inc
xchg
out
test
jno
jbe
test
cmovp
xchg
add
pop
dec
mov
jno
leave
sub
aas
mov
push
sbb
call
or
rcl
cmp
dec
dec
in
sbb
gs
jp
xchg
adc
or
sub
jo
push
inc
push
cdq
sub
inc
xchg
sbb
sbb
aas
sbb
movs
es
popa
xchg
and
mov
dec
stos
mov
lods
lea
cmp
mov
daa
inc
ror
sbb
adc
in
cmp
lods
or
adc
ja
leave
ja
lods
jo
add
push
sub
push
(bad)
or
sar
inc
xor
test
leave
fs
leave
or
sub
inc
or
leave
jae
xchg
pusha
rcl
cmp
ja
mov
dec
shl
cmp
push
pop
and
pop
sbb
jno
xchg
push
mov
pop
call
sub
adc
mov
jno
mov
cmp
add
mov
dec
jge
sub
cmps
inc
dec
xchg
mov
or
(bad)
sub
or
xor
dec
scas
cld
(bad)
sub
dec
daa
pop
cs
(bad)
dec
push
pusha
mov
test
sbb
jmp
sbb
scas
sbb
or
ret
cld
inc
pushf
jo
popa
aas
pop
int3
push
test
into
mov
push
iret
jmp
xor
jmp
lods
inc
add
bound
mov
scas
add
mov
inc
ficomp
scas
shl
mov
loop
cld
sub
dec
adc
or
fisttp
loope
mov
push
push
jb
addr16
out
jmp
test
jnp
cmp
jo
push
stos
adc
mov
or
es
ror
outs
push
adc
mov
or
cdq
and
or
fsub
xor
es
or
data16
fst
out
mov
mov
pusha
inc
aas
cmc
adc
jns
or
outs
ja
mov
outs
cwde
data16
push
add
or
push
ds
pusha
add
enter
div
rcr
daa
or
sub
add
nop/reserved
imul
sti
push
imul
idiv
lahf
dec
int3
add
push
mov
mov
xchg
ret
sbb
out
jbe
inc
and
fmul
or
jmp
adc
int3
add
cdq
(bad)
mov
mov
es
sbb
ror
out
out
mov
fsubr
mov
xor
inc
add
mov
in
add
push
fsub
push
shl
stos
sub
jo
push
cld
inc
adc
push
sbb
pop
xchg
clc
dec
loope
or
in
aas
ja
es
push
mov
push
pop
mov
jmp
inc
push
xor
mov
pusha
fstp
cmp
les
xor
test
and
sbb
test
inc
jo
test
cmp
mov
pushf
push
(bad)
push
and
inc
push
bound
jae
xchg
das
and
mov
addr16
stos
rol
push
dec
add
dec
push
adc
xchg
ret
out
prefetchnta
aad
mov
popf
mov
shl
ins
fsub
loopne
call
or
loopne
cmps
add
xor
push
inc
jno
push
bound
mov
dec
jae
rcr
gs
or
outs
popa
stos
mov
sub
cmps
daa
cs
pop
mov
adc
sbb
cmp
or
push
ja
adc
xchg
repz
inc
icebp
add
mov
retf
pushf
sub
repz
in
jb
imul
sbb
sbb
mov
in
and
push
ins
dec
pop
inc
jns
sbb
fimul
or
inc
inc
sbb
nop
cmp
inc
xor
dec
es
or
add
dec
es
dec
cmp
sahf
push
imul
and
push
inc
add
imul
cs
test
imul
xchg
lea
inc
data16
pop
(bad)
arpl
scas
or
cs
adc
retf
inc
test
out
lahf
mov
inc
ins
jo
jns
mov
cmp
push
outs
or
jne
jmp
or
aad
inc
or
imul
jle
xchg
(bad)
aad
fcom
inc
inc
(bad)
pop
sbb
push
push
sbb
cmp
or
xor
lock
add
lods
rcl
adc
movs
test
add
push
test
sbb
pusha
jnp
push
jne
and
jo
je
jle
ins
sbb
arpl
fdiv
mov
xchg
add
add
fsubr
xchg
push
inc
and
cmp
add
sti
cs
std
in
adc
int3
xor
(bad)
xor
(bad)
rcr
mul
push
push
xlat
add
push
mov
push
push
fldenv
cmp
add
aad
mul
shl
test
dec
push
push
sbb
push
ret
and
stos
sub
in
add
add
imul
sub
push
ret
xchg
outs
mov
mov
sbb
(bad)
fisubr
push
push
(bad)
iret
enter
(bad)
mov
dec
push
repz
data16
lds
inc
pshufw
cld
sub
inc
push
push
jb
sbb
add
add
dec
push
mov
push
daa
dec
pop
pusha
mov
sub
inc
bound
push
cmp
xor
loopne
inc
or
sub
fadd
xchg
inc
sub
fmul
mov
daa
rcl
mov
lahf
mov
push
inc
into
add
xchg
add
imul
popa
or
hlt
loop
scas
sub
cmp
adc
addr16
gs
ret
icebp
call
cmc
aam
adc
or
rcl
in
push
inc
shl
scas
add
cmp
in
xchg
cwde
or
dec
out
sahf
call
inc
add
add
mov
push
outs
into
rol
mov
das
mov
fadd
jnp
das
xor
xor
xchg
adc
push
pusha
lds
adc
shr
(bad)
outs
adc
push
cwde
xlat
or
push
adc
xor
repnz
dec
cmp
xor
jecxz
(bad)
push
add
adc
cmps
push
ds
mov
inc
cmp
or
fs
sub
push
pusha
std
sbb
add
mov
add
cmp
test
xchg
xchg
sbb
push
xlat
add
arpl
mov
rol
out
pop
cmp
pop
ins
pushf
popa
dec
lds
adc
ret
inc
adc
mov
mov
movs
das
mov
mov
cwde
push
out
mov
imul
xor
add
sub
xor
mov
or
push
push
pop
adc
xor
push
or
pusha
enter
pop
jae
sbb
(bad)
cmp
jl
inc
add
push
loope
push
mov
or
add
push
jle
pop
or
jo
fistp
push
push
pop
ja
pop
aaa
mov
js
(bad)
(bad)
adc
add
inc
sbb
or
jnp
push
push
clc
or
mov
sub
inc
dec
outs
arpl
(bad)
fcom
gs
jo
push
sub
or
(bad)
mov
push
xor
adc
movs
loope
push
push
adc
ds
pop
jns
push
ins
ret
add
fcomp
xor
out
loop
jnp
loope
es
add
rol
jg
frstor
loopne
jmp
push
push
sahf
push
adc
fsincos
ds
push
jl
outs
pop
push
out
daa
jge
in
push
call
add
mov
mov
dec
adc
bound
arpl
push
add
xor
or
in
stos
inc
push
icebp
movs
cmps
outs
loop
dec
enter
imul
pop
pop
jl
(bad)
movhps
nop
loope
add
push
dec
push
icebp
movs
out
sbb
or
sbb
ret
test
jne
lds
ror
mov
cmps
neg
inc
je
inc
and
pop
dec
add
ds
or
or
adc
das
ror
add
xchg
cmp
sub
clc
pop
cmp
cmp
mov
push
xchg
cmp
inc
cmp
inc
cmp
pop
test
or
sub
sub
gs
xchg
add
mov
pop
inc
add
inc
inc
repnz
push
scas
push
pop
(bad)
xchg
mov
pop
push
rcl
pop
pop
pop
out
inc
mov
or
inc
inc
inc
iret
repnz
adc
mov
or
je
(bad)
fs
jns
aam
xor
sbb
and
(bad)
and
pop
pop
push
xor
push
lock
mov
(bad)
inc
or
das
dec
dec
dec
jae
add
lods
inc
or
inc
push
jno
rol
lock
ins
out
inc
clc
scas
cmp
es
call
fidivr
js
out
pusha
sub
push
dec
int3
push
add
add
or
out
and
out
or
xchg
inc
loopne
test
clc
rcl
js
(bad)
cli
or
dec
inc
push
mov
jmp
sub
dec
ins
mov
sub
jo
or
jg
add
shl
mov
loopne
push
sub
fcmove
test
icebp
cmp
xor
mov
aad
out
jno
fwait
loopne
mov
xchg
outs
mov
cwde
add
mov
push
jns
jge
xchg
ds
fmul
pop
pop
add
push
imul
jle
fcmovnbe
xor
jo
push
push
gs
adc
xor
ins
xor
or
cmp
sub
(bad)
xor
adc
jp
jne
rcl
jle
mov
inc
ins
and
out
mov
dec
xor
inc
dec
mov
rcl
add
mov
out
movlps
ins
jne
inc
jo
mov
test
mov
movs
cdq
enter
sub
lock
dec
inc
jne
pop
or
loop
test
mov
push
jmp
(bad)
mov
push
in
adc
or
jno
mov
popa
jmp
lods
jbe
ja
in
jns
or
add
ret
push
add
and
inc
lock
xchg
push
push
cld
inc
hlt
jae
daa
push
adc
xchg
push
dec
test
fdivr
jo
rcr
lods
(bad)
(bad)
shl
sbb
mov
(bad)
mov
add
movs
dec
rol
xor
xcrypt-cfb
cmps
out
jae
ss
xor
dec
ja
or
xor
push
cmp
sub
sbb
ins
inc
add
test
sbb
(bad)
pop
adc
and
add
ss
aas
int
scas
cmp
and
dec
inc
push
shr
les
push
cwde
enter
js
icebp
and
stc
mov
pop
add
fistp
rdmsr
arpl
dec
test
outs
fnstsw
xor
cmp
aas
ror
and
adc
pop
dec
test
int3
stc
es
gs
adc
pop
pop
dec
pop
adc
pusha
mov
cmp
mov
rcr
out
mov
sahf
and
mov
push
(bad)
les
pop
test
inc
pop
imul
fsubr
and
ds
ins
mov
jp
add
aam
push
addr16
mov
ins
ret
jmp
pop
shr
inc
and
mov
push
popa
or
popa
in
inc
retf
pusha
pop
pop
pop
fnsave
fsub
and
leave
add
jmp
adc
cmp
mov
aad
or
adc
pop
jns
cmova
push
cmp
out
xor
xor
or
pusha
cmp
jne
or
push
adc
nop
pop
adc
test
push
add
or
cwde
cmp
inc
loop
mov
outs
inc
in
(bad)
lea
lods
or
cli
add
pop
xchg
daa
adc
(bad)
or
jl
in
pop
ficom
dec
enter
xchg
mov
daa
mov
xor
add
sahf
jl
dec
or
adc
nop
cmp
bound
mov
aaa
gs
cmp
mov
(bad)
xchg
and
xchg
fidiv
int3
int
adc
mov
add
(bad)
pop
dec
test
cdq
(bad)
mov
in
jne
in
ins
dec
outs
cwde
arpl
das
push
jno
mov
mov
adc
or
in
add
fisubr
dec
or
jne
je
mov
pushf
seta
in
dec
xchg
(bad)
jl
cmc
mov
push
ins
xor
sub
mov
mov
push
xor
loopne
xchg
test
xchg
adc
movs
in
(bad)
mov
inc
dec
gs
in
jns
lock
icebp
lods
jle
add
pop
sbb
sbb
jbe
push
mov
(bad)
(bad)
mov
push
(bad)
scas
rcr
pop
xor
ins
fild
pop
or
xor
jge
or
xor
push
or
push
and
mov
inc
pop
je
jbe
ja
out
adc
mov
les
push
mov
imul
popa
cmps
push
cwde
push
mov
jne
mov
push
pusha
push
(bad)
and
adc
movs
sahf
jbe
enter
inc
enter
loope
sbb
pop
out
jmp
sub
push
out
push
jb
jne
gs
rcr
std
add
sbb
out
cmc
(bad)
pop
paddd
push
push
rcr
add
idiv
jmp
and
pop
sbb
stc
(bad)
fld
sbb
xor
aas
aam
loop
inc
(bad)
cmps
add
mov
jae
mov
and
fldcw
(bad)
ss
pop
dec
jae
dec
mov
push
cmp
imul
pop
adc
sbb
imul
loop
and
and
sbb
or
ret
aas
push
push
push
pusha
xor
mov
ret
fild
or
mov
nop
loopne
add
je
adc
(bad)
leave
add
test
shr
push
pop
pop
mov
icebp
outs
or
test
pop
dec
pop
cwde
jo
jp
pop
fcomp
mov
cmc
fild
push
push
dec
inc
test
jg
call
ja
inc
ins
jo
jmp
sti
repz
outs
addr16
dec
jo
addr16
add
lock
outs
data16
push
dec
push
push
adc
fsub
sbb
inc
stc
push
push
cwde
cld
push
ret
cli
das
mov
add
mov
rcr
inc
test
push
hlt
push
imul
push
(bad)
hlt
test
sbb
test
or
pop
mov
cmps
mov
jle
push
pop
dec
aam
dec
mov
fs
fld
or
leavew
test
add
jecxz
and
leave
pop
aad
in
movs
adc
xchg
dec
movs
add
fidiv
dec
pop
jecxz
rcl
or
jne
adc
enter
mov
or
test
mov
jb
push
int
sahf
sub
ds
pop
add
repnz
push
mov
adc
dec
movhps
xchg
add
cmp
adc
jb
push
xchg
mov
outs
sub
add
sub
arpl
dec
inc
add
fcmovnb
push
add
and
(bad)
sar
add
pop
pop
ins
inc
sbb
inc
xor
test
add
cmp
ins
push
das
int
jo
mov
aaa
cmps
shl
mov
mov
push
data16
or
cmp
aam
int3
or
xor
sti
fwait
(bad)
in
mov
mov
idiv
cmp
fst
inc
je
cmp
je
push
call
ret
jmp
mov
add
das
dec
push
jno
sbb
into
add
test
mov
pusha
das
cld
adc
add
lds
arpl
sbb
inc
(bad)
cmp
dec
pop
add
jl
push
ficomp
jno
or
cmp
or
jmp
js
cmpxchg
dec
rcl
xor
inc
daa
enter
cwde
shr
adc
or
inc
and
retf
mov
scas
shl
xchg
dec
or
sbb
pop
adc
int
into
and
sar
add
adc
dec
fs
rol
dec
jnp
rcl
loopne
sar
xchg
jg
sub
add
je
push
jne
lods
add
dec
bound
arpl
sub
push
mov
lods
pop
or
stos
(bad)
pop
cmp
pop
and
add
xchg
inc
push
push
outs
sahf
test
xchg
bound
pop
fbld
adc
pushf
dec
rcr
push
add
outs
outs
sbb
push
enter
ret
inc
dec
xlat
pcmpgtb
lock
mov
inc
jb
jae
xor
and
shr
xor
adc
ror
shr
xor
inc
dec
jne
ret
(bad)
out
push
test
je
add
mov
jmp
mov
lea
loope
and
test
je
aaa
xchg
ins
int
int3
pop
pop
pop
ja
cmp
(bad)
outs
sbb
popa
repnz
popa
(bad)
in
lods
fucomp
dec
out
mov
mov
inc
cld
mov
jbe
adc
mov
and
lock
sub
addr16
or
add
shl
rcl
nop
xchg
push
mov
and
xchg
cmp
js
dec
mov
push
clc
jmp
adc
mov
jg
mov
cmp
sub
cmp
jne
push
cmp
(bad)
xor
dec
shl
test
add
aam
jg
pop
add
cmp
xor
pop
js
imul
popf
push
mov
push
rcl
mov
pushw
add
mov
or
sbb
popa
scas
jge
clc
pop
jl
jae
push
push
xor
pop
pop
pop
dec
adc
or
push
push
pusha
xchg
mov
div
cmc
test
jmp
out
pop
push
mov
pop
aaa
mov
shl
mov
mov
mov
jns
in
or
push
int
sbb
aas
xor
xor
sbb
into
and
and
inc
mul
mov
push
sub
cmp
loopne
ins
mov
jmp
ret
cmp
jne
outs
or
pcmpgtd
mov
xlat
call
and
xchg
add
mov
or
xrelease
call
call
(bad)
jns
mov
mov
movs
sub
rcl
push
xor
fadd
sbb
mov
jnp
jno
sub
div
adc
push
mov
xor
mov
ret
or
hlt
pusha
adc
cli
adc
inc
adc
hlt
repz
mov
inc
xchg
inc
ja
loopne
mov
adc
or
addr16
jo
mov
fldcw
push
cmp
mov
aaa
pushf
pop
lea
mov
mov
adc
lods
mov
mov
jg
push
pop
dec
cmc
sbb
sub
and
repz
loop
lds
adc
or
pop
mov
or
ds
dec
xor
push
mov
dec
pop
clc
or
movs
fimul
xchg
xor
sub
fsubr
push
push
std
or
push
out
hlt
lea
fsubr
push
or
jmp
adc
enter
js
data16
jg
mov
push
mov
in
mov
mov
cld
dec
pop
data16
add
xor
out
mov
rcl
jne
or
hlt
fs
jl
sub
loopne
in
jmp
xchg
ret
push
data16
jmp
pop
or
cwde
or
push
or
push
lea
xor
sbb
(bad)
outs
add
and
xor
mov
sahf
data16
push
pop
add
sbb
jnp
call
sub
pop
push
(bad)
push
(bad)
cmp
fld
pop
clc
inc
add
in
push
ficom
or
dec
ss
data16
and
lahf
pusha
es
cli
cs
push
sbb
push
loopne
aaa
stos
inc
ss
daa
mov
bound
cmp
adc
inc
xor
int
rol
push
call
into
add
ja
cmp
ss
mov
push
xor
imul
add
mov
pusha
xor
cmps
xor
dec
je
adc
push
sbb
sbb
push
xor
xchg
pop
add
sbb
push
mov
push
pop
sub
dec
pusha
cs
xor
daa
pushf
sbb
aaa
int3
in
mov
adc
es
sub
ret
inc
jle
adc
dec
sub
dec
int
stos
aas
push
mov
push
push
sbb
scas
add
cmp
dec
je
adc
in
cmp
push
mov
mov
movs
rep
cmc
or
std
pop
test
je
movs
push
push
push
clc
and
pop
ror
fisub
mov
xor
inc
dec
or
add
add
push
jge
adc
movzx
mov
lea
icebp
lea
mov
mov
(bad)
mov
lea
mov
push
mov
mov
mov
push
jne
(bad)
ds
or
add
add
xor
aas
add
cmp
mov
sbb
lahf
pop
push
ins
inc
cmp
rcr
addr16
mov
mov
jmp
nop
mov
mov
je
mov
cmps
in
(bad)
mov
mov
(bad)
repnz
iret
or
lds
or
loope
cmp
mov
xchg
pop
push
and
clc
push
loope
mov
mov
mov
sbb
mov
add
sbb
lods
pushf
iret
or
pop
push
test
das
mov
xor
loop
sbb
cmps
push
sbb
cmp
push
loopne
inc
sbb
adc
fcomp
aaa
call
outs
jo
mov
in
mov
mov
mov
or
sbb
cmp
repnz
add
inc
lea
mov
xlat
jo
or
add
push
or
push
jns
jne
or
jae
out
test
xchg
dec
inc
jmp
(bad)
jo
aam
cmp
cwde
mov
cdq
jno
jecxz
out
into
cwde
or
add
jle
jne
mov
(bad)
or
mov
dec
and
mov
out
test
sbb
test
(bad)
js
xor
inc
adc
fstp
jne
neg
adc
mov
pop
sbb
sbb
in
mov
sbb
loop
xchg
div
jg
test
je
mov
nop
gs
sti
pop
xor
setne
mov
sbb
rcr
sahf
stos
inc
and
imul
cli
adc
or
out
jo
jne
cmp
es
push
pop
sub
rcr
mov
(bad)
dec
fsubrp
push
in
cld
cli
mov
inc
ret
cmp
mov
jns
and
add
in
jmp
and
xor
(bad)
call
cmp
mov
cmp
sbb
iret
lock
ins
inc
movs
inc
xchg
jmp
add
cmp
fisubr
pop
mov
push
mov
jge
fs
push
or
or
loopne
int3
movs
cld
or
adc
mov
inc
mov
inc
mov
or
pop
jno
daa
in
in
xchg
jg
in
pop
mov
sbb
push
clc
mov
jmp
pop
lock
shl
ds
inc
push
add
data16
jp
lods
scas
mov
jo
mov
test
int
stos
imul
stc
push
adc
inc
jmp
neg
pop
movntps
(bad)
nop
jo
push
pop
in
je
fdiv
daa
xchg
dec
ins
enter
fcmovb
js
scas
lds
pop
das
daa
clc
jae
mov
addr16
je
pushf
loopne
aad
pusha
les
inc
loopne
je
fs
jle
aas
js
push
test
je
pop
lea
or
popf
aam
mov
lea
add
and
jo
add
iret
mov
clc
lds
clc
pop
mov
fsubr
add
mov
xor
inc
cli
in
div
fiadd
xchg
stos
pop
adc
ret
ins
data16
mov
add
inc
xor
cmp
je
lea
jo
pop
in
es
mov
(bad)
and
mov
test
mov
and
add
psllw
push
pop
jo
fidivr
fcom
jbe
lahf
mov
sbb
pop
outs
ins
sbb
and
dec
jne
sbb
and
xchg
jle
nop
mov
jno
rol
add
lock
xor
(bad)
shr
ret
sbb
mov
add
test
je
push
sbb
rcl
cmp
jne
data16
jle
and
sbb
mov
mov
inc
add
ss
inc
inc
hlt
cmp
ror
push
add
jge
mov
jo
jl
jle
mov
js
add
mov
adc
cld
push
push
in
inc
popa
mov
or
loop
xchg
mov
push
mov
ins
mov
or
ja
adc
xchg
sub
movs
xchg
fsubr
pop
push
dec
rcr
push
rol
retf
adc
aam
xchg
xor
xchg
aaa
mov
xor
sbb
or
cmp
adc
pop
mov
loope
(bad)
pmulhuw
inc
xlat
enter
js
test
xor
push
xlat
sub
and
xlat
stc
repz
add
push
add
sub
push
test
mov
mov
test
jns
nop
push
adc
adc
adc
sbb
shr
inc
add
inc
popa
push
add
int3
dec
adc
sub
add
neg
cmps
sub
inc
pop
shl
fnsave
adc
mov
inc
xchg
adc
movs
mov
mov
call
cmc
sar
mul
cmp
inc
pop
pop
lea
std
cmps
fist
sub
inc
mov
jmp
and
nop
inc
mov
cmps
nop
in
gs
add
loopne
mov
xchg
out
idiv
sbb
sbb
pop
mov
neg
jbe
mov
div
push
arpl
sti
out
cmp
sub
jb
je
or
je
jmp
jo
movzx
jmp
xchg
xor
add
mov
jle
or
adc
and
cmp
or
mov
test
push
je
push
mov
jne
test
imul
scas
je
push
pop
mov
pop
daa
test
push
imul
push
fnsave
cs
inc
push
inc
aaa
mov
cmp
cmp
sub
lods
push
cmovg
sub
mov
dec
(bad)
icebp
dec
je
hlt
js
cmp
jmp
cmc
js
pop
pushf
mov
sbb
retf
add
ss
in
mov
mov
adc
cmps
jne
jmp
cmp
mov
jl
push
add
(bad)
cmp
xor
xor
push
dec
push
pop
rcl
inc
xchg
sub
pop
jl
adc
push
(bad)
jmp
mov
adc
imul
mov
mov
sub
add
or
mov
das
add
ja
push
adc
loopne
sub
(bad)
loop
movs
cdq
in
call
shl
addr16
sbb
lods
das
outs
xchg
adc
add
cmp
lock
js
mov
ret
mul
adc
and
repnz
jae
pop
(bad)
retf
or
cs
xor
(bad)
mov
movs
adc
sbb
add
push
inc
sbb
adc
sub
in
xchg
scas
int3
neg
cmp
mov
popf
icebp
add
or
jle
ss
sbb
xlat
fnsave
and
inc
sbb
or
dec
xor
out
xor
or
cmc
(bad)
pop
pusha
leave
adc
cmp
add
ja
clc
shr
push
jg
scas
fs
or
ja
mov
(bad)
sub
aam
js
cwde
adc
enter
inc
push
add
inc
inc
test
push
xor
rcr
dec
dec
adc
mov
push
loopne
inc
mov
sbb
mov
mov
add
(bad)
push
(bad)
call
mov
(bad)
inc
std
push
sbb
retf
dec
sti
cmp
push
inc
dec
test
xor
lea
shl
xor
cmps
daa
jnp
shl
sbb
sbb
iret
rol
into
lock
or
adc
mov
cmp
lods
push
push
pushf
cmp
pcmpgtd
pop
pop
ret
inc
enter
scas
mov
in
scas
add
inc
repnz
xchg
rcr
rcl
and
add
pop
pop
or
xchg
sbb
ror
fistp
inc
scas
pop
cmp
arpl
pusha
push
ins
and
mov
imul
push
in
or
add
stos
adc
cmp
sub
xor
cmp
jne
sahf
shl
je
(bad)
ficom
push
imul
loopne
fdiv
test
loopne
stc
and
jmp
(bad)
rol
mov
xor
push
fidiv
jb
inc
cmp
cmp
cs
les
daa
sbb
mov
fcom
push
pusha
add
pushf
cmp
jecxz
add
clc
and
push
inc
pusha
in
mov
call
pusha
sub
pop
pop
mov
inc
fist
push
cmp
cvtpi2ps
into
cdq
jae
push
pop
inc
push
xchg
fdiv
pusha
push
push
adc
adc
or
neg
cmp
xor
mov
pop
loop
sbb
pusha
pop
cli
loope
xor
outs
in
inc
(bad)
push
inc
fcomp
sti
mov
or
add
int3
adc
inc
jmp
or
push
mov
dec
lock
or
inc
or
or
xchg
aam
sbb
mov
loopne
push
xor
mov
mov
mov
pop
hlt
ret
or
push
mov
push
add
enter
mov
push
or
fcomp
mov
mov
sub
push
push
jo
mov
pop
add
pop
or
push
mov
cli
mov
test
shr
dec
jg
pop
and
inc
dec
add
out
push
fbstp
test
or
out
movs
and
ds
or
mul
sbb
iret
test
dec
and
ficom
call
push
add
push
inc
xor
daa
addr16
nop
outs
dec
or
adc
sub
jns
clc
xchg
shl
ja
push
inc
xchg
sub
dec
popa
cli
lods
inc
sub
jae
inc
pop
(bad)
mov
pop
out
mov
out
jle
or
int3
daa
adc
pop
push
inc
nop
add
sti
cmp
pop
xchg
cmp
push
or
mov
inc
sbb
test
push
sbb
out
clc
out
mov
mov
mov
loop
lods
push
out
jo
in
adc
clc
mov
in
out
test
dec
inc
jnp
jns
adc
pop
pop
enter
enter
pop
and
and
or
fimul
clc
aas
fsubp
push
test
and
enter
inc
mov
push
mov
scas
stc
fwait
sbb
mov
xchg
imul
loopne
push
add
mov
xor
xor
test
je
(bad)
pop
cld
test
sbb
add
add
add
push
addr16
or
cmp
mov
imul
xlat
jg
xor
add
inc
loopne
xor
mov
fadd
mov
mov
adc
mov
push
inc
xchg
cwde
mov
mov
cwde
rol
nop
mov
dec
adc
lea
shr
pop
push
inc
test
mov
int3
test
jns
push
fistp
je
or
div
lods
pusha
push
nop
or
dec
in
lea
add
xor
addr16
ss
in
push
mov
inc
or
das
sbb
lea
mov
mov
pop
and
push
imul
data16
rcl
jbe
and
jb
hlt
shl
js
inc
inc
add
lock
test
and
jecxz
mov
sbb
ret
fisttp
sbb
cmc
push
mov
sbb
fisttp
cmps
cli
in
or
je
mov
mov
xchg
push
xchg
call
pop
inc
push
sbb
xor
adc
test
out
loope
mov
push
push
mov
dec
lock
pushf
push
push
add
mov
sti
add
test
out
and
cwde
or
mov
sub
movs
adc
add
inc
test
cmps
dec
jae
outs
ss
mov
test
adc
call
and
inc
sbb
add
pusha
xchg
pop
mov
jo
pop
cwde
sbb
push
fs
dec
adc
sub
ficom
add
das
out
jl
push
mov
inc
adc
ror
add
inc
ja
jne
aam
or
and
push
cmp
push
cmp
cmp
inc
shl
not
and
add
femms
std
cmp
je
mov
and
pop
pop
ss
push
add
sbb
jnp
fld
mov
push
test
or
call
pop
icebp
pop
push
cmp
inc
dec
pop
push
dec
pop
mov
arpl
and
or
jae
mov
cmp
outs
push
je
jns
movs
in
cmp
shl
sbb
hlt
test
stos
(bad)
cmp
je
test
(bad)
mov
pop
cmp
xchg
pushf
add
jle
add
bnd
and
push
jl
push
popf
mov
dec
jbe
push
sbb
push
add
xchg
mov
mov
or
in
sub
jmp
or
push
adc
inc
sbb
push
add
push
inc
mov
sbb
xor
popa
cmp
mov
sbb
jle
add
add
and
sub
(bad)
push
adc
or
mov
add
out
rcl
test
push
adc
std
je
mov
mov
inc
aas
sti
je
aad
sub
outs
aas
idiv
ins
jno
aas
mov
dec
mov
cmp
dec
das
ds
mov
mov
push
sbb
imul
in
pop
clc
mov
xor
ror
lock
call
sub
cld
mov
out
mov
add
out
bound
mov
cmps
cmp
cli
add
adc
add
mov
mov
sbb
push
push
addr16
push
push
cmp
cld
dec
scas
fcmovnu
push
adc
das
cmp
pop
inc
sub
outs
adc
add
pusha
and
or
pop
outs
push
jne
enter
test
push
fdiv
test
es
fsub
in
loop
pop
inc
int3
push
push
push
daa
(bad)
push
clc
and
sbb
ror
fidivr
shl
adc
bound
jno
or
fwait
push
fmul
inc
imul
fdiv
pop
lock
ror
pop
bound
(bad)
xor
push
add
mov
and
cmp
shl
cmc
aam
or
es
bound
pop
push
pushf
rcl
loope
or
call
(bad)
adc
xchg
or
push
loope
push
(bad)
mov
dec
je
sub
mov
lock
add
or
loopne
pushf
ret
dec
not
mov
shl
and
jmp
clc
add
mov
das
clc
mov
pop
sbb
inc
div
sti
inc
sub
mov
jne
sub
bound
xchg
popf
jne
cli
movs
ds
add
cmp
and
test
stc
jecxz
(bad)
lock
push
inc
sahf
out
push
sbb
and
push
or
push
sbb
add
loop
or
test
ja
or
loope
xchg
and
mov
push
fidiv
stos
outs
xor
jp
mov
and
out
test
mov
push
or
dec
jmp
jns
xor
js
pop
clc
in
xor
cmp
inc
sbb
pop
pushf
push
sub
inc
inc
das
inc
pop
cmp
or
sysexit
sbb
jge
sub
push
movs
pop
fdivr
add
inc
add
stos
dec
sub
rcr
mov
adc
pop
add
adc
adc
inc
xchg
mov
fisub
add
retfw
sub
sub
add
lea
imul
pop
or
add
(bad)
mov
inc
add
dec
test
jne
mov
pushf
and
or
jg
and
adc
dec
test
jle
mov
or
mov
xchg
pop
mov
add
jne
mov
pop
dec
add
cmp
mov
fcmovnb
imul
sbb
add
xor
jle
test
fisub
and
jnp
adc
push
ds
ins
mov
(bad)
js
cmps
inc
fisttp
das
mov
hlt
add
mov
enter
mov
dec
jns
jmp
push
jmp
mov
mov
sub
shl
mov
mov
jmp
xchg
xbegin
sldt
xor
sbb
pusha
add
add
dec
jmp
xor
xor
cli
add
imul
adc
mov
pop
jp
or
enter
dec
cmp
jbe
jne
ds
ds
out
fucomip
inc
pop
and
mov
lea
in
icebp
pop
sub
fdivr
push
cs
ss
xor
jmp
addr16
data16
add
jo
xlat
cmps
icebp
or
ret
add
and
cmp
shl
pop
add
add
rol
jmp
jb
test
cmp
jl
lea
test
inc
or
inc
mov
add
or
sbb
inc
mov
or
sub
adc
dec
outs
push
push
sub
mov
mov
add
pop
add
sub
push
fs
mov
push
push
adc
loopne
not
push
sbb
jbe
mov
mov
aas
and
or
dec
sbb
iret
dec
pop
mov
add
add
push
retf
(bad)
cmp
test
mov
fld
call
push
xchg
nop
mov
les
sbb
pop
add
jecxz
or
das
sub
push
push
or
mov
xchg
and
jge
inc
adc
adc
lahf
sbb
mov
outs
fidivr
add
or
sbb
adc
cli
mov
push
push
sbb
or
scas
and
adc
ret
fild
cs
dec
mov
mov
(bad)
enter
shl
jge
add
add
add
add
mov
inc
ja
push
popf
cmps
rcr
hlt
dec
push
or
push
or
xor
nop
mov
out
inc
clc
loopne
in
mov
add
cld
mov
pop
mov
mov
js
xor
loopne
adc
push
cmp
jo
cmps
push
push
pop
cld
xor
pusha
rol
popa
add
popa
sbb
sub
mov
or
dec
pop
mov
mov
mov
data16
and
or
pop
and
dec
or
xor
or
fild
sub
sub
add
fcmovnbe
push
push
or
pop
or
pushw
push
inc
push
test
jle
out
adc
mov
dec
rol
test
dec
push
call
inc
cwde
dec
cwde
inc
and
dec
(bad)
cmp
or
and
sbb
sub
lahf
inc
mov
ds
cmp
jg
test
jle
cmp
cld
jg
cmp
push
sub
mov
mov
cmp
jge
movs
mov
das
or
sub
arpl
fs
scas
test
test
inc
push
cmp
mov
push
dec
jmp
je
add
nop
jne
push
pop
cld
lods
and
mov
mov
inc
je
cs
xor
adc
and
add
xchg
xchg
cmp
mov
js
fcom
sbb
scas
pop
jg
sbb
or
mov
and
mov
fst
mov
jecxz
movs
add
idiv
fidiv
mov
mov
ret
ret
mov
pop
in
sub
loopne
es
pusha
repz
jo
adc
pushf
adc
add
mov
dec
clc
mov
xor
push
test
mov
lods
pop
test
mov
push
add
adc
rol
push
adc
push
addr16
shl
jmp
and
leave
push
cmps
clc
cmp
cmp
cmp
sbb
lahf
adc
jno
jmp
push
pop
adc
ss
ins
in
add
sub
enterw
or
out
xor
test
clc
pop
aam
pop
add
lock
lea
lea
imul
inc
nop
mov
ins
push
jbe
jmp
sbb
sti
inc
mov
ins
mov
push
mov
push
loop
inc
or
push
ret
jecxz
cmp
mov
shl
mov
mov
mov
xchg
test
test
inc
mov
push
je
loopne
or
push
mov
test
xor
enter
push
add
push
in
sub
rol
aas
and
or
inc
test
xor
test
or
pop
mov
rcr
or
jmp
cmp
repz
test
push
or
or
push
movs
repz
nop
adc
adc
ret
icebp
sbb
add
push
and
push
push
retf
call
and
loope
mov
jbe
sub
push
sti
lea
mov
or
movs
pop
jmp
ret
xor
mov
(bad)
aad
mov
add
inc
xchg
inc
stos
mov
or
jle
cmp
outs
sub
jmp
mov
and
adc
mov
and
sbb
add
jbe
imul
sub
imul
add
inc
and
add
and
jnp
int3
and
adc
int3
lods
xor
mov
mov
mov
loope
test
into
add
sbb
retf
enter
pop
jge
pop
sub
xor
dec
sub
call
xchg
add
sbb
and
sbb
push
loopne
push
cmp
loopne
mov
fcomip
pop
fldenv
in
sub
out
test
(bad)
xchg
jno
inc
test
cmp
inc
xor
xor
jl
call
add
push
je
ja
inc
mov
dec
adc
xor
sti
mov
xchg
jge
ror
or
mov
fcom
(bad)
rcl
lods
scas
mov
sbb
cs
test
mov
jo
mov
jmp
sahf
movs
and
loopne
pop
lock
leave
retf
push
test
clc
pop
dec
pusha
add
cld
sbb
dec
cmp
jmp
mov
adc
mov
push
lods
retf
mov
rcr
jge
loope
fsub
dec
mov
scas
loope
and
fadd
cmp
mov
js
shl
add
sub
mov
(bad)
mov
stc
xor
mov
mov
or
lods
ret
fisttp
adc
mov
mov
mov
sbb
fstp
push
jb
lods
mov
push
xchg
cmc
aad
push
add
and
outs
lods
push
jl
sbb
sbb
outs
sbb
mov
jbe
shl
cmp
adc
jae
adc
or
pop
sub
stos
in
inc
inc
sub
push
add
test
je
dec
cmp
je
sbb
add
add
sub
in
comiss
fs
dec
and
mov
test
ret
cmps
add
js
mov
xor
jl
sbb
cld
xchg
mov
mov
adc
inc
inc
jo
adc
adc
mov
push
mov
das
inc
and
xchg
and
push
xchg
stos
add
add
xor
jmp
(bad)
xor
pop
lea
push
mov
stos
xchg
or
mov
add
add
popa
jmp
push
add
adc
imul
je
setb
ror
xchg
add
cwde
mov
imul
xchg
out
and
je
ror
loopne
xor
or
je
in
cmp
jmp
je
jmp
mov
push
dec
dec
add
fisubr
repz
push
sbb
adc
adc
test
inc
jne
fs
pop
jne
pushf
add
cmp
rcl
add
cmp
arpl
rcl
dec
mov
lock
loope
(bad)
cdq
or
(bad)
mov
cwde
push
jg
adc
lods
xchg
jle
pop
mov
and
ret
data16
repnz
inc
adc
not
adc
out
hlt
les
xor
(bad)
mov
sbb
pop
adc
or
sahf
add
xor
or
lods
sbb
jo
sub
sbb
jle
in
lock
push
pusha
test
adc
and
cmp
add
rcl
adc
mov
xor
or
inc
pop
cmp
dec
iret
(bad)
cmp
mov
(bad)
(bad)
mov
push
or
ins
gs
outs
jb
popa
je
test
les
into
sbb
push
sbb
push
popa
idiv
cmp
add
jb
jo
imul
pop
pop
(bad)
mov
inc
js
outs
jae
outs
outs
sub
or
arpl
jo
ins
(bad)
sub
sub
cmp
rcr
push
add
sbb
out
ss
das
call
js
sahf
out
mov
push
and
cmp
xor
out
xor
ja
jo
data16
mov
jle
popf
dec
add
mov
pushf
add
add
xchg
xchg
call
push
cmps
cmps
in
idiv
push
inc
jp
loopne
push
bswap
adc
fcmovu
push
imul
push
inc
jb
and
rol
or
add
gs
data16
pop
out
jb
jns
fs
and
dec
add
fs
mov
mov
add
sbb
fidiv
sbb
xchg
test
push
sbb
mov
push
inc
dec
add
fsubr
mov
fld
sub
ret
ret
mov
ret
mov
or
dec
popa
ins
retf
into
ja
aaa
or
jg
(bad)
loope
cmps
dec
jle
shr
jbe
mov
popf
jo
jo
cmp
adc
(bad)
fidiv
sub
jae
retf
or
rol
or
and
pop
ror
sub
push
hlt
js
push
mov
xlat
pop
mov
out
push
loopne
arpl
sahf
retf
enter
arpl
xor
push
jns
mov
add
(bad)
iret
inc
mov
test
inc
jle
add
xchg
add
adc
mov
cmp
push
lock
mov
sub
add
bnd
mov
push
nop
add
lock
push
shr
repnz
in
call
and
mov
out
add
lea
ds
test
jg
test
test
xor
enter
int3
add
imul
or
pop
xchg
cwde
mov
push
push
das
daa
pop
or
pop
mov
add
outs
clc
push
or
in
jl
clc
or
inc
xor
mov
lea
adc
or
inc
sahf
jl
dec
jne
mov
and
xor
pop
movs
jle
adc
sar
mov
xor
push
(bad)
sbb
adc
popf
ror
sahf
push
add
in
pusha
sub
add
(bad)
xor
ja
sub
jmp
or
or
sti
test
inc
mov
adc
retf
mov
or
mov
sti
add
jno
adc
xor
adc
xchg
clc
cmp
mov
dec
push
ss
shl
jo
push
inc
sbb
and
lds
aad
push
outs
push
sbb
sub
push
sub
retf
lock
int3
mov
jo
mov
push
sbb
loopne
push
daa
mov
in
jo
test
aad
in
add
(bad)
cmc
mov
mov
inc
test
push
mov
aaa
stc
or
jo
jl
(bad)
xchg
push
outs
pop
mov
inc
ins
shld
mov
push
adc
bound
jb
sar
adc
imul
imul
imul
ror
add
loopne
and
movs
inc
add
add
cs
or
push
xor
pop
or
mov
lea
mov
mov
push
and
push
addr16
and
rol
or
sub
mov
sbb
or
xchg
mov
cmp
and
dec
xor
mov
inc
popa
and
adc
cs
jl
push
push
retf
push
ror
sub
xlat
hlt
sub
dec
adc
cdq
ret
aam
fidivr
rol
inc
inc
stos
adc
shr
ja
jne
js
scas
sbb
mov
xchg
pop
cmps
sbb
ret
loopne
rol
cmps
call
dec
lods
fcmovne
cmp
mov
cmp
pop
and
fwait
jmp
(bad)
mov
gs
das
push
int3
ret
mov
dec
adc
cld
mov
cmp
cmp
es
or
imul
and
ret
fcomp
call
loope
mov
aaa
fdiv
mov
or
add
or
test
scas
das
lea
and
or
push
(bad)
mov
(bad)
adc
push
or
or
pop
mov
mov
adc
push
ins
jae
gs
sub
mov
inc
or
fadd
add
mov
aam
push
call
and
and
dec
adc
call
sbb
xchg
push
mov
add
call
ds
mov
imul
repnz
mov
das
sbb
pusha
sahf
jno
mov
and
ds
push
inc
mov
mov
pushf
shr
ins
dec
call
cmp
push
mov
xchg
test
rcr
pop
das
rol
inc
pop
or
dec
loopne
add
mov
sub
sub
mov
mov
inc
push
or
xchg
rol
scas
rcl
loope
and
hlt
mov
xchg
cdq
xlat
rcr
push
data16
or
adc
adc
mov
push
xchg
jle
push
scas
cmp
and
cmp
xchg
aaa
cs
jmp
test
add
mov
into
arpl
mov
inc
cmp
inc
xchg
fs
scas
sub
(bad)
sub
rcr
ins
clc
ror
cmp
push
aam
into
mov
pop
fsub
jnp
xchg
inc
popa
bound
add
sbb
inc
xchg
outs
lock
mov
xchg
fisub
and
call
aas
dec
inc
sub
xchg
mov
push
in
xchg
lock
xor
stos
mov
xor
jmp
lods
fucom
cdq
hlt
sub
cmps
cmp
add
dec
test
test
add
push
jne
int3
add
push
stos
jo
mov
rol
xchg
test
fcom
mov
or
sbb
xchg
je
xor
sub
rcr
jne
lds
mov
call
clc
cdq
mov
in
cmp
pop
sub
mov
sub
shl
jmp
sbb
add
js
daa
lock
(bad)
loopne
and
mov
fdivr
je
or
dec
adc
test
fwait
mov
mov
dec
inc
les
ret
inc
mov
mov
(bad)
outs
(bad)
xor
or
fdiv
rcl
pop
cmps
sbb
mov
inc
rcr
sub
and
sub
bound
dec
mov
std
inc
or
loopne
and
test
cmps
sbb
not
push
push
jmp
loopne
or
push
cmp
sar
cmps
mov
push
imul
inc
pushf
pop
xor
aas
push
xlat
stos
ja
dec
sbb
je
add
xchg
shr
sbb
jb
das
and
jmp
cmp
or
and
sbb
ror
pop
adc
inc
enter
mov
icebp
add
inc
sub
push
and
and
adc
fistp
mov
adc
loop
inc
inc
imul
adc
in
push
xchg
sub
mov
sub
cld
data16
jmp
push
sbb
imul
xor
es
or
sbb
add
clc
fisubr
and
popa
and
or
ret
xlat
push
call
mov
push
sub
hlt
loopne
xor
jg
in
or
push
or
dec
dec
das
push
sbb
scas
sbb
scas
into
jl
or
or
add
adc
mov
or
add
xor
les
push
sub
adc
inc
imul
xchg
mov
push
xchg
xchg
enter
out
and
fldcw
js
inc
sub
in
adc
call
jno
rcr
ins
mov
cmp
ds
pusha
dec
sbb
and
sub
push
das
(bad)
lea
ret
mov
int
data16
cld
std
nop
aam
add
add
fadd
inc
or
ins
mov
add
xchg
or
pop
jne
cmp
outs
pop
sub
and
mov
or
jmp
push
push
sti
or
les
mov
dec
or
jmp
push
ret
mov
dec
out
aam
ins
neg
jae
hlt
movzx
xchg
(bad)
loope
cmps
add
out
mov
jbe
(bad)
cld
sti
xor
imul
sbb
push
adc
and
and
add
nop
inc
mov
je
add
je
add
shr
mov
and
add
xor
aad
add
neg
cdq
nop
add
dec
xchg
jo
or
sub
dec
or
scas
gs
dec
pop
jp
lahf
jns
sbb
jmp
cmp
push
outs
(bad)
push
iret
cmp
sub
aaa
dec
rol
pusha
xor
std
push
mov
pop
mov
inc
int3
imul
dec
push
push
sti
aam
popf
sbb
cmp
add
or
cmp
mov
dec
mov
jecxz
push
jb
adc
ins
icebp
(bad)
sar
popf
test
rol
dec
inc
je
js
jge
ins
jae
mov
and
jle
js
or
pop
sub
pop
mov
lea
inc
pop
dec
mov
sub
adc
mov
or
stos
(bad)
ror
out
jnp
dec
xchg
dec
aaa
js
xchg
fisub
add
inc
mov
lods
or
inc
push
mov
fsub
adc
outs
pusha
or
adc
pushf
fidivr
adc
xlat
int
call
add
and
jecxz
clc
push
fwait
dec
loopne
inc
aam
xor
lds
dec
test
cmps
les
mov
pop
and
jne
sbb
pusha
lock
jb
std
inc
push
jecxz
mov
in
ret
sahf
or
sbb
adc
inc
ror
inc
test
xchg
aam
int3
xchg
add
mov
sahf
inc
sbb
or
pop
adc
jl
outs
sbb
dec
(bad)
cmp
dec
sbb
shl
mov
mov
rcl
inc
sti
and
xchg
js
jge
mov
add
jl
adc
push
sar
clc
bnd
or
jno
je
add
xor
xor
mov
sti
mov
das
out
cmp
hlt
shl
(bad)
add
cmp
icebp
or
mov
cli
jle
adc
mov
je
loop
shr
push
dec
pop
lock
add
retf
adc
xchg
dec
xor
loopne
push
push
call
sub
push
adc
jo
nop
scas
out
test
push
sbb
or
push
addr16
stos
sub
mov
jle
pop
add
sub
fwait
loopne
shl
dec
xor
and
aas
add
sub
pop
push
inc
mov
fcom
fs
jg
jmp
push
pop
in
inc
aaa
in
sub
jo
je
add
mov
cwde
xor
sub
push
add
je
jne
dec
dec
jnp
xor
adc
inc
cmc
ja
xchg
or
push
sbb
sbb
push
adc
pop
mov
scas
movs
push
jmp
nop
lea
clc
cmp
jle
add
add
jmp
mov
sbb
sbb
mov
jg
enter
jne
cmp
xchg
fstp
inc
call
popa
jo
add
fs
lea
je
jmp
pop
pop
adc
add
adc
fcom
inc
inc
cmp
push
add
inc
jo
jl
and
add
xor
cmp
xchg
adc
add
popf
mov
inc
pop
xor
jnp
xchg
and
mov
lods
(bad)
popf
retf
push
and
shr
sub
popa
jnp
mov
dec
mov
inc
cmp
xchg
gs
jge
sub
mov
xchg
jl
push
mov
fild
scas
or
jge
dec
test
inc
sbb
je
mov
cmp
push
pop
je
leave
push
mov
mov
mov
and
dec
ret
or
fiadd
or
int3
lock
jns
add
push
inc
pop
or
rcl
xchg
or
sub
adc
xchg
push
bnd
or
ror
jae
popa
push
sub
test
cmp
in
lock
inc
cwde
lock
fsubr
and
pushf
push
jb
cmp
jo
mov
ret
push
dec
cmp
xchg
inc
pop
push
dec
cmp
xchg
ret
mov
add
push
test
je
ss
mov
dec
test
mov
sbb
sbb
dec
adc
or
mov
into
mov
pop
mov
ror
scas
xchg
xor
add
cld
dec
div
add
add
push
retf
retf
push
in
out
pop
data16
data16
addr16
aad
or
inc
sub
inc
sub
pop
ins
sub
push
xchg
adc
les
hlt
es
scas
mov
push
inc
inc
ret
test
rcl
(bad)
sti
shl
mov
and
les
fistp
xlat
or
in
cmp
sbb
push
sub
lahf
idiv
sbb
push
mov
dec
mov
ins
test
pop
and
and
mov
and
push
xchg
shr
sahf
out
and
nop
int3
or
push
push
mov
test
ficom
mov
or
out
or
sub
out
push
mov
nop
pop
lock
adc
inc
inc
imul
add
dec
ins
fs
jne
sub
push
popa
ins
cmp
es
je
out
pusha
push
out
sbb
inc
ss
push
sar
xor
loop
push
ins
inc
popa
outs
jbe
jae
bound
add
and
add
rcr
or
xor
mov
pop
inc
fbld
xchg
or
mov
and
les
add
in
inc
or
push
mov
mov
mov
xor
stos
ficomp
dec
cmp
pop
dec
mov
lea
fucomp
mov
lahf
push
or
jbe
mov
push
test
pop
and
out
jno
pop
rcr
arpl
push
cmp
stos
dec
pushf
dec
ins
or
adc
jae
add
mov
jmp
jbe
sub
push
jp
clc
adc
clc
xor
pop
lock
es
xchg
loopne
ins
rcl
cld
adc
and
mov
xchg
xor
ja
(bad)
sbb
adc
mov
adc
mov
mov
adc
jmp
cmp
mov
sbb
imul
and
sbb
mov
ins
mov
shl
jecxz
cld
(bad)
push
inc
add
jo
xor
push
test
pop
retf
idiv
pop
mov
pop
pusha
sub
push
xor
loopne
add
push
pop
cmp
sbb
aaa
shr
imul
popa
popf
pop
pop
and
inc
sub
mov
xor
dec
rcl
test
add
or
adc
or
pop
xor
adc
(bad)
mov
jae
div
pusha
add
inc
fmul
or
orps
add
push
inc
pop
jmp
fisub
dec
adc
dec
lods
pop
jbe
adc
clc
adc
(bad)
mov
pop
pusha
imul
fst
and
(bad)
ja
cmp
inc
add
pop
ss
mov
add
jnp
jne
stos
test
cmp
loop
je
push
or
cmp
in
leave
add
mov
fnstsw
daa
inc
inc
fs
inc
ins
or
jo
test
and
add
or
fcmovb
inc
jl
and
pop
pop
cld
sub
cmp
add
test
xor
ins
shl
lods
stc
jmp
cmp
or
cmp
adc
aas
adc
cmp
ja
test
mov
test
pusha
retf
or
js
jb
shr
nop
test
hlt
push
push
movs
fnsave
(bad)
push
test
add
into
dec
mov
mov
xchg
mov
cmp
pop
cld
and
je
inc
bound
movzx
data16
adc
pop
add
pop
mov
loopne
dec
add
fild
cmp
jne
add
cmp
cmp
fs
fcmovb
jns
cld
or
je
adc
ret
cmps
sbb
and
sbb
sub
inc
cmp
or
aaa
dec
add
sbb
pop
jae
add
movs
nop
(bad)
sbb
aaa
les
lea
clc
add
les
jge
jle
sbb
ficom
sbb
mov
and
push
outs
jno
sub
add
jae
adc
addr16
js
inc
adc
clc
add
sbb
add
adc
add
add
xchg
fcmovbe
lea
lock
push
pop
idiv
mov
aas
fbld
mov
push
sub
fadd
jne
add
xchg
outs
cwde
add
or
data16
add
sub
sub
push
add
push
ja
xlat
(bad)
sbb
scas
push
dec
mov
out
push
fmul
xchg
cli
mov
adc
sub
push
call
push
in
jge
mov
sbb
sub
lods
or
add
ss
add
rol
add
pop
aam
hlt
dec
int3
loopne
fild
cmps
jo
cmp
pusha
cmps
aad
in
cmp
mov
add
mov
push
push
xchg
dec
mul
inc
and
ins
cmp
xchg
mov
sbb
int
adc
jmp
outs
pop
ror
push
cmp
xchg
push
daa
and
jmp
pop
sar
mov
gs
inc
mov
dec
xchg
(bad)
(bad)
lea
mov
inc
inc
sub
aam
xchg
jo
inc
push
lods
cmp
aas
shl
cmp
jne
scas
jbe
xchg
jl
add
test
or
mov
jno
jl
dec
mov
adc
test
mov
rol
xchg
mov
popf
xlat
inc
sbb
inc
fdiv
fld
pop
lods
pop
sbb
in
rcr
pop
clc
xchg
jo
pop
inc
or
je
mov
call
dec
push
or
shr
sbb
leavew
sbb
add
jb
(bad)
mov
mov
add
je
int3
sbb
es
mov
mov
xor
popa
and
or
mov
int3
jge
add
jno
inc
add
push
fiadd
cmp
dec
repz
popa
loop
loopne
ret
sbb
and
xchg
imul
or
popa
pop
ret
mov
adc
or
mov
add
push
sbb
xor
int3
dec
and
and
sar
test
or
call
bound
xchg
leave
nop
pushf
arpl
xor
cmp
jmp
push
dec
fdiv
dec
pop
push
jecxz
mov
sbb
inc
jmp
and
xlat
test
push
xchg
xor
and
sbb
jb
xchg
clc
mov
jo
sbb
in
inc
xor
mov
aaa
fwait
or
cmp
cs
mov
add
mov
cmp
add
lock
adc
out
stos
or
imul
cmp
xor
out
test
(bad)
shr
rol
cmp
jae
mov
iret
mov
mov
adc
movs
mov
xchg
lock
pop
jne
call
aaa
jno
rcl
std
xchg
arpl
(bad)
inc
and
mov
mov
out
cmp
xor
pop
sbb
add
push
ret
test
call
iret
mov
xor
or
aas
sub
xor
stos
lock
cwde
push
mov
(bad)
sbb
xor
sbb
push
jae
test
adc
pop
mov
mov
in
mov
movs
popa
popa
jmp
inc
je
or
ret
add
(bad)
lods
mov
ror
stc
in
das
mov
inc
xor
jbe
mov
cmp
mov
imul
cmp
add
gs
out
sbb
adc
movnti
(bad)
xor
push
mov
cmp
popf
push
mov
mov
add
test
dec
ret
mov
adc
mov
movs
fadd
scas
push
mov
adc
jne
or
fnsave
repz
std
mov
sub
mov
inc
and
mov
inc
mov
pusha
retf
cmp
outs
mov
cwde
adc
xor
cmp
and
mov
mov
mov
adc
out
add
sub
xchg
inc
mov
scas
cmp
test
out
pop
sbb
and
add
dec
mov
push
push
sub
lahf
movs
mov
repnz
mov
pop
sub
into
xchg
adc
or
adc
jbe
pop
add
push
cmp
clc
mov
adc
movs
xor
or
inc
ret
sub
cmp
shr
es
dec
sbb
das
mov
lods
xor
push
rcl
adc
movs
mov
add
fst
or
in
sub
jl
pop
mov
inc
call
mul
xchg
in
push
pop
stos
and
gs
cmps
dec
and
jae
les
mov
pop
sub
es
push
(bad)
jmp
cmc
push
lahf
xchg
dec
push
inc
(bad)
inc
push
js
loopne
dec
sbb
not
adc
aad
mov
jp
jae
or
add
and
or
mov
in
mov
cmp
imul
jmp
dec
cmp
adc
jmp
mov
sub
add
in
scas
sar
ret
mov
adc
cmp
outs
mov
mov
int3
push
loope
cmp
or
lock
stc
inc
jmp
popa
ins
loopne
jne
out
call
sbb
imul
push
add
sub
jae
mov
or
ins
and
std
dec
pop
xlat
loope
dec
stos
repnz
adc
jl
xchg
jl
inc
or
mov
push
outs
fistp
mov
sub
and
sub
retf
jnp
push
xor
inc
sbb
inc
and
adc
movs
dec
pop
fistp
jo
pop
mov
fwait
mov
cmp
add
or
mov
dec
sbb
add
loope
jmp
add
jne
adc
loope
loope
inc
imul
test
fsubr
mov
inc
xor
(bad)
out
fiadd
inc
cmp
xchg
jo
loope
clts
sub
cmp
movs
jl
push
inc
adc
(bad)
jnp
or
cmp
jne
pop
adc
or
sub
mov
inc
mov
and
push
ja
aaa
jmp
cli
lock
enter
mov
test
jnp
or
sbb
popf
cmc
sti
mov
mov
cmp
and
ficomp
push
and
lods
sbb
pop
cs
or
and
pop
call
jne
or
imul
mov
jle
pop
sahf
sub
xor
mov
adc
arpl
add
inc
cmp
and
or
mov
cmp
or
xor
into
clc
aas
add
cmp
jne
rol
xor
jmp
loopne
push
rol
mov
mov
sbb
jmp
lods
lahf
add
pop
or
jne
or
add
in
hlt
dec
mov
mov
ins
nop
cmp
(bad)
fucomi
addr16
test
lea
push
sbb
sbb
adc
test
daa
dec
je
sub
je
jmp
inc
or
loopne
lock
jmp
mov
xor
add
xor
in
fwait
adc
or
je
jmp
mov
jmp
cmp
push
add
or
sbb
dec
ret
mov
ja
sbb
mov
or
mov
or
adc
push
gs
or
scas
push
add
jle
sub
mov
mov
loopne
mov
inc
pop
adc
and
clc
out
add
pop
jg
mov
jp
or
cmp
add
add
sub
fistp
push
mov
mov
es
lea
icebp
adc
pop
jo
adc
xchg
inc
sub
(bad)
mov
dec
cmp
lods
cmp
push
pop
lock
or
push
push
add
mov
add
mov
scas
int
ret
sub
inc
add
mov
add
cmp
ja
jg
repz
or
jnp
push
sbb
out
adc
add
sbb
adc
and
addr16
or
dec
jns
(bad)
push
add
jns
jg
sub
xor
adc
sub
jg
sub
cld
aaa
push
cmp
je
cs
imul
dec
or
js
push
cmp
idiv
sbb
or
sub
or
(bad)
jge
adc
xchg
inc
xor
sbb
dec
je
mov
pusha
adc
rcr
jg
gs
xor
pop
mov
inc
sar
(bad)
ins
sbb
push
(bad)
test
pop
cli
push
or
pop
in
gs
addr16
cmp
hlt
int
test
dec
and
mov
or
add
mov
dec
cld
dec
push
movs
adc
add
add
sbb
les
data16
ja
sbb
dec
jae
push
test
sub
push
mov
or
ret
test
sbb
retf
push
pop
add
call
fnsave
mov
imul
inc
push
xor
xchg
sbb
aam
push
das
add
imul
dec
ins
adc
pop
dec
ss
sub
les
jmp
add
mov
sub
jo
sub
inc
and
sbb
loopne
fimul
dec
gs
popa
dec
cmp
hlt
jmp
and
add
gs
loope
add
pop
stc
or
das
mov
jnp
push
or
hlt
dec
outs
inc
cmp
ror
mov
mov
sub
xlat
push
adc
ins
add
dec
mov
adc
cmps
outs
movs
retf
sub
jge
adc
(bad)
je
inc
mov
mov
mov
xchg
inc
test
shl
mov
or
sub
jne
stos
xchg
enter
sub
test
outs
daa
push
adc
cdq
adc
nop
inc
push
scas
les
jmp
mov
pop
ins
clc
or
mov
adc
pusha
add
inc
xor
add
lock
imul
lahf
xor
or
cdq
sub
ss
pop
sub
fdiv
sub
sub
or
jne
pushf
(bad)
call
mov
pop
fiadd
scas
lods
add
push
add
or
pop
sub
popa
jnp
adc
movs
adc
ror
call
mov
adc
call
cmp
xchg
lock
test
enter
add
adc
sub
adc
dec
lahf
or
adc
aaa
push
daa
ins
add
jo
leave
pop
into
jecxz
add
and
sub
popa
push
inc
or
pusha
mov
or
push
lods
outs
stos
rcl
push
ds
inc
or
clc
pop
jg
push
push
add
test
mov
call
or
fldcw
mov
inc
or
rcl
jmp
enter
sub
xor
xchg
jbe
and
add
shl
sete
rcr
pop
mov
in
loopne
ror
xor
mov
nop
sbb
dec
mov
jae
stos
mov
les
in
ret
cmp
pop
mov
inc
mov
push
mov
add
ret
sub
jbe
popa
and
add
call
(bad)
cdq
xor
push
mov
cmp
add
cld
lahf
push
lods
aam
loope
cmp
das
lea
mov
fild
(bad)
and
call
jbe
dec
push
(bad)
enter
add
adc
push
xchg
daa
daa
(bad)
adc
mov
push
and
pusha
sub
fisub
lds
mov
jbe
mov
loop
out
inc
in
ffreep
fwait
in
or
je
push
sub
sub
sbb
jnp
add
mov
inc
repz
rcl
xor
and
sbb
inc
hlt
and
or
xchg
call
push
cmp
add
push
dec
inc
xchg
jo
xor
lods
mov
pushw
dec
push
cli
idiv
push
push
cmp
sbb
fsubr
or
mov
or
bound
lock
inc
cmp
in
and
cmp
push
cmps
mov
jg
mov
xchg
inc
push
push
ins
xor
ror
test
jno
inc
or
in
in
ror
xchg
jnp
and
adc
mov
pusha
jmp
sub
rcr
cld
add
movs
mov
pop
push
push
rol
mov
test
push
push
jno
add
mov
fdivr
adc
pop
mov
sub
jbe
jmp
or
jmp
or
ret
ins
mov
outs
jns
add
cwde
xchg
cmp
dec
dec
das
pop
or
mov
sysenter
cmp
inc
lock
(bad)
cld
leave
xor
stos
fdiv
mov
fild
sub
cmp
adc
sbb
mov
mov
sbb
scas
inc
push
rcl
xor
and
push
push
imul
(bad)
jmp
popf
add
pushf
lahf
sbb
adc
mov
call
mov
adc
inc
add
sub
push
nop
jo
lock
or
dec
nop
fbld
push
push
inc
push
es
je
imul
mov
or
mov
cmp
add
add
cmps
es
add
es
and
mov
std
push
mov
xor
nop
aam
or
cmp
jbe
stos
mov
push
push
jbe
(bad)
fs
and
stos
loopne
cs
mov
xor
das
test
je
push
rcr
aaa
push
push
jmp
or
les
xchg
cmp
dec
cmps
ror
mov
inc
clc
mov
retf
nop
or
adc
adc
inc
adc
inc
mov
xchg
das
ins
nop
cmp
mov
xchg
mov
or
(bad)
outs
ret
sti
pop
or
inc
outs
add
mov
or
in
add
or
cmp
fimul
popa
and
or
sub
mov
clc
push
jbe
push
adc
mov
jno
push
ret
daa
jo
xchg
mov
pop
shr
js
or
mov
jne
leave
xchg
lea
adc
push
daa
add
jmp
adc
push
add
add
movs
mov
sbb
fsubrp
push
jecxz
and
pop
sbb
inc
test
jmp
push
pop
xchg
or
jg
fcomp
dec
repnz
ds
fdiv
movs
ins
mov
sbb
or
or
inc
add
je
mov
mov
mov
lea
fimul
sub
add
mov
je
cmc
jno
pop
(bad)
lahf
sbb
add
mov
or
adc
jo
or
push
or
es
pop
aas
test
inc
cmp
push
mov
adc
lock
pop
sysexit
es
js
popa
sbb
ror
sbb
sub
xchg
cli
or
or
adc
ror
jmp
fiadd
inc
lock
bound
mov
push
test
mov
call
outs
adc
xor
sub
jb
sub
je
jmp
dec
sub
arpl
pop
js
adc
add
ficomp
add
pusha
sbb
mov
pop
fst
push
push
mov
inc
lods
ins
mov
mov
sub
les
jmp
adc
inc
clc
sub
mov
mov
adc
jmp
or
cmp
outs
cmp
mov
add
outs
cmp
enter
addr16
jne
pop
or
outs
dec
mov
adc
or
aam
dec
jo
in
and
pop
or
(bad)
or
pshufw
dec
lock
add
dec
jmp
scas
out
push
xor
inc
cmp
sbb
add
or
mov
jge
jno
jae
push
add
mov
mov
sbb
mov
cmp
je
push
fstp
push
mov
jmp
aas
xchg
xchg
inc
xchg
pop
(bad)
xor
(bad)
std
jnp
cmp
add
mov
dec
xor
pop
loope
and
xchg
test
je
mov
inc
outs
pop
mov
pminub
dec
pop
ins
xchg
cmp
xor
mov
aas
push
test
mov
or
ror
jo
inc
dec
add
sub
push
lea
lea
and
inc
sub
jge
in
and
sub
or
fidivr
cwde
mov
adc
lea
adc
push
add
call
jge
outs
inc
shl
pushf
xchg
cld
pop
sbb
call
pop
movs
push
push
add
push
inc
mul
ss
ds
fincstp
lods
inc
xor
cmp
add
or
xor
sub
jne
ror
xchg
or
(bad)
jp
sub
cld
push
out
sub
out
loopne
dec
jbe
adc
rol
add
sbb
push
lds
adc
adc
mov
mov
out
daa
je
sub
and
or
push
lods
or
jnp
mov
in
and
and
pop
ror
sbb
inc
pop
adc
push
xchg
es
sub
jno
sbb
jle
or
js
add
and
jmp
and
cli
push
pop
sbb
fist
je
ss
jns
js
sub
jno
mov
popa
and
(bad)
push
adc
sbb
loopne
nop
sub
ret
and
ret
push
jmp
call
or
pushf
push
sub
sub
adc
in
jbe
das
out
or
fiadd
mov
shl
jae
push
fwait
and
sar
mov
ror
fs
jle
iret
loop
pop
mov
mov
in
push
xchg
mov
or
xchg
push
or
add
sub
jo
add
dec
dec
mov
adc
xor
jne
cmp
je
mov
addr16
je
add
iret
mov
push
sub
popa
jno
jmp
cmp
xchg
aas
hlt
outs
adc
pusha
or
fwait
push
cld
and
pop
adc
jle
add
push
jno
push
(bad)
cmp
jae
mov
sbb
xchg
sbb
push
push
mov
icebp
aas
cld
dec
test
jl
inc
and
sar
neg
push
jg
add
jmp
call
in
pop
adc
add
leave
pusha
inc
pop
add
in
fld
add
lea
add
mov
xor
inc
hlt
pop
ret
cld
mov
call
mov
adc
jg
sub
out
cmp
imul
out
pop
clc
jg
lock
int3
fiadd
push
cmp
pop
aas
push
push
aas
add
jne
adc
mov
or
jg
cli
(bad)
mov
cdq
add
jmp
mov
cmp
and
mov
test
imul
je
inc
sub
pusha
cdq
adc
xchg
mov
mov
mov
push
lods
or
or
imul
sbb
sub
lock
push
cld
pop
pusha
xchg
test
inc
push
ss
or
xor
jmp
fnsave
adc
lock
inc
sti
aam
into
xor
cmp
xor
xor
push
jne
test
mov
cmp
adc
sbb
jae
inc
cmp
retf
js
sar
test
out
add
dec
jne
dec
fimul
test
rcl
adc
push
test
dec
sbb
cmp
adc
out
repnz
mov
jg
call
mov
sti
cmps
test
je
bound
idiv
inc
mov
or
pop
bnd
ja
cwde
pop
pop
and
cs
mov
packsswb
pop
sub
out
retf
xor
sub
mov
mov
or
je
sub
push
cwde
jnp
xor
sbb
mov
test
sbb
mov
mov
add
fbld
mov
sbb
inc
sub
test
test
push
into
adc
cmps
adc
mov
int
ss
mov
in
ror
fdivr
ficom
inc
pop
jne
cmp
inc
rcr
ds
push
add
lods
aaa
add
add
xor
or
mov
xchg
add
sbb
adc
xchg
sbb
arpl
adc
mov
and
data16
or
ja
push
sbb
adc
and
lea
mov
push
inc
sub
outs
inc
dec
and
inc
lods
lock
mov
jo
push
push
and
inc
out
test
sub
or
ret
xor
leave
fwait
jg
push
sbb
mov
and
dec
and
rcl
dec
xor
dec
push
imul
cli
adc
adc
ins
pop
aam
ror
mov
sbb
xchg
pop
add
cmp
popa
add
hlt
mov
push
pop
out
popa
iret
cmp
sub
aas
in
cmp
cmp
push
sbb
mov
loopne
stos
pop
retf
or
adc
je
and
inc
and
or
cmp
call
pushf
sub
inc
and
and
sbb
pop
sub
jo
push
mov
in
jmp
pop
mov
clc
outs
sti
aam
dec
pop
jmp
pop
mov
popf
ss
in
lea
pusha
mov
clc
and
pop
jbe
in
and
push
push
fsubr
or
mov
sbb
lds
out
dec
push
call
mov
mov
add
dec
cmp
cmp
sub
dec
xor
cmp
add
sub
cmps
inc
mov
mov
mov
out
mov
cld
fbld
xchg
adc
daa
(bad)
push
loope
mov
ins
call
mov
cmp
sbb
cmps
pop
or
or
shl
sbb
dec
inc
xor
inc
mov
jns
arpl
sbb
in
jecxz
rcr
add
or
or
sub
adc
inc
push
pop
xor
clc
cmp
or
sub
out
js
movs
add
fmul
inc
or
loope
ds
pop
sub
enter
fimul
push
repz
(bad)
jle
push
add
mov
dec
adc
in
aam
cwde
dec
dec
jmp
(bad)
jo
jno
or
push
lods
or
mov
sbb
add
call
dec
loopne
loop
ins
popa
cmp
icebp
je
fstp
push
mov
adc
adc
aaa
out
push
lahf
add
lock
inc
icebp
adc
add
vmwrite
mov
push
push
adc
pushf
mov
add
jmp
cmp
jo
adc
lea
nop
mov
(bad)
mov
data16
jae
cmp
jecxz
ror
inc
push
push
xchg
push
pop
mov
dec
dec
test
add
adc
movs
loopne
inc
lds
push
sbb
inc
jne
inc
mov
fld
pop
jecxz
mov
push
push
dec
inc
jl
or
dec
ins
popa
gs
in
add
push
mov
aaa
fdivr
aaa
les
arpl
jb
jo
imul
push
add
inc
mov
jecxz
cli
inc
popf
mov
jae
mov
push
xor
mov
in
xor
cmp
push
mov
push
stos
dec
fadd
cld
jg
push
stc
push
ret
fs
es
pop
popa
xor
out
push
cld
mov
add
cmps
cmp
add
shl
sbb
xchg
bound
sbb
push
loopne
js
mov
int3
jb
into
(bad)
(bad)
enter
dec
rol
inc
adc
pop
jne
test
int
mov
lea
gs
jnp
pop
push
add
in
adc
rcl
movs
cmp
lock
jo
test
pop
add
push
mov
pop
lods
jmp
mov
push
add
dec
xchg
mov
jne
mov
call
and
add
or
cld
sbb
or
push
outs
test
and
outs
mov
pusha
dec
les
cli
push
pushf
mov
es
cmp
push
ja
jle
sub
cld
pop
loopne
push
cmp
add
hlt
sbb
lods
movs
ja
inc
adc
(bad)
gs
cwde
mov
inc
scas
or
pop
pop
and
inc
mov
cmps
pop
lahf
jmp
(bad)
adc
push
sbb
scas
or
arpl
mov
rol
in
inc
push
cmp
or
push
push
fist
mov
push
dec
loopne
and
and
jmp
xor
mov
popa
inc
test
push
test
push
mov
xchg
cmp
ror
jp
and
add
xchg
aam
xchg
mov
mov
dec
outs
or
add
mov
sahf
jne
jne
dec
mov
cmps
ins
cmp
jbe
jnp
je
push
or
sar
push
xor
add
jnp
lock
add
sbb
inc
jns
cmp
jo
repz
push
ret
ret
push
xchg
call
ret
cdq
sbb
jae
fsub
cmp
xor
ins
push
inc
or
cmp
aaa
fadd
ins
or
jge
fisttp
adc
cs
bound
mov
push
jne
xor
movs
sbb
(bad)
jo
xor
mov
addr16
arpl
cs
enter
movs
mov
adc
pop
inc
aad
fild
stos
dec
js
adc
rcl
outs
adc
adc
and
loopne
and
sar
daa
mov
xor
pop
not
inc
call
adc
lea
jmp
inc
je
cmp
jmp
mov
cld
shr
add
pop
mov
aas
and
add
inc
mov
xor
int
add
sbb
push
add
dec
cmp
and
cmp
fistp
dec
inc
mov
and
cmp
imul
add
jmp
push
cmp
iret
repz
ins
jle
adc
add
cmp
push
and
and
and
and
adc
fwait
and
test
test
push
scas
cmp
sbb
ss
mov
mov
popa
je
jmp
icebp
out
or
pop
lods
mov
sub
nop
pop
add
test
mov
add
mov
mov
stos
daa
hlt
pushf
movs
cmp
jb
(bad)
cmp
out
pusha
add
aad
add
or
neg
add
add
sub
jmp
push
popa
xor
scas
loopne
ins
add
jnp
jg
push
stos
sub
add
add
dec
add
inc
call
les
les
add
jmp
pop
call
rol
xchg
fsubr
shl
inc
jmp
pop
inc
mov
sbb
pop
push
or
and
add
addr16
or
test
xchg
mov
and
ficom
nop
stos
add
ins
mov
xchg
repnz
stos
add
dec
add
pusha
aas
loop
inc
mov
jbe
out
mov
div
mov
in
mov
mov
clc
xchg
ins
cmps
in
mov
pop
sbb
(bad)
mov
hlt
and
push
mov
int
div
cli
xchg
shl
pop
adc
adc
mov
and
push
mov
inc
mov
cmp
add
push
psubw
loop
mov
dec
mov
add
into
cmc
mov
mov
jl
outs
add
cmp
jne
sbb
or
or
mov
bound
inc
ficomp
movs
outs
mov
dec
sbb
mov
fdiv
xlat
lods
enter
mov
daa
push
(bad)
mov
punpckldq
inc
jbe
push
jge
push
cmp
cmp
and
push
mov
ret
mov
push
pop
mov
and
shl
arpl
leave
dec
cmp
hlt
push
add
dec
push
add
cmp
push
add
inc
das
sub
inc
add
push
add
add
imul
and
es
je
cdq
cmp
cld
fs
ja
fsubr
xlat
scas
(bad)
bound
inc
add
add
dec
push
push
addr16
cmp
push
cmp
xor
ret
adc
push
and
cwde
cdq
push
push
dec
sbb
add
inc
jo
dec
scas
push
dec
clc
fisubr
cmp
inc
or
xor
imul
jp
adc
push
popa
je
gs
movs
sbb
or
jo
test
push
daa
adc
pop
into
mov
fst
dec
gs
push
pop
lock
push
inc
imul
or
and
inc
imul
outs
jb
sub
sub
rol
ins
scas
pop
xchg
add
scas
push
daa
xchg
das
ds
sti
mov
push
mov
js
int3
and
sahf
out
sbb
cmp
xor
mov
repz
cmps
enter
xor
add
imul
lock
inc
add
imul
fcmovne
shr
inc
add
jmp
clc
inc
push
dec
mov
lods
mov
das
mov
mov
outs
lods
loopne
sub
cs
call
arpl
sbb
fiadd
cmc
aam
or
ins
lock
gs
out
mov
add
sbb
or
fimul
cmp
es
(bad)
jg
push
inc
jb
xchg
gs
mov
add
rol
inc
gs
bound
scas
jb
jns
sub
mov
jbe
cmp
cwde
xor
fadd
jo
rol
lods
adc
cmp
inc
inc
mov
pop
dec
mov
sub
add
test
pop
out
jp
or
sbb
or
int3
push
(bad)
sbb
int3
mov
add
rcr
pop
cmc
test
sbb
dec
xchg
mov
daa
or
clc
jmp
mov
adc
je
dec
ja
(bad)
sbb
pop
or
pshufw
jg
dec
jl
pop
js
and
and
imul
or
and
mov
lods
sub
adc
inc
out
jl
mov
loope
in
lods
or
ficomp
sbb
bound
lock
in
mov
sbb
inc
sbb
pop
mov
mov
fcomp
repnz
loope
ror
in
loopne
cmp
rcr
div
(bad)
and
dec
or
inc
xchg
ret
jg
or
inc
cmp
jne
cs
in
or
call
inc
cmp
jne
inc
cmp
shl
add
les
lods
or
adc
cld
je
pusha
mov
mov
ret
test
fdiv
loopne
mov
xlat
xchg
ret
test
test
pop
pop
xchg
push
pop
xor
jne
arpl
dec
arpl
test
and
cmc
push
mov
mov
hlt
clc
or
mov
add
loop
ins
push
repnz
push
jmp
mov
cmp
ja
and
bt
jae
jnp
lock
xor
cmp
jne
mov
xchg
jg
dec
in
fcom
loop
pop
pop
ret
test
adc
fimul
push
cld
mov
rcr
sar
clc
add
popf
imul
sbb
or
sar
sbb
rcr
jmp
and
push
mov
or
and
jne
inc
sbb
or
ret
xor
push
or
repz
ja
ins
or
loopne
cmp
or
out
popf
sbb
ds
or
push
mov
dec
fld
and
es
or
jb
push
dec
jo
or
sti
sbb
push
aaa
add
loopne
and
fstp
adc
cdq
cmp
es
daa
or
sub
shl
or
pop
mov
loope
or
inc
iretw
or
and
jecxz
sub
sti
daa
push
mov
pop
push
lea
neg
icebp
jecxz
imul
jle
inc
data16
mov
mov
scas
pop
rcl
xor
cwde
adc
sbb
sub
shr
fsubr
adc
add
or
dec
clc
xlat
push
push
fcom
xor
(bad)
int3
mov
inc
sub
push
or
hlt
mov
mov
or
add
inc
cmps
or
push
push
xchg
shr
adc
jbe
push
push
pushf
pushf
je
push
adc
dec
and
sub
dec
jb
gs
fs
add
test
enter
sbb
cmc
jge
or
dec
inc
outs
jne
je
mov
cmp
pop
or
into
in
inc
je
in
xchg
dec
add
repnz
inc
xchg
ins
xor
test
add
jne
push
ror
add
xchg
ins
gs
add
test
and
stos
pop
or
inc
mov
pop
or
pop
imul
pop
and
push
push
jns
fsubr
dec
dec
outs
jb
cmp
push
pop
add
mov
data16
fsub
xor
(bad)
scas
aas
push
cs
push
push
push
je
arpl
pop
sbb
dec
or
or
or
pusha
inc
sub
mov
sub
xchg
mov
test
inc
cmps
adc
js
xor
shl
je
cmp
ror
mov
mov
(bad)
lea
adc
cmp
xor
or
mov
iret
add
jg
sbb
test
fs
cld
call
push
push
adc
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
dec
dec
repz
add
int
pop
ret
mov
dec
outs
inc
jne
je
dec
inc
sub
adc
popa
(bad)
fstp
or
push
lds
(bad)
scas
adc
push
push
cmp
inc
imul
mov
inc
pusha
sub
out
jmp
cli
and
cmp
push
iret
outs
out
repz
and
je
push
add
lock
je
inc
int
or
xor
add
sbb
pop
add
or
inc
inc
add
ret
enter
dec
or
add
push
mov
adc
or
mov
adc
loop
add
add
fcomp
rol
in
push
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwde
xchg
nop
mov
test
mov
xor
push
push
push
inc
xchg
cmp
mov
pop
mov
mov
popa
mov
mov
add
pop
push
sub
inc
mov
pop
dec
cmps
mov
ret
scas
popf
(bad)
add
js
adc
popw
sub
push
xchg
pop
sti
scas
loopne
clc
push
sub
outs
cmp
cmp
neg
dec
adc
(bad)
rcl
mov
push
(bad)
ja
sbb
arpl
outs
dec
bound
arpl
pop
sbb
add
inc
arpl
imul
push
sbb
and
pop
push
sbb
dec
xor
pop
push
shr
std
popa
imul
jno
xor
fbld
outs
aam
push
and
mov
lds
pop
movs
xor
add
pop
jg
add
cmp
outs
adc
push
dec
repz
cdq
loopne
outs
mov
popa
jns
add
call
and
fwait
sub
inc
mov
es
adc
out
das
mov
lahf
sbb
lahf
mov
ror
adc
inc
test
add
xor
or
stos
inc
je
scas
js
sbb
adc
inc
dec
dec
popa
ror
lahf
pop
js
push
scas
(bad)
pop
jle
push
mov
push
cmp
jp
fisubr
or
popa
and
add
dec
test
or
add
push
pop
bound
inc
bound
push
loopne
cs
cwde
movq
ins
je
jo
int3
mov
add
fist
mov
lods
int3
jle
mov
cmps
(bad)
push
push
cmps
lea
inc
adc
inc
mov
xor
adc
outs
popa
fs
shl
and
fild
dec
outs
xchg
sbb
xchg
pop
pop
lea
dec
in
xchg
mov
fwait
add
dec
lods
cmp
add
add
(bad)
mov
sbb
push
push
push
cmc
loopne
add
rol
pop
in
das
adc
aaa
in
xor
mov
xlat
jmp
jp
movs
pandn
pop
fimul
push
push
inc
jbe
je
add
cdq
adc
push
sub
push
or
aad
cmc
mov
lock
sub
jb
bound
loope
cmp
and
adc
dec
or
outs
adc
adc
push
cmp
dec
add
popa
mov
cwde
push
push
mov
cmp
and
mov
fsubr
sbb
lock
inc
or
pusha
sub
inc
mov
add
add
mov
push
add
xchg
adc
outs
mov
mov
inc
(bad)
out
es
inc
pop
out
and
push
push
out
sti
sar
leave
push
mov
mov
push
xchg
pop
sbb
outs
rcl
pop
scas
imul
pop
push
xchg
or
scas
mov
outs
into
push
push
xchg
outs
bndstx
adc
int
pop
pusha
arpl
es
jo
xchg
sbb
test
dec
fisubr
add
xchg
dec
mov
rcl
sub
ror
push
jb
inc
xor
retf
xor
inc
popf
dec
adc
or
cdq
mov
or
dec
add
dec
push
mov
inc
jecxz
cmp
test
jl
unpckhps
(bad)
inc
jne
cmp
inc
outs
outs
mov
mov
(bad)
(bad)
fild
(bad)
jae
ret
les
push
sub
idiv
aad
popa
jle
enter
cmp
je
adc
mov
cs
dec
push
jle
mov
jne
mov
data16
add
pop
jmp
mov
push
push
sti
dec
mov
mov
dec
stc
xchg
jp
xchg
rcr
sar
in
mov
sti
(bad)
adc
jo
clc
jne
aaa
jge
lock
popa
ret
ficom
sub
fs
loope
out
inc
ds
pop
sub
loopne
shr
sub
ds
int3
pop
cli
mov
mov
push
push
mov
rcl
and
ins
std
int3
adc
cmp
jne
push
jle
cmp
(bad)
fdivr
int
inc
in
into
mov
setne
out
xchg
pushf
cmp
shl
and
lahf
mov
pop
mov
jmp
sbb
push
mov
adc
call
out
ja
cmp
jae
sub
mov
jmp
jmp
mov
adc
push
outs
or
mov
push
lock
xor
add
ret
popa
ds
mov
or
test
je
mov
mov
xor
jo
dec
cmp
and
daa
(bad)
sub
push
xchg
stc
inc
aad
ret
xor
inc
mov
jae
push
push
inc
add
hlt
mov
retf
or
shr
mov
addr16
xchg
in
mov
(bad)
pop
adc
cmp
sbb
pusha
daa
xor
and
and
cmp
cmp
inc
lea
inc
call
das
push
mov
sub
cld
in
sub
in
loope
(bad)
jg
or
jmp
mov
jmp
mov
jmp
mov
cmp
add
mov
inc
or
inc
push
push
push
mov
jg
jo
aad
push
je
sub
div
or
jmp
xchg
jle
sbb
ret
push
mov
movs
cvtpi2ps
sbb
punpckhbw
movzx
adc
xor
or
lods
xor
push
push
sbb
add
mov
mov
adc
repnz
in
push
imul
movs
adc
jmp
jge
dec
in
fbstp
leave
int3
mov
dec
and
shl
pop
test
add
in
pop
jmp
mov
inc
mov
xchg
loop
pop
pop
ds
jno
add
add
idiv
nop
mov
add
mov
sbb
test
dec
mov
call
mov
add
xchg
ret
lods
mov
sub
and
inc
mov
mov
sub
leave
dec
retf
gs
and
or
cmp
jmp
xor
xchg
mov
add
add
test
push
dec
jb
ror
lock
fmul
setg
xchg
pop
mov
ss
add
ds
mov
or
out
lock
mov
cmpxchg
cmp
je
test
push
imul
push
rol
cld
pause
dec
jmp
cmp
(bad)
bound
jmp
retf
popf
pop
add
mov
jmp
mov
or
adc
cmp
mov
cs
and
pop
sbb
loopne
fdiv
xor
mov
sbb
or
sub
ret
jne
adc
jmp
shl
mov
in
or
cs
push
xor
mov
and
or
daa
shl
and
mov
fwait
push
cli
(bad)
shl
mov
test
cmp
call
in
addr16
sub
dec
ret
bound
dec
sbb
pop
or
pop
out
cmc
jnp
jbe
enter
or
mov
dec
adc
mov
enter
add
add
xor
cmp
test
add
xchg
add
sub
add
add
dec
xor
adc
mov
sub
and
imul
in
mov
inc
add
int
cli
push
mov
int
sbb
push
dec
iret
bnd
out
fwait
in
cmp
jae
or
and
push
and
cld
fdivr
and
sub
push
jle
aaa
nop
mov
xor
outs
test
inc
jge
mov
adc
out
bound
or
mul
nop
push
push
xor
push
or
mov
repnz
int3
aam
in
xchg
mov
fsubr
test
ins
pop
adc
pop
push
retf
dec
sub
imul
push
or
sbb
and
jp
into
cmp
das
pop
cwde
adc
mov
bound
daa
out
scas
push
inc
jmp
mov
mov
jle
out
int3
push
lods
add
inc
pop
add
add
or
out
add
or
inc
push
inc
dec
dec
push
loopne
test
pop
push
in
arpl
gs
imul
jmp
jmp
addr16
mov
outs
jo
gs
sub
je
push
sub
outs
(bad)
ins
inc
lock
test
mov
push
popa
(bad)
inc
test
pop
xchg
ret
push
push
push
push
push
mov
add
sbb
and
aaa
sbb
add
out
push
fs
jl
sbb
fs
jb
xor
das
clc
sbb
int3
or
xor
nop
cdq
das
lock
in
inc
data16
and
das
call
sbb
into
mov
in
hlt
adc
adc
xchg
in
rcr
(bad)
loopne
push
dec
test
sub
neg
pop
sbb
popf
icebp
repz
mov
or
fcomp
loopne
xor
xor
call
xor
hlt
clc
cld
add
add
or
enter
adc
sbb
enter
and
sub
enter
xor
cmp
enter
inc
dec
dec
push
enter
push
pop
pop
pusha
enter
fs
enter
jl
mov
mov
pop
add
dec
push
add
out
outs
loope
xcrypt-cbc
cmps
push
push
mov
mov
add
mov
(bad)
das
(bad)
and
aad
lahf
cmp
xchg
jl
data16
adc
add
xchg
(bad)
pop
or
push
add
add
inc
pusha
and
pusha
add
shl
pusha
pop
add
push
les
and
xchg
inc
pop
out
and
push
(bad)
and
out
dec
(bad)
and
jnp
mov
mov
and
xor
(bad)
shl
xor
and
jl
mov
add
jecxz
cwde
and
push
fld
punpckhbw
and
xchg
and
(bad)
fld
push
cli
and
push
jo
push
pusha
sbb
test
push
int3
and
adc
cmp
fisub
add
add
pop
push
pusha
cmp
push
cmp
cmp
test
fld
push
push
mov
mov
push
and
push
pushf
add
jmp
push
mov
dec
push
and
push
adc
dec
and
je
add
and
or
push
mov
sub
dec
push
fwait
xor
or
sar
cs
push
pop
ins
push
add
es
push
gs
xor
inc
scas
lahf
ror
push
mov
add
cmp
or
ja
inc
push
arpl
lods
pusha
fiadd
pop
out
call
pop
add
and
in
adc
add
loopne
ror
push
push
adc
mov
push
jae
xor
add
xchg
adc
shl
push
test
xchg
dec
dec
das
lock
pusha
mov
jmp
push
cdq
xor
add
mov
test
add
dec
int
dec
pop
xor
aaa
dec
push
xor
iret
rcl
mov
movs
bound
data16
add
gs
daa
ret
add
out
ret
data16
aaa
jae
popa
adc
pop
mov
inc
push
xchg
add
or
test
mov
cwde
xor
aas
push
scas
mov
add
pop
sahf
xor
adc
xchg
cmp
jb
xchg
fmul
mov
arpl
push
mov
xchg
inc
out
sbb
outs
dec
ds
lock
aaa
sub
pop
push
mov
jo
lahf
add
push
pop
or
xchg
outs
push
xor
push
into
pop
cs
sub
inc
cmps
into
sbb
inc
ss
mov
xor
mov
sub
or
pop
sub
add
adc
jnp
dec
imul
push
pop
inc
jg
jbe
movs
cdq
rcr
and
add
lds
adc
push
enter
xchg
and
stos
push
sub
or
or
add
loop
pop
pop
xchg
sub
retf
icebp
push
inc
push
scas
imul
mov
push
pcmpgtb
xchg
addr16
test
add
sub
xchg
mov
dec
mov
cmc
jbe
lds
xor
adc
mov
pop
lock
xor
jmp
mov
ret
or
inc
mov
jne
or
rcr
or
jg
repz
lock
out
mov
mov
or
dec
dec
dec
push
dec
push
pop
add
add
cmps
add
mov
add
das
je
call
test
pushf
jg
pop
and
jae
cdq
mov
das
fs
xor
das
sbb
enter
das
adc
ss
nop
cdq
das
adc
cs
mov
add
push
cld
es
and
out
das
push
push
jl
dec
jle
sub
out
ror
push
mov
out
shl
mov
ss
fs
out
call
push
nop
hlt
mov
lock
jl
ins
push
aam
(bad)
mov
(bad)
jp
test
outs
add
push
push
sub
pop
enter
outs
pop
inc
dec
ins
popa
addr16
push
imul
or
in
pop
aaa
mov
cmp
jl
push
add
jge
ror
adc
adc
jae
pushf
sub
push
xchg
cld
adc
cdq
adc
ja
add
xlat
shl
fld
ins
je
ins
add
ret
sti
aas
dec
or
push
push
jo
jl
inc
pop
rcl
mov
add
push
and
rcl
loopne
pop
pop
jne
push
mov
inc
or
arpl
sub
fld
cmp
jmp
and
adc
fnsave
pop
cmp
ds
loop
cmp
in
dec
pop
mov
cmp
xchg
xor
ins
pop
cmp
repz
mov
shl
in
jl
or
sbb
cmp
repz
pop
push
iret
repz
test
mov
iret
(bad)
enter
fsubr
loopne
sbb
sbb
mov
and
or
mov
pusha
adc
dec
pusha
pop
test
pusha
add
mov
xgetbv
loop
or
xor
pop
mov
movs
cmp
dec
cmps
(bad)
cs
sbb
ins
ds
rol
dec
or
enter
cmps
fldenv
(bad)
adc
cwde
iret
push
fisubr
hlt
xor
mov
lods
xlat
push
sbb
push
test
call
fiadd
mov
enter
mov
push
in
push
cwde
push
in
push
dec
retf
jnp
ss
push
sub
lods
jnp
mov
xchg
push
sahf
jl
push
or
fmul
verw
(bad)
call
dec
sbb
sub
fs
test
and
std
mov
dec
push
out
and
adc
push
lds
jecxz
mov
push
lock
push
inc
add
idiv
lods
cs
mov
loopne
adc
push
call
add
shr
add
sub
outs
push
dec
mov
jge
div
ds
les
cmp
jae
mov
js
jge
clc
push
mov
in
inc
movs
xchg
dec
fucomip
jnp
xchg
push
push
pop
mov
ds
mov
fmulp
gs
push
push
push
mov
add
outs
jo
test
pop
pusha
adc
push
clc
out
scas
and
cmc
push
sbb
adc
cld
iret
into
mov
iret
mov
push
add
(bad)
(bad)
push
add
cld
sbb
add
xchg
shl
and
mov
out
out
into
or
pop
inc
js
arpl
xcrypt-ecb
cmps
retf
dec
rcl
xor
push
push
jo
pop
dec
and
outs
jg
xor
push
sub
outs
loopne
out
fisub
or
jle
shl
cmp
or
aad
fwait
add
adc
sbb
mov
add
pmullw
jmp
shr
mov
mov
fbstp
ror
inc
sbb
je
jle
jmp
mov
mov
mov
push
xor
mov
out
std
je
mov
and
push
pop
xchg
mov
fcomp
add
or
addr16
lock
mov
mov
out
inc
push
ret
and
(bad)
inc
mov
mov
xor
(bad)
rcl
repz
and
cmp
sbb
cmp
jne
push
inc
out
push
push
push
mov
mov
sbb
aam
jne
shr
push
sbb
inc
out
adc
sub
(bad)
cmp
test
call
mov
ss
test
jl
inc
xor
mov
daa
push
mov
xor
mov
sub
fs
pmaxsw
pop
push
adc
inc
inc
je
push
pusha
mov
jmp
inc
dec
jne
movzx
pop
pop
stos
adc
loopne
push
mov
mov
inc
retf
fs
sar
mov
add
cmp
or
neg
dec
mov
call
push
mov
or
into
scas
inc
cmp
or
mov
fwait
sbb
adc
sahf
ror
(bad)
das
or
pushf
shr
mov
fdivr
enter
call
and
into
rcl
sub
adc
mov
imul
jl
inc
mov
push
mov
pop
jbe
in
pop
jge
or
pop
sub
(bad)
or
fld
clc
xor
pop
mov
sub
sub
adc
or
mov
dec
and
cwde
jg
ret
pop
push
out
jo
repnz
ins
sbb
jno
sahf
(bad)
mov
add
retf
push
adc
and
mov
mov
mov
out
out
jge
add
and
mov
adc
shr
mov
cmp
inc
mov
adc
add
add
in
jno
jbe
add
inc
adc
lea
push
test
fadd
pusha
rol
mov
fld
cmp
cs
ins
aas
test
add
add
push
in
sbb
sub
in
sbb
mov
sbb
mov
cwde
pusha
add
mov
dec
jle
push
arpl
js
jge
push
sbb
sub
cld
dec
js
sbb
push
mov
jl
push
popa
js
ds
mov
push
cmp
sub
add
cli
pop
ret
add
neg
nop
add
jg
xchg
lea
sbb
and
int
or
dec
lea
fstcw
fwait
data16
dec
cld
add
fldcw
mov
hlt
data16
fnclex
sbb
hlt
clc
push
popa
and
fidiv
xor
cmp
test
mov
mov
push
mov
mov
dec
or
out
push
fidiv
or
sbb
mov
jle
mov
jge
mov
(bad)
scas
jp
shl
pop
add
add
je
mov
sbb
sbb
aas
cmp
mov
push
sbb
and
pusha
dec
mov
jnp
add
sub
add
and
std
ss
jbe
and
or
mov
ldmxcsr
neg
jl
jae
jmp
out
adc
add
or
jge
or
inc
imul
or
jg
mov
jl
or
or
movs
rcr
sbb
xor
jp
inc
sti
sub
or
mov
inc
sub
push
and
dec
push
xchg
shl
cld
mov
xor
hlt
add
sbb
mov
fst
scas
enter
loop
sub
push
xor
inc
cmp
shl
jbe
pop
rcr
mov
div
ss
sbb
cld
pop
push
mov
shl
cmp
or
fmul
and
jno
scas
sub
sub
push
inc
cld
enter
rcl
mov
shl
mov
das
lods
add
jnp
xchg
sub
loop
add
sbb
add
mov
xor
or
or
fbstp
sbb
cwde
mov
paddd
inc
sbb
icebp
jmp
adc
jmp
push
mov
add
jo
sbb
adc
and
test
daa
inc
(bad)
fild
adc
dec
adc
(bad)
pop
pop
add
inc
loope
ja
jae
ins
and
mov
or
or
and
je
fisubr
push
rol
clc
add
add
ret
in
mov
aam
push
and
fbstp
adc
push
or
xor
cmovae
sbb
jnp
jb
inc
push
cld
xchg
mov
dec
mov
dec
loopne
inc
or
push
int3
sub
adc
push
ins
ins
pop
rol
mov
inc
sub
mov
lods
mov
push
mov
mov
imul
inc
push
lock
pop
dec
mov
sub
cs
pop
les
clc
aaa
mov
mov
movzx
xor
and
lods
in
mov
mov
cs
dec
dec
sbb
dec
or
and
cmp
pop
cmc
mov
adc
sub
dec
jne
sub
adc
add
dec
jbe
inc
jmp
mov
fdivr
fs
inc
mov
push
ss
js
pusha
push
push
inc
pusha
push
hlt
call
and
cli
int
shl
cmp
icebp
cld
add
jmp
ds
xcrypt-ofb
cmps
jmp
or
xor
sub
and
inc
stos
mov
(bad)
push
sub
cmps
out
push
jno
aam
add
sbb
jmp
jmp
out
add
add
add
test
adc
cmp
mov
push
pop
inc
cmp
into
(bad)
test
push
inc
clc
jno
cs
jno
ins
shl
inc
clc
sbb
out
mov
adc
test
cwde
dec
cs
and
js
jp
xchg
jnp
mov
cmp
cli
and
push
push
or
cmp
pusha
jne
push
stos
jle
pop
je
pop
pop
repnz
clc
sbb
lods
xor
nop
mov
fnsave
fsubr
aaa
js
outs
fisub
adc
add
inc
jbe
sti
stos
mov
adc
sub
xchg
es
cmc
aad
pushaw
mov
pop
add
loope
mov
inc
adc
or
add
sub
loopne
rcr
(bad)
cld
ss
jne
xchg
xchg
call
sub
mov
sbb
or
cmps
xor
fisttp
out
add
mov
sbb
jg
xchg
push
or
add
cmc
sub
or
call
push
mov
cmp
jb
js
push
xor
je
js
je
push
sub
mov
loop
pop
sar
sti
fld
adc
add
sahf
xchg
je
call
jge
or
loop
mov
jb
jmp
jmp
in
ret
test
inc
jl
stc
mov
lds
xchg
imul
pop
outs
mov
(bad)
and
popa
xlat
xor
or
outs
jg
aaa
dec
inc
push
push
or
shr
shr
fsub
add
add
out
mov
adc
mov
and
sti
mov
dec
mov
add
je
dec
repnz
pop
loop
popa
sub
bound
(bad)
mov
sbb
mov
lock
sbb
sub
fstp
push
add
add
mov
or
cmp
jle
mov
inc
and
sub
push
dec
ins
cwde
nop
add
dec
ret
sbb
add
jp
pcmpeqb
mov
add
jmp
call
add
mov
cs
je
mov
sbb
mov
inc
inc
pop
mov
push
mov
std
xor
add
xchg
inc
or
shl
dec
xchg
and
jl
ja
into
xchg
call
dec
inc
adc
fdiv
loop
pop
cld
in
je
cmps
inc
adc
push
or
mov
mov
mov
sub
pop
adc
pop
adc
pop
push
hlt
jmp
out
mov
das
mov
fcmovbe
push
in
int
loopne
push
pop
lods
inc
jmp
mov
jle
test
pop
jle
push
push
cmp
mov
sub
mov
loope
mov
adc
xor
push
lods
ret
sub
mov
xor
pushf
jge
pslld
adc
adc
mov
in
pop
shr
inc
or
add
pop
je
dec
inc
rcr
lods
jnp
add
ret
inc
sub
pusha
popa
nop
popa
dec
lds
das
or
add
call
ret
add
xor
push
pop
int
sub
rcl
jnp
add
or
(bad)
sbb
dec
ins
cmp
bound
js
in
add
pushf
es
and
mov
add
pop
jns
and
push
cmp
iret
and
aad
cld
(bad)
(bad)
push
or
mov
imul
mov
add
fwait
enter
das
adc
aam
popa
or
cmp
or
sbb
sbb
inc
and
jle
shr
and
and
push
imul
loope
xor
push
pop
push
push
call
ret
mul
into
inc
mov
add
shl
ror
adc
dec
scas
and
sbb
clc
push
jge
or
adc
or
push
inc
cmps
mov
(bad)
shl
or
xchg
je
or
fsubrp
stos
and
mov
icebp
pop
mov
enter
adc
lods
arpl
fstp
xor
mov
rol
or
inc
xlat
call
je
(bad)
push
sub
push
or
inc
cmp
xor
jbe
xor
push
clc
push
push
or
clc
cmp
loop
ret
jg
xor
mov
inc
or
sub
dec
mov
and
or
les
and
test
dec
(bad)
xlat
jge
jne
fdivr
loop
daa
shr
pop
adc
enter
dec
aad
aad
pop
jo
inc
test
(bad)
dec
hlt
ret
cmp
call
sub
in
push
add
sub
mov
out
push
or
mov
inc
lock
mov
popf
sub
movs
js
dec
sbb
adc
icebp
movzx
cld
fisttp
pop
loop
jge
xchg
xchg
loope
sbb
add
or
mov
xor
adc
add
jg
dec
push
es
jnp
fucomi
in
or
sub
jnp
mov
and
cmp
jb
movs
cmp
loopne
push
lahf
loope
in
loopne
or
out
lahf
adc
shl
mov
mov
jne
divps
add
pushf
jbe
inc
mov
stos
sub
or
dec
mov
shl
scas
and
mov
sub
xchg
out
out
aam
mov
jp
jne
xor
jb
cmp
jae
dec
cmc
inc
push
push
sbb
shr
adc
inc
mov
ror
xchg
cld
sub
sbb
enter
ds
pop
test
sbb
cli
push
fistp
mov
test
inc
fistp
adc
sbb
arpl
pop
cmp
push
(bad)
(bad)
pusha
fucomi
fs
jmp
sub
cld
icebp
jmp
push
adc
cmp
xchg
int
dec
inc
call
xor
in
in
mov
in
adc
out
xor
xor
clc
add
jne
scas
or
icebp
cwde
pop
jmp
push
dec
aam
mov
push
adc
cmps
cmp
enter
xchg
dec
adc
inc
xadd
lahf
adc
popa
adc
add
in
(bad)
ret
jg
movs
cmp
aaa
shr
mov
adc
fsub
and
shr
daa
adc
cwde
jno
(bad)
cdq
es
xor
pop
push
mov
inc
ret
fisttp
pop
or
out
pop
mov
inc
jb
cmp
je
sbb
(bad)
or
and
push
pop
cwde
(bad)
addr16
push
mov
je
cmp
popf
por
inc
test
data16
xchg
shr
push
and
out
inc
sub
rcl
test
dec
mov
mov
cli
std
in
push
bound
or
fist
adc
cmp
and
movsx
inc
sbb
push
mov
jge
bound
pop
mov
add
outs
imul
push
adc
add
aam
adc
xchg
(bad)
mov
sub
leave
jae
(bad)
imul
out
dec
inc
gs
sub
dec
cs
fist
push
fisubr
push
or
jmp
mov
mov
repz
loop
(bad)
rol
inc
mov
lea
jge
xchg
(bad)
mov
std
jle
mov
jl
push
mov
xor
push
repnz
lea
ucomiss
adc
cmp
add
mov
add
jmp
sub
pop
mov
cs
push
push
push
inc
dec
or
mov
adc
xlat
jmp
xchg
inc
movs
sbb
adc
mov
ins
mov
ret
add
pop
or
xlat
inc
mov
pusha
cmp
or
ret
mov
jne
enter
mov
push
mov
adc
retf
inc
aas
test
test
and
ror
cmp
jl
sub
adc
xchg
pop
sbb
push
or
ror
mov
pusha
sahf
jg
xor
mov
scas
xchg
jl
push
cmp
ins
push
int
pop
mov
xchg
sub
out
stos
cmp
jae
cli
aas
lods
stos
dec
sbb
lock
mov
sub
fisttp
dec
imul
push
lock
push
cmp
dec
ins
in
mov
add
call
dec
out
or
or
mov
cmp
cld
call
dec
je
push
sub
jo
jo
or
sbb
cmp
sti
sti
pop
out
test
call
out
push
icebp
sahf
test
inc
adc
data16
mov
fadd
sbb
cmp
jne
sysexit
sub
and
das
clc
daa
add
mov
push
mov
pop
pop
adc
xchg
cmp
jge
pop
and
adc
icebp
cmp
xchg
or
and
in
cld
cmp
(bad)
std
cmp
cmp
jbe
in
xor
mov
cmp
into
mov
rol
leave
inc
icebp
pop
sbb
fbld
sub
cmp
aad
in
sub
add
xchg
dec
fld
lahf
jno
adc
or
add
in
cmps
sub
push
mov
test
adc
(bad)
cmp
ja
push
xor
add
push
out
jae
add
sub
inc
add
or
ss
mov
inc
or
sar
or
sub
mov
mov
dec
jne
ret
and
pushf
push
dec
inc
loopne
stos
lock
cmp
sub
bound
adc
je
out
cmp
add
xchg
in
enter
jb
jb
dec
cli
cmp
(bad)
sub
pop
shl
push
je
dec
jbe
add
jmp
fucomip
xchg
mov
ja
add
adc
jb
adc
xchg
cmps
and
stos
mov
add
aas
add
push
xchg
ja
scas
clc
jae
cmp
jbe
cli
sub
cmp
or
push
adc
jnp
add
mov
xchg
inc
mov
push
push
pusha
push
test
sub
rcr
dec
or
add
clc
dec
cs
jle
or
js
push
add
push
rcr
ins
jl
cmovo
test
mov
(bad)
retf
out
mov
popa
leave
add
test
daa
jo
mov
mov
xchg
or
push
dec
adc
and
in
dec
pop
push
test
add
sbb
adc
cmp
les
jmp
mov
arpl
mov
out
stos
lds
sub
mov
push
pop
fsubr
and
push
or
pop
mov
sub
jnp
add
inc
pusha
ret
fs
xchg
adc
fidiv
pushf
js
mov
pop
popa
push
jmp
sbb
add
dec
bound
mov
pop
add
add
push
xor
cmp
mov
and
not
sub
inc
loopne
mov
retf
or
and
sub
fs
inc
es
and
sbb
mov
xor
xor
or
push
pop
sub
call
push
cmp
ja
lahf
mov
or
inc
pusha
aam
dec
sub
data16
mov
mov
adc
rcr
rol
dec
inc
sar
ror
or
loopne
push
outs
xchg
shl
test
test
cmp
adc
jmp
mov
rol
pop
mov
mov
push
and
add
cmp
adc
loopne
in
sub
jle
add
jo
sub
ja
and
push
push
and
inc
stc
xor
xor
popaw
lods
ds
pop
sbb
dec
mov
mov
test
sbb
nop
shl
dec
rcr
or
jge
mov
sbb
pop
mov
xchg
or
jl
and
dec
pusha
xor
xchg
inc
cmp
ds
ror
xlat
sbb
es
pop
or
not
jle
dec
cmp
xchg
jp
dec
test
fld
add
xchg
adc
push
or
popa
push
inc
add
dec
cmp
or
jo
xor
sti
sti
push
mov
jno
imul
sbb
es
mov
mov
js
xchg
sbb
dec
dec
movs
aaa
add
inc
(bad)
ja
sub
or
sub
in
mov
sub
or
cld
push
push
and
push
dec
test
into
jmp
xor
pop
popf
mov
dec
sub
shr
daa
cmp
js
mov
sub
xchg
sbb
sbb
mov
mov
inc
and
sub
dec
mov
sbb
data16
or
std
add
inc
sub
lock
pushf
sbb
xor
adc
and
dec
xor
icebp
push
adc
inc
inc
sbb
inc
or
push
xchg
xor
push
push
rcr
mov
jno
cwde
mov
inc
mov
mov
ja
and
loopne
sbb
retf
sub
iret
mov
(bad)
xchg
xchg
mov
adc
push
push
cmp
jne
adc
inc
adc
ins
inc
daa
daa
mov
fdiv
cmp
jne
sysenter
sub
daa
daa
daa
daa
sbb
or
add
pop
outs
mov
sub
sub
add
daa
call
dec
push
pop
in
sti
mov
(bad)
cmc
daa
cmp
cmps
pop
add
or
mov
adc
sub
dec
add
imul
cld
inc
push
or
pop
add
daa
or
lods
aam
cs
sbb
pop
pop
jne
pop
jl
rol
mov
str
sub
jle
cmp
lea
push
fcomp
inc
adc
or
ret
xchg
inc
lea
ficom
sbb
fild
outs
push
sti
inc
sbb
mov
add
adc
sbb
imul
pop
jle
lds
and
retf
mov
jg
sub
sub
lea
cmp
lock
adc
dec
mov
adc
pop
jae
push
pop
ss
outs
dec
sub
sub
add
imul
dec
js
shl
jmp
jmp
fstp
mov
adc
inc
cmp
rcl
test
mov
(bad)
push
inc
mov
or
in
mov
aad
cld
pop
or
mov
cmp
je
dec
pusha
xor
mov
dec
xor
inc
movs
mov
or
fcomp
pop
mov
xlat
fist
js
mov
cmp
sub
cmp
cli
mov
add
(bad)
int3
retf
outs
(bad)
(bad)
or
outs
inc
and
pusha
dec
jbe
dec
test
or
outs
dec
and
popa
and
inc
ins
dec
sbb
lock
lock
add
sub
push
popa
ror
loope
data16
ror
clc
or
inc
pop
mov
into
sbb
(bad)
mov
sbb
push
push
jo
cmp
xchg
push
(bad)
jl
xor
test
por
inc
lds
cwde
sar
mov
jle
cmp
das
cmp
jg
and
add
cmp
jbe
sbb
imul
and
cmp
jecxz
pop
cmp
push
fdiv
pop
dec
pusha
add
mov
inc
or
ror
pusha
or
(bad)
lock
pop
pop
add
adc
pop
sbb
xor
sub
and
shl
test
mov
mov
sti
cs
add
push
sub
ret
lock
out
and
pop
loop
jge
mov
add
and
sbb
js
pop
jge
cmp
fnstsw
dec
ds
jmp
add
ja
sub
jnp
cmp
inc
mov
(bad)
mov
lock
aam
sub
retf
xor
mov
sub
cs
xor
cdq
fldenv
sbb
test
shl
mov
sub
xor
add
cwde
je
fcmovb
sub
fs
push
or
ss
je
push
mov
ins
dec
cmp
daa
lock
lds
inc
mov
cmp
add
mov
rol
add
sbb
(bad)
push
clc
push
and
retf
stos
push
in
in
jns
inc
lock
jge
xchg
inc
lods
xor
cmp
cmp
ja
jecxz
and
push
push
sbb
int
stc
xor
sbb
mov
shr
sbb
sbb
mov
mov
mov
repz
iret
and
mov
add
and
repz
repz
daa
sahf
cmps
mov
add
sbb
add
cmp
jae
add
int
popa
jnp
(bad)
into
dec
mov
mov
sbb
(bad)
xor
call
test
je
cmp
idiv
les
dec
lock
mov
test
jecxz
xor
push
push
sbb
inc
xor
test
(bad)
mov
sbb
cmp
mov
ins
aam
je
mov
lock
or
push
or
jmp
xlat
inc
or
xlat
sbb
outs
add
and
cmp
ret
sbb
or
and
ins
lock
mov
add
and
ret
fsub
test
mov
sbb
sbb
mov
jp
sbb
ds
fmul
adc
and
add
mov
test
pop
mov
pop
jo
dec
add
add
adc
xor
add
fwait
pop
push
jnp
ins
dec
push
adc
xor
mov
pop
adc
loopne
mov
pop
or
mov
inc
push
push
pop
sub
bound
mov
or
pusha
cmp
rol
arpl
shl
jecxz
adc
mov
fnstenv
data16
mov
cmp
push
popa
xor
sbb
shr
push
jbe
cwde
test
int
sar
xor
std
fsub
cmp
dec
rol
or
inc
adc
mov
adc
sub
and
std
(bad)
loopne
mov
add
outs
or
imul
mov
adc
lock
jmp
cmp
push
sub
adc
js
js
pusha
xlat
(bad)
cwde
adc
in
jge
ins
and
add
fiadd
not
pop
jp
mov
pusha
je
stc
mov
sub
shr
shl
sbb
int3
mov
sub
jmp
xor
mov
js
and
inc
fadd
gs
ss
and
loopne
add
push
in
jl
xor
movs
jne
pop
push
jb
mov
push
mov
pusha
xchg
ins
sbb
call
es
sbb
daa
aam
and
xchg
jbe
mov
inc
ins
mov
dec
fmul
ss
lock
shl
adc
arpl
test
adc
test
inc
movs
scas
repnz
add
jg
push
add
test
or
mov
cmp
lds
or
cwde
and
push
cmp
sbb
xchg
and
sub
and
or
jecxz
xor
add
daa
inc
sub
cmp
fild
or
aad
or
clc
or
add
push
and
fwait
xchg
add
rcl
mov
jno
jo
add
cmc
dec
(bad)
outs
shr
jle
cmps
shl
adc
or
inc
sub
loop
add
add
add
xor
fidiv
xchg
adc
daa
xor
xor
push
clc
jbe
inc
xor
(bad)
movs
inc
xchg
sbb
mov
and
mov
inc
add
pop
xchg
jno
or
xchg
and
push
test
out
adc
push
iret
jnp
sbb
dec
lock
shr
(bad)
icebp
pop
sbb
outs
fs
add
pop
cs
dec
add
mov
push
or
enter
add
je
dec
je
add
jmp
inc
cmps
pushf
lock
jo
sbb
pcmpeqw
sub
jnp
sub
ficom
(bad)
xor
push
sbb
or
in
movs
dec
push
outs
inc
dec
adc
rol
enter
or
inc
mov
pop
pop
cmp
in
call
lock
push
lods
mov
(bad)
dec
mov
stos
xchg
jno
inc
push
dec
mov
pop
cmps
adc
add
push
and
cmp
mov
xor
cmp
adc
xor
jno
push
(bad)
jo
sbb
or
bound
xchg
iret
push
mov
pop
add
loopne
repz
add
fs
mov
xor
jmp
into
push
es
(bad)
jmp
inc
add
push
jbe
jne
dec
mov
inc
sbb
movs
dec
call
data16
push
retf
mov
repnz
out
add
push
scas
jmp
inc
inc
pop
cli
(bad)
int3
mov
mov
lea
or
test
cmp
mov
lea
push
push
add
js
sbb
aam
pop
mov
fwait
out
push
mov
(bad)
lock
adc
push
push
push
cld
(bad)
or
dec
and
mov
test
add
cld
dec
xchg
inc
loope
lock
xlat
call
jmp
rol
dec
cmc
pop
push
and
xlat
pop
xor
xor
repnz
and
fucomip
aad
push
cmp
jne
jmp
stos
inc
push
call
add
cmp
jb
or
inc
mov
daa
icebp
jl
add
or
pop
or
int
adc
rcl
cld
fcom
enter
in
in
xor
adc
adc
leave
inc
shl
add
(bad)
adc
je
fmulp
pop
xor
jmp
cmps
outs
fiadd
xchg
pop
jg
or
push
retf
cmps
mov
mov
mov
add
ret
lahf
and
jmp
jmp
jns
sbb
or
into
push
loopne
pop
inc
leave
jne
xor
mov
sbb
fld
sbb
es
add
cmp
cmp
in
mov
adc
in
xor
push
adc
aam
sub
mov
xor
jbe
pop
nop
pop
rol
ins
aam
test
push
rol
add
push
push
movs
xor
mov
dec
jl
cdq
push
imul
add
sbb
adc
jge
es
pop
sbb
fisttp
mov
inc
sub
push
stos
ror
lea
ins
add
inc
adc
push
adc
cmp
popf
xor
jo
std
retf
and
push
repnz
push
pop
cwde
push
or
and
lea
ja
and
ret
xchg
sbb
lock
ret
cmp
pusha
jmp
jo
loopne
fsubr
dec
(bad)
fcom
jl
add
mov
std
hlt
pop
sbb
add
enter
addr16
xchg
push
xlat
int3
push
popf
sub
(bad)
xor
xlat
add
add
rcr
mov
cmps
dec
add
ror
inc
fld
mov
push
pop
das
xchg
pop
cmp
in
rol
xchg
das
mov
sbb
sbb
or
pop
movs
mov
inc
dec
xchg
movs
adc
pop
mov
pushf
cmps
sub
jnp
hlt
dec
mov
add
push
imul
dec
and
dec
mov
bound
mov
or
arpl
adc
ds
enter
in
adc
bnd
push
pushf
inc
mov
adc
sub
aaa
test
ss
sub
ficom
sub
xor
add
inc
lods
cs
rcl
lods
dec
mov
push
xor
or
push
ins
rcl
sbb
ins
shl
xlat
adc
movs
mov
in
inc
mov
dec
jbe
pop
sub
mov
inc
sbb
add
sahf
jno
test
les
jae
sub
mov
pop
push
sub
xor
push
rsm
cmp
test
fimul
mov
inc
into
call
dec
xchg
jb
sbb
into
nop
add
mov
mov
inc
mov
mov
sub
mov
push
loope
pop
cdq
add
test
test
mov
inc
or
call
pop
das
repnz
sub
call
mov
push
add
rol
add
call
test
xor
jmp
pop
xchg
pop
je
jmp
xor
jmp
in
test
cmc
and
loope
gs
sbb
inc
shl
jbe
and
loop
push
add
cmps
rol
xor
bound
push
pop
jb
or
jmp
(bad)
loope
push
push
mov
outs
(bad)
fist
and
inc
aam
jmp
adc
add
aam
sub
push
sbb
ror
mov
movs
sbb
daa
jp
push
ret
push
xchg
call
fidivr
adc
add
xor
mov
mov
stos
adc
out
pop
add
(bad)
adc
or
ss
sub
jle
sub
mov
sub
pop
sub
in
add
xchg
add
add
(bad)
push
in
adc
lock
dec
mov
push
loopne
push
or
test
pop
fsubrp
jg
sbb
call
adc
adc
popa
xor
add
jne
mov
push
leave
add
jo
int
inc
clc
adc
push
lock
or
sub
in
push
sub
in
add
rol
push
stc
jne
sbb
adc
fdivr
mov
inc
aam
mov
xchg
xchg
or
adc
je
jnp
mov
jp
(bad)
add
push
xor
adc
test
or
add
push
aam
jo
pop
pusha
outs
hlt
aas
mov
lds
push
jge
inc
js
aad
xor
inc
sub
das
push
mov
jle
dec
pop
rcl
jmp
sbb
mov
xor
dec
fidiv
push
data16
xor
call
ins
mov
movs
hlt
jge
pusha
cmp
movs
sub
jne
push
add
cmp
hlt
pop
in
sbb
pop
sbb
sub
add
xor
pop
jmp
mov
rcl
jmp
inc
rcl
sti
sbb
inc
or
pop
loop
mov
or
adc
mov
je
fld
dec
xor
rol
cmp
div
inc
jmp
cmp
and
mov
nop
sub
mov
fnstenv
add
nop
and
retf
jno
rcr
adc
ins
clc
xor
or
sbb
push
test
popa
push
add
or
sub
jne
pop
(bad)
inc
mov
sub
jmp
int
adc
pop
sub
test
lods
jmp
shr
imul
jmp
inc
clc
jle
mov
pop
sub
adc
test
(bad)
cmp
and
push
add
push
aaa
loope
mov
inc
adc
ret
push
in
mov
sahf
rcl
pop
mov
mov
add
leave
cmp
or
cmp
shr
movs
sbb
dec
mov
test
adc
ret
call
ss
daa
pusha
jo
sbb
daa
jo
inc
retf
sbb
aaa
inc
pusha
and
shr
addr16
inc
fist
xchg
sahf
sub
push
dec
jb
add
push
push
pusha
xor
pop
sbb
push
push
sbb
lea
ja
lea
jg
cmp
ja
sub
adc
sar
shl
shl
add
ret
dec
or
es
cmps
jns
call
loope
sbb
dec
ins
inc
int3
xchg
push
stos
adc
sbb
sub
or
xchg
sbb
(bad)
adc
add
push
add
add
leave
neg
mov
rol
scas
ja
xor
mov
mov
stos
adc
cmp
jne
dec
out
fsub
or
test
pop
ds
popf
cwde
sbb
add
jmp
add
mov
(bad)
jg
mov
push
adc
retf
sub
sub
std
add
mov
jbe
jl
sub
adc
xchg
xor
pushf
clc
pushf
pusha
adc
adc
int
stc
fsub
shl
imul
inc
lahf
mov
pop
mov
and
push
(bad)
sub
sub
clc
ficom
cwde
fadd
dec
in
cli
sub
and
sub
or
rol
fisttp
shr
sub
sbb
(bad)
jecxz
adc
inc
mov
mov
mov
retf
test
push
mov
mov
and
cmp
adc
or
test
es
or
sub
add
(bad)
rcr
push
xor
sub
das
xchg
push
push
and
pop
ret
pop
mov
mov
cmp
jae
fdivr
fiadd
cmp
mov
adc
adc
add
and
mov
sub
shl
jae
lods
mov
mov
dec
jne
mov
sub
jmp
sub
jbe
shl
loopne
in
push
dec
mov
repz
xchg
mov
jge
xor
pop
inc
xor
adc
ins
lds
test
mov
xchg
or
(bad)
push
ffree
or
sub
ss
push
lds
mov
push
int
sbb
add
xchg
adc
xchg
mov
jb
push
test
sub
and
fwait
cli
adc
adc
mov
dec
pop
sub
and
jmp
jmp
jge
sub
jge
jge
xlat
jmp
(bad)
or
and
mov
jae
popa
pusha
cmp
(bad)
aad
adc
cmp
jb
add
add
push
mov
mov
push
sub
adc
(bad)
out
in
jnp
test
jns
mov
lea
mov
mov
add
jmp
and
bound
xor
and
ds
add
jae
in
sub
add
popf
(bad)
sub
mov
and
test
cmp
mov
push
and
das
mov
xor
xor
lea
data16
je
ds
push
rol
pcmpeqd
ret
sbb
add
jae
sub
sti
dec
add
sub
inc
and
mov
aaa
xchg
mov
ins
ret
hlt
dec
mov
cmp
or
push
inc
aam
inc
pop
add
test
jge
mov
cmp
xor
mov
aad
(bad)
inc
(bad)
cmp
mov
add
sub
cmp
sbb
sbb
lds
jne
es
loope
fimul
sahf
push
test
xor
hlt
jb
movs
xor
jae
lock
cmp
loopne
mov
leave
mov
retf
jge
enter
adc
adc
les
je
aaa
push
mov
adc
mov
cmp
(bad)
xchg
xchg
out
mov
add
cmp
scas
(bad)
cmp
sub
js
call
fabs
inc
dec
test
sbb
ins
sbb
inc
loopne
test
jl
stc
sub
jb
je
jmp
push
dec
and
(bad)
div
nop
mov
xor
sbb
into
enter
loope
add
or
mov
dec
or
adc
(bad)
jl
scas
or
mov
call
inc
fsub
add
sub
es
add
push
dec
pushw
add
cmp
daa
lock
sbb
jne
mov
daa
cld
es
jbe
std
das
movs
sbb
adc
or
pop
mov
sub
mov
(bad)
sbb
sub
les
(bad)
retf
pop
hlt
jne
and
enter
mov
(bad)
cli
pop
int3
dec
or
xor
dec
pusha
or
pop
mov
in
mov
mov
cli
out
jne
movs
clc
cli
adc
sub
mov
in
out
add
cmp
mov
pop
xor
adc
jae
add
jmp
pop
in
or
outs
retf
dec
and
add
iret
inc
add
dec
dec
retf
mov
sbb
xchg
(bad)
fstp
add
and
pop
or
cmp
minps
mov
lock
pop
inc
in
sub
sub
jo
pop
xchg
shl
cmps
mov
sbb
xchg
jmp
xchg
pop
pop
movs
sub
push
fistp
test
inc
lock
add
popa
push
enter
sar
cld
cmp
pop
adc
shr
jl
mov
jmp
fmul
sti
cdq
push
pop
mov
adc
push
mov
pop
mov
sbb
sub
xchg
ret
add
sti
(bad)
jne
retf
pop
rcr
mov
or
dec
sub
ss
and
les
mov
add
inc
shl
icebp
and
adc
xchg
mov
jnp
push
adc
mov
mov
jl
pop
jge
cmp
or
imul
pop
mov
adc
and
push
mov
and
cmp
mov
pop
outs
cdq
stos
mov
nop
xchg
rcl
or
inc
push
jae
jl
das
cmc
das
cmp
jl
sub
xlat
or
sub
sbb
adc
outs
sbb
cdq
lods
aam
jae
imul
jmp
cmps
inc
pop
pop
hlt
dec
push
je
(bad)
loopne
xchg
xchg
nop
pop
pop
bound
xor
jg
adc
ror
mov
push
(bad)
pop
cmp
jmp
pusha
bound
cmp
or
sbb
jb
das
jne
mov
cmp
cmp
pushf
clc
rcr
ja
push
or
jo
jne
adc
mov
imul
addr16
mov
aaa
xor
mov
mov
sbb
mov
jmp
in
adc
add
add
push
push
arpl
dec
inc
adc
mov
cld
inc
sub
jl
add
mov
int
loop
add
jle
jg
push
fdiv
test
cld
dec
push
mov
pop
inc
mov
mov
repnz
inc
mov
mov
xor
or
in
add
cmp
jge
mov
call
dec
shr
es
jg
dec
mov
test
pushw
popa
ret
aad
call
sub
fadd
and
xor
pusha
jne
xchg
inc
clc
xchg
mov
add
imul
cmc
inc
xchg
inc
mov
sub
mov
test
dec
mov
add
jns
add
cmp
mov
add
(bad)
sbb
add
mov
loope
pop
sti
call
jl
fadd
or
std
jmp
dec
xor
mov
idiv
cmp
imul
sub
adc
inc
sub
pop
sub
jg
mov
clc
test
inc
das
div
or
add
adc
imul
lea
dec
adc
mov
fisttp
xchg
or
sbb
lock
adc
xchg
test
add
mov
add
ret
ds
fdivr
shl
ffree
push
rol
cli
lea
loope
aaa
sbb
adc
pop
xor
icebp
add
into
jb
inc
cmp
fimul
xchg
pop
mov
pop
fidivr
jg
mov
xor
push
stos
jne
fs
scas
sbb
or
ins
inc
mov
retf
inc
add
jle
inc
jno
cmp
jbe
mov
or
sbb
clc
xchg
jnp
dec
out
pop
(bad)
or
dec
out
add
mov
dec
arpl
cmp
cld
inc
adc
pop
mov
mov
push
or
loop
pop
mov
ins
push
jmp
in
fs
inc
xchg
outs
jl
jmp
call
outs
sbb
sbb
or
xchg
sub
(bad)
sbb
rol
ja
loope
(bad)
pop
mov
ja
loopne
cmp
and
mov
mov
sar
push
(bad)
push
rol
mov
add
inc
mov
stos
inc
mov
dec
dec
es
cmp
idiv
add
xchg
dec
pop
les
push
sub
int3
sub
or
xchg
pop
xor
jle
and
sbb
jne
add
or
pop
mov
adc
mov
mov
jmp
xor
xchg
fbstp
aas
dec
mov
cmpxchg
mov
pusha
adc
cmc
adc
lds
dec
cmp
cmp
cs
shr
push
push
mov
cld
pop
sub
loope
mov
inc
mov
scas
call
jo
xchg
adc
cwde
test
jne
adc
in
jne
dec
add
mov
push
add
and
not
push
sbb
push
rol
je
mov
mov
inc
and
stos
lock
mov
pop
sub
jge
and
add
add
pop
pop
sbb
clc
jbe
sub
dec
ins
sub
cmp
jg
add
sub
sbb
or
push
(bad)
les
push
push
(bad)
out
sub
fsub
cmp
xor
aam
jne
mov
push
pop
loopne
xor
mov
adc
movs
or
enter
xchg
jb
imul
dec
popf
bound
ret
jo
ret
push
dec
fbstp
jl
or
mov
dec
mov
retf
jle
bound
jne
or
or
hlt
adc
sar
nop
jle
mov
mov
cmp
jg
inc
jae
xor
mov
sub
scas
pop
loope
or
inc
adc
js
cmp
cmp
mov
mov
xor
xor
mov
sar
pop
xor
(bad)
cs
jae
mov
dec
shl
ins
mov
jle
jmp
fdivr
xchg
inc
dec
jne
jae
sbb
test
pop
aam
pop
mov
or
in
call
call
push
cmp
loopne
loopne
ja
and
sbb
dec
fmul
leave
push
fsub
and
in
arpl
inc
xor
call
or
jle
add
gs
dec
xor
cwde
mov
pusha
jmp
dec
jecxz
cwde
loopne
fimul
fadd
jp
cmp
clc
lock
push
ret
nop
aad
cs
mov
add
rcl
or
in
mov
leave
pop
sbb
int3
(bad)
int3
clc
lock
sbb
scas
mov
pop
enter
in
nop
xchg
mov
les
or
push
sbb
into
pop
mov
ins
mov
dec
cmp
or
mov
aam
aad
inc
pop
pop
mov
and
outs
mov
add
xor
out
mov
stc
(bad)
dec
pop
mov
pop
mov
xchg
mov
lock
aam
sub
lea
mov
cmps
add
sub
sub
or
movq
mov
fild
lock
clc
add
mov
hlt
jge
lea
adc
xchg
jbe
or
in
mov
cmp
jb
cmps
add
push
clc
jmp
repnz
in
mov
lea
mov
shl
xor
imul
cli
in
xchg
cmp
shl
out
push
iret
xor
xor
in
(bad)
inc
sbb
inc
dec
ins
push
xchg
and
aas
adc
mov
aas
add
(bad)
or
jb
cld
lock
dec
(bad)
xor
lock
jne
jge
pusha
pop
or
ins
jge
mov
test
jb
mov
or
push
mov
loope
pop
mov
mov
jmp
movzx
ror
mov
movs
loope
inc
inc
jno
inc
pushf
jmp
test
adc
adc
sub
push
cmp
aad
inc
or
pop
sub
imul
inc
xlat
movs
ror
push
cmps
xor
xchg
mov
xor
add
clc
jb
shl
sbb
sub
xchg
lock
mov
out
adc
jmp
daa
or
xor
and
mov
push
sar
je
sbb
and
ret
adc
pop
rol
call
(bad)
mov
pop
mov
cmp
jne
lods
inc
ins
pop
mov
mov
or
lea
addr16
stc
lea
add
adc
pop
into
and
xchg
add
or
shr
jg
(bad)
pop
add
ret
mov
jmp
lea
lea
cmp
jb
(bad)
(bad)
push
cld
cmp
je
adc
mov
rcl
cmp
sbb
adc
test
push
retf
lea
fnstcw
pop
js
mov
int
retw
pop
xlat
or
iret
push
mov
imul
test
push
mov
test
mov
and
pop
jbe
lahf
retf
inc
push
or
sub
add
xchg
adc
pop
js
jecxz
icebp
repnz
pop
adc
pushf
jne
dec
inc
fisub
push
inc
test
mov
call
adc
or
cwde
dec
ja
dec
test
lea
jl
jne
inc
fsubr
cmp
dec
movzx
mov
mov
loope
mov
rol
jmp
mov
adc
loopne
test
dec
nop
push
mov
(bad)
nop
lds
xchg
rol
add
mov
test
retf
ss
mov
sahf
sbb
or
add
or
test
fcomi
jno
pop
mov
push
mov
std
push
loop
xor
jo
dec
sti
xor
mov
or
jo
dec
sbb
mov
and
xchg
or
cmp
xchg
push
adc
repz
add
lock
(bad)
sbb
push
loopne
mov
or
mov
mov
cmp
in
adc
rcl
sbb
pop
xor
je
shl
jo
add
div
shl
dec
xchg
shl
sti
inc
xchg
jmp
dec
xchg
and
mov
push
pop
xchg
add
push
and
adc
xor
push
mov
adc
cmp
mulps
pop
in
push
jl
adc
adc
sahf
sbb
inc
push
or
popa
add
adc
mov
push
xor
jbe
add
sub
pop
xor
jg
inc
rcpps
test
adc
mov
rol
or
or
aas
call
or
inc
shr
cmp
jle
sub
inc
outs
xchg
mov
enter
imul
inc
pusha
mov
mov
xor
loopne
lea
out
push
jb
and
shr
or
add
mov
add
jg
shr
add
or
adc
mov
dec
int3
mov
arpl
push
sbb
sub
sar
push
mov
sbb
icebp
mov
dec
mov
mov
pop
xchg
shr
nop
cmps
pop
dec
test
xor
inc
imul
adc
daa
push
add
mov
push
jne
scas
cmp
adc
adc
pop
je
mov
dec
adc
push
mov
mov
push
loope
enter
or
push
inc
or
loopne
xlat
sar
pop
mov
pop
not
pop
push
call
add
not
push
leave
mov
mov
jmp
xor
mov
(bad)
push
call
mov
adc
inc
rcl
or
sub
adc
jne
js
push
add
hlt
icebp
and
(bad)
in
fld
cmp
shl
or
and
mov
cs
hlt
jbe
lock
ret
xchg
jae
jmp
mov
add
inc
jo
add
leave
jne
cmps
cmp
xlat
mov
add
mov
cmps
movs
scas
dec
add
fldenv
fist
and
and
add
adc
add
and
and
or
push
jae
test
jo
rol
or
adc
adc
retf
stos
dec
pushf
pop
sub
adc
or
repnz
scas
fdiv
fadd
xor
mov
ss
shl
xor
xor
mov
scas
xor
push
pop
mov
and
pusha
inc
pop
jl
xchg
push
ror
mov
inc
loope
fild
push
mov
call
loopne
or
inc
or
inc
fwait
dec
mov
lds
push
push
fst
pop
in
inc
mov
clc
sub
dec
mov
(bad)
ror
(bad)
adc
and
adc
or
call
sti
shl
call
loop
shr
add
(bad)
fldcw
mov
outs
out
ret
ins
mov
aaa
out
push
or
cmp
mov
hlt
adc
mov
adc
test
jbe
push
dec
push
aaa
mov
dec
retf
stos
sbb
fadd
enter
aas
and
(bad)
pop
xchg
cmp
je
push
retf
xlat
clc
or
cmp
dec
sub
adc
xor
aad
pop
inc
add
fisttp
pusha
push
mov
jo
sub
sbb
sbb
in
inc
shr
xor
(bad)
mov
loopne
inc
inc
dec
jne
(bad)
aas
mov
pop
adc
rcr
mov
(bad)
mov
xor
inc
and
dec
jl
(bad)
xchg
add
loopne
sti
and
scas
xor
lods
add
inc
outs
mov
pop
div
iret
or
mov
mov
fdiv
cmp
fwait
sbb
cld
cwde
test
jbe
xor
mov
push
lds
pop
xor
es
add
(bad)
iret
inc
mov
mov
mov
rcr
or
add
inc
xchg
shl
dec
xchg
pop
cdq
mov
mov
mov
out
sbb
add
iret
xor
add
popf
mov
sbb
div
call
xor
and
pusha
jl
mov
pusha
jo
std
fld
(bad)
and
pop
mov
mov
sbb
add
xor
xchg
mov
sub
jecxz
popa
test
out
mov
sub
xor
in
add
shr
mov
adc
leave
add
sub
loope
add
mov
push
ret
or
call
je
test
je
xor
shr
jecxz
jne
mov
out
and
(bad)
jp
fsubr
add
mov
dec
ffreep
mov
inc
add
ret
add
and
adc
test
add
jne
mov
ja
jmp
jg
or
mov
in
mov
test
mov
out
cmps
std
adc
rol
shl
push
lea
addr16
add
jge
push
push
sub
lods
and
aas
aaa
and
cli
add
cmp
retf
out
or
fiadd
outs
jns
dec
shrd
pusha
mov
sar
xchg
clc
cs
mov
pop
je
mov
scas
adc
dec
push
xor
xor
push
and
dec
mov
aaa
mov
sar
outs
jmp
je
jmp
jge
fdiv
jmp
inc
jmp
rol
dec
rol
inc
jmp
cmp
or
jmp
jmp
fadd
ins
lods
ror
or
dec
(bad)
cmp
fmul
and
xchg
pop
div
das
push
jmp
xor
or
cmp
add
or
sub
and
pusha
fistp
shl
mov
push
sub
popa
mov
xor
scas
shr
add
push
aas
addr16
and
dec
add
add
and
(bad)
lock
ret
ret
cmc
in
mov
adc
rcl
mov
or
jge
(bad)
ins
rol
loop
pushw
fdivr
in
aam
loopne
fisub
inc
loop
push
pushf
push
adc
and
push
adc
lods
pop
aad
call
inc
out
outs
mov
push
push
hlt
adc
(bad)
pop
bswap
daa
ss
pushf
sub
push
fdivr
push
aam
(bad)
mov
movs
pop
lock
pop
call
nop
inc
fist
adc
mov
(bad)
leave
mov
push
test
xlat
mov
jbe
add
repz
xlat
out
inc
add
push
adc
movs
jnp
cmp
cmp
imul
ja
inc
ins
notrack
test
inc
or
ins
gs
jb
outs
fwait
in
sar
std
in
mov
adc
gs
(bad)
jns
je
ins
cs
imul
bound
add
out
neg
inc
inc
mov
adc
xor
inc
push
inc
adc
mov
aaa
shl
jo
sub
xor
or
add
add
dec
ffreep
mov
hlt
call
or
push
inc
pop
sub
in
add
xor
inc
jb
popa
je
outs
jmp
pop
push
add
lods
das
add
gs
pushaw
add
int
or
dec
gs
popa
addr16
retf
or
(bad)
push
fsubr
pushf
adc
or
jo
or
loopne
outs
xchg
js
jo
pop
loope
sbb
cmp
xor
ja
out
push
dec
add
inc
jne
inc
jae
cmp
jg
jge
cmp
sti
cmps
loope
push
push
pop
gs
xchg
fstp
push
mov
mov
push
push
out
or
and
cs
push
xchg
cvtdq2ps
xor
pop
inc
push
outs
jne
arpl
inc
or
or
push
and
(bad)
jo
xor
sbb
or
je
pop
sub
(bad)
bound
push
or
sub
cwde
adc
or
fiadd
push
adc
add
or
push
or
push
sbb
rol
add
adc
jo
adc
shl
stos
inc
pop
and
outs
pop
inc
inc
imul
ret
mov
(bad)
and
mov
or
add
cli
mov
ss
xor
rcl
cli
jns
adc
sar
sbb
and
pop
test
jle
mov
(bad)
test
push
and
jmp
ret
adc
sbb
mov
les
(bad)
imul
or
add
test
je
and
stos
adc
ins
adc
mov
shl
pop
loopne
pop
mov
push
xor
mov
mov
add
push
push
mov
(bad)
int
cmp
inc
lods
pop
and
and
std
not
loopne
adc
mov
mov
mov
and
dec
in
jbe
or
fnsave
shl
sbb
pop
pop
pop
mov
adc
shl
test
push
mov
jp
jmp
ret
cmp
xor
jle
int3
pop
popf
loopne
xchg
push
add
icebp
and
push
xabort
cmps
add
sbb
sbb
inc
orps
sbb
fucomi
inc
pusha
and
push
or
inc
mov
sbb
aaa
sbb
test
xor
adc
cmc
add
xchg
push
xor
leave
mov
mov
cmp
dec
nop
test
ret
mov
xor
sbb
test
rcr
mov
push
lock
sub
out
jnp
dec
mov
daa
mov
shr
push
out
add
jne
into
mov
push
imul
mov
popf
jl
popf
fdivr
inc
pop
or
inc
in
mov
sub
mov
and
int
imul
sbb
mov
add
out
enter
pushf
and
lock
jo
fisttp
sub
push
cmp
mov
ja
add
and
mov
xchg
sub
or
push
repnz
loop
clc
test
add
call
int
mov
clc
push
in
outs
lds
dec
lock
and
mov
adc
add
inc
lods
sub
jl
shr
and
ffree
les
or
mov
cmps
fiadd
inc
mov
scas
jg
pop
dec
dec
sbb
pop
mov
add
push
add
cmp
xor
and
cmp
sbb
push
or
imul
test
sbb
and
test
pop
and
sbb
add
push
sbb
and
xlat
jp
fs
xlat
pop
xchg
sbb
loope
xlat
call
mov
and
loopne
rcr
mov
and
shr
and
mov
inc
add
sbb
hlt
scas
push
add
lock
pop
(bad)
cmp
xor
add
mov
mov
mov
int3
push
stos
xor
outs
and
mov
pop
mov
adc
mov
xchg
push
jo
pushf
push
popa
push
pushf
enter
gs
sub
add
add
xor
add
not
popa
add
sub
dec
add
int3
push
add
sbb
arpl
cmps
jae
xchg
pop
dec
aaa
imul
jbe
jp
inc
stos
lock
imul
sub
or
xchg
setnp
push
dec
or
xor
out
or
inc
daa
inc
dec
sbb
push
pop
sbb
shl
sbb
pop
arpl
rcr
jne
push
push
add
ins
mov
call
sar
fcmovnu
push
dec
mov
push
adc
mov
retf
retf
sbb
pop
mov
sbb
sti
add
jne
and
dec
hlt
mov
(bad)
push
pop
xchg
dec
sub
jmp
jmp
push
cmp
add
(bad)
jp
adc
dec
ja
jmp
push
mov
loopne
sbb
fcom
outs
xchg
xor
or
in
push
inc
sbb
jo
xor
inc
mov
jl
test
(bad)
ficomp
xchg
inc
iret
fimul
adc
test
loopne
xor
sbb
cmp
shl
adc
cwde
pushf
mov
enter
xor
fs
inc
rol
fdiv
(bad)
mov
outs
imul
aad
adc
bound
cli
push
xor
mov
mov
add
mov
jbe
mov
div
adc
inc
add
lea
xchg
enter
std
scas
jne
sub
shl
xor
das
xor
cmp
or
mov
jne
mov
push
fisttp
jmp
add
cmp
outs
cmp
mov
sub
add
sbb
push
je
and
cmps
add
sahf
(bad)
cmps
adc
push
push
push
and
retf
pop
sbb
test
or
bound
lock
cmp
pop
cmp
sub
push
iret
push
fistp
icebp
jg
dec
or
or
into
pop
sbb
inc
cmc
lock
and
sbb
movs
sbb
ror
aaa
test
adc
or
add
cmp
ret
cmp
jp
enter
push
mov
adc
sub
in
push
(bad)
mul
or
push
mov
mov
or
jle
or
loopne
call
cld
sar
cmp
add
pop
in
mov
dec
(bad)
call
ins
inc
xor
dec
sub
ror
shl
mov
hlt
(bad)
mov
add
jae
call
cmp
push
loopne
push
call
dec
iret
push
pop
or
loopne
fs
dec
dec
jne
jmp
add
jns
jo
shl
push
aam
jne
jg
pop
pop
push
icebp
push
fcomp
pusha
mov
movs
mov
retf
loopne
cmps
stos
mov
popf
rol
mov
test
cmp
movs
inc
test
sbb
add
push
or
fs
popa
icebp
out
sub
ror
mov
dec
or
retf
(bad)
ins
(bad)
or
inc
jne
cmps
xchg
ins
pop
inc
inc
jbe
bound
pop
test
mov
dec
mov
fsubr
push
sbb
fstp
inc
jne
sbb
and
mov
test
inc
sub
loope
add
repz
sub
cmps
xabort
mov
and
cmp
aas
out
jp
pushf
js
aaa
add
or
call
and
mov
inc
mov
pop
pop
jmp
inc
clc
jmp
adc
pop
add
xor
and
jmp
add
xor
add
push
and
sub
add
out
fisttp
test
les
or
jmp
(bad)
mov
pop
or
in
xor
sbb
mov
pusha
enter
ds
jle
mov
add
mov
sbb
and
jp
mov
adc
test
add
ja
test
and
fwait
pop
mov
(bad)
mov
bound
or
xchg
repz
push
push
and
sub
pop
mov
shr
push
or
pop
add
movs
jle
fadd
test
inc
add
lahf
pop
push
adc
jecxz
pusha
mov
bound
je
push
sub
add
shr
loopne
bound
sar
lock
pop
dec
sbb
in
sub
repz
loope
ret
push
sbb
sub
cmp
repz
inc
xchg
mov
or
nop
push
pop
push
jae
mov
mov
xor
(bad)
in
lods
sbb
jbe
adc
jno
std
pop
xlat
cld
or
adc
jmp
movsx
sbb
adc
lahf
std
fsubr
jbe
ss
sub
jne
add
lock
adc
adc
fst
unpckhps
cmp
test
call
jb
adc
push
retf
mov
jbe
and
shl
in
mov
cmp
jne
test
dec
in
jg
add
jmp
mov
push
inc
cmp
inc
mov
pop
push
fistp
inc
and
push
add
or
mov
and
mov
mov
mov
mov
jg
fidiv
add
push
dec
xor
je
jbe
pop
sbb
inc
jae
jne
gs
ins
popa
addr16
fwait
cdq
std
mov
inc
imul
popa
add
adc
fs
arpl
jb
ins
jae
sar
sbb
stos
mov
not
dec
out
div
jg
cmp
push
imul
or
popa
outs
or
adc
outs
je
push
adc
inc
sbb
jo
fstp
or
inc
push
sbb
push
inc
and
push
stos
push
push
cmp
pop
xchg
sbb
inc
loopne
dec
xchg
nop
dec
sbb
pop
or
inc
outs
push
push
clc
ins
cmps
add
(bad)
jb
jp
popa
ins
sbb
push
pop
arpl
mov
jnp
sbb
out
xor
sbb
or
sbb
pop
mov
jne
push
sbb
sbb
sbb
int
lahf
cmp
adc
push
mov
jmp
ret
inc
out
test
repnz
jl
mov
outs
ja
push
(bad)
cwde
push
or
les
fneni(8087
jnp
and
pop
add
push
and
cmps
ins
out
add
add
dec
mov
fmul
cmp
lock
(bad)
in
rol
xor
fwait
mov
or
dec
popa
js
fs
push
pop
adc
or
lock
add
inc
aam
and
xor
push
gs
stos
push
push
pusha
jmp
sub
jae
or
imul
imul
rcr
gs
je
or
or
fucomip
shl
mov
ds
push
inc
ins
adc
sbb
push
mov
push
scas
dec
adc
gs
or
inc
cmp
mov
sub
je
or
pusha
push
mov
sbb
adc
inc
pop
adc
mov
jp
and
add
mov
mov
push
inc
pop
add
ds
push
notrack
sti
or
(bad)
(bad)
xchg
cs
add
(bad)
clc
push
test
cs
repz
or
fcom
push
push
mov
push
sub
jo
repz
xor
or
clc
mov
inc
into
ja
jns
push
xchg
push
or
addr16
ins
push
mov
xchg
loopne
(bad)
dec
inc
inc
jb
gs
cmps
mov
sub
clc
lds
dec
xor
fbstp
push
or
inc
mov
lods
sub
mov
push
aaa
pop
mov
leave
push
sub
jl
mov
fs
stc
or
inc
jo
inc
dec
mov
inc
adc
lds
xor
iret
and
inc
sbb
imul
pop
add
mov
imul
pinsrw
xchg
jb
mov
cli
dec
mov
dec
or
sub
and
and
mov
sti
adc
and
sbb
rcl
dec
popa
cmp
sub
sub
add
jnp
xchg
dec
ins
fsubr
cmp
add
sbb
push
push
dec
int
mov
or
dec
jo
dec
test
push
inc
unpckhps
std
jno
out
inc
ret
or
jb
push
adc
dec
sbb
push
inc
mov
inc
mov
inc
adc
daa
imul
shl
xchg
pop
push
jb
jmp
fs
(bad)
in
add
xchg
inc
adc
inc
dec
xchg
inc
stos
stos
pop
adc
mov
pop
pop
outs
sbb
jmp
dec
pop
push
mov
(bad)
out
inc
dec
pop
ja
or
fdiv
lea
popf
shl
imul
fld
hlt
xor
lds
pop
push
mov
or
loope
mov
std
inc
fistp
lock
adc
jo
psllq
cmp
es
pop
rol
das
pop
add
inc
loopne
(bad)
ret
js
movs
pop
push
adc
in
fsub
not
shl
mov
in
out
sbb
imul
push
push
inc
popa
fcmovb
adc
ficom
loopne
xlat
mov
int3
sbb
xchg
lea
lds
nop
mov
outs
adc
xchg
push
pop
adc
scas
lds
mov
outs
(bad)
fnclex
jo
loope
pop
das
arpl
outs
adc
adc
rsqrtps
xlat
loop
sbb
aas
fadd
fidiv
aas
pushf
push
adc
ror
push
gs
mov
movups
add
scas
adc
cmps
pop
pop
or
jge
shl
movs
add
mov
pop
out
pop
in
and
ss
sbb
aam
jo
into
in
jl
mov
xchg
in
jg
or
mov
into
sub
push
inc
adc
inc
js
rcr
ret
rcl
xor
or
and
add
scas
mov
push
movs
xor
add
jl
pop
loop
cmps
push
xor
test
test
out
es
out
jns
call
mov
enter
push
call
shr
mov
inc
ret
out
dec
add
inc
inc
push
jae
adc
sub
inc
inc
outs
jbe
xlat
adc
and
xlat
jmp
sub
ficom
mov
dec
daa
mov
inc
ins
xchg
adc
mov
pop
xchg
loopne
mov
push
and
sub
fadd
adc
pmaddwd
sbb
clc
jo
cmc
daa
jae
in
jns
xor
fnsave
lds
sbb
inc
mov
inc
mov
push
dec
push
mov
mov
clc
cmps
test
test
and
repz
loop
cwde
ins
(bad)
fcom
dec
add
add
adc
jae
aas
or
mov
push
or
xor
adc
fcom
pop
dec
add
mov
stc
add
push
mov
lahf
cmovg
outs
dec
outs
jbe
arpl
mov
sbb
xor
dec
cwde
ins
repnz
pop
imul
and
(bad)
pop
aas
dec
xchg
push
lods
into
ins
sub
ss
or
push
popf
push
test
hlt
popw
add
loopne
(bad)
push
push
not
push
inc
xchg
retf
push
rol
repz
jl
fiadd
shl
xchg
add
hlt
cwde
call
inc
adc
mov
mov
lods
jle
ja
es
das
sbb
push
inc
ret
pushf
aaa
xor
out
inc
cmp
cmp
adc
inc
ss
out
adc
mov
and
les
jge
jns
or
in
cmp
sbb
push
sub
stc
cmp
cs
fs
jns
int
test
pop
and
and
out
out
and
cs
xchg
rcr
jnp
repz
nop
int3
or
push
push
int
cmp
ficom
es
ins
daa
mov
push
je
add
pop
pop
adc
xor
mov
mov
ret
add
xor
mov
sbb
rol
icebp
or
add
das
xchg
sub
push
inc
bound
adc
sub
adc
jbe
push
inc
push
jno
add
test
stos
sub
inc
movs
gs
or
adc
andnps
xor
mov
push
sub
mov
pop
mov
jecxz
inc
adc
add
loop
xor
ficom
fcom
pop
mov
es
js
pop
ja
add
push
mov
das
loopne
cmp
push
aam
loop
imul
repz
xor
mov
push
(bad)
jl
lock
sbb
ins
dec
neg
test
dec
push
test
js
fidivr
mov
test
mov
push
sbb
push
ins
push
lods
fdivr
jnp
push
int3
push
call
push
fcomp
mov
jl
movs
push
int3
pop
add
inc
jmp
cmp
push
adc
js
or
inc
xchg
dec
jl
xchg
mov
fisubr
xchg
adc
imul
loop
xor
add
arpl
inc
enter
lock
add
or
aad
jl
add
popa
js
push
jge
add
push
gs
adc
jne
mov
sbb
ins
dec
dec
(bad)
test
and
jne
inc
adc
arpl
xor
fbld
mov
pop
mov
fiadd
mov
pop
xor
outs
xor
cmp
or
inc
mov
mov
mov
pop
popa
sub
jo
dec
or
cmp
ss
sti
inc
add
mov
fwait
pusha
jo
adc
xchg
push
fdiv
add
sbb
nop
jmp
inc
adc
jae
ds
dec
and
js
popa
add
popa
jno
mov
neg
pop
imul
sbb
cmp
dec
fisttp
push
imul
push
pusha
ja
cmp
inc
stos
fs
test
cdq
inc
iret
dec
cmp
mov
mov
sub
push
dec
outs
jb
lods
mov
cmp
sbb
or
jne
or
bound
jb
mov
add
imul
or
or
out
cmp
push
dec
sbb
pusha
jae
mov
sbb
inc
push
enter
ds
outs
imul
jb
iret
or
outs
jns
dec
outs
sub
inc
dec
sub
or
jmp
inc
adc
lods
and
enter
xor
push
jnp
mov
pusha
jae
or
or
pusha
pop
lods
cmp
or
clc
or
mov
push
imul
or
xchg
mov
enter
enter
aas
scas
test
pushf
xor
cmp
mov
add
xlat
das
in
enter
mov
or
ret
cld
mov
jne
mov
push
add
inc
mov
inc
les
add
or
ja
ins
or
sub
sub
jp
add
sub
push
shl
push
push
add
push
sub
ins
ins
push
inc
and
push
or
lods
dec
push
imul
outs
and
popa
test
shl
sub
in
shl
lods
inc
inc
addr16
lahf
and
int3
nop
or
cmp
sbb
ins
rcr
add
add
sub
and
xor
mov
mov
or
aaa
inc
sbb
cwde
dec
lods
jl
inc
fisub
xchg
test
and
mov
test
(bad)
sbb
xchg
ffree
xchg
jmp
out
ss
ret
add
inc
xchg
das
imul
je
xor
push
mov
inc
rcr
mov
jno
sbb
cmp
test
add
es
fist
shl
push
cmp
sbb
rcr
pop
inc
cdq
xlat
call
(bad)
hlt
test
push
jle
fmul
jp
pop
sbb
pop
test
push
pop
inc
(bad)
sbb
imul
xchg
lock
adc
or
add
shl
or
add
add
ret
nop
aad
push
inc
add
loopne
adc
inc
iret
int
inc
shl
cmp
test
fsubr
push
add
adc
dec
jb
enter
mov
or
push
adc
and
gs
movhps
sbb
mov
push
push
push
sbb
test
pop
mov
outs
sub
neg
sbb
push
add
jnp
int
mov
icebp
cmp
add
sbb
push
jle
add
push
or
xchg
sbb
sbb
or
pop
sbb
and
cdq
std
jge
sub
mov
movs
push
fld
add
or
retf
dec
jbe
inc
adc
and
inc
push
dec
jb
daa
sub
test
stos
ror
popf
inc
js
adc
je
fcmovnb
sub
dec
or
ds
or
or
add
cmp
mov
push
add
pop
mov
xor
fistp
fistp
pop
fmul
sahf
mov
ins
mov
inc
out
sbb
and
retf
add
pop
sub
add
add
shl
and
inc
repz
adc
in
push
popf
cwde
adc
or
jbe
jg
inc
sub
test
js
enter
ss
adc
add
and
xor
xor
test
(bad)
jnp
and
add
dec
outs
pusha
inc
cld
sub
inc
inc
add
mov
daa
sbb
push
and
inc
add
arpl
jmp
push
push
jnp
js
add
sbb
retf
mov
mov
popa
jo
adc
nop
cmps
ins
cwde
call
xor
pushw
(bad)
and
push
fwait
repnz
pop
push
not
or
lds
pop
pop
fs
mov
lods
ret
gs
or
sbb
push
into
mov
mov
xor
fcomp
sub
xchg
pusha
fwait
push
cdq
adc
jb
xlat
cmp
outs
xchg
cmps
sub
arpl
add
add
aam
dec
mov
sub
loope
and
jae
fs
mov
in
sbb
add
mov
(bad)
in
imul
and
dec
ins
daa
dec
leave
pusha
clc
sbb
push
dec
inc
pushf
js
outs
pop
lods
xchg
adc
data16
ja
mov
or
dec
inc
push
push
ins
mov
add
sbb
in
ja
xor
dec
gs
pop
inc
or
jae
inc
add
mov
or
jns
gs
addr16
or
xchg
mov
sub
or
addr16
push
fadd
imul
pusha
scas
pop
mov
int
scas
jno
pop
cmp
add
cmp
jl
fld
xor
int3
outs
inc
fidiv
out
mov
push
(bad)
push
mov
adc
cs
jae
test
fmul
adc
inc
in
popa
jns
jge
or
cmp
and
jmp
iret
adc
sahf
sbb
jns
jns
add
inc
jns
js
ja
mov
cmps
add
push
add
jbe
mov
xchg
fisttp
fdivr
mov
daa
sbb
neg
adc
push
fadd
rol
mov
dec
stos
rcr
cmc
shl
test
nop
and
add
pop
inc
sti
test
aas
pop
dec
xor
inc
cs
or
popf
xor
inc
inc
inc
jb
ja
mov
(bad)
js
(bad)
fadd
jge
xor
sub
mov
xor
js
or
jo
and
and
cmps
push
xchg
inc
dec
pop
shr
or
xchg
inc
xlat
xor
rol
adc
xor
ror
xchg
loopne
data16
or
fsub
outs
push
xlat
inc
add
add
jo
adc
out
(bad)
pop
cmp
add
xchg
fisub
or
push
inc
daa
mov
mov
iret
fisubr
push
lahf
push
js
adc
nop
xlat
popa
jnp
xor
lods
push
popa
jnp
rcl
nop
xlat
jl
push
cmps
jge
in
xlat
fs
sbb
je
mov
push
nop
mov
mov
cs
mov
push
ins
push
inc
jbe
xlat
jge
adc
pmaxub
add
retf
pop
lds
js
loope
push
xor
mov
mov
enter
add
add
sbb
nop
xor
ja
push
stos
or
movups
and
adc
pop
(bad)
mov
sub
scas
xor
pop
or
adc
fs
xchg
push
cmc
cmps
or
add
cmp
jg
inc
jmp
push
jge
add
sub
inc
imul
sbb
inc
mov
add
out
sbb
loopne
jae
jnp
xor
or
sub
and
mov
cmp
pop
mov
setno
aam
mov
lds
ins
outs
jbe
dec
inc
and
int
lds
es
fld
dec
lea
inc
xor
jge
cmp
fucomip
cmp
push
xor
jecxz
or
pusha
out
push
outs
mov
push
mov
test
sbb
push
ret
in
push
es
dec
cmp
sbb
cmps
inc
dec
into
jae
scas
mov
xchg
nop
xchg
adc
rcl
and
xchg
popa
out
stos
lahf
push
dec
lahf
pusha
inc
nop
call
popf
pop
adc
and
push
jg
add
aam
inc
dec
dec
lods
(bad)
xor
loop
into
arpl
retf
or
dec
enter
into
add
inc
outs
cmp
xor
fistp
add
or
push
data16
cmp
aas
sbb
or
sbb
movs
mov
sub
jae
shl
mov
outs
in
aam
pop
cld
das
jo
and
cwde
push
ss
fadd
xchg
push
(bad)
stos
mov
xchg
sub
int3
push
addr16
je
jp
inc
movs
push
push
add
ins
adc
cmp
adc
inc
mov
rcl
out
pusha
xor
in
repnz
loope
cld
or
outs
je
pop
mov
jl
add
out
pop
dec
mov
add
pop
or
jo
mov
in
fs
cmp
rol
cmp
popa
inc
jne
cs
or
in
(bad)
or
fsub
lds
pop
lock
call
xchg
mov
into
mov
stos
push
mov
push
push
mov
add
test
ror
add
xchg
sub
fild
mov
inc
or
push
mov
rdpmc
xlat
xor
ja
daa
lock
xchg
out
imul
adc
sti
dec
and
jns
add
jmp
xlat
jmp
test
ds
sbb
cmp
aad
inc
jnp
cmp
popf
ins
add
push
inc
add
cwde
inc
loopne
test
pop
push
call
jmp
mov
cmp
ss
in
call
das
ja
sbb
out
push
in
daa
mov
and
popa
gs
cmp
ins
add
adc
inc
aad
or
adc
or
mov
mov
mov
mov
add
adc
add
das
mov
ins
inc
movs
std
add
or
mov
rol
in
mov
idiv
or
pop
fs
ret
out
cwde
add
hlt
ins
xchg
sti
ret
pop
or
push
add
mov
test
pop
sub
sub
out
or
inc
mov
sub
adc
sar
xchg
push
xlat
imul
push
test
mov
rcr
outs
push
loopne
or
xchg
push
lods
jg
pop
popa
add
cmp
pusha
mov
(bad)
mov
sbb
pop
and
adc
adc
mov
adc
push
adc
arpl
arpl
add
dec
les
mov
clc
cmp
or
xchg
xchg
inc
jne
call
adc
xor
and
sahf
mov
or
ins
imul
adc
jb
lods
add
sbb
inc
iret
push
ret
sub
add
inc
js
or
add
jae
fist
mov
sbb
call
push
or
ret
or
pop
mov
adc
scas
in
and
fsubr
jo
push
mov
sbb
adc
mov
fninit
sbb
sbb
mov
pop
sub
bswap
add
dec
xor
add
pop
push
adc
lods
push
and
or
test
aaa
sbb
cmp
jmp
and
dec
ds
and
or
aaa
mov
cmp
fisttp
sub
adc
fdiv
sub
test
or
push
daa
mov
add
adc
jge
add
mov
pop
inc
sub
rcl
cmc
jae
mov
inc
xchg
into
jo
mov
ds
es
int
add
mov
call
fistp
aas
(bad)
xlat
in
mov
mov
mov
dec
push
xor
sbb
inc
ins
jmp
bound
and
xor
ins
dec
lea
pop
mov
adc
add
xor
push
adc
call
mov
jmp
dec
fild
std
or
or
mov
cmps
adc
push
jl
mov
ins
jb
cmp
das
sub
scas
jge
out
pop
or
mov
or
jg
movs
or
push
(bad)
jmp
adc
sbb
lods
pusha
and
sbb
sbb
sbb
dec
icebp
adc
add
pop
inc
clc
and
inc
ja
inc
sub
pop
dec
pop
mov
and
dec
aas
and
mov
adc
mov
mov
cwde
mov
popa
inc
popa
lock
push
outs
jns
mov
mov
or
ja
cmp
push
dec
push
imul
ins
outs
ja
fist
or
inc
out
mov
out
adc
dec
int
push
movs
and
xor
fisttp
ins
or
(bad)
rcl
push
xor
loopne
es
enter
or
lock
imul
fidiv
mov
test
mov
ins
jne
(bad)
sbb
add
or
or
add
pop
inc
jp
imul
jnp
fs
adc
jbe
or
lods
mov
fwait
call
jae
out
(bad)
stc
push
xchg
stc
out
ins
mov
inc
mov
sbb
imul
add
push
or
ffree
test
ja
imul
adc
retf
cwde
cmp
fsubr
and
sub
imul
mov
ins
xchg
or
out
popa
adc
add
adc
dec
inc
jg
mov
push
and
popa
js
adc
adc
sbb
pop
cld
mov
adc
(bad)
mov
mov
inc
repz
(bad)
cmp
ret
pop
mov
push
int3
clc
push
push
pop
adc
inc
add
or
scas
mov
ror
mov
pop
mov
sbb
or
inc
mov
sub
mov
mov
arpl
push
jo
ja
lods
aaa
add
or
or
inc
adc
push
ja
adc
gs
mov
jo
iret
test
dec
inc
dec
mov
mov
mov
loopne
je
pop
adc
fist
push
ja
test
fs
dec
outs
cmp
dec
outs
adc
popa
ins
push
add
in
cs
les
shrd
jp
mov
or
push
enter
je
cmps
add
int3
dec
ins
xchg
push
dec
push
ins
mov
ja
mov
jo
xchg
and
push
cmp
pop
push
xadd
dec
lock
es
mov
stc
fidivr
jno
xor
add
and
mov
hlt
fwait
dec
mov
push
dec
test
adc
nop
dec
scas
jge
or
push
sbb
jge
movs
pop
out
push
cwde
popa
inc
pusha
push
xchg
(bad)
push
add
les
fs
clc
imul
push
ror
push
or
not
sub
or
xchg
add
add
pop
aas
pop
ret
ret
dec
in
add
mov
arpl
cmps
lahf
ins
movs
lods
inc
dec
test
mov
push
mov
xlat
cmp
pop
jnp
cmps
loop
dec
and
fisub
or
imul
ins
mov
sub
pop
stos
xor
mov
or
test
je
dec
(bad)
fst
das
imul
imul
daa
push
outs
cmps
pop
add
ret
jge
mov
sub
mov
and
pop
add
ins
data16
inc
outs
pushf
push
in
in
sub
or
xchg
outs
sub
int3
out
cmc
test
mov
dec
jae
sub
stc
push
push
jno
inc
imul
add
fidiv
inc
adc
inc
outs
arpl
scas
mov
dec
add
es
jge
mov
fiadd
stos
push
dec
push
or
fisub
push
push
lahf
add
push
jbe
nop
push
into
into
(bad)
xlat
jbe
or
cs
dec
sub
jne
mov
daa
push
jp
es
inc
jne
lock
mov
iret
sub
or
dec
adc
jne
retf
dec
dec
popa
lock
retf
xchg
jnp
push
lds
sub
push
xchg
loopne
mov
addr16
cdq
fistp
cmp
mov
mov
push
scas
lods
mov
push
fwait
pop
aaa
push
pop
cmp
sub
adc
mov
xlat
frstor
and
sbb
push
movs
xor
js
loopne
sub
xor
jne
fimul
cmp
fstp
test
push
and
mov
imul
inc
shl
popa
dec
push
leave
popa
(bad)
xor
xor
push
or
imul
xor
push
ins
pop
inc
rcl
and
inc
or
mov
sbb
pop
xor
outs
repnz
lock
push
xchg
ret
and
jmp
shr
pushf
dec
add
fdivr
fwait
loop
pop
loopne
in
push
jmp
fs
sub
sub
pop
mov
sbb
sub
ins
adc
sub
sbb
sub
adc
popa
xchg
add
jb
bound
loope
cmp
adc
pop
call
sub
and
out
mov
sub
ret
pop
pop
aaa
dec
sub
scas
dec
xor
pop
push
sbb
lods
pop
xor
pop
cmp
xlat
movs
push
or
push
fwait
inc
ss
fist
aaa
dec
gs
pop
xor
add
add
les
xor
rol
xor
pop
xor
xor
cmp
or
push
pop
or
sub
jo
add
cmp
retf
push
jns
sub
jp
adc
jmp
jae
cs
call
std
cs
push
add
and
and
nop
push
jns
adc
mov
jnp
test
or
jb
or
push
(bad)
rol
jae
daa
mov
mov
add
mov
push
adc
das
xchg
or
das
mov
mov
pushf
adc
and
jbe
ret
pop
movs
outs
ja
shl
inc
js
fsubr
fisubr
lods
scas
sbb
arpl
out
mov
xor
cs
sbb
rcl
test
xchg
sti
sub
mov
dec
rol
stos
push
jmp
daa
daa
mov
icebp
pop
jnp
out
leave
push
add
push
retf
jbe
dec
cs
mov
out
leave
call
psllw
or
lock
aas
push
out
dec
and
dec
loop
movaps
scas
aas
in
mul
enter
int3
jbe
repnz
aas
outs
sub
popw
jmp
into
jg
mov
or
iret
mov
idiv
out
jbe
push
aas
ror
sub
out
(bad)
out
shr
jae
das
push
jns
pop
adc
dec
dec
dec
data16
xchg
in
add
add
mov
add
add
add
dec
add
add
add
push
mov
mov
mov
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sti
pop
cld
mov
out
(bad)
out
(bad)
in
(bad)
in
(bad)
jmp
(bad)
jmp
jmp
retf
(bad)
jg
in
jecxz
loop
loope
loopne
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
call
call
call
(bad)
call
call
call
dec
dec
dec
dec
inc
dec
push
add
push
or
mov
jge
stos
inc
and
push
js
mov
dec
push
movs
push
add
mov
pop
push
test
and
repz
cmp
pop
cwde
loop
ja
retf
xchg
movs
push
or
aam
mov
push
loop
pop
push
or
jnp
mov
push
add
icebp
fisttp
je
in
inc
mov
dec
repz
pop
push
jl
and
xlat
mov
mov
or
pop
push
adc
push
mov
pop
push
push
push
adc
push
push
ins
push
push
ins
mov
sub
loopne
mov
add
adc
call
push
jecxz
out
mov
aam
dec
xor
push
xchg
push
or
push
jecxz
jnp
jbe
pushw
ds
push
xor
clc
xchg
stos
add
or
xchg
pop
(bad)
and
sub
inc
dec
fiadd
inc
dec
ja
rcl
sbb
sbb
ret
ins
add
or
je
push
add
test
ror
ins
repnz
imul
xchg
inc
push
push
fs
ins
in
les
or
es
add
inc
repnz
lea
push
inc
data16
cmp
adc
ror
cmp
inc
xor
out
(bad)
push
mov
or
jl
out
sub
std
(bad)
or
(bad)
(bad)
int
or
mov
push
mov
push
or
mov
add
sub
jg
or
mov
adc
or
inc
ret
add
xchg
or
push
lds
dec
inc
test
daa
dec
xchg
out
outs
cdq
xchg
out
mov
fbstp
loop
inc
add
call
retf
fbstp
mov
cmp
sub
daa
add
and
in
jno
outs
ins
mov
and
(bad)
fsubr
sub
into
push
rcl
jg
xor
mov
and
mov
jbe
cmp
mov
je
lea
movs
ins
jo
aas
pop
int
arpl
arpl
jmp
or
popa
jae
sub
adc
dec
imul
shr
pop
push
dec
outs
add
xchg
mov
sub
stos
sbb
fs
push
inc
sub
jmp
mov
adc
bound
bound
pop
pop
popf
inc
sub
ror
adc
call
outs
xor
jne
call
push
add
in
inc
or
lea
cmps
ror
int
ret
and
test
or
scas
xlat
shl
mov
jno
push
fwait
add
push
retf
outs
jb
jb
adc
jecxz
sub
add
sbb
mov
push
(bad)
popa
ins
push
gs
push
dec
pop
pop
call
add
data16
and
mov
jo
dec
cdq
out
rcl
test
adc
push
add
jbe
inc
inc
gs
(bad)
adc
mov
arpl
jae
add
aad
aam
enter
jmp
push
mov
retf
aam
xchg
push
dec
(bad)
popf
imul
push
sbb
pop
push
inc
dec
leave
mov
rcl
popf
lods
add
push
in
mov
adc
mov
ins
test
add
inc
ins
inc
pop
xor
inc
and
adc
bound
mov
aas
call
adc
inc
daa
or
xor
test
loope
jne
jl
sbb
dec
dec
push
pusha
adc
ret
enter
push
push
jo
or
pop
outs
aaa
adc
dec
add
push
mov
cs
adc
iret
imul
xchg
jmp
add
fmul
lock
popaw
jne
je
ror
mov
add
jp
scas
dec
add
sbb
bound
ss
jne
pop
dec
pop
push
mov
add
push
xor
xchg
jp
and
and
mov
rcr
cmps
sbb
adc
cmps
cmp
xor
push
cld
push
mov
or
scas
cmp
and
add
(bad)
add
or
loopne
mov
or
jge
(bad)
int
(bad)
aaa
add
cdq
mov
push
into
mov
es
cmp
xchg
jmp
cmp
add
outs
cmp
mov
jmp
ins
(bad)
cs
jo
int3
call
or
sbb
add
aam
xchg
mov
mov
inc
cwde
sbb
inc
in
xchg
inc
jg
cs
pop
wbinvd
inc
mov
lods
sbb
mov
js
aam
or
or
xchg
cs
xchg
enter
dec
or
add
popf
add
xchg
inc
in
and
popf
xor
mov
sub
or
into
inc
test
stos
and
or
dec
call
jmp
push
xor
lods
mov
push
aad
xchg
xchg
xchg
fld
je
xchg
mov
xchg
xchg
retf
xchg
cli
pop
(bad)
inc
ins
retf
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
sub
jge
xchg
retf
xchg
xchg
retf
hlt
pop
fadd
xchg
xchg
xchg
outs
xchg
mov
xchg
xchg
retf
xchg
(bad)
and
xchg
xchg
xchg
xchg
mov
add
sbb
sbb
jb
scas
iret
sbb
shl
push
sbb
sbb
jns
shl
jo
pusha
or
jbe
icebp
mov
xchg
mov
(bad)
jmp
adc
dec
add
add
xor
lahf
push
jmp
sbb
es
adc
call
pusha
or
movs
les
adc
xor
or
add
ror
clc
in
or
shr
daa
stos
pop
lahf
push
sbb
push
add
cmps
adc
mov
arpl
mov
pop
pop
dec
or
fidiv
sub
inc
in
add
or
xchg
inc
aam
out
enter
mov
addr16
push
das
cmp
sbb
mov
inc
mov
int3
pop
dec
pop
rcl
cdq
fwait
mov
dec
dec
mov
mov
jae
mov
xchg
out
or
scas
cmps
xchg
dec
dec
add
test
dec
push
mov
push
inc
inc
jo
sub
fimul
adc
or
(bad)
adc
add
sub
shl
cdq
xor
or
fisub
mov
and
shr
inc
sar
inc
jo
jns
sub
add
push
mov
pop
mov
popf
push
call
pop
jo
or
nop
jne
or
(bad)
fcomp
jb
or
in
inc
adc
push
imul
push
or
ins
push
hlt
icebp
cwde
fwait
sbb
jae
inc
(bad)
and
mov
dec
or
push
add
xchg
lock
pop
iret
or
or
inc
xchg
or
push
(bad)
pop
cmp
add
push
clc
adc
add
push
sub
mov
jge
ja
push
inc
cmp
js
jo
inc
xor
inc
cmp
mov
xchg
and
dec
psraw
jbe
in
lock
adc
fcomp
jl
inc
sahf
jge
(bad)
ins
push
ins
dec
cmp
sbb
push
js
push
or
test
mov
mov
or
(bad)
pop
out
mov
es
push
int3
push
call
jnp
xchg
push
fdiv
inc
sub
movs
sbb
int3
pop
add
frstor
sub
mov
test
and
fadd
pop
aaa
push
cmp
push
inc
cmp
sub
jbe
or
(bad)
and
or
ins
sub
imul
mov
pusha
adc
fs
push
dec
jo
sti
in
loop
or
nop
inc
repnz
inc
ins
jo
popa
inc
dec
add
mov
sbb
add
sbb
mul
adc
jne
ins
sub
aaa
sbb
loopne
sti
mov
popa
push
push
adc
add
jo
sub
xlat
loopne
adc
jo
pop
adc
or
cmps
pop
sub
cmp
sbb
push
or
outs
outs
adc
add
loope
jle
xor
inc
pop
add
aas
js
mov
cmp
out
xchg
lods
shr
fwait
outs
je
and
push
or
pop
stos
ja
test
loopne
out
add
out
mov
stos
add
mov
sub
fdivrp
jg
lock
ds
scas
test
ins
push
stos
rcr
in
cs
bound
cmp
or
or
adc
gs
push
popa
xor
pop
push
ins
mov
ret
add
pop
xchg
rcr
pop
mov
jbe
mov
or
jnp
sub
jmp
inc
je
cdq
mov
xchg
test
mov
movs
(bad)
sbb
test
mov
push
lds
jb
push
outs
loop
mov
mov
push
je
in
pop
add
xor
xor
ss
ins
xchg
cmps
(bad)
fnstsw
adc
push
jns
sbb
stos
pusha
jmp
jo
mov
and
inc
jbe
pop
iret
(bad)
xor
add
je
jo
into
push
fs
inc
add
mov
or
inc
xor
or
pop
cmp
gs
enter
aas
cmp
out
and
xor
int
adc
push
retf
test
adc
add
les
sub
jp
sbb
xchg
pop
lods
je
es
pop
fadd
push
and
cmp
xchg
and
arpl
adc
scas
add
pushf
mov
and
xor
mov
bound
loope
pop
cmp
fild
add
add
sub
sbb
fistp
outs
pop
imul
cmp
push
jl
addr16
mov
and
push
pop
addr16
loope
imul
sbb
push
ss
out
cmp
scas
add
xchg
push
fcomp
dec
add
add
push
cmp
sbb
data16
ss
pop
sub
dec
push
add
inc
mov
mov
pop
nop
push
hlt
mov
pop
pop
push
mov
jae
jmp
push
cmc
push
xchg
loopne
cli
xchg
retf
sbb
or
out
add
aad
push
push
jmp
sub
pop
mov
stos
ds
sub
cs
add
movs
js
sqrtps
cwde
dec
pusha
pop
sbb
mul
mov
jnp
mov
test
(bad)
in
rol
push
mov
fidivr
xchg
mov
stos
data16
scas
stos
out
push
sbb
mov
push
cwde
mov
push
dec
or
push
mov
or
in
mov
jmp
or
pop
ss
stos
pop
pop
sbb
fmul
loopne
push
xchg
push
daa
pop
add
mov
mov
inc
cmp
js
ds
cmp
push
jo
vcvttsd2si
or
sub
xchg
test
sub
dec
ds
push
mov
sub
sub
les
int3
sbb
sub
das
das
push
sahf
cmps
xchg
int3
or
ja
out
sahf
mov
shl
push
push
jb
jae
add
add
aam
cmp
mov
mov
cs
fsubr
retf
popa
and
retf
xor
cmp
es
imul
cmp
xchg
bound
mov
lock
push
mov
sub
das
retf
clc
pop
test
or
sub
rcl
pop
pop
sub
(bad)
es
push
test
or
push
sub
ins
xor
ret
sbb
add
and
push
cmovbe
daa
sbb
pusha
xlat
xor
jb
jo
or
push
add
jp
adc
dec
mov
and
xchg
mov
push
sbb
(bad)
clc
mov
push
add
mov
adc
push
dec
outs
jmp
xchg
sbb
dec
sbb
inc
je
and
sub
outs
daa
sub
pop
daa
jnp
jl
js
adc
mov
push
push
and
rol
xchg
and
mov
xor
push
and
mov
mov
dec
add
nop
push
sub
ins
fld
push
nop
sbb
mov
pop
dec
fld
push
js
int
push
inc
es
xor
xor
(bad)
mov
mov
fdivr
pusha
push
adc
pop
pop
mov
push
loope
pop
add
mov
pop
adc
xor
adc
outs
xor
xor
xor
xchg
jae
outs
mov
add
push
dec
dec
cmp
popa
je
test
ja
in
add
jl
or
push
fadd
ss
sahf
jecxz
into
xor
mov
xor
movs
and
add
add
dec
shl
stc
push
push
add
dec
add
pop
hlt
push
pop
jle
inc
in
inc
push
inc
or
jmp
(bad)
push
inc
push
outs
push
push
add
fucomi
mov
xchg
pop
(bad)
rcpps
dec
add
int
scas
mov
push
dec
mov
or
pop
aaa
xchg
mov
cs
mov
std
(bad)
jb
jmp
out
mov
push
aam
cmp
outs
verw
aas
into
sub
imul
mov
jmp
(bad)
cmp
outs
mov
mov
pop
pop
icebp
cmovg
fucomp
jbe
sub
mov
outs
(bad)
push
pop
cmp
mov
sub
push
dec
jg
inc
mov
inc
add
push
fisub
lock
xadd
dec
scas
pushf
add
cmps
push
push
xchg
cmp
adc
fiadd
sahf
(bad)
jbe
add
add
add
jp
jp
add
mov
add
add
(bad)
add
scas
jp
add
inc
add
add
add
add
(bad)
(bad)
inc
aaa
mov
mov
mov
mov
mov
mov
mov
mov
shl
push
mov
mov
(bad)
(bad)
(bad)
push
sbb
and
xor
mov
mov
mov
mov
add
push
mov
(bad)
jg
mov
sbb
push
mov
mov
mov
mov
mov
mov
mov
(bad)
out
call
sub
in
inc
inc
inc
scas
inc
inc
(bad)
mov
mov
or
(bad)
mov
push
push
jmp
adc
test
mov
adc
add
push
cld
leave
push
jo
out
mov
cmp
ds
ss
inc
push
mov
je
imul
test
pushf
ficomp
in
jge
jl
rcr
sahf
push
mov
sbb
cmp
test
pop
push
jo
rol
clc
std
dec
(bad)
push
test
mov
push
enter
in
hlt
adc
cs
push
mov
imul
adc
add
sub
adc
out
push
es
loopne
loopne
hlt
cld
or
or
inc
push
lods
aam
loop
sar
rcl
jecxz
cs
into
pop
pop
pushf
push
lods
cmp
call
mov
dec
push
jo
mov
cwde
in
pop
sahf
or
push
cmp
into
xchg
lock
out
jl
mov
push
push
pop
add
fmul
in
push
sub
test
sbb
hlt
test
adc
sahf
push
cmp
iret
jnp
sbb
dec
push
push
mov
push
push
ss
push
pop
and
push
mov
ror
push
cmps
dec
jle
ds
hlt
push
mov
sbb
mov
jbe
push
lods
and
cs
mov
xlat
mov
xor
pop
xor
push
or
movs
lar
or
rcl
xor
pop
push
inc
dec
ja
add
xchg
or
inc
out
loope
add
dec
and
loope
or
add
adc
fsub
pusha
adc
(bad)
fidivr
test
dec
out
xchg
daa
or
aaa
sar
fwait
pextrw
js
push
pushf
mov
or
inc
popa
arpl
popa
ret
inc
or
mov
sub
or
outs
inc
outs
arpl
or
mov
mov
sub
movs
dec
jnp
mov
pop
xchg
inc
push
sub
cmp
loope
and
les
adc
pusha
jns
add
jnp
xchg
mov
ins
and
mov
or
or
fcom
lock
aaa
ds
ret
mov
aas
mov
dec
xor
adc
test
data16
mov
mov
js
dec
inc
or
dec
in
jo
pop
inc
clc
test
daa
jl
push
outs
jne
sbb
add
ror
mov
sub
adc
or
push
(bad)
aas
es
jmp
cmp
retf
or
add
pop
push
mov
or
shl
sbb
dec
or
adc
or
cli
push
xchg
imul
loopne
inc
ja
(bad)
mul
(bad)
leave
adc
leave
sbb
popf
in
xor
int3
or
add
outs
outs
cmp
lods
xor
std
adc
adc
popa
cmp
xlat
fidiv
out
mov
jl
add
jae
jge
jns
scas
add
xor
js
add
dec
inc
or
dec
jecxz
push
cmp
cmp
mov
push
lods
pushf
nop
cmps
dec
mov
push
or
imul
inc
mov
shr
and
jl
popa
mov
mov
add
push
cs
outs
push
and
stc
iret
add
adc
and
(bad)
in
or
dec
in
xor
push
add
push
sub
xor
jmp
adc
adc
pop
lahf
sbb
mov
sub
shr
sub
lds
fiadd
jl
xlat
sbb
jo
mov
das
push
mov
jns
push
add
test
jmp
jmp
fdivr
mov
add
xor
mov
popa
xchg
hlt
loope
adc
xor
mov
push
test
xchg
jmp
mov
mov
pop
ins
ror
push
inc
push
jo
test
dec
icebp
add
int3
sub
pop
xor
mov
mov
jne
aam
pop
add
fidivr
movs
adc
push
inc
lds
push
jo
mov
nop
adc
push
adc
shr
or
push
sbb
ja
xor
xchg
add
add
add
or
jmp
sbb
imul
sub
mov
mov
inc
inc
inc
sub
mov
shl
sbb
cmp
inc
inc
pop
mov
inc
clc
sbb
add
mov
or
add
and
ja
xor
out
mov
test
or
and
pop
add
xchg
xor
pop
push
inc
in
xchg
pop
popf
sbb
inc
cdq
or
push
in
sub
lock
mov
push
enter
mov
push
scas
push
xor
sbb
jo
sub
call
aad
push
mov
xchg
fisub
test
dec
lahf
js
popa
lea
dec
(bad)
cli
rcl
push
mov
add
mov
inc
cmp
gs
sub
lds
push
add
adc
mov
outs
lds
or
push
adc
jge
adc
inc
dec
inc
enter
add
inc
aam
or
mov
jmp
inc
push
cs
or
cdq
mov
inc
inc
push
rol
lds
je
popf
out
(bad)
push
push
test
je
outs
xor
push
inc
cwde
adc
hlt
cmp
jle
push
inc
add
or
add
jno
mov
add
pop
test
mov
rol
push
or
pop
xor
add
lds
pop
and
sbb
ficomp
cwde
je
lock
xchg
add
aam
out
gs
sbb
push
push
push
push
mov
test
add
or
or
lods
sbb
movsx
sbb
ror
push
cs
pop
adc
push
add
push
popa
jo
imul
ss
test
cld
jo
test
lods
push
(bad)
ret
ins
adc
push
pop
test
add
mov
cmp
idiv
fistp
nop
stc
push
stos
ror
push
add
rol
inc
lock
test
jbe
pop
push
add
and
ret
sbb
nop
nop
ja
jp
fdivr
pop
jp
inc
add
push
inc
mov
(bad)
loope
mov
xor
cmp
push
dec
sbb
(bad)
bound
out
pusha
shl
rcr
(bad)
push
in
push
sbb
fdivr
add
push
jb
push
xor
ja
push
ja
or
add
push
ja
push
lods
inc
mov
adc
mov
inc
push
push
jo
sets
sub
imul
push
ja
sub
add
call
sub
mov
mov
jo
cld
mov
cmove
xor
inc
add
(bad)
add
mov
inc
add
cmova
add
adc
pop
aam
loopne
push
sub
push
sub
push
dec
mov
or
adc
adc
loope
push
xchg
inc
cmp
test
ja
xchg
xor
pop
jae
mov
or
inc
arpl
and
dec
jae
cmps
mov
adc
add
cs
dec
clc
mov
fs
add
cdq
pop
jne
jne
sub
push
or
bound
adc
fiadd
loop
adc
popa
sub
push
retf
mov
sbb
sbb
mov
outs
xlat
(bad)
addr16
or
ins
arpl
scas
(bad)
pusha
add
cmp
and
popa
js
mov
fdiv
inc
sbb
push
mov
mov
call
test
and
cmps
pop
outs
retf
or
clc
and
imul
not
xlat
ror
pop
mov
sub
lods
sub
push
je
inc
or
xor
adc
push
inc
ins
cs
add
push
inc
add
add
sub
loopne
mov
(bad)
mov
inc
je
push
rol
pop
add
sahf
dec
xor
div
sbb
aam
pop
mov
xor
mov
jae
add
push
pop
ja
push
fs
mov
inc
adc
push
mov
jo
add
xlat
xlat
push
mov
push
mov
aam
push
sbb
add
mov
sub
scas
shl
inc
jne
jae
push
mov
xlat
jae
push
or
pop
or
sub
outs
je
jo
lea
sub
cmp
mov
cmp
pushf
int3
neg
(bad)
jnp
sahf
push
add
add
pop
iret
test
adc
dec
mov
test
test
inc
mov
push
add
call
xchg
ret
sub
pop
inc
xor
sbb
dec
pusha
xchg
dec
or
add
shl
mov
cmps
xchg
jbe
xor
ret
cmps
push
or
nop
xor
cmp
sub
imul
sbb
or
cmp
scas
xor
add
jg
jo
and
rol
(bad)
stos
movs
adc
inc
pusha
popa
out
(bad)
call
sbb
add
add
or
and
adc
or
or
push
sbb
xchg
(bad)
sub
or
icebp
or
cmp
call
push
in
and
push
pop
dec
fisubr
or
ins
mov
push
push
cmps
mov
ficomp
jno
xchg
mov
lock
jbe
xor
xlat
pop
xchg
dec
imul
stos
(bad)
push
adc
add
add
add
jne
mov
pop
push
stos
add
xor
cs
or
pop
and
lahf
xor
sub
sbb
add
or
jge
push
add
dec
clc
ins
js
shr
mov
rol
cmc
dec
dec
test
inc
cmp
pop
test
or
xchg
mov
or
push
hlt
clc
or
push
push
ss
push
je
sub
ficomp
dec
out
dec
pop
jg
loopne
shl
jns
dec
inc
popa
arpl
ins
xchg
das
add
push
imul
push
in
push
xor
pop
fiadd
adc
loopne
cmp
int3
inc
jne
sub
fisttp
mov
jae
gs
inc
mov
sbb
movs
or
dec
outs
inc
push
xchg
sub
cmp
adc
add
lahf
push
cmps
or
or
xchg
mov
or
pop
pop
pop
add
inc
cs
or
add
inc
inc
test
gs
or
add
sahf
sbb
mov
push
es
addr16
das
and
dec
push
cwde
push
dec
xlat
call
push
out
push
or
or
add
imul
or
fcomp
test
xor
pop
inc
adc
sub
and
push
out
aam
push
test
sub
fwait
cdq
xor
dec
jb
fsub
mov
lea
ret
rcl
(bad)
int3
punpckldq
cld
adc
cs
ss
inc
jae
ins
imul
and
or
mov
sbb
pop
push
leave
leave
in
or
(bad)
sti
popa
jb
frstor
cli
rcpps
and
xor
push
push
ret
and
jno
xchg
inc
add
pop
enter
test
cmc
inc
add
and
les
rcl
push
xor
ja
add
xor
retf
jne
ds
imul
push
sti
test
mov
or
sub
dec
sub
imul
push
sub
push
pop
int3
inc
jae
pop
das
xor
mulps
inc
pop
dec
adc
pop
es
and
bound
push
scas
leave
dec
inc
test
sbb
push
and
cmp
je
and
pop
dec
or
xor
scas
aam
push
xchg
xchg
xchg
into
push
or
mov
jno
sub
jbe
inc
pop
or
cli
ins
add
push
test
pop
ret
xchg
rcr
push
mov
push
jo
aad
inc
ja
into
pop
in
les
mov
int
ficomp
(bad)
dec
add
dec
or
iret
adc
rcr
add
adc
pop
push
jg
inc
adc
js
inc
dec
aaa
jmp
cmps
popa
aas
test
push
sar
out
in
dec
add
jmp
js
fdivr
push
mov
mov
xchg
ret
sbb
dec
inc
push
fs
and
dec
cmp
les
add
nop
inc
jle
add
iret
jmp
in
and
push
cs
cmp
out
push
mov
sar
cmc
movs
inc
clts
sbb
test
idiv
add
xchg
dec
mov
out
sbb
xor
push
jl
ja
pop
ret
add
rol
add
push
test
and
cwde
iret
loopne
shr
fistp
pop
ficomp
into
jo
enter
pop
xor
jne
sub
cld
dec
push
ror
lods
sbb
dec
push
sub
mov
mov
push
mov
cmps
cs
cmp
or
dec
pop
sub
int3
test
xchg
jg
inc
sub
enter
and
cmp
and
push
add
mov
jl
pop
inc
bound
mov
fmul
xchg
cs
push
das
jo
aaa
lock
outs
push
lock
or
pop
or
add
or
fs
aaa
or
add
ins
popa
arpl
(bad)
ins
stc
mov
add
es
test
inc
push
not
lock
and
xor
sbb
mov
es
inc
sub
mov
mov
scas
xor
add
sub
es
mov
ins
sub
jmp
rcr
push
fbld
pop
pop
pop
ins
jge
cmp
ret
adc
push
je
movs
push
retf
add
xor
jbe
imul
pop
scas
out
push
clc
test
xchg
push
dec
add
add
test
dec
sbb
push
pushf
lds
push
loopne
mov
inc
or
add
mul
jne
sbb
push
push
ror
add
inc
inc
adc
popf
jne
and
fsubr
add
inc
adc
push
enter
sub
xchg
inc
sbb
pushf
adc
jbe
mov
inc
add
add
int3
pmaxub
add
bound
inc
pusha
ins
xchg
ins
rol
sar
jae
adc
and
xor
and
inc
sub
mov
jb
push
jmp
xor
inc
add
ds
push
movs
add
sub
xor
movs
adc
push
sub
mov
xchg
imul
mov
or
adc
or
test
(bad)
push
adc
retf
push
xor
or
mov
adc
pop
fisub
xor
pop
sysenter
dec
adc
test
das
mov
into
xor
sub
popa
sbb
mov
ins
gs
xor
or
pop
inc
jae
push
lock
out
mov
or
or
lds
push
jo
outs
sbb
lock
mov
ins
dec
mov
push
pusha
cmp
cmp
add
test
add
or
js
pop
loopne
ja
imul
or
pop
or
xor
arpl
ins
inc
imul
adc
das
jno
inc
jno
mov
cld
rol
dec
inc
stc
shl
ror
jno
cmp
push
push
push
dec
pop
call
push
pop
es
dec
adc
jno
fwait
daa
dec
mov
dec
aas
push
je
dec
sub
sahf
sub
pop
add
ins
adc
pop
pop
pop
jge
push
inc
in
mov
adc
xchg
jecxz
pop
add
test
ss
dec
pop
and
or
enter
loope
enter
pop
sub
mov
pop
xor
or
sbb
shl
jne
lods
pusha
inc
add
(bad)
or
cmp
shl
inc
inc
paddusb
test
inc
adc
add
dec
add
sbb
mov
or
mov
dec
ret
or
repnz
cwde
out
inc
ror
(bad)
or
mov
pop
dec
fwait
inc
xchg
and
sbb
add
or
lods
mov
xor
fisttp
pop
sub
sub
les
adc
cmc
adc
mov
jg
xor
adc
outs
or
or
jae
jnp
add
or
pop
push
in
xor
stc
dec
jl
addr16
sbb
sbb
mov
jo
rol
inc
pop
mov
sysret
add
add
pop
push
mov
outs
ins
push
psraw
mov
push
push
mov
fcmovnbe
mov
retf
add
mov
or
loopne
push
popf
jnp
or
inc
adc
bound
jns
push
inc
push
imul
dec
xor
and
ins
test
mov
retf
loopne
lods
(bad)
ja
cmps
push
in
invd
cld
and
inc
not
iret
mov
inc
push
les
push
inc
test
sbb
stos
in
jno
popa
int3
mov
or
mov
or
xchg
ins
mov
pusha
push
sub
or
or
in
cmp
jne
inc
xlat
push
adc
not
jno
push
adc
sbb
or
or
or
shl
adc
add
dec
sub
dec
or
(bad)
add
fs
or
adc
push
ret
jo
cmp
pop
sbb
push
lods
push
jae
in
clc
test
inc
add
mov
shr
push
or
aam
add
popf
push
test
push
es
das
lahf
push
mov
pop
daa
sbb
js
inc
cmc
ins
movs
(bad)
pop
movs
lods
les
cwde
cmps
ss
je
das
sahf
sahf
pop
and
inc
test
adc
jnp
sbb
sbb
push
jne
add
xchg
mov
dec
bound
shl
add
add
sub
sub
or
inc
dec
jge
lahf
dec
pop
rcr
mov
jae
jmp
push
ins
das
xor
dec
and
mov
inc
into
popa
je
push
xor
mov
add
jmp
xchg
push
push
ins
pop
inc
(bad)
(bad)
inc
jns
mov
push
jl
rcr
adc
shl
xor
aam
push
imul
es
add
jl
and
(bad)
ins
xor
loope
xor
les
imul
mov
mov
rcr
mov
push
fld
rcr
or
aad
jno
mov
xor
mov
adc
shr
push
iret
mov
pop
jg
push
push
mov
cld
push
sbb
add
dec
inc
inc
cmps
pop
clc
pop
push
mov
jl
adc
pusha
pop
fcom
pusha
es
test
xor
mov
pop
push
and
xchg
xor
adc
push
movaps
mov
add
xor
inc
cmps
jl
inc
in
loopne
inc
arpl
mov
and
inc
int
sbb
dec
or
cmps
inc
scas
ret
jns
and
push
and
mov
inc
mov
aam
cwde
outs
lods
jb
retf
in
pop
sub
add
pop
or
data16
mov
inc
dec
cmps
nop
jb
add
lea
xchg
mov
test
push
push
gs
or
cmp
jnp
ds
pop
gs
cmp
pinsrw
and
fnsave
call
add
mov
fwait
or
mov
mov
sub
sub
jns
xlat
mov
dec
add
mov
aaa
add
arpl
dec
or
ja
dec
ins
xor
and
jae
enter
scas
popa
imul
mov
aad
jae
aas
fwait
pusha
add
push
dec
ror
in
cmp
sahf
add
cmp
dec
push
jb
aas
mov
dec
inc
jge
loopne
out
stos
mov
mov
or
cmc
aaa
and
sti
adc
add
pop
fild
fldenv
add
add
xchg
bound
jno
push
add
call
xor
sub
out
inc
inc
(bad)
add
add
hlt
adc
xchg
cwde
aas
dec
inc
push
pop
mov
and
ja
pop
inc
or
add
in
scas
iret
out
fild
inc
scas
pop
repz
sbb
and
add
inc
retf
je
cmp
pop
jo
sbb
mov
inc
mov
call
and
mov
or
mov
ds
ja
adc
pop
ret
cmp
jmp
(bad)
mov
das
outs
fild
movzx
sub
call
je
inc
(bad)
xor
push
inc
push
mov
push
push
lea
mov
(bad)
cmp
mov
mov
push
sar
pop
test
je
fmul
jle
xor
push
xor
lock
les
push
and
pop
sbb
adc
imul
dec
jge
and
pop
jo
push
(bad)
in
enter
popa
sub
adc
inc
mov
or
mov
mov
add
pop
ret
push
push
push
mov
jo
pusha
mov
push
push
(bad)
xchg
fcomi
push
push
cmp
jne
push
mov
call
add
rcr
ret
nop
fdiv
test
push
push
push
gs
add
xor
shr
rcr
sbb
push
and
jne
adc
sti
inc
xchg
out
jmp
mov
adc
push
inc
ins
adc
(bad)
mov
push
mov
je
pxor
mov
sbb
cmp
mov
mov
cld
sbb
jg
sbb
mov
mov
test
je
push
push
arpl
or
or
mov
push
mov
in
(bad)
mov
add
mov
fsubr
repnz
es
fdivr
mov
dec
mov
xor
out
int3
clc
xchg
mov
xor
sub
test
push
add
pop
sti
add
mov
or
test
test
push
imul
or
mov
dec
arpl
fcmovne
dec
dec
inc
pop
inc
into
ins
popa
push
outs
mov
fld
sti
movs
jecxz
movs
mov
push
push
xor
lea
call
add
xor
push
mov
xchg
add
dec
push
xor
mov
dec
ins
mov
lock
pop
adc
jo
call
sub
jl
or
ins
cwde
cmp
aas
rcr
xchg
xor
pop
push
mov
jmp
in
hlt
dec
push
mov
mov
je
mov
inc
jne
mov
adc
dec
ja
stos
mov
jecxz
sub
dec
repz
in
push
sub
jo
and
mov
clc
div
scas
fstp
out
inc
jbe
inc
pop
dec
sub
xchg
into
push
xlat
sub
mov
add
lahf
mov
push
shl
sub
fmul
cmp
xchg
mov
jle
mov
or
clc
sub
popf
pop
dec
imul
fs
aas
call
inc
xchg
inc
inc
clc
mov
aam
add
jp
dec
push
loopne
xchg
pop
gs
or
lods
arpl
mov
add
inc
add
or
rol
pop
ret
sar
pop
mov
mov
pushf
(bad)
js
cmps
scas
mov
sbb
in
sbb
jmp
mov
xor
jmp
mov
ins
or
sete
test
pop
cmp
jl
movs
pop
cmps
scas
ror
cdq
mov
scas
(bad)
xlat
lds
retf
mov
sub
aad
repz
xchg
pop
ss
out
xchg
(bad)
aaa
clc
sar
lock
scas
inc
pop
js
and
add
jmp
mov
lea
xlat
inc
push
test
adc
shl
out
fdivr
lahf
mov
scas
cmps
xor
add
sub
push
cmp
push
cmp
retf
mov
pop
push
add
pop
fcomp
pop
or
jl
inc
xor
pop
fbstp
js
pusha
scas
adc
mov
fadd
lods
inc
push
inc
stos
mov
jne
inc
mov
sar
jmp
ins
mov
cld
mov
pusha
je
lods
es
sahf
(bad)
push
adc
add
push
or
int
jg
int
dec
test
jne
test
jne
(bad)
pop
retf
cmp
ss
not
dec
adc
or
cmps
imul
ins
cmps
imul
push
cdq
cmps
or
xor
inc
and
in
inc
cmp
or
ret
out
clc
pusha
add
pop
ret
cmp
outs
mov
(bad)
push
cld
and
pusha
add
(bad)
mov
loopne
pop
or
fs
ds
sbb
adc
push
pop
xchg
sub
add
je
sub
popa
je
sub
je
or
and
adc
test
out
dec
je
and
sbb
or
imul
adc
add
enter
dec
or
and
clc
lea
mov
and
sbb
js
call
cs
gs
adc
hlt
sti
pop
fs
or
add
jne
mov
inc
test
add
adc
cmp
je
jmp
cmp
mov
mov
inc
jmp
and
ror
test
cld
fdiv
push
cmp
mov
bound
pusha
icebp
or
jb
inc
ins
xlat
outs
add
test
je
mov
add
repz
xchg
jmp
add
mov
add
push
sar
retf
adc
or
jmp
loopne
mov
sbb
or
out
outs
leave
in
mov
or
fisubr
sahf
outs
ins
je
icebp
xabort
outs
xchg
std
mov
mov
adc
or
(bad)
mov
fisubr
inc
and
sbb
adc
sbb
shl
mov
jmp
test
stos
mov
mov
loope
sub
xchg
mov
mov
les
inc
ja
or
fadd
push
inc
loopne
inc
or
iret
adc
sbb
and
test
jle
push
mov
mov
outs
cmps
xor
jle
mov
call
in
inc
ds
sbb
mov
sbb
inc
sbb
push
or
pop
(bad)
jmp
jb
mov
sbb
adc
mov
clc
inc
cmp
mov
mov
dec
push
push
xor
mov
mov
mov
sar
xor
pop
sub
shr
frstor
popf
(bad)
outs
les
(bad)
xor
push
push
ja
outs
inc
lds
dec
jle
adc
pushf
or
jo
push
fmul
jge
outs
xchg
cmp
movzx
mov
push
pusha
mov
jns
jg
sbb
je
lea
lea
movs
add
movlps
add
enter
or
into
xchg
sbb
adc
and
mov
shr
adc
cli
pop
out
pop
mov
cmp
idiv
mov
cdq
xor
sub
pop
ret
adc
lock
es
jo
sbb
ja
jl
cmp
mov
add
and
ret
cmp
scas
xor
sub
push
sub
sbb
dec
adc
xor
jle
or
sbb
sbb
cmp
(bad)
xor
lea
inc
fbstp
adc
lea
inc
cmp
jne
pop
mov
nop
and
pop
jae
cmps
mov
std
clts
mov
or
add
adc
in
jmp
cmp
lock
jl
(bad)
sti
cld
fmul
fadd
jne
or
push
pop
adc
jmp
cmp
xlat
pop
loope
jne
or
mov
or
add
xchg
mov
mov
inc
inc
mov
pop
clc
ret
das
inc
daa
cld
fmul
movs
mov
lahf
icebp
adc
xor
daa
xchg
dec
push
sbb
es
aam
test
enter
ret
cmps
idiv
in
stos
ror
and
movs
(bad)
jmp
or
scas
mov
shr
push
lahf
in
sub
mov
sub
jmp
xor
pushf
or
clc
cmps
push
test
fisttp
push
cld
or
inc
in
push
addr16
add
jo
sub
dec
dec
mov
add
fisttp
retf
adc
or
push
lea
xor
add
xchg
je
fimul
push
mov
popa
cmp
daa
test
sbb
std
mov
retf
inc
cmp
je
mov
cmp
loop
ficomp
push
ror
cs
ret
and
call
sub
and
inc
pop
pop
pop
loopne
pop
mov
(bad)
fsubp
and
retf
xor
cmp
(bad)
jmp
or
add
aam
mov
cli
or
loop
mov
or
jl
sbb
adc
shl
mov
lock
cmp
(bad)
je
push
test
jo
xchg
mov
fcomp
and
pop
lods
(bad)
in
pop
nop
push
mov
retf
js
mov
add
push
cmps
sbb
adc
inc
inc
xchg
push
lods
jo
sar
mov
or
(bad)
ja
scas
sbb
dec
jne
js
test
cmp
xor
push
or
or
cs
or
test
and
sahf
push
sub
xchg
loop
jnp
adc
pop
jle
pop
out
aam
xor
adc
or
je
inc
jne
and
(bad)
or
and
pushf
and
leave
sbb
push
and
cmp
scas
sbb
cld
pop
inc
imul
hlt
or
cld
cmp
lock
ror
and
stos
add
call
pusha
aad
ds
mov
xor
push
and
cmp
push
mov
or
inc
xor
jmp
xor
jne
push
and
and
push
push
push
out
add
xor
lods
pcmpeqb
push
xor
xor
js
or
jmp
or
test
sub
mov
mov
push
mov
and
push
lock
mov
xor
jno
push
mov
neg
inc
pop
imul
adc
and
mov
xor
out
mov
cmp
jp
cmp
ss
jo
jg
mov
aas
pop
jbe
mov
out
shr
bound
xchg
adc
loopne
and
pop
sbb
dec
std
ds
xor
xchg
mov
rcl
fadd
inc
dec
mov
test
cmove
add
repz
push
and
inc
js
addr16
fstp
loope
push
sub
pop
mov
sbb
jbe
inc
add
es
ds
inc
mov
mov
mov
or
mov
cld
test
pop
call
xchg
sbb
jne
mov
(bad)
jbe
adc
lea
add
mov
add
adc
cmp
sbb
pop
cmp
je
push
daa
or
and
sbb
xor
push
jmp
cli
adc
mov
adc
xor
mov
sti
ins
(bad)
rcr
cmp
sar
jbe
push
push
popa
lea
fistp
enter
dec
je
in
push
sbb
fimul
mov
add
or
push
sub
or
sbb
or
test
jne
cmp
sbb
xor
ret
mov
push
adc
sub
push
or
stos
fild
or
sbb
mov
mov
ja
sbb
xor
lods
sub
cmp
mov
test
pusha
mov
cld
call
jmp
scas
dec
mov
and
pop
(bad)
(bad)
xor
dec
or
pop
mov
popa
js
and
jne
push
inc
sbb
dec
pcmpeqb
sbb
movs
push
fs
add
aam
test
push
sar
cmp
lods
add
sbb
mov
cmp
sub
js
sbb
loope
dec
outs
push
faddp
add
(bad)
push
jmp
je
pop
push
adc
pop
rcr
adc
sbb
xor
imul
cmp
adc
mov
inc
dec
mov
or
sbb
test
jle
mov
sub
mov
fild
pushf
fld
fdivrp
fstp
fwait
jmp
xor
mov
in
jmp
rol
add
retf
jle
mov
mov
sub
popa
pop
retf
mov
xor
xor
add
sub
mov
jmp
pop
je
cmp
inc
add
cdq
pop
sub
test
push
or
stos
or
inc
into
cmp
inc
or
push
xor
pop
pop
jae
jecxz
dec
xlat
push
mov
xor
mov
pshufw
sub
or
jbe
sub
xchg
cmp
enter
inc
pop
movs
sbb
sub
cmp
stc
sbb
add
cmp
clc
xor
fdivr
in
int3
or
or
or
add
sbb
jo
mov
cmp
dec
fstp
rcl
fcomp
addr16
cmp
sub
sbb
jmp
add
je
mov
or
es
add
mov
xor
fcomp
(bad)
mov
dec
inc
add
retf
jno
mov
ins
(bad)
lock
mov
int3
in
or
xchg
mov
data16
sti
loope
or
loop
sub
push
adc
add
add
xchg
sub
sub
hlt
mov
mov
xchg
jecxz
scas
push
sbb
jne
mov
mov
mov
and
sbb
push
mov
or
movs
add
xor
iret
add
xor
push
sub
hlt
xor
lahf
pop
jo
add
sbb
popf
xchg
fsubp
lea
aaa
das
sbb
cmp
mov
movzx
sbb
xchg
loop
push
and
arpl
adc
lock
jnp
xchg
ror
loope
mov
add
jle
sub
data16
or
sbb
in
or
(bad)
cmp
or
add
xchg
pop
mov
div
push
cmp
test
sbb
mov
cmp
mov
add
pop
arpl
mul
sbb
je
fwait
dec
mov
sbb
fidivr
mov
inc
jne
inc
sbb
sub
mov
push
std
pop
xor
or
sbb
jecxz
jmp
mov
fmul
(bad)
std
loope
and
test
sbb
add
jne
mov
and
xor
add
jb
adc
xchg
sbb
dec
int3
sub
pop
mov
inc
pop
repz
mov
mov
push
adc
mov
pushf
and
xchg
push
cwde
loop
mov
and
and
cmp
movs
(bad)
jecxz
out
and
cdq
xor
xor
fidiv
inc
xor
mov
push
jecxz
dec
in
adc
sbb
adc
mov
xchg
pusha
ss
ret
inc
mov
mov
adc
jmp
daa
enter
in
adc
sub
out
or
dec
push
add
scas
outs
jecxz
sub
mov
fimul
stc
mov
(bad)
or
mov
xor
les
add
xor
pop
addr16
sbb
jb
ret
outs
mov
imul
in
sub
dec
jp
imul
jo
ds
test
enter
jecxz
sub
inc
loopne
cmp
push
and
mov
dec
adc
pop
and
shl
fdiv
add
rcr
out
dec
mov
jb
cdq
sbb
mov
mov
add
sbb
out
xchg
cmp
mov
iret
jg
add
sub
inc
mov
jge
cld
loope
das
lock
xor
popa
inc
push
add
inc
call
ret
inc
mov
inc
cld
cmp
add
add
icebp
call
mov
jnp
ins
arpl
jl
or
inc
scas
mov
dec
jne
scas
lock
into
mov
mov
lahf
dec
xchg
cmp
or
and
fimul
hlt
cmp
or
add
mov
fwait
sar
xor
ja
adc
jo
sbb
pop
dec
cld
cmp
stos
imul
inc
pop
mov
test
xchg
mov
jl
or
cmps
rcr
adc
fbld
jl
sbb
xor
push
fadd
xchg
inc
pop
adc
jbe
out
sub
mov
inc
imul
inc
mov
xor
lods
in
dec
sub
push
pusha
cmps
sub
pusha
cli
pop
mov
data16
out
or
sub
iret
push
sub
and
or
adc
nop
mov
pusha
cmp
mov
ds
pop
xor
add
pusha
rol
inc
inc
pusha
rcl
pop
add
mov
cmp
push
fidiv
mov
mov
cmp
dec
data16
cli
sysenter
or
jmp
and
in
(bad)
aaa
lds
adc
aaa
ret
add
bound
in
lds
and
add
enter
aam
push
adc
or
aad
adc
ins
inc
or
(bad)
xor
mov
add
outs
xchg
sar
jmp
cmp
je
cld
test
xchg
shr
jbe
push
adc
cld
jae
sbb
xor
jo
je
and
adc
outs
out
fwait
mov
adc
loopne
shl
cmp
aaa
loopne
ret
aaa
adc
push
jecxz
inc
call
js
mov
sar
inc
mov
out
cmps
push
sub
lods
inc
sbb
in
push
rcl
fldenv
inc
imul
add
adc
int
arpl
jns
es
or
cmp
add
aas
or
dec
mov
or
mov
shl
adc
mov
or
sbb
cmp
fadd
jg
ss
cmp
mov
or
cmp
xchg
rcl
inc
lahf
push
test
sysexit
call
sub
add
add
pop
shl
test
sub
(bad)
cmp
xor
and
or
add
and
sbb
sbb
pop
clc
ins
push
fist
push
ins
aam
clc
je
pop
mov
push
xor
ror
adc
cs
push
or
or
push
and
shl
sbb
xor
mov
les
inc
jno
inc
mov
lahf
ja
sbb
ss
ja
in
aas
xchg
test
inc
mov
ret
cmp
adc
mov
mov
jle
cmp
jns
cmp
fs
mov
inc
imul
or
cdq
adc
xor
cmp
jp
or
mov
push
imul
pusha
test
mov
mov
daa
sahf
into
add
or
mov
mov
sbb
adc
xchg
xor
loope
adc
xchg
add
sahf
lock
aas
xchg
dec
fist
fimul
into
xchg
stos
sbb
enter
rcr
push
ret
adc
jns
cmps
pop
push
push
cmp
js
inc
js
or
adc
or
push
idiv
jne
xor
or
test
pop
scas
xchg
and
aas
fisttp
or
aas
or
push
mov
fst
jg
add
xchg
(bad)
(bad)
std
adc
xor
or
xlat
adc
xchg
jl
dec
mov
mov
ret
int3
dec
stos
jmp
cmc
xor
mov
mov
mov
cmp
add
jae
retf
dec
cmps
cmp
dec
mov
push
sbb
mov
loope
and
ret
xchg
adc
into
sub
sar
aas
mov
sahf
cmps
jge
ds
inc
imul
pop
(bad)
fisubr
call
mov
jmp
loopne
inc
or
fucomp
inc
add
sub
or
mov
popa
add
adc
cmp
sbb
cs
push
push
mov
push
xor
mov
push
stos
mov
scas
mov
pop
add
dec
fsub
inc
call
push
js
sub
xchg
dec
xor
mov
cmp
and
jl
add
sbb
adc
inc
rcl
movs
mov
pop
ret
loopne
fs
sar
cmp
(bad)
std
imul
mov
mov
mov
or
add
xchg
movs
mov
push
xchg
cmp
push
xor
mov
xor
rol
and
in
aam
dec
push
dec
lock
out
push
push
pop
jmp
iret
dec
bound
dec
xor
dec
adc
call
add
ins
les
sbb
or
in
dec
push
sbb
fist
cmp
jl
inc
mov
pop
push
inc
je
cmp
adc
xor
loopne
mov
test
add
xor
ins
fmul
lock
pop
ror
lock
in
and
add
fcomp
rcl
stc
sub
dec
pop
in
psubb
push
mov
les
jge
push
cmp
xchg
popf
leave
xor
add
push
js
shl
adc
sbb
cmp
clc
int
not
pop
adc
mov
inc
sbb
jne
push
out
cld
in
add
ret
sbb
clc
jne
mov
push
jne
adc
push
jne
mov
pop
dec
xchg
adc
and
pop
clc
shr
mov
xchg
loop
das
inc
aad
adc
mov
test
pusha
fs
xchg
mov
test
scas
inc
js
adc
fs
inc
shr
push
or
or
pushf
fimul
mov
cmp
sbb
push
mov
mov
xchg
add
inc
mov
ror
imul
sahf
xor
push
fadd
ins
ins
test
dec
cmp
enter
mov
je
dec
je
sub
jmp
xchg
cmp
jnp
sub
iret
sub
mov
sti
inc
sbb
je
or
bound
cmp
rol
cmp
add
fs
cld
jbe
mov
add
cmp
test
mov
push
pusha
xchg
fmul
scas
sub
mov
inc
cld
mov
in
scas
loope
dec
sbb
pushf
jmp
push
jno
(bad)
pop
inc
push
inc
jle
cmps
lea
mov
dec
lea
outs
xchg
jbe
jo
inc
or
out
cmp
dec
pop
or
pop
and
test
hlt
mov
sub
outs
mov
cmp
mov
ror
sbb
js
popa
cmp
jmp
and
dec
xor
sub
add
jo
mov
push
inc
jne
repz
clc
movs
xchg
and
fs
sub
jmp
xchg
adc
push
out
sar
js
dec
inc
outs
cmp
pop
or
push
mov
inc
ins
cmp
js
cmp
dec
mov
fs
add
jbe
inc
nop
imul
jmp
mov
or
push
sbb
pusha
push
adc
shr
fs
dec
sub
setb
push
add
cmc
or
iret
rcl
cmp
jne
xor
sub
push
fs
adc
sbb
push
aaa
dec
or
push
mov
je
cmp
cwde
jne
xchg
jb
sbb
arpl
push
pop
or
add
mov
pop
lock
add
or
aaa
das
outs
add
cmp
adc
adc
or
add
or
pop
fs
push
rep
adc
mov
inc
mov
or
sbb
shl
mov
inc
iret
xor
rcl
jae
adc
inc
xchg
and
iret
inc
test
add
push
je
fstp
ret
mov
xchg
pop
sar
mov
(bad)
lock
cmp
adc
add
jp
enter
sbb
push
call
xor
sar
jns
adc
xor
push
mov
pusha
add
scas
call
lods
xlat
into
popa
pop
push
adc
lock
fistp
femms
fadd
ret
add
xor
adc
or
je
adc
xor
inc
popa
sub
mov
cmp
ret
or
add
pop
cmp
enter
dec
mov
das
xor
sar
fmul
dec
bound
ror
in
std
ja
in
lea
fbld
inc
dec
inc
push
dec
data16
push
out
and
mov
xchg
adc
ret
pop
rcl
pop
outs
iret
mov
daa
xor
les
push
add
xor
add
jb
sbb
inc
push
cwde
ins
fist
outs
or
jmp
out
test
rcr
icebp
lea
sub
adc
or
fstp
gs
sbb
or
and
adc
scas
outs
mov
mov
test
je
test
pop
cmp
sbb
and
inc
add
inc
lock
pop
fnstenv
mov
adc
fsubr
mov
xor
xor
mov
(bad)
das
sbb
in
jne
lds
sahf
xor
and
add
add
sub
or
sbb
rcl
sbb
pusha
or
leave
or
sti
rcr
pusha
aaa
jb
add
stc
jge
or
lds
and
out
adc
inc
mov
adc
icebp
xchg
pop
add
adc
pop
test
(bad)
loop
inc
pop
xor
push
mov
adc
jge
in
cs
lahf
sbb
ret
aam
sbb
dec
inc
ror
data16
dec
mov
or
mov
jae
loop
add
add
dec
or
add
popa
adc
dec
or
(bad)
shr
cs
js
sub
add
pop
aad
or
jecxz
(bad)
push
or
neg
test
adc
cmp
mov
push
xor
xchg
add
push
inc
cli
mov
jge
dec
aam
pop
jg
add
jg
jnp
push
pop
pop
aam
sub
hlt
pop
sub
rol
jp
or
in
lods
xchg
retf
cmp
pop
add
push
hlt
mov
or
shl
mov
movs
es
cmp
ins
mov
and
add
or
sbb
mov
nop
sub
push
xchg
inc
mov
and
pop
stos
mov
mov
jl
mov
add
div
adc
push
cwde
lock
cli
aas
add
jbe
push
push
out
cmc
mov
enter
or
or
and
sbb
add
adc
cmp
cmp
adc
xor
pop
jne
adc
mov
add
add
scas
cmp
xchg
pop
sbb
ret
pop
test
adc
mov
or
mov
inc
cmp
pop
inc
fcmovu
and
cmps
add
lock
and
mov
inc
mov
iret
or
add
lock
cmp
cmp
jne
mov
inc
add
pop
or
xchg
jle
retf
mov
popa
enter
ret
ja
les
mov
mov
xchg
outs
xlat
mov
push
fild
jmp
test
mov
xchg
sub
cmc
ret
jecxz
sbb
push
loope
push
ins
cmp
push
ds
mov
jbe
jmp
hlt
push
je
push
out
cmp
je
push
xor
ja
or
jo
jne
mov
xchg
pop
add
retf
push
sbb
daa
and
(bad)
or
add
fst
ins
gs
mov
pusha
xchg
and
jle
int
adc
adc
xchg
or
and
adc
(bad)
pop
adc
add
adc
div
inc
pop
adc
inc
lds
push
popa
inc
movs
in
mov
adc
ja
cmp
test
je
pop
or
inc
pop
je
or
xchg
sbb
add
cmps
mov
std
sbb
or
in
cmp
je
mov
cmp
xchg
or
imul
jbe
and
loopne
lea
add
inc
pusha
and
add
push
jne
push
xchg
cmc
add
add
rcr
mov
movs
or
fucomi
shl
loope
mov
stc
into
stos
adc
outs
ins
push
test
sbb
push
loopne
inc
shl
adc
sahf
xchg
or
xor
lea
(bad)
lock
(bad)
cmc
in
mov
add
adc
pop
loop
bound
sar
aas
inc
call
pop
mov
sbb
(bad)
push
sar
xchg
mov
mov
inc
adc
jl
inc
dec
mov
push
add
pop
imul
mov
into
or
xchg
push
lds
xor
lahf
cmp
add
mov
push
push
pop
jle
jbe
push
mov
nop
mov
ret
inc
mov
test
and
je
aam
or
call
push
cli
loopne
push
mov
and
adc
imul
dec
mov
not
sbb
fdiv
sub
pop
adc
pop
ror
pusha
(bad)
enter
push
xor
not
arpl
shr
inc
add
test
add
iret
stc
pop
push
loopne
sub
inc
push
jo
adc
es
out
or
pop
add
inc
add
mov
je
jno
inc
jb
add
ret
cmp
not
movs
xor
sbb
push
adc
inc
ret
add
inc
sbb
add
mov
cwde
das
mov
jge
lods
inc
aaa
xor
cli
or
cmp
or
jp
mov
xchg
or
imul
adc
mov
push
jmp
cmp
or
(bad)
mov
and
pushf
in
ins
inc
sub
setnp
in
movs
push
seto
xor
push
jl
inc
mov
add
and
adc
fimul
js
push
je
popa
or
add
ins
ins
ins
adc
xchg
mov
fild
inc
cmp
xor
(bad)
cmp
gs
add
sub
cmp
lods
(bad)
cmps
clc
imul
pop
adc
loop
add
push
mov
push
add
dec
leave
jns
xor
loope
xor
lea
add
daa
push
test
jge
xor
cmp
jg
repnz
cmp
je
mov
fst
sub
dec
ret
or
mov
mov
jg
xor
scas
adc
rcr
mov
or
test
je
and
shr
sbb
push
sbb
or
je
shl
add
lahf
push
or
push
and
into
adc
mov
mov
mov
push
scas
cmp
jo
les
les
inc
cs
stos
add
lea
arpl
jle
xor
jmp
fs
popa
add
rcl
adc
test
aad
ret
xchg
pop
scas
out
jo
shl
je
inc
add
pop
push
fcomp
div
dec
mov
js
push
test
sub
mov
push
pop
sub
cmp
ret
dec
inc
pusha
and
pop
adc
push
js
sbb
mov
mov
out
ficomp
sbb
mov
icebp
adc
mov
test
stos
shl
in
cmp
pop
rcr
jb
or
adc
xchg
xchg
or
shl
add
loope
jb
or
bswap
or
ror
cmp
cmp
push
adc
dec
and
mov
dec
add
aaa
mov
lds
dec
mov
sbb
ins
jmp
imul
cmp
dec
dec
mov
(bad)
cmp
daa
movzx
push
push
rol
or
push
or
push
retf
cld
push
jge
inc
call
cmp
push
push
hlt
rcl
lds
sbb
lock
ins
mov
mov
jne
jmp
cmp
sub
jmp
or
push
dec
add
inc
push
lock
push
mov
lahf
dec
push
fcomip
mov
test
adc
or
les
push
xor
bnd
push
lea
dec
cmp
pop
dec
or
sub
and
adc
test
inc
adc
dec
in
sbb
add
aam
and
out
xchg
dec
cmps
push
add
sti
movs
pop
mov
mov
xor
rcl
retf
add
fsub
mov
pop
push
push
lods
scas
mov
sub
push
jae
adc
enter
out
cwde
dec
fstp
cmps
pop
(bad)
xor
jecxz
je
ret
xchg
fst
stos
dec
mov
adc
jp
mov
cmps
inc
(bad)
cld
jno
das
mov
popa
add
jae
lods
add
cmps
jb
iret
movs
outs
mov
mov
sub
push
ins
cmp
add
push
je
and
or
and
inc
cmp
add
or
inc
pop
inc
fist
push
arpl
and
mov
adc
mov
fadd
imul
add
je
mov
out
jne
sub
push
fistp
sbb
xor
aaa
pushf
xlat
clc
adc
imul
and
(bad)
mov
or
nop
adc
sbb
dec
mov
sub
push
mov
pop
add
cmp
stos
adc
loopne
inc
fs
adc
cmp
add
xor
mov
mov
repnz
test
stc
xor
fs
lods
pusha
and
mov
in
lock
cli
jbe
jge
inc
push
mov
imul
dec
push
aam
call
mov
push
push
adc
jp
adc
ret
sbb
ds
or
out
cwde
je
lock
and
mov
add
mov
mov
sbb
push
push
sbb
xlat
fimul
add
cmp
repnz
mov
cmc
and
pop
and
call
adc
call
jl
adc
clc
fmul
sbb
sub
jmp
adc
(bad)
push
add
lea
fld
pop
sub
push
(bad)
hlt
call
adc
or
outs
add
outs
or
push
dec
dec
data16
lahf
imul
adc
or
sub
fcom
jo
fild
push
mov
adc
jb
call
pop
call
push
and
or
sub
or
and
push
jle
pop
add
adc
and
xchg
pop
jnp
test
ss
push
pusha
jnp
pop
add
les
cmp
fs
pop
add
mov
or
out
jg
adc
sbb
(bad)
std
scas
lea
into
icebp
mov
pop
inc
rol
neg
push
mov
xor
call
idiv
jge
jne
add
call
pushf
inc
repnz
sub
mov
into
push
pop
je
call
div
fdivr
lea
stos
in
fist
test
loop
shr
adc
jnp
mov
(bad)
in
mov
cmps
and
je
lea
cwde
xchg
push
inc
push
shl
mov
pop
or
xchg
pop
bound
sahf
test
mov
js
pop
fwait
pop
or
mov
popf
stos
outs
xchg
bound
popf
imul
jo
xlat
mov
mov
fs
push
jns
xchg
jge
and
out
push
loope
(bad)
fs
(bad)
pop
jmp
sbb
scas
and
mov
push
add
not
and
lods
mov
ins
mov
dec
add
or
adc
sbb
dec
add
inc
in
push
ins
pop
mov
ret
cmp
(bad)
mov
dec
jge
outs
out
clc
mov
sbb
sub
cmp
(bad)
aaa
in
cdq
sbb
push
inc
mov
rcl
xor
adc
sbb
loopne
pusha
sub
and
jns
stc
in
push
jge
ret
and
into
das
mov
xchg
stos
push
jmp
sbb
les
push
loopne
loopne
pop
or
cld
ss
inc
jge
adc
xor
sub
mov
clc
add
je
mov
fs
add
fcom
or
sbb
adc
push
ret
inc
(bad)
adc
fbld
dec
mov
or
xor
pop
pusha
daa
xor
push
adc
push
les
and
or
pop
add
aaa
add
jnp
sub
rcr
outs
xor
push
out
and
movs
fisub
add
std
lods
jmp
xchg
mov
push
or
mov
sbb
(bad)
repnz
aam
xor
cmps
jmp
ds
les
jp
test
push
cs
call
xor
cdq
push
pusha
adc
shl
sahf
mov
das
rcl
adc
mov
popf
cs
inc
jo
or
in
sbb
in
pusha
outs
jo
or
jae
scas
outs
xor
push
cmp
add
fdiv
ds
mov
jle
push
hlt
mov
push
push
outs
mov
push
loopne
push
lea
stos
popf
push
jne
loopne
and
mov
sbb
xchg
jne
xchg
in
cmp
pop
cmp
lock
or
call
imul
xchg
jb
dec
inc
repnz
gs
mov
sub
lea
or
mov
add
mov
mov
ja
pop
mov
stos
lahf
add
mov
pop
pmuludq
je
retf
xchg
adc
sbb
mov
ret
ficomp
or
mov
mov
adc
and
adc
and
ja
pop
and
push
add
fcom
or
push
xchg
mov
call
mov
retf
push
lock
je
jae
add
push
adc
push
shr
mov
push
push
inc
idiv
pop
xchg
mov
je
add
sub
jae
mov
dec
mov
sub
jae
push
jo
jno
clc
mov
and
jo
sahf
push
mov
or
stos
or
mov
fdiv
adc
xor
sub
mov
inc
pop
popa
not
or
adc
lods
add
and
mov
cs
(bad)
sti
pushf
lods
pop
ror
mov
inc
jbe
push
pop
mov
je
xor
sbb
xchg
cmps
ror
add
sbb
mov
mov
push
popf
add
cmp
daa
xchg
xchg
adc
jbe
jbe
or
add
popf
and
push
and
in
(bad)
xor
movs
xor
es
xor
xchg
xor
outs
add
fdivrp
or
mov
dec
sbb
jle
mov
cmp
fisub
inc
jle
out
pop
jmp
sub
xlat
pusha
sbb
add
icebp
adc
int3
add
jle
or
mov
pop
xor
xor
jge
add
pusha
sysexit
sbb
xchg
sbb
push
scas
nop
mov
in
adc
pop
push
rcl
jbe
or
repnz
adc
arpl
mov
or
mov
mov
call
and
push
fcom
push
jbe
jp
push
rcr
mov
rcl
pop
xor
inc
movs
mul
popf
inc
cmp
fwait
add
or
inc
test
jmp
inc
js
cmp
inc
call
sbb
out
and
inc
cs
add
fcmovnu
or
sub
pop
push
or
and
daa
xor
dec
les
jle
data16
add
mov
adc
lock
in
and
mov
mov
mov
sbb
cmp
push
adc
test
add
dec
jge
xor
cmp
scas
(bad)
xor
test
xor
jb
lods
shl
jns
sub
addr16
loopne
(bad)
adc
add
cmp
dec
das
sub
cs
xor
sub
call
mov
rol
les
add
clc
pop
push
push
scas
and
jno
push
add
mov
rol
cmps
or
adc
adc
outs
call
scas
pusha
bound
inc
lahf
mov
inc
mov
pop
sar
inc
mov
or
ja
aas
push
jmp
mov
pop
push
jge
pop
lods
or
ins
ins
ja
mov
inc
(bad)
mov
inc
sbb
cwde
mov
push
loopne
inc
push
dec
in
dec
rol
jbe
cs
lea
inc
sub
test
inc
sbb
add
int3
jo
gs
mov
adc
clc
adc
aas
cmp
or
in
pop
sti
sti
fbstp
push
or
cmp
jmp
cmp
push
push
mov
jb
sbb
sbb
xchg
adc
cmp
jne
lea
lock
es
add
adc
mov
push
div
push
ds
test
loopne
push
outs
and
pop
push
push
or
dec
mov
loop
push
cwde
or
sub
and
adc
or
cmp
or
pop
dec
sbb
add
jmp
sub
push
cmp
mov
mov
or
push
pop
movs
scas
mov
scas
push
mov
mov
fiadd
mov
jmp
popa
pop
call
and
jbe
inc
sub
or
out
sahf
nop
pop
sbb
mov
and
adc
(bad)
mov
inc
inc
int
or
fmul
stos
add
or
je
shl
inc
fadd
pusha
adc
mov
cmp
setns
daa
(bad)
xchg
sar
mov
cs
dec
sub
jb
pushf
mov
sbb
addr16
xchg
mov
neg
mov
inc
mov
(bad)
jne
xchg
gs
shl
add
cmp
jbe
mov
cdq
inc
push
pop
xchg
imul
add
in
test
dec
rcr
in
fs
inc
jnp
cdq
inc
push
in
lods
mov
jne
in
push
or
xor
mov
dec
jnp
es
cdq
cmp
jnp
xor
cdq
inc
pop
out
nop
ret
xor
outs
mov
dec
and
lods
out
push
les
pop
mov
push
push
rcl
or
push
mov
fisttp
fimul
sbb
dec
mov
adc
adc
and
add
imul
dec
jmp
mov
mov
jnp
in
pop
push
xchg
outs
leave
test
in
sbb
fadd
or
or
add
movs
outs
add
es
xor
add
adc
pop
imul
mov
push
dec
add
inc
add
jg
fiadd
jle
jb
ins
aas
or
inc
add
mov
sub
arpl
inc
dec
add
pushw
add
out
dec
xchg
push
xchg
push
inc
outs
push
push
or
pop
jnp
push
fnstenv
addr16
out
xchg
or
mov
je
repz
push
das
aad
pop
sbb
in
(bad)
or
fidivr
(bad)
xor
cs
test
mov
or
cs
adc
repnz
ins
(bad)
fadd
inc
js
arpl
mov
xlat
xor
clc
cmp
sti
add
loop
xlat
pop
dec
and
je
inc
aam
ins
ror
jno
mov
cld
call
test
jl
jle
add
mov
adc
adc
xor
add
push
mov
lahf
or
push
rcr
adc
pop
adc
mov
nop
ficomp
je
aam
movsx
or
or
pop
shl
pop
icebp
adc
dec
mov
sub
inc
pusha
add
push
call
or
ret
jle
mov
(bad)
dec
cmp
pop
and
cmps
lods
xchg
aas
pop
cmp
shr
(bad)
jmp
xlat
loop
pop
jmp
prefetchnta
pop
push
xor
mov
in
pop
pop
push
lods
popa
xor
mov
arpl
jmp
cmp
mov
inc
jge
sub
push
dec
clc
je
aad
jne
dec
call
xor
jno
test
adc
out
cmc
lock
or
call
sub
scas
push
je
push
jbe
dec
cmps
mov
push
cs
scas
(bad)
push
fisub
xchg
leave
jns
scas
push
dec
mov
pusha
mov
sbb
mov
call
inc
sub
out
lds
lods
cmp
cdq
mov
mov
cmp
shl
mov
xor
or
adc
aas
loop
aas
in
push
xchg
pop
and
fsubr
outs
sub
xor
je
loopne
pop
in
mov
movs
inc
mov
mov
dec
fcomp
js
inc
and
lea
cmp
inc
add
mov
pop
jge
nop
ss
xor
retf
and
jmp
loop
push
jmp
(bad)
addr16
dec
dec
dec
xchg
fidivr
idiv
xbegin
clc
jne
pop
loopne
sbb
mov
lea
mov
sub
ins
stos
cmp
push
and
and
xchg
call
and
outs
daa
lock
je
push
dec
sub
jl
(bad)
cmps
ins
outs
push
lea
and
sbb
adc
movs
jle
cmp
aaa
push
or
shl
cmp
adc
mov
adc
xchg
jbe
es
mov
lods
pop
adc
or
pop
and
adc
pop
adc
cmp
pop
xor
call
gs
sbb
inc
sbb
jne
cmp
or
loop
in
sbb
out
add
pop
shl
js
movs
or
adc
xchg
aam
test
mov
or
and
and
cmp
je
adc
pop
add
inc
pop
loope
lea
pushf
or
ret
push
push
dec
je
cmp
stos
jp
je
sub
adc
pop
jmp
mov
push
inc
jl
sbb
js
loope
add
add
sub
divps
outs
push
xchg
nop
sub
inc
jb
test
mov
movs
mov
adc
lods
push
call
jl
cdq
push
test
sbb
push
shl
imul
and
dec
shr
ins
ins
adc
ins
cld
cmp
dec
mov
test
test
enter
pop
push
adc
repz
adc
xchg
dec
sbb
pusha
adc
push
icebp
popa
and
sti
repnz
sbb
test
mov
adc
inc
inc
das
cld
fcom
call
and
ret
(bad)
(bad)
jle
cdq
inc
ins
push
mov
push
cmps
add
pushf
fdivr
mov
inc
xor
jmp
push
je
loop
retf
aam
daa
pop
push
dec
cmp
ficom
(bad)
dec
lock
mov
pop
cmp
ret
add
jle
jne
jle
or
arpl
push
xchg
ret
mov
stc
xchg
add
cld
mov
jecxz
or
and
adc
enter
inc
inc
cmps
add
in
inc
mov
xor
cld
adc
cmp
js
xchg
addr16
adc
mov
push
pusha
pop
jl
mov
pusha
pop
pop
mov
(bad)
lock
mov
xor
xchg
jo
ret
(bad)
lahf
adc
adc
cmp
je
sbb
dec
mov
add
dec
inc
sub
cmp
inc
mov
cmp
sbb
out
sub
xor
sub
ret
sbb
das
popa
lods
cmp
sbb
aaa
jge
add
loopne
iret
inc
mov
scas
add
lock
fidivr
ja
sbb
inc
sahf
pop
sub
and
clc
mov
xor
dec
inc
add
sub
push
lea
in
(bad)
int3
adc
ds
dec
xor
sub
mov
jb
dec
pop
sub
push
add
push
and
add
adc
test
fs
or
loopne
mov
mov
std
xchg
inc
add
out
(bad)
les
ror
call
adc
cvtps2pi
xor
movs
loop
loope
fsubr
sub
and
test
or
add
inc
ins
mov
dec
je
fld
cmps
(bad)
and
mov
je
cmp
daa
dec
cdq
inc
clc
out
pushf
dec
dec
cmp
push
aad
jne
test
fst
xchg
clc
inc
jmp
fsubrp
push
ins
sub
push
sbb
and
xchg
and
cmp
pop
xchg
test
pop
sti
sti
fsubr
adc
xor
jle
imul
not
push
fisub
sbb
push
mov
js
js
mov
inc
mov
sbb
mov
test
test
inc
rol
imul
mov
out
gs
mov
adc
jae
sub
sbb
dec
mov
ror
inc
add
cdq
cwde
adc
sub
xchg
mov
cmp
dec
pop
sub
mov
pusha
lahf
or
adc
add
jb
popa
inc
dec
push
retf
pop
dec
rol
mov
inc
in
add
inc
je
cdq
push
inc
(bad)
sbb
pushf
mov
adc
mov
imul
and
cmp
sub
adc
and
push
mov
xchg
test
fisubr
mov
scas
push
cmp
or
jle
mov
cli
fadd
add
sbb
fstsw
sahf
jae
mov
inc
or
es
jne
mov
push
or
cmc
push
adc
xor
xchg
push
jg
mov
fild
(bad)
cmp
jnp
cmp
jg
mov
jmp
xor
(bad)
std
add
ins
cmp
push
add
gs
sub
loop
lock
or
or
pop
xor
sbb
iret
int
fsubr
xor
and
xor
les
ds
out
mov
(bad)
cmp
sub
jb
je
dec
je
add
jmp
bnd
in
cmp
int3
into
cmp
push
sbb
loop
jb
out
test
push
mov
sub
push
add
cs
fisubr
mov
pop
push
dec
nop
inc
mov
cmps
xchg
add
jecxz
lods
mov
rol
xor
pop
(bad)
push
mov
mov
jne
and
jmp
mov
rol
add
movs
or
(bad)
push
or
pop
push
pushf
sbb
mov
sub
xchg
ret
or
lock
jle
jnp
call
cmp
mov
cmp
xchg
pop
mov
mov
clc
adc
jne
icebp
test
mov
sbb
add
mov
out
adc
js
cmp
inc
(bad)
adc
sbb
sbb
or
or
mov
sbb
in
xchg
imul
aaa
outs
aam
dec
je
mov
retf
data16
arpl
stos
test
jmp
sbb
out
jae
push
inc
adc
cmps
outs
jne
xor
std
jl
cmp
push
push
add
jnp
scas
xor
add
or
sub
jbe
mov
dec
movs
xor
xchg
ficomp
push
sbb
inc
jmp
jg
sub
pop
test
or
mov
jmp
xor
out
js
sub
jmp
or
fsubr
call
call
pop
add
push
mov
popa
jne
xchg
jne
scas
xor
xchg
test
inc
lock
cmp
mov
xor
mov
push
cmp
add
push
dec
in
jo
jbe
pop
inc
out
adc
pop
movs
es
mov
pop
adc
loop
inc
mov
add
push
add
into
lods
adc
jmp
xor
dec
ss
push
sub
into
xor
dec
push
and
repz
imul
out
jo
or
popf
in
shl
sub
push
pop
test
mov
sbb
ret
add
xchg
sub
and
pop
push
lds
lds
movs
fsubr
or
je
pop
mov
not
(bad)
cld
in
or
xchg
cwde
jo
popf
icebp
adc
cmps
fwait
call
mov
xchg
clc
ja
dec
pusha
dec
hlt
jmp
and
sbb
mov
sub
gs
jne
or
cwde
mov
or
adc
pop
adc
add
adc
xchg
fdiv
cwde
retf
pop
xor
mov
loop
dec
mov
pop
mov
lods
mov
mov
dec
das
add
add
fldcw
jmp
setae
ss
outs
test
inc
sbb
jo
out
push
(bad)
cmp
inc
cmp
adc
mov
test
adc
sbb
test
xchg
lds
cld
mov
shr
cmp
hlt
std
mov
push
push
add
mov
add
jl
push
pop
clc
mov
ret
add
mov
adc
add
mov
lea
sbb
cld
pop
mov
xchg
pop
and
js
cmp
pop
ror
add
adc
adc
mov
xchg
fdivr
into
les
or
xchg
inc
in
int3
sub
pop
sbb
es
sar
sbb
in
mov
movs
mov
mov
call
popa
int3
fs
xchg
dec
js
xchg
xchg
jne
popa
sar
nop
mov
push
leave
sub
loope
mov
mov
mov
lods
xchg
cmp
sub
ret
jl
mov
adc
cmp
jno
adc
test
sahf
xor
and
xchg
or
sbb
or
(bad)
mov
xor
jl
jne
test
xchg
sbb
or
(bad)
pop
push
inc
mov
xchg
xor
imul
pop
lock
mov
push
cmc
mov
js
and
stos
test
mov
xor
add
and
adc
pop
mov
pusha
sbb
push
jp
cmp
cmps
or
aad
addr16
pushf
adc
pop
mov
push
pop
push
sub
leave
ss
mov
push
arpl
push
or
cwde
mov
push
test
int
mov
mov
mov
and
jecxz
push
test
jle
adc
pop
cmp
inc
stos
cli
mov
rol
mov
addr16
dec
cmps
adc
shl
xor
xor
out
add
pop
adc
xchg
jmp
jg
test
dec
test
jl
inc
xor
dec
fucomip
fwait
test
lea
nop
test
pop
jge
enter
inc
dec
jne
cmp
in
xor
jle
and
push
push
inc
sub
adc
mov
mov
sbb
movs
jbe
ins
lahf
test
cdq
xor
ja
(bad)
das
inc
push
sbb
pop
je
pop
jmp
adc
mov
sbb
movs
and
sub
mov
mov
add
fwait
loop
mov
or
dec
mov
adc
dec
jl
jmp
inc
adc
repnz
or
sbb
lea
xchg
fstp
outs
jge
adc
adc
push
cld
stos
rol
loopne
mov
inc
jae
enter
jne
fcomp
cmp
and
repnz
cmp
mov
jecxz
push
arpl
fild
add
xor
pushf
fcmovbe
fstp
and
mov
or
(bad)
jmp
sub
popf
in
sahf
clc
jmp
pop
jne
xchg
xor
and
cmp
out
inc
lock
jns
adc
push
or
add
or
(bad)
xor
cwde
nop
fldz
stos
jge
jmp
sub
jmp
arpl
mov
out
int3
xor
in
push
pop
sbb
hlt
sbb
(bad)
mov
hlt
adc
and
add
or
clc
cmc
cwde
mov
lock
push
push
(bad)
stos
out
sbb
mov
or
jb
inc
or
pop
call
add
add
sub
pop
adc
sub
dec
pop
push
call
ss
in
or
repz
add
push
popa
hlt
push
cmp
ja
jmp
repz
xchg
popf
sbb
push
push
sub
loopne
in
sbb
add
jmp
test
adc
or
xchg
fsubr
aam
enter
hlt
lea
cmp
or
call
lods
mov
or
adc
mov
push
imul
jae
push
mov
add
sbb
sub
push
cdq
out
loop
ds
mov
dec
cmp
repz
sbb
shr
push
mov
loopne
add
jmp
sbb
mov
cmp
pop
jmp
xor
xor
std
test
ret
jo
ret
add
inc
rcl
adc
cmp
outs
inc
outs
outs
je
outs
ins
cs
add
add
xchg
pushf
add
arpl
sbb
outs
cmp
jb
and
push
loope
pop
push
adc
xchg
jle
cmc
clc
mov
jo
dec
hlt
mov
pop
je
push
or
(bad)
jmp
mov
add
sbb
or
cmp
lds
mov
ja
outs
sub
and
sti
cmp
sbb
xchg
ret
fwait
push
fimul
or
gs
mov
fiadd
and
push
sbb
push
std
inc
aad
setl
mov
fcom
nop
movs
add
les
pop
push
lock
setge
or
scas
dec
pop
bound
jmp
dec
sub
out
ss
jnp
out
jmp
in
add
jmp
dec
cs
inc
push
push
jo
sub
mov
lea
or
ficom
add
mov
(bad)
daa
fs
xchg
xor
in
cmps
(bad)
xor
out
sub
inc
into
push
adc
js
cmp
pusha
(bad)
je
mov
lock
mov
pop
stc
mov
mov
jne
cmp
jne
js
mov
push
mov
and
test
mov
mov
(bad)
lock
movs
xor
stc
cmp
jbe
in
out
jne
jg
push
mov
inc
(bad)
dec
out
mov
adc
or
gs
clc
add
pop
cmp
pop
ja
fsubrp
push
lock
cmp
scas
cmp
daa
clc
xor
jmp
inc
sbb
or
inc
add
cmps
aad
ror
retf
pop
mov
adc
fdivr
dec
push
pmaxub
sub
cld
xor
inc
je
or
adc
mov
xor
mov
int
inc
mov
ror
xchg
push
rcl
bound
add
mov
(bad)
adc
(bad)
cld
mov
pop
sbb
in
dec
in
cmp
jl
sbb
inc
push
mov
sbb
out
int
sahf
push
jae
or
jne
push
mov
lods
(bad)
daa
dec
push
loop
rol
xchg
push
clc
jle
imul
push
sbb
dec
jae
and
adc
or
push
add
sbb
lahf
stc
in
push
and
add
clc
add
sbb
or
add
and
in
push
repnz
sbb
jmp
mov
cmp
jge
xchg
js
fistp
cwde
xor
aas
aaa
xchg
clc
adc
aaa
xor
jo
outs
cmp
sbb
mov
nop
jno
loop
mov
inc
adc
addr16
cld
add
mov
ret
je
mov
push
push
xor
cmps
cmp
add
sbb
sbb
inc
and
iret
ret
or
or
mov
or
and
fs
das
leave
ins
mov
test
mov
add
pop
fild
call
fadd
das
loope
or
jmp
leave
push
mov
add
or
mov
mov
aam
imul
push
mov
mov
inc
jmp
push
sub
fcom
div
loop
ins
test
sub
pop
cmp
imul
pop
adc
dec
outs
xor
mov
sbb
jo
sub
sbb
rcl
mov
or
dec
push
nop
inc
add
je
pop
cmp
sub
pop
or
sub
(bad)
(bad)
(bad)
mov
test
inc
jmp
and
cs
inc
cmps
mov
sub
ss
jne
sbb
mov
jne
ins
mov
cwde
int
fild
rcr
add
cmp
mov
inc
repz
mov
mov
pop
adc
add
dec
data16
adc
mov
mov
shl
lds
call
push
dec
fsub
pop
daa
nop
nop
pop
jbe
into
mov
inc
and
pop
mov
jo
cmps
sti
inc
sbb
pop
adc
retf
into
mov
adc
push
ret
ffree
js
fisub
pop
jg
mov
je
xchg
jb
pusha
add
outs
scas
xchg
lock
cdq
or
jmp
sbb
mov
mov
nop
shr
or
movs
lods
adc
out
out
or
fs
mov
jmp
ffreep
dec
jo
ror
mov
jne
and
dec
outs
adc
and
fadd
add
leave
movs
mov
push
loopne
mov
and
adc
xchg
and
inc
inc
call
inc
add
sub
rol
jle
sub
gs
push
pop
add
inc
or
hlt
je
shl
pop
or
sub
es
inc
xor
xchg
ins
xor
arpl
dec
mov
pop
lods
xchg
pop
add
adc
inc
es
xlat
mov
gs
or
dec
cmps
or
mov
jns
iret
or
jl
sti
clc
dec
test
inc
mov
inc
movs
inc
add
jae
daa
cmc
inc
cmp
dec
inc
dec
sub
cmc
pop
cmp
push
mov
push
sti
(bad)
inc
jmp
mov
adc
test
out
jo
or
jg
sbb
xor
mov
xor
ins
xor
sbb
xor
sbb
or
js
shr
aas
or
cmp
jne
push
adc
add
mov
push
sbb
inc
loopne
or
hlt
or
pop
cmp
mov
sbb
xchg
mov
xor
sbb
jmp
sbb
fld
loopne
mov
aas
xchg
ss
stos
(bad)
jne
test
add
pop
js
xchg
aaa
xor
movs
sub
inc
hlt
ror
add
add
mov
mov
sub
test
pushf
jmp
fcomp
xchg
add
inc
sub
mov
lahf
pop
jno
pop
or
pop
jb
pop
cmp
xchg
sbb
inc
and
nop
or
xor
add
adc
and
cmp
jbe
jbe
dec
mov
je
out
add
push
outs
(bad)
pop
sbb
sub
xchg
in
out
fild
xchg
aam
jmp
pop
dec
inc
lods
mov
cwde
or
and
xchg
push
ror
rcr
adc
sub
pop
add
xor
mov
sar
jp
idiv
je
dec
pop
inc
mov
unpcklps
cwde
sub
jmp
pop
and
mov
ret
pushf
std
leave
je
add
sbb
loopne
add
sub
adc
and
push
push
dec
cmp
mov
js
inc
cmp
aaa
dec
(bad)
mov
scas
out
lods
add
cmp
pmullw
cmp
cmp
add
fcom
iret
sub
ja
movzx
mov
push
pop
or
or
aam
mov
call
pop
mov
pop
sub
pop
mov
lea
push
push
mov
sti
daa
loopne
adc
retf
xchg
arpl
push
movs
pop
push
dec
pop
mov
inc
mov
(bad)
inc
add
and
mov
daa
push
or
cmp
test
ins
and
jmp
inc
nop
out
sub
ret
mov
sub
adc
sub
add
mul
addr16
pop
push
mov
not
push
mov
xchg
jle
push
dec
mov
mov
add
inc
push
pop
cdq
mov
inc
pusha
inc
or
add
inc
test
jne
dec
push
sbb
or
pop
movs
or
mov
loop
(bad)
loop
push
les
adc
add
enter
mov
dec
push
and
xchg
pop
jo
mov
xchg
jg
push
jnp
ret
ss
test
cmp
sbb
shl
fisttp
xor
pusha
or
lea
fadd
data16
or
add
push
push
jmp
jo
dec
adc
aas
cwde
je
and
(bad)
cld
cmp
xchg
adc
mov
movs
inc
fsubr
imul
sub
jbe
test
adc
ins
mov
cmp
add
sub
or
pop
cmp
mov
test
ss
add
lea
fwait
add
lods
pop
sti
in
lea
call
test
inc
imul
fisttp
jl
push
shl
mov
mov
pop
xchg
inc
add
out
lds
add
push
call
jae
and
jl
test
xchg
shr
call
sahf
add
mov
sbb
pop
les
test
push
jbe
add
das
jb
mov
sub
sahf
adc
xchg
and
push
sub
inc
out
dec
pusha
add
sbb
lock
adc
(bad)
enter
jge
jg
and
loopne
add
popa
pop
shl
pop
inc
or
add
aaa
sub
dec
adc
push
ror
mov
mov
lea
je
push
add
int3
mov
jmp
out
push
push
xor
pushf
and
js
popf
fscale
lock
rcl
popa
add
cmp
xor
daa
lock
shl
mov
or
push
out
push
adc
or
add
and
dec
add
dec
push
gs
repz
inc
mov
push
int
sbb
cmps
pop
nop
or
loop
sahf
out
push
adc
sbb
push
xor
and
mov
sbb
sbb
and
mov
arpl
mov
or
push
imul
mov
(bad)
push
pop
in
push
outs
sbb
cdq
aam
xchg
mov
or
ja
or
mov
addr16
std
pop
pop
mov
aaa
sbb
inc
add
test
cmp
mov
adc
fdiv
iret
or
add
push
mov
mov
pop
and
push
lea
or
jo
push
sahf
fsub
test
push
sar
cdq
sbb
out
xor
jno
sub
(bad)
into
or
lea
mov
jae
dec
xor
test
mov
mov
or
or
add
clc
push
pop
rcr
inc
xor
push
jne
pop
jp
nop
clc
adc
pop
je
xchg
adc
test
sahf
in
add
and
mov
test
shl
add
mov
(bad)
aas
cmp
inc
add
jae
imul
jmp
jp
add
cmp
ss
(bad)
dec
mov
aad
sti
add
mov
xor
pop
inc
jae
and
xchg
mov
xor
xor
adc
std
mov
enter
adc
push
xor
push
sbb
shr
jp
and
or
cmp
pop
imul
test
or
pop
(bad)
arpl
pop
std
rol
cmp
and
pop
fst
push
inc
mov
jae
das
push
sbb
pop
jmp
push
inc
in
sbb
xor
xlat
adc
mov
movzx
sbb
and
sub
test
jae
cmps
and
or
cmp
xchg
add
mov
(bad)
dec
call
jmp
pop
jl
inc
pop
and
inc
dec
jne
inc
xchg
sub
mov
adc
sbb
pop
lock
sbb
inc
push
cmps
lock
scas
aaa
push
lods
inc
lock
mov
daa
inc
xor
sub
inc
inc
push
inc
pusha
ja
lods
in
adc
xchg
xchg
or
das
or
add
mov
ins
pop
sub
mov
es
je
push
adc
fiadd
mov
mov
inc
add
push
jl
fadd
loopne
enter
or
and
add
or
and
jmp
bound
dec
cmp
push
inc
and
xchg
ret
js
adc
mov
jecxz
sbb
xor
push
xlat
push
jns
add
test
add
lea
mov
mov
fiadd
dec
cmp
mov
ins
inc
inc
sbb
and
mov
fwait
dec
mov
sub
sbb
pop
setae
pop
outs
outs
fmul
pusha
dec
inc
inc
pushf
cmp
fidiv
aad
fisub
or
enter
and
ds
jmp
cwde
add
and
aam
or
xchg
test
sub
pop
dec
js
stos
adc
jnp
mov
sbb
jbe
aam
mov
mov
and
xchg
mov
or
mov
das
out
aaa
sbb
call
mov
popf
sbb
out
cmp
jmp
and
div
test
mov
or
pop
cs
fbld
aam
test
jge
fiadd
mov
inc
adc
icebp
je
pop
shl
or
pop
test
dec
adc
sar
adc
dec
sbb
pop
jne
sub
mov
push
push
pushf
push
push
repz
ja
pop
push
out
cmp
xchg
sbb
bound
dec
xor
mov
mov
out
push
lods
rcr
cwde
mov
fstp
mov
dec
pop
xchg
mov
mov
ins
fadd
imul
shl
add
mov
add
add
mov
sbb
sub
and
icebp
mov
imul
pop
mov
(bad)
push
or
ret
push
mov
sbb
ja
pop
call
push
dec
mov
cwde
in
pop
or
push
lock
mov
sbb
pusha
xchg
fs
out
int
loope
sub
add
inc
push
and
int
mov
push
add
push
mov
push
and
push
data16
(bad)
loopne
lea
pop
ror
mov
adc
lods
adc
outs
aad
push
mov
pop
je
adc
retf
mov
add
imul
mov
loopne
and
inc
shl
(bad)
and
loop
or
push
sbb
dec
pop
pop
int
(bad)
xchg
sbb
and
add
in
in
mov
add
xchg
(bad)
data16
dec
push
dec
repz
movs
pop
jl
in
outs
pop
push
pusha
cmp
push
sti
mov
dec
adc
dec
ds
pop
mov
jle
add
push
adc
call
sbb
lahf
rol
mov
jne
xor
popa
fist
push
ins
jo
add
aaa
ins
loop
mov
add
xor
sub
mov
sti
fs
jne
cmp
adc
mov
pop
inc
mov
xor
jmp
lea
xor
xor
pop
movsx
adc
adc
add
adc
push
and
leave
pusha
and
stos
ret
ret
ss
inc
outs
call
push
cwde
or
pop
add
or
mov
mov
sbb
fisubr
das
mov
push
sub
inc
or
add
sbb
and
addr16
rol
fiadd
call
xor
pop
adc
dec
je
jne
or
mov
jbe
sub
das
stos
int3
push
sub
out
js
repz
add
inc
sbb
mov
(bad)
imul
adc
sub
movzx
pop
(bad)
je
sbb
inc
sub
cmp
out
pop
loopne
add
add
dec
or
mov
ss
sbb
or
leave
mov
ficomp
mov
add
adc
or
lea
cs
outs
cld
add
mov
inc
sahf
adc
or
mov
shl
and
int
mov
lds
inc
pop
or
sub
enter
pop
shr
cwde
shl
loopne
add
jne
cmp
xor
pushf
xor
bound
clc
push
arpl
sar
stos
je
add
dec
std
outs
mov
jne
(bad)
xor
sub
cmp
clc
and
test
pop
adc
jo
pop
imul
pop
adc
(bad)
adc
test
xor
rol
or
sub
inc
mov
sub
mov
inc
shl
(bad)
mov
inc
jbe
imul
fwait
lods
mov
jbe
push
dec
xor
push
or
sbb
and
adc
mov
jns
lods
fs
enter
js
scas
or
sub
into
or
dec
mov
pop
and
shr
jns
mov
es
ins
mov
ret
xor
dec
pop
ret
pushf
cmp
test
popa
push
pusha
inc
cli
dec
or
mov
pop
gs
bound
sbb
mov
cmp
sbb
xor
pop
push
lods
fs
mov
and
and
loope
pop
inc
mov
js
cmp
sub
movs
or
shr
jbe
rol
jnp
in
leave
std
dec
les
les
xchg
sbb
inc
or
shl
push
cli
adc
lea
sbb
adc
mov
xor
pop
loop
xchg
popf
in
shl
add
xor
and
or
js
or
rcr
sbb
les
add
inc
mov
loopne
lock
add
add
int
xor
sbb
mov
or
popa
xor
fcomp
out
jmp
adc
or
pop
cmp
or
push
inc
sbb
js
cdq
je
adc
add
shl
mov
sub
adc
inc
pusha
enter
and
push
or
jle
or
mov
mov
sahf
xor
pop
or
sbb
xor
xchg
or
adc
jecxz
add
loop
mov
add
inc
shl
lods
loope
fwait
test
and
call
test
int3
(bad)
cmp
pop
push
stos
movs
mov
and
jno
mov
test
mov
jne
movs
xchg
cmp
or
in
dec
addr16
pop
jge
lds
pop
enter
or
sbb
or
push
mov
rol
loope
mov
or
fisub
adc
fisubr
gs
sbb
popa
(bad)
mov
inc
pop
xor
sbb
cdq
xchg
jns
bound
mov
test
stos
inc
and
jmp
and
sti
add
les
fcom
or
mov
into
and
in
bnd
sub
(bad)
jnp
and
jle
push
mov
dec
add
iret
mov
into
inc
inc
dec
call
in
sti
sbb
push
mov
add
or
pop
inc
adc
int
aas
sbb
pop
mov
mov
add
iret
mov
es
jmp
imul
rcl
cmc
in
mov
xor
stos
mov
inc
mov
xchg
les
xor
cmp
(bad)
cmp
pusha
cmp
add
jbe
and
mov
add
test
(bad)
in
ja
dec
les
cmp
push
push
or
xchg
or
test
xor
lods
pop
jo
(bad)
shl
jno
test
repnz
es
pop
clc
or
loopne
scas
push
ret
sub
cmp
loop
pushf
ror
mov
xchg
mov
cmp
adc
les
call
and
cwde
pop
adc
lock
jno
mov
sbb
lods
push
xchg
xchg
inc
dec
cmp
daa
movs
gs
sbb
dec
pop
daa
pop
adc
aaa
dec
xor
sub
pusha
inc
je
mov
add
push
mov
or
push
push
push
ret
neg
aam
dec
je
adc
lea
sbb
test
jmp
scas
jmp
arpl
mov
mov
push
add
lods
add
in
rcl
adc
adc
fisttp
mov
add
lock
setne
and
mov
and
or
pushf
inc
xor
inc
mov
popa
ja
fdivr
or
out
jae
pop
xchg
mov
push
sbb
cs
pop
shl
ja
dec
and
icebp
rcl
loop
sbb
jmp
push
ret
or
pop
xchg
lock
adc
jle
mov
es
pop
mov
loop
pop
daa
and
repz
and
jl
(bad)
dec
scas
inc
mov
inc
jmp
sub
cwde
and
or
push
pushf
in
cs
ficom
and
dec
and
or
sub
mov
sbb
mov
add
out
or
test
ret
sbb
or
clc
fwait
(bad)
xchg
adc
clc
mov
fdiv
mov
sbb
jg
clc
shl
cdq
jnp
ret
shl
cmps
scas
popa
sub
inc
(bad)
pusha
mov
lds
add
sbb
mov
cmp
add
adc
jp
adc
push
mov
loope
call
mov
lock
add
mov
cld
xchg
adc
xor
aaa
(bad)
push
push
dec
sub
iret
sti
push
push
ja
sbb
test
inc
mov
xchg
dec
and
add
xor
push
cdq
inc
mov
sar
inc
mov
imul
test
in
or
add
rcl
inc
rcl
sbb
adc
ret
xchg
cmp
mov
and
aam
sub
xchg
push
adc
scas
and
dec
lock
or
fist
ja
sbb
xor
dec
xchg
fmul
dec
or
ret
(bad)
mov
or
jne
cmp
xor
xor
cs
push
mov
test
je
mov
or
dec
ss
cmp
inc
jnp
clc
inc
mov
or
aam
add
test
push
pop
push
dec
test
mov
mov
rcl
shl
and
pop
sub
cmp
mov
mov
ins
in
sbb
and
or
xor
not
and
add
aaa
pusha
test
sub
in
or
(bad)
jb
rol
mov
push
adc
dec
xor
mov
jne
ret
movs
leave
and
xor
nop
sbb
popf
push
scas
pop
xchg
push
push
test
div
mov
lock
pop
cmp
xlat
fimul
or
add
scas
test
add
repnz
add
ror
dec
fcomp
loope
push
test
push
lock
mov
neg
push
fnstcw
lods
fsubr
popf
ins
movs
cmp
les
add
inc
push
bound
movs
sahf
jp
test
push
mov
nop
out
je
push
push
cmps
xchg
push
pop
jne
add
sbb
xor
jne
sahf
pop
xchg
adc
add
xor
fidiv
push
or
fcom
in
aas
push
and
jge
out
mov
and
sub
es
rol
sbb
loop
sbb
sub
adc
dec
fst
dec
test
mov
add
mov
jmp
scas
xor
fist
xor
push
aad
push
push
rcl
push
pusha
retf
add
push
popa
test
sbb
das
push
cmp
xor
adc
pop
shr
adc
mov
icebp
adc
test
loope
add
enter
cwde
xchg
aas
mov
push
xchg
mov
aaa
mov
test
test
js
add
and
add
mov
daa
daa
sbb
mov
aas
fs
ins
rol
inc
adc
inc
js
add
add
repnz
xchg
cmp
enter
loopne
or
jne
and
and
lahf
adc
push
sub
push
pop
push
add
adc
inc
bound
aam
dec
cmc
or
push
and
pop
enter
outs
int3
add
mov
sbb
adc
cmp
or
(bad)
cmp
jne
mov
or
pusha
mov
aaa
and
mov
or
mov
aas
test
inc
fsubr
pop
jne
cmp
outs
inc
pusha
adc
cmp
push
pop
inc
push
test
fistp
add
add
push
add
mov
add
sbb
or
add
cmp
mov
mov
or
je
sti
dec
sub
(bad)
fcomp
loope
mov
adc
div
push
pop
push
sub
mov
popa
pop
lea
cli
fcom
mov
iret
mov
inc
sbb
adc
and
or
lea
lea
inc
mov
jbe
outs
adc
or
dec
ret
ja
rol
dec
add
pop
adc
popa
sbb
or
inc
inc
imul
pop
rcl
mov
adc
jp
mov
xor
js
mov
jno
sbb
push
inc
jne
pop
mov
push
mov
xchg
fdiv
sbb
add
(bad)
or
mov
lahf
pop
push
out
adc
(bad)
xchg
cmp
or
xor
loop
in
ficom
mov
dec
test
adc
jg
(bad)
mov
push
test
jne
loopne
test
js
pushf
pop
dec
and
ror
jp
inc
mov
cmp
adc
(bad)
sar
push
mov
jmp
jl
sbb
cs
leave
mov
sbb
mov
xlat
repnz
and
ret
(bad)
lods
xchg
inc
lds
dec
cmp
cmp
jb
jb
or
mov
addr16
mov
sbb
add
cmp
out
cmp
pop
jb
pop
add
push
jbe
ret
pusha
ja
stos
xchg
repnz
jmp
jbe
test
push
shufps
je
out
mov
and
push
push
dec
mov
hlt
movs
inc
or
add
ret
xor
pushf
(bad)
int3
addr16
or
mov
je
mov
adc
scas
jne
add
inc
cmp
mov
add
mov
xor
test
dec
mov
jne
xchg
arpl
adc
cwde
sahf
nop
shl
mov
mov
or
or
pop
mov
sbb
xchg
(bad)
in
shr
xor
adc
dec
ja
pop
dec
fdiv
xor
test
pop
jne
adc
xor
xor
jle
inc
mov
fsubr
xchg
xor
mov
repz
mov
sbb
mov
mov
or
fisubr
aam
clc
loopne
je
cmp
or
in
adc
movs
ret
sbb
dec
stos
mov
mov
add
xor
or
nop
nop
xor
xor
sbb
xchg
xchg
push
popa
adc
add
jle
dec
lock
hlt
and
call
in
outs
sub
mov
stos
stc
push
sahf
sbb
stos
dec
mov
adc
jl
xchg
mov
jo
pop
inc
in
fiadd
out
ins
arpl
(bad)
cmps
in
sbb
sbb
and
adc
or
clc
sbb
fimul
retf
outs
sbb
pop
push
xor
inc
mov
mov
mov
or
clc
mov
fcom
ficom
push
test
and
les
in
pop
cmp
repnz
mov
mov
add
push
push
out
imul
cdq
iret
pop
push
out
push
or
cmp
adc
mov
jp
(bad)
pop
push
mov
mov
add
imul
pop
dec
mov
and
sbb
outs
out
mov
neg
xor
xlat
daa
mov
dec
mov
clc
push
jne
jbe
dec
mov
addr16
cmp
jl
add
fsubr
out
or
fist
xor
sbb
jno
loopne
lds
and
xor
dec
push
mov
jle
and
jl
add
mov
fnsave
dec
adc
cld
xor
jne
les
pop
or
in
jne
cmp
in
mov
daa
adc
push
mov
and
sub
call
ror
add
loope
mov
mov
js
pop
jne
cmp
adc
shl
enter
pop
in
das
shl
mov
outs
push
cmp
je
test
pusha
or
pop
and
neg
imul
xlat
aas
fidivr
jo
xlat
cmp
psadbw
ret
movs
jl
and
pushf
mov
add
mov
lea
cmp
push
shr
inc
sub
call
jno
retf
push
or
fwait
call
nop
pop
mov
je
ret
or
push
dec
sub
adc
mov
sbb
cdq
jmp
dec
jo
add
repnz
test
jg
inc
fcomp
mov
xor
pop
inc
inc
pop
loope
cwde
or
jae
sub
push
pusha
adc
cmps
push
ss
pop
push
inc
adc
lock
adc
call
in
ret
or
xchg
je
pop
cmp
out
imul
adc
xchg
sbb
pop
idiv
mov
lock
not
icebp
push
mov
rcr
sub
mov
jp
xor
xchg
mov
cwde
dec
and
inc
imul
fscale
inc
or
rcl
fldcw
xor
fdivr
cmc
pop
pop
and
jmp
cld
in
pop
push
data16
mov
sbb
cmp
mov
clc
out
push
pop
or
pop
push
cdq
xchg
adc
pop
mov
add
dec
cmp
inc
push
ror
(bad)
retf
out
xor
inc
outs
add
pop
call
rcl
loopne
cmp
pushf
cmp
(bad)
aas
jl
mov
stos
test
add
dec
ins
sbb
push
mov
jb
fstp
mov
cmp
jl
push
add
pop
pop
sub
cmp
or
xlat
dec
push
add
jno
popf
sbb
js
repz
and
dec
adc
in
retf
sbb
add
pop
addr16
or
nop
push
inc
ja
popa
js
adc
inc
inc
or
mov
test
adc
jo
mov
sub
pop
or
adc
out
movs
push
test
pop
fwait
pop
push
bound
addr16
neg
nop
cwde
or
test
jl
inc
xor
xor
push
push
inc
or
movs
je
and
push
loope
loope
je
xchg
push
adc
add
adc
daa
cld
pop
add
adc
adc
out
dec
mov
jg
push
in
add
dec
jne
pusha
sti
or
push
pop
fdivr
shl
mov
add
add
pop
sbb
and
sub
push
jmp
adc
ss
pop
popa
cmp
pop
pop
je
shl
add
mov
pop
adc
cmp
sahf
aam
inc
and
sbb
pop
sbb
sbb
push
test
int
xor
je
outs
push
or
adc
(bad)
aas
mov
sub
cmp
fld
dec
xor
js
ud0
jge
mov
add
cmp
add
lea
adc
push
and
fstp
push
jne
mov
movmskps
add
xor
and
mov
std
clc
xchg
dec
std
push
popa
cmp
sahf
and
xor
std
mov
bswap
push
add
mov
push
push
mov
adc
push
stos
push
in
mov
jl
sahf
jge
sbb
add
es
(bad)
sbb
jne
or
pop
push
push
sbb
ror
fadd
fld
test
out
dec
fs
push
pop
sbb
push
scas
inc
and
xchg
jge
mov
jecxz
and
je
outs
loopne
fdiv
faddp
add
mov
ss
xchg
mov
mov
loopne
cwde
xor
fwait
dec
mov
and
push
shl
jmp
ja
out
scas
pop
sub
push
scas
pop
inc
nop
mov
cmp
ret
pop
sbb
dec
mov
add
test
fnstcw
out
daa
cmp
inc
dec
sub
jge
lea
in
fdiv
cmp
and
pop
in
push
sub
loopne
or
add
add
scas
imul
push
lods
cmc
inc
or
jbe
jne
push
neg
sbb
mov
jp
add
pop
jae
jno
aad
jl
pop
clc
add
imul
dec
dec
mov
sbb
inc
mov
xor
xor
xor
cmc
xchg
add
loopne
int
sub
mov
pop
inc
xor
cwde
pop
iret
clc
cmp
jne
push
mov
or
(bad)
pop
pop
fcomp
imul
push
into
lock
xor
jle
jmp
popf
xor
ins
or
push
retf
out
sub
adc
or
loopne
fdivr
jmp
lea
or
xor
cmp
push
inc
or
outs
sub
push
pop
arpl
add
mov
sbb
ror
push
mov
cld
push
enter
push
(bad)
and
pop
js
data16
mov
pop
cmp
sbb
les
sub
jb
dec
je
sub
stos
hlt
jmp
cmp
sub
xchg
pop
jg
pop
jl
sub
mov
int3
arpl
stc
or
test
pop
mov
add
imul
or
addr16
rol
cmps
pop
cmps
jne
jbe
mov
adc
jmp
and
je
in
cmp
cmp
or
icebp
lea
out
push
add
push
(bad)
and
repnz
in
mov
fadd
add
popa
push
cmp
ss
mov
jno
lock
push
in
inc
jo
mov
jne
repz
mov
pop
add
push
sub
sbb
mov
test
or
(bad)
cs
clc
pop
add
ja
call
add
clc
sbb
je
xor
xchg
add
pop
or
je
ja
fild
add
adc
push
je
jmp
sub
bound
ds
xchg
push
dec
cmp
inc
jne
jnp
inc
mov
clc
jne
out
push
pop
add
jge
add
inc
loopne
test
and
pop
mov
add
dec
push
cmp
por
add
jne
pop
iret
adc
dec
ja
aas
jns
add
inc
test
push
nop
mov
xchg
or
idiv
and
test
or
push
push
test
and
jp
dec
adc
addr16
les
dec
jae
scas
cmp
jne
cmp
mov
inc
or
inc
pop
jne
inc
push
pop
je
and
shr
pop
sbb
pusha
hlt
or
push
push
mov
xor
pusha
cmp
pop
mov
popf
movs
ss
dec
or
mov
sub
lea
imul
lea
fcom
rcl
les
dec
or
fwait
jmp
inc
inc
dec
or
jbe
push
je
das
in
mov
or
ret
mov
and
out
pop
mov
test
in
mov
dec
jne
jae
jle
lock
(bad)
mov
jbe
push
push
push
push
cmc
mov
enter
das
sti
adc
xor
pushf
push
xor
leave
cmp
das
or
(bad)
cmp
jmp
mov
out
and
inc
and
lods
jmp
mov
push
xlat
movs
mov
push
(bad)
jge
aad
or
test
sub
push
ins
add
push
cld
mov
xor
fisubr
dec
dec
leave
in
std
sbb
sub
enter
pop
hlt
clc
mov
jnp
or
test
ror
arpl
cmp
sbb
pop
out
or
(bad)
ins
cmc
xor
adc
ins
inc
xor
xor
mov
cmp
add
push
jmp
retf
jne
shl
pop
push
push
pop
push
add
(bad)
repnz
push
push
sbb
inc
dec
jne
retf
fcomp
cmp
push
or
xlat
add
call
lea
lock
stos
sub
hlt
imul
xchg
popa
cwde
call
push
inc
sub
idiv
xor
cmp
jg
mov
cli
pop
les
(bad)
je
mov
dec
push
mov
dec
ja
ins
jnp
mov
mov
mov
pop
sub
dec
dec
test
dec
cmp
mov
mov
lods
xchg
jmp
lea
(bad)
dec
pushf
gs
mov
fsubr
adc
jle
and
imul
add
popa
pop
jg
sub
adc
dec
adc
prefetchwt1
div
cdq
ret
test
jle
or
or
cli
test
ficomp
inc
mov
pop
fld
and
shl
dec
cli
clc
push
ret
mov
ja
adc
add
lods
push
sbb
jmp
mov
adc
pop
(bad)
xlat
mov
dec
add
xchg
loope
push
sub
pop
loopne
push
xor
jp
adc
ss
nop
or
mov
(bad)
shl
sbb
sbb
fild
retf
adc
das
fnstsw
test
add
adc
or
add
call
inc
adc
arpl
xor
and
dec
or
sbb
adc
fwait
xor
or
daa
inc
ficomp
push
mov
add
sbb
gs
dec
jne
lahf
ss
cmps
pushf
cmp
arpl
dec
xlat
dec
mov
pop
sahf
cmp
jg
inc
rol
les
push
adc
pop
add
and
cs
sbb
(bad)
push
es
and
sbb
or
jmp
jne
cs
ret
cwde
cmp
sub
push
xor
in
je
imul
push
cwde
adc
pop
mov
sbb
loope
pop
lock
cmp
and
fwait
xlat
cmp
push
rcr
add
inc
push
mov
mov
push
mov
add
or
test
aam
clc
dec
dec
pshufw
mov
push
inc
(bad)
or
xor
jg
adc
sub
test
cmp
jo
cs
adc
in
add
idiv
push
jge
and
int3
sar
add
adc
mov
scas
cdq
(bad)
mov
loop
add
cmp
jle
dec
xor
and
mov
dec
loop
cdq
or
daa
push
add
lahf
or
and
jmp
xchg
or
or
inc
add
aad
jb
sbb
test
imul
mov
popf
lods
das
xchg
cs
pop
sub
pop
cmps
ins
adc
mov
test
adc
cmovnp
pusha
and
pusha
scas
into
lahf
xor
shufps
mov
sahf
in
or
jbe
sub
out
inc
pusha
fild
push
jne
adc
mov
cmp
xchg
ds
rol
sub
clc
loope
pop
test
sar
mov
push
hlt
stos
arpl
ins
pop
outs
pop
addr16
cmp
ins
repnz
adc
aad
cmp
cmp
js
xchg
jno
push
push
ret
pop
retf
jno
xlat
and
or
or
push
cmp
mov
ret
push
cld
dec
dec
ret
fisttp
mov
int
add
lock
add
les
sti
push
xor
xchg
and
xor
int3
out
cwde
nop
adc
sahf
movs
out
fisttp
icebp
fst
jb
das
mov
inc
add
shl
in
sbb
sub
push
pop
sub
(bad)
cmp
sbb
daa
push
push
test
(bad)
sbb
push
std
loope
push
xor
scas
xor
pusha
cmps
cmp
(bad)
jmp
cmp
cmp
enter
add
cmp
repnz
ins
push
les
in
push
dec
adc
or
xchg
jmp
ins
push
add
imul
sar
push
pop
retf
sbb
or
pusha
dec
pop
out
adc
out
mov
inc
in
xor
and
ins
adc
pop
test
dec
fsub
sbb
icebp
xchg
and
sbb
ret
cwde
(bad)
es
mov
mov
jo
iret
test
mov
xor
sbb
cmp
in
and
push
movs
test
inc
scas
push
nop
adc
cmc
jne
dec
addr16
data16
xchg
fmul
push
pop
inc
les
test
hlt
stos
inc
sbb
xchg
cmp
in
push
sbb
sbb
dec
inc
add
xchg
push
in
fldenv
dec
loopne
ins
lock
jne
jnp
sbb
fsubr
or
jmp
or
pop
lock
lock
or
jne
xor
jmp
sub
sbb
jne
push
sbb
call
xchg
mov
cmp
(bad)
sbb
mov
sti
mov
cmp
lock
lock
add
cmp
loope
mov
pushf
mov
mov
movs
mov
hlt
stos
add
test
(bad)
mov
push
xor
push
fninit
jo
mov
pop
in
adc
pop
mov
aas
std
sub
sub
ficom
das
cwde
mov
add
dec
jne
push
inc
or
mov
outs
lods
dec
pop
test
or
lds
fwait
test
push
ror
cmp
push
popa
xor
rol
(bad)
mov
fdivr
leave
popa
add
movs
push
push
adc
shl
dec
test
pop
jmp
or
push
(bad)
rol
mov
jmp
fsub
mov
or
outs
cmp
cmps
adc
sar
sub
adc
inc
bound
je
adc
(bad)
cmp
inc
adc
add
add
or
data16
leave
mov
xor
mov
cmp
and
in
ds
push
add
sahf
cmp
cmp
sub
push
add
mov
dec
sbb
jb
pop
add
mov
xor
jl
rcr
sbb
jmp
xlat
sub
mov
mov
inc
mov
test
daa
jl
mov
xchg
sub
ret
daa
jbe
call
push
inc
and
imul
sbb
lock
ret
sub
sub
sub
or
mov
dec
cmp
or
xlat
sub
xchg
cli
dec
loopne
shr
sub
enter
push
aam
inc
std
mov
xor
cs
in
push
in
cwde
sbb
imul
adc
push
push
mov
std
shl
mov
cmp
outs
mov
ins
sub
jb
sub
jb
push
mov
mov
jmp
or
(bad)
out
add
ins
cmp
add
or
xchg
push
sahf
push
aas
xor
or
inc
dec
and
sub
push
mov
inc
out
mov
jo
add
cmp
add
inc
rol
adc
sub
adc
pop
jo
cmp
adc
int3
mov
bound
adc
jo
xchg
mov
mov
dec
scas
push
movd
pop
jmp
xlat
and
add
test
rol
jge
jmp
and
str
mov
mov
push
shl
loop
and
jle
adc
jmp
das
jb
xor
int3
adc
rcl
enter
adc
adc
mov
xchg
test
add
and
mov
lock
or
addr16
adc
mov
pushf
pop
sbb
sub
enter
xor
repnz
std
(bad)
push
push
jle
add
call
dec
dec
jnp
add
fsub
add
shl
int3
fmul
mov
fistp
dec
fadd
clc
cmp
cmp
xchg
aam
jnp
popa
xor
dec
sbb
arpl
pusha
dec
in
sbb
push
outs
and
add
and
add
out
test
jae
mov
or
mov
cmp
push
pusha
or
mov
mov
bound
mov
push
hlt
in
sbb
sbb
sub
sbb
sub
add
adc
xchg
adc
popa
test
pop
or
cmp
push
ss
js
inc
pusha
and
mov
add
pop
xchg
jge
adc
neg
outs
aas
mov
loopne
mov
addr16
loopne
jecxz
pop
cmp
sbb
jns
xchg
cdq
jecxz
push
pop
test
push
xchg
add
jmp
ins
sub
add
int3
stos
cld
xor
and
loopne
jle
or
xor
inc
jne
cmp
mov
ss
jo
sbb
inc
ins
mov
js
add
sub
jae
mov
js
cmps
call
mov
or
add
xchg
enter
shr
stc
in
cmps
dec
outs
and
push
push
(bad)
call
sbb
mov
mov
inc
lods
add
lea
out
sbb
pop
add
les
add
push
pop
xor
shl
cwde
aam
xor
scas
dec
cld
add
fstp
inc
pop
or
(bad)
les
ror
add
push
push
and
mov
loopne
fadd
fsub
pop
or
jg
es
dec
jle
hlt
(bad)
jmp
cli
push
repz
ret
nop
sub
es
jmp
cmp
xor
nop
rcl
outs
jmp
mov
lods
cmp
hlt
add
je
mov
add
rcr
nop
rcr
out
cmp
mov
mov
xlat
js
pusha
add
lock
fld
cmp
mov
cmp
or
xchg
clc
call
xchg
and
fnstcw
arpl
je
add
adc
inc
add
or
xor
dec
add
rcl
or
shl
mov
mov
loop
dec
cmp
sbb
xchg
ret
add
paddb
mov
and
push
(bad)
int3
pushf
adc
cld
inc
sti
test
xor
shr
add
xor
mov
mov
std
lods
aam
mul
mov
fiadd
out
xor
lock
in
push
call
scas
hlt
xor
lea
xchg
fcmove
shl
cmp
fsub
mov
fdiv
ret
ins
lods
pusha
(bad)
daa
jle
push
cmp
push
mov
pop
sub
sub
or
add
push
adc
push
and
sub
xor
or
push
mov
mov
cmp
sub
pop
pop
sub
(bad)
int3
or
aaa
lock
ds
sbb
push
arpl
push
ja
xor
adc
pop
or
jae
sub
aam
push
cmp
push
adc
in
nop
sbb
test
arpl
enter
bound
adc
in
out
add
cli
enter
cmps
pop
jmp
in
mov
push
frndint
jno
das
cmp
test
loopne
sbb
sbb
push
xor
xchg
sbb
or
popf
clc
mov
sbb
mov
pop
lock
pusha
in
gs
add
(bad)
call
mov
ficomp
movs
xor
fisubr
aad
fdiv
mov
or
or
jbe
sbb
cmp
push
jl
or
sbb
in
add
cmp
sti
jb
int3
jmp
push
mov
add
inc
test
push
sbb
and
mov
imul
fisub
push
cmp
mov
sub
cmp
test
rol
add
mov
pop
cli
adc
xor
sub
or
sub
add
dec
cmp
test
cs
adc
sbb
add
mov
mov
adc
ret
jnp
or
add
jne
lock
add
jge
sub
push
je
add
cmp
jmp
je
or
ret
in
adc
jnp
and
mov
leave
sahf
ror
dec
shr
and
and
pop
and
ss
js
add
add
jmp
add
and
sahf
pop
add
outs
je
adc
adc
push
mov
cmp
and
xchg
ja
stc
sbb
outs
add
ja
fcomip
mov
lds
cmp
pop
jb
mov
or
call
jnp
sbb
cmp
gs
inc
sbb
push
ficomp
pop
mov
xchg
add
dec
xchg
inc
cmp
cmp
sbb
mov
js
aad
pop
fadd
mov
add
inc
nop
cmp
jo
and
bound
mov
hlt
sub
sub
push
push
lock
push
and
(bad)
in
jne
or
movzx
add
mov
sbb
cmp
arpl
add
imul
popa
add
bound
add
je
mov
xchg
test
je
mov
aas
sub
cmp
ja
adc
std
adc
mov
inc
mov
pop
and
ret
or
mov
and
(bad)
lea
push
loopne
lods
mov
mov
sti
loopne
imul
rol
mov
pop
mov
xchg
dec
and
pop
pop
or
add
add
push
out
and
inc
int
rol
fcomi
ficomp
jmp
push
sbb
pop
shr
mov
bound
hlt
mov
add
rol
cmp
shr
push
fisub
xor
xchg
imul
aam
int3
jl
shl
cmps
or
loope
add
or
hlt
adc
jo
movlps
call
and
imul
ror
enter
jns
ror
int3
out
mov
aas
push
cld
xor
cld
test
fisttp
fdiv
aas
mov
or
(bad)
leave
push
call
jmp
je
or
xor
push
push
mul
dec
add
jo
dec
je
movs
xchg
adc
sub
xor
and
sbb
cmp
cld
add
dec
outs
hlt
sub
(bad)
cmc
(bad)
call
inc
test
leave
add
add
(bad)
(bad)
out
sbb
clc
mov
(bad)
push
imul
outs
ins
cmp
in
jg
add
ja
add
add
arpl
add
fnstsw
enter
push
call
pop
cmp
add
sub
push
pop
pop
add
sub
sar
sub
std
pop
in
stc
movs
inc
sub
pop
pushf
or
int3
push
rcr
mov
dec
jne
add
loopne
push
inc
fwait
mov
hlt
mov
add
out
cmp
push
sbb
iret
ins
dec
push
cld
push
ins
pop
leave
mov
cdq
mov
inc
push
js
add
add
sti
mov
jo
int3
mov
(bad)
xlat
jge
sbb
dec
mov
pop
mov
pusha
in
dec
out
js
call
jmp
(bad)
movs
imul
inc
out
add
push
sbb
push
aam
shl
out
aaa
mov
jmp
ins
adc
adc
es
cmp
fcmovnb
(bad)
rol
pusha
adc
adc
jg
push
imul
sub
ror
imul
push
or
js
push
cmp
xor
in
ret
sbb
and
jae
push
je
and
mov
mov
xor
adc
ins
ins
ins
ins
daa
lds
retf
js
ins
ins
daa
rcl
jbe
sbb
sahf
loope
shl
inc
inc
adc
hlt
sbb
inc
mov
jae
inc
sbb
jae
push
xchg
outs
xor
jb
push
push
or
xchg
jae
inc
sub
stc
sbb
cs
(bad)
mov
push
xor
jae
les
and
dec
icebp
inc
fiadd
sbb
sbb
dec
popf
xlat
jge
add
adc
or
push
loop
pusha
sub
push
xchg
and
mov
xchg
rcl
xchg
adc
and
sbb
jnp
dec
add
mov
adc
sub
sub
add
stos
aas
stos
ret
mov
dec
or
or
sbb
mov
call
add
ja
jecxz
bt
jae
add
(bad)
dec
dec
or
add
cmp
jne
sbb
sub
aaa
ret
jo
(bad)
cmp
cmp
je
or
jle
or
jmp
(bad)
and
sbb
movs
rcr
ret
jo
leave
shr
std
sar
jmp
pop
shr
dec
dec
call
push
leave
jne
sub
push
or
clc
push
faddp
mov
inc
lahf
dec
ror
mov
xor
mov
or
adc
(bad)
sbb
retf
or
jns
dec
inc
es
xor
sbb
sahf
fnstenv
sbb
ins
dec
jg
aam
add
pusha
mov
or
fcom
or
push
xor
jno
push
mov
out
adc
(bad)
pop
or
gs
pop
test
or
addr16
jbe
sbb
sub
retf
dec
jmp
movs
adc
aaa
pop
lods
add
pop
push
emms
pop
sbb
retf
xchg
or
mov
add
je
test
xchg
add
push
or
xor
(bad)
jg
mov
add
push
inc
mov
push
int
xor
fcomp
jno
lds
push
ror
inc
mov
cmps
and
loope
pop
inc
or
dec
push
adc
jo
xor
inc
and
mov
fst
clc
xchg
inc
cmp
jne
repnz
fsubr
or
pop
jbe
ins
jne
add
idiv
inc
fdivr
in
push
add
adc
push
or
lds
inc
add
cs
xlat
mul
sbb
xchg
mov
jge
dec
mov
inc
pop
sbb
sbb
or
pop
mov
or
push
adc
push
sbb
not
push
add
adc
ret
into
push
in
or
xor
mov
add
inc
sti
fisttp
test
shl
adc
push
inc
pop
fisubr
dec
out
sbb
inc
mov
lods
(bad)
jbe
jge
jge
adc
call
push
adc
mov
fadd
add
dec
cdq
cmp
mov
ja
mov
or
fwait
or
xor
movq
fs
add
ret
or
dec
int
xor
mov
and
push
mov
shl
mov
mov
and
cmp
(bad)
jle
adc
(bad)
aad
adc
ss
cmp
add
jne
test
xchg
sub
mov
or
adc
sahf
push
cmp
sub
cmp
ss
mov
pop
cmp
push
xchg
sub
push
std
out
inc
pusha
enter
pushf
inc
sub
sub
jne
ins
push
cld
push
sbb
cmp
xchg
xchg
je
sbb
shl
push
scas
retf
(bad)
movs
jae
rol
scas
out
sbb
dec
loope
sbb
inc
push
add
fadd
call
add
ror
mov
cmp
xor
lea
clc
in
push
sbb
sub
mov
dec
mov
scas
adc
mov
xor
adc
mov
inc
xchg
sbb
cmp
std
cmpxchg
mov
mov
mov
adc
(bad)
and
inc
js
xchg
add
add
rcr
push
dec
hlt
sub
(bad)
push
lea
lea
fcomp
loopne
std
test
ds
mov
cmp
setge
iret
dec
pop
cmp
out
scas
lock
sbb
and
sub
sbb
lods
mov
mov
inc
mov
les
jl
jbe
and
jae
push
mov
retf
mov
push
cwde
shl
adc
mov
cmp
jecxz
je
mov
jmp
mov
ret
adc
adc
int3
xchg
arpl
mov
or
sbb
aaa
addr16
or
mov
mov
push
adc
pop
movs
imul
push
in
adc
js
inc
(bad)
inc
or
xchg
out
xor
(bad)
jp
dec
sub
adc
adc
pop
push
ret
dec
nop
sbb
push
jmp
sbb
test
push
je
add
test
sti
inc
pop
add
cmp
mov
cmp
pop
es
push
add
cmp
jecxz
xchg
pop
sub
pop
je
jb
(bad)
jo
test
jbe
push
push
or
pushf
cli
jl
in
mov
aam
sbb
fiadd
xor
mov
mov
psubb
and
mov
or
out
out
and
or
add
xor
cmp
push
scas
inc
adc
ja
lahf
dec
clc
inc
cwde
movsx
cmp
or
hlt
xchg
add
mov
lahf
add
xrelease
cld
movs
add
out
dec
mov
jl
add
sbb
inc
dec
add
in
mov
xor
cmp
ds
mov
or
pop
jge
sbb
sbb
sbb
cwde
and
xor
repz
pop
add
cmp
jge
cmp
sub
sub
rcr
outs
add
loopne
rcl
dec
cmp
in
inc
js
xor
pop
dec
xor
pusha
test
cmp
sbb
cmps
dec
dec
loopne
cld
imul
pop
loop
mov
dec
or
inc
xor
pop
jl
inc
jbe
sub
push
jbe
test
push
jp
cmp
setl
adc
dec
sub
jns
cmp
adc
jo
retf
push
adc
xchg
jge
cs
sbb
mov
jmp
xor
mov
adc
sub
dec
inc
data16
loop
test
xchg
or
push
xor
call
pushf
popa
add
test
jno
aaa
push
popf
mov
xchg
fnstsw
inc
add
lods
or
pop
add
mov
into
inc
add
add
or
fimul
and
sbb
dec
and
fdivr
and
or
addr16
or
xor
mov
pop
rcr
inc
(bad)
in
(bad)
dec
pop
leave
pop
rol
adc
lfs
stos
movs
jmp
xor
push
fiadd
push
outs
js
cmp
adc
fcomp
xor
adc
push
xchg
push
out
sbb
scas
popa
add
and
push
retf
leave
popf
mov
push
pop
ret
or
int
add
push
outs
call
movs
xor
cld
jmp
sbb
call
cld
fdivr
sub
cmp
sahf
mov
sbb
retf
adc
mov
lock
outs
inc
push
mov
xor
cmp
je
adc
daa
add
mov
jb
mov
xor
jg
cmp
lds
mov
fadd
adc
xchg
dec
add
xor
es
test
sbb
add
sub
and
push
sub
stos
sbb
mov
sub
cli
fidivr
ss
fist
pop
cmp
cvtpi2ps
mov
fsubp
aad
sub
xlat
add
or
fsub
and
clc
movzx
pop
xchg
loopne
jnp
xor
xor
clc
push
lahf
loopne
or
or
mov
imul
mov
mov
mov
shl
dec
or
stc
sar
xchg
fwait
clc
inc
sbb
inc
rcl
in
inc
adc
sbb
or
imul
cmp
dec
push
call
ins
iret
mov
dec
sti
jecxz
rcl
lahf
leave
test
rol
pop
in
pop
mov
dec
inc
pusha
and
bound
xor
push
xchg
mov
and
xchg
dec
or
fnstcw
push
ret
xor
cmps
mov
fsubr
arpl
mov
aaa
ss
cmc
add
stos
or
dec
adc
mov
mov
(bad)
push
xor
mov
popa
mov
rcr
pop
fwait
gs
adc
adc
push
dec
add
ror
outs
cmp
jnp
push
sar
sbb
jmp
mov
test
or
pop
add
push
xor
mov
adc
call
mov
inc
fs
and
rcr
js
and
add
xchg
loope
push
cwde
sbb
(bad)
addr16
ja
jno
mov
ret
dec
test
and
inc
or
and
inc
push
jne
js
stos
fs
test
movs
sbb
adc
sbb
add
sbb
movzx
jmp
mov
popa
add
push
cmps
inc
je
lahf
xchg
jbe
div
mov
add
test
shl
xor
outs
xor
mov
push
jne
cmovs
add
cld
(bad)
clc
retf
outs
push
jmp
xor
mov
add
fs
push
mov
add
cs
push
ret
add
in
mov
sub
pop
hlt
jg
imul
adc
cmp
or
adc
jmp
mov
mov
pop
fld
sbb
in
mov
xchg
(bad)
mov
jo
inc
mov
jp
jne
mov
mov
jmp
inc
xchg
push
retf
adc
sahf
cmp
or
(bad)
js
rcl
mov
cmp
jne
push
popf
push
lahf
loope
inc
cmps
pop
dec
jne
and
mov
sbb
cmp
or
mov
add
push
adc
sub
dec
mov
dec
add
push
inc
pop
fwait
stos
mov
call
mov
push
sub
sbb
ins
jmp
cmp
push
icebp
mov
jmp
ret
movs
clc
sbb
cmps
out
pusha
fnstcw
xor
cmp
and
adc
cld
push
push
ss
adc
push
push
adc
and
bound
jmp
inc
pop
mov
sbb
push
mov
cdq
idiv
test
aaa
ror
mov
cmp
sbb
stos
jecxz
inc
call
adc
out
add
or
jmp
or
mov
test
jg
pushf
push
add
je
call
cs
or
mov
add
inc
xlat
xchg
je
lods
nop
sbb
inc
jle
loopne
and
aam
add
mov
cld
adc
add
jmp
imul
cmp
pop
adc
add
cmc
rcr
lock
cmp
push
jge
cmp
push
cmp
stos
imul
inc
pusha
lods
jo
ficomp
xor
mov
jmp
pop
out
mov
out
jecxz
outs
or
or
pop
pop
push
pop
or
adc
fild
cmp
aas
test
ds
movs
push
adc
loop
inc
push
inc
fcomp
popa
sub
adc
pop
shl
add
adc
in
sbb
cmp
push
sbb
pop
or
sub
fnstcw
jo
push
jne
mov
cmc
xchg
je
and
in
enter
adc
add
push
adc
nop
outs
(bad)
not
jl
je
div
lea
xlat
xor
add
loopne
and
xor
aaa
dec
push
lea
push
mov
pop
or
add
mov
js
out
sub
lds
call
lea
int
jo
xchg
inc
int
push
sub
popf
out
or
push
dec
call
inc
ret
mov
and
inc
or
jg
mov
jne
daa
push
ror
add
pusha
addr16
and
push
jle
adc
idiv
mov
jns
fcom
enter
ss
ins
dec
push
and
cmps
xchg
mov
daa
in
sbb
jg
add
jle
adc
sbb
push
dec
pop
popa
test
pop
pop
fwait
into
push
push
cmp
ret
mov
push
xchg
dec
mov
int3
(bad)
pop
sbb
inc
mov
shr
adc
dec
hlt
mov
xor
test
lods
popa
adc
movs
push
jbe
aaa
in
xor
jo
pop
loop
adc
jmp
ins
fsub
cmp
jne
or
jns
mov
dec
cld
sahf
mov
loopne
rol
in
push
out
mov
jl
cmp
scas
dec
add
jp
imul
mov
pop
adc
shl
inc
ror
mov
inc
hlt
jbe
pop
sahf
fst
test
and
sbb
repnz
pop
jge
fmul
jl
inc
xor
test
pusha
fdiv
sub
mov
pop
jae
inc
dec
jne
sbb
test
push
repz
scas
enter
push
fnsave
inc
add
mov
mov
out
dec
dec
mov
or
sub
ins
jge
dec
jmp
add
pusha
mov
cmp
outs
xchg
(bad)
les
push
xor
fcomp
add
sbb
push
fs
sub
and
inc
adc
or
call
add
xlat
ins
dec
sub
jae
jmp
ret
add
add
cmps
inc
ret
dec
cmp
push
mov
ins
sahf
xor
out
inc
cmp
mov
jb
clc
sbb
adc
jl
js
add
icebp
or
pushf
pop
aaa
fdivr
sub
aaa
xor
add
mov
jbe
rol
clc
cmp
fs
fisttp
sbb
push
inc
add
add
push
aam
or
push
test
and
pop
and
mov
ret
or
outs
out
xor
xchg
call
mov
pop
xchg
mov
cmps
inc
fisubr
push
inc
mov
bswap
cmps
mov
and
pop
sbb
dec
pop
pop
les
iret
cmp
inc
mov
xchg
ins
aam
ret
jmp
mov
mov
jle
out
xor
xchg
add
jo
add
sbb
sbb
test
jne
les
loope
cli
das
jno
fsubr
jge
fsubr
inc
aam
sbb
mov
cmp
sbb
push
xlat
pop
adc
dec
call
add
dec
add
xchg
mov
iret
test
jge
and
movs
mov
xor
fnsave
shl
pop
retf
aas
push
cmp
test
push
imul
add
add
add
adc
add
push
cmp
sub
mov
xchg
dec
dec
jne
lahf
adc
(bad)
sbb
mov
adc
xor
pusha
mov
ins
pushf
clc
jge
mov
aaa
xchg
fsub
fstp
pushf
(bad)
jmp
mov
movs
sub
repz
nop
or
add
mov
push
outs
dec
mov
out
adc
not
jne
and
iret
adc
mov
fbld
fistp
fsubr
sbb
sbb
push
dec
pop
(bad)
and
jge
dec
pop
lods
push
and
icebp
xor
test
icebp
or
inc
adc
ss
inc
add
es
outs
hlt
sub
mov
mov
cmp
ins
inc
xor
add
lock
or
ins
sub
fistp
mov
xchg
cmp
ins
fstp
jmp
xor
add
gs
jns
mov
aam
adc
shr
inc
sbb
call
fadd
inc
and
xor
push
sbb
jge
pop
or
scas
fiadd
or
sbb
sbb
add
loopne
adc
push
inc
ins
pop
sbb
push
cwde
call
cmp
pop
cmp
push
mov
sub
sub
fimul
js
jmp
leave
daa
sbb
movs
fdivp
(bad)
(bad)
mov
mov
sbb
dec
ret
ret
xor
jecxz
mov
jne
sbb
inc
sub
or
add
cmp
push
or
push
call
add
sub
xchg
adc
cmp
test
xchg
mov
mov
adc
push
sahf
popa
lahf
clc
repnz
push
movs
cwde
push
jle
dec
add
div
je
leave
cld
dec
sbb
cmp
jg
or
pop
sahf
add
cmp
and
add
push
mov
shl
adc
add
call
add
sub
cmp
jge
or
add
outs
idiv
adc
jl
or
out
jbe
pop
sbb
push
xchg
jg
idiv
imul
xlat
stos
add
and
sub
push
mov
add
ret
mov
sti
imul
cli
aam
(bad)
sar
dec
cmp
jl
sub
loope
cmp
das
icebp
mov
xor
jmp
call
movs
adc
sub
mov
sub
mov
push
and
dec
push
cmp
clc
call
mov
test
or
push
adc
in
and
xchg
lahf
xchg
sub
add
test
mov
popf
test
cmp
das
and
mov
inc
inc
adc
dec
cmp
iret
mov
xchg
add
add
int
std
xchg
add
sub
lea
or
into
sbb
loope
call
call
lods
rol
sbb
adc
sbb
nop
imul
add
push
ret
mov
daa
js
scas
mov
pop
mov
ret
and
push
adc
loopne
mov
jl
lods
jp
or
je
jo
(bad)
jmp
push
shr
jmp
(bad)
daa
xor
pusha
or
lahf
cmp
retf
or
adc
xor
rcl
add
(bad)
or
shr
hlt
add
push
ror
pusha
inc
stos
pop
cmps
cmp
xchg
cmp
scas
(bad)
gs
pop
movs
jae
pusha
cmp
sub
push
add
cmp
add
sbb
push
test
cmp
xchg
adc
rol
imul
or
dec
or
cmps
leave
test
psrad
scas
mov
push
xchg
dec
aam
mov
xchg
adc
mov
jbe
je
inc
ffreep
fsub
and
pop
out
loopne
xor
sub
jge
push
loop
mul
mov
outs
aad
xchg
loope
(bad)
mov
jo
or
pop
mov
lea
sbb
(bad)
xchg
pop
jmp
pop
xor
loope
imul
les
add
cli
pop
shl
and
out
mov
in
lahf
ins
aaa
dec
test
mov
(bad)
or
jo
cwde
pop
and
popa
adc
mov
imul
aaa
lea
sbb
test
mov
adc
stos
and
call
dec
jne
test
xchg
stos
ret
je
cmps
fisubr
rcr
mov
push
out
aas
inc
xor
xor
les
cmp
and
ret
push
je
ret
lea
xchg
and
sbb
std
xchg
inc
and
sbb
pusha
stos
and
jo
lods
test
inc
fwait
push
and
pop
and
loopne
pop
fs
cmp
lods
pop
outs
sbb
cmp
or
jne
mov
imul
jbe
fsub
pop
or
jae
jp
rcr
inc
out
dec
pop
jge
pop
add
mov
pop
jae
aas
jle
pop
loopne
push
test
jle
mov
cmp
push
and
cli
loopne
not
sbb
inc
mov
and
lods
repz
lahf
js
sbb
retf
scas
adc
mov
dec
stos
popa
sar
ss
test
fisub
into
test
aad
ja
das
cwde
push
shr
xor
add
xor
test
call
add
sub
jo
push
mov
loopne
xor
or
or
add
sbb
cmps
test
xchg
adc
cld
repnz
inc
pop
add
clc
pop
cli
mov
pop
and
aam
ss
das
rol
cmps
dec
sbb
ret
or
and
sbb
pop
jae
sbb
test
test
fdiv
dec
and
shl
or
jno
unpcklps
cmp
sbb
lock
adc
inc
xor
sbb
adc
stos
adc
cwde
pop
into
dec
out
fstp
pop
and
inc
push
add
or
icebp
inc
mov
inc
lock
or
or
sub
add
fimul
sub
or
ror
sub
mov
mov
and
pop
in
ja
inc
test
push
sbb
ror
inc
in
xor
or
xchg
mov
sub
inc
mov
and
cmp
sub
icebp
dec
sub
or
xor
adc
mov
aaa
ret
sub
aaa
add
cmp
addr16
add
dec
cmp
xchg
and
rol
xor
loopne
stc
call
aaa
popa
push
add
daa
mov
(bad)
(bad)
shl
das
loope
jnp
add
int
sbb
cmp
push
or
add
xchg
enter
out
mov
xor
mov
cmp
xchg
cmp
adc
(bad)
adc
scas
jmp
hlt
jne
inc
bound
and
cmp
movs
out
cmp
push
add
and
scas
into
cmp
pop
push
lods
add
fst
loope
mov
call
cmp
xchg
or
retf
xor
mov
sbb
dec
popa
adc
jmp
xchg
cmp
nop
(bad)
fdivr
rol
xchg
push
mov
outs
pop
enter
pop
cmp
lods
sub
rcr
mov
sar
inc
rol
push
mov
cdq
arpl
inc
ins
and
dec
pop
ror
cmps
mov
sub
add
jle
push
mov
les
pusha
inc
push
and
pop
cmp
pop
pop
hlt
wrmsr
(bad)
or
ret
xor
es
xchg
sar
jns
adc
jmp
cmp
pop
push
sub
mov
jle
push
push
jne
add
jmp
hlt
add
jo
test
cmp
jmp
push
loope
adc
push
aas
fstp
int3
sbb
push
in
lods
add
mov
cmp
fwait
(bad)
xchg
call
scas
xor
mov
dec
push
pop
mov
cvtpi2ps
cmps
push
nop
sub
mov
inc
dec
jo
pop
sbb
sub
sbb
push
cmp
jne
inc
and
mov
mov
iret
into
cli
lgs
jne
jl
cmp
pushf
mov
enter
shl
leave
push
add
cdq
mov
jmp
inc
inc
inc
(bad)
mov
jnp
and
and
mov
pop
adc
add
pop
addr16
mov
in
and
sbb
call
in
jo
jg
mov
add
or
inc
adc
das
mov
sub
add
(bad)
mov
mov
mov
cmp
and
mov
xor
jno
cmp
mov
mov
pcmpeqb
sub
pop
mov
sbb
sbb
xchg
adc
lods
mov
cmp
add
xchg
rcr
sub
ret
xchg
les
jle
aam
loopne
adc
inc
jle
out
add
xor
test
mov
outs
or
mov
sbb
sbb
(bad)
or
fcomp
push
adc
icebp
push
in
push
fcom
jp
jne
sbb
xchg
inc
jo
sbb
inc
mov
cmc
add
jmp
jmp
fwait
inc
jo
pop
(bad)
adc
cs
je
sub
sub
cmp
sahf
rol
mov
mov
jecxz
cmp
cmc
int3
sbb
xor
test
add
(bad)
pop
mov
xor
sbb
(bad)
js
cmp
sub
add
adc
clc
sub
(bad)
ins
pop
or
and
add
xor
mov
aam
test
add
xor
push
fdiv
(bad)
and
pop
hlt
cmps
(bad)
fwait
mov
enter
cmp
int
(bad)
call
mov
jle
xchg
in
(bad)
movs
sub
inc
push
sub
popf
inc
and
pusha
loopne
(bad)
ds
cmp
rol
lahf
test
push
xchg
adc
xor
ins
pop
ins
data16
sub
push
sub
inc
ficomp
inc
out
mov
jae
out
xor
sbb
cmp
jne
mov
out
out
ret
fild
fmul
add
and
lds
mov
adc
arpl
jb
gs
call
mov
push
mov
les
arpl
outs
outs
je
add
out
outs
ins
jae
add
sub
je
cmp
daa
xchg
ds
mov
dec
rcl
nop
test
jle
sub
popf
mov
test
mov
jne
adc
jle
add
sbb
setnp
jmp
lock
mov
arpl
test
add
or
rcl
jne
popa
push
sbb
or
or
movs
add
xor
push
ret
rol
scas
xor
pop
pop
out
xchg
sbb
push
rcl
cmp
cs
and
xchg
inc
loopne
mov
adc
adc
jno
jae
push
push
adc
ins
sub
or
nop
daa
xor
arpl
inc
lock
ret
loopne
daa
in
mov
leave
xchg
xchg
inc
cmp
jmp
in
hlt
jl
push
jae
fdiv
cmp
inc
je
mov
or
push
pop
adc
les
clc
xchg
or
fsubr
add
add
cmc
fs
sbb
xor
xor
adc
js
in
adc
add
call
or
push
ins
pop
push
data16
lock
pop
dec
jne
mov
mov
or
in
jae
pop
in
scas
es
mov
and
mul
xchg
sub
xchg
loop
outs
jo
mov
inc
inc
pop
cwde
(bad)
int3
sar
inc
loope
and
cli
adc
sub
xchg
cmp
shl
pop
in
push
sub
add
popf
xor
mov
or
popf
shr
lds
sub
xchg
not
jl
and
pop
jge
dec
stc
cmp
scas
push
sti
inc
sub
call
fdivr
cmp
jne
adc
in
add
lock
mov
xor
push
xor
clc
mov
dec
mov
cdq
cmp
mov
lods
movs
and
push
xchg
clc
mov
inc
push
pop
add
xchg
and
add
ins
fnstsw
(bad)
retf
fstp
mov
jno
xchg
push
shl
inc
scas
add
into
je
aad
jo
adc
add
mov
xor
icebp
lea
movs
movs
mov
push
pusha
or
and
mov
mov
adc
daa
je
pop
rol
lds
or
add
pusha
add
mov
xor
scas
or
shl
in
das
mov
(bad)
rcl
xor
pop
cmp
xor
es
outs
in
push
adc
jp
sbb
add
sbb
add
rol
dec
jmp
push
inc
imul
xor
pop
and
pop
pop
push
sbb
xlat
add
or
stos
pop
inc
jbe
push
dec
xchg
packsswb
(bad)
inc
out
pop
mov
jo
jl
jne
or
sub
in
push
je
(bad)
xchg
pop
cmps
shr
scas
js
add
test
je
sub
add
xor
das
cmp
mov
sub
arpl
inc
int3
add
adc
ins
mov
add
adc
jmp
addr16
popa
push
and
xlat
mov
icebp
or
arpl
rcr
push
or
adc
mov
add
dec
sahf
mov
out
lock
dec
adc
push
dec
add
cwde
loopne
mov
arpl
inc
popa
or
scas
pop
or
mov
stos
unpcklps
inc
adc
and
adc
jbe
xchg
mov
cmp
or
fwait
add
das
aaa
je
add
ret
div
dec
js
cmp
jge
push
jmp
jne
mov
outs
cmp
and
test
and
in
adc
inc
add
push
push
adc
and
cwde
movs
jne
sar
rcl
scas
loopne
pusha
lock
jg
mov
inc
loop
mov
push
xchg
push
loopne
pusha
nop
cmp
es
rol
pop
clc
sub
mov
mov
jmp
lock
idiv
out
loopne
daa
aaa
inc
ss
outs
add
fsub
add
fisttp
or
cmps
or
aaa
add
fadd
mov
or
aas
dec
cwde
xor
jmp
xor
jno
inc
mov
popa
add
rol
push
fiadd
sub
ss
test
ins
prefetch
mov
unpckhps
enter
mov
cdq
fadd
push
imul
push
call
xor
les
inc
jo
mov
int3
cmc
fistp
std
ss
sbb
sahf
fcom
cs
cmp
add
mov
push
aaa
jmp
xchg
cld
push
outs
and
add
mov
dec
js
pop
cmp
cs
aad
lods
leave
mov
stos
js
push
and
mov
popf
pop
inc
pop
arpl
hlt
sub
loop
hlt
push
fdiv
jns
xor
mov
sbb
inc
sbb
cmp
sahf
mov
div
cli
xchg
fcmovb
push
call
mov
loopne
pusha
or
mov
pusha
(bad)
test
not
and
or
dec
mov
jle
mov
imul
aas
inc
cmp
push
inc
movs
push
and
js
lea
je
adc
pop
cs
add
ja
mov
jmp
into
ret
loope
mov
int
lea
(bad)
add
scas
(bad)
push
or
add
jmp
cmp
sbb
loope
fisubr
and
mov
sub
lods
loop
std
lock
and
jno
cmp
aaa
pusha
jb
fimul
sub
mov
jne
sti
mov
mov
test
sbb
or
sbb
push
lods
push
addr16
movzx
sbb
out
mov
aas
dec
loope
xor
fcom
enter
cmp
inc
mov
mov
or
adc
lods
lahf
ins
add
adc
dec
mov
add
pushf
lea
xor
cmp
push
loopne
ss
outs
xchg
test
jne
or
test
lods
fdiv
test
xchg
ret
rol
pop
adc
mov
cmp
adc
inc
enter
mov
mov
fimul
push
sbb
add
lods
mov
(bad)
ja
daa
rol
call
out
fwait
enter
repnz
test
es
dec
sbb
push
cmp
push
xor
xor
mov
cs
fisttp
and
cwde
fdiv
pop
fimul
imul
sbb
mul
cmp
inc
mov
inc
fdivrp
fmul
sub
out
rcr
outs
cmp
jne
lahf
sbb
stos
cmp
sbb
(bad)
mov
inc
inc
push
add
sub
inc
add
push
sub
in
push
adc
sub
pop
pop
sub
push
loopne
shl
inc
or
sub
pop
cmp
shl
add
or
xlat
inc
lds
mov
mov
test
sbb
push
test
je
push
ror
test
adc
cs
lock
fsubrp
pop
stos
rcl
retf
inc
adc
cwde
push
xor
jo
cmp
loopne
or
and
aaa
xor
in
push
popf
adc
sbb
or
dec
loopne
in
jns
mov
outs
and
jne
push
push
inc
imul
les
cmp
out
stos
or
inc
mov
cmp
fidivr
adc
cmp
or
sub
or
fbld
mov
mov
add
or
jb
inc
cmp
jo
xchg
test
dec
cmovs
lods
pop
cmp
jl
call
dec
push
pop
leave
out
daa
inc
mov
sub
xor
xor
leave
enter
imul
xor
dec
push
jg
push
movq
push
or
cli
fst
cld
cmp
inc
inc
pop
das
ret
xor
mov
jae
pop
pop
jp
aam
cmp
jo
fcom
sub
test
in
dec
mov
stos
xchg
jne
pop
add
push
xchg
jno
adc
outs
push
push
xor
daa
and
cld
adc
sub
xor
push
cmc
push
(bad)
leave
or
adc
in
mov
sahf
jmp
rcl
movhps
fisttp
ror
mov
test
add
pop
dec
jmp
push
ret
or
adc
dec
xor
jo
jp
pushf
aas
aas
adc
xchg
add
bound
pusha
and
clc
or
xor
push
jmp
mov
scas
sub
mov
xor
inc
push
inc
sub
push
inc
mul
and
and
add
fldenv
cmp
ds
popf
dec
dec
push
adc
mov
test
lea
pop
or
cld
fdiv
popa
retf
pusha
and
mov
rol
movs
inc
ins
test
aas
mov
addr16
fiadd
mov
jbe
mov
mov
adc
pop
mov
adc
mov
cmp
or
adc
mov
mov
mov
inc
mov
das
fcmovnu
pop
psraw
fs
mov
enter
or
aad
shr
or
fwait
inc
pop
data16
adc
mov
call
sub
mov
sbb
pop
adc
enter
fmul
pop
push
xlat
pop
out
jmp
and
or
or
call
add
add
cmp
fmul
push
mov
pop
sub
loop
xchg
or
nop
loopne
mov
push
mov
sbb
cmp
inc
mov
loope
std
or
lock
xor
inc
mov
mov
pop
lea
ret
ss
bsf
fs
push
mov
sub
push
mov
lea
adc
sar
push
or
and
sbb
dec
jg
inc
push
cmp
je
xor
jbe
stos
jne
add
sub
push
xor
jp
jmp
add
mov
test
shl
push
in
aaa
mov
push
sub
leave
mov
add
pop
jo
dec
fmul
mov
add
or
and
iret
movs
stos
clc
stc
inc
mov
sbb
pop
fsubr
cld
jmp
adc
pop
ins
sub
cmp
mov
push
call
pop
js
or
adc
push
mov
add
push
push
push
cmp
dec
push
es
lock
cmp
fcmovnu
push
mov
xchg
mov
jl
out
ins
call
add
imul
add
xchg
add
scas
rol
and
jo
(bad)
test
xchg
xchg
fst
inc
push
js
xor
and
inc
push
jmp
div
sti
add
mov
dec
jl
push
rcl
aaa
jge
push
inc
push
mov
cmp
call
inc
mov
push
dec
lahf
mov
push
xchg
and
cmp
into
add
js
jp
inc
mov
stos
jle
pop
lock
mov
cmps
xor
test
push
call
push
push
in
lahf
lds
daa
dec
jmp
push
adc
outs
xor
loopne
mov
nop
rol
aad
ret
jmp
repz
pop
xchg
adc
mov
inc
mov
mov
mov
jne
cmp
test
pop
mov
fsubr
mov
jle
(bad)
sti
mov
cwde
movzx
mov
enter
enter
or
cmp
sbb
mov
push
and
or
stc
mov
or
(bad)
pusha
pop
jo
sbb
pop
mov
bts
aam
mov
nop
push
aaa
add
jg
or
mov
push
popa
xlat
pop
mov
adc
jo
add
cli
push
in
call
add
mov
mov
xlat
push
mov
rcr
adc
xchg
adc
aas
daa
cld
add
fs
ja
jbe
sbb
lock
std
ins
aas
jno
out
adc
pop
xor
dec
pop
xor
push
xchg
scas
adc
cmp
mov
repz
mov
push
cmc
jmp
sub
gs
(bad)
mov
aam
push
lock
int3
bound
repz
popa
pop
jo
xchg
and
(bad)
stos
fsubrp
setg
or
push
mov
inc
or
inc
add
push
cs
pop
js
and
test
pop
mov
add
outs
in
add
push
push
jo
add
clc
add
ins
addr16
push
add
pop
add
data16
test
arpl
dec
mov
push
dec
xchg
jp
popa
push
es
xlat
sub
add
retf
add
data16
ss
inc
dec
inc
push
push
push
or
ja
dec
add
push
jno
push
icebp
cld
mov
rcl
push
mov
(bad)
aaa
add
out
call
adc
xor
loopne
push
xor
xchg
inc
rcr
outs
mov
xor
dec
or
push
add
adc
push
cmp
or
mov
call
sub
inc
or
fmul
add
enter
(bad)
push
sub
je
dec
je
add
mov
dec
or
or
data16
ret
ret
sbb
and
sbb
push
pusha
sbb
in
sbb
add
xchg
mov
cli
imul
add
push
push
add
jle
mov
into
cmp
stos
or
rcr
push
loope
push
in
inc
bound
mov
fadd
ror
sbb
or
cmp
fisttp
inc
add
and
add
and
add
adc
ret
add
mov
lods
add
adc
mov
pusha
aam
or
pop
xor
sbb
ficomp
push
loopne
push
arpl
add
mov
fmulp
or
inc
daa
fcom
movs
outs
mov
mov
scas
adc
and
add
out
pop
xchg
and
push
xor
sbb
jp
(bad)
test
out
inc
ret
ret
or
lds
or
dec
cmps
adc
leave
dec
jae
pop
push
or
fcomp
pop
add
sub
xchg
pop
pop
lods
ficomp
xchg
mov
dec
arpl
sbb
mov
imul
mov
adc
dec
jo
lods
inc
xchg
jmp
sbb
jb
fadd
arpl
adc
mov
pop
ficom
(bad)
or
push
cwde
out
sub
mov
es
clc
sahf
call
or
or
mov
or
push
sbb
mov
mov
js
pushf
adc
test
push
or
inc
pusha
adc
stos
push
in
xor
jbe
jl
call
or
push
adc
xor
cmps
sub
pusha
cld
enter
push
ins
or
in
add
add
les
inc
and
dec
ficomp
int3
push
call
fnstcw
dec
push
mov
shl
retf
aam
xchg
xor
inc
pop
ret
push
inc
pop
(bad)
repnz
adc
outs
jb
pusha
add
repz
mov
or
sar
mov
or
inc
pop
scas
jne
movs
(bad)
dec
inc
ins
xchg
cmp
fcom
ret
push
es
call
pushf
ret
mov
test
push
mov
cwde
adc
inc
mov
add
jo
mov
or
or
and
loop
les
adc
sbb
rcl
dec
ror
xlat
dec
dec
stc
inc
mov
cmps
mov
cmp
push
pop
scas
push
push
add
mov
mov
push
cmps
sub
fcomp
int3
lock
or
test
jae
lea
lock
push
xor
icebp
mov
mov
and
movs
jbe
into
sbb
cmp
push
cmp
mov
fs
sbb
(bad)
and
mov
jne
cmp
es
mov
repnz
sub
xchg
xchg
scas
aas
das
sub
daa
(bad)
sbb
(bad)
sbb
sbb
inc
mov
add
pop
cld
aaa
and
add
add
xchg
cmps
jl
mov
in
cmp
xchg
jns
fidiv
and
cmp
jle
shl
fs
test
mov
hlt
addr16
dec
push
sar
cmp
pusha
lods
xor
mov
mov
dec
dec
mov
test
xchg
(bad)
jmp
nop
ror
push
mov
popf
inc
mov
push
(bad)
push
pop
hlt
xchg
push
pop
and
lahf
cmps
std
xor
dec
push
pop
push
sub
pop
push
push
mov
movs
jae
movzx
in
push
and
in
fs
sub
mov
nop
mov
mov
push
repnz
retf
jae
clc
or
cmp
jne
aas
adc
mov
adc
xor
push
movs
scas
jnp
pusha
jbe
pusha
sbb
dec
dec
pop
mov
loop
pop
sub
mov
lock
cdq
aad
jno
xchg
popa
daa
mov
and
cmp
in
mov
inc
xor
inc
push
rcl
call
xor
sbb
in
xor
xchg
stos
fisubr
add
push
test
mov
movs
cmps
xchg
loopne
(bad)
fild
shl
jmp
lea
lea
mov
push
mov
inc
call
pusha
jo
mov
arpl
sbb
lea
xlat
scas
sbb
sub
aam
mov
jne
repz
push
imul
popf
mov
les
mov
and
xor
cmp
add
test
xchg
gs
test
mov
sbb
push
add
in
ret
sti
leave
mov
add
in
jecxz
inc
add
mov
arpl
popf
(bad)
push
cmp
les
fmul
test
movs
mov
xchg
sbb
push
or
xchg
xchg
hlt
pop
or
push
inc
int3
sub
sbb
lods
in
movs
imul
jp
inc
dec
popf
push
in
push
add
sahf
jg
dec
xchg
push
in
or
pusha
mov
jb
iret
dec
ins
pusha
mov
outs
aaa
jmp
(bad)
sub
mov
jbe
and
jmp
popa
mov
mov
loopne
test
inc
mov
(bad)
push
cli
mov
inc
inc
outs
mov
mov
mov
add
pop
mov
or
mov
ins
and
pop
popa
adc
mov
sbb
fnstsw
ins
sar
pop
sbb
sub
(bad)
fld
xchg
pushf
jl
add
adc
inc
jne
push
mov
lods
jl
adc
aaa
mov
jmp
mov
push
pop
or
or
add
cmp
or
hlt
inc
and
add
and
push
fimul
push
and
rol
loopne
ficom
sub
test
dec
push
sub
icebp
mov
mov
sub
or
dec
inc
mov
push
sbb
in
inc
mov
adc
jae
into
mov
lods
jge
ds
dec
je
push
inc
sub
test
dec
mov
jle
das
inc
pop
push
sbb
sti
and
rcl
movzx
and
add
push
or
mov
jp
aam
mov
pop
or
fstp
jbe
ja
(bad)
jge
or
inc
dec
jne
sbb
pop
cmp
and
mov
retf
sbb
mov
mov
push
adc
mov
sti
add
inc
cmp
mov
add
mov
push
push
ds
cld
sub
arpl
add
rol
retw
adc
jg
cmp
sub
inc
push
loopne
fist
jne
cdq
cdq
or
call
sbb
mov
retf
pop
rcr
jecxz
out
inc
ds
pop
pop
and
jae
push
loopne
je
loope
jo
and
sbb
cmps
ret
nop
test
add
inc
out
add
push
fs
or
sbb
rcl
sub
pusha
(bad)
xchg
fdiv
or
test
adc
loope
xor
cwde
shr
sub
ds
dec
pop
mov
inc
pop
push
out
arpl
dec
call
cmp
adc
out
jge
and
fwait
and
adc
mov
call
movs
js
jp
enter
(bad)
or
mov
xor
sub
xor
jge
fmul
cmp
mov
lods
lds
(bad)
addr16
mov
mov
ret
(bad)
arpl
aaa
dec
adc
sahf
add
in
call
nop
xchg
movs
ret
pop
clc
xchg
js
aam
pop
mov
add
add
xchg
or
test
push
or
pop
shl
add
int3
fimul
or
scas
fadd
ins
stos
push
jge
pushf
pop
icebp
mov
and
call
inc
mov
mov
fist
push
movs
pop
push
mov
fcom
jbe
adc
adc
dec
stc
sbb
sbb
xchg
pop
jb
pop
fwait
xchg
imul
inc
jno
(bad)
int3
add
push
xchg
inc
pop
xchg
pop
xchg
jne
lahf
jecxz
or
pop
jg
push
and
adc
sub
(bad)
sbb
jmp
imul
push
fcomp
or
mov
(bad)
jle
push
cwde
clc
add
jne
fimul
cmp
xor
jne
jns
int
scas
xor
mov
push
mov
bound
cwde
sti
sub
and
jg
jo
daa
dec
(bad)
pusha
dec
jnp
pop
in
ret
out
icebp
aaa
cs
test
jo
es
or
mov
mov
mov
pop
nop
push
in
jb
and
inc
push
add
call
and
loopne
(bad)
(bad)
lea
pop
and
add
or
or
cmps
dec
add
outs
cli
inc
mov
loop
mov
push
hlt
fwait
dec
data16
cli
into
movzx
mov
daa
pusha
cmp
adc
hlt
jbe
shl
xchg
rol
fwait
sbb
mov
xor
movzx
data16
jmp
and
lods
add
xchg
loop
scas
mov
test
mov
sub
into
mov
add
and
push
push
inc
ja
mov
stos
inc
div
mov
ss
inc
jmp
dec
in
adc
mov
xor
ja
ins
lock
cli
inc
add
mov
pop
xchg
cmp
loope
dec
daa
mov
clc
push
pop
enter
jae
je
mov
jo
js
loopne
sub
loopne
mov
xor
adc
add
push
fisub
je
lods
rol
sub
mov
je
sbb
movs
mov
jo
ins
and
sbb
shl
call
and
cmp
cs
jo
dec
inc
jl
inc
xor
or
sbb
loope
leave
push
mov
xchg
jg
jl
dec
jne
pop
cmp
je
mov
mov
cmp
(bad)
sbb
inc
sbb
jne
outs
jb
mov
xor
ss
sbb
pop
add
je
push
retf
push
sub
adc
es
or
mov
lahf
push
enter
push
xor
fnstsw
bound
mov
es
inc
sbb
inc
mov
ja
push
shl
inc
mov
sub
xchg
outs
daa
lock
loopne
add
mov
inc
punpckhwd
sar
pop
lea
mov
clc
data16
sbb
or
js
dec
popa
jns
jne
(bad)
fisttp
sbb
pushf
xor
jb
inc
outs
je
cli
dec
mov
enter
push
arpl
je
inc
je
ins
jae
(bad)
mov
adc
ins
imul
or
fbstp
fsub
ds
gs
and
push
popa
mov
outs
or
popa
je
push
or
sbb
push
outs
jb
shl
inc
or
dec
inc
jb
ja
add
fnsave
add
add
push
jae
imul
in
js
sti
arpl
or
or
inc
ins
popa
test
mov
fwait
rol
xor
mov
out
into
out
loopne
adc
cmp
mov
inc
mov
sti
movs
mov
jnp
jo
cmp
jl
push
add
push
clc
push
and
mul
(bad)
int
int
mov
dec
ror
push
loopne
inc
fstp
push
add
adc
mov
fcmovnu
fisubr
jp
lock
push
cmc
push
aam
es
push
mov
sti
(bad)
imul
hlt
mov
mov
dec
jl
push
add
push
cmp
jnp
scas
ss
add
and
mov
hlt
push
mov
xor
dec
test
adc
nop
dec
imul
outs
or
push
shl
xor
mov
pop
push
and
je
clc
data16
scas
mov
pop
aam
push
clc
mov
xlat
mov
ss
inc
in
bnd
inc
outs
arpl
inc
and
in
xchg
cld
push
xor
inc
inc
push
sbb
push
mul
ins
loop
mov
repz
outs
push
imul
ins
cmp
enter
xchg
pushf
pop
xlat
push
ins
outs
ja
aam
cmp
inc
ret
stos
aad
fst
sti
jae
mov
(bad)
push
inc
push
push
gs
out
sub
push
inc
push
push
outs
mov
jo
cmp
xor
call
inc
cmc
outs
xor
dec
fld
(bad)
dec
movs
add
cld
div
push
mov
sahf
out
cld
mov
inc
jmp
xchg
sbb
push
dec
push
or
inc
xor
sub
cmp
pusha
bound
add
leave
call
ficom
mov
add
js
dec
or
data16
adc
dec
inc
add
(bad)
je
inc
dec
ja
psubusb
push
out
pop
xchg
xor
neg
es
add
ret
add
pop
jo
or
mov
xor
bound
repnz
je
add
sub
nop
jo
xor
iret
dec
(bad)
aam
add
mov
pop
lods
lea
jbe
jae
inc
inc
push
in
xchg
test
dec
jl
add
sar
lock
push
shl
outs
push
push
push
fisttp
sbb
push
add
sub
adc
in
inc
ins
mov
push
nop
xlat
or
add
cmp
cmps
cmp
hlt
push
cmp
popa
js
jmp
dec
in
call
outs
arpl
jb
mov
mov
dec
push
xchg
ror
shl
(bad)
in
ins
mov
(bad)
xchg
jmp
inc
imul
xchg
mov
into
mov
xchg
and
(bad)
jmp
je
push
mov
loope
or
call
adc
and
mov
adc
or
ror
mov
popa
imul
dec
hlt
mov
das
push
pop
fadd
jo
rcl
xor
outs
popf
pusha
sbb
dec
nop
fs
inc
inc
fisttp
outs
mov
inc
xchg
movs
pop
call
sbb
xchg
ret
push
out
inc
lds
(bad)
ins
gs
or
lock
sbb
js
push
je
push
mov
dec
inc
sti
inc
cwde
add
push
push
adc
jb
mov
jno
push
fldenv
sbb
mov
adc
je
push
and
push
dec
ja
push
sub
pushf
sbb
ret
ror
dec
sub
dec
call
add
mov
and
sbb
dec
or
(bad)
sub
ficom
jne
jmp
or
pop
(bad)
add
js
cdq
xchg
shr
push
and
popa
fst
aam
popf
call
in
outs
jne
test
add
jo
and
jmp
push
sbb
aas
daa
add
push
pop
ret
cmp
dec
jp
adc
lea
ins
xor
sub
call
cld
or
jbe
dec
jmp
push
lock
scas
push
mov
cmp
or
in
je
test
pop
push
xchg
push
gs
push
ins
push
and
mov
and
outs
inc
adc
imul
xchg
xor
pop
jmp
sub
sub
rcr
push
fist
icebp
adc
ins
fwait
fs
cwde
sbb
mov
leave
or
test
mov
xor
out
add
gs
mov
inc
dec
jmp
outs
inc
push
out
imul
inc
sbb
pop
inc
xor
scas
jge
xchg
push
pop
inc
jo
push
push
xor
inc
push
cmp
inc
cmp
psubd
mov
jbe
and
shr
add
push
xor
imul
cs
in
fadd
dec
ss
daa
mov
or
xchg
loopne
lock
pop
dec
aaa
xor
xor
dec
sub
inc
cmp
inc
int3
ds
inc
pop
xor
ja
pop
dec
cmp
xor
ret
ins
loop
mov
jb
mov
das
outs
jle
add
shr
pop
dec
cmp
add
xchg
xchg
push
sub
or
mov
xchg
xchg
retf
xchg
neg
jne
pop
xchg
xchg
xchg
xchg
and
cmp
retf
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
aas
arpl
xchg
into
hlt
adc
xchg
xchg
pop
and
pop
jns
pusha
xchg
xchg
xchg
xchg
test
xchg
retf
push
jp
imul
mul
jge
sbb
jg
in
inc
pushf
je
inc
or
xchg
push
sbb
push
sbb
retf
pop
cmp
div
hlt
test
fdiv
sub
dec
loopne
push
mul
retf
or
xchg
les
ss
push
jmp
das
cmovb
sub
xor
pop
jnp
in
mov
push
mul
mov
mov
inc
imul
int3
out
push
mov
add
push
inc
sbb
push
fisub
push
sbb
scas
or
xor
or
ret
xchg
in
imul
mov
jmp
pop
ss
out
jl
push
push
in
std
test
(bad)
jp
out
mov
movs
push
fadd
push
repz
pop
xor
sar
add
mov
sub
js
sbb
sub
push
or
inc
ret
dec
cmp
add
dec
je
(bad)
aaa
ror
or
jae
lods
(bad)
or
sub
test
jns
scas
dec
adc
enter
scas
imul
test
dec
imul
shr
pusha
dec
inc
dec
jl
mov
inc
lock
mov
xchg
sbb
mov
aaa
xchg
js
mov
sti
imul
push
inc
dec
outs
inc
jne
data16
movs
data16
push
fidiv
add
xor
sahf
push
xor
ins
push
xchg
add
loopne
jnp
mov
add
fs
arpl
mov
bound
xchg
out
imul
jne
(bad)
retf
popa
and
lds
ja
pop
pop
sar
rcl
mov
cli
test
sahf
dec
add
xlat
out
jbe
fimul
push
xor
dec
outs
mov
scas
leave
jmp
and
daa
and
outs
mov
(bad)
pop
push
(bad)
adc
push
div
jge
(bad)
adc
add
jmp
xor
mov
push
or
aam
add
push
push
les
test
sub
push
or
inc
adc
ss
sbb
adc
sbb
and
jb
add
cs
outs
test
(bad)
js
fwait
pop
das
test
fidiv
mov
add
outs
or
pop
sub
pop
sbb
fwait
push
inc
gs
jne
aam
and
je
fs
fistp
or
dec
gs
cmp
add
mov
inc
jae
mov
xor
inc
adc
scas
inc
fs
dec
cmp
mov
cmp
sub
cmps
push
cmp
sbb
lods
and
fistp
fiadd
push
popa
ins
jne
ret
or
mov
int3
ins
ret
dec
fcmovne
push
fndisi(8087
or
lahf
sub
int
pop
add
stos
push
retf
push
or
push
sub
adc
pop
test
and
gs
inc
and
ret
pop
lods
push
xchg
push
je
ficom
mov
mov
cld
push
loopne
dec
lods
ret
outs
pop
movd
dec
cld
or
ja
scas
ror
and
and
pop
jg
shl
popa
stos
loope
and
test
jle
ret
xchg
push
cmp
push
mov
(bad)
out
jmp
mov
inc
test
ins
ror
inc
dec
cmp
adc
dec
dec
adc
or
out
ss
scas
fnstsw
(bad)
dec
inc
(bad)
sbb
or
pop
adc
mov
cwde
pop
jae
inc
sbb
and
in
jo
inc
ret
inc
les
push
add
cmp
mov
push
and
xchg
loopne
rol
add
adc
sub
inc
pushf
cmp
cld
xor
movups
cmp
add
xchg
sub
pop
ja
xchg
adc
test
xchg
jecxz
nop
xchg
adc
fstp
dec
xchg
sbb
std
pop
inc
adc
mov
jbe
aam
gs
fmul
lock
leave
inc
movs
push
dec
dec
outs
mov
mov
xchg
or
xchg
pop
jmp
sbb
jbe
xchg
pop
sbb
dec
sub
test
nop
imul
sbb
dec
je
outs
or
or
jno
xchg
sbb
sbb
xchg
push
push
call
cdq
push
sbb
loopne
popa
push
cmp
add
dec
pop
mov
dec
add
aas
or
idiv
test
jo
push
outs
jne
push
sbb
out
mov
sbb
and
xchg
sbb
and
lds
in
or
add
popa
outs
rol
clc
cmp
mov
ror
adc
xchg
inc
pop
imul
inc
dec
popa
push
ja
rcl
sub
cdq
push
loopne
(bad)
inc
jge
xchg
push
repnz
dec
xchg
pop
(bad)
inc
dec
sub
aad
mov
push
lods
outs
xchg
or
fimul
out
sbb
dec
cwde
push
aaa
sbb
or
jmp
das
cmps
dec
push
cmp
adc
jp
ret
(bad)
cmp
jo
or
mov
and
push
xor
inc
inc
call
xor
loope
dec
pop
enter
ss
in
mov
dec
(bad)
mov
push
or
inc
test
and
inc
add
adc
cmp
nop
in
scas
cmp
shr
xchg
cmp
inc
fsub
rol
cmp
sub
cmp
ds
fs
add
in
inc
dec
cmps
xchg
stos
inc
inc
add
inc
pop
inc
outs
test
xor
fwait
sub
pop
lahf
pop
out
inc
inc
add
js
dec
daa
cdq
and
cmps
inc
movs
mov
push
jae
sbb
pop
pop
shl
and
inc
ds
mov
xor
inc
dec
out
inc
push
mov
pop
outs
xchg
dec
inc
pop
dec
dec
add
dec
push
jo
or
adc
dec
dec
add
add
dec
inc
add
dec
sbb
sub
jb
sub
add
add
mov
les
add
add
or
pop
mov
xchg
mov
aad
sbb
pop
inc
data16
cmc
sbb
mov
mov
mov
or
mov
mov
outs
xchg
mov
and
arpl
mov
lock
mov
test
mov
icebp
adc
mov
xor
retf
mov
(bad)
popa
or
xor
stos
iret
cmc
icebp
pusha
shl
in
add
daa
nop
xchg
hlt
(bad)
stos
cmps
xchg
push
repz
and
aam
(bad)
push
daa
add
or
scas
daa
mov
adc
daa
pushf
scas
jge
shl
adc
cmp
adc
scas
int
add
clc
lods
push
enter
add
push
inc
dec
imul
dec
dec
sub
inc
push
arpl
inc
shl
cmps
cs
inc
push
jnp
int
sub
push
or
popa
lock
xchg
outs
pop
iret
ret
ret
sub
pop
cmp
mov
(bad)
call
out
mov
xchg
add
adc
ins
nop
push
test
sbb
cmp
push
adc
ins
outs
ss
or
mov
daa
xor
(bad)
test
ins
mov
mov
pop
out
(bad)
inc
inc
dec
inc
out
pop
jns
inc
add
mov
add
lock
into
(bad)
sub
mov
or
jae
adc
mov
inc
add
jge
push
pop
cwde
cmovne
dec
out
das
clc
xchg
push
push
mov
add
sub
dec
adc
shl
inc
movs
add
sbb
leave
data16
adc
movs
push
jb
imul
lea
xchg
add
xchg
dec
mov
pop
es
test
mov
pop
xchg
mov
add
dec
xchg
and
lea
and
and
push
pusha
ror
pop
push
dec
enter
imul
push
push
jb
sub
sub
inc
movs
test
popa
enter
xor
and
xor
pusha
stos
in
test
xlat
(bad)
jge
in
mov
pusha
sar
xor
add
cli
inc
adc
xor
(bad)
ss
adc
inc
jmp
aaa
pop
cmp
or
das
cvtpi2ps
rcl
cmp
sbb
cmp
in
mov
jmp
xchg
mov
inc
inc
leave
push
xchg
push
dec
rol
pop
and
inc
cs
ror
push
inc
push
inc
dec
dec
push
inc
push
inc
dec
dec
xchg
mov
arpl
push
sub
mov
sbb
inc
call
and
pushf
xchg
and
and
in
cwde
sub
dec
jae
mov
loope
cdq
daa
dec
and
and
push
xchg
and
hlt
sbb
and
mov
and
fwait
or
and
mov
xor
or
cmp
xor
mov
cld
push
popf
xor
xor
ins
xchg
mov
cmp
xor
(bad)
and
xor
scas
ror
sub
xor
and
retf
enter
ficomp
lar
mov
sub
xchg
sub
out
in
push
xor
fisub
xchg
push
sub
push
xchg
xchg
sub
ret
sub
dec
push
jnp
cmp
lock
push
fcomp
xor
mov
inc
es
dec
div
sbb
push
pop
xchg
push
dec
sahf
push
neg
jnp
js
push
or
test
mov
inc
xor
adc
pop
in
mov
pusha
pop
neg
addr16
push
int3
push
imul
mov
push
fdiv
inc
jl
loopne
in
fisub
add
rol
inc
out
sbb
and
push
inc
jne
je
outs
add
inc
push
imul
das
and
adc
sbb
shl
pop
adc
sbb
outs
add
pushf
movs
mov
iret
loop
pushf
push
xor
mov
sbb
xchg
scas
inc
push
sbb
push
test
add
sbb
sbb
pop
pop
sbb
div
scas
stos
out
dec
je
sbb
xor
dec
or
inc
idiv
dec
xor
pop
push
add
js
setg
jae
imul
pop
je
push
or
rol
fist
mov
adc
out
(bad)
(bad)
aam
cmp
int3
sub
push
in
nop
adc
mov
mov
adc
and
scas
test
(bad)
out
and
add
push
dec
ins
popa
addr16
or
imul
add
push
imul
or
cmp
je
push
add
fdivp
push
outs
jo
or
int3
ins
adc
push
fwait
mov
cmps
das
hlt
push
jmp
das
test
inc
cmps
cmp
push
shl
xchg
call
pop
sbb
mov
and
push
and
or
inc
xchg
adc
mov
sbb
and
and
lea
es
ret
dec
popa
jb
ds
or
inc
jae
adc
jae
mov
lock
push
lock
fxch
nop
test
push
push
outs
jne
arpl
jmp
pop
xchg
gs
(bad)
test
dec
(bad)
cld
aam
loopne
or
add
adc
mov
cmp
pop
scas
mov
das
cmp
add
push
dec
aas
mov
xchg
add
cmps
mov
cmp
or
push
mov
ja
pop
sub
lock
sbb
jae
mov
das
adc
pop
out
out
es
scas
in
inc
jno
daa
inc
sbb
add
pop
daa
jo
sub
mov
adc
push
adc
pop
xor
add
(bad)
cmp
sub
lock
sbb
cs
pop
sbb
adc
push
sbb
bound
or
outs
push
push
cmc
mov
jo
je
cdq
mov
icebp
push
add
dec
add
stos
jns
xlat
cmp
sub
pop
push
out
in
push
cmp
fiadd
pop
movs
es
aam
pop
jne
push
iret
nop
div
push
sbb
adc
pusha
xchg
iret
adc
sbb
add
jle
call
sub
sar
sub
cwde
lods
add
jmp
add
sbb
mov
out
inc
and
inc
sahf
(bad)
ins
push
sub
ins
adc
pop
pusha
aam
push
pop
test
inc
inc
jmp
add
jle
jne
pop
adc
push
cmp
es
aaa
dec
adc
and
push
loopne
push
jb
add
cmp
and
jge
xchg
les
loop
std
xchg
inc
sahf
jo
gs
imul
stos
mov
push
inc
dec
cwde
mov
mov
push
cmovbe
pop
out
mov
(bad)
mov
adc
cmp
cmp
xor
sbb
push
sbb
mov
les
sahf
loope
xor
and
pop
add
arpl
outs
popa
ins
xor
cdq
test
ins
xchg
inc
cmp
pusha
xor
jae
xor
dec
shr
cmp
cmp
pop
cmps
lds
push
push
cmc
fmulp
retf
popa
fmul
adc
out
add
loopne
test
sbb
(bad)
ret
out
es
mov
sti
lods
(bad)
outs
add
or
jmp
inc
add
mov
popa
(bad)
dec
mov
xor
xor
movs
push
sbb
sub
scas
push
jl
sub
mov
rol
jne
sbb
outs
sub
das
pop
in
pusha
adc
lock
inc
ins
add
and
dec
aaa
sub
push
mov
ss
push
outs
cld
jae
int
aaa
ins
xchg
ins
add
xchg
sbb
add
popa
sbb
pop
or
mov
mov
mov
imul
fisttp
mov
mov
call
pop
xchg
push
push
xchg
clc
mov
loope
mov
sub
jmp
push
and
push
pop
cmc
out
call
and
movs
scas
mov
add
adc
dec
pop
mov
dec
pop
popa
or
mov
jmp
adc
rcr
xor
or
push
xchg
call
cmc
push
push
mov
pop
mov
ret
test
push
test
jecxz
fnsave
in
pop
mov
ret
call
jmp
jmp
ja
test
jecxz
mov
xchg
(bad)
fcom
push
jmp
and
cmc
xor
retf
call
xor
dec
cdq
adc
js
sub
nop
add
inc
add
mov
dec
in
inc
mov
sub
sub
fild
inc
pop
mov
or
and
dec
rcl
pop
sbb
add
sbb
add
dec
dec
xchg
jle
xchg
add
ret
xor
popf
and
add
mov
pusha
mov
adc
fistp
inc
rol
push
shl
or
or
mov
dec
and
add
pop
or
pop
jb
add
xchg
outs
sbb
push
aaa
loopne
popf
xchg
sbb
and
sbb
jb
sbb
push
add
xchg
mov
(bad)
xchg
push
inc
leave
push
and
pop
and
or
or
push
xlat
add
or
sahf
xlat
mov
pusha
cmp
sahf
xlat
and
push
add
add
add
cmp
cmp
es
push
and
scas
outs
pusha
and
push
inc
sub
and
add
lods
or
or
lods
xor
pop
lods
jb
add
and
jecxz
add
inc
sbb
das
loopne
sub
add
jg
and
xor
inc
or
push
and
xor
dec
sub
dec
hlt
xchg
in
sbb
xor
xor
outs
pusha
and
sbb
cmp
sbb
fadd
ret
jno
dec
and
leave
push
xor
mov
outs
inc
pushf
sub
xchg
inc
inc
inc
push
inc
push
inc
inc
jne
push
or
add
sub
and
icebp
inc
in
or
sub
add
enter
rcl
enter
sbb
enter
mov
pop
mov
enter
dec
jb
enter
(bad)
mov
enter
push
jl
(bad)
enter
jmp
enter
loopne
mov
xor
mov
ret
in
mov
and
and
(bad)
and
pop
jp
and
and
and
xchg
mov
and
pop
pop
icebp
add
push
push
inc
push
js
ja
pop
je
mov
div
arpl
sbb
adc
inc
sar
ins
movd
push
je
sbb
sahf
cmps
push
mov
mov
push
mov
hlt
sub
fdiv
inc
outs
fsubr
loop
sbb
push
ja
mov
or
add
loopne
pushf
xor
push
shr
inc
xor
inc
push
pop
mov
sub
adc
ins
ficom
bound
cdq
sar
(bad)
mov
and
xchg
inc
add
or
adc
fstp
sbb
push
fwait
iret
cmp
push
enter
xor
test
cmp
xor
ss
lds
xor
cmps
pushw
mov
gs
jae
pusha
dec
or
push
inc
xchg
mov
inc
adc
outs
cdq
loopne
push
xlat
or
scas
movs
in
inc
je
mov
ret
sbb
cmps
or
inc
inc
test
cmps
test
mov
and
iret
pop
sbb
or
inc
mov
mov
hlt
adc
sub
adc
(bad)
adc
adc
or
xchg
fisub
xchg
gs
or
push
rcr
add
inc
cmp
jmp
inc
ffree
imul
xchg
scas
ins
push
shl
and
sbb
jecxz
add
xchg
add
or
sbb
aaa
stos
in
sbb
inc
mov
pop
test
xchg
and
and
inc
data16
mov
rcr
paddusw
inc
sbb
and
mov
popa
push
leave
inc
enter
mov
inc
scas
sub
cmp
mov
sub
or
mov
cmp
sub
push
xor
cs
xor
leave
push
xor
push
xor
xor
ss
cmp
or
cmp
sbb
or
cmp
sbb
sub
xor
nop
bnd
add
xchg
mov
sbb
push
jb
sbb
sbb
mov
imul
iret
clc
push
lds
sbb
mov
sbb
(bad)
sub
sbb
sbb
mov
sbb
(bad)
dec
outs
sbb
sbb
xchg
mov
cli
sbb
mov
gs
mov
fadd
leave
sub
sbb
dec
jae
pop
sahf
mov
nop
retf
inc
int
fs
push
xchg
lods
sub
sar
out
pop
xor
pop
dec
ds
mov
aas
int3
mov
aas
pusha
xor
cs
xor
icebp
mov
or
lock
or
mov
repnz
pop
sbb
or
mov
add
out
mov
sub
push
jl
loopne
dec
ret
or
push
popa
imul
and
mov
add
pop
(bad)
pop
xchg
or
xor
or
aad
jmp
aad
cmps
aas
les
mov
xchg
or
pop
adc
mov
dec
pusha
out
mov
sbb
adc
add
sub
adc
inc
mov
leave
push
jb
push
pop
add
pop
and
and
and
and
mov
and
dec
cs
and
or
daa
xchg
dec
sub
adc
dec
xchg
or
les
sub
cmp
ins
fwait
xchg
das
bound
xchg
sub
xchg
and
xor
xchg
push
or
nop
jp
push
leave
inc
xor
and
xor
cmp
add
push
xchg
cmp
mov
enter
jbe
push
ffreep
and
imul
(bad)
or
mov
jb
repnz
fs
mov
jb
iret
xor
jb
fs
mov
fs
pop
xchg
int
adc
xor
fs
jg
retf
jb
out
adc
cmp
fs
das
pop
jg
fs
int
pop
aam
jnp
in
add
aad
or
push
arpl
add
inc
bound
call
ret
ror
mov
xchg
mov
les
adc
add
jl
pop
dec
push
add
int3
addr16
mov
gs
add
(bad)
retf
add
xor
jne
scas
and
arpl
cmp
mov
fstp
mov
mov
loope
add
mov
xchg
scas
push
sar
lods
pop
les
pop
mov
mov
push
in
sahf
mov
aaa
sbb
or
loop
loopne
pop
pop
push
mov
pop
pop
mov
xchg
push
or
imul
sub
add
dec
dec
pop
pushf
adc
mov
scas
ss
imul
jg
or
push
dec
inc
popa
nop
outs
repz
loopne
test
test
or
push
ins
popa
cli
push
stos
xor
pop
dec
lock
sbb
ret
mov
pop
sub
pop
xchg
arpl
ins
mov
rol
(bad)
xor
push
inc
or
inc
in
adc
adc
add
cmp
jl
call
mov
push
or
mov
pusha
mov
cwde
pop
ret
jle
je
cwde
int
xor
jae
or
jno
or
lock
aam
inc
mov
cmp
ficomp
scas
cmp
pop
cmp
in
repnz
or
cmp
enter
inc
stc
(bad)
jb
lea
enter
and
es
xchg
mov
pop
jbe
push
nop
sbb
in
jmp
mov
inc
mov
xor
mov
push
dec
dec
or
mov
outs
in
call
(bad)
xor
pop
sti
(bad)
cld
cmp
add
popa
jmp
push
cmps
pop
stos
xor
and
or
mov
pop
pop
and
or
xchg
or
inc
ficom
mov
xlat
fcos
pop
and
or
sti
out
mov
cmp
or
daa
out
xor
xor
inc
lea
push
xor
pop
push
aam
sub
pop
and
leave
push
jb
das
xor
or
xor
popa
xor
add
add
inc
sbb
ss
inc
mov
aaa
popa
mov
cmp
jae
add
jle
test
sbb
out
adc
xor
sbb
sbb
and
sbb
fld
dec
imul
sbb
sbb
sbb
mov
call
sbb
sbb
lds
mov
fidiv
push
sbb
sbb
jne
mov
sbb
fild
push
ja
daa
jle
test
loope
hlt
jno
out
loop
sub
jae
xchg
mov
dec
or
out
les
lahf
sbb
lock
pop
inc
or
dec
ror
pop
push
inc
popf
mov
out
out
ret
jmp
imul
push
hlt
in
clc
add
adc
or
push
dec
outs
outs
imul
into
push
push
inc
xchg
clc
enter
iret
loop
or
mov
and
scas
(bad)
(bad)
mov
sbb
and
adc
daa
push
push
cmp
and
leave
lock
sub
leave
pop
pop
sub
xchg
push
lea
xchg
adc
dec
sti
add
loopne
mov
fldcw
xchg
mov
or
cmps
(bad)
inc
dec
int3
fnsave
inc
or
xchg
packsswb
pop
inc
dec
inc
xchg
test
xbegin
lods
dec
es
push
or
jle
fadd
adc
mov
(bad)
sbb
(bad)
or
xor
xor
(bad)
mov
cdq
mov
push
mov
dec
imul
xor
dec
inc
cs
pusha
inc
mov
aam
les
xor
enter
pop
sbb
add
xchg
loope
sub
cmps
ja
or
sub
outs
push
or
mov
sub
dec
push
jo
or
rcr
retf
xchg
xor
sbb
add
pop
xchg
addr16
lock
sar
adc
adc
mov
in
inc
add
add
int
lock
or
call
mul
sahf
jl
mov
xchg
pop
call
push
push
call
push
iret
repz
test
dec
pop
push
js
clc
mov
mov
sbb
jbe
xchg
and
jb
mov
mov
ja
aaa
sbb
push
add
xchg
inc
mov
jno
lods
(bad)
push
inc
dec
pop
pop
cmc
inc
xchg
fs
adc
jbe
test
out
sub
pop
les
rcl
xchg
jns
fcmovb
out
icebp
clc
call
push
cmps
js
mov
jmp
out
adc
pop
push
jo
out
cmps
sbb
cmps
add
or
out
push
xchg
lahf
mov
adc
pop
ret
jg
push
push
inc
imul
inc
and
lods
shl
iret
pop
popf
pop
pand
mov
mov
add
add
imul
xlat
mov
push
push
mov
aam
pop
push
mov
jnp
mov
cwde
push
sbb
add
push
js
mov
push
inc
int3
xchg
ds
mov
fisttp
cmp
push
mov
in
ja
cmp
jo
fcomp
gs
outs
ja
movs
nop
push
(bad)
ja
sbb
inc
out
ja
aaa
rcr
out
ja
scas
out
jns
ins
mov
xor
jbe
mov
fcmovnbe
iret
pop
push
(bad)
imul
pop
sub
xor
ja
outs
fadd
jo
or
ja
popa
xchg
add
dec
jl
sub
adc
ins
fs
cmp
mov
mov
add
sbb
cmps
test
clc
jl
sub
inc
std
lods
and
mov
pusha
xor
sub
in
enter
jo
mov
sbb
sbb
pusha
add
and
sub
push
push
nop
push
cmp
push
sahf
inc
clc
push
les
push
adc
mov
push
and
ret
add
xchg
pop
fwait
cmps
push
mov
mov
jnp
mov
cwde
jmp
clc
es
and
dec
jbe
push
jno
pop
pop
jno
jmp
jne
push
jbe
jo
sar
hlt
push
pop
sub
nop
add
(bad)
push
sbb
ss
push
mov
hlt
icebp
sub
and
out
pushf
pop
push
mov
adc
shl
out
push
push
xchg
cmp
mov
ret
and
or
loope
pcmpeqd
pop
mov
pushf
dec
cmp
ja
push
scas
ret
or
cmps
mov
ret
call
pop
inc
sbb
les
or
pop
movs
and
loopne
and
xor
lock
jne
es
add
push
xor
mov
and
dec
outs
mov
sbb
aam
lods
push
push
ret
mov
ins
sti
fsubr
add
jbe
push
js
push
adc
mov
es
push
rcl
jle
push
sbb
mov
jnp
inc
es
push
mov
push
mov
neg
shl
push
leave
push
jo
push
fidiv
in
dec
retf
push
sub
ds
nop
lods
dec
iret
add
xchg
push
add
unpcklps
into
dec
mov
add
mov
ror
jb
outs
addr16
and
(bad)
test
int3
pop
push
mov
xchg
xor
gs
pushf
add
sub
xchg
add
add
ins
xchg
xor
jb
imul
mov
xor
pop
in
ja
pop
mov
clc
lods
jb
lea
(bad)
jg
push
test
je
add
call
mov
mov
xor
mov
add
in
or
or
mov
inc
in
loope
int3
push
cs
cwde
mov
jle
mov
clc
mov
call
test
je
mov
and
fstp
jp
or
mov
(bad)
shr
add
pop
pop
ret
loopne
pop
pusha
xchg
es
mov
mov
out
outs
test
ret
outs
(bad)
adc
jae
push
mov
inc
jle
pop
fisub
dec
dec
push
mov
xchg
int3
xor
cld
inc
push
popa
sti
cmp
cmp
mov
add
inc
xor
mov
lock
inc
dec
cmp
sbb
cdq
mov
js
push
push
or
push
lea
and
cmp
cmp
ss
jg
lea
pop
mov
call
lock
adc
pop
ret
push
ja
and
xor
icebp
mov
mov
test
fnstsw
pop
inc
sbb
push
xor
push
push
push
push
or
fcomp
outs
nop
adc
neg
mov
add
icebp
scas
cld
add
xor
push
push
mov
lea
jl
sbb
cmp
call
ss
pop
cld
push
jge
add
mov
jmp
cmp
cdq
add
sti
cmp
jne
adc
cmp
aaa
sub
xchg
shr
mov
mov
jo
push
xchg
aam
je
push
mov
jne
cwde
in
push
(bad)
mov
mov
sub
sbb
sbb
pop
mov
push
or
sub
pop
ret
out
add
nop
push
aad
dec
int
in
xor
jae
sub
into
lock
movs
add
nop
cmp
std
mov
or
in
mov
push
out
sbb
int3
lock
(bad)
xchg
xor
movs
mov
mov
jl
mov
push
int3
cmp
mov
call
jae
fs
jle
in
adc
js
setg
ret
and
push
mov
xchg
test
jne
arpl
dec
mov
and
fmul
jmp
cmp
jne
dec
outs
test
lea
pop
sbb
add
in
xchg
shl
push
fwait
jle
mov
call
push
hlt
into
and
cli
test
push
sahf
jecxz
dec
cmp
out
mov
fbstp
inc
jo
or
or
pusha
test
adc
pop
je
js
pop
pop
sbb
push
repz
mov
ret
dec
add
jmp
add
popf
inc
lods
and
add
mov
pop
int
mov
daa
mov
cmps
dec
or
dec
inc
call
inc
repnz
call
push
push
in
add
push
call
mov
shr
sti
mov
mov
xor
pop
push
push
ins
popf
sub
push
jno
pusha
fdiv
mov
das
fadd
in
lahf
push
push
loopne
stos
maxps
mov
aam
push
pop
aaa
pop
ins
add
push
mov
cmp
je
pop
sbb
or
fdiv
fidiv
pop
(bad)
push
jmp
adc
cmp
mov
dec
inc
pop
movzx
outs
aad
cmp
(bad)
jp
iret
inc
and
or
xor
cmps
aam
je
sbb
je
add
jl
adc
pop
mov
cld
iret
lea
sbb
mov
pop
aas
add
scas
add
pop
sub
mov
sub
jmp
es
mov
and
stc
jns
adc
xor
mov
xor
cmp
fisttp
out
lds
aas
lds
xchg
push
ins
jne
push
aaa
add
inc
sbb
test
cmp
test
out
push
in
imul
sbb
leave
rcr
mov
rcr
push
sbb
and
xor
xchg
or
xchg
push
sbb
xchg
ins
stos
sbb
mov
(bad)
xor
pop
mov
sub
neg
inc
inc
or
ficom
or
jge
adc
pusha
inc
pop
sub
fnsave
push
add
mov
arpl
xor
rcl
pop
mov
push
out
out
add
mov
cli
shl
clc
xchg
movs
inc
pop
addr16
fcom
pushf
jge
je
pavgw
cld
out
ds
cmp
shufps
stc
(bad)
fsub
pusha
repz
not
mov
je
xchg
or
(bad)
iret
cmp
rol
or
dec
or
out
or
mov
outs
mov
and
or
test
add
test
out
outs
xchg
xlat
mov
into
call
(bad)
adc
and
jo
pop
sar
lds
jnp
inc
cwde
adc
mov
pop
adc
ret
cmp
retf
pop
(bad)
sbb
inc
inc
sti
adc
mov
jne
ins
adc
adc
cmc
sbb
xor
mov
sub
arpl
dec
inc
and
xor
adc
push
stos
or
or
out
xor
dec
ja
ss
jbe
mov
push
leave
mov
ds
inc
add
cmp
ret
je
out
inc
or
dec
pop
cdq
mov
neg
dec
xor
sbb
jae
xor
sbb
mov
adc
push
mov
mov
jo
add
push
lock
push
imul
inc
sbb
jle
or
mov
mov
js
push
jmp
and
ret
inc
adc
data16
inc
and
adc
and
dec
mov
in
mov
not
mov
jns
xchg
pop
cwde
mov
jbe
mov
loopne
mov
xor
adc
pop
stos
sub
popf
sbb
ret
stc
adc
xchg
int3
or
mov
xor
push
out
add
and
xor
fcom
or
push
add
(bad)
jnp
mov
xchg
jne
mov
and
inc
hlt
jnp
cld
mov
and
pop
inc
pop
xor
lds
fstp
jp
int
je
jl
and
(bad)
push
imul
clc
sbb
jecxz
mov
(bad)
(bad)
add
mov
pcmpeqb
mov
ret
es
jae
sub
movlhps
fcom
pop
jae
idiv
xchg
jae
mov
jecxz
fucomp
cdq
xor
pmulhw
xor
pop
cmc
sar
inc
pop
xchg
sbb
sbb
xor
jnp
mov
xor
nop
sahf
sbb
out
lahf
cmp
xor
js
rcl
jp
xor
add
xchg
ja
mov
cs
sbb
xor
xchg
mov
xchg
inc
sti
pop
pop
dec
pushf
data16
(bad)
or
and
sbb
pop
mov
inc
or
ja
jmp
je
lock
pop
icebp
xchg
push
sbb
rcl
dec
imul
lock
add
les
push
xor
inc
in
int3
jmp
dec
and
ja
or
xchg
call
popa
mov
loopne
js
push
scas
cmp
add
sbb
dec
jo
inc
sub
ror
push
jecxz
inc
and
pop
sbb
or
and
xlat
mul
mov
cmps
push
sub
push
adc
sbb
push
scas
mov
call
push
mov
jae
push
sti
std
mov
add
push
in
out
mov
loopne
or
inc
(bad)
fcomp
dec
lahf
sub
jo
mov
inc
and
loopne
mov
loope
js
adc
hlt
adc
pop
or
or
fcom
aas
and
jo
lods
mov
dec
mov
inc
out
sub
mov
adc
hlt
xor
mov
mov
push
enter
jg
dec
mov
cwde
add
add
cmp
mov
fadd
ja
dec
inc
sbb
mov
dec
cmps
pop
sub
sub
cmp
sahf
clc
and
push
(bad)
mov
jmp
jb
cld
xchg
cld
or
push
lea
sub
adc
push
in
push
clc
lea
add
mov
out
or
dec
adc
nop
or
dec
xchg
jg
sub
dec
adc
hlt
lock
(bad)
dec
(bad)
ja
sar
in
(bad)
movzx
xlat
ret
push
leave
xchg
and
clc
jg
out
inc
adc
cmp
in
sub
inc
je
ret
mov
lea
rcr
push
sub
idiv
push
and
jnp
sub
inc
adc
cmps
sub
mov
shl
lea
sub
dec
add
js
cdq
(bad)
int
ud1
call
dec
jne
push
xchg
mov
push
mov
loope
add
mov
pop
lods
int3
aam
lds
sahf
les
jb
js
pop
cmp
jo
scas
sbb
xor
push
push
xor
or
xor
mov
mov
sbb
je
fstp
or
add
adc
je
mov
repnz
sbb
sar
loopne
(bad)
ficomp
jae
(bad)
enter
xor
out
dec
movs
add
sahf
lds
push
loopne
gs
mov
rcl
mov
fistp
xor
hlt
ficomp
xor
sub
fs
popf
adc
inc
mul
dec
or
inc
jl
xchg
sub
mov
jmp
int
outs
xor
jle
in
aam
data16
sbb
sub
cmps
xor
xchg
cmp
jo
in
(bad)
loop
rcl
push
or
pop
pusha
pop
cmp
jne
mov
ret
push
add
add
jbe
and
inc
(bad)
push
inc
jne
je
ins
inc
cs
(bad)
sar
sub
fs
cmp
and
outs
je
adc
add
in
sbb
mov
icebp
xchg
add
sub
fld
int3
jle
cld
push
fdiv
aam
rol
les
adc
or
popf
mul
push
mov
jnp
in
sti
test
inc
push
dec
add
int3
out
mov
nop
push
daa
pusha
push
add
pusha
lock
pop
fild
imul
fbld
fdivr
add
pop
add
add
repnz
inc
add
arpl
arpl
pop
push
popa
cmp
add
inc
or
push
aaa
jle
cmc
pop
ja
scas
test
mov
clc
and
out
jno
ds
mov
add
scas
enter
or
jne
daa
fnsave
pop
mov
mov
(bad)
or
push
out
icebp
jmp
enter
xlat
add
dec
push
inc
ds
es
in
dec
jecxz
or
mov
jp
xor
jmp
mov
pop
mov
inc
sbb
jne
enter
movzx
(bad)
jg
push
or
jl
dec
fwait
add
enter
lea
nop
bswap
push
call
xlat
inc
call
cdq
add
and
adc
inc
lea
add
or
xchg
(bad)
jge
iret
ins
mov
mov
or
sub
or
mov
idiv
loop
sub
outs
jb
inc
ficom
xchg
dec
sbb
sub
sbb
clc
lahf
aaa
inc
in
cmp
sbb
popa
(bad)
ret
mov
mov
sub
pop
adc
push
inc
loopne
loopne
inc
push
out
pop
ds
mov
or
xchg
es
add
mov
mov
js
je
mov
add
inc
add
mov
mov
add
inc
lods
in
cs
add
sbb
push
dec
add
push
ds
adc
lods
add
inc
ror
stc
jg
cmp
aas
mov
dec
adc
fwait
xor
rol
pop
add
out
js
sbb
(bad)
js
imul
mov
mov
mov
je
fcmovb
mov
sub
je
sub
push
sbb
or
es
test
cmp
je
push
jmp
inc
mov
les
cdq
or
dec
cmp
inc
iret
scas
inc
out
sub
adc
mov
jge
fnsave
ret
jbe
dec
mov
inc
push
retf
adc
inc
test
add
stc
adc
and
mov
dec
outs
adc
mov
push
jnp
loopne
cmp
je
cmp
add
sub
and
and
xor
xchg
call
test
jno
mov
cli
loop
mov
cld
data16
mov
lods
imul
jmp
mov
dec
cmp
jle
push
das
clc
add
add
sar
add
sub
pusha
adc
shl
cwde
(bad)
aaa
and
scas
adc
or
xchg
add
data16
gs
test
(bad)
in
dec
fimul
inc
sub
sub
dec
cmp
jmp
sbb
mov
adc
mov
add
sbb
push
xchg
xchg
repnz
adc
jno
sar
adc
pop
dec
mov
mov
hlt
jmp
dec
je
and
outs
ret
ins
push
inc
pop
or
sbb
push
lock
add
(bad)
xor
sub
std
or
sub
pushf
fs
hlt
push
shr
add
push
pop
or
dec
xlat
fsub
xlat
mov
lahf
out
ror
(bad)
shl
popa
jbe
sub
adc
jle
mov
or
mov
push
jle
or
ror
pop
jmp
push
push
add
pusha
cmc
sbb
cmp
adc
mov
xor
lods
dec
or
movs
daa
xchg
or
nop
out
adc
jns
or
out
mov
lods
xor
push
hlt
mov
in
ret
adc
or
xor
mov
ins
mov
(bad)
sub
addr16
adc
xor
push
add
(bad)
push
popf
rcr
popf
jmp
jle
rcr
pop
(bad)
out
jnp
push
and
jl
cmc
or
add
push
xor
add
mov
clc
push
movs
push
outs
and
xor
xchg
bound
xchg
loopne
mov
add
rcr
and
dec
cli
or
or
mov
mov
add
retf
add
std
rol
adc
add
jo
fsub
lea
in
dec
pop
cmp
push
dec
push
sub
out
retf
push
ds
or
jo
or
movzx
or
jl
imul
mov
sbb
jo
sbb
dec
bound
xchg
xlat
add
je
in
and
or
pop
lock
cmps
xor
(bad)
movs
push
push
into
stos
into
fdiv
test
sbb
push
cmp
aad
dec
retf
mov
lahf
xchg
test
mov
xchg
mov
pushf
add
jmp
add
add
push
dec
jne
test
in
pop
push
dec
les
sbb
dec
in
sbb
test
xchg
pushf
test
push
mov
pop
dec
movs
sub
test
jl
aaa
cmp
(bad)
mov
mov
sahf
sbb
xchg
fnstenv
cmps
push
xor
push
jl
pop
loop
sbb
pop
mov
fadd
mov
in
pop
mov
dec
pop
ins
les
les
aaa
fld
arpl
push
add
or
cwde
call
jge
push
sbb
push
push
and
push
in
and
ret
or
les
adc
mov
or
daa
pop
pop
fwait
sub
aas
pop
bound
inc
cmp
jge
xchg
push
and
ss
push
cdq
pop
xchg
add
mov
sub
add
push
add
push
icebp
shl
add
daa
je
lds
sbb
arpl
ror
cmp
push
in
cmp
add
(bad)
add
rcr
xchg
pop
jp
adc
push
ror
icebp
add
imul
cmp
test
dec
mov
sbb
fmul
mov
clc
and
fdiv
sahf
jmp
jp
pop
mov
les
hlt
ss
jbe
jl
jbe
aas
pop
push
je
mov
js
adc
xchg
add
add
dec
out
or
xchg
add
(bad)
push
xlat
(bad)
pop
push
mov
inc
adc
lods
mov
xor
jg
sbb
cwde
inc
pop
jl
sbb
ins
test
sub
dec
add
push
shl
pop
sbb
lods
push
lock
dec
add
mov
and
mov
inc
adc
push
adc
dec
adc
adc
loopne
jge
mov
add
push
push
push
dec
out
rol
xchg
lock
sub
xchg
sbb
arpl
cld
push
shl
pop
adc
int3
repnz
aaa
mov
lock
je
fcmove
jb
data16
add
loop
add
pop
cli
not
and
jg
outs
pop
adc
sbb
xchg
fs
and
or
xchg
(bad)
ret
dec
sbb
mov
nop
ja
shl
arpl
fadd
sahf
mov
mov
or
adc
pop
jecxz
sbb
mov
loopne
(bad)
mul
push
mov
loop
or
sbb
push
mov
inc
push
out
push
in
jle
jmp
stos
mov
mov
add
add
xor
adc
jnp
test
jo
stos
(bad)
push
lahf
xlat
cmp
leave
je
add
jmp
xor
push
and
ror
inc
or
or
xchg
sub
jb
je
jo
loopne
jmp
bound
enter
sub
pop
sub
push
test
jb
pop
neg
shl
add
into
aas
outs
cmp
push
inc
jp
int
test
sbb
mov
dec
shl
cmp
xor
mov
out
(bad)
lar
inc
mov
cmp
dec
or
and
dec
push
test
fs
inc
or
iret
adc
xchg
push
ds
movs
ret
ja
ret
jmp
cmp
test
scas
or
movs
add
push
sub
cmps
out
sub
cmp
xchg
push
dec
mov
sbb
mov
xlat
out
movs
fadd
dec
fldcw
inc
mov
xchg
popw
xor
mov
les
ins
push
stos
scas
push
pusha
ja
cmp
jmp
adc
cmp
fild
leave
adc
mov
movs
test
xor
test
sbb
pop
and
jecxz
loope
out
loopne
xchg
xor
push
sub
add
xchg
lahf
dec
mov
sbb
cmps
mov
xlat
mov
or
test
js
mov
or
adc
xor
pop
(bad)
out
mov
push
sub
or
test
shr
dec
add
jb
inc
je
fwait
cmc
jne
mov
fnstcw
jmp
or
lahf
sbb
jne
or
and
adc
adc
inc
ss
adc
adc
push
add
and
jmp
(bad)
ror
lods
mov
add
dec
test
mov
xchg
xchg
jbe
push
push
div
(bad)
dec
rol
dec
out
daa
mov
push
call
into
xchg
xor
sub
ja
jmp
and
mov
push
mov
pop
pusha
call
or
pop
inc
or
or
or
inc
fwait
push
or
sbb
outs
adc
push
sbb
sub
(bad)
fucomi
ror
je
dec
je
add
jmp
cmp
je
mov
jg
fwait
cdq
mov
sbb
sbb
lods
and
sbb
sbb
jle
(bad)
inc
shl
cmp
xor
pop
stos
xchg
mov
adc
ror
adc
sbb
xchg
and
js
adc
add
cwde
(bad)
adc
jo
cwde
sbb
les
sbb
cwde
jo
or
not
loopne
loop
dec
pop
arpl
loop
mov
loope
mov
or
cmp
cmp
push
inc
jp
sbb
dec
pop
sbb
lea
out
dec
test
(bad)
adc
add
hlt
pushf
sar
and
sbb
dec
fcomp
jle
pop
fsub
test
and
repnz
lahf
xchg
call
mov
fistp
enter
ror
or
mov
loope
fiadd
cmp
(bad)
daa
mov
dec
xchg
ins
dec
cmps
push
imul
push
jp
(bad)
mov
mov
mov
mov
jle
push
je
cmc
cmp
sbb
cmps
xor
jae
das
push
iret
call
jge
mov
push
sub
mov
add
sbb
sbb
dec
sbb
inc
push
mov
add
fadd
sbb
sbb
inc
pop
mov
push
lock
loopne
dec
sbb
cmps
inc
push
popf
lods
or
xchg
push
ret
jmp
mov
gs
loopne
add
lea
adc
stos
cmp
push
mov
stos
pop
adc
mov
(bad)
js
inc
pop
pop
pop
std
jo
add
adc
sti
je
ss
jp
lahf
adc
mov
pop
sbb
fcmovbe
lea
sbb
in
jge
ret
xchg
pop
adc
fst
add
arpl
fprem
out
mov
cmp
pop
ins
dec
stos
cwde
shl
cmp
ins
aas
ins
mov
data16
ins
aaa
lods
(bad)
adc
sub
je
call
scas
push
push
jl
nop
xchg
push
inc
xor
push
jmp
and
test
xchg
xchg
dec
addr16
pop
jl
ins
or
dec
mov
loopne
cmp
cli
xor
push
push
push
add
adc
lahf
and
sub
ror
je
je
cmp
mov
js
or
cmp
daa
dec
push
loope
mov
inc
int
pop
pop
out
sbb
mov
out
xchg
cmps
je
mov
cmp
sbb
mov
movs
dec
lock
sub
cmp
push
pushf
jb
push
push
xchg
dec
sti
add
les
push
jae
popa
(bad)
lods
pusha
adc
ins
pop
cld
adc
cwde
cmp
add
lods
xchg
xchg
out
mov
pop
adc
pop
aam
sub
cmc
sbb
push
jo
or
fimul
ret
xchg
lock
xchg
xchg
xchg
and
(bad)
push
sbb
rcl
sahf
popa
adc
adc
outs
popa
mov
imul
outs
xchg
lds
dec
lods
cmp
je
(bad)
mov
rol
fimul
inc
or
inc
mov
in
shl
add
sbb
and
push
ret
loopne
jae
mov
jo
inc
cmp
shl
xor
jmp
lea
xor
inc
mov
mov
cli
add
test
fadd
or
ret
add
and
lock
xchg
inc
adc
ficom
and
bound
retf
ret
or
add
push
(bad)
fild
add
adc
outs
and
cmp
into
rcr
gs
vmread
shr
mov
mov
xchg
xor
inc
lds
in
retf
pop
sbb
and
push
arpl
(bad)
cdq
icebp
mov
je
test
je
pusha
inc
mov
mov
dec
pop
and
dec
jne
jns
loopne
hlt
sub
cmp
dec
sub
xor
test
sub
xor
adc
fwait
hlt
xchg
sub
(bad)
fisubr
inc
lahf
ret
mov
inc
sti
cmp
push
adc
dec
mov
fs
adc
xlat
popa
add
sete
add
mov
shl
adc
call
adc
out
das
daa
adc
cmp
mov
fdiv
pusha
xor
push
hlt
sub
sub
les
rcl
sub
push
push
xor
mov
xor
inc
or
and
mov
dec
(bad)
fcom
ror
add
add
daa
sar
lock
(bad)
daa
sbb
outs
push
loope
add
add
dec
add
sbb
fstp
jo
adc
jns
pop
inc
adc
mov
add
adc
aam
and
mov
cmp
cmp
xchg
cwde
xor
push
or
fldcw
cmp
push
pushf
sbb
cmp
cdq
mov
aas
test
jg
push
jl
mov
scas
jle
shr
xor
push
mov
outs
nop
push
int
xor
adc
or
(bad)
icebp
or
dec
int3
shl
push
mov
in
jno
rol
push
cmp
jo
test
and
fcos
fdivr
sub
cwde
lock
sub
mov
pop
test
mov
jo
fnstenv
pop
pop
addr16
into
das
scas
lahf
mov
clc
or
cmp
xchg
mov
ss
or
jne
sbb
pop
sbb
pop
lods
pop
xor
out
aaa
mov
sbb
xchg
mov
xchg
cmp
jne
mov
scas
mov
(bad)
fwait
rol
pop
pop
test
jmp
call
stos
push
add
retf
push
ret
dec
inc
add
add
ja
dec
mov
shr
sbb
out
jle
mov
adc
xor
and
pop
sar
movs
or
fwait
sar
imul
push
fstp
popa
leave
mov
xor
or
shl
cmps
adc
and
dec
cmps
mov
lock
cmp
jne
ds
mov
jne
aas
in
call
test
lea
push
adc
sub
mov
int3
lea
cmovns
dec
imul
push
jmp
push
loopne
test
mov
popa
int3
mov
adc
fwait
hlt
fisttp
adc
fsub
pusha
mov
ret
pop
dec
out
paddusw
sub
jmp
cmp
mov
add
movs
inc
ret
das
out
jo
rcr
jmp
and
sar
test
mov
loope
or
in
dec
call
push
sub
sar
or
test
pop
aam
xor
jle
and
or
sbb
imul
and
add
cld
push
in
ret
gs
adc
sub
or
or
or
cmps
xor
sub
fstp
xchg
ss
addr16
std
mov
int
mov
inc
adc
iret
dec
mov
sbb
jne
rol
mov
adc
out
push
jmp
sub
dec
add
mov
in
mov
into
cmp
add
push
add
(bad)
(bad)
in
(bad)
jp
adc
movaps
jae
outs
ins
inc
push
outs
js
sti
(bad)
cs
bound
jb
add
fs
cmp
and
dec
outs
je
adc
jg
sub
xor
add
arpl
jg
or
je
inc
je
ins
jae
outs
int3
add
cld
inc
mov
sbb
mov
ror
ins
(bad)
ja
inc
jae
iret
and
jae
adc
or
sub
mov
push
daa
xor
add
pop
xor
mul
push
cld
pop
les
int3
and
out
mov
movs
inc
push
xor
mov
in
mov
push
clc
add
shl
das
shl
add
gs
data16
add
sti
push
or
je
cmp
fadd
and
pop
pop
jae
and
dec
cmp
sbb
and
xlat
inc
or
push
cmp
cmps
pop
sbb
sub
leave
mov
xchg
mov
rcl
add
sbb
mov
jne
daa
lock
pop
xlat
xor
and
or
pop
pop
ds
xchg
test
je
ins
mov
mov
jmp
push
rcr
mov
lock
mov
sete
push
sub
mov
pop
jl
dec
fwait
add
ror
test
add
sub
dec
(bad)
jp
movs
loopne
popa
xor
lock
mov
jp
cdq
call
xor
sub
mov
pop
clc
pop
push
or
add
adc
int3
jmp
cwde
add
adc
pop
push
cli
pop
push
sbb
ins
or
and
scas
push
adc
add
adc
(bad)
dec
cmp
sbb
inc
imul
pop
ss
mov
pusha
add
popf
cmovb
int3
jp
pushf
pop
sub
orps
xchg
outs
je
mov
or
cmp
sbb
cmp
das
sbb
daa
push
push
out
add
and
sahf
dec
test
sub
cwde
sbb
or
jae
jo
test
or
mov
pop
loop
nop
push
or
or
mov
addr16
or
pop
enter
add
mov
push
arpl
sbb
loope
out
inc
push
xor
push
sbb
or
mov
les
test
mov
ja
mov
daa
hlt
inc
pop
add
xor
hlt
popa
and
push
dec
sub
mov
icebp
sbb
rcl
add
mov
and
cwde
scas
xor
add
lock
mov
(bad)
push
jg
mov
ret
mov
bound
addr16
nop
xchg
jo
data16
xchg
js
jp
mov
cmps
add
test
xor
inc
loop
ins
xchg
or
test
or
cwde
lock
test
jl
inc
(bad)
js
mov
or
into
xor
loopne
and
or
or
fst
inc
or
xor
fistp
sub
out
loop
sbb
mov
dec
(bad)
in
dec
jne
das
loope
jb
xchg
retf
fist
je
adc
leave
loopne
(bad)
mov
dec
and
xor
mov
daa
push
sahf
and
pop
xlat
add
xor
jae
jmp
sub
nop
mov
lods
xor
enter
loopne
pop
mov
mov
(bad)
inc
xchg
or
pop
fwait
push
jp
outs
ss
pop
or
pop
inc
sub
and
jb
push
push
pop
push
mov
push
test
das
jne
jp
je
jle
das
lea
inc
push
mov
xor
xor
add
cmp
rol
mov
adc
xor
jmp
jns
push
ds
lods
ss
pusha
aaa
fchs
outs
xchg
cs
jmp
inc
in
loope
xchg
xor
and
add
stos
or
xlat
shl
dec
aad
outs
cmp
mov
inc
lds
push
cmp
mov
mov
sbb
adc
stos
jmp
inc
jae
push
or
jmp
or
xlat
sub
and
xor
mov
push
add
shl
scas
jecxz
call
in
inc
cli
test
push
cmp
rol
shl
and
push
mov
or
push
push
fcomip
xchg
cmp
add
add
sub
int3
inc
lea
adc
ret
adc
add
add
(bad)
hlt
push
pop
int3
ret
push
push
push
or
lods
jae
in
aas
fs
xlat
pop
push
hlt
cmp
and
not
iret
cmp
imul
pop
xchg
inc
pop
add
pop
push
or
inc
movs
dec
sub
jae
test
dec
into
arpl
fxtract
xchg
xchg
adc
cmp
ss
cld
jl
mov
jge
pushf
mov
mov
mov
outs
push
jnp
jbe
sbb
pop
push
jge
jge
mov
cmp
jge
cmps
sbb
mov
test
js
scas
push
fnstenv
sub
cmp
pop
and
mov
aaa
xor
fcomp
rcl
or
inc
xor
mov
jge
pop
add
sub
out
adc
xor
xchg
add
test
inc
or
adc
or
add
out
or
inc
leave
mov
das
test
movs
call
(bad)
inc
jmp
(bad)
pusha
pop
xchg
pusha
mov
adc
and
mov
in
sbb
dec
jg
mov
xchg
mov
add
and
add
ficomp
sbb
ret
pop
cmp
push
retf
adc
xchg
loopne
mov
add
enter
retf
mov
cmp
mov
sbb
sbb
lock
adc
rcl
lock
addr16
sbb
push
leave
sub
(bad)
mov
mov
clc
pop
ja
outs
mov
fcomp
xor
mov
std
push
scas
(bad)
(bad)
imul
in
fadd
test
ret
jbe
pop
and
idiv
xor
or
outs
cld
je
je
clc
and
cmp
(bad)
mov
repnz
jmp
push
xchg
xor
retf
lock
dec
push
jle
xchg
xor
je
in
(bad)
mov
mov
dec
cmps
sub
and
push
(bad)
xchg
lock
or
movs
jecxz
sub
jecxz
sub
adc
dec
inc
call
inc
ins
mov
pusha
sub
push
loope
fs
jge
je
add
adc
xlat
mov
or
scas
js
pusha
jo
ins
shl
inc
add
ret
fisttp
and
or
add
and
aaa
ret
add
daa
loop
inc
cmp
jmp
mov
jb
cwde
sbb
dec
inc
sysret
push
fs
mov
fcom
inc
aas
in
xchg
sbb
clc
call
aad
push
jbe
cmp
inc
mov
(bad)
sub
mov
sbb
out
jp
xor
out
jne
int3
loopne
call
dec
add
jge
push
or
je
and
add
cli
jg
or
les
sbb
sbb
hlt
mov
push
ret
mov
or
dec
paddusw
add
mov
imul
popa
pop
loop
pop
pop
adc
push
dec
movs
loope
mov
push
loop
or
fmul
xchg
dec
mov
xchg
ror
pop
mov
sbb
pushf
ror
pop
push
sub
mov
ror
push
pop
xlat
mov
sysenter
nop
cs
jecxz
stos
out
push
and
data16
sbb
mov
mov
push
sub
loop
xor
xor
or
xor
jg
movs
mov
sub
cli
call
mov
ins
xor
mov
or
add
add
test
outs
enter
mov
or
outs
mov
or
inc
xchg
pop
mov
sbb
inc
add
inc
or
pop
jns
mov
pop
mov
mov
push
clc
mov
adc
hlt
cmp
mov
out
xlat
add
jle
je
mov
sub
cmp
adc
adc
mov
out
jmp
mov
mov
xor
xor
imul
pusha
xchg
fstp
inc
scas
xor
cmp
mov
cmp
pop
fwait
mov
div
jo
fbstp
sbb
xchg
mov
mov
inc
adc
dec
mov
sar
mov
jbe
pop
mov
xchg
not
or
mov
mov
test
xor
and
imul
push
cmp
fcom
sbb
push
or
sbb
pop
add
xor
bound
dec
(bad)
inc
aas
cmp
cmp
add
test
cmps
js
push
cmps
jle
push
or
enter
and
sti
imul
add
les
bswap
jae
inc
das
push
xor
int3
inc
rcr
xor
xor
inc
push
add
fs
aaa
jbe
push
cs
pop
add
or
sbb
(bad)
loop
adc
sbb
rcl
hlt
mov
sub
sub
inc
arpl
out
jne
(bad)
fsub
lea
and
mov
or
pextrw
xchg
test
mov
and
lea
sbb
mov
js
push
mov
aam
fld
jl
idiv
not
adc
mov
sub
mov
add
daa
or
or
inc
xlat
mov
jle
sub
call
add
mov
test
add
dec
in
data16
cmp
cmp
dec
sar
shr
cmp
jle
ret
push
adc
adc
jo
add
je
adc
dec
dec
or
sbb
fist
add
lock
and
daa
jae
fsub
out
dec
xchg
and
frstor
sub
in
(bad)
and
mov
cmp
jge
push
push
mov
retf
loopne
cmp
or
or
cmp
add
lods
mov
jle
push
xor
sub
sub
xchg
sti
push
fwait
mov
pop
cmps
jp
mov
test
or
xor
scas
mov
inc
dec
mov
(bad)
fmul
sub
(bad)
mov
icebp
xor
adc
inc
mov
lock
push
ret
jns
adc
xor
and
push
hlt
push
bnd
das
jmp
dec
scas
cmp
sbb
sub
and
scas
or
xchg
mov
sbb
and
add
mov
fwait
xor
out
lahf
add
adc
add
jne
adc
pop
add
in
cmp
daa
movs
and
add
or
cmp
sbb
daa
sbb
adc
jo
ins
mov
adc
mov
or
mov
dec
push
nop
fiadd
(bad)
and
and
adc
shl
or
daa
loopne
dec
pop
or
and
jmp
aaa
add
push
nop
sbb
adc
fsub
cld
retf
rol
imul
and
daa
dec
imul
int3
cmp
add
add
push
add
cmp
mov
adc
or
push
xchg
push
xchg
in
adc
xor
scas
sbb
pop
loop
inc
add
sbb
mov
xor
out
sub
and
(bad)
scas
inc
inc
xchg
mov
push
adc
sub
add
fiadd
xor
add
add
adc
rcr
push
test
aaa
jecxz
int3
dec
cmp
ret
(bad)
dec
push
int3
dec
xor
lea
dec
inc
ret
and
xor
mov
jmp
xor
add
xlat
inc
lods
jne
push
mov
mov
cmps
movs
aad
out
pop
pop
sbb
in
pop
jo
ins
std
arpl
add
pop
mov
and
lock
pushf
mov
clc
pop
mov
cmp
push
sahf
ins
div
es
ins
and
pop
add
mov
nop
test
inc
lea
mov
adc
mov
pushf
hlt
jne
daa
movs
or
cmp
mov
mov
pushf
inc
or
call
lea
mov
fistp
idiv
xchg
les
jmp
dec
dec
jb
call
imul
inc
mov
sub
movzx
ins
sbb
cmp
xchg
mov
mov
sbb
ficomp
adc
jbe
inc
add
fadd
sbb
or
mov
and
int3
and
mov
cs
pop
or
mov
inc
fld
xchg
mov
and
or
inc
(bad)
icebp
mov
mov
and
enter
ja
test
test
test
inc
test
and
sbb
ficom
jns
inc
in
push
inc
ret
or
out
int
out
and
ss
and
push
loope
popa
adc
sub
and
add
mov
loope
jb
outs
or
mov
mov
clc
and
xor
push
fdiv
xor
loope
ret
fld
ror
inc
ins
fcmovu
jecxz
add
or
js
fild
movs
shl
das
stos
mov
add
and
enter
xor
cvtps2pi
xor
sbb
cdq
cld
mov
mov
xor
jno
mov
test
loopne
jl
jge
mov
jg
les
xor
mov
or
inc
or
push
or
test
xor
add
xor
test
sbb
loop
aam
test
mov
xchg
mov
dec
inc
ficom
xchg
xor
ror
adc
cs
mov
sahf
and
pop
sahf
adc
mov
ds
sub
jb
sbb
push
push
adc
or
cdq
or
dec
dec
push
data16
inc
aad
adc
xor
jns
jg
and
xor
in
dec
adc
or
push
or
iret
sbb
inc
jo
add
cmps
jb
jnp
repnz
push
mov
popf
xchg
sbb
add
sbb
inc
push
push
sbb
cmp
jnp
jnp
adc
fild
add
data16
in
shl
adc
fwait
jae
pop
ret
add
mov
imul
mov
das
pop
xor
xor
(bad)
lods
shl
pop
leave
ror
xor
xor
xor
mov
das
add
xor
ror
xor
aam
out
(bad)
dec
push
and
adc
test
xchg
adc
push
push
cmp
dec
mov
test
adc
(bad)
mov
and
sub
aaa
mov
jmp
add
es
dec
adc
or
jne
dec
push
data16
cs
or
mov
push
sbb
loopne
add
dec
push
cmp
out
inc
retf
pop
retf
mov
mov
lahf
sbb
jle
popa
xlat
sub
rcl
and
inc
cmp
clc
dec
and
jnp
adc
cmp
or
push
mov
imul
mov
ret
or
dec
sbb
sbb
mov
xor
push
bound
retf
mov
adc
retf
(bad)
retf
dec
inc
iret
pushf
mov
retf
or
imul
dec
out
retf
push
retf
cdq
xor
retf
pop
frstor
or
retf
jo
adc
cmp
sub
or
shl
adc
retf
xor
retf
push
add
sub
cli
xor
adc
jbe
aaa
push
mov
lock
pop
hlt
shl
add
push
push
out
das
inc
push
outs
push
clc
inc
add
call
adc
stos
addr16
cmp
hlt
test
cmp
popf
sahf
gs
cmp
push
(bad)
fist
loop
pop
pop
sbb
push
push
add
dec
sub
nop
xchg
inc
sub
inc
and
or
sub
mov
fstp
xchg
rol
add
push
ds
leave
nop
inc
sub
movups
mov
idiv
test
or
mov
clc
movs
jg
enter
mov
mov
call
cwde
sbb
and
xor
mov
dec
xor
sbb
adc
test
arpl
call
or
mov
add
retf
cli
or
adc
neg
and
push
push
dec
mov
ret
nop
add
xor
idiv
and
movzx
je
mov
rol
pop
inc
and
inc
jnp
test
add
pop
loop
in
clc
pop
or
mov
inc
sbb
sti
pop
test
or
xchg
pusha
pop
lock
add
call
repnz
test
xchg
jo
jl
add
or
data16
jl
xor
or
mov
jmp
xor
loop
mov
test
scas
add
sbb
cs
sbb
lods
and
mov
pop
cld
cwde
pop
lods
and
dec
xchg
pop
inc
shl
adc
scas
lock
idiv
xor
and
dec
jmp
inc
mov
add
inc
dec
jne
jg
pop
cmp
mov
or
loope
pop
bound
xchg
adc
push
mov
cmp
and
arpl
shl
mov
in
data16
imul
or
jp
call
mov
std
dec
rcr
mov
rcl
adc
bound
or
push
mov
add
loopne
inc
and
and
enter
add
mov
(bad)
js
cmp
sub
adc
adc
push
push
leave
and
sbb
add
dec
push
cmp
cmp
mov
push
add
and
icebp
lods
fidiv
dec
inc
dec
test
cmp
mov
aaa
push
push
cmps
cmp
mov
enter
add
fld
sub
xor
adc
nop
and
xor
pushf
test
je
push
cmp
push
dec
pop
pop
sub
cmp
cmps
push
adc
jp
outs
sbb
mov
(bad)
push
pop
add
push
push
sar
sbb
add
scas
inc
sub
inc
inc
ret
or
mov
push
ss
mov
sub
pop
xor
cmp
pusha
ss
loope
xchg
sbb
inc
jno
ins
and
push
jns
dec
inc
cmp
out
mov
lock
adc
mov
pop
mov
popf
repz
int
xchg
retf
push
cmp
jecxz
cmp
or
call
inc
lock
icebp
push
cmp
repz
inc
fcomp
test
cli
add
lea
push
jne
fwait
jecxz
pushf
fsubr
inc
ror
sub
adc
(bad)
pop
xchg
and
mov
sub
nop
dec
mov
adc
mov
sub
pop
push
push
adc
ret
mov
call
pushf
(bad)
fadd
mov
add
sbb
add
dec
call
data16
inc
push
fs
aad
inc
xor
pushf
push
mov
movs
pop
leave
cmp
mov
call
or
lea
inc
(bad)
push
push
sub
push
mov
out
adc
ror
mov
test
cmps
jo
mov
adc
call
mov
push
jmp
movs
push
mov
add
cmp
xlat
jmp
add
fsub
push
loopne
pop
xor
dec
cmp
(bad)
xor
in
cmp
pop
dec
enter
add
scas
imul
push
cmp
idiv
jecxz
add
hlt
mov
inc
dec
mov
xor
inc
sbb
inc
ror
mov
add
dec
add
pop
and
adc
sti
inc
xchg
sub
sbb
test
in
mov
cmp
gs
add
xchg
les
jl
mov
cmp
and
retf
adc
imul
jo
cs
aam
or
pop
add
scas
pop
sub
sar
push
rcl
xlat
add
jge
out
ret
xor
es
mov
cmps
imul
mov
sbb
mov
loopne
cmp
jne
cmp
add
movs
(bad)
lea
test
fadd
mov
xchg
je
ror
mov
sbb
ds
loopne
data16
sbb
sub
sub
sub
leave
lods
or
lods
push
lods
enter
or
out
push
pop
mov
or
test
push
movs
call
or
mov
pop
inc
mov
mov
mov
call
xchg
jmp
repz
gs
add
push
mov
test
jmp
shr
enter
or
js
add
jle
inc
mov
jbe
popa
popa
mov
jo
cmp
bound
mov
clc
sbb
inc
dec
jb
sar
cmp
push
loopne
add
sub
gs
xor
fwait
and
xor
lods
mov
pop
inc
mov
and
ins
call
movs
push
jno
xchg
std
push
arpl
inc
xlat
ror
mov
push
dec
jbe
adc
push
cwde
femms
add
test
leave
cmp
mov
retf
inc
inc
lods
adc
aaa
push
and
and
(bad)
jg
inc
jmp
inc
punpcklbw
jl
push
mov
stos
sbb
adc
je
(bad)
rcr
mov
push
test
or
rcl
sub
repnz
icebp
cmp
push
popa
cmp
mov
or
push
cmps
mov
or
cwde
fnstsw
add
xchg
xchg
call
adc
mov
add
outs
bound
and
push
add
sub
or
push
je
bound
loopne
mov
and
add
sub
push
xlat
and
test
add
add
cmp
pop
cmp
xor
jmp
adc
cdq
adc
xchg
mov
and
add
add
or
add
and
mov
sahf
pop
pop
nop
rol
sub
ins
pushf
pminsw
dec
sbb
test
dec
div
inc
and
retf
pop
mov
push
sbb
adc
inc
rcl
or
sbb
enter
adc
mov
mov
mov
xor
pop
jge
hlt
ud2
pop
mov
lea
xchg
sbb
sbb
push
and
in
xchg
sbb
sub
pusha
retf
stc
or
imul
(bad)
mov
dec
enter
add
pop
add
add
pop
and
jmp
add
pop
je
mov
mov
inc
(bad)
sbb
push
pop
jbe
dec
addr16
sub
ror
xchg
sti
out
test
mov
sub
mov
sub
gs
mov
mov
and
mov
dec
cmp
jne
jmp
gs
push
ret
mov
mov
and
stos
ja
jne
pop
inc
sahf
lea
fsubr
xchg
jl
rcr
hlt
imul
pop
sub
mov
cmp
add
leave
fld
add
xchg
pop
cmc
push
repnz
popf
je
cmp
adc
pop
jne
and
inc
cdq
push
push
mov
mov
daa
push
add
push
jns
xchg
cmp
movzx
or
mov
mov
jnp
sti
mov
aam
and
pop
mov
adc
add
sub
clc
fstp
cmp
sbb
mov
jge
cld
and
and
sub
sub
pop
shl
test
jmp
add
lds
lods
jb
sub
sub
iret
add
shl
sbb
mov
pop
push
nop
xor
or
sub
jmp
sbb
push
je
mov
or
and
mov
sar
sub
ds
and
or
jae
jnp
sar
addr16
push
imul
inc
dec
and
inc
push
xchg
movs
mov
hlt
mov
add
jne
mov
and
push
sub
push
aas
xchg
push
outs
out
out
aam
push
cmp
and
pop
or
lods
div
data16
mov
fmul
xchg
ror
std
pop
or
inc
or
adc
test
dec
add
add
mov
or
add
jp
xchg
add
xor
(bad)
adc
icebp
pop
sbb
movs
pop
cmp
jne
xchg
sbb
jle
femms
iret
jne
fimul
rol
ds
setge
(bad)
mov
ret
test
adc
mov
ins
and
sub
sub
dec
mov
jg
je
jo
popf
xor
xchg
jp
jbe
and
push
mov
mov
out
aas
lahf
ret
sub
scas
data16
bound
and
adc
mov
popa
mov
jl
push
or
nop
pop
das
jnp
(bad)
cmp
or
icebp
dec
adc
mov
(bad)
add
xor
les
shl
sub
sar
pop
rcl
mov
jb
inc
movs
dec
cdq
mov
dec
sbb
mov
xchg
scas
inc
sub
imul
clc
add
or
jp
test
sub
popf
and
and
sar
push
mov
mov
call
xchg
jne
movzx
sub
jb
xor
push
jmp
mov
jmp
mov
jmp
mov
lock
lods
popa
jle
mov
aas
pusha
(bad)
aas
dec
mov
jmp
mov
jmp
mov
jmp
inc
es
jmp
jg
jmp
mov
jmp
mov
jmp
aaa
or
adc
add
in
pop
daa
cmp
pop
test
dec
cld
sahf
pusha
test
das
hlt
sub
xor
mov
xlat
popa
add
lock
int
scas
dec
xchg
mov
aam
sti
loop
inc
add
leave
ror
mov
add
mov
jmp
cmp
retf
jle
and
xchg
hlt
cld
push
lea
in
xchg
mov
in
inc
sbb
fsub
cmp
add
jae
daa
xor
inc
in
mov
mov
in
movs
mov
in
push
jmp
cmc
add
ds
push
fisubr
xchg
jne
retf
mov
lock
ds
pusha
xchg
xor
dec
test
ror
or
rcr
rol
push
test
(bad)
adc
jmp
dec
jp
adc
mov
pop
sub
dec
jne
aaa
lock
jge
push
mov
jecxz
popa
and
nop
xor
sbb
fcomp
sub
jmp
test
sbb
cmps
je
pop
add
lahf
pop
loopne
jne
mov
mov
dec
pop
ss
mov
and
or
push
(bad)
aam
es
jb
ret
jns
inc
xor
mov
or
xchg
add
and
and
mov
pop
fcmovnbe
je
popa
rol
xor
add
cmp
pop
xor
add
fisub
js
popa
aaa
adc
push
pusha
ret
or
and
dec
adc
ins
mov
sbb
pop
mov
outs
xor
les
jge
mov
ret
cmp
jge
xchg
jl
inc
cmps
add
mov
fadd
xlat
rcl
dec
div
pop
mov
sbb
fcmove
test
add
paddsw
fdiv
sub
mov
nop
and
cmp
test
or
cwde
mov
test
jg
rol
and
push
push
add
test
inc
clc
inc
push
jmp
mov
jmp
mov
jmp
pop
sbb
inc
out
aas
xor
or
xor
sbb
(bad)
sbb
or
mov
out
loopne
aaa
sub
push
push
fist
add
jne
mov
adc
cld
imul
ds
nop
lods
cmp
out
xchg
sub
fs
call
jmp
(bad)
js
cmp
push
push
iret
in
sub
or
jae
sahf
adc
or
ret
fbstp
jo
js
xchg
cmp
ja
dec
dec
je
sub
and
(bad)
adc
inc
test
sub
and
test
dec
sahf
loopne
fisub
push
sub
dec
dec
dec
dec
and
sbb
jg
add
sahf
mov
dec
dec
inc
into
ret
dec
inc
pop
inc
dec
dec
push
inc
push
push
push
inc
ficom
add
iret
lock
pop
jo
jp
popa
ins
gs
lods
add
and
gs
jmp
push
add
(bad)
dec
push
push
je
ins
adc
dec
(bad)
(bad)
jg
push
ins
add
out
inc
mov
ret
jnp
or
jo
cs
ins
dec
sar
and
bound
push
add
dec
inc
jb
popa
jns
ins
cmps
ds
pop
outs
inc
mov
cli
test
pop
jae
add
dec
(bad)
(bad)
out
imul
popa
ins
inc
outs
ja
push
push
(bad)
outs
retf
pop
pop
sbb
mov
jns
jnp
adc
(bad)
mov
gs
imul
je
sbb
jge
inc
mov
outs
cmp
test
sub
push
sti
dec
jle
push
push
inc
outs
ins
fs
addr16
push
jo
jl
sub
xchg
es
jns
jg
xchg
scas
mov
or
dec
in
(bad)
call
inc
jle
pushf
inc
test
in
pop
adc
jae
jmp
push
(bad)
test
pop
xchg
std
pop
sub
push
push
push
push
imul
sbb
fsubr
or
es
or
cmp
(bad)
cld
loope
inc
imul
jne
sahf
or
sti
pushf
fsub
cmp
shl
int
xor
inc
inc
fcom
movzx
dec
imul
jnp
xchg
mov
adc
in
jp
pop
pop
pop
es
fiadd
xchg
loopne
cmc
std
sub
sbb
sbb
xchg
lock
adc
out
ins
cmps
add
int3
pop
jo
xchg
and
add
neg
mov
(bad)
push
lods
adc
dec
add
js
imul
dec
add
push
loopne
inc
mov
call
cld
out
cmp
push
fnsave
ss
cs
fadd
push
shr
fwait
scas
adc
push
hlt
mov
mov
mov
jl
ins
push
pusha
(bad)
push
ds
les
pop
mov
lahf
cmp
jae
mov
clc
push
mov
imul
movs
xchg
dec
outs
push
movs
pop
mov
mov
mov
push
loopne
jno
jb
aam
fwait
out
cmp
mov
outs
add
add
cmps
adc
add
add
push
dec
inc
hlt
fistp
je
outs
outs
test
adc
xor
ror
or
add
std
(bad)
cmp
adc
dec
lock
inc
dec
ja
xor
pop
(bad)
icebp
sub
push
mov
or
arpl
in
fucomi
je
outs
jae
mov
test
or
add
in
int
and
xor
hlt
and
xlat
mov
loopne
cmps
jg
dec
xchg
mov
push
jb
adc
inc
popa
jb
jb
xor
ds
or
outs
ss
pusha
dec
shl
cmp
push
test
arpl
cs
mov
hlt
cdq
or
shl
xlat
(bad)
mov
je
sahf
ins
or
test
dec
jno
gs
inc
jg
jbe
test
or
outs
or
inc
and
and
gs
pop
add
xor
xlat
sbb
cmp
inc
les
xor
dec
xchg
rcl
ins
and
push
les
hlt
in
inc
fs
push
inc
xchg
xchg
mov
ss
xchg
jnp
mov
push
and
mov
push
push
dec
dec
out
shr
ss
push
jmp
dec
or
sub
cs
push
sbb
pop
mov
pop
mov
cmps
push
push
popa
inc
pusha
push
and
fstp
test
(bad)
in
push
int3
out
push
mov
add
(bad)
push
or
sti
call
lods
cwde
mov
xchg
lods
mov
or
aam
xchg
in
mov
scas
mov
cmp
or
pop
add
or
sub
lods
clc
inc
xor
inc
imul
sub
pop
cwde
cmp
js
push
or
outs
jae
(bad)
push
cld
xchg
mov
test
inc
push
popa
jbe
xor
push
add
mov
lahf
jp
ret
test
mov
test
outs
outs
je
and
test
jb
xor
adc
stos
push
adc
mov
dec
nop
xor
mov
outs
pusha
fucomip
pop
mov
push
loop
adc
pop
cmp
and
xor
ins
inc
fstp
test
arpl
outs
rcl
sub
jne
fs
pop
mov
sub
(bad)
cmps
fild
pop
cmovno
dec
cmps
mov
xchg
test
shl
loope
imul
pop
jno
cmp
outs
and
dec
je
add
push
push
in
mov
dec
inc
jns
inc
dec
dec
pusha
or
add
xchg
or
in
repnz
std
das
jl
add
mov
push
pop
mov
setl
imul
ds
aas
push
in
or
or
arpl
xchg
fadd
popa
pop
fsub
adc
or
shl
imul
or
adc
adc
pop
adc
inc
push
bound
in
adc
push
mov
ret
pop
popf
repnz
mov
inc
jb
addr16
jne
stos
and
fwait
inc
pop
inc
push
adc
dec
or
stos
ins
push
mov
inc
inc
push
arpl
jo
push
adc
lock
xor
xchg
mov
push
pop
cmp
outs
popa
es
nop
mov
pop
mov
or
jle
sub
push
(bad)
jl
cmc
pop
mov
cmp
pop
ret
popa
dec
jae
mov
cmp
bound
xchg
mov
test
or
cmp
fdiv
test
rcl
lods
imul
rcl
(bad)
xlat
bndstx
push
test
xchg
sbb
pop
call
and
sbb
pop
push
clc
inc
aaa
test
ja
or
pop
fisubr
(bad)
jo
jo
push
jne
pusha
or
mov
pop
xchg
dec
aaa
(bad)
aad
call
fisttp
dec
and
inc
push
mov
adc
dec
sub
jo
dec
in
(bad)
mov
and
inc
mov
js
push
xchg
cwde
cmp
add
and
add
add
cmp
push
outs
(bad)
loope
neg
mov
cdq
retf
ffree
rcr
aas
and
mov
push
cwde
dec
push
push
test
push
or
imul
adc
mov
or
inc
lods
mov
jne
sub
lods
rol
mov
sub
loope
sub
out
sub
adc
xor
sub
cmp
or
lods
vminpd
or
dec
inc
add
int3
popf
neg
mov
mov
adc
jbe
sub
out
jae
not
movs
and
int3
retf
fcom
push
pusha
inc
and
dec
test
mul
sar
or
sbb
dec
xor
sub
add
add
inc
xor
int3
sub
inc
xor
mov
retf
cmp
mov
call
cmp
inc
gs
test
scas
inc
cmp
pop
add
sbb
adc
and
inc
and
shl
pop
push
adc
scas
add
ja
in
mov
pop
dec
aaa
add
fcomp
pop
dec
jnp
js
cmp
in
fcomp
mov
cmp
pop
add
loopne
pop
dec
cmp
ret
(bad)
sbb
dec
push
jo
mov
push
fadd
ja
loope
xchg
cli
and
ja
sub
inc
pop
dec
pop
mov
xor
fiadd
or
enter
dec
jae
xchg
xchg
xchg
pushf
shl
test
dec
outs
mov
xchg
xchg
xchg
stos
sar
sub
dec
outs
nop
mov
retf
xchg
xchg
(bad)
daa
xchg
xchg
xchg
xchg
outs
mov
xchg
not
xchg
pusha
xchg
xchg
xchg
xchg
mov
xchg
retf
sbb
xchg
xchg
xchg
lods
sar
and
inc
push
int3
mov
xor
mov
outs
das
mov
xchg
cwde
push
sbb
push
idiv
ja
call
xchg
test
fnsave
int3
push
sub
jp
in
fidivr
push
sbb
sbb
lock
lea
or
and
adc
or
jae
push
push
fs
bound
or
rcl
mov
push
popa
or
loopne
or
inc
dec
pop
inc
cmp
push
pop
ja
pop
cmp
push
imul
test
jb
lds
nop
ret
add
idiv
push
loop
sub
inc
pop
bnd
push
popa
mov
ins
popa
pop
sti
call
or
adc
inc
or
mov
clc
je
popf
bound
(bad)
mov
add
xchg
add
add
mov
adc
or
pop
mov
popf
sbb
add
cs
push
(bad)
and
and
jle
clc
mov
dec
sbb
push
add
fwait
dec
mov
js
mov
mov
fidivr
rcr
inc
cld
ds
sbb
dec
cdq
push
fsubr
lods
in
out
iret
pop
and
or
mov
imul
and
and
xor
inc
xchg
lods
cmp
sbb
push
mov
mov
ss
jb
mov
add
and
add
(bad)
clc
mov
dec
mov
test
pop
push
push
stos
pop
cmp
sbb
inc
test
jne
push
test
rcr
jge
or
push
add
das
xor
ror
push
push
mov
jbe
dec
mov
mov
add
and
cs
jnp
cmp
sbb
sbb
mov
jmp
cs
mov
push
adc
pop
ds
lock
inc
pusha
push
data16
lods
loop
cwde
js
xchg
add
xchg
(bad)
dec
adc
fadd
mov
aam
cld
add
mov
jbe
adc
adc
push
enter
mov
fcomp
or
add
ror
call
cmp
push
gs
adc
rcr
jp
cdq
dec
dec
inc
add
or
and
add
sbb
sbb
and
call
pusha
lock
mov
pop
idiv
xor
adc
add
fdiv
dec
inc
adc
push
xor
lods
popa
push
adc
in
mov
ins
push
pop
add
mov
or
add
add
push
xchg
lock
adc
mov
mov
push
push
adc
jl
cs
fdiv
popa
or
add
shl
or
sub
add
shr
xchg
push
xchg
sbb
sub
test
addr16
sbb
xchg
movzx
arpl
outs
dec
push
dec
cmp
loope
adc
mul
jb
mov
sete
add
xor
jo
je
ins
jno
(bad)
adc
xor
push
or
mov
push
mov
push
rol
cmp
push
sbb
movq
call
neg
push
das
add
xchg
sahf
push
adc
cmp
fisttp
stc
push
add
add
sbb
sti
jg
or
sbb
lea
mov
jp
pusha
jg
data16
mov
inc
clc
mov
lea
cmc
cmp
mov
adc
dec
lock
push
cmp
jbe
repz
movs
jmp
cmp
jl
cmp
(bad)
jl
add
mov
mov
or
js
or
mov
pop
sbb
cmp
push
push
push
repz
and
call
add
shl
ret
popf
or
jge
ss
add
retf
sar
mov
ret
jge
hlt
mov
das
movs
test
sub
add
sub
jecxz
popa
jae
sbb
lock
cmps
(bad)
jne
cmp
not
ret
xchg
ret
retf
mov
mov
add
popa
or
xlat
cmp
rcr
sub
vmwrite
add
and
nop
mov
mov
mov
cmp
xor
jae
(bad)
gs
or
daa
cmp
stos
mov
mov
cmp
push
or
jmp
adc
enter
xor
pop
sbb
sahf
or
jmp
inc
fs
inc
and
mov
jp
push
or
jle
adc
cmp
or
(bad)
cdq
jo
xor
pop
ins
test
push
adc
sub
jbe
sbb
push
rol
loop
sbb
or
cs
call
ja
add
aam
lahf
retf
pop
jnp
mov
bound
inc
test
popf
dec
mov
pop
out
mov
jbe
mov
dec
or
mov
rcr
inc
shl
adc
pop
outs
pusha
aad
push
sub
ret
mov
jb
sbb
adc
push
pusha
xchg
repnz
mov
dec
mov
mov
push
mov
mov
pop
or
fstp
xor
test
popf
or
fdivr
nop
mov
jl
dec
jne
sub
pop
and
sbb
(bad)
push
or
lahf
push
sbb
or
scas
ds
aas
sub
xchg
push
adc
hlt
adc
and
cmp
jg
cmp
jg
mov
sub
push
inc
cmc
shl
call
jl
or
or
stc
fstp
fwait
jmp
ja
add
scas
adc
inc
shl
push
pop
(bad)
out
shl
add
stos
neg
sub
shl
mov
test
mov
mov
mov
push
jne
jnp
stos
and
mov
mov
mov
jle
mov
mov
inc
lea
mov
rcr
mov
jp
clc
jmp
sub
call
neg
push
sbb
cmp
adc
or
dec
sar
xchg
ret
js
push
xchg
cmc
lea
adc
lock
or
xor
dec
(bad)
jmp
sbb
test
je
sub
sub
leave
cs
out
or
mov
lock
movs
add
cmp
out
rcl
pop
or
mov
sub
jecxz
mov
mov
inc
les
add
cmp
push
sbb
retf
sub
pop
mov
inc
sbb
scas
aad
push
and
or
sti
and
imul
bound
pushf
ds
js
adc
adc
sub
or
movq
mov
or
xlat
mov
ror
fstp
not
sbb
add
and
cmp
jne
mov
adc
push
in
outs
outs
sbb
push
pusha
xchg
push
push
inc
std
out
cmp
inc
repz
cdq
fwait
mov
es
(bad)
add
(bad)
movs
clc
jmp
mov
(bad)
inc
add
mov
test
je
test
ja
data16
into
add
(bad)
stos
neg
ror
jne
mov
ror
push
fstp
mov
mov
or
jo
arpl
(bad)
inc
pop
xchg
cld
mov
pop
rcl
mov
jns
cmp
push
pop
loopne
push
jns
je
ins
cs
add
mov
call
in
or
out
inc
jnp
push
not
jle
xor
mov
add
lds
jno
inc
mov
movs
leave
aam
cld
push
in
adc
jg
and
add
gs
mov
aaa
out
call
xlat
popf
rol
jg
mov
movs
adc
jne
outs
ins
cmp
xor
gs
pop
mov
fistp
mov
pop
dec
popa
outs
popa
addr16
fisttp
and
jmp
ret
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
pop
jbe
test
jl
out
pop
test
dec
setge
mov
scas
sbb
ins
inc
inc
ins
ds
fwait
cmp
into
adc
dec
inc
js
gs
(bad)
jns
pop
xlat
pop
xor
sub
cdq
loop
sub
mov
sahf
ja
mov
jne
aam
dec
jp
mov
adc
sub
(bad)
scas
cmp
mov
mov
outs
in
and
inc
push
and
or
and
scas
sbb
call
mov
test
add
push
outs
inc
push
or
mov
pop
cmps
mov
push
xchg
lahf
push
outs
push
lahf
push
pop
(bad)
pop
adc
or
adc
mov
push
push
fldenv
sub
or
clc
sahf
inc
xchg
and
ins
call
jmp
mov
adc
pop
xchg
sbb
and
xor
cmp
add
dec
lods
adc
ror
fdivr
jb
in
mov
mov
mov
mov
mov
mov
add
(bad)
fdivr
mov
(bad)
ucomiss
adc
adc
jge
jnp
adc
aam
mov
and
ret
out
fisttp
dec
adc
mov
faddp
push
shl
cmp
repz
dec
or
sbb
cmp
repz
xor
fist
iret
repz
sti
popa
imul
xchg
iret
jne
sahf
fld
outs
lods
sbb
cwde
mov
sub
push
add
or
mov
xchg
ss
add
jno
mov
pop
cmp
loopne
call
pop
or
push
cli
push
(bad)
mov
push
cmp
jb
cwde
iret
fst
sbb
push
dec
mov
pop
dec
xor
push
jnp
pop
add
(bad)
or
mov
cwde
sbb
out
push
xor
lock
retf
fs
aaa
or
dec
imul
xor
cmp
xor
movs
inc
pop
cwde
iret
fadd
sub
inc
add
dec
pop
sub
les
sar
imul
aam
sahf
pop
scas
sub
dec
add
push
inc
push
xchg
xchg
xchg
mov
nop
xchg
sti
aas
movs
movs
add
dec
sahf
add
jb
xchg
int3
lock
pop
add
rol
add
or
ror
aaa
daa
sti
pop
inc
(bad)
jb
mov
dec
add
out
sbb
js
xchg
pop
inc
pop
mov
frstor
or
outs
or
jecxz
push
or
add
or
rcl
push
push
pop
or
pop
out
add
mov
mov
dec
gs
shl
mov
push
mov
dec
popa
ins
cmp
jo
push
data16
push
mov
ds
fcom
scas
xor
fmul
ins
or
lods
cmps
scas
and
dec
inc
or
loope
pop
push
add
leave
push
or
arpl
add
adc
dec
or
add
push
(bad)
enter
jae
mov
sub
fnsave
xor
repnz
rol
inc
add
xchg
dec
cmp
push
pop
add
push
repz
add
inc
sbb
out
mov
pop
js
dec
and
sbb
inc
shl
pop
retf
lds
sbb
dec
inc
jae
push
mov
dec
xor
int3
jbe
scas
dec
sar
sub
adc
into
push
fwait
adc
aam
outs
popa
jb
push
ficom
dec
push
jmp
sub
pop
test
xor
ins
sar
inc
gs
cs
push
add
sub
mov
shl
addr16
and
jbe
dec
jno
add
rcr
sbb
jns
jo
fnstenv
add
rol
push
or
inc
ins
scas
aaa
push
push
cwde
pop
popa
jae
adc
inc
xchg
dec
dec
adc
cmp
iret
adc
push
popa
or
and
pop
in
dec
bound
dec
lds
adc
pop
imul
push
loopne
pop
inc
jg
dec
add
adc
push
inc
mov
inc
sti
jb
popa
jns
out
cs
les
fmul
pop
cs
xor
arpl
cmp
pop
cmp
dec
xchg
mov
ins
pop
jl
loopne
ss
dec
fsubr
stos
loopne
jo
outs
xor
add
scas
imul
sar
dec
outs
jbe
sbb
test
pop
xchg
adc
jno
addr16
mov
neg
push
in
fistp
push
mov
sub
and
popa
ja
xchg
xor
xor
jns
add
push
mov
jns
adc
inc
jne
xor
pop
out
cmp
mov
stos
push
push
mov
bound
sub
fadd
call
(bad)
or
mov
js
daa
mov
pusha
cmp
mov
popaw
imul
pop
mov
xor
ret
int3
imul
dec
inc
sub
test
sub
inc
jg
popa
add
int
sub
jg
enter
test
(bad)
mov
pop
push
ja
inc
fadd
push
sub
jo
xchg
push
mov
int3
mov
sbb
inc
popaw
jne
je
out
sbb
ror
ret
call
push
retf
adc
cmp
dec
bound
or
out
loop
sub
mov
pop
shl
or
outs
pusha
jno
pop
icebp
and
jae
mov
(bad)
ins
out
sahf
jae
inc
ret
inc
push
scas
fucomi
shr
scas
pop
shr
test
fimul
pop
jmp
adc
pop
push
push
scas
mov
adc
sbb
jne
mov
paddd
das
aad
add
xchg
mov
ss
fdiv
add
mov
adc
dec
ins
mov
adc
inc
xchg
sbb
adc
(bad)
dec
and
add
or
int
mov
in
lods
shl
rcl
imul
xor
add
adc
in
inc
shl
(bad)
cvtps2pi
inc
add
push
es
fisttp
mov
or
cmc
scas
xor
xor
sub
arpl
pusha
xchg
jecxz
fiadd
outs
dec
lods
add
adc
push
and
fcom
and
add
and
xchg
push
int
inc
aaa
mov
push
inc
xchg
dec
dec
js
sti
rcr
fidivr
xchg
xor
push
movs
pusha
pop
imul
hlt
popa
test
or
and
or
or
inc
sbb
add
fsubr
ins
add
inc
pop
das
lock
ret
and
mov
xchg
fcomp
push
add
push
sbb
das
jg
inc
and
inc
mov
pushf
fmul
fcom
push
pushf
aad
repnz
push
inc
test
aam
xlat
jg
retf
cmp
cdq
sub
pop
add
popa
dec
mov
test
push
lods
inc
add
int
fisub
mov
sub
sub
sub
jl
inc
xchg
jmp
mov
cmps
test
int
cmp
sbb
mov
push
imul
in
cmps
push
inc
cs
jb
xor
mov
(bad)
leave
cmp
sbb
mov
movs
repz
pushf
mov
mov
dec
inc
sahf
add
daa
and
mov
daa
daa
daa
into
hlt
sub
popa
scas
call
leave
leave
xor
bsr
in
adc
js
pop
cwde
push
mov
mov
xchg
fimul
push
mov
es
and
jecxz
pushf
inc
lahf
dec
cmp
test
dec
pop
cmp
(bad)
or
add
dec
sub
pop
sub
cmp
shl
jae
imul
sbb
js
push
cwde
add
inc
imul
dec
jae
mov
add
add
push
push
ins
je
xor
inc
inc
and
jb
cmp
jecxz
push
popa
ins
jne
cmp
xor
add
cmp
ins
hlt
add
outs
or
bound
aad
ja
test
add
add
stc
push
sbb
xlat
or
popf
push
xchg
add
xor
or
sbb
and
das
leave
jno
xor
fwait
gs
aaa
(bad)
pop
sti
push
popa
arpl
pop
xchg
or
aam
dec
jae
imul
push
xchg
mov
or
dec
imul
popa
jno
jno
test
aam
ffreep
or
mov
stos
mov
push
sbb
ins
xor
pop
xor
push
daa
sahf
pop
daa
or
or
ss
pop
sub
stos
shl
or
sub
xchg
bound
imul
add
inc
aaa
dec
push
dec
shl
pop
xor
inc
xchg
and
pop
dec
or
or
xchg
(bad)
xor
and
mov
lea
inc
push
mov
xchg
inc
mov
add
es
jo
int
push
loopne
cmp
xor
add
inc
in
imul
test
cli
mov
mov
sub
fisubr
dec
jo
add
add
jns
sahf
adc
pop
xor
adc
xchg
pusha
sbb
or
lods
es
jp
inc
mov
or
bnd
mov
or
cmp
dec
push
mov
pop
rcr
mov
cmp
test
cmp
push
shl
pop
or
pop
or
dec
push
shr
sbb
aam
jo
sub
jbe
mov
sar
adc
xchg
adc
sub
mov
or
rcr
xchg
pop
xor
js
sbb
add
add
cwde
scas
sar
sbb
and
push
or
inc
in
xchg
jo
(bad)
push
rol
hlt
mov
arpl
jns
add
sub
mov
xor
sub
mov
int3
dec
(bad)
sti
inc
ret
aaa
jmp
cmp
pop
mov
inc
dec
mov
adc
shl
cmp
outs
out
jmp
and
push
push
mov
push
mov
test
je
xor
outs
pusha
neg
mov
push
sbb
ret
mov
call
dec
cmp
setne
pop
pop
ret
jg
(bad)
mov
test
push
ins
je
icebp
mov
mov
xor
mov
ja
mov
lea
mov
xlat
and
(bad)
mov
dec
les
pop
pop
pop
ret
nop
sub
sbb
xchg
aas
pop
sbb
cmp
lds
pushw
(bad)
ds
inc
and
xchg
mov
push
mov
ror
outs
mov
mov
mov
test
jl
inc
pop
push
or
fdivr
lock
adc
push
sub
push
inc
cmc
jne
cmp
lea
lea
or
adc
push
mov
and
mov
push
hlt
sbb
ins
idiv
adc
out
sbb
mov
xor
mov
mov
mov
aam
clc
xor
push
push
push
mov
adc
movs
loopne
inc
mov
inc
sbb
pop
(bad)
push
mov
push
sbb
or
push
and
ret
cmp
mov
jl
test
je
fcomp
mov
(bad)
jp
retf
cmp
mov
call
jbe
fstp
adc
and
je
lock
sub
add
imul
icebp
loopne
ret
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
mov
cmp
mov
dec
jne
iret
rol
mov
push
dec
cld
push
xor
cld
push
(bad)
in
and
cmp
cmp
and
pop
push
push
jb
dec
pusha
cwde
jl
jge
mov
aaa
fistp
dec
inc
jl
push
maskmovq
neg
inc
xor
sbb
stc
mov
sub
jne
pop
fcomip
hlt
mov
jl
loopne
enter
push
loope
inc
repz
sbb
cwde
jecxz
adc
cli
push
hlt
fimul
xchg
dec
push
out
ror
or
sbb
mov
push
fmul
ins
mov
nop
ror
sbb
push
inc
mov
jmp
xor
xor
mov
fcomip
add
movzx
in
ret
and
scas
jo
loopne
push
adc
(bad)
cmp
clc
div
(bad)
rcl
add
xchg
cwde
mov
mov
lds
fadd
adc
ror
mov
test
and
pop
lods
mov
dec
jp
xor
pop
cmps
mov
mov
or
jl
inc
ds
inc
lock
push
aaa
xor
add
test
sar
pop
xchg
(bad)
xchg
ret
adc
xchg
fistp
dec
fdiv
push
mov
ins
mov
adc
pop
mov
ss
fmul
call
or
fisttp
add
inc
jnp
adc
dec
icebp
dec
(bad)
mov
je
lahf
mov
aaa
and
les
mov
xor
ss
cwde
and
or
jg
mov
jns
inc
in
in
shl
arpl
adc
sar
test
jl
inc
mov
lea
jo
cmp
sahf
retf
pop
sar
push
push
push
sbb
sbb
inc
fstp
dec
jne
mov
xchg
sbb
jo
test
adc
js
inc
jg
into
and
stos
and
push
fdiv
push
(bad)
repnz
adc
hlt
pop
adc
cli
out
cmp
add
mov
das
jmp
mov
push
pop
dec
sbb
add
cmp
popa
cmp
cmp
cmp
push
jno
jg
sar
test
push
dec
call
cdq
and
popf
call
es
sbb
inc
cmp
pop
cwde
frstor
pop
mov
mov
aas
pop
into
loop
ja
jo
cmp
add
push
outs
adc
pop
dec
jg
gs
xor
addr16
les
int3
fdivr
lock
nop
in
adc
mov
in
enter
push
cmp
lahf
xor
ins
mov
lock
cdq
sub
cdq
ror
jae
pop
jns
add
sbb
fst
sub
adc
scas
(bad)
movsx
int3
fs
cmc
in
jne
ins
mov
dec
test
stos
push
pusha
rol
sub
pushf
aam
popf
or
popf
ins
add
cli
or
std
in
movs
pusha
(bad)
mov
pop
mov
cmps
cmp
xor
mov
cld
inc
push
or
int3
adc
bound
or
loope
inc
pop
mov
or
clc
and
xor
aam
fadd
int3
data16
or
sbb
push
enter
jmp
sbb
sbb
mov
jp
stos
jno
aaa
mov
cmp
ret
mov
push
iret
les
test
push
iret
xchg
jmp
pop
push
je
xor
inc
ins
mov
jno
in
popf
out
mov
int3
pop
fdiv
fmul
mov
test
push
push
idiv
retf
stos
sar
ret
sbb
push
sbb
cld
push
pop
jmp
push
test
fcmove
pop
dec
hlt
cmp
ja
or
mov
mov
in
push
sbb
xor
sub
adc
mov
mov
add
jl
adc
(bad)
setne
xlat
sbb
mov
jmp
inc
and
pop
xchg
inc
ret
stos
jno
mov
pop
mov
or
test
or
or
ret
inc
adc
jne
pushf
ret
xchg
cmp
dec
and
mov
push
pop
cmp
mov
mov
mov
xor
sbb
add
adc
push
adc
cld
jno
inc
repnz
lds
push
(bad)
not
int3
and
inc
inc
cld
push
mov
dec
je
or
sub
je
jmp
std
inc
mov
jl
and
test
sbb
adc
fsubr
adc
outs
dec
(bad)
and
js
xchg
sbb
or
aad
in
xor
jge
xchg
out
add
out
pop
xor
or
dec
mov
inc
scas
lock
into
mov
push
arpl
outs
lods
xchg
adc
xchg
outs
(bad)
nop
sub
cmp
add
into
out
lods
lock
clc
sbb
mov
cmp
into
dec
rcr
push
mov
or
pop
adc
movzx
jno
out
call
test
pop
pusha
test
and
out
lods
add
pop
dec
pop
cdq
dec
sahf
adc
data16
xchg
push
call
inc
adc
and
pop
jp
push
add
jne
or
mov
pop
test
jne
cmps
gs
fldcw
push
push
test
mov
cmp
jb
in
mov
pop
retf
lods
cmp
gs
pop
xlat
inc
std
dec
fcomp
mov
mov
outs
inc
ret
(bad)
jg
mov
stos
inc
mov
mov
inc
jb
in
iret
fcmove
fcom
ja
sar
sbb
retf
mov
sub
push
loope
push
sub
aad
dec
cld
lock
or
sar
stos
add
jae
adc
test
pushf
mov
mov
outs
inc
push
fnsave
mov
outs
add
mov
xor
xchg
stos
push
into
sbb
inc
dec
jne
daa
push
movs
mov
push
add
pop
jmp
or
gs
mov
fadd
inc
mov
cmc
in
dec
shr
shr
fadd
pop
cdq
ret
(bad)
aas
cs
dec
xchg
test
xchg
xchg
sbb
popa
rcl
rcl
mov
inc
and
fcom
movs
nop
pop
shr
sbb
adc
push
mov
jo
pusha
ret
push
and
call
add
ret
out
(bad)
mov
push
add
push
cld
jmp
cmp
jl
inc
mov
cmp
jne
sbb
inc
push
xchg
jmp
fs
addr16
sub
sub
jge
pop
fdivrp
cmp
adc
pop
push
aaa
xchg
mov
movs
ret
shl
mov
cmps
push
imul
inc
pop
fadd
clc
test
push
ds
frstor
not
test
adc
hlt
push
movs
dec
pop
das
xchg
sahf
pop
pop
and
pop
mov
dec
test
ret
sbb
test
jmp
jo
or
pop
push
adc
and
lea
sub
loope
cs
jne
lods
or
addr16
cld
in
test
xor
mov
mov
sub
adc
into
push
std
fwait
in
fnsave
add
mov
je
sub
mov
pop
dec
jge
dec
daa
jg
jae
jge
jo
outs
std
push
jmp
add
add
jle
cmps
cmp
add
(bad)
mov
idiv
mov
fwait
inc
popa
jg
mov
loopne
lock
mov
fisub
push
jge
enter
(bad)
mov
jnp
mov
sar
push
or
jl
shl
cli
sub
fcmovb
jg
mov
push
fucomip
lsl
adc
jbe
pop
cmp
jg
les
les
test
pop
dec
jmp
or
(bad)
jmp
fucomip
out
in
jmp
leave
mov
mov
test
pop
mov
je
jle
test
dec
add
mov
retf
push
jl
enter
mov
je
xchg
adc
or
mov
popa
mov
fistp
push
push
xor
or
mov
add
fldcw
push
cmp
les
adc
int
sbb
pop
adc
mov
dec
adc
(bad)
loope
adc
inc
ja
adc
bound
sbb
retf
xor
xor
pop
push
icebp
dec
or
rcl
pop
inc
inc
cwde
push
out
pop
hlt
adc
pusha
enter
jl
call
mov
lea
adc
or
(bad)
inc
jb
out
sub
cmp
test
shl
inc
cmc
hlt
adc
sbb
adc
clc
add
xlat
retf
(bad)
ss
lods
movs
mov
or
(bad)
sbb
push
(bad)
inc
(bad)
pusha
mov
test
inc
stc
dec
cmp
(bad)
or
push
mov
shr
test
pop
cmp
call
or
aam
xlat
add
ins
mov
add
lock
in
rol
fcom
pushf
xchg
adc
sub
sahf
aad
and
sbb
jg
clc
add
cmp
jne
push
pop
pop
je
sub
fisttp
or
jge
push
jns
xor
pusha
and
push
jmp
push
dec
lock
or
call
in
or
add
cmp
or
loopne
jge
test
js
inc
aas
aam
adc
(bad)
push
js
push
ins
inc
sub
clc
js
or
xchg
jp
xchg
fidivr
xchg
es
sbb
push
sub
or
int3
cmp
sbb
sbb
call
ficom
jo
mov
jne
(bad)
lods
add
push
ret
es
or
push
mov
test
push
enter
or
and
loopne
or
sbb
ja
adc
test
adc
call
loopne
push
inc
shl
je
add
lods
xchg
xchg
pop
addr16
nop
sahf
daa
lock
test
ja
mov
push
pushf
inc
cmp
fadd
retf
out
inc
or
mov
and
lahf
push
(bad)
cmps
mov
jo
xor
mov
adc
xlat
js
out
sbb
out
aas
cmp
or
adc
dec
or
dec
cli
mov
pop
adc
dec
add
push
movs
test
jmp
jne
adc
push
inc
rol
inc
dec
(bad)
fmul
imul
mov
pop
or
and
sub
outs
outs
data16
inc
adc
les
add
and
sbb
gs
jne
push
add
lds
js
int3
add
stos
or
add
fwait
push
(bad)
hlt
add
les
and
into
repz
lock
and
sbb
add
pop
inc
data16
lock
push
push
mov
loopne
pop
aam
repnz
rcr
data16
cld
js
push
int3
div
out
jnp
cwde
iret
movs
inc
push
push
lahf
idiv
mov
ins
aad
out
out
add
push
sahf
inc
add
call
cwde
retf
adc
sub
jne
lock
aaa
stos
loope
sahf
add
cmp
test
popa
push
lahf
dec
fcmovnbe
sbb
(bad)
or
outs
mov
and
jb
arpl
push
shr
test
mov
data16
(bad)
adc
sbb
push
jp
adc
fmul
dec
sti
adc
add
imul
mov
cmps
pop
frstor
push
xchg
cmp
xchg
nop
sahf
add
lods
jnp
sub
add
popa
pop
pop
add
jg
push
cmp
push
inc
jno
mov
out
popa
xor
pusha
push
mov
out
mov
push
fimul
(bad)
ror
adc
call
dec
outs
jbe
inc
jb
popa
jns
popa
outs
popa
rcl
addr16
ss
les
in
xchg
fcmovne
push
inc
mov
icebp
adc
inc
jb
cmps
test
xchg
xchg
and
in
pop
push
outs
and
jmp
in
mov
int
mov
int
shl
sbb
mov
and
std
mov
popa
mov
imul
in
adc
neg
dec
dec
mov
cmps
mov
imul
lods
xchg
into
adc
xor
pop
je
cmp
xor
cmps
sar
cmp
outs
adc
pop
cmp
jge
shl
es
fbstp
mov
push
jl
adc
adc
dec
shl
loopne
push
daa
fcomp
push
sbb
shl
mov
fs
mov
mov
push
je
mov
push
nop
hlt
mov
neg
mov
rcr
jbe
ds
repnz
jo
mov
add
push
fcomp
mov
xor
ins
inc
add
or
pop
loopne
adc
pusha
add
add
cs
ror
add
in
repnz
and
push
mov
sub
fs
jo
push
push
stos
ret
outs
clc
sub
inc
push
push
jo
popa
xor
shl
ins
mov
outs
inc
ins
outs
jae
jnp
ret
daa
pusha
mov
push
push
sub
aam
fisubr
clc
push
ficom
arpl
ins
mov
bound
add
xor
mov
adc
fs
push
test
lock
push
add
ret
pop
mov
call
jg
mov
pop
cld
call
push
bound
add
sar
jmp
push
cwde
js
mov
ins
js
or
imul
inc
call
lds
cmp
cmp
aad
adc
shr
sbb
aam
ja
cdq
sbb
test
dec
enter
add
fcmovbe
sub
jne
daa
dec
shl
cmp
or
mov
push
push
cld
call
jae
ror
inc
xor
mov
jb
push
mov
popa
movs
or
dec
push
imul
mov
adc
arpl
int
call
ds
jo
cmp
rol
aas
or
lods
test
or
jno
pop
dec
fnsave
pop
xchg
(bad)
jmp
test
int3
pop
inc
scas
push
scas
jns
lods
pop
rcr
pop
add
or
shl
lods
iret
mov
arpl
call
jp
push
mov
shr
add
pop
pushf
cpuid
lock
std
cmp
mov
ins
inc
into
imul
pop
inc
ins
ds
pop
loopne
adc
inc
push
xchg
data16
push
inc
mov
sub
jbe
fdiv
mov
add
(bad)
cmp
pop
test
add
inc
add
push
inc
imul
test
dec
jbe
push
jb
add
lods
cmps
mov
push
je
hlt
or
sbb
jo
push
and
outs
inc
push
cmp
xchg
jb
push
imul
sub
pushf
mov
sub
jns
push
fsubr
adc
data16
fcomip
mov
lea
mov
adc
dec
cmp
push
sbb
ss
jae
add
test
jmp
frstor
out
inc
ja
cmps
ret
div
ins
jns
je
jb
daa
bound
je
xor
ja
dec
or
push
mov
rcl
push
lods
outs
mov
mov
pop
xor
push
add
(bad)
push
mov
cmp
inc
pop
inc
fs
sar
mov
add
mov
adc
repz
imul
jbe
adc
dec
jnp
pop
icebp
inc
jae
out
push
adc
mov
popa
inc
fdivr
add
add
sbb
jo
gs
xchg
aam
or
inc
jae
fisttp
adc
arpl
pop
data16
mov
popf
pop
gs
xor
mov
rol
and
mov
cld
or
shl
fnsave
pop
shl
in
jnp
data16
add
add
mov
mov
cs
adc
pop
push
adc
sbb
add
inc
dec
inc
pop
inc
outs
or
cmc
push
js
(bad)
pop
int3
loopne
mov
out
inc
aad
sub
ret
lahf
dec
jae
or
out
xchg
push
sbb
addr16
or
mov
adc
scas
jne
inc
xlat
and
call
and
and
shl
mov
cmp
lds
(bad)
nop
jmp
in
jno
xor
adc
add
jmp
push
cmp
push
inc
push
lods
das
ror
lock
inc
out
out
and
push
sbb
mov
push
loopne
push
adc
fdiv
push
inc
push
mov
lea
or
adc
xor
hlt
push
loopne
dec
popa
ins
sub
adc
push
or
xor
or
out
test
popa
jae
popa
sbb
or
pop
(bad)
rol
dec
add
cmps
add
push
xor
xchg
or
pop
addps
test
and
cmp
sbb
fist
sub
jne
out
in
or
xor
out
xchg
inc
popa
or
sbb
mov
push
jo
xor
nop
add
ins
in
add
or
pop
and
xor
je
mov
cld
or
bound
je
jo
enter
in
das
ret
adc
scas
mov
cmps
mov
sbb
fild
scas
mov
iret
repz
mov
xor
push
stos
rol
inc
jle
ucomiss
movs
or
push
fimul
fs
mov
test
adc
pop
add
sub
test
lods
or
push
jno
sub
cli
(bad)
or
push
outs
arpl
fwait
cwde
mov
test
add
je
rol
bound
add
cmp
mov
imul
jb
or
sbb
mov
add
inc
fld
pop
test
popf
leave
call
push
add
stos
mov
push
jp
das
popf
push
sbb
imul
jg
ss
add
test
jo
movs
jmp
jg
dec
mov
and
push
dec
outs
arpl
mov
test
outs
pushf
mov
movs
test
addr16
das
mov
add
sbb
ret
inc
or
sub
fistp
inc
hlt
xchg
push
push
fiadd
ja
daa
cdq
das
mov
cdq
cwde
push
push
xchg
sbb
das
scas
shl
lods
enter
push
inc
add
push
out
fst
or
cmp
or
aam
inc
enter
imul
cmp
mov
add
outs
jne
mov
cmp
movs
dec
pop
add
mov
call
inc
or
add
je
inc
adc
hlt
rol
into
jl
cmp
add
push
and
and
je
lds
dec
add
adc
ret
outs
fldcw
add
sti
push
adc
xchg
adc
into
push
ins
mov
pop
pop
sbb
icebp
jg
add
(bad)
or
jbe
lods
lds
lods
pavgb
pmulhw
or
sbb
popa
or
in
push
dec
jbe
xchg
sub
stos
cmp
jae
fistp
add
push
cmps
or
cwde
and
dec
push
sbb
and
mov
mov
pop
lds
add
aaa
push
lock
mov
inc
repz
test
popf
mov
xchg
int3
ss
dec
sbb
and
mov
and
sbb
jnp
shl
push
daa
jl
or
dec
cmp
scas
aad
pcmpeqb
test
test
mov
das
cli
bsr
push
mov
jae
push
js
xlat
popf
mov
dec
pop
sar
rol
dec
ins
imul
sahf
cmp
mov
adc
dec
xor
inc
sbb
adc
mov
push
cmp
and
mov
push
adc
xchg
or
in
inc
nop
adc
mov
icebp
dec
popa
bound
clc
lods
enter
inc
out
(bad)
xor
add
in
or
pop
and
sbb
cli
test
mov
imul
imul
mov
xor
sahf
ins
popa
mov
lods
push
push
dec
ins
lods
sub
test
pop
in
jns
pop
adc
js
jb
jl
mov
rol
adc
arpl
xor
xor
or
push
pop
xor
test
cmp
mov
adc
push
push
jp
repz
movs
adc
lea
rcr
cmp
or
mov
out
je
jno
mov
jge
(bad)
lods
add
mov
lock
fcom
add
movlps
daa
(bad)
(bad)
(bad)
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
out
mov
push
sub
dec
push
je
repz
xchg
mov
shr
inc
xor
pusha
repz
or
xor
test
dec
xor
outs
daa
add
mov
or
pop
movs
outs
lea
lea
ins
dec
pop
sbb
mov
retf
dec
cmp
pop
push
fxch
dec
add
loopne
retf
add
adc
ja
scas
push
push
and
lds
sbb
mov
fsub
inc
clc
jmp
and
stc
and
and
mov
and
cli
and
ins
and
and
lea
and
stos
icebp
add
mov
mov
or
pusha
add
inc
mov
dec
adc
or
(bad)
clc
cs
lahf
or
xor
add
aas
xchg
fwait
add
and
inc
add
cmps
inc
mov
push
sar
aas
or
sbb
daa
cmc
out
or
add
das
add
add
xor
sbb
and
add
push
or
adc
ins
xlat
jne
rol
add
add
pop
inc
imul
jnp
pop
add
and
lods
popf
xchg
adc
pop
sub
loopne
sbb
ror
iret
inc
and
add
or
and
xchg
cwde
fwait
add
dec
adc
adc
push
inc
aas
push
loopne
mov
adc
jae
pusha
pop
inc
push
or
movs
add
inc
and
dec
adc
xchg
inc
stc
mov
aaa
add
push
scas
fisubr
xor
and
cmp
packssdw
mov
mov
clts
aam
adc
outs
clc
adc
fdiv
fs
jb
or
and
jae
or
ror
and
sbb
lods
dec
dec
sbb
sbb
jbe
stos
xor
lahf
push
inc
loopne
or
movs
pop
jbe
sti
push
xchg
in
js
movs
aad
push
pusha
inc
mov
inc
jns
sahf
lods
add
xchg
imul
or
mov
imul
loopne
test
inc
adc
or
jb
jne
inc
pusha
xchg
pop
xor
inc
bound
mov
sbb
push
outs
test
mov
ror
pop
jb
push
jo
outs
push
ss
xor
cli
inc
xor
jns
mov
xor
(bad)
rsqrtps
pop
push
sbb
cmp
push
in
gs
ins
add
or
std
jo
xor
adc
jae
fld
dec
mov
add
fistp
jge
mov
dec
add
shl
xchg
or
sbb
mov
or
or
or
mov
jb
adc
test
rcl
fiadd
pop
cld
adc
inc
push
ins
out
aas
add
(bad)
jg
jo
(bad)
fist
jl
das
shl
pushf
(bad)
(bad)
lods
dec
data16
out
sbb
test
push
add
pop
dec
cmp
mov
or
mov
mov
dec
mov
push
out
in
sub
xor
pop
ss
mov
pop
mov
sub
mov
jnp
mov
test
jl
dec
add
push
pop
xchg
inc
or
mov
adc
mov
xchg
movs
adc
inc
adc
mov
sbb
push
jne
pop
mov
test
mov
nop
into
inc
fldcw
mov
or
popf
sbb
adc
imul
loopne
dec
loop
fbstp
lock
movs
mov
mov
adc
or
mov
fadd
add
or
mov
loopne
(bad)
push
add
or
mov
pop
in
add
add
pop
ja
push
sub
call
shr
aas
xor
mov
int3
push
aas
aam
hlt
jns
pop
ds
mov
lods
sar
(bad)
or
sub
push
and
and
pop
popa
xchg
(bad)
inc
js
or
adc
sbb
ins
repz
push
mov
pop
outs
mov
int3
and
js
or
jo
je
pusha
shl
fimul
adc
push
push
pusha
(bad)
cmp
js
dec
or
lock
rcr
cmp
nop
je
cmp
adc
push
lea
jne
and
push
add
rol
xadd
out
test
inc
into
sub
cs
jmp
pop
dec
pop
in
mov
pushf
inc
push
movs
or
popa
jmp
rsm
cmp
fisub
push
add
or
xchg
aaa
pop
or
or
fs
cmp
adc
lods
icebp
jmp
and
cmps
or
ror
(bad)
cmps
fwait
sbb
popa
add
dec
test
ds
repz
add
je
add
rcl
shl
mov
mov
cli
add
and
ins
test
add
test
adc
xchg
inc
jbe
cmp
push
iret
dec
xor
out
jo
je
stos
adc
lods
mov
shl
jg
pusha
sub
or
pop
iret
pop
or
and
add
push
inc
push
movaps
adc
sub
(bad)
cmp
sbb
mov
cmp
sbb
cdq
sbb
or
in
xchg
retf
add
pop
jo
popa
jno
movd
jnp
push
add
xchg
push
hlt
push
vpsubusb
fisttp
sbb
fisttp
test
aam
or
push
fnstcw
ret
mov
adc
pop
sbb
adc
push
test
jp
je
cs
and
dec
(bad)
mov
ds
pop
sub
(bad)
sti
push
pop
loopne
jo
xchg
or
jo
push
and
jno
retf
je
test
ret
stos
loope
add
or
mov
or
je
shl
fcmovne
jge
pop
jo
xchg
or
lds
xchg
xchg
sub
mov
adc
cmp
cmp
in
mov
add
xchg
push
cmps
stc
faddp
call
push
aas
or
or
add
nop
pushf
cmpxchg
xchg
ret
iret
adc
add
mov
ds
daa
push
lock
cld
hlt
cld
push
retf
xlat
sub
push
push
shl
inc
adc
nop
lods
or
daa
movs
bswap
or
(bad)
cs
jmp
cli
jmp
push
popf
rsm
push
sub
sbb
xor
loope
daa
out
adc
and
movs
dec
imul
rol
sub
pusha
mov
adc
inc
cmps
sbb
push
mov
add
inc
pop
inc
loopne
cmp
das
repnz
pop
sbb
pop
sbb
and
inc
jo
ins
imul
push
add
jno
push
and
iret
movs
popf
pop
lock
scas
push
out
pop
or
push
sub
xchg
cwde
push
cwde
jge
adc
gs
pop
or
ins
addr16
ror
inc
retf
push
outs
inc
js
add
push
dec
bound
(bad)
and
(bad)
push
or
sbb
dec
leave
imul
mov
sub
adc
sbb
add
mov
lds
jns
mov
and
push
dec
inc
or
clc
lods
add
or
cmp
out
mov
add
pop
mov
and
pop
mov
ins
inc
call
mov
mov
jae
push
mov
lea
mov
push
mov
adc
ss
cmp
sub
inc
add
outs
daa
movs
bswap
cvtps2pi
not
je
ror
sete
pushf
mov
and
inc
pop
pop
add
add
and
and
scas
inc
fst
jp
push
add
add
clc
mov
dec
xor
shl
cmp
mov
xor
mov
mov
inc
push
xor
mov
add
jge
or
arpl
stos
sub
pop
mov
pushf
(bad)
push
data16
pop
and
add
or
or
push
add
popf
sub
popa
in
inc
xor
or
jmp
add
push
mov
sub
mov
mov
gs
movs
dec
out
and
xor
in
mov
sub
shr
aam
adc
std
add
fsub
ud1
mov
jo
add
push
push
dec
pop
xor
push
dec
in
jge
retf
js
inc
adc
cdq
retf
dec
add
xor
jnp
rcr
aas
xor
out
dec
ja
lahf
aaa
into
rcr
dec
ret
inc
enter
lds
xor
pushf
cmps
sbb
or
jne
rcr
xchg
scas
jge
popa
jbe
xlat
fsubr
adc
mov
cld
enter
push
adc
sub
imul
es
das
imul
dec
push
push
sbb
mov
mov
push
nop
loope
(bad)
mov
call
shr
or
test
in
push
pop
inc
mov
cmp
int
jns
pushf
add
push
sub
sbb
cmp
shl
arpl
xlat
jno
mov
push
call
dec
aad
arpl
pusha
mov
lds
loopne
arpl
aad
sar
arpl
mov
inc
or
stos
sbb
call
mov
adc
pop
or
and
and
mov
fdivr
and
inc
and
and
imul
inc
and
and
sub
xchg
sbb
pop
sub
add
and
outs
or
ja
pop
cmps
inc
mov
xchg
(bad)
cmp
rcl
xchg
fwait
add
js
sbb
retf
add
pop
inc
or
add
xchg
xlat
out
loop
adc
add
pop
pusha
jo
push
stos
push
jb
in
out
loopne
cmp
pop
dec
pop
push
pop
adc
mov
or
dec
add
inc
jae
push
jmp
or
(bad)
jmp
cmp
inc
cmp
push
mov
(bad)
clc
lea
fdiv
or
dec
dec
push
jb
sub
xor
sar
inc
adc
mov
aad
and
(bad)
hlt
add
test
push
std
xchg
inc
pop
int3
dec
push
inc
dec
jne
or
and
or
adc
adc
cmp
mov
cmps
lods
mov
cwde
dec
add
cmp
sbb
ret
(bad)
fdivr
lods
fist
inc
xor
test
add
sti
(bad)
pop
cmp
sbb
pop
inc
(bad)
or
loope
adc
or
adc
mov
ret
dec
xchg
pop
push
or
mov
sbb
adc
mov
inc
test
inc
fistp
adc
or
pop
test
pop
pop
sbb
dec
int3
dec
adc
pop
inc
adc
add
unpcklps
jo
pop
cli
fcmovnu
fist
dec
jns
jne
arpl
and
ins
sbb
fwait
mov
test
add
outs
add
je
pop
stc
mov
js
js
je
sbb
xchg
sbb
ret
outs
dec
mov
push
test
je
add
cmp
ins
je
inc
std
(bad)
fimul
(bad)
sbb
popf
inc
mov
push
push
mov
sbb
je
push
int3
fs
mov
in
or
sub
ret
nop
mov
fstp
outs
sbb
mov
shl
push
dec
jnp
shr
test
nop
nop
adc
mov
(bad)
std
add
and
leave
mov
push
add
cld
and
jmp
or
fcmovnb
jle
adc
push
mov
mov
add
jge
pop
fwait
js
mov
(bad)
(bad)
or
or
mov
mov
call
jb
imul
inc
dec
ret
les
out
jne
sbb
in
mov
adc
inc
xchg
xchg
mov
mov
sub
push
mov
(bad)
mov
test
jp
or
sbb
push
add
push
sub
push
add
sbb
(bad)
rcr
xor
out
push
sti
pop
(bad)
out
mov
push
jbe
inc
cld
xor
push
push
xor
mov
mov
pop
add
inc
sub
pop
push
adc
sbb
push
shr
sbb
push
cld
hlt
(bad)
jmp
or
sar
outs
sahf
adc
aaa
sbb
xchg
ret
mov
dec
push
jbe
mov
fbstp
fisub
mov
and
aaa
sbb
add
ds
fnstenv
ins
push
sbb
inc
add
sbb
push
sub
gs
or
pop
fs
jge
cmps
sbb
in
idiv
mov
call
pop
hlt
mov
and
out
paddd
loop
ins
inc
les
jmp
xor
ins
addr16
lock
inc
pop
addr16
fild
in
add
mov
and
sbb
loop
add
push
data16
out
icebp
adc
inc
pop
call
ss
and
push
pusha
es
inc
ss
dec
push
ja
sbb
(bad)
and
hlt
mov
test
pop
mov
push
add
jp
push
xlat
repnz
pusha
add
mov
cs
sar
cs
mov
mov
inc
test
cmp
xor
or
sbb
or
ja
mov
jnp
push
or
rcr
fs
inc
mov
inc
and
xor
jl
sub
movs
loope
shl
push
sti
in
in
sub
xchg
pusha
push
or
into
jne
jae
mov
pop
(bad)
cmc
cmp
je
in
push
and
push
inc
add
movs
sbb
pop
cmps
adc
jno
or
cmps
push
adc
or
call
mov
push
cli
inc
jnp
push
add
hlt
adc
in
xor
fisttp
not
push
mov
or
push
daa
pop
std
sub
clc
inc
fiadd
dec
jne
pop
add
ins
push
test
daa
push
loope
sbb
and
lods
sbb
or
push
and
sbb
aam
inc
add
mov
cmp
mov
mov
in
pop
sti
add
call
push
push
add
idiv
mov
ret
or
test
mov
mov
out
cli
int3
and
out
mov
adc
cmp
les
xchg
push
mul
nop
enter
arpl
adc
adc
or
add
jns
out
mov
addr16
mov
(bad)
cdq
pop
fist
xor
adc
jmp
inc
mov
test
sub
push
les
dec
add
xchg
push
add
and
ja
push
daa
mov
inc
add
jo
cld
xchg
neg
popf
cmp
cwde
iret
push
movs
(bad)
mov
or
test
jp
imul
mov
inc
push
gs
imul
mov
(bad)
loopne
mov
leave
enter
cmc
xor
nop
xchg
(bad)
movs
leave
leave
mov
(bad)
shl
lods
leave
jae
add
xor
xchg
outs
and
dec
pop
fld
rcl
push
add
pop
ror
outs
sub
sub
jnp
pop
sbb
sub
jns
test
jge
rol
push
push
cmp
push
shr
push
jns
not
or
mov
pusha
scas
shl
jle
pusha
push
lahf
std
add
ror
pop
add
outs
je
outs
pop
cmps
sbb
nop
push
data16
pusha
push
stc
jns
movs
or
xchg
sbb
sbb
adc
stos
add
push
or
mov
push
or
mov
sub
and
push
mov
jb
and
add
jbe
sbb
cmp
ffreep
call
adc
add
add
adc
imul
or
cmp
xor
pop
jmp
ror
sar
ret
push
xor
call
push
jp
jecxz
in
sbb
rcr
mov
gs
sbb
loop
push
inc
rcr
and
sahf
adc
fistp
dec
and
jae
stos
inc
ins
sub
inc
mov
xor
test
push
push
inc
out
ror
pop
xor
inc
pop
mov
ror
sbb
icebp
das
mov
call
adc
mov
adc
jo
in
in
shl
push
mov
inc
je
mov
ret
lea
add
mov
out
jno
push
push
mov
in
loopne
movs
fnstenv
sahf
mov
add
movs
add
xchg
jbe
jno
or
push
mov
dec
mov
mov
add
dec
scas
dec
in
lods
mov
pop
push
dec
lods
add
dec
sbb
xchg
fcom
xchg
lahf
xchg
ins
add
add
movs
in
lea
jno
sub
into
(bad)
ds
xlat
lods
cmp
js
jb
jg
jg
inc
sbb
mov
push
rcr
inc
lock
je
sbb
ss
sbb
mov
dec
pop
pop
mul
push
fadd
out
mov
out
or
mov
jne
bound
lds
lock
mov
cmp
jge
lea
cmp
add
sbb
rcl
inc
fcom
lea
sub
dec
lods
cmp
add
dec
jnp
inc
push
cmp
out
out
retf
lock
ret
cdq
xor
fcom
mov
js
in
mov
fidiv
leave
jmp
(bad)
call
xchg
mov
inc
inc
sub
jmp
sahf
lods
inc
outs
add
push
pusha
inc
shl
sub
jne
mov
push
mov
mov
cs
push
pop
push
mov
dec
dec
out
push
mov
enter
nop
push
mov
mov
jb
dec
dec
ins
lods
ins
mov
dec
jl
adc
jl
inc
dec
test
xlat
push
popa
ror
mov
cmp
cwde
in
pop
mov
cld
mov
test
rol
xchg
jnp
push
test
lods
js
jle
mov
mov
aam
inc
mov
cmp
addr16
dec
addr16
in
ds
pop
pusha
xchg
mul
push
jo
mov
test
mov
cmp
ja
and
bt
jae
or
inc
add
cmp
rcr
jne
xor
mov
xor
sysenter
push
shl
or
mov
cmp
std
in
ffree
xor
xlat
sub
mov
pushf
dec
test
mov
mov
std
(bad)
mov
jge
mov
aam
inc
bound
cld
lds
test
call
sahf
mov
in
dec
es
icebp
xchg
pop
mov
ret
adc
ins
loopne
dec
add
mov
test
je
xchg
jne
push
ja
test
mov
add
xor
adc
cwde
leave
dec
xor
mov
inc
mov
mov
jge
or
inc
lahf
fiadd
iret
cs
out
push
xchg
loopne
and
jmp
es
in
sbb
push
pop
fistp
or
cmp
pop
dec
cmp
aaa
js
test
pop
mov
push
int3
fcom
jnp
push
rcl
ficomp
or
movzx
dec
sbb
add
in
add
mov
sbb
jnp
xor
add
add
xor
add
sub
adc
cs
mov
add
add
inc
call
es
ss
or
jge
mov
xchg
inc
inc
scas
inc
push
adc
int3
cmps
and
mov
jb
adc
shl
ror
loop
xor
adc
inc
je
inc
das
frstor
clc
test
fcom
test
inc
jnp
or
in
adc
add
shl
push
push
push
fs
sub
jl
out
push
sub
sbb
push
icebp
arpl
(bad)
in
inc
sub
and
ret
xchg
ret
outs
add
rcl
outs
outs
call
jno
sub
in
mov
sbb
adc
add
lahf
popa
sbb
test
lea
inc
push
mov
or
outs
or
mov
add
sub
jg
in
inc
test
or
add
cmps
add
not
sbb
shl
or
jne
jo
or
xor
fs
sbb
push
xlat
xor
push
mov
fs
pusha
push
(bad)
es
push
or
pop
loopne
cmp
adc
xchg
mov
mov
fld
fidivr
mov
rcr
hlt
add
fistp
xchg
pop
adc
xchg
stc
in
cmp
xor
pop
or
mov
add
loopne
dec
pusha
(bad)
mov
mov
hlt
dec
mov
xor
popa
xchg
call
jns
ret
inc
test
inc
stos
ds
mov
aam
out
nop
nop
loopne
out
mov
jo
mov
les
pop
scas
push
cmp
(bad)
mov
xor
lods
adc
sub
jno
sub
push
mov
pop
dec
jne
lahf
mov
add
nop
jle
pop
mov
xchg
xor
push
loopne
xchg
jecxz
pusha
test
inc
fadd
add
ja
jge
or
sub
sbb
dec
nop
push
xor
imul
cmp
(bad)
xlat
sub
dec
rol
xor
push
out
les
mov
test
xchg
shl
push
adc
lds
push
xchg
loop
fs
jmp
jmp
lahf
jmp
ins
inc
sar
and
fld
inc
lods
addr16
rcl
or
pop
nop
sub
xor
or
mov
minps
je
push
push
dec
xchg
fs
fsub
add
xchg
adc
adc
and
cmp
add
lea
mov
mov
jl
ret
and
or
add
arpl
adc
and
adc
imul
inc
add
arpl
inc
(bad)
add
fld
idiv
jmp
lods
xor
add
push
loopne
cmps
shr
and
mov
cmp
or
test
ins
jle
cmp
inc
inc
push
div
aam
outs
inc
inc
mov
scas
add
jge
adc
inc
iretw
sub
pop
int3
pusha
sbb
mov
jne
dec
movs
imul
xchg
fs
jmp
mov
aaa
cmp
jmp
loop
aaa
sahf
xchg
pop
daa
sbb
cmp
or
jmp
mov
xor
adc
or
inc
sbb
adc
pushf
cmp
mov
xor
push
sbb
add
mov
xchg
ss
cmp
je
or
jge
sbb
or
repnz
or
add
sti
test
mov
les
xchg
shl
pop
das
clc
es
xor
mov
cmp
sub
inc
imul
and
mov
push
jae
rol
shl
or
push
dec
push
add
push
push
or
popf
sbb
push
jnp
xchg
in
rol
sub
adc
adc
sbb
popa
sbb
movs
cmp
je
mov
or
bound
and
xor
inc
mov
add
or
sbb
push
push
mov
fmul
mov
cmp
jmp
test
js
lock
push
mov
and
fidivr
clc
je
mov
mov
cmp
adc
pusha
push
mov
mov
mov
push
mov
sbb
daa
cmp
je
mov
call
or
jmp
mov
pop
push
add
(bad)
lock
xchg
ret
sbb
push
push
aas
add
in
or
sbb
retf
jge
jmp
mov
in
push
jbe
adc
mov
sub
cmp
test
test
push
pusha
cmp
and
mov
fwait
mov
push
inc
xchg
fld
or
mov
call
cdq
mov
pop
xchg
mov
sbb
push
xor
jo
push
add
mov
or
repnz
les
or
call
inc
push
stos
loope
inc
add
aas
cmp
jne
les
shr
shl
clc
ror
test
add
jmp
or
lods
into
jl
add
mov
fdivp
push
jl
test
cwde
inc
or
mov
inc
add
pop
mov
je
and
mov
pop
pop
cmp
push
xchg
cs
aad
enter
ret
sahf
jne
mov
into
cmps
or
sub
clc
data16
add
mov
cld
ss
pop
inc
test
stc
push
sbb
adc
rcr
dec
clc
mov
or
test
xchg
pop
add
data16
mov
sub
and
and
nop
mov
adc
test
daa
push
xchg
mov
jae
jnp
sbb
inc
adc
push
fwait
(bad)
adc
je
call
cmps
std
ret
loope
int
dec
xchg
add
inc
lods
rcl
pop
hlt
or
add
inc
imul
dec
push
lock
lahf
pop
sub
cmp
jp
das
sbb
popa
xor
mov
or
sbb
pusha
xor
xchg
mov
push
mov
shl
iret
fistp
mov
in
outs
cmps
xchg
(bad)
and
cs
push
xor
xchg
pusha
sbb
push
sbb
adc
cmp
es
loope
cs
mov
inc
sub
and
in
daa
inc
repnz
dec
jne
jmp
and
loop
push
scas
out
push
pop
nop
sbb
cmp
shl
sub
sbb
xor
or
xor
pusha
loopne
cli
sbb
jb
jge
cmp
cmp
addr16
mov
mov
xor
pop
mov
mov
das
push
push
inc
cld
and
and
sbb
adc
or
push
dec
rcr
and
or
dec
cld
or
les
or
push
push
pop
scas
cmp
cmp
push
mov
push
movs
mov
inc
mov
in
stos
mov
xor
dec
push
mov
xor
push
sbb
movzx
lock
call
mov
inc
jl
mov
(bad)
push
sti
dec
jg
adc
mov
mov
pop
add
add
jo
or
or
(bad)
sbb
mov
cwde
mov
fdiv
out
or
push
int
scas
mov
daa
lock
enter
pop
or
mov
pop
sahf
fdiv
ficomp
std
cmp
ja
lea
xor
push
addr16
out
idiv
loop
je
repnz
aas
push
sub
aam
jb
mov
jge
cmps
add
test
adc
xor
push
mov
cdq
rcl
inc
inc
es
std
xchg
sbb
mov
push
jo
jno
adc
into
and
add
rol
jno
jnp
inc
xor
mov
inc
mov
sub
(bad)
sbb
inc
sub
adc
mov
int3
dec
push
sub
and
jmp
stc
mov
out
sete
inc
movs
ja
test
loope
add
sub
es
adc
ror
jbe
or
sbb
dec
xor
add
push
mov
lea
popf
bound
inc
sahf
lea
les
sub
jle
ret
cmp
cmp
(bad)
sar
lea
fisttp
and
sub
bound
add
std
add
nop
ret
cli
emms
inc
loopne
push
dec
loop
bt
jae
mov
or
imul
push
je
rcl
ja
das
mov
jmp
adc
jne
adc
mov
rcr
or
rcr
mov
adc
les
das
mov
popf
shl
dec
and
cmp
fadd
loopne
dec
jne
inc
in
(bad)
out
inc
adc
inc
push
mov
jle
mov
jmp
sbb
jmp
pusha
add
push
pop
in
jecxz
push
sub
or
call
sub
jo
mov
mov
into
and
dec
ins
sub
ins
adc
add
and
arpl
scas
cmp
fs
repnz
aaa
adc
sbb
cwde
(bad)
(bad)
mov
outs
cmps
inc
sbb
mov
mov
mov
mov
test
jbe
fcomp
sub
ss
shl
pop
and
mov
add
xor
imul
xchg
xchg
xchg
loopne
mov
pop
mov
sbb
push
adc
mov
arpl
pop
call
and
xor
and
aad
stos
js
stos
dec
ret
inc
sti
mov
mov
adc
inc
cld
adc
in
int3
test
sub
push
in
and
mov
dec
or
dec
push
push
loopne
test
fstp
es
cld
mov
dec
adc
mov
cmp
std
fisttp
dec
test
cmp
adc
xlat
push
mov
test
mov
push
addr16
mov
jo
lods
dec
pop
add
and
dec
iret
(bad)
xchg
mov
dec
retf
aas
iret
scas
stos
test
and
aas
adc
push
mov
and
xchg
loop
add
cli
je
lods
add
inc
jg
xchg
push
or
pop
dec
jmp
jge
or
js
jo
out
sub
loopne
or
sar
mov
fstp
cmp
retf
lea
mul
enter
rol
iret
shl
or
cmps
lahf
fisubr
and
and
stos
fsubr
stos
cmps
loop
adc
mov
cmp
retf
inc
loopne
sbb
jl
(bad)
mov
xchg
ror
lahf
push
pop
js
adc
jbe
lock
dec
jb
sub
adc
xor
adc
fdiv
outs
(bad)
shr
fcomp
or
push
cli
(bad)
push
loopne
mov
loopne
aaa
sbb
adc
mov
cmp
or
aad
rol
push
xlat
cmp
push
cmovne
or
nop
push
and
inc
fs
xor
adc
fwait
mov
pop
add
cmps
or
push
push
mov
lock
cmp
je
test
loopne
(bad)
std
lock
and
push
mov
add
jmp
jmp
mov
cmp
adc
loopne
push
push
jge
inc
icebp
cmp
cs
pop
jle
push
ins
cmp
mov
pusha
push
aaa
les
adc
or
jmp
add
out
xchg
or
test
jo
mov
xor
push
enter
add
cmp
pop
outs
pushf
call
daa
cmp
xor
mov
cmp
fisub
movs
and
jle
inc
jbe
sbb
inc
adc
cmps
xchg
or
adc
cmp
stc
dec
cmp
(bad)
fs
dec
inc
or
sub
int3
popa
inc
xor
cmp
jbe
add
add
cmp
aas
jmp
ds
sbb
mov
call
push
jl
cmp
jbe
push
mov
adc
mov
push
lock
jo
pop
cmps
nop
push
call
adc
adc
loopne
imul
xor
jecxz
call
or
cs
(bad)
aas
rcl
push
cwde
test
inc
ins
imul
mov
and
push
and
sub
push
add
and
pop
push
sbb
fild
mov
inc
sti
cdq
idiv
mov
sahf
push
pop
ja
cmp
add
push
mov
push
cmp
pop
add
js
int3
push
and
neg
fcmovb
dec
dec
leave
es
retf
push
rol
pop
add
fistp
es
push
add
push
lock
add
int
xlat
fild
nop
iret
mov
outs
nop
push
hlt
mov
mov
inc
mov
push
movs
sub
div
xor
ss
xchg
lock
cs
dec
push
dec
out
push
aam
push
jmp
fidiv
push
loopne
push
xor
push
pop
sub
pop
push
sbb
data16
scas
xor
movs
pop
cld
fdiv
test
push
or
dec
jo
push
clc
into
in
sahf
mov
pop
test
ins
out
mov
int3
out
push
add
push
loop
pop
mov
int
mov
mov
lods
std
hlt
push
sbb
push
inc
add
push
dec
or
(bad)
les
in
mov
jmp
mov
cs
sbb
inc
loopne
loopne
ins
push
in
push
pusha
push
xchg
jbe
push
mov
mov
dec
(bad)
and
push
mov
in
inc
ss
dec
je
mov
lods
(bad)
pop
add
dec
gs
popa
addr16
ds
(bad)
or
dec
mov
xor
jb
dec
mov
or
gs
je
dec
gs
add
add
mov
in
imul
lahf
add
gs
data16
inc
push
or
inc
dec
ja
into
(bad)
adc
pushf
adc
add
jns
(bad)
mov
sysret
mov
adc
inc
sub
jo
mov
xchg
ss
sbb
sub
xchg
inc
mov
push
mov
js
leave
or
adc
mov
or
ins
nop
sbb
out
jne
pop
popf
in
push
bound
inc
jne
push
div
out
pop
adc
call
pop
mov
shl
popa
sbb
xor
mov
xchg
les
out
test
ror
aam
sti
ret
test
pusha
sub
repnz
ret
xchg
add
add
xor
sbb
and
cmc
lods
push
xor
xchg
aad
xor
popa
xor
imul
add
pop
xchg
in
jns
or
sar
mov
cmc
push
xor
ja
and
int
aas
sub
jnp
jg
mov
and
repz
xchg
sbb
fcomp
mov
hlt
xchg
mov
in
xor
dec
in
call
jno
into
popf
hlt
mov
push
icebp
mov
cvtdq2ps
mov
sub
out
ds
ret
inc
push
xchg
jle
jl
das
movs
or
or
sahf
imul
mov
dec
push
xor
idiv
push
xor
mov
adc
es
shl
shr
pop
stos
cmp
xlat
test
test
lods
add
aam
popa
lea
mov
adc
lods
add
in
add
inc
hlt
(bad)
scas
cmp
push
add
cwde
adc
nop
fcmovne
es
mov
push
movs
pop
std
fidiv
adc
rcr
(bad)
cs
cmps
fisubr
enter
push
(bad)
inc
int3
adc
ds
aam
fdivr
fsub
ds
mov
inc
or
ins
xor
mov
sbb
(bad)
loopne
fcmovnb
inc
mov
mov
add
or
sub
(bad)
fnstenv
es
in
adc
pop
out
xchg
add
pop
sub
pop
add
outs
jno
or
push
sub
add
add
jb
daa
dec
nop
fdivr
ffreep
daa
push
push
inc
add
outs
add
ins
aaa
std
mov
inc
call
je
xor
pop
es
and
jae
dec
add
ds
inc
popa
into
int3
inc
xchg
mov
scas
ror
add
cmp
sbb
inc
add
arpl
push
data16
sahf
sub
add
sbb
push
scas
mov
mov
add
data16
mov
push
adc
jae
pop
vandnps
test
sbb
add
cmp
sbb
out
adc
daa
pop
push
fisttp
movs
inc
xor
call
sbb
mov
or
add
ror
sbb
xchg
sbb
mov
jo
adc
cmp
push
loopne
xor
xchg
or
outs
inc
sar
cli
hlt
cmp
add
pop
lock
push
cmp
add
in
adc
fld
mov
call
in
pop
stos
loope
or
fadd
(bad)
jmp
fs
sub
(bad)
pop
push
inc
stc
jae
je
cmp
jne
inc
mov
sub
repnz
jmp
pop
lahf
xor
ficom
movs
or
add
(bad)
cmp
(bad)
cmc
add
cmp
xor
sub
sub
test
cmp
jle
push
call
push
sbb
add
sti
or
test
aad
or
push
popa
fdiv
cmp
call
pop
aam
or
dec
pop
or
sar
jns
adc
pusha
js
addr16
sub
fidiv
adc
cld
fiadd
out
mov
mov
add
setne
mov
dec
dec
mov
bound
test
mov
cmp
dec
cwde
enter
adc
push
adc
cwde
and
and
sbb
data16
jge
and
xchg
or
dec
aaa
dec
mov
mov
ror
push
pushf
add
xchg
call
add
xchg
fmul
scas
ror
nop
add
es
mov
sar
push
jmp
adc
add
xor
add
inc
popa
or
add
es
sub
and
mov
sar
add
push
inc
pop
xchg
dec
(bad)
outs
sbb
dec
sbb
movs
dec
push
mov
xchg
add
pushf
pop
in
(bad)
push
test
add
add
and
dec
mov
std
dec
aas
ins
push
sbb
and
iret
push
in
jo
adc
test
data16
xlat
adc
add
call
rol
pop
or
push
outs
hlt
and
sbb
xchg
push
dec
mov
adc
cld
mov
fimul
pop
mov
jge
iret
adc
cwde
mov
out
push
aaa
test
xchg
adc
lock
loopne
push
jno
mov
shl
test
dec
xchg
add
pop
inc
mov
mov
fucomip
adc
dec
and
xor
sub
inc
xchg
or
pop
popa
pop
cs
mov
je
mov
jmp
push
add
mov
sar
clc
or
(bad)
sbb
dec
test
stos
int
jne
and
mov
scas
adc
adc
adc
loope
test
fs
subps
stc
adc
lea
rcl
xchg
pop
mov
or
pushf
sar
cmp
mov
loope
jne
pop
cmp
punpckhbw
iret
repz
mov
sbb
adc
in
sub
out
push
cdq
jmp
call
sar
sub
loop
jne
jmp
mov
push
mov
or
pushf
test
js
out
pop
es
add
mov
mov
adc
push
test
or
dec
add
subps
sub
scas
dec
ja
test
xor
aaa
mov
test
xchg
jns
rol
add
or
add
push
xadd
fnstenv
pusha
pop
out
cmp
push
je
dec
or
add
cmp
dec
lock
mov
jne
les
cli
push
push
sbb
(bad)
mov
or
mov
shl
iret
mov
cmp
bound
(bad)
loopne
add
ss
ds
mov
push
jmp
outs
xchg
cmp
push
addr16
arpl
int3
movs
or
add
add
lods
xchg
ins
dec
fld
or
xor
call
mov
stos
add
setge
std
cdq
rcl
cmp
loopne
sbb
cmp
sbb
jne
mov
inc
mov
pop
sub
rcr
les
adc
lock
adc
add
sub
cmps
and
cld
retf
stos
cmp
push
call
push
or
adc
rol
mov
push
inc
outs
je
mov
adc
test
push
or
cs
jle
add
push
fs
and
or
adc
ret
es
mov
ins
push
pop
mov
push
jns
sbb
xchg
cmp
out
jns
rcr
inc
push
push
outs
cs
(bad)
cld
add
movs
mov
lods
(bad)
xor
in
fmul
shl
mov
jle
push
je
push
mov
movs
(bad)
adc
push
mov
ins
push
sub
jle
loopne
push
and
adc
inc
inc
mov
or
gs
jo
(bad)
fistp
mov
inc
push
popa
jb
outs
je
outs
(bad)
jmp
fs
loop
push
push
outs
jae
je
outs
outs
xchg
sub
push
out
(bad)
in
(bad)
jmp
es
push
add
hlt
fwait
ret
dec
push
adc
jae
leave
cmp
dec
mov
js
arpl
gs
rcr
dec
xor
xor
or
sub
pop
movs
call
push
inc
sbb
sbb
fwait
xchg
and
inc
xor
arpl
pushf
add
push
or
test
loope
pop
inc
sub
push
inc
push
mov
outs
sar
inc
aad
pop
sub
enter
loope
push
popa
mov
mov
dec
push
int
mov
mov
cmp
mov
pop
add
(bad)
aad
(bad)
cld
fdiv
sbb
push
and
push
loopne
popf
ret
sub
sar
jbe
add
(bad)
jge
mov
sub
sub
or
push
add
clc
sar
cmp
jnp
xlat
lods
pusha
add
push
xor
add
call
cmp
or
lods
enter
ror
push
xchg
call
call
js
test
sbb
imul
push
imul
mov
jp
out
std
hlt
mov
ficom
scas
dec
test
dec
cmps
mov
dec
push
pop
inc
js
push
nop
dec
push
clc
or
inc
xchg
push
push
add
lahf
mov
sahf
hlt
in
mov
add
ds
sub
push
sub
out
mov
or
fisub
call
ja
add
mov
mov
ret
fisub
clc
jo
test
movs
xor
push
repz
and
push
int
clc
test
xchg
mov
add
add
jb
jmp
mov
mov
aas
sahf
lock
sub
inc
clc
div
cwde
mov
ss
push
or
outs
jne
clc
add
movs
adc
add
in
lea
imul
mov
fcom
rcl
push
add
repnz
bound
push
dec
xor
cmp
adc
loopne
sbb
push
sbb
push
js
add
mov
cmc
adc
mov
or
adc
enter
outs
loopne
call
adc
xor
add
inc
test
cmp
aaa
test
loope
or
ret
push
pushf
push
sbb
rcl
jno
and
ja
pop
leave
repz
fadd
mov
int3
jo
push
cdq
sbb
mov
jbe
clc
dec
lock
not
add
add
or
adc
mov
push
inc
adc
into
lock
push
or
push
push
push
add
and
jb
jbe
xchg
mov
lock
je
loop
and
sub
add
into
iret
add
js
dec
rol
(bad)
inc
pop
and
and
inc
inc
ins
outs
jae
push
jne
jb
inc
jne
arpl
sbb
adc
sub
push
dec
outs
jo
je
push
sub
inc
dec
sti
leave
or
add
jo
jo
jo
mov
push
mov
pop
or
mov
sbb
sbb
lea
addr16
ja
shl
mov
push
lock
ret
mov
push
outs
movs
mov
inc
cmp
mov
inc
imul
pusha
push
daa
out
ror
fs
add
mov
idiv
out
mov
xor
fsubr
dec
lea
mov
neg
dec
xor
push
ds
inc
push
shr
push
cmp
fcomp
ret
clc
inc
fs
adc
cmp
data16
xor
nop
ds
loopne
inc
mov
je
push
div
dec
ror
in
and
cmp
and
and
je
adc
inc
pop
sub
push
adc
add
xor
jmp
xchg
mov
mov
or
mov
mov
mov
cmp
aam
out
fidiv
push
imul
pusha
gs
in
add
popf
out
pop
fadd
jb
add
push
add
loopne
ret
pop
sbb
sar
iret
movs
addr16
push
pop
clc
push
fist
sbb
or
jecxz
cmp
add
mov
sub
jo
inc
outs
test
sub
sub
jg
jo
cmps
inc
arpl
arpl
ss
mov
aaa
mov
and
cmp
xchg
dec
jle
cmp
setb
mov
push
mov
das
xor
pop
hlt
xor
jne
jns
push
cmps
lock
cwde
mov
lock
test
sar
jg
or
mov
add
unpckhps
cld
mov
dec
push
call
inc
sbb
add
add
or
loop
dec
mov
ror
inc
lock
clc
out
cmp
add
dec
jne
inc
outs
xor
push
adc
jo
movs
test
and
out
adc
cld
imul
shl
adc
jae
dec
cmp
add
add
push
clc
mov
cmp
les
adc
cld
icebp
mov
push
idiv
cmps
cmp
movs
lahf
inc
or
pusha
mov
out
adc
(bad)
jb
addr16
sub
xor
mov
fcom
push
jo
test
push
cmp
push
or
adc
hlt
lea
xor
movs
add
inc
mov
sub
enter
mov
in
mov
outs
jo
sbb
inc
add
out
fs
lock
cmp
into
movs
cmp
adc
jmp
pop
les
int3
in
push
jl
inc
add
jl
(bad)
and
sbb
adc
and
add
jp
addr16
repz
rol
mov
aaa
push
lea
lea
cmp
call
inc
cmp
jle
mov
jbe
inc
loopne
inc
jle
jmp
movs
push
push
adc
sub
inc
jmp
pushf
add
imul
jmp
cmps
sub
adc
(bad)
fldcw
sub
push
push
mov
push
jo
mov
pop
jnp
xor
fsubr
int
daa
adc
add
jne
mov
dec
sbb
hlt
add
test
mov
loopne
mov
push
mov
dec
lods
in
stos
xchg
jne
dec
cs
push
sbb
outs
dec
adc
jo
in
jl
push
jbe
adc
mov
and
mov
ds
movs
jmp
xchg
mov
push
rol
aam
pop
in
adc
retf
xor
inc
jb
in
(bad)
adc
adc
mov
mov
mov
scas
and
inc
pushf
ss
js
mov
addr16
lods
jmp
sbb
push
mov
mov
in
xor
push
push
add
add
cmp
icebp
inc
adc
ficom
jnp
sub
sub
rcl
jae
fbstp
add
sub
pop
(bad)
jg
or
mov
push
or
push
scas
add
outs
add
mov
mov
sub
movs
push
inc
in
pop
loopne
out
mov
mov
out
inc
rol
add
(bad)
pop
lea
dec
jne
add
push
loopne
int3
int
push
shl
and
sub
lods
xor
mov
pop
enter
xor
push
xchg
into
rol
add
push
dec
iret
sub
mov
add
dec
fdiv
and
les
lods
pop
push
mov
mov
not
inc
add
mov
inc
inc
mov
ds
pop
mov
jne
xor
nop
call
xchg
repnz
add
or
jno
adc
and
aaa
fdivr
add
sbb
pop
adc
add
sub
bound
lods
mov
pop
sub
cmc
xor
sbb
push
test
push
in
aas
push
adc
loopne
cs
les
mov
js
hlt
pop
or
adc
jmp
jmp
add
outs
pop
das
mov
push
(bad)
cwde
push
fbstp
ds
(bad)
mov
popa
fimul
push
add
call
outs
out
cmps
(bad)
sbb
popaw
jne
je
outs
imul
mov
jae
add
jo
movs
sahf
jno
sub
xchg
xor
pop
add
sbb
jb
in
dec
or
and
mov
arpl
cmp
push
jne
mov
fsub
je
std
xor
jmp
ret
inc
add
add
pop
mov
fwait
scas
aad
outs
sub
bound
cmp
ja
outs
pop
inc
or
and
cmp
and
pop
or
inc
popa
push
push
mov
mov
push
loop
(bad)
fadd
or
ja
out
fs
add
cmp
and
xlat
add
and
push
xor
pop
add
xor
ss
add
les
and
push
pop
imul
es
push
(bad)
xchg
mov
push
push
or
loopne
es
je
adc
rcr
repnz
pop
ret
nop
mov
repnz
fimul
stc
push
xchg
pop
cmps
adc
repnz
jb
mov
mov
addr16
ret
push
mov
pop
mov
or
or
or
adc
add
gs
in
inc
ins
jg
hlt
mov
js
pop
jne
dec
add
ss
rcr
dec
push
and
test
mov
daa
mov
inc
xor
dec
fdivr
push
dec
sbb
loopne
mov
enter
outs
lods
inc
xor
xchg
pop
inc
fst
loopne
mov
pop
sbb
adc
test
cwde
jne
dec
jns
or
xchg
mov
ror
int
push
cmp
pop
push
jl
rdpmc
(bad)
out
and
cmp
test
jmp
jg
xchg
xchg
push
dec
jae
ror
add
push
daa
jp
add
inc
or
pop
pop
mov
cmps
sub
or
nop
(bad)
and
xchg
nop
nop
mov
add
cmps
lea
hlt
imul
dec
lahf
push
in
call
xor
or
push
div
in
in
push
push
stos
loopne
push
icebp
mov
aas
mov
push
mov
mov
xor
sbb
test
movs
mov
mov
lock
iret
sti
xor
jo
dec
push
and
mov
std
xchg
add
adc
or
mov
or
mov
in
sbb
push
add
push
adc
aaa
xor
add
outs
sbb
inc
es
pop
jnp
ret
push
sub
jb
jbe
lock
cmp
pop
unpckhps
aaa
add
add
push
cmp
stc
mov
dec
or
mov
push
pop
mov
inc
cmp
and
(bad)
sbb
xor
jmp
cmp
add
xlat
inc
or
mov
add
fcom
or
leave
mov
or
adc
add
loopne
gs
or
pop
xchg
cld
loop
imul
js
cmp
push
aam
jge
jbe
lds
mov
mov
sbb
repnz
cmp
push
jo
movzx
pop
push
scas
daa
les
sbb
sub
cdq
(bad)
fist
xor
inc
sub
test
pop
cmp
push
push
mov
or
jg
ret
test
ror
out
jp
cld
call
mov
fdiv
inc
clc
pop
inc
test
ja
into
or
data16
mov
adc
jp
es
add
lock
and
dec
cld
and
loopne
daa
in
adc
das
sbb
cmp
pusha
add
sbb
rcr
daa
push
pop
loopne
lock
or
sbb
xor
add
pop
inc
daa
and
cwde
popa
inc
or
add
es
je
(bad)
mov
add
gs
mov
sub
ror
fsubr
dec
add
jnp
cld
(bad)
or
imul
shl
test
dec
enter
outs
and
fld
rcl
je
je
add
mov
daa
rol
inc
inc
call
fbld
outs
arpl
cs
ins
mov
fdivr
inc
imul
ror
push
jb
outs
sub
int
lods
das
aam
inc
cs
outs
addr16
and
daa
aad
cmp
outs
jb
out
or
jmp
xchg
lods
dec
(bad)
and
add
ss
fdivr
vsqrtsd
pop
fidivr
enter
dec
ins
cmp
adc
psraw
push
popa
rol
sti
xor
or
sub
in
or
inc
dec
ja
xchg
add
add
add
lds
inc
cld
fisubr
dec
enter
add
xchg
inc
(bad)
push
pop
pop
ror
cld
test
js
inc
jbe
jae
xchg
jns
and
mov
jg
(bad)
add
outs
mov
aam
add
sbb
lock
adc
jb
rol
inc
mov
cmp
call
push
inc
adc
inc
jne
outs
push
imul
sbb
call
push
cmp
xchg
or
out
mov
je
push
cmc
mov
das
jle
hlt
rcl
or
addr16
dec
jae
ja
add
inc
pop
xlat
push
dec
xor
fs
inc
inc
sahf
sbb
arpl
inc
dec
outs
fs
loopne
packsswb
test
xchg
mov
push
(bad)
sub
sub
bound
popf
inc
xor
ja
pop
mov
stos
cmp
call
mov
jg
mov
ja
(bad)
in
inc
mov
dec
mul
sbb
invd
mov
iret
adc
pop
movs
adc
jne
dec
call
(bad)
cmp
fdivr
ja
mov
xchg
shr
push
sub
popa
xchg
sbb
or
jmp
lods
je
mov
fstp
pop
adc
dec
jno
aaa
scas
jmp
and
dec
imul
and
push
test
je
inc
sbb
inc
ja
pop
adc
iret
and
lock
arpl
mov
popa
and
adc
enter
in
loopne
jmp
sub
push
sbb
push
mov
(bad)
fwait
fs
and
fwait
cmp
dec
push
xchg
test
dec
hlt
inc
dec
scas
sub
jbe
je
dec
or
xchg
out
dec
mov
dec
call
outs
fiadd
ds
inc
fdiv
push
pop
pop
scas
retf
sub
cmp
scas
inc
cmp
pop
inc
sub
inc
mov
jae
in
imul
fisub
push
shr
xchg
pusha
push
or
cs
cs
int3
pop
pop
push
dec
xchg
pop
dec
sub
xchg
pusha
jae
dec
cmp
inc
cmp
inc
pop
dec
sub
add
adc
out
fiadd
dec
push
data16
cs
dec
xor
sbb
dec
das
iret
dec
cmp
ret
fiadd
xchg
icebp
aaa
dec
mov
and
shl
cwde
dec
xor
jl
mov
sbb
rcl
inc
pop
cmp
cwde
dec
xor
add
adc
pop
add
ins
lods
mov
shl
mov
popa
test
sar
push
jl
mov
pop
mov
cmp
stos
ror
jle
data16
add
mov
xor
iret
repnz
cmp
pop
(bad)
inc
inc
pushf
mov
mov
and
sbb
loop
cmp
es
int3
aam
cs
dec
jnp
or
(bad)
jl
data16
dec
push
mov
cmps
fs
sbb
push
iret
fadd
jnp
mov
call
add
clc
fmul
inc
cs
or
js
loopne
shr
mov
inc
push
mov
cli
cwde
fs
xor
jmp
mov
adc
neg
mov
mov
loop
adc
(bad)
clc
mov
pop
fisttp
fidiv
sbb
push
mov
ffreep
inc
adc
icebp
push
jo
add
(bad)
ret
addr16
pop
dec
or
jge
sbb
ja
mov
xor
jo
or
or
inc
in
sub
pop
mov
call
pop
popw
sbb
jg
mov
dec
mov
repz
inc
test
jo
xchg
pop
repnz
rcr
adc
scas
scas
out
ret
mov
hlt
test
inc
xchg
fidivr
jecxz
scas
(bad)
out
mov
xor
cmp
mov
mov
cli
out
out
punpckldq
push
push
jmp
sub
mov
js
mov
push
out
or
(bad)
and
test
out
(bad)
jle
in
push
int3
out
push
fdiv
add
fnstsw
push
in
push
or
sbb
lahf
lods
cwde
mov
push
dec
or
sbb
inc
pushf
dec
in
mov
jmp
mov
popa
clc
ss
mov
adc
nop
or
mov
pusha
shl
ja
adc
pop
jecxz
xchg
cmp
adc
jg
in
push
or
gs
fmulp
es
mov
sub
(bad)
cmps
and
call
je
fcmovu
jnp
int3
pop
mov
jb
hlt
xor
sub
das
push
je
mov
imul
and
ins
push
gs
sbb
fsubr
cmps
push
pop
inc
dec
inc
(bad)
push
pop
icebp
mov
inc
ins
inc
xor
es
or
and
test
sbb
loope
lock
adc
ins
xor
test
push
mov
out
cmc
push
mov
inc
mov
mov
jmp
mov
mov
cmp
jns
aaa
mov
fs
movs
xor
shr
push
inc
jne
outs
ins
sub
stos
push
pop
ins
(bad)
mov
sbb
xchg
or
push
movs
gs
and
inc
xchg
loope
jno
pop
stos
bound
cli
add
ins
test
fs
jno
xor
ds
mov
mov
scas
or
sbb
into
in
sbb
add
(bad)
lock
imul
test
lods
pop
loopne
pop
sbb
jbe
fiadd
push
jge
sub
sbb
mov
inc
outs
push
fsub
push
idiv
sbb
inc
add
or
leave
adc
mov
adc
mov
or
das
xchg
dec
int3
in
sub
addr16
mov
ja
push
sbb
leave
repz
dec
jb
mov
jp
outs
or
and
adc
dec
lods
push
xchg
fimul
jo
xor
seto
and
and
mov
ret
sub
sbb
rol
xchg
inc
and
mov
and
push
adc
call
inc
mov
je
pusha
call
(bad)
dec
ja
inc
movs
push
adc
push
jmp
jl
inc
nop
call
and
xchg
add
and
sbb
arpl
loopne
add
hlt
jmp
mov
inc
aas
push
inc
icebp
sbb
clc
push
xlat
and
dec
out
pusha
jb
xchg
mov
push
xlat
sbb
dec
bswap
mov
inc
cli
push
out
or
and
and
imul
xchg
inc
jne
xchg
gs
in
mov
mov
sub
inc
add
push
jmp
or
or
xor
cmp
add
aaa
inc
jl
ret
inc
adc
mov
js
push
pop
int3
cwde
mov
pop
pushf
or
sub
test
xchg
sbb
inc
cwde
cdq
adc
daa
or
push
sub
push
or
mov
je
sub
sub
push
xchg
dec
or
push
mov
nop
sbb
repz
cmp
dec
mov
inc
xchg
test
(bad)
cwde
or
mov
lds
lea
inc
cmps
(bad)
pop
ins
cmovno
push
adc
les
jo
in
xchg
dec
dec
leave
xor
clc
cmp
dec
push
enter
pop
add
dec
mov
mov
pushf
loopne
or
pushf
inc
ret
inc
in
(bad)
add
adc
jae
mov
adc
fistp
push
or
std
cli
pop
cmp
lock
or
add
ficomp
fimul
jmp
cmp
adc
fisttp
cld
inc
add
jbe
fcomp
push
pop
pop
cmp
pop
clc
cld
stos
daa
sub
shr
ror
push
mov
sbb
cmp
out
mov
xchg
(bad)
ds
push
out
add
mov
mov
pusha
outs
mov
lods
mov
inc
js
dec
or
sbb
dec
inc
cdq
loopne
movs
jns
inc
dec
stos
in
inc
rcl
push
cmps
push
inc
inc
jae
xchg
scas
pop
inc
mov
repnz
cwde
mov
dec
sbb
inc
js
fisttp
scas
push
xchg
(bad)
pop
inc
or
push
dec
or
pushf
and
mov
add
add
add
dec
dec
shr
lods
mov
loope
ds
dec
mov
xchg
and
les
push
cs
xchg
mov
jmp
push
fst
xchg
cmp
add
lods
or
imul
mov
enter
mov
aad
pop
mov
pop
xchg
enter
popa
or
and
movs
vmovsd
adc
and
xchg
mov
popa
xchg
fild
and
jno
mov
and
xchg
and
mov
jp
and
and
and
mov
and
and
cld
and
and
stos
shl
xchg
and
std
and
and
xchg
mov
sub
xchg
sub
push
xchg
fdiv
xor
dec
call
scas
adc
add
add
ins
outs
outs
jg
js
outs
inc
ins
sub
or
ss
bound
cmp
imul
or
or
hlt
outs
test
pop
and
adc
test
dec
pop
sub
sub
xchg
mov
jge
cmp
jl
push
mov
pop
xchg
das
mov
jns
mov
mov
xchg
shr
es
jge
test
ficom
xchg
xor
ret
jle
and
or
shl
test
cvtpi2ps
int
mov
adc
clc
pop
bound
inc
inc
cli
ins
dec
or
test
ret
mov
mov
xor
imul
(bad)
xor
sub
lock
add
dec
jae
fmul
mov
xlat
sub
es
ds
arpl
mov
mov
add
push
fcomp
inc
bound
add
add
mov
and
and
shl
or
test
inc
add
neg
les
js
loopne
gs
jo
and
mov
js
psrlw
rcl
xor
or
adc
sbb
add
or
push
outs
or
pop
mov
jbe
mov
aam
add
cwde
add
int
(bad)
add
inc
jle
sbb
dec
aaa
push
cmovns
inc
inc
lods
dec
jns
fst
(bad)
xor
test
add
inc
jge
imul
test
dec
inc
sub
push
gs
xchg
push
jo
dec
cs
fadd
fwait
pop
fsub
daa
pop
rcr
(bad)
mov
int
int3
inc
inc
stos
adc
push
pop
jmp
mov
mov
fst
jge
inc
inc
inc
pushf
ret
call
js
cs
inc
inc
shl
fwait
sub
push
js
ret
sbb
jmp
pop
lods
add
mov
cs
cmps
push
cmp
pusha
rol
cmps
inc
shrd
and
xchg
or
jns
jmp
ja
popa
bound
push
loopne
ficomp
dec
or
mov
mov
mov
adc
es
or
jmp
rcr
pop
lahf
xchg
push
and
mov
call
pop
xchg
sub
jo
in
add
imul
ds
sub
xchg
pop
ins
icebp
xor
int3
jge
inc
xchg
push
inc
mov
jae
dec
int3
(bad)
pop
push
add
pop
inc
(bad)
fcomp
aas
jne
pop
dec
mov
nop
inc
add
sbb
not
push
arpl
mov
clc
inc
xchg
(bad)
and
mov
stos
add
push
push
jns
dec
cmc
jne
cmp
push
jns
gs
or
xor
jae
dec
clc
pop
mov
or
inc
iret
sub
or
pop
test
push
dec
jb
push
dec
bound
arpl
popa
pop
xor
mov
or
mov
pop
pop
or
fst
jne
sub
cmp
inc
lahf
inc
push
mov
sti
(bad)
popf
popa
mov
xor
xchg
(bad)
popa
bound
add
mov
pusha
or
push
popf
das
xor
pushf
out
push
pusha
sahf
push
mov
clc
add
add
xchg
push
iret
mov
jp
ins
xchg
aam
xchg
jo
sbb
in
sahf
iret
cmp
iret
lds
fmul
or
int3
push
iret
push
loopne
jnp
ret
xchg
mov
or
pop
shl
ja
add
push
mov
das
sub
stos
sub
test
jo
ins
and
mov
push
int
ret
mov
inc
fimul
loope
pop
fisttp
pop
jp
push
nop
lock
pop
ss
add
outs
(bad)
push
popf
fwait
or
mov
repnz
add
bound
or
mov
lods
js
jo
xchg
dec
inc
pop
add
add
xor
inc
mov
xchg
xor
in
lea
lods
loope
aam
xchg
scas
inc
and
cmp
test
mov
mov
in
nop
mov
aas
clc
push
mov
ds
mov
inc
and
and
stos
cmp
adc
addr16
add
or
adc
push
cmp
or
adc
add
mov
imul
rcr
adc
xchg
rcr
popa
pop
adc
test
inc
mov
add
xchg
sbb
push
sbb
or
jb
inc
push
adc
add
adc
push
jb
imul
add
stos
sbb
inc
adc
xchg
and
pop
dec
adc
add
loopne
retf
sub
jb
add
inc
mov
add
mov
fld
sub
sub
add
nop
or
and
and
xor
xor
inc
xchg
add
pop
ss
rcr
xor
dec
in
mov
cmp
mov
pop
mov
call
inc
mov
ror
mov
mov
mov
movs
cmp
mov
push
movs
mov
mov
(bad)
cmps
xor
cmps
int
pop
mov
adc
xor
jne
mov
xchg
pop
fs
outs
inc
push
ret
mov
sbb
das
outs
frstor
xchg
aas
sbb
imul
push
sub
js
mov
adc
mov
fs
mov
inc
cld
ds
inc
xchg
dec
jg
or
or
adc
out
outs
xchg
lds
(bad)
addr16
push
push
sbb
xchg
xlat
inc
xchg
ins
(bad)
(bad)
push
add
cmps
pop
movs
stc
shl
and
(bad)
dec
push
push
mov
mov
mov
mov
or
jge
(bad)
pop
add
lock
or
mov
push
or
lods
mov
cmp
call
sbb
xor
or
fmul
fcmovbe
push
loopne
in
clc
or
cld
in
bnd
fisttp
ror
xchg
or
popf
mov
dec
imul
fstp
fstp
pop
call
loopne
mov
jo
pop
mov
pop
ret
nop
xchg
push
mov
outs
pusha
xlat
dec
push
xor
jae
out
mov
or
idiv
dec
push
sub
cdq
hlt
pop
and
call
fist
xor
mov
inc
push
inc
or
pop
jnp
push
inc
test
je
int3
lock
ins
je
push
dec
dec
adc
stos
(bad)
or
mov
mov
inc
xor
xchg
mov
ja
xor
mov
retw
mov
push
mov
daa
jo
inc
and
inc
cwde
pop
icebp
outs
xlat
jbe
or
jge
je
ror
pop
push
lock
fcomp
sti
adc
ds
es
cmp
sbb
fcmovbe
ss
aas
mov
cld
and
mov
sub
retf
xchg
outs
inc
out
(bad)
jg
pop
mov
dec
or
leave
je
mov
mov
call
mov
mov
rol
add
push
rcr
jmp
and
jl
mov
mov
and
add
mov
cmp
aad
sbb
aad
test
add
mov
(bad)
cmp
jg
cmp
mov
mov
push
aaa
je
test
jle
test
jle
mov
fstp
mov
(bad)
mov
stc
fstp
fwait
cmp
jge
mov
fadd
fstp
or
pop
cmp
lea
mov
push
add
lds
lock
sub
(bad)
loopne
jo
xchg
and
sbb
dec
add
bound
jge
mov
or
and
sar
jns
adc
xor
aaa
push
adc
sub
sar
push
rol
inc
xor
rol
pop
pushf
mov
outs
pop
inc
and
cld
mov
mov
mov
aas
xlat
sub
jnp
sbb
add
push
dec
mov
push
push
sbb
mov
cmp
sbb
inc
ss
fcom
cmp
call
mov
adc
mov
sub
fadd
jmp
pop
jp
jmp
inc
push
call
sub
adc
mov
je
popf
inc
ins
inc
inc
adc
xor
mov
enter
xor
shr
mul
movzx
sti
sbb
test
adc
or
enter
xchg
add
js
je
sbb
xchg
adc
adc
popf
sub
jmp
xor
daa
adc
adc
fdivr
cmp
mov
add
lea
aaa
push
jl
mov
call
mov
jge
je
div
mov
cli
inc
sbb
jne
and
jle
push
imul
jnp
das
dec
jne
mov
pop
and
idiv
mov
clc
fs
cmp
call
lods
xchg
mov
add
mov
jl
arpl
push
rol
mov
mov
xchg
ss
js
mov
cli
ficomp
test
shl
sahf
fmul
out
and
xor
pop
mov
cmp
push
sbb
or
xlat
mov
ins
or
xchg
xlat
xor
cmp
xchg
mov
or
js
adc
hlt
push
fldenv
push
test
jne
mov
loopne
sub
jne
sahf
in
repnz
or
jle
je
inc
or
push
inc
sbb
ret
pop
push
clc
jp
pusha
cmp
fst
jnp
dec
pop
mov
lods
inc
clc
pop
pop
mov
pop
or
inc
out
or
mov
fsubr
and
hlt
mov
les
dec
arpl
out
xor
shl
add
es
retf
cmp
xor
sub
lods
(bad)
adc
or
pop
add
shl
jo
jp
inc
fwait
inc
sets
ror
das
xor
or
mov
comiss
push
lds
mov
add
ds
xor
loopne
nop
dec
mov
lock
inc
push
in
push
shl
call
cmp
inc
jmp
or
pushf
push
adc
and
repz
fmul
or
fst
es
jnp
sbb
das
adc
aaa
xchg
(bad)
sbb
cmp
push
dec
push
mov
pop
test
jb
xchg
lods
and
sbb
inc
je
xchg
in
push
lds
push
nop
xchg
cmp
imul
mov
inc
mov
cmp
jg
or
sbb
cmp
jl
ret
or
push
pop
jl
mov
dec
fs
int3
adc
shl
push
and
cmp
cmps
pop
ficom
jne
cmp
sbb
ds
addr16
fbld
adc
inc
inc
sbb
cmp
push
out
jl
mov
sub
dec
add
les
in
add
(bad)
jmp
lds
push
add
ins
inc
inc
sbb
inc
xor
add
(bad)
fidivr
or
sub
jae
arpl
ret
pushf
popf
and
int3
lock
push
cmp
mov
rol
push
jg
and
add
repz
mov
icebp
mov
adc
inc
sbb
pop
add
add
pop
popf
inc
mov
add
inc
inc
cli
xor
sbb
push
push
ret
inc
popa
sub
movs
(bad)
ins
xchg
inc
cmp
inc
(bad)
mul
test
pop
adc
ror
cmp
(bad)
adc
jne
pop
or
or
mov
out
inc
test
xor
add
shl
rcr
fwait
les
bound
adc
inc
add
add
inc
inc
inc
jp
pop
mov
jne
or
cdq
out
push
jl
ret
dec
mov
pop
inc
push
std
sub
ss
mov
and
pop
imul
cmp
xor
inc
add
mov
inc
sahf
cld
adc
into
les
mov
cmp
js
mov
mov
imul
push
popa
(bad)
push
mov
pop
push
mov
and
or
sub
jmp
ins
shr
jg
icebp
js
call
xchg
loopne
jno
mov
adc
ja
test
add
xabort
jg
not
and
mov
mov
or
fdivr
xchg
aad
sub
inc
pop
mov
cmps
add
cmps
std
imul
movs
add
pop
loope
mov
and
in
dec
ss
imul
(bad)
or
push
inc
ss
pop
mov
(bad)
sbb
mov
inc
add
imul
add
or
fst
adc
mov
call
sub
jg
or
xchg
cmp
rcr
cmp
pop
scas
pop
outs
inc
popa
(bad)
pop
out
mov
or
mov
movs
cmp
xrelease
mov
mov
cs
icebp
movs
mov
sbb
sbb
pop
ret
xchg
mov
movs
dec
dec
cmp
fucomp
sbb
sub
test
mov
xlat
movs
pop
call
fwait
aam
(bad)
les
pusha
cmp
cmp
cmp
(bad)
push
inc
inc
out
rcr
fist
cmp
and
dec
mov
inc
pop
push
cmp
icebp
xor
pusha
and
test
adc
add
push
mov
push
hlt
sbb
outs
xlat
sbb
mov
push
in
loope
lods
sub
inc
cmps
mov
dec
mov
clc
cmp
adc
pop
lahf
sahf
icebp
scas
pop
lock
lods
or
sub
adc
lahf
cmp
sbb
or
jle
cld
mov
rol
pusha
hlt
int3
call
sub
or
adc
and
adc
pop
cld
jo
or
dec
(bad)
shr
jo
lds
sbb
stos
les
adc
out
pop
adc
xor
rcr
je
push
les
in
dec
cs
inc
add
hlt
enter
mov
test
cli
rcl
or
leave
dec
mov
sbb
call
add
push
pop
cs
jns
call
jmp
call
enter
test
push
(bad)
xchg
loopne
das
add
lods
loope
or
rep
pop
cld
cdq
or
adc
inc
dec
test
sbb
call
xlat
mov
loop
cmp
adc
loopne
dec
popa
cs
shl
add
fdiv
push
add
adc
invd
jno
sub
adc
cs
jle
test
add
or
adc
pusha
sbb
jnp
push
or
cmp
je
lds
sbb
shr
or
add
inc
pop
rcl
mov
loopne
sbb
jo
in
mov
mov
dec
sbb
retf
in
jmp
sub
jbe
pop
adc
mov
pop
mov
mov
nop
mov
retf
mov
mov
jmp
movups
xor
mov
pop
lods
das
add
add
shr
xchg
cmp
aaa
(bad)
mov
cwde
aaa
xchg
aaa
sbb
jle
cmp
minps
addr16
in
pop
cmp
cmova
push
and
test
(bad)
pop
add
inc
rcr
out
sbb
xchg
ret
push
loopne
outs
pop
neg
mov
mov
mov
pop
scas
dec
scas
jle
jl
jl
and
cmp
or
cmp
sti
push
bound
dec
lea
movs
add
outs
movs
imul
push
jne
mov
push
loopne
cmp
sub
cmp
test
adc
lock
cmpxchg
mov
jmp
cmp
mov
jne
inc
pop
rcl
dec
imul
out
xor
xchg
jmp
arpl
jbe
pop
cli
push
hlt
xchg
in
cwde
jmp
sub
int
xor
xchg
xor
mov
xchg
sub
cdq
xchg
jno
loope
stos
jns
sub
dec
jmp
mov
pop
shl
cmc
or
popa
leave
nop
push
stc
adc
into
push
jne
mov
inc
pop
xchg
adc
jmp
or
jmp
adc
xchg
movs
push
push
xor
or
sar
cmp
loope
pop
or
mov
mov
fld
into
inc
loop
cmp
mov
mov
add
in
rol
aaa
sti
fild
mov
mov
mov
dec
add
adc
mov
adc
xchg
pop
sti
push
mov
pop
sbb
and
sbb
movs
sub
mov
scas
cmp
jo
dec
mov
sar
shl
add
dec
out
cmp
loopne
adc
mov
cmp
adc
inc
in
add
mov
or
adc
dec
clc
mov
dec
xchg
out
mov
and
clc
mov
(bad)
bound
scas
pop
pop
adc
mov
or
mov
add
push
or
and
and
push
add
or
ins
and
mov
add
inc
hlt
test
and
push
imul
popw
call
cmp
push
push
cmp
pushf
sbb
pop
loope
shl
outs
inc
inc
xor
sar
fs
test
push
int3
sbb
nop
aaa
adc
loop
ins
fld
inc
pop
(bad)
andps
mov
pop
lss
shl
sar
jo
jnp
push
xchg
lock
cmp
or
adc
adc
add
stos
test
ins
cmp
call
ds
(bad)
sub
cld
sub
jne
scas
rcl
mov
or
es
mov
or
ss
add
xchg
hlt
push
pop
je
sahf
mov
dec
int3
mov
mov
neg
pop
in
push
fcom
cmp
push
das
inc
repnz
cwde
inc
lea
and
mov
jecxz
inc
rcl
pop
inc
std
outs
jb
loope
mov
pusha
or
hlt
push
sub
inc
inc
prefetchw
test
mov
data16
inc
ret
je
stos
inc
ins
aas
mov
mov
loope
lods
sbb
pop
push
stos
adc
add
imul
xchg
movs
adc
jne
mov
(bad)
pop
pop
add
mov
clc
ret
jo
in
std
fnsetpm(287
data16
or
push
pop
add
adc
popf
syscall
jo
cs
fild
or
lock
popf
xor
adc
inc
pop
pop
sub
push
rol
stos
mov
sti
fild
inc
or
xor
daa
in
pop
je
mov
clc
add
fwait
iret
pop
jo
test
add
pusha
lds
out
xor
cmp
sahf
jbe
xor
dec
or
sbb
mov
std
sti
mov
inc
aas
dec
xor
adc
pushf
mov
lea
and
mov
mov
mov
inc
and
into
cmps
sbb
cs
jo
add
add
xor
sbb
xchg
mov
test
pop
mov
or
sub
loopne
cmp
sbb
add
xchg
out
adc
mov
sahf
mov
test
mov
stos
pop
and
cmp
add
mov
push
adc
pop
jns
sbb
cli
jnp
cmp
or
sub
mov
les
pop
lods
push
pusha
mov
cwde
or
push
sahf
js
add
rcl
adc
or
pusha
jmp
adc
lahf
or
(bad)
and
jbe
jmp
inc
stos
cmp
sub
jmp
fwait
cs
fidivr
and
inc
jl
js
sbb
cmp
movs
out
jne
mov
cmp
sbb
or
mov
push
out
icebp
and
and
outs
or
test
dec
mov
lahf
outs
cli
sbb
out
in
xor
cs
rol
loopne
pop
xchg
ins
or
movs
fiadd
xchg
ins
movs
or
add
mov
loopne
xor
pop
sbb
loopne
imul
shr
outs
div
pop
push
out
mov
cmp
jle
and
add
rol
sahf
mov
adc
adc
inc
lods
aad
outs
sub
push
outs
add
xor
pop
retf
pop
add
ss
and
mov
call
mov
nop
pop
pop
or
mov
and
mov
add
retf
cmp
ja
and
or
in
pusha
sbb
push
xchg
mov
dec
or
ja
push
bound
loopne
xchg
movs
pushf
adc
jne
pop
fsubp
mov
and
mov
out
fild
sub
sbb
dec
mov
cmp
mov
push
mov
mov
jne
adc
cwde
cmps
jnp
outs
hlt
inc
or
pushf
or
ds
cld
mov
and
xor
dec
sahf
sbb
jge
stc
cmp
iret
cmp
dec
add
cld
mov
add
or
push
shl
jno
pop
loopne
loopne
mov
hlt
stos
aad
push
jecxz
retf
std
hlt
add
sub
fadd
cmp
add
mov
fnsave
out
or
jbe
outs
add
cmp
and
sbb
or
inc
mov
(bad)
fcmovb
jb
fiadd
dec
fsubr
fstp
cld
sbb
pop
jg
jl
cld
lods
add
add
push
sbb
ret
fimul
mov
cmc
mov
dec
mov
mov
sbb
or
pusha
adc
(bad)
popa
dec
inc
je
or
and
xchg
ds
and
dec
lock
lds
aas
jg
les
pushf
mov
clc
inc
rcr
add
sbb
jle
data16
push
jmp
test
dec
dec
mul
fdivr
in
or
mov
ds
jo
xor
outs
add
pop
outs
into
cmp
(bad)
xor
out
add
xchg
add
push
bound
sbb
loope
cmp
and
sub
mov
add
call
sub
bound
cli
pop
add
(bad)
mov
loopne
lea
test
mov
add
adc
scas
push
dec
stos
cmps
cmp
jmp
mov
and
sub
inc
add
addr16
push
push
jmp
add
dec
add
outs
add
adc
pop
ret
push
dec
add
pop
lock
mov
es
daa
rcl
pop
cld
mov
ss
add
add
jmp
cmp
das
je
int
or
popa
jo
push
cmp
int
inc
or
int3
jmp
jg
jmp
jo
lea
jle
std
xchg
out
movs
lea
and
adc
leave
sub
cmp
cmp
adc
daa
inc
and
cmp
cmp
jnp
dec
sub
inc
gs
ja
arpl
push
add
call
loope
loope
push
pop
retf
popf
adc
push
push
or
or
jne
(bad)
add
add
pop
aad
in
stos
aas
rcl
in
jo
shr
rcr
sbb
dec
int3
int3
sar
xchg
call
pause
xchg
lods
dec
enter
shr
push
cmp
jg
dec
inc
les
mov
pop
(bad)
cwde
call
inc
mov
dec
jne
dec
(bad)
dec
xor
lock
mov
aaa
push
inc
cmp
outs
fcomp
jmp
scas
js
imul
out
mov
push
add
ins
lds
es
out
cmp
ror
mov
fcomp
pop
cmp
ss
add
jl
ds
jge
jle
or
pop
lock
(bad)
sub
dec
mov
dec
xor
hlt
jge
mov
rol
or
add
out
xor
push
das
mov
aaa
inc
sub
dec
sub
mov
paddd
sub
add
jns
pop
add
mov
in
fwait
mov
jl
neg
inc
in
test
dec
lods
cmp
jne
sub
in
add
clc
fisub
aas
and
clc
fimul
add
cmp
je
test
mov
inc
(bad)
inc
(bad)
push
je
add
shl
pop
mov
nop
out
add
es
pushf
pushf
aam
push
or
mov
std
inc
jo
pop
out
sub
shl
lea
push
sbb
add
rol
sahf
cmp
je
mov
shr
dec
mov
push
and
mov
add
je
mov
(bad)
cwde
add
or
rol
lock
movq
ja
adc
push
push
mov
mov
or
xchg
add
addr16
add
add
test
jo
dec
stos
add
ret
mov
adc
ds
jmp
(bad)
push
sbb
jbe
sbb
stos
retf
inc
mov
(bad)
leave
scas
push
and
jb
sbb
lods
sbb
ds
shr
add
push
push
push
inc
ins
or
(bad)
jmp
in
or
jne
je
outs
pop
mov
fild
inc
ins
outs
arpl
push
outs
ins
bound
outs
js
adc
popa
push
imul
fist
sub
push
adc
imul
and
div
popa
jb
inc
ins
jns
adc
gs
fs
dec
imul
or
je
imul
test
push
je
inc
popa
ins
(bad)
std
std
pop
sti
dec
popa
jbe
addr16
imul
gs
jb
addr16
jge
ret
sub
(bad)
into
or
push
arpl
ins
ins
outs
in
mov
out
push
jo
jb
je
je
outs
gs
mov
in
out
cld
sbb
add
or
imul
in
outs
pop
or
imul
std
mov
push
mov
fild
outs
adc
xor
outs
adc
lock
jo
dec
outs
inc
data16
gs
out
or
outs
ja
bound
xchg
jae
and
inc
je
jo
sub
xor
xor
das
mov
xchg
test
adc
popa
adc
and
imul
dec
loopne
int
push
gs
sub
sbb
jbe
push
ins
inc
and
ror
arpl
jae
in
rcr
(bad)
ins
repnz
or
call
and
push
outs
ins
ret
dec
and
adc
push
sbb
fs
jb
jl
mov
fcmovb
and
je
call
out
fadd
inc
jae
shl
gs
jne
psubusb
sub
imul
in
addr16
push
mov
aas
mov
int3
loope
outs
arpl
add
sub
sbb
cmp
mov
pop
cmp
add
das
fisttp
aaa
xlat
test
shl
es
sbb
sar
sub
or
lds
or
push
ret
pop
ret
push
mov
mov
inc
fsubr
mov
fcomp
or
sub
jnp
scas
adc
adc
sbb
mov
fmul
cs
xor
or
mov
jp
nop
pop
fcomp
add
xor
test
xor
int3
sysenter
xor
and
push
mov
lods
adc
retf
push
jo
mov
imul
or
sub
xor
lahf
out
cmps
push
aas
inc
ins
jns
ss
xchg
xor
sub
xchg
sub
xor
xor
adc
add
(bad)
shl
push
jmp
(bad)
out
cmp
dec
fsub
aas
ror
inc
mov
imul
addr16
mov
mov
push
adc
sbb
and
push
push
fs
test
pop
rol
ja
test
pop
repz
dec
jo
outs
sub
pop
pop
lock
retf
or
outs
pop
xor
push
push
adc
in
push
sbb
pop
adc
loopne
inc
push
dec
sbb
mov
cmp
xor
xor
add
jo
add
xchg
xchg
jne
ins
or
sub
int3
push
daa
lea
jmp
sub
mov
adc
dec
loopne
frstpm(287
fsubr
aad
mov
inc
or
mov
add
aad
inc
xor
test
in
icebp
repnz
loopne
inc
add
adc
xor
xor
inc
and
push
loope
daa
fisubr
cmp
ins
sbb
aad
sub
and
daa
cwde
sub
daa
rol
lahf
mov
inc
sbb
movs
adc
idiv
mov
adc
sub
inc
je
push
adc
push
jecxz
push
repnz
mov
test
and
fimul
hlt
into
or
aad
add
mov
outs
je
mov
leave
or
ins
add
in
push
push
imul
dec
mov
pop
adc
lea
je
add
fidiv
in
push
nop
cmp
les
lock
xchg
push
and
or
dec
retf
outs
das
mov
in
in
cmp
inc
bound
jecxz
stos
and
arpl
into
movs
or
aaa
sub
jo
adc
test
xchg
ffreep
cmp
pop
xor
retf
push
aas
inc
push
xor
xor
jne
(bad)
jb
gs
dec
shr
sbb
fnsave
add
push
(bad)
dec
outs
ins
movs
test
ins
push
and
and
push
in
cli
lds
cmp
addr16
xor
aaa
mov
xor
xchg
cmp
mov
mov
cmp
add
aam
xchg
stos
aaa
xlat
add
call
gs
jno
push
sbb
(bad)
push
out
sbb
jmp
outs
mov
push
mov
cwde
mov
sub
dec
bound
ret
and
sub
and
movs
movs
ret
daa
mul
cmp
daa
in
or
adc
pop
sbb
sub
and
push
push
mov
bound
rol
outs
dec
mov
cmp
and
aam
into
or
or
push
ret
and
rol
cld
daa
mov
jb
and
xchg
shl
adc
sbb
cs
sbb
ja
ins
shl
inc
les
mov
and
mov
and
cmp
mov
sub
push
sti
mov
gs
aam
adc
mov
cmp
push
push
sbb
and
xor
pop
xor
push
cmp
cmp
cmp
xor
shl
sbb
or
push
xor
cmp
ror
xor
pop
push
xor
fadd
ins
or
pusha
or
pop
rcr
ret
ja
ja
rcl
das
ja
enter
iret
cmp
adc
imul
inc
fsub
pushf
add
test
push
sub
push
pusha
(bad)
cmc
std
shl
test
xchg
popa
sub
addr16
xor
cdq
lea
add
add
and
(bad)
inc
test
shl
jo
pop
cdq
lea
pop
imul
adc
mov
test
mov
scas
or
ss
or
pop
xor
retf
imul
cmps
sbb
bound
mov
inc
xor
popa
jo
idiv
inc
sub
mov
mov
mov
out
out
xchg
xor
xor
xor
data16
mov
and
mov
sub
push
xor
push
inc
cmp
sbb
aaa
cmps
mov
push
aaa
cmp
aaa
mov
dec
pop
inc
or
xchg
lea
and
mov
adc
aaa
and
sbb
mov
dec
ret
test
popa
jae
jp
push
shl
adc
add
jbe
push
sub
sub
test
dec
add
clc
and
add
and
imul
and
or
test
shl
shr
adc
fiadd
and
jo
xor
addr16
das
sbb
mov
mov
dec
jnp
push
mov
dec
dec
lock
pop
ja
nop
and
rcl
or
jmp
ss
shl
test
sbb
ret
ds
pusha
xchg
jbe
ins
mov
xor
sub
mov
cmp
aas
arpl
cmp
mov
cdq
xor
push
pop
and
adc
arpl
ret
daa
cmc
fiadd
mov
xor
mov
sar
sbb
test
push
adc
pusha
adc
fisub
cld
sub
cld
lds
mov
mov
dec
mov
int3
add
das
mov
shr
push
mov
retf
adc
mov
sub
ins
fidiv
ins
popa
and
push
xor
ja
and
sub
adc
xor
adc
fisub
dec
xor
add
imul
dec
outs
xchg
cmc
fs
mov
movs
pop
aas
repz
pusha
ss
add
push
ins
pop
out
sbb
popa
dec
xor
pop
mov
lods
pop
sti
daa
enter
push
push
dec
or
daa
test
or
xchg
add
pop
push
inc
outs
out
mov
je
adc
push
jo
mov
(bad)
xor
jge
inc
adc
sub
bound
int3
or
add
mov
cmp
cmp
xor
dec
shl
popa
mov
xor
sub
rol
out
test
add
push
xor
rcr
ins
ss
not
adc
ror
push
mov
mov
shl
(bad)
addr16
les
mov
das
test
(bad)
sub
dec
and
xor
or
push
inc
mov
mov
popa
bound
push
popf
cmp
sub
cld
adc
ficom
inc
gs
loopne
xchg
jns
sbb
push
cmp
ins
cmp
jmp
and
arpl
push
imul
xchg
adc
inc
sbb
mov
test
push
(bad)
and
xor
xchg
mov
push
imul
lea
xor
jo
cmp
mov
movs
mov
bound
inc
mov
test
shl
pop
enter
or
xchg
xor
xchg
cmp
fwait
adc
mov
mov
and
inc
inc
pop
jge
dec
addr16
fcomp
dec
sub
and
cmp
ins
or
shr
push
adc
adc
and
aas
inc
test
fcmovb
std
mov
arpl
hlt
test
ins
jmp
jg
sub
push
jne
dec
int3
dec
sub
pop
cmc
pop
xor
fisttp
ficom
lock
add
dec
lock
mov
dec
idiv
sbb
mov
ins
daa
mov
sbb
jae
(bad)
mov
xor
lahf
es
sbb
push
inc
pop
mov
data16
jmp
mov
dec
lods
popa
xchg
data16
sahf
les
xor
adc
pop
dec
outs
adc
cmps
xlat
(bad)
ins
inc
and
sbb
aas
cwde
daa
rcr
sub
pop
or
test
xor
ret
test
and
mov
xor
sbb
add
ret
sahf
push
daa
add
mov
test
or
xlat
sbb
mov
cmp
mov
and
mov
and
mov
mov
data16
mov
loope
or
sbb
push
jne
mov
jns
mov
push
jns
mov
arpl
daa
sti
sub
fsub
push
jmp
pop
mov
add
movs
xchg
pop
mov
mov
push
shl
pop
pop
sub
dec
and
stc
pmaxsw
aaa
or
retf
shl
xor
icebp
shrd
dec
push
bound
ja
jo
(bad)
adc
sub
repz
or
icebp
xor
fstp
test
add
xor
lahf
jb
sbb
push
and
rcr
cmp
sbb
lds
mov
lods
mov
mov
inc
pusha
cmps
fs
add
mov
jb
pop
inc
cmps
daa
cmps
or
xor
sahf
out
sub
arpl
xor
xor
dec
rcpps
jo
xor
lods
neg
addr16
cmp
push
test
sbb
xchg
bound
fs
jns
xor
add
data16
test
lea
xchg
ja
add
push
push
push
out
data16
test
jle
outs
and
fld
imul
adc
mov
or
in
xchg
pusha
aaa
mov
inc
int3
sub
dec
dec
popa
jbe
xor
cmp
ins
and
sbb
lea
mov
inc
sub
and
sbb
jmp
adc
or
adc
xor
and
mov
cmp
test
sbb
ins
popa
push
sub
in
ins
ss
fild
fist
and
ins
ret
or
mov
neg
not
neg
ja
mov
in
lock
lock
ja
and
inc
and
out
or
rol
or
nop
mov
movs
rol
sub
sbb
sbb
adc
pop
cwde
pop
mov
ja
ja
mov
mov
and
cmp
push
in
sub
and
sbb
jp
test
pop
inc
push
icebp
inc
icebp
push
pop
pop
pop
sbb
and
xor
loope
add
imul
add
shl
adc
(bad)
(bad)
or
xor
mov
xchg
or
sub
pop
mov
sbb
or
dec
outs
inc
mov
ja
add
sub
adc
push
mov
mov
test
nop
xchg
or
dec
dec
inc
pop
inc
daa
push
popf
inc
or
ins
add
stos
inc
ret
inc
cs
ds
xor
adc
data16
bound
xchg
ins
adc
and
jb
lds
test
lds
or
mov
sub
test
jg
jg
dec
ror
and
and
lds
add
inc
lds
ja
popa
jne
test
pop
ja
dec
xchg
or
cmp
adc
rcr
sbb
or
inc
mov
xchg
retf
ret
xchg
xchg
shl
and
or
xor
or
out
fsub
call
add
pop
ja
outs
fs
mov
push
or
and
mov
bound
push
inc
and
mov
adc
fimul
jl
into
stos
es
ins
jns
jo
dec
rol
push
sub
ins
xor
lods
sbb
mov
pop
adc
ins
mov
(bad)
das
mov
shr
sbb
sub
add
adc
sar
cmp
ror
lea
jbe
sbb
or
shl
mov
sbb
adc
sbb
sbb
in
arpl
(bad)
jb
push
sbb
mov
push
lds
mov
ins
jnp
jg
xor
push
jns
inc
ja
push
dec
or
push
idiv
sbb
xor
loope
ret
push
pop
pop
ret
mov
into
push
ficom
imul
and
or
out
and
popw
pop
push
adc
ret
pop
sub
imul
cmp
movs
inc
fninit
sbb
add
mov
outs
jo
inc
and
push
and
ss
push
and
sbb
or
fsub
or
push
inc
push
out
sbb
push
add
xchg
cdq
mov
or
sub
icebp
add
int
bound
sbb
cmp
loopne
push
mov
add
out
lods
adc
ret
test
push
push
and
das
pop
or
sbb
or
dec
or
pop
jne
xor
inc
xchg
inc
xor
jb
nop
movs
jecxz
aas
pop
dec
add
cwde
rol
lock
xchg
ret
sbb
inc
sbb
data16
pop
pop
sbb
fmul
pop
and
dec
daa
push
and
test
sti
imul
aaa
xor
test
out
push
enter
add
daa
out
cmp
ins
imul
(bad)
nop
or
lock
push
arpl
fcomp
imul
xchg
inc
push
mov
jae
and
fldenv
aad
test
ja
mov
dec
mov
sbb
pop
inc
daa
adc
sub
jmp
ins
xor
push
sub
aaa
cmps
movs
inc
pop
dec
xor
lods
cmps
sub
add
push
and
or
pop
ret
imul
add
and
mov
cmp
imul
mov
add
(bad)
sub
pop
xor
cmc
adc
sub
std
cmps
jmp
add
pop
jae
je
add
push
into
sub
lds
lds
pop
sub
push
mov
movs
dec
inc
shl
jecxz
mov
pop
bound
das
jecxz
imul
adc
(bad)
ja
popa
adc
add
jg
mov
jecxz
dec
sub
push
(bad)
jecxz
add
ss
jecxz
xor
rcl
ins
sbb
sahf
sub
mov
ins
lds
add
xor
scas
add
push
dec
inc
outs
js
inc
js
(bad)
daa
jecxz
mov
sti
jbe
and
int3
sub
pop
sbb
or
ins
pop
test
ins
addr16
jne
pusha
sbb
pop
mov
or
jl
loope
dec
daa
not
imul
mov
test
into
retf
mov
push
fadd
adc
or
dec
pop
push
idiv
xchg
mov
pop
or
or
aam
sbb
shr
sbb
xchg
cmp
pop
div
ss
ins
(bad)
jle
pop
fadd
sbb
ret
movs
adc
inc
lods
adc
es
lds
mov
inc
pusha
arpl
sub
jae
sbb
mov
popa
ins
jae
or
test
ja
in
and
sbb
mov
aad
dec
inc
rcr
pushf
test
ins
push
pop
sub
je
dec
data16
out
jo
data16
adc
adc
push
jne
jne
dec
inc
bound
sar
imul
jne
imul
cdq
loop
xchg
push
adc
bound
rcl
pop
ins
xor
xor
dec
xor
mov
adc
inc
mov
dec
push
outs
stos
adc
gs
pop
inc
jae
mov
add
or
sub
sub
add
push
aaa
adc
jo
lea
adc
mov
mov
mov
loop
sbb
and
outs
and
mov
push
enter
push
je
mov
xor
aaa
sbb
jmp
cmc
repnz
and
rcl
pop
gs
inc
dec
sub
push
xchg
in
rcl
adc
or
inc
jecxz
push
or
sub
pop
popa
retf
mov
jne
push
sbb
dec
ja
jp
test
js
or
shr
push
xor
cmp
adc
(bad)
pop
mov
and
ret
and
movs
add
and
call
and
fs
test
ret
or
sub
xor
cdq
ret
xor
cmps
xor
movs
xor
loopne
fcmovbe
push
cmps
rcl
loope
loope
adc
adc
icebp
mov
and
or
icebp
das
icebp
ret
fsubr
icebp
xor
push
xchg
or
xor
push
push
(bad)
xor
clc
aaa
jmp
arpl
mov
xchg
sub
push
pushaw
dec
clc
sub
xor
inc
mov
jmp
popa
stos
cdq
outs
loopne
das
icebp
test
add
mov
stos
cmp
aaa
inc
push
mov
cmp
or
sbb
add
dec
sbb
push
inc
test
sub
nop
sub
push
or
cmp
or
sub
adc
xor
inc
jmp
sar
push
and
ror
cli
or
xor
shl
ret
sbb
fnstcw
gs
fstp
jo
adc
inc
ss
sbb
push
test
imul
pop
test
cmp
bound
sub
dec
or
daa
sti
test
out
jo
cli
xchg
mov
call
shl
add
dec
jo
dec
add
out
pop
pop
add
nop
cmp
add
and
or
push
pop
imul
clc
imul
(bad)
and
les
lahf
imul
mov
dec
and
push
pop
and
mov
ret
and
or
mul
lds
push
jo
or
sbb
push
push
sub
and
jns
mov
and
popa
lock
mov
jne
hlt
das
adc
jbe
dec
sub
fcomp
xor
pop
push
fisub
ss
call
and
adc
xchg
or
lea
pop
sbb
add
test
and
outs
push
pusha
xor
add
sbb
stc
cvtps2pi
sysret
sbb
out
push
das
xchg
cdq
in
dec
mov
jp
test
fadd
cmps
fs
imul
imul
adc
add
movs
arpl
mov
pop
inc
ins
popa
push
sbb
rol
cmps
push
pop
jnp
inc
xchg
push
dec
pushw
test
inc
jne
or
test
xor
sbb
push
data16
dec
rcr
sar
cmp
ins
xor
xor
or
(bad)
sahf
jnp
das
jno
pop
add
push
dec
sbb
jge
je
dec
dec
push
dec
cmp
xchg
mov
out
xor
sub
imul
call
sbb
repnz
pop
push
imul
mov
(bad)
ja
xor
jne
sub
cwde
sub
imul
jo
pop
sub
push
mov
or
cmp
ins
adc
sub
lock
push
neg
add
adc
sti
cmp
add
imul
test
and
dec
test
mov
rol
jecxz
jecxz
pushf
js
daa
dec
and
cmp
and
aam
pop
(bad)
dec
mov
fucomi
and
dec
jb
adc
movs
(bad)
xlat
daa
push
mov
and
das
pop
into
les
xor
inc
sub
xor
adc
iret
mov
add
xor
push
and
movs
test
ins
inc
adc
test
or
jg
dec
int
rol
mov
adc
push
ins
mov
dec
mov
addr16
in
sbb
sub
mov
xchg
cmp
xor
add
sbb
cmp
jns
and
mov
push
ins
not
and
mov
and
arpl
ret
xlat
shl
mov
adc
daa
mov
inc
inc
xchg
daa
cmps
popa
pop
or
xchg
daa
add
or
xchg
frstor
or
movs
add
sbb
adc
jge
das
(bad)
cmp
sti
pop
jg
das
mov
clc
les
inc
ins
jns
push
mov
cmp
xor
jo
cmp
bound
div
cmp
sahf
sub
pop
cmp
push
push
imul
push
cmp
adc
sub
js
push
and
aaa
add
inc
push
and
jnp
ficom
(bad)
test
sub
cmp
pop
cmp
pop
int
inc
sub
sub
add
and
sar
mov
cdq
nop
push
rcr
nop
sbb
shr
sub
aam
jmp
xor
gs
adc
jae
or
aaa
mov
and
push
push
fwait
or
pop
pop
or
adc
mov
sbb
pop
inc
ficom
add
popa
and
cmp
mov
call
out
(bad)
push
daa
or
mov
push
jge
sbb
push
scas
xor
sbb
push
push
pop
sbb
or
add
jnp
scas
shl
sub
xchg
fs
lea
data16
sbb
and
test
mov
arpl
inc
xor
pop
ins
ins
mov
pusha
push
daa
mov
pop
out
out
repz
aaa
mov
int
pop
mov
add
daa
fwait
sub
sbb
pop
rcl
mov
loope
jae
cmp
ret
mov
sub
pop
test
arpl
sbb
sbb
add
pop
aaa
pop
shl
imul
push
cld
sub
cmp
pop
sub
in
fstp
inc
outs
imul
push
out
mov
cmps
ja
adc
or
js
and
and
or
xor
sbb
sub
iret
sbb
inc
jb
adc
or
xor
add
adc
test
inc
cld
outs
in
push
das
xor
fs
(bad)
inc
loopne
and
jo
es
push
lahf
push
imul
imul
ins
ss
ja
(bad)
test
(bad)
and
mov
cmp
push
pop
cmps
sub
ret
dec
outs
int3
and
ja
xor
pusha
(bad)
ins
jno
sub
sub
jnp
das
shr
shl
sub
fsubr
retf
cmps
sbb
(bad)
in
nop
pop
xor
popa
js
adc
bound
add
data16
pushf
ja
lock
push
mov
jg
imul
pop
and
dec
ja
push
inc
inc
pusha
cmps
call
fcmovb
stc
sbb
inc
out
mov
or
or
xchg
and
jne
sbb
jmp
ins
add
inc
fs
push
inc
push
sar
in
sub
adc
push
dec
inc
dec
xchg
cmp
mov
je
inc
add
and
xor
sub
mov
or
adc
adc
fsub
xor
xor
adc
movs
jnp
push
test
inc
pop
or
sbb
push
jecxz
fsubrp
xchg
int3
or
xchg
imul
cdq
mov
or
cmps
pop
xor
pop
mov
push
lds
rcl
xor
or
mov
jmp
dec
push
gs
mov
push
mov
scas
mov
ror
sub
or
(bad)
mov
sub
sub
adc
scas
add
mov
(bad)
and
xchg
add
inc
push
xchg
xor
and
adc
xchg
jp
arpl
mov
xchg
xor
or
push
xor
sub
sub
fmul
adc
and
imul
add
pop
and
and
and
pop
xor
or
or
and
push
push
xor
das
or
jo
popa
je
sbb
cmp
add
xor
ins
adc
and
(bad)
xor
pop
iret
aas
xor
aaa
and
es
inc
pop
jns
adc
scas
push
xor
inc
dec
popa
lods
sub
jo
inc
add
or
mov
add
inc
push
inc
push
mov
push
jmp
push
je
gs
jb
ret
mov
xor
ins
pop
sahf
add
sub
dec
ficomp
stc
or
and
sub
mov
adc
popa
mov
adc
imul
iret
adc
mov
cli
inc
push
inc
and
imul
xchg
xor
adc
or
inc
or
outs
ror
adc
pop
and
adc
and
sbb
pusha
mov
sti
mov
xchg
mov
inc
arpl
and
ror
xor
sbb
das
daa
pop
add
pop
pop
nop
mov
mov
jecxz
inc
jmp
outs
xor
mov
pop
cwde
std
or
push
jne
imul
cwde
outs
dec
or
sbb
lods
outs
inc
add
or
je
inc
pop
inc
jbe
adc
dec
paddb
push
and
push
pop
(bad)
add
(bad)
or
popf
aaa
sbb
xchg
aaa
out
xor
adc
adc
pop
stos
jbe
fisub
add
jnp
pop
or
sub
inc
or
cmp
aaa
(bad)
add
sbb
in
cmp
les
cmps
adc
sub
call
lods
sbb
dec
dec
imul
in
push
outs
push
push
inc
fs
xchg
or
dec
push
popa
push
or
call
lods
mov
sbb
(bad)
ds
inc
(bad)
int
aas
dec
mul
arpl
dec
retf
pshufw
outs
sbb
(bad)
xlat
cwde
xchg
inc
push
fidiv
inc
xchg
xchg
xor
jae
push
xor
cmps
jae
jne
or
cmps
clc
adc
fdiv
sahf
inc
and
ja
inc
daa
xchg
add
je
movs
adc
inc
pop
push
sbb
arpl
xor
clc
pop
loopne
sbb
je
pushf
or
push
cmp
sysret
(bad)
xchg
xlat
cmp
pop
mov
and
xor
ret
add
inc
sub
add
jae
or
clc
and
lods
sub
movs
add
sub
sub
mov
loop
or
fs
mov
or
es
stos
cmp
mov
imul
xor
adc
sti
dec
push
inc
add
cmp
ds
add
pop
dec
icebp
rol
add
cmp
add
or
fsubr
xor
and
retf
mov
addr16
js
fidivr
or
bound
pop
shl
cmp
inc
sbb
jae
xor
pop
adc
sub
add
daa
add
adc
pop
ins
xor
xchg
cmp
adc
jns
jae
lods
mov
inc
popa
pusha
sbb
adc
scas
inc
mov
cmp
stos
jnp
sbb
or
loopne
outs
jbe
xchg
ins
js
adc
imul
xchg
or
push
xlat
xor
or
adc
xor
xchg
jg
daa
sub
repnz
add
add
pusha
dec
fsub
dec
or
dec
jmp
or
or
xchg
stos
int3
pop
adc
jle
inc
push
rcl
adc
mov
xor
add
not
frstor
call
jmp
or
enter
push
or
adc
sbb
pop
xchg
sti
adc
mov
fdiv
inc
or
xlat
es
loope
retf
and
inc
sub
pop
es
cmp
fsub
cmp
inc
addr16
pop
mov
enter
cmp
out
pop
sub
fisubr
das
lea
xor
sub
inc
cli
cmps
arpl
call
aaa
cwde
push
sub
or
and
inc
xor
jmp
cmps
pop
or
or
pop
sub
mov
ins
and
cmps
push
adc
cmps
fsubr
pusha
in
sub
sub
(bad)
push
aaa
into
fsub
mov
daa
retf
cmps
pop
mov
loope
imul
and
dec
sub
mov
or
push
lock
cmp
sub
sub
in
adc
enter
mov
sbb
xor
pop
cs
sbb
xchg
cmp
gs
xchg
sub
and
cs
sub
dec
jb
aad
mov
mov
sub
and
sub
mov
mov
or
ret
outs
jo
push
popa
fwait
sub
inc
sbb
jbe
inc
xchg
pop
or
fldenv
test
sub
fst
pop
popa
fs
ja
das
dec
int3
(bad)
xor
push
inc
pop
(bad)
ret
xchg
ins
mov
sub
and
ins
sub
lds
add
lea
sar
jge
xchg
add
test
jnp
call
ror
mov
pop
mov
cmp
ret
and
and
ficom
aad
aad
in
or
shl
inc
xchg
jbe
adc
jge
cmp
mov
pop
xlat
sbb
scas
outs
cmp
test
les
inc
push
cmovo
fcom
out
or
push
cmovb
xor
pop
add
xor
add
inc
sub
adc
in
mov
add
and
cmp
jns
sub
xor
push
addr16
or
push
mov
inc
dec
add
pop
mov
call
fild
and
cmp
jl
out
inc
xor
ja
and
pusha
ins
xchg
mov
add
retf
add
sbb
jb
add
sbb
int
xor
sbb
dec
nop
cwde
nop
mov
add
repnz
das
and
dec
dec
and
xchg
and
loope
pop
scas
cld
and
sub
and
stc
repnz
adc
pop
sub
test
das
push
jle
add
sub
lea
fldcw
or
add
mov
repnz
or
add
add
retf
xchg
pop
xor
cmp
add
retf
pop
shl
push
pshufb
add
cmp
add
add
add
jb
cs
aas
add
addr16
mov
add
add
sbb
clc
push
ja
add
inc
add
push
push
inc
bound
jb
stos
scas
push
aam
int3
jb
imul
dec
or
adc
je
mov
xor
add
adc
jge
sub
call
mov
test
dec
push
push
imul
add
push
int3
test
push
sbb
jb
and
nop
add
(bad)
loopne
xor
add
xchg
mov
sub
xchg
rol
jb
nop
loope
in
add
dec
test
xchg
adc
or
repnz
in
(bad)
pushf
add
fs
xchg
push
cmc
add
das
rcr
mov
stc
xchg
push
nop
push
mov
add
xchg
cld
add
add
adc
adc
cmps
add
pushf
add
mov
js
jb
nop
push
mov
or
add
nop
sbb
sbb
jo
dec
add
enter
add
push
and
cmp
pushf
add
adc
sub
cmps
nop
push
sub
or
outs
popa
fs
jb
ins
mov
ins
nop
repnz
gs
addr16
xchg
or
cdq
dec
jnp
or
sbb
add
adc
fiadd
pop
or
repnz
je
add
jbe
sbb
or
lock
inc
or
cs
movs
xor
mov
cmp
push
popa
jbe
push
outs
pop
enter
cmps
add
sub
push
jo
test
sbb
sub
push
push
add
mov
movs
xchg
adc
out
jg
mov
push
jbe
pop
push
inc
pop
jae
or
push
add
xlat
add
dec
popa
outs
push
data16
adc
or
mov
push
and
lock
cdq
add
jbe
mov
jb
mov
adc
test
dec
mov
imul
add
push
pop
inc
mov
sti
out
call
ret
enter
clc
mov
push
fmul
inc
dec
outs
mov
push
sub
ret
add
adc
stos
pusha
dec
add
push
inc
add
call
pop
gs
repnz
sbb
push
pop
mov
sbb
daa
and
ja
pop
pop
cmp
jne
repnz
pusha
repnz
int
popa
mov
bound
sbb
mov
mov
mov
jmp
dec
add
xchg
dec
fdiv
lar
out
movd
shr
cmp
mov
adc
jbe
sbb
push
add
push
mov
inc
jo
ins
jns
inc
ins
adc
jbe
xchg
lock
or
jmp
pushf
test
std
mov
pop
test
push
push
sbb
inc
xchg
add
cs
xor
js
rcl
inc
add
repnz
inc
out
add
jne
mov
adc
add
jo
and
in
cmc
shl
push
add
bound
lock
ja
fs
pusha
sbb
test
add
fnsave
add
inc
xchg
stos
sbb
mov
icebp
stos
add
inc
xor
sbb
or
add
push
or
imul
sbb
adc
imul
mov
leave
cmp
outs
lahf
dec
arpl
ret
xor
ret
and
std
add
ret
jo
fld
dec
ins
push
push
pushf
popf
add
fst
adc
popa
sub
popa
arpl
or
imul
cmc
mov
clc
push
sbb
fisttp
push
jl
test
add
dec
outs
pushf
js
mov
loop
jae
aad
cmps
mov
outs
push
sub
add
aam
pop
mov
pop
or
inc
push
mov
inc
pop
jp
add
ret
cmp
(bad)
push
aaa
adc
movs
push
aad
push
mov
fnstsw
xor
jns
lock
repz
and
dec
xchg
add
add
push
xor
add
icebp
adc
or
pop
dec
mov
hlt
add
lahf
mov
and
inc
cmps
xor
cmps
mov
and
and
xchg
aad
stos
or
xor
or
sbb
mov
jbe
mov
pushf
and
dec
xor
mov
add
or
bsf
into
dec
scas
mov
test
push
pop
or
jmp
and
jo
add
pop
adc
test
pop
adc
adc
push
add
xor
mov
in
or
and
inc
mov
mov
and
inc
scas
imul
jns
and
imul
ror
jns
lea
fild
fstp
add
(bad)
add
cmp
dec
sahf
mov
lods
and
ins
mov
cmp
jecxz
mov
aas
mov
cmp
fdivr
cmp
daa
call
cmp
push
lods
jmp
cmp
test
outs
xchg
add
gs
inc
or
add
or
mov
rol
or
mov
jl
add
dec
popa
jae
inc
imul
cmp
outs
jae
in
xor
imul
mov
push
adc
je
cmc
rol
ins
xchg
sbb
inc
jg
and
fiadd
jnp
js
inc
dec
popa
inc
jns
adc
leave
jg
aam
add
jg
test
lods
or
mov
dec
sbb
test
add
ror
sub
sbb
lock
(bad)
popa
bound
in
sub
push
dec
test
scas
dec
jae
sbb
lock
popa
ins
imul
xchg
scas
hlt
ja
bound
inc
mov
and
addr16
outs
outs
popf
cmp
arpl
test
dec
loopne
push
mov
jmp
(bad)
jno
pop
retf
adc
and
scas
or
mov
jp
or
clc
sbb
pop
loopne
mov
(bad)
inc
mov
fadd
inc
cdq
ror
inc
or
inc
dec
rcl
jb
pushf
sub
xor
stc
xor
xor
loop
cmp
popa
push
shl
mov
pop
inc
sub
add
adc
xchg
out
xchg
jae
outs
and
imul
push
mov
aaa
ins
push
add
sahf
in
int3
mov
lock
ret
into
aam
or
lods
and
cmp
out
movs
call
outs
dec
jnp
mov
push
retf
or
add
aad
sahf
out
push
loopne
(bad)
in
cmp
jmp
out
inc
fs
hlt
mov
imul
fisub
mov
pusha
fild
fucom
imul
push
fs
jne
push
in
es
fcom
inc
pop
push
inc
xlat
push
jnp
imul
pushf
mov
dec
fidivr
js
or
push
jecxz
out
push
out
scas
in
push
test
ja
sti
test
lock
movs
push
cwde
sbb
push
out
in
in
inc
jp
scas
rcl
pop
pop
imul
cmp
enter
pop
mov
add
inc
(bad)
adc
in
cmps
ins
inc
pop
cmp
inc
sub
shl
inc
dec
gs
ins
inc
and
outs
or
pop
push
jo
or
add
(bad)
retf
jbe
pushf
inc
sub
push
xor
into
stc
div
ds
push
dec
aam
push
dec
add
add
xchg
das
push
jle
add
ins
sbb
jbe
add
sbb
push
in
sbb
pop
sbb
mov
pop
add
outs
and
mov
add
retf
xchg
sub
and
outs
and
mov
(bad)
add
add
sub
jmp
sub
into
mov
and
sub
mov
shl
das
mov
mov
daa
push
push
xor
xchg
xor
loop
push
jne
stc
adc
xor
sysexit
add
add
jbe
xor
pop
in
stos
setbe
cmpxchg
(bad)
add
movs
fimul
cmp
add
pop
mov
aas
add
inc
add
std
push
jmp
and
inc
sbb
push
push
sub
loopne
data16
(bad)
cld
pop
or
push
fnstcw
rcr
mov
or
jns
adc
pop
xchg
mov
shl
out
xchg
mov
add
xchg
cwde
push
and
loopne
seta
rcr
xchg
and
and
leave
adc
add
xchg
nop
sub
fadd
add
int3
shr
add
push
mov
ficom
fadd
sub
push
add
push
shl
xchg
repnz
pusha
xchg
test
xchg
adc
ins
test
xchg
cmp
or
ret
xchg
xchg
mov
jo
in
(bad)
mov
fs
xchg
ficom
call
xchg
loopne
ins
test
push
cmc
or
xchg
test
pusha
(bad)
(bad)
jle
les
inc
jb
ss
xchg
dec
stc
in
ins
mov
fcom
sub
xchg
xchg
mov
xchg
cld
add
cmp
push
jb
mov
ficom
mov
xchg
fcom
and
xor
leave
sub
mov
js
and
pusha
addr16
xchg
mov
or
lods
adc
xchg
mov
and
call
cmps
pusha
outs
dec
xchg
or
dec
rcr
out
xchg
nop
add
xchg
jbe
and
jo
push
xchg
mov
sbb
loopne
in
sahf
xchg
dec
sbb
shr
xchg
mov
adc
mov
inc
and
xchg
leave
sub
fiadd
cld
sub
cmps
pusha
and
js
or
shl
rcl
ins
sub
(bad)
push
fdivr
aam
add
add
mov
in
scas
aad
or
ja
dec
ins
adc
adc
sub
push
jo
adc
push
adc
pop
lods
mov
push
push
mov
popa
add
test
adc
push
push
dec
outs
outs
imul
mov
out
sbb
jp
add
imul
fs
imul
pop
addr16
or
push
jae
ins
dec
gs
push
imul
je
adc
sub
cmps
sti
fiadd
or
clc
es
jnp
xchg
cli
cmp
cs
push
inc
xlat
(bad)
lock
add
ret
sysenter
mov
dec
and
mov
xor
lock
pmaddwd
(bad)
xchg
pop
add
enterw
or
push
inc
(bad)
(bad)
push
push
push
push
int
lods
out
(bad)
dec
jle
push
sbb
xchg
adc
imul
sub
aaa
cmp
call
or
sbb
inc
sbb
scas
mov
inc
shl
inc
mov
cmp
adc
xchg
test
loope
add
fldcw
adc
shl
add
adc
dec
outs
inc
ins
push
ins
adc
push
outs
addr16
push
nop
mov
and
and
popa
add
adc
jne
les
add
sub
outs
arpl
shl
adc
dec
scas
pop
cwde
ins
pop
icebp
adc
push
or
in
pop
mov
fs
or
enter
xor
in
enter
aad
adc
and
shl
and
in
cmp
or
mov
sbb
lods
and
cmp
push
shr
inc
push
or
sbb
pusha
sub
sti
add
dec
cmp
not
int3
call
push
cmc
mov
fdiv
js
leave
fadd
inc
js
inc
mov
jbe
test
je
aas
cmp
jns
and
dec
gs
pop
mov
and
push
scas
cmp
je
add
jo
inc
cmp
xchg
adc
or
push
rol
jo
sar
imul
sbb
fmul
or
pop
aaa
push
push
sbb
dec
test
out
sbb
or
outs
ja
xlat
sahf
or
or
addr16
add
adc
mov
test
clc
dec
push
in
push
pop
push
pop
mov
rol
xchg
adc
mov
fisttp
sar
inc
or
jp
push
xor
rcr
push
pop
push
pushf
cmps
jge
mov
push
push
adc
push
jo
add
push
dec
xor
in
mov
push
inc
inc
push
inc
push
add
mov
push
mov
push
je
sub
push
add
loopne
xlat
sbb
mov
loopne
cmp
shl
add
fwait
in
fisub
xor
or
jae
xor
add
repnz
jbe
sbb
sub
lock
loopne
loope
jb
fild
lahf
or
xor
mov
sub
push
jb
gs
fmulp
out
adc
addr16
cmp
adc
push
(bad)
xor
mov
dec
bound
pop
cs
push
aaa
aaa
push
xor
(bad)
adc
sbb
inc
inc
adc
jne
inc
cdq
pusha
jo
ins
xor
test
mov
jl
lock
in
add
(bad)
push
xor
inc
jb
jae
mov
sbb
mov
or
test
xchg
dec
and
jl
mov
test
ret
mov
sub
sub
sub
in
mov
jge
scas
jo
ror
mov
lock
dec
loopne
test
xor
mov
pushf
jecxz
fmul
mov
shl
push
lock
xor
test
mov
js
shr
retf
ins
stos
jo
adc
lea
sbb
push
outs
add
and
call
xor
or
push
sbb
push
lea
lock
clc
mov
dec
jmp
psraw
ficomp
out
ins
mov
and
pop
and
or
les
add
movs
enter
out
sahf
inc
push
das
test
and
and
rol
add
clc
ins
aaa
call
jmp
push
mov
jmp
stc
sbb
add
adc
cmp
into
int
int
loop
add
sub
imul
jl
mov
and
sbb
add
and
add
pop
sub
pop
test
pop
xchg
sbb
mov
mov
bound
loopne
mov
sbb
sbb
mov
pusha
adc
fsub
int
inc
mov
push
jae
xchg
and
inc
sar
fisttp
inc
xor
loop
sub
and
or
inc
xor
mov
stos
inc
dec
add
cwde
dec
push
int
dec
in
or
jmp
mov
fmul
mov
pop
dec
inc
(bad)
ror
sar
(bad)
add
pop
and
xor
aaa
add
adc
or
int3
enter
add
pop
or
ja
cmp
inc
enter
aas
loopne
dec
xor
push
pop
push
lahf
call
add
dec
out
pop
movs
iret
fiadd
push
inc
adc
cwde
adc
xchg
inc
enter
push
dec
pop
add
pop
popf
rol
test
push
pop
add
dec
adc
inc
or
adc
imul
adc
inc
fimul
pop
mov
outs
push
add
popf
xchg
add
ror
jg
cs
and
mov
clc
fdivr
(bad)
fst
mov
add
adc
or
dec
jmp
gs
sbb
je
imul
mov
adc
inc
loopne
imul
inc
pop
and
push
outs
pusha
xchg
xchg
cdq
adc
gs
pop
mov
hlt
mov
cmp
push
ins
cmp
pop
shl
pusha
ins
movs
xor
mov
xor
xchg
retf
adc
mov
loope
mov
dec
cld
mov
scas
call
jp
cmp
arpl
loope
push
bound
dec
mov
cmp
test
adc
add
rcl
in
repnz
pop
addr16
in
jge
je
inc
fiadd
ins
dec
dec
mov
mov
add
add
xchg
lds
(bad)
sbb
sub
fadd
or
mov
and
loop
scas
ins
or
inc
push
popa
cdq
pop
add
inc
mov
daa
mov
sbb
dec
or
sub
scas
push
xor
adc
inc
les
shr
mov
mov
mov
push
out
leave
inc
rol
sub
or
ins
add
push
xchg
rcl
icebp
sub
mov
aam
cmps
pop
xchg
xchg
fcmovbe
ja
add
push
test
push
inc
push
and
push
outs
aad
inc
retf
dec
cmp
nop
rcr
jb
jo
jb
popf
dec
into
push
psraw
add
inc
pop
int3
adc
ret
push
rcr
ror
outs
jne
arpl
fadd
jns
mov
(bad)
dec
rol
or
and
ins
or
mov
pop
lahf
retf
add
jnp
sub
mov
add
push
mov
fnsave
adc
push
jo
or
mov
inc
jbe
test
add
or
jo
(bad)
pop
add
add
cmps
icebp
andps
jb
or
pushf
mov
xchg
pop
call
mov
xchg
xchg
daa
daa
enter
inc
adc
mov
test
out
shl
adc
arpl
add
xchg
pop
add
mov
mov
inc
push
add
sbb
arpl
or
add
inc
aaa
inc
(bad)
imul
add
icebp
inc
rcr
or
jae
lock
add
inc
rcr
pop
pop
sub
push
jnp
jnp
scas
aad
adc
sbb
pusha
add
add
nop
fwait
sbb
(bad)
jnp
cmp
adc
jg
adc
fldenv
sub
scas
cmps
scas
or
push
test
sub
das
addr16
add
or
cld
js
cmp
adc
ror
push
fdivr
fwait
mov
or
push
je
add
inc
ja
in
adc
xchg
sbb
and
cmp
and
ins
icebp
dec
inc
nop
or
xchg
inc
pop
or
push
inc
stc
pop
loope
mul
sbb
add
aaa
imul
ins
sub
movs
mov
outs
adc
dec
inc
mov
jb
push
dec
nop
jmp
movs
push
jo
push
add
ja
lods
mov
test
push
ins
jb
bound
mov
sub
pushf
jbe
push
outs
pop
adc
(bad)
bound
iret
add
add
ffreep
mov
adc
dec
xchg
sub
or
fwait
xchg
sub
or
or
sbb
jne
jnp
int
lea
popa
cdq
inc
dec
lds
mov
mov
sar
int3
int
push
xor
sbb
(bad)
scas
inc
adc
and
in
sbb
mov
mov
cmps
mov
sub
xchg
ja
cmp
pop
pop
das
mov
or
out
sahf
out
inc
dec
jl
mov
out
sahf
xchg
mov
loop
ds
into
add
nop
sub
out
(bad)
ja
out
or
ja
add
movs
dec
and
inc
stc
daa
es
add
push
loope
mov
(bad)
or
lea
sbb
ins
sahf
inc
cmps
adc
or
jb
pop
pop
arpl
push
or
sbb
adc
xchg
jmp
sbb
sub
adc
xor
xor
aaa
sbb
mov
ins
or
push
cmp
or
sbb
outs
inc
ret
mov
inc
push
adc
or
test
add
cmp
loope
mov
mov
dec
arpl
bound
mov
jge
add
or
adc
in
pusha
stc
imul
push
sbb
cmc
stos
add
setbe
mov
pusha
mov
dec
out
movs
hlt
push
mov
adc
in
add
cwde
popf
lods
(bad)
vunpckhps
add
dec
or
loope
push
or
shr
shr
das
add
fdiv
jb
add
out
dec
rcr
inc
or
je
imul
sbb
push
lahf
mov
add
add
pop
cmp
aam
or
in
out
xchg
rol
dec
mov
into
dec
ror
jle
dec
add
cmp
mov
or
sub
arpl
and
ins
inc
or
or
test
xchg
sub
xchg
or
fidiv
or
inc
fbstp
rcr
add
or
bound
pushf
into
mov
int
adc
inc
mov
or
inc
call
ins
adc
push
test
jo
in
push
arpl
push
stos
xlat
mov
add
pop
pop
ins
or
sbb
call
push
lods
das
ret
or
mov
fcom
mov
or
into
mov
aad
cmp
or
push
push
push
js
inc
int3
addr16
mov
sub
inc
jne
mov
add
jbe
jecxz
sub
adc
js
call
sub
scas
in
inc
jmp
sub
push
enter
dec
sbb
push
fsub
push
push
mov
adc
jne
jg
mov
outs
mov
add
rol
outs
mov
xchg
jo
in
add
sbb
xchg
aad
sub
sub
icebp
push
rol
and
xlat
pop
lods
imul
mov
add
dec
inc
mov
imul
sub
xchg
out
pop
and
xor
cs
ja
cmps
dec
push
mov
and
pop
aas
pop
mov
popa
push
inc
mov
jo
movs
fist
cmps
pop
pusha
das
enter
outs
push
fbld
mov
fistp
cdq
sbb
and
sbb
aas
enter
pop
inc
lahf
sbb
movs
mov
or
das
out
push
fist
jb
leave
(bad)
cld
adc
std
rol
nop
adc
call
sbb
imul
inc
test
adc
pop
or
jp
jg
mov
jns
adc
cmovne
popf
add
push
cmovb
add
mov
imul
jns
inc
nop
xchg
mov
xchg
fucomi
fadd
lods
pop
mov
and
clc
push
fsubr
cs
jp
lods
adc
cmp
cmp
fwait
rcr
mov
and
pop
add
pop
gs
sbb
pop
lds
mov
mov
lods
jmp
(bad)
push
in
test
or
out
push
mov
or
popa
(bad)
inc
jge
sbb
aaa
cmp
dec
out
(bad)
fadd
scas
add
mov
and
dec
in
push
movs
pop
push
and
sbb
push
ffree
iret
cmp
out
into
cwde
popa
jnp
iret
test
mov
adc
push
es
sbb
or
mul
pusha
jb
neg
out
lds
out
rol
(bad)
(bad)
pop
pop
leave
sub
xor
cmc
jge
shl
mov
push
aam
out
imul
mov
and
or
sbb
jbe
dec
repz
mov
push
js
jbe
sub
xor
mov
cmp
sbb
test
ss
cld
ds
push
(bad)
push
push
add
das
push
xor
cmp
fiadd
inc
inc
jb
jae
push
repnz
pop
adc
loope
inc
cmp
or
or
popa
ins
ins
inc
gs
jne
je
arpl
xor
dec
or
mov
xor
sti
data16
fs
mov
sbb
push
jo
ja
out
mov
cs
or
daa
or
sar
xchg
dec
and
popa
cmp
or
inc
dec
jbe
fxch
mov
pushf
gs
sub
inc
imul
fcomp
mov
cmp
rol
pusha
mov
daa
dec
outs
cmps
test
rcr
push
mov
mov
(bad)
push
inc
shl
add
(bad)
cmp
dec
int3
jp
or
(bad)
mov
scas
inc
ret
adc
jb
cmc
loop
ins
cmp
ins
mov
das
add
mov
push
cmp
add
(bad)
stc
xchg
or
cmp
sbb
inc
cli
cmps
movs
dec
shr
rol
movs
inc
sbb
mov
or
mov
jnp
loope
mov
jns
add
js
test
jne
jo
bswap
idiv
add
mov
iret
out
jl
sbb
pusha
outs
jbe
inc
cmp
or
push
pop
jne
inc
imul
xchg
lods
ja
push
scas
ret
clc
aam
push
sub
(bad)
jmp
jb
test
pop
mov
lods
sbb
adc
in
dec
jnp
or
or
ins
mov
pusha
mov
mov
xor
push
pop
mov
stos
xor
sbb
add
jo
lods
jmp
outs
inc
xchg
cdq
sbb
out
xlat
push
mov
pop
push
sub
sbb
dec
inc
es
sub
fimul
pop
les
push
cmp
mov
sbb
add
inc
dec
add
pushf
adc
jnp
je
test
out
jl
imul
push
xchg
jmp
xor
xchg
dec
pop
jns
imul
push
push
movs
dec
in
jae
pop
(bad)
push
dec
and
add
div
pop
push
sbb
movs
fucomp
sub
pop
jno
mov
mov
sub
je
sbb
cmp
or
popa
aaa
add
add
cld
jle
and
xor
jbe
cmp
or
inc
int3
add
and
out
jo
add
pushw
push
jns
push
adc
jecxz
mov
add
pop
mov
sub
push
fs
imul
and
xchg
pusha
add
inc
outs
jne
les
or
test
jb
sub
mov
xor
aam
jmp
push
xchg
xor
in
xor
cdq
sbb
ins
imul
sub
sar
scas
ret
push
add
or
ret
sar
mov
add
push
inc
jo
xchg
mov
push
aas
sub
scas
ret
push
xchg
jle
dec
push
cmps
adc
xor
inc
stc
sbb
inc
dec
xor
xor
fnstenv
movs
sub
(bad)
shl
xor
inc
aas
aas
pop
push
outs
cmovl
sub
push
out
dec
inc
sub
add
dec
test
inc
loope
mov
sbb
adc
call
pop
outs
push
aaa
aaa
dec
adc
call
and
(bad)
jae
sbb
or
and
jae
or
jbe
out
rcl
or
push
repz
outs
or
inc
jmp
inc
or
scas
mov
mov
fs
dec
bound
pop
xlat
(bad)
out
add
ror
push
add
pop
jo
inc
push
outs
xlat
outs
lock
and
dec
add
xor
xchg
inc
ret
cmp
ins
out
inc
push
scas
pop
ins
add
add
clc
das
push
mov
push
cmps
scas
xor
inc
mov
adc
inc
adc
into
push
add
sub
dec
popa
outs
fiadd
or
addr16
jl
mov
fild
pop
sbb
hlt
add
mov
je
fmul
and
inc
add
or
mov
int
test
movs
rcr
pop
lods
shl
fstp
jo
inc
ret
inc
imul
stos
add
test
sbb
cwde
push
stos
cmps
pop
int
push
push
sub
mov
fdivr
inc
push
and
rcl
scas
adc
mov
or
inc
retf
ins
add
(bad)
(bad)
add
mov
or
mov
push
push
inc
stos
cmp
xchg
sbb
rcl
fadd
shl
int3
push
adc
inc
scas
sub
sbb
cmp
pop
dec
arpl
inc
fs
push
add
sbb
sub
xchg
xor
shr
fwait
jge
adc
push
rcl
adc
sub
push
sub
add
cmp
and
mov
add
rol
aaa
in
xchg
(bad)
pop
add
into
mov
das
xchg
ret
clc
sbb
and
outs
lods
dec
out
dec
loopne
neg
in
addr16
or
xor
or
add
icebp
rol
mov
pop
outs
adc
sbb
sub
in
repz
std
nop
aad
sar
or
fsub
add
add
loope
mov
loopne
jecxz
jnp
push
js
push
inc
cs
push
jb
xor
mov
les
pop
fwait
xlat
cmp
sbb
lds
add
pushf
pushf
pushf
mov
dec
inc
sahf
adc
pop
xchg
fisub
daa
and
enter
xchg
xchg
daa
daa
fadd
leave
cmp
xchg
xchg
xchg
outs
mov
leave
leave
leave
inc
js
sbb
addr16
lock
cmps
push
mov
mov
xchg
fimul
push
fwait
pop
dec
(bad)
(bad)
add
in
xor
xor
mov
or
xchg
or
push
add
inc
cmp
jno
push
call
sbb
or
cmps
shl
dec
add
mov
aaa
dec
cmovns
cli
icebp
xchg
dec
jae
into
push
adc
inc
push
ss
lahf
bound
jg
dec
jg
add
and
outs
inc
inc
fs
mov
cmp
mov
adc
cmp
bound
test
ins
push
xor
retf
or
cmp
sub
fadd
outs
cdq
lea
xor
adc
mov
mov
inc
jae
push
pusha
jo
enter
xor
add
call
xchg
pop
cmp
xchg
adc
mov
fwait
dec
pop
jno
gs
push
xchg
ficom
xchg
test
inc
sub
rcl
test
dec
jae
(bad)
int3
or
imul
mov
sub
or
sti
ror
imul
jno
ffreep
adc
inc
jne
inc
imul
inc
movs
sbb
lea
cwde
push
mov
les
jmp
seta
push
dec
xor
add
fcom
imul
add
push
xchg
xchg
xor
pop
xor
test
or
and
dec
gs
and
arpl
inc
jae
fnclex
mov
das
and
xchg
inc
jne
xor
es
add
enter
inc
dec
cmps
xor
dec
aaa
inc
jle
call
call
sub
loopne
and
mov
mov
rcr
lock
or
daa
retf
add
adc
adc
outs
mov
ret
sbb
xor
cli
or
or
stos
jb
or
mov
dec
or
cmp
adc
and
popa
pop
xchg
or
adc
xchg
dec
div
outs
and
mov
push
jb
ins
test
xor
xchg
dec
pushf
mov
add
pop
mov
xlat
fst
mov
and
push
inc
retf
loop
adc
imul
les
sub
jno
mov
stos
mov
ds
(bad)
xchg
in
int
sbb
add
inc
sub
jae
mov
call
push
popaw
push
arpl
jmp
or
inc
outs
cmp
sbb
push
arpl
dec
retf
(bad)
bound
add
push
ret
add
xor
or
cmp
push
push
add
in
(bad)
jb
mov
xor
pusha
sub
dec
(bad)
or
adc
pop
cwde
lock
dec
xchg
add
xchg
mov
sbb
cmps
fsubrp
jbe
aaa
jae
outs
add
addr16
mov
xchg
push
inc
popa
in
adc
adc
fnsave
sub
push
or
adc
jne
fldcw
jo
pop
enter
mov
mov
cmps
push
inc
rol
add
imul
push
push
sbb
ret
test
xor
out
add
bound
add
add
adc
fwait
pop
xchg
das
mov
xchg
jo
and
(bad)
(bad)
daa
fld
ss
or
shl
and
test
cmps
daa
sub
adc
loope
sub
push
add
jecxz
shl
push
loopne
cmp
add
cmp
push
mov
xchg
sub
or
dec
shl
pop
push
inc
add
inc
xor
and
mov
or
std
or
push
pushf
fs
daa
or
pop
ja
enter
hlt
push
adc
test
and
push
aas
ds
lock
and
jno
rcl
test
xor
inc
pusha
sub
add
das
mov
or
adc
push
aas
add
adc
aam
sbb
jl
and
add
test
adc
inc
or
adc
cmp
adc
or
mov
icebp
nop
push
adc
push
daa
retf
add
xor
mov
add
jl
and
sub
rdmsr
pop
dec
mov
xchg
sbb
pop
loope
or
js
lods
pop
xor
add
sbb
jmp
int
stos
jg
sbb
ja
xlat
push
adc
push
or
fwait
pop
push
das
outs
push
push
sbb
push
loope
pop
ja
push
inc
mov
jbe
push
fisttp
rcl
loope
call
daa
(bad)
xlat
fdiv
adc
fmul
sub
xlat
mov
xor
xlat
mov
add
pop
(bad)
dec
inc
sub
sbb
xlat
pop
das
dec
add
sbb
jg
xchg
add
mov
or
es
das
pop
push
sub
loopne
les
(bad)
mov
fdiv
and
mov
push
add
call
iret
pop
or
sub
push
add
xor
pop
add
push
test
cmp
sbb
or
push
push
cmp
shl
add
or
rcl
and
mov
add
pop
mov
sar
jbe
adc
pusha
aaa
inc
push
lock
add
push
jnp
int
clc
es
das
aas
push
(bad)
lock
mov
shl
push
add
outs
sbb
mov
mov
and
add
cmps
sbb
jecxz
pop
loop
pop
prefetcht1
retf
mov
lods
push
add
call
je
imul
arpl
arpl
rcl
fisub
gs
add
fistp
sbb
cs
or
inc
aam
es
test
div
lods
or
pop
add
stc
sub
fsubr
pusha
add
pop
shr
push
mov
aaa
cmp
out
or
sbb
pop
(bad)
jno
xor
inc
cmp
sbb
jge
movs
shl
pop
lods
mov
inc
inc
data16
or
pop
sub
loope
das
inc
push
iret
cmp
loope
(bad)
scas
push
mov
cmps
push
(bad)
push
or
and
mov
daa
retf
in
jne
test
dec
pusha
xor
pop
(bad)
mov
mov
(bad)
push
out
pusha
stos
mov
sub
pop
scas
lea
sub
std
scas
ret
push
mov
aas
add
test
out
mov
push
fsub
or
add
push
adc
(bad)
lock
dec
pop
pop
mov
jmp
das
out
add
adc
push
inc
sbb
adc
xchg
mov
pop
ja
mov
mov
movs
lds
pop
xor
(bad)
nop
loop
jg
jno
mov
fs
sti
ret
adc
cmp
enter
or
adc
popa
sbb
aaa
(bad)
call
or
push
or
xor
jno
cmp
pusha
pop
push
test
adc
mov
je
ret
and
add
les
xchg
sub
out
inc
sbb
out
push
sbb
test
cmp
in
shr
cmp
pushf
out
test
add
es
retf
push
push
push
(bad)
add
je
add
arpl
xor
out
outs
push
sub
add
retf
pusha
and
pop
(bad)
push
jl
push
inc
(bad)
push
cwde
adc
adc
add
pop
push
lock
dec
jns
push
pop
add
push
mov
mov
inc
adc
push
fidiv
add
push
in
sub
adc
dec
movs
call
es
jmp
xchg
sbb
ja
pop
test
fisubr
push
push
rcr
sub
push
ret
pop
cmp
cwde
mov
imul
lods
shl
ret
fcomp
imul
adc
dec
mov
outs
sbb
sub
sub
push
jecxz
pop
sbb
or
dec
outs
dec
dec
sub
jp
xchg
and
cs
adc
lea
cmc
mov
mov
add
adc
test
inc
pop
push
(bad)
femms
jmp
loope
in
ror
jmp
inc
(bad)
mov
loop
in
push
pushf
pop
pusha
jno
aam
pusha
sahf
inc
xor
fisttp
pop
outs
scas
push
mov
mov
mov
iret
jb
mov
push
cmp
pusha
inc
sbb
aaa
jo
adc
dec
jno
inc
adc
iret
(bad)
aad
loope
jne
test
sbb
jno
xchg
lock
dec
add
xchg
jns
inc
add
cmp
das
pop
and
fldenv
sbb
add
cmp
or
sbb
js
rcr
loope
dec
fs
cmp
or
or
add
push
dec
jo
dec
xor
nop
data16
push
mov
xor
add
inc
or
cs
retf
or
mov
movs
repz
test
test
popf
loopne
clc
adc
add
into
push
js
xor
sub
sub
iret
or
(bad)
arpl
push
push
inc
and
pusha
add
aas
mov
xor
sub
xor
mov
dec
jb
xchg
mov
xor
test
cmp
ret
add
xor
xor
bound
loopne
stc
and
inc
adc
loopne
data16
sbb
out
out
outs
push
add
stos
cmp
pusha
add
cmp
sub
pusha
xchg
aaa
lds
dec
xor
push
xor
fdivr
or
xchg
add
xor
test
(bad)
pop
pop
ret
and
jmp
jg
xchg
pop
daa
push
lods
out
jg
or
retf
add
sub
adc
adc
push
adc
adc
push
loop
stos
adc
cmps
fcomp
js
fisubr
add
jae
clc
and
cmp
adc
bound
pop
inc
or
cmps
inc
dec
or
leave
and
mov
xor
adc
pop
pusha
push
test
popa
adc
mov
int3
and
scas
sub
scas
jo
mov
push
add
shl
push
inc
popa
clc
mov
adc
arpl
jnp
gs
pushf
clc
rdpmc
ss
pop
stc
adc
jmp
mov
mov
push
daa
not
cmps
std
dec
sub
adc
stos
add
dec
inc
sbb
pop
cmc
sbb
jne
or
fld
dec
adc
cwde
inc
inc
repnz
cmp
sub
das
pushw
pop
jno
lahf
jne
pusha
aas
or
xchg
loop
hlt
fmul
daa
add
loope
inc
mov
js
xor
in
lahf
fcom
sbb
mov
pop
adc
sub
jg
mov
pop
push
xor
or
sub
sub
dec
scas
jg
test
sub
add
and
mov
add
mov
or
mov
imul
fs
pop
add
pop
push
pop
add
lock
push
hlt
scas
inc
daa
repz
add
mov
mov
dec
test
mov
jns
and
and
or
and
push
add
push
aas
sar
cmp
js
cmc
sti
inc
mov
mov
sar
or
push
dec
or
and
push
pop
push
push
add
inc
loopne
adc
(bad)
fld
aaa
xchg
push
syscall
inc
jno
stos
cmps
mov
lds
and
enter
or
loopne
in
pop
lock
inc
mov
xchg
cmps
nop
add
stos
inc
idiv
scas
sbb
mov
add
push
pop
jo
xchg
addr16
cld
test
push
or
mov
inc
mov
daa
lea
loopne
lahf
mov
cmp
fdiv
dec
lahf
mov
pop
xor
pusha
retf
dec
inc
sub
pop
das
dec
add
movs
jg
jne
js
aas
xor
fbstp
cli
inc
fucomp
sub
imul
adc
cmp
fbstp
lock
scas
pusha
sub
push
add
mov
push
fst
sbb
addr16
call
inc
add
test
push
or
fldcw
and
push
and
adc
add
rol
xor
push
scas
out
shl
inc
jno
imul
jnp
loopne
cld
or
pop
das
ja
add
jecxz
mov
icebp
aad
inc
hlt
ror
inc
and
out
aaa
sub
fcomp
cli
push
fbld
inc
or
mov
xchg
xchg
cld
xor
pop
shr
push
mov
sahf
mov
push
stc
and
mov
xor
pop
xchg
retf
and
add
aam
fsubrp
add
inc
in
inc
add
mov
and
inc
movs
and
add
add
imul
mov
adc
pop
test
popa
adc
(bad)
pop
ja
pop
loope
ins
sub
imul
or
pop
rcr
aaa
addr16
mov
push
adc
jno
cmp
add
mov
push
in
ja
enter
bound
push
xchg
movs
push
push
test
cmp
dec
push
fs
cmps
xchg
push
xor
add
add
lods
ja
rol
dec
imul
adc
ror
push
xor
dec
mov
rol
outs
ins
add
sbb
mov
or
jl
fsubr
mov
push
test
mov
retf
push
xchg
mov
sub
mov
enter
ins
rcr
add
adc
sub
dec
sub
xor
and
rol
aam
mov
scas
imul
and
arpl
mov
mov
repnz
push
sbb
div
test
push
fcom
sahf
xchg
clc
test
outs
add
mov
clc
int3
fs
out
push
out
push
test
test
push
xlat
mov
aam
push
mov
je
jnp
or
push
call
nop
test
iret
not
sub
aad
shl
stos
xor
mov
shr
pop
mov
add
test
add
add
das
test
xchg
pop
scas
mul
push
aam
pop
dec
sbb
and
outs
jnp
inc
mov
or
lock
movs
enter
rcr
xor
push
add
jns
xchg
add
push
lds
(bad)
in
daa
push
sub
mov
push
scas
pop
add
add
sti
push
xchg
pop
das
das
or
(bad)
call
cli
neg
mov
push
xchg
push
xlat
ret
jmp
or
inc
xlat
xor
mov
imul
enter
xchg
mov
add
loope
cmp
dec
adc
push
leave
xlat
push
push
pop
mov
sbb
lods
mov
in
mov
push
scas
adc
cmovbe
scas
fcomp
or
xor
fcomp
outs
jo
cmp
or
aam
cpuid
cmp
cmp
jb
xor
xchg
and
sbb
jno
xchg
xchg
ficom
in
mov
mov
xchg
xchg
add
add
fiadd
and
pop
xchg
jae
sbb
sbb
fistp
xchg
out
inc
mov
shr
inc
and
pop
adc
repz
sbb
dec
xchg
fdiv
xchg
mov
pop
mov
push
sub
push
and
xchg
pop
xchg
and
and
pop
mov
mov
push
inc
inc
xchg
jae
inc
and
out
or
les
add
(bad)
aad
ret
push
lds
or
xor
xchg
add
mov
popa
adc
xchg
xchg
adc
cmp
adc
sbb
adc
or
pop
jo
(bad)
mov
push
adc
push
loope
and
(bad)
aas
add
add
push
xor
cmp
push
or
daa
call
add
nop
xchg
movs
push
push
inc
test
and
pushf
push
add
aam
xor
inc
dec
ja
mov
push
in
ds
add
jle
add
push
push
and
xlat
jecxz
fadd
add
sub
sub
cdq
fiadd
add
cmp
fwait
adc
and
lahf
pop
push
jns
push
inc
inc
popa
jnp
xchg
pop
pop
adc
xor
push
fadd
or
inc
imul
pop
loop
mov
inc
fstp
add
fisttp
ror
mov
cmp
outs
add
sbb
fidivr
or
inc
jne
add
pop
(bad)
adc
pop
mov
and
jb
scas
and
mov
mov
das
retf
pop
mov
pop
mov
jno
mov
add
sbb
sbb
xor
add
and
lds
cmp
sbb
pop
(bad)
test
add
inc
adc
cmp
push
adc
fwait
pop
dec
das
pushw
pop
sbb
jle
outs
cmps
nop
push
xor
daa
push
(bad)
aam
ret
mov
scas
bound
daa
out
mov
cmp
out
sub
jg
ret
pop
xor
xchg
sahf
xchg
dec
inc
sub
adc
test
stos
sub
add
mov
push
mov
pop
fstp
and
pop
gs
or
cmp
out
movs
add
jmp
xchg
daa
pop
imul
dec
adc
cmps
inc
pop
repz
mov
ret
jg
add
(bad)
dec
inc
jno
and
push
rol
stc
add
pop
add
adc
ret
add
lds
cmp
popaw
jne
je
and
(bad)
es
push
and
adc
push
out
add
mov
cmps
leave
xor
rol
scas
rcr
pushf
jmp
add
add
pop
push
pop
mov
adc
push
add
and
inc
xchg
out
hlt
rol
cmp
fdiv
push
xor
pop
xor
mov
imul
mov
pusha
add
jnp
and
ret
and
add
pushf
xor
frstor
cmp
jmp
mov
mov
xor
ds
test
ror
add
xchg
and
add
and
sub
fdiv
loopne
adc
pop
or
dec
dec
aad
and
out
push
inc
loop
jb
xchg
jecxz
inc
xor
sbb
push
push
xchg
cmp
and
popa
jmp
pop
mov
push
jg
push
add
cmp
add
dec
add
jmp
rcl
xlat
pop
jno
cmp
jo
pop
loopne
call
cmp
push
and
js
add
imul
es
inc
xor
adc
adc
clc
mov
clc
push
push
add
push
lea
add
je
and
idiv
scas
push
add
adc
jl
aam
cmp
sub
fcomp
out
or
add
add
lahf
sbb
or
loopne
addr16
xchg
retf
arpl
rol
push
std
out
fiadd
add
push
push
loopne
or
sti
or
or
imul
mov
idiv
test
out
pop
stos
push
pop
push
inc
dec
ret
mov
mov
or
or
in
idiv
xor
retf
xor
pusha
test
mov
rcl
xchg
retf
and
add
(bad)
lock
mov
jge
mov
adc
sbb
inc
inc
ins
ret
cmp
xchg
rol
adc
add
jbe
mov
push
punpckldq
inc
mov
ins
and
and
pusha
jns
xor
push
pop
movs
push
shl
int
sbb
mov
inc
fmul
mov
or
fwait
sbb
das
mov
jg
ds
cmp
push
sbb
fadd
sub
and
(bad)
adc
mov
stc
daa
mov
popa
pusha
push
popa
out
call
imul
cmps
out
pusha
dec
mov
inc
sub
pop
mov
lods
pop
mov
add
je
and
sbb
dec
das
arpl
adc
(bad)
lock
hlt
and
adc
adc
push
add
add
adc
ror
mov
iret
jae
jp
push
or
jnp
stos
jmp
sar
ret
ret
mov
pop
imul
adc
cmps
jmp
daa
mov
push
adc
dec
mov
das
arpl
jbe
dec
and
push
mov
imul
push
mov
ja
fadd
dec
scas
fsubr
push
out
push
mov
popa
xchg
push
or
or
jmp
(bad)
call
mov
push
mov
or
sar
ror
rcl
or
cmp
shr
inc
mov
addr16
adc
int
jnp
addr16
test
sbb
es
in
les
daa
push
push
sub
lods
pop
addr16
or
mov
jmp
add
mov
call
out
sbb
xchg
and
xlat
push
clc
shr
gs
push
enter
and
pop
arpl
iret
cmc
lock
jl
pop
push
fdivr
outs
inc
sub
data16
fwait
push
push
pop
jmp
inc
push
fdiv
push
xor
clc
div
shl
push
add
push
push
ins
push
cmpxchg
mov
cmp
adc
ror
push
mov
loopne
or
xlat
sbb
outs
and
imul
and
xchg
sahf
sub
sub
xor
fs
xor
ror
(bad)
rcr
pushf
loop
push
(bad)
xor
xlat
jmp
inc
sub
test
enter
inc
(bad)
mov
into
dec
mov
scas
mov
inc
sahf
fmul
out
sub
jns
and
ror
inc
jge
outs
(bad)
scas
pop
fmul
jp
mov
push
cmp
(bad)
add
sbb
aad
rol
pusha
or
jo
mov
or
jno
dec
sub
jecxz
and
pop
xchg
sar
mov
call
lahf
jmp
or
loop
jmp
add
div
add
fs
loope
xchg
pusha
add
js
add
and
push
mov
fnstcw
xor
sub
inc
repz
fild
dec
xor
gs
mov
(bad)
jo
ret
and
add
rol
mov
iret
or
imul
inc
test
jns
push
or
loopne
mov
sbb
pop
dec
lea
punpckldq
xchg
out
cmp
sbb
loopne
or
sbb
dec
pop
mov
sbb
or
outs
xchg
xor
pop
sub
out
out
fsubr
sbb
in
imul
and
in
sub
and
mov
lds
loopne
pop
xor
pop
pop
enter
push
add
push
xor
xchg
addr16
push
adc
pop
scas
pop
adc
adc
out
fiadd
(bad)
icebp
shl
adc
or
inc
push
ja
adc
int3
sbb
dec
lods
inc
sbb
push
sbb
aas
add
jae
loope
jge
cmp
push
add
mov
inc
or
aaa
adc
sub
pop
dec
sbb
xor
add
mov
add
add
(bad)
es
in
add
or
push
pop
and
add
push
xor
inc
xor
ja
jae
imul
pop
test
stos
ror
pop
adc
add
call
add
inc
push
jecxz
pop
out
fisub
movs
sbb
cdq
pop
sub
mov
(bad)
push
pusha
cdq
adc
inc
xor
outs
inc
test
pop
lahf
pop
jg
add
xchg
inc
jae
sbb
and
aaa
dec
inc
icebp
lods
add
sahf
ins
fs
outs
xor
out
sbb
adc
outs
adc
sbb
dec
xchg
sbb
or
adc
popf
dec
xlat
push
inc
jnp
xor
adc
movs
(bad)
dec
arpl
sbb
test
jae
sbb
les
mov
lock
fs
lahf
ffree
lods
inc
pop
ret
mov
jns
add
sub
jo
inc
dec
in
jge
adc
ss
scas
pop
std
add
pop
fdivr
xchg
jbe
cmc
add
popw
jbe
lock
add
xor
vcomisd
push
daa
cmp
mov
mov
jno
cmp
push
aaa
mov
jo
dec
popa
dec
mov
imul
ret
mov
stos
inc
push
mov
cmps
mov
loope
push
xor
rcl
sbb
shr
xchg
mov
add
push
sahf
ja
mov
inc
sbb
pop
aaa
in
push
div
xchg
adc
add
fcmovb
or
jae
pop
fs
and
aaa
pop
mov
add
(bad)
adc
add
pop
pop
and
loopne
or
aas
sub
or
das
out
fisub
sar
cmps
nop
dec
push
jg
push
aam
push
jge
add
in
xor
adc
mov
int
into
and
and
push
jg
mov
sbb
cmp
push
pusha
jae
add
xor
push
mov
inc
push
scas
pop
mov
mov
movs
cmp
test
fldcw
out
push
pop
push
or
push
xchg
retf
dec
mov
fs
and
inc
jo
cmp
inc
push
lds
fdiv
stc
dec
rol
mov
xor
mov
(bad)
ja
retf
mov
je
pusha
test
sbb
xchg
inc
mov
xchg
daa
cmp
cdq
and
mov
fstp
loopne
push
lods
es
repz
(bad)
loope
adc
mov
push
pop
add
mov
cld
pop
into
push
ja
pop
inc
clc
aaa
push
sbb
jo
imul
adc
cmp
(bad)
pop
sub
pushf
pusha
sub
cmp
adc
fiadd
lahf
dec
inc
mov
sub
add
or
ret
cmps
arpl
push
xor
sbb
sub
push
adc
sbb
xchg
or
call
into
in
ss
pop
sub
cmp
push
bound
(bad)
xchg
sub
imul
fld
sub
push
mov
(bad)
pop
add
adc
pop
lods
(bad)
out
(bad)
aad
sbb
push
sbb
jo
push
add
ins
ds
je
xchg
and
lds
(bad)
pusha
test
push
jno
out
mov
cmp
xchg
push
lahf
adc
cmp
xor
pop
inc
and
daa
stos
stos
inc
pop
mov
test
shr
neg
inc
pop
xor
pop
dec
xchg
sbb
inc
add
ins
adc
sub
xchg
arpl
cld
inc
add
loope
ror
cld
inc
push
xor
mov
sub
test
mov
scas
in
clc
push
add
dec
les
push
mov
imul
adc
mov
add
push
add
mov
aad
cmps
loopne
loope
inc
shl
popa
mov
test
xor
cld
xor
sbb
(bad)
or
inc
loopne
iret
test
es
loopne
cmp
adc
(bad)
(bad)
icebp
cmp
mov
mov
xor
sbb
mov
cmp
cmp
jg
cwde
je
or
push
nop
retf
dec
repz
sbb
push
mov
inc
fcmovnb
xlat
arpl
sbb
ret
push
or
mov
neg
mov
inc
inc
ja
inc
push
dec
es
xchg
out
(bad)
push
xchg
ja
aam
add
mov
enter
jno
add
xor
xchg
jmp
adc
not
test
outs
add
inc
jbe
adc
jns
and
mov
ja
mov
mov
jl
je
mov
pop
aaa
sti
push
ficom
repnz
push
xor
iret
push
sbb
pop
or
cwde
movs
pop
dec
mov
adc
out
add
shl
sbb
xor
inc
push
and
mov
test
adc
aam
push
and
shl
or
in
inc
movq
add
xor
jns
mov
mov
push
leave
enter
les
add
add
sub
call
adc
adc
mov
lea
sub
test
jno
adc
pop
test
and
push
inc
pop
jecxz
ror
pop
or
mov
popa
aam
pop
gs
dec
or
pop
daa
push
ret
sub
loopne
pop
inc
jo
call
inc
pop
or
shl
ins
repz
adc
mov
fadd
js
pop
mov
add
pop
adc
pop
test
pop
and
pop
test
cmp
and
pop
mov
push
sbb
out
add
xchg
je
or
sub
inc
lea
arpl
push
xor
or
loope
xlat
add
test
add
pop
xor
and
mov
cmp
and
add
and
mov
and
(bad)
pop
add
add
daa
pop
jl
adc
jno
daa
push
ret
mov
dec
adc
pushf
dec
fs
test
and
loop
sub
adc
fld
add
loopne
test
popf
aam
jmp
adc
inc
cmps
adc
adc
(bad)
jno
cwde
enter
sub
mov
sbb
cdq
push
cmps
pop
push
push
add
pop
pop
add
shl
adc
push
ret
mov
addr16
cmc
jne
pop
ror
addr16
sbb
arpl
mov
test
ja
adc
and
adc
mov
add
scas
inc
jo
dec
imul
dec
adc
push
lods
and
adc
mov
mov
fiadd
push
out
push
pop
mov
xchg
outs
sub
mov
ds
push
(bad)
adc
lods
jo
inc
mov
adc
scas
pop
std
pop
adc
ret
pop
push
add
cmc
cmp
pushf
add
push
fsubr
mov
and
ds
jo
mov
scas
jno
jo
leave
nop
xchg
push
aas
in
aad
shl
push
cdq
call
daa
sti
jnp
mov
loopne
scas
dec
sub
ret
xchg
pop
jo
cmp
jo
jnp
scas
les
sub
add
add
or
maskmovq
mul
push
inc
ja
lock
adc
push
add
inc
inc
pop
rcl
inc
jae
push
dec
xor
sbb
sub
mov
(bad)
sti
(bad)
and
aas
pop
ror
ret
aad
add
bound
sbb
sbb
and
xchg
(bad)
arpl
fld
and
xchg
or
in
push
cmp
push
sbb
hlt
es
pop
cmp
test
(bad)
(bad)
xchg
pop
rcr
jo
add
in
push
loop
and
call
inc
ror
sti
jo
jp
mov
adc
ss
jmp
dec
or
mov
je
jns
add
adc
add
mov
mov
pop
ror
sbb
mov
mov
xor
pop
loope
pop
cld
es
push
imul
sub
(bad)
addr16
mov
and
shl
clc
pmovmskb
cs
xchg
fdivr
int
test
cli
push
fisttp
fild
inc
(bad)
loopne
ds
add
add
pusha
push
push
mov
or
cmp
lock
sub
(bad)
inc
rol
sub
ja
mov
clc
ja
push
cmp
mov
ja
enter
mov
add
adc
fcomp
sub
xor
lods
inc
jecxz
add
adc
(bad)
pop
daa
pop
mov
mov
or
xchg
iret
bound
xchg
push
add
inc
add
add
xchg
inc
jmp
mov
pop
lods
stos
pusha
std
outs
dec
pop
pop
sub
inc
jne
jg
push
in
push
fcomp
mov
sub
scas
mov
jg
push
jne
cmps
movs
mov
push
mov
inc
mov
adc
adc
mov
and
dec
adc
pop
adc
push
push
push
adc
jbe
ret
adc
sub
inc
nop
or
mov
cmp
inc
(bad)
js
aas
sbb
ret
and
das
(bad)
push
push
sub
or
mov
out
or
pop
push
add
mov
or
push
push
inc
adc
sub
sbb
adc
jl
or
push
xlat
pusha
jns
push
pop
jae
xchg
lds
arpl
pop
add
test
pop
pusha
in
xor
add
cmp
popa
into
es
rol
icebp
mov
enter
jne
fwait
xor
stc
scas
(bad)
or
pop
pop
push
pusha
dec
jne
pop
mov
test
or
mov
inc
sbb
loop
push
mov
je
adc
or
scas
rcl
dec
movups
sub
xchg
gs
and
sti
mov
dec
bound
js
test
les
in
mov
int3
arpl
int3
es
das
adc
adc
jge
pop
jg
xlat
push
scas
xchg
fcomp
in
xchg
out
push
aaa
arpl
(bad)
sahf
push
xchg
dec
adc
mov
aaa
shl
enter
and
jns
sbb
pop
jae
retf
popa
aas
pop
movs
push
jne
push
imul
xchg
int3
push
add
mov
lock
push
mov
add
cmp
setge
cmp
loop
mov
sub
jmp
push
push
(bad)
ret
push
in
inc
jp
(bad)
inc
inc
fsubr
and
add
enter
aam
cmp
psrad
or
movq
ja
wbinvd
cmp
daa
and
fmul
ins
mov
mov
leave
mov
shl
in
iret
or
mov
pop
push
push
test
mov
push
and
inc
and
in
adc
or
pop
or
jbe
jecxz
jecxz
xchg
lock
xchg
adc
pop
mov
or
mov
dec
sbb
dec
sbb
or
cmp
push
fwait
adc
adc
adc
test
xchg
push
mov
and
sub
movs
adc
int
repz
adc
adc
adc
adc
xchg
adc
and
adc
adc
add
adc
add
js
rol
imul
(bad)
fldcw
popa
les
ss
or
or
std
loope
xor
test
test
into
pop
xor
and
and
(bad)
imul
and
mov
or
and
xchg
lock
adc
add
push
js
sbb
cwde
cmp
adc
test
adc
mov
inc
mov
ss
retf
iret
sbb
clc
push
arpl
push
fcom
dec
jle
lea
loop
test
mov
ins
jbe
add
cld
das
or
(bad)
aam
cs
out
jmp
sub
push
or
xchg
sub
cmp
mov
gs
pop
aad
stos
dec
push
sub
es
jmp
add
pusha
outs
xlat
dec
outs
push
or
fwait
pop
push
mov
jbe
pushf
push
sbb
ret
jmp
sbb
je
and
rcl
ret
rcl
dec
xor
jo
sbb
dec
push
push
scas
adc
pop
xor
cmp
adc
add
ror
adc
pop
scas
lea
sub
scas
mov
mov
dec
imul
repnz
push
(bad)
in
push
add
jo
nop
int
adc
test
sub
sbb
out
or
pusha
popaw
jne
je
mov
or
mov
and
add
and
mov
add
push
sahf
pop
jno
jo
sbb
add
inc
test
sbb
call
aad
data16
mov
hlt
pushf
add
jb
and
and
adc
mov
mov
add
xor
push
repnz
ret
adc
push
dec
add
adc
int3
loopne
or
mov
jecxz
out
test
dec
movs
push
jp
dec
das
and
int3
jmp
in
pop
shr
jnp
sbb
int
cmc
ins
outs
lods
shl
pop
shl
mov
mov
imul
and
push
scas
add
mov
inc
add
xchg
cmp
push
dec
push
addr16
fwait
sub
push
mov
mov
push
inc
enter
sbb
stos
inc
arpl
retf
inc
test
push
sti
shl
mov
push
and
push
inc
imul
push
and
add
lahf
hlt
xlat
jno
call
xor
inc
xlat
ret
ja
fwait
cmp
ret
fsub
clc
push
or
lock
inc
aaa
sbb
xor
and
or
rcr
ror
inc
cmp
jno
arpl
stos
mov
inc
push
and
popa
or
inc
fcomp
js
add
sbb
in
in
sbb
into
inc
push
mov
pop
jns
and
adc
cmp
mov
fist
push
xchg
rol
test
xchg
mov
cmp
sub
push
pushf
xchg
imul
dec
cli
sub
mov
loopne
add
add
jmp
arpl
pushf
(bad)
mov
std
push
dec
xchg
jp
inc
cs
leave
lods
(bad)
push
fld
repnz
fs
mov
jb
xor
cmp
cmp
arpl
sahf
pushf
mov
jg
dec
dec
dec
dec
imul
dec
and
xchg
daa
daa
cmc
sub
jne
dec
pushf
xchg
sar
shr
cmp
fwait
push
jl
push
xor
cmp
daa
shl
test
test
mov
aas
dec
sub
xor
lea
sbb
xor
shl
sbb
daa
xor
jbe
arpl
mov
inc
rcl
jecxz
dec
pop
bt
addr16
adc
add
push
popa
jg
fisub
dec
jg
cmps
into
xor
(bad)
(bad)
repz
retf
and
adc
push
xor
pop
or
xor
push
push
in
xchg
stc
out
das
or
cmp
outs
or
call
add
adc
js
sbb
test
test
movs
enter
add
sub
or
ins
jb
pop
inc
out
xchg
rcl
or
in
dec
xchg
and
das
leave
fwait
jg
add
popa
arpl
push
inc
pop
xor
or
(bad)
pop
dec
jae
add
adc
dec
imul
loope
mov
stos
cmp
inc
inc
imul
add
sub
lea
and
add
shl
imul
xchg
push
loopne
adc
or
sbb
gs
push
xchg
loop
jb
mov
rol
sbb
add
jmp
mov
dec
push
inc
add
shr
rol
(bad)
or
je
sbb
cs
dec
or
ja
(bad)
push
lock
pop
stos
je
sub
out
adc
popa
pop
and
add
lds
add
and
inc
xchg
jae
and
ss
pop
cmp
loope
popw
jp
inc
and
into
imul
sub
sbb
adc
add
retf
sbb
fidiv
sub
pusha
jge
pop
or
mov
pop
add
jns
xor
adc
(bad)
push
dec
(bad)
and
mov
les
or
pop
xchg
dec
movs
or
xor
or
shr
push
inc
leave
sub
sbb
add
cmp
sub
out
or
jo
inc
loope
adc
jecxz
jns
and
mov
mov
imul
jb
addr16
or
mov
cmp
add
sbb
pushf
pop
mov
xor
sahf
mov
and
jmp
inc
add
dec
popa
shl
inc
jmp
jae
inc
ret
rcl
add
cmp
sub
cmp
in
inc
jne
pushf
and
addr16
sub
dec
xchg
sub
retf
adc
rol
mov
test
test
mov
outs
pusha
lea
shl
xchg
or
repnz
fwait
es
rcl
outs
pop
lea
or
mov
xchg
push
mov
push
add
jne
daa
hlt
outs
mov
xchg
aam
pop
cld
das
sbb
cmps
lods
xor
lahf
fsubr
xlat
loope
fs
mov
push
lds
xor
or
xlat
sbb
mov
imul
push
mov
dec
ror
pop
push
add
add
clc
cmp
dec
inc
sub
inc
jg
mov
and
jmp
jae
xchg
xor
adc
xchg
add
xor
sub
(bad)
rol
call
rcl
jmp
scas
add
pusha
ror
dec
add
ds
es
push
cmp
add
add
mov
mov
xor
jg
mov
inc
das
pop
or
lds
out
or
xchg
test
mov
push
or
or
add
jno
add
fst
pusha
add
jg
adc
add
sbb
jg
inc
mov
pop
fnsave
repz
mov
das
stos
or
retf
dec
inc
or
cmps
mov
push
dec
aaa
push
mov
add
neg
xor
push
pop
xchg
popf
push
sbb
pop
lds
aam
cdq
add
dec
aaa
rcr
mov
jno
ror
int
es
nop
pop
pop
(bad)
lods
fwait
movs
clc
ins
xor
and
pop
call
test
add
fucom
xchg
retf
ret
jno
mov
or
(bad)
sub
test
add
mov
push
mov
or
and
(bad)
aam
out
pushf
push
pop
adc
mov
or
pop
xor
mov
mov
add
or
pop
test
inc
or
add
and
xor
test
pop
sete
jl
out
adc
xchg
xchg
pop
(bad)
mov
pandn
leave
leave
enter
fwait
in
in
in
xchg
and
nop
fstp
cmp
jns
xchg
pop
cmps
out
pushf
pushf
mov
xchg
aaa
pop
add
pushf
mov
dec
dec
dec
dec
popf
sar
cwde
mov
vmptrld
div
fimul
push
add
adc
xlat
in
mov
cmps
push
cmp
xor
add
lock
bound
out
inc
xor
mov
xor
or
inc
(bad)
and
or
out
inc
sub
add
sti
out
ins
inc
inc
es
imul
cdq
xor
push
mov
add
adc
add
and
jae
nop
test
jne
add
adc
xchg
test
add
or
inc
rol
das
out
and
mov
fwait
mov
pop
and
sub
mov
sub
dec
je
iret
add
pop
mov
jno
call
inc
add
sub
out
and
add
and
add
pusha
adc
or
fcmovnu
jae
mov
and
adc
add
xchg
mov
and
adc
adc
xor
(bad)
and
push
in
lods
inc
xchg
inc
add
ss
xchg
adc
stos
mov
nop
test
dec
xchg
fild
mov
inc
inc
rcl
add
xor
and
and
rol
jns
mov
movs
pusha
xchg
dec
jecxz
dec
inc
xchg
or
or
mov
adc
packsswb
lea
adc
sbb
or
or
imul
mov
jns
add
inc
push
loop
pop
cmp
adc
lods
inc
outs
mov
jp
sub
mov
outs
and
sbb
outs
pop
imul
outs
and
push
inc
rol
and
add
mov
jbe
sub
mov
adc
mov
push
dec
add
pop
pop
punpckhdq
sub
jne
leave
pop
ror
mov
sub
mov
push
jae
mov
shl
or
mov
addr16
mov
pop
movs
push
mov
adc
out
add
sbb
add
mov
das
retf
or
jne
or
xor
(bad)
test
dec
push
dec
(bad)
loope
pop
or
lea
sub
daa
mov
ret
rcl
and
test
dec
pop
add
pusha
pop
mov
dec
dec
test
out
inc
sub
inc
and
inc
sub
scas
adc
ret
push
in
sbb
adc
ja
call
push
lods
aaa
add
sub
xlat
add
(bad)
or
push
mov
lea
adc
inc
or
adc
adc
pusha
pop
cmp
xadd
repz
lahf
or
inc
cmp
inc
in
shr
shr
push
mov
push
push
fsubp
push
add
sub
loopne
mov
into
aaa
dec
arpl
add
sbb
imul
push
pop
mov
fnstenv
or
mov
int
or
xor
mov
sbb
mov
add
push
mov
retf
adc
or
das
mov
sub
jp
and
dec
push
add
in
add
scas
sbb
es
push
add
outs
inc
cld
test
jl
push
sbb
cmps
mov
push
add
sub
pop
ja
add
pusha
(bad)
rcl
out
adc
push
pop
sbb
(bad)
dec
cmp
xchg
rol
push
jecxz
inc
pop
push
adc
push
shr
pop
das
jl
popa
adc
mov
and
pop
fcom
addr16
sbb
push
inc
movs
das
xchg
cmps
or
push
add
dec
mov
xor
cmps
cld
test
add
push
push
cmp
inc
ret
cmp
xor
inc
add
lods
imul
lods
sub
or
mov
pop
mov
jp
in
sbb
loopne
pop
jle
push
mov
or
dec
mov
xchg
daa
daa
daa
movs
loopne
test
outs
mov
leave
leave
leave
arpl
in
fs
xor
shl
cmp
jns
lods
inc
js
pushf
mov
jmp
scas
dec
xor
scas
push
inc
rcr
push
push
in
adc
punpckhdq
mov
loopne
adc
adc
dec
cmp
mov
dec
adc
push
pop
or
adc
les
jno
dec
sbb
xchg
push
xchg
ja
inc
adc
dec
mov
fist
add
loope
ins
push
dec
pushf
es
sub
(bad)
retf
inc
add
adc
jae
and
add
and
xchg
or
cmp
adc
loopne
sub
sub
inc
add
adc
adc
mov
or
mov
rcl
adc
adc
and
jno
popa
add
dec
inc
inc
adc
xor
add
and
jae
or
adc
add
jae
add
xor
or
adc
xchg
add
add
lods
add
xor
fist
add
pusha
rol
inc
shl
cmp
adc
adc
mov
adc
imul
ror
mov
or
jge
and
push
adc
inc
add
nop
(bad)
adc
adc
or
adc
xchg
dec
or
mov
arpl
or
jo
mov
or
inc
movs
(bad)
sbb
fadd
adc
xchg
adc
rcl
imul
les
xor
pop
outs
and
icebp
fnstcw
lods
rcl
inc
inc
rcl
adc
add
or
scas
xor
inc
cmp
or
and
sub
sbb
or
ss
mov
add
aas
iret
call
ins
into
imul
inc
inc
ins
ds
mov
mov
mov
jo
xlat
pop
xor
sub
or
rcl
mov
push
pop
dec
cmovle
xor
xor
pusha
adc
xor
pop
jb
addr16
and
loopne
das
add
addr16
mov
jne
ins
mov
jge
inc
jp
fild
cmp
cmp
jbe
idiv
add
jne
je
outs
add
push
or
pop
adc
or
js
add
pop
add
imul
int3
fmul
xor
mov
xor
(bad)
ss
jp
dec
data16
in
cmp
jecxz
push
enter
cmp
pop
mov
push
ds
push
xor
cwde
cdq
adc
jp
mov
xchg
int3
or
daa
mov
xor
add
adc
and
xor
mov
xchg
(bad)
sbb
mov
mov
and
inc
mov
xor
xchg
dec
sub
stos
xor
das
push
dec
cmps
add
mov
ja
jae
add
xor
jo
xchg
aas
dec
or
loopne
mov
or
or
jnp
ja
or
daa
xor
and
sub
pop
xor
cmp
dec
xor
xor
add
sbb
out
or
adc
or
xor
mov
xchg
outs
xchg
loope
xchg
aas
sub
add
addr16
jmp
dec
add
cmp
adc
fcmovne
mul
add
outs
sub
or
add
mov
out
xchg
cmps
mov
in
xor
pop
cmp
inc
data16
cmps
ss
enter
inc
xchg
add
xchg
fdiv
rol
sbb
je
cmp
out
dec
punpckhbw
mov
call
mov
mov
add
mov
xor
arpl
fs
adc
rcr
movs
inc
mov
pop
addr16
into
cmps
pop
es
int3
rol
pop
jmp
jl
ret
mov
push
repz
mov
jmp
mov
call
jmp
imul
cmp
je
mov
jmp
and
adc
fistp
mov
dec
inc
or
inc
inc
sub
fld
popf
outs
pop
adc
add
ret
fdivrp
sti
in
dec
mov
push
or
mov
dec
push
push
std
mov
mov
mov
mov
sbb
push
or
(bad)
ja
fstp
movzx
adc
pop
pop
inc
adc
pop
outs
pop
pop
fidiv
rcl
enter
or
jmp
sti
out
callw
ret
nop
out
int3
xor
mov
add
push
ss
mov
push
icebp
mov
push
or
idiv
mov
adc
clc
lock
test
mov
adc
push
call
pop
inc
xor
jmp
add
sbb
inc
or
je
adc
mov
or
inc
fcom
fmul
(bad)
loopne
push
cs
test
test
pusha
in
pushf
gs
inc
push
jb
inc
ins
and
ins
and
jmp
call
sahf
pushf
mov
mov
pop
call
add
sbb
jle
or
inc
sbb
push
jo
test
and
mov
dec
adc
push
retf
add
sbb
cmp
sub
mov
pop
mov
push
popa
jo
sbb
sbb
add
inc
mov
add
sub
xor
in
in
mul
cmp
ror
not
mov
es
cdq
(bad)
in
out
call
dec
mov
add
in
lea
sahf
fsub
mov
test
mov
sbb
test
xor
inc
mov
loop
adc
test
or
gs
cdq
stos
push
jmp
or
mov
nop
out
and
push
mov
out
je
ins
or
add
sti
sbb
push
sbb
ins
imul
ins
sbb
jl
aas
push
cdq
mov
inc
mov
xor
cmps
xchg
mov
mov
add
sbb
mov
mov
outs
in
push
imul
sbb
or
in
xlat
aaa
nop
adc
setne
jne
adc
out
jbe
mov
push
ret
cmps
aam
mov
mov
inc
or
and
or
inc
adc
jbe
call
adc
push
loope
js
aam
lock
or
mov
xlat
mov
jae
and
nop
jns
lock
stc
add
sub
and
sub
mov
mov
(bad)
aaa
pop
(bad)
and
popf
call
bswap
add
adc
sub
add
adc
or
(bad)
sbb
out
sbb
push
or
fmul
loopne
dec
add
sub
or
add
dec
push
pop
push
lea
push
push
repnz
jl
ret
pusha
aam
(bad)
adc
sbb
add
mov
push
xor
adc
push
pop
test
adc
adc
sub
je
fidivr
inc
addr16
test
pusha
lods
shl
dec
or
jg
add
adc
ror
xchg
adc
pop
shl
adc
aaa
clc
adc
nop
push
add
cmp
push
es
cli
jl
stos
or
or
scas
hlt
mov
mov
jg
push
hlt
push
mov
push
mov
mov
or
dec
hlt
jns
dec
pusha
mov
ret
push
fwait
xchg
loopne
or
adc
pop
adc
outs
lock
movs
pop
or
or
push
adc
fmul
aaa
lods
mov
or
fcmovb
sar
or
(bad)
pop
jne
sbb
clc
inc
adc
push
mov
add
adc
add
cmp
dec
enter
loop
mov
jmp
sbb
lods
jge
mov
adc
push
adc
xchg
push
dec
or
dec
push
adc
jl
push
fld
movs
das
aam
rol
aam
mov
add
movs
pop
pop
push
pop
xchg
dec
dec
(bad)
add
fild
or
push
sbb
push
pusha
sbb
(bad)
scas
nop
pop
inc
scas
sbb
pop
pop
or
push
and
push
xor
jge
mov
fs
or
and
ret
pusha
sub
hlt
or
arpl
cmps
sbb
cmp
pop
nop
mov
call
pop
pushf
xchg
into
push
wrmsr
xor
and
into
sub
sbb
ret
pop
mov
cmps
addr16
inc
cmp
test
push
adc
push
inc
push
xchg
inc
add
inc
dec
mov
sti
popa
rol
fdiv
adc
out
or
mov
retf
mov
mov
into
mov
mov
cld
xchg
xor
ja
ja
fstp
push
push
push
cs
test
je
in
aas
inc
fdivr
cmp
add
test
dec
fdiv
fldl2e
fdiv
fidiv
sti
push
sbb
xor
les
rcl
leave
pusha
ret
shr
mov
lods
mov
push
lock
jge
jns
xor
and
mov
push
pushf
jle
xchg
adc
mov
xor
cmc
xchg
push
cmp
push
mov
mov
inc
hlt
sub
pop
pop
daa
xor
dec
ficom
add
ins
in
jmp
dec
inc
lock
bound
dec
int3
ret
dec
push
cld
pushf
push
call
add
mov
sub
push
loopne
inc
sub
or
dec
neg
int3
mov
mov
pop
cwde
or
sub
mov
fsub
sub
dec
outs
xchg
loope
dec
arpl
enter
loop
mov
cmps
cwde
out
xchg
xchg
adc
jae
jecxz
ret
adc
(bad)
loop
(bad)
jg
leave
adc
sahf
push
scas
inc
adc
mov
adc
ins
mov
sbb
dec
cmps
call
test
mov
mov
xchg
push
xor
ret
lock
pop
jl
pop
cmp
mov
imul
cmp
mov
sub
loopne
pop
pop
(bad)
aad
cs
js
push
inc
movs
adc
daa
or
jne
pop
xor
or
add
push
jl
outs
jecxz
mov
cmp
jne
push
rcr
or
adc
pop
cdq
ins
les
aad
test
div
je
test
jne
mov
jmp
and
mov
add
mov
rol
cmp
or
aaa
mov
mov
ret
add
sub
jae
fild
sub
adc
fnsave
sbb
inc
xchg
adc
cmp
and
or
push
sbb
adc
fmul
pop
and
fadd
pop
xchg
mov
sbb
add
inc
xchg
add
aas
push
inc
xchg
and
mov
add
sub
cmc
pushf
xchg
out
and
and
test
mov
mov
adc
cmc
or
inc
shl
push
jmp
mov
(bad)
ficomp
cwde
push
mov
or
popf
cmp
js
in
dec
movs
frstor
clc
mov
ret
jmp
js
cmps
push
lock
or
enter
lock
and
mov
or
mov
cdq
hlt
inc
dec
(bad)
push
mov
add
lock
cmp
setge
wbinvd
jbe
mov
jns
leave
mov
add
bound
hlt
call
dec
pusha
enter
ja
and
lods
enter
jae
mov
or
mov
add
cmp
jne
mov
in
out
inc
rol
xchg
aam
enter
cmps
jp
cwde
mov
mov
cmps
or
push
add
pop
add
push
add
or
adc
sub
push
fdiv
or
mov
push
mov
dec
pop
nop
ss
sbb
leave
int3
mov
js
sti
scas
enter
jge
or
jl
hlt
mov
(bad)
int
add
add
aam
add
sbb
mov
dec
mov
jmp
dec
adc
mov
add
aam
pop
xor
out
mov
push
test
sub
push
popf
movs
xchg
sbb
(bad)
jmp
call
push
lods
cmc
in
mov
stos
pusha
or
daa
push
cmp
push
fistp
mov
cmp
bound
test
fiadd
sbb
shl
test
enter
call
nop
sbb
leave
cwde
leave
jge
(bad)
test
ret
sbb
jmp
rcl
clc
pop
retf
push
sbb
cmp
repz
iret
repz
push
pop
pop
imul
repz
ja
mov
xchg
fwait
mov
cmp
mov
mov
xchg
cs
mov
out
lods
add
or
add
mov
mov
sbb
inc
push
(bad)
(bad)
pop
or
pusha
cmps
jl
ja
jne
data16
daa
cmps
aam
mov
xchg
push
cli
dec
cld
mov
pop
fcom
adc
xor
outs
sub
push
scas
inc
repz
pop
adc
int3
xchg
int
sahf
mov
loopne
into
and
sahf
out
sahf
je
mov
out
mov
repnz
xor
cmp
repz
jns
shl
sahf
out
or
shl
sbb
out
cmp
lds
or
jns
cmp
out
shl
shr
repz
mov
iret
cmc
push
shl
pop
jns
out
sahf
call
out
in
xor
pop
bound
ins
mov
or
jns
push
sbb
dec
push
pop
and
leave
push
dec
mov
add
test
mov
push
jl
mov
je
add
add
adc
pop
xor
dec
mov
mov
retf
inc
and
ja
mov
sub
rcl
pop
aad
add
xor
rcl
sbb
adc
push
scas
jno
mov
mov
inc
(bad)
and
ret
inc
ins
inc
mov
inc
adc
sub
adc
hlt
or
sub
ja
fisubr
rol
adc
inc
xchg
outs
mov
pop
inc
addr16
or
inc
addr16
xchg
adc
ins
mov
and
push
or
push
inc
mov
inc
push
mov
in
test
sbb
ins
add
add
inc
or
mov
push
inc
loope
and
adc
add
mov
mov
adc
outs
aam
and
mov
inc
mov
jo
pusha
inc
mov
inc
xor
lock
pop
mov
inc
or
sbb
and
outs
pop
pushf
push
push
push
pop
jmp
adc
popa
inc
push
pop
popa
test
ins
inc
xor
adc
jmp
xchg
jmp
or
inc
mov
ret
mov
shl
jmp
sbb
jo
dec
clc
push
jecxz
sbb
add
loop
mov
xchg
call
jmp
and
shl
sti
jmp
add
or
inc
cmp
cli
sbb
pop
mov
dec
xchg
mov
sub
and
mov
add
sar
dec
loopne
dec
xor
es
fld
mov
test
je
pop
mov
mov
or
test
loopne
mov
cmc
pop
inc
dec
pop
push
push
add
outs
sbb
loope
shl
jae
mov
call
xchg
sbb
sbb
nop
enter
or
add
add
pop
pop
or
or
out
fisubr
mov
jmp
mov
and
cmp
or
add
or
cmp
add
ja
sub
xor
jmp
jo
pop
sbb
mov
je
dec
push
mov
adc
aas
sbb
mov
out
je
popf
mov
mov
inc
mov
popf
mov
mov
sub
xchg
outs
sub
inc
mov
ret
ss
ret
pop
and
(bad)
sub
jae
push
push
loope
cmovge
pop
(bad)
adc
inc
ds
loopne
movs
ret
or
add
add
add
mov
mov
fidivr
call
adc
and
pusha
mov
cs
loope
shl
jmp
xor
push
loope
sbb
add
shl
or
sbb
cmp
(bad)
cld
(bad)
(bad)
int
sbb
mov
mov
in
cmp
dec
lea
dec
fild
adc
sahf
out
and
cmp
mov
stos
mov
cs
test
das
cmp
outs
stos
retf
out
adc
sub
jnp
and
out
adc
out
xchg
adc
jns
xchg
jg
adc
adc
pop
and
hlt
aad
and
adc
cmp
and
call
and
retf
xchg
inc
and
sub
cmp
jne
mov
imul
sbb
fcmovnb
inc
sbb
sbb
std
mov
mov
add
push
push
adc
fucomp
sbb
and
or
(bad)
out
arpl
je
es
mov
jns
lods
add
add
or
sahf
out
sahf
sbb
dec
push
fs
out
jb
mov
call
mov
and
xlat
jo
mov
mov
jecxz
mov
jecxz
xlat
jecxz
pop
femms
pop
shr
cmp
sbb
push
cmp
mov
aas
out
prefetch
or
push
adc
jmp
rol
sub
mov
mov
dec
pop
outs
xchg
inc
shl
fst
pop
(bad)
out
sahf
not
jae
test
jns
mov
nop
pop
cmp
push
adc
xchg
sbb
mov
mov
ret
add
mov
shl
xchg
mov
js
mov
shl
jo
mov
das
dec
push
push
js
jecxz
outs
or
das
push
iret
pusha
clc
jns
push
push
sbb
sub
cmp
sbb
ret
xlat
ret
xlat
push
mov
xlat
xlat
add
add
cmps
jmp
and
adc
sar
call
add
adc
xor
movs
or
lods
sti
jb
je
dec
aaa
dec
or
lods
push
(bad)
adc
pop
jno
and
add
mov
adc
lods
std
inc
lock
pop
add
sub
and
add
cmps
ror
jns
dec
xchg
pushf
or
inc
sbb
aas
lods
scas
mov
mov
xor
inc
ror
mov
clc
push
cs
loope
or
and
push
add
sbb
or
retf
(bad)
cmp
mov
stos
mov
(bad)
stos
pop
sbb
pop
jl
(bad)
test
mov
or
push
movs
mov
mov
inc
mov
(bad)
mov
add
das
ja
rcl
cmps
repnz
jo
push
lods
add
xor
xor
repz
dec
es
aaa
dec
pop
addr16
repz
adc
repz
and
rcr
pop
and
push
cwde
ret
mov
add
ja
push
add
shr
mov
sbb
xchg
inc
in
cmp
add
stc
jo
data16
add
dec
mov
dec
adc
push
adc
pusha
jns
out
outs
jl
cwde
cmps
pusha
push
pushf
out
ret
adc
shl
or
lock
pusha
nop
icebp
inc
jmp
or
pusha
icebp
inc
icebp
inc
push
push
or
sub
inc
or
icebp
inc
icebp
inc
mov
aas
push
push
sbb
adc
cli
dec
stos
jecxz
jb
int3
pop
cmp
fs
repz
jb
mov
repz
repz
lea
mov
xor
sbb
xor
adc
rol
scas
shr
mov
pop
sbb
xchg
pop
repnz
inc
push
pusha
and
and
inc
add
mov
fstp
adc
or
in
mov
add
sbb
in
inc
fadd
pusha
mov
cs
fisttp
fadd
inc
push
pop
sbb
cwde
in
sahf
cmps
add
push
sbb
ss
sahf
out
push
pusha
outs
jl
sub
pushf
mov
adc
push
ret
jecxz
jecxz
mov
cdq
xor
and
rcl
in
cdq
popf
xchg
popa
cdq
jae
and
inc
sbb
sbb
and
dec
jmp
push
loope
push
add
rol
ins
adc
push
pop
and
xor
pop
imul
jns
ins
cmp
sbb
lods
pop
popa
ret
jne
dec
js
jb
ins
push
jne
loop
sub
stos
xor
pop
not
sbb
sbb
or
or
jne
dec
cs
jmp
es
cmp
inc
mov
cmps
or
retf
add
loopne
push
shr
cdq
in
cs
push
pop
push
sub
and
mov
cs
cs
out
inc
movs
mov
adc
jns
sbb
or
add
imul
adc
sahf
out
sahf
adc
adc
push
pop
jns
out
sbb
sbb
sbb
and
call
and
and
es
nop
call
add
call
cmp
out
mov
sahf
out
xor
sahf
out
sahf
ja
cdq
stos
mov
jns
out
call
into
and
sahf
out
sahf
xor
bound
jns
out
mov
lahf
add
sub
je
xor
and
cmp
pop
and
sub
and
pop
popa
punpckldq
push
in
lea
mov
sub
sbb
xor
test
and
dec
lock
test
inc
imul
push
or
mov
(bad)
xor
push
pop
jmp
int
and
pop
jmp
mov
and
cmp
ss
jae
jns
xor
sar
(bad)
and
dec
pop
fcomi
mov
push
and
ins
xchg
mov
(bad)
and
mov
lods
ins
lahf
mov
popa
or
das
movs
sti
xchg
pop
sbb
outs
test
sbb
ins
mov
daa
sub
std
mov
sub
add
sbb
mov
mov
mov
or
imul
add
pop
and
pop
enter
daa
and
and
cli
pop
enter
fimul
jmp
mov
out
push
outs
or
je
dec
or
sub
(bad)
fisttp
add
xchg
or
int
sbb
dec
je
push
add
test
aaa
add
cmp
pop
fisttp
lahf
inc
cmp
xchg
lock
push
pop
jb
repz
repz
ror
aad
call
div
adc
sbb
inc
mov
jns
adc
retf
adc
ficomp
retf
cmps
push
mov
enter
dec
fldl2e
sti
or
sbb
push
cs
push
pop
xchg
sub
ins
jp
out
in
xchg
movs
mov
xor
addr16
(bad)
ins
test
and
cmp
das
and
test
test
mov
mov
and
pop
or
add
movs
xchg
dec
and
xor
frstor
jge
add
retf
in
jno
loope
pop
pop
xlat
imul
mov
pusha
xlat
gs
xchg
and
inc
lods
push
rcr
mov
add
dec
cmp
cmp
and
xor
lahf
sub
pusha
adc
jb
or
arpl
loopne
pop
popf
jne
push
fs
or
clc
xor
outs
pop
xlat
pop
fsub
jb
jnp
into
sbb
call
mov
xchg
jae
inc
jns
or
push
scas
push
scas
sbb
test
push
and
dec
mov
jne
inc
mov
dec
push
xchg
ret
adc
xchg
or
fcom
push
aaa
sbb
sbb
out
mov
adc
push
fcmovnb
push
test
jmp
test
add
sbb
pop
mov
pop
sub
cmp
jns
out
pop
outs
jg
sahf
out
sahf
mov
idiv
mov
push
and
ret
jns
out
dec
pop
in
push
test
pop
loop
pop
add
sbb
xchg
add
inc
lea
add
push
pop
test
lods
and
and
and
inc
pop
adc
adc
jge
mov
(bad)
sub
arpl
mov
sub
arpl
xchg
scas
inc
mov
inc
xchg
pop
or
pop
jno
adc
adc
(bad)
sub
int3
inc
dec
xchg
movs
or
inc
sub
mov
out
mov
adc
jns
out
inc
dec
pop
push
sar
xchg
pop
jecxz
and
rol
scas
lea
cmps
mov
xor
xchg
or
sub
jo
sbb
ret
pop
test
sbb
sbb
mov
sbb
cmps
jns
nop
mov
jns
out
xor
dec
shl
sahf
pop
push
inc
mov
adc
or
pop
daa
ins
push
push
or
sub
aam
test
sti
iret
dec
mov
adc
test
cmps
and
shl
das
adc
sub
jle
xchg
dec
jo
retf
xchg
and
mov
dec
outs
add
mov
xor
pop
imul
cmp
or
mov
or
and
add
mov
js
push
push
push
xor
lea
or
push
cld
mov
les
mov
call
push
pop
pop
pop
push
mov
push
cld
movnti
dec
xchg
jge
add
jmp
pop
pop
pop
scas
lods
inc
movs
in
add
pop
and
lock
repz
test
je
push
mov
cmp
and
cmp
jne
repz
rcr
mov
cmp
and
adc
push
pop
fnstcw
and
inc
cmp
push
cmp
fsub
fisub
(bad)
mov
or
and
pop
xor
ja
adc
add
xor
(bad)
inc
jb
jns
push
jns
je
ins
cs
jns
gs
push
outs
imul
out
add
loop
push
dec
call
neg
fistp
xor
test
ds
les
int3
and
cmp
jns
cmp
xor
ja
clc
fild
inc
ds
ins
adc
pop
xchg
or
clc
fcomi
(bad)
fisub
push
inc
outs
jne
gs
je
jb
hlt
outs
sbb
sub
test
loopne
outs
jbe
dec
gs
test
jbe
adc
pop
add
gs
data16
dec
pop
popf
dec
fcomi
lods
rcl
or
cmp
imul
sbb
ins
ins
arpl
outs
test
jecxz
pushf
fdiv
mov
xor
data16
clc
inc
jne
sbb
pusha
clc
outs
xor
pop
push
ja
push
outs
mov
xor
int3
push
add
cmps
xchg
jmp
pop
jo
push
jg
push
dec
push
and
dec
or
idiv
daa
cdq
pop
inc
and
jns
add
xchg
lea
ss
or
cld
loopne
push
xlat
pop
xor
pop
push
outs
inc
fisub
hlt
dec
add
pop
add
inc
sub
inc
nop
mov
add
fwait
dec
add
int3
(bad)
jne
mov
imul
and
push
idiv
and
mov
push
dec
xor
mov
mov
and
lock
sbb
ins
je
cmps
jge
int3
sbb
mov
cli
pop
sub
outs
or
mov
data16
into
mov
push
dec
push
cmp
dec
bound
push
idiv
adc
dec
push
aas
mov
pop
xchg
push
popf
ffree
jge
cmps
and
sbb
neg
lods
xor
inc
adc
outs
jae
scas
pop
inc
sti
(bad)
ror
pop
push
das
outs
push
mov
nop
mov
mov
adc
divps
push
cld
add
add
xor
mov
popa
outs
popa
stos
mov
aam
fiadd
sbb
add
loopne
int3
loopne
lds
std
jmp
pushf
cmps
adc
or
ins
dec
or
sbb
and
or
jnp
sbb
jnp
data16
rol
cmc
out
in
add
fisub
imul
pop
adc
(bad)
stos
mov
lds
jne
add
cwde
cs
xchg
dec
out
mov
push
and
addr16
push
scas
adc
dec
je
call
and
push
pop
ret
push
inc
jno
mul
cld
push
xor
pop
das
jno
and
lods
(bad)
mul
jno
scas
ins
cmp
add
test
sbb
lock
lock
sub
in
inc
dec
cwde
fadd
loope
aam
push
gs
sbb
or
xor
or
xor
data16
int
mov
pop
or
dec
mov
add
add
push
dec
ins
test
add
xchg
dec
popa
ret
adc
aam
pop
outs
fcomp
in
mov
ins
ja
add
add
call
jl
fsubr
mov
jge
mov
stos
push
mov
xchg
test
imul
(bad)
adc
test
imul
popf
jbe
xor
fwait
mov
cmp
sub
enter
sub
outs
adc
fisubr
and
(bad)
ja
sbb
mov
push
fimul
inc
cs
fdivr
push
add
jae
js
cwde
ins
cmove
fsubr
add
jns
mov
pushf
mov
lds
inc
sahf
pushf
fisttp
xor
dec
dec
dec
mov
adc
dec
daa
daa
daa
daa
jb
int
cmp
aas
setl
cmp
mov
push
cmp
jo
adc
es
cmps
(bad)
mov
rol
jno
sbb
fwait
(bad)
dec
or
or
inc
int
sub
xchg
jno
mov
push
mov
jne
daa
push
lahf
jecxz
imul
inc
imul
cmovns
adc
dec
jae
rcl
sub
add
push
popa
jg
jg
sub
push
add
xor
(bad)
push
inc
es
add
fs
mov
fnstsw
popa
ins
jne
arpl
add
jp
lods
or
call
sub
mov
loop
sahf
sub
pusha
push
mov
cdq
shr
mov
adc
adc
hlt
test
dec
enter
pusha
jae
pop
sub
cmp
enter
sbb
shl
cmp
or
mov
inc
or
test
mov
dec
sbb
inc
das
leave
fwait
(bad)
cmp
sbb
arpl
arpl
xor
push
or
dec
jae
pop
inc
jne
imul
jl
jo
dec
imul
data16
jno
frstor
or
add
add
fisubr
mov
push
push
pop
imul
dec
mov
mov
jne
inc
inc
js
push
pusha
xor
jo
gs
mov
retf
ja
pop
rcl
or
sbb
icebp
inc
xor
scas
mov
push
add
scas
arpl
mov
add
pop
xor
fld
mov
gs
or
adc
xor
dec
pop
mov
jg
add
mov
popa
pop
and
lds
push
inc
mov
sbb
lds
pop
es
jae
sbb
cmp
cmps
adc
ret
(bad)
jb
inc
je
stos
adc
cmps
psraw
pop
dec
mov
jmp
inc
add
(bad)
cmps
or
or
and
ds
mov
fisttp
popa
or
jge
sub
std
push
sub
dec
ins
or
mov
push
xchg
fnstenv
dec
or
sbb
sub
adc
xlat
cmps
adc
mov
xchg
dec
test
add
sub
ins
mov
mov
push
(bad)
jae
or
or
inc
dec
inc
or
dec
inc
jbe
pop
xchg
xor
(bad)
cli
xlat
mov
cmp
pop
pop
je
pop
arpl
in
inc
loope
sub
jns
xchg
mov
mov
lea
dec
sub
xchg
out
mov
xchg
stos
push
or
ds
loopne
xchg
pop
or
add
adc
add
lds
mov
movs
push
adc
outs
popa
pop
arpl
jns
add
aam
mov
push
aas
outs
outs
or
call
add
(bad)
(bad)
pop
cmp
add
mov
adc
loopne
dec
sub
fisttp
mov
mov
pop
(bad)
mov
mov
xchg
es
cwde
add
out
mov
and
aas
push
dec
test
je
sub
xor
mov
inc
scas
sbb
mov
xor
test
inc
and
aaa
lea
push
add
xor
or
(bad)
enter
adc
add
nop
mov
movzx
mov
push
jl
scas
or
ret
shl
adc
leave
fidiv
jae
add
jl
mov
jae
mov
test
mov
int3
jge
push
movs
xchg
adc
ret
xor
cld
repnz
pop
adc
inc
mov
neg
push
add
add
(bad)
hlt
push
push
mov
mov
pop
and
enter
leave
sti
mov
out
mov
mov
inc
jne
sbb
ret
push
pop
ret
mov
call
mov
mov
mov
lea
paddsb
or
push
pop
pusha
xchg
rcl
loopne
adc
pop
mov
iret
mov
adc
push
and
ficom
push
ja
add
jo
cwde
pushf
and
push
out
pushf
and
popf
xor
or
nop
cmp
jle
sbb
cdq
rol
cmp
jmp
pop
sub
push
sbb
cmp
add
pusha
(bad)
cdq
and
jne
or
in
mov
jb
lock
mov
mov
cld
push
call
adc
fld
movs
push
lock
or
in
mov
adc
add
and
ret
in
into
and
daa
in
cmps
loope
cdq
dec
jae
loope
icebp
and
neg
mov
(bad)
jo
lds
adc
(bad)
(bad)
push
push
bound
cmps
pop
stos
pop
adc
dec
cmps
mov
add
jge
push
mov
jl
movs
pop
ds
xchg
ja
rcl
in
or
das
(bad)
mov
out
clc
out
aam
jg
xor
inc
in
mov
add
sbb
cmc
imul
add
and
add
or
shl
push
inc
mov
sub
in
sub
shr
std
je
dec
je
push
aaa
push
jmp
mov
lock
inc
mov
jmp
sbb
mov
or
push
dec
push
or
outs
sub
fdiv
inc
inc
and
jmp
inc
lea
mov
cwde
xor
xchg
movs
cld
and
mov
adc
push
adc
fstp
hlt
dec
loopne
add
jmp
cwde
sub
(bad)
and
mov
or
loopne
popf
shl
mov
mov
cwde
pop
sub
xchg
outs
and
movs
loopne
lock
ss
cmovns
movs
loopne
sbb
sbb
vorps
adc
jmp
pop
(bad)
fwait
sbb
imul
mov
sbb
mov
sti
call
icebp
mov
sub
jb
add
sub
jb
or
je
out
add
lods
adc
pop
(bad)
pop
or
cmp
xchg
xor
xlat
ret
(bad)
loope
mov
ins
fwait
add
mov
mov
(bad)
adc
adc
xchg
mov
or
fwait
pop
hlt
push
push
pop
popf
sub
inc
xchg
and
push
jbe
sar
adc
aaa
jns
test
jb
je
jle
push
jge
push
jmp
adc
shl
aaa
sub
lock
dec
(bad)
sbb
jmp
pop
add
pusha
mov
sub
lock
pop
sbb
or
and
movs
fld
or
push
dec
push
sbb
sti
xchg
loopne
rol
retf
(bad)
mov
jge
jge
js
cmp
dec
adc
sub
adc
push
dec
sbb
add
mov
movd
add
out
and
jmp
inc
jmp
adc
shl
push
sbb
sbb
adc
mov
adc
mov
add
pop
cld
nop
and
ss
enter
mov
icebp
test
clc
mov
xor
jge
xchg
sub
enter
mov
lea
loopne
dec
sbb
xchg
test
xor
ins
es
lock
je
cmp
lea
mov
sbb
and
or
jnp
fwait
cmps
add
or
mov
cmps
sbb
push
repnz
sub
les
(bad)
call
dec
xor
cmp
inc
sub
out
test
mov
in
ins
add
out
mov
or
adc
push
inc
xchg
(bad)
pushf
loopne
sub
adc
xchg
sbb
out
mov
mov
push
push
add
sbb
mov
jae
ins
loop
sub
arpl
in
adc
push
mov
push
or
mov
dec
and
sub
std
mov
mov
(bad)
sbb
ins
sub
dec
clc
push
call
xchg
push
mov
in
cli
mov
lds
mov
bound
xchg
and
or
sbb
lock
jbe
sysexit
dec
mov
sbb
push
pop
pushf
jmp
jl
sbb
jge
cli
aam
mov
mov
retf
iret
mov
lods
lods
(bad)
mov
sub
inc
mov
dec
call
dec
inc
jmp
add
inc
sub
push
clc
in
add
xchg
xor
jmp
jmp
sub
je
jmp
movs
loopne
imul
pop
inc
sbb
data16
clc
bound
sub
lds
xor
cmp
dec
sbb
jg
out
repnz
or
or
push
xchg
adc
xchg
sti
pop
jmp
push
add
bound
rol
ss
lea
add
adc
mov
mov
xchg
sbb
das
mov
pusha
(bad)
push
call
pusha
jnp
adc
test
pop
jo
sbb
and
popa
hlt
push
cmc
daa
jmp
les
dec
sti
hlt
mov
xor
inc
sbb
push
adc
daa
dec
jbe
pop
mov
popa
fidiv
ja
xchg
sbb
lds
mov
xlat
sbb
dec
push
jo
js
jns
pop
xchg
scas
or
or
js
es
daa
sub
sub
sbb
add
push
ret
sbb
pop
jmp
lahf
jne
fwait
ss
dec
push
aaa
mov
xor
xor
dec
ins
mov
sbb
mov
pop
fmul
add
sbb
jno
pop
test
push
ss
sti
jnp
pop
xchg
add
sub
push
idiv
repz
js
(bad)
ss
or
push
sbb
je
adc
xor
mov
adc
push
jbe
jmp
dec
adc
dec
repnz
pop
mov
sub
sbb
xchg
xor
stos
pop
loopne
and
sbb
sub
add
inc
test
out
out
cmc
jp
mov
clc
(bad)
in
push
rol
adc
cld
pop
xlat
(bad)
ret
jmp
fcmovnu
xor
scas
or
rol
add
scas
je
jnp
push
sbb
out
push
jmp
ret
jb
or
push
stos
xchg
cmp
aaa
in
sub
or
adc
(bad)
mov
add
sub
scas
ror
adc
sbb
mov
retf
cmps
call
push
cdq
stos
push
sahf
sbb
pop
or
ret
repz
sbb
and
or
ds
and
or
cmp
xor
mov
(bad)
outs
out
hlt
mov
enter
or
adc
jmp
or
jmp
or
adc
jmp
mov
jmp
pop
mov
mov
or
je
aaa
retf
mov
in
mov
adc
mov
scas
shr
nop
xchg
xchg
adc
adc
dec
xchg
dec
adc
fcmovnbe
mov
movs
pop
pop
das
mov
inc
dec
adc
jno
jb
jb
and
and
add
adc
sbb
bound
or
add
in
add
jmp
addr16
adc
jno
ins
jno
cli
pop
ja
or
and
and
push
push
sysret
add
out
cmp
jmp
adc
push
pop
sbb
addr16
dec
shl
pop
push
(bad)
xchg
add
out
dec
aaa
outs
jp
das
push
(bad)
shl
sbb
gs
push
push
pop
add
pop
mov
or
mov
mov
nop
mov
xor
pusha
mov
loope
lock
or
pop
mov
retf
jae
or
inc
add
cmp
jne
sbb
mov
add
push
push
and
mov
aas
lock
jl
ret
pop
or
popf
ror
sbb
retf
mov
test
add
mov
cmp
mov
add
inc
mov
push
push
jo
test
or
shl
push
mov
mov
fiadd
clc
sbb
pop
dec
push
pushf
shr
aad
pop
ja
inc
pusha
xchg
pop
mov
out
add
adc
mov
adc
iret
add
shl
xor
or
sbb
or
fst
and
add
fistp
mov
lock
jne
or
in
mov
mov
retf
aaa
push
and
push
mov
fcomp
sub
mov
sti
xchg
fild
and
mov
shl
or
dec
mov
es
daa
jae
xor
sub
pop
daa
or
cmp
mov
daa
or
mov
nop
daa
xor
or
mov
or
push
xchg
repnz
pop
pusha
fwait
cwde
(bad)
test
loopne
and
cdq
and
xor
pop
fwait
pop
or
push
jns
(bad)
and
push
loopne
sbb
and
cld
push
or
out
mov
leave
mov
sbb
mov
in
fcomi
fidiv
imul
mov
ror
repz
bound
cmp
pop
imul
xor
pop
out
pusha
sbb
or
sbb
data16
cmps
and
inc
call
adc
adc
je
jns
sub
sub
sub
add
push
push
cwde
or
inc
js
ins
je
mov
mov
rol
pop
retf
or
cmp
dec
mov
dec
push
push
push
xor
inc
add
loopne
push
push
enter
mov
mov
mov
push
pop
mov
adc
mov
pop
push
mov
int3
fs
and
call
outs
aaa
add
js
lock
bound
ins
movs
ror
hlt
ins
jle
adc
mov
pop
cmp
jbe
or
dec
sub
outs
sar
mov
mov
inc
push
dec
sbb
call
(bad)
int
adc
push
out
jl
test
sbb
ror
clc
lea
xchg
scas
and
mov
lea
xor
mov
xor
push
jle
push
test
cld
add
push
fmul
test
cld
dec
out
pushf
xor
lds
fnstsw
mov
push
sbb
pop
clc
inc
shr
push
xchg
int
and
(bad)
jnp
ja
mov
lahf
sbb
or
sub
test
sti
mov
add
sub
shl
pop
call
idiv
ret
je
sub
je
or
(bad)
pop
call
adc
add
sub
jmp
and
adc
out
cli
cmp
xlat
cs
adc
pop
cmp
out
pop
mov
dec
mov
cmp
je
mov
fcomi
xchg
sbb
jmp
add
inc
and
inc
add
mov
push
rcr
push
sbb
push
sbb
cmp
loope
pop
repnz
or
push
test
cmp
inc
push
mov
mov
std
and
or
xchg
adc
push
mov
sar
dec
push
mov
iret
sub
mov
cmp
mov
cmp
pop
jbe
mov
outs
inc
add
jo
add
outs
or
out
movs
pop
fsubp
add
push
sbb
test
push
fcmovbe
and
popa
aam
test
outs
fsubr
push
in
xchg
aam
or
sbb
push
mov
mov
sbb
mov
mov
and
out
ficomp
mov
fdivr
stos
adc
lods
inc
push
push
shl
push
push
push
inc
int
fmul
push
popa
fdiv
(bad)
jl
dec
std
push
iretw
lock
sbb
inc
ss
aas
arpl
jo
add
and
xor
or
pop
push
cmp
in
pop
cmp
inc
movs
cwde
cdq
bound
aaa
mov
test
xor
ret
add
je
add
xor
pop
std
adc
pop
or
ret
push
pop
push
adc
pop
push
mov
sbb
dec
int
jl
push
jmp
xor
push
push
adc
outs
neg
out
adc
js
mov
test
fadd
add
gs
push
jmp
das
aas
dec
or
arpl
sbb
jmp
(bad)
jo
test
mov
cwde
sti
stc
lods
mov
add
inc
cmova
jo
dec
adc
test
popf
add
scas
loope
jo
xchg
sub
in
arpl
lods
pop
add
hlt
jmp
pop
lock
dec
pop
mov
bound
sub
pop
ins
and
dec
mov
adc
or
aaa
sub
sbb
adc
outs
mov
hlt
push
lods
ja
into
cmp
ja
jmp
clc
imul
loope
push
and
adc
test
sbb
xor
sbb
ret
pop
shl
outs
mov
mov
ja
jae
or
sbb
jp
fsubr
cmp
mov
mov
ficomp
(bad)
sbb
mov
jo
xchg
ins
push
adc
int
xor
jno
dec
and
or
mov
mov
mov
push
leave
(bad)
test
jecxz
nop
sbb
inc
loopne
jp
adc
repnz
stc
jnp
xchg
push
sub
dec
add
inc
loope
call
sub
cmp
sbb
mov
or
fnstcw
pushf
icebp
shr
or
jecxz
fst
(bad)
add
push
aad
pop
jae
pop
jg
inc
popa
add
sub
inc
xchg
pusha
out
pushf
xor
mov
daa
ret
add
jmp
imul
add
gs
add
mov
pusha
test
push
je
inc
or
inc
adc
sar
jl
jle
or
fild
xor
and
fnsave
or
add
jo
(bad)
in
pop
mov
sbb
adc
in
push
(bad)
push
sbb
out
mov
sub
mov
(bad)
and
je
xchg
(bad)
ja
(bad)
into
add
cmp
mov
xchg
or
clc
adc
ret
add
sbb
xlat
iret
lock
push
outs
pushf
push
pop
sbb
lods
mov
aaa
cmp
loop
inc
and
mov
push
cmp
(bad)
out
xchg
rcr
rol
addr16
lods
jae
mov
movs
int3
test
mov
xor
and
int3
adc
add
push
jb
lea
push
fild
mov
push
add
xcrypt-cbc
cmps
adc
lock
inc
cmp
cmp
shl
add
xor
fimul
icebp
cmp
(bad)
cmp
sbb
enter
loopne
(bad)
cmp
bound
xor
xor
dec
je
out
jae
mov
xchg
adc
push
lahf
sub
adc
lock
inc
adc
out
ret
stc
pop
mov
adc
add
xor
adc
fmul
dec
and
hlt
test
mov
and
stos
adc
dec
jge
cs
neg
ficom
sub
add
ror
adc
rol
fcomp
cmp
imul
push
mov
cmp
sbb
push
push
fbld
lock
jmp
inc
pop
iret
jecxz
adc
call
pop
test
call
pop
or
ja
adc
add
loopne
out
addr16
cmp
sub
cmp
push
dec
cwde
push
daa
inc
dec
sar
inc
xlat
and
push
dec
push
movlps
je
inc
sub
test
jmp
sub
data16
mov
cmps
(bad)
mov
es
cmp
inc
xchg
daa
sub
sub
dec
cld
cli
push
or
(bad)
mov
mov
pop
pusha
dec
jnp
inc
in
lock
cmps
sahf
push
mov
dec
add
sar
jb
fadd
add
fs
pop
repnz
sub
adc
add
mov
test
pop
xor
pop
jge
retf
je
call
mov
push
pop
xchg
xor
ss
pop
adc
mov
dec
enter
mov
ds
adc
lea
fdivr
push
add
add
jge
inc
loopne
test
add
fdivr
loope
sbb
es
push
loopne
pop
mov
popa
and
sub
fdivr
jb
imul
fstp
(bad)
inc
je
jb
ins
sbb
popa
add
add
jbe
es
add
add
add
sub
imul
dec
mov
imul
pop
add
or
mov
xlat
add
push
sub
add
lea
xlat
mov
push
sbb
pop
add
add
sbb
shr
sti
les
inc
or
add
mov
jmp
cwde
cmp
sbb
push
fnstenv
int3
adc
(bad)
and
int3
inc
or
mov
ret
pushf
inc
(bad)
xlat
and
xchg
adc
aaa
or
xchg
sub
adc
xchg
ret
cmp
mov
clc
mov
pop
test
sub
or
cmp
rol
pop
jnp
enter
mov
xor
ficom
adc
or
lods
sbb
lods
sub
dec
mov
cmps
fwait
adc
push
jbe
outs
mov
or
add
rol
add
push
mov
xchg
aaa
hlt
pop
fwait
bound
inc
sub
mov
sbb
jp
cmp
add
push
nop
and
sahf
mov
add
pop
jbe
rcl
push
outs
push
pop
sub
pushf
ror
or
mov
jmp
push
es
clc
or
stos
(bad)
jl
lock
stos
xor
cli
pusha
inc
xchg
mov
stos
cli
push
frstor
sbb
pop
push
push
clc
and
pushf
sbb
cmp
push
mov
jo
inc
adc
mov
mov
or
rol
or
cmp
js
sti
or
push
inc
and
jge
sub
enter
inc
(bad)
mov
mov
std
mov
xchg
addr16
cld
dec
es
cld
mov
lahf
or
push
jne
push
sub
sbb
mov
mov
jnp
or
mov
mov
ret
mov
add
or
push
pop
(bad)
not
ds
pop
push
adc
loopne
icebp
or
mov
mov
xchg
lea
push
(bad)
popa
outs
cmp
int3
aaa
push
cmp
loop
lock
push
ror
cmp
jnp
mov
popf
inc
scas
mov
cmp
outs
les
hlt
dec
mov
in
cmp
xchg
jl
add
imul
add
adc
das
icebp
mov
fcom
in
inc
es
ficom
loopne
xor
or
fistp
xchg
jns
sub
(bad)
in
push
inc
sbb
sbb
and
add
sbb
xchg
or
sbb
cmps
into
ja
jnp
lods
mov
pop
in
(bad)
adc
and
inc
ins
data16
mov
sbb
ret
mov
mov
mov
inc
hlt
jmp
loopne
popf
dec
cld
inc
ins
or
cmp
sahf
push
pop
mov
test
mov
out
sub
sbb
and
xlat
in
cmp
or
sub
adc
dec
pusha
pop
aas
ins
aas
fistp
or
and
out
scas
or
dec
add
adc
push
add
adc
in
out
call
cmp
and
jl
or
cmps
int
je
jle
or
or
pop
mov
xchg
call
dec
pop
loopne
mov
dec
test
cld
xor
xor
jmp
loopne
fcom
mov
cld
in
loopne
pop
cmp
xor
dec
sbb
sbb
pop
sub
ins
or
push
sbb
or
pop
(bad)
push
ins
push
xchg
clc
inc
mov
sub
das
int3
cmp
stos
jmp
lock
cmp
push
and
int
add
(bad)
fsubr
dec
inc
mov
push
inc
jge
cld
jmp
test
inc
mov
and
test
cmp
jo
in
call
sahf
scas
xchg
add
push
fiadd
mov
sub
jmp
pop
sub
add
push
jmp
pop
or
lea
nop
jo
pop
push
jp
test
cmp
out
imul
cmps
dec
and
call
dec
adc
push
sbb
xchg
rol
and
shr
clc
retf
scas
loope
push
dec
sub
rcr
retf
xchg
or
adc
adc
jmp
mov
outs
ror
inc
cmp
je
adc
inc
ret
test
sbb
ret
cli
xchg
leave
inc
xchg
xlat
(bad)
push
adc
pop
test
pop
and
adc
cs
inc
jne
fist
push
je
nop
mov
sub
add
shl
jne
or
dec
cmc
lea
and
popf
adc
ror
pop
sbb
fidiv
mov
mov
mov
punpcklbw
test
or
test
push
xchg
aaa
mov
(bad)
fst
jle
xor
push
inc
add
out
pop
add
sub
add
inc
add
fldcw
mov
stos
push
lods
f2xm1
lea
add
daa
ja
or
mov
(bad)
(bad)
mov
test
inc
fdivr
aas
pop
sahf
mov
neg
mov
neg
xor
fisttp
cmp
popf
inc
dec
shl
lea
lea
push
sub
jmp
sbb
mov
and
int3
je
add
xor
adc
sti
out
mov
push
lahf
lods
mov
push
adc
aas
adc
xor
jae
mov
inc
(bad)
mov
rcl
cmc
or
call
jl
xchg
add
add
push
add
and
(bad)
sub
pop
aad
or
mov
sti
cmp
sub
push
loopne
int
cmps
or
fadd
inc
rcr
dec
das
cld
enter
pop
lea
mov
or
test
pushf
push
lods
xor
ja
scas
inc
js
or
es
push
(bad)
(bad)
xor
sbb
data16
dec
inc
dec
mov
ret
pop
(bad)
or
inc
and
xor
call
xor
mov
aaa
lods
test
sbb
xchg
dec
test
retf
sti
movs
xor
mov
inc
adc
sub
sti
push
inc
or
stc
add
and
lods
data16
inc
jbe
cmp
addr16
sub
pop
cmp
add
add
adc
and
mov
add
in
(bad)
and
push
add
mov
push
cmps
(bad)
or
inc
bound
(bad)
fild
cmps
mov
push
cmp
add
jmp
dec
mov
out
add
sbb
in
loop
mov
(bad)
hlt
push
jmp
or
mov
add
push
dec
sub
add
jo
xor
imul
shr
or
or
mov
mov
add
pusha
cmp
adc
dec
test
dec
loopne
add
imul
das
sbb
or
ror
adc
jmp
mov
adc
les
or
push
adc
mov
fldenv
ins
adc
xor
pop
dec
hlt
pop
pop
adc
sub
test
es
(bad)
rcr
aad
pop
push
(bad)
es
ret
mov
add
ret
dec
xor
test
inc
push
cmp
pop
inc
jg
inc
dec
xchg
jge
dec
test
dec
sub
rcr
add
daa
shl
jb
sub
cmp
and
cmp
rcl
add
test
stos
mov
push
sbb
cmp
sub
hlt
ror
cmp
dec
add
in
sub
adc
lock
sbb
inc
xlat
jge
inc
lods
push
outs
pusha
mov
jne
es
repnz
add
(bad)
xor
push
and
enter
inc
lahf
arpl
mov
pop
jle
or
daa
add
call
(bad)
jp
adc
and
dec
in
enter
sbb
popa
or
jge
retf
nop
add
cmc
sub
mov
sbb
fisub
adc
jne
or
int
out
push
fcmovu
jmp
or
lock
mov
adc
jbe
ja
adc
mov
add
in
sub
xor
and
je
dec
ror
test
push
pop
push
std
rcr
aaa
adc
mov
test
jne
cwde
mov
pop
mov
enter
add
mov
jl
jnp
cmp
lock
xor
add
fdivr
je
in
mov
ins
cmp
xor
pop
xor
sbb
add
push
outs
mov
mov
dec
mov
aad
jmp
jmp
call
loope
std
imul
std
aad
or
jecxz
into
add
inc
xorps
lock
push
and
dec
vmwrite
clc
mov
jae
jge
inc
cmp
aaa
clc
push
lds
push
mov
mov
sbb
test
jge
mov
cmp
xchg
fcomp
and
add
jle
(bad)
jge
xor
into
daa
jmp
les
xchg
and
test
jl
cmp
push
and
mov
popf
ins
xchg
jo
xor
fistp
jne
fucomip
lsl
or
dec
push
jge
add
cmp
jg
xor
out
cmp
pop
xor
in
push
enter
or
jmp
int3
dec
cmps
adc
lods
adc
es
pop
or
dec
pusha
je
mov
or
(bad)
je
pushf
xor
add
pop
or
sub
inc
enter
sub
push
push
push
jo
xor
push
push
push
popa
fistp
adc
xor
sub
shl
or
mov
js
push
push
adc
int
arpl
ja
cmp
int3
push
add
dec
into
inc
xor
icebp
ins
(bad)
and
out
in
lea
mov
out
cdq
lahf
movs
mov
sub
inc
jno
push
lea
mov
sbb
inc
inc
sub
loopne
jle
hlt
adc
out
ret
inc
fisub
(bad)
pop
add
push
cmps
jp
cli
mov
lea
frstor
cmp
push
sar
add
sbb
cmp
inc
rcr
test
(bad)
leave
(bad)
cmc
cmp
jecxz
inc
push
inc
push
or
dec
int3
xchg
add
sbb
cmps
mov
rcl
or
sbb
and
xchg
(bad)
fld
cwde
test
popa
pop
movs
push
test
sub
pusha
xchg
inc
inc
jle
adc
cmp
les
add
jb
add
outs
inc
cmps
xor
push
pop
cmp
jmp
leave
push
add
nop
adc
cwde
call
test
aas
outs
pop
nop
mov
mov
sbb
shr
ret
and
rcr
out
lods
std
add
loop
or
add
cmp
jg
fisttp
fwait
pop
je
or
hlt
and
mov
mov
and
cmp
mov
sar
retf
dec
adc
and
xor
js
mov
mov
add
in
dec
sub
pop
jle
dec
lods
mov
hlt
add
mov
out
out
inc
aas
mov
js
push
sbb
imul
add
in
addr16
mov
push
mov
xor
xchg
js
cmp
xor
dec
adc
in
sub
pop
mov
add
inc
or
or
mov
push
sbb
call
dec
call
lods
jo
arpl
es
mov
sbb
mov
loopne
cs
dec
mov
and
lods
cs
adc
mov
xchg
lock
jmp
call
(bad)
inc
dec
jne
or
pop
or
jne
fidiv
ror
cmp
cdq
cmp
loopne
sbb
ds
out
sbb
pop
inc
(bad)
push
out
cli
dec
aas
dec
mov
mov
push
push
inc
and
movs
mov
ja
mov
or
push
or
cmp
inc
fisub
setg
sub
loop
ss
in
xchg
mov
cmp
jmp
cld
xchg
inc
scas
fwait
mov
call
adc
(bad)
mov
inc
xor
inc
ret
and
xlat
pop
aam
popa
xchg
push
sbb
dec
jecxz
inc
jno
in
sub
or
mov
pop
push
shl
mov
adc
mov
mov
add
loope
mov
cmp
and
xchg
push
add
sbb
out
ret
pop
mov
sbb
pop
sbb
dec
push
jmp
movs
inc
sar
and
push
mov
push
add
or
pop
retf
shr
sub
fmulp
mov
inc
daa
test
(bad)
push
mov
gs
mov
mov
push
dec
sbb
mov
sbb
sar
test
push
loop
adc
and
icebp
add
adc
dec
(bad)
fsubrp
or
sub
dec
jne
sub
add
out
add
add
xor
shr
add
push
inc
sbb
cs
add
jl
dec
or
unpcklps
shl
pop
cli
inc
ins
(bad)
aad
xor
sbb
add
pop
push
mov
loope
(bad)
in
in
jp
add
push
lahf
add
add
mov
xchg
rol
push
pop
dec
pop
push
shr
mov
xlat
loopne
or
(bad)
pop
mov
cmp
les
ins
fcom
pusha
mov
add
jmp
push
cmp
sbb
add
push
add
int3
or
div
jge
sbb
push
push
mov
in
test
sahf
ds
pop
jge
and
mov
adc
nop
mov
adc
pop
idiv
les
add
sub
xor
test
cmp
push
mov
loop
sbb
not
xor
pop
dec
jne
xor
adc
xchg
dec
or
or
retf
pop
ins
xchg
jbe
mov
jne
retf
outs
cmp
xor
daa
cli
je
push
imul
adc
adc
sub
test
sub
add
jnp
pushf
or
adc
jbe
xchg
das
sbb
sbb
and
and
daa
pop
xchg
mov
push
push
adc
add
inc
sbb
nop
mov
pop
cmp
inc
lea
mov
stc
adc
push
movs
mov
cld
les
(bad)
ror
(bad)
cmp
lods
mov
mov
mov
mov
push
add
and
inc
sub
test
add
fcom
ja
arpl
pop
xor
add
je
adc
jmp
mov
stos
mov
pop
sbb
or
adc
jne
and
adc
cmp
pusha
xlat
(bad)
fwait
mov
imul
dec
fmul
lea
test
jnp
xor
pop
mov
xlat
dec
fsub
je
retf
dec
jmp
(bad)
and
or
jmp
jne
sti
(bad)
mov
fucomip
adc
dec
pop
fist
inc
fisttp
popf
pusha
les
je
into
ins
loopne
inc
(bad)
xor
sub
xchg
outs
retf
js
ficomp
test
dec
ror
sub
aas
sub
inc
js
mov
dec
xor
ds
sti
test
sub
adc
aad
jo
sbb
aam
cmps
pop
cmp
shl
pop
imul
cmp
and
dec
nop
inc
loop
sbb
mov
sub
scas
push
loope
inc
cmps
mov
pop
scas
(bad)
sbb
and
pusha
das
xchg
inc
push
xchg
(bad)
test
(bad)
mov
(bad)
addr16
mov
push
(bad)
stos
mov
(bad)
lock
inc
xchg
(bad)
push
inc
push
and
in
mov
mov
mov
fsub
push
cmp
mov
stc
and
sbb
out
sbb
inc
adc
or
dec
or
mov
(bad)
cmps
dec
je
mov
sbb
add
inc
loope
and
add
add
and
ins
jg
movs
add
jg
mov
leave
test
or
push
shr
push
dec
pop
int
pop
js
sbb
das
cmps
mov
adc
inc
push
or
psubsb
ret
push
xchg
xrstor
cwde
mov
jae
mov
pop
pop
neg
push
sbb
cmovle
pop
pop
and
js
fistp
add
cmovno
and
dec
or
mov
(bad)
movq
lods
and
dec
pop
or
mov
pop
add
mov
push
cli
or
or
add
adc
test
mov
test
adc
ja
jle
sbb
mov
push
out
xchg
cwde
pushf
leave
push
nop
lea
int3
pusha
(bad)
hlt
or
xlat
push
scas
or
popa
jmp
lea
pop
push
shr
scas
mov
or
rcr
push
adc
and
mov
mov
and
(bad)
dec
rcr
push
movs
dec
adc
sbb
aas
inc
inc
adc
icebp
mov
cmps
js
inc
ja
mov
into
cmp
sbb
and
inc
push
sbb
cmp
rol
push
mov
mov
aaa
lods
push
pop
popa
les
xchg
push
mov
or
push
(bad)
aad
ja
jo
sub
clc
dec
and
test
inc
jg
mov
sub
les
xchg
push
imul
movs
dec
jg
push
lea
rol
fsub
push
mov
sbb
mov
add
push
ins
sub
(bad)
lea
xor
mov
lock
lock
or
(bad)
mov
push
clc
and
or
push
loopne
pop
xchg
sbb
gs
xchg
sub
or
(bad)
aam
in
mov
(bad)
mov
enter
and
adc
setp
test
xor
pxor
add
dec
cld
ret
test
push
sar
cmps
pop
inc
add
ds
and
push
aas
pop
cwde
(bad)
mov
jle
push
add
pop
in
addr16
fimul
sbb
or
test
adc
icebp
ret
addr16
cmp
(bad)
sub
fisttp
sbb
or
shl
cwde
and
sub
pop
push
loop
push
dec
sbb
sbb
or
ret
or
(bad)
push
aad
test
mov
cs
cmp
loope
xchg
test
or
aam
cmp
ja
out
jle
inc
ins
or
cmp
aad
push
lahf
xlat
or
ja
cmp
mov
into
shr
fnstsw
les
test
push
mov
pop
adc
out
jbe
push
mov
lods
xor
and
adc
and
cmp
adc
aas
pop
pop
pop
fcom
sbb
xor
add
test
iret
call
sbb
iret
sub
mov
add
jno
mov
das
iret
sbb
mov
in
push
sub
iretw
mov
mov
aam
adc
sub
or
mov
and
and
test
cmp
mov
dec
adc
movq
add
jmp
pushf
pop
ret
or
cmps
pop
pushf
pop
xor
push
mov
(bad)
(bad)
jg
lods
scas
jno
cmp
jne
test
je
mov
ror
cwde
push
cmp
xchg
or
nop
add
stos
inc
xchg
lock
call
pop
test
outs
jns
or
inc
mov
mov
in
push
cmps
mov
jg
movs
cmp
pop
sbb
xlat
adc
mov
mov
lock
jns
sbb
sbb
push
adc
pop
add
mov
sub
mov
xor
loop
inc
adc
mov
jns
or
(bad)
popa
mov
inc
add
fmul
add
test
push
push
or
inc
aaa
sbb
mov
jg
repnz
scas
bound
dec
jae
ret
mov
adc
push
(bad)
enter
scas
shl
pop
push
scas
pop
pusha
xchg
or
pusha
mov
or
rol
inc
pop
popa
clc
iret
je
(bad)
mov
enter
and
adc
ja
test
xor
ja
ja
fwait
xor
pop
xor
xchg
sub
mov
je
sbb
in
sbb
popf
loopne
mov
mov
lock
mov
ret
aas
data16
cmp
jmp
data16
cmps
dec
xor
rol
jbe
pusha
adc
mov
cmps
lds
dec
jo
jae
stos
xor
sbb
xor
shl
inc
xchg
jmp
test
mov
push
dec
xchg
xor
pop
packuswb
sbb
mov
adc
mov
mov
inc
dec
imul
mov
jns
xor
das
xchg
loope
sbb
retf
ror
shl
data16
jae
push
int3
pop
pop
pop
punpckhbw
imul
fild
or
jne
packuswb
sub
ror
imul
push
adc
bswap
add
push
adc
adc
add
aas
repnz
popf
bound
bound
mov
inc
call
(bad)
in
xor
daa
jl
dec
mov
push
pop
icebp
adc
inc
mov
lea
lea
movs
add
rol
ins
jl
xchg
sbb
stos
sbb
jl
inc
xor
outs
adc
into
ins
pop
sub
outs
(bad)
outs
push
adc
cmps
in
pop
or
ins
iret
loopne
xchg
loopne
jge
in
fucomp
mov
rcr
mov
cmps
inc
pop
inc
push
ins
pusha
sub
push
jb
cmps
xchg
cmps
ins
and
or
xor
cmps
fwait
ss
mov
xchg
mov
adc
loop
push
fmul
push
xlat
stos
outs
mov
inc
mov
loopne
fld
adc
or
dec
pop
pusha
inc
adc
inc
pop
xor
or
xchg
mov
test
or
outs
xchg
pop
mov
add
adc
sbb
(bad)
or
dec
sbb
or
sbb
xlat
xchg
aas
xadd
jnp
scas
push
jl
add
sbb
mov
ret
ror
jle
cwde
add
adc
outs
(bad)
pop
add
xchg
or
cs
add
push
and
jo
test
je
adc
sub
mov
push
xor
xor
lea
call
sbb
push
(bad)
and
push
mov
dec
push
pop
ins
nop
(bad)
arpl
xor
retf
jae
arpl
sbb
(bad)
out
popa
push
mov
jg
shl
jg
cmp
inc
sbb
mov
idiv
call
inc
sub
or
idiv
mov
cmp
pop
aad
xchg
jae
mov
xchg
jae
invd
popa
pop
inc
pop
pop
pop
xor
xchg
loope
test
cmp
je
loope
test
in
test
fidiv
adc
in
mov
dec
jge
aad
lock
hlt
dec
jne
xor
cmp
lea
pop
mov
jo
add
call
in
mov
test
daa
sbb
mov
das
cs
ret
dec
clc
ret
repnz
aad
dec
or
cmp
adc
test
xlat
adc
je
aas
jne
das
je
mov
mov
(bad)
jae
dec
xor
mov
bound
and
fimul
and
adc
mov
(bad)
fdiv
jne
ja
push
adc
mov
fwait
or
xor
or
lahf
jbe
push
jo
pop
ja
lahf
ror
pop
inc
in
or
fs
xor
stos
xor
lock
sbb
popa
xlat
aad
dec
mov
sahf
lea
adc
mov
pushf
adc
push
lock
retf
inc
vmread
ins
pop
popa
jmp
call
les
add
sub
dec
dec
pop
mov
xchg
shl
pop
mov
xor
mov
in
rol
sbb
push
je
inc
fmul
xlat
cmps
adc
rol
fisub
loope
cmp
cmp
inc
cs
das
xlat
shr
push
xchg
in
xchg
or
adc
xchg
jo
pop
push
call
pop
xchg
push
popf
arpl
sub
cmp
daa
pop
jns
sub
pop
add
out
mov
pop
ret
cmps
dec
mov
pop
cmp
inc
mov
pop
mov
mov
sbb
push
and
out
movs
inc
arpl
and
xchg
daa
sbb
movs
and
ret
rol
shr
shl
sbb
cs
push
enter
jne
enter
and
inc
add
ins
and
dec
xor
stos
cmps
rcl
jo
xor
es
(bad)
not
mov
add
xchg
cmp
outs
adc
pop
inc
add
test
hlt
or
clc
or
mov
int3
fmul
add
jle
aaa
xchg
sbb
jns
pushf
das
(bad)
jecxz
and
add
inc
in
fnstsw
nop
nop
push
leave
and
push
mov
aaa
(bad)
mov
aaa
and
aaa
mov
dec
retf
aam
inc
popa
or
jnp
fdiv
ret
lea
lds
sub
outs
mov
cmc
cmp
aaa
ja
ret
ins
mov
pop
iret
jle
aaa
ror
add
cmps
neg
xor
ret
test
mov
test
cmp
das
xor
mov
mov
mov
dec
ror
add
(bad)
test
cmp
and
cmp
dec
arpl
mov
and
inc
cs
push
xlat
outs
cs
mov
push
xchg
xchg
add
or
ret
add
sbb
xchg
mov
add
mov
rol
dec
mov
sub
cmps
push
ins
pusha
out
or
cmp
jne
xchg
or
add
ins
test
push
dec
jecxz
loopne
push
pusha
adc
mov
or
(bad)
cmp
into
pop
jecxz
mov
iret
adc
loope
ror
adc
jns
inc
fcom
inc
push
pushf
arpl
pop
imul
add
push
and
add
push
outs
fmul
enter
mov
push
and
and
and
inc
dec
fadd
inc
mov
sahf
dec
aaa
and
sbb
mov
into
inc
adc
dec
lea
test
mov
iret
shl
fcomp
packsswb
lahf
bound
add
mov
mov
das
jmp
movs
mov
fdiv
ins
in
pop
aaa
sub
in
outs
cs
sbb
cs
call
push
adc
outs
sub
mov
fwait
mov
push
add
adc
add
jge
fist
std
mov
cmp
jge
rol
rol
dec
jno
xor
dec
fistp
(bad)
mov
or
add
iret
daa
xchg
mov
test
repnz
in
inc
jbe
je
lea
inc
fbld
jnp
mov
jl
lds
shld
fist
rol
retf
adc
xor
sbb
mov
out
fs
and
push
adc
jnp
inc
icebp
wrmsr
xchg
cmp
add
jnp
mov
add
dec
cld
jne
push
popa
mov
mov
aaa
push
add
or
arpl
addr16
in
add
jo
repz
cs
dec
(bad)
fisttp
adc
adc
add
fld
push
and
pavgw
inc
sbb
jno
xor
sbb
fwait
mov
mov
add
pop
inc
push
jmp
lea
push
or
adc
bound
and
inc
mov
jmp
loop
push
leave
test
shr
mov
std
add
cmc
mov
leave
lea
test
ds
xor
push
add
mov
pop
pop
das
sbb
mov
aas
fdiv
mov
jmp
out
push
cdq
dec
sbb
and
lods
mov
cmp
dec
aas
loopne
lods
test
or
pop
sbb
cwde
int3
push
pushf
cmc
arpl
ror
jnp
ds
add
mov
push
jmp
push
dec
adc
push
cmp
pusha
xchg
inc
push
enter
sbb
jge
and
rcr
push
add
hlt
add
mov
mov
push
inc
push
js
push
ins
(bad)
or
rol
add
xor
lock
(bad)
push
mov
pushf
mov
in
add
nop
or
add
adc
cwde
mov
sub
pop
call
adc
popf
ror
dec
call
xchg
std
pop
mov
or
cwde
mov
or
cs
push
add
push
mov
push
repz
mov
ins
jno
add
jle
dec
sbb
call
xor
dec
lods
xchg
shl
push
and
push
xor
pusha
push
(bad)
test
je
mov
xor
fild
pop
mov
pop
sbb
pop
cmps
mov
cwde
lods
cmps
or
test
push
mov
mov
fld
cli
and
lahf
add
mov
inc
addr16
ret
jo
hlt
aas
les
test
mov
arpl
jmp
push
addr16
mov
loop
or
pop
ret
mov
mov
cmp
lds
xchg
adc
fsub
test
ret
out
add
sub
in
pushf
in
nop
mov
add
inc
fcomp
add
xor
(bad)
loope
mov
lock
push
iret
add
iret
adc
adc
mov
popf
sub
and
jbe
push
sbb
mov
sub
adc
fwait
add
mov
cmc
shl
inc
mov
stc
inc
adc
mov
inc
mov
or
or
adc
add
or
and
int3
lods
adc
xlat
xchg
jb
or
add
pop
jb
or
adc
mov
mov
and
sbb
add
stos
xchg
sti
aaa
or
adc
cmp
int3
push
test
call
data16
call
mov
dec
sub
mov
jecxz
bound
scas
inc
add
mov
add
rol
fsub
mov
sub
mov
repnz
aam
sbb
jo
sbb
xchg
rcr
nop
pushf
in
xchg
xor
popf
sbb
in
xchg
(bad)
mov
sbb
mov
dec
pop
ins
cld
mov
or
loopne
punpckhbw
cmp
xor
sbb
outs
push
mov
movs
or
leave
sub
inc
mov
movs
mov
shl
lods
mov
pop
inc
repnz
add
lods
add
cmps
mov
pop
mov
lods
sbb
loopne
mov
mov
nop
add
push
mov
int
mov
pop
rcr
loopne
call
je
jmp
mov
or
out
inc
pop
and
mov
xchg
test
or
mov
repnz
mov
iret
xchg
sbb
xchg
jl
add
add
daa
ret
jl
mov
fwait
or
and
jb
or
daa
fwait
inc
sbb
cmc
cwde
and
push
add
pop
rol
adc
dec
daa
aaa
cwde
cmp
xchg
rol
and
cwde
mov
or
stos
and
mov
adc
push
cmps
or
cmps
mov
adc
push
adc
out
push
out
dec
call
pop
push
dec
mov
mov
or
cmc
and
and
adc
sub
adc
dec
test
das
xchg
pushf
dec
add
sub
(bad)
and
dec
fadd
push
cdq
push
inc
shl
xchg
fisub
push
mov
mov
ret
(bad)
add
pop
scas
leave
mov
pop
xchg
dec
mov
xor
(bad)
sbb
adc
fcom
movs
jl
push
pusha
inc
hlt
cmp
jle
push
cmp
or
cwde
push
jmp
push
or
pop
mov
std
inc
lods
je
addr16
test
call
shl
pop
add
jp
adc
mov
push
adc
add
lock
ror
mov
cli
lea
push
std
cmps
mov
cmp
into
add
add
daa
mov
fmul
jne
inc
or
inc
or
mov
push
sbb
pop
or
aam
stos
push
push
ret
sub
cmp
test
and
mov
and
sub
add
mov
adc
or
mov
add
sub
mov
cdq
and
push
and
or
sbb
(bad)
ds
jne
adc
pop
push
(bad)
std
push
rcl
lahf
inc
test
daa
adc
je
and
lsl
adc
sub
push
sbb
xor
mov
js
rcr
push
cmps
push
repz
adc
into
push
or
mov
sub
push
pop
adc
dec
sub
mov
call
adc
push
push
mov
xor
xchg
inc
dec
bound
or
iret
les
mov
nop
outs
(bad)
test
cmp
mov
daa
cmp
mov
and
pusha
and
push
adc
movs
push
jmp
pop
sub
or
and
sub
dec
lods
iret
push
outs
and
pushf
push
sub
aaa
push
and
popa
adc
and
outs
inc
fsub
and
xchg
pushf
or
out
cld
or
add
pop
adc
sbb
loopne
loopne
push
jo
xor
scas
mov
test
call
scas
bnd
movs
fs
xchg
jns
(bad)
adc
add
add
mov
rcr
pushf
in
cmps
sbb
xor
adc
and
fdiv
cmp
pop
loopne
loopne
cwde
mov
fmul
mov
add
cmps
mov
out
lahf
push
lahf
cmp
js
inc
sbb
push
lahf
lods
lahf
mov
cmp
add
pushf
or
jg
adc
lds
ss
loopne
jg
mov
mov
jnp
and
xor
pop
stos
mov
push
stos
sub
pop
and
add
stos
adc
stos
jo
or
and
stos
fsub
dec
dec
xchg
sub
nop
adc
in
test
xchg
and
or
je
adc
mov
cmp
out
sub
adc
fwait
add
out
cmc
shl
or
adc
out
inc
mov
or
lods
adc
mov
out
cmp
push
sbb
mov
sbb
add
sbb
lods
out
jo
mov
lods
push
pop
xor
out
xor
dec
pop
push
mov
push
add
out
dec
in
leave
dec
mov
sbb
mov
sub
test
int3
clc
es
(bad)
call
push
or
or
add
sub
sub
dec
mov
mov
(bad)
sub
ret
sbb
jmp
xchg
xor
cs
pop
cmp
add
add
inc
add
push
pusha
adc
or
jne
lahf
(bad)
push
add
push
scas
imul
lea
push
xchg
mov
cmps
and
add
mov
mov
xchg
push
and
lahf
sbb
cwde
mov
dec
stos
add
pop
add
cmps
add
dec
(bad)
cmp
or
mov
sub
add
push
sbb
neg
daa
out
add
and
fisubr
and
dec
adc
push
mov
inc
mov
pop
pop
xor
addr16
sub
loopne
push
loopne
jno
dec
fist
add
div
xor
mov
int
cld
mov
xlat
fild
pop
add
dec
and
test
mov
adc
loopne
(bad)
push
leave
sub
and
or
inc
adc
and
mov
(bad)
push
pusha
add
js
xor
rcr
retf
sub
adc
pop
and
mov
and
xchg
data16
mov
lods
cmps
sbb
or
std
mov
xor
pop
mov
cmovnp
hlt
out
or
xor
outs
out
xchg
xchg
cmp
mov
ss
mov
mov
(bad)
cmp
adc
inc
mov
cld
int
pop
pop
loopne
and
mov
sbb
add
dec
mov
push
daa
push
or
inc
jmp
and
call
pop
sub
call
jo
sub
jo
nop
pop
mov
jb
sub
test
ret
adc
inc
(bad)
and
sbb
lock
sub
addr16
fsub
ins
inc
ror
popa
test
pusha
add
cmp
cwde
ret
adc
push
repnz
daa
cmp
jl
push
ret
int
and
push
lahf
xor
sub
lahf
(bad)
xor
js
js
int3
rcr
inc
mulps
lahf
ret
in
add
push
lahf
inc
repnz
dec
outs
aam
sub
inc
lahf
jne
mov
push
sbb
sub
add
lahf
ret
adc
jg
xor
mov
xchg
lahf
ss
loopne
loop
jg
adc
nop
pop
jnp
cmp
or
sub
(bad)
(bad)
lahf
stc
add
pop
push
mov
and
pop
dec
dec
repnz
mov
(bad)
(bad)
out
push
and
enter
and
out
test
fld
or
je
mov
rol
push
out
add
loop
out
xor
sub
and
add
sub
mov
out
out
das
and
jl
test
nop
push
dec
fsubr
push
push
push
push
lods
out
xor
sbb
scas
nop
push
enter
leave
retf
xchg
int3
aam
cmp
cmp
int
nop
pushf
in
int
pop
mov
int
int
sub
shl
xor
lea
mov
movs
add
pop
add
rcr
push
adc
pop
cld
sub
js
ss
pop
sub
jno
in
retf
push
pop
add
jo
data16
xor
sub
add
pop
add
ins
and
or
mov
add
aad
xchg
add
cmp
jg
sub
xchg
or
and
xchg
mov
jns
cmp
inc
sbb
adc
das
push
cmp
out
out
mov
and
and
or
xchg
xor
movs
adc
aam
icebp
mov
push
inc
mov
mov
pop
xlat
ins
adc
and
push
add
rol
inc
add
aam
rcl
add
mov
push
add
rcl
xor
mov
add
or
iret
adc
adc
nop
nop
or
and
stos
cmp
pop
lahf
pushf
or
push
sub
fdiv
ror
xchg
in
cmp
pop
enter
gs
add
fcomp
add
aas
inc
add
push
and
adc
movs
add
pop
popf
rol
rcr
lea
cdq
mov
inc
xor
cs
or
mov
mov
es
and
add
and
inc
xor
lds
lods
and
cmps
pop
cmps
test
test
rcr
pusha
mov
inc
or
mov
js
mov
jp
sub
scas
pop
mov
test
cwde
scas
fadd
lar
lods
dec
scas
fldenv
ins
and
xor
fsub
scas
fdiv
jbe
xor
aas
stc
movs
mov
inc
mov
xchg
(bad)
sbb
pop
or
bound
push
xchg
xor
cmp
inc
lea
jo
push
inc
mov
add
mov
nop
outs
dec
add
adc
adc
add
ror
mov
movs
shl
add
repnz
push
push
loopne
mov
cmp
js
imul
add
sar
movs
xlat
mov
(bad)
pop
pop
pop
xchg
in
add
adc
movs
inc
mov
popa
add
or
es
push
add
add
or
sub
or
dec
jno
sar
dec
daa
adc
lock
mov
push
and
jl
xor
sub
cmp
jo
into
fidivr
jo
call
xchg
jb
loopne
pandn
and
dec
dec
jl
fsubp
jecxz
add
fidivr
loop
cmps
xor
ror
out
and
adc
hlt
in
adc
test
cmp
out
loopne
sub
out
or
and
inc
stos
add
push
out
adc
(bad)
out
or
xor
mov
mov
add
cmps
mov
repz
xchg
dec
out
or
outs
lea
sbb
nop
lock
sbb
inc
scas
xchg
fcomp
push
punpckhdq
xchg
fistp
xor
push
bound
mov
push
add
add
fist
ja
loope
cmp
mov
pop
mov
(bad)
mov
ja
jo
aas
fsub
lea
mov
js
xchg
push
add
ins
mov
mov
sub
pop
fsubr
cmp
ror
shl
add
imul
maxps
lds
adc
xor
dec
pop
push
dec
loop
mov
inc
cs
mov
push
inc
add
dec
pusha
fstp
push
mov
add
mov
leave
add
pop
adc
xchg
ss
push
(bad)
push
rol
add
add
not
dec
bound
xor
(bad)
aaa
inc
sbb
or
lock
shl
dec
adc
fcom
sbb
add
or
ins
pop
inc
pop
add
dec
enter
pop
pop
dec
sub
xchg
add
dec
xlat
mov
adc
test
and
xchg
mov
add
mov
clc
mov
popa
push
lock
aaa
adc
xchg
dec
lods
test
pmuludq
mov
push
(bad)
inc
sbb
pusha
rol
out
dec
daa
call
ins
mov
dec
push
es
or
pop
inc
push
mov
mov
mov
xchg
pop
pop
addr16
or
int3
addr16
add
xlat
(bad)
call
push
add
(bad)
push
add
daa
push
inc
outs
ins
jo
jb
jae
jg
jmp
cmp
arpl
push
or
je
ins
gs
outs
outs
imul
jae
not
xor
adc
mov
add
push
jns
je
out
call
cs
outs
and
gs
jne
je
add
(bad)
inc
inc
aad
int
int3
add
push
(bad)
add
dec
hlt
pop
cmp
adc
ror
cmp
loopne
dec
call
push
push
popa
inc
out
inc
pop
sahf
add
add
jbe
popa
jo
mov
add
push
jo
jbe
paddb
sbb
call
int3
and
cwde
iret
(bad)
(bad)
movs
inc
push
xor
mov
clc
mov
ins
fld
in
inc
add
push
add
retf
and
xor
xor
test
or
mov
adc
das
sahf
addr16
jae
or
gs
data16
mov
add
adc
add
fsubr
or
arpl
pcmpgtd
push
addr16
jp
fist
data16
or
inc
adc
pop
dec
jp
adc
mov
inc
mov
sub
repz
cmp
ins
sub
je
or
push
imul
and
pop
aad
cmp
xor
jno
ins
sub
div
pop
adc
mov
xchg
mov
test
cmp
cmp
div
adc
mov
hlt
push
jnp
add
or
mov
outs
movsx
pop
rcl
clts
xor
fild
inc
jb
popa
jns
popa
outs
popa
addr16
ja
jo
adc
push
out
enter
push
inc
movs
retf
adc
inc
jb
dec
outs
fs
or
mov
outs
and
add
mov
jns
fcmovnu
sbb
mov
xor
out
sbb
fidiv
inc
imul
mov
sub
add
pop
xor
mov
rol
sbb
out
adc
cmp
cmps
scas
fadd
dec
inc
je
inc
or
push
cmp
xor
sbb
dec
or
in
loopne
scas
push
add
ins
xchg
push
popa
imul
rcr
mov
inc
pop
add
push
(bad)
outs
push
iret
add
mov
aas
mov
dec
out
push
adc
inc
sbb
mov
cmp
add
dec
outs
or
ret
jno
jns
int3
out
popa
mov
xchg
sbb
jb
jnp
fwait
call
dec
mov
ja
into
push
pop
rcl
xchg
xlat
xchg
popa
pop
ds
js
sbb
add
pop
scas
sub
adc
adc
ss
push
scas
sbb
pop
jg
or
inc
das
bound
mov
xor
cwde
push
jg
add
pop
push
sub
daa
fmul
mov
or
mov
femms
ins
push
xor
mov
or
jo
add
push
lea
mov
int
int
inc
add
stos
or
or
lea
pop
push
cmp
xor
mov
lods
punpckhdq
outs
jne
inc
rol
bound
inc
add
adc
imul
mov
inc
or
outs
fbstp
inc
ins
jo
inc
pop
arpl
add
or
pop
or
dec
es
push
loop
out
mov
mov
mov
and
imul
js
nop
push
add
push
(bad)
aad
inc
stc
dec
cli
in
push
call
inc
push
and
arpl
or
jb
(bad)
add
outs
push
inc
jb
sbb
jo
pop
and
xchg
mov
inc
xchg
add
adc
add
push
nop
pop
add
ins
inc
push
shl
mov
mov
hlt
mov
mov
mov
push
push
test
addr16
inc
jne
loopne
pop
add
push
jl
stos
push
sbb
das
outs
cmps
loopne
mov
push
and
sar
mov
pop
mov
call
mov
push
enter
jmp
inc
sub
xchg
neg
mov
and
mov
mov
mov
imul
int
test
sub
xchg
popf
sub
or
inc
test
shl
repnz
dec
cli
rdpmc
adc
lods
minps
ficom
js
in
rcl
fwait
inc
movd
idiv
adc
and
inc
jns
pushf
mov
cli
das
adc
mov
adc
daa
and
push
daa
dec
test
pop
pop
inc
fist
ret
or
aas
(bad)
je
setb
les
icebp
test
push
xor
inc
push
and
add
dec
mov
mov
xchg
cwde
sub
in
dec
dec
arpl
cmp
(bad)
or
inc
mov
mov
add
shr
add
popf
fdivr
jae
leave
movs
mov
outs
jns
and
add
adc
mov
rcr
add
addr16
push
adc
or
or
inc
push
popa
jg
fwait
bound
jg
dec
jg
and
in
rcr
inc
inc
fs
mov
fnstsw
push
popa
ins
jne
arpl
pusha
xor
jle
jp
jno
sub
sub
pop
mov
outs
add
or
push
adc
pop
sub
ja
inc
loope
ja
dec
sahf
movs
mov
sbb
in
cmc
enter
inc
imul
inc
movs
adc
add
in
xchg
or
or
mov
das
leave
sbb
lea
gs
shr
imul
xchg
fidiv
sbb
push
aam
dec
jae
imul
push
xchg
aaa
dec
imul
adc
jno
ffreep
push
movs
shl
xor
lea
mov
inc
add
xor
xor
imul
xchg
in
sbb
pop
jg
pop
inc
js
jo
in
sub
gs
push
ja
sub
rol
pop
aas
add
dec
add
or
pusha
push
mov
arpl
mov
push
rcr
(bad)
inc
sub
or
dec
cld
mov
adc
dec
gs
xor
xor
jae
dec
popf
fld
sbb
shr
dec
popa
push
xor
inc
mov
sbb
es
pushf
add
sub
or
ret
aad
aaa
jae
pop
adc
(bad)
call
adc
dec
popw
push
mov
sbb
or
mov
jns
xor
(bad)
add
(bad)
push
outs
fistp
sub
inc
pop
mov
pop
dec
ins
or
inc
fs
and
dec
or
dec
xor
sub
and
mov
mov
mov
sbb
mov
push
jb
shl
imul
fisubr
cmp
pop
dec
dec
loopne
in
mov
adc
pop
adc
or
ins
fcom
outs
pop
add
in
fmul
pop
imul
je
xor
in
inc
loope
or
call
add
mov
int3
cmp
add
cmp
daa
pop
or
mov
movs
out
mov
inc
xchg
pop
push
sub
popa
in
arpl
in
cdq
add
add
fwait
inc
(bad)
icebp
xchg
push
aas
add
or
mov
ret
jg
rcl
sbb
cmp
and
adc
pop
inc
add
mov
sub
cmps
mov
mov
dec
sbb
loopne
das
out
push
pop
shr
or
psubd
(bad)
sbb
sbb
test
ja
inc
loop
ret
inc
stos
adc
pusha
add
ja
les
outs
movs
or
ja
add
jmp
sbb
sahf
bndldx
mov
xlat
fwait
aaa
imul
pop
fadd
inc
xor
pop
pop
pop
mov
es
les
sbb
test
pop
(bad)
and
inc
sub
add
sub
mov
sub
add
retf
nop
out
mov
div
into
test
mov
lods
cmp
mov
es
pop
sub
js
das
aad
bound
and
(bad)
xchg
xor
inc
push
push
ficom
and
cmp
mov
cmc
test
das
sbb
push
lock
data16
inc
aas
pusha
mov
mov
mov
push
rcl
aam
or
into
push
pop
adc
sub
push
imul
call
test
dec
push
mov
or
test
push
jg
leave
push
lock
(bad)
jecxz
(bad)
push
xor
jo
pop
mov
in
push
and
xchg
cmp
jns
loopne
and
cmp
aad
es
mov
sahf
pushf
(bad)
or
pop
mov
jmp
daa
daa
daa
daa
jge
jmp
jno
mov
repz
aas
cmpps
fisttp
fcmovnu
(bad)
add
adc
es
test
cli
mov
sub
dec
pushf
mov
cwde
mov
pushf
cmp
mov
cmps
mov
inc
mov
enter
clc
jae
fst
mov
and
or
sti
loope
test
xchg
imul
add
dec
int3
sbb
mov
pushf
cmp
mov
adc
jp
mov
das
mov
sbb
cmp
jo
mov
dec
jne
(bad)
fadd
call
push
mov
sbb
and
cmps
add
jae
pushf
retf
mov
and
nop
add
jae
pushf
pop
lds
or
fmul
xchg
int
push
lea
dec
sub
pop
loop
bound
dec
pop
les
pop
loopne
mov
sbb
mov
test
pop
push
pushf
dec
adc
pop
or
and
pushf
sbb
jge
inc
loop
adc
(bad)
pop
popf
or
add
pop
push
push
mov
xchg
dec
mov
add
cmp
xor
pop
mov
push
sub
sub
mov
test
pop
ins
lea
pusha
shl
push
xchg
dec
imul
test
push
adc
or
movs
ja
outs
lods
aam
or
xchg
jb
xchg
push
outs
stc
cmps
test
sbb
push
cmps
(bad)
xchg
inc
fwait
push
dec
movs
loope
femms
sub
adc
pop
mov
sbb
int3
in
xchg
push
mov
sub
push
aaa
fucomip
pusha
test
ins
jbe
das
pop
loopne
dec
pop
imul
stos
cmp
mov
sbb
add
and
pop
retf
xor
mov
mov
jno
int
xchg
or
add
ret
mov
jo
and
add
pop
cmps
mov
lahf
fstp
jne
fld
dec
xor
ds
add
adc
and
(bad)
jmp
dec
das
gs
xchg
pusha
fstp
imul
(bad)
jmp
pushf
push
add
mov
pop
jmp
fdiv
fimul
sub
cmp
movs
rcl
test
add
aad
mov
mov
call
or
ins
gs
pop
ret
or
xor
in
mov
fdivp
adc
cmps
jne
ret
popf
mov
pop
add
xor
mov
imul
and
xchg
push
add
xor
enter
loop
mov
mov
lods
mov
or
xchg
dec
sub
leave
or
mov
add
lods
mov
imul
in
(bad)
or
xor
mov
pop
out
xchg
fisttp
xchg
fdivr
in
ss
push
ror
inc
sahf
add
cmp
and
cmp
rcl
cmp
enter
test
aam
sbb
in
push
jb
jb
pop
and
daa
cmp
bound
or
fimul
cmp
xor
xor
iret
jge
push
psrlw
jmp
pop
or
xchg
jno
aad
push
sub
adc
mov
and
mov
and
pop
push
inc
(bad)
aad
adc
sar
aad
push
loope
dec
adc
bound
dec
in
mov
pop
test
and
or
out
fiadd
(bad)
aad
inc
or
or
and
das
aad
mov
push
push
sbb
mov
mov
or
inc
sub
retf
mov
and
jno
dec
(bad)
or
mov
mov
jae
adc
add
test
push
xor
adc
aad
call
lods
fld
inc
(bad)
bound
(bad)
aad
lods
aad
and
cmp
mov
sbb
and
mov
push
adc
or
push
adc
les
xor
dec
sti
(bad)
adc
jns
pusha
add
bound
retf
sbb
xor
(bad)
and
or
(bad)
sbb
aad
lods
test
mov
pop
inc
loopne
xchg
les
add
and
push
imul
and
dec
aaa
push
js
inc
in
(bad)
lods
inc
adc
aas
out
or
and
cmp
xchg
dec
lods
push
xor
inc
mov
fadd
sub
scas
fstp
shr
xor
cmp
dec
or
aad
jb
or
cwde
and
dec
xor
fld
test
out
clc
cmp
pop
push
das
cwde
push
movs
push
xor
dec
aas
mov
adc
popa
adc
jo
mov
or
cmp
dec
inc
mov
shl
mov
out
cmps
jb
dec
bound
adc
adc
push
test
cli
push
cdq
(bad)
out
pusha
jae
and
sti
add
add
xor
pusha
jnp
lea
push
fucomi
xor
inc
mov
rol
das
fst
mov
mov
push
mov
or
or
(bad)
std
outs
dec
jns
jo
lods
push
xchg
mov
cmps
jnp
adc
and
inc
fdiv
xchg
and
pusha
retf
xchg
and
cmp
mov
inc
bound
outs
jge
dec
scas
sti
mov
mov
dec
fisttp
add
pop
icebp
fimul
seto
pushf
jmp
out
mul
(bad)
das
fisttp
out
pop
lock
lods
inc
adc
je
dec
ds
add
ins
push
out
jne
mov
arpl
sub
mov
dec
mov
mov
jno
mov
add
sbb
push
adc
lds
or
jg
addr16
add
lods
push
inc
adc
inc
add
sbb
sbb
sub
and
add
call
mov
pusha
ret
call
lds
ret
test
add
sbb
sub
add
pop
and
xor
and
ret
aaa
inc
sub
outs
lods
sub
loopne
add
sub
lods
(bad)
test
out
(bad)
dec
popa
pop
rcr
enter
jo
or
cmp
jns
jb
jb
jmp
js
adc
cmp
mov
xor
inc
mov
scas
pop
dec
cmp
cmp
dec
xchg
(bad)
neg
inc
js
dec
inc
sahf
pushf
sti
xor
ins
dec
dec
mov
push
aas
jbe
ss
and
inc
cmp
add
es
push
add
lds
cmps
mov
dec
adc
push
pop
or
add
les
jno
repz
adc
inc
add
pusha
xor
mov
sar
sbb
add
add
sbb
inc
pop
ins
push
test
pop
cdq
and
inc
cwde
cmp
pop
add
push
mov
pop
sub
add
add
jo
out
add
add
or
test
pop
xchg
das
sbb
inc
(bad)
leave
fwait
add
xor
gs
inc
add
pop
pop
or
dec
je
or
add
mov
pop
jno
pop
inc
add
or
add
pop
xor
adc
adc
pop
push
and
fiadd
pop
gs
inc
add
add
inc
or
mov
rcr
mov
test
or
mov
test
test
pop
pusha
add
test
out
add
mov
mov
shr
mov
dec
and
inc
add
stos
adc
add
add
pop
mov
sub
add
pusha
xor
or
mov
lods
xor
pop
or
add
mov
or
mov
add
inc
dec
mov
xor
xchg
xor
aaa
inc
je
mov
add
jecxz
add
mov
mov
mov
in
mov
sbb
out
push
add
loopne
(bad)
and
rol
jp
pop
fist
adc
bnd
xor
or
xchg
dec
nop
or
div
add
or
push
mov
push
inc
add
call
mov
add
sbb
jmp
add
stos
cmc
adc
fadd
cmps
test
outs
nop
cmp
clc
mov
and
add
sub
xlat
addr16
in
push
mov
pop
les
lods
mov
orps
jp
pop
jbe
cli
icebp
orps
ror
add
sub
add
pop
adc
retf
and
pop
test
mov
mov
mov
sub
shl
add
das
iret
sbb
(bad)
add
pop
push
enter
or
push
popf
inc
xor
dec
std
push
(bad)
aad
mov
push
add
call
sbb
psrld
push
pop
adc
sbb
mov
xor
pop
pop
push
pop
ins
imul
ret
sub
dec
bound
pop
dec
adc
mov
cmp
fcomp
push
add
stos
push
sbb
fsub
das
outs
pop
xlat
xchg
cli
jg
mov
inc
inc
leave
adc
push
pushf
clc
adc
jl
loopne
jne
xlat
xchg
or
(bad)
mov
cld
push
xlat
xor
imul
je
jecxz
gs
fdivr
cs
test
mov
mov
sub
(bad)
idiv
(bad)
aam
fwait
push
pop
pushf
pushf
pushf
int3
(bad)
jp
cli
dec
dec
inc
sahf
inc
pop
xchg
loopne
pusha
daa
daa
daa
and
outs
mov
daa
cmp
bsr
inc
sahf
add
and
dec
mov
daa
daa
daa
daa
fwait
aad
and
push
mov
(bad)
es
pop
push
pop
test
and
punpckhdq
lds
push
es
sbb
xchg
inc
cmp
dec
dec
bound
mov
seta
bound
xchg
adc
sub
xchg
sbb
mov
lds
inc
and
xchg
gs
ins
push
sub
test
mov
les
(bad)
xchg
adc
add
xchg
jae
nop
test
sbb
mov
cmc
or
adc
xchg
imul
fwait
gs
and
adc
and
push
lods
xchg
iret
adc
xchg
pop
add
or
xchg
push
les
mov
xchg
adc
mov
push
test
inc
push
mov
adc
xchg
and
and
imul
push
dec
lods
imul
and
mov
mov
dec
aas
cmp
adc
sbb
mov
imul
mov
(bad)
aas
or
aas
adc
xor
sub
imul
adc
add
inc
jns
les
dec
rcl
adc
xor
mov
dec
mov
mov
call
bound
retf
pop
cmp
pushf
(bad)
aas
sbb
popa
rcl
les
imul
sbb
push
mov
rcr
sub
add
mov
xchg
xchg
fnstcw
or
push
push
sbb
add
push
push
out
inc
test
and
in
out
lods
out
or
dec
aaa
jp
std
xor
jo
cs
outs
ja
dec
push
dec
inc
lea
aam
ds
(bad)
jb
and
sub
outs
(bad)
mov
push
cmovns
pop
mov
sbb
mov
push
cmp
call
ds
cmc
outs
cmp
xor
jb
dec
bound
adc
adc
sbb
pop
push
cmps
fdivr
push
mov
push
mov
add
jo
out
test
add
xor
push
inc
outs
call
js
cdq
add
ins
jbe
imul
das
mov
out
stos
lock
push
aam
(bad)
movd
aam
lds
gs
pop
pop
sub
add
pop
test
shl
retf
mov
sub
out
pop
adc
mov
outs
cmp
push
cmovnp
lods
push
add
add
cmp
dec
and
out
das
pop
stos
pop
add
aad
ins
pop
add
mov
cmp
dec
icebp
push
ja
push
(bad)
pop
adc
mov
outs
enter
stos
outs
jge
loopne
(bad)
mov
lahf
and
push
loop
push
cwde
outs
test
xor
xor
sub
rol
pusha
add
adc
ins
xchg
or
adc
push
ins
dec
inc
adc
sub
add
add
pushf
pop
adc
cmps
loop
or
sbb
in
xor
das
div
call
clc
inc
into
out
int
adc
neg
not
sub
ret
adc
or
xor
or
sub
inc
sbb
jb
(bad)
mov
retf
arpl
pushf
(bad)
add
ror
push
push
fcomp
fucom
cmp
scas
movntq
inc
sahf
and
mov
dec
cmp
loop
xchg
xchg
daa
pop
jne
cwde
leave
leave
enter
jbe
(bad)
in
fs
ja
imul
in
and
jns
jb
stos
shl
sub
sar
sbb
sti
js
push
pop
push
sub
inc
adc
push
jecxz
js
add
add
mov
rol
add
add
push
push
add
adc
add
cmps
push
and
and
xor
repnz
add
iret
sub
or
inc
xor
push
adc
push
mov
push
cdq
lods
lds
add
push
adc
pop
mov
jae
out
push
adc
push
xchg
or
loopne
or
cmp
pop
xchg
das
mov
fwait
or
add
push
add
and
add
dec
je
and
add
mov
push
jno
pop
inc
add
adc
adc
xor
or
push
add
inc
dec
xchg
push
nop
loop
jb
xchg
pop
shr
add
icebp
push
xor
scas
mov
and
adc
jge
add
jo
mov
ins
xchg
add
jge
movs
push
push
inc
dec
jg
push
inc
jbe
out
xchg
pop
mov
lds
cmp
adc
stos
dec
test
stos
test
imul
test
or
test
or
add
mov
test
jns
add
sub
dec
mov
or
rcl
add
loope
lock
fadd
inc
sub
mov
sbb
mov
mov
or
inc
add
add
in
adc
add
call
adc
hlt
mov
ror
je
int3
sbb
add
lds
xor
out
mov
js
repnz
push
mov
inc
pusha
add
call
add
sub
push
or
(bad)
and
add
sub
or
clc
cs
rcl
aas
inc
push
rol
mov
push
adc
adc
pop
ja
popf
mov
ds
ja
mov
ss
(bad)
mov
inc
into
aaa
and
int3
or
or
loope
inc
pop
add
add
loope
sub
cwde
adc
inc
(bad)
jno
data16
lahf
pop
cwde
in
push
setno
mov
and
add
inc
jg
push
lods
adc
ficomp
add
sbb
sub
add
xchg
rcl
sub
sbb
(bad)
push
xlat
ins
pop
push
mov
in
push
add
sbb
fisttp
das
(bad)
repnz
push
mov
add
pusha
push
adc
cmps
mov
enter
jo
jmp
or
sbb
pop
pop
push
pusha
xchg
inc
xchg
lds
cmp
cmp
popa
cmp
add
cmp
(bad)
cmp
push
neg
in
rol
in
(bad)
pusha
push
int3
push
push
push
movs
pop
aaa
mov
imul
mov
les
pop
adc
imul
and
ss
or
pop
xchg
aaa
scas
test
xchg
mov
and
prefetch
outs
push
ss
push
xor
jecxz
ss
push
jae
test
pop
sbb
jb
rcl
pop
mov
cmp
sahf
pushf
pushf
mov
or
dec
mov
pop
mov
daa
daa
daa
mov
xchg
daa
xor
enter
mov
jno
addr16
mov
arpl
in
ss
lahf
push
es
(bad)
cmps
mov
push
mov
add
dec
dec
mov
ror
add
dec
(bad)
dec
and
sti
loope
loopne
mov
sbb
inc
xor
gs
loope
mov
jne
out
loope
or
repnz
inc
mov
cmps
mov
ins
stos
push
mov
mov
inc
cdq
hlt
mov
push
test
or
and
add
and
loope
cmp
loope
add
or
dec
loope
add
cmp
cmp
push
or
loope
inc
inc
add
cmps
add
shl
jne
inc
pop
xor
xchg
loop
xor
test
int
gs
int
sbb
add
push
mov
sbb
test
sub
test
cmps
push
div
rcr
and
add
pushf
pop
mov
dec
push
test
mov
dec
sub
pushf
dec
mov
imul
adc
adc
add
ret
push
mov
inc
pushf
jb
mov
mov
loopne
inc
or
mov
movs
or
xor
nop
push
adc
jno
sbb
lods
mov
mov
stos
mov
sub
xchg
mov
aam
xchg
jae
movs
jecxz
cmp
xchg
mov
sbb
xor
ja
pop
and
(bad)
cmps
or
and
or
cmp
pop
push
jmp
es
inc
and
adc
and
sub
leave
and
int3
sbb
jmp
popf
or
add
test
push
or
mov
mov
(bad)
pop
jl
cmp
add
(bad)
aad
frstor
add
nop
pop
cmp
pop
push
jge
scas
jmp
aas
jne
paddb
daa
cmps
inc
add
jno
inc
jo
rol
pop
push
adc
gs
int
add
test
retf
mov
cmps
pop
cmp
adc
mov
sub
mov
mov
push
push
test
jnp
ins
lahf
sub
popa
sub
mov
pop
das
jno
mov
hlt
push
pop
out
jmp
rol
add
pop
lahf
sti
rcr
pop
popf
fcomp
ror
push
or
sub
sub
dec
cmps
imul
loope
cld
xchg
leave
adc
sbb
add
pop
sub
pop
pop
push
pusha
xchg
mov
loope
jbe
sbb
mov
lods
push
cmp
(bad)
xor
push
add
push
pop
mov
adc
push
add
xchg
outs
xor
addr16
jne
adc
ficom
data16
jnp
aam
inc
push
outs
sbb
jne
or
jns
push
outs
lods
cmp
push
dec
test
sar
outs
jmp
cdq
in
xor
dec
test
test
push
outs
jmp
mov
sub
pushf
mov
ror
inc
sahf
pushf
jmp
daa
and
lds
call
(bad)
adc
pop
enter
movs
leave
in
adc
outs
movs
repnz
fs
popf
push
ja
push
addr16
idiv
sahf
(bad)
mov
scas
pop
fmul
pop
adc
jno
hlt
test
push
call
jns
lods
cmps
pop
xchg
sub
out
sub
jns
test
and
je
sub
jne
inc
mov
enter
dec
fst
sbb
jns
loope
test
mov
cmps
jns
sbb
or
cmps
jns
ins
add
dec
int3
sbb
or
adc
push
push
sub
push
inc
adc
gs
pop
dec
adc
dec
jns
push
cmp
adc
adc
xchg
aam
push
cmp
loopne
jae
pusha
nop
cmp
xchg
jns
add
jns
jmp
sub
inc
xchg
sbb
test
inc
pushf
pop
ins
sar
cmp
jns
dec
push
test
ins
add
push
mov
adc
mov
add
adc
push
add
inc
(bad)
sti
(bad)
jns
add
jns
adc
xchg
dec
bound
test
sbb
xor
sbb
adc
pop
pushf
mov
jns
mov
(bad)
mov
fsub
scas
jno
loopne
xchg
adc
xchg
jns
es
imul
test
imul
lods
lock
aam
aam
mov
or
adc
jne
mov
sub
outs
jno
fild
or
pop
push
bound
shr
push
aaa
sbb
jb
retf
ds
jb
mov
into
add
hlt
in
or
aas
add
call
dec
fist
add
ror
call
inc
movs
mov
cmp
sbb
sub
jnp
outs
lods
dec
bound
adc
mov
xor
pop
mov
xchg
and
sbb
push
leave
and
pop
add
mov
dec
push
xor
sub
inc
mov
mov
mov
pop
fsubr
jge
cmp
jmp
lods
cmp
pop
mov
pop
xlat
mov
push
push
xchg
mov
mov
nop
mov
add
adc
sub
int
and
stos
retf
sub
test
sbb
push
sti
mov
add
fwait
jmp
lods
adc
addr16
push
add
jl
push
test
add
das
lds
es
mov
test
xchg
lods
das
mov
pusha
mov
mov
cld
push
push
push
adc
push
pop
inc
mov
cmp
jno
cmp
mov
loopne
in
sti
loopne
add
sub
pop
in
adc
add
adc
add
push
ins
pop
aaa
in
fiadd
add
imul
jae
fld
cmp
dec
cwde
xor
mov
out
fiadd
mov
loope
push
les
pop
unpckhps
call
add
add
pusha
ret
jo
dec
add
add
dec
outs
cmp
fninit
nop
push
dec
jge
push
cmp
dec
mov
xor
call
packuswb
fbld
lods
ins
mov
or
inc
sahf
pushf
jecxz
scas
arpl
inc
mov
mov
jmp
mov
enter
ins
mov
leave
leave
leave
push
jne
cmc
aas
cmp
into
ins
mov
jnp
lods
pop
cmp
add
push
sbb
inc
je
dec
dec
jmp
push
add
pushf
mov
daa
aad
adc
pop
adc
les
adc
mov
loopne
xor
adc
mov
adc
push
cld
(bad)
mov
inc
imul
ins
or
mov
cdq
sbb
stos
sbb
mov
inc
mov
push
add
mov
cmp
mov
inc
das
leave
pusha
inc
xor
fwait
gs
inc
add
mov
add
add
and
mov
jno
add
shl
push
enter
add
xchg
or
mov
icebp
push
cmp
pop
rcl
aas
push
mov
mov
sbb
or
cmp
mov
ss
rol
dec
xor
mov
dec
jg
add
mov
pop
rol
pop
and
push
sti
cmp
sti
add
adc
sti
inc
add
imul
mov
(bad)
std
sti
add
bound
sti
xor
sti
jge
mov
add
inc
or
pop
sti
inc
add
and
add
or
or
or
hlt
or
arpl
sti
xchg
xor
add
push
add
sub
inc
lea
pusha
xlat
push
mov
in
aam
pusha
shl
imul
in
test
xor
add
mov
or
mov
mov
fisub
mov
sub
or
arpl
add
loope
pop
push
push
arpl
mov
jns
rol
and
push
nop
mov
adc
or
adc
aaa
push
mov
sbb
(bad)
unpcklps
mov
repz
add
push
lods
mov
(bad)
push
lahf
jp
pop
pop
add
xadd
or
push
cmp
test
jo
(bad)
adc
pop
or
adc
add
test
les
inc
scas
pop
aad
adc
repnz
mov
fiadd
inc
movs
call
stos
es
jae
cmp
cmp
mov
inc
cmp
push
push
int3
cmp
push
mov
or
pop
call
pop
adc
stos
jns
sub
out
push
ja
outs
sub
add
xchg
xor
xchg
and
and
test
inc
mov
pusha
xchg
and
push
ins
inc
aas
fsub
adc
pop
daa
leave
mov
and
idiv
rcl
inc
sub
or
ja
push
sub
lods
mov
stos
call
xlat
adc
fild
in
and
push
int3
out
mov
xor
xlat
mov
mov
lock
xlat
push
les
or
xlat
add
xor
push
mov
dec
xlat
out
rol
cmp
psrad
xlat
inc
ja
cmp
push
(bad)
or
ret
push
fs
push
pop
cvtps2pi
in
jmp
jns
jb
repz
pop
mov
cmp
dec
inc
sahf
pushf
ret
push
or
dec
mov
cld
xor
daa
daa
daa
and
lock
xchg
xchg
xchg
xchg
lds
jb
(bad)
inc
(bad)
jae
push
ins
(bad)
mov
punpckhdq
cmc
jo
adc
xlat
in
mov
int3
xchg
fiadd
mov
pop
add
or
bound
pop
add
pop
mov
mov
mov
push
mov
int3
dec
cmp
mov
lods
dec
cmp
push
and
cdq
pushf
les
pop
mov
push
pop
inc
lods
mov
and
inc
mov
or
xchg
add
mov
pop
mov
inc
mov
push
push
or
mov
iret
add
jno
ret
or
inc
fadd
jns
mov
out
inc
or
mov
(bad)
push
adc
out
(bad)
pop
les
scas
mov
pusha
inc
adc
mov
mov
mov
add
cmp
mov
adc
aad
mov
and
mov
sub
dec
mov
mov
mov
mov
sbb
adc
or
xor
pusha
jge
inc
inc
sub
or
mov
mov
dec
push
inc
or
or
dec
or
cli
pushf
mov
shl
rol
outs
sbb
mov
mov
sbb
imul
in
pushf
jecxz
in
push
xlat
and
out
in
or
or
inc
or
sub
shl
inc
test
inc
out
cmps
mov
enter
mov
adc
inc
scas
xor
inc
dec
inc
imul
sub
inc
add
inc
lods
pop
cmp
push
lahf
push
cmp
xchg
fcom
or
push
cmp
xlat
scas
push
and
sbb
mov
xchg
adc
rol
aas
or
cmc
mov
dec
xchg
inc
mov
adc
out
loopne
cmp
pop
sbb
or
sbb
int3
lock
rcl
pushw
pop
inc
mov
out
cmps
jb
dec
bound
adc
adc
ins
test
es
cdq
shr
pusha
push
aad
nop
inc
add
retf
ja
loopne
adc
sbb
fcmovnu
cs
ins
mov
je
pop
les
loop
fsubp
push
fst
ss
popf
cmpxchg
sub
into
pop
push
inc
push
mov
cmp
addr16
mov
sbb
addr16
shr
and
retf
mov
je
inc
sub
shl
cld
push
sqrtps
or
out
add
js
not
add
test
pusha
into
dec
fs
push
push
jmp
push
fucomip
fsubr
dec
fs
xchg
js
stos
add
mov
ror
inc
frstor
ss
mov
mov
and
shr
cmp
pusha
xor
pusha
lock
pop
add
add
ins
xchg
(bad)
mov
adc
ja
adc
adc
div
adc
and
and
ins
rcl
into
mov
push
cli
xchg
push
add
add
cmp
pop
add
loop
jmp
jmp
div
add
cmc
push
xchg
sub
or
test
dec
and
sub
div
add
ja
cmps
xor
(bad)
arpl
rol
loopne
xor
push
test
mul
push
xor
daa
daa
daa
mov
sqrtps
xchg
xchg
aad
movs
repz
leave
leave
enter
or
add
dec
mov
jb
xor
fdiv
aad
sbb
cli
and
push
lea
fidivr
pop
int3
xchg
fisttp
gs
add
not
rcl
out
push
test
add
sbb
dec
push
mov
rcl
add
add
pop
inc
add
mov
sbb
or
add
shl
xor
add
mov
inc
test
and
inc
xchg
add
push
inc
nop
or
or
add
xchg
cdq
clc
sbb
add
stos
adc
push
push
rol
lea
sbb
lock
xchg
das
push
sub
rol
mov
xor
mov
pop
inc
adc
or
je
rcl
add
iret
push
jno
add
cmovo
or
sub
adc
xchg
inc
or
mov
inc
push
xor
push
add
scas
inc
shl
pop
add
inc
xchg
and
push
dec
or
add
jg
pop
or
and
inc
mov
pop
int
dec
inc
sbb
or
mov
mov
push
std
nop
sub
xor
or
inc
xor
inc
jge
dec
or
inc
inc
inc
or
adc
add
rol
dec
lds
mov
xor
xor
inc
mov
add
xor
push
cmp
inc
mov
mov
add
mov
in
scas
inc
add
in
ins
rol
inc
add
add
jmp
inc
and
test
xchg
hlt
test
fisttp
aaa
push
imul
or
fadd
call
sbb
and
call
ja
mov
add
das
xchg
dec
xor
mov
nop
sbb
cmp
xor
and
add
rol
add
mov
aas
out
(bad)
comiss
bound
push
push
fcomip
cmp
pop
lods
fisubr
lods
mov
pop
mov
pop
pop
push
out
fbstp
cld
in
mov
jp
out
rol
rcr
cmp
je
inc
jne
adc
push
int
jb
pop
cmps
and
inc
retf
push
mov
jns
push
ins
inc
lods
outs
mov
rdtsc
addr16
cmp
mov
daa
or
mov
sub
aad
pop
out
pop
jbe
aam
add
aad
xlat
fld
push
add
dec
and
iret
dec
and
shr
xchg
pop
xor
add
pusha
out
out
ja
mov
push
dec
les
mov
cmp
popf
xor
xor
int3
cmps
sub
pusha
xor
push
dec
pop
sbb
test
aaa
jmp
or
data16
(bad)
xchg
or
cmp
fs
sti
push
cmp
das
(bad)
in
sbb
cmp
push
cwde
repz
lods
jnp
jbe
push
scas
test
mov
adc
addr16
lods
mov
addr16
outs
add
arpl
sub
mov
(bad)
arpl
nop
push
mov
pop
mul
push
mov
xchg
push
jnp
sti
push
mov
out
rdmsr
repnz
mov
cmp
jns
mov
mov
cmp
inc
sahf
pushf
pushf
mov
and
dec
mov
daa
daa
daa
daa
imul
xchg
in
dec
jae
addr16
fnstenv
jns
sahf
sahf
jne
stos
pop
fmul
push
sbb
sub
call
add
cmp
mov
dec
add
daa
add
pop
daa
adc
mov
xor
sub
pop
ja
mov
sbb
inc
adc
es
aad
ins
push
add
cdq
sbb
lods
shr
stos
adc
adc
rol
xor
pop
daa
xchg
inc
xor
and
daa
xor
and
xchg
das
daa
sub
fwait
gs
adc
(bad)
daa
pop
mov
shr
or
cmp
daa
sub
in
add
cwde
adc
mov
xchg
lea
daa
sub
sbb
or
and
sbb
push
dec
jg
push
data16
pop
imul
cwde
daa
(bad)
xor
cmp
push
adc
daa
stos
lods
inc
pop
xor
imul
dec
adc
call
daa
xor
daa
jge
push
dec
int3
daa
inc
pop
adc
xchg
daa
jns
add
or
xchg
add
daa
mov
cmp
repnz
daa
fcomp
inc
sub
mov
bound
scas
aad
pop
cmp
mov
in
pop
mov
add
in
rcl
int3
sbb
xor
add
outs
lods
mov
mov
ror
inc
aas
inc
mov
mov
or
or
sbb
in
bound
movs
cld
push
and
sub
inc
mov
jecxz
fldcw
add
pop
adc
cmp
or
or
and
arpl
test
sbb
daa
(bad)
(bad)
mov
shl
mov
add
ds
and
hlt
jmp
adc
ror
cmc
or
push
or
jmp
out
pusha
add
jmp
jo
xchg
sub
mov
shl
movs
inc
and
daa
ret
cld
jl
je
mov
cwde
iret
push
movs
call
push
out
cld
jne
jnp
jle
cs
pcmpeqd
cmp
inc
xchg
cmp
cmps
dec
push
rol
add
lds
sub
xchg
repnz
pushf
cwde
add
cmp
mov
(bad)
retf
(bad)
or
and
pop
jno
push
mov
mov
and
dec
lea
sbb
cmp
cmps
mov
imul
mov
and
pusha
(bad)
cmps
mov
pop
xor
add
cmc
pop
mov
jge
(bad)
stos
push
les
lds
mov
xchg
mov
mov
add
hlt
adc
push
into
lar
lock
inc
push
(bad)
leave
add
add
loope
fstp
and
in
pusha
push
add
ret
and
or
inc
ret
and
ret
(bad)
and
or
retf
xchg
sub
ret
xlat
pop
std
sub
jae
jle
jo
in
out
adc
lds
mov
les
adc
cmp
push
je
sub
cmps
dec
jmp
or
pop
adc
push
test
mov
mov
(bad)
cmp
push
stc
fld
adc
cmp
pop
lds
adc
add
ss
daa
mov
push
fbstp
mov
adc
dec
pop
fild
dec
jge
add
pusha
xor
(bad)
ja
ins
inc
add
sub
addr16
add
fsub
scas
(bad)
push
sub
ret
mov
scas
pusha
xchg
mov
enter
pop
stc
hlt
cli
jns
mov
or
fmul
fs
cmps
scas
mov
call
call
inc
nop
leave
addr16
and
rol
retf
pop
push
or
sub
mov
ret
add
inc
adc
and
add
jg
sti
rcl
mov
inc
push
pusha
addr16
and
add
xor
loopne
dec
call
cld
sub
add
jbe
push
rol
dec
ja
add
xchg
push
mov
jge
test
inc
sub
inc
dec
sahf
push
xor
out
xchg
(bad)
pop
cmp
add
adc
inc
cmp
mov
sti
inc
(bad)
popa
push
sub
jne
add
add
inc
jno
or
push
or
adc
sub
push
add
ret
push
cs
dec
mov
sub
push
inc
sbb
lods
and
cmps
pop
frstor
mov
add
cmp
pop
add
sti
fcomp
nop
push
add
das
push
push
js
repnz
js
add
jo
into
imul
push
pop
(bad)
push
mov
push
lock
and
shl
xor
push
or
or
movs
xor
xor
xor
push
shl
add
sub
xor
mov
(bad)
in
mov
xor
into
adc
inc
icebp
sub
push
pusha
ins
mov
pop
cmps
push
shr
add
data16
repz
jns
adc
push
outs
sbb
bswap
repz
add
sbb
and
add
cmp
pop
(bad)
cs
rol
inc
add
fimul
psubsw
add
jle
das
scas
emms
nop
add
sbb
jl
imul
shl
sub
(bad)
add
test
idiv
mov
lock
add
adc
loopne
test
mov
lds
fs
add
add
ins
jo
mov
fsubrp
cli
add
ret
inc
pushf
enter
fild
out
add
mov
ficomp
ficom
add
xchg
pmaxub
stc
mov
push
or
ret
pop
sti
jne
mov
add
imul
mov
stc
int
push
xor
or
sbb
stc
retf
push
add
(bad)
cmps
mov
add
cld
add
and
scas
push
push
jae
add
stos
and
pop
add
sub
cmp
add
jg
xor
xchg
imul
pop
les
sub
inc
jnp
prefetchnta
outs
outs
imul
adc
inc
add
(bad)
scas
loopne
cdq
pop
sahf
mov
ja
loopne
mov
mov
call
add
or
dec
add
pmaxsw
ja
iret
jle
add
cmovns
push
add
xor
and
adc
in
mov
sub
inc
mov
fsub
scas
rol
leave
mov
mov
(bad)
or
pop
daa
pop
pop
and
add
aas
pop
or
nop
das
scas
push
rol
push
adc
push
out
pop
inc
fs
movs
(bad)
fsub
std
rcr
aas
xchg
push
into
xor
les
aas
jo
add
push
rol
inc
test
mov
pop
out
add
pop
movs
rol
sub
sar
int
loopne
mov
pop
sbb
in
shr
push
movs
or
shl
mov
aaa
pop
pop
or
ins
inc
or
cmp
add
or
dec
adc
imul
add
ja
sbb
push
dec
mov
shl
test
push
cdq
fcom
repz
movs
cs
fcomi
and
sbb
add
nop
add
adc
xor
add
and
adc
(bad)
lea
mov
pmulhw
sbb
ins
xchg
dec
xor
aaa
inc
adc
dec
aaa
nop
lea
inc
js
mov
and
aaa
mov
aaa
sub
outs
jl
sub
sbb
inc
test
xchg
mov
jecxz
mov
push
sbb
pop
add
pop
fsub
call
xor
push
jo
in
les
clc
push
inc
mov
sbb
xchg
or
jl
adc
and
add
addr16
div
dec
sub
neg
mov
add
int
or
mul
movs
dec
not
dec
adc
or
add
inc
sbb
sbb
dec
test
xor
add
daa
outs
xor
retf
sub
cmp
jmp
gs
out
pusha
mov
lods
mov
fsubr
or
aad
mov
xchg
call
daa
adc
push
addr16
jle
lock
push
(bad)
clc
and
sbb
mov
lea
xor
or
mov
sub
add
mov
add
xchg
int3
mov
mov
pop
test
call
sbb
push
fnstsw
xlat
add
cmp
das
pushw
scas
pusha
shl
jl
xlat
mov
mov
loopne
cmps
mov
push
jo
(bad)
or
add
(bad)
aas
adc
or
or
push
lea
add
or
mov
push
rol
sbb
adc
movs
loope
mov
test
pop
std
xor
add
push
movs
inc
add
push
icebp
or
or
xchg
mov
shl
rcr
sbb
dec
adc
sahf
js
push
add
xor
pop
push
push
pusha
out
mov
mov
push
lds
mov
inc
lods
pop
sbb
(bad)
push
mov
sbb
pusha
add
sub
jo
out
(bad)
jle
loopne
pop
fdivrp
cmovno
push
mov
mov
adc
adc
adc
push
and
and
push
pop
push
mov
push
fistp
cmp
mov
xor
lods
push
out
sbb
out
sbb
mov
loope
sbb
cld
rcr
xchg
ds
push
out
sbb
and
push
test
js
pop
mov
sbb
dec
pop
ds
push
jno
dec
rol
stc
popa
adc
jo
adc
aam
popa
mov
popa
int
push
mov
inc
jmp
lds
inc
shl
pop
sbb
rol
(bad)
mov
adc
cmp
or
or
movnti
add
loop
push
xchg
push
inc
or
jmp
aad
adc
xchg
push
int
mov
and
add
rol
xchg
jo
sti
sar
scas
pcmpgtw
add
xchg
imul
add
add
pop
pop
mov
addr16
test
add
dec
inc
push
outs
movhps
add
cmp
rol
mov
call
repnz
pop
and
pusha
and
outs
mov
clc
and
ins
das
mov
ret
inc
sbb
xchg
pusha
push
pop
int3
in
test
cli
pop
mov
out
push
and
cmps
add
shl
sub
mov
nop
and
movs
(bad)
mov
push
mov
pop
sub
pusha
int
and
(bad)
ins
nop
sub
(bad)
retf
sbb
sub
mov
frstor
dec
push
xchg
push
xor
pop
and
shl
adc
sub
pop
int
or
stos
push
and
or
imul
sub
dec
inc
inc
xor
jo
add
sub
ja
cmps
push
mov
dec
sub
mov
addr16
es
mov
or
pop
mov
add
dec
out
jbe
mov
ucomiss
dec
dec
mov
mov
mov
shl
scas
xchg
(bad)
add
or
add
adc
sub
inc
xchg
sbb
out
sbb
add
dec
sub
rcr
verw
pop
push
das
jb
pop
sbb
mov
and
push
enter
into
sub
daa
cs
bswap
push
mov
add
int
mov
adc
loopne
push
jne
and
or
adc
pop
outs
push
and
and
jne
and
adc
inc
stos
and
adc
jno
test
pop
rol
add
push
loopne
mov
adc
ror
cdq
mov
adc
jecxz
stos
mov
xchg
and
dec
cmp
xlat
pop
js
(bad)
and
shr
out
loopne
push
jg
push
out
icebp
ja
loopne
sar
cs
push
mov
test
sub
push
loopne
mov
add
push
ds
je
leave
jle
sti
push
cld
rcr
inc
mov
cmp
xor
add
sub
sub
sbb
sub
addr16
jo
sub
jo
add
push
sub
xor
push
add
add
mov
or
shr
rcr
popw
cmp
pop
push
push
mov
nop
iret
adc
enter
lds
push
pop
loopne
fsubrp
xadd
iret
es
inc
nop
mov
rol
cmp
and
xor
jns
mov
and
jns
adc
retf
sbb
stos
mov
pop
int
rcr
pop
pushf
jle
xor
xor
jae
rol
lea
jno
dec
add
dec
and
imul
pop
rol
scas
pusha
xchg
xor
sub
xor
adc
scas
loop
xchg
push
int3
push
push
push
add
ja
sbb
daa
out
push
test
jbe
btr
out
xchg
jns
mov
pop
lea
sbb
xor
sub
xor
mov
shr
mov
rcr
xchg
pop
int
shl
or
jl
xchg
adc
fisttp
fcom
xchg
lods
into
fadd
test
ror
xchg
cmp
setbe
cmp
inc
push
pop
mov
push
mov
xor
rol
push
jne
int
xor
mov
stos
mov
push
nop
retf
mov
scas
pop
aad
rol
jo
movs
sbb
mov
mov
add
adc
xor
xchg
adc
mov
mov
inc
push
(bad)
fisub
jo
xor
outs
pop
sahf
ja
add
popf
cmp
pop
psubsb
fsub
add
xlat
fucomp
mov
pop
pop
add
test
(bad)
test
jmp
cmovge
pushf
sahf
sbb
xor
sub
sub
or
arpl
aaa
sub
rol
and
mov
jmp
hlt
xor
cmp
mov
add
and
mov
fwait
cmp
pop
push
adc
add
dec
xor
fmul
mov
mov
push
or
addr16
adc
push
add
adc
sbb
xor
inc
leave
adc
sbb
mov
adc
adc
adc
adc
push
sbb
inc
and
aad
movs
arpl
cwde
adc
mov
cmp
cmp
sub
into
xchg
and
(bad)
pushf
cmp
push
dec
adc
sub
ret
mov
or
std
rcr
ss
adc
enter
push
add
ds
mov
mov
jle
xor
cmps
js
daa
cdq
add
or
xor
mov
imul
sbb
sub
push
cmp
sbb
cwde
inc
jae
je
or
icebp
push
cmp
jae
mov
je
pop
pop
sbb
pop
pop
cs
adc
sbb
push
sbb
add
add
lods
test
xchg
push
lods
mov
cmp
and
pop
mov
jg
mov
sub
inc
test
push
das
stc
sar
adc
pusha
mov
mov
add
xchg
rol
xchg
sub
ror
adc
and
push
imul
sbb
mov
outs
or
in
inc
cmp
mov
adc
les
sub
xor
sbb
add
xchg
push
out
mov
adc
push
adc
(bad)
sbb
aaa
fadd
retf
sub
repz
mov
mov
(bad)
jmp
add
stos
jno
enter
add
inc
pop
pop
add
aas
in
add
(bad)
jle
clc
psubusb
aas
rol
pop
pop
test
mov
cmps
cmp
mov
(bad)
sub
add
outs
push
loopne
(bad)
push
push
loopne
mov
adc
loopne
lea
sbb
out
pop
and
mov
outs
mov
sbb
pop
push
push
inc
pop
fisub
mov
mov
fimul
fiadd
ror
push
add
pusha
loop
shl
sbb
sub
loopne
arpl
das
int
add
xchg
and
aam
das
retf
mov
pop
pop
add
mov
cmp
cmp
adc
sti
pusha
inc
inc
and
pop
rol
iret
rcr
or
inc
pop
aaa
push
invd
out
adc
dec
movs
dec
bound
sub
jo
cmp
fistp
dec
cmp
push
and
sub
test
fnsave
fldenv
push
dec
push
add
dec
pop
enter
sub
jo
fist
sahf
aas
jo
pop
into
dec
seto
das
bound
add
jge
push
daa
sbb
(bad)
stos
mov
jp
sub
addr16
jo
push
mov
push
cmp
outs
fnstsw
mov
sbb
cmp
add
test
dec
sub
pop
cwde
das
loop
outs
fdiv
cmp
push
push
push
out
push
mov
js
pop
mov
dec
ror
dec
adc
pop
pop
aaa
dec
loop
sbb
leave
addr16
pop
sbb
loopne
sub
mov
mov
add
lea
add
sbb
pop
adc
xchg
retf
inc
mov
in
adc
inc
loopne
outs
or
fistp
adc
or
rcl
xor
add
adc
test
dec
aaa
push
loopne
scas
mov
push
daa
fadd
out
test
push
aaa
add
adc
jle
cmp
bound
std
cs
mov
inc
xchg
pop
jb
je
inc
add
ja
fist
outs
inc
push
sub
dec
push
sub
push
mov
or
into
cmp
outs
imul
(bad)
mov
outs
jns
call
mov
es
sbb
dec
fild
mov
stc
adc
scas
or
push
cmp
push
dec
ins
addr16
lea
mov
mov
inc
inc
push
loopne
mov
mov
mov
inc
push
pop
adc
fsub
dec
ja
or
push
imul
fs
sar
inc
outs
arpl
or
outs
adc
mov
ins
or
outs
adc
inc
pop
jb
gs
in
pop
inc
xor
or
push
jns
test
or
pop
imul
addr16
bound
ja
push
push
fstp
sub
inc
push
jbe
adc
jae
push
adc
shl
cmp
lahf
push
ret
ins
add
xor
popa
fs
addr16
loopne
mov
ss
ins
jb
div
(bad)
clc
ret
push
dec
or
rcr
pop
leave
push
xor
inc
dec
jae
sbb
pop
rcl
outs
adc
cmp
mov
push
cmp
push
icebp
ss
add
movs
jmp
clc
mov
or
adc
xor
dec
xchg
loop
and
mov
fidiv
or
pop
xor
rdmsr
sub
push
xor
dec
sub
pop
mov
pop
adc
and
push
push
jne
ds
dec
jge
cs
dec
pop
dec
ror
retf
lods
push
pop
js
data16
jae
fcmovnbe
ins
push
pop
ja
push
fs
sbb
push
je
xlat
ins
ds
mov
push
nop
hlt
mov
in
jnp
mov
ins
push
sub
push
ds
push
lock
cmps
jge
and
or
adc
sub
dec
gs
out
xchg
and
imul
repnz
inc
or
das
push
test
jo
jb
mov
and
and
inc
mov
xor
imul
inc
in
and
movs
xor
jae
bound
cmps
push
or
pop
pop
test
xchg
cmc
dec
add
lahf
or
sbb
or
enter
test
jae
stos
jle
fwait
mov
inc
popa
(bad)
aaa
xor
shl
fsubr
imul
fs
dec
pop
aaa
sbb
pop
repz
sub
scas
lods
rcr
cli
shr
push
jo
popa
fimul
pop
mov
and
xor
and
loope
xchg
scas
sub
mov
sti
adc
push
sub
dec
push
mov
ja
sub
push
inc
lods
psrad
pusha
stos
(bad)
dec
inc
sahf
pushf
sti
xor
das
pop
xchg
xchg
daa
and
fstp
xchg
jmp
pop
call
addr16
dec
in
fs
pop
dec
ja
cmp
cmp
xchg
pop
inc
cwde
pushf
mov
loopne
pop
test
dec
dec
inc
sahf
punpcklbw
das
popa
push
daa
daa
and
and
or
call
sub
adc
inc
test
es
mov
push
jnp
push
push
inc
push
dec
add
rol
leave
or
add
push
inc
dec
ja
addr16
pushf
jo
or
ror
lahf
jae
loopne
or
popf
pop
mov
ins
mov
daa
shl
lea
sbb
dec
dec
pop
nop
jae
jo
dec
or
push
int3
nop
mov
out
sub
fs
mov
scas
gs
add
pop
sbb
fadd
out
aaa
jle
xchg
sbb
xchg
inc
add
or
out
push
or
cmc
sbb
pushf
call
push
jbe
mov
and
cmp
sbb
lea
jb
push
aaa
outs
jecxz
xchg
imul
or
addr16
lock
sub
je
mov
push
or
sbb
and
dec
mov
cmp
dec
sbb
cmp
pop
das
add
fidiv
punpckhdq
add
ja
scas
add
push
push
mov
outs
(bad)
xchg
add
adc
xor
jecxz
adc
outs
popa
bound
add
push
and
sbb
rcr
je
cmp
or
mov
ficomp
or
sub
pop
push
xchg
adc
inc
aaa
outs
aaa
add
aaa
sbb
fild
lods
adc
mov
or
and
or
and
lods
inc
dec
or
fcmovbe
add
or
fs
mov
test
mov
jo
mov
jecxz
push
add
clc
jb
loopne
scas
pop
lahf
jo
adc
aaa
mov
dec
popa
ins
jg
jg
scas
add
sbb
fst
pop
mov
je
shl
or
ins
outs
or
push
scas
add
add
adc
mov
in
cmp
mov
or
jne
rep
pusha
push
pop
xchg
repz
bound
and
add
call
mov
cmp
jge
push
fild
out
test
(bad)
pop
or
jmp
jg
pop
call
sbb
rol
pop
mov
jae
ret
test
inc
push
jecxz
bound
cmp
nop
arpl
jbe
sti
mov
cli
or
mov
sub
cmp
or
ins
sub
sub
xchg
mov
lea
cmp
add
das
add
sub
sbb
push
jg
sub
call
scas
or
xlat
call
sub
sub
or
and
aas
dec
adc
dec
iret
cmp
or
mov
test
mov
pusha
xor
nop
dec
cli
loop
mov
dec
add
add
mov
scas
adc
or
and
pop
pop
pop
sub
aad
push
add
sub
enter
mov
mov
sub
or
ret
adc
ss
test
sub
dec
and
popa
pop
xchg
xor
(bad)
sub
les
popa
jo
push
dec
and
and
sahf
movs
pop
shl
adc
mov
hlt
inc
xlat
dec
(bad)
add
jo
add
dec
jl
inc
and
loopne
js
push
xchg
pop
ins
sbb
arpl
or
xchg
and
retf
sbb
add
xchg
cmps
mov
pusha
ja
addr16
xchg
push
call
rcr
dec
movs
inc
mov
js
sbb
ja
bound
pop
jl
enter
sub
(bad)
add
xor
cdq
inc
iret
shl
mov
(bad)
lock
jge
pop
xor
inc
xlat
gs
xor
or
jae
push
sub
push
jge
mov
inc
inc
adc
or
mov
aaa
retf
mov
inc
cld
jmp
addr16
inc
or
mov
push
push
pop
adc
lock
fwait
push
inc
dec
pop
mov
inc
popa
add
test
mov
sub
or
sub
je
jmp
or
(bad)
in
(bad)
ret
mov
xor
add
mov
push
aas
and
test
je
add
nop
add
mov
(bad)
fimul
(bad)
sbb
popf
inc
mov
jnp
cmps
sub
or
(bad)
int3
fs
imul
add
add
sub
xchg
push
xor
out
neg
outs
sbb
clc
xor
mov
add
jmp
fwait
or
mov
mov
adc
je
ja
cmp
out
inc
mov
pop
push
sbb
jae
cmp
aaa
inc
ins
(bad)
cld
and
dec
sub
sub
jle
adc
push
push
mov
in
push
mov
jb
push
aas
ret
(bad)
push
mov
mov
mov
addr16
inc
mov
push
clc
add
mov
cmp
jge
lea
mov
jge
bnd
adc
dec
cld
data16
(bad)
jnp
mov
mov
inc
push
add
lock
cs
lea
and
mov
pop
cld
fimul
push
push
arpl
jmp
pop
pop
loope
rol
lea
mov
xchg
ret
mov
jp
jmp
pop
pop
pop
ret
nop
cmp
setne
ret
pcmpeqw
and
mov
or
test
(bad)
sti
movs
adc
adc
mov
pop
enter
clc
fild
or
mul
cli
imul
mov
push
jl
or
mov
pop
clc
and
pop
rcl
and
adc
pop
pop
xor
cdq
ss
ficom
pop
mov
int3
paddusb
lock
out
xor
lock
cmp
adc
inc
push
hlt
xor
mov
jge
ins
push
out
mov
adc
mov
sub
pop
or
jbe
ret
clc
inc
and
cmp
inc
mov
pushf
loopne
add
push
push
add
out
mov
sub
inc
cdq
pop
pop
(bad)
adc
je
mov
xchg
cmp
sbb
inc
mov
mov
inc
dec
test
xchg
ret
mov
in
lock
inc
push
push
sbb
cmp
fild
call
push
xchg
inc
rol
and
xchg
xchg
cmp
test
je
mov
sbb
movs
dec
pop
dec
out
mov
(bad)
pop
jbe
inc
popf
sub
stc
dec
call
movd
movzx
mov
pop
jne
addr16
lahf
inc
mov
(bad)
pop
mov
xlat
xchg
imul
call
pusha
xchg
arpl
mov
mov
cmp
adc
(bad)
sbb
push
(bad)
(bad)
rol
jae
adc
push
cmp
cld
inc
es
test
je
cmp
in
lock
pop
mov
inc
stos
push
and
seto
jb
sub
adc
dec
jae
ror
inc
xchg
test
mov
push
push
or
push
mov
jne
jo
nop
jb
repnz
cmc
sub
(bad)
aad
aas
jl
inc
xchg
ins
outs
push
cmp
jo
adc
add
pushf
push
mov
dec
xchg
out
rol
test
mov
loopne
adc
cmp
ret
ret
lea
adc
sbb
dec
adc
sbb
dec
shl
inc
mov
retf
mov
inc
cmp
hlt
shr
nop
out
cwde
mov
pop
call
push
or
add
mov
or
lahf
cmp
pop
fld
push
inc
or
nop
push
or
pop
ret
loopne
mov
jle
or
lea
bound
or
andnps
je
or
inc
test
inc
pop
pop
push
cmp
jl
cmp
cmps
lods
sbb
retf
push
xchg
int
sbb
imul
inc
(bad)
or
pop
or
out
das
mov
add
ret
je
sbb
dec
jae
out
mov
jmp
inc
xchg
mov
scas
push
out
cmp
out
cmp
outs
inc
add
and
ret
mov
imul
push
mov
je
lods
add
inc
repz
cmp
into
lock
jne
cmp
cmp
ins
mov
or
inc
lea
push
or
push
add
fadd
or
clc
cmps
jnp
jns
mov
shr
add
xchg
pop
mov
loopne
rcl
out
dec
cmp
je
(bad)
mov
mov
popa
in
retf
(bad)
xchg
js
(bad)
lock
mov
jl
inc
jb
add
add
fsubr
cmp
call
int
es
hlt
nop
sbb
in
fiadd
xor
xor
xor
cwde
test
mov
mov
add
dec
jne
mov
rcr
mov
rcl
mov
xchg
cdq
std
aas
push
outs
adc
xchg
adc
mov
aam
mov
popf
idiv
inc
(bad)
fadd
dec
lds
je
cmp
inc
cs
pop
and
mov
in
sbb
and
sub
pop
sbb
lods
mov
loop
(bad)
pop
mov
sub
add
sbb
xlat
jne
outs
mov
pusha
mov
or
sub
ret
out
test
jl
cmp
adc
inc
xor
out
jmp
sbb
xor
xor
cmp
sbb
ins
xor
cmp
add
push
int
mov
push
add
pop
dec
bound
ret
sbb
sti
int
inc
sbb
pop
pop
mov
test
(bad)
lea
jmp
loopne
pop
jle
jmp
aaa
mov
push
mov
popf
adc
inc
push
fdiv
dec
inc
dec
and
and
mov
ss
cmp
or
fcmovb
cwde
in
mov
mov
loop
and
int3
pushf
cmp
sub
add
cld
add
jl
shl
sysenter
push
push
frstor
inc
adc
adc
cdq
jno
or
cld
mov
jbe
inc
popf
push
ret
mov
pop
adc
or
or
rcl
sub
jmp
and
or
iret
push
cmp
ins
xchg
push
pushf
sbb
or
sub
dec
dec
or
add
sub
push
push
adc
retf
inc
mov
cmps
out
dec
hlt
mov
in
jb
mov
movs
jge
add
fs
sub
xchg
dec
mov
mov
retf
add
into
xchg
in
pop
mov
in
int
in
pop
je
sbb
fmul
dec
and
nop
shl
inc
xor
cmp
inc
aas
retf
add
data16
pop
clc
lea
xchg
js
mov
fcmovnbe
sbb
adc
popa
test
cli
push
sar
and
jne
loope
xchg
test
adc
or
pusha
jo
or
lds
xor
adc
sbb
shl
int
mov
push
(bad)
dec
or
ret
(bad)
cmc
jecxz
sub
cmp
je
adc
(bad)
and
call
adc
lods
jp
ret
push
out
and
sub
push
pop
iret
fs
dec
xchg
sbb
in
pop
movs
ror
ror
in
jmp
adc
inc
ror
xor
or
add
mov
out
pop
call
xor
xchg
inc
inc
jl
int
es
inc
les
out
sahf
pop
in
pop
and
push
cmp
je
mov
and
or
mov
add
or
xchg
lahf
inc
inc
dec
out
fadd
inc
jo
cmp
jg
inc
std
pop
js
pusha
test
mov
push
jl
inc
xor
mov
aas
add
shl
lea
sbb
inc
dec
call
pop
jp
je
ret
(bad)
js
inc
pop
cmp
lahf
jmp
daa
test
call
or
push
inc
sbb
mov
jmp
inc
cmps
fnstsw
mov
cmp
mov
loope
pop
cli
cmp
shl
pusha
adc
push
cmp
add
push
xor
pop
jne
xor
sti
lods
sbb
aam
add
scas
mov
(bad)
out
jg
inc
hlt
cmp
or
inc
inc
inc
shl
mov
dec
pop
es
adc
(bad)
push
dec
daa
lock
(bad)
les
mov
mov
out
adc
retf
mov
call
mov
(bad)
cmp
push
cmp
push
push
cld
adc
call
cmp
xor
dec
push
pop
mov
xor
add
add
and
xor
push
mov
std
mov
mov
ja
push
mov
ss
lock
or
mov
add
inc
dec
(bad)
jmp
dec
push
push
je
add
mov
pop
loopne
xor
pop
pop
add
xchg
pop
shl
add
sbb
add
jo
sahf
cli
shr
call
mov
or
rcr
pusha
pop
push
mov
(bad)
bound
sbb
test
fcomp
push
outs
out
inc
call
loope
fldenv
je
ret
jno
dec
adc
sbb
icebp
movs
add
daa
sub
icebp
dec
rol
and
loope
mov
inc
cdq
idiv
dec
inc
mov
sub
clc
in
sub
out
xor
cmp
fmul
or
repnz
xor
mov
call
push
movs
imul
add
rol
xlat
xor
pop
in
inc
adc
fisttp
sub
and
rcr
nop
mov
adc
and
cmp
push
jecxz
or
retf
pop
dec
inc
dec
jne
in
pop
inc
push
loopne
push
adc
mov
popa
cmp
dec
cmp
inc
fsubr
and
add
xchg
cs
dec
cmp
lahf
es
scas
dec
dec
cmp
sbb
mov
test
sub
call
dec
cwde
push
(bad)
sahf
stos
mov
jecxz
mov
and
test
sub
inc
lea
jnp
adc
inc
or
arpl
jge
xchg
or
mov
add
lods
out
mov
fistp
dec
jne
cmp
jne
dec
repnz
in
pop
pop
xor
daa
sahf
out
or
xchg
push
loopne
inc
xchg
adc
xchg
ret
push
xchg
push
pop
and
aaa
lock
or
aaa
xlat
icebp
mov
jo
stc
hlt
cmp
add
inc
mov
inc
daa
cmp
or
or
lea
inc
cdq
mov
add
dec
sub
xor
mov
push
dec
ss
jmp
dec
or
aam
(bad)
mov
xor
retf
sbb
movzx
aad
add
shr
mov
or
push
cld
cmp
pop
cmp
jne
cmp
or
jmp
cmp
outs
outs
adc
cld
enter
hlt
mov
or
test
adc
inc
cmp
xor
out
jle
pop
mov
call
inc
mov
add
jb
xor
repz
clc
test
pop
ret
push
push
cmp
lock
loop
dec
into
inc
mov
adc
daa
into
mov
je
pusha
sub
js
pop
cmps
call
aam
push
cmp
xor
adc
stos
sub
adc
rcl
scas
add
or
imul
shl
ins
or
int
or
dec
add
add
jbe
add
aaa
and
add
dec
xlat
add
and
dec
imul
push
or
inc
jmp
mov
jae
and
dec
cmp
or
sbb
fucom
rol
nop
inc
add
pop
mov
shl
adc
inc
pop
mov
hlt
inc
sbb
into
pop
adc
or
xchg
cs
push
rol
pop
or
jbe
jg
mov
xlat
and
sub
adc
sbb
imul
sbb
xchg
inc
add
js
int3
push
adc
add
jnp
jns
xlat
push
cmp
cmp
xor
ja
out
dec
mov
push
test
cdq
loopne
sbb
inc
dec
outs
jne
jb
outs
fcmovb
shr
pop
and
add
fidiv
mov
outs
add
add
std
add
push
daa
inc
jb
popa
imul
mov
shl
push
push
ins
bound
outs
gs
or
or
popa
outs
and
push
or
xchg
jbe
ret
sbb
or
push
es
push
dec
bound
arpl
cli
pop
or
push
dec
mov
pop
loopne
jne
ins
fs
inc
outs
outs
ins
scas
outs
jo
adc
neg
dec
(bad)
and
mov
scas
sub
cmps
adc
addr16
xor
out
popf
inc
pop
xchg
sbb
xor
sbb
shl
dec
and
inc
inc
call
pusha
outs
mov
movups
push
or
dec
push
gs
iret
or
call
rol
inc
dec
mov
sbb
gs
lea
push
inc
fs
outs
fisub
ja
push
je
js
adc
rcr
xor
adc
add
pop
add
xchg
adc
test
push
es
add
sar
sub
je
add
xchg
inc
arpl
arpl
pop
or
arpl
pop
mov
dec
adc
inc
jne
outs
inc
ins
popa
addr16
int
sti
sbb
popa
das
or
or
test
outs
lods
jne
ins
adc
cmp
sbb
lahf
or
xchg
or
out
dec
pop
daa
loopne
test
ret
das
leave
push
(bad)
cmc
repz
and
loopne
daa
and
mov
cmp
dec
add
outs
ins
push
cmp
mov
test
fdivr
jl
add
inc
in
push
adc
mov
repz
sti
pop
jge
pusha
push
mov
test
out
out
push
adc
jns
mov
push
cld
push
and
inc
push
pusha
push
inc
jbe
call
repnz
loop
scas
sbb
inc
inc
ins
imul
adc
dec
sbb
dec
imul
pop
pop
das
push
dec
loope
add
or
push
bound
xchg
das
mov
sbb
test
cwde
push
ds
sbb
mov
mov
mov
push
inc
sbb
js
jecxz
jo
mov
jae
(bad)
sub
pop
add
add
inc
add
jbe
ins
repnz
sub
adc
inc
or
ficomp
outs
jb
cld
fcom
cdq
add
add
push
pop
sub
ret
or
ret
sub
add
add
inc
ins
add
xor
or
add
aad
dec
add
lds
dec
outs
or
sbb
jecxz
addr16
pushf
sbb
add
xchg
mov
imul
jo
or
sbb
add
fild
(bad)
inc
cmp
mov
push
test
jle
inc
mov
sahf
jbe
mov
push
les
adc
dec
inc
or
bound
inc
loopne
push
inc
push
ins
inc
xchg
jbe
push
sub
mov
push
call
mov
mov
push
nop
addr16
ds
mov
cs
loopne
jl
ins
push
mov
fisttp
mov
fiadd
loopne
outs
jmp
call
fcomp
sbb
push
mov
xchg
xor
jno
inc
mov
mov
(bad)
daa
push
jbe
repnz
stos
popa
bound
mul
cmp
popaw
jne
xchg
cmp
es
push
mov
dec
outs
je
jns
das
mov
scas
sbb
add
das
push
gs
xchg
dec
mov
cmp
push
popa
fs
or
inc
adc
imul
call
inc
inc
jb
jne
xchg
or
sbb
sub
push
mov
out
sub
mov
adc
out
pop
jmp
pop
lock
jp
mov
fisubr
xor
rcr
ins
and
inc
shl
hlt
ins
mov
mov
lods
in
cs
sbb
xlat
jbe
ret
lods
add
adc
adc
jo
shl
in
pop
rcr
pushf
in
or
and
xchg
xor
adc
jmp
fmul
pop
add
push
jb
sub
sbb
adc
push
fs
lock
inc
or
test
inc
jnp
sbb
mov
bound
mov
outs
xchg
out
imul
push
pusha
mov
dec
outs
sub
cmp
not
cwde
xor
ins
imul
sub
mov
into
repz
sbb
call
icebp
cmp
pop
movs
or
xchg
mov
ret
and
sub
data16
pop
mov
aaa
dec
push
pop
add
add
pushf
mov
push
push
mov
fsub
pop
add
push
ins
(bad)
leave
ins
sub
adc
jns
pop
fisttp
adc
jg
std
mov
fsubr
icebp
dec
lea
aaa
push
dec
outs
daa
mov
lock
movzx
daa
daa
and
mov
rcr
jmp
cvttps2pi
loopne
ins
push
and
push
into
add
(bad)
out
(bad)
clc
call
inc
fsubr
into
xor
cld
in
jmp
sahf
jmp
in
cmp
fimul
(bad)
das
add
or
push
xchg
adc
sbb
inc
mov
add
adc
xchg
jae
nop
popa
cmp
jns
add
mov
mov
mov
lods
pop
inc
jbe
push
nop
outs
add
enter
stos
inc
lea
rcr
dec
xor
pop
call
cmc
inc
pop
ins
test
and
push
cmp
bound
test
inc
ror
cwde
xchg
add
push
fs
stc
stc
clc
or
shl
add
mov
dec
jmp
rcr
jo
add
ret
aam
pop
jae
(bad)
sub
div
or
push
lds
xor
add
jle
sub
outs
retf
mul
mov
scas
jbe
nop
sahf
out
loop
cmp
xlat
and
xor
inc
cmp
imul
adc
movs
js
push
xor
in
mov
loopne
adc
bound
push
xor
pop
sub
inc
push
cmc
loope
(bad)
jae
dec
inc
xchg
shr
or
ja
outs
jo
or
jnp
sub
ss
pop
push
xchg
mov
data16
adc
gs
add
in
inc
adc
data16
rol
cld
xor
fsubr
add
and
mov
pop
xchg
sub
jecxz
push
sbb
sub
add
mov
sbb
mov
sbb
int
int
adc
je
outs
imul
cmp
mov
cmps
pop
or
inc
mov
or
adc
cmps
xor
daa
dec
fld
dec
sbb
cmp
pop
sbb
mov
or
mov
inc
sti
je
sbb
and
js
cmp
jno
rol
mov
int
jae
inc
ror
in
jne
test
inc
lea
and
fdiv
and
add
inc
and
push
add
jb
push
jo
and
lds
call
or
inc
sub
jae
into
xor
push
aas
cmp
push
mov
(bad)
fadd
mov
mov
jno
and
mov
or
(bad)
push
add
into
xchg
(bad)
cmp
or
loope
adc
mov
xchg
ret
push
shr
ja
and
xor
test
xchg
pushf
jo
or
je
cmp
aam
sub
sub
mov
nop
fnstenv
cmps
or
in
pop
dec
je
fcom
sar
mov
les
movs
(bad)
clc
call
bound
adc
cmp
outs
repnz
daa
in
nop
sub
xor
test
pushf
dec
pop
ror
and
dec
popf
adc
and
sbb
jbe
ins
mov
push
mov
or
pop
pop
push
dec
adc
data16
rcl
pusha
outs
dec
mov
pop
pop
imul
sbb
ret
xlat
or
popf
pop
cs
leave
int3
or
fs
push
nop
xor
xor
in
xchg
fs
push
jbe
in
fs
gs
imul
rcr
sbb
xor
fistp
sbb
cs
sbb
or
mov
shl
addr16
shl
sbb
aas
or
push
sbb
push
movs
push
out
add
fs
jp
pusha
or
dec
push
push
shr
cmc
pop
pusha
or
or
cmp
adc
pop
ret
cmp
xchg
pop
add
aam
cmp
stos
bound
xor
jmp
sti
sbb
ss
push
mov
jl
ss
pop
adc
add
dec
add
out
call
sbb
cmp
outs
add
jnp
add
add
imul
mov
and
or
sub
inc
inc
mov
inc
push
jecxz
xchg
outs
ja
and
jo
xchg
dec
mov
emms
mov
or
call
inc
fld
inc
adc
in
retf
mov
mov
jmp
xchg
fcomp
stc
push
push
mov
daa
xchg
in
dec
push
mov
bswap
adc
icebp
ja
pop
test
call
cwde
pop
fnstcw
(bad)
ret
clc
(bad)
mov
jb
int3
enter
enter
cmp
adc
inc
test
ffreep
(bad)
shr
xchg
push
imul
es
jnp
in
shr
sub
dec
inc
sar
btc
jo
arpl
mov
daa
lea
mov
xor
pop
push
outs
jo
jo
(bad)
sub
fdivr
inc
add
cld
ins
or
xor
fstp
pop
pop
jo
shr
shl
and
mov
mov
lock
and
inc
rcl
push
mov
or
and
mov
sub
sub
dec
mov
ficom
gs
mov
int
(bad)
cmp
or
xchg
mov
mov
test
or
rol
dec
sbb
dec
test
imul
adc
shl
and
mov
mov
and
xchg
test
push
ja
mov
push
pop
fs
pop
das
pop
sub
adc
lea
or
jmp
or
mov
jmp
or
popf
leave
in
or
jb
pop
add
test
jmp
xor
popf
cwde
sub
pushf
test
fs
fmul
jno
sub
pop
mov
call
into
adc
mov
add
jo
lds
pusha
cmp
(bad)
aaa
sub
cmps
rcr
jmp
mov
or
in
mov
push
inc
push
std
pop
bound
cdq
fimul
ret
pop
add
add
sahf
push
sub
push
test
adc
in
mov
in
or
sub
jmp
cmp
(bad)
movs
dec
js
addr16
nop
push
repnz
pusha
jo
lods
cmp
je
cmp
pop
mov
psubq
into
ja
dec
popf
adc
sub
xor
mov
dec
sar
add
stos
in
jne
jns
fdivr
imul
fs
push
outs
test
pop
mov
fs
adc
ins
sbb
jnp
scas
sbb
fmul
jnp
or
retf
pop
ret
and
pushf
and
loopne
and
cmp
mov
mov
leave
mov
js
push
pop
mov
sar
add
je
pop
push
loop
test
aad
daa
dec
popa
mov
inc
std
fdivr
inc
or
adc
leave
push
cmps
cmp
jno
sti
jne
(bad)
pop
mov
jmp
xchg
jnp
jnp
cmp
add
or
xor
in
cmp
ret
scas
xor
xchg
mov
out
push
dec
lods
and
sahf
ret
stos
add
stos
ret
cmps
ret
xor
cmps
or
popa
call
popa
add
fisttp
pushf
sub
or
xor
xor
xor
xchg
jb
adc
cld
pushf
sbb
andps
inc
ins
imul
add
inc
mov
imul
xor
push
inc
inc
mov
ja
(bad)
or
pop
and
push
mov
movs
outs
mov
imul
or
xor
je
jnp
or
movs
out
loopne
xor
(bad)
xor
pop
pop
cmp
loope
outs
imul
xor
or
lods
dec
adc
sbb
add
sbb
and
push
jnp
push
sbb
(bad)
dec
in
adc
mov
int
cmp
rcl
outs
or
sar
push
es
das
cmp
mov
pop
adc
outs
in
dec
pop
mov
loopne
mov
pusha
pop
aas
mov
inc
cmps
or
xchg
add
adc
add
popf
mov
sub
popa
out
cmp
in
add
pop
bound
sub
or
sar
lods
icebp
cs
lea
sub
mov
scas
jno
or
mov
lods
mov
inc
sub
inc
xor
cmc
add
or
add
push
sti
mov
fldenv
ins
aam
mov
ins
outs
jae
push
cmp
mov
pop
rol
in
int3
dec
mov
pop
adc
scas
pop
aad
pop
movs
imul
or
dec
inc
icebp
or
test
dec
ins
cmp
push
mov
xchg
mov
lods
add
add
inc
and
jo
lock
adc
cmp
loop
adc
push
sahf
hlt
test
mov
test
test
test
inc
lea
mov
and
jo
aad
adc
pop
cdq
add
or
and
test
mov
ret
pop
add
inc
cmovl
adc
and
out
xor
push
js
enter
and
adc
and
int
jo
jns
icebp
cdq
inc
inc
cmc
inc
and
sahf
mov
jno
or
rol
daa
in
cmp
ds
test
das
ins
push
sbb
jp
test
lods
jecxz
add
mov
rcl
sti
call
dec
or
cmps
pushf
aam
scas
sbb
cwde
mov
push
js
ins
adc
gs
lfs
jo
mov
loopne
loopne
pop
mov
push
pop
jno
daa
loop
mov
pop
push
sbb
scas
loope
cmp
push
mov
add
cmps
push
mov
test
fwait
lods
outs
add
add
pop
cwde
xchg
add
mov
(bad)
jns
test
mov
xor
inc
loopne
(bad)
mov
jno
fcmovbe
or
fidivr
inc
adc
adc
scas
sbb
jo
rol
sbb
add
sbb
mov
add
popf
das
and
imul
sti
add
mov
or
push
add
stos
xor
adc
add
push
loopne
or
loop
inc
enter
stos
inc
jo
test
xor
out
xchg
jmp
push
mov
pop
mov
cmp
(bad)
inc
pop
push
push
push
mov
xor
mov
call
mov
test
je
push
clc
(bad)
jg
add
ret
sub
div
mov
mov
pop
pop
pop
ret
lea
cld
jmp
push
mov
push
mov
push
mov
mov
mov
(bad)
out
call
xchg
add
pop
pop
inc
push
mov
xor
movzx
shr
test
jne
iret
lock
mov
test
je
add
add
js
(bad)
cmp
or
les
inc
mov
push
loopne
add
lock
mov
push
adc
movs
shl
inc
sub
div
outs
sti
and
xor
fadd
mov
mov
aas
and
sahf
xor
add
outs
mov
mov
call
stos
jb
push
mov
mov
enter
jge
aaa
mov
daa
add
sub
jb
or
je
push
je
jns
sub
push
or
or
in
adc
inc
jge
sub
push
sub
imul
jns
sar
mov
push
ss
fwait
popa
lea
xchg
les
outs
jne
mov
sub
and
cmp
fs
jp
or
xor
sub
add
and
movs
sbb
jl
push
inc
inc
cmp
pusha
dec
sub
outs
push
add
push
pop
(bad)
jmp
xchg
shr
loope
inc
pusha
xor
jge
add
pop
sub
(bad)
je
xor
enter
push
icebp
in
or
sub
bound
pop
push
adc
repnz
jbe
or
clc
mov
bnd
(bad)
in
shr
jmp
inc
(bad)
pop
outs
in
mov
(bad)
clc
pop
rol
hlt
mov
jb
inc
sti
rcr
ins
add
test
dec
and
out
jmp
in
out
add
cmp
outs
sti
lock
mov
pop
or
and
jne
xchg
add
lea
enter
push
xchg
or
push
jge
xor
mov
js
jmp
call
int
aam
ret
pop
sbb
cmp
shr
fcom
pop
xchg
inc
jmp
popa
cdq
xor
mov
dec
sub
pusha
and
mov
ret
sbb
mov
daa
add
loopne
sbb
or
jmp
inc
(bad)
sti
push
add
test
and
(bad)
jbe
ins
jo
adc
pop
or
mov
retf
and
xor
or
mov
loop
or
cld
inc
jmp
mov
repz
adc
add
inc
dec
dec
or
inc
cld
jg
mov
jo
sbb
push
add
inc
add
iret
mov
outs
jne
arpl
cmp
jg
cli
mul
je
mov
mov
(bad)
call
push
jbe
mov
sahf
cld
or
in
xor
inc
pusha
inc
outs
out
push
jb
sub
or
hlt
pop
lock
mov
add
call
cmp
lahf
dec
lock
lock
add
imul
pop
dec
cmp
jle
sub
ja
leave
jo
push
ss
jmp
cmp
jb
out
neg
jnp
xlat
cmp
pop
cmp
mov
push
jae
add
pop
rcr
jmp
jle
cmp
fist
xor
in
fs
fucom
es
jbe
pop
dec
adc
add
push
inc
pop
adc
pop
icebp
push
ds
lea
inc
sbb
xor
xor
adc
call
mov
xor
inc
das
outs
add
inc
push
js
mov
addr16
jns
fsub
ins
add
adc
fcmovnu
jle
mov
sub
pop
mov
push
adc
inc
inc
mov
cmp
sbb
fdiv
dec
cmps
and
inc
mov
inc
push
jmp
mov
adc
inc
or
fs
mov
pop
ret
push
xor
push
dec
mov
jno
js
and
add
je
xchg
pop
je
(bad)
dec
adc
adc
test
pushf
mov
or
rcr
mov
xchg
push
movs
cmc
dec
test
mov
test
push
or
call
jmp
pop
loopne
sbb
pop
popf
test
call
(bad)
(bad)
cwde
test
fs
cmp
jecxz
pop
jg
sub
sar
and
aas
fsubr
cmp
pusha
sub
iret
shl
cmp
add
(bad)
push
mov
arpl
rcr
(bad)
aas
mov
xor
dec
imul
(bad)
dec
aas
ds
lock
je
or
std
cmps
std
fwait
push
or
pushf
pop
pop
ret
nop
mov
pop
add
push
mov
shr
mov
je
mov
push
call
mov
sub
add
inc
inc
add
fidiv
data16
mov
lock
mov
push
dec
std
pop
sub
adc
dec
mov
mov
push
cdq
sub
mov
xor
cmp
fimul
loop
add
jl
outs
sbb
(bad)
inc
fdiv
mov
push
inc
jo
fadd
clc
ror
fnstcw
lock
xor
stos
fs
cmp
cmp
pop
loope
cmps
jo
and
cli
jl
inc
push
imul
mov
mov
jg
int
stos
les
push
mov
xor
cmp
xor
cmp
cmp
fcmovb
inc
inc
hlt
inc
pop
ss
loop
je
sub
inc
pop
aas
mov
and
or
ins
mov
out
xchg
mov
xchg
fisttp
mov
test
mov
mov
cmp
je
adc
push
adc
sub
leave
bnd
adc
test
mov
jmp
cmp
inc
mov
fild
xchg
push
in
jnp
jp
mov
adc
and
jne
jge
push
loope
adc
(bad)
push
mov
cdq
pusha
mov
mov
mov
hlt
in
cmp
cmp
mov
scas
cmp
jne
mov
jle
mov
sbb
out
sub
les
(bad)
sbb
in
and
push
jle
int
cmp
or
jle
adc
cmp
push
push
addr16
cmp
dec
and
add
jo
pop
push
pop
lods
cmp
mov
mov
xor
adc
iret
fldenv
sub
jne
or
dec
(bad)
or
inc
mov
sete
and
inc
and
adc
in
repz
push
test
rcl
mov
outs
sub
xchg
enter
je
inc
pandn
jnp
ins
adc
movs
pop
rcl
or
es
mov
or
popa
fs
and
jns
push
adc
clc
test
push
inc
and
inc
or
test
push
movs
aad
xor
test
add
push
adc
mov
xor
fadd
icebp
and
shl
push
add
retf
adc
pusha
or
sbb
push
mov
add
(bad)
xor
and
inc
jne
fisub
ja
push
test
ja
xchg
mov
pop
sub
push
dec
jl
sti
or
push
xor
push
into
xchg
arpl
sub
mov
out
or
push
adc
sahf
sbb
and
jecxz
adc
push
mov
fisub
test
div
mov
cmp
mov
(bad)
out
ds
pop
test
sbb
adc
inc
lahf
and
or
or
shl
pop
xor
lock
(bad)
mov
test
jne
xor
je
fcmove
(bad)
jmp
mov
mov
sbb
mov
rol
or
sti
enter
cmps
cwde
lahf
cmps
sti
mov
aad
push
call
mov
mov
sbb
cdq
stos
mov
je
sbb
shr
test
cmp
inc
mov
adc
xor
xchg
fsubr
adc
and
or
push
push
cmps
cld
cmps
fsubrp
add
(bad)
lods
push
ret
or
push
inc
xor
aas
mov
test
jne
xor
dec
data16
adc
add
dec
cmp
int3
jl
sbb
ins
stos
call
jle
movs
jg
aas
sbb
or
push
dec
pop
mov
std
pusha
xchg
scas
push
mov
push
mov
scas
jb
sbb
lock
jmp
or
lods
nop
in
cmp
jae
mov
xchg
adc
jbe
sbb
pop
shl
jp
cmp
adc
cmp
cmp
inc
or
cmp
sub
fadd
aas
std
mov
les
cmps
mov
mov
mov
mov
shl
add
add
pop
mov
pop
lahf
push
push
outs
mov
clc
pop
inc
mov
cwde
cmp
xchg
aas
loopne
mov
dec
mov
mov
test
and
xchg
je
lea
dec
clc
pusha
xor
out
cli
(bad)
in
movs
not
jne
and
xor
jmp
mov
and
std
mov
aam
add
or
or
mov
jmp
cmp
jne
adc
jne
cmp
out
mov
sbb
xchg
jne
jb
cmp
test
movs
add
add
aas
outs
inc
push
loopne
clc
push
push
sbb
inc
sbb
dec
mov
or
jle
jmp
inc
add
and
gs
adc
repz
add
mov
jne
mov
mov
(bad)
dec
lods
lahf
int3
pop
mov
cld
dec
stc
mov
jmp
xchg
sbb
push
push
xor
xor
or
retf
ret
nop
shl
xchg
cmc
push
mov
not
cmp
sbb
mov
loopne
clc
and
mov
mov
loope
push
das
adc
ret
fsub
pop
and
test
outs
lock
icebp
push
lock
mov
dec
lock
add
or
pop
retf
mov
out
and
in
adc
mov
out
mov
push
and
out
xor
sbb
sbb
test
jl
not
in
add
sbb
adc
fisubr
not
and
mov
mov
ret
call
adc
and
mov
xchg
js
pop
and
pop
push
xchg
pop
xchg
bound
add
aas
jne
pop
add
push
or
fadd
xchg
adc
in
mov
loop
inc
or
in
pop
aaa
mov
sub
adc
sbb
jmp
les
and
xor
div
dec
enter
test
stos
or
(bad)
scas
adc
push
add
jmp
repnz
cmp
push
nop
cmps
lock
jg
mov
lea
mov
ror
(bad)
adc
into
call
inc
dec
shl
mov
mov
sbb
xchg
ret
and
and
lea
scas
inc
or
mov
fmul
xchg
(bad)
aas
jle
fsubr
ror
push
pop
push
pop
add
adc
cmps
xor
push
jmp
std
mov
movs
mov
jb
movs
(bad)
jne
cmp
lock
and
mov
add
mov
or
mov
nop
cmp
dec
sbb
loopne
mov
add
add
ficomp
mov
js
iret
add
add
ret
daa
push
ja
push
enter
and
sbb
pop
xor
aas
jg
mov
mov
sub
add
push
lea
in
call
test
pop
stos
js
je
lock
adc
pop
scas
(bad)
in
cmp
jle
sub
scas
int
jp
add
das
inc
sbb
sbb
retf
xor
leave
je
inc
call
loopne
js
push
in
sub
sar
jns
adc
or
sub
add
out
mov
cli
push
rcl
out
xlat
test
add
jge
inc
or
xor
inc
xlat
loopne
shl
(bad)
mov
add
(bad)
out
mov
mov
mov
cmp
ss
ins
enter
fmul
jmp
and
sub
mov
or
jne
xchg
mov
pop
fwait
xchg
dec
shl
aam
add
inc
iret
add
(bad)
sub
mov
mov
int
pop
es
retf
into
jle
frstor
fwait
inc
stos
mov
ror
ins
in
xlat
pop
mov
pop
sbb
push
retf
push
mov
mov
js
sbb
cli
pop
push
cmp
jl
fcom
pop
sub
inc
push
push
pop
outs
xchg
or
mov
push
movs
cmp
movs
int
int
inc
jnp
stos
mov
lea
xor
dec
cs
jne
ja
jo
lods
fist
jle
loopne
pop
jge
mov
pushf
cmp
lods
dec
sub
mov
jb
sub
add
jg
sub
push
pop
stos
das
xor
retf
add
push
mov
adc
sub
xor
pop
push
fs
inc
and
loopne
pop
(bad)
sbb
jle
(bad)
shl
test
mov
test
or
repz
xor
xor
ds
push
mov
loop
ror
mov
sub
daa
std
rol
xchg
xor
add
mov
cmp
cmp
push
ins
xchg
add
mov
cmps
les
neg
mov
in
and
dec
dec
in
xchg
pushf
pushf
aas
mov
daa
dec
pop
(bad)
int
das
lock
lds
pop
pop
add
push
push
ror
push
js
jmp
push
mov
add
sub
pcmpeqb
jne
or
and
jl
pop
or
lock
adc
or
outs
mov
push
push
pop
test
inc
test
rcr
jge
cwde
movs
sub
sub
xor
sub
rol
sbb
dec
shr
xchg
sbb
mov
xchg
iret
into
mov
xor
loopne
loop
movs
adc
iret
ret
lock
xor
xchg
cmp
(bad)
loope
sub
add
add
bts
(bad)
imul
or
mov
pop
nop
test
je
(bad)
lock
test
pop
lock
jl
inc
mov
loope
push
mov
push
or
(bad)
iret
adc
mov
sbb
daa
js
push
sbb
pop
les
stos
pop
mov
adc
push
xor
hlt
not
cdq
outs
inc
test
jbe
adc
mov
xor
pop
xor
mov
movzx
test
pop
push
add
add
mov
mov
and
mov
mov
xor
ror
ret
jmp
adc
cdq
mov
cld
inc
inc
push
clc
or
or
add
mov
push
out
unpckhps
pop
std
test
add
adc
jmp
push
lods
nop
in
cmp
call
dec
hlt
sub
in
pop
mov
lahf
das
adc
xchg
dec
mov
test
push
mov
addr16
adc
push
dec
push
adc
jge
xchg
(bad)
push
push
iret
ror
add
jne
pop
sub
cs
sbb
hlt
ret
dec
lock
sbb
neg
xor
loope
call
jmp
sub
sbb
or
inc
dec
jle
sti
and
ins
mov
dec
loopne
adc
data16
pop
adc
mov
xor
xor
adc
aad
inc
hlt
sbb
not
loope
fucomi
ins
(bad)
jmp
push
jne
in
sub
push
sbb
mov
sbb
cmp
cdq
pop
dec
add
test
(bad)
fdivr
mov
jo
test
pop
cmp
repz
xchg
(bad)
in
xor
add
jb
sbb
pop
je
cmp
cs
add
adc
retf
loopne
push
hlt
adc
(bad)
in
jmp
loopne
adc
test
sbb
into
mov
cwde
lds
int3
sbb
mov
jae
mov
add
inc
add
add
cmps
inc
cmp
out
dec
cmp
cmp
dec
das
test
inc
or
sub
mov
inc
inc
mov
imul
xor
inc
dec
or
dec
jns
lds
jp
ret
jge
sbb
into
dec
inc
dec
mov
inc
mov
mov
dec
ds
dec
sahf
push
arpl
movs
mov
stos
mov
push
int
mov
js
inc
inc
bound
clc
jg
clc
std
jl
xchg
mov
jl
inc
sbb
sbb
test
fcomp
mov
test
xchg
mov
cmp
jno
sub
adc
in
ret
mov
dec
ins
in
and
xchg
dec
pop
loopne
rcl
inc
leave
shl
(bad)
pop
sub
(bad)
mul
xchg
sub
adc
and
or
inc
out
fwait
in
and
cmp
mov
jmp
push
loopne
ret
cmp
push
mov
(bad)
das
mov
pop
pop
xchg
ror
lahf
or
pusha
mov
cmp
mov
cdq
in
pop
dec
mov
leave
into
jns
push
or
shl
neg
xchg
stc
mov
retf
mov
and
xlat
hlt
or
pop
push
ins
add
inc
ins
push
adc
jb
icebp
cmp
(bad)
sahf
add
leave
jecxz
xchg
adc
or
in
sbb
pop
sub
push
mov
mov
push
push
push
aam
push
inc
jl
cwde
enter
pusha
xor
fs
xor
cmp
imul
aam
in
mov
mov
pop
sub
dec
jo
out
pop
add
xchg
gs
push
dec
add
test
jmp
mov
sbb
add
jne
add
sub
sbb
inc
ret
and
sti
fcom
imul
or
or
push
(bad)
enter
sub
fistp
jno
sub
pop
(bad)
adc
dec
and
inc
dec
and
mov
push
add
mov
imul
inc
and
test
jmp
push
jmp
sti
jge
popa
leave
sbb
add
add
add
test
cmps
sbb
(bad)
and
push
sub
and
and
retf
mov
jne
inc
xlat
mov
mov
(bad)
or
dec
sbb
or
jp
outs
inc
and
les
pop
pop
sbb
or
clc
xchg
xchg
push
adc
outs
inc
pushf
dec
jno
mov
imul
add
inc
loope
xchg
enter
pop
push
loopne
jl
xor
pusha
(bad)
add
inc
pop
pusha
and
xchg
(bad)
mov
movs
or
mov
jns
and
xlat
push
mov
dec
cmp
ror
dec
xchg
push
and
sub
test
adc
iret
pop
cmp
adc
sub
iret
loopne
add
sub
sbb
or
iret
mov
ins
das
add
push
jmp
xchg
in
sbb
mov
jge
in
mov
lea
pop
xchg
ret
cmps
xchg
lock
pop
add
shr
jo
aam
sbb
ret
outs
mov
mov
add
in
ss
fwait
adc
test
inc
into
mov
mov
xor
adc
mov
ss
pop
sub
dec
scas
cmp
mov
add
fnstcw
jmp
and
jge
pop
outs
les
sbb
sub
add
mov
rol
inc
pop
mov
movs
push
movs
ins
inc
rcr
dec
or
imul
sbb
mov
cmp
mov
sbb
and
mov
jbe
loope
add
xor
push
add
or
add
inc
aam
sub
mov
cs
ror
jmp
pushf
mov
cli
loopne
int3
xor
or
test
cs
push
ins
and
cli
sar
(bad)
hlt
dec
pop
pop
jmp
aas
ja
jnp
dec
aas
or
mov
shr
jmp
inc
add
data16
mov
add
mov
mov
mov
sbb
or
div
pop
clc
ret
pop
ret
fisttp
inc
loopne
sub
xor
add
test
cmp
sahf
push
test
mov
neg
sbb
aas
ss
ror
jle
rol
mov
jne
(bad)
call
test
in
adc
fdivr
cli
or
dec
call
inc
xor
sbb
push
adc
push
cmp
and
add
mov
in
sbb
retf
hlt
cmp
jle
sbb
dec
call
fld
daa
cdq
inc
popa
jecxz
push
js
shl
in
push
mov
jle
push
clc
push
aam
and
add
fadd
retf
push
loopne
bound
lahf
test
ror
xchg
call
inc
xchg
or
adc
outs
push
and
adc
inc
es
fldcw
outs
or
or
dec
and
dec
pop
ss
adc
xchg
div
sbb
pop
or
dec
cld
imul
mov
push
xor
jmp
push
lea
lea
xor
add
fsubr
(bad)
push
jns
and
lods
fistp
add
add
(bad)
pop
mov
fmul
cmps
push
mov
cs
jno
adc
push
mov
add
jbe
inc
push
inc
loopne
pop
or
add
lea
sbb
pushw
mov
movs
ins
int3
sbb
(bad)
xor
pushf
mov
pop
pop
xchg
mov
dec
(bad)
or
sbb
xor
add
test
mov
add
and
les
and
cmp
mov
jmp
das
inc
inc
int3
mov
pop
int3
add
mov
mov
xor
sub
xchg
mov
mov
les
test
add
dec
pop
add
test
adc
(bad)
push
int3
adc
jne
add
dec
ins
sbb
or
pop
(bad)
jnp
xchg
pop
pop
rcr
ins
ret
dec
cld
test
sbb
les
add
in
push
call
lock
fs
addr16
xchg
mov
clc
mov
shl
add
test
jb
mov
je
jmp
mov
fdiv
jne
out
and
loopne
xchg
gs
out
frstor
pusha
jle
stc
in
or
in
out
inc
push
sub
or
test
das
fs
and
xchg
pusha
cmp
push
and
and
mov
mov
stc
mov
in
jno
or
sub
sbb
xchg
jb
lock
push
adc
sbb
push
adc
popa
ret
mov
ret
and
jle
and
mov
cmps
jl
add
rcl
xor
test
ret
or
shl
rol
push
dec
imul
mov
inc
inc
or
fbld
cdq
shr
xor
mov
xor
cmp
fld1
aad
adc
mov
add
nop
push
mov
cmp
cld
mov
and
mov
pusha
(bad)
std
dec
pop
sahf
add
pop
adc
mov
shl
je
lea
jmp
pop
ret
xor
mov
cmp
and
cmp
jl
lock
mov
xor
mov
mov
adc
fdiv
js
inc
fist
adc
dec
cmp
jne
call
mov
jne
and
xchg
int3
icebp
mov
je
mov
mov
push
inc
sbb
mov
xchg
sub
mov
ss
inc
pop
mov
adc
or
xor
ins
add
aam
cmps
inc
je
inc
inc
adc
retf
or
mov
iret
or
rcl
cmp
nop
stos
loopne
mov
pop
mov
xchg
pushf
outs
icebp
jg
out
fnstenv
out
dec
je
(bad)
adc
(bad)
popa
(bad)
test
ja
ds
or
sbb
ja
push
loop
clc
inc
jl
mov
ret
aam
mov
cmps
popf
into
push
cs
or
fwait
mov
repnz
inc
test
ja
mov
adc
lea
iret
mov
mul
push
ins
shl
or
jmp
nop
retf
cs
dec
cs
lds
or
dec
pushf
inc
push
loopne
leave
adc
sub
fidivr
jg
push
mov
jge
xor
cmp
jg
xchg
dec
jg
jl
sbb
jo
lock
mov
nop
adc
xchg
sub
mov
(bad)
jo
add
push
outs
(bad)
push
int
cmps
dec
add
sbb
push
daa
call
mov
add
xchg
daa
(bad)
jb
push
icebp
loopne
mov
outs
adc
pop
xchg
cld
clc
test
je
pop
cmp
sub
xor
aas
retf
jg
clc
dec
inc
jl
inc
xor
mov
daa
adc
sub
pushf
(bad)
inc
push
pop
mov
jne
inc
loop
loopne
and
sbb
mov
(bad)
xlat
(bad)
test
es
mov
call
jp
out
mov
aaa
dec
addr16
inc
push
in
jl
int3
push
sub
mov
push
push
inc
dec
jbe
mov
dec
and
xchg
shl
pop
pop
jne
adc
fmul
mov
pop
aaa
jl
sub
push
cmp
xchg
cmps
cwde
push
sete
shl
in
and
mov
pop
int3
push
test
add
and
jge
popa
pop
mov
mov
or
pusha
or
cwde
shl
pop
rol
add
xchg
shl
jns
push
mov
push
inc
and
inc
mov
sub
push
inc
xor
xchg
pop
push
sub
call
push
mov
cmp
mov
test
pushf
adc
xchg
pop
jmp
test
jne
sub
sbb
xor
sbb
sbb
pop
jp
jl
jo
xor
ror
mov
es
and
push
pop
jecxz
push
sahf
adc
addr16
sbb
outs
cmp
jmp
mov
ret
xor
pop
scas
or
dec
fadd
adc
pop
lea
in
mov
add
adc
js
jecxz
xchg
xchg
sub
movs
jge
push
xchg
pop
loope
add
shl
xlat
inc
and
push
arpl
xor
push
mov
sbb
loopne
ror
lods
cmp
mov
cwde
pop
loope
cdq
in
hlt
xor
sbb
mov
fistp
adc
mov
das
mov
push
jmp
(bad)
mov
mov
cmp
call
cmp
(bad)
outs
add
mov
out
call
in
fdiv
inc
sbb
sar
out
sbb
mov
xor
dec
jo
outs
xor
loope
push
xor
gs
mov
fst
and
aas
xchg
jmp
jp
test
add
xor
add
xchg
ret
xchg
add
inc
cmp
push
sbb
push
pop
cmp
ret
mov
fcomp
inc
push
dec
dec
je
mov
nop
or
clc
pop
lahf
std
add
jecxz
sbb
adc
(bad)
(bad)
clc
jae
sbb
mov
mov
mov
xor
mov
lods
fs
xchg
iret
aad
(bad)
dec
push
(bad)
sub
adc
jno
sub
pusha
std
data16
lock
inc
js
pusha
pop
fs
lea
mov
addr16
mov
ss
jge
dec
scas
je
movs
gs
cs
(bad)
or
cmp
mov
pop
sar
xchg
movzx
or
dec
xor
add
ds
dec
mov
icebp
or
pop
adc
ret
retf
inc
ret
imul
pop
xor
std
mov
cmc
push
mov
push
add
jge
mov
inc
aas
sub
push
dec
aas
cmp
rol
out
pop
and
int
aas
inc
inc
xor
sahf
sahf
aas
or
retf
je
mov
jecxz
and
(bad)
clc
and
jae
fst
adc
adc
sbb
dec
aad
pop
rcl
sti
inc
push
push
loope
sub
ja
dec
dec
or
jecxz
inc
xlat
add
or
cmps
cmp
sub
mov
enter
dec
xor
fisubr
and
jmp
push
cmp
jne
pop
cmps
sbb
aaa
and
or
push
cmp
sub
jg
shr
test
cmp
adc
lock
ret
mov
add
sar
cwde
push
jbe
js
int3
and
out
cmp
cmp
xor
ja
add
mov
inc
add
jmp
dec
outs
jne
jo
popa
je
jb
add
xor
inc
outs
mov
popf
mov
jae
mov
xchg
fld
ror
add
gs
data16
movs
(bad)
push
in
mov
imul
sbb
test
pop
pop
mov
fdivr
push
add
push
arpl
mov
js
jo
fstp
add
popa
push
je
popf
pop
push
push
sahf
test
test
std
mov
cwde
push
je
shr
loopne
add
movs
imul
cld
mov
std
xchg
inc
adc
pusha
ja
xchg
ret
xchg
int3
ret
pop
pop
xchg
cmp
sub
and
add
and
dec
aam
and
jl
inc
xchg
sub
push
in
sbb
pushf
pop
pop
push
inc
inc
dec
jne
add
mov
sbb
mov
add
fist
cwde
in
add
mov
xchg
(bad)
clc
dec
hlt
mov
mov
jnp
fucom
cld
mov
adc
es
movs
jecxz
mov
(bad)
inc
pop
je
cmp
jne
mov
jmp
inc
dec
jne
add
and
push
pop
sbb
sub
loopne
adc
aam
jne
js
mov
lock
in
sub
fist
out
sub
imul
push
ds
push
mov
mov
(bad)
sub
js
mov
adc
mov
hlt
add
add
push
aam
mov
pop
adc
xor
sbb
and
cmp
or
pop
jb
xchg
stos
test
or
mov
dec
shl
loopne
and
mov
clc
fmul
jne
rcl
jne
loopne
lock
js
icebp
mov
movs
sbb
or
jo
clc
int
sub
mov
mov
mov
or
repnz
inc
es
add
push
xchg
xchg
jl
adc
jl
mov
add
outs
cmp
dec
or
jmp
pop
or
pop
ins
add
pop
mov
lea
adc
pop
into
les
or
push
(bad)
nop
jne
adc
popa
dec
inc
mov
out
push
dec
gs
movs
nop
outs
or
pop
or
outs
lock
jb
mov
rol
xchg
popf
sbb
adc
pop
cmp
outs
cwde
push
inc
dec
inc
test
retf
sub
jl
daa
shl
push
xor
push
xchg
add
mov
add
xchg
gs
mov
dec
cmp
dec
sub
xor
or
scas
(bad)
out
jle
out
add
mov
pop
(bad)
cmp
jb
or
fbstp
es
loopne
inc
jmp
fcmove
push
jo
mov
(bad)
popa
mov
je
mov
mov
jp
push
out
dec
push
add
jo
sbb
test
push
or
imul
out
enter
or
js
bound
jbe
addr16
dec
jmp
inc
fisttp
mov
dec
rol
dec
push
fistp
das
loopne
aam
loope
or
adc
push
pop
or
psubw
inc
retf
repz
aam
adc
pusha
dec
shl
test
add
jl
fidivr
dec
jne
das
mov
lock
rcr
setg
sbb
scas
imul
inc
pop
ud2
sbb
out
mov
movs
rcr
jne
shr
push
mov
aam
xchg
mov
lods
enter
fmul
add
sub
adc
addr16
jmp
ror
xor
aaa
or
or
mov
mov
jmp
hlt
ja
push
into
mov
imul
in
mov
add
adc
and
dec
xor
xlat
movs
jmp
js
clc
xchg
rcr
sub
fild
xor
push
add
and
and
jo
pop
mov
sbb
inc
and
add
dec
inc
in
mov
add
mov
jl
inc
rol
je
sbb
adc
mov
inc
inc
rol
jmp
mov
jg
xchg
mov
test
je
add
gs
inc
test
call
xchg
popa
adc
pop
jne
in
ret
sahf
adc
fsub
and
mov
fdivr
dec
jnp
sti
adc
jg
inc
jne
xchg
adc
and
dec
dec
loopne
mov
inc
inc
cmp
jne
jo
add
or
pop
push
jno
push
xor
fst
adc
and
popf
neg
mov
xlat
pop
mov
test
cmc
das
sub
stc
mov
cmp
movs
xchg
cld
hlt
in
sbb
mov
mov
mov
inc
dec
mov
mov
dec
dec
addr16
outs
dec
hlt
dec
push
es
inc
or
int3
inc
dec
shl
push
xchg
iret
push
clc
or
clc
inc
clc
inc
sub
outs
add
sbb
ins
or
jmp
in
inc
sub
loop
fs
push
cmp
jo
test
shl
and
scas
push
outs
sbb
push
dec
or
jg
cld
add
mov
and
int3
mov
test
inc
out
movs
pusha
mov
fcomi
push
and
jge
mov
int3
dec
nop
jp
xor
adc
test
ds
inc
fisttp
int
clc
ret
das
add
inc
mov
(bad)
std
mov
in
push
xchg
xchg
jb
sbb
pusha
sbb
ins
pop
arpl
and
push
fstp
clc
pop
sub
cmp
je
sub
push
cmp
cmp
or
sub
pusha
mov
mov
pushf
mov
bound
and
test
mov
add
add
nop
pop
add
fisttp
daa
popa
ret
dec
dec
inc
pop
or
les
mov
jae
dec
xchg
pop
xchg
call
add
stos
push
push
pop
cmc
(bad)
clc
mov
mov
sub
mov
cmp
add
fild
dec
mov
mov
push
lea
call
jg
add
clc
jmp
adc
test
pushf
jmp
or
and
mov
fst
sbb
out
mov
or
mov
ror
pop
rcr
enter
stos
push
clc
adc
ja
mov
cmp
dec
push
stos
add
adc
fild
js
cld
ins
out
jecxz
push
fist
call
cmp
test
cmps
cwde
mov
inc
pop
sbb
mov
mov
cmp
clc
adc
push
mov
mov
les
retf
(bad)
jl
aad
add
fadd
int3
loop
push
call
inc
xchg
inc
and
cmps
ret
or
dec
dec
dec
cld
push
pop
xor
repz
repz
jge
xor
or
add
cld
mov
add
jle
inc
neg
add
add
add
arpl
sub
(bad)
mov
leave
add
outs
or
add
mov
adc
add
fcom
jo
mov
or
loopne
out
add
mov
(bad)
pop
sti
cld
push
enter
xor
shr
mov
or
fild
or
jb
adc
sbb
call
jge
int3
cld
push
lods
sub
dec
lea
mov
in
ds
jp
call
adc
cmp
out
jno
fild
mov
clc
push
sub
stos
rcl
inc
fcomp
push
in
out
xor
add
or
pop
mov
clc
add
xchg
mov
xor
xchg
retf
cwde
sbb
or
call
sbb
adc
shl
ret
inc
jecxz
push
or
xchg
push
add
ret
or
push
nop
sbb
adc
jo
inc
add
je
sub
loopne
xor
xchg
dec
mov
pushf
cdq
dec
sub
inc
sub
dec
cmp
sti
cs
bound
popa
cmps
and
cmps
xor
push
xchg
dec
test
bound
add
int3
int3
in
outs
push
inc
add
add
xchg
jl
enter
ja
adc
in
sbb
inc
bound
add
adc
dec
fld
(bad)
data16
or
into
cmp
xchg
inc
xlat
fcmovnbe
test
sbb
sbb
mov
mov
stos
lea
add
jbe
add
popf
add
xchg
and
inc
and
and
aam
pushf
jp
lods
ret
mov
sub
jle
scas
hlt
and
or
fucomip
fcmovnb
jno
add
sub
adc
mov
push
add
adc
icebp
inc
pop
in
jo
mov
in
xchg
add
push
add
out
xchg
std
push
jbe
js
imul
adc
ins
jb
cmp
je
and
push
cli
rcl
xor
mov
test
imul
mov
repnz
mov
cmp
rcr
pop
xor
mov
sbb
add
push
je
dec
jo
fs
add
mov
cmp
or
sbb
jae
jmp
loopne
rcl
jmp
sbb
in
ret
or
mov
sbb
pop
push
dec
movs
jmp
scas
push
xchg
cmps
cmp
mov
test
xor
shr
icebp
adc
push
hlt
bound
stos
inc
pop
shr
mov
test
xor
sub
mov
jne
xor
mov
cli
bound
loop
xor
dec
push
xchg
jo
fs
mov
arpl
fbstp
addr16
pushf
in
push
or
fsubr
test
add
mov
push
or
mov
add
dec
sahf
dec
xor
dec
pop
cwde
out
add
mov
jle
mul
out
cmp
fimul
ret
xlat
ret
pop
lods
mov
or
popf
rol
call
jge
push
mov
jmp
adc
leave
mov
fisttp
popa
jp
loop
push
push
scas
mov
sub
pop
loope
push
test
pop
cmp
test
inc
cmp
push
ins
dec
jmp
xchg
enter
mov
loopne
lea
jo
or
push
call
out
push
xor
inc
dec
ret
loopne
mov
les
inc
sub
clc
sbb
je
sub
and
mov
mov
mov
mov
push
jmp
sar
jns
dec
push
push
cmp
cmp
push
into
sbb
cmp
pop
cmps
cli
data16
and
inc
inc
cmp
mov
mov
test
mov
es
add
ret
add
lods
fnstenv
cli
and
daa
dec
xchg
in
pusha
daa
and
(bad)
fdiv
scas
ret
sbb
cs
cmp
sub
sbb
scas
pop
pusha
rcl
push
mov
(bad)
sub
dec
and
sbb
in
or
cmp
data16
inc
pusha
xchg
push
lea
jg
pop
or
sbb
jbe
pusha
xor
jp
push
dec
je
mov
mov
call
(bad)
in
je
inc
inc
xchg
adc
jmp
adc
mov
movs
push
dec
jo
push
jb
xor
sbb
or
add
outs
mov
inc
mov
test
test
mov
dec
int
iret
cmp
ds
cmc
cwde
or
sbb
push
cmp
pop
add
imul
imul
data16
push
push
cmp
outs
shl
lahf
lods
icebp
das
add
mov
or
or
imul
adc
adc
inc
sbb
rcl
adc
or
inc
js
jb
mov
or
add
push
push
inc
mov
pop
jo
pop
fcom
push
xchg
out
or
jmp
adc
and
(bad)
sbb
jo
fnstcw
xor
and
cmp
arpl
xor
neg
mov
adc
cs
mov
(bad)
ret
push
icebp
call
mov
mov
(bad)
jo
mov
ds
sbb
xor
clc
dec
jo
test
sub
mov
mov
add
repnz
push
out
loopne
aam
push
mov
in
add
cmp
inc
(bad)
out
push
sbb
in
fsubr
sub
les
xchg
adc
lahf
pop
cmp
jge
jge
test
add
xor
inc
and
push
shr
or
mov
and
and
pop
rcr
loopne
adc
mov
loope
sbb
sub
push
(bad)
out
sbb
mov
movs
cmp
retf
aam
call
inc
(bad)
js
push
hlt
push
inc
ficom
push
or
in
ficom
or
out
clc
jbe
call
(bad)
jae
cs
fidivr
jb
bound
push
and
xlat
mov
push
inc
mov
cpuid
jge
(bad)
cld
(bad)
jmp
popa
pop
mov
inc
(bad)
lock
call
pop
add
mov
lds
in
inc
dec
jne
pusha
or
inc
cs
push
fdivr
xchg
mov
jb
inc
sub
clc
cmp
or
stos
or
xchg
test
ret
or
test
loopne
or
add
push
or
push
mov
push
push
xchg
in
aaa
jl
add
in
add
xchg
cmp
adc
pop
and
jbe
push
jecxz
cmp
ss
rcl
sar
sar
jne
xor
fadd
xor
dec
mov
xchg
adc
dec
inc
movs
dec
loopne
and
mov
jg
(bad)
add
in
str
and
sahf
xor
adc
cmp
mov
push
cmp
add
(bad)
or
inc
fcomp
repz
xor
es
jle
and
push
loopne
daa
inc
sbb
push
je
cwde
push
jno
pop
call
or
outs
push
sbb
fdivr
pop
fs
test
test
xor
push
and
movs
and
fmul
inc
enter
dec
dec
push
inc
xor
ins
mov
ins
add
inc
adc
lea
push
lds
(bad)
jl
icebp
push
dec
rol
je
clc
cmp
pop
cmc
test
cmp
push
xor
arpl
pop
push
add
sbb
pop
jl
ret
jge
cwde
jae
ja
loopne
lock
push
test
inc
or
ss
add
inc
jne
xor
in
fsubr
ja
call
scas
inc
adc
movs
adc
jo
scas
push
(bad)
mov
ss
(bad)
es
pop
adc
xchg
pop
sbb
mov
adc
rcl
aaa
enter
aaa
(bad)
enter
adc
cmp
mov
je
sub
je
scas
mov
test
push
daa
adc
cmp
sbb
pop
sub
jge
je
sub
je
inc
jno
das
xor
std
sbb
pop
or
fisttp
mov
cmc
or
sub
push
add
mov
loopne
test
loope
gs
jo
imul
loop
test
adc
rep
test
lds
jne
inc
add
call
push
mov
out
adc
push
fdiv
inc
add
inc
mov
repz
cmp
hlt
shl
lea
and
(bad)
sbb
pop
cmp
ins
movs
adc
and
sub
or
lea
xlat
push
pop
arpl
fdivr
inc
or
sub
pop
jae
and
or
repz
add
jmp
adc
int3
mov
jge
stos
xchg
or
int3
dec
cmp
mov
push
or
mov
sub
mov
js
test
push
test
adc
fadd
inc
pop
xor
sbb
(bad)
xchg
add
movs
add
and
dec
add
popf
mov
xor
jmp
mov
xchg
or
mov
popa
or
push
test
pop
ins
inc
sbb
test
sbb
push
sbb
in
add
xchg
mov
test
sbb
or
push
ins
mov
fdiv
add
int3
or
push
out
mov
xor
ficomp
outs
mov
mov
add
jmp
or
arpl
mov
cmps
push
adc
push
les
in
add
dec
dec
loopne
adc
in
ret
xor
add
inc
or
cmp
adc
lock
pop
mov
xor
loopne
push
clc
adc
xchg
xor
push
sbb
test
test
loope
sbb
(bad)
xor
call
sar
inc
add
ins
mov
or
add
sub
loopne
jo
(bad)
and
sbb
cli
stc
and
push
jbe
dec
aam
or
push
push
jecxz
pop
mov
and
push
enter
movs
push
popa
lock
pop
pop
jmp
jge
cmp
push
push
push
ret
mov
mov
mov
mov
mov
pop
or
test
ret
not
mov
xchg
es
inc
fdivrp
or
add
mov
push
je
mov
pop
sub
dec
mov
jmp
mov
add
mov
lods
or
(bad)
cs
scas
add
jmp
pcmpeqd
xor
mov
call
adc
xchg
dec
mov
ucomiss
fidivr
sbb
cmc
cmp
lea
stos
dec
pop
clc
ret
adc
push
or
(bad)
cs
aad
ffreep
or
or
sbb
add
lar
add
(bad)
cdq
mov
jmp
add
js
dec
dec
pop
push
pop
loop
lock
inc
ret
iret
dec
loopne
mov
and
shl
jmp
ficom
push
or
push
test
in
adc
call
sub
jae
imul
bound
in
jle
mov
sub
pusha
js
or
push
push
mov
sbb
shl
or
push
loope
cmp
sar
push
add
or
mov
mov
push
push
fs
or
inc
push
aam
jmp
add
inc
xor
sbb
xor
sub
jecxz
out
or
inc
dec
jne
mov
jnp
icebp
lea
xchg
mov
jb
test
adc
dec
dec
mov
add
xchg
or
movs
rcl
adc
fist
or
je
jmp
add
mov
jo
das
sar
xchg
sar
clc
mov
cld
dec
jmp
pusha
lahf
mov
xor
ins
inc
cmps
dec
adc
aaa
pop
adc
push
push
pop
call
adc
inc
loope
mov
(bad)
sbb
push
rcl
mov
or
cs
jl
push
add
jb
mov
(bad)
fbstp
in
inc
dec
or
inc
cmps
sub
sti
(bad)
and
std
pop
ins
cmp
jle
cmp
not
js
add
adc
mov
sub
movs
setge
ret
out
or
jmp
(bad)
or
jp
je
sbb
xor
xor
xor
inc
div
cwde
pop
push
sub
cmps
aad
mov
test
cs
jmp
neg
inc
or
pop
cmp
jle
inc
dec
pusha
out
mov
add
xchg
mov
pop
lods
cwde
arpl
dec
push
je
ror
in
inc
inc
jmp
cmp
push
mov
sub
dec
jl
inc
pop
fstp
dec
je
je
adc
nop
jl
xchg
jge
out
or
lock
lock
sub
(bad)
in
clc
add
or
xchg
sbb
fadd
push
je
cld
sbb
rol
pop
jne
in
pop
adc
imul
xor
add
jmp
test
xor
xor
jne
idiv
add
and
xchg
addr16
jg
cld
sbb
and
pop
adc
or
ds
pusha
or
test
or
lea
pop
pop
add
push
test
adc
xchg
pop
mov
clc
jmp
mov
pop
lock
fsubr
jl
in
das
ja
push
je
sbb
out
pusha
out
mov
mov
add
cmc
and
add
pop
or
adc
aas
out
and
fwait
mov
inc
cmp
mov
cmp
xchg
ret
(bad)
add
iret
xor
cmp
pop
dec
sbb
xchg
cmc
sub
aas
dec
add
(bad)
int3
push
and
dec
rcr
jl
dec
fimul
loopne
inc
xor
mov
xor
nop
shl
mov
xor
sbb
je
mov
push
nop
neg
stc
hlt
mov
test
jl
adc
inc
jbe
ds
ins
mov
mov
pusha
xchg
cs
mov
mov
jae
pop
mov
movs
adc
into
adc
add
add
jae
bound
dec
popa
outs
fs
gs
mov
hlt
push
outs
push
imul
gs
gs
gs
gs
ud0
dec
or
add
or
xor
gs
data16
mov
imul
imul
call
mov
imul
imul
das
push
fs
and
(bad)
aas
stc
(bad)
adc
je
outs
outs
dec
outs
je
data16
movs
sti
seto
push
dec
je
ins
dec
inc
test
add
idiv
adc
arpl
jo
ins
jns
jmp
scas
sub
dec
outs
imul
or
sub
imul
bound
fdecstp
in
or
stos
jbe
push
push
sub
pop
ins
pop
push
pop
pop
dec
ja
ins
adc
adc
or
push
jns
cmp
fcmovnb
ins
cs
cs
inc
outs
or
(bad)
inc
aas
sar
int3
sbb
outs
add
ds
lock
dec
jle
or
pop
dec
xor
cdq
movs
xor
inc
mov
inc
fstp
mov
mov
mov
out
add
sbb
(bad)
xor
and
jbe
push
mov
push
sub
inc
js
push
gs
sub
fistp
mov
sub
pop
sbb
inc
xor
and
xor
sub
sbb
inc
xor
ret
into
sbb
retf
dec
js
cli
ins
or
in
sub
imul
fucomp
sbb
es
add
movs
(bad)
inc
push
dec
pop
inc
xor
loope
add
push
sub
push
ret
add
jo
cmp
push
sbb
add
int3
out
arpl
or
xor
push
cmp
addr16
inc
int
push
xchg
pushw
scas
xor
add
dec
rol
mul
and
add
clc
dec
ret
nop
hlt
xchg
add
push
push
arpl
ins
ins
inc
dec
dec
xor
adc
rcl
push
std
cdq
inc
cmp
bound
enter
or
int3
cmp
lods
arpl
push
arpl
xor
cmc
cmp
fld
movs
ins
push
add
test
(bad)
pop
outs
stos
jg
pop
add
push
clc
sar
sar
pop
or
push
imul
ss
adc
je
jae
sbb
jb
arpl
cld
pop
add
fwait
ins
(bad)
push
shl
das
out
push
dec
pushf
loope
or
push
loope
ret
cmp
pop
les
push
enter
mov
fild
sub
clc
or
xor
jp
cmp
ins
add
das
push
or
stos
ins
xor
mov
fsubr
or
inc
push
popa
xor
add
mov
xor
xor
sub
fsub
adc
inc
(bad)
lods
mov
sub
out
sbb
push
addr16
sahf
and
and
dec
push
imul
xor
dec
addr16
xor
ja
(bad)
gs
and
pop
ins
outs
fisubr
adc
xor
and
add
push
jmp
xor
cmp
and
jl
inc
or
(bad)
js
cs
cli
das
add
jne
jae
loopne
inc
cmp
cld
xchg
dec
jbe
sub
mov
inc
imul
les
dec
lods
daa
sub
aas
ret
or
jl
gs
adc
dec
(bad)
jge
aaa
push
xor
jmp
xor
push
mov
xor
std
push
inc
jo
test
clc
imul
loopne
cwde
add
int3
nop
mov
push
outs
loope
(bad)
jne
arpl
xor
push
inc
sub
jae
imul
fild
jae
test
push
shl
cwde
adc
pushf
sbb
adc
fcom
arpl
inc
mov
not
add
test
mov
pop
jg
test
call
add
jno
inc
sbb
and
or
out
inc
ror
mov
leave
jb
or
(bad)
mov
cs
xchg
pusha
sti
(bad)
cld
mov
or
dec
add
cmp
test
fisttp
or
je
cmp
add
inc
movs
enter
bound
and
mov
mov
int3
aas
call
inc
arpl
inc
inc
loopne
mov
pop
jmp
cmp
add
test
cli
pop
add
xadd
and
or
enter
out
push
and
enter
push
jns
mov
(bad)
sbb
add
arpl
xlat
gs
lock
call
fadd
jmp
addr16
add
in
mov
(bad)
cmp
ss
add
idiv
sub
jo
mov
add
adc
xor
dec
inc
sbb
push
inc
mov
xchg
call
push
les
test
push
hlt
test
inc
xchg
inc
fld
jnp
pop
push
inc
dec
jbe
sti
fiadd
inc
xor
ss
xchg
mov
js
push
push
dec
push
dec
out
ss
push
imul
fwait
jmp
dec
or
int
mov
push
sbb
pop
mov
push
add
push
fsub
jo
in
sahf
mov
pop
fstp
(bad)
in
push
int3
out
push
add
mov
sar
mov
dec
push
or
mov
jge
imul
push
dec
or
neg
fcmovnu
aam
xchg
in
mov
jmp
ret
idiv
inc
ret
(bad)
(bad)
stos
jle
and
cmovbe
outs
xchg
call
pop
movs
js
xchg
push
or
jl
jp
push
push
inc
mov
fidiv
and
loop
pushf
push
mov
adc
call
mov
jo
or
pop
pop
mov
icebp
mov
stos
fs
dec
xor
out
dec
fcomp
lock
ds
cld
jg
popf
inc
ss
adc
adc
(bad)
mov
faddp
rcr
(bad)
mov
mov
push
sbb
(bad)
adc
mov
loopne
adc
or
sub
inc
nop
call
ret
inc
and
aas
sub
inc
dec
ja
pop
jmp
cmp
pop
inc
adc
mov
ins
add
fcomp
dec
aad
inc
sub
rcr
pusha
pop
mov
cmovne
ds
adc
sub
jmp
and
outs
clc
dec
xchg
bound
inc
or
(bad)
ficom
xchg
sub
in
repnz
lods
jne
pop
and
pop
outs
(bad)
jnp
mov
adc
inc
adc
push
jae
inc
gs
fadd
pusha
push
pop
pop
adc
pop
das
mov
or
shl
add
adc
or
mov
adc
adc
push
add
mov
gs
inc
or
or
ror
push
add
push
mov
push
fs
sar
jl
call
jg
push
bound
cmp
or
cmp
lds
jp
xor
cmps
test
popa
ins
outs
addr16
push
outs
jmp
pop
and
sbb
fimul
push
out
push
dec
or
prefetchw
dec
pop
push
outs
in
(bad)
mov
add
movs
sbb
out
mov
das
mov
imul
jo
outs
or
mov
mov
and
loope
int
push
rcl
sahf
cmps
jmp
sbb
gs
lods
and
or
jne
push
mov
movs
iret
retf
loopne
addr16
pop
add
js
sti
sar
dec
jg
aaa
ret
pop
fwait
clc
xchg
push
inc
jb
popa
jns
cmp
mov
icebp
js
fcomp
sub
push
or
sbb
jns
xor
repnz
xchg
pop
adc
dec
inc
push
adc
pop
or
fs
jo
cmp
xchg
lods
cld
jbe
das
movs
in
add
jo
(bad)
std
into
ss
xchg
adc
je
adc
mov
jns
and
cli
popa
scas
gs
pop
push
cmc
push
push
jge
or
retf
or
(bad)
add
or
mov
add
int
retf
dec
dec
push
xor
fstp
stc
and
or
adc
imul
int
adc
push
cdq
fadd
out
pop
ret
dec
(bad)
data16
cmp
or
mov
xor
sbb
sbb
mov
mov
lahf
push
push
sub
imul
or
xor
adc
adc
dec
pop
jbe
adc
mov
and
inc
push
mov
dec
es
and
or
mov
sbb
dec
xchg
push
ror
inc
not
inc
or
add
pusha
push
rol
(bad)
jmp
push
dec
bound
push
add
pop
push
lea
fimul
add
pop
out
push
int
in
cmps
add
mov
aas
jns
rcl
cmp
fcmove
inc
mov
inc
jns
or
cs
stos
jae
dec
pop
mov
daa
fild
adc
xor
jae
inc
pop
add
cmp
test
sbb
add
cmp
rol
es
sub
popa
adc
inc
adc
popa
test
dec
dec
adc
jp
test
push
idiv
iret
sub
or
pop
jo
jne
fist
add
addr16
push
push
dec
dec
gs
pop
sub
or
rcr
adc
(bad)
rcl
sub
sub
push
(bad)
not
(bad)
test
pushf
pop
sahf
ins
enter
ss
add
cmp
inc
and
loope
loopne
or
cmp
ds
ins
ins
pop
jecxz
xchg
in
les
mov
adc
xor
sub
sar
mov
xor
jg
xchg
mov
pushf
shl
ins
or
mov
ins
inc
js
ins
sub
mul
(bad)
push
xor
xor
pusha
add
mov
sub
pop
cmps
add
pop
add
push
add
mov
inc
jle
or
pop
call
xor
loopne
out
sub
push
dec
in
ins
add
movs
int
inc
jl
push
mov
mov
mov
shr
je
xchg
call
or
pop
cmp
xor
js
inc
bound
push
or
(bad)
je
inc
ins
popa
jae
cs
pop
and
mov
xchg
pusha
into
pcmpeqd
jb
and
gs
mov
adc
sbb
push
xchg
xchg
push
fild
push
xchg
pop
push
pusha
pop
call
out
xor
retf
fcomp
fs
ins
mov
add
push
mov
bound
pop
fcom
dec
(bad)
cmc
popa
fild
push
adc
in
leave
inc
and
adc
pop
xlat
push
lea
sub
pushf
inc
sbb
call
das
add
xchg
mov
movs
inc
add
add
or
push
mov
cmp
lods
pop
into
leave
cmp
mov
in
enter
fwait
xchg
push
pop
add
scas
xlat
call
aas
dec
mov
push
mov
pop
mov
xor
sbb
jns
aaa
out
or
js
ret
pusha
sbb
mov
adc
mov
or
push
mov
add
xor
data16
sbb
ss
push
cmp
scas
cmp
cmp
loopne
call
retf
rol
test
retf
aas
and
push
mov
hlt
inc
ds
into
mov
push
jle
pop
sbb
movs
sub
xchg
(bad)
aas
aam
push
sub
cmp
ficomp
bound
fdiv
xlat
ss
into
sbb
test
mov
idiv
mov
lods
std
aas
inc
add
or
push
mov
fsub
aas
sbb
loopne
sub
loopne
in
jbe
xchg
sti
sar
out
jbe
push
mov
xchg
fild
mov
clc
pushw
and
push
add
adc
int3
call
loopne
jl
hlt
add
mov
aas
ret
loopne
hlt
mov
lar
mov
out
lea
cmp
push
inc
(bad)
gs
aad
xlat
xor
push
fs
shr
pushf
push
or
iret
xor
xor
scas
mov
das
dec
in
pop
mov
xor
bound
or
call
add
mov
ror
push
(bad)
loopne
jecxz
je
push
or
sti
les
push
loopne
adc
jns
les
pop
fsub
test
and
pop
dec
fcmovnb
or
push
loop
js
jb
dec
mov
(bad)
sub
aaa
sbb
mov
aaa
sub
addr16
cmp
call
dec
and
xchg
cmp
aam
sbb
mov
mov
sbb
maxps
sbb
cmps
adc
ds
ins
repz
imul
pop
sub
aaa
jo
mov
mov
adc
fdiv
std
xchg
mov
cli
imul
arpl
out
add
mov
popa
cli
and
pop
mov
(bad)
or
xchg
hlt
or
pop
push
sbb
adc
idiv
das
xor
xor
and
sub
rcl
inc
gs
scas
sbb
xor
add
adc
dec
shr
or
adc
cmp
xor
cmc
rcl
aam
cmp
pusha
in
sub
sar
int3
and
mov
xor
xchg
xor
popa
sub
pop
xor
jmp
push
cmp
push
add
mov
js
sub
sti
push
push
jnp
and
pop
adc
sub
and
(bad)
jae
sub
pop
dec
sbb
jbe
add
mov
imul
push
mov
(bad)
adc
xor
nop
mov
add
xor
push
lea
mov
pop
dec
mov
out
push
ret
pop
sub
js
push
mov
push
dec
adc
dec
xchg
xchg
dec
pop
or
xchg
pusha
aas
test
sub
repnz
push
bound
xor
xchg
add
pop
adc
or
mov
dec
div
xchg
ffree
mov
or
adc
inc
nop
inc
scas
pop
or
test
fild
xchg
cmp
push
push
in
(bad)
sar
cmp
mov
pushf
in
ins
pxor
addr16
sub
push
push
cmp
sbb
dec
ja
movs
xor
popf
add
inc
test
stos
push
mul
(bad)
je
fdivr
clc
rol
movs
cmps
lods
int
xlat
push
loope
leave
sbb
mov
imul
(bad)
pop
push
in
out
mov
dec
xor
das
pop
mov
push
push
add
inc
or
mov
inc
cvtps2pd
mov
ins
sti
in
enter
(bad)
je
stos
jmp
xlat
mov
push
das
ja
jno
jp
dec
jb
repnz
das
sub
test
in
bound
stc
call
cli
call
and
test
daa
add
add
pop
or
and
pop
add
cmp
(bad)
shl
repnz
add
add
adc
push
mov
or
or
add
push
mov
mov
(bad)
(bad)
(bad)
cmp
add
adc
sbb
adc
or
jg
xchg
inc
mov
mov
mov
jmp
stos
jmp
lock
jmp
jmp
sar
clc
jmp
dec
dec
loope
sub
out
or
add
fisubr
dec
shl
push
adc
es
pusha
ds
repz
mov
fdiv
sub
out
loope
aam
adc
int3
repz
int
adc
adc
pop
mov
pop
js
push
sbb
xor
mov
nop
test
je
fs
fdivr
and
push
sbb
push
push
out
repz
cld
sbb
push
es
push
inc
dec
add
pop
movs
push
nop
in
jnp
xlat
add
sub
pop
sub
or
pop
push
loopne
cmp
int3
push
xor
mov
je
in
out
mov
fisttp
ss
loop
test
mov
(bad)
adc
cld
jmp
and
push
pop
inc
sub
loopne
inc
jne
push
nop
jne
ins
inc
or
or
add
xor
sbb
add
dec
dec
jge
fiadd
add
mov
ins
arpl
add
sbb
ins
je
mov
pop
inc
and
dec
sbb
mov
sub
imul
imul
fst
pop
and
syscall
cmps
aam
not
dec
inc
jae
lods
xor
xchg
jge
lods
adc
inc
dec
cmp
aaa
ror
mov
or
imul
cs
ins
outs
sub
mov
popa
mov
lea
aam
push
push
pusha
ja
imul
pop
mov
xor
adc
mov
sub
inc
gs
mov
adc
add
mul
lds
push
pop
pcmpeqw
lea
or
loope
push
jnp
dec
ins
data16
push
lea
push
add
sbb
cmp
adc
mov
ret
and
mov
adc
imul
and
ins
jns
and
fsub
or
xor
pop
adc
hlt
push
loopne
mov
loopne
push
adc
or
pop
add
dec
mov
scas
packssdw
leave
bound
ret
sub
shl
jl
sub
cwde
pushf
xor
sbb
cmp
jp
and
sub
dec
mov
add
neg
pop
jne
and
and
pop
adc
adc
push
jno
test
mov
pop
cmp
imul
and
inc
pop
cs
add
rcl
dec
imul
mov
cmps
adc
or
dec
adc
(bad)
dec
movs
mov
push
fmul
les
pop
loop
je
sbb
out
or
sbb
add
das
adc
pushf
cmp
add
(bad)
jne
jo
sbb
(bad)
pusha
mov
inc
jae
daa
mov
jmp
js
mov
sbb
push
jl
adc
mov
test
mov
lds
sbb
pushf
out
cmp
retf
into
mov
in
lods
mov
sbb
enter
mov
in
enter
inc
cmp
enter
and
pop
enter
jl
(bad)
in
pop
fisub
adc
mov
or
sub
xchg
push
or
jge
in
add
pop
jbe
sub
jae
jp
xor
or
lds
cli
stos
test
dec
movs
sbb
inc
push
xchg
dec
jno
mov
nop
inc
adc
jns
sbb
push
out
or
or
lock
dec
mov
repz
mov
fisttp
outs
push
push
cmp
movs
push
jne
aam
or
ret
daa
aam
movs
pop
xchg
lock
ins
push
test
xchg
into
adc
loopne
inc
adc
adc
imul
jp
(bad)
stos
push
je
push
shl
push
mov
pop
or
ret
push
and
jg
jmp
jge
lea
inc
or
outs
inc
push
pop
push
sub
inc
sbb
(bad)
icebp
push
leave
inc
sbb
movs
dec
adc
pop
xchg
pop
pop
add
es
rol
push
pop
sub
mov
jne
je
lods
or
aaa
test
and
inc
inc
cmps
shr
xor
and
loopne
mov
sbb
cmp
inc
shr
call
sbb
dec
pop
ficom
sub
in
dec
lods
push
les
push
inc
xchg
inc
adc
fld
aam
(bad)
add
(bad)
pop
mov
pop
inc
adc
in
inc
pop
xchg
mov
jmp
arpl
into
inc
cmp
add
nop
or
jp
inc
add
xor
lock
pop
daa
push
xor
retf
(bad)
popa
adc
xchg
and
(bad)
add
pop
inc
sub
test
xchg
test
bound
inc
cmp
jmp
pop
mov
or
mov
dec
sub
shl
mov
je
sbb
xchg
adc
loopne
es
arpl
adc
sti
jne
mov
adc
sti
js
push
in
mov
dec
ins
inc
mov
and
add
cs
dec
pop
rol
add
scas
cmp
call
dec
mov
pop
pop
es
(bad)
pop
loopne
mov
mov
push
jae
or
jbe
test
fadd
js
adc
cmp
cmp
loope
scas
pusha
add
xchg
and
ins
dec
adc
add
dec
add
sub
rcr
cmps
add
sti
sub
jno
nop
xchg
jae
dec
ror
inc
aaa
add
call
pop
pop
or
pop
dec
clc
enter
sbb
dec
cmps
int3
fadd
shr
adc
shl
popa
dec
mov
or
jg
push
mov
pop
jmp
add
and
add
add
test
and
cmps
add
aam
xor
or
inc
imul
and
sub
sub
adc
lds
push
xor
xor
push
adc
inc
and
push
or
pop
or
add
inc
pop
es
je
or
out
ins
xor
inc
icebp
stos
xor
dec
scas
out
push
jae
xchg
dec
imul
jb
inc
mov
and
dec
adc
mov
dec
push
xlat
mov
sbb
xor
call
jne
fimul
fadd
or
xchg
sub
(bad)
and
cmp
jae
fwait
mov
sub
and
addr16
out
loopne
add
shr
nop
cs
rol
cmp
jmp
test
inc
cwde
xchg
pusha
mov
pushf
mov
and
push
loopne
ret
data16
pop
push
inc
retf
push
cmp
inc
inc
add
xor
in
or
into
mov
cmp
sbb
fadd
jne
push
push
xor
xchg
xor
xchg
adc
ficomp
dec
dec
push
push
adc
dec
sbb
inc
inc
pushf
adc
mov
(bad)
clc
sbb
fnstenv
xor
or
and
loope
call
xor
test
fs
pop
xchg
xor
shr
push
add
in
inc
inc
pusha
jecxz
(bad)
cs
add
push
add
inc
adc
or
push
jns
jl
adc
lock
and
add
xor
or
cmc
cwde
jmp
lods
cmp
jbe
mov
inc
jmp
push
add
call
dec
and
jb
sbb
push
ret
inc
push
inc
pop
cwde
inc
mov
push
popa
in
sub
cmp
dec
in
out
(bad)
fcom
xor
xor
rol
dec
cdq
test
mov
scas
dec
cs
inc
retf
fimul
or
add
lods
dec
mov
sub
push
add
imul
mov
aas
call
inc
mov
lds
shr
adc
sub
pop
push
mov
outs
push
and
dec
hlt
loope
add
xchg
lds
loopne
pop
mov
push
adc
int3
mov
rol
xchg
sbb
shl
or
loopne
loopne
xchg
scas
lods
mov
in
push
dec
push
mov
add
push
ror
pop
inc
cdq
dec
push
scas
cmp
cwde
pop
jecxz
add
mov
adc
neg
jmp
pusha
push
mov
add
pop
adc
setge
into
mov
rol
stc
inc
fwait
add
dec
fisub
mov
and
dec
dec
scas
sbb
outs
loopne
arpl
inc
inc
inc
add
retf
scas
mov
jg
inc
dec
(bad)
push
loope
add
add
jne
rcl
mov
mov
cwde
sbb
pop
dec
sbb
js
mov
dec
jle
ret
add
jno
xor
(bad)
mov
inc
push
aaa
jo
push
mov
mov
push
(bad)
xchg
inc
or
xlat
and
inc
push
rol
pop
adc
or
jbe
inc
pop
ja
dec
js
push
fbld
fs
out
fisubr
push
out
shl
sbb
jbe
fs
call
outs
pusha
loope
dec
sbb
mov
dec
lock
pop
dec
xchg
mov
xchg
je
dec
or
pop
push
jae
sbb
cmp
pop
inc
sbb
call
pushf
les
cs
inc
pop
enter
test
dec
cmp
pusha
push
pop
fcom
add
sbb
push
pop
xchg
inc
clc
inc
xchg
outs
pop
pop
inc
call
mov
pop
pop
pop
push
cs
sbb
ja
and
inc
shl
ds
inc
pop
cmc
rcr
pop
lahf
jae
xchg
dec
inc
pop
dec
sbb
lahf
shl
dec
push
jo
scas
aam
pop
or
cwde
inc
popa
stos
sbb
pop
and
ror
loopne
or
stos
push
and
shr
add
arpl
dec
loop
popf
xchg
and
inc
inc
pop
dec
sub
or
dec
cmps
jbe
and
jae
out
fiadd
out
int3
pop
add
inc
pop
dec
mov
cmp
pop
dec
into
push
mov
xchg
fadd
loope
fst
pusha
jecxz
neg
add
or
stos
dec
cmp
cmp
push
hlt
xlat
sub
pop
cmp
push
fstp
mov
clc
js
inc
lods
mov
sub
dec
add
ins
fnstsw
(bad)
push
inc
pop
fs
or
outs
inc
mov
fs
cmp
mov
xor
cmp
pop
dec
outs
add
push
push
inc
push
add
sbb
cdq
xor
jmp
push
std
xor
or
xor
xor
jp
mov
cmp
dec
xor
cmp
xor
pushf
ret
dec
ret
enter
or
in
enter
dec
inc
jl
enter
sub
mov
push
push
inc
bound
int3
out
mov
pop
jge
mov
push
mov
lods
pop
mov
cmp
mov
mov
andps
push
mov
cmc
mov
mov
mov
mov
mov
in
push
cs
mov
loopne
mov
pop
sub
mov
mulps
test
shl
sbb
cmp
sub
pop
push
add
or
in
cmp
cli
dec
push
inc
add
rol
or
pop
pop
movs
(bad)
push
or
adc
fsubr
pop
dec
in
adc
ror
dec
mov
jmp
scas
popa
pop
or
and
lds
dec
pop
jecxz
adc
jmp
add
int3
pop
push
fisubr
sub
out
push
adc
out
jo
jnp
add
out
mov
push
or
or
out
dec
test
add
add
cmps
jge
dec
mov
mov
mov
(bad)
mov
stos
adc
jns
cmp
movs
push
and
xor
inc
jne
rol
ja
clc
jo
inc
ss
jno
pop
pop
jmp
pop
xchg
or
inc
dec
ja
ret
enter
daa
pop
xchg
lods
or
jno
adc
push
or
mov
fwait
nop
adc
int
mov
test
sbb
sbb
add
adc
push
retf
push
sub
dec
stos
dec
shl
stc
mov
inc
xchg
inc
fcomp
daa
and
mov
push
adc
faddp
prefetchnta
cmp
enter
xor
psubb
add
fisttp
adc
inc
pop
pushf
fidiv
dec
add
inc
lods
cmps
push
ja
dec
jne
cmc
add
sbb
sub
pop
xchg
shl
mov
push
mov
xchg
xchg
xchg
fldenv
xchg
xchg
in
arpl
push
stos
inc
pop
jo
inc
sbb
arpl
sbb
sub
mov
cmp
cmc
inc
mov
mov
enter
xor
fs
in
pop
shl
and
mov
xchg
cmp
or
xchg
xor
dec
pop
cmp
jle
adc
dec
jns
js
adc
push
mov
addr16
ss
jo
mov
in
hlt
push
push
or
or
add
add
add
xchg
xchg
ret
or
xor
xchg
mov
push
xor
out
or
aaa
lds
pmaxsw
nop
add
and
aas
push
xor
ins
cmps
jle
push
adc
sub
and
sti
cmps
test
sahf
fs
push
mov
addr16
(bad)
push
mov
dec
adc
lea
add
loopne
jo
mov
push
fist
dec
adc
mov
out
cmps
sbb
push
cmp
mov
pop
out
test
out
ins
push
hlt
loopne
pop
loopne
out
fiadd
ins
cwde
mov
add
iret
mov
adc
clc
rcr
mov
inc
add
and
dec
popa
addr16
sub
cmp
dec
bound
jl
ret
rcr
idiv
inc
and
or
pop
push
mov
mov
dec
fdiv
movs
add
ret
add
mov
and
ins
das
add
cld
xor
je
add
add
jle
loopne
sbb
mov
shr
push
(bad)
adc
cmp
mov
sbb
js
adc
or
adc
pop
mov
retf
cmp
xor
jb
arpl
shl
push
xor
imul
pushf
mov
mov
sub
sub
rcr
sub
(bad)
fcomp
xor
in
jae
or
mov
fild
int3
cmp
icebp
or
ficomp
mov
sub
sahf
sub
pop
fucomp
jnp
sbb
push
inc
aaa
jo
jb
pop
inc
push
mov
mov
jmp
icebp
sahf
sar
push
outs
pop
sub
pushf
jle
cmp
add
xlat
and
push
mov
or
paddusb
imul
or
cmp
imul
(bad)
dec
mov
sub
loope
add
(bad)
mov
aaa
je
pushf
push
or
sub
push
mov
mov
arpl
sub
inc
lds
xor
inc
adc
(bad)
sahf
(bad)
fcom
add
or
cmp
push
mov
pop
fsub
cmp
ins
push
outs
movs
daa
movs
cdq
rcr
sbb
add
lock
push
test
adc
inc
cmp
or
jae
push
add
shrd
aaa
push
or
inc
mov
in
add
test
push
lods
test
retf
jo
aad
addr16
mov
popa
xchg
pop
cmp
sub
dec
dec
or
inc
ret
out
push
add
les
dec
mov
pop
aad
ins
adc
mov
mov
jns
ret
push
cmp
jo
jno
aas
or
shr
or
jno
xor
push
pop
jno
and
sub
xor
or
cdq
xchg
and
pusha
push
nop
sub
jp
hlt
aam
mov
jnp
cmp
cmp
pop
pop
inc
mov
ror
mov
clc
mov
test
adc
fs
adc
mov
jb
fs
outs
dec
fs
ret
jmp
fs
adc
pop
test
fs
aam
and
fs
push
fs
neg
jno
fs
mov
fs
sbb
pop
xor
push
js
jb
push
xchg
loopne
add
lods
dec
sbb
or
jne
or
sahf
imul
add
popa
and
or
adc
adc
pusha
xor
mov
mov
fmul
xchg
sub
movs
popf
inc
mov
adc
dec
daa
pop
push
imul
lea
cmp
ret
(bad)
inc
loope
nop
sub
stos
and
bswap
pop
jno
shl
nop
aad
sub
inc
cmp
les
pushf
je
mov
mov
jo
cdq
ins
jecxz
jbe
or
sbb
outs
dec
push
fcomp
mov
je
dec
arpl
add
and
hlt
int
cmps
and
push
dec
adc
jb
xchg
test
dec
or
or
xchg
cmp
mov
(bad)
fcom
inc
cmp
call
aam
push
push
inc
jns
mov
xchg
jae
inc
inc
or
inc
sub
les
mov
cwde
adc
retf
add
xor
popa
retf
mov
sbb
outs
mov
je
pop
pop
int3
cmp
aaa
xchg
mov
lods
and
lds
add
or
fwait
jne
push
push
les
and
shl
mov
inc
aas
adc
adc
inc
pop
scas
rcl
adc
jl
add
push
push
jnp
or
push
popa
or
xor
xchg
les
and
sbb
pop
mov
in
add
inc
imul
inc
mov
inc
xlat
add
add
add
ja
in
inc
dec
or
pusha
(bad)
cmp
or
push
adc
scas
xor
push
cld
jb
mov
imul
lock
outs
inc
or
mov
or
and
es
outs
add
addr16
dec
push
inc
add
stos
leave
lock
mul
outs
push
cmps
outs
push
out
push
je
inc
jno
xadd
cmp
or
test
ss
js
sar
fcmovne
or
push
push
pop
pop
push
dec
bound
test
add
inc
fucom
cdq
(bad)
int
lods
cmps
out
or
ins
loop
pusha
dec
pop
aas
push
loop
adc
mov
and
hlt
dec
push
dec
inc
bound
aaa
push
lahf
sbb
or
mov
pop
test
dec
jge
add
dec
inc
rol
adc
or
push
fmul
mov
sbb
mov
push
push
jp
fxch
sti
repnz
(bad)
fsubr
push
push
enter
sbb
cwde
push
cs
int
dec
push
or
and
imul
add
jne
pushf
xor
push
mov
movs
sbb
aaa
out
lahf
push
push
imul
neg
loopne
adc
sbb
movs
and
cld
adc
call
addr16
out
jecxz
pop
and
and
mov
into
push
xor
adc
mov
pop
sbb
dec
mov
mov
cmp
pop
in
movs
(bad)
xor
into
shr
loope
(bad)
prefetch
dec
rol
mov
ins
(bad)
xchg
aas
mov
jne
cmp
xor
push
sbb
jo
adc
ins
imul
imul
add
push
dec
out
in
pop
ins
movaps
sub
arpl
cwde
add
dec
cmovle
xor
stos
in
sub
imul
add
lea
dec
adc
mov
add
jns
jecxz
iret
add
push
or
push
adc
mov
xchg
pop
pop
dec
fcmove
sub
mov
outs
cmp
xchg
inc
cmp
pop
add
rcr
pop
xchg
cmp
bnd
jecxz
dec
sbb
push
loopne
push
push
fdiv
adc
sar
mov
jne
jne
sbb
lods
sub
add
in
in
imul
push
adc
push
pushf
and
mov
push
sbb
faddp
pop
mov
(bad)
jecxz
inc
fiadd
mov
test
js
js
shld
in
fsub
leave
fdivr
lock
xchg
jmp
out
inc
cmp
shr
inc
cs
ja
sbb
stos
and
xlat
or
mov
pop
inc
lods
and
fwait
bound
and
sbb
or
out
rcr
mov
data16
data16
or
gs
jo
jns
inc
loopne
push
pop
mov
cmp
inc
jmp
add
daa
fsubr
sub
jg
adc
push
pop
or
fmul
mov
pop
sti
jb
inc
lock
arpl
scas
rol
pop
out
push
mov
xor
xor
enter
je
das
scas
in
mov
jne
les
xor
scas
lock
xor
sub
imul
sub
and
and
pop
sub
mov
mov
fwait
pop
fcmove
pop
add
xor
(bad)
cs
and
loopne
inc
xchg
mov
mov
js
call
mov
mov
mov
cs
or
ficomp
repnz
jo
mov
nop
pop
test
outs
mov
inc
xor
sbb
pop
sub
dec
add
in
pushw
imul
mov
jo
sbb
aaa
sub
add
and
and
pop
push
int3
fcomp
fdivr
sbb
lods
add
or
hlt
test
pop
push
jne
adc
xchg
sti
in
loopne
sbb
das
jmp
ret
rcl
xlat
lea
addr16
mov
or
inc
dec
inc
jb
addr16
mov
adc
hlt
gs
rcl
fidivr
(bad)
bound
pop
sub
shl
and
mov
mov
stos
xor
arpl
fmul
cmp
or
cwde
sbb
mov
cmp
or
inc
inc
outs
jne
mov
ret
fbstp
pop
jmp
jnp
push
xlat
mov
push
popa
jae
inc
pushf
xor
loopne
(bad)
cmp
xor
hlt
mov
xor
out
mov
xor
and
movs
mov
jo
dec
add
dec
popf
dec
lock
sbb
test
les
fsub
sahf
js
ret
xor
ficom
dec
cwde
loop
lods
xor
and
sbb
jne
adc
lock
xchg
mov
outs
inc
sbb
inc
pop
adc
cmp
aas
inc
mov
ds
or
ins
sub
outs
jbe
sbb
sub
inc
gs
xor
dec
jno
xor
adc
and
sub
sub
xchg
and
mov
push
dec
and
ins
mov
sbb
pop
shl
mov
outs
sub
push
or
add
jp
push
into
and
pop
cmp
rol
or
sub
fist
adc
xor
cmp
sbb
sub
mov
loopne
ja
cwde
in
ss
nop
xchg
popa
push
test
jmp
xchg
adc
gs
push
mov
push
xchg
cmp
outs
xchg
fld
or
push
push
dec
xor
add
mov
cmc
push
test
dec
dec
dec
packssdw
daa
daa
and
sar
xchg
xchg
xchg
daa
sub
leave
enter
test
fs
rol
xchg
xor
repnz
dec
jb
jb
jno
retf
cmp
jns
mov
enter
cmp
sbb
pushf
pushf
mov
dec
dec
dec
dec
cwde
iret
(bad)
adc
pop
repz
xor
fistp
push
ret
fild
jo
(bad)
fisttp
push
mov
ins
add
mov
rcr
lds
(bad)
adc
jge
les
das
lock
mov
inc
jmp
movs
ins
sbb
sub
pop
fs
pop
push
retf
arpl
push
loopne
or
jg
add
inc
scas
cmp
jle
es
mov
sbb
mov
add
xchg
xchg
or
add
mov
enter
jb
dec
fs
ins
fmul
push
add
outs
push
inc
or
(bad)
test
out
add
in
or
jae
imul
lock
push
or
gs
pop
scas
in
cmps
cmp
add
inc
outs
out
or
push
mov
pop
jb
jbe
outs
pop
or
push
push
adc
dec
sbb
inc
dec
jmp
in
inc
cs
inc
or
jl
push
xlat
rol
sub
jnp
clc
adc
dec
add
js
pop
icebp
or
ins
ins
dec
or
jg
xor
mov
es
push
xchg
mov
loope
pop
adc
mov
mov
cmp
ins
jo
jo
cvtps2pi
in
xchg
int3
ja
ja
rol
jnp
pop
dec
mov
ss
lahf
or
pop
ficom
sub
lock
sub
push
and
push
add
jle
inc
or
ret
adc
cmp
or
push
inc
sub
pop
test
sahf
mov
jne
je
jmp
adc
inc
mov
pushf
sbb
xor
ret
in
sbb
lea
push
das
mov
popa
imul
mov
jmp
pop
push
dec
push
mov
in
in
jae
jo
adc
or
adc
gs
push
and
pop
cwde
push
or
push
jb
(bad)
pop
adc
mov
jae
shl
bound
nop
pop
adc
outs
mov
fisubr
adc
ins
enter
adc
or
pop
movmskps
jle
xor
adc
mov
cmovb
mov
int
and
sar
adc
ror
jmp
sub
add
inc
jp
je
shr
cmp
push
xchg
xchg
add
sub
cmp
shl
adc
push
outs
ret
lods
and
shr
not
imul
jnp
fsubr
ins
inc
adc
(bad)
or
adc
push
mov
pop
pop
in
and
push
outs
ins
mov
aad
inc
ins
adc
popa
popa
sbb
adc
pop
vphaddwq
ins
or
sbb
or
scas
pop
xor
pop
add
push
(bad)
xor
mov
lods
or
push
inc
rol
adc
rol
adc
rcr
mov
push
mov
les
add
and
mov
adc
push
xor
sbb
sbb
leave
sbb
mov
gs
sbb
pushf
mov
sbb
mov
mov
loopne
nop
sub
sbb
sbb
cmps
iret
sbb
xchg
inc
data16
sbb
lea
sbb
mov
mov
cmc
and
sbb
je
mov
sbb
xchg
dec
outs
sbb
sbb
xchg
mov
push
mov
jb
add
sbb
xchg
push
inc
inc
test
sbb
adc
loopne
mov
in
out
inc
push
xchg
pop
movs
es
dec
push
pop
cwde
imul
pop
dec
ud1
xchg
xor
add
xchg
or
or
rol
push
loope
in
imul
jecxz
sahf
mov
sbb
test
mov
dec
sbb
shl
outs
pop
in
cli
pop
mov
add
popa
xor
add
jmp
cmp
jmp
fcomp
add
outs
jmp
mov
or
add
add
rol
add
inc
inc
or
jg
inc
add
mov
xchg
inc
adc
push
pop
xchg
int3
dec
add
lods
inc
add
xor
call
ret
jmp
sub
push
jmp
mov
xchg
fist
push
popa
sub
adc
fidivr
or
sbb
daa
adc
pop
add
outs
push
test
add
repnz
cmp
ret
test
and
and
aam
add
add
inc
loopne
push
shl
(bad)
(bad)
cld
push
jae
cwde
imul
inc
movs
inc
inc
shr
pop
add
stos
pop
popf
adc
cmp
xor
xor
pushf
adc
sbb
jmp
inc
mov
or
and
inc
push
pop
xor
aas
xor
inc
pop
(bad)
mov
cwde
sbb
push
pop
out
sbb
mov
add
lds
and
repnz
or
xchg
inc
add
or
dec
add
int
push
add
cmc
push
dec
int3
pop
pop
push
pop
pusha
xor
add
dec
add
outs
lahf
inc
inc
aaa
add
dec
sahf
xchg
inc
or
xor
inc
or
jge
pop
lods
outs
push
pusha
or
sbb
dec
add
add
pop
inc
push
add
xor
inc
xchg
pop
xor
add
xchg
inc
dec
xor
push
or
inc
mov
jae
dec
adc
mov
or
aas
push
popa
add
gs
pop
cmp
imul
xchg
push
mov
xor
xor
dec
aas
data16
repnz
push
sbb
push
cmp
push
les
ds
push
hlt
test
inc
xchg
adc
xor
push
mov
dec
(bad)
xor
ss
xchg
fild
and
mov
push
push
dec
dec
out
ss
data16
push
push
jmp
dec
or
pop
jnp
pop
push
sbb
pop
mov
push
add
popa
inc
pusha
es
mov
sahf
mov
pop
test
lock
sti
jle
in
push
int3
out
push
mov
out
fiadd
push
or
sbb
mov
lods
cwde
mov
push
dec
or
jnp
ins
outs
aam
xchg
in
mov
jmp
clc
nop
fstp
js
call
cld
or
je
ds
jo
sbb
push
gs
pusha
jno
add
pusha
add
mov
add
(bad)
(bad)
push
push
sbb
js
push
and
ins
(bad)
push
sbb
cs
jmp
or
aad
xor
arpl
lods
sbb
(bad)
push
mov
gs
or
sbb
icebp
add
lea
mov
out
xor
xor
inc
inc
or
sub
inc
aam
jl
rcr
sahf
out
push
fld
mov
inc
dec
mov
inc
cmp
lods
jmp
sub
sub
mov
sub
nop
mov
cwde
push
sbb
mov
mov
inc
inc
mov
les
ins
pop
fld
int3
xchg
sbb
mov
sub
push
xchg
push
in
add
popa
sbb
sub
cmp
push
mov
xchg
add
sub
stos
dec
outs
sbb
scas
xor
adc
dec
and
je
imul
and
cmp
ja
or
inc
pop
add
inc
mov
fild
stos
in
in
xor
or
shr
jl
push
ss
xor
mov
ins
je
inc
sub
cs
arpl
test
lea
dec
or
pop
mov
lea
stos
inc
loopne
(bad)
loop
push
(bad)
jp
mov
das
pop
xor
popa
jge
outs
rcr
and
repz
outs
adc
or
(bad)
jmp
dec
or
adc
push
add
sub
mov
bound
js
lods
movs
movs
push
sub
lahf
out
in
mov
inc
pop
push
adc
mov
mov
push
cmp
inc
jle
outs
lods
movnti
push
adc
pushf
dec
xor
lea
xlat
icebp
xlat
rol
cmps
pop
or
test
inc
add
sbb
xlat
pop
repz
or
or
add
cmp
xor
jle
push
lea
mov
and
and
sbb
mov
jecxz
add
pop
movs
add
adc
cmc
push
xor
jne
jae
lock
(bad)
pop
ins
and
xchg
call
pop
push
lock
adc
cmp
push
inc
sub
xor
das
adc
int
mov
inc
pushf
das
pop
mov
inc
lahf
xchg
loopne
data16
scas
push
lods
cwde
push
and
sahf
add
add
mov
jnp
lods
scas
add
pushf
shr
add
loopne
and
and
jg
gs
movaps
outs
jne
jmp
mov
mov
pop
imul
shl
mov
stos
mov
leave
or
sub
and
add
xlat
and
xchg
ret
lds
xchg
rol
jl
aas
mov
nop
xor
sbb
or
lea
sub
cmp
inc
dec
ja
and
xor
ins
xor
aaa
add
ja
pop
lea
test
sub
sbb
inc
aaa
or
fld
or
inc
adc
(bad)
dec
xchg
push
aam
sub
sub
jns
sub
loopne
in
jae
lea
jnp
sbb
mov
rcr
xor
sbb
in
fst
dec
(bad)
or
dec
mov
inc
ficomp
imul
or
jo
neg
loopne
inc
add
add
and
jo
jecxz
lock
cmp
imul
pop
movs
or
ss
adc
or
sbb
inc
js
pop
or
jo
mov
or
fbstp
push
cmps
enter
jne
mov
sbb
pop
xchg
aam
xor
dec
jnp
and
push
adc
sbb
call
push
leave
mov
leave
add
cmps
fwait
or
fsubr
aad
fwait
leave
jno
add
aam
xor
imul
or
mov
cmp
push
mov
inc
push
jb
fs
add
cmp
add
jb
gs
ret
pop
and
and
xchg
inc
jmp
sbb
movs
ret
jg
add
sbb
pop
ret
cmps
add
mov
mov
adc
add
test
and
jns
cmp
jns
aas
add
pop
test
jl
mov
cmp
mov
shl
jge
fwait
mov
add
clc
into
add
loope
scas
std
mov
lods
dec
rcl
or
mov
mov
or
pop
and
mov
rcr
test
push
add
fidiv
or
ins
cwde
mov
add
adc
ret
retf
ins
pop
adc
mov
pop
pop
or
xchg
xchg
retf
or
mov
test
and
sub
cmp
dec
jmp
and
adc
or
in
pop
mov
addr16
pop
dec
adc
push
pusha
sbb
xor
jno
fcom
in
inc
pop
addr16
adc
icebp
call
push
add
push
adc
pop
mov
and
inc
mov
inc
lahf
add
movs
ins
es
call
test
cmp
jecxz
push
rcl
jbe
aam
bound
pop
adc
loop
adc
ds
cwde
in
iret
dec
sbb
pop
fwait
in
cmp
push
into
call
dec
sbb
lock
in
sahf
inc
fimul
adc
add
ja
add
and
or
test
mov
adc
adc
inc
inc
ins
xchg
test
sbb
loop
and
imul
adc
outs
pop
pop
retf
pusha
pop
test
adc
adc
jae
or
or
or
sbb
sub
jns
or
ins
jo
xchg
mov
xor
mov
or
add
loope
and
inc
mov
or
idiv
in
mov
adc
add
xchg
test
cmp
xchg
mov
std
pop
mov
and
jne
add
jne
jge
nop
mov
jne
ret
loopne
push
pop
pop
ror
cli
mov
sbb
adc
dec
pop
inc
cdq
mov
add
mov
cmp
xchg
add
fcom
(bad)
fsubr
xchg
or
add
jbe
dec
gs
imul
sub
out
and
mov
cmp
ret
movs
inc
sbb
mov
pop
inc
rcl
or
mov
or
or
addr16
sbb
pop
sbb
jno
sbb
or
or
enter
sbb
mov
dec
mov
inc
inc
pop
ret
xchg
or
mov
jle
xor
jg
les
push
popf
ret
mov
xor
loope
fmul
sub
jp
adc
(bad)
mov
add
dec
and
push
inc
add
cld
or
repnz
mov
mov
add
xchg
xchg
mov
test
scas
inc
and
aad
sub
sub
mov
push
cld
mov
dec
movs
cli
(bad)
push
or
and
push
jo
fisubr
ins
fmul
push
mov
pusha
sbb
sbb
mov
inc
sbb
data16
mov
sahf
and
push
mov
test
shr
and
xchg
fwait
loopne
rol
bound
inc
sbb
je
mov
dec
pop
push
lods
add
add
js
sti
jno
pop
sbb
addr16
add
mov
push
out
add
or
or
inc
add
sbb
ret
push
call
ret
mov
mov
mov
push
push
push
mov
mov
test
je
push
mov
push
dec
add
les
add
lahf
mov
mov
push
je
and
dec
inc
int3
lahf
std
sbb
push
push
add
call
pop
pop
lahf
push
mov
sbb
jbe
cmps
lock
les
add
push
mov
push
xchg
ins
loopne
ja
mov
or
sbb
jge
clc
add
mov
pop
add
mov
cmp
cwde
out
call
or
test
jmp
and
add
add
and
pop
cmp
xor
addr16
jmp
add
pusha
push
cmp
dec
or
rcr
inc
sbb
pop
push
pslld
mov
nop
push
mov
push
mov
cmp
aaa
es
push
xchg
push
and
outs
movs
mov
pusha
sar
mov
mov
mov
add
enter
lock
pop
ret
sahf
add
stos
hlt
mov
cld
pusha
lods
adc
jae
hlt
mov
fsubr
pushf
sbb
push
push
push
jmp
jg
push
mov
mov
cmp
mov
cmp
sub
sub
xchg
inc
cld
inc
pop
pop
pop
aaa
out
outs
cmp
jmp
jmp
inc
sbb
jge
jnp
or
push
rcr
push
push
clc
pop
ret
jp
lock
sti
jp
jmp
push
cld
pushf
mov
pop
es
jg
jp
test
je
mov
mov
adc
pusha
sti
push
or
sbb
ret
and
jne
(bad)
(bad)
dec
ret
sbb
and
aas
dec
shl
test
test
sbb
cmps
sti
jne
cmp
sbb
ins
shl
add
push
and
mov
push
jns
or
mov
sbb
(bad)
cmp
add
cmps
dec
xlat
mov
mov
pop
(bad)
jl
cmp
cmp
sete
inc
xchg
or
jle
inc
lock
call
mov
cld
pusha
cmps
idiv
ds
push
rol
sbb
fs
icebp
cld
in
cmp
jne
add
and
lock
push
sahf
pop
outs
sub
mov
aaa
pop
mov
xchg
cld
adc
mov
push
push
out
cmps
shl
jmp
sbb
(bad)
add
dec
cld
call
mov
fwait
sub
inc
dec
idiv
(bad)
mov
scas
(bad)
test
push
mov
mov
xor
pop
ds
inc
dec
jne
inc
xor
cmp
dec
es
xor
addr16
cld
sbb
loopne
fcmovne
pop
(bad)
lock
out
add
outs
rcr
mov
stos
es
push
push
bnd
outs
mov
sti
das
mov
mov
ret
add
add
or
adc
popf
retf
pop
call
in
push
mov
adc
adc
in
(bad)
fcom
mov
push
mov
lea
cmps
shl
cmp
dec
retf
add
pop
add
(bad)
pop
dec
pop
neg
movs
retf
test
daa
dec
inc
test
sub
adc
or
int
inc
adc
add
inc
inc
add
adc
push
adc
fpatan
sbb
mov
call
lea
(bad)
call
pop
inc
mov
or
cmp
mov
pop
(bad)
sbb
in
clc
outs
push
mov
push
mov
test
hlt
inc
jmp
clc
or
add
int3
in
jl
mov
sub
push
sar
jle
jne
sub
je
pop
int3
lahf
test
icebp
inc
aam
add
add
pop
outs
xor
mov
mov
sub
xchg
fadd
or
push
or
clc
(bad)
pushf
adc
in
jle
(bad)
pop
(bad)
hlt
mov
les
js
add
inc
lock
sbb
pop
movs
es
mov
mov
xor
xchg
lock
test
(bad)
lock
ins
iret
and
loope
mov
rol
sbb
adc
mov
sbb
or
push
add
dec
or
mov
icebp
push
inc
or
inc
sbb
mov
xor
inc
cli
or
ins
xor
ret
adc
ds
push
inc
push
out
pushf
push
xor
(bad)
int3
pop
gs
pop
je
mov
into
inc
pop
xor
iret
(bad)
mov
fldenv
xchg
movs
and
mov
inc
push
sbb
mov
stos
or
adc
stos
mov
add
adc
inc
out
jb
sti
or
or
in
lea
sbb
jle
xor
dec
movs
pop
xchg
and
adc
outs
or
jg
or
mov
sbb
lods
add
cmp
imul
mov
jmp
push
dec
je
jmp
cs
add
sub
lahf
in
xor
adc
cmp
and
sub
inc
add
add
add
test
loop
int3
mov
clc
jle
push
xchg
push
push
dec
lods
mov
adc
push
push
pop
add
fild
cmp
inc
mov
and
add
add
xchg
xchg
add
push
add
add
xor
stos
div
pop
adc
push
pop
test
call
jo
scas
outs
call
cmp
push
sbb
cwde
nop
jb
mov
out
mov
imul
cmp
cmps
cmp
dec
inc
push
loop
test
jmp
sub
pop
lock
mov
jne
inc
cld
add
cmp
sbb
rcl
repz
lea
xchg
push
sbb
jne
adc
sbb
or
fsubr
ret
adc
xchg
repnz
and
clc
ins
push
or
dec
scas
mov
fist
sti
test
adc
jmp
jns
nop
pop
ret
shrd
mov
lods
stos
xor
pop
hlt
cmp
call
sub
push
pop
je
push
dec
xchg
pop
cld
push
js
sti
mov
jno
bound
or
inc
and
cmps
ret
add
mov
(bad)
outs
outs
les
jno
add
ret
jmp
push
cmps
cmps
pop
push
mov
and
js
fs
cdq
bound
adc
ret
ins
adc
loope
jns
cmp
inc
adc
pushf
lahf
dec
in
cmp
aaa
cmp
inc
in
or
cmps
push
mov
push
dec
cmps
aaa
mov
add
mov
push
lock
pusha
jo
out
push
stos
dec
lods
push
mov
cwde
mov
mov
hlt
mov
test
pop
adc
push
mov
call
xor
and
inc
sub
scas
ret
ja
push
inc
dec
inc
cdq
idiv
push
ret
movlps
std
push
lock
jmp
inc
inc
or
pop
jbe
jnp
hlt
cmp
cmp
cs
jmp
add
call
or
in
test
jle
push
call
dec
outs
add
sub
fnstenv
jae
movs
and
(bad)
push
or
fxsave
jbe
mov
cmp
push
je
jmp
dec
push
mov
shr
xor
and
or
mov
xor
stos
add
cmp
mov
push
ret
mov
pusha
fucomi
sbb
or
jl
les
mov
ins
neg
sub
jmp
ja
test
mov
out
sahf
pop
jbe
mov
mov
or
fcmove
xor
shl
inc
mov
dec
mov
and
bound
inc
xor
add
(bad)
jg
jle
push
rcr
jne
loopne
test
fs
push
push
and
cwde
test
jno
std
mov
pusha
sbb
mov
dec
mov
push
and
pop
mov
repnz
adc
sbb
in
pop
data16
mov
mov
pop
shl
sbb
inc
and
fdivrp
inc
pop
cmp
je
mov
mov
push
dec
adc
dec
aaa
cmp
add
or
or
xor
and
jne
and
sahf
jle
bswap
and
imul
cmp
or
mov
shr
push
test
jge
cmps
sub
fmulp
add
imul
mov
add
std
fnsave
das
adc
ret
sbb
fldcw
mov
sbb
adc
adc
cld
xchg
sti
pop
jle
adc
mov
mov
adc
push
xchg
inc
ja
dec
push
hlt
or
adc
popa
mov
in
cs
xor
int
xchg
add
es
sysenter
push
imul
push
mov
mov
aas
mov
das
mov
mov
test
jge
sar
adc
mov
loope
nop
mov
mov
test
xor
stos
loopne
cmp
sub
sbb
bnd
sbb
(bad)
pop
stos
jecxz
jmp
inc
push
mov
aas
in
adc
jl
sbb
lea
push
inc
fiadd
and
fcomp
cmp
sub
xor
sbb
test
cmp
and
and
xor
push
add
fld
push
or
adc
test
fadd
repz
lea
inc
mov
adc
push
mov
pop
movs
pop
inc
es
scas
jb
xor
push
push
jecxz
push
mov
pop
aad
clc
clc
sbb
pop
ja
inc
fdiv
sti
or
loopne
or
in
xor
fs
jmp
pop
xor
inc
sti
add
fadd
neg
dec
aam
outs
jne
inc
inc
mov
lea
push
dec
ret
xchg
pop
push
stos
test
mov
xchg
cwde
loope
cli
sar
xor
mov
jecxz
loope
stos
je
mov
xchg
jbe
mov
xor
push
daa
mov
xchg
(bad)
fdivr
call
mov
or
fmul
pop
push
fdiv
lea
mov
aam
pop
jge
data16
sub
xor
jle
loopne
or
push
sbb
adc
adc
and
fsub
jle
or
mov
pushf
lea
in
or
add
adc
movs
into
mov
push
cld
cwde
xor
ss
or
mov
and
mov
cld
inc
xor
sbb
fstp
adc
les
jg
int3
sbb
sbb
arpl
pop
inc
sbb
cmc
fwait
xor
mov
sahf
or
mov
adc
imul
xchg
iret
mov
cld
jmp
pop
jmp
mov
outs
adc
mov
push
adc
bnd
mov
out
adc
mov
jp
ret
adc
push
test
call
mov
add
add
xor
(bad)
fld
shr
mov
inc
mul
imul
fs
pusha
push
mov
cmps
aaa
inc
or
sbb
adc
push
mov
pop
rcl
or
pop
add
mov
adc
dec
jne
mov
sbb
in
out
jno
outs
pop
lea
mov
pop
pop
push
arpl
rol
add
pop
push
mov
loope
out
jno
aas
lods
or
mov
ds
inc
popa
mov
test
je
mov
out
cmp
and
mov
dec
add
mov
sub
fnstenv
addr16
pop
xor
pop
out
mov
pop
jg
lock
mov
fsub
fstp
std
popa
jno
mov
shl
push
test
sbb
int3
aad
jg
pop
mov
fucomp
movntq
xchg
addr16
mov
mov
push
ret
push
aam
xchg
outs
xchg
jae
fistp
push
or
push
or
add
ja
xchg
scas
scas
mov
add
fadd
adc
loope
pop
je
jecxz
cmps
xor
mov
xchg
es
or
lods
xor
sub
pop
and
pop
mov
imul
inc
outs
sbb
dec
outs
add
jecxz
cmp
rcl
cmps
push
xor
test
loopne
stos
sub
xchg
push
ja
jne
push
movs
mov
mov
cs
les
test
adc
icebp
std
xor
or
jne
into
mov
push
shl
sbb
mov
xchg
sub
loopne
push
ins
dec
sbb
test
loopne
cmp
add
xchg
movs
adc
push
sbb
mov
jmp
xlat
es
pusha
mov
stos
pop
sub
sub
add
mov
out
pop
jge
inc
into
inc
or
dec
and
push
or
out
movs
sub
xor
mov
dec
je
add
or
lds
push
lea
push
mov
push
clc
aaa
or
dec
jmp
ret
inc
inc
inc
pop
mov
outs
or
lds
sbb
out
sbb
pop
scas
out
inc
add
mov
pop
cmp
jle
add
test
mov
mov
mov
jnp
push
and
fs
pushf
sbb
(bad)
jl
into
jo
imul
jae
mov
enter
xchg
loop
add
leave
cmp
je
test
add
jle
mov
xor
fsub
xchg
movs
jae
icebp
jne
mov
add
not
in
inc
adc
add
call
xchg
mov
jae
es
addr16
in
rol
test
in
add
popf
add
lidtd
mov
dec
add
out
pop
fdiv
loopne
stos
xchg
daa
ficomp
adc
mov
push
sub
cli
cmps
push
or
push
add
jmp
ds
or
push
mov
(bad)
movq
pop
cmps
xchg
or
sti
leave
xor
mov
add
and
pop
test
in
sub
in
adc
mov
cmp
and
popa
jge
test
lods
push
fs
iret
loope
push
xchg
sbb
lock
or
adc
cmp
jno
xchg
dec
test
popa
jns
call
pop
cmps
cmp
mov
mov
fild
inc
and
scas
jmp
into
sub
(bad)
cs
xor
xor
jmp
je
int3
ins
mov
sbb
dec
mov
push
mov
or
lea
push
xchg
mul
retf
fwait
in
(bad)
data16
into
or
dec
lea
cli
jge
mov
mov
mov
push
pop
mov
push
leave
les
(bad)
mov
sub
or
test
xor
dec
loopne
dec
push
cmp
inc
cdq
dec
clc
xor
adc
jo
jmp
adc
movs
(bad)
call
sbb
cmp
sbb
and
mov
fs
lea
pop
pop
sahf
or
popa
mov
mov
xor
or
jb
mov
mov
mov
cld
mov
adc
rol
(bad)
inc
js
iret
mov
sbb
push
jnp
or
sbb
or
daa
cmp
pop
push
lea
sub
mov
mov
mov
xchg
sbb
add
mov
mov
push
mov
out
and
adc
pusha
jmp
fsubr
sub
outs
and
pusha
pop
adc
out
ret
xchg
mov
mov
sti
jmp
cs
mov
xchg
jne
or
jle
add
push
xchg
push
and
and
call
test
and
dec
and
and
inc
mov
mov
inc
push
inc
clc
cmps
ficomp
loopne
inc
dec
xchg
loop
cmps
inc
pusha
mov
xchg
sti
icebp
mov
push
mov
fsubr
mov
clc
cmps
inc
push
pop
pop
cmp
daa
cmp
adc
inc
adc
xchg
cmp
pushf
mov
dec
lahf
loopne
sub
call
fidivr
mov
mov
mov
call
les
aam
xchg
xor
sbb
rcl
jns
push
xor
clc
xor
jge
stos
push
out
jmp
and
inc
and
xor
mov
imul
add
xlat
mov
sbb
call
adc
and
das
stos
add
into
clc
sub
fsubr
loope
sti
sub
sbb
or
add
add
push
xlat
test
or
cmp
or
lds
sub
or
add
or
shr
push
mov
in
inc
cmp
jae
shl
ins
ret
adc
loopne
loope
jne
sti
adc
lahf
sbb
jecxz
push
xchg
pop
lock
outs
sbb
mov
push
sbb
test
retf
int3
jb
sub
mov
xlat
clc
movs
setnp
or
xor
lahf
into
mov
add
cmp
call
aaa
rol
cmp
addr16
out
ss
inc
fimul
ss
test
int3
mov
adc
ss
test
push
and
xlat
popa
mov
rcr
jp
scas
add
jle
and
push
inc
cmp
pop
xor
pop
jae
pop
or
add
and
inc
sbb
pop
jnp
pop
jne
jmp
push
in
jge
ja
ja
movs
scas
je
loop
sbb
add
or
adc
add
add
loopne
sbb
dec
jmp
bound
cs
push
mov
inc
fs
inc
(bad)
cdq
out
dec
sar
les
xor
xchg
mov
scas
mov
sub
test
cmp
std
repz
(bad)
mov
mov
adc
push
xor
add
mov
cli
jle
ins
mov
sub
pop
fld
test
sub
data16
or
jbe
ret
mov
test
cmp
inc
sbb
or
jle
test
push
loope
shr
test
std
(bad)
fadd
jl
cmp
pop
shl
sub
in
in
mov
push
jns
(bad)
(bad)
and
dec
xchg
sub
mov
pusha
sti
ret
test
push
loopne
and
sub
xchg
push
sub
int
je
or
xchg
push
add
add
mov
xor
add
pop
xchg
xchg
and
arpl
xchg
ins
stc
adc
pop
mov
outs
nop
hlt
ins
adc
sub
add
mov
jg
jne
or
mov
mov
mov
inc
aam
inc
je
cs
ror
jo
add
mov
push
ret
pop
mov
jp
mov
cmp
push
je
sbb
call
aaa
push
xchg
push
mov
inc
fcomp
xlat
mul
in
xchg
or
mov
cmps
arpl
inc
test
in
pusha
enter
mov
lock
jns
mov
pusha
dec
mov
pusha
stc
pop
add
and
into
call
push
sub
mov
mov
imul
and
mov
inc
xor
xchg
nop
mov
shl
adc
int3
add
jl
inc
and
nop
or
test
jne
mov
xchg
push
push
and
push
into
pushf
fiadd
mov
jl
jmp
xchg
sub
mov
xchg
sbb
pusha
shl
mov
pop
in
dec
jo
icebp
add
call
xor
inc
scas
mov
inc
cmp
push
jbe
sbb
clc
add
fwait
add
mov
ficom
dec
add
in
(bad)
js
add
push
push
jb
dec
add
arpl
push
mov
dec
je
dec
push
dec
popa
into
scas
bound
push
add
jae
fnstcw
cs
xchg
neg
inc
cmps
sbb
jo
sbb
iret
int
or
les
add
dec
aas
pop
shr
push
mov
or
fsub
loopne
jo
pusha
and
push
dec
and
or
shr
movsx
or
push
aas
mul
xchg
adc
inc
and
cmp
push
pusha
push
mov
fsub
hlt
and
out
imul
iret
add
imul
and
and
dec
adc
and
dec
(bad)
int3
cs
cmc
scas
cdq
lods
and
push
imul
xchg
cmps
push
mov
and
dec
xchg
adc
sbb
adc
sti
sbb
les
cmp
aam
mov
add
jbe
sub
sbb
jo
inc
adc
or
xchg
(bad)
aam
daa
cmp
sbb
adc
or
cmp
call
fsub
sbb
pusha
aas
sub
sub
dec
add
push
jmp
bndstx
mov
sbb
mov
jle
sbb
retf
in
pop
jae
or
cmp
cmp
pop
ds
or
push
push
push
or
or
mov
pop
mov
js
add
push
dec
ds
daa
rol
cmp
sbb
fadd
mov
neg
adc
jl
inc
pop
jmp
pop
fs
cmps
ret
cmp
mov
and
push
js
in
push
cmp
das
jp
xor
into
ins
stc
test
sub
ror
or
inc
add
adc
add
push
cmps
sub
loope
push
dec
daa
sbb
jne
add
aas
in
cmp
or
fnsave
adc
xchg
and
or
mov
pop
lock
push
mov
lock
sbb
push
dec
clc
jne
dec
pop
imul
nop
ds
push
push
push
sub
pop
cld
mov
lock
lds
(bad)
add
add
pop
ret
cmp
retf
jne
fs
jo
push
mov
cmp
shl
mov
sete
bound
pop
add
(bad)
call
adc
push
dec
adc
mov
xor
sbb
sub
xor
nop
sub
or
add
dec
test
jl
inc
xor
or
mov
sbb
mov
add
popf
popf
inc
inc
(bad)
outs
xor
add
dec
jne
pop
call
mov
jb
das
icebp
add
xchg
ret
fsubrp
aam
cmps
sub
lahf
test
lods
ret
lods
mov
cmc
cmps
pop
jbe
or
pop
ror
push
add
push
into
pushf
pop
dec
mov
and
xchg
mov
xchg
test
mov
lods
or
and
sbb
or
pop
imul
dec
push
pop
xor
adc
cli
sbb
or
and
test
jmp
(bad)
jne
cmp
daa
and
data16
push
jne
lea
inc
sub
mov
jbe
push
mov
adc
mov
cmp
scas
pop
inc
(bad)
mov
cmp
je
pop
fidivr
pop
cld
adc
rol
mov
sbb
es
jp
fnstcw
int
jnp
mov
daa
mov
icebp
adc
add
push
or
adc
jmp
cs
call
xchg
pop
stos
inc
or
stos
sbb
or
cmp
mov
xor
bound
lock
pop
add
cmp
cmp
jg
(bad)
(bad)
push
cli
fcom
cli
sub
jb
mov
ret
ret
sbb
(bad)
jmp
cmp
sub
fidivr
xor
inc
push
mul
mov
cmp
test
xor
inc
cmp
jmp
push
xchg
lock
adc
inc
cs
and
mov
sbb
push
jmp
push
es
lods
sbb
pop
sbb
aad
sbb
test
mov
jg
add
movs
std
inc
cmp
das
sar
mov
mov
and
imul
pop
adc
jnp
ds
mov
and
push
ss
dec
cmp
sti
mov
xlat
int3
loope
rcr
aam
neg
inc
jne
popa
add
adc
push
ins
jp
inc
out
pop
test
sub
sbb
mov
xchg
lahf
jbe
jne
mov
js
adc
dec
mov
push
sahf
test
add
fs
cmp
mov
fsub
cmp
mov
js
inc
xor
in
sbb
push
xchg
xchg
mov
cmp
ss
scas
jo
data16
xchg
out
pop
xor
daa
sbb
lea
dec
jp
push
cwde
ss
pop
inc
mov
or
xchg
jg
movs
sbb
and
mov
xor
pushw
test
test
and
and
mov
adc
cmp
mul
sbb
inc
inc
sahf
sti
and
dec
jns
push
and
add
fwait
dec
sbb
idiv
add
lods
(bad)
fld
dec
sbb
or
in
pushf
not
jmp
and
pop
clc
inc
ss
fnstsw
stc
sbb
inc
fiadd
cmp
push
scas
pop
hlt
jne
hlt
jbe
sub
push
int3
mov
xor
jo
das
xchg
mov
sub
xor
xor
daa
nop
push
loope
dec
ficomp
test
sub
jo
movs
or
pop
adc
push
pop
push
out
icebp
and
cmps
unpckhps
les
or
xchg
sbb
mov
nop
sbb
aam
adc
push
bound
push
js
loope
inc
sbb
test
fild
nop
(bad)
or
mov
xor
inc
je
shr
mov
add
xor
inc
fdiv
mov
inc
or
dec
and
xchg
loopne
push
(bad)
push
sbb
and
lea
cld
in
and
xor
jne
jg
and
repnz
and
xor
or
dec
mov
jmp
add
(bad)
icebp
push
sbb
pop
and
dec
xor
xchg
adc
jo
mov
mov
or
enter
ss
adc
adc
push
mov
add
in
and
jl
clc
mov
cmps
mov
inc
dec
test
inc
cmc
add
sbb
rol
js
jne
jmp
inc
dec
jne
pop
pop
pushf
rcl
mov
push
xchg
push
test
pop
push
(bad)
(bad)
lods
call
sub
mov
adc
inc
mov
test
xor
push
dec
loopne
jmp
call
or
rcr
or
rol
or
aas
add
adc
and
lea
mov
mov
xor
sti
pop
cmc
shr
mov
add
movs
xor
push
mov
outs
inc
lea
shr
add
or
sub
lahf
push
je
add
pop
mov
xor
adc
lock
inc
shr
sahf
cmp
sbb
mov
add
sbb
add
xchg
loop
inc
cmp
fmul
xor
xor
sub
hlt
inc
or
test
dec
test
fst
stos
add
xor
pop
mov
clc
out
sub
sbb
adc
(bad)
in
jno
push
add
push
dec
icebp
scas
mov
popa
scas
push
and
jmp
push
inc
push
mov
add
iret
push
adc
push
sub
push
push
push
push
fwait
call
sub
push
popa
or
dec
dec
xor
daa
std
adc
inc
xor
ror
xchg
lahf
and
and
push
sbb
sub
ret
or
inc
or
ficom
dec
and
add
dec
sbb
pusha
mov
and
pop
cmps
jbe
int
bound
mov
jecxz
xchg
out
and
fistp
or
inc
cdq
mov
sahf
inc
xor
jns
clc
dec
call
jl
inc
push
(bad)
in
xor
aaa
push
lods
xchg
xchg
je
das
pusha
lock
pusha
xchg
sti
ins
inc
dec
jne
pop
sub
jecxz
sqrtps
mov
add
mov
call
mov
mov
inc
rcr
imul
ror
cmp
out
and
out
pop
sbb
or
mov
sbb
add
cmp
inc
add
push
je
or
ret
mov
lock
aaa
data16
cwde
add
cmps
dec
xchg
rcr
clc
lea
lea
mov
hlt
sub
add
mov
adc
mov
sbb
mov
sbb
xchg
int3
adc
dec
add
ss
dec
in
mov
push
jae
inc
aaa
inc
dec
inc
(bad)
push
cld
lea
das
push
mov
mov
mov
and
nop
hlt
inc
ss
add
cmp
mov
sbb
add
mov
mov
dec
sub
jle
adc
or
jmp
test
out
jmp
dec
adc
and
aas
neg
jmp
adc
pop
add
add
mov
or
and
adc
cmp
int
adc
je
or
pop
psrlw
or
adc
or
aaa
sar
enter
inc
hlt
or
pushfw
mov
shr
test
(bad)
and
or
mov
xchg
es
std
add
and
lea
movs
push
jle
mov
sbb
cdq
jmp
daa
or
cmc
cwde
inc
push
in
mov
out
aas
and
sbb
sub
push
imul
(bad)
cmp
jle
jle
or
and
xlat
imul
arpl
add
add
ja
push
out
push
pop
pop
jnp
test
adc
xchg
mov
in
jne
sbb
shl
push
xchg
inc
mov
popa
je
outs
into
fst
leave
pop
or
mov
mov
test
leave
add
xchg
mov
mov
sub
es
jb
test
test
or
retf
fdiv
lds
push
cld
mov
seto
jns
lods
and
ss
fdiv
scas
cmp
test
scas
cmp
or
pop
stc
pop
mov
xchg
ror
or
dec
jb
jecxz
in
cmp
or
cmp
lods
ret
popf
shr
xor
push
pop
push
movs
arpl
and
jecxz
out
sub
loopne
shr
xor
mov
aam
push
ja
pop
cmp
push
and
add
shl
sbb
add
cmp
(bad)
sub
rcl
cmp
jmp
in
push
test
and
inc
dec
xor
dec
add
adc
dec
xor
inc
dec
add
das
clc
mov
lea
movs
add
or
mov
inc
ror
pop
dec
je
cmp
jne
cmp
in
loope
daa
adc
or
movs
or
push
ins
jmp
add
stc
add
cmp
pop
loopne
lods
sub
inc
mov
loop
mov
shr
cmp
or
out
lahf
lock
push
je
xor
and
inc
fadd
mov
sub
popf
js
aas
add
out
xchg
clc
pop
mov
mov
sbb
xor
xchg
and
dec
mov
push
pop
adc
cmp
arpl
ret
push
out
add
scas
rcl
mov
push
fsub
add
jp
add
add
(bad)
in
push
jmp
int
mov
xlat
mov
dec
mov
jle
sbb
sub
js
sub
scas
and
dec
jne
and
int3
test
mov
push
add
lds
sub
cmps
add
loopne
sub
retf
jo
shl
pop
cmps
add
test
jb
push
fdivr
ret
imul
outs
outs
cmp
xchg
sahf
push
sbb
outs
jb
lahf
and
add
and
fisubr
sar
mov
cmc
test
ds
stc
ds
dec
test
adc
lahf
add
or
and
mov
cwde
add
jmp
fdivr
sub
sbb
test
sbb
rol
adc
test
in
in
movs
xor
sub
xchg
arpl
int3
adc
repnz
rcl
ror
fucomip
cmps
push
push
add
fnclex
cwde
pop
push
pusha
adc
mov
(bad)
mov
enter
outs
add
push
inc
sub
cmp
gs
pop
movs
test
repnz
or
and
push
test
clc
aaa
or
rcr
(bad)
xchg
ret
push
add
loopne
push
je
pop
scas
push
inc
or
mul
or
repnz
fmul
add
or
stos
jb
fcmovnbe
sub
stos
xchg
jmp
mov
sub
shl
push
push
enter
fnsave
lods
sti
leave
mov
sbb
leave
inc
div
stc
add
push
popa
cld
cmp
pushf
jae
mov
jne
std
dec
std
shl
je
mov
hlt
mov
lea
clc
sbb
push
lock
dec
xchg
movs
es
inc
dec
jne
push
or
and
and
inc
and
cmp
inc
and
lds
mov
push
clc
jne
cmps
add
push
sub
cmp
cmp
and
retf
push
push
je
push
dec
and
push
scas
pop
or
sbb
push
mov
adc
mov
stos
rol
jmp
jae
cmp
dec
jmp
xor
cwde
jmp
pusha
les
add
sub
nop
imul
jl
inc
push
pushf
shl
icebp
or
das
icebp
loopne
mov
div
xor
mov
sti
test
xor
adc
sub
sub
push
icebp
cmp
lock
mov
dec
jge
sbb
sub
jne
jne
js
test
adc
inc
jns
jb
and
sub
into
loopne
push
or
add
js
dec
cmps
adc
mov
lds
add
adc
jmp
sbb
ror
nop
add
movlps
or
mov
popf
xchg
xchg
jo
push
mov
cmp
push
mov
xchg
mov
pusha
add
and
test
lods
ret
and
paddusb
push
cmp
je
add
fsubr
pop
loope
cld
xor
outs
cmp
ss
mov
out
stos
cmp
xor
push
int
sub
(bad)
add
sti
push
test
adc
daa
xchg
cmp
inc
lock
inc
stos
mov
add
pop
clc
stc
mov
xchg
add
sbb
pop
ror
icebp
jg
loop
cmp
jne
mov
push
enter
xor
jnp
pop
sub
adc
add
or
je
push
lods
shr
mov
xchg
mov
sbb
aaa
(bad)
cmp
xchg
je
mov
ins
jne
cmp
sti
sbb
mov
add
pop
push
loopne
pop
mov
icebp
xlat
xchg
outs
(bad)
mov
jle
xchg
add
jp
add
sub
mov
sbb
outs
scas
xchg
sahf
call
add
jo
xor
jmp
push
jo
rcl
fdivr
aas
cmp
jg
into
ja
mov
mov
push
push
mov
js
cmp
adc
loope
test
and
jo
cmps
adc
push
in
cmp
xlat
sub
mov
int3
or
mov
and
add
mov
cmp
mov
adc
or
inc
pop
inc
out
dec
fild
push
dec
and
sub
dec
pop
sar
jns
adc
add
cmp
jle
mov
sub
and
push
pop
sar
sub
sbb
ror
xchg
loopne
mov
call
jne
(bad)
(bad)
or
lods
jns
mov
dec
sar
cwde
ror
cwde
mov
popa
popf
ret
(bad)
cli
popa
lds
add
pusha
std
xor
inc
cmp
fmul
test
in
jl
mov
pop
cmp
jge
popa
loopne
pusha
dec
sub
mov
jns
cwde
lods
xchg
push
or
or
sub
popa
and
adc
iret
sbb
xchg
mov
and
pop
mov
pop
inc
loope
xor
pop
pop
das
(bad)
repz
pop
dec
imul
dec
adc
or
ins
adc
les
pop
je
or
repnz
adc
es
and
(bad)
cmp
jne
pop
(bad)
mov
adc
lahf
test
inc
add
mov
jmp
daa
mov
pop
mov
dec
lock
ds
jo
scas
inc
adc
pop
js
inc
fcom
test
and
movs
sbb
test
test
cld
mov
jmp
test
dec
rol
or
icebp
add
sahf
sub
and
inc
push
lds
mov
dec
and
neg
dec
ds
xor
(bad)
leave
stos
or
jp
or
ret
fistp
sbb
mov
mov
je
scas
retf
xor
call
add
call
sub
movs
or
imul
mov
loopne
dec
test
cmc
sub
and
and
jg
push
and
push
pusha
add
push
lods
push
cdq
jmp
ins
mov
sub
jg
xor
mov
cmp
call
mul
or
and
mov
and
mov
and
push
(bad)
lods
pop
lods
je
push
pop
mov
cmp
cmp
or
pop
jo
dec
fs
dec
adc
mov
mov
sub
cmp
je
sub
leave
mov
ret
push
xor
xor
push
mov
nop
inc
or
adc
sub
jg
push
xchg
cwde
xor
test
xchg
or
test
dec
mov
loop
test
jmp
bound
mov
push
or
jne
call
mov
inc
dec
inc
add
cs
aaa
add
fldenv
and
push
and
add
aad
dec
mov
push
lahf
adc
adc
rol
add
cld
mov
adc
jne
or
das
rol
retf
push
sbb
or
mov
scas
jae
ins
stos
mov
or
lea
lea
push
dec
gs
movs
in
add
sub
sar
jmp
sbb
(bad)
jge
test
push
jne
add
rcl
or
loop
popa
dec
mov
cwde
push
or
je
out
sub
mov
add
lock
or
(bad)
mov
cld
push
jo
sbb
jmp
adc
cld
or
sub
aaa
loope
dec
pop
ins
shr
je
cmp
and
add
cmps
or
mov
pushf
pusha
pop
(bad)
les
or
mov
mov
adc
adc
cdq
rcl
ficom
push
cmp
xchg
shl
sbb
inc
inc
dec
push
or
inc
aaa
loope
stc
mov
sub
adc
aad
or
pop
sbb
shl
sub
movs
add
sub
add
inc
xor
ins
adc
das
xor
or
pop
test
xor
pusha
mov
and
mov
cmp
lea
fdivrp
inc
fs
push
xchg
xchg
fwait
or
test
xor
hlt
es
dec
pusha
and
int3
mov
adc
ret
sar
push
fsub
push
mov
adc
je
fstp
ficomp
push
mov
into
adc
sub
lahf
sub
test
shl
push
push
retf
es
jne
daa
mov
sbb
add
std
rol
xchg
mov
hlt
sahf
sub
data16
sti
sub
movs
and
jmp
or
and
aad
pop
pop
cwde
fist
jno
ror
popf
add
push
push
lock
inc
mov
fisub
daa
test
push
loopne
clc
ins
jne
xchg
dec
jmp
in
sbb
sub
adc
call
jg
or
inc
add
inc
add
add
push
push
das
imul
xchg
sub
lea
pop
sub
sub
xchg
shr
mov
out
mov
add
daa
lea
cmp
jo
mov
pop
push
inc
dec
mov
mov
or
call
mov
or
adc
sahf
test
mov
push
jmp
cli
clc
or
je
inc
pop
inc
pop
push
in
jmp
and
mov
cmps
push
stos
or
adc
sub
sbb
mov
jg
rep
and
jmp
sub
mov
or
sbb
test
ja
sbb
or
add
scas
push
mov
or
push
je
dec
cld
sbb
fdiv
push
shr
push
jne
sahf
cs
call
mov
inc
sbb
pop
call
sbb
aam
test
or
shl
adc
xchg
in
clc
sbb
mov
inc
or
mov
inc
add
mov
xor
mov
push
jp
push
mov
add
inc
pop
mov
or
imul
pusha
mov
mov
inc
inc
sub
add
adc
jmp
sbb
mov
dec
pop
cmc
push
cmp
popa
(bad)
xor
pop
cld
hlt
or
repz
sti
in
movs
mov
push
out
scas
inc
mov
idiv
adc
outs
ret
retf
fisub
std
sbb
test
and
into
and
dec
mov
xor
mov
ret
lods
jg
out
cmp
jne
or
pop
adc
xor
pop
cmp
sti
mov
jmp
cmp
inc
jo
mov
ret
sub
lock
mov
(bad)
pushf
leave
or
cmp
retf
in
in
jp
push
adc
je
inc
je
iret
or
jge
and
push
not
fdiv
jne
inc
mov
(bad)
push
inc
or
jne
lea
mov
(bad)
je
cld
xlat
mov
or
std
sbb
mov
enter
and
add
sbb
clc
enter
nop
add
je
movnti
sub
pop
test
fld
mov
sar
rol
push
pop
xchg
push
dec
xchg
xchg
pop
xor
mov
add
repz
or
pusha
ds
mov
loopne
js
pop
call
xor
das
cmp
rcr
data16
daa
or
and
jp
xor
mov
ret
pushf
xor
call
clc
mov
inc
pusha
add
sbb
jge
fwait
addr16
jmp
pusha
adc
add
push
mov
dec
add
out
shl
mul
or
fsub
mov
mov
dec
xchg
push
jb
int3
inc
mov
pop
jne
jne
lods
aam
jmp
and
fs
fdiv
test
pop
test
pop
push
push
fs
cmp
pop
je
sub
xchg
mov
not
nop
aaa
mov
and
adc
jl
jp
dec
cmp
sbb
push
lds
pop
push
mov
mov
fild
cmp
test
sub
xor
mov
sbb
cmp
sti
mov
jo
dec
enter
jmp
mov
jmp
jp
inc
mov
mov
cmp
push
push
and
adc
hlt
mov
jne
gs
mov
sub
ret
xchg
mov
xor
and
or
xchg
or
jbe
movs
mov
pop
pop
(bad)
in
pop
and
xor
adc
adc
sub
cmp
lds
not
and
jmp
clc
add
or
mov
xlat
fcom
jns
sbb
cmp
clc
xor
movaps
add
lock
fcomp
(bad)
or
and
mov
sbb
in
pop
sbb
jecxz
inc
pushw
dec
in
xor
cmp
lock
mov
sbb
les
add
xor
jp
dec
mov
or
push
add
(bad)
loopne
cmp
push
call
sbb
or
cmp
mov
out
clc
xchg
mov
push
push
mov
add
je
out
push
push
inc
ret
adc
mov
adc
and
mov
aas
out
push
sbb
adc
nop
xlat
bound
add
xchg
xchg
or
mov
mov
cmp
scas
and
inc
pop
je
es
push
or
cli
sbb
dec
push
ja
dec
dec
loopne
cmp
jns
sbb
pop
clc
sbb
loopne
add
mov
cld
test
adc
add
call
push
je
aaa
inc
aaa
or
out
add
xchg
push
cmp
sub
mov
add
fiadd
loope
mov
sbb
dec
inc
adc
xchg
adc
pusha
test
adc
xchg
adc
jg
xor
cwde
pop
sbb
movs
(bad)
xor
ss
adc
inc
mov
cmp
ror
add
retf
test
daa
pop
add
fimul
test
clc
mov
or
mov
and
cmp
das
test
add
mov
adc
mov
jno
dec
pushf
xor
xor
dec
mov
push
jnp
cld
sub
fimul
cmp
lea
popa
stos
push
sub
jl
sbb
mov
(bad)
(bad)
in
or
inc
adc
ins
stc
(bad)
fisttp
cmc
neg
ret
cmp
(bad)
ds
push
cmp
inc
push
lea
fiadd
sbb
adc
loope
inc
dec
mov
sbb
rcl
pop
js
inc
(bad)
or
sub
imul
in
mov
add
jmp
push
pop
push
fdivr
pop
add
sbb
mov
or
adc
and
mov
leave
dec
sub
and
retf
ins
ror
ds
xor
jbe
scas
pop
or
or
jl
sbb
pop
add
mov
in
adc
or
ret
cmp
cmp
test
ins
punpcklbw
out
pop
enter
cmp
add
xchg
fcom
jne
gs
dec
cmp
cs
dec
sub
pop
or
shr
pop
ja
scas
cmp
mov
jo
mov
push
jo
mov
and
xor
fs
sahf
inc
push
es
mov
inc
sti
adc
inc
fcom
outs
adc
or
or
test
sub
arpl
call
inc
adc
aaa
pop
int
lods
add
pop
(bad)
mov
js
mov
inc
and
pop
add
xor
shl
out
jmp
sbb
mov
push
mov
cmp
loope
sub
mov
mov
dec
das
mov
test
gs
pop
loope
jno
and
js
fnstsw
movs
mov
inc
push
cmc
pop
mov
push
sbb
movs
mov
push
sbb
jmp
test
cmp
add
in
outs
out
xor
aaa
mov
loopne
call
mov
sbb
test
jo
enter
jl
ins
pop
inc
fst
adc
nop
and
sbb
pop
in
imul
sub
lds
add
je
fwait
cmp
or
mov
gs
push
(bad)
pop
sub
and
inc
push
mov
mov
push
cwde
ret
repnz
dec
das
push
je
outs
or
fadd
aad
mov
inc
mov
mov
pop
loopne
js
jo
mov
push
dec
test
jl
inc
mov
(bad)
fcom
xor
cmp
cmp
xor
test
dec
jne
fcom
sub
loope
jno
ss
xor
inc
syscall
pop
fmul
jmp
test
ret
or
cmp
adc
je
pop
add
push
imul
sbb
dec
je
mov
shl
and
shl
add
int
cld
mov
fisubr
fnsave
in
pop
push
ffreep
cmps
inc
imul
and
mov
jo
mov
pop
test
or
into
mov
add
mov
cmp
movzx
sbb
pop
ja
sub
mov
or
jne
cmp
in
cmp
mov
adc
sub
pop
mov
ret
cdq
test
sub
mov
ror
ins
mov
cwde
sbb
and
stos
adc
xor
adc
out
clc
push
add
adc
fs
js
jo
mov
xor
jp
je
jl
shl
test
mov
mov
inc
and
mov
hlt
sbb
je
or
xor
jle
sub
dec
pop
ins
movs
jmp
xor
push
inc
mov
lds
mov
lock
(bad)
out
ror
inc
cmp
xchg
loopne
add
push
pop
cmp
in
or
ret
fdiv
push
inc
sub
dec
or
dec
icebp
add
push
mov
add
jmp
rcl
adc
loop
inc
xorps
jg
ror
mov
fisubr
cwde
sbb
das
mov
aas
adc
or
mov
inc
sbb
push
or
jb
add
pop
ins
pop
ja
mov
mov
inc
add
add
cmp
inc
mov
jo
jne
mov
inc
gs
pop
mov
adc
jmp
cmp
or
add
dec
sahf
nop
ror
sbb
cwde
scas
cmps
call
or
jl
or
xor
or
pop
icebp
sbb
je
cmp
add
push
mov
or
retf
or
ins
and
jmp
mov
mov
or
je
loopne
pop
adc
add
pusha
inc
mov
push
scas
sub
arpl
sbb
hlt
mov
rcr
ror
sar
push
xor
push
or
sar
inc
or
sub
icebp
sub
and
cmps
stos
rcl
stos
rol
jb
jg
push
or
bsf
jp
popf
inc
mov
dec
add
stc
add
leave
neg
(bad)
adc
jl
jno
push
aaa
sti
out
jmp
jmp
pop
retf
or
mov
pushf
pop
mov
mov
pop
push
call
or
mov
and
or
add
cmp
mov
cs
add
je
js
jbe
adc
sub
xor
or
mov
adc
xlat
xchg
imul
je
adc
popa
cmp
shl
push
enter
dec
clc
repnz
pop
sbb
frstor
ja
test
jl
popa
in
xor
mov
or
push
je
or
mov
sar
sbb
je
cmc
push
jmp
repz
and
dec
jmp
inc
inc
loopne
in
call
add
dec
xor
inc
mov
adc
test
adc
cmp
adc
mov
jnp
mov
test
out
test
or
jge
jne
clc
lods
add
mov
dec
rol
add
adc
enter
arpl
pop
stos
push
lods
add
imul
mov
loope
pop
jmp
xchg
loope
jo
cmp
addr16
inc
add
fmul
xor
or
push
xchg
push
xchg
test
add
jle
(bad)
aas
inc
xor
push
sbb
jbe
mov
dec
adc
pop
jae
adc
mov
sub
sbb
or
loope
inc
and
cmp
dec
sbb
loopne
call
ds
jo
cmc
pop
imul
(bad)
cdq
fwait
lock
lock
sub
fcom
cmp
fsub
adc
sub
mov
sub
int3
loopne
mov
push
repnz
inc
sbb
pushf
jl
jne
push
sub
test
test
inc
test
or
jbe
mov
fsub
mov
call
jne
push
jg
pop
daa
(bad)
int3
cmps
sub
std
(bad)
in
sbb
and
sbb
push
rcr
jae
pop
inc
and
pop
jo
inc
(bad)
xchg
and
adc
jo
mov
jo
mov
sbb
push
test
sub
in
cmp
je
sub
addr16
pop
add
jo
mov
mov
xor
jp
mov
pop
push
lea
rol
pop
and
adc
xchg
push
pop
int3
sub
in
cmp
jmp
dec
adc
push
adc
es
cld
cmp
jg
ins
jle
loopne
ret
xchg
outs
fs
fcomp
jp
pop
mov
aad
adc
add
pop
xor
cmp
mov
push
and
cmp
jle
call
push
mov
addr16
cs
retf
add
enter
sbb
adc
in
hlt
mov
fstp
lds
mov
inc
push
pop
bound
and
(bad)
push
pop
es
add
test
adc
clc
sub
or
push
inc
std
inc
inc
mov
inc
scas
and
or
movzx
add
adc
mov
call
cdq
push
xchg
test
lods
fimul
adc
mov
and
stos
(bad)
fistp
cmp
push
ss
in
data16
fiadd
ins
add
add
sub
and
shl
(bad)
out
jmp
inc
pop
push
iret
aam
fs
setge
push
push
cld
loope
inc
in
mov
mov
movs
cli
daa
lods
shl
je
push
jmp
cwde
push
inc
dec
dec
add
add
add
pop
fstp
mov
cmps
xor
push
and
ja
aas
jmp
imul
call
fs
mov
stc
pop
or
jp
es
test
out
mov
push
xlat
sbb
pop
push
mov
sbb
test
push
loop
push
jmp
jle
shl
lock
jl
xchg
ret
and
jno
push
int3
pusha
adc
outs
loop
jae
pop
add
fwait
lock
fnstenv
dec
int3
icebp
mov
jo
sar
jns
or
stos
mov
aaa
js
sar
jns
cmp
fsub
jb
push
cmps
cmp
mov
jge
sbb
mov
xor
aas
pusha
cmp
jge
sbb
pop
dec
test
xor
or
add
pop
or
stos
rcl
scas
pop
lods
jno
add
jp
dec
mov
je
cmp
ss
imul
movzx
push
inc
cli
sub
jae
fbstp
js
inc
pop
jne
mov
mov
push
sub
js
cmp
je
rcr
xor
jge
mov
sub
clc
cmps
rol
add
ret
cwde
push
inc
and
aaa
xor
je
ret
mov
mov
add
jmp
add
push
mov
ret
push
pusha
fmul
pusha
dec
inc
shl
push
mov
pop
jge
adc
clc
sub
cmp
cmp
test
ja
xor
and
sbb
outs
in
push
inc
push
call
test
call
dec
or
call
ret
sahf
div
psubw
and
push
es
push
jnp
sar
xchg
adc
in
and
dec
mov
in
popa
add
data16
or
adc
jnp
and
and
and
fnsave
xchg
sub
sahf
inc
and
sbb
push
pop
inc
icebp
sub
push
jmp
shl
push
and
div
xchg
jmp
das
inc
inc
or
inc
hlt
pminub
add
xor
xchg
sbb
and
loopne
pop
xchg
add
call
mov
cdq
dec
div
out
cmp
data16
or
and
(bad)
jae
push
addr16
add
cld
clc
cmps
cmp
adc
pop
dec
pop
xor
add
sub
cmp
imul
dec
cmp
bound
or
mov
je
or
sbb
xor
add
push
cwde
pop
lahf
push
test
mov
into
movs
ja
mov
or
add
ficom
sar
jecxz
or
loope
push
push
cmps
iret
jno
test
stos
aas
or
test
adc
fnstsw
fbstp
add
add
or
rcl
scas
mov
aam
stos
add
jmp
sub
cmp
inc
lahf
cmc
pop
pop
jmp
ss
adc
jle
stos
adc
jmp
sbb
jne
movs
in
pushf
inc
add
xor
xor
imul
dec
adc
fadd
les
jl
inc
xor
pusha
and
add
jne
das
or
add
stos
mov
(bad)
and
and
xor
int
sub
xor
adc
pop
popa
add
lea
sub
sbb
xor
push
dec
mov
cmp
pop
cdq
jmp
imul
dec
push
cdq
scas
or
daa
enter
mov
mov
push
and
dec
or
push
and
pop
jne
sahf
imul
or
fld
jne
sub
mov
hlt
or
jmp
lea
sbb
(bad)
pop
pop
jg
xchg
sbb
cmp
aam
mov
inc
add
movs
and
aaa
add
loope
dec
sub
fisttp
push
loopne
inc
push
cli
inc
lock
and
xor
(bad)
and
pop
and
mov
sub
loopne
or
mov
pop
sub
aaa
or
fs
adc
call
inc
or
dec
mov
leave
adc
xor
dec
pop
or
aaa
mov
xchg
fcmovne
jbe
xor
jo
sub
outs
push
xor
lea
pop
push
sbb
cmp
and
stos
and
popf
xchg
jle
cmp
mov
mov
or
(bad)
fdivr
out
and
movzx
mov
outs
fcmovbe
retf
xor
xor
das
pop
mov
pushf
push
or
mov
inc
adc
push
in
lods
add
loope
push
sar
or
xor
outs
sub
pop
adc
sar
pusha
sbb
and
xchg
mov
or
cmovle
clc
fld
sbb
sbb
scas
sti
pop
cmp
je
inc
mov
and
in
pop
cmps
mov
or
loopne
cmp
ret
ret
xchg
push
out
xor
int3
add
sbb
aas
fs
(bad)
rol
lock
jle
(bad)
xor
push
sbb
jae
jg
mov
jmp
aas
dec
sub
sub
in
or
popf
mov
and
pop
jp
adc
(bad)
xchg
(bad)
loopne
inc
xor
mov
add
sbb
cmc
scas
or
xchg
jecxz
in
xor
shl
out
cmp
add
nop
or
sti
add
xchg
jp
pop
out
add
or
adc
paddb
xor
into
lods
inc
xor
xchg
nop
cli
add
xchg
sbb
jmp
inc
sbb
mov
mov
cmp
adc
stos
sahf
addr16
js
push
mov
(bad)
jb
cld
cdq
cs
xbegin
xchg
dec
aam
aas
adc
jg
ds
pop
push
dec
jo
fnstenv
rcr
sub
ret
sub
sub
add
add
inc
push
call
mov
ret
add
stos
les
test
or
xor
ror
rol
(bad)
cmp
push
rol
adc
and
xlat
movs
add
pop
and
jne
or
inc
dec
fisttp
jae
add
stos
ror
scas
jmp
mov
mov
dec
inc
cmps
sbb
jge
mov
or
pop
daa
jb
adc
sbb
xchg
pop
lods
and
jae
popa
sti
or
bound
je
cld
jmp
sub
adc
aaa
or
add
push
fisubr
cmp
fwait
data16
iret
sbb
jmp
and
inc
cmps
or
loopne
and
call
(bad)
out
mov
adc
xchg
jb
xchg
je
pusha
push
and
xchg
sbb
nop
enter
pop
fld
sbb
mov
pop
scas
pop
ins
or
inc
pop
add
lods
sahf
mov
or
mov
clc
stos
add
fimul
mov
retf
mov
ror
js
sbb
mul
js
jmp
fwait
sbb
pop
mov
cmp
xchg
jl
test
dec
or
cmps
sti
mov
adc
dec
ficomp
jmp
dec
or
jmp
jg
dec
jmp
out
dec
shl
cmps
test
mov
add
pop
lods
jge
stos
stos
mov
mov
pop
rcl
push
inc
adc
loopne
pop
and
mov
xchg
pop
ret
out
and
pop
mov
add
inc
xor
arpl
mov
jmp
lds
pop
push
xor
jb
and
fucomp
pop
mov
test
leave
cmp
loope
test
mov
loopne
or
out
in
ins
adc
xor
push
lods
or
nop
pop
pop
mul
push
push
or
in
ror
popa
sbb
mov
or
fld
adc
push
sub
call
and
inc
jle
(bad)
push
jmp
dec
push
push
fcomp
pop
mov
or
mov
fild
or
push
inc
es
pcmpgtw
nop
out
mov
daa
adc
je
mov
leave
adc
or
test
xor
or
push
inc
pop
cwde
pop
fbstp
and
pusha
push
mov
cmp
or
mov
jecxz
(bad)
mov
iret
pop
jmp
mov
cmp
or
cmps
or
sub
(bad)
push
push
push
loope
int
jle
xor
shl
inc
inc
hlt
adc
sub
in
mov
pop
cld
call
mov
mov
or
sahf
sbb
adc
adc
push
inc
xor
add
or
sbb
pop
cmp
pop
(bad)
adc
dec
push
into
maskmovq
das
gs
and
or
jmp
adc
vpsadbw
shl
push
mov
xor
mov
mov
jp
(bad)
mov
test
cwde
inc
movs
push
and
(bad)
and
adc
xor
push
pop
cwde
sbb
push
rol
cld
retf
or
cmp
add
mov
adc
icebp
add
loopne
or
out
ins
inc
or
ds
cld
daa
bound
add
push
inc
in
ret
pop
in
aas
dec
aas
add
hlt
mov
mov
add
cmps
jg
sbb
jae
jnp
or
lock
sbb
fimul
in
jg
or
jge
xor
cld
and
xor
pusha
xor
cmc
xor
pop
mov
jmp
mov
and
pop
fwait
and
dec
inc
idiv
ins
jae
and
ins
(bad)
mov
test
add
inc
pop
in
xor
mov
dec
jo
iret
mov
mov
and
call
je
adc
ins
je
push
inc
rcl
and
xchg
dec
xchg
push
mov
cmp
jp
mov
mov
fcom
(bad)
dec
mov
and
xor
jge
je
ins
rcl
loopne
fs
mov
scas
mov
or
daa
sbb
loopne
cld
xor
mov
dec
hlt
mov
and
or
(bad)
repnz
add
pop
adc
mov
inc
sbb
or
jbe
add
ja
add
ror
dec
push
loopne
jle
call
ds
mov
push
pop
(bad)
mov
outs
out
mov
es
dec
repnz
outs
or
adc
bt
setb
push
or
in
out
mov
call
adc
enter
dec
mov
adc
jmp
pushf
int3
(bad)
and
loopne
and
popa
dec
sub
xchg
push
int3
adc
ret
jnp
pop
les
sub
add
dec
lods
ins
scas
push
push
cmc
push
mov
dec
test
jl
inc
xor
xchg
xor
xor
cmp
jge
dec
clc
rcr
mov
jne
arpl
pop
cs
aaa
cs
outs
sti
lea
movs
movs
stos
jmp
adc
adc
jmp
push
addr16
inc
lods
or
pusha
add
add
int3
sahf
(bad)
fadd
dec
xor
jne
cmp
test
mov
mov
mov
jle
push
lea
aas
inc
rol
add
push
push
scas
xor
hlt
adc
jecxz
ficom
push
adc
loopne
mov
ret
or
xor
rcl
inc
jle
movs
push
mov
dec
arpl
clc
lea
jne
sahf
xor
sbb
adc
loope
xchg
hlt
in
(bad)
xchg
inc
push
fcmovu
push
push
xchg
rcl
xchg
inc
mov
or
adc
sub
mov
mov
imul
jl
fisub
cmp
inc
shl
sti
jne
imul
outs
dec
xchg
shl
into
pop
aaa
xchg
or
sti
aas
je
add
inc
aam
inc
repz
dec
je
or
ret
lock
or
movs
ret
push
nop
sub
adc
mov
and
cld
icebp
ror
inc
or
and
jmp
std
mov
inc
sub
stos
jmp
adc
cmp
loopne
jns
and
addr16
adc
adc
cmp
mov
sub
aaa
das
or
lahf
and
(bad)
jg
fcmovbe
sub
inc
ins
cld
int
mov
lea
cdq
leave
jle
add
sub
push
push
push
dec
dec
push
out
in
div
and
setne
sub
and
and
push
shr
jle
adc
or
jp
adc
pop
scas
pop
adc
and
test
dec
(bad)
stos
(bad)
dec
sub
scas
nop
in
loopne
push
fs
mov
mov
or
adc
loopne
mov
mov
xchg
aam
push
or
mov
loope
jmp
mov
enter
clc
mov
sti
in
mov
bound
enter
jp
addr16
pop
pusha
sbb
push
inc
push
movs
sub
adc
hlt
rcr
fisttp
push
sub
xor
push
pop
add
scas
loope
out
ficom
or
mov
or
mov
lock
into
cwde
iret
xor
test
cli
or
inc
or
or
add
pop
cdq
adc
call
cmps
sar
outs
outs
jb
ret
call
pop
adc
jne
cmp
sahf
jge
push
or
les
mov
iret
jmp
cmp
cmp
cmp
and
pop
arpl
and
cmp
cwde
movs
adc
sub
call
jo
sbb
jmp
sbb
je
cwde
pop
xor
pushf
dec
cmp
pop
xor
inc
adc
pushf
adc
pop
xor
and
sub
cmp
jmp
push
or
push
addr16
dec
inc
addr16
scas
clc
in
mov
jl
push
jge
jp
dec
sub
out
sub
sti
in
call
push
add
pop
mov
and
inc
add
xchg
inc
mov
or
push
call
push
rcr
lods
ret
pop
cmovge
jb
dec
dec
daa
lock
pop
mov
push
popa
repz
pusha
push
or
in
dec
mov
(bad)
dec
mov
inc
pop
xchg
fmul
pusha
push
sar
and
inc
jo
inc
jl
sbb
pop
mov
je
fdiv
call
js
and
push
js
fiadd
out
imul
iret
mov
pop
aas
dec
leave
push
cmp
ja
aaa
jns
loopne
jno
mov
dec
enter
sbb
pop
pop
fsub
pop
pop
inc
gs
sbb
mov
pop
fwait
jnp
sub
retf
sbb
adc
or
inc
fstp
xor
inc
push
cdq
fild
call
std
test
pop
mov
mov
in
out
jl
or
jg
cmp
jnp
jle
push
push
push
push
pop
mov
repnz
loop
inc
add
dec
push
lds
lds
pushf
mov
(bad)
nop
add
out
jle
jmp
add
adc
out
cmc
push
jae
ins
mov
mov
pop
xchg
mov
pop
jne
mov
mov
push
push
or
add
mov
nop
inc
(bad)
jecxz
sti
push
cmp
sub
fdivr
inc
clc
jne
das
add
(bad)
xchg
pop
inc
test
fsubr
not
mov
movs
mov
sbb
ds
and
fsub
shl
loop
adc
mov
adc
pusha
cld
sahf
cmps
add
and
jecxz
mov
inc
rol
rcr
inc
ret
fstp
into
fdiv
inc
inc
cmp
xor
jmp
mov
mov
dec
inc
jl
lock
pushw
gs
stos
sbb
test
jmp
nop
hlt
pop
or
pop
sbb
jno
int3
fs
test
cmp
or
sbb
adc
xlat
add
test
adc
xor
into
repnz
int3
imul
jo
test
xchg
inc
mov
ins
call
push
pusha
shr
or
lea
or
push
mov
ret
adc
add
push
sbb
mov
inc
inc
cmp
pusha
dec
push
or
inc
mov
jno
test
adc
xor
inc
rcr
add
neg
mov
dec
add
lahf
mov
pop
add
mov
sub
ud1
in
sbb
push
add
dec
das
shl
add
fiadd
cmp
sbb
sbb
punpcklbw
in
call
inc
sub
jnp
pop
push
dec
xchg
popa
es
add
and
adc
jb
mov
and
ror
jmp
push
out
or
push
lahf
(bad)
call
xor
push
sbb
inc
push
aaa
lods
leave
mov
test
imul
mov
jne
sub
add
and
es
pushf
shl
jecxz
or
push
xor
fisub
retf
fs
cmp
je
mov
ret
sbb
or
push
add
cmc
adc
call
pop
jmp
mov
ror
sub
jae
sbb
faddp
mov
jne
gs
xchg
pop
stos
out
xchg
sahf
push
sbb
lods
sub
call
mov
dec
add
cmp
jne
test
popa
lods
scas
pusha
mov
or
(bad)
pop
and
sar
loopne
(bad)
jl
mov
or
and
push
mov
movsx
sbb
sar
add
lods
inc
aas
mov
xchg
outs
push
out
push
or
cmp
imul
pop
mov
add
lock
ret
pop
xchg
pop
movzx
pop
nop
popf
jnp
inc
dec
and
into
cmp
sbb
xchg
push
xchg
jmp
call
pop
sbb
std
inc
cmp
inc
ror
cld
inc
jmp
push
cld
bound
sub
lock
lock
and
sub
data16
mov
icebp
ja
xor
xchg
outs
xor
xor
pop
sbb
xor
mov
mov
cmp
cs
(bad)
push
mov
clc
pop
scas
daa
fadd
(bad)
(bad)
movs
daa
fwait
xchg
pop
imul
pop
pop
jo
cdq
jae
xlat
pop
ret
fmul
ror
adc
call
inc
pop
mov
out
cdq
push
fimul
mov
push
inc
aas
sar
jne
test
xor
mov
dec
push
cli
aas
iret
sub
push
and
dec
jmp
cdq
je
push
dec
ret
cwde
sub
cmp
setl
dec
sbb
pop
pop
inc
fwait
jne
loope
inc
and
xor
js
mov
fwait
or
addr16
inc
inc
enter
pop
cmp
xor
xor
add
jbe
fisubr
xor
pop
inc
adc
or
std
sub
jae
cli
add
sub
mov
xlat
std
fwait
pop
push
inc
inc
mov
lock
dec
dec
jl
into
test
in
add
jne
cmp
jne
cld
mov
xor
push
iret
adc
push
ins
lock
scas
add
lds
inc
std
mov
cmps
push
sbb
xor
inc
inc
push
lock
jmp
das
rcr
sub
cmp
sti
addr16
add
jmp
adc
jo
stos
shl
loop
push
pusha
mov
adc
cmp
xchg
or
add
hlt
sub
fwait
loope
stos
sar
lock
fadd
je
(bad)
mov
add
xchg
fiadd
cmp
jns
inc
inc
push
repnz
add
and
mov
cmp
test
adc
add
jmp
sub
sub
lds
or
sbb
pop
and
fbld
xor
adc
pop
pop
xchg
mov
and
push
daa
hlt
cmp
jmp
int3
pop
hlt
sbb
in
sub
ins
cmp
or
test
mov
cs
sbb
or
mov
sub
or
mov
jl
jb
mov
cmp
rcr
div
arpl
mov
dec
(bad)
cmp
or
int3
(bad)
je
xor
jmp
inc
sar
in
push
mov
(bad)
out
ror
sbb
div
retf
aas
lods
mov
sbb
dec
jne
sub
xor
push
jo
sub
mov
xor
jnp
xchg
adc
push
mov
jae
adc
dec
cmp
xor
popa
jo
mov
scas
mov
clc
xchg
adc
into
jno
add
movs
dec
retw
or
int3
mov
leave
sub
mov
or
cmp
test
and
pop
pop
mov
aaa
dec
pop
adc
retf
xor
fcom
jne
xor
adc
jle
sub
push
or
or
int3
cli
ss
ror
cld
or
lock
fcom
idiv
repz
ins
lea
pop
mov
(bad)
pusha
push
cmp
cmc
(bad)
xchg
rol
xchg
in
out
and
ret
mov
(bad)
fst
arpl
(bad)
sbb
cmp
test
rol
dec
fst
and
sbb
inc
test
inc
dec
push
push
push
rcl
outs
scas
cdq
inc
pop
sub
add
mov
les
cmp
pusha
add
jg
adc
push
add
ret
dec
imul
cmp
cmp
inc
jmp
dec
sbb
adc
mov
dec
sub
mov
add
ret
(bad)
test
cdq
dec
lock
or
mov
mov
jge
scas
adc
sahf
inc
jo
pop
test
and
xor
pop
call
rcl
(bad)
sub
jo
inc
cmp
cmp
mov
pop
fsubr
sbb
xor
or
enter
das
jo
push
mov
je
aas
test
add
je
add
jns
test
or
push
mov
or
jl
lahf
into
sbb
sbb
inc
pop
repnz
mov
int
xchg
(bad)
arpl
adc
push
or
test
jp
call
push
out
push
sub
cmp
adc
mov
popa
xor
mov
bound
jnp
push
das
mov
(bad)
in
mov
mov
lock
loopne
or
mov
aaa
xchg
dec
in
imul
adc
pop
ja
(bad)
sbb
or
js
pop
or
pop
les
push
push
add
mov
and
sbb
icebp
lock
les
pop
inc
ins
add
fdivrp
mov
out
mov
push
add
push
sbb
pop
sbb
cmp
loopne
xor
pop
ss
ja
push
popa
cmp
cmc
sbb
ins
ins
iret
mov
dec
jne
pop
sub
sbb
lods
popf
adc
fs
call
and
or
pop
xor
mov
sbb
clc
shld
jno
pop
pusha
call
mov
ds
loopne
mov
jbe
pop
push
shl
or
xchg
loopne
add
mov
push
clc
movzx
lock
in
mov
ss
sbb
les
cmps
mov
clc
mov
mov
dec
adc
inc
xor
sbb
push
or
or
mov
mov
sub
(bad)
outs
push
add
(bad)
jmp
sub
add
push
jl
or
cmp
push
inc
fs
pop
mov
ds
and
add
inc
mov
add
xor
arpl
nop
test
sahf
add
neg
mov
jmp
or
stos
cmp
jne
sbb
int3
sbb
push
jo
ror
sete
inc
pop
ror
aaa
nop
push
daa
add
inc
fdivr
xchg
js
ds
push
loopne
enter
clc
fisub
cld
mov
or
ja
cmp
mov
mov
movs
push
not
adc
push
or
pop
mov
js
or
mov
mov
push
je
push
sub
mov
push
or
mov
push
cmp
lock
jg
cmp
adc
test
sub
pop
mov
or
cmp
int3
add
add
jb
lods
mov
ret
add
clc
cmp
mov
ror
push
mov
dec
cmp
mov
sub
and
sbb
or
inc
jo
push
(bad)
xor
hlt
sub
push
add
sbb
aas
inc
xor
pop
mov
jnp
mov
scas
push
lahf
mov
push
adc
sbb
mov
dec
das
inc
mov
cld
pushf
push
(bad)
shr
aam
mov
cwde
adc
inc
adc
pop
(bad)
cmp
inc
pop
push
mov
test
inc
xchg
fsub
data16
dec
hlt
(bad)
or
sahf
push
add
and
mov
xchg
cs
cmp
data16
imul
cwd
ins
cld
or
lea
shr
xchg
dec
push
push
jbe
and
mov
adc
inc
inc
mov
pushf
add
cld
inc
outs
push
outs
in
push
xor
mov
cmc
rol
mov
in
push
push
jge
lea
sahf
or
jp
pop
fist
into
dec
add
inc
add
or
aam
pop
sbb
adc
in
adc
imul
or
sbb
pop
push
jo
and
out
ds
fwait
inc
sbb
sbb
push
push
outs
dec
mov
sub
xchg
verr
adc
ror
adc
bound
ffreep
ror
pop
push
push
mov
scas
dec
pop
dec
mov
test
xchg
mov
ja
add
idiv
push
jl
lock
outs
ret
dec
cmp
or
ins
mov
add
add
push
push
sub
in
push
addr16
add
clc
imul
jno
test
lea
jbe
add
add
cs
in
inc
sbb
xor
mov
cmps
xchg
xor
xor
sub
and
mov
scas
stos
xor
pop
sub
rcl
aam
add
lock
stos
push
cmp
test
push
mov
xor
mov
push
add
xor
sbb
out
inc
fadd
pop
ss
sbb
clc
mov
or
cmp
mov
sub
xor
(bad)
hlt
mov
mov
dec
aam
adc
add
add
fadd
retf
sbb
adc
sar
jns
adc
mov
sbb
sbb
daa
add
mov
mov
push
or
and
mov
mov
out
adc
jne
cmp
shr
in
add
jecxz
push
push
or
nop
mov
fmul
inc
add
lock
and
add
xor
push
lods
ja
in
push
mov
mov
repnz
fdiv
inc
cld
movs
mov
lock
cli
sbb
leave
or
sub
or
rcr
sub
push
call
cmp
jne
xor
mov
loopne
mov
adc
sbb
push
ins
adc
xor
fisubr
mov
sbb
push
jo
je
xchg
xor
sbb
sub
mov
xor
jecxz
or
mov
fmul
pop
out
pop
or
pop
loopne
mov
js
int
adc
adc
ret
popa
(bad)
test
push
and
aaa
sub
mov
push
mov
pusha
test
les
es
scas
push
cmp
sbb
inc
sbb
fisttp
add
and
test
popa
push
sub
dec
cmp
inc
ins
sub
jmp
xchg
repz
es
cli
jp
sub
sub
lea
mov
stos
(bad)
jle
mov
shr
mov
push
push
xor
sub
arpl
cmps
adc
add
cdq
mov
iret
fdiv
mov
mov
jp
iret
ficomp
xor
clc
inc
shr
call
xchg
and
jge
cmp
pop
jmp
lds
je
fst
out
sbb
mov
adc
cmp
push
loop
fnsave
sbb
xchg
sub
mov
aaa
rcl
push
xor
xor
sbb
aaa
mov
pop
mov
shl
mov
add
sub
jge
jle
jle
adc
inc
cmp
mov
out
fild
push
mov
nop
pop
mov
loop
test
pop
lock
dec
jne
pop
inc
(bad)
and
lock
or
mov
enter
fld
sub
push
dec
js
mov
js
into
das
test
xor
mov
xor
lods
sbb
xchg
mov
cmp
movs
repz
mov
hlt
jmp
rcl
pusha
cmp
xchg
jg
jg
inc
(bad)
adc
stos
mov
data16
in
je
leave
jne
cmp
je
add
fidivr
inc
arpl
xchg
mov
inc
push
aaa
mov
push
fld
fdiv
push
mov
test
dec
clc
and
mov
jbe
mov
je
cld
ror
rol
dec
sub
xchg
mov
or
or
je
mov
push
sub
cmp
inc
sar
loopne
lock
jle
cmps
inc
cmc
inc
or
das
mov
outs
pop
fmul
ss
lods
and
std
fmul
sub
and
sub
stos
inc
pop
loopne
xchg
mov
or
iret
dec
sbb
inc
mov
sbb
inc
ss
enter
inc
add
pop
repz
cmp
mov
sub
stos
mov
jle
sbb
in
add
sbb
add
nop
shr
fiadd
cmp
add
push
jne
cmp
ret
push
sbb
jo
ret
sub
or
push
xor
cmp
cmp
push
mov
mov
pop
repnz
add
es
add
add
stos
arpl
mov
add
inc
adc
push
or
nop
inc
lahf
push
cmp
push
xchg
push
and
leave
or
test
pop
jno
cwde
cmp
jno
or
add
div
inc
add
inc
or
add
aas
adc
or
clc
popa
scas
jno
mov
pop
sar
bound
les
xlat
or
push
mov
mov
xchg
xchg
popa
icebp
lahf
mov
add
xor
adc
push
jo
popf
test
daa
inc
enter
mov
call
cmp
or
imul
sub
cmp
dec
jo
ror
sbb
push
cmp
stos
xchg
jbe
ins
ret
test
push
adc
pop
adc
adc
lock
cmps
mov
mov
pusha
seta
(bad)
jbe
dec
popa
dec
inc
ds
mov
sbb
xchg
in
fs
imul
clc
clc
adc
and
adc
aaa
cli
pop
(bad)
adc
jmp
jg
and
cmp
retw
add
jb
mov
sub
xchg
imul
in
push
sub
xor
mov
cdq
cmp
xor
sbb
sahf
jbe
dec
pop
add
test
push
mov
dec
fldenv
lahf
test
arpl
not
and
or
sub
fwait
mov
sbb
sbb
mul
ins
pop
xor
cmp
and
out
mov
mov
arpl
ja
adc
or
adc
sbb
int3
call
repnz
lods
mov
add
in
inc
mov
int3
lea
xor
and
push
pop
pusha
sbb
hlt
ins
pop
fld
add
jge
movs
add
inc
mov
mov
sub
fmul
je
out
mov
mov
mov
fnstsw
int3
loop
jnp
or
sbb
and
les
cmp
sub
leave
ins
xor
adc
sbb
mov
jge
mov
cmp
imul
or
jo
add
pop
imul
add
mov
mov
ret
add
push
sub
lods
loope
je
arpl
cs
je
add
lea
test
add
fisttp
mov
imul
cmps
(bad)
xor
test
inc
in
and
bound
fiadd
add
addr16
and
adc
jns
and
rdpmc
push
pusha
pop
xchg
bnd
rcr
enter
push
and
sbb
sbb
and
sbb
xor
fwait
mov
shl
mov
iret
add
mov
outs
adc
sub
add
jne
out
pop
pop
je
lods
mov
add
pop
sbb
xchg
pop
or
add
sbb
gs
les
fistp
cmp
loopne
fst
(bad)
in
in
cmp
mov
push
retf
add
xchg
xor
mov
loopne
cwde
xor
sbb
or
pop
push
(bad)
pop
inc
mov
pop
lods
sahf
push
fistp
loop
xor
inc
pop
loope
mov
shr
cmp
xor
dec
das
(bad)
push
pop
dec
jno
adc
rol
dec
inc
push
mov
mov
mov
push
fld
adc
fisttp
mov
sti
sub
adc
cmps
push
adc
or
movs
jmp
sbb
lock
imul
shl
hlt
cli
push
(bad)
sub
loope
cmp
cwde
mov
call
pop
dec
gs
mov
sbb
mov
ret
mov
adc
int3
jmp
adc
or
sub
jno
pop
mov
and
shl
or
cmp
mov
push
movs
(bad)
push
lods
(bad)
lahf
sbb
ds
pusha
cmp
cmp
push
adc
adc
scas
cmc
loope
pop
sbb
xor
push
mov
jno
mov
or
cmp
cmp
loope
push
or
adc
or
dec
push
sub
xor
cwde
adc
dec
or
add
push
jmp
les
and
mov
inc
sub
xor
cmp
or
or
sbb
shl
mov
dec
test
xchg
pop
cmp
jo
push
rcr
push
jmp
dec
cmp
sbb
add
icebp
sbb
and
popa
sbb
push
and
pusha
sbb
push
adc
stos
push
jne
xchg
push
scas
movhps
adc
adc
(bad)
dec
dec
call
clc
icebp
jo
je
cdq
jb
jbe
push
pusha
clc
popa
ins
popa
or
or
mov
imul
retf
lock
or
adc
sbb
sbb
les
add
adc
les
adc
aas
mov
dec
cmp
add
aam
pop
int
aam
xchg
push
inc
mov
or
addr16
cmp
je
mov
jo
dec
xchg
xchg
std
ja
or
(bad)
cmp
je
mov
test
cmp
fmul
pusha
cmp
(bad)
xchg
nop
loop
clc
push
daa
lahf
push
cmc
dec
sbb
xor
imul
aad
cmp
or
sbb
sbb
fmul
jb
inc
sub
outs
mov
or
add
iret
mov
jl
dec
loopne
pop
pop
aam
inc
push
outs
and
nop
xor
push
or
clc
je
mov
xor
sub
push
aas
and
adc
mov
out
push
sub
nop
adc
div
scas
sbb
fistp
cmp
or
dec
mov
ffreep
imul
pop
call
inc
inc
jo
cmovb
pusha
sub
std
retf
push
loop
outs
or
xchg
cmp
cmp
cmps
nop
repz
mov
xor
out
or
or
in
mov
ja
cmp
movs
enter
add
jl
xlat
push
push
sbb
dec
das
call
fwait
jb
shl
cmp
sti
fs
ret
inc
mov
sbb
test
jne
pop
xchg
add
add
pop
adc
jl
push
sar
add
jmp
setl
fstp
sbb
mov
inc
inc
mov
add
add
dec
add
pop
cmp
mov
push
retf
hlt
fild
inc
jge
and
cdq
pusha
pop
into
add
sbb
adc
pop
pop
das
je
add
or
ss
pop
jp
pop
je
mov
adc
sbb
stos
loop
xchg
or
push
jmp
fsub
jb
adc
test
jo
add
inc
mov
adc
pop
or
es
add
dec
or
lea
cmp
xlat
add
mov
xor
test
sub
lea
ficomp
add
fist
sub
mov
cmp
mov
cmp
jne
or
sbb
mov
loopne
dec
jg
jl
ds
mov
push
or
adc
cwde
retf
and
jmp
mov
dec
jne
jmp
mov
add
retf
mov
nop
rol
fwait
outs
popf
jbe
rcr
lock
std
arpl
sbb
call
push
or
add
jb
pop
pusha
push
ss
push
ins
loopne
enter
adc
in
scas
js
hlt
int3
(bad)
cmp
push
push
inc
dec
loope
pop
mov
pushf
inc
lods
pop
xchg
and
jmp
hlt
push
mov
repz
push
xchg
dec
and
data16
pop
xor
xor
pop
test
jmp
unpcklps
sbb
xchg
jmp
mov
add
scas
ss
xchg
jl
xor
pop
cwde
repz
push
out
in
push
jo
sub
loop
inc
daa
pop
loope
and
inc
lea
push
xchg
push
fstp
jmp
cmp
push
jmp
pop
js
mov
lock
ss
push
or
mov
xor
mov
loope
ret
pop
add
lods
xchg
or
jl
inc
cmp
cmps
jmp
fs
jne
es
std
xchg
inc
mov
cmp
add
dec
jne
leave
out
mov
or
scas
jbe
adc
xchg
fcmovb
add
(bad)
imul
dec
pop
retf
push
lahf
fistp
xlat
dec
ja
retf
leave
push
push
test
xor
pop
call
cmp
adc
outs
jo
add
dec
mov
jmp
sbb
push
cmp
sbb
bound
les
jl
enter
sbb
sbb
nop
std
sbb
pop
and
mov
pop
pop
or
adc
xchg
push
call
xchg
and
je
addr16
dec
sub
add
fs
or
xor
xchg
xor
add
adc
jo
sbb
push
pop
sbb
ror
dec
(bad)
or
into
xchg
mov
jmp
xchg
inc
cmp
jmp
sbb
addr16
push
sbb
xor
and
jecxz
nop
adc
push
inc
cmp
test
repnz
shl
icebp
nop
add
(bad)
xchg
mov
inc
adc
test
ins
daa
les
inc
adc
mov
sbb
add
out
or
jp
push
stos
jle
cmps
je
inc
cld
test
add
inc
cmp
mov
mov
inc
jmp
adc
enter
nop
xchg
and
or
popw
push
sbb
fnstcw
adc
add
clc
jne
ss
pop
sbb
jmp
sbb
sub
nop
sbb
inc
stos
pop
pop
sbb
cmp
je
sbb
sbb
cmp
(bad)
call
lock
bound
and
popf
sub
or
mov
ror
or
sbb
jae
ficomp
retf
fs
jmp
sahf
pop
mov
jo
scas
pushf
lock
(bad)
das
test
sbb
jne
fistp
lock
push
or
jmp
add
push
push
lock
push
int
jge
xchg
adc
sbb
daa
call
and
cmp
jbe
inc
mov
pushf
adc
mov
sbb
cs
test
fsubr
repz
call
push
shr
sar
or
add
int
dec
fxch
push
sbb
mov
and
ror
xor
add
jne
punpckhdq
adc
add
loopne
movs
ficomp
jnp
gs
or
jle
cmp
ret
lock
push
push
and
mov
lea
jno
and
lods
and
and
cmps
and
xor
lods
call
xor
unpcklps
adc
xchg
adc
xor
stos
mov
lock
cmp
rcr
cmp
mov
jmp
jge
and
out
cmp
jl
(bad)
cs
hlt
ja
jbe
push
mov
push
add
scas
sbb
xor
pop
adc
push
jecxz
arpl
ds
mov
xor
mov
cs
daa
bound
push
test
test
push
dec
push
mov
jecxz
inc
aad
hlt
dec
inc
pop
js
test
jne
push
js
add
mov
or
inc
sbb
js
add
lock
mov
jmp
push
in
add
mov
jne
inc
add
pop
or
cmp
loope
lock
dec
mov
ret
cmp
outs
push
ret
and
or
mov
pusha
or
ins
pop
push
fsubr
loop
fs
lods
xchg
fidiv
ds
or
push
lea
xchg
cmp
add
push
movzx
push
push
sahf
js
popf
scas
dec
aad
in
or
aas
or
lds
push
adc
pop
addr16
test
add
pop
sbb
jbe
and
xor
or
je
aam
aad
mov
int3
je
xor
cli
xor
sti
data16
lds
les
cmp
je
jns
mov
adc
cmp
fucomp
mov
cmp
fcomp
xchg
cmp
sbb
or
stos
scas
push
dec
push
cmp
dec
js
in
mov
dec
scas
add
pushf
lock
cmp
mov
sbb
jmp
rcr
ret
push
or
add
xchg
ds
push
mov
addr16
adc
leave
adc
inc
lock
pop
ror
push
adc
add
mov
adc
inc
jb
ficom
(bad)
aad
out
aam
or
pop
add
cmp
cmp
mov
lahf
out
cmp
retf
mov
mov
add
mov
loopne
jo
adc
jmp
adc
jmp
jae
sahf
push
jbe
mov
sub
mov
nop
popf
lock
in
inc
shl
xchg
imul
in
and
or
inc
test
push
ins
adc
cwde
jmp
xor
pusha
sub
xchg
adc
rcr
adc
mov
and
adc
push
pop
or
ins
into
sbb
arpl
jne
aam
dec
jg
js
push
inc
sti
pushf
mov
adc
xor
cmp
add
in
je
mov
pop
pop
aas
jl
sbb
cmp
push
lock
ja
jp
sub
std
js
loopne
inc
mov
push
ret
jns
pop
or
sub
push
dec
adc
sbb
dec
xchg
in
das
pop
dec
mov
imul
fcomp
jnp
imul
sbb
sub
js
mov
jo
xor
(bad)
or
lock
popa
(bad)
fdiv
icebp
ins
movs
mov
adc
cmps
nop
mov
scas
dec
cmp
add
adc
dec
movs
jbe
push
xor
fnstcw
call
sub
cmp
add
adc
cmp
adc
ret
add
shr
dec
lods
popa
inc
fdiv
gs
js
inc
fisttp
repz
mov
cmp
lock
xor
cmps
inc
add
mov
or
popa
mov
pop
pop
pop
stos
push
(bad)
js
pop
loop
xchg
test
and
movs
retf
shr
rcr
test
loope
je
dec
mov
adc
adc
dec
outs
fmul
arpl
pushf
(bad)
fadd
push
sbb
scas
inc
repnz
add
add
fsubr
pop
inc
popf
jmp
retf
std
adc
sbb
jmp
outs
das
(bad)
(bad)
gs
push
mov
mov
adc
outs
gs
lds
or
jo
enter
mov
ficom
outs
pop
rcl
inc
push
enter
test
xor
out
ret
xchg
lds
mov
dec
cmp
(bad)
jmp
cld
xchg
push
mov
and
aam
add
cmp
fcom
enter
cmp
mov
lahf
mov
or
sub
enter
inc
and
add
shr
sar
sbb
jmp
scas
push
loopne
and
dec
add
loope
add
dec
test
inc
inc
xor
mov
sti
mov
jnp
aaa
punpcklbw
and
loope
ret
inc
(bad)
jp
jb
nop
jne
push
mov
sbb
pop
mov
or
push
imul
pop
cmp
or
or
scas
dec
and
pushf
cmc
mov
mov
loopne
(bad)
mov
out
push
(bad)
adc
lahf
popf
or
push
adc
add
push
pop
sahf
sub
test
sbb
mov
cmp
sbb
inc
sub
jo
mov
movsx
das
cld
div
adc
lea
(bad)
enter
push
fisttp
and
jg
aaa
inc
lock
pop
push
or
or
mov
ins
sbb
ficom
adc
jle
add
jmp
ret
repnz
outs
push
ret
sbb
ret
and
fld
adc
inc
js
fadd
add
outs
jmp
mov
xchg
jo
xchg
fcmovnb
push
cmp
mov
mov
and
mov
out
repz
add
add
sub
shl
inc
push
inc
aam
or
out
mov
(bad)
or
or
aam
cmp
sub
add
movs
push
xchg
add
daa
jo
jmp
mov
shr
xor
nop
pop
adc
pop
jns
sub
jmp
mov
cmps
dec
and
push
sbb
push
dec
and
loopne
in
mov
mov
rcr
lods
je
jp
sbb
jnp
sub
ins
scas
cmp
(bad)
mov
mov
mov
mov
pop
repz
mov
enter
fmul
jge
jle
(bad)
cld
lods
pusha
lea
jae
or
repnz
sub
sbb
hlt
sbb
lea
dec
fimul
sub
rcl
enter
pop
mov
and
push
sbb
push
jle
pop
dec
jne
mov
movs
arpl
pop
add
add
jmp
(bad)
dec
push
imul
add
and
test
(bad)
clc
pop
jmp
push
in
fsubr
jge
mov
sub
dec
shl
fistp
clc
pop
jg
mov
sbb
add
cmp
jl
mov
inc
sub
mov
inc
mov
ror
fisttp
cdq
idiv
sbb
sub
aam
or
scas
add
and
xchg
jmp
inc
call
or
pop
fidiv
cmps
or
scas
cwde
jne
mov
call
mov
xlat
push
cli
(bad)
cmp
or
and
sbb
sbb
push
mov
and
lock
div
shr
retf
sbb
xor
mov
repz
add
fdivr
movs
sbb
out
retf
sub
loopne
test
stos
xchg
jge
add
fwait
das
adc
test
inc
clc
cmp
cdq
loop
clc
jle
or
cmp
adc
cmp
push
ins
shr
mov
cmp
push
ja
cmp
mul
adc
mov
dec
lea
add
and
push
inc
push
add
mov
dec
rcr
adc
inc
xchg
retf
adc
shl
xor
or
lods
push
mov
inc
jmp
sahf
dec
loop
mov
aad
inc
je
test
pop
ss
in
inc
call
and
mov
cdq
or
data16
or
imul
sti
push
or
push
popf
push
sub
push
clc
popa
dec
lods
jo
rcr
mov
lea
rcl
sub
call
mov
test
sar
xchg
or
movs
aad
fwait
jns
ds
cs
adc
adc
pop
sbb
add
mov
movs
push
in
and
xor
dec
test
dec
clc
sub
ss
mov
xor
lea
test
sbb
xlat
mov
jl
call
and
inc
aam
pop
sub
daa
sub
loopne
adc
sub
bound
inc
repz
retf
jne
ror
mov
dec
aaa
shl
test
jnp
mov
test
cs
sbb
sub
xchg
stos
mov
jl
call
js
push
cmp
ds
popa
adc
pop
xlat
push
sub
jbe
dec
or
adc
bswap
jno
clc
data16
pop
repz
jno
scas
(bad)
sbb
ficom
nop
das
xchg
inc
push
xor
add
aam
xor
ret
pop
pop
inc
mov
scas
outs
cmp
(bad)
lock
mov
add
sahf
aaa
enter
add
lods
aam
jne
psadbw
mov
js
mov
jl
cdq
daa
scas
fcom
pusha
mov
push
push
sub
pop
or
data16
cmp
pusha
adc
jle
hlt
ror
inc
jmp
push
pop
sbb
inc
pop
adc
vsqrtsd
inc
xchg
(bad)
(bad)
jmp
adc
(bad)
mov
fild
or
arpl
test
test
sub
shl
ins
mov
push
push
aas
add
add
inc
inc
cmp
xchg
inc
push
fwait
(bad)
gs
movs
and
fdivr
loopne
test
shr
adc
out
or
ret
jg
and
cmp
xor
lahf
mov
cmp
add
cmps
cmp
iret
(bad)
(bad)
loopne
lea
or
mov
pop
mov
cmc
xor
pop
mov
bound
dec
xor
pop
jg
in
pop
jo
call
or
pop
jnp
fdivr
sbb
fs
jae
push
add
imul
arpl
xor
loope
jl
and
scas
adc
cmp
enter
mov
mov
test
jle
adc
int3
call
pop
dec
or
js
add
pop
dec
sbb
cld
or
jo
inc
mov
xchg
imul
(bad)
jns
jnp
cmp
or
add
or
(bad)
push
and
pop
(bad)
mov
adc
sub
lock
ja
cld
outs
pop
cmp
je
mov
cmp
aaa
rcl
push
add
jne
clc
xor
add
dec
add
cmp
clc
(bad)
sub
sbb
test
mov
bound
pop
ret
jo
movs
adc
or
scas
or
mov
call
clc
popa
push
pop
ror
mov
or
mov
add
dec
add
or
dec
push
add
fs
add
sbb
lock
add
push
add
add
jb
xor
xor
add
add
sub
jns
sub
in
aas
push
ss
add
add
mov
and
adc
mov
pop
add
or
(bad)
clc
inc
add
add
pusha
or
pop
add
mov
push
push
pop
mov
scas
add
std
inc
dec
mov
add
cld
loope
inc
pop
jmp
mov
jmp
sub
scas
pop
lods
adc
or
add
jno
je
mov
or
aaa
jo
jb
mov
std
pop
shl
rol
push
sbb
xor
test
dec
lock
ret
ja
sbb
adc
xchg
jo
or
(bad)
mov
xor
or
retf
push
pop
loopne
or
sahf
or
es
lods
test
in
mov
sub
adc
out
fsub
jne
jne
xor
into
daa
inc
sbb
les
into
cmps
ds
imul
mov
mov
cmp
sete
pop
or
pop
mov
into
fneni(8087
and
cli
movs
pop
int
inc
mov
addr16
jecxz
addr16
dec
ret
adc
dec
ja
or
and
mov
jg
mov
sahf
daa
loopne
mov
mov
js
fs
sub
xchg
scas
test
lock
sahf
cmps
sub
icebp
movs
(bad)
add
aam
aam
ja
inc
mov
or
inc
adc
sbb
inc
sub
mov
punpckhwd
pop
push
xchg
sub
test
shr
push
or
xor
push
push
push
sahf
push
push
push
adc
adc
icebp
adc
(bad)
sbb
sub
and
call
mov
js
dec
mov
add
cmp
dec
ror
cmp
shr
dec
sub
push
jae
addr16
cwde
xchg
pop
enter
ficomp
sbb
rol
ficom
and
mov
adc
adc
xor
adc
mov
sbb
cmp
jne
loopne
mov
cmps
sub
or
adc
add
inc
xor
sbb
add
es
shl
lahf
push
sub
mov
inc
sbb
cmp
std
aaa
sar
jb
je
dec
sbb
or
cmp
mov
(bad)
sbb
jmp
and
adc
rcr
pop
call
adc
int
dec
adc
sbb
loopne
cmps
scas
xchg
push
sub
cmp
pop
inc
push
pop
or
je
dec
shl
adc
or
inc
pop
scas
add
(bad)
push
jno
mov
mov
pusha
in
xchg
push
add
xchg
add
rcr
sbb
movs
sti
aam
or
add
and
dec
or
data16
mov
add
xor
dec
pusha
inc
or
or
inc
or
dec
(bad)
inc
mov
ja
imul
xchg
ds
nop
and
pop
mov
mov
cmp
jo
leave
sbb
cwde
add
sbb
and
push
in
sub
and
jp
std
nop
mov
xchg
jo
test
push
test
pop
(bad)
adc
dec
lods
neg
mov
imul
xchg
sub
adc
aas
and
dec
jae
(bad)
xor
cwde
xchg
jl
or
cmps
nop
cwde
inc
xchg
add
add
dec
(bad)
xor
out
xchg
jns
dec
sub
jae
ret
adc
xchg
push
sbb
loope
sbb
shr
ror
pop
push
and
mov
les
sbb
popf
loop
pusha
jbe
xor
xchg
inc
xor
pop
or
pop
loop
(bad)
mov
sbb
es
xchg
adc
and
pop
dec
push
fisttp
mov
in
int3
test
ror
dec
je
mov
mov
and
add
adc
mov
sbb
rcl
sbb
pop
and
jge
or
cmp
mov
cmpxchg
or
xchg
jb
ror
sar
jne
mov
je
push
test
pop
xchg
fild
sub
xor
jns
push
jo
mov
sahf
jg
xchg
idiv
xchg
push
jno
pop
cwde
add
cwde
fistp
test
dec
call
stos
and
sub
or
cmp
fisubr
test
pop
add
shl
push
inc
or
inc
aaa
xor
in
into
inc
adc
sub
fsubrp
sbb
and
add
push
add
mov
sbb
xor
inc
lock
(bad)
popf
movs
and
je
dec
push
jmp
push
and
and
imul
popf
adc
imul
daa
jne
fwait
das
adc
shl
rol
sub
add
xor
gs
imul
shl
mov
aas
and
les
int
dec
ins
push
pusha
shl
add
xchg
inc
dec
sbb
xor
mov
fldcw
add
adc
push
xor
xor
ss
rcl
sub
dec
es
cmp
add
mov
pavgb
add
inc
out
std
in
test
test
dec
pop
ret
mov
cdq
cdq
out
mov
push
jmp
movs
push
pop
adc
enter
test
sbb
cmp
xchg
or
popf
mov
ins
and
out
repnz
push
sar
pop
repz
test
sti
in
cli
cmp
xchg
inc
sahf
into
loop
test
ins
and
movs
adc
pop
sub
bound
ror
add
cmp
inc
add
retf
hlt
iret
inc
iret
and
xor
jo
sbb
add
sbb
jno
adc
adc
add
xor
inc
mov
pop
push
lea
icebp
inc
enter
pusha
out
inc
mov
jne
daa
popa
adc
ja
sub
scas
adc
mov
push
arpl
cs
dec
rcl
push
jno
or
jo
fisub
ins
lea
mov
jmp
aaa
cmp
test
sar
fcom
test
sbb
fistp
ins
and
sbb
jbe
xor
dec
std
cmps
add
(bad)
mov
fldcw
cmc
mov
in
mov
jecxz
sub
add
xor
fnstcw
cli
(bad)
ds
pop
and
xor
lea
mov
mov
call
stos
cmp
pop
cmp
int
push
dec
pop
adc
mov
add
ds
pop
mov
sub
mov
xor
jp
daa
pop
test
add
sbb
pop
arpl
or
out
je
ret
dec
push
adc
and
xor
jmp
xor
push
jmp
mov
and
arpl
mov
inc
pop
dec
push
push
and
int3
cmp
mov
mul
sahf
and
xor
or
test
dec
add
inc
js
arpl
push
push
sti
fist
cmp
pop
jecxz
push
cs
pop
xor
dec
pop
xchg
pop
push
pop
mov
and
pop
aaa
pop
outs
push
sbb
mov
mov
add
out
mov
outs
loopne
push
daa
loopne
lock
mov
inc
and
mov
sub
adc
cdq
xor
stos
fsubr
fwait
inc
mov
jle
xor
push
pop
jmp
push
in
pop
jmp
jmp
or
and
add
add
jmp
or
cmp
dec
jne
add
pop
rol
push
pop
pop
gs
sub
sub
jmp
push
adc
add
jmp
mov
mov
xor
mov
scas
xor
lods
xor
push
das
xchg
mov
push
cmp
test
sti
xchg
cmps
mov
mov
mul
sub
push
push
sbb
pop
mov
(bad)
push
pop
push
cmp
mov
and
inc
dec
and
test
adc
mov
les
adc
retf
xchg
inc
mov
cmps
fisubr
les
repnz
xor
add
xchg
or
sub
jb
xor
not
sbb
inc
add
sub
add
adc
xchg
jns
ja
rcl
es
adc
sub
in
jmp
inc
lds
cmp
cli
out
xchg
dec
cmp
mov
cmps
(bad)
adc
retf
xor
add
lfs
loopne
ins
daa
iret
jnp
(bad)
push
out
addr16
out
add
adc
mov
ja
(bad)
fild
jle
and
ret
xor
outs
lods
cmp
call
aas
xchg
cmp
dec
dec
sbb
fs
test
and
inc
mov
pop
sahf
xchg
sbb
jae
cdq
pop
mov
das
daa
std
imul
jnp
add
or
sub
or
inc
adc
xor
push
and
adc
adc
sub
mov
inc
ffree
mov
push
add
mov
lock
push
push
or
or
pop
mov
push
sbb
lods
xor
xchg
jbe
dec
ins
pop
fs
or
into
and
push
add
pop
jmp
xor
sub
fdiv
aam
(bad)
sar
inc
xor
lods
adc
push
push
adc
sbb
inc
mov
je
jg
(bad)
fcmovne
fstp
fwait
(bad)
fwait
lea
test
push
or
mov
and
mov
or
dec
sbb
daa
or
retf
rcl
cmp
add
loopne
adc
and
sbb
xchg
xor
adc
mov
sub
in
iret
sbb
adc
imul
xchg
jbe
mov
mov
clc
jno
lea
ja
ds
jb
push
inc
cmp
sbb
add
mov
lods
pusha
mov
inc
fadd
sub
sbb
cmp
out
xor
jge
daa
cmps
push
xchg
mov
sub
ror
push
push
or
xor
mov
sub
sbb
sbb
xor
(bad)
mov
call
and
lods
pop
mov
inc
cmp
popa
push
pop
lods
and
jge
push
(bad)
pusha
adc
push
sub
jmp
enter
inc
xor
push
int3
inc
mov
mov
dec
add
inc
push
pop
adc
push
or
xchg
ja
push
push
int3
dec
mov
adc
sub
xor
mov
loop
jo
jo
mov
push
xor
sbb
xor
mov
in
pop
fs
scas
sbb
jg
cmp
pushf
cmp
int
xchg
push
sbb
rcl
push
or
push
and
mov
call
je
xor
jne
jne
mov
push
cmp
pop
cmp
add
es
xchg
popa
ss
jne
sbb
sbb
test
sbb
mov
das
adc
popf
and
retf
int3
retf
xor
pop
sub
adc
dec
mov
add
retf
movs
shl
bound
movs
xchg
pop
mov
xor
dec
je
or
and
sub
test
fwait
pop
sbb
sub
dec
add
push
cs
ins
jmp
addr16
mov
sbb
mov
out
pushf
out
rcr
test
out
xlat
add
into
scas
out
out
movs
xchg
lods
or
loopne
or
sbb
sbb
shr
cld
out
adc
lock
adc
cmp
out
add
dec
popa
add
out
adc
jne
cdq
add
out
push
fwait
sub
pop
sbb
shr
inc
data16
pop
or
add
adc
xchg
dec
fdiv
dec
inc
cmps
add
jmp
out
fld
xchg
mov
data16
pop
mov
push
push
fstp
cs
sub
jbe
adc
or
jb
dec
out
xor
or
mov
pminsw
int3
gs
xor
or
or
int3
mov
daa
and
push
adc
xor
cdq
icebp
jmp
int
inc
push
mov
push
dec
ret
leave
jno
or
add
mov
add
sbb
rol
jne
add
pop
mov
push
aam
mov
pop
xor
ja
sbb
or
retf
je
int3
push
mov
out
fstp
dec
xchg
sub
and
fcomi
push
inc
jbe
push
pop
jge
nop
rcl
dec
pusha
imul
pop
push
ins
inc
fdivp
mov
les
leave
fdivr
mov
scas
fmul
loopne
jbe
push
and
inc
jns
inc
adc
jle
loopne
outs
call
jae
jmp
push
or
jge
fidiv
or
sbb
xchg
mov
xor
cmp
hlt
cmc
add
jns
cmp
cli
jne
pusha
and
gs
loope
sti
xchg
cmp
and
sti
dec
add
push
xchg
sbb
loop
push
or
pop
jne
or
movzx
cmp
je
cmp
(bad)
jmp
cmp
out
cs
push
sub
cmp
jle
xchg
xor
sub
cmp
repz
js
popf
sub
cmp
sahf
pop
and
add
sub
cmp
pop
or
add
inc
in
je
push
push
pusha
imul
inc
xor
das
pop
sub
ret
les
push
sbb
mov
mov
add
push
(bad)
fst
mov
xor
popf
or
dec
aam
inc
sbb
jmp
and
jae
int3
inc
(bad)
cmc
inc
add
cmc
(bad)
adc
scas
inc
sbb
or
ret
xlat
cmps
sbb
icebp
mov
scas
dec
js
sbb
std
fs
je
rcr
sbb
push
add
and
js
outs
pusha
int
pusha
mov
shl
jo
pop
add
inc
ret
push
mov
retf
mov
or
sbb
add
adc
imul
jnp
fisubr
push
push
out
stos
test
lea
movs
add
outs
dec
dec
add
(bad)
(bad)
inc
jo
push
fsubr
fistp
sub
sar
jns
adc
xor
inc
sub
inc
xor
xchg
add
pop
clc
out
scas
or
call
or
dec
ins
je
jp
(bad)
nop
mov
lea
push
mov
push
lea
lea
sbb
sub
xchg
mov
mov
in
inc
xchg
pop
idiv
push
mov
mov
mov
cwde
jle
adc
inc
sbb
ins
ss
cmps
mov
xor
fldcw
adc
mov
fimul
or
adc
mov
int3
fs
dec
jo
(bad)
rol
shl
xchg
add
push
cmp
adc
outs
pop
lea
push
add
jb
outs
lea
mov
push
mov
mov
adc
mov
pop
mov
js
clc
mov
inc
mov
xchg
or
fcom
jne
pop
pop
pop
sbb
xlat
add
and
(bad)
jmp
mov
sbb
xor
test
jne
and
(bad)
push
sar
in
and
out
add
jl
push
sub
and
mov
dec
test
add
les
cmps
push
je
add
add
xor
mov
push
sbb
jne
mov
push
cmp
xor
pop
add
push
jne
push
sbb
mov
in
push
adc
test
sub
sbb
jae
pop
adc
push
sbb
sub
adc
xchg
nop
lea
mov
adc
mov
and
je
fild
popa
mov
ret
jne
and
fiadd
jnp
nop
and
cmp
push
outs
jle
dec
(bad)
xor
mov
cmp
mov
dec
pop
ss
pusha
cmp
xchg
je
mov
mov
in
adc
jp
(bad)
scas
push
enter
enter
push
movs
dec
mov
dec
sub
test
jl
inc
xor
sbb
add
add
fimul
or
pop
jo
jle
add
dec
jne
sub
cmp
jmp
aam
inc
sbb
jo
add
shl
loop
add
cmp
mov
scas
mov
test
add
aam
retf
mov
pop
sub
cld
adc
dec
fwait
movntps
add
or
pop
xor
daa
cs
fsubr
gs
int
cmp
bound
pop
dec
ret
inc
adc
dec
fdiv
aam
and
pop
mov
call
sub
cmp
jne
shl
xlat
mov
jae
mov
add
retf
(bad)
jae
rcr
dec
cmovle
iret
ss
mov
sbb
add
std
lods
pop
(bad)
(bad)
outs
cmp
jne
mov
inc
rol
rol
je
lods
sub
push
adc
aaa
fisttp
jne
aas
arpl
sub
pusha
(bad)
iret
pop
inc
test
in
sub
jg
ficomp
push
stos
or
push
push
sbb
cmp
or
inc
sbb
xor
add
jo
aas
loopne
mov
and
inc
repnz
jb
add
inc
mov
add
inc
mov
test
push
ror
in
outs
cmp
pop
jg
sub
pop
jae
sub
jb
mov
jmp
add
sahf
jb
sbb
jbe
push
in
sbb
adc
cld
std
dec
cmp
add
mov
push
je
or
ds
add
or
or
inc
jg
jg
sub
pop
cmp
out
xor
stc
sub
add
sub
adc
mov
cld
and
ret
dec
test
ret
cwde
cmp
sar
sbb
clc
cmp
je
jle
add
cdq
push
mov
mov
pop
cwde
out
out
pop
ss
inc
mov
daa
sbb
or
xor
push
aas
pop
add
in
test
je
or
xor
adc
lahf
pop
fiadd
dec
je
gs
inc
sbb
inc
aaa
adc
cs
lahf
scas
mov
sbb
bound
imul
pop
(bad)
mov
cld
in
push
lahf
fbstp
iret
int3
jmp
mov
jne
push
addr16
push
(bad)
das
sbb
inc
inc
inc
pop
je
icebp
xchg
or
jmp
mov
jmp
mov
cli
mov
push
shl
inc
add
data16
dec
sub
dec
and
push
bound
int
jo
dec
test
jl
inc
inc
or
push
sub
add
sbb
jl
pop
mov
lods
pusha
jg
fcomp
or
mov
cld
jg
(bad)
popf
push
mov
fs
inc
dec
jne
mov
pop
fistp
adc
dec
iret
pushf
pop
sub
cmp
fwait
in
inc
jl
mov
add
add
retf
ret
mov
jo
adc
je
or
(bad)
or
adc
(bad)
push
and
mov
cmps
dec
lock
xor
outs
sub
test
jl
inc
push
push
sbb
push
ret
int
dec
jl
pop
push
sbb
push
sub
rol
add
sbb
cwde
fimul
jo
pop
cmp
pop
movs
or
jne
fsub
(bad)
fimul
and
push
xor
inc
sahf
clc
and
jmp
or
rol
jp
dec
sub
inc
adc
neg
push
fild
mov
inc
jp
sbb
mov
push
jle
adc
inc
jae
add
mov
retf
xor
xchg
or
jmp
rcr
inc
pop
rcr
mov
jbe
sbb
mov
icebp
mov
stc
jne
add
adc
and
add
stc
inc
sti
xchg
fidiv
and
sub
outs
dec
outs
or
js
add
pop
popf
push
xor
pop
sbb
arpl
loopne
sbb
in
pop
or
or
xor
jmp
cmp
mov
mov
add
unpcklps
adc
add
mov
cmp
xor
push
add
iret
scas
mov
js
jmp
test
push
dec
push
jle
loopne
and
lods
test
mov
popa
push
xchg
pusha
xchg
cmova
and
shl
jne
das
(bad)
mov
dec
jne
and
push
and
hlt
jbe
xchg
mov
mov
or
mov
cwde
jno
mov
inc
adc
pop
jge
pop
je
push
adc
push
fcomp
mov
jl
pop
or
and
mov
jmp
mov
(bad)
mov
enter
pop
push
int
clc
dec
rep
pop
mov
int3
fiadd
mov
jmp
add
fmul
loopne
pop
mov
push
sbb
sbb
sub
and
fadd
dec
add
push
mov
push
and
adc
jo
and
jnp
or
xor
mov
push
mov
xchg
je
pop
sub
sub
movs
and
jmp
cdq
cmp
jle
sbb
clc
dec
mov
cmp
adc
fwait
or
add
xchg
pop
cdq
pop
mov
add
sbb
mov
lock
test
inc
(bad)
pop
add
mov
mov
add
sbb
push
test
dec
fsub
push
mov
mov
sub
retf
sub
xor
sbb
rcr
push
enter
mov
sahf
dec
pop
pop
lea
cmp
and
sub
push
push
push
inc
shl
cmp
xchg
add
icebp
jo
or
out
pop
lock
jmp
aaa
mov
or
stc
call
cmp
pop
(bad)
fs
jns
clc
push
or
(bad)
cmp
loop
cmp
dec
jp
add
mov
out
je
sbb
in
mov
jmp
dec
test
jl
inc
jmp
jmp
cmps
in
lods
xor
into
enter
imul
lock
push
test
or
fs
mov
inc
jbe
push
cmp
push
sub
neg
sub
call
outs
mov
inc
mov
dec
cmp
jne
cmp
in
push
push
push
add
or
int3
cld
in
inc
mov
in
push
lea
sub
jg
dec
mov
add
jne
mov
scas
dec
jbe
push
jbe
push
pop
pop
inc
mov
or
push
scas
sub
pop
sub
inc
inc
adc
call
or
jl
inc
repnz
adc
out
mov
mov
dec
cmp
cdq
xor
add
frstor
xchg
xor
retf
push
push
ror
inc
and
add
mov
and
int
iret
jo
dec
out
fcom
mov
outs
cmp
cmps
cmp
adc
mov
jmp
out
xor
cmp
dec
dec
xchg
dec
xor
adc
mov
mov
(bad)
icebp
lds
pop
sub
mov
pop
aad
ds
ja
inc
lock
lds
push
hlt
shl
nop
lea
scas
hlt
or
ins
xlat
(bad)
adc
cmp
ja
dec
lock
sub
(bad)
bound
es
enter
and
cmc
adc
cld
pop
ins
jne
data16
push
das
call
mov
xchg
inc
or
les
dec
push
xor
push
cld
lods
adc
sbb
push
test
adc
lea
dec
inc
popa
addr16
jmp
or
adc
nop
push
adc
int
lods
mov
daa
and
cmp
scas
cmp
or
nop
xor
test
sbb
inc
cmp
or
retf
(bad)
xchg
mov
pop
pop
xchg
(bad)
cli
inc
mov
jmp
call
shl
push
push
push
mov
jecxz
ins
adc
mov
inc
inc
xchg
mov
call
outs
aad
dec
sbb
ret
xor
jbe
mov
sub
mov
jo
mov
pop
dec
mov
(bad)
out
cdq
jmp
movs
mov
jbe
arpl
in
cmp
jle
ss
(bad)
or
sahf
fidiv
test
mov
pop
pop
pop
adc
fwait
sbb
push
outs
test
jp
mov
in
je
lock
in
add
cmp
dec
pop
sahf
jle
ja
mov
inc
lock
fimul
push
pop
xor
sub
mov
je
add
xchg
sub
stos
lock
sbb
ja
pushf
add
push
sub
jmp
push
xor
push
icebp
cli
hlt
add
rol
das
clc
jae
int
js
inc
sub
add
push
push
pop
push
cmp
jle
(bad)
mov
imul
xor
loopne
add
mov
das
mov
and
sbb
repnz
jnp
dec
dec
and
add
mov
(bad)
hlt
sbb
pop
fdiv
mov
inc
add
int3
jne
popf
icebp
jle
inc
leave
pusha
ror
jmp
and
js
jne
pop
cmc
cmp
loopne
or
adc
jno
scas
jp
pmulhuw
lea
xor
sbb
xchg
and
lods
mov
sbb
push
enter
or
and
mov
pop
lods
mov
ins
mov
mov
lea
mov
add
dec
push
add
sub
ins
mov
into
and
sbb
mov
sbb
sbb
jmp
aam
dec
call
mov
jmp
js
ret
(bad)
ins
push
adc
sub
je
adc
sar
lock
pop
add
jne
aas
(bad)
clc
and
add
lock
push
pop
jno
hlt
loopne
scas
ss
or
pop
mov
xchg
xchg
inc
js
mov
inc
add
or
cmp
push
cld
push
sbb
adc
lock
dec
push
fdiv
mov
lea
scas
dec
sbb
pop
popf
jp
imul
int3
jmp
sbb
daa
nop
mov
js
adc
add
rol
jge
inc
jo
pusha
ret
dec
les
mov
jne
mov
push
movs
dec
mov
inc
and
mov
cs
mov
mov
dec
mov
fs
and
daa
imul
push
jae
sbb
or
scas
sub
xchg
lahf
mov
pop
movzx
loop
loope
add
sub
fsub
pusha
add
sete
movhps
add
add
xchg
cs
adc
mov
mov
mov
jo
shl
adc
push
retf
test
xchg
pop
fadd
pop
mov
mov
pop
sub
mov
fwait
pop
xlat
push
loopne
gs
sub
out
xor
ror
xlat
(bad)
in
inc
push
add
push
pop
xor
or
mov
adc
xor
stc
jge
dec
shl
cmp
or
enter
mov
adc
rol
shl
test
add
div
dec
or
add
adc
js
sbb
jmp
mov
je
push
pop
ret
and
or
movs
jo
mov
je
or
add
ror
dec
loope
push
(bad)
mov
inc
xlat
add
lods
push
pop
add
cwde
sbb
push
fmul
xor
ss
int3
jmp
das
push
cmp
mov
add
cmp
xor
arpl
cmp
push
repz
cmps
sbb
test
repz
pop
adc
sbb
mov
lods
mov
hlt
loopne
sub
sbb
push
push
cmp
sub
lea
lea
pop
bnd
push
xchg
and
push
and
add
ret
mov
add
pop
or
pop
cmp
push
mov
sub
or
shr
mov
inc
pop
pop
out
push
loopne
xchg
sbb
xchg
sbb
retw
push
and
sub
icebp
bnd
adc
xor
frstor
sub
pop
pop
xor
cmp
mov
or
jae
or
adc
dec
sbb
adc
cwde
push
or
fwait
add
(bad)
popa
add
xchg
sbb
jne
in
pusha
pusha
into
adc
dec
or
add
adc
xlat
mov
adc
mov
(bad)
jp
cwde
popf
movs
or
mov
mov
test
(bad)
and
imul
add
test
push
or
jecxz
inc
je
push
jl
bound
dec
int3
sub
dec
or
fcomp
lea
cld
cmp
sbb
shr
inc
pop
jl
push
inc
les
pop
push
js
mov
mov
imul
lea
and
les
pop
in
inc
outs
cmps
xchg
and
int3
lea
mov
shr
sub
jb
je
dec
mov
loopne
rol
lds
add
jnp
ins
dec
cmp
mov
imul
ret
daa
cmp
in
cmp
jle
scas
mov
cmp
and
dec
sbb
jnp
mov
sbb
jmp
sbb
cli
dec
out
in
fsub
cmp
cmps
cmp
adc
mov
fld
jecxz
dec
mov
cli
psubb
push
movzx
out
mov
call
dec
xor
dec
cmp
or
rol
dec
push
js
loopne
ror
clc
je
hlt
sbb
or
lods
push
sub
cmps
addr16
clc
push
mov
jge
cmp
scas
adc
or
int3
xor
jle
mov
push
push
xor
or
cmp
loop
es
add
je
shr
xor
mov
je
inc
sub
mov
add
shl
hlt
cmp
mov
ds
push
dec
sub
lahf
out
or
adc
sbb
push
leave
test
xchg
push
shl
in
inc
lds
add
adc
jo
fcom
add
dec
cmp
fsub
inc
push
nop
scas
cmp
imul
cmp
xchg
cmp
push
retf
loop
or
mov
clc
and
data16
(bad)
sbb
fnstsw
pop
les
inc
push
js
add
xor
inc
or
aad
mov
inc
add
add
mov
data16
add
clc
repnz
push
push
push
ins
out
pop
cmp
dec
and
retf
xchg
pop
xchg
or
rcr
jo
sahf
or
call
or
add
pusha
add
in
and
inc
sbb
mov
push
arpl
cmp
mov
mov
lock
imul
add
sbb
jne
(bad)
push
and
ret
pop
sbb
int3
fnsave
cli
adc
jae
jge
jmp
sub
out
sub
jbe
jmp
jecxz
jnp
adc
mov
mov
dec
jl
dec
and
xor
mov
sti
test
in
out
jge
stos
shl
adc
push
sub
or
pop
mov
int
sbb
lods
adc
jmp
enter
xchg
pusha
leave
or
push
sbb
fs
inc
leave
retf
shl
fld
fild
add
sub
scas
hlt
mov
loopne
loop
test
test
and
or
push
adc
les
fstp
push
fucomp
add
repz
push
scas
mov
pop
loopne
(bad)
sub
or
nop
pop
js
jge
mov
mov
mov
js
loope
ret
xlat
and
or
mov
call
rcl
test
push
fwait
push
cmpps
mov
sbb
mov
(bad)
fild
pop
dec
in
cmp
mov
daa
push
mov
mov
scas
xor
inc
jp
loope
cmp
movs
mov
and
xchg
ret
cmp
popf
std
scas
mov
je
dec
je
jmp
add
xor
jl
adc
clc
lods
aad
mov
lds
add
push
or
jmp
dec
inc
and
cmp
cmp
cli
add
or
push
mov
movs
inc
sub
icebp
jnp
test
loop
lods
and
jg
sub
test
lahf
and
in
and
push
sub
(bad)
mov
push
sar
jo
inc
sbb
clc
mov
test
pusha
and
or
xchg
aam
sbb
jmp
push
add
test
adc
pusha
mov
(bad)
add
(bad)
jge
dec
mov
lea
aad
mov
es
addr16
sbb
enter
mov
push
push
xchg
push
je
jae
mov
(bad)
and
and
stos
fdiv
mov
test
iret
cmp
inc
test
mov
cmp
mov
movs
fidiv
idiv
cmp
add
xor
pop
pop
mov
add
xchg
or
pcmpeqw
push
adc
retf
test
test
fs
add
out
cmp
xchg
sbb
jecxz
jmp
imul
je
loopne
or
or
int3
push
push
inc
loopne
mov
cmps
adc
sbb
mov
out
outs
sbb
js
inc
shl
mov
add
xchg
sub
sub
call
test
fistp
shl
or
sub
and
dec
cmp
dec
xor
push
dec
cmps
pop
push
pop
or
cmp
jns
dec
popf
jae
ret
or
je
jl
cmp
inc
xor
xor
push
out
push
sbb
sbb
or
pusha
adc
sub
or
push
and
fcom
inc
jnp
loope
mov
sub
add
rcr
inc
cmp
pop
push
fnstenv
mov
test
push
adc
mov
in
xlat
inc
lea
dec
and
adc
jns
mov
int3
call
aas
stos
out
pop
or
fs
sbb
xchg
xlat
test
fwait
or
sbb
cmp
or
xor
or
out
mov
das
cmps
pushf
cmc
add
add
or
ins
mov
and
push
rcl
dec
ret
shr
mov
retf
ficom
imul
lods
add
inc
sub
fdivr
dec
xchg
je
add
fimul
push
ds
and
jbe
sbb
add
push
cli
push
fsubr
adc
aam
jo
sbb
add
loopne
push
je
xchg
into
sub
rdpmc
js
add
mov
lds
xchg
or
inc
cwde
push
push
push
cmp
sub
mov
inc
push
push
jecxz
addr16
push
jmp
xlat
fisub
pop
retf
mov
cmp
ins
or
xchg
retf
in
adc
in
movs
xchg
jmp
fs
push
mov
imul
mov
pop
adc
xor
push
call
ins
push
xchg
ins
js
mov
scas
add
adc
mov
inc
push
(bad)
inc
add
and
pusha
pop
sbb
test
mov
cmp
and
push
add
(bad)
jle
mov
inc
xchg
sar
mov
shl
shr
(bad)
xchg
adc
paddusw
cmp
dec
adc
je
lds
dec
or
out
cmp
dec
adc
pop
dec
xchg
jle
adc
loopne
adc
pop
adc
inc
or
sub
or
xchg
push
mov
mov
dec
add
pop
cli
inc
mov
loope
mov
or
outs
xchg
pop
sub
jbe
jnp
sub
adc
pop
sub
sub
sub
mov
sub
aaa
cmp
add
lock
(bad)
rcl
inc
jo
push
pop
in
or
and
jmp
clc
cli
jg
cld
lea
cmp
jne
mov
in
xchg
(bad)
sub
push
or
neg
cwde
dec
das
add
cwde
(bad)
fcom
xchg
fwait
xchg
cmp
(bad)
cmp
nop
xor
push
cmp
adc
xchg
call
cmps
mov
xlat
sbb
adc
adc
pop
add
loope
push
cmp
add
jo
fild
dec
loope
mov
cld
(bad)
and
dec
jnp
aas
jle
inc
sub
inc
stos
fdivr
(bad)
jo
lods
dec
bnd
add
dec
pushf
mov
or
test
or
dec
mov
not
ror
in
aaa
mov
or
rol
inc
out
iret
xlat
das
icebp
xchg
mov
add
inc
cmp
mov
and
cmp
bound
push
cld
fdiv
js
std
fldcw
fldenv
mov
neg
mov
push
jl
push
pop
jne
fbstp
xor
test
js
mov
or
dec
fmul
out
test
and
xor
push
jne
inc
and
movs
inc
push
sbb
test
cmp
jl
mov
push
ja
jl
inc
mov
pop
jae
sbb
or
and
sbb
or
in
inc
inc
and
fwait
push
sub
mov
push
popa
outs
popa
mov
aas
push
sub
ret
pusha
pop
js
jle
pop
jne
push
mov
mov
aam
cmp
jle
cdq
sbb
add
or
add
sub
and
adc
pop
pushf
mov
js
push
add
inc
xor
sbb
(bad)
rol
pusha
and
mov
enter
ja
jmp
pop
inc
xor
mov
jle
and
jle
mov
push
adc
and
xchg
fst
mov
mov
pop
shr
fwait
jle
add
sbb
jle
sbb
push
pop
(bad)
or
outs
sbb
and
push
pop
rcl
clc
jmp
cmp
mov
sub
cwde
dec
dec
add
xor
inc
xchg
add
out
cmps
lock
xor
mov
stos
mov
test
xchg
pop
sub
rcl
pop
pop
fadd
pop
mov
add
push
fcomp
adc
push
pop
lds
pop
sbb
pusha
or
enter
pusha
xchg
cmp
xchg
add
mov
test
or
mov
jbe
call
ins
inc
cwde
add
pop
sti
xchg
and
es
ins
sub
mov
push
and
movzx
rcr
dec
aad
add
outs
mov
jle
jl
and
push
imul
push
test
ret
add
sahf
mov
js
xchg
or
or
loopne
int3
outs
test
and
popa
jmp
push
jo
dec
out
mov
movs
jmp
dec
pop
bound
jmp
add
shl
add
mov
rol
mov
dec
or
push
ror
push
mov
cmp
inc
xchg
adc
sahf
sub
scas
add
icebp
les
mov
push
icebp
sbb
pop
outs
push
movs
(bad)
jp
xchg
pop
hlt
dec
cdq
jecxz
inc
pop
sar
sbb
push
pop
push
in
inc
icebp
loope
fstp
jmp
lea
pop
rol
cmp
or
(bad)
je
or
mov
std
mov
pop
jo
mov
sub
(bad)
test
xchg
add
push
daa
jae
outs
cli
adc
jno
push
cmp
xor
int3
adc
aaa
xchg
inc
xor
ds
push
pop
adc
sbb
adc
pop
sub
sbb
cmp
push
out
or
pusha
sbb
adc
jmp
jecxz
add
cmp
push
dec
mov
push
mov
jge
fsub
push
in
clc
mov
push
sub
adc
dec
or
inc
add
dec
jne
xlat
pop
inc
mov
push
out
ins
(bad)
push
fs
add
push
add
gs
jno
(bad)
adc
mov
jmp
add
lock
pop
pushf
cmps
clc
outs
pop
sbb
mov
push
push
adc
inc
and
(bad)
mov
fs
pop
push
or
jae
shl
adc
inc
and
lea
dec
mov
pusha
add
loopne
and
xor
in
xor
cs
sbb
in
jle
or
and
test
jbe
sbb
loopne
inc
xor
add
dec
jb
mov
or
(bad)
sub
xor
fcomp
lock
sbb
leave
jnp
dec
cmp
jp
imul
mov
pop
and
dec
add
std
pop
int3
add
add
jmp
mov
outs
sar
test
loope
ficomp
call
and
out
adc
nop
or
rcr
add
inc
mov
adc
pusha
add
pop
int
mov
mov
inc
sahf
mov
jl
add
adc
fild
enter
movs
movs
mov
add
cmps
icebp
(bad)
jnp
cmp
add
pop
sbb
jno
cmp
xchg
shr
sub
push
adc
add
mov
call
push
push
sbb
mov
cmc
push
or
push
pop
cli
sbb
and
loopne
clc
(bad)
mov
mov
xchg
aam
sar
cmp
pusha
cmp
pop
pop
push
gs
and
enter
adc
in
xchg
pop
scas
or
and
inc
add
push
inc
out
repz
sub
push
or
xor
add
arpl
sbb
cmp
jmp
inc
loopne
les
mov
mov
xor
je
cmc
push
pop
hlt
sub
daa
xchg
pop
imul
lock
test
lea
jmp
cmp
jae
lea
js
dec
je
cdq
add
pop
je
xchg
cs
push
xor
jbe
aaa
adc
inc
inc
dec
xor
shr
adc
or
add
cwde
pop
and
add
mov
xchg
cmp
in
add
mov
test
ss
gs
cmp
in
push
adc
add
add
loopne
popa
dec
mov
jo
mov
int3
lods
mov
mov
sbb
mov
mov
cs
or
mov
adc
pop
in
mov
and
ins
inc
int
ror
mov
sub
loope
jp
(bad)
push
add
cmp
push
ins
add
and
add
jmp
test
and
popa
aam
rol
pop
outs
jae
xor
inc
repz
fsubr
cdq
sub
mov
push
(bad)
cdq
iret
inc
cmp
jnp
sahf
in
mov
add
repnz
xlat
out
loope
fst
fimul
sbb
movs
shr
cmps
add
nop
add
mov
imul
outs
sub
push
cdq
in
or
and
das
push
sub
push
xor
bound
sbb
pop
sub
lods
test
pop
mov
je
xor
je
adc
(bad)
mov
mov
loopne
pop
add
shl
push
push
pushf
je
sub
or
mov
cmp
out
jle
sbb
add
jne
cmp
mov
pusha
mov
sub
fwait
pop
dec
lods
pop
inc
dec
push
retf
or
bound
js
aaa
sar
mov
push
cld
cmp
je
aas
in
inc
icebp
mov
add
out
les
lahf
jne
loopne
add
xchg
pop
mov
mov
add
inc
retf
mov
cmp
push
call
mov
push
mov
mov
nop
jp
cmps
int3
jmp
push
jne
add
sbb
mov
sbb
sbb
dec
cli
xchg
icebp
cmp
and
cmp
or
mov
ret
sbb
(bad)
mov
or
xlat
(bad)
xchg
cmps
fld
jge
add
and
in
sub
and
mov
pusha
push
sbb
add
lods
js
and
fiadd
test
dec
add
or
or
push
icebp
jmp
push
dec
jae
popa
and
add
les
push
mov
add
int
mov
nop
cld
adc
push
outs
in
adc
test
je
idiv
dec
mov
jg
rcl
dec
fbld
(bad)
iret
jnp
movsx
push
push
or
and
loope
clc
popa
in
mov
es
out
loopne
or
lock
mov
push
ret
or
sti
xor
or
in
imul
mov
adc
xor
sbb
lods
fwait
add
add
adc
cmp
in
fwait
pop
sbb
in
jmp
popa
mov
add
mov
mov
inc
jns
ja
ret
pop
adc
inc
and
pop
out
dec
test
popa
or
add
add
mov
or
push
js
mov
aad
push
xor
aas
loopne
mov
rcl
dec
mov
aas
sbb
jo
je
lds
lock
fdivr
retf
add
add
cdq
adc
or
push
adc
enter
rol
add
imul
pop
push
jp
sub
push
jo
push
out
sub
cmp
std
fcomp
pop
stc
jl
jne
sub
add
fadd
xor
add
mov
es
les
leave
mov
or
mov
inc
mov
add
inc
mov
ja
cmp
sti
loop
ror
sbb
ins
sbb
repz
mov
sbb
xor
push
inc
lds
push
push
(bad)
in
daa
sub
push
adc
scas
sub
pop
inc
aaa
mov
ficom
push
sbb
sub
out
pop
ret
mov
(bad)
ins
nop
lea
mov
adc
xor
and
jg
add
or
inc
jo
dec
add
push
loop
scas
sbb
pop
sar
jns
adc
add
mov
sbb
add
xchg
cld
lea
jmp
pop
mov
cmp
call
bound
mov
ja
adc
sub
pop
pusha
call
mov
out
mov
out
adc
pop
lds
int
jl
fmul
push
hlt
jge
aas
pop
mov
out
js
jb
call
clc
dec
dec
xor
cmp
jle
sub
push
add
xchg
fistp
adc
ret
sub
adc
into
or
enter
cmp
or
das
aaa
push
enter
push
std
aas
mov
mov
cmp
jle
mov
adc
or
hlt
or
or
mov
inc
push
inc
or
pop
mov
or
pop
ror
inc
mov
scas
add
mov
mov
jne
(bad)
pushf
jge
(bad)
mov
or
cmp
inc
outs
add
mov
or
les
retf
mov
(bad)
cmp
add
push
pop
push
sbb
cmp
mov
movs
ja
lea
push
pop
jmp
lods
pop
xchg
push
mov
push
fwait
mov
loopne
pop
retf
inc
(bad)
adc
pop
or
stos
xor
pop
lea
sti
inc
mov
cmps
sbb
push
pop
addr16
nop
xchg
add
mov
test
mov
push
rcr
movs
or
or
mov
outs
cmp
jo
iret
lock
adc
cdq
dec
push
xchg
mov
xchg
add
mov
sub
hlt
or
or
gs
mov
dec
push
or
adc
movs
cmp
sub
inc
bound
fld1
or
mov
(bad)
int
and
hlt
mov
xlat
fcmove
cmp
rcl
xchg
push
mov
cmps
mov
(bad)
int3
push
xor
cs
les
repnz
int3
lea
push
clc
push
pop
int3
iret
cs
cmp
sub
jl
ror
enter
lock
loope
ss
outs
test
mov
lea
cmp
les
js
xor
mov
mov
adc
in
mov
js
inc
xor
int
sbb
stos
shl
xor
sbb
jo
scas
imul
cmp
mov
ret
add
sbb
add
adc
mov
jmp
or
test
jmp
cdq
cmps
add
sar
mov
call
or
and
rol
pop
int3
cli
pop
xor
mov
pop
out
test
dec
pop
xchg
or
and
xchg
sbb
push
push
lods
arpl
inc
mov
movs
or
mov
inc
sbb
mov
je
ror
lahf
add
rol
imul
mov
cmp
cwde
mov
inc
push
lock
cwde
push
scas
loopne
mov
xor
or
push
jle
lock
push
pop
push
mov
or
sub
and
mov
jb
ins
inc
js
or
mov
mov
ss
push
xchg
jmp
adc
or
adc
jae
lds
(bad)
sti
ss
jge
or
mov
push
inc
or
jbe
add
push
mov
jmp
fild
cli
les
rol
jae
outs
xchg
call
cdq
mov
loopne
inc
stos
xchg
cmp
ret
aad
aad
cmp
mov
push
dec
imul
loopne
mov
cmps
jecxz
jmp
jmp
or
jmp
jne
mov
sbb
pop
enter
ret
cmp
ret
stos
pop
popf
mov
push
xor
adc
ffreep
pop
inc
out
and
cmp
or
xor
scas
cdq
xchg
popa
add
test
push
fwait
push
sub
ja
push
mov
test
sbb
icebp
or
xor
ss
inc
icebp
sbb
es
in
inc
inc
jne
cmp
sbb
sbb
icebp
xor
js
jo
jb
jmp
xor
add
or
xor
imul
or
sub
stos
ror
mov
stos
or
pop
xchg
xchg
mov
mov
fst
xchg
popa
pop
pop
push
in
mul
push
sbb
cmp
xchg
sbb
inc
add
cmp
js
or
xchg
or
pop
inc
jo
jg
enter
push
or
and
xchg
push
mov
aaa
ss
sub
les
pop
je
push
pop
shr
pop
mov
or
addr16
les
aas
push
push
mov
pop
cmps
movs
in
add
mov
neg
xchg
sub
xchg
lea
mov
mov
push
lods
fwait
xlat
dec
in
mov
adc
call
sbb
in
push
and
xchg
loopne
in
xor
pop
add
fcom
out
sbb
addr16
out
sub
or
mov
push
cmp
call
push
push
sbb
xchg
in
sar
ret
ja
add
mov
sub
fwait
add
add
lea
pop
mov
lahf
sbb
lods
lock
test
jmp
lock
loopne
dec
ins
seta
mov
bound
test
inc
and
xor
or
std
(bad)
fisubr
add
push
adc
cmp
jl
cmp
sbb
(bad)
cmps
add
adc
inc
inc
inc
dec
cmp
ins
xor
loop
cmp
inc
sbb
jne
adc
shr
pop
xchg
or
pop
or
pop
retf
ret
cmp
dec
adc
or
push
in
xor
mov
aam
adc
sub
sbb
sti
ss
les
inc
push
loope
sbb
add
inc
sbb
sbb
or
cmp
pop
inc
test
and
push
cmp
mov
sbb
and
scas
add
cmp
cmp
cs
xor
cmp
movs
adc
inc
inc
lds
mov
cmp
movs
push
(bad)
xchg
push
jmp
rcl
das
movs
shr
adc
and
jge
mov
dec
movs
adc
inc
xlat
fnstsw
add
jno
inc
push
pop
in
nop
mov
jmp
fbstp
nop
jp
jge
mov
jo
scas
mov
test
call
inc
sub
inc
mov
fmul
mov
nop
sar
and
sbb
push
test
mov
sub
adc
(bad)
jl
test
add
cmp
add
pop
adc
inc
cmp
out
push
rol
adc
cmp
adc
add
add
(bad)
xchg
in
cs
jne
add
push
push
inc
or
jbe
xchg
adc
and
cmp
ror
pop
pusha
or
add
add
mov
sbb
leave
jmp
inc
inc
mov
inc
sbb
mov
pusha
add
addr16
clc
stos
test
int
jl
inc
je
xor
pop
sbb
or
add
adc
(bad)
mov
inc
jo
cs
je
aad
test
gs
mov
mov
or
push
inc
outs
mov
push
sub
sub
jo
push
xchg
pop
mov
xor
(bad)
jp
fnsave
fisub
daa
pop
sbb
clc
aam
cwde
test
push
rcr
adc
daa
jo
cmps
popa
cmp
rcr
or
dec
jne
pop
pusha
jg
(bad)
(bad)
aas
call
mov
shl
jnp
je
add
sub
lds
mov
sub
adc
push
or
jne
or
or
mov
xor
jb
jle
pop
ror
mov
test
add
xor
and
mov
movs
pop
clc
mov
push
fdiv
inc
sbb
xor
loopne
inc
mov
jne
inc
adc
adc
loopne
jle
push
aaa
cs
mov
mov
or
out
out
jae
je
clc
sbb
loope
add
jmp
mov
push
cmps
inc
jne
aad
jae
xlat
fmul
inc
leave
mov
hlt
test
xor
sub
rol
inc
add
push
push
add
xor
sbb
adc
cmp
add
xor
pop
cmp
movzx
inc
pop
push
sbb
retf
inc
xlat
pop
or
lods
gs
rol
xor
mov
ins
ja
stos
mov
sub
or
jge
push
mov
sbb
int
or
jmp
push
add
lea
leave
inc
retf
or
or
adc
or
mov
adc
and
sahf
mov
shl
add
or
stos
adc
xchg
adc
int3
pop
inc
pop
inc
mov
test
shl
test
test
dec
dec
xchg
pop
mov
jnp
mov
arpl
outs
int3
sub
push
sbb
in
pop
jnp
push
and
pop
sbb
and
jp
adc
cmp
ror
aad
sahf
inc
and
and
test
call
push
pusha
movs
mov
inc
sub
mov
or
push
rol
shl
push
mov
clc
add
adc
aam
jo
inc
push
jmp
push
xor
jmp
and
cmp
push
sbb
into
jle
jnp
shl
sbb
sbb
call
inc
inc
sbb
fs
rcl
movntps
outs
test
adc
add
or
adc
rcr
add
or
xor
out
rcl
add
outs
ret
cmps
scas
cmp
test
ret
add
mov
imul
mov
shl
mov
lahf
jbe
dec
jmp
adc
pop
sub
outs
sub
outs
push
in
outs
sbb
adc
nop
dec
pop
jnp
push
jo
loope
xor
add
loope
or
into
jne
xchg
(bad)
daa
ror
dec
jl
lock
je
inc
je
cmp
je
jl
and
sub
je
sbb
ins
push
cmp
je
stos
mov
cmps
jl
pop
jge
clc
iret
out
or
cmp
gs
addr16
sbb
sub
mov
dec
mov
aas
outs
les
dec
pusha
mov
push
jne
mov
stc
dec
and
add
repz
icebp
add
push
push
test
mov
fist
ins
cmp
xchg
jmp
xor
mov
cmp
push
mov
lds
sub
or
out
ret
adc
clc
test
test
inc
mov
pop
shl
and
and
mov
add
mov
shl
ret
pop
scas
je
xchg
add
sbb
sub
add
or
mov
fisttp
push
sbb
loop
call
clc
outs
add
xor
inc
cmp
ds
fwait
enter
fmul
or
mov
sub
lods
outs
push
mov
out
in
mov
mov
shl
pushf
add
push
div
out
das
outs
sub
outs
inc
pusha
das
js
data16
jae
shl
clc
inc
push
pop
jbe
push
dec
outs
je
xor
pushf
scas
push
xchg
lods
add
scas
push
int3
es
and
push
or
push
jns
dec
pop
les
int3
and
cmp
jl
out
inc
xor
ja
fcmovnbe
mov
clc
xor
outs
pusha
ins
push
inc
cmp
(bad)
and
add
adc
fistp
inc
dec
ja
gs
pop
add
jmp
hlt
call
dec
add
mov
add
ds
pop
push
push
(bad)
jg
xor
dec
outs
or
or
dec
inc
outs
arpl
je
adc
pop
shl
xor
popa
je
or
data16
call
fistp
push
data16
xor
push
popa
ins
jne
mov
add
dec
add
sbb
pop
xor
out
inc
xor
ret
scas
fs
jns
push
imul
out
push
inc
popa
pop
push
outs
push
jae
scas
in
pop
enter
lds
movs
popa
sbb
sar
out
or
dec
data16
je
test
add
or
dec
and
xor
pop
dec
xor
pop
sbb
inc
(bad)
std
inc
(bad)
call
pop
mov
jne
pop
pop
add
push
jns
gs
mov
mov
push
mov
pop
jmp
add
ins
dec
cmp
lock
cmp
push
hlt
push
and
push
les
push
or
adc
jns
and
dec
push
and
out
cmp
outs
adc
push
xor
push
in
push
push
xor
and
arpl
inc
or
lods
dec
pop
movs
mov
mov
popa
outs
addr16
pop
jbe
jnp
adc
jae
push
inc
cmp
or
je
xchg
aaa
in
data16
sub
outs
mov
sbb
ins
gs
push
outs
popf
push
cli
pop
scas
movlps
icebp
fisubr
push
xchg
cmp
pop
dec
adc
pshufw
inc
pop
push
ss
mov
push
push
add
shl
add
dec
or
mov
inc
add
pusha
mov
add
mov
dec
int3
inc
lods
rol
pop
sbb
jns
sub
mov
ret
ins
gs
into
bound
rol
xor
ffreep
or
imul
xchg
cmps
fisttp
je
sbb
iret
shl
dec
pop
dec
popa
jae
push
mov
sub
jnp
xchg
pop
xor
or
sbb
jae
outs
add
pop
jge
add
shl
lods
push
add
add
fld
mov
xchg
cmp
aas
adc
inc
ins
cmp
cmp
out
cdq
xchg
and
inc
dec
inc
js
dec
cmp
jns
fcomp
sbb
bound
jb
fs
xor
rol
pop
push
pop
movs
lahf
in
push
fcom
push
sub
mov
clc
daa
push
test
mov
xor
pop
scas
push
push
dec
fbstp
sbb
cmp
ds
pop
test
outs
mov
outs
rcl
lock
enter
jo
outs
push
cld
sub
sahf
sbb
pop
push
je
imul
or
pop
or
movs
popa
or
adc
jns
loope
cmp
dec
jmp
inc
push
punpckhbw
maskmovq
int
out
push
mov
inc
or
je
pop
js
dec
data16
or
add
sbb
mov
or
sbb
push
jl
mov
daa
cmp
or
mov
adc
ss
jo
inc
mov
sub
xor
or
adc
or
adc
push
dec
scas
pop
jecxz
jle
call
push
or
inc
movs
sub
sar
or
sub
mov
or
aaa
mov
adc
clc
das
dec
es
mov
test
stos
inc
lea
aaa
push
push
add
add
push
imul
and
pop
and
or
pop
xchg
jne
sbb
sub
mov
rcr
mov
rcl
xchg
ins
add
push
adc
xchg
xchg
hlt
(bad)
mov
div
stos
pop
stos
mov
lfs
xlat
or
pinsrw
sub
rcl
mov
xor
mov
lahf
dec
lahf
mov
xchg
shl
mov
std
and
lds
push
in
call
dec
call
inc
gs
sub
fsubp
inc
iret
add
es
das
sbb
jb
cmp
fmul
iret
rcl
nop
mov
js
cmps
cmp
xchg
push
push
mov
mov
mov
iret
ins
push
add
mov
shr
mov
push
lea
push
sub
jae
rcr
hlt
dec
jb
cmps
aad
test
xlat
arpl
nop
(bad)
xlat
punpckldq
cmovg
pusha
add
and
and
add
adc
dec
gs
add
add
loop
addr16
sti
sbb
loopne
add
add
popa
and
push
mov
push
and
fs
push
xchg
shl
add
in
mov
mov
sbb
dec
push
or
add
js
cmp
mov
push
pop
test
dec
mov
in
adc
shl
popa
adc
sbb
ja
rcl
test
cmp
ins
jbe
xor
mov
dec
(bad)
adc
xchg
mov
fs
js
cmps
iret
jnp
or
adc
xchg
bswap
ins
mov
mov
pcmpgtw
mov
leave
call
adc
inc
cmpps
xor
pop
movs
movnti
ins
bound
jp
xchg
int3
leave
jnp
dec
add
imul
push
rcl
inc
imul
call
push
call
dec
fwait
push
fwait
test
inc
push
mov
push
mov
sub
and
xchg
pop
and
movs
popa
out
les
adc
movs
xor
push
push
jne
fadd
mov
jle
inc
jae
outs
jne
movs
(bad)
loopne
ins
gs
hlt
inc
mov
pop
cwde
gs
sbb
inc
cwde
aas
fstp
or
xor
ss
shl
mov
mov
sti
das
sbb
xchg
test
xchg
dec
pop
(bad)
sbb
in
gs
add
pop
mov
shl
push
sub
mov
bound
clc
mov
adc
inc
outs
push
jb
outs
loop
lods
mov
push
adc
int
inc
leave
add
mov
aad
scas
mov
or
inc
jne
jb
lds
es
jo
xor
popf
xor
mov
gs
(bad)
bound
push
xchg
inc
and
fwait
and
bnd
stc
add
and
cmp
icebp
ins
xor
aam
ds
(bad)
xor
stc
inc
daa
or
push
fwait
(bad)
pushf
in
test
ins
popf
pextrw
and
add
arpl
inc
dec
xchg
sahf
jae
sbb
mov
fadd
mov
sbb
xchg
jl
fdivr
fimul
xor
mov
fisubr
xor
jae
jo
dec
mov
scas
and
jne
clc
arpl
push
mov
aas
enter
mov
out
and
movs
(bad)
or
dec
pop
setl
or
mov
bound
arpl
movs
cwde
or
add
xor
push
scas
ins
fwait
add
or
call
sbb
(bad)
fcom
pop
push
sub
gs
and
xor
pop
add
pop
(bad)
nop
pop
inc
mov
inc
fst
sti
cmp
call
(bad)
fwait
dec
jbe
push
in
cmps
addr16
cs
cdq
pop
cmps
dec
cmp
add
push
xor
and
add
mov
ret
push
test
or
mov
xor
xor
retf
jmp
pushf
push
add
prefetch
icebp
es
push
ss
shl
adc
(bad)
popf
in
sar
pop
shl
fstp
sbb
dec
fidiv
dec
add
and
jge
jge
dec
and
outs
imul
ins
and
icebp
fiadd
(bad)
jmp
mov
sub
pop
test
xor
xchg
lods
or
pop
jno
imul
inc
pusha
add
(bad)
leave
push
inc
cs
mov
jo
sub
sub
int
js
cmp
mov
(bad)
(bad)
or
add
inc
jg
sub
sbb
adc
imul
adc
adc
and
xor
sbb
movhps
lock
inc
mov
shl
pop
xor
mov
jae
sub
stc
add
aad
jl
arpl
cmc
pop
dec
in
lds
mov
push
jns
arpl
jo
inc
jb
mov
popf
or
cmp
dec
arpl
add
cmps
add
lods
and
outs
icebp
xor
mov
sbb
es
pop
sbb
test
fcmovnu
shr
aad
pushf
mov
cmp
mov
das
repnz
cvttps2pi
in
inc
cmp
pop
mov
pop
call
push
pop
inc
scas
jo
jmp
cmp
pop
(bad)
cs
idiv
movs
jbe
phaddsw
aam
inc
cs
and
dec
mov
ror
sub
cmc
dec
orps
add
ror
and
pop
adc
sti
in
mov
jno
lea
idiv
mov
mov
lods
das
xchg
sbb
out
fimul
iret
int3
stos
mov
jl
cs
iret
loopne
loop
out
pop
add
hlt
iret
push
adc
in
iret
push
ds
lock
pop
bswap
mov
fdivr
mov
xchg
inc
inc
test
out
shl
fsub
ins
sar
ror
sbb
stc
ror
sar
rol
rol
dec
mov
inc
cdq
dec
push
pop
cmp
add
push
push
shr
pop
inc
popf
ja
push
es
das
mov
adc
pushf
add
aaa
mov
inc
fbld
inc
jb
popa
jns
retf
into
or
xor
outs
add
pop
sub
mov
cdq
push
or
inc
mov
sbb
ror
daa
push
jb
xor
dec
cmp
xchg
inc
mov
and
push
mov
or
inc
movs
scas
(bad)
cmp
push
das
or
shr
pop
dec
lods
inc
and
hlt
push
cmp
scas
inc
cmps
js
fstp
add
jno
or
inc
add
inc
ins
sahf
cmp
add
sub
pcmpeqw
push
test
push
test
imul
fimul
inc
popf
xchg
xchg
xchg
inc
jbe
(bad)
jmp
jnp
cmovne
dec
push
xor
scas
xor
adc
sysenter
jmpw
and
inc
arpl
mov
aaa
jnp
shl
pop
and
loope
inc
adc
idiv
mov
inc
add
jno
adc
mov
or
fisub
sbb
or
mov
mov
xor
mov
rol
add
stos
retf
daa
cmp
jbe
icebp
push
mov
dec
jne
mov
je
push
addr16
dec
sub
popf
imul
add
lods
loopne
xor
inc
in
mov
dec
iret
sub
push
xor
lahf
or
fadd
push
adc
mov
and
mov
cmp
fwait
dec
mov
fcom
sbb
dec
sar
adc
adc
dec
dec
pop
test
and
add
dec
pop
ins
sub
repz
sbb
mov
adc
aaa
add
bound
ins
add
ja
out
pop
ja
aam
loop
imul
pushf
dec
cmp
push
add
aas
inc
sbb
lds
jae
or
pop
add
fld
pop
or
dec
xor
fld
movs
das
mov
ret
cmp
pop
or
outs
outs
aad
pop
or
push
lea
mov
pop
mov
push
mov
push
test
mov
xor
jae
inc
sbb
jb
cwde
out
arpl
mov
cdq
call
pop
sar
add
or
ss
push
xchg
fcom
lods
mov
outs
mov
pop
loopne
dec
ja
sbb
outs
test
adc
cmps
aam
push
shl
cmp
xchg
ja
mov
popf
rol
rol
sbb
rcr
dec
leave
fistp
cmps
aad
xor
in
add
sbb
test
sbb
push
sub
pop
mov
adc
xlat
add
pop
int3
add
mov
and
push
pop
rcr
or
add
and
ins
jo
mov
(bad)
adc
cmp
sbb
ins
sti
jne
ret
je
sub
mov
push
in
out
fisttp
outs
or
inc
jmp
and
mov
cli
aas
or
iret
or
and
inc
ss
cmp
add
js
mov
inc
dec
int
das
mov
addr16
mov
ss
push
scas
sbb
push
adc
ins
jbe
dec
pop
fsubr
test
enter
pop
imul
lods
sbb
adc
jle
in
shl
and
dec
popa
outs
popa
xlat
mov
sub
xor
aas
xchg
in
adc
add
test
xadd
inc
pop
xlat
adc
push
ins
sbb
or
and
shr
sbb
jmp
lods
shl
lea
xor
inc
imul
sub
scas
dec
add
pop
lds
add
mov
sub
jmp
and
inc
fsave
and
xchg
daa
push
mov
data16
inc
shr
stos
arpl
mov
retf
mov
iret
mov
mov
es
std
push
inc
inc
cmp
rol
ror
fs
sub
push
push
add
or
mov
imul
ror
or
mov
sub
icebp
je
jno
push
mov
loope
or
xor
sub
or
cmp
and
das
pop
pop
stos
aaa
push
add
mov
sbb
js
jno
cmps
fs
pop
je
loopne
ret
mov
push
push
jb
adc
imul
movs
mov
push
and
mov
jo
fadd
push
out
push
push
fwait
sub
pop
xlat
jno
push
jb
add
mov
sbb
xchg
shr
call
cmps
sub
lods
cs
sbb
push
cmp
daa
add
fdivr
add
test
xchg
bswap
add
pop
sahf
or
xor
dec
pop
(bad)
jnp
fs
inc
cs
jnp
bswap
leave
leave
enter
xchg
(bad)
in
fs
push
outs
mov
repnz
cmp
sbb
push
dec
cdq
loope
pushf
mov
pop
dec
jb
inc
sahf
pushf
pushf
mov
dec
dec
dec
dec
mov
cld
xor
daa
daa
and
sub
frstor
js
push
pop
popa
jmp
or
push
xchg
es
hlt
adc
or
ja
cmp
dec
leave
loop
mov
or
sti
mov
adc
aam
jmp
push
lea
sub
xor
adc
inc
mov
cmovns
dec
jae
loopne
dec
repnz
pop
bound
das
iret
jg
adc
add
adc
inc
inc
cmps
dec
jae
mov
pop
and
mov
bound
in
sub
and
add
sbb
retf
outs
fsub
ror
lods
mov
cdq
ja
push
clc
dec
and
or
xchg
fdiv
inc
add
movs
and
fs
adc
xchg
xor
add
dec
xchg
ret
popa
push
mov
das
adc
ficom
imul
cmp
pop
xor
mov
dec
jae
imul
iret
add
imul
test
jno
fbld
cmp
add
fimul
inc
add
push
xor
inc
add
inc
pop
ja
or
aas
xchg
pop
inc
js
jo
adc
retf
mov
adc
imul
add
push
xchg
xchg
xor
pop
xor
or
adc
or
clc
mov
dec
gs
and
test
sub
and
xchg
inc
dec
(bad)
rol
and
add
and
cmp
popa
xor
cmp
or
imul
dec
mov
inc
or
(bad)
mov
pop
adc
pusha
adc
mov
xor
mov
xchg
ins
sar
add
or
repnz
dec
enter
ins
or
push
jns
or
adc
mov
pop
add
or
xchg
fwait
or
and
dec
sub
or
ins
test
(bad)
xchg
xor
sub
sbb
popa
sbb
push
sub
mov
push
cld
push
pop
pop
and
mov
es
inc
push
imul
mov
sbb
test
(bad)
push
mov
pop
xchg
or
or
push
sub
pop
das
fs
ror
push
push
inc
arpl
jns
add
lods
inc
lock
sub
scas
inc
and
aaa
xor
pop
ret
add
cmp
push
adc
adc
scas
dec
push
inc
mov
dec
and
pop
fsubr
sbb
add
pop
or
or
mov
jno
mov
and
dec
xchg
add
lods
mov
sbb
add
and
fwait
push
pop
movs
leave
xchg
sbb
cmp
add
mov
mov
add
dec
inc
xor
fimul
ja
repnz
push
(bad)
inc
dec
and
xor
pop
mov
push
stos
icebp
es
daa
lahf
jmp
test
loopne
pop
int
and
gs
aaa
lahf
fmul
mov
dec
inc
sub
das
dec
pop
or
mov
dec
push
push
fisttp
scas
adc
inc
add
mov
add
pusha
sub
add
mov
mov
pushf
mov
mov
adc
mov
add
fiadd
in
jp
sbb
sbb
add
adc
push
outs
(bad)
pusha
add
arpl
mov
add
out
mov
cld
mov
mov
and
inc
pop
shl
mov
adc
add
mov
and
ror
inc
add
lahf
pop
lds
arpl
xchg
mov
and
mov
add
xchg
scas
push
adc
scas
popf
mov
jo
push
movs
es
push
pop
jmp
das
in
and
loopne
inc
(bad)
mov
jbe
add
out
mov
cld
sub
sub
push
aaa
adc
ret
mov
push
add
shr
mov
add
add
adc
pop
lods
sbb
shl
sub
addr16
adc
pop
pop
push
add
push
in
cmp
sub
iret
pop
fcomp
push
add
mov
push
js
(bad)
test
loopne
iret
fcom
adc
add
mov
or
xor
or
iret
cwde
mov
adc
(bad)
loopne
add
pop
test
pop
into
leave
lods
jg
mov
or
sbb
pop
push
xchg
mov
ja
cdq
push
jnp
lsl
xchg
xchg
xchg
aas
jnp
or
leave
leave
leave
push
movs
leave
(bad)
in
fs
ins
jg
(bad)
jns
xor
xor
outs
cmp
cmp
aaa
pop
and
adc
call
sbb
gs
jno
dec
shr
sbb
cmp
dec
jmp
adc
push
xchg
es
pushf
inc
add
cmps
xchg
call
pop
inc
bound
sub
jno
push
add
or
mov
ret
xor
test
and
sub
mov
imul
inc
cmp
push
fldcw
ins
push
add
fst
mov
push
adc
les
shl
lds
add
cmc
rcl
or
cmp
inc
and
je
fwait
or
add
add
and
add
adc
sar
rcl
mov
and
push
jno
sub
or
add
or
shl
add
dec
inc
add
add
add
lods
(bad)
enter
and
add
xchg
adc
rcl
xchg
shr
adc
adc
inc
add
shr
sar
dec
and
inc
adc
dec
push
add
mov
and
shr
pusha
push
shl
ror
and
adc
add
xor
sar
mov
mov
adc
add
push
dec
ror
cmp
dec
mov
inc
xor
fdiv
fcomp
sbb
add
xchg
add
add
add
imul
xchg
mov
and
or
lahf
jns
push
inc
jb
cmp
and
fld
loop
push
add
adc
in
stos
(bad)
add
inc
(bad)
(bad)
fistp
adc
ret
push
add
mov
mov
push
xchg
add
fstp
fld
pop
pop
pop
ret
lea
mov
inc
in
push
xor
mov
dec
xor
push
push
push
mov
(bad)
jg
sti
mov
mov
inc
or
cld
push
mov
cmp
jne
cmp
jb
scas
or
sbb
add
adc
jbe
jle
mov
in
idiv
lock
lea
push
push
lea
out
add
pop
mov
in
mov
mov
add
es
ficomp
pop
sar
imul
mov
data16
sub
je
lock
not
pop
mov
pop
ret
push
mov
dec
stos
add
stc
xchg
push
push
push
mov
mov
inc
push
sub
in
xchg
inc
rcr
mov
data16
add
mov
cmp
ja
out
(bad)
jmp
add
add
add
mov
out
push
mov
xor
jne
pop
jbe
ja
in
idiv
mov
mov
add
cmps
pop
nop
aaa
pop
dec
push
add
push
sbb
jns
inc
xlat
mov
push
bound
(bad)
jle
xchg
je
cli
pusha
cdq
push
push
adc
lea
mov
and
adc
aaa
cmp
or
imul
push
mov
adc
push
not
pusha
fstp
mov
in
fimul
ror
fbstp
fsubr
pop
xchg
jae
adc
les
aam
inc
adc
out
mov
lea
(bad)
jmp
movs
movs
mov
or
xchg
fistp
dec
je
jne
cmp
sti
ins
leave
bound
movs
sub
ins
nop
cmp
and
add
inc
pop
into
pop
mov
sub
inc
pop
std
call
mov
and
cmp
mov
jmp
cmp
je
mov
inc
mov
test
and
jmp
mov
in
in
mov
sete
test
je
xor
cmp
leave
sbb
sub
rol
clc
cli
imul
push
inc
imul
push
int3
clc
xor
out
sahf
cmp
push
xor
pop
jne
call
mov
xlat
pop
(bad)
hlt
fstp
inc
loopne
and
adc
and
out
pop
sub
xor
clc
mov
js
pop
outs
xchg
adc
jns
mov
jb
pop
adc
cs
cwde
adc
or
adc
push
xchg
sub
jno
mov
jg
jo
jge
fwait
add
add
jbe
mov
adc
ja
(bad)
je
sub
mov
jne
pop
sbb
push
clc
jbe
adc
jl
and
pop
(bad)
in
je
lea
sahf
jmp
xor
push
dec
add
dec
sbb
loope
cmp
cmp
and
fld
cld
sahf
stc
adc
xchg
shl
mov
xor
(bad)
inc
fild
(bad)
mov
pushf
ret
inc
mov
jle
loope
add
pop
push
bound
sbb
ins
add
push
sti
add
outs
aaa
xor
mov
mov
or
inc
sbb
je
push
je
imul
push
push
outs
(bad)
xlat
pop
loope
outs
jecxz
test
popa
mov
add
inc
gs
popa
ins
or
sub
fisttp
push
les
call
pop
pop
xchg
jl
push
or
and
push
ficomp
mov
pusha
adc
data16
and
and
sbb
js
adc
sbb
enter
or
sbb
pop
or
iret
sbb
(bad)
ltr
sub
inc
fisubr
pop
adc
adc
xor
ror
aaa
or
mov
sub
into
or
ficomp
sub
call
test
jo
gs
sbb
cmc
inc
pusha
sar
loope
sub
cmp
pop
daa
cmp
outs
xchg
mov
mov
jmp
ins
(bad)
mov
push
loope
jb
or
pop
ss
cmp
daa
push
cmp
and
jns
adc
cmp
mov
add
(bad)
jo
or
mov
(bad)
call
xchg
test
je
mov
push
xchg
clc
pop
bound
mov
mov
mov
mov
jo
das
aad
(bad)
call
jp
popf
fsubr
lea
sub
pop
in
lea
or
lods
cmp
mov
or
fucom
mov
addr16
adc
mov
test
fsub
(bad)
int3
fs
mov
push
es
jo
jo
rcl
add
in
xor
adc
mov
call
setle
mov
nop
xchg
call
call
ror
mov
(bad)
cld
mov
data16
xchg
icebp
jg
push
cmp
push
lock
outs
push
inc
or
mov
jg
mov
sbb
xor
mov
or
outs
setne
xor
sbb
ins
mov
adc
add
dec
mov
push
mov
adc
sbb
mov
add
test
jecxz
xor
pop
ret
adc
cmp
(bad)
inc
jne
mov
inc
cmp
pop
clc
add
lods
icebp
test
jle
pop
iret
sub
dec
imul
xor
adc
sbb
pop
xor
jne
mov
cmp
add
jge
add
jne
shr
das
lods
lods
pop
jle
inc
lods
test
sub
shr
call
dec
pop
jl
pop
mov
xlat
and
add
or
or
clc
or
push
cmp
and
hlt
test
leave
push
add
push
mov
jne
push
fisttp
sbb
xchg
lea
mov
nop
test
enter
es
pop
je
jne
lock
inc
jb
ret
pop
stos
jo
outs
xor
movzx
jmp
adc
dec
je
push
adc
and
sbb
xlat
sbb
lea
pop
fsubr
add
push
inc
mov
jmp
push
push
add
sub
(bad)
outs
clc
mov
xchg
push
or
ins
ins
jl
out
shld
repz
sbb
sub
push
xor
je
jmp
adc
test
fcomp
ds
dec
(bad)
scas
add
mov
sbb
div
xchg
fst
mov
push
cmp
and
mov
(bad)
dec
pushf
add
adc
adc
sub
ss
ins
push
push
ret
cwde
inc
and
daa
push
push
jg
je
jne
mov
jmp
or
sbb
out
mov
push
mov
cld
mov
(bad)
ffreep
aam
cli
lock
addr16
inc
xchg
(bad)
sub
je
cdq
(bad)
into
fs
scas
and
inc
ret
je
pop
add
in
mov
sbb
add
neg
lds
xchg
add
adc
fbld
inc
or
pop
adc
mov
sub
(bad)
jb
or
jge
add
mov
ret
jo
ret
fucomip
or
jge
mov
sbb
push
daa
ret
(bad)
push
cmp
jne
adc
mov
add
add
mov
mov
mov
(bad)
(bad)
lds
and
pop
(bad)
add
inc
psubusb
and
idiv
cmp
addr16
jg
jnp
add
mov
push
or
sbb
push
cwde
mov
jns
sbb
inc
outs
push
adc
clc
ins
repnz
adc
cdq
sub
es
cmp
jg
adc
cmp
ror
sub
inc
and
add
jl
xor
in
enter
in
mov
xchg
rol
pop
in
inc
mov
dec
lock
cmp
je
mov
push
and
jo
ds
call
jns
add
mov
ror
jmp
lea
mov
and
icebp
cmps
cmp
add
mov
mov
pop
or
jne
jb
inc
and
xchg
mov
fldenv
or
shr
cmp
jae
mov
push
mul
add
add
push
xor
and
push
rol
jmp
ret
mov
cs
add
lds
loopne
push
mov
enter
jae
aam
lock
add
lds
or
push
or
int3
int3
adc
popa
daa
fsub
mov
sar
xor
adc
sub
mov
sub
ins
clc
cmp
or
cli
ficomp
sbb
push
pushf
xor
xor
xchg
daa
fwait
or
stos
pop
daa
rcr
add
pop
enter
mov
push
outs
or
ds
clc
mov
pop
ret
mov
add
sub
(bad)
out
test
shld
shl
or
or
adc
and
or
pop
ret
rol
pop
cmp
sbb
daa
mov
jno
or
ror
dec
or
sbb
fdiv
and
push
inc
je
mov
shl
mov
(bad)
dec
or
sub
jl
mov
push
sub
(bad)
xor
push
mov
(bad)
xchg
imul
or
mov
push
mov
mov
or
push
hlt
call
mov
sub
jmp
push
jo
cmp
out
cmp
sbb
sbb
jecxz
mov
ret
dec
push
or
jl
mov
adc
inc
or
dec
scas
retf
lods
in
(bad)
sub
inc
mov
dec
pop
clc
or
sbb
pop
inc
and
add
xchg
adc
xchg
jp
ja
jo
lea
push
inc
test
pop
mov
(bad)
jbe
push
ds
into
push
and
ret
enter
fidiv
cmps
inc
or
add
or
outs
mov
lods
cmp
mov
lea
dec
mov
adc
das
cld
mov
xor
mov
inc
push
div
scas
jmp
push
or
inc
xchg
mov
or
stos
push
mov
and
add
outs
mov
(bad)
jle
adc
out
ret
cmp
add
inc
or
scas
and
xchg
sub
shr
inc
fsubr
retf
adc
adc
jp
sbb
stc
mov
dec
iret
mov
push
cmp
push
adc
les
(bad)
mov
mov
xor
sbb
and
sbb
inc
mov
aaa
xchg
test
jmp
xor
jnp
je
(bad)
sbb
add
or
push
fdivr
jne
push
mov
and
dec
jmp
mov
in
pop
or
mov
xor
jge
(bad)
pop
scas
jae
push
push
in
xlat
sbb
mov
adc
call
xchg
scas
or
adc
xchg
and
mov
neg
fmul
lahf
add
je
add
stc
adc
lods
sti
leave
jnp
push
add
ins
sbb
test
out
add
lods
adc
xor
cdq
loopne
mov
push
pop
mov
mov
add
pushf
add
out
mov
sbb
mov
mov
xchg
jp
add
pusha
clc
or
movs
scas
sub
cmp
ins
sbb
push
dec
mov
ret
and
ss
mov
loope
push
sbb
data16
mov
loopne
jle
aad
add
cs
popa
mov
mov
push
out
cmps
loope
add
lods
jl
mov
hlt
pop
jno
cwde
sub
xchg
fistp
sbb
in
mov
sbb
mov
pop
fs
arpl
jne
xor
mul
push
add
addr16
movs
and
pop
daa
push
cmp
jge
fld
adc
imul
shr
fisubr
mov
inc
adc
cmp
sub
cmp
and
lods
adc
xor
xor
or
xor
xor
xor
mov
inc
(bad)
and
pop
je
inc
arpl
pusha
push
add
pop
rep
ret
enter
push
mov
jecxz
push
xor
add
add
lock
add
rol
jne
jne
add
adc
jo
out
iret
and
pop
xchg
mov
push
mov
(bad)
daa
adc
adc
mov
frstor
js
xchg
sti
fmul
add
sub
mov
sub
je
sub
jne
lds
(bad)
test
pop
mov
mov
push
mov
addr16
sub
adc
xchg
jo
sub
sahf
ror
pushf
pop
(bad)
push
push
ss
sbb
retf
dec
(bad)
pop
xor
(bad)
fiadd
shr
ins
adc
pop
xor
std
loop
cmp
cmp
mov
adc
movs
clc
jo
inc
mov
xor
sub
sbb
push
add
push
or
ja
or
in
imul
test
jge
adc
and
or
add
and
stc
pop
bswap
add
das
pushf
xor
push
das
bound
adc
data16
jb
mov
cmp
jb
or
cmp
ret
xchg
les
iret
jo
fiadd
and
out
sub
pop
mov
cmp
inc
cmp
cmp
push
cmp
enter
jno
add
jmp
adc
movs
jle
(bad)
adc
in
and
sub
sub
shr
add
aas
mov
cmp
xor
fdivrp
ds
loope
aaa
dec
mov
or
adc
pop
nop
sbb
mov
aas
cmp
add
and
pop
pop
jbe
pop
arpl
inc
mov
sub
cdq
jge
push
sbb
adc
out
ss
shl
xchg
jecxz
fs
cmps
adc
adc
jo
and
jb
dec
push
mov
sbb
xor
xchg
add
test
mov
sti
ds
mov
pop
jo
loope
inc
call
fld
and
mov
inc
add
sub
shl
int3
mov
or
mov
xor
sti
cmp
pop
loopne
mov
es
adc
jb
pop
cmp
loop
xchg
mov
pop
inc
pop
mov
out
fstp
int3
mov
leave
mov
add
adc
ror
push
popf
jl
or
pop
sbb
xor
add
clc
xor
fcom
loopne
inc
fisubr
clc
sbb
cmps
adc
jo
cmp
inc
push
push
loope
call
pop
shl
push
cmp
pop
(bad)
xlat
ret
or
adc
test
add
out
jecxz
xor
mov
pop
pop
xchg
sub
test
add
xchg
(bad)
repz
hlt
pop
xor
push
in
push
hlt
mov
and
pop
inc
add
hlt
mov
pop
clc
fwait
stos
add
outs
cmp
xor
sub
call
cwde
inc
mov
sbb
add
push
dec
cmp
aas
dec
dec
add
push
(bad)
stos
dec
stos
js
clc
push
aam
push
push
dec
mov
push
mov
cmp
jbe
or
or
sub
add
jo
jae
call
inc
or
je
add
push
das
bound
push
mov
pmulhuw
lock
jp
icebp
outs
clc
sbb
pop
test
and
pushf
outs
hlt
xor
out
push
hlt
bnd
mov
iret
cmp
and
xor
sbb
and
and
mov
inc
or
vunpckhps
adc
jne
adc
and
xchg
iret
xchg
xor
jno
push
or
mov
xchg
or
sub
adc
dec
pop
mov
in
adc
sbb
add
fmul
pop
pop
push
jmp
test
cmps
and
push
mov
cld
add
mov
pop
(bad)
sbb
pop
(bad)
mov
sti
(bad)
sar
mov
sbb
push
call
fiadd
in
out
js
pushf
dec
(bad)
pushf
ins
das
fwait
inc
add
mov
xor
xor
int3
xlat
xchg
mov
sbb
jo
dec
cmp
std
pop
cdq
add
push
inc
dec
jne
lea
stos
aas
xor
xchg
jo
sbb
lahf
sub
push
jle
outs
sbb
jbe
outs
rcr
inc
or
jl
inc
xor
retf
call
jge
xor
pop
sub
dec
jne
(bad)
rol
(bad)
xlat
pop
xor
and
int3
cmp
adc
push
sbb
loope
nop
inc
das
mov
js
jg
dec
loopne
sbb
pop
add
xchg
dec
mov
xor
mov
push
mov
xor
ins
pop
pop
xchg
pop
jl
sahf
and
adc
cmp
add
clc
sbb
out
inc
dec
ss
ds
lods
sbb
or
sbb
lock
ins
xchg
fadd
jmp
sbb
xchg
out
lds
cmp
and
cmp
xor
popa
js
(bad)
push
mov
jle
xor
push
ror
xor
jle
mov
sub
aas
daa
sbb
pop
sub
or
add
outs
loopne
ins
push
loop
movs
call
test
jl
inc
xor
inc
mov
or
jae
dec
jne
adc
sub
xchg
xchg
add
mov
ins
fisttp
adc
fmul
sbb
jnp
sub
add
(bad)
clc
sub
and
jae
dec
(bad)
xor
jg
out
test
jo
imul
jmp
cmps
or
cmp
add
dec
and
js
add
aas
jne
inc
repnz
bound
xchg
jmp
jno
jl
pop
push
add
add
or
sbb
rol
mov
pop
push
je
aas
pop
xor
mov
push
lea
push
mov
js
into
dec
(bad)
push
xchg
xor
jle
adc
dec
ins
fisttp
xor
loopne
sbb
sub
mov
jns
nop
int3
push
mov
outs
sub
std
pop
cmp
push
push
outs
loope
(bad)
rcl
jp
xchg
fsubr
jne
or
or
adc
sub
or
mov
mov
ins
pusha
xor
add
adc
sbb
sbb
aaa
xchg
dec
icebp
loopne
loopne
mov
es
stos
test
jg
je
xor
or
or
je
add
push
or
push
pop
jmp
or
je
popa
fist
outs
dec
inc
xchg
lock
call
pop
je
das
test
addr16
or
lods
sbb
cmp
sbb
or
ins
xor
or
and
or
pop
push
jo
pop
jne
adc
pop
hlt
pop
mov
js
add
sub
icebp
data16
or
cmps
cmp
fcomp
ins
adc
and
mov
std
push
imul
add
(bad)
in
and
in
(bad)
in
je
and
inc
cmp
sbb
pop
push
inc
aaa
sub
stos
xchg
ja
sar
add
loopne
popa
(bad)
sub
lods
test
popf
xchg
or
js
or
aam
mov
stc
xor
xor
pop
xchg
push
inc
pop
ret
shr
jae
jnp
inc
cmp
aad
data16
xchg
adc
icebp
ror
pop
xchg
sbb
jb
ds
mul
xor
mov
pusha
add
add
cmp
jne
cmps
cmp
push
inc
les
lds
mov
fsubr
js
jne
sub
sub
popf
sub
sub
retf
aaa
pop
sub
pop
xchg
jmp
ins
paddsw
mov
cmp
sub
aam
dec
cmp
sahf
popa
or
cmp
jmp
push
outs
enter
enter
and
inc
mov
and
sub
add
xchg
push
sbb
sub
xor
dec
test
sti
ret
dec
mov
dec
adc
fsub
and
fcom
retf
adc
dec
stos
inc
test
xor
xchg
jo
mov
sub
mov
push
xor
add
add
scas
sub
pop
loopne
mov
push
xchg
lds
outs
sub
je
sbb
inc
dec
je
add
dec
sub
fist
or
pop
das
or
xor
and
or
mov
test
pop
xor
hlt
mov
dec
push
ins
add
or
add
popf
popf
xor
sbb
xor
jmp
mov
mov
mov
push
or
inc
push
jae
mov
ret
xor
and
sub
fisubr
test
arpl
jp
cwde
xchg
xchg
(bad)
lock
mov
test
sub
mov
add
jnp
dec
push
push
mov
sbb
shl
lds
enter
fwait
inc
jle
mov
xchg
(bad)
lods
sbb
and
pop
jge
dec
and
fisub
xor
mov
push
sbb
adc
sub
jb
or
push
add
adc
sub
outs
loopne
add
sub
jb
sub
xchg
inc
push
xor
mov
inc
add
les
ret
add
rcl
daa
and
sbb
scas
outs
stos
push
sub
scas
sub
stos
ror
aas
jo
push
neg
loopne
add
pop
push
lods
mov
inc
push
add
mov
add
sbb
dec
out
lods
mov
push
pop
lods
lods
or
adc
xor
data16
mov
popa
das
jae
adc
mov
adc
daa
loop
add
push
popf
cli
mov
xchg
daa
or
mov
aaa
and
mov
fdivr
paddsb
jp
sbb
inc
mov
pop
mov
sub
pop
and
lock
lods
aam
and
sar
adc
or
sub
addr16
fmul
(bad)
xor
dec
jnp
test
and
stos
mov
dec
jmp
jecxz
jp
aam
pushf
jmp
jge
xor
iret
dec
fild
popf
sbb
xchg
push
pop
or
inc
and
cmp
pop
jmp
and
jg
dec
and
(bad)
lahf
mov
and
push
xlat
pop
dec
stc
mov
call
sbb
xor
test
pop
aaa
js
sub
retf
inc
mov
test
aaa
sbb
inc
xchg
pop
add
test
fisub
add
inc
aaa
pop
scas
sbb
fcom
adc
sar
aaa
add
push
sub
mov
retf
test
cli
rcl
pop
cmp
popa
(bad)
mov
sbb
push
sbb
movs
lock
cmps
xlat
mov
std
movs
add
ret
push
xchg
imul
add
fnstsw
mov
hlt
mov
add
imul
pop
call
pop
and
and
mov
ret
sub
clc
sbb
icebp
sub
loop
and
push
jae
mov
add
lea
les
js
sub
adc
add
sub
xchg
lods
lods
push
bound
pusha
cmp
pop
xor
jo
fist
dec
das
cmp
je
shl
test
mov
mov
sub
movs
mov
pop
dec
loope
or
lds
inc
add
add
test
out
pop
jae
cmp
jge
outs
or
lea
mov
mov
cmp
add
ja
ds
jge
mov
fcomp
mov
ins
add
xchg
adc
shl
add
enter
movs
push
add
or
push
and
add
mov
(bad)
mov
push
fucomip
lsl
adc
add
cmp
sti
jg
les
mov
xchg
js
loopne
sub
loopne
adc
push
adc
mov
cmps
jbe
dec
xor
and
inc
shl
repz
dec
out
mov
cdq
jecxz
dec
inc
or
imul
out
and
add
xlat
jle
cmc
lds
aam
lock
lods
in
fist
mov
lea
retf
cmp
or
inc
sbb
mov
inc
test
sub
xor
lds
inc
sbb
adc
in
jno
test
and
mov
sbb
push
dec
out
bound
das
push
(bad)
mov
loopne
(bad)
test
in
movs
push
in
push
or
cmps
fild
or
cmp
out
ret
loope
jmp
mov
or
mov
cmp
call
leave
movhps
add
pop
fsubr
fisttp
inc
or
mov
enter
clc
add
cmp
adc
clc
add
cmp
adc
test
pop
and
xor
les
and
in
pop
test
adc
sub
adc
sub
push
lock
sbb
or
ss
dec
inc
sbb
push
(bad)
rcr
cwde
in
cld
sub
pop
jle
dec
mov
dec
loopne
jge
test
js
inc
aas
push
inc
loopne
xor
ins
inc
xor
inc
inc
push
mov
or
mov
push
mov
addr16
in
add
add
data16
cwde
adc
dec
adc
add
call
mov
out
or
inc
into
push
inc
dec
jne
int
sbb
sbb
lods
paddusb
aaa
mov
comiss
shl
mov
cwde
and
jmp
xchg
inc
jle
sbb
push
lods
push
nop
cmps
jo
adc
test
push
jbe
inc
dec
loopne
push
sbb
clc
call
jo
imul
mov
jnp
pop
push
cmps
push
das
cmps
add
ja
push
add
ja
mov
adc
cs
mov
mov
pop
dec
xlat
shl
lahf
pop
xor
mov
or
lods
mov
xor
ret
stos
push
mov
loopne
in
mov
data16
cmp
push
lods
ins
pop
mov
and
cmp
test
fcomp
jb
add
jo
or
push
sub
mov
adc
popf
add
loopne
add
mov
inc
or
push
outs
or
je
mov
je
mov
inc
or
lea
push
ret
retf
mov
inc
sub
es
push
cmc
push
fs
jne
push
adc
adc
inc
rcl
add
movs
cs
dec
sub
add
push
adc
xchg
cmp
cmp
es
add
fdiv
stos
or
repz
pop
adc
cwde
add
xchg
inc
inc
mov
xchg
movs
pop
lds
mov
test
rdtsc
jo
fimul
cmp
xor
test
out
dec
popf
nop
mov
mov
bound
mov
xchg
leave
sub
sbb
popa
push
jno
and
add
inc
push
ret
xchg
pop
mov
ret
jmp
test
or
jecxz
enter
or
shl
pop
dec
das
cwde
pusha
or
inc
fs
lods
in
pop
mov
ins
add
dec
out
sub
add
adc
push
pop
cli
test
js
stc
loop
ins
cmp
mov
lea
dec
or
leave
add
pop
adc
dec
(bad)
push
jb
sahf
push
popf
mov
cdq
adc
push
inc
rol
inc
dec
xchg
xor
add
call
or
out
add
inc
aaa
inc
mov
inc
outs
ins
jo
(bad)
out
(bad)
push
jae
outs
cmp
jns
je
ins
cs
push
dec
dec
cs
or
imul
cwde
sub
add
sbb
outs
gs
jo
fistp
jae
inc
gs
jne
je
scas
call
add
shl
in
add
(bad)
push
jge
hlt
pushf
mov
jp
mov
in
push
test
test
ss
mov
inc
cwde
push
sbb
add
lods
xor
add
inc
xor
add
jbe
js
int3
and
dec
repz
push
xor
outs
lock
push
clc
pusha
ins
rol
add
jo
ja
jle
add
dec
xor
and
push
and
pop
add
sar
add
pop
pop
xchg
pop
neg
push
push
fisub
add
gs
data16
jg
mov
add
add
fsubr
or
fstp
mov
pushf
or
in
add
inc
xacquire
adc
out
idiv
mov
add
cmp
or
push
imul
adc
add
and
lea
sbb
adc
mov
add
ret
pop
push
adc
jb
and
je
push
pop
xor
or
mov
dec
pop
ins
aam
push
les
pop
mov
mov
add
push
int3
jge
inc
add
push
dec
outs
jbe
inc
jb
sti
mov
(bad)
popa
jns
popa
outs
popa
addr16
test
and
aam
xor
push
inc
fwait
ret
mov
rcl
add
dec
outs
fs
sbb
outs
and
add
stos
jne
sar
int
outs
shr
mov
add
cmc
push
pop
add
inc
imul
add
pop
and
push
scas
add
or
dec
mov
rcr
sbb
ins
ins
gs
inc
cmp
test
hlt
adc
jnp
jge
dec
and
fld
cmp
lods
ret
or
add
or
push
pushf
imul
xchg
xor
ret
inc
push
fdiv
cdq
push
xor
add
lahf
cmp
out
inc
push
push
xor
cs
cmp
in
mov
sub
(bad)
pop
adc
daa
or
lahf
cmp
mov
cmps
or
scas
setg
shl
rol
xor
mov
add
and
rol
sub
push
test
cmp
mov
sbb
popa
xor
xor
and
cwde
inc
test
ins
repnz
add
popa
repz
or
xor
pusha
retf
pop
pop
mov
mov
pop
mov
rcl
add
add
stos
mov
pop
popa
aad
add
mov
mov
mov
add
and
jo
mov
nop
mov
sub
int
xor
sub
pusha
mov
jns
and
xor
test
ja
fs
add
stos
mov
or
sbb
pop
mov
mov
xchg
inc
iret
scas
cmp
inc
inc
ins
ds
out
adc
(bad)
aam
mov
loopne
ret
test
arpl
test
push
push
inc
jl
inc
mov
add
sbb
mov
add
inc
dec
jae
jge
arpl
sahf
push
data16
jae
arpl
arpl
test
mov
pop
cmc
add
cdq
mov
add
sub
dec
pop
adc
xor
cmp
mov
sbb
in
pop
int3
psrld
sub
jg
icebp
mov
push
imul
jbe
fild
xor
das
jnp
fld
fadd
js
outs
test
test
test
sbb
sbb
xor
test
dec
push
push
gs
into
push
data16
jns
and
out
cmp
sbb
cmp
ret
mov
dec
out
shl
cmp
outs
arpl
je
ds
in
fcmovnbe
enter
jb
pop
xor
xor
lock
push
ja
mov
das
add
outs
ret
push
add
push
call
ss
dec
outs
inc
imul
outs
xor
add
or
dec
add
(bad)
bts
push
je
push
inc
jns
mov
jae
stos
fist
sbb
iret
xor
inc
dec
xchg
iret
outs
mov
xor
ins
(bad)
outs
pusha
and
call
xchg
pushf
sbb
fild
xor
xor
push
shl
pop
sub
or
cmp
inc
jnp
add
mov
push
push
ror
cmp
add
pop
lods
sbb
push
out
jg
add
and
mov
rol
xor
xor
xchg
mov
add
pop
mov
add
outs
and
xor
jb
adc
ret
push
add
push
outs
lods
pop
rcr
in
add
add
cmp
and
ja
mov
(bad)
pop
or
ret
call
dec
jnp
outs
push
xchg
addr16
aad
outs
out
inc
push
mov
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
movs
movs
cmps
cmps
xchg
xchg
xchg
xchg
test
stos
stos
xchg
xchg
xchg
xchg
lods
lods
scas
scas
xchg
xchg
xchg
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
xchg
xchg
xchg
xchg
add
xchg
test
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
jo
jb
xchg
xchg
xchg
xchg
je
jbe
xchg
xchg
xchg
xchg
js
jp
lahf
xchg
xchg
xchg
jl
jle
in
aam
mov
add
lea
std
mov
pop
mov
xchg
sbb
lahf
scas
mov
out
adc
daa
stos
dec
je
ins
dec
gs
jo
push
inc
dec
jns
jge
imul
push
es
xchg
call
icebp
add
dec
(bad)
mov
inc
jl
inc
jge
js
mov
adc
push
push
imul
push
inc
movs
sti
test
in
ret
pusha
dec
data16
in
lods
add
mov
add
imul
add
push
sub
imul
retf
std
push
int3
(bad)
fmul
dec
mov
int3
inc
or
pop
imul
inc
pop
test
pop
mov
(bad)
aaa
sub
or
jb
mov
inc
cmp
rcr
jmp
lods
mov
or
mov
or
dec
xor
ret
js
lock
fs
cmp
dec
je
mov
push
add
and
lea
retf
or
cmp
mov
inc
mov
retf
xchg
sbb
add
or
and
pop
shl
add
mov
mov
enter
outs
add
jle
push
or
pushf
and
inc
or
dec
add
adc
add
xchg
adc
arpl
or
add
add
pop
cwde
fs
xor
or
sti
int
fld
push
mov
cs
ins
outs
bound
sbb
shl
and
pop
or
imul
mov
add
jg
jge
sbb
call
cs
gs
inc
outs
arpl
aas
push
lds
push
inc
in
xchg
jecxz
xor
retf
xor
test
outs
mov
aad
fcom
add
pop
pushf
das
stos
sub
xchg
jecxz
xchg
es
sub
add
dec
out
fild
or
(bad)
xor
sbb
out
xor
pop
loopne
ja
imul
push
sub
mov
aad
or
sbb
adc
mov
ins
jne
imul
pop
mov
cld
inc
nop
inc
out
shr
inc
jg
rol
jbe
pop
lods
div
loope
loope
popa
cmp
outs
popa
sbb
cpuid
(bad)
pusha
clc
jns
fs
push
leave
ret
cdq
iret
imul
mov
dec
xor
into
inc
mov
imul
xchg
cmps
(bad)
add
inc
les
in
and
push
nop
or
pop
push
sbb
or
bound
xlat
pop
sub
lock
sbb
add
das
add
push
jg
pushf
xchg
call
ss
fs
jae
pop
xor
xor
adc
add
pop
mov
and
mov
cmp
mov
push
outs
and
push
imul
outs
test
dec
popa
fwait
sub
das
and
sub
push
(bad)
stc
shr
push
xlat
test
scas
aas
fistp
pop
push
dec
dec
add
dec
popa
js
mov
jmp
shl
adc
or
ins
popa
mov
ins
cmp
pop
push
push
jo
je
xor
mov
gs
in
sbb
pop
xor
xor
retf
(bad)
ja
dec
push
push
test
imul
push
imul
push
inc
cli
shr
sbb
gs
or
pcmpgtd
add
jg
frstor
cwde
ficomp
pushf
das
mov
or
lock
push
jo
push
test
shl
loope
adc
fist
inc
pop
retf
in
js
enter
or
push
add
dec
push
pop
mov
add
add
jl
xchg
inc
stos
add
xor
loopne
cmp
pusha
clc
sbb
retw
xor
add
int
xor
or
add
test
cld
inc
push
push
into
add
call
out
mov
sub
push
cmp
fbld
push
push
push
jle
fwait
leave
mov
mul
adc
or
mov
add
fcmove
add
inc
popf
ss
push
outs
pushf
out
sub
test
sahf
jnp
push
pushf
or
sub
mov
xor
(bad)
and
imul
push
out
and
mov
jo
push
push
sbb
dec
push
mov
lods
adc
ret
lea
enter
sbb
lods
mov
lods
add
outs
dec
pop
pop
pop
inc
adc
push
lea
or
mov
jmp
mov
push
out
in
push
sbb
cwde
lfs
xor
(bad)
lock
subps
or
inc
fld
daa
movs
xchg
mov
js
popa
mov
xchg
in
push
mov
icebp
leave
in
ins
fiadd
imul
pushf
dec
xor
enter
imul
or
ins
das
pop
sbb
pop
fwait
cld
nop
punpckhdq
aam
out
adc
xor
iret
imul
cli
add
loope
inc
push
dec
sub
xor
cmp
push
jns
out
pop
gs
jne
out
sahf
out
xchg
call
mov
(bad)
iret
xlat
fcomip
sahf
out
out
cld
or
push
push
test
jns
and
xor
test
xchg
ret
scas
in
inc
in
pop
loop
loopne
add
in
out
mov
push
js
mov
add
loop
out
add
dec
push
data16
js
dec
or
dec
jae
outs
ins
adc
mov
call
inc
lods
sbb
dec
arpl
gs
add
mov
sub
cvtdq2ps
mov
push
pop
in
inc
in
mul
cmc
jns
rol
jg
lods
mov
pop
icebp
cvtps2pd
mov
repnz
jmp
jnp
push
int3
pop
pminsw
jp
(bad)
sbb
jmp
pop
add
xor
inc
mov
mov
add
lahf
fdiv
aas
(bad)
pop
add
addps
cmp
cmp
or
gs
add
ins
add
sub
sbb
retf
cwde
mov
push
ja
inc
mov
in
enter
pop
arpl
add
fadd
add
adc
adc
inc
lahf
cmp
push
add
or
lahf
add
cmp
push
jae
add
(bad)
xlat
inc
in
in
mov
or
and
in
xchg
jo
inc
add
movs
aam
or
mov
aad
pusha
ins
es
test
pop
aad
es
sar
aad
sub
sti
or
fcomp
push
sti
arpl
outs
and
xchg
inc
pop
imul
sbb
push
inc
dec
ds
test
xchg
and
(bad)
fsubrp
add
leave
fild
push
pop
jnp
rol
jl
adc
dec
in
or
add
and
leave
add
xchg
jl
add
shl
or
push
in
jne
push
fsubr
lahf
aas
lahf
inc
mov
xchg
pusha
ja
ja
adc
xchg
adc
add
inc
aas
bound
mov
mov
or
or
jecxz
push
test
adc
xor
test
cmp
in
sub
or
inc
aad
and
add
int
add
aad
aad
xchg
xchg
inc
jecxz
adc
in
aad
sub
sti
sbb
mov
cmp
mov
sub
movs
add
or
stos
fild
clc
cmp
test
shr
add
jno
test
fisub
mov
addr16
add
cs
adc
cmp
dec
adc
stos
pop
or
shl
out
or
push
and
test
jl
rol
cmp
or
push
dec
push
mov
popa
test
fild
adc
and
inc
shr
pop
push
xlat
movs
sbb
or
es
or
js
and
test
pushf
repnz
jns
scas
push
fsub
das
out
das
test
sub
sub
aaa
scas
test
ret
out
ds
in
sbb
and
in
cmp
dec
or
aaa
or
adc
inc
mov
push
popa
inc
mov
stos
cmovbe
push
outs
push
sar
push
test
xor
js
sub
ret
rol
sbb
mov
or
add
mov
outs
ret
adc
(bad)
sbb
nop
or
(bad)
add
mov
push
mov
push
inc
rol
scas
lea
lods
cwde
pusha
lods
cmp
or
shr
dec
rcl
lds
int
or
cmp
outs
lea
pop
inc
or
mov
push
call
cmp
retf
jmp
mov
and
sar
fwait
jg
push
add
add
sbb
or
cmp
xchg
sub
in
or
lods
jmp
add
or
ins
shr
jmp
add
das
and
add
mov
cmc
pop
dec
das
loop
pop
ja
push
xlat
pop
jl
div
or
clc
jl
mov
sar
cmp
mov
mov
xor
adc
jl
pop
add
ss
out
mov
push
push
inc
aaa
sbb
add
test
add
shr
pop
dec
push
inc
inc
rol
xchg
adc
ins
shl
shl
popa
mov
sub
cwde
inc
mov
rcl
sbb
push
or
pusha
rcl
sbb
and
dec
jge
gs
sbb
jns
test
cmps
jmp
push
dec
enter
idiv
test
mov
dec
push
xor
cmps
(bad)
dec
int3
push
loope
sbb
push
(bad)
subps
cmp
xchg
cmp
ss
add
pop
xor
or
add
xchg
mov
push
mov
jecxz
mov
xor
loope
or
jg
and
mov
pop
xor
jbe
pop
pop
xor
mov
jp
cmp
sar
adc
dec
pop
mov
push
test
jg
lock
ror
or
jns
push
add
cmp
mov
jnp
mov
sbb
and
or
xor
dec
imul
pop
fisub
(bad)
fld
ret
stc
push
dec
ins
inc
add
push
or
push
add
lds
stc
xchg
add
add
out
add
push
jg
stc
add
lds
stc
sub
(bad)
adc
pusha
in
fnstenv
fld
fldcw
pusha
jnp
push
pop
pop
pushf
push
inc
add
mov
test
fwait
pop
lods
das
retf
mov
dec
test
add
mov
je
xlat
push
cld
mov
je
sbb
out
sub
xor
mov
js
fsubr
mov
ins
adc
sbb
and
or
in
sub
or
outs
pop
ins
int
pop
sbb
out
sti
mov
fbstp
mov
xchg
pop
push
test
cmp
mov
out
adc
sub
into
push
in
(bad)
jne
scas
in
pop
(bad)
out
ds
add
call
cmp
adc
inc
push
inc
dec
dec
xlat
sbb
or
fwait
sbb
push
xlat
sub
and
or
inc
lds
xchg
and
shr
and
popf
xlat
out
pop
adc
fsubr
mov
rcl
inc
or
xlat
in
sub
shl
or
xor
push
mov
mov
push
mov
mov
pop
add
fsubr
push
add
push
repz
outs
sub
ins
shr
cmp
jo
lods
dec
clc
jne
dec
ja
mov
dec
push
dec
pushf
mov
scas
or
cmovo
mov
cmovle
ss
les
and
cmp
sar
call
dec
push
imul
dec
sub
mov
pop
dec
push
push
int
dec
xchg
adc
ins
shl
dec
out
popa
mov
mov
xor
xchg
dec
push
dec
push
and
dec
push
and
sub
push
dec
dec
test
sbb
dec
(bad)
xchg
pop
dec
dec
add
add
mov
mov
mov
test
je
sub
mov
test
jl
cmp
jg
mov
mov
mov
add
add
inc
add
xchg
add
or
sar
jnp
test
jge
xor
test
ins
aad
sub
cmp
jle
call
add
sar
and
pop
pop
pop
pop
ret
aaa
xor
cmp
repz
jmp
lahf
sbb
jle
cmp
jle
add
ror
fsub
fnstsw
std
jg
mov
mov
lea
push
loope
or
add
pop
ret
mov
fxch
cmp
(bad)
fisttp
loopne
fisttp
mov
sub
inc
cmp
repnz
lock
lea
and
mov
mov
push
jmp
shr
call
sub
push
mov
mov
mov
fwait
inc
lock
xchg
inc
call
add
mov
in
lds
fimul
mov
in
pop
sbb
cmp
jmp
mov
or
je
retf
mov
call
xlat
hlt
cld
xchg
pop
pop
and
jmp
lods
fldcw
int3
(bad)
rol
mov
mov
cmp
pusha
pop
jmp
mov
call
mov
push
rol
add
mov
adc
push
sti
and
js
cmc
mov
mov
mov
push
xor
push
cmps
cmp
in
push
xor
outs
lea
(bad)
(bad)
pop
jge
sbb
push
add
push
mov
push
in
fisttp
retf
adc
sbb
fisub
push
mov
sbb
pusha
scas
inc
ret
ins
movs
jne
sub
cwde
pusha
xor
dec
fs
js
mov
inc
aaa
aas
sub
or
add
mov
pop
cmp
lock
add
int3
mov
sbb
fdivr
cmp
rcr
cmp
pop
cwde
shl
xor
stos
lock
lock
bound
mov
xchg
xor
mov
call
push
dec
sar
mov
push
and
cmp
adc
in
adc
push
fwait
mov
mov
fbstp
push
mov
mov
movs
add
push
pop
or
mov
shl
es
cmp
jmp
out
adc
jg
(bad)
popa
mov
test
jne
jg
stc
mov
cmp
inc
sar
xchg
fnsave
fcmovnb
jne
sar
jle
ret
movs
sub
pop
fwait
mov
xor
xchg
addr16
sbb
push
push
sahf
ja
jns
or
(bad)
(bad)
jmp
sub
push
or
daa
sbb
add
push
cdq
test
push
mov
pop
daa
cli
loopne
add
inc
cld
daa
push
ss
mov
stc
push
push
sbb
daa
ds
adc
enter
in
pusha
iret
(bad)
sti
cmp
lods
imul
test
aas
and
or
daa
and
cmps
pop
pusha
nop
hlt
jge
mov
jmp
repz
setl
test
xor
xchg
xor
pop
cmp
call
sar
mov
loope
adc
cmp
pop
sub
or
cmp
test
sub
push
xchg
or
xchg
nop
movzx
dec
push
(bad)
or
dec
mov
xor
dec
xlat
arpl
cld
lock
outs
test
mov
cmp
sar
xchg
call
push
add
das
and
mov
and
adc
mov
or
dec
ins
je
add
sub
add
leave
xor
fwait
push
inc
sub
test
(bad)
int3
pop
sbb
loopne
test
sbb
add
jge
add
inc
push
das
loopne
mov
fsub
xchg
js
inc
sbb
inc
and
icebp
jmp
inc
sbb
repz
cmp
sbb
neg
mov
cmp
movs
dec
movs
ss
jae
push
push
push
in
hlt
lds
mov
dec
xchg
mov
lods
ss
loopne
push
jg
nop
mov
clc
or
dec
sete
mov
jae
arpl
push
or
sbb
pop
mov
dec
mov
xchg
xchg
push
les
out
sub
cmp
sub
inc
(bad)
mov
addr16
imul
ret
ret
sbb
sbb
dec
je
sub
xchg
inc
jb
add
pop
mov
std
add
add
or
mov
push
push
mov
push
inc
cmps
shl
(bad)
call
retf
fnstsw
mov
fistp
jecxz
xlat
inc
(bad)
movs
pop
mov
dec
test
or
mov
and
pop
hlt
lea
add
ss
sbb
jmp
mov
lea
add
push
fsub
sub
mov
and
push
rol
iret
jge
and
jbe
retf
dec
pop
dec
and
fild
clc
jns
adc
test
sar
push
rcr
retf
add
popa
pop
outs
xor
push
or
and
push
jno
add
ret
jmp
dec
sbb
retf
cmp
jl
movzx
shr
mov
xor
std
inc
mov
and
adc
jne
jg
push
and
push
mov
mov
enter
test
jl
ins
mov
mov
(bad)
out
dec
ror
sbb
adc
shl
or
mov
and
(bad)
push
jne
or
(bad)
xchg
sub
or
pop
or
add
addr16
push
mov
pushf
push
adc
push
dec
sub
and
sbb
ret
cmp
jbe
mov
pop
lock
aas
jmp
dec
or
inc
dec
jne
cmp
sub
mov
push
(bad)
pop
xchg
loopne
add
sar
clc
xchg
jo
adc
mov
or
jmp
sbb
loopne
aam
mov
jo
mov
adc
xchg
sbb
cmp
cdq
call
aad
xchg
(bad)
or
or
jno
jns
call
loopne
pop
and
cmp
ja
jmp
adc
adc
push
hlt
push
std
std
mov
fiadd
push
clts
sbb
sbb
test
pop
loope
jnp
add
add
pop
sub
loope
dec
jbe
or
enter
push
push
mov
inc
ret
cmp
mov
(bad)
sbb
sbb
and
ds
sub
xor
addr16
jmp
adc
xor
fsub
xchg
adc
mov
retf
inc
pop
inc
ss
xchg
add
pushf
jmp
mov
cmp
mov
inc
outs
dec
(bad)
mov
mov
add
(bad)
adc
fdiv
std
dec
outs
ds
push
mov
cmp
pop
or
lods
ret
add
xchg
test
mov
cmp
mov
mov
loop
aas
pop
(bad)
int
ret
mov
push
cs
mov
push
ret
jmp
call
pop
inc
das
out
fs
out
pusha
cmp
add
das
or
aas
das
xchg
inc
and
cmc
xchg
add
mov
movs
sub
loopne
add
aas
das
(bad)
int3
and
pop
ins
and
xchg
shl
add
push
das
aas
or
and
and
in
mov
out
jo
sub
das
inc
add
aas
das
mov
dec
sbb
shl
das
push
fwait
or
aas
das
push
int3
mov
out
add
or
lock
pop
inc
das
or
aas
das
lds
adc
push
jbe
aas
xchg
mov
push
lock
pop
sub
out
push
sub
pop
push
clc
inc
xchg
jle
call
cld
fld
add
sbb
dec
fdivr
fldenv
hlt
inc
or
pop
cmp
push
lods
pop
sbb
sbb
daa
das
cmp
inc
push
ss
xor
mov
mov
inc
dec
jne
and
lea
outs
mov
or
push
popa
dec
inc
icebp
test
jl
inc
xor
out
inc
cmp
js
data16
in
adc
(bad)
jg
idiv
je
jmp
adc
push
inc
add
dec
jne
jmp
iret
pop
(bad)
cmc
pop
fisttp
push
adc
inc
add
loop
adc
lock
aaa
ret
ret
mov
movzx
aaa
xor
(bad)
sysenter
cmp
push
add
jg
adc
jge
nop
and
add
jl
in
mov
rol
ror
dec
test
jl
inc
xor
stos
or
lods
mov
loop
add
outs
les
and
rol
push
add
xlat
les
pop
fadd
pop
inc
hlt
pop
xchg
mov
xor
pop
inc
dec
jne
mov
test
jge
loopne
push
hlt
mov
inc
mov
push
movs
cmp
(bad)
movs
jecxz
cld
pop
or
mov
mov
adc
rcl
mov
mov
xor
push
dec
test
add
rol
adc
fiadd
dec
data16
dec
jne
pop
pop
je
ja
call
sahf
in
and
stos
jno
or
retf
add
or
pop
dec
adc
add
int3
sub
(bad)
popf
dec
push
or
mov
lock
or
mov
jle
mov
rol
xchg
int3
clc
jmp
dec
dec
(bad)
jne
(bad)
call
sbb
sub
mov
inc
or
rol
inc
xor
inc
movs
out
jae
sub
ins
sti
cmps
ds
ss
lea
cmp
inc
jg
jmp
pop
popa
mov
and
mov
push
pop
add
pushf
jnp
call
push
add
or
mov
js
xchg
test
adc
and
inc
add
push
ins
sbb
jmp
shr
sbb
pop
shl
lock
nop
mov
into
pop
loope
push
rcr
shl
mov
and
popa
pop
mov
sub
and
loope
fild
icebp
pop
pop
dec
hlt
lods
mov
sub
ret
xor
icebp
leave
jmp
enter
add
ror
add
mov
out
jl
imul
sub
repz
push
mov
addr16
inc
adc
lods
hlt
push
div
or
mov
ins
xchg
pop
inc
repz
adc
add
xchg
in
inc
cmp
xor
adc
xchg
sbb
mov
mov
xchg
mov
mov
cli
add
stos
adc
dec
iret
cmps
stos
push
mov
inc
xor
ret
inc
inc
sbb
fst
ror
cwde
or
jmp
add
aas
add
cmp
jb
or
jbe
pop
or
mov
mov
das
xor
dec
hlt
xor
xor
and
fs
add
es
xchg
push
pop
retf
and
mov
mov
jne
jo
clc
sar
sub
icebp
push
lods
call
xor
jb
inc
push
test
push
push
sbb
jno
gs
popf
xchg
cmp
test
push
jp
and
sbb
call
(bad)
sub
in
dec
call
gs
jmp
dec
in
cmp
ins
add
pop
xor
jle
xor
retf
push
clc
cmp
push
or
lahf
ds
add
or
sbb
sub
ret
in
aas
inc
add
xchg
lds
and
ret
push
mov
inc
ret
inc
adc
popa
pop
out
mov
data16
push
add
xor
mov
mov
pop
mov
mov
shl
sub
add
call
sub
pop
(bad)
mov
jmp
and
pop
addr16
jnp
jb
pusha
adc
sbb
je
push
and
adc
mov
xor
aaa
lock
or
shr
lock
dec
lods
jne
jg
adc
inc
(bad)
jb
pop
(bad)
aaa
in
fbstp
jle
mov
je
inc
dec
jne
mov
outs
xor
or
ror
int3
enter
pushf
enter
mov
jo
jae
inc
add
ficom
xchg
sub
outs
adc
mov
xchg
call
push
add
sbb
fadd
fwait
add
mov
fwait
jecxz
in
mov
les
pop
and
xor
js
inc
dec
push
jo
es
cmps
mov
or
cli
outs
xchg
and
popa
sbb
fcmove
cmp
jo
cmp
adc
cld
movs
fnstcw
sar
push
inc
add
mov
(bad)
ja
dec
push
dec
jne
test
or
xchg
pop
add
pop
jecxz
cmps
cmp
mov
push
in
dec
jne
inc
ss
out
inc
jne
mov
jmp
adc
test
adc
cmp
mov
pop
xchg
mov
mov
out
xlat
in
mov
dec
or
jmp
pop
push
mov
call
mov
mov
cmp
jnp
div
ret
or
loop
dec
sbb
fidiv
push
out
sub
stos
cmp
aas
shl
(bad)
rcr
inc
xchg
mov
aaa
rcl
ins
hlt
or
or
sbb
(bad)
cwde
and
jle
jne
clc
fisttp
ss
je
adc
jne
jne
paddusb
in
call
jnp
inc
test
div
je
push
jmp
inc
push
push
and
mov
sub
mov
mov
stos
push
sbb
(bad)
adc
jp
rol
jl
jno
mov
and
mov
and
add
mov
mov
ror
dec
inc
jae
push
jge
lea
inc
add
mov
cmp
jne
mov
ret
xchg
xor
clc
ret
dec
sub
lock
pop
mov
or
mov
icebp
jmp
loop
sub
mov
sub
xlat
inc
add
ins
or
sub
mov
or
or
push
xchg
test
push
push
je
test
adc
out
add
rcr
sbb
cmp
add
mov
enter
movs
mov
add
movs
pushf
pushf
in
test
push
dec
rcr
pop
fadd
sub
or
adc
sbb
sub
ficom
loopne
or
mov
cmp
pop
sbb
mov
mov
cmps
ret
pop
(bad)
adc
pusha
ret
sub
pop
in
and
push
or
jl
imul
mov
sub
dec
test
sti
push
cmp
test
sbb
jmp
and
inc
aas
shrd
and
lldt
aas
pusha
(bad)
pop
pop
scas
lock
add
enter
push
jno
push
lock
mov
fdivr
adc
push
pusha
adc
push
sub
adc
sbb
fisubr
adc
sbb
(bad)
mov
and
movs
lock
(bad)
xchg
xor
ss
sub
xchg
clc
aaa
test
pushf
dec
xchg
add
xlat
rol
adc
(bad)
frstor
cld
mov
adc
push
fwait
add
sahf
cmp
inc
or
cmps
adc
sar
jb
mov
lock
push
and
pop
sub
pop
(bad)
add
dec
sub
mov
mov
sub
jae
mov
jle
xor
pop
cmp
mov
(bad)
ror
jl
and
cmp
jle
(bad)
adc
popa
imul
cli
and
pop
in
adc
push
or
pop
push
jbe
jmp
jle
adc
xchg
or
movs
dec
jmp
cmc
js
adc
push
adc
shl
inc
xchg
cmp
pop
test
dec
push
(bad)
je
inc
dec
jne
into
ret
jg
pop
test
dec
cld
movs
sub
jb
inc
xchg
push
ret
mov
dec
dec
mov
jne
dec
jne
jnp
test
mov
dec
push
mov
cmp
sbb
push
lds
retf
cli
mov
pushf
js
in
je
add
or
cli
ja
(bad)
into
mov
or
adc
sub
push
sbb
push
xor
mov
mov
pop
movs
jmp
sub
mov
pause
sub
es
xrelease
or
fsubrp
add
leave
sbb
xor
es
hlt
enter
push
inc
into
mov
and
(bad)
and
xor
or
loop
mov
adc
or
mov
fadd
dec
xor
mov
call
ds
or
retf
in
sbb
xor
es
loop
call
inc
xor
sub
adc
jmp
jo
mov
cmp
jbe
xchg
popa
fidiv
sbb
mov
or
daa
iret
sub
mov
ins
add
push
jmp
cmp
sbb
mov
pop
dec
cmps
xchg
jbe
and
inc
inc
jmp
cmp
data16
mov
call
and
pop
call
xlat
adc
sar
ret
test
sbb
cmp
jl
add
lods
mov
cmp
pop
push
aam
fdiv
fsubr
inc
sbb
dec
call
adc
pop
pop
repz
mov
rol
xor
sub
xor
adc
inc
ss
lahf
shl
sar
retf
mov
and
test
push
dec
ficomp
inc
les
fcmovnb
jnp
push
cmp
xor
mov
xchg
sub
sbb
mov
mov
dec
inc
sbb
scas
dec
cs
ror
mov
jno
nop
sbb
cmp
in
jp
pushf
pop
push
push
mov
or
adc
push
sub
gs
inc
(bad)
jge
and
inc
clc
js
mov
addr16
dec
push
push
loopne
pop
fmul
into
adc
lods
or
cmp
shr
call
cs
pop
aaa
inc
jge
add
enter
test
dec
xor
jge
mov
and
in
dec
and
jb
shl
ficomp
jae
jge
shl
je
test
sub
mov
mov
adc
(bad)
fstp
pop
mov
ja
popa
add
test
mov
jl
fadd
outs
push
daa
dec
add
mov
daa
push
and
mov
daa
inc
add
imul
daa
dec
adc
or
out
jbe
bound
and
int3
ins
dec
mov
test
jns
fisttp
imul
or
push
retf
add
jnp
or
inc
rcr
jbe
push
pop
add
ja
jge
lea
mov
lea
hlt
imul
push
pop
sar
cmps
les
inc
add
jbe
arpl
pop
sti
outs
mov
mov
mov
mov
outs
xor
bound
or
push
js
fstp
and
jbe
add
push
test
pop
sbb
test
ins
in
add
sbb
lahf
pop
retf
xchg
in
sbb
fstp
pushf
adc
adc
sbb
sbb
and
and
sub
dec
mov
nop
gs
retf
mov
cdq
movs
xor
int3
loopne
xchg
fsub
inc
dec
gs
retf
in
ss
movs
xor
pushf
in
fwait
adc
push
mov
xor
xor
test
mov
and
test
movs
and
mov
or
retf
adc
adc
aaa
push
cdq
movs
jb
xor
sbb
test
jb
into
and
inc
mov
or
pushf
or
fwait
jl
mov
add
or
xor
push
push
mov
ret
cwde
add
ret
cdq
les
lea
or
xchg
imul
mov
mov
add
adc
add
test
push
add
and
adc
test
sbb
(bad)
mov
or
push
bound
or
call
or
add
mov
add
fld
imul
cmp
add
or
stos
ror
data16
das
pop
imul
pop
mov
cs
pop
mov
add
out
mov
adc
mov
out
xlat
adc
or
sbb
xlat
inc
push
aaa
xlat
les
mov
push
or
jg
das
sub
loop
(bad)
mov
aaa
inc
push
dec
lahf
aaa
daa
adc
js
scas
call
mov
sbb
bound
out
out
aaa
out
loopne
ja
jnp
push
test
or
aad
xor
std
cmp
push
jmp
mov
cli
scas
lea
mov
push
neg
adc
push
jle
cmp
push
xor
movzx
mov
mov
enter
xlat
cmp
adc
add
cmp
and
fdivr
div
sbb
push
loopne
cmp
call
(bad)
lock
les
fistp
loopne
and
lods
xchg
or
mov
and
loopne
cdq
rol
add
mov
pop
inc
jb
fwait
aad
imul
jnp
add
adc
pop
xor
(bad)
nop
or
push
clc
xor
sbb
lods
mov
dec
or
push
mov
jmp
or
leave
fdiv
push
jbe
ret
add
mov
mov
or
loopne
scas
ret
std
adc
jmp
aad
add
mov
popa
xor
fdivr
sbb
mov
mov
outs
and
sbb
dec
pop
pop
inc
ret
jmp
movs
fsubr
fstp
fwait
pop
cld
sbb
daa
loope
adc
jl
dec
or
loopne
out
cmp
pop
(bad)
popa
sub
popa
pop
or
mov
cmp
dec
jae
or
mov
inc
arpl
mov
call
and
dec
xor
push
lea
out
aam
lea
fist
and
sbb
call
popf
mov
scas
cli
ins
jmp
pcmpgtd
add
jmp
and
shr
je
and
test
pop
test
jg
cdq
xor
sub
mov
mov
mov
(bad)
push
adc
cmp
sub
stc
push
pop
test
js
test
push
inc
loope
jle
fldz
fsub
sbb
(bad)
push
enter
xchg
call
in
fisttp
or
cmp
jg
push
mov
fmul
mov
adc
push
iret
dec
jo
sub
mov
cmps
ins
push
pop
popa
pop
rcr
movs
test
inc
nop
test
and
icebp
adc
mov
inc
or
nop
mov
stos
mov
js
hlt
outs
hlt
lods
or
sub
data16
pusha
adc
mov
ins
(bad)
mov
cs
aam
mov
bound
in
mov
mov
push
push
fmul
adc
add
or
dec
xlat
rcr
pop
ret
adc
cli
push
add
sub
inc
test
sti
popa
rcr
cmp
cli
mov
je
pop
inc
or
js
test
pushf
or
lods
cmp
mov
call
fwait
data16
jno
adc
add
mov
cmp
inc
push
and
outs
in
push
jnp
(bad)
popf
lods
sahf
jae
pusha
inc
(bad)
ja
hlt
adc
(bad)
xor
mov
shr
iret
pop
sub
(bad)
fdiv
ja
add
jb
push
sbb
clc
jo
xchg
cli
mov
mov
jge
xor
mov
jo
adc
hlt
popa
and
dec
mul
and
xlat
adc
pop
mov
add
cmp
add
scas
push
fimul
lock
pop
mov
add
mov
add
dec
pop
or
push
cmp
mov
add
xchg
call
outs
jne
dec
inc
mov
inc
shr
stos
fwait
dec
pop
xchg
jo
mov
or
adc
add
mov
ds
dec
sbb
sub
clc
add
mov
or
xor
mov
add
jg
adc
mov
pop
push
add
lock
pop
pop
adc
xor
mov
inc
pop
or
or
mov
xchg
lock
pop
outs
pop
cli
push
inc
xor
dec
sub
movs
hlt
add
push
mov
add
(bad)
mov
push
xchg
dec
jge
sub
lock
jno
adc
loope
xchg
not
add
push
pushf
test
pop
add
sub
stos
out
adc
add
or
sbb
adc
sbb
xor
push
js
cmps
test
fwait
mov
mov
les
pop
scas
adc
pop
jl
inc
rol
sbb
es
xchg
inc
mov
adc
cmps
mov
or
inc
hlt
jge
add
push
ins
bound
enter
cmp
sbb
daa
loopne
add
add
(bad)
neg
push
sbb
mov
scas
push
arpl
jg
jp
and
sub
dec
push
bound
cld
cdq
es
mov
jl
or
loope
or
add
sti
pop
add
test
mov
add
sysexit
adc
into
mov
fistp
ret
(bad)
sti
out
pop
ret
push
or
push
or
push
(bad)
or
enter
mov
test
lahf
inc
add
xchg
pop
or
(bad)
sub
jge
dec
sbb
cmp
add
add
jne
push
sbb
cdq
lds
scas
pop
pop
imul
add
loop
or
sub
dec
mov
loope
or
out
push
cmp
push
inc
xor
add
fsub
out
test
loope
push
icebp
lock
sbb
mov
cmp
pusha
test
movs
push
fcom
cmp
and
and
rol
jns
jnp
and
loopne
inc
add
push
mov
pop
out
and
popa
test
adc
mov
sub
int3
shl
pop
(bad)
xor
add
or
mov
mov
add
outs
pop
mov
and
bound
rcl
div
cs
push
sar
cdq
add
adc
or
cmp
mov
xor
int3
jbe
daa
mov
or
push
fild
or
jle
jmp
push
retf
jmp
bound
or
mov
push
or
es
push
mov
adc
xchg
push
adc
cmp
cmp
jmp
(bad)
sub
into
push
jb
inc
fcomp
and
or
scas
ja
ins
push
add
je
dec
jo
sbb
clc
lock
aaa
xor
les
xchg
sub
jnp
jp
rcl
iret
xor
push
mov
clc
adc
cmp
pop
xchg
jmp
clc
lea
or
push
ins
cmps
jmp
jmp
adc
aam
and
loop
pop
or
imul
(bad)
mov
pop
mov
inc
push
xchg
and
dec
jmp
inc
dec
(bad)
dec
(bad)
jns
nop
sub
mov
add
ins
adc
xor
adc
stc
out
loopne
bound
push
and
adc
hlt
add
add
pusha
test
into
iretw
dec
daa
shr
cs
cmp
(bad)
out
ret
out
sub
cmp
sahf
xor
push
add
sahf
lds
dec
mov
cli
rcr
(bad)
scas
daa
sub
dec
sub
jl
inc
xchg
lea
xchg
movzx
or
sti
pop
inc
dec
jne
adc
test
aas
sub
inc
in
inc
cli
push
inc
leave
ds
xchg
js
loopne
outs
dec
add
loopne
sete
inc
mov
mov
rol
(bad)
and
mov
pusha
sub
jbe
add
and
js
clc
add
sbb
fisubr
adc
dec
inc
push
(bad)
sub
add
add
push
into
retf
mov
jle
pusha
test
push
out
and
inc
mov
mov
jne
dec
push
add
mov
sub
jo
out
std
push
dec
pop
call
mov
inc
(bad)
jne
mov
icebp
out
setg
das
sbb
rol
push
jbe
ins
add
or
jo
add
pop
push
sbb
pusha
pop
scas
rcr
cmp
cmp
mov
or
jl
inc
test
fist
mov
arpl
retf
jmp
pop
mov
sub
jl
inc
mov
cmp
jne
mov
mov
dec
add
push
pop
xchg
adc
test
in
stos
add
cmp
jp
(bad)
cs
add
jmp
or
inc
inc
pop
push
pop
aaa
aaa
inc
and
add
inc
sti
mov
imul
xchg
out
dec
push
add
or
cs
sbb
ds
xor
test
je
ds
xor
sbb
push
call
adc
cmps
ja
pop
in
dec
push
loopne
mov
addr16
loopne
adc
int3
(bad)
mov
in
(bad)
fcomip
jo
out
adc
pop
test
and
loope
jno
or
mov
fdivr
ret
add
add
mov
sub
je
sub
ss
cmc
je
jmp
xor
enter
fwait
std
mov
lea
push
pop
push
add
jb
inc
push
and
test
adc
and
sub
or
pop
pop
jbe
jbe
jle
test
ss
or
xchg
adc
jns
ja
jo
jmp
adc
pop
cmp
sub
pop
mov
js
sbb
push
sub
xchg
mov
mov
mov
pop
mov
in
adc
adc
test
push
je
outs
out
in
sar
rcl
fdiv
jmp
jl
in
inc
cwde
and
mov
adc
xor
ins
sub
cmp
es
pop
jbe
xchg
mov
(bad)
pop
lock
jnp
stos
pop
int3
and
inc
loop
or
ss
sahf
push
les
pushf
mov
les
push
mov
sbb
sbb
aam
sbb
add
stos
jle
lea
cmp
jmp
sbb
push
out
sub
adc
sbb
arpl
inc
pushf
xor
cdq
(bad)
add
inc
add
adc
addr16
xchg
mov
test
setae
xor
pop
or
test
push
push
add
outs
jl
adc
fs
mov
inc
lahf
jl
lahf
mov
sub
dec
pandn
push
int
sbb
nop
xchg
and
or
aad
and
addps
call
or
test
mov
or
adc
cli
inc
mov
inc
clc
cmp
push
jne
clc
jle
inc
fmul
cmpxchg
cmps
fild
fabs
push
mov
inc
pop
pop
mov
shl
mov
add
pusha
adc
mov
in
inc
ins
jo
or
add
ins
rol
clc
inc
sbb
cmp
fcmovnb
add
pop
pop
(bad)
inc
repz
dec
sar
int3
push
and
dec
repz
ror
push
loopne
inc
xor
mov
sar
add
lock
xor
loop
mov
push
push
push
mov
nop
neg
stc
hlt
mov
test
jl
mov
push
rcl
push
add
mov
push
push
add
add
push
dec
fs
(bad)
std
(bad)
jmp
je
popa
ins
imul
jo
outs
outs
je
add
gs
je
xchg
or
jbe
pushf
bound
hlt
add
gs
call
or
fs
lahf
sbb
adc
fcomp
or
mov
ja
jb
das
pop
cmc
jnp
cmp
popa
jae
xor
or
iret
mov
mov
push
test
sar
shl
push
cmp
dec
mov
pusha
enter
push
adc
(bad)
jo
xor
pop
popf
adc
pusha
addr16
rcr
pop
push
das
ja
les
add
or
or
or
push
(bad)
jae
data16
ret
test
je
push
enter
js
push
loopne
push
sub
rcr
dec
or
or
cmp
inc
int3
fs
adc
pusha
aad
or
dec
jg
push
and
jnp
test
setne
or
lods
test
ror
pusha
int3
push
or
push
out
int3
adc
std
push
xor
xor
push
adc
xor
ror
imul
add
push
les
test
xchg
dec
loopne
push
push
sub
jp
jle
lahf
adc
add
jle
cmp
scas
mov
xchg
call
push
test
outs
out
(bad)
fsubr
and
push
call
jbe
clc
adc
fmul
inc
push
imul
outs
push
pop
adc
popa
lds
(bad)
mov
inc
push
xchg
ins
and
addr16
add
mov
outs
arpl
je
bound
mov
jne
in
cwde
call
adc
or
fst
ins
push
pop
add
inc
adc
mov
aaa
add
adc
rcl
sub
or
push
push
fist
jae
outs
pop
jecxz
sbb
rcr
or
or
fldenv
add
push
inc
xor
pop
dec
pop
(bad)
cmp
lds
and
xor
adc
stos
ins
sbb
add
fild
inc
inc
add
adc
call
pop
or
pop
arpl
mov
stos
mov
inc
add
popa
retf
dec
add
mov
pop
stos
ins
gs
fdivp
xchg
mov
jns
pushf
xchg
push
mov
lods
jmp
and
out
pop
jne
push
nop
mov
cmp
mov
out
inc
test
fs
push
in
adc
inc
loopne
in
pop
mov
shl
test
adc
(bad)
(bad)
mov
inc
je
lea
push
test
(bad)
call
test
mov
pop
repz
mov
xchg
loope
movs
mov
mov
push
mov
jo
outs
sub
test
adc
loope
retf
in
js
sbb
mov
and
push
imul
xchg
cmp
and
cmps
and
push
repnz
push
ds
add
or
dec
add
cmp
aaa
add
adc
push
shr
sbb
pop
out
adc
popa
adc
call
add
pop
fdiv
add
inc
test
js
ret
dec
jns
mov
outs
adc
test
and
xor
xchg
jl
add
popf
lea
cmp
push
mov
inc
add
ss
jne
or
inc
lods
(bad)
movs
mov
ja
push
in
mov
add
dec
scas
hlt
imul
jne
pop
push
dec
or
push
jo
add
sub
mov
xchg
xchg
jge
call
imul
mov
inc
imul
aas
imul
mov
add
ja
call
pop
push
lods
xor
and
push
push
sbb
adc
push
or
test
xor
div
push
mov
cld
mov
xor
mov
bnd
fsub
cmps
cmp
add
pop
sub
je
mov
ja
or
jo
in
add
jne
mov
mov
or
mov
or
adc
adc
mov
push
or
sub
nop
push
push
dec
lock
movs
lock
int
lock
rcl
add
mov
push
data16
fbld
inc
pop
(bad)
loopne
fistp
pop
mov
out
push
ret
test
pop
inc
push
je
test
add
inc
out
sub
(bad)
jne
nop
dec
pusha
mov
dec
(bad)
or
(bad)
mov
mov
pop
mov
push
(bad)
mov
outs
sbb
mov
inc
scas
or
xchg
mov
scas
out
or
add
xor
add
scas
pusha
ja
mov
loop
and
loopne
jge
lock
arpl
xor
sbb
sub
aaa
xchg
mov
pusha
fadd
or
dec
dec
lahf
pusha
dec
ret
push
movs
lahf
ret
sbb
add
and
xor
jge
bound
or
outs
add
test
popa
mov
sbb
add
fdiv
ins
xor
fdiv
std
inc
sahf
int3
sbb
inc
dec
pop
stos
push
push
and
xlat
sbb
mov
or
dec
add
add
add
and
mov
lock
and
aam
mov
or
out
sub
ja
xor
sbb
sub
lahf
shr
pusha
mov
movs
aaa
xchg
or
xchg
lahf
push
setne
or
test
mov
daa
inc
stos
in
adc
test
push
pusha
mov
dec
sbb
or
movs
iret
sbb
dec
es
iret
xchg
iret
addr16
mov
test
jo
add
popa
add
inc
and
in
data16
inc
pop
or
xor
inc
mov
iret
sbb
dec
es
iret
sub
pusha
hlt
or
or
pop
xchg
leave
stos
and
pop
push
jo
iret
mov
jbe
les
dec
jl
(bad)
adc
(bad)
cmps
loope
xor
mov
fist
lds
dec
or
or
mov
fistp
xchg
fmul
nop
pop
xor
hlt
dec
fisttp
lock
sub
mov
cmp
dec
push
xor
cli
add
test
xchg
imul
or
xor
dec
movs
jmp
test
xlat
loopne
mov
inc
and
pop
push
lds
das
ja
fcom
xor
pop
shl
dec
ja
sbb
or
movs
ja
out
or
jne
xor
sbb
or
mov
cmp
and
add
dec
pop
or
outs
add
les
mov
sbb
popa
and
movs
adc
(bad)
jle
rol
or
push
retf
push
mov
sub
aas
ja
mov
cld
dec
or
add
sbb
add
out
xor
lahf
nop
inc
dec
ret
fild
sbb
sbb
test
xor
mov
xchg
into
xor
and
cs
xchg
mov
jo
add
inc
dec
xchg
pop
dec
ret
push
movs
xchg
ret
sbb
add
fist
pop
cmp
cmp
push
lahf
das
ja
ja
mov
ja
xor
add
add
push
imul
adc
shl
ins
jno
das
ja
pop
and
dec
ja
or
add
dec
ja
shl
clc
movs
ja
xchg
sub
mov
lea
pop
mov
jb
arpl
jbe
in
xor
fadd
stos
sbb
ret
push
movs
(bad)
sbb
jle
imul
loope
mov
lahf
push
aaa
or
mov
push
aas
data16
fisub
cwde
ins
jg
stos
xchg
loope
pusha
mov
dec
sbb
or
movs
iret
pop
pusha
pop
movs
(bad)
xor
call
jmp
pop
push
mov
in
push
sub
stos
aaa
pop
and
jbe
or
add
dec
scas
call
in
add
outs
sbb
or
cmps
mov
mov
ins
jne
das
pop
pop
and
dec
pop
dec
(bad)
xor
movs
(bad)
lods
aaa
or
lahf
or
(bad)
adc
aaa
mov
pop
jns
dec
and
pusha
mov
dec
mov
sbb
shl
test
xor
jmp
cmp
scas
inc
sbb
fistp
and
fmul
cld
dec
add
add
or
xor
sub
fidivr
sbb
push
push
(bad)
aas
leave
stos
and
jl
shl
dec
scas
push
mov
ret
dec
scas
jo
inc
mov
xor
xor
and
pop
rcl
dec
rcl
aaa
lahf
xor
push
repnz
jo
mov
lahf
fsub
or
movs
lahf
mov
and
add
inc
or
imul
jle
bound
jns
sbb
push
dec
out
ja
mov
out
or
add
inc
push
sbb
add
out
xlat
add
lock
fsub
in
mov
ins
push
(bad)
dec
jo
leave
stos
xlat
inc
and
or
xlat
dec
xor
cmps
loope
or
sbb
dec
add
push
loopne
cmovbe
or
pop
aas
addr16
loope
sbb
add
dec
mov
or
pop
mov
sbb
faddp
cmc
inc
mov
pop
sbb
jbe
push
ret
jo
push
test
mov
xlat
dec
fcom
aad
sbb
dec
shl
fbld
fist
or
pop
mov
outs
and
jmp
fbstp
pop
or
test
dec
(bad)
or
outs
aam
fild
rcr
adc
mov
pop
leave
xchg
popa
mov
sbb
js
sahf
cmp
add
pop
loop
xchg
push
or
sbb
cdq
mov
pop
aam
cmps
loop
adc
adc
pop
push
inc
sbb
inc
inc
push
out
mov
jle
cwde
dec
sbb
xchg
les
and
lock
in
cmp
aaa
fcom
jmp
and
mov
push
add
inc
push
cmp
inc
cmp
loop
dec
dec
or
jns
lock
in
mov
or
xor
loope
pusha
sbb
pusha
movs
loope
jo
into
jo
fmul
(bad)
hlt
stos
popa
mov
das
add
or
pop
or
aaa
add
pop
js
fbld
or
enter
xor
fnstsw
or
shl
js
add
push
inc
or
daa
dec
add
dec
jo
das
dec
push
repnz
mov
(bad)
dec
(bad)
adc
push
pusha
mov
in
pop
sbb
enter
xchg
adc
jbe
or
and
mov
das
xchg
outs
sub
daa
sbb
daa
lods
dec
sbb
add
adc
mov
pusha
ret
inc
scas
adc
xchg
adc
in
pop
in
add
cmp
jo
add
push
shl
sub
or
in
push
adc
xchg
pusha
xor
int3
aaa
and
and
xchg
nop
outs
add
call
sub
and
lock
pop
shl
cmp
(bad)
outs
xor
inc
pusha
pop
jg
push
dec
mov
jae
push
cmp
call
sub
ret
jnp
ja
mov
pusha
dec
push
fadd
adc
cwde
dec
pop
add
push
push
icebp
push
leave
hlt
cmp
inc
push
inc
jno
pop
push
cli
inc
rol
xchg
jmp
adc
pop
or
mov
dec
pop
mov
clc
mov
mov
push
or
call
sbb
push
ja
push
fistp
sub
outs
movs
xchg
add
outs
adc
add
add
inc
push
outs
icebp
inc
enter
sub
inc
outs
test
or
loope
and
(bad)
jg
push
leave
stos
xchg
mov
lds
xchg
mov
movs
xchg
inc
sub
add
push
pop
mov
mov
bound
inc
aas
outs
pop
and
cdq
cmp
aaa
add
dec
push
je
push
inc
xor
add
ret
add
ds
fwait
mov
addr16
test
inc
rcl
xor
mov
fmul
in
adc
adc
dec
push
or
sub
adc
shl
arpl
mov
push
jno
xchg
mov
pusha
or
mov
popa
pushf
or
push
mov
sub
fsub
push
add
sub
cwde
dec
push
outs
(bad)
xor
adc
adc
push
pop
lds
scas
fstp
add
add
dec
push
xchg
mov
adc
xor
in
push
bound
test
dec
inc
add
sbb
dec
dec
out
stos
loope
fistp
mov
dec
fisttp
xchg
cs
inc
test
xor
mov
test
push
aas
push
pop
jo
adc
lahf
aas
mov
mov
or
add
dec
(bad)
push
pusha
add
sbb
and
or
xor
adc
sbb
or
inc
adc
adc
xchg
inc
loop
add
dec
xchg
mov
mov
push
dec
xlat
je
ret
push
movs
xlat
pop
push
add
daa
inc
ror
daa
data16
pop
or
dec
add
out
sub
out
lea
add
out
aam
out
push
adc
das
add
sbb
and
add
dec
lahf
and
prefetch
jb
popa
sbb
fsubr
inc
not
xchg
push
inc
fisttp
movs
sub
fistp
pusha
sbb
add
cmp
sub
outs
sbb
adc
and
scas
dec
mov
imul
mov
ja
ds
mov
addr16
mov
and
add
das
sub
xor
add
test
das
push
inc
or
and
xchg
test
dec
das
in
add
shl
cmp
das
inc
nop
das
fcom
sub
test
add
sub
pusha
push
das
cmp
pusha
sub
and
fdiv
das
data16
adc
pop
inc
clc
jo
add
ja
mov
repz
jns
mov
add
out
sub
mov
movs
aaa
xchg
or
mov
inc
xor
mov
add
sahf
push
(bad)
push
adc
pop
pop
mov
and
or
outs
add
pop
and
movs
pop
inc
loop
loop
and
or
pop
pop
scas
bound
loop
sub
lods
dec
pop
repnz
or
icebp
inc
xor
dec
and
push
pop
mov
out
sub
sub
mov
dec
pop
mov
pop
nop
xchg
or
mov
and
and
mov
push
xchg
inc
pusha
mov
cld
cmp
mov
mov
pop
fbstp
jo
push
mov
test
xor
push
jle
dec
imul
cmp
inc
sbb
push
mul
sahf
xlat
jns
test
add
out
sub
outs
shr
mov
enter
or
jmp
pop
nop
outs
fsub
bound
movq
sbb
inc
or
adc
in
or
lock
call
mov
sbb
or
push
call
aaa
xchg
jl
inc
add
or
jmp
or
jo
dec
dec
scas
mov
cmp
mov
ja
mov
mov
xor
add
mov
add
push
loope
loope
mov
and
stos
loope
mov
lea
aas
push
or
mov
ret
or
loopne
mov
add
add
jo
lods
and
fild
test
push
sbb
sbb
and
dec
and
and
outs
pop
jns
and
aas
out
mov
xor
shr
pusha
mov
movs
sbb
(bad)
cmps
loope
dec
fistp
mov
fbld
pop
or
and
mov
add
xor
jns
add
out
sub
pusha
mov
movs
push
or
jne
xor
and
adc
das
dec
pop
push
outs
aas
mov
pop
and
dec
mov
add
add
xor
push
pusha
add
xor
cmp
aaa
xchg
(bad)
mov
pop
and
dec
mov
or
add
xor
xor
cwde
movs
mov
xor
inc
xlat
pop
inc
aad
pop
xor
dec
mov
sahf
xor
sbb
push
xor
dec
aaa
pop
jo
or
dec
add
or
mov
or
sar
(bad)
faddp
loopne
push
popa
sbb
mov
ret
jb
ss
stos
or
fcom
xor
push
dec
minps
add
cwde
adc
adc
movs
pinsrw
inc
cmp
inc
pop
inc
mov
scas
lods
mov
xchg
leave
stos
popa
add
shl
dec
(bad)
fadd
jns
ret
dec
inc
ret
popa
cdq
int3
mov
or
add
mov
ss
adc
push
leave
stos
and
adc
shl
push
dec
xlat
xor
js
or
inc
add
mov
adc
dec
fs
pop
and
les
dec
mov
xor
add
pop
sub
aam
sbb
push
add
inc
pop
in
xchg
or
add
stos
and
cmove
and
pcmpgtb
psubusb
push
inc
or
loope
mov
push
pop
or
out
mov
dec
out
or
outs
pushf
dec
out
movs
push
pusha
and
(bad)
mov
(bad)
push
and
or
add
inc
mov
int
in
dec
add
add
add
xor
mov
inc
(bad)
cmp
aam
sbb
dec
out
xchg
popa
or
imul
or
sbb
pusha
xchg
and
out
dec
out
sbb
add
and
stos
xchg
out
push
ror
inc
out
ja
mov
out
xor
add
dec
out
or
hlt
and
loope
out
(bad)
out
push
leave
stos
and
ret
or
out
xor
xor
add
mov
xor
sbb
fsubr
fbstp
dec
or
prefetch
mov
add
ret
mov
mul
jo
jbe
push
mov
xchg
mov
into
mov
cmp
xchg
movs
xchg
mov
xchg
inc
xor
xchg
mov
or
xchg
fcom
jbe
jp
add
add
push
inc
addr16
push
inc
or
loop
xchg
shr
mov
fmul
adc
mov
xor
push
fcom
idiv
adc
mov
sub
dec
dec
and
mov
sub
mov
aas
and
aas
xor
aas
leave
sar
add
pop
call
add
aas
test
xor
xchg
dec
and
cmp
(bad)
adc
fcom
stos
aas
imul
add
mov
mov
cld
dec
lds
and
aas
jo
or
lds
and
stos
in
xlat
sub
mov
dec
aas
nop
movs
and
add
fcom
xor
adc
aas
mov
out
ror
dec
adc
das
mov
lds
adc
jg
and
test
dec
test
das
xchg
cmp
pop
dec
inc
shl
add
jo
dec
shl
push
jbe
arpl
inc
push
xchg
ja
leave
stos
and
fidiv
or
lods
dec
pop
push
mov
call
xchg
dec
pushf
and
adc
fcomp
pop
mov
inc
pop
ja
lds
scas
add
and
add
dec
pop
xor
ficomp
push
icebp
inc
and
nop
stos
in
push
pop
mov
and
mov
or
or
jno
inc
push
pop
test
mov
mov
sub
push
(bad)
ds
push
xor
ja
dec
push
js
push
or
ret
xchg
mov
(bad)
add
jl
dec
mov
lds
push
dec
in
movs
dec
icebp
push
enter
inc
inc
jno
dec
fs
dec
or
pop
inc
outs
fcom
stos
dec
add
jno
push
dec
pop
dec
dec
adc
pop
xchg
movs
dec
mov
lds
and
dec
or
pop
inc
lds
and
ror
dec
add
add
sahf
lds
movs
aaa
adc
add
xchg
and
(bad)
pop
push
sub
sub
adc
mov
pop
mov
in
dec
pop
mov
dec
pop
mov
loope
sub
xor
test
dec
push
add
push
and
adc
push
jp
push
add
mul
mov
ins
inc
stos
in
mov
lods
in
pop
pusha
mov
out
shl
push
test
mov
cmps
pop
pop
das
jbe
sub
and
jae
popa
add
dec
inc
dec
inc
and
outs
push
test
out
sub
out
dec
dec
mov
dec
in
nop
or
sub
ficom
dec
pop
or
inc
mov
adc
lds
mov
dec
push
mov
xchg
movs
dec
push
icebp
xchg
dec
add
adc
movs
jmp
dec
cld
cmp
push
icebp
xchg
dec
lods
mov
inc
jno
dec
pop
and
lock
cs
sbb
pop
mov
pop
outs
stos
loop
inc
pop
in
aaa
mov
dec
aaa
test
mov
mov
das
ror
movs
or
cwde
(bad)
mov
inc
inc
stos
push
lea
arpl
data16
add
add
(bad)
ja
lds
imul
addr16
push
fsub
dec
addr16
dec
adc
pop
inc
addr16
movs
addr16
and
push
test
mov
add
test
add
aam
addr16
push
mov
ins
push
test
jns
push
or
addr16
icebp
add
out
sub
mov
or
mov
push
sbb
push
push
push
sbb
sbb
jp
psubusb
or
jo
jae
mov
fdiv
push
sbb
in
xchg
add
mov
mov
and
xchg
movs
fiadd
sub
outs
sub
add
stos
in
xchg
hlt
or
pop
push
fadd
dec
xchg
movs
xchg
lds
sbb
stos
stos
xchg
(bad)
dec
xchg
test
push
xchg
outs
inc
pop
mul
(bad)
xor
lock
pop
adc
add
adc
mov
stos
or
popf
clc
nop
add
mov
push
mov
xlat
je
sub
dec
and
movs
bound
lds
xlat
not
and
xlat
mov
cli
test
xlat
mov
dec
xlat
dec
sti
mov
and
fcom
out
mov
xchg
dec
xlat
or
outs
add
dec
xlat
and
movs
xlat
loopne
cmps
loop
and
jl
push
arpl
mov
push
xchg
mov
or
or
push
add
add
push
adc
inc
dec
popa
mov
sbb
ins
movs
loope
fs
and
or
(bad)
cld
cmp
and
or
(bad)
(bad)
call
inc
dec
inc
xor
add
hlt
inc
xor
and
in
mov
nop
push
add
xor
test
push
mov
dec
dec
mov
or
adc
push
inc
test
(bad)
shr
sbb
addr16
push
jp
adc
ja
neg
pop
push
mov
mov
or
lock
adc
mov
add
pop
scas
inc
inc
or
sbb
push
fisubr
jae
fiadd
or
dec
jnp
xlat
clc
inc
nop
adc
mov
enter
add
or
or
js
adc
inc
and
adc
adc
mov
js
retf
or
jmp
arpl
ror
jge
leave
push
add
fstp
cmp
mov
dec
xor
xor
add
cmp
movs
mov
push
sub
mov
enter
and
dec
pop
or
pop
xchg
or
movs
in
xchg
add
push
call
dec
data16
cwde
mov
mov
mov
cmps
hlt
imul
pop
pop
or
es
inc
(bad)
neg
xor
add
add
add
nop
jmp
mov
sub
push
xchg
aas
mov
adc
add
sbb
cmp
inc
(bad)
and
(bad)
xchg
retf
fcmovnb
call
loope
jmp
dec
add
xor
cmps
mov
xor
and
sar
movs
(bad)
retf
adc
loope
aas
and
es
sbb
push
sub
pusha
pop
aas
xor
fld
test
jp
dec
in
or
xlat
dec
shl
xlat
sbb
add
in
dec
add
pop
add
mov
sbb
loopne
pop
scas
jb
dec
fucomip
and
add
add
mov
adc
push
stc
push
ds
jo
arpl
dec
in
fs
data16
addr16
stc
push
sbb
test
push
ds
dec
mov
test
nop
dec
in
stc
clc
ins
xchg
inc
outs
cwde
adc
ds
jo
mov
adc
je
movs
(bad)
je
test
jne
ds
dec
in
ja
push
pop
push
stc
push
mov
jl
rcl
ds
jge
pusha
jg
lahf
stc
push
ds
adc
xor
shl
aam
test
or
pushf
daa
jae
loope
mov
sbb
adc
dec
test
xchg
aam
xchg
push
stc
fisub
jbe
sahf
or
cmp
lahf
retf
add
cwde
add
imul
adc
(bad)
xchg
adc
mov
retf
test
dec
xchg
shl
je
adc
sub
adc
iret
and
shr
bound
mov
pop
fcom
and
int3
lahf
adc
lahf
retf
dec
mov
xor
movs
repnz
movs
cmp
jae
pop
cmp
adc
out
ds
inc
rcl
add
push
add
adc
stc
push
ds
inc
ds
dec
in
lods
dec
movs
lods
pop
xor
fsubr
adc
inc
stc
je
pusha
push
cdq
test
adc
xchg
enter
add
adc
lods
mov
adc
and
pop
mov
add
repnz
je
mov
sbb
test
adc
stc
je
xlat
pop
mov
xchg
out
mov
retf
push
pushf
aas
fst
mov
sub
sub
adc
fidiv
and
cmps
sti
mov
nop
mov
push
(bad)
push
outs
fcomp
in
jl
jl
mov
adc
add
fdivr
les
xor
ss
enter
test
adc
aam
scas
xchg
bnd
sti
je
fsub
add
out
jmp
push
call
fsub
js
adc
mov
pusha
popf
inc
pop
xor
and
(bad)
retf
enter
adc
(bad)
stos
jl
lahf
lock
leave
hlt
ror
jne
xlat
jne
pop
adc
dec
rcl
cld
(bad)
aam
fistp
adc
push
sbb
mov
in
adc
mov
mul
xor
adc
nop
push
push
mov
mov
push
mov
(bad)
clc
add
rol
cs
mov
ret
lea
push
inc
mov
dec
add
not
and
(bad)
(bad)
mov
mov
test
jne
test
je
cmp
jb
mov
jmp
(bad)
jg
fdiv
shr
add
add
mov
add
cmp
jge
arpl
jbe
xor
or
dec
cmp
push
fild
ret
xor
mov
mov
push
cmc
mov
push
or
(bad)
jmp
(bad)
ds
cmp
ja
xchg
or
push
mov
iret
repz
mov
cmp
repz
call
outs
push
fucomi
dec
mov
inc
mov
sti
sbb
lahf
pop
mov
mov
cld
sub
mov
jge
adc
pop
add
aas
jp
lock
arpl
push
mov
push
test
sub
dec
add
mov
sbb
xor
fsubr
sub
shl
xor
xor
dec
push
push
pop
xor
xor
pop
pusha
fs
ins
jo
dec
push
inc
icebp
jle
push
xor
or
xchg
add
iret
mov
leave
sbb
inc
ja
mov
lods
mov
pop
xor
pop
xchg
push
adc
lahf
jne
int3
jne
popa
paddd
lea
mov
add
ret
lods
not
or
add
mov
ret
xchg
mov
lods
scas
clc
inc
nop
push
adc
jmp
data16
cs
inc
adc
add
mov
test
jne
cmp
je
pop
xor
sahf
mov
cdq
loope
xchg
push
lea
mov
push
xchg
add
push
push
or
(bad)
fcom
jecxz
retf
call
and
pop
mov
sub
xchg
mov
add
fisttp
int
or
std
fdiv
xor
add
add
push
inc
mov
push
adc
add
inc
ds
sbb
mov
push
or
les
and
or
add
mov
sbb
add
push
sub
add
nop
fprem
xor
and
test
aam
(bad)
pop
cld
aaa
pop
jle
add
movsx
cli
add
cmp
mov
adc
inc
push
cmp
outs
hlt
enter
mov
jne
(bad)
push
mov
sar
sbb
add
cmp
retf
jge
call
mov
andps
mov
sub
xchg
cld
jmp
mov
daa
fidivr
fwait
jbe
je
add
sbb
and
out
rcl
mov
adc
sub
add
or
add
jmp
les
sbb
adc
aas
jbe
les
(bad)
call
les
arpl
loopne
fiadd
test
imul
pusha
add
and
out
inc
pop
clc
xor
int3
cmp
xchg
mov
or
lock
or
(bad)
daa
push
cmp
dec
rcr
or
call
mov
in
xor
pop
or
sete
test
pop
pushf
stos
les
xchg
and
cmp
jge
adc
shl
scas
inc
sar
in
adc
jnp
mov
jmp
scas
pop
dec
shl
in
loope
ret
in
cmp
mov
lock
add
mov
mov
(bad)
je
mov
inc
add
and
push
shl
fimul
sbb
inc
add
(bad)
pop
sbb
xlat
mov
pop
mov
mov
cmps
mov
inc
sub
jnp
push
mov
inc
sub
les
jmp
pop
push
jne
add
sub
test
cmps
imul
or
stos
xchg
add
add
add
and
test
mov
inc
neg
adc
or
push
push
shl
cdq
out
in
adc
mov
inc
add
call
add
mov
xor
add
js
xor
sahf
jne
or
dec
jne
sti
cmp
dec
aad
mov
rol
add
push
mov
cs
mov
xor
fadd
ins
add
ss
sub
mov
and
add
xor
sti
aad
add
fidivr
inc
stos
shr
or
je
cdq
shr
inc
fisubr
outs
adc
cli
mov
cmp
lock
lock
dec
stos
pop
pop
test
shr
sbb
in
jne
sbb
add
mov
clc
add
mov
jo
fcomp
int3
xlat
add
jnp
and
mov
pop
sahf
test
mov
adc
out
jge
jne
shl
sbb
xchg
sar
push
pop
in
or
add
inc
jmp
xor
push
aaa
jne
xchg
sbb
push
xchg
dec
fild
sub
jno
bound
pop
add
int3
or
cmps
pushf
jg
mov
or
and
push
and
jle
push
push
xlat
clc
add
cmp
add
jle
outs
pop
and
jmp
movs
(bad)
idiv
xor
push
fdiv
sub
push
call
imul
sar
test
mov
mov
add
scas
mov
lods
sahf
pusha
mov
add
jne
or
adc
push
mov
and
adc
lods
in
icebp
inc
cmp
xchg
test
call
cmp
mov
jb
push
cwde
push
stos
pop
cld
in
and
out
ja
daa
repz
sbb
mov
push
lock
push
push
sar
cmps
push
cmps
pushf
je
jae
or
inc
mov
push
mov
pop
mov
je
push
popf
fiadd
jne
sbb
imul
or
mov
fsubr
mov
pop
pop
jbe
mov
dec
inc
add
repnz
or
repnz
add
mov
rcl
cmp
clc
xchg
div
out
fcom
sub
outs
in
jmp
pop
adc
jo
adc
jb
pop
inc
inc
xor
aam
hlt
sub
add
push
je
call
std
ss
repnz
sub
or
aam
jl
sbb
sar
mov
dec
sbb
sub
retf
test
xor
retf
cmp
or
mov
mov
and
push
daa
add
andps
test
sar
add
call
inc
sbb
std
xor
je
rol
loope
jno
mov
xchg
mov
test
mov
pop
inc
mov
jmp
add
mov
dec
je
add
jmp
iret
mov
clc
mov
push
imul
ds
inc
add
jbe
inc
enter
inc
adc
stc
std
cmp
push
loope
cs
mov
mov
out
fstp
ja
add
scas
inc
mov
mov
shr
icebp
and
adc
add
jl
push
mov
mov
test
ins
xor
mov
mov
inc
lds
push
ror
repnz
mov
xchg
pop
mov
ins
imul
mov
(bad)
mov
push
bound
lock
push
sti
lea
and
sub
or
(bad)
push
xor
fadd
cmp
push
(bad)
out
imul
neg
mov
sbb
dec
in
push
je
rcr
mov
mul
xchg
add
add
cmp
mov
sbb
adc
mov
add
xor
add
dec
pop
ss
xor
jae
add
inc
popa
iret
xor
jg
les
or
jg
mov
es
mov
xlat
jae
push
data16
or
addr16
call
cmp
mov
and
and
aas
pop
inc
pop
pop
add
jmp
mov
stos
pusha
xor
or
inc
mov
shl
mov
mov
jo
outs
inc
sbb
ss
es
ja
sbb
inc
loope
sub
push
cmp
sub
mov
int3
int3
pusha
mov
dec
jnp
xor
add
add
in
jge
jbe
fistp
mov
inc
inc
inc
jb
fmul
add
out
in
hlt
sub
mov
mov
call
js
add
push
and
cmp
jl
out
inc
xor
ja
mov
mov
xor
mov
das
cmp
test
add
jge
imul
push
dec
ja
dec
sbb
into
sar
add
push
push
movs
mov
xchg
stos
push
in
ds
xor
ins
push
lods
cmp
pop
pop
dec
xor
movzx
sbb
call
push
jmp
add
pop
dec
add
sbb
sbb
jb
lahf
bound
sbb
add
outs
inc
and
cmp
push
push
sbb
aaa
and
cmp
push
inc
add
and
jge
ja
add
push
dec
xor
push
and
xor
cld
xor
or
xor
scas
retf
outs
getsec
add
daa
sbb
das
ja
and
mov
add
and
das
and
int3
push
dec
fs
icebp
jg
push
imul
inc
popa
jae
es
push
inc
jb
popa
je
add
jg
cli
adc
loopne
lock
gs
data16
jbe
jmp
inc
push
call
jae
outs
outs
push
jne
jo
jb
push
ss
inc
mov
pop
nop
add
inc
pop
xchg
jl
mov
test
push
mov
jbe
pushf
jne
jnp
mov
je
inc
push
outs
fsub
fldcw
je
add
push
inc
jne
cbw
xchg
cwde
jge
xor
pusha
outs
mov
nop
xchg
mov
sbb
dec
push
adc
fwait
rol
imul
fs
jb
ins
(bad)
push
mov
inc
adc
mov
loope
jg
push
sbb
repz
inc
xlat
jo
push
out
or
push
cwde
lds
lds
ror
leave
adc
mov
sbb
mov
xchg
fst
inc
xchg
sbb
xchg
jecxz
jmp
ja
lods
loope
and
mov
adc
popa
ins
and
mov
bound
push
popa
inc
add
in
mov
push
in
loopne
arpl
in
pop
rcr
sub
ss
add
mov
in
fcom
scas
mov
add
sbb
outs
jae
inc
mov
outs
inc
fs
mov
outs
adc
adc
jg
add
in
enter
sbb
sti
jb
xchg
iret
int
cmp
fbstp
pop
sub
jnp
sbb
inc
jnp
imul
(bad)
xor
push
popf
pusha
fs
aaa
sub
inc
jns
shl
popa
xchg
or
imul
pusha
push
mov
clc
lods
aas
xor
mov
lods
dec
jne
mov
ins
bound
out
or
and
imul
add
(bad)
push
pop
mov
gs
jae
adc
add
ins
inc
add
aas
inc
push
sbb
jo
aas
mov
and
inc
inc
dec
addr16
sub
or
inc
add
adc
and
add
inc
cmc
pop
stos
xor
inc
adc
sbb
imul
bound
add
or
scas
pop
test
je
outs
cmps
leave
fisttp
stos
sub
jo
gs
jmp
rol
out
not
add
jmp
popa
jno
cmp
ins
fs
and
sub
test
fwait
cmp
dec
gs
and
push
sbb
ins
cmp
jg
push
push
jns
sbb
pusha
mov
and
int
popa
xor
adc
adc
pop
loop
(bad)
in
and
popa
sbb
sti
out
and
jle
imul
fadd
adc
call
push
pusha
dec
fisttp
jo
sbb
and
mov
push
inc
outs
cmc
or
(bad)
jo
dec
gs
jae
imul
xlat
outs
and
mov
jns
xlat
add
aad
ins
movs
ins
and
mov
arpl
call
push
std
adc
mov
pop
test
out
xor
xor
jb
cmp
lods
pop
mov
xchg
fcom
retf
adc
pushf
jge
cmp
ds
outs
add
add
push
dec
outs
jbe
imul
mov
pop
xor
xor
outs
mov
loopne
sub
pop
dec
cmovle
push
ins
jo
push
jae
cmp
dec
push
ja
inc
add
mov
dec
jp
cs
dec
add
push
or
out
pop
xor
push
sub
outs
mov
pop
adc
sbb
pop
push
enter
lds
inc
js
inc
mov
pop
cmp
adc
pop
adc
add
mov
rol
(bad)
fmulp
lock
add
sub
jb
ds
mov
xchg
sbb
pop
movzx
lea
sti
add
movs
push
push
add
sub
enter
shr
cld
dec
jae
call
pop
sub
xchg
dec
jmp
adc
lea
clc
push
movzx
les
out
add
cli
aas
sub
and
in
fsub
ret
add
cld
add
leave
mov
push
sub
mov
dec
cmps
xchg
call
pop
push
sbb
jp
inc
lods
loope
(bad)
movs
add
xchg
sbb
jnp
mov
push
(bad)
xlat
jmp
push
pop
cmp
xor
dec
daa
lahf
int3
fisttp
in
loope
shr
cmps
(bad)
test
clc
sub
sub
or
push
out
je
mov
add
mov
lock
mov
mov
mov
sti
pop
ror
cmps
xchg
sbb
adc
sbb
inc
add
loopne
or
xor
aas
add
dec
dec
sub
inc
xor
aas
add
sub
mov
push
push
int3
sbb
mov
call
lea
sti
movs
pusha
pusha
jo
add
pop
aad
call
sbb
mov
mov
ror
jecxz
add
mov
scas
pop
shl
mov
cmc
popf
ret
dec
add
push
xchg
or
add
nop
or
mov
mov
xchg
pop
xchg
aam
jmp
js
into
sbb
sub
fwait
nop
jle
shl
pop
cld
xchg
pop
xchg
add
mov
cmp
mov
sub
mov
(bad)
int3
fs
iret
lods
add
jle
jbe
push
mov
mov
sbb
pop
xchg
jmp
sbb
loopne
cmps
push
mov
jnp
sbb
xchg
test
ss
jmp
shl
outs
aas
jbe
push
mov
jp
icebp
loop
dec
sahf
pop
hlt
jae
stos
inc
sbb
jl
jle
push
cmps
imul
mov
ret
mov
adc
or
sub
xchg
cmps
sbb
and
adc
inc
loop
pop
inc
push
mov
lahf
sbb
rcr
cwde
jbe
dec
ror
add
neg
loopne
scas
in
shr
dec
or
pop
nop
test
cmp
out
(bad)
imul
scas
sbb
adc
or
icebp
daa
pushf
daa
adc
push
or
fimul
loopne
pusha
and
xlat
inc
mov
dec
repnz
and
mov
mov
aaa
xor
cmps
jb
inc
mov
or
mov
out
pop
cmp
or
mov
jmp
add
or
adc
jmp
mov
inc
inc
ret
dec
push
ret
mov
lods
into
jecxz
push
popa
ss
or
adc
scas
in
icebp
loopne
push
ss
pop
je
xor
aaa
sub
jbe
dec
sbb
out
sbb
adc
call
jo
dec
xchg
or
leave
sub
out
int3
aam
jmp
arpl
aaa
xor
add
xchg
hlt
jae
xor
mov
add
jg
test
mov
sub
mov
push
mov
mov
rcl
ret
sub
mov
lea
push
sub
cmp
add
xchg
enter
push
xor
sub
jl
sbb
jp
push
int3
push
jl
sub
jo
pop
xchg
pop
paddd
sbb
or
jp
adc
not
cmp
or
lods
and
lds
in
ss
ror
jle
iret
rcl
xchg
xchg
test
sbb
inc
retf
adc
shl
or
inc
ror
add
mov
out
ss
inc
jo
xchg
sub
int3
mov
in
jmp
arpl
dec
lock
add
or
mov
pop
mov
out
std
out
sub
enter
mov
add
sub
fwait
nop
xchg
pushf
xor
xor
je
test
out
aaa
xchg
shl
mov
jge
cwde
shl
sub
rcl
push
mov
movs
adc
test
jp
add
(bad)
fisttp
push
dec
(bad)
rcl
outs
into
mov
sbb
sub
or
adc
push
jmp
add
sbb
push
adc
dec
sbb
addr16
jae
sub
dec
xor
inc
xor
push
iret
inc
pushfw
inc
bound
push
ficomp
sbb
mov
cmps
push
inc
push
xchg
sbb
and
rcl
aaa
scas
mov
and
push
inc
add
cmp
das
sbb
call
add
cmp
xchg
inc
mov
and
jg
push
dec
sbb
arpl
test
jecxz
into
loop
mov
or
aad
into
and
add
aas
pop
sbb
and
xor
push
adc
push
cs
loope
add
push
add
jbe
ins
mov
or
int3
gs
pusha
int
jnp
sahf
bound
pop
push
movs
push
push
fs
fdiv
sub
jl
pop
mov
inc
mov
inc
inc
int3
in
or
imul
add
aad
add
adc
xor
push
lsl
hlt
or
pop
xchg
jbe
jns
xchg
lock
cmp
call
sahf
(bad)
(bad)
mov
sub
call
pop
rcl
outs
outs
ja
xor
lock
jmp
or
pop
jno
sub
xchg
loopne
ins
outs
xchg
ins
and
sub
mov
loopne
sti
loope
imul
add
cmc
dec
push
jge
(bad)
dec
outs
outs
(bad)
aam
push
dec
sub
loope
icebp
push
(bad)
popa
(bad)
jae
fsubr
or
(bad)
or
pop
pop
adc
adc
jo
push
jg
hlt
ror
sbb
ret
adc
imul
inc
sub
arpl
stos
sbb
ja
or
or
fsubr
fs
and
je
daa
sbb
inc
adc
inc
shl
mov
or
imul
or
xor
aad
cs
push
repnz
add
ja
jg
push
rol
outs
or
cmc
mov
aam
test
and
pop
dec
call
in
jmp
xlat
dec
outs
shl
test
aam
loope
mov
mov
mov
test
jmp
dec
push
shl
neg
(bad)
cs
push
loopne
sub
mov
dec
cs
mov
mov
mov
clc
push
sahf
push
out
or
aam
nop
pusha
(bad)
sub
push
adc
jns
pushf
(bad)
sub
or
mov
jno
out
mov
sahf
neg
(bad)
xor
push
sub
jnp
scas
jo
ds
dec
idiv
imul
inc
pusha
sbb
pushf
xlat
loope
cmp
add
ss
mov
cmovle
pop
scas
mov
jge
prefetch
or
unpckhps
movhps
movhps
pslld
aas
mov
cmp
loop
wrmsr
add
in
sbb
add
push
inc
nop
add
add
or
xor
imul
std
movups
cmp
dec
pop
xchg
loopne
lock
daa
sub
dec
cli
push
push
add
(bad)
cli
rsm
ds
mov
push
comiss
inc
loopne
out
sysret
push
mov
jmp
inc
(bad)
add
mov
frstor
add
clts
inc
arpl
mov
dec
add
arpl
cmp
inc
add
add
dec
xchg
push
and
xor
pop
out
enter
sub
mov
adc
mov
sub
cmp
push
or
js
cmp
and
xchg
ja
sbb
popf
add
mov
inc
or
adc
sbb
cmp
xor
sub
adc
mov
add
and
sbb
xchg
or
jno
pop
pop
lea
mov
jnp
xor
dec
clc
mov
stos
add
mov
lea
lea
fsub
pusha
add
mov
or
or
push
jmp
pop
pusha
pop
stos
or
pop
mov
sub
dec
adc
cmp
loopne
adc
push
imul
cmp
pusha
mov
cmc
loop
adc
stos
lock
inc
fwait
dec
cwde
stos
sbb
dec
mov
loop
cmc
inc
jb
mov
imul
add
mov
cmc
mov
cmc
mov
pushf
ror
sub
xchg
fmul
xor
loopne
add
ins
or
jmp
sbb
fld
lock
push
and
inc
jno
loop
sbb
popa
push
lahf
pop
inc
outs
icebp
iret
mov
or
mov
inc
push
jno
mov
stos
pop
daa
mov
stos
sbb
shr
dec
test
sbb
stc
or
xor
mov
outs
mov
aad
pop
or
add
or
imul
dec
push
test
ja
or
(bad)
mov
test
pand
sub
fild
fs
test
add
add
or
pop
popa
aaa
or
adc
and
xchg
loopne
pop
loop
and
pusha
add
inc
add
or
sbb
dec
sub
dec
dec
in
push
test
ins
aaa
jmp
rol
sti
add
jge
arpl
add
popa
jb
fstp
lods
add
jne
shr
ins
js
jae
jbe
or
dec
out
adc
add
jae
pop
dec
add
lock
imul
pusha
adc
mov
pusha
xor
sub
push
jae
or
or
call
xlat
push
test
mov
or
jge
rol
adc
dec
jo
or
jmp
aad
test
sbb
cmp
bound
adc
sub
adc
adc
jb
cmp
mov
test
movs
adc
add
pusha
add
cmp
mov
rol
int3
scas
add
and
jmp
and
add
mov
es
adc
and
int
clc
and
sahf
add
mov
int
popa
add
add
and
add
femms
mov
xor
pop
or
sbb
adc
xlat
mov
and
push
outs
cdq
rcr
push
jmp
sub
or
das
and
inc
dec
loopne
jo
test
inc
xor
push
pop
repnz
enter
pop
aam
mov
jl
mov
push
addr16
into
add
mov
test
pop
jg
push
dec
xor
or
(bad)
ja
jge
and
ret
pop
mov
pop
xlat
mov
adc
push
dec
push
ror
loopne
sbb
pop
mov
inc
outs
rol
jp
inc
push
ret
add
mov
push
int
ss
jp
ret
inc
lea
xor
push
leave
aas
pop
adc
hlt
adc
cmp
dec
adc
and
or
loopne
push
pop
jne
ja
test
test
test
mov
add
mov
add
add
pop
sbb
in
mov
push
xor
xlat
scas
sbb
cmp
adc
push
push
ja
mov
adc
pop
call
add
inc
or
pusha
cmp
aam
sub
cmp
inc
hlt
js
test
xchg
jo
sbb
add
push
add
in
xchg
sbb
push
out
(bad)
mov
or
add
shl
sbb
inc
push
lahf
shl
outs
sbb
or
xchg
lock
and
popa
sub
jle
push
mov
sub
ret
les
pop
xor
mov
adc
inc
xor
or
and
push
lea
mov
aaa
or
mov
sti
inc
test
idiv
call
adc
lock
ds
push
add
lahf
cmp
sbb
xchg
xor
mov
inc
add
pop
test
fcom
(bad)
mov
retf
pop
inc
dec
rcr
(bad)
xchg
or
jbe
pop
add
adc
mov
retf
ins
cmp
cmp
out
shl
lock
add
movs
test
dec
xchg
lock
adc
data16
xor
lahf
ret
leave
mov
cmp
pusha
cmps
idiv
jmp
xor
not
adc
lea
or
adc
dec
mov
jmp
add
cwde
pusha
xchg
pop
ds
or
jmp
xor
ins
push
push
in
ins
ret
enter
das
xchg
mov
mov
xchg
adc
sahf
cmps
fcomp
sbb
jge
clc
mov
ret
sub
jb
xchg
in
popf
mov
and
mov
inc
fmul
xchg
push
test
mov
add
arpl
adc
mov
sub
sbb
ins
xor
mov
call
icebp
xor
jg
add
(bad)
mov
call
fistp
push
xchg
mov
ins
out
add
sbb
mov
nop
mov
out
aaa
fadd
ret
dec
inc
or
cmp
fidivr
mov
sbb
lea
adc
fcmovnbe
dec
int
pop
cwde
mov
movs
gs
mov
sbb
mov
pop
add
ret
mov
lods
and
enter
clc
or
test
mov
sbb
dec
mov
cmps
loope
adc
cld
into
add
leave
and
mov
cmp
push
jne
int
sub
mov
inc
push
and
adc
cs
add
mov
fistp
loope
xchg
lock
xchg
sbb
in
out
jns
add
sar
jmp
cmp
xlat
push
imul
mov
add
push
test
stc
xchg
sbb
jne
pop
(bad)
mov
stos
in
in
outs
jge
jge
aaa
fcom
and
xchg
inc
and
or
mov
call
cmp
mov
cld
sub
in
mov
mov
pop
sbb
xor
xchg
inc
jmp
cmp
je
push
mov
sbb
mov
jo
xchg
in
mov
imul
shl
cmp
inc
mov
stos
pusha
pop
out
xor
je
pop
lds
ds
lahf
fdivr
jmp
hlt
xlat
or
jbe
sub
mov
mov
ins
sbb
clc
mov
xor
inc
sbb
xchg
jle
jb
not
mov
fsubr
imul
adc
fsub
mov
lods
inc
add
push
dec
mov
mov
in
lock
into
lea
mov
mov
sub
push
aaa
mov
or
ss
add
shl
adc
cmp
or
in
test
inc
add
push
push
dec
push
xor
cmp
lods
shr
icebp
repnz
jne
sar
inc
loope
(bad)
or
in
loopne
(bad)
pop
clc
mov
lock
mov
es
pop
pop
cmp
jbe
jmp
ss
mov
adc
adc
inc
mov
test
jecxz
fadd
pushf
(bad)
xchg
mov
ins
xchg
cmp
fsub
adc
or
mov
es
xor
sbb
cwde
das
les
or
push
cmp
jecxz
jmp
lock
sbb
hlt
loop
arpl
fidiv
cmps
adc
lock
jne
cmp
xchg
and
or
lahf
lds
sub
sbb
icebp
bound
hlt
sahf
push
push
cmp
push
xor
retf
cmp
inc
push
add
lds
and
adc
jne
sub
mov
push
mov
mov
jmp
adc
cmp
sbb
cmp
mov
pop
jmp
push
xchg
or
xor
je
jmp
cmp
cs
fild
dec
cmp
mov
hlt
push
pop
lods
jmp
push
push
not
adc
push
or
jmp
test
jne
lods
lock
sbb
pop
add
dec
movs
jb
inc
push
arpl
mov
shl
imul
push
lea
aaa
call
inc
mov
cwde
mov
add
dec
jne
popa
inc
and
inc
inc
sbb
mov
mov
dec
or
aad
out
cmp
push
divps
in
test
cli
pop
stos
js
add
fistp
add
mov
sbb
adc
js
sbb
fs
add
cs
jo
pop
ds
clc
outs
jg
je
fld
jg
jo
fsub
jmp
sub
sub
or
loope
jmp
out
mov
cmp
dec
rcr
sbb
xor
mov
sub
nop
or
jae
sub
mov
mov
xchg
mov
add
xor
pusha
aas
clc
inc
sbb
test
sbb
inc
cmp
test
mov
xlat
dec
sti
sti
call
add
enter
jo
hlt
inc
pop
lahf
(bad)
mov
push
sub
push
arpl
loope
mov
idiv
or
das
pop
inc
mov
movzx
ds
call
loopne
add
fdiv
test
inc
push
or
fmul
mov
sbb
pop
lea
cmp
cmp
inc
fild
into
dec
clc
add
sbb
dec
shr
add
fwait
mov
cld
in
cmp
es
add
imul
cli
jp
test
test
stc
inc
ja
cmp
out
cwde
xchg
jae
aas
mov
and
push
sub
cmp
add
shr
in
adc
xlat
add
mov
(bad)
daa
dec
mov
iret
ret
adc
sbb
pop
and
movs
sub
mov
iret
fsub
sub
iret
adc
sbb
jp
adc
push
jmp
(bad)
push
stos
dec
icebp
mov
shl
lds
fst
jb
fmul
jb
inc
cmc
(bad)
cld
inc
xor
add
jne
and
push
jns
div
sbb
call
sub
ror
das
sbb
push
das
mov
pop
sub
and
cs
fsubr
ret
lock
adc
cmp
outs
sbb
jns
adc
dec
sti
adc
cmp
test
cmps
sbb
mov
and
cmc
adc
hlt
jmp
jb
add
hlt
sub
or
xor
push
push
lea
jmp
add
pushf
adc
ja
shl
mov
(bad)
xchg
clc
je
mov
lea
ror
loop
inc
je
sbb
push
imul
adc
jl
test
mov
dec
shl
mov
scas
mov
loop
(bad)
dec
call
lea
and
xchg
or
jbe
dec
call
cmp
imul
inc
test
in
push
or
ret
pop
or
adc
js
pop
jbe
and
pop
das
mov
das
and
movs
mov
cwde
pop
ds
push
jp
jl
dec
mov
push
cmp
stc
pop
push
cwde
dec
jl
outs
push
jno
inc
out
inc
stc
popa
data16
out
xchg
and
sub
mov
fadd
(bad)
cmp
hlt
add
lahf
int3
mov
xor
inc
arpl
stos
loop
neg
or
fld
sar
fs
and
sbb
jb
push
mov
imul
shl
jns
mov
pop
or
aas
inc
(bad)
fstp
add
dec
and
bound
push
or
call
bound
call
in
cdq
in
in
sbb
and
sti
mov
repz
inc
dec
dec
ins
shl
cmp
fwait
and
es
fwait
inc
ss
lds
hlt
aas
sbb
or
loopne
lock
push
pusha
sahf
cmp
ja
mov
jl
aad
ret
jbe
mov
add
aam
jmp
hlt
hlt
fmul
pusha
xor
cmp
test
out
mov
or
add
cmp
push
and
jp
xor
inc
into
pop
jg
std
dec
test
jl
inc
scas
adc
cmp
jne
pop
jmp
ins
(bad)
push
or
push
xchg
stos
xor
ss
mov
mov
mov
sub
add
dec
jne
and
mov
ficomp
(bad)
sub
add
sbb
repnz
cwde
and
sti
stc
test
fsub
mov
mov
jl
int
in
or
sub
in
xor
aas
(bad)
mov
mov
push
test
loopne
daa
cdq
icebp
jmp
mov
dec
fcom
aaa
sub
lea
add
push
adc
jl
inc
pop
jne
aam
push
inc
into
lea
call
gs
add
push
push
seta
push
add
test
data16
(bad)
shr
jo
or
shr
mov
(bad)
mov
inc
mov
jnp
imul
add
call
mul
cmp
sbb
or
sbb
lahf
rol
cs
retf
dec
outs
add
sbb
sbb
push
push
mov
xor
ret
mov
mov
mov
stc
test
push
inc
sbb
shl
les
iret
pop
loopne
call
push
mov
xor
and
push
xor
lock
je
addr16
add
in
imul
add
and
mov
or
mov
xchg
and
xchg
inc
popa
rcl
out
push
pop
xor
gs
jno
rcr
lea
mov
cmp
and
cmp
pop
in
jmp
and
and
cmps
xchg
sahf
jmp
mov
icebp
add
mov
push
push
push
mov
pushf
xor
mov
push
push
nop
ss
or
jecxz
test
adc
push
inc
das
sub
mov
sbb
jmp
aas
ss
mov
sbb
pop
push
jo
ja
shl
sbb
adc
outs
xchg
mov
mov
fsubr
add
push
sar
daa
loopne
cld
jg
idiv
fnstcw
scas
addr16
dec
ror
in
add
loopne
in
jb
jae
pop
and
jp
sub
and
or
mov
mov
clc
cwde
adc
(bad)
xor
mov
or
sar
(bad)
mov
jo
rcr
jmp
sbb
movs
das
pop
mov
cwde
mov
inc
inc
mov
cmp
sti
inc
pusha
repnz
and
aaa
jmp
shl
inc
iret
mov
push
push
xchg
or
aad
pop
pop
and
cmp
mov
adc
inc
mulps
push
pop
add
std
adc
sub
pop
sbb
pop
xor
movs
push
add
scas
push
add
jb
pop
stos
pop
push
and
sbb
add
push
ds
and
inc
jmp
sbb
mov
ror
cmp
jbe
jno
or
fld
and
in
pop
(bad)
cs
call
dec
push
jl
inc
cmp
jne
ret
add
jge
dec
jne
aad
lods
movntps
ror
mov
call
jp
cmp
outs
out
shl
inc
jmp
push
jo
test
dec
int3
ins
pop
dec
add
mov
xor
scas
inc
(bad)
out
push
push
or
les
adc
enter
push
popa
inc
mov
retf
ins
aaa
fwait
shr
sahf
fdivr
das
pop
aas
pop
jmp
mov
(bad)
movs
or
inc
loop
push
or
push
das
sbb
mov
add
jecxz
(bad)
pop
call
ret
sub
aam
icebp
sub
and
sbb
xchg
jb
and
aam
add
repnz
hlt
mov
ror
jmp
add
push
into
sti
adc
pop
adc
cmps
cmp
ret
inc
sub
or
in
pop
mov
xor
loopne
adc
mov
push
adc
call
inc
add
test
add
xor
xchg
xor
les
cld
add
cmps
dec
add
aaa
xor
inc
jo
lahf
add
add
cmp
push
pop
cmp
shr
jl
dec
adc
cmp
xchg
xor
and
push
cmp
and
push
fcom
cmp
test
mov
add
and
dec
clc
xor
and
ss
sbb
xchg
cmp
inc
push
loopne
mov
mov
out
aas
push
mov
or
push
pop
mov
sbb
add
sbb
mov
mov
push
mov
sbb
sub
sar
les
dec
and
push
ror
mov
and
in
hlt
rcr
push
int3
js
add
mov
xchg
mov
mov
or
ss
fs
fiadd
push
ret
and
lea
mov
sbb
push
mov
mov
inc
data16
jb
adc
nop
lods
sbb
scas
inc
adc
enter
push
sbb
sti
xchg
test
(bad)
push
ss
sub
je
and
adc
shr
pop
aaa
jmp
inc
out
adc
pop
inc
xchg
add
(bad)
push
movs
push
daa
xor
(bad)
pop
rcr
and
mov
neg
mov
lock
aam
movs
imul
add
add
mov
xor
sbb
lods
cmp
and
adc
inc
mov
cmp
dec
pop
adc
cmp
std
(bad)
rcr
mov
jp
out
in
retf
mov
mov
call
mov
mov
pop
inc
pop
sti
jb
ins
in
adc
hlt
(bad)
pop
push
pop
mov
cld
mov
lock
inc
fild
nop
adc
(bad)
das
push
mov
mov
cmp
push
jae
fist
mov
cmp
adc
cmc
(bad)
setne
add
sub
inc
or
mov
add
enter
or
add
xchg
les
push
or
ins
or
mov
test
lds
dec
clc
add
or
xchg
push
mov
xchg
aaa
stos
push
cmp
add
retf
add
sub
fistp
xor
mov
cdq
jne
ins
sbb
dec
sub
ret
add
mov
stos
mov
add
bnd
out
or
call
or
inc
(bad)
(bad)
movs
or
adc
pop
add
inc
loopne
enter
xor
js
pop
or
pop
lock
push
or
push
mov
loop
pop
mov
xchg
push
mov
adc
mov
out
add
hlt
icebp
shr
sbb
mov
dec
dec
jp
pusha
xor
add
pusha
jb
add
ja
outs
clc
push
jo
mov
pushf
push
neg
icebp
aam
retf
js
int3
push
adc
add
jnp
call
inc
xor
ja
fstp
scas
jge
ins
ds
outs
sbb
(bad)
call
or
pushf
adc
adc
inc
dec
popa
jae
inc
jb
jg
call
xor
add
push
out
jmp
inc
dec
fs
outs
arpl
cmp
jb
popa
je
and
fcomp
add
or
or
dec
add
gs
fisubr
add
sbb
push
push
sbb
addr16
xor
call
retf
inc
add
enter
cs
xor
add
jae
imul
xor
or
test
add
mov
mov
mov
pop
pop
hlt
jmp
add
pop
and
adc
jl
xchg
add
dec
sbb
or
bound
mov
dec
push
dec
pop
sub
gs
adc
imul
jo
and
shl
les
mov
push
jnp
jne
xor
sbb
push
push
or
ja
or
xchg
jecxz
test
pop
xlat
iret
inc
push
xor
add
in
push
shl
repz
stos
push
sub
add
pusha
in
sbb
push
push
jnp
mov
movs
psubusb
or
cmp
or
jne
arpl
outs
int
ficomp
mov
add
sub
dec
out
fsubr
mov
arpl
xor
fmul
fcom
and
inc
gs
xor
mov
ret
(bad)
dec
lods
cmp
ins
jne
mov
and
add
push
push
dec
ds
sbb
sbb
or
sbb
outs
outs
and
pop
cwde
xor
stos
rol
stos
or
ret
jne
adc
stos
sbb
test
pop
pop
add
xchg
xchg
xchg
fldcw
lea
xchg
jmp
inc
or
fs
mov
inc
inc
mov
sahf
sbb
or
mov
cmp
or
inc
push
inc
dec
(bad)
dec
int3
pop
xor
inc
inc
jno
(bad)
inc
sub
mov
push
cmp
lds
retf
(bad)
nop
and
sbb
loopne
pop
inc
or
ret
in
add
jl
jns
mov
cmps
push
dec
push
mov
jbe
sbb
inc
mov
rol
aaa
add
adc
mov
inc
dec
retf
shr
dec
cmp
push
dec
mov
inc
sti
inc
add
retf
(bad)
pop
std
sbb
or
push
out
jae
lock
or
pop
add
push
hlt
cs
outs
push
dec
loop
das
push
pop
fsubrp
into
ins
loopne
or
je
call
mov
imul
loope
adc
aam
fucom
rcl
jb
jns
mov
mov
jbe
outs
js
fs
js
xchg
add
cs
dec
out
pop
call
outs
fs
gs
addr16
fsubr
push
fimul
stos
mov
outs
inc
jle
dec
jo
mov
xchg
imul
sub
test
stos
mov
ins
outs
jbe
enter
popa
int3
imul
dec
push
pusha
pop
popa
push
xchg
loopne
outs
jae
pop
jae
out
and
pop
lds
(bad)
and
sbb
arpl
dec
adc
dec
addr16
sub
mov
inc
enter
and
clc
or
jb
dec
daa
sbb
inc
inc
js
loope
stos
mov
or
imul
lock
inc
loopne
retf
lods
and
movs
sbb
outs
ja
ja
and
ja
jg
pop
sub
or
push
lea
pop
test
jo
mov
push
mov
add
push
inc
stos
jo
or
add
push
or
ins
add
js
shl
mov
pop
ins
daa
sub
je
push
nop
add
lds
push
pop
mov
sahf
push
shr
loopne
(bad)
and
inc
enter
pop
test
imul
shl
mov
test
repz
push
daa
sub
je
in
repnz
es
or
out
adc
cmp
dec
xchg
xor
inc
fs
cmc
and
jnp
popa
ins
dec
arpl
add
push
or
or
ret
sbb
stc
or
jecxz
femms
or
daa
pop
sbb
outs
pop
stc
ret
test
pop
mov
bound
mov
and
in
lea
mov
push
mov
inc
fistp
cmp
in
mov
sub
push
jb
xchg
das
adc
inc
fcomp
cmps
adc
mov
ret
jne
dec
dec
dec
popa
jae
adc
add
call
dec
jge
xor
add
test
test
and
add
mov
cmp
add
arpl
push
xor
iret
fsubr
ss
popa
add
pop
cld
das
or
inc
sub
fbstp
sub
and
xor
in
push
aad
sbb
xor
xor
sbb
scas
and
rol
push
push
and
int
sub
push
push
(bad)
pop
xchg
sbb
push
adc
cwde
push
push
repz
jbe
mov
jl
add
mov
xor
(bad)
jo
les
xchg
push
inc
(bad)
movups
or
or
imul
sub
in
ss
shl
sahf
dec
data16
inc
test
bound
jl
mov
mov
mov
adc
push
ret
test
and
adc
or
or
in
jne
sbb
pop
movs
push
mov
pop
mov
dec
push
scas
std
jnp
dec
inc
lock
add
ins
pusha
push
add
lock
push
push
xchg
test
mov
mov
mov
xor
in
loopne
jbe
xor
inc
test
add
mov
pop
repnz
test
stos
inc
clc
test
pop
clc
lods
pop
push
(bad)
mov
cdq
inc
dec
jbe
jecxz
sbb
cmc
leave
push
or
xchg
movd
push
dec
mov
lea
test
div
repz
add
dec
sti
mov
lahf
jecxz
ret
push
ds
pop
inc
mov
scas
xadd
clc
sub
prefetchw
outs
aaa
imul
and
add
movups
mov
mov
dec
adc
xchg
fld
fisttp
mov
adc
in
add
push
pop
adc
int
adc
dec
jne
push
add
inc
push
dec
sbb
pop
sbb
aas
nop
bndldx
mov
or
pop
sbb
push
wrmsr
mov
xchg
(bad)
adc
push
push
push
mov
addr16
jg
and
fidivr
es
movd
addr16
ds
cmp
mov
add
xchg
and
fnstcw
daa
add
jg
push
push
mov
add
cmps
aaa
push
add
push
mov
arpl
mov
outs
mov
add
ret
push
mov
fisttp
push
mov
add
cwde
sbb
movs
and
add
or
out
pop
cmps
cmp
gs
ss
cmc
add
imul
out
sub
enter
sub
outs
leave
pop
sbb
adc
and
add
cmc
and
xchg
jno
cld
mov
dec
cmp
inc
pop
add
add
arpl
dec
adc
jnp
sbb
(bad)
ins
jnp
movs
adc
sbb
add
(bad)
arpl
leave
mov
add
popa
jb
rcr
mov
pusha
dec
outs
arpl
popa
scas
setp
sub
fs
dec
mov
ucomiss
or
push
gs
adc
fdiv
popa
ins
or
mov
ins
pop
xlat
or
xchg
or
pop
fild
mov
dec
outs
push
inc
jns
mov
pop
xlat
or
push
sbb
mul
inc
jno
out
dec
inc
add
mov
and
mov
adc
jecxz
rol
popa
ins
inc
or
jne
jns
mov
sub
int
push
movs
jns
shr
jg
int
in
add
sub
push
pop
or
pop
pop
fdivr
xor
aam
or
or
or
jno
add
and
dec
out
pop
cwde
push
mov
icebp
movs
stos
push
jmp
jg
sbb
gs
push
push
push
mov
fstp
push
shl
sbb
adc
dec
std
(bad)
jae
jbe
jb
outs
jae
jmp
add
lea
xor
add
mov
xchg
jne
mul
jne
mov
fadd
fiadd
sbb
push
xor
adc
adc
popa
cmp
dec
mov
pop
mov
fisubr
ds
cs
sbb
test
inc
add
ja
cmp
ficom
sbb
push
push
jns
imul
mov
outs
ins
and
cmp
push
popa
pop
jbe
jbe
mov
xor
xchg
or
add
jb
jg
push
inc
push
jg
mov
push
and
push
push
jg
std
adc
jmp
push
sbb
stos
add
test
test
dec
mov
adc
and
in
in
(bad)
push
and
add
out
cmp
cmp
xchg
add
add
push
pusha
sti
fwait
nop
cmp
arpl
mov
idiv
adc
pop
push
inc
jne
data16
fcom
mov
xchg
pushaw
inc
mov
add
sbb
ins
es
and
imul
lock
push
pop
inc
pop
and
je
inc
inc
adc
mov
setno
add
pop
sbb
xor
sbb
and
adc
add
push
add
adc
nop
xor
das
mov
and
or
lea
fild
test
mov
add
or
push
rcl
gs
jle
inc
add
dec
jae
outs
adc
xor
pop
add
arpl
inc
pusha
add
sub
jae
and
push
mov
call
dec
adc
adc
gs
xchg
adc
pusha
xchg
xor
xchg
pop
and
icebp
js
dec
push
clc
inc
outs
popa
bound
push
add
push
and
add
stos
mov
imul
and
adc
add
mov
xchg
inc
stos
add
mov
sub
jo
mov
stos
mov
add
gs
bound
imul
adc
cs
ja
jno
cmp
and
and
in
(bad)
jg
pushf
std
ficomp
or
inc
arpl
xchg
and
loopne
mov
lock
xor
out
popa
je
jne
cmp
shr
ja
add
add
dec
xor
pop
dec
xchg
xor
mov
lahf
or
es
add
sbb
adc
test
ror
jle
push
dec
or
loopne
xchg
aaa
repnz
xor
sub
pop
fs
cs
add
loope
add
or
aam
call
mov
mov
add
or
retf
sbb
pusha
loopne
pop
push
mov
push
mov
mov
rol
add
loop
adc
mov
mov
push
mov
adc
int
sub
inc
sbb
jg
mov
add
ret
nop
scas
add
test
je
or
(bad)
cmp
mov
rcr
addr16
add
fist
push
push
mov
mov
xor
shr
maxps
fs
xchg
jl
jle
(bad)
add
mov
outs
out
add
xchg
sbb
cmp
lea
aas
fstp
sbb
adc
cmp
cmp
pop
adc
push
fwait
mov
jle
loopne
popa
lahf
sbb
mov
cmps
aas
mov
mov
mov
aam
mov
push
hlt
mov
call
push
push
add
add
adc
hlt
mov
sbb
dec
or
sbb
xor
stos
cmp
mov
push
sbb
ror
loopne
xor
shl
loopne
cwde
cmp
mov
push
les
pusha
sar
ret
xchg
mov
push
or
retf
sbb
xchg
enter
xchg
fisubr
push
or
sbb
mov
xor
cmps
dec
xchg
iret
jno
aad
shr
jbe
test
(bad)
das
adc
pop
js
adc
jnp
(bad)
outs
in
inc
push
xor
lea
mov
lds
outs
pop
les
clc
mov
jae
fwait
mov
jnp
pop
pop
xor
adc
stos
xor
sub
ret
jmp
js
shr
imul
mov
out
push
push
push
mov
jle
sbb
push
or
pop
das
in
add
mov
mov
repnz
pop
lods
into
fdiv
pusha
and
push
imul
scas
push
xchg
dec
push
fcomp
mov
sbb
(bad)
dec
ret
loope
imul
into
xor
jl
inc
pop
in
(bad)
out
sbb
inc
push
add
les
imul
std
fcmovu
xor
push
cmp
pusha
dec
jne
sub
(bad)
sbb
ret
loop
adc
cmp
mov
and
pusha
xchg
test
and
dec
inc
pop
pop
add
scas
enter
adc
scas
inc
in
sub
or
and
nop
or
sub
loopne
in
jnp
push
add
js
sub
pop
jo
in
and
mov
mov
jbe
inc
sbb
int3
push
mov
call
pusha
in
adc
div
cmp
or
jle
dec
jb
std
add
jne
pop
call
in
mov
fs
in
cmp
loopne
loopne
in
leave
gs
clc
sub
stos
xor
pop
pushf
out
shl
cmps
jecxz
dec
test
mov
add
adc
outs
push
lahf
addr16
mov
das
rol
sub
jb
inc
cld
je
jmp
mov
cmp
rcl
sti
or
inc
mov
pop
fnstsw
add
sbb
and
mov
aaa
aas
int
ret
adc
ja
shr
rcl
cmp
add
dec
cmp
adc
adc
or
dec
add
idiv
push
dec
adc
push
aas
pusha
fcmovnb
pop
xor
xor
aaa
mov
add
pop
iret
shl
call
mov
cmp
add
dec
mov
jb
push
pop
mov
or
and
shr
push
add
cmps
mov
fcomp
test
clc
es
shl
sbb
enter
retf
fiadd
inc
in
push
inc
hlt
mov
xor
sbb
inc
call
out
or
pop
ja
add
(bad)
cmp
in
jno
jp
hlt
mov
mov
xchg
mov
(bad)
addr16
inc
inc
jecxz
shr
paddd
jo
outs
jne
xchg
pusha
inc
fcomi
mov
call
in
cmp
jg
in
mov
cmp
dec
xlat
out
mov
ins
jmp
(bad)
in
in
ss
loop
fs
and
scas
xchg
mov
inc
not
push
sub
add
sti
not
xor
(bad)
sti
sub
ss
adc
lea
jmp
call
jge
(bad)
dec
lock
arpl
enter
jb
inc
sub
dec
sahf
lock
pusha
jae
or
mov
in
push
shl
mov
mov
aam
clc
add
clc
dec
sar
(bad)
jmp
ins
inc
mov
push
aad
pop
daa
push
add
push
jl
pop
mov
mov
dec
pop
mov
les
(bad)
sahf
out
cmp
cli
or
push
xor
out
inc
push
data16
out
sahf
out
scas
rcl
jns
neg
push
sub
push
out
sahf
out
outs
jge
fwait
mov
jns
stos
mov
popa
jmp
shl
jo
dec
adc
imul
jb
push
or
jno
xchg
inc
and
jne
cmp
dec
mov
mov
mov
test
sub
sbb
push
shr
(bad)
jbe
imul
and
mov
push
fdiv
mov
mov
sbb
neg
loopne
(bad)
sbb
pop
jmp
pop
cmp
add
or
dec
xchg
mov
jmp
sbb
xor
pop
ja
sub
sbb
add
jg
push
lea
xchg
push
cwde
inc
pop
push
lock
std
fadd
inc
loopne
test
ins
pop
in
call
push
pop
retf
test
add
inc
mov
ds
sub
push
mov
fmul
lea
nop
mov
dec
add
sub
inc
and
add
mov
or
inc
xor
push
idiv
and
jno
call
cmps
xchg
outs
pop
push
mov
retf
dec
and
ds
mov
jno
jl
sbb
and
push
cmp
inc
loopne
in
out
adc
ret
fst
gs
outs
mov
xchg
xchg
les
lock
pop
add
sbb
div
and
jb
sub
sub
or
fadd
je
mov
shl
sbb
cmp
add
add
pop
cmc
in
push
loopne
inc
fdiv
add
and
aaa
jmp
fisub
loop
or
call
add
adc
sub
add
das
(bad)
outs
lock
xor
aam
mov
add
ins
in
add
je
cmp
loope
inc
hlt
loope
inc
push
or
add
inc
call
cmp
in
xchg
ret
pushf
jae
daa
cmp
push
not
daa
inc
test
neg
das
or
or
jno
adc
adc
lock
jl
mov
push
aas
inc
mov
xchg
into
add
cmp
test
jae
ds
mov
add
or
jnp
outs
addr16
inc
outs
outs
jnp
jbe
outs
arpl
sbb
movhps
arpl
addr16
mov
gs
push
data16
lahf
outs
jge
xlat
dec
or
mov
adc
push
pop
(bad)
push
ins
jo
outs
jnp
sbb
stos
retf
inc
jbe
inc
add
or
inc
mov
push
add
inc
arpl
popa
or
pop
imul
jae
jb
pop
lods
jbe
mov
cmps
add
xor
sub
adc
outs
mov
clc
lock
outs
push
adc
ins
xor
or
cs
ja
mov
pop
add
or
add
add
pop
push
inc
or
ja
gs
sub
mov
cmp
or
dec
popa
js
pop
rcr
cmc
data16
and
lods
rcl
ja
inc
inc
es
or
add
cmp
xor
or
push
jo
inc
and
mov
pop
add
push
scas
in
imul
push
movs
es
scas
das
stc
fidivr
push
push
pushf
sub
add
js
int3
push
and
cmps
stc
mov
cmp
loopne
inc
xor
mov
imul
lock
fs
imul
push
mov
push
nop
hlt
mov
adc
mov
shr
out
mov
into
push
ds
fdiv
push
or
adc
je
out
loope
std
xor
inc
dec
outs
lea
fs
sub
faddp
xor
mov
and
sahf
out
dec
sbb
lock
or
mov
mov
pop
fld
into
outs
lods
pop
nop
nop
sub
or
adc
popa
jb
arpl
bound
adc
lods
push
dec
or
xlat
mov
pop
adc
sbb
sbb
stos
inc
or
xor
and
push
pop
xchg
push
push
jecxz
pushf
vpacksswb
sub
add
jle
or
daa
mov
push
shr
outs
jns
add
nop
jae
inc
outs
fld
icebp
add
inc
add
std
pop
inc
(bad)
pop
dec
xchg
lods
pusha
cwde
arpl
xchg
xchg
pop
pshufw
(bad)
fistp
mov
mov
inc
push
and
in
pusha
retf
add
mov
mov
(bad)
inc
inc
call
push
or
fild
outs
sbb
fimul
ror
fcomp
popf
mov
pusha
test
jle
pop
add
pop
mov
pop
mov
dec
and
sbb
push
pop
sar
(bad)
push
lds
pop
movs
push
cmp
pop
clc
adc
cmp
xor
hlt
mov
movs
fisttp
test
test
clc
leave
and
inc
mov
mov
mov
call
jmp
push
ins
es
mov
dec
mov
mov
dec
ror
lock
mov
pop
std
adc
sbb
dec
cli
sbb
push
dec
sar
jg
cwde
inc
jmp
fcmove
lea
inc
cmp
aaa
mov
mov
daa
sti
mov
or
ins
(bad)
xor
add
outs
inc
sub
les
add
retf
test
fdivr
push
pop
call
test
ror
sub
loopne
jmp
mov
lea
fdiv
jo
jle
dec
or
inc
icebp
pusha
adc
mov
mov
mov
push
pusha
mov
adc
mov
xchg
inc
dec
mov
ret
mov
push
or
out
mov
cs
sahf
retf
cmp
mov
adc
(bad)
rcl
dec
in
(bad)
loop
ret
sahf
inc
clc
in
ret
push
cmp
adc
pop
or
cmp
adc
push
push
div
mov
repnz
jno
sub
lock
in
sar
mov
(bad)
pop
not
enter
neg
inc
jl
sbb
sub
(bad)
cmp
das
xor
push
add
add
hlt
ror
adc
and
sub
mov
add
pop
cmp
test
out
jmp
sub
pop
test
and
and
jmp
jle
mov
outs
pop
add
divps
test
adc
and
mov
ins
ds
cmp
adc
outs
add
adc
inc
ins
mov
loop
jb
mov
pop
(bad)
ins
adc
xor
retf
jns
cmp
int3
and
inc
js
gs
outs
cmp
popf
outs
adc
sysexit
or
es
bndldx
out
ror
inc
ins
outs
jae
push
outs
arpl
xlat
sub
or
sub
or
bswap
(bad)
loopne
or
cmp
mov
imul
pop
sub
pop
add
jo
mov
addr16
jl
and
adc
push
cmp
lock
dec
imul
je
das
pop
mov
ret
(bad)
pop
test
xor
inc
mov
cmp
orps
and
popa
imul
inc
je
ins
and
stos
add
pop
dec
arpl
sbb
dec
add
mov
add
pushf
pusha
jno
imul
xor
pop
sub
and
int3
addr16
mov
fisub
adc
xlat
add
sub
nop
pop
cmp
add
xchg
addr16
cmp
sub
inc
xor
xor
mov
(bad)
mov
push
into
in
dec
rsqrtps
sysenter
cwde
test
sbb
push
lods
jae
(bad)
jns
gs
outs
je
jne
jo
out
cmp
inc
test
(bad)
jbe
nop
push
or
xor
add
sbb
jg
dec
dec
dec
popa
outs
fs
gs
into
jo
outs
jbe
ins
imul
pop
cmp
push
mov
xchg
pop
push
pmaxub
rol
inc
popa
je
push
outs
rcl
add
sub
nop
pop
cmp
add
xchg
addr16
imul
xor
adc
pusha
adc
and
push
addr16
pop
pop
inc
adc
outs
cmovbe
push
mov
mov
xor
iret
sub
mov
or
add
mov
enter
sbb
pop
jge
push
push
dec
je
outs
arpl
push
jo
jns
mov
neg
mov
addr16
pop
mov
movsx
push
dec
mov
nop
pop
pop
sub
add
fs
setno
xor
(bad)
push
mov
inc
sbb
xor
int
das
xor
sub
shl
add
into
in
sub
xor
push
shl
fnstenv
(bad)
outs
je
stos
fistp
inc
js
inc
sbb
inc
imul
rol
xchg
fsub
in
adc
pop
clc
das
inc
or
stos
mov
iret
pop
and
adc
mov
pop
test
scas
pop
or
pop
cmp
jb
inc
popa
int
scas
add
fbstp
xor
xor
mov
pop
pop
ret
push
into
outs
jg
or
add
jbe
push
inc
mov
out
ja
push
mov
inc
sbb
pop
xor
cmp
sbb
aam
mov
add
out
pop
inc
and
stos
xor
hlt
xchg
adc
clts
xchg
loop
rol
push
outs
imul
push
add
jge
fild
xor
add
add
mov
in
mov
jb
popa
leave
push
cmp
mov
sub
test
dec
add
jl
xchg
lods
add
mov
mov
test
inc
jne
push
test
inc
outs
xchg
out
cmp
inc
mov
outs
adc
inc
mov
daa
and
loopne
clc
or
pusha
add
cmp
int3
daa
sub
adc
clc
outs
sub
pop
add
and
add
or
ins
stos
mov
push
or
(bad)
mov
sbb
xor
les
mov
pop
ror
(bad)
xchg
fisub
and
push
push
add
imul
and
inc
inc
test
and
dec
fsubr
inc
enter
mov
and
and
or
call
sbb
bound
test
push
gs
ins
leave
add
jbe
test
js
jle
test
xor
and
outs
mov
pop
push
jo
shl
dec
retf
fild
pop
push
cvtps2pd
and
xor
aas
inc
imul
add
and
jae
loopne
cmp
pop
xor
ss
mov
push
dec
and
mov
out
mov
inc
push
push
ins
jnp
sbb
hlt
lahf
sub
pop
cmovo
or
push
lahf
push
aad
and
or
push
pusha
adc
dec
cdq
mov
ja
hlt
pop
int3
xadd
jo
xchg
inc
fs
rol
add
xchg
frstor
in
mov
mov
sar
sbb
inc
popa
or
sbb
xor
and
xor
xchg
cmp
inc
outs
mov
mov
adc
add
sbb
add
cmp
or
add
inc
mov
push
xor
cs
dec
aas
ror
add
jbe
xor
cmp
mov
jae
outs
ds
xor
or
or
cmps
(bad)
xchg
push
adc
dec
push
dec
and
data16
push
cmps
jbe
pusha
dec
xor
or
mov
and
push
xchg
gs
mov
fstp
outs
pusha
or
jne
xchg
push
addr16
(bad)
push
adc
aaa
iret
arpl
pusha
retf
mov
jo
das
pop
mov
xor
(bad)
xor
push
add
inc
or
pop
push
out
imul
bound
popa
jp
and
scas
push
or
and
addr16
mov
pusha
xlat
cmp
data16
adc
xchg
dec
or
imul
ficom
cmps
cmp
mov
aas
or
stos
mov
or
clc
and
pop
push
outs
add
ror
push
or
xor
add
test
or
data16
mov
paddusw
adc
xchg
sbb
cmp
inc
pop
imul
push
ja
or
xchg
inc
jp
int3
out
add
add
sbb
lods
or
retf
cmp
push
inc
bound
popa
dec
add
or
ja
push
out
retf
sti
inc
out
(bad)
mov
or
test
inc
add
outs
inc
push
xchg
mov
rol
xor
jo
xchg
nop
mov
mov
pop
xor
popa
fwait
xchg
or
out
mov
add
loop
xor
push
rdpmc
add
jae
dec
sbb
mov
aas
(bad)
cmp
test
pop
daa
mov
movs
xchg
aas
adc
loop
daa
inc
imul
push
ja
cmp
or
dec
(bad)
adc
das
aam
or
dec
pop
or
daa
push
push
dec
add
add
loop
adc
fidivr
ficom
add
iret
(bad)
xor
push
jbe
cmp
pop
das
es
xor
dec
dec
dec
pop
mov
test
add
push
aas
add
ja
jbe
sbb
add
jg
xchg
xor
and
das
sub
or
adc
inc
xchg
and
imul
jnp
xchg
pop
mov
das
aas
mov
mov
push
inc
dec
xchg
pusha
push
fisttp
xor
pop
xchg
(bad)
and
and
jp
test
inc
sub
pop
xlat
push
into
dec
or
adc
adc
push
bound
outs
push
dec
pop
pusha
or
push
outs
xchg
stos
adc
dec
xor
push
rsqrtps
jg
pop
sub
pop
or
das
or
shr
push
nop
iret
ds
fmul
mov
ja
aas
push
bound
(bad)
nop
cmp
pop
adc
mov
addr16
adc
pop
das
and
adc
mov
xor
add
jg
jbe
loopne
aad
jmp
push
(bad)
cmp
pop
mov
dec
add
out
adc
rol
mov
push
data16
xchg
or
inc
aaa
pop
or
adc
jbe
xchg
add
inc
data16
jbe
xchg
add
add
push
xchg
jmp
pop
cli
aas
mov
fcom
sahf
fbstp
inc
mov
and
cmp
das
xchg
call
sti
iret
ss
mov
mov
mov
ins
add
or
bound
add
fistp
pop
lods
or
dec
mov
sbb
ret
mov
jg
inc
sub
xor
ins
adc
add
cs
xor
retf
add
cmp
pop
push
sub
dec
mov
inc
sbb
mov
pop
mov
jle
jae
xor
out
sub
mov
pop
retf
daa
xor
inc
sub
add
addr16
adc
pop
push
inc
mov
out
and
pop
and
pop
or
xchg
xor
(bad)
jnp
pusha
push
or
out
lds
(bad)
test
pop
scas
stos
test
jbe
fiadd
push
or
out
popf
dec
adc
aaa
mov
bound
inc
mov
ret
loopne
aaa
mov
inc
fst
or
and
aas
adc
jae
addr16
xchg
(bad)
push
pop
fsub
pop
(bad)
bound
fistp
popa
cs
pop
aaa
stos
pop
sub
and
aas
shl
inc
push
(bad)
test
idiv
test
push
pop
pop
xchg
mov
dec
pop
push
scas
stos
mov
mov
fcmovnu
jbe
and
xchg
fisub
xchg
mov
adc
push
add
xor
or
aas
add
add
and
aas
xchg
outs
push
or
or
xlat
out
or
xchg
jecxz
and
fisttp
xor
dec
cmp
pop
daa
push
mov
inc
repz
push
and
bound
push
nop
call
add
mov
xchg
or
pop
(bad)
scas
mov
scas
dec
and
pop
add
mov
adc
pop
aaa
push
pushf
nop
sahf
pop
data16
pop
and
add
addr16
add
imul
jnp
fidivr
cwde
retf
outs
jne
add
cmps
add
push
adc
pop
aaa
or
cs
ret
sbb
or
xchg
outs
add
or
and
push
dec
out
(bad)
call
adc
push
xor
or
add
push
xor
ja
push
(bad)
sbb
arpl
dec
jbe
cs
cmp
inc
and
dec
or
cmp
jmp
xchg
lahf
pop
add
cdq
inc
loop
sbb
inc
test
push
add
inc
das
mov
pop
pop
(bad)
xor
fcomp
pop
aas
mov
mov
pop
aaa
pop
not
xor
dec
movs
lods
sbb
dec
jle
mov
dec
popf
pop
pushf
push
or
mov
xor
pop
mov
repz
bound
or
push
loop
inc
or
sub
dec
add
seta
seta
xchg
aaa
addr16
add
or
dec
push
imul
adc
shl
push
out
jg
or
mov
and
mov
add
or
dec
cmp
imul
pop
or
mov
stos
xor
push
add
cmps
push
dec
jo
or
dec
outs
cmp
inc
mov
xchg
cmps
pop
pop
pop
sub
arpl
pop
pop
or
cmp
adc
ja
ja
into
dec
cmp
imul
pop
add
(bad)
adc
xchg
or
addr16
or
dec
addr16
and
add
dec
adc
xchg
add
sbb
push
or
lods
arpl
loopne
push
fbstp
daa
movs
push
mov
jae
mov
xchg
dec
mov
add
push
add
pop
in
ds
das
xchg
outs
retw
stos
xchg
aaa
ret
and
mov
sub
dec
shr
push
mov
mov
dec
out
call
rcl
je
dec
pusha
push
inc
outs
dec
push
aaa
cmp
mov
(bad)
mov
push
dec
not
jbe
dec
(bad)
sub
push
jmp
or
pusha
adc
rcl
or
lahf
inc
(bad)
(bad)
sub
mov
aaa
test
in
test
ss
inc
test
xor
out
xor
pop
pusha
pop
pop
inc
lahf
lahf
aas
push
xor
xchg
aaa
lahf
adc
nop
pop
and
out
and
add
inc
and
xlat
and
sub
dec
fidiv
or
sub
push
push
les
adc
cmp
aas
cmps
mov
xor
into
aas
pop
aas
xchg
and
sub
cmovnp
bswap
test
lahf
adc
dec
adc
push
mov
(bad)
aas
daa
adc
and
out
and
sub
aaa
(bad)
pop
and
pushf
nop
and
xlat
or
add
adc
sub
push
cmp
out
sub
and
aaa
inc
add
and
addps
mov
mov
scas
add
xchg
in
rcr
jp
xchg
or
ja
xchg
ss
mov
jbe
cmp
add
iret
add
dec
adc
inc
outs
inc
and
sbb
mov
add
and
cwde
pop
test
mov
test
scas
push
xchg
add
cmps
push
mov
xchg
or
inc
nop
cmps
pop
adc
aaa
xchg
or
xchg
push
test
movs
out
xchg
inc
(bad)
ins
jo
push
aas
ja
sub
ret
retf
push
ret
mov
outs
fist
sub
xor
inc
pusha
add
adc
ss
gs
cmps
(bad)
repz
shl
mov
inc
jmp
sbb
aaa
lahf
sbb
test
pop
test
pop
or
dec
or
pop
loop
push
dec
shr
les
dec
dec
out
xchg
sub
sbb
and
pop
mov
pop
iret
pop
inc
mov
adc
pop
dec
inc
xor
xor
xlat
adc
mov
ret
xlat
push
adc
add
jmp
adc
sahf
jecxz
inc
iret
dec
sub
movs
pandn
jae
dec
aas
aas
cmps
mov
lahf
dec
jg
inc
push
scas
pop
out
xor
xlat
data16
push
push
and
out
pop
shl
add
or
les
dec
pop
inc
adc
inc
inc
test
call
adc
out
pop
push
cwde
out
out
and
(bad)
dec
push
into
push
dec
push
sub
out
pop
inc
sbb
bound
enter
repnz
data16
sahf
xor
mov
ja
inc
sub
cmps
sub
sbb
addr16
jns
push
nop
sub
xchg
jo
test
inc
add
or
(bad)
ret
(bad)
retf
inc
mov
daa
(bad)
dec
or
mov
call
ins
push
(bad)
out
push
ret
inc
mov
mov
xlat
(bad)
push
xchg
push
sub
test
inc
push
pop
or
dec
push
add
out
xchg
adc
sti
sbb
mov
das
inc
loopne
add
cs
adc
gs
xchg
add
or
cdq
movs
sub
pcmpeqd
add
inc
adc
adc
xchg
add
retf
or
sub
jo
cmps
push
or
and
jg
lods
fisubr
(bad)
aas
dec
scas
sbb
sub
addr16
test
adc
cmps
jne
inc
mov
inc
push
test
pop
out
les
xchg
cmp
inc
mov
add
inc
xchg
push
mov
adc
and
in
lods
add
lahf
mov
aas
setns
jo
pop
stos
add
push
cmps
dec
mov
jb
push
or
or
cmp
es
or
jne
jg
sbb
add
sar
(bad)
outs
and
sbb
test
daa
pop
bound
or
push
pusha
inc
das
out
xor
mov
dec
pop
push
xchg
in
add
push
out
adc
retf
inc
or
pop
xchg
sub
dec
js
add
into
adc
bound
ds
add
adc
push
test
and
push
pop
(bad)
mov
xchg
inc
mov
jo
dec
das
mov
pop
and
jbe
ins
push
push
mov
out
add
add
retf
sub
mov
add
in
cmp
scas
add
push
cdq
push
ret
(bad)
iret
arpl
sub
sbb
fist
imul
aas
pop
call
aaa
or
mov
out
daa
mov
adc
pop
das
aas
push
and
cmp
xchg
jo
mov
fwait
iret
outs
inc
inc
loop
cmova
add
pop
out
loopne
cmps
(bad)
aas
add
(bad)
pop
sti
out
dec
cmp
inc
cmp
cmp
xor
pop
push
dec
sbb
out
or
pop
pop
outs
rcr
pusha
push
mov
xchg
push
sub
adc
xchg
push
pop
bound
data16
sbb
pop
pop
outs
addr16
push
add
add
cmps
das
mov
arpl
data16
test
cwde
xchg
mov
rol
sbb
xchg
xlat
xlat
cmp
add
cs
jecxz
pop
dec
xor
dec
movs
or
jg
mov
imul
aaa
mov
ss
(bad)
mov
xchg
cmp
icebp
push
fidiv
int3
popa
adc
xor
div
fsub
shr
push
scas
outs
pop
cmp
dec
add
xor
sub
daa
pop
adc
inc
push
outs
inc
add
mov
xor
das
and
loope
sub
adc
pop
data16
mov
ja
dec
cmp
dec
dec
adc
inc
and
pop
jmp
cli
inc
arpl
add
inc
mov
das
pop
dec
sub
push
sbb
sbb
ret
mov
sbb
push
outs
cmps
inc
loopne
cwde
iret
addr16
or
push
(bad)
or
push
xlat
out
or
cmps
aaa
xchg
push
ja
sub
push
jae
scas
pop
out
das
shl
out
jmp
xchg
and
dec
mov
test
xchg
(bad)
cmps
outs
mov
jo
ja
sbb
or
jno
add
inc
xlat
adc
dec
xor
pop
xor
stos
bound
div
shl
mov
push
aaa
jb
inc
out
xchg
cmp
add
add
and
es
push
dec
test
or
call
test
pop
xchg
xor
push
or
fimul
xor
(bad)
dec
sbb
xchg
dec
rcl
push
aas
inc
push
test
or
add
sbb
into
neg
jecxz
pop
fistp
neg
imul
out
push
sub
mov
not
imul
add
xlat
imul
mov
xlat
push
ret
fbstp
das
and
inc
push
(bad)
out
(bad)
cmps
into
xor
ins
mov
sbb
sbb
js
sub
or
adc
xor
and
add
aaa
movs
and
dec
pop
punpckhdq
stos
xor
in
push
pop
das
out
cmpxchg
sbb
xchg
push
fisubr
lahf
mov
xlat
add
out
retf
mov
mov
aad
fcomp
(bad)
and
push
(bad)
push
add
push
pusha
add
idiv
cwde
ret
cmps
and
test
cmp
iret
pop
iret
data16
pop
daa
iret
(bad)
arpl
adc
xchg
iret
dec
inc
mov
ret
outs
cwde
adc
xchg
iret
push
pusha
mov
daa
sub
aaa
ss
inc
sbb
xor
or
xchg
iret
xchg
test
adc
xor
xor
loop
mov
mov
sbb
ss
xor
or
push
or
daa
push
adc
ins
neg
inc
(bad)
rol
xor
cmps
add
iret
mov
mov
add
cmps
inc
in
adc
aaa
fist
fild
iret
push
sub
dec
sub
iret
xchg
inc
(bad)
les
iret
pop
push
or
sub
xchg
and
mov
lods
push
aas
cmps
daa
mov
sub
sbb
addr16
test
xor
mov
adc
cli
popa
inc
test
sub
aas
dec
jmp
inc
loopne
inc
dec
shrd
sub
test
adc
lds
push
jno
inc
pop
xor
push
mov
mov
pop
mov
cmps
outs
cmps
dec
jo
xchg
loop
xor
cmps
push
xchg
loopne
mov
das
test
xchg
daa
out
mov
fcom
push
or
xor
inc
xor
or
sub
shl
das
pop
pop
pop
jno
scas
mov
(bad)
aaa
pop
push
sub
add
call
or
sub
jb
pop
cwde
sbb
inc
xchg
xor
pop
bound
shl
rol
cmp
pop
dec
or
dec
push
pusha
cs
push
dec
lahf
mov
and
pop
pusha
lahf
push
dec
add
test
mov
push
mov
int3
push
or
push
inc
push
popa
add
rcr
or
das
pop
add
sar
pop
(bad)
movs
xchg
sub
pop
xchg
adc
fiadd
cmps
inc
push
xchg
add
retf
add
inc
sub
sbb
cmovae
or
or
pop
pop
push
inc
pusha
inc
cmps
push
pop
and
cmps
inc
and
nop
push
sub
ret
outs
and
push
or
pop
push
or
or
outs
push
push
sbb
pop
xor
xor
push
mov
or
adc
mov
adc
or
repnz
add
das
rol
cmp
sahf
ja
int3
in
or
push
fisub
or
aaa
or
fisttp
pop
inc
popf
aaa
push
(bad)
fbstp
rol
retw
inc
bound
es
outs
mov
outs
add
dec
add
mov
cmp
push
push
dec
dec
rcl
test
inc
sub
loope
push
idiv
sub
dec
jbe
push
xor
popa
and
mov
dec
daa
cmp
mov
or
add
daa
sbb
dec
adc
pop
sub
inc
daa
inc
shl
sbb
mov
push
and
pop
(bad)
nop
pop
and
xchg
(bad)
mov
xchg
pop
xchg
mov
lds
push
outs
mov
(bad)
daa
dec
or
push
inc
sub
repnz
and
xchg
daa
addr16
mov
(bad)
push
xlat
(bad)
and
pusha
int
daa
and
and
(bad)
adc
test
sub
xchg
or
or
(bad)
(bad)
pusha
or
sbb
daa
mov
dec
adc
(bad)
daa
inc
stos
adc
adc
xlat
jo
push
shl
inc
or
dec
daa
push
daa
mov
shl
inc
lods
sbb
dec
and
adc
jbe
bound
add
inc
pop
mov
inc
daa
out
rol
pop
push
daa
adc
or
ins
shr
daa
mov
sbb
add
mov
and
cmp
pop
add
and
add
dec
mov
dec
or
lods
push
fucomip
adc
repnz
jnp
es
or
out
repnz
push
mov
test
inc
inc
mov
push
retf
mov
stos
aas
pusha
sub
dec
out
sar
pop
aaa
cmp
pop
or
push
scas
mov
add
mov
pop
or
daa
aaa
addr16
sub
aas
mov
xor
cs
sbb
xor
inc
adc
outs
adc
push
xchg
add
div
gs
push
xchg
outs
sub
loop
fsubr
pusha
sub
add
add
test
cmps
out
addps
sahf
push
jnp
lea
push
sbb
cmp
push
test
push
sub
pop
add
and
sbb
inc
or
xor
mov
pusha
and
arpl
or
sbb
cmps
cmps
add
test
cmps
dec
cmps
dec
adc
xchg
addr16
rcl
ins
lods
mov
dec
aaa
dec
ss
mov
ficom
pop
xchg
mov
xor
shr
(bad)
das
xlat
inc
mov
xchg
xchg
adc
iret
push
and
jmp
out
int3
and
js
dec
mov
outs
mov
sbb
xchg
pop
mov
cmps
push
push
dec
push
scas
sub
cs
add
aas
xchg
(bad)
fst
call
iret
ja
xchg
inc
ja
pusha
push
jnp
sub
cmp
sbb
rcr
aaa
js
daa
test
(bad)
cmp
mov
pusha
sub
cmp
mov
and
sbb
sbb
jo
mov
loopne
add
xchg
pusha
or
bound
data16
sub
or
data16
push
push
push
pushw
das
sub
ror
aas
inc
mov
loopne
xor
pop
mov
inc
xchg
push
xchg
push
xchg
add
adc
mov
pop
lods
pop
dec
xor
movntps
cwde
shl
das
adc
(bad)
pop
push
mov
adc
dec
mov
jp
mov
push
ds
inc
data16
outs
mov
push
sub
pop
daa
addr16
mov
pop
mov
push
mov
scas
dec
fisub
rcr
push
dec
aad
or
cli
xacquire
jae
pop
dec
push
add
mov
inc
add
out
adc
rol
out
cwde
ror
push
push
xor
mov
das
movs
(bad)
pop
inc
add
inc
sub
xchg
and
dec
sti
mov
mov
cmps
push
add
push
push
test
(bad)
jo
sbb
xor
or
imul
mov
shl
xchg
jecxz
sub
adc
cmps
cmps
xchg
dec
in
pop
jp
loopne
dec
outs
dec
pop
(bad)
push
push
(bad)
out
push
pop
cs
xchg
inc
sub
pop
mov
aas
aas
mov
out
mov
inc
inc
das
adc
inc
xor
loope
aaa
daa
dec
rol
inc
push
sahf
and
adc
iret
ja
je
pushf
xchg
bound
or
jne
rol
aas
stos
sbb
aas
xlat
dec
sub
sub
mov
(bad)
aas
add
mov
xchg
inc
fistp
cli
scas
push
aas
les
add
mov
bound
out
push
pusha
push
out
mov
out
jle
push
mov
adc
aam
push
inc
add
add
push
dec
inc
sbb
mov
mov
push
add
inc
inc
inc
push
stos
inc
adc
outs
test
mov
lods
add
dec
ins
add
mov
push
or
add
xor
adc
sub
loop
idiv
sbb
add
push
leave
push
ins
push
mov
pop
ds
mov
add
sbb
pop
sbb
xchg
ss
xchg
ja
mov
add
xchg
jb
fsub
mov
imul
and
shl
ja
call
arpl
ja
sub
shr
or
dec
or
(bad)
adc
sbb
dec
xor
jle
rol
and
fadd
push
add
loop
imul
inc
add
jae
stos
pusha
test
inc
push
sub
inc
push
mov
mov
iret
sub
nop
fiadd
cwde
add
bound
mov
cmp
xchg
mov
enter
iret
adc
sub
(bad)
jg
dec
mov
lods
inc
cmps
lahf
sbb
pusha
or
out
cmp
sbb
push
push
add
sbb
rol
mov
and
push
test
aas
daa
cdq
mov
inc
arpl
add
xor
jns
dec
dec
imul
repnz
aaa
cmp
sbb
mov
cwde
test
fisttp
sub
dec
and
pop
aas
fbld
fwait
xchg
movs
or
pop
test
mov
cmps
out
add
lods
loop
inc
mov
inc
repnz
or
add
pop
sbb
mov
push
inc
scas
adc
sbb
iret
xor
push
push
cmp
int
es
dec
and
cmovo
(bad)
inc
add
cmp
inc
add
inc
mov
push
lahf
xchg
add
lahf
data16
js
inc
pop
ja
int3
pushf
jns
aaa
fbstp
inc
cmp
(bad)
mov
rcr
pop
add
(bad)
aas
sub
das
ds
push
jbe
push
jae
fild
xor
push
mov
add
inc
xchg
dec
shl
xchg
aaa
iret
rol
or
andps
test
daa
and
mov
inc
stos
(bad)
cmp
aaa
packsswb
add
and
stos
adc
mul
pusha
or
rcl
inc
add
fistp
movs
push
sub
mov
popa
and
dec
iret
inc
inc
fcom
inc
dec
dec
ins
test
cmps
daa
pop
mov
sub
push
arpl
sbb
sub
push
dec
iret
pop
iret
je
mov
cs
mov
add
pop
iret
or
sbb
out
iret
pop
or
rol
sub
sahf
or
pop
ss
(bad)
ja
aas
imul
xor
inc
out
add
push
mov
cli
xor
cs
add
out
xlat
jae
or
mov
int3
and
dec
ins
mov
test
mul
add
push
out
out
mov
adc
out
ficomp
iret
push
loop
adc
dec
adc
and
and
data16
or
into
sub
xlat
movs
pop
push
and
mov
pop
push
or
mov
pop
(bad)
xchg
and
dec
inc
or
sub
movs
mov
or
in
push
mov
ja
test
outs
push
pop
mov
jno
cmps
stos
and
jae
out
push
adc
pop
pop
or
xlat
mov
push
mov
outs
imul
cmps
add
xor
mov
dec
mov
ficomp
call
push
add
repz
or
test
gs
loopne
jg
push
or
bound
xor
or
mov
xchg
dec
dec
add
or
mov
or
or
dec
out
and
sub
cmovae
push
sbb
push
xchg
cwde
and
mov
or
jg
add
fmul
cmps
mov
test
mov
dec
dec
dec
push
mov
cmps
dec
outs
and
inc
ffreep
adc
xchg
fcom
dec
lock
xchg
sub
xchg
add
repnz
push
xor
adc
jae
adc
push
jmp
dec
(bad)
call
fiadd
xor
ins
adc
add
mov
inc
xor
or
outs
aaa
add
inc
mov
dec
in
dec
scas
xchg
add
push
dec
daa
mov
xchg
shl
jp
push
test
in
inc
dec
aaa
ja
ja
mov
sahf
aaa
das
loopne
add
pop
data16
sub
add
xchg
sbb
xor
sysret
and
out
sub
ja
cmp
and
pusha
cdq
inc
das
aas
mov
sbb
dec
call
ds
ja
add
out
push
xchg
or
mov
sbb
lahf
das
pop
inc
cmp
pop
adc
push
das
jg
and
pop
xchg
pop
dec
push
sub
movs
scas
dec
add
xchg
cmp
sbb
push
ins
dec
fisttp
sbb
iret
dec
dec
mov
xchg
mov
adc
pop
(bad)
sbb
sbb
fwait
test
aaa
mov
pop
and
std
dec
pusha
xor
not
push
push
mov
xor
xor
mov
(bad)
mov
add
xchg
sbb
push
mov
jmp
inc
add
cmp
jne
mov
mov
pop
pop
pop
ret
mov
push
mov
mov
dec
push
aas
push
add
pop
push
mov
ficomp
push
pop
cmps
add
push
push
adc
imul
es
das
or
cwde
push
inc
ss
dec
repz
cmp
call
mov
test
scas
add
adc
popf
mov
inc
dec
push
jbe
mov
mov
pop
add
imul
inc
inc
fs
jns
sub
sbb
add
sar
pop
add
push
jb
shl
jbe
push
cmovae
push
mov
in
lahf
add
or
dec
outs
fwait
gs
es
push
inc
mov
popa
je
add
add
rcr
mov
ins
data16
add
and
dec
popa
imul
bound
push
out
arpl
pusha
add
or
mov
inc
int3
jnp
adc
ins
hlt
cmp
call
pusha
sar
or
push
gs
(bad)
sbb
imul
inc
outs
ins
jo
sahf
inc
jo
mov
mov
sub
popf
push
inc
or
push
inc
jb
xchg
ret
adc
push
push
or
dec
inc
jns
outs
bound
fild
xchg
rcl
ins
jbe
add
pop
mov
adc
mov
or
xchg
fnstcw
ins
sub
adc
pop
jno
xchg
and
inc
sub
add
inc
push
or
sti
ja
imul
push
je
imul
mov
push
mov
(bad)
lds
ins
loope
mov
(bad)
mov
shl
(bad)
lock
out
mov
push
mov
xor
mov
sbb
mov
ror
sti
mov
(bad)
or
mov
push
es
ss
push
sbb
mov
fs
push
xor
ss
mov
cmp
mov
mov
add
jbe
xchg
cmps
cmp
add
(bad)
loopne
(bad)
out
mov
retf
add
ins
or
ficomp
(bad)
mov
pushf
cmp
(bad)
lods
fidiv
fadd
sti
pop
inc
mov
in
xor
push
jmp
or
rcl
mov
mov
mov
jne
call
jbe
loopne
into
out
inc
cld
sbb
mov
xchg
mov
sar
dec
adc
out
das
xchg
clc
push
push
jb
leave
fistp
dec
or
pop
mov
mov
dec
mov
stc
lock
out
push
xchg
jp
rol
adc
jle
mov
fwait
xor
ret
jmp
jmp
mov
pop
ret
in
cmp
pop
xchg
push
inc
dec
push
mov
clc
dec
cmp
jg
add
mov
fisttp
fild
cli
and
jno
ss
(bad)
lea
cmp
les
js
add
ror
or
xor
or
xor
inc
fisub
mov
mov
mov
inc
les
in
push
pop
in
cmps
and
sti
mov
lea
jecxz
cmp
sbb
cmp
adc
jbe
popa
add
jmp
lea
inc
push
test
sub
add
mov
adc
mov
sub
fadd
ja
aaa
or
rcl
les
test
sub
xchg
(bad)
fimul
popa
cmp
cmp
bound
cmp
cmp
addr16
cmp
cmp
ins
ins
cmp
cmp
outs
outs
push
push
cmp
cmp
push
push
push
push
cmp
cmp
push
push
pop
pop
cmp
cmp
pop
pop
pop
pop
cmp
cmp
pop
pop
inc
inc
cmp
cmp
inc
inc
inc
inc
cmp
cmp
inc
inc
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
xor
cmp
cmp
xor
xor
cmp
cmp
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
and
lock
cmp
and
pop
outs
scas
cmp
push
cwde
es
das
inc
pop
rol
jbe
imul
pop
dec
or
movs
xor
add
add
inc
inc
dec
adc
outs
aaa
loope
shl
jae
jb
ins
dec
push
jle
ins
inc
adc
fist
sbb
inc
jne
ins
fs
popa
arpl
add
and
xor
ins
dec
dec
inc
dec
imul
inc
push
gs
js
mov
jnp
jns
les
fmul
sub
dec
cmp
cmp
and
aas
shl
cld
dec
imul
push
popa
bound
cmps
adc
pop
ror
int3
jns
push
mov
mov
or
push
imul
sbb
mov
aaa
xchg
push
popa
sar
or
lahf
xor
xchg
cmova
loope
add
test
cdq
or
dec
popa
and
aad
push
icebp
or
dec
outs
cwde
inc
gs
jne
inc
sbb
mov
movzx
xor
or
or
lds
push
xchg
or
inc
cmp
dec
or
pop
adc
in
popa
je
push
dec
cmp
(bad)
lock
outs
stos
cmp
cmp
pop
imul
pushf
jne
xor
and
adc
or
lods
pop
pusha
dec
jns
jo
jno
jg
pop
ret
mov
xchg
xchg
mov
ins
outs
bound
push
xor
pop
jns
enterw
scas
lods
jmp
outs
dec
push
and
imul
in
or
pop
mov
out
js
and
fs
jne
push
xchg
outs
mov
out
xor
xor
ins
cli
outs
or
push
inc
inc
cmp
xor
pop
call
dec
push
push
push
cli
imul
adc
cmp
out
repnz
dec
mov
pop
inc
data16
test
sub
pop
shr
imul
test
mov
mov
cmp
or
fst
lock
ret
call
adc
and
mov
dec
pop
sti
outs
jbe
shl
add
add
sbb
ja
pop
call
jg
mov
sti
movzx
dec
cmp
jne
cmp
test
push
inc
imul
fimul
push
fmul
fcmovnbe
cmp
fdiv
in
add
mov
jmp
pop
add
add
pop
xchg
cmp
or
mov
aam
pusha
mov
ss
sbb
push
jne
mov
jmp
add
mov
push
js
add
jge
mov
ss
adc
or
mov
sbb
mov
adc
adc
mov
in
inc
stos
in
ror
or
popf
inc
xchg
push
enter
xbegin
jmp
inc
mov
push
nop
dec
xor
jge
push
and
jge
sbb
iret
das
adc
push
and
cmp
rcr
xlat
inc
mov
mov
das
mov
out
mov
push
mov
jbe
cmp
or
mov
jmp
xchg
ins
loopne
and
xchg
dec
or
mov
push
je
jmp
add
sub
inc
mov
scas
loop
js
xchg
loop
sub
jb
inc
(bad)
sti
and
std
fcmovnu
mov
iret
sub
and
inc
dec
jne
xchg
and
nop
pop
add
bound
add
loope
mov
mov
data16
ret
cmp
jmp
adc
mov
lea
inc
mov
xor
out
mov
mov
int3
mov
mov
les
mov
shl
sbb
hlt
lock
push
mov
lock
sbb
fs
sbb
push
or
scas
mov
ror
popf
ret
jns
push
inc
push
test
(bad)
or
rcl
inc
idiv
adc
repnz
lock
in
mov
clc
(bad)
popf
out
adc
xor
jmp
cmp
jl
sub
cld
mov
lea
loope
jp
jg
push
das
inc
hlt
push
lea
mov
(bad)
adc
mov
mov
add
or
aad
test
and
mul
mov
add
shl
pusha
cmp
pop
and
in
mov
cs
iret
cmps
inc
jl
out
idiv
and
xor
xor
lock
cli
add
or
pop
stos
pop
pop
add
inc
in
in
mov
adc
ror
std
pop
je
lea
push
or
sar
mov
pop
das
fadd
xchg
dec
mov
fisttp
loopne
stc
in
jmp
dec
test
jnp
jmp
fcomp
outs
ss
lock
dec
daa
js
loopne
out
in
mov
mov
jmp
mov
rol
dec
xor
mov
and
xchg
pop
sbb
ret
xor
push
lods
cmp
push
or
pop
push
jne
cmp
push
in
dec
imul
cwde
adc
push
add
cmp
scas
xchg
lock
add
(bad)
jmp
ins
cs
push
cmp
xor
push
sub
js
in
loop
xchg
out
and
add
fidiv
cmp
add
rcl
sti
pop
cld
fs
aas
jbe
jmp
jae
mov
sub
mov
sub
mov
cld
xchg
aam
sbb
add
pop
lock
sbb
sbb
sbb
lods
adc
(bad)
pop
call
dec
jle
sub
jne
xor
cmp
jge
mov
fld
or
std
nop
jmp
sbb
int3
sbb
inc
xchg
sbb
add
in
sti
loope
add
fcom
push
ins
pop
or
dec
in
jmp
adc
and
xchg
fdivr
shl
sub
inc
jmp
pop
or
into
test
les
jno
push
(bad)
add
sbb
shl
inc
mov
sub
call
(bad)
sub
xchg
repz
mov
ret
clc
add
not
je
xchg
jmp
pop
jmp
sbb
xor
arpl
ins
push
imul
dec
out
push
hlt
push
loopne
js
sbb
sbb
aaa
in
jmp
push
jle
mov
push
(bad)
dec
push
inc
jbe
mov
adc
dec
xor
mov
mov
push
cdq
in
mov
push
xchg
pop
xlat
ins
rol
loop
xlat
jl
addr16
jmp
jle
inc
ds
cld
out
mov
mov
jmp
sub
aaa
adc
repnz
lods
lods
add
sub
popf
adc
ins
and
out
lock
adc
sbb
out
pop
sub
cmp
data16
sbb
ins
adc
je
sub
or
push
int
sub
mov
sahf
out
lock
pop
cmp
jae
mov
sbb
jo
inc
rcr
jl
pop
xor
add
push
xor
fadd
xor
lods
retf
add
pop
mov
jno
pushf
sti
xchg
shl
xor
pop
sub
or
xor
daa
add
mov
inc
dec
aas
adc
add
iret
mov
push
adc
add
ror
jg
sti
add
hlt
xchg
adc
mov
xchg
cmp
lock
add
xor
pop
fcom
sbb
sub
ja
mov
mov
je
and
inc
push
lods
adc
rol
clc
add
push
aaa
out
(bad)
pop
jb
(bad)
imul
fild
mov
jle
adc
dec
pop
icebp
add
sti
add
mov
jo
mov
test
adc
push
jg
jmp
dec
test
jne
mov
and
mov
sub
lock
push
imul
sub
fld
pop
pop
ret
push
sub
loopne
(bad)
cmp
in
mov
inc
and
mov
xchg
or
test
repnz
mov
mov
(bad)
sbb
push
jb
out
mov
mov
lods
sbb
cld
lahf
pushf
push
pop
pusha
call
les
push
daa
push
dec
ja
ja
inc
daa
push
and
push
or
bound
inc
rcr
mov
push
out
jbe
inc
xchg
cwde
fldcw
aas
dec
mov
rol
dec
pop
mov
daa
xor
inc
pop
bound
and
add
retf
inc
sub
ins
adc
mov
dec
or
dec
jbe
daa
test
pop
stos
das
mov
or
push
jae
push
repnz
daa
or
pusha
and
dec
test
or
ja
xchg
cwde
and
or
cdq
or
sub
jp
les
and
arpl
bound
es
cs
pop
push
das
add
es
xor
mov
xchg
das
aaa
out
mov
aaa
mov
or
jb
mov
daa
mov
inc
adc
sub
add
das
cmp
(bad)
fist
shl
xor
inc
add
xchg
pop
push
xlat
out
adc
(bad)
mov
into
fild
std
pop
in
ds
mov
test
je
mov
add
cmp
in
mov
mov
mov
mov
test
icebp
idiv
jne
inc
add
cmp
jne
xor
jne
stos
ret
pop
and
push
inc
xlat
aad
or
in
inc
mov
push
add
sar
sub
or
dec
loope
jno
sub
sbb
add
data16
pop
cmp
push
mov
aaa
data16
lea
xor
sub
adc
int3
push
add
mov
pop
pop
xor
sub
es
push
cmp
xchg
pop
ja
push
cmp
mov
sub
inc
nop
and
ja
movs
xchg
and
add
pop
add
pop
mov
pop
(bad)
pop
xlat
pop
loopne
or
push
adc
pop
push
mov
dec
xchg
addr16
add
test
dec
sub
cs
(bad)
cmps
mov
dec
lahf
push
xor
scas
pop
push
mov
adc
aas
mov
add
xchg
and
shl
pop
push
xchg
inc
sub
rol
or
jbe
shl
pop
ss
pop
scas
ret
add
push
ja
mov
das
mov
dec
pop
adc
ret
adc
add
push
sub
or
das
push
mov
sbb
aaa
pop
or
jo
pop
mov
jno
and
pop
push
inc
sub
out
or
pop
dec
inc
sbb
test
out
dec
dec
dec
pop
lods
or
adc
pop
cmps
dec
cmp
or
pop
(bad)
push
mov
fist
add
or
add
jb
jg
ret
mov
out
push
adc
push
fist
test
and
addr16
add
pop
pop
pop
pop
xor
not
cdq
mov
mov
ret
pop
push
daa
or
rcl
mov
adc
(bad)
pop
mov
push
add
inc
and
mov
addr16
lods
adc
inc
dec
cwde
pusha
test
addr16
dec
cvttps2pi
dec
push
dec
lahf
and
add
adc
out
jo
bound
adc
dec
cmps
addr16
lods
push
test
and
pop
pop
mov
ret
mov
pop
adc
mov
out
push
pop
dec
or
pop
push
and
dec
xchg
dec
push
mov
(bad)
ja
rol
adc
or
push
mov
push
dec
dec
push
movs
and
dec
dec
cmps
add
add
mov
push
mov
push
dec
and
mov
inc
inc
sbb
das
sub
or
das
xchg
mov
jb
mov
push
push
dec
mov
push
stos
or
push
in
pop
int
push
jmp
inc
fcomp
pop
inc
sbb
scas
aaa
inc
fisttp
shl
aad
out
pop
out
add
pop
inc
and
pop
outs
inc
or
loopne
fadd
pop
dec
outs
xor
mov
mov
sbb
test
lahf
dec
mov
mov
mov
clc
sbb
xor
je
mov
mov
inc
adc
loope
js
and
cmp
jge
inc
ja
sub
xor
push
rol
add
arpl
add
jo
inc
lock
add
add
cmp
cmp
cwde
adc
fucomi
add
or
pop
ucomiss
mov
xor
push
lock
lods
push
cmps
sbb
inc
pop
xor
jg
jb
or
mov
mov
movs
push
test
inc
jne
jp
mov
add
fs
or
jg
je
mov
jmp
mov
mov
adc
xor
jl
jne
inc
jbe
(bad)
jne
and
pushf
test
xchg
adc
and
cmp
xchg
ffreep
pop
add
pop
lock
cwde
or
add
cdq
or
add
add
into
sar
sub
adc
push
or
dec
xor
push
cs
add
(bad)
iret
ja
jo
rcl
add
call
stc
clc
stos
sbb
or
push
xor
cmps
cmp
ins
jno
pop
call
or
jnp
fnstsw
sahf
jbe
out
fabs
fdiv
mov
or
sti
add
gs
add
adc
add
adc
mov
lock
and
adc
pop
adc
jnp
push
xchg
adc
inc
push
xor
pop
fcomp
(bad)
out
fs
sti
jg
test
jle
cmp
jl
push
ss
push
fimul
push
add
mov
cld
lock
ds
pop
ret
mov
rcl
shr
adc
jne
mov
sub
push
jmp
iret
movs
push
jae
pop
je
inc
jno
cmps
xor
fld
lods
xchg
cli
mov
sbb
cmp
je
cmp
add
jmp
sar
sub
imul
cld
add
jne
and
push
mov
mov
inc
ins
add
es
repz
cmp
or
cmp
jle
ins
or
xchg
add
retf
enter
and
push
xchg
ror
sub
add
dec
test
(bad)
movs
clc
dec
outs
add
popa
add
mov
out
xor
add
gs
and
out
push
ins
adc
addr16
inc
adc
mov
jno
ins
mov
add
dec
(bad)
aam
mov
repnz
jl
dec
and
adc
dec
sbb
lds
pop
mov
push
and
dec
push
pop
je
push
pop
ret
add
xchg
and
push
inc
mov
pop
dec
mul
add
rol
mov
xor
inc
add
push
xchg
sti
mov
lds
mov
les
add
xchg
das
pop
scas
int3
mov
aam
inc
fdivr
repnz
mov
loopne
jl
mov
jl
mov
lock
mov
add
dec
mov
mov
stos
jecxz
mov
xchg
xor
int3
aam
shl
cmp
lds
mov
sub
adc
or
sub
dec
cs
sub
jle
daa
mov
pop
xor
dec
jb
and
mov
adc
dec
jmp
xchg
daa
outs
lahf
int3
push
pop
shl
addr16
retf
fsubr
dec
xchg
arpl
mov
sub
daa
es
mov
adc
sub
inc
dec
outs
and
leave
mov
mov
add
sbb
ret
jecxz
stos
aaa
jne
inc
call
cwde
inc
pop
das
call
arpl
sub
cwde
and
sbb
add
inc
jg
cmp
jno
ja
adc
sbb
mov
ds
test
add
pop
or
ror
xchg
dec
push
mov
push
cmp
jle
push
hlt
sbb
push
out
push
je
pop
mov
stc
in
sbb
inc
out
pop
mov
xor
jbe
out
imul
in
pop
mov
sub
jnp
pop
in
push
xor
mov
add
pop
lods
jo
dec
or
mov
or
sub
in
push
scas
pop
push
imul
or
jbe
mov
mov
pop
das
nop
fadd
inc
add
add
mov
div
push
push
push
add
ret
mov
push
(bad)
push
jl
pop
jmp
add
push
into
sub
cmp
xchg
pusha
or
jge
je
or
je
or
je
or
shr
dec
lock
push
in
cld
sub
fstp
fwait
fs
clc
lahf
clc
int
out
fadd
fstp
test
fld
faddp
dec
fsubr
push
ror
mov
mov
arpl
sbb
ja
mov
or
and
and
and
and
add
add
data16
sub
sub
jle
add
cmp
cmp
cmp
add
pop
add
add
pop
add
or
jge
jle
lahf
lea
sub
sbb
jae
adc
(bad)
sbb
xlat
mov
mov
stc
fimul
mov
imul
push
fdivr
mov
call
movs
pop
mov
jae
outs
es
push
cmp
dec
pop
je
jb
and
mov
push
cs
leave
and
mov
call
cs
xchg
pop
xor
xor
je
fsubr
cdq
in
or
xchg
dec
mov
xchg
dec
cs
xchg
dec
repnz
push
leave
int3
clc
sub
test
sub
and
dec
repnz
dec
cs
int3
adc
leave
and
mov
inc
pop
xor
xchg
dec
mov
and
mov
or
loopne
mov
pop
dec
cs
xchg
pop
xor
adc
jns
and
mov
mov
jb
and
sbb
xchg
pop
mov
es
mov
mov
mov
mov
pop
jb
cmp
mov
and
mov
rol
jb
and
mov
xchg
pop
fmul
mov
cs
mov
pop
pop
mov
pop
xor
dec
cmp
mov
leave
mov
xchg
sub
cmps
pop
rcl
push
movs
and
and
je
pop
jb
mov
cdq
in
xlat
pop
shl
pusha
repnz
dec
mov
and
sbb
xchg
dec
cs
pop
lods
in
das
mov
cmps
pop
mov
leave
and
cmp
(bad)
nop
xor
dec
cs
(bad)
push
mov
dec
cs
and
xchg
ror
cdq
in
retf
xchg
dec
repnz
in
inc
retf
adc
cdq
in
adc
dec
mov
xchg
dec
les
int
js
and
and
in
imul
pop
mov
leave
and
pushf
in
xchg
dec
es
rcl
sub
jo
dec
es
in
xor
ins
xchg
mov
and
pusha
pop
jb
and
mov
fcomp
cmps
pop
movs
loopne
xlat
push
lock
addr16
mov
hlt
sub
pushf
xchg
pop
xor
add
jo
dec
xchg
mov
xor
test
jns
and
pop
xor
dec
cmp
ror
and
cld
cmp
leave
dec
cs
xchg
fdiv
fist
fcomp
dec
cs
xchg
pop
xor
and
push
in
inc
loop
int3
pop
xor
dec
sbb
pusha
mov
in
and
cmps
pop
xchg
dec
pop
jb
sbb
js
lods
mov
(bad)
pop
rcr
dec
adc
push
xchg
ins
in
and
inc
pop
xchg
dec
pop
jb
push
jmp
in
pop
jmp
dec
and
lods
cdq
in
xchg
call
xchg
dec
cs
clc
xor
in
xchg
dec
ins
mov
out
leave
dec
cs
pop
mov
pop
xor
das
mov
icebp
dec
pop
jb
push
mov
or
ins
pop
jb
and
mov
mov
das
dec
cmc
movs
hlt
in
dec
pop
push
test
neg
xchg
dec
pop
jb
cmp
nop
scas
lods
mov
cmps
pop
cwde
dec
repnz
dec
clc
cmp
test
adc
pop
repnz
dec
movs
in
sub
leave
and
clc
xchg
imul
inc
std
pop
pop
int3
and
(bad)
pusha
movs
pop
pop
jnp
call
aam
adc
in
xchg
pop
test
cmp
leave
dec
cs
jo
add
and
mov
in
sbb
dec
das
mov
in
add
jb
and
je
cdq
in
xchg
fmul
cs
les
das
mov
pop
xchg
xchg
pop
jb
cld
xor
dec
cs
add
leave
add
sub
jge
mov
cmp
test
int
or
rcl
mov
jnp
mov
cmp
mov
or
fcomp
cmp
clc
cmp
addr16
adc
mov
or
push
in
sbb
mov
punpckldq
and
mov
dec
test
jmp
test
lea
mov
pusha
or
mov
push
or
cdq
adc
dec
pop
push
ss
cmp
mov
pop
cld
mov
mov
test
add
jle
lea
test
ret
cmp
push
mov
loopne
sbb
ret
pop
dec
and
push
sahf
rcl
inc
dec
jne
jo
sbb
fist
dec
adc
mov
call
fcomp
fadd
add
xor
popf
xor
mov
mov
add
mov
es
aas
push
cmp
je
je
clc
mov
out
ins
movs
xchg
loope
int3
add
popf
add
xor
cmp
push
lock
mov
push
xchg
mov
add
sbb
mov
adc
lods
fiadd
movs
add
neg
add
imul
jo
cmp
cmp
mov
mov
adc
add
mov
jae
jg
add
aaa
jae
loopne
jp
outs
mov
xor
(bad)
pusha
push
adc
push
xor
adc
js
das
add
or
adc
shl
pmaxsw
es
pop
bound
jae
loopne
jmp
xlat
adc
cs
pop
xchg
call
add
or
sub
ja
xor
data16
xchg
out
mov
cmp
mov
add
rcr
outs
and
add
bound
test
mov
pop
inc
adc
pop
bound
xor
add
sub
pop
mov
inc
xchg
out
and
push
mov
dec
nop
mov
xchg
outs
xchg
shl
xlat
jno
xor
cdq
adc
jmp
fisubr
outs
adc
and
sub
lods
or
outs
sbb
sub
xor
(bad)
out
sbb
mov
or
and
ja
pusha
pop
add
xlat
das
pop
mov
add
xor
or
cs
(bad)
test
jae
jg
fwait
and
ss
adc
retf
push
das
pop
or
jbe
pop
ds
ret
int
imul
scas
imul
ss
add
mov
cwde
(bad)
cmp
inc
das
inc
ret
adc
or
(bad)
jb
dec
pushf
cdq
ret
jecxz
push
push
push
test
or
xlat
add
adc
jmp
cdq
call
xchg
pushf
or
or
xchg
adc
sbb
push
push
inc
xor
scas
jae
shr
xor
fs
push
add
sbb
inc
daa
ja
out
fdivr
push
pop
xchg
sbb
and
ds
int3
inc
push
adc
dec
adc
repnz
(bad)
loop
or
push
push
(bad)
pop
aaa
sub
call
sbb
imul
sub
imul
push
fiadd
push
push
daa
cmp
adc
pop
daa
sub
popa
or
ds
inc
pusha
shl
mov
sub
stos
pop
daa
pop
xchg
fiadd
jbe
das
pop
test
add
push
outs
sbb
sar
jae
push
sub
fisttp
daa
aas
iret
cmp
leave
cs
cs
cdq
xchg
cdq
ret
jmp
push
inc
inc
nop
cwde
pushf
push
dec
outs
ja
mov
int3
jbe
xchg
and
mov
add
sub
and
call
out
or
adc
push
pop
or
push
(bad)
mov
add
repz
das
pop
add
out
xor
fmul
and
adc
das
pop
pop
jno
add
movs
stos
dec
arpl
sti
fstp
pusha
out
imul
ja
ror
push
outs
pop
aas
adc
sahf
aas
sub
sbb
lahf
fsubr
dec
adc
mov
sub
jb
jmp
add
retf
nop
pusha
mov
out
fbstp
jnp
push
and
mov
sub
pop
aas
aas
pop
or
jp
addr16
ror
push
cmp
ds
add
inc
aaa
xlat
mov
repz
adc
xchg
jg
jae
inc
sbb
outs
ss
fisttp
popa
mov
sub
adc
outs
push
pop
xor
add
push
pop
add
dec
or
retf
nop
pusha
jb
iret
pop
xor
add
iret
das
shl
data16
outs
inc
push
loope
add
pop
mov
pop
xchg
cdq
cmp
jp
dec
fcmovnb
xor
push
or
in
mov
dec
mov
adc
into
mov
pop
cmps
(bad)
xor
inc
pusha
push
sti
ja
adc
(bad)
jle
ret
xchg
and
bound
(bad)
mov
mov
mov
mov
push
xchg
imul
arpl
out
loopne
add
in
mov
xchg
push
inc
pop
bound
outs
outs
push
test
add
mov
and
mov
inc
jg
xchg
pushf
pop
sub
fisub
sbb
add
pop
pop
xchg
or
xchg
addr16
data16
cmps
jmp
daa
jg
mov
cs
imul
test
dec
add
pop
jbe
sub
xchg
pop
sub
daa
dec
test
push
fimul
dec
xor
or
fist
bound
or
fbld
pusha
add
fbld
loope
stos
lahf
(bad)
in
rol
mov
sbb
pop
dec
push
xor
sbb
or
addr16
movs
or
ins
mov
(bad)
push
sbb
test
test
mov
add
xor
xchg
add
adc
inc
pop
add
imul
push
sti
pop
sub
or
(bad)
lahf
dec
in
(bad)
push
push
mov
mul
int3
and
mov
(bad)
adc
ss
stos
and
fs
scas
mov
pop
or
arpl
pop
inc
das
cmp
mov
outs
and
pop
jo
stos
arpl
adc
add
retf
inc
adc
cmp
out
int
cmp
sub
imul
push
fcomp
or
and
mov
out
int3
ficomp
(bad)
and
test
call
aas
daa
xchg
(bad)
sub
cmp
jg
(bad)
mov
stos
add
push
arpl
xchg
rcr
pop
inc
mov
add
out
fiadd
and
xchg
in
sub
push
and
and
pop
out
inc
adc
push
ficomp
jbe
ret
lahf
jo
lds
pop
lahf
pop
adc
inc
cmp
or
lods
adc
push
daa
push
loope
ins
push
xchg
jbe
test
daa
das
fwait
icebp
rcl
or
jp
add
cmp
jb
inc
push
jmp
mov
xchg
cmps
(bad)
pop
dec
or
mov
lahf
mov
sub
mov
jo
mov
ja
add
jbe
ja
pop
lock
dec
pop
and
sub
cmp
iret
daa
addr16
xchg
sub
pusha
imul
test
sub
inc
out
sbb
cmps
or
div
sub
scas
add
test
jg
outs
adc
sub
pop
repz
jbe
mov
out
xchg
mov
movs
imul
imul
jae
and
push
push
xor
jo
add
inc
push
test
sbb
iret
xor
loope
inc
pop
push
push
sub
adc
jg
add
movs
fdiv
loopne
out
nop
jae
mov
add
iret
or
or
pop
push
aaa
scas
sbb
sub
push
ja
adc
dec
push
mov
inc
inc
packuswb
lahf
cmps
xchg
or
fwait
iret
mov
push
adc
inc
adc
addr16
rol
fiadd
nop
test
daa
arpl
inc
add
add
daa
dec
lahf
or
pop
dec
jae
or
loopne
out
cmp
jnp
push
mov
xchg
push
sbb
dec
dec
pusha
cmp
mov
xor
adc
jg
scas
adc
cmps
das
test
pop
xchg
inc
test
add
scas
enter
xchg
(bad)
dec
test
inc
inc
test
add
or
ja
aaa
add
and
outs
aam
push
lahf
bound
inc
adc
adc
jg
mov
xor
mov
sub
loop
cmps
xchg
popa
jne
xlat
aaa
pop
mov
nop
sub
nop
jecxz
das
mov
adc
xchg
and
aas
test
jmp
repz
js
repnz
cwde
jle
mov
ret
(bad)
push
xchg
cmp
mov
loopne
je
pop
ins
and
sub
lahf
sub
or
push
scas
sub
cmp
sbb
lea
xchg
mov
adc
ja
ja
dec
test
pop
adc
mov
inc
inc
addr16
adc
xor
cmp
loopne
xor
cmp
or
mov
cmp
ss
pop
aad
je
and
xchg
jns
adc
push
rcl
cmp
iret
dec
sub
(bad)
mov
rcl
gs
das
dec
jg
inc
cmp
mov
jg
repz
adc
add
jno
aad
dec
mov
add
pop
cmp
and
pop
aaa
jae
jo
inc
dec
imul
sbb
add
aas
xor
daa
adc
mov
dec
daa
pop
pop
inc
shr
mov
jae
(bad)
pop
lahf
sbb
pop
inc
pusha
pop
test
dec
jg
sub
jae
mov
push
in
sub
jg
fldenv
xor
mov
dec
int
adc
push
sub
out
rcr
inc
daa
jno
push
jmp
cmp
xchg
mov
aam
pop
inc
out
adc
aas
inc
push
enter
nop
xchg
or
push
ret
adc
daa
pop
wbinvd
js
or
ins
and
(bad)
es
jae
sub
jg
add
xor
push
mov
imul
add
add
or
mov
mov
pop
jnp
adc
rcr
mov
mov
inc
aaa
pop
cmp
xlat
fwait
pop
cmp
rol
ret
add
sbb
cmp
add
mov
and
ds
push
and
out
or
mov
cmps
sti
adc
add
inc
das
cmps
ins
xor
add
push
add
pop
iret
inc
dec
and
add
mov
rcl
push
xor
cmp
rcl
mov
push
dec
sbb
(bad)
xchg
and
jg
sbb
inc
aas
adc
jnp
test
scas
jnp
pop
add
jg
xor
mov
add
inc
mov
outs
out
jb
out
out
call
xor
ja
add
arpl
daa
loope
rcl
ss
out
cwde
mov
ds
jle
jno
dec
push
push
pop
sub
das
pop
pop
ins
push
add
sbb
sbb
sbb
adc
adc
fcmovu
xlat
movs
or
mov
inc
daa
mov
pop
sub
adc
adc
popf
inc
stos
push
adc
xchg
call
rol
or
pop
iret
dec
pop
add
sub
(bad)
push
pop
sub
daa
(bad)
pop
nop
arpl
enter
sbb
or
mov
aad
rcr
lahf
sub
test
adc
pop
in
sub
jg
and
push
aas
jg
inc
inc
mov
outs
outs
jo
mov
xchg
sbb
pop
lea
mov
dec
lea
out
repz
adc
jle
mov
mov
(bad)
mov
xor
iret
rcl
(bad)
iret
sbb
test
xchg
mov
push
outs
xlat
in
cmp
cli
(bad)
rcl
push
mov
xor
test
ret
iret
xor
iret
jnp
leave
retf
fild
ins
push
xor
das
(bad)
mov
xlat
mov
ins
push
push
out
cmp
add
mov
shl
push
addr16
push
sub
shr
test
das
iret
cmp
add
sahf
iret
add
sub
in
les
pusha
and
add
ja
inc
fbld
mul
cmp
pop
and
sub
adc
xor
and
rdmsr
or
push
xor
xchg
rcr
mov
test
fdiv
jg
mov
nop
xchg
jg
push
push
push
aaa
(bad)
jg
in
lods
jno
mov
push
pop
and
and
scas
ja
pop
xor
scas
xchg
cmps
sbb
mov
pop
xrelease
mov
or
lods
inc
sub
push
add
cmp
and
iret
mov
add
xchg
and
jmp
lods
fs
es
ret
xchg
mov
mov
dec
xlat
imul
pop
xchg
je
sbb
jae
rcl
ja
mov
aas
outs
pop
adc
shl
xchg
test
fdiv
xchg
sbb
jg
mov
inc
es
sbb
xchg
sub
pmaxsw
dec
jo
pop
inc
fimul
adc
dec
in
pop
push
pop
fsub
jno
add
(bad)
and
xchg
sbb
mov
add
or
xchg
pop
dec
aas
(bad)
xor
rcl
dec
sbb
mov
xchg
xor
mov
nop
or
ret
in
pop
iret
inc
cmp
add
inc
ret
das
shr
push
jns
lahf
push
test
and
mov
adc
adc
mov
aas
(bad)
xor
jg
dec
inc
lock
mov
xchg
cmp
cmps
mov
int3
cmp
sub
pop
imul
mov
das
cmp
lahf
xlat
lods
or
cmps
adc
xchg
dec
jg
pop
or
stos
mov
add
out
push
aas
dec
push
xchg
xchg
pop
cs
mov
xchg
xchg
inc
pusha
mov
addr16
or
cmps
ds
add
(bad)
lock
add
and
push
sbb
hlt
xchg
lea
jbe
push
mov
mov
sub
or
add
dec
iret
jg
add
aas
add
add
push
jo
push
dec
daa
push
sbb
add
push
xchg
inc
ss
and
xchg
push
push
setge
dec
jp
add
ret
xor
out
or
dec
inc
lods
fs
ss
mov
jg
pop
inc
mov
xchg
dec
pop
adc
das
aas
xchg
add
sub
pop
mov
or
mov
pop
or
pop
mov
mov
lds
mov
push
mov
test
fcom
iret
mov
nop
inc
aaa
sub
bound
dec
pusha
aaa
sub
mov
mov
mov
dec
pop
(bad)
xor
cs
ret
pop
(bad)
dec
bound
xor
pop
inc
fist
mov
push
xlat
dec
mov
adc
sbb
dec
fcom
add
jg
xor
mov
test
popa
das
lahf
(bad)
or
and
mov
adc
add
push
scas
rol
sbb
dec
mov
or
and
and
inc
add
pop
test
cmps
ja
push
or
or
xchg
xchg
adc
mov
mov
mov
gs
jae
adc
neg
(bad)
sub
rol
push
push
(bad)
xor
jnp
das
test
xchg
pop
push
cdq
ror
adc
sbb
lea
xchg
adc
add
inc
xor
aas
xchg
or
push
shl
fiadd
daa
pop
push
lahf
jae
pusha
aam
pop
out
bound
sub
in
inc
repz
stos
add
jg
jg
cmp
fcmovb
dec
rcr
or
and
xchg
add
add
and
sbb
xchg
cmp
aaa
inc
dec
mul
push
ss
add
dec
or
mov
aas
dec
push
fild
aas
mov
xchg
jp
xchg
jnp
pusha
cs
(bad)
jg
pop
add
adc
sti
adc
push
sub
ret
cmps
mov
pop
xor
xor
sbb
data16
and
mov
pop
lahf
xlat
or
inc
stos
test
scas
mov
xor
jnp
inc
sub
test
mov
stos
add
jo
ret
sub
es
mov
emms
punpcklbw
adc
adc
lea
adc
inc
ja
or
push
pop
sbb
add
pop
cmp
das
jae
call
es
pop
and
pop
or
inc
lahf
xor
inc
mov
and
scas
cs
sbb
mov
fsub
mov
mov
jg
mov
shl
sbb
xchg
pushf
push
pop
fild
sub
ja
xor
mov
dec
xchg
(bad)
jbe
addr16
adc
dec
dec
xchg
add
mov
test
or
aaa
outs
cmp
cs
inc
sbb
test
pusha
add
adc
call
xlat
dec
jne
push
mov
cmp
imul
sbb
adc
shl
jmp
sub
jb
mov
cmp
dec
ret
retf
xchg
scas
(bad)
jg
push
add
mov
dec
frstor
mov
mov
pop
cwde
jae
or
xor
popa
fisttp
push
jg
jle
inc
sub
sbb
inc
fisub
ret
push
sbb
push
daa
push
fst
pop
pop
arpl
or
xlat
or
adc
mov
inc
addr16
mov
xlat
mov
inc
fimul
or
add
cmp
adc
daa
test
daa
xchg
jg
sub
movs
jg
cmovno
push
jg
jg
sub
in
inc
sub
jg
add
call
or
in
cmp
bound
push
add
xor
xchg
pop
xchg
inc
xor
inc
sub
push
xor
push
sti
mov
outs
jecxz
add
push
xor
cmovbe
and
je
sbb
or
push
ret
sbb
pop
add
daa
xor
rcl
push
mov
adc
stos
cmps
xchg
sub
dec
mov
sub
push
inc
add
and
scas
(bad)
push
push
mov
add
jae
pop
dec
dec
pop
fst
rcl
cmps
push
dec
add
cmps
pop
jbe
mov
fistp
or
push
pop
data16
mov
add
int3
pusha
push
sar
outs
test
aad
mov
ja
(bad)
inc
jnp
push
aad
mov
sbb
add
inc
test
ja
sub
mov
jno
ret
sbb
cli
ss
shl
fbstp
inc
(bad)
out
ja
adc
add
lods
stos
xchg
sbb
adc
dec
test
enter
sbb
mov
dec
inc
outs
pop
sub
inc
fiadd
scas
test
pop
or
js
push
cmp
pop
cmps
sub
adc
mov
xchg
and
cmp
dec
int
adc
arpl
xchg
popa
push
pop
(bad)
retf
pop
push
mov
adc
es
pop
outs
add
sbb
int3
sub
addr16
and
sub
adc
inc
and
out
push
lock
pop
fistp
adc
adc
out
addr16
bound
sub
and
addr16
sub
add
test
lock
cmps
test
pop
or
loop
and
scas
and
mov
dec
lahf
sub
es
popa
cdq
adc
iret
xor
push
psubusb
inc
retf
inc
inc
inc
iret
inc
xchg
and
pop
ss
lds
(bad)
jg
jg
or
adc
ja
mov
and
lock
pop
ja
rol
pop
or
jae
and
ins
ret
pop
nop
and
fbstp
xchg
pop
and
cmp
sub
loop
or
jo
and
pop
test
out
jo
and
loopne
ds
cmp
add
add
pop
pop
xchg
ja
loop
or
inc
push
repz
add
test
dec
add
in
loop
dec
push
inc
adc
xchg
(bad)
out
retf
mov
mov
test
jle
dec
cmp
mov
mov
(bad)
dec
and
push
push
push
mov
mov
mov
mov
xor
push
push
dec
mov
lea
mov
call
mov
test
je
sub
(bad)
in
add
add
jne
test
je
mov
(bad)
stc
mov
mov
sub
pop
sbb
dec
jmp
cmp
ins
push
in
jb
cmp
je
neg
mov
jnp
pop
loop
push
(bad)
cmp
je
lea
mov
mov
ror
push
and
call
inc
jne
sbb
inc
adc
aaa
outs
ficom
jmp
mov
xchg
mov
rcl
mov
stos
shl
(bad)
and
clc
mov
pop
add
ret
mov
jp
jmp
pop
pop
pop
mov
mov
test
xchg
push
mov
dec
jnp
rcr
ror
or
push
fcom
call
retf
(bad)
in
push
mov
adc
es
push
mov
mov
fbstp
fmul
and
mov
mov
sub
rcl
hlt
jg
mov
ret
sbb
loopne
shrd
sub
inc
outs
mov
inc
push
daa
jmp
pop
pop
(bad)
push
test
je
add
cmp
mov
mov
push
jmp
addr16
inc
add
ret
les
add
adc
fadd
pop
jge
mov
(bad)
mov
pop
not
push
lahf
sbb
lea
sbb
cmp
mov
enter
mov
js
add
mov
adc
xor
mov
inc
data16
fld
mov
pop
xor
rcr
sbb
mov
and
jmp
les
mov
xchg
test
cmp
ins
xor
add
sbb
mov
mov
outs
lock
xor
cmp
jne
jae
push
pop
xchg
xor
clc
xor
pusha
sbb
or
arpl
mov
popf
and
test
in
jl
xchg
or
mov
call
mov
inc
shl
adc
push
sti
pop
cmp
mov
xlat
dec
jne
add
stc
xchg
loop
in
rcl
or
or
aam
inc
mov
adc
cmp
jo
inc
dec
test
jl
mov
std
lea
das
xor
test
movzx
mov
push
xor
xchg
inc
sub
jge
jle
push
inc
inc
loopne
mov
dec
mov
aaa
rol
push
loopne
mov
lea
in
loopne
add
fsubr
jo
mov
dec
push
stc
push
push
dec
jne
test
rcl
js
mov
jecxz
popa
cdq
push
mov
int
pushf
fdiv
pushw
mov
jp
jecxz
cmp
inc
xor
push
and
test
adc
jg
fstp
adc
xchg
inc
mov
(bad)
add
add
test
push
or
lahf
inc
ret
mov
adc
icebp
das
push
push
inc
push
mov
mov
cmp
inc
inc
icebp
add
adc
(bad)
fcmovnb
aad
inc
je
not
mov
add
adc
fidivr
or
clc
mov
mov
or
mov
fstp
push
in
movntq
ror
add
cwde
cmp
jne
xlat
dec
xchg
push
or
mov
mov
mov
add
fiadd
push
jb
xor
ja
add
jne
cmp
jne
pop
out
iret
cmp
add
fisttp
test
mov
mov
cmp
cmps
out
inc
sti
add
jo
cs
mov
inc
(bad)
repnz
sahf
mov
mov
mov
movs
lock
xchg
ffree
test
or
(bad)
push
cmp
sbb
xchg
js
and
retf
and
jnp
adc
in
add
or
pop
outs
mov
mov
inc
aas
je
inc
jmp
sbb
push
ins
and
add
jmp
fcomp
ins
fcom
int3
aaa
inc
imul
inc
lods
jo
sub
push
lea
add
adc
sbb
xchg
das
pop
je
mov
mov
shl
shl
xor
xchg
ret
jns
sub
sub
mov
dec
imul
mov
dec
and
rcr
pop
pusha
pop
das
inc
add
pop
das
add
in
test
mov
in
pop
and
push
push
push
cs
ss
cmp
pop
cs
add
push
cmps
xlat
int3
add
push
add
call
dec
push
inc
pop
push
xor
daa
jecxz
pop
sti
jge
or
je
mov
jne
pop
pop
sub
test
test
iret
fs
pop
das
shl
add
hlt
or
jnp
pop
loopne
je
mov
add
mov
push
xor
or
and
(bad)
jno
jg
lahf
add
mov
cmp
xlat
push
mov
or
inc
push
pop
lahf
into
add
aas
jne
push
sbb
add
add
push
in
dec
outs
rcr
cmc
in
lea
mov
xor
mov
mov
pushf
inc
add
add
sub
add
out
or
lea
jne
pop
add
pop
inc
jmp
xor
jne
adc
mov
add
sub
mov
inc
jo
sbb
push
shl
jns
daa
jl
pop
clc
rcl
lock
retf
sub
xchg
add
jg
jmp
mov
cld
aas
xor
je
sub
fist
pusha
aam
jae
jne
dec
cmp
pop
ds
pop
lock
std
sub
adc
dec
pop
add
outs
add
inc
mov
mov
ins
or
(bad)
fstp
sbb
add
sub
add
in
push
test
pusha
lea
dec
mov
and
stos
or
sub
adc
add
mov
adc
and
jge
and
and
hlt
cmps
or
js
retf
mov
js
fdivrp
clc
frstor
ret
sbb
push
dec
dec
cmp
add
mov
call
paddusb
cmp
cmp
aam
int3
sub
fs
cmps
add
and
adc
cmp
pop
and
sbb
push
pop
mov
cmp
mov
jg
les
mov
icebp
fcomp
pop
cmps
lock
into
and
adc
pop
(bad)
and
jmp
add
(bad)
in
arpl
mov
add
xchg
repnz
mov
mov
loopne
and
or
pusha
cwde
pop
das
jne
lods
stos
cmp
add
push
and
sub
add
adc
arpl
or
or
sbb
mov
sbb
sub
cmp
shl
mov
jb
pop
dec
std
aaa
push
jb
xchg
aam
ret
div
push
push
pop
push
xor
or
je
dec
cmp
add
or
arpl
xor
rcr
call
mov
in
or
mov
jne
cs
fmul
mov
and
out
arpl
repnz
mov
push
int3
test
mov
cld
xchg
out
bound
in
adc
cmc
retf
add
mov
sub
lds
out
cmps
cmp
and
test
test
inc
les
bsf
dec
dec
mov
nop
pop
pop
push
and
sub
pop
pop
dec
test
test
push
inc
push
dec
cwde
mov
fild
mov
pop
shl
inc
out
sbb
les
push
rol
cmp
and
dec
add
push
pusha
lds
movs
and
pop
add
fidiv
adc
das
pusha
adc
enter
push
pusha
inc
add
jecxz
xor
mov
xchg
or
lock
adc
sbb
sub
pop
adc
fidivr
test
mov
sub
jg
aam
adc
jb
cdq
test
shl
xor
test
fld
sbb
push
add
sub
adc
pop
cld
mov
mov
pop
mov
mov
or
enter
xchg
jne
push
pop
retf
add
test
aad
pop
js
or
jae
mov
mov
xchg
or
cmp
push
xor
push
inc
lods
jmp
shl
ins
add
nop
dec
cwde
fild
xchg
adc
adc
or
aaa
jo
mov
inc
jo
pop
mov
stos
and
xor
jmp
mov
and
xor
daa
pusha
xor
js
xlat
movs
mov
push
hlt
jns
pop
add
fst
inc
push
das
rol
rcr
iret
cmp
add
dec
inc
out
inc
aam
mov
movs
js
xlat
stos
add
pop
sahf
xor
mov
or
sbb
or
cmp
add
lds
jp
jno
popaw
jp
iret
dec
mov
mov
pop
rol
mov
mov
add
fsubrp
pop
jmp
mov
or
sbb
cwde
jb
fsubr
cmp
xor
mov
inc
cdq
pusha
mov
cmp
mov
push
dec
sbb
fdivr
nop
mov
or
int3
aaa
push
mov
xchg
push
mov
mov
outs
or
aam
sbb
jge
jo
sbb
fsubr
push
in
xor
test
jne
(bad)
jmp
xlat
sub
adc
pusha
lods
cmp
dec
adc
test
dec
mov
jl
and
sub
add
retf
out
out
arpl
sbb
in
dec
es
mov
or
sbb
add
inc
sub
ds
(bad)
push
xor
icebp
aas
xchg
icebp
jecxz
mov
mov
adc
rol
sbb
cmp
icebp
add
sbb
mov
lock
mov
push
adc
test
and
jmp
mov
mov
ins
test
or
or
cld
scas
das
inc
push
popa
add
fs
and
dec
data16
imul
imul
xchg
push
jmp
in
push
add
ja
js
jns
mov
add
inc
sbb
add
dec
test
test
sub
push
loopne
add
push
add
(bad)
dec
pop
add
add
add
add
xor
add
add
add
adc
push
xor
cmp
add
mov
sahf
xchg
adc
mov
addr16
add
xchg
and
scas
cli
and
pusha
es
ja
inc
or
test
push
loop
(bad)
push
pop
pop
bound
pop
jg
rol
ds
aas
add
add
outs
or
out
or
xor
xchg
data16
sub
push
sahf
mov
mov
cdq
cdq
mov
add
in
leave
addr16
sub
push
push
mov
mov
or
xor
xchg
push
jg
add
sti
sub
push
mov
mov
int3
xor
mov
mov
inc
adc
ss
jmp
pop
inc
pop
ret
or
sbb
push
cmp
fmul
aaa
add
sub
sub
ss
sbb
mov
nop
call
imul
pop
add
add
(bad)
jge
mov
ja
outs
clc
add
add
xor
mov
mov
outs
in
lock
xor
push
inc
mov
pop
mov
xchg
js
pop
adc
enter
adc
(bad)
pop
jne
mov
test
je
sub
mov
js
mov
cmp
jle
mov
imul
push
and
push
sti
fistp
mov
mov
push
iret
pop
mov
pop
jmp
loopne
adc
rol
jge
pop
mov
cmp
and
lock
add
xor
mov
not
leave
shl
icebp
test
xchg
sbb
sbb
or
test
xchg
ss
cld
ja
mov
lods
sub
lea
mov
aaa
xor
push
movzx
push
inc
jmp
jle
mul
push
push
loopne
adc
inc
add
jge
dec
sahf
inc
xchg
cmp
and
fmul
ret
or
inc
(bad)
fsubr
sbb
jmp
ret
push
lds
cmp
sub
sbb
mov
pop
mov
jle
push
push
lock
jmp
rol
or
dec
pop
cs
loopne
xor
scas
stos
cli
cld
push
cmp
dec
sbb
xor
add
out
hlt
fidiv
xor
jne
push
inc
out
outs
sub
mov
add
add
loopne
and
hlt
push
ins
push
shl
mov
pusha
or
cmps
dec
jnp
call
outs
add
cmps
or
pop
jg
pop
xor
pop
loopne
mov
mov
cli
mov
dec
cmp
add
or
fdiv
dec
adc
popa
aaa
ficomp
pop
push
xchg
(bad)
xchg
and
xor
imul
adc
retf
mov
pop
mov
pop
mov
push
mov
push
(bad)
pop
or
loopne
daa
add
stc
sub
ror
push
fadd
jge
push
pop
inc
inc
or
iret
loop
pop
sub
mov
mov
jnp
xchg
or
push
add
fimul
xchg
pop
cmp
(bad)
push
xchg
test
call
add
mov
dec
in
push
in
push
push
inc
or
sub
xchg
xor
cld
mov
scas
inc
sub
pop
dec
sub
jae
xor
xor
pop
pop
add
lock
sub
adc
add
push
ins
jmp
or
add
pop
sub
mov
ja
inc
nop
jl
jg
js
cmps
pop
inc
dec
jne
cmp
mov
push
mov
pop
sysret
(bad)
xor
loope
inc
mov
loop
shl
adc
inc
or
fadd
pop
add
push
push
mov
pop
and
jne
xchg
inc
cmp
lea
cwde
test
fild
or
scas
inc
pop
or
push
addr16
jae
adc
pop
push
xchg
inc
icebp
test
jl
repnz
fisub
mov
out
cmp
push
sbb
cmps
je
cmp
push
in
adc
scas
shl
cmp
jb
in
mov
ins
xchg
jge
int
mov
jo
cmp
sub
push
(bad)
in
dec
loopne
sbb
push
and
push
add
pop
ins
popa
outs
jo
dec
shl
fadd
ror
adc
push
push
jl
inc
xor
push
push
shr
push
ret
xchg
mov
nop
imul
push
sub
(bad)
loop
aam
inc
sti
sbb
fsubr
lds
inc
dec
jne
and
int
pop
aad
cmp
nop
mov
les
add
push
ret
add
push
add
inc
cmps
jmp
or
add
jo
nop
cmp
mov
jmp
inc
sahf
or
shr
mov
mov
mov
lahf
or
mov
lea
lods
adc
shl
pop
adc
aaa
jns
aaa
dec
popa
add
cdq
mov
js
shr
or
test
inc
fld
inc
cld
fisttp
mov
and
mov
pop
(bad)
jne
test
jl
inc
out
mov
idiv
add
dec
jne
out
mov
in
pop
pop
fsub
leave
pop
cdq
jne
in
dec
movzx
nop
cmp
arpl
or
or
push
jb
loopne
lock
cmp
or
mov
jl
ins
sbb
cld
push
mov
rol
aaa
push
and
and
shl
lods
and
clc
(bad)
daa
ds
lea
push
and
push
mov
in
lea
ret
mov
and
sbb
mov
add
add
clc
adc
je
jmp
sti
or
or
je
or
jmp
dec
cmp
ins
mov
add
mov
jmp
or
ret
or
add
cmp
add
and
adc
push
imul
ret
xor
mov
jns
lock
repnz
mov
mov
ds
shl
add
cld
jl
dec
mov
mov
push
cmp
push
push
and
dec
jl
adc
xor
dec
add
sti
loopne
xchg
or
pop
push
or
jno
or
call
cdq
fdivp
jmp
inc
add
sbb
call
jmp
clc
pop
pop
dec
enter
cmps
aas
call
test
sub
inc
lock
adc
or
adc
lods
clc
outs
(bad)
xor
mov
mov
hlt
mov
cmp
sbb
jae
cmc
ret
call
add
scas
and
mov
or
push
aas
pushf
jl
outs
or
sbb
sub
jmp
bnd
push
fisttp
lods
jl
or
and
jge
add
ret
arpl
sub
and
xchg
and
or
sub
jmp
jmp
jnp
cmp
mov
mov
test
test
cwde
into
and
mov
neg
mov
lock
inc
push
shr
add
push
aam
push
or
jl
imul
cmp
repz
jnp
cmp
call
mov
jns
(bad)
in
outs
sbb
fild
fnstcw
dec
or
enter
lods
dec
fwait
dec
hlt
adc
cwde
iret
dec
fiadd
les
imul
xchg
mov
mov
enter
fdivr
mov
cwde
push
in
push
dec
retf
push
in
cmps
int
sub
lods
dec
mov
not
mov
push
sbb
idiv
shl
mov
(bad)
inc
in
add
dec
popa
ins
gs
popa
ins
jne
push
gs
jb
inc
pop
adc
je
jb
adc
div
dec
push
outs
outs
ins
fs
imul
inc
inc
sub
out
pushf
pusha
adc
addr16
loope
mov
arpl
outs
je
push
jns
sbb
adc
cmp
in
loope
inc
pop
dec
iret
lods
cmp
dec
pop
xchg
bswap
and
inc
ds
dec
xchg
out
shr
test
add
out
fs
gs
fs
jae
cmp
sub
fs
je
fs
add
mov
shl
and
push
loopne
push
or
lods
inc
lock
dec
and
loope
lods
add
pushf
inc
inc
or
fs
xlat
not
add
push
jb
jae
mov
cmp
jb
test
ins
imul
cmp
add
push
inc
rcr
mov
adc
outs
jbe
pop
pop
inc
jo
push
outs
or
adc
fisttp
sub
sbb
or
jno
imul
(bad)
fisubr
jno
inc
hlt
dec
dec
pop
inc
js
and
arpl
or
(bad)
std
adc
dec
outs
push
js
dec
ret
sub
xor
jle
inc
repnz
je
aas
fidivr
push
sbb
push
cmp
sbb
add
bound
mov
add
out
mov
xor
adc
add
or
xor
adc
ins
pop
add
adc
lea
dec
pusha
or
div
push
add
jnp
cwde
(bad)
div
add
or
ins
ins
dec
fst
(bad)
int3
imul
sbb
push
cmp
add
mov
xor
sub
mov
pop
pop
outs
test
xchg
iret
ds
xor
pop
mov
mov
or
pop
sbb
add
or
fiadd
scas
add
add
adc
movs
inc
pop
or
mov
pop
dec
aaa
add
or
(bad)
pop
jo
xor
inc
or
bound
push
addr16
mov
lahf
clc
sysenter
dec
not
scas
lods
sub
test
mov
inc
sbb
push
int3
(bad)
push
mov
mov
mov
mov
cmp
sbb
cmps
cmp
sbb
pop
xchg
stos
push
lods
inc
sub
ret
test
ja
inc
rcl
shl
and
push
adc
add
add
rcr
fs
push
push
push
retf
scas
mov
pushf
jmp
inc
and
shl
inc
xchg
es
pusha
movs
inc
push
dec
fmul
adc
add
dec
nop
pop
pop
lods
pop
xor
std
sbb
cmp
out
addr16
dec
mov
pop
int
cli
sub
int3
adc
sbb
and
rol
out
pop
or
jae
xchg
push
hlt
lea
mov
adc
add
lds
mov
push
jmp
(bad)
outs
sub
mov
push
push
pop
add
lods
sar
pusha
pop
push
and
fwait
enter
pusha
mov
jg
cmp
stos
enter
ffree
(bad)
cmp
sbb
jecxz
xchg
add
cld
mov
push
fs
je
(bad)
mov
into
fmul
sti
(bad)
jae
cmp
add
pop
add
sar
fdivr
xchg
mov
mov
ins
inc
loopne
jecxz
jge
cs
fs
adc
push
add
bound
cmp
ret
xor
fucomp
mov
lock
push
in
jge
jmp
test
jb
retf
sub
scas
inc
mov
call
dec
cmps
xor
add
pop
pop
ja
pop
xor
or
jg
sub
or
pop
hlt
mov
inc
xchg
dec
cmp
test
pop
jge
mov
aas
(bad)
clc
jmp
xchg
das
pop
in
sub
xchg
scas
arpl
lock
in
popa
add
or
or
inc
loopne
xchg
jg
mov
js
jmp
inc
inc
mov
sbb
mov
in
mov
sbb
jae
int3
pop
hlt
cmp
pop
ror
call
xchg
and
add
push
cmp
rcr
sbb
cmp
jle
es
and
data16
fs
xchg
push
mov
data16
jmp
(bad)
jmp
nop
fwait
sbb
add
(bad)
push
nop
add
dec
xlat
pusha
adc
or
test
shr
mov
fistp
push
mov
or
dec
loopne
sub
adc
je
sti
inc
imul
sbb
xor
jo
(bad)
in
cwde
jbe
cs
fwait
call
iret
pop
push
out
or
sbb
mov
add
outs
inc
lea
mov
outs
daa
test
test
(bad)
shr
sub
retf
fld
ds
stos
push
add
sub
mov
call
push
ror
mov
call
pushf
rcr
mov
cli
push
pop
imul
aaa
push
add
dec
pop
push
and
push
outs
xchg
jnp
jp
push
cmps
mov
add
stos
cmp
jmp
outs
add
sbb
adc
ss
cmp
or
mov
dec
push
pop
add
lds
add
nop
add
xlat
cmp
pushf
retf
aam
jle
push
in
mov
jmp
sar
or
(bad)
push
add
mov
scas
add
push
push
inc
adc
dec
popa
into
shl
jg
sbb
clc
xor
sbb
dec
sbb
loope
je
out
mov
sbb
add
and
aaa
outs
or
pop
rcr
inc
and
jl
dec
jle
or
nop
jmp
pop
and
mov
or
pusha
sar
dec
iret
sbb
(bad)
pop
loop
and
leave
sbb
inc
fsub
or
stos
add
or
mov
push
sbb
and
cwde
clc
jmp
lock
cli
push
and
mov
sub
adc
mov
add
add
xlat
mov
ret
push
jge
ret
sub
loop
cmp
sub
cmp
push
nop
xor
ret
xlat
into
les
inc
fld
loopne
inc
sbb
adc
sbb
and
lods
(bad)
inc
push
lods
(bad)
mov
mov
jg
push
rsm
push
neg
add
movzx
ret
dec
je
push
mov
mov
sub
dec
adc
enter
lock
adc
clc
sub
adc
mov
dec
mov
jmp
dec
and
adc
push
jne
mov
push
pop
xor
loopne
mov
aas
jo
push
cmps
cmp
dec
repnz
daa
jo
sbb
out
mov
add
mov
cmp
dec
add
call
pop
add
sub
add
add
add
data16
inc
add
jae
sub
adc
push
cmp
aas
mov
push
add
mov
add
pop
pop
adc
setb
test
sub
dec
ja
retf
push
loopne
push
call
(bad)
shl
jle
int
jge
push
sbb
je
mov
push
nop
hlt
mov
call
push
ins
push
rcl
idiv
pusha
ins
xchg
add
add
dec
movs
(bad)
push
mov
pop
iret
enter
retf
push
in
mov
(bad)
push
and
xchg
jo
xor
xor
shr
test
adc
or
outs
arpl
aad
movs
outs
dec
push
mov
mov
pop
je
jle
and
call
mov
inc
inc
jns
gs
cs
pushf
xor
adc
push
mov
add
and
sub
add
jle
imul
mov
or
sbb
cmp
into
push
xchg
mov
ror
mov
mov
or
jle
test
xor
in
dec
aad
mov
xor
adc
or
or
fcompp
pop
data16
and
aaa
mov
mov
xchg
mov
bound
lods
fisubr
or
pop
inc
mov
mov
(bad)
bound
(bad)
push
pop
call
add
push
repnz
cmp
cmp
or
sub
cmp
sub
mov
adc
or
pop
sbb
add
and
aad
imul
es
xor
es
and
cli
add
imul
int3
es
and
stos
sub
pop
xor
push
push
outs
add
add
ret
add
push
push
repz
movlps
cdq
and
ja
test
push
retf
add
pop
add
jno
mov
and
pushf
dec
lods
jecxz
sbb
addr16
and
pop
add
add
aaa
in
rcl
sub
jg
enter
fs
add
mov
xor
cmp
push
push
(bad)
cmp
pusha
sbb
fcmove
mov
add
add
or
xchg
or
add
pop
mov
mov
outs
pusha
test
inc
inc
sub
sub
lea
add
mov
pop
or
(bad)
pop
and
mov
ret
mov
fs
inc
test
or
mov
or
cmp
xchg
mov
add
add
daa
sbb
sbb
push
aaa
mov
aas
dec
iret
fs
and
test
inc
(bad)
repz
nop
inc
ret
(bad)
leave
add
pop
sbb
arpl
xchg
mov
arpl
jbe
mov
cmp
lock
inc
xor
push
sub
fnstsw
add
sbb
shl
or
loope
xchg
loope
jecxz
and
mov
and
cmp
test
push
mov
cmp
push
test
pop
cld
add
cmc
cmp
and
test
or
inc
pusha
or
inc
mov
or
push
sub
pop
push
arpl
and
mov
bnd
add
inc
test
cmp
mov
cmp
in
cmp
xchg
mov
pop
shl
mov
pop
or
lods
shr
mov
jb
pop
inc
es
and
test
jnp
inc
dec
inc
inc
outs
add
pop
pop
mov
fwait
in
inc
or
pop
xchg
mov
mov
pop
clc
movs
jns
mov
push
lahf
or
cmps
cs
js
add
xchg
cmp
lock
leave
adc
or
adc
sbb
or
lds
sub
pop
xchg
mov
xor
jne
push
lods
inc
daa
pop
nop
add
shl
and
pop
jg
cmps
mov
(bad)
dec
(bad)
bound
sub
push
mov
das
out
xor
(bad)
jge
jge
(bad)
std
cmp
aaa
arpl
push
leave
popa
mov
mov
test
(bad)
dec
sbb
mov
jl
add
mov
pop
push
and
cmp
cmp
mov
iret
daa
rcl
xchg
push
daa
test
movs
xchg
and
sbb
xchg
push
movs
out
in
xor
xchg
xchg
adc
fimul
je
add
ret
mov
cli
dec
inc
pop
xchg
(bad)
fidiv
popa
or
xor
iret
add
ret
mov
sbb
les
mov
not
imul
iret
push
popa
bound
stos
pop
mov
pop
or
popa
int3
sahf
xlat
push
mov
pushw
cld
push
inc
jnp
dec
pop
ja
mov
fidiv
je
data16
or
pop
or
test
sbb
out
jne
and
sar
ret
(bad)
cs
mov
movs
or
imul
xchg
xchg
adc
pop
into
outs
xor
shr
add
mov
adc
and
or
sub
cs
jns
pop
inc
jnp
cs
test
addr16
xor
or
and
pop
inc
add
pop
ins
stos
(bad)
ret
out
lods
cmp
fsub
push
xchg
imul
add
push
loop
fild
sbb
popa
sbb
dec
addr16
out
and
test
out
or
sbb
(bad)
mov
pop
int3
cs
test
xor
add
add
cmp
das
mov
pop
xor
xor
mov
mov
jb
arpl
or
mov
popa
lock
out
add
rol
lea
mov
or
dec
add
fs
and
add
inc
(bad)
or
mov
(bad)
mov
mov
mov
inc
dec
jne
xor
mov
(bad)
out
mov
cwde
add
sub
test
jle
mov
inc
dec
mov
pop
mov
inc
inc
dec
jne
pop
mov
out
mov
or
mov
ret
ret
cdq
push
add
push
mov
hlt
fstp
mov
mov
sti
cmps
cmp
les
test
sti
and
mov
(bad)
jl
and
sbb
(bad)
jbe
mov
inc
and
les
push
adc
xchg
je
mov
or
mov
cmp
xor
pusha
mov
shl
push
xor
cld
mov
xchg
sahf
dec
adc
outs
bound
or
and
in
mov
retf
test
cmp
jns
add
sar
add
daa
loope
adc
in
jmp
or
cmps
test
lea
jae
add
iret
movzx
push
cmp
jge
pop
sub
add
inc
pop
add
inc
add
mov
ret
and
and
sbb
inc
push
dec
and
add
sbb
push
push
dec
shr
shr
sbb
or
div
add
pop
inc
lahf
pusha
xadd
sbb
das
imul
ins
sar
popa
add
add
aas
add
jle
mov
aaa
fadd
inc
and
(bad)
lods
cmp
jmp
ret
adc
loope
push
sub
mov
and
sub
cmp
jns
bound
adc
pop
fldl2e
out
ret
sbb
cmc
cmp
mov
push
js
ins
xor
add
nop
pop
add
xor
das
imul
or
cwde
pop
adc
add
les
mov
xchg
jb
mov
mov
and
mov
push
sub
add
xchg
add
add
xchg
add
in
jmp
cmp
cmp
mov
or
jl
add
mov
or
or
add
push
or
fsubr
jmp
popa
add
mov
fcmovb
ror
and
sbb
or
fs
xor
sub
jmp
data16
mov
sbb
mov
xor
loope
leave
shl
mov
jo
in
enter
jnp
ud2
int
nop
push
div
push
add
pop
push
push
add
pop
push
aas
mov
cmp
jge
dec
dec
inc
pop
shl
or
push
push
je
(bad)
and
mov
(bad)
movs
mov
jbe
mov
sub
fsubr
in
enter
or
sbb
xchg
lods
inc
adc
adc
test
or
push
outs
sub
ins
and
pop
mov
ins
jo
jbe
or
fcomp
mov
loope
push
test
sbb
inc
lea
jo
sub
cmps
and
add
pop
(bad)
js
sub
add
outs
dec
loop
inc
add
pop
add
mov
dec
repnz
outs
adc
push
add
or
push
add
and
call
pop
add
pop
add
bound
arpl
mov
add
push
inc
xor
dec
je
jne
jbe
ja
js
adc
cmp
xor
xor
xor
rol
clc
xor
jbe
cmp
sub
das
pop
mov
xor
ret
mov
clc
mov
add
jge
jnp
mov
movs
movs
xchg
xor
mov
add
mov
test
jl
mov
test
nop
dec
xor
mov
add
or
fnstcw
adc
mov
mov
dec
add
jbe
jne
push
mov
dec
gs
and
cmp
ja
sbb
imul
jb
addr16
ins
or
inc
outs
push
gs
fdivr
lods
loop
push
inc
popa
imul
arpl
add
add
push
jne
out
(bad)
int3
push
mov
push
sahf
mov
pushf
(bad)
push
mov
shl
sub
push
adc
scas
enter
sub
lea
inc
push
sar
mov
pop
push
aaa
inc
push
add
add
fwait
icebp
sbb
push
je
jo
rol
xor
imul
pop
inc
push
popa
rcr
or
sub
lods
push
je
push
xor
pop
xchg
call
pop
jl
ret
iret
pop
or
add
retf
jl
pop
add
push
in
call
dec
es
push
push
add
cmps
adc
push
fs
cmp
pop
ret
dec
adc
add
dec
push
mov
xchg
or
xor
mov
ss
sti
pop
inc
dec
push
push
inc
push
jb
rcl
push
lahf
les
cdq
pusha
add
and
aaa
cld
mov
or
hlt
inc
ins
imul
pop
push
xchg
sbb
add
inc
adc
mov
inc
cmps
pop
mov
into
mov
cmc
int3
nop
lods
mov
imul
mov
jle
or
jb
jbe
pusha
test
dec
xchg
mov
cmp
dec
push
inc
pop
xchg
mov
(bad)
pop
inc
or
jb
inc
test
xchg
gs
sub
mov
jae
outs
jb
test
cmp
int
push
xor
lds
adc
mov
adc
outs
inc
ins
into
(bad)
jns
stos
ss
add
jg
push
les
inc
sub
das
outs
push
call
push
jg
jl
jge
dec
repnz
dec
xor
shl
add
and
inc
pushf
popa
ins
icebp
test
xor
sub
add
inc
add
inc
mov
daa
dec
jbe
ja
add
add
xchg
pop
aas
fcom
jmp
mov
inc
rcr
cmp
shl
(bad)
adc
adc
add
or
mov
lock
dec
into
fsub
or
jge
test
jge
and
les
in
mov
and
and
or
cmps
fwait
je
xor
or
pusha
popf
rcr
ret
mov
sti
inc
push
sti
(bad)
jle
in
mov
cmps
push
test
je
stos
outs
lods
mov
push
lock
lds
mov
mov
hlt
inc
out
cmp
rcl
and
mov
add
test
je
pushf
rcr
int3
pop
daa
js
shl
in
nop
sbb
and
js
and
fcmovbe
or
or
add
or
xor
mov
and
rcr
aaa
adc
jle
sub
pop
pop
outs
adc
pop
test
or
daa
shl
cmps
lock
test
test
push
push
fbstp
jbe
das
push
dec
test
jl
inc
ins
lea
fstp
cmp
push
or
inc
and
mov
shl
mov
or
dec
jne
and
mov
ins
cmp
lea
cmps
sbb
mov
ret
nop
pop
push
inc
and
add
cmp
fbstp
add
(bad)
addr16
add
nop
mov
pop
aas
cmp
ret
fcmovbe
les
lea
jb
add
jb
and
pushf
jle
outs
mov
out
bound
mov
(bad)
fidiv
movs
or
add
rol
xchg
pop
cmp
pop
(bad)
xlat
mov
push
or
out
xor
xor
jl
xor
cmp
lea
jg
adc
add
push
push
fcmovu
and
pop
in
adc
add
add
nop
sbb
adc
or
ss
rol
add
mov
or
cmp
test
lds
mov
in
pop
jecxz
push
pop
push
push
sbb
mov
cmps
and
add
sbb
out
repz
cmp
sar
mov
cld
mov
nop
push
ret
std
inc
sbb
ins
sub
in
sti
clc
or
jmp
xchg
push
xor
sbb
mov
mov
ror
adc
push
repnz
dec
mov
sar
mov
fld
push
call
mov
mov
cld
lea
inc
pop
push
add
es
push
xchg
xor
out
in
xor
icebp
cli
ja
outs
cli
add
add
push
test
add
rol
data16
pop
xchg
test
mov
popa
ja
jo
inc
cmps
(bad)
xchg
pop
mov
invd
jmp
ss
lods
adc
ret
call
int
les
sub
adc
jle
imul
ja
push
adc
add
cmp
mov
div
scas
fmul
ss
cs
or
pushf
pop
mov
(bad)
es
fcomp
adc
outs
add
nop
add
daa
setl
xor
xchg
stos
jb
popa
jb
push
add
add
add
inc
inc
(bad)
fild
inc
dec
ja
gs
shr
popa
arpl
pusha
inc
xor
push
inc
jg
popa
ja
gs
and
or
pusha
inc
inc
or
mov
or
pop
push
jl
arpl
sbb
sub
dec
mov
outs
jae
cmp
xchg
ret
add
push
xor
aaa
shl
dec
popa
cs
and
add
adc
sub
add
mov
addr16
xor
imul
or
xor
sbb
cmp
into
inc
lock
push
je
cmp
sbb
dec
mov
cmp
xchg
gs
inc
sbb
push
outs
movs
xor
cdq
cmp
popa
cmp
sbb
das
push
xchg
pop
sbb
xchg
jne
outs
ins
iret
fwait
sbb
pop
xor
out
add
xchg
inc
js
imul
push
fisttp
push
cmp
int
jo
call
or
and
mov
popa
and
jl
adc
push
imul
or
pop
and
sub
dec
out
lahf
ss
add
dec
add
inc
rcr
push
test
loop
retf
fmul
adc
mov
out
jns
test
outs
xor
mov
adc
out
push
shl
pushf
and
(bad)
jbe
shl
test
cmp
ss
cmp
dec
or
aad
mov
mov
test
pop
mov
pop
daa
pop
popf
jns
cmp
scas
push
nop
dec
push
push
push
xor
and
push
dec
pop
ja
jecxz
test
scas
lds
ror
inc
inc
outs
dec
push
inc
ss
out
push
adc
scas
adc
adc
pop
pop
out
stos
inc
push
mov
pop
stos
xor
push
lock
inc
add
cmp
jl
stc
scas
sbb
dec
jae
out
dec
jo
rcr
mov
push
push
lea
(bad)
push
jge
mov
push
or
sbb
stos
inc
mov
or
int
jmp
mov
dec
push
dec
xchg
mov
add
(bad)
push
or
add
inc
mov
push
push
cmp
mov
xor
sbb
cmp
xor
scas
outs
push
inc
adc
pop
or
push
cs
dec
adc
xor
pop
inc
adc
(bad)
lods
adc
sbb
xchg
cmp
arpl
mov
mov
mov
pop
sbb
scas
in
test
mov
lds
push
test
jo
je
pop
adc
dec
fsubr
mov
add
stos
mov
mov
scas
adc
ror
pop
mov
lods
cmps
andnps
add
mov
push
rcl
test
sub
(bad)
stos
cmp
ficomp
mov
dec
push
and
das
and
nop
push
and
es
not
mov
test
test
mov
test
add
adc
and
pop
imul
or
or
sub
add
test
mov
jbe
leave
xchg
or
gs
add
not
inc
jns
gs
jne
test
cmp
ret
jmp
cmc
push
inc
push
xchg
push
cs
pusha
cmp
push
ret
cmps
push
pusha
add
mov
mov
jo
leave
cmp
cwde
push
sbb
sbb
lds
bound
mov
stc
and
sbb
mov
jbe
jmp
cmp
sbb
mov
adc
or
adc
pop
dec
mov
pusha
cmp
arpl
adc
cmc
push
adc
adc
dec
pop
xchg
jmp
mov
or
lods
enter
xchg
push
or
(bad)
fdivp
cmp
xchg
jecxz
in
inc
popa
pop
inc
or
sub
xchg
mov
or
dec
mov
fs
adc
or
xchg
arpl
pop
pop
jnp
shl
sbb
mov
hlt
es
jl
dec
push
sub
xchg
pop
mov
mov
xchg
sbb
cmp
loopne
mov
shr
dec
xor
fld
(bad)
call
mov
adc
sub
mov
imul
dec
jne
data16
in
les
mov
push
and
lock
or
dec
mov
cmp
pop
jno
push
xchg
mov
ins
fcom
push
xchg
lods
add
arpl
fwait
pop
test
mov
fbld
mov
or
pop
push
or
adc
push
push
int
rol
les
mov
and
push
lods
scas
scas
or
push
xor
retf
fld
pusha
add
jp
call
xlat
sahf
xchg
xor
cmp
xor
dec
lea
push
add
sub
scas
inc
push
and
pushf
div
lock
mov
sahf
out
pop
mov
ins
mov
adc
jnp
sub
jg
and
jmp
sbb
inc
mov
and
push
and
or
mulps
push
cld
jae
add
xor
push
push
and
mov
add
fs
mov
push
add
or
pop
sub
sbb
mov
jmp
adc
push
call
jecxz
cwde
sar
sbb
xor
and
ins
push
pop
cmp
push
inc
push
popa
ins
jne
jnp
adc
pop
push
pop
frstor
adc
fwait
cmp
pop
push
arpl
mov
jecxz
int3
mov
push
test
(bad)
add
cmp
sbb
imul
sbb
into
imul
lahf
cmp
fcom
movs
push
test
add
imul
mov
pop
inc
sub
pop
mov
push
loopne
mov
outs
mov
setl
xchg
cwde
pushf
pushf
pushf
pushf
pushf
mov
pushf
pushf
lods
mov
(bad)
loopne
push
out
fild
les
jmp
loope
inc
inc
arpl
jo
test
push
sbb
aam
fdiv
pop
inc
add
push
cwde
xor
and
js
xor
jge
inc
inc
jb
mov
adc
sbb
test
or
push
(bad)
adc
aaa
inc
rol
frstor
pop
or
and
or
lods
add
pop
ss
dec
pop
or
mov
adc
jmp
jae
lea
jmp
xor
or
jb
shl
into
push
jp
test
xor
or
test
push
movs
loope
cmp
call
sbb
lds
(bad)
and
push
inc
lock
cmp
pop
leave
imul
push
push
setno
pop
sbb
adc
inc
retf
push
rol
fdivr
pop
inc
adc
ja
out
pop
dec
push
shl
adc
les
add
xor
ja
pop
push
pop
adc
adc
pop
cmp
and
sbb
add
lods
sbb
cdq
cmp
pop
sbb
sbb
mov
ror
inc
push
adc
pop
in
mov
inc
inc
sbb
dec
or
inc
inc
shr
add
push
rol
cld
es
fdivr
pop
inc
pop
push
pop
mov
ds
push
or
and
cmp
jo
outs
pop
call
aas
and
(bad)
dec
or
pop
and
sub
add
pop
and
xchg
or
mov
xchg
mov
sahf
loop
mov
loopne
jbe
jl
pop
jg
lock
mov
sub
pop
jne
mov
dec
push
in
xchg
push
jp
xor
dec
scas
loopne
xlat
push
cmc
pop
inc
mov
xlat
mov
aam
adc
mov
shl
out
mov
(bad)
add
arpl
or
das
retf
mov
cmp
push
add
add
pop
pusha
loopne
adc
xchg
mov
jb
add
cmp
xor
and
and
jo
add
push
xor
push
stos
(bad)
xlat
pop
sub
add
and
sbb
out
add
cmps
add
(bad)
jno
or
inc
dec
cmp
inc
add
jno
outs
inc
shl
or
mov
sub
mov
mov
lds
sahf
cwde
scas
adc
or
inc
popa
pop
jnp
push
dec
adc
ror
push
test
pop
add
sub
cwde
push
(bad)
and
add
movs
or
fdiv
cmp
sbb
pop
loope
mov
outs
pop
sbb
sbb
add
and
cmp
ins
nop
mov
out
cwde
jg
adc
pusha
pusha
add
fsub
sub
fldenv
daa
push
popf
inc
dec
sti
scas
data16
adc
lds
ret
inc
jno
imul
fmul
jae
xor
std
inc
(bad)
std
mov
or
push
fadd
push
pop
mov
dec
dec
add
fs
setg
xlat
or
xor
ins
add
call
das
add
add
jl
pop
adc
scas
aam
xor
sub
add
jp
scas
xor
jbe
jmp
add
jb
push
sub
jmp
sub
shl
les
idiv
ins
je
icebp
mov
mov
xor
mov
sbb
aam
ja
mov
outs
outs
and
pop
hlt
inc
idiv
movs
mov
and
mov
sbb
push
jp
fld
pop
int3
fs
xlat
add
and
pusha
xor
push
pushf
add
or
adc
push
adc
nop
push
(bad)
out
and
outs
sbb
lock
mov
mov
add
inc
mov
xor
mov
xor
(bad)
xor
and
mov
xor
mov
and
mov
jl
mov
adc
mov
adc
fimul
and
mov
adc
cmp
test
je
(bad)
sti
sbb
sti
je
mov
je
cwde
xor
dec
adc
sbb
out
mov
adc
pop
call
sub
xor
xor
xor
xor
call
cmp
inc
dec
rcr
je
dec
imul
or
push
cmp
pusha
or
cmp
call
or
mov
test
unpcklps
jo
into
ror
setns
or
lea
(bad)
jbe
movs
jns
or
cmp
xor
inc
pusha
jo
xor
jle
ror
jle
dec
dec
and
or
das
xchg
ret
dec
pop
lea
push
mov
mov
adc
dec
jne
adc
inc
lock
push
push
rcl
and
mov
mov
jo
and
scas
fsub
rcr
inc
ins
dec
cmp
jae
inc
repz
fcom
and
dec
xor
inc
mov
mov
test
jns
xchg
dec
rol
mov
and
inc
push
daa
int
pop
and
inc
inc
enter
in
and
push
sbb
mov
dec
mov
push
test
mov
sub
jne
or
(bad)
clc
fdivrp
xchg
shr
setge
mov
mov
xor
inc
push
inc
fidiv
lds
pop
inc
and
push
xchg
sub
cmp
imul
cld
les
cmp
lea
push
push
cld
mov
mov
dec
daa
sbb
push
les
inc
clc
nop
xchg
cs
in
mov
xor
bound
cld
ins
dec
or
mov
sub
xchg
int3
sub
mov
inc
mov
cmps
jnp
sti
dec
mov
adc
cld
sbb
jae
cmp
pop
pop
fwait
jmp
sbb
daa
ins
jb
sub
mov
mov
mov
dec
inc
je
jmp
mov
je
pop
sub
pop
fs
in
xor
or
add
jmp
jl
or
ins
call
faddp
cmps
pusha
push
push
mov
fwait
(bad)
adc
ror
jmp
xlat
jl
mov
push
cmp
pop
sub
ja
js
jmp
jmp
fld
pop
mov
inc
cli
jl
dec
mov
and
cmp
cs
xchg
rol
inc
and
inc
js
lods
xchg
lods
shl
push
dec
add
mov
mov
cmp
mov
sbb
mov
or
push
jp
jmp
ror
add
repnz
add
jae
mov
push
ins
dec
pop
dec
aaa
add
add
dec
dec
xchg
sbb
inc
out
xchg
cmp
sahf
fcomp
push
adc
xor
in
scas
inc
dec
push
jo
pop
ret
rcr
adc
addr16
shr
pop
pop
int3
scas
sbb
(bad)
dec
jne
or
mov
dec
pop
nop
cwde
inc
test
dec
ror
out
scas
adc
add
push
mov
xor
stos
dec
ss
mov
inc
pop
das
aas
xchg
add
jle
adc
or
push
inc
adc
pusha
out
repz
push
jo
int3
scas
pushw
dec
adc
push
cdq
sub
js
xor
pop
mov
(bad)
inc
shr
push
inc
cs
xlat
push
icebp
push
out
xor
outs
pusha
xlat
or
cs
or
adc
cmp
add
bound
repnz
sub
push
add
jnp
xor
push
add
stos
or
adc
movs
ret
and
adc
rol
(bad)
out
adc
mov
mov
inc
cmp
aas
push
mov
stos
or
add
sbb
cmp
and
push
in
mov
pop
push
or
adc
dec
and
imul
push
jnp
jle
xchg
xor
push
push
push
add
add
mov
clc
sbb
rol
or
or
idiv
fldz
fcomp
fstsw
sahf
jae
pop
add
mov
mov
js
clc
mov
mov
cld
fld
mov
mov
pop
xor
xchg
js
pusha
push
sbb
mov
inc
daa
push
mov
adc
mov
push
sbb
jae
(bad)
jmp
fstp
adc
in
lock
and
aas
sbb
cmp
pop
mov
push
pop
or
pop
sub
add
sbb
std
jmp
add
shl
cmps
mov
push
test
push
ss
xchg
xor
and
mov
pop
(bad)
clc
jno
or
mov
or
cmp
or
cmp
sub
jns
jns
adc
dec
or
scas
mov
add
repnz
test
adc
jne
mov
in
sub
shl
bound
cs
hlt
jmp
loopne
pop
cdq
aam
std
test
inc
sbb
jne
jmp
les
adc
cld
sbb
cld
push
mov
es
and
js
mov
mov
jge
mov
aam
pcmpgtb
frstor
cmc
mov
jmp
add
or
push
and
inc
pop
mov
adc
pop
pop
rcr
sub
sbb
adc
cmps
es
sbb
mov
xor
adc
cmp
jmp
sahf
scas
dec
sbb
add
sub
dec
enter
adc
pop
jb
aas
fdivrp
mov
push
add
cmp
xor
inc
(bad)
or
xor
(bad)
jns
inc
loope
out
mov
mov
int3
sahf
daa
inc
add
call
mov
pusha
push
pop
test
je
xor
ret
aas
dec
xchg
add
sti
jmp
sub
jne
lahf
push
jge
and
ja
leave
pop
add
or
(bad)
push
cmps
pcmpeqd
das
sqrtps
or
add
lods
xlat
ds
xchg
(bad)
cmps
xlat
in
jge
movs
dec
(bad)
xor
jmp
adc
shr
call
mov
sbb
jp
bound
test
dec
(bad)
out
cli
loope
mov
mov
aam
pushf
lods
jmp
lock
push
mov
sub
dec
cmp
inc
jle
push
cmp
jbe
push
inc
mov
lock
cmp
inc
or
ror
sub
push
test
test
mov
(bad)
out
cwde
into
inc
sub
mov
sbb
ss
adc
sbb
and
and
mov
mov
ins
push
ret
xchg
sbb
push
scas
fidivr
inc
xchg
cs
pop
add
adc
jp
aas
adc
outs
mov
imul
mov
outs
movs
sbb
cs
push
sub
js
mov
les
(bad)
scas
ja
ds
adc
or
movs
sbb
adc
sbb
and
and
push
add
adc
mov
add
pusha
adc
pop
sti
adc
add
adc
push
jb
shr
lods
add
pop
cmp
std
xchg
adc
and
sub
and
sahf
and
and
sbb
mov
add
xchg
dec
jmp
imul
mov
shr
dec
repz
mov
pop
push
and
and
in
add
dec
pop
mov
add
cmps
mov
xor
mov
add
pop
jp
test
pop
pop
outs
scas
cmc
shr
jmp
cs
inc
out
mov
pusha
leave
mov
cmc
adc
push
stos
push
add
sbb
mov
push
cwde
popa
retf
adc
iret
jnp
add
sbb
inc
mov
fsubr
outs
adc
ror
adc
cmp
test
movs
and
jmp
mov
mov
jbe
mov
add
lock
js
ret
stos
movs
mov
pop
add
push
pop
and
adc
bound
sub
(bad)
and
jmp
push
jo
adc
and
mov
mov
add
and
imul
mov
mov
idiv
xor
add
adc
push
popf
sbb
pop
pusha
mov
sbb
mov
xor
inc
dec
jne
cmp
jg
push
push
xor
mov
xlat
xor
xchg
and
push
sub
cmp
ror
call
push
mov
mov
mov
(bad)
sar
aas
(bad)
clc
(bad)
nop
(bad)
dec
cmps
shr
loopne
ins
pop
mov
inc
ins
adc
mov
sbb
push
push
mov
sbb
or
fcom
mov
inc
mov
push
je
bound
cmp
mov
dec
test
jl
inc
xor
lea
sub
call
dec
or
xchg
or
inc
shl
outs
(bad)
cli
ins
nop
scas
es
dec
das
cmp
sahf
xor
sub
loope
xor
inc
dec
jne
jmp
jmp
cmp
fiadd
cmp
adc
pop
and
push
cmps
and
cmp
leave
add
test
push
pop
shl
pop
mov
dec
out
and
mov
or
in
in
sbb
or
dec
sub
mov
lahf
jg
icebp
adc
mov
mov
(bad)
je
or
lahf
test
xchg
pop
xor
(bad)
adc
out
add
ror
mov
add
cmp
sub
out
gs
mov
mov
clc
pop
dec
mov
pop
sti
mov
pop
rcr
xor
fisttp
pop
hlt
outs
cmp
or
lock
add
ins
cmp
mov
adc
in
call
pop
repnz
and
cmp
mov
xchg
xor
loopne
ins
loopne
and
test
mov
mov
cmp
ret
jge
dec
fdivr
nop
jbe
jbe
ja
(bad)
sbb
sbb
inc
mov
cwde
sbb
sahf
inc
push
add
pusha
daa
and
sbb
imul
push
push
dec
mov
out
push
sti
dec
inc
or
push
ins
dec
jp
dec
int3
repz
inc
(bad)
dec
mul
adc
imul
cmp
cmp
jb
sub
mov
pop
mov
push
jo
push
push
pop
push
push
add
dec
sti
inc
dec
cmp
repnz
dec
add
jecxz
ss
or
cmps
jmp
les
inc
push
mov
or
and
dec
and
inc
push
pop
xchg
and
xchg
and
xchg
or
sahf
and
cwde
and
fisub
pop
and
xchg
push
repz
and
movzx
or
inc
push
(bad)
ret
cmp
xchg
xchg
sub
sahf
push
adc
pop
or
sub
mov
push
sbb
or
add
aaa
(bad)
fild
and
inc
ret
popf
pusha
adc
push
mov
cmp
add
test
and
arpl
cmp
or
sbb
test
inc
adc
fadd
add
test
cs
daa
or
fwait
cmp
das
addr16
loopne
test
int
sub
inc
ds
mov
dec
fdivr
mov
lea
test
mov
pop
or
bound
call
ja
dec
and
stc
pusha
or
dec
ins
mov
shl
dec
and
push
xor
dec
dec
and
inc
or
and
adc
dec
loop
mov
and
(bad)
scas
and
inc
cmp
add
add
adc
jbe
xlat
clc
stc
mov
jge
les
je
cmp
pop
repnz
frstor
stc
xor
dec
daa
adc
xor
test
out
imul
push
sbb
imul
and
mov
icebp
sub
or
addr16
sub
xor
or
lods
mov
add
push
dec
stos
lahf
imul
xchg
imul
test
outs
push
adc
iret
loopne
daa
push
out
inc
dec
pop
imul
inc
iret
mov
inc
hlt
ror
movs
mov
daa
inc
test
aas
jne
inc
gs
or
jo
sbb
push
mov
push
pusha
push
jo
mov
pusha
add
push
xor
jge
and
sub
popa
ret
push
mov
pusha
dec
xor
jl
hlt
mov
and
jl
cmp
sbb
push
out
popf
fild
push
fwait
lea
cmp
jecxz
mov
cmp
mov
inc
mov
mov
test
in
mov
shl
mov
lods
or
outs
call
fild
mov
jno
xchg
ret
stos
mov
jmp
(bad)
jmp
pop
push
add
(bad)
retf
aas
jmp
add
adc
dec
xchg
scas
repz
dec
sub
dec
adc
nop
rol
jmp
loope
and
inc
arpl
pop
jmp
movs
cmp
out
stos
push
setne
mov
dec
push
test
cmp
in
shl
in
push
loopne
shl
inc
mov
loopne
push
(bad)
out
pop
fstp
in
sub
ret
inc
fisub
fcom
(bad)
mov
pop
pop
cmp
mov
fld
xchg
pcmpgtb
rol
sahf
sbb
adc
ret
popa
pop
test
in
push
test
int3
sub
mov
call
sub
dec
psrad
gs
ja
push
xchg
adc
das
inc
call
jmp
outs
lods
sub
jmp
stos
push
comiss
xor
test
pop
pop
inc
inc
mov
fbld
loope
ror
and
sbb
pop
mov
push
js
loopne
ror
jecxz
sub
pop
cmp
mov
loope
pop
jecxz
sbb
push
jnp
inc
sub
sub
aam
xor
addr16
cmp
ret
add
jge
sbb
inc
dec
cmp
push
jmp
xchg
pop
push
inc
inc
sbb
stc
les
dec
jne
cmps
or
mov
adc
clc
jb
push
mov
mov
retf
(bad)
das
jl
sar
daa
lock
inc
add
js
add
push
and
out
cmp
cmp
xor
ja
mov
into
dec
int
enter
mov
movs
idiv
mov
adc
fdiv
adc
add
or
ins
outs
mov
mov
push
or
sub
push
cwde
push
call
pop
outs
add
pop
(bad)
xchg
add
and
gs
jo
clc
lods
push
cmovbe
jb
popa
je
gs
jge
sti
push
gs
jns
ins
int3
xchg
adc
or
push
gs
jae
daa
imul
sbb
ja
mov
stos
push
cli
pop
add
add
inc
(bad)
push
push
out
or
cdq
nop
push
dec
(bad)
mov
fndisi(8087
out
jbe
pop
adc
dec
adc
inc
xchg
push
adc
adc
jbe
mov
hlt
(bad)
in
or
add
aad
inc
ins
gs
jb
cld
loopne
mov
or
or
data16
inc
adc
add
dec
push
inc
jb
or
nop
popa
dec
add
aam
jo
sti
push
mov
or
ins
cwde
arpl
outs
jne
mov
jl
lea
fst
pop
add
mov
pusha
sub
daa
rol
sbb
pop
and
outs
jns
cmp
sub
pop
(bad)
or
inc
outs
fs
into
imul
inc
ficomp
sub
push
sub
add
jl
out
std
jle
cmp
or
push
popa
imul
push
fsubr
(bad)
adc
push
or
data16
in
sbb
lahf
or
xchg
movs
sbb
pushf
cmp
popa
jo
and
in
sbb
mov
mov
pop
or
mov
or
loop
retf
or
fs
sub
aad
pop
lea
pop
jns
cdq
outs
imul
inc
add
(bad)
cld
mov
add
imul
xchg
mov
push
add
idiv
xchg
xchg
ss
xor
pop
or
into
bound
cmc
pop
or
xor
sbb
cmp
xor
icebp
mov
or
ins
add
arpl
and
rcl
or
jae
fdivr
xor
xor
add
ins
aaa
or
xor
pcmpeqd
lock
cwde
out
rcr
add
push
jl
cmp
out
test
mov
xor
push
and
fs
loopne
sbb
and
push
pop
xchg
push
jno
ror
add
stos
push
out
push
and
and
mov
imul
dec
push
push
mov
(bad)
jae
jbe
fild
mov
stos
sub
inc
add
scas
pusha
pop
or
mul
mov
int3
nop
or
inc
dec
ja
jb
mov
pop
ins
pop
mov
push
aas
xchg
add
mov
xchg
jecxz
inc
sti
mov
mov
scas
es
xchg
adc
mov
and
ds
fld
pop
inc
push
dec
ret
lds
jb
add
popf
jge
dec
jo
inc
mov
inc
jg
sub
imul
push
jle
mov
ins
add
imul
scas
movs
popf
add
sub
push
cdq
add
cld
push
rcl
mov
jle
pop
cmps
cwde
add
femms
sbb
retf
dec
hlt
mov
adc
(bad)
cmp
mov
mov
outs
add
add
push
mov
inc
adc
iret
sbb
adc
sub
aaa
adc
or
fadd
out
es
mov
or
je
mov
xchg
fstp
mov
clc
mov
add
iret
dec
syscall
jns
mov
mov
push
popa
xor
lea
or
inc
setbe
std
pop
push
lds
movs
ins
mov
mov
mov
inc
push
inc
pop
ret
push
popa
rol
jge
xchg
add
dec
mov
jmp
aam
inc
test
movs
mov
es
adc
inc
adc
sbb
scas
jns
inc
arpl
push
push
add
enter
(bad)
out
and
js
icebp
cmp
or
shr
push
imul
orps
test
sbb
adc
jnp
arpl
mov
or
or
cmps
out
xlat
adc
pop
cmp
xor
push
mov
(bad)
sbb
(bad)
jg
out
cmp
stos
leave
push
retf
push
jle
ss
add
pusha
scas
and
lods
dec
and
lock
aad
sbb
add
sbb
je
in
fwait
in
and
mov
(bad)
into
adc
push
sub
mov
fwait
aad
inc
and
pop
into
mov
jnp
xchg
add
cmp
xchg
mov
adc
sbb
dec
mov
and
in
test
push
loopne
rcr
push
loopne
and
lock
pop
pmovmskb
xor
data16
ds
push
xchg
push
add
pop
adc
push
push
mov
xlat
jge
xor
test
dec
fwait
ds
push
or
or
ror
je
ss
dec
test
jl
(bad)
cmp
fisttp
mov
xor
sbb
sub
faddp
sbb
in
mov
dec
jne
fist
into
push
aaa
xchg
ror
lods
test
pop
pop
push
fdivr
rcr
retf
and
xor
pushf
fld
or
mov
add
shr
rcr
mov
das
fimul
pop
retf
jge
add
fild
jl
add
pop
dec
dec
mov
jnp
enter
xor
nop
or
add
and
mov
push
jne
loopne
jmp
and
hlt
movups
inc
cmp
call
inc
int3
idiv
data16
ret
bound
pop
dec
dec
sti
add
icebp
ins
or
shr
cmp
lods
push
adc
push
ja
push
xor
inc
push
das
movs
mov
xor
dec
shld
jle
test
or
frstor
push
jmp
xor
dec
push
fwait
push
je
mov
cmp
sti
dec
push
test
push
pop
sub
mov
push
imul
inc
mov
push
jl
aas
inc
or
jae
addr16
xchg
sbb
pop
fldenv
sbb
shl
popa
inc
add
xor
rol
add
or
addr16
test
ja
mov
in
mov
jae
lea
not
pop
mov
xor
nop
xchg
add
fs
aam
lock
sti
call
out
inc
or
mov
lds
jmp
adc
inc
cmp
mov
pop
test
mov
outs
loope
jnp
pop
sub
(bad)
adc
mov
lock
repz
xor
mov
clc
hlt
xor
sub
add
xor
les
les
and
jo
xchg
int3
in
mov
mov
loope
dec
cmp
int3
bound
in
pop
inc
in
retf
sbb
aas
enter
dec
hlt
jne
jmp
mov
or
pop
push
(bad)
xor
xor
repnz
ret
mov
outs
jecxz
pop
cmp
pop
lahf
add
mov
ret
jmp
fld
cmp
sete
ret
push
sub
pop
xchg
pop
xor
loope
xor
enter
clc
push
enter
test
jno
and
add
ja
push
jg
in
dec
loopne
dec
jg
enter
sub
(bad)
test
xchg
lock
adc
daa
mov
adc
test
sub
bound
loop
and
ds
in
mov
imul
mov
add
(bad)
ss
test
jl
inc
(bad)
sub
loop
dec
lea
inc
add
or
jg
test
in
in
mov
cmp
adc
dec
jne
add
adc
ret
push
add
stos
in
in
fcmovnb
dec
or
mov
(bad)
scas
push
mov
or
inc
fdecstp
fiadd
push
mov
sti
das
inc
test
push
sub
scas
or
sbb
jg
lods
push
jg
ds
pop
sub
data16
sar
mov
sbb
je
mov
push
nop
fidivr
out
mov
test
jl
ins
pop
jmp
sti
push
rcl
cwde
xchg
sub
inc
dec
mov
cmps
hlt
jbe
and
push
xor
and
popa
jae
or
push
add
xchg
rol
(bad)
jg
or
dec
fs
gs
imul
dec
cmp
std
jg
or
jns
push
lock
xor
js
push
retf
hlt
call
paddw
ss
inc
outs
jmp
inc
mov
mov
repnz
stc
out
xor
dec
adc
lods
iret
dec
les
loopne
push
outs
arpl
jo
add
or
movlps
and
inc
dec
dec
jb
(bad)
push
mov
fst
fs
test
sub
push
add
jo
xor
jo
loope
dec
sub
stos
or
xchg
outs
pop
mov
push
test
push
fidiv
(bad)
movs
inc
pop
das
mov
mov
fcom
(bad)
pop
test
push
ret
popa
cli
jno
inc
scas
dec
stc
inc
lods
sub
push
enter
mov
test
mov
loopne
xor
call
lds
popf
mov
pop
arpl
push
xchg
(bad)
fild
int
stos
pop
mov
dec
xor
or
jne
cmp
cmc
jp
pop
or
int
xor
adc
sub
cmps
or
clc
add
pop
push
sub
push
cmp
jnp
ja
dec
out
in
fisttp
inc
add
inc
add
inc
inc
dec
adc
mov
adc
sbb
pop
out
or
push
adc
nop
or
or
add
add
pop
lods
add
jmp
outs
les
or
je
outs
sbb
inc
mov
mov
inc
jne
data16
out
cmp
inc
jne
inc
arpl
fbld
jg
pop
add
jbe
(bad)
jg
cmp
inc
push
outs
outs
dec
jne
jnp
add
jnp
lods
mov
adc
je
push
sar
outs
test
mov
inc
or
lds
and
pop
push
dec
bound
int
xchg
xchg
loopne
pop
mov
mov
pop
add
push
cdq
adc
(bad)
scas
xor
scas
or
jne
jno
pop
fdivr
nop
pop
add
js
push
stos
ja
jbe
push
cmp
das
ds
inc
add
outs
inc
sub
and
lea
gs
sahf
ss
mov
fadd
xor
inc
sbb
adc
arpl
imul
adc
je
inc
popa
(bad)
dec
ins
cs
and
inc
dec
gs
lock
lods
fs
leave
sub
mov
popa
xor
add
ss
aas
sbb
out
add
(bad)
out
ins
push
or
pushf
xor
xchg
ror
loop
mov
pop
ja
xchg
push
fdivr
mov
movd
dec
in
enter
clc
xor
in
mov
out
xchg
jb
repnz
xor
push
cmp
sbb
call
pushf
pushf
pushf
mov
loope
pop
inc
sbb
push
or
and
mov
adc
dec
rcr
es
test
aas
in
dec
arpl
xchg
bound
or
xchg
cmps
out
inc
add
test
bound
or
mov
add
jo
adc
add
fs
(bad)
xchg
les
std
mov
test
lock
jo
adc
mov
or
popa
outs
push
push
sbb
pushf
adc
pop
mov
dec
retf
sub
jmp
aad
add
or
and
mov
ror
popa
std
pop
es
inc
sti
add
mov
pop
push
ud1
push
push
dec
pop
add
ds
out
leave
retf
add
push
push
ror
xor
inc
or
rol
mov
sbb
add
cmp
rol
dec
adc
arpl
adc
outs
sbb
dec
retf
hlt
xor
jae
adc
push
retf
aaa
cmp
inc
jns
lds
sub
popf
ret
and
(bad)
xor
or
push
dec
in
add
fwait
ror
or
int
jns
and
adc
jns
clc
add
lahf
movs
adc
xor
dec
outs
mov
clc
ds
test
pop
adc
xor
mov
add
dec
ja
pop
cwde
icebp
dec
push
jbe
pop
jns
sbb
pushaw
mov
push
mov
xor
inc
dec
data16
sub
scas
call
retf
or
fidiv
xchg
dec
add
test
stc
xchg
push
bound
push
push
pop
dec
pop
lods
div
aam
push
or
xchg
mov
scas
idiv
add
cmp
mov
push
or
sbb
or
popa
outs
sar
fisubr
push
and
jecxz
lock
sbb
pop
ja
mov
mov
mov
jae
inc
lods
push
adc
xchg
call
add
and
data16
fbld
imul
or
and
adc
imul
cmp
xchg
mov
sbb
sti
add
or
or
xchg
jns
aad
mov
adc
xchg
push
pop
jne
addr16
xor
fidiv
ror
pop
jmp
mov
aam
sub
mov
ret
and
cli
push
cmp
and
inc
sub
loope
pop
inc
or
xchg
inc
dec
or
push
pop
xchg
add
cwde
ret
push
add
and
in
inc
jae
scas
xor
push
call
shr
push
mov
mov
dec
and
mov
rcr
jge
and
dec
aam
pop
leave
je
das
inc
movs
pop
mov
and
jae
in
out
(bad)
jg
cmp
jne
add
mov
jmp
mov
adc
sar
clc
cmp
mov
push
sub
push
pop
bound
and
fsub
or
jo
pusha
xchg
enter
lods
outs
jp
lock
sub
mov
push
xchg
mov
addr16
fcom
das
pop
sub
push
push
sbb
mov
add
adc
and
aam
cmps
pusha
and
or
cmp
pop
jl
and
jg
pop
loop
pop
pop
loopne
xchg
xchg
mov
das
test
xchg
push
mov
ds
das
out
add
mov
sbb
add
push
daa
cld
add
mov
mov
cmp
shl
jae
dec
mov
das
loopne
push
inc
test
jge
mov
jle
adc
jne
enter
push
and
test
lds
iret
shr
push
outs
cwde
jp
or
adc
clc
iret
pop
ret
add
test
jmp
sub
sbb
mov
sbb
mov
shl
inc
test
adc
add
pop
push
push
fcomip
adc
fmul
add
(bad)
cmp
loopne
movs
mov
push
movs
dec
adc
fidiv
int3
cmp
cs
push
adc
add
add
lea
cmps
cmp
ins
(bad)
(bad)
add
das
xor
pop
cmp
loope
add
idiv
push
cmp
cwde
push
repz
or
inc
fstp
in
adc
out
ret
nop
mov
hlt
pop
cld
out
ror
or
xor
push
mov
hlt
shr
daa
sbb
iret
loopne
dec
ror
push
add
loopne
jmp
jl
xchg
aam
or
jp
(bad)
pusha
inc
daa
dec
pop
out
push
shl
mov
or
ror
pop
xchg
or
imul
stos
sbb
jae
jl
add
std
mov
jae
sub
les
push
jmp
lock
or
or
push
mov
cmp
call
mov
xchg
rol
adc
dec
adc
stos
add
lock
dec
rcl
and
mov
hlt
fs
pop
loope
sub
add
and
inc
ror
sbb
cmps
cmp
push
pusha
pop
(bad)
lods
inc
and
cmp
clc
out
cmps
outs
ins
push
gs
pop
push
mov
imul
fadd
mov
pop
or
and
ret
in
or
ret
jle
cmp
into
leave
or
(bad)
popf
out
sub
push
ins
scas
loopne
repnz
sbb
cmps
pop
ss
mov
pop
cmp
mov
inc
pusha
arpl
add
pop
(bad)
or
sub
push
inc
or
add
shr
or
sub
jl
je
mov
push
loope
or
in
dec
test
jl
inc
pusha
lea
cmp
jge
(bad)
jle
(bad)
mov
movzx
in
cmp
je
push
add
add
dec
outs
out
shl
jbe
je
mov
sub
stos
hlt
jmp
inc
adc
dec
in
mov
retf
fdiv
shr
mov
lock
inc
sbb
mov
pop
xchg
add
cmp
add
add
push
scas
inc
lds
or
jo
add
jle
arpl
imul
call
push
sbb
fidiv
add
ins
add
jb
xor
fdivr
outs
jp
add
lods
loopne
add
push
and
and
add
and
lock
ret
dec
or
push
jl
add
test
and
cvttps2pi
jge
fld
jne
(bad)
add
sub
mov
inc
xchg
or
mov
and
or
int
ret
pop
in
pop
add
mov
xchg
loope
sbb
fnsetpm(287
int3
xor
jmp
(bad)
dec
das
vrcpps
and
scas
outs
mov
(bad)
sub
sbb
add
test
inc
or
stos
lock
push
shl
jmp
push
sub
movs
jl
add
push
sbb
arpl
sub
xor
jns
cwde
mov
ins
inc
or
ret
xchg
add
pop
mov
mov
sbb
pop
xchg
jl
arpl
je
imul
jp
pop
cmp
inc
mov
int3
or
cmps
xor
call
xor
fwait
adc
gs
fistp
inc
inc
outs
outs
outs
popf
cmps
add
cwde
and
fs
xor
scas
jle
xchg
lea
mov
sub
add
(bad)
xchg
mov
mov
loop
je
push
int3
jmp
xchg
jb
(bad)
jmp
popf
mul
mov
push
jo
fst
das
jns
sub
test
unpcklps
mov
mov
pop
sbb
push
hlt
stc
dec
push
jo
add
addr16
sub
inc
dec
call
and
push
and
or
push
outs
sub
ins
imul
inc
mov
or
push
adc
ins
sti
ja
outs
test
arpl
inc
imul
push
add
xor
test
pop
pop
or
in
or
pop
inc
add
test
pop
dec
adc
not
add
pop
or
adc
add
cmp
pop
xor
sbb
pop
loopne
sbb
or
sub
pop
pop
add
jae
imul
fild
mov
sbb
(bad)
dec
pop
push
jne
xor
daa
ds
imul
test
add
pop
and
mov
cwde
ficom
cmp
inc
inc
xor
mov
fwait
inc
inc
xchg
push
and
inc
dec
adc
sar
pop
inc
pop
cmp
js
add
cmc
sbb
cmp
scas
or
or
retf
and
loopne
aaa
sub
popa
jmp
pop
and
mov
inc
inc
add
out
jle
loop
js
inc
inc
fmul
dec
xor
ficomp
or
pop
call
mov
inc
(bad)
iret
mov
ret
jns
push
push
push
jns
jb
or
dec
call
out
or
dec
ins
bound
scas
jo
push
dec
xor
cli
inc
cmp
jno
inc
adc
mov
add
mov
sub
or
mov
adc
cmp
jp
fild
repz
push
imul
aaa
ins
inc
hlt
mov
lea
in
mov
ins
and
mov
pop
lock
pop
movs
es
mov
(bad)
call
xor
or
push
adc
and
push
(bad)
test
sbb
mov
adc
data16
jne
cmp
jne
jo
jecxz
adc
jl
sbb
xchg
xchg
or
fcom
add
pop
inc
and
push
out
inc
xor
outs
or
sub
or
dec
dec
popa
push
ins
enter
test
and
nop
ss
aas
test
cmp
pop
nop
setbe
push
shl
and
cmps
inc
sub
jno
imul
popa
jb
gs
pop
dec
inc
lock
popa
cld
mov
cmp
push
std
lahf
mov
pusha
punpcklbw
or
data16
push
add
add
push
aaa
pop
inc
mov
test
sbb
sar
adc
jl
fmul
mov
jae
sbb
jle
stos
inc
inc
(bad)
fild
jmp
out
cdq
xor
inc
add
mov
push
in
lods
pop
out
mov
sbb
mov
adc
pop
fdiv
mov
rol
movs
loopne
push
loopne
push
clc
push
in
push
aaa
xor
sahf
cld
in
cmps
pusha
ins
fiadd
cwde
cs
fcompp
add
aaa
inc
mov
push
sahf
xchg
aas
push
pushf
div
jbe
and
mov
and
ss
mov
push
int3
cmp
enter
xlat
ins
cmp
nop
xchg
sub
sbb
pop
pop
loope
cmp
and
inc
ins
xlat
sbb
enter
sub
stos
mov
inc
ins
or
adc
sub
outs
jae
fs
es
add
data16
ins
jns
ret
outs
pushf
cmp
mov
outs
jne
add
imul
loope
mov
push
add
cmc
add
add
pushf
push
push
test
dec
outs
jo
inc
lods
xor
cs
or
sbb
adc
add
dec
fs
stos
add
and
inc
nop
mov
fld
retf
inc
loope
mov
xor
push
add
mov
pop
fisttp
pop
rol
jb
push
pop
push
xor
inc
pop
popa
fisubr
jo
push
fld
mov
das
vcomisd
jae
ffree
fs
std
xchg
xor
add
mov
jbe
ins
test
mov
xor
loopne
sbb
fwait
xchg
inc
pop
aaa
push
inc
fsubr
adc
push
push
xchg
int
pop
rol
or
and
add
mov
xchg
sahf
aas
inc
pop
ins
mov
fisttp
ja
shr
add
retf
and
and
mov
repnz
fbld
add
cdq
daa
daa
mov
cpuid
rol
push
mov
push
popf
pop
and
pop
xor
scas
add
daa
add
jg
mov
sub
jle
sub
int
add
daa
mov
xor
aas
push
fst
rcl
or
scas
jmp
push
pop
out
push
pmulhuw
sti
in
add
aas
pandn
jns
repnz
push
mov
int
fisubr
adc
pop
ins
bswap
mov
xor
pop
lods
rdtsc
adc
mov
(bad)
xor
xchg
push
pop
xor
movq
repz
pop
out
out
sahf
pushf
jecxz
adc
push
pop
cmps
popf
xchg
mov
rdpmc
push
pop
ds
mov
jg
xor
out
aas
push
pop
pop
aaa
add
(bad)
movs
mov
cmp
pop
or
daa
popf
add
(bad)
cmp
push
xor
aad
xchg
or
inc
fadd
mov
jnp
push
mov
jnp
jecxz
xchg
push
jp
out
add
pop
ins
cwde
add
mov
push
mov
loopne
mov
inc
push
int
ror
arpl
mov
mov
push
popa
push
gs
js
iret
sub
sbb
(bad)
fs
dec
outs
stos
aad
mov
push
adc
inc
add
inc
les
sbb
xchg
add
mov
add
add
or
sbb
add
xchg
adc
sbb
or
pop
sbb
dec
fistp
loopne
push
push
sbb
out
sub
aad
mov
gs
je
hlt
push
daa
fsub
xor
add
sub
out
mov
or
xchg
push
adc
jns
bound
or
js
inc
inc
popa
cmp
jns
inc
lahf
jo
mov
or
add
or
addr16
mov
pusha
pinsrw
pop
mov
xlat
push
xchg
je
or
lods
and
xor
push
sub
xchg
loopne
and
jno
mov
xor
loopne
pop
or
ins
jne
dec
and
adc
stos
dec
mov
inc
ror
inc
adc
xchg
fistp
test
sub
or
inc
mov
(bad)
scas
data16
leave
pop
mov
mov
hlt
ret
add
ror
push
sbb
push
sub
jo
or
mov
test
arpl
adc
adc
fst
and
jp
popf
out
pop
out
adc
mov
cmp
jmp
dec
call
or
enter
aas
jae
stc
and
xchg
jae
pop
arpl
daa
or
fadd
popf
call
mov
cld
and
jge
movs
clc
lods
inc
pop
mov
dec
inc
(bad)
adc
sar
cld
inc
adc
adc
cmp
retf
xor
or
jno
jnp
icebp
popa
push
and
xchg
imul
int
stos
adc
adc
and
int
test
xor
push
adc
and
fisub
add
xchg
nop
arpl
or
jae
mov
jo
jmp
adc
xlat
lea
lea
jg
test
pop
inc
lods
loope
in
fsub
fisubr
xchg
btr
sbb
call
add
pop
scas
sbb
addr16
rol
fild
fs
sub
addr16
xor
or
imul
pop
sbb
aad
daa
pop
test
adc
int3
sub
push
jb
outs
jae
cmp
push
pop
mov
dec
add
ins
pop
ret
ds
jae
ins
xchg
iret
pop
test
int3
lods
iret
xchg
or
sub
rcr
popa
jae
sbb
add
arpl
push
adc
push
push
pop
lds
push
imul
sbb
add
int3
test
xor
and
dec
push
inc
sbb
sub
inc
mov
add
or
mov
add
cdq
xchg
pop
add
push
adc
push
jae
inc
outs
je
jo
pushf
into
push
adc
jl
(bad)
cmc
rol
dec
push
cmc
pop
mov
jo
(bad)
or
addr16
add
sbb
lods
pop
lahf
loope
fadd
cdq
in
inc
xor
lods
pop
addr16
ror
pop
or
xor
xchg
pop
clc
and
loopne
push
aaa
inc
and
icebp
adc
or
push
fs
or
sbb
push
xor
pusha
mov
adc
inc
pusha
pushf
cmp
add
mov
add
sbb
test
sub
fdiv
or
mov
pop
(bad)
adc
mov
pop
pop
icebp
and
pusha
add
sbb
lds
xor
popa
fbstp
jmp
lods
add
std
rol
clc
dec
or
push
push
bound
jne
imul
inc
ins
movs
leave
cmps
sbb
cmp
pop
(bad)
(bad)
int
dec
adc
jae
test
imul
fisub
inc
push
or
sbb
mov
sub
and
cmp
sahf
push
aas
arpl
and
cmp
retf
arpl
sbb
or
out
ret
ds
pop
xor
dec
adc
daa
pop
lea
fcmovbe
mov
cmp
int3
lods
xor
js
popf
pop
xchg
fnstcw
cmp
les
sbb
or
adc
jne
imul
cmps
jae
or
leave
fcmovnu
push
ins
popa
ins
ins
xchg
mov
push
gs
jnp
sbb
and
adc
sbb
daa
inc
in
imul
sar
push
and
ret
add
aad
adc
sub
fist
pusha
jo
mov
stos
add
ret
mov
test
xor
mov
and
cdq
cmps
pop
inc
pop
add
mov
lock
in
aaa
and
test
(bad)
push
(bad)
mov
addr16
inc
je
adc
xor
in
and
popa
jmp
dec
xor
sbb
aad
ins
add
pop
and
sbb
push
pop
pop
add
pop
inc
cmps
cmp
inc
push
inc
int3
or
inc
call
sub
pop
pop
addr16
sbb
xor
out
xchg
mov
in
xor
xor
fstp
retf
add
add
dec
add
mov
adc
call
adc
push
adc
xor
test
adc
std
jmp
ins
jo
push
arpl
or
or
arpl
push
adc
add
xlat
arpl
inc
jne
lds
inc
std
pusha
outs
sbb
push
cmp
scas
fcomp
jo
jae
scas
iret
or
mov
add
pop
loope
push
dec
aas
sbb
pop
ficomp
mov
mov
xchg
jg
or
or
call
and
sbb
pushf
fcomp
in
fs
adc
sti
(bad)
ss
xchg
inc
inc
and
push
xchg
inc
mov
js
pop
rcr
fdivr
pop
xchg
pop
dec
mov
lahf
fdivr
inc
shl
out
add
and
mov
cmp
or
(bad)
cmp
xor
jp
pop
push
cmp
add
or
ins
mov
sbb
sbb
xor
jb
jne
sar
or
mov
mov
mov
adc
or
or
or
sbb
or
(bad)
dec
mov
mov
(bad)
cmp
push
adc
sub
xor
push
mov
pop
inc
dec
sbb
add
inc
dec
mov
add
pop
scas
pushw
fsub
cmp
xchg
cmp
add
(bad)
shl
lea
pushaw
clc
loope
popf
shl
xor
xor
(bad)
sub
push
pusha
jmp
pop
adc
adc
dec
push
stos
xor
pop
xchg
outs
cmps
imul
mov
inc
repnz
jns
fild
inc
inc
push
outs
lock
sbb
dec
or
(bad)
mov
mov
push
mov
xor
push
push
xor
cmpps
mov
mov
mov
add
dec
and
xor
pop
pop
pop
xor
push
cmp
js
adc
xchg
push
ret
jmp
fnstsw
(bad)
jmp
pop
pop
ret
push
push
add
hlt
add
mov
mov
mov
inc
mov
adc
lea
mov
fdiv
std
adc
xor
mov
dec
push
inc
and
mov
outs
mul
ss
or
mov
and
mov
cmp
jle
add
pop
pop
pop
pop
ret
jle
lea
push
sbb
sbb
jo
fmul
int3
jl
sub
fdiv
inc
add
push
cmp
jne
cmp
fisttp
jae
shl
repnz
je
(bad)
push
out
sub
lock
or
sar
or
outs
pusha
jg
div
adc
sahf
xor
cmp
mov
push
mov
mov
scas
test
scas
lock
jp
cmp
outs
xchg
ins
(bad)
mov
sbb
ror
xor
push
cld
das
fisttp
dec
sub
(bad)
enter
ins
test
add
fiadd
push
jo
stos
adc
mov
add
mov
daa
pop
mov
test
or
push
sub
cmp
xchg
mov
out
and
ins
mov
das
in
ror
sub
pop
shl
loopne
push
push
jp
or
push
dec
scas
aas
cmp
ins
outs
icebp
addr16
jmp
lock
pop
adc
fild
sbb
or
mov
call
add
mov
ret
cwde
xor
push
xor
add
jge
clc
adc
pop
clc
dec
sbb
ret
aaa
fcomp
dec
pusha
les
or
pop
(bad)
jmp
das
and
sbb
lea
xchg
xor
ror
push
mov
pusha
or
cli
call
adc
adc
loop
test
jmp
fadd
(bad)
rol
fbld
or
loopne
sub
pusha
or
add
clc
inc
sbb
mov
adc
pop
les
clc
push
mov
and
addr16
out
dec
sbb
int3
out
and
mov
sbb
push
mov
and
add
rol
cdq
adc
call
in
cdq
repnz
les
cmp
or
mov
mov
xchg
adc
pusha
and
adc
sbb
inc
sub
mov
loope
loope
pop
sbb
pusha
jnp
pop
mov
(bad)
es
fst
fldenv
push
xchg
scas
and
cs
loope
or
and
xor
xor
aas
push
cmp
loopne
loopne
bound
cmp
je
mov
or
sbb
das
jl
pusha
mov
imul
dec
mov
add
mov
cmp
or
setns
daa
clc
dec
sub
adc
out
test
push
jne
cs
call
lods
lods
enter
les
mov
cmp
add
aas
shl
inc
lock
push
std
jmp
mov
mov
cmp
je
leave
adc
cli
or
shl
(bad)
adc
(bad)
in
ss
shl
daa
fdiv
cmp
dec
test
jl
inc
xor
in
jmp
call
push
sbb
sbb
loop
inc
dec
jne
iret
or
push
sbb
sub
fdiv
aas
mov
jnp
add
jl
jl
pop
push
enter
or
in
sub
lds
push
loop
add
outs
push
mov
in
sbb
(bad)
call
add
or
push
push
dec
in
adc
ret
adc
mov
aam
push
popa
sbb
cdq
rol
nop
in
adc
rcl
loope
ins
fcom
ret
add
fstp
cmps
cmp
add
add
lods
pop
cmp
push
bound
mov
aas
imul
loopne
inc
loopne
es
mov
xor
sar
(bad)
push
pop
mov
test
jle
mov
dec
test
jl
inc
xor
hlt
cmp
jge
mov
add
shr
add
dec
jne
inc
jg
jp
dec
call
test
mov
fcmovnb
mov
inc
(bad)
sub
adc
push
inc
push
bnd
iret
out
xchg
pusha
add
imul
cmp
mov
adc
pop
inc
mov
jbe
mov
sti
leave
mov
add
or
dec
xchg
loop
cmp
mov
push
sti
add
cmp
xor
and
add
xlat
push
lock
test
add
js
adc
mov
push
hlt
add
add
pop
cmp
dec
test
push
pusha
pop
mov
in
(bad)
std
xchg
add
push
push
cwde
pop
loopne
cmp
inc
adc
stos
lds
mov
add
enter
pop
scas
or
pop
loopne
loopne
pusha
jo
es
pop
int3
and
push
test
or
test
or
jne
test
inc
or
pop
and
inc
mov
jge
mov
cld
add
lock
add
(bad)
loopne
add
push
push
mov
sbb
adc
loop
jnp
lods
jle
(bad)
fisubr
js
call
jne
js
test
jle
cmp
jle
js
adc
loopne
je
add
jecxz
push
clc
inc
sub
dec
sub
mov
cwde
sbb
or
sbb
cmp
adc
cmp
dec
mov
test
add
adc
sbb
jmp
or
mov
je
dec
xchg
adc
pusha
scas
clc
xchg
and
les
add
sar
test
(bad)
sbb
and
xchg
ror
fcomp
add
pusha
lds
adc
neg
js
in
push
je
test
into
and
mov
pusha
mov
or
dec
mov
xor
faddp
pop
jns
inc
mov
xchg
clc
jne
test
inc
shl
scas
and
cmp
jne
dec
inc
jecxz
je
shl
xor
scas
loop
adc
loopne
imul
sbb
sbb
(bad)
mov
adc
or
mov
mov
cld
add
inc
jge
xlat
dec
sub
jl
mov
loop
es
inc
aam
outs
xor
stos
clc
jge
add
adc
push
(bad)
(bad)
cmp
ins
mov
adc
out
inc
mov
test
nop
jmp
adc
push
cmp
mov
sbb
call
adc
and
in
jnp
push
sbb
in
ja
scas
xor
ret
loopne
sbb
push
cmp
rol
ret
ja
dec
jne
push
xchg
sbb
fs
xor
das
sub
adc
mov
push
push
jne
(bad)
int3
sbb
fs
je
sub
cmp
mov
dec
jg
sbb
xchg
pop
jnp
test
je
push
mov
call
add
data16
jbe
out
mov
mov
add
je
cmp
test
adc
nop
das
xor
inc
push
pop
xchg
rol
inc
repz
ja
es
jne
(bad)
mov
outs
dec
cld
adc
in
or
or
or
add
icebp
jecxz
mov
push
ja
sbb
inc
dec
mov
jmp
sbb
mov
ins
jns
jo
mov
sti
dec
daa
xchg
push
aam
je
movs
mov
sbb
js
mov
push
ja
add
je
jb
das
adc
das
and
test
sar
test
inc
jno
xor
or
fcomp
add
mov
xchg
cmp
daa
hlt
or
icebp
dec
fdiv
pusha
(bad)
cmc
(bad)
xor
mov
fdivr
sub
or
hlt
(bad)
adc
mov
jmp
jo
scas
xor
pop
mov
adc
cmp
push
add
int
(bad)
sbb
dec
or
fucomi
add
adc
xchg
xor
push
xchg
or
es
(bad)
push
ds
cmp
pusha
or
xor
or
push
sub
pop
mov
adc
sbb
test
sbb
mov
add
dec
fs
sbb
jne
pop
xlat
cli
lods
cmps
push
dec
pusha
pop
addr16
sbb
dec
cwde
scas
adc
xor
adc
lea
adc
jle
je
push
das
sbb
bound
adc
sub
pop
xor
jmp
mov
imul
ss
xor
dec
sbb
ja
loope
jo
jbe
xchg
aam
mov
(bad)
jl
dec
sbb
stc
sbb
and
sbb
je
and
add
dec
fcmovb
xor
pop
pusha
ds
sub
cmp
(bad)
imul
jg
cmp
dec
jno
loope
cmp
pop
popf
dec
cmp
(bad)
and
int
sbb
mov
sub
sub
push
cld
daa
mov
or
sbb
sub
or
or
je
mov
pop
sbb
cmps
in
jmp
test
aaa
cli
mov
pop
push
ins
arpl
dec
xor
jns
mov
dec
jmp
xchg
xor
or
inc
(bad)
adc
or
es
xor
rcl
mov
ficomp
xchg
shr
mov
pushf
nop
ror
ror
inc
push
cmps
add
in
cli
jecxz
pop
lods
ret
iret
cmp
sar
pop
mov
int3
or
ret
icebp
jp
cmp
mov
mov
sub
push
in
or
pop
daa
cs
in
sub
cmp
mov
leave
sbb
iret
cmp
loop
cmp
jbe
fldenv
add
mov
lods
add
jp
push
cmp
adc
ret
and
jne
clc
je
enter
xor
sbb
sbb
aam
aam
aam
mov
test
dec
repz
push
push
add
aaa
cmp
add
add
or
push
or
dec
push
aam
jl
jmp
sbb
arpl
cmp
and
es
cwde
or
nop
in
sbb
ins
push
or
push
mov
shl
fcom
mov
pusha
jae
imul
pop
loopne
push
jge
mov
(bad)
call
push
adc
ficomp
and
push
jle
call
jge
mov
adc
popa
xchg
fs
das
les
pop
pop
jbe
loope
js
push
mov
shl
mov
cmp
xchg
mov
sbb
inc
das
cmp
sahf
or
test
cli
jae
adc
ins
mov
fisttp
and
dec
pop
loope
push
and
imul
add
mov
sbb
jbe
mov
test
jge
and
dec
pop
add
dec
pop
jmp
out
js
mov
mov
add
fadd
cmp
pop
mov
inc
dec
cmp
(bad)
cmp
scas
pusha
adc
inc
and
aam
mov
sbb
dec
jmp
or
shl
inc
leave
or
mov
les
das
out
es
cmp
inc
mov
test
or
sub
mov
inc
mov
jmp
fbld
sub
and
pop
mov
mov
jge
xor
add
stos
(bad)
mov
mov
aam
push
loop
add
cmp
dec
inc
ret
dec
add
cmps
mov
jbe
pop
test
(bad)
push
lock
cmp
pop
pusha
sub
cmpxchg
add
sbb
mov
sbb
xchg
aas
sub
inc
sub
add
sub
jle
xor
mov
(bad)
ret
add
jmp
jl
and
pusha
adc
sti
sbb
dec
sbb
dec
jge
pop
lods
jo
cmp
inc
clc
daa
xor
jecxz
or
out
imul
nop
in
test
mov
cmp
in
aaa
push
adc
rcr
shl
js
pop
pop
jmp
inc
sbb
sbb
sbb
inc
jb
push
add
sbb
xor
imul
out
fcomip
lods
push
jo
not
pop
cdq
xor
popa
aaa
mov
mov
data16
das
cmp
popa
adc
stos
push
adc
dec
sbb
cld
clc
push
mov
cmp
aam
cmp
ret
or
fwait
in
pop
ror
hlt
or
adc
add
sar
sbb
cmp
sbb
push
xor
mov
mov
into
bound
rcr
or
mov
sbb
xchg
and
call
lahf
mov
sbb
dec
or
movs
clc
and
fild
shl
cmp
adc
lock
test
push
adc
cmp
add
jmp
and
test
aas
enter
out
sub
clc
dec
jbe
gs
fucomip
xor
pushf
mov
jmp
push
in
dec
in
mov
mov
test
add
sbb
pop
neg
aaa
loopne
outs
shl
jl
push
sub
test
or
push
and
sub
mov
fnstsw
into
je
mov
and
out
add
jae
push
xchg
js
push
scas
syscall
clc
sbb
cmp
sub
mov
and
in
mov
add
fcom
push
pop
dec
or
(bad)
aam
mov
or
aaa
shl
pop
cs
mov
push
pusha
xchg
das
jecxz
or
and
add
mov
and
pop
and
ins
adc
data16
sbb
repnz
clc
imul
lock
inc
into
movzx
xor
jg
sar
clc
adc
xchg
je
mov
lahf
cmp
mov
cmp
add
test
add
jnp
cs
inc
(bad)
push
pop
test
jle
xor
dec
jno
call
js
dec
loope
dec
or
push
outs
mov
push
cmp
ret
ins
ror
hlt
adc
jle
jo
adc
adc
ret
mov
pavgw
mov
xchg
mov
ins
mov
adc
adc
mov
cdq
jmp
adc
leave
or
repnz
nop
cmp
add
popa
pusha
cmp
les
and
push
jmp
in
xor
out
pop
xor
scas
cwde
adc
(bad)
pop
pop
cmp
or
test
push
shr
add
adc
sub
sbb
push
jo
ret
sbb
push
mov
test
pop
and
xchg
mov
push
pusha
sub
sbb
xchg
push
sbb
shl
add
add
jmp
add
and
ss
test
dec
leave
scas
into
or
sahf
xchg
push
jl
mov
scas
test
mov
(bad)
sti
rol
xor
jmp
push
push
mov
adc
scas
and
stos
pop
loop
push
mov
mov
or
jl
test
imul
and
stc
inc
and
jge
popf
or
out
dec
pusha
sbb
inc
(bad)
pop
add
cmc
add
lods
inc
mov
dec
mov
loope
sbb
adc
xchg
pusha
pusha
les
mov
loopne
lods
pop
(bad)
sub
add
es
push
push
mov
sub
sbb
xor
in
mov
inc
imul
(bad)
xor
push
mov
inc
test
gs
cmp
jp
ret
fidiv
outs
add
push
add
inc
cmp
sets
mov
jb
ret
mov
shr
aam
ds
or
call
aaa
mov
or
rcl
pop
fst
adc
jmp
push
mov
and
push
push
mov
aam
cmp
adc
loopne
adc
sbb
and
mov
and
sbb
cwde
dec
aaa
fnsave
jbe
or
sbb
sbb
daa
loopne
call
(bad)
enter
or
pop
or
jb
loopne
cdq
daa
add
mov
in
push
push
mov
push
hlt
shr
adc
sbb
mov
mov
or
mov
sub
dec
jl
test
add
in
fisttp
sbb
xchg
sbb
pop
jmp
fstp
out
(bad)
shr
mov
cmp
je
mov
push
jns
dec
fild
fs
js
cmp
ins
jecxz
xor
clc
jl
mov
push
add
adc
pop
or
(bad)
je
and
loope
jmp
sub
sbb
and
(bad)
inc
adc
pusha
or
push
mov
dec
nop
clc
add
inc
imul
push
inc
push
mov
push
cmp
stos
push
cmp
push
and
out
sahf
sbb
cmp
xor
ja
jge
xor
fs
data16
pop
push
(bad)
push
loopne
adc
fdiv
pusha
push
je
fmul
fild
mov
mov
add
loopne
int3
adc
outs
push
inc
inc
cwde
jnp
jmp
outs
je
outs
jb
dec
imul
cmp
popa
js
adc
inc
dec
popa
mov
fs
gs
and
mov
outs
pusha
sti
mov
arpl
gs
out
out
int
jp
gs
aad
and
mov
and
or
aam
out
mov
jne
and
cmovbe
popa
fs
mov
imul
pushf
pop
sub
inc
sub
fadd
outs
mov
mov
sub
mov
sbb
stos
lods
sub
cs
outs
fistp
cmp
mov
ficomp
outs
arpl
dec
cmp
clc
or
fwait
mov
inc
outs
popa
bound
lahf
cmp
(bad)
push
jae
dec
popa
addr16
enter
pop
jne
pusha
xchg
shr
scas
loope
cmp
jg
inc
add
call
inc
movd
movs
ficomp
jns
pop
enter
xchg
or
lock
mov
(bad)
ja
lods
loopne
push
dec
mov
bswap
enter
in
dec
mov
fs
shl
dec
mov
jb
xchg
call
mov
cld
xor
xchg
dec
inc
sahf
pushf
fild
dec
nop
retf
arpl
pushf
dec
or
lods
mov
mov
pushf
ret
or
push
inc
arpl
jo
adc
or
js
outs
or
ins
xchg
push
test
mov
push
enter
into
jmp
xor
xchg
add
pop
mov
addr16
arpl
or
inc
push
retf
outs
ins
stos
mov
sbb
outs
fwait
imul
nop
xchg
call
jne
imul
inc
add
mov
add
add
(bad)
ret
push
fcmovu
outs
fisub
(bad)
mov
push
gs
xor
cmp
das
mov
test
inc
xchg
or
xchg
loopne
(bad)
or
inc
xor
addr16
ins
add
int
mov
in
scas
pop
in
sbb
ror
cmp
inc
adc
sbb
dec
nop
mov
cmp
push
inc
jb
jl
dec
popa
out
aam
or
cwde
bswap
push
sub
dec
ret
inc
pop
pop
mov
rol
jns
pusha
add
clts
outs
cmps
ret
mov
(bad)
mov
push
jne
gs
jne
sub
sub
pop
dec
or
enter
sub
or
ins
cmp
enter
dec
or
imul
cld
sbb
inc
jne
data16
push
add
mov
inc
mov
xchg
adc
jno
pop
ins
mov
jno
or
push
push
lods
or
mov
add
xor
test
out
sub
call
in
add
xchg
and
loopne
hlt
cmp
dec
dec
mov
adc
cdq
inc
(bad)
scas
xchg
mov
retf
jne
dec
inc
jbe
or
push
lock
dec
xchg
xor
(bad)
push
movs
rcl
dec
push
sub
jmp
imul
dec
xlat
test
sbb
push
shl
xchg
sbb
inc
dec
arpl
addr16
push
push
scas
div
fcomp
cmps
(bad)
add
sti
add
inc
int3
push
lds
pop
push
stos
test
and
stos
or
les
je
mov
pop
mov
add
sbb
sahf
in
or
add
mov
inc
add
add
fimul
stos
fwait
push
inc
dec
gs
pop
icebp
jo
sub
cmp
dec
popa
ins
and
pop
cmps
cmps
retf
and
mov
lods
jb
mov
test
add
loop
pop
inc
add
adc
adc
stos
pop
jnp
add
or
fisub
push
popf
xchg
push
push
repnz
xor
pop
sub
inc
fs
lock
ins
je
int3
dec
gs
(bad)
jmp
jno
jne
inc
sti
std
rol
jne
scas
dec
(bad)
pop
inc
and
xchg
mov
xchg
push
pusha
rol
mov
or
xchg
mov
mov
mov
dec
push
and
or
sub
daa
test
pop
pusha
mov
(bad)
scas
cmp
loop
pop
aas
jne
not
pushf
pmullw
jge
mov
jmp
mov
add
pop
inc
mov
push
inc
xor
push
loop
sahf
pop
addr16
pop
call
push
xor
mov
adc
mov
add
adc
popfw
pop
sbb
push
or
add
inc
dec
or
and
fdivr
inc
dec
loopne
pushf
sbb
ins
sbb
sar
pop
pushf
mov
pop
inc
add
xor
push
into
lea
out
inc
push
mov
sysret
pop
gs
cmp
cmp
cmp
or
sbb
sbb
retf
xchg
mov
or
add
xchg
xchg
xchg
xchg
dec
ins
mov
jns
push
call
lahf
(bad)
dec
jne
mov
push
hlt
adc
sbb
or
fisttp
ins
push
call
mov
or
sub
or
add
stc
push
mov
inc
push
sub
cli
(bad)
mov
and
movzx
push
or
mov
adc
push
xor
push
push
mov
xor
dec
add
mov
aas
adc
sbb
or
pop
arpl
push
mov
mov
pop
into
inc
cmp
mov
mov
pop
(bad)
jge
test
test
mov
adc
retf
outs
popa
dec
sbb
add
pusha
push
adc
pusha
les
xchg
orps
sqrtps
mov
jo
or
pusha
enter
dec
xchg
pop
push
sub
out
outs
jo
mov
add
mov
adc
xor
mov
push
inc
and
mov
aam
sbb
xor
xor
xchg
test
jle
adc
xor
int3
(bad)
mov
aad
cmp
cmp
inc
push
add
xlat
dec
adc
pop
inc
jo
add
xor
jle
add
iret
ror
sub
je
jne
add
pop
shl
pop
clc
lods
cmps
add
in
add
mov
xchg
add
add
jmp
mov
or
cmp
ds
add
inc
jnp
mov
sahf
adc
fadd
lods
add
push
jae
data16
cmps
test
sahf
adc
sub
outs
inc
inc
or
cmp
jbe
adc
call
cmp
pop
lods
cld
adc
push
push
adc
mov
ret
add
in
xchg
test
mov
add
shr
cmp
xchg
call
jbe
add
(bad)
iret
xchg
xor
add
dec
sbb
jb
mov
loopne
xor
jecxz
pop
pop
add
sbb
pop
mov
scas
nop
push
xor
inc
and
mov
(bad)
pop
lea
test
mov
jnp
dec
push
mov
adc
sbb
mov
mov
push
mov
jmp
add
clc
jbe
and
and
add
mov
dec
or
sub
adc
jl
push
cmp
add
xchg
ja
ret
lods
sbb
jp
sbb
and
movs
rol
mov
cmp
setne
sub
cmps
dec
in
mov
dec
mov
xlat
mov
cmp
sub
loopne
rcr
push
loopne
xor
push
clc
mov
xchg
jge
push
(bad)
xchg
ins
mov
push
adc
bound
push
ficom
out
lock
mov
mov
cdq
lock
inc
cwde
cmp
push
popa
xchg
inc
and
pusha
in
xor
pop
dec
xlat
add
or
lds
mov
push
loope
cmp
sbb
dec
dec
cmp
test
int3
add
loopne
jmp
ss
repnz
mov
jmp
push
and
inc
cs
jne
push
mov
add
mov
pop
ror
fdiv
dec
sub
popa
js
cmp
jg
dec
mov
popa
dec
adc
js
push
cli
dec
push
add
mov
fsub
push
sbb
popa
sbb
pusha
mov
sbb
jns
push
popf
and
or
imul
lea
push
push
sub
dec
mov
and
and
cwde
dec
movs
aas
and
popf
pop
add
inc
sbb
sbb
cmps
jo
jbe
sbb
loopne
call
test
adc
pop
jns
test
and
(bad)
push
push
mov
dec
mov
or
scas
pop
sbb
loope
test
fisubr
fdivr
dec
mov
clc
clc
add
push
outs
je
out
ja
dec
mov
stc
arpl
jmp
dec
inc
mov
cmp
jne
ins
pop
xchg
push
cmp
fs
and
or
or
xchg
ret
mov
lds
inc
jl
inc
adc
js
lahf
enter
inc
pop
repnz
cmps
or
lock
adc
inc
mov
cmp
pop
sub
or
(bad)
push
inc
mov
dec
lods
cmp
ds
in
jbe
adc
xor
cmp
adc
xor
and
sbb
les
xor
loopne
scas
and
sub
mov
mov
cmp
inc
aam
push
cmp
push
je
std
cmps
xchg
sbb
and
push
xor
and
push
cmp
stos
dec
icebp
xor
add
retf
xor
(bad)
mul
int3
outs
pusha
pop
push
add
jbe
psrld
retf
add
ins
inc
addr16
xlat
push
inc
ins
ds
outs
add
xor
jg
add
inc
dec
fs
jb
outs
jae
popa
jb
jb
js
inc
imul
jne
push
dec
imul
in
sbb
popa
sbb
sbb
jne
je
ins
pop
add
loope
fisttp
pop
mov
int
dec
mov
dec
cmovle
and
popf
clc
jg
inc
push
dec
outs
je
jne
jo
gs
inc
pusha
mov
push
outs
(bad)
add
(bad)
xchg
push
cld
bound
mov
lahf
aaa
sti
push
cmp
xchg
mov
lods
pop
jl
sbb
repnz
loopne
or
mov
push
sub
mov
fs
add
ss
idiv
es
mov
push
nop
hlt
mov
jnp
mov
rcl
ds
mov
fdiv
push
pusha
ins
fisubr
daa
mov
lock
pushf
push
clc
jl
cmps
stc
push
test
push
xlat
push
ret
hlt
loop
inc
and
jmp
xor
add
add
sub
push
fsub
jae
mov
stos
mov
dec
jns
and
dec
xchg
ins
mov
push
outs
ins
add
nop
push
adc
jg
or
out
sub
sbb
or
mov
mov
add
sbb
loopne
pop
xlat
sbb
popa
bndldx
scas
mov
pop
sbb
arpl
xchg
lods
ret
push
hlt
sbb
add
cwde
adc
pop
gs
out
loopne
sar
jo
xchg
fcomp
stos
outs
push
aam
shr
(bad)
xor
loopne
push
les
jmp
cmp
lods
adc
or
adc
dec
cmp
inc
mov
mov
jmp
xchg
add
or
push
adc
fimul
and
adc
arpl
ret
jge
cmp
(bad)
adc
or
aam
add
mov
fdiv
push
inc
mov
push
rcr
ins
nop
stos
sbb
xchg
cmp
xchg
dec
stc
jne
add
(bad)
sub
ror
xor
push
lods
add
mov
shl
adc
adc
dec
aaa
adc
xchg
add
add
sbb
push
ins
pop
jmp
push
js
pushf
pop
cld
into
sbb
pop
xchg
jae
sbb
or
rol
cmps
or
rcr
cmp
jne
push
or
push
push
add
les
inc
or
jo
rol
mov
cmp
ja
jecxz
pop
(bad)
(bad)
out
add
(bad)
inc
sbb
inc
add
mov
retf
cmp
aaa
jmp
retf
or
cmp
pop
daa
enter
jl
daa
push
lea
or
and
or
or
or
xchg
or
mov
data16
iret
fst
or
call
mov
mov
jmp
test
je
mov
shl
mov
xchg
adc
pop
mov
adc
mov
test
ss
pop
xor
pop
and
cmp
call
mov
sahf
pop
fwait
pop
pop
je
add
cwde
test
mov
mov
mov
xor
repz
ja
loopne
stos
pusha
ja
stc
add
adc
nop
inc
jne
xor
mov
dec
pop
mov
mov
lock
mov
pop
nop
fwait
inc
mov
out
cdq
xchg
(bad)
loope
fidivr
jge
je
mov
ror
repz
inc
jle
jmp
jle
in
data16
hlt
mov
movs
inc
sbb
or
movs
les
movs
push
dec
icebp
mov
jne
cmps
fild
inc
add
or
cld
sbb
push
or
mov
jmp
rcr
xchg
fmul
xchg
jno
jb
jo
lea
jbe
into
xlat
pusha
aam
lea
repnz
in
sbb
inc
data16
push
aaa
(bad)
sub
leave
push
enter
dec
and
xchg
push
rol
ror
push
mov
add
xlat
add
xor
test
cmp
movs
imul
mov
push
seto
push
in
in
lds
lock
push
pushf
int3
pop
xor
and
pop
(bad)
enter
fistp
loopne
push
cmp
in
pop
push
fistp
int
sbb
pop
in
or
add
cwde
cs
es
cs
fisubr
mov
inc
xchg
aas
pop
mov
xlat
mov
mov
and
mov
retf
cmp
fstp
cmp
xor
enter
push
nop
xor
jns
mov
pop
pop
jle
and
outs
(bad)
push
fistp
(bad)
cld
push
sbb
inc
inc
retf
outs
sbb
add
mov
jle
inc
and
add
call
and
cld
lods
loop
jo
adc
jb
imul
movs
push
sub
imul
sbb
lock
push
gs
js
gs
add
jae
ret
pop
dec
loop
ds
fisub
stos
outs
sub
or
sub
outs
push
cmp
int
jmp
or
popa
add
add
leave
sub
sub
aad
les
adc
inc
jp
enter
cmp
adc
and
loopne
fwait
sub
adc
das
imul
sbb
stos
or
das
add
mov
add
ja
cmp
dec
mov
mov
add
cmps
push
js
mov
data16
sbb
mov
and
les
push
mov
add
lock
mov
or
cmovae
jb
out
into
clc
inc
mov
inc
gs
gs
popa
addr16
push
jl
sbb
arpl
ins
sub
adc
adc
jne
push
jno
add
push
push
inc
push
cwde
or
fcom
dec
bound
sbb
push
lods
pop
pop
popa
mov
push
push
and
push
dec
adc
mov
add
sbb
or
aaa
push
bound
xchg
inc
sub
push
adc
xchg
sbb
mov
loopne
mov
push
out
cli
lods
es
clc
in
lods
(bad)
jmp
sti
sbb
lods
mov
mov
ror
and
outs
or
mov
shl
adc
lock
mov
or
clc
sbb
mov
scas
or
mov
loop
mov
(bad)
jmp
dec
jo
aaa
sbb
in
(bad)
fadd
int3
adc
loope
mov
scas
je
ficomp
or
or
sbb
dec
push
mov
mov
or
xor
mov
jo
cwde
add
mov
daa
dec
jmp
sbb
std
adc
xchg
mov
cmp
bound
adc
sbb
sar
add
jae
add
pusha
mov
dec
loopne
inc
shr
pop
cmp
add
fild
xor
ror
test
sahf
mov
or
fmul
cwde
or
mov
div
mov
pop
mov
mov
movzx
fisttp
xchg
xor
test
pop
pop
dec
cwde
(bad)
jmp
inc
inc
mov
adc
clc
push
and
movs
mov
cmp
cmp
rcr
in
mov
lea
loop
ror
adc
sbb
fisttp
cmps
adc
js
popa
sub
aam
in
out
pusha
xchg
dec
sbb
pushf
cmp
stos
sub
popf
xchg
into
and
mov
jbe
cdq
stos
and
inc
sbb
sahf
loope
adc
test
sub
push
push
mov
mov
pop
jmp
mov
sub
pop
push
das
setae
sub
xchg
pop
addr16
nop
mov
(bad)
loope
pop
test
and
cmps
ja
xor
ror
mov
push
daa
shl
inc
fdivr
pop
(bad)
fadd
pop
into
mov
test
add
push
and
mov
jge
and
push
xor
jmp
inc
xor
inc
inc
add
lock
das
or
and
or
ffree
mov
out
push
lock
das
stos
adc
clc
dec
or
add
(bad)
aas
mov
shl
js
(bad)
movs
loopne
sub
and
dec
inc
(bad)
popa
add
or
in
pop
cmp
add
dec
(bad)
das
add
test
ror
add
pop
in
add
adc
clc
cmp
cmp
cmp
or
fadd
pop
je
add
xchg
sahf
inc
mov
outs
add
mov
or
push
rol
ja
icebp
or
xchg
cmps
mov
cmp
xchg
sbb
jl
out
test
push
scas
push
mov
xchg
sbb
and
dec
sub
hlt
lods
push
fadd
push
js
(bad)
push
test
jg
rol
mov
or
or
jb
gs
daa
sti
or
jmp
outs
je
int3
jo
(bad)
movs
repz
jmp
in
push
push
ins
inc
ins
fs
gs
ins
test
adc
pop
jg
or
and
je
inc
add
pusha
les
outs
test
sar
sahf
sub
fcmove
enter
inc
mov
ins
div
pop
(bad)
dec
jne
adc
cmc
pop
(bad)
sub
xchg
sbb
jmp
movs
(bad)
cs
mov
fidiv
gs
cs
je
pop
mov
and
ja
jbe
iret
push
stc
ja
iret
mov
xor
mov
out
add
dec
sbb
push
inc
idiv
sbb
or
jmp
cmp
clc
xchg
sub
psubsw
dec
fdiv
sti
pop
je
or
cmp
std
hlt
xchg
or
in
push
xor
(bad)
jns
popf
popa
fistp
jmp
mov
inc
callw
fisubr
sti
cdq
sti
loop
push
or
in
sahf
jo
pop
cmps
cmp
ret
shl
sti
fwait
shl
or
inc
inc
ins
ins
outs
ja
xor
push
add
mov
test
inc
fwait
pop
mov
lea
xlat
and
xor
stos
loope
dec
shl
outs
stos
dec
pop
inc
mov
outs
jns
cmp
ins
dec
sub
je
aam
cwde
or
push
aas
dec
push
lods
div
push
adc
outs
add
imul
in
push
xor
adc
cmp
inc
inc
retf
adc
pop
add
scas
div
in
scas
inc
outs
retf
rol
movs
pop
sub
mov
or
xchg
test
dec
int3
fisubr
pop
sbb
xchg
js
push
sti
imul
adc
and
xchg
lea
rol
lea
addr16
and
sub
pop
loopne
jae
adc
das
push
fstp
mov
outs
ins
add
fmul
push
cmp
or
aad
mov
add
add
rol
add
adc
mov
imul
jo
add
xor
int
fcomp
cmp
push
jb
push
dec
cmp
add
lods
add
or
iret
cmc
out
and
inc
inc
push
push
mov
mov
or
sbb
shr
mov
mov
push
add
sahf
adc
sub
or
pop
bound
sbb
jecxz
cli
inc
add
retw
xchg
inc
inc
(bad)
add
add
mov
xor
pop
push
add
push
push
sub
dec
lods
inc
sbb
out
pop
inc
inc
pop
stos
cdq
jmp
sahf
inc
inc
gs
dec
push
inc
inc
mov
int3
pop
dec
jmp
or
jnp
(bad)
add
or
add
enter
jmp
popa
add
outs
mov
call
or
leave
cs
or
call
les
and
pop
dec
and
and
adc
mov
sub
mov
sbb
adc
push
push
lds
sbb
aas
setne
inc
or
ret
ss
push
je
iret
pop
or
outs
sbb
mov
stos
rcr
test
dec
in
dec
call
lea
mov
adc
xchg
mov
xor
call
add
pop
ss
or
xor
cld
and
shl
cdq
pop
add
add
pop
call
xchg
sti
xor
dec
xor
mov
inc
mov
je
or
jl
xchg
sub
sub
cmp
add
add
loope
dec
jb
rol
or
jo
mov
cmp
mov
pusha
call
fmul
inc
or
mov
xor
pusha
adc
mov
stos
adc
call
cmp
jnp
jo
xchg
or
mov
xchg
pop
add
add
cdq
add
ror
imul
add
mov
and
sbb
dec
xchg
dec
xor
xor
ror
sbb
in
nop
sub
sbb
rol
xchg
push
mov
push
arpl
fmul
ret
or
dec
sub
jae
add
mov
rcl
hlt
in
pop
add
sub
xchg
lods
cmp
add
cmc
in
test
aaa
sets
sti
adc
xchg
call
mov
xor
fist
jmp
and
jne
and
setbe
xor
add
jne
jo
sbb
clc
lea
push
mov
mov
add
aad
in
popa
rol
xor
inc
push
cmp
je
cmp
xor
pop
rcl
cmp
mov
in
dec
lea
mov
and
sahf
xor
gs
push
mov
adc
add
jmp
scas
and
loope
cmp
je
sub
or
sub
clc
sbb
sbb
jo
fcom
ficomp
add
cmps
xlat
out
push
adc
xchg
add
xor
xlat
xchg
inc
jmp
ds
and
or
ror
div
push
ret
jo
or
push
sub
jbe
js
leave
push
cdq
xor
sbb
or
out
and
jle
stos
dec
test
inc
and
stos
mov
jmp
pop
stos
ret
test
adc
in
jo
leave
jle
cmp
jle
je
call
mov
cmp
jne
add
ret
jne
or
retf
or
cmc
(bad)
jle
mov
and
hlt
mov
cdq
(bad)
adc
fxch
iret
pop
or
fldenv
mov
or
mov
xchg
inc
test
and
add
and
mov
sub
mov
lock
mov
mov
cmp
and
ficomp
lock
sbb
xor
ja
or
mov
xchg
mov
jmp
iret
movs
sub
cmp
adc
push
mov
and
mov
loopne
loopne
pop
and
mov
mov
push
jo
cmp
add
add
clc
add
mov
shl
(bad)
sti
nop
add
ins
rol
cs
sbb
popf
cli
jae
xor
mov
js
mov
push
pop
mov
and
add
sub
dec
and
loopne
sbb
jmp
or
test
movs
dec
and
mov
lock
js
div
mov
inc
test
mov
mov
push
jb
pop
xchg
cmp
sub
xchg
adc
das
add
adc
xchg
push
pushf
xchg
es
repnz
mov
and
add
pop
mov
leave
leave
dec
rcl
call
add
adc
mov
dec
fisubr
outs
fs
push
cmps
int3
movs
sahf
cmp
daa
push
outs
jb
mov
jns
sub
or
pusha
rol
pushf
shl
imul
outs
int3
xor
inc
pop
enter
loope
sbb
or
shr
das
pop
add
jo
or
dec
fcom
add
enter
gs
dec
mov
loope
jbe
jl
outs
xchg
jge
push
lods
sbb
or
push
ja
sub
in
cmps
xchg
das
lock
sbb
or
mov
out
jp
jae
cs
test
cmp
clc
pop
jne
icebp
inc
stc
mov
fs
pop
dec
popa
ins
pop
pusha
sbb
das
sub
inc
gs
bound
inc
xor
(bad)
loopne
fisub
data16
adc
adc
mov
ja
test
push
mov
add
fucomip
push
pslld
sub
sub
add
outs
je
inc
je
ins
daa
xor
jmp
or
shl
adc
push
and
inc
imul
adc
push
pop
or
add
cmp
push
outs
adc
and
repnz
setge
sub
pop
out
daa
mov
or
or
jo
inc
jecxz
jmp
or
jge
mov
mov
mov
xor
popf
ret
xor
xor
or
xor
aaa
pop
test
cdq
ror
push
out
adc
pop
jmp
mov
fwait
in
and
inc
or
fisubr
inc
inc
or
jnp
mov
dec
mov
push
mov
cmp
mov
jne
stos
inc
mov
pop
push
lods
adc
movs
push
mov
or
dec
les
lds
xlat
imul
es
pcmpgtb
test
fdivr
or
rol
pushf
mov
ret
mov
cmps
mov
loopne
fwait
sbb
mov
xchg
setp
and
mov
jge
pop
pop
and
push
push
push
jecxz
test
adc
push
and
or
inc
mov
inc
ins
inc
cmc
sub
out
add
sbb
mov
push
stos
pop
adc
dec
jmp
inc
pusha
test
xor
dec
push
xchg
loop
or
pusha
or
lds
and
adc
sbb
sbb
adc
ror
xchg
retf
fld
jl
or
xchg
xchg
xchg
pusha
test
xchg
out
adc
cmp
inc
cmp
xchg
aad
lea
mov
add
adc
mov
ret
add
adc
add
lock
xor
lock
inc
add
leave
push
sbb
pop
mov
fisttp
mov
test
or
mov
test
popa
(bad)
shl
aaa
mov
mov
loope
push
mov
mov
or
shl
and
mov
stos
clc
pop
ja
pop
mov
sbb
mov
sbb
aad
mov
pusha
push
jns
pop
icebp
xchg
lock
mov
xchg
into
inc
out
sbb
cmp
dec
test
mov
loope
lea
ror
sbb
sbb
xchg
pop
cdq
cs
mov
xor
and
and
jmp
dec
mov
fs
ins
fidivr
int3
bound
mov
push
adc
aaa
mov
and
je
mov
push
or
xor
jp
ja
adc
repz
and
pusha
test
mov
inc
push
mov
hlt
adc
dec
lock
sub
sbb
mov
cmp
shl
mov
movs
popf
or
rol
les
jl
jmp
push
movs
ror
jle
(bad)
call
retf
xchg
inc
push
gs
retf
sti
xor
xchg
outs
retf
mov
movs
pop
fsub
jg
je
mov
fsub
cmp
and
jl
jp
inc
popa
mov
leave
ret
test
jne
cs
arpl
xor
and
push
mov
mov
cli
cwde
xor
mov
pop
xchg
movs
pop
mov
out
mov
outs
pop
mov
cmc
ret
ins
and
imul
(bad)
jg
add
or
fcom
ret
push
sub
shl
xchg
call
xchg
cmp
imul
sub
in
add
sahf
add
lods
add
add
repz
add
fcomi
in
stc
or
inc
cli
out
mov
inc
inc
mov
jmp
jg
in
push
or
xor
adc
mov
fld1
sbb
outs
xchg
jnp
int3
out
in
adc
daa
outs
and
out
pusha
xor
outs
pop
loopne
mov
mov
push
or
jmp
pop
cmovne
icebp
adc
xchg
push
in
fistp
adc
mov
sub
xchg
xchg
rol
mov
scas
scas
jne
sbb
outs
pop
xchg
sbb
retf
cmc
lahf
mov
xchg
pop
adc
xchg
nop
xchg
xchg
xlat
in
xchg
xchg
mov
xor
push
lahf
dec
fsub
mov
nop
cmps
jne
push
addr16
loopne
jb
or
sahf
xchg
daa
add
xor
into
adc
out
loopne
call
pop
push
mov
xor
xchg
neg
mov
movd
adc
popf
not
ins
inc
add
(bad)
mov
daa
out
idiv
test
(bad)
push
test
outs
add
add
das
adc
jae
inc
push
mov
jo
test
fs
jns
dec
inc
dec
mov
inc
jne
or
pop
pop
rcl
fmulp
or
cmp
or
mov
add
or
mov
ret
neg
or
sysenter
and
inc
and
popa
mov
xor
je
les
jb
or
adc
jae
lods
aas
and
ins
xchg
push
scas
cmp
push
push
xchg
push
js
jmp
cmps
add
push
lock
adc
div
xor
scas
nop
pop
push
arpl
div
sbb
jmp
or
(bad)
dec
scas
mov
push
add
add
ret
dec
rcl
cmovbe
repnz
loopne
mov
xchg
adc
faddp
dec
or
adc
mov
into
cli
or
push
(bad)
push
dec
sbb
sbb
ret
mov
cmovo
cdq
movhps
js
clc
xor
sbb
out
ret
jg
movs
mov
outs
outs
aaa
das
push
int3
imul
add
pop
mov
int3
nop
sub
adc
clc
call
aas
jbe
outs
jns
outs
mov
ds
push
add
inc
and
adc
popa
nop
call
call
or
(bad)
aas
mov
jmp
pop
add
dec
sbb
(bad)
retf
es
test
push
and
add
scas
push
adc
pop
dec
jo
or
adc
xchg
loopne
push
xchg
imul
xor
jbe
pop
test
imul
(bad)
push
or
add
jne
jbe
sub
xchg
jns
and
gs
adc
or
add
or
or
ror
add
fbstp
dec
dec
shl
fwait
cmp
or
rcl
xchg
ins
mov
jmp
or
push
call
sbb
cmp
or
xchg
and
mov
aaa
jo
imul
bound
sub
stos
xchg
inc
pop
pop
inc
ror
inc
out
and
and
mov
pusha
push
add
cmp
jmp
shl
mov
push
leave
pusha
(bad)
dec
es
cmp
out
cmp
and
mov
retf
and
pusha
outs
jl
inc
mov
cmp
xchg
(bad)
inc
inc
jo
push
add
adc
add
scas
and
inc
or
jecxz
sub
inc
push
push
idiv
stc
jbe
lock
jmp
sbb
sbb
push
je
mov
(bad)
outs
ror
add
mov
(bad)
sbb
(bad)
into
mov
and
sbb
add
fadd
xor
test
jmp
add
inc
and
pusha
push
and
jno
outs
jmp
lock
and
inc
xor
inc
test
and
pushw
ins
ja
das
adc
jmp
mov
movzx
sbb
cmp
adc
je
mov
inc
or
push
mov
xchg
mov
mov
js
add
lock
xor
(bad)
push
sbb
int3
nop
lock
sub
sub
leave
and
pop
dec
in
test
and
mov
jb
enter
dec
loopne
xchg
push
push
push
rcl
leave
adc
sbb
xchg
inc
pop
inc
out
sbb
lea
sbb
cmp
and
push
sbb
data16
es
pusha
aaa
les
push
and
add
es
data16
add
add
pop
inc
popa
ja
push
aaa
push
and
mov
inc
sub
xchg
push
fstp
add
mov
and
and
jo
paddw
cmp
pop
inc
add
je
idiv
enter
sub
imul
inc
shl
jmp
inc
hlt
mov
nop
xor
sahf
inc
fdivp
mov
ficomp
inc
pusha
in
mov
arpl
enter
in
inc
xor
or
loope
mov
test
sti
(bad)
push
sti
push
or
fisttp
pusha
sbb
xor
add
push
push
jecxz
aaa
jl
inc
retf
mov
push
inc
push
mov
cmp
test
mov
clc
cmp
lock
add
and
adc
mov
cmp
int3
add
retf
push
add
clc
jbe
inc
dec
shl
or
add
es
xchg
xor
mov
les
in
xor
dec
cld
test
sub
cmps
cmp
imul
mov
mov
pusha
js
sbb
add
adc
cld
test
jbe
push
fcmovb
pop
retf
shl
pop
inc
add
push
add
in
mov
cmp
pop
mov
mov
pop
mov
mov
add
sbb
add
pminsw
mov
adc
sqrtps
lock
jne
push
xchg
stc
xor
mov
scas
movs
mov
lods
push
add
cmps
cmp
add
pop
push
push
add
pop
outs
or
iret
imul
pusha
or
sub
movs
inc
nop
fld
push
mov
and
mov
sub
push
push
or
sar
or
xchg
jmp
jnp
in
mov
push
icebp
pop
push
cmp
iret
arpl
jmp
mov
(bad)
jae
outs
or
jg
adc
scas
in
(bad)
in
arpl
(bad)
dec
cmp
loopne
rol
jl
fnstsw
dec
adc
fsub
inc
(bad)
dec
lock
scas
iret
fmul
retf
mov
sbb
aam
retf
jno
jae
pusha
rol
and
nop
mov
aaa
rcl
scas
sub
je
push
sbb
pop
inc
fld
(bad)
popw
jmp
cmp
add
mov
cs
and
adc
pusha
repnz
or
and
out
cwde
adc
enter
dec
push
or
hlt
jne
loopne
imul
ja
sbb
hlt
jnp
fimul
add
adc
add
sbb
inc
add
ja
xor
or
lods
out
jno
cmp
pop
jmp
stos
cmp
sub
and
gs
test
jle
xchg
adc
jmp
bound
adc
and
adc
push
das
adc
adc
sbb
push
adc
test
pop
cdq
xchg
es
mov
mov
rcr
and
shl
add
xor
mov
clc
and
movs
sbb
sbb
bound
mov
sbb
popa
mov
cmp
loopne
imul
and
add
aas
mov
cwde
stos
dec
sub
jb
je
jmp
xor
sub
mov
jmp
pop
jmp
jo
inc
repz
sub
(bad)
and
ficom
sbb
loopne
rcr
fidivr
aaa
ins
(bad)
and
xchg
add
xor
pop
cmp
push
sbb
lock
nop
push
add
or
cmps
shl
push
sbb
mov
ret
cld
fdivrp
test
repz
sub
add
popa
mov
xchg
jno
xchg
lahf
shl
je
loopne
aaa
mov
xchg
inc
add
popa
btc
test
jge
adc
adc
cmp
jne
dec
or
jnp
and
imul
jne
or
jns
rol
sub
je
mov
test
push
jmp
mov
fmul
das
sub
push
jge
sbb
or
xor
aas
(bad)
sub
popa
and
ins
add
mov
ret
push
jecxz
add
dec
scas
imul
mov
fsub
pop
push
fisub
loope
jo
fisub
add
sbb
mov
cmp
jbe
dec
enter
enter
jmp
add
daa
lods
loope
adc
adc
mov
or
cmp
loopne
xchg
test
or
shl
cmps
jg
cmps
outs
movs
mov
pop
mov
inc
loopne
les
pop
mov
push
mov
add
retf
add
cmp
push
dec
xor
loope
andnps
sub
popf
lock
pop
rol
push
loopne
ins
and
mov
and
cmp
(bad)
in
hlt
ret
pusha
popa
cmp
(bad)
mov
or
cmp
push
test
xchg
adc
add
stos
repz
sahf
out
mov
push
pop
lods
inc
imul
fld
and
jbe
arpl
imul
pop
push
xor
sbb
inc
pop
sbb
dec
int3
repz
push
dec
enter
adc
jle
inc
je
repz
(bad)
repz
mov
shl
push
repz
mov
inc
fsub
xor
mov
repz
loop
imul
out
add
hlt
hlt
mov
(bad)
loope
cmp
jns
loopne
neg
mov
popa
sbb
call
add
shr
xor
inc
ins
lods
adc
jae
jmp
test
mov
and
por
jbe
push
xchg
or
mov
mov
adc
mov
adc
adc
cmp
mov
and
or
gs
pop
(bad)
add
mov
pop
js
sub
and
sbb
(bad)
pop
inc
pop
or
call
push
and
or
adc
or
adc
mov
cmp
or
fld
push
stc
mov
nop
and
or
jmp
test
push
sub
jg
imul
push
pop
push
test
stos
out
out
shl
sbb
lods
jmp
pop
xchg
mov
sbb
push
dec
fadd
inc
cmp
loopne
loop
add
dec
bound
pop
jg
jg
xchg
add
bound
sbb
arpl
xchg
add
and
mov
add
jg
nop
mov
aam
xor
jg
lods
dec
adc
sahf
stos
or
jg
fdiv
push
scas
inc
test
jmp
jns
loopne
movs
loop
mov
add
cmc
(bad)
mov
mov
outs
int3
inc
lds
rol
or
inc
fcom
movs
out
mov
scas
add
jb
push
test
mov
mov
loop
ret
add
sbb
lods
mov
push
cmps
ins
pop
int
mov
cmps
or
(bad)
inc
nop
jne
ret
test
cmps
inc
fwait
call
sub
xchg
mov
sub
adc
es
sub
ror
mov
add
sbb
and
add
bound
push
mov
pop
or
pop
movs
fild
mov
push
das
adc
je
cmp
call
nop
ret
xor
ret
cmps
loop
mov
or
fist
dec
clc
cmp
jge
mov
xor
sbb
push
test
call
adc
push
cwde
xchg
test
lahf
sbb
in
cmps
je
push
or
or
test
nop
add
cmp
mov
push
fadd
mov
jp
mov
repz
push
pop
jle
push
cmp
xor
xor
jmp
dec
xor
dec
loopne
int3
push
je
add
push
cmp
int3
xor
dec
fdiv
cmp
call
ror
xor
dec
shl
dec
shr
adc
dec
scas
inc
cmp
fwait
adc
adc
push
jmp
frstor
mov
repz
sbb
jmp
in
mov
jns
ret
jns
mov
movs
int
sahf
repz
xor
push
mov
and
push
sbb
hlt
jb
xchg
adc
mov
in
fisub
je
adc
bound
sbb
mov
jo
ins
imul
dec
cmps
and
and
ret
outs
imul
xchg
pop
fcomp
xchg
dec
in
or
mov
icebp
loope
dec
enter
and
in
ret
sti
cld
nop
cmps
inc
lock
sti
add
shl
or
mov
pop
(bad)
sub
lahf
xlat
push
xor
fsub
mov
enter
mov
jmp
ja
xchg
fstp
add
or
mov
lahf
nop
fadd
in
mov
push
mov
add
mov
mov
clc
add
xor
cld
adc
add
jmp
mov
add
dec
loopne
xchg
movs
inc
out
mov
fwait
stos
cmp
add
sti
add
xchg
push
add
js
loopne
cmp
push
inc
retf
mov
jge
loopne
jmp
mov
mov
loopne
adc
xor
adc
push
lds
sbb
and
jmp
mov
add
dec
jne
ins
push
or
add
xor
mov
add
shl
or
ds
jmp
lahf
sub
push
rcl
daa
inc
xor
int3
or
sub
jle
xlat
cmp
or
xor
mov
fcomp
test
sbb
fcom
cdq
mov
or
jmp
inc
adc
cld
mov
lock
enter
int
xor
js
scas
jne
add
stos
push
repz
arpl
nop
sub
add
add
loopne
dec
aam
std
cmp
xor
in
or
sub
in
adc
mov
ret
dec
push
cmp
pop
hlt
leave
adc
clc
push
in
lds
std
inc
and
enter
push
jg
lods
xor
into
mov
mov
fld
push
and
clc
mov
clc
fld
jae
lock
or
or
mov
sti
or
mov
jnp
nop
and
pop
pop
shl
shl
adc
push
scas
enter
pop
push
jmp
push
invd
test
push
or
arpl
sbb
stos
pop
rol
mov
push
in
add
stos
xor
in
pop
add
add
and
dec
pop
ret
sbb
imul
mov
mov
sub
adc
or
clc
xchg
sbb
or
or
adc
adc
sbb
stos
shr
or
sbb
inc
fsub
les
inc
mov
add
jb
cmp
add
xor
mov
lea
les
adc
mov
mov
cld
and
sbb
fisubr
add
pop
jle
sar
push
ret
rcl
les
push
push
mov
fwait
das
lock
adc
in
std
pop
mov
inc
add
cmps
stc
mov
dec
ror
push
loopne
inc
std
imul
xor
mov
data16
mov
mov
lock
fs
int3
es
mov
push
fisubr
lahf
nop
hlt
mov
test
jl
(bad)
test
pop
add
rcr
pop
es
ins
sti
mov
push
movs
cmp
push
loopne
push
cmp
in
jne
stc
xor
in
sbb
fsubr
call
cwde
cs
das
scas
fldcw
cs
test
push
push
inc
xchg
aas
ror
jbe
and
ficom
lock
mov
retf
cmp
enter
int
fisubr
push
nop
xor
sbb
pop
pop
neg
jnp
lods
and
scas
fmul
cld
push
sbb
ins
hlt
sar
push
push
jae
mov
adc
in
add
popa
mov
or
imul
dec
outs
jne
cmp
mov
dec
push
es
adc
or
jb
xchg
cmp
je
jmp
outs
mov
in
mov
inc
gs
adc
popa
jne
je
je
inc
in
popa
dec
outs
inc
xor
mov
xor
gs
xor
lods
jge
pusha
xor
je
jb
movs
adc
push
outs
arpl
je
ins
ins
push
popa
inc
cmp
bound
(bad)
out
repnz
inc
push
jb
outs
jae
popa
sahf
outs
aam
outs
js
cmp
ffreep
add
or
sbb
ins
jo
imul
(bad)
mov
jae
dec
popa
ins
gs
fdiv
pop
popw
pop
push
sub
push
gs
out
mov
sub
adc
pop
push
adc
or
outs
(bad)
add
add
ret
push
dec
jecxz
mov
inc
(bad)
call
adc
loop
xchg
and
jg
and
or
add
sahf
push
dec
loop
dec
push
ss
mov
loop
shl
pop
pusha
jae
ins
mov
or
jns
ss
jge
xor
add
gs
data16
xor
fcomp
push
sbb
adc
push
sbb
dec
lock
adc
inc
cld
push
arpl
jo
rcl
xor
push
jb
mov
outs
loop
inc
imul
pusha
mov
call
mov
inc
inc
outs
popa
bound
push
or
cmp
test
pop
xchg
call
xchg
push
pop
mov
mov
or
xchg
out
add
inc
inc
into
or
mov
arpl
or
(bad)
push
adc
arpl
jbe
cmp
push
inc
shld
lods
ret
xchg
(bad)
mov
es
fist
dec
mov
outs
ins
add
push
push
or
in
(bad)
in
shr
add
or
mov
pop
enter
int3
or
mov
enter
add
cdq
loope
or
sbb
mov
push
xchg
pop
mov
or
mov
inc
dec
pushf
(bad)
call
dec
mov
dec
int3
(bad)
int
or
scas
(bad)
js
cmp
mov
popw
jp
or
or
xor
fisttp
test
nop
xchg
add
cmc
push
mov
ret
loopne
or
xchg
jns
dec
push
sub
rcr
adc
sbb
mov
pop
je
lea
mov
fadd
imul
movzx
and
adc
sub
sbb
fsubr
push
jo
dec
mov
movs
inc
dec
fadd
xor
(bad)
shr
dec
xor
fbld
mov
or
pop
or
stos
pusha
fucomi
das
sub
xor
push
mov
push
mov
mov
mov
into
lahf
xlat
and
or
cmp
data16
xor
rcl
jnp
idiv
cli
cld
cwde
ret
xor
aas
iret
ret
push
inc
mov
xor
inc
out
pop
cli
push
xchg
xor
mov
cmc
(bad)
call
sti
jmp
cmp
je
test
jle
push
mov
int3
fs
push
jne
mov
aad
dec
or
xchg
mov
dec
adc
sbb
inc
cmp
xlat
or
(bad)
xchg
fcomp
inc
and
mov
jmp
xor
neg
loopne
inc
xchg
int
add
inc
mov
pop
adc
ja
jle
mov
xchg
xchg
(bad)
mov
add
pop
sbb
or
jbe
push
pop
and
clc
sbb
add
clc
mov
test
push
retf
retf
dec
pop
or
jecxz
lahf
xchg
sar
push
sar
push
push
lea
mov
imul
sbb
out
inc
adc
push
jl
lds
in
pusha
push
ins
pusha
call
in
xchg
test
aam
dec
adc
ja
leave
setne
test
add
dec
push
ret
(bad)
hlt
add
clc
inc
stc
mov
cmp
cmc
cld
adc
rol
inc
fnstsw
pop
sbb
mov
inc
test
and
inc
aad
pop
sbb
and
mov
rcl
xor
sbb
jmp
fcom
fistp
mov
loopne
or
mov
rcr
sub
inc
xchg
adc
ss
or
sub
retf
adc
je
mov
icebp
jmp
push
push
(bad)
or
neg
xor
je
add
push
cmp
test
sbb
les
adc
xchg
imul
imul
stos
fadd
mov
clc
dec
daa
inc
mov
sbb
out
sbb
sbb
mov
mov
jne
call
jl
sbb
add
popa
inc
pop
pushf
shl
sub
or
add
add
xor
pop
lock
mov
mov
jmp
(bad)
cmp
loopne
adc
pop
sub
jne
stos
mov
push
inc
out
xchg
sub
push
aaa
xor
data16
push
cmp
ss
lock
cmp
cwde
mov
jne
(bad)
enter
add
fnstenv
pop
ror
cmp
fsubp
push
push
or
inc
test
xchg
fadd
dec
daa
ret
jbe
xlat
inc
inc
push
inc
dec
cmp
cmp
jne
mov
pop
das
jbe
jb
push
sub
fs
dec
sbb
dec
in
cs
fnstsw
dec
clc
push
add
outs
les
cwde
pop
popa
jb
scas
pop
sbb
mov
aas
add
adc
cld
into
pop
mov
mov
test
pop
das
mov
mov
pop
pushf
shl
push
push
retf
call
push
add
movs
lods
loope
dec
or
sbb
outs
inc
outs
outs
push
dec
mov
add
popa
and
shr
cmp
mov
dec
repnz
dec
sbb
leave
dec
aaa
jbe
inc
ins
add
(bad)
push
popa
jae
xor
mul
(bad)
jge
fild
or
mov
inc
loope
mov
sbb
xor
rcl
add
push
fdiv
sbb
shld
mov
cwde
or
push
and
add
clc
ret
cs
lahf
inc
js
gs
fadd
cdq
inc
cli
or
clc
mov
(bad)
(bad)
push
js
lock
and
in
fidivr
push
movups
test
xchg
dec
jae
or
or
dec
mov
push
adc
retf
(bad)
int3
jmp
outs
ja
add
or
les
mov
test
cwde
loopne
xchg
jo
aam
ja
mov
cmp
fs
je
adc
mov
les
stc
sahf
hlt
pushf
cwde
mov
shl
shr
outs
dec
or
es
das
or
sbb
test
out
jle
inc
jbe
add
add
inc
mov
push
arpl
xchg
scas
cdq
out
inc
sahf
add
push
aaa
push
push
xlat
add
bsr
loop
or
push
popa
gs
arpl
repz
sub
and
rcl
pmullw
or
dec
xchg
fcomp
loope
outs
lock
int3
ror
pop
ins
and
or
mov
xchg
and
mov
add
rcr
mov
push
adc
dec
inc
xor
dec
call
or
hlt
jne
daa
mov
xlat
jmp
cwde
loope
shl
outs
adc
dec
outs
sbb
sbb
inc
mov
lods
arpl
xor
aam
ins
int3
sbb
in
jmp
cmp
dec
mov
(bad)
push
fnstcw
fidivr
ret
lea
or
cmp
add
pop
shl
test
test
add
pop
cmps
sub
int3
push
pusha
test
push
add
push
nop
push
stos
das
mov
adc
sti
add
mov
int
jg
outs
outs
ins
adc
jp
push
outs
xchg
imul
adc
sbb
or
sub
or
or
fcomp
js
aas
lods
ja
sbb
xlat
pop
mov
test
pusha
clc
or
add
shl
or
or
lods
xlat
mov
pop
fisttp
shl
mov
dec
data16
dec
imul
imul
lock
or
xor
jmp
ins
and
jnp
(bad)
out
push
or
or
iret
imul
cmovns
push
je
sub
or
fdiv
dec
mov
test
clc
pop
sub
bound
jns
(bad)
daa
dec
adc
xor
je
dec
and
push
outs
jo
in
call
push
jne
ins
inc
pop
pop
add
mov
bound
in
mov
and
inc
push
sbb
bound
mov
push
inc
out
cmps
add
out
add
ja
jae
bound
jae
loope
pop
sbb
mov
ret
mov
movs
ret
xchg
sti
cs
xchg
dec
sub
jg
or
or
dec
jb
outs
fs
test
and
sub
xchg
daa
lds
not
adc
pop
les
es
or
mov
mov
push
cmp
and
shl
push
mov
rol
adc
iret
fld
or
mov
aam
adc
rsqrtps
mov
and
leave
rcr
dec
sbb
sbb
std
dec
rcl
dec
or
and
mov
mov
enter
jbe
or
das
cmps
test
leave
push
jno
add
sub
mov
int3
adc
(bad)
cmp
or
mov
inc
mov
xchg
cmps
js
ret
cmps
or
mov
adc
inc
mov
shl
addr16
cmp
jno
icebp
and
or
in
addr16
add
fisttp
xchg
xor
loop
cs
aas
jmp
jl
inc
xor
stos
or
aam
inc
dec
jne
dec
pop
pop
outs
clc
xor
and
jae
and
mov
pop
addr16
fisub
sub
inc
sti
popf
outs
popa
sbb
mov
ss
push
mov
mov
mov
push
sbb
das
repz
inc
pop
and
sub
outs
sub
retf
adc
mov
inc
ins
ds
into
ds
outs
add
adc
mov
sub
fild
xor
das
sbb
ja
aaa
lea
sbb
addr16
pop
fmul
push
pop
fsubr
fisub
call
mov
push
gs
imul
jp
popa
imul
add
inc
sub
add
add
jmp
lock
outs
fs
or
or
scas
pop
xor
or
push
jne
and
js
xchg
mov
pop
jnp
mov
cdq
jbe
retf
int
pop
loope
aad
xor
or
or
inc
jl
dec
retf
test
or
(bad)
push
dec
outs
and
imul
int
popw
push
add
adc
pop
out
or
jg
add
cmp
adc
or
outs
inc
cld
fs
jo
std
or
sbb
scas
push
push
sbb
aas
test
push
adc
dec
outs
jae
stos
xor
aas
aas
sbb
lahf
pusha
push
sub
aaa
ror
jp
jne
das
mov
xchg
add
and
or
ins
movs
dec
lahf
jns
mov
cmps
ss
loopne
push
aam
fsubr
xor
out
shl
jmp
sti
push
dec
or
in
jg
call
popa
and
out
push
mov
pusha
lock
dec
push
cmp
push
pop
or
aam
lahf
xchg
mov
movs
inc
and
sbb
and
fwait
xchg
and
ins
push
aad
das
inc
pop
push
and
inc
or
movs
inc
push
mov
ss
or
jae
adc
inc
sub
nop
addr16
adc
adc
push
push
in
popaw
jae
adc
popa
lock
sti
add
and
popf
add
push
or
pusha
jno
add
sbb
mov
inc
push
aam
add
ins
mov
shl
mov
(bad)
pop
verw
movups
popa
mov
mov
inc
sub
sbb
dec
and
xchg
adc
xchg
mov
sbb
(bad)
adc
movs
xor
xor
dec
dec
das
mov
mov
add
cs
enter
sbb
add
or
outs
arpl
js
jp
xchg
push
dec
gs
retf
lock
shl
fbstp
lock
xor
adc
and
dec
adc
das
ins
dec
add
mov
or
mov
mov
repnz
or
pop
outs
es
inc
(bad)
test
cmp
scas
push
inc
cmp
loopne
iret
es
and
iret
dec
push
adc
xchg
mov
inc
dec
or
call
add
jmp
ja
stos
mov
sbb
add
inc
pop
adc
pop
xor
sbb
mov
pop
jne
pop
popa
xchg
push
xor
pop
repz
stos
mov
inc
dec
lock
inc
xor
pop
add
ds
les
mov
jnp
and
pop
add
call
push
les
dec
cld
lock
je
sbb
ret
jnp
inc
pusha
mov
rcl
or
xor
or
add
mov
and
(bad)
cmp
popf
pop
inc
cmp
adc
scas
ja
ror
jle
je
mov
or
push
inc
sar
or
xor
and
(bad)
adc
and
or
int
xchg
lock
ret
adc
pop
cmp
test
fmul
call
pusha
sbb
add
mov
enter
sbb
push
inc
loop
icebp
loope
pop
sub
jmp
cmp
shl
inc
add
push
mov
dec
aam
cs
idiv
in
les
jl
lea
xor
rcl
icebp
push
mov
fadd
(bad)
push
mov
sbb
(bad)
mov
push
in
cmp
and
jnp
hlt
or
rcr
mov
dec
jb
sbb
adc
cmp
push
add
clc
inc
adc
inc
mov
ins
pop
or
adc
jne
add
popa
adc
and
(bad)
and
shl
jb
cmp
fidiv
dec
push
and
sub
add
imul
inc
dec
scas
bnd
sub
ret
shl
push
dec
jge
cs
inc
push
jb
or
cmps
rcr
inc
sahf
or
dec
lea
push
aas
call
retf
out
xchg
in
in
hlt
mov
and
sub
cmp
adc
ret
add
add
call
cld
sti
fs
imul
cmp
and
or
jl
or
mov
push
in
and
and
mov
sbb
push
hlt
imul
pop
xchg
inc
inc
cwde
adc
dec
dec
movs
sbb
mov
stc
push
dec
mov
cmp
mov
push
and
mov
push
adc
xchg
and
or
mov
les
jns
xchg
jecxz
imul
ja
fcomi
je
adc
pusha
push
(bad)
fcom
test
(bad)
clc
mov
adc
mov
jne
push
fdiv
adc
out
push
sub
jae
cmp
aad
dec
and
stc
cmps
mov
test
jne
sbb
fadd
movs
pop
cwde
jbe
and
jo
add
push
out
ins
xlat
mov
dec
mov
(bad)
cmp
or
mov
push
push
cmp
bound
es
push
sbb
push
pusha
xchg
out
popa
xor
cmp
mov
adc
adc
and
jmp
inc
and
fistp
push
add
sbb
inc
mov
mov
mov
push
or
pop
pop
(bad)
fsubr
(bad)
ret
nop
inc
mov
rol
out
push
cld
es
das
pop
push
pop
add
bound
push
pop
pop
dec
shl
ins
movs
dec
cmps
loopne
push
pop
scas
ins
xlat
imul
data16
mov
stc
mov
mov
push
sbb
je
mov
push
nop
hlt
mov
adc
mov
pop
mov
push
ds
ss
and
pop
pop
cwde
push
add
rcr
or
inc
je
gs
pop
arpl
out
pop
add
cmp
add
xor
mov
outs
cmp
into
cs
pop
unpckhps
call
cwde
pusha
push
arpl
mov
cld
fs
gs
cdq
xchg
int3
cmp
and
loopne
or
imul
jo
push
and
add
outs
imul
mov
dec
xchg
shl
push
add
cmp
sbb
test
inc
ret
and
lea
or
pop
(bad)
sbb
ins
das
fistp
or
inc
out
in
rcr
sub
cmp
sub
add
aam
mov
sbb
inc
dec
cmp
add
mov
stos
cmps
xchg
test
xchg
sbb
clc
xchg
test
stos
push
xlat
retf
aam
nop
pop
inc
nop
adc
push
outs
add
data16
js
or
or
pop
sub
push
mov
dec
cmp
sbb
cmc
pop
pusha
lea
jbe
mov
xor
jne
cmp
xor
mov
jmp
cmp
jmp
cmps
data16
xlat
push
in
pop
add
push
loopne
(bad)
das
sub
push
std
mov
push
movs
cld
lods
pop
mov
test
test
mov
mov
scas
mov
imul
in
xchg
mov
inc
push
movs
push
lods
popf
push
lahf
idiv
push
test
repz
push
(bad)
xlat
arpl
adc
inc
psubq
mov
stc
add
add
aad
loopne
add
jns
(bad)
stos
mov
sbb
sbb
mov
jnp
xchg
dec
dec
dec
popa
outs
test
push
adc
xchg
xor
sbb
stos
xchg
dec
add
push
les
scas
pop
inc
push
call
ret
or
sbb
test
jmp
pop
cmps
xchg
adc
outs
inc
push
ss
ins
imul
lds
pop
pop
push
sbb
inc
cmc
call
add
pop
or
jne
outs
ja
mov
mov
dec
push
or
je
nop
stos
xor
add
xlat
pop
or
pop
mov
pop
jnp
mov
aaa
mov
dec
das
test
add
outs
icebp
lahf
add
push
cmp
jne
cmp
fistp
cwde
adc
mov
fst
mov
fadd
push
shr
mov
mov
and
sahf
xor
ins
sbb
out
pop
jmp
xor
cmc
push
xchg
push
fadd
add
ds
push
push
rcr
nop
(bad)
xchg
call
int3
ffreep
pop
push
cmp
push
cmp
leave
loopne
mov
push
in
sbb
nop
std
ret
pop
in
pop
js
(bad)
or
cwde
cs
es
cs
ins
dec
inc
mov
inc
push
aas
lods
push
dec
cwde
mov
mov
test
mov
and
adc
push
int3
cmp
cmp
xor
enter
fsubp
(bad)
pop
xor
sub
sbb
pop
pop
jle
and
out
sbb
(bad)
cld
push
sbb
inc
inc
retf
mov
cmp
out
test
mov
pop
sub
hlt
(bad)
add
adc
lahf
push
cli
mov
adc
or
push
ins
inc
outs
jne
jmp
(bad)
addr16
dec
jae
gs
jg
sub
push
push
dec
push
outs
inc
call
outs
jae
jbe
add
xor
test
inc
mov
push
dec
ret
adc
sub
dec
xlat
push
out
pop
ins
outs
es
pop
bound
mov
pop
dec
out
pop
call
dec
mov
mov
outs
pop
fisttp
movs
push
in
jmp
mov
or
push
push
dec
fmul
pop
dec
mov
push
dec
lea
cmps
mov
ins
div
fld
fsubr
add
inc
adc
(bad)
js
adc
test
fild
pop
stos
sbb
stos
arpl
or
xchg
bndldx
sbb
jno
sbb
inc
jmp
sbb
mov
loope
aaa
sti
lods
adc
cmps
cmp
int3
jecxz
arpl
pop
lea
cs
inc
push
push
and
add
push
jbe
push
outs
mov
add
mov
adc
in
std
or
pusha
or
jecxz
clc
sbb
jl
pop
xchg
lea
iret
aas
push
lahf
or
sub
test
stc
push
sbb
add
push
sub
xchg
repnz
mov
dec
out
jecxz
cmp
mov
scas
enter
dec
fld
adc
xchg
jb
fadd
iret
repnz
or
mov
mov
pop
lock
mov
inc
push
enter
je
cmp
pop
out
pop
inc
push
jg
add
inc
(bad)
or
outs
fcom
cmc
jo
jb
and
sub
cmp
sub
ret
cmp
mov
add
dec
push
sub
ja
sbb
and
(bad)
popa
jns
and
das
add
ret
idiv
gs
bound
cmps
sbb
lods
pop
daa
out
test
cmps
pop
pop
lods
sbb
mov
mov
and
mov
or
sbb
and
sti
or
adc
jno
inc
jnp
(bad)
fmul
pop
dec
pop
mov
ret
push
push
dec
jmp
inc
or
popa
or
aad
jo
cwde
mov
add
inc
addr16
jae
lods
sar
loope
fld
rcl
ja
pop
test
into
push
xchg
pop
xchg
ja
push
ja
mov
cmp
add
mov
xor
mov
xor
mov
and
div
cmp
xor
push
and
and
bound
aas
and
and
add
(bad)
mov
jl
ss
pop
inc
gs
call
mov
jo
dec
add
test
imul
xor
pop
imul
imul
out
or
nop
or
xlat
cmps
add
sub
fwait
cmps
add
add
or
jmp
add
dec
mov
mov
mov
push
pop
loop
test
fmul
add
fisub
adc
out
call
loopne
pusha
add
inc
push
pop
mov
hlt
or
and
ret
mov
mov
mov
int3
ret
sub
xchg
cld
push
mov
outs
ja
aas
or
mov
or
sbb
xchg
call
sbb
fcomp
pop
lea
mov
sub
add
aam
ja
cmps
loopne
pop
pusha
je
push
and
xor
mov
add
data16
mov
jl
jne
sbb
adc
inc
jl
adc
adc
dec
in
(bad)
outs
ins
jo
lock
xlat
shl
or
retf
mov
in
jnp
add
add
pmuludq
pop
sub
xlat
inc
xchg
mov
pop
pop
add
cld
push
mov
add
daa
mov
mov
mov
movlps
cs
unpckhps
add
jmp
xchg
push
xlat
add
fwait
sub
xlat
cvtpi2ps
das
mov
jo
push
jo
aas
je
adc
bound
out
mov
mov
sbb
shl
xchg
xchg
xor
outs
fadd
fwait
mov
mov
imul
dec
inc
dec
jne
ret
je
add
in
sbb
mov
pop
dec
gs
(bad)
ins
(bad)
bound
sbb
(bad)
pusha
and
or
test
sbb
test
or
jno
pushf
fsubrp
sbb
imul
sub
cwde
stos
sbb
dec
mov
dec
xchg
and
mov
xchg
jo
scas
arpl
pop
add
mov
and
mov
xor
shl
popa
shl
test
fistp
pusha
add
dec
jo
or
inc
cmp
test
out
aam
add
inc
jb
dec
and
and
or
adc
stc
in
jae
or
mov
push
fstp
pop
rcl
adc
fistp
adc
hlt
imul
imul
das
pop
or
test
adc
jmp
and
mov
(bad)
adc
sysret
dec
jae
int3
jns
add
out
xlat
add
pop
or
xchg
lock
add
add
pop
mov
xlat
jle
cmps
cmp
les
add
pop
add
clc
pop
hlt
das
int
(bad)
sub
mov
mov
(bad)
dec
push
es
enter
mov
dec
push
(bad)
sbb
add
cmp
jne
in
push
add
popa
clc
ds
add
mov
movzx
sbb
jnp
add
jne
(bad)
jnp
enter
cmp
jne
dec
adc
add
add
push
add
add
ret
adc
jbe
std
and
add
adc
bound
xor
cs
push
push
repnz
mov
fdiv
add
out
cmp
push
inc
or
sbb
cmc
inc
pop
push
push
retf
pop
xor
js
cmp
pushf
push
mov
sbb
add
pop
mov
sub
fiadd
jp
or
icebp
std
or
ror
(bad)
push
scas
add
bnd
daa
ss
call
mov
or
or
cmp
iret
sbb
dec
push
mov
ret
nop
push
mov
dec
cmp
jns
shl
sub
pop
daa
sbb
pop
inc
and
xchg
test
and
cmc
mov
push
std
ja
lock
fist
lahf
ret
dec
sub
jbe
pop
jl
test
jmp
inc
push
add
lods
jp
jne
dec
daa
popa
ins
inc
imul
cmp
or
inc
ss
and
adc
outs
outs
imul
imul
fbld
pop
(bad)
sti
(bad)
out
jl
test
iret
add
mov
or
hlt
or
bound
aas
or
test
xor
or
pop
mov
push
jl
outs
aas
or
pop
jb
pop
cmps
add
clc
pop
jb
mov
dec
fucomp
push
pop
movaps
(bad)
out
fnsave
arpl
(bad)
mov
cdq
retf
pop
retf
sub
test
loop
xor
add
in
iret
and
stos
adc
xchg
lds
dec
outs
jae
sub
sub
test
xor
push
(bad)
jb
mov
or
ja
fldcw
les
jns
sub
jg
rol
mov
push
cmp
inc
dec
push
push
adc
mov
js
lahf
jno
cmp
inc
push
add
or
in
cmovns
fidivr
es
aaa
ins
setae
xchg
sub
sub
jbe
pop
xor
fst
add
lock
pop
icebp
div
popa
xor
xor
dec
add
push
push
mov
inc
jne
ins
sub
arpl
ins
add
test
cmovno
adc
mov
fwait
aaa
or
sbb
in
scas
inc
outs
fs
cmps
pop
pop
jg
loopne
mov
cmp
sar
add
or
ins
imul
arpl
outs
mov
dec
inc
ja
ror
and
fs
test
mov
sub
inc
mov
arpl
in
cmp
outs
ret
inc
jns
inc
outs
outs
imul
push
test
mov
mov
mov
mov
mov
inc
xor
mov
jbe
mov
lahf
adc
cmp
pop
dec
adc
mov
mov
test
and
jmp
and
and
imul
mov
inc
or
rol
inc
pusha
xchg
or
push
inc
sbb
add
cmp
pop
sub
add
cmp
es
cmp
push
mov
push
stos
jle
add
mov
mov
stos
add
or
jmp
or
cmp
pop
shl
inc
xchg
pop
jae
inc
or
mov
lods
mov
pop
xor
pop
jo
(bad)
sub
xchg
cmp
sar
adc
inc
iret
push
or
test
arpl
cmovne
js
fld
repnz
pop
sub
and
retf
imul
fwait
aas
push
mov
mov
sbb
sbb
mov
mov
cmp
retf
sub
jle
imul
and
mov
(bad)
and
loope
adc
mov
call
mov
test
jle
inc
mov
mov
aas
jnp
in
cmp
mov
sub
ret
add
jle
mov
das
mov
movzx
cmp
je
or
je
(bad)
movd
inc
mov
mov
push
call
pop
cmp
jle
pcmpeqd
jne
add
cmp
js
add
ror
sub
test
popf
and
popa
test
mov
adc
push
adc
(bad)
call
jmp
mov
and
or
add
nop
cmp
and
mov
mov
ror
or
mov
mov
cmp
or
test
jle
mov
dec
mov
or
add
not
jg
jle
(bad)
xor
cmp
push
lea
mov
lahf
out
inc
jle
jg
sub
cdq
aaa
push
pop
push
cwde
and
add
lds
int3
fdivp
lea
jmp
mov
push
cli
or
sub
add
jbe
inc
sahf
sbb
pop
or
je
push
pop
push
pop
sbb
pop
xchg
pop
test
and
fwait
lock
and
js
lock
sbb
icebp
dec
inc
sub
or
rol
mov
sub
mov
cmp
cmp
jle
cwde
in
je
in
mov
out
mov
in
(bad)
ds
add
sub
outs
sub
cmps
loopne
call
and
pusha
push
idiv
push
popf
sub
in
aaa
je
push
fisttp
mov
add
pop
mov
shr
jmp
sbb
lds
xor
or
leave
loopne
popf
sbb
dec
stc
fldcw
sbb
mov
pop
mov
xchg
sbb
inc
push
or
and
inc
pop
mov
or
stos
outs
or
xchg
out
push
pop
mov
pushf
xor
push
sbb
jo
imul
xchg
add
ds
mov
aas
pop
and
test
fadd
fisub
aas
mov
pop
aas
pop
push
add
inc
pop
pop
loopne
jo
leave
mov
pop
aam
dec
es
rcr
and
fdiv
sahf
loop
enter
fsubr
ja
leave
into
es
mov
inc
and
in
fild
mov
lock
push
icebp
mov
cld
jg
adc
sbb
cmp
jne
lea
mov
in
or
les
hlt
mov
mov
movs
nop
cli
ret
push
dec
sbb
(bad)
or
or
out
push
and
cmp
and
mov
je
test
je
dec
fild
bndldx
xchg
push
test
sti
push
push
and
mov
pop
mov
push
cmp
pop
push
ins
out
or
pop
sbb
push
inc
sub
out
mov
stc
mov
add
test
ss
push
loopne
loop
mov
mov
mov
lock
in
hlt
mov
sbb
mov
call
xor
pop
jmp
mov
mov
nop
test
movs
jnp
pop
adc
push
hlt
mov
pop
push
or
inc
sbb
push
xor
push
add
cmp
fs
sbb
inc
loopne
or
sbb
sbb
xlat
sbb
push
mov
cmp
mul
cmp
and
mov
adc
ror
scas
(bad)
and
stos
out
fidiv
jb
push
adc
and
jbe
push
das
push
pop
jbe
mov
inc
pop
daa
cmp
xor
cs
das
outs
xor
xor
leave
fisttp
xor
out
sbb
add
out
sti
sub
push
push
push
das
pop
cmp
fisttp
mov
sbb
clc
sbb
sbb
fwait
loopne
das
push
repnz
xchg
dec
mov
xor
test
loope
outs
mov
mov
loopne
adc
idiv
cmp
fdiv
jbe
mov
push
cmp
add
xor
aaa
mov
movntq
xor
jne
scas
(bad)
ins
popa
imul
inc
add
inc
inc
js
imul
add
je
sub
lock
outs
ins
js
add
inc
inc
retf
cld
outs
dec
mov
mov
xchg
jo
gs
popa
push
inc
jae
aam
das
fist
or
fs
shl
cmps
cs
jecxz
(bad)
fsub
outs
jecxz
pop
or
inc
mov
dec
shl
pop
pop
cli
sub
enter
mov
addr16
add
push
dec
jp
push
dec
mov
imul
push
push
add
add
(bad)
psraw
or
imul
loopne
dec
cmp
mov
xor
retf
mov
sbb
ins
enter
mov
pop
inc
inc
je
outs
jns
add
mov
mov
ret
int3
nop
inc
daa
xor
mov
push
outs
and
dec
jmp
into
mov
or
inc
in
ja
jo
push
mov
add
add
add
out
ja
xchg
gs
loope
adc
push
vmwrite
je
inc
ins
adc
cmc
movs
xor
inc
pop
xchg
fisttp
test
push
gs
nop
std
and
(bad)
mov
jbe
mov
pusha
mov
mov
cmp
popa
add
mov
(bad)
or
mov
mov
fiadd
inc
inc
jmp
pop
inc
gs
inc
inc
inc
test
cs
or
sub
inc
inc
lahf
add
sar
ss
leave
cmp
jno
dec
xchg
ins
xchg
ret
mov
aas
dec
mov
xchg
push
jno
push
lods
call
mov
or
mov
outs
push
push
popf
jnp
dec
adc
stos
xchg
or
mov
jo
jnp
or
sub
ds
mov
(bad)
iret
dec
popa
js
gs
push
jecxz
cwde
or
sbb
fs
push
pop
and
imul
pop
movs
ja
add
pop
add
pop
jne
xor
xchg
or
sbb
ja
cmp
pop
sub
dec
push
add
add
jp
pop
mov
jge
fwait
dec
cld
popf
push
shl
pop
rcl
lock
xchg
add
ja
xchg
push
and
add
add
cmp
mov
push
cmp
mov
dec
ins
scas
sub
lahf
pop
push
pusha
adc
add
push
int3
or
call
lahf
or
cmp
xchg
adc
or
sbb
push
outs
lods
jb
cmp
or
inc
jne
jbe
add
xchg
movs
int
add
cwde
xchg
dec
test
or
pop
daa
scas
add
xchg
setg
or
push
arpl
or
push
jb
xchg
scas
test
xchg
xor
mov
loopne
mov
xchg
lds
pop
ja
add
push
ficom
cmp
inc
push
lahf
out
ins
jl
push
add
push
pushf
mov
xor
xchg
jno
or
sub
push
shr
ret
add
push
dec
outs
arpl
fmul
sub
and
cmp
push
pop
jae
shl
daa
and
and
pushf
xchg
daa
xor
ins
stos
daa
and
mov
daa
jnp
outs
lea
daa
add
pop
setae
aas
mov
add
adc
adc
xor
fcom
psrlq
outs
into
and
daa
jge
ins
fs
add
add
repz
dec
addr16
pop
enter
pusha
xor
dec
sbb
inc
push
sbb
add
or
(bad)
(bad)
ins
popa
mov
cli
or
add
mov
popa
jg
popa
dec
cmps
or
jg
add
sbb
loop
clc
lods
or
xor
test
mov
xchg
add
push
pop
pop
ins
add
fwait
pop
popf
add
pop
sub
lahf
cmp
push
inc
inc
add
xor
jnp
jmp
xor
loop
sub
xchg
mov
add
inc
add
adc
out
push
int
sbb
xor
loope
mov
or
add
sub
hlt
inc
imul
mov
mov
xor
ret
inc
push
out
and
push
jnp
mov
xor
cdq
ret
cld
add
arpl
mov
aas
xor
adc
ins
mov
fadd
sbb
shl
inc
jns
clc
add
mov
adc
sbb
or
inc
mov
mov
adc
fisubr
mov
cld
cmp
lea
icebp
test
movs
popf
or
adc
xchg
push
test
popf
cmps
fdivr
test
cmp
push
sub
mov
dec
add
inc
jle
pop
or
or
icebp
xchg
xor
and
aam
cmp
movs
dec
add
pop
sub
out
adc
xchg
fcomp
scas
loopne
cmc
popf
jbe
xchg
leave
arpl
lock
sub
cld
dec
mov
sbb
in
aaa
adc
jo
clc
push
add
shr
push
mov
add
mov
cld
test
mov
adc
add
test
push
pop
lock
sub
in
outs
or
mov
cmc
aaa
or
push
std
in
fsubr
add
outs
mov
js
sbb
ret
aaa
mov
cs
stos
rcr
sbb
rcr
and
lods
mov
das
mov
add
jmp
xchg
mov
sbb
lea
mov
loopne
nop
popa
cmp
jmp
and
sbb
iret
add
fsubr
jnp
pop
push
pushf
mov
mov
push
sbb
call
setne
pop
pop
xchg
shr
sbb
add
push
das
ret
shl
into
sbb
add
lds
add
mul
sti
mov
xor
loopne
adc
int
in
sub
addr16
adc
loop
and
mov
ja
and
push
jae
in
mov
or
xchg
stc
or
fadd
lea
es
adc
mov
ror
ins
adc
or
sub
inc
xor
fwait
sub
add
sub
add
dec
test
xchg
mov
push
xor
push
nop
or
nop
xor
mov
xor
js
mov
xchg
out
shl
push
ins
cmp
mov
out
push
mov
cmp
in
inc
xor
movzx
and
dec
cmp
jg
movs
inc
jmp
jle
test
js
and
adc
clc
jns
inc
ret
push
mov
js
dec
inc
adc
add
inc
sbb
push
in
adc
adc
adc
add
cmp
and
rcr
add
xor
imul
inc
xor
xor
cmp
sbb
or
jns
inc
inc
and
dec
aad
stos
fdivp
mov
sub
data16
ins
inc
cld
or
shl
neg
in
and
pop
push
and
sbb
mov
push
cmp
popa
shl
xor
retf
push
push
sbb
add
pop
outs
hlt
push
mov
test
outs
ror
movs
push
and
mov
sub
pushf
pop
and
add
and
pop
sbb
loopne
sbb
sbb
jne
or
jl
push
push
mov
adc
add
or
aas
xor
push
cld
and
(bad)
cmc
pop
sub
adc
pusha
das
test
dec
fistp
adc
and
aas
mov
pop
push
xchg
pop
adc
sti
ins
cmc
sar
mov
dec
or
shl
scas
or
int
adc
out
inc
cmp
xchg
push
gs
dec
ret
jmp
enter
mov
sbb
dec
sub
mov
imul
loopne
or
sti
push
push
push
xor
sbb
les
add
mov
mov
pop
loopne
clc
clc
mov
ret
test
adc
cmp
adc
jnp
prefetch
mov
xchg
scas
mov
shr
mov
push
cmp
push
cmp
or
int3
inc
and
fsub
mov
add
fst
imul
inc
stc
jb
mov
xor
lods
mov
jl
mov
mov
rol
cmps
xchg
jo
clc
jae
sbb
add
jmp
repz
out
xor
xor
mov
test
add
dec
jle
fstp
scas
cmp
jne
or
add
test
mov
jl
sbb
or
push
hlt
ficomp
fdiv
mov
fstp
(bad)
ins
nop
faddp
fstp
fwait
jmp
data16
mov
(bad)
data16
push
sub
fld
pop
fstp
fwait
in
call
out
pop
jl
add
and
mov
xchg
mov
pop
jmp
push
dec
aas
push
jl
xor
fmul
fnstsw
sahf
push
ret
les
in
in
mov
push
jmp
jp
adc
nop
out
inc
ss
or
loopne
cwde
inc
push
jecxz
pusha
add
loopne
imul
cs
cmp
and
pop
xor
mov
pop
outs
adc
mov
sbb
mov
cld
ins
xchg
jl
add
sbb
mov
dec
cmp
popf
cmp
adc
xor
or
rol
cmp
pop
push
cwde
fstp
imul
js
dec
in
mov
lea
out
sbb
mov
dec
test
sti
pop
fild
and
fxtract
movs
mov
or
mov
pop
xchg
cwde
add
into
ja
push
les
push
pop
and
lahf
cmp
icebp
sbb
push
inc
add
imul
int3
adc
aaa
dec
add
inc
ficom
cmp
or
add
ds
sbb
and
cs
das
fcom
mov
arpl
adc
pop
dec
sahf
ins
add
fdivr
movs
dec
inc
push
pop
mov
int3
shr
add
xchg
rol
push
sahf
xchg
inc
xchg
xlat
lahf
inc
inc
aas
aaa
push
or
xchg
call
xchg
dec
(bad)
or
iret
aas
das
add
xor
push
dec
push
stos
dec
fadd
dec
loopne
cs
add
aaa
or
mov
dec
add
lahf
lock
sub
pusha
pop
dec
cld
push
xor
push
retf
sbb
fsubrp
mov
adc
push
adc
dec
sbb
cmp
cld
(bad)
hlt
pop
or
outs
fcomp
dec
sbb
add
and
pusha
mov
or
cld
push
js
jne
cmc
and
out
inc
loopne
adc
mov
pop
pop
fs
ret
nop
inc
aam
inc
loopne
shl
push
clc
push
sbb
adc
push
mov
dec
repz
or
fdiv
mov
jmp
lea
push
pop
mov
push
movs
pop
lock
test
or
jl
pushf
sbb
dec
call
mov
xchg
in
inc
and
in
das
out
pop
mov
pop
cmp
or
fwait
dec
mov
mov
loopne
inc
sbb
inc
dec
add
nop
out
in
add
push
adc
rol
mov
or
daa
dec
or
push
xor
mov
fadd
outs
pop
inc
xlat
rcr
rcl
les
push
sub
sub
push
cmp
cmp
cmp
mov
clc
jmp
and
leave
sbb
inc
or
sbb
mov
add
xor
jnp
xor
jb
popf
mov
enter
aam
das
mov
(bad)
mov
or
test
pop
pop
push
mov
push
pop
push
xor
(bad)
jmp
adc
aad
mov
pop
jo
push
data16
adc
fcom
mov
sbb
xor
and
xchg
pop
pop
test
add
jg
and
add
dec
add
xlat
das
fbld
aaa
fisttp
cmps
cs
xlat
add
cmp
test
push
push
sbb
in
scas
add
clc
xchg
imul
fmul
jle
fdiv
cmp
aam
xchg
cmp
(bad)
adc
(bad)
jo
push
mov
mov
dec
push
stos
int
or
xchg
into
xor
dec
and
push
dec
test
outs
cli
cmp
jae
push
sub
dec
xor
sub
and
jno
mov
cmp
push
leave
push
cli
and
mov
or
jge
and
mov
cwde
push
mov
sub
xchg
lock
sbb
xor
jbe
add
fisubr
(bad)
fidiv
jb
fld
push
inc
adc
loope
push
rcl
clc
and
dec
mov
add
movs
pusha
call
sub
mov
clc
in
mov
cs
dec
jae
push
inc
pop
add
add
inc
and
pop
scas
mov
xor
sub
cmp
sub
inc
(bad)
icebp
xchg
ds
sbb
movs
ins
dec
and
lods
cmc
das
ret
push
into
jmp
sub
cs
mov
test
jne
gs
jae
jae
cmp
fs
add
cmp
cmp
mov
hlt
inc
call
or
inc
mov
sbb
test
jne
sti
pop
or
test
mov
sub
cmp
ror
in
hlt
sar
enter
sub
loopne
and
loopne
mov
popf
inc
inc
push
(bad)
cmp
or
ins
in
stos
test
fcom
(bad)
lods
out
dec
aaa
popf
clc
loopne
je
stos
(bad)
fistp
je
or
adc
or
jle
les
xlat
jmp
sub
cmc
in
push
sbb
stos
xor
test
mov
(bad)
push
adc
adc
or
sub
test
and
jge
test
jge
das
shl
aam
cmp
sbb
inc
(bad)
cmc
xor
imul
stos
dec
mov
sbb
fidivr
inc
mov
sbb
sbb
push
retf
add
ja
jne
add
ins
lea
cmp
and
jp
and
or
scas
pusha
js
and
mov
xor
xor
call
and
int3
jle
adc
neg
clc
inc
cmp
hlt
cmps
loopne
inc
movs
xor
loopne
push
xor
xor
(bad)
call
jge
push
stos
loop
arpl
inc
or
stos
sar
inc
push
xor
(bad)
add
icebp
das
pusha
and
int3
push
push
test
jnp
mov
sbb
sbb
mov
mov
dec
repz
push
inc
jbe
or
lods
mul
jle
inc
adc
cmps
mov
or
or
or
and
scas
(bad)
jmp
inc
dec
bt
xor
sub
loopne
add
or
add
shl
(bad)
jmp
(bad)
mov
mov
add
icebp
shl
ds
jbe
dec
test
loop
cwde
add
pusha
bound
jg
imul
lea
ins
fnsave
inc
mov
adc
push
in
dec
dec
shr
or
mov
inc
sub
fld
push
test
push
stc
xor
test
cdq
popa
xchg
enter
cdq
xor
inc
mov
jo
dec
test
jl
inc
je
fdivr
adc
or
mov
mov
jo
push
pop
out
pusha
loope
scas
sahf
add
mov
cmp
(bad)
lock
ret
test
mov
xchg
(bad)
dec
sub
fbld
mov
or
xchg
push
arpl
sbb
jne
or
or
pop
cmp
ret
je
jg
imul
inc
or
mov
inc
rol
add
fadd
out
ds
(bad)
call
add
je
jmp
inc
add
jmp
adc
push
mov
jmp
pusha
fwait
sub
adc
or
(bad)
push
adc
dec
gs
inc
jbe
xor
adc
jo
mov
gs
cmp
arpl
iret
or
mov
call
or
inc
(bad)
pop
fs
ret
inc
gs
jae
or
add
dec
shl
sub
pop
cdq
addr16
leave
add
int
dec
mov
addr16
add
mov
adc
imul
imul
and
and
fadd
pop
add
dec
jnp
add
dec
push
shl
cmp
out
fistp
push
pop
add
js
int3
push
and
cmps
stc
in
dec
ror
loopne
inc
xor
mov
imul
lock
fs
push
je
mov
push
nop
out
mov
adc
mov
or
push
into
push
ds
sub
or
and
jne
jecxz
xchg
sbb
cli
add
les
or
jb
je
pop
ret
cmp
sub
sub
out
sub
jns
add
or
xlat
loope
add
adc
call
out
xchg
cmps
sbb
lock
inc
push
push
cmove
inc
and
cmp
rol
pop
xchg
jo
sub
or
dec
(bad)
dec
pusha
inc
fs
jb
jb
je
or
mov
or
add
push
push
dec
fwait
(bad)
ins
dec
shr
adc
jae
xchg
jns
or
lods
inc
or
scas
xchg
xor
cmp
sahf
fisub
lds
call
jb
jne
jo
pushf
inc
dec
add
jne
jp
push
das
add
inc
jbe
mov
mov
shr
or
mov
ror
jno
pop
adc
arpl
or
inc
pop
cli
pop
dec
pusha
and
cmps
push
ror
dec
xlat
pop
jne
ins
xor
push
sbb
add
inc
mov
retf
pop
out
mov
adc
pop
pusha
inc
js
aaa
xor
pop
inc
mov
lods
push
sbb
in
mov
push
or
and
mov
jae
(bad)
je
mov
pop
and
push
push
push
fwait
cmp
(bad)
(bad)
inc
pop
test
jne
popf
mov
jle
loopne
dec
lock
(bad)
pop
mov
mov
repz
mov
retf
test
jmp
or
enter
add
xor
gs
inc
jne
fld
fdivr
pop
test
jmp
jmp
outs
adc
ret
(bad)
aam
pop
sub
dec
repz
sbb
enter
sbb
leave
ss
dec
test
je
xor
or
push
jle
push
dec
fmul
and
inc
pop
or
fstp
xor
mov
mov
movzx
lea
cmp
push
sub
or
add
mov
test
push
jle
mov
cmps
dec
jle
mov
inc
outs
xor
test
fwait
dec
(bad)
sbb
pop
mov
push
inc
push
or
cmp
pushf
out
xor
lock
call
repnz
fwait
bound
jbe
pop
out
aam
and
jns
mov
dec
and
pop
inc
(bad)
pop
cmp
dec
sub
int
push
sub
cmp
and
or
lods
push
jmp
dec
cmp
pop
sub
dec
mov
adc
iret
jo
cmc
js
repz
(bad)
mov
mov
out
js
xor
jae
sbb
into
je
cs
xor
shr
xchg
xor
add
push
xor
or
aam
sub
(bad)
mov
and
jg
add
popa
xor
sahf
mov
cmp
mov
and
push
add
test
push
rol
push
sbb
fst
pop
in
or
int3
inc
loope
fild
jmp
push
push
push
(bad)
jb
data16
or
cs
ret
push
push
test
sahf
loopne
inc
cmp
cmp
inc
xor
mov
sub
dec
and
retf
dec
sub
pop
dec
xchg
pop
mov
mov
aad
jo
dec
mov
mov
pusha
mov
inc
neg
enter
sub
jle
jl
add
add
jo
inc
pusha
iret
cmps
mov
les
inc
push
retf
xchg
pop
arpl
and
loopne
xchg
add
mov
dec
dec
(bad)
lahf
ja
in
push
xchg
das
mov
sbb
xchg
inc
fadd
inc
(bad)
sbb
mov
test
push
enter
out
push
mov
loopne
adc
int3
mov
fdiv
(bad)
sbb
inc
push
push
dec
push
ret
ret
push
pop
inc
push
popa
jb
ins
in
pop
add
mov
dec
add
inc
int3
sub
push
or
or
adc
push
loopne
arpl
dec
je
ins
cmp
ret
rol
mov
mov
fwait
aam
or
xchg
add
sbb
xchg
inc
mov
imul
mov
mov
pop
addr16
dec
or
popa
sbb
repnz
add
and
pop
loope
sub
add
adc
cmp
xchg
cdq
pop
sbb
cmps
adc
add
ins
neg
push
fist
sbb
cwde
(bad)
psllq
mov
icebp
cmp
xor
or
inc
or
push
and
dec
or
sbb
mov
push
dec
add
adc
pop
cwde
sbb
pop
call
push
sbb
or
dec
sbb
daa
or
je
or
jne
pop
inc
sbb
aam
dec
dec
or
(bad)
jne
jne
adc
jmp
jne
ror
arpl
pusha
ins
jne
pop
pop
call
and
mov
sub
sbb
mov
push
out
or
es
(bad)
push
popf
push
and
nop
pop
test
pop
push
pusha
add
adc
scas
inc
sti
dec
xor
fild
push
rcr
(bad)
jg
sub
adc
mov
push
mov
je
pop
add
dec
inc
bound
popa
and
loopne
or
pop
dec
cmovno
xor
mov
sub
sbb
mov
mov
xor
les
mov
lock
(bad)
retf
into
push
dec
jl
rcl
stc
mov
bnd
mov
cwde
adc
inc
inc
and
fdivr
mov
aam
addr16
or
loop
or
pop
pop
and
loope
mov
pop
xor
lea
(bad)
mov
(bad)
clc
movs
or
adc
inc
mov
pop
adc
pop
sti
movs
ins
shl
add
xchg
or
(bad)
js
inc
or
or
inc
test
pop
pop
add
inc
jb
stc
adc
inc
pop
and
movs
mov
test
mov
add
and
hlt
add
jbe
jmp
mov
pop
mov
int3
fiadd
sbb
loop
call
mov
ins
or
cwde
jmp
sbb
mov
add
ss
push
pop
fsubr
cli
push
cs
std
push
cwde
push
idiv
clc
test
push
cli
push
add
push
sub
or
lods
(bad)
shr
add
push
sub
inc
outs
xchg
pop
xlat
test
arpl
cmp
jle
mov
jo
push
adc
popa
jb
mov
pop
clc
and
inc
jmp
retf
inc
mov
push
add
inc
outs
mov
or
imul
inc
add
ins
pop
xor
add
ins
movs
bt
or
add
pop
add
ds
push
ret
popa
jae
in
les
inc
adc
outs
inc
ins
inc
jae
sbb
cwde
ds
pop
movs
inc
lock
rsm
sbb
retf
setb
inc
ins
ds
iret
test
outs
add
adc
fdiv
xor
outs
jb
pop
xor
xor
retf
jnp
outs
adc
xchg
add
jg
pop
push
pcmpeqd
jp
sbb
dec
add
mov
not
ins
pushf
fisub
mov
pop
push
adc
mov
inc
jns
loopne
jmp
inc
and
adc
pop
lock
movs
mov
add
mov
or
ds
xchg
bnd
pusha
adc
inc
lahf
push
push
mov
mov
ret
lods
and
lea
aad
call
or
add
push
test
push
pop
push
(bad)
pop
inc
cmp
test
adc
ret
mov
shl
aas
hlt
mov
cmp
pop
jmp
ins
adc
add
or
xor
ds
call
sbb
mov
lock
sbb
xor
mul
add
xor
or
and
(bad)
inc
sbb
add
sbb
add
push
rol
add
gs
test
sub
sub
ins
fistp
inc
jne
mov
pop
hlt
adc
pop
lock
mov
adc
push
inc
push
dec
mov
sub
es
xchg
jmp
add
pop
cmp
adc
sbb
pop
xchg
test
push
ins
pop
jl
xor
ss
scas
add
adc
push
retf
ror
mov
scas
loopne
mov
aam
pop
mov
dec
add
push
scas
repz
cmp
scas
sub
mov
js
mov
cmp
outs
and
shl
leave
sbb
add
mov
xchg
push
leave
add
pop
cmc
xlat
and
inc
clc
pop
jo
xor
inc
mov
cwde
add
enter
xor
pop
(bad)
push
adc
imul
scas
lock
pusha
hlt
dec
gs
adc
mov
add
div
imul
in
cmp
mov
and
push
push
cmp
and
cmp
daa
inc
jne
mov
pop
xor
mov
mov
sbb
add
int
ud1
sub
push
add
dec
test
ror
dec
movs
dec
inc
dec
adc
cs
cmp
outs
or
inc
rcr
xor
out
mov
inc
movs
jmp
jbe
xchg
in
call
dec
and
fild
pusha
nop
clc
push
push
bound
or
xor
pop
test
cmps
xlat
ja
loop
xor
xor
dec
push
in
cwde
or
ror
and
popa
iret
pop
cmc
pop
int
ret
mov
mov
and
add
jo
lods
imul
(bad)
(bad)
das
hlt
pop
clc
xor
cmp
jle
sbb
inc
lea
inc
loopne
cmp
and
test
push
cmp
jne
and
xchg
clc
inc
jne
aad
fwait
in
sbb
mov
test
mov
jle
pop
test
out
arpl
stc
(bad)
cli
dec
shr
mov
clc
push
cli
pop
jae
adc
jmp
or
scas
ins
mov
mov
stc
pusha
stc
pop
jmp
or
inc
int3
add
mov
jle
fs
mov
inc
push
add
add
loopne
sbb
lock
retf
es
jmp
inc
jmp
ss
adc
je
or
js
and
push
jo
loope
push
cmps
popf
ret
out
jo
popf
int3
sub
or
mov
add
test
cmp
(bad)
pop
add
and
movs
and
sbb
mov
mov
mov
pop
(bad)
cmp
jae
dec
imul
fisttp
sbb
cmp
jb
cdq
fs
or
mov
aaa
and
push
mov
in
mov
inc
repz
sub
jb
je
dec
je
add
dec
dec
gs
ins
dec
cs
aad
add
mov
pushf
pop
mov
inc
ins
(bad)
(bad)
outs
jle
push
pop
and
fimul
mov
xchg
pop
mul
cmp
xor
push
jge
sahf
rcl
pop
sub
and
fistp
push
xor
jb
push
pop
and
or
adc
shr
mov
out
and
xlat
jmp
(bad)
pusha
pop
jo
jbe
mov
in
das
add
add
int
pop
sbb
dec
cmp
dec
and
and
push
(bad)
xor
movs
movs
sbb
and
jecxz
pop
xchg
jmp
mov
push
pop
jg
add
jo
pop
gs
(bad)
fnstsw
outs
mov
add
popw
shr
out
push
loopne
push
push
lahf
sbb
pop
pushf
push
and
pop
cmps
adc
push
js
out
push
je
mov
aaa
dec
clc
jns
jge
or
add
or
push
fwait
(bad)
aaa
das
sub
push
in
pop
sub
push
xor
aaa
aaa
movs
hlt
fiadd
mov
jg
sbb
in
lods
jg
gs
in
das
mov
mov
(bad)
mov
call
retf
jmp
sub
int
jl
inc
sbb
mov
mov
hlt
jmp
xchg
imul
inc
sbb
test
outs
and
sbb
bound
push
or
sbb
pop
loopne
mov
xchg
loopne
add
xchg
mov
test
jmp
fidivr
xor
mov
add
das
cli
je
inc
add
stc
inc
jne
sub
mov
cmps
ror
retf
imul
mov
mov
scas
idiv
mov
sbb
(bad)
mov
inc
mov
call
xor
ret
mov
push
xchg
fucomp
inc
cmp
inc
mov
cmp
push
lock
push
mov
and
or
outs
fwait
loopne
or
push
scas
sub
dec
outs
in
pop
xchg
or
xor
or
iret
sub
shl
and
shr
ss
xlat
mov
sbb
inc
popa
dec
pop
xchg
add
sub
or
jl
pushw
push
(bad)
int3
outs
cwde
shl
aam
ss
cmp
sbb
(bad)
lods
outs
cmp
add
mov
dec
loopne
hlt
in
fdivr
xchg
cs
mov
add
into
sub
mov
or
and
pop
jb
ret
repz
movzx
call
add
mov
xchg
jmp
and
jne
mov
jge
les
xor
clc
or
in
lea
(bad)
in
setle
jmp
fwait
dec
test
jmp
push
je
jo
mov
(bad)
push
lea
cmc
mov
js
lock
add
aaa
push
in
aam
xchg
xor
aam
xor
adc
sub
mov
aas
leave
jmp
out
inc
jnp
pop
cmp
clc
lock
mov
mov
popa
outs
div
mul
jns
ins
add
sti
add
mov
xor
sbb
add
sar
loope
cmp
add
jl
jle
or
mov
add
add
jle
pop
test
mov
sahf
push
add
sbb
push
jbe
dec
div
hlt
add
add
mov
mov
shr
or
xchg
mov
shl
ss
fsubp
icebp
call
mov
sbb
push
sub
push
imul
add
sahf
jl
mov
sub
add
cld
inc
sub
pop
sbb
push
out
push
jge
(bad)
mov
xchg
sbb
pop
inc
push
jne
xchg
mov
push
push
lea
or
xchg
add
push
cmps
jnp
xchg
movs
std
push
add
push
mov
add
dec
xchg
rcl
jno
mov
cmc
jne
inc
(bad)
push
movs
inc
cs
mov
pop
inc
call
pop
and
ret
loope
mov
stc
add
add
xlat
and
call
add
mov
and
pop
fsub
push
std
ds
push
mov
cli
cmp
xor
adc
popf
mov
push
inc
nop
loopne
add
mov
jmp
mov
loopne
cmp
cmp
fiadd
clc
hlt
dec
in
jmp
shr
faddp
test
xchg
je
mov
dec
and
jl
mov
(bad)
push
js
and
ins
rcr
mov
push
cmp
enter
push
mov
jge
push
inc
les
sbb
jae
loopne
mov
fsub
or
in
test
jmp
push
rcl
in
cmp
pop
shl
sar
rcl
mov
push
mov
sbb
mov
cwde
push
loopne
popf
(bad)
pop
push
and
inc
int3
adc
mov
mov
and
add
mov
mov
lods
and
or
mov
ins
out
inc
push
(bad)
int3
xor
ins
ja
or
aad
jmp
pusha
sbb
or
pop
(bad)
adc
ins
daa
(bad)
or
mov
cmp
mov
xchg
call
add
cli
push
shr
pushf
xchg
push
hlt
push
je
pushf
cs
inc
or
inc
cmp
inc
lock
clc
adc
mov
push
cld
paddusw
cwde
fsubr
add
pusha
push
call
loopne
xchg
or
and
lds
call
push
sbb
or
jne
xor
jmp
cmp
cmp
xchg
adc
sub
xchg
inc
pop
lahf
xchg
sub
sbb
out
cmc
xchg
shr
fild
or
jno
mov
popa
adc
cmps
mov
clc
dec
jle
fidivr
div
fsubr
xchg
push
xor
mov
cdq
ret
arpl
push
mov
(bad)
add
and
add
adc
lods
clts
in
add
mov
ror
rol
ja
push
cmps
or
lea
xor
popa
xchg
ins
add
imul
imul
jne
loop
xchg
xor
nop
cmp
sub
dec
je
add
add
loope
pop
cmp
mov
add
shl
jo
adc
jb
clc
sar
aaa
and
shl
cmp
dec
push
or
adc
div
inc
sbb
cmc
mov
xlat
enter
sub
dec
aam
add
in
jp
mov
xchg
loop
adc
xor
cmps
aas
shr
ins
inc
xor
adc
mov
and
dec
mov
add
dec
mov
adc
dec
mov
xchg
xor
push
rol
mov
mov
add
loop
aaa
xor
mov
pop
ret
add
scas
not
fdiv
adc
mov
mov
cmp
mov
test
pop
pop
jo
rcl
(bad)
or
or
inc
mov
mov
pop
sub
xor
ds
icebp
mov
mov
pop
inc
shr
ret
into
mov
std
ror
shl
(bad)
mov
inc
mov
add
mov
mov
inc
dec
jne
xchg
mov
push
icebp
push
xchg
adc
sar
mov
mov
jle
adc
test
push
loope
sbb
out
mov
add
adc
test
mov
test
cmp
push
inc
mov
pop
enter
enter
sub
pop
and
mov
mov
pop
outs
cmp
jp
ds
mov
mov
mov
jle
xor
pop
les
mov
ss
sub
cmp
mov
(bad)
out
cmp
sub
push
push
jecxz
inc
jo
hlt
push
dec
xbegin
js
test
lea
pop
and
jle
xchg
jl
stos
xchg
clc
je
scas
pop
sbb
lock
pop
xchg
lods
mov
jmp
movs
call
push
jbe
mul
mov
cmp
jge
add
jge
fs
inc
dec
xor
sub
jb
push
je
sub
je
mov
adc
gs
fucomi
and
mov
jo
cmp
and
pop
add
ror
lock
je
jo
push
mov
pop
fsubr
inc
lods
test
iret
pop
cmp
mov
pop
add
or
sbb
pop
push
imul
test
mov
lods
ins
add
mov
mov
test
enter
push
mov
jecxz
sti
and
mov
jmp
and
ins
or
clts
popa
xor
xor
popa
or
xchg
out
pop
mov
and
sbb
add
pop
test
mov
lahf
ja
push
inc
je
dec
aaa
mov
pop
dec
ror
push
aaa
mov
(bad)
mov
dec
add
lock
mov
dec
sti
pop
sbb
je
mov
push
nop
hlt
mov
out
xor
jl
ins
push
rcl
push
add
push
fcom
jp
push
call
adc
sbb
sub
clc
jmp
gs
jb
outs
je
bound
pop
jp
in
stc
add
or
test
(bad)
sti
pushf
dec
or
push
jb
push
je
gs
ins
daa
dec
sbb
inc
inc
gs
sub
pushf
int
pop
inc
jnp
inc
inc
jns
jae
das
or
mov
std
(bad)
clc
pop
or
push
inc
mov
pusha
and
cmps
inc
int
mov
ret
nop
out
cmps
aam
sub
xor
ja
lea
sbb
mov
lock
add
enter
rcl
test
in
cld
jno
and
jnp
lock
call
adc
popa
dec
dec
xor
lock
cmp
adc
push
push
jb
scas
mov
push
cmp
xor
or
jo
inc
push
fs
or
jno
fdivr
outs
pop
mov
mov
sbb
mov
push
mov
fmul
cmp
setg
jmp
dec
ror
xor
clc
mov
adc
ret
lock
sbb
and
sar
fisttp
ss
jb
inc
jl
cs
cs
add
dec
nop
xchg
ror
pushf
push
adc
push
loop
pusha
sbb
test
or
fld
lock
arpl
loope
adc
clc
fmul
test
in
loop
mov
test
add
add
inc
xchg
mov
cmc
jo
scas
arpl
cmp
outs
pop
inc
(bad)
jmp
std
and
and
and
add
add
add
add
add
add
add
add
add
add
push
xchg
jle
aaa
out
xor
xor
loop
jne
jo
add
mov
ds
pop
push
mov
sahf
inc
add
dec
add
push
dec
mov
mov
add
dec
jle
adc
push
add
push
dec
sbb
pop
add
pop
add
mov
repnz
dec
pusha
add
add
loope
jmp
add
imul
add
outs
add
jno
jb
jae
add
jbe
ja
scas
pop
lock
jns
add
add
jle
mov
adc
call
jl
fs
scas
sti
cmps
add
push
clc
jle
sub
pop
outs
push
ins
add
add
lock
scas
xchg
pop
add
mov
push
dec
imul
ins
sbb
push
loopne
mov
hlt
xchg
add
push
ret
and
into
retf
psubd
adc
xor
cmp
sbb
pop
inc
cwde
ret
add
jne
or
imul
sub
sbb
or
jae
in
(bad)
aad
mov
outs
and
jns
push
jae
mov
rcl
das
jb
outs
jae
fidiv
ins
add
mov
xor
add
xlat
xchg
sub
pop
inc
or
push
popa
ins
jne
(bad)
or
ret
adc
movs
(bad)
call
mov
xor
jns
add
shl
outs
xor
add
push
cli
mov
sbb
xchg
ds
xchg
push
fiadd
(bad)
adc
push
mov
push
loope
pop
adc
push
inc
shl
push
aam
hlt
ret
test
fwait
ret
or
clc
ins
jl
je
push
mov
adc
pop
test
jns
add
(bad)
push
addr16
in
mov
xchg
stos
push
shr
in
dec
jne
test
movs
je
iretw
outs
adc
jbe
push
and
inc
call
inc
inc
inc
inc
jp
(bad)
ja
jge
ret
sbb
push
xor
or
setge
jmp
rcr
jae
add
pop
xchg
xchg
mov
daa
loop
inc
add
es
test
xor
ds
xor
jmp
xchg
mov
xchg
inc
cwde
nop
mov
cmp
and
adc
inc
bound
(bad)
inc
sti
jecxz
push
imul
xchg
or
in
out
inc
dec
or
or
sub
sbb
es
das
adc
cmp
scas
push
dec
pop
xchg
jg
sbb
xlat
cwde
inc
jg
mov
cmp
push
add
imul
xor
pusha
xchg
popa
pop
or
or
mov
sbb
or
cli
adc
inc
sbb
adc
jae
sub
outs
pop
outs
cs
aaa
pusha
fs
(bad)
inc
dec
push
ja
test
mov
jno
inc
fs
jae
mov
push
push
imul
lods
push
or
loopne
adc
loop
popa
and
retf
add
or
cmp
push
inc
xchg
xchg
or
and
mov
fs
pusha
sets
or
push
mov
dec
add
pop
(bad)
(bad)
dec
inc
inc
and
push
test
push
xchg
fstp
scas
bound
in
data16
sahf
rol
jo
ss
inc
pop
push
push
inc
lods
loope
jo
fiadd
fsubp
push
xchg
push
mov
sahf
mov
pop
sti
mov
dec
lea
jb
pop
pusha
out
push
inc
mov
jne
lock
sbb
hlt
adc
add
inc
outs
cmps
add
jns
adc
cmp
lock
xchg
adc
pusha
ins
lds
adc
fwait
iret
inc
jmp
aaa
add
movs
data16
ucomiss
mov
xor
repz
pop
loopne
dec
jnp
push
outs
jae
sub
(bad)
pop
std
rcl
push
pop
clc
add
test
mov
or
add
jle
sub
stc
mov
outs
jno
xlat
cmp
cs
lds
sbb
iret
sbb
outs
dec
xchg
cmp
nop
cdq
or
leave
adc
jp
push
in
push
test
ret
dec
enter
daa
int
pop
loope
push
ss
push
cwde
loop
test
dec
sub
cs
and
pop
and
push
inc
pop
rol
xor
outs
ins
sbb
push
pop
mov
mov
or
dec
bound
sbb
push
pop
adc
cmp
int
mov
pop
xor
adc
adc
enter
shl
popa
addr16
hlt
mov
xlat
pop
inc
pusha
fiadd
sub
xchg
fisub
adc
xor
(bad)
gs
mov
jno
jne
mov
adc
pop
mov
sbb
push
pusha
stos
loope
retf
ins
loopne
bound
add
dec
dec
push
test
mov
mov
inc
enter
inc
rol
xor
mov
retf
cmp
dec
add
dec
pop
sub
cs
cwde
add
outs
jae
push
push
and
stos
dec
inc
jb
sbb
retf
cmp
inc
lea
fsub
add
das
not
rcl
(bad)
push
push
sub
ins
daa
(bad)
pop
cmp
aas
lea
lods
outs
jo
mov
add
pop
mov
push
inc
(bad)
retf
out
popa
mov
fsub
adc
loop
mov
inc
cmp
push
sub
pusha
or
jns
sub
jne
repnz
cdq
push
add
inc
push
xchg
fidivr
sub
mov
aaa
mov
push
push
and
push
push
push
mov
lock
mov
mov
clc
idiv
add
mov
xor
add
cld
and
add
test
(bad)
adc
pop
ret
or
xchg
inc
lock
or
mov
mov
mov
cmp
jg
out
fs
test
jl
inc
xor
add
inc
xor
sub
adc
mov
mov
jne
cmp
enter
aam
leave
ret
mov
mov
cdq
push
push
and
movs
sub
add
adc
cmp
push
and
add
and
xor
or
jno
imul
push
pop
cmps
test
or
stos
sbb
mov
clc
mov
retf
mov
or
inc
jo
xchg
enter
sbb
mov
jmp
and
stos
and
or
bound
mov
pop
jae
(bad)
jge
test
and
aas
adc
and
mov
adc
xchg
shl
add
sbb
or
inc
push
lods
aam
or
ss
les
in
lock
lea
add
sub
adc
fiadd
sub
dec
jmp
cmp
mov
cmp
add
and
mov
push
rcr
add
push
or
xor
or
jle
shl
inc
clc
test
adc
outs
outs
pop
imul
int3
push
or
sub
outs
dec
sbb
adc
adc
out
add
push
aam
cld
adc
fidiv
test
xor
mov
mov
mov
xor
dec
fcomp
add
xor
xor
push
sbb
adc
ret
jg
add
adc
mul
mov
sub
add
es
push
daa
rol
and
jmp
and
xchg
ret
in
or
test
jns
mov
iret
hlt
pop
and
or
pop
push
cs
xchg
aam
ror
neg
(bad)
jl
jle
add
push
mov
ror
or
jb
or
add
jnp
pop
(bad)
jmp
sbb
iret
mov
inc
mov
ficom
pushf
imul
and
adc
aaa
sti
aas
ins
xchg
shl
inc
mov
outs
or
cmp
or
inc
repnz
mov
popf
pop
add
cwde
jne
fsubr
int3
push
push
jge
push
adc
push
sub
clc
lds
add
and
aaa
mov
aam
aaa
data16
sub
jp
or
outs
lea
loope
sar
ret
cdq
mov
mov
mov
rol
imul
sub
xor
cmps
add
ja
std
cli
sub
clc
pop
or
cmps
loope
sub
je
dec
je
jmp
scas
or
push
scas
mov
or
jne
mov
fstp
sub
data16
xor
or
adc
and
cmp
sub
sbb
cli
inc
xor
inc
ss
rol
cmp
add
jo
addr16
test
ja
ror
mov
xor
add
adc
jnp
in
jle
ins
push
sub
push
(bad)
outs
int3
inc
cmp
adc
mov
fadd
dec
scas
fldenv
add
lock
add
and
add
cs
je
in
inc
add
push
cli
dec
movs
ins
repz
ret
fadd
leave
(bad)
add
pop
sub
add
sub
or
push
add
cmp
sbb
sbb
push
adc
mov
mov
xchg
push
clc
test
xchg
shl
adc
inc
mov
ret
int3
pop
and
inc
ret
fist
lods
loopne
mov
push
add
je
sub
adc
or
or
(bad)
mov
sbb
ret
push
or
inc
sbb
cdq
loopne
mov
push
sbb
lock
in
mov
fsub
mov
call
jb
and
mov
ds
adc
enter
jns
and
adc
pusha
mov
ror
fcomp
mov
cs
fdiv
add
dec
xchg
test
ret
add
(bad)
mov
pop
sbb
aam
push
sbb
mov
inc
adc
jns
sub
inc
xchg
mov
jns
sbb
fs
clc
int3
inc
repnz
inc
hlt
pop
mov
mov
cdq
jo
and
mov
and
hlt
iret
inc
xor
in
call
xor
or
push
aas
cmp
mov
loopne
jb
inc
fs
dec
fsub
es
dec
lods
cmp
movhps
cwde
mov
push
cmp
sbb
adc
xor
push
outs
cmp
push
cmp
sahf
xor
fld
rol
mov
ss
adc
pop
xor
pushf
xchg
jle
es
and
add
xor
adc
and
aaa
call
mov
add
or
mov
or
mov
jb
adc
cwde
fs
aad
jbe
cmp
test
xchg
cmp
push
loopne
sbb
mov
aad
stos
mov
cmp
jg
sub
or
lea
lods
inc
mov
push
addr16
mov
adc
jnp
mov
cmp
outs
ret
sub
dec
push
push
dec
in
rol
ret
sar
popf
lea
fucomi
adc
pop
cmp
mov
add
(bad)
sbb
dec
xor
lock
push
jle
mov
sbb
jmp
jg
js
scas
xor
sbb
add
call
call
sbb
cdq
xor
rcr
cmp
inc
jb
test
pop
das
mov
and
pop
popa
sbb
leave
cmp
test
push
xchg
push
nop
shl
jmp
pop
adc
jb
jae
lds
(bad)
jae
jae
sbb
xchg
mov
mov
pusha
pop
mov
in
lds
cdq
les
ss
add
cmp
leave
push
add
cwde
dec
jmp
js
push
es
(bad)
fadd
pop
xchg
or
push
dec
xchg
sbb
dec
and
or
or
repz
aam
stos
or
inc
pop
push
(bad)
cmps
ret
xor
pop
adc
sbb
push
inc
clc
cdq
and
push
ins
clc
dec
sbb
cmp
xor
ret
xor
dec
pop
sbb
jmp
pop
fld
sub
ss
loopne
mov
sub
cmp
mov
push
rcr
pop
daa
loope
add
test
jg
pop
loopne
push
and
cmp
arpl
sbb
mov
jmp
jne
nop
inc
push
dec
xchg
sbb
pop
pop
mov
xchg
addr16
movs
in
dec
ret
push
inc
call
call
popa
leave
sub
sbb
xchg
fst
pop
cmp
std
push
mov
push
jle
mov
xor
and
orps
push
pusha
pop
push
cld
mov
enter
mov
add
(bad)
js
sbb
sub
(bad)
xor
rcr
xlat
pop
jnp
je
push
jb
pop
or
mov
fimul
lea
sub
dec
push
push
call
mov
add
rcr
jl
inc
rsqrtps
int3
cmp
cmp
inc
shl
xor
cmp
sbb
cmp
add
pop
ja
pop
(bad)
pushf
js
xor
jmp
loope
sahf
sbb
ret
push
popa
or
sbb
std
scas
sbb
add
jno
push
shl
jo
sub
sub
jmp
cmp
in
popf
mov
cmp
mov
bound
fst
enter
or
xchg
mov
ins
sar
mov
loope
inc
(bad)
fadd
inc
sbb
ins
out
or
das
or
and
sbb
or
retf
push
mov
mov
aas
jg
sub
or
das
nop
jne
stos
cmp
add
daa
push
push
lods
fs
mov
sub
and
and
jnp
scas
xor
jae
stos
add
mov
repnz
enter
xchg
adc
jae
pop
mov
add
and
ret
inc
mov
lock
test
arpl
dec
push
sub
call
cmp
je
pop
jbe
push
sahf
sub
xchg
sbb
mov
clc
mov
lods
clc
js
dec
inc
shl
or
cmp
and
jo
repnz
push
push
push
mov
xchg
xchg
into
ss
daa
sub
sub
sub
xchg
xchg
xchg
sub
xchg
xchg
xchg
adc
adc
xor
lahf
adc
mov
adc
repz
das
(bad)
push
add
add
nop
in
call
inc
dec
push
push
inc
ins
outs
jb
je
ins
dec
outs
je
ins
outs
ja
fs
add
cmp
loope
mov
pop
push
inc
test
(bad)
fdivrp
adc
or
aad
jo
xchg
je
movs
dec
in
or
call
xor
outs
in
push
test
pop
pusha
mov
sub
ficom
pop
lock
mov
inc
out
lods
lock
pop
je
in
pop
cmp
aam
sub
call
mov
push
movs
rcl
(bad)
jmp
pop
fwait
loopne
inc
pop
mov
into
add
dec
scas
add
adc
add
add
mov
cmp
mov
xchg
cmp
sbb
and
add
pusha
pop
popa
pop
arpl
lahf
dec
xor
ins
jo
icebp
mov
and
int3
out
push
je
fstp
sub
daa
add
dec
in
loopne
lock
inc
das
push
inc
push
pop
push
push
dec
pop
inc
pop
pop
inc
inc
pop
loope
sti
mov
inc
pop
add
sti
mov
ins
sti
aas
add
shl
cmps
(bad)
mov
jmp
in
loope
aaa
or
dec
pop
push
dec
dec
dec
inc
clc
jle
lock
cmp
push
push
inc
dec
inc
dec
push
dec
and
pop
lock
add
fld
je
xchg
(bad)
xor
pop
jmp
(bad)
or
sbb
xchg
add
pop
pop
fld
sbb
call
sub
outs
xchg
std
push
pop
inc
push
pop
dec
push
fiadd
sub
adc
jmp
adc
add
sbb
inc
dec
shl
dec
push
mov
jno
outs
xor
and
pop
icebp
add
js
cs
fist
pop
mov
push
inc
push
dec
dec
inc
add
mov
or
or
add
or
cwde
push
and
add
outs
jmp
bound
ret
loopne
test
rcr
jne
push
enter
inc
and
sbb
mov
jb
pop
gs
arpl
cmp
stos
jb
dec
add
add
arpl
jnp
or
pop
inc
js
push
add
jmp
add
cmp
fmul
(bad)
retf
stos
arpl
pcmpeqd
jb
stos
add
outs
int3
add
mov
push
mov
outs
daa
scas
cmp
imul
xor
pop
cwde
dec
jne
cdq
call
xor
rcr
jo
sbb
inc
push
fldcw
jp
or
js
pop
bound
daa
xor
jo
imul
mov
mov
push
ret
or
outs
arpl
mov
jnp
add
ror
dec
popf
stos
sbb
sub
pop
(bad)
sbb
nop
aaa
sbb
dec
xor
inc
dec
inc
shr
cmp
or
into
xor
js
sbb
mov
add
lods
imul
fcomp
push
sbb
adc
xor
mov
lods
and
dec
cs
adc
add
aad
inc
pop
aas
(bad)
xor
adc
inc
movs
mov
outs
sar
xor
test
push
cmps
adc
push
inc
outs
xor
or
js
pop
add
pop
xchg
add
lahf
and
add
(bad)
cmp
xchg
pop
jg
test
push
sub
mov
outs
xchg
or
inc
push
xor
dec
aaa
lods
mov
dec
adc
xor
inc
inc
cmp
fs
loop
cmps
sub
xchg
aaa
adc
aad
cmp
aas
ss
cmp
inc
inc
dec
inc
inc
add
inc
imul
movs
andps
xor
loopne
test
in
inc
xor
clc
inc
fisub
dec
push
sbb
lock
dec
pushf
dec
dec
pop
mov
ins
stos
or
xor
ja
xlat
push
ss
je
push
dec
dec
push
inc
push
pop
loopne
bound
cwde
inc
outs
inc
dec
loope
scas
cmp
push
dec
push
dec
or
mov
fild
outs
pusha
cmp
ss
or
push
inc
sbb
dec
jnp
clc
jno
shl
test
pop
shl
xchg
bound
div
mov
pop
outs
bound
shl
stos
ins
pop
sub
inc
sahf
add
sbb
and
push
pusha
sub
ret
pop
pushf
mov
call
pushf
mov
add
shl
sar
cwde
jecxz
je
sub
imul
push
push
sub
add
push
ins
xor
bound
sub
jne
lock
pop
clc
leave
jne
faddp
ds
dec
imul
jp
pop
fwait
or
xor
jae
jae
mov
mov
data16
scas
sbb
xlat
add
add
or
fcomp
jne
popa
les
test
sahf
xor
cs
or
and
fld
pop
xchg
mov
push
fistp
jne
sbb
outs
imul
pop
fbstp
xlat
sub
inc
push
push
or
ins
lea
leave
pop
mov
or
jae
jne
pop
stc
add
sub
cdq
mov
xchg
xor
sub
lea
js
adc
adc
imul
cs
push
fisub
jae
mov
test
shl
popa
jo
ret
dec
das
add
or
scas
adc
mov
iret
or
inc
sbb
push
sub
lock
xor
sub
jns
test
cmp
idiv
fisubr
push
mov
pop
add
aad
cmp
pop
mov
inc
imul
xchg
or
ret
rcl
mov
adc
add
cs
jne
xor
mov
jle
xchg
dec
add
dec
add
lds
sbb
inc
jo
pop
loope
repnz
cmp
push
pop
mov
sub
stos
jno
mov
sub
test
ret
icebp
pop
(bad)
aad
push
pop
mov
xor
cmp
xor
xor
xor
and
xchg
xor
ret
xchg
loop
aad
dec
loopne
adc
sub
pop
daa
push
sub
test
push
ins
aam
xchg
jnp
syscall
inc
mov
add
dec
dec
adc
dec
or
push
mov
push
bound
outs
and
adc
(bad)
ret
adc
push
sbb
sbb
push
add
fisub
push
push
in
pop
add
(bad)
mov
hlt
push
lock
popf
pop
sbb
int
scas
cmps
or
in
or
mul
shl
daa
in
lds
ja
popa
loopne
add
sti
test
or
arpl
aaa
add
mov
xor
sbb
retf
or
cld
jb
loope
add
out
cmp
or
das
adc
push
shl
ror
lock
jmp
sub
push
fbstp
push
iret
sub
mov
pop
cdq
or
adc
jmp
pop
adc
(bad)
push
sbb
xor
lea
cld
xor
push
cli
daa
cmp
nop
xor
add
jnp
jno
jb
(bad)
or
cmp
and
and
and
ins
test
inc
xchg
or
push
push
pop
push
dec
inc
pop
dec
mov
ret
mov
push
push
sub
cmp
and
fs
inc
push
sbb
sub
and
cmp
sbb
pop
add
loope
aaa
in
fist
int
xor
push
pop
add
daa
cmp
push
inc
dec
push
push
or
push
aam
sub
adc
jno
sbb
test
sbb
cmp
cmp
dec
pop
imul
jno
or
sub
or
push
stc
and
popa
xor
fcmovb
xor
pop
jo
sub
ins
xor
in
or
jge
xchg
aaa
pop
dec
mov
sti
clc
in
push
cdq
enter
sub
das
mov
fst
or
xor
pop
and
(bad)
sub
loopne
add
mov
mov
push
sbb
xor
scas
dec
add
ins
hlt
dec
test
arpl
ret
jno
pop
test
mov
push
xchg
push
pop
push
lea
or
(bad)
ret
dec
sub
sbb
icebp
cmp
cmp
pop
loopne
adc
adc
and
adc
mov
inc
and
mov
aad
sub
ins
rcr
sub
aaa
add
and
mov
push
dec
xor
and
scas
hlt
jno
imul
xor
imul
mov
push
xchg
push
inc
(bad)
xchg
setne
push
dec
inc
push
jno
adc
lds
mov
or
push
pop
mov
dec
add
repz
or
and
sbb
or
or
outs
xchg
xchg
rcl
mov
shr
xchg
arpl
push
add
mov
mov
test
retf
adc
push
sbb
pop
fistp
sbb
test
jmp
mov
cmc
adc
gs
jecxz
lods
dec
cmp
out
dec
inc
add
mov
add
ret
mov
hlt
enter
movs
cmps
add
pop
mov
shl
xor
popa
clc
pop
add
mov
sbb
mov
jge
or
bound
jg
mov
fadd
inc
je
xchg
imul
and
icebp
add
adc
mov
call
adc
jecxz
adc
aaa
xlat
add
daa
je
fwait
add
lock
mov
clc
jmp
dec
inc
mov
xor
nop
sbb
pop
sar
in
sbb
mov
rcl
adc
dec
out
cmps
es
es
xor
scas
arpl
mov
sahf
into
ins
jb
cwde
add
inc
mov
loopne
pop
add
mov
out
mov
push
inc
push
fmul
dec
fs
iret
or
js
sbb
or
test
pusha
add
dec
add
push
add
adc
in
daa
out
and
ret
lods
jp
add
pop
cmp
or
add
adc
pop
mov
out
int3
or
jo
cmps
(bad)
lock
adc
cmp
scas
push
iret
pop
xlat
ffree
sub
push
xor
test
push
dec
jbe
fbstp
adc
sar
jg
push
cmovno
push
dec
push
pop
pop
enter
bound
cdq
jne
addr16
lods
jo
imul
jne
cmp
js
imul
mov
cmp
out
inc
cmovno
inc
add
add
jne
in
mov
ins
mov
adc
lods
aas
inc
inc
dec
dec
jp
cld
push
shr
popaw
scas
push
call
pop
adc
mov
imul
gs
loope
gs
ins
jne
aaa
jns
aaa
mov
je
adc
push
rcl
call
xchg
inc
ror
movs
add
lahf
adc
dec
inc
xchg
rcr
lahf
or
retf
ss
mov
call
jecxz
mov
and
aaa
pop
cs
ins
inc
out
stos
lea
scas
imul
xor
mov
sub
(bad)
push
jmp
jnp
mov
je
gs
or
sub
push
lock
jns
dec
mov
mov
add
cs
or
cmp
mov
lds
add
inc
ins
imul
xor
dec
cwde
inc
mov
or
adc
add
or
test
dec
jecxz
dec
adc
dec
mov
mov
ret
clc
retf
bound
nop
out
pop
add
popa
repnz
jnp
cmp
pop
jnp
pop
mov
adc
adc
push
dec
stos
inc
mov
inc
pop
push
pop
push
dec
pop
ja
inc
aaa
out
push
jle
adc
cmp
push
dec
adc
pop
xchg
mov
(bad)
dec
inc
mov
mov
retf
push
sub
push
lea
idiv
and
push
or
dec
jne
bound
xchg
pop
or
popa
je
adc
or
pop
popa
cld
dec
lahf
jbe
pop
xor
mov
lds
arpl
inc
jmp
pusha
mov
sub
shr
sub
or
fild
or
add
fsub
or
push
inc
out
mov
mov
add
push
pop
jne
aad
dec
xor
jne
pshufw
and
mov
js
or
inc
scas
mov
sbb
sti
dec
inc
xor
push
or
xchg
adc
jmp
mov
pop
stc
lods
push
cmp
mov
adc
push
add
or
cmc
jp
mov
mov
outs
pusha
cmp
mov
or
call
daa
inc
test
syscall
mov
outs
cmps
dec
cmp
arpl
imul
and
out
inc
test
test
jmp
test
into
mov
es
and
mov
sub
pusha
out
add
sub
rol
lahf
sub
(bad)
sti
add
imul
inc
stc
add
pop
ficom
outs
mov
jle
pop
xor
or
or
cs
test
mov
call
es
jo
mov
push
dec
fstp
or
xchg
push
pop
inc
fcomp
mov
cmp
add
jg
(bad)
push
sbb
(bad)
iret
dec
dec
dec
dec
push
push
aam
outs
push
leave
add
mov
clc
mov
pusha
inc
adc
add
xchg
mov
in
push
dec
test
inc
cmp
mov
outs
mov
inc
lahf
adc
das
sbb
and
clc
sbb
sar
into
sub
jp
xor
(bad)
ins
adc
xchg
ss
jnp
jge
xor
jnp
pop
retf
jle
jae
and
jge
push
cmps
add
lock
or
shr
jle
lds
mov
das
out
stos
mov
je
add
mov
cmp
pop
mov
pop
sub
fadd
pop
add
outs
outs
mov
mov
inc
mov
cmps
jo
dec
pop
xor
ret
or
xor
or
mov
adc
and
push
adc
in
sti
mov
aam
nop
pusha
or
std
add
or
push
cs
(bad)
(bad)
push
shl
jae
dec
lea
inc
add
outs
sbb
(bad)
pop
jns
cs
cmp
jg
or
(bad)
dec
inc
push
push
pop
mov
inc
dec
inc
(bad)
and
sub
test
outs
fsub
adc
jb
in
loope
bound
add
inc
xchg
dec
sbb
mov
jb
stc
sbb
or
je
int3
mov
push
dec
jo
in
popf
dec
dec
push
mov
daa
lock
mov
leave
das
int3
push
or
outs
dec
cdq
xor
gs
cdq
(bad)
push
xchg
adc
pop
cmp
in
icebp
dec
jo
or
jle
adc
(bad)
daa
cmp
outs
je
ins
jb
and
mov
xor
mov
call
les
imul
mov
(bad)
add
outs
jl
add
pop
inc
lock
dec
mov
fbld
outs
jne
add
cmp
fcomip
xor
xor
push
add
test
jne
mov
retf
icebp
dec
rol
ja
xor
sub
scas
std
adc
push
arpl
fiadd
cmp
add
mov
push
rol
mov
popa
pop
adc
jns
in
or
dec
jno
and
ins
push
xor
xor
xor
dec
js
lods
xor
sbb
xor
xor
in
add
lods
or
sub
(bad)
pop
fistp
js
aaa
mov
sub
(bad)
lea
jns
xor
stos
jae
aam
cmps
sub
out
sti
pushf
call
sub
sub
push
inc
or
sbb
jae
push
push
and
jb
out
add
jnp
aaa
pushf
mov
mov
cmp
sub
out
lock
add
push
cli
gs
test
(bad)
and
or
loope
adc
or
movs
mov
push
jae
fs
or
jl
pop
push
out
cmp
fwait
(bad)
xchg
das
or
xchg
enter
or
adc
and
(bad)
popf
loopne
call
shl
sar
lods
sub
popf
sbb
jecxz
jmp
lods
mov
imul
rol
inc
mov
arpl
out
or
and
ja
dec
enter
enter
int3
outs
sub
adc
inc
dec
pcmpeqb
mov
mov
aam
xchg
xlat
dec
xor
jo
fmul
je
mov
and
sub
out
scas
(bad)
or
jb
push
inc
mov
shl
shl
sbb
pop
push
push
inc
jns
add
and
dec
and
cmp
xchg
sbb
pusha
out
int3
call
loopne
cmp
mov
sbb
imul
xchg
outs
sbb
leave
push
add
in
mov
and
xor
inc
sbb
mov
cmc
add
jecxz
mov
or
retf
sbb
adc
mov
sbb
adc
popa
stos
clc
icebp
and
mov
push
rol
ja
loopne
or
or
xchg
outs
sahf
fmul
mov
push
dec
adc
push
pusha
pop
jbe
jle
cmp
ss
inc
mov
lea
push
mov
add
idiv
fild
test
adc
push
push
int3
adc
sub
lock
lods
(bad)
shl
xor
mov
icebp
(bad)
mov
xchg
or
sahf
add
leave
add
add
pushw
mov
push
arpl
scas
mov
cmp
jae
jl
sbb
inc
xchg
retf
sub
shl
push
push
pop
or
test
push
push
nop
mov
mov
enter
aad
or
xor
sahf
(bad)
sub
fsubr
add
jb
ja
cmp
jb
lahf
and
jp
mov
sub
push
enter
icebp
daa
outs
or
and
add
lods
retf
add
pop
out
test
sbb
push
cmp
add
daa
mov
xor
data16
sub
sub
or
jae
into
outs
ja
xchg
or
mov
pop
aam
outs
mov
bound
xor
or
inc
shl
leave
push
outs
retf
or
out
push
push
xor
cmp
add
cmps
mov
pop
xor
or
imul
xchg
mov
add
sbb
popa
xchg
mov
imul
sbb
add
jo
fmul
adc
jo
cmp
ror
sti
add
xchg
mov
sub
xchg
or
rol
pop
xlat
adc
push
popf
push
sub
(bad)
(bad)
xor
inc
loope
mov
push
rol
dec
inc
mov
pushf
loopne
shl
add
adc
loope
jne
test
adc
jecxz
jmp
mov
adc
ror
clc
inc
inc
pop
fwait
add
aad
pop
fild
and
nop
jge
js
push
push
inc
xchg
shl
mov
inc
stos
mov
lahf
sbb
sbb
and
mov
stos
test
(bad)
outs
jne
xor
cmp
sbb
push
adc
cmp
jo
jecxz
movs
retf
sbb
nop
arpl
ret
cld
xlat
add
cmp
sub
xor
push
sbb
pop
ror
shl
dec
rcr
push
popf
fwait
or
es
(bad)
mov
lock
adc
or
jge
arpl
xor
push
or
xchg
test
and
lock
fldenv
jo
xchg
pop
or
std
js
mov
xlat
adc
fiadd
xchg
je
pushf
bound
or
lock
jae
add
xor
adc
les
sbb
xor
mov
jb
repz
inc
cmp
push
cmp
add
sub
(bad)
mov
data16
aad
ins
mov
inc
loopne
jnp
sub
cmps
push
add
mov
aas
cs
dec
icebp
pop
data16
xor
dec
xor
nop
sar
adc
push
ins
ret
sub
inc
pop
outs
mov
sahf
add
add
shr
ins
mov
adc
out
push
push
jns
stos
inc
pop
ds
and
push
and
push
push
pop
push
push
dec
cld
xor
mov
xlat
adc
dec
dec
outs
sub
add
cwde
pusha
cdq
push
cmp
aam
cmp
mov
cdq
jo
js
(bad)
enter
jns
retf
loope
xchg
sub
push
pop
inc
xchg
add
sbb
xchg
or
pop
mov
cmp
mov
movs
fdiv
in
loop
icebp
cmp
bound
out
mov
add
xor
in
arpl
(bad)
cmp
arpl
loope
cmp
dec
pop
add
and
push
loope
call
adc
pushf
cmp
ret
pop
lahf
xor
pop
dec
adc
ror
inc
and
add
adc
jo
inc
aad
test
push
xor
inc
push
fist
mov
ds
mov
mov
jns
and
pushf
mov
leave
or
mov
ret
mov
inc
ja
lds
adc
add
push
or
aas
ret
push
pushf
cmp
mov
jg
fimul
xor
jp
lods
xchg
sbb
sbb
add
mov
adc
(bad)
or
jb
out
xchg
repnz
add
push
add
mov
mov
lea
sbb
or
or
inc
pop
jnp
enter
pop
outs
hlt
je
push
mov
adc
ins
popa
outs
xor
nop
inc
es
ud1
jecxz
in
les
xchg
test
mov
arpl
push
pop
adc
cmc
or
jae
cmp
mov
das
arpl
or
add
lds
jne
xchg
lds
call
mov
je
in
rcl
mov
inc
adc
or
cmp
push
sub
and
sbb
and
cdq
inc
sub
xor
xor
sub
push
data16
jo
or
mov
jb
test
pop
int
pop
fcom
add
add
ror
lea
mov
call
mov
aas
push
loopne
add
aas
adc
xor
sbb
or
test
xchg
ds
push
adc
adc
movs
mov
adc
inc
xchg
out
inc
cmp
push
popa
mov
test
jb
outs
adc
ja
or
and
jp
enter
icebp
retf
adc
mov
cmp
xor
push
sub
pop
retf
fstp
ret
bound
repz
sbb
add
aaa
or
dec
mov
popa
pusha
xor
or
xor
pop
jge
and
mov
outs
fs
add
or
sbb
mov
test
sbb
bound
aaa
dec
or
and
add
cmp
dec
je
inc
imul
add
outs
xor
inc
push
inc
jl
xchg
and
mov
das
xor
inc
shr
fs
or
inc
loopne
into
mov
stc
jl
adc
mov
rcr
sub
bound
daa
lea
shr
test
or
mov
sti
(bad)
sbb
mov
stos
jge
add
test
pop
jbe
test
and
outs
mov
das
cmps
cwde
(bad)
enter
das
test
inc
add
pop
xor
pop
cmp
xor
xor
int
cmp
adc
push
cwde
adc
fs
int
push
sub
pushf
mov
loope
mov
and
cs
mov
pop
popf
test
inc
test
pop
xchg
or
mov
ror
xor
and
add
in
mov
adc
pop
cdq
loope
cmp
push
and
mov
push
out
daa
sahf
jbe
ret
inc
retf
mov
aad
pop
or
mov
and
xor
sub
inc
cmc
add
dec
sbb
sbb
stos
sbb
jbe
cdq
mov
fs
stc
adc
adc
stc
inc
lock
sub
jmp
cmp
gs
or
inc
mov
xchg
jae
daa
mov
add
sbb
mov
or
jne
and
hlt
inc
ret
cmp
ror
loopne
fnstsw
or
xchg
sbb
inc
pop
add
xchg
dec
mov
inc
cmp
sti
jecxz
sbb
xchg
ror
mov
fidivr
jo
xor
or
out
add
stos
rcr
(bad)
add
push
and
rcl
out
add
mov
and
add
fild
push
js
and
add
lods
add
push
mov
loope
fst
pop
and
mov
sbb
mov
stos
test
xchg
xor
xor
sub
or
nop
dec
js
aaa
popa
jmp
popa
xor
int3
pop
pop
or
imul
je
adc
inc
cmp
(bad)
fist
scas
add
pushf
scas
js
movs
int
add
push
enter
sbb
add
and
and
xor
adc
xor
or
or
xchg
sub
sbb
pop
lock
pop
cmp
cs
adc
or
sbb
or
push
cli
push
cwde
and
mov
sub
cs
arpl
mov
ins
jo
xor
push
mov
mov
push
sbb
stos
xor
jo
sub
push
inc
pushf
mov
xor
sub
mov
adc
xor
cmp
and
inc
dec
fst
mov
ret
push
fisttp
dec
rcl
adc
adc
mov
pop
adc
sub
mov
inc
cmp
mov
add
mov
sbb
gs
sti
hlt
cli
jo
outs
arpl
in
je
xor
das
inc
dec
imul
out
clc
ins
aaa
mov
ins
xchg
aaa
and
or
jne
sbb
test
jno
loope
mov
or
jecxz
gs
sub
add
pop
loope
pop
add
adc
inc
xor
lock
cmp
jmp
or
or
inc
mov
sub
inc
and
test
or
xor
mov
mov
inc
test
or
data16
out
mov
sub
repnz
jmp
ss
cmp
sub
sub
sub
inc
mov
pop
sub
mov
cmp
int3
adc
sub
movs
into
or
xor
icebp
in
mov
add
data16
lds
or
(bad)
add
adc
or
fs
xchg
fimul
jb
fisttp
adc
adc
hlt
cmp
stos
(bad)
ss
pop
ja
nop
fiadd
pop
or
sbb
ins
je
sub
adc
and
sub
mov
daa
xchg
pusha
test
dec
pop
adc
inc
test
adc
fsubr
mov
xor
das
arpl
push
bound
push
inc
push
mov
addr16
xor
add
mov
adc
cli
ss
popa
and
push
icebp
or
push
scas
nop
add
or
cwde
push
push
jl
adc
or
push
test
adc
mov
inc
adc
test
or
cmp
cmp
pop
pusha
movs
icebp
xor
add
push
mov
jnp
scas
pop
xor
loopne
dec
or
cmp
push
dec
lds
push
dec
jmp
mov
popa
xor
adc
inc
mov
inc
es
popf
pop
or
ror
shl
daa
wbinvd
test
div
cmp
push
inc
inc
dec
push
inc
cwde
and
sti
push
out
push
or
xchg
aad
cmp
and
and
and
add
mov
loop
cs
icebp
and
clc
sub
gs
mov
icebp
(bad)
jno
call
dec
aam
test
and
inc
push
pop
stc
pusha
or
iret
or
test
xor
pop
call
xchg
or
in
sbb
push
jo
pop
imul
and
cli
add
data16
loope
dec
fnstsw
in
popa
outs
adc
xchg
fstp
push
adc
jp
pop
sub
add
xchg
retf
loopne
jne
aas
xor
adc
test
and
pminsw
mov
dec
popa
clc
outs
fs
xor
xlat
test
loope
push
xor
and
mov
leave
xor
aas
aaa
xchg
dec
lods
adc
sbb
push
or
jnp
mov
sbb
icebp
inc
or
aas
ins
loopne
stc
aas
jo
mov
pop
push
retf
jmp
and
adc
jp
pop
adc
sbb
sbb
cmp
sbb
sti
and
sti
sub
or
(bad)
push
sbb
sti
rol
stc
add
sub
xor
(bad)
fidiv
xor
test
xchg
jo
xor
xor
push
rol
sub
out
out
cmp
add
aaa
cmp
add
nop
push
(bad)
sbb
sub
data16
fidiv
mov
sbb
or
scas
dec
lea
fidiv
lea
outs
sub
mov
xchg
pop
aas
push
arpl
push
fmul
cmp
adc
mov
lahf
dec
add
cwde
pop
aaa
pop
fld
xor
mov
inc
sbb
movs
pop
and
xchg
addr16
xchg
imul
add
fwait
dec
mov
add
(bad)
out
cmp
xchg
push
retf
int
mov
shl
mov
loopne
jbe
nop
clc
jne
cmp
cmp
and
enter
cmp
cmps
xchg
scas
jecxz
retf
aaa
push
jo
or
cdq
and
mov
cmp
or
fs
pop
into
cmp
mov
mov
jg
jno
lds
lods
push
cdq
test
hlt
idiv
adc
inc
jno
pop
jmp
pusha
jo
inc
mov
and
mov
mov
mov
sub
inc
icebp
daa
push
data16
push
xor
xchg
cli
adc
push
fmul
sahf
or
add
xor
mov
inc
popf
ret
jns
ja
outs
add
jl
or
out
(bad)
add
data16
je
jo
jns
cmp
sub
inc
and
lods
xchg
sbb
das
dec
popa
mov
cmp
mov
dec
aaa
sbb
inc
cmps
adc
test
sub
les
xor
xchg
int
pop
mov
into
dec
add
movs
bound
mov
inc
shr
ds
fsubr
mov
neg
add
pop
mov
adc
push
loope
sti
mov
add
inc
jno
fs
cwde
aam
xchg
js
(bad)
or
and
jbe
out
fwait
jmp
adc
sahf
(bad)
movs
sti
fsub
add
push
pop
pop
add
or
mul
out
push
jg
sbb
cdq
mov
ucomiss
jae
pop
lods
jne
ds
es
add
push
jmp
ins
stos
add
leave
cmp
aad
sti
ins
repnz
repz
sub
or
fbld
in
jg
sbb
or
inc
dec
push
dec
inc
push
rol
adc
out
push
add
dec
(bad)
jmp
icebp
test
or
repz
clc
mov
push
je
out
add
push
add
pop
mov
jno
cmp
ror
in
scas
inc
or
mov
in
push
ret
rcr
push
stos
cmp
dec
enter
in
add
add
and
lock
daa
into
loope
pop
ds
mov
jo
pop
dec
sti
and
adc
xchg
xor
test
push
mov
into
sub
push
or
ror
nop
push
cs
popa
xchg
lods
mov
icebp
or
pop
popa
or
call
add
sbb
movs
xchg
add
or
or
es
and
dec
sti
or
cmp
popf
das
fld
push
xchg
sub
pushf
xor
sub
and
or
and
test
xchg
and
sub
fld
test
sbb
arpl
inc
cmp
lods
inc
sub
dec
mov
jge
ins
pop
adc
push
ffree
pop
test
adc
rol
pushw
mov
aaa
dec
push
xor
and
xor
imul
xchg
cmp
inc
cs
jle
lahf
ins
sbb
mov
imul
push
mov
pop
and
je
push
cmp
daa
faddp
inc
sub
pushf
push
fs
sub
lock
(bad)
push
pop
add
and
xchg
sti
push
add
out
jne
add
sbb
xor
outs
mov
add
mov
sbb
add
push
and
vstmxcsr
xor
loopne
es
add
std
test
cmp
sbb
and
loope
pop
sub
pop
xor
int3
push
adc
sahf
out
or
jnp
push
cmp
xor
in
sar
mov
push
test
shr
adc
inc
dec
fs
in
add
inc
lods
xlat
(bad)
ins
adc
pop
sub
adc
loopne
loopne
sub
dec
xor
and
enter
push
aam
push
add
jo
push
add
mov
xor
sub
inc
inc
xchg
cmp
outs
sub
pusha
sti
xlat
gs
pop
xor
inc
add
dec
mov
push
dec
rcr
mov
bound
push
popa
hlt
inc
add
add
loopne
out
imul
add
gs
paddusb
jbe
in
in
add
js
repz
pop
fisttp
inc
out
add
jns
test
add
adc
mov
cwde
mov
push
or
cmp
xor
mov
(bad)
dec
add
push
retf
call
jo
sbb
les
fiadd
(bad)
dec
in
out
shr
mov
movs
add
ja
loope
add
lock
push
add
push
jne
pusha
push
out
and
or
dec
adc
mov
mov
dec
shl
sbb
jb
sub
imul
lods
or
mov
pop
jmp
and
or
cmp
push
mov
lock
fwait
ja
mov
and
mov
mov
add
add
bound
pop
pushf
fld
pop
mov
push
adc
sbb
cmp
pusha
test
ins
jns
sbb
inc
add
mov
fsubr
shl
pop
jo
jbe
es
push
pop
inc
imul
je
xlat
pop
sub
pop
imul
add
add
pop
sub
scas
sar
outs
ins
cmp
shl
sbb
adc
pop
sub
adc
imul
add
in
jbe
pop
loopne
out
lods
or
pop
inc
dec
cwde
adc
inc
jl
xlat
xchg
and
cmp
mov
push
je
adc
aaa
add
add
rol
add
(bad)
(bad)
xchg
and
push
test
setne
out
pushf
jle
test
je
mov
sete
dec
test
nop
push
sbb
out
lahf
dec
addr16
push
call
dec
loopne
ins
mov
mov
push
sub
push
push
adc
push
(bad)
or
mov
jl
push
bound
pop
pop
ret
push
adc
inc
bound
mov
imul
je
xor
push
sub
and
cdq
enter
adc
cmps
pop
rol
sbb
mov
adc
adc
xchg
and
pop
call
add
loopne
nop
or
fcomp
pop
mov
or
inc
cmp
sbb
push
xor
pop
inc
loopne
pop
xor
in
fcomip
mov
sub
mov
push
push
push
(bad)
mov
fdivr
add
iret
push
add
adc
push
retf
add
das
mov
mov
inc
mov
mov
xlat
sub
cli
fsub
mov
push
rol
stc
inc
or
outs
rcr
push
jno
dec
xchg
jae
pop
pop
or
dec
inc
add
dec
ins
and
icebp
adc
ins
ins
aas
push
xor
and
stos
retf
in
stc
imul
xor
lock
(bad)
lock
mov
mov
into
arpl
add
out
mov
test
js
and
jmp
mov
addr16
push
cmp
imul
into
test
rdpmc
sbb
sbb
pop
push
out
mov
adc
push
mov
xor
mov
sbb
outs
add
pop
xchg
out
sub
or
mov
mov
xlat
mov
aaa
out
je
dec
pop
jae
cwde
scas
dec
ret
or
pop
sub
(bad)
push
cli
ja
ins
dec
je
mov
or
(bad)
call
adc
cmp
mov
cmps
jmp
nop
xor
mov
adc
aaa
mov
ror
call
(bad)
out
or
adc
(bad)
sbb
into
outs
js
jb
lock
in
add
scas
(bad)
mov
pop
cld
add
hlt
mov
movs
fwait
loope
mov
hlt
cwde
push
push
xor
add
(bad)
and
mov
add
mov
mov
inc
clc
lea
add
push
xor
div
cld
mov
jmp
mov
ror
xor
(bad)
jl
push
hlt
adc
mov
add
adc
or
sub
ret
out
cs
inc
adc
fiadd
loop
hlt
ret
jmp
jmp
mov
pop
jg
add
or
femms
push
cli
mov
mov
dec
mov
push
push
aaa
pop
pop
sub
mov
test
ret
out
addr16
mov
rcr
or
popf
adc
pcmpgtd
mov
mov
(bad)
clc
push
pop
mov
adc
mov
xlat
jg
jo
dec
xchg
shr
and
(bad)
dec
je
sub
syscall
jg
rol
je
mov
adc
cmp
jae
jge
add
dec
jo
addr16
mov
mov
pop
data16
pusha
pusha
scas
adc
mov
jo
pusha
jo
gs
inc
sbb
icebp
mov
jno
cmp
mov
sbb
xchg
inc
jmp
xlat
shl
or
sbb
inc
clc
stc
sbb
mov
loop
and
adc
mov
ret
fisttp
cmp
sub
out
loopne
sbb
pop
push
push
repz
lock
stos
popa
jmp
mov
scas
jg
or
push
cmp
(bad)
sbb
outs
mov
adc
shr
fsubr
call
push
xor
add
ins
cmps
lds
inc
imul
shl
pop
in
mov
sub
ins
xlat
mov
mov
aam
jno
and
addr16
xchg
sbb
pop
pop
cmc
addr16
push
gs
adc
push
jns
xor
xor
cs
xchg
add
push
or
adc
sbb
test
jne
and
push
dec
xchg
push
or
fadd
sbb
aaa
adc
sbb
pop
jae
adc
pop
scas
mov
sub
xor
push
add
nop
btc
cmp
xchg
inc
add
jno
adc
cmc
adc
push
adc
jne
mov
cmp
sub
fisttp
jne
aam
adc
jg
dec
pop
push
lea
cmp
shl
inc
in
mov
in
push
in
mov
mov
cmp
shl
sub
loopne
das
jmp
and
and
add
in
mov
sbb
sti
ja
pop
mov
dec
mov
jo
and
xchg
jb
mov
xchg
inc
mov
shl
fs
pushf
enter
inc
push
int3
and
loopne
jbe
pop
aam
and
sbb
mov
and
xchg
push
sbb
and
nop
xchg
call
and
hlt
mov
clc
xchg
cld
in
loopne
hlt
add
and
aas
jg
sbb
add
or
sar
and
adc
and
mov
enter
and
inc
xchg
inc
inc
push
sbb
and
ja
nop
jo
and
sub
and
hlt
inc
push
cmp
sub
push
in
xchg
inc
cmp
inc
mov
jne
dec
arpl
and
inc
dec
test
xchg
push
js
lods
in
ret
cmp
loopne
pop
xchg
inc
fs
jl
test
in
jbe
test
and
js
cmp
shl
push
mov
add
cmp
fsub
test
inc
mov
dec
and
enter
in
xchg
inc
mov
sbb
pushf
loopne
in
push
mov
xchg
mov
ins
int3
xchg
push
aam
and
rcr
ins
nop
and
movs
test
fs
je
(bad)
and
pop
cmp
mov
int
sbb
add
mov
and
or
test
or
cmp
adc
cmp
and
inc
shl
inc
xchg
sbb
and
xlat
and
cwde
movs
cmp
and
sbb
test
dec
clc
test
fs
inc
and
jo
shl
shl
and
and
test
cmp
dec
mov
or
sbb
xchg
arpl
cwde
xor
sbb
mov
arpl
sbb
pop
mov
arpl
retf
and
mov
in
adc
xor
and
xchg
pop
adc
ins
jbe
jl
in
mov
xor
cmp
sbb
mov
add
mov
xchg
inc
sub
bound
and
sbb
sbb
and
(bad)
and
pop
push
sbb
in
push
pusha
and
inc
int3
push
xor
ins
inc
jo
enter
je
js
stos
xchg
call
push
and
cmp
sbb
cmp
sub
(bad)
and
push
xchg
and
xchg
mov
push
and
inc
mov
xchg
mov
aad
add
sbb
xor
ins
jo
enter
test
into
mov
loopne
lods
inc
adc
mov
imul
cmp
dec
xor
jmp
xor
adc
xor
in
les
push
inc
ja
fs
mov
and
fs
push
mov
lods
inc
inc
push
sbb
nop
xchg
movs
cld
test
pop
adc
mov
push
rcr
add
fadd
and
xchg
jb
enter
adc
jno
cmp
pop
adc
and
cmp
cmp
in
pop
and
js
inc
inc
push
shl
ins
les
fsubr
loopne
mov
mov
in
inc
and
xchg
call
leave
and
in
fsubr
in
gs
hlt
inc
fsub
sbb
fs
clc
cld
sbb
fadd
add
cmp
xor
add
ds
pusha
and
xchg
and
cmp
cmp
inc
mov
and
or
or
aas
jo
sub
push
dec
and
jb
popf
int3
inc
ins
and
xchg
and
loopne
sbb
enter
pop
call
cmp
retf
and
and
xchg
rol
clc
and
inc
and
and
dec
sbb
mov
inc
je
xchg
adc
les
and
pop
and
enter
(bad)
fst
and
xchg
fsub
cmp
fcomp
mov
and
sbb
and
sbb
fs
dec
ins
push
nop
xchg
arpl
push
and
sbb
fs
lock
xor
data16
sbb
and
and
data16
and
enter
sbb
enter
bound
dec
adc
and
js
sbb
enter
arpl
inc
mov
fs
xchg
and
sub
ins
sbb
sub
xor
and
cmp
and
and
push
inc
pcmpeqd
enter
fmul
fdiv
in
and
and
and
and
dec
adc
and
fs
sub
push
push
sbb
jo
push
je
push
ins
shl
mov
out
add
pop
xchg
imul
lods
and
mov
and
and
sbb
xchg
arpl
or
inc
mov
in
fsubr
hlt
lock
sbb
hlt
xor
xor
popa
in
inc
jo
and
xchg
arpl
add
or
daa
sbb
fsub
out
and
imul
sbb
and
dec
in
xchg
inc
sbb
push
sbb
fs
and
and
xchg
inc
inc
hlt
sub
sbb
xor
(bad)
and
fdiv
je
retf
and
push
sbb
les
inc
enter
adc
inc
cmp
sbb
jb
fs
mov
mov
and
xchg
pop
clc
xchg
popa
pop
into
pop
jmp
in
dec
fs
inc
inc
push
sbb
arpl
je
outs
and
and
jl
sbb
jb
and
xchg
sbb
enter
nop
and
inc
inc
push
xchg
dec
cwde
jne
lahf
imul
jb
enter
in
xchg
popa
pop
sbb
mov
fs
inc
mov
mov
inc
push
sbb
push
sbb
jb
shr
enter
and
pop
enter
xor
(bad)
test
aam
jae
inc
ds
call
push
sbb
xchg
arpl
and
sbb
je
dec
lock
xchg
(bad)
and
sar
nop
retf
fwait
add
and
push
fidivr
fs
fs
nop
enter
and
adc
adc
call
mov
or
sbb
enter
and
enter
inc
aas
xor
dec
jmp
ja
adc
and
fs
mov
nop
enter
cld
xchg
xor
sbb
xor
and
xchg
jb
lock
jns
nop
xchg
inc
inc
push
mov
sbb
fs
mov
inc
push
mov
stos
jae
inc
les
sbb
dec
and
inc
int3
and
clc
shl
and
aam
or
sbb
fcomp
(bad)
and
sbb
xor
and
in
and
(bad)
push
jne
lock
fdiv
shl
and
retf
and
or
in
and
add
cmp
push
and
or
push
sbb
test
mov
in
xchg
inc
sbb
sbb
fs
clc
and
sbb
aaa
aad
and
jo
arpl
push
sub
and
xchg
hlt
cmp
cmp
jno
sbb
inc
je
(bad)
cmps
cmp
test
dec
or
and
and
inc
clc
and
sbb
fs
dec
pop
test
mov
nop
loopne
add
ins
arpl
and
pop
and
inc
test
js
sbb
fs
call
(bad)
add
enter
mov
xchg
in
jbe
in
and
mov
pusha
pushf
mov
and
movs
retf
adc
and
cmp
lods
pushf
add
xchg
and
push
sbb
test
and
sub
nop
xchg
inc
inc
pop
cmp
les
enter
inc
xor
dec
and
arpl
ins
and
xor
enter
call
pop
adc
nop
cmp
fs
inc
push
sbb
nop
xchg
ins
clc
jo
mov
xchg
jo
shl
jne
add
pop
jne
test
mov
and
mov
test
jb
enter
fcom
sbb
pushf
cmp
std
and
and
xchg
inc
inc
cmp
js
cmp
mov
cld
inc
xchg
push
mov
jl
nop
xchg
inc
les
fs
int3
xchg
sub
rol
and
xchg
ins
xchg
fldenv
inc
mov
loopne
(bad)
in
fnstenv
call
inc
enter
mov
lock
loopne
hlt
push
sbb
in
nop
clc
push
cld
nop
retf
inc
inc
test
imul
cmp
hlt
or
xchg
enter
or
adc
jb
mov
xchg
inc
mov
sbb
sbb
fs
js
mov
sub
and
sbb
xor
xchg
and
xor
xor
add
cmp
and
sbb
enter
inc
inc
xchg
inc
inc
push
inc
je
cmp
test
fcom
push
sbb
jbe
and
nop
xchg
arpl
push
and
cmp
aam
sbb
push
jo
cwde
jo
and
inc
mov
xchg
js
sbb
fs
test
push
test
mov
jo
cmp
(bad)
push
xor
xchg
test
and
cdq
pushf
dec
fnstenv
and
inc
fnstenv
test
call
fs
call
push
sbb
jnp
mov
fwait
in
add
and
push
sbb
fs
ror
xchg
inc
inc
hlt
int3
cmp
mov
xor
js
mov
mov
fadd
mov
fdivr
popf
and
xchg
loopne
and
mov
and
xchg
call
nop
sahf
in
test
and
sbb
hlt
or
xchg
cmovs
clc
inc
mov
loopne
lds
cld
push
les
aam
pop
stos
test
je
call
mov
adc
lock
shr
xor
test
je
and
push
mov
call
popa
in
xchg
fsub
adc
jo
ins
add
and
in
aaa
mov
daa
dec
dec
cs
cmp
test
out
fmul
fdivr
and
lock
and
jle
sar
and
inc
jb
enter
int3
fadd
xor
cmp
in
mov
cdq
(bad)
in
and
arpl
mov
jb
nop
xchg
js
jl
mov
xor
pop
jo
enter
dec
arpl
mov
pop
shl
push
inc
and
mov
mov
or
sbb
pop
cmp
cmp
inc
push
cdq
and
pusha
sub
xor
enter
ins
and
cwde
lods
jb
enter
mov
in
jg
cmps
and
enter
nop
fs
int3
add
push
push
and
mov
call
test
mov
ret
xchg
pop
pop
pop
mov
push
inc
loopne
add
jbe
pop
mov
pop
hlt
sbb
mov
out
mov
(bad)
jp
jmp
mov
pop
mov
pop
ret
sub
add
inc
or
ins
fscale
imul
add
jp
add
jns
add
add
add
mov
dec
jae
sub
sti
jg
pop
push
push
add
add
push
add
push
jae
std
pop
je
arpl
jo
push
ficom
or
ja
xchg
sahf
dec
mov
add
call
push
es
pop
inc
sbb
jne
push
push
cmps
ds
pusha
dec
jo
jb
dec
push
out
es
cdq
out
xchg
dec
or
add
ja
addr16
push
dec
outs
jle
sbb
ja
ret
adc
jnp
ss
cmp
cwde
mov
inc
adc
sbb
pop
pop
dec
inc
(bad)
adc
sub
adc
or
stos
adc
sbb
xchg
sbb
pop
adc
cwde
cdq
push
repnz
sbb
mov
push
mov
cmps
add
and
ja
mov
pop
mov
jg
test
push
xlat
jmp
adc
addr16
adc
cs
jg
rol
jg
xchg
fmul
mov
pop
push
out
retf
loopne
(bad)
daa
add
or
mov
pusha
push
es
and
mov
sbb
lahf
cdq
int3
add
scas
push
es
xlat
xchg
popa
jg
jg
int3
inc
pop
imul
mov
cmp
mov
repz
dec
ds
retf
adc
add
mov
add
xchg
out
or
inc
mov
aas
ret
sub
or
daa
inc
mov
inc
push
adc
shl
mov
or
xor
retf
arpl
add
imul
add
nop
add
and
push
xor
push
mov
out
dec
(bad)
adc
pop
cmps
sbb
dec
imul
add
dec
dec
jmp
dec
xor
sbb
or
add
pop
add
jo
addr16
movs
add
inc
ror
adc
adc
or
les
push
outs
xor
add
push
xchg
inc
addr16
adc
pop
ins
push
addr16
add
test
push
das
adc
and
outs
aaa
and
sub
add
test
arpl
and
bound
loopne
sub
mov
jg
ds
inc
dec
ja
test
in
outs
dec
outs
xchg
clc
ret
(bad)
jnp
sub
out
outs
imul
xchg
adc
test
push
inc
aaa
mov
mov
and
inc
(bad)
movzx
push
pop
test
pop
push
jo
stos
push
(bad)
out
mov
inc
add
inc
test
inc
pop
dec
add
dec
xlat
scas
into
loopne
xchg
fbld
pusha
or
and
test
sbb
out
call
mov
adc
cdq
enter
scas
ret
sar
sahf
xor
adc
add
xor
jp
inc
dec
ror
in
test
aas
adc
cli
or
mov
xchg
pop
push
call
dec
push
and
xchg
push
cmp
mov
push
mov
cdq
sbb
stos
add
int3
leave
outs
pop
outs
pop
test
outs
fistp
jmp
addr16
push
jae
mov
and
and
mov
push
outs
(bad)
sbb
outs
call
repnz
dec
add
push
test
div
pop
inc
xor
rcr
mov
cmp
(bad)
sub
addr16
and
push
or
sbb
ins
push
imul
mov
(bad)
xchg
mov
xor
inc
xchg
pop
jo
mov
out
pop
pushf
ret
xor
sbb
bound
adc
adc
mov
add
sub
xchg
aad
lahf
out
inc
ins
inc
and
pop
add
pop
mov
test
pop
ja
push
push
mov
(bad)
ror
pop
lods
add
jg
pop
sar
add
push
dec
sbb
push
dec
test
sbb
ja
adc
jp
adc
data16
rol
pop
jo
pop
fcmovbe
fistp
dec
mov
jecxz
out
data16
pop
repnz
cmp
push
idiv
or
add
das
test
add
imul
xchg
dec
fwait
out
test
inc
mov
rcl
or
mov
cmp
inc
mov
jnp
fs
loop
arpl
xchg
push
sub
pop
pop
add
pop
aas
mov
add
fistp
jg
sub
and
dec
xchg
xor
mov
ror
mov
mov
xchg
ret
adc
mov
mov
daa
mul
bound
aaa
es
mov
push
sti
or
dec
jb
jae
xor
jmp
adc
or
das
sbb
inc
inc
xchg
(bad)
mov
adc
mov
inc
outs
or
adc
scas
test
popa
lds
add
ror
arpl
ret
lahf
push
outs
mov
mov
add
pop
push
adc
lahf
cmp
jnp
and
(bad)
(bad)
or
jne
(bad)
mov
in
test
lahf
sbb
xchg
or
out
out
mov
push
add
popa
xor
inc
or
sbb
call
and
dec
mov
push
and
push
and
out
sbb
mov
test
pop
(bad)
inc
add
cs
addr16
inc
pop
(bad)
cs
mov
into
inc
inc
call
ja
test
mov
mov
xor
imul
ja
mov
sbb
jmp
pop
dec
ins
test
or
sub
mul
inc
push
(bad)
push
dec
ret
ins
or
adc
push
daa
ret
lahf
push
jnp
lods
or
pop
mov
and
sub
addr16
addr16
and
inc
cmps
xlat
xchg
sbb
ds
mov
or
xor
outs
jmp
xchg
pop
dec
cmp
and
push
push
ja
and
mov
outs
xrelease
inc
bound
inc
cs
fwait
xlat
pop
cli
push
inc
ror
adc
repnz
ja
mov
mov
and
inc
in
mov
test
push
jg
sbb
pop
xchg
and
aam
pusha
jo
sbb
mov
mov
lods
icebp
mov
pop
xchg
int3
imul
mov
and
dec
rol
cmps
ja
pop
test
addr16
pop
and
out
pop
outs
add
adc
shl
ins
xor
sub
pusha
inc
(bad)
pop
push
stos
or
mov
dec
imul
jo
push
inc
push
add
xchg
sub
(bad)
mov
outs
into
dec
sub
xor
enter
xor
int3
pop
fimul
dec
sub
cmps
fstp
xchg
push
mov
fadd
add
push
dec
xchg
sub
and
push
push
popf
xchg
xchg
sub
ins
jne
cmp
xchg
or
push
add
iret
popa
pop
lods
dec
pop
pop
aas
cmp
in
inc
add
popa
or
adc
add
das
add
test
scas
iret
aas
xor
add
data16
jge
pop
add
test
pop
dec
xchg
sub
fdiv
loopne
addr16
or
pop
pop
push
aaa
pop
movs
lds
aaa
aas
xor
aam
fistp
fild
or
aas
outs
add
xchg
aas
addr16
pusha
test
dec
mov
movs
xchg
lahf
mov
push
pop
dec
neg
inc
test
popa
and
dec
lea
inc
dec
mov
arpl
xlat
push
xor
pop
xor
mov
test
inc
outs
xchg
mov
outs
dec
arpl
or
add
scas
add
sbb
mul
cli
xor
xor
sub
mov
inc
sub
sub
js
or
xchg
xchg
lea
jg
sub
scas
(bad)
aam
fmul
lahf
dec
xor
adc
add
es
lahf
out
push
sub
lods
addr16
test
or
push
and
mov
inc
iret
movs
dec
dec
add
repz
inc
mov
xchg
in
or
pop
pop
push
fisub
push
dec
jae
and
pop
push
mov
outs
inc
retf
pusha
ins
xor
adc
push
push
and
xlat
push
inc
sbb
or
pop
adc
and
lahf
or
and
add
and
addr16
dec
and
xor
cmp
sub
xlat
sbb
lods
or
push
sub
mov
mov
dec
mov
outs
outs
sti
mov
rcl
inc
ret
pop
ins
inc
or
xchg
add
push
test
and
arpl
ds
pop
and
or
and
inc
mov
shl
dec
adc
inc
xchg
aad
inc
div
inc
and
dec
stos
adc
push
ja
add
fiadd
xor
or
call
and
outs
(bad)
mov
out
loop
mov
and
jmp
sbb
or
mov
pop
das
inc
push
pop
pusha
add
add
dec
xor
pop
shr
adc
sbb
outs
cs
iret
pop
or
sub
mov
jae
mov
es
xchg
pop
mov
sub
xor
xchg
cwde
lea
(bad)
jle
rol
sbb
lods
add
in
(bad)
aas
aaa
pop
pusha
and
test
aas
ins
push
leave
sub
adc
inc
inc
adc
mov
aaa
mov
(bad)
fmul
lock
inc
or
ret
xchg
or
push
dec
and
lods
pop
mov
pop
out
xlat
lahf
data16
fisub
test
inc
adc
dec
mov
push
inc
ds
sahf
xor
jg
xchg
sub
out
jg
sub
pop
inc
data16
shl
iret
push
pop
loop
add
dec
and
adc
pusha
and
or
dec
xor
add
aaa
cdq
sub
or
cmp
inc
arpl
ficom
and
push
add
mov
add
sbb
push
jae
push
into
push
dec
add
push
add
sbb
ret
xchg
xchg
cmp
sbb
iret
push
push
inc
fsub
div
inc
sub
add
add
ss
xor
pop
and
inc
push
xchg
add
push
xchg
dec
mov
sub
mov
dec
cmovp
lahf
dec
xor
xchg
push
or
dec
mov
push
jmp
push
lahf
xor
and
add
mov
mov
and
adc
addr16
jg
sub
and
inc
iret
push
cmp
pop
add
mov
push
movs
pop
pop
(bad)
pop
or
adc
push
(bad)
mov
add
cmp
aad
scas
push
dec
sub
adc
push
aaa
add
imul
sub
or
aaa
addr16
movs
add
add
aaa
rcl
mov
adc
out
iret
dec
mov
inc
pop
xlat
test
cmps
xchg
push
ss
cmps
dec
mov
cmp
push
push
sub
push
bsf
push
ss
dec
push
mov
sub
and
push
(bad)
adc
sub
push
loopne
mov
sbb
sub
xlat
pop
inc
outs
and
add
ret
xlat
or
and
push
jecxz
pop
add
mov
nop
out
fcom
mov
and
adc
loopne
dec
mul
push
bound
and
iret
sbb
add
pop
jg
or
mul
and
push
push
outs
dec
push
inc
add
call
and
(bad)
push
push
and
xor
fst
push
push
mov
add
retf
sub
test
movzx
(bad)
dec
or
addr16
add
aas
xlat
or
fbld
jo
daa
dec
mov
pusha
mov
or
test
lahf
mov
mov
dec
pop
add
cmps
xorps
sub
pop
jbe
or
push
inc
dec
adc
and
imul
and
pop
sub
pop
push
scas
or
into
push
push
dec
push
push
add
inc
js
test
rcr
mov
add
call
xor
test
mov
outs
xchg
sbb
aaa
arpl
arpl
jle
nop
out
ror
mov
fisub
xor
jg
mov
arpl
(bad)
addr16
adc
xor
add
(bad)
data16
xlat
add
ror
xchg
mov
fsubr
cmps
dec
sub
dec
adc
pop
mov
fcomp
outs
(bad)
adc
inc
pusha
push
jae
or
add
push
pop
inc
loopne
jno
mov
out
retf
or
dec
cmovg
lahf
fbld
sub
fiadd
sub
scas
jp
push
push
or
rcl
pop
push
cmps
push
or
sub
outs
mov
push
add
out
xor
movs
xchg
sbb
inc
outs
jp
(bad)
test
inc
aas
inc
inc
and
mov
enterw
pop
xchg
or
(bad)
xchg
sub
iret
jae
or
or
lds
add
add
sub
mov
(bad)
imul
imul
inc
push
xchg
and
push
call
ret
fbld
addr16
dec
xor
pop
jg
push
and
inc
xchg
or
dec
inc
jp
popa
or
sub
push
sub
jb
pop
mov
dec
mov
inc
xchg
loop
mov
mul
xchg
lahf
push
and
loopne
ins
push
not
xor
les
bound
pop
mov
lds
or
and
sbb
xor
dec
sbb
jg
dec
sub
mov
outs
mov
push
call
or
in
sahf
xchg
outs
pop
inc
test
sub
addr16
xor
mov
adc
or
pop
test
call
inc
add
cmps
addr16
shl
dec
and
pop
sbb
daa
cmp
pusha
pop
xor
jmp
inc
pop
scas
pop
add
jmp
pop
lahf
inc
jae
sar
sub
mov
xchg
xchg
mov
adc
mov
iret
outs
je
and
outs
jne
data16
dec
push
ds
repz
cmps
dec
cs
out
dec
and
jbe
dec
xor
mov
ret
outs
pop
arpl
push
adc
addr16
arpl
fsubr
mov
push
xchg
out
mov
pop
inc
add
fistp
inc
add
pop
and
or
mov
inc
mov
mov
and
outs
and
adc
out
adc
scas
lea
imul
pop
test
adc
mov
aaa
aas
pop
xor
div
xchg
ins
jo
data16
jg
ret
pop
jnp
popa
les
mov
aaa
(bad)
mov
sbb
adc
ja
xor
cmps
xchg
ja
push
xchg
mov
inc
jbe
adc
enter
mov
adc
mov
addr16
inc
int3
mov
dec
sub
cmp
fiadd
mov
adc
ja
sub
movs
aaa
pop
popa
sub
daa
push
dec
dec
outs
and
add
xchg
scas
scas
pop
cmp
sar
inc
or
xor
xchg
loope
or
scas
retf
lea
sbb
outs
pop
or
retf
pop
push
call
cmps
pop
popa
mov
push
jg
push
cmp
aaa
dec
mov
leave
inc
dec
jb
dec
pusha
sub
or
movs
lahf
(bad)
ss
xchg
addr16
mov
inc
or
inc
inc
sub
daa
lahf
dec
mov
xor
loopne
popa
or
mov
jb
push
arpl
pop
add
pusha
pop
test
fbstp
test
or
push
sub
push
fiadd
movs
lods
add
das
add
mov
adc
adc
jnp
and
fbstp
sub
adc
ja
sbb
repz
adc
ja
aaa
push
movs
and
push
pop
and
pop
aas
and
adc
inc
nop
cmps
xchg
adc
inc
fild
mov
test
xchg
mov
(bad)
(bad)
test
xchg
pop
mov
add
or
pop
addr16
outs
lea
add
xchg
fiadd
xor
mov
sbb
xchg
ficomp
push
lock
retf
mov
loopne
and
cmps
jg
sub
xor
out
mov
mov
shl
lea
sub
addr16
dec
outs
and
add
rcr
push
xchg
lock
push
adc
add
jne
dec
jmp
add
pop
add
push
add
movs
addr16
push
dec
sbb
daa
dec
test
adc
dec
out
outs
push
cmp
leave
sbb
inc
and
sub
sbb
(bad)
out
push
push
cmps
inc
daa
mov
xlat
push
pusha
and
mov
addr16
outs
and
xchg
iret
aaa
xor
mov
sbb
rcl
out
jg
push
popa
shl
add
dec
or
ja
mov
inc
sti
pop
pusha
or
in
mov
bound
inc
lea
mov
cmps
pop
addr16
mov
mov
rcl
push
(bad)
arpl
aad
adc
out
sub
sbb
rol
dec
ins
jg
iret
mov
mov
xchg
mov
or
(bad)
jg
pop
test
adc
mov
mov
jg
inc
or
pop
xchg
mov
push
test
arpl
add
daa
xchg
stos
sbb
mov
(bad)
jnp
je
pop
mov
dec
retf
daa
xchg
cmps
mov
dec
push
xlat
sub
shl
or
dec
out
pusha
inc
inc
fistp
mov
mov
ffreep
bound
out
jne
xor
dec
scas
bound
push
sub
inc
dec
add
gs
inc
push
aaa
inc
pusha
mov
inc
out
inc
and
adc
jg
or
mov
xchg
pop
push
outs
pop
xchg
pop
add
xor
push
pop
dec
imul
xchg
sub
push
or
pop
outs
and
lea
xchg
dec
xchg
rol
mov
(bad)
stos
push
es
inc
xlat
xor
sbb
xor
(bad)
ror
inc
ja
daa
and
int
mov
pop
mov
bound
imul
pop
and
or
mov
push
add
pop
shl
mov
push
mov
rol
inc
dec
lea
pop
or
sbb
sbb
inc
aas
ret
fwait
and
jb
cmps
pop
mov
cdq
call
cmp
push
(bad)
lahf
adc
mov
or
lahf
int3
ret
dec
dec
neg
or
lahf
outs
adc
xchg
or
or
ja
test
mov
push
add
shl
push
rcl
mov
cmp
pop
inc
dec
es
shl
loop
repnz
add
add
cmps
int3
sub
aaa
(bad)
aaa
push
cdq
loopne
(bad)
adc
adc
sub
inc
test
inc
xchg
mov
lods
sbb
mov
mov
mov
or
or
and
in
in
and
and
lock
clc
cld
xor
sbb
je
add
xor
xor
or
adc
xor
xor
sbb
xor
xor
sub
xor
xor
xor
cmp
inc
dec
xor
xor
dec
push
push
pop
xor
xor
pop
pusha
fs
ins
jo
js
xor
xor
mov
xor
xor
xor
inc
data16
sub
inc
inc
inc
mov
inc
inc
inc
inc
or
adc
sub
inc
sbb
movs
cmp
and
mov
or
and
and
nop
xchg
cwde
pushf
mov
cmps
adc
xor
repnz
enter
adc
popa
xor
enter
inc
enter
dec
pop
pop
pusha
enter
fs
enter
and
enter
add
nop
xchg
jl
enter
pushf
mov
enter
mov
fst
enter
loope
or
test
mov
mov
xchg
xchg
mov
sbb
inc
inc
inc
or
loopne
inc
inc
inc
inc
shr
in
lock
inc
inc
inc
hlt
clc
cld
bound
xchg
or
sub
fwait
ror
clc
fldcw
inc
xor
or
add
test
sbb
inc
or
fs
xchg
xchg
xchg
fstp
ins
adc
cmp
and
and
push
push
and
and
pop
pop
pusha
and
and
push
(bad)
sbb
and
xchg
sub
xor
xchg
xchg
xchg
cmp
inc
xchg
xchg
xchg
xchg
dec
dec
push
push
xchg
xchg
xchg
xchg
pop
pop
pusha
fs
xchg
xchg
xchg
push
sbb
lods
mov
fmul
xchg
xchg
xchg
call
mov
xchg
cld
add
sub
fs
fs
and
fs
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
fs
add
nop
xchg
fs
pushf
mov
fs
mov
fs
fs
inc
push
fs
loopne
inc
inc
inc
inc
call
inc
inc
inc
clc
cld
add
inc
inc
inc
inc
or
adc
inc
inc
inc
sbb
and
cmp
sub
stc
enter
test
enter
cwde
pushf
mov
movs
test
mov
enter
mov
in
les
shl
and
and
fcomp
loopne
and
and
call
and
hlt
clc
cld
add
add
or
pop
adc
xor
xor
and
sub
xor
xor
xor
xor
cmp
xlat
or
xor
pop
xor
xor
pop
pusha
fs
ins
jo
js
xor
xor
mov
xor
xor
xor
pushf
mov
xor
lods
mov
mov
mov
xor
xor
rcl
fdiv
xor
xor
loopne
call
in
lock
clc
xor
xor
add
or
xor
xor
adc
xor
xor
sbb
and
xor
xor
sub
xor
xor
xor
cmp
inc
dec
xor
xor
dec
push
push
pop
xor
xor
pop
pusha
fs
ins
jo
js
xor
xor
mov
xor
xor
xor
pushf
mov
xor
lods
mov
mov
shl
mov
xchg
xchg
xchg
xchg
(bad)
enter
mov
xchg
aam
nop
jge
sbb
mov
in
lock
lea
cld
or
xor
test
xor
inc
dec
xor
push
or
xor
xor
jo
xor
xor
xor
xor
test
xor
xchg
cwde
pushf
mov
movs
test
mov
popw
xor
jmp
or
inc
inc
fsub
in
lock
pop
and
push
jns
or
mov
mov
mov
xor
rol
fnsave
inc
or
add
in
push
or
sbb
pop
or
fs
mov
mov
(bad)
(bad)
aaa
fwait
sub
sbb
or
lea
cmp
lods
not
xor
je
call
jg
pop
adc
sub
adc
shl
pop
(bad)
outs
addr16
xor
push
sbb
add
int3
pop
pop
ret
in
ds
and
sbb
int3
mov
sbb
sbb
mov
or
and
or
push
ficomp
or
mov
mov
add
sbb
jae
out
inc
clc
adc
cmp
push
and
mov
push
mov
std
(bad)
(bad)
dec
stc
xchg
push
push
mov
mov
xor
push
push
push
mov
mov
dec
adc
leave
push
pop
lea
mov
xchg
xchg
lods
xchg
sar
(bad)
jo
inc
cld
mov
adc
sub
push
mov
(bad)
inc
test
js
sub
pop
mov
add
fwait
cmp
xchg
xor
lock
sub
pop
jb
(bad)
add
mov
dec
in
add
push
ja
and
pusha
xchg
inc
jno
or
sbb
add
pop
in
loop
in
test
in
loopne
inc
aam
jb
loopne
fdivr
cdq
mul
fcomp
add
cmp
pop
jae
add
xor
mov
inc
or
xchg
cmp
push
imul
sub
fistp
(bad)
call
or
scas
cmp
je
inc
movzx
in
(bad)
loope
pop
dec
inc
sub
jne
cmp
push
das
sbb
dec
fdiv
out
xor
aam
push
adc
adc
dec
aam
cmp
and
push
pop
pop
pop
les
push
or
test
jbe
fadd
sbb
xchg
ret
jmp
idiv
jmp
xor
pop
mov
pop
ret
add
movs
sub
add
ss
xor
shr
test
in
lahf
mov
ins
adc
push
mov
bound
jl
cmp
jno
outs
push
outs
jle
jmp
jo
and
fmul
or
push
add
ja
mov
push
inc
or
cmovo
jne
outs
jo
nop
pushf
cmp
dec
mov
xor
mov
pop
mov
and
jp
jge
shr
or
movs
int3
shl
push
sahf
sub
and
into
inc
ins
mov
inc
shl
xchg
push
push
inc
add
or
adc
push
sub
mov
mov
and
push
push
jb
mov
add
pop
cmps
jne
mov
nop
xchg
push
mov
(bad)
sti
adc
clc
pop
ret
lods
sbb
or
push
pop
cmps
inc
dec
jb
imul
or
jbe
out
ins
jbe
xor
adc
sub
sbb
dec
push
jbe
or
xor
mov
(bad)
mov
jo
outs
or
sbb
cmps
push
push
fist
add
mov
fucomip
jne
dec
outs
fs
xor
push
cmps
ins
push
xlat
fsubp
fld
or
outs
gs
ins
imul
add
adc
jmp
sti
pop
xlat
add
jns
cmp
nop
shl
gs
adc
(bad)
popa
imul
add
adc
push
in
outs
arpl
add
mov
outs
inc
cmp
(bad)
mov
cmp
je
or
sbb
or
mov
pop
jbe
lds
mov
inc
ret
fnstenv
push
push
dec
nop
addr16
lods
add
add
inc
cs
mov
pop
sbb
sbb
test
xor
sbb
mov
push
sbb
outs
pushf
loopne
jnp
aaa
dec
clc
sbb
movs
and
inc
push
push
pop
dec
inc
add
mov
gs
dec
mov
dec
imul
mov
cmovb
gs
jb
popa
jns
mov
int3
movs
lea
and
popa
loope
jecxz
xchg
mov
ins
ins
bound
imul
push
or
jae
push
jae
and
mov
cmp
adc
dec
adc
jnp
push
add
inc
and
lds
xchg
push
or
inc
sub
js
mov
push
dec
bound
arpl
inc
pop
push
outs
inc
(bad)
mov
fisub
push
inc
push
inc
push
push
pop
adc
jbe
sbb
inc
push
jns
pop
jo
pop
or
fsub
cmp
pop
mov
dec
add
loopne
add
and
out
pusha
pop
pop
sbb
push
cdq
dec
aaa
add
(bad)
push
test
outs
jb
add
and
push
xor
outs
jmp
arpl
or
sbb
adc
add
push
sti
adc
mov
jae
adc
jnp
stos
pop
pushf
outs
ins
gs
outs
sub
adc
fs
pushf
adc
imul
lahf
sub
aaa
ins
mov
inc
mov
add
or
imul
out
(bad)
pop
xor
dec
imul
cmp
sahf
inc
gs
mov
inc
cmp
pop
pop
push
cmp
dec
xchg
loopne
adc
sbb
imul
pushf
cmp
xor
fist
loopne
aaa
not
sbb
dec
pusha
nop
cmp
pop
sti
jle
dec
dec
shl
inc
mov
cmps
arpl
lock
sbb
inc
mov
sub
and
movs
sbb
pop
jne
and
add
jo
and
mov
out
out
pop
add
sub
pop
les
dec
repz
jnp
cmp
call
mov
jno
or
push
lock
mov
mov
dec
leave
xadd
xchg
mov
popf
je
and
add
iret
fsub
data16
in
je
inc
imul
add
lods
fnstsw
gs
retf
mov
pop
mov
shr
xor
mov
outs
nop
cs
loopne
sbb
mov
cs
cs
push
sahf
and
inc
push
pop
and
xchg
add
push
adc
sbb
das
pop
lds
fsubr
mov
inc
imul
jo
dec
imul
adc
lock
add
inc
add
add
add
add
cmp
int3
mov
lds
pushf
jno
shr
imul
lahf
pop
jno
int3
add
or
nop
pushf
lods
int
cmp
push
add
add
pop
or
adc
cwde
jnp
cld
inc
inc
out
pop
push
push
pop
sbb
and
add
or
xor
sbb
xlat
ficom
sub
dec
jmp
pop
test
outs
sub
pop
fild
scas
mov
push
inc
cmp
cmp
lds
pop
pusha
dec
fimul
icebp
mov
inc
scas
or
(bad)
inc
dec
mov
sti
push
add
js
xchg
mov
fs
or
and
and
jl
shl
sub
xor
add
ins
xchg
stos
(bad)
sub
push
ds
mov
fwait
das
cli
push
ficomp
pop
inc
fist
push
mov
mov
add
add
or
pop
push
push
(bad)
or
(bad)
retf
or
or
dec
jo
jmp
inc
jmp
or
aas
(bad)
pusha
sahf
loop
add
popa
or
or
add
daa
cmp
scas
sub
or
jae
outs
outs
dec
outs
xor
mov
mov
cmp
push
(bad)
in
data16
jns
xor
mov
or
push
mov
sbb
pop
test
pop
ret
cs
dec
cli
push
push
inc
in
in
push
jp
cmps
into
cmc
and
mov
cmp
outs
js
leave
add
in
and
pusha
clc
jno
and
pop
pop
test
bound
and
out
push
rol
xchg
cmp
adc
ss
jo
xchg
or
outs
popa
fs
mov
add
les
mov
dec
pop
imul
hlt
lock
add
add
js
cmp
pop
lods
pcmpgtd
fisub
fs
jb
or
inc
and
inc
popa
mov
inc
inc
stos
shl
sbb
sbb
arpl
or
jae
inc
xchg
ja
loopne
hlt
or
xlat
inc
stos
ret
dec
or
inc
lods
add
std
loopne
pop
push
mov
dec
mov
push
mov
sub
aas
mov
inc
pop
xor
adc
pop
inc
xchg
push
fsubr
inc
repz
inc
fdivr
aaa
dec
adc
pop
and
lsl
mov
loop
fadd
adc
and
mov
add
add
int
daa
push
retf
das
mov
push
arpl
dec
and
add
add
pop
pop
xor
test
xchg
add
mov
ins
jns
inc
out
add
push
add
push
mov
add
sub
pshufw
sub
push
sbb
pop
lods
push
sub
xlat
push
mov
int3
jmp
in
js
add
(bad)
xor
jmp
or
xor
ss
inc
sbb
mov
add
leave
or
daa
push
dec
add
fsub
push
rol
aaa
bound
mov
mov
add
cmp
jo
add
je
cmp
es
push
aam
outs
push
add
lds
cmp
and
fiadd
pushf
xor
pop
inc
inc
jne
data16
inc
ins
and
jae
and
mov
and
call
lods
pop
pop
shl
add
dec
push
shl
movs
fcmovnu
sar
sub
add
and
push
enter
push
out
bound
jge
sub
inc
or
pusha
dec
jg
outs
ror
add
inc
add
ins
shl
sti
pop
or
into
xchg
xor
sbb
add
sbb
sub
jmp
ins
pop
mov
(bad)
iret
push
retf
shr
inc
cmc
push
jmp
sar
je
repz
addr16
push
div
dec
ror
push
addr16
aam
sar
mov
push
fs
mov
ins
push
pushf
int3
jle
push
mov
push
nop
hlt
mov
adc
mov
rcl
not
ds
fdiv
movs
int
fstp
cmp
jle
cmp
cmp
in
cld
(bad)
ins
ds
sbb
mov
pop
add
ins
es
mov
fld
push
fcom
push
push
inc
push
xchg
aas
push
sub
push
lods
xlat
mov
and
mov
and
mov
data16
adc
push
int3
cmp
enter
dec
repz
outs
pop
sbb
pop
pop
lods
and
or
fadd
push
push
sbb
data16
ds
jo
and
sub
mov
out
push
cmp
mov
pusha
sbb
push
int
push
int3
push
push
sbb
cmp
jo
add
fsubr
nop
or
jl
into
inc
pop
mov
js
xchg
movs
push
jo
(bad)
and
lods
sbb
add
dec
jbe
repz
xor
inc
imul
pop
inc
js
ret
jp
cmp
push
pushw
cmps
add
inc
xor
imul
rcl
out
mov
push
shl
dec
popa
jns
pop
xchg
cmp
ins
outs
in
pop
and
mov
gs
retf
(bad)
cmp
push
fsub
inc
push
or
ja
add
inc
add
add
sub
mov
pop
test
and
xor
adc
inc
vunpcklpd
dec
sub
or
mov
adc
clc
(bad)
sub
or
jp
sbb
mov
out
xor
int3
cmp
addr16
sbb
pop
pop
mov
mov
mov
mov
inc
dec
inc
cmp
adc
xor
pop
dec
adc
fwait
push
out
or
inc
dec
adc
mov
jecxz
pop
shl
cwde
push
push
call
inc
dec
pop
mov
and
inc
cwde
and
cmp
ins
pop
jbe
test
sbb
inc
or
mov
loopne
popa
test
xchg
or
push
adc
sar
pop
inc
ja
and
jb
in
inc
mov
and
push
add
and
repz
inc
xlat
es
mov
mov
push
inc
add
add
repnz
xchg
(bad)
pop
and
push
movs
out
add
push
cwde
adc
jge
inc
sahf
test
push
ror
(bad)
push
adc
sbb
fisub
mov
ror
adc
inc
lea
add
test
push
or
shl
adc
mov
sbb
mov
imul
mov
outs
std
ucomiss
in
test
xchg
stos
pop
pop
or
sbb
add
xor
push
movs
retf
das
in
mov
add
imul
and
and
jne
outs
ja
dec
pop
sub
daa
cs
or
pusha
dec
pop
dec
or
ja
scas
xchg
or
and
inc
bound
or
and
push
push
push
push
push
int
add
add
jo
inc
mov
(bad)
mov
or
dec
popa
sbb
daa
pusha
mov
ins
or
gs
mov
loop
gs
push
push
push
jbe
push
and
sbb
pusha
dec
mov
popf
inc
adc
addr16
hlt
xchg
sbb
mov
jl
add
ja
inc
gs
fcom
inc
dec
(bad)
push
inc
shr
ror
jbe
add
inc
push
sbb
jae
mov
dec
sbb
scas
call
pusha
or
pop
push
pop
addr16
add
fs
pushf
ret
in
adc
inc
stos
sbb
ds
loop
or
scas
pop
ja
jb
fst
add
push
pushf
outs
loop
fs
push
add
mov
lahf
out
adc
data16
ins
scas
test
mov
mov
call
cmp
push
dec
adc
add
fsub
add
popa
adc
xchg
mov
stos
add
ss
test
lods
popa
imul
push
add
jae
rol
cmp
outs
dec
inc
pop
mov
sbb
push
sbb
outs
popf
push
daa
lods
das
mov
cmp
jo
inc
and
(bad)
pop
mov
mov
or
out
adc
loopne
mov
out
add
jns
jbe
test
fwait
test
ror
mov
fisttp
test
fild
xor
sbb
inc
cld
fs
add
mov
or
mov
fmul
or
pop
mov
mov
shl
ret
xbegin
mov
push
add
xor
inc
mov
mov
xchg
sub
sub
inc
xor
pusha
into
cmp
das
dec
lods
sti
add
(bad)
in
mov
jb
(bad)
inc
xchg
fsubr
ins
les
jmp
comiss
rcl
shr
pop
inc
xchg
inc
xchg
pop
in
in
xor
mov
fst
cmp
mov
push
pop
das
ds
jmp
push
xor
and
jg
pop
sub
add
mov
or
nop
xor
add
stos
outs
test
outs
and
mov
inc
push
fisttp
mov
int3
mov
mov
inc
push
cmp
pusha
fisttp
jnp
loope
cmp
cmp
pop
push
and
or
(bad)
xchg
stos
xor
pushf
sti
aas
mov
data16
or
or
ds
out
or
inc
mov
or
or
inc
popa
outs
inc
sbb
add
sbb
add
push
js
bound
sar
pop
inc
dec
jae
jne
cmp
ja
clc
lods
inc
jnp
inc
imul
add
mov
retf
push
in
add
sub
scas
adc
ins
xchg
jo
(bad)
retf
clc
loopne
sbb
add
and
xor
xchg
(bad)
loope
das
or
xchg
js
int3
out
xchg
xchg
xchg
retf
psrad
push
jge
sub
ret
ss
push
and
in
mov
jmp
fdivr
aad
dec
jg
rcr
inc
push
inc
adc
xor
or
cmps
pop
dec
xchg
inc
cmp
inc
cmp
add
and
test
in
add
jge
outs
outs
je
inc
cmp
rcl
outs
outs
add
popa
adc
ins
bound
ins
bound
and
pop
xchg
ret
or
dec
add
inc
add
scas
mov
push
iret
xchg
or
into
cwde
gs
sbb
or
shl
cmp
add
cmp
and
mov
add
loopne
mov
xor
je
and
ja
adc
aam
stc
adc
enter
iret
mov
xor
sbb
jmp
mov
dec
mov
and
mov
inc
(bad)
adc
sbb
enter
and
add
dec
lods
shl
inc
push
cmp
je
imul
enter
pop
xlat
push
cmp
mov
push
or
ins
ins
js
scas
ds
pop
(bad)
lods
sbb
xor
dec
dec
jne
fs
xor
mov
imul
pop
inc
daa
add
and
xor
or
inc
push
mov
in
and
mov
mov
xchg
into
rol
into
add
pop
sub
and
fsubr
je
push
cvtps2pd
and
pop
ror
and
jb
jb
pop
push
pusha
nop
pusha
xor
or
out
pop
adc
push
sbb
inc
jo
sbb
adc
shr
mov
ins
jbe
ror
inc
or
int3
pop
fstp
mov
xlat
call
push
or
mov
(bad)
adc
(bad)
out
(bad)
or
or
int3
add
mov
push
or
jb
jb
add
pop
or
pop
enter
fsub
lods
inc
inc
jno
pop
sub
push
(bad)
pop
jmp
test
add
mov
js
push
sub
lods
and
or
dec
xchg
or
inc
ins
loop
push
jg
jmp
fld
ucomiss
(bad)
adc
push
inc
dec
gs
out
or
lods
pop
cmp
add
add
jg
jmp
inc
inc
lock
mov
cmp
fsub
cmp
dec
dec
popa
ins
jae
shl
push
mov
pop
mov
pusha
push
xchg
movs
out
sbb
mov
mov
add
sbb
ret
loop
cmp
lods
cmp
pop
cmp
add
push
outs
mov
pop
je
jp
jo
nop
test
mov
rol
cmp
cmps
adc
sub
in
mov
pop
sbb
call
sub
push
add
into
cs
push
movnti
inc
popa
je
inc
mov
ja
fisubr
inc
jo
pusha
inc
sbb
and
call
mov
out
jg
rol
mov
push
ja
pop
xor
das
icebp
xchg
dec
add
jbe
rcr
(bad)
outs
sbb
add
cmp
lods
pop
nop
loope
fild
xor
xor
mov
xor
push
add
push
cli
jg
push
push
mov
xor
push
push
xor
mov
xor
fild
mov
adc
push
inc
mov
push
cmp
xchg
and
sub
add
inc
cld
pop
xchg
mov
mov
mov
mov
sbb
inc
test
je
test
setg
lea
xor
lods
sti
dec
ret
in
jge
add
and
fcom
call
pop
xor
dec
jae
xor
push
js
or
sbb
push
je
or
or
bound
push
in
push
sbb
enter
clc
sub
outs
pop
cmp
push
adc
test
mov
xor
and
ss
(bad)
push
sbb
shl
nop
pop
dec
push
popa
shl
or
sbb
dec
mov
jo
add
pop
pop
in
push
mul
push
add
jmp
out
cmp
inc
xchg
push
lock
inc
inc
jmp
cmps
add
push
pop
dec
adc
test
mov
fiadd
hlt
pop
pop
pop
mov
pop
ret
lea
icebp
mov
mov
dec
jne
mov
and
mov
xchg
gs
mov
and
sbb
in
mov
add
mov
fidiv
call
pop
mov
and
and
sbb
ins
cwde
in
(bad)
xor
jb
adc
mov
mov
dec
xor
add
pop
add
loopne
jo
cmpxchg
mov
push
sbb
mov
sub
cmp
sbb
div
pop
fild
adc
sub
adc
loope
push
pop
mov
pop
lahf
cmp
mov
add
push
aaa
sub
sbb
or
test
not
mov
adc
fadd
leave
scas
push
dec
cmp
cmp
push
dec
lea
or
or
fadd
xchg
adc
dec
mov
mov
sar
fcomp
outs
mov
mov
dec
dec
jbe
pop
scas
adc
jge
pop
or
mov
jg
sbb
outs
aam
dec
and
or
sbb
in
mov
mov
popa
mov
mov
fadd
loopne
fnstcw
and
push
xor
push
or
(bad)
add
pusha
iret
mov
(bad)
or
adc
in
cmp
mov
mov
pop
sub
retf
fiadd
push
aam
add
add
add
mov
rcr
jo
sti
mov
adc
mov
dec
lahf
rol
out
lahf
out
test
or
in
add
or
cli
sbb
xchg
cmp
push
nop
hlt
ins
inc
fmulp
mov
xchg
test
clc
cmp
cs
pop
fiadd
in
or
jge
mov
push
sahf
clc
xor
and
fdivr
lea
cmp
(bad)
mov
std
mov
dec
(bad)
jmp
or
popf
clc
push
dec
clc
mov
push
leave
cmp
xchg
test
xchg
ret
fnsave
mov
fs
adc
sbb
aas
test
jle
jo
pop
mov
cmp
jge
xor
xor
add
add
add
jae
(bad)
fistp
clc
mul
clc
fsubr
push
(bad)
movzx
addr16
xchg
inc
ins
sub
(bad)
sbb
push
mov
push
jl
mov
mov
cmp
mov
js
push
or
ja
in
jp
rcl
cmp
or
loop
and
inc
test
dec
lds
(bad)
cld
or
cmp
add
and
ins
and
and
arpl
pop
fimul
das
out
add
pop
xor
ds
xor
js
js
xlat
inc
ror
adc
bound
add
adc
mov
adc
sbb
rcr
push
mov
sbb
pusha
test
setne
and
jmp
mov
mov
data16
pop
pop
jge
xchg
and
mov
stos
sbb
push
cmp
mov
mov
pop
xchg
xchg
retf
dec
jns
jo
cmp
push
mov
mov
jae
jge
scas
lock
fimul
adc
lock
clc
or
and
mov
(bad)
xchg
push
in
mov
aam
jl
(bad)
out
out
fcmovu
retf
mov
mov
fcomp
(bad)
int
es
mov
xchg
rcl
sahf
loopne
mov
ret
inc
add
mov
push
loopne
pop
or
push
lock
mov
sahf
jecxz
pop
aas
cmp
je
test
mov
adc
sub
scas
xor
retf
or
adc
clc
ins
test
or
into
retf
dec
mov
pop
xor
aaa
add
or
inc
push
mov
xor
or
or
jl
push
sbb
not
mov
lds
aaa
mov
pop
jmp
xor
jl
jecxz
push
movs
fist
shl
(bad)
push
push
call
stos
ficom
sub
call
mov
je
loope
bnd
mov
aas
into
xchg
test
push
xchg
cmp
cmp
in
aas
scas
das
or
push
or
ret
inc
(bad)
adc
and
sar
imul
push
unpcklps
leave
sbb
add
jl
mov
xchg
lock
sar
inc
xor
mov
mov
inc
pop
add
mov
add
shl
sub
jne
or
cmps
ret
pusha
ds
retf
inc
inc
sub
or
or
movs
mov
cmp
sbb
adc
cmp
cmp
test
mov
jbe
sbb
fidivr
sub
scas
inc
xchg
inc
add
add
sbb
add
and
xchg
and
cmp
mov
dec
xor
iret
xor
dec
aaa
jbe
xchg
out
loopne
mov
pop
push
pop
hlt
sub
push
hlt
jmp
ins
(bad)
nop
xchg
sbb
pop
xor
and
cmps
(bad)
aaa
and
sub
xchg
into
dec
enter
div
or
push
xor
sub
inc
pop
sbb
jbe
pop
add
imul
fistp
inc
sub
out
xlat
sbb
test
vmovss
mov
dec
xchg
mov
rol
add
cdq
add
pop
jl
mov
pop
jmp
fwait
adc
inc
sbb
fadd
and
sbb
fild
mov
je
and
cmps
je
push
cmp
mov
test
mov
pusha
mov
(bad)
push
(bad)
arpl
enter
shl
pop
push
sbb
mov
cmps
popa
or
arpl
push
stc
in
jmp
push
add
sub
mov
(bad)
repz
popf
sbb
and
mov
scas
pop
sahf
loopne
push
iret
mov
add
mov
or
inc
jo
dec
ins
push
fadd
pop
pop
mov
ss
mov
xor
mov
jge
push
fadd
sbb
mov
inc
push
arpl
sbb
jle
sub
cmp
xchg
mov
adc
stos
loope
mov
sbb
test
adc
add
scas
pop
sahf
dec
in
push
sub
dec
jne
daa
or
adc
test
ss
ret
push
add
(bad)
jne
scas
mov
pop
adc
adc
inc
pop
adc
sbb
push
nop
adc
push
xor
mov
mov
test
aam
add
hlt
jp
aaa
push
aaa
nop
inc
aad
clc
xchg
clc
jo
or
rol
nop
push
mov
jns
test
inc
add
ds
sub
adc
rcl
(bad)
call
ror
mov
or
or
xor
pop
mov
fistp
inc
test
clc
cmp
xor
mov
cs
aad
cmp
adc
pop
pop
pop
pusha
loope
dec
scas
fistp
dec
cmp
add
ins
mov
xchg
shl
js
aaa
pop
push
aas
cmp
mov
cdq
and
jno
xchg
cli
cdq
push
or
pop
test
add
add
push
pusha
mov
or
ret
jae
pushf
(bad)
mov
or
outs
cmps
pop
and
mov
jae
leave
or
loopne
cmp
xchg
shr
iret
pop
fistp
hlt
pop
repnz
mov
jmp
jno
cmp
xlat
fmul
jl
inc
cs
or
sbb
fstp
mov
nop
adc
pop
dec
dec
(bad)
jb
in
(bad)
fsubr
out
test
jnp
adc
mov
and
jg
cmp
cld
add
sbb
and
jmp
jmp
and
icebp
test
push
mov
inc
stc
mov
jp
ins
mov
jge
xchg
addr16
mov
(bad)
dec
push
and
mov
push
in
ficomp
ror
inc
and
ins
or
and
and
or
arpl
mov
(bad)
sbb
loopne
fwait
je
inc
aaa
sbb
loopne
fadd
enter
mov
movzx
mov
jmp
ja
lods
das
(bad)
movs
lods
cdq
adc
or
dec
and
cmp
push
and
and
sub
jb
cmp
ins
or
pop
or
adc
inc
xor
cmp
ja
enter
and
inc
fidiv
and
xchg
jae
xlat
sub
pop
out
iret
jl
sbb
pop
pusha
lock
enter
cmps
(bad)
lock
pop
clc
inc
ins
je
shl
neg
lock
mov
push
add
adc
test
dec
(bad)
jg
int
mov
add
mov
and
cmp
ja
jmp
out
fist
push
adc
jbe
jns
movs
adc
ret
adc
cdq
fs
dec
push
pop
pop
mov
and
mov
xchg
add
mov
jbe
mov
push
add
inc
adc
(bad)
mul
adc
mov
pop
push
and
repz
jmp
and
add
dec
das
jns
in
or
jmp
add
jmp
(bad)
mov
sbb
je
and
or
add
cld
fmul
sbb
ja
repnz
mov
push
push
mov
mov
fucomi
add
push
test
push
mov
adc
shl
adc
ss
jbe
cli
fcom
adc
pusha
inc
push
popa
jg
sub
sbb
mov
mov
push
movs
push
and
push
and
je
dec
mov
stc
cmp
push
dec
jo
or
loopne
sub
js
mov
push
jo
test
scas
mov
sub
rcr
mov
test
pop
cdq
ins
les
in
add
fdiv
loopne
xor
mov
pop
cmp
xchg
mov
jbe
sti
mov
sub
adc
fwait
and
and
mov
sbb
mov
adc
mov
sub
ret
es
cmp
mov
cmp
xor
inc
sub
retf
push
adc
jne
sub
jl
jmp
mov
inc
cwde
ret
push
adc
stos
sbb
ds
jae
push
push
sbb
aam
dec
das
sbb
jg
xor
add
fistp
xor
or
lock
lahf
mov
cwde
addr16
xor
and
sti
js
push
into
inc
pop
stos
pop
and
repnz
pop
mov
pusha
jo
push
cld
mov
das
push
add
lock
adc
or
mov
dec
dec
and
call
mov
jbe
hlt
mov
sub
or
or
cmp
std
je
push
mov
push
or
push
retf
pop
sub
sbb
into
xchg
ret
mov
adc
pusha
mov
int3
in
shl
aaa
ret
jl
loop
retf
test
push
lock
or
pop
push
aad
(bad)
nop
int3
dec
enter
mov
aas
pop
dec
mov
sub
(bad)
cmp
cmp
adc
push
imul
inc
xchg
stos
pop
add
push
nop
xor
pop
mov
lds
das
sbb
icebp
sbb
inc
push
add
stos
and
push
or
jp
pushf
lea
mov
jecxz
xchg
fcomip
and
fs
nop
pushf
sub
xlat
xchg
adc
and
adc
pop
jle
sub
mov
and
xchg
pop
adc
xor
pusha
sbb
add
add
sub
mov
dec
jno
mov
inc
jno
inc
and
pop
sti
mov
imul
dec
cmp
push
mov
cmp
rol
pop
xchg
cmp
mov
sub
sbb
push
mov
rol
sti
ret
pop
and
adc
mov
and
test
sti
adc
xor
add
cmp
lock
retf
inc
movs
scas
lds
fwait
loop
cmps
xchg
ret
and
lock
pop
jo
movs
mov
fild
and
mov
sub
(bad)
sbb
shr
retf
lods
sbb
sbb
cmps
pop
int
movs
pop
rol
add
mov
aam
push
push
cmps
push
adc
test
test
mov
jne
sbb
add
ins
adc
inc
ret
adc
out
sbb
fwait
test
cld
cmps
add
dec
fcomp
ret
push
jmp
lea
mov
push
adc
cs
mov
and
leave
pop
push
fisttp
mov
pushaw
jo
test
shl
jge
test
pusha
mov
pop
sbb
add
daa
push
mov
jnp
push
lods
jecxz
xchg
sbb
sbb
test
mov
mov
pop
mov
cmp
mov
jno
dec
jae
adc
dec
or
xchg
sbb
xor
dec
inc
fs
fs
cdq
adc
sub
mov
and
fmul
dec
pop
enter
dec
lea
or
dec
or
push
ret
sub
dec
xor
das
test
dec
inc
les
dec
sbb
bound
cmp
pop
dec
scas
adc
sub
call
ret
outs
xor
imul
lahf
or
fadd
call
outs
inc
aaa
outs
movs
or
fcom
push
sub
outs
dec
dec
dec
or
sub
outs
xlat
scas
sbb
lds
mov
mov
add
pop
adc
cmp
test
jg
mov
imul
sbb
sub
je
sbb
pushf
daa
mov
xlat
clc
adc
sbb
std
push
xor
add
les
cld
or
lock
out
xor
sbb
and
imul
xchg
out
nop
fwait
ret
js
mov
sub
mov
test
sbb
mov
sti
xchg
push
push
xor
mov
test
or
mov
sbb
ds
sbb
in
std
and
jmp
cmp
repnz
add
push
adc
iret
mov
loop
dec
sbb
popa
pop
and
mov
ret
jae
sub
sbb
push
inc
cmp
call
add
jle
xchg
dec
jne
pop
out
adc
or
dec
mov
add
mov
mov
mov
push
and
loopne
call
inc
jne
xchg
push
add
outs
xor
pop
push
jb
adc
jl
cmp
mov
or
shr
xor
ret
mov
xchg
sub
add
je
mov
adc
jmp
pop
xchg
pop
push
add
push
fdivr
push
jecxz
int
sbb
jnp
movs
dec
sub
add
mov
loopne
adc
push
xchg
or
ins
frstor
clc
mov
push
clc
mov
pop
xor
je
sub
nop
sbb
jl
add
lock
in
ret
push
adc
cmp
test
popf
and
or
repnz
(bad)
js
jmp
mov
fcom
je
enter
in
jne
push
jne
and
in
mov
outs
jne
sbb
mov
jo
clc
sbb
jno
(bad)
add
mov
jnp
mov
or
call
xchg
loope
clc
test
push
hlt
mov
jb
mov
and
fs
or
mov
sbb
mov
add
push
cmp
dec
sub
in
mov
sbb
adc
aam
in
call
sbb
stos
mov
jmp
lock
add
xor
je
and
sub
mov
push
push
and
in
xchg
int3
ror
pop
and
or
pop
inc
mov
cmp
push
jg
loopne
xchg
mov
jmp
push
std
xor
inc
sbb
push
dec
sub
push
out
xor
push
push
cmps
adc
in
lea
in
xor
fmul
int
sbb
sahf
and
js
shl
imul
idiv
enter
or
push
sbb
cmps
daa
test
and
add
aam
inc
push
cmp
dec
cmp
dec
and
push
or
xor
inc
push
push
push
inc
dec
inc
push
dec
hlt
pop
lods
push
inc
inc
push
mov
out
sbb
je
mov
retf
adc
je
or
adc
inc
loopne
sahf
add
push
push
push
mov
cmp
add
rcr
push
outs
mov
shl
inc
scas
push
out
mov
cmp
jmp
lock
add
adc
push
call
lock
repz
fadd
pop
push
aas
jnp
lock
mov
nop
and
inc
push
dec
ins
push
and
lock
mov
pop
push
loopne
xchg
jl
pop
pusha
pop
dec
pusha
rcr
ja
sbb
push
cwde
xchg
sbb
test
ja
jecxz
xchg
push
pushf
iret
mov
fcomp
out
sub
movhps
push
daa
add
or
scas
sbb
ret
cmp
div
adc
or
test
push
cmp
jae
ror
push
loopne
stos
aas
(bad)
inc
add
lea
add
sbb
(bad)
aas
xchg
js
pop
sar
adc
pop
in
jmp
jmp
dec
jo
shl
sub
xor
sub
push
fidiv
push
fcmovnb
xor
out
lock
xor
dec
or
xchg
adc
xchg
iret
jmp
iret
jecxz
and
mov
mov
outs
nop
cdq
push
add
xchg
xchg
xchg
stos
retf
sbb
rcr
cli
or
pop
retf
add
das
aaa
or
aaa
retf
or
mov
lahf
stos
mov
pusha
xchg
addr16
loopne
scas
adc
or
mov
lods
sub
and
inc
(bad)
jge
pop
jmp
add
out
jne
jle
mov
mov
push
rcl
cmp
sbb
fs
mov
inc
test
pop
sbb
rcl
xchg
mov
jno
or
nop
and
push
cld
xor
pop
outs
and
or
push
ja
ss
iret
repz
push
ds
inc
loopne
repz
xor
ret
mov
fcom
or
loopne
push
std
or
or
jne
adc
in
or
fistp
and
and
add
or
adc
xor
adc
jl
sub
inc
daa
ds
sub
jmp
jb
fs
lock
lods
push
adc
cmp
and
mov
(bad)
into
mov
add
mov
test
cli
fstp
loopne
fadd
sub
xchg
adc
adc
imul
inc
addr16
out
addr16
fisttp
xchg
lds
sbb
mov
pop
and
sub
push
push
aaa
xchg
push
outs
pop
ins
and
fdiv
loopne
test
sub
inc
fmul
add
lock
fsubr
in
adc
sar
jl
fsubr
es
clc
dec
aam
mov
push
or
dec
(bad)
dec
pushf
adc
out
test
adc
les
and
jecxz
cmp
es
add
movhps
add
jo
add
jb
xor
mul
loopne
adc
idiv
cmp
daa
push
push
fs
jae
xor
jne
hlt
jp
je
jl
jnp
test
push
add
xor
mov
push
fisttp
add
cmp
jbe
pop
iret
inc
and
mov
cli
and
sub
cmp
jp
sbb
(bad)
mov
popf
cwde
inc
mov
fsubr
add
cmp
add
pusha
add
dec
mov
add
jne
add
dec
ja
jb
sub
add
or
sub
adc
dec
dec
add
and
fadd
aas
shr
push
push
pop
adc
cmp
je
or
xor
inc
int
les
out
cmps
mov
or
or
cmp
xor
hlt
aam
fldenv
mov
rcl
sar
dec
lidtd
add
sub
cmp
jl
jmp
xlat
data16
retf
pop
xchg
jmp
mov
adc
pop
cmp
mov
daa
imul
je
je
out
dec
inc
fucomip
or
dec
and
cwde
mov
or
inc
pop
xchg
mov
cmp
xchg
mov
movs
loop
sub
add
cmps
mov
push
jne
add
or
jecxz
dec
sti
jp
and
movs
lea
mov
cmp
mov
inc
nop
mov
inc
inc
das
xlat
pop
pushw
push
cmps
xor
lahf
xchg
outs
mov
xor
sub
push
push
mov
int3
fwait
pop
sub
mov
or
ret
(bad)
sub
jbe
jno
aaa
mov
and
mov
xlat
mov
add
add
add
or
mov
idiv
add
ja
cmp
dec
push
les
aam
mov
js
loop
enter
or
adc
xchg
xor
cld
sub
std
rol
sbb
jl
shr
dec
sub
xor
lea
jmp
js
cmp
push
mov
inc
test
inc
lods
cmp
outs
mov
outs
test
sub
dec
inc
inc
dec
jne
push
cmp
je
bound
pop
xlat
mov
movs
mov
pop
pop
loope
enter
mov
sbb
cmp
pop
addr16
jo
test
xchg
cmp
out
add
movs
outs
(bad)
and
and
lea
sbb
rol
jb
xor
cdq
out
je
jb
dec
xchg
dec
mov
or
xchg
sbb
pushf
shl
push
arpl
or
xchg
shl
adc
ja
ins
ja
xor
sbb
add
das
ret
loope
xchg
(bad)
ja
fdivr
jbe
inc
repnz
xor
cmps
les
or
sbb
in
xor
xchg
(bad)
adc
ret
ja
adc
mov
cmp
dec
cmp
fcom
ja
ins
ja
adc
push
les
ja
add
fcomp
arpl
sbb
ja
push
ja
jo
je
ja
cmp
out
sub
in
inc
or
in
hlt
or
xor
push
push
or
add
fsin
loopne
loopne
xlat
inc
rcl
add
in
lock
jbe
mov
mov
inc
inc
popf
cmp
add
mov
test
jno
pop
imul
test
das
and
mov
and
sbb
ja
sahf
or
adc
sbb
fistp
inc
ss
and
fst
fisttp
fiadd
or
push
icebp
les
sub
jmp
pushf
xchg
inc
push
adc
sbb
int
push
inc
pop
xor
xor
push
popf
mov
pop
xor
test
xor
xor
and
outs
into
fmul
push
xchg
(bad)
fld
ret
jo
and
push
test
lods
xor
in
loope
xor
cmp
pusha
icebp
repz
repnz
les
sub
sub
out
repz
mov
add
mov
or
adc
mov
jmp
lds
outs
cmp
xor
lds
into
outs
sub
push
clc
lods
mov
mov
jmp
pop
and
js
ror
call
push
dec
xchg
or
adc
int3
shl
mov
push
sbb
in
sbb
enter
idiv
pop
mov
jae
jne
call
mov
push
and
int3
sti
inc
pop
test
fst
xor
fdiv
and
cmp
push
push
ja
leave
ret
ins
or
push
mov
adc
bswap
adc
jne
push
nop
inc
call
pusha
test
test
fidivr
(bad)
fadd
jbe
add
ja
cmps
add
ja
inc
mov
data16
mov
ret
ror
dec
cmp
je
test
mov
push
sbb
js
(bad)
push
pop
mov
xlat
mov
repnz
jne
cmp
lods
push
sub
gs
popa
scas
push
pusha
in
movs
cdq
cmp
jne
adc
or
outs
sub
xor
and
scas
mov
and
cmps
mov
jl
mov
xchg
xor
sub
or
xchg
retf
fstp
fwait
push
xor
sbb
lock
daa
js
adc
or
js
movs
test
or
sbb
add
mov
push
pop
call
fwait
jp
add
repz
push
outs
adc
fst
mov
scas
jmp
cmps
or
sub
ror
js
mov
outs
jo
or
sub
sbb
sti
push
cmc
jmp
pop
je
xor
mov
adc
ss
push
pop
xor
imul
push
pop
mov
sti
or
or
pop
inc
and
pop
ins
outs
mov
add
pop
sar
mov
(bad)
mov
inc
push
cmp
mov
add
das
mov
int
ins
scas
(bad)
cwde
push
test
push
int3
and
ds
repz
cmp
xor
ja
enter
clc
pusha
ins
xchg
inc
jle
jg
lahf
mov
xchg
dec
add
add
jb
repnz
out
add
inc
mov
jns
outs
mov
aaa
inc
pmaxub
push
dec
fs
popa
jae
es
push
inc
pop
fcom
clc
jb
popa
je
test
add
nop
pop
xor
pop
cdq
add
gs
jmp
dec
ror
push
jbe
imul
push
stc
ja
xor
or
(bad)
imul
imul
add
test
mov
push
add
jb
sbb
in
or
inc
inc
fnsave
(bad)
jae
inc
outs
arpl
jb
inc
jne
add
loope
jl
xchg
js
mov
mov
xchg
mov
ret
mov
add
mov
inc
jns
jae
cmp
mov
ror
sub
or
sbb
add
(bad)
xor
push
inc
lea
mov
sub
sbb
adc
mov
loop
pop
lds
cmp
ror
sbb
sub
xchg
mov
mov
sar
sbb
add
call
call
je
outs
jae
and
shr
gs
and
add
test
pop
pop
or
mov
and
dec
int
test
retf
mov
(bad)
iret
sar
push
xchg
jge
mov
hlt
cmps
or
push
call
lods
scas
and
out
push
out
dec
cmps
shl
iret
jne
add
push
mov
inc
sbb
push
jnp
sbb
outs
pop
pusha
adc
mov
aad
fsub
push
outs
add
out
sbb
cmovp
or
bound
pusha
mov
nop
aaa
add
add
jle
cs
dec
imul
inc
add
inc
xor
add
ror
sub
(bad)
or
aam
and
popa
push
mov
dec
dec
ins
or
test
sub
adc
add
popa
mov
sahf
xor
cmp
jb
fistp
mov
push
hlt
pop
or
xor
inc
retf
xor
ret
mov
or
cmp
pop
sti
adc
fsubr
inc
jae
mov
dec
jo
pop
les
lock
fisttp
pop
push
xchg
push
add
enter
xchg
fwait
adc
push
(bad)
fldz
mov
adc
cmc
loop
out
sub
push
mov
loope
inc
js
ret
iret
mov
call
xchg
add
mov
stos
jge
jb
jmp
jl
push
add
pop
(bad)
adc
adc
sbb
sbb
popa
xchg
push
pop
pop
mov
push
pop
or
jmp
add
fisubr
inc
lock
mov
mov
call
sbb
test
cmp
hlt
sbb
clc
mov
mov
fwait
cld
ins
mov
loope
push
inc
or
(bad)
add
add
leave
ror
fdiv
sbb
mov
mov
xchg
or
and
aas
push
xchg
push
mov
xlat
mov
in
and
call
cwde
je
inc
cmp
ficom
xor
fmul
stos
popa
or
out
(bad)
shl
cmp
pop
jae
pop
and
mov
call
fbstp
or
cs
inc
sbb
or
adc
xor
sbb
les
mov
fistp
pop
icebp
cwde
inc
jp
xor
loope
pop
(bad)
lods
mov
dec
retf
test
js
mov
jo
je
pop
fs
or
mov
out
adc
push
mov
jl
sbb
shr
push
sbb
ret
test
push
sti
add
dec
ret
dec
mov
push
sti
adc
xor
jmp
daa
mov
or
sti
(bad)
aas
clc
setl
adc
xor
outs
outs
addr16
outs
jb
push
arpl
add
push
clc
push
add
bound
out
idiv
push
outs
das
(bad)
add
add
rcr
out
mov
add
cmp
push
add
add
add
mov
icebp
pop
(bad)
xor
and
and
inc
inc
inc
jne
data16
ror
loop
or
gs
popa
addr16
mov
push
jae
xor
or
sub
ret
pusha
and
pop
adc
and
mov
call
das
js
mov
les
idiv
or
mov
push
pop
fimul
mov
out
int
dec
lods
es
jmp
rol
loop
sahf
jno
push
mov
mov
push
push
adc
sbb
in
pop
call
mul
add
pop
loope
xchg
mov
xor
dec
mov
pop
movs
paddq
into
mov
int3
cwde
mov
int
or
mov
stmxcsr
scas
loopne
cmps
enter
nop
add
imul
xor
pusha
jg
xor
enter
push
sub
jo
adc
adc
and
loopne
fadd
sub
adc
rcr
pusha
pop
push
pop
jmp
repnz
adc
out
movs
push
cmps
push
sbb
movs
add
add
lahf
cmp
js
push
mov
int3
adc
jg
dec
(bad)
add
add
push
add
mov
add
in
pop
push
inc
mov
dec
push
adc
call
add
sbb
sbb
mov
(bad)
mov
or
jl
adc
(bad)
push
loope
lock
fdivr
xor
xor
and
xor
add
or
add
add
mov
mov
sub
fbstp
(bad)
xor
and
cmp
lds
inc
add
pop
xor
and
outs
pop
aam
ret
and
(bad)
xor
mov
cmp
xor
outs
ret
add
xor
adc
mov
mov
add
adc
dec
div
js
pushw
dec
xlat
and
or
test
inc
xchg
adc
add
add
and
inc
or
pushw
add
and
daa
dec
pop
dec
or
data16
into
xchg
adc
dec
or
push
popa
push
xchg
test
add
mov
fsub
adc
mov
add
push
jns
cmp
adc
xchg
loope
inc
xchg
cmp
in
cmp
sbb
inc
enter
enter
adc
test
inc
and
inc
enter
cmp
cmps
test
dec
cmps
xor
add
add
cmovle
mov
pop
adc
dec
test
or
fstp
push
pop
hlt
jmp
or
cmp
icebp
jmp
les
fs
push
test
les
mov
jp
push
hlt
push
jge
adc
jl
inc
jae
pop
int
push
sbb
mov
lods
add
adc
imul
data16
cmp
ss
aas
jg
ins
outs
fwait
sbb
cmp
add
sti
inc
jne
mov
dec
cmp
cmp
lock
or
lahf
or
and
mov
out
int
cmp
and
mov
js
lock
shrd
shr
push
aad
pusha
call
data16
popa
adc
add
ret
cmp
cs
or
js
loopne
cmp
in
or
sbb
inc
mov
outs
lods
sbb
cmc
push
mov
les
loope
inc
lock
sbb
fcomp
fs
mov
test
fist
stos
lea
adc
push
inc
scas
rcr
fist
add
enter
jmp
loope
dec
cmp
add
push
imul
cmp
adc
dec
or
(bad)
in
mov
and
mul
sub
scas
pop
xor
cmp
mul
mov
xor
not
scas
pop
mov
cmp
imul
mov
test
(bad)
test
sub
cmp
not
jp
and
int
cmp
jo
add
sar
test
cmp
ins
xor
jb
div
inc
pop
push
imul
jbe
pop
mul
neg
fadd
mov
mov
(bad)
mov
cwde
mov
fadd
mul
fadd
test
not
mov
cwde
aam
fcom
mov
fdiv
mov
test
loopne
cwde
jnp
xchg
(bad)
not
loop
cmp
repz
push
jbe
sbb
retf
xor
lock
add
test
cmp
les
push
jae
out
clc
out
inc
in
bound
out
add
not
(bad)
out
add
out
cwde
jnp
ret
out
push
int3
sbb
mov
inc
in
imul
in
(bad)
les
mov
out
les
or
out
not
or
outs
sub
mov
out
cmps
jne
test
mov
ja
cmp
or
cmp
neg
mov
test
neg
fadd
xchg
cmp
add
(bad)
mov
ins
inc
neg
ret
mov
dec
test
push
idiv
lods
fcom
pop
neg
fcom
push
pop
mul
mov
mov
push
xchg
lahf
dec
frstor
dec
add
add
and
jmp
push
push
cld
and
sar
ins
and
(bad)
(bad)
jle
push
mov
dec
xchg
inc
mov
xor
pushf
or
aas
push
lea
(bad)
das
jmp
sahf
sbb
push
sar
es
adc
mov
pop
push
inc
adc
rcr
push
or
and
cmp
movs
movs
adc
movzx
mov
sti
mov
shl
and
push
push
add
retf
or
es
loop
and
fidivr
sub
push
enter
or
mov
loopne
dec
repz
push
add
add
add
or
inc
call
or
add
neg
call
shr
or
push
or
les
movs
push
push
push
sub
movlps
or
mov
push
mov
or
sub
push
mov
inc
adc
inc
cmps
add
das
sbb
mov
mov
push
movs
dec
js
jnp
mov
dec
mov
push
or
es
adc
push
add
mov
push
mov
lods
and
ds
add
add
mov
pop
add
inc
push
mov
enter
fisttp
mov
jmp
adc
mov
test
das
add
pop
test
enter
mov
test
add
adc
lea
pop
cld
cmp
lock
repnz
inc
push
adc
test
jle
lea
cmp
retf
or
cmp
jge
rol
pusha
adc
aas
mov
inc
inc
sbb
jne
loopne
mov
sub
aaa
test
mov
push
push
or
aas
xor
arpl
xor
mov
and
mov
jo
xchg
cmp
bound
sbb
mov
mov
test
pop
inc
sbb
dec
adc
cmp
xchg
push
aam
mov
sub
(bad)
call
pop
outs
sbb
inc
and
pop
inc
cmp
inc
stos
inc
lock
xchg
(bad)
fdivr
mov
rol
enter
js
mov
sub
jmp
jbe
xor
and
loope
or
inc
ret
and
xor
ds
loop
les
loopne
cmp
les
adc
pop
push
pop
lock
xchg
push
push
sub
pusha
pop
int3
jecxz
pop
fiadd
or
push
or
push
das
sub
out
sub
add
aam
in
rol
aad
cmp
cmp
and
push
in
mov
mov
in
fild
inc
or
test
push
adc
inc
adc
and
sbb
call
sbb
sbb
mov
sub
fbld
js
xchg
inc
sbb
adc
bound
pop
cmp
sbb
sbb
sbb
mov
push
shl
cli
add
push
adc
jo
(bad)
jle
sbb
adc
fild
push
lock
pop
push
push
sub
fmul
push
rcl
hlt
ins
aaa
mov
lock
(bad)
fcmovnbe
add
adc
cmovp
push
stos
pop
mov
jmp
mov
mov
jne
nop
sub
pop
leave
pusha
cs
lds
rcl
dec
movs
pop
pop
cmp
lds
dec
cwde
and
jne
out
push
sub
xchg
or
push
fcomp
add
call
dec
inc
inc
loopne
pop
movs
mov
dec
mov
inc
test
mov
xchg
fsubr
or
or
movs
adc
sub
movs
pop
push
mov
and
adc
jl
les
adc
sbb
pusha
adc
call
mov
sbb
adc
in
xor
fcmovbe
cmp
sub
xor
xor
pop
mov
push
sub
ret
mov
xchg
mov
xchg
jne
jne
jge
sti
pop
or
push
cmp
adc
mov
int
cmp
push
cmp
jnp
bt
jae
sbb
push
cmp
int
das
cwde
cmp
repz
dec
repnz
mov
cmp
sub
xchg
cmp
in
push
cmp
xor
add
dec
jnp
cmp
loop
sbb
push
fcom
mov
popa
movs
popa
rcr
sbb
push
ss
sbb
cmp
shl
js
adc
in
inc
or
(bad)
mov
arpl
pop
cwde
pop
push
test
or
or
rep
scas
jge
mov
loopne
dec
and
test
addr16
imul
sub
push
shl
mov
arpl
jmp
push
jp
pop
push
loopne
push
push
jp
out
mov
push
es
jmp
mov
adc
shr
aas
lods
add
push
or
push
dec
dec
dec
outs
outs
(bad)
mov
add
je
jge
add
outs
ins
popa
imul
mov
xor
jecxz
adc
dec
dec
add
push
add
jo
dec
add
add
es
fistp
je
outs
je
arpl
outs
outs
es
xor
or
test
mov
xor
inc
pop
mov
add
sub
mov
add
dec
gs
ins
imul
and
inc
(bad)
or
movs
mov
jne
add
or
pop
test
adc
dec
mov
aad
pop
push
outs
or
clc
mov
and
lods
hlt
es
les
call
jo
bound
ret
jnp
adc
mov
xchg
adc
or
or
or
add
add
pop
or
inc
jb
je
dec
je
add
jmp
push
xor
lods
adc
jle
(bad)
push
cmp
push
jmp
sbb
sbb
mov
imul
sbb
add
pop
stos
push
loop
ret
xor
xor
shl
mov
and
mov
mov
arpl
gs
and
pop
or
dec
or
add
jmp
ret
mov
jb
sub
cld
fadd
pushf
mov
push
mov
iret
jo
dec
xor
es
mov
rcr
shl
aas
adc
jne
jbe
mov
ret
pop
imul
cwde
inc
mov
and
add
int3
xchg
lds
cmp
pop
cmp
dec
mov
loopne
jo
sbb
jl
add
or
mov
add
or
jge
movs
test
call
xor
fsubr
fdivr
data16
ds
push
push
test
xor
loopne
sbb
das
dec
movs
jns
loopne
inc
xor
out
sub
(bad)
jecxz
icebp
icebp
inc
push
ins
sub
cwde
sub
and
xchg
push
or
inc
das
pop
das
adc
jb
pop
jg
test
mov
add
mov
jl
scas
xor
loopne
xor
je
fwait
and
xchg
in
adc
fistp
dec
sbb
and
cs
xchg
mov
sbb
jp
aad
xor
clc
cmp
mov
jmp
sar
push
push
push
dec
dec
inc
in
test
mov
inc
inc
push
push
dec
push
pop
pop
push
push
inc
push
push
push
pushf
cmp
aaa
or
jg
loopne
popa
outs
fs
gs
push
addr16
push
push
or
aad
aaa
jo
fadd
call
ja
outs
ja
and
adc
es
jg
fstp
gs
je
ins
jo
mul
mov
loopne
call
push
imul
enter
fdivp
add
aaa
or
loopne
fiadd
imul
inc
adc
or
popa
lock
imul
int3
xor
or
jle
sbb
jae
daa
imul
inc
dec
jge
add
arpl
popa
js
outs
sbb
imul
(bad)
or
add
js
adc
gs
xchg
into
inc
outs
ins
and
cmp
push
test
data16
xchg
push
xor
sahf
retf
sub
push
and
in
or
cmp
sbb
into
and
repnz
jo
push
out
clc
push
fdiv
mov
adc
adc
push
or
dec
jne
xor
sub
jl
addr16
enter
add
adc
jg
pop
inc
inc
push
pop
dec
inc
mov
fstp
cwde
pushf
(bad)
addr16
pop
vunpckhps
push
jb
outs
arpl
ins
and
push
dec
gs
ja
out
cli
sbb
add
adc
push
idiv
jne
fadd
pop
inc
inc
push
push
dec
push
inc
pop
inc
push
fstp
dec
push
dec
inc
dec
push
pop
dec
inc
dec
inc
dec
and
pop
push
add
add
inc
lods
or
jae
fprem
push
pop
jmp
imul
std
push
pop
mov
out
pop
jb
fs
int3
xchg
inc
or
mov
push
sub
and
inc
and
ret
ror
and
je
inc
data16
fs
jne
das
lods
pusha
jo
xor
or
ret
es
rol
cmp
jae
js
imul
add
sbb
mov
lods
mov
cmps
add
popa
mov
imul
xor
mov
adc
jnp
jnp
shl
aaa
lock
push
pinsrw
out
xchg
pop
push
inc
push
push
push
dec
push
sahf
xchg
aaa
push
jge
jl
xor
or
lods
sub
arpl
jne
sub
jns
lds
ja
jb
sub
ja
loopne
sub
push
bound
sbb
xor
push
sub
xor
add
sbb
aam
movs
sub
(bad)
lock
and
hlt
inc
pop
jo
adc
pusha
mov
jl
nop
ins
xchg
and
dec
adc
imul
inc
dec
cmp
push
or
dec
scas
xor
jo
or
inc
loopne
hlt
je
js
int
popa
xchg
mov
or
mov
mov
jno
or
mov
and
jbe
add
imul
dec
outs
imul
shl
add
adc
mov
inc
je
xchg
mov
ins
push
pop
mov
out
ret
jl
sbb
add
add
inc
or
xchg
jg
push
push
dec
mov
push
push
dec
pop
push
dec
dec
clc
pusha
and
lahf
push
jbe
pusha
inc
ja
mov
ret
xor
push
and
inc
jecxz
mov
imul
push
stos
jb
hlt
push
xchg
and
jge
jg
push
push
jl
inc
push
addr16
pusha
adc
add
cmps
nop
pop
adc
pop
and
rcr
rcl
cmp
fdivr
inc
push
mov
push
dec
dec
or
out
das
sbb
adc
sti
ret
mov
or
inc
popf
cmp
mov
ins
or
mov
movs
jmp
scas
adc
jl
sbb
mov
add
pop
lahf
add
pop
mov
lock
das
xchg
or
jecxz
sbb
push
stc
in
shl
pop
mov
mov
push
add
rcr
test
adc
das
mov
inc
inc
in
xchg
(bad)
(bad)
fnstsw
pshufw
icebp
jae
jg
jb
dec
inc
push
sub
add
mov
pushf
sub
mov
add
push
dec
push
push
xchg
mov
jo
gs
pop
or
push
push
test
mov
fucompp
dec
inc
js
xchg
dec
add
mov
je
sbb
or
test
push
inc
push
int3
inc
dec
jae
rol
cs
add
iret
and
sbb
sub
inc
inc
dec
in
fsubr
or
or
mov
push
xchg
cmc
jp
push
or
loopne
cmps
mov
mov
(bad)
mov
pop
dec
dec
inc
dec
mov
dec
mov
sub
test
mov
sbb
dec
(bad)
and
mov
push
inc
ins
jb
xchg
ret
cmp
sbb
popf
inc
push
int3
sub
test
pusha
or
or
and
(bad)
ja
ror
aas
(bad)
scas
cli
mov
inc
jne
arpl
push
popa
bound
fucomip
gs
js
jl
push
push
inc
mov
into
loopne
add
push
jmp
add
fs
lds
mov
loope
mov
rcr
xchg
xor
sbb
fimul
fimul
inc
jns
inc
dec
je
lahf
dec
fdivr
inc
pop
mov
pop
sbb
jno
imul
js
mov
cmp
jp
push
fnsave
dec
sbb
inc
dec
push
ins
sbb
out
pop
imul
loop
pushf
mov
shl
dec
in
dec
inc
shr
test
add
sub
xor
xor
js
ins
or
mov
mov
jnp
inc
sub
and
movzx
ins
jnp
inc
sub
pop
out
pusha
enter
aas
mov
movs
xchg
mov
retf
cld
dec
ss
add
jb
adc
cmp
dec
popa
hlt
push
imul
jnp
js
cmp
mov
adc
jo
(bad)
std
je
sbb
or
inc
imul
jbe
push
pop
fldcw
imul
dec
xor
pushf
push
sub
outs
sbb
sbb
fdivr
je
ds
dec
pop
xchg
inc
fs
inc
mov
pop
in
sub
ins
test
mov
xchg
dec
push
(bad)
arpl
cmps
popa
cmp
or
mov
xor
adc
xchg
cmps
je
pop
mov
rol
xor
nop
mov
push
push
add
rol
mov
daa
daa
popf
std
push
mov
adc
pop
sbb
daa
daa
daa
daa
sbb
sbb
daa
daa
daa
daa
push
pop
add
daa
daa
daa
daa
add
add
daa
daa
daa
daa
push
pop
or
daa
daa
daa
daa
or
or
xchg
daa
daa
daa
push
(bad)
std
xchg
xchg
xchg
xchg
icebp
repnz
xchg
xchg
xchg
xchg
cmc
div
clc
xchg
xchg
xchg
xchg
stc
cli
sti
cld
xchg
xchg
xchg
xchg
std
(bad)
jmp
xchg
xchg
xchg
xchg
loope
jecxz
xchg
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
jmp
xchg
xchg
xchg
in
out
out
rcl
rcl
aam
xchg
xchg
xchg
aad
xlat
fcom
fcmovu
fcom
(bad)
rcl
ret
les
mov
xchg
xchg
xchg
xchg
leave
retf
xchg
xchg
xchg
xchg
int
iret
mov
xor
lahf
mov
jl
add
rcr
pop
test
call
in
push
(bad)
adc
fsub
ds
test
add
inc
and
or
or
push
push
push
dec
push
and
sbb
call
or
inc
jb
fdiv
sbb
xor
or
mov
cmp
outs
xor
mov
add
pushf
mov
popa
imul
dec
add
dec
xchg
jbe
pusha
out
jp
rcr
inc
jns
test
mov
pop
add
sbb
mov
or
sub
pop
jne
in
ss
sub
pop
dec
mov
outs
in
add
jle
ret
jne
fucomi
das
repnz
iret
and
iret
rol
dec
or
or
jb
popa
inc
xor
shl
fild
cmp
nop
ror
sub
push
daa
adc
das
fdivr
push
push
cwde
push
ds
fmul
sbb
inc
sahf
cmps
lock
sub
out
pop
mul
outs
popa
fs
and
ds
adc
and
adc
inc
jbe
pushf
sub
adc
push
les
mov
mov
or
dec
dec
xchg
leave
dec
cmps
sbb
push
je
leave
int
mov
dec
mov
imul
xchg
add
pop
push
inc
jae
inc
xchg
pop
popa
pop
mov
sbb
cmp
sub
popf
call
inc
pop
sbb
pop
es
push
imul
daa
xchg
pop
mov
imul
and
push
mov
xchg
pop
add
sbb
pop
outs
adc
and
push
add
mov
push
inc
or
add
ja
in
pop
sbb
push
inc
xchg
fld
pop
clc
push
add
or
cmp
dec
pop
xlat
push
in
inc
pop
and
pop
mov
jno
push
lods
cmp
jnp
pop
ret
loope
add
add
push
pop
mov
adc
pusha
or
popf
fidivr
fwait
push
mov
push
rcl
adc
fldcw
inc
iret
adc
movs
cmp
adc
mov
xchg
push
das
xor
scas
jno
scas
test
dec
arpl
inc
jecxz
mov
mov
cmps
add
test
mov
push
push
adc
je
ins
mov
scas
mov
fdiv
push
mov
xor
xor
daa
or
test
jo
movs
and
xor
mov
inc
add
jo
mov
pop
das
or
loopne
pop
inc
and
pop
lock
jae
adc
push
dec
dec
cmp
xchg
test
inc
imul
pop
jge
fsub
into
ror
add
inc
xchg
dec
cld
xchg
or
sub
mov
repnz
fyl2xp1
adc
pop
pop
adc
or
test
(bad)
mov
sbb
add
push
idiv
adc
push
aam
push
push
push
push
or
mov
or
adc
pop
pop
data16
mov
add
dec
and
test
popa
push
enter
sbb
pop
clc
dec
dec
shl
push
pop
test
push
add
mov
cmp
pop
push
or
xor
sub
mov
mov
rcl
iret
in
lods
pop
sub
xor
std
in
mov
iret
daa
aaa
sbb
pop
push
sbb
mov
sub
icebp
dec
or
fidiv
xlat
pusha
sbb
dec
adc
inc
push
adc
adc
xor
icebp
test
push
or
or
scas
loopne
or
and
loop
add
jle
ins
movlps
cdq
push
imul
shl
xor
add
add
out
(bad)
int3
imul
add
xor
and
cmp
je
jb
push
and
shr
and
pop
jge
jae
lock
fist
in
mov
in
add
(bad)
push
add
and
mov
push
pop
add
sub
adc
jne
cmp
arpl
push
mov
xchg
cmovle
pop
pop
mov
push
in
adc
dec
fst
retf
pushf
pop
mov
cmp
rcl
dec
xor
add
xchg
loopne
mov
mov
(bad)
xchg
out
mov
pop
mov
xchg
pusha
jo
int
inc
jo
mov
xchg
enter
nop
cmps
mul
inc
test
dec
pop
mov
pop
sahf
sbb
cmp
and
(bad)
mov
es
mov
arpl
pop
and
(bad)
fsubr
jno
mov
mov
xor
cmps
dec
or
xchg
test
cmp
enter
loop
(bad)
add
les
xchg
cmp
arpl
sbb
sub
adc
push
xlat
sar
lods
xor
mov
sbb
stos
xchg
and
(bad)
add
add
jo
jbe
sub
or
push
adc
push
add
adc
popa
inc
jb
retf
out
clc
ins
push
gs
retf
add
mov
xor
add
pop
and
sbb
jnp
mov
mov
ffreep
adc
fdiv
scas
jge
adc
push
jmp
sbb
mov
mov
mov
push
mov
jecxz
add
adc
xchg
pushf
pushf
xchg
adc
iret
fsubr
or
or
jne
xor
inc
xor
xor
adc
jne
inc
sub
jae
xor
mov
push
cmp
dec
dec
adc
mov
mov
add
push
sub
mov
cmps
les
or
jno
imul
and
gs
or
sbb
mov
add
daa
fidivr
sub
add
mov
fbstp
int
daa
push
daa
(bad)
das
ss
add
pusha
stos
cmps
mov
(bad)
sbb
(bad)
cmp
ret
sahf
push
xchg
push
xchg
add
fmul
cs
loopne
(bad)
bound
test
mov
fstp
(bad)
mov
push
jo
sub
popf
adc
jns
icebp
add
push
gs
ss
mov
std
out
or
js
mov
or
out
mov
lock
xor
jb
sbb
rcl
and
add
(bad)
push
cwde
cld
je
jecxz
xchg
ins
fs
jns
gs
outs
popf
pop
add
test
sub
mov
sbb
mov
xor
pop
(bad)
stc
mov
popa
sbb
add
xor
hlt
int
ret
jg
add
ja
mov
inc
pop
push
dec
fild
push
rol
add
(bad)
fist
jg
push
loopne
xlat
mov
push
jmp
jnp
shl
jg
mov
shl
jl
lock
mov
jp
or
clc
fidivr
sbb
push
push
pop
push
pop
lods
scas
sbb
adc
ss
loop
fs
and
or
jbe
mov
or
xchg
inc
stos
lea
je
add
ret
ja
push
add
add
mov
xor
mov
je
les
rol
dec
add
sar
push
ret
add
ins
mov
add
sbb
enter
and
dec
shl
loopne
inc
mov
popa
adc
pop
mov
mov
nop
cmp
push
inc
(bad)
fdiv
lods
push
aad
clc
std
jmp
mov
cmp
jg
cmc
fwait
jmp
pop
cmp
jg
cli
cmp
xchg
aam
and
repz
mov
les
shl
out
ds
out
cld
or
out
sahf
xor
push
pop
ins
jp
sahf
out
mov
push
es
jmp
mov
push
xchg
pop
adc
and
dec
dec
push
push
jbe
test
out
sub
hlt
cmp
cmp
cwde
stos
push
push
sub
push
xchg
xchg
dec
es
mov
push
xchg
sbb
pop
outs
es
cld
mov
scas
sbb
mov
push
jb
or
out
cmp
out
aam
loop
lock
add
dec
inc
sbb
sub
into
repz
ss
push
pusha
outs
sub
adc
test
dec
sbb
lds
or
sbb
mov
in
mov
mov
ror
fiadd
in
pop
dec
sar
push
push
and
and
inc
shl
jmp
and
dec
or
pop
mov
jmp
dec
and
adc
out
fisub
adc
adc
mov
mov
ins
adc
add
mov
enter
pop
mul
inc
lea
jl
jnp
add
dec
test
push
int3
jle
pop
sbb
sti
sbb
pmulhuw
mov
mov
and
fcomp
in
mov
pcmpeqd
sbb
mov
add
loopne
ret
test
push
jbe
sbb
mov
or
mov
mov
in
ror
hlt
mov
sbb
cmp
shl
fisttp
sbb
fdiv
cmps
loopne
clc
sbb
cmp
push
sbb
sub
dec
jbe
sbb
fcmovnu
pop
xor
sbb
cwde
dec
loopne
cmp
xlat
and
test
xchg
ret
ror
cmp
pusha
ret
fs
fbstp
add
sbb
pop
ret
jo
inc
neg
sbb
jbe
imul
cmp
(bad)
lahf
sbb
fcmovnbe
sbb
(bad)
adc
mov
mov
out
mul
cmp
clc
mov
pusha
or
cmp
pop
je
clc
adc
jo
sbb
not
rol
shr
and
xor
aas
add
mov
add
push
push
push
xor
mov
(bad)
fidiv
shl
lock
je
icebp
mov
mov
mov
xor
call
lock
dec
push
mov
test
jne
mov
xor
mov
call
xor
jge
mov
mov
or
add
ins
fild
lock
(bad)
inc
and
inc
hlt
inc
and
mov
inc
fcom
add
mov
aam
movs
rcr
pop
les
push
sti
pop
popa
aam
jbe
test
ret
jmp
jmp
ffreep
or
add
int3
fs
pop
add
imul
pusha
or
pop
pop
pop
mov
pop
ret
js
ds
movs
mov
mov
sub
call
add
jne
adc
mov
mov
add
jnp
or
jg
and
sbb
pop
pop
pop
ret
nop
jp
repnz
test
mov
inc
xor
mov
mov
(bad)
sbb
sub
ds
mov
test
setge
loop
sbb
out
jge
loope
or
cmp
dec
mov
push
add
push
cmp
add
cld
fwait
loopne
ss
cmc
pushf
add
inc
rcl
lahf
sbb
add
(bad)
mov
mov
jmp
sbb
es
rcr
add
jo
outs
out
cmp
mov
push
repz
mov
mov
inc
inc
fidivr
bound
call
adc
or
sbb
cmps
imul
cmps
imul
jne
fcmovne
in
add
add
sub
push
sub
or
not
mov
hlt
fs
sbb
nop
retf
push
loope
adc
push
cli
lods
mov
dec
inc
or
jae
push
(bad)
in
add
push
jne
jb
xor
xor
cs
ins
add
mov
rol
inc
imul
jns
add
outs
sub
fcmovu
int3
fsubr
push
es
data16
adc
dec
mov
pop
inc
cs
inc
jo
dec
cs
xor
adc
scas
call
push
xor
push
mov
js
jne
adc
test
sbb
shl
add
or
mov
out
lea
push
sub
cmps
or
(bad)
sbb
mov
push
mov
jmp
test
pop
(bad)
out
cmp
mov
outs
push
inc
outs
fwait
std
adc
sbb
hlt
jle
pop
adc
ins
les
hlt
xor
in
retf
(bad)
mov
adc
mov
jo
adc
xchg
mov
aad
dec
and
adc
adc
fcomp
js
add
lods
fisubr
ds
hlt
or
out
mov
(bad)
or
push
push
push
cmp
mov
or
call
mov
or
push
jmp
mov
mov
mov
or
dec
xor
ficom
lea
sbb
push
into
arpl
jo
mov
jmp
out
(bad)
xlat
imul
out
or
push
repz
push
sbb
cmp
jb
lea
xor
jl
push
inc
and
push
pusha
or
mov
inc
jo
movs
js
aaa
cmps
imul
mov
add
add
or
adc
imul
mov
mov
sbb
(bad)
cmp
setae
sub
add
inc
pop
jne
add
mov
inc
jnp
cmp
xlat
aad
mov
mov
aad
mov
mov
mov
jae
iret
enter
adc
mov
je
mov
mov
cmps
ret
add
and
popa
fild
mov
mov
xchg
nop
and
sub
jb
je
dec
je
jmp
mov
mov
jmp
mov
add
cs
out
mov
lea
jp
add
ret
je
(bad)
push
push
mov
mov
inc
hlt
dec
xor
sbb
push
push
lea
pop
ror
ds
mov
push
sub
(bad)
lahf
sub
sbb
cmp
(bad)
mov
push
jmp
cmp
or
es
ins
mov
push
jbe
test
sbb
add
xacquire
or
inc
out
ror
mov
and
add
out
adc
adc
xor
mov
adc
or
rcr
mov
call
or
call
sbb
das
push
cmp
push
rol
cmps
push
xchg
je
push
mov
inc
daa
ret
mov
adc
xchg
dec
or
pusha
xlat
jo
sbb
jle
jecxz
xor
dec
mov
add
ret
call
adc
lahf
adc
or
test
and
(bad)
scas
jo
retf
loopne
sbb
inc
pop
imul
adc
xchg
sbb
push
cld
call
hlt
mov
fld1
loopne
push
dec
add
pop
leave
int3
shl
push
stos
jmp
xchg
xchg
shl
sar
aas
clc
loop
sahf
sub
push
dec
ins
jge
add
xor
mov
rol
lock
leave
jl
inc
mov
pop
cld
cmp
ins
mov
fwait
push
xor
jne
sbb
clc
es
jne
or
adc
retf
xor
mov
jnp
std
lea
mov
jmp
div
dec
xchg
cmp
adc
push
push
ficom
daa
inc
cmps
add
(bad)
or
xor
jne
xchg
test
adc
inc
fsubr
popa
nop
ror
jp
sub
adc
(bad)
stos
xchg
sub
mov
call
mov
or
sbb
mov
or
pop
sbb
pop
jecxz
and
sbb
scas
mov
rol
cmp
scas
mov
jg
cmp
mov
and
shl
push
jg
jo
ret
out
dec
out
adc
inc
jb
mov
or
add
cmp
xor
cmp
dec
inc
add
push
test
ret
mov
mov
or
inc
add
aaa
lods
pop
mov
xor
pop
pusha
mov
int3
inc
jnp
jo
shl
les
popf
adc
jo
(bad)
cmp
test
test
push
mov
jbe
mov
sub
lock
mov
adc
daa
test
sahf
mov
unpcklps
les
sub
loope
push
sub
mov
lds
mov
imul
into
dec
and
push
xor
(bad)
jg
xor
push
xor
(bad)
in
cld
idiv
sub
jae
lea
sar
ret
cmp
ins
mov
pop
call
and
test
out
mov
sbb
es
cmp
dec
sub
fdiv
sub
and
adc
or
in
add
mov
lock
je
lea
push
xor
jl
xchg
and
or
push
jl
sbb
xlat
ret
mov
lea
test
pusha
and
clc
adc
mov
sub
call
inc
and
fisub
push
iret
mov
or
in
xchg
mov
lds
xchg
add
push
sub
enter
sbb
and
aaa
mov
fadd
cdq
cld
nop
dec
xchg
test
sbb
or
push
cs
push
push
xor
es
mov
cmps
aas
sbb
stc
and
stos
mov
pop
add
or
sbb
(bad)
dec
jae
pop
push
push
push
sbb
data16
(bad)
nop
push
add
into
and
xchg
mov
mov
lods
and
test
ds
pop
je
or
aad
xchg
addr16
mov
(bad)
popa
(bad)
neg
leave
mov
xor
add
or
xor
inc
xor
pop
xor
add
add
inc
mov
push
inc
or
or
mov
sbb
or
pushw
cdq
mov
stos
or
push
sbb
or
popf
cmp
lock
push
xchg
in
cli
add
ss
pop
sub
fiadd
fistp
adc
or
jmp
sbb
daa
push
mov
ss
std
(bad)
add
je
or
je
dec
je
jmp
sub
fwait
shl
adc
jmp
shr
jno
ds
ja
sub
stos
das
pop
push
sbb
or
push
fucomi
es
fwait
cld
sbb
or
leave
inc
mov
clc
push
test
test
sbb
fsub
xchg
adc
mov
xchg
add
and
jp
cld
add
je
arpl
push
pop
jo
pop
mov
or
jne
fs
fwait
in
jmp
scas
out
mov
in
pop
mov
out
es
cld
scas
arpl
sbb
sub
lahf
sahf
adc
aam
in
les
lea
mov
pop
push
clts
sub
test
mov
shr
dec
ret
sbb
repz
add
push
(bad)
stos
ins
push
loopne
sbb
add
imul
int3
jge
pop
cmp
push
xchg
sbb
pop
fistp
adc
movs
push
pusha
and
inc
rol
dec
pushf
adc
dec
fadd
pop
or
inc
xchg
jp
pop
adc
sbb
addr16
and
pop
out
imul
sbb
in
or
or
(bad)
movs
(bad)
xor
cmp
cs
(bad)
and
xor
pop
adc
das
dec
dec
push
test
add
add
ret
mov
int3
ds
pop
inc
and
adc
lods
ds
popa
pusha
add
xor
mov
pop
aas
cmp
add
xor
xlat
fisttp
les
push
add
push
push
and
push
push
cld
jb
sbb
xor
mov
dec
mov
dec
in
xor
mov
dec
je
jecxz
adc
pop
js
sub
pop
jmp
clc
mov
mov
xor
xchg
outs
repz
jmp
adc
mov
push
loopne
mov
add
sub
pop
mov
test
int3
loop
loope
loopne
cmp
adc
js
adc
(bad)
daa
push
jg
out
or
not
adc
pop
or
gs
test
push
(bad)
retf
push
cld
fsub
jbe
add
mov
or
push
adc
das
retf
push
int3
sahf
xlat
jbe
push
adc
sbb
cmp
cmp
mov
repz
mov
ds
push
test
outs
add
dec
outs
fsub
clc
push
ins
imul
je
inc
fild
xor
xor
retf
jns
or
lds
jae
clc
mov
rcl
push
cmp
xchg
add
dec
je
push
add
jb
xchg
pusha
xor
pop
xchg
mov
and
mov
shl
push
clc
mov
push
xchg
push
hlt
(bad)
push
push
mov
idiv
push
inc
push
push
fild
push
out
mov
sbb
pmaxub
leave
dec
sub
xor
mov
or
add
sub
imul
and
je
mov
inc
dec
jo
jno
and
mov
inc
outs
ins
popa
imul
in
scas
jb
dec
pushf
xchg
and
or
jne
mov
data16
aaa
or
mov
xor
sub
dec
and
and
imul
sahf
fild
je
inc
dec
jns
cmp
shr
jno
sub
(bad)
cmps
jb
fs
dec
je
mov
outs
adc
push
dec
adc
jmp
and
push
or
pop
push
sbb
adc
inc
jb
je
ins
mov
fild
enter
mov
gs
retw
in
test
jb
jns
cmp
mov
xchg
push
ret
pop
shr
inc
sub
add
adc
xchg
jno
(bad)
xor
fs
sub
mov
xor
or
inc
inc
shr
lock
sbb
fld
in
sub
push
jne
daa
xchg
fnstcw
test
rcr
xchg
inc
pop
and
xchg
rol
sbb
push
sbb
mov
pop
inc
add
mov
cmp
out
add
xchg
outs
das
push
lea
xchg
dec
cmps
xor
sbb
inc
push
mov
sbb
scas
popa
xchg
lahf
lea
xchg
test
xor
ret
mov
and
mov
dec
adc
dec
cmp
and
jbe
add
inc
outs
mov
xor
cmp
xchg
add
sbb
jo
push
pop
add
inc
and
and
xchg
mov
jle
cmp
mov
mov
rcl
inc
leave
and
fstp
add
adc
pop
loopne
push
add
lea
mov
ret
add
shr
and
popf
call
mov
fsubr
test
jae
inc
jbe
inc
or
and
xor
fstp
nop
cmp
sub
cmp
or
mov
sub
(bad)
mov
and
pcmpeqw
arpl
ja
sub
sar
xor
sbb
loopne
fwait
loopne
std
bound
jle
cmp
add
imul
and
into
rol
mov
sbb
lahf
adc
or
or
xor
lea
mov
cli
and
add
mov
push
paddsb
xchg
lock
loopne
add
shr
mov
(bad)
mov
cmp
and
xor
cmp
sbb
cmp
fdivp
mov
hlt
scas
hlt
adc
jmp
push
sub
mov
lds
push
fld
pop
ja
inc
ss
pop
in
inc
test
push
mov
sub
xchg
or
mov
mov
inc
xor
xchg
push
and
retf
jnp
sbb
jae
retf
sbb
dec
xor
cmp
xchg
inc
add
popa
je
sub
cwde
jno
mul
mov
sbb
fiadd
jp
aas
mov
imul
mov
(bad)
cmp
adc
push
xlat
dec
jp
add
(bad)
sar
test
pusha
lahf
popa
out
mov
pop
aas
pop
cwde
inc
push
inc
add
sbb
mov
inc
xchg
and
dec
jb
(bad)
ins
inc
jae
sti
adc
push
sub
xchg
repz
repnz
bound
jo
sub
mov
mov
pop
mov
ret
add
iret
mov
mov
add
jo
daa
daa
movs
cdq
xor
movs
gs
daa
pop
dec
rol
sub
inc
mov
pop
cmp
outs
pop
or
mov
or
or
mov
rcl
ins
inc
addr16
cli
shl
pop
push
sar
mov
sub
mov
pop
(bad)
cmp
je
or
inc
inc
mov
jge
retfw
sub
cmp
xchg
xor
or
mov
add
add
mov
(bad)
mov
rol
push
jae
sub
sbb
adc
les
cli
mov
mov
jmp
js
add
jo
cmp
das
(bad)
enter
and
and
add
movs
jmp
mov
xadd
bound
xor
es
inc
dec
scas
jbe
loopne
mov
daa
int3
cmps
pop
or
inc
cmp
std
cmps
mov
jecxz
mov
ret
sbb
cmp
sahf
pop
cmp
(bad)
aaa
and
jmp
inc
movs
popf
je
aam
shr
and
ret
adc
shr
mov
pusha
pop
cmp
push
fwait
jp
cs
mov
pop
adc
out
mov
inc
add
aam
rol
(bad)
pusha
sbb
xchg
clc
mov
(bad)
jg
in
mov
shl
push
fmul
and
hlt
mov
les
popa
xor
and
sub
sbb
sub
mov
test
inc
adc
mov
adc
mov
in
dec
mov
sbb
ins
push
js
dec
adc
clc
mov
jmp
mov
mov
mov
lock
lods
jne
mov
clc
add
mov
lock
mov
test
fmul
mov
inc
sbb
mov
cmps
adc
and
fmul
push
push
add
test
mov
push
in
loope
add
mov
into
mov
cdq
mov
movs
aas
adc
dec
sbb
and
repz
ror
cwde
xchg
pop
call
(bad)
out
or
jg
add
mov
dec
pushf
call
pop
push
call
jae
cs
rol
sbb
sub
loopne
fistp
or
daa
add
daa
pop
push
mov
out
lods
rcl
push
or
inc
xor
out
jo
mov
adc
push
push
push
push
push
gs
cdq
idiv
imul
add
ja
inc
outs
push
outs
push
push
dec
or
xchg
stc
jg
dec
jne
je
js
je
inc
outs
outs
je
outs
outs
ja
jmp
fs
outs
fs
or
adc
iret
adc
inc
jb
gs
push
jns
fldcw
jnp
xlat
aam
or
outs
jb
popa
ins
add
pop
popf
neg
outs
or
outs
js
or
adc
sti
shl
cmps
or
xor
sub
punpckhbw
outs
data16
sub
in
std
pop
adc
dec
gs
jb
sub
outs
ins
adc
xchg
std
mov
fadd
outs
sbb
popa
jb
ins
jae
es
inc
sbb
jae
pop
sub
jb
push
aaa
dec
sub
popa
out
sahf
popa
mov
jbe
sub
popa
sub
push
js
pop
gs
xchg
popa
adc
push
div
xor
dec
imul
sti
jnp
xchg
inc
jb
jb
cld
ja
xor
xchg
dec
jne
push
jo
je
dec
dec
inc
and
bound
(bad)
mov
shl
(bad)
add
pop
xchg
sub
out
(bad)
pop
xor
add
xor
xor
ror
imul
inc
jbe
data16
push
push
ds
lea
not
push
add
mov
ret
(bad)
outs
add
dec
jne
popa
pop
loop
addr16
pop
dec
popa
bound
inc
outs
adc
or
push
pop
imul
pop
inc
(bad)
cmc
xchg
xchg
mov
dec
int
cmp
pop
add
cdq
add
inc
icebp
and
in
adc
jmp
out
adc
jecxz
pop
mov
sbb
dec
int3
cmp
push
popa
bound
adc
dec
jecxz
js
ret
adc
push
adc
push
ret
push
imul
mov
pop
inc
jge
rol
push
ret
test
test
inc
lods
shr
dec
or
loop
hlt
push
pusha
test
jp
jo
jmp
mov
test
fmul
outs
movs
sub
dec
movs
push
mov
aas
xor
inc
xor
jg
inc
fnstsw
ins
and
mov
jle
(bad)
inc
rcl
adc
bound
jns
shufps
popa
mov
sub
ret
outs
xor
push
push
add
jns
scas
jge
pusha
retf
push
stos
leave
das
leave
push
int3
mov
pop
lock
cmovs
add
cwde
pop
mov
add
mov
push
fsubr
sar
cmp
xor
add
pop
pop
es
test
(bad)
push
jge
add
and
mov
jo
sub
pop
and
shl
push
push
clc
cs
or
xor
inc
jmp
inc
ins
dec
pop
mov
inc
fisubr
push
inc
pusha
push
cmp
sbb
bound
mov
adc
inc
cdq
(bad)
shr
popa
adc
jns
add
cmp
shl
or
ins
or
push
dec
jb
pandn
add
sbb
loopne
add
pop
pusha
aad
add
xor
or
dec
icebp
push
add
sub
xchg
pop
mov
add
mov
imul
sub
and
add
xchg
les
xlat
sbb
es
pop
mov
xor
jnp
fmul
or
xor
fisubr
add
pushf
pop
push
loop
add
sbb
mov
cmp
lods
packssdw
adc
sahf
dec
mov
ret
test
(bad)
and
xor
inc
push
dec
int3
pop
scas
inc
dec
psrlw
cmp
cmp
jmp
mov
sub
push
cmp
rol
add
push
in
pop
shl
mov
ss
ins
fbstp
clc
push
loopne
push
int3
mov
push
jb
or
jo
pop
mov
mov
(bad)
fsub
jg
adc
arpl
ins
mov
pop
jae
imul
xchg
adc
loope
outs
jne
xor
pusha
out
fdiv
or
sub
rol
push
fcomp
sub
xor
adc
pop
imul
fucomip
sub
mov
and
dec
sub
lds
out
xchg
inc
or
xchg
push
and
jnp
bound
mov
lea
es
ja
pop
cmc
add
adc
imul
ss
test
xor
cmps
xchg
add
or
mov
xchg
ror
jmp
adc
out
mov
lods
add
push
daa
loop
sar
not
iret
push
xor
push
call
and
pop
mov
dec
retf
add
or
test
es
popa
jb
fst
add
sar
add
call
ins
or
push
leave
add
pop
orps
mov
adc
shl
push
pusha
popa
or
lock
cdq
add
nop
sbb
sub
outs
add
pop
sbb
adc
rol
bound
or
inc
dec
outs
outs
es
jo
adc
or
bound
inc
mov
sbb
push
or
xor
imul
popa
add
lods
push
dec
or
push
push
push
int
or
jns
dec
popa
js
inc
xor
xchg
shr
add
popa
pop
in
or
push
or
cmp
mov
imul
push
(bad)
lods
jns
cwde
mov
les
mov
in
jne
das
cmp
push
mov
pusha
pop
mov
ror
push
pop
pop
fcomp
ret
fistp
outs
cmps
jge
(bad)
mov
data16
mov
push
nop
mov
mov
test
jl
ins
push
je
(bad)
push
rcl
ds
pop
fdiv
repz
push
push
push
jl
push
fiadd
es
push
movs
inc
cmp
or
sub
hlt
lods
push
fadd
push
js
sbb
ins
xchg
pushf
xchg
xlat
jl
mul
xchg
push
mov
cs
data16
ficomp
mov
les
inc
cmc
aaa
call
fstp
adc
je
pop
jl
sti
pop
das
sbb
fcmovbe
repnz
and
sbb
adc
je
cmp
retf
jl
mov
add
dec
hlt
sbb
jo
mov
or
sub
inc
dec
sub
or
arpl
jno
sub
cmovbe
xor
rcl
stos
xor
or
and
test
cmp
les
and
push
push
cmp
adc
test
mov
stos
add
inc
pop
xor
adc
fld
pop
sbb
dec
ss
es
push
(bad)
xlat
jmp
add
jo
or
pop
add
adc
inc
add
jnp
jp
mov
adc
lds
call
call
push
jae
adc
das
jmp
outs
enter
les
js
jmp
pusha
out
aaa
adc
xchg
and
adc
cmp
cmp
paddw
sahf
pushf
mov
and
retf
push
xchg
mov
daa
fnstcw
fstp
inc
sahf
cmp
scas
or
imul
adc
loopne
xor
ret
sub
adc
jnp
dec
sub
outs
add
dec
mov
test
mov
inc
and
xor
or
adc
les
inc
sar
fwait
pop
xor
nop
aas
outs
fwait
inc
push
xchg
out
ret
add
pop
push
or
mov
add
sbb
adc
add
adc
push
xor
xchg
daa
and
adc
loope
sbb
cmp
shl
pop
pop
or
rcl
das
cmp
add
mov
cmps
cwde
stos
mov
push
inc
arpl
ds
mov
ss
sub
fimul
push
arpl
push
aaa
in
add
cmp
fisttp
inc
aad
cld
pusha
sbb
out
gs
repz
mov
ins
xchg
pop
clc
lods
pop
mov
xor
or
or
inc
inc
jns
addr16
stos
(bad)
leave
fwait
ins
xchg
mov
add
or
pusha
xchg
push
xchg
es
fwait
add
popa
mov
sub
aaa
xchg
ret
add
bts
fdivr
mov
pusha
in
test
inc
or
sbb
adc
or
mov
push
jne
adc
push
stos
sbb
pop
push
sar
je
push
inc
fdivr
pop
scas
pop
adc
arpl
outs
cld
xor
sbb
pop
mov
jp
(bad)
or
mov
iret
mov
clc
pop
fisttp
mov
adc
mov
scas
mov
ficom
loope
ins
cdq
jno
mov
mov
fcomip
sbb
or
sub
sbb
pop
dec
aas
mov
dec
(bad)
sbb
dec
imul
inc
sbb
xchg
sub
pop
outs
stc
cmp
or
add
and
les
int
int3
int
inc
push
mov
sbb
jo
aaa
sbb
mov
popa
xchg
sbb
aam
lods
inc
popa
fmul
cwde
bswap
popf
sbb
ret
pop
push
rsqrtps
nop
sbb
add
push
fcmovnbe
sbb
xor
inc
dec
bt
data16
ins
inc
inc
push
imul
push
sbb
mov
sbb
and
dec
mov
sub
dec
mov
inc
(bad)
push
repz
mov
dec
adc
int3
dec
mov
or
jnp
pop
sub
mov
popf
mov
retf
jae
push
pop
imul
add
inc
push
adc
jo
dec
pop
imul
push
pusha
shl
push
daa
ja
hlt
push
retf
fiadd
pop
mov
inc
popf
fld
pop
in
jmp
(bad)
xlat
ss
bound
add
and
pop
sbb
jns
sbb
mov
mov
add
nop
pop
and
add
(bad)
adc
or
or
call
stos
shl
inc
gs
out
push
push
ss
out
mov
adc
sub
mov
adc
push
out
pushf
out
xchg
jmp
or
out
and
retf
sbb
cdq
std
ret
add
add
sbb
mov
sbb
mov
sbb
in
pusha
stos
sbb
mov
scas
out
fld
mov
mov
clc
mov
mov
mov
ins
ds
outs
shr
adc
push
outs
imul
mov
pop
xchg
(bad)
pop
xor
das
sbb
ja
cmps
loopne
add
inc
out
pop
sti
push
adc
push
push
push
ja
test
and
pusha
int3
shr
sbb
scas
mov
pusha
cdq
ret
adc
and
mov
popf
and
jb
mov
inc
cmp
xlat
add
or
mov
inc
pop
shl
js
gs
outs
mov
test
popf
or
xchg
and
pop
pushf
mov
pop
or
cwde
dec
mov
lahf
jb
fcomp
popa
cmps
jo
jns
das
dec
add
push
xor
and
adc
pop
pop
or
and
mov
xchg
dec
bound
fsub
bound
lods
mov
cld
pushf
xor
and
push
xor
cs
push
push
push
daa
push
add
in
push
push
test
je
mov
(bad)
lock
add
mov
mov
mov
push
xor
mov
and
enter
sbb
fnsave
out
mov
ss
test
je
dec
int3
fs
movs
jbe
pop
cmp
push
sub
pop
ret
rcl
fst
cld
hlt
mov
mov
add
mov
add
jl
clc
mov
aam
mov
test
ret
mov
or
je
js
das
test
jge
push
or
das
aas
xchg
push
pusha
add
add
xchg
push
or
ss
add
jo
cdq
pop
in
add
pop
push
push
in
xchg
push
xchg
push
xlat
push
sbb
xchg
or
mov
jg
sbb
lock
push
push
push
mov
mov
hlt
dec
lock
fistp
fdivr
lea
stos
inc
adc
inc
jne
mov
aaa
aaa
and
jb
push
lods
jbe
sbb
cld
(bad)
lock
cmp
inc
pop
in
(bad)
pop
pop
pop
retf
inc
stos
lea
mov
jmp
retw
ret
pop
push
nop
and
popa
push
scas
xor
xchg
scas
gs
or
and
addr16
shl
lahf
aas
imul
xor
jns
daa
mov
or
inc
call
(bad)
xchg
das
lock
pop
sub
add
cwde
adc
outs
clc
and
mov
scas
adc
xor
mov
cmp
pop
(bad)
adc
mov
pop
add
ss
or
mov
and
or
mov
out
pop
and
mov
and
adc
jle
adc
or
cmp
ret
nop
mov
mov
xchg
mov
xor
inc
xor
dec
mov
push
mov
dec
inc
ret
mov
and
jge
adc
stos
pop
xchg
scas
rcl
sbb
mov
mov
mov
sub
mov
or
pop
add
test
mov
call
sbb
ror
sbb
xchg
hlt
inc
dec
cld
mov
(bad)
mov
call
cmp
xor
sub
jbe
inc
fistp
mov
popa
add
inc
test
fiadd
inc
test
add
add
dec
add
dec
xor
push
dec
ins
dec
bound
jp
fisttp
inc
outs
push
add
push
add
pop
add
mov
arpl
add
ret
loope
fdivr
dec
retf
push
xchg
bnd
xchg
jne
jbe
ja
push
sub
inc
jp
mov
(bad)
jg
xor
add
add
add
add
add
push
jno
add
loop
iret
aam
shl
mov
add
fsub
sub
leave
ret
jl
and
sbb
lock
lods
int
dec
adc
pusha
cmp
sti
jo
push
mov
es
sar
sbb
or
push
ins
lock
mov
(bad)
imul
neg
movzx
callw
push
cmp
jne
shl
(bad)
fnstsw
push
out
mov
in
loop
fdiv
stos
fsubr
inc
cmp
jl
fdiv
pop
lea
test
(bad)
adc
pop
clc
or
dec
cs
xor
loope
add
xor
js
lahf
inc
in
jge
lock
imul
out
je
ds
sub
mov
pop
pop
jo
test
aas
jne
(bad)
fs
mov
cmp
dec
loopne
loop
dec
ins
jbe
cmp
lock
push
dec
fdiv
or
rcl
xor
cli
and
jne
rol
in
rcl
xchg
dec
fwait
retf
jmp
jge
push
cld
xor
xor
push
aam
jns
jnp
jo
and
push
icebp
out
xor
into
pop
mov
fmul
mov
enter
jge
aam
test
daa
daa
dec
adc
mov
inc
hlt
sbb
ja
xchg
and
cs
pop
and
mov
inc
pop
into
lock
add
add
sahf
xor
add
xchg
xor
add
retf
xchg
xor
ins
out
pop
pop
cwde
inc
sbb
add
inc
pusha
mov
lea
lock
or
add
jmp
out
push
ja
scas
adc
dec
loope
dec
fsubr
push
or
xchg
mov
add
das
jae
inc
jo
or
add
xchg
idiv
stc
xchg
or
in
push
and
cmps
dec
inc
inc
stos
test
mov
clc
call
add
or
mov
dec
add
or
into
push
aaa
xchg
mov
xor
bound
xor
mov
xchg
add
xchg
je
and
jno
test
mov
fs
call
or
cmp
fmul
aas
dec
mov
call
outs
imul
jbe
fadd
sbb
and
mov
push
imul
loopne
mov
push
in
in
cmp
loopne
mov
loope
or
and
sbb
mov
cwde
fstp
cmp
jne
sbb
cmp
clc
pushf
call
sbb
daa
push
sub
mov
lahf
popa
dec
adc
push
push
dec
lods
mov
inc
outs
dec
inc
inc
(bad)
xchg
fcomp
(bad)
iret
and
xchg
sub
test
nop
xor
dec
scas
ins
push
scas
adc
or
lock
mov
movs
push
mov
lds
or
add
xchg
js
icebp
pop
mov
add
pop
adc
sbb
jb
(bad)
std
loopne
fadd
lock
or
rcr
ret
jns
pop
or
fs
dec
pop
jno
or
(bad)
and
adc
push
cmp
sub
mov
out
leave
xor
psubusw
ret
or
push
lahf
mov
mov
jb
mov
and
adc
push
ds
mov
int3
pop
es
(bad)
mov
test
in
out
ret
cmps
out
mov
pop
or
cmp
(bad)
push
loopne
jl
ret
sti
or
and
je
sbb
jo
cmp
clc
cmp
int3
das
pop
xor
shl
cdq
xchg
jnp
sbb
xchg
popa
push
and
xchg
popa
pop
mov
sahf
adc
clc
imul
push
scas
push
cmp
lods
push
test
lea
sti
cmp
add
ror
cmps
aam
test
push
push
movzx
call
mov
pop
or
fisttp
mov
mov
add
mov
popf
mov
test
xchg
call
dec
push
or
add
dec
inc
(bad)
mov
cld
loope
mov
inc
or
or
cmp
mov
dec
and
enter
cmp
aaa
fimul
sbb
or
add
mov
test
in
push
test
adc
je
sub
in
add
dec
jns
push
test
lahf
out
pusha
adc
fisub
in
push
mov
pop
mov
xchg
cmp
aaa
mov
pop
sbb
ja
jge
adc
mov
add
fdiv
retf
repnz
sub
inc
sti
add
out
adc
mov
ldmxcsr
mov
loopne
shl
outs
les
sub
dec
sub
jmp
inc
adc
leave
inc
xor
in
(bad)
or
in
cmp
popf
pop
mov
sti
add
add
xor
pop
cmp
or
mov
ja
cmps
movs
dec
pop
jo
sbb
mov
int3
sti
dec
push
je
adc
mov
inc
test
add
loopne
inc
push
push
mov
inc
neg
mov
stc
inc
test
ret
dec
jmp
retf
xor
xchg
mov
xor
xor
push
cmp
sbb
xor
pop
xlat
js
ror
sub
jmp
setg
cmp
xchg
mov
cld
loope
push
pop
adc
test
ror
int
cs
test
je
imul
xor
outs
std
jne
xor
mov
cmp
scas
std
push
clc
bound
fdivr
dec
je
sub
cmp
and
rol
pusha
pop
pop
add
stos
js
lock
sbb
mov
clc
inc
out
pop
fimul
std
cmp
jne
push
mov
xor
mov
std
pop
cmp
mov
test
add
xchg
push
xchg
pop
(bad)
ins
xor
xchg
add
jmp
inc
mov
sub
das
scas
push
test
in
cli
adc
icebp
loop
or
rcr
sbb
(bad)
jnp
mov
fdivr
jle
pop
pusha
cmp
retf
dec
mov
adc
xor
out
pop
repnz
shl
pop
retf
imul
or
(bad)
and
mov
pop
les
pop
es
add
add
jge
add
push
pusha
inc
(bad)
sti
jne
(bad)
sbb
call
rol
lock
adc
push
clc
adc
xchg
fcom
outs
xor
mov
mov
mov
test
lods
loope
out
pop
pop
cmp
pop
mov
cdq
push
or
ins
mov
imul
cli
cmp
loope
es
retf
(bad)
lock
scas
jne
stc
jmp
bound
dec
aaa
push
or
sub
inc
and
cmp
(bad)
or
mov
mov
in
dec
pop
imul
lea
sbb
sbb
push
les
cmp
mov
jmp
push
test
mov
dec
sub
inc
sub
in
xlat
leave
nop
pop
jae
mov
(bad)
std
enter
or
rol
call
push
sub
sub
mov
lea
pop
fdiv
cmp
mov
push
retf
lock
popa
(bad)
add
or
push
mov
and
sub
fdivr
stc
sbb
in
lock
sub
adc
ja
adc
scas
test
adc
jae
jmp
fsub
cmp
and
pop
add
xor
inc
jmp
mov
and
lock
mov
pop
ss
xor
mov
jl
pop
mov
cmp
and
popf
or
cmps
cmp
in
shr
pop
fucomp
push
or
add
rcr
daa
xchg
or
add
fisubr
dec
addr16
cmc
inc
test
adc
inc
dec
out
add
push
call
jle
inc
cmp
push
ret
or
dec
sbb
sbb
js
and
xlat
adc
in
mov
cmp
xor
cmp
gs
loop
test
arpl
jmp
fs
push
mov
shl
push
push
push
test
push
loopne
jmp
mov
inc
into
sub
mov
paddusb
fsubr
sbb
test
fs
movs
or
add
adc
sbb
aam
pop
xchg
add
std
push
test
test
sub
ss
mov
mov
sbb
jmp
mov
mov
leave
or
mov
push
jle
sub
rol
fisubr
jo
add
and
dec
stos
and
call
cmc
xchg
ins
jmp
sub
ja
lock
mov
imul
pop
jmp
stc
sbb
cmp
out
push
frstor
test
call
inc
push
in
push
add
xlat
inc
movs
shr
mov
add
xchg
jmp
sub
xchg
pop
fisub
push
push
aaa
push
test
les
and
in
imul
(bad)
cmp
cmps
push
mov
cwde
jecxz
sbb
nop
mov
(bad)
loop
cmp
ror
(bad)
out
int
push
in
mov
fimul
mov
ins
test
adc
aaa
add
add
dec
(bad)
sub
jbe
add
ja
loop
idiv
bound
aaa
dec
add
add
add
jae
popf
xchg
xchg
movs
jnp
into
aas
shl
aas
cmp
out
movzx
test
add
loopne
or
push
add
loop
or
popa
xchg
xor
sbb
test
mov
mov
loop
sbb
test
or
push
mul
mov
pop
int
dec
jmp
out
push
fcom
fadd
sub
mov
cmp
jbe
mov
pusha
fs
add
popf
push
outs
sbb
inc
loopne
adc
scas
mov
add
pushf
jge
mov
dec
(bad)
neg
jno
cld
push
add
retf
pop
mov
and
mov
inc
cld
jne
mov
cdq
add
fs
push
add
loopne
idiv
(bad)
shl
ret
adc
dec
retf
jne
mov
add
scas
aaa
jg
mov
lods
add
mov
aam
cmp
jne
pusha
xchg
push
(bad)
pusha
adc
and
cmp
jbe
mov
jns
shl
sbb
dec
ret
clc
pop
ja
xor
rol
icebp
pop
pop
add
cmp
mov
adc
loopne
sbb
fs
lods
int3
in
or
outs
fist
sbb
ror
push
jo
add
or
push
mov
mov
adc
push
js
inc
dec
jne
mov
dec
mov
nop
inc
mov
xlat
data16
cmp
cmp
or
out
cmp
cmp
jge
dec
mov
and
mov
sar
mov
or
adc
add
fdivr
add
push
jp
movzx
mov
fucomp
push
movs
pop
adc
xor
sub
sub
sbb
mov
push
jne
cmp
pop
pop
jbe
sub
mov
(bad)
xor
add
xchg
push
ins
ror
or
sbb
test
sub
clc
jbe
cmps
push
and
rcr
inc
inc
pusha
jg
inc
mov
test
inc
dec
movs
into
sbb
jb
lea
or
push
xor
movs
sbb
mov
mov
outs
out
rcr
sbb
in
push
xchg
pushf
push
mov
xor
add
or
push
ja
or
xor
daa
jne
icebp
cld
popf
jno
(bad)
ss
mov
pop
xchg
sbb
int3
jmp
and
mov
and
cwde
xor
(bad)
mov
(bad)
adc
pop
jecxz
or
and
cmp
fild
ss
inc
pushf
add
cwde
mov
sbb
in
outs
sub
cmp
test
cmp
mov
mov
lahf
(bad)
fnstsw
outs
imul
addr16
or
lds
daa
pop
and
lock
jo
xchg
adc
fldenv
pop
pop
arpl
int3
lods
mov
add
rcr
ins
ins
sub
aaa
xor
inc
sbb
and
scas
push
imul
push
out
es
or
xchg
jp
dec
aaa
mov
faddp
in
xor
sbb
(bad)
dec
dec
and
rcl
sub
cmp
ret
and
or
sbb
and
(bad)
js
sbb
or
cld
inc
and
push
inc
and
push
imul
add
fisub
rcr
(bad)
pop
cmp
and
add
xchg
push
popa
push
out
daa
and
sbb
ins
push
je
mov
(bad)
cmc
adc
movs
hlt
cmp
inc
or
or
sar
add
je
push
nop
push
xchg
sub
mov
dec
mov
push
dec
retf
and
xor
push
or
cmp
push
dec
jmp
sub
mov
sub
or
lods
jnp
push
adc
in
test
dec
add
xor
pop
mov
sti
mov
bound
jl
hlt
mov
popa
and
in
addr16
int3
mov
inc
lock
addr16
adc
aaa
movs
sub
mov
mov
lahf
hlt
xor
out
sbb
jno
push
inc
call
inc
clc
or
repnz
int
jne
add
jne
xchg
xor
and
daa
adc
lods
dec
movzx
mov
jp
pop
je
inc
sub
mov
(bad)
add
pop
cmp
xor
shr
xlat
xor
cmp
jge
stc
in
fs
sub
stos
ror
adc
call
scas
jb
mov
fstp
or
xchg
pop
scas
sbb
je
(bad)
xor
loopne
loopne
sub
clc
je
mov
mov
fmul
ins
rcr
sbb
push
xor
mov
mov
push
dec
xchg
arpl
outs
into
or
cmp
xchg
add
push
outs
sub
xchg
inc
arpl
sbb
dec
out
sbb
push
(bad)
sbb
jo
jae
cwde
lds
add
aam
(bad)
aas
xor
jg
or
out
jg
push
mov
aaa
inc
(bad)
pop
xor
adc
sbb
sub
loop
cmp
stc
fimul
aam
xchg
inc
and
xor
pop
sub
push
icebp
cmp
mov
jo
ins
sub
gs
mov
fmul
add
pop
mov
dec
je
push
sub
jl
cwde
daa
ret
mov
fs
adc
lods
bound
adc
out
sub
js
xchg
jmp
fisubr
mov
dec
dec
adc
mov
out
push
clc
mov
pop
cmp
add
xchg
ret
xchg
xchg
and
movs
add
sbb
in
nop
mov
fwait
(bad)
(bad)
popa
cmp
das
push
nop
and
jle
shl
lods
outs
(bad)
call
sbb
or
fistp
mov
jae
sub
push
data16
gs
imul
aad
adc
xchg
pop
and
adc
ss
(bad)
xor
mov
js
add
dec
push
xchg
lock
lea
sub
test
dec
out
sbb
leave
cmc
in
(bad)
daa
movs
ins
out
or
add
push
test
pop
jl
je
jl
push
inc
in
and
push
sbb
or
clc
(bad)
jnp
test
into
inc
adc
push
fwait
adc
cmps
inc
mov
fdiv
stos
ja
xchg
clc
xchg
jp
mov
xor
jmp
rcl
leave
pop
nop
movs
push
or
adc
and
jo
add
std
jne
div
cmp
test
pop
ror
je
fldenv
(bad)
jmp
test
sbb
cmp
and
and
push
scas
xlat
int3
xor
iret
jbe
scas
in
mov
jmp
cmp
jle
or
or
xchg
pop
mov
inc
jae
pop
pop
int
inc
sub
xchg
or
jb
mov
nop
pop
sbb
ja
shr
sub
adc
sub
lock
add
push
loop
popa
mov
cmp
xor
xor
sahf
nop
(bad)
loopne
mov
push
or
jecxz
cmc
xor
sti
bound
pop
sub
hlt
or
aas
mov
cmp
xor
add
or
and
movs
scas
lock
ja
and
jl
in
es
adc
adc
not
and
dec
pusha
ins
add
mov
mov
xor
fs
or
xor
shl
test
xor
mov
or
idiv
daa
pusha
jae
je
das
ins
adc
call
shl
cmps
xor
sbb
enter
push
cmp
dec
ja
jle
pmullw
and
mov
test
mov
(bad)
sbb
dec
aaa
inc
mov
div
(bad)
jae
add
jmp
cmp
or
ror
(bad)
stc
jne
inc
adc
xor
jo
popa
xchg
mov
imul
imul
and
push
mov
aaa
fnstenv
inc
fisub
shr
adc
sbb
pop
iret
cmps
pop
test
call
retf
xor
arpl
inc
dec
inc
push
xor
bswap
jne
jo
movhps
call
xor
or
scas
dec
pusha
and
push
scas
add
sbb
mov
sub
getsec
stc
fdiv
cmp
mov
retf
dec
inc
and
inc
movs
add
(bad)
adc
sub
xor
call
push
les
push
inc
mov
xor
add
sar
cld
mov
ror
repnz
sub
or
adc
and
mov
cmp
xor
add
cmps
outs
push
ret
pusha
push
push
push
fiadd
mov
xor
jbe
rcpps
cmp
mov
sbb
mov
and
dec
test
and
jne
and
shr
pop
ret
cmps
std
fcomip
push
push
add
push
cmp
sbb
push
dec
nop
loope
cdq
mov
test
push
or
ins
pop
xor
or
mov
pop
cli
or
xchg
and
xor
push
cmp
fist
inc
add
sbb
adc
cmp
or
adc
dec
test
jl
inc
mov
or
sar
push
or
in
cwde
ret
add
mov
cld
mov
push
inc
add
inc
cmp
mov
xchg
js
in
mov
cmp
movs
push
mov
or
xchg
push
push
sbb
xchg
jp
sbb
das
xor
cmp
jne
repz
scas
mov
addr16
jae
in
push
int
and
sbb
sbb
or
inc
sbb
rol
test
mov
pop
inc
sbb
out
nop
pop
push
imul
adc
mov
dec
sub
in
je
add
mov
retf
stc
test
je
mov
or
push
rcl
ret
or
adc
test
test
std
das
xor
loopne
pop
or
dec
xor
and
pushf
mul
pusha
int
aaa
sub
and
pop
inc
call
pusha
xor
add
sub
jp
push
sbb
ins
push
and
loopne
loopne
in
mov
dec
ror
sbb
mov
mov
add
cmps
jle
repnz
and
or
dec
inc
xlat
adc
loopne
inc
lock
xchg
mov
and
call
loopne
or
mov
dec
push
and
or
or
lea
xor
out
in
es
xor
loopne
pop
stc
cld
test
pop
mov
mov
cli
add
cdq
mov
and
fbld
cmp
daa
nop
jne
js
icebp
xchg
xchg
js
xchg
out
push
push
adc
je
xchg
mov
(bad)
movs
inc
inc
not
(bad)
push
cdq
push
fstp
or
rcl
popf
ja
or
js
xchg
ds
jle
cmp
mov
xor
and
xor
inc
mov
mov
adc
add
inc
cmp
or
pop
dec
movs
popf
popa
add
pop
or
sub
xchg
sub
ins
mov
add
leave
je
pop
cwde
or
cwde
daa
rol
sbb
jo
inc
mov
imul
aaa
nop
pop
sub
jbe
and
mov
sub
and
ins
cmps
js
adc
mov
outs
xor
and
mov
mov
je
or
mov
mov
sub
outs
mov
sub
mov
hlt
lock
fiadd
ins
je
icebp
mov
jle
mov
(bad)
mov
mov
jmp
jbe
xchg
xor
lahf
jo
dec
push
aam
js
sub
je
jg
pop
ffree
jbe
les
nop
mov
jo
es
lods
lock
sbb
adc
xor
mov
or
or
add
cld
and
mov
mov
ins
les
sbb
rcl
mov
into
not
xor
fsubr
add
push
adc
add
pop
and
push
mov
push
jmp
fstp
mov
jnp
xor
je
xor
push
sti
mov
and
imul
and
lds
inc
push
add
jae
push
or
loope
xor
(bad)
and
pop
sbb
xor
retf
test
dec
cmp
ficom
inc
sub
(bad)
(bad)
jo
add
stos
pop
sbb
mov
sub
jo
pop
add
mov
xor
fistp
shl
mov
rcl
xchg
pop
mov
sbb
sub
and
adc
sahf
call
sub
xor
xchg
in
sub
jne
add
mov
cs
jmp
loopne
xor
pop
push
push
cmp
jo
cmp
jmp
and
xchg
hlt
mov
shl
xchg
lock
or
xchg
inc
imul
mov
fs
add
jb
gs
lea
push
pop
lds
dec
ins
xchg
adc
pop
das
mov
dec
and
push
mov
clc
jne
inc
inc
dec
add
adc
push
stos
inc
icebp
xchg
and
mov
sbb
test
inc
mov
cmp
ror
cmp
jae
retf
push
repz
sbb
lods
sar
cmps
sub
push
dec
movs
add
stos
push
inc
mov
pop
pop
xor
push
dec
xor
adc
cs
push
pusha
or
push
and
pusha
add
in
cmp
xchg
ds
inc
mov
mov
xor
outs
mov
push
push
mov
jmp
fcom
jl
inc
add
add
mov
and
mov
outs
mov
mov
and
xchg
inc
sub
stc
mov
rcl
aam
xchg
lock
add
shl
test
jg
and
ins
mov
mov
and
sysenter
rcl
outs
mov
cmp
ret
or
hlt
cmp
div
adc
and
or
xor
or
and
dec
pop
pop
push
and
xchg
inc
xchg
in
(bad)
mov
xor
fdivr
test
adc
or
push
xchg
xchg
mov
call
inc
loopne
retf
adc
mov
cmp
fwait
sbb
add
sub
xor
mov
and
xor
jecxz
inc
xor
sti
sub
adc
loopne
inc
das
xor
cmp
jbe
cld
es
pop
or
mov
push
fcomp
push
xor
adc
jo
inc
push
aaa
adc
xor
xchg
das
pop
nop
sbb
adc
add
(bad)
sub
loope
or
pop
inc
inc
xchg
xor
inc
aaa
sahf
stos
push
push
push
in
in
mov
sub
inc
idiv
scas
pop
or
inc
dec
jne
pop
out
add
cmc
push
call
cmps
lods
pop
imul
push
les
cmp
shr
sahf
cmp
push
sbb
dec
ror
out
mov
push
scas
nop
and
(bad)
jecxz
pop
add
cli
loope
sub
add
push
or
mov
jg
adc
pusha
icebp
dec
jg
jmp
adc
or
jmp
test
and
test
jg
cmp
jg
add
ror
xor
or
add
jns
movs
loope
fs
sbb
pop
push
mov
push
jg
sub
sub
aad
out
push
lds
lock
or
das
(bad)
and
mov
ror
add
enter
fcom
and
fsubr
mov
movs
xor
dec
or
inc
clc
cmp
jle
mov
out
stos
rcr
sub
cwde
dec
or
movsx
retf
jne
add
dec
jne
popf
popf
mov
or
and
and
adc
rcr
adc
adc
clc
mov
scas
add
xor
jb
loope
ret
hlt
push
fmul
fcomp
lds
ret
jo
inc
(bad)
idiv
mov
bound
xor
cmp
push
fadd
call
sbb
push
mov
sub
bound
(bad)
fld
inc
mov
ins
pop
adc
test
ds
xor
rcr
in
adc
xor
jle
add
fstp
repnz
icebp
xchg
pop
or
ss
cmp
ja
add
or
jmp
add
dec
push
jns
mov
cmp
or
in
xchg
push
lahf
ror
test
int
gs
jle
mov
push
daa
daa
shl
lds
loopne
xchg
adc
test
icebp
or
or
jge
or
fwait
mov
lea
mov
and
inc
or
dec
cmps
xchg
push
push
mov
daa
loopne
movs
pop
add
push
and
add
(bad)
cdq
dec
cmps
clc
or
mov
jb
or
or
sbb
or
push
inc
inc
ja
pop
xchg
in
leave
je
cs
mov
inc
inc
jne
cs
adc
movs
lea
or
inc
loopne
xchg
jp
adc
pop
or
cmp
and
jg
jmp
inc
cmp
test
cmc
iret
loopne
sub
pusha
imul
cmp
imul
lahf
shr
call
cld
outs
sub
sub
je
sbb
clc
pop
push
cmp
adc
inc
inc
sub
fisttp
(bad)
movs
and
ja
lock
(bad)
jne
sub
dec
adc
add
xchg
ret
(bad)
adc
mov
les
adc
lods
mov
cmp
retf
loope
icebp
fmul
aas
jmp
cli
sbb
add
loope
in
adc
mov
lods
xor
adc
jmp
arpl
adc
test
dec
ficom
or
cmc
das
shl
pop
in
hlt
dec
aam
jg
es
xor
sub
out
inc
add
outs
je
dec
cmp
dec
into
jg
cs
shl
xlat
jge
xor
xor
or
bound
mov
sbb
push
push
into
ret
prefetchw
dec
pop
ins
mov
mov
pop
das
jp
inc
cmp
cmp
mov
pop
pushf
cmp
or
stos
pop
pop
loope
mov
xchg
ds
in
jne
ins
mov
gs
call
or
adc
ret
mov
fadd
pop
scas
xchg
retf
stos
in
mov
fiadd
push
adc
popa
add
je
cli
mov
and
mov
fmul
cli
fs
sbb
ret
adc
jns
add
and
iret
hlt
push
pop
or
mov
add
lahf
inc
mov
inc
stos
cmp
xor
add
clc
cwde
xchg
sub
cmp
sbb
loope
mov
ret
dec
scas
sub
or
jbe
sbb
fcomp
test
shr
add
shr
std
pop
xor
lock
mov
aam
or
test
pusha
fwait
aaa
pop
enter
dec
push
mov
inc
adc
push
retf
xor
push
xchg
inc
or
inc
ret
or
int
je
cmp
adc
pop
in
add
or
sub
ins
and
pop
push
loop
lods
xchg
xor
push
inc
adc
fst
sub
stc
or
sbb
hlt
jmp
test
push
add
sub
push
pop
pusha
xor
cdq
scas
sub
(bad)
mov
mov
daa
inc
adc
nop
and
adc
and
pop
jb
(bad)
and
(bad)
mov
(bad)
xor
inc
and
push
ret
lods
xchg
xchg
add
pop
mov
push
lods
sahf
xchg
or
retf
movs
pop
adc
and
add
cmps
hlt
push
and
test
pop
or
adc
cdq
lea
mov
or
fadd
mov
jnp
pop
mov
and
xor
ja
test
out
push
push
div
push
bound
pusha
xor
add
push
and
add
(bad)
or
test
sbb
mov
fmul
add
jbe
dec
adc
lods
or
test
xor
jo
mov
sbb
retf
dec
lock
inc
cmc
inc
int3
dec
adc
es
mov
mov
outs
xor
push
adc
(bad)
test
loopne
adc
add
fs
fucomi
rol
xor
repz
cmp
js
int3
push
and
dec
repz
ror
push
loopne
inc
xor
mov
sar
dec
add
lock
fs
neg
push
mov
push
nop
hlt
mov
adc
mov
rcl
out
pop
add
cwde
xchg
jg
push
add
outs
je
inc
jb
gs
daa
inc
pop
push
jb
cs
outs
arpl
jae
add
or
sbb
cli
add
gs
data16
cmps
pop
std
ins
add
in
xor
les
add
push
arpl
mov
xor
rcr
jl
mov
nop
cmp
loopne
xchg
jp
mov
sbb
jmp
or
mov
inc
and
push
aam
fmul
or
les
jle
and
cmp
jo
push
mov
btr
mov
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
movs
movs
cmps
cmps
xchg
xchg
xchg
xchg
test
stos
stos
xchg
xchg
xchg
xchg
lods
lods
scas
scas
xchg
xchg
xchg
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
call
xor
jo
or
inc
push
gs
xchg
in
hlt
jae
outs
outs
mov
or
xor
addr16
ja
push
outs
imul
outs
add
or
popa
adc
in
jbe
(bad)
ins
popa
imul
popa
add
bound
iret
jae
or
loop
pushf
mov
dec
not
ins
inc
add
(bad)
neg
adc
cmp
test
push
hlt
xor
loop
js
jo
pusha
lahf
rol
mov
pusha
mov
mov
mov
sub
out
or
jbe
mov
je
icebp
sub
addr16
outs
outs
mov
jae
popa
jb
jle
adc
xor
shr
shr
ins
cmp
in
aad
fwait
jne
cmp
xor
or
pop
lods
push
or
test
pop
out
enter
call
pop
cdq
mov
ss
add
jg
or
push
sbb
and
add
push
retf
pcmpeqw
push
xchg
hlt
jmp
inc
sysret
stos
fbstp
(bad)
or
ss
out
mov
add
push
fcmovnu
pop
fmul
inc
aad
cmp
outs
mov
or
popa
mov
je
ins
ja
and
pop
push
dec
fsubr
push
dec
outs
popa
fs
outs
ins
jnp
inc
mov
or
ins
addr16
loope
add
inc
outs
je
and
jnp
or
push
mov
and
sti
int3
nop
cmp
bound
pop
or
push
mov
and
in
bound
(bad)
mov
jmp
adc
add
test
jnp
adc
ss
cmp
push
push
jno
test
out
ins
jae
test
rol
jnp
xor
test
add
jmp
inc
cmps
das
push
fdivr
add
xchg
lods
dec
inc
sahf
pushf
loope
cmp
dec
dec
(bad)
jmp
cmp
xchg
loopne
and
and
js
push
repnz
je
sti
and
or
push
in
pop
push
test
gs
or
cmp
jns
xor
dec
add
fs
pushf
adc
inc
inc
jae
clc
sbb
add
popa
cwde
retf
icebp
mov
inc
bound
pop
add
clc
dec
jnp
add
mov
push
test
js
dec
outs
or
cmp
fsubr
les
mov
xor
push
xor
adc
inc
pop
sahf
add
add
cmp
jnp
adc
imul
inc
mov
adc
cmp
jae
mov
xchg
arpl
inc
lods
test
adc
adc
cmps
clc
leave
or
jb
or
or
ja
xor
or
add
lock
inc
add
pop
in
mov
add
in
push
mov
add
push
test
or
imul
out
cmp
add
or
in
out
sti
out
jnp
lods
enter
jb
or
cs
push
inc
int3
ins
and
movs
add
test
outs
jne
je
or
sbb
or
test
add
mov
or
ins
outs
pop
add
adc
mov
add
add
adc
test
add
int3
sti
add
out
add
ins
jne
add
mov
ret
dec
popa
jo
cwde
pop
xor
int
push
adc
add
mov
in
out
push
addr16
add
enter
sbb
dec
cli
or
das
pop
aam
ins
add
add
popa
xor
xor
mov
cld
lods
pop
xor
cmp
lods
and
les
mov
pusha
loopne
xor
jl
fmul
mov
outs
push
neg
mov
jmp
inc
pcmpeqb
bnd
add
inc
dec
ja
jae
jg
enter
fs
pop
add
das
xor
jle
jns
fucom
or
adc
xor
clc
es
lock
xor
fmul
ins
dec
or
pop
fadd
push
fnsave
dec
push
daa
sub
add
xor
cwde
add
loop
test
test
test
scas
inc
mov
pop
dec
mov
loopne
cmps
dec
xor
cs
add
lsl
mov
sti
scas
adc
aaa
and
imul
mov
mov
arpl
pusha
mov
push
adc
add
adc
mov
outs
imul
add
adc
and
mov
test
dec
and
ror
mov
inc
rcl
mov
fcomp
popf
ds
repz
aam
jo
push
popa
pop
pop
push
outs
stos
pushf
nop
stc
pop
dec
jnp
in
xor
jns
adc
push
popa
bound
jnp
loop
sbb
in
add
adc
add
setns
xchg
fimul
lahf
xchg
sbb
lods
loopne
xor
dec
mov
add
push
push
lds
jo
adc
jge
repz
nop
add
sub
shl
inc
js
std
or
mov
or
add
inc
add
ins
push
pop
dec
stos
mov
or
or
push
es
ror
push
pop
inc
adc
push
sbb
pop
(bad)
or
add
adc
jbe
sub
adc
(bad)
std
push
ror
pop
dec
xchg
popa
out
js
fst
lahf
add
rol
inc
aas
or
xchg
xchg
imul
cli
pusha
ret
imul
sbb
dec
fcom
arpl
push
arpl
enter
xor
pop
jae
fldz
fidivr
movs
add
or
imul
cwde
sub
mov
mov
push
test
imul
imul
fs
das
popf
add
cs
icebp
push
and
mov
sbb
xor
je
and
popa
or
dec
cmps
add
push
les
pushf
das
inc
push
sbb
sub
hlt
js
outs
jnp
push
repnz
sub
push
sub
add
sar
test
popa
add
mov
test
sbb
inc
mov
add
pop
dec
xor
xchg
pop
loope
cmp
sub
nop
push
lock
push
mov
test
add
sbb
stos
popa
cmp
cs
mov
mov
xor
and
rol
and
ins
xor
jno
les
or
jno
ret
xor
and
ja
and
movs
sar
cmp
repnz
test
add
jo
shl
xchg
pop
fild
and
enter
or
dec
rol
in
enter
fadd
dec
pop
mov
mov
in
pushf
inc
mov
stos
lds
add
or
pop
jmp
push
aas
push
adc
les
rol
push
dec
push
pop
pop
adc
mov
call
dec
int3
pop
push
jne
ret
pusha
fwait
or
aam
add
fadd
inc
mov
setae
add
jne
add
push
pop
ret
xchg
inc
js
outs
xchg
int
push
xchg
fs
repz
dec
sti
push
jbe
add
sbb
xor
cs
jmp
js
lea
ins
push
(bad)
movs
push
test
push
(bad)
cdq
loope
sub
cs
jp
fnstsw
push
add
dec
out
push
inc
add
scas
xchg
pop
push
mov
mov
dec
(bad)
dec
pop
scas
xlat
sbb
out
mov
or
mov
or
xor
push
imul
imul
and
pusha
test
sub
adc
cmp
jmp
dec
push
mov
sbb
ja
dec
xchg
sbb
aas
mov
cmp
inc
fsub
test
cdq
daa
adc
mov
bound
add
add
inc
push
pop
mov
add
pop
ja
and
inc
or
pop
jnp
add
loope
adc
jo
add
aas
adc
ror
add
push
inc
stos
aaa
lods
push
jns
popa
cwde
mov
push
cmp
dec
push
mov
fistp
pushf
cld
push
sbb
sub
push
test
je
in
inc
mov
mov
add
in
enter
test
sub
out
cwde
push
add
xchg
pusha
lahf
cs
push
popf
out
xor
push
pop
and
adc
mov
cmps
sysret
mov
xor
pusha
lea
rcr
ja
call
lea
mov
xchg
lea
mov
inc
sbb
jnp
xor
sbb
ins
(bad)
push
ja
cs
push
mov
ins
ss
add
mov
xor
or
ins
daa
out
sbb
xor
adc
scas
add
and
imul
add
jge
mov
(bad)
xor
inc
jl
adc
and
or
sahf
enter
or
pop
adc
icebp
fisttp
mov
data16
mov
add
sahf
xor
out
arpl
cmp
leave
outs
mov
and
jecxz
pop
adc
pusha
push
daa
js
jl
push
push
mov
scas
fwait
das
ror
mov
fcmovne
push
cmp
cs
inc
push
daa
enter
xor
ins
pop
cmp
push
add
xor
lock
daa
pop
inc
pushf
retf
sbb
and
push
push
outs
js
jo
popa
jae
inc
jl
dec
lock
gs
sbb
imul
or
xchg
fmul
and
jge
mov
mov
adc
add
pop
ror
jo
and
sbb
jo
cmp
push
shl
or
adc
setb
inc
inc
inc
inc
lock
fcomp
adc
fcomp
push
pop
pusha
ja
and
paddsb
push
and
dec
repz
push
aas
mov
cmc
cmp
daa
ins
mov
icebp
add
mov
(bad)
pop
inc
shl
lock
jns
cmp
xor
dec
sbb
scas
xor
sbb
mov
dec
xchg
test
pop
test
data16
outs
mov
xor
dec
popa
aas
and
rol
adc
and
pop
ret
push
push
push
inc
int3
ja
xor
ss
icebp
bound
iret
out
je
inc
inc
mov
pop
and
fs
add
mov
mov
lahf
ror
push
xchg
sbb
push
sub
mov
jno
ror
popa
je
push
adc
jmp
ret
scas
pop
aaa
mov
clc
mov
gs
xor
cs
sbb
scas
jbe
jne
inc
sbb
pop
or
lods
push
sub
inc
test
xor
ja
sub
push
push
cmp
or
pusha
into
cmp
mov
jmp
int3
adc
add
mov
jns
inc
jo
add
cdq
xchg
jnp
test
add
shl
cmp
js
adc
or
outs
ins
imul
or
lahf
add
and
hlt
pop
pop
(bad)
push
push
bound
out
or
mov
xchg
xchg
xchg
xchg
daa
dec
jno
retf
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
inc
jo
mov
xlat
stc
sbb
shl
add
jle
ins
xor
enter
mov
sbb
out
push
sub
and
test
outs
sbb
dec
jae
and
cmp
jmp
sub
cmp
(bad)
std
sub
hlt
enter
xor
and
in
inc
or
jae
and
add
push
add
(bad)
imul
dec
push
dec
dec
inc
xchg
add
push
ins
popa
js
out
xlat
lods
cmp
inc
sbb
jbe
inc
retf
gs
retf
dec
test
adc
add
mov
inc
mov
or
mov
add
sub
sti
test
movs
xchg
and
test
(bad)
clc
cmp
mov
cmc
ss
pop
test
xor
cmp
das
jg
pop
sub
xchg
pop
mov
loopne
add
jns
dec
and
add
inc
xor
call
clc
fwait
mov
cmp
mov
pop
call
xchg
and
jmp
xlat
sbb
add
lock
add
push
mov
pop
test
test
push
adc
pop
lds
adc
adc
mov
(bad)
push
outs
clts
xor
inc
loopne
in
in
jecxz
push
inc
jb
pop
lods
xchg
push
loope
popa
add
jnp
pop
lds
xchg
xchg
jae
pop
pop
and
scas
outs
push
(bad)
dec
or
cmp
xor
mov
add
and
inc
push
arpl
add
xor
push
shr
and
jns
imul
adc
and
adc
push
ins
inc
mov
aaa
test
andps
lock
shr
xor
push
in
clc
jmp
cmp
fs
dec
ins
gs
dec
sbb
sbb
or
out
test
test
stos
push
shl
fucomip
add
lods
addr16
rol
test
data16
inc
xchg
sub
in
or
and
aam
(bad)
mov
cld
push
cmp
and
pop
xor
jmp
adc
dec
xlat
shl
adc
cmp
jg
adc
and
(bad)
sbb
test
sub
and
loope
adc
push
cmc
or
cs
shl
add
not
or
sbb
mov
fs
sub
in
adc
and
lea
jo
sub
(bad)
test
inc
in
out
add
adc
push
sbb
jne
cdq
or
mov
ins
mov
xor
or
shl
push
sbb
shr
sahf
movs
inc
mov
add
pushf
add
or
and
dec
sub
sbb
rcr
cmps
lds
push
jp
test
aaa
inc
(bad)
cmp
mov
cmp
mov
fs
das
ret
lea
push
or
push
cmp
loopne
inc
mov
movs
jmp
pop
cmp
or
pop
adc
das
aam
or
or
scas
xlat
jmp
das
jo
das
shl
push
mov
repz
cmp
sbb
inc
pop
push
sub
or
push
dec
jae
retf
pop
mov
ss
pop
cmp
jnp
lods
adc
ja
sub
mov
lds
sub
sbb
lds
jb
mov
or
mov
daa
inc
mov
repnz
pop
lea
imul
xor
cmp
test
xor
mov
jae
aam
adc
ds
inc
(bad)
or
adc
ja
out
xor
pop
xchg
inc
push
out
mov
xchg
inc
cmp
ja
xchg
sbb
dec
adc
(bad)
stos
sbb
gs
push
outs
and
jae
pop
cmpxchg
pop
mov
shr
mov
push
outs
pop
cdq
jmp
add
aad
mov
adc
addr16
mov
in
or
das
fwait
push
fld
addr16
mov
push
out
in
or
call
mov
stos
imul
add
mov
pop
stos
inc
or
mov
inc
add
mov
mov
inc
mov
add
lea
or
mov
mov
test
push
std
mov
loopne
mov
adc
xchg
jmp
and
and
push
adc
mov
ins
mov
inc
or
imul
jb
adc
pop
call
and
push
adc
push
inc
jne
pop
arpl
out
fsubr
mov
pop
push
cwde
mov
jnp
mov
jo
ins
pop
cwde
cmp
js
jb
inc
lock
add
sbb
std
out
and
aad
add
mov
mov
and
js
std
add
fild
ja
outs
jl
push
outs
das
lods
push
and
and
ffreep
outs
loopne
xlat
dec
mov
in
and
js
cmp
sub
lea
cvtpi2ps
push
(bad)
push
add
or
dec
mov
inc
imul
push
adc
verr
push
mov
xor
cmp
adc
xor
mov
sub
loope
or
or
jno
add
mov
mov
mov
stos
push
xchg
adc
dec
mov
xchg
mov
bound
jmp
sbb
mov
ret
rcl
sub
push
add
inc
loopne
retf
inc
and
lea
pop
mov
xchg
out
xchg
jge
or
add
or
(bad)
push
fld
inc
lods
push
cmc
mov
mov
ror
push
test
jmp
jo
xchg
mov
daa
call
jp
cwde
push
not
adc
imul
sbb
mov
retf
adc
int3
cmp
or
inc
(bad)
in
cli
bound
test
or
xor
add
nop
adc
sub
pop
jmp
ins
shl
and
jbe
add
ins
jnp
mov
leave
add
out
xchg
xor
pusha
or
outs
xor
ficom
rcl
outs
ins
jo
in
xchg
mov
mov
jo
test
ret
das
jecxz
or
(bad)
test
inc
sbb
or
push
cmps
rcl
cs
ret
or
or
mov
dec
push
add
add
push
and
loopne
or
int3
icebp
or
loopne
js
sub
mov
mov
push
outs
imul
outs
cmp
dec
push
jo
jmp
jmp
xor
pop
dec
xchg
mov
push
popf
popf
jl
xlat
pop
sub
sbb
out
dec
adc
aam
dec
push
jns
xchg
pop
call
mov
aas
lea
fidivr
jae
xchg
add
test
bound
and
jo
adc
push
loopne
xchg
add
fbld
lds
imul
loopne
js
dec
push
jno
ret
dec
shl
iret
add
adc
pop
fwait
dec
jmp
je
jb
cmp
popa
(bad)
inc
imul
mov
scas
popf
add
cwde
or
sub
lock
add
es
das
sbb
mov
in
mov
add
mov
inc
adc
pop
test
push
out
pop
and
xchg
inc
mov
cs
adc
add
loop
sti
ret
pusha
push
into
sahf
ucomiss
or
adc
popf
daa
jle
or
push
pop
test
xchg
(bad)
and
mov
and
adc
call
and
jnp
add
push
mov
out
xor
into
repnz
pop
outs
sbb
popa
ins
fisttp
frstor
adc
adc
(bad)
ror
pop
adc
mov
add
pop
lea
and
mov
test
fbstp
inc
mov
rol
aas
or
sbb
jae
xor
xor
xchg
mov
dec
pop
jbe
sbb
mov
mov
popa
movs
adc
push
jne
shr
adc
mov
and
sbb
inc
sbb
mov
sahf
call
cmp
inc
and
ficom
or
add
adc
jns
pop
gs
cwde
frstor
mov
push
mov
or
adc
dec
popa
dec
jne
dec
sbb
inc
jb
inc
sub
sub
rol
pop
aam
pop
dec
jo
sub
outs
pcmpgtw
jp
push
cmp
or
mov
or
jo
adc
stos
push
jbe
adc
pop
jmp
outs
cmp
cmp
sbb
or
(bad)
out
or
inc
outs
adc
push
add
mov
(bad)
mov
daa
xchg
pop
fs
adc
or
mov
popf
fdiv
rcl
cmp
cmps
push
cs
push
cdq
bound
ror
push
dec
xor
sbb
(bad)
xchg
inc
je
dec
sbb
add
addr16
or
ret
imul
inc
pop
rcr
jecxz
xor
outs
jae
mov
out
jae
dec
pop
(bad)
pop
in
add
cwde
pop
js
mov
and
cmp
pushw
adc
dec
add
inc
dec
push
test
mov
push
mov
inc
shl
fwait
push
pop
inc
pop
adc
dec
in
aas
push
cmp
push
in
jnp
sti
es
cwde
push
lock
push
add
push
push
xor
es
cdq
icebp
jns
mov
enter
xlat
sub
xor
mov
fcomi
mov
push
mov
push
mov
jnp
inc
es
mov
ja
mov
sub
sub
adc
mov
add
daa
dec
xchg
xchg
sub
or
cmp
cmp
inc
add
fwait
(bad)
xor
sub
adc
push
mov
add
jae
ret
cmp
or
add
adc
cmp
dec
inc
or
xor
dec
fsub
int
jle
push
cmp
inc
inc
out
bound
dec
test
sub
xor
cmp
inc
sbb
fcomi
rol
mov
test
xor
dec
push
repnz
lods
xor
adc
in
adc
add
not
ds
je
(bad)
int3
dec
xor
mov
cdq
int3
xor
jo
inc
sbb
daa
xor
call
and
fs
add
sub
rol
mov
adc
aad
nop
sub
or
stos
pop
ja
xchg
cmps
jno
cmp
cmp
cdq
xchg
fdivr
cmp
adc
ret
push
push
js
mov
into
sahf
push
dec
fwait
in
js
sbb
cpuid
sbb
nop
jb
lahf
sbb
dec
or
invd
(bad)
popf
mov
jle
pop
push
dec
aam
inc
fucomp
in
daa
nop
and
mov
aam
cmps
daa
jecxz
dec
pusha
or
and
dec
mov
int3
ss
(bad)
mov
pusha
or
call
adc
out
aaa
repz
mov
jnp
push
xchg
jp
inc
fs
mov
mov
jb
in
pop
nop
mov
and
add
and
adc
mov
push
fstp
push
xchg
test
mov
adc
add
lods
push
push
mov
and
push
jae
mov
or
addr16
and
xchg
add
push
add
pop
mov
add
pop
xlat
dec
rol
mov
push
or
add
inc
repz
adc
add
stos
addr16
push
imul
mov
bound
jb
adc
das
jge
test
and
inc
fmul
dec
test
inc
clc
or
add
aad
inc
xor
dec
sub
push
xor
add
mov
sbb
xor
loop
dec
or
rcl
adc
stos
daa
sub
in
mov
add
or
add
mov
(bad)
aad
sub
and
or
jne
gs
mov
outs
add
jno
sbb
pushf
cs
sbb
sbb
aaa
or
lods
sub
or
enter
and
enter
repnz
sbb
enter
aam
sbb
enter
stos
push
fld
inc
adc
adc
or
aad
push
sti
push
(bad)
sbb
push
aad
xor
push
clc
and
mov
add
push
mul
mov
xchg
or
cmp
cmp
mov
push
inc
stos
add
lahf
push
sub
imul
push
and
mov
and
sbb
push
sub
call
cmp
jmp
pusha
dec
push
sbb
(bad)
or
lock
dec
jae
pop
dec
xchg
fisttp
inc
inc
jmp
inc
loope
pop
inc
and
jns
push
xor
add
ret
inc
dec
jge
in
test
inc
push
rol
scas
add
xchg
jmp
push
daa
jae
(bad)
(bad)
fdivr
pop
inc
or
repz
mov
adc
loop
dec
pop
xor
xor
aaa
inc
xchg
dec
mov
int
inc
inc
imul
inc
sbb
bound
mov
pushf
sti
inc
sub
cmc
arpl
sbb
jmp
outs
ror
mov
cmp
call
(bad)
or
lock
rcpps
ins
inc
push
dec
xor
adc
mov
mov
das
jmp
inc
jge
adc
mov
fcomi
cmp
clc
fs
nop
mov
push
mov
push
ja
push
sub
add
jae
push
rcl
aas
push
pop
add
mov
push
outs
jbe
mov
push
stos
add
adc
or
inc
cmp
add
mov
adc
inc
js
popa
cmp
out
test
or
inc
(bad)
or
leave
fist
push
add
cmps
pop
jp
gs
inc
sbb
rol
and
xor
dec
fiadd
ins
and
jns
adc
mov
mov
add
or
rcr
pop
cs
repz
add
inc
dec
cmp
or
jmp
(bad)
psubsb
repnz
lock
into
movups
sti
adc
adc
test
push
jo
inc
jne
outs
fs
xchg
and
popa
mul
loop
mov
cmps
inc
pop
or
add
ficomp
call
aad
fadd
add
(bad)
dec
dec
ins
loopne
sub
add
inc
and
mov
mov
ja
repnz
adc
popa
ins
mov
push
mov
pop
or
ds
and
loopne
push
mov
push
and
and
ja
mov
and
mov
call
in
mov
push
jne
xor
and
or
ret
xchg
hlt
call
pop
popa
shl
vcvtpd2ps
or
push
cdq
or
shr
xchg
jge
push
pop
dec
jmp
aad
addr16
or
bound
je
mov
cmp
mov
and
push
xlat
jne
push
pop
and
aas
pop
stos
stos
lods
pop
cmp
add
push
inc
jae
add
xor
sahf
inc
les
movs
or
jmp
mov
mov
pop
push
xabort
inc
add
push
inc
add
add
cmp
push
aaa
push
call
sub
jl
xlat
jmp
clc
ss
shl
push
add
scas
cmc
sar
test
push
jl
sbb
imul
outs
jae
sub
or
(bad)
cmp
jbe
cmp
fdiv
cdq
mov
sub
mov
xor
add
mov
inc
jb
inc
push
push
xchg
retf
mov
sbb
cmp
push
adc
mov
arpl
jo
cwde
sub
add
fcomp
push
xor
push
in
pop
pop
(bad)
push
mov
fdiv
arpl
sar
rcl
or
daa
jne
shl
ins
push
and
sub
pop
mov
mov
jl
sub
int
sub
push
int
addr16
pop
push
cmp
push
fild
jne
(bad)
adc
add
ja
sbb
jmp
push
mov
and
jle
pop
bound
mov
mov
dec
mov
push
test
push
or
add
xor
sbb
cld
xchg
lock
add
les
push
pop
add
mov
push
push
cmps
outs
and
sti
add
push
outs
push
popa
add
mov
mov
adc
and
aas
push
hlt
jle
imul
jo
(bad)
mov
imul
mov
push
test
mov
xchg
xchg
inc
ins
imul
add
sbb
xchg
inc
shl
sbb
jne
fld
neg
push
adc
ds
adc
add
push
mov
mov
js
mov
rol
sub
popa
cmp
daa
lock
and
push
or
inc
mov
pusha
fs
test
pop
sbb
inc
xlat
adc
add
cmp
xor
adc
sbb
je
add
push
daa
push
pop
dec
xchg
and
das
(bad)
pusha
adc
gs
repnz
add
test
xchg
mov
cwde
loop
or
inc
outs
aam
popa
loope
lea
stos
xor
xor
pop
pop
lods
push
inc
aam
dec
pop
adc
mov
fild
sbb
cwde
addr16
pusha
mov
outs
inc
xchg
xchg
or
add
and
adc
mov
pop
add
xor
mov
mov
push
fbld
mov
cmps
mov
cmps
cmp
sub
aaa
sub
or
xor
push
mov
xor
rol
add
jecxz
pop
push
sbb
test
pushf
push
xchg
sub
pop
pop
das
imul
mov
test
xlat
loope
int
xchg
mov
adc
adc
and
fbstp
sub
popa
add
sbb
fild
and
adc
aas
cmp
xchg
mov
dec
xor
cwde
mov
pop
les
fimul
xlat
jo
jl
in
push
xor
jo
jmp
and
push
arpl
pop
mov
fxch
xor
sbb
ins
fst
xchg
pop
jge
(bad)
sbb
add
data16
ja
mov
add
add
add
sbb
jmp
dec
mov
xor
mov
mov
movzx
imul
mov
adc
or
ficom
pop
add
inc
rol
ret
stc
push
jne
inc
add
add
add
enter
jne
(bad)
into
push
call
lock
stos
pop
pop
pop
ret
mov
push
mov
sbb
std
push
push
xor
mov
adc
cld
sbb
and
mov
mov
ins
repz
fadd
lods
xor
test
dec
push
sub
cmp
dec
mov
shl
lea
inc
mov
mov
adc
fnstsw
sti
sti
and
pop
push
daa
push
out
mov
les
sbb
cdq
adc
push
and
pop
pop
inc
or
adc
les
xchg
adc
test
ret
jmp
call
ret
lea
add
rol
pop
jne
dec
xchg
rcl
inc
sar
mov
movs
jl
movs
or
cwde
shr
dec
retf
mov
push
lahf
cmp
jge
inc
add
or
stc
cs
push
mov
outs
ret
out
and
aam
mov
push
adc
push
and
out
or
or
(bad)
sub
xor
pop
popa
mov
clc
dec
mov
xor
add
fst
and
(bad)
dec
cmp
je
lea
mov
clc
sar
iret
or
sub
cwde
loop
mov
shr
inc
mov
js
dec
lock
pop
or
stos
fimul
imul
sar
call
jmp
jbe
pop
(bad)
call
sub
mov
pop
or
pop
xor
idiv
and
dec
jle
mov
jmp
mov
mov
das
js
rep
or
mov
call
ret
add
cwde
pusha
sti
or
lock
jge
outs
mov
(bad)
cmp
mov
rcr
add
lock
xchg
lea
lds
cdq
sub
sar
(bad)
mov
call
mov
stc
or
dec
jne
cmp
jbe
sbb
sti
call
xor
movs
and
mov
lods
cmp
mov
mov
or
push
jp
add
sbb
sbb
mov
or
mov
and
js
jmp
int3
ss
sub
jg
test
pop
cld
cld
test
je
cmps
dec
ins
je
icebp
sahf
mov
xlat
mov
addr16
ja
mov
(bad)
cwde
add
inc
inc
sub
stc
inc
mov
push
shl
loopne
mov
or
int3
fidivr
mov
ret
nop
inc
mov
dec
lock
sub
jp
(bad)
or
shr
rol
iret
jae
into
icebp
sub
js
and
sbb
(bad)
aas
and
add
cld
and
mov
cmp
les
and
mov
sub
mov
inc
or
push
jne
sti
push
fiadd
push
mov
(bad)
jmp
push
inc
test
cmp
and
or
jg
out
mov
bound
mov
out
cmp
test
scas
mov
mov
call
jmp
push
pop
or
jl
inc
xor
sbb
popf
push
mov
adc
dec
jne
pop
(bad)
mov
dec
mov
test
mov
loop
(bad)
fwait
sub
push
add
sub
and
stos
sbb
push
sbb
add
inc
push
inc
je
out
test
das
or
cmp
cli
ror
mov
js
xchg
and
sbb
stos
sbb
xor
jg
sub
in
adc
inc
dec
inc
cmp
out
ret
or
je
outs
ins
imul
in
add
ror
push
fcmove
or
outs
ja
lock
xchg
pop
xchg
sub
pop
or
push
enter
pushf
dec
in
sub
shl
test
or
jbe
lds
mov
mov
push
(bad)
fistp
pop
cmp
mov
rcl
je
jle
add
call
scas
rcl
or
test
add
popa
pusha
and
pop
popf
sbb
leave
or
dec
pop
or
push
sbb
adc
sub
push
or
push
xchg
sbb
push
loopne
loope
inc
add
mov
jo
pop
jae
xchg
sub
fdiv
add
or
in
imul
es
das
xchg
push
inc
sbb
shl
mov
scas
pop
lock
popa
mov
mov
outs
clc
mov
push
ret
xchg
shl
js
dec
push
imul
outs
das
push
das
sbb
xchg
push
call
push
dec
imul
fistp
imul
push
xchg
sahf
mov
loopne
mov
mov
inc
push
cdq
push
jb
adc
cmp
mov
lds
push
or
and
cdq
or
xor
pop
pop
sub
push
and
mov
ret
call
or
cmp
and
test
fs
or
push
add
push
push
sbb
or
pop
push
pop
cdq
mov
bound
or
push
add
stos
pop
sub
add
mov
inc
in
xor
adc
push
or
xor
inc
or
ret
lahf
shr
outs
and
aas
rcr
and
push
mov
and
aam
adc
popf
outs
rol
or
outs
test
outs
xchg
xchg
lods
adc
push
loopne
lock
jns
(bad)
clc
jge
mov
fcomp
pop
jl
movs
hlt
cmc
push
mov
ja
std
adc
sbb
retf
jl
jle
nop
xor
push
jge
jne
ja
(bad)
cmp
mov
push
or
inc
and
outs
xor
mov
adc
sbb
inc
or
adc
xchg
xchg
stos
in
mov
add
push
inc
hlt
adc
in
xor
ja
pop
xchg
jl
icebp
mov
xor
push
push
mov
lock
xor
(bad)
jle
inc
xchg
fs
(bad)
sbb
cmp
clc
mov
loope
js
jae
jmp
and
xor
dec
hlt
or
sbb
adc
idiv
add
dec
pop
dec
aam
inc
cld
movzx
mov
imul
sbb
shl
enter
call
clc
imul
inc
int
inc
hlt
sbb
sub
push
pop
push
adc
pop
mov
aam
hlt
clc
mov
xchg
dec
js
and
js
fist
cmps
xchg
push
push
dec
jns
jmp
ja
in
out
push
xor
and
(bad)
mov
sub
shl
ret
mov
(bad)
jecxz
mov
xchg
mov
hlt
pop
daa
cli
dec
cmps
clc
not
fisttp
cmp
jne
adc
ins
fwait
lock
pop
push
les
pop
js
sbb
pop
(bad)
mov
dec
mov
dec
or
adc
or
pusha
mov
dec
pusha
inc
inc
or
jp
dec
jl
jne
loop
fist
je
pop
sbb
dec
retf
push
push
int3
clc
and
mov
inc
sub
in
cli
jle
cdq
xchg
shr
call
cmpleps
inc
xchg
xchg
aam
std
sahf
fldpi
push
scas
dec
mov
and
(bad)
in
pop
sub
push
es
cli
add
add
add
adc
or
fisubr
(bad)
mov
and
adc
cdq
fxch
cmp
dec
cs
push
push
in
push
rol
sar
data16
or
mov
cmc
cdq
xor
sub
push
xor
scas
clc
xchg
pop
sbb
hlt
pmulhuw
adc
or
movs
inc
fldpi
pop
data16
jb
icebp
jne
pop
aaa
les
jl
retf
cs
js
push
test
shl
jg
adc
lods
lds
mov
mov
fucom
push
ret
and
retf
xchg
shl
daa
dec
xchg
pop
test
jne
adc
xchg
sub
lahf
and
mov
test
cmp
sbb
inc
data16
sbb
(bad)
jae
add
add
(bad)
aas
call
out
idiv
inc
data16
inc
dec
mov
push
jae
inc
stos
inc
push
xchg
mov
popa
xchg
dec
je
inc
push
cmc
cmp
data16
sbb
xor
or
lock
mov
pop
aaa
dec
adc
cmp
mov
push
pop
add
pusha
mov
sahf
ds
push
push
xor
sub
into
sbb
jp
push
xchg
dec
mov
push
cmp
mov
je
(bad)
xor
push
jle
mov
add
cmps
push
sub
add
push
cwde
call
scas
mov
xchg
push
lods
xor
popa
xlat
xchg
and
and
dec
pusha
popf
jp
xor
shl
or
push
mov
(bad)
mov
adc
push
mov
test
pop
test
or
mov
in
add
out
add
sub
fwait
or
mov
mov
sbb
pop
mov
mov
pop
mov
scas
iret
pusha
mov
retf
cmp
(bad)
push
inc
pop
hlt
rol
xor
out
ja
in
mov
jmp
push
xor
push
mov
pop
push
retf
dec
and
adc
rol
lea
add
xchg
cmps
sar
adc
xor
pop
pop
add
push
xcrypt-ecb
cmps
mov
dec
xchg
fcmovnb
sbb
xchg
cmp
adc
ror
popa
ret
inc
add
adc
xor
xchg
or
aaa
neg
mov
leave
pusha
popa
jg
je
jp
cmp
jne
neg
push
xchg
div
cmp
or
ficom
push
mov
add
jmp
call
sbb
add
ret
ror
les
jb
shl
cmp
mov
adc
push
mov
pusha
shl
jg
or
imul
sub
mov
and
loop
mov
loop
adc
inc
adc
into
imul
mov
loopne
mov
push
in
mov
pop
add
dec
and
test
ficom
into
xor
call
ins
and
ins
sub
sbb
push
add
or
imul
pop
(bad)
lock
xor
hlt
push
pushf
fwait
icebp
es
adc
push
adc
stos
gs
xchg
and
popa
or
push
add
inc
sub
and
repnz
jae
je
push
sbb
jmp
outs
cmp
sti
outs
rol
aad
fs
pop
push
sub
or
js
push
jnp
adc
xor
pop
or
push
leave
and
int3
pop
pop
test
rcr
jl
loope
mov
or
xor
mov
inc
int
dec
add
out
cmp
push
push
scas
out
mov
cmp
xchg
scas
inc
(bad)
mul
ret
(bad)
loopne
out
paddsw
sbb
push
sbb
les
pusha
cmc
pop
sbb
push
rol
(bad)
(bad)
test
adc
dec
cmp
mov
repnz
and
sbb
outs
and
jne
arpl
ins
and
imul
mov
or
je
xor
jmp
xor
mov
or
outs
ja
mov
lea
mov
movmskps
jbe
push
push
cmp
dec
xor
mov
and
cmp
movzx
sbb
inc
fisttp
(bad)
pushf
pop
push
inc
jle
fs
mov
bound
push
mov
rcr
lds
shl
repz
lea
xor
dec
inc
xchg
xchg
jae
adc
xchg
or
and
mov
or
cmp
xor
(bad)
in
mov
cmps
mov
mov
mov
fisttp
fs
sub
push
lods
lds
cmps
scas
jns
retf
mov
mov
xor
mov
or
daa
inc
and
cmps
and
daa
inc
push
(bad)
cmps
std
ja
daa
add
popa
popa
ja
add
popa
daa
or
daa
pushf
ret
push
cmc
mov
daa
jmp
or
add
jecxz
arpl
inc
out
(bad)
jae
jno
ret
fsub
adc
jno
mov
and
dec
jno
or
rol
jno
jo
ret
pop
and
popf
sub
jle
lods
push
pop
stos
sub
imul
scas
push
ret
push
push
(bad)
push
xlat
imul
imul
imul
push
push
or
xor
inc
xchg
inc
(bad)
push
mov
stos
repnz
push
in
xor
xchg
push
push
dec
push
fist
and
mov
jo
inc
mov
add
es
inc
inc
mov
rcr
pop
popf
fistp
data16
dec
cwde
fadd
js
lods
lock
sbb
andps
xchg
mov
jne
imul
fbld
sub
mov
push
jg
mov
or
or
pop
xchg
dec
int3
pop
fs
pop
and
fs
into
add
imul
xchg
addr16
enter
and
pop
jg
push
add
mov
pop
mov
mov
pop
jo
jle
xor
pop
mov
adc
pop
xor
jne
dec
popa
dec
jne
das
addr16
sbb
jo
aam
pop
sbb
xor
mov
je
pop
xor
mov
sahf
cmp
pminub
mov
not
fcomp
mov
add
(bad)
sbb
mov
movntq
adc
xor
test
adc
sub
mov
or
test
test
dec
and
adc
jl
fwait
push
pop
fisub
and
ss
push
adc
jo
imul
pop
lock
stos
and
(bad)
cmp
push
outs
push
cmovbe
inc
(bad)
js
ficom
fsub
gs
jb
xchg
inc
call
shl
imul
lea
sbb
jnp
bound
jnp
cmp
jnp
inc
and
and
or
test
add
lahf
pop
mov
mov
icebp
xor
mov
mov
mov
jno
rol
or
test
imul
sahf
ffree
or
mov
test
cmp
mov
mov
xor
inc
cs
xchg
and
fisttp
jno
inc
loop
movs
dec
hlt
cmp
jb
ss
mov
or
dec
push
sub
pushf
push
dec
lea
call
mov
xor
cwde
xor
or
xchg
fs
sbb
loope
addr16
aam
fistp
or
inc
fiadd
mov
aam
jge
mov
test
add
add
(bad)
jne
ins
pop
add
add
fsubr
push
iret
ds
add
push
or
push
and
or
pusha
push
push
mov
or
mov
cld
dec
(bad)
mov
cs
mov
neg
ror
fwait
mov
or
and
dec
getsec
add
aad
jbe
nop
mov
sbb
clc
arpl
xor
scas
add
out
and
inc
xor
adc
mov
cmps
mov
neg
neg
sbb
adc
sbb
and
repnz
clc
std
dec
mov
push
xor
jge
or
loope
inc
or
fiadd
(bad)
out
fisubr
sub
inc
or
icebp
add
test
fs
jae
mov
jg
adc
adc
xchg
adc
inc
pop
(bad)
jne
adc
and
ret
fidiv
rol
sar
mov
clc
add
sar
cmc
addr16
sahf
pop
jmp
cmp
add
mov
lahf
mov
cmp
mov
pop
mov
sbb
fsub
mov
and
(bad)
mov
adc
int3
mov
push
push
imul
loope
mov
push
add
je
cmp
mov
sbb
mov
mov
mov
xor
rcr
loope
jbe
pop
xchg
std
scas
daa
mov
jp
int3
cmp
xchg
scas
xor
cdq
mov
push
and
push
xor
mov
or
scas
daa
mov
jp
xor
lock
mov
xor
mov
scas
dec
scas
and
add
jecxz
jnp
jne
or
and
cdq
jge
or
add
adc
stos
xor
inc
pusha
mov
ret
sbb
mov
adc
pop
fadd
(bad)
cmp
cmp
clc
jmp
cmp
adc
dec
xor
pop
in
pop
push
popa
cs
test
(bad)
pop
ret
pop
fs
jo
lods
loopne
xor
pop
out
xor
jbe
xor
push
sub
enter
inc
nop
(bad)
pop
ss
ss
addr16
inc
daa
out
and
sbb
pop
in
lods
sub
mov
xor
xor
xor
xchg
sub
pop
xchg
pop
sub
xchg
and
or
xchg
sar
or
xchg
out
and
adc
dec
push
add
jbe
pop
sub
sub
test
sub
adc
push
push
pop
test
sub
sub
add
cmp
push
mov
daa
sub
push
fwait
adc
shl
dec
adc
js
and
cmp
or
hlt
mov
sub
stc
sar
push
xlat
pop
push
ret
(bad)
cdq
idiv
or
popa
sbb
imul
or
mov
mov
mov
inc
clc
mov
clc
add
push
clc
mov
lahf
fld
or
les
adc
in
sub
jnp
movs
cmp
hlt
js
dec
in
hlt
adc
sahf
add
fwait
clc
mov
pop
mov
outs
sbb
mov
lock
mov
dec
xchg
in
ja
add
mov
cmp
rcl
jge
iret
popf
adc
mov
sub
dec
in
loopne
xchg
hlt
dec
xchg
or
inc
and
jg
inc
or
or
xor
ja
ja
cmp
mov
jmp
sub
mov
mov
mov
rol
mov
mov
jae
xor
mov
xor
out
inc
xor
sti
jp
leave
and
inc
(bad)
or
pop
pop
sub
lds
data16
and
std
push
ja
retf
and
mov
sub
ins
test
mov
sbb
aas
cmp
inc
nop
ret
cmp
sbb
sbb
(bad)
ret
mov
sub
dec
inc
sbb
arpl
mov
push
xor
rcr
and
and
and
sub
add
mov
ror
push
int
or
int3
pusha
fnstenv
in
(bad)
cmp
xor
rol
loopne
sbb
inc
push
mov
test
xchg
sub
(bad)
outs
pop
call
das
mov
push
cld
mov
and
xchg
aaa
fild
sbb
adc
ficom
fld
mov
addr16
adc
xchg
dec
or
mov
sbb
mov
mov
sbb
inc
ja
enter
add
push
inc
mov
mov
xchg
and
jl
es
push
je
lea
imul
js
inc
mov
outs
or
adc
add
ja
add
and
add
and
and
sbb
clc
pop
lea
mov
add
sub
loopne
adc
push
bound
mov
adc
xchg
or
(bad)
sub
or
(bad)
sub
sub
or
sub
(bad)
sub
or
(bad)
sub
sub
or
sub
push
push
sub
test
adc
imul
push
daa
adc
adc
xor
or
adc
adc
pop
adc
mov
clc
mov
dec
aam
leave
(bad)
push
cmc
rol
jbe
mov
add
add
sbb
call
call
and
mov
es
push
push
nop
mov
jbe
imul
pop
pop
fwait
mov
shl
call
(bad)
sbb
cdq
pushf
push
imul
hlt
outs
cmps
push
jo
add
shl
add
adc
adc
add
mov
sub
retf
push
pop
scas
fs
xor
ror
jge
jl
test
(bad)
mov
ja
mov
ja
ret
mov
inc
cmp
jns
or
add
out
outs
out
test
add
and
sbb
dec
pusha
cbw
loop
into
mov
jb
cli
fwait
mov
pushf
int3
mov
or
fcom
mov
nop
and
test
mov
pop
imul
jns
imul
fsub
lock
sbb
jo
add
mov
paddusb
mov
jp
add
js
js
movlps
adc
adc
xor
js
daa
adc
and
repz
cdq
inc
out
adc
mov
add
js
test
test
enter
test
test
xchg
test
test
sbb
enter
scas
xchg
pop
hlt
ss
sbb
inc
mov
push
arpl
xor
inc
mov
scas
scas
(bad)
in
sbb
pop
and
sbb
lock
pop
lods
fbld
sbb
mov
mul
cs
das
lahf
or
lahf
mov
inc
lahf
sbb
out
adc
jno
mov
push
loop
cs
sbb
lahf
call
cmc
lahf
sbb
call
sbb
out
dec
push
out
sub
out
dec
push
mov
sbb
mov
push
shr
jecxz
leave
push
jecxz
cmp
rcl
outs
test
fst
lods
sbb
loope
and
arpl
sbb
stos
and
mov
mov
or
jno
inc
jmp
push
fcomp
ins
add
(bad)
pop
fcomp
pop
xor
xor
pop
fcomp
(bad)
xor
sbb
(bad)
xor
or
sbb
(bad)
xor
cmp
sbb
cmp
pop
inc
adc
push
jmp
add
cmp
adc
retf
sbb
pop
sub
or
add
sub
sub
adc
dec
je
nop
pop
or
icebp
inc
ret
cld
test
je
add
mov
mov
mov
mov
jno
mov
jmp
mov
cmp
add
push
dec
daa
or
aaa
jp
fld
int3
adc
fbld
add
sar
xor
jbe
(bad)
(bad)
test
(bad)
cmp
dec
add
inc
sub
add
nop
inc
lea
(bad)
jbe
add
and
sti
jbe
mov
sub
lahf
nop
icebp
test
or
or
or
outs
lea
add
icebp
ins
mov
cld
fidivr
adc
pop
mov
push
mov
dec
adc
mov
jmp
pop
test
test
jb
and
sub
test
and
push
test
test
out
push
mov
pop
and
(bad)
movs
sbb
push
std
pop
dec
sbb
ffreep
sub
xor
mov
jne
push
fild
inc
das
fnstsw
and
pop
ficomp
xlat
and
pop
and
add
aad
add
stc
add
add
fs
imul
cli
dec
outs
fs
cmp
xor
cmp
shr
adc
add
in
dec
add
xor
lahf
aaa
(bad)
jbe
das
mov
inc
cwde
push
or
js
cmp
cmps
push
int3
and
cmp
imul
ja
add
cmps
mov
fstp
pop
ret
adc
dec
jae
gs
pushw
add
or
push
imul
outs
je
or
add
test
movs
(bad)
enter
inc
jb
outs
daa
adc
inc
ins
jne
and
cdq
sbb
dec
gs
ins
jp
push
(bad)
mov
push
retf
cwde
mov
dec
xchg
push
clc
push
dec
add
je
das
fcmovnb
fcomi
add
sbb
je
add
add
jae
lods
push
inc
push
repz
lods
mov
push
sbb
in
das
jp
outs
jb
imul
push
pusha
jo
test
test
inc
or
daa
dec
pop
inc
sbb
mov
or
out
add
adc
pop
sbb
pop
pop
std
call
cmp
pop
and
cs
ins
popa
imul
rcr
scas
adc
lea
les
in
push
ret
jecxz
pop
push
cmp
nop
sub
popa
mov
inc
push
xor
das
and
shl
or
xchg
popa
maxps
js
sub
sbb
sbb
ja
lds
fisttp
inc
push
mov
shl
popa
in
jp
jb
cmp
sbb
add
or
add
test
push
lahf
or
add
jmp
jg
rcl
inc
add
inc
xchg
into
pop
add
xor
dec
(bad)
sti
or
inc
inc
bound
jb
jns
add
pop
cdq
fnsave
nop
add
test
add
sub
pop
pop
or
and
ror
mov
adc
fisttp
cwde
sbb
add
sti
(bad)
sti
or
cmp
sete
mov
jb
sbb
add
movups
add
inc
jns
imul
xor
pavgb
mov
sbb
push
les
pop
sub
pop
sub
inc
pusha
inc
adc
pop
cmp
mov
jbe
lods
inc
mov
enter
sti
cmp
add
test
push
add
(bad)
xchg
cld
aas
sbb
mov
push
mov
mov
xchg
pop
pop
ins
call
pop
(bad)
fidivr
adc
inc
adc
inc
lahf
inc
adc
jmp
pop
inc
ins
out
add
inc
adc
mov
hlt
inc
push
mov
inc
outs
adc
jo
sbb
in
sbb
jno
add
push
sti
adc
shr
xchg
mov
(bad)
jle
dec
sbb
stc
inc
shr
call
xchg
sbb
ret
push
or
push
(bad)
loop
sbb
push
inc
push
dec
adc
push
adc
(bad)
loopne
je
aad
imul
outs
xor
daa
mov
mov
mov
xchg
lods
inc
loop
or
(bad)
cmp
dec
les
in
push
or
inc
xchg
pop
dec
adc
inc
add
cld
fwait
test
push
cld
lea
mov
fwait
jbe
pop
mov
mov
lock
adc
jle
pop
sti
movs
imul
or
add
jbe
jmp
inc
bound
and
loopne
sub
je
jne
rol
lds
int3
(bad)
xor
cmp
neg
mov
add
jle
cmp
sbb
mov
mov
dec
adc
push
sbb
stos
lds
lock
add
enter
jnp
add
or
in
add
pop
or
nop
cmp
adc
pusha
repz
add
dec
mov
mov
xchg
mov
in
xchg
or
dec
loop
add
add
xchg
iret
adc
in
pop
mov
and
xor
sub
push
mov
push
call
jmp
call
(bad)
sti
and
push
xor
pop
or
inc
sub
stos
iret
test
fcomp
pop
add
push
call
ins
dec
(bad)
inc
xlat
xor
test
or
xchg
add
in
add
push
add
arpl
jae
adc
mov
in
in
lock
xchg
or
add
cmp
cmps
pop
popf
and
add
and
arpl
sub
mov
ja
mov
add
inc
push
adc
push
sbb
and
dec
jl
inc
or
mov
ret
push
inc
push
adc
sbb
sbb
push
test
hlt
jl
or
out
adc
dec
std
div
add
push
out
jae
call
jne
dec
dec
xchg
jne
xor
out
xchg
inc
inc
aaa
daa
outs
inc
xchg
fsubr
leave
je
cmp
push
loop
fisub
push
push
xchg
push
sbb
sub
mov
add
data16
jmp
and
ins
fiadd
je
(bad)
sub
mov
test
shr
ror
pop
add
outs
ficomp
or
push
add
push
pop
dec
mov
jg
les
pop
sub
(bad)
push
clc
cs
fwait
or
add
cmp
cmp
cmp
(bad)
xchg
adc
xor
jp
push
retf
xor
push
push
pop
cli
in
push
push
mov
cmp
jno
push
out
sbb
test
pop
add
jle
hlt
out
adc
push
sub
ret
jmp
lock
push
bound
fstp
mov
mov
adc
inc
mov
lock
or
mov
lock
ret
add
cld
add
add
cmp
es
xlat
pop
mov
or
or
cmps
jns
inc
add
add
out
inc
call
xchg
sbb
add
sub
dec
ror
mov
ja
push
in
aad
in
mov
mov
or
js
bound
xchg
test
and
jg
dec
ret
out
pusha
xor
sti
movs
pop
iret
xchg
in
and
mov
or
sbb
imul
inc
pop
xchg
pop
xor
xchg
(bad)
fild
(bad)
rcr
and
or
xchg
jb
and
pop
mov
cmp
into
leave
jae
popf
xchg
mov
jecxz
xchg
mov
test
pushf
jmp
adc
cmp
fcmovb
fist
push
js
jmp
sbb
mov
jne
lea
mov
neg
loopne
(bad)
clc
xor
mov
mov
jne
inc
clc
add
jmp
pusha
in
lahf
push
cmp
and
lea
mov
adc
jmp
sub
enter
jmp
and
adc
pushf
ret
loop
lods
cmp
adc
test
(bad)
cwde
test
clc
xchg
cdq
ins
fs
movnti
and
jno
outs
repz
inc
call
ret
cmps
stc
cmp
shl
repz
adc
mov
add
ret
push
aam
stc
cmp
repz
in
mov
sub
mov
adc
push
add
mov
stc
adc
sbb
inc
inc
out
rol
pop
movs
or
and
dec
sahf
push
jo
xor
arpl
jg
mov
inc
ret
test
and
push
push
or
aam
ret
aaa
mov
loopne
dec
inc
mul
call
and
scas
lock
mov
addr16
in
nop
test
mov
retf
xchg
ins
dec
xor
stc
sub
jae
cmp
sete
push
inc
or
push
add
push
clc
shl
mov
fisubr
dec
add
or
fcomp
add
mov
(bad)
hlt
adc
(bad)
lea
hlt
pop
jne
sub
call
mov
add
push
cmp
push
pop
add
adc
add
push
push
xor
je
jb
call
int
xor
inc
add
cmp
ds
movs
shl
fisttp
lock
aam
pop
or
pop
dec
dec
push
jo
add
jmp
mov
ror
rol
push
mov
ret
push
mov
shl
call
mov
inc
mov
add
add
sti
or
adc
sbb
cmps
push
jmp
popa
jno
add
lahf
scas
xor
add
mov
jle
mov
xchg
xchg
into
sub
call
out
sub
sbb
fidiv
cmp
(bad)
out
jmp
and
inc
pop
or
test
and
(bad)
loopne
inc
or
add
jl
cmps
inc
or
inc
or
(bad)
push
lods
add
(bad)
jmp
xor
xlat
dec
cmps
and
dec
or
sbb
and
aas
or
xor
cwde
adc
test
shl
(bad)
xor
inc
inc
cmp
shr
and
in
enter
adc
add
xor
mov
cli
push
or
loop
or
adc
popf
push
loop
adc
lea
mov
or
fimul
shr
dec
jmp
mov
push
(bad)
mov
test
push
fimul
aam
cli
imul
jg
pop
lahf
(bad)
jle
mov
icebp
mov
dec
retf
loop
test
test
int3
jbe
xchg
and
pop
int3
push
add
cmp
or
mov
lea
dec
xchg
adc
cmp
jne
push
dec
add
dec
adc
pop
fadd
push
sbb
cmp
or
jl
or
jmp
mov
sbb
push
jge
imul
push
das
inc
add
(bad)
add
inc
call
jge
cmp
jg
mov
dec
jmp
push
and
sbb
mov
add
sub
cmp
or
mov
ja
xor
inc
iret
rcr
xchg
push
push
push
add
clc
sub
cmp
loop
out
pop
mov
outs
mov
mov
adc
jp
cmp
mov
add
dec
sub
push
mov
sub
retf
mov
and
push
mov
dec
inc
dec
add
lock
pushf
mov
(bad)
bound
not
mov
pop
cmp
mov
ret
rcr
test
push
mov
cmps
shl
or
dec
cmp
jge
adc
sub
leave
sbb
mov
es
mov
add
jno
adc
cmp
fldcw
sbb
pop
pop
fistp
sub
add
ret
test
jl
hlt
pop
pop
xlat
lock
test
lock
jecxz
lods
mov
aas
jno
sub
push
mov
push
inc
or
pop
jmp
adc
mov
or
jg
push
add
cli
dec
test
jl
inc
push
cs
lds
inc
and
ret
or
ds
fidiv
fimul
ror
aas
pop
pop
jmp
fcmovb
add
jne
movs
add
inc
stos
fdiv
aas
neg
rcr
push
dec
hlt
cmp
adc
jnp
sahf
and
mov
pop
add
(bad)
sahf
mov
shl
push
sub
fsubr
icebp
jl
fsubp
clc
pop
fsub
sub
or
mov
mov
loop
lods
enter
add
and
test
cmp
sbb
pusha
aas
lods
movs
mov
cmp
in
pop
xor
lods
cwde
or
push
add
mov
jbe
call
add
xchg
or
bnd
push
sahf
enter
ss
push
js
add
sub
pop
loop
pop
pop
push
or
imul
add
inc
mul
in
sbb
fdivr
adc
xor
push
or
add
jno
lock
clc
mov
add
loopne
sbb
xchg
loope
stos
mov
jge
test
sub
adc
sub
push
jg
mov
sub
pop
stc
inc
inc
or
cmp
leave
ins
push
clc
cli
push
push
mov
pusha
frstor
push
dec
je
loopne
mov
or
or
bound
mov
adc
jnp
sbb
ins
mov
outs
push
dec
es
jbe
stos
jbe
shl
pop
add
call
inc
frstor
mov
add
test
sbb
(bad)
pop
fimul
and
lock
cmp
xchg
out
repz
and
ret
pop
jg
out
inc
dec
cmp
mov
cmovae
icebp
call
pop
clc
jl
jns
inc
out
rcr
in
test
bnd
jge
mov
and
arpl
fidivr
mov
add
sbb
fstp
add
adc
lahf
popa
jno
std
adc
repnz
dec
cmp
cld
push
fwait
jmp
cmc
jmp
movs
pop
enter
mov
mov
pop
push
(bad)
lock
div
push
mov
jbe
jo
daa
cmps
dec
jmp
scas
sbb
push
dec
push
in
popa
in
sub
push
or
sub
mov
push
or
sub
mov
icebp
sub
sbb
push
mov
dec
lock
cmp
push
cmp
xor
push
add
or
test
cmovae
sahf
lea
inc
mov
loop
jb
and
ret
push
push
das
shl
xlat
jns
jo
push
test
pop
mov
int3
push
cli
lea
lods
xchg
mov
out
jmp
pop
jbe
clc
or
add
sti
jmp
push
add
jo
sbb
sti
fidiv
shl
mov
imul
adc
scas
adc
inc
dec
add
or
gs
fs
push
in
dec
pop
(bad)
pop
enter
add
add
out
aam
push
pusha
inc
ins
outs
bound
add
pop
add
dec
popa
jo
loop
cmp
push
mov
mov
or
push
leave
dec
inc
dec
ror
sub
or
je
ins
les
xchg
pop
inc
mov
lods
cmp
pop
inc
push
fs
dec
add
popa
adc
iret
mov
sbb
adc
stc
cmps
xor
mov
stos
sbb
pop
dec
loopne
mov
adc
add
(bad)
xchg
jbe
jmp
lock
call
and
sbb
inc
dec
push
and
mov
mov
inc
mov
inc
xor
mov
ror
dec
jne
mov
lea
push
mov
jle
enter
mov
outs
add
sub
sub
cs
in
push
sti
push
mov
sub
mov
sub
inc
sub
scas
call
cmp
jbe
cmps
adc
stos
inc
inc
sbb
icebp
inc
cmp
jno
popa
iret
push
push
les
imul
in
aad
xor
sub
int3
ret
xlat
push
lock
inc
push
or
and
push
sub
sahf
imul
ficom
cwde
jno
cwde
dec
or
or
mov
jbe
push
dec
out
jmp
loope
mov
push
push
jl
shr
rcr
ins
add
xlat
inc
pop
inc
test
push
repnz
add
icebp
(bad)
jle
xor
add
mov
jp
shl
data16
xchg
pop
adc
and
fdivr
add
mov
sbb
das
out
sub
out
jne
xor
sub
ja
push
push
or
aam
mov
add
mov
push
js
dec
add
jo
pop
adc
mov
push
add
mov
mov
mov
or
pushw
or
inc
push
mov
lods
add
push
jmp
addr16
sub
pusha
adc
and
inc
or
sub
pop
mov
outs
push
sbb
and
jle
mov
cmp
addr16
les
or
jae
in
shl
jo
add
ja
loopne
loopne
and
push
mov
sbb
lock
xchg
add
inc
mov
ror
jae
test
unpckhps
mov
std
in
xchg
pop
mov
pop
jl
mov
fild
mov
xor
fwait
inc
xor
mov
cld
cdq
pop
pop
inc
mov
xchg
imul
push
sub
or
push
mov
jle
cmp
or
ret
and
aad
xor
add
add
cli
rcl
iret
in
adc
sub
xchg
and
nop
cwde
not
jno
add
jmp
or
jg
xchg
clc
je
jb
push
retf
push
jmp
jb
jb
inc
cmp
call
push
enter
and
mov
aas
mov
fs
push
bound
fwait
sbb
push
cmp
push
loop
cli
cmp
mov
and
mov
inc
jl
and
je
xchg
xchg
outs
fs
cdq
shl
xchg
loop
jmp
stos
dec
or
sbb
stc
ds
loopne
ja
or
sbb
push
lea
mov
pusha
data16
add
daa
cmps
aaa
retf
or
cmp
fsub
icebp
je
mov
(bad)
jg
cmp
test
cmps
sbb
mov
add
jb
xchg
mov
xor
push
bnd
(bad)
imul
and
clc
cli
add
gs
cmp
jg
bound
mov
pop
aad
fstp
xor
and
cmps
mov
xlat
loopne
add
push
das
jmp
sbb
adc
loope
scas
sbb
es
das
mov
cmps
jge
jne
call
push
loope
jbe
mov
add
jg
push
inc
inc
jb
ins
gs
jmp
push
in
sub
pushf
dec
outs
arpl
add
ss
cs
or
inc
(bad)
push
pop
or
ficom
fcmovnb
loopne
shr
jl
ins
je
dec
outs
pop
jno
and
les
jo
out
inc
or
add
sbb
mov
ins
pop
outs
xchg
sub
sbb
mov
ins
adc
pop
loopne
add
pop
or
adc
xor
lea
mov
xor
mov
inc
and
fdivr
icebp
jbe
pushf
add
add
inc
adc
cmc
add
loop
inc
xchg
dec
enter
push
retf
sar
shl
pusha
or
dec
or
mov
inc
sbb
sbb
or
pop
js
mov
test
sbb
aam
mov
and
and
push
xchg
jns
mov
and
pushf
mov
test
mov
push
call
push
lods
loope
sahf
mov
push
adc
push
dec
or
xor
es
daa
inc
(bad)
aaa
ja
or
inc
dec
outs
push
popa
jb
sahf
popa
das
push
aam
mov
in
stos
sub
sbb
ror
aam
push
or
leave
and
or
addr16
mov
jae
gs
loopne
enter
stos
or
loope
(bad)
and
imul
arpl
xchg
mov
movsx
int
adc
jge
pop
inc
or
pop
lods
lock
pop
out
push
cmp
rcl
and
adc
or
out
stos
xor
add
movs
inc
repz
(bad)
dec
js
loopne
dec
out
dec
pop
clc
xchg
movaps
add
xchg
fistp
es
sbb
push
arpl
sbb
ja
aas
mov
jbe
scas
xchg
push
in
mov
movs
or
mov
push
pop
mov
cmp
inc
xor
les
pop
or
or
call
push
inc
jne
popw
ror
aas
and
je
mov
pushf
mov
and
push
mov
out
sbb
inc
outs
jne
je
xor
inc
inc
dec
inc
pop
loopne
or
rcr
int3
dec
sbb
push
inc
push
pop
push
dec
int3
out
mov
push
jnp
add
fdiv
push
loopne
sti
or
or
or
repz
shl
xor
sbb
or
push
add
inc
or
jns
xchg
or
jl
imul
dec
inc
cmps
add
cmp
jecxz
(bad)
or
push
cdq
dec
or
aaa
inc
sub
fild
push
shl
pop
test
mov
fsub
pushf
xchg
push
je
jmp
cmp
icebp
mov
(bad)
das
test
mov
into
imul
mov
xor
push
inc
imul
pop
js
lock
add
mov
cmp
push
xchg
cwde
xlat
push
movs
jo
into
add
xor
and
pop
add
mul
and
add
push
lods
rol
js
je
push
inc
pusha
xor
add
pop
jo
inc
pusha
adc
jnp
adc
inc
jne
cmps
jnp
pop
add
mov
jne
or
outs
and
xor
mov
pusha
add
ror
xor
outs
sub
aaa
sub
add
sub
add
lock
and
xor
mov
mov
and
or
jp
je
mov
sar
je
xor
jne
inc
adc
adc
or
lods
xor
add
mov
pop
movs
sbb
pop
pop
and
(bad)
jle
in
or
sbb
pop
pop
jbe
jmp
pop
repnz
or
xor
mov
add
mov
or
xlat
and
dec
add
jmp
mov
dec
xchg
inc
pushf
xchg
ss
cmp
jle
out
or
pusha
add
hlt
push
rcr
je
pop
loopne
pop
je
pusha
je
push
inc
scas
or
add
mov
inc
out
mov
jle
jb
adc
inc
jl
je
push
ror
addr16
stos
add
into
adc
aaa
jl
jle
mov
in
jle
cmp
jge
mov
jmp
mov
mov
les
jae
add
sub
add
jmp
fbld
not
or
sti
in
cmp
jp
loopne
loope
sbb
aas
pushf
lmsw
test
cmp
aas
sbb
fsub
inc
loopne
and
test
pusha
add
outs
dec
dec
gs
ins
jne
push
xor
push
std
sbb
xlat
add
call
das
ror
ss
sub
cwde
sub
sar
shr
add
jecxz
rol
dec
add
cmp
or
(bad)
outs
cmps
pop
add
inc
sub
or
sbb
sbb
out
rol
out
inc
movs
pop
sub
gs
or
cmp
xchg
test
arpl
mov
mov
xlat
mov
mov
dec
lea
mov
pop
xchg
ret
out
xor
dec
pop
das
lock
cmp
jo
mov
cmp
sub
sub
cmp
jge
fisttp
in
xchg
xchg
push
mov
aaa
pop
adc
sahf
xchg
leave
in
ficom
jno
or
cmp
jmp
push
push
fimul
xchg
add
pop
sub
mov
call
das
sbb
add
popa
cmps
xchg
push
or
hlt
adc
test
push
aaa
ja
mov
test
arpl
inc
and
sbb
inc
icebp
fidiv
dec
popa
mov
sbb
daa
mov
aad
lds
call
ins
jmp
push
mov
cmovbe
jo
jmp
into
xchg
push
dec
ja
int
pop
int
inc
aam
adc
jle
mov
mov
sub
adc
and
xchg
dec
and
add
inc
ins
mov
pop
mov
mov
sub
dec
outs
xor
sbb
movs
call
jg
pop
mov
mov
mov
dec
movs
ret
fild
adc
or
test
call
sbb
call
or
mov
das
mov
iret
mov
test
or
mov
addr16
ret
inc
fisttp
push
in
aaa
sub
(bad)
test
lds
mov
mov
sub
and
pusha
(bad)
pusha
cld
add
(bad)
jmp
xor
lods
pushf
inc
add
xchg
dec
sbb
mov
mov
stos
and
rol
inc
iret
pusha
into
pushf
dec
fucomip
imul
push
addr16
rol
sub
jl
clc
clc
out
xchg
pop
sti
nop
mov
js
jmp
add
lods
movs
add
sar
ret
lock
mov
add
clc
jne
dec
adc
xor
or
jne
fcomp
and
jns
dec
or
mov
jmp
jl
iret
cmp
xchg
push
adc
clc
shr
and
aas
sbb
mov
(bad)
rol
and
test
les
(bad)
sti
movs
and
les
test
pusha
cmp
(bad)
sbb
pop
fs
cld
cmp
jbe
xchg
mov
jnp
and
sbb
pop
ja
adc
pop
sbb
out
aas
jge
add
adc
add
pop
xor
and
push
adc
jg
mov
inc
mov
pop
mov
add
or
pushf
add
cmps
and
mov
pop
or
adc
lahf
push
or
inc
fcom
mov
mov
outs
stc
mov
push
mov
sbb
sbb
adc
lock
adc
scas
test
in
enter
(bad)
lahf
push
jne
scas
sti
sar
xor
mov
jne
inc
lods
add
add
pop
inc
(bad)
cmp
dec
dec
lock
or
data16
ret
add
sub
and
pop
mov
sub
mov
or
xlat
mov
stos
sub
inc
lock
inc
mov
or
adc
iret
push
daa
in
sub
je
lods
pop
adc
aas
fsubr
adc
cmp
ret
daa
ja
dec
fdiv
xor
aam
jne
into
and
lea
ds
mov
(bad)
fiadd
aaa
or
int
pop
cmp
adc
(bad)
fistp
mov
ins
aas
lods
push
mov
sbb
inc
jnp
adc
cmp
lock
cmp
jge
mov
cmp
sbb
jns
ret
adc
adc
sub
std
sbb
sub
aas
xor
or
xor
nop
dec
add
jmp
adc
push
mov
repnz
dec
jne
fcomp
dec
loopne
in
mov
mov
mov
xchg
cmp
push
jg
retf
sbb
dec
out
and
xor
push
into
xchg
imul
add
cmp
mov
out
pop
push
and
loope
rol
mov
or
or
cmp
test
stos
sub
test
(bad)
jo
lea
xchg
idiv
pop
loopne
push
inc
cmc
adc
or
sub
add
outs
enter
push
or
sub
je
dec
fmul
push
push
(bad)
mov
mov
sub
pusha
loop
push
mov
mov
enter
imul
popa
add
hlt
int3
das
lock
push
jl
inc
push
mov
clc
movs
test
pop
push
cmps
jl
cmp
or
inc
add
test
dec
jne
mov
out
in
push
(bad)
mov
inc
cmp
addr16
push
loope
clc
js
add
sbb
or
cmp
ror
push
sti
ret
dec
fldcw
sbb
es
inc
add
cmps
movs
sub
mov
adc
jo
sub
push
and
and
sbb
mov
push
mov
or
sbb
sub
les
or
rol
sbb
ds
push
push
sub
jmp
mov
sbb
sbb
dec
mov
jnp
jnp
inc
or
xor
int3
stos
dec
jg
shl
popf
pushf
das
sbb
dec
add
in
aas
shr
pushf
ins
inc
jo
jae
aas
push
add
xchg
fdiv
sub
push
or
jae
inc
jb
popa
jns
jge
dec
pop
push
(bad)
inc
add
push
inc
adc
cld
sbb
movs
jo
add
out
(bad)
fnstenv
das
mov
adc
cmps
sti
call
mov
bound
mov
(bad)
cs
push
mov
adc
and
vmwrite
sbb
jne
out
jecxz
or
add
lods
push
inc
push
mov
add
stc
bound
nop
add
(bad)
fsub
dec
inc
add
jb
dec
sti
or
add
jns
push
xor
outs
shl
addr16
xchg
jne
cmp
ret
xchg
add
jo
jmp
pop
loope
mov
(bad)
sub
add
sar
ret
mov
data16
data16
cmp
push
(bad)
push
ret
jmp
jg
jg
add
adc
mov
jge
add
not
mov
xchg
xor
add
test
push
ficomp
push
es
mov
sbb
cli
jl
pavgb
ins
fild
mov
mov
jmp
nop
cmp
out
and
fisttp
lds
clc
inc
mov
(bad)
jmp
std
outs
sahf
push
mov
mov
mov
popf
shl
dec
push
mov
jle
jnp
add
je
cmp
jne
xor
mov
and
es
pop
in
inc
sbb
enter
push
mov
das
xor
and
push
and
int3
mov
das
xchg
push
or
lahf
mov
sbb
and
(bad)
into
lgdtd
(bad)
xlat
adc
pop
cdq
loop
dec
popa
js
jmp
in
fmul
jecxz
daa
pop
push
xchg
push
imul
xchg
xchg
inc
imul
and
push
and
sar
imul
and
push
or
loopne
sbb
bound
rol
inc
pop
pop
add
add
xchg
mov
add
xchg
or
jne
jo
inc
jne
imul
mov
fsubr
neg
iret
cmp
adc
adc
es
and
cmp
fsub
push
mov
and
sub
shl
dec
fwait
inc
sbb
daa
xlat
pop
pop
push
xchg
sti
push
and
arpl
fdivr
mov
sbb
sbb
push
pop
add
jle
lods
mov
add
outs
arpl
ins
pop
jg
jb
add
mov
pop
pop
xchg
jmp
xlat
adc
or
sub
mov
test
dec
adc
add
or
adc
lea
sub
mov
mov
mov
jbe
or
retf
inc
mov
(bad)
mov
or
outs
cmps
pop
inc
add
push
dec
pusha
pop
mov
pop
or
nop
mov
jbe
mov
lds
xlat
pop
sub
pop
rcl
loop
mov
(bad)
jg
xor
outs
add
inc
xor
ror
mov
inc
cmp
inc
jmp
subps
and
sbb
ins
inc
shr
ins
fiadd
mov
xor
jnp
jecxz
inc
dec
cmp
xlat
add
lock
dec
add
ja
inc
cmp
adc
push
inc
mov
call
mov
dec
push
cmp
dec
mov
pop
js
jne
jg
mov
mov
or
jmp
je
add
jmp
add
jge
std
outs
sub
and
inc
pop
(bad)
sbb
jmp
jne
inc
scas
das
sub
xchg
int3
mov
adc
jmp
add
in
fisttp
scas
fiadd
push
sub
dec
cmp
sahf
push
iret
mov
mov
xchg
mov
push
adc
mov
inc
cmps
popf
je
mov
sub
or
adc
cld
hlt
push
adc
and
fs
or
add
adc
adc
inc
push
icebp
fld
sbb
ja
xor
mov
mov
ficom
add
bound
pop
jno
fs
cmp
dec
test
mov
adc
shld
cmps
sub
ss
jb
xor
mov
push
fldenv
or
mov
imul
daa
popa
or
push
addps
xchg
cmp
ss
test
sub
addr16
dec
or
push
or
or
push
inc
cwde
pop
je
adc
push
jae
push
pop
scas
loop
push
or
dec
sbb
imul
pop
popa
outs
test
inc
nop
mov
and
add
fcomp
inc
repz
es
add
push
ins
pop
rol
mov
es
pop
fadd
clc
pop
cmc
xor
push
push
dec
data16
adc
xor
or
or
test
jle
push
jb
adc
push
cmp
scas
ror
out
add
movs
and
nop
and
push
jp
pop
lea
adc
and
inc
inc
jg
cmp
push
std
imul
or
mov
jle
dec
test
xor
mov
and
movs
shl
ss
dec
shr
dec
xor
out
adc
inc
fs
int3
inc
data16
bound
bound
cmp
adc
sub
sbb
ins
(bad)
mov
pop
out
aas
out
jmp
inc
dec
push
test
sub
or
inc
sbb
cmp
jl
enter
mov
mov
jbe
mov
pop
mov
outs
jl
hlt
addr16
pop
test
jo
shl
ret
or
add
mov
or
clc
inc
pop
pop
cmps
mov
es
js
jmp
enter
inc
sub
sbb
cmp
inc
mov
bound
mov
loope
adc
sahf
test
sbb
icebp
addr16
lock
or
adc
dec
mov
ins
mov
mov
dec
adc
or
(bad)
clc
fcom
xchg
fmul
jmp
mov
pop
mov
lahf
out
test
sub
dec
lahf
xor
ror
jp
movs
dec
inc
fadd
push
or
pop
or
inc
sbb
and
cmp
push
lock
sub
cmp
adc
icebp
cld
xor
push
and
cmp
ja
lods
data16
(bad)
xor
pop
adc
(bad)
cmp
xchg
add
ror
shl
in
sbb
add
inc
sbb
(bad)
in
mov
push
or
push
sbb
inc
(bad)
clc
and
inc
(bad)
mov
loopne
push
test
test
hlt
cmp
push
xchg
and
lock
cmc
outs
xchg
ja
sbb
dec
or
add
call
movs
push
stc
mov
and
push
fs
jo
mov
popa
jmp
dec
mul
or
ja
or
jl
jmp
jmp
ins
jg
mov
sub
and
sbb
mov
mov
in
push
inc
or
mov
inc
dec
(bad)
loopne
sub
dec
push
(bad)
je
pop
sub
repnz
adc
inc
ins
or
(bad)
adc
push
pusha
(bad)
adc
and
lods
cli
stos
enter
shl
repz
dec
mov
cmps
aas
inc
popf
or
add
(bad)
daa
sbb
mov
mov
or
and
sbb
add
jae
daa
pop
sbb
and
inc
and
(bad)
inc
and
sahf
dec
pushf
or
sub
mov
sub
or
adc
adc
or
stc
sub
inc
dec
jmp
je
jno
inc
fiadd
cmp
retf
push
and
cmc
dec
adc
push
pop
test
sub
push
hlt
push
jbe
loope
cmp
dec
or
sbb
xor
ja
cmp
je
push
je
adc
inc
and
loopne
or
je
adc
out
fimul
add
shl
pop
pop
push
pop
push
sub
push
jmp
inc
jne
sub
mov
out
loop
in
call
mov
mov
and
cmp
jle
sbb
mov
push
jnp
(bad)
repnz
lods
lods
pushf
mov
push
iret
loope
jbe
(bad)
adc
lock
out
jnp
push
fmul
cmp
push
mov
add
inc
jo
xor
cmp
fwait
adc
mov
outs
adc
dec
shl
inc
mov
cmp
push
imul
neg
mov
adc
pusha
push
add
pop
sbb
jbe
test
and
xor
xor
push
jl
mov
enter
data16
mov
mov
enter
movzx
fadd
imul
lods
neg
add
adc
sbb
add
pop
xchg
cmp
dec
mov
setne
cmp
je
and
ret
adc
test
push
mov
in
test
rol
jmp
dec
xchg
fdiv
or
rcr
jae
ja
in
das
or
push
arpl
dec
xor
lahf
pop
sahf
or
das
cmp
and
xchg
icebp
or
xchg
push
inc
push
sbb
dec
lods
ror
and
(bad)
lea
leave
cmp
xor
or
push
sub
jmp
sbb
pop
push
fsubr
mov
iret
push
pushf
pop
mov
inc
mov
pop
inc
pop
pop
cmp
mov
or
sub
or
pop
cmps
inc
hlt
or
or
std
(bad)
cmc
test
jb
add
in
stc
and
cmp
shl
ins
xor
sub
lods
mov
sub
(bad)
adc
push
dec
clc
dec
sub
sahf
xchg
call
push
add
out
sbb
mov
movs
cmp
cwde
ss
dec
movs
dec
mov
mov
xlat
lods
add
fstp
rcl
jg
jne
jge
pop
pop
push
fist
inc
dec
push
fsubr
icebp
xor
mov
dec
frstor
dec
add
mov
push
xor
push
push
(bad)
cmc
mov
jnp
add
sbb
mov
icebp
add
cmp
frstor
inc
mov
and
outs
dec
xchg
ins
mov
mov
add
stos
clc
fwait
lock
add
enter
shr
stos
(bad)
ficomp
mov
fsubp
pop
cmp
mov
pop
je
add
enter
into
and
aas
dec
push
xchg
addr16
aam
adc
jmp
rcr
or
adc
xchg
enter
pop
adc
dec
sub
test
fdivr
es
pop
jne
in
sub
dec
add
sbb
scas
or
mov
sbb
add
sbb
lods
mov
inc
adc
or
xlat
js
dec
sbb
xor
(bad)
shl
cmp
stos
rol
leave
in
adc
fidiv
xor
add
jne
int3
dec
sub
push
add
dec
push
xchg
ret
mov
pushf
xchg
pusha
inc
or
data16
adc
mov
aas
iret
and
pop
fdiv
push
jg
loop
add
jle
ror
pusha
icebp
das
hlt
scas
cld
jmp
ins
cmp
push
fcom
cwde
push
push
xor
push
push
jo
sub
xlat
loop
or
imul
cdq
xor
push
sub
shr
and
cwde
jne
pop
dec
aas
mov
inc
jmp
shl
pop
add
dec
inc
shl
or
in
xor
jge
mov
xor
xor
mov
inc
fsub
rcr
inc
jg
or
cmp
(bad)
pop
and
mul
or
rol
addr16
xchg
pop
(bad)
clc
cmp
aam
mov
ins
or
inc
into
hlt
dec
sbb
call
fisttp
sbb
in
jge
sub
add
scas
popa
and
dec
(bad)
lods
sub
push
adc
loopne
pop
xor
inc
and
adc
inc
cmp
adc
leave
outs
lods
add
test
leave
pop
leave
rol
daa
add
cdq
and
cld
adc
or
add
pop
jmp
adc
jmp
jmp
cmp
add
call
jle
adc
xchg
fdiv
stc
adc
fsub
test
in
shr
fild
or
sub
cmp
clc
adc
rep
in
fdivr
xchg
mov
fs
mov
fchs
adc
sbb
mov
mov
mov
clc
mov
add
cli
sub
shl
and
or
into
scas
loope
or
jl
inc
das
push
jp
in
aaa
lods
mov
pop
rcr
repnz
test
jne
(bad)
pusha
mov
jb
jne
or
jmp
pop
jle
mov
cmp
scas
push
in
adc
jne
dec
je
(bad)
add
adc
mov
cdq
cdq
rcr
adc
mov
shl
mov
loope
xchg
in
movs
fnsave
sbb
cmp
inc
test
adc
pop
ja
shl
test
aam
jp
mov
ss
pop
pop
ja
lea
ins
fcomp
push
loopne
out
add
ret
or
dec
sahf
in
xchg
les
xchg
pushf
sbb
loope
xlat
loop
popa
loop
or
mov
(bad)
hlt
(bad)
(bad)
fsub
loopne
fadd
addr16
dec
sbb
nop
cs
cmps
mov
jno
sub
and
pop
xchg
out
or
sti
pop
mov
sbb
sbb
pusha
(bad)
and
and
pusha
ret
mov
cmp
cmp
pop
cmp
cwde
inc
jno
sbb
cmp
fld
in
add
push
push
cmp
inc
out
sub
fsubr
add
sub
and
or
vmovhps
or
ds
adc
sbb
fistp
push
test
js
sbb
mov
ret
and
lahf
adc
into
push
sbb
rcl
mov
add
mov
call
popf
and
lock
mov
cmp
jae
or
cmp
push
shl
aam
pop
rdpmc
mov
cmp
sub
cmp
bound
ror
sub
jmp
jnp
push
(bad)
sub
add
push
push
neg
lods
sbb
push
into
test
enter
(bad)
mov
add
sub
ins
sub
lock
rcl
push
mov
push
sub
into
das
dec
sub
xor
das
retf
mov
sub
in
out
test
stos
add
jle
mov
daa
sub
stos
xchg
addr16
xchg
dec
mov
lock
hlt
ficomp
or
or
sar
iret
add
pop
repnz
rcl
adc
dec
test
pop
push
add
pop
in
jge
xchg
sbb
push
push
clc
push
daa
push
jae
sbb
sub
xor
cdq
or
sub
cli
ror
push
xor
(bad)
cmp
mov
and
inc
retf
or
xor
mov
adc
add
jge
and
or
ins
push
cmp
mov
sbb
push
sbb
lock
adc
das
(bad)
loopne
es
ret
or
push
iret
ret
or
or
fld
jle
call
add
ficom
(bad)
xchg
inc
fcmovnb
imul
lea
sub
popa
js
call
sbb
xchg
jl
mov
push
popf
cmp
retf
mov
push
cs
add
mov
lea
push
sub
xchg
push
out
sti
adc
sub
je
enter
imul
add
xchg
ret
out
xor
test
push
adc
xchg
jno
mov
ss
das
jle
or
jecxz
cdq
jb
mov
out
outs
dec
loopne
and
mov
clc
or
mov
outs
sub
and
hlt
add
pushf
dec
aam
sub
sub
aaa
(bad)
cli
lea
mov
pop
popf
or
dec
movs
mov
mov
fcomp
xor
xor
push
add
add
mov
mov
aad
ja
jmp
dec
jg
jno
pop
or
cmp
test
push
jo
retf
adc
xchg
mov
dec
sub
in
xchg
adc
lock
mov
mov
jle
jnp
iret
sub
jbe
jb
add
and
jle
sbb
inc
ss
sub
jne
adc
call
dec
xor
fadd
push
inc
cwde
dec
add
ja
sub
das
dec
jmp
sub
dec
shl
add
enter
mov
dec
shl
cmp
jl
sbb
out
mov
mov
xor
cmps
js
loop
aad
hlt
xchg
jecxz
pushf
dec
inc
test
sbb
les
and
pop
xchg
jo
sbb
add
loope
and
add
mov
outs
leave
outs
add
mov
adc
imul
mov
cmp
inc
fdiv
pusha
ja
xor
cld
mov
add
or
ins
nop
mov
and
sbb
test
sbb
sub
in
jmp
dec
fcmovnb
mov
jo
push
or
jl
bound
test
jne
cmp
sbb
mov
test
addr16
call
sahf
aas
call
add
jp
sbb
jnp
clc
jp
test
ret
adc
mov
dec
fimul
pop
or
pusha
or
clc
inc
dec
test
adc
pushf
in
jge
pusha
not
jp
mov
or
pop
sbb
test
jle
cmp
ja
mov
xchg
mov
dec
sbb
icebp
fcomp
and
jno
movs
mov
sub
jl
add
and
aas
push
popa
and
jb
dec
mov
or
mov
pop
and
(bad)
out
test
push
sbb
sar
sbb
mov
in
popa
mov
arpl
adc
xor
outs
and
test
jne
dec
test
or
or
jmp
inc
inc
inc
dec
jne
jmp
dec
clc
and
loope
dec
push
gs
add
add
push
pop
dec
loopne
loopne
fld
add
pop
inc
test
sbb
sbb
clc
mov
pop
and
mov
fcos
inc
or
pop
xchg
dec
sub
leave
jle
pop
or
outs
push
push
inc
mov
shr
jge
mov
add
xor
mov
pusha
dec
dec
dec
jg
pop
jb
push
(bad)
jo
sbb
sbb
xor
or
loopne
iret
loope
ror
xchg
mov
dec
stos
jnp
xchg
mov
mov
inc
add
cmp
jne
jp
mov
cmps
adc
in
in
or
stos
xchg
test
add
test
xchg
imul
iret
pusha
pop
ds
dec
and
inc
test
mov
mov
mov
mov
cmp
and
push
lds
movs
adc
mov
fsubr
cmp
pop
mov
mov
cmp
jne
dec
lock
sbb
add
jecxz
jb
int
mov
push
in
adc
jne
or
sti
push
test
mov
add
xchg
mov
push
sub
or
cmp
sub
pop
or
adc
and
dec
cmp
int
mov
jns
dec
mov
xchg
mov
or
push
mov
lods
add
ins
daa
cmp
xor
and
adc
push
aam
pushf
(bad)
dec
xor
adc
loopne
ds
dec
cwde
in
aas
data16
pop
push
sahf
fcom
clc
or
push
test
ins
hlt
xlat
loop
ret
fild
sbb
test
je
adc
dec
cmp
push
fcom
rol
adc
dec
sub
inc
repz
mov
rol
cmc
out
popf
sub
cs
push
jns
sbb
push
or
inc
cmps
xchg
inc
or
mov
adc
add
add
cmp
sbb
jb
enter
add
sub
jne
xchg
daa
out
sbb
xor
shr
cmp
setl
add
and
adc
inc
inc
ret
ja
out
lahf
and
mov
je
push
sub
lds
fild
jl
cmp
push
sub
adc
adc
push
test
cmc
gs
adc
xor
inc
add
cli
loop
icebp
mov
aam
push
enter
push
dec
dec
inc
mov
cmp
or
sbb
or
test
dec
sbb
adc
or
inc
pop
xor
sub
inc
dec
enter
add
pop
leave
and
adc
js
aam
adc
add
push
sub
xchg
mov
cmp
hlt
push
or
mov
lea
femms
push
ds
inc
cmp
push
mov
xlat
push
sub
mov
inc
add
xchg
adc
movs
mov
add
lock
or
or
xor
dec
hlt
out
leave
mov
mov
stc
pop
push
shl
cmp
idiv
add
add
jne
lods
sahf
adc
mul
cmp
ret
adc
inc
xor
push
adc
in
jo
sub
cmp
push
pusha
push
xor
or
sub
pushw
sub
dec
aaa
or
stos
sub
cmp
adc
dec
sbb
dec
pushf
fstp
xchg
xor
inc
lods
daa
or
or
mov
jb
inc
fist
sbb
sbb
fs
cmp
lea
pop
cmp
ror
shl
sub
xchg
stc
and
mov
sbb
mov
and
div
mov
mov
jne
mov
fdivr
mov
push
push
imul
and
and
aad
test
cmp
(bad)
movs
adc
dec
je
call
rol
clc
cmc
add
adc
add
or
jmp
sti
or
add
mov
dec
mov
ss
sub
or
adc
inc
data16
lock
std
sub
jmp
pop
jnp
mov
mov
cmp
and
push
xchg
add
mov
or
cmp
gs
dec
xchg
retf
adc
mov
mov
call
aam
and
adc
dec
xlat
(bad)
dec
xchg
or
je
push
add
outs
dec
or
call
dec
dec
dec
(bad)
std
ror
dec
sbb
or
xor
pop
jmp
xchg
movs
fst
xor
xor
call
push
js
mov
inc
outs
or
and
into
sbb
dec
fucom
or
jo
int
jl
inc
scas
sub
sbb
push
jmp
call
push
ja
cmp
cmovb
cmp
je
cmp
jne
push
add
add
test
push
or
xchg
xchg
inc
add
scas
jmp
in
or
lods
jecxz
shr
mov
pop
dec
add
inc
fild
mov
cmp
rcl
xchg
push
div
and
aaa
jmp
and
cmp
jmp
xor
xor
jbe
sbb
cmp
sub
jae
mov
adc
cmps
jae
mov
dec
push
cmp
pop
fnstsw
or
pop
add
sub
(bad)
cmp
jne
aaa
cmp
cwde
sub
dec
int
xor
push
hlt
in
jmp
jo
rcl
(bad)
or
pop
pop
arpl
loopne
xchg
das
aam
push
mov
lds
clc
pop
pop
and
mov
sbb
add
test
sub
popf
add
xchg
mov
pop
mul
and
sub
jmp
sbb
sub
rol
test
xlat
fld
xchg
(bad)
(bad)
or
push
sbb
test
and
or
adc
sub
punpcklbw
pop
movs
popf
dec
push
add
mov
and
int
mov
imul
mov
mov
movs
and
mov
lds
adc
xlat
pop
xlat
fdivr
xchg
leave
not
fsub
mov
cmp
xchg
pop
push
adc
sbb
(bad)
pop
push
clc
sbb
(bad)
push
pop
or
xor
popa
sub
enter
daa
xchg
cld
loopne
xor
mov
xchg
ins
and
jae
rcl
and
sbb
mov
push
ret
shl
jmp
es
clc
mov
das
pop
clc
in
push
ror
pop
cmp
push
add
mov
jnp
mov
push
sahf
dec
mov
add
xor
callw
into
mov
or
xchg
in
and
sub
iret
out
cmp
and
mov
div
lock
adc
cmp
push
lock
inc
sub
cmp
inc
stc
pushf
push
mov
inc
dec
push
arpl
inc
inc
mov
mov
gs
icebp
ret
xchg
fsub
lds
sub
or
sbb
icebp
push
mov
bswap
jo
fld
jnp
sbb
push
std
add
push
sub
pop
aaa
test
cmc
push
push
loopne
cli
cwde
pop
or
xor
push
xlat
xor
jmp
daa
lea
mov
inc
mov
sbb
push
test
cdq
push
sbb
push
mov
jmp
jge
mov
retf
sbb
push
cmp
and
pushf
loopne
mov
or
scas
ds
push
mov
xor
mov
inc
hlt
mov
sbb
jo
mov
and
add
cld
in
retf
mov
jo
add
(bad)
sbb
mov
cmp
pop
sbb
mov
or
movs
pop
mov
fisub
test
fimul
or
and
sub
jmp
or
and
ret
cwde
add
push
inc
or
inc
(bad)
mov
test
ds
enter
add
add
scas
test
cmp
sub
pop
hlt
mov
loope
shl
jb
call
(bad)
xchg
sub
xor
sub
lods
mov
ror
fld
add
mov
adc
xchg
or
push
cwde
or
and
xor
leave
mov
sbb
outs
mov
lea
movs
add
ins
mov
shr
sub
push
or
fldlg2
popa
mov
inc
and
push
adc
or
cmp
sbb
or
loopne
(bad)
mov
push
push
and
pop
sti
nop
cwde
out
pop
ret
add
bound
jae
push
inc
ror
or
push
ror
xor
inc
test
adc
stos
inc
sub
cmp
or
sbb
rcr
ins
jg
mov
jmp
mov
ins
test
jl
inc
mov
(bad)
mov
inc
push
(bad)
popf
and
jl
add
fucomi
add
dec
jne
mov
add
sahf
add
inc
xchg
jg
and
xchg
or
sbb
mov
popf
enter
xchg
and
pusha
mov
pop
cmp
adc
adc
shl
or
jle
hlt
xchg
ror
sahf
inc
inc
dec
jle
fdivr
rol
push
pop
test
ja
xor
in
int
or
inc
and
push
or
sub
aas
xor
cmp
movzx
movs
clc
cmc
adc
mov
ror
mov
js
pop
xchg
push
add
icebp
inc
scas
mov
test
mov
add
sbb
mov
aad
cmp
lock
sub
and
out
cmps
jo
sbb
test
and
(bad)
mov
pop
or
lods
mov
mov
imul
inc
xchg
scas
or
inc
and
add
xchg
inc
pop
inc
adc
xor
push
and
(bad)
into
pop
fimul
cmp
mov
xchg
in
sbb
dec
pop
adc
adc
bound
add
mov
dec
pop
mov
cmp
pushf
fdivr
mov
pop
dec
ins
cmp
and
cmp
mov
mov
loop
sub
and
mov
inc
jne
das
jo
dec
sbb
jne
cmp
data16
and
pop
mov
push
or
js
mov
and
pop
icebp
jl
retf
mov
lock
pusha
movs
push
mov
mov
adc
xor
pop
(bad)
xor
inc
clc
jg
adc
sub
jb
call
sub
es
dec
les
mov
js
lea
loop
lea
inc
in
arpl
sti
inc
mov
pushf
dec
push
imul
idiv
ins
dec
in
cmp
fs
loopne
(bad)
ja
cmps
out
inc
sub
daa
mov
sub
call
mov
push
add
push
and
xor
jl
or
dec
sub
jl
xor
retf
retf
push
or
into
jne
jecxz
push
jbe
int3
add
fcomp
add
xchg
adc
lods
pop
xor
(bad)
push
mov
jo
je
or
sub
add
lods
je
xchg
add
push
out
je
les
dec
jne
push
push
je
sub
add
ja
add
shl
adc
outs
or
mov
and
xchg
sbb
mov
les
inc
dec
jne
jmp
or
jb
inc
sbb
cmp
xor
add
push
add
add
fld
enter
out
adc
and
repnz
push
pop
or
call
nop
inc
aaa
imul
mov
mov
sbb
and
sbb
and
fst
xchg
add
shl
xchg
outs
loopne
ret
mov
test
clc
jmp
vmovmskps
lea
sbb
in
xor
std
mov
fnstcw
pop
cld
das
sub
adc
jp
jns
scas
mov
push
and
cmp
jl
out
inc
xor
ja
cdq
int
fucomip
xchg
add
mov
pushf
push
icebp
std
mov
xchg
inc
add
call
dec
add
push
(bad)
mov
leave
verw
add
push
push
inc
js
outs
jae
call
imul
es
push
inc
jb
popa
sub
add
add
cmp
push
gs
jbe
imul
pop
inc
gs
jb
jns
sbb
mul
inc
add
bound
add
fs
add
loopne
add
dec
popa
push
test
js
mov
inc
ins
popa
jae
test
sbb
jae
add
inc
imul
push
add
(bad)
fsubr
fimul
mov
outs
jbe
imul
fldenv
pop
and
outs
xor
add
push
arpl
cmp
mov
sbb
inc
dec
inc
adc
mov
add
add
pop
js
and
ins
je
ficomp
xchg
addr16
in
(bad)
pop
fsub
sub
call
jns
repz
int3
imul
js
cmps
int3
fs
adc
les
test
lea
outs
sbb
xchg
outs
or
adc
(bad)
sti
cs
add
cld
and
daa
sbb
fdiv
mov
mov
and
lods
mov
mov
mov
clc
call
xlat
dec
dec
mov
dec
and
sbb
jo
into
cmp
add
add
add
das
push
pop
mov
cmp
rcl
mov
mov
cmps
mov
inc
stos
push
xchg
cmp
cmp
adc
add
mov
sar
adc
add
xchg
test
ret
inc
cmp
je
jge
in
push
mov
and
in
test
push
push
fwait
fs
and
ja
imul
loopne
dec
(bad)
popa
rcl
cdq
mov
movs
mov
push
inc
push
inc
sti
mov
adc
and
int3
inc
cmp
or
push
cld
cwde
and
je
ja
pushw
(bad)
cmp
inc
mov
add
or
pop
pop
(bad)
mov
cwde
sbb
aaa
test
mov
mov
jge
lods
xchg
add
mov
adc
add
or
adc
mov
(bad)
sub
sbb
les
push
loope
loopne
add
add
and
mov
push
xchg
jl
cld
cmps
retf
xor
cld
adc
addr16
sbb
pop
jl
xchg
mov
push
loopne
and
jg
adc
in
xor
cmp
pop
cmps
adc
fdivr
call
push
add
scas
cmp
gs
cmp
push
call
pop
cmp
frndint
mov
add
jo
cmp
jp
(bad)
cld
and
pop
clc
nop
out
and
daa
repz
fidivr
(bad)
cmp
inc
or
push
or
popa
inc
push
pop
inc
adc
adc
rcr
cmp
mov
jmp
pop
and
fadd
and
(bad)
test
push
(bad)
xlat
cmp
adc
je
test
mov
xlat
inc
push
js
stc
cmps
clc
inc
or
xchg
adc
mov
mov
or
xor
pop
sub
arpl
dec
ror
cmp
push
je
das
cmp
out
mov
(bad)
adc
mov
push
sbb
pusha
adc
sahf
dec
addr16
jle
sbb
mov
sar
ret
and
popa
xchg
dec
ins
aas
jne
and
bound
ucomiss
rol
femms
psubsb
sbb
push
fs
mov
shl
sub
sub
adc
data16
aas
sub
imul
cmp
test
or
pop
or
push
aaa
outs
fistp
call
loope
add
add
jp
fmul
mov
(bad)
mov
lea
mov
xchg
add
pop
xor
stos
xchg
push
push
pop
xor
lods
or
sub
mov
loopne
and
lahf
add
dec
push
push
les
mov
bnd
xor
inc
adc
adc
pop
ds
sbb
sbb
sbb
sub
mov
xchg
add
push
push
rcr
jecxz
add
push
sbb
mov
sbb
int
pusha
sbb
push
inc
mov
push
adc
jo
mov
add
push
sbb
call
push
push
adc
hlt
add
add
paddd
mov
xor
push
jns
mov
xor
loopne
pop
pushf
pop
adc
outs
das
retf
je
jecxz
nop
ins
fcom
cmp
(bad)
sub
push
ins
cmove
adc
jo
push
xchg
sbb
xchg
inc
test
inc
dec
dec
daa
in
pusha
add
in
sbb
push
lock
fs
sub
mov
ins
inc
and
fcmovu
lea
xor
pusha
imul
das
pop
sub
lds
sti
inc
mov
shl
jl
aad
mov
jb
pop
jmp
hlt
dec
cmp
movs
movs
movs
mov
dec
mov
mov
mov
mov
or
pushw
or
or
xchg
fisttp
or
mov
sub
dec
cmp
and
lock
or
inc
add
in
mov
mov
push
jmp
push
mov
out
cmp
sbb
mov
pusha
add
fisub
add
mov
pushf
sub
lea
xor
sub
push
inc
jle
cmp
or
xor
(bad)
cmp
pop
mov
push
lock
bound
mov
dec
ret
inc
cmp
or
mov
xchg
loopne
ror
fs
inc
mov
jge
sahf
lock
adc
adc
and
sub
adc
popa
inc
adc
xor
mov
sbb
bound
push
(bad)
rcl
mov
inc
adc
out
adc
cmp
adc
push
push
push
push
cmps
pop
ret
xor
ss
setns
idiv
(bad)
(bad)
fsubr
and
clc
das
(bad)
in
adc
or
(bad)
daa
sbb
jae
ja
jmp
jo
int3
cmc
or
pop
in
repnz
pop
lds
cmp
out
adc
mov
inc
and
int
xor
jnp
xchg
ret
cmps
jg
jnp
cmp
outs
loopne
xchg
add
and
ror
push
or
retf
inc
push
out
push
dec
and
aas
lock
or
js
pop
mov
inc
jp
or
mov
pop
fcomp
push
pushf
jo
adc
jae
inc
or
(bad)
fnsave
adc
(bad)
out
jmp
sub
jge
lock
adc
lea
pop
sbb
push
mov
shr
xchg
xor
bound
push
mov
xor
push
add
stc
add
idiv
or
mov
pop
push
add
mov
mov
jb
sbb
dec
addr16
adc
(bad)
xchg
lahf
pop
cmp
lock
fcom
mov
fneni(8087
dec
push
sahf
push
ret
sub
xchg
das
sbb
add
icebp
iret
test
or
adc
pop
sub
cld
loopne
xchg
mov
test
push
push
lea
inc
xor
xor
add
dec
aam
pop
ror
rol
mov
lea
dec
sub
fstp
sub
(bad)
imul
fs
jb
cmp
jne
aas
ret
pusha
(bad)
cmps
hlt
shl
inc
data16
inc
jo
pop
into
push
inc
and
and
and
or
pop
cmp
mov
cmp
sbb
pusha
test
and
jb
es
jo
repz
dec
jmp
xor
dec
out
push
retf
or
sub
sahf
retf
sub
movs
sub
xchg
push
push
imul
sti
inc
(bad)
pusha
xlat
adc
pushf
sub
push
and
xor
or
xor
add
mov
jge
arpl
push
sbb
dec
xchg
neg
cmp
jbe
mov
dec
add
mov
dec
adc
cs
xchg
lock
lock
cli
mov
je
scas
push
arpl
inc
xor
ja
test
fistp
pusha
clc
and
dec
je
add
jmp
cmp
push
xchg
outs
inc
hlt
mov
push
mov
push
arpl
push
add
lock
and
popa
ja
add
gs
call
push
or
inc
cmp
xor
push
mov
cmc
mov
xor
xor
and
cmp
xchg
mov
(bad)
ja
sbb
mov
popf
jl
pop
cmps
loopne
add
adc
inc
xor
lock
test
inc
sbb
sbb
dec
ret
lock
aas
push
inc
jmp
cli
sub
dec
sub
push
iret
xchg
mov
mov
xchg
es
fwait
sbb
pushf
fmulp
add
xlat
xor
into
push
sti
mov
push
push
ficomp
or
popf
mov
fisub
adc
dec
call
xchg
jo
xor
push
sbb
or
sbb
jge
adc
std
jmp
push
std
and
je
(bad)
add
and
es
bound
dec
push
xchg
or
mov
shl
loopne
icebp
jmp
add
sbb
push
jne
dec
call
std
push
sar
loopne
jo
or
xchg
push
xchg
loopne
xchg
in
xchg
mov
pop
jl
mov
dec
movs
jl
inc
lds
sbb
cmp
arpl
mov
push
mov
inc
pop
inc
int
ins
jo
jg
dec
jne
mov
jbe
push
lods
or
or
push
test
xor
dec
js
and
adc
cmp
(bad)
push
bound
and
xor
sbb
sub
and
mov
jo
push
or
pop
fdiv
mov
test
in
aas
or
cmp
jg
inc
es
or
cmp
leave
cmp
add
adc
imul
in
ret
shl
cmp
mov
jne
and
mov
not
inc
lea
popa
or
js
push
and
in
jnp
and
stc
or
cmp
mov
loope
inc
adc
xor
xor
fscale
test
sbb
mov
xchg
mov
sub
sbb
addr16
xor
xchg
or
pop
rol
je
inc
enter
mov
daa
adc
cmp
add
int
imul
cmps
and
or
pop
lods
add
iret
scas
xchg
lds
fiadd
pop
mov
push
add
push
cmp
sbb
xor
cmp
sbb
jnp
xor
adc
and
xchg
add
mov
lods
add
mov
addr16
adc
cmp
sbb
cmp
add
sbb
adc
int3
cmps
jae
cmp
test
add
push
test
aam
test
daa
mov
or
es
cmp
xor
xor
loopne
and
(bad)
jg
jo
jmp
dec
fimul
arpl
mov
sahf
fld
in
mov
adc
(bad)
js
cmp
pop
mov
repnz
or
cli
(bad)
push
ins
and
cwde
sbb
int3
sub
inc
dec
dec
cmp
mov
push
push
inc
or
jnp
push
outs
or
adc
pop
daa
or
aad
sbb
push
pop
push
pop
pop
mov
or
and
jno
outs
test
call
push
adc
inc
push
jbe
pop
cmp
icebp
shr
fsub
and
ja
push
mov
adc
adc
shl
or
popa
inc
sbb
pusha
sahf
(bad)
mov
(bad)
int3
push
pop
sub
cmp
jge
mov
add
jb
adc
sub
sub
adc
jno
test
push
sub
push
adc
fcom
push
sub
push
cdq
shl
adc
mov
jecxz
xchg
pushf
int3
clc
mov
jmp
pop
aad
jbe
add
(bad)
sub
fisttp
call
fld
adc
add
sbb
sub
adc
(bad)
push
adc
mov
repnz
mov
dec
jne
call
adc
jmp
stos
cmp
jg
movzx
push
mov
je
nop
es
or
pop
inc
pusha
fs
add
adc
lock
call
pop
ja
and
bts
in
clc
aam
ret
add
shr
add
sub
pop
sbb
loope
inc
inc
scas
add
or
stos
jb
aam
push
and
pusha
cmp
inc
mov
add
bound
pushf
add
xor
pop
mov
cmps
dec
mov
pusha
outs
mov
adc
in
inc
inc
sub
sbb
push
or
xchg
sub
fnstcw
out
rcl
fmul
mov
jo
sar
ror
push
or
xor
mov
xchg
add
dec
push
pop
pusha
sub
inc
je
xchg
or
iret
fsubr
aad
add
and
je
fwait
aad
pop
dec
pop
add
cmc
inc
xor
mov
pop
ret
and
add
inc
add
fsubr
inc
inc
mov
(bad)
mov
push
addr16
mov
add
adc
div
fs
call
adc
rcl
aam
xor
jmp
outs
inc
pop
cmp
out
xor
fmul
jle
jnp
fistp
push
imul
push
lock
cmc
mov
push
pop
aaa
pop
pop
or
and
popf
sahf
jle
cmp
xchg
repnz
inc
in
lods
inc
cmp
jne
or
cmp
push
push
xchg
loope
call
fs
xor
bound
pop
aaa
mov
push
dec
ficomp
clc
enter
push
lahf
and
lahf
vmovshdup
int
int
mov
mov
inc
int
data16
xchg
mov
loopne
sbb
into
pop
jno
cld
cmp
sub
aad
ja
pop
mov
or
movs
dec
clc
in
push
adc
add
mov
call
pop
xlat
icebp
sbb
mov
pop
mov
arpl
add
mov
(bad)
push
xor
fild
or
icebp
int3
es
retf
adc
adc
rol
mov
stos
je
test
adc
jns
inc
pop
sbb
in
in
adc
enter
push
xor
push
out
int3
inc
adc
cmp
fs
push
dec
and
mov
inc
out
mov
sbb
mov
sbb
mov
into
or
shl
fs
mov
and
out
push
dec
and
test
inc
cmp
or
inc
sub
mov
fst
mov
mov
sub
xchg
(bad)
sub
pop
(bad)
pop
mov
loopne
mov
in
push
push
inc
mov
xchg
inc
out
jae
add
and
pop
enter
or
scas
xchg
inc
mov
ret
mov
mov
pusha
and
xor
int3
push
outs
popf
dec
or
out
xchg
out
sub
icebp
out
cmp
in
xor
je
push
fild
pop
mov
mov
cmp
jae
lock
xor
lock
cmp
jb
adc
xor
pop
scas
mov
data16
in
mov
cmp
sub
stos
push
sti
iret
push
les
call
dec
adc
jne
(bad)
push
adc
sub
dec
inc
cmps
cs
retf
call
xor
and
lock
or
call
jo
add
or
and
adc
aaa
xchg
or
pushf
sbb
in
jo
(bad)
and
and
enter
sbb
push
int3
neg
pop
sub
push
push
jp
mov
push
dec
pop
push
or
jp
inc
pusha
in
pop
mov
mov
imul
ja
inc
fidivr
sub
jmp
cmp
add
jle
mov
push
je
add
loope
mov
pop
mov
pop
xchg
cmp
sbb
mov
and
mov
popa
jle
ins
jg
mov
add
dec
pop
test
cld
mov
fcom
or
mov
mov
push
sbb
je
xor
xor
daa
addr16
aas
push
mov
mov
mov
repnz
mov
xchg
es
mov
call
mov
add
pushf
(bad)
fwait
cmps
imul
add
push
fadd
jo
test
jne
dec
inc
or
sbb
or
or
lea
lods
add
adc
xlat
add
ret
int
pop
add
add
lock
test
shl
xchg
in
js
jle
sbb
cmps
mov
pop
sbb
dec
test
jl
inc
adc
test
jmp
fisub
jne
sub
sbb
inc
scas
sub
adc
mov
int3
add
add
add
or
dec
lock
or
test
cmp
push
and
arpl
sbb
adc
rcl
ret
and
retf
movs
add
cmp
mov
sbb
or
clc
xor
dec
fwait
push
test
sub
jae
and
push
fisubr
fiadd
sub
pop
pop
jae
and
inc
mov
stos
mov
ficom
jle
inc
sbb
push
xchg
mov
mov
rol
(bad)
dec
cmps
add
mov
leave
lahf
jge
mov
add
sub
repz
jmp
inc
pop
jo
push
sub
mov
rcr
sub
pop
cmp
je
shl
or
inc
loop
adc
dec
je
sub
nop
and
mov
push
or
push
push
bound
sbb
or
or
cmp
xchg
inc
inc
movs
fwait
je
mov
cmp
or
loope
test
bound
add
enter
dec
cmp
xor
xchg
int
push
jg
mov
call
outs
adc
cmp
mov
icebp
imul
or
bound
fcom
pop
js
xchg
pusha
mov
fs
mov
in
pop
movs
dec
clc
test
dec
cmp
inc
inc
add
push
push
adc
or
pop
test
push
cmp
jle
es
or
mov
sub
dec
pushf
cmp
xor
inc
mov
sub
jne
jmp
fadd
nop
add
popa
mov
ror
data16
cli
es
jmp
xor
inc
fisub
add
dec
push
xor
jb
and
add
jmp
rol
lahf
nop
xor
and
(bad)
ret
and
hlt
pop
mov
xchg
pop
fist
mov
int
mov
mov
lods
inc
inc
xchg
lea
sbb
sbb
dec
js
mov
outs
add
fcmovnb
or
inc
or
add
inc
mov
adc
adc
sub
loope
dec
and
and
fadd
call
pop
jg
xchg
push
inc
push
xchg
cmps
xor
sahf
or
inc
int
das
data16
aam
mov
xor
fbstp
nop
xchg
ja
jp
mov
mov
cmp
and
das
mov
push
mov
jl
fidivr
push
xchg
clc
mov
clc
ftst
daa
(bad)
loopne
pop
sbb
sub
pushf
cwde
loopne
xchg
mov
into
ds
js
sbb
or
add
gs
mov
mov
imul
jns
ja
cmp
loopne
push
mov
xor
add
cwde
xchg
pop
lea
stos
xchg
fadd
mov
push
fdivr
fld
je
dec
mov
sbb
aam
add
mov
cwde
icebp
xchg
retf
pop
xchg
aaa
or
imul
adc
or
fmul
cmp
in
pusha
(bad)
test
inc
enter
cmp
push
push
mov
pop
sbb
in
ja
(bad)
lock
xchg
dec
es
adc
cmp
adc
inc
cmp
lock
(bad)
lock
push
jo
inc
mov
fwait
sbb
pop
push
(bad)
hlt
aas
mov
pop
arpl
(bad)
popa
movs
je
movs
push
and
lods
push
push
repz
adc
jae
test
adc
lahf
scas
fiadd
mov
add
inc
test
add
cmp
js
sbb
fdivr
cmp
jne
xor
and
or
jne
and
sub
push
inc
retf
loopne
push
inc
or
test
cmp
push
mov
cmp
and
lods
or
inc
xchg
cmp
sbb
ror
dec
out
or
inc
jecxz
pop
adc
(bad)
adc
pop
push
or
aam
lods
mov
mov
mov
mov
xor
or
mov
clc
push
inc
mov
sub
add
add
mov
lea
aam
aad
cmp
mov
xlat
fs
je
loopne
dec
sbb
aam
bound
jnp
mov
mov
mov
imul
clc
or
sbb
sub
cmp
pop
es
inc
cmc
pop
mov
inc
jmp
movs
add
sbb
shl
fmul
sub
or
add
retf
(bad)
rol
xor
fsubr
jb
fwait
mov
enter
mov
sub
mov
mov
sub
push
or
enter
aad
push
inc
stos
or
es
mov
xchg
rol
ds
mov
or
invd
push
dec
rol
sbb
(bad)
jmp
push
cmp
fwait
out
jge
js
test
jne
daa
sub
add
ret
aaa
aaa
dec
rcl
jmp
cmps
add
je
hlt
xchg
push
add
pop
sub
je
push
push
dec
push
pop
and
(bad)
add
retf
hlt
mov
rcr
cmp
sbb
(bad)
xchg
and
test
repnz
jge
push
cmp
xor
adc
push
mov
sahf
and
mov
push
mov
jne
or
sbb
push
jle
sbb
shl
mov
outs
out
pop
pusha
jg
in
push
jno
(bad)
icebp
or
daa
pop
push
and
clc
xchg
ffreep
aam
mov
je
inc
inc
xchg
jecxz
jg
push
and
test
or
mov
lock
mov
mov
mov
aas
push
push
mov
and
lods
push
inc
and
cmp
or
push
push
fdivrp
std
sbb
sbb
(bad)
mov
cld
daa
mov
sbb
sar
xor
and
inc
adc
pusha
repz
and
xor
mov
and
add
and
pop
and
sub
clc
test
push
add
scas
fwait
adc
inc
pop
lea
and
nop
inc
scas
mov
mov
movzx
mov
fmul
pop
mov
es
cmp
stos
jb
into
leave
adc
inc
sbb
mov
inc
inc
sbb
fld
punpckhbw
pop
(bad)
jb
dec
(bad)
cmp
sbb
movs
cmps
jb
fs
cmp
or
out
(bad)
jno
xchg
push
inc
mov
add
js
les
inc
add
(bad)
jl
pop
fcomp
mov
sub
sbb
sbb
mov
jmp
xchg
clc
cmp
and
add
xor
mov
add
jne
jae
push
add
scas
aad
sbb
xlat
mov
or
sbb
sbb
mov
in
xor
dec
or
and
pop
in
lea
sbb
clc
popf
xchg
fist
sbb
or
mov
add
adc
cmps
in
mov
inc
jle
rol
add
mov
or
inc
sub
pushf
test
add
mov
inc
xchg
adc
test
jne
sbb
push
add
mov
push
sbb
xchg
shl
sub
and
add
mov
scas
shr
loope
(bad)
js
jmp
enter
fnsave
jo
popa
pop
push
fild
out
aas
sub
sar
aas
sub
out
shl
movs
adc
xor
aas
gs
outs
cmps
addr16
daa
loopne
dec
jmp
inc
mov
adc
adc
adc
push
out
fcom
pop
arpl
cmp
mov
lds
push
add
push
dec
push
add
rcr
mov
pop
xchg
sub
aaa
dec
add
mov
and
sub
xor
cmp
push
sbb
jno
out
adc
movs
shl
loope
arpl
push
pop
es
mov
mov
add
div
aas
lock
rcr
cmps
mov
popa
sbb
or
ret
add
ss
mov
push
aaa
loopne
or
cmp
lahf
mov
push
js
xor
lods
xchg
mov
or
xor
push
in
sbb
inc
dec
add
mov
mov
fimul
(bad)
adc
mov
pop
outs
fcomp
inc
rcr
pop
mov
push
ror
fiadd
dec
cmp
imul
sti
add
add
imul
jb
push
cmps
xchg
sbb
xchg
mov
scas
cld
push
std
mov
push
movs
mov
mov
js
repnz
mov
sbb
aam
add
dec
or
ret
lock
xchg
push
cmp
adc
push
lds
cld
xchg
(bad)
add
push
ret
mov
test
enter
test
adc
js
add
lahf
aad
cmp
and
add
les
push
outs
sub
(bad)
push
mov
add
pop
xchg
inc
xchg
mov
addr16
imul
ficom
add
ins
rcr
loope
sub
and
mov
call
cmp
ret
nop
cmp
je
or
or
add
mov
div
inc
pop
cmp
mov
retf
cwde
sbb
mov
add
add
or
adc
mov
xchg
leave
fidiv
xchg
jecxz
test
frstor
sub
fadd
loope
out
push
out
push
daa
mov
into
not
and
push
push
popf
jnp
or
mov
sub
loopne
pushw
push
sub
inc
ins
test
or
adc
out
in
or
or
nop
mov
test
icebp
push
ficom
push
inc
dec
lock
mov
cmp
fistp
not
adc
test
xchg
icebp
in
loope
mov
hlt
addr16
loope
mov
mov
sub
add
sar
je
test
push
push
xor
cmp
dec
mov
jae
inc
mov
pop
test
dec
add
adc
lea
dec
dec
jecxz
das
jae
inc
xor
pop
jo
cs
mov
shl
mov
cmp
dec
test
mov
dec
mov
push
fs
sbb
loopne
mul
mov
xchg
dec
jo
jmp
cmp
mov
push
enter
mov
jmp
loope
popa
sub
xchg
adc
ins
xchg
lahf
inc
in
fist
call
fwait
pushf
popf
in
in
sahf
lahf
add
add
xchg
cmp
cli
cmp
lea
add
mov
imul
cs
add
popa
sub
jle
cld
push
bound
ins
add
add
jb
jae
cmp
out
sub
inc
push
lock
data16
out
xor
jne
add
and
pop
pop
pop
xor
sbb
cmps
addr16
repnz
int3
add
data16
pop
add
push
inc
fidiv
ja
jnp
jg
int3
shl
int3
int3
inc
shl
into
push
cmp
enter
scas
pop
xor
and
push
xor
test
dec
and
push
fild
cmps
gs
adc
ss
psllq
jbe
adc
test
sahf
fld
add
pusha
pcmpgtd
pop
sar
xchg
inc
add
js
int3
push
adc
add
jnp
call
inc
xor
ja
cmp
ds
adc
(bad)
jg
inc
push
dec
inc
dec
jne
dec
gs
outs
jb
mov
or
add
arpl
ins
popa
imul
pop
xlat
push
imul
pop
and
adc
push
fwait
pusha
stos
sbb
repnz
jb
movs
jne
sbb
pop
sbb
or
pop
mov
movsx
test
push
outs
gs
arpl
inc
outs
fs
pop
sub
sbb
mov
jo
jbe
std
outs
xor
inc
dec
outs
jbe
ins
imul
mov
imul
addr16
pop
and
stos
loopne
cvtpi2ps
or
sub
dec
dec
inc
push
iret
pop
sub
sbb
add
cld
pop
fmul
fisub
xor
leave
dec
imul
je
jo
gs
ins
test
push
fild
cmp
or
test
cpuid
xchg
ja
pop
push
pop
dec
dec
inc
add
ja
add
jbe
or
ins
pop
dec
xadd
push
pop
adc
aaa
aad
xchg
push
or
add
pop
add
jns
fild
ja
pop
or
push
or
inc
add
jle
inc
imul
xlat
pop
xor
sub
mov
jg
pop
enter
clc
jmp
outs
je
inc
sti
cs
jb
je
pop
sub
or
js
outs
push
jo
mov
pop
or
outs
std
pop
lock
mov
imul
gs
or
xchg
iret
mov
sbb
sub
addr16
pop
push
add
cmp
cmc
mov
outs
imul
outs
inc
jb
js
xor
fnsave
push
cmp
cmp
mov
pop
cld
das
add
(bad)
clc
and
jo
gs
mov
push
outs
outs
fild
cmp
aaa
mov
ret
add
pop
ror
xchg
dec
inc
push
in
jae
stos
jb
popa
pusha
xlat
pop
xor
sub
mov
fld
pop
or
test
push
adc
mov
inc
popa
je
iret
jmp
sbb
mov
outs
mov
addr16
pop
xor
cmp
sbb
inc
popa
outs
mov
(bad)
je
or
push
jb
jae
popa
inc
inc
mov
pop
inc
dec
pop
enter
clc
and
clts
xchg
or
mov
or
(bad)
mov
jg
lods
or
sub
mov
pop
add
pop
ror
or
loopne
jg
adc
ja
xlat
out
xor
add
outs
pop
and
dec
inc
pop
inc
dec
or
dec
inc
dec
sub
dec
jo
in
mov
sbb
or
imul
ins
outs
(bad)
loopne
fnstenv
sub
push
push
paddd
dec
outs
ins
add
je
mov
mov
push
push
inc
imul
(bad)
fiadd
enter
push
inc
jns
or
push
mov
pop
xchg
neg
sub
cmp
int3
or
div
push
loope
mov
or
pop
cmp
ss
or
add
aaa
pusha
mov
mov
cmp
push
dec
add
push
mov
fild
cmc
(bad)
push
cwde
push
pop
(bad)
and
sbb
sahf
(bad)
mov
popa
fwait
pusha
data16
scas
and
out
add
test
clc
cld
or
push
inc
adc
rcr
xchg
stos
and
jp
sbb
add
(bad)
cmp
dec
inc
jp
cmps
clc
or
lods
dec
imul
movs
lds
inc
push
enter
movd
scas
jo
fs
loopne
gs
data16
pop
ins
fisttp
or
inc
std
add
dec
test
rol
inc
and
jns
add
add
jbe
imul
in
push
sub
add
add
idiv
mov
pop
add
clc
sbb
or
adc
push
mov
dec
inc
ins
popa
jae
or
mov
mov
daa
pushf
mov
push
aaa
cmp
sbb
add
push
aad
or
or
bound
push
or
repz
lods
retf
fsub
ss
xor
cwde
cmp
inc
sbb
movs
mov
clc
jne
cmp
push
mov
xor
jge
test
pop
sbb
jae
mov
inc
fs
dec
mov
or
ins
ins
xor
ins
das
or
push
add
gs
jne
or
mov
pop
push
sbb
(bad)
rol
imul
mov
mov
cmp
retf
inc
and
cmps
push
loope
adc
je
fcomp
mov
cmp
jle
sub
or
popa
ins
aaa
shl
jno
add
mov
mov
loop
add
std
add
add
push
cmp
xor
in
lods
sub
sub
jne
add
push
add
or
mov
inc
and
imul
adc
jae
mov
mov
inc
mov
push
fucomip
ds
in
cld
inc
dec
mov
pop
enter
dec
lock
pop
mov
ins
pop
inc
push
pop
inc
pop
mov
push
clc
dec
in
aas
push
cmp
cmps
imul
lods
es
inc
pop
push
fidiv
push
call
es
neg
ds
pusha
rol
cmps
cmp
out
mov
adc
push
data16
and
xor
xchg
push
or
mov
add
pop
test
loop
inc
pop
repz
sub
sahf
mov
jbe
and
out
clc
push
sbb
or
sub
adc
pop
test
out
jecxz
pushf
shl
cmp
dec
popa
js
call
dec
and
sbb
adc
mov
call
or
mov
fst
lds
fs
xor
cmp
bound
add
jb
mov
daa
xchg
mov
jg
sbb
mov
nop
aas
jae
outs
mov
das
(bad)
cmpps
aas
mov
cmp
pop
push
movhps
das
icebp
pop
ja
mov
ss
push
dec
mov
out
add
ret
jmp
mov
ret
add
mov
or
mov
dec
jnp
loop
pop
or
push
outs
movs
xchg
dec
push
inc
clc
push
add
adc
pushf
add
add
push
jecxz
imul
push
fisttp
pop
arpl
stos
mov
loopne
xchg
jo
popa
popf
test
je
and
add
(bad)
test
pop
loopne
lock
pop
je
out
dec
fcom
pop
dec
gs
outs
jb
and
ins
and
add
push
fmul
cmps
dec
addr16
data16
jmp
ins
imul
push
xchg
or
cmps
int
mov
dec
and
cmps
add
lahf
lock
stc
or
int
pusha
not
mov
imul
rol
cdq
scas
fs
add
rcr
clc
or
and
sbb
fild
mov
nop
jo
xchg
add
fldln2
xchg
dec
cmp
js
das
fcomp
pusha
mov
jbe
mov
mov
adc
push
and
nop
jno
xchg
and
xchg
adc
inc
mov
inc
scas
ss
mov
jp
mov
enter
int3
nop
inc
push
outs
jne
mov
call
les
mov
imul
inc
or
or
and
outs
ror
sub
dec
scas
loop
mov
sub
adc
adc
inc
xor
int3
add
ret
loopne
push
xor
pop
loopne
shl
arpl
mov
pop
das
push
cmps
inc
fcom
pop
add
push
add
or
jo
and
adc
cmp
movs
outs
sbb
arpl
pop
xor
cmp
shl
lds
and
push
and
inc
or
sbb
test
movs
cmp
mov
or
ja
pop
push
test
adc
inc
pop
sahf
push
or
dec
cmp
sbb
daa
bound
ss
dec
imul
inc
mov
mov
je
inc
movs
retf
push
mov
push
arpl
shl
ret
push
loop
or
lods
js
adc
repnz
dec
sub
int
test
push
test
mov
or
push
push
or
add
add
or
add
clc
fld
push
popa
ins
jne
test
inc
and
(bad)
mov
int3
sbb
push
push
or
mov
mov
mov
mov
ret
lds
add
or
mov
and
push
or
loop
or
sub
sbb
sbb
lods
xor
ret
inc
pusha
cwde
mov
sub
bound
xor
lds
les
ror
aam
push
push
iret
xchg
cmp
cmp
add
pop
mov
mov
aam
es
das
aam
daa
mov
push
push
dec
out
add
aas
and
aaa
daa
(bad)
(bad)
imul
inc
mov
push
dec
mov
pop
jne
xor
les
or
loopne
gs
clc
or
jo
jns
inc
mov
mov
sti
sbb
scas
aad
(bad)
shl
push
xchg
xor
pusha
mov
mov
cmp
pop
xor
out
jmp
mov
jmp
or
shl
and
das
pop
push
in
inc
mov
aas
pusha
icebp
data16
sar
push
and
mov
repnz
js
mov
add
adc
adc
or
jne
push
push
scas
bound
out
loopne
stos
inc
xor
outs
addr16
jecxz
fiadd
inc
xor
loopne
mov
xlat
push
dec
mov
leave
ja
jbe
mov
xchg
push
dec
ror
retf
add
loopne
shl
or
std
shl
cmp
mov
push
jmp
or
pusha
mov
ins
cwde
inc
movs
rcl
or
jp
mov
or
add
stos
xchg
inc
xor
inc
xchg
pop
fst
je
(bad)
sub
sub
sbb
sbb
fwait
pusha
and
cdq
cs
loopne
cmp
lock
aam
aas
jns
mov
dec
ja
sub
pop
xor
push
fs
add
or
loope
out
xor
ret
rol
rol
inc
pop
jne
add
aas
mov
aad
add
push
mov
xlat
rol
movs
pop
ins
inc
dec
aam
mov
rol
dec
sbb
mov
mov
setp
add
pusha
in
test
inc
fild
and
nop
test
or
cmp
push
clc
adc
js
push
test
push
xlat
movs
inc
das
addr16
and
mov
and
bound
adc
movs
in
sub
jbe
or
shr
jmp
das
(bad)
loop
scas
sti
add
mul
cmp
int3
out
dec
or
push
add
sbb
push
pop
aaa
jb
xchg
int3
clc
clc
push
or
add
push
sti
iret
icebp
add
lds
xor
mov
pop
sbb
sbb
call
and
cmps
out
cwde
mov
sbb
xchg
je
mov
sub
cmp
mov
test
cli
jnp
or
xor
sub
cmp
push
or
adc
(bad)
pop
sub
retf
adc
in
es
xchg
or
outs
ja
scas
mov
add
inc
ret
mov
push
cwde
push
jo
pop
loopne
enter
add
or
push
out
mov
or
pop
or
ja
sub
add
mov
adc
loopne
shl
dec
push
and
cmp
mov
xchg
test
js
push
push
inc
(bad)
push
cmps
ret
data16
jnp
out
or
and
xor
jbe
leave
mov
arpl
sub
add
push
inc
or
aas
pop
ss
adc
ja
mov
pop
pop
pop
scas
(bad)
rol
popa
cmp
jmp
pop
inc
bound
pop
inc
jge
adc
push
arpl
push
fwait
dec
int3
pop
aaa
dec
fs
pop
dec
clc
pop
inc
call
or
cld
mov
pop
or
or
sbb
pop
jo
add
xchg
sar
out
stos
(bad)
call
xchg
es
es
pop
adc
(bad)
cmp
pusha
mov
mov
push
or
add
inc
aas
or
push
xor
cmp
or
cmp
sbb
inc
mov
stos
inc
xor
pop
js
and
push
cmc
sbb
(bad)
lods
pmullw
mov
jae
aad
adc
xchg
aad
push
mov
sbb
lea
xchg
sbb
das
pop
push
push
push
push
ret
outs
pop
mov
xor
mov
xor
cmc
or
out
xchg
inc
int
cmp
pop
inc
push
xchg
mov
pop
mov
ja
daa
add
loop
cld
aam
inc
pop
into
ins
add
and
or
imul
mov
cmp
sub
out
icebp
ds
pop
xor
cmp
loop
gs
cmps
call
inc
add
sbb
daa
imul
lahf
cmp
ret
fbld
loopne
add
or
add
in
mov
jbe
adc
adc
push
add
not
pop
and
dec
fisubr
add
pop
pop
test
cmp
adc
mov
aaa
and
cmp
and
shl
enter
outs
mov
in
mov
stos
cvtps2pd
push
stos
test
aas
mov
push
dec
push
inc
test
adc
mov
or
add
pop
stc
adc
push
adc
adc
xor
and
test
or
std
out
and
arpl
or
test
loop
outs
dec
inc
fmul
push
jge
or
add
shl
ret
mov
add
push
sbb
test
mov
mov
dec
es
sbb
aaa
jb
mov
add
out
xor
xbegin
adc
jmp
or
sbb
adc
cmp
pushf
pop
sbb
js
lods
stc
punpcklwd
cmp
jo
push
pushf
fistp
xor
popf
xchg
push
mov
and
popf
imul
sbb
ret
addr16
push
pop
in
jne
or
rcl
wbinvd
ror
jne
xor
xor
mov
cmp
jg
fstp
cli
das
adc
push
push
jg
ror
sbb
xchg
sbb
and
(bad)
out
lods
mov
lock
inc
dec
mov
jb
or
mov
xchg
pop
or
pop
dec
jo
dec
data16
adc
sbb
and
sbb
ins
push
jne
(bad)
mov
jg
lea
out
or
sub
xchg
aaa
xlat
dec
fs
outs
mov
sbb
(bad)
imul
punpcklbw
loope
ins
inc
inc
push
fcmovu
inc
inc
ja
jns
data16
or
xchg
push
xchg
xor
(bad)
push
pop
mov
pop
neg
dec
fld
mov
inc
int3
fstp
pop
es
das
pop
call
pop
inc
or
popa
jbe
and
inc
jo
pop
mov
add
fnstsw
aaa
dec
outs
jl
and
cmp
pop
mov
xchg
or
mov
mov
movs
loope
sub
and
mov
test
and
mov
xchg
punpcklwd
ret
dec
dec
into
dec
inc
adc
data16
or
cmp
mov
xor
lea
sbb
stos
xor
xchg
fisub
add
dec
or
fs
(bad)
mov
icebp
add
mov
inc
mov
sub
loopne
aam
adc
xor
ja
idiv
pop
cmp
enter
pop
inc
outs
mov
out
push
push
pushf
adc
in
mov
push
outs
push
fwait
das
mov
xchg
inc
and
dec
push
loopne
push
mov
imul
xor
or
gs
outs
call
ja
in
gs
lea
push
arpl
sub
and
jp
cdq
pop
setns
je
mov
inc
fs
test
test
ins
mov
fsubr
cdq
imul
mov
push
inc
lahf
(bad)
ja
add
jg
frstor
or
push
retf
addr16
or
fsub
icebp
push
pusha
shl
js
pop
dec
loop
pushf
jp
ins
mov
mov
mov
mov
adc
sahf
loope
into
and
mov
jp
rcl
add
sbb
aaa
shl
sar
das
pop
push
and
pop
sti
mov
mov
add
push
push
push
mov
lea
movs
add
inc
cld
mov
in
in
jg
call
mov
push
sbb
push
push
push
sub
push
or
and
ror
sub
adc
or
outs
outs
daa
enter
inc
mov
int3
mov
sub
mov
pop
jb
lea
fsub
add
retf
push
and
ins
fcomp
lock
in
push
pop
imul
hlt
push
push
fcomp
sbb
push
lock
aam
in
inc
in
in
push
fsub
push
inc
(bad)
ss
or
sbb
push
pushf
jge
enter
into
add
or
jno
adc
pop
push
fdiv
test
idiv
lea
adc
aas
in
mov
ja
dec
or
sbb
cld
rol
sbb
pushf
and
cmp
rcr
movnti
call
pop
outs
test
dec
and
loopne
and
sti
test
cmp
xchg
add
or
pop
mov
pop
ret
xor
sub
idiv
(bad)
mov
jmp
and
test
je
shr
xor
jmp
adc
out
add
rol
jg
cmp
add
mov
lea
push
in
stc
push
mov
cmp
pop
add
(bad)
dec
test
jl
inc
xor
movzx
xor
and
mov
or
repz
pop
jp
dec
jne
mov
sbb
imul
and
stc
sub
inc
mov
push
ret
mov
add
add
or
add
and
std
aas
sub
cmp
jl
xchg
jmp
cmp
jl
sbb
mov
pop
mov
bswap
pop
shr
ret
mov
xor
sub
(bad)
cli
push
ja
jmp
push
inc
out
call
fst
sbb
pop
cs
ror
rol
sti
test
ret
lea
mov
(bad)
add
cmp
shr
cmps
(bad)
sub
fadd
mov
xor
mov
mov
(bad)
test
add
xchg
inc
dec
mov
jae
pop
js
sbb
fadd
ins
(bad)
je
xor
fstp
mov
mov
xchg
inc
dec
jne
and
mov
inc
(bad)
inc
push
int
shl
push
xor
adc
enter
adc
xor
sbb
lock
adc
or
and
add
push
ror
push
js
mov
push
cli
push
push
push
add
cld
xor
mov
dec
(bad)
aas
jo
dec
test
jl
inc
xor
mov
mov
lea
call
outs
fcomp
lea
clc
mov
shr
mov
pop
adc
cmp
add
dec
jne
retf
jo
loope
dec
cld
les
call
in
sbb
cs
dec
mov
or
pop
cld
adc
adc
mov
ret
jmp
jmp
xchg
jecxz
and
add
push
sub
push
mov
mov
mov
jae
push
mov
or
add
lock
mov
push
push
aaa
icebp
mov
jo
imul
(bad)
loop
mov
or
cwde
adc
inc
push
adc
pop
popf
rol
call
in
pop
(bad)
pop
push
fisub
nop
pop
jns
pop
mov
inc
mov
loopne
add
add
or
mov
inc
mov
and
xlat
movs
and
cmp
xor
pop
sub
pop
fnstsw
sar
add
or
push
fwait
pop
jmp
mov
fcomp
lods
mov
add
(bad)
mov
pop
dec
in
mov
add
jne
(bad)
ins
or
mul
jge
inc
mov
pop
push
fdivr
sti
mov
xchg
sub
adc
adc
dec
jne
mov
sub
mov
mov
outs
push
sti
inc
inc
add
popf
adc
push
inc
dec
mov
in
xchg
or
mov
fmul
or
cmp
cs
mov
add
sbb
les
lea
pop
pop
xor
sbb
add
loop
sub
add
jne
nop
add
into
add
shl
dec
adc
or
cmp
inc
pop
dec
jmp
xchg
xor
loope
inc
xor
and
mov
dec
mov
lock
sub
nop
sbb
fwait
scas
or
(bad)
daa
shl
or
dec
ins
je
test
icebp
loopne
xor
jae
fidiv
mov
add
(bad)
ror
dec
add
pop
jo
jle
jle
push
push
mov
clc
or
outs
stc
push
pop
ja
pop
xchg
les
ret
neg
add
jne
mov
retf
in
jl
mov
das
mov
(bad)
fild
mov
cmp
jge
mov
lea
mov
dec
test
fwait
loope
sbb
pop
pop
xlat
rcr
adc
xchg
adc
mov
sbb
(bad)
xlat
outs
sbb
inc
or
shl
add
add
rcr
mov
and
movs
addr16
idiv
mov
jle
adc
dec
or
shl
xchg
add
add
mov
lock
shl
sar
cwde
jge
outs
sub
adc
mov
add
add
loopne
jbe
jl
mov
or
iret
mov
push
test
mov
(bad)
(bad)
adc
sbb
enter
pop
cmps
inc
mov
fldcw
adc
jbe
es
fist
jmp
daa
(bad)
sub
mov
sbb
jmp
xchg
lock
sbb
out
(bad)
mov
xchg
call
pop
je
jbe
inc
out
data16
cmp
stos
je
push
cmps
je
push
cld
cmp
mov
sub
jg
bound
cmp
mov
lock
les
movs
adc
cmp
and
push
cwde
jmp
pushw
jne
mov
setl
psubusw
fs
xor
int3
xor
inc
and
rdtsc
sbb
jne
xor
xor
xor
aad
or
push
adc
push
sbb
or
scas
jnp
movs
call
mov
fild
rol
repnz
xor
add
or
add
xor
fucomip
lds
mov
dec
jnp
adc
or
xor
or
(bad)
sbb
or
pop
xor
sti
adc
xlat
shl
je
mov
in
jmp
aam
xor
xor
bound
aaa
sub
mov
in
sbb
push
inc
(bad)
loop
mov
add
inc
xchg
xor
icebp
cmp
mov
data16
test
icebp
sub
push
rol
push
test
dec
gs
adc
jno
add
inc
mov
xchg
lock
lds
xchg
jp
cmp
mov
dec
cmps
ja
scas
mov
pop
inc
mov
rcr
cmps
jne
push
mov
lds
(bad)
cwde
dec
pushf
jo
adc
jne
fs
pop
dec
xchg
inc
adc
xor
jae
adc
leave
jbe
xor
outs
pushf
out
push
xchg
jns
cmps
adc
sbb
add
dec
and
hlt
mov
sar
rcr
(bad)
mov
adc
cld
scas
adc
jecxz
inc
sti
add
call
push
inc
add
jbe
rcr
xor
(bad)
fwait
call
jne
lea
inc
mov
mov
or
loop
nop
xor
leave
aas
into
and
inc
leave
jecxz
sbb
push
test
fld
test
jecxz
jge
mov
addr16
adc
xor
(bad)
ror
jl
nop
xchg
mov
sbb
ffreep
lea
pop
mov
ret
inc
jl
mov
scas
sbb
adc
js
sbb
mov
push
jge
adc
dec
dec
test
push
loop
sbb
mov
push
popf
sbb
adc
sbb
xchg
sbb
pop
test
es
add
xchg
out
mov
and
aas
push
mov
call
fist
sbb
pop
sbb
fs
ds
lock
enter
adc
test
inc
and
or
fldenv
ja
and
and
outs
xchg
add
icebp
adc
pop
loopne
inc
test
jbe
fisub
ja
call
cmp
out
pop
add
add
aad
and
or
loopne
repnz
push
push
cmp
hlt
push
xchg
push
cmp
mov
mov
adc
sete
idiv
xor
scas
add
mov
adc
push
push
loop
(bad)
sar
lea
push
push
push
ret
xchg
push
or
adc
xlat
sbb
es
cmp
jne
sti
fwait
jecxz
or
or
loope
or
add
mov
je
jl
es
push
mov
pop
add
repnz
mov
add
sbb
outs
fistp
movzx
mov
push
mov
or
sar
sbb
mov
mov
dec
push
shl
retf
jle
adc
mov
add
(bad)
sub
push
dec
jo
add
push
or
fwait
pusha
sub
sub
sahf
pusha
mov
sub
xlat
in
cs
add
into
cld
lea
xor
push
mov
push
out
out
sub
inc
mul
je
mov
adc
popa
imul
jnp
add
loopne
(bad)
imul
mov
mov
jne
das
or
fldenv
fidivr
lds
mov
mov
test
push
out
aas
sbb
mov
mov
and
in
data16
jl
loopne
push
sbb
sub
jmp
push
adc
add
lods
sahf
and
(bad)
mov
jo
dec
lock
mov
push
icebp
mov
jo
loopne
add
add
dec
pop
hlt
xor
sbb
add
sbb
(bad)
movs
hlt
add
add
not
and
mov
shr
pusha
sbb
fimul
jl
(bad)
inc
fxch
xchg
(bad)
aas
push
add
les
push
add
xor
dec
es
ret
xlat
sub
push
sub
icebp
je
cmp
aad
imul
push
stc
xor
mov
fadd
mov
xor
pushf
push
movs
in
sub
and
dec
add
pushf
sbb
mov
or
aaa
add
dec
inc
in
ret
add
and
xlat
mov
ja
cwde
cmp
ins
nop
aad
out
hlt
jnp
sub
or
sub
jl
and
arpl
pusha
adc
cmp
aaa
inc
dec
and
push
jmp
fdiv
pop
ja
mov
mov
lea
push
fstp
outs
in
xlat
fist
aaa
xor
mov
inc
pop
outs
inc
jno
xor
push
int
mov
pop
push
inc
adc
sbb
mov
sbb
add
outs
(bad)
loope
jo
mov
es
xor
push
jmp
pop
push
mov
bound
in
stc
(bad)
movs
dec
mov
or
fild
mov
cmp
add
pop
movs
jp
in
nop
mov
dec
fisttp
or
scas
mov
test
mov
xor
cwde
sti
or
dec
test
dec
lea
cmp
rep
ret
sub
inc
sbb
popa
sbb
xor
jmp
xor
sub
test
mov
mov
xchg
add
pop
sbb
cmp
jb
mov
in
mov
push
or
sahf
lea
or
push
cmp
jge
out
or
cmp
dec
rcl
add
mov
imul
inc
cli
dec
xor
and
or
or
icebp
dec
lock
mov
fiadd
cmp
mov
push
lea
test
cmp
out
out
mov
adc
sbb
and
jbe
inc
ss
test
scas
(bad)
addr16
mov
lock
jnp
adc
xchg
scas
rcl
cmp
popa
in
mov
mov
mov
popa
cli
popa
sbb
pop
cld
mov
mov
call
fsubr
mov
add
(bad)
mov
jmp
pusha
dec
add
mov
inc
pop
rol
lods
jmp
cdq
pop
mov
inc
inc
sbb
or
adc
sbb
mov
aad
out
movs
aam
(bad)
add
call
shr
push
mov
mov
cmc
in
mov
retf
pop
hlt
dec
fcom
shl
data16
movzx
cmp
sbb
and
sbb
dec
push
push
add
out
test
cmp
pop
pushf
add
inc
add
dec
jne
les
push
cld
iret
pop
sbb
or
(bad)
shr
pop
out
mov
sbb
mov
mov
or
ins
pop
mov
mov
or
dec
dec
enter
dec
mov
loop
daa
dec
cld
mov
stos
lahf
sar
mov
mov
xchg
mov
dec
push
sbb
jecxz
push
rol
add
dec
inc
adc
sti
pushf
js
cmovne
lea
inc
inc
push
call
shl
or
popa
sub
jb
mov
mov
jns
sub
jb
adc
jl
ret
or
jo
jle
cmp
ja
push
xchg
repz
push
iret
pusha
xor
add
jmp
jbe
add
adc
and
push
pop
or
add
inc
pop
jmp
push
adc
push
retf
pop
push
mov
sbb
or
div
inc
xor
jbe
and
shr
or
mov
and
cmp
je
cmp
dec
jne
(bad)
and
sbb
add
mov
sar
outs
scas
nop
aas
add
sbb
mov
xchg
mov
mov
rcl
and
add
pushf
sub
ficomp
sub
rcr
js
cwde
xchg
adc
xlat
dec
das
or
cld
scas
inc
sbb
adc
in
add
sub
sbb
arpl
or
push
inc
jp
mov
movs
popa
cmp
adc
call
push
add
mov
loopne
push
xor
adc
xchg
and
add
cmp
test
and
inc
pop
add
adc
cmp
mov
inc
jno
add
push
sbb
or
aam
push
data16
(bad)
jns
and
cwde
pop
mov
inc
inc
stos
add
ret
js
or
and
xchg
adc
jmp
mov
push
fisttp
stos
mov
add
jmp
mov
inc
inc
dec
test
jo
mov
jb
inc
es
mov
dec
mov
push
cmp
jne
push
jbe
dec
shl
loopne
lods
push
inc
and
ret
mov
push
adc
mov
fcomip
jmp
loopne
ins
mov
(bad)
push
shl
or
or
shl
or
cmp
add
mov
xchg
ins
in
xchg
adc
mov
or
add
movs
outs
out
shl
push
ror
push
(bad)
sbb
sbb
mov
cld
cmp
test
pop
jecxz
(bad)
adc
ins
shl
mov
inc
movs
loop
dec
xor
leave
mov
lea
and
cmp
mov
lea
stc
mov
push
mov
dec
xchg
aas
pop
inc
inc
xor
jo
inc
mov
pop
loopne
out
sbb
and
xchg
xor
data16
lea
mov
pop
inc
rcr
jle
popa
push
push
in
lods
je
sbb
ret
adc
push
aaa
dec
into
jge
sbb
cmp
sar
jmp
(bad)
pop
cmp
aaa
dec
xchg
mov
adc
lock
inc
inc
inc
hlt
dec
sete
mov
or
bound
jo
sbb
enter
loope
mov
test
or
dec
pop
adc
push
fistp
or
adc
and
es
or
sub
dec
daa
out
push
add
inc
inc
xor
xchg
or
fiadd
dec
adc
push
adc
jg
push
mov
and
pop
or
xor
push
jge
addr16
fdiv
cmps
imul
sub
or
or
push
fiadd
fs
js
es
xor
iret
cmp
or
cmp
add
sub
pop
pop
cld
cli
pop
cmp
xchg
jne
xor
adc
es
push
call
add
xchg
pop
push
jb
(bad)
scas
add
or
cmp
je
(bad)
out
lea
or
in
push
or
pusha
(bad)
push
jecxz
inc
cld
lahf
xor
mov
inc
loopne
mov
push
mov
clc
aam
es
cmp
fsub
js
pushf
or
pop
aad
inc
fidiv
and
push
add
pop
mov
jno
inc
ds
mov
add
ss
xor
or
or
sbb
rol
lea
sub
cwde
cmp
dec
jmp
pop
call
test
sbb
inc
push
inc
adc
xor
or
cs
add
dec
xor
mov
adc
rcr
rol
push
sbb
xchg
push
js
xchg
mov
push
mov
shl
pop
cmp
into
rcl
xor
stos
xchg
in
xchg
int
imul
dec
daa
or
call
add
(bad)
dec
dec
add
add
ror
pop
mov
mov
in
jmp
push
add
lea
sbb
in
(bad)
in
in
pop
push
inc
es
mov
adc
sbb
add
pop
xchg
sbb
sbb
lock
out
add
test
jl
sub
and
or
daa
clc
sti
xchg
shl
adc
imul
add
clc
or
push
xor
pushf
jo
xor
or
ins
pusha
bndldx
xor
les
pop
sub
cmp
sub
ds
call
push
mov
mov
push
jmp
xchg
cld
daa
cdq
sub
in
jg
imul
test
jns
fadd
sar
dec
mov
fistp
inc
jne
ss
and
aaa
movs
je
push
fiadd
add
fimul
retf
shl
mov
pop
dec
inc
xchg
dec
xor
push
jecxz
nop
sub
mov
inc
sbb
(bad)
and
je
hlt
push
or
mov
add
add
xchg
sbb
sub
sub
sbb
and
clc
inc
push
dec
push
jg
loopne
sub
daa
or
add
add
inc
jge
or
jbe
mov
inc
xor
add
add
imul
paddw
ret
add
repnz
icebp
mov
mov
jl
pop
clc
fcmovbe
adc
fbstp
ret
or
sar
mov
pop
lods
rol
pushf
es
jge
mov
ror
add
or
fmul
cmp
cmps
adc
cdq
sub
pop
push
cmp
cmp
arpl
or
stos
shr
loop
and
cwde
loopne
mov
ret
fstp
inc
adc
adc
clc
sbb
test
add
add
in
xor
push
ins
test
rcr
lahf
rcl
push
xchg
and
pop
popa
(bad)
mov
xor
(bad)
rcr
in
add
jmp
loopne
in
and
outs
cmp
cmp
xchg
and
inc
ja
int
or
add
pop
cs
loope
and
push
adc
je
push
adc
pop
pop
ss
push
mov
stos
nop
dec
sbb
in
sbb
cmps
add
xchg
mov
or
rcr
xor
push
stc
fsubr
jns
iret
cdq
loope
cli
add
and
sub
push
dec
pushf
push
mov
push
jmp
cmp
xor
or
into
xchg
daa
push
push
cmp
or
sub
xlat
xor
fdivr
push
(bad)
ror
fisttp
enter
idiv
ins
xor
xor
pop
sub
push
fmul
jo
pop
jecxz
idiv
mov
adc
and
jmp
dec
xor
and
mov
mov
or
mov
sub
pop
dec
add
dec
sbb
sub
scas
ror
retf
into
xchg
in
mov
test
cmp
jge
add
cmps
add
xor
ss
xchg
add
jge
and
cmps
dec
push
dec
add
outs
add
mov
hlt
scas
or
add
in
dec
lock
hlt
and
call
add
es
mov
loopne
mov
push
test
ror
inc
imul
sub
fsubr
test
imul
sub
and
pusha
sbb
or
sar
inc
ds
mov
fcomp
add
pop
jne
pop
fadd
mov
cmc
mov
aas
lea
imul
in
sbb
test
adc
and
outs
push
adc
jne
stos
cmps
scas
xor
test
jle
xor
xchg
fnsave
pop
push
mov
pop
or
add
ffree
push
lock
dec
pop
inc
cmp
xchg
leave
mov
lock
daa
bound
pop
not
sub
jmp
and
or
mov
inc
and
neg
loope
enter
loopne
sub
push
shr
test
pop
cld
imul
cmp
shr
add
jecxz
or
mov
ret
sbb
add
add
and
(bad)
lock
ja
sub
lock
mov
push
pop
add
jne
rol
dec
pop
add
add
push
test
or
mov
jo
push
sub
lds
mov
sbb
jno
mov
or
jg
adc
or
inc
inc
js
pop
mov
mov
and
sbb
jns
das
ins
and
test
(bad)
and
or
mov
push
rcl
push
xor
and
call
jne
mov
push
in
shl
or
ret
ins
or
call
in
xor
movnti
xchg
xchg
fisub
fsubrp
aad
xor
fldenv
and
adc
data16
ins
pop
les
pusha
pop
dec
das
push
sub
or
jmp
cmp
stos
int3
pop
fsubr
push
retf
add
cmp
mov
mov
data16
fist
dec
mov
add
fnstenv
jae
xchg
outs
adc
add
push
add
retf
inc
mov
xor
mov
add
xchg
pop
mov
push
call
mov
fdiv
pusha
jge
inc
hlt
add
jo
test
mov
mov
push
inc
retf
fmul
inc
add
push
push
lds
jo
test
lock
cld
add
dec
jnp
sub
jb
call
lods
dec
push
test
int
push
adc
xchg
add
and
mov
mov
pop
test
fidiv
test
jbe
cmp
aas
push
enter
and
jnp
xor
cmp
add
push
js
js
and
xlat
jg
mov
dec
into
and
retf
xor
fistp
sbb
retf
cwde
push
sub
mov
vpsubb
rcl
sub
add
data16
and
sbb
lea
xor
jbe
cwde
aad
rcr
dec
cmp
shl
mov
and
or
adc
outs
frstor
xor
jo
adc
pop
sbb
mov
pop
nop
imul
adc
pusha
arpl
sub
lods
std
fisttp
xor
cmp
lock
adc
sub
jo
ror
inc
pop
test
or
inc
sbb
int3
imul
mov
in
xor
mov
xlat
dec
push
sub
ja
add
in
in
sbb
repnz
js
mov
adc
js
or
ret
or
inc
sub
fadd
sbb
sub
lea
mov
add
jmp
sub
mov
cmp
push
fcomp
cdq
jne
xchg
pop
inc
adc
movs
call
call
xor
jge
sbb
jp
hlt
cmp
sete
clc
aam
arpl
xor
inc
popa
fwait
add
ret
sub
call
lock
sbb
shl
jo
ja
cmp
cmp
xlat
inc
xor
or
adc
sbb
xchg
bound
lods
lods
sbb
inc
sub
(bad)
sub
mov
push
in
in
sub
mov
mov
ss
or
into
fdivr
test
fidiv
mov
mov
hlt
jmp
pop
mov
popf
cmp
dec
fwait
jno
js
or
sub
xchg
xor
pop
sub
sbb
xor
or
xchg
sub
dec
pop
sbb
inc
not
icebp
dec
bt
mov
pop
xchg
xor
mov
jg
aam
ret
mov
call
mov
imul
xlat
dec
pusha
xchg
or
ss
cmc
xor
jmp
ret
sbb
push
adc
test
add
aaa
add
retf
fdiv
push
loop
push
jb
mov
or
arpl
js
add
xor
add
push
outs
push
mov
jp
cmps
stos
sub
or
push
mov
add
cmp
jmp
data16
ret
mov
sub
retf
xor
sbb
sub
and
enter
sbb
retf
xchg
(bad)
imul
xchg
ss
je
sub
xor
xor
adc
and
dec
inc
popa
mov
fiadd
iret
cmp
lock
inc
adc
fdivp
arpl
dec
inc
stos
or
mov
inc
dec
sbb
mov
(bad)
fmul
(bad)
scas
fisttp
push
or
dec
ret
outs
es
push
dec
pop
retf
bound
imul
push
push
push
add
adc
jb
cmp
test
add
mov
fstp
push
push
sbb
mov
outs
ret
add
mov
and
jl
adc
mov
and
dec
je
jbe
retf
outs
ins
add
push
loope
jmp
ds
add
mov
push
enter
sub
dec
inc
call
cmp
inc
sbb
pop
sbb
or
dec
pushf
popa
sbb
movs
pop
mov
mov
js
nop
pop
inc
and
dec
sub
dec
js
inc
clc
add
test
or
mov
int3
jo
or
nop
bound
(bad)
sub
sub
jnp
jecxz
sbb
movs
scas
cmps
cmp
movs
cmp
lahf
pusha
add
popa
pop
bound
sub
fist
mov
inc
cmp
sti
sbb
loopne
sub
iret
add
add
retf
push
adc
sahf
push
add
frstor
jecxz
add
pop
and
mov
inc
shl
push
or
in
push
pop
add
add
mov
adc
(bad)
and
jmp
and
inc
or
ins
push
ins
push
dec
clc
cdq
movs
or
push
jo
and
inc
dec
or
inc
sub
fadd
ja
inc
lock
xchg
loopne
mov
dec
sti
push
in
adc
xchg
inc
sub
aam
mov
test
jb
jo
inc
mov
sbb
add
and
outs
sbb
mov
mov
rol
sub
pop
mov
push
inc
retf
or
or
sub
mov
dec
xchg
adc
and
cmp
pop
push
clc
and
sysret
pop
and
sbb
pop
sahf
cmp
push
test
in
or
pop
jge
add
mov
ret
call
sbb
ror
cmp
push
or
xchg
add
push
jnp
inc
imul
dec
ins
sbb
cmp
int3
scas
sbb
out
imul
push
lods
add
add
int
mov
and
rol
pop
and
ja
pop
push
jns
pop
clc
sub
mov
cli
and
imul
scas
ror
push
sub
je
sub
push
loopne
push
add
je
test
adc
iret
fwait
test
push
pop
pop
mov
xchg
popa
ins
pop
inc
cmp
inc
push
pop
mov
retf
sbb
mov
and
mov
adc
and
xor
pusha
sbb
add
xor
les
cmp
hlt
adc
pop
call
xor
call
mov
and
add
mov
outs
add
add
sbb
bound
jbe
jmp
imul
adc
push
mov
adc
xchg
mov
cmps
aam
or
loope
add
sub
cmp
push
xchg
sbb
sbb
mov
mov
add
jo
jo
retf
(bad)
cmp
adc
(bad)
mov
cmp
adc
enter
ret
add
sub
inc
add
inc
lahf
mov
idiv
cmp
test
jb
inc
xor
sub
cmp
jb
mov
sub
adc
shl
and
add
pop
jb
sbb
pop
push
sub
add
inc
dec
jne
sbb
inc
and
pop
push
dec
sub
or
pop
mov
lds
dec
in
cmp
into
dec
sub
stos
push
(bad)
push
push
adc
sub
sti
nop
div
adc
mov
jns
push
popf
pusha
enter
push
and
dec
(bad)
mov
adc
fstp
or
xor
out
rcl
(bad)
xchg
xchg
mov
mov
lock
je
and
push
cmp
hlt
jne
push
pop
sbb
xor
jge
jb
pop
ja
cmp
push
bt
jae
js
push
adc
jg
clc
imul
or
and
pop
push
jle
(bad)
sub
jb
inc
mov
xchg
adc
rcr
dec
push
cmp
adc
push
push
lock
jne
push
cmp
ja
adc
xchg
sbb
cmp
inc
call
and
adc
lock
cmp
mov
add
mov
inc
mov
pop
shl
push
ret
inc
adc
cmp
pop
cwde
hlt
or
xchg
xchg
shl
add
push
lock
push
rcr
sbb
shl
mov
lea
jo
fs
lahf
push
add
sti
inc
std
popf
adc
sub
std
movs
adc
loop
mov
jecxz
retf
je
or
popa
cmp
sbb
pusha
jle
push
lea
cmp
mov
lods
and
pushf
pop
test
test
not
push
dec
cmp
(bad)
and
add
movzx
mov
sbb
xchg
dec
inc
push
aam
sub
adc
sbb
adc
mov
loope
or
dec
add
retf
push
cwde
loop
dec
nop
and
mov
mul
mov
hlt
jne
call
div
or
or
push
cmp
ror
mov
xor
inc
test
mov
ins
clc
push
push
rcl
stos
pushf
lock
cld
adc
mov
mov
add
scas
(bad)
lea
and
sub
jmp
and
push
push
push
lock
mov
sbb
clc
sub
pop
(bad)
and
push
lea
lea
or
movs
pop
pushf
add
not
push
cmp
add
or
sub
and
test
sbb
push
push
dec
sbb
adc
fcomp
add
int3
push
mov
sub
data16
jb
sahf
push
dec
push
sub
dec
lods
sbb
cmps
pop
aad
inc
test
je
call
adc
je
cld
mov
movs
jg
jg
or
call
cld
or
dec
das
popw
out
inc
xchg
in
cwde
ror
das
mov
pop
es
bound
test
rcl
mov
ret
stos
iret
or
xor
je
shr
mov
dec
mov
test
je
mov
int3
pop
dec
icebp
or
outs
cmp
je
mov
push
jb
dec
(bad)
fidivr
inc
or
mov
stos
(bad)
jg
fldz
fld
fcompp
fstsw
sahf
or
call
jmp
add
cmp
sub
or
sbb
lock
and
jmp
jnp
out
push
jne
add
sbb
push
retf
fdiv
lods
leave
test
fstp
fwait
and
sub
(bad)
xchg
or
sbb
stos
jb
aad
icebp
ss
out
mov
mov
mul
stos
fwait
sbb
mov
fdiv
je
jle
mov
daa
fild
cs
fmul
fld
fdivp
fadd
std
adc
or
test
add
aaa
fwait
pop
pop
sub
lock
pop
add
das
add
cmps
ret
inc
int
add
bound
mov
mov
xchg
mov
mov
cs
mov
push
or
mov
push
pop
jbe
add
mov
clc
jnp
mov
aaa
xor
jmp
ss
sti
inc
clc
nop
dec
sub
aam
inc
mov
jo
cmc
in
(bad)
mov
call
pshufw
hlt
addr16
jmp
mov
mov
mov
push
xchg
mov
dec
or
sbb
in
hlt
jnp
fs
inc
dec
jne
sub
ins
push
sub
lods
xchg
push
das
mov
add
or
mov
fdiv
mov
in
sub
mov
add
push
ds
or
add
xchg
or
adc
into
jo
mov
je
aaa
cmc
and
adc
mov
xor
stc
fldenv
add
jg
push
xchg
add
add
shl
sub
aaa
push
mov
in
pop
cmp
lods
sbb
test
add
mov
jmp
cmp
xchg
xchg
jmp
call
push
fiadd
(bad)
pop
adc
push
jae
mov
push
mov
fcmovnb
jmp
push
dec
jmp
movzx
(bad)
pop
add
lea
shr
mov
jmp
das
or
leave
in
add
sub
add
or
pop
mov
je
sahf
adc
fst
xor
inc
push
outs
fldenv
cwde
dec
(bad)
cmovae
lds
push
js
add
push
push
das
pop
sbb
mov
xor
jecxz
ja
mov
std
xor
xchg
add
cmp
mov
popf
jmp
xchg
cmp
jo
into
add
pop
ret
mov
add
sar
fs
std
mov
sbb
sub
hlt
mov
aaa
cmp
das
sub
push
lea
aad
add
addr16
aas
jo
(bad)
fsubrp
pop
cmp
out
mov
fistp
mov
mov
pop
cmp
mov
cmp
jle
mov
push
mov
push
or
add
loopne
push
or
push
add
add
fwait
adc
xor
xor
mov
mov
push
movs
add
jge
pop
mov
cmp
inc
dec
stos
push
mov
sbb
imul
ror
sub
out
add
nop
pop
push
push
push
push
cwde
imul
(bad)
fistp
cmp
sbb
mov
ficomp
(bad)
mov
imul
add
cmp
cmp
mov
test
fdiv
jecxz
into
test
lods
sbb
sub
cmp
fdivrp
fstp
fwait
jmp
fld1
pusha
test
jg
dec
dec
(bad)
cwde
push
push
cmps
mov
leave
mov
rol
xchg
mov
cmp
div
fsub
cmp
adc
(bad)
rep
cs
imul
cmp
jne
lea
jno
xchg
in
pusha
or
push
cmp
lock
data16
sbb
add
or
dec
call
add
(bad)
or
push
or
cwde
cmp
or
ss
sar
call
mov
leave
pop
leave
imul
and
repnz
psraw
in
pop
cs
clc
int
sbb
pop
idiv
sti
inc
enter
push
pop
imul
(bad)
jbe
std
add
and
inc
inc
rol
inc
xor
cwde
dec
mov
sahf
or
pushf
test
xchg
cdq
jge
fsubr
dec
imul
push
add
addr16
les
or
mov
test
sbb
sbb
adc
jne
inc
(bad)
ins
pusha
jle
mov
mov
inc
sar
scas
(bad)
sbb
push
sbb
jo
fild
les
fcomp
jne
mov
fild
pop
adc
jne
push
cmc
mov
cmp
inc
les
adc
or
or
dec
add
mov
test
dec
les
rcl
push
mul
jl
push
push
add
js
ret
lea
pusha
xor
cmp
jg
ret
cwde
push
fild
div
push
mov
jae
mov
outs
test
sbb
imul
inc
add
adc
ss
fstp
jmp
inc
dec
inc
lds
mov
int3
add
dec
and
test
mov
(bad)
(bad)
add
mov
dec
shr
mov
not
mov
scas
enter
(bad)
inc
xcrypt-ofb
cmps
imul
ret
in
xchg
test
sub
data16
inc
ins
(bad)
(bad)
std
sbb
je
loop
or
or
call
shr
mov
sti
adc
mov
add
call
adc
mov
shl
sub
dec
mov
jmp
mov
cld
(bad)
sar
aas
bndstx
pop
mov
inc
pop
retf
pusha
retf
add
(bad)
and
xchg
push
or
enter
mov
xor
cmps
mov
popa
and
or
cmp
xor
imul
imul
inc
push
push
xor
mov
stc
fbld
cmp
sub
jmp
mov
aam
and
dec
xchg
mov
icebp
jmp
loopne
int
adc
add
sub
hlt
rcr
add
jno
popa
adc
adc
sub
sbb
out
rol
les
imul
sbb
push
inc
pop
call
pusha
test
push
pop
cmp
mov
lahf
inc
test
or
inc
adc
xor
js
inc
push
lea
ror
call
push
lar
mov
lods
jecxz
aaa
push
jb
add
mov
jge
test
xor
jne
xor
hlt
adc
iret
sbb
fsubr
jge
inc
and
push
sbb
jo
dec
dec
cmp
lods
sar
push
cmp
or
xor
into
in
jge
xchg
movs
or
cld
adc
or
inc
sbb
pop
ins
inc
or
push
push
mov
mov
jne
shl
pushf
lock
pop
js
in
mov
hlt
mov
sbb
push
or
pushf
mov
inc
sbb
scas
mov
mov
sub
iret
push
adc
in
imul
ret
mov
iret
add
push
in
jae
mov
ds
xchg
sub
jp
mov
das
jnp
inc
xor
push
in
dec
addr16
sti
ins
dec
fsub
pushf
adc
sar
and
xchg
in
pop
fwait
cmp
push
lock
add
mov
pusha
jg
sub
fdivr
clc
je
fld
mov
scas
(bad)
je
mov
inc
ficom
cmp
push
dec
pop
stc
int3
mov
xor
jne
push
mov
loop
push
push
pop
dec
sti
mov
jmp
enter
or
ret
and
pop
int3
mov
ret
or
sahf
xchg
(bad)
push
xor
and
fs
jb
shr
xchg
jne
test
inc
jmp
adc
inc
fadd
outs
les
sub
add
das
and
sbb
shl
arpl
stc
dec
pop
adc
add
xor
in
jne
pop
jmp
adc
imul
data16
les
enter
jl
push
mov
inc
jae
sub
mov
nop
mov
add
and
scas
ja
cwde
enter
jno
in
jb
mov
movs
mov
dec
int3
out
outs
add
dec
add
adc
das
sub
mov
add
pop
pop
dec
pop
dec
mov
add
add
push
inc
out
scas
mov
std
retf
cmp
imul
sbb
xchg
sub
pop
push
jecxz
fwait
push
arpl
xor
sbb
movs
and
mov
test
or
ja
mov
or
and
pop
mov
in
loope
call
sub
(bad)
jmp
shl
pop
add
add
ins
and
stc
jae
inc
mov
call
shl
inc
aas
ffree
iret
ror
retf
push
clc
mov
xor
cs
fmul
sbb
outs
icebp
sub
adc
jmp
jmp
cld
and
cmp
push
add
xor
sbb
adc
outs
call
and
fild
pusha
cmp
jne
pop
cmp
jmp
add
xor
ret
sub
fisub
jns
adc
mov
or
or
mov
adc
div
(bad)
add
pop
adc
or
push
and
inc
imul
jns
imul
inc
add
ds
add
je
or
or
ror
and
std
add
mov
pop
lock
cmp
ja
fmul
xchg
xchg
or
fs
iret
repz
cli
add
fisubr
movs
push
test
mov
push
push
lock
dec
mov
inc
test
add
adc
in
call
jmp
mov
jmp
dec
push
cmps
dec
das
ret
push
sbb
adc
adc
pop
add
mov
lmsw
add
les
ins
cmp
sub
xchg
inc
out
in
test
gs
mov
or
aas
fild
xchg
mov
call
pop
pop
push
mov
or
pop
lea
jg
bound
jo
sbb
dec
pop
push
pop
fist
cmps
ins
es
sbb
push
mov
dec
dec
cmp
imul
into
sbb
xor
mov
mov
pop
add
sub
or
cmp
and
pop
std
add
lea
mov
and
dec
icebp
and
rol
jp
inc
adc
sbb
inc
mov
jb
xor
shr
sbb
jmp
cld
add
(bad)
fcom
add
int
loop
js
jb
(bad)
aam
dec
push
sahf
rcr
mov
clc
rol
js
push
mov
and
dec
xchg
or
and
cmp
inc
adc
jo
stos
loopne
and
mov
imul
push
xor
add
push
jmp
arpl
fs
int3
fld
fwait
or
hlt
(bad)
rcr
fcmovnu
int
jmp
mov
and
push
push
or
adc
sbb
pop
inc
arpl
sbb
test
mov
add
sbb
mov
jmp
pop
and
sbb
cdq
and
cwde
push
cmps
ret
imul
jb
inc
lods
ss
xor
dec
xchg
dec
mov
aad
test
push
dec
lock
adc
popa
rcl
inc
ins
jne
cmp
cmp
bound
ss
add
std
pop
push
add
sbb
clc
js
test
fmul
mov
inc
or
rcl
in
xor
add
(bad)
xor
sbb
in
rol
or
test
push
les
lods
adc
mov
mov
test
mov
sbb
retf
or
jl
(bad)
mov
push
sub
sbb
add
dec
jne
lea
lea
mov
push
pop
pop
outs
add
push
nop
pop
loopne
outs
inc
cmp
je
or
dec
add
cmps
mov
outs
pop
ret
fimul
lods
dec
mov
push
pop
repnz
repz
mov
cwde
push
mov
or
nop
(bad)
fisub
cld
jns
inc
jmp
retf
adc
dec
adc
inc
cmp
ja
or
fucomi
sub
test
icebp
mov
adc
mov
xchg
xor
data16
outs
jnp
ins
subps
push
pop
btr
jmp
jnp
jg
fcom
add
adc
or
js
adc
add
adc
into
mov
iret
je
adc
and
loopne
pop
pop
cmp
loopne
mov
pusha
inc
loopne
xor
popa
inc
imul
push
inc
sub
add
repnz
lea
stos
push
loop
xor
aam
pusha
shr
mov
add
pop
mov
fdiv
ja
inc
or
or
and
addr16
mov
add
rol
cmps
xchg
fwait
push
pusha
mov
pop
test
test
xor
mov
(bad)
mov
add
xor
or
add
pop
das
push
jecxz
out
add
or
or
or
xor
out
push
mov
adc
adc
imul
add
mov
jo
inc
aaa
addr16
les
setae
enter
shr
ja
mov
fsubr
and
rcl
out
loope
mov
dec
adc
pop
pop
test
adc
test
jno
jecxz
in
adc
and
and
cmps
sti
lods
sub
mov
shl
or
adc
add
ins
push
cwde
pop
cmp
add
bound
xor
out
jmp
mov
sub
inc
imul
inc
jecxz
out
iret
cs
inc
int3
or
pop
xchg
and
pop
(bad)
nop
clc
sbb
xchg
out
xor
out
or
adc
sub
xchg
out
mov
sbb
mov
and
(bad)
out
jle
or
pop
sbb
xchg
lea
add
out
call
inc
add
adc
jmp
jmp
mov
jo
div
les
add
mov
dec
adc
imul
add
dec
adc
xor
mov
mov
push
or
xor
push
dec
cmp
jge
push
mov
jmp
loopne
push
add
push
movs
pop
mov
in
(bad)
mov
ror
leave
mov
adc
daa
mov
mov
sub
sbb
pusha
add
mov
inc
addr16
fadd
adc
loopne
dec
mov
or
ret
bound
xchg
pop
cmp
stos
mov
xchg
je
pop
and
xchg
add
add
push
ins
clc
add
das
pushf
rol
clc
adc
je
dec
or
dec
or
mov
push
repnz
or
cmp
push
inc
jo
and
pop
add
cmp
jmp
push
adc
js
push
cwde
dec
hlt
push
call
cwde
push
(bad)
in
adc
ja
ror
enter
jbe
dec
shl
cld
add
lds
je
pop
push
mov
or
push
in
or
dec
jle
pop
js
fsub
add
loope
retf
add
loopne
pop
dec
xchg
ret
inc
ds
sbb
fldenv
dec
mov
add
ds
dec
test
add
shl
pop
xchg
add
adc
test
fs
fs
aam
xor
pop
adc
pop
ins
add
and
mov
sbb
adc
mov
mov
inc
mov
mov
adc
jmp
or
sbb
mov
pop
lods
push
leave
call
pop
push
push
xchg
adc
jmp
mov
aam
push
jmp
mov
jmp
push
jb
dec
std
xchg
mov
xchg
dec
in
jl
arpl
dec
mov
jl
ja
pop
or
xchg
sub
jne
pop
push
dec
cmp
aam
adc
sub
inc
cmp
xor
xchg
add
cmp
push
test
jbe
bound
add
and
inc
adc
mov
push
sub
fadd
aas
cmp
and
xor
cmp
mov
lods
or
stos
ficomp
or
add
add
fild
cmps
cs
or
popa
mov
jo
sti
ss
mov
mov
imul
and
repz
sbb
add
or
inc
add
inc
outs
jae
test
and
and
inc
sub
sub
mov
fimul
in
cmp
add
xlat
fild
pop
mov
mov
sbb
sub
and
xchg
sbb
xchg
popa
lods
not
mul
loopne
xor
mov
pop
cmp
or
cli
pop
test
or
pusha
or
leave
in
fdivr
jle
ret
dec
and
(bad)
aad
and
mov
test
xchg
mov
dec
pop
jo
pop
mov
mov
inc
ins
icebp
lahf
pop
sbb
js
cmp
cmp
dec
fsubr
add
add
add
add
outs
cli
cdq
pop
(bad)
pop
mov
sti
inc
mov
mov
mov
movs
(bad)
std
shr
adc
push
lahf
jmp
ins
rcr
mov
clc
addr16
mov
pshufw
jae
adc
js
mov
rep
out
push
sbb
ins
das
jp
sbb
fcomip
les
repz
retf
and
cmp
xor
ja
clc
pop
and
adc
data16
scas
xor
ins
adc
add
popa
test
inc
dec
gs
out
imul
inc
push
imul
mov
inc
inc
jb
jns
arpl
sub
fisttp
sbb
or
inc
lods
xchg
mov
pop
inc
gs
sub
pop
jmp
test
add
gs
popaw
nop
(bad)
rol
ins
std
mov
xchg
lahf
fcom
ins
cs
ins
popa
imul
sub
jge
fild
in
add
addr16
jne
imul
popa
dec
add
inc
add
enter
push
gs
outs
jb
outs
arpl
sbb
or
ins
mov
jbe
sbb
gs
je
or
xchg
lods
imul
push
inc
jne
inc
imul
sbb
or
jb
hlt
or
inc
movs
push
test
js
and
sub
je
lods
cmp
push
or
loopne
xor
inc
mov
cmp
div
outs
mov
push
mov
mov
outs
pop
push
pop
adc
push
cld
inc
dec
outs
aas
push
nop
punpckhbw
pop
loopne
scas
ins
push
pop
inc
pop
in
clc
dec
bound
add
ins
push
mov
loopne
dec
push
lods
outs
push
xchg
jo
pop
xor
ds
inc
shl
push
add
ds
mov
cmp
les
inc
dec
inc
inc
and
sbb
sbb
xor
add
repnz
shl
xlat
rcr
push
mov
dec
or
jo
jp
pop
dec
xor
inc
sub
mov
jb
or
jg
stc
dec
xor
inc
push
gs
jo
ss
in
pusha
das
mov
ins
outs
outs
jle
sub
fisttp
in
sub
pop
cs
ins
or
sub
outs
add
push
add
jb
mov
mov
jae
jbe
inc
imul
or
cmp
inc
dec
outs
add
call
sub
and
sub
dec
ins
jno
cmp
arpl
add
push
stc
xlat
jmp
push
inc
add
(bad)
fdiv
hlt
mov
cmovae
repnz
add
push
das
xor
repnz
rcl
push
inc
je
gs
ret
mov
fwait
mov
ret
adc
bound
aam
inc
icebp
inc
ins
mov
inc
outs
sub
inc
sub
into
inc
dec
jle
and
(bad)
add
sub
or
ss
popa
das
ds
outs
dec
add
push
lahf
or
nop
inc
and
push
outs
jne
or
add
(bad)
mov
outs
popa
fs
mov
push
mov
or
jnp
fmul
aaa
jb
jnp
icebp
or
popa
in
mov
pop
mov
ja
popa
pop
repz
ins
mov
sbb
lea
stos
les
(bad)
loopne
mov
and
mov
inc
gs
and
cmp
es
js
sub
dec
nop
and
icebp
add
cdq
add
aaa
mov
(bad)
mov
sbb
es
or
ds
and
mov
or
and
xchg
and
pop
cmp
add
or
dec
cmp
mov
int3
add
mov
inc
inc
ja
stos
call
inc
xor
pop
adc
bound
mov
xor
ja
imul
jg
pop
movs
ficom
push
xchg
scas
aad
jge
inc
add
loop
loopne
aas
or
push
mov
inc
adc
(bad)
daa
outs
(bad)
jbe
jae
push
imul
mov
mov
adc
xchg
mov
pop
loopne
bound
adc
rol
outs
mov
mov
adc
sbb
and
jno
pushf
mov
test
jbe
inc
ins
ds
push
test
or
leave
mov
sbb
lods
pop
adc
add
rcl
mov
data16
mov
dec
push
jmp
out
push
xor
mov
push
dec
add
int
cdq
add
dec
adc
inc
cld
ins
clc
mov
lea
inc
mov
hlt
mov
sbb
mov
ror
mov
aad
pop
es
xchg
pop
mov
and
jbe
dec
ins
jp
adc
adc
cli
mov
fimul
loopne
add
shr
jle
adc
dec
add
(bad)
xlat
or
cdq
dec
test
je
sub
or
clc
mov
std
cmp
aaa
js
das
mov
pop
jl
mov
mov
pop
mov
add
dec
mov
imul
or
adc
xor
cmp
fidiv
int3
fs
adc
adc
rcl
sbb
push
mov
sub
push
adc
push
sahf
pop
cmp
or
inc
mov
mov
ficomp
inc
ja
dec
push
std
pop
and
sub
je
sbb
push
sub
pop
or
jmp
jnp
fwait
popf
push
or
push
(bad)
or
out
mov
push
sub
in
cmp
push
idiv
std
adc
iret
sbb
fisttp
cmp
ja
sub
ret
or
sub
add
pop
push
(bad)
popa
adc
shl
test
push
mov
lock
cmc
fdiv
mov
pop
dec
cwde
cmp
mov
inc
xor
xor
or
add
xchg
push
cmp
add
mov
add
xchg
mov
js
ret
outs
mul
retf
xchg
or
inc
and
sbb
mov
bound
adc
in
imul
or
add
or
stc
or
pop
xor
faddp
fmul
adc
adc
cmp
xor
je
mov
shl
xchg
iret
mov
mov
sub
xchg
clc
add
popf
shl
jl
test
push
push
rol
mov
cli
sbb
cmp
rcl
jnp
enter
cmp
cmps
cmp
adc
outs
je
sbb
xchg
sbb
mov
push
ds
fild
xchg
bound
pop
and
and
and
mov
jns
add
mov
ds
bound
mov
mov
fistp
rcl
add
pop
mov
fwait
sbb
xchg
fs
push
jp
jp
sbb
je
mov
js
call
or
sbb
jmp
jg
cmp
cmc
sbb
ss
vpmaxsd
in
sbb
mov
add
mov
pop
daa
xor
sbb
pop
imul
push
dec
ds
pop
add
pop
sub
pop
idiv
lods
and
popa
mov
and
xor
imul
aad
cmp
inc
push
push
inc
pop
test
and
adc
shr
aam
sub
dec
xchg
push
fisttp
or
(bad)
jno
js
push
dec
cli
in
je
xchg
sbb
or
sub
jne
out
test
xor
inc
jle
mov
xchg
(bad)
sub
adc
cmp
or
pop
xchg
inc
shl
pop
push
cmps
adc
nop
ds
mul
pop
push
je
add
push
push
dec
lea
sub
loopne
xchg
or
sub
nop
out
gs
fisub
mov
in
js
test
xchg
pop
pushf
out
push
sub
inc
sub
dec
fwait
js
sbb
ror
in
sbb
xchg
inc
mov
mov
stos
sbb
mov
or
add
mov
pop
sub
fld
pop
jmp
mov
fimul
push
sub
add
adc
dec
add
push
repnz
xor
cmp
aad
xchg
and
push
movs
test
sahf
mov
xor
adc
shl
xchg
fisttp
arpl
xchg
add
popf
jmp
adc
mov
cmps
mov
adc
and
and
ds
cmp
adc
lds
mov
mov
push
inc
and
js
clc
xchg
and
rol
fimul
mov
inc
xor
sub
cmp
ret
add
addr16
cmp
inc
and
adc
or
shl
jmp
adc
fistp
push
test
mov
js
sbb
xor
add
cdq
rol
jne
ret
daa
es
sbb
rcr
fwait
loopne
daa
es
imul
add
sbb
loop
out
cmp
or
pop
jb
cmps
sub
ja
retf
retf
cmps
jne
mov
(bad)
fist
mov
imul
mov
push
loope
sbb
cmp
loope
stos
test
in
jge
jp
pop
push
push
or
div
xchg
mov
inc
ss
test
enter
sub
pop
push
sbb
xchg
mov
hlt
jg
test
and
outs
jg
mov
jp
(bad)
not
sub
jmp
cmp
sete
cmp
rol
cmp
ins
loop
mov
and
lock
sti
idiv
mov
movzx
outs
pop
loop
and
sbb
jne
and
dec
test
jl
fdiv
ins
leave
lea
add
xchg
mov
add
add
jbe
add
test
jne
jmp
cmp
mov
pop
inc
inc
or
rcl
xor
popf
inc
inc
cmp
xchg
(bad)
mov
rcl
inc
loopne
add
test
push
push
call
adc
hlt
sub
lock
in
(bad)
push
and
push
or
in
sbb
daa
push
dec
(bad)
jl
inc
sbb
mov
cmc
dec
xchg
sub
cld
cli
pop
push
sar
xchg
add
test
push
lea
dec
jo
mov
push
inc
nop
dec
jne
adc
sub
dec
das
dec
pusha
and
aaa
ins
push
dec
and
div
ins
test
xrelease
daa
cdq
push
cs
inc
add
ds
sti
add
push
pop
call
add
shr
add
cmp
push
mov
jo
rcl
inc
xor
mov
xchg
jecxz
push
push
jne
out
rcl
in
xchg
adc
cmp
sbb
ins
es
inc
sbb
mov
pop
xor
add
push
lahf
mov
push
jmp
ret
outs
push
cmps
xor
xor
jae
pop
pop
mov
push
dec
push
push
loope
mov
and
movs
and
dec
imul
xor
mov
js
adc
push
fadd
aam
add
lods
cmp
adc
ins
adc
push
cmp
xor
jbe
push
push
pop
fdiv
jnp
add
add
shl
cmp
in
int3
push
jo
sbb
add
jns
sub
adc
call
adc
nop
hlt
jmp
(bad)
or
or
jle
mov
loop
mov
sbb
in
ror
xor
jmp
dec
sti
push
mov
cmp
mov
jmp
cmp
pop
cmps
loope
or
push
jl
adc
inc
and
pusha
adc
mov
test
push
lea
mov
outs
fisttp
es
test
lock
int
jne
mov
xchg
mov
mov
mov
cmc
mov
push
add
mov
add
add
mov
jl
stos
imul
add
mov
cmp
jge
adc
fadd
sub
ins
mov
pop
or
cmp
rcl
mov
add
pusha
fcomp
cmps
je
mov
xchg
xchg
pop
adc
adc
sbb
addr16
sbb
mov
sbb
jae
test
add
dec
or
stos
dec
test
ds
cmp
mov
rol
pop
dec
pusha
arpl
xchg
cwde
pop
call
je
out
cmp
das
daa
adc
enter
stc
push
mov
adc
adc
jmp
and
shl
jmp
pushf
out
jecxz
inc
cli
adc
and
loopne
sbb
mov
or
push
sahf
adc
call
push
mov
mov
xchg
call
push
adc
aam
xor
in
inc
sub
jns
test
inc
push
add
cmp
and
pusha
bound
clc
push
push
into
mov
hlt
mov
push
adc
scas
inc
std
or
or
into
lock
push
pop
(bad)
mov
std
iret
lds
adc
stos
dec
ret
loopne
std
or
or
ret
inc
push
not
xor
push
xor
mov
fisub
push
push
or
mov
es
(bad)
sbb
out
sbb
jbe
mov
adc
adc
pop
sub
loope
pop
rcl
ss
out
ss
cmp
mov
add
add
inc
(bad)
mov
xchg
push
sub
push
test
push
ins
push
aam
idiv
xor
mov
push
push
into
mov
or
pop
jbe
adc
fs
test
or
pop
test
sbb
addr16
xchg
push
pop
pop
sub
clc
mov
inc
and
cwde
mov
pushf
inc
sbb
pusha
rol
or
mov
jb
ror
sbb
push
xor
or
dec
mov
gs
push
sub
pushf
sbb
adc
push
test
aad
push
adc
enter
xchg
ror
aad
aaa
cmp
jbe
mov
inc
arpl
scas
xor
fcmovnbe
jmp
or
push
lahf
dec
cmp
or
mov
(bad)
and
add
xlat
pextrw
popf
fadd
sbb
jno
and
lds
push
adc
push
cmp
je
lahf
cmp
(bad)
cdq
push
push
add
add
dec
ja
dec
and
addr16
fnstsw
and
test
or
or
cmp
je
mov
push
jb
lods
aas
sub
lock
or
jmp
data16
not
and
inc
pusha
lock
ret
mov
mov
test
cmp
pusha
jo
jae
mov
jo
dec
(bad)
fadd
shl
dec
in
mov
lods
movs
mov
bound
push
mov
jg
ja
sbb
push
mov
adc
adc
or
mov
or
or
push
scas
and
pop
adc
sub
jbe
ret
or
jmp
xchg
sbb
add
fcom
mov
fdiv
cmp
mov
call
pop
xor
sub
call
push
inc
add
cli
ds
je
mov
mov
push
sbb
(bad)
fild
dec
loope
adc
jmp
xor
mov
and
mov
xor
push
mov
lods
es
pop
leave
mov
xchg
movs
outs
fcomp
mov
mov
cmp
jl
sbb
fsubr
or
fstp
ja
xor
popf
jns
mov
pop
jbe
inc
add
stc
push
sbb
mov
fsubr
inc
adc
test
pop
xor
ror
fs
jo
sub
and
add
inc
xor
cmp
cmps
lods
pop
in
dec
mov
test
push
mov
popa
sub
jb
je
jmp
inc
and
and
inc
xchg
mov
arpl
pop
(bad)
popf
add
jmp
jmp
mov
clc
jne
in
sbb
push
mov
adc
cmps
ret
add
cmp
cli
push
inc
cs
popa
mov
sub
icebp
jmp
ret
mov
mov
mov
mov
das
add
pusha
cmp
lock
dec
(bad)
dec
cmc
push
dec
jle
push
icebp
adc
cmp
push
jmp
(bad)
ja
jecxz
dec
or
pop
mov
dec
repnz
loope
test
xor
or
aas
inc
in
push
(bad)
or
inc
inc
sbb
or
push
cmp
or
pop
cmp
ror
pop
pusha
xchg
mov
push
enter
push
mov
push
cmp
leave
cmp
xor
adc
jnp
sbb
fmul
push
std
add
je
dec
push
jmp
dec
jmp
mul
pusha
and
jnp
xor
pop
ds
mov
inc
mov
dec
outs
sbb
ja
clc
or
mov
and
or
add
add
sub
pop
outs
sbb
push
pop
cmp
or
test
xor
sub
or
push
ss
push
cmp
cmp
dec
and
cmps
or
rcr
lock
sub
ror
popa
cmp
ja
mov
addr16
push
cdq
and
jmp
mov
xlat
data16
or
xor
mov
cmp
push
je
push
mov
sbb
pop
lock
iret
jmp
cmp
cmp
and
adc
and
cs
inc
xor
call
cmp
loop
pop
mov
add
mov
sbb
adc
data16
fdiv
dec
(bad)
clc
add
lock
call
nop
imul
(bad)
or
fidiv
mov
add
or
push
or
jl
sub
rol
push
pop
jl
mov
push
push
xor
adc
add
mov
jo
jbe
call
icebp
(bad)
ins
hlt
test
test
fimul
or
daa
adc
neg
and
fnsave
sbb
mov
mov
(bad)
jnp
cmp
jbe
in
adc
les
and
ja
not
sti
xor
mov
pusha
mov
outs
add
retf
add
add
sbb
sbb
mov
push
push
pop
or
jne
dec
fild
inc
mov
add
add
add
push
pusha
rol
mov
mov
outs
jo
lea
call
jge
ret
pop
push
push
jmp
lds
cdq
sbb
push
mov
mov
jae
test
adc
sub
add
pop
adc
lock
and
(bad)
cmp
inc
jae
ror
xchg
jo
xchg
push
rol
aas
aas
call
sbb
arpl
mov
pop
div
sar
push
dec
fidiv
adc
rol
call
lods
in
cmp
jge
mov
jmp
mov
push
jge
push
jle
push
shl
pop
mov
sbb
jecxz
mov
ss
cmps
nop
cmp
cmp
jae
inc
sub
lods
mov
adc
jbe
inc
jns
push
cmp
clc
and
xor
push
jge
push
mov
lea
test
jbe
ficomp
mov
out
mov
jp
hlt
dec
push
ja
jno
movs
lock
and
jecxz
or
rcl
mov
mov
dec
cs
mov
adc
mov
push
adc
mov
test
bound
mov
sbb
mov
dec
(bad)
push
mov
cmp
mov
xor
test
out
mov
adc
push
or
call
xchg
dec
push
mov
(bad)
test
and
mov
adc
inc
inc
cs
les
leave
or
dec
dec
add
sbb
clc
push
push
mov
jbe
mov
xchg
je
inc
jo
or
and
or
or
pop
inc
cmp
repnz
push
enter
jns
mov
pop
mov
sub
cld
add
push
shl
out
add
aad
sbb
je
push
rol
(bad)
fcmovu
add
jne
loope
and
cmp
pop
mov
add
rcr
lods
(bad)
dec
aaa
sub
dec
test
fwait
std
jae
inc
cmp
jl
fimul
mov
lea
out
dec
or
jo
neg
lods
pop
dec
int3
push
push
popf
and
dec
add
out
add
cmp
imul
dec
adc
inc
sbb
add
lods
fs
xchg
mov
adc
sbb
in
push
test
scas
adc
mov
mov
fisub
add
pusha
adc
sub
pop
stos
imul
ja
(bad)
cmp
jle
mov
mov
or
adc
out
mov
sub
cmp
jl
adc
sbb
ret
dec
loopne
jl
inc
adc
push
sahf
add
cmp
sbb
or
movs
call
jb
or
jnp
inc
ficom
or
or
jae
aam
mov
adc
mov
fcomp
cs
or
(bad)
lock
push
dec
or
clc
add
cmp
ja
cmp
pop
pop
inc
or
add
mov
and
ja
movs
clc
push
push
cmp
sahf
or
sub
imul
add
ret
mov
out
dec
sbb
mov
data16
sub
int3
jge
inc
sbb
fisub
xor
sbb
jae
jae
cmp
data16
shl
data16
jmp
jne
jmp
ss
add
mov
pop
cwde
mov
fisubr
sub
xchg
daa
sbb
inc
push
imul
jmp
addr16
or
cdq
jl
loopne
add
add
xchg
xchg
or
mov
xchg
and
xchg
(bad)
xchg
and
mov
pop
adc
jl
mov
adc
and
pop
cld
jae
inc
add
mov
sbb
je
add
push
inc
(bad)
cmp
fsubr
push
inc
dec
popf
popa
or
loop
pop
les
(bad)
dec
xchg
cmp
add
jmp
pop
and
add
rol
sahf
aam
retf
(bad)
fmul
mov
popf
push
ret
fld
xor
jne
fcom
xchg
jne
push
jae
pop
outs
mov
mov
pop
fidiv
dec
cs
mov
pusha
pop
iret
mov
mov
pop
pop
xchg
inc
add
pop
dec
cmp
jnp
inc
int3
and
sbb
cmp
addr16
add
popf
je
clc
mov
mov
xor
push
push
rcl
jmp
mov
push
outs
push
mov
or
mov
pop
jp
xchg
xchg
sub
inc
jnp
test
adc
jb
sbb
jg
dec
and
sub
xor
cmp
mov
or
test
jge
and
cmp
call
ret
dec
mov
mov
push
stos
mov
neg
fcomp
paddsb
shr
les
xor
inc
adc
or
adc
nop
push
sub
dec
xchg
xor
or
sbb
dec
inc
rol
rol
xor
je
cmp
bnd
add
pop
or
cmp
aas
cmp
or
cmp
ret
dec
fdiv
cmp
xor
mov
(bad)
arpl
inc
cli
or
jle
adc
or
jecxz
fimul
mov
dec
or
sti
sti
(bad)
adc
mov
add
std
fcom
mov
ss
(bad)
mov
idiv
in
outs
sub
mov
loop
pusha
imul
sbb
add
retf
inc
lods
test
dec
sahf
out
sub
or
dec
imul
mov
mov
imul
and
or
in
push
fsub
sub
shl
retf
xchg
jl
or
cmp
xchg
jl
test
jne
in
pop
add
mov
xchg
pop
jmp
lds
mov
xchg
dec
push
pop
jno
xor
inc
sbb
cmp
jo
or
jg
fisttp
or
mov
out
dec
dec
inc
inc
sbb
or
out
jne
adc
inc
in
pusha
fs
push
mov
jge
push
sub
pop
dec
and
pusha
add
mov
repz
adc
push
scas
sbb
xlat
sbb
add
sbb
test
xchg
out
in
or
push
rol
aaa
jo
xor
add
mov
adc
jns
pusha
push
add
inc
test
dec
and
daa
cmp
push
int3
push
lods
bound
jo
out
inc
dec
jle
retf
or
rcr
icebp
mov
add
or
inc
and
cmp
scas
je
sbb
cmova
add
ja
mov
imul
jle
test
jl
cmp
jge
cmp
cld
xor
mov
mov
sar
push
sub
es
imul
xchg
add
dec
cwde
and
jecxz
dec
sub
mov
xchg
iret
push
xchg
std
ds
or
mov
inc
lods
adc
or
mov
push
adc
lock
dec
(bad)
shl
cmp
jnp
js
(bad)
jle
sar
outs
xor
movs
call
add
jo
sbb
or
cmp
repz
(bad)
jo
add
sbb
pop
es
in
and
jmp
pop
adc
add
cmp
jno
inc
scas
cmp
or
int3
xchg
popa
cmp
pop
nop
rcr
or
jp
cli
fwait
aam
js
or
inc
add
and
mov
mov
cmp
mov
jmp
sbb
and
push
mov
(bad)
fist
or
xchg
sbb
and
outs
das
mov
cmp
aaa
mov
mov
test
and
cmp
dec
jl
ja
fild
add
outs
loopne
add
(bad)
mov
js
je
mov
pop
(bad)
push
fst
rol
mov
repnz
sbb
sub
daa
add
sub
xor
jle
jmp
sub
jns
mov
fdivr
add
sub
add
bound
mov
jne
(bad)
mov
or
adc
(bad)
mov
add
enter
push
loopne
retf
pusha
and
(bad)
ins
mov
das
mov
adc
daa
addr16
adc
or
cmp
jnp
inc
dec
sub
jo
and
test
lods
mov
dec
push
adc
fsubr
or
jmp
sti
adc
mov
xchg
nop
call
mov
je
inc
(bad)
adc
je
dec
jne
fcmovb
inc
inc
dec
or
dec
or
ret
cmp
mov
lea
mov
jmp
loopne
adc
jnp
jno
(bad)
fnsave
pop
je
rcr
lods
mov
cmp
test
es
and
and
scas
in
inc
dec
je
out
iret
and
mov
jl
mov
mov
and
dec
popa
jb
xlat
daa
pop
int3
add
mov
arpl
inc
push
mov
out
jmp
mov
mov
adc
outs
jo
stc
xchg
cmp
or
pop
adc
or
mov
jnp
xor
lds
pop
or
(bad)
dec
xor
ror
lods
add
add
adc
fs
(bad)
pop
push
jmp
enter
pop
test
xor
in
cli
imul
adc
cmc
jbe
leave
pop
jg
cmp
inc
stos
mov
inc
sub
loop
or
sbb
pusha
mov
test
test
jne
adc
clc
imul
add
idiv
sbb
mov
ins
enter
pop
and
rol
sbb
adc
adc
xor
add
add
pop
adc
push
sbb
sbb
add
inc
pop
js
cmp
cdq
retf
js
add
or
sub
jne
cwde
cdq
call
in
(bad)
(bad)
stos
pop
or
and
pop
add
cmp
xor
outs
sbb
add
or
sahf
mov
movs
add
pop
and
and
fnstenv
cmp
jne
mov
pop
sbb
jo
inc
dec
xor
loope
xor
das
ret
mov
pusha
and
inc
jo
fsub
ds
pop
je
mov
xchg
outs
adc
sub
xchg
lods
pop
shl
sub
ins
add
imul
pop
imul
dec
sbb
dec
jo
and
push
bound
dec
pop
and
fisub
jmp
add
xchg
or
mov
out
mov
stc
adc
push
sar
fist
ins
(bad)
xor
sbb
out
les
jmp
or
mov
imul
jmp
add
and
outs
or
(bad)
lea
cmp
dec
jb
or
sbb
pushf
into
icebp
push
cld
push
adc
mov
push
sbb
mov
push
inc
xor
js
pushf
jge
push
jl
jle
push
xlat
mov
pushf
jmp
push
andnps
mov
and
js
scas
jnp
mov
add
out
je
adc
jbe
mov
sahf
call
into
(bad)
mov
inc
inc
cmp
mov
cmc
pusha
stos
mov
mov
add
cmp
hlt
push
scas
jmp
lods
push
sub
add
jl
push
push
mov
jmp
add
or
cdq
les
xor
sar
ret
adc
ins
retf
cs
call
hlt
sub
or
test
push
adc
dec
sbb
push
dec
cmovae
dec
xchg
fs
push
je
push
fwait
movs
das
(bad)
pop
pushf
ins
sub
add
test
fnstenv
jl
push
ins
xchg
(bad)
rcr
and
sub
repnz
sbb
ins
ret
aam
ja
cmp
cmp
int3
ror
adc
sub
retf
inc
fidiv
(bad)
hlt
push
cli
fst
mov
and
stos
cli
in
adc
sub
(bad)
movs
loopne
dec
or
enter
push
add
test
pushf
sub
xor
popf
in
cs
jne
inc
sbb
fwait
call
adc
sbb
inc
cwde
int3
push
mov
cmps
or
loop
push
xlat
jo
inc
push
and
adc
add
inc
pusha
push
jb
adc
sbb
femms
xor
push
movs
retf
push
cmp
sbb
iret
shr
or
or
pop
mov
and
cwde
lods
hlt
fidiv
fcomp
imul
js
cmp
sub
test
dec
popa
cli
pop
fisubr
ds
ret
sbb
mov
xchg
(bad)
cmps
jns
imul
mov
or
adc
add
cs
cmp
add
mov
pop
jmp
and
pop
aam
or
loopne
les
add
movs
outs
popf
pop
xchg
sbb
push
iret
adc
cli
test
imul
push
arpl
push
add
pop
xchg
add
cmp
or
or
jne
pop
sub
or
push
add
cmp
cwde
pop
sbb
cmp
inc
and
push
and
nop
in
and
(bad)
lea
mov
repnz
lods
outs
and
sbb
or
arpl
aaa
sbb
dec
add
mov
xchg
rol
(bad)
cmp
jb
in
inc
sbb
and
cmp
lock
add
cli
ja
sete
and
mov
jbe
sbb
mov
xchg
xchg
je
dec
es
sub
addr16
cmp
or
fnop
(bad)
mov
cwde
or
shl
push
pushf
mov
add
or
dec
lea
movs
into
add
push
push
mov
and
imul
test
(bad)
or
xchg
or
inc
lock
scas
pop
retf
shl
add
pusha
(bad)
in
add
jnp
dec
adc
fdiv
fsub
inc
dec
cmp
dec
xchg
shr
add
mov
jmp
popa
movs
add
mov
jns
xor
adc
dec
push
shl
jnp
jle
dec
xchg
add
or
cmp
loopne
or
and
mov
ret
leave
call
jnp
stc
push
inc
jmp
adc
das
or
fild
adc
sahf
xchg
mov
lea
out
sbb
pop
and
into
lea
jg
inc
mov
push
out
aam
sbb
sbb
push
or
push
mov
js
xor
mov
hlt
or
add
gs
test
call
mov
cli
mov
adc
push
inc
adc
dec
sub
cmp
adc
mov
mov
push
or
sar
rol
clc
jo
adc
adc
pop
out
cmp
jbe
inc
sbb
mov
mov
cld
xchg
jne
shr
lock
ror
mov
mov
hlt
add
mov
fimul
pop
jns
xchg
pop
push
cmp
je
fadd
or
sahf
ss
hlt
pop
mov
test
je
ins
inc
sub
inc
fild
ins
and
mov
fadd
mov
retf
dec
fild
sub
push
push
push
ins
jo
jns
xchg
rcl
in
lea
(bad)
(bad)
mov
or
rep
add
retf
jno
fidivr
jb
pusha
sbb
and
into
ret
and
add
rcr
add
mov
sub
xor
dec
movd
adc
into
mov
push
xchg
shl
sub
xor
(bad)
cs
leave
dec
scas
jmp
lea
sar
and
cmps
mov
xchg
xor
imul
sub
not
fisttp
sub
or
ins
jae
out
sbb
push
fsubr
sub
mov
pop
fdiv
loopne
add
cmp
jle
push
cmp
sbb
ja
repz
sbb
shl
mov
and
cmp
jl
popf
clc
adc
shr
(bad)
push
inc
inc
pop
test
pop
mov
icebp
adc
jecxz
mov
lods
push
jae
sbb
push
and
sbb
xchg
xor
jmp
jg
je
mov
inc
mov
test
cwde
mov
loop
xor
jns
call
dec
sub
les
lea
int3
push
push
(bad)
xor
adc
mov
jbe
xor
inc
rcl
loopne
popa
sahf
pop
inc
stos
mov
loopne
sbb
call
sub
mov
pushf
enter
or
stos
shl
mov
jp
inc
push
dec
pop
lock
jecxz
push
push
mov
popa
jo
loopne
in
pop
sbb
dec
sub
adc
jo
cmp
cs
inc
loopne
mov
test
or
pop
dec
mov
jmp
lea
lds
mov
je
sub
and
mov
add
(bad)
pop
jge
mov
sbb
repnz
ret
outs
clc
(bad)
mov
rol
xchg
adc
or
je
add
add
je
jecxz
loop
sub
cmp
sar
mov
gs
dec
and
cmp
xchg
jg
aaa
js
pop
out
and
add
hlt
mov
jl
dec
jmp
push
movzx
adc
dec
sub
add
jg
xor
repz
adc
in
or
(bad)
loopne
sub
(bad)
mov
js
imul
xor
fisttp
jo
mov
lock
mov
sar
push
pushf
leave
push
push
xchg
ss
and
dec
jbe
pop
inc
push
push
push
push
fdiv
or
jns
scas
adc
arpl
jle
div
popa
cmp
and
jl
inc
xor
cmps
or
jg
inc
icebp
jmp
mov
push
or
clc
add
push
cli
adc
or
or
or
hlt
jmp
sar
test
add
outs
das
or
inc
(bad)
mov
cmp
test
mov
into
mov
lods
lods
push
rol
das
inc
sub
push
jne
mov
les
sbb
mov
adc
je
stos
cmp
xchg
jecxz
and
or
ss
ror
inc
aad
jle
xchg
dec
add
daa
mov
scas
enter
mov
inc
ins
xor
inc
out
push
imul
jl
mov
test
sbb
stos
inc
sbb
mov
sbb
aad
cmp
xchg
dec
fs
cmps
xor
xor
cld
dec
fs
stos
push
psubsb
js
adc
aad
sub
mul
(bad)
sbb
js
add
cmp
inc
and
sbb
retf
mov
lods
imul
daa
(bad)
and
push
mov
mov
imul
push
pop
sar
fs
push
dec
je
sub
add
cmp
jae
adc
and
or
push
sbb
and
inc
add
shl
or
or
outs
or
jmp
inc
sbb
je
add
scas
inc
outs
stos
xor
mov
and
mov
lods
outs
jbe
jge
cdq
adc
test
push
sbb
pop
pushf
add
add
adc
push
outs
xor
int3
sub
in
add
sub
ins
fiadd
mov
cs
and
jl
and
movs
imul
add
adc
and
sbb
es
xchg
inc
xlat
dec
loope
mov
adc
mov
mov
dec
ds
jo
mov
movs
jne
jne
push
add
jg
icebp
jo
mov
std
push
xchg
xchg
jge
cmp
add
add
mov
jbe
das
mov
sbb
sbb
rcl
lock
jle
aam
cmp
or
push
push
add
fstp
sub
push
bnd
pushf
add
jmp
sub
aad
dec
sbb
scas
ds
pushf
imul
clc
jl
mov
push
enter
(bad)
call
push
dec
jp
jne
xlat
inc
mov
ror
mul
add
inc
ror
cmps
dec
ror
push
ret
jl
popa
fisttp
shl
addr16
mov
cmp
rcl
cmps
jl
fsubr
inc
clc
data16
clc
inc
jl
inc
loopne
cmp
xor
lock
mov
call
das
aas
fiadd
cmp
movs
xor
add
dec
jp
(bad)
aaa
ss
cmp
push
lea
inc
sub
nop
test
loope
adc
lea
push
mov
sbb
dec
cmp
adc
push
jecxz
mov
pop
jl
cmp
xor
fs
mov
xor
pop
cmp
mov
inc
dec
lea
out
fwait
pop
add
sar
or
(bad)
sub
js
fistp
jp
fs
pusha
push
in
sbb
setg
lods
inc
push
and
mov
sbb
js
push
xchg
mov
add
(bad)
pop
movs
xor
movs
or
mov
cmp
les
je
cli
adc
lock
mov
mov
pop
addr16
je
or
(bad)
sbb
shl
mov
sbb
test
dec
sbb
adc
or
mov
cmp
es
data16
xor
push
inc
jno
(bad)
mov
push
push
push
mov
inc
push
nop
mov
ins
daa
pusha
mov
hlt
lea
sub
pop
mov
call
push
inc
in
add
cmp
jle
xchg
adc
out
test
add
lea
inc
pusha
inc
call
jg
or
shl
inc
inc
mov
aas
enter
xor
mov
movsx
les
into
inc
xchg
mov
lea
add
mov
or
icebp
je
mov
add
ret
jg
add
add
sbb
clc
mov
cmp
or
push
dec
into
movs
aas
push
inc
add
dec
in
ins
pop
sub
mov
js
into
push
mov
dec
mov
out
dec
loopne
mov
inc
sub
pop
ret
sbb
inc
and
push
call
push
add
add
xchg
inc
out
in
stos
inc
mov
xchg
inc
or
out
(bad)
loopne
sbb
inc
push
sbb
mov
sub
jge
inc
mov
fsubr
pop
data16
xchg
call
retf
cmp
js
pop
aam
leave
ss
pusha
xor
lods
jl
or
mov
sub
mov
mov
inc
push
dec
(bad)
xor
out
mov
pop
ror
pushf
scas
fdiv
mov
cmp
inc
xchg
or
jle
jo
test
or
mov
call
dec
movzx
xchg
and
unpcklps
adc
cwde
pop
jl
jmp
mov
nop
mul
bound
rcl
sub
or
fisttp
cs
cmp
jne
jge
pop
inc
sub
push
mov
sbb
outs
cdq
add
sbb
mov
shr
lea
pop
push
cmp
je
mov
pop
ins
shl
jmp
movs
or
sbb
clc
shl
mov
loopne
or
pop
clc
jo
or
cli
cmp
dec
push
xchg
jle
leave
or
daa
xor
rcl
add
jne
(bad)
cmp
add
push
adc
mov
inc
sbb
mov
jle
gs
adc
and
sub
jp
sbb
or
push
sbb
jge
loope
pop
sbb
jle
push
retf
jo
ret
das
pop
pop
or
(bad)
in
cdq
jp
dec
or
(bad)
(bad)
or
cmp
pop
or
jne
sbb
cmp
test
aaa
sahf
lea
cmp
lock
add
fist
std
fs
push
mov
fwait
push
pop
or
inc
shl
pop
xchg
loopne
or
inc
push
fdiv
cmp
jg
add
mov
mov
(bad)
addr16
fs
adc
rol
jno
aaa
pusha
add
sbb
dec
add
cmp
push
adc
inc
inc
or
mov
adc
pop
in
pop
and
jne
lea
and
inc
and
(bad)
jle
scas
push
add
and
mov
popa
push
and
cmps
mov
xor
(bad)
cdq
sbb
popf
in
sbb
iret
lock
mov
mov
inc
xchg
xor
repnz
xor
sub
push
or
cmp
jo
lahf
dec
pop
js
mov
lea
shr
inc
add
xchg
les
mov
xor
ins
out
dec
mov
adc
adc
outs
data16
or
cmp
movs
call
xor
scas
adc
push
lock
add
sbb
cmp
cli
mov
jne
mov
adc
repnz
js
enter
fild
add
mov
dec
or
mov
sub
xor
pop
js
sub
aad
and
cmp
sbb
cwde
cmp
adc
leave
aad
xor
retf
fnstsw
lds
xor
mov
lock
push
fs
push
pop
xor
add
ja
repnz
sub
or
clc
(bad)
sti
daa
xor
inc
cmp
in
nop
mov
jg
sbb
push
shl
sbb
and
sub
add
or
loop
or
sbb
ret
into
jmp
inc
cmp
call
xor
pop
jecxz
jns
mov
in
lea
pop
dec
fwait
sbb
cwde
fist
xchg
and
ror
pop
pop
add
add
test
add
lock
or
inc
loopne
inc
ret
sbb
mov
dec
xor
div
xchg
call
pop
lods
cmp
add
push
loope
xchg
data16
rol
dec
mov
clc
mov
sar
or
sub
nop
adc
dec
xor
pop
or
mov
out
sbb
and
jo
sbb
scas
ja
adc
mov
mov
call
mov
dec
fadd
pop
add
xchg
call
stos
mov
cli
ss
sub
xchg
push
push
dec
push
jbe
enter
cmp
inc
cmp
push
push
pop
mov
jmp
mov
jbe
loope
dec
(bad)
sub
jae
sub
xlat
sbb
je
dec
in
jbe
inc
fisttp
inc
in
push
jmp
pop
and
sar
sub
jl
lea
or
or
or
sbb
push
adc
push
mov
sub
adc
mov
cmp
jb
ds
mov
ins
pop
jae
mov
inc
loopne
or
out
loope
mov
sub
lock
mov
mov
ror
loop
cmp
aam
pop
sbb
push
sbb
or
in
mov
adc
mov
adc
pop
inc
or
cmps
out
push
push
dec
jo
movs
mov
fcmovbe
jmp
loopne
mov
adc
inc
mov
adc
mov
xor
pop
pop
mov
sbb
popa
mov
retf
push
xor
xor
cwde
pop
mov
or
sar
mov
int
jge
mov
je
clc
lea
mov
mov
clc
or
or
xor
sbb
adc
add
jmp
icebp
cmp
xchg
js
inc
jo
je
add
push
dec
or
mov
pop
and
add
jmp
clc
mov
mov
das
(bad)
test
icebp
add
and
lock
adc
int3
bound
enter
mov
les
jg
push
sub
xchg
push
inc
xchg
arpl
adc
mov
ret
and
sub
inc
rol
push
test
push
jo
jmp
jmp
int3
push
or
or
bound
push
int3
push
(bad)
int3
jne
in
dec
pusha
outs
dec
fdiv
xchg
cmp
int3
adc
push
dec
or
jno
nop
hlt
lea
rcr
mov
cmc
pop
or
adc
aam
mov
mov
sbb
push
or
pushf
fcom
push
add
mov
dec
outs
out
adc
or
add
movs
xor
inc
imul
add
xchg
ss
repz
loope
rcl
xor
adc
daa
(bad)
push
add
sub
push
mov
fs
cmp
jbe
adc
mov
pop
cdq
sbb
pop
xchg
add
sbb
sub
out
imul
lock
add
scas
data16
(bad)
push
jo
fild
js
pop
cmp
mov
fcomp
jp
sbb
mov
fild
cmp
ins
dec
sub
push
inc
xchg
jmp
inc
mov
add
ss
and
add
rcr
jb
inc
add
cmp
out
nop
xchg
call
daa
das
xor
nop
aaa
out
enter
or
pop
and
pop
out
lock
xchg
(bad)
adc
jne
dec
jo
mov
inc
mov
adc
or
movs
push
shl
jl
movs
retf
popa
dec
pop
sub
xor
xor
push
js
imul
cmp
mov
mov
xor
or
add
cwde
ds
or
push
adc
adc
sub
pop
loope
mov
ret
in
push
(bad)
(bad)
mov
push
data16
aam
adc
add
xor
sti
dec
lock
nop
inc
inc
push
test
cmp
add
loope
outs
dec
ret
fbstp
mov
jns
shl
add
pop
and
jb
ins
jmp
and
ficom
sahf
ret
add
cmps
cmp
jge
std
call
adc
add
test
mov
mov
mov
inc
sbb
dec
push
ja
fdiv
xor
jo
jl
inc
repz
jecxz
push
or
aam
loopne
and
aas
jbe
or
and
pop
ds
mov
repz
cmp
sbb
es
mov
lock
cmp
push
fadd
es
ror
and
rol
inc
sub
mov
sub
mov
xchg
jl
mov
rol
pop
data16
cs
sub
or
mov
push
push
add
stos
call
pop
pushf
pop
push
sbb
icebp
test
and
enter
push
or
ficom
fisubr
repz
mov
aas
inc
inc
lock
sub
add
mov
arpl
fimul
sbb
mov
push
lods
push
inc
mov
push
les
js
sbb
test
das
or
add
jp
add
mov
(bad)
call
sub
or
jb
or
jmp
and
je
mov
ret
mov
ins
jae
mov
sbb
inc
sub
je
imul
pop
and
jl
je
sub
adc
cs
ror
gs
je
mov
and
sub
js
adc
sbb
je
sbb
mov
(bad)
sbb
std
outs
cli
cmp
add
imul
rol
push
mov
cmp
jl
mov
scas
das
sbb
push
out
daa
lods
add
sub
shl
sahf
adc
mov
fsub
xor
jne
je
or
add
in
jmp
add
lods
test
in
mov
adc
add
pop
sbb
aaa
inc
clc
cmp
pop
fsubr
dec
dec
js
sbb
in
sub
add
jl
pop
push
add
pop
js
jg
push
dec
push
sub
mov
pop
nop
cmp
pusha
ds
aas
add
mov
imul
inc
adc
mov
jle
dec
cmp
jge
mov
adc
dec
pushf
(bad)
rcl
adc
fist
fcmovne
pop
aaa
fistp
lods
jns
xrelease
add
xor
sub
dec
ss
call
rcl
sbb
bound
push
aam
sbb
fnstenv
xor
push
cmps
(bad)
(bad)
pop
mov
cdq
idiv
les
inc
pushf
ins
dec
mov
dec
ds
int3
into
fcom
or
adc
(bad)
jbe
mov
rcr
adc
jne
js
sbb
in
jnp
int
mov
push
shl
mov
shr
rcl
push
sar
fimul
loop
nop
add
dec
dec
(bad)
pushf
mov
add
add
add
jmp
bound
in
and
test
sub
mov
push
fadd
popa
pop
enter
es
push
and
adc
and
adc
push
sbb
je
xlat
(bad)
jmp
shl
(bad)
enter
push
sbb
test
cdq
cmp
pop
cmp
les
push
sbb
mov
adc
popf
ret
sbb
ss
push
dec
rcl
dec
sbb
jbe
lea
dec
(bad)
or
sub
les
daa
pusha
int
pop
retf
sti
stos
add
cmp
jge
dec
sbb
xchg
int3
cmp
fsubr
movs
pop
(bad)
stos
ror
pop
sub
xor
xor
test
mov
add
add
inc
rcr
pop
sbb
pop
add
add
jl
js
sbb
jl
pusha
and
sahf
sti
jno
addr16
cmc
hlt
dec
js
mov
jg
pcmpgtd
rcl
pop
rcr
dec
xor
out
sbb
sbb
pop
je
adc
pop
adc
sti
add
dec
or
mov
sbb
pushf
sbb
or
rol
mov
or
xchg
and
cmp
not
mov
push
jne
daa
push
adc
push
jno
test
xor
popf
out
add
pop
dec
mov
or
sbb
dec
outs
(bad)
(bad)
in
mov
and
neg
xor
mov
inc
jmp
cs
mov
jle
inc
icebp
mov
push
in
mov
inc
nop
sbb
sti
(bad)
lods
and
retf
jecxz
or
lahf
sar
neg
add
mov
ins
adc
mov
inc
jns
inc
sub
idiv
js
jl
sub
les
xlat
inc
mov
test
data16
cmovp
or
push
or
test
push
and
or
sbb
add
mov
add
mov
cdq
rol
sub
test
ins
imul
cmp
jmp
adc
add
clc
adc
inc
mov
int3
rcr
or
jp
or
inc
or
fiadd
test
dec
scas
pop
clc
sahf
popa
or
sbb
and
cmp
popa
rcr
cmps
and
fidivr
cmp
mov
jmp
ja
fadd
push
jne
jle
stos
dec
bswap
scas
sub
dec
adc
das
mov
cmp
jl
pop
pop
shl
(bad)
mov
cwde
leave
mov
mov
test
clc
lea
inc
js
test
dec
jb
and
jle
or
push
loopne
or
fmul
jge
add
lock
cmp
ds
mov
cld
pop
push
mov
mov
movzx
add
inc
and
pop
js
mov
(bad)
dec
pop
loop
outs
push
mov
movs
sbb
xor
ror
lahf
addr16
dec
push
aas
in
xchg
mov
push
adc
pop
pushf
icebp
sbb
inc
es
xor
push
pop
adc
add
push
pop
xor
in
test
jbe
cmp
out
rol
sbb
rcl
sub
sbb
ret
inc
and
fdiv
cmps
jl
xor
sbb
jno
loopne
cmp
and
sbb
xor
js
js
(bad)
into
mov
daa
push
adc
sub
mov
xor
pop
es
xor
sbb
xor
lea
lods
inc
ror
add
sbb
sbb
push
(bad)
xor
jge
scas
adc
add
cdq
adc
mov
ret
cwde
cmpxchg
(bad)
aas
ins
pop
lock
loop
or
pop
jp
data16
or
sbb
inc
mov
add
inc
jp
loopne
rcr
and
shl
js
jo
jl
and
loope
add
ss
xor
push
cmovge
inc
int3
adc
dec
call
xor
popf
mov
mov
mov
jae
inc
daa
adc
sub
mov
cmp
fdivr
xchg
(bad)
enter
cwde
ret
sbb
adc
aam
pop
ficom
cmp
push
mov
shl
cli
call
cmp
movs
sbb
jge
aam
mov
fmul
cmps
fcom
push
mov
cwde
mov
push
push
inc
stos
lea
adc
or
sub
pop
cmp
inc
ins
adc
xchg
fcmovne
addr16
fldcw
div
inc
xor
inc
xor
hlt
inc
and
push
stos
ja
lock
mov
inc
push
bound
push
xchg
xchg
js
add
or
adc
ret
mov
cmp
inc
les
shl
mov
pop
mov
push
enter
aaa
mov
push
mov
call
cmp
push
mov
adc
push
dec
or
inc
mov
in
loopne
push
cmp
and
or
mov
lods
imul
add
add
add
scas
outs
inc
cmps
stos
or
mov
ret
xchg
sub
sti
dec
xor
into
add
sbb
aam
test
push
and
jl
sbb
mov
pop
jmp
push
ins
movsx
add
inc
(bad)
jae
int
test
adc
and
push
push
lods
les
xor
xchg
(bad)
mov
stos
pop
sub
rcr
outs
dec
add
or
adc
aaa
sti
jb
fmul
sbb
jno
push
retf
loope
adc
ja
outs
jmp
push
sbb
dec
and
sbb
mov
test
cmp
js
add
add
inc
jmp
aas
je
push
add
xor
mov
sub
test
mov
push
push
push
mov
add
or
jge
sbb
xchg
jo
jmp
mov
fwait
push
cld
push
adc
mov
in
push
jl
pop
inc
retf
inc
or
mov
(bad)
mov
mov
sub
jb
je
dec
je
xchg
lods
shr
mov
xor
mov
mov
call
mov
ror
icebp
push
add
jle
add
cmp
mov
sbb
sbb
cwde
(bad)
outs
add
push
mov
xor
dec
inc
add
pop
mov
mov
lea
add
mov
lds
mov
aad
push
movs
(bad)
adc
popa
lea
sbb
pop
ficomp
cs
mov
sar
push
xor
add
push
or
or
sbb
cmp
xor
nop
dec
xor
add
xchg
jecxz
jbe
xor
outs
or
out
enter
inc
cmp
and
add
and
add
jnp
add
pushf
shl
mov
call
add
es
add
dec
jp
clc
test
jbe
clc
pop
or
sar
sar
shl
div
and
xchg
add
sub
inc
add
adc
inc
pop
xchg
fidivr
test
movs
dec
jo
(bad)
popa
and
sbb
les
cli
dec
jmp
mov
jle
adc
inc
sti
jo
cmp
jge
js
jle
nop
fidiv
and
jg
mov
pop
push
adc
frstor
dec
push
lea
or
dec
ja
mov
jo
mov
dec
push
sbb
inc
cmp
nop
sbb
daa
push
sbb
or
into
jo
mov
fidiv
xchg
push
sbb
adc
cmp
(bad)
int
xchg
jle
push
sub
xchg
fs
or
stos
pop
inc
mov
or
cld
cmp
adc
aas
push
and
sub
add
cld
xor
(bad)
lock
cmp
add
test
test
sbb
xor
in
jge
cmp
jle
inc
aas
mov
sbb
lea
data16
pop
mov
mov
jl
sti
fisub
sti
inc
push
sub
dec
xor
sti
sbb
mov
cli
adc
in
dec
js
push
lods
inc
dec
mov
lock
sar
cmova
xor
or
xor
pop
or
or
mov
mov
fldenv
jmp
xor
pop
sbb
call
or
dec
sar
je
aaa
sub
jns
aad
jl
cmp
loope
fld
cmp
push
mov
or
loopne
lods
clc
jno
add
sbb
inc
add
add
movs
loope
mov
add
(bad)
cmp
mov
push
pop
cmp
movs
fstp
or
fst
mov
out
mov
sbb
sub
loope
nop
sub
or
aaa
xchg
imul
shl
sub
lahf
fidivr
imul
mov
add
xor
add
fimul
scas
mov
sbb
inc
pop
out
sbb
sti
sub
ss
add
adc
add
imul
loop
cmp
out
out
addr16
jmp
mov
or
pop
scas
mov
mov
cmp
test
mov
int3
lock
and
or
mov
je
add
xchg
xor
push
mov
dec
bound
stos
jb
push
adc
sub
or
or
add
adc
cwde
inc
sub
outs
push
fdivr
loop
sti
dec
sub
cwde
mov
dec
ins
push
cs
dec
cmp
stos
push
mov
ror
or
add
aas
add
pop
pop
je
dec
je
jmp
xchg
fstp
and
les
adc
sub
or
or
or
jmp
adc
xor
adc
push
adc
push
dec
mov
xchg
xchg
adc
sahf
mov
inc
in
mov
push
(bad)
psraw
addr16
cmp
push
retf
outs
jmp
mov
xchg
or
or
and
pop
or
push
pop
xor
push
jb
idiv
xor
in
jg
bnd
retf
or
adc
ret
jg
jl
leave
cli
aad
fsubr
add
jae
jl
out
hlt
lds
pop
add
movzx
je
add
jmp
sbb
test
add
mul
add
inc
sbb
and
dec
jne
ins
test
das
add
xchg
sub
mov
movs
sar
mov
add
pop
call
mov
and
lea
sub
shl
adc
fdivr
(bad)
mov
rol
jo
aas
or
or
add
jne
rcl
(bad)
dec
pop
mov
pop
jae
mov
push
or
dec
adc
(bad)
(bad)
das
dec
push
mov
add
push
mov
fstp
jmp
adc
xchg
test
sub
(bad)
cs
pop
mov
jg
mov
or
push
push
sahf
adc
out
add
add
add
repz
je
xor
mov
or
xchg
sbb
mov
es
dec
scas
sbb
je
push
or
ja
cmp
sub
push
call
fwait
sbb
ja
mov
les
mov
nop
sbb
adc
push
sahf
sbb
cmp
fcomp
cmc
xchg
imul
popa
lds
mov
pop
cld
data16
mov
push
adc
push
jo
cs
cmp
xchg
ret
and
dec
xchg
mov
cmp
jb
cs
mov
inc
clc
jge
lods
jne
fisubr
clc
sub
push
scas
lock
pop
arpl
add
jbe
int
add
or
xor
in
clc
jmp
loopne
jno
push
or
xor
push
ror
sbb
ins
add
call
int
inc
popa
inc
and
jg
bound
xor
les
adc
dec
aam
into
or
and
fwait
lock
xadd
add
daa
pop
add
or
outs
rcr
pop
cmps
xchg
aam
pop
mov
inc
mov
inc
xchg
adc
js
jl
shl
or
pop
xchg
jl
sub
inc
lea
push
mov
or
scas
mov
add
ficom
fidiv
push
push
loopne
adc
push
xchg
sbb
sbb
stos
(bad)
xchg
xor
jmp
sar
mov
ds
or
hlt
dec
movs
pop
ds
sub
lea
cmps
jo
inc
push
mov
dec
test
mov
hlt
dec
adc
retf
adc
add
mov
adc
add
nop
in
jb
movs
push
dec
jo
jg
or
and
test
data16
sbb
xchg
ins
and
shl
pop
jne
jle
inc
inc
enter
xor
mov
outs
or
jge
mov
add
mov
cmp
mov
sub
jge
mov
imul
and
in
mov
mov
sub
(bad)
mov
xor
mov
fisub
sbb
mov
fsubrp
ins
and
xchg
leave
mov
stos
pop
adc
sub
ror
jge
add
pop
push
or
dec
inc
push
cld
or
add
test
(bad)
jl
in
das
pop
out
rol
push
push
mov
mov
cmp
sbb
mov
dec
mov
gs
dec
cmps
in
aam
das
xor
add
add
inc
pop
jb
shr
or
and
xor
mov
out
inc
cmp
jl
and
(bad)
out
inc
cmp
jl
add
mov
outs
fdiv
sbb
push
fsub
in
add
or
ror
movups
sbb
mov
jle
push
add
in
jbe
(bad)
mov
inc
pusha
dec
mov
shr
adc
cli
add
loopne
sbb
jbe
out
stos
pop
icebp
cli
push
or
cmp
cmp
xor
test
in
retf
mov
add
mov
add
mov
ins
sub
and
cmp
mov
adc
xor
rcl
rcl
cld
inc
mov
sbb
adc
not
jl
retf
push
lods
cmp
test
in
jmp
movs
sbb
mov
call
jb
cwde
mov
and
call
mov
es
pop
cmps
ret
popf
push
cmp
sub
jns
push
shl
and
je
and
push
(bad)
inc
push
shl
shr
and
or
xor
test
and
pop
adc
and
and
xchg
sbb
pop
popa
pop
push
ja
fcomp
and
xor
sub
jle
mov
add
jmp
mov
retf
sahf
mov
add
aad
lock
jbe
mov
mov
cli
push
push
inc
xchg
sbb
xchg
adc
and
test
ficomp
cmp
sar
inc
jo
push
xchg
fidivr
mov
leave
mov
inc
stc
data16
or
inc
mov
push
test
lods
mov
add
adc
xchg
cmp
push
xor
add
inc
xor
hlt
sub
pop
lods
mov
(bad)
push
mov
jl
retf
mov
(bad)
out
jne
cmp
push
sub
into
test
(bad)
jne
mov
bound
mov
dec
mov
mov
or
add
adc
push
jge
sub
jo
(bad)
data16
mov
pop
mov
push
adc
mov
rcl
(bad)
sub
cmp
int
std
push
fadd
lock
(bad)
adc
add
ins
pushf
sbb
cwde
call
push
aam
push
shl
cmp
push
push
push
inc
loopne
adc
ret
pop
ja
dec
fcomp
and
jbe
mov
push
fdiv
mov
pop
ja
push
test
outs
icebp
faddp
adc
dec
or
adc
loope
call
nop
(bad)
xchg
loopne
sub
out
retf
pop
or
mov
push
cli
mov
mov
out
xor
push
add
div
data16
neg
idiv
mov
adc
inc
push
clc
adc
sbb
push
mov
jge
cmp
jmp
sar
into
pop
dec
fistp
pop
adc
pop
sbb
cs
inc
add
jle
(bad)
loopne
cwde
cmps
push
add
push
adc
sub
sbb
sbb
inc
rcl
pop
imul
push
dec
jle
in
xlat
call
cmp
shl
add
jae
aam
(bad)
mov
or
in
outs
(bad)
mov
sar
sbb
loop
ins
sahf
outs
adc
push
fmul
aas
loop
inc
ret
or
inc
push
(bad)
jns
test
rcl
sbb
cmc
fisubr
in
add
mov
jp
pop
push
lea
push
or
jnp
adc
cmp
inc
and
retf
and
or
sbb
(bad)
rol
sbb
push
xchg
sub
sbb
and
mov
adc
pop
scas
cs
sysenter
and
dec
sbb
or
loopne
adc
out
xchg
mov
inc
sub
xchg
and
or
inc
jo
sahf
mov
push
sub
or
cli
jno
or
push
sbb
sub
or
pop
sbb
sbb
sahf
ins
test
jmp
push
push
jnp
sub
xchg
pop
sbb
ins
cdq
xchg
mov
push
loopne
popa
xlat
imul
scas
dec
or
fld
fcomp
pop
shl
mov
add
pop
adc
mov
or
push
fadd
and
test
mov
push
mov
adc
xor
es
adc
cli
and
cmp
or
je
mov
test
sbb
ins
or
push
push
inc
fimul
push
mov
(bad)
add
mov
scas
ins
loopne
and
mov
out
popf
inc
scas
adc
dec
add
iret
shl
mov
xor
jae
jl
jp
xchg
sbb
push
paddusb
pusha
lock
mov
pop
add
mov
push
push
xor
fst
push
daa
sar
inc
ja
ja
add
int
and
outs
inc
cld
bound
sub
sub
idiv
xor
push
adc
shl
push
or
pop
(bad)
repnz
mov
mov
out
aas
mov
jmp
test
repnz
or
sbb
adc
pop
(bad)
cli
cmp
jl
jp
aaa
sub
stc
popf
jbe
sbb
push
div
cmp
mov
test
mov
loop
xor
push
rol
rcr
push
mov
cmp
mov
sbb
retf
(bad)
jp
hlt
or
sbb
(bad)
data16
enter
mov
sbb
xchg
mov
rol
in
jne
sbb
lds
cmp
sar
or
jle
mov
mov
sub
scas
xchg
fidivr
arpl
push
or
jl
push
addr16
and
sbb
cmp
cmps
test
call
ins
imul
retf
xor
aam
sbb
retf
lock
jno
dec
mov
repz
div
mov
jne
mov
and
push
lea
inc
(bad)
push
push
rol
callw
adc
cwde
xor
sbb
mov
dec
cld
jmp
lea
sub
adc
mov
(bad)
scas
out
test
out
adc
add
fbstp
add
inc
push
div
and
ffree
cli
leave
fadd
inc
inc
jo
or
jge
fdivr
add
mov
call
xor
adc
call
clc
repz
jbe
pop
out
mov
out
popf
pop
les
lea
call
jecxz
push
imul
nop
xor
mov
cwde
inc
clc
push
push
sub
push
pop
dec
or
dec
xor
in
xchg
mov
inc
xor
inc
jb
xor
adc
pop
pop
test
out
out
jp
rcl
lock
cmp
test
sub
adc
add
inc
dec
jb
add
inc
jb
je
cmp
je
jecxz
sbb
sbb
push
das
jle
daa
push
inc
dec
mov
sbb
jae
add
xchg
imul
xchg
mov
cmp
jo
xchg
int3
and
sbb
push
loope
test
cld
fiadd
cmp
add
jmp
mov
or
icebp
xor
inc
sub
nop
push
dec
xchg
sub
mov
xchg
call
enter
mov
jg
push
add
outs
jb
add
ror
adc
push
js
dec
sbb
mov
fadd
or
lods
cli
test
adc
ret
cmps
jns
jae
mov
cmp
inc
clc
inc
aad
ins
leave
adc
add
adc
inc
push
les
in
je
cmp
lea
loopne
ja
clc
jmp
out
pop
mov
pop
nop
out
shl
xor
clc
push
dec
and
(bad)
ja
test
sahf
aam
sbb
inc
and
not
jl
test
lea
mov
jnp
adc
adc
jl
(bad)
faddp
mov
sub
sub
sbb
push
mov
les
push
sbb
shl
cwde
mov
inc
dec
fs
test
adc
ret
in
nop
pop
mov
loope
cmps
jp
mov
jle
inc
shl
je
pop
or
mov
or
out
jbe
mov
xchg
pushf
sbb
push
nop
(bad)
dec
les
add
cli
cmp
or
mov
push
fst
or
bound
inc
daa
cmp
shl
inc
dec
rcr
jmp
ja
aas
fcomp
lods
and
loop
inc
lds
push
and
add
push
jne
or
mov
xor
adc
leave
add
loope
ret
ja
jle
nop
cmp
cmp
and
out
push
pop
popf
or
sub
add
inc
retf
and
push
mov
jae
rol
mov
or
jmp
inc
or
add
add
rcl
sub
retf
jbe
push
maxps
jne
gs
or
fild
fcom
or
in
add
hlt
jge
jl
mul
in
aad
sub
dec
shl
sti
mov
loopne
sbb
jmp
cmp
jnp
inc
dec
add
jo
jl
adc
cwde
dec
iret
or
jo
jp
mov
ins
cmp
adc
xchg
inc
addr16
out
in
xchg
in
sbb
pop
fdiv
(bad)
pop
cmp
mov
mov
mov
xor
sub
sbb
and
push
cmp
popa
lock
cmp
inc
dec
into
or
cmp
mov
xchg
mov
mov
sbb
or
in
fs
inc
sub
mov
enter
and
pushf
mov
push
inc
push
stos
lea
add
enter
push
inc
push
push
cmps
push
sbb
call
ret
or
iret
xor
adc
pop
aaa
scas
push
and
lock
scas
mov
sbb
(bad)
fs
dec
call
or
push
xor
(bad)
(bad)
pop
loop
fild
jns
fsubp
sbb
mov
ins
add
test
sub
dec
ret
mov
pop
or
shl
pusha
add
out
lea
or
push
inc
fnstsw
cmps
inc
inc
ret
xor
jmp
adc
mov
enter
(bad)
div
push
lds
je
daa
cmp
sbb
sub
movs
pushf
daa
(bad)
adc
loope
jmp
cli
(bad)
dec
test
fcom
xchg
mov
push
outs
aas
sti
ss
fist
xchg
(bad)
pop
push
test
jmp
das
(bad)
mov
mov
pop
je
dec
jmp
push
jnp
mov
adc
pop
jb
(bad)
jg
loopne
addr16
sub
jl
push
or
daa
xchg
jne
hlt
leave
pop
jmp
jbe
sub
mov
call
push
cmp
out
outs
aad
dec
test
or
push
adc
jmp
mov
dec
mov
mov
cmp
sbb
and
popa
inc
mov
nop
add
or
jmp
inc
and
(bad)
call
pop
adc
adc
jl
fldenv
test
mov
loope
popa
push
cmp
dec
xchg
movs
nop
sti
loop
push
adc
push
in
es
inc
or
pop
repz
push
push
das
(bad)
jnp
adc
and
(bad)
imul
fwait
mov
bound
loope
mov
pop
pushf
loop
sub
stos
jo
inc
mov
ins
cmps
faddp
pextrw
dec
pop
mov
push
mov
add
sbb
pop
xor
pop
aaa
jae
mov
lahf
sub
retf
hlt
fwait
cwde
pop
popa
adc
inc
inc
cmp
ret
cmp
fidiv
mov
sbb
scas
sub
add
and
mov
shr
inc
jo
jae
retf
add
push
xlat
and
jbe
xchg
cmp
and
js
or
push
test
jo
mov
loopne
jp
xchg
or
jne
xor
pop
or
or
ret
xor
pusha
test
cmp
scas
out
dec
fisttp
cmp
jle
nop
mov
dec
fimul
and
mov
xchg
fwait
imul
les
xchg
sub
sub
arpl
mov
mov
mov
cmp
xor
xchg
mov
jg
dec
fild
cmp
ja
shl
fistp
jl
push
sbb
xchg
call
jl
jo
and
mov
popf
jle
jge
fadd
jns
stos
push
push
xchg
ret
in
or
sbb
daa
hlt
sbb
(bad)
and
dec
jmp
rcr
mov
dec
inc
jne
jmp
pop
mov
icebp
xor
imul
icebp
rol
mov
(bad)
cmp
pushf
push
ins
add
add
add
out
push
mov
dec
dec
and
dec
retf
pop
loopne
sub
mov
movs
cwde
dec
movs
int3
addr16
adc
jmp
sub
gs
data16
xchg
fs
dec
inc
jno
pop
cmp
mov
add
xor
lods
out
pop
push
scas
dec
adc
inc
push
imul
nop
adc
pushf
and
inc
add
cmp
cmp
cmps
ss
inc
adc
push
push
pop
test
xor
test
dec
cmp
stos
rcr
and
scas
retf
and
jge
mov
or
or
sub
dec
test
or
fimul
faddp
sar
jp
jp
dec
cld
mov
xor
pop
test
sbb
daa
test
push
mov
jmp
dec
add
xor
xor
mov
fsubr
and
mov
or
and
daa
lods
jnp
xchg
mov
or
mov
jmp
xor
jl
sbb
sbb
movs
dec
push
and
add
(bad)
(bad)
adc
xchg
mov
pop
push
das
pop
ret
ret
in
cld
fsubr
loopne
cmp
and
nop
jecxz
xchg
rol
sbb
xchg
mov
cwde
inc
or
pop
add
jae
rol
sbb
push
jo
sbb
test
mov
sub
pop
jge
add
sub
jo
leave
test
jl
inc
scas
aaa
lds
loopne
push
shr
jmp
mov
sub
jl
out
mov
sbb
enter
arpl
xchg
add
data16
jl
sub
add
xchg
or
sbb
test
jg
inc
sbb
adc
fs
push
adc
inc
retf
and
inc
or
xchg
push
push
gs
mov
jl
jl
dec
add
sub
inc
mov
imul
pusha
ins
adc
test
push
adc
stos
mov
mov
arpl
mov
scas
xor
push
and
add
push
jo
cmc
push
xchg
mov
outs
adc
ss
leave
sub
dec
je
in
push
imul
inc
mov
mov
dec
scas
inc
pop
or
sub
add
push
lea
add
add
push
sbb
cs
push
sbb
data16
sahf
int3
or
std
push
fdivr
mov
sub
stos
cmp
aad
ds
and
cmp
cmp
cmp
cli
and
cmp
pusha
add
mov
dec
push
sbb
rol
dec
and
mov
cli
mov
dec
inc
push
cli
add
add
cs
bound
add
sbb
xor
adc
cs
inc
clc
mov
add
gs
loopne
sub
stc
mov
xchg
mov
fbld
clc
or
inc
jo
lea
push
adc
cmp
sahf
clc
sub
or
pop
mov
mov
inc
or
call
pop
cmp
jmp
xor
xchg
push
lock
push
(bad)
dec
or
push
cmp
ds
je
jmp
fsub
jg
pop
leave
or
adc
add
repnz
adc
and
mov
push
cmp
push
fmulp
int3
sti
and
mov
add
mov
inc
fdivr
or
scas
add
enter
mov
sbb
mov
aam
adc
or
pop
add
jmp
cmp
fbstp
stos
pushf
and
cmp
jne
sbb
test
adc
leave
jl
pusha
cmp
jg
push
mov
inc
or
pop
mov
add
dec
push
mov
fmul
and
jns
out
mov
lods
ror
dec
repnz
push
sbb
call
(bad)
hlt
aam
pusha
xchg
mov
pop
push
xchg
jo
jns
or
xor
pop
adc
mov
shr
xchg
mov
or
lea
push
mov
inc
hlt
or
sub
shl
push
xor
mov
add
nop
movs
push
add
mov
mov
adc
cs
mov
neg
sbb
sub
push
data16
das
push
in
nop
or
cmps
adc
or
loopne
adc
xlat
in
imul
sub
pop
lock
lock
pop
pusha
push
and
add
test
mov
fs
add
lock
pop
or
mov
push
dec
pop
imul
aaa
aas
je
inc
cwde
cwde
in
dec
sub
loope
(bad)
repz
jae
test
jae
std
add
(bad)
jg
sub
cmp
jae
add
inc
je
push
in
sbb
mov
adc
je
fimul
add
shr
inc
cmp
lods
push
pusha
mov
out
inc
cmps
xchg
cmps
mov
push
mov
dec
je
dec
adc
fadd
test
rol
mov
pop
sub
cmp
(bad)
cli
adc
mov
add
bound
pop
cdq
int3
mov
scas
or
inc
add
ins
cmp
dec
ror
xchg
mov
and
arpl
xchg
arpl
int
mov
mov
mov
(bad)
pop
sub
je
or
xor
mov
or
xchg
push
in
and
(bad)
cmp
jbe
enter
sbb
xchg
data16
loope
ins
add
jmp
adc
jbe
mov
push
std
jo
mov
or
jmp
pop
call
sbb
pop
inc
jmp
jmp
push
add
push
add
lea
fisttp
mov
in
ss
xor
mov
rol
jge
cmp
jno
pushf
loope
ror
pop
test
and
sbb
sub
ss
or
mov
add
je
clc
imul
loop
push
adc
adc
movzx
int3
out
fisttp
and
xchg
clc
inc
jl
dec
lahf
ja
fbld
dec
mov
mov
push
movsx
or
(bad)
and
ret
add
mov
out
sti
int3
push
ds
sub
ret
int3
add
pop
rcr
inc
ja
lods
ja
out
lea
mov
mov
pop
loope
shr
ins
and
inc
fstp
fmul
fmul
fstp
lods
aaa
fdiv
test
mov
dec
jl
shl
int
sub
mov
mov
jae
bound
mov
call
inc
xchg
add
(bad)
icebp
pop
nop
xor
adc
xchg
ja
mov
jle
or
add
mov
lea
xor
add
ret
mov
(bad)
mov
pop
mov
and
add
popa
push
(bad)
les
pop
ret
lods
jno
inc
push
and
sar
clc
mov
sbb
aad
mov
jle
inc
pusha
addr16
add
and
jmp
sti
inc
pop
cmp
fmul
iret
dec
imul
add
xor
call
loope
pop
loopne
sub
add
mov
pusha
inc
scas
call
xor
or
sti
add
pop
and
ss
adc
mov
inc
jo
dec
jp
add
sbb
ja
pop
jmp
pop
mov
hlt
pusha
fsubr
jae
adc
add
sub
in
or
pusha
and
push
or
(bad)
scas
fisubr
es
in
aad
sub
enter
pusha
mov
fwait
adc
pusha
xchg
add
add
add
sub
or
mov
pop
jo
mov
ffreep
xor
ret
aas
call
sub
inc
add
pop
ficomp
cmovnp
mov
sbb
jne
adc
sbb
dec
ret
lea
sbb
push
mov
fs
mov
jo
clc
cmp
jbe
mov
inc
lock
pop
xchg
test
jle
mov
inc
dec
push
jg
ja
cmp
jle
fwait
or
mov
mov
dec
adc
jo
add
shr
cmp
call
cmp
and
rol
jg
mov
add
popf
out
inc
jnp
bound
mov
sbb
sub
jbe
mov
iret
pop
sbb
cmp
jbe
mov
inc
add
ja
xchg
ja
push
push
clc
(bad)
hlt
rol
xchg
xor
sbb
jl
enter
fidivr
jbe
loop
sar
lods
clc
lea
enter
lock
push
jmp
pushf
pop
jb
or
cmp
loop
inc
mov
inc
add
add
int3
sbb
call
or
stos
(bad)
and
lock
loopne
shl
adc
fild
or
shl
mov
in
js
adc
fcomp
xor
push
cmp
add
shl
sar
and
pop
(bad)
adc
add
cmp
int
jae
pop
inc
fiadd
inc
sbb
imul
ja
mov
adc
fisubr
sbb
push
sub
dec
(bad)
aam
add
dec
out
push
sbb
sbb
test
fwait
jp
ret
loopne
dec
clc
add
call
aam
fmul
add
out
test
pop
nop
push
fcomp
inc
mov
pop
xchg
jecxz
adc
or
or
adc
in
mov
add
pop
adc
xor
adc
sub
pop
cwde
xchg
xor
clc
in
in
sub
jbe
mov
sub
call
cli
call
and
bound
add
loopne
xchg
jbe
pop
sar
xor
cmp
sti
add
inc
call
xor
sbb
inc
or
jecxz
loopne
or
clc
add
mov
aad
xchg
push
cmp
push
sub
lods
xlat
push
sbb
add
lods
nop
movs
mov
adc
mov
(bad)
mul
mov
pusha
adc
mov
inc
or
push
push
pop
jo
loop
adc
mov
jle
jmp
jg
leave
jmp
or
or
inc
xor
into
daa
loopne
adc
mov
test
pop
mov
js
lock
aaa
mov
and
jmp
pop
mov
inc
or
enter
push
inc
mov
inc
push
xchg
push
push
mov
push
test
xchg
or
cmp
sbb
sbb
shl
push
push
push
in
sti
cmp
sbb
daa
in
xchg
cmp
add
inc
adc
inc
and
out
add
or
sub
push
push
js
cld
in
clc
mov
add
ds
mov
jge
sub
adc
(bad)
in
test
jmp
and
add
jmp
jmp
adc
fidiv
adc
cli
adc
cmp
jae
popa
sbb
cmp
mov
push
arpl
xchg
inc
or
sbb
jg
pop
mov
daa
xlat
push
pusha
mov
sbb
mov
shr
das
jl
ins
test
(bad)
push
push
sbb
mov
xchg
adc
push
sbb
(bad)
add
or
mov
(bad)
aam
ror
mov
adc
jne
sahf
out
fdiv
or
ins
or
gs
add
out
pop
pusha
push
mov
push
fistp
add
or
outs
cmps
sub
ins
or
or
and
dec
jmp
adc
sub
inc
mov
mov
add
jp
cwde
xchg
cld
fild
fmul
int
mov
adc
inc
fmul
xor
into
imul
fldcw
les
imul
and
pop
rcr
int3
mov
adc
fmul
pop
aam
in
cmp
pop
fdiv
cld
and
(bad)
fsubrp
int3
cs
loop
adc
xor
push
fdiv
xor
pop
push
in
dec
push
cmp
(bad)
pop
loopne
in
call
int
ins
(bad)
in
and
pop
les
gs
pusha
jae
and
adc
sbb
rcr
int3
fld
sbb
and
xchg
add
cmp
sbb
mov
cmps
sbb
push
or
popf
push
in
or
pop
push
fwait
pop
inc
jae
inc
or
mov
fwait
popa
push
arpl
sbb
pushf
mov
pop
sub
out
xor
fwait
mov
push
push
mov
repz
aad
pop
movs
inc
mov
enter
shr
fadd
xor
jne
pop
sbb
clc
sbb
push
test
repz
push
lods
test
push
jl
lahf
popa
inc
ret
jns
arpl
test
iret
lahf
adc
ret
xor
test
jb
clc
add
mov
push
sub
or
in
or
adc
add
cmp
push
aaa
cmp
sub
adc
pop
test
scas
cmp
pop
inc
into
and
inc
add
dec
jmp
call
repz
aas
pop
adc
(bad)
in
aas
aam
mov
jne
daa
rol
mov
cmp
cmp
inc
jns
dec
push
inc
int3
lea
pop
pop
pop
in
jp
mov
jp
mov
mov
div
cmc
mov
jp
dec
or
inc
inc
adc
cmp
mov
in
scas
or
inc
xchg
sbb
pusha
mov
mov
or
gs
outs
dec
lock
stos
adc
js
sbb
in
adc
add
sbb
dec
and
and
(bad)
icebp
mov
add
ds
std
shr
mov
sbb
jge
sub
imul
or
sti
in
cmp
jge
sub
mov
into
push
in
outs
shl
mov
loopne
xor
aaa
cmp
mov
mov
mov
pop
adc
test
outs
test
sub
clc
loopne
jle
loopne
jge
ins
xor
ins
repnz
sub
push
es
sub
test
sti
shl
sub
or
or
cmp
sar
adc
push
pusha
cmps
adc
inc
cmp
into
add
xor
add
pop
ja
mov
inc
loopne
rcr
sbb
xor
or
call
push
push
push
cwde
aas
or
inc
mov
pop
data16
cwde
pop
mov
loopne
push
dec
sub
dec
cmp
sub
or
fwait
xor
jp
sbb
push
add
add
fcomp
or
call
dec
out
sub
adc
pusha
push
add
or
jge
add
or
push
(bad)
add
dec
add
add
xor
cmps
or
xchg
fld1
ficom
push
inc
xchg
pop
inc
push
sbb
jo
xchg
mov
adc
fdivr
outs
adc
mov
mov
dec
add
dec
sbb
pop
or
nop
sub
add
push
and
sbb
shl
mov
loop
push
(bad)
pop
pop
call
pop
fisubr
jae
dec
enter
outs
sub
cs
test
sub
scas
pop
or
xchg
pushf
enter
mov
out
retf
ins
xchg
das
shr
fdiv
stos
(bad)
mov
mov
addr16
ficom
jecxz
outs
inc
in
adc
sbb
cli
inc
inc
xchg
xlat
and
test
jne
mov
add
test
aas
or
div
pop
cmp
xor
sub
es
or
push
push
xor
ret
mov
cmp
adc
push
into
push
pusha
retf
sti
push
neg
aad
and
and
scas
or
mov
in
rcr
dec
mov
ds
or
add
stos
into
out
(bad)
neg
lea
shl
test
mul
xlat
int
and
sub
cs
or
push
jo
xchg
xchg
cld
and
add
mov
inc
push
fiadd
mov
push
js
push
rcl
pop
sbb
mov
push
hlt
xor
fimul
lock
pop
rol
adc
jns
cmp
pusha
data16
inc
lock
push
ins
outs
and
daa
jb
div
sub
pop
dec
push
in
int
push
jb
jl
out
pop
add
js
test
icebp
adc
cmp
hlt
mov
jo
clc
add
add
xchg
push
and
ret
and
and
in
push
sub
ds
in
fst
in
push
add
jne
mov
aas
cmp
xor
adc
push
mov
fimul
mov
test
push
add
stc
pop
ss
(bad)
jmp
pop
cwde
or
(bad)
retf
mov
sub
fcmovnb
sub
imul
and
mov
xchg
jmp
mov
mov
inc
loope
and
and
mov
into
hlt
iret
shl
aad
or
stc
sub
xor
fnstenv
and
lds
pop
mov
aad
xor
sti
jmp
sub
das
sbb
stos
sub
rol
inc
push
adc
push
xor
aaa
(bad)
and
push
dec
add
cli
add
mov
cmp
cmp
cli
lock
adc
cdq
movs
push
mov
push
or
mov
das
loopne
xchg
inc
lods
cmp
push
jge
jp
push
cli
push
push
rcl
push
popf
out
(bad)
enter
cs
fst
pop
je
or
and
sbb
rcl
or
push
neg
(bad)
bound
push
ins
shr
pushf
cli
xor
cmovb
mov
add
out
call
jo
jle
cmps
imul
imul
xor
and
xlat
inc
sub
cmp
add
or
cmp
ficomp
xor
retf
call
scas
cs
sub
clc
adc
gs
mov
or
dec
xchg
push
mov
or
test
jne
xor
in
push
cmp
loopne
repz
rcl
mov
jmp
dec
shr
adc
and
mov
cmp
or
add
scas
hlt
or
adc
shl
adc
push
ins
jmp
mov
(bad)
push
shl
aad
jbe
test
ret
stos
jbe
lock
clc
arpl
push
mov
or
push
and
cmp
add
sub
pop
mov
call
xchg
enter
(bad)
shr
mov
sub
cmp
ror
add
adc
push
and
jl
xor
add
xchg
add
mov
add
xchg
push
mov
or
sbb
mov
and
sbb
xor
inc
jno
xchg
push
out
pop
ret
iret
lock
add
or
out
mov
mov
movs
cmp
cld
xor
xor
xchg
jmp
push
and
ret
call
test
jne
popf
jnp
add
js
int
ja
dec
inc
dec
sar
mov
shl
inc
pop
sub
cmp
pop
es
pop
inc
sahf
test
sub
aam
popa
shl
shr
popa
sbb
add
sbb
enter
mov
mov
and
in
or
push
scas
xchg
mov
jl
xor
sbb
dec
enter
or
xor
pop
pusha
sbb
push
pop
aaa
sbb
add
aaa
ins
xchg
in
ret
jbe
or
push
or
and
rol
jg
sub
lods
mov
pop
and
cmp
jne
xor
mov
fldcw
mov
in
cmp
add
xor
add
mov
push
mov
test
scas
inc
mov
sar
loop
adc
push
scas
loopne
sub
jbe
ret
sub
dec
jmp
int
nop
adc
nop
sbb
or
dec
adc
dec
sub
add
sub
xor
pop
call
imul
xor
mov
les
cwde
dec
jecxz
pop
(bad)
clc
jb
leave
add
outs
pushf
sbb
mov
pop
ret
xchg
lahf
push
cli
adc
ds
sbb
sbb
sbb
add
test
pop
xchg
dec
add
into
inc
inc
or
je
pop
add
pop
add
pop
es
pop
inc
scas
add
ins
pusha
push
daa
addr16
xlat
inc
xchg
out
cmps
jbe
(bad)
inc
leave
add
cmp
jne
mov
jl
or
pop
mov
or
inc
test
or
std
mov
(bad)
in
lea
rcl
or
cmp
inc
jo
loope
cmp
je
inc
add
add
shl
add
ret
adc
mov
icebp
sar
loope
dec
jl
xchg
inc
(bad)
rol
in
and
xchg
push
or
xchg
push
sbb
cwde
js
inc
add
push
adc
jnp
pop
xchg
nop
stos
dec
nop
sbb
jno
ret
shr
adc
xor
mov
pushf
sbb
sbb
cmp
mov
or
hlt
dec
movs
imul
pop
ins
(bad)
adc
(bad)
cmp
mov
bound
test
add
xlat
cs
ja
das
adc
stos
cmps
test
cmps
xor
fdivr
add
push
inc
dec
call
add
test
scas
dec
push
add
push
inc
sub
cmp
dec
mov
neg
mov
pop
not
(bad)
mul
mov
lods
sbb
xor
fwait
ret
add
dec
inc
mov
or
add
dec
adc
bound
call
dec
mov
in
inc
inc
sbb
and
cmp
int
xlat
xor
movs
and
push
and
add
add
mov
add
add
and
and
shl
sub
mov
push
jg
jo
xchg
add
outs
mov
or
ret
lea
or
jno
xchg
add
jo
popa
jle
je
jae
mov
mul
je
and
jg
es
or
in
add
add
add
enter
ror
jl
xor
iret
rcr
or
fistp
inc
mov
test
adc
dec
add
dec
or
dec
push
xor
pop
into
dec
call
in
or
(bad)
(bad)
ficom
test
mov
pop
add
add
lock
sbb
xchg
les
in
lahf
addr16
loopne
adc
mov
fimul
adc
and
popa
popa
call
popa
add
add
sar
sbb
inc
stos
adc
pusha
lock
repz
sar
dec
push
lds
sti
jmp
pushf
(bad)
popf
movs
push
in
push
push
dec
xor
cmp
sub
add
fimul
adc
ja
pop
movs
and
hlt
pop
dec
cmp
add
adc
pop
sbb
add
inc
jmp
mov
push
and
mov
pop
mov
jmp
jl
push
sub
jo
fcom
ins
mov
fidivr
movzx
push
or
adc
push
mov
inc
adc
sbb
or
sbb
add
loop
dec
push
xor
pop
std
lahf
inc
out
ror
jl
pop
xchg
xor
adc
and
cmp
pop
sbb
xchg
or
push
adc
rcl
pop
fwait
aaa
sbb
and
xchg
push
mov
adc
mov
mov
push
imul
add
push
test
arpl
rol
scas
shr
mov
or
ror
jp
mov
adc
pop
test
push
jge
mov
mov
mov
add
or
jb
out
aaa
ret
dec
jne
push
add
fisub
cmp
sbb
stc
cmps
mov
cmp
cmp
jge
rol
xchg
mov
mov
jg
push
push
mov
mov
outs
add
or
add
xor
xchg
out
jle
mov
mov
sub
push
sbb
ja
sub
jp
aas
clc
or
mov
mov
test
lock
ror
xchg
iret
adc
and
js
or
inc
out
mov
dec
or
pop
stc
pop
cmp
push
inc
or
dec
jb
xchg
enter
fscale
mov
or
cli
je
test
mov
cmp
or
xchg
test
es
ja
call
mov
sbb
sbb
clc
pop
sbb
sbb
or
jmp
leave
je
adc
inc
cmps
jge
je
jmp
cmc
ins
jmp
xor
cdq
ins
push
outs
cmp
pop
add
push
pop
jmp
jmp
jnp
xchg
loopne
or
pop
adc
mov
or
push
or
adc
mov
mov
rcl
int3
sbb
clc
sbb
xor
sbb
sti
loope
mov
std
dec
add
xchg
adc
xor
inc
fimul
and
clc
or
adc
xor
or
adc
sub
cld
clc
hlt
dec
mov
scas
adc
pop
dec
retf
add
into
mov
in
and
or
jae
cs
fldl2e
xlat
loopne
jmp
pop
jp
add
fist
sbb
pop
pop
scas
xchg
push
mov
das
movs
imul
xor
or
inc
push
jl
mov
test
adc
pop
aaa
jle
pop
enter
fsubr
jle
in
pop
mov
lock
lea
cmp
jne
movs
or
adc
test
test
or
shl
outs
mov
push
xchg
cld
dec
jge
mov
pop
sub
je
mov
in
push
rcl
pop
mul
mov
aam
aaa
jne
das
cmp
retf
pusha
jmp
and
mov
jmp
icebp
xchg
add
jo
and
or
mov
test
iret
sbb
mov
jo
xlat
nop
cmp
inc
add
cld
mov
inc
sbb
es
jb
xor
or
xor
retw
push
les
jb
(bad)
fs
dec
adc
adc
mov
sub
and
pusha
inc
retf
dec
push
push
cs
pop
inc
jbe
adc
xchg
or
cmp
std
dec
mov
sbb
dec
mov
ret
shl
ins
cmp
sbb
or
dec
add
xor
or
mov
fdivp
jecxz
push
neg
mov
mov
jp
push
xor
add
mov
ret
retf
adc
nop
jg
into
pushf
pop
jbe
test
push
out
push
sub
cli
jmp
pop
mov
inc
xchg
int3
xor
loopne
add
pop
ficomp
push
xor
xor
inc
enter
jne
stos
test
test
jbe
mov
inc
fwait
mov
ja
adc
jb
loope
xor
cmp
test
jmp
add
jne
adc
rol
call
push
loopne
bound
cmp
sbb
xor
js
jae
push
push
fwait
jno
jmp
and
lea
aad
movs
jbe
fwait
retf
(bad)
pop
jno
and
sbb
(bad)
pop
iret
xchg
jo
sub
xchg
xchg
add
loope
mov
cwde
adc
pop
xchg
sbb
push
mov
push
out
pop
mov
in
test
inc
popa
hlt
movs
scas
pop
push
pushf
inc
je
or
ret
inc
xchg
popa
xchg
pop
inc
mov
or
xrelease
mov
xor
lods
sub
loopne
test
pop
das
push
loopne
push
xor
ja
adc
movzx
dec
mov
call
call
cmp
cdq
inc
add
retf
loopne
outs
jne
dec
jae
loope
je
dec
pop
lds
add
pop
adc
mov
sbb
dec
rcl
jne
je
mov
sbb
push
mov
sar
and
sub
pop
dec
xor
loop
push
pop
jb
inc
xchg
gs
lds
add
je
imul
aad
jo
fmul
xor
call
mov
inc
fld
mov
call
out
jmp
add
imul
mov
dec
inc
ret
je
outs
pop
lea
add
add
pop
out
jb
out
shl
imul
das
ret
(bad)
fbstp
cli
pop
ja
xchg
mov
addr16
and
iret
movs
mov
in
fist
xor
ret
or
add
ret
popw
and
out
or
cli
push
push
adc
cmp
jb
rol
call
out
adc
sti
movs
jne
cmp
push
jo
das
cld
pop
dec
ror
jp
xchg
xor
enter
mov
or
xor
push
sub
cmp
cmps
cmp
or
pop
pop
inc
pop
mov
test
jp
aas
add
push
jns
push
jge
in
test
jecxz
jmp
push
mov
and
adc
push
push
add
test
push
dec
xchg
or
adc
mov
jmp
dec
popa
addr16
xchg
jnp
sbb
push
pop
sub
inc
inc
sub
das
movs
cmp
sub
inc
and
out
cmp
sub
sbb
or
dec
dec
adc
rcr
out
ja
cmp
sub
sbb
pushf
cmps
aas
sub
mov
cs
fadd
out
push
adc
jbe
mov
push
pop
adc
inc
and
cmp
lahf
pop
out
sbb
lock
sahf
mov
adc
inc
neg
jns
pop
sbb
test
push
cmp
xlat
jle
and
push
lea
and
loopne
pop
add
lea
fcom
sbb
sub
loopne
xchg
nop
inc
add
pop
jl
popa
sbb
mov
cmp
or
cs
iret
(bad)
pusha
jnp
add
mov
pop
adc
jmp
mov
dec
mov
pop
cmps
std
mov
sti
push
xchg
push
ret
mov
or
or
mov
sbb
adc
adc
out
mov
mov
mov
rcl
lea
out
or
or
sbb
aam
xchg
daa
sbb
and
adc
in
adc
inc
pusha
cmp
jl
into
jne
in
and
dec
pop
or
test
mov
mov
cmp
xor
jge
mov
test
je
mov
sbb
lods
jne
nop
push
jae
mov
mov
pop
jae
mov
in
jae
mov
add
loope
or
mov
mov
inc
dec
daa
or
fidivr
out
jg
mov
loop
xchg
cmp
push
stc
mov
call
iret
lea
dec
sbb
ficomp
mov
and
retf
inc
sbb
cdq
idiv
imul
sbb
in
lea
add
mov
and
or
ret
inc
or
(bad)
(bad)
shl
mov
add
adc
icebp
add
mov
xchg
ins
xchg
jle
cmp
pop
push
add
add
es
push
push
push
sub
clc
sar
test
pop
cmp
shr
push
sbb
pop
cmp
push
pop
or
cmp
inc
call
push
and
test
jg
xor
mov
lock
mov
sub
(bad)
mov
sbb
inc
push
je
sub
ins
stos
xchg
pop
test
aas
mov
cmp
sahf
cdq
jb
ficom
push
xchg
pop
mov
mov
ds
push
or
add
push
pop
test
outs
inc
push
mov
mov
cmp
inc
fdiv
and
pop
lock
dec
mov
adc
dec
xchg
cmp
add
jo
inc
and
add
or
sub
sbb
jbe
pop
jbe
loop
mov
push
mov
cmp
jmp
xor
cmps
xor
jo
inc
sbb
bnd
inc
mov
pop
or
scas
mov
or
push
out
out
inc
or
or
adc
inc
sub
mov
mov
je
adc
lock
sbb
push
add
fistp
add
cmp
jo
lea
adc
or
dec
and
out
call
ds
add
ins
sbb
xor
ret
cmp
jg
inc
cmp
data16
or
and
in
fsubr
icebp
push
push
dec
rcl
pop
and
mov
mov
jl
sbb
pop
cmps
stc
pop
je
test
jae
les
xor
jns
mov
aad
or
not
fs
xor
mov
mov
std
data16
call
sbb
fld
cmp
pop
icebp
pop
ret
push
lock
sbb
sbb
xor
push
mov
or
push
dec
stos
cld
add
adc
push
ret
(bad)
arpl
jle
lea
xor
mov
inc
add
cmp
jle
cmp
sub
je
mov
adc
dec
inc
pop
xor
mov
mov
add
jp
int3
cwde
xchg
push
fwait
adc
mov
out
lahf
loopne
lock
push
enter
push
pop
(bad)
movs
pop
aaa
ret
or
ins
mov
loopne
sbb
and
loope
add
dec
dec
push
aam
je
mov
inc
lock
adc
popa
sub
or
add
push
cmp
sub
(bad)
cmc
loope
and
push
and
out
mov
add
mov
cmps
mov
xor
sub
mov
push
aaa
jae
or
adc
dec
mov
add
xor
mov
fwait
ds
or
adc
and
movs
or
(bad)
add
xchg
adc
dec
pop
xchg
mov
loopne
ss
das
cmp
repz
loopne
mov
push
push
dec
int
adc
fld
adc
mov
cmps
dec
icebp
adc
jmp
jae
into
jo
or
cli
movlps
add
push
mov
xor
dec
jge
out
mov
push
push
xor
xor
ret
clc
sub
cmp
retf
repz
mov
or
(bad)
out
lock
sbb
iret
jae
adc
sbb
pusha
sbb
leave
test
leave
inc
push
dec
sub
xor
inc
imul
pop
xor
xchg
int3
sbb
std
jb
leave
and
mov
sub
sar
popa
mov
or
mov
or
inc
xchg
ret
add
dec
popf
push
add
into
push
stos
bts
or
mov
les
adc
jno
lods
push
data16
popa
lea
jmp
inc
add
scas
inc
and
pop
loope
(bad)
cmp
cmp
clc
add
or
test
mov
dec
sbb
sti
push
ret
shr
sub
add
or
shl
add
inc
inc
and
inc
push
or
iret
int
lea
cmp
movhps
inc
push
leave
retf
movs
cmp
dec
or
push
cli
and
cmp
dec
fs
jnp
jb
fstp
sar
addr16
sahf
jge
lods
shr
js
inc
jg
cmp
ffree
jbe
and
and
sub
fisttp
cmc
xchg
clc
or
imul
ja
shr
sbb
jmp
push
dec
lock
mov
and
jle
sbb
aam
aad
sub
mov
add
inc
inc
lock
outs
or
mov
add
or
iret
add
(bad)
push
mov
rol
(bad)
ins
or
jo
je
xchg
je
cmp
jge
pop
test
add
dec
cld
popf
fild
xadd
add
jbe
add
leave
call
mov
hlt
xchg
sbb
cmp
adc
push
fild
fwait
xchg
mov
pop
and
mov
push
sar
test
fadd
sub
data16
add
pop
add
xor
dec
add
ins
sub
dec
add
pop
push
fbstp
sub
jmp
mov
mov
pop
or
push
or
jno
dec
pop
push
mov
mov
test
je
pop
sub
cmps
xchg
sbb
je
sti
shr
or
movs
adc
cmp
sti
mov
or
pusha
mov
cli
jmp
(bad)
mov
and
mov
ret
xor
adc
dec
std
inc
or
push
xchg
dec
or
and
mov
xchg
test
cmp
je
cmp
sbb
data16
add
mov
(bad)
jae
lock
xlat
call
ret
push
lea
dec
push
xor
iret
adc
sub
jmp
sub
push
pop
mov
addr16
adc
jl
jae
dec
in
pop
shl
cmp
jbe
out
pop
movs
jecxz
cdq
sti
and
popf
sub
ja
jg
(bad)
cs
push
mov
cwde
adc
mov
out
iret
jne
in
adc
xchg
or
inc
jne
xadd
or
and
ror
mov
rol
jb
adc
add
sbb
inc
lea
adc
fcom
loopne
or
jl
sub
idiv
or
dec
adc
out
fistp
xor
inc
xor
lock
or
loop
cmp
push
sbb
or
sbb
pop
dec
es
(bad)
sbb
ds
mov
mov
pop
mov
test
xor
pop
out
adc
xchg
dec
fiadd
push
adc
mov
jne
cmp
or
ficom
mov
sub
addr16
mov
mov
jmp
sub
(bad)
and
jmp
out
in
and
add
popa
add
jecxz
(bad)
xchg
sbb
mov
jb
cmc
push
xor
dec
or
adc
inc
nop
inc
mov
add
movs
mov
es
fstp
je
or
popf
or
mov
mov
jl
cli
sbb
inc
add
leave
jne
cmp
fsub
sti
sbb
fist
fild
fsubr
cmp
adc
dec
aaa
dec
or
xor
cmp
xor
daa
inc
pusha
add
rcl
xchg
clc
jbe
push
fs
jl
push
sti
or
test
pop
xchg
add
inc
jmp
xor
or
dec
pop
sbb
and
or
jg
xor
pusha
adc
imul
add
in
dec
fs
inc
jmp
shr
outs
fadd
and
add
jne
sbb
loopne
jb
push
ds
shl
or
pop
jmp
(bad)
push
mov
mov
sub
test
fistp
daa
mov
out
sar
and
sub
mov
mov
push
ins
xchg
pop
or
jmp
push
fisttp
cmp
add
pop
cmp
jl
cmp
mov
or
pop
or
je
mov
je
shr
or
test
add
ret
or
repnz
adc
ror
popa
add
push
arpl
js
ss
jmp
jmp
shl
add
pop
or
xchg
lahf
iret
mov
xlat
jl
out
adc
sbb
icebp
xor
(bad)
or
into
jp
dec
and
add
inc
mov
add
push
mov
mov
or
push
push
xor
add
cmp
jg
mov
fisttp
and
call
xor
jmp
pop
pop
dec
add
loopne
sub
jmp
mov
fistp
pop
xor
push
push
sub
daa
imul
int3
enter
lea
add
push
movs
jge
jl
jnp
jmp
or
push
pop
sub
sub
sbb
sbb
not
rcl
fisubr
mov
stos
cmp
jae
jmp
lods
pop
push
jb
fadd
mov
std
mov
inc
add
cmp
jl
push
and
mov
fld
sbb
rcl
mov
fld
fbld
in
lea
mov
inc
push
mov
inc
test
sbb
adc
sub
sbb
mov
sub
mov
push
shl
jo
sti
mov
movs
inc
add
cmp
jne
lea
sbb
ficomp
dec
adc
out
pop
popa
test
mov
push
jo
fsub
mov
and
dec
das
xchg
test
mov
cli
sbb
or
fdiv
xchg
and
sbb
jl
adc
adc
or
sbb
xor
fsubr
outs
pop
aam
fsubr
pop
sub
(bad)
mov
repz
add
sub
or
je
sub
stc
sbb
and
xchg
icebp
jmp
and
or
ins
or
lock
push
mov
mov
push
pop
ins
dec
sbb
in
daa
(bad)
push
sub
outs
xor
push
popa
shl
adc
rol
xlat
adc
test
stos
shl
sub
iret
loopne
cs
(bad)
loopne
je
outs
jmp
mov
fnstcw
jle
jg
push
or
add
in
jge
out
pop
cmp
in
je
sub
add
hlt
jne
rol
push
cs
jmp
icebp
sub
xchg
mov
nop
div
mov
ret
outs
mov
not
imul
ins
jmp
loope
int
dec
ret
mov
je
ret
pop
mov
or
push
or
pop
shl
std
popf
loopne
test
clc
mov
cmp
mov
rol
jo
mov
dec
outs
retf
and
icebp
das
inc
jmp
mov
add
xchg
pop
mov
clc
adc
fisttp
cmp
movs
(bad)
and
add
mov
dec
xor
or
add
add
(bad)
push
push
fcomp
mov
daa
jne
out
jo
loopne
inc
retf
and
sar
and
mov
lods
cmp
or
inc
movs
test
movs
or
movs
or
rol
push
sbb
aas
fwait
push
add
or
add
xchg
cmp
neg
mov
xchg
fcom
mov
and
sbb
imul
ror
cmp
ret
repnz
or
and
sar
call
add
mov
call
adc
jg
jle
fsubr
les
adc
out
int3
js
mov
jle
adc
ja
xlat
sbb
inc
or
xchg
adc
ss
or
adc
mov
(bad)
ins
mov
mov
loop
lock
add
imul
pop
sbb
inc
sbb
jl
mov
and
das
ja
xlat
mov
imul
inc
or
sub
daa
sub
fstp
ins
(bad)
mov
push
movs
inc
call
popa
lea
push
add
add
cmp
sbb
les
pop
mov
rol
mov
cli
inc
mov
and
js
aas
je
mov
and
add
jmp
loopne
das
clc
ins
mov
push
inc
icebp
pop
pusha
cmp
sub
jmp
ins
and
xchg
jae
or
xor
or
mov
inc
push
mov
fcom
sbb
and
jnp
mov
mov
mul
cmp
or
jno
push
not
dec
and
inc
pop
int3
xchg
push
push
push
ins
mov
jl
push
mov
test
jl
adc
sbb
cmp
loopne
(bad)
popa
arpl
cmp
out
and
sbb
inc
push
cmps
pop
sbb
or
push
or
inc
adc
adc
out
mov
dec
test
jle
sbb
jp
int3
push
aaa
clc
add
test
(bad)
mov
adc
das
or
nop
adc
adc
in
std
outs
pop
test
jl
cmp
jg
push
sbb
sbb
sbb
pop
dec
mov
mov
jne
jne
xor
cwde
dec
sbb
adc
in
xor
inc
sub
adc
mov
lea
pop
(bad)
test
shl
push
dec
add
fbstp
cmp
jge
xor
mov
sbb
add
and
push
push
sbb
cmp
add
test
dec
inc
inc
cmp
push
and
stos
or
cmps
mov
lods
add
test
pop
and
mov
jmp
mov
sub
jne
nop
adc
adc
pop
repz
int3
rol
pushf
mov
mov
push
cmp
bswap
xchg
and
adc
xchg
sub
jle
cmps
std
lds
xor
popf
push
dec
(bad)
sub
cmp
add
movs
or
push
sbb
shr
jmp
imul
ds
add
add
push
or
mov
adc
lea
loope
mov
add
mov
mov
dec
rol
or
mov
mov
lea
push
sar
add
mov
inc
enter
jl
mov
xchg
xor
mov
adc
adc
push
or
jmp
cmp
lds
push
add
or
dec
and
out
xchg
xchg
adc
add
add
or
sbb
cmp
sub
xlat
jne
test
fst
(bad)
push
cmp
mov
adc
or
shl
mov
xor
inc
arpl
cmp
(bad)
mov
and
div
or
push
ret
sbb
inc
ret
pop
shl
aas
retf
pop
pushf
loope
ss
test
cwde
xchg
movs
inc
sub
mov
inc
add
or
add
jbe
aam
xor
lea
add
or
aaa
stos
push
xor
scas
ror
bound
cs
xor
pop
ror
stos
pop
daa
cmp
pusha
lods
outs
retf
ins
shr
push
int3
cmp
mov
pop
iret
out
and
inc
test
inc
mov
add
loope
fcom
test
cmp
loopne
ror
fld
sbb
inc
cmovle
sub
jb
je
repnz
ds
aad
aad
cmps
cmp
xor
mov
mov
retf
push
pop
adc
push
mov
xor
add
cwde
gs
adc
in
adc
cmp
loopne
ds
je
dec
or
adc
or
sub
in
or
xor
jne
outs
test
mov
outs
mov
xchg
inc
mov
dec
or
mov
mov
xor
call
pop
add
or
jo
loop
fwait
xor
dec
sbb
hlt
lods
call
sbb
xchg
rol
imul
and
or
and
mov
(bad)
push
test
jmp
lock
push
xor
inc
cs
pushf
jmp
je
push
push
loopne
jmp
mov
int
sub
jmp
sub
out
je
and
add
fisub
jo
lahf
lods
cli
lea
and
pop
add
sbb
out
mul
mov
add
dec
or
jp
inc
pop
xor
mov
fstp
push
jmp
pop
ss
dec
mov
(bad)
std
adc
or
stos
xor
and
or
push
sbb
or
push
pop
add
jge
out
push
push
scas
pop
jmp
or
ret
loop
sbb
rol
push
mov
mov
jne
xor
mov
or
scas
mov
inc
fs
jmp
jmp
add
and
inc
dec
cs
int3
push
xchg
adc
mov
clc
mov
call
cdq
jmp
cmp
jae
inc
or
(bad)
leave
add
push
lea
push
push
jnp
fwait
mov
push
add
jne
inc
call
jnp
xor
or
and
inc
push
not
ss
fcomp
and
push
hlt
dec
mov
js
sbb
dec
repnz
push
inc
or
call
(bad)
inc
mov
rcl
mov
test
jmp
call
mov
(bad)
mov
loopne
pushf
inc
and
adc
shl
push
mov
hlt
(bad)
push
push
xchg
pusha
scas
sub
dec
lock
or
inc
sahf
in
add
jno
ss
and
adc
cs
xor
push
dec
cmp
pop
cmp
push
stos
stc
movs
xchg
fistp
pop
rol
push
push
(bad)
cld
lea
mov
lock
jl
icebp
out
pop
rol
pop
in
fcomp
mov
cmp
retf
std
cmp
cwde
mov
std
push
adc
dec
xor
ror
fild
cmp
jbe
and
in
rcr
xor
outs
push
enter
push
lea
rol
js
and
mov
adc
push
sub
dec
add
sub
rol
cmp
jge
es
and
lock
adc
in
pop
jno
push
jl
inc
push
jmp
inc
jmp
push
fistp
sbb
inc
add
(bad)
push
adc
mov
dec
mov
pop
jae
pop
sar
jnp
dec
cmp
add
scas
inc
or
dec
push
or
inc
mov
add
in
jmp
push
push
imul
scas
xchg
sub
inc
adc
mov
rol
dec
in
mov
add
loope
enter
sbb
movs
or
test
jmp
mov
sbb
adc
into
adc
or
enter
loope
(bad)
(bad)
mov
fistp
in
jo
in
js
shl
mov
cwde
stos
adc
mov
sub
fcomp
cmps
movs
jae
sti
cmp
xor
sti
je
js
push
sti
dec
inc
sti
lock
mov
dec
outs
test
std
push
add
add
les
pop
call
cmp
jne
outs
dec
in
push
or
jmp
clc
cmp
push
jmp
mov
neg
push
(bad)
sub
push
dec
push
push
sbb
inc
push
mov
push
and
fild
cmp
add
jnp
lock
in
dec
inc
cmp
in
jg
or
lock
add
inc
xor
push
sbb
rol
into
jne
ret
cmp
and
enter
inc
and
push
xor
mov
cmp
cmps
xor
in
mov
jns
sbb
add
push
adc
or
mov
aam
xor
mov
cmp
add
mov
jl
mov
leave
sub
sbb
(bad)
leave
mov
add
pop
push
fimul
nop
cmps
in
faddp
sbb
rol
adc
add
jo
xor
push
loop
sar
lea
stos
mov
cmp
add
jecxz
pusha
inc
or
lods
or
pop
les
add
mov
cmps
and
loope
cli
and
stos
je
popf
inc
lock
idiv
fdiv
fsub
adc
lock
scas
rcl
mov
pusha
cmp
test
sar
fmul
cmp
ret
mov
mov
ins
cli
and
scas
adc
jge
inc
mov
xor
ds
mov
adc
ficom
movs
add
mov
add
lds
mov
cs
dec
aas
sbb
(bad)
adc
(bad)
xor
mov
in
xchg
add
pushf
clc
push
stos
sbb
add
push
or
sub
nop
adc
shr
or
dec
push
pusha
push
pop
pusha
xor
pop
dec
pop
xor
push
inc
lock
cmp
sar
rol
mov
push
shr
jle
std
add
mov
or
inc
addr16
dec
or
fsub
sbb
push
cmp
dec
adc
adc
cli
mov
jnp
push
lock
out
out
add
dec
je
add
jmp
mov
cld
sub
(bad)
mov
mov
nop
data16
cmp
adc
sbb
pop
sub
inc
push
into
and
add
xor
mov
cwde
mov
fisttp
sbb
movs
xchg
jmp
sub
or
cwde
test
or
cmp
add
mov
dec
xchg
js
mov
cmp
gs
repnz
js
sub
in
jp
cdq
mov
sub
mov
sub
imul
mov
clc
add
(bad)
lahf
pop
pop
sbb
xchg
adc
repnz
pop
and
jge
cmp
fist
mov
mov
cmp
lock
sbb
xor
outs
(bad)
mov
sar
and
jne
mov
inc
push
mov
dec
xchg
push
shr
adc
cmp
(bad)
out
sti
xor
jmp
inc
sar
mov
ja
hlt
mov
data16
xor
out
aaa
inc
pop
test
in
out
xchg
imul
adc
aas
fnstsw
jo
call
pop
popf
ds
push
ja
cmp
mov
fsubp
test
xor
sub
jmp
pop
sbb
in
xor
adc
rol
and
add
jo
inc
mov
cmp
or
lea
mov
jo
imul
xor
sub
mov
cwde
and
sbb
cmp
call
(bad)
das
je
xor
push
mov
icebp
leave
and
nop
retf
add
test
sub
mov
push
inc
pop
lea
ror
mov
cmp
inc
or
dec
add
in
pop
mov
push
test
sbb
pusha
push
icebp
mov
sbb
jae
cmps
mov
push
mov
inc
push
and
cmp
mov
push
mov
add
inc
cmps
call
das
pop
mov
repnz
jle
(bad)
test
add
rol
add
inc
push
push
repz
cmp
mov
and
lea
fs
cs
jb
mov
mov
sbb
clc
mov
push
lahf
cs
sbb
inc
jae
loope
scas
enter
pop
ret
jnp
jb
sub
xor
add
lock
adc
push
xchg
sub
xor
repnz
jno
mov
adc
cdq
ds
mov
dec
mov
test
je
adc
repz
jmp
add
xchg
mov
or
sbb
pusha
and
mov
sub
adc
sbb
or
popf
ret
mov
push
mov
cmp
shl
js
dec
push
sub
or
inc
fmul
add
add
push
jne
lds
pusha
jno
inc
(bad)
jno
clc
inc
pop
loopne
jp
adc
inc
jo
inc
pop
sub
push
mov
sub
fdivrp
ja
add
clc
dec
das
enter
or
stos
adc
lea
or
out
cwde
gs
cmp
mov
lds
push
inc
call
sti
push
iret
cs
cwde
jo
adc
push
sahf
jmp
fs
leave
shl
jg
lahf
pusha
xor
and
(bad)
xor
cmp
shld
int3
add
mov
fild
jns
in
rol
cmps
imul
mov
test
lods
or
push
inc
adc
into
mov
mov
add
shl
inc
cwde
sbb
or
scas
xchg
add
pusha
aam
jp
inc
dec
jb
push
adc
jl
ret
sar
test
lea
add
(bad)
je
mov
add
arpl
ja
addr16
sbb
add
jge
inc
pop
or
dec
ja
hlt
sbb
(bad)
pusha
ja
jbe
adc
in
ds
adc
sbb
(bad)
cdq
cmp
jle
test
fisttp
dec
mov
mov
fld
xchg
lock
je
add
xor
pop
push
loopne
inc
rcl
push
fisttp
sti
ins
sbb
push
mov
dec
add
push
add
clc
ret
adc
ret
rol
loope
pop
cmc
jg
jmp
push
mov
add
cli
out
into
cli
ja
fadd
jecxz
add
mov
cwde
ret
or
loope
pop
or
cmp
dec
push
mov
and
mov
jo
(bad)
clc
mov
shr
lahf
in
ret
inc
sbb
push
inc
xchg
mov
outs
shl
fcom
das
sbb
and
sbb
mov
and
aam
push
or
cmp
retf
mov
(bad)
jg
and
rcl
out
jmp
sbb
sub
mov
pop
inc
pop
loopne
mov
sbb
mov
inc
sbb
lahf
loopne
mov
jb
fsubr
add
cmp
jne
pop
add
or
xchg
push
ror
mov
pop
aam
or
xor
inc
sar
pop
loopne
stos
loope
mov
sbb
push
in
jae
mov
add
mov
mov
xor
add
jb
add
xor
mov
sti
adc
sbb
retf
fcomp
aas
xchg
sbb
jnp
add
rcr
int3
sar
pusha
fisubr
inc
pop
adc
inc
loopne
in
hlt
test
cmp
inc
mov
push
int3
and
mov
in
call
psubsb
pop
or
adc
add
aam
mov
imul
add
or
(bad)
sbb
lock
sahf
ja
sbb
cmp
outs
mov
test
inc
inc
jle
shl
popf
inc
enter
pop
fcom
sub
daa
pusha
adc
push
pop
inc
jbe
rol
fadd
loopne
ror
and
in
fs
stos
pop
jl
or
mov
add
sub
mov
sbb
sti
jp
pop
push
add
loop
xor
test
xchg
xor
pop
leave
loopne
fsub
fcomp
mov
ficom
mov
xchg
fwait
in
ja
mov
pop
pusha
pop
or
mov
push
inc
int3
inc
clc
add
pop
aaa
mov
push
dec
js
std
inc
or
jge
jae
mov
mov
add
inc
inc
sbb
cmp
comiss
xchg
(bad)
sub
add
xchg
sub
mov
dec
or
rcl
cmp
mov
pusha
pop
xor
jae
and
mov
dec
in
imul
jne
sar
out
pop
js
sub
or
inc
sti
mov
push
bound
or
jb
or
mov
mov
add
xchg
sti
add
or
inc
sub
sub
lock
sub
repnz
es
cwde
jle
mov
stc
add
mov
pop
push
and
or
mov
push
add
and
cmp
cmp
mov
or
jle
lock
jg
add
mov
push
add
add
fcomp
xor
sub
pop
outs
jb
xor
mov
inc
rcr
push
cmp
mov
cmps
and
adc
pop
cdq
outs
cdq
push
adc
fs
adc
pusha
add
dec
jno
ret
mov
lods
out
add
jne
movs
ds
and
hlt
movs
push
or
clc
stos
es
je
hlt
sub
jle
push
clc
hlt
das
xor
cld
jge
test
out
xor
es
(bad)
jle
mov
inc
dec
adc
clc
inc
xor
jl
and
xor
dec
inc
dec
daa
fst
dec
movs
xchg
add
ror
inc
push
inc
xor
fsub
stos
shl
pop
jg
push
dec
clc
cwde
ret
cmp
jbe
scas
dec
or
ror
sub
pop
jge
(bad)
call
dec
into
push
call
inc
cmps
sub
pusha
mov
iret
int3
mov
jne
push
add
mov
mov
aam
sbb
idiv
stos
pop
add
cdq
ja
and
jb
jb
inc
imul
pusha
add
adc
mov
add
fdivr
sbb
sub
push
adc
sbb
adc
push
inc
sub
and
adc
dec
int3
js
push
test
fdiv
fs
jmp
jmp
push
jle
cmp
jge
sbb
push
aam
call
fadd
fistp
push
jge
movzx
add
inc
inc
push
jl
pop
shr
(bad)
call
add
pushf
shr
jge
mov
mov
add
(bad)
shl
add
jo
sub
scas
cmp
mov
shr
int3
lea
popa
test
pop
xor
inc
sub
push
cmp
xchg
sbb
xor
mov
or
jbe
jo
mov
push
js
add
mov
lahf
add
sar
cvtdq2ps
dec
gs
ins
xchg
pop
push
add
dec
push
inc
fld
test
jo
sub
test
bswap
mov
push
test
jmp
pusha
inc
xchg
adc
mov
sbb
xchg
cmp
fild
fld
mov
dec
push
lock
jb
call
pop
push
inc
ret
clc
jg
(bad)
inc
daa
inc
add
adc
in
mov
mov
cmp
adc
push
add
inc
add
lock
scas
or
and
dec
sbb
or
add
xor
sti
add
or
jb
inc
or
dec
xor
daa
cmp
add
inc
loopne
xor
cmp
and
adc
mov
jnp
shl
add
ficom
add
adc
sub
cmp
cmp
loopne
ds
mov
pop
mov
inc
shl
mov
cmp
cmps
cs
or
shr
add
mov
test
int3
icebp
xor
mov
cld
mov
push
adc
add
sbb
or
or
or
popa
cmp
push
adc
cmp
dec
es
data16
outs
jbe
ret
xchg
mov
jns
mov
adc
in
cmp
mov
clc
pushf
test
pop
(bad)
aad
in
adc
cmps
cmc
mov
mov
xor
lods
jmp
sbb
ja
push
add
out
and
sbb
out
cmp
jle
pop
push
pop
cmps
adc
push
dec
fisubr
adc
pop
test
out
push
cmp
aam
inc
sbb
add
jl
add
jo
mov
mov
inc
inc
inc
xor
pop
dec
jmp
mov
xchg
loope
rcr
inc
add
loopne
rol
dec
fdivr
xor
push
sbb
inc
clc
inc
rol
adc
retf
inc
adc
inc
out
enter
sbb
push
mov
sbb
sbb
push
push
xchg
push
and
sbb
mov
rcr
mov
add
xor
(bad)
cld
nop
rcl
xor
inc
fsubr
imul
sbb
mov
inc
or
add
scas
xor
add
es
push
xor
gs
clc
xor
repz
fmul
fs
push
mov
clc
or
pop
and
fs
add
in
(bad)
and
popa
or
aam
dec
mov
dec
and
pop
mov
sti
ja
push
ins
mov
enter
shr
jo
adc
jb
inc
or
jae
movs
jmp
pop
and
lods
sar
xor
frstor
and
mov
xchg
jo
popa
mov
out
adc
cld
mov
mov
clc
mov
or
add
or
mov
sbb
and
add
mov
xchg
adc
cmp
xor
ss
int
mov
es
jp
addr16
and
push
mov
add
mov
pushf
adc
or
sbb
jmp
or
sbb
in
or
stc
jne
fst
jmp
out
addr16
dec
shl
in
mov
fsub
retf
andps
retf
jmp
sbb
mov
jb
ror
shl
and
sbb
xor
and
mov
icebp
xor
pusha
shl
add
ror
mov
jp
add
jo
adc
ret
arpl
out
push
inc
sahf
dec
movs
add
pop
test
mov
sbb
xor
sar
jmp
or
pop
adc
sti
add
or
mov
sub
mov
jns
xchg
fs
cdq
dec
test
mov
cmp
or
popf
dec
and
dec
xlat
ins
jle
or
cmp
lock
add
add
fs
cmp
sbb
or
sbb
mov
inc
loopne
xor
xor
mov
inc
leave
jmp
add
add
cmp
jl
ret
pop
jns
add
ret
cld
dec
sub
dec
xchg
pushf
addr16
clc
and
in
cmp
add
mov
push
lock
or
pop
lds
imul
push
sbb
paddusb
fmul
inc
xor
test
fldenv
adc
and
or
and
and
call
pusha
jo
push
pop
xor
imul
iret
mov
dec
sub
inc
and
add
aas
xchg
push
add
sbb
dec
xchg
nop
xor
mov
rol
add
in
scas
sub
pop
test
jbe
push
or
jge
pop
mov
add
add
ror
ds
rcl
add
adc
adc
out
xchg
lea
add
adc
xor
data16
push
pop
aaa
jecxz
pop
sbb
repnz
mov
mov
inc
(bad)
sar
add
cmp
jg
jle
dec
test
sub
ret
jmp
sub
or
out
xor
cmp
dec
sub
hlt
sbb
mov
fs
xor
test
or
sbb
psraw
hlt
cmps
pusha
cmp
inc
and
call
adc
mov
sbb
pop
cmp
sub
and
or
das
fmul
enter
aam
and
jae
das
ror
push
int3
or
sbb
imul
sub
pop
je
addr16
ss
pop
fwait
push
popa
cli
outs
lea
cmps
dec
dec
sub
lock
adc
push
fstp
fldz
fadd
or
pop
clc
test
mov
adc
ja
dec
call
rol
inc
mov
xor
data16
push
das
mov
stos
dec
popf
stos
sbb
jmp
bound
mov
push
pop
push
fdiv
sub
dec
fild
or
add
lea
hlt
or
hlt
(bad)
push
dec
adc
cmp
jl
mov
adc
sub
mov
add
mov
pusha
pop
cld
push
aaa
bound
xchg
ret
add
pop
push
imul
or
cwde
jbe
imul
int3
ja
xor
push
and
push
pop
cli
adc
jp
in
adc
mov
call
fdivp
mov
cmp
pop
or
add
cmp
or
add
xor
push
or
push
out
in
ss
jno
adc
push
or
mov
mov
push
mov
cmp
adc
jo
or
xchg
cmp
mov
push
adc
test
add
rcr
xor
fbld
pop
push
adc
mov
adc
push
mov
mov
push
jle
dec
je
cld
or
or
mov
ret
cwde
push
cwde
xchg
mov
mov
scas
(bad)
lods
nop
mov
enter
push
or
inc
inc
and
push
rol
cmp
push
or
ror
or
dec
cdq
inc
xor
jbe
dec
cmc
lds
jp
adc
outs
jb
stc
test
imul
mov
iret
(bad)
loopne
add
pop
cmp
mov
int
out
jae
cmp
dec
mov
sar
cmp
adc
ins
inc
cmp
jmp
inc
jne
mov
ins
add
add
cmp
lods
loopne
out
in
add
jge
fiadd
push
add
jne
xchg
loope
fistp
scas
push
pushf
adc
add
inc
inc
(bad)
cmp
sbb
mov
pop
call
sbb
fidivr
xchg
or
mov
addr16
cmp
xor
icebp
mov
cmp
loop
mov
pushf
jbe
dec
adc
mov
ret
ja
xchg
cmp
jbe
inc
cmp
xor
adc
inc
sar
jne
cli
push
add
mov
loope
push
xor
xchg
mov
xor
int
pop
and
mov
and
test
add
(bad)
pusha
pusha
fld
(bad)
xor
pusha
fadd
inc
xchg
(bad)
lahf
jle
jg
add
mov
xor
cmp
stos
sbb
inc
inc
cmp
fcomp
mov
and
xchg
(bad)
jl
loopne
imul
pop
ins
xor
and
pop
je
pop
xor
or
mov
inc
adc
jmp
rcl
cmp
or
add
xchg
call
jae
ret
jle
jbe
push
call
inc
mov
aaa
adc
mov
mov
sub
and
or
loope
push
pop
or
adc
pop
inc
dec
add
xchg
call
or
jmp
push
mov
retf
jnp
jns
adc
fistp
repnz
and
sub
adc
sub
cmp
mov
and
cmp
xor
or
adc
push
cmp
loopne
mov
pushf
mov
add
dec
pop
dec
leave
sbb
push
inc
icebp
add
in
stc
cwde
ret
(bad)
push
inc
add
ja
xchg
imul
push
xchg
jmp
cmp
test
mov
fs
fdivr
and
or
test
lods
mov
add
xchg
fsubr
cmp
mov
inc
add
adc
neg
mov
shl
(bad)
not
xor
rcr
sahf
dec
pop
or
push
add
ins
int
(bad)
sub
xchg
or
movd
mov
hlt
mov
jg
loop
fcomi
push
add
inc
shr
std
or
mov
adc
cmp
xor
ret
add
jns
int
add
stos
pop
test
popa
jno
xchg
test
mov
cmp
or
mov
mov
sbb
sbb
stos
push
xor
jae
dec
test
dec
jno
push
scas
jnp
fcomp
mov
inc
and
cli
sahf
mov
xchg
(bad)
in
fdivr
jmp
(bad)
lock
pop
fcmovne
mov
xor
cli
addr16
push
add
mov
in
popa
sahf
scas
push
dec
sub
cmps
add
mov
or
jge
xor
movs
fisub
add
inc
mov
movs
cmovno
test
dec
cmp
xor
pop
xlat
push
sbb
mov
push
test
cmp
int
js
dec
dec
jo
jle
or
push
sub
jge
inc
mul
add
pop
cwde
into
rcr
push
lods
into
add
movs
mov
mov
add
loopne
mov
imul
push
in
mov
or
xor
xchg
loopne
hlt
ja
(bad)
mov
mov
xor
jne
inc
or
sub
icebp
imul
sub
out
(bad)
xchg
sub
aad
in
(bad)
cmp
aas
pushf
inc
mov
popa
cmp
mov
xor
pusha
mov
ja
xchg
pop
dec
cs
cmp
mov
adc
jmp
jne
jno
inc
push
inc
or
inc
inc
or
sahf
div
mov
add
icebp
je
adc
and
adc
inc
call
jbe
mov
sahf
test
or
inc
inc
push
dec
adc
imul
jle
xchg
push
cmp
and
add
push
or
enter
(bad)
js
scas
bnd
or
mov
jmp
or
xor
idiv
pop
mov
lea
jmp
or
aas
sub
shl
or
adc
call
jmp
jl
mov
pop
lea
mov
xchg
add
sbb
ins
sub
enter
or
mov
clc
dec
mov
push
pop
adc
fs
inc
scas
call
mov
adc
mov
or
cmp
repz
mov
fiadd
adc
xlat
push
dec
push
mov
dec
in
jmp
cs
pusha
hlt
fist
cli
add
sub
sub
int
mov
mov
stos
lea
adc
ror
pop
mov
xchg
add
and
sar
cmp
cmp
addr16
int3
jns
int3
test
fiadd
out
sub
add
out
push
add
out
std
idiv
add
add
sar
add
push
fs
add
lea
popf
sbb
shl
sub
add
sar
sti
mov
scas
mov
les
sar
cmp
sub
test
mov
sub
mov
push
adc
push
sbb
sbb
sbb
and
aam
add
bound
(bad)
lock
sbb
xor
pop
sar
mov
and
cwde
mov
fs
nop
mov
mov
xor
sbb
push
pusha
add
sbb
popa
inc
push
not
mov
sbb
jae
ret
mov
ret
jb
pop
into
mov
out
adc
fadd
fstp
pop
fild
push
bound
inc
add
sbb
add
fisub
or
adc
or
push
inc
or
adc
or
aaa
inc
test
push
cmp
cld
adc
add
xchg
and
mov
into
pushf
cdq
jbe
int3
pop
cs
sub
call
adc
adc
adc
cmps
xchg
inc
clc
sub
jl
dec
int3
pop
xor
push
pop
push
dec
push
aaa
and
and
sub
(bad)
push
push
push
rcr
lahf
ins
xchg
sbb
dec
xchg
inc
fld
js
fsubr
sbb
xor
adc
jmp
cmp
je
sub
sbb
push
push
inc
or
cmp
dec
cs
add
call
adc
sub
or
adc
xor
leave
push
nop
sub
or
adc
add
(bad)
sbb
add
xor
sbb
lds
pusha
xor
sbb
sbb
sbb
or
popa
pusha
and
push
sub
inc
das
pusha
adc
das
ror
dec
ret
ins
cmp
dec
into
repz
aas
adc
mov
aas
jne
cmps
aas
test
inc
ss
jge
je
push
inc
mov
pop
xchg
adc
push
call
or
xchg
and
mov
xchg
mov
add
inc
sbb
stos
je
not
es
inc
adc
xchg
mov
pop
or
test
mov
in
(bad)
xor
aam
mov
push
mov
pop
mov
push
xor
cwde
outs
test
jl
cwde
out
jmp
lea
pop
push
movs
sbb
cmp
push
out
dec
fs
add
xor
xchg
inc
movnti
adc
add
mov
mov
pushf
jl
in
jmp
xchg
cs
jns
add
and
jmp
inc
add
sbb
outs
loopne
mov
cld
mov
ins
arpl
jae
movs
call
add
inc
mov
mov
jmp
sub
sbb
imul
or
mov
(bad)
ficomp
add
fstp
push
add
(bad)
loopne
cmp
movzx
push
or
or
xor
jbe
or
jae
pop
and
push
test
jg
ficomp
xlat
inc
mov
inc
mov
add
pop
xor
add
icebp
inc
inc
not
or
mov
sub
inc
lea
test
xor
jmp
cmp
je
(bad)
ja
push
mov
in
loopne
(bad)
jg
add
fimul
add
ins
cmp
pop
or
ror
jo
out
cvtdq2ps
mov
mov
xor
fmul
push
mov
cmp
(bad)
push
lock
jge
div
adc
jne
jg
mov
add
mov
std
sbb
or
adc
or
std
add
add
inc
lods
jl
aaa
jo
pushf
pop
fild
inc
xchg
push
push
retf
jne
mov
test
sub
push
xor
ins
mov
cmc
adc
add
jbe
fcomp
iret
sbb
cmp
(bad)
inc
jnp
mov
xchg
sbb
add
xor
test
adc
or
mov
mov
add
mov
les
movs
outs
mov
xor
mov
sar
or
dec
jo
xchg
or
pop
xchg
dec
aam
push
pusha
mov
add
in
cmp
pop
inc
jns
aam
gs
je
movs
lods
aaa
xor
vaddsd
inc
and
adc
add
mov
push
inc
dec
sub
xor
add
mov
ror
xchg
rol
xchg
call
pop
jg
mov
xchg
or
add
pushf
inc
add
pushf
mov
add
inc
mov
or
adc
call
(bad)
push
xlat
and
hlt
aaa
neg
or
fstp
arpl
mov
call
ja
daa
cmp
cli
dec
and
sbb
or
aaa
or
int3
push
add
cmp
adc
hlt
or
mov
mov
fst
dec
cmp
push
loop
push
(bad)
in
jne
mov
mov
adc
mov
sbb
sub
pop
push
enter
hlt
jns
adc
jp
pop
cli
retf
mov
lea
rol
dec
lock
mov
xchg
xchg
sub
aam
xchg
mov
mov
add
repz
sbb
or
add
push
push
add
test
or
mov
loopne
(bad)
jge
adc
sbb
push
push
loope
adc
xchg
pop
cmp
push
ins
xchg
inc
and
xchg
pop
ss
(bad)
xor
stc
sub
adc
sbb
pop
sbb
pop
mov
sub
les
adc
sub
mov
lea
sbb
xchg
stos
adc
pop
pop
xchg
loope
rcl
jge
sbb
add
inc
mov
jge
neg
xor
mov
push
popf
add
mov
or
mov
cmps
les
stos
cmps
add
mov
inc
jmp
mov
nop
jmp
int
push
das
mov
pop
jno
retf
shl
and
push
repz
mov
jl
push
mov
lahf
mov
jecxz
dec
pop
call
popf
xchg
loopne
xchg
sub
cmp
inc
xchg
rol
cmp
mov
cwde
inc
add
lock
(bad)
das
cmc
and
sbb
lea
(bad)
shr
aas
xor
mov
xchg
dec
mov
mov
xchg
jnp
sbb
add
jnp
sahf
test
mov
mov
mov
or
sub
mov
cs
psraw
jbe
push
dec
adc
sbb
mov
mov
fisttp
ds
mov
cmp
lahf
xlat
push
pop
mov
xlat
retf
mov
test
je
cmp
jl
sub
or
fldcw
sbb
jbe
or
or
imul
sti
je
cmp
jl
ret
je
mov
push
je
outs
push
loop
sar
sub
es
and
sbb
in
test
aaa
cmp
mov
xor
adc
setp
adc
jle
push
mov
pop
sub
lock
cmp
push
adc
shl
hlt
daa
out
out
inc
or
inc
adc
sar
adc
into
jmp
mov
jmp
dec
dec
cmp
idiv
sub
stc
add
inc
add
dec
mov
pop
ret
inc
ja
fimul
add
jg
les
dec
dec
les
cmp
push
ret
dec
sub
call
adc
xchg
cmp
loope
out
inc
xor
sbb
push
inc
inc
inc
jl
mov
jle
and
(bad)
(bad)
pop
sub
or
add
add
jecxz
mov
aas
or
sbb
push
push
iret
js
add
push
sbb
ds
sub
mov
pushf
inc
js
mov
dec
jle
mov
or
popa
stos
push
stos
pop
push
popa
sar
adc
cmp
add
shl
and
sbb
xor
mov
adc
jnp
or
lock
and
mov
xchg
out
fs
adc
mov
inc
in
inc
sbb
mov
ja
mov
xor
ret
push
(bad)
(bad)
(bad)
call
push
jne
xor
push
inc
jo
push
ins
xor
inc
xor
push
dec
pop
jbe
inc
dec
ja
imul
mov
mov
add
nop
enter
call
jae
fs
je
inc
jbe
ins
cs
push
imul
outs
outs
xor
xor
cs
inc
cs
jb
inc
shld
mov
bound
aaa
mov
push
xor
pop
xor
cmp
cmp
jecxz
leave
xor
xor
div
inc
rcl
sti
add
bound
and
inc
sti
push
jb
gs
inc
imul
(bad)
ffreep
inc
inc
pop
push
das
popa
jo
pop
jbe
das
push
icebp
pop
neg
je
fs
popa
inc
repnz
not
je
ins
sar
pop
fcomp
scas
arpl
jo
imul
jmp
outs
ja
ins
outs
popa
push
jb
mov
cli
fs
gs
arpl
dec
gs
mov
dec
sbb
push
push
jae
xchg
pusha
pop
sub
push
sbb
leave
mov
push
arpl
fiadd
popa
outs
stos
jns
arpl
mov
xor
push
push
push
mov
add
add
aam
mov
(bad)
mov
mov
pop
pop
pop
add
pop
adc
jo
jmp
clc
pop
imul
push
add
ins
call
in
cmp
cwde
push
(bad)
iret
sar
js
int3
and
cmp
out
cmp
xor
ja
clc
push
mov
jnp
jnp
mov
xor
jmp
cmovbe
sbb
jmp
and
cvttps2pi
cmp
cmp
xor
cmp
popf
je
sahf
add
pop
aaa
cmp
inc
fs
je
jo
pop
push
inc
push
mov
ins
mov
test
cmp
inc
imul
outs
or
outs
and
dec
pop
dec
(bad)
pusha
sbb
xchg
pop
cmp
dec
push
dec
dec
inc
retf
adc
push
pop
mov
cmc
xlat
popa
ins
mov
cmp
push
inc
mov
push
aas
add
push
fild
inc
or
xchg
mov
inc
(bad)
adc
jmp
cwde
push
and
mov
adc
sub
pop
and
pop
push
and
and
or
jl
fsubr
cdq
sub
fwait
movs
inc
dec
inc
ficom
(bad)
in
cmovae
and
cdq
jns
lds
fiadd
pop
pop
add
popa
ins
jne
add
add
pusha
dec
ror
out
std
je
fbstp
je
add
mov
rcl
add
ins
push
adc
push
mov
sbb
add
push
add
inc
lods
stos
stos
fdiv
sbb
dec
lds
push
adc
push
jo
xchg
mov
and
add
mov
or
outs
jns
popf
inc
hlt
push
pop
lock
or
popf
pop
add
packuswb
lods
sub
js
cdq
push
fistp
push
mov
mov
lahf
or
add
mov
adc
fldcw
fstp
push
cmp
out
outs
mov
or
sub
sub
sub
cwde
ins
and
inc
sub
jns
cs
stos
inc
jbe
add
pop
ror
mov
pop
adc
pop
rol
aam
inc
sbb
jmp
loopne
jo
(bad)
add
or
mov
sub
pushf
gs
inc
pop
dec
lods
mov
or
inc
inc
push
adc
and
ja
inc
in
inc
inc
jae
out
stos
ins
add
pop
aas
add
or
ss
jne
and
cwde
mov
pop
inc
add
sub
inc
pop
mov
push
scas
fld
jae
jo
adc
pop
pop
pop
add
mov
popa
mov
inc
popa
sub
scas
add
adc
stos
and
or
rcr
inc
pop
cs
add
or
pop
fs
scas
add
or
pushf
add
pop
test
jae
jo
mov
pop
xchg
mov
pop
(bad)
ficomp
or
jb
fwait
sub
jne
fs
mov
lea
add
lahf
push
xor
int
loop
rcr
add
or
mov
fidiv
fldcw
sti
stc
ins
test
inc
movsx
dec
xchg
and
inc
addr16
shr
dec
shl
test
cmp
adc
int
and
adc
jno
jns
lods
push
cmp
dec
outs
fisubr
mov
xor
inc
add
dec
mov
adc
jne
xor
or
push
loope
mul
cwde
fwait
adc
shl
lods
inc
or
sbb
add
and
push
pshufw
or
adc
jnp
pop
xchg
pusha
xor
or
xchg
mov
ret
push
iret
inc
xlat
cmp
inc
aad
push
or
ret
xchg
loope
inc
cmp
rcl
mov
inc
xlat
xchg
je
or
inc
std
add
or
adc
cdq
cmp
inc
jl
push
lea
sar
and
arpl
adc
xchg
mov
xlat
daa
pop
push
add
or
adc
je
sti
jg
pusha
push
cwde
shl
adc
xor
inc
hlt
inc
mov
pop
sbb
rol
xor
inc
jb
shl
gs
nop
jae
adc
sbb
sbb
adc
cmp
pop
mov
or
ret
sbb
aaa
sbb
shl
(bad)
mov
iret
add
xchg
jecxz
push
add
add
push
add
ficom
cli
adc
pop
sbb
test
mov
push
lea
push
xor
pop
mov
inc
mov
in
mov
xchg
in
add
cs
cmp
ja
in
outs
xchg
xor
stos
hlt
mov
jmp
mov
test
lock
in
shr
adc
jmp
mov
add
jmp
sbb
and
mov
inc
test
jle
dec
es
popf
rol
add
jae
mov
call
shr
mov
xchg
pop
stos
adc
hlt
jbe
in
xchg
dec
cmp
imul
lea
adc
mov
fadd
mov
mov
or
mov
data16
adc
ror
ficomp
cs
add
pop
jo
mov
add
stc
div
out
push
add
add
aaa
jmp
cmp
data16
ins
add
(bad)
mov
adc
aas
frstor
add
adc
inc
pop
popa
add
data16
or
sbb
arpl
dec
mov
adc
shl
les
jmp
cld
jge
(bad)
jae
mov
mov
cmp
aam
add
sub
dec
and
and
push
mov
push
push
mov
push
cmp
adc
xchg
sbb
dec
sub
and
neg
push
pop
dec
mov
test
loopne
inc
xchg
cwde
pushf
jl
int
lock
xor
out
pop
adc
call
outs
push
cmp
call
push
push
xor
mul
push
aam
push
fcom
test
test
inc
jge
nop
cmps
jge
jl
pop
pop
xchg
sar
inc
sahf
pop
sbb
data16
jg
les
push
imul
push
xchg
jae
xlat
jg
data16
int
sub
mov
iret
lods
or
mov
mov
xor
iret
lods
pop
jnp
jle
movs
data16
test
xor
mov
aam
jg
pushfw
jg
fld
pushf
xchg
pop
jle
imul
mov
jg
pop
enter
pop
jle
in
fcmovb
and
data16
cmp
jg
xchg
jl
test
mov
add
jne
jne
call
(bad)
fistp
(bad)
or
test
je
and
int3
fs
sbb
sub
std
scas
jmp
aaa
and
inc
add
sub
xlat
ss
add
and
sub
or
xchg
ja
push
into
push
cmps
stos
push
mov
aaa
mov
cs
test
add
jl
xchg
outs
sbb
lock
and
sub
fimul
inc
add
push
pushf
dec
add
cs
xor
outs
adc
push
add
pop
es
neg
push
and
ret
push
mov
mov
cmp
jne
sub
shl
rol
push
loop
inc
mov
mov
pop
adc
je
and
fcmovnu
(bad)
fld
add
test
pop
add
pop
mov
mov
push
add
lock
cwde
mov
jo
inc
ror
jge
xchg
dec
jl
pop
imul
in
fld
and
or
movs
push
(bad)
sub
mov
icebp
data16
(bad)
arpl
or
or
mov
pop
sub
sub
sbb
jmp
out
shr
pop
mov
adc
inc
inc
xchg
sbb
fst
jl
add
or
repz
mov
jecxz
lea
test
adc
(bad)
cmc
sbb
sbb
adc
inc
xchg
into
bound
or
ret
mov
and
and
mov
and
pop
cwde
or
pop
not
loope
hlt
and
mov
pop
adc
mov
xor
sti
icebp
imul
cmp
in
push
and
in
xor
sub
jne
mov
out
in
xor
jmp
fiadd
outs
mov
sbb
add
icebp
nop
push
mov
adc
pop
dec
jecxz
lea
or
xchg
adc
and
adc
ins
mov
mov
push
push
outs
dec
jb
adc
xchg
jmp
mov
dec
pop
xchg
dec
sub
jecxz
sbb
lea
cmp
mov
mov
sub
cmp
xchg
pop
in
les
pop
out
or
aas
push
test
hlt
loop
mov
les
pop
push
sub
add
ficom
(bad)
out
lahf
mov
push
add
xor
es
mov
dec
and
jae
fwait
bound
sub
rcl
push
(bad)
fbld
cwde
les
dec
add
and
sub
stos
loopne
xor
outs
js
push
push
ds
je
ds
mov
loopne
dec
or
das
or
arpl
push
daa
mov
mov
pop
nop
or
cld
and
loop
jb
xchg
fsub
dec
inc
sti
(bad)
push
int3
push
add
cld
xchg
pusha
(bad)
(bad)
jecxz
push
cmps
popa
add
xlat
loop
jo
imul
test
(bad)
adc
mov
shl
jae
pop
arpl
js
in
daa
mov
fiadd
jbe
rcr
and
int3
add
pop
pop
sub
xchg
clts
mov
sub
mov
push
loopne
jo
xlat
inc
mov
outs
mov
and
mov
call
sti
in
shl
xor
push
dec
sar
test
sbb
popa
jmp
cli
js
and
fucomi
test
out
add
scas
outs
mov
push
shl
mov
or
adc
es
sbb
cmp
ret
sbb
ss
test
push
loopne
enter
mov
je
aam
ss
inc
mov
and
adc
push
jbe
jae
xor
cmp
add
sahf
mov
add
lods
mov
mov
adc
mov
je
mov
pop
inc
test
sbb
fdivr
sbb
or
pop
cmc
sbb
leave
int
fstp
sar
pop
in
xor
ror
and
daa
xor
(bad)
pop
mov
(bad)
clc
pusha
and
inc
sub
stos
fwait
sub
pop
adc
loopne
jb
xor
sbb
sti
ja
add
mov
dec
or
mov
cmp
ins
add
xor
test
ret
sbb
imul
daa
add
add
inc
daa
and
je
imul
daa
pop
push
popa
(bad)
rcr
or
xor
push
icebp
mov
aaa
in
sub
mov
inc
loopne
into
dec
push
inc
rol
add
lock
out
bound
adc
xchg
movs
ss
sbb
mov
xor
adc
and
jmp
sbb
sub
mov
std
in
lock
stc
dec
loopne
push
xor
inc
inc
add
push
cmp
mov
mov
aad
lock
sbb
and
nop
pop
cmps
test
push
adc
outs
sbb
sub
mov
xor
cmp
inc
aas
ret
sbb
dec
push
add
and
jo
imul
ret
mov
scas
xchg
xor
add
push
xchg
and
in
jbe
cmp
sbb
sbb
cmp
cmps
sbb
test
pop
ret
cld
and
ds
pop
push
adc
mov
pusha
sub
jl
mov
data16
movs
lahf
push
jb
sti
in
pop
in
xor
sbb
adc
push
mov
mov
ror
mov
hlt
ror
mov
push
xor
add
or
mov
jae
dec
jg
aam
push
or
fmul
push
imul
push
aaa
call
or
lods
mov
push
aaa
sub
add
cmc
mov
push
inc
xchg
bound
lods
add
push
cwde
cmps
sub
add
push
out
fbstp
push
in
dec
pop
xchg
mov
test
(bad)
in
cmp
nop
stos
out
dec
xor
mov
es
or
dec
and
mov
ror
mov
cmp
xchg
rcl
xor
pushf
cmps
int
mov
lods
xchg
(bad)
(bad)
pop
rol
inc
add
in
sbb
jle
loope
and
ins
push
mov
mov
loopne
js
movs
and
into
test
mov
mov
call
fcom
add
dec
push
or
mov
cmps
loopne
rol
arpl
mov
xor
call
cmp
ror
mov
dec
int3
mov
sub
inc
fisub
cmp
sub
iret
lods
sub
sub
mov
mov
push
hlt
push
les
fmul
(bad)
pushf
adc
adc
int3
mov
or
stc
dec
fsub
fsub
jecxz
or
pop
pop
into
jbe
cmps
mov
sbb
or
cmp
ja
fstp
mov
fs
movs
js
jae
jmp
push
fcomp
cmp
lock
mov
mov
imul
mov
or
add
jno
inc
fnstcw
mov
push
sbb
mov
mov
pop
in
nop
mov
push
loopne
adc
inc
cmc
mov
and
loop
add
add
add
ss
pusha
push
nop
push
das
xor
sub
add
jp
jmp
idiv
inc
pop
loop
cdq
pop
test
scas
add
jp
push
mov
xor
add
cmp
sub
dec
lods
dec
loop
ss
cmp
ds
add
push
xor
sbb
dec
jo
mov
es
bound
dec
jp
lahf
jbe
fldcw
aaa
addr16
stos
cs
mov
add
(bad)
in
add
xor
adc
call
inc
jae
push
cmp
push
xor
xor
xor
push
push
push
fld
sbb
xchg
(bad)
gs
lods
push
jg
or
lock
cmp
pop
inc
lods
les
pop
xor
data16
cmp
jo
imul
mov
push
push
add
push
es
into
push
hlt
dec
ror
push
inc
int3
pop
(bad)
outs
mov
mov
push
into
push
lock
mov
ss
mov
pusha
ror
nop
hlt
mov
test
jl
sti
(bad)
push
ins
push
movs
retf
ds
push
push
jo
cmp
in
add
dec
fs
push
push
push
and
hlt
loop
xor
or
and
cld
pop
and
sbb
pop
or
popa
dec
outs
fs
gs
inc
lock
push
jb
rcpps
fs
gs
inc
sub
push
pop
inc
inc
push
sbb
(bad)
sub
in
cs
cdq
and
xchg
push
and
cmp
xor
push
imul
inc
ins
in
stos
cmp
mov
sbb
push
rcr
test
or
push
mov
dec
pushf
mov
inc
push
movlps
or
lods
and
popa
imul
or
mov
add
jge
pop
add
mov
xor
sub
mov
push
add
or
jl
jo
adc
imul
pop
xor
push
jo
ss
mov
cdq
adc
inc
pop
mov
outs
sti
add
dec
mov
dec
outs
imul
fcom
mov
dec
jno
pop
adc
adc
sub
push
clc
add
adc
cmp
pop
pop
add
mul
push
loope
cmps
add
call
push
or
sub
(bad)
add
adc
adc
test
push
call
lods
sbb
add
mov
les
inc
test
movs
sahf
and
xor
loopne
adc
pop
ror
and
adc
sbb
jbe
sub
fnstenv
adc
adc
add
in
adc
inc
add
mov
sub
leave
fimul
or
and
add
out
das
add
mov
push
push
mov
mov
out
push
mov
je
in
pop
fnstsw
push
and
gs
call
pop
rol
pop
pop
outs
sbb
outs
mov
sbb
(bad)
fnstsw
inc
mov
inc
mov
xchg
lock
xchg
xor
mov
lods
ss
ja
mov
jle
add
repz
dec
shl
loopne
inc
push
movs
xor
lock
test
add
lds
imul
add
or
cmp
adc
push
fstp
dec
adc
adc
mov
adc
cwde
shl
mov
add
mov
pop
push
lds
adc
sbb
fadd
jg
mov
pop
cmp
pop
jae
icebp
jle
les
mov
and
and
leave
xor
jge
cmp
sbb
ret
lea
in
aas
test
add
push
xor
div
nop
push
xor
int
push
(bad)
aas
cmp
call
dec
mov
adc
in
jmp
cwde
inc
push
mov
mov
fstp
mov
out
into
lock
push
and
push
lea
pop
pop
cmp
inc
dec
repz
daa
mov
xor
pop
std
cmp
je
shl
push
adc
mov
mov
inc
jmp
adc
adc
rcr
addr16
push
sbb
pushf
fcmovnb
dec
sub
stos
(bad)
xlat
pop
xor
mov
loopne
dec
and
or
add
sub
scas
addr16
sahf
inc
mov
cmp
or
cmp
mov
push
and
call
inc
jb
sub
dec
outs
fdivr
push
or
mov
cs
pop
cmps
adc
ds
push
inc
popf
inc
sub
mov
push
fdiv
add
mov
sub
test
inc
and
cmp
xor
out
push
in
shl
mov
loope
enter
les
or
lea
dec
out
enter
inc
and
test
cdq
adc
xlat
push
sub
mov
fmul
outs
mov
ror
pop
loopne
xor
or
pusha
stos
add
mov
sub
nop
call
inc
call
sbb
in
mov
lea
bound
mov
hlt
jp
div
jmp
mov
pop
xchg
imul
mov
xchg
popa
mov
enter
fdivr
out
rol
pop
sub
aam
cmc
fld
movzx
mov
loop
push
pop
(bad)
pop
faddp
inc
cld
xor
fcom
mov
adc
lock
(bad)
aas
cld
jo
push
mov
test
push
rol
lahf
repz
sti
outs
or
add
pop
push
sahf
add
out
jl
add
mov
xor
xchg
or
adc
xchg
add
inc
push
movs
xor
and
sub
sbb
sbb
and
add
and
add
aam
xor
xchg
inc
lock
adc
cmp
xor
and
lock
je
cmp
std
and
mov
push
push
mov
push
xchg
test
outs
cs
sub
inc
xor
sbb
popf
or
cs
xlat
push
sub
jo
push
or
mov
sub
add
sub
aas
dec
jg
inc
push
mov
rcr
aas
dec
es
add
ins
outs
pop
das
unpcklps
aas
jp
dec
add
push
ins
adc
add
jb
dec
or
ja
push
leave
inc
push
cmp
adc
or
push
call
outs
aaa
dec
nop
add
mov
mov
icebp
dec
mov
or
call
rcl
aas
and
cmp
push
cmp
out
cmp
or
sbb
mov
adc
add
das
inc
popf
xlat
cmp
cmp
inc
ins
fidiv
into
imul
push
test
xchg
pop
xchg
inc
add
je
ins
inc
jb
outs
jb
pop
push
xchg
fidiv
push
sbb
jmp
inc
dec
jae
or
ror
pop
lea
in
cmp
push
push
mov
arpl
jae
imul
cmp
mov
cld
iret
add
outs
retf
out
add
(bad)
mov
xbegin
pop
call
or
fisttp
adc
add
clc
(bad)
popa
add
inc
pop
sbb
shr
outs
add
shl
jbe
popa
xchg
and
inc
movs
aas
mov
movs
pop
inc
inc
outs
ins
fs
push
int
push
mov
push
int3
call
sbb
aam
shr
ret
clc
stc
int
pusha
xor
das
or
inc
sub
sub
or
pop
add
add
scas
pop
out
add
cmp
es
push
mov
sahf
ins
pusha
push
sar
outs
or
mov
ja
shr
add
inc
bound
inc
jl
movs
inc
adc
sar
mov
or
ins
ins
outs
inc
push
ins
test
sub
cmp
push
inc
push
(bad)
sbb
sub
xor
xchg
lock
sbb
pop
mov
stos
dec
mov
popa
or
loop
and
ror
lods
(bad)
adc
push
xor
mov
mov
push
jbe
dec
xchg
push
mov
mov
add
mov
hlt
push
and
jp
pop
outs
dec
sub
fldenv
or
lods
push
imul
and
je
ins
push
jb
(bad)
mov
dec
xchg
fs
inc
(bad)
add
movs
(bad)
push
mov
inc
(bad)
fsubr
inc
ins
jle
add
lods
and
xchg
push
mov
lea
sbb
daa
mov
dec
pop
xchg
inc
pop
add
sub
stc
mov
add
jmp
(bad)
fadd
mov
add
add
push
sub
aam
push
xor
dec
adc
jp
xchg
push
inc
cmps
pop
and
mov
lea
cmp
outs
xchg
cmp
scas
sbb
cld
add
call
xchg
fist
je
add
ins
and
mov
mov
lea
mov
pop
fadd
xor
data16
mov
cmova
fs
push
add
enter
pop
ss
xchg
adc
jl
pop
arpl
dec
cmp
dec
mov
dec
in
or
call
arpl
cmp
xor
rol
call
mov
mov
lock
loop
dec
add
mov
lea
jmp
sub
cmp
je
push
pop
sub
sahf
sbb
test
fwait
test
cmp
adc
mov
shl
lods
push
and
cmp
stc
jnp
ror
mov
out
mov
xchg
adc
test
fs
adc
pop
fs
adc
lahf
in
adc
rol
aam
inc
add
outs
add
aam
mov
jbe
push
sub
adc
dec
push
(bad)
and
test
jb
call
repz
pop
push
add
inc
hlt
or
adc
(bad)
inc
cmp
mov
out
(bad)
cmp
dec
mov
call
test
pushf
adc
jg
add
mov
jmp
shr
add
and
or
daa
or
(bad)
loop
loope
adc
cmp
xchg
sub
push
and
fadd
mov
mov
lods
jg
mov
dec
mov
sub
pushf
sbb
and
jge
mov
sbb
out
cmp
dec
clc
mov
add
dec
jo
out
test
jl
inc
xor
and
outs
scas
nop
inc
and
inc
dec
jne
dec
dec
add
out
out
fwait
lahf
inc
and
and
mov
add
sub
(bad)
fwait
(bad)
mov
cli
push
inc
outs
sbb
div
mov
add
mov
and
and
jle
adc
add
pop
rcr
mov
movs
test
into
add
pop
push
push
nop
xchg
push
aas
pop
(bad)
xor
push
sub
sbb
les
sbb
loopne
sub
mov
mov
inc
cmps
in
lods
xchg
ds
push
sbb
ins
ret
dec
stc
xor
pop
add
mov
mov
or
adc
cmp
je
mov
xchg
in
or
(bad)
pop
pop
jne
idiv
(bad)
fiadd
test
push
or
sbb
retf
lds
dec
mov
cmps
mov
sub
fidiv
hlt
add
jl
jmp
shl
jae
cmps
sbb
ret
(bad)
pusha
fnsave
cmp
outs
push
mov
ins
adc
cmp
mov
popa
cwde
sbb
add
pop
mov
mov
mov
add
jne
cmp
mov
lahf
inc
mov
les
jle
mov
pop
push
jmp
push
push
inc
repnz
es
dec
movs
popa
lods
push
loopne
inc
pushf
push
enter
fimul
loope
sbb
or
pop
dec
call
pop
test
sbb
in
mov
popa
sbb
js
sub
and
dec
and
test
and
mov
mov
jbe
and
sti
fistp
outs
and
call
mov
mov
add
add
sbb
jle
add
add
mov
add
jbe
or
xor
push
not
daa
int3
xchg
adc
enter
sbb
lock
jg
js
mov
add
adc
aas
add
cmp
jnp
pusha
je
mov
js
add
and
retf
rcr
push
add
and
iret
push
jns
add
add
dec
jno
sub
sbb
sbb
inc
dec
loope
mov
popa
addr16
inc
rcl
dec
add
loope
add
xor
movs
jns
add
add
mov
add
test
push
sti
jmp
jb
inc
xor
pushf
mov
cmp
int3
push
dec
sub
in
stos
ret
cmps
push
(bad)
jge
dec
jne
cli
adc
stos
or
jnp
dec
or
sub
(bad)
js
cs
add
adc
jae
add
xchg
or
loopne
mov
xor
lea
push
push
push
push
data16
sti
test
mov
pusha
cs
hlt
fs
pop
shl
mov
push
mov
enter
sbb
in
xchg
xor
add
jmp
mov
inc
inc
ret
out
ins
and
or
lds
add
cmp
cmps
or
sbb
ins
xchg
push
push
div
push
mov
div
cmp
adc
pop
lds
jo
aaa
inc
and
dec
or
fadd
aaa
or
bound
lea
or
cs
sub
hlt
jnp
jmp
add
(bad)
and
imul
jno
das
inc
ficom
pop
inc
push
gs
mov
fdiv
inc
outs
pop
add
cdq
ret
lods
call
fmul
sqrtps
and
fmul
cvttps2pi
inc
or
ins
jo
outs
jns
out
cmpps
adc
scas
arpl
jo
xor
push
in
xor
mov
mov
je
outs
popa
ins
fucomi
sbb
gs
jo
xchg
and
addr16
inc
pusha
(bad)
call
fs
popa
jb
cmp
ficom
dec
pop
imul
aam
jne
je
fild
sub
fsub
or
push
cmp
mov
fwait
rcl
pop
imul
fistp
fs
aaa
cs
jo
arpl
das
add
jmp
cmps
push
cmp
push
push
outs
dec
imul
cs
addr16
test
push
jbe
outs
lea
mov
fwait
xchg
dec
or
dec
adc
dec
ds
pusha
sub
push
mov
or
jbe
push
pusha
or
or
mov
add
pop
dec
in
or
cmps
push
push
dec
and
rol
mov
cdq
imul
cmp
int3
pop
dec
xchg
or
inc
pusha
jecxz
sahf
mov
lock
ss
dec
addr16
sub
or
inc
mov
jns
xchg
bound
push
mov
dec
test
dec
sti
(bad)
(bad)
jg
ret
inc
or
mov
sti
cmp
ja
jmp
ds
push
add
je
adc
repz
pop
mov
(bad)
jmp
mov
xchg
jmp
xor
rcr
push
std
test
jne
test
fdiv
not
je
test
je
mov
sahf
sbb
jl
jbe
sbb
repz
arpl
out
inc
push
fmul
add
jl
(bad)
sahf
in
adc
sar
inc
add
add
cmp
jle
fs
add
or
cmp
add
mov
dec
sbb
mov
xchg
mul
rcl
clc
(bad)
push
push
imul
pop
add
mov
inc
ja
daa
sar
or
jge
add
rol
(bad)
jmp
(bad)
outs
or
fisttp
dec
or
add
icebp
loopne
daa
xor
fucomip
sub
push
xchg
js
mov
lock
push
xchg
call
imul
push
cmp
lods
(bad)
pop
rcr
dec
mov
dec
add
push
mov
or
lock
xchg
sub
jl
inc
jmp
aaa
inc
xor
movs
or
mov
mov
test
push
add
or
sar
jl
sbb
inc
aas
dec
sub
mov
cli
adc
lock
add
call
and
mov
cmp
xchg
mov
out
add
cmp
mov
mov
pop
add
sbb
mov
sar
pop
mov
mov
rcl
and
aaa
and
(bad)
outs
lea
(bad)
push
cmp
cmps
jle
mov
mov
fdiv
loopne
shl
popf
enter
xchg
push
(bad)
xchg
in
shr
sbb
ins
out
dec
pushf
push
and
call
mov
out
adc
dec
xchg
lock
ret
sub
(bad)
addr16
sub
or
jnp
jnp
sbb
or
push
mov
stc
loop
or
push
xchg
sub
mov
dec
xor
popf
sub
out
lahf
das
clc
idiv
mov
sbb
rol
push
in
xchg
or
in
mov
mov
call
mov
xchg
add
sahf
std
ja
ins
test
loopne
out
dec
mov
test
jle
fidivr
inc
pop
push
fadd
adc
sbb
jns
and
fsubr
mov
fadd
(bad)
ret
adc
xor
lods
adc
xchg
adc
(bad)
and
push
dec
and
push
add
call
test
inc
dec
jne
sbb
jmp
mov
mov
sbb
mov
loope
dec
adc
push
pop
push
clc
push
imul
call
scas
or
push
ret
pop
test
inc
mov
and
sbb
mov
inc
pusha
test
ja
sbb
sbb
loopne
sbb
inc
jb
mov
push
jmp
aas
push
in
cld
jmp
and
mov
inc
sbb
sub
in
inc
add
dec
push
inc
and
lock
addr16
cmps
loopne
stos
push
adc
neg
xor
xchg
cmps
cmp
les
leave
dec
sub
and
fdiv
faddp
xor
adc
mov
mov
push
jns
add
pminsw
aam
out
ins
push
add
add
outs
sub
jmp
or
or
and
jmp
jle
fild
fdiv
test
(bad)
fstp
fwait
(bad)
in
adc
mov
imul
and
es
fstp
mov
add
das
or
arpl
adc
mov
sub
cmc
dec
imul
cmp
inc
inc
fwait
and
inc
inc
dec
mov
push
shl
ins
sub
loop
adc
imul
add
add
pop
sbb
jle
adc
fild
and
adc
imul
sbb
adc
and
xchg
mov
getsec
xor
add
add
ds
test
mov
adc
add
imul
mov
sub
fstp
das
hlt
js
nop
xor
(bad)
sub
inc
dec
iret
push
jbe
daa
sbb
mov
and
push
xor
les
mov
in
bound
pop
addr16
ds
bound
pop
mov
test
xor
out
push
fadd
add
inc
ret
dec
cs
or
xlat
add
outs
js
inc
pop
adc
fdiv
adc
cs
mov
sub
pop
adc
ins
in
loop
cmp
daa
fsub
je
sbb
add
xor
dec
(bad)
mov
pop
ss
pusha
daa
mov
in
add
lock
jle
dec
mov
out
sub
es
xor
adc
xor
test
movups
xchg
inc
or
retf
out
add
cmp
inc
jle
jmp
push
and
add
add
fidivr
or
inc
dec
jo
fidiv
push
or
je
dec
pop
call
adc
cs
mov
jge
add
push
addr16
push
push
mov
and
movzx
or
and
adc
inc
cmps
push
pop
fst
push
jnp
daa
mov
pop
inc
(bad)
retf
ror
out
clc
das
sub
xor
or
in
mov
ror
push
inc
sar
and
xor
mov
mov
test
call
pop
mov
pop
xchg
clc
mov
inc
es
lock
and
sub
mov
loopne
adc
or
mov
(bad)
add
inc
xchg
or
repz
mov
adc
enter
rcl
add
adc
and
mov
nop
and
es
fs
mov
jecxz
and
icebp
and
shl
test
sbb
cs
cwde
or
xchg
xchg
shl
sub
sbb
and
test
mov
sub
pusha
cmp
sub
push
inc
mov
push
add
sbb
movs
dec
xor
add
mov
sar
sub
div
sub
fcomp
daa
xchg
dec
or
sub
add
adc
pushf
jns
test
push
loope
je
jo
xor
jmp
inc
retf
lock
ret
and
dec
loop
sub
cmp
push
test
sahf
jecxz
dec
clc
test
push
loopne
hlt
sahf
mov
sbb
cs
mov
jmp
lods
dec
ds
out
and
jecxz
hlt
mov
enter
cmp
and
or
loop
pop
sbb
dec
and
pop
add
ror
dec
add
jne
(bad)
jbe
and
jmp
lahf
sbb
push
pop
add
div
push
inc
or
cdq
xor
loopne
adc
xor
in
div
jne
ds
std
add
push
test
jl
iret
js
in
dec
call
xor
push
jecxz
add
cmp
and
mov
ret
or
ds
push
push
xor
dec
dec
movs
(bad)
or
pusha
cmp
and
mov
add
pusha
dec
sub
cmp
push
cmp
mov
dec
sub
pop
rcr
adc
add
lods
and
jb
int3
mov
std
push
sbb
cmps
scas
jne
xchg
scas
fiadd
push
scas
add
aad
ja
pop
push
add
jg
es
add
mov
inc
rol
push
or
les
xor
sbb
cmp
ins
sub
shl
inc
and
jnp
clc
je
test
jne
pop
js
push
mov
inc
mov
mov
xchg
push
push
out
or
loopne
repz
jp
hlt
jmp
(bad)
mov
cmp
adc
or
pop
xor
js
dec
cli
push
(bad)
cli
add
cmp
out
retf
mov
cs
xor
pushf
inc
xor
sbb
ds
(bad)
xor
push
clc
pop
pop
out
cld
test
(bad)
jl
mov
fs
bound
inc
sar
ins
jmp
sub
cmp
xchg
adc
mov
rcl
rcr
or
xlat
das
imul
adc
fsub
cmp
add
movs
sbb
ret
or
test
mov
sbb
pop
dec
test
iret
sbb
sub
adc
dec
les
mov
jp
ds
jmp
sbb
pop
dec
rcl
mov
xor
mov
rcr
outs
in
or
dec
sub
fs
pop
pop
out
fistp
inc
xchg
movzx
(bad)
jne
lock
xchg
jo
in
sbb
mov
mov
in
lods
xor
or
icebp
xchg
inc
add
arpl
xchg
xchg
mov
in
mov
bound
jg
pop
push
mov
daa
sub
cmp
out
jne
inc
mov
pop
mov
dec
and
mov
imul
pop
int3
dec
mov
adc
adc
add
je
and
mov
shr
stc
jbe
mov
inc
outs
or
adc
and
add
mov
xchg
cwde
mov
sub
mov
sbb
sar
sub
mov
aam
je
shl
test
pop
cmp
imul
enter
pop
pop
mov
mov
sbb
pop
ror
or
in
ins
dec
rol
repnz
sar
add
dec
cmp
mov
dec
cmps
dec
mov
mov
mov
(bad)
xchg
daa
mov
dec
jb
jle
dec
lea
in
mov
inc
xchg
dec
daa
call
sbb
out
xor
test
add
push
cmp
push
fdiv
cli
pusha
add
jmp
mov
push
inc
sbb
in
outs
mov
ror
xchg
ret
inc
jne
test
jle
push
sbb
ret
jmp
loope
pusha
cli
sbb
add
sub
sub
xlat
rcr
jbe
test
push
xchg
mov
movs
sub
loop
test
cdq
mov
jge
test
jl
int3
mov
pop
rol
push
sbb
aaa
shl
add
aaa
in
cmp
loopne
sbb
sbb
jno
bound
fstp
sbb
mov
and
and
mov
das
arpl
xor
mov
pop
sbb
mov
cmp
jge
das
xchg
jl
xor
loope
test
cmp
cmp
cmp
arpl
cmp
(bad)
xchg
test
sub
cmp
rcr
or
in
test
loop
je
pop
sbb
cmp
sbb
lea
je
or
test
jo
and
addr16
xor
fwait
pushf
lea
mov
or
push
cmp
jae
mov
pop
mov
sbb
movs
dec
mov
adc
push
or
dec
add
fsubr
pop
push
push
sbb
das
inc
inc
mov
out
std
or
cmp
sbb
sub
add
jge
leave
push
(bad)
push
out
add
aas
pusha
adc
sbb
mov
mov
fmul
adc
loope
popf
test
(bad)
adc
inc
inc
ja
jae
sbb
sub
fidiv
xor
addr16
fstp
inc
ss
mov
ds
sahf
fsubr
mov
arpl
pop
sar
in
xchg
imul
test
sbb
outs
aaa
je
nop
pusha
ins
mov
mov
jle
gs
test
and
sub
jle
loopne
or
(bad)
in
inc
adc
dec
loopne
pushf
adc
cmp
mov
cmp
loopne
inc
inc
push
test
or
lock
jo
add
push
pop
lock
pop
sub
mov
sub
sar
pusha
cdq
push
push
mov
mov
mov
(bad)
clc
fstp
fwait
dec
sub
add
xor
cmp
jle
pop
add
scas
inc
loop
jmp
add
push
mov
push
xor
adc
shl
jl
push
outs
(bad)
dec
loopne
dec
test
push
jno
cmp
push
int
jmp
xchg
out
add
jnp
out
mov
xor
or
loop
lock
dec
das
stos
add
ret
ss
add
add
rol
pop
jecxz
push
sbb
and
dec
inc
stos
push
ins
pusha
jb
jg
pop
cmps
adc
cmp
pop
xchg
ss
dec
adc
pop
movs
or
test
push
dec
das
outs
or
push
dec
add
shl
fcomp
cmps
xor
int3
(bad)
popa
mov
test
movnti
add
or
clc
loope
out
sbb
sub
test
in
push
cli
sti
lods
mov
jo
inc
mov
cmp
add
mov
call
push
cld
push
push
xor
mov
gs
(bad)
out
ret
clc
pop
push
dec
(bad)
shr
pop
aam
xchg
and
pop
lods
add
lods
popf
dec
mov
mov
mov
mov
jbe
sbb
dec
push
in
mov
(bad)
pop
pop
enter
inc
pop
and
xor
rol
adc
out
fbstp
jg
adc
adc
shufps
and
bswap
add
add
cmp
sbb
dec
cmp
ins
mov
cmp
daa
lock
call
or
push
imul
nop
push
sbb
or
test
(bad)
call
sub
clc
sub
(bad)
jl
pop
xchg
mov
or
adc
mov
out
mov
add
jge
add
call
stos
mov
xchg
pop
mov
adc
add
xor
lock
pop
pop
fnsave
ret
mov
repz
rcr
(bad)
mov
bound
push
push
(bad)
push
mov
nop
mov
inc
call
xor
jo
aam
cs
lods
fimul
mov
aam
(bad)
mov
je
inc
xchg
daa
jb
and
xchg
leave
and
fst
add
pushaw
or
xchg
jnp
or
sbb
mov
mov
pop
pop
inc
out
aaa
in
hlt
mov
mov
popa
xchg
movzx
add
add
pop
and
nop
and
inc
mov
jl
jl
in
daa
js
add
fadd
sbb
mov
jo
sahf
jbe
es
movs
std
xchg
sbb
jo
dec
aam
movs
inc
push
pushf
mov
pop
in
mov
mov
push
pop
jp
cmp
dec
xor
stos
ds
mov
je
pop
xlat
std
lea
sub
jo
test
rcl
push
adc
mov
dec
pop
jge
push
and
sbb
dec
jle
daa
ins
mov
cmp
dec
sbb
sar
pop
mov
mov
jne
push
push
movs
mul
xor
and
mov
adc
inc
bound
sbb
cmp
push
xor
sbb
mov
shl
mov
jmp
mov
mov
mov
sub
or
dec
cmp
mov
inc
fdiv
sbb
inc
fisttp
loope
sbb
pop
aaa
push
cs
ss
mov
mov
push
adc
cs
arpl
(bad)
scas
add
inc
mov
cs
add
inc
pusha
inc
fiadd
dec
rcr
adc
pop
or
push
dec
add
idiv
inc
outs
outs
outs
arpl
jb
add
dec
imul
daa
mov
cs
es
ficom
int3
scas
inc
dec
jb
inc
mov
adc
js
or
loop
adc
shr
adc
fld
pop
add
loopne
jne
jns
adc
dec
gs
outs
jne
add
add
push
test
sub
ins
dec
cmp
xchg
ret
xor
outs
std
int3
inc
fsubr
loopne
and
popf
xor
or
add
fs
push
cdq
push
add
(bad)
xor
dec
rcr
jb
jmp
in
and
dec
xchg
retf
adc
xchg
out
cmp
sbb
xor
add
lock
movs
xor
cmp
fucomp
(bad)
sbb
(bad)
push
sub
call
push
inc
lods
inc
or
cmp
mov
mov
add
sbb
adc
mov
ret
cmp
pop
mov
rcr
lock
cmp
mov
cmp
nop
mov
addps
mov
sysret
aas
xor
lea
mov
sbb
inc
sub
mov
add
jecxz
fstp
pop
fidivr
push
leave
rol
sbb
fdivr
cmps
js
push
cmps
loopne
add
add
cmps
sub
pusha
scas
mov
sub
out
add
add
test
jo
inc
jnp
inc
jnp
mov
or
push
jne
dec
enter
sub
sbb
jbe
or
sbb
xchg
leave
adc
jo
not
je
and
sub
iret
fwait
mov
(bad)
sub
(bad)
fstp
ins
pavgw
lds
int
pusha
xor
inc
fsub
push
push
or
jp
sub
pop
es
jnp
xor
ins
jmp
fiadd
adc
add
out
daa
add
mov
iret
rol
iret
in
cmp
mov
mov
pusha
das
es
loopne
mov
movs
es
jno
add
mov
mov
or
pop
and
inc
jmp
jae
inc
push
jle
inc
(bad)
pop
jo
ret
arpl
ror
jo
sti
add
cdq
add
cmp
xor
push
inc
sbb
or
dec
inc
inc
fs
jae
das
sub
rol
pushf
test
inc
(bad)
mov
hlt
jp
ins
xchg
cmp
inc
jno
imul
call
pop
dec
mov
and
jae
cdq
icebp
imul
mov
sbb
jmp
cmp
inc
dec
test
jl
inc
xor
lea
mov
sub
push
rcl
clc
xchg
cmp
dec
jne
mov
scas
pop
ja
cmc
ins
into
inc
sub
xor
adc
push
dec
sbb
sbb
ins
jno
js
les
pop
push
jne
pop
test
mov
ins
jmp
inc
fisubr
js
lock
cmp
push
pinsrw
lock
push
add
sahf
sar
sub
xor
mov
imul
add
push
add
or
daa
jg
and
xchg
dec
pop
and
fs
jl
and
add
dec
sbb
push
xor
outs
daa
loopne
(bad)
push
adc
popa
iret
rol
(bad)
and
add
xchg
mul
data16
cmp
sbb
loopne
nop
pop
repz
xor
add
mov
xor
mov
push
xor
fstp
push
fisttp
cmp
cmp
mov
add
mov
fistp
push
mov
and
jnp
nop
adc
mov
and
rcr
nop
pop
test
sub
cmp
mov
mov
sub
and
dec
jae
push
nop
and
cmps
nop
test
push
movs
and
imul
adc
imul
jae
rcl
add
adc
dec
call
rcr
mov
add
jge
dec
push
xor
or
mov
retf
mov
fcmovnbe
outs
js
mov
mov
cmp
and
sbb
push
pusha
push
mov
add
and
adc
mov
lea
inc
jne
pop
or
push
pop
jbe
retf
fdiv
add
add
fcmove
pusha
adc
ss
es
cmp
test
inc
sbb
jmp
xor
fwait
push
sbb
cmps
dec
jl
jo
lea
mov
fisub
js
add
movs
sub
sar
jns
push
rcr
ds
je
adc
mov
or
es
mov
sub
outs
xchg
movs
mov
sub
push
jae
in
sub
jne
xchg
pop
hlt
xlat
mov
and
jmp
clc
test
pop
nop
dec
test
adc
xchg
push
fmul
mov
push
dec
mov
sbb
lock
call
pop
mov
scas
inc
(bad)
cmp
push
or
sbb
add
xor
(bad)
cmp
mov
repnz
push
dec
sub
sub
pop
mov
mov
fadd
imul
retf
mov
adc
js
daa
xlat
loopne
push
push
lea
mov
sub
mov
js
in
adc
stos
xchg
sub
mov
shl
daa
(bad)
test
les
jne
add
repnz
inc
or
mov
or
mov
imul
in
inc
pop
rcl
nop
and
bound
push
push
add
xor
fsub
lods
rcr
fnstenv
sbb
and
cmp
xchg
inc
std
adc
dec
test
jl
cmp
lods
adc
mov
ja
cmp
pop
loop
or
test
sbb
xchg
pop
push
cs
pusha
mulps
jp
or
xchg
and
idiv
clc
sub
inc
inc
dec
jne
rcr
std
clc
mov
xchg
imul
mov
retf
arpl
sub
mov
jo
sbb
cmps
push
ror
repz
jmp
cmp
dec
shr
aam
mov
cmp
dec
loope
mov
addr16
pop
mov
xchg
outs
jne
sbb
fist
sbb
fiadd
xchg
and
mov
and
cmp
aaa
adc
cmp
push
jns
xor
sahf
push
pop
pop
pop
push
inc
push
xor
adc
push
jb
sub
lahf
lea
adc
push
push
test
fnstsw
add
push
xchg
jecxz
test
inc
shl
not
xchg
pusha
addr16
xchg
fsub
xchg
(bad)
enter
cmp
add
test
out
nop
push
mov
jo
gs
ja
sar
lods
rcl
repnz
mov
js
mov
inc
les
xchg
imul
outs
adc
and
push
arpl
bound
and
in
leave
aas
cmps
sar
sbb
(bad)
into
push
ins
mov
adc
(bad)
pusha
cmp
aad
daa
aaa
push
bound
sub
call
aas
mov
mov
dec
sar
bound
push
pop
dec
pop
xchg
nop
inc
xlat
sbb
adc
mov
cs
lods
or
pop
jo
js
dec
sbb
(bad)
jle
cmp
je
jns
pop
out
xchg
int3
jg
outs
xlat
cmps
add
xchg
xor
pop
add
test
ss
ins
outs
dec
cmp
ret
inc
or
push
inc
loopne
ins
stos
mov
dec
retf
pusha
daa
movs
add
es
sub
fsub
das
adc
adc
or
jg
add
mov
sar
or
dec
sub
push
jae
push
test
xchg
cmp
outs
jo
adc
(bad)
aas
adc
rcr
xor
rcl
push
inc
pusha
mov
add
jle
adc
xor
pop
scas
imul
das
or
repnz
mov
sub
shl
sub
les
xlat
xor
or
inc
nop
pop
iretw
(bad)
push
addr16
gs
retf
push
jg
mov
addr16
sbb
pop
cs
outs
fist
add
pop
push
cmp
jo
pop
(bad)
jae
adc
rcl
cmp
and
pop
sbb
inc
comiss
or
rcl
pop
xor
in
mov
dec
xchg
or
push
iret
sub
ret
push
dec
inc
sbb
xor
aas
sub
sub
daa
pop
or
cmp
mov
(bad)
repnz
int3
dec
inc
xlat
arpl
cmp
stos
add
sub
fisubr
(bad)
xchg
inc
mov
out
stos
add
or
add
cmp
xor
push
mov
data16
fcom
les
dec
mov
(bad)
aas
mov
sub
mov
sub
push
in
shr
arpl
stos
push
add
adc
dec
pop
hlt
dec
cmp
push
aas
xor
add
xchg
out
add
retf
push
adc
ins
and
sbb
add
mov
fisttp
loopne
sub
cwde
and
sub
pop
mov
inc
(bad)
xor
jmp
enter
pop
ss
mov
adc
(bad)
mov
cs
push
push
mov
add
xchg
ret
jbe
nop
cmp
xor
mov
ret
mov
jbe
es
lods
cld
test
lock
mov
add
aam
push
xchg
cmp
mov
push
xchg
ficom
stos
fcos
mov
cmp
dec
mov
cmp
jne
push
adc
fwait
add
pop
xchg
xor
imul
add
fimul
dec
jl
(bad)
push
dec
push
add
out
ss
ins
data16
dec
ins
xchg
arpl
adc
push
fcom
mov
jg
sbb
add
and
jns
scas
jge
mov
add
adc
sbb
adc
out
mov
or
sbb
cmp
mov
and
cmp
out
or
xor
cmp
pushf
cmps
repnz
inc
or
dec
dec
movmskps
lock
push
jecxz
clc
sub
jno
or
and
cmp
sub
movs
push
jbe
xor
and
lahf
pop
test
add
clc
or
leave
mov
cmp
clc
or
xor
lds
push
jmp
popf
test
mov
dec
in
sub
js
xchg
mov
push
push
repnz
add
jnp
loop
jnp
sub
rol
mov
test
or
xchg
(bad)
push
push
jmp
or
sbb
dec
cmp
push
xchg
call
add
sub
leave
push
ficomp
dec
js
inc
lock
xor
dec
dec
push
xchg
pop
push
xor
or
clc
fld
adc
mov
lahf
add
and
jne
push
xor
call
add
jae
loope
xor
pusha
retf
and
outs
ins
cdq
es
call
add
or
inc
add
outs
test
and
(bad)
adc
or
shl
(bad)
rcl
sub
ret
xchg
adc
in
adc
adc
inc
in
mov
lahf
add
mov
stos
inc
out
scas
mov
or
js
mov
lds
xor
xchg
push
or
adc
add
in
out
fnsave
ins
xor
dec
popa
sbb
punpckldq
cmp
lods
pop
dec
scas
jbe
jecxz
leave
je
pop
ins
jecxz
mov
adc
adc
xor
loope
mov
mov
pop
mov
dec
inc
push
jle
data16
mov
push
dec
data16
sub
adc
mov
scas
aaa
and
add
mov
dec
cwde
or
xor
jo
or
pop
sub
test
push
sbb
add
sbb
mov
dec
ja
and
das
sbb
iret
addr16
mov
outs
add
cmp
and
jmp
jge
xchg
push
sub
ss
std
dec
hlt
das
mov
lods
xchg
cmp
jne
mov
mov
push
imul
sahf
es
(bad)
sub
pop
js
lds
mov
push
scas
cmp
test
jo
shl
(bad)
mov
inc
cmp
aaa
jecxz
jae
loopne
and
jnp
sub
loopne
add
adc
jbe
add
aam
inc
add
std
ins
jne
fmul
mov
add
in
out
scas
fstp
push
and
push
nop
rcl
sbb
mov
sub
pusha
es
mov
mov
ror
mov
lea
mov
movs
les
in
sbb
or
and
push
and
sub
data16
push
push
fimul
mov
pop
dec
mov
mov
adc
adc
pop
enter
mov
fisttp
jo
nop
add
sbb
pop
dec
push
cwde
enter
ins
lods
call
sub
hlt
and
test
nop
add
inc
xor
xchg
out
jp
je
movs
daa
add
add
pushf
int3
add
mov
nop
sub
inc
xor
mov
ss
inc
sbb
(bad)
mov
or
aad
hlt
xchg
(bad)
push
pop
push
dec
mov
adc
out
mov
add
add
push
xor
mov
push
or
ss
cmp
xor
inc
adc
pop
inc
xor
int
push
xchg
sbb
rcr
push
push
add
push
push
shl
jae
xlat
or
xchg
data16
cs
sub
idiv
sub
rcl
idiv
cmps
movs
mov
add
pop
ret
push
pop
(bad)
and
popa
test
add
pop
pop
push
retf
sub
sub
pop
or
call
inc
inc
push
mov
cwde
jnp
ja
aas
mov
outs
inc
xchg
(bad)
lods
adc
inc
dec
mov
aaa
push
and
pop
out
js
mov
maxps
addr16
mov
fimul
out
and
xchg
adc
(bad)
int
in
test
push
imul
mov
lods
adc
and
xor
adc
retf
addr16
xor
inc
stos
xchg
retf
xchg
and
scas
out
adc
push
push
cdq
fimul
pop
outs
dec
pop
adc
ficom
enter
jbe
push
inc
sub
in
sbb
pop
pop
cmp
dec
movs
shr
adc
xor
push
test
adc
lea
push
enter
mov
popf
jb
xchg
ret
inc
ds
push
icebp
jmp
ja
jns
inc
(bad)
jge
ror
jle
add
or
(bad)
sub
cdq
test
pop
pop
lock
mov
mov
jae
ror
jae
jne
pop
push
add
loopne
cmc
push
inc
arpl
mov
dec
in
add
or
arpl
imul
(bad)
sti
sub
push
imul
ins
push
ins
popa
arpl
ja
pop
mov
inc
jb
je
add
or
inc
ret
outs
jo
dec
ins
jo
imul
call
pushf
add
jb
or
fdivr
dec
mov
or
call
mov
inc
push
inc
fild
inc
dec
ins
mov
iret
add
push
add
into
xchg
dec
btc
dec
mov
fwait
inc
fs
ins
pusha
inc
cmps
jecxz
dec
add
adc
pop
je
push
jne
stos
and
mov
pop
pop
pop
pusha
add
in
dec
jne
push
or
pop
or
mov
inc
imul
clc
scas
push
outs
popa
jb
dec
gs
pop
lds
or
push
lds
add
or
pop
sar
std
outs
gs
jns
jae
sbb
jb
push
shl
pop
sbb
mov
or
adc
addr16
and
mov
jae
pop
sub
xor
mov
pop
fcomi
mov
mov
push
adc
sbb
cmp
cmp
int
jns
xor
ja
inc
ins
(bad)
int
xlat
ds
or
call
pop
and
or
or
in
mov
ins
je
jns
int3
dec
mov
pop
aam
fimul
aas
ins
xor
push
dec
adc
aaa
xor
data16
outs
ja
xlat
pop
xor
sub
pusha
add
fidiv
ret
shr
push
movs
jnp
pop
ret
push
clc
data16
ror
push
dec
ins
imul
pop
pop
loop
add
xchg
mov
shr
dec
test
jl
jg
(bad)
adc
push
add
rol
dec
jne
xor
test
jle
in
add
rol
jmp
mov
mov
std
out
clc
fdiv
cmp
push
mov
push
movs
push
or
and
or
mov
or
push
ins
add
push
fsubr
sbb
out
dec
test
jl
inc
lea
sti
(bad)
mov
add
or
add
jne
dec
jmp
xor
push
mov
outs
es
dec
jne
cmp
jle
cdq
call
aaa
mov
test
jne
sar
jns
adc
(bad)
pusha
inc
and
jmp
pop
je
or
into
aas
add
outs
push
push
std
movs
(bad)
mov
mov
jbe
pop
mov
xor
mov
fist
mov
mov
xor
jmp
mov
rol
scas
rcl
out
add
mov
pop
fbld
enter
jne
inc
push
in
fistp
jl
or
dec
cmp
jge
mov
imul
neg
retf
add
icebp
in
outs
lock
add
sub
sub
and
fild
lea
and
inc
mov
fild
sar
int3
dec
add
push
movhps
cmp
mov
add
or
push
mov
push
jmp
add
mov
imul
loope
mov
or
mov
movs
jge
sti
and
adc
xor
add
cmp
xchg
dec
add
sbb
hlt
lea
xor
inc
fist
cmp
jle
push
jmp
pusha
neg
ins
les
hlt
cmp
xor
xor
mov
jle
mov
and
(bad)
xchg
inc
jge
cmp
jge
test
inc
lea
dec
add
fadd
mov
shl
inc
sbb
xchg
ret
rcl
add
sbb
add
xor
mov
vcmpsd
not
and
jp
jmp
sub
jb
sbb
lock
adc
pop
xor
mov
adc
and
cmps
push
clc
xchg
outs
es
cld
and
adc
inc
loop
or
mov
inc
sar
test
rol
dec
pushf
push
dec
inc
icebp
xor
adc
jmp
cmp
test
push
imul
xor
adc
add
xchg
gs
dec
sub
sub
fisub
inc
add
adc
fadd
loop
outs
sbb
ins
sbb
ja
adc
sbb
dec
add
sub
clc
dec
fiadd
or
or
clc
je
call
mov
fs
inc
ss
add
and
or
mov
mov
inc
inc
push
mov
inc
push
add
(bad)
out
mov
pop
mov
fld
js
ja
push
cmp
lods
in
mov
addr16
call
inc
jne
div
aas
jbe
cmp
dec
fadd
sbb
sbb
(bad)
cmp
(bad)
push
fld
out
or
nop
inc
push
cmp
pop
pop
js
cmc
mov
dec
inc
push
mov
add
xchg
clc
ins
or
shl
das
pusha
push
jb
std
lods
add
sbb
(bad)
jl
jl
cmps
xchg
mov
mov
mov
mov
sar
lea
or
mov
sub
ret
mul
stos
jne
mov
jmp
mov
loope
mov
sub
mov
outs
into
mov
add
iret
cmp
mov
mov
mov
cmp
and
mov
adc
fldcw
sbb
mov
mov
call
adc
aaa
cli
push
aaa
js
push
cmp
jmp
xchg
add
(bad)
or
sbb
dec
inc
add
std
cmp
and
add
mov
fsubr
(bad)
or
add
cmp
and
jmp
pop
jmp
mov
xchg
ss
pop
mov
sub
es
xor
adc
pusha
and
adc
sbb
inc
lahf
fld
or
xor
mov
sub
stos
adc
outs
test
push
je
mov
mov
daa
ret
adc
repz
sub
pop
pusha
inc
inc
fcmovb
sbb
mov
push
dec
pop
loopne
out
xchg
inc
neg
std
test
add
sbb
ss
dec
inc
(bad)
dec
sub
inc
mov
clc
mov
(bad)
(bad)
sub
push
mov
inc
aad
inc
mov
das
jmp
aad
push
sbb
(bad)
mov
pop
and
stos
dec
sub
jl
mov
aad
jbe
lods
dec
sub
pushf
cmp
ret
add
pop
add
mul
and
test
jbe
xchg
mov
jbe
inc
xchg
lds
inc
mov
sahf
loopne
xor
dec
inc
ja
inc
loopne
xor
add
xchg
cld
add
push
jbe
mov
cmp
jg
out
(bad)
adc
movs
or
test
mov
push
test
sub
jp
add
shl
sub
jge
sub
adc
(bad)
add
push
push
adc
adc
sub
cs
pop
aas
mov
jmp
movs
add
rcr
mov
sub
jo
cmp
inc
cmp
mov
mov
das
mov
ins
cmp
sbb
retf
sbb
or
or
ret
lods
ret
inc
or
outs
scas
pop
ds
xchg
or
ins
add
clc
inc
rol
scas
lea
shl
jmp
mov
pop
popa
cli
pusha
aas
test
jle
test
(bad)
jg
xchg
push
shr
mov
shl
mov
jmp
push
dec
push
pop
into
fisub
or
add
mov
jo
add
cli
nop
je
and
jg
gs
jge
cmp
jae
and
and
or
pop
pop
lds
dec
push
popa
sbb
push
cmp
ds
mov
xor
lea
repz
jo
sub
sbb
mov
pop
movups
inc
addr16
xchg
dec
clc
jg
cmp
jle
mov
es
adc
jl
jo
aaa
xor
out
adc
or
and
and
popf
in
or
sar
ret
dec
sbb
shl
jne
mov
pop
test
jmp
and
jmp
outs
in
fild
jmp
inc
dec
jne
movs
mov
pusha
adc
mov
test
lock
jo
cmp
xor
ins
rol
ss
jo
shr
and
outs
popf
push
shr
outs
inc
daa
push
push
call
sub
mov
cmp
jl
lods
dec
cmp
jp
or
dec
jle
stc
inc
stos
out
es
shr
and
loop
xchg
or
sbb
mov
pop
or
pop
adc
pop
add
add
push
adc
and
mov
xchg
sbb
jo
sar
sbb
clc
mov
mov
in
jge
or
cwde
nop
repnz
mov
popa
repnz
fist
inc
xor
sahf
adc
lea
xor
mov
bound
lds
mov
or
(bad)
stos
dec
cmp
xor
adc
int3
pop
inc
cmp
sbb
ror
xor
adc
in
enter
push
jo
pop
mov
mov
add
add
mov
aaa
aaa
popf
adc
push
fwait
imul
pop
mov
sub
add
cmp
push
outs
ja
adc
push
mov
mov
out
inc
adc
cmp
ja
add
ds
lea
add
test
cmp
call
adc
test
and
test
retf
sub
clc
dec
test
mov
rol
test
cmp
ss
clc
adc
scas
into
outs
mov
ds
in
in
sbb
add
sub
cwde
div
mov
data16
nop
xor
bound
or
jmp
dec
dec
ror
test
inc
jne
and
pop
(bad)
(bad)
loopne
xor
mov
inc
idiv
xor
and
data16
jne
xor
(bad)
jns
mov
or
add
dec
fs
fwait
dec
lods
mov
cmp
sub
and
aad
js
jl
add
cmp
mov
xor
inc
mov
sbb
fcmove
or
jno
cdq
je
fcom
sub
popf
jo
out
out
mov
popa
mov
adc
rcl
sub
sti
cld
mov
daa
xchg
and
daa
inc
adc
mov
popf
xchg
ret
dec
dec
lock
into
clc
and
push
fmul
or
sbb
fisttp
push
or
jne
mov
mov
jmp
call
rol
das
fdivr
stos
xchg
fcom
cdq
jge
sbb
mov
xchg
leave
or
es
jo
pusha
mov
xor
ds
add
sub
sub
cdq
js
pop
inc
(bad)
mul
or
sub
inc
jo
ret
and
mov
pop
out
mov
test
add
mov
stos
fdivr
gs
test
(bad)
aad
popf
push
xor
adc
out
dec
xor
xor
cmp
xor
pop
aas
cmp
jne
shr
mov
jae
jns
sub
loopne
sbb
dec
xlat
int3
push
sub
shl
mov
bound
jmp
xor
adc
fwait
scas
mov
sub
mov
rcl
jmp
mov
inc
pop
test
add
into
cmp
je
or
test
sar
mov
add
or
and
cli
mov
cmp
scas
sbb
add
mov
scas
aam
xchg
neg
cmp
add
out
pop
std
sbb
dec
inc
test
jbe
ret
sub
or
das
ins
mov
inc
jle
jp
sub
mov
fiadd
and
rol
and
in
ja
push
push
popf
aaa
jmp
add
add
jle
ffreep
jmp
push
movs
mov
aas
inc
iret
xchg
add
adc
jmp
jbe
push
jmp
retf
outs
mov
mov
(bad)
and
in
shr
sar
add
adc
int3
push
(bad)
push
cmp
faddp
or
out
call
push
in
sbb
jno
je
inc
cmps
fcom
ror
mov
(bad)
hlt
fstp
fwait
pop
(bad)
xor
push
xchg
add
and
(bad)
outs
adc
jne
xor
dec
pop
pop
retf
test
imul
or
adc
inc
addr16
xor
popf
inc
and
mov
(bad)
jmp
add
push
stos
daa
fcom
and
mov
dec
adc
fwait
mov
and
pop
clc
fwait
rcr
sub
jnp
test
ja
mov
xor
and
int
fdivr
jle
push
cmp
xchg
shr
cmp
dec
or
fiadd
cmp
fimul
ficomp
xchg
cmp
in
fiadd
add
ret
sub
(bad)
cmp
sub
test
mov
hlt
daa
xor
(bad)
movs
jae
dec
ror
sbb
mov
fnsave
push
inc
pop
arpl
sub
jg
sbb
xchg
jg
pop
rcr
xor
int
push
ss
cmps
push
adc
ja
sbb
sub
in
jle
jp
xor
aaa
sbb
mov
jge
jbe
in
out
mov
dec
retf
out
and
in
iret
in
in
rol
pop
pop
cmp
outs
sbb
jo
aas
lock
and
das
enter
fdivp
xor
inc
fs
je
test
mov
ins
sti
push
js
sahf
enter
push
in
push
adc
shl
mov
mov
push
mov
bound
mov
push
lahf
cmp
xor
ins
xor
aam
add
add
push
dec
add
add
pop
cs
clc
pop
mov
popf
or
hlt
push
add
dec
(bad)
std
inc
push
popa
jb
popa
outs
je
jns
gs
add
pusha
add
mov
push
push
or
pop
cmc
add
gs
data16
adc
add
aas
mov
add
outs
jo
pop
or
add
inc
gs
add
outs
into
inc
sbb
push
outs
jne
arpl
into
and
les
dec
outs
imul
inc
adc
mov
cmps
push
xchg
push
adc
add
das
int3
inc
shr
xchg
stos
push
sbb
pop
mov
cmp
jo
dec
gs
and
cld
add
mov
or
jp
jb
je
mov
pop
fiadd
jo
gs
(bad)
ins
xor
stos
add
data16
or
push
scas
xor
imul
addr16
int
jo
je
or
jbe
loopne
jge
pop
xlat
add
mov
das
xor
(bad)
idiv
mov
add
mov
enter
out
sbb
and
push
adc
call
add
inc
fucom
in
push
push
retf
xorps
push
pop
or
lea
xchg
in
mov
jnp
pop
mov
imul
add
arpl
clc
addr16
adc
push
sbb
add
jne
fsubr
mov
sub
aam
and
and
inc
pop
ss
push
push
jo
scas
adc
add
scas
push
shl
push
push
inc
sub
lock
das
clc
inc
push
gs
cmp
in
lds
jo
inc
sbb
sbb
sbb
out
pop
lds
int3
nop
jno
add
sbb
mov
push
ins
mov
inc
(bad)
add
cmp
pop
(bad)
loopne
inc
cmp
dec
mov
cmp
ror
call
adc
or
push
out
sub
xor
xor
je
dec
add
mov
(bad)
push
shr
movzx
mov
mov
mov
rol
adc
add
mov
ss
fsub
loopne
xchg
hlt
mov
push
iret
push
add
loope
push
call
adc
adc
movs
imul
xor
xor
cmp
out
loopne
and
dec
les
je
sub
push
pusha
sbb
push
and
mov
lock
jae
cwde
imul
push
mov
cmp
mov
ret
and
xor
movs
push
in
in
xchg
cmps
test
in
cwde
sub
xor
jmp
push
je
test
add
jp
pop
ss
and
mov
aas
sbb
rol
add
sahf
sub
dec
sti
aas
les
enter
xor
push
add
jne
rcl
push
mov
call
outs
add
cmp
jne
sub
je
loop
mov
test
clc
cmp
add
mov
adc
call
popf
int3
mov
xor
pusha
mov
aam
jecxz
popa
mov
and
int
popa
enter
push
xor
(bad)
ss
int3
imul
cwde
bound
sub
or
mov
add
pop
mov
cwde
imul
inc
fsub
int3
call
push
loopne
or
mov
in
mov
pop
or
(bad)
jns
test
add
pop
inc
cmp
pop
loopne
ret
push
retf
inc
lods
pop
push
lods
(bad)
or
push
adc
mov
cmp
sbb
mov
fwait
sub
(bad)
shl
loope
mov
adc
daa
ds
lods
dec
jmp
push
fwait
call
xchg
sub
pusha
jne
pop
pop
popf
lea
jge
add
fucom
js
mov
out
loopne
xor
pop
cmps
in
lock
or
pop
mov
and
cmp
loopne
mov
jmp
dec
fmul
xchg
add
jb
add
cmp
add
push
jbe
mov
cmp
push
imul
push
push
aam
push
addr16
or
sbb
add
shl
mov
nop
ds
inc
add
rol
aam
push
jbe
jne
push
mov
(bad)
dec
jno
test
je
push
int3
fs
mov
jbe
push
or
mov
jl
cmp
xchg
fwait
jbe
xchg
mov
retf
or
mov
or
and
push
add
outs
mov
and
push
dec
mov
mov
jb
imul
out
pop
lods
pop
lods
add
push
sbb
imul
push
sti
ins
sub
pop
mov
mov
inc
push
jbe
in
inc
ja
xor
jae
mov
mov
gs
inc
or
mov
mov
(bad)
into
add
mov
in
or
mov
cmps
adc
add
ss
fscale
or
mov
cld
mov
shl
xor
ss
pop
jecxz
cmp
loopne
jge
dec
sbb
jnp
inc
fisttp
scas
ds
inc
mov
inc
mov
push
enter
jl
sbb
in
xlat
mov
push
push
push
dec
push
imul
jo
mov
pop
push
mov
add
add
jo
call
add
push
inc
mov
inc
popa
jns
push
pop
dec
aad
push
es
and
push
dec
imul
xor
or
arpl
iret
or
and
inc
jb
arpl
nop
push
sub
aas
adc
sar
data16
je
add
push
sbb
sub
add
cmp
das
adc
mov
ds
das
jnp
mov
imul
call
cwde
push
jle
fs
test
sbb
cmp
xor
aam
pop
pop
mov
enter
sbb
xchg
push
push
mov
mov
push
rsqrtps
lds
imul
movhps
adc
nop
rcr
inc
and
add
loop
adc
push
popf
adc
jmp
pusha
test
scas
push
sub
xor
mov
adc
adc
aad
mov
sbb
out
push
jno
dec
dec
call
lock
xor
cmp
ins
pop
inc
push
jp
push
mov
cmp
imul
jl
push
dec
aaa
dec
test
push
cmovle
cdq
push
pmuludq
mov
imul
and
or
clts
shr
rcr
sbb
call
fs
pusha
sbb
or
or
xor
sub
push
cmps
sbb
sub
sbb
sbb
sbb
sbb
imul
in
cmp
sbb
daa
fsubr
out
not
es
push
daa
es
mov
jo
or
or
gs
mov
enter
in
fs
outs
aaa
ins
mov
imul
and
sub
push
push
repz
stc
cmp
mov
add
or
dec
xchg
imul
bound
in
imul
add
aam
ins
mov
test
icebp
imul
dec
inc
add
in
mov
push
push
inc
inc
ins
push
inc
je
outs
or
add
int
test
adc
inc
dec
rol
or
or
js
push
sub
outs
mov
cmp
push
inc
fs
xlat
and
xlat
ret
sub
jbe
fwait
or
bound
dec
test
mov
popa
mov
push
call
push
push
test
pop
test
add
inc
jae
cmp
dec
sub
sub
pop
cmp
adc
inc
cmp
pop
mov
and
sub
adc
dec
jae
pushf
adc
push
adc
sub
fdivrp
sbb
jecxz
xchg
mov
and
fnsave
ins
es
push
sub
cmps
or
cmp
sub
xor
fucom
add
add
xor
xor
repnz
aaa
xor
xor
stos
(bad)
cs
lahf
retf
jno
scas
test
out
cld
pop
add
mov
shr
add
adc
mov
pop
pusha
enter
dec
xor
dec
xchg
aam
(bad)
pushf
mov
paddw
jae
mov
sbb
aam
or
jmp
pop
add
xor
jo
and
mov
imul
ins
and
push
pop
add
mov
imul
push
sbb
aam
repz
jge
or
jns
add
xor
jl
xchg
test
jo
or
jge
xchg
adc
inc
sbb
push
fild
pop
add
mov
mov
cmp
mov
sbb
mov
adc
mov
pop
xchg
xchg
loope
dec
jmp
push
dec
jns
fs
dec
sub
or
inc
popf
mov
adc
cld
mov
jne
fndisi(8087
and
mov
ficomp
and
push
cmp
int
outs
push
mov
cmp
in
mov
test
or
jne
or
jne
loop
je
js
jne
or
jne
or
mov
or
ret
mov
jae
xchg
out
mov
outs
mov
fdivr
adc
push
sbb
mov
or
mov
adc
rcr
sbb
pop
addr16
add
pop
addr16
xor
mov
jno
xor
mov
and
cs
ins
call
pop
pop
popf
mov
push
mov
or
pop
or
pop
push
jmp
enter
push
xchg
das
dec
das
mov
fdiv
loopne
dec
imul
(bad)
mov
das
mov
sub
cmp
pop
jo
inc
pop
push
add
mov
adc
cmp
push
fdiv
xor
xchg
xor
or
jb
or
das
rol
pop
loopne
gs
add
jnp
lock
sbb
jo
jmp
cmp
das
test
test
lock
or
xchg
fstp
mov
bound
or
cmp
push
pusha
add
inc
enter
add
inc
push
add
adc
mov
cwde
stos
push
nop
das
in
adc
test
cdq
mov
adc
nop
mov
(bad)
jmp
mov
and
nop
or
cmp
add
int3
enter
dec
push
push
inc
or
mov
(bad)
or
rcr
add
data16
sti
outs
aad
or
lock
movzx
push
add
add
xor
mov
cmp
or
fsubr
rcl
cmp
push
outs
or
lock
(bad)
adc
cmp
jl
pop
inc
scas
mov
es
and
add
mov
fld
loopne
or
or
mov
pop
ja
adc
test
jl
mov
or
(bad)
or
in
outs
(bad)
pushf
mov
outs
or
fs
(bad)
imul
pop
pusha
push
or
fdiv
or
adc
pop
data16
cmp
cmps
xlat
or
inc
data16
push
ins
push
or
cmp
rcl
mov
mov
push
sub
pusha
xchg
push
add
mov
xchg
or
int3
lock
push
mov
xchg
test
adc
push
adc
adc
mov
push
data16
aas
pusha
inc
mov
cmp
fimul
mov
mov
sbb
or
push
mov
push
mov
shl
push
push
mov
adc
adc
test
test
retf
test
jne
cmp
outs
in
sbb
pop
or
retf
jae
pop
retf
sbb
push
shr
mul
dec
adc
add
add
push
jle
js
pusha
add
sbb
jo
mov
mov
shr
loopne
push
out
cs
sar
fld
fisttp
out
(bad)
xchg
pop
push
ja
loope
or
aam
ja
mov
movs
push
mov
xor
jmp
aad
(bad)
fdivr
jne
add
mov
or
int3
lea
push
fild
add
push
shl
xchg
into
test
adc
in
jl
xchg
pop
popf
add
mov
rol
in
push
xchg
and
inc
lahf
scas
(bad)
mov
inc
xor
pop
inc
sbb
or
add
sbb
rol
cmp
fcomp
fimul
sub
iret
push
add
out
mov
ins
or
ret
push
or
or
loop
in
push
add
test
outs
add
sbb
jg
outs
lods
push
mov
data16
sbb
and
retf
outs
mov
ins
shr
and
adc
and
adc
pop
jo
dec
outs
adc
inc
push
jno
ins
inc
adc
and
outs
pop
and
enter
fadd
nop
pop
lock
inc
and
inc
sub
mov
inc
out
push
pop
sbb
mov
cmp
movs
dec
nop
push
jne
mov
addps
push
fmul
mov
test
out
ror
jmp
jb
je
jmp
jno
dec
int
ins
fs
xor
dec
dec
add
mov
sti
adc
add
dec
xor
jmp
pusha
movs
ret
stos
icebp
jmp
add
data16
lea
and
or
mov
inc
adc
pop
jmp
in
(bad)
and
fwait
push
pop
mov
les
cmp
jo
inc
scas
mov
scas
and
pop
(bad)
pusha
test
out
stos
das
mov
test
adc
ja
jnp
jl
outs
sar
ja
jnp
cmp
dec
jo
add
lds
or
push
dec
jne
(bad)
stos
ret
stc
push
test
xchg
jo
pop
out
inc
into
jp
and
mov
dec
add
je
fstp
jne
add
sbb
push
call
fidivr
mov
jbe
ror
sub
sub
ret
push
xchg
aam
xchg
push
push
xor
dec
cmp
jl
pusha
pop
push
xchg
pop
or
rcr
pop
add
inc
dec
lea
test
jne
xchg
fimul
inc
or
cwde
adc
fidiv
push
and
push
sbb
jbe
mov
test
aas
outs
fimul
fidiv
dec
mov
add
(bad)
les
cmp
(bad)
out
add
or
shl
sub
jl
iret
leave
fcmovnu
push
jl
push
push
mov
add
out
push
mov
push
xor
push
mov
call
sti
cmp
jne
bound
scas
or
lods
lods
test
add
push
push
inc
xchg
dec
lahf
inc
imul
pop
test
(bad)
out
ss
inc
outs
enter
push
add
add
shl
fdivr
or
cmp
jle
and
xor
test
sbb
nop
xor
or
ja
bound
out
movs
lea
shr
cld
cmps
sub
sbb
add
jno
mov
jo
or
push
sbb
fdivrp
out
aad
xor
add
jbe
xor
das
call
enter
je
sbb
mov
bound
mov
rcl
adc
ret
fadd
inc
imul
arpl
jae
mov
pop
pop
mov
mov
test
in
rol
fdivr
scas
fsub
and
mov
les
fisttp
sub
inc
sbb
pop
push
sbb
sbb
enter
sub
ffreep
mov
dec
mov
mov
mov
or
inc
jno
xchg
cmp
jo
(bad)
retf
jnp
add
mov
mov
jmp
push
sahf
cmp
(bad)
jge
pop
pop
add
sbb
fldz
fmul
fnstsw
sahf
ja
xor
outs
add
je
sbb
ins
addr16
dec
jmp
cmp
sub
push
jle
sbb
iret
mov
or
adc
pop
loopne
add
cmp
add
xor
mov
push
jmp
fild
inc
mov
sbb
mov
pop
or
pop
push
fmul
test
call
into
in
inc
pop
ds
jnp
add
add
mov
js
lods
stos
mov
rcl
xor
pop
push
or
adc
dec
cwde
mov
jle
inc
into
jg
mov
test
call
and
cmp
xor
mov
repnz
mov
sar
inc
test
je
ins
jno
pop
push
sub
adc
or
adc
xchg
sbb
adc
sub
aam
movs
test
jecxz
repz
mov
mov
mov
enter
rcl
push
mov
imul
inc
in
xor
sub
xor
in
out
call
xor
pop
out
sbb
stos
gs
add
xchg
es
(bad)
push
sbb
dec
cmps
icebp
jmp
aaa
push
sbb
in
lea
add
in
fadd
cmp
outs
das
pushf
and
sub
or
sub
dec
or
xor
ja
or
push
jg
hlt
jl
fdivr
or
adc
jg
mov
in
stos
mov
jle
xlat
popa
mov
pop
push
leave
in
push
cld
add
fpatan
push
lea
test
inc
jmp
or
cmp
test
jge
(bad)
loopne
test
dec
mov
test
jp
add
sbb
mov
sub
jg
mov
sti
sub
and
fwait
jecxz
dec
mov
aas
pop
pusha
jb
or
dec
mov
pusha
rol
data16
add
pop
push
rol
in
loope
js
mov
push
pushf
sub
hlt
cmp
sub
neg
cmp
jne
add
adc
xor
adc
jnp
mov
push
pusha
mov
or
and
je
sbb
jne
pop
and
jl
test
push
mov
xlat
or
addr16
or
add
aaa
xchg
test
or
bound
jbe
and
pushw
ret
xor
je
or
sbb
rcr
sub
jae
sub
iret
fisttp
aam
les
loope
mov
jbe
clc
push
push
or
clc
or
cmp
jmp
and
fmul
syscall
pop
sbb
or
retf
dec
xchg
nop
jae
scas
jl
loopne
push
(bad)
bound
fadd
leave
sbb
pop
and
jmp
stos
pop
rcl
stos
jae
clc
stos
sbb
pop
or
or
scas
pusha
scas
fisttp
mov
ss
pop
pop
retf
sbb
nop
div
ror
shr
mov
leave
ja
sbb
mov
mov
push
push
add
lods
in
sub
scas
cmps
(bad)
push
sahf
sbb
std
push
in
iret
test
push
scas
mov
jp
mov
nop
adc
mov
popa
mov
shl
add
add
pusha
cwde
xor
sbb
sub
jmp
movs
es
push
or
lock
inc
or
retf
inc
lea
xor
ds
mov
push
jle
pop
imul
test
clc
or
sar
adc
neg
cmp
and
adc
jmp
or
sbb
das
jo
cld
js
bound
push
(bad)
enter
mov
or
(bad)
pop
ja
add
cmp
dec
gs
aad
sbb
adc
mov
out
pop
popf
or
lea
sub
loopne
cmp
cdq
idiv
cmc
sbb
jo
cmp
addr16
adc
mov
jno
jb
add
sub
add
daa
inc
add
comiss
cmp
jp
daa
daa
mov
jo
add
sar
push
jmp
call
daa
xchg
scas
push
lea
cmp
push
jb
fcom
dec
mov
mov
sub
test
jbe
xchg
mov
clc
lea
push
sbb
xor
lea
xor
and
sub
ret
div
adc
adc
xor
inc
push
repnz
in
xchg
movs
cmp
push
push
xchg
ss
and
sbb
xchg
cmps
inc
neg
sbb
xor
push
sbb
and
or
xchg
or
and
js
pop
out
inc
and
inc
repnz
jb
push
mov
ss
sbb
(bad)
push
mov
sbb
or
ja
leave
leave
leave
leave
jns
jnp
leave
leave
leave
leave
jge
jg
leave
leave
leave
leave
popa
bound
leave
leave
leave
leave
gs
leave
leave
imul
leave
ins
outs
outs
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
push
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
pop
pop
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
dec
inc
das
into
leave
dec
dec
pusha
pop
js
pop
rol
cmp
je
add
pop
add
add
cmp
mov
adc
xchg
das
sbb
lods
add
scas
nop
ins
sti
cmc
xchg
jmp
jp
clc
dec
fcmovnb
cmp
inc
cld
in
inc
std
inc
xchg
add
stc
jns
adc
mov
das
sub
scas
fmul
cld
xchg
(bad)
mov
push
or
inc
push
push
pop
jae
loopne
jo
jg
add
or
std
mov
push
inc
inc
inc
inc
or
inc
dec
dec
push
dec
dec
push
inc
or
inc
inc
dec
pop
jle
outs
aas
sub
es
push
push
push
push
pop
inc
push
add
imul
sti
or
inc
dec
inc
dec
inc
push
push
dec
push
push
pop
and
push
jne
sti
(bad)
mov
pop
adc
popa
cs
inc
inc
outs
ins
ins
outs
outs
icebp
jae
outs
push
pop
or
xchg
lock
aaa
call
sbb
cli
push
int
ins
sbb
cwde
push
push
les
int3
and
ds
repz
cmp
xor
ja
mov
jl
add
femms
dec
mov
adc
inc
ins
popa
jae
push
imul
push
arpl
push
inc
out
jo
shl
gs
add
cmp
or
gs
dec
enter
pop
in
pop
test
inc
adc
loop
aaa
fadd
out
pop
dec
jnp
or
cmp
xor
movs
inc
fisttp
cmp
shufps
pop
out
inc
adc
adc
inc
push
push
popa
jb
adc
xor
cmp
in
jbe
inc
jns
clc
or
fldenv
push
cmp
popa
outs
je
imul
xchg
sbb
ja
add
sbb
xor
mov
cwde
(bad)
mov
xchg
inc
dec
adc
cmp
ds
loop
fwait
into
adc
and
jo
or
(bad)
mov
jb
jb
pop
sub
jle
and
add
add
sbb
fwait
pop
das
push
push
jg
or
add
(bad)
call
(bad)
adc
push
rcr
mov
push
add
sahf
cmp
sbb
arpl
shl
xor
(bad)
or
mov
or
fild
fistp
mov
inc
ret
pop
mov
gs
add
dec
push
movs
push
imul
call
adc
cmps
adc
dec
ins
push
mov
ds
add
xor
or
cmp
adc
imul
cmp
mov
cdq
or
jle
pop
jp
add
mov
loop
je
dec
adc
aam
push
mov
adc
or
scas
add
cmp
adc
mov
call
xor
rol
pop
add
scas
dec
loopne
adc
push
lock
cmp
xchg
xor
test
and
and
sti
mov
xor
push
ds
push
in
mov
jmp
in
fild
call
test
jl
inc
in
stos
mov
or
mov
add
xchg
push
adc
push
push
dec
xchg
add
dec
jne
mov
stos
push
sti
cmp
and
dec
mov
fiadd
(bad)
mov
sbb
cld
adc
(bad)
ficom
aam
js
or
in
shr
sub
and
push
hlt
stos
or
rol
sti
mov
push
enter
or
scas
inc
mov
mov
cmp
xor
cmp
in
dec
pop
rol
pop
mov
pusha
cwde
mov
aaa
mov
xor
sub
mov
adc
shl
mov
adc
add
sub
lock
shl
add
or
sub
mov
cmp
(bad)
pop
sub
sub
inc
xchg
adc
bound
sub
in
cmp
nop
int3
adc
cdq
int3
cmp
jle
pop
int3
dec
cmp
jl
cmp
mov
call
jbe
xor
xchg
xor
pop
pop
pop
jl
push
ret
idiv
jne
cmp
jb
push
and
mov
xor
rol
out
aaa
loopne
fcomp
lods
pop
cdq
les
xor
aad
or
inc
add
inc
xor
add
sar
mov
add
push
lock
sub
aas
test
mov
movzx
dec
(bad)
mov
clc
and
call
call
out
mov
add
inc
iret
popa
jne
push
add
dec
xor
test
outs
nop
(bad)
add
je
xor
sub
or
pushf
push
pop
lahf
ret
sub
inc
adc
or
(bad)
adc
int3
lahf
xchg
and
push
mov
sub
or
add
mov
push
adc
add
sub
add
fldl2t
inc
imul
sub
mov
cmp
cmp
in
sbb
loop
lods
pusha
inc
leave
lods
fs
inc
adc
xchg
push
or
dec
or
test
or
cmp
inc
sub
push
push
adc
jg
mov
sub
jmp
lea
mov
push
push
add
and
(bad)
(bad)
mov
pop
add
cs
sbb
clc
cmp
stos
cmc
idiv
pusha
test
jmp
fsubr
movs
jbe
push
push
sub
inc
ins
cmps
lea
dec
mov
or
add
pushf
xchg
pusha
dec
ror
add
inc
and
jge
lods
rol
inc
inc
dec
dec
in
retf
sub
and
or
push
sbb
add
add
ficomp
add
jmp
in
test
or
loopne
adc
jbe
mov
mov
jmp
out
mov
mov
cmp
xor
or
jo
in
pop
inc
xor
or
xor
or
dec
mov
mov
inc
xor
pop
lods
xchg
dec
dec
retf
fimul
add
jmp
jne
test
js
lahf
add
mov
test
les
inc
call
adc
and
jne
mov
xor
sub
push
xor
sbb
add
or
jge
or
in
sbb
cld
dec
(bad)
jl
inc
mov
add
inc
imul
mov
neg
call
and
(bad)
mov
add
(bad)
pusha
dec
push
xor
push
add
jno
sar
mov
mov
sti
inc
loope
xchg
inc
cdq
loopne
inc
mov
jbe
or
test
dec
push
rol
retf
je
clc
add
sahf
shl
cmps
outs
adc
test
int3
dec
push
lock
nop
cs
adc
add
cmp
mov
adc
xchg
sbb
or
adc
aam
add
popa
sub
subps
cld
jle
aam
ins
stos
add
jl
inc
push
movs
pusha
pop
jno
jno
pusha
xor
xchg
ss
inc
ret
sbb
inc
call
and
scas
shl
std
popa
fcomp
enter
pop
push
mov
mov
icebp
lods
push
outs
cmps
dec
clc
add
jo
mov
and
adc
push
jnp
adc
jp
sbb
or
xor
push
add
cmps
and
adc
cwde
dec
(bad)
sub
test
scas
adc
jecxz
setae
bound
nop
ret
or
or
movs
clc
dec
sar
lea
hlt
fdivp
add
bound
add
aaa
mov
mov
popaw
loopne
in
xor
push
push
pusha
in
hlt
jg
cdq
or
push
xchg
js
push
mov
imul
int3
pusha
adc
jmp
retf
sbb
jne
pop
addr16
inc
add
sbb
jns
ret
hlt
mov
test
test
pop
pop
outs
setb
test
out
cs
ret
dec
es
test
jmp
dec
jg
retf
out
sbb
rcr
ret
mov
xor
or
mov
ror
push
ret
mov
call
daa
mov
sbb
mov
icebp
xor
adc
pop
cmp
test
or
sahf
lock
lods
data16
adc
popf
mov
jne
jmp
mov
mov
shl
mov
or
or
or
pop
add
sub
adc
ins
fmul
jle
dec
push
lods
adc
ret
dec
pop
adc
mov
sbb
mov
ret
shl
and
jo
lock
push
jno
mov
xlat
enter
fidivr
xchg
mov
aas
or
std
(bad)
call
daa
cmp
add
in
add
mov
or
outs
mov
jmp
pop
cmp
dec
xchg
or
pusha
test
sbb
sbb
ja
jmp
inc
add
mov
cmp
cli
mov
out
fadd
jne
in
add
pop
pop
(bad)
outs
loope
mov
push
add
or
stos
mov
mov
mov
fwait
pop
cli
iret
or
jge
add
adc
sbb
add
dec
mov
xchg
mov
out
lods
jmp
dec
add
pop
xchg
pop
jo
or
sbb
fiadd
iret
xchg
iret
aam
scas
inc
cmp
add
push
call
into
sub
push
jg
lock
pop
mov
repnz
imul
push
imul
imul
jns
mov
adc
mov
out
jp
ja
scas
sbb
sbb
test
push
rol
lahf
sar
call
jmp
cmps
(bad)
aaa
in
xchg
call
push
je
mov
dec
push
and
xor
pop
imul
clc
cmp
adc
and
aam
inc
xchg
xor
or
addr16
dec
or
jae
addr16
sub
rcr
shr
sbb
push
cmp
or
xchg
mov
push
xchg
mov
or
xor
mov
cmc
push
pop
loopne
(bad)
jmp
popf
pop
add
adc
mov
dec
outs
outs
fcomp
gs
imul
pusha
cmp
sub
adc
sbb
mov
jno
xor
push
imul
push
mov
repz
mov
pop
dec
adc
loope
add
or
rcr
or
ret
or
inc
jbe
outs
je
or
add
popa
or
imul
movs
mov
cmp
sub
push
or
addr16
outs
out
add
pop
push
lds
pop
add
sbb
jae
popa
out
ins
lods
out
sbb
xor
sub
cmp
mov
sub
sbb
xor
in
movs
cmovbe
jae
bound
add
cs
xor
push
cs
outs
(bad)
adc
inc
lds
adc
addr16
test
and
jmp
cs
jne
sbb
mov
xor
mov
shr
xor
in
pop
sbb
xchg
sbb
or
push
daa
scas
das
fisttp
mov
mov
jmp
addr16
push
je
add
push
add
out
stos
in
jmp
mov
dec
mov
push
rcl
int
push
jns
inc
push
mov
je
jg
ins
ins
es
xor
add
mov
pusha
jb
daa
or
push
sub
outs
jns
cmp
daa
or
fbstp
add
lea
movs
or
jns
inc
fmul
mov
jecxz
leave
xchg
dec
iret
xchg
mov
inc
dec
retf
ss
mov
cmp
push
cmp
lock
inc
sbb
outs
pop
push
xchg
fnsave
stos
add
add
inc
push
popa
int
adc
repnz
push
inc
add
test
dec
mov
push
pop
push
rol
xor
pop
test
clc
cmp
mov
call
xadd
(bad)
dec
add
mov
sbb
sar
inc
inc
dec
or
lahf
(bad)
add
enter
push
hlt
adc
out
ins
ss
iret
push
faddp
mov
lahf
lods
sbb
test
fldenv
push
mov
out
ss
enter
fcom
in
push
cwde
mov
(bad)
push
in
push
dec
retf
push
sub
jnp
pause
lods
dec
mov
inc
hlt
jecxz
div
mov
in
mov
adc
pusha
fild
dec
add
mov
jmp
sub
mov
scas
adc
dec
jle
imul
psrlq
inc
mov
lock
lods
jbe
or
ss
sub
loope
sub
xor
pop
xchg
and
pop
mov
add
(bad)
mov
cmp
mov
sbb
shl
(bad)
out
stc
cs
shr
push
lock
push
mov
in
mov
push
clc
add
mov
add
out
or
cwde
js
rcl
push
jl
test
mov
or
push
loopne
sbb
add
cmp
sbb
ror
push
inc
dec
ja
gs
inc
dec
fadd
jo
cmp
je
xchg
pop
sbb
mov
inc
push
add
cmp
loopne
adc
xor
dec
dec
ins
pmulhuw
push
stos
retf
mov
(bad)
add
jmp
pop
xchg
(bad)
fwait
jge
fcom
add
xchg
cdq
push
inc
mov
pushf
xchg
xchg
push
sbb
or
mov
das
cmp
test
cwde
imul
fst
or
lock
jae
cmp
sbb
inc
outs
push
push
outs
push
mov
(bad)
mov
outs
and
rcr
outs
mov
arpl
adc
jno
imul
inc
mov
add
fiadd
jnp
mov
sbb
pop
daa
sbb
icebp
ja
mov
ins
dec
mov
dec
dec
dec
adc
inc
loop
mov
fucomip
fiadd
mov
dec
sub
jo
mov
pop
scas
es
cmp
ret
leave
sbb
pop
xlat
inc
adc
imul
cmp
jns
or
inc
jne
adc
sbb
xor
mov
fsub
mov
add
inc
loope
or
inc
test
mov
sbb
add
in
push
or
ficomp
jne
inc
xor
(bad)
sub
rcl
adc
loope
inc
arpl
add
sub
(bad)
fsubr
bound
mov
mov
adc
pop
movs
sbb
mov
cmps
or
mov
pop
cwde
cwde
fwait
add
inc
aas
or
dec
adc
dec
cdq
and
xor
mov
xchg
push
ret
mov
or
cs
(bad)
cmps
cmp
dec
outs
jb
push
pop
sub
ins
pop
rcl
test
or
pop
mov
lods
adc
pop
lock
mov
and
dec
mov
sbb
mov
rep
fstp
daa
ins
das
jb
adc
and
clc
fld
xor
jae
mov
adc
in
fmul
mov
pop
(bad)
sub
sub
sti
lahf
rol
outs
inc
pushf
sub
sti
lock
jp
jae
push
mov
push
js
outs
aaa
inc
gs
add
call
add
push
jmp
xchg
sti
bound
adc
cmp
lds
cmp
lock
push
sbb
push
bound
in
in
fstp
sub
jo
into
mov
sahf
cmp
mov
ins
cs
test
and
xchg
mov
pushf
push
daa
xlat
mov
aam
shl
lock
adc
or
sub
mov
add
pop
xchg
jae
xlat
dec
gs
add
inc
dec
cmps
and
test
dec
ja
popa
adc
ja
sbb
es
gs
push
inc
imul
imul
pop
xchg
cmp
enter
jl
dec
sbb
dec
outs
popa
fs
xor
shl
fs
cld
cmp
outs
mov
push
push
dec
fiadd
aam
wbinvd
add
cwde
cs
jno
adc
retf
cwde
push
adc
push
cmp
or
sbb
cmp
fcom
out
test
(bad)
mov
rol
add
imul
pushf
mov
(bad)
cmp
or
xor
loop
jmp
clc
cmp
jecxz
xchg
pop
push
sbb
ins
jbe
and
movs
adc
cmps
pop
pop
std
imul
retf
sahf
add
fld
mov
add
add
lock
xor
dec
out
outs
imul
jg
push
loopne
jbe
lahf
jmp
add
push
pop
jns
ins
add
ret
push
xor
cmp
aad
shr
pop
pop
mov
out
push
mov
repnz
lods
push
loopne
jnp
repz
movs
aam
movs
push
rol
mov
inc
out
push
xchg
xor
sahf
jnp
imul
ds
push
pop
dec
mov
sahf
idiv
push
pop
test
test
sahf
dec
pop
neg
dec
aas
iret
dec
and
add
sbb
out
and
gs
sbb
cwde
pop
loope
stos
call
dec
xsaveopt
ins
aam
jmp
ins
mov
pop
lea
sbb
dec
outs
imul
cmp
test
fadd
add
jp
mov
add
int
dec
divps
outs
aam
jns
int
arpl
daa
adc
dec
setne
xor
int3
rcr
loopne
ja
ret
shr
repnz
mov
xchg
add
push
adc
jecxz
cmc
sldt
push
jns
push
ds
xlat
mov
bndldx
nop
scas
loopne
out
divps
nop
cli
push
mov
stc
push
add
pop
add
jnp
repz
repnz
lds
jge
mov
and
(bad)
pop
or
sub
and
xor
lds
scas
scas
and
(bad)
cmp
inc
test
inc
js
outs
lods
cmp
sbb
shl
add
adc
jmp
test
je
in
pop
cmp
mov
push
into
cmp
gs
fimul
ins
xor
pop
or
aam
mov
xor
adc
sbb
inc
aaa
adc
inc
push
mov
and
out
mov
ds
mov
test
mov
xor
mov
add
push
pop
pop
add
add
jmp
push
pusha
mov
loopne
fistp
leave
ja
fisttp
or
mov
jecxz
sub
mov
fwait
or
mov
sbb
outs
ins
add
adc
mov
lea
add
push
mov
dec
mov
rcl
cmp
and
shl
jp
inc
fwait
inc
cwde
pusha
ret
or
inc
inc
mov
(bad)
or
inc
inc
inc
scas
iret
neg
enter
inc
lea
sbb
jnp
and
mov
sbb
lahf
push
adc
add
mov
cmp
dec
mov
cs
bound
push
mov
pop
dec
stc
or
arpl
xor
add
add
bound
aas
adc
push
lods
pusha
add
inc
in
add
bound
mov
xchg
cmp
push
add
nop
shr
inc
inc
mov
and
fiadd
sbb
and
push
pop
pop
jo
or
push
pop
push
xor
or
mov
and
call
cmc
das
sti
push
scas
clc
sub
dec
add
inc
inc
inc
aaa
adc
test
adc
pusha
dec
push
retf
or
pop
sub
or
stc
sbb
out
xor
enter
jl
scas
cmp
aam
push
sbb
sub
mov
dec
cmps
add
push
lds
or
shl
sbb
adc
inc
push
jne
(bad)
fmul
sbb
popa
(bad)
jge
add
sbb
cmp
adc
jo
scas
je
repz
loopne
aas
inc
or
sub
inc
outs
jmp
dec
xor
rol
mov
push
data16
jge
outs
ja
push
add
pop
pusha
jb
test
test
das
leave
das
in
adc
imul
popf
cmp
jae
pop
xchg
dec
fs
dec
loopne
and
or
and
dec
inc
and
push
push
ds
outs
add
sbb
(bad)
loopne
call
outs
jne
stos
nop
xor
fs
fisub
dec
sub
dec
mov
popa
ins
outs
addr16
jne
iret
sub
add
pop
dec
sahf
xor
cs
mov
inc
inc
and
test
sbb
inc
stc
cmp
xchg
pop
fwait
inc
cmp
add
jl
cmp
test
sub
push
fs
add
int
inc
or
fs
sub
push
jb
fs
in
iret
fs
jb
rol
cmps
inc
or
mov
sbb
push
or
pop
movs
cmps
stos
inc
adc
adc
mov
push
dec
push
fist
jmp
or
push
rcl
ss
dec
adc
push
pop
add
or
fsubr
jmp
test
ins
push
cmp
mov
push
add
sub
clc
aaa
stos
sub
sub
mov
pop
sbb
stos
addr16
test
fisubr
jno
ins
push
jecxz
syscall
xchg
and
push
rcl
push
mov
pusha
loop
pop
shr
dec
push
aas
adc
pop
cwde
pop
xchg
repz
push
cmc
push
fmul
cld
pop
test
mov
ror
or
adc
cmp
mov
sbb
xlat
clc
ss
xor
jo
sub
(bad)
push
and
clc
cmps
or
push
adc
or
or
or
mov
inc
push
and
cli
mov
fsubp
or
dec
rol
jo
push
cmps
mov
xchg
dec
xchg
pop
or
pop
leave
retf
add
xchg
imul
add
scas
loope
mov
mov
xor
fcom
cmp
test
jg
add
xlat
xchg
dec
sub
push
icebp
fld
bound
fcomp
or
add
mov
add
or
and
fbstp
sbb
popa
sbb
mov
push
ror
add
ds
mov
sbb
or
xchg
inc
js
ds
add
sub
inc
or
pop
adc
dec
lahf
rcl
icebp
mov
dec
or
or
push
scas
out
xor
push
sub
repz
or
sub
or
xor
mov
(bad)
loop
(bad)
xchg
pop
xor
xor
sub
out
test
push
xor
stos
pop
or
enter
or
enter
adc
xor
or
jae
data16
sbb
test
cmp
retf
jo
enter
and
jbe
fdivr
loope
mov
and
inc
in
bound
push
mov
and
dec
shl
sub
loope
push
sub
jp
shr
(bad)
or
rol
loope
sti
in
mov
push
sbb
aam
add
push
push
(bad)
(bad)
repz
cli
push
dec
cld
(bad)
or
and
lods
stc
mov
sub
bswap
push
sub
or
or
and
jbe
mov
push
mov
cmp
cmp
nop
hlt
aaa
push
lods
imul
pop
push
cmp
femms
fsub
cdq
sar
ja
push
add
jge
add
mov
or
add
cmp
xor
sub
aaa
dec
out
sbb
add
arpl
xlat
inc
pop
push
jns
pop
add
jns
psrad
pop
add
(bad)
cmps
adc
punpckhbw
test
or
and
rol
fs
mov
ins
data16
add
add
sub
repz
shl
rcr
xor
test
mov
push
dec
lds
dec
shl
mov
and
mov
pop
out
mov
pop
scas
pop
in
and
sar
mov
cmps
cs
rol
fld
push
or
in
(bad)
fiadd
ss
mov
fimul
add
push
or
jbe
repz
mov
push
dec
push
ds
xchg
lods
in
push
hlt
push
cmp
jecxz
pop
inc
stos
or
adc
xor
fisub
pop
inc
mov
or
sub
(bad)
sbb
rcr
test
jb
add
jnp
pop
jne
add
push
pop
mov
mov
out
sbb
out
dec
push
push
push
add
mov
push
sub
or
add
jo
add
popa
push
and
push
push
add
push
pop
pusha
test
sub
mov
adc
fcomp
leave
addr16
mov
or
add
add
push
push
jb
loop
add
pop
mov
jnp
pop
xor
push
mov
push
in
lods
adc
sbb
xchg
cmp
and
mov
fdiv
pop
sbb
dec
sbb
sub
mov
ss
and
dec
add
imul
mov
popf
cs
js
jle
add
mov
je
and
in
faddp
jnp
sbb
xchg
out
push
hlt
push
add
inc
ret
cmp
dec
inc
jns
sub
cmp
not
in
in
push
js
adc
lods
outs
mov
adc
fnstsw
popf
mov
out
push
movups
lahf
inc
shr
sahf
sbb
loop
xor
gs
inc
div
xor
daa
out
and
dec
je
rol
and
sub
inc
int3
cmp
clc
mov
stos
addr16
rcl
bound
fwait
push
sbb
pusha
fld
add
stos
xor
imul
mov
xor
xor
and
pop
add
jge
sub
xchg
loopne
xchg
push
mov
xor
jnp
inc
out
pop
push
or
test
add
add
imul
mov
(bad)
adc
mov
loopne
sub
add
xor
in
adc
dec
aad
adc
popa
bound
fist
loopne
neg
cli
push
cmp
das
jns
pop
rol
add
fbld
out
mov
lods
add
jnp
cmp
push
nop
push
fadd
mov
fisubr
push
hlt
push
adc
or
rcr
jns
daa
xchg
pop
mov
repz
jnp
loopne
jo
in
pop
xor
fiadd
xchg
push
das
ds
xor
pop
lea
popa
jo
ror
add
ret
or
imul
push
jne
daa
push
ret
jle
ret
dec
jmp
imul
arpl
clc
inc
cwde
rcr
ins
sbb
or
ss
rcr
adc
jb
popa
sub
mov
or
mov
inc
dec
xor
add
dec
outs
cld
push
mov
push
test
mov
sbb
ror
(bad)
add
lods
xor
adc
inc
fwait
push
cmp
dec
xchg
fnstsw
shr
repz
push
stos
or
push
cmp
cwde
add
jae
mov
dec
ret
add
cdq
push
outs
icebp
in
mov
push
jb
adc
dec
push
arpl
add
ins
or
cmp
push
jnp
adc
div
test
push
adc
jbe
imul
push
jg
inc
js
int
rol
or
bound
push
or
pop
mov
in
add
mov
enter
sub
enter
mov
enter
inc
imul
sub
(bad)
mov
xor
push
hlt
jae
jmp
jmp
push
inc
ror
sbb
inc
xchg
scas
(bad)
pop
mov
cmps
cmps
sbb
shl
adc
leave
mov
fiadd
ret
in
pusha
ss
mov
add
inc
sbb
les
dec
push
mov
cmp
clc
das
sub
(bad)
sbb
fsub
push
inc
adc
or
mov
sub
in
rcl
jle
dec
jne
cmp
add
dec
outs
ins
jns
add
jo
nop
inc
or
sbb
(bad)
sbb
xor
outs
retf
push
or
push
lods
mov
add
dec
or
mul
inc
adc
jne
add
jmp
push
outs
sub
jo
push
arpl
xor
mov
dec
in
pop
sbb
add
out
sub
push
leave
push
xlat
fnstsw
add
das
pusha
ret
sbb
fistp
mov
out
(bad)
fadd
mov
lock
cmp
add
hlt
(bad)
imul
or
dec
adc
mov
das
js
ds
adc
pop
push
(bad)
xlat
pop
push
push
sbb
pop
cmp
mov
push
(bad)
call
xchg
mov
adc
repnz
and
inc
mov
jo
jg
imul
xchg
sub
bound
add
in
push
jae
(bad)
adc
test
mov
imul
lea
cs
loopne
pop
pop
outs
jne
lods
sub
pop
scas
fst
pusha
xlat
das
xchg
jae
outs
mov
fmul
sbb
(bad)
pop
sub
lds
inc
inc
mov
(bad)
loope
(bad)
mov
scas
popa
sub
mov
or
retf
imul
shr
ja
aaa
inc
aas
cli
int3
fst
mov
pop
int
pop
test
out
sub
inc
mov
add
out
pop
es
das
cmp
jmp
jg
xor
push
aam
data16
push
cld
sub
pop
sbb
call
adc
push
nop
popf
neg
push
pusha
push
add
adc
ss
or
loop
and
and
addr16
arpl
adc
loop
push
in
xor
mov
add
mov
cmps
mov
push
jp
test
push
ss
syscall
add
mov
sbb
test
or
mov
push
pop
mov
or
sub
cmp
shl
dec
scas
mov
(bad)
xor
out
sub
cmp
push
loopne
sbb
aaa
sbb
push
mov
dec
cmp
sbb
rol
or
fs
(bad)
std
imul
or
scas
test
jge
test
sbb
or
mov
outs
jae
lea
sub
das
movs
xor
add
ds
push
gs
jbe
mov
push
add
movs
add
mov
sbb
mov
cli
xor
add
and
rcl
bound
dec
mov
inc
ja
(bad)
rcl
pop
cmp
sub
mov
inc
(bad)
adc
or
jge
hlt
or
dec
mov
and
test
das
pop
jg
push
and
inc
aad
ins
js
fpatan
add
js
fld
cmp
add
aaa
or
sahf
push
out
or
push
out
push
ja
inc
sbb
push
mov
xchg
pusha
adc
push
cmp
mov
fldcw
push
ins
pop
test
mov
nop
or
ss
push
sub
push
inc
bsr
fidivr
sbb
adc
cwde
dec
call
jne
mov
push
mov
push
pop
mov
retf
jo
or
je
jo
out
jns
imul
push
shl
dec
mov
repz
sub
or
push
inc
lods
push
loopne
idiv
cwde
inc
les
int3
or
push
test
jae
jge
mov
inc
js
ss
jnp
jns
and
inc
pop
sub
jns
jl
push
dec
adc
out
push
or
out
or
js
ss
cmp
sbb
xchg
pushf
stos
cmp
adc
jecxz
fiadd
inc
dec
jae
rcl
add
pusha
icebp
imul
ret
ror
mov
scas
bound
push
xor
xchg
das
jg
sbb
sbb
(bad)
sbb
mov
or
nop
nop
loope
addr16
nop
mov
fwait
and
mov
mov
cmc
pmulhw
lahf
mov
add
add
daa
call
imul
shl
or
sub
mov
pop
in
sub
adc
sub
xlat
cmc
mov
movaps
pmulhw
pop
shl
clc
rdmsr
add
add
test
repnz
mov
ss
repnz
add
mov
retf
xchg
das
ja
cmp
inc
cmp
cmp
dec
jmp
xor
inc
sub
pop
ret
(bad)
mov
add
inc
stos
jmp
or
dec
in
fs
push
or
or
push
and
(bad)
jno
int
or
inc
dec
ret
sub
or
xchg
sub
mov
sub
adc
inc
jle
jg
test
out
sbb
mov
sbb
lods
mov
(bad)
loop
outs
jae
push
imul
sub
mov
inc
sub
push
ret
scas
arpl
stos
pop
mov
mov
jo
and
imul
adc
(bad)
mov
add
pop
push
imul
add
adc
jp
mov
or
push
add
fdivr
pop
push
dec
and
(bad)
cmp
add
dec
fs
add
mov
ins
xor
push
int3
out
or
aaa
addr16
dec
sub
push
sbb
xor
cmp
push
pop
bound
xor
push
push
adc
push
sbb
pop
push
mov
movs
mov
outs
jne
push
mov
and
push
or
shl
test
mov
push
add
or
data16
inc
or
pop
add
inc
jne
and
adc
xor
push
dec
gs
or
push
je
fisttp
sub
out
test
popa
ins
jo
sub
rcl
pop
loope
push
push
js
ins
or
inc
jns
adc
int3
sub
jmp
arpl
cmp
sbb
popa
cwde
popa
inc
inc
dec
sub
or
ret
ins
jo
jnp
push
ins
push
inc
mov
das
sub
gs
ja
xchg
test
mov
les
xlat
les
push
ficom
(bad)
pop
mov
dec
cmp
push
mov
sbb
or
jmp
mov
out
dec
xor
popa
xor
rcl
pop
sti
or
pop
push
push
add
adc
loope
ret
adc
adc
popa
cmp
bound
imul
arpl
or
in
pop
ins
xchg
mov
ret
pop
inc
and
das
lods
pop
inc
and
mov
add
int3
inc
mul
jne
(bad)
adc
xor
mov
add
push
jle
jnp
cmps
aad
sub
pop
fisub
mov
jns
add
xor
adc
jae
add
cmp
push
sbb
or
jnp
bound
rol
or
jl
adc
cmp
mov
or
jne
jae
imul
push
dec
clc
mov
ss
pop
mov
or
imul
mov
dec
fiadd
fimul
inc
mov
cld
or
inc
inc
inc
xchg
mov
cs
and
inc
data16
inc
inc
cmps
enter
sbb
aaa
pop
ss
nop
rcl
inc
les
jmp
inc
push
inc
jae
sbb
movs
(bad)
aam
fisub
mov
aad
pop
xor
sbb
call
aam
pusha
xchg
push
icebp
cs
(bad)
inc
retf
mov
loopne
rol
pop
loopne
push
cmps
(bad)
inc
and
and
sbb
dec
and
push
xchg
mov
or
mov
cmc
add
les
and
push
ins
add
xor
pusha
test
fs
sub
add
aam
inc
test
and
push
push
test
push
add
test
or
je
adc
neg
aas
(bad)
mov
jo
mov
ret
psubusb
push
arpl
in
call
popa
mov
retf
hlt
sub
xchg
pop
adc
out
cmp
push
sbb
push
mov
push
hlt
or
push
call
iret
rep
mov
idiv
mov
rol
fmul
lods
es
outs
movs
shl
push
clc
push
jnp
loope
xor
dec
push
cmp
jl
enter
jnp
repz
test
sar
push
jns
jns
nop
test
rcl
push
jo
fidivr
test
pop
push
nop
push
clc
push
adc
inc
push
cs
in
sahf
sub
mov
outs
jp
sbb
pop
dec
in
xchg
jo
sbb
push
ficom
add
dec
xchg
das
jg
cld
mulps
jns
add
retf
add
pop
add
add
divps
or
call
shl
iret
ror
popa
push
punpckldq
jnp
sub
fwait
xchg
aas
pcmpgtb
jmp
data16
mov
fs
clts
jg
retf
punpckhdq
jb
movs
out
ins
add
shl
xchg
pop
ins
add
mov
or
jo
(bad)
fimul
fwait
test
loopne
add
imul
daa
loope
adc
mov
call
loope
cwde
stos
cmps
ins
dec
sub
push
xchg
in
pop
pop
adc
xchg
int3
jae
add
mov
push
dec
cmp
xchg
pop
mov
add
fistp
add
rcr
adc
or
aaa
mov
aaa
mov
xchg
sbb
fidiv
xchg
imul
lods
dec
jge
pop
push
mov
jge
cmp
pop
cmp
xor
movs
loope
sub
ret
shl
sub
and
test
imul
shr
and
mov
mov
repz
sub
ja
arpl
jbe
or
outs
pop
das
aaa
xchg
sbb
retf
push
in
ins
(bad)
or
add
in
sbb
(bad)
nop
pushf
fisttp
xchg
cmp
nop
sub
and
dec
ins
fdiv
xchg
fmul
arpl
add
shr
fwait
add
xor
xor
sbb
and
in
lds
add
add
mov
dec
out
add
xchg
outs
xchg
mov
rcr
outs
in
cmp
outs
je
push
jecxz
pop
stos
add
arpl
add
js
es
movs
adc
push
lahf
jmp
inc
or
outs
or
pop
dec
jmp
aad
ror
dec
push
push
add
xchg
in
dec
loop
or
adc
xchg
retf
mov
or
pop
pop
(bad)
enter
lahf
pop
push
pop
cmp
mov
adc
inc
repz
das
mov
xchg
pusha
mov
adc
pusha
push
dec
les
push
and
or
sbb
jne
(bad)
test
push
or
test
test
mov
add
int3
mov
sub
jne
int
dec
cmps
pop
adc
fdiv
jb
ins
shr
loopne
mov
scas
fucomip
mov
test
fadd
adc
lods
or
test
add
or
fs
pop
jnp
in
fs
fs
lea
jb
fiadd
or
dec
adc
inc
cmp
mov
movs
cmp
or
cmp
or
rol
adc
sbb
push
and
sub
inc
cmp
sub
cmp
xor
cmp
xor
xor
cmp
pusha
pop
cmp
test
cmp
lods
inc
cmp
adc
xchg
adc
or
push
xchg
dec
enter
test
adc
pop
fild
jb
xor
add
adc
add
inc
fistp
add
inc
fistp
rol
enter
nop
test
in
xchg
push
rsm
fiadd
mov
adc
sbb
fidivr
ja
fisttp
dec
pushf
jae
or
js
jno
jmp
(bad)
push
mov
ret
fild
jns
mov
cmp
fadd
lds
push
add
inc
pop
(bad)
ja
pusha
adc
cwde
sbb
jb
cmps
inc
add
out
push
add
daa
in
xor
adc
push
cmp
cmp
push
cmp
push
sahf
jnp
mov
push
push
sub
ins
outs
push
mov
es
dec
xchg
sub
xchg
mov
xchg
mov
push
push
xchg
mov
jnp
pop
fist
xor
xor
scas
jge
fsubr
xor
push
aam
and
xor
call
mov
xor
xchg
sbb
mov
or
mov
(bad)
push
adc
jb
jnp
add
push
inc
adc
xchg
stc
push
call
dec
jbe
jb
ins
outs
ja
xlat
and
jmp
test
fstp
push
pop
add
imul
repz
dec
adc
add
mov
pop
add
push
jle
or
out
or
sbb
in
loopne
cmp
mov
iret
mov
push
lar
test
repnz
add
add
pop
inc
jo
jb
or
dec
add
pop
shl
sbb
dec
add
jns
dec
dec
cmc
fldenv
cmovg
jmp
aam
add
(bad)
and
shr
das
add
push
xchg
das
xchg
push
mov
dec
sub
dec
fnstenv
push
or
sub
leave
fsubr
lods
or
ss
xlat
and
cmc
sub
and
loopne
mov
xchg
nop
adc
push
push
js
pop
pop
sub
test
push
or
or
jo
aaa
imul
sti
test
mov
sti
push
pop
push
or
sbb
push
cmp
push
popa
push
sbb
adc
dec
sbb
and
mov
imul
and
mov
loopne
xor
add
xchg
loopne
lods
dec
add
adc
popa
pop
mov
enter
mov
movs
push
push
jnp
push
adc
push
cmp
pop
rol
mov
push
lahf
adc
lahf
cmp
or
add
pop
movs
push
icebp
cmp
js
cmp
sub
or
mov
stos
cwde
or
mov
imul
call
daa
shl
sub
cmp
jae
dec
and
or
adc
jno
mov
xor
aam
push
jno
jno
fsub
push
jnp
mov
jno
jno
add
push
jg
push
pop
loop
mov
cmp
push
(bad)
loope
push
xchg
test
stc
mov
mov
(bad)
sub
(bad)
add
add
outs
xor
sub
inc
xor
xchg
push
adc
xchg
jmp
ins
jmp
movs
ret
sbb
adc
mov
loopne
jb
add
mov
cmps
mov
pop
push
hlt
sbb
or
xchg
outs
jnp
call
or
sbb
movs
push
add
jnp
lock
lods
push
js
cs
es
add
daa
mov
movsx
scas
push
mov
pop
jle
and
out
sbb
mov
xor
frstor
ins
sub
(bad)
(bad)
daa
sub
sbb
add
mov
out
popa
cmc
add
add
jg
add
mov
push
add
pop
dec
sbb
jb
add
pop
add
add
out
subps
sbb
aas
cmovle
jg
nop
(bad)
add
pushf
adc
adc
(bad)
mov
xor
adc
retf
xor
(bad)
sub
cdq
cmp
lods
cmp
pop
pop
add
sbb
test
pop
test
(bad)
es
ret
push
sbb
daa
adc
sbb
pop
test
sbb
inc
and
dec
cmp
mov
(bad)
pusha
jne
imul
cmps
mov
cmp
adc
sbb
adc
push
pop
xor
(bad)
pusha
xor
xor
fwait
adc
xor
jns
inc
test
shl
ins
sub
test
push
test
sub
sub
inc
imul
or
js
mov
cmps
add
and
test
xchg
imul
in
adc
mov
mov
mov
shl
shl
outs
jb
mov
loopne
pop
pop
pop
(bad)
push
jge
enter
js
adc
jne
cmp
daa
mov
and
sub
and
inc
add
push
daa
jp
pop
pop
inc
inc
aas
mov
push
into
push
mov
xor
jo
mov
mov
xchg
xor
sbb
add
or
dec
cmp
push
aas
rol
test
in
push
add
mov
push
aas
int3
xchg
and
jle
sub
or
shl
test
xchg
out
and
ja
bndstx
push
pop
sahf
(bad)
add
clc
mov
add
pmulhw
mov
push
sysret
add
mov
out
add
daa
minps
arpl
inc
add
inc
push
jl
adc
add
dec
es
jno
dec
add
add
push
cmp
ret
adc
sbb
test
pop
shl
sub
into
loop
mov
or
call
dec
adc
xor
jae
in
sub
(bad)
std
retf
and
pop
push
pop
or
push
sub
bound
inc
sbb
lods
std
sti
mov
movs
lods
sti
std
push
or
imul
add
or
je
push
cmp
shl
inc
adc
aad
push
push
mov
or
aad
or
xor
lea
aad
push
bound
inc
aad
test
shr
aaa
aad
test
add
add
aad
mov
and
aad
les
cs
aad
xor
stc
ins
stc
mov
rcl
dec
or
jne
bound
cdq
inc
mov
push
call
ins
je
mov
imul
xlat
adc
or
xor
imul
push
mov
inc
daa
push
push
test
jo
outs
ja
loope
push
dec
das
ins
es
push
mov
push
das
mov
push
mov
mov
das
mov
out
test
push
popa
jo
outs
fdivr
ja
es
push
lods
push
mov
outs
mov
out
das
lock
rcr
add
(bad)
jecxz
push
mov
jl
mov
nop
sahf
pop
add
dec
retf
pop
mov
(bad)
xor
ins
out
cmp
jg
adc
cdq
push
ror
inc
ret
ja
cmp
or
(bad)
pop
or
add
adc
xchg
pop
inc
daa
xor
adc
mov
lds
addr16
fsub
or
test
push
cwde
xor
add
xchg
mov
or
fs
pusha
and
mov
pusha
mov
pop
pop
pop
retf
cmp
or
lds
sbb
mov
jge
test
bound
jae
pop
or
push
jp
push
push
movs
rol
mov
add
sub
(bad)
ins
push
and
rcl
imul
fsub
mov
mov
pop
dec
xor
mov
dec
fcomp
imul
push
xchg
push
add
mov
cmp
(bad)
jl
sbb
jmp
push
push
(bad)
push
inc
bsr
fisubr
push
mov
xor
jnp
es
in
push
int3
push
jo
dec
out
stos
rcr
mov
or
cs
dec
xchg
scas
je
scas
push
mov
push
sbb
dec
push
dec
pop
fidivr
mov
push
sbb
and
dec
adc
mov
je
push
xor
fadd
or
sub
xchg
xor
or
pusha
jne
or
imul
inc
shl
push
xchg
push
xor
sbb
fadd
adc
(bad)
add
or
pop
add
es
test
xor
or
or
shl
add
or
cli
or
retf
pop
or
imul
add
cmovae
cmove
data16
cmps
mov
inc
adc
inc
add
aaa
xchg
das
jg
dec
push
cmovns
or
dec
iret
mov
mov
cmp
dec
mov
leave
jne
mov
mov
push
add
jb
push
ret
les
loope
pop
movs
and
out
test
loope
push
test
cmp
sbb
dec
cld
aaa
fdivr
nop
mov
retf
ja
or
cmp
ja
bound
push
pop
aas
jecxz
adc
call
or
sub
imul
lds
push
sub
mov
sub
adc
adc
sti
mov
imul
enter
push
mov
imul
adc
pusha
mov
xchg
imul
imul
(bad)
sbb
imul
mov
ss
add
add
adc
push
and
sub
add
xchg
and
je
into
xchg
and
cmp
pop
cmp
jno
adc
ins
adc
xchg
push
sbb
xchg
pusha
adc
mov
xchg
les
inc
jp
xchg
jno
adc
or
xchg
jno
inc
movs
adc
xchg
mov
imul
imul
imul
or
dec
push
ret
ins
jo
stos
adc
test
push
and
xor
adc
loop
or
inc
pop
lods
sbb
xchg
xchg
inc
ds
jne
mov
jae
sbb
sbb
stos
and
sbb
mov
push
fbstp
call
fidiv
jnp
cmp
in
push
std
inc
je
ja
retf
cmp
pop
ja
je
cwde
push
dec
cmp
push
push
idiv
mov
adc
jo
les
stos
or
push
jg
pop
mov
inc
or
out
xchg
enter
pushf
pop
call
mov
daa
push
pushf
push
dec
push
push
push
sub
jg
fadd
das
sbb
loopne
xor
sub
dec
or
icebp
jno
sbb
inc
cmp
mov
call
mov
sysret
add
lods
add
jo
sub
enter
add
push
and
or
or
mov
pop
out
fimul
add
add
sbb
dec
pusha
cmovae
repnz
xchg
mov
jno
stos
cmovnp
in
ds
dec
add
sar
jb
(bad)
leave
and
hlt
icebp
ja
test
or
adc
push
les
sbb
dec
inc
sbb
inc
mov
push
jnp
adc
sbb
sub
adc
adc
push
adc
sti
adc
stos
rol
push
inc
pop
pop
sub
adc
ret
aad
or
stos
jmp
adc
ror
daa
push
gs
sbb
adc
or
loope
xlat
imul
ret
xlat
push
push
loop
pop
xor
xlat
or
xlat
cmp
pop
frstor
add
dec
cmp
xlat
sub
gs
push
and
inc
sbb
ror
shr
test
les
test
sti
(bad)
adc
xor
sbb
jno
jno
cmp
push
jb
dec
ror
sbb
bound
inc
and
dec
test
mov
mov
test
sub
dec
ins
out
adc
ins
mov
cld
sub
out
or
lahf
sti
pop
and
in
inc
mov
popf
out
add
adc
sbb
test
pop
inc
outs
movs
mov
outs
clc
push
outs
js
out
sahf
or
push
xor
push
pop
out
jns
test
or
dec
outs
mov
sahf
aam
loopne
inc
lds
cld
ret
sbb
loope
outs
ins
lahf
push
cs
sahf
not
and
int3
sbb
outs
sub
or
pop
push
lahf
pusha
jle
inc
mov
outs
push
inc
scas
aas
jle
jmp
adc
add
mov
sbb
jg
pop
add
ret
add
dec
stc
addr16
add
inc
cs
scas
pushf
inc
(bad)
ins
wbinvd
add
sbb
ud2
add
test
inc
subps
push
inc
add
lock
adc
adc
inc
xlat
xchg
cmp
lods
add
maxps
and
add
add
cmps
das
sub
push
jne
cmc
rol
ja
xchg
pop
add
and
and
xchg
xchg
test
adc
bound
arpl
js
sub
mov
or
ret
push
push
sub
pop
lea
loopne
push
dec
jmp
inc
dec
jo
retf
ja
mov
pop
lods
repz
or
aas
ja
mov
adc
inc
ret
or
imul
push
push
pop
push
jo
aas
ja
les
and
jo
imul
stos
adc
sbb
sub
test
ja
push
sbb
ja
nop
pop
or
jno
or
mov
sub
push
loopne
add
ja
pop
mov
and
ins
nop
fadd
sbb
mov
inc
bound
jae
or
ja
mov
xor
ret
ins
cs
mov
or
call
imul
pop
test
adc
add
sub
fidivr
and
clc
cmp
in
lods
add
push
jbe
retf
and
hlt
pop
repz
test
movs
pop
ss
xchg
push
xor
neg
in
lock
add
pusha
push
cmp
push
je
pop
mov
dec
out
cs
out
jg
mov
pop
inc
pop
jg
out
out
nop
pop
jle
pop
js
add
neg
jnp
pop
mov
push
add
mov
or
sahf
pop
test
inc
push
jg
xlat
or
pop
js
ss
mov
jg
outs
add
pop
jg
mov
sbb
arpl
shl
sbb
mov
pop
add
call
add
in
repnz
add
fimul
scas
mov
mov
cli
dec
(bad)
add
scas
push
or
jno
pushf
prefetch
iret
repnz
call
cmovne
inc
add
dec
jno
inc
add
add
push
repnz
sahf
mov
call
xchg
jmp
inc
movups
cmp
jb
setg
push
mov
add
ret
mov
dec
test
sbb
es
lahf
mov
cmp
cmp
iret
dec
pushf
rcl
iret
sub
add
sub
cdq
mov
jmp
ret
push
push
loopne
xchg
cli
ja
push
add
pop
(bad)
ret
repz
jmp
push
sub
repz
mov
repz
add
mov
or
add
shr
gs
pop
repz
xor
dec
pop
cmp
add
repz
adc
push
inc
mov
inc
retf
xor
xchg
fsubr
mov
and
gs
pusha
adc
gs
adc
inc
gs
add
adc
jno
bound
loop
test
sub
jno
or
add
and
and
mov
mov
sub
xchg
fadd
inc
cmp
xchg
add
xor
(bad)
fsub
inc
mov
xor
pop
add
mov
inc
mov
push
stos
aad
xor
adc
mov
add
inc
in
dec
fistp
adc
sub
or
mov
repnz
push
mov
dec
ss
xchg
hlt
push
add
adc
je
les
xchg
push
addr16
mov
dec
or
mov
mov
lock
ins
scas
es
inc
mov
fadd
push
fadd
hlt
movs
push
pop
or
out
push
js
xor
addr16
mov
cmp
add
push
adc
pop
jecxz
sbb
popw
out
sbb
addr16
inc
and
inc
movhps
fs
retf
xchg
aas
(bad)
add
add
push
push
hlt
mov
mov
rcl
wbinvd
mov
or
dec
xchg
mov
pop
les
add
add
cmovne
add
pop
repnz
dec
push
cmovae
(bad)
imul
add
dec
ret
in
lahf
fmul
dec
add
dec
add
jb
mov
imul
dec
mov
cmp
bound
dec
sbb
loopne
cmp
mov
pop
push
dec
sub
adc
outs
ret
les
and
fsub
outs
push
sub
mov
push
test
cli
rol
test
inc
or
inc
jl
sub
outs
and
and
mov
add
add
and
outs
adc
sbb
fadd
les
adc
and
lea
push
mov
js
outs
outs
ret
adc
nop
sub
adc
add
inc
push
cmps
outs
dec
xchg
inc
bound
jno
pop
and
outs
jno
add
outs
stos
push
mul
add
outs
add
and
and
pop
outs
jae
or
fadd
inc
cmp
xor
sub
outs
or
or
sahf
outs
ins
adc
movs
inc
outs
in
shl
ins
dec
or
pop
mov
inc
or
fisub
lds
cmp
jo
mov
scas
add
ja
jbe
fs
enter
pop
pop
or
(bad)
(bad)
call
stos
ds
push
mov
iret
repz
jo
inc
push
sub
and
push
outs
add
test
adc
scas
push
fcomp
shr
push
jl
mov
fs
jns
ds
fs
cmps
push
xor
aam
or
fmul
and
sbb
or
add
mov
inc
sub
mov
outs
jo
push
pop
jns
(bad)
out
and
test
xchg
aas
ret
in
add
add
xchg
into
(bad)
ret
add
pusha
adc
or
add
mov
wbinvd
add
or
cmc
ret
xor
or
lar
cmovae
icebp
inc
add
bound
bound
pop
inc
cmova
aad
adc
xchg
das
jg
cmovns
cmovnp
or
retf
add
dec
mov
mov
xchg
pop
dec
cmp
loop
xchg
add
and
cmps
add
aam
jns
or
push
test
xchg
test
inc
pop
or
or
jb
outs
xchg
inc
inc
test
push
jae
nop
loopne
aad
aaa
pop
pusha
(bad)
aad
xor
xchg
scas
cs
push
sub
pop
inc
test
push
push
pop
mov
pop
sti
pop
adc
imul
sbb
xor
add
shr
push
inc
adc
test
popa
xchg
xchg
push
xchg
or
xor
xchg
dec
data16
or
jb
idiv
mov
imul
or
mov
or
mov
retf
ret
or
int
adc
xor
jno
aad
add
shl
and
mov
sahf
shl
adc
adc
xor
jno
ror
test
sub
inc
jo
adc
ficomp
cmp
sbb
add
jae
icebp
shr
lods
jmp
jae
pop
sub
or
jmp
xor
mov
adc
outs
xor
popa
je
imul
pop
ins
adc
adc
in
push
pop
sti
or
jne
jae
xlat
jae
sbb
mov
ss
xchg
push
add
loope
adc
aas
aam
sbb
add
int
loop
fs
int3
ins
push
imul
push
(bad)
(bad)
iret
pushf
lods
push
xchg
push
xor
adc
jnp
add
adc
ins
ficom
cmp
push
enter
dec
push
sub
jno
iret
pop
adc
out
mov
js
sbb
add
out
rcr
and
mov
shl
cmp
mov
sub
mov
pushf
bound
mov
shl
loop
pop
ror
push
add
mov
xor
add
push
icebp
mov
add
inc
into
gs
rcl
orps
or
lahf
jne
xchg
cli
xchg
imul
sub
jns
mov
sub
clc
wbinvd
add
push
add
mov
jne
js
or
cmovae
pop
out
mov
imul
add
add
imul
dec
add
das
pop
mov
add
dec
add
repnz
in
adc
mov
scas
loop
add
mov
add
sub
scas
sub
mov
mov
and
scas
stc
dec
and
and
hlt
or
adc
adc
sub
adc
push
pop
lea
xor
scas
push
inc
pusha
push
push
jp
scas
rcl
and
ror
push
rol
mov
xchg
scas
push
and
or
add
add
push
jne
cs
scas
push
xor
xor
les
sbb
mov
push
mov
scas
in
pop
add
adc
xor
pop
pop
jno
loop
mov
jo
sbb
mov
and
sub
jae
pusha
xor
pop
cwde
mov
add
rcr
pop
inc
and
or
sub
mov
sbb
mov
and
mov
xor
cmp
mov
push
jae
sub
loop
cmps
pop
ins
push
dec
popf
sbb
test
ins
adc
test
inc
cli
jns
test
ins
imul
loop
mov
jae
bound
xchg
cmp
fs
jmp
test
popf
push
mov
jo
aas
add
test
lods
jo
jno
jns
push
jle
xchg
enter
fdivr
jnp
add
push
push
cmp
push
add
mov
dec
out
(bad)
cmp
or
out
pop
or
sbb
out
push
out
cmp
push
outs
pop
push
(bad)
fcomp
cld
push
and
push
jo
push
je
mov
mov
sub
or
inc
out
dec
or
or
add
movs
icebp
sbb
hlt
daa
cmc
daa
sub
inc
call
clts
mov
(bad)
add
nop
push
jb
add
stc
mov
mov
add
xchg
pop
add
aam
wbinvd
adc
ud2
sub
cmp
add
add
cmovae
inc
add
loopne
in
add
add
dec
aas
shl
scas
dec
jne
dec
add
pop
cmovl
ja
rcl
hlt
call
cwde
and
loopne
mov
fstp
outs
and
leave
bound
push
add
add
add
or
add
mov
and
pusha
jae
cmovne
adc
(bad)
aad
pop
fist
stos
push
fldcw
mov
ss
sti
inc
lea
and
js
fist
and
adc
ffreep
add
pop
sbb
fist
sbb
test
dec
test
cmp
push
mov
push
mov
scas
in
add
adc
adc
push
fbstp
add
fistp
fild
add
xor
shr
bound
mov
jno
add
and
and
jno
adc
mov
or
add
(bad)
fbstp
shr
fbstp
adc
sub
add
or
pop
ins
fild
fild
or
xor
pop
lock
nop
fisub
or
inc
sbb
sub
mov
adc
add
sbb
popf
mov
fdivr
test
cmp
daa
dec
push
and
fidiv
inc
pop
ins
push
or
cmp
imul
sbb
outs
adc
outs
push
inc
sub
clc
(bad)
outs
jnp
adc
push
enter
or
dec
push
test
push
or
sub
jl
loop
repz
outs
push
test
push
dec
mov
test
and
sbb
outs
sar
outs
or
and
sub
pop
ins
jno
movaps
mov
movaps
xor
iret
or
movaps
xor
int3
shr
sub
iret
or
movaps
jnp
shl
add
clc
add
lea
inc
in
cmove
jbe
mov
inc
jl
cld
adc
dec
cmovns
push
jle
jo
repnz
in
dec
add
add
les
add
aad
lock
mov
outs
(bad)
cmp
sub
ins
adc
xchg
in
push
add
pop
pop
cmp
aam
inc
bound
or
push
inc
imul
sbb
or
test
test
or
or
stos
outs
and
cmc
outs
and
mov
sti
cmps
outs
ret
add
mov
push
fisttp
ins
inc
or
pop
outs
push
adc
sbb
adc
mov
and
pusha
test
and
lea
outs
in
add
inc
outs
xor
push
or
push
or
outs
bound
outs
jno
sub
adc
and
add
inc
and
jno
pop
adc
cli
outs
jno
xchg
sub
mov
outs
jno
adc
mov
outs
xor
xchg
fdiv
bound
inc
cmp
outs
jae
shr
outs
sahf
inc
or
or
outs
test
outs
inc
sub
pusha
ins
outs
or
or
repnz
imul
movs
inc
outs
fisub
xor
outs
iret
sub
cmp
outs
fcomp
scas
add
jbe
xchg
xchg
add
push
repnz
outs
ins
jge
pop
stos
lock
jle
jg
push
fdiv
cmp
repz
inc
les
fadd
push
outs
add
lods
and
dec
outs
inc
adc
aad
sbb
outs
adc
sar
lods
push
cmp
out
mov
aam
mov
lods
pop
mov
push
test
push
fs
xor
cld
loop
and
push
outs
clc
jbe
add
adc
or
add
rol
(bad)
outs
add
adc
push
icebp
js
xchg
ds
out
inc
retf
xchg
pop
pop
add
or
pop
mov
(bad)
add
xor
mov
add
add
or
movsx
prefetch
or
mov
inc
add
adc
jecxz
inc
cmovne
cmovbe
xchg
inc
add
add
inc
pop
dec
add
into
push
pop
(bad)
adc
(bad)
add
push
dec
cdq
into
arpl
aaa
adc
jmp
or
cmps
pop
xor
pop
and
mov
dec
mov
shl
fadd
jae
xchg
or
ins
or
ins
(bad)
push
and
push
and
and
aad
push
sub
ins
inc
js
ss
inc
ins
test
push
lea
and
fstp
add
fiadd
push
add
or
imul
jo
push
xor
push
aaa
cmp
and
adc
imul
dec
xor
add
push
mov
jno
and
or
ins
outs
adc
mov
and
xchg
fadd
inc
sbb
mov
sub
ins
mov
jno
add
and
and
ins
adc
mov
ins
xor
xchg
fdiv
bound
inc
cmp
ins
jae
shr
ins
pushf
inc
or
or
ins
test
ins
inc
sub
pusha
ins
ins
or
or
lock
imul
inc
ins
fild
or
inc
pusha
aad
push
push
and
add
push
shl
fimul
push
add
mov
inc
inc
pop
inc
mov
jae
loope
mov
pop
nop
sahf
xlat
test
ds
fiadd
cmp
push
sbb
adc
cwde
dec
adc
or
ja
push
sbb
xlat
cmp
loopne
fs
push
ds
addr16
into
sahf
out
pop
test
call
test
xchg
dec
addr16
lds
rol
addr16
jecxz
xchg
outs
push
adc
jecxz
sub
mov
jge
xchg
cwde
inc
outs
in
loope
adc
into
imul
inc
jns
gs
xchg
outs
iret
dec
aam
or
dec
pop
addr16
sub
mov
data16
inc
dec
data16
and
jnp
(bad)
cdq
cmps
xor
push
rol
pop
jbe
inc
ins
outs
ja
sbb
std
dec
add
call
or
adc
push
cmovl
punpckhdq
movsx
push
shr
jb
enter
jns
pop
jge
inc
test
mov
jns
add
xor
dec
add
cmp
mov
test
mov
add
or
sbb
retf
add
push
imul
add
or
xchg
ret
pop
xor
(bad)
sub
and
sub
push
imul
xor
add
bound
adc
aas
push
jecxz
and
aas
jne
adc
not
(bad)
inc
jns
popa
ins
jmp
sub
cmps
pop
sbb
push
aad
cmp
sub
xchg
add
ror
add
add
and
(bad)
push
pusha
ins
out
add
xchg
loopne
fdivr
push
(bad)
pop
jl
jl
dec
inc
adc
push
rcr
mov
gs
push
fs
push
enter
sbb
add
pop
or
or
inc
sub
cwde
adc
sbb
pop
pop
and
mov
push
xor
adc
cdq
jmp
mov
add
jbe
jmp
pop
sub
adc
xchg
das
enter
cmp
nop
push
xor
add
xchg
das
or
jp
fisttp
mov
jmp
outs
add
fadd
iret
jle
pusha
jo
or
push
xor
(bad)
fstp
or
inc
dec
popa
jae
outs
outs
imul
add
dec
out
cmp
cmp
std
mov
xor
call
pushf
xor
gs
ja
addr16
inc
mov
inc
rol
ficomp
mov
call
out
add
and
ret
dec
xor
hlt
dec
lock
(bad)
mov
sub
push
cvttps2pi
fsubr
sbb
lsl
or
daa
dec
stos
mov
jbe
repz
scas
push
ret
jns
es
or
out
adc
rcl
ret
push
inc
adc
sub
vminps
aam
mov
adc
enter
aad
push
mov
call
hlt
sub
adc
gs
popa
pop
call
sub
fld
scas
pop
sbb
call
sbb
fst
add
xchg
xor
ret
mov
pop
ss
rol
add
pushf
xchg
push
scas
push
adc
xor
shr
mov
sbb
es
fwait
cmp
add
dec
jno
test
adc
mov
and
inc
push
adc
jne
adc
out
adc
inc
push
cmp
rol
add
inc
enter
fcom
imul
shr
dec
femms
cmp
mov
jb
jmp
repz
js
push
inc
push
mov
jbe
xor
sbb
ror
scas
jb
movs
push
xor
push
test
in
adc
mov
imul
inc
adc
aas
push
or
dec
cmps
pop
mov
or
sti
popf
push
je
sub
sub
aas
fcmovu
mov
add
push
clc
xchg
push
mov
push
and
aas
and
shr
sbb
mov
test
xchg
push
cmp
adc
fcom
mov
pop
mov
ret
mov
ret
add
jno
push
pop
pop
pop
test
cmp
add
cmp
or
leave
call
adc
cmp
dec
or
pop
loope
jne
js
outs
sub
jo
test
jne
dec
xor
dec
popa
dec
push
shl
ins
pop
push
std
xchg
sbb
pop
mov
test
pop
push
lds
fld
das
xchg
or
push
mov
add
push
or
add
xlat
pop
test
imul
cs
cdq
xor
das
add
sbb
gs
fld
add
std
(bad)
add
ds
sub
sbb
and
dec
add
or
pusha
pop
or
loop
out
or
imul
pusha
test
jo
jo
sar
mov
rcr
xchg
inc
dec
dec
add
bound
rol
fld
and
mov
test
add
sub
xchg
call
je
push
and
adc
sub
lea
cmc
mov
and
xchg
mov
push
xor
sub
or
xor
cdq
mov
mov
mov
ins
cmp
fiadd
pop
popf
push
pusha
adc
sub
push
jo
(bad)
in
jns
shl
push
add
scas
push
push
add
push
(bad)
sbb
push
sbb
adc
out
sbb
mov
mov
or
sub
or
mov
aam
adc
push
pushf
mov
out
shr
push
pop
int
add
add
lahf
sbb
ins
(bad)
jnp
sub
jo
verw
jge
out
push
rcl
pop
pop
mov
(bad)
add
pop
(bad)
call
adc
cmc
xchg
das
ja
jle
cmovle
addr16
add
or
rsqrtps
cmp
add
mov
mov
add
jmp
inc
mov
sbb
and
int3
retf
ret
aam
mov
push
fadd
pushf
or
fst
sub
cs
cmp
jb
mov
push
ins
add
pusha
mov
and
xor
jae
sahf
push
(bad)
(bad)
sub
sbb
nop
cmp
sub
es
data16
push
in
cmp
arpl
sub
loopne
adc
inc
or
adc
push
aad
push
and
outs
movq
nop
cmp
xor
xchg
ins
xor
cmp
test
mov
icebp
ror
or
stos
sbb
add
push
and
leave
and
fsubr
das
imul
lods
add
jmp
lods
jge
adc
call
pop
lods
adc
add
das
jno
add
inc
push
push
dec
jecxz
xchg
push
mov
pop
push
fild
xchg
dec
cmp
sbb
loopne
dec
rol
sbb
or
sbb
cwde
out
mov
jo
dec
fdivr
add
adc
ret
repnz
push
push
xor
pop
or
lock
repnz
add
or
xor
mov
imul
adc
pop
ret
adc
sbb
jmp
push
loopne
adc
sub
inc
ja
mov
jns
jns
or
pop
jns
rol
out
jae
rol
out
cmp
jg
add
pop
pop
push
scas
lods
sbb
push
mov
or
add
rcr
inc
sub
cmps
push
lea
ror
outs
in
pop
inc
rcl
test
shl
xchg
inc
xchg
and
sub
inc
movs
add
test
pop
shl
dec
mov
daa
inc
xchg
out
or
or
inc
ss
mov
fnstcw
dec
add
adc
add
repz
ss
sub
ja
jo
lods
in
js
mov
outs
fs
jmp
pop
sbb
movs
or
popa
js
shr
jecxz
mov
mov
xor
sub
jge
xor
enter
repz
sbb
nop
adc
add
jge
jo
daa
cmp
push
adc
jl
adc
inc
sbb
and
dec
adc
xor
in
inc
or
inc
jecxz
adc
pop
mov
mov
arpl
dec
add
or
sub
add
or
icebp
inc
loopne
shr
pop
sub
pop
icebp
pop
test
xor
push
sbb
js
pop
push
or
sub
sahf
pop
mov
and
and
rol
enter
pop
push
stc
cmp
mov
pop
lods
push
sbb
fisubr
pop
jne
and
out
(bad)
fadd
adc
out
mov
out
aaa
add
mov
xchg
inc
add
add
das
adc
and
out
add
mov
and
(bad)
in
push
add
cmps
pop
add
outs
pop
arpl
add
sub
sub
mov
and
pop
xor
add
lea
pop
add
add
xor
aad
sub
sbb
sub
sub
ins
jne
or
add
dec
popa
xlat
pop
mov
sub
and
mov
mov
in
ins
addr16
daa
shr
xor
push
test
sbb
sub
loopne
sbb
dec
aam
push
jnp
lds
hlt
dec
outs
inc
jb
sbb
scas
es
popf
add
push
jb
arpl
outs
imul
daa
or
inc
ins
popa
addr16
popa
xor
sub
pushf
jmp
or
mov
adc
(bad)
daa
fcom
mov
push
lahf
or
cmp
add
or
gs
adc
cmp
or
mov
rcr
jp
dec
dec
mov
(bad)
fmul
dec
dec
shl
xor
cs
mov
push
ror
fmul
inc
(bad)
icebp
or
and
mov
rol
in
xchg
fisttp
xor
es
in
aas
mov
jmp
out
out
popf
sub
push
out
pop
xor
sbb
adc
pop
out
test
jle
mov
ins
dec
or
push
push
stc
fiadd
inc
jns
inc
movs
sbb
out
out
mov
or
dec
add
and
xchg
mov
div
mov
enter
or
dec
popa
mov
(bad)
dec
jae
outs
bound
outs
or
and
ret
adc
dec
mov
cmp
push
inc
jne
xor
adc
pop
add
cmp
inc
test
inc
jnp
xor
mov
or
adc
fwait
imul
or
cdq
inc
sbb
sub
inc
js
jo
call
sahf
pop
aad
adc
jmp
and
push
lods
rcr
and
mul
mov
pop
and
out
in
shr
pop
pop
rcr
out
add
hlt
inc
ficom
loopne
mov
inc
jnp
push
adc
cmp
and
or
mov
adc
add
sub
or
mov
test
adc
sub
pusha
ins
mov
dec
aam
jmp
adc
adc
iret
neg
add
mov
inc
scas
loop
push
ltr
repnz
mov
syscall
add
mov
test
pop
cwde
push
mov
retf
pop
imul
sar
mov
push
mov
push
add
loope
sub
sbb
push
dec
dec
test
add
pop
fld
imul
das
add
mov
xchg
dec
popa
rcr
sahf
or
aas
adc
jne
add
add
or
mul
push
(bad)
ror
cmp
fsub
into
int
and
add
cmp
rcl
xor
xor
jb
xchg
xor
xor
mov
lods
ins
cld
mov
aas
rol
(bad)
out
adc
push
push
rol
in
fsub
retf
ins
mov
xlat
jb
add
pusha
inc
jecxz
and
cmp
mov
mov
xchg
or
int
xor
push
and
push
sbb
add
imul
out
cwde
arpl
mov
and
stos
ror
ja
adc
or
test
sbb
(bad)
cmps
(bad)
mov
outs
outs
enter
jno
pusha
test
and
adc
and
gs
js
cld
mov
not
adc
jns
sub
je
cmp
mov
add
in
loop
mov
lds
mov
rcr
not
lods
push
es
das
outs
push
loop
push
les
xlat
dec
adc
dec
mov
push
push
mov
in
and
je
and
and
cmovbe
jb
popa
adc
daa
cmp
or
dec
popa
xchg
ss
movs
iret
nop
and
lea
lods
cmp
cmp
cdq
pop
jo
lods
add
fidiv
push
inc
push
int3
(bad)
mov
jno
jg
cs
and
inc
adc
js
push
cs
pop
mov
pushf
dec
ret
sbb
push
rol
or
outs
xor
inc
outs
mov
nop
call
outs
in
inc
jb
jbe
dec
aaa
add
fwait
add
push
push
mov
push
enter
fdivr
(bad)
or
cmp
fiadd
fwait
sti
cmp
imul
aas
pop
rcr
repnz
add
test
sub
sub
aad
ja
or
xor
gs
inc
ins
outs
fadd
movs
inc
rcl
or
jne
enter
sbb
push
aad
pop
push
pusha
rcl
(bad)
jmp
push
lds
inc
push
mov
sbb
aas
stos
ror
xchg
es
ja
retf
repnz
push
push
jmp
inc
add
pop
pop
ins
dec
and
mov
mov
sub
mov
inc
out
enter
push
aaa
das
mov
lods
or
cmp
mov
ss
push
jbe
push
push
ins
in
mov
nop
arpl
inc
pop
add
inc
cmp
push
daa
das
xchg
or
scas
aaa
mov
sbb
add
add
call
pop
push
dec
jo
and
add
push
pop
sbb
push
adc
cmp
in
aas
pop
inc
sahf
ja
push
sar
into
adc
add
mov
rcl
push
add
adc
mov
or
sub
jbe
pop
jmp
inc
xchg
pop
adc
(bad)
fild
push
and
in
fist
sbb
mov
or
sti
jo
cmp
add
xchg
cmp
ins
dec
gs
push
in
repnz
mov
mov
sbb
(bad)
ins
div
pusha
rol
(bad)
ror
or
loope
jge
pop
inc
sub
add
gs
shl
xchg
add
ss
in
pop
popa
fisttp
out
jae
jecxz
in
add
and
arpl
or
imul
cs
pop
fbstp
or
movs
ins
sub
pop
shr
xchg
add
pop
or
ins
xlat
cld
pop
add
and
daa
nop
pop
in
mov
cmps
xchg
push
hlt
push
daa
test
scas
sbb
data16
pop
cs
les
add
mov
mov
daa
sbb
daa
aas
jl
jmp
push
daa
nop
popf
pusha
add
xlat
jmp
mov
movd
dec
pcmpeqw
daa
cmps
pop
xor
xchg
lds
push
scas
lds
in
sbb
mov
xlat
mov
push
lds
outs
mov
es
daa
or
and
push
pusha
stos
retf
ret
daa
ins
mov
xchg
daa
call
in
and
test
retf
dec
(bad)
jns
jns
add
adc
imul
idiv
mov
in
xor
cmp
sar
dec
jns
push
test
ins
push
pushf
pop
push
mov
out
out
nop
push
test
cld
lock
and
jnp
out
sub
lock
dec
or
cwde
movs
push
mov
call
out
aam
fmul
push
mov
pushf
push
lods
out
cmp
jo
js
push
call
iret
jae
push
pop
fdivr
out
cmp
xchg
push
test
xor
jns
out
inc
sub
add
mov
neg
jnp
inc
push
fs
pusha
push
push
add
or
adc
push
pop
inc
out
push
jb
push
sbb
fnsave
push
cmps
inc
shr
sub
outs
ja
(bad)
cmovae
loope
lods
pop
jb
add
hlt
xor
bound
dec
mov
adc
ja
retf
pop
test
mov
ffree
mov
jno
ins
int3
mov
outs
mov
add
pop
jo
jle
cmp
mov
fmul
mov
mov
addr16
std
popa
outs
fs
popa
arpl
dec
and
sar
add
sar
dec
inc
bound
outs
dec
ret
into
jmp
fistp
loopne
loop
mov
test
cmp
inc
or
(bad)
das
add
add
or
pop
pop
(bad)
and
scas
ret
(bad)
xchg
ins
(bad)
les
shr
pop
ror
pshufw
lahf
test
pop
mov
clts
fmul
pop
pusha
push
lock
inc
cmovp
jbe
jo
dec
push
mov
add
outs
cmp
clts
pop
or
cmp
retf
sub
sub
pop
sub
ret
mov
add
xchg
fisubr
jp
or
ret
cld
add
(bad)
or
pusha
push
inc
hlt
cs
or
add
add
inc
ret
inc
add
mov
ret
lods
adc
jae
sbb
pop
adc
adc
gs
popa
lods
inc
add
adc
xlat
push
jnp
xlat
(bad)
xlat
add
sub
(bad)
fcom
xor
jnp
add
mov
and
mov
pusha
(bad)
xchg
pop
mov
add
or
xchg
rcr
xchg
xchg
pop
outs
and
push
xchg
outs
fistp
mov
mov
cmp
adc
sbb
mov
daa
add
push
push
sub
das
mov
adc
push
test
cmp
mov
js
shl
je
data16
cmp
aam
das
loop
shl
pop
aaa
aas
sbb
cmp
aas
movs
mov
test
ficom
aas
scas
loop
pop
mov
sub
push
aas
outs
fdivr
test
aas
lock
mov
ds
in
sahf
ja
pusha
push
je
add
js
loopne
sub
or
jae
cmps
mov
sbb
push
inc
dec
outs
test
neg
arpl
ja
xor
xchg
les
mov
stc
push
(bad)
and
cld
or
(bad)
push
pcmpeqb
rol
inc
mov
pop
inc
wrmsr
pop
mov
xor
xor
mov
push
pop
movq
scas
jo
add
cmp
pop
add
aas
dec
push
dec
dec
pop
cmp
jnp
add
jne
or
add
mov
ins
or
jb
daa
lds
push
mov
les
pop
or
jbe
in
and
mov
test
adc
add
sub
loop
lahf
mov
inc
mov
loopne
and
je
dec
pop
add
or
mov
js
cmc
sbb
sbb
inc
sbb
add
cvttps2pi
add
mov
bound
add
inc
pop
inc
test
mov
sub
cmp
dec
retf
push
mul
mov
push
outs
sbb
mov
dec
push
inc
fild
cs
push
xchg
in
or
ror
pop
inc
out
out
je
and
sub
inc
sub
stos
push
or
(bad)
loope
enter
or
xor
scas
test
xor
test
hlt
inc
jne
rol
js
out
push
pop
ins
inc
imul
inc
cmp
pop
cmps
cmpxchg
sbb
aam
test
lock
test
ret
mov
enter
mov
fist
and
inc
and
add
and
enter
inc
pop
ror
mov
mov
clc
(bad)
out
inc
test
test
out
mov
(bad)
pop
out
movs
out
push
test
sahf
ret
cld
fistp
pop
push
add
ins
test
push
hlt
pop
ins
cmps
or
sub
jmp
sbb
arpl
or
or
push
jbe
push
in
mov
jno
adc
adc
aas
ret
jae
pcmpeqb
iret
jo
adc
imul
push
mov
sub
pop
ja
loope
hlt
push
movs
fs
or
cmp
pop
jae
mov
dec
or
aad
aas
inc
adc
mov
addr16
or
adc
jge
pop
push
jae
fnstsw
adc
pusha
sub
rol
and
(bad)
rol
cmp
rol
dec
adc
imul
ins
icebp
fiadd
add
lods
adc
cmp
xor
inc
aas
or
aas
dec
test
inc
inc
ret
push
and
and
addr16
sub
or
cmp
imul
sub
mov
shl
sbb
inc
sbb
enter
sbb
or
or
add
mov
pop
pop
add
mov
(bad)
leave
add
inc
call
cmp
(bad)
push
arpl
fs
data16
outs
je
and
jne
or
mov
and
mov
xchg
pop
dec
fild
out
and
es
adc
xor
jnp
cmp
pusha
add
and
inc
cli
pop
femms
pop
or
and
add
push
and
pop
inc
dec
inc
ror
out
dec
add
shl
sbb
cs
ja
dec
mov
xchg
rol
adc
int
mov
loopne
loope
jne
mov
push
add
dec
shl
mov
daa
aad
outs
cmp
push
sub
dec
rol
and
sbb
inc
das
add
jo
bound
sub
ret
popa
sbb
popa
imul
das
lods
pop
add
lahf
pop
adc
and
push
push
xor
dec
inc
sbb
je
jecxz
or
cmp
pop
out
pop
mov
call
movs
xlat
push
pop
js
loope
lock
cmp
push
lds
lods
das
fisttp
(bad)
dec
cmps
ins
cmp
add
sbb
pop
(bad)
jae
ret
clc
and
push
and
les
scas
cmp
jns
std
xor
pop
(bad)
ror
inc
dec
outs
push
sub
adc
fsubr
pusha
mov
cmp
leave
in
add
push
mov
adc
pop
es
loopne
sub
add
in
pop
xchg
sub
inc
test
mov
fmul
lods
or
fs
imul
loopne
push
add
or
or
outs
sbb
add
lods
cmc
fldcw
add
mov
ss
or
xchg
mov
adc
inc
pop
cmps
mov
das
lock
jae
rol
mov
adc
sysret
push
push
arpl
and
mov
inc
push
xor
in
aaa
push
adc
xor
sti
inc
xchg
pop
sub
cmp
outs
xor
pusha
push
sub
add
int3
mov
sbb
add
jns
outs
add
and
scas
sub
pop
xchg
or
cwde
pop
jae
outs
dec
pusha
aad
inc
add
inc
dec
mov
cmp
adc
inc
jb
popa
jns
or
or
cmp
mov
push
daa
cmps
iret
gs
(bad)
test
xchg
adc
inc
rcr
pop
mov
call
gs
inc
add
pusha
stos
add
mov
shl
mov
outs
sub
sbb
(bad)
or
mov
or
pusha
cmps
pop
cmc
and
(bad)
sbb
je
test
imul
lods
jae
scas
jo
stc
add
inc
add
pop
inc
jne
push
cmp
fdivr
pop
inc
push
fsubr
das
cmp
pop
adc
out
ret
push
push
inc
push
(bad)
xlat
loop
fisttp
das
fmul
and
aas
bound
lock
loopne
push
cmps
adc
sub
push
scas
jbe
sahf
ins
pop
xor
mov
repz
push
xchg
popa
xchg
arpl
or
and
pop
cwde
push
push
cmp
loopne
cmp
jb
jo
pop
rcr
dec
push
dec
cmp
add
ret
add
jae
jp
test
sub
sub
mov
mov
sub
pushf
xlat
mov
sbb
aas
mul
push
mov
data16
xor
sbb
jl
cmp
sbb
add
neg
xor
dec
cwde
lods
pop
(bad)
adc
loope
sub
nop
inc
add
jmp
xchg
xor
xor
push
scas
xchg
sub
jmp
aad
dec
test
(bad)
push
aaa
cmp
push
dec
xchg
ds
add
clc
(bad)
inc
inc
(bad)
lahf
cmp
aas
adc
mov
push
(bad)
or
mov
dec
pop
js
push
push
call
mov
jmp
or
es
add
and
into
leave
push
fsubr
dec
add
add
dec
and
adc
push
xchg
test
add
cmp
inc
sub
push
popf
jno
add
inc
xlat
push
in
es
add
in
push
mov
mov
das
add
and
out
mov
addr16
add
cmc
stc
frstor
push
out
mov
and
pop
pop
mov
aad
dec
fcomp
test
fbstp
push
xchg
mov
out
je
out
jnp
loop
in
out
sub
mov
stos
jmp
xor
jge
stos
in
inc
rol
push
xchg
or
movs
and
cmps
mov
push
(bad)
xor
cmc
fs
neg
mov
nop
mov
and
pop
cmp
ds
rcr
adc
or
jbe
xchg
pop
xor
ds
inc
push
scas
sub
fs
imul
nop
xor
adc
pop
mov
movs
mov
sbb
les
mov
out
(bad)
sbb
cmp
js
xchg
push
(bad)
aad
les
push
and
rol
and
nop
jmp
sbb
daa
stos
xor
loopne
outs
dec
pop
outs
int
xor
dec
dec
ret
neg
fs
pop
ret
mov
rcr
test
aas
outs
sub
add
xchg
add
add
pop
fsubr
or
cmp
dec
push
adc
daa
xchg
sub
nop
fst
scas
test
mov
mov
rol
int
push
and
sub
fisttp
mov
ss
jp
mov
retf
adc
or
xchg
arpl
mov
inc
cdq
adc
jg
adc
mov
add
pop
add
popf
jbe
xor
inc
repz
sub
(bad)
mov
test
xor
lock
mov
or
iret
or
out
push
imul
sub
add
in
imul
aad
into
fs
icebp
add
iret
sti
push
and
jmp
mov
mov
cmp
mov
fwait
sbb
cdq
xor
addr16
sub
pop
fucomp
mov
sub
push
xor
gs
jnp
or
xchg
jp
sub
pop
retf
push
push
js
mov
add
jecxz
loop
ret
call
inc
ret
pop
push
inc
mov
pusha
loopne
add
xchg
sub
cmp
inc
sub
pop
sbb
je
fdivr
adc
xchg
arpl
mov
in
lock
ja
out
add
inc
push
pushf
loopne
sti
push
and
out
aaa
sti
push
fidiv
inc
out
push
adc
das
scas
push
sbb
loop
xor
hlt
out
lock
mov
(bad)
(bad)
mov
push
mov
daa
and
xchg
sub
inc
add
xor
clc
push
div
ret
ja
mov
and
dec
jnp
xor
or
ins
jo
mov
shr
aaa
push
inc
inc
jb
ja
jae
jg
xchg
jl
hlt
push
cmp
dec
outs
and
(bad)
jmp
bound
fcom
jne
sbb
xor
imul
xor
inc
and
adc
out
push
and
mulps
icebp
in
movs
fild
adc
cmps
xchg
pextrw
or
cmp
cmp
sub
loopne
cmp
cld
pop
xchg
lea
cmp
stc
add
(bad)
aaa
add
inc
dec
stos
leave
push
inc
sub
loop
loope
imul
inc
popa
or
jnp
sbb
je
jo
cmp
add
call
jecxz
jnp
push
fadd
jecxz
ret
or
cmp
stos
call
jae
mov
nop
or
js
and
adc
sbb
pop
inc
add
inc
pushf
loope
popa
add
mov
jge
jno
sub
sbb
xor
mov
push
add
sub
add
add
add
gs
add
outs
dec
mov
loopne
in
push
dec
(bad)
jo
lods
mov
push
adc
or
ret
add
mov
jmp
sbb
fisubr
arpl
or
and
jl
adc
add
and
fwait
dec
lea
add
movs
adc
or
and
pop
mov
and
cmp
outs
xchg
rcl
adc
jae
xor
add
std
imul
sar
add
or
popw
fadd
pop
les
mov
inc
inc
mov
fldenv
stos
jge
and
lock
mov
in
mov
into
fdivp
or
xchg
(bad)
aaa
pop
dec
add
fadd
adc
fstp
inc
push
and
inc
xor
sbb
aam
and
jae
cmp
ds
push
sti
jae
bound
sbb
pop
inc
or
dec
test
xor
add
es
push
adc
mov
and
inc
cmp
xor
and
ret
cs
data16
push
mov
push
ror
push
mov
movs
push
scas
push
rcpps
fdivr
pop
adc
add
dec
ja
paddusb
jmp
push
fs
or
test
push
sub
or
cmp
pushf
push
adc
ins
adc
pop
frstor
and
push
fnstenv
into
fdivp
mov
mov
cmps
sub
bound
pop
push
das
outs
push
out
stc
push
xchg
retf
scas
sbb
scas
xchg
push
out
adc
xor
loope
or
inc
jno
push
add
add
or
adc
add
pop
inc
dec
sbb
add
sub
addr16
xchg
adc
add
inc
or
mov
jmp
push
arpl
xor
pop
or
push
push
push
or
sub
push
push
adc
sbb
stos
adc
mov
fdivp
(bad)
mov
loopne
push
clc
sub
add
mov
js
push
dec
addr16
fst
adc
(bad)
and
add
mov
nop
xchg
sbb
mov
test
push
sub
sbb
movs
fdivr
jmp
pop
add
jns
or
or
addr16
inc
adc
push
add
dec
lods
cmp
xchg
lock
aaa
push
lahf
int3
pop
add
push
push
cmp
std
das
sbb
das
mov
fdivr
std
mov
mov
lahf
push
fadd
scas
lds
mov
mov
jae
jno
(bad)
or
and
enter
inc
sub
rol
(bad)
xor
call
sbb
add
daa
and
jae
dec
loope
add
daa
xchg
fwait
pop
add
push
out
pop
cmp
in
adc
mov
sub
xlat
dec
mov
pop
push
jbe
stos
xlat
xor
call
mov
call
sub
cmps
xlat
cmp
add
and
rcr
add
jns
sub
pusha
inc
outs
pop
dec
pop
push
sbb
paddb
mov
popa
inc
sbb
jecxz
jbe
ja
pop
add
or
les
in
and
das
or
fbstp
inc
rol
add
mov
fsubr
lds
scas
scas
push
fbstp
push
stos
push
jecxz
fwait
sub
loopne
mov
loop
je
mov
leave
and
sbb
test
xchg
inc
sub
xlat
daa
mov
inc
sub
enter
push
or
leave
jecxz
(bad)
jbe
add
or
fsub
or
ret
mov
add
push
out
out
jge
adc
ds
jmp
pop
push
out
call
and
cmp
push
pop
adc
or
and
mov
pusha
sub
movs
sub
addr16
inc
add
ja
xor
ret
mov
aaa
in
pop
add
cdq
push
mov
aaa
femms
push
lock
mov
inc
shl
sbb
push
adc
add
jne
and
cmp
(bad)
sbb
sub
ror
mov
je
aam
dec
cmove
or
push
mov
lods
push
outs
(bad)
imul
pop
call
pop
adc
leave
ins
mov
outs
or
(bad)
in
leave
leave
and
in
popa
cdq
aad
inc
fucom
es
jo
xor
push
push
mov
shl
add
repz
ins
jno
fiadd
or
jecxz
jecxz
rol
repz
lock
and
push
repz
add
fs
loopne
(bad)
out
mov
and
dec
bound
add
sbb
and
push
lahf
pop
mov
mov
scas
add
repz
repz
repz
jno
and
repz
jno
mov
pop
pop
inc
(bad)
pushf
xrelease
add
and
popa
les
test
pusha
mov
cld
pop
add
repz
xor
loopne
add
xor
sbb
jmp
ins
out
rcl
inc
faddp
xor
cmovs
movs
push
xor
add
scas
push
pop
les
xor
and
add
cmp
xchg
xchg
xchg
pop
pop
or
jo
push
rol
and
add
mov
dec
cmp
ret
rcl
jmp
imul
loopne
add
imul
js
push
jecxz
mov
jo
jecxz
imul
push
ror
fbstp
test
repnz
(bad)
out
add
adc
out
idiv
add
xchg
sub
push
pop
das
push
add
add
ror
(bad)
mov
add
push
push
cmp
sub
mov
dec
in
test
call
adc
or
popf
jle
pop
(bad)
jno
shr
pop
add
sbb
hlt
das
adc
das
call
xlat
inc
nop
push
mov
jge
xchg
aas
xor
or
add
or
sti
jnp
scas
add
pushf
dec
loopne
push
mov
xchg
pop
xor
lds
push
dec
inc
sub
inc
nop
push
xchg
sub
pop
sysret
fcom
add
inc
rol
add
pop
or
adc
mov
inc
add
sub
(bad)
mov
sub
aas
dec
sbb
or
dec
add
mov
stc
nop
jl
adc
mov
fdiv
dec
bound
or
adc
sbb
lds
cs
push
xchg
xchg
ret
inc
and
cmp
or
retf
jns
shr
pop
lods
ins
add
jnp
mov
push
mov
in
sti
push
call
ja
ficom
retf
scas
loop
push
add
fs
mov
movs
push
inc
inc
or
push
arpl
or
dec
fistp
sub
push
inc
jne
dec
(bad)
sbb
pop
adc
fdiv
cs
dec
jns
pop
shl
imul
add
ret
xor
dec
cdq
pop
or
lods
pop
add
push
(bad)
es
das
sti
push
mov
in
fucomp
inc
(bad)
clc
push
pop
add
clc
add
push
fisttp
rcl
push
ret
xchg
(bad)
mov
ss
or
stos
jmp
xor
sub
inc
jmp
dec
jecxz
jmp
mov
mov
mov
(bad)
or
addr16
jno
lods
cmp
add
nop
mov
adc
test
fld
iret
and
pop
adc
mov
call
sub
ret
mov
lea
push
jae
jl
mov
loopne
cwde
cmp
xor
sbb
mov
adc
push
push
maskmovq
mul
xor
add
mov
sbb
and
test
mov
push
lahf
pushf
fistp
cs
out
enter
xchg
test
or
mov
xor
pop
inc
and
daa
mov
pop
addr16
adc
ror
push
pop
pop
jmp
mov
dec
ret
sbb
push
inc
sub
inc
or
dec
test
and
push
cmp
jg
scas
popf
sub
adc
das
sbb
sbb
dec
sbb
outs
das
arpl
into
aam
add
test
adc
mov
into
push
add
cdq
out
add
mov
fsubrp
push
inc
mov
mov
xor
jo
rcr
rcr
pusha
xor
rol
pusha
je
jns
add
push
mov
retf
shl
clc
xor
or
xor
outs
scas
popf
push
es
and
dec
das
addr16
test
js
(bad)
and
pop
pusha
ret
or
loop
mov
imul
push
imul
sbb
ret
xor
stos
push
(bad)
sbb
xchg
mov
adc
pusha
xor
mov
push
out
dec
out
and
sbb
push
jb
movs
fcmovnb
shl
xor
mov
clc
jecxz
ja
into
test
jecxz
daa
outs
scas
mov
mov
lahf
push
ja
shl
cld
sub
cmp
loopne
jmp
xor
sbb
mov
and
outs
sub
jne
fsubr
inc
jbe
je
loop
and
or
and
imul
std
arpl
or
loop
xlat
mov
fnstenv
cmps
jmp
push
sub
push
jmp
inc
xchg
mov
call
cmps
fild
jl
jo
adc
push
rcl
sbb
test
jo
inc
inc
mov
inc
push
mov
add
push
add
inc
daa
mov
dec
pop
sub
jns
daa
cvttps2pi
mov
mov
pmaddwd
sub
pop
xchg
pop
cs
jo
inc
dec
mov
fstp
jmp
pop
add
or
xchg
pusha
push
stc
cmp
imul
jno
cwde
push
sbb
pop
jecxz
add
rcr
push
imul
mov
jae
xchg
imul
mov
push
and
push
sbb
inc
sub
stos
imul
gs
add
push
ins
imul
mov
mov
push
add
cs
and
cwde
and
and
pop
sbb
aad
imul
add
add
jno
stos
imul
imul
mov
jno
adc
sub
jle
mov
int3
fiadd
adc
mov
add
push
imul
xor
jl
pop
sbb
rcl
pop
mov
xor
test
xor
and
xor
jmp
xchg
xor
mov
add
pop
ds
xchg
push
adc
adc
xchg
add
adc
aam
adc
push
ins
pop
cs
rcl
ret
push
xor
paddq
sub
out
bound
xchg
adc
imul
inc
jecxz
cmp
pusha
xlat
mov
fadd
pop
lods
fldcw
dec
mov
test
cwde
push
add
ins
jbe
aaa
cwde
push
add
pop
mov
fdivr
je
adc
push
lods
out
ret
jge
xchg
xchg
cmp
pop
sbb
sub
push
stc
add
adc
je
sbb
add
pop
int
out
pop
sbb
pop
mov
add
pop
repz
dec
inc
sub
movs
ret
pop
gs
pop
push
int3
mov
sub
push
stos
xor
loopne
cs
pop
outs
push
aaa
jbe
add
(bad)
cmp
push
loope
and
and
push
xchg
dec
push
add
(bad)
daa
xor
mov
popaw
jne
je
inc
or
movs
loopne
mov
pop
fiadd
or
add
das
add
or
jbe
aaa
inc
out
movs
ins
add
pop
inc
xor
ins
mov
into
push
pop
jmp
adc
clc
mov
imul
adc
vmread
lar
pop
xor
sub
dec
loopne
addr16
addr16
retf
cs
cdq
sbb
xor
adc
sar
xor
sub
pusha
dec
frstor
inc
imul
outs
in
int
outs
jnp
data16
in
cmps
sbb
(bad)
or
push
ins
imul
adc
scas
add
add
cli
cmp
daa
dec
add
es
inc
retf
push
ja
and
cmps
in
sub
mov
test
jns
or
sub
arpl
jnp
jb
add
inc
fucomp
mov
push
lods
xlat
das
in
push
cmps
pop
mov
add
jmp
add
movs
iret
std
ins
jmp
mov
fadd
add
sbb
and
sbb
xor
add
sub
sub
add
js
test
ror
mov
mov
push
dec
ins
add
xchg
es
mov
pop
and
ret
push
loope
sbb
push
dec
lds
push
mov
ins
imul
xchg
cmc
das
dec
cmp
and
mov
outs
inc
out
imul
cld
call
sub
enter
mov
xchg
add
pop
add
test
imul
sub
mov
or
sbb
stos
inc
pop
add
add
test
mov
cmp
fisubr
sti
fldcw
push
inc
lods
xor
(bad)
jecxz
mov
movhps
push
sbb
jb
rcr
cmp
mov
inc
sahf
pushf
pushf
xchg
enter
and
dec
xchg
fisub
inc
dec
daa
daa
daa
daa
outs
xchg
mov
daa
daa
inc
je
leave
enter
stc
xor
and
leave
aad
call
mov
punpckhdq
mov
mov
leave
mov
mov
sub
out
bound
test
and
in
jno
mov
daa
pop
sub
xor
adc
lea
cmp
jae
int3
loope
aas
into
push
adc
and
add
dec
jg
(bad)
mov
(bad)
push
das
movs
and
adc
or
add
adc
sub
or
ja
pop
outs
(bad)
outs
bound
shr
push
or
ja
ja
ror
add
cmp
js
add
enter
mov
movs
jecxz
xchg
ss
or
xchg
jno
popa
push
mov
xchg
and
das
leave
fwait
cli
inc
sbb
gs
push
popa
arpl
push
cmp
pop
xor
mov
dec
jae
imul
cld
lahf
iret
push
xchg
jge
dec
ror
imul
mov
add
or
imul
add
fisub
mov
fiadd
add
or
push
inc
ret
jmp
ss
cmp
inc
jae
mov
jae
dec
stos
sub
push
add
xor
bound
std
xchg
or
sbb
or
ja
xchg
inc
inc
jae
mul
dec
popa
inc
les
ins
sub
mov
es
jo
push
sbb
dec
cmp
inc
je
xchg
inc
aad
push
mov
loopne
adc
dec
mov
inc
inc
fld
and
dec
or
daa
push
sub
int3
sahf
adc
sub
adc
outs
rcl
arpl
aad
(bad)
xor
mov
mov
int3
ss
jb
dec
or
cwde
dec
or
fcom
popa
pop
xchg
or
push
xor
shl
icebp
out
(bad)
mov
inc
aam
mov
xchg
mov
mov
inc
mov
sbb
sub
sub
inc
pop
nop
loop
retf
jmp
xor
shr
add
stos
les
lea
cld
imul
scas
jge
popf
add
sbb
out
pusha
loopne
dec
cli
fs
repz
or
push
data16
imul
inc
outs
sbb
jae
arpl
retf
inc
ret
and
imul
adc
push
mov
cli
bnd
push
push
je
add
mov
inc
cmp
loopne
adc
mov
pop
test
xchg
jecxz
lods
test
mov
inc
cmp
rol
mov
pusha
loopne
call
inc
sbb
movs
leave
push
popa
mov
stos
mov
add
inc
add
mov
mov
mov
shr
push
push
stos
mov
outs
test
pop
xchg
push
add
fsubr
push
xchg
aas
adc
jo
jecxz
daa
lahf
test
shl
pop
lea
or
xchg
or
lods
das
popa
inc
nop
or
cmp
mov
in
adc
pop
mov
daa
mov
call
inc
dec
mov
add
mov
mov
pusha
add
pop
shl
mov
pop
pop
sbb
inc
add
ud1
and
mov
shrd
mov
cmp
mov
pop
adc
in
jo
push
arpl
add
add
and
or
pop
or
cmp
xor
inc
adc
add
int
add
adc
and
pop
retf
mov
nop
pop
lahf
retf
inc
pop
lds
pop
(bad)
mov
and
mov
fst
loopne
sub
scas
stos
add
out
pushf
dec
mov
dec
inc
fbstp
push
movs
es
das
in
add
pop
(bad)
mov
add
mov
ja
add
pop
out
paddb
adc
pop
xchg
inc
push
movs
sub
adc
adc
les
xchg
pop
push
or
pusha
or
adc
pop
shr
push
and
pop
lods
ret
loope
and
mov
push
ret
hlt
lock
adc
push
pop
pop
push
add
push
in
cmp
sub
fbld
pop
loopne
imul
in
out
jmp
cwde
test
cmp
sub
loopne
jno
or
add
add
fild
or
sub
mov
adc
loopne
fistp
sub
loopne
into
leave
mov
ja
fmul
fistp
ficomp
push
jnp
lsl
enter
mov
leave
leave
leave
movs
leave
(bad)
xor
in
fs
push
xor
cmp
cmp
pop
and
adc
call
sbb
sar
sbb
aam
dec
jmp
add
pop
adc
es
or
xchg
push
test
ja
cmp
xor
dec
or
add
xlat
jno
mov
mov
push
fild
aaa
pop
add
aam
add
adc
and
inc
xlat
mov
adc
bound
push
ins
push
(bad)
fld
add
add
pop
inc
sbb
rcl
in
xlat
fsub
mov
xchg
adc
inc
or
sbb
das
leave
sub
fwait
mov
adc
xlat
pop
mov
add
add
fadd
lds
call
or
inc
add
in
adc
(bad)
add
add
xlat
stos
shl
add
pop
adc
add
add
add
inc
push
xlat
xchg
inc
and
xlat
lods
sub
add
mov
mov
cmp
push
add
xchg
test
mov
add
mov
imul
mov
and
push
adc
adc
xchg
xlat
jge
sub
add
sti
add
add
xlat
mov
xlat
rol
xchg
dec
xchg
xlat
or
fsubr
dec
jmp
in
push
pop
arpl
stos
mov
fcomp
xlat
push
add
xchg
xchg
mov
imul
inc
or
xchg
push
mov
and
push
push
add
add
inc
pop
enter
lahf
gs
add
add
push
iret
mov
add
inc
iret
pop
push
add
adc
iret
int3
inc
and
xor
push
cmp
inc
ror
mov
sub
xchg
dec
inc
xor
ds
mov
add
test
jae
sbb
add
push
enter
dec
inc
add
out
bound
mov
add
fdivr
and
or
inc
dec
nop
or
dec
pop
shr
push
sub
(bad)
loopne
lock
sysenter
mov
xor
fld
lds
mov
enter
dec
movq
outs
fwait
xchg
lods
add
push
leave
mov
enter
pop
arpl
sbb
jg
scas
sub
jnp
imul
dec
sar
add
ins
jbe
neg
int3
pop
add
pusha
pop
aam
add
repnz
das
push
bnd
jl
ss
cmps
add
push
aas
xchg
push
ret
push
arpl
push
mov
add
stc
mov
int3
lods
dec
sub
loopne
cdq
xchg
pop
cmp
sbb
xor
sbb
inc
sub
femms
mov
adc
push
add
popa
push
inc
les
mov
add
lods
fadd
sub
add
sub
mov
or
jae
sbb
xor
dec
jae
rcr
add
adc
rol
xor
jecxz
and
aas
jmp
js
(bad)
adc
mov
adc
push
add
pop
std
add
push
and
mov
mov
mov
aad
mov
arpl
fs
mov
arpl
in
es
cmp
push
inc
pop
xor
aam
clc
pop
pop
jbe
add
sub
or
nop
or
mov
inc
sbb
and
or
dec
shl
cmp
mov
sbb
adc
inc
and
or
or
inc
push
sub
or
jns
xor
sbb
arpl
xchg
inc
lock
pop
imul
fcom
mov
pop
jbe
add
inc
mov
(bad)
iret
push
cmp
test
push
cwde
out
movs
test
div
add
in
int3
add
(bad)
push
push
out
push
or
xchg
dec
mov
pop
mov
push
loopne
stos
imul
sbb
ret
(bad)
add
sar
shl
(bad)
inc
test
outs
push
inc
sub
or
cmp
rcr
inc
mov
clc
cmp
mov
pop
dec
addr16
sbb
xlat
adc
js
adc
scas
mov
add
and
pushf
fild
adc
out
mov
jge
pusha
lds
push
nop
push
int3
loopne
push
and
lods
call
les
iret
mov
js
mov
dec
imul
das
(bad)
lahf
jmp
sub
sbb
lahf
xchg
(bad)
push
scas
repz
jne
inc
or
or
mov
pop
mov
ror
mov
dec
jecxz
cmps
aad
pop
pop
loop
int3
jmp
shl
dec
xchg
sbb
or
or
or
jo
jg
xchg
in
push
call
fstp
push
add
push
mov
fsubr
add
sub
(bad)
jo
adc
mov
aam
push
add
jnp
into
mov
cmp
jmp
xor
jo
mov
call
shl
je
jns
add
mov
(bad)
push
mov
pop
xor
pop
or
loopne
add
(bad)
fcom
outs
lds
ins
dec
mov
inc
push
push
push
inc
fwait
or
(bad)
mov
mov
jecxz
jns
nop
stos
and
loopne
cmp
sbb
sbb
(bad)
fidiv
cwde
xchg
(bad)
or
fild
fisttp
mov
call
fstp
jmp
test
test
call
ja
sbb
pusha
or
sbb
jmp
scas
pop
jo
and
push
das
addr16
inc
jo
aam
fcom
jbe
mov
push
add
push
ja
mov
jg
push
dec
sbb
cmp
add
push
dec
cs
push
test
nop
lock
ins
sbb
nop
je
jns
and
jmp
pop
imul
std
scas
inc
in
mov
cld
ins
aaa
adc
jmp
push
out
mov
push
add
xor
add
mov
fdiv
out
mov
cmc
push
loopne
jle
or
push
fwait
xchg
adc
add
cmp
ja
and
push
xor
add
(bad)
jb
jmp
loope
or
adc
xchg
clc
xor
inc
jb
ja
push
fs
hlt
push
daa
mov
daa
push
xor
dec
outs
outs
xchg
mov
jl
arpl
iret
dec
jno
fdiv
ins
int3
xor
sbb
xor
push
mov
adc
sub
fs
push
addr16
jae
push
pushf
je
icebp
in
and
push
jns
jb
mov
bsf
and
cmp
cmp
dec
xchg
ficom
jbe
cmp
test
mov
aam
imul
push
or
mov
push
cmp
add
and
pop
stos
or
cmp
pop
div
cwde
inc
loopne
cdq
jno
dec
dec
sbb
mov
loopne
ficom
jecxz
mov
lock
or
cmp
or
xchg
sub
test
jae
pop
add
or
test
aas
pop
cmps
push
(bad)
out
inc
mov
sub
adc
sbb
push
retf
xchg
gs
add
rcr
or
add
pusha
push
cmp
add
enter
lds
sub
push
test
adc
push
jns
inc
rol
mov
and
ret
sub
icebp
or
xchg
dec
jb
xchg
out
loopne
xchg
outs
sub
mov
sub
inc
cmp
outs
or
adc
add
xor
test
imul
add
xor
popa
add
int3
ror
int
add
pusha
sbb
add
dec
pop
inc
cmp
jns
add
(bad)
(bad)
aam
out
add
adc
dec
loope
add
or
inc
mov
pop
push
and
clc
sub
jo
mov
add
jae
sbb
ret
add
or
jae
ud0
inc
or
and
js
adc
dec
js
push
xor
xchg
lock
adc
push
or
mov
loopne
push
add
nop
stos
sbb
test
sbb
jae
je
(bad)
out
sub
pextrw
adc
jbe
add
cli
aam
push
mov
daa
lock
mov
add
pop
mov
stos
or
mov
(bad)
shl
aad
scas
pop
std
push
xchg
sbb
jns
xchg
(bad)
adc
adc
cmp
push
je
daa
adc
fwait
pop
jl
jl
call
movs
std
dec
ror
mov
jge
jmp
xchg
pop
ds
aad
mov
dec
daa
mul
loopne
ret
stos
mov
sub
mov
xor
xlat
sbb
dec
inc
or
xchg
sub
inc
nop
mov
cmps
pop
add
jmp
dec
inc
add
fst
mov
pop
pop
aad
inc
add
inc
add
xlat
pusha
hlt
ret
and
aas
dec
jle
ss
icebp
mov
rcl
ja
push
inc
add
cmp
sbb
iret
and
and
cmp
sub
and
pop
fstp
loop
pop
das
jae
xor
aas
cli
mov
jge
add
out
add
mov
pop
pop
mov
(bad)
test
xlat
movs
mov
in
cmp
push
adc
xor
shl
inc
shl
xchg
arpl
mov
mov
lock
or
or
idiv
or
push
das
outs
push
fisubr
add
xor
push
fsubr
idiv
imul
mov
ret
add
sbb
push
jns
xor
push
shl
inc
add
mov
add
ret
sbb
shl
adc
jmp
add
and
adc
in
imul
mov
adc
aas
and
add
mov
and
dec
pushf
cmp
test
movs
das
mov
xchg
pop
les
xlat
pop
fiadd
xchg
and
jae
ins
push
push
loop
add
inc
das
push
sbb
ffree
stos
or
sub
mov
adc
nop
retf
gs
loope
sub
xor
les
xchg
cmps
push
push
xchg
aad
xor
add
cmp
cmp
mov
(bad)
nop
jmp
sub
add
scas
sbb
xor
shl
adc
call
xor
lods
fiadd
out
pusha
dec
mov
inc
sub
outs
add
pop
adc
daa
mov
xchg
fld
and
das
(bad)
push
cmps
inc
inc
and
push
sbb
mov
push
add
cmps
adc
or
mov
pop
inc
add
fcmovnb
xor
or
push
(bad)
xor
dec
mov
push
je
shl
mov
scas
pop
imul
mov
sbb
std
hlt
sbb
test
scas
add
into
mov
mov
es
push
fcom
scas
nop
idiv
inc
jbe
popf
outs
jl
rol
add
loop
pusha
scas
adc
out
push
push
jne
out
jp
jno
xor
or
push
jmp
stos
(bad)
shl
inc
cmp
ja
push
or
xlat
nop
stos
ret
popa
mul
mov
mov
adc
mov
rol
fld
lods
mov
mov
in
sti
push
adc
cmc
mov
xlat
push
scas
addr16
xlat
arpl
inc
or
push
addr16
inc
ret
dec
xchg
and
fsub
aam
fs
test
fs
or
fsub
add
inc
or
mov
sub
arpl
call
test
add
push
mov
lea
xor
pop
sbb
not
ins
cmp
add
cmp
push
ins
sbb
inc
push
pop
push
pop
mov
adc
jb
pop
inc
or
aam
dec
push
add
pop
test
xor
dec
pop
inc
or
in
call
cmps
pandn
(bad)
gs
fld
cwde
(bad)
scas
sbb
xchg
xchg
mov
into
leave
leave
ins
movs
loope
ror
pop
inc
ins
push
je
mov
or
cmps
add
stos
xor
lds
sbb
mov
sbb
lods
jno
jecxz
inc
or
push
and
repnz
jae
loope
mov
or
adc
mov
sbb
sbb
repz
pusha
jo
lock
adc
sbb
push
push
cmps
or
sbb
adc
pop
sbb
test
push
mov
dec
ins
push
sbb
sbb
sbb
test
imul
fadd
sub
sbb
and
lds
add
test
add
add
sbb
inc
dec
ret
loopne
sbb
cdq
xor
mov
add
sbb
sub
sbb
mov
sbb
sub
push
xchg
push
and
push
mov
cmp
add
adc
cmc
adc
pop
fld
add
push
cld
cmp
xor
fs
pop
pop
pop
lods
xlat
mov
js
lods
ret
adc
into
and
cmc
fwait
sbb
add
in
das
jmp
pop
or
cmp
push
test
xchg
pop
xchg
pop
pop
push
xchg
test
test
mov
jo
in
movs
std
jne
arpl
pop
movs
mov
or
xchg
pop
dec
add
inc
cmp
jnp
pop
mov
sub
pop
mov
scas
pop
push
inc
inc
add
jo
xor
sub
push
stos
cs
pop
outs
push
das
leave
push
clc
mov
(bad)
(bad)
dec
mov
adc
iret
adc
fnstcw
sbb
push
popaw
jne
je
rcl
or
or
fdivr
inc
xchg
cmps
popf
nop
(bad)
adc
shl
and
ror
gs
inc
sub
aaa
push
xchg
or
int
in
push
in
push
clc
mov
push
cdq
seta
jmp
adc
retf
push
jb
into
push
(bad)
xor
cmp
popa
outs
popa
cmp
es
inc
xchg
add
adc
js
or
mov
int3
mov
mov
push
mov
dec
jp
cmp
inc
adc
fnop
sbb
jnp
sbb
int
jmp
and
mov
inc
imul
mov
retf
scas
add
stos
cmps
pop
int
mov
fmul
std
mov
es
aaa
inc
mov
mov
sub
sahf
sub
sbb
add
inc
ret
lods
jbe
inc
shl
into
add
(bad)
mov
pop
push
add
dec
cs
adc
add
or
add
xchg
push
mov
inc
cmps
je
mov
fcomp
ds
ret
in
sub
cmp
or
cmp
or
sub
or
scas
inc
jge
push
pop
arpl
aaa
pop
pop
jo
xchg
out
loopne
xchg
prefetch
pop
add
sbb
(bad)
push
xor
push
and
adc
mov
outs
cmp
div
add
push
jo
out
pop
sub
mov
push
ficom
out
xor
sbb
adc
sub
(bad)
mov
dec
push
push
add
inc
popf
nop
fmul
add
add
shr
inc
fimul
or
neg
lock
dec
xchg
lods
push
inc
cs
push
pushf
pushf
int3
test
into
dec
dec
inc
sahf
adc
daa
and
mov
xchg
xchg
daa
pop
movs
push
mov
leave
enter
movs
gs
leave
leave
leave
scas
sar
xor
data16
adc
jns
jb
cmp
adc
ja
les
shl
popf
push
mov
ror
push
fwait
cwde
push
mov
scas
leave
leave
mov
xchg
sub
or
mov
jno
cmp
adc
daa
pop
daa
inc
mov
mov
inc
xchg
push
dec
pminsw
inc
test
dec
jae
int3
push
adc
cmp
and
jg
cwde
add
or
(bad)
and
and
fimul
bound
hlt
sub
inc
mov
shl
or
mov
outs
cdq
ja
aad
push
adc
test
inc
and
dec
mov
in
cmc
enter
adc
out
or
inc
mov
xchg
bound
pusha
or
dec
xchg
mov
das
leave
sbb
lea
gs
and
inc
mov
pop
xor
push
or
lods
xor
(bad)
pop
dec
jae
imul
or
mov
mov
fbstp
sbb
mov
cld
mov
cmp
push
sbb
lea
dec
xor
push
mov
les
jmp
seta
or
push
or
xchg
jns
jae
je
rcl
test
push
xchg
xchg
xor
pop
xor
ret
sbb
dec
and
dec
gs
and
xor
jae
(bad)
mov
and
xchg
mov
dec
add
inc
inc
cli
jo
sar
mov
aaa
inc
cmps
lods
sbb
call
mov
mov
inc
inc
fld
sub
jo
dec
or
adc
dec
jns
call
adc
or
rcl
jge
aad
rol
and
inc
and
xchg
mov
ss
jns
or
or
push
in
inc
and
xor
shl
push
dec
ret
mov
or
pusha
mov
dec
test
sub
ins
(bad)
lds
mov
jmp
push
pop
xchg
xchg
inc
push
cmp
sbb
or
xchg
and
cmp
(bad)
mov
cmps
add
enter
xchg
mov
test
sub
sub
xor
pop
push
jmp
push
bound
inc
loope
dec
leave
adc
push
sub
add
fwait
sbb
inc
ret
sbb
(bad)
fisubr
cmps
add
sti
push
adc
push
push
jmp
fiadd
xor
or
(bad)
pop
xchg
pusha
hlt
stc
and
imul
mov
mov
jge
jle
and
outs
jb
jnp
push
scas
mov
xchg
outs
jo
js
ins
xchg
push
inc
int
and
inc
xor
data16
mov
mov
add
dec
xor
push
shr
add
pop
jecxz
inc
add
mov
sub
bound
cdq
out
push
add
jmp
and
dec
sbb
dec
(bad)
xor
or
jno
push
and
dec
or
ins
push
mov
xlat
mov
add
cmp
stc
lods
shl
pop
add
aad
rol
ins
push
and
push
xor
adc
push
jb
cmc
ror
pop
arpl
fild
sub
stos
adc
add
cmp
pop
fsubr
out
call
(bad)
cmps
mov
fs
test
adc
rol
arpl
mov
cmp
push
fstp
pop
aam
popf
loope
and
scas
cmp
jo
(bad)
inc
das
bound
push
bound
iret
add
loopne
mov
adc
push
out
push
inc
add
xlat
mov
and
jne
and
cmc
sub
jb
cmps
sub
int
pop
xor
push
out
cmp
ror
dec
inc
jo
and
sub
pop
xchg
scas
(bad)
dec
call
or
cwde
ficom
cmp
or
inc
icebp
and
adc
into
cmp
mov
dec
or
cmp
adc
outs
lahf
xchg
add
inc
xor
mov
inc
add
push
outs
mov
pop
enter
call
and
js
cmps
into
lahf
sbb
sar
xor
lods
(bad)
pop
or
fdiv
adc
inc
(bad)
int
rol
push
xor
retf
xchg
sub
iret
pop
cmc
add
jae
xchg
shl
fimul
cmp
stos
dec
pusha
vmovhps
add
xor
(bad)
aas
aaa
les
aas
add
pop
out
neg
lock
or
aaa
das
dec
push
sbb
popf
loop
pop
ins
js
add
je
xor
mov
add
das
fadd
push
int
das
xor
push
adc
inc
adc
pusha
mov
cmp
or
or
inc
ins
inc
adc
pop
inc
sub
and
test
mov
lds
in
xchg
(bad)
in
add
push
pusha
ja
cmp
mov
mov
(bad)
in
mov
mov
call
clc
sbb
mov
pop
cwde
jo
(bad)
xchg
rcl
or
cmp
adc
(bad)
xor
imul
adc
jb
jecxz
or
add
mov
mov
pop
jle
or
pcmpgtb
leave
leave
mov
sub
mov
sbb
jb
loop
mov
cmp
inc
sahf
pushf
pushf
shl
shr
dec
dec
dec
push
mov
xadd
daa
daa
and
xchg
retf
loop
mov
adc
aas
setp
cmp
sub
add
sub
ret
push
es
cmp
push
xchg
push
xlat
test
add
ds
or
dec
sub
daa
mov
sub
or
adc
popf
adc
add
sar
loopne
mov
jnp
pusha
test
xchg
jmp
or
inc
stos
sbb
mov
imul
cmp
mov
add
mov
mov
cmp
leave
fwait
cmp
dec
pusha
adc
adc
or
aam
jp
add
cmp
daa
mov
add
xor
add
or
ror
cmps
cmp
loopne
add
dec
xor
xor
mov
add
mov
loopne
inc
xchg
xchg
mov
add
or
mov
push
lock
adc
mov
fld
add
mov
nop
fmul
dec
push
jno
mov
dec
sub
shl
mov
adc
mov
imul
mov
mov
nop
sub
mov
or
popa
jo
jge
adc
mov
mov
xor
nop
adc
add
mov
push
dec
int3
mov
add
jle
mov
xor
mov
add
xchg
xchg
add
or
adc
scas
pop
pop
outs
add
dec
inc
(bad)
mov
add
cmc
imul
or
daa
pusha
cmp
pop
sbb
daa
jo
fbld
loope
nop
sbb
dec
fild
(bad)
cmp
xlat
(bad)
adc
sahf
retf
push
add
and
xchg
int
dec
test
add
push
mov
cmp
xlat
ins
ds
xchg
inc
xchg
sbb
mov
repz
daa
popf
sub
mov
pushf
pop
ret
mov
inc
or
mov
ins
or
pop
pop
xchg
cwde
dec
(bad)
movntps
test
sub
(bad)
movs
bound
push
neg
jae
dec
hlt
call
nop
dec
inc
fisttp
jl
adc
xor
pcmpgtd
das
pop
out
push
push
das
enter
nop
push
add
pop
add
jl
retf
ins
stos
wbinvd
scas
and
cmp
adc
pop
sbb
or
add
repz
mov
jbe
jmp
push
pusha
jg
test
nop
sar
ds
push
mov
mov
dec
lock
dec
pop
and
repnz
mov
xor
cmp
retf
cmp
sub
test
loopne
xchg
mov
lds
or
pushf
dec
gs
push
dec
cdq
lds
(bad)
xchg
ret
or
inc
mov
or
inc
adc
enter
inc
or
or
and
ret
push
xlat
enter
daa
cli
(bad)
sub
adc
rcr
adc
push
gs
sub
xlat
add
push
loopne
mov
xor
data16
jnp
add
pop
mov
inc
xchg
pop
xchg
xchg
out
pop
arpl
push
cmp
inc
arpl
xchg
xchg
push
xor
pop
outs
push
dec
inc
add
or
call
mov
rol
ror
out
ficom
sbb
jmp
jl
ja
pusha
int3
push
xchg
add
pop
lock
pop
loopne
les
data16
test
adc
cmp
fld
inc
cmp
in
cmp
cmp
in
push
out
(bad)
out
push
cmp
push
sub
ins
aaa
outs
push
mov
mov
dec
ins
or
push
ins
or
(bad)
pop
sub
or
push
mov
mov
iret
jnp
sbb
push
lods
push
shl
dec
mov
neg
or
push
inc
lods
push
loopne
fidivr
cwde
inc
les
int3
or
push
test
mov
fsub
jnp
inc
js
dec
ja
and
out
jnp
inc
pop
sub
push
shl
lahf
dec
adc
jo
out
mov
jbe
xchg
mov
sub
outs
in
pusha
sti
fidiv
push
xor
xor
fdiv
idiv
xor
push
aam
and
xor
fidivr
mov
xor
fmul
into
push
lods
xchg
jnp
mov
movs
push
sub
clc
push
inc
push
dec
push
out
mov
jle
enter
sbb
test
shl
idiv
loopne
fs
nop
test
neg
dec
jo
jo
push
pop
push
loopne
out
mov
adc
inc
push
sub
push
pop
fldenv
add
and
loopne
jl
inc
sub
outs
mov
lods
mov
cmc
sub
movs
aad
cld
cld
in
fdiv
push
dec
ret
mov
sbb
pop
xor
sbb
pop
add
sbb
outs
jae
lahf
sbb
daa
lea
cli
(bad)
mov
jae
jno
int
out
ins
push
dec
cmp
stos
fstp
mov
test
add
ret
scas
or
lds
adc
cdq
mov
lds
xchg
sbb
in
popf
test
push
into
aas
sub
push
rol
es
scas
cmp
dec
push
sub
das
aas
je
enter
or
push
rcr
jno
jbe
mov
sahf
rsqrtps
fidivr
scas
push
pushf
push
mov
es
cmps
test
aaa
mov
int3
push
jo
aas
pusha
or
mov
movhps
in
jle
dec
cmp
ja
push
out
je
movs
cmp
dec
out
mov
push
dec
pop
push
je
inc
push
sbb
sti
fidivr
and
dec
adc
jo
mov
xor
fadd
aas
jl
add
(bad)
aas
test
fldenv
sahf
add
adc
aas
adc
imul
push
and
and
pop
and
and
stos
inc
or
jno
sbb
and
and
and
and
sub
aad
sbb
(bad)
fiadd
sub
and
and
outs
sub
adc
inc
nop
retf
sar
fcmovbe
test
pop
lea
outs
add
shr
adc
mov
ret
nop
push
push
fcomip
jg
push
test
je
add
and
mov
mov
mov
inc
mov
sbb
aam
sti
mov
mov
mov
or
fmul
or
add
mov
(bad)
outs
adc
js
mov
mov
mov
dec
cmp
sub
lods
cmp
jp
(bad)
int3
fs
mov
add
pop
ret
(bad)
in
retf
rcr
lock
rol
ins
xor
inc
adc
jo
push
jo
dec
jae
mov
(bad)
out
pusha
out
mov
xor
test
call
mov
mov
mov
test
je
rol
(bad)
mov
call
ds
jg
dec
test
jl
push
(bad)
xor
mov
mov
mov
call
dec
inc
fstp
and
pop
xor
jmp
fwait
out
les
mov
js
pushf
ins
call
or
inc
sbb
push
sbb
mov
mov
in
test
repnz
mov
inc
mov
mov
pop
jnp
into
jae
dec
adc
cmp
add
(bad)
push
mov
push
rcl
shl
fs
clc
loope
lock
jno
ins
je
and
jnp
jecxz
std
das
test
call
or
mov
int
fwait
repnz
or
jl
pop
pop
adc
push
mov
ret
jmp
clc
sbb
or
push
jge
add
fisttp
pop
lock
mov
mov
mov
loope
test
movs
adc
pop
sub
push
test
sub
lock
jle
adc
retf
or
mov
adc
cmp
sub
ret
test
push
sbb
pushf
data16
inc
push
lahf
cmp
clc
shl
inc
lock
shl
pop
mov
pop
ret
push
lock
movs
xor
sub
cmps
inc
ss
sbb
mov
xchg
adc
ffree
add
mov
dec
test
bndstx
mov
cmp
jne
adc
imul
pop
mov
outs
adc
adc
mov
push
push
or
cli
fdivr
inc
pusha
mov
sbb
out
mov
ja
mov
dec
jae
popf
jns
push
or
pop
mov
mov
mov
xor
xor
lahf
xchg
push
rol
cmp
jle
pop
cmc
mov
inc
xchg
pop
xchg
mov
mov
mov
call
popa
cmp
add
mov
test
push
mov
imul
push
cmp
pusha
pop
mov
mov
xchg
pop
xor
and
push
mov
push
add
inc
or
inc
add
loop
add
jbe
gs
push
mov
mov
inc
or
ja
cmp
jne
arpl
push
neg
sub
inc
dec
push
bound
adc
daa
ss
push
jns
shr
bound
cdq
mov
mov
inc
push
add
pusha
mov
ins
bound
push
pop
push
or
call
add
dec
and
rcr
adc
dec
cmp
push
push
movq
dec
push
push
xchg
daa
add
cmps
mov
pop
add
adc
cmc
cmps
cmp
xor
and
dec
dec
jnp
add
inc
(bad)
fiadd
dec
jle
inc
popa
jns
call
inc
sar
out
lea
(bad)
out
mov
or
gs
xchg
sbb
lods
sub
call
or
jbe
pop
sub
test
jne
cli
test
push
sub
leave
mov
push
jp
mov
ins
cs
dec
clc
call
les
inc
pop
ds
mov
aam
or
clc
sti
adc
sbb
bound
pop
jge
inc
lock
hlt
loopne
mov
out
xor
out
xchg
mov
sbb
ret
and
pop
push
dec
mul
mov
add
add
pop
clc
pop
xor
cmp
ja
mov
into
or
and
mov
add
add
or
loop
(bad)
dec
adc
adc
push
pop
sbb
sbb
sbb
push
add
add
and
in
jne
pop
and
push
pop
cmp
repz
adc
out
or
out
sahf
cmps
sbb
cmp
pop
sahf
out
sahf
outs
adc
out
aad
test
out
sahf
sub
dec
pop
imul
out
xchg
lods
clc
into
test
loope
push
mov
das
in
sar
mov
rol
test
repnz
pop
and
jo
add
mov
sbb
or
or
mov
xchg
inc
rcl
xor
mov
mov
or
or
inc
sbb
push
bswap
and
xchg
les
mov
shl
enter
inc
jmp
sbb
ins
inc
lock
cmp
sbb
adc
xor
inc
sbb
push
cmp
jmp
fs
jecxz
test
cmp
stos
push
cwde
cwde
test
xchg
rol
sbb
pusha
stos
sar
lock
in
(bad)
cmp
cs
lock
cmc
adc
enter
test
inc
sbb
cmp
sbb
inc
ret
test
test
outs
adc
xchg
pusha
test
cdq
retf
int3
sub
xchg
and
xchg
or
pop
mov
fsub
or
xchg
mov
adc
sbb
push
ret
xor
cmp
loopne
dec
movs
dec
mov
xor
and
sbb
adc
pop
sub
push
sbb
inc
sub
push
popa
cmp
add
pusha
inc
clc
repnz
add
push
mov
pop
mov
leave
pop
dec
mov
fadd
popf
push
scas
and
xor
jg
jo
push
sbb
cmp
jle
xor
mov
push
fs
setne
neg
mov
(bad)
das
test
xor
push
mov
mov
push
xor
les
cmps
pop
into
push
and
mov
mov
or
movs
fstp
outs
sub
sbb
mov
dec
adc
fiadd
sbb
or
and
dec
daa
push
daa
adc
mov
or
dec
int
xor
mov
je
mov
mov
addr16
mov
movs
jb
adc
push
cmp
mov
sub
xor
push
xor
pop
repnz
ror
or
pop
cmp
scas
sbb
push
push
sbb
push
or
add
inc
or
mov
test
pop
pop
ret
addr16
xchg
stos
inc
and
inc
loopne
sub
cld
and
mov
mov
or
pop
inc
cmp
mov
fcom
add
add
dec
xor
add
(bad)
push
pusha
call
adc
adc
xor
not
sub
adc
lock
add
loope
repz
clc
cmp
clc
or
call
cmp
pop
outs
xchg
mov
repz
out
loope
cmp
jmp
fadd
nop
sub
dec
repz
repz
outs
jg
test
fwait
sub
cmp
pop
pop
jo
addr16
rol
mov
xor
aam
pop
and
xchg
and
xchg
and
xchg
test
fcomp
sbb
or
and
pop
leave
nop
or
ins
test
fdiv
dec
cs
adc
xor
fs
fs
fs
xchg
cmp
sbb
imul
repnz
dec
sub
vmwrite
je
push
mov
dec
push
push
(bad)
pop
hlt
dec
xchg
dec
mov
sbb
pop
das
jb
sub
dec
pop
ret
mov
pop
adc
push
dec
sbb
lahf
aaa
pop
jnp
test
add
dec
xor
inc
adc
dec
push
cdq
inc
add
cmps
das
inc
retf
xchg
call
sub
(bad)
mov
int3
es
sub
pop
and
das
xor
xor
xor
push
cmp
cwde
inc
loopne
aaa
xchg
(bad)
imul
sbb
mov
inc
ds
pop
sub
out
mov
mov
push
es
dec
xchg
ss
xchg
xchg
inc
aas
mov
and
neg
dec
mov
and
sbb
or
dec
jb
ds
rcl
dec
fidiv
xchg
sbb
xor
int
daa
jbe
add
push
pop
or
cwde
sub
inc
call
popa
mov
cwde
cdq
jns
inc
jecxz
adc
xchg
cmp
ds
cwde
dec
lods
mov
gs
loopne
out
jne
add
arpl
mov
xchg
addr16
outs
or
jbe
rol
ud0
mov
xor
push
jg
fist
pop
jmp
aas
cwde
rcr
sbb
sub
cmps
scas
add
push
push
jo
pop
test
cs
les
xchg
xchg
mov
cld
add
in
ret
cmp
les
mov
sar
les
push
inc
in
mov
in
scas
dec
ins
jae
jb
hlt
es
xchg
push
loopne
mov
(bad)
mov
mov
test
xlat
test
jbe
enter
push
in
add
sbb
xor
je
jecxz
and
rcl
jg
mov
dec
jmp
mov
or
enter
jmp
add
or
sbb
add
xchg
stos
xchg
leave
and
sbb
out
fdivr
sti
inc
dec
fadd
loopne
dec
inc
icebp
lods
int
packssdw
(bad)
mov
inc
mov
jecxz
mov
mov
aaa
jmp
std
xlat
or
jecxz
push
pop
inc
pusha
sub
sbb
loop
adc
and
jg
jge
mov
mov
jmp
test
adc
adc
jno
sub
xchg
shr
push
add
hlt
mov
dec
jne
mov
loopne
aaa
ds
ret
add
call
mov
outs
clc
lahf
clc
mov
sbb
adc
call
mov
dec
dec
retf
xor
dec
or
inc
adc
or
add
sar
cmp
add
xor
inc
sub
sar
cmp
adc
inc
out
popa
test
xchg
cmc
jle
pusha
pusha
rol
pop
push
into
dec
xor
xor
lock
mov
dec
bound
add
stos
push
pop
icebp
std
jecxz
adc
xor
popa
inc
cmp
call
mov
or
xchg
pop
ja
adc
and
sbb
aaa
loop
push
jecxz
xchg
inc
sbb
shl
dec
cmps
pusha
ret
inc
inc
dec
jmp
or
adc
nop
aad
or
test
or
inc
outs
ret
jne
scas
je
xor
fucomip
adc
jmp
dec
(bad)
mov
je
mov
jmp
xor
in
adc
mov
adc
sbb
clc
push
(bad)
fsubr
cmp
cld
test
imul
dec
sub
test
xchg
call
xor
pop
cmp
cmp
inc
imul
aaa
xchg
cvttps2pi
aad
adc
imul
rcr
xchg
mov
add
push
jnp
fstp
out
inc
push
nop
or
clc
adc
push
daa
leave
inc
lea
cmp
cmp
push
pusha
and
sub
clc
mov
dec
add
jbe
adc
or
jmp
(bad)
sbb
fnsave
cld
imul
aam
in
(bad)
sub
(bad)
fisttp
push
scas
ja
adc
add
or
or
rol
or
sub
inc
mov
push
cli
into
mov
or
out
ss
push
adc
mov
cs
cmp
adc
jb
sti
or
(bad)
fsubr
push
scas
mov
(bad)
imul
shl
mov
fmul
ds
sbb
mov
add
jne
or
popf
popa
adc
mov
fidivr
push
sbb
aam
add
push
sbb
int3
mov
adc
mul
adc
mov
(bad)
push
cmp
(bad)
fmul
out
clc
xchg
cmp
jne
fsubrp
push
push
cmp
mov
outs
pusha
and
cmp
dec
sbb
nop
dec
mov
push
xchg
cdq
pop
retf
aam
or
or
ret
fimul
dec
adc
adc
dec
fimul
jp
pop
je
mov
push
xor
mov
(bad)
shl
push
add
add
sbb
movs
sub
lods
mov
jg
mov
push
fmul
lods
jo
push
cmp
adc
addr16
inc
and
cmp
push
jl
or
test
add
add
cs
gs
add
xor
push
cmps
sbb
je
or
adc
(bad)
dec
in
push
xchg
or
mov
xchg
pop
lock
cmp
jno
cli
adc
jne
loopne
jl
in
hlt
out
or
push
or
jo
out
retf
xor
test
or
mov
lods
mov
cmps
cmp
pop
icebp
mov
add
cmps
je
jno
pop
push
call
jmp
mov
jae
outs
call
add
clc
add
mov
push
out
cmp
and
cdq
xor
fs
push
popf
xor
ins
xor
mov
out
mov
add
dec
nop
addr16
jp
lods
adc
pop
fld
loop
push
add
call
xor
jl
test
cmovo
xor
mov
push
sbb
ja
std
or
repz
push
test
xor
(bad)
push
clc
retf
shr
mov
ins
adc
dec
das
and
xchg
dec
repz
mov
mov
adc
aaa
pushf
push
bound
js
push
add
mov
pop
aas
jmp
inc
jno
loop
adc
loopne
dec
push
mov
dec
lahf
xor
int3
imul
jmp
out
pop
je
push
mov
push
or
test
inc
xor
and
pop
adc
pop
pop
pop
cmp
dec
jne
popa
ror
(bad)
int
outs
and
lods
hlt
in
or
mov
pop
movs
scas
ss
mov
jb
shl
add
popa
adc
cmc
je
sbb
xor
mov
dec
into
and
std
and
mov
mov
sbb
daa
xchg
in
mov
das
fbld
add
mov
jle
xchg
mov
data16
or
mov
push
add
in
mov
xlat
js
sysenter
push
test
adc
adc
ins
push
or
jp
inc
push
jge
add
mov
xchg
inc
add
cmp
stos
fidivr
or
pop
test
stos
jle
mov
pop
shl
in
pop
icebp
js
adc
cwde
add
add
scas
daa
in
lock
cmp
mov
cmps
add
or
cmp
mov
imul
mov
addr16
loope
add
push
shl
push
dec
mov
adc
popa
fmul
push
(bad)
out
sub
add
ins
cmp
adc
ret
add
inc
aaa
add
sub
cmp
ins
jae
xor
sub
or
(bad)
retf
inc
jp
mov
adc
jmp
movs
sbb
enter
jo
jecxz
scas
or
(bad)
loopne
dec
(bad)
push
add
push
and
ret
mov
dec
or
int3
adc
dec
jb
sub
es
mov
mov
test
popf
xchg
and
bswap
inc
add
mov
add
xchg
fdiv
add
lock
movs
mov
jl
or
xor
stc
jmp
cld
in
sub
sub
lea
mov
xor
sub
mov
(bad)
xor
push
and
fidivr
mov
jmp
(bad)
push
adc
or
imul
inc
adc
inc
cwde
loope
inc
or
or
(bad)
ret
cmp
dec
xchg
add
mov
sub
xchg
push
ret
fs
add
or
movs
mov
cs
push
or
xchg
addr16
aaa
ret
sbb
mov
daa
push
fild
sbb
sbb
jnp
imul
js
adc
cmp
push
call
test
ss
fbld
mov
and
xor
xor
aad
pop
aaa
dec
and
scas
pop
push
cmp
push
test
inc
or
sbb
sbb
es
loopne
cwde
xchg
inc
fldpi
in
jmp
aaa
ja
(bad)
mov
adc
push
inc
or
std
test
mov
sbb
outs
dec
ins
dec
cmp
or
adc
test
popf
push
mov
xor
or
icebp
mov
sub
mov
cld
jae
jecxz
or
mov
nop
movs
and
push
arpl
sbb
push
xlat
adc
daa
test
out
daa
sub
xchg
sbb
adc
dec
or
std
in
fsub
pop
jbe
jmp
jle
jae
jae
xchg
xor
sub
jne
and
jge
scas
sub
add
out
or
xchg
add
cmp
lods
adc
inc
hlt
in
int3
std
out
or
sbb
mov
inc
pop
cmp
sub
les
in
cmps
(bad)
inc
and
adc
test
out
add
pusha
xor
andps
test
or
mov
sbb
mov
dec
inc
out
dec
dec
ret
inc
push
push
ins
add
sub
add
xor
jg
push
das
mov
dec
test
jl
inc
sar
pop
mov
xchg
add
adc
inc
dec
jne
xlat
add
dec
inc
enter
mov
add
adc
dec
cmp
shl
fadd
adc
add
das
mov
daa
xchg
in
(bad)
mov
dec
mov
test
fadd
(bad)
mov
jg
pop
lods
fiadd
jne
and
cmps
mov
jmp
mov
xor
mov
cli
outs
pop
mov
pop
cld
or
lods
ja
mov
adc
or
ins
sub
mov
and
jecxz
add
push
pusha
lahf
mov
adc
into
sahf
into
mov
jne
pusha
ja
movs
inc
aas
dec
add
xchg
lea
add
ror
push
out
pop
clc
mov
imul
sbb
dec
lds
adc
rcr
adc
or
add
or
inc
mov
add
xchg
push
push
add
inc
nop
cmps
(bad)
imul
or
pop
inc
push
neg
mov
hlt
sub
cs
in
mov
js
mov
cmps
ret
xchg
or
fld
rcr
and
clc
hlt
pop
leave
rol
or
push
push
xlat
add
jge
clc
pop
ret
int3
inc
add
sar
fcmovnb
push
or
xchg
add
pop
je
pop
es
test
push
mov
and
ja
in
add
or
sub
push
and
mov
mov
push
push
(bad)
jmp
cmps
addr16
das
cpuid
test
mov
lods
cmp
ds
push
push
mov
jmp
push
pop
mov
pop
(bad)
shl
pop
sbb
sub
retf
push
sub
int
out
cmp
scas
in
pop
mov
sub
sub
sar
inc
push
repnz
pop
cmp
push
movs
or
or
dec
outs
inc
pop
leave
stos
sub
jmp
call
lock
out
dec
jne
push
nop
rcr
nop
ffreep
sub
aam
jae
test
and
js
and
call
fs
xor
mov
jo
xor
or
add
fdiv
and
mov
or
sbb
pop
jmp
pop
xlat
aas
lock
retf
add
test
pop
sbb
rcl
or
pop
pop
sbb
cmp
cmp
xchg
xlat
rol
mov
fadd
out
movs
sbb
push
iret
imul
jno
cmp
ror
mov
xchg
push
cs
pusha
xor
or
adc
aas
dec
xor
je
sbb
scas
jnp
rol
(bad)
outs
fiadd
add
das
sbb
or
add
pop
mov
pop
pop
(bad)
lods
adc
das
or
mov
cmp
lahf
push
enter
adc
adc
or
lock
mov
mov
sbb
test
jl
or
or
dec
cmp
pop
or
cmp
into
popa
test
aas
push
ins
jmp
mov
sbb
outs
or
shl
and
daa
and
ins
getsec
dec
fidivr
ins
and
je
outs
sbb
mov
mov
and
or
outs
test
(bad)
fcom
and
sub
cwde
fimul
xor
dec
push
cmp
(bad)
pop
js
sbb
xor
movs
enter
ins
js
mov
add
sub
ficom
pushf
pop
mov
inc
mov
ror
pop
jmp
test
jl
fs
in
push
and
fbld
sbb
inc
sub
push
mov
jo
adc
das
lock
push
mov
mov
sub
add
mov
cmp
mov
dec
loop
ret
push
mov
rep
movs
mov
jo
push
mov
xchg
pop
ins
popa
pop
mov
(bad)
cmps
xor
jo
xor
clc
jnp
fiadd
add
add
inc
mov
sbb
(bad)
push
xchg
arpl
cmps
ins
add
ins
aaa
daa
aaa
add
aaa
push
cmp
jb
pushf
inc
fisttp
lea
xor
dec
xchg
adc
mov
in
mov
ret
ss
popa
addr16
mov
test
test
push
mov
aas
out
popa
outs
rcr
lea
jge
cmps
mov
(bad)
(bad)
lock
cmp
sbb
sub
push
sub
push
lock
std
cs
jns
or
lods
cs
xchg
or
mov
cwde
sbb
sbb
fwait
inc
not
jbe
mov
sbb
rol
ror
or
fist
sub
pop
or
daa
mov
sub
inc
mov
jae
ja
or
add
xchg
cs
add
call
hlt
inc
sub
aam
cmp
xlat
jbe
lock
xor
nop
push
rol
add
pushf
inc
add
add
push
inc
lds
js
iret
push
jo
mov
das
movs
cmps
mov
test
fst
iret
mov
add
push
mul
push
out
push
out
pop
imul
out
xlat
(bad)
mov
(bad)
dec
mov
mov
jl
cmps
inc
and
cmp
or
loope
xchg
xchg
test
push
and
adc
push
cwde
ret
outs
dec
data16
or
popa
inc
das
scas
and
xchg
pop
or
out
enter
rol
(bad)
lock
imul
xchg
lar
cwde
or
mov
mov
push
enter
adc
mov
jmp
pushf
mov
je
outs
jno
adc
push
test
(bad)
(bad)
loope
pop
(bad)
aam
inc
push
in
cmc
inc
pop
or
or
fwait
lock
add
repnz
call
or
pop
pop
popa
mov
add
test
jl
cmp
jl
mov
mov
stos
add
dec
push
scas
push
into
sub
push
xor
dec
popf
fcmovu
out
xor
jge
add
aas
cmp
psraw
mov
sahf
ror
pop
mov
and
out
shl
inc
push
mov
in
rcl
mov
xlat
xchg
add
rol
mov
aaa
cmp
rol
xor
push
jbe
es
mov
loope
(bad)
dec
xor
into
and
rol
dec
nop
inc
xor
sbb
add
inc
mov
sub
jl
inc
inc
addr16
add
add
fmul
adc
xor
loop
mov
test
dec
test
jmp
and
push
shl
pop
fadd
add
adc
cmps
movs
mov
add
inc
dec
jne
mov
in
inc
add
mov
das
sbb
push
mov
adc
sub
jl
inc
add
adc
mov
jge
mov
test
ins
inc
call
push
inc
or
add
or
push
call
add
add
adc
adc
(bad)
jnp
lea
scas
inc
lock
inc
mov
mov
pop
inc
lock
repz
jg
sbb
add
push
clc
dec
or
pusha
inc
pop
aaa
hlt
js
adc
div
pop
or
pop
cmp
pop
cmp
pushf
xchg
sub
push
repz
mov
adc
sbb
fst
fisttp
retf
dec
adc
out
jge
jl
inc
cmps
inc
xor
scas
ds
add
mov
add
enter
dec
cmp
jb
aaa
jl
outs
nop
or
mov
dec
test
dec
and
in
mov
inc
dec
mov
dec
xchg
mov
iret
out
adc
repnz
mov
leave
push
cmp
jbe
xor
jg
pop
pop
inc
cmp
jle
sub
js
jo
inc
inc
and
dec
push
pop
mov
ds
mov
adc
fst
mov
cwde
stos
je
pop
jmp
out
(bad)
into
lock
idiv
xchg
(bad)
mov
sahf
dec
mov
out
fbstp
inc
aas
iret
push
ret
test
or
lds
rcl
pop
inc
sbb
pop
and
cmps
sbb
arpl
pop
dec
mov
imul
inc
or
jmp
pop
test
mov
dec
loop
outs
cmp
xor
pop
loope
adc
jg
adc
(bad)
aaa
inc
or
push
inc
mov
les
pop
test
out
mov
or
das
inc
mov
xor
mov
inc
inc
or
push
and
push
stos
(bad)
push
aaa
and
inc
sub
add
aaa
dec
test
mov
das
sub
std
push
jle
psubusb
fdivr
call
(bad)
sbb
sahf
test
sub
jl
stc
movs
inc
jecxz
inc
mov
sub
outs
rcr
or
sbb
in
sbb
lock
pop
div
cmp
sub
sbb
adc
push
repnz
into
in
fmul
jb
dec
aas
loopne
xchg
(bad)
xchg
dec
pop
aas
cmp
inc
mov
movs
das
push
ins
mov
mov
xchg
jl
mov
mov
(bad)
cmp
jl
mov
movs
pusha
ins
push
lds
push
aas
mov
int
xor
call
dec
in
and
inc
sbb
push
in
shl
in
mov
cmp
or
mov
mov
ja
inc
mov
test
push
sub
mov
call
add
enter
in
jb
mov
sub
lods
(bad)
sub
adc
or
inc
test
or
inc
pop
fild
cld
sbb
call
fadd
add
add
jg
add
js
add
add
push
push
sidtd
jnp
cwde
dec
or
inc
aas
cmp
push
fidiv
inc
push
add
outs
mov
add
ds
sub
aas
fnstcw
and
arpl
add
add
xlat
scas
cdq
shr
cmp
add
outs
jbe
ficomp
push
push
mov
inc
xor
int3
jle
cmp
adc
fisub
imul
or
cmp
push
or
int
add
mov
or
pop
or
pop
add
dec
addr16
movs
popa
adc
xor
adc
or
out
inc
push
or
pop
jmp
inc
shr
dec
bound
or
xchg
mov
into
sbb
dec
(bad)
fiadd
push
sbb
aaa
push
mov
cmp
add
(bad)
cvtdq2ps
shr
cmp
cmp
xor
push
ja
arpl
pusha
and
adc
dec
xchg
jg
dec
les
mov
add
jbe
inc
leave
push
sub
dec
aam
nop
add
(bad)
mov
push
mov
jne
adc
ja
lods
mov
inc
inc
pavgb
jo
mov
rcl
dec
fmul
mov
sbb
sub
rcr
jl
mov
cmp
lods
push
push
mov
cwde
cmp
lahf
aas
outs
or
push
cmc
pop
call
mov
mov
or
mov
or
shl
mov
mov
push
add
pushf
mov
pushf
dec
xor
lods
xchg
adc
in
outs
into
scas
movs
test
fwait
pop
cmp
aam
sub
test
xor
cmps
int3
add
inc
add
cld
adc
test
je
and
imul
dec
shl
test
adc
inc
mov
push
and
xchg
push
mov
es
ror
push
and
mov
out
sahf
in
es
jmp
fdiv
int3
cmp
das
pop
test
daa
out
fcmovnb
das
jnp
add
les
pop
test
xchg
cwde
xor
inc
mov
push
cmovbe
jo
pop
push
enter
ins
enter
jbe
jo
jp
pusha
pusha
xor
or
enter
cmp
outs
movs
mov
jae
sub
xor
ficom
or
jp
sbb
dec
pusha
in
lea
aaa
sub
fcom
imul
aaa
pop
jp
lods
cmp
aaa
or
cld
pop
pusha
in
or
inc
add
sahf
into
movs
inc
mov
pop
aam
inc
out
inc
mov
sti
outs
(bad)
cmp
or
sub
je
or
je
jmp
inc
and
pop
xchg
xor
mov
or
dec
sbb
add
jnp
fs
inc
sbb
jmp
push
cdq
jnp
pop
test
dec
sbb
(bad)
arpl
add
cmp
xchg
push
sar
nop
pop
outs
mov
loopne
xor
fmul
imul
mov
sysenter
or
xlat
repnz
mov
sbb
(bad)
pop
push
push
cmp
pop
jno
inc
pop
jmp
sbb
adc
sub
or
sbb
inc
and
xor
xchg
or
and
and
sub
inc
sub
xor
xor
add
push
fsub
cmp
inc
xor
adc
jmp
and
adc
in
test
dec
jecxz
or
add
cs
push
cld
mov
cmp
and
stos
add
mov
mov
dec
int
js
rol
int3
in
and
enter
dec
mov
and
jns
pop
push
jle
das
push
push
cwde
push
xlat
cmp
dec
push
call
push
into
sbb
mov
pop
daa
das
test
mov
scas
scas
mov
push
push
xchg
xor
dec
push
adc
and
cmp
(bad)
enter
jne
sbb
xor
pop
pop
cmps
std
dec
aas
push
pop
out
add
sub
pop
dec
jge
sbb
fmulp
inc
cmp
add
cwde
sub
clc
inc
cmp
daa
in
dec
in
push
movs
pop
adc
jmp
mov
jbe
jg
addr16
xchg
push
(bad)
dec
dec
jne
and
or
push
lds
in
dec
pop
pusha
pop
pushf
call
fsubr
push
or
les
pop
or
neg
rcl
mov
imul
adc
add
test
pop
jo
(bad)
aas
sbb
addr16
sub
push
and
dec
div
shl
dec
dec
cmp
cmp
ins
gs
pusha
inc
jmp
adc
ret
fst
and
adc
push
inc
dec
pusha
inc
ror
adc
ror
push
mov
sbb
lock
pop
jmp
out
dec
test
fwait
adc
iret
jne
cmp
out
mov
push
dec
cmp
jne
dec
jp
sub
sbb
hlt
add
push
jge
add
jg
add
sub
fsub
cmp
xchg
adc
cmp
add
fcmovne
ja
push
cmp
mov
adc
push
push
mov
iret
icebp
jl
jnp
jl
dec
int3
loopne
xor
sub
sub
cmp
cmp
pop
adc
push
ds
cmp
inc
and
cmp
mov
pop
pop
int
add
dec
scas
add
pop
jo
dec
or
add
jno
cmp
sub
sub
inc
inc
(bad)
arpl
or
or
add
enter
pushf
mov
adc
mov
add
push
xlat
mov
sbb
push
loop
fdiv
push
popa
jo
mov
fisubr
and
retf
ret
nop
push
jo
jecxz
shl
dec
or
mov
pop
adc
and
adc
jno
loope
aaa
push
shr
sbb
mov
sub
adc
or
rol
push
or
dec
ds
(bad)
mov
fsub
and
mov
pop
or
push
or
or
jge
mov
jmp
push
inc
pop
mov
cdq
add
sub
and
or
and
push
sbb
enter
iret
adc
push
test
add
mov
push
lods
xor
xor
or
or
lds
pop
(bad)
mov
ss
shl
enter
popa
push
pusha
adc
inc
inc
dec
jle
lock
pop
les
add
lock
sbb
cs
jae
mov
sub
rcl
inc
or
and
xor
cmp
inc
or
loopne
ds
and
inc
inc
dec
pusha
ja
add
jbe
mov
or
pushf
ins
jo
movs
or
and
sub
push
fadd
sbb
adc
addr16
or
sbb
cs
push
imul
sub
out
or
or
lods
(bad)
out
cmp
(bad)
mov
or
pop
or
dec
cmps
loopne
loop
cs
add
dec
in
push
pushaw
sub
mov
cmp
ds
ja
jecxz
push
and
retf
mov
movs
xlat
and
or
fdivrp
xor
rcr
dec
inc
or
xor
clc
lea
add
cmp
add
xor
pusha
js
pop
and
mov
sbb
sbb
inc
adc
mov
ret
(bad)
adc
repz
leave
add
xor
inc
xchg
push
xchg
and
jle
jecxz
xor
or
(bad)
out
xchg
xor
mov
xchg
call
daa
rcl
sub
arpl
shl
inc
pop
sub
inc
push
bndstx
and
enter
and
in
je
in
cmp
enter
fidivr
or
fcomp
retf
and
cmp
dec
push
sti
dec
in
mov
dec
pop
loope
cmp
out
loopne
popa
add
cwde
inc
repnz
daa
xor
jo
mov
pop
ret
imul
push
xchg
int
inc
movs
dec
sahf
jmp
inc
fst
push
add
add
push
push
arpl
and
js
or
repz
mov
sbb
(bad)
test
hlt
push
xchg
xor
cmp
xor
sbb
mov
adc
sbb
xor
aaa
adc
sub
loope
and
add
or
or
fs
sti
jo
jmp
add
mov
jecxz
test
pop
not
xor
add
stc
icebp
adc
loopne
or
push
cmc
add
sbb
loopne
mov
cmp
push
fld
hlt
fstp
fwait
push
mov
xchg
add
jmp
jnp
pop
add
(bad)
pop
sbb
iret
out
retf
test
mov
mov
cmp
in
lods
shl
cmps
push
xor
push
in
mov
jge
sbb
push
sbb
aad
add
gs
and
xchg
std
scas
(bad)
or
add
movsx
sbb
mov
and
and
mov
aaa
adc
ins
popa
add
mov
pop
jg
inc
push
mov
sub
mov
xchg
enter
daa
xor
cmp
or
pop
mov
je
dec
inc
sbb
adc
pop
ja
and
cmp
inc
or
dec
cmps
loopne
dec
mov
mov
ror
xchg
and
push
add
and
mov
outs
mov
push
scas
call
ja
mov
inc
ins
mov
(bad)
loopne
and
mov
aad
fdiv
sbb
pop
out
loopne
xchg
mov
lahf
data16
inc
mov
cmp
dec
mov
test
pop
add
cmc
adc
pusha
dec
rcl
or
rcl
and
aaa
add
jmp
or
jno
cmp
cmps
jle
jno
xor
lock
or
out
fistp
out
popa
push
add
cs
clc
sete
and
arpl
test
xor
ins
(bad)
jne
icebp
inc
data16
das
hlt
push
test
sub
scas
cmp
sub
xchg
mov
sub
sub
xadd
and
jl
mov
aas
add
lods
and
cmp
arpl
sub
imul
pop
rcl
push
es
in
outs
xor
clc
fwait
ror
(bad)
(bad)
pusha
or
call
jmp
mov
ret
repz
cmp
cs
lahf
sub
mov
stc
and
sti
(bad)
shl
cmps
inc
inc
or
loope
or
inc
or
cli
fld
stos
cmp
or
inc
call
cld
inc
je
mov
in
sbb
dec
aaa
xchg
retf
sbb
(bad)
sar
cwde
mov
fstp
xchg
sub
call
xor
imul
xchg
add
cmps
aaa
movs
aaa
les
jo
jb
add
dec
ja
cmp
scas
dec
dec
add
fimul
inc
adc
adc
jb
inc
pop
or
sbb
enter
push
add
stos
jmp
push
scas
push
enter
lahf
test
inc
xlat
sbb
adc
enter
add
aaa
lea
push
xchg
dec
and
test
adc
lahf
call
pop
in
dec
push
aas
aas
and
jl
or
push
mov
push
mov
cmp
fiadd
mov
add
push
dec
adc
(bad)
retf
or
cwde
push
(bad)
mov
das
test
mov
cmps
push
or
rol
or
call
fnsave
pop
sub
inc
jne
enter
test
adc
add
and
adc
xchg
lock
jg
lds
(bad)
fild
inc
jbe
addr16
test
xor
fcomp
aas
es
scas
lods
inc
xchg
jb
adc
mov
jns
mov
scas
xchg
pop
push
lds
push
mov
adc
xor
inc
xor
jmp
outs
dec
mov
pop
inc
xor
ret
in
push
add
ret
fnstsw
and
jne
and
jbe
jmp
jle
mov
mov
add
cmp
cmp
sub
push
add
sti
sbb
test
push
clc
push
dec
pop
aaa
dec
add
push
sbb
jg
fistp
ds
adc
clc
jne
xchg
jmp
ficom
add
mov
retf
sub
call
mov
rcl
iret
retf
call
sub
sub
and
stos
test
ins
sub
cmp
sbb
dec
cmp
xor
sbb
call
js
(bad)
pop
pop
scas
pop
xchg
cmp
add
mov
inc
and
jne
pop
or
sub
xor
sub
adc
fwait
into
sbb
aas
cs
push
dec
and
adc
test
xchg
lea
sub
pop
in
push
ret
or
ja
xchg
in
rol
and
add
fidiv
pop
ins
mov
or
or
or
(bad)
cwde
push
sbb
sbb
mov
jae
sar
mov
mov
ror
xchg
ret
cmp
jge
cmps
or
or
cmp
mov
das
scas
pop
add
or
cmp
cmp
cwde
xchg
cdq
and
loopne
sbb
aas
inc
mov
inc
add
inc
inc
fisubr
clc
push
movzx
movzx
lea
mov
xor
retf
and
cwde
push
cmovg
jg
pop
cmp
jne
movs
xor
in
je
push
mov
add
outs
fld
cwde
mov
retf
call
leave
inc
mov
lea
mov
ins
adc
xor
test
push
call
push
call
and
scas
pop
sbb
call
and
call
or
sbb
add
pop
xor
pop
ror
aam
add
out
dec
movs
and
dec
xlat
sub
and
(bad)
xlat
xchg
pop
pop
or
sub
ret
dec
inc
cmps
jo
aaa
add
push
and
sub
lahf
iret
cmp
xchg
iret
xchg
add
jo
cmp
(bad)
pop
or
xchg
or
daa
not
or
sahf
jg
movs
jb
sub
nop
pop
sub
mul
cmps
sbb
test
dec
pop
cpuid
sub
adc
popa
or
add
cmovo
xor
push
or
icebp
loop
pop
out
dec
ja
add
mov
pop
adc
add
jo
fbld
and
inc
(bad)
nop
sub
push
addr16
inc
test
adc
jmp
and
adc
jbe
call
dec
or
fbstp
mov
mov
and
mov
lds
fild
push
push
dec
das
push
in
xchg
movs
adc
and
arpl
fild
lods
std
scas
mov
test
dec
fbld
mov
test
add
sbb
popa
add
or
fistp
pusha
ins
and
retf
jmp
inc
scas
cmp
inc
xor
js
shr
loopne
test
dec
dec
xor
or
pop
or
adc
js
jp
(bad)
adc
inc
mov
mov
pop
(bad)
sbb
adc
and
mov
cwde
xor
pop
sub
shl
(bad)
jecxz
mov
xor
mov
pop
clc
int
bound
add
jns
or
les
pop
pusha
pop
cmp
mov
xor
retf
rol
ret
outs
push
test
push
cmp
adc
pop
jbe
push
sbb
iret
les
sbb
inc
loop
add
mov
adc
iret
fs
xchg
sub
les
fcom
jb
inc
xor
aaa
mov
iret
jmp
sbb
iret
add
or
ds
jmp
out
test
inc
push
repz
lahf
mov
sbb
add
mov
mov
iret
mov
push
pop
inc
push
xor
test
inc
pusha
dec
imul
add
add
(bad)
push
test
aaa
pop
popa
push
mov
push
inc
cmp
mov
or
cmp
push
les
push
or
sub
dec
mov
mov
aaa
push
add
adc
push
aaa
rcl
adc
aaa
pop
cmp
aaa
popa
lahf
aaa
nop
and
push
stos
lahf
mov
ret
and
scas
xchg
repnz
pop
push
and
push
fadd
xor
pop
sbb
cs
daa
fs
push
(bad)
nop
dec
sub
pop
or
(bad)
repnz
push
lods
add
jne
dec
test
jle
push
fnstsw
clc
add
pop
dec
in
sbb
fwait
movs
cmps
add
xor
mov
jo
mov
jo
jl
mov
in
rol
mov
xor
or
mov
sbb
nop
das
sbb
call
sub
or
jo
out
or
rcr
bound
rcr
push
sub
call
push
leave
loop
scas
je
test
mov
ficom
movlps
shl
adc
call
add
and
push
dec
xor
pop
add
pop
dec
and
pop
outs
pop
or
(bad)
cmp
sbb
push
xor
(bad)
xor
in
mov
dec
aaa
ins
sbb
imul
pop
call
inc
lods
je
outs
push
je
and
in
inc
push
cmp
mov
and
inc
pop
push
and
cmc
ins
mov
shl
jle
mov
push
icebp
mov
out
arpl
jbe
pusha
jae
or
fs
jne
adc
mov
pop
cmp
lahf
in
add
dec
cmp
gs
jno
lock
rcl
sub
ins
int3
xchg
rcr
aaa
mov
adc
lahf
jo
nop
mov
int
xchg
repz
inc
cmp
loopne
sbb
inc
add
gs
rcl
pand
adc
mov
add
inc
inc
adc
sbb
add
xor
xor
pushf
pop
push
add
mov
mov
sbb
mov
add
mov
lahf
clc
outs
dec
js
inc
mov
jg
cmp
jl
js
mov
jecxz
mov
sub
loop
xor
popf
sbb
es
mov
jo
jl
push
fnstsw
sahf
ja
sbb
test
sub
jmp
pop
stos
add
pop
mov
xor
rol
cli
sub
push
pop
jne
cvtps2pi
aaa
ins
pop
not
addr16
or
or
daa
in
jbe
outs
jg
and
and
jl
or
imul
fdivr
add
xchg
push
push
scas
push
nop
test
scas
cmp
in
sbb
mov
scas
or
or
scas
ffreep
add
mov
mov
fadd
or
in
inc
fmul
or
stos
or
aaa
mov
ret
retf
outs
dec
rcl
xchg
xor
pop
test
cli
and
inc
in
out
loope
inc
shl
xchg
repnz
pop
add
fbld
xor
sbb
push
pop
or
or
adc
lea
mov
into
sahf
iret
mov
add
(bad)
jb
add
mov
adc
pop
or
mov
sub
xchg
adc
aaa
jae
lods
mov
pop
pop
aad
inc
mov
popa
xor
pop
or
pop
in
push
aaa
pusha
and
jno
mov
pop
add
div
or
iret
adc
cwde
xor
out
add
xchg
in
jg
es
and
xor
push
es
mov
out
pusha
shl
or
and
fcom
add
and
scas
out
push
shl
or
sbb
movs
pop
sbb
add
and
out
out
push
fldenv
out
jae
sub
cs
jo
adc
cwde
fist
outs
test
push
and
adc
and
(bad)
js
mov
pop
pop
sbb
inc
adc
pop
inc
pop
outs
push
jecxz
ja
test
retf
add
fld
xchg
(bad)
adc
fmul
or
gs
sbb
xlat
popa
mov
inc
push
out
inc
push
inc
push
inc
mov
fnstsw
test
xor
push
pop
inc
cmp
push
pop
std
cmp
jl
daa
add
ins
adc
je
rol
dec
push
sub
mov
pop
mov
jb
inc
mov
mov
fmul
(bad)
loopne
add
hlt
and
push
add
cs
daa
lock
jmp
out
loopne
lds
xor
jmp
ins
into
pop
ins
push
sub
xor
sub
and
ja
popw
or
add
and
ja
mov
xor
ja
pusha
push
add
jns
inc
mov
pusha
and
pusha
and
das
mov
call
mov
or
inc
or
nop
add
jne
je
dec
push
and
or
mov
jne
cmp
pop
jne
mov
pop
inc
or
pop
push
push
or
or
out
adc
outs
sub
das
xchg
xchg
sbb
inc
mov
pop
sub
push
adc
sbb
add
mov
ror
and
rcl
iret
ja
add
pop
xchg
cmp
xchg
rol
xchg
and
or
ins
add
add
mov
pop
jecxz
add
add
mov
bound
out
mov
push
adc
cmp
and
inc
popf
xor
mov
sbb
rol
(bad)
push
cmp
pop
cmps
sub
adc
int3
or
sbb
push
xor
push
mov
add
mov
cs
cwde
and
xor
jo
mov
inc
cmp
push
mov
test
and
xchg
fstp
push
xor
ds
push
lods
xchg
push
mov
mov
xor
data16
cwde
cmp
in
or
pop
inc
enter
sub
in
imul
adc
mov
add
out
pop
and
jbe
(bad)
nop
outs
test
aas
mov
and
shr
sub
out
cmp
push
pop
mov
or
inc
fsubr
inc
fldz
push
dec
xchg
(bad)
sti
out
inc
test
cmp
or
pop
js
add
sbb
push
ja
das
add
inc
loope
sub
mov
(bad)
mov
fstp
cwde
add
lock
mov
pop
adc
add
mov
xchg
mov
pop
sbb
mov
popf
add
das
xlat
pop
push
sub
or
or
lds
add
mov
iret
adc
out
jecxz
and
sbb
mov
and
dec
aad
(bad)
hlt
sub
inc
movs
fcomip
lahf
fst
jbe
inc
lahf
push
push
dec
sbb
push
sbb
aad
test
jle
jnp
shr
outs
ror
inc
repz
scas
int3
push
repnz
stc
dec
or
pop
or
inc
in
jmp
ret
cmps
fbld
fcomp
das
pusha
pop
fwait
gs
push
std
das
neg
ret
dec
inc
push
mov
frstor
ja
push
xor
adc
or
rol
rol
push
(bad)
mov
inc
push
test
test
jg
xor
or
dec
test
fist
mov
iret
pop
inc
mov
retf
mov
std
addr16
pusha
mov
add
jmp
fdiv
xor
movs
inc
or
pop
mov
adc
rol
lahf
inc
sub
adc
cmp
and
xlat
add
sbb
enter
call
push
mov
add
sub
adc
ret
and
iret
call
cmp
into
jo
mov
or
jne
sahf
jne
ror
or
adc
fisub
sbb
jne
outs
rol
add
mov
add
add
fimul
jl
jae
xchg
add
pushaw
xchg
gs
cmp
je
inc
js
les
or
and
pop
jae
xchg
ficom
xchg
jo
mov
push
shl
mov
sub
dec
hlt
(bad)
std
loope
scas
add
dec
push
pop
adc
retf
xchg
add
jmp
xor
add
dec
cmp
mov
jbe
xchg
xor
js
call
test
jle
xchg
dec
ins
ror
in
xor
add
xchg
jns
bound
mov
jmp
inc
inc
push
clc
loope
outs
mov
sbb
bound
xchg
mov
adc
or
inc
sub
lods
inc
popa
xor
ins
sub
je
push
ins
xchg
add
pop
std
sbb
mov
jns
enter
shl
adc
sub
add
jl
pop
cmp
inc
jmp
mov
mov
addr16
fwait
out
mov
dec
inc
jnp
iret
sar
sub
jbe
les
mov
mov
xchg
mov
std
mov
mov
push
dec
jle
cmp
add
ror
dec
add
sub
jp
pop
shl
add
mov
dec
add
mov
pop
xchg
cmps
mov
cmp
xchg
in
mov
adc
push
ins
and
dec
inc
mov
sbb
mov
fnsave
mov
inc
inc
mov
sub
adc
adc
mov
ret
in
xchg
sbb
add
mov
mov
jle
pop
sub
or
xchg
sbb
cmps
xchg
ins
pop
adc
lock
or
rcr
scas
cmp
jo
add
xor
ror
jo
dec
cwde
stos
cmp
mov
std
mov
pop
gs
cmps
sbb
por
mov
pop
cmp
pop
xor
add
sbb
push
mov
xor
add
ret
cmp
xchg
je
or
ret
int3
xor
add
out
cmp
shl
pop
cmps
push
call
repnz
add
push
push
xor
adc
push
mov
sub
inc
or
mov
out
mov
pop
sbb
jmp
jp
dec
test
add
sbb
pop
add
push
test
sbb
outs
and
mov
sbb
fisub
xchg
cmps
neg
sahf
imul
mov
cs
lea
jo
adc
mov
int3
fist
inc
ja
jmp
push
je
test
push
inc
push
adc
retf
sbb
push
or
adc
mov
pop
xchg
or
adc
test
cdq
xchg
adc
sbb
dec
adc
sbb
scas
fadd
xchg
add
add
push
pop
and
mov
in
movzx
sbb
jge
dec
(bad)
dec
retf
xor
mov
dec
(bad)
test
and
and
xchg
aas
adc
inc
mov
inc
leave
mov
mov
dec
out
rol
dec
jmp
nop
mov
cmc
xor
rep
data16
mov
outs
xor
push
movs
sub
push
int3
sub
sub
inc
xor
dec
dec
iret
iret
dec
add
sub
test
mov
imul
dec
adc
jo
ja
adc
inc
ret
stos
ja
sub
cmovno
fcom
mov
fidiv
or
ins
push
or
lods
fmul
push
push
ds
inc
cld
mov
add
(bad)
outs
sar
sub
xchg
mul
test
test
mov
xor
mov
xchg
cmps
int
sbb
cmps
inc
cmp
sub
or
and
mov
pusha
sbb
(bad)
mov
xlat
adc
push
inc
int
das
jmp
cmps
pusha
fimul
cmp
sbb
loopne
mov
add
and
mov
sbb
(bad)
movs
add
rcr
inc
adc
and
or
aad
or
xchg
or
adc
outs
into
and
daa
(bad)
pop
in
add
fsubr
pop
movs
push
bound
pop
dec
out
push
mov
pop
jae
cli
jne
ror
add
adc
push
mov
lock
sub
enter
cmp
jmp
pop
jo
rcr
dec
clc
mov
rcr
xchg
les
movs
outs
cmp
fdiv
jp
cmove
adc
sub
dec
xchg
push
sub
mov
pop
mov
das
je
(bad)
rol
comiss
adc
mov
pop
jo
mov
inc
sbb
(bad)
sub
jno
movs
push
xor
jge
adc
inc
sub
daa
int
jmp
sub
inc
pop
xchg
fisubr
sub
jg
inc
nop
push
cmp
je
mov
or
inc
mov
ret
mov
mov
add
dec
xor
stos
jmp
shl
add
mov
hlt
test
push
jmp
cmp
add
or
or
ret
rcr
out
mov
mov
(bad)
jne
inc
pusha
rcl
stos
lea
dec
xor
pop
xchg
ror
repz
cmp
jle
adc
fbstp
cmp
jmp
cmp
cs
or
mov
std
std
movs
inc
mov
out
or
mov
mov
jmp
jnp
in
repnz
and
dec
test
sub
outs
add
adc
lahf
shr
push
or
mov
test
jbe
call
je
sbb
js
jmp
and
clc
(bad)
loop
mov
sbb
xchg
and
cmp
out
cmp
sti
std
and
nop
sbb
mov
sbb
je
sbb
or
and
lods
hlt
xchg
push
push
push
fsubr
or
pop
retf
jp
les
dec
popa
xchg
gs
call
jge
je
sub
mov
push
jnp
pop
out
mov
jl
cli
sbb
cmp
mov
sub
rcr
push
imul
push
retf
xchg
xor
loop
jl
xchg
inc
and
aaa
cdq
pop
mov
push
jmp
dec
xor
scas
out
push
enterw
xlat
daa
sar
mov
lock
sub
lds
sbb
pop
xchg
cmp
dec
sbb
test
addr16
and
pop
(bad)
sbb
aam
xchg
pop
jl
fmul
mov
pop
and
ins
sub
mov
jo
jo
jle
xor
push
fwait
add
cvtdq2ps
cmp
mov
test
cmp
mov
jo
xor
and
or
adc
inc
inc
mov
and
int3
and
cmp
add
and
or
ret
daa
xchg
xlat
push
push
mov
sbb
inc
dec
sahf
cdq
jl
lds
movs
mov
bound
xchg
adc
arpl
imul
xlat
add
xor
mov
in
adc
mov
jne
inc
or
les
push
pop
mov
or
xchg
add
loopne
cmp
and
mov
jnp
sub
xchg
stos
ds
in
mov
add
lods
cmps
mov
test
(bad)
push
data16
push
jne
jmp
dec
push
xor
mov
or
adc
jmp
sub
cld
xchg
shl
ins
jl
xor
out
adc
or
jmp
sbb
fisub
jle
sub
ja
ror
xchg
jmp
mov
movzx
mov
sub
call
(bad)
out
ja
push
or
xchg
cmp
add
push
ror
xchg
inc
and
jb
mov
call
or
inc
sbb
dec
clc
hlt
inc
jbe
sub
and
jne
js
add
push
sub
jmp
out
inc
xor
jp
iretw
fucomp
ret
sbb
hlt
dec
inc
sub
loopne
add
aaa
mov
sbb
pusha
add
mov
push
data16
popf
pop
jo
(bad)
ss
xor
push
push
(bad)
aaa
in
push
xchg
cmps
in
aaa
sbb
loopne
adc
mov
ret
mov
mov
inc
mov
or
jnp
ror
or
mov
lea
inc
add
into
sar
inc
ja
sbb
adc
adc
mov
cmp
jle
add
loope
pop
rol
clc
cmp
stos
dec
icebp
pop
lea
arpl
add
outs
call
add
adc
sbb
fbld
jmp
cmp
ret
mov
mov
or
or
and
mov
scas
les
mov
push
adc
xchg
rcr
xchg
dec
jle
aaa
ret
jp
or
(bad)
cmp
jge
push
daa
inc
aam
mov
in
or
rol
sbb
aad
add
mov
cmp
adc
int
daa
adc
(bad)
pop
add
and
loopne
test
aam
inc
mov
jle
or
and
or
adc
std
jp
pusha
and
pop
stos
mov
lock
add
xchg
xchg
add
push
out
das
lahf
or
and
iret
pop
or
or
mov
jb
dec
popa
mov
mov
mov
cmp
adc
in
and
pop
neg
mov
pop
clc
arpl
iret
test
pop
arpl
loope
je
arpl
popw
sbb
xor
xor
outs
pop
pusha
push
mov
inc
movs
adc
or
pop
add
scas
pusha
push
dec
add
inc
add
inc
sar
out
push
scas
pop
outs
add
jae
aas
(bad)
mov
sub
inc
iret
js
adc
aas
cmps
icebp
or
test
fdiv
inc
inc
pop
fdivr
push
push
test
nop
xor
outs
(bad)
ret
xor
inc
pop
fldl2e
mov
repnz
andps
jns
xor
or
mov
jl
and
cmp
int
fimul
fiadd
lea
in
(bad)
in
aas
xlat
popf
or
rol
cmp
or
lods
xchg
bsf
cs
fistp
gs
push
push
les
mov
ja
add
ja
add
out
nop
xlat
and
inc
pop
cmp
pop
push
jmp
loope
push
add
add
dec
xor
out
dec
scas
fsub
movs
xchg
sbb
enter
aam
sbb
add
in
jl
dec
scas
mov
sub
pop
test
jo
(bad)
cmp
inc
and
adc
or
neg
rol
loopne
lods
and
push
pushf
ror
push
or
shr
ret
dec
mov
xor
adc
paddd
iret
and
or
or
sub
lahf
fdivr
adc
push
jb
or
lahf
xor
mov
into
je
jp
aad
pop
pusha
cmp
pop
push
cmp
bound
pop
fcomp
and
pushf
daa
loopne
js
mov
sbb
sub
cmp
push
pushf
adc
sub
or
push
adc
push
xchg
inc
fwait
add
add
or
pusha
inc
clc
out
mov
dec
sti
jno
or
ret
inc
ret
mov
ja
inc
lock
mov
mov
or
add
mov
inc
addr16
and
pop
mov
xor
in
pop
and
rol
mov
lahf
jecxz
popf
fidivr
repnz
adc
mov
inc
or
ja
je
cmp
outs
push
shl
mov
pop
and
inc
mov
ja
sbb
lea
outs
je
inc
mov
sbb
test
sbb
jmp
rcl
xor
mov
inc
and
mov
push
pusha
cmp
(bad)
das
cs
ds
and
aad
call
dec
push
sub
clc
mov
out
pusha
loopne
and
mov
jns
inc
stos
xor
lea
dec
rol
adc
sbb
retf
push
or
xchg
dec
and
push
mov
imul
ret
push
xlat
dec
test
or
adc
mov
mov
or
inc
dec
jne
cmp
mov
(bad)
lea
or
js
movs
mov
push
pushf
cs
sar
fbstp
push
aaa
or
adc
pop
add
nop
xchg
xchg
xchg
xchg
mov
nop
and
dec
inc
sub
das
scas
and
shl
sub
cmp
das
popa
rol
lods
xor
test
scas
pop
sbb
pop
call
adc
cmp
faddp
inc
xor
loope
xor
push
pop
sub
cdq
clc
cdq
pop
xchg
call
adc
stc
outs
inc
movsx
adc
mov
cmp
lods
add
hlt
addr16
sub
fild
shl
ror
dec
lods
xor
pop
adc
shr
out
aas
das
sub
inc
push
add
adc
fs
adc
jo
or
mul
jae
(bad)
or
add
push
(bad)
aas
clc
jg
pop
mov
cmp
mov
xchg
sbb
dec
or
not
ins
sub
or
sbb
jl
imul
fnstsw
sahf
ja
sbb
lods
add
and
sub
jmp
mov
ja
mov
inc
in
cmp
push
jo
or
or
xlat
dec
rcl
inc
push
pop
xor
add
jge
ret
mov
ja
jmp
jg
push
int3
push
xor
rcr
add
jbe
call
dec
ffree
mov
mov
shl
dec
mov
mov
or
test
mov
push
push
xchg
jecxz
mov
daa
sub
xor
mov
shl
aad
pusha
lock
push
xor
dec
sbb
adc
jmp
add
inc
adc
xor
push
jl
cmps
je
jno
outs
test
ret
ins
mov
xchg
jno
fidiv
pop
add
push
test
pop
das
and
shl
xlat
outs
adc
sbb
imul
pop
mov
mov
sar
dec
pop
mov
pop
ret
cmp
jmp
adc
out
fcomp
pop
in
retf
lea
rol
data16
cmp
mov
(bad)
push
xor
xor
pop
mov
jmp
repnz
and
sub
jmp
jg
movs
imul
pop
sahf
test
pusha
cdq
cwde
into
mov
or
or
lahf
(bad)
addr16
shl
mov
xchg
(bad)
pop
jecxz
mov
and
xchg
cmps
imul
scas
arpl
xor
add
push
xlat
pop
js
loopne
int3
dec
mov
or
jno
sub
dec
inc
mov
rol
inc
(bad)
mov
mov
pop
xchg
lea
push
ret
sbb
adc
shl
and
jo
mov
punpcklwd
adc
dec
in
ret
lahf
mov
nop
test
and
aaa
push
sahf
inc
cmp
frstor
xor
movs
test
inc
pop
test
mov
fmul
inc
ins
lods
or
js
or
aaa
dec
add
add
jmp
mov
jg
aam
push
in
add
add
and
mov
pop
fs
in
clc
mov
stos
and
push
clc
mov
push
jne
xor
mov
mov
pop
sub
xor
push
mov
rcr
sbb
mov
cs
add
jg
aad
nop
rol
xchg
call
hlt
(bad)
bound
cmp
je
into
adc
test
cs
loope
out
push
scas
jmp
sub
pop
sbb
jne
nop
and
xor
adc
pop
jbe
mov
jl
pop
stos
mov
push
jg
and
sar
add
loopne
sbb
arpl
pop
adc
dec
sar
pushf
div
ret
stos
mov
test
addr16
out
dec
inc
ret
mov
push
cmp
addr16
add
loop
push
jmp
xor
or
or
xor
mov
jnp
push
pop
repz
xor
jl
jmp
sbb
inc
cwde
dec
push
mov
fs
cmp
movs
and
mov
call
arpl
mov
rol
cmp
mov
jbe
cmp
arpl
push
pusha
in
add
ins
push
sbb
pop
inc
popa
and
push
pop
aaa
jo
loop
je
sub
push
xor
shr
sub
sub
xchg
imul
(bad)
rol
aas
popa
daa
jmp
mov
mov
movs
xor
and
fst
fisttp
sub
aam
sar
sub
push
mov
xchg
in
adc
les
and
es
push
adc
adc
add
ret
mov
xchg
lods
stos
fdivr
sbb
ja
cs
sub
shr
sbb
lahf
jmp
push
mov
bound
(bad)
sub
out
cmps
add
mov
inc
cmc
cmp
scas
xlat
push
mov
add
push
pusha
cmps
jo
push
push
or
add
sub
mov
mov
adc
or
addr16
and
push
fst
int3
sbb
ins
xchg
mov
cmps
push
or
push
hlt
jmp
jle
inc
hlt
jecxz
pusha
adc
(bad)
dec
dec
and
jmp
test
mov
int3
mov
adc
lds
adc
iret
mov
in
push
jae
or
jno
sbb
and
test
xchg
fisub
push
lods
mov
jge
test
sbb
je
inc
jecxz
jae
(bad)
xlat
mov
cmp
add
xor
push
stos
add
aad
mov
inc
pop
and
rol
stos
aaa
sti
rcr
fwait
mov
or
je
loopne
add
sbb
movs
into
jne
add
inc
inc
es
bsr
dec
mov
cmp
shr
mov
ret
clc
cmp
popa
add
test
jmp
xor
ret
xchg
pavgb
add
add
sub
ins
lock
neg
stc
mov
mov
adc
pop
stos
and
ror
sar
mov
inc
loopne
sub
inc
sub
dec
leave
fiadd
ss
push
mov
sbb
push
dec
pop
or
fld
or
fldcw
pushf
pop
das
loopne
js
push
stos
jbe
xor
or
sbb
sbb
sub
clc
or
jge
cld
lods
js
or
pop
jmp
cmp
shl
shl
jo
rcl
dec
mov
out
and
or
dec
add
xor
mov
fist
push
add
add
pop
add
arpl
gs
add
call
jb
push
push
or
popa
add
jbe
dec
push
xlat
(bad)
in
push
pop
add
mov
adc
call
push
je
clc
mov
cld
outs
and
pop
push
lods
or
add
cmp
adc
cmc
int3
(bad)
ror
icebp
cmps
xor
mov
mov
jge
dec
fwait
sbb
clc
jne
jmp
xor
pop
sub
imul
pop
mov
and
std
(bad)
out
sbb
inc
movzx
push
jp
or
data16
push
imul
inc
or
mov
daa
sub
mov
xor
out
inc
xor
mov
dec
and
or
shl
push
rcl
mov
loop
cmp
mov
scas
imul
movs
rcl
test
mov
xchg
popa
xchg
fisub
cmps
jge
mov
lods
cmps
sti
cmps
shl
push
test
rol
sbb
jb
scas
mov
lods
sub
movs
dec
scas
fcomi
pusha
add
scas
and
mov
xchg
add
aas
push
test
push
cmp
loope
mov
inc
mov
inc
loopne
xlat
dec
sbb
das
aad
imul
xchg
pushf
clc
mov
cld
repnz
adc
jbe
fwait
jnp
shr
mov
add
lods
or
xchg
mov
push
pusha
and
sbb
add
lock
sbb
jmp
adc
push
adc
in
fwait
xor
xor
lea
(bad)
or
lods
pop
push
(bad)
bound
test
mul
lea
dec
out
inc
cmp
lea
and
fistp
mov
dec
clc
jne
pop
pusha
outs
cmp
mov
cmps
inc
push
pop
add
mov
hlt
arpl
popa
cmp
sahf
mov
cld
fidivr
dec
jne
push
mov
ret
test
push
loope
sbb
mov
push
scas
cmp
and
mov
jle
sbb
mov
jbe
sub
push
loopne
pop
adc
xchg
jmp
arpl
ret
jne
and
jl
dec
jne
or
mov
js
fcomp
int3
loope
clc
fwait
pop
mov
ret
dec
push
cld
push
or
shl
inc
and
push
add
sbb
xchg
fdivr
fld
lahf
push
jmp
fwait
jl
sbb
lock
sub
test
rcr
outs
mov
call
mov
test
and
jle
adc
jge
jno
je
pop
mov
pop
push
loope
push
int
(bad)
test
inc
ficom
sub
hlt
adc
mul
jmp
adc
and
int3
ins
(bad)
(bad)
and
je
mov
loopne
outs
mov
inc
imul
fadd
int3
mov
dec
es
clc
mov
push
cmp
sub
js
dec
repz
scas
int3
push
and
cmp
xor
ja
push
(bad)
fxch
mov
pusha
fild
jl
or
ins
dec
push
add
push
pop
mov
nop
inc
add
adc
inc
dec
ja
gs
push
call
dec
retf
aam
hlt
call
pop
or
pcmpgtw
inc
push
dec
bound
(bad)
jg
arpl
push
imul
push
jns
je
ins
or
outs
addr16
(bad)
inc
popa
cs
inc
pop
inc
outs
ins
ins
ds
adc
mov
add
fs
or
outs
add
sub
sub
add
or
les
add
gs
pushw
lock
xor
adc
int3
(bad)
pop
sahf
or
or
popa
jo
arpl
jns
add
ins
mov
es
and
jp
cdq
pusha
add
mov
pop
and
mov
stos
mov
das
mov
pop
jae
add
jae
gs
sahf
jae
ins
iret
mov
mov
jae
jmp
cwde
mov
pop
cmp
and
push
test
(bad)
das
in
add
shl
imul
pop
cli
cmc
push
loopne
pop
sbb
push
sbb
cmp
xchg
or
xchg
(bad)
shl
push
inc
xor
dec
outs
popa
or
mov
or
mov
xchg
mov
sbb
shl
cdq
mov
inc
xor
dec
sub
pusha
or
add
pop
cmp
mov
mov
or
mov
dec
sti
dec
xor
fs
ins
push
mov
push
add
jo
or
push
and
cmp
xlat
test
(bad)
xor
sub
mov
or
inc
test
in
mov
or
int
bound
inc
out
adc
pop
sub
cwde
xchg
or
popf
add
inc
mov
popf
push
lock
sub
xchg
test
pop
lahf
and
loop
pop
pop
std
or
fcom
test
lods
or
pop
daa
or
or
or
or
xlat
push
ja
cmp
push
push
aaa
hlt
dec
fistp
data16
jmp
cwde
lock
sbb
and
fdivr
jp
pop
mov
add
out
and
inc
ins
popa
jae
gs
inc
test
push
pushw
ins
inc
inc
(bad)
adc
mov
xor
or
add
sbb
mov
add
adc
pop
or
mov
inc
sbb
push
mov
push
xor
out
not
daa
pushf
mov
or
sub
push
adc
out
inc
test
adc
sub
cs
push
(bad)
fwait
call
(bad)
aaa
ret
jae
pop
push
cmp
push
add
xchg
push
arpl
fs
popa
adc
jb
push
test
mov
pop
aam
shl
mov
popf
lds
mov
and
test
mov
mov
ret
mov
mov
jle
(bad)
call
in
(bad)
aam
rcr
jecxz
test
add
push
add
imul
xor
ss
xor
popa
loope
popa
das
nop
or
and
call
mov
lods
jnp
ret
add
mov
adc
leave
pushf
or
xchg
cli
xchg
sub
iret
xor
adc
call
xchg
inc
cmp
dec
or
xor
or
arpl
cmp
jmp
sahf
mov
je
add
mov
in
xchg
test
sub
mov
sub
push
or
arpl
add
cmp
ret
push
outs
sbb
xor
xor
adc
push
add
jle
pusha
fdiv
xor
fild
sub
in
stc
mov
adc
pop
or
stos
rol
xor
dec
ins
movs
xor
loop
mov
cmp
jge
xor
inc
loopne
(bad)
jle
add
data16
test
jne
inc
jnp
xchg
mov
call
or
mov
sub
xchg
xchg
mov
outs
or
dec
cld
add
mov
mov
or
ret
aas
or
sub
add
(bad)
je
jge
in
pop
adc
cld
sbb
test
push
ss
add
mov
std
push
xor
adc
in
clc
(bad)
fadd
dec
xor
mov
inc
mov
daa
loopne
je
out
add
(bad)
pop
inc
adc
xchg
xor
adc
mov
inc
cmp
je
mov
ja
push
push
ret
mov
rol
pop
shl
shl
dec
xor
sbb
call
dec
cmp
sti
(bad)
in
ss
sub
push
mov
adc
mov
aam
mov
ins
mov
and
jmp
add
nop
cmp
and
loopne
sub
mov
or
ret
jl
push
mul
mov
pop
or
inc
jne
inc
push
ret
pop
imul
fadd
push
cli
xchg
jle
sbb
ins
adc
pusha
sbb
aas
cmp
jg
add
cmps
ins
sbb
or
mov
jae
mov
or
mov
js
cmp
push
(bad)
mov
add
mov
add
adc
inc
clc
in
test
clc
or
or
jp
(bad)
lods
iret
cld
jl
push
push
cmp
or
cmps
mov
fiadd
call
cs
xor
dec
repz
adc
jne
inc
ds
pop
push
inc
and
pop
jo
mov
in
push
adc
mov
xlat
mov
adc
icebp
jle
sub
les
xchg
(bad)
jge
inc
dec
mov
xor
inc
test
add
mov
adc
fucom
mov
lods
jl
xor
mov
cmp
into
mov
add
push
add
arpl
mov
mov
test
add
pmulhw
add
adc
adc
pop
add
test
and
add
lds
fcomp
mov
add
add
xchg
imul
(bad)
call
push
mov
push
je
xchg
lock
inc
div
rcr
ret
or
stos
or
and
rol
sub
add
mov
iret
into
mov
sub
xor
push
adc
loopne
mov
push
pop
jmp
mov
mov
sbb
out
ds
sar
add
retf
test
hlt
mov
and
mov
ins
push
mov
push
mov
inc
push
or
mov
xchg
and
push
lea
inc
iret
(bad)
or
add
mov
mov
cmp
cmp
rcl
add
pusha
mov
aas
sub
call
mov
add
add
add
and
jmp
pop
jmp
pop
jnp
add
add
add
adc
std
sbb
dec
cmp
xlat
jmp
inc
cmc
jno
(bad)
ins
mov
je
movs
jo
jle
xor
jg
dec
pusha
in
adc
enter
dec
pop
js
in
jg
mov
cmps
rcr
fadd
popa
add
push
clc
or
push
and
jge
xor
mov
inc
pusha
add
loope
pop
adc
daa
xchg
cmp
pop
pop
hlt
jb
adc
pop
add
out
mov
sbb
dec
xor
shr
jb
adc
arpl
cmps
ja
push
enter
push
and
sub
scas
jne
scas
push
dec
pop
and
addr16
dec
mov
push
rol
addr16
mov
outs
scas
ret
push
push
leave
repz
enter
or
pop
shl
mov
mov
xchg
pop
iret
adc
mov
xor
mov
or
dec
or
xchg
sbb
sbb
and
sub
inc
pop
mov
mov
movs
repnz
test
hlt
aaa
sbb
mov
shl
mov
popa
jmp
(bad)
fstp
push
ss
and
imul
shl
lock
scas
jecxz
lods
stos
inc
and
test
mov
mov
scas
cmp
push
xchg
fmulp
mov
mov
adc
sbb
cwde
mov
stc
scas
mov
adc
icebp
outs
fmul
pop
sub
or
add
mov
(bad)
sub
jns
shr
sub
fadd
xor
pop
add
aam
adc
and
lods
loope
lods
sub
push
lea
(bad)
js
adc
inc
(bad)
in
or
js
aad
xchg
xor
sbb
aad
mov
push
nop
jp
xchg
mov
mov
js
add
add
push
enter
jae
enter
in
add
outs
sbb
push
sub
adc
and
inc
mov
adc
out
jg
or
das
jb
jle
mov
sub
movs
mov
add
dec
ficomp
sahf
mov
or
or
test
sub
inc
js
cmp
call
adc
pop
fistp
aaa
or
push
or
aaa
shr
scas
test
mov
inc
je
nop
sar
mov
shl
nop
nop
inc
mov
ret
icebp
mov
adc
rcr
pop
cld
mov
sbb
sbb
enter
add
test
ficom
mov
sbb
pop
outs
(bad)
mov
push
lahf
rcl
outs
and
xchg
fidiv
cmp
je
push
in
or
and
adc
das
cmps
inc
arpl
sbb
popa
out
je
push
mov
mov
jne
mov
cmp
popf
ret
add
mov
inc
cmp
pop
jmp
push
add
inc
das
inc
add
xor
inc
mov
shl
les
js
sub
or
(bad)
or
jno
sub
call
popa
xchg
les
ret
in
and
les
test
xor
js
xor
(bad)
add
cld
pop
retf
add
inc
push
test
pop
jae
leave
lds
add
sbb
xchg
pop
inc
nop
cli
push
arpl
xchg
sbb
lds
xchg
sub
call
cmp
pop
add
mov
xor
out
(bad)
lahf
clc
jp
adc
in
xlat
(bad)
or
out
mov
fs
ss
(bad)
(bad)
out
rol
enter
test
add
push
pop
dec
pop
shl
in
jecxz
fsubr
pop
pushf
pop
mov
bound
push
cmp
adc
cs
out
mov
stc
xchg
push
and
pop
out
call
out
jecxz
enter
sub
dec
dec
xor
icebp
(bad)
sbb
xchg
or
mov
repnz
cwde
loope
push
fsub
aad
lods
and
push
ror
mov
jb
leave
aam
cmp
sub
enter
xchg
mov
test
int
xchg
repnz
data16
mov
adc
test
mov
pusha
and
test
dec
ins
les
shl
and
dec
mov
sbb
es
inc
stos
sbb
dec
pop
out
add
test
mov
iret
push
sbb
fisttp
dec
iret
shl
nop
pusha
(bad)
out
ror
es
test
ja
mov
stos
push
sbb
pop
mov
into
push
bswap
dec
or
or
popa
push
inc
push
call
pushf
or
je
iret
mov
sbb
lds
sbb
(bad)
cld
mov
jno
mov
(bad)
loop
adc
mov
mov
add
mov
xchg
outs
mov
out
scas
aaa
and
mov
jo
aaa
push
arpl
das
es
or
adc
sub
xor
adc
js
jae
mov
rcr
cwde
push
or
sub
pop
or
add
fst
test
dec
mov
sbb
iret
pushf
loopne
daa
test
shl
psrlw
shr
push
aad
rcl
push
add
pop
cmp
cmp
jecxz
and
push
rol
(bad)
adc
in
push
ror
inc
ja
call
sub
in
jno
je
pop
aas
(bad)
push
and
aas
stos
add
mov
addr16
cmp
jge
cmp
nop
push
lea
mov
xor
enter
mov
xchg
lock
pusha
jp
sahf
mov
lock
mov
sub
daa
xlat
sub
fdivrp
test
jl
scas
jo
mov
add
adc
inc
test
or
sbb
jne
fucomip
lsl
adc
cmp
inc
pop
sahf
mov
rcl
adc
push
mov
jmp
jmp
popa
stos
adc
jmp
adc
nop
dec
pusha
je
mov
in
pop
mov
je
lea
push
shl
cld
or
sub
inc
enter
pushf
sbb
add
adc
inc
xor
ins
push
push
pop
cmp
push
xor
or
mov
add
pop
add
adc
and
fld
pop
adc
adc
adc
inc
in
mov
test
bound
fcom
bound
cmp
jecxz
jo
adc
push
and
push
mov
or
pop
rol
sar
or
(bad)
fst
sbb
adc
inc
and
push
xor
push
adc
sbb
rcl
fdivr
push
iret
lock
push
jl
or
(bad)
lock
lock
adc
adc
sbb
pop
inc
and
inc
stc
dec
mov
call
not
or
or
sbb
push
pop
or
adc
push
in
cmp
sbb
ins
ficomp
imul
dec
in
mov
enter
mov
mov
fdivr
pop
ds
or
jo
scas
call
mov
add
cmp
call
lods
test
or
pop
mov
ror
jnp
jge
mov
mov
add
push
dec
pusha
and
(bad)
and
dec
mov
push
mov
dec
sub
pop
jle
dec
mov
add
outs
sbb
loopne
jge
(bad)
push
inc
push
js
push
add
and
ins
inc
cmps
push
cwde
pop
push
add
xor
fwait
sub
push
sbb
xchg
lock
mov
ret
enter
cmp
in
cs
xor
or
sbb
jecxz
outs
call
mov
loope
jle
push
push
inc
dec
jne
sbb
(bad)
lods
iret
sbb
add
jne
pop
cs
jle
dec
mov
and
jecxz
sbb
adc
retf
sub
push
mov
cld
inc
ret
jmp
inc
dec
jne
or
pop
pop
lahf
and
dec
imul
or
xchg
fidiv
adc
mov
mov
xor
xor
xlat
test
add
adc
call
into
out
cmp
jo
(bad)
cmp
add
or
pop
fnstenv
sbb
pop
pop
mov
stos
jg
ret
in
xchg
pop
ret
inc
and
lahf
push
das
(bad)
mov
and
pop
mov
loopne
lods
jmp
out
das
nop
xchg
push
adc
(bad)
cmp
test
mov
loopne
pop
add
loope
mov
push
nop
pushf
in
add
dec
fidivr
aam
add
popa
and
mul
and
retf
in
xor
pop
pop
mov
cmp
jo
les
fcomp
push
popa
ins
or
and
jg
les
xor
sub
adc
jg
inc
and
and
aam
inc
or
fstp
xchg
dec
sub
xadd
(bad)
in
add
std
add
jl
cmp
jle
or
adc
(bad)
ins
cmp
daa
cli
jne
inc
add
add
adc
je
addr16
mov
fsubr
xchg
inc
call
rol
cmp
adc
test
inc
mov
shrd
lds
add
add
push
push
or
pop
cld
sbb
inc
mov
fimul
rol
sub
inc
scas
(bad)
fadd
jne
xor
inc
(bad)
add
retf
sbb
loopne
jo
fsub
jge
sti
or
add
in
test
out
xchg
adc
(bad)
lods
jo
stos
mov
sbb
mov
adc
rcr
inc
dec
stos
cmp
mov
or
pop
xlat
loopne
inc
test
mov
jl
sbb
enter
inc
bnd
xor
or
jmp
jo
sbb
popa
xlat
rol
mov
fcom
jo
xlat
inc
dec
or
adc
test
shl
ins
add
loope
rol
arpl
pop
adc
rcr
sbb
xlat
push
push
xchg
add
mov
xlat
(bad)
sar
das
xor
dec
xlat
and
jo
ins
cmp
jb
(bad)
xlat
jecxz
jo
sbb
das
and
(bad)
cmp
adc
pop
imul
arpl
mov
adc
xlat
in
sar
aad
or
(bad)
xlat
mov
pmulhuw
mov
add
call
enter
not
add
jno
add
js
(bad)
mov
inc
or
push
out
sets
jns
dec
iret
not
mov
sbb
sbb
(bad)
adc
pusha
mov
mov
arpl
dec
(bad)
es
out
inc
or
or
add
lock
(bad)
sub
call
push
(bad)
mov
fild
shr
es
or
push
add
cmp
push
shl
call
cmp
(bad)
mov
ret
or
pop
lock
(bad)
jmp
mov
sbb
sub
xor
aam
daa
jno
add
sbb
xor
inc
jae
mov
dec
sub
inc
xchg
into
mov
pop
fisttp
push
mov
inc
das
pop
and
mov
jl
loopne
jne
jmp
call
jmp
dec
and
(bad)
add
test
clc
cmps
in
mov
cmps
je
cmps
pushfw
dec
popf
xchg
std
cmps
sbb
daa
push
dec
fucomip
(bad)
lds
mov
cwde
xor
cwde
cmps
out
les
and
dec
pop
xor
sbb
js
(bad)
cmps
lods
idiv
pop
mov
cmp
adc
sbb
cmp
cmps
stc
cmps
jne
retw
cmps
cmp
outs
mov
out
cmps
sar
data16
dec
cmps
int3
mov
sub
mov
add
inc
cs
mov
cmps
pop
and
cmps
mov
cmps
hlt
push
push
add
cmps
cmp
in
sub
cmp
or
xrelease
adc
push
pusha
loop
icebp
pusha
dec
pusha
rol
inc
mov
pop
cmp
aas
cmp
xor
jns
xor
repnz
loopne
jb
in
mov
push
rcl
sbb
pop
and
or
pop
bound
arpl
sbb
pop
out
inc
push
loopne
pop
in
xchg
lea
sub
inc
pop
and
push
aam
cmp
aam
hlt
sbb
mov
das
xlat
add
mov
scas
mov
hlt
mov
inc
outs
rol
xor
mov
aad
add
test
imul
or
ins
pop
and
sub
sub
push
pop
lea
adc
jno
cmp
pop
ds
jecxz
sbb
jae
movs
mov
pop
inc
or
pop
pop
add
(bad)
aas
push
or
stc
test
hlt
sbb
hlt
cld
dec
pop
mul
adc
dec
(bad)
femms
push
lea
test
jo
cmps
clc
sbb
aad
mov
clc
sbb
cwde
push
repz
jecxz
das
ds
popf
jne
sbb
adc
push
xor
(bad)
loopne
inc
mov
cmps
loop
and
and
push
or
cmps
dec
cld
movzx
loop
mov
adc
inc
adc
adc
dec
pop
adc
cmp
or
mov
les
aam
bound
lahf
sbb
outs
in
push
jae
or
out
or
mov
mov
pop
xlat
xchg
push
add
outs
lahf
inc
dec
xchg
xchg
lahf
xor
xchg
xor
stc
jl
das
pop
pop
jb
push
std
movs
lahf
cli
cmp
dec
cmp
lahf
sub
ret
mov
aaa
pop
lahf
pushf
in
push
pop
cli
mov
inc
jbe
push
shl
xchg
pop
push
pop
cli
inc
cli
pop
mov
and
(bad)
cld
mov
xchg
mov
cmp
cs
jmp
jmp
xor
jmp
or
dec
test
cmc
mov
lods
xchg
jae
je
lea
push
sbb
sub
inc
clc
ret
fwait
add
xor
push
inc
pop
mov
jl
dec
mov
push
push
xor
or
lock
imul
push
push
adc
int
jg
ficom
dec
adc
aas
inc
aad
ficomp
and
dec
pop
les
inc
mov
cld
(bad)
nop
mov
ja
imul
xlat
iret
ds
inc
adc
mov
sbb
jbe
mov
inc
jecxz
pusha
les
mov
lods
push
xor
cmp
adc
sbb
push
sbb
fldenv
add
scas
mov
or
lock
cld
jno
sub
call
hlt
sbb
pusha
iret
inc
mov
adc
jle
stc
dec
inc
es
nop
xor
imul
add
das
pusha
or
xchg
xor
push
pop
fs
pusha
inc
xchg
or
add
ins
xchg
lock
div
dec
ret
add
aad
pop
daa
cmp
sbb
popa
push
adc
ins
lock
sbb
pop
add
ins
adc
and
and
pop
mov
fcom
(bad)
push
push
push
and
das
adc
cmp
mov
add
das
or
sub
dec
adc
das
and
iret
sbb
cmps
add
das
sub
push
in
mov
fsub
data16
sub
sub
rol
or
mov
xor
sbb
xchg
xchg
das
sub
cmp
es
das
repnz
int3
je
mov
add
pop
pop
int3
sbb
cmp
test
(bad)
push
sub
add
inc
or
leave
lods
push
inc
push
adc
das
xor
adc
mov
add
fcmovnu
sub
in
dec
inc
xchg
out
add
loope
outs
mov
cmp
jo
stos
(bad)
lods
outs
add
arpl
lock
and
adc
out
xor
push
mov
and
adc
stos
sub
push
jle
ds
add
jmp
mov
or
pop
pop
push
push
and
push
popa
nop
inc
sbb
test
adc
lods
mov
pop
mov
shl
daa
pop
xor
sub
daa
das
sbb
fnstcw
push
hlt
dec
fs
jne
test
je
les
push
lock
pop
jl
dec
and
add
push
das
rol
mov
add
mov
call
lds
mov
mov
outs
xchg
add
retf
xchg
test
lock
and
fild
and
lahf
call
push
shr
or
test
adc
mov
dec
or
pushf
sbb
aas
in
lahf
push
nop
adc
add
daa
bound
xor
ficom
enter
and
xor
inc
add
jmp
aam
add
pop
pop
ss
add
lahf
je
push
mov
and
mov
adc
push
sub
enter
and
fild
sbb
fistp
xor
or
les
daa
push
pop
data16
and
or
jne
sbb
aaa
movaps
stc
loop
cmp
mov
inc
cmp
je
fimul
lea
inc
and
push
pop
add
into
sub
cmp
pusha
inc
xor
push
pusha
lock
aas
sbb
pop
mov
loop
cmp
movs
retf
adc
push
adc
jb
adc
mov
mov
pop
pushf
mov
movs
xchg
push
pop
leave
sub
add
jmp
push
daa
outs
xor
(bad)
aam
aaa
mov
pop
pop
jne
or
or
mov
or
rcl
add
xor
shl
mov
push
push
or
pushf
cs
push
jb
adc
mov
sub
daa
clc
jno
cdq
pop
(bad)
(bad)
call
sbb
out
std
mov
mov
and
pop
cs
push
add
jo
jo
dec
dec
and
pop
mov
retf
adc
pop
sub
mov
sub
ret
xor
sbb
shl
fcom
push
test
aaa
push
ret
and
cmp
xchg
jo
mov
pop
push
into
sbb
and
aas
scas
jl
xor
(bad)
sbb
ins
push
push
or
daa
adc
daa
jns
pop
pop
adc
imul
jp
call
xor
test
mov
mov
push
add
jo
and
pop
sub
ror
xchg
or
inc
in
shl
xor
pop
cwde
and
sbb
rol
push
pop
nop
mov
in
cmps
push
movs
pusha
inc
pop
inc
sub
jne
movs
pop
fcom
and
push
pop
mov
mov
adc
dec
adc
adc
test
mov
mov
mov
push
loope
sbb
jmp
push
push
pop
inc
push
jno
btc
dec
inc
leave
mov
add
lock
lock
xchg
ret
mov
add
and
add
inc
sahf
mov
out
dec
shr
mov
repz
dec
push
or
lods
sbb
nop
or
jbe
sub
fadd
fistp
xchg
cmp
ins
cmp
push
ror
pushf
in
sbb
or
leave
dec
push
nop
pop
rcl
call
sbb
mov
aam
push
sub
or
test
sbb
test
sub
loop
push
into
xchg
mov
test
push
xchg
dec
pop
leave
sub
sub
xor
or
movs
xchg
fmul
nop
pop
add
das
mov
mov
and
xor
sub
xchg
xchg
push
push
loopne
xor
xchg
pusha
add
or
aam
sbb
push
ret
add
test
sbb
mov
popf
into
dec
cmps
adc
neg
push
movs
inc
shr
add
and
fisubr
adc
arpl
sub
sub
enter
xor
lods
add
dec
push
push
adc
xchg
sub
call
and
mov
test
dec
shr
lods
mul
push
inc
mov
mul
and
pop
repnz
xor
(bad)
icebp
sub
adc
push
test
push
hlt
ss
or
push
xor
add
mov
(bad)
pusha
push
movs
and
mov
test
xchg
cmp
lods
div
or
push
xor
icebp
and
(bad)
neg
fs
or
sub
dec
call
int3
test
leave
dec
push
and
shr
enter
push
xchg
mov
int3
add
xchg
mov
in
imul
mov
add
(bad)
and
sbb
cmc
shl
adc
adc
(bad)
in
inc
mov
or
lods
add
iret
cwde
movs
pop
push
pusha
lds
push
sub
sub
add
and
aas
pop
enter
adc
pop
push
add
add
push
das
push
sub
jge
cmps
add
push
adc
call
mov
and
outs
jl
dec
jle
push
push
sub
mov
push
cmps
mov
add
pop
aaa
mov
js
ficomp
sbb
xchg
ds
push
push
nop
inc
push
or
adc
pop
fbstp
dec
or
leave
add
pop
adc
dec
push
stos
push
es
and
inc
shl
xor
or
dec
bound
and
mov
cwde
add
dec
jbe
adc
add
mov
inc
push
and
jns
sub
add
je
dec
push
push
push
mov
enter
add
xchg
or
test
js
xchg
inc
inc
(bad)
fcom
inc
xchg
orps
fwait
add
xchg
inc
xchg
inc
inc
adc
xchg
or
or
adc
sub
jno
or
aas
cmps
rol
or
sbb
sbb
dec
mov
inc
dec
ins
pop
sub
and
inc
pop
add
sub
add
int3
aaa
xor
dec
int3
dec
mov
fdiv
push
repnz
and
xor
pop
fdiv
jo
inc
(bad)
in
mov
je
shr
xor
sub
inc
(bad)
mov
adc
add
or
adc
jecxz
repz
mov
inc
dec
dec
outs
stos
inc
or
xchg
movs
shl
add
repnz
mov
xor
add
pop
sti
inc
cmps
mov
dec
dec
push
inc
cmps
sbb
dec
pop
addr16
or
or
dec
cmp
cmovnp
dec
pop
push
adc
aas
pusha
xor
add
cmp
sub
out
xor
in
jmp
adc
je
test
pop
add
push
js
and
scas
pop
inc
dec
rcr
sbb
cwde
add
sub
dec
add
pop
mov
movs
pop
nop
pop
add
mov
fbstp
mov
or
xchg
dec
aaa
mov
xchg
pushf
call
(bad)
lods
aaa
cmp
ss
inc
repnz
jns
jl
mov
and
xor
fdiv
mov
pop
loopne
movs
hlt
(bad)
cmp
popa
test
dec
inc
add
cmp
adc
in
cmp
or
cmp
inc
xor
add
in
pusha
and
cld
(bad)
sub
popa
inc
xlat
fistp
lock
pop
dec
(bad)
lods
push
xor
arpl
cmps
add
(bad)
cmc
xor
add
push
add
dec
pop
add
cmc
stos
ror
mov
lock
mov
fild
push
jb
sub
xor
jb
int3
enter
sbb
adc
xor
mov
inc
lock
add
mov
push
inc
aam
inc
xor
or
not
jl
jo
das
dec
fild
jb
adc
adc
jecxz
cmp
mov
dec
cmps
adc
xchg
xchg
shl
loope
mov
cmp
mov
inc
pop
add
add
shl
dec
sub
or
or
scas
mov
enter
daa
sub
adc
dec
adc
dec
pop
(bad)
nop
xchg
enter
and
dec
mov
iret
push
cmps
stos
and
adc
into
xchg
sub
dec
outs
test
out
outs
add
and
or
add
add
daa
xchg
pusha
(bad)
loop
xchg
dec
push
mov
aas
add
add
push
push
dec
imul
popa
cs
inc
pop
inc
outs
ins
ins
outs
outs
cs
sar
imul
ins
or
outs
addr16
lock
inc
jbe
outs
je
outs
xor
jb
ds
jb
popa
jns
push
fisttp
(bad)
and
sub
sbb
in
int
mov
dec
imul
arpl
mov
rcr
add
fmul
cmovnp
jo
inc
int
stos
add
adc
lock
aas
adc
sbb
inc
gs
jne
je
add
add
add
or
aas
push
rcr
dec
outs
or
mov
sti
jge
aas
add
or
push
and
push
dec
bound
adc
jp
loopne
fdiv
xchg
add
inc
cmp
push
push
stos
ins
push
add
pop
push
add
cmp
and
test
imul
loopne
add
or
adc
int
add
les
add
shr
out
push
stc
mov
cmps
call
push
int3
and
jns
cmps
sbb
cmp
xor
stc
cmp
mov
ins
sub
imul
add
pop
mov
adc
mov
add
dec
push
inc
mov
or
(bad)
popa
sub
fsubr
data16
xor
dec
outs
sub
js
mov
shrd
ins
data16
lock
add
or
or
dec
pushf
or
mov
xchg
sub
outs
and
or
out
int3
sbb
jnp
sbb
in
or
shl
out
cmc
push
or
xor
jp
mov
bound
stos
test
sbb
inc
xchg
add
jnp
ins
jmp
inc
dec
dec
inc
outs
jne
dec
popa
bound
add
shl
mov
js
push
pop
rcl
inc
push
les
sbb
add
test
adc
and
ja
es
pop
pop
and
(bad)
das
movs
push
mov
add
sub
enter
scas
sbb
push
add
cmp
mov
loopne
bound
mov
push
dec
stc
fadd
jmp
add
inc
push
and
sti
rcr
xor
inc
jb
sbb
and
call
jo
popa
or
inc
pop
add
jo
lods
fiadd
call
pop
je
sbb
add
xchg
fsub
inc
add
pop
adc
mov
push
movs
adc
mov
out
push
cmp
jnp
mov
pop
cld
pop
inc
jne
fwait
mov
(bad)
pusha
pusha
pop
jo
inc
repnz
fstp
mov
stc
das
dec
cmp
and
mov
sbb
push
push
data16
lock
push
mov
push
fwait
daa
push
int3
jne
push
inc
sbb
push
push
add
or
sub
xor
fsubr
dec
sub
and
cwde
(bad)
inc
xor
loope
pusha
(bad)
dec
sub
xor
dec
sbb
or
rcl
sub
xchg
test
repz
sar
dec
neg
ficom
dec
ins
xchg
push
inc
xlat
push
xchg
xchg
fld
or
jge
adc
xchg
mov
dec
inc
sahf
pushf
jecxz
data16
and
dec
mov
xchg
xchg
daa
daa
(bad)
push
push
xchg
xchg
vmovss
imul
jge
add
in
in
sub
iret
aas
mov
imul
dec
add
jo
xchg
push
cmc
push
xchg
add
mov
sub
cmps
dec
in
imul
add
fdivr
or
or
mov
cmp
xchg
cmps
dec
nop
or
adc
pop
inc
mov
xor
fld
or
dec
mov
jae
imul
dec
jae
sbb
or
sub
push
int
inc
jg
dec
jg
jp
sub
call
push
push
inc
es
dec
mov
add
arpl
shl
or
rcl
inc
sub
imul
add
or
jp
or
or
cdq
int
add
adc
js
sbb
dec
(bad)
test
movs
adc
nop
add
mov
pushf
out
pop
sub
mov
in
and
xchg
or
test
push
in
dec
xchg
and
das
leave
fwait
cmc
mov
mov
cmp
pop
push
arpl
xor
sub
je
aam
dec
jae
jmp
test
es
xor
dec
imul
shl
push
pop
ins
jno
ffreep
or
movs
rcl
mov
aad
mov
add
sub
or
xlat
(bad)
lds
inc
mov
xchg
jo
dec
mov
js
test
pusha
fs
gs
dec
rcr
add
and
add
hlt
sub
scas
dec
shr
push
movs
loopne
rcr
(bad)
pop
xchg
icebp
xchg
mov
or
ja
xor
sub
pop
dec
ins
add
pop
jg
jg
out
mov
add
dec
popa
pop
and
mov
and
xor
cmp
scas
out
sub
dec
aaa
jae
dec
sub
ret
(bad)
call
adc
dec
or
adc
iret
imul
push
rcr
cmps
or
or
or
retf
sbb
scas
adc
mov
ret
jge
push
adc
pop
push
pop
mov
cli
or
retf
dec
or
repz
out
ret
and
mov
pop
xchg
mov
xchg
dec
test
(bad)
fwait
sub
ins
mov
jae
or
adc
cli
inc
aam
dec
in
dec
rol
sub
ins
aam
pusha
or
mov
mov
stos
mov
inc
pop
shl
arpl
in
inc
loope
adc
jns
and
add
jecxz
xor
add
mov
scas
add
loopne
add
xchg
xchg
out
add
and
ss
(bad)
loopne
add
ins
ja
clc
sbb
and
loope
(bad)
jp
popa
mov
imul
outs
add
xor
inc
bound
inc
hlt
adc
pop
ret
or
sbb
cmp
sub
test
sbb
out
add
loopne
out
add
aas
lea
sub
out
adc
or
mov
in
xor
outs
inc
add
pop
xchg
das
fst
mov
mov
pop
sub
enter
or
jne
xchg
imul
sbb
retf
test
sub
aam
int
in
mov
and
mov
(bad)
shl
push
aas
scas
pop
aad
int3
repnz
neg
mov
jl
movaps
mov
scas
shl
jo
scas
popf
cwde
push
nop
jno
ins
jb
cwde
es
mov
(bad)
push
shr
pop
pop
fld
andps
outs
push
xchg
add
add
addr16
les
test
ds
xor
dec
shl
pop
mov
in
and
pusha
push
ja
pop
pusha
test
pop
ins
mov
pop
daa
mov
nop
out
daa
xor
scas
pop
(bad)
sar
add
jae
ja
cmps
ja
push
or
cmp
ss
add
xlat
sbb
ja
jmp
sub
int3
and
int3
cmp
adc
push
cwde
push
xlat
push
xor
mov
pop
bound
ss
inc
mov
out
pop
pop
add
bswap
arpl
pop
jbe
jno
mov
push
xchg
ror
cmp
sbb
ja
add
vmread
iret
dec
dec
inc
sahf
add
cmp
dec
add
xchg
xchg
xchg
daa
cs
(bad)
leave
enter
fmul
jl
in
leave
leave
xchg
int3
repz
jge
in
fs
xchg
repz
(bad)
xlat
dec
push
pop
jl
(bad)
scas
mov
mov
punpckhdq
fwait
es
jp
(bad)
sbb
(bad)
cmp
jno
push
test
jne
or
bound
add
xchg
push
xchg
mov
sar
pop
sub
sub
(bad)
sub
push
ss
push
and
dec
adc
mov
(bad)
les
sub
adc
lods
mov
(bad)
inc
or
xchg
das
pop
shl
sub
(bad)
pop
push
push
sbb
mov
or
(bad)
ja
movs
lds
jne
stos
bound
adc
push
pop
xor
pop
add
(bad)
sbb
xor
xchg
inc
and
or
sbb
scas
push
and
lods
pop
lea
(bad)
sar
xchg
xchg
dec
das
dec
mov
lods
(bad)
pop
mov
push
les
mov
or
(bad)
stos
pop
test
cmps
push
mov
or
pop
pop
mov
lods
add
popa
pop
(bad)
(bad)
test
test
test
xor
shr
sbb
bound
xor
cmp
sbb
(bad)
sub
lods
test
(bad)
sbb
in
mov
pop
or
cmp
(bad)
jns
xchg
js
repnz
pop
fwait
adc
test
jo
pop
mov
lds
test
mov
and
out
inc
mov
pop
or
and
inc
jno
shl
push
inc
imul
inc
int
(bad)
in
inc
adc
pop
lahf
sbb
or
ds
jo
(bad)
pop
pop
pop
or
aas
pop
mov
(bad)
bound
mov
add
xor
push
and
in
or
push
out
aam
ins
aad
push
out
dec
bound
adc
push
and
and
out
clc
push
popa
and
jno
push
add
push
inc
fisubr
xchg
and
pop
dec
cmp
lock
das
jb
(bad)
pop
push
lods
jg
mov
sbb
or
jne
inc
test
dec
stos
in
xchg
mov
adc
pusha
add
stos
inc
inc
sub
push
or
stos
inc
stos
xchg
xlat
pop
std
test
mov
inc
lods
stos
test
push
mov
add
iret
inc
mov
sub
xor
add
push
mov
fld
icebp
push
outs
jl
mov
or
mov
lods
das
mov
pop
xchg
das
mov
cld
retf
mov
aas
call
ins
sbb
xor
and
int3
inc
inc
jmp
pop
or
pop
ins
add
dec
jmp
xchg
add
cmp
jne
adc
lods
cmp
sbb
add
add
mov
mov
das
jg
xchg
clc
ins
(bad)
sub
sub
data16
xchg
sub
fdivr
push
xchg
jmp
cwde
inc
loope
push
xchg
sub
xchg
or
or
mov
(bad)
loopne
xchg
out
pop
addr16
mov
jns
mov
mov
pushf
pushf
int3
imul
sub
dec
dec
inc
sahf
pop
mov
add
and
pop
xchg
fist
mov
leave
leave
enter
(bad)
fs
out
nop
xor
repnz
lahf
in
es
dec
sbb
jb
test
aas
xchg
pmaxsw
lods
xor
test
(bad)
shl
cmp
es
mov
call
dec
xchg
call
add
cmp
popf
xor
mov
xor
and
inc
mov
push
pushf
(bad)
mov
movs
xchg
inc
mov
or
push
fisttp
mov
add
inc
cwde
fs
stos
pop
test
or
cmp
sbb
out
or
adc
jp
mov
inc
fdivr
das
mov
and
mov
imul
mov
or
or
jmp
adc
mov
mov
jno
mov
inc
mov
repnz
mov
sub
adc
or
add
aaa
loop
aas
add
outs
sub
mov
push
add
sar
xchg
push
shr
add
and
mov
fcomp
cmp
lods
outs
movs
mov
stos
imul
sbb
push
mov
mov
(bad)
bound
mov
imul
loopne
jge
sbb
mov
pop
les
sbb
inc
xor
outs
(bad)
shl
inc
xchg
dec
test
call
leave
mov
pop
out
push
sub
sub
and
call
mov
mov
jle
in
shl
mov
lods
mov
adc
or
es
and
jmp
mov
rcl
sbb
mov
xor
gs
fcmovnbe
ret
inc
mov
dec
in
push
fistp
retf
lods
fninit
sub
push
(bad)
scas
sbb
or
fstp
push
aaa
xor
inc
adc
pushf
and
push
not
cli
vmwrite
jo
aas
adc
outs
dec
neg
or
movs
sbb
adc
mov
push
retf
movs
or
rol
add
sbb
add
push
jae
addr16
jbe
add
addr16
ins
add
addr16
mov
(bad)
add
add
mov
scas
loop
data16
and
into
inc
sub
addr16
imul
mov
xchg
daa
add
or
int
mov
movs
or
mov
cwde
and
mov
pop
add
add
push
adc
push
add
mov
add
add
push
cmp
dec
test
push
std
aam
pop
lods
xlat
das
in
push
fdivrp
adc
daa
dec
dec
xor
jl
cdq
mov
test
pop
ja
test
xor
aam
sbb
and
lock
mov
sbb
sbb
test
ja
test
pop
imul
xchg
or
xor
jbe
or
inc
mov
add
rcr
push
xchg
cli
fimul
dec
popf
das
lahf
sahf
adc
aas
add
xchg
pop
pop
pop
mov
loop
xor
push
nop
xor
push
pusha
pop
cmp
loopne
aas
js
or
or
mov
or
xor
or
aas
nop
push
or
sbb
aas
jmp
loopne
int3
mul
adc
add
ds
outs
adc
sub
daa
and
ror
xchg
daa
daa
jmp
enter
lds
mov
leave
xchg
shr
movs
or
mov
xchg
xchg
xchg
ds
ror
leave
leave
enter
jg
cmp
cmps
aas
pop
fcmovbe
in
add
fistp
or
dec
adc
dec
jmp
or
das
arpl
imul
dec
add
cmps
xchg
dec
or
mov
sbb
mov
or
mov
push
shr
push
scas
test
cmp
adc
loopne
arpl
es
bound
add
push
dec
xor
add
popa
bound
xor
or
arpl
clc
(bad)
mov
and
rol
add
and
loopne
das
arpl
adc
push
add
pop
inc
adc
arpl
push
or
arpl
add
iret
arpl
add
xor
inc
push
or
jmp
or
and
jae
(bad)
push
add
and
and
js
sbb
inc
test
arpl
and
add
pusha
xchg
inc
xchg
and
jg
add
mov
or
arpl
out
add
les
lods
arpl
or
mov
and
imul
inc
adc
arpl
dec
adc
or
arpl
arpl
and
push
rcr
jns
sbb
movs
pusha
xchg
dec
jecxz
dec
shl
inc
mov
add
or
xor
arpl
mov
push
mov
sub
in
mov
add
arpl
jns
add
jmp
mov
mov
mov
test
sbb
adc
shl
call
push
mov
mov
shr
mov
jb
rol
sti
adc
add
xchg
adc
pop
sbb
sbb
sbb
add
mov
je
sbb
add
ins
les
jecxz
lahf
mov
pop
cmp
lods
push
imul
add
inc
adc
add
(bad)
test
scas
cld
and
xlat
das
mov
(bad)
sub
ror
jl
jmp
test
or
mov
int
mov
(bad)
sub
and
xor
fld
adc
mov
cvtps2pi
ja
data16
(bad)
cmp
scas
push
or
mov
pop
scas
inc
loopne
or
mov
das
dec
push
push
aam
mov
inc
xor
aam
data16
push
add
dec
mov
mov
push
jb
xchg
and
inc
xchg
outs
fdiv
fsub
mov
outs
sbb
cmp
cmp
adc
xor
pop
das
imul
sbb
sbb
dec
ss
scas
std
rcl
les
aam
in
cmp
dec
mov
push
pop
mov
mov
in
adc
aas
daa
and
xchg
data16
push
repnz
inc
push
daa
cmp
cdq
sub
or
int3
daa
xor
add
mov
pop
sbb
daa
(bad)
loopne
pop
daa
fld
mov
mov
cmp
mov
es
push
fisttp
es
ss
sbb
shl
in
inc
mov
fnstcw
cmp
jns
mov
xor
mov
xor
mov
fld
mov
daa
daa
xchg
loop
mov
inc
addr16
out
mov
popf
fnstcw
pop
int3
mov
sahf
jne
push
add
shl
mov
imul
fistp
cmc
cmp
push
bound
mov
adc
mov
and
imul
(bad)
fbstp
sub
xchg
xchg
push
cdq
fbld
sbb
mov
push
lds
inc
jecxz
bound
shr
(bad)
imul
push
mov
fist
(bad)
rcl
fbstp
lods
add
lods
xchg
xchg
or
sub
inc
fbld
das
fistp
fbld
(bad)
and
pop
(bad)
ret
or
push
sbb
or
xchg
(bad)
jmp
fisttp
fist
bound
sub
pusha
gs
(bad)
enter
jae
add
bound
push
push
xchg
mov
mov
ins
xchg
cmc
mov
pop
mov
(bad)
add
xchg
adc
dec
xchg
adc
(bad)
push
xchg
sub
xchg
mov
push
les
or
xchg
sbb
mov
xchg
and
add
(bad)
or
xchg
lds
adc
mov
push
mov
dec
xchg
adc
mov
xchg
push
mov
arpl
jmp
xchg
mov
fsub
or
inc
xchg
lea
lods
adc
mov
adc
mov
mov
int3
scas
shr
bsf
mov
daa
int3
mov
in
push
daa
adc
lods
bound
mov
push
daa
sti
loope
mov
wrmsr
or
push
inc
push
and
es
sbb
and
int3
add
push
mov
add
in
inc
add
jmp
adc
ror
xor
add
iret
push
fnstcw
fadd
in
inc
sub
in
mov
or
jo
push
hlt
add
or
add
shr
or
iret
push
movs
test
mov
inc
idiv
mov
xor
push
ss
rcr
xchg
inc
pusha
pcmpgtd
pop
mov
fs
pop
imul
test
sub
call
icebp
xor
jecxz
push
inc
add
(bad)
pusha
ror
imul
push
xor
mov
shr
test
ds
inc
dec
std
pop
push
imul
ins
xchg
adc
cmp
ins
daa
xor
jno
jg
sub
add
xor
push
or
push
int3
dec
xor
xor
mov
mov
jg
mov
out
shl
ret
into
push
jle
push
add
test
aaa
sbb
fdivr
imul
jno
jns
int
in
mov
and
test
push
add
inc
mov
or
jmp
mov
inc
inc
shl
or
adc
cmp
pop
dec
mov
dec
push
pop
mov
xor
mov
in
inc
or
push
ins
popa
jae
gs
(bad)
sub
xor
dec
sub
pop
or
mov
adc
sub
push
fs
add
mov
push
in
add
add
lock
test
setle
and
add
xor
fcomp
pusha
adc
xlat
pop
xlat
ins
les
aaa
sub
addr16
adc
push
push
mov
xor
imul
push
push
mov
pop
xor
and
add
inc
nop
les
(bad)
pop
pushf
das
adc
add
push
into
push
dec
sub
shr
cmp
push
outs
in
cs
jo
into
dec
(bad)
inc
nop
stos
push
into
sub
mov
les
sbb
push
fs
sti
test
bound
add
(bad)
sbb
xor
movs
or
(bad)
retf
xchg
sub
(bad)
cmps
pop
int
mov
or
add
jns
add
mov
mov
or
mov
scas
addr16
or
xor
adc
pop
inc
push
pop
inc
ret
xor
outs
popa
enter
fsubr
add
sti
or
cmp
addr16
and
loope
mov
cmovle
sub
xlat
(bad)
stos
cmp
(bad)
pop
sahf
inc
shl
repz
lods
outs
mov
ret
xchg
fiadd
sub
dec
bound
adc
pop
mov
fimul
adc
push
xor
ret
and
adc
add
xor
mov
adc
push
sbb
out
push
or
pop
test
(bad)
push
lds
push
sbb
or
or
movhps
or
sbb
mov
sbb
add
mov
push
push
or
and
movs
cmc
imul
lods
arpl
and
iret
cmc
add
ror
test
cmp
pop
int3
out
push
addr16
popf
stos
dec
jge
int
ret
cmp
dec
es
mov
push
inc
mov
scas
fcomp
hlt
aas
dec
clc
ret
inc
mov
sub
js
out
stos
jg
fmul
adc
or
sbb
xchg
xor
(bad)
fwait
stos
add
or
and
push
push
lock
pop
ja
ret
les
add
or
or
adc
mov
add
mov
pop
pop
push
xor
jnp
cld
jbe
in
cmp
ins
cmps
loopne
pcmpeqb
sar
xchg
cmp
loope
data16
push
or
mov
push
adc
add
mov
punpckhwd
push
or
xor
(bad)
or
or
mov
test
lods
pmulhw
cmovbe
sar
push
inc
(bad)
push
xor
fs
clc
wrmsr
shr
xor
in
ss
sar
sbb
imul
aad
lods
pushf
mov
loope
(bad)
ins
lds
inc
sahf
or
and
dec
fcos
fsubr
daa
daa
mov
xchg
xchg
xchg
ds
sbb
mov
loopne
pop
mov
dec
(bad)
in
push
jmp
cmp
add
add
push
das
fnstsw
pusha
mov
xchg
dec
add
shl
pop
push
inc
and
pusha
push
mov
shr
push
test
push
adc
mov
push
shl
xchg
xor
ins
push
stc
les
and
push
or
adc
sbb
mov
cmc
mov
out
ret
sub
adc
and
call
mov
push
test
inc
adc
push
or
push
add
push
mov
or
push
iret
mov
xchg
nop
push
jno
or
cmps
sub
rol
movs
xor
sbb
push
jae
cmps
test
push
inc
jmp
xor
xchg
push
gs
lds
sbb
popf
pop
rol
add
mov
sbb
mov
cmp
mov
add
and
sub
pop
pop
jg
das
out
dec
dec
mov
xchg
pop
adc
rol
pop
mov
adc
test
stos
and
or
mov
and
xchg
mov
or
lods
add
xor
sbb
and
pop
adc
or
adc
inc
xchg
lods
xchg
sub
add
pop
or
xor
push
ins
xchg
fcom
out
inc
sub
inc
and
mov
pop
in
adc
add
pop
mov
xor
or
lea
add
jmp
xor
push
test
mov
add
or
xchg
retf
fdecstp
or
xor
(bad)
loopne
add
je
xchg
js
or
add
push
dec
test
popa
mov
push
add
rol
inc
lea
dec
int3
xor
dec
cli
shl
outs
stc
inc
ret
adc
ucomiss
pop
adc
mov
adc
add
mov
push
into
cvtpi2ps
ins
les
daa
xlat
jns
mov
fistp
(bad)
frstor
add
pop
mov
cmps
push
pop
jmp
stos
mov
fisub
pop
jmp
mov
mov
or
push
adc
add
loope
jge
sbb
or
inc
inc
lods
ja
push
sub
mov
(bad)
and
cli
scas
mov
sub
aam
rcl
out
add
int3
cmps
xor
daa
cmps
push
xor
jo
xchg
es
das
(bad)
movs
jbe
shr
call
add
fsubr
lahf
rcr
call
pop
sub
push
test
dec
xor
adc
pop
push
sbb
push
call
icebp
inc
pop
add
lods
and
xlat
push
test
push
fld
fcmovnb
lods
or
nop
fs
fdiv
push
in
das
inc
in
hlt
test
inc
data16
pusha
loopne
jne
hlt
or
push
addps
mov
pop
cdq
ror
mov
push
pop
xor
imul
bound
int3
repnz
wbinvd
movd
push
nop
bswap
pop
neg
add
cvtpi2ps
jp
mov
push
push
push
stos
push
mov
fimul
adc
push
mov
daa
daa
and
out
mov
jb
test
seto
sbb
lds
jmp
cmp
(bad)
jmp
xchg
mov
and
dec
dec
dec
inc
jno
shl
daa
daa
and
in
jbe
cld
jmp
pop
pop
mov
mov
(bad)
fimul
push
mov
es
(bad)
loop
pushf
inc
lahf
dec
cmp
bound
dec
dec
inc
sub
or
(bad)
jno
inc
lods
adc
push
mov
retf
imul
inc
sbb
(bad)
adc
inc
pop
and
mov
fcmovnb
ins
adc
dec
(bad)
mov
adc
je
(bad)
pop
test
or
add
dec
add
and
(bad)
bound
mov
sub
fwait
sbb
mov
(bad)
bound
mov
(bad)
mov
sbb
or
xchg
jmp
jae
mov
(bad)
popa
xor
mov
bound
mov
mov
or
test
les
xchg
fwait
xchg
fnstsw
push
push
sub
pop
xor
test
push
les
dec
stos
mov
dec
inc
inc
mov
dec
and
outs
mov
imul
sub
outs
or
outs
adc
jge
and
mov
mov
pop
outs
jns
add
outs
xchg
adc
cmp
outs
xchg
xor
xchg
xor
inc
mov
adc
outs
pop
bound
lea
sar
fmul
outs
xor
xchg
inc
mov
mov
push
pop
fimul
xor
int3
push
imul
mov
enter
jle
sahf
mov
and
je
xor
shl
mov
bsf
mov
bound
rsm
(bad)
sub
adc
lods
push
add
in
add
push
test
xor
(bad)
aas
daa
adc
inc
dec
push
and
sub
pop
scas
add
push
or
inc
add
lods
loop
je
cmp
pop
push
dec
xor
mov
dec
shl
jg
cdq
rol
push
ss
pop
pop
inc
popf
or
jo
icebp
enter
shl
inc
add
lock
adc
add
push
xor
sahf
jbe
frstpm(287
inc
mov
pop
pop
icebp
outs
mov
pushf
mov
adc
pop
push
push
jmp
mov
cs
mov
mov
cmps
loope
jne
loopne
add
fadd
outs
lods
ss
adc
and
pop
mov
and
or
cs
inc
mov
(bad)
cmovg
or
pop
(bad)
(bad)
hlt
(bad)
or
lock
push
pop
rol
jmp
into
jae
cld
cmc
sub
das
add
adc
cli
test
mov
imul
add
loopne
ins
xlat
fsub
ror
and
push
push
add
pop
sbb
push
cmp
mov
cmp
jo
les
adc
ins
add
mov
mov
sbb
add
ror
pop
pop
loopne
inc
inc
js
unpcklps
in
add
imul
push
popf
das
repz
pop
sbb
in
jecxz
sbb
inc
dec
xchg
inc
push
test
jo
lods
dec
mov
test
cs
jp
ins
test
xor
ins
inc
add
add
push
add
sub
add
fcomp
mov
(bad)
pushf
(bad)
add
rcr
pop
fcomp
fucom
cmp
scas
movntq
inc
sahf
and
pop
mov
dec
cmp
mov
daa
pop
std
arpl
jecxz
(bad)
jl
in
fs
(bad)
cmp
nop
dec
icebp
in
mov
and
test
xchg
xchg
xchg
xchg
jo
shl
into
leave
leave
enter
sar
push
idiv
add
cmp
pop
inc
adc
fimul
fwait
push
jmp
(bad)
adc
fsub
sub
push
test
dec
add
add
pop
movs
add
mov
jo
movs
sbb
loopne
ret
dec
dec
cmp
mov
or
imul
movs
ret
ins
push
jmp
movs
cdq
inc
adc
stos
cwde
adc
adc
jae
mov
add
out
xchg
adc
jno
rol
das
adc
gs
add
movs
pop
adc
add
movs
add
rol
movs
inc
mov
rcl
movs
jno
ret
or
movs
inc
pop
and
and
add
lock
sub
add
lds
mov
aas
pop
sbb
add
loop
mov
shl
pusha
inc
adc
mov
rol
shl
(bad)
sub
add
rcl
sub
sbb
add
aad
out
std
add
add
add
mov
cmp
push
adc
std
stos
nop
push
and
or
add
inc
add
xor
pusha
jge
add
rol
inc
and
jns
mov
add
add
dec
std
add
mov
sbb
inc
add
ficomp
add
shr
std
and
sub
pusha
add
xlat
in
adc
jns
or
sbb
jecxz
test
add
mov
xchg
inc
inc
data16
loopne
test
lds
sbb
call
ins
mov
xor
inc
xchg
jns
enter
push
out
or
mov
push
ds
adc
add
out
push
or
nop
adc
or
lock
add
mov
mov
js
movaps
sub
bound
xlat
sar
push
(bad)
xor
jmp
mov
pop
cmp
pop
push
cmps
imul
cmps
out
psubb
test
cmps
sub
pusha
leave
pop
jb
call
adc
aam
int
in
mov
and
mov
(bad)
shl
inc
pop
scas
pop
aad
aam
dec
xor
call
pop
ret
fst
iret
jl
xor
lods
add
xlat
xchg
or
sbb
push
dec
es
push
jmp
xor
imul
push
push
int
mov
aam
adc
push
jne
mov
push
dec
and
add
xor
aas
or
es
lock
xor
(bad)
sbb
cmp
push
ins
add
adc
daa
mov
sbb
aas
test
rol
in
xchg
xchg
jg
out
loopne
adc
mov
out
or
not
mov
and
out
dec
push
jl
lock
pop
push
push
or
test
mov
mov
push
(bad)
imul
mov
add
add
div
fwait
jecxz
or
cmp
je
neg
lods
not
push
not
out
pop
not
fwait
xchg
mov
sti
aaa
push
jnp
xchg
xchg
xchg
daa
adc
popa
test
enter
out
cmp
jo
in
leave
mov
xor
in
into
repz
adc
jb
jb
cdq
iret
sbb
cmp
cmp
push
jge
fcomp
mov
and
(bad)
mov
shr
neg
pop
push
stc
fimul
cmp
mov
dec
lds
push
cmp
dec
mov
jno
adc
jno
test
scas
xor
xchg
xchg
push
les
lds
inc
and
scas
gs
ins
push
cmp
bound
pop
push
fisubr
adc
push
xor
mov
xchg
sub
scas
xchg
adc
or
gs
inc
add
pop
cwde
sub
les
lds
sub
scas
jno
sub
push
add
mov
ins
inc
scas
jae
les
adc
scas
push
stos
shl
add
cdq
jae
les
add
or
fmul
xchg
lds
lods
(bad)
bound
push
and
bound
dec
push
inc
lods
aad
cmp
and
and
push
imul
les
or
sub
push
dec
les
xor
inc
and
lds
adc
push
push
push
mov
xchg
dec
mov
add
mov
xor
clc
and
cmp
dec
inc
sub
pop
les
dec
mov
inc
add
sbb
inc
imul
add
push
loop
xchg
pop
xor
aaa
or
mov
inc
push
mov
xor
dec
push
jno
in
cld
push
popf
cmp
sub
inc
test
inc
cmps
push
arpl
inc
retf
icebp
rcl
xchg
xchg
cmps
push
or
sub
sub
add
sbb
(bad)
in
push
mov
add
inc
and
hlt
jmp
adc
sahf
mul
add
int3
stc
push
add
push
or
loopne
add
fdivr
xchg
mov
add
ins
jbe
sbb
test
(bad)
push
adc
cmps
mov
cwde
iret
push
movs
(bad)
test
push
out
add
cmps
(bad)
jmp
int3
sbb
push
cmps
div
and
xor
xchg
sbb
hlt
js
pushf
pop
sub
pop
pop
dec
lock
sub
data16
(bad)
xchg
inc
mov
mov
inc
mov
jno
or
add
ret
push
mov
and
shr
sbb
pop
loope
dec
push
imul
xor
cmp
sbb
mov
js
sbb
lock
push
das
xchg
mov
inc
mov
outs
js
movs
push
shr
fisubr
jg
mov
sbb
dec
xchg
orps
hlt
fcomp
inc
lods
mov
mov
addr16
outs
xchg
adc
shl
retf
add
mov
push
jne
gs
outs
movs
or
push
and
aad
sbb
frstor
xor
sbb
jnp
ficom
adc
cmp
stos
or
dec
lods
push
pop
lods
push
aas
rol
xlat
push
arpl
adc
pop
mov
push
sbb
cmp
jns
add
or
call
dec
dec
and
push
test
outs
jbe
add
sub
add
rcr
(bad)
jg
clc
xor
mov
stc
(bad)
cmp
lea
shl
ror
daa
sub
mov
clc
rcl
daa
loopne
movhps
mov
imul
daa
push
and
cmp
pop
std
arpl
add
pop
mov
pop
adc
cs
dec
fs
lds
add
push
ins
ja
imul
mov
ldmxcsr
mov
dec
inc
jns
adc
fld
pop
adc
add
ja
push
shl
int
add
push
test
push
add
push
inc
mov
adc
arpl
push
and
or
mov
or
adc
xor
out
dec
xchg
sub
mov
push
loopne
hlt
cmps
cmovge
test
dec
sub
sub
sbb
xor
jb
adc
pop
test
data16
push
pop
into
repz
cdq
jns
movs
ins
sar
jo
pop
fcomp
xor
push
mov
fwait
sbb
and
xor
add
push
je
push
pop
sahf
jle
rcr
push
ror
sbb
and
sbb
xor
nop
cwde
cmp
add
and
lock
mov
pop
(bad)
mov
and
jmp
dec
pop
cmp
xchg
out
sbb
test
ins
mul
push
in
es
cmp
pop
push
rol
orps
push
aas
lock
pop
mov
loopne
adc
scas
jge
ds
push
adc
add
push
push
pop
pop
ficom
add
jge
sbb
adc
xchg
sub
or
jne
jge
or
adc
jge
adc
add
add
or
mov
and
and
sar
sbb
add
int
pusha
adc
sub
pop
lds
je
retf
xor
bound
movs
pop
repnz
loop
repz
pop
and
or
pop
cmps
fstp
jecxz
push
pushf
out
in
int
clc
xlat
mov
cmps
int3
ins
les
mov
pop
mov
cmps
push
rcr
cmps
into
jle
jo
sti
xchg
add
pop
ret
mov
mov
xor
mov
pop
imul
rol
pop
sub
push
and
push
inc
pop
push
emms
lods
cmp
add
mov
adc
mov
sbb
sbb
pop
lahf
pop
add
test
pop
cmp
aam
pop
enter
dec
das
pushw
push
xor
faddp
inc
push
(bad)
test
mov
or
mov
std
cvtps2pd
pop
aas
jo
pop
das
icebp
mov
addr16
sbb
loopne
shr
jns
pusha
push
add
sub
iret
int
test
iret
add
iret
retf
mov
push
iret
mov
and
pop
fld
jo
out
adc
cmp
lds
sub
xor
or
cmp
add
push
mul
inc
or
aas
data16
push
out
ror
and
push
jle
scas
rol
daa
mov
push
or
daa
mov
mov
cs
mov
pushf
jne
cmp
add
pop
sbb
add
loopne
test
push
daa
js
mov
stos
pslld
cmp
mov
xor
fcom
adc
push
push
pop
add
fisubr
push
mov
xor
mov
(bad)
popa
push
retf
icebp
mov
aam
iret
pop
add
adc
add
xchg
frstor
lods
xor
or
sub
sbb
add
push
pop
fbstp
pop
mov
lar
xchg
test
cmp
jp
add
out
mov
push
push
mov
push
mov
retf
add
pusha
jne
retf
mov
fild
add
xchg
in
fild
xor
mov
sbb
pop
push
or
aaa
retf
sub
cmp
nop
push
pushf
cmps
add
ss
scas
mov
or
and
fs
mov
cdq
outs
mov
xor
pop
pop
icebp
push
push
add
loopne
xor
xchg
adc
add
scas
call
jle
cmp
test
mov
xor
test
jnp
sbb
mov
pop
sbb
inc
addr16
aaa
cmp
mov
jo
jnp
xchg
jnp
pop
xchg
call
sbb
lods
add
pop
and
mov
daa
dec
aaa
xchg
or
pop
push
in
je
pop
das
jbe
jns
xchg
xchg
cmp
loop
movs
es
push
retf
paddusb
xchg
into
mov
bsf
cmp
pop
push
sbb
sbb
or
lds
push
int
int
cs
mov
stos
mov
push
nop
retf
outs
adc
or
pop
sub
loope
cwde
jecxz
push
rol
add
movs
or
add
inc
add
inc
mov
es
inc
adc
xchg
push
cwde
cmp
sub
aaa
mov
add
or
adc
sbb
std
fild
ss
mov
cs
cmp
mov
les
mov
fcom
into
test
cmp
sub
jne
add
pusha
sbb
mov
outs
je
sub
addr16
xchg
dec
push
mov
xchg
jmp
dec
mov
add
sbb
sbb
fstp
rol
(bad)
inc
adc
pop
sub
push
or
or
mov
add
loope
fidivr
movs
dec
ror
dec
cmp
mov
adc
or
dec
xor
rol
xor
pop
xor
movs
pop
jno
pusha
push
test
add
add
loopne
pop
jae
add
inc
mov
pop
mov
and
jl
mov
js
adc
xchg
icebp
ja
xchg
adc
push
(bad)
push
push
push
mov
fadd
jb
outs
popa
adc
sub
mov
mov
push
fnstcw
ja
cs
(bad)
xchg
xchg
jo
push
hlt
add
mov
push
ja
mov
adc
icebp
add
xor
xor
enter
add
mov
inc
adc
addr16
sub
mov
push
mov
repnz
push
enter
mov
pop
and
mov
mul
inc
push
push
inc
pop
cmp
enter
test
mov
cmp
lds
sub
push
push
dec
mov
stc
mov
pusha
inc
fisttp
push
add
and
addr16
dec
xor
and
add
ror
int
loopne
pop
dec
and
test
push
add
lds
add
neg
push
retf
xchg
push
jno
and
mov
(bad)
inc
adc
push
mov
inc
mov
and
and
enter
inc
es
pop
mov
lock
fbstp
mov
sub
push
imul
fiadd
loopne
fs
jo
fldenv
lock
pop
in
add
pop
mov
jle
pop
sbb
jo
xcrypt-ctr
cmps
fild
rol
inc
mov
jo
pop
or
adc
mov
cmp
rol
mov
xchg
push
xchg
or
jo
dec
mov
mov
imul
call
pop
repnz
dec
mov
outs
mov
pop
lods
das
retf
and
ffreep
inc
sbb
nop
loopne
push
call
loope
movs
jmp
dec
fs
sub
pop
(bad)
cmovle
and
ficom
shl
test
pop
adc
jae
shl
add
loop
pop
int
ror
xor
call
and
mov
xor
dec
adc
sbb
sbb
adc
test
test
mov
push
ins
das
jmp
add
(bad)
sbb
push
aaa
push
inc
ins
popa
jae
sub
sub
push
add
or
push
ja
ss
out
int
mov
and
add
dec
pop
mov
daa
mov
jae
rcr
add
js
dec
xor
stos
inc
mov
mov
add
enter
pop
ror
outs
cmp
push
mov
sbb
js
daa
inc
xor
pop
and
mov
int
sbb
mov
pusha
push
pop
mov
stc
cmp
mov
push
mov
and
sar
push
pop
mov
outs
into
movs
or
add
push
and
pop
push
xor
addr16
add
shl
add
loop
dec
int
rol
pop
sbb
mov
sub
movs
or
dec
xchg
and
lock
in
aad
repz
in
adc
adc
add
sub
sub
xor
and
push
inc
test
call
ss
shr
arpl
ins
out
jmp
jbe
jnp
iret
je
push
add
push
mov
add
mov
pop
or
add
push
ds
je
push
jle
xor
loopne
bswap
iret
sub
js
push
jne
add
outs
xchg
inc
ss
xchg
shl
xchg
mov
push
xchg
dec
outs
pop
rcr
add
add
add
aas
add
xchg
pop
add
mov
fcomp
shr
out
push
mov
xor
pushf
imul
pop
push
sub
and
mov
pminub
into
aas
mov
push
xor
ror
or
sub
test
pusha
int
and
imul
sub
test
div
push
test
scas
(bad)
shl
(bad)
into
adc
movs
icebp
addr16
mov
xchg
xor
(bad)
(bad)
cmps
pop
psubb
in
or
add
xor
out
cwde
push
(bad)
or
push
jge
in
pop
or
push
cld
pop
sahf
push
add
add
rcr
mov
inc
inc
push
dec
addr16
xor
cmp
push
movs
or
jmp
push
jae
sysenter
ret
inc
or
push
ins
bound
imul
js
jne
push
sub
rol
(bad)
hlt
xchg
jno
inc
inc
jae
xchg
add
xor
mov
adc
jno
cmp
cmps
popf
push
mul
or
add
test
pop
inc
push
or
test
add
out
push
rol
and
add
push
pop
mov
dec
push
dec
dec
and
mov
mov
or
test
dec
ret
adc
or
das
es
dec
push
or
cmps
jb
(bad)
jb
imul
aad
pop
dec
jb
inc
rol
dec
fwait
cwde
xor
xor
outs
xor
mov
iret
pushf
shl
push
pop
es
repnz
xchg
add
popa
or
push
jo
mov
push
call
iret
lods
jl
(bad)
sub
add
add
sbb
sbb
popa
and
adc
sub
and
push
out
scas
cmp
fadd
dec
mov
fild
popa
call
cmp
add
push
clc
pop
(bad)
dec
or
push
push
cwde
or
push
bound
jle
icebp
xor
and
jbe
cmp
adc
jns
push
cmp
js
movs
and
mul
dec
sub
inc
loope
loope
inc
xor
addr16
xchg
lds
movs
scas
or
push
jecxz
retf
jg
and
and
mov
mov
xchg
nop
ret
(bad)
out
inc
mov
nop
push
jge
cld
(bad)
dec
adc
test
jg
call
pop
ret
xor
(bad)
sti
push
cs
push
push
outs
sbb
fimul
mov
mov
mov
xor
mov
push
mov
and
mov
adc
hlt
test
jle
ins
les
int
outs
cmp
or
sqrtps
es
mov
mov
mov
test
je
mov
das
sbb
or
data16
mov
and
test
mov
push
push
shl
mov
call
sub
mov
mov
dec
sub
je
shr
ins
sbb
daa
rol
xchg
adc
add
push
or
shl
add
fstp
push
push
add
in
outs
pop
add
(bad)
push
push
xor
sbb
pop
in
pop
jecxz
push
adc
and
mov
pop
ret
dec
xor
movs
fdiv
out
clc
jne
mov
test
lods
push
mov
ror
push
dec
dec
jb
jb
dec
dec
xor
jb
jb
xor
xor
jb
jb
ss
cmp
jb
jb
cmp
cmp
jb
jb
ds
and
jb
jb
and
and
xchg
jb
daa
sub
mov
push
dec
jne
or
mov
mov
sbb
pop
dec
test
sbb
sub
or
mov
jbe
hlt
outs
clc
xor
jmp
inc
hlt
mov
popf
dec
clc
jne
mov
dec
outs
mov
jp
mov
adc
dec
mov
xchg
outs
scas
fwait
in
mov
mov
gs
in
in
sub
loopne
dec
loopne
and
push
rcr
mov
jns
aam
mov
xchg
cmp
(bad)
mov
cdq
in
sar
retf
int3
mov
(bad)
ss
adc
js
push
mov
test
dec
repnz
je
cwde
push
xchg
cmps
mov
mov
jge
pop
mov
adc
mov
sub
sar
bound
adc
jo
cmp
adc
sti
mov
fdivr
mov
lods
mov
push
dec
lods
adc
adc
mov
lock
mov
adc
adc
or
pop
scas
out
xlat
loope
jmp
les
es
cmc
test
mov
xor
call
in
pop
test
por
pop
mov
rol
mov
or
xor
add
jb
mov
mul
mov
ss
inc
cmp
push
jbe
das
enter
dec
cmp
pop
ins
sti
add
cmovl
dec
add
leave
es
retf
push
repnz
rol
pop
je
es
push
fnstenv
mov
lock
add
int
into
push
nop
iret
scas
ins
mov
nop
push
hlt
mov
mov
fldcw
jl
push
movs
sub
push
ds
(bad)
xchg
lock
push
dec
(bad)
out
push
aam
push
jmp
nop
dec
push
loopne
push
fcmovnbe
mov
xor
push
pop
sub
pop
push
sbb
pop
jnp
(bad)
cld
fdiv
test
push
or
clc
into
in
sahf
ja
neg
mov
pop
test
(bad)
in
push
int3
out
push
in
pusha
fcmovnu
add
push
loop
pop
mov
mov
lods
pop
ins
sti
call
inc
add
ins
imul
cs
push
cmp
push
les
in
mov
jge
ins
or
push
movhps
fsub
mov
div
ret
adc
push
in
push
pusha
push
mov
jbe
push
mov
ds
and
push
mov
clc
pushw
add
jmp
cmp
repnz
xchg
push
popa
outs
gs
pop
dec
gs
sbb
adc
dec
popa
bound
push
imul
jne
je
pop
jae
xor
(bad)
arpl
mov
mov
outs
je
outs
ins
les
mov
inc
jne
outs
lods
lahf
aad
mov
gs
stos
ins
addr16
mov
in
gs
push
jb
push
and
adc
sti
fld
mov
gs
addr16
gs
and
mov
inc
outs
ja
ins
push
fsub
add
aad
ins
adc
inc
ins
xchg
out
jo
xor
out
adc
imul
add
cs
aad
add
shl
or
ins
in
sub
(bad)
mov
mov
aaa
clc
inc
xchg
fwait
add
cld
sub
test
mov
xor
mov
dec
ins
cmp
mov
fst
fiadd
or
or
or
shr
dec
data16
popa
imul
adc
adc
push
arpl
push
cs
jmp
sbb
out
add
sub
rcr
ds
adc
xor
clc
int
and
push
add
push
outs
imul
out
mov
in
inc
sub
repz
xchg
cmp
cmp
stc
mov
add
mov
xor
or
cs
mov
sbb
inc
fs
pop
and
mov
das
sub
mov
xchg
sar
xor
mov
xor
mov
mov
enter
inc
int
popa
inc
inc
pop
sub
imul
or
(bad)
sbb
jg
shl
mov
mov
fst
popf
sub
fimul
adc
cmp
ficomp
stos
enter
cmp
adc
iret
retf
inc
mov
aad
jecxz
mov
and
aaa
in
xchg
rol
rep
and
mov
daa
repz
jmp
add
sub
ins
push
push
sub
test
sbb
loope
pop
inc
call
imul
pusha
or
ins
inc
add
sub
data16
sub
ret
adc
mov
enter
fidiv
aam
mov
sbb
jecxz
es
adc
sahf
into
xor
imul
pop
mov
jp
jge
loope
push
sbb
jae
cmp
adc
adc
cli
icebp
data16
or
(bad)
sub
and
dec
mov
jmp
pminub
push
clc
jg
cmp
push
xchg
gs
jo
add
js
jae
shl
retf
xchg
sbb
jbe
ja
sbb
fst
mov
shr
sbb
int3
add
push
push
xchg
mov
jg
mov
or
mov
push
sbb
mov
inc
fld
dec
das
jno
cmp
fst
add
push
or
inc
stc
or
or
mov
or
mov
mov
sbb
nop
call
rcr
ins
es
(bad)
adc
loope
pop
bound
push
outs
imul
outs
dec
mov
je
add
jmp
call
ret
or
add
and
push
mov
sub
mov
mov
dec
nop
cmp
jne
xor
and
call
push
push
add
add
add
add
add
adc
add
inc
xor
rcr
and
add
add
add
aas
test
iret
outs
(bad)
xor
dec
repz
cmp
je
and
sti
idiv
adc
in
jmp
or
adc
loopne
sub
inc
ret
test
mov
mov
jmp
mov
shr
sbb
push
add
ds
lods
aam
aas
push
lock
cmp
push
xor
sbb
bound
mov
push
std
adc
push
mov
mul
test
sbb
dec
adc
push
sub
aas
sbb
in
test
push
retf
mov
push
sub
js
mov
jge
inc
adc
clc
sub
mov
sub
jne
lea
push
add
in
xchg
outs
sbb
add
das
fldln2
pop
dec
mov
push
fmul
addr16
fmul
cld
es
in
mov
jl
mov
sub
cmp
pop
cmp
shrd
xchg
xchg
cmp
in
in
xor
jb
sti
leave
dec
test
cli
call
cdq
dec
xchg
pop
test
lods
(bad)
dec
rol
int
mul
mov
mov
hlt
lds
in
dec
adc
xor
xchg
pop
push
xchg
call
lods
push
mov
mov
out
aaa
add
xchg
push
sbb
in
inc
lock
fucomi
adc
mov
cdq
inc
call
test
leave
leave
leave
rcr
fsub
or
cmp
hlt
mov
jae
push
mov
xor
add
loopne
and
xor
jnp
inc
sbb
ins
out
push
je
fiadd
mov
outs
cs
inc
add
dec
mov
pop
add
push
dec
add
add
ret
ret
push
jb
out
outs
rcr
loopne
in
jnp
sbb
das
dec
add
sbb
cmp
adc
addr16
mov
push
dec
(bad)
mov
sbb
xchg
mov
mov
adc
pop
mov
stos
ja
mov
sbb
inc
fbstp
adc
push
iret
push
out
jmp
add
repnz
pop
or
sahf
imul
inc
xor
or
cmp
add
xchg
add
pop
push
push
adc
xchg
jb
xchg
mov
push
pop
jecxz
dec
jecxz
pop
mov
cs
sbb
pusha
add
add
nop
jmp
clc
sbb
mov
in
sbb
stos
xchg
add
lock
mov
in
inc
xor
iret
adc
add
mov
add
outs
sbb
adc
outs
scas
xor
rcl
pushaw
add
cs
dec
mov
add
pop
jo
ror
jb
scas
inc
out
mov
push
add
lods
pop
or
adc
out
cmp
or
retf
out
mov
test
xchg
iret
or
xor
aaa
or
cdq
popf
xlat
adc
sub
sbb
call
pushf
jmp
add
sbb
mov
test
aaa
add
lea
shr
shl
and
in
je
cmps
les
add
(bad)
movzx
cmp
jne
repz
or
or
test
add
jmp
mov
or
dec
nop
pop
add
test
clc
sahf
jge
mov
push
add
test
jg
adc
cmp
cmp
jns
outs
dec
fld1
fsub
adc
fwait
cmp
jge
jbe
stos
mov
pop
pop
lock
adc
jge
ss
dec
push
int3
pushf
pop
add
add
or
push
in
fnstsw
loopne
xchg
in
pop
and
les
lods
jns
and
sbb
les
(bad)
in
outs
jg
push
xlat
and
mov
push
shr
mov
and
dec
sub
adc
jmp
push
push
mov
hlt
push
stos
outs
xchg
in
push
add
inc
sbb
push
push
mov
retf
sub
dec
lea
add
ins
in
add
ret
(bad)
sub
mov
xchg
rol
hlt
div
fbld
inc
add
loopne
mov
push
lods
jmp
inc
jmp
clc
pop
addr16
dec
jne
mov
sub
fmul
rol
faddp
push
mov
ins
sub
inc
inc
sbb
sub
iret
and
add
inc
ss
lock
add
add
dec
inc
test
inc
hlt
ret
rcl
aam
adc
ret
mov
data16
retf
mov
dec
add
ficom
in
dec
push
push
arpl
lock
ins
sub
dec
mov
pop
sti
pop
ret
scas
cs
sbb
add
mov
call
mov
not
adc
fdiv
popa
enter
push
cmp
mov
(bad)
ins
je
cwde
xchg
daa
in
jnp
sbb
sub
enter
xor
xor
xor
popf
repnz
dec
sub
ins
mov
xor
mov
inc
jl
push
pop
stos
mov
rol
popa
aad
jo
or
movs
pusha
out
sbb
adc
mov
jo
pop
mov
dec
aas
cmp
or
xor
fisttp
cmp
cmp
stos
xor
mov
adc
adc
mov
xchg
add
dec
jne
xchg
rol
test
and
loopne
xchg
sti
or
shr
imul
leave
dec
and
imul
test
xlat
call
sti
fcmovb
mov
cli
push
jno
das
mov
push
cmp
jo
inc
add
or
xor
lods
push
shl
add
push
sti
adc
loope
xchg
je
add
sub
dec
mov
mov
inc
jp
add
rol
ins
gs
popa
mov
nop
pop
psubd
test
jl
imul
(bad)
mov
mov
cli
sub
pop
jg
pop
jbe
fsubr
mov
sti
outs
jne
arpl
fiadd
or
sub
push
movs
sbb
jne
enter
(bad)
jg
push
outs
push
imul
inc
lock
mov
outs
dec
jne
arpl
add
push
nop
jbe
test
mov
push
outs
sbb
sub
outs
popa
mov
jae
popa
jb
daa
and
sbb
cld
add
add
ins
ins
jns
push
or
retf
and
add
sub
push
jo
or
sub
mov
and
inc
nop
inc
lods
adc
add
outs
ss
and
push
push
shl
sub
in
shr
cmc
sahf
add
fadd
test
xor
movs
add
lahf
and
or
add
xchg
jae
sub
(bad)
mov
add
cmps
add
pop
cmp
lock
pop
sbb
leave
lds
add
iret
xor
rcr
inc
out
mov
push
jecxz
icebp
cmp
shr
sti
test
mov
xor
or
rol
mov
push
pop
arpl
sub
lea
mov
mov
fs
cmp
aaa
mov
fs
call
add
retf
cmp
sub
jae
sub
inc
stos
add
jl
sub
add
adc
je
mov
inc
jns
dec
sub
sub
fcom
jb
push
sbb
popa
add
xor
out
test
lds
cmps
mov
addr16
sbb
je
add
inc
mov
add
es
bound
adc
aam
or
inc
gs
shl
mov
mov
xor
and
fisub
sbb
inc
push
jne
add
xchg
mov
aam
mov
push
push
or
in
pop
sub
mov
add
ret
add
in
adc
add
adc
cmp
add
jl
(bad)
aas
sbb
add
mov
and
mov
in
sbb
push
ret
gs
mov
jl
jae
add
popa
jg
pop
pusha
ret
adc
in
cmp
sub
xchg
in
fs
cli
inc
xchg
sbb
xchg
js
mov
mov
std
lahf
mov
inc
push
addr16
add
aad
pop
add
ja
ins
sbb
add
adc
mov
inc
loopne
not
ins
shr
out
xor
and
add
add
rcr
lods
and
inc
outs
add
mov
pop
pop
inc
jno
lods
pop
jp
inc
imul
and
lea
push
leave
push
or
push
inc
jmp
ud2
lds
add
xchg
test
pusha
cmp
outs
lods
sub
or
test
add
or
ja
sub
cmp
sbb
and
add
jle
and
adc
xchg
cld
push
and
push
dec
push
push
fsubr
add
in
data16
pushf
and
sub
pop
adc
mov
jnp
add
inc
(bad)
outs
inc
mov
add
fild
(bad)
rol
pusha
and
sbb
add
mov
push
and
sbb
mov
push
lea
cwde
sti
xor
rcl
sub
push
mov
dec
in
js
outs
add
jmp
enter
icebp
data16
push
jae
inc
fs
push
aam
push
jecxz
cmp
adc
dec
dec
dec
bound
add
popa
jl
daa
mov
test
sub
sbb
jp
mov
cmp
fsubr
add
push
adc
push
adc
or
jb
add
cmp
mov
push
je
mov
cdq
fnstcw
add
cs
ret
cmps
or
pop
push
ds
addr16
xor
sbb
add
add
notrack
add
jle
cmp
(bad)
inc
push
and
in
or
cmp
ss
or
add
fwait
add
ss
int3
cdq
lods
sub
pop
ror
adc
inc
add
ds
cmp
add
stos
pop
ror
and
adc
push
add
out
push
pop
data16
int3
in
add
jle
or
fmul
clc
outs
outs
mov
dec
sbb
push
add
not
push
and
pop
cmp
cmp
jecxz
mov
add
cmps
sahf
xchg
call
add
add
loopne
ffreep
pop
out
push
pusha
mov
inc
mov
ret
adc
add
xchg
cmp
push
or
jnp
and
cwde
cmp
add
pop
(bad)
push
inc
and
or
push
push
out
push
add
xchg
add
adc
sub
jae
inc
cmp
sub
cmp
sbb
pushf
ret
(bad)
push
mov
pmulhuw
in
sub
sub
in
in
cs
adc
in
in
adc
adc
in
in
push
pop
sbb
in
in
sbb
sbb
pop
out
in
pop
add
cmp
out
test
mov
lea
(bad)
daa
movsx
xor
test
aas
add
jb
jb
jmp
test
sub
shr
cmp
push
test
add
add
ret
pop
ror
dec
pop
adc
xchg
pop
xor
pop
(bad)
call
xor
cmp
mov
xchg
mov
setno
mov
add
push
adc
arpl
mov
cmp
aas
pop
or
jmp
push
ret
mov
dec
sub
xor
not
mov
adc
mov
xor
pusha
add
hlt
pop
pop
xchg
retf
daa
add
sub
loop
add
sbb
sub
cmp
pop
adc
adc
add
iret
xlat
das
test
ret
fmul
fwait
cdq
fadd
test
(bad)
retf
cmp
mov
aad
mov
mov
je
fimul
out
pop
jle
adc
pop
push
sbb
or
xchg
dec
or
pusha
lahf
adc
mov
push
sub
es
jp
mov
jo
push
call
in
pop
mov
scas
frstor
mov
mov
mov
cmp
addr16
mov
dec
mov
shl
fdivr
call
xchg
xor
mov
mov
or
cmp
adc
arpl
fucomip
repnz
mov
mov
sub
inc
or
imul
inc
bound
cld
inc
jmp
cmp
cmp
or
hlt
hlt
and
xchg
(bad)
mov
je
sbb
mov
mov
inc
sbb
js
pushf
and
cld
adc
fidiv
fadd
xchg
enter
call
sti
cs
inc
pop
nop
pop
sbb
adc
sbb
mov
cmp
in
cmp
icebp
std
mov
or
hlt
mov
jle
mov
mov
es
push
jne
out
fidiv
xchg
dec
jmp
or
and
pop
add
add
pop
and
pop
fiadd
inc
in
jne
mov
cdq
sar
or
push
int3
aaa
int3
xor
add
jmp
std
mov
movs
popf
ffreep
loope
icebp
fdivr
js
shl
mov
pushf
pop
or
test
popf
fidivr
fdivr
mov
xchg
clc
jne
mov
adc
dec
sub
mov
cdq
add
mov
lea
pop
or
rcl
sub
cmp
mov
ja
dec
(bad)
mov
or
or
add
jmp
adc
xchg
leave
daa
inc
jb
cwde
cwde
mov
jns
adc
test
xor
pusha
pop
in
mov
mov
or
cmp
mov
jmp
test
ins
pop
push
pop
nop
leave
xchg
mov
inc
mov
repz
mov
pop
pop
enter
mov
leave
je
ss
or
or
ss
push
xchg
sub
jg
inc
sbb
mov
mov
mov
fs
dec
and
xor
and
jne
add
xchg
hlt
add
dec
mov
fisub
jmp
mov
push
pop
push
add
add
hlt
or
je
xchg
js
inc
test
sbb
jo
sar
mov
aaa
retf
shr
xor
jae
or
and
xchg
pop
fsubr
add
pop
jnp
or
push
je
fsubr
lock
in
sbb
pop
out
dec
adc
xor
adc
in
add
sbb
or
ret
or
adc
pop
fdiv
sbb
mov
jmp
dec
cmp
sub
popa
jmp
push
sbb
les
or
or
or
mov
or
les
pop
cmc
add
loopne
hlt
mov
inc
rol
jle
mov
xor
mov
nop
jbe
jp
mov
pop
add
test
stos
mov
int
in
add
cmp
dec
lock
(bad)
(bad)
lock
pushf
sub
dec
mov
fild
mov
(bad)
je
push
loope
inc
pop
jle
into
or
fsub
push
iret
xchg
mov
mov
dec
xor
test
nop
xor
mov
push
(bad)
loopne
or
adc
clc
jmp
arpl
mov
bound
mov
idiv
adc
push
mov
ins
sbb
fisttp
mov
fs
adc
sahf
bound
mov
fiadd
push
pop
ins
or
js
pop
mov
or
ja
jbe
xchg
xchg
ds
popa
sbb
pop
pop
ret
inc
imul
fs
sub
jp
pop
jnp
mov
sbb
or
popa
ss
call
data16
test
jle
ficomp
pusha
daa
push
or
mov
push
jb
sbb
sub
add
call
and
adc
pushf
sar
imul
adc
cmp
adc
loope
xchg
(bad)
xchg
(bad)
push
cmp
add
dec
and
test
add
out
mov
mov
aaa
adc
mov
and
fwait
aas
das
or
pop
push
cmps
outs
add
or
dec
cs
in
scas
das
addr16
add
sub
add
pop
pusha
das
mul
js
add
sub
aaa
dec
test
xchg
push
sti
push
mov
aaa
aam
pop
lods
mov
out
jle
daa
nop
pop
pusha
neg
xor
cmps
daa
xor
xor
aaa
ja
call
jnp
or
inc
mov
pop
out
(bad)
cmp
or
adc
hlt
inc
dec
movs
daa
and
cld
mov
fimul
test
push
push
jl
and
inc
(bad)
xor
test
pop
lock
dec
clc
push
add
push
int3
mov
les
rcr
mov
or
dec
mov
dec
test
pushf
fmul
ror
sbb
inc
cmp
mov
xchg
xor
add
movs
xor
ret
imul
sub
push
jl
jne
aas
loopne
fs
and
adc
mov
fadd
add
in
jnp
xchg
fdivr
ror
sbb
les
les
jle
lds
inc
add
add
cmp
and
shr
xor
loopne
lock
hlt
pop
jmp
or
ret
int3
inc
add
out
xchg
mov
mov
mov
call
and
sub
xchg
fcomi
lock
push
imul
mov
mov
jo
shr
ins
sbb
out
xchg
inc
pushf
and
adc
add
inc
movs
jmp
(bad)
sub
leave
mov
dec
and
fwait
sbb
xor
add
scas
jno
(bad)
hlt
mov
ror
and
xchg
jo
nop
cmp
shl
cld
mov
mov
(bad)
sub
add
dec
test
inc
pop
sbb
movs
push
mov
lods
lods
lahf
sub
imul
add
pop
sbb
cld
(bad)
cwde
mov
sub
sbb
xor
aaa
cmp
sahf
adc
or
sub
loopne
sub
adc
sbb
cli
mov
mov
push
jmp
add
pusha
mov
pop
ror
mov
pop
sbb
lock
(bad)
sbb
leave
xchg
mov
stc
xchg
arpl
push
mov
and
movs
cdq
test
rol
add
test
adc
pop
xor
mov
mov
test
enter
lods
add
mov
jne
or
dec
mov
shl
scas
sbb
jmp
add
inc
je
sub
or
mov
dec
ins
xor
mov
xchg
test
inc
mov
mov
inc
or
or
rcr
loopne
push
xor
out
pushf
enter
or
(bad)
sbb
sti
push
push
(bad)
dec
ret
cli
jns
adc
cmp
(bad)
stos
lock
or
int3
inc
iret
jmp
data16
mov
dec
or
xchg
lock
jne
pusha
add
sbb
sbb
loopne
sbb
cmp
mov
jae
xchg
pop
aaa
push
es
or
jne
test
je
adc
jecxz
sub
aad
xor
and
call
int3
pop
leave
mov
add
sti
sub
add
add
dec
or
or
xor
stos
lea
dec
lods
cld
mov
push
xor
adc
xor
jo
test
xchg
lock
jb
test
outs
sbb
or
clc
xor
fwait
xor
xor
or
ds
jo
cmp
mov
sub
lods
mov
enter
sbb
enter
inc
repnz
add
pushf
sbb
popf
mov
test
or
test
xor
xlat
ja
jns
dec
or
cmc
jge
push
test
mov
adc
pop
xor
jg
adc
into
or
mov
adc
adc
and
xor
jno
ret
inc
jae
js
js
jns
jnp
popa
test
jge
jle
dec
xor
lock
push
push
push
add
inc
out
push
test
push
add
sahf
out
repz
sub
out
adc
adc
pop
adc
inc
sub
fcomp
dec
test
add
pusha
push
fabs
sbb
loope
cmp
sahf
movs
or
mov
fsub
and
or
les
test
cwde
xchg
xchg
and
jnp
jo
xchg
nop
xor
test
(bad)
xchg
push
fwait
add
mov
call
es
sub
jg
and
mov
push
mov
test
push
pop
loop
inc
inc
push
popa
cwde
jo
cmp
inc
dec
movs
repnz
jae
add
push
lea
adc
pop
sub
adc
pop
inc
add
nop
js
adc
pop
pop
mov
sub
rcr
pop
jo
cdq
jne
mov
push
mov
out
or
iret
jnp
test
adc
push
jae
xchg
lea
nop
push
loope
call
nop
push
clc
pop
jp
dec
and
clc
push
mov
xchg
jno
or
(bad)
popa
adc
xchg
fs
clc
lds
popa
xchg
pop
xchg
or
push
and
dec
dec
ins
and
pusha
test
inc
test
mov
lock
fdiv
imul
pop
adc
xor
and
sbb
fwait
cmp
xor
stos
fild
(bad)
xor
mov
mov
gs
mov
add
inc
test
in
stos
xchg
imul
jp
push
push
xor
jecxz
pop
jno
(bad)
push
inc
push
push
and
fsub
sub
inc
pop
sbb
mov
pop
xlat
gs
ficomp
mov
int3
bound
cs
jnp
in
sbb
add
lahf
mov
loope
push
cmp
add
loop
test
leave
push
add
push
test
jo
in
pusha
dec
ror
and
cli
sbb
dec
test
jl
inc
xor
in
sub
adc
dec
xchg
data16
pop
xlat
mov
lahf
clc
jne
dec
lock
xor
jne
dec
clc
loopne
scas
sub
fstp
js
ret
sahf
aam
mov
mov
imul
dec
adc
shl
cmp
fcom
jmp
pop
push
mov
loopne
sub
in
es
scas
sbb
or
fild
adc
mov
mov
sbb
pushf
mov
call
xchg
jnp
jns
adc
push
daa
test
mov
push
std
cmp
mov
push
int
mov
sbb
fdivr
xor
out
lock
push
or
mov
push
or
das
xchg
pushaw
sbb
(bad)
pop
or
push
fadd
mov
jnp
sub
jnp
xor
lock
add
jno
cwde
xor
cmc
fadd
addr16
loope
push
fadd
pop
int
push
inc
cmp
leave
mov
cdq
sub
push
add
push
cmp
sar
(bad)
push
inc
outs
ja
ins
outs
popa
fs
jae
imul
popa
imul
(bad)
popf
pushf
add
or
imul
xor
nop
idiv
je
cmps
not
clc
mov
into
or
add
mov
add
mov
dec
push
mov
sub
or
clc
cmp
sbb
sub
cmp
jno
fsubr
popa
xor
mov
and
xlat
sbb
jae
es
cmps
fdiv
push
push
js
mov
add
lea
add
pushf
dec
mov
or
fsubr
aas
mov
push
or
lock
clc
enter
adc
push
ja
test
push
sub
sub
fdivr
(bad)
cmp
mov
sub
or
cmc
lods
cmp
cmp
test
rol
push
push
aam
test
sbb
dec
sbb
pop
fiadd
push
and
addr16
or
add
pop
out
adc
shl
pop
bound
fdivp
push
jp
xchg
push
add
or
add
pop
cmp
mov
test
js
mov
dec
push
jns
mov
mov
test
aad
(bad)
cmp
jne
mov
jmp
add
dec
jne
mov
mov
or
add
mov
mov
sbb
or
fcmove
enter
and
aaa
push
mov
rcr
xlat
mov
addr16
fmul
mov
push
mov
or
into
lds
js
push
fstp
sahf
push
sbb
test
sub
mov
xor
xor
mov
movs
imul
cmps
(bad)
popa
pop
jo
addr16
stos
or
adc
(bad)
int
mov
out
les
jne
push
fsubr
sub
rcl
mov
loopne
mov
int3
inc
sar
ret
mov
add
cmp
jne
inc
push
test
sar
or
adc
add
rcl
in
mov
push
or
push
mov
fs
and
xlat
sbb
bound
add
mov
xchg
xor
adc
bound
ret
add
adc
test
je
sub
ss
mov
sbb
mov
mov
mov
dec
test
cmp
cmp
adc
movs
xchg
mov
xor
lds
sbb
pop
cmp
shr
inc
jge
in
sahf
mov
cmp
add
inc
sbb
je
push
jo
jns
dec
fcomp
pop
call
sar
shl
loope
mov
pop
in
mov
clc
sbb
xchg
add
adc
pop
enter
add
or
call
dec
add
add
cmp
into
(bad)
jnp
mov
and
and
stos
xor
adc
xchg
out
mov
jmp
mov
xor
sub
add
jo
cmp
fidiv
mov
mov
dec
xchg
push
or
pop
xor
cwde
mov
sub
mov
xor
fild
sbb
out
mov
xor
push
or
cmp
mov
enter
fldenv
and
mov
pop
adc
sub
jle
dec
and
dec
mov
shl
lods
adc
adc
daa
mov
mov
jge
ja
adc
adc
xchg
aad
in
jb
lds
dec
in
or
push
and
cwde
add
ror
sub
(bad)
test
sub
mov
ret
stos
sbb
test
(bad)
and
daa
daa
cmps
fstp
outs
(bad)
mov
add
xor
pop
inc
add
pusha
xor
inc
push
pop
or
xor
inc
ret
or
sub
ror
cmp
mov
outs
out
arpl
inc
nop
test
das
mov
or
out
pop
inc
popa
mov
pop
push
loope
push
cs
scas
mov
pop
and
scas
loop
mov
scas
das
ret
imul
pop
jo
mov
xor
rcl
sbb
(bad)
imul
cmp
push
adc
push
leave
push
cli
sub
sbb
ss
add
push
mov
add
add
add
push
sub
aas
cs
adc
or
sub
pop
dec
jae
out
shl
fdivr
or
gs
or
pop
mov
outs
ret
lea
pop
cli
adc
mov
jo
sub
jne
xor
sti
or
shl
and
sbb
pop
or
push
out
hlt
mov
sbb
mov
aam
xor
mov
imul
pop
data16
pusha
and
mov
cwde
in
push
jmp
mov
inc
sub
mov
cld
pop
sub
jmp
ret
(bad)
inc
pushf
dec
add
mov
jecxz
rol
sbb
es
jmp
mov
aam
popa
rol
or
arpl
(bad)
clc
add
sbb
cld
aaa
pusha
xor
jg
pop
add
mov
dec
es
xchg
pop
jo
adc
cmp
(bad)
add
mov
push
mov
sub
inc
xchg
jbe
inc
xor
add
mov
ret
loop
add
rol
dec
jne
jge
(bad)
jg
cmp
jne
movzx
add
(bad)
mov
rol
into
cmp
jne
mov
add
popf
pop
jnp
js
js
sub
movs
call
jmp
inc
pop
jne
add
sbb
jne
fs
jmp
adc
dec
aas
xchg
mov
push
mov
push
dec
sbb
xchg
sub
xchg
and
lods
sbb
das
push
cwde
jae
mov
inc
nop
and
jo
into
out
xchg
add
scas
rcr
scas
xchg
push
(bad)
lock
push
inc
leave
mov
xchg
jmp
mov
mov
and
jl
inc
sub
lea
sar
std
push
lock
jne
dec
ss
or
loopne
mov
fnsave
jge
stos
inc
dec
jne
out
xchg
cs
inc
and
idiv
movs
mov
repnz
dec
(bad)
mov
cmps
mov
cmps
imul
(bad)
jo
test
jne
das
adc
pop
lock
push
sbb
data16
jmp
arpl
pop
int
arpl
fs
sbb
push
and
add
cli
ret
inc
add
(bad)
(bad)
lahf
in
loopne
or
mov
loope
adc
push
adc
mov
stos
push
sub
cwde
push
mov
lahf
stos
inc
pop
pop
xor
mov
lea
push
or
or
sbb
push
rol
or
ret
inc
rol
inc
daa
xchg
add
xor
sbb
loop
xchg
pop
popf
jmp
stos
test
mov
mov
and
cli
out
jnp
xchg
ss
cmp
scas
ror
cmp
pop
mov
add
xchg
out
push
sub
or
test
push
nop
lds
mov
fiadd
xchg
fmul
cwd
push
jl
inc
rcl
sub
adc
jne
movs
pop
xor
ins
(bad)
sbb
cmp
fstp
call
xchg
mov
or
lock
add
fld
cmp
les
loope
mov
enter
std
jg
hlt
add
add
sub
lock
xor
sbb
sbb
std
sub
add
add
inc
je
xchg
mov
pop
cmp
mov
xor
push
js
cwde
adc
icebp
inc
jg
pushf
inc
out
imul
add
call
sti
cmp
jo
push
pop
aaa
icebp
sbb
or
int3
fiadd
inc
ret
or
xor
(bad)
lea
sub
hlt
mov
pop
push
mov
push
dec
enter
mov
sbb
mov
shr
popa
dec
sbb
sbb
arpl
leave
ins
mov
js
add
push
je
sbb
pusha
and
sub
lea
add
add
sar
pop
pushf
and
or
test
cs
xchg
xor
mov
and
add
push
jns
dec
mov
shl
inc
push
fstp
jge
jge
popf
dec
pop
frstor
fsub
out
sbb
and
fabs
fcomp
loopne
jae
mov
jo
add
ret
sar
or
(bad)
aad
adc
add
jp
pop
add
add
fadd
ja
(bad)
into
and
mov
cmps
add
add
push
adc
fisubr
xor
add
aas
test
sub
in
dec
add
jb
mov
test
inc
xchg
aam
xchg
push
inc
test
xchg
jmp
aam
loopne
mov
cmp
mov
jge
jo
loopne
push
out
pop
cmp
sub
test
ror
pop
(bad)
mov
(bad)
xor
cmp
call
inc
retf
mov
or
sub
jb
dec
pop
mov
test
jp
lods
imul
mov
add
mov
clc
je
js
jae
sub
mov
ss
jp
sbb
xor
lods
mov
retf
cmp
data16
cmp
inc
and
shr
cmp
daa
lock
jbe
push
and
ss
mov
dec
sub
scas
scas
pop
adc
in
movs
mov
es
xchg
mov
cs
mov
pop
push
pushf
add
sub
jmp
mov
add
sbb
add
mov
aaa
jbe
add
test
out
fcomp
sub
out
cmp
je
dec
je
aad
movs
cmp
fld
xlat
push
xchg
mov
adc
xchg
sbb
sub
nop
jmp
test
push
sub
mov
or
loopne
mov
daa
mov
imul
mov
xchg
lea
dec
xchg
ja
stc
jae
call
push
xor
push
push
pop
xchg
mov
fwait
pop
fwait
jo
jbe
xchg
adc
cmp
cs
pop
or
xor
xchg
pop
sti
pop
fisttp
(bad)
sti
push
sti
adc
and
sti
adc
lock
aas
xchg
rcl
add
pop
aas
pusha
add
loopne
add
and
arpl
inc
jne
rol
inc
nop
mov
rcr
loopne
sti
std
movs
data16
lea
xchg
push
mov
dec
and
add
dec
in
cmp
jmp
or
mov
jne
enter
mov
xchg
push
in
aam
push
jmp
pushf
mov
lea
test
jg
or
adc
xchg
in
rol
arpl
xlat
jbe
pop
mov
repz
mov
or
dec
enter
sti
adc
push
mov
jmp
outs
inc
cmp
fmul
div
push
pop
add
movs
popf
add
pop
jmp
dec
rcr
outs
sub
call
cs
loopne
sbb
and
mov
jg
pop
(bad)
cmp
mov
dec
pop
fistp
dec
pop
pop
push
and
adc
aaa
xchg
call
push
push
pop
push
js
popa
into
jb
push
push
dec
and
addr16
jbe
in
es
pop
fwait
iret
outs
cs
dec
int3
add
pop
fisubr
mov
pop
and
push
push
rol
lock
jl
jmp
add
mov
test
pop
jmp
mov
leave
push
add
sub
add
and
mov
aas
(bad)
xor
push
pusha
test
arpl
mov
das
and
inc
test
test
test
adc
sbb
int
adc
mov
scas
push
sub
or
adc
(bad)
mov
shl
xchg
or
out
mov
mov
leave
je
pusha
cmp
fild
int3
imul
int3
repz
and
and
jb
retf
jno
fbstp
sub
fld
xor
jbe
jl
sub
call
pop
mov
in
mov
sbb
cmp
(bad)
in
mov
fcomp
(bad)
cmps
dec
sub
int3
pop
pusha
cwde
mov
adc
or
and
(bad)
test
mov
aas
cmp
sbb
stc
adc
dec
(bad)
xor
mov
and
out
into
add
cmc
adc
dec
fcomp
inc
je
sbb
(bad)
clc
or
jo
cld
or
nop
ja
mov
jbe
aas
fadd
sbb
shr
cmp
xchg
sbb
push
add
or
popf
inc
repz
clc
sbb
retf
inc
pop
push
jnp
xor
pop
xor
xchg
sub
dec
es
rcl
imul
in
add
mov
cmps
jle
or
mov
mov
(bad)
fbstp
adc
jbe
jmp
jle
fild
fild
pop
fdivrp
fmul
cmp
pop
jmp
dec
sub
inc
xlat
out
add
hlt
lods
adc
daa
les
and
ins
adc
repnz
sub
fsub
clc
inc
fstp
(bad)
hlt
add
add
sbb
retf
mov
call
repnz
loopne
pop
outs
fist
jecxz
in
call
push
shr
lds
adc
ror
add
add
cmp
jo
or
or
lods
scas
jmp
pop
sbb
fldcw
or
inc
cmp
lods
add
inc
pop
mov
fs
jae
add
and
ret
push
ret
lock
pop
add
fwait
loope
loope
fwait
cmp
add
sub
or
mov
movs
xor
cdq
ret
pop
push
pop
js
cmp
retf
aad
adc
loope
js
xlat
push
pop
mov
imul
fcom
mov
jp
fnsave
dec
je
mov
rol
mov
cli
cmovs
aaa
adc
stc
dec
lods
dec
out
pusha
stc
pop
in
ror
inc
jge
add
mov
cmp
lods
mov
(bad)
nop
inc
mov
adc
or
xchg
sbb
out
enter
fbstp
or
or
int
and
jb
imul
or
das
push
pop
sar
pop
push
or
aad
or
pop
add
ret
(bad)
fdiv
and
mov
push
or
test
push
add
add
pop
jmp
inc
adc
sbb
imul
push
(bad)
pop
xchg
out
fdivr
arpl
push
or
in
sbb
add
add
pop
mov
fcomp
adc
stos
dec
or
fcmove
pop
add
hlt
sub
mov
fwait
mov
cwde
cs
sbb
int3
jo
fdivr
fnstsw
jp
icebp
aam
js
push
loopne
icebp
lods
push
cmp
sub
icebp
cli
icebp
hlt
fiadd
mov
pop
dec
sub
lods
int3
push
mov
adc
inc
inc
sub
fbstp
sub
dec
or
push
arpl
nop
enter
cmp
sbb
jmp
cmp
loope
mov
mov
and
hlt
rcl
stc
pop
iret
les
popa
sub
test
daa
xlat
xor
popa
sub
xchg
add
iret
push
jno
mov
xor
xlat
add
mov
add
aas
adc
bound
scas
addr16
mov
ds
push
call
adc
and
or
fimul
aad
scas
dec
or
adc
dec
hlt
inc
je
jne
int
(bad)
push
fld
and
call
sub
mov
push
test
out
lods
aam
test
in
(bad)
enter
pop
jmp
mov
test
mov
inc
fcmovnu
test
jne
pop
pop
xchg
jl
add
rep
int3
in
jmp
dec
ds
add
jne
lods
popf
push
stos
jp
add
add
jmp
dec
in
movd
push
mov
dec
lock
cmc
cmc
sar
daa
fidiv
mov
push
jne
stos
sub
movs
and
lahf
mov
mov
mov
adc
not
into
aas
les
daa
jo
or
test
push
mov
cmp
call
imul
dec
or
push
push
out
cmp
sahf
out
cmps
rcl
lds
fst
ja
mov
addr16
add
sub
shl
sub
in
mov
mov
mov
dec
ss
or
xlat
outs
pop
push
push
add
call
fdiv
mov
mov
shl
es
lods
fucomip
ins
inc
in
dec
cmp
adc
popa
movs
fisttp
in
xor
mov
mov
scas
cmc
leave
xchg
mov
dec
repnz
xor
mov
mov
cmps
cmp
adc
(bad)
call
xchg
cmp
jne
sbb
adc
add
js
ret
mov
sub
mov
push
jl
(bad)
push
test
sub
div
call
add
data16
bound
pop
nop
js
fmul
into
je
sub
inc
xchg
mov
sbb
sub
dec
dec
add
mov
push
pop
xchg
mov
movs
xchg
mov
xor
add
(bad)
repz
xor
sbb
mov
es
add
bound
mov
cmp
adc
mov
push
aad
xchg
mov
xor
retf
or
mov
cmp
inc
mov
mov
je
cmp
jle
pushf
or
sub
and
daa
mov
adc
ins
inc
xchg
inc
shr
add
lock
das
(bad)
mov
dec
sub
jecxz
or
imul
div
cmp
xchg
pop
fxrstor
imul
pusha
and
pop
jmp
dec
inc
jae
imul
xor
push
cmp
cmp
cmp
xchg
dec
adc
xor
mov
adc
cmp
cmps
ins
pop
stos
fsub
sbb
mov
bound
test
adc
cwde
repnz
shl
pushf
adc
sub
jbe
add
sbb
push
sbb
xchg
jo
rcr
sar
les
call
(bad)
xor
or
adc
mov
jmp
xchg
in
mov
jl
add
adc
mov
mov
or
mov
shr
icebp
jge
push
sbb
sbb
sbb
das
test
jg
xchg
fstp
jmp
aas
jmp
fs
je
aam
dec
inc
jae
and
imul
xor
fdivr
jmp
jmp
mov
adc
adc
jmp
(bad)
inc
(bad)
mov
mov
adc
rcr
movs
(bad)
or
repz
aas
outs
push
fld
out
loopne
fstp
repz
sbb
call
mov
xor
inc
and
and
ja
mov
or
and
scas
inc
add
ds
jae
push
mov
mov
mov
adc
push
cs
or
mov
js
mov
in
add
das
je
fs
fcompp
push
mov
out
push
add
add
push
mov
or
mov
mov
nop
jne
jae
push
xor
adc
jge
pop
sub
mov
call
xchg
xchg
adc
vmovss
adc
dec
xlat
(bad)
inc
mov
or
mov
test
adc
jecxz
nop
enter
jp
mov
fsubr
icebp
mov
dec
mov
mov
test
out
hlt
mov
and
push
sbb
xchg
loop
test
dec
test
jge
loopne
jl
inc
xor
cmp
jne
fdiv
ror
shl
sub
sti
rol
loope
inc
pop
dec
mov
fs
and
mov
dec
jne
add
adc
(bad)
daa
test
sub
test
or
and
or
out
mov
add
aas
sbb
sub
js
adc
imul
sbb
ins
in
adc
and
sub
daa
xor
popa
pop
fwait
pop
push
mov
cmc
mov
adc
dec
adc
mov
lods
hlt
push
popf
mov
pop
dec
and
cdq
retf
test
loop
aaa
xchg
rcl
mov
adc
xor
adc
mov
aas
nop
sbb
add
pop
addr16
push
aaa
inc
stos
je
add
xor
mov
jne
jmp
sub
mov
fdivr
jg
xchg
das
cdq
pusha
test
jb
mov
fidiv
and
movs
shr
and
mov
mov
inc
add
scas
dec
xlat
call
cmp
push
add
les
sub
xor
mov
fcom
push
mov
pop
mov
pop
scas
outs
pop
sub
sub
pop
pop
fidiv
dec
jnp
add
push
and
jg
jbe
sub
sub
retf
sub
jbe
or
add
jge
mov
adc
push
lock
in
add
sbb
jae
fs
dec
adc
dec
scas
dec
mov
aas
cmp
jne
adc
sbb
adc
add
inc
pop
add
or
es
or
sbb
(bad)
xor
aas
loopne
imul
or
xchg
and
pop
iret
out
add
ret
pushf
sbb
mov
int3
jae
(bad)
sub
ror
es
sub
inc
add
iret
test
pop
sub
femms
aaa
pop
mov
sub
cmc
pop
rol
pop
sub
pop
fadd
mov
loop
in
inc
test
(bad)
addr16
out
xlat
sub
jo
scas
rcr
test
shl
loopne
mov
jb
test
adc
and
cmc
mov
std
push
or
scas
div
clc
stos
adc
enter
clc
add
mov
push
push
fmul
sti
test
adc
xor
cmps
push
fidiv
jne
icebp
add
push
xchg
mov
jo
pop
or
sbb
add
add
(bad)
xor
mov
test
sete
test
je
mov
mov
and
lea
mov
syscall
inc
mov
stos
cld
les
cmovae
fcomp
mov
jo
push
out
in
je
xchg
hlt
enter
dec
xor
sar
loopne
enter
adc
and
add
(bad)
aas
mov
enter
ret
dec
dec
in
or
mov
inc
mov
mov
sub
dec
mov
clc
jne
shr
add
pop
shl
push
push
push
xor
outs
nop
inc
or
out
cmp
inc
and
cmp
or
cmp
xchg
dec
jbe
test
es
popf
dec
add
lods
lods
mov
es
cmp
mov
in
rol
cmp
jmp
jbe
movs
jmp
adc
jmp
mov
(bad)
xor
mov
xor
outs
and
fcmove
pushf
pushf
adc
outs
mov
jnp
dec
rol
mov
mov
jl
adc
outs
cwde
mov
pop
add
xor
fstp
ins
mov
nop
es
sti
and
mov
push
lods
sub
jmp
add
daa
pop
xchg
mov
mov
scas
sbb
sub
mov
ss
jge
je
add
push
sbb
aad
push
dec
mov
pop
and
test
outs
fmul
or
aas
cmc
push
test
xchg
test
or
lock
aaa
(bad)
adc
adc
mov
mov
out
pop
jns
shr
sub
push
(bad)
out
imul
sbb
mov
jbe
ja
mov
adc
and
pop
dec
pop
rcr
loop
fimul
fcomp
dec
out
jmp
jbe
fwait
jmp
adc
xlat
add
sub
mov
int3
inc
jae
mov
lds
pop
adc
push
outs
addr16
sbb
orps
es
or
and
addr16
xlat
lock
or
sbb
daa
mov
mov
mov
mov
mov
ins
fiadd
push
add
add
pushf
adc
add
outs
clc
lea
mov
inc
add
push
sub
add
ins
fstp
int
je
inc
clc
ds
mov
imul
ret
add
adc
mov
cmp
inc
mov
add
mov
push
fs
lahf
out
push
mov
cld
imul
cs
cmps
inc
add
push
ins
pop
inc
add
fadd
sti
test
cmps
dec
jle
pop
ds
mov
rcr
mov
js
add
outs
xchg
dec
cmp
ret
xchg
jl
in
jge
push
cmp
mov
aam
movs
push
mov
out
inc
dec
dec
add
lods
xor
add
(bad)
xchg
jl
shl
ds
imul
mov
xor
enter
fmul
push
loope
in
xor
dec
hlt
cs
jmp
xor
dec
xchg
cmp
(bad)
sbb
or
push
inc
outs
push
das
movs
out
fsubr
les
dec
adc
in
pushf
imul
fwait
sbb
pop
sub
and
xor
sbb
fs
pop
fs
in
mov
push
hlt
iret
push
adc
mov
call
mov
aaa
inc
in
ds
sbb
mov
add
pop
fs
dec
add
pop
pop
or
or
push
and
call
push
add
outs
sahf
out
fld
cs
call
jl
mov
mov
nop
xor
loope
cld
mov
inc
mov
je
in
(bad)
pop
cs
push
jbe
cli
in
nop
xor
push
xchg
sbb
aaa
(bad)
sar
ror
fisttp
cmp
and
push
push
in
call
xor
mov
dec
call
add
cmp
mov
push
sti
or
cwde
inc
pop
xor
sub
mov
push
int3
jge
sbb
jge
les
mov
jl
test
xchg
jl
mov
movs
jle
in
jmp
hlt
std
scas
hlt
jle
pop
popa
add
cmps
stc
mov
mov
pop
gs
or
add
mov
les
pop
push
pop
jo
mov
jl
mov
mov
lock
mov
cmp
js
into
ret
pop
ret
fbstp
add
ret
(bad)
sub
push
add
les
popa
test
add
push
add
out
outs
push
cmp
pop
inc
mov
fs
pop
xchg
das
add
sbb
mov
pop
cwde
ins
shr
cmp
adc
push
xor
pop
ins
test
add
ds
(bad)
mov
adc
jle
call
daa
pop
mov
lfs
fist
inc
(bad)
loope
loop
in
cmp
ss
push
cmps
mov
test
mov
inc
cmovg
repz
sbb
in
adc
fnstsw
cmps
xor
jo
xchg
mov
ror
push
in
clc
push
iret
repz
adc
push
sub
mov
cmp
lock
cmps
fsubp
mov
daa
inc
push
adc
ds
mov
mov
adc
test
lods
dec
sti
push
inc
and
ja
jbe
and
pop
js
and
sahf
mul
xchg
lods
push
(bad)
fadd
mov
jbe
das
or
jmp
mov
ficom
daa
jl
mov
sbb
nop
outs
test
rol
das
call
and
or
push
mov
bound
pop
in
sub
mov
jo
sub
idiv
mov
enter
iret
imul
inc
push
cwde
push
ror
inc
mov
cmp
pop
xor
ds
aas
out
add
ss
push
aas
loopne
or
into
int
add
pop
xor
dec
lfs
imul
mov
pop
push
push
in
inc
mov
enter
cwde
pop
mov
push
adc
and
daa
cmp
movzx
adc
test
jecxz
push
out
ds
pushf
loopne
in
mov
dec
(bad)
push
in
push
cmp
push
test
add
out
mov
inc
test
test
push
push
addr16
xchg
outs
in
push
sbb
fstp
adc
xor
nop
aaa
push
loopne
pop
dec
push
ins
pop
push
into
ss
int
sbb
add
aam
push
sub
fisttp
and
scas
aad
addr16
pop
add
pop
shrd
pop
nop
arpl
clc
mov
fdivr
or
(bad)
int
hlt
out
add
lock
pop
push
mov
fwait
int
mov
xor
inc
ins
fcompp
mov
outs
cld
jae
clc
adc
mov
add
(bad)
pop
enter
push
dec
pop
fcomp
mov
xor
pop
push
push
push
pop
adc
mov
cmp
push
in
cld
fcom
pop
outs
mov
mov
fstp
push
pop
fmul
sbb
mov
mov
push
inc
pop
mov
pop
les
or
in
xchg
fiadd
pushf
fist
ja
dec
(bad)
cmpxchg
out
push
push
imul
(bad)
ins
push
hlt
push
adc
fidiv
das
sub
push
xor
fmul
cmps
fnstcw
sub
aam
jb
in
jge
movs
jae
aam
jl
es
fcomp
in
cmp
ja
jo
test
fcomi
test
pop
sub
push
enter
add
in
xchg
lea
cmp
fcompp
data16
nop
add
xchg
ds
pop
lock
into
pop
lock
push
fwait
outs
popf
jg
addr16
loopne
sahf
sahf
lahf
push
lods
daa
in
sysenter
mov
mov
fs
fsub
fld
push
lock
jle
outs
out
call
push
ss
rol
icebp
mov
cmps
hlt
test
outs
repz
int3
cmc
sbb
jbe
js
add
ins
js
test
lock
and
push
int3
std
and
lods
cli
mov
out
push
jl
push
cmps
mov
adc
lods
and
mov
pop
push
pop
cmps
fnstcw
es
fadd
shr
add
fs
out
push
xor
push
in
xor
mov
(bad)
ss
and
cmp
(bad)
push
call
fsubr
fild
jo
mov
dec
test
inc
and
adc
fcmovnbe
into
push
xchg
jo
push
loopne
lock
out
sti
push
xchg
adc
daa
outs
mov
pop
nop
dec
in
popf
cmp
push
call
loopne
mov
xchg
sub
enter
push
inc
push
pusha
xor
xor
pop
push
imul
fld
outs
push
shr
inc
push
pushf
jae
sbb
push
out
mov
jne
add
mov
outs
test
inc
xchg
push
je
mov
ins
cmps
or
fimul
cdq
push
test
mov
into
lock
jns
loope
test
push
mov
mov
out
jge
push
mov
mov
mov
xchg
mov
pop
mov
mov
loopne
cmp
(bad)
outs
iret
cmp
loopne
push
shr
ror
inc
aam
xchg
pop
jecxz
shl
fsub
pop
out
and
add
mov
inc
stos
mov
push
mov
ins
out
push
sub
push
mov
test
push
cwde
pop
sub
jl
adc
push
cwde
ins
add
enter
shr
inc
push
and
sub
push
je
ss
dec
adc
fadd
cmp
iret
pop
add
or
and
fistp
inc
adc
push
out
and
enter
mov
push
lock
in
push
nop
out
data16
ins
dec
lock
icebp
xor
sub
xor
std
(bad)
inc
dec
push
add
fwait
int
push
test
add
add
push
int3
or
inc
pop
scas
or
or
lods
adc
push
ins
je
pop
call
fwait
ins
in
push
in
sbb
sbb
inc
fmul
ds
lods
sbb
push
push
cwde
and
and
out
ins
push
adc
push
sub
call
push
enter
test
js
mov
push
inc
mov
loopne
dec
push
push
pushf
dec
mul
or
dec
outs
dec
pop
push
pop
les
ret
mov
push
bound
imul
push
push
mov
mov
jo
ja
js
jo
inc
adc
int
hlt
mov
jle
lods
inc
imul
push
push
push
or
jo
push
xchg
mov
dec
jbe
push
xchg
mov
xor
dec
and
es
mov
into
lods
push
dec
scas
sub
mul
mov
xchg
xor
ret
xor
aaa
imul
fistp
push
adc
pop
adc
fcomp
dec
mov
dec
push
mov
jnp
clc
push
test
pop
push
pop
push
pop
push
out
inc
repz
cwde
pusha
xor
fadd
ins
add
mov
xlat
icebp
xor
cmp
mov
ins
or
sub
int3
push
daa
les
inc
ins
iret
push
movs
rol
push
or
aam
push
fadd
xor
xchg
ret
data16
push
in
loope
in
out
in
pop
ja
or
push
scas
inc
icebp
push
repz
push
div
(bad)
push
sub
pop
cld
out
push
fldcw
(bad)
jmp
add
add
movs
add
inc
mov
andps
inc
adc
adc
push
inc
adc
sbb
sbb
sbb
or
fldcw
mov
push
pusha
and
dec
and
mov
xor
in
xor
jo
add
cs
mov
fcmovnu
fisttp
push
cmp
out
push
fs
mov
push
not
push
push
sbb
call
lock
sub
ins
pop
sub
lock
ss
push
jl
shl
jns
(bad)
arpl
push
push
outs
ss
sub
clc
push
movs
jo
pushaw
je
jbe
cmp
mov
cmps
test
not
fimul
mov
inc
xchg
xor
loopne
sbb
sahf
push
add
lods
mov
mov
out
push
dec
ds
mov
clc
les
fidiv
pop
or
mov
push
aam
inc
imul
mov
cmps
inc
inc
add
es
adc
push
adc
push
pop
mov
call
jbe
xlat
pop
jl
ja
pop
or
sub
mov
into
js
or
daa
pusha
sahf
ds
cmp
jo
mov
ror
push
cs
mov
je
sbb
pop
pop
out
push
jo
aaa
pop
bound
call
push
stos
lods
pusha
out
test
pushf
jg
lahf
mul
loopne
add
push
and
clc
fucomip
dec
sbb
das
in
push
add
fcom
popf
dec
out
pop
xor
pop
out
pop
jnp
dec
push
pusha
push
js
nop
push
lods
push
les
in
bound
pop
pop
frstor
test
mov
fdiv
bound
push
mov
inc
jg
push
or
fimul
(bad)
xchg
push
ja
mov
inc
pop
mov
adc
cmp
push
adc
add
adc
or
iret
push
inc
jo
adc
pop
je
xor
adc
inc
lock
jns
loope
mov
icebp
push
push
loopne
addr16
clc
or
out
inc
nop
cmp
repz
push
rep
mov
into
repz
and
sahf
push
mov
popa
fucomi
rcl
push
cmc
daa
push
outs
mov
pop
pop
pushf
es
inc
xlat
xor
mov
dec
dec
fcom
fwait
pusha
pushf
outs
(bad)
and
popf
push
loopne
movs
sahf
jle
daa
fistp
push
push
fadd
shl
fsubr
or
repz
cmps
add
mov
xor
lods
push
test
stos
push
fisub
lods
push
lods
cld
test
push
scas
lock
out
cs
iret
test
push
pop
mov
mov
fcmovnu
push
lahf
int3
daa
js
push
and
push
adc
xchg
mov
push
mov
add
jl
hlt
mov
cmp
les
push
or
ror
daa
sub
scas
pop
lock
jmp
mov
push
int3
lock
repz
hlt
mov
test
xchg
js
inc
jo
mov
cmps
add
inc
rol
adc
and
pop
pshufw
xchg
push
int3
add
mov
popf
outs
sahf
mov
mov
push
pushf
cmps
push
fsub
stos
shr
inc
xchg
xor
aas
pop
shr
xchg
enter
js
mov
mov
mov
push
add
mov
mov
mov
ret
mov
fcmovnb
data16
int3
in
push
rol
test
(bad)
shl
mov
push
and
push
push
movs
xlat
cmp
faddp
rcr
fsin
fild
(bad)
fmul
jle
pop
or
loopne
loope
pop
mov
cmp
pop
sbb
inc
sahf
enter
in
cmp
sub
es
push
imul
push
lock
lods
into
cs
rol
call
test
inc
push
push
loopne
aam
dec
cmp
pop
aad
and
xchg
loope
in
ins
test
and
imul
or
push
push
int
adc
adc
sub
jl
xchg
pop
pop
xchg
lock
fcom
xlat
popf
out
ins
mov
mov
aam
in
pop
pop
pop
pop
inc
push
test
jge
out
sbb
sbb
mov
js
add
pushw
lods
(bad)
sbb
push
pop
int3
ds
sbb
sbb
push
shl
sbb
je
loopne
push
mov
pop
mov
push
popf
cmps
jge
daa
les
add
push
push
push
daa
dec
and
jmp
scas
push
(bad)
pop
mov
sbb
cwde
push
mov
ss
xchg
imul
push
pop
scas
loop
push
adc
push
pop
add
dec
js
add
push
mov
rol
mov
sets
push
pusha
mov
repz
popa
push
addr16
adc
xchg
std
in
and
fwait
dec
inc
lea
sbb
pop
add
fwait
int
push
call
sbb
shl
xor
sti
mov
rol
add
int3
fnstcw
aas
je
dec
add
or
sbb
lods
or
xor
addr16
iret
hlt
shr
pusha
and
ja
mov
imul
ins
dec
pop
push
pop
pop
bound
push
pop
fisubr
sbb
sysret
push
lods
push
aam
int
stc
push
and
mov
mov
jbe
addr16
xor
fistp
test
idiv
push
mov
or
push
cmp
int
int3
rcl
fmul
fidivr
adc
outs
fcmovnu
cmp
(bad)
jmp
xor
push
call
(bad)
ss
xchg
sbb
enter
fwait
int
sub
test
les
dec
ins
outs
mov
mov
ins
pop
aam
inc
ins
push
xor
mov
cmp
xchg
push
movs
mov
push
fld
mov
call
movs
ins
mov
ins
push
jl
pop
lods
or
cmp
inc
and
mov
shl
fcmovnu
pop
ins
(bad)
push
in
push
int
nop
shl
fs
frstor
fimul
dec
fbstp
push
ficom
or
and
inc
or
ror
je
jo
jg
mov
or
addr16
sbb
mov
cwde
pop
outs
add
int
sbb
mov
mov
mov
push
inc
inc
push
lock
fld
aas
cmp
data16
push
shl
fld
and
daa
or
push
sub
cld
sub
cmps
xor
mov
(bad)
cmp
cmp
in
mov
inc
mov
or
mov
cmps
xor
pop
shl
pop
or
lahf
push
ss
push
ins
fs
push
pop
into
jl
mov
fstp
mov
push
les
fistp
pop
mov
push
xor
data16
loopne
aam
pop
jle
sbb
adc
je
dec
add
scas
add
mov
sub
push
or
inc
les
push
mov
pop
mov
inc
pop
or
xadd
neg
push
pop
pop
jl
push
les
outs
adc
xor
aad
pop
lock
pop
add
xor
xchg
and
ins
mov
xchg
push
fadd
sub
les
daa
pop
jp
jl
(bad)
test
mov
ins
jg
mov
push
mov
dec
das
sbb
jbe
xchg
int
fisttp
daa
adc
lods
adc
stos
push
adc
dec
push
lock
lods
out
mov
mov
pushf
shld
je
ja
bound
xor
mov
sub
jg
(bad)
sub
mov
cmp
scas
push
out
jbe
shr
xor
cs
movs
fwait
scas
popf
mov
adc
push
rol
mov
imul
ror
push
mov
dec
ret
(bad)
lods
push
les
loopne
lds
push
sub
pop
xor
cmps
hlt
enter
push
retf
retf
push
or
ss
mov
into
jo
mov
cmps
mov
pmaxub
push
int3
call
pop
mov
jl
punpckhbw
nop
mov
push
or
dec
sbb
push
xchg
mov
mov
xchg
outs
xchg
push
inc
cdq
aas
rol
mov
ins
xchg
pop
test
nop
pop
pop
cwde
mov
das
nop
jb
(bad)
sbb
rcl
jbe
shl
pop
rcr
imul
outs
div
ins
out
or
mov
push
clc
popw
pop
imul
out
dec
mov
add
test
fldcw
cmp
clc
mov
push
into
jbe
loopne
cwde
scas
andps
fldenv
daa
pop
mov
push
pop
jnp
xor
push
ins
push
stc
out
mov
call
mov
push
fs
repz
push
sub
ins
ds
les
or
test
(bad)
push
mov
outs
loopne
push
iret
pop
hlt
ror
in
data16
outs
fcmovne
pop
and
push
xor
push
mov
add
mov
add
iret
sar
push
push
or
push
movs
movs
into
cmps
push
pushf
and
repz
push
mov
dec
scas
push
in
fwait
in
(bad)
movs
mov
pop
mov
in
in
repz
pop
mov
push
enter
rol
push
push
iret
push
pop
shr
movs
ins
cmp
push
mov
aas
call
push
shl
jl
(bad)
out
call
jmp
ins
out
pop
lock
repz
sub
jl
cld
outs
add
adc
inc
rol
nop
mov
add
mov
pop
sar
out
lods
push
data16
push
push
push
test
aas
aaa
ins
fwait
loope
sub
addr16
sysret
add
adc
mov
(bad)
ins
bound
sub
inc
sbb
mov
add
xchg
call
js
ins
xchg
fidivr
out
shl
and
push
mov
lahf
add
int
mov
inc
adc
dec
add
dec
pop
add
inc
pop
(bad)
fmul
pop
jbe
pop
mov
push
dec
imul
(bad)
cld
push
stc
xor
out
out
xor
xchg
or
ss
int
mov
xor
lods
in
mov
push
rcr
fs
repnz
div
aam
iret
shl
push
push
ss
int
nop
add
sbb
test
ret
ins
in
pop
or
adc
int
ret
push
sbb
inc
jo
test
pushf
push
pusha
mov
aaa
in
popf
push
outs
fld
or
fsub
call
lods
scas
fadd
loopne
push
fadd
mov
fnsave
push
in
test
dec
mov
ins
call
out
les
out
cmc
jbe
dec
stc
mov
sbb
add
cld
add
push
(bad)
mov
ins
ss
inc
or
dec
jnp
data16
pushf
sbb
sbb
nop
jo
div
fwait
sbb
sbb
sbb
and
ja
in
mov
sub
ins
sub
outs
push
(bad)
cmp
jo
clc
jg
ss
sub
pop
int
mov
xchg
push
loopne
cmp
inc
cmp
push
add
adc
mov
jnp
push
push
dec
pushf
inc
mov
outs
mov
aaa
cld
jns
sub
push
push
add
lods
test
and
das
clc
mov
sbb
lock
dec
mov
jnp
mov
pop
test
in
mov
(bad)
mov
iret
into
ss
lods
mov
mov
push
ffree
ins
add
mov
lock
pop
fldcw
and
pop
pushf
and
bound
inc
es
mov
neg
out
sub
push
and
ds
repz
pusha
int3
movs
das
mov
and
mov
xor
jbe
dec
pop
pop
pusha
push
fsub
je
inc
push
test
lahf
loopne
imul
mov
or
iret
sar
movs
or
inc
cmps
sbb
inc
jbe
mov
pushf
ins
push
rcr
mov
int
mov
pop
cmps
push
sub
push
lods
enter
bound
add
mov
push
addr16
add
movs
pop
dec
jp
mov
mov
mov
add
addr16
push
add
pop
mov
pop
mov
inc
test
(bad)
and
add
ja
pusha
or
stc
jle
and
outs
push
add
push
dec
outs
fwait
int
mov
jb
je
xor
xchg
fldenv
mov
mov
fld
push
lock
cld
test
test
mov
ins
push
push
mov
mov
test
int
rcl
pusha
fnstcw
popf
in
fcomi
loop
hlt
in
and
ds
fidiv
(bad)
in
daa
(bad)
cld
fbld
mov
outs
dec
loope
int3
loop
in
iret
sar
mov
add
push
add
ins
nop
xor
sar
pop
js
mov
or
pop
jbe
fld
mov
xchg
jge
push
adc
ins
ss
add
jl
test
aas
dec
fcmovne
dec
xor
and
push
inc
mov
faddp
cmps
test
les
xor
int
in
int3
xchg
xchg
xchg
dec
mov
push
femms
cdq
xchg
call
addr16
test
fwait
daa
and
je
xor
movs
daa
dec
stos
int
(bad)
mov
in
scas
movs
ds
mov
test
je
or
mov
lods
xchg
mov
mov
imul
mov
mov
push
lock
scas
pusha
repz
iret
repz
push
mov
adc
in
lahf
out
ds
mov
out
repz
ss
fsubr
repnz
idiv
xchg
(bad)
add
add
test
(bad)
imul
push
pushf
adc
sbb
cs
push
movs
push
fs
adc
mov
inc
inc
and
push
push
push
arpl
xlat
aam
add
sub
adc
adc
ins
(bad)
into
push
pop
add
inc
push
in
pop
int
ins
mov
xchg
dec
push
cld
jo
clc
popa
or
pop
out
push
ja
sub
inc
push
cwde
sub
fcomp
fadd
push
push
test
movs
pop
pusha
xchg
rcr
adc
mov
inc
mov
ss
pop
lock
xchg
enter
shl
push
mov
jle
sub
adc
aaa
pop
jl
add
div
push
cmp
add
loop
loopne
je
adc
pop
ror
pop
and
mov
and
push
xlat
daa
pusha
add
mov
or
test
sub
push
sub
(bad)
fistp
add
fs
lock
mov
push
sub
push
push
inc
pusha
fnstenv
inc
push
mov
fwait
int
mov
dec
fs
clc
push
jo
je
in
mov
push
in
pop
dec
pusha
ss
push
mov
stc
xor
mov
sbb
dec
int
jnp
test
ins
inc
outs
push
push
jo
jno
mov
push
push
push
jne
push
xor
push
lods
ss
sti
add
jg
xchg
nop
mov
mov
cdq
jbe
das
dec
(bad)
pop
je
pop
ins
fld
dec
xchg
push
mov
push
xchg
xchg
push
sub
add
pop
sahf
imul
int
rep
test
mov
mov
je
mov
outs
xor
ins
mov
data16
pop
call
(bad)
into
jbe
push
shr
popa
(bad)
pop
dec
data16
mov
ins
ret
arpl
aam
sub
sbb
out
jl
xor
push
(bad)
cld
(bad)
(bad)
data16
int
retf
rol
rcr
loop
adc
call
mov
pop
addr16
nop
aas
push
iret
movs
inc
push
pusha
inc
push
push
mov
adc
test
inc
lahf
pop
mov
into
mov
inc
das
in
push
clc
dec
mov
mov
push
push
xchg
sbb
fadd
mov
test
xchg
pushf
mov
mov
push
lock
mov
nop
push
xchg
pop
add
(bad)
frstor
push
dec
pop
xchg
aas
mov
jnp
lods
push
enter
pop
jl
push
xchg
and
mov
imul
je
fcom
pushf
in
outs
icebp
mov
shr
ins
lahf
cmps
ins
mov
cld
cmp
fucomi
repz
int3
adc
inc
js
mov
enter
jno
adc
js
popf
out
loopne
jae
aaa
or
ja
outs
stos
iret
ins
fsubr
push
jne
push
inc
and
inc
pop
aaa
mov
sub
das
andps
mov
push
pop
fmul
pop
in
push
sbb
test
fstp
fs
sar
push
pop
movs
xchg
mov
je
test
pushf
push
mov
add
je
fild
inc
mov
jbe
push
adc
sysret
adc
xchg
pop
inc
pop
pusha
(bad)
cmp
cmp
pushf
rcr
sub
stos
(bad)
(bad)
pop
pop
bound
mov
jo
xchg
cmpxchg
dec
dec
mov
fadd
in
shr
fsub
lods
aas
inc
jbe
dec
sti
push
test
aas
jl
mov
dec
sysret
loopne
push
lock
adc
sub
js
outs
idiv
call
push
loopne
hlt
outs
ret
dec
repz
and
mov
fdiv
ds
or
push
mov
ficomp
mov
test
pop
pushf
es
aam
mov
inc
push
dec
pop
push
ret
rol
mov
pop
int3
push
push
mov
outs
ins
out
out
rol
mov
xchg
push
mov
cmp
test
adc
mov
pop
nop
into
rcr
fsubrp
repz
hlt
inc
mov
pop
mov
fucom
in
push
cld
pop
adc
cs
xchg
jnp
mov
adc
push
push
push
je
scas
out
jne
pop
pushf
ds
lods
ret
and
ret
es
push
clc
les
lds
imul
pop
pop
jl
(bad)
ja
add
pop
mov
sbb
cmps
inc
mov
jbe
iret
cwde
inc
cli
push
push
mov
jl
and
push
fiadd
pop
pop
cmp
daa
shl
retf
je
mov
iret
in
in
repz
ror
xor
sti
outs
pop
movs
push
add
pop
js
nop
pop
je
out
cmc
mov
push
mov
push
pusha
mov
or
mov
xor
xchg
mov
mov
push
pusha
push
mov
repz
jl
out
in
push
jge
sbb
push
shr
cmps
push
or
dec
out
loopne
cmp
data16
xchg
clc
in
pop
stc
pop
mov
push
add
(bad)
imul
add
les
push
mov
inc
add
inc
ins
xchg
fsubr
call
pop
addr16
clc
cmp
fucomi
sbb
sbb
fs
clc
push
cmp
test
mov
mov
ror
(bad)
data16
and
mov
xlat
push
mov
mov
fisub
loopne
jecxz
out
ins
out
xchg
in
in
jo
fsubp
inc
push
(bad)
call
push
jmp
jmp
mov
jle
mov
out
scas
push
dec
sub
pusha
add
shr
adc
mov
jb
ins
addr16
pop
ins
bnd
xlat
sbb
lods
iret
inc
(bad)
push
cmp
test
fild
(bad)
stc
xor
fistp
cmc
div
push
sub
dec
sar
mov
inc
mov
cld
xchg
mov
or
scas
pop
in
inc
or
pop
fs
(bad)
push
push
loop
pop
not
inc
or
adc
in
jmp
inc
into
push
scas
popf
call
hlt
sbb
pop
push
(bad)
push
in
mov
pop
aaa
adc
cmps
fadd
(bad)
(bad)
(bad)
out
pop
or
outs
imul
gs
dec
outs
jae
popa
ins
ins
jae
jb
pop
push
je
std
neg
imul
jns
gs
cs
jns
sbb
in
push
sub
dec
fs
popa
jae
inc
outs
ins
jo
mov
(bad)
(bad)
inc
ins
outs
bound
jb
popa
ins
push
inc
dec
push
sbb
sbb
arpl
outs
in
arpl
xor
push
in
mov
inc
gs
jne
je
rdtsc
or
dec
adc
ret
fistp
push
push
dec
jae
inc
push
inc
lock
push
push
imul
outs
ja
or
xor
icebp
in
sti
jbe
mov
outs
ins
cs
js
xor
push
jae
push
dec
nop
inc
fs
pop
mov
clc
pop
dec
ins
popa
addr16
ins
jo
sub
outs
int3
push
or
push
imul
inc
lock
sbb
outs
jne
add
je
adc
inc
mov
mov
addr16
sbb
repz
adc
ror
jbe
pop
adc
jae
pop
sbb
jae
std
adc
push
sbb
test
outs
jne
arpl
push
push
cmp
ins
inc
jo
imul
jbe
adc
outs
arpl
push
xor
outs
outs
adc
adc
sbb
dec
inc
unpckhps
pop
pusha
pcmpeqd
dec
imul
pop
push
ins
dec
cmp
xor
mov
dec
cmp
jae
pop
pop
adc
adc
or
popa
loopne
in
outs
fiadd
dec
push
dec
dec
push
sbb
ins
mov
adc
enter
fidiv
xor
push
or
inc
mov
(bad)
and
popa
leave
dec
dec
cdq
leave
jae
xchg
mov
push
xor
or
pop
sub
sbb
sub
ins
pusha
dec
sbb
aas
dec
fs
or
arpl
inc
sub
fsub
mov
lods
adc
test
push
mov
and
adc
clc
inc
and
gs
cmp
sbb
inc
and
pop
pop
test
pop
push
jl
cmps
cmp
std
push
dec
jne
pop
pop
cmps
xor
sub
push
movaps
and
popf
jo
push
in
mov
adc
and
inc
lahf
push
shl
bound
sti
fild
jae
imul
test
sbb
dec
or
xchg
or
(bad)
js
or
and
xor
ret
xchg
pop
adc
or
push
out
cmp
push
inc
inc
inc
adc
adc
pop
ss
(bad)
gs
fwait
add
mov
and
inc
cmp
add
cmp
push
jne
ds
xor
mov
pop
out
mov
shl
push
push
jnp
inc
fs
inc
or
jae
outs
adc
fs
jne
bound
ret
mov
mov
popa
cmp
dec
push
push
push
clc
shl
mov
sbb
cmp
sbb
stos
loopne
popf
js
in
arpl
jae
mov
add
add
inc
ss
out
loopne
xchg
dec
test
push
dec
xchg
ss
dec
dec
inc
pop
xor
lea
shl
jne
adc
arpl
pop
and
or
enter
xchg
push
and
shl
or
arpl
adc
sbb
mov
shr
sbb
inc
je
out
popa
sub
or
mov
ins
and
arpl
iret
mov
jne
push
addr16
dec
imul
sub
adc
ss
or
push
or
xor
call
das
jmp
or
add
arpl
push
scas
fmul
push
sub
jo
xchg
or
(bad)
sahf
or
push
lods
xchg
dec
cmp
add
pop
add
stos
sti
ins
jae
adc
mov
mov
fld
push
pop
dec
dec
mov
inc
add
push
jne
adc
sub
fsub
ins
pop
pop
and
out
push
adc
xchg
cli
inc
jb
bnd
aad
adc
popa
or
pop
xchg
sbb
cmp
dec
sbb
xor
add
lods
or
mov
stos
and
adc
push
shl
push
cs
loopne
dec
cmp
mov
jo
add
or
cmp
test
jo
test
inc
ins
xchg
dec
mov
dec
mov
je
outs
xchg
sbb
sbb
mov
lds
aaa
xor
or
bound
ds
sub
and
add
cmp
xor
sbb
push
adc
bound
push
push
pop
ret
inc
push
cmp
mov
das
sub
loope
inc
jae
cld
jp
mov
repz
les
xor
js
adc
mov
adc
dec
add
cmp
xor
rcl
pop
mov
jl
sbb
call
out
and
sahf
sub
das
xor
pop
sub
mov
retf
and
sbb
mov
xor
xor
adc
add
cwde
fisubr
inc
add
loopne
push
nop
outs
push
xor
cwde
or
in
jae
and
push
and
ficom
out
pop
push
in
sbb
rcr
fwait
jno
push
add
das
sub
jae
icebp
add
ja
daa
jge
out
inc
dec
push
dec
dec
ss
pop
es
push
cmps
dec
mov
js
test
mov
or
dec
mov
fdivr
or
and
outs
pop
push
in
not
jbe
mov
adc
push
pop
in
cmp
or
and
pop
into
test
popa
mov
xchg
and
neg
outs
xchg
or
lahf
sub
inc
js
lods
dec
daa
sub
inc
cld
and
pushf
nop
pop
pop
sub
push
add
imul
xor
fmul
push
push
dec
movs
jmp
jae
sub
out
mov
dec
xor
loope
push
aaa
call
nop
ins
add
test
mov
sub
add
and
call
outs
(bad)
(bad)
jl
sbb
shr
add
add
dec
inc
add
imul
adc
int3
xor
adc
dec
(bad)
enter
frstor
or
scas
xor
les
jns
jge
loopne
sub
adc
and
inc
(bad)
out
dec
ds
mov
adc
loopne
shl
mov
cmp
and
fadd
fs
movs
std
(bad)
mov
or
add
sub
shl
cs
fwait
jge
std
adc
mov
mov
cmp
jg
(bad)
jnp
mov
inc
add
ret
nop
add
mov
mov
sub
cmp
xchg
add
out
jle
loopne
mov
mov
push
sbb
xlat
lock
push
and
cld
sbb
pop
add
cmp
mov
mov
movzx
jge
mov
mov
ds
loop
and
mov
mov
out
call
shl
test
jl
or
xchg
sti
push
cld
add
mov
mov
cmp
in
out
popf
jns
push
jg
adc
inc
jle
mov
mov
or
push
push
or
and
lea
and
neg
or
pushw
and
add
outs
ror
dec
push
ins
push
cmps
clc
jge
cmp
xchg
mov
lea
loopne
jae
call
push
and
sub
jb
je
dec
je
sub
xchg
mov
mov
and
inc
add
xchg
je
cmp
jb
add
dec
mov
mov
pusha
push
or
arpl
jmp
daa
fldcw
jb
popa
cmp
rol
je
and
jo
nop
or
jbe
aaa
jmp
and
mov
cmp
adc
sbb
or
fild
adc
lods
test
aaa
inc
dec
inc
and
jo
sysexit
or
loopne
aaa
jge
ret
(bad)
loopne
mov
add
pop
movs
mov
push
mov
jl
push
test
out
xchg
sti
outs
mov
or
or
cmp
(bad)
push
push
mov
out
pop
add
mov
mov
push
mov
push
int3
shr
rcl
mov
(bad)
cmc
add
aam
loopne
push
jo
cmp
jmp
push
add
jmp
pop
ret
(bad)
fs
add
add
push
sar
scas
clc
push
mov
movs
push
inc
add
jns
add
sub
inc
and
in
pop
div
mov
adc
xor
mov
adc
inc
sbb
sbb
sbb
gs
stc
sbb
sub
or
mov
adc
inc
mov
add
or
inc
sahf
ror
inc
mov
bound
ins
cs
xchg
pop
lock
mov
pusha
sbb
pop
inc
std
call
ret
movs
jecxz
pop
ret
shl
mov
mov
aas
mov
add
bound
inc
rcr
mov
inc
cld
mov
test
je
sub
and
retf
mov
leave
sbb
hlt
dec
adc
rol
or
cmp
dec
cmp
sub
sub
dec
lock
pop
push
jg
add
dec
out
inc
xchg
les
fsub
mov
les
ins
mov
mov
adc
jns
add
ret
lds
cmp
jne
fs
sub
xor
dec
int
dec
test
pushf
bound
loopne
or
shl
dec
or
xor
mov
and
jno
sub
fcomp
out
jmp
and
adc
add
call
cld
das
sub
add
dec
addr16
adc
out
sbb
or
mov
sbb
mov
movs
dec
sbb
mov
iret
sbb
sti
arpl
jbe
js
xor
fwait
xchg
lods
cmp
pop
adc
push
outs
pop
ficomp
das
add
adc
xor
cwde
inc
in
xor
push
push
mov
mov
cmps
cmp
les
sub
sub
cmovo
aas
out
or
cld
mov
ja
movs
push
and
in
mov
adc
and
enter
mov
clc
jnp
data16
sub
enter
adc
cmp
push
add
pushf
adc
repnz
cdq
movs
adc
push
pop
adc
dec
sahf
cmp
adc
adc
push
or
or
leave
xchg
daa
sbb
sahf
cmp
repnz
and
and
es
xchg
daa
dec
sub
adc
repnz
pop
xor
xor
xor
xchg
daa
dec
sahf
sbb
sbb
sbb
cmp
ds
push
adc
loop
xchg
cmp
ds
jl
clc
mov
or
hlt
imul
mov
div
push
pmaxsw
not
not
neg
cmp
not
not
pop
mul
push
not
not
imul
sar
adc
adc
adc
mul
push
fcom
not
not
sar
adc
pmaxsw
adc
adc
adc
push
fadd
cmp
adc
adc
jo
out
rcl
adc
adc
fadd
adc
mov
not
not
inc
push
adc
inc
sub
mov
adc
xor
ja
adc
dec
xor
push
inc
xchg
push
push
hlt
mov
sub
push
push
lock
jne
jno
push
call
add
adc
xlat
mov
ficom
mov
cmp
popf
or
mov
ds
cdq
(bad)
in
add
inc
xchg
(bad)
outs
ret
dec
mov
push
setge
jl
mov
push
add
add
inc
and
jne
mov
es
adc
jg
daa
adc
outs
dec
mov
add
and
add
cmp
data16
out
imul
adc
xor
int3
or
sub
inc
aaa
push
dec
stc
test
or
and
adc
ret
std
sbb
inc
mov
pop
xlat
jle
sub
sub
rcr
std
mov
mov
fs
dec
rol
or
xor
dec
sub
pushf
cmp
pushf
ins
add
and
cmp
xchg
scas
push
mov
sub
xchg
retf
and
mov
call
dec
mov
popa
in
push
mov
lock
push
aam
in
ds
mov
pop
mov
pop
jno
push
lahf
fs
mov
jg
addr16
aaa
xor
fdivr
adc
adc
push
add
arpl
add
inc
pushf
jg
push
cdq
jge
dec
or
ror
and
add
inc
push
sub
xor
add
jle
push
dec
mov
cvtdq2ps
test
arpl
or
dec
les
pushf
push
(bad)
test
adc
and
in
ins
das
in
loop
cmp
sbb
js
jne
mov
out
cmp
mov
push
jl
ret
fwait
scas
call
addr16
sti
pop
add
in
cmp
setae
inc
jl
sbb
enter
pop
mov
test
das
mov
jg
push
mov
add
adc
or
mov
cmps
and
mov
enter
and
ds
out
xchg
nop
xchg
sbb
mov
mov
aas
pop
jmp
xor
jmp
retf
test
pop
(bad)
jo
adc
sbb
test
and
pop
in
inc
jg
xchg
aas
sub
add
cmp
mov
xor
ror
retf
cmp
dec
(bad)
or
mov
(bad)
sbb
mov
pop
pop
scas
adc
sahf
dec
or
fiadd
stos
jmp
imul
jae
jecxz
add
jb
add
inc
data16
mov
cs
push
cmovno
out
dec
aas
xor
mov
push
aas
das
push
sub
out
sbb
jp
es
mov
mov
mov
or
lahf
pusha
mov
xchg
cmp
push
add
adc
dec
dec
loopne
outs
fisttp
inc
or
js
test
xor
mov
das
fs
or
pusha
and
jo
mov
imul
mov
fbstp
sbb
xlat
push
aas
data16
aaa
sbb
bound
push
add
ret
pushf
loope
mov
dec
add
inc
pop
and
(bad)
test
(bad)
pushf
or
bound
sbb
scas
sbb
rol
cmp
aas
and
movs
das
jo
or
imul
push
adc
pop
adc
idiv
ja
fs
clc
fisttp
mov
jo
mov
mov
mov
leave
loop
clc
and
bound
xchg
cmp
add
push
test
shl
mov
scas
or
clc
jnp
inc
sbb
jg
mov
test
mov
and
sbb
cmp
(bad)
not
and
movs
stc
retf
cmp
or
push
test
mov
(bad)
(bad)
cmp
out
sbb
js
sub
mov
sub
fstp
or
aas
cmp
enter
fs
in
sbb
dec
push
inc
push
lock
mov
outs
jo
or
aas
push
pop
add
cli
out
in
inc
cs
dec
jne
lea
xor
hlt
mov
pop
xchg
push
inc
lea
mov
add
jne
mov
cdq
sahf
pushf
or
sub
sub
inc
mov
push
and
mov
loop
and
loop
mov
neg
pop
jb
sub
mov
fldcw
fbstp
jne
stos
pop
inc
es
pop
add
or
inc
mov
add
inc
mov
dec
inc
push
push
push
lea
push
adc
sub
dec
mov
add
pop
repnz
cmp
mov
jg
cmc
push
test
add
mov
jle
lock
icebp
repnz
out
mov
ret
das
in
loopne
in
push
out
push
out
jnp
cmps
js
in
mov
jmp
add
call
push
out
fdivp
ins
mov
cmps
push
mov
push
loop
div
push
jecxz
cs
js
test
jnp
int
push
fild
jl
fcomp
push
ror
(bad)
push
fld
fmul
sti
pop
push
adc
bound
sub
add
xor
push
add
or
in
mov
and
push
mov
test
movs
cwde
inc
jle
xor
dec
cwde
mov
nop
mov
mov
in
leave
mov
add
add
in
xchg
or
inc
or
repz
mov
cwd
dec
sbb
dec
lea
push
mov
and
or
fidiv
sbb
push
mov
xchg
pop
xor
out
loop
and
pop
pop
push
es
push
sbb
jae
mov
push
push
mov
nop
ss
add
std
mov
jo
cmp
jne
push
add
cmps
clc
or
repz
repz
(bad)
xlat
jbe
bound
pusha
sub
cmp
jnp
test
inc
xor
push
jp
adc
dec
adc
dec
dec
jne
mov
mov
(bad)
(bad)
adc
or
pop
and
lock
idiv
fstp
js
fdiv
mov
fisttp
cs
call
out
pop
or
sub
icebp
mov
pop
dec
addr16
push
call
bound
xor
inc
pop
sub
or
inc
push
xor
mov
ins
pop
das
mov
(bad)
in
or
pop
inc
cwde
mov
cmp
dec
ret
cmp
inc
push
add
fmul
cmp
sub
rol
out
xchg
pusha
push
test
fcomp
pop
mov
aas
fdiv
xor
jbe
mov
and
rol
push
xlat
inc
neg
scas
call
dec
(bad)
pop
fsubrp
xor
jp
push
sbb
aam
test
pop
or
leave
cmp
and
or
sbb
mov
and
push
call
addr16
mov
fsub
cmp
push
imul
add
xor
pop
ja
les
xor
call
xor
xchg
dec
(bad)
dec
lock
call
mov
gs
sub
add
sti
inc
cld
mov
adc
sti
pop
out
adc
push
or
cld
xor
or
add
daa
adc
and
and
sub
xor
xchg
ja
and
adc
inc
iret
in
cmp
inc
sub
cmp
cs
xor
push
in
inc
push
pop
pop
pusha
nop
inc
push
cmp
repnz
cmp
jo
js
xor
or
lahf
sbb
xchg
pmaxsw
loope
pushf
mov
add
call
pop
push
stos
push
push
xor
xchg
adc
sub
je
neg
cwde
adc
imul
add
push
clc
adc
fadd
push
stc
jle
xor
adc
cmp
push
imul
std
enter
jne
nop
push
dec
pop
xor
adc
cwde
icebp
aam
in
loopne
in
mov
pusha
or
enter
pop
neg
lods
je
xor
adc
retf
sti
jne
sub
cmp
adc
inc
mov
shrd
mov
and
adc
cdq
sub
ins
push
xchg
out
sub
adc
loopne
or
fs
sub
adc
mov
cmp
adc
push
aad
mov
jae
call
pusha
and
cmp
or
idiv
ror
mov
ror
lods
cli
sar
(bad)
push
dec
rol
add
je
add
jb
fdiv
sub
pop
inc
or
push
js
test
xlat
imul
push
push
and
sub
jle
pop
adc
es
fucomip
or
mov
pop
jnp
xlat
push
das
add
outs
xchg
fadd
xchg
jb
outs
bound
xor
cld
sbb
addr16
or
or
sbb
out
inc
add
inc
xlat
pushf
mov
xchg
pop
mov
mov
and
arpl
mov
push
loop
sti
xor
and
push
xor
cmp
cdq
cdq
sbb
and
ror
mul
out
jle
and
sub
sbb
cwde
cs
ss
sub
sbb
mov
xor
xchg
adc
pop
out
add
or
in
cmp
push
mov
add
rcl
add
dec
pop
iret
pop
ds
retf
jbe
xchg
fiadd
out
mov
fsub
mov
lock
and
dec
std
clc
sbb
out
mov
(bad)
push
jle
mov
neg
hlt
jmp
call
fnstcw
xchg
dec
rol
bound
jl
sbb
sbb
(bad)
iret
das
or
xchg
(bad)
mov
scas
sub
adc
lods
ja
mov
mov
jo
push
dec
bound
jl
rcl
test
mov
lock
xor
ja
push
lea
mov
test
adc
jp
cld
mov
mov
(bad)
cmp
adc
fdivrp
scas
inc
clc
call
push
call
mov
ja
or
test
fdiv
inc
mov
ins
daa
rol
sahf
sub
jae
mov
xchg
imul
cmp
setle
cmp
or
jge
pusha
mov
dec
fs
jmp
(bad)
push
and
jmp
ret
xchg
sbb
shl
inc
mov
popa
mov
lsl
jb
je
shl
sub
data16
call
mov
in
xor
or
call
lea
sbb
and
test
mov
fwait
push
ss
xchg
retf
lods
scas
imul
cmp
nop
dec
jg
jle
xor
xor
outs
lock
or
lods
mov
fld
or
sub
je
jo
push
loopne
adc
les
add
cmps
or
dec
jp
push
sbb
arpl
mov
repnz
not
addr16
add
push
xchg
and
add
add
inc
or
das
sub
push
lods
mov
out
push
jae
popa
(bad)
sbb
sahf
mov
call
adc
iret
ja
xlat
fist
ds
inc
and
xchg
imul
sahf
pusha
scas
ins
sbb
or
jo
push
pop
retf
jae
cmp
and
js
ficomp
mov
cli
call
je
push
and
mov
pop
out
neg
outs
xor
iret
xchg
(bad)
sub
rol
loopne
mov
add
call
and
mov
jbe
adc
outs
cwde
mov
cmps
ss
mov
fidiv
inc
call
mov
fsub
cmps
inc
cmp
test
cs
ja
stos
sbb
ds
mov
rol
fdivr
shl
push
jns
cmps
push
and
adc
fsubr
iret
jle
push
push
stos
call
rol
adc
mov
dec
jg
test
pop
pop
loopne
dec
push
int3
push
jnp
adc
mov
mov
js
mov
jmp
push
mov
rcl
fstp
sub
push
mov
pushf
jecxz
movs
test
scas
push
clts
call
loopne
call
cmp
popa
cwde
inc
sub
test
mov
pop
dec
lahf
dec
dec
loopne
push
sbb
sub
dec
fcmovnb
mov
stos
addr16
sahf
retf
push
mov
add
add
dec
fwait
or
push
test
jne
push
cdq
or
inc
adc
sbb
add
mov
jb
sbb
push
dec
test
cmp
fimul
dec
add
adc
fcom
iret
mov
mov
and
into
movs
cmp
jne
xchg
dec
inc
add
repz
clc
add
sbb
pop
pusha
out
add
xchg
sbb
add
inc
sti
aas
and
add
sar
mov
push
aas
cmp
add
add
outs
in
pop
add
dec
aaa
fidiv
ins
mov
das
add
push
das
mov
es
add
and
iret
sbb
xchg
or
add
and
cmp
pop
nop
and
fcmovb
push
add
aam
mov
add
and
add
and
sbb
and
add
push
adc
and
leave
xor
leave
inc
jb
and
loopne
test
or
inc
aas
dec
cs
mov
cmp
and
dec
ficom
lds
and
cmp
cs
mov
pusha
pop
mov
mov
add
aas
jo
push
ins
add
pop
lods
add
aas
or
sbb
daa
add
push
fdivr
add
or
add
mov
inc
add
dec
imul
push
pop
push
les
idiv
(bad)
dec
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
jmp
in
out
outs
ret
ret
sub
stc
rol
(bad)
aas
adc
popa
das
sbb
add
pushf
or
and
and
adc
out
scas
add
mov
imul
stc
add
and
inc
mov
call
retf
retf
xor
out
sub
jecxz
cld
iret
scas
cld
add
leave
sbb
mov
cmp
fidivr
aas
cld
iret
(bad)
call
mov
bound
inc
jp
mov
aaa
push
xlat
fadd
lods
outs
xor
xchg
push
or
push
push
(bad)
mov
sbb
ror
mov
push
pop
test
enter
mov
inc
cmp
xchg
dec
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
xlat
pop
(bad)
mov
loopne
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
lods
lds
iret
dec
js
inc
mov
stos
mov
cmp
or
(bad)
(bad)
inc
xchg
test
stos
pop
out
sub
imul
(bad)
div
jl
xor
cmp
call
dec
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
inc
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
sar
repz
loope
jp
iret
inc
bound
ds
(bad)
(bad)
call
sbb
mov
add
cmp
xor
in
cmp
lds
mov
mov
mov
popa
mov
fsub
addr16
repz
mov
dec
pop
fld
mov
push
pusha
les
outs
bound
xor
jb
outs
jb
push
dec
fidiv
jne
je
ins
and
and
popa
je
xor
loopne
pop
sahf
xor
xor
inc
inc
inc
inc
inc
push
xor
hlt
dec
push
add
loopne
push
or
repz
out
add
sub
sub
repz
sbb
sub
pop
pop
iret
repz
push
mov
(bad)
ins
add
jl
adc
jae
pause
sbb
jae
cmp
scas
push
shr
push
fcomp
iret
mov
lahf
or
mov
sar
push
cmp
pop
adc
sahf
jnp
push
aas
push
pop
das
push
push
cmp
js
push
test
sbb
xchg
pop
iret
jne
cmp
mov
push
mov
pop
and
int3
pop
push
fcomp
daa
fsub
sub
lfs
int3
fidivr
adc
sbb
mov
dec
hlt
jg
jg
je
inc
or
div
inc
hlt
das
push
das
push
or
sub
iret
cmp
das
inc
jo
div
das
push
fisttp
popf
jae
in
fild
unpcklps
jg
jne
push
xlat
fild
push
pop
cs
scas
cmp
cs
ror
inc
push
outs
push
xlat
loope
out
mov
push
push
jg
movs
fcomp
add
adc
dec
pusha
js
fist
call
adc
or
add
sbb
or
add
inc
(bad)
push
adc
add
imul
add
loopne
jle
jge
add
sbb
(bad)
sbb
adc
std
mov
mov
sbb
jmp
sbb
mov
movs
inc
add
dec
sub
mov
push
loopne
fwait
out
ss
stos
fsubr
cmp
pop
ja
cmpxchg
xchg
movs
call
popf
mov
lods
mov
mov
mov
add
inc
lods
inc
and
in
ret
aaa
xchg
and
lods
ret
adc
jno
mov
bound
mov
outs
add
(bad)
bt
shl
jbe
movlps
push
pusha
sub
add
retf
fsub
push
push
adc
mov
sar
pop
push
out
sahf
ja
xor
xor
ss
xor
sahf
cmp
inc
push
add
dec
xor
xor
push
dec
push
dec
push
dec
push
dec
into
lods
add
push
dec
into
mov
xor
addr16
add
dec
push
dec
push
xor
xor
dec
push
dec
push
dec
push
dec
shl
jae
pushf
mov
add
dec
xor
xor
push
dec
push
dec
push
dec
push
dec
addr16
cmp
sbb
mov
add
xor
xor
dec
push
dec
push
dec
push
pushf
xor
xor
sbb
mov
xor
inc
push
add
dec
push
dec
add
add
push
dec
stos
arpl
xor
cmp
mov
add
xor
xor
dec
push
dec
rep
out
xor
arpl
ror
xor
dec
push
dec
cmp
cmp
add
stos
arpl
rol
xor
mov
add
mov
sti
mov
inc
out
and
jns
sub
push
push
add
inc
inc
icebp
sahf
out
inc
inc
jae
xor
xor
push
jle
jle
jle
mov
push
jle
jle
cdq
cdq
cdq
test
jle
jle
jle
cwde
cdq
cdq
push
jle
jle
jle
int3
int3
int3
inc
push
jle
jle
jle
int3
int3
int3
push
jle
jle
jle
data16
jle
jle
jle
data16
jle
jle
jle
xor
mov
push
jle
jle
jle
xor
xor
jle
jle
jle
cdq
cdq
pop
or
jle
jle
xchg
jle
jle
jle
int3
int3
sub
push
jle
jle
ret
int3
int3
int3
jle
jle
jle
jle
add
sbb
cdq
cdq
push
jle
jle
jle
jle
int3
inc
jo
add
jle
int3
int3
int3
push
jle
jle
jle
jle
sub
cmp
xor
sbb
push
(bad)
cdq
xor
jmp
push
add
jle
cdq
cdq
cdq
push
jle
jle
jle
pop
pop
js
stos
xor
cmp
push
(bad)
xor
jmp
push
add
jle
xor
xor
jle
jle
and
xor
jo
push
(bad)
data16
pushf
jae
add
jle
popa
fs
jle
fwait
and
loope
stos
xor
loopne
push
(bad)
leave
int3
pushf
cmp
add
jle
enter
adc
ret
stos
xor
ror
(bad)
push
cdq
cmp
push
add
or
mov
cmp
cmp
dec
or
sbb
rcr
imul
out
jnp
or
push
cmp
ins
test
pop
mov
lods
inc
xlat
push
int3
adc
fild
or
dec
add
and
sahf
xlat
jbe
cli
or
dec
adc
sbb
jns
out
sub
cmp
dec
out
sahf
out
pop
fs
je
out
sahf
jl
mov
jns
mov
(bad)
int3
out
sahf
out
fsub
in
hlt
iret
repz
cld
add
or
sbb
push
test
cmp
xor
leave
in
adc
add
push
call
push
add
ins
sub
adc
lock
xor
mov
outs
adc
int3
sbb
or
in
adc
push
push
pop
dec
fisubr
test
pop
out
in
(bad)
out
add
(bad)
in
push
add
xlat
pop
add
mov
sgdtd
ins
pop
jg
test
inc
mov
and
add
add
and
clc
mov
add
add
push
dec
cwde
sbb
inc
and
(bad)
pop
or
cdq
lds
aam
je
outs
xchg
(bad)
stc
add
jle
(bad)
div
add
add
add
fcmovbe
adc
add
pop
xlat
popf
imul
das
jbe
pop
pop
pop
(bad)
out
fnsave
lds
add
or
das
add
add
push
or
or
add
inc
iret
repz
push
je
mov
sahf
cmps
stc
cmp
or
cmp
jns
out
je
lods
enter
shl
sbb
push
dec
push
adc
ret
sbb
add
mov
mov
nop
jns
js
test
popf
fcomp
pusha
jp
test
ins
sub
cmp
iret
js
jmp
inc
jns
cmp
push
fs
in
in
mov
or
lahf
inc
push
jnp
neg
dec
push
mov
push
mov
fs
cs
pop
aam
movs
call
jnp
push
cld
das
sbb
out
daa
ja
test
es
out
mov
push
push
das
neg
push
jge
daa
mov
mov
das
clc
es
sub
enter
test
das
pop
les
neg
push
fsubr
pushf
push
mov
or
lock
jg
pop
movs
mov
mov
bound
cmp
pop
add
es
test
mov
out
test
repnz
int3
pusha
lock
sahf
daa
pop
dec
or
pop
in
push
das
mov
repz
call
lock
out
rol
das
jo
jg
mov
call
pop
call
js
rcr
xabort
fdivr
out
in
sbb
cmp
mov
not
sub
(bad)
out
bound
test
fimul
xchg
loopne
imul
test
outs
pushf
ja
outs
pusha
pop
iret
repz
mov
cmp
and
test
push
fsubr
xchg
loopne
aas
add
add
outs
lods
pop
pop
dec
das
push
andps
jg
fdivr
popa
pop
ja
mov
mov
cmovg
(bad)
clc
aas
fsub
fs
aas
mov
lock
mov
cld
iret
dec
in
mov
adc
adc
sub
aas
lfs
inc
xchg
test
pop
shr
test
sub
mov
pop
pop
pusha
pop
aam
ror
inc
and
movs
cmp
fadd
aaa
push
test
popa
pop
scas
test
pop
dec
inc
aaa
pop
imul
hlt
push
pop
pusha
mov
push
scas
ja
pusha
pop
pop
pop
pusha
inc
pop
pop
sub
pop
mov
adc
pop
setbe
and
pop
call
xchg
push
ror
mov
or
pop
pop
pop
push
pop
packuswb
adc
pop
outs
scas
inc
retf
push
adc
pop
pop
sub
mov
outs
inc
rol
scas
pop
fwait
push
dec
push
xchg
aas
mov
dec
push
outs
test
pop
pop
adc
push
pop
push
xlat
dec
pop
pop
ss
push
pusha
aam
(bad)
push
out
into
les
iret
aaa
pop
fsubr
pop
xchg
fisubr
stos
pop
enter
fsub
addr16
adc
push
ficomp
rol
xchg
fcom
(bad)
sbb
mov
out
punpckldq
jg
es
addr16
daa
inc
mov
add
push
inc
push
add
cdq
je
xchg
jle
mov
out
pop
jmp
pusha
mov
ror
(bad)
inc
pop
(bad)
retf
xchg
adc
push
cmp
dec
or
icebp
or
cld
mov
(bad)
(bad)
inc
jmp
nop
fs
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movs
in
bound
(bad)
(bad)
(bad)
dec
rcl
add
cmp
jmp
sbb
mov
dec
jge
(bad)
(bad)
(bad)
dec
sbb
aam
mov
push
jp
inc
inc
xchg
imul
lds
cmp
ret
(bad)
dec
(bad)
pop
mov
test
push
punpckldq
jo
or
or
add
add
fcomp
mov
sbb
into
push
add
add
mov
dec
push
jl
aam
sbb
inc
add
jnp
mov
cmp
repz
std
or
cli
repz
repz
stc
fs
test
repz
imul
sahf
cmps
stc
cmp
or
repz
cmp
lds
jg
push
lock
cmp
repz
lods
out
int3
in
jnp
jne
in
(bad)
jle
jmp
push
jmp
push
sahf
jnp
lock
loopne
push
cld
aas
adc
jne
fcomp
jg
add
xor
jo
push
mov
rol
mov
mov
adc
pop
push
loopne
and
xlat
pop
sbb
xor
push
pop
rcr
std
mov
pop
je
cmps
retf
pushf
das
sti
push
mov
fsub
(bad)
clc
push
xchg
ja
jle
into
push
push
scas
(bad)
jl
add
call
push
fdivrp
les
push
jmp
outs
push
push
push
fild
or
push
add
pop
pop
and
jnp
sbb
fdivr
mov
cmp
(bad)
call
push
mov
push
jmp
ret
idiv
ror
mov
dec
jl
test
pop
dec
out
sahf
cmp
mov
test
call
push
ficomp
clc
push
out
fimul
and
imul
push
popf
pusha
inc
push
or
cmp
push
push
cmp
in
jo
(bad)
push
xlat
jmp
pop
push
ins
mov
push
aam
jg
pop
ds
push
fdiv
fsubrp
jecxz
(bad)
in
push
(bad)
in
xchg
sub
int
shl
lock
push
or
push
loop
mov
aas
ror
cwde
sub
movs
sahf
push
xchg
call
dec
mov
scas
xor
push
imul
cmp
sar
hlt
push
fsub
push
cmp
fdivr
hlt
pop
iret
int3
mov
mov
movups
or
mov
fld
add
push
xchg
int
test
pop
clc
push
imul
mov
inc
push
das
imul
cwde
out
cmp
scas
mov
cdq
(bad)
pop
ds
jp
out
ret
xchg
jmp
mov
cmp
lahf
jle
dec
dec
das
sahf
bswap
ror
ficom
cmp
add
sahf
push
(bad)
pop
sti
push
(bad)
mov
add
fisubr
nop
push
into
push
and
mov
adc
mov
mov
ds
mov
inc
push
fadd
push
sar
mov
and
add
push
and
loopne
je
push
push
dec
outs
push
mov
lods
scas
das
mov
dec
or
outs
dec
push
mov
adc
pop
pop
int
(bad)
pop
stos
adc
push
add
sahf
push
(bad)
pop
push
mov
mov
jl
cli
out
call
pop
iret
pushf
mov
sbb
mov
push
mov
loopne
xchg
push
cld
add
fcmovbe
cli
inc
mov
push
nop
out
nop
jl
fwait
adc
push
shl
(bad)
rcr
push
cli
into
xchg
push
cdq
mov
xchg
movmskps
les
dec
mov
fmul
xchg
div
int
mov
xchg
dec
lock
inc
push
add
push
stos
int
dec
lock
dec
int
mov
inc
push
fstp
pop
shl
ds
push
jno
cmp
push
out
push
sub
pushf
push
int3
shr
std
push
test
jo
sbb
push
mov
mov
nop
push
mov
add
repz
into
cmc
mov
push
cmc
std
dec
push
jb
adc
fimul
and
sbb
outs
cmovne
aas
shr
out
mov
cwde
sti
cwde
pop
xchg
or
pop
push
out
scas
out
push
xchg
jo
out
iret
in
xor
mov
mov
cld
fisub
test
push
retf
rcr
push
frstor
adc
push
push
dec
sahf
pusha
jo
jle
sbb
push
(bad)
dec
lock
imul
(bad)
push
jb
mov
hlt
push
loopne
iret
outs
push
push
mov
outs
push
out
lock
push
sub
mov
loopne
mov
ds
sahf
pop
push
push
nop
sub
jo
vmread
outs
adc
call
mov
inc
scas
push
mov
mov
adc
addr16
push
fdivr
arpl
push
shl
inc
dec
or
push
mov
add
push
fwait
jmp
mov
push
push
lods
push
adc
mov
add
out
call
add
dec
push
and
outs
adc
mov
or
imul
cmp
push
dec
mul
(bad)
cmp
xor
mov
mov
or
push
pop
push
xchg
jae
pop
push
mov
mov
iret
repz
inc
out
sahf
out
ins
int3
cwde
fidivr
jns
(bad)
out
in
and
and
push
add
adc
cmp
jp
adc
adc
push
pop
adc
in
fidivr
ds
bound
outs
or
fcos
mov
mov
add
add
adc
sbb
adc
inc
loopne
mov
cmp
adc
sbb
mov
fidiv
cmp
add
loope
sub
push
sbb
outs
shr
mov
pushf
gs
(bad)
or
and
add
add
fwait
ret
fnstcw
xor
or
ds
(bad)
jg
fs
popa
je
and
xor
cmp
inc
outs
jo
js
push
mov
sub
and
test
ins
outs
jne
and
imul
and
and
jb
and
ins
aam
mov
fld
dec
add
add
push
test
pop
xor
pop
cli
sbb
xchg
int
xor
pop
add
add
pop
push
cmp
das
pop
inc
pop
(bad)
sar
sub
sub
mov
pop
adc
adc
in
ds
out
outs
or
push
push
jle
jae
sbb
pop
push
jo
in
or
adc
push
mov
push
push
or
pop
mov
repnz
pop
mov
nop
dec
pop
cmp
js
push
loop
push
mov
pop
push
or
sub
jo
sar
push
or
lock
out
std
sti
cmps
or
add
push
je
xor
or
or
mov
pop
test
inc
push
call
and
cwde
xchg
push
push
sub
push
cmp
fcomp
sub
push
sub
mov
push
dec
push
sahf
idiv
clc
jle
or
adc
mov
not
jb
xor
(bad)
(bad)
xchg
or
hlt
jno
push
and
movs
push
pop
or
or
outs
add
pop
push
outs
add
repnz
cmp
aam
repnz
mov
sub
mov
lahf
mov
aad
mov
or
jle
or
push
ss
neg
or
xor
jbe
ss
fiadd
je
(bad)
push
or
or
push
lods
mov
(bad)
or
in
jle
xchg
mov
push
or
(bad)
arpl
mov
push
jle
ds
fdivr
jb
cmp
add
mov
loop
js
push
mov
push
mov
inc
ds
jnp
jmp
and
mov
je
or
or
or
(bad)
out
pop
icebp
ficomp
sbb
xchg
(bad)
jns
cmp
rcr
ficom
push
add
out
mov
sbb
push
dec
push
bnd
adc
push
mov
push
xor
test
push
stos
push
pop
icebp
pop
xchg
push
inc
push
jmp
push
jb
call
mov
ins
push
sub
ins
shl
push
stos
or
push
inc
inc
push
push
or
jmp
or
loop
pop
icebp
into
or
call
into
or
(bad)
jnp
push
or
jmp
in
test
push
lahf
jmp
push
idiv
push
push
dec
(bad)
jnp
mov
ds
jmp
daa
push
mov
xlat
(bad)
sahf
or
mov
pop
push
outs
or
mov
fdivrp
outs
push
das
push
mov
jmp
pop
push
push
(bad)
call
mov
pop
jb
pop
loope
shl
(bad)
mov
leave
test
stos
(bad)
jmp
fnstcw
and
stc
lds
push
jmp
xchg
stos
mov
push
dec
mov
cs
in
popf
jmp
xor
push
and
inc
mov
mov
rcr
test
inc
mov
push
jmp
or
fwait
push
stos
mov
(bad)
sti
mov
cmps
push
inc
cs
jmp
out
inc
cs
test
sbb
mov
push
call
pusha
adc
sahf
pop
push
out
add
dec
sbb
adc
add
adc
rcr
inc
ficomp
push
add
pop
sbb
and
add
add
inc
inc
je
push
jle
out
int3
push
(bad)
jle
ds
repz
sbb
jle
ds
jns
sahf
jle
(bad)
jle
sub
xchg
push
xchg
out
mov
fidiv
inc
push
push
mov
or
pop
bound
and
jmp
arpl
jb
arpl
gs
fs
push
arpl
jbe
sbb
ja
sbb
jo
jae
imul
ins
gs
outs
push
jbe
ins
imul
adc
jp
pop
xor
mov
ss
jl
mov
imul
bound
push
mov
or
je
jo
and
lods
cmp
ret
xor
addr16
popa
fcmovnbe
mov
outs
jns
and
xchg
je
arpl
jns
cwde
or
in
bound
inc
xor
fadd
fldcw
jg
aad
retw
xor
sub
and
sub
rol
push
cmp
je
adc
les
pusha
jmp
das
mov
retf
arpl
add
(bad)
bound
lods
sub
mov
aam
test
xchg
push
or
sub
pop
push
ret
cmp
or
pop
pop
adc
xchg
xchg
dec
movs
retf
push
dec
in
test
or
cs
cmps
adc
fcomp
mov
jecxz
add
sub
gs
outs
add
add
add
cmps
or
out
outs
push
cdq
push
es
scas
push
sub
sahf
mov
retf
sbb
xchg
(bad)
test
(bad)
call
out
push
sti
jecxz
scas
or
rol
push
add
add
stos
add
sahf
add
inc
jnp
add
xor
lds
pusha
or
pop
add
jbe
call
pop
add
xchg
ja
test
fcom
mov
rcr
pop
cmp
sahf
add
pop
sub
and
cmp
add
outs
fadd
(bad)
or
or
or
or
(bad)
push
add
sbb
repz
lods
ins
in
out
sahf
jmp
cmp
fnstcw
mov
sbb
and
fidiv
add
xor
jns
mov
repnz
repz
repz
retf
push
cmps
sub
jmp
sahf
out
cmp
cmp
mov
xchg
cmps
imul
jns
out
(bad)
ss
xor
jns
test
stos
push
into
repz
repz
outs
out
push
iret
repz
sahf
pop
fidivr
mov
cmp
push
push
out
cdq
dec
fs
push
repnz
push
mov
mov
xor
push
ror
sbb
jno
push
mov
jns
out
dec
leave
sub
popf
jmp
(bad)
cmp
repz
jns
mov
inc
lds
jne
push
in
push
sahf
out
sahf
xchg
push
aad
mov
loopne
(bad)
jns
mov
iret
repz
sub
sahf
data16
push
popf
pop
fst
jns
out
mov
repz
adc
push
xchg
push
xchg
fimul
jo
ja
push
rcl
push
daa
sar
push
mov
adc
out
inc
out
push
repz
push
mov
repz
dec
dec
retf
retf
repz
push
stos
stos
scas
repz
imul
xor
jns
ja
push
fwait
fwait
pop
pop
sahf
out
sahf
fcmovnu
cmp
mov
jns
jnp
sti
sahf
out
or
xchg
jns
out
mov
jns
out
addr16
sahf
out
add
push
xchg
xchg
push
jns
out
push
xlat
xlat
aaa
aaa
out
sahf
out
mov
ja
repz
push
push
(bad)
(bad)
iret
repz
dec
dec
iret
iret
das
das
cmp
repz
scas
outs
outs
out
repz
repz
pop
pop
lahf
lahf
iret
repz
pop
pop
(bad)
aas
aas
cmp
repz
mov
pop
scas
repz
inc
push
and
js
out
push
xor
jns
out
push
dec
sub
pop
imul
(bad)
push
inc
out
sahf
out
fs
xor
pop
jae
je
add
sahf
out
mov
inc
jbe
out
push
mov
pop
mov
cmp
test
cdq
retf
push
mov
sub
loop
cmps
dec
cmps
pop
retf
push
mov
push
(bad)
pushf
adc
xchg
pop
cdq
enter
add
push
scas
push
adc
xor
jbe
inc
inc
ret
fcom
fidivr
xchg
or
cmp
or
in
mov
xchg
mov
fiadd
mov
adc
adc
adc
push
pop
sbb
and
leave
test
sbb
pop
test
pop
xchg
ss
mov
addr16
add
xor
in
push
add
add
nop
add
xchg
lahf
scas
xchg
inc
or
add
dec
or
add
add
adc
jg
les
les
push
sub
inc
adc
jbe
mov
neg
xchg
sub
test
push
retf
jp
add
or
add
add
rol
into
test
jbe
out
xlat
cmp
pushf
jae
(bad)
mov
aaa
daa
rcr
mov
outs
add
push
clc
fmul
push
cs
(bad)
cmp
js
(bad)
jg
pusha
pop
lgdtd
popa
push
out
mov
les
(bad)
(bad)
inc
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
(bad)
(bad)
dec
mov
sub
mov
sbb
dec
jno
repz
test
(bad)
(bad)
(bad)
call
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
call
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
(bad)
(bad)
(bad)
cmp
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdivr
(bad)
(bad)
push
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
(bad)
(bad)
jmp
and
mov
cdq
xchg
mov
mov
or
or
and
or
(bad)
(bad)
jmp
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
push
mov
push
movs
in
lahf
xor
mov
js
stc
jl
test
xchg
sbb
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
(bad)
(bad)
jmp
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
sbb
(bad)
(bad)
mov
bound
ficom
gs
aam
pop
popa
mov
into
pop
cmp
std
inc
mov
aam
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
(bad)
(bad)
(bad)
push
mov
sar
add
in
add
pop
dec
or
cmp
add
(bad)
(bad)
jmp
xchg
or
and
test
or
mov
popa
into
push
stc
(bad)
(bad)
(bad)
(bad)
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
(bad)
(bad)
(bad)
mov
call
mov
cmp
jmp
fild
push
fdiv
or
(bad)
jmp
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
jl
(bad)
(bad)
(bad)
call
(bad)
shl
add
inc
push
imul
xor
sbb
(bad)
(bad)
(bad)
inc
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
(bad)
(bad)
dec
(bad)
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
(bad)
(bad)
(bad)
push
mov
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
(bad)
(bad)
(bad)
mov
popa
retf
sbb
outs
and
xchg
ja
int3
add
mov
das
(bad)
(bad)
(bad)
jmp
add
lds
or
sub
mov
cmps
call
ret
shl
sbb
scas
ficomp
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
(bad)
(bad)
jmp
mov
loop
sub
or
mov
xchg
or
(bad)
(bad)
push
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
idiv
jg
jmp
ja
outs
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
jmp
(bad)
clc
sar
imul
push
js
or
push
add
mov
(bad)
(bad)
inc
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
(bad)
(bad)
(bad)
fdiv
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
mov
add
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
(bad)
jmp
aaa
mov
or
sbb
add
pop
add
push
ret
push
sbb
and
ret
push
sub
hlt
ja
xchg
call
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
call
push
adc
dec
adc
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
(bad)
(bad)
(bad)
call
test
sbb
add
call
out
ins
ins
(bad)
fistp
inc
(bad)
(bad)
(bad)
call
sahf
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
(bad)
(bad)
ret
gs
fisubr
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
jmp
cmp
repz
fbstp
push
jo
add
hlt
div
sub
mov
mov
xor
pop
nop
sti
mov
test
jns
test
(bad)
(bad)
(bad)
(bad)
cmp
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
(bad)
(bad)
call
mov
lea
fnstcw
mov
dec
hlt
mov
icebp
(bad)
call
adc
add
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
jg
ins
mov
xchg
push
xchg
xchg
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
inc
les
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
(bad)
fidiv
and
inc
and
inc
out
and
cmp
dec
mov
mov
sbb
int3
cmps
xor
mov
lods
out
sar
mov
(bad)
(bad)
(bad)
jg
lahf
ins
mov
xchg
adc
jle
push
jns
das
mov
and
je
(bad)
(bad)
call
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
(bad)
(bad)
(bad)
call
retf
int3
cli
mov
js
mov
test
cwde
cmp
test
(bad)
(bad)
(bad)
cli
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ins
rol
ss
push
out
mov
mov
movs
test
jno
mov
(bad)
(bad)
(bad)
call
ins
pop
push
dec
sub
or
sub
add
adc
cwde
mov
nop
(bad)
(bad)
(bad)
jmp
mov
push
mov
push
(bad)
push
hlt
out
les
fdecstp
jmp
lea
jmp
sbb
pushf
sub
sub
dec
jo
outs
sbb
sub
jmp
fisub
lds
push
call
dec
in
mov
movs
ret
addr16
(bad)
(bad)
(bad)
inc
mov
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
ds
(bad)
(bad)
call
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
cmp
inc
inc
ja
pop
arpl
lods
(bad)
loope
int3
mov
stc
dec
xlat
loopne
(bad)
(bad)
dec
xchg
scas
or
lea
mov
test
and
pop
ins
cmp
les
adc
sub
(bad)
(bad)
inc
dec
add
sar
push
or
cmp
popf
cmps
push
mov
xchg
adc
call
add
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
(bad)
(bad)
(bad)
(bad)
call
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
(bad)
(bad)
call
pop
or
push
and
sub
adc
jns
movs
dec
mov
call
cld
jmp
mov
shr
(bad)
in
and
out
mov
rcl
cld
(bad)
jmp
es
xchg
aas
mov
adc
out
sar
mov
(bad)
(bad)
jmp
fdiv
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
outs
cli
jmp
add
test
pop
mov
mov
ret
in
(bad)
(bad)
push
push
dec
add
(bad)
cmp
(bad)
test
or
stc
sbb
(bad)
fmul
or
mov
inc
leave
in
push
ja
pop
sub
pusha
push
lods
or
sbb
fild
sbb
repnz
adc
dec
(bad)
(bad)
(bad)
push
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
(bad)
(bad)
(bad)
dec
cmp
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
(bad)
call
xor
mov
xchg
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
(bad)
inc
daa
leave
pop
sub
and
mov
and
mov
sub
(bad)
(bad)
call
fidivr
sub
ds
sbb
sub
call
das
ror
cld
mul
pop
jno
pop
cmp
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
(bad)
(bad)
push
fmul
jg
or
jl
je
jns
push
inc
js
mov
(bad)
fdiv
ja
jnp
cs
fdivrp
cmp
nop
es
xchg
icebp
jmp
pop
in
ja
add
push
or
bound
stos
sub
(bad)
(bad)
jmp
shr
aam
cmps
gs
fs
imul
dec
pop
mov
(bad)
jg
stos
outs
jns
dec
cld
arpl
dec
retf
or
xchg
mov
dec
movs
(bad)
(bad)
(bad)
call
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
dec
push
add
push
ds
mov
mov
clc
push
mov
adc
push
aad
jg
(bad)
(bad)
mov
pop
fist
pop
xchg
pop
mov
movs
pop
lock
add
sub
(bad)
(bad)
inc
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
(bad)
(bad)
(bad)
jmp
in
or
es
mov
out
push
sahf
mov
in
in
das
call
mov
pop
loopne
ss
jmp
pop
imul
fcom
cld
sahf
ins
xchg
(bad)
test
(bad)
(bad)
(bad)
call
sbb
sbb
sti
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
(bad)
(bad)
(bad)
inc
hlt
mov
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
jno
mov
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
(bad)
(bad)
(bad)
jmp
shr
out
pop
sbb
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
pop
cld
(bad)
call
ret
xchg
ret
mov
call
dec
retf
lahf
lds
pop
cmc
(bad)
call
or
je
inc
int3
inc
ins
xchg
sbb
ror
mov
xchg
ja
ins
nop
(bad)
(bad)
(bad)
jmp
inc
sub
pushf
cmps
xchg
stos
push
fs
repnz
clc
(bad)
mov
sahf
(bad)
(bad)
(bad)
call
jns
popf
and
mov
adc
xor
xor
dec
mov
(bad)
(bad)
call
or
(bad)
in
popf
or
dec
add
mov
(bad)
mov
push
pop
cmp
(bad)
jmp
mov
adc
fadd
arpl
pop
xchg
shl
test
(bad)
(bad)
(bad)
dec
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
(bad)
(bad)
(bad)
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
dec
adc
inc
not
xor
mov
ficomp
mov
(bad)
jmp
push
add
mov
stos
out
scas
mov
push
xchg
bound
fwait
push
mov
mov
lds
loopne
outs
add
(bad)
(bad)
inc
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
(bad)
(bad)
(bad)
clc
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
(bad)
(bad)
(bad)
call
sbb
inc
(bad)
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
sar
(bad)
(bad)
inc
xchg
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
(bad)
(bad)
push
in
jecxz
pop
push
or
mov
sub
les
and
or
sahf
loop
outs
dec
jg
or
(bad)
jge
aad
shl
rcr
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
scas
test
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
pop
(bad)
(bad)
(bad)
(bad)
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
das
(bad)
(bad)
out
clc
retf
jnp
dec
ja
prefetchw
or
jae
mov
cmc
cwde
outs
inc
nop
(bad)
(bad)
(bad)
(bad)
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
mov
mov
cmp
cmp
sub
pop
outs
xchg
add
cmp
inc
mov
das
xchg
in
pop
xchg
sub
(bad)
(bad)
call
mov
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
in
(bad)
(bad)
mov
inc
das
dec
leave
xor
inc
arpl
adc
push
inc
jb
mov
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
cmp
mov
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
sar
(bad)
mov
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
(bad)
call
push
nop
pop
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
(bad)
(bad)
(bad)
in
loope
mov
sub
dec
dec
cmc
scas
repz
xor
mov
xchg
(bad)
jmp
dec
leave
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
sbb
(bad)
out
jp
repnz
and
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
(bad)
(bad)
(bad)
jmp
add
and
(bad)
push
arpl
popa
stc
(bad)
and
push
mov
(bad)
(bad)
(bad)
inc
add
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
(bad)
(bad)
(bad)
mov
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
(bad)
(bad)
(bad)
call
lods
std
int3
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
dec
fidiv
jmp
(bad)
stc
mov
mov
lock
imul
push
fwait
cmp
ss
test
(bad)
cs
mov
call
mov
loope
(bad)
(bad)
(bad)
into
cs
out
add
add
pop
std
pop
jmp
(bad)
(bad)
call
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
(bad)
(bad)
(bad)
dec
les
sbb
loope
push
adc
cmp
adc
mov
jmp
(bad)
jle
cmp
pushf
in
adc
add
sbb
cmps
push
data16
jno
ds
(bad)
(bad)
(bad)
fisubr
dec
mov
add
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
lods
(bad)
(bad)
push
fucomi
cmps
xchg
addr16
pop
test
or
xchg
popa
mov
fdivrp
ja
(bad)
(bad)
inc
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
(bad)
(bad)
fdivr
push
xchg
rcr
mov
mov
sub
jl
out
sub
xchg
sbb
mov
(bad)
push
jno
test
aam
ins
fucom
jmp
aam
push
sub
call
ins
cwde
push
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
(bad)
(bad)
(bad)
cmp
enter
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
(bad)
(bad)
(bad)
push
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
(bad)
jmp
clc
fnstenv
lods
push
mov
enter
mov
mov
mov
mov
and
mov
call
sub
mov
or
or
mov
or
and
outs
jl
pop
push
sbb
stos
mov
sub
nop
add
jno
cwde
shl
mov
jno
test
lahf
mov
add
pop
leave
les
and
(bad)
(bad)
(bad)
dec
test
loope
cwde
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
gs
repnz
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
jg
(bad)
mov
mov
sbb
mov
jl
sti
aam
gs
mov
(bad)
push
cwde
test
into
mov
mov
movs
inc
cmp
sar
(bad)
(bad)
inc
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
(bad)
(bad)
dec
or
jno
daa
add
mov
or
xchg
mov
and
mov
(bad)
call
aam
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
(bad)
push
cmp
mov
and
mov
loop
mov
call
inc
cmp
(bad)
adc
jecxz
or
xchg
cmp
(bad)
ds
pop
test
push
iret
or
add
mov
setae
mov
(bad)
(bad)
(bad)
jmp
push
ret
bound
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
(bad)
(bad)
call
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
inc
ret
fcomip
push
sar
addr16
mov
fisttp
call
push
dec
fmul
sbb
dec
test
fbld
ret
test
fist
jmp
out
inc
imul
outs
shl
push
push
ja
mov
add
mov
lds
or
sub
call
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
inc
ins
xchg
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
or
sbb
xchg
ror
repnz
mov
fcmovnu
and
aam
mov
(bad)
inc
fnsave
outs
cmp
ja
sbb
(bad)
(bad)
call
dec
push
pushw
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
jmp
js
or
adc
ret
es
shl
test
ja
scas
sar
(bad)
(bad)
jmp
(bad)
pop
fadd
or
fdivr
lock
mov
iret
jg
mov
jmp
(bad)
push
sbb
mov
xchg
xor
mov
add
push
ficom
and
addr16
(bad)
jmp
les
mov
sub
xchg
mov
mov
mov
sub
add
(bad)
call
sbb
inc
xor
bound
lods
lds
(bad)
(bad)
(bad)
jge
hlt
inc
push
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
(bad)
(bad)
push
sub
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
(bad)
(bad)
(bad)
push
mov
adc
cwde
mov
add
sbb
sbb
ss
call
(bad)
(bad)
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
idiv
call
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
jmp
and
pop
out
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
call
mov
xor
mov
sbb
jne
pop
mov
sti
push
test
jns
jmp
sar
out
cmp
jns
push
dec
push
lds
jge
fisubr
cmp
jns
add
jmp
inc
ret
xchg
push
sbb
xchg
adc
mov
cmp
lds
(bad)
mov
cmps
(bad)
adc
add
inc
xlat
xor
cli
bound
call
hlt
mov
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
(bad)
(bad)
(bad)
call
cmc
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
out
sar
fidivr
std
imul
and
add
(bad)
call
mov
and
mov
loope
mov
shr
lahf
adc
xchg
mov
(bad)
(bad)
jmp
and
rcl
jmp
ja
das
aas
jns
ss
mov
or
je
adc
(bad)
(bad)
fcomip
xor
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
sar
(bad)
(bad)
call
cmp
call
js
cmps
cmp
sbb
or
cli
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
push
fdiv
adc
out
movs
add
test
mov
push
ja
cmp
(bad)
call
fst
ss
daa
mov
fnstsw
pop
hlt
(bad)
inc
bound
(bad)
lds
(bad)
out
hlt
push
out
rcl
pop
cli
jmp
sbb
test
xor
imul
(bad)
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
sub
in
scas
(bad)
(bad)
(bad)
(bad)
mov
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
(bad)
(bad)
(bad)
push
push
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
jg
cs
dec
shl
out
stc
add
xlat
push
scas
xchg
adc
lea
jmp
dec
popf
mov
inc
mov
and
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
(bad)
(bad)
call
push
jns
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
mov
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
(bad)
(bad)
(bad)
jmp
xchg
mov
xchg
push
mov
repz
inc
gs
dec
xchg
outs
jne
mov
(bad)
cmp
ss
or
push
aas
gs
jns
(bad)
mov
sbb
pop
cld
jmp
mov
daa
repnz
mov
mov
out
and
loope
or
call
cld
mov
jle
shl
imul
inc
cmp
ja
fsub
(bad)
(bad)
jmp
out
push
or
test
mov
adc
xor
jmp
ret
add
pop
lods
test
push
retf
ret
(bad)
(bad)
inc
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
(bad)
dec
lock
cmp
sbb
mov
sbb
call
das
or
stos
ffreep
sbb
cmc
adc
cwde
call
mov
cmps
adc
xchg
(bad)
(bad)
(bad)
call
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
aas
inc
out
cmp
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
push
push
mov
mov
shr
xor
add
and
in
mov
cmps
daa
(bad)
(bad)
call
aam
es
dec
dec
and
cdq
and
and
adc
sub
ficomp
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
(bad)
(bad)
jmp
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
(bad)
(bad)
(bad)
push
push
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
mov
mov
cli
fisub
nop
jmp
ja
(bad)
cmp
call
xor
imul
jg
arpl
popa
sub
push
cmps
push
std
(bad)
call
aam
fs
mov
dec
xlat
retf
and
mov
dec
jmp
add
sbb
arpl
dec
sbb
retf
dec
pop
mov
dec
(bad)
(bad)
(bad)
call
call
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
(bad)
(bad)
(bad)
dec
push
addr16
jne
ds
mov
or
ror
adc
push
(bad)
(bad)
(bad)
(bad)
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
jle
(bad)
jmp
sbb
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fcos
(bad)
call
stos
mov
or
cmp
in
paddsb
hlt
popa
call
(bad)
jmp
jmp
stos
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
(bad)
(bad)
jmp
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
(bad)
(bad)
call
lea
int
js
pusha
fdivr
mov
fstp
jecxz
fidiv
(bad)
(bad)
(bad)
(bad)
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
shl
(bad)
(bad)
(bad)
inc
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
sub
(bad)
dec
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
nop
ins
cld
ja
mov
inc
cs
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
out
clc
dec
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
call
(bad)
(bad)
push
pop
mov
mov
sbb
mov
or
(bad)
(bad)
(bad)
jmp
pop
push
mov
sbb
int3
push
test
arpl
aad
or
(bad)
call
mov
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
(bad)
(bad)
inc
das
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
(bad)
(bad)
(bad)
push
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
std
(bad)
(bad)
jmp
push
mov
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
call
mov
or
mov
mov
out
(bad)
bound
xor
xlat
mov
mov
or
outs
mov
dec
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fucom
fbstp
pop
arpl
push
push
sbb
call
adc
jno
jnp
cli
(bad)
inc
enter
lods
jne
or
into
outs
es
lods
jg
sub
mov
xchg
(bad)
(bad)
call
rcr
mov
(bad)
and
xor
pop
or
addr16
(bad)
(bad)
(bad)
inc
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
(bad)
(bad)
(bad)
(bad)
sub
jmp
jecxz
in
fmul
lock
mov
pop
and
push
xor
jmp
loop
push
dec
jg
outs
test
or
rcr
(bad)
(bad)
(bad)
call
mov
lahf
xchg
sbb
daa
sub
mov
inc
and
(bad)
xchg
test
call
(bad)
call
cmp
xor
not
adc
iret
push
retf
mov
ret
pusha
test
cli
(bad)
jmp
pop
mov
test
fistp
ret
imul
(bad)
dec
inc
ja
imul
setl
(bad)
sub
mov
cwde
cmc
cld
sar
(bad)
(bad)
(bad)
call
push
fidiv
sbb
mov
inc
sub
mov
cmp
(bad)
out
clc
(bad)
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
(bad)
(bad)
(bad)
jmp
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
(bad)
(bad)
(bad)
dec
leave
dec
das
(bad)
stc
xor
inc
out
imul
pushf
rol
push
jb
pop
xlat
(bad)
(bad)
push
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
inc
(bad)
call
jge
popf
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
fcomip
inc
in
sbb
bound
and
inc
sbb
jmp
sbb
dec
aam
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
or
xchg
or
inc
loope
add
sub
scas
cmc
test
(bad)
(bad)
jg
and
mov
mov
sbb
ror
sar
add
push
data16
jg
jmp
dec
sub
jns
and
dec
imul
cmc
xlat
jle
out
ja
(bad)
call
mov
mov
ret
push
jp
jmp
fnop
add
inc
and
stc
popa
call
add
(bad)
jg
(bad)
fsubr
or
sbb
into
sub
mov
xchg
(bad)
loope
(bad)
(bad)
push
fxch
sub
inc
and
jne
jp
adc
scas
dec
jae
(bad)
(bad)
(bad)
call
out
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
dec
das
jns
inc
xchg
push
xor
es
jmp
fdiv
inc
mov
(bad)
(bad)
dec
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
(bad)
(bad)
push
xor
push
ja
ss
adc
out
mov
loopne
jbe
pop
not
dec
jmp
pop
std
icebp
push
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
jl
(bad)
(bad)
(bad)
dec
(bad)
pop
sbb
mov
repz
in
test
adc
ja
mov
ret
std
jmp
cmp
cdq
in
or
pushw
(bad)
(bad)
(bad)
jmp
sub
fisubr
sar
lock
out
mov
mov
push
inc
sar
(bad)
(bad)
(bad)
dec
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
and
outs
sahf
out
fiadd
xor
cmp
push
pop
call
xchg
outs
gs
je
jnp
jg
outs
outs
popa
jb
ss
gs
ins
and
fs
imul
jb
outs
jb
sbb
popa
adc
mov
dec
arpl
je
ins
gs
and
bound
cmp
sti
xor
outs
ins
jo
imul
push
shl
cmp
add
xlat
mov
out
jmp
sub
push
mov
mov
add
sti
(bad)
out
popa
pop
clc
or
lsl
or
pop
clts
mov
mov
add
add
push
add
fidiv
push
aaa
add
push
inc
xor
jle
sbb
add
add
adc
mov
scas
add
jae
cmp
out
add
push
nop
neg
pop
xlat
xor
addr16
lock
add
dec
and
push
sti
add
or
or
fmul
ret
add
xchg
sub
out
and
adc
add
punpckhwd
test
xchg
mov
xor
jne
cmp
push
or
mov
push
xchg
cmp
sub
mov
test
cmp
into
test
outs
or
pop
pusha
mov
add
cmp
cmp
out
push
mov
xor
icebp
jae
outs
sar
sub
dec
inc
pop
cwde
sbb
dec
bswap
out
popf
or
sti
inc
std
cld
stos
lea
fld
pop
pop
bound
aas
fistp
dec
add
push
int3
aam
add
idiv
add
fdiv
in
iret
sar
hlt
add
or
sbb
fdivp
cmp
sub
ss
dec
push
push
repz
xor
push
je
movs
mov
aam
add
and
xchg
pushf
pop
aaa
aas
jns
loop
inc
add
or
rol
dec
xchg
xor
pusha
xchg
call
pop
inc
into
test
pop
iret
sti
popa
popa
add
push
iret
repz
lods
(bad)
aam
jns
out
lock
adc
out
sahf
out
pop
jo
nop
sahf
out
sahf
pushf
mov
int3
loopne
cmp
sar
sbb
cmp
repz
repz
out
call
inc
or
jns
dec
pop
jo
sysret
and
scas
imul
ins
js
adc
xchg
pop
(bad)
rol
mov
scas
or
into
cmp
out
push
outs
(bad)
push
push
adc
sbb
sub
je
pop
fist
and
aas
(bad)
aaa
lds
push
jne
add
add
out
cdq
addr16
pop
adc
add
sub
cmp
ins
aas
sbb
or
iret
pusha
outs
push
mov
jecxz
inc
pusha
divps
neg
sbb
iret
inc
or
or
or
popa
sbb
call
sbb
adc
and
aaa
jmp
inc
out
jae
push
mov
fidiv
nop
push
outs
adc
sbb
jo
xor
pop
inc
mov
xchg
xchg
add
add
pop
pop
ret
or
pop
das
pop
sti
jmp
(bad)
mov
iret
repz
mov
sub
repz
(bad)
(bad)
das
out
pop
add
test
add
xchg
add
add
dec
pop
push
push
cld
xlat
fmul
mov
add
inc
adc
fs
in
mov
pop
fiadd
xor
fwait
jle
xor
xor
xor
add
mov
lds
pop
xchg
inc
add
inc
add
inc
iret
iret
adc
je
pop
mov
mov
into
repz
fsubr
enter
iret
repz
cmp
fs
cmp
repz
mov
ss
retf
iret
adc
mov
and
mov
(bad)
push
mov
adc
fidivr
xchg
mov
out
rcl
(bad)
(bad)
mov
popf
push
adc
push
(bad)
sbb
(bad)
(bad)
jmp
fs
xchg
cs
jb
xor
enter
pop
outs
imul
in
jecxz
ret
and
out
movs
mov
lock
retf
cmps
or
ins
fild
add
push
add
mov
pop
pop
add
jns
jmp
je
iret
sar
call
push
ds
repz
cwde
(bad)
clc
or
jns
out
cmp
xor
in
shr
pop
js
ja
out
mov
jbe
lahf
out
sahf
mov
cmp
repz
mov
call
cmp
lock
out
mov
call
cmp
push
push
je
rcr
repz
mov
push
ds
int3
hlt
sbb
out
ins
pushf
jns
popf
jmp
push
push
idiv
out
movs
mov
jns
out
push
cmp
mov
fmul
and
mov
mov
add
scas
push
inc
repz
repz
mov
call
adc
ss
mov
repz
sub
mov
ins
pushf
sahf
ja
out
call
pusha
nop
push
lahf
out
test
in
or
(bad)
repz
repz
push
js
int3
hlt
out
sahf
out
loopne
jo
mov
loopne
loope
push
xor
sbb
sahf
out
mov
push
dec
jl
out
pop
cwde
enter
repz
sbb
inc
jo
mov
sbb
adc
outs
push
pop
fucom
jns
xchg
test
in
and
out
jns
out
push
js
enter
mov
push
dec
js
mov
ja
cmp
or
cmps
push
inc
ins
jge
out
mov
out
fisubr
sar
iret
sbb
mov
je
int3
iret
repz
push
dec
mov
add
jbe
js
les
sbb
in
fiadd
pop
xchg
mov
fdiv
adc
es
idiv
out
test
hlt
and
ss
out
push
push
repz
out
xchg
fs
repz
movs
mov
sahf
out
fidivr
push
ins
test
sbb
cmps
push
ins
mov
in
repnz
push
pop
out
sahf
out
mov
fst
scas
push
jl
rcr
mov
hlt
xchg
je
out
ds
mov
sbb
cs
js
repz
pushf
enter
xor
iret
repz
pushf
(bad)
in
adc
jns
out
outs
push
pusha
test
out
sbb
sahf
push
pop
je
mov
fadd
stc
mov
iret
repz
(bad)
loopne
cli
cmps
cmp
repz
aam
jns
ja
sbb
sahf
push
jo
mov
fdiv
add
es
pusha
out
repz
test
sti
cmp
repz
ins
nop
mov
or
(bad)
cmp
repz
aam
jns
aaa
clc
sbb
ds
je
les
jecxz
call
push
cmp
mov
movs
fadd
add
push
iret
repz
cmp
test
and
dec
ins
mov
jns
adc
cmp
out
ds
rep
shl
or
push
pop
cmp
repz
cwde
lods
shl
iret
repz
push
pop
xchg
mov
sahf
cmps
stc
cmp
add
sub
pusha
jl
out
js
mov
add
repz
rcr
pop
js
out
cmp
lods
int3
call
out
sahf
inc
push
js
lods
aam
dec
repz
and
dec
ins
mov
(bad)
in
or
out
sahf
out
cmp
lods
jns
jge
enter
mov
fs
out
lods
enter
iret
repz
xor
test
call
inc
pusha
jns
out
js
rcr
sahf
out
neg
mov
mov
fdiv
sbb
inc
push
push
repz
rep
xchg
mov
call
adc
push
push
dec
fs
out
sahf
lods
enter
adc
iret
repz
enter
out
repz
and
ds
pop
ins
mov
mov
inc
push
iret
repz
cmp
jo
movs
mov
fdiv
or
pop
push
inc
jns
out
pop
je
test
repz
out
lock
cmp
pop
jo
rcr
repz
ds
inc
push
inc
pusha
jl
repz
xchg
test
in
adc
inc
dec
fs
jl
out
mov
sbb
cmp
cmp
les
ds
loopne
and
(bad)
push
pop
je
cmp
repz
sbb
cmp
repz
pushf
mov
mov
add
scas
push
dec
out
sahf
out
sub
add
into
push
dec
je
cmp
ds
enter
inc
push
repz
push
pusha
idiv
out
movs
(bad)
call
sahf
out
push
dec
jo
mov
fnop
(bad)
push
inc
mov
jns
mov
clc
sbb
xor
cmp
repz
mov
repz
adc
inc
push
pop
je
fsubp
repz
clc
adc
mov
push
mov
repz
sbb
ins
mov
out
add
xchg
enter
repz
sbb
inc
pop
nop
sbb
mov
lock
mov
iret
repz
push
sbb
inc
ins
nop
lods
hlt
cmp
sbb
push
push
push
mov
in
or
cmps
push
inc
pusha
ds
repz
mov
iret
repz
jbe
pop
xor
ds
cs
dec
jo
out
out
mov
add
ss
inc
sahf
out
sahf
pop
ins
test
jl
cs
dec
ins
nop
jns
loope
lods
adc
sahf
push
lods
loopne
mov
xor
push
pop
jl
clc
cmp
xchg
shl
xor
fucom
jns
push
xor
idiv
out
test
jns
out
push
dec
js
mov
out
sbb
push
ins
mov
or
cli
cmp
repz
out
sahf
ja
push
push
js
ror
push
lahf
in
aaa
fiadd
je
out
fimul
cwde
mov
add
iret
repz
push
nop
enter
ds
mov
aam
cmp
clc
cmp
or
mov
pushf
loopne
iret
sbb
jbe
push
aaa
clc
add
cs
fs
int3
repz
aas
push
push
jo
mov
fdiv
adc
mov
pusha
sti
cmp
repz
jbe
iret
repz
in
or
jl
out
ss
ins
pushf
aam
inc
lahf
out
push
push
push
ins
movs
aam
inc
out
sahf
ja
push
pop
js
hlt
out
repz
push
mov
sub
lods
ds
repz
xchg
shl
sbb
jnp
sahf
out
mov
cld
and
push
iret
repz
ins
xchg
mov
hlt
adc
out
(bad)
pop
jl
aam
jns
jns
sbb
out
push
lahf
enter
push
dec
push
cmp
mov
iret
repz
cmps
push
pop
jo
mov
sahf
ja
cmp
adc
push
push
pop
jo
sahf
out
mov
sahf
out
fidivr
push
pop
test
jl
dec
es
pop
add
mov
out
inc
mov
add
(bad)
in
retf
push
dec
in
les
add
retf
add
add
outs
add
cmp
add
add
add
or
shl
outs
add
mov
add
cmp
(bad)
xchg
add
jbe
imul
mov
add
push
sbb
daa
add
nop
fldcw
add
xor
jbe
in
inc
cmp
add
inc
dec
(bad)
(bad)
push
xor
in
mov
hlt
pop
add
push
fwait
push
push
mov
xchg
dec
cs
arpl
add
bound
add
data16
xor
xchg
push
add
push
retf
push
test
add
inc
outs
pop
add
push
pop
add
enter
push
je
jne
sbb
enter
jns
pushf
pushf
pushf
jp
jl
in
fnstsw
mov
loopne
loope
push
int3
mov
std
mov
and
cwde
(bad)
sbb
in
fild
pop
pop
add
imul
add
push
add
adc
adc
pop
hlt
jmp
adc
daa
sbb
sbb
and
daa
sub
daa
bound
and
dec
(bad)
(bad)
jmp
dec
and
dec
and
dec
mov
adc
dec
popa
push
enter
and
jno
(bad)
(bad)
push
(bad)
loopne
stos
fisubr
fisubr
fidiv
fisubr
inc
ds
data16
or
mov
or
retf
mov
and
repnz
sti
(bad)
repz
and
(bad)
test
dec
and
stc
(bad)
jle
les
add
dec
rcl
call
xchg
push
xor
sub
stos
lahf
pop
push
mov
enter
loop
jecxz
add
clc
jmp
add
add
add
add
add
add
mov
cmp
call
push
xor
cmp
repz
pop
jo
cwde
add
cmp
lods
rcl
call
das
outs
aaa
sbb
add
imul
mov
daa
ins
push
add
pop
jnp
xchg
lods
rcl
in
push
ret
into
jae
add
xchg
xor
dec
imul
outs
pop
pusha
daa
add
sahf
out
mov
mov
hlt
popa
out
lock
jbe
cmp
mov
pop
fs
add
pop
ins
push
inc
mov
pop
jo
out
cwde
mov
clc
cmp
enter
jb
push
sahf
out
sahf
cmp
ins
test
int3
in
adc
out
sahf
fiadd
inc
pop
jo
cwde
jo
out
lods
(bad)
aam
cmp
jae
and
push
sub
pop
repz
repz
movs
mov
iret
in
adc
push
cmp
repz
repz
mov
in
adc
push
inc
repz
repz
jo
pushf
mov
clc
cmp
enter
ja
push
sahf
out
sahf
cmp
jo
pushf
jl
out
mov
fdiv
or
cmp
pop
test
dec
fs
repz
nop
movs
mov
out
cmp
sub
pop
jo
sahf
out
test
shl
or
push
xor
iret
repz
pusha
js
movs
mov
repz
repz
clc
or
push
xor
repz
dec
pop
jo
pushf
mov
iret
repz
in
adc
sahf
out
push
cmp
push
sahf
out
mov
jns
out
push
push
sub
pop
push
adc
ja
call
sub
push
out
sahf
out
js
mov
sahf
enter
jg
push
xor
repz
pop
jo
pushf
sti
cmp
repz
in
adc
mov
adc
mov
pop
cmp
rcr
mov
mov
xor
sub
push
mov
cdq
(bad)
outs
(bad)
inc
and
push
and
and
and
and
sub
arpl
inc
and
and
sub
das
and
lock
(bad)
push
and
aas
and
inc
and
dec
and
(bad)
(bad)
(bad)
cmp
and
pop
and
popa
and
and
imul
ins
and
jae
and
pop
(bad)
cmp
add
and
xor
das
clc
ss
and
inc
and
dec
pop
sti
push
mov
push
and
add
jg
adc
fisub
sub
sub
aaa
cmp
cmp
aam
inc
dec
dec
dec
dec
push
push
push
push
pop
pop
pop
add
add
arpl
imul
ja
jnp
add
xor
mov
fbstp
push
inc
and
add
fiadd
sub
sub
jmp
sub
mov
add
or
dec
mov
add
and
cmp
cmp
cmp
cmc
mov
add
xor
inc
add
inc
sub
inc
add
loop
std
mov
add
dec
jmp
das
cli
inc
mov
push
add
add
push
add
add
pop
fisttp
clc
add
pop
add
popa
add
mov
add
add
data16
add
push
imul
add
mov
add
outs
out
jno
jb
jae
add
jbe
ja
cli
add
jp
jnp
jl
(bad)
(bad)
mov
and
and
and
and
add
add
add
add
add
(bad)
(bad)
inc
sub
add
add
add
add
add
xor
add
add
add
add
add
(bad)
(bad)
inc
cmp
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
(bad)
inc
dec
add
dec
add
push
add
push
add
add
push
add
pop
add
pop
add
pop
icebp
add
pop
mov
pusha
add
bound
arpl
add
add
push
(bad)
(bad)
jmp
imul
add
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
or
add
jl
jge
jle
jg
add
mov
into
ret
call
pop
je
rcl
stos
stos
popf
loopne
mov
adc
sub
(bad)
dec
and
mov
mov
adc
push
push
mov
(bad)
(bad)
inc
call
out
into
mov
cmc
sub
xchg
inc
xor
fcomp
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
mov
adc
std
mov
cmps
and
mov
bound
(bad)
(bad)
(bad)
inc
push
pop
pop
es
(bad)
mov
pop
adc
(bad)
push
adc
add
sti
shl
out
loope
(bad)
pop
(bad)
(bad)
(bad)
push
ret
xchg
pop
inc
add
mov
outs
mov
lea
cli
inc
push
and
ins
or
in
inc
jmp
pusha
dec
mov
mov
cli
daa
(bad)
(bad)
(bad)
jmp
aam
sbb
aam
in
(bad)
clc
jl
pop
gs
lods
les
hlt
xchg
(bad)
(bad)
(bad)
(bad)
jmp
inc
cmps
and
ret
pop
pop
gs
int3
or
jge
out
call
pop
test
loopne
lock
(bad)
jmp
adc
add
cmp
xor
rcl
sub
mov
sar
fbld
add
push
arpl
dec
inc
push
and
and
imul
xchg
push
or
jl
fs
mov
inc
add
pop
(bad)
adc
cwde
cmp
cwde
fstp
and
arpl
mov
fwait
cmp
aam
cmp
mov
push
mov
xlat
ja
push
arpl
and
jae
fidiv
and
inc
pop
mov
arpl
aas
adc
push
fidivr
js
inc
pop
xchg
cmps
outs
dec
or
jae
fs
pop
lahf
aaa
push
(bad)
fstp
xor
or
add
fiadd
or
cmp
and
mov
add
sub
int3
inc
repz
sbb
cmp
and
dec
dec
inc
sbb
rcl
add
test
add
push
out
aaa
push
jo
stos
lahf
aas
loopne
repnz
push
inc
(bad)
cmp
or
sub
popa
cmp
in
mov
nop
push
inc
pop
push
pop
xor
mov
and
and
add
jg
cmc
cmps
call
add
or
pop
add
outs
jae
popa
daa
dec
xchg
add
push
pop
inc
out
call
push
iret
repz
(bad)
(bad)
(bad)
dec
test
jg
add
(bad)
jg
inc
push
push
inc
inc
push
inc
xor
xor
dec
dec
inc
pop
sbb
adc
repz
pop
add
push
mov
into
repz
cmp
cwde
lods
fdiv
in
add
add
ret
sub
int3
cmp
inc
pop
inc
pop
das
sbb
add
popa
push
push
add
jle
add
xchg
inc
jae
in
aas
les
mov
inc
or
stos
jbe
mov
addr16
cmp
repz
loopne
call
push
inc
push
dec
add
sbb
or
adc
aaa
pop
aaa
jnp
mov
fisttp
inc
push
add
mov
push
stc
in
sahf
out
loope
add
mov
lock
mov
cmp
(bad)
inc
int3
cmp
add
xor
bswap
aas
inc
mov
(bad)
(bad)
(bad)
dec
mov
(bad)
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
(bad)
(bad)
jmp
xchg
push
scas
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwde
pop
(bad)
(bad)
(bad)
jmp
fwait
pop
cmps
addr16
push
add
xor
push
into
inc
shl
or
inc
mov
(bad)
(bad)
(bad)
dec
inc
mov
lea
jge
loop
shr
out
push
fisub
loope
shr
bound
jmp
popa
xchg
push
lods
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
dec
mov
inc
dec
mov
jne
jmp
sub
sbb
and
push
pop
inc
lock
imul
lds
fistp
in
push
inc
dec
push
dec
xor
and
jae
push
xor
jle
mov
sbb
push
bound
mov
inc
sub
mov
jle
sbb
push
and
mov
or
in
aaa
xor
push
and
sbb
or
int3
fmulp
push
push
sbb
cmps
mov
pop
aad
push
ss
xor
dec
mov
xor
aas
retf
cld
jmp
xchg
scas
out
aas
stos
adc
shl
sub
cmp
inc
imul
jnp
push
loope
pop
stos
jb
push
test
lahf
xchg
ror
push
cmp
adc
sbb
shl
push
adc
icebp
add
mov
and
mov
sub
and
pop
cmps
imul
scas
cmp
repz
and
xor
cmp
repz
xor
and
cmc
cmp
sbb
push
repz
adc
push
xor
cmp
cmp
xor
es
daa
push
jno
ret
xor
cmp
repz
ss
aaa
popf
shl
xor
pop
addr16
push
into
rcr
pop
push
pop
xor
pop
out
xor
or
adc
aaa
ja
cmp
pop
aas
pop
pushf
xlat
cmp
pop
pop
scas
push
push
push
into
rcr
pop
aaa
daa
pop
loopne
repz
dec
cmps
ds
out
xlat
cmc
mov
jmp
into
repz
jno
out
das
dec
push
and
push
js
mov
dec
out
shl
scas
pop
loopne
out
arpl
aaa
xor
loopne
pop
iret
mov
pop
mov
push
cs
xlat
out
inc
aas
inc
xor
outs
aaa
ja
add
xor
pop
cmps
outs
pop
jnp
sahf
inc
jp
imul
pop
(bad)
fstp
add
add
push
pop
or
or
add
jg
xor
add
add
add
adc
mov
adc
idiv
(bad)
push
inc
push
adc
pop
and
xor
inc
mov
adc
xor
xor
(bad)
call
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
(bad)
(bad)
(bad)
call
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
movs
movs
cmps
cmps
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
shl
(bad)
(bad)
call
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
int
add
pop
gs
inc
mov
push
pop
popa
jno
and
or
or
push
push
lock
shl
xor
and
add
imul
adc
push
mov
sahf
cmps
stc
push
xchg
js
shl
cmp
repz
fwait
iret
mov
cs
pop
cld
fistp
cmp
repz
mov
in
sbb
inc
pusha
test
add
add
pop
push
add
add
add
xchg
hlt
push
into
call
pop
cmps
les
(bad)
paddusb
inc
call
or
cmp
sahf
add
mov
push
fadd
or
add
push
sar
cmp
repz
dec
mov
fs
outs
fucomi
add
push
test
push
outs
jbe
dec
mov
inc
push
fcom
es
adc
sbb
pop
jge
sub
outs
ss
cs
push
je
in
jnp
data16
sbb
pop
outs
and
data16
push
ds
std
(bad)
test
nop
push
inc
ds
popa
dec
inc
xchg
shl
mov
mov
push
ds
jp
cmp
push
mov
mov
push
mov
es
ds
push
hlt
out
cs
(bad)
out
mov
push
dec
dec
cmp
test
ja
push
ins
ss
push
mov
add
xor
cmp
(bad)
mov
xor
sub
pop
pop
fisubr
shl
out
push
outs
ins
out
test
test
inc
push
jl
inc
cwde
jle
mov
push
in
movs
(bad)
adc
dec
fdivr
mov
pop
mov
out
sbb
es
pop
push
js
lods
mov
dec
out
push
inc
mov
sbb
data16
test
push
outs
pushf
dec
mov
xchg
mov
out
add
ffreep
jae
cs
and
scas
cmp
test
adc
fsubr
pop
callw
xor
cmps
mov
cwde
mov
loope
mov
and
je
fadd
clc
push
fdivr
les
les
dec
idiv
rol
mov
sahf
je
pop
ss
cmp
clc
xor
mov
sar
push
cwde
out
aam
xor
or
lock
pop
mov
data16
sti
sar
outs
mov
push
hlt
push
sbb
pop
movs
es
push
sub
inc
push
xor
lock
dec
jbe
out
sbb
inc
push
xor
inc
(bad)
pop
push
push
push
pop
fiadd
xchg
es
in
into
or
loope
push
dec
sbb
sbb
push
xchg
lock
jo
ins
inc
shr
mov
mov
and
inc
sahf
les
je
js
out
mov
push
es
ds
or
fistp
data16
int3
push
inc
in
das
ret
div
jle
cs
(bad)
sahf
cld
movs
mov
fadd
inc
pushf
push
rol
ds
sbb
push
loopne
test
scas
pop
push
faddp
adc
mov
sbb
ret
mov
cs
mov
push
faddp
adc
hlt
into
shl
in
cmps
jl
cmp
sub
xchg
mov
push
pushf
jle
pop
out
mov
mov
adc
sub
dec
es
(bad)
loopne
mov
push
jle
push
fidivr
mov
push
in
or
lds
push
rcr
(bad)
shl
scas
xchg
out
jge
mov
in
fs
push
(bad)
jl
mov
jnp
fdivr
int3
ss
jbe
fidiv
hlt
push
test
fnstsw
test
out
mov
mov
cld
data16
push
pushf
mov
cmp
cwde
add
mov
xor
cmp
ins
push
in
mov
push
push
fimul
hlt
cmps
hlt
jle
inc
fs
div
int3
jle
push
je
sar
aam
jecxz
pop
ds
push
add
movs
jle
push
cmp
jnp
pop
mov
inc
mov
push
scas
sub
out
mov
xchg
in
inc
xchg
cmps
inc
neg
jbe
push
jl
lock
mov
jmp
es
out
sbb
iret
leave
retf
daa
(bad)
lahf
jle
es
sar
ja
test
mov
faddp
hlt
scas
int3
push
les
xchg
lods
lds
scas
neg
mov
ds
cmp
xchg
hlt
push
shr
(bad)
fs
jne
js
adc
pop
xchg
and
sub
js
jnp
inc
es
(bad)
jl
test
cmp
sar
out
push
mov
add
pop
es
pop
(bad)
movs
data16
out
loopne
mov
mov
or
pop
push
clc
jmp
sbb
loopne
ja
or
xchg
je
lods
cs
cmps
out
sbb
push
cwde
push
cmp
or
out
cmp
push
cld
les
pop
pop
push
enter
mov
dec
push
dec
jo
cs
imul
xor
mov
sbb
add
out
mov
neg
xchg
ss
aam
sar
rol
movs
push
hlt
dec
hlt
neg
rol
mov
jl
cld
xchg
or
lock
cmp
es
add
push
cmp
into
cmc
push
faddp
in
ins
scas
and
nop
dec
je
cmp
pop
push
dec
jl
pop
sar
outs
les
push
push
and
out
lock
ds
pop
nop
jbe
push
sbb
lock
ds
push
adc
adc
ins
loope
xor
hlt
(bad)
je
pushf
ds
hlt
sbb
loopne
outs
int3
es
aam
adc
pop
(bad)
pcmpgtd
mov
cld
cwde
fidivr
js
jbe
mov
sub
shr
lock
push
or
push
jl
mov
push
sbb
push
cld
call
out
push
cs
push
call
js
js
ds
xchg
adc
aas
out
xchg
inc
rol
sahf
pop
mov
fs
push
mov
cmp
stos
adc
mov
jnp
dec
mov
mov
mov
add
mov
out
aam
add
xchg
pop
outs
int3
ds
cmp
hlt
into
xor
jl
pop
(bad)
ret
test
ret
xchg
ss
xabort
or
ret
xor
hlt
aas
jo
cmc
ds
out
out
push
and
pop
sbb
idiv
in
pop
mov
jle
inc
jl
in
inc
data16
sub
aam
inc
xchg
push
and
sbb
nop
jle
sbb
mov
into
or
pop
mov
push
cmps
or
add
out
cmp
fcom
pop
out
shl
add
pop
mov
mov
mov
mov
jo
pushf
daa
inc
adc
sbb
(bad)
or
hlt
inc
int3
push
xor
ret
aad
push
pop
(bad)
sbb
mov
cmp
mov
(bad)
push
push
push
and
dec
ss
jle
out
lock
adc
fild
adc
sar
mov
loopne
jmp
and
inc
sub
add
push
es
rcl
cs
push
cwde
(bad)
mov
ins
mov
mov
cli
cmp
mov
into
test
xor
int3
jo
fidivr
push
mov
int3
mov
(bad)
cmp
pop
pop
sbb
scas
cmps
(bad)
lods
sbb
mov
xor
fidivr
cmp
xchg
jl
je
adc
cld
mov
mov
jle
push
test
loopne
mov
xchg
ss
cmp
js
(bad)
pop
scas
int3
cs
outs
add
sbb
loopne
mov
inc
enter
pop
jle
loopne
js
jbe
xchg
aam
aam
pusha
hlt
test
mov
jo
push
loope
xlat
mov
mov
and
cmp
inc
inc
push
in
xor
mov
dec
dec
es
fmul
inc
xor
(bad)
loop
out
jbe
data16
or
fisub
push
in
daa
out
lock
or
mul
out
and
cmp
sbb
(bad)
jnp
loopne
xchg
fcom
mov
lock
push
mov
add
cmp
ss
dec
rol
je
pop
(bad)
out
xchg
int3
push
enter
pop
push
or
sub
inc
xchg
fiadd
and
(bad)
fs
push
das
push
cs
jbe
push
pushf
out
jp
mov
enterw
cmp
push
fidivr
push
je
add
loopne
test
shr
push
add
adc
push
add
jnp
sbb
mov
lods
sahf
lods
push
cs
push
fidivr
xchg
mov
rol
les
jbe
pop
test
cmp
inc
sahf
or
enter
loopne
je
dec
pop
adc
dec
and
js
sub
cmps
jbe
mov
lods
scas
sub
out
loopne
mov
xor
dec
aam
inc
ret
dec
xor
pop
js
cmps
push
xchg
icebp
sub
fsubp
push
movs
es
inc
fdivr
pop
out
mov
pop
mov
sar
js
pop
pop
push
adc
cmp
jo
xor
cmp
mov
(bad)
mov
push
adc
ror
pushf
cmp
rol
ret
cmps
(bad)
or
pop
xchg
xchg
add
sbb
jnp
cmp
scas
cld
xchg
fs
push
or
sub
cmps
or
push
inc
fisubr
fadd
cmp
loope
in
(bad)
push
cmp
and
lock
lds
xchg
mov
add
mov
pop
in
cmps
iret
outs
xchg
sbb
jge
sahf
inc
push
mov
cmp
iret
add
cmp
sbb
icebp
fcom
nop
jbe
sahf
je
mov
push
or
xchg
es
mov
inc
pop
aaa
adc
xchg
sahf
jnp
out
add
mov
lock
add
icebp
faddp
fsub
int3
jbe
mov
push
jo
push
inc
dec
mov
movs
outs
cmp
enter
dec
ds
hlt
ficomp
loope
or
pop
push
sub
xor
ja
gs
ins
xchg
add
mov
lods
es
(bad)
mov
imul
cld
loopne
loope
sahf
fs
add
cmp
call
mov
ja
fidivr
in
lods
data16
push
pop
lds
cmp
scas
pop
fcomp
cs
rol
cwde
mov
sahf
movs
daa
push
fdivr
cmp
mov
inc
push
lods
iret
push
mov
mov
pop
xchg
lahf
dec
mov
push
adc
test
js
sub
sbb
mov
pop
jle
dec
sahf
ja
rol
jle
data16
iret
mov
sub
les
cld
das
(bad)
cld
ficomp
scas
or
xor
mov
outs
je
mov
mov
push
cs
mov
inc
pop
fdivr
out
xchg
outs
outs
pusha
add
mov
push
test
add
xchg
xchg
rcr
clc
(bad)
out
data16
mov
push
or
push
fcomp
fidivr
push
sub
cmp
jl
test
and
scas
scas
mov
cmp
cmp
mov
add
lock
jecxz
dec
sub
loopne
loopne
(bad)
pop
outs
pop
ss
lock
jmp
lods
mov
push
faddp
sbb
fs
dec
cmps
fmul
adc
js
sbb
cmp
xor
sub
(bad)
movs
iret
mov
test
add
mov
push
call
ds
inc
lock
call
xchg
inc
push
xor
(bad)
cmp
(bad)
jbe
jbe
xchg
ficomp
cld
(bad)
in
aam
and
stos
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
add
push
lahf
out
add
add
in
mov
ss
xor
aas
sbb
fidivr
mov
pushf
ds
ins
leave
repz
ss
cmp
out
jae
mov
int3
inc
ds
dec
mov
nop
ss
enter
out
pop
repnz
data16
fdivr
jnp
and
cwde
ss
sahf
ds
nop
aaa
cmps
ss
jnp
adc
fadd
nop
aas
sub
push
scas
mov
sub
ss
push
lods
aas
outs
in
mov
cmp
cld
push
mov
fnstcw
cmp
call
lods
push
mov
inc
add
cmovno
cmps
stc
or
push
sbb
add
adc
imul
push
or
push
test
fadd
ror
cld
cmp
and
mov
push
adc
iret
in
mov
stc
cmp
pushf
test
sub
repz
adc
fucom
enter
fdivr
jmp
into
jnp
cmp
div
repz
sti
cs
push
add
push
cmps
sti
mov
fimul
out
pop
or
sbb
sahf
fstp
iret
xor
setle
push
(bad)
lock
sub
ds
ja
out
push
add
iret
repz
enter
mov
fld
add
dec
pop
jp
cwde
lds
sbb
(bad)
mov
gs
gs
xor
cs
ins
pop
inc
gs
outs
fld
jmp
popa
ins
push
jb
arpl
jae
jb
outs
data16
je
outs
outs
ds
mov
lahf
div
jo
pop
push
push
push
push
outs
push
bound
xchg
push
div
dec
outs
push
data16
inc
mov
jae
mov
fstp
gs
cmp
daa
inc
ins
outs
inc
sub
sbb
gs
loopne
(bad)
jns
jle
outs
pop
fcmovnu
xchg
cs
sub
int
jb
xor
mov
imul
ins
jo
popa
inc
cmps
scas
fadd
jae
outs
ja
xor
and
scas
gs
popa
ins
gs
inc
adc
ret
and
inc
adc
mov
popa
jb
pusha
and
gs
ds
js
adc
ja
fs
arpl
arpl
outs
sub
dec
inc
lock
jb
inc
imul
rol
dec
js
push
popa
lock
inc
gs
popa
mov
or
sbb
cld
out
and
in
loop
das
inc
adc
sbb
shl
ins
inc
cmp
inc
pushf
rol
mov
xor
mov
and
ret
outs
mov
ja
fild
jo
push
gs
inc
js
push
ins
and
add
addr16
cli
dec
jo
dec
cmp
int3
cmp
daa
jno
pop
in
xor
xor
mov
shl
xlat
or
sub
inc
test
sahf
mov
mov
dec
inc
pop
add
dec
dec
inc
push
dec
cs
dec
xchg
imul
pushf
inc
mov
ins
jo
mov
xor
or
ret
xchg
movs
xor
add
mov
enter
hlt
adc
pop
test
dec
push
ja
jae
jge
or
xor
xchg
dec
cmp
cwde
(bad)
push
outs
addr16
jns
fidiv
and
inc
xor
scas
ret
push
xor
mov
ret
outs
ins
icebp
jmp
cs
add
je
outs
fs
ins
jo
rol
push
aad
jno
out
cmp
gs
add
push
and
xchg
push
jo
inc
ret
inc
xor
outs
add
pusha
push
add
bound
arpl
(bad)
call
outs
and
jo
imul
push
imul
ins
jo
ins
jmp
mov
push
jae
and
cmp
xor
sub
mov
push
aaa
aaa
xor
cs
retf
add
push
dec
test
and
add
(bad)
(bad)
push
add
dec
add
or
push
push
sbb
inc
add
dec
fstp
inc
dec
add
dec
add
cs
push
sbb
dec
adc
int
sbb
inc
adc
or
xor
ss
push
push
pop
ss
mov
xchg
jae
push
push
es
cdq
cmp
push
cmp
add
pop
xor
int3
jnp
or
or
sahf
or
add
and
adc
jb
loop
or
cmp
addr16
add
add
loope
cmp
into
and
inc
sbb
add
movs
data16
lods
or
jmp
jnp
ins
mov
je
pop
lahf
daa
clc
in
sub
rol
jnp
add
pop
mov
push
add
(bad)
fadd
cld
jg
clc
cdq
popf
das
pop
aas
push
pop
jmp
loop
fstp
sahf
popf
les
add
cld
or
push
pusha
lock
cwde
adc
(bad)
je
pop
xor
mov
mov
add
test
or
pop
push
push
mov
ror
mov
xor
rol
mov
jnp
out
lss
jg
data16
pop
jae
add
sbb
ficomp
neg
out
(bad)
cmp
rcr
loopne
pop
add
sbb
into
ins
push
push
or
pop
pop
das
(bad)
ret
aas
pop
xchg
mov
pop
pop
dec
ss
imul
xor
push
pop
std
loope
retf
push
(bad)
cmp
mov
ins
jl
rol
pushw
jbe
sti
mov
lock
jg
jg
inc
add
rcr
add
(bad)
or
push
mov
int3
adc
sahf
jo
not
push
xor
push
mov
jno
les
jl
daa
repz
retf
call
dec
add
add
jne
jno
push
or
adc
sar
cmp
out
add
aas
dec
pop
xchg
in
outs
daa
dec
gs
push
clc
lock
jo
or
fcmovb
jmp
push
and
push
inc
pop
jae
mov
add
add
add
fisub
add
fwait
int
dec
xlat
pop
sbb
cmp
add
fmul
pop
das
push
int3
add
add
xchg
or
jae
pop
in
les
test
sbb
ret
mov
pop
das
rol
pop
push
or
and
pop
stos
lods
or
xchg
fadd
das
cs
aaa
add
aad
cmp
shr
das
addr16
test
add
cmp
xchg
scas
sbb
cmp
push
sub
inc
add
loope
jl
inc
add
xor
addr16
sbb
push
push
sbb
xor
add
rol
lock
ins
ret
cmps
xor
jl
sbb
push
sbb
fld
or
test
push
rol
loope
xchg
add
test
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
dec
add
imul
add
add
ins
add
add
add
add
imul
scas
mov
add
push
jbe
sbb
cmp
push
adc
je
or
pusha
data16
add
scas
push
mov
mov
outs
pop
or
arpl
jo
push
addr16
or
mov
inc
or
bound
push
sub
data16
mov
sbb
inc
scas
cmp
cs
es
push
pusha
aaa
xor
jecxz
xor
add
fdiv
xor
inc
mov
mov
push
or
es
pop
push
aaa
push
ret
mov
lahf
rol
pop
add
and
xor
and
push
and
or
push
push
and
retf
push
mov
and
data16
xor
adc
dec
xor
mov
jae
push
outs
data16
pushf
xor
or
push
int
cs
dec
cmp
add
fadd
das
add
inc
rol
add
es
push
pop
aas
arpl
(bad)
xor
push
ds
aaa
add
outs
xchg
or
ror
pop
sti
sar
out
pusha
into
scas
xchg
mov
xor
mov
mov
cmp
jle
inc
add
jg
add
cmp
xlat
ds
jo
ret
sub
ret
mov
enter
cs
es
(bad)
fwait
loope
out
aas
sbb
jae
repz
xchg
mov
add
push
sub
jg
js
push
data16
mov
cmps
adc
data16
es
sub
popa
es
inc
and
jae
fwait
add
call
add
push
fs
push
imul
xchg
das
mov
sbb
sbb
push
movs
jmp
retf
xchg
jmp
xchg
rol
push
scas
out
call
cmp
add
push
or
push
ret
mov
aaa
add
add
add
push
xor
push
cmp
ds
dec
cmp
and
outs
sub
es
inc
ds
push
int
cmp
cmp
xchg
and
xchg
mov
addr16
(bad)
push
push
ja
data16
sahf
and
(bad)
das
mov
pop
xor
push
adc
and
push
out
sbb
or
xor
mov
xor
sub
sbb
add
inc
fisub
mul
popa
adc
ltr
aas
dec
xchg
rcl
mov
pop
jg
data16
in
mov
or
ds
xor
pusha
adc
rcr
mov
outs
dec
add
pop
or
and
cmp
adc
retf
xor
xchg
mov
sub
cdq
pop
dec
sbb
xchg
scas
sbb
fst
mov
daa
jmp
sbb
adc
fdivr
cmp
dec
jo
pop
adc
push
add
popa
pop
push
pop
(bad)
(bad)
aas
arpl
or
data16
push
aas
repz
cmp
push
push
cmp
popf
cmp
or
int3
mov
push
or
stos
add
inc
jae
add
mov
add
das
ja
adc
loopne
aaa
sbb
fwait
nop
data16
adc
(bad)
call
jp
inc
shl
xor
cs
sub
add
pop
sbb
push
jo
jle
xchg
cmps
jb
cmp
mov
pop
jmp
pushf
jb
and
sti
out
mov
adc
data16
pop
push
test
(bad)
fwait
mov
push
js
outs
push
or
push
xor
mov
mov
add
nop
pusha
add
fwait
test
cmp
mov
mov
sar
jmp
jg
xor
cmps
or
xor
xor
adc
lsl
daa
xchg
push
push
push
cwde
retf
int3
shl
imul
sbb
jae
push
jmp
sbb
pusha
into
retf
inc
pop
dec
outs
fadd
add
inc
or
sbb
div
aaa
mov
add
sub
inc
mov
inc
mov
add
and
outs
div
pusha
or
jae
mov
(bad)
xor
aad
adc
xor
sbb
and
dec
and
sbb
ror
shr
add
retf
gs
dec
jg
xchg
xrelease
fadd
adc
push
sub
mov
xchg
adc
sbb
test
daa
sbb
jne
inc
mov
ficomp
dec
sbb
push
mov
lods
adc
add
push
inc
push
and
mov
push
sub
outs
mov
cmp
scas
imul
and
jg
push
pop
sbb
rol
mov
mov
inc
or
cmp
mul
pop
into
mov
mov
inc
arpl
or
out
adc
sbb
pushf
cwde
add
dec
rcr
or
in
repz
add
pop
push
sbb
sbb
jmp
pop
out
jmp
stos
int3
push
pusha
xchg
dec
xor
ds
add
mov
and
ja
stos
xchg
inc
add
gs
pushf
add
adc
mov
test
stos
sub
nop
imul
jmp
sbb
push
maxps
rcr
push
xor
ret
xchg
push
iret
push
adc
add
mov
jo
outs
ret
jnp
out
adc
pop
arpl
popa
outs
sbb
push
xor
repnz
mov
syscall
mov
jle
pop
sbb
xor
pop
dec
cmp
xchg
jnp
pop
outs
ss
or
push
not
sbb
pusha
xchg
xor
and
fmul
loopne
inc
retf
sti
retf
sti
push
dec
xor
daa
adc
mov
add
ret
dec
lock
loope
out
out
add
add
jnp
pcmpgtw
cmps
mov
add
add
sbb
sbb
sub
das
movs
jg
push
retf
gs
and
sub
pop
iret
cmps
jae
int3
inc
mov
out
cmps
pop
cmp
add
mov
jmp
fistp
mov
mov
pop
add
jo
fwait
sub
(bad)
sbb
jnp
inc
cdq
(bad)
xor
pop
xchg
add
mov
push
(bad)
dec
mov
and
data16
inc
xchg
cmp
xor
jmp
add
nop
sti
push
add
jnp
es
mov
mov
sbb
inc
add
cmps
push
push
adc
xchg
popa
mov
in
pop
push
sub
or
ja
sbb
add
push
test
xchg
sub
jmp
ins
xchg
aaa
rdpmc
inc
jo
inc
scas
aaa
daa
mov
inc
mov
sub
xchg
mov
inc
push
es
jmp
mov
and
idiv
jo
pop
dec
retf
jnp
fs
push
scas
dec
push
and
or
(bad)
stos
lahf
cmp
jg
or
popa
imul
jnp
stos
imul
xchg
cmps
lds
iret
push
adc
xchg
adc
shl
adc
and
jmp
arpl
sbb
mov
mov
sti
add
sub
jb
dec
aaa
lds
cmp
or
push
fistp
repz
push
push
and
sahf
cmps
mov
mov
adc
add
cmp
push
dec
mov
sbb
daa
outs
es
inc
add
and
xchg
(bad)
fwait
add
pusha
imul
push
adc
adc
fist
cmp
ret
add
cmp
pop
fsubr
pop
cmp
pop
pop
retf
dec
push
inc
or
(bad)
xlat
aas
and
mov
inc
cmp
pop
mov
add
(bad)
mov
ret
movs
sbb
sti
pop
xlat
je
daa
sub
mov
data16
ret
xchg
addr16
inc
adc
adc
push
dec
xchg
mov
jge
(bad)
sbb
push
sbb
push
aas
imul
(bad)
xchg
dec
dec
xor
inc
outs
ret
pop
pop
pop
sub
and
xlat
aaa
add
fcomp
mov
mov
pop
inc
pusha
pusha
loopne
shl
jmp
jo
out
loop
das
pop
push
inc
imul
adc
jo
div
shl
ss
mov
add
pushf
pusha
push
out
mov
dec
jo
xchg
mov
adc
cmp
add
ret
fild
add
and
xchg
pop
lods
and
push
adc
imul
adc
and
ss
cmp
dec
les
int3
inc
mov
shr
mov
jle
xchg
and
daa
cmps
retf
ret
jge
inc
nop
mov
mov
xchg
xchg
sbb
adc
pop
movzx
adc
xchg
xor
movs
sub
add
sbb
sub
sub
dec
xlat
xchg
int
mov
xchg
popa
mov
xchg
push
mov
or
jnp
mov
xchg
adc
sti
mov
mov
shl
jo
rcr
push
dec
addr16
int
loop
inc
icebp
lea
mov
or
xor
push
pop
dec
add
mov
rol
mov
and
mov
addr16
and
jbe
lods
push
xchg
pop
dec
add
adc
pop
mov
inc
jae
dec
add
das
cmp
iret
and
adc
lods
aam
inc
ficom
mov
jmp
push
je
outs
and
jmp
adc
sbb
scas
fwait
mov
daa
aam
fild
xlat
cmp
xrelease
pop
retf
add
pop
pop
les
inc
xor
add
les
add
ret
inc
pop
sbb
dec
mov
jg
out
or
inc
mov
and
imul
xchg
push
cmp
mul
ret
mov
xor
push
dec
mov
dec
mov
push
push
or
pop
dec
inc
lods
mov
xor
ss
add
push
inc
arpl
inc
ja
add
test
mov
jo
scas
mov
pop
ret
xor
add
popa
and
sbb
(bad)
jnp
pusha
or
pop
ret
call
adc
retf
mov
neg
jnp
add
shr
add
mov
bound
or
cmps
das
shr
test
sub
(bad)
xor
jg
mov
add
scas
add
test
and
arpl
movs
or
mov
test
dec
cmp
or
js
pop
call
push
sbb
dec
nop
or
addr16
push
sub
mov
pop
popa
data16
jae
push
les
add
sub
xchg
jecxz
mov
imul
jg
adc
retf
push
and
add
pop
sub
lea
or
mov
add
or
adc
call
fbstp
push
or
loop
xchg
sbb
and
add
lahf
pusha
aam
push
jecxz
pop
pop
lods
sbb
adc
je
xchg
xchg
and
push
mov
inc
sbb
cmp
arpl
mov
pop
add
les
or
or
push
sbb
and
xlat
pusha
adc
push
sbb
xchg
or
aaa
movs
and
xor
imul
push
loop
out
inc
ss
adc
push
pop
xor
cmp
cmps
rol
push
mov
jge
stos
repz
and
jns
jecxz
xor
pop
xor
retf
pop
js
pusha
xchg
add
push
push
cmp
aas
stos
outs
cwde
xor
ret
lods
inc
inc
rol
ret
pop
or
pop
cmp
pop
adc
fcomp
mov
pop
sti
(bad)
adc
or
inc
fwait
mov
test
test
xlat
(bad)
sbb
in
test
xor
sti
xchg
ror
out
xchg
retf
add
jnp
out
nop
rcr
adc
das
adc
sbb
add
daa
inc
rcr
pop
xor
add
or
add
ss
jae
outs
shl
sbb
mov
mov
cmp
add
fild
add
pop
inc
push
cwde
mov
pop
cmps
pop
stos
sbb
or
and
add
xchg
arpl
adc
out
fistp
sub
shl
jecxz
xchg
scas
aas
adc
sti
add
mov
scas
inc
or
jecxz
xor
ds
mov
fbstp
push
pusha
fmul
mov
xchg
xchg
dec
loopne
adc
sbb
ret
inc
ss
pusha
cs
inc
ret
mov
call
sti
stos
dec
adc
mov
not
mov
mov
add
add
aaa
pop
ficom
inc
lahf
test
movs
pop
xor
test
xor
ins
mov
daa
aaa
push
sbb
sbb
push
lock
inc
or
outs
sbb
add
pop
test
jne
fbstp
fcmovnbe
sbb
add
inc
and
add
sbb
pusha
sahf
outs
and
or
or
dec
dec
imul
adc
mov
cmp
rol
or
push
outs
push
ret
sbb
mov
leave
popa
jbe
xchg
sbb
in
sbb
mov
ds
stos
inc
mov
(bad)
mov
inc
pop
arpl
pop
mov
and
ins
adc
aaa
push
sub
jmp
adc
loopne
adc
ror
mov
jae
push
xchg
push
dec
dec
add
or
pop
push
out
jae
xchg
ret
arpl
rcl
xchg
nop
dec
data16
xor
mov
into
cmp
dec
mov
jae
retf
into
sbb
sub
and
repz
sub
xlat
enter
stos
jnp
fs
and
sbb
lods
adc
push
stos
sbb
add
inc
arpl
dec
pop
and
mov
cmp
and
or
es
push
add
xchg
adc
adc
pop
sub
fcomp
xor
or
cmp
shl
or
pop
and
out
(bad)
pop
dec
(bad)
pop
and
mov
lea
jl
retf
inc
mov
aas
push
pusha
adc
add
sahf
and
add
add
stos
test
sub
icebp
or
xor
and
sbb
movs
test
scas
outs
pop
or
cmp
test
sub
test
and
lahf
xchg
aaa
xchg
fisubr
aam
scas
xchg
pop
add
fidiv
popa
mov
xchg
xor
pop
jae
pop
add
pop
iret
loopne
mov
jmp
pop
and
test
dec
jmp
jno
pop
and
xchg
repz
add
repz
retf
(bad)
loopne
or
push
sbb
dec
pop
scas
pusha
nop
sub
jmp
or
and
rcr
ret
xor
and
cwde
or
sahf
push
add
pop
pusha
clc
push
maxps
pop
cld
and
sub
xor
adc
sub
cmp
sti
outs
and
daa
sub
lds
add
xor
hlt
adc
(bad)
jmp
mov
sbb
(bad)
xchg
inc
push
or
stos
push
mov
add
das
sbb
stos
add
jecxz
pop
inc
add
nop
adc
mov
sbb
cwde
push
cli
inc
ret
mov
ds
xor
mov
push
sti
push
or
sbb
das
fiadd
add
push
fbstp
inc
or
movs
addr16
adc
sbb
popa
adc
push
out
adc
test
add
sub
mov
add
cmp
add
xchg
add
mov
clts
add
in
fnstsw
aas
xchg
das
fwait
jno
cmp
and
jb
sub
mov
and
jnp
or
cmp
add
push
mov
xor
lds
xchg
pusha
icebp
lea
fwait
ret
adc
push
loopne
add
adc
into
pop
or
scas
leave
push
ds
or
push
adc
add
add
shl
or
push
test
into
bound
bound
pop
or
or
push
mov
pop
shr
imul
inc
fs
adc
ret
mov
push
inc
push
pop
pop
repz
xchg
dec
sub
mov
dec
test
xchg
imul
movs
or
fs
scas
mov
mov
mov
jae
push
pop
sbb
outs
or
sbb
scas
cs
lods
aas
(bad)
fadd
cmp
cmps
jg
data16
mov
adc
xor
out
xor
shr
mov
pop
outs
sub
push
push
imul
(bad)
xlat
mov
push
movs
arpl
xchg
add
and
loop
sbb
jnp
xor
popa
loopne
push
arpl
or
xlat
mov
or
sbb
dec
sub
xor
add
jmp
adc
or
dec
xchg
mov
(bad)
or
xchg
adc
loopne
fisttp
lahf
xchg
in
or
jbe
push
sub
aaa
push
arpl
push
iret
mov
push
push
adc
sub
loopne
push
adc
test
inc
loop
pop
pop
xor
push
sbb
add
ja
or
loopne
add
lahf
inc
pusha
dec
add
test
pop
sbb
out
add
inc
jmp
pop
add
and
mov
pop
cmps
daa
inc
adc
je
xchg
es
mov
mov
shl
and
mov
mov
mov
pop
cmps
xchg
pop
cmp
jae
jno
add
pop
cmp
mov
mov
or
aas
jg
sbb
fs
mov
data16
(bad)
sub
xchg
mov
movs
loopne
retf
inc
sub
add
jnp
dec
mov
pop
pop
dec
(bad)
aam
adc
add
inc
lds
push
lea
add
sbb
add
pushf
fbstp
add
adc
sub
xor
xor
jg
dec
xchg
sbb
pop
pop
xchg
and
push
pop
mov
and
aas
or
sub
push
fisttp
cs
and
imul
fdivr
aas
call
push
stos
daa
push
loopne
neg
cmp
sti
mov
(bad)
gs
mov
add
imul
lods
push
iret
addr16
or
add
stos
addr16
adc
xchg
ret
cmps
mov
rol
xor
stos
or
js
inc
retf
cmp
push
outs
add
xor
repz
pushf
mov
pop
mov
imul
mov
pop
sti
jg
and
sub
adc
inc
add
add
or
or
retf
inc
rcr
fsubp
das
in
ret
or
test
xchg
sub
das
iret
mov
or
das
mov
test
out
repz
sbb
pop
sbb
add
popa
mov
pop
jge
xchg
sti
popa
add
je
cmc
dec
add
pop
aam
mov
push
and
push
sub
or
mov
xchg
scas
xchg
aas
emms
rol
pop
dec
mov
arpl
and
sub
and
or
and
inc
sti
jae
test
push
(bad)
mov
out
addr16
and
stos
(bad)
mov
jae
aam
retf
push
xchg
pop
mov
jo
inc
outs
mov
daa
loopne
(bad)
push
and
jnp
push
iret
push
(bad)
dec
ror
loopne
jbe
xchg
popa
add
mov
cmp
xor
or
mov
push
out
test
retf
cdq
ret
aaa
mov
sbb
ja
rcl
cwde
nop
loopne
(bad)
cmp
fistp
push
stos
add
addr16
mov
push
sub
adc
lahf
shr
mov
cmp
inc
add
inc
mov
and
adc
sti
enter
or
popa
or
loopne
jo
(bad)
adc
add
mov
push
and
daa
scas
push
daa
movs
and
sbb
cmps
push
sbb
and
adc
dec
mov
aaa
jae
or
or
cs
mov
sbb
dec
pop
pop
dec
push
jmp
xor
pop
cmp
jecxz
(bad)
aaa
cmps
pop
test
pop
or
add
add
adc
cmps
ret
push
sbb
mov
sub
push
scas
mov
nop
add
pop
adc
mov
mov
fild
mov
push
add
sti
jae
imul
popa
les
or
pop
nop
sub
(bad)
inc
mov
cmp
inc
arpl
push
sub
and
fstp
fild
add
inc
jnp
pop
add
jnp
jae
sub
pop
xlat
setg
and
and
aas
push
or
iret
xchg
mov
loop
pop
loop
mov
pop
repz
fmul
das
xor
push
mov
pop
sub
adc
int3
add
rcr
add
xor
jecxz
sbb
or
inc
dec
push
mov
adc
or
sbb
inc
dec
dec
call
pop
mov
mov
test
inc
xor
mov
jecxz
bound
sub
daa
jo
outs
adc
xchg
jnp
sbb
fwait
loop
jb
test
movsx
or
pop
sub
jnp
or
jae
push
mov
inc
jmp
into
and
out
adc
out
pop
movs
jne
adc
das
mov
(bad)
fbld
mov
xchg
sbb
add
pusha
push
ret
sbb
pop
repz
xor
sar
mov
scas
loopne
mov
jecxz
push
push
sbb
mov
mov
test
cmps
or
adc
and
es
or
(bad)
inc
pop
lods
out
das
and
and
pop
push
mov
stos
xchg
adc
pusha
mov
inc
pop
ret
mov
or
and
pushf
ret
and
pop
xchg
aas
iret
add
jecxz
and
(bad)
mov
pop
test
loopne
sub
or
add
repz
push
add
and
add
inc
mov
mov
dec
mov
sub
pop
inc
out
or
add
jg
sbb
mov
imul
iret
mov
dec
or
lods
add
sub
jo
mov
jecxz
mov
test
(bad)
mov
pop
ss
arpl
xlat
dec
and
adc
mov
mov
mov
dec
push
push
mov
es
push
ret
or
xchg
push
sub
mov
xor
inc
sub
sbb
pop
push
sub
add
or
inc
cmp
xor
(bad)
xor
adc
or
mov
cwde
pop
xchg
mov
pop
inc
xlat
call
adc
add
dec
dec
add
mov
scas
jg
xor
test
out
ret
mov
pand
or
ins
push
or
(bad)
push
adc
or
add
adc
maskmovq
test
add
pop
xchg
addr16
sub
das
or
mov
(bad)
addr16
adc
push
addr16
sub
cs
inc
push
ret
mov
inc
cmp
fs
or
adc
into
sub
xchg
add
jmp
and
add
fcomi
lea
mov
(bad)
neg
bound
add
outs
loopne
xor
jne
ja
cmp
or
xchg
fwait
or
mov
int
(bad)
mov
inc
mov
jg
mov
pop
push
stos
daa
jg
xor
add
push
mov
mov
add
imul
icebp
div
adc
sub
jg
xor
(bad)
movs
inc
lods
aad
pop
jo
rcl
or
cs
movs
xchg
or
xor
mov
cmps
xchg
sub
add
pop
jae
les
adc
add
scas
aas
add
adc
aaa
dec
(bad)
loopne
out
es
sub
aaa
daa
mov
rol
pusha
dec
xor
inc
push
(bad)
and
das
mov
inc
shr
imul
imul
cwde
cmp
pop
or
push
inc
add
jmp
mov
sub
jnp
mov
xchg
addr16
jb
and
dec
aas
enter
xor
push
adc
aad
or
sbb
stos
add
push
sub
xlat
cmps
xchg
popa
add
ret
pop
inc
xor
loopne
and
out
(bad)
or
imul
popf
arpl
mov
or
lods
aaa
lahf
jbe
inc
cs
xchg
bound
pop
sbb
pop
je
(bad)
xor
dec
outs
scas
xor
and
xchg
scas
add
(bad)
push
push
or
xor
ja
jge
pop
or
out
cmp
sbb
sbb
adc
rol
mov
repnz
out
into
sbb
(bad)
xchg
loopne
push
out
stos
xchg
push
push
or
mov
cmp
sbb
jg
and
lahf
pusha
pusha
nop
xchg
(bad)
ins
aam
sahf
inc
dec
das
push
dec
mov
pop
adc
dec
test
push
or
sbb
adc
pop
xchg
push
push
and
mov
dec
fistp
cmps
and
mov
sbb
int3
mov
push
and
pop
cmp
sar
outs
adc
movs
sbb
ror
and
cdq
mov
cmova
add
jo
inc
or
push
xor
dec
daa
push
jnp
cmp
mov
sub
adc
mov
sbb
mov
xor
sub
and
pop
xor
inc
sub
cmps
add
and
pop
push
or
(bad)
push
sub
pusha
cmps
and
add
movs
and
pop
adc
movs
movs
pop
xchg
sbb
sub
add
inc
add
jge
stos
stos
pop
rol
test
xchg
or
add
xchg
sub
daa
sub
mov
stos
imul
pop
and
and
xchg
mov
sbb
rcl
out
div
pop
xchg
(bad)
sbb
cmps
mov
xchg
in
xlat
jmp
jbe
imul
cwde
leave
lods
nop
addr16
addr16
dec
retf
adc
sub
adc
inc
adc
mov
bswap
mov
xchg
xor
pop
scas
inc
jmp
dec
inc
neg
ss
fcomp
out
mov
adc
pusha
xchg
cmpxchg8b
pop
cmps
repz
xor
mov
pop
arpl
test
ret
mov
popa
add
addr16
xchg
sahf
xchg
jae
fdiv
cmp
jne
jle
pop
test
jae
(bad)
es
daa
lea
jp
xor
mov
and
sbb
dec
fwait
jbe
arpl
mov
test
add
daa
lahf
mov
jg
adc
bound
ret
inc
pop
pop
add
ret
add
das
pusha
push
xor
mov
ss
push
(bad)
test
mov
fild
setnp
sbb
add
push
jg
pusha
mov
out
or
imul
shr
jnp
xchg
mov
pop
das
xchg
ret
arpl
xchg
loop
or
push
mov
jg
mov
or
add
inc
bound
inc
xchg
inc
loope
jbe
jg
aaa
push
mov
cwde
retf
xchg
mov
ins
add
or
push
cmp
mov
add
arpl
xor
popa
ret
pop
sti
fcom
neg
sub
iret
push
adc
mov
cmps
pop
cmp
sti
daa
retf
imul
pop
outs
shl
rcr
shr
out
jb
mov
adc
mov
mov
adc
adc
aam
sbb
inc
dec
xor
pop
xchg
sbb
or
pop
call
jecxz
push
mov
cmps
adc
xor
cli
fwait
aaa
fwait
shr
jno
aaa
dec
inc
mov
xor
push
add
add
xor
jl
in
inc
push
add
ror
das
stos
mov
clc
test
and
add
ret
out
push
pop
xor
mov
invd
movs
sbb
add
or
inc
das
jp
or
or
fistp
push
fs
push
adc
push
and
jecxz
adc
jno
push
adc
or
arpl
sub
test
popw
and
test
pop
sbb
mov
test
sub
lods
ror
mov
adc
pop
sti
mov
cmp
jecxz
or
test
retf
add
popa
mov
push
mov
push
jo
ins
sbb
fisub
jae
cmp
jp
stos
ret
pop
(bad)
xchg
inc
pop
pusha
add
nop
mov
pop
das
cmp
aaa
adc
or
xchg
sub
dec
icebp
test
iret
movs
ins
les
daa
pop
mov
mov
sbb
dec
cmps
fld
pusha
xchg
sbb
jmp
pop
jae
arpl
inc
adc
push
or
inc
add
xchg
ror
fbstp
dec
and
inc
outs
push
jo
and
psubd
push
enter
scas
rcl
mov
dec
aaa
pop
and
mov
push
(bad)
retf
add
add
add
stos
or
adc
and
pop
mov
pop
aaa
xlat
xor
xchg
retf
clts
adc
xor
(bad)
push
pop
aaa
mov
pop
cmps
push
and
add
and
imul
outs
and
jae
and
adc
sar
out
bound
(bad)
xor
xlat
mov
adc
pop
push
and
xor
mov
push
mov
add
jae
arpl
and
ror
imul
mov
xor
aad
and
add
ret
xlat
inc
push
pop
mov
aas
adc
cli
dec
adc
or
sbb
xchg
mov
inc
pop
outs
inc
xor
daa
push
dec
mov
scas
ret
add
loop
aad
add
ret
lahf
push
adc
push
push
add
add
jl
xchg
out
sbb
adc
inc
pop
sti
in
push
adc
out
das
add
pusha
nop
dec
cmps
add
adc
mov
xlat
test
mov
aaa
pop
xor
das
add
sbb
and
add
shl
jae
jecxz
or
sbb
mov
mov
dec
test
or
es
adc
clc
inc
(bad)
ja
mov
out
cli
push
cmp
stos
sub
and
test
iret
sbb
cmp
loop
mov
ja
dec
fs
iret
sub
popa
add
mov
xor
les
adc
stos
mov
inc
arpl
mov
dec
sbb
pop
jg
adc
cmp
fistp
and
pusha
test
repz
sbb
xchg
sub
xchg
push
imul
push
add
rol
or
repz
adc
push
jecxz
mov
inc
mov
mov
inc
add
mov
out
repz
das
cli
add
jb
fistp
inc
and
outs
movs
test
repz
mov
sbb
adc
mov
nop
scas
xor
xchg
and
dec
sub
inc
pop
add
adc
push
mov
(bad)
and
xor
sub
pop
push
adc
sub
(bad)
dec
out
sbb
xor
add
inc
adc
iret
jecxz
hlt
add
mov
cmp
sbb
and
and
dec
adc
test
pop
and
dec
or
push
adc
mov
arpl
arpl
xchg
and
mov
pushf
pusha
push
push
xchg
sub
and
xlat
sbb
loope
xchg
or
retf
pop
cmp
shl
mov
inc
push
and
add
lods
iretw
and
push
stos
loopne
aaa
dec
popa
sub
push
mov
inc
push
and
or
lods
fbstp
push
sbb
and
shr
ret
es
into
or
xor
dec
mov
sub
retf
sahf
fisub
inc
outs
sbb
pop
xchg
or
pop
dec
dec
lods
adc
inc
rol
retf
outs
aas
pop
xor
jl
das
(bad)
sbb
dec
push
mov
jnp
mov
cmps
pop
inc
aaa
int
add
lock
rep
loopne
out
jecxz
out
jno
or
sub
mov
xchg
cmp
inc
stos
fmul
push
ds
xor
jne
push
push
pop
aas
lock
push
adc
aaa
or
push
pop
rcl
adc
and
pop
jae
push
(bad)
popa
dec
mov
arpl
and
sub
push
pop
pop
or
inc
sbb
rcr
add
push
add
sti
mov
cmp
or
inc
fisttp
(bad)
and
mov
push
mov
xchg
mov
scas
xor
push
mov
sub
add
add
ja
push
mov
jp
adc
xchg
jb
addr16
movs
pop
and
mov
cs
or
add
xor
(bad)
dec
push
xchg
loopne
mov
adc
inc
stos
test
mov
imul
fs
cwde
inc
idiv
inc
ret
cmp
push
add
jae
fs
inc
or
push
push
rol
data16
add
add
ret
(bad)
cli
scas
adc
into
(bad)
jp
pop
not
popa
mov
stos
out
fidivr
jecxz
and
or
and
inc
inc
in
rol
fild
pusha
xor
ins
add
jo
dec
xor
pop
data16
dec
mov
pop
xor
inc
or
btc
mov
(bad)
xchg
or
adc
xor
mul
xchg
sahf
push
xchg
push
add
push
mov
js
cs
jecxz
inc
daa
scas
or
and
add
add
(bad)
das
test
xlat
popa
iret
mov
fwait
inc
inc
mov
cmp
mov
or
bts
mov
stos
sbb
inc
adc
inc
xchg
and
mov
sub
inc
and
dec
or
inc
mov
inc
and
repz
in
mov
pusha
adc
(bad)
(bad)
jae
xor
adc
pop
inc
lods
sbb
pop
xchg
shr
mov
pop
or
xor
in
fistp
add
test
adc
adc
mov
stos
daa
js
xor
mov
mov
or
add
pop
fistp
dec
adc
cmps
pop
or
jb
push
inc
cmp
jbe
mov
pushf
push
mov
cs
jae
(bad)
sbb
or
ret
arpl
or
pop
leave
mov
ror
ja
jmp
icebp
test
out
repz
repz
jae
push
aas
ins
pop
pusha
and
jnp
(bad)
stos
in
push
dec
push
out
dec
adc
lahf
jb
inc
aaa
repz
adc
or
dec
pop
mov
and
jmp
outs
adc
popa
xchg
aaa
push
imul
mov
ss
retf
iret
scas
test
sar
inc
loopne
sbb
add
jo
xchg
jg
mov
xor
rcl
cdq
push
cmp
or
outs
xchg
pop
test
adc
add
jbe
shr
pop
es
and
add
retf
out
push
jo
mov
in
adc
jl
fld
sar
adc
mov
fild
dec
test
inc
or
test
push
repnz
pushw
dec
pop
outs
jle
and
sbb
dec
add
nop
loopne
lods
or
rol
dec
sti
pop
inc
xor
sbb
ins
inc
movs
mov
fild
pop
jnp
mov
jmp
stos
xchg
pop
xchg
mov
ds
xor
int3
test
mov
sub
ss
push
add
cdq
pop
cmps
sahf
push
jle
push
mov
dec
sahf
sub
data16
cs
data16
sbb
pop
jae
cmp
test
inc
test
ficomp
imul
pop
mov
dec
add
add
pop
push
sti
pop
pusha
sub
push
add
jmp
push
(bad)
jbe
mov
arpl
sub
pop
aaa
cwde
sub
push
daa
pop
or
and
push
jb
das
pop
shl
jno
pop
repz
adc
xchg
ds
pusha
push
shl
or
ret
aaa
pop
xchg
adc
pop
pop
pop
movs
push
dec
cmp
popa
inc
repz
stos
xor
mov
imul
mov
adc
and
mov
pop
and
sbb
mov
pop
test
or
mov
mov
pushf
sub
add
jbe
arpl
sub
add
fwait
sub
lods
add
scas
scas
inc
and
(bad)
pop
or
push
sub
xchg
mov
push
inc
retf
bound
fld
or
adc
sbb
and
scas
rol
out
adc
add
lods
int3
push
jo
js
and
outs
inc
mov
enter
dec
cli
or
add
or
or
stos
cs
iret
sub
xchg
repnz
fbld
fadd
div
es
ret
xchg
pop
stos
xchg
dec
pop
dec
pusha
nop
leave
or
pushf
shl
adc
mov
mov
xor
retf
sbb
adc
rcl
or
pop
ror
aaa
cli
adc
cwde
push
loopne
xlat
(bad)
jne
ret
out
or
add
ja
or
lds
or
mov
sub
shl
popa
jo
das
jnp
loop
daa
pop
mov
xlat
cmp
pop
inc
pop
and
mov
out
lods
sub
pop
call
or
fnstenv
add
push
stos
fistp
add
push
inc
push
mov
mov
imul
loope
add
sbb
inc
pop
add
and
inc
pushf
neg
shr
aas
xchg
adc
pop
mov
dec
scas
xchg
inc
fst
iret
pop
test
adc
scas
cmp
mov
jo
ja
popa
or
mov
rol
cs
xchg
aas
inc
add
xor
dec
mov
adc
sbb
(bad)
or
mov
into
ret
(bad)
das
pushf
ret
or
addr16
loop
adc
fwait
inc
test
hlt
aaa
daa
dec
sub
dec
(bad)
outs
cmp
xor
xchg
and
pop
sub
cmp
ins
cmps
dec
xor
das
pusha
test
jnp
jb
mov
xchg
pop
sbb
and
cmp
repz
mov
inc
call
or
and
cs
add
pop
daa
imul
push
jnp
inc
test
xor
aas
call
movs
and
or
popa
or
or
cmp
mov
mov
sar
inc
sbb
adc
push
mov
cwde
cmps
jbe
xchg
push
jb
adc
leave
and
or
add
mov
cmp
inc
push
sbb
mov
mov
sahf
xor
or
add
icebp
pop
outs
pop
sbb
xchg
test
xor
mov
cmp
call
jo
pop
dec
and
cli
inc
add
loope
daa
and
xor
mov
and
scas
fstp
and
sbb
cmps
and
stos
pop
mov
and
jnp
jo
and
shl
cmps
dec
sbb
pop
xor
mov
loopne
add
aas
mov
inc
jecxz
ret
mov
adc
add
popa
and
push
aaa
call
xor
add
or
pop
cmp
push
(bad)
daa
sbb
push
test
out
fwait
mov
adc
sbb
shl
(bad)
rcr
(bad)
test
or
mov
inc
sub
adc
test
pop
addr16
je
sbb
(bad)
arpl
aad
and
cmps
ja
jg
movs
dec
mov
inc
add
jp
and
inc
or
and
mov
(bad)
inc
mov
jb
xchg
rcl
or
sbb
add
inc
stos
push
sub
mov
xchg
rcr
pop
adc
(bad)
pop
or
inc
mov
pop
pop
xchg
enter
pop
jecxz
popa
fst
movs
mov
jno
mov
adc
pop
adc
out
or
add
mov
cmp
push
jmp
and
(bad)
xlat
inc
popa
lock
nop
mov
dec
jecxz
xchg
push
test
push
pop
push
call
and
bound
fsubr
or
pop
add
outs
xchg
inc
les
in
fwait
mov
mov
out
dec
add
push
add
or
mov
(bad)
xchg
sbb
mov
inc
xchg
pop
jmp
into
test
shl
aaa
fcmovnu
fcom
pop
xor
jecxz
das
jmp
das
shr
pop
es
add
ret
inc
inc
idiv
and
(bad)
adc
scas
add
jmp
or
sbb
adc
ja
or
aas
shl
sub
mov
add
add
or
or
jb
sbb
je
adc
loop
jo
adc
add
ins
(bad)
sbb
repz
mov
inc
mov
lahf
jb
and
jecxz
fcom
retf
add
adc
arpl
add
or
jbe
sub
inc
adc
jmp
test
retf
imul
mov
in
scas
push
lods
aas
add
push
and
sbb
push
loop
jge
and
jmp
cs
retf
cmp
movs
xor
adc
loopne
mov
mov
cwde
push
and
xchg
imul
inc
aaa
imul
inc
add
nop
mov
push
and
dec
retf
pop
adc
adc
rcl
daa
in
cwde
xor
imul
sub
cmp
sti
out
call
or
add
test
aas
outs
loopne
in
push
jnp
and
in
add
dec
dec
inc
mov
push
add
aas
retf
add
aas
cmp
lods
add
inc
push
cmp
add
push
imul
(bad)
mov
out
scas
inc
pusha
mov
pop
push
inc
xor
rcr
sbb
ficom
and
or
and
aad
push
cwde
inc
xchg
ret
sbb
add
mov
sbb
xor
add
xor
inc
xchg
sub
repz
leave
sar
sbb
out
mov
outs
nop
stos
iret
sub
mov
jl
push
sbb
mov
and
mov
pop
add
call
add
into
ins
add
adc
push
(bad)
pop
ja
or
cmps
retf
sbb
sub
or
sub
dec
push
scas
sub
or
adc
pop
jnp
or
rol
pop
(bad)
push
scas
ret
out
and
add
inc
dec
stos
lds
imul
dec
imul
mov
sbb
cmp
add
push
add
inc
inc
outs
add
adc
add
dec
pop
push
or
push
in
jae
cs
jmp
enter
arpl
jne
jmp
adc
sub
loop
outs
pop
fwait
push
cwde
push
and
or
dec
sub
adc
push
lahf
or
push
add
or
mov
pop
daa
push
js
mov
add
dec
pop
int3
loopne
add
adc
push
xchg
xor
retf
in
loopne
daa
cmp
mov
push
pop
lods
inc
mov
mov
or
cmps
dec
mov
inc
xchg
sbb
nop
stos
cli
mov
shl
mov
cmp
fcomip
push
add
and
cmps
das
stos
pop
cmps
adc
pop
push
sub
outs
out
cmp
aas
jecxz
cmp
mov
mov
sbb
ret
dec
popa
rcl
pop
mov
in
mov
dec
rol
cmps
ret
xor
scas
repz
sub
cmp
sbb
xor
or
retf
pusha
cmp
bound
add
ss
sti
outs
jmp
repz
sbb
cmps
add
or
mov
inc
pop
jo
fist
xor
cmp
scas
(bad)
and
daa
not
inc
sub
ja
mov
mov
out
jmp
mov
xor
adc
push
lods
add
iret
add
jno
out
mov
jg
dec
int3
adc
addr16
sub
popa
inc
xchg
add
inc
adc
mov
mov
xchg
xchg
xor
(bad)
and
adc
push
ja
mov
shl
pop
add
inc
arpl
sub
add
inc
inc
inc
mov
push
lds
push
xor
add
fist
repnz
adc
xor
pop
sub
push
xor
sub
xor
pop
or
pop
cmp
scas
mov
imul
sub
or
inc
mov
or
or
dec
xchg
push
dec
or
aad
sbb
(bad)
push
mov
ret
mov
adc
or
adc
xchg
es
mov
sbb
(bad)
lea
add
rcl
ja
push
inc
stos
inc
mov
push
xchg
pop
repnz
inc
adc
sbb
ficom
adc
imul
push
pop
int3
pop
mov
rcl
das
jnp
xor
mov
xor
or
rol
lahf
outs
cmp
add
aaa
loope
adc
mov
inc
mov
mov
adc
jg
adc
arpl
push
inc
icebp
ror
xchg
loope
adc
cmp
inc
mov
push
mov
sti
aaa
ret
add
sbb
or
je
dec
inc
sbb
and
add
pop
mov
sbb
retf
push
and
jo
sti
scas
mov
popa
adc
mov
xor
push
imul
or
out
pop
call
jg
es
cmp
ins
pop
cmp
rol
adc
sbb
jle
add
pushf
or
sub
arpl
push
inc
pop
xchg
xchg
xor
pop
mov
imul
pop
data16
cmp
and
add
int
push
fisttp
dec
adc
loopne
cmp
sub
push
iret
pop
daa
ja
dec
outs
and
inc
maxps
cdq
fld
pop
push
outs
push
out
sbb
fsub
pop
xchg
pop
test
loop
or
sub
adc
mov
inc
and
popa
push
cmp
dec
mov
mov
rcl
cmps
push
out
and
fisttp
retf
vmwrite
sahf
or
int3
add
cmps
ret
push
inc
ret
outs
pop
pushf
sti
nop
fst
stos
jae
das
cmp
adc
add
outs
adc
or
xchg
or
jae
pop
sbb
inc
ja
adc
call
mov
jmp
mov
sahf
adc
pop
pop
call
ja
addr16
data16
fwait
pop
add
les
sub
add
mov
pop
into
xchg
add
push
stos
ret
or
cmps
sbb
ret
pop
or
imul
dec
sub
jecxz
add
pusha
rcl
xchg
adc
ror
ret
sbb
fcomip
push
cli
xchg
loope
outs
mul
sub
shr
mov
cmp
scas
or
lods
in
mov
adc
push
and
arpl
stos
pushf
test
out
add
add
xchg
pop
pusha
test
or
or
xor
xchg
add
sar
or
and
fld
int3
popa
adc
push
mov
push
push
fs
aas
pop
push
iret
adc
mov
lea
pop
cmps
(bad)
dec
or
popa
inc
xor
push
sub
aas
or
loope
pop
lahf
iret
mov
test
pop
bound
lea
or
push
repnz
add
das
sti
cli
lahf
adc
or
jg
out
mov
adc
sbb
(bad)
or
push
and
mov
mov
retf
pop
add
sar
jmp
pop
or
and
xor
mov
jnp
sub
sbb
adc
sbb
ret
scas
push
inc
pop
cmp
fldcw
and
push
sbb
rcl
adc
arpl
(bad)
pop
loopne
mov
xor
add
xor
repnz
ja
pop
xchg
jecxz
(bad)
sbb
(bad)
mov
mov
inc
mov
loopne
ret
dec
xor
inc
and
xor
movs
scas
imul
mov
adc
das
jae
pop
inc
xor
scas
lahf
fs
add
aaa
xor
loopne
pop
out
dec
jmp
je
cs
adc
and
stos
xor
mov
imul
sti
sub
sub
(bad)
add
retf
sbb
push
xchg
add
pop
and
stos
xor
ret
mov
push
mov
jp
imul
add
or
or
xor
inc
push
add
das
jmp
push
test
or
push
or
dec
jg
stos
jne
adc
mov
sbb
outs
test
ror
or
adc
push
mov
sbb
mov
cmps
ret
dec
add
mov
stos
repz
ret
jg
sub
inc
or
adc
ja
sbb
das
mov
add
(bad)
xor
jecxz
stos
sbb
or
outs
cmps
inc
cmp
sbb
out
xchg
pusha
mov
stos
imul
pushf
jno
cmp
aas
adc
sub
lahf
out
add
into
loope
ja
push
adc
mov
mov
xchg
xlat
or
or
scas
xchg
lock
mov
inc
sbb
push
(bad)
pop
jecxz
shl
and
lods
bound
test
stos
mov
lea
lahf
sbb
dec
xor
retf
nop
mov
sbb
inc
imul
jecxz
es
test
lds
adc
fimul
xor
cmp
push
jecxz
mov
xchg
cmps
ja
pop
dec
jo
dec
add
pop
pop
xlat
and
push
add
or
cmovae
push
xor
sbb
and
mov
xchg
arpl
ret
pop
xchg
repz
mov
xchg
stos
mov
outs
or
xchg
inc
pop
shl
or
(bad)
and
or
fimul
vmread
jmp
mul
xchg
mov
mov
jmp
inc
jmp
jg
mov
movs
(bad)
jg
inc
fadd
das
ds
(bad)
adc
mov
and
dec
mov
add
adc
pop
dec
pop
shr
les
inc
xor
pop
sbb
and
or
mov
ret
and
imul
jmp
cmp
aaa
mov
pop
fwait
cmp
add
push
call
inc
sbb
outs
ins
outs
popa
fs
fs
dec
imul
(bad)
jae
jb
popa
jae
adc
popa
ins
push
inc
dec
or
mov
sbb
pusha
bound
adc
xor
adc
pop
add
adc
adc
shr
push
mov
jb
gs
imul
in
xchg
div
cs
popa
or
imul
adc
add
or
outs
not
jmp
and
or
je
push
les
popa
jo
cs
add
in
sahf
cmp
push
dec
lods
or
dec
xchg
(bad)
and
sbb
ret
fcom
pop
lock
jne
mov
push
adc
mov
xor
and
add
or
mov
in
add
push
ins
cs
js
xor
test
popa
arpl
sbb
pop
push
jae
push
in
(bad)
xchg
adc
sbb
ins
adc
dec
popa
addr16
ins
add
movs
sbb
ins
gs
imul
lods
loope
scas
push
imul
and
pop
xor
daa
imul
es
and
outs
gs
sar
js
retf
outs
arpl
push
and
or
xor
and
dec
mov
adc
pop
adc
lock
retf
inc
call
outs
adc
sub
dec
dec
dec
in
shl
jno
test
inc
(bad)
xor
rcr
inc
mov
and
shl
jae
imul
les
sbb
and
push
outs
mov
popa
push
jl
adc
xchg
jo
scas
dec
mov
ins
sbb
and
mul
mov
push
mov
push
xor
mov
loope
push
inc
sub
push
xlat
dec
cmp
push
pusha
pop
sbb
inc
jne
leavew
push
push
or
mov
imul
ret
out
fstp
and
data16
mov
sbb
jp
jmp
clc
push
lock
inc
outs
imul
add
outs
je
aad
and
sub
xor
ss
jle
imul
ins
(bad)
(bad)
es
push
push
stos
cmp
ds
push
pop
pop
je
cmp
push
and
aad
mov
jb
adc
and
and
jnp
mov
cdq
add
jae
sbb
adc
inc
repz
push
inc
fs
sbb
je
sub
sub
(bad)
push
push
jnp
sbb
dec
cmp
and
mov
add
iret
inc
mov
push
pop
cmps
mov
mov
and
movs
std
test
outs
lods
adc
dec
inc
sbb
xor
add
jecxz
dec
jb
push
sbb
cmp
xor
cmp
push
out
mov
adc
clc
adc
mov
sbb
out
and
jle
ins
jns
inc
inc
outs
sbb
ins
sub
and
scas
push
and
xchg
cmp
rcr
push
add
xchg
enter
dec
mov
push
js
xchg
iret
ins
cmp
add
arpl
fs
int
or
push
push
sbb
pop
jbe
cmp
test
xor
iret
es
adc
test
mov
mov
add
xchg
push
daa
push
outs
xchg
stos
or
jnp
out
or
pop
rcr
gs
adc
pop
jnp
jmp
dec
push
dec
dec
adc
push
dec
mov
sub
shl
add
pop
adc
push
inc
mov
out
cmp
mov
push
sub
jnp
pop
lds
fsub
push
push
push
adc
adc
(bad)
in
mov
(bad)
and
fidiv
xor
aaa
das
push
pop
or
and
cmp
cmp
pop
ficomp
inc
dec
je
or
je
push
ins
mov
popa
aad
push
jne
(bad)
mov
mov
xor
sub
xchg
sbb
nop
xchg
push
imul
movs
ret
div
pop
xor
xor
dec
cmp
push
ins
dec
xor
sub
pusha
push
enter
aam
xor
push
jnp
push
arpl
cli
cmp
gs
ins
addr16
loope
retf
out
js
or
sbb
in
inc
fcomi
push
sbb
dec
sbb
mov
dec
(bad)
sbb
loopne
mov
and
jns
xchg
sub
add
xor
scas
add
sbb
push
mov
ja
pop
in
push
ja
or
cmp
outs
aas
and
or
and
dec
cmps
jge
jno
sbb
leave
cmp
pusha
push
in
and
in
inc
pushf
jo
cmp
cmp
push
mov
imul
fstp
mov
sbb
daa
inc
push
dec
xchg
pop
dec
sbb
mov
gs
cli
stos
adc
sbb
imul
fadd
inc
pusha
sub
jecxz
and
dec
add
mov
rcr
push
sub
jo
es
ins
push
inc
out
inc
loope
lea
adc
clc
push
push
jo
sub
push
jl
mov
sbb
inc
(bad)
mov
sub
and
jp
push
jbe
push
dec
ja
outs
inc
mov
adc
inc
and
dec
pushf
lahf
push
mov
lds
and
shr
push
pop
dec
dec
push
push
pop
inc
call
xor
lock
jo
ror
and
and
sbb
sub
cmp
clc
fstp
xor
jo
ins
and
push
xchg
inc
fdiv
adc
outs
push
ins
int3
pop
mov
inc
bound
aad
lock
sbb
jge
rcr
push
into
sub
lds
sahf
mov
aaa
and
inc
je
inc
mov
ret
push
push
je
inc
(bad)
in
add
mov
push
dec
fcmovb
mov
add
cmp
clc
dec
out
retf
ret
pop
dec
push
dec
sub
sbb
ror
push
(bad)
mov
push
dec
rol
out
mov
das
push
jno
cmps
adc
and
movs
add
outs
xchg
pop
inc
ins
je
arpl
(bad)
mov
imul
inc
sbb
iret
adc
into
mov
push
pop
scas
xor
cmp
(bad)
mov
push
mov
mov
cs
les
mul
ret
fwait
aad
jo
inc
or
into
sub
aam
sbb
add
xor
inc
loop
mov
inc
mov
push
mov
call
dec
push
add
in
or
popa
in
pop
xchg
jbe
mul
clc
add
dec
inc
sbb
lock
in
arpl
stc
add
push
jp
pusha
ins
in
rol
sahf
add
mov
inc
sbb
(bad)
sub
adc
data16
dec
xchg
add
mov
xchg
mov
aam
dec
push
sub
push
fiadd
push
jne
push
movs
dec
inc
pusha
cmp
jne
add
xchg
ja
mov
add
push
push
inc
ror
xlat
push
sbb
mov
dec
inc
ins
arpl
sub
test
xor
cs
jns
adc
xlat
pop
jno
and
push
mov
je
add
add
push
push
or
or
ret
dec
and
daa
adc
inc
inc
fcomp
js
scas
push
dec
jl
ins
add
ins
jae
or
adc
mov
or
add
xchg
jno
sub
pop
loope
pminub
and
pop
das
push
or
dec
lock
gs
or
sbb
call
xor
outs
adc
xchg
clc
or
das
sbb
push
or
(bad)
ins
sub
sub
sub
cmp
xchg
cmp
inc
xor
ins
popf
jle
test
jp
scas
das
xor
and
inc
loop
dec
push
and
xor
and
push
ss
and
jo
ins
jae
adc
dec
and
xor
xor
push
dec
pop
je
ins
ror
in
imul
arpl
outs
outs
fbstp
ins
gs
xor
xchg
xor
xor
add
xchg
sbb
xchg
and
add
adc
mov
push
add
cs
mov
dec
xor
adc
sbb
mov
test
mov
data16
adc
push
outs
jo
or
inc
pushf
push
retf
leave
jnp
jo
push
test
sbb
int
mov
xchg
xchg
xchg
hlt
inc
inc
lahf
or
hlt
or
sbb
(bad)
or
dec
pop
ins
imul
pop
call
bound
hlt
adc
hlt
inc
cdq
popf
dec
add
mov
add
mov
pop
or
je
inc
popa
mov
pop
push
sahf
ss
(bad)
fild
jno
add
or
fcom
fisubr
call
daa
(bad)
or
nop
mov
cs
push
in
push
push
mov
dec
inc
push
push
inc
push
or
scas
ret
sbb
push
mov
daa
test
sbb
gs
pop
push
mov
fs
imul
sub
mov
jle
push
jo
push
arpl
repnz
or
push
sbb
or
loop
or
or
push
fsub
xlat
bound
add
or
ins
sub
sbb
in
adc
sbb
jl
push
imul
pop
jo
inc
pusha
or
or
add
and
adc
jns
dec
jb
stos
adc
mov
mov
enter
add
data16
loope
or
cs
or
addr16
pop
xlat
or
or
mov
xchg
push
and
inc
gs
das
push
adc
pop
push
bound
xchg
loopne
fidiv
or
xchg
mov
xor
adc
dec
pop
sbb
jno
arpl
add
add
fbstp
adc
adc
mov
mov
(bad)
jge
sbb
sbb
and
inc
jp
add
add
or
rol
sar
pop
arpl
adc
pop
xor
sbb
adc
adc
push
cwde
and
dec
xor
and
mov
fwait
or
xchg
jp
retf
or
cli
aas
push
sahf
dec
mov
inc
or
or
sti
sti
mov
adc
push
or
or
mov
pop
in
cmp
dec
in
pop
add
call
(bad)
imul
cs
lahf
or
outs
bound
aas
js
loop
push
dec
cmp
and
or
hlt
fwait
push
adc
dec
xor
jb
imul
jmp
imul
and
or
cmp
or
push
ins
mov
pop
scas
cmp
stos
mov
jne
das
xchg
imul
and
sti
(bad)
jg
push
and
and
xor
xor
aaa
cmp
xor
sti
jnp
sub
xor
das
xor
das
push
sub
xor
xor
and
fstp
or
data16
inc
fstp
fcmovnu
outs
mov
mov
das
ja
cs
cs
das
movs
fbld
mov
xor
inc
popa
pop
pop
xchg
js
pop
and
add
and
je
(bad)
cmp
je
and
scas
sbb
add
jp
fsubr
xor
imul
arpl
xchg
ins
xor
push
das
push
in
outs
xor
and
inc
jo
xchg
jae
and
mov
in
icebp
mov
add
dec
dec
pop
ins
adc
mov
mov
add
pop
test
or
ds
subps
scas
xchg
lods
add
ror
ja
add
inc
gs
ins
xor
mov
add
push
fs
cmp
mov
xchg
retf
push
inc
(bad)
inc
dec
jo
lock
cdq
sub
gs
add
ss
ds
adc
mov
xor
push
xor
xor
retf
(bad)
mov
or
mov
daa
cmp
jns
jp
pop
pusha
and
push
xchg
ins
cmc
adc
fs
mov
(bad)
(bad)
cmp
lock
sbb
sub
jg
cmp
ror
jle
sub
fisub
shr
or
int3
push
sub
ror
cmp
dec
inc
and
imul
xor
xor
sub
push
push
lods
enter
bound
arpl
fs
sbb
pop
mov
mov
xchg
jmp
mov
mov
mov
dec
lock
push
loopne
int3
popa
rol
add
ins
(bad)
aad
mov
js
xor
loope
add
fsub
sub
ins
imul
inc
jae
frstor
xchg
push
mov
fcomip
addr16
inc
or
jle
sbb
rcl
fs
sub
ret
sub
jge
ja
bound
fwait
inc
add
cld
data16
jb
add
cmp
add
das
fisttp
outs
push
aaa
sub
add
loope
cmp
fld
cmp
adc
scas
xor
bound
daa
pop
pop
mov
add
or
inc
or
pop
mov
add
jne
bound
gs
imul
(bad)
jne
sbb
ds
adc
sub
or
sub
or
jno
add
pop
aaa
xor
push
xchg
xor
pop
mov
dec
inc
or
test
mov
add
or
leave
sbb
or
leave
add
push
push
add
push
push
sbb
add
sbb
leave
adc
add
add
(bad)
dec
or
js
popa
arpl
je
outs
fs
(bad)
(bad)
mov
and
inc
inc
push
js
arpl
(bad)
(bad)
aas
add
add
movs
dec
(bad)
(bad)
(bad)
call
xor
push
xor
or
cbw
bound
aas
and
movs
adc
(bad)
(bad)
jmp
loope
xchg
test
(bad)
adc
add
xor
orps
pop
les
add
(bad)
(bad)
dec
dec
inc
scas
inc
pusha
or
outs
dec
outs
jne
gs
outs
ja
pop
sbb
outs
gs
pop
dec
data16
dec
imul
ins
imul
add
(bad)
sti
mov
jl
push
dec
ins
popa
addr16
or
arpl
ins
ins
push
jo
dec
gs
(bad)
(bad)
out
add
add
add
push
imul
idiv
fild
popa
ins
or
je
push
imul
outs
sar
jbe
push
imul
js
or
fidiv
gs
popa
je
(bad)
sti
mul
into
cmp
or
jcxz
push
dec
inc
or
(bad)
out
std
or
push
clts
adc
push
or
or
mov
neg
out
pop
jae
adc
add
call
push
pop
je
dec
inc
xchg
dec
outs
ins
cs
outs
bound
add
or
sub
add
mov
lock
xchg
push
xor
inc
gs
push
jp
push
arpl
pop
mov
jp
arpl
fs
ins
js
sub
and
addr16
pop
scas
cmp
lods
sar
sub
imul
and
push
idiv
outs
and
nop
and
xor
xor
aaa
cmp
xor
div
aaa
sub
xor
das
xor
das
push
sub
xor
xor
inc
outs
sti
aas
sbb
fimul
cmp
data16
inc
fstp
outs
outs
mov
jo
das
das
ja
cs
cs
das
xor
sbb
data16
jae
mov
mov
pop
and
bound
push
je
imul
sbb
je
and
ret
push
sbb
test
sbb
mov
js
jo
cs
imul
jo
ins
xor
ret
gs
outs
xor
int3
cmp
jo
outs
cmp
in
pusha
(bad)
(bad)
cmp
adc
ss
pop
ins
adc
inc
jbe
jae
push
jns
gs
push
popa
pusha
aaa
sbb
jb
gs
xchg
cwde
leave
mov
scas
xchg
lods
nop
xchg
test
js
sub
xchg
pusha
ins
xor
jb
adc
add
cmp
cs
leave
pusha
dec
mov
adc
(bad)
inc
pop
in
std
stos
and
and
sub
push
adc
in
sahf
out
push
ds
xor
mov
hlt
mov
xor
xor
sub
sub
mov
shl
pop
jns
lods
or
push
rcl
xchg
cli
mov
(bad)
add
push
(bad)
fdivr
pushw
scas
mov
imul
test
push
push
data16
inc
adc
nop
xor
dec
ja
ror
outs
sbb
ds
ja
and
imul
cmp
(bad)
mov
aaa
fs
fs
bound
cmp
je
jge
cmp
push
jne
mov
mov
int3
push
mov
mov
push
inc
jne
not
popa
ins
(bad)
push
pop
(bad)
aad
das
mov
loopne
js
xor
out
xchg
sub
ins
imul
gs
in
rol
push
std
addr16
xor
add
pusha
add
inc
sub
test
movs
jle
xor
push
push
push
je
and
inc
xchg
rol
add
xlat
ins
mov
das
loope
inc
xchg
sub
sub
out
push
cwde
sub
(bad)
shl
(bad)
pop
daa
clc
mov
ficomp
cmps
ins
jne
aaa
fistp
or
adc
rol
jne
cmp
mov
cmp
imul
ret
bnd
test
fadd
ss
adc
(bad)
mov
gs
pop
inc
repnz
jae
mov
xor
inc
cmp
xor
adc
jno
popf
or
inc
div
sub
add
mov
add
push
pusha
mov
mov
stos
push
add
stos
push
pusha
add
bound
pusha
mov
mov
or
js
popa
arpl
je
outs
fs
push
aas
sbb
rol
inc
dec
inc
inc
push
js
arpl
(bad)
(bad)
aas
add
adc
xor
jg
pop
push
and
call
pusha
aad
lods
adc
ins
(bad)
out
idiv
(bad)
call
ret
test
mov
sar
mov
push
fbld
(bad)
(bad)
(bad)
inc
dec
inc
dec
inc
scas
inc
pusha
or
outs
dec
outs
jne
gs
outs
ja
pop
sbb
outs
gs
pop
dec
data16
jae
imul
ins
imul
(bad)
mov
div
jne
imul
outs
je
(bad)
in
or
add
gs
add
push
outs
jo
add
push
or
dec
imul
inc
cwde
fiadd
outs
mov
or
jbe
dec
jne
outs
pop
push
bound
mov
inc
xchg
(bad)
fbld
clc
cs
push
rsqrtps
push
dec
inc
dec
pop
inc
dec
inc
push
mov
inc
push
or
outs
ins
outs
pusha
pop
arpl
push
mov
jnp
daa
rol
or
dec
popa
ins
gs
pop
push
lods
fs
lock
adc
je
ins
or
or
ror
xlat
enter
or
dec
inc
dec
add
or
cld
shl
outs
std
or
dec
push
imul
sbb
out
ins
popa
adc
dec
pusha
fisttp
push
jle
dec
arpl
jecxz
fcom
sbb
xor
xor
adc
inc
ja
scas
sub
dec
loopne
or
inc
lock
inc
imul
mov
inc
push
fs
inc
or
je
in
(bad)
aas
fcom
adc
adc
cwde
sar
shl
or
and
or
add
mov
jl
lds
rol
mov
mov
add
add
pop
jnp
outs
arpl
jae
mov
popa
imul
push
pop
or
out
and
mov
iret
or
push
or
cs
cld
gs
adc
mov
mov
xor
pop
or
sub
mov
xchg
mov
xor
xor
add
bound
jmp
cmp
adc
sar
sar
sub
mov
test
inc
inc
add
add
push
or
xor
cmp
jne
sub
int3
call
jns
jl
std
add
les
popa
and
outs
shr
mov
and
int3
mov
imul
and
cmp
mov
scas
int3
ins
cmc
jl
or
push
inc
mov
or
jb
and
repz
jae
cmp
mov
or
mov
mov
and
mov
xchg
shl
xor
sbb
dec
mov
push
data16
ror
bound
jns
push
je
push
push
es
or
xor
dec
ja
add
xlat
leave
adc
mov
xchg
mov
push
and
sbb
sbb
in
sbb
xchg
mov
sub
or
xchg
lock
aas
or
add
in
inc
imul
xchg
outs
adc
sub
ret
pop
js
dec
mov
adc
call
es
mov
in
jbe
dec
or
xor
inc
(bad)
mov
jle
retf
push
xchg
or
inc
xchg
push
cmp
mov
imul
and
add
mov
shl
push
fmul
shl
sti
fcomip
outs
push
add
dec
dec
sbb
inc
push
inc
xor
xor
add
(bad)
sbb
ror
gs
ja
push
shr
push
js
cs
outs
or
or
add
in
sub
(bad)
(bad)
inc
adc
dec
imul
dec
test
push
add
push
mov
pop
movs
xor
dec
jmp
xor
mov
ror
sbb
inc
add
dec
and
dec
inc
sub
adc
add
and
cmp
pop
sar
sub
shr
(bad)
jg
push
js
cmp
adc
ja
bound
cmp
pop
pushf
(bad)
(bad)
(bad)
call
or
add
lahf
cmp
mov
sbb
je
xchg
dec
(bad)
(bad)
(bad)
push
mov
cmp
jg
adc
or
pop
sbb
dec
inc
cmp
cwde
jg
(bad)
(bad)
inc
pop
sar
pushf
jae
out
jmp
in
cmp
sahf
arpl
gs
adc
sub
(bad)
(bad)
xchg
aaa
inc
xchg
push
int
sub
pop
movs
cmps
pop
inc
xor
mov
push
ret
bound
inc
mov
in
lods
dec
stos
popf
fs
lock
js
jmp
sbb
mov
or
adc
cwde
sbb
sub
adc
mov
loope
(bad)
push
sbb
es
xor
xor
xor
fstp
sbb
(bad)
(bad)
(bad)
mov
xor
mov
jnp
jle
mov
cmp
test
pop
xchg
js
(bad)
(bad)
mov
sahf
jns
mov
mov
xor
mov
sbb
cmps
push
xchg
adc
push
cwde
imul
imul
mov
jp
push
xchg
inc
fld
sub
pop
push
mov
add
movs
mov
add
lock
mov
loopne
enter
out
fwait
(bad)
jg
sub
out
inc
xor
xchg
mov
mov
(bad)
(bad)
call
sar
adc
xor
loopne
xor
sbb
test
or
dec
mov
(bad)
(bad)
inc
xchg
ins
test
inc
test
pusha
adc
add
jo
movs
push
or
add
sbb
enter
jmp
sbb
cmp
pusha
jp
jge
test
push
mov
(bad)
call
jns
imul
and
mov
cmps
jp
stos
jnp
lods
(bad)
(bad)
(bad)
jmp
mov
mov
mov
imul
retf
mov
push
les
mov
lahf
leave
inc
mov
mov
cmp
stos
add
add
(bad)
jmp
mov
out
scas
mov
adc
movs
or
xrelease
and
push
pop
(bad)
mov
movs
and
jmp
aad
test
sbb
adc
push
xchg
(bad)
call
movs
push
adc
mov
xchg
movs
gs
and
cdq
and
push
pop
add
inc
xor
outs
add
or
xlat
aad
dec
(bad)
cmp
call
sub
fsubr
popa
xchg
or
pop
mov
fimul
push
jne
push
(bad)
(bad)
fcomip
push
xor
add
push
test
addr16
jns
and
push
pushf
popf
loope
(bad)
call
or
mov
test
cmps
popf
stos
or
movs
cmps
xor
(bad)
(bad)
mov
mov
adc
xor
dec
les
add
js
(bad)
(bad)
(bad)
call
or
jge
sub
loop
jns
popf
mov
adc
pushf
jmp
and
(bad)
(bad)
out
outs
cli
cmp
retf
xor
int
dec
ret
(bad)
sbb
dec
mov
sub
mov
xchg
nop
adc
cmps
ret
push
push
or
xchg
cmp
lods
sti
jp
xchg
adc
and
(bad)
(bad)
(bad)
jmp
xchg
rol
nop
push
add
sbb
push
lea
and
(bad)
(bad)
jmp
inc
inc
push
pop
arpl
loop
aas
push
shl
das
jo
pop
inc
es
je
add
add
push
xor
sbb
cwde
add
push
jno
mov
popf
movs
or
call
mov
add
or
sbb
mov
(bad)
(bad)
mov
or
jg
xor
jae
or
mov
add
mov
mov
pop
push
sbb
add
out
xchg
mov
dec
imul
sbb
(bad)
(bad)
cmp
cwde
fs
and
xor
jno
sub
inc
push
mov
repz
jg
and
mov
stos
nop
scas
adc
adc
dec
fs
mov
sub
jmp
shl
push
push
mov
xor
or
pop
clc
dec
(bad)
(bad)
(bad)
ffreep
add
dec
or
lea
fwait
or
shl
or
clc
bound
pop
ds
out
das
jb
pop
cmp
dec
xchg
xchg
adc
xchg
xchg
(bad)
(bad)
(bad)
inc
cmp
xchg
fwait
pushf
xchg
mov
xchg
stos
cmp
and
add
ret
push
test
inc
or
push
sbb
(bad)
dec
jae
(bad)
adc
mov
pop
pop
add
jge
push
or
or
dec
fdivrp
(bad)
(bad)
(bad)
aas
push
add
or
xchg
fwait
dec
xor
or
rol
inc
shl
add
xchg
fwait
push
jmp
sbb
add
(bad)
inc
add
and
adc
ret
xchg
loopne
xor
aam
adc
xchg
ret
mov
push
sub
stos
loope
aad
jnp
xchg
dec
add
pop
(bad)
(bad)
(bad)
inc
nop
repnz
jg
push
dec
xor
inc
or
mul
mov
dec
xchg
call
inc
xchg
cmp
mov
and
cmp
xchg
bound
dec
and
dec
(bad)
(bad)
inc
adc
add
mov
dec
xchg
add
mov
lock
dec
and
add
test
lahf
es
jg
scas
cmp
(bad)
outs
js
jp
sbb
test
inc
xor
sahf
mov
inc
sub
add
retf
or
or
retf
mov
loopne
(bad)
mov
dec
mov
adc
mov
icebp
adc
retf
movs
sbb
or
loop
mov
add
dec
inc
jmp
inc
jp
(bad)
fcomip
aas
inc
mov
xchg
data16
fwait
and
add
cmp
(bad)
cmp
movs
and
push
sbb
lock
or
or
sbb
cwde
pop
dec
mov
inc
rcl
nop
mov
or
add
(bad)
dec
fst
pop
lds
call
in
in
out
jmp
cli
(bad)
dec
push
sub
fwait
push
loopne
push
pop
adc
jmp
and
mov
test
cld
inc
aaa
hlt
test
jbe
inc
jge
sbb
cmps
cmps
xchg
rcr
jne
scas
hlt
mov
call
xchg
enter
sbb
ret
pop
pop
cmp
(bad)
(bad)
aas
jbe
test
(bad)
enter
sub
or
(bad)
push
adc
fimul
(bad)
(bad)
inc
enter
shl
adc
inc
out
call
adc
mov
jne
add
cld
dec
mov
(bad)
sub
xor
je
sbb
push
ror
xchg
mov
or
lea
jo
add
add
pop
(bad)
aas
pop
xor
test
or
sbb
or
mov
stos
movs
mov
add
es
push
sbb
ror
(bad)
(bad)
(bad)
cmp
loope
outs
inc
add
push
aas
dec
faddp
jmp
sbb
adc
pop
clc
rol
cli
inc
mov
or
shr
mov
or
adc
(bad)
push
push
add
aad
adc
push
push
js
jnp
dec
imul
jo
arpl
adc
clc
(bad)
jmp
xchg
cmp
cwde
cdq
xchg
movs
xchg
das
add
and
or
scas
scas
inc
jne
jle
mov
pop
mov
push
pop
out
js
or
pop
scas
mov
jmp
(bad)
call
fld
pop
dec
inc
xchg
loope
aas
adc
and
int3
jmp
add
sbb
icebp
add
(bad)
jmp
pop
cli
ss
lock
push
mov
and
pop
or
sbb
jmp
dec
xor
ss
or
mov
or
sub
or
dec
fmul
(bad)
(bad)
push
or
retf
pop
sbb
mov
cs
(bad)
(bad)
(bad)
jle
push
jp
push
jne
pop
jb
and
push
or
xchg
std
(bad)
(bad)
mov
or
fwait
fwait
mov
push
pop
push
mov
mov
sbb
test
xchg
retf
xchg
inc
das
or
mov
(bad)
(bad)
(bad)
mov
mov
mov
dec
outs
pop
mov
sub
bound
pop
ret
adc
(bad)
(bad)
call
push
sub
ins
adc
pop
loopne
shl
add
mov
inc
cs
fwait
shl
jle
call
(bad)
push
cmps
in
adc
pop
inc
(bad)
mov
or
jb
outs
jae
pop
jmp
push
inc
jne
dec
outs
jge
je
outs
or
jne
jmp
push
sbb
cmp
pop
add
add
add
add
mov
push
dec
add
sbb
sub
mov
(bad)
cmp
jbe
mov
cmc
and
add
rcl
in
or
sub
jbe
add
mov
adc
test
gs
out
inc
in
add
fdiv
int
lods
cmp
lock
jmp
push
fbstp
or
mov
or
into
cld
daa
scas
or
jns
add
push
push
ins
outs
outs
and
repz
cmp
inc
add
inc
mov
mov
cmp
stos
sbb
outs
or
arpl
mov
push
dec
and
shl
add
lods
sub
gs
sbb
pop
fist
je
data16
or
je
cdq
sub
or
jbe
ins
ins
fstp
int
in
in
and
loopne
test
xor
outs
or
ins
out
ins
or
pop
mov
or
push
fimul
push
sbb
xor
jb
in
inc
xchg
outs
sbb
pusha
cmps
les
xor
pop
sti
dec
jae
or
imul
jne
inc
sti
ja
xor
push
imul
sti
or
cmps
aad
push
or
ret
out
sahf
addr16
add
out
inc
or
movs
ds
test
loopne
mov
test
inc
add
scas
in
dec
push
or
stos
outs
inc
mov
nop
pop
push
inc
jno
push
dec
pusha
clc
cmp
ins
frstor
and
push
jo
push
arpl
and
(bad)
fmul
mov
popa
inc
int3
mov
into
or
adc
ja
and
jl
pop
hlt
or
jae
pop
test
pusha
or
add
sub
or
or
sbb
and
ins
cli
add
add
mov
or
jae
adc
mov
dec
xor
jns
cmp
cwde
jae
inc
and
fs
pop
and
dec
add
lock
cmps
inc
inc
mov
inc
xor
push
dec
mov
add
add
sahf
adc
loope
scas
adc
add
jbe
rcl
mov
inc
aas
xchg
mov
push
mov
push
rcl
adc
rcr
rcr
or
cmp
popf
inc
xor
push
loopne
dec
aam
stc
push
inc
add
push
inc
inc
adc
mov
xchg
nop
or
stos
sti
ja
pop
pop
cmc
rcl
add
outs
lock
je
fiadd
pop
or
rcl
add
and
test
cmp
mov
sub
push
push
inc
gs
das
addr16
sub
int3
outs
je
add
shl
adc
inc
mov
and
pop
push
adc
add
loopne
add
pop
shl
jg
and
xor
bound
or
test
inc
test
add
test
fsubr
add
mov
mov
add
and
xor
inc
rcl
cmps
and
adc
or
sahf
int3
sub
fnstenv
mov
xor
std
sahf
inc
mov
mov
add
les
pop
xor
push
(bad)
out
dec
push
test
stos
jmp
fdiv
xor
rol
or
xor
and
pop
test
leave
inc
mov
adc
inc
inc
adc
add
add
loopne
push
shl
dec
data16
mov
es
push
add
mov
mov
scas
es
sub
jnp
push
push
arpl
out
ins
shr
in
js
dec
(bad)
adc
mov
add
ss
popa
mov
cmp
(bad)
div
mov
scas
mov
sub
mov
cmp
fimul
cmp
adc
mov
cdq
cmp
dec
shl
nop
out
stos
sbb
add
cs
(bad)
ret
and
add
jb
add
or
or
sbb
add
mov
outs
cmp
arpl
aaa
xor
and
ret
add
sub
xchg
adc
pop
jbe
or
jo
and
or
int
mov
shl
adc
movs
pop
or
and
cmp
xor
test
pop
or
jo
(bad)
lahf
add
or
adc
pop
shl
adc
loope
sbb
cmp
sub
inc
dec
or
jbe
sub
dec
or
pushf
push
add
xor
les
out
retf
push
add
push
test
add
ins
mov
cmps
and
or
add
pop
add
sbb
gs
add
add
ja
mov
movs
mov
fiadd
sbb
sbb
add
adc
adc
pop
push
or
adc
jbe
mov
mov
sbb
inc
mov
add
sbb
push
nop
adc
and
cmps
fnstenv
mov
sub
pop
fimul
inc
adc
sbb
add
movs
lea
sbb
mov
add
test
xchg
bound
pop
add
cdq
add
dec
add
imul
sub
adc
add
pop
or
ins
sbb
pusha
adc
sbb
rol
add
fisub
xor
xchg
pop
sbb
mov
sbb
add
xchg
pop
fiadd
add
dec
adc
sub
and
add
mov
add
ins
mov
and
add
dec
or
ss
and
rcl
adc
popa
sub
cmp
dec
xchg
pop
pop
add
cmp
mov
add
add
mov
pop
xor
dec
dec
movs
adc
pop
aaa
dec
aam
adc
dec
pop
aaa
add
lods
or
sub
add
adc
dec
add
push
adc
dec
ins
xor
push
dec
push
aaa
sub
dec
push
add
sub
push
mov
test
adc
push
dec
dec
push
push
add
adc
dec
dec
aaa
mov
dec
inc
nop
fcmovu
dec
xor
imul
push
xor
dec
xor
and
xor
dec
arpl
fcmovu
inc
xor
aaa
test
xor
iret
pop
bound
add
es
inc
add
add
cwde
inc
ds
adc
sub
aaa
add
(bad)
push
sbb
icebp
adc
lods
or
adc
inc
pop
inc
add
add
pop
inc
pop
pusha
test
inc
arpl
or
loopne
pop
push
add
mov
lods
dec
sub
add
add
sub
fs
dec
icebp
inc
pop
fcmovu
xchg
and
aaa
add
mov
dec
dec
sbb
add
add
pop
and
dec
iret
inc
add
add
dec
icebp
arpl
popa
inc
jmp
jns
nop
ss
add
ins
ins
sub
jmp
jnp
push
or
adc
aad
fcomp
add
add
imul
pop
adc
push
push
dec
imul
add
rol
popa
push
dec
mov
int
pop
jmp
add
add
jnp
dec
sbb
mov
cmovg
add
or
push
dec
push
arpl
movs
jnp
sub
add
dec
push
popa
imul
add
push
ins
ins
or
dec
adc
sbb
xor
sub
inc
add
dec
push
pop
add
pop
mov
add
xchg
xchg
fisub
sub
imul
pop
mov
jne
rol
add
dec
push
pop
jo
and
daa
ret
sbb
push
push
add
pop
mov
push
push
and
push
push
daa
loopne
sbb
nop
add
dec
daa
and
sub
or
or
ret
sub
mov
adc
pop
sub
add
dec
or
or
sbb
push
add
ins
inc
mov
sbb
or
popa
add
push
fsub
lahf
jmp
pop
and
xchg
add
sub
add
add
ins
ins
pop
add
shl
sub
pop
sub
mov
stc
xor
xchg
pop
push
add
sbb
fcomip
sub
and
nop
dec
push
sub
mov
xor
add
add
push
dec
and
sub
and
fwait
mov
push
shl
add
adc
pop
ins
ins
and
add
retf
inc
inc
mov
dec
sub
and
rcl
movs
add
dec
push
push
mov
test
or
imul
push
or
imul
frstor
adc
adc
push
pop
push
pop
pusha
arpl
pusha
int
mov
pop
and
push
pop
xor
rcr
pop
and
add
xor
mov
cmp
rol
push
adc
sbb
and
fdiv
add
mov
add
sbb
add
rol
add
pop
mov
and
mov
sbb
fsub
add
sub
add
add
pop
ins
ins
xor
or
and
aaa
cmp
das
push
add
mov
pop
pop
xor
das
push
add
mov
jmp
movs
ins
add
inc
adc
cmp
add
aas
adc
dec
and
add
add
cmp
mov
cmp
sbb
xor
cmp
add
test
cwde
pop
ins
xor
das
dec
or
dec
(bad)
adc
and
rcl
dec
add
sub
add
sub
ins
dec
add
ss
fidiv
test
dec
bound
push
pusha
mov
or
inc
add
push
pop
add
add
mov
or
ror
inc
add
dec
push
ins
adc
add
inc
sbb
dec
add
arpl
not
xor
inc
dec
add
mov
ss
mov
test
add
add
add
outs
dec
ins
xchg
add
dec
pop
push
add
add
mov
or
lgdtd
add
mov
sgdtd
or
lods
cmp
add
sbb
push
ss
setno
sub
dec
sub
add
mov
inc
push
jo
dec
(bad)
or
mov
dec
add
inc
inc
and
fsub
mov
dec
add
mov
and
pop
test
or
and
dec
test
add
and
ins
test
ret
adc
inc
pop
or
dec
xchg
dec
dec
add
and
sub
dec
aas
mov
sub
invlpg
sub
pop
ins
add
jge
bound
and
dec
or
or
jns
push
adc
jns
stos
loopne
pop
jne
dec
push
shr
sbb
rcr
add
and
outs
add
nop
sub
or
push
sbb
dec
inc
fsub
imul
sbb
push
imul
dec
imul
dec
add
rol
lods
add
push
mov
popa
add
dec
sub
mov
add
bound
inc
pop
ins
inc
pop
add
bound
or
add
or
dec
pop
fsubr
adc
dec
push
push
adc
mov
push
add
stos
sub
push
ins
mov
push
add
bound
lds
adc
dec
and
dec
inc
nop
pusha
mov
les
sbb
mov
add
adc
dec
add
or
add
mov
dec
or
mov
add
fsub
inc
add
add
inc
pop
inc
xor
dec
aas
and
push
add
mov
dec
push
pop
ins
add
add
cmp
lds
mov
dec
mov
dec
aaa
push
inc
stos
sub
ins
mov
add
pusha
mov
or
xor
sbb
xor
sbb
push
add
sub
sub
dec
sub
pusha
dec
adc
and
inc
mov
dec
add
sub
pop
push
add
add
inc
sub
mov
pop
add
popa
stos
and
and
lods
pusha
cmps
daa
lods
pusha
arpl
lea
adc
push
jnp
pop
dec
int
fmul
lahf
add
push
adc
data16
add
or
pop
fadd
or
add
add
cdq
add
push
add
out
inc
adc
inc
push
pusha
or
arpl
fcomp
sub
fimul
xor
or
push
arpl
or
dec
inc
add
clc
out
das
dec
inc
gs
inc
push
push
push
xor
xor
movs
lea
sub
fbld
push
inc
inc
and
inc
outs
dec
rcr
inc
add
loopne
lock
inc
xchg
add
push
ss
mov
add
(bad)
(bad)
or
arpl
std
lock
or
xor
aas
add
inc
xchg
or
arpl
inc
pop
xor
pusha
arpl
mov
and
push
xor
add
or
enter
add
add
ss
cld
sbb
push
add
add
test
rol
loopne
arpl
xor
sbb
add
push
out
add
fs
push
dec
mov
and
xchg
push
and
es
or
mov
dec
xor
and
add
add
or
ds
gs
xor
or
leave
inc
out
mov
add
push
std
and
loop
add
test
push
out
push
mov
xor
push
add
mov
push
adc
ins
bt
and
push
sbb
and
rol
and
add
test
shr
inc
mov
sbb
ret
rcr
dec
jo
and
es
sbb
sbb
shr
movs
and
pushf
cmps
test
inc
mov
dec
add
enter
das
or
lods
jle
xor
inc
fsub
jmp
pusha
add
dec
inc
pusha
xor
add
dec
test
dec
add
adc
push
xor
imul
or
push
cmp
out
adc
push
add
in
push
xchg
push
lahf
inc
pop
dec
and
test
cmps
add
sub
add
mov
add
adc
dec
inc
test
add
dec
push
push
sub
or
adc
adc
and
mov
inc
and
push
mov
lahf
push
mov
shl
cmp
fs
inc
add
gs
and
test
push
dec
inc
dec
adc
add
push
push
dec
cmp
pop
add
push
ror
push
or
fild
and
dec
xchg
dec
or
sbb
pop
dec
inc
add
dec
daa
fdiv
inc
mov
dec
push
cmp
in
sti
les
add
ret
in
inc
xor
mov
push
mov
dec
inc
xor
dec
add
dec
push
movs
not
adc
ins
dec
add
daa
in
bound
or
lds
dec
add
and
arpl
dec
mov
inc
mov
add
add
stos
pusha
in
fld
dec
add
add
and
rol
add
add
mov
push
adc
add
mov
(bad)
inc
push
je
gs
push
jo
imul
je
cld
or
push
outs
jo
cli
push
sbb
imul
mov
mov
popa
bound
adc
pop
push
push
arpl
gs
inc
ins
gs
(bad)
mov
add
ja
add
push
jns
call
jmp
inc
popa
jo
imul
xchg
shl
mov
call
mov
rol
adc
pushf
sti
iret
mov
aas
and
and
adc
mov
fstp
push
push
dec
dec
inc
inc
push
dec
dec
dec
and
cs
push
inc
inc
inc
inc
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
js
add
jb
or
ins
outs
outs
ja
gs
or
dec
jle
cmp
popa
call
popa
outs
popa
mov
push
mov
inc
test
sbb
mov
retf
xor
or
fs
jb
loopne
cmp
jne
data16
inc
and
inc
repz
loope
xor
ret
sub
loop
add
inc
mov
into
int3
pop
xor
data16
jo
cdq
ds
push
mov
mov
adc
test
cmp
sbb
or
sahf
adc
adc
push
shl
xor
dec
mov
ss
jae
add
gs
mov
std
in
add
lock
push
cs
pop
push
sbb
je
repnz
(bad)
in
popa
ins
inc
adc
or
jbe
inc
fs
add
sbb
fdivrp
mov
pop
push
bound
ins
popa
cmp
mov
jbe
sub
push
xchg
dec
sub
and
in
addr16
and
mov
popa
fs
add
sub
fnstcw
add
bound
jnp
daa
xchg
adc
or
mov
inc
push
or
test
test
jp
fwait
adc
ins
xchg
scas
mov
mov
add
rcl
dec
ins
xchg
push
or
cmp
jbe
rcl
dec
fild
imul
test
and
xor
adc
rol
push
gs
inc
sub
outs
adc
rcl
dec
pop
stc
add
push
add
xor
or
and
dec
dec
outs
and
data16
add
push
add
sub
inc
je
inc
popa
push
je
int3
aaa
cmp
add
mov
jo
popa
mov
inc
mov
mov
dec
and
mov
js
cs
mov
sbb
jo
call
pusha
imul
mov
sbb
arpl
sub
cmps
mov
mov
mov
mov
and
test
clc
data16
ror
xor
sub
mov
mov
lods
pop
mov
cmp
mov
out
cmp
adc
or
cs
int
out
fcomp
sub
lea
movs
pop
js
or
popf
call
xchg
xor
data16
xchg
push
xor
add
push
and
or
inc
sub
stos
dec
pop
popa
add
mov
fadd
push
js
popa
and
pushf
sahf
or
cwde
imul
test
mov
mov
das
sbb
rol
push
mul
adc
add
xchg
dec
das
sub
xor
ret
mov
cmp
mov
outs
cmp
mov
sbb
xchg
cmp
cld
mov
jo
mov
push
jo
add
mov
test
out
test
cmp
jae
and
lds
pop
mov
loope
loope
adc
lods
popf
mov
mov
mov
or
shl
inc
push
xor
fsub
or
sbb
ja
sub
shr
loope
adc
ins
and
fmul
mov
jo
mov
stos
jnp
or
outs
cwde
pushf
xchg
div
fcomp
push
push
inc
in
push
mov
mov
mov
cmp
loope
repz
adc
arpl
cwde
adc
sbb
cmps
adc
shl
mov
outs
fs
(bad)
arpl
and
inc
or
pop
pop
mov
mov
into
sub
pop
imul
ret
add
adc
or
ja
pop
lea
mov
gs
sbb
xchg
sub
pop
mov
test
lock
jnp
mov
call
push
mov
mov
cmp
pop
sbb
cli
sbb
js
push
push
push
and
repz
dec
or
and
shl
sbb
popf
jno
jp
jp
cld
lea
or
and
mov
fistp
mov
xchg
retf
xor
jmp
add
mov
rol
pslld
jp
sbb
imul
jne
arpl
pop
test
popa
icebp
adc
push
(bad)
addr16
out
loopne
mov
sub
jbe
mov
addr16
push
aad
mov
cdq
mov
cmp
sbb
popa
inc
(bad)
xchg
push
jmp
cmp
test
jmp
push
mov
and
or
out
push
inc
xchg
push
movs
jg
pop
jo
sbb
add
outs
(bad)
mov
test
stc
(bad)
push
jl
test
adc
inc
cmps
xchg
xor
inc
cmp
inc
rol
add
mov
push
mov
sub
xchg
or
push
or
push
pop
and
adc
and
jecxz
jmp
lds
int3
pusha
inc
and
das
shr
call
and
pop
loope
cmp
es
aaa
sbb
into
shl
ja
cdq
scas
or
xor
add
pop
ins
mov
retf
mov
push
pop
sub
jl
popf
cmps
push
jo
popa
add
jmp
sub
mov
mov
xor
add
add
dec
lahf
pop
adc
jne
daa
adc
dec
hlt
adc
cmp
add
inc
mov
push
or
cmp
loope
add
das
loope
and
cmp
pop
jo
call
ins
cmp
ret
rol
pop
pop
or
adc
ret
lea
cmp
cs
xchg
arpl
lock
xlat
sub
sbb
mov
and
sub
jmp
jb
inc
pusha
repz
jg
push
sbb
outs
xlat
jae
lds
cmp
clc
mov
or
test
inc
add
out
mov
or
pop
imul
xor
add
pop
sub
or
fucomp
movs
jp
jns
mov
push
mov
fucomip
fld
add
mov
cmp
mov
data16
sar
sub
push
cwde
daa
loope
push
or
(bad)
mov
jb
sub
sub
or
sahf
and
pop
jmp
mov
or
xchg
xor
ret
outs
test
inc
stos
ss
popa
popa
sbb
in
sbb
sbb
stos
push
pusha
sahf
cmc
push
pushf
or
xor
mov
push
or
vpcmpeqb
les
inc
test
mov
movs
push
dec
leave
adc
push
loopne
scas
adc
inc
aad
xor
aaa
frstor
jne
add
scas
add
(bad)
sub
inc
inc
and
inc
jno
sbb
sbb
mov
pusha
xor
jmp
jnp
pop
or
adc
fs
stos
jb
je
nop
or
or
cwde
mov
mov
test
or
rcl
mov
sub
lock
out
(bad)
mov
xor
cmp
inc
(bad)
xor
loop
sbb
shl
js
mov
or
sbb
leave
enter
(bad)
mov
ja
xor
jne
mov
fld
outs
out
jecxz
daa
add
cwde
adc
mov
popa
popa
add
stos
lods
mov
ds
rol
fadd
inc
dec
shl
les
adc
shl
jbe
adc
jae
mov
or
aas
loopne
or
scas
das
jmp
add
mov
and
sbb
inc
and
mov
cmp
push
inc
aaa
inc
or
pop
push
jl
icebp
pusha
addr16
cmp
jmp
ret
add
cmp
or
out
sub
mov
adc
mov
mov
loope
push
sub
sub
scas
push
pushf
sbb
cmp
or
push
xchg
dec
dec
lea
inc
arpl
pop
mov
popa
loopne
ss
addr16
ror
push
loop
pop
pop
or
dec
cmp
xchg
rcr
mov
sbb
imul
xor
rol
pop
pop
pop
or
ret
loope
push
mov
xchg
and
repz
or
loope
cmp
inc
je
adc
hlt
inc
xor
mov
xor
cmp
lea
sahf
(bad)
stc
in
pusha
dec
fs
jbe
mov
mov
adc
movs
lods
(bad)
pop
outs
rcl
fst
pop
sti
int
fsub
pop
dec
in
lahf
adc
adc
xchg
dec
vmovdqa
adc
inc
or
cmp
mov
mov
push
push
loope
popa
aaa
push
mov
lods
hlt
mov
popa
out
xor
nop
mov
movs
ds
push
imul
je
in
lock
movs
add
pop
adc
xor
and
out
pusha
cmps
jne
adc
lock
pop
and
push
or
xchg
dec
lahf
and
ja
xchg
mov
add
add
aaa
loope
in
js
adc
scas
lods
xor
mov
and
loop
dec
imul
icebp
inc
or
add
and
adc
rol
jl
xchg
jns
jo
imul
outs
shl
sub
adc
cmc
adc
adc
sahf
mov
retf
je
xchg
adc
pop
das
jl
mov
mov
dec
sbb
in
loopne
jmp
inc
(bad)
loopne
stc
das
xchg
cmp
pop
das
mov
icebp
jge
dec
cdq
xchg
ss
sbb
sbb
push
inc
push
out
in
pop
xchg
pop
pop
sbb
push
add
cmp
inc
push
movs
lock
(bad)
retf
scas
sbb
inc
cmp
lods
push
cmps
int3
push
inc
scas
adc
adc
mov
cmp
xchg
xchg
sub
jb
ins
inc
add
loopne
jne
xchg
or
sbb
inc
mov
test
rol
adc
icebp
(bad)
out
mov
adc
loopne
push
inc
ins
cmp
imul
mov
push
mov
push
mov
dec
aas
sub
out
fistp
sub
loopne
mov
jnp
adc
jnp
push
mov
daa
lea
pushf
jp
mul
sbb
ja
inc
push
or
xor
hlt
adc
(bad)
mov
ret
cli
jo
push
sub
push
push
jns
xchg
pop
pop
retf
pusha
xchg
add
and
pop
xchg
fldenv
das
iret
mov
stos
adc
push
je
cwde
adc
mov
lods
adc
inc
push
lahf
pop
lock
shl
rcr
push
lea
out
pop
cmps
inc
stos
pushf
xchg
cmp
jge
push
outs
push
mov
sub
dec
push
xor
arpl
loopne
ret
retf
loop
test
xor
jp
es
je
cmc
push
pop
popa
xor
or
push
add
loope
shr
inc
test
dec
rol
mov
push
in
xchg
and
pop
sub
cmp
sub
setg
lock
jl
sbb
pusha
mov
pusha
lock
popa
pop
test
and
aaa
jmp
pop
lock
cwde
xchg
sbb
or
mov
lahf
inc
mov
dec
adc
clc
mov
sahf
popf
ret
gs
inc
sub
add
dec
mov
and
add
adc
cmp
js
adc
jae
cmp
jmp
xor
mov
popf
dec
es
jp
pop
sbb
xchg
push
bound
push
pushf
sub
adc
xor
cmp
or
jns
mov
sub
push
xchg
sbb
sub
add
adc
imul
add
and
or
aaa
dec
movs
and
scas
mov
pop
add
sub
dec
(bad)
(bad)
cs
mov
or
call
sub
mov
mov
dec
mov
and
adc
xchg
enter
adc
test
and
sbb
adc
xchg
mov
add
mov
sub
and
adc
ja
std
adc
mul
pop
xor
jne
lock
push
xchg
stos
adc
or
out
mov
xor
iret
jmp
sbb
xor
and
sbb
(bad)
sbb
xchg
xor
add
add
dec
cmp
push
mov
fwait
cmp
imul
mov
imul
sbb
or
add
sbb
(bad)
jo
jno
add
sub
sub
or
push
push
adc
pop
stos
inc
movs
pop
dec
adc
xor
ror
or
or
xor
mov
loopne
popa
push
repz
imul
or
mov
cmp
mov
or
pop
cmc
xor
add
pop
add
or
xor
sub
mov
popa
cmp
xchg
push
loop
add
mov
int
cli
cmp
sub
call
xchg
call
sub
ret
jno
sub
cmp
sub
push
imul
das
cmp
xchg
push
add
adc
ror
and
dec
cmp
test
and
popa
daa
cli
push
fisttp
xchg
inc
rcr
lods
xchg
mov
and
stos
test
rol
data16
das
js
sub
xchg
retf
mov
sub
call
int
sbb
stos
dec
xor
pop
add
out
add
jp
mov
push
pop
sub
adc
push
pop
xchg
adc
in
bound
rcr
pusha
lock
or
mov
add
xchg
or
cli
inc
mov
add
pop
sub
sbb
adc
cdq
adc
or
mov
add
mov
aaa
inc
mov
xlat
fimul
sti
xchg
test
repnz
push
rol
push
or
adc
cmp
adc
mov
int3
or
repz
and
out
mov
inc
xchg
fld
pop
pop
or
inc
or
jb
ins
ins
inc
popa
jb
pop
or
push
gs
imul
bound
(bad)
fistp
data16
or
js
ins
imul
or
sbb
push
and
sti
inc
js
push
push
popa
outs
gs
add
outs
ins
xor
mov
out
clc
add
push
pop
add
add
pop
add
add
pop
or
inc
outs
je
outs
ins
or
jbe
dec
jne
in
adc
outs
clc
pop
push
bound
outs
nop
sbb
or
ss
mov
popf
(bad)
ror
push
popa
imul
xchg
cdq
loopne
pop
pop
inc
addr16
stc
sbb
idiv
sbb
aas
add
ficomp
scas
mov
cmps
or
shl
sub
jge
shl
inc
mov
or
cdq
xor
inc
ins
fadd
loope
in
pop
cs
or
lock
inc
jo
pop
push
imul
dec
outs
inc
js
or
imul
jg
and
jae
xor
pop
inc
loope
or
ins
inc
inc
pushf
popa
out
mov
push
mov
outs
pusha
cmp
rcl
jo
xor
adc
(bad)
popa
mov
or
imul
adc
or
fidivr
in
or
and
inc
mov
sbb
call
xor
movs
ret
sbb
jne
jmp
mov
mov
mov
data16
adc
inc
xor
mov
out
inc
xchg
cmp
adc
fs
jno
shl
push
cwde
shl
pusha
je
cmp
das
ins
outs
sub
call
je
xor
add
daa
fidivr
ins
ins
and
das
jmp
inc
sub
das
popa
ds
jle
adc
addr16
dec
data16
inc
xchg
lods
stos
call
xchg
sbb
fldenv
into
dec
ins
les
or
sahf
fs
xor
cmp
add
in
xor
inc
adc
je
cmp
popa
cli
adc
or
dec
mov
and
popf
cs
ror
je
aad
xchg
cs
or
mov
or
sti
sbb
pop
cmovo
sub
pop
inc
outs
retf
or
and
pusha
adc
cs
popa
dec
mov
outs
jne
and
dec
xor
pop
in
inc
jne
ins
ins
push
add
inc
xchg
pop
mov
mov
(bad)
push
push
push
(bad)
pop
jnp
out
adc
cmp
call
loopne
inc
push
cmp
icebp
pop
push
aam
(bad)
adc
aad
std
adc
sub
adc
jne
or
or
inc
mov
es
add
pop
sbb
mov
push
and
inc
dec
cmc
xchg
dec
or
daa
jnp
js
sub
mov
jmp
mov
in
or
xor
or
aam
retf
xchg
sbb
sar
xchg
push
daa
ret
push
pusha
mov
and
mov
push
inc
push
jno
sub
pop
jp
sub
fsubr
fcmovu
popa
xchg
mov
das
leave
dec
dec
icebp
scas
rol
imul
je
and
and
pop
xchg
lods
inc
popa
adc
add
pop
xchg
push
(bad)
cmps
mov
or
push
cs
out
stos
pop
mov
cmove
inc
push
dec
push
push
dec
add
dec
push
push
inc
push
or
outs
mov
lock
es
arpl
outs
ja
gs
or
push
adc
or
dec
popa
sub
fsub
push
popa
jno
jns
or
movs
dec
mov
cmps
add
sbb
or
ja
jbe
dec
shr
fs
or
or
mov
imul
add
not
stos
adc
xor
inc
dec
xchg
jbe
jle
fisubr
dec
push
outs
or
pop
inc
ret
add
loope
xchg
or
loopne
lahf
repz
xor
add
pop
test
lds
pop
or
outs
inc
pop
pop
daa
push
add
adc
bound
fisttp
or
test
jmp
je
push
xor
cwde
jb
push
bound
jo
or
adc
or
into
sub
arpl
or
imul
sbb
push
outs
jne
cmp
mov
or
jae
outs
adc
jg
sub
out
push
or
sbb
add
push
inc
clc
js
push
rol
and
push
dec
ins
fs
fsub
mov
repnz
outs
cmp
jo
push
inc
data16
mov
cmps
jg
mul
xor
dec
adc
out
inc
shl
movs
imul
jae
pop
outs
arpl
pusha
mov
popa
mov
or
pop
cmp
addr16
xor
xchg
jmp
xor
gs
test
inc
leave
inc
fs
add
add
je
sbb
loopne
inc
test
push
and
xor
sub
sar
add
dec
mov
inc
jo
pop
add
lock
push
imul
jb
je
or
adc
sar
lods
shl
bound
push
jno
xor
cmp
inc
xor
cmp
or
loop
and
mov
mov
add
shl
or
cmp
dec
add
or
push
push
add
and
push
dec
(bad)
dec
and
dec
add
scas
test
xor
or
sahf
loop
cwde
inc
shl
push
data16
push
add
inc
or
add
ret
push
xor
ins
ins
cmps
add
popf
pop
adc
and
sahf
popa
ds
lea
or
mov
jp
add
or
push
adc
aad
(bad)
aas
mov
cmp
xor
add
xchg
cwde
xor
adc
pop
jae
add
xor
mov
add
cwde
sub
inc
xor
mov
or
aam
fist
adc
popa
scas
push
adc
adc
adc
shl
push
add
inc
or
repz
push
inc
cmp
cdq
jg
jo
or
push
jne
test
arpl
(bad)
(bad)
lahf
prefetchw
dec
lods
push
mov
cmp
cmp
inc
adc
cmp
and
(bad)
and
adc
cwde
pusha
jecxz
jp
pop
mov
sbb
inc
mov
mov
call
sbb
push
add
pop
(bad)
mov
cdq
push
mov
adc
rol
xor
add
or
test
dec
popf
clc
mov
(bad)
mov
outs
inc
movs
jo
inc
xchg
(bad)
(bad)
aam
add
xor
fist
aad
or
test
fnstcw
xchg
dec
adc
dec
outs
mov
push
rcl
or
or
push
adc
adc
and
sbb
repnz
test
mov
add
xchg
xchg
mov
pop
jle
nop
shr
xlat
into
jo
sub
test
int
push
pushf
push
add
xor
sub
pop
leave
sub
shl
leave
hlt
xchg
jae
dec
pop
and
or
pop
mov
rol
sbb
adc
je
mov
sbb
push
out
int3
sub
ror
push
xchg
xchg
mov
mov
dec
cmp
daa
pusha
mov
inc
pop
or
sub
jne
mov
loopne
and
jp
sub
mov
out
xchg
mov
add
jb
jnp
push
mov
addr16
xor
push
or
ret
in
dec
(bad)
out
sub
add
cdq
test
sbb
add
add
lods
and
fstp
add
xchg
inc
fldenv
pop
je
arpl
sub
sbb
inc
test
jecxz
lods
add
fiadd
inc
dec
add
adc
pop
out
ins
pop
add
(bad)
adc
or
mov
cdq
xchg
cmp
sti
add
push
push
retf
sub
mov
aas
retf
add
xchg
jo
mov
int
mov
xor
mov
and
adc
test
and
rcr
test
ret
sbb
mov
xchg
pop
cmp
sub
mov
push
add
ror
push
mov
inc
fimul
and
push
pop
jge
pusha
xchg
gs
out
dec
and
ror
dec
xchg
dec
jo
sar
and
(bad)
push
mov
and
into
ror
add
xchg
adc
sbb
sub
or
popf
leave
sub
mov
adc
(bad)
loop
mov
mov
xchg
push
and
push
ficomp
xchg
mov
xchg
add
or
ror
cmp
fs
and
mov
pop
mov
adc
movs
jbe
dec
and
ror
xor
pop
arpl
sar
mov
out
push
lds
add
mov
xor
xchg
sbb
and
pop
rcr
inc
or
xor
push
pop
sub
fwait
jo
movs
xor
and
sub
mov
push
jne
mov
adc
sti
and
or
sub
ret
xchg
sbb
adc
adc
dec
out
cmp
lock
xor
xor
mov
fdiv
jge
sub
sbb
adc
std
jnp
adc
mov
mov
xor
rcr
add
adc
loope
sub
cdq
stos
out
xchg
sub
sbb
push
sub
std
pop
jle
mov
imul
ins
and
add
ret
je
push
and
sbb
and
adc
sbb
xor
pusha
xor
out
je
add
repnz
xor
push
adc
test
jbe
xchg
fild
test
xor
or
push
std
add
add
sub
dec
loope
mov
push
or
ud2
xor
add
sti
inc
xchg
loopne
js
mov
dec
loopne
pop
dec
call
or
lahf
adc
cmc
icebp
xor
or
push
cs
or
sub
xchg
jge
out
sbb
dec
(bad)
push
jge
sbb
xchg
push
fcom
jmp
sub
movs
or
mov
jno
mov
push
nop
adc
sbb
add
or
add
inc
out
rcl
popa
mov
sti
jge
sbb
loope
mov
adc
push
mov
out
loope
push
add
test
rol
pusha
add
sub
push
xchg
and
mov
add
sar
js
into
repz
call
sbb
xor
add
push
bndstx
ret
jmp
sub
add
and
arpl
or
lock
(bad)
fnstsw
fild
pop
add
and
rcr
mov
push
mov
(bad)
bound
pop
sbb
mov
or
jo
xor
sti
sub
out
arpl
jle
mov
push
pop
(bad)
xor
pop
(bad)
adc
cmp
push
je
jbe
dec
dec
aaa
mov
loopne
dec
add
(bad)
add
outs
data16
popa
jae
sub
jmp
mov
sbb
les
sub
loopne
push
scas
mov
push
daa
cli
xchg
mov
mov
pop
xor
pop
out
and
pop
mov
add
daa
push
cmp
rcl
(bad)
sbb
sub
sub
add
or
call
mov
mov
dec
cmp
and
mov
dec
jnp
mov
pop
lods
sbb
adc
mov
sub
jp
cmp
xor
and
gs
mov
fmulp
mov
rol
and
aad
cmp
ret
in
loopne
pop
add
add
popa
movs
cmp
push
ret
int
mov
jae
into
mov
xor
dec
shl
inc
and
aas
sub
pop
arpl
ror
or
xchg
hlt
ins
mov
push
fcomp
adc
nop
push
inc
test
push
xor
jno
push
into
adc
pop
cmp
cmp
out
ret
jecxz
xchg
xchg
arpl
xor
mov
or
mov
out
jno
cmp
xchg
into
sbb
sbb
and
ins
cmps
adc
sti
add
sub
outs
dec
pop
and
(bad)
lock
cmp
call
iret
movs
fldenv
add
push
and
pop
daa
daa
lock
dec
and
xchg
inc
cmp
adc
bound
sub
or
xchg
jne
stos
mov
push
sub
adc
icebp
mov
popa
shr
lea
dec
push
loopne
add
test
movs
adc
retf
xor
pop
cmc
add
mov
add
jne
in
mov
mov
add
fistp
sub
jmp
add
sahf
xchg
pop
js
rcl
jg
add
ja
ja
dec
jl
push
ja
daa
cs
jnp
push
inc
and
add
inc
js
add
pop
dec
sbb
sbb
sahf
cli
mov
call
movs
or
and
daa
jae
mov
and
pop
cmp
test
into
sahf
sbb
fbstp
fcom
cdq
sub
sbb
add
(bad)
jns
cmc
in
mov
mov
test
retf
and
mov
ds
jne
mov
mov
rol
add
inc
jnp
loope
cmp
jge
push
inc
and
int
jno
test
adc
loope
aas
jmp
pop
push
dec
test
mov
scas
and
xor
fcom
or
nop
sbb
and
pop
or
shr
pop
mov
sbb
cmp
xor
adc
or
mov
mov
or
and
jb
xchg
in
dec
ja
push
pop
imul
cmc
inc
jo
(bad)
loop
sub
adc
std
xor
cld
ud1
das
jmp
test
dec
iret
rol
pop
inc
rcr
loope
fcomp
repnz
inc
ja
adc
mov
add
sub
ret
loope
cmp
add
sbb
mov
jne
inc
xchg
imul
adc
and
xor
add
and
mov
add
into
inc
jo
cmp
mov
adc
mov
mov
and
adc
push
sti
adc
jmp
ds
add
add
add
add
add
add
add
add
cmp
out
pop
inc
push
(bad)
adc
ret
mov
jnp
adc
lock
mov
mov
jno
stos
sahf
inc
outs
rol
mov
add
fadd
or
mov
cs
jae
inc
pop
add
and
mov
dec
adc
ret
jo
push
adc
cmp
cmovg
add
pop
xor
(bad)
sub
xor
xchg
mov
inc
cmp
pusha
jo
inc
sub
lock
sbb
pusha
sub
sub
xor
pop
jnp
popa
lds
daa
(bad)
jbe
ret
push
adc
add
xor
xor
xchg
lds
adc
lds
loopne
sbb
pusha
ret
mov
icebp
cmp
mov
mov
retf
call
dec
mov
add
jae
(bad)
pop
and
jbe
loope
xchg
cs
add
add
mov
pop
lods
push
out
pushf
mov
mov
and
mov
inc
xor
gs
fild
sbb
push
mov
fsubr
inc
loope
aas
out
inc
ret
push
daa
daa
int
dec
cdq
mov
pop
pop
adc
cmp
xchg
ja
sub
shl
lds
jb
inc
or
cmp
adc
push
add
lods
mov
push
add
loop
lods
std
adc
out
jg
test
mov
pushf
cmp
xor
dec
dec
outs
adc
aaa
add
or
in
jle
mov
pop
(bad)
pop
sub
bound
in
xor
ffreep
mov
gs
les
mov
push
mov
adc
dec
and
aas
or
iret
inc
or
mov
sti
mov
leave
add
dec
fsub
push
push
nop
sbb
stc
in
adc
cli
xchg
xor
add
or
daa
cmp
push
sti
jnp
xchg
adc
sti
sub
jg
mov
imul
sub
and
mov
mov
loope
sub
inc
sub
inc
or
and
inc
mov
or
sbb
rcr
jno
mov
push
mov
cmp
add
ins
ja
test
pop
add
imul
mov
ja
dec
mov
nop
rcl
push
pop
jmp
cmp
add
movs
dec
shl
retf
sub
loope
pusha
xchg
test
push
push
adc
pop
lods
mov
adc
(bad)
fild
xor
in
adc
add
lock
mov
ss
(bad)
fldenv
aam
mov
or
push
fldenv
push
sbb
or
sub
stos
push
jmp
fwait
aad
xor
pop
cmp
dec
or
addr16
imul
add
add
mov
push
je
test
mov
or
and
cwde
cdq
add
loop
xchg
rol
add
sub
or
add
ret
xchg
call
dec
pop
and
outs
pop
add
adc
inc
adc
mov
and
sbb
push
dec
loopne
sbb
shl
adc
inc
mov
test
pop
and
leave
xchg
(bad)
jns
outs
mov
cmps
sub
push
into
dec
xchg
ins
jbe
test
adc
call
mov
mov
or
adc
in
add
mov
or
popa
push
add
add
dec
jae
imul
fcmovnu
inc
and
add
sbb
test
inc
cmps
xchg
cmp
scas
mov
pop
mov
frstor
add
outs
xor
jo
pop
xlat
mov
and
xor
neg
xchg
int
or
ret
(bad)
or
ins
inc
push
xor
shl
daa
or
aas
fild
sbb
inc
mov
inc
pop
cs
push
and
out
jmp
imul
outs
aas
xchg
mov
add
add
nop
sub
lods
inc
mov
scas
loopne
daa
add
pushf
add
push
and
inc
cmp
stc
sbb
call
mov
inc
xchg
pop
mov
loope
pop
jmp
mov
adc
popf
lods
rcr
and
or
xlat
or
push
push
xchg
xor
adc
push
loope
sub
push
ins
(bad)
pop
sub
imul
adc
mov
jecxz
sub
loop
jo
xor
in
and
movs
and
and
js
retf
repz
mov
add
adc
inc
not
pop
add
je
inc
(bad)
repz
mov
out
add
dec
shr
mov
lds
gs
cmp
xchg
sub
add
xchg
rcl
mov
rol
cmp
jbe
add
push
add
xor
inc
int3
jno
dec
gs
mov
ret
xor
gs
inc
enter
or
fiadd
jno
jnp
ja
mov
jo
and
inc
xchg
push
dec
or
add
call
xlat
add
mov
xor
in
sub
jecxz
jae
aas
(bad)
sar
mov
xor
popf
(bad)
sub
and
and
jns
cmp
aad
or
or
jo
cmp
adc
adc
jns
jp
(bad)
mov
test
inc
add
lock
inc
mov
add
xchg
adc
mov
and
cmp
inc
test
sbb
push
pop
push
dec
sub
lock
loope
or
popa
push
mov
out
shr
add
add
mov
ds
sbb
sub
sbb
(bad)
mov
repz
dec
sbb
sbb
loope
shl
pop
jnp
aaa
sahf
cmp
pop
ins
dec
adc
js
add
nop
xlat
push
mov
add
cmc
jnp
or
add
inc
fs
mov
pusha
cmp
aas
adc
pop
or
loop
xchg
and
pop
popa
push
lock
mov
jne
add
sbb
in
sub
xchg
nop
sbb
popf
mov
jbe
pusha
sub
jo
out
popf
mov
nop
jecxz
sub
into
and
mov
jecxz
mov
push
mov
mov
pop
push
arpl
add
xchg
pop
jns
cmp
sbb
pop
sbb
or
add
or
retf
outs
xchg
call
mov
push
lock
mov
xchg
and
(bad)
xchg
mov
xor
rol
sub
popa
xchg
leave
xor
xchg
aad
mov
mov
inc
sbb
adc
mov
fnsave
and
cmp
mov
inc
clc
or
lock
xor
call
ret
mov
fld
cmp
imul
pop
mov
mov
and
sbb
mov
mov
test
xchg
dec
add
add
(bad)
inc
pusha
inc
push
stos
and
das
cmps
jnp
push
jae
rcl
inc
test
cmps
call
mov
(bad)
mov
add
mov
rcr
inc
dec
adc
jno
adc
mov
scas
and
retf
jbe
scas
ss
pop
push
(bad)
mov
mov
ret
sub
addr16
inc
movs
jmp
jb
pop
or
or
xchg
add
sbb
pop
pop
jns
push
loopne
imul
and
add
popf
cmp
jo
push
popa
inc
mov
xchg
mov
stos
xor
pushf
(bad)
push
sbb
loopne
scas
pop
adc
(bad)
sub
sub
add
fsubr
xchg
hlt
push
aam
pop
lods
push
push
pushf
ror
ror
jae
add
imul
js
mov
inc
sub
inc
jae
jo
outs
jb
inc
fs
popa
jae
imul
popa
outs
je
outs
gs
cmc
es
and
das
xchg
aaa
mov
xchg
rol
or
push
test
ret
or
les
lahf
or
jl
mov
int
cmp
mov
push
repz
inc
xor
dec
inc
cmp
mov
jbe
add
jmp
xchg
mov
sbb
in
leave
inc
add
mov
cmc
push
cmp
xor
or
test
add
loopne
ds
and
test
add
loope
in
pop
sub
push
add
xor
sub
(bad)
xchg
xchg
add
cld
call
loopne
and
arpl
xlat
enter
add
popf
xor
(bad)
inc
xlat
sub
cmp
jns
mov
mov
dec
and
(bad)
nop
(bad)
fwait
inc
int3
shr
inc
pop
cmp
sbb
ret
movntps
jmp
or
add
test
or
sub
cmp
(bad)
or
xor
jo
movs
fcmovnbe
sub
fs
js
shld
sub
bswap
adc
add
cmp
jl
lods
sub
sbb
lods
inc
fcom
aad
dec
fwait
xchg
add
shr
in
push
imul
pop
test
add
inc
mov
fscale
cmp
pop
mov
call
iret
sbb
in
sbb
add
sbb
pop
dec
lods
scas
inc
add
jl
test
dec
xor
sbb
xor
mov
icebp
div
sbb
xchg
cmp
ja
inc
cmp
or
sub
or
std
sbb
bound
mov
ret
xchg
inc
movs
pop
inc
sbb
pop
add
pop
adc
pusha
dec
mov
mov
fwait
dec
nop
popa
or
add
pop
call
xchg
call
add
xchg
jge
push
lea
jne
adc
jl
bound
ret
(bad)
icebp
adc
scas
add
dec
xor
mov
adc
adc
pop
popf
xlat
cmp
cwde
adc
mov
cmps
inc
xchg
mov
xor
add
push
jae
cmp
xchg
fs
rol
add
xor
and
es
mov
imul
add
push
sbb
mov
mov
punpckhdq
repz
add
xchg
sbb
or
push
mov
and
xchg
rol
popa
pop
xor
cmp
test
stc
inc
dec
and
dec
test
mov
movs
mov
movs
out
(bad)
cmp
jmp
or
pop
pop
das
mov
jne
push
mov
data16
ret
lea
cmp
jo
pop
add
push
or
mov
mov
push
inc
repnz
xor
inc
lea
(bad)
sbb
pusha
lds
ficom
add
push
dec
adc
push
jno
sub
sbb
lods
cmp
leave
jg
enter
sub
dec
and
jmp
mov
adc
test
inc
gs
pop
daa
add
cs
push
push
add
jbe
xor
or
sub
adc
and
inc
lock
add
das
imul
adc
jecxz
test
add
pop
or
ret
mov
pop
repz
int
mov
adc
and
or
or
sbb
pusha
les
or
(bad)
or
fadd
push
das
mov
aam
jl
xchg
ror
sbb
cmp
push
xchg
lods
xor
(bad)
enter
ja
rol
cmp
pop
std
rol
jo
cmp
xor
pop
sub
cmp
mov
adc
imul
add
mov
xchg
mov
mov
sbb
cmp
mov
(bad)
iret
xor
enter
push
xchg
js
add
in
adc
mov
xchg
jmp
lods
bound
adc
adc
dec
add
ret
xchg
add
inc
add
jb
inc
mov
xor
les
sbb
push
ret
mov
pop
in
pop
or
and
fisttp
sbb
cmp
stc
ds
inc
push
push
xchg
jne
and
xchg
imul
test
test
sub
lds
in
inc
cmp
adc
push
sub
xor
or
or
fdiv
jbe
sub
jae
(bad)
add
mov
sbb
fadd
push
xlat
ret
fcmovbe
enter
push
aam
loopne
cmp
outs
add
inc
ror
push
jb
or
add
adc
aad
ds
and
enter
jae
retf
or
jbe
cld
mov
daa
lods
xor
xor
add
push
or
adc
in
ror
inc
mov
gs
pop
test
shl
sbb
add
arpl
sahf
add
mov
sub
js
in
pop
cmp
adc
mov
or
or
jmp
add
add
cmp
sbb
hlt
sbb
and
popf
cmc
ret
aad
adc
push
sub
mov
leave
les
std
daa
inc
or
xchg
scas
popa
shl
push
mov
mov
or
dec
sbb
inc
add
jmp
push
pop
mov
(bad)
jle
jne
push
pop
popa
mov
mov
mov
jno
push
cwde
mov
aas
fdiv
push
xlat
jne
mov
call
cdq
loope
pop
add
mov
repz
add
mov
loope
in
je
pop
adc
cdq
or
xchg
push
into
xchg
inc
sbb
rol
daa
cwde
push
movs
jmp
sub
jg
arpl
adc
ret
mov
or
push
(bad)
mov
mov
inc
cmp
(bad)
jmp
push
lahf
rcr
sbb
outs
jno
dec
outs
pop
pop
aaa
adc
fst
in
stos
adc
cwde
dec
mul
jno
lods
dec
add
sbb
sbb
dec
sbb
add
sub
(bad)
dec
mov
xchg
pusha
mov
push
pop
pop
or
aad
adc
mov
cmp
and
mov
mov
jmp
mov
pop
outs
jnp
dec
pop
test
outs
ins
(bad)
xor
shl
xchg
inc
or
popa
loop
push
xlat
pop
and
mov
scas
pusha
xor
nop
sub
cmp
inc
lods
sbb
aaa
jmp
aad
mov
mov
push
aaa
inc
daa
dec
movs
pusha
(bad)
rcl
repnz
test
test
cmp
push
pop
push
inc
push
or
push
dec
jnp
mov
push
int3
xor
pop
mov
ret
cmc
sar
push
ficomp
push
in
mov
fsub
or
push
std
imul
pop
xor
(bad)
stos
aas
jne
mov
sbb
cmp
mov
std
dec
mov
push
jno
loope
cmp
mov
add
(bad)
adc
and
adc
and
jecxz
arpl
and
and
inc
cmp
inc
test
shr
jl
add
dec
push
clc
push
mov
mov
adc
jmp
(bad)
push
xor
adc
adc
rcr
and
mov
call
adc
or
push
shr
nop
inc
nop
popa
pop
repz
or
adc
icebp
dec
xchg
or
retf
(bad)
sbb
stos
loope
push
jnp
and
sbb
sbb
dec
cs
test
test
popa
xor
or
lods
in
add
popa
sbb
pop
or
mov
je
add
out
in
inc
jns
test
add
lods
mov
jo
sub
dec
ja
mov
lock
add
in
and
sub
push
and
rol
jns
jl
add
(bad)
xchg
shl
jnp
add
add
ins
or
and
arpl
pop
add
xchg
dec
xor
inc
in
push
icebp
xor
rcl
jo
mov
sbb
and
daa
das
xor
stos
loop
or
mov
mov
cmp
sub
push
in
shl
bound
rol
dec
cmc
movs
adc
xchg
adc
or
sbb
inc
add
mov
loopne
fist
xlat
outs
sbb
xchg
sub
loope
xchg
jo
mov
outs
and
test
sub
lock
clflush
movs
push
outs
cwde
pop
cmp
je
dec
aas
and
fistp
test
push
add
adc
mov
mov
inc
sub
adc
sub
adc
push
push
ret
mov
mov
loopne
xor
icebp
jb
das
dec
aad
lock
inc
sub
sub
lods
mov
in
lds
out
retf
popa
cmp
add
xchg
cmp
xor
jge
nop
add
add
imul
loop
jns
jb
xchg
cmp
or
das
jnp
mov
xor
pop
pop
xor
dec
mov
xor
jb
aas
mov
cmp
and
jmp
js
cmc
shl
mov
shr
xchg
pusha
inc
inc
mov
loopne
test
bound
fld
or
aam
lods
arpl
mov
(bad)
adc
movs
dec
repnz
pusha
mov
and
test
pop
cmp
or
or
rcl
xor
mov
pusha
fwait
inc
and
(bad)
test
inc
aaa
ins
lods
sbb
mov
popf
add
mov
(bad)
aas
imul
mov
or
jae
pushf
or
xor
call
cmps
sbb
imul
mov
ins
mov
test
popf
loope
push
xchg
or
lahf
and
cmp
shr
adc
jmp
aad
pop
mov
xchg
stos
push
mov
not
inc
and
inc
movs
adc
dec
in
mov
icebp
test
mov
mov
xor
out
sbb
loop
fild
push
mov
push
pop
pop
mov
pop
pop
and
dec
mov
shl
mov
push
cmp
xchg
stos
ror
hlt
mov
stos
shr
inc
pop
mov
mov
test
jno
bound
ud1
sbb
jns
cmp
jno
add
and
cmp
jle
and
mov
mov
lahf
inc
test
add
and
push
xchg
and
and
or
test
pop
js
xchg
mov
pop
dec
and
cmp
ror
cmp
js
imul
xor
push
sub
xor
xor
sbb
inc
push
leave
pop
int3
cmp
jg
add
add
inc
shr
sbb
xchg
pop
out
shr
pop
rol
xlat
cmp
xor
adc
cmp
and
btc
or
mov
xchg
pusha
jno
push
add
lss
retf
loopne
stos
jmp
daa
dec
popf
mov
cwde
rcr
push
mov
sbb
mov
push
and
push
mov
aad
test
enter
xchg
add
inc
(bad)
aad
pushf
loopne
mov
sbb
mov
sbb
cmp
cmp
add
mov
mov
inc
mov
jl
xor
loop
adc
ja
push
rcr
mov
ror
push
cmp
loopne
pop
pop
xor
cmp
test
fild
rcr
inc
jg
jo
jo
(bad)
lds
adc
or
test
iret
or
adc
or
adc
shr
dec
sbb
outs
push
xchg
or
push
xlat
jne
sub
mov
cmp
and
pushf
shl
sub
les
push
movs
or
adc
imul
sub
sahf
pop
adc
fild
xchg
pop
add
sub
add
lods
mov
jb
icebp
sub
push
add
pop
jo
mov
push
inc
sub
xor
or
push
sti
repz
push
mov
and
adc
pop
and
pop
cmp
aas
mov
test
xchg
adc
inc
gs
jecxz
sub
and
inc
sub
lods
fdivr
add
adc
movs
xlat
shr
sbb
dec
fadd
sahf
cmp
cmp
or
shl
aad
pusha
je
jbe
sub
test
loopne
add
fist
adc
and
dec
sbb
rol
mov
popa
add
in
xor
push
test
das
jb
or
hlt
inc
adc
mov
pop
retf
fild
ret
adc
ror
lahf
sub
xchg
imul
or
pop
lock
or
inc
stos
jno
pop
inc
push
sbb
mov
add
shl
jb
mov
sti
imul
sub
add
loopne
xor
pop
add
add
add
add
icebp
add
add
ucomiss
mov
sbb
arpl
inc
sub
pusha
lds
or
js
adc
mov
pop
lock
sub
pop
movs
add
adc
sbb
fs
sub
sbb
push
add
sbb
pop
sub
push
or
inc
mov
sub
push
cmp
ffree
and
test
sub
js
lock
mov
daa
jns
xchg
jmp
or
pop
and
or
cwde
xlat
dec
sub
inc
push
cmps
int
adc
pop
mov
ret
iret
push
mov
jecxz
xchg
ror
add
and
push
iret
mov
idiv
add
sbb
movs
push
mov
iret
lahf
bound
packsswb
jg
adc
cmps
stos
jno
arpl
inc
pop
sub
jnp
fcmovb
sub
add
and
or
loop
jnp
xchg
jge
call
xchg
imul
rol
jnp
loopne
jnp
adc
jmp
cmc
add
mov
and
add
cmp
add
mov
aaa
jae
sbb
icebp
add
ret
sbb
jecxz
push
cmps
test
jae
and
iret
imul
shl
jnp
(bad)
pusha
movs
xor
dec
adc
enter
push
call
retf
fld
add
or
inc
add
loope
ret
jge
push
loope
pop
xlat
jnp
sub
mov
xchg
sub
fistp
hlt
jle
push
push
xchg
push
and
xchg
jnp
sbb
adc
xor
sbb
movs
arpl
shl
fist
sar
push
or
push
in
push
and
loopne
sbb
and
movs
add
cs
popa
mov
xchg
adc
mov
jecxz
ror
and
(bad)
pop
xchg
and
sbb
std
add
inc
cmp
loopne
mov
add
adc
inc
pop
pop
sub
xchg
rcr
and
pop
scas
rol
addr16
sbb
mov
xor
xor
(bad)
mov
and
dec
je
mov
and
adc
cmp
sbb
mov
sbb
call
aas
add
add
add
push
cmp
mov
xor
add
add
mov
out
mov
mov
mov
xchg
arpl
sub
jae
pushf
push
pop
mov
shr
loope
add
scas
ror
inc
sbb
mov
lods
into
push
test
add
adc
sub
mov
rol
inc
fsub
maxps
and
add
mov
rol
push
add
mov
jp
and
pop
cwde
jb
ffree
sub
sbb
daa
jbe
ret
add
xlat
mov
xchg
and
xor
imul
xor
and
aaa
sub
push
cmp
add
or
(bad)
mov
repz
add
imul
nop
jae
jno
and
add
outs
cmp
or
test
sub
inc
jns
aad
pop
mov
adc
scas
jno
or
int3
mov
pop
adc
aam
or
stos
int3
jnp
test
add
add
test
loopne
mov
and
add
clts
loopne
or
lds
test
loope
test
sti
pop
mov
push
fisttp
sti
xor
cmps
and
sti
icebp
rol
and
retf
cmp
adc
iret
mov
adc
stos
outs
inc
or
sbb
mov
add
sub
mov
shl
sub
sub
icebp
inc
sub
pop
or
sbb
pop
add
pop
push
sbb
lds
popa
in
xlat
popa
dec
and
mov
xchg
and
and
adc
sbb
pop
sbb
lahf
jg
mov
jmp
mov
sbb
inc
(bad)
rcl
arpl
aaa
addr16
add
ror
xchg
mov
pusha
jne
sbb
test
outs
sub
pop
cmp
push
enter
ret
sbb
and
mov
and
and
sbb
ja
stos
test
xchg
mov
push
cmp
loopne
pop
add
xchg
and
jge
jne
repz
or
cmp
mov
test
icebp
loop
stc
imul
mov
nop
sti
lea
add
cmp
and
sbb
fsubr
daa
pushf
adc
xchg
mov
int
pop
sub
ins
pop
mov
inc
jg
int
or
into
les
xchg
pusha
xchg
jne
and
push
and
mov
mov
adc
loope
xchg
sbb
int
jnp
add
or
loopne
sub
sbb
dec
sbb
dec
xchg
imul
test
dec
test
xchg
daa
xor
sbb
shl
nop
ins
sub
call
push
call
add
jno
jns
jo
sub
inc
push
xor
shld
xchg
and
loope
push
pop
fistp
(bad)
int
inc
or
sti
test
shl
jne
and
inc
adc
add
xor
jb
pop
clc
add
shl
and
lods
loope
or
cmp
cmp
lea
jecxz
in
pusha
lock
push
repz
scas
(bad)
mov
jo
add
popa
and
jp
jl
(bad)
outs
adc
add
(bad)
mov
cmp
ret
xor
clc
pop
lock
jmp
imul
adc
test
add
lea
orps
rol
adc
add
sbb
jno
sub
rcl
add
lea
jmp
fs
pop
lods
bound
inc
mov
jmp
and
mov
inc
and
(bad)
push
sbb
add
ja
jge
loop
mov
arpl
sbb
lds
jnp
xlat
adc
movs
arpl
push
mov
and
adc
mov
push
mov
xchg
fild
addr16
xor
or
add
daa
cmp
mov
(bad)
lock
lea
outs
xor
leave
jae
push
shl
mov
loopne
or
icebp
mov
pop
pop
adc
push
sbb
cmp
add
sbb
shl
comiss
loope
or
lahf
mov
xor
pushf
or
xchg
adc
add
pop
gs
adc
mov
dec
hlt
adc
xor
out
dec
fsub
test
aam
mov
lock
arpl
cmps
pushf
fist
fs
sbb
jo
xchg
mov
adc
jo
jno
adc
int
mov
push
inc
es
pusha
bound
or
and
loopne
pop
jo
adc
adc
sbb
sbb
mov
and
adc
les
cmp
xor
pop
in
and
inc
lods
ins
iret
jb
gs
out
fcomp
pusha
inc
xchg
jmp
adc
and
pop
int3
xor
push
jno
lock
mov
nop
loopne
sub
mov
inc
(bad)
jmp
or
dec
lea
xchg
and
adc
bound
add
xor
dec
enter
pop
inc
mov
lods
xchg
sub
mov
cs
add
(bad)
pop
sar
pop
and
test
repnz
adc
rol
cmps
push
sbb
add
add
xor
add
add
ins
popf
or
mov
loope
lahf
fwait
sub
sub
in
mov
or
add
xor
or
jbe
push
xchg
and
or
jl
pop
shr
(bad)
test
adc
and
jb
mov
ffree
jne
cmp
(bad)
and
mov
sbb
push
xlat
out
mov
ja
in
(bad)
(bad)
(bad)
jmp
add
push
arpl
ins
ins
inc
popa
jb
pop
or
push
gs
imul
bound
fs
jmp
add
push
push
push
popa
outs
gs
add
outs
ins
xor
gs
add
(bad)
jmp
add
add
push
dec
imul
ins
adc
(bad)
in
outs
pop
or
ins
or
jbe
dec
jne
xchg
pop
push
bound
jmp
mov
add
push
popa
imul
(bad)
fisubr
pop
pop
inc
addr16
fistp
les
jle
aaa
fnstcw
popa
jo
add
mov
adc
aas
scas
mov
test
pop
sub
push
mov
movs
cmps
xor
sar
xor
push
or
scas
pusha
adc
jo
pop
dec
outs
inc
(bad)
cmp
and
loopne
pmaxub
outs
jae
jns
adc
and
cmp
jae
in
sbb
aad
pop
inc
sub
popf
imul
retf
test
cmp
and
push
adc
addr16
dec
data16
mov
idiv
fmul
add
and
xchg
movs
div
sbb
into
dec
ins
les
or
xor
inc
fcmovne
xor
add
cs
mov
inc
inc
push
mov
mov
jb
or
dec
mov
ins
imul
and
popf
cs
and
add
or
mov
popa
sbb
sti
sbb
pop
das
inc
leave
or
adc
pop
inc
outs
retf
or
inc
add
outs
sub
jbe
jne
and
fwait
or
adc
xchg
ins
pop
sbb
cdq
xchg
cmp
sub
mov
ret
jmp
pop
mov
add
sub
shl
pop
pop
inc
sub
mov
bound
or
cmp
loope
dec
inc
jne
inc
mov
aam
pop
and
mov
pusha
inc
and
fwait
add
js
sahf
(bad)
mov
xchg
lea
mov
jbe
mov
imul
cmp
arpl
xor
(bad)
pusha
mov
retf
xchg
sbb
inc
nop
outs
push
imul
add
bound
mov
mov
es
cmp
jae
adc
ret
adc
ins
add
and
mov
das
mov
cdq
cmp
and
cmp
add
das
push
je
cmp
das
fs
popa
jae
pusha
pusha
jmp
mov
das
jae
mov
inc
ins
ins
and
lea
sub
add
adc
pop
and
neg
cmp
ds
push
cs
dec
pop
cmove
inc
push
dec
push
push
dec
inc
push
push
inc
push
or
ret
dec
iret
cmp
outs
pop
or
ins
nop
sub
fdivp
(bad)
outs
ja
gs
or
lahf
cmc
or
dec
popa
retf
adc
push
movs
push
or
and
cmps
add
push
stos
imul
mov
retf
adc
sub
or
inc
or
and
ja
inc
mov
mov
mov
dec
fld
or
xor
mov
stos
adc
add
loop
scas
add
and
add
cwde
loopne
pop
add
xchg
dec
mov
and
or
adc
mov
jge
cli
inc
jno
cmp
pop
std
cmp
fld
xchg
pop
push
mov
xor
pop
pop
add
and
fldcw
and
stc
sub
sbb
pop
(bad)
js
mov
sub
sub
mov
sub
test
mov
xchg
add
loopne
not
aaa
inc
push
sub
cmp
inc
bound
loopne
stos
jns
xor
nop
or
aam
xchg
add
and
cld
repz
jns
ins
test
in
(bad)
loopne
and
dec
mov
push
push
xlat
and
dec
inc
leave
xor
and
and
fwait
mov
arpl
sbb
jg
loopne
ret
ret
add
xchg
nop
push
mov
inc
leave
fdivr
mul
aaa
or
xchg
outs
adc
mov
jae
jmp
or
repnz
sbb
adc
mov
lds
ins
addr16
fldenv
add
add
jbe
pushf
mov
outs
je
(bad)
mov
or
add
push
inc
loop
jo
push
inc
dec
or
inc
cmp
add
add
das
or
les
pop
adc
fwait
repnz
add
movs
add
push
ins
int
add
inc
add
mov
push
xor
retf
add
sbb
mov
add
adc
lea
jge
movs
and
cmps
aad
add
fcomp
sbb
cmps
add
add
sbb
cmps
repz
push
sbb
mov
sbb
retf
and
sbb
mov
xor
adc
adc
mov
mov
add
sbb
ins
mov
cmp
or
or
add
sbb
sbb
adc
(bad)
sbb
sub
add
fadd
dec
imul
add
push
nop
and
and
ins
ins
ins
sbb
or
ror
imul
mov
inc
add
imul
dec
pop
bound
add
dec
ror
and
pop
sub
mov
pop
cmp
pop
or
add
movs
add
and
fadd
dec
add
fisub
cmp
dec
ins
rol
add
adc
and
add
popa
daa
add
fldenv
add
sub
mov
sub
add
adc
lea
and
and
test
test
dec
movs
add
dec
rcr
add
pop
fsubr
add
push
xor
dec
dec
inc
nop
pop
ficom
dec
pop
pop
stos
and
aaa
inc
add
or
dec
aam
push
add
add
or
add
dec
aaa
mov
inc
push
mov
mov
dec
(bad)
pusha
mov
inc
dec
xor
dec
dec
dec
inc
mov
dec
and
adc
inc
rol
mov
add
add
push
pusha
iret
inc
das
sbb
rcl
dec
outs
inc
sub
aaa
add
pusha
or
xor
arpl
add
add
adc
outs
rol
add
mov
and
daa
loop
sub
aaa
add
dec
or
pop
inc
daa
aaa
add
rcl
dec
aam
mov
and
add
sub
inc
aaa
add
push
sub
aaa
add
ins
push
and
icebp
inc
and
mov
mov
aaa
add
fisttp
adc
dec
fcmovnb
mov
dec
iret
inc
jmp
mov
or
add
add
dec
icebp
inc
rol
ret
jns
pop
mov
ins
dec
dec
jmp
fcomp
pop
add
mov
adc
sub
mov
jnp
or
(bad)
push
dec
push
adc
(bad)
push
dec
add
push
mov
mov
dec
push
or
mov
jmp
jnp
pop
add
pop
add
pop
call
mov
or
dec
or
add
ins
sub
inc
push
add
loopne
add
sub
push
dec
sbb
dec
push
jnp
loopne
(bad)
adc
das
adc
adc
dec
push
jge
loopne
(bad)
push
sub
adc
push
add
dec
push
ja
fcomp
sbb
dec
adc
sub
add
jo
lea
adc
adc
lea
push
pop
and
push
or
dec
mov
adc
pop
and
sbb
rcl
add
pop
daa
push
jo
and
dec
and
lods
loopne
inc
ret
sbb
sbb
adc
sub
or
add
inc
push
push
daa
push
ror
lods
push
or
and
popa
sbb
xchg
sbb
sub
adc
pop
push
sbb
pop
push
add
movs
xchg
push
and
sub
mov
pop
fiadd
jbe
xchg
push
add
lahf
sub
mov
jmp
pop
add
inc
mov
dec
fsubr
stos
pop
add
pop
pop
add
aas
pusha
sub
sbb
mov
and
sbb
and
add
mov
fild
fsubr
sub
and
pop
adc
or
cmps
dec
sub
xchg
push
sub
sub
and
adc
xor
fwait
daa
shl
and
and
push
das
and
and
cmp
retf
inc
and
dec
dec
pusha
push
and
(bad)
sbb
shl
mov
and
xchg
shr
jno
sub
add
dec
test
or
sar
cmovg
mov
adc
iret
pop
push
shl
dec
push
sub
adc
add
adc
call
mov
pop
xor
mov
mov
pop
and
push
add
and
sub
lea
pusha
popa
inc
push
outs
sub
ins
inc
sub
and
pop
add
push
sub
add
bound
add
bound
vmovsldup
add
mov
cmp
add
add
inc
add
fcomp
lfs
test
ins
mov
das
push
add
mov
aam
dec
add
ins
mov
mov
das
push
add
push
pushf
or
add
rol
dec
inc
adc
mov
and
mov
mov
xor
adc
not
xchg
dec
scas
add
pusha
arpl
push
dec
mov
cmp
add
and
add
mov
mov
das
dec
add
or
cmp
movs
lods
sub
add
fcomp
pop
ins
das
add
dec
mov
nop
fiadd
dec
xor
sub
or
add
dec
dec
lds
inc
cmp
dec
and
push
pop
pusha
add
push
or
shl
dec
add
adc
adc
test
push
add
or
push
and
xor
add
movs
mov
or
add
loopne
in
add
push
fiadd
imul
add
imul
dec
add
add
dec
xor
dec
mov
add
test
push
add
jo
mov
test
inc
add
adc
or
push
xor
push
inc
test
xchg
dec
inc
sub
add
add
push
inc
push
dec
js
fisttp
inc
adc
bound
dec
adc
adc
and
add
dec
test
mov
dec
inc
adc
or
sub
add
xchg
test
add
inc
inc
nop
xchg
test
or
(bad)
test
pop
adc
aas
xadd
pop
add
or
pop
add
inc
mov
add
add
add
sub
jns
mov
and
shr
sbb
jae
test
mov
dec
jno
mov
outs
ins
push
inc
mov
dec
outs
ss
pop
add
push
adc
mov
add
xor
or
inc
pop
imul
sub
dec
pop
pop
sub
add
test
dec
arpl
pop
sub
inc
dec
popa
add
or
dec
pop
pop
push
nop
fadd
dec
pop
add
test
and
sub
add
push
add
push
add
push
sub
shr
push
mov
dec
adc
bound
dec
sbb
pusha
mov
inc
dec
inc
nop
dec
dec
mov
rol
dec
adc
sub
pop
ins
dec
add
mov
and
ins
mov
add
inc
add
or
inc
push
adc
mov
inc
add
push
rcl
or
inc
add
aas
sub
inc
mov
add
dec
add
mov
cmp
dec
inc
ins
mov
cmp
push
lods
or
add
push
nop
dec
aaa
add
adc
adc
xor
or
adc
dec
xor
sub
sub
add
das
mov
dec
rol
pop
sub
mov
sub
test
add
pop
pusha
sub
dec
push
mov
push
daa
add
add
dec
gs
add
mov
data16
push
rol
inc
dec
push
cmps
push
inc
and
dec
and
(bad)
mov
sbb
and
(bad)
adc
movs
add
call
add
dec
dec
add
int3
in
add
adc
or
dec
add
pop
add
sub
dec
add
fisttp
pusha
or
arpl
xor
gs
and
push
or
push
arpl
pop
nop
push
xchg
inc
add
gs
or
inc
push
push
push
xor
xor
mov
dec
inc
data16
inc
add
shl
push
inc
outs
dec
loope
mov
inc
add
inc
add
int
add
push
ss
mov
gs
add
dec
pop
loope
jl
dec
arpl
arpl
mov
cmp
dec
aas
sbb
pusha
mov
dec
add
gs
arpl
inc
pop
xor
dec
add
push
lea
dec
cmp
ja
and
push
xor
sbb
or
add
sbb
add
add
ss
cmp
add
cld
sbb
dec
adc
jnp
push
test
arpl
test
sub
inc
dec
into
add
push
out
add
or
pushf
push
dec
loopne
outs
icebp
and
xchg
push
setge
ins
(bad)
es
jg
sbb
sbb
and
xor
fs
out
add
cmp
dec
jg
bound
out
mov
xchg
es
dec
cs
rcr
xor
and
test
mov
call
leave
lods
push
add
mov
push
mov
cmps
or
add
dec
dec
dec
fadd
cmps
add
xchg
dec
test
dec
mov
add
adc
inc
mov
sub
dec
xor
and
and
inc
es
cmps
xor
shr
cmps
xor
nop
test
add
add
xor
inc
nop
lea
or
adc
xor
and
add
xor
dec
scas
sub
dec
mov
(bad)
test
push
outs
test
dec
or
add
leave
adc
and
xor
dec
push
xor
or
aad
pop
dec
and
add
add
or
inc
ror
adc
dec
cmp
adc
push
dec
mov
xor
dec
push
inc
and
and
dec
inc
xor
dec
push
dec
shl
fcom
lahf
inc
xor
sbb
rcl
inc
cmp
inc
add
test
sbb
dec
push
and
or
mov
mov
ror
add
dec
xor
xor
pop
add
mov
mov
lods
sbb
fild
xchg
stos
loopne
dec
pop
mov
inc
add
dec
push
sbb
and
push
or
push
in
sti
dec
ror
add
dec
inc
and
dec
aam
inc
or
mov
popf
xor
and
cmps
xor
pusha
dec
push
movs
ins
pop
in
sub
daa
xlat
sbb
in
add
add
adc
dec
bound
push
or
pop
or
sub
inc
mov
in
mov
fld
add
ror
push
or
dec
or
test
dec
add
rcl
add
add
adc
dec
pop
push
je
gs
push
dec
arpl
dec
gs
cld
or
cli
push
jg
inc
addr16
cld
push
dec
popa
bound
adc
outs
fistp
pop
push
push
arpl
gs
inc
ins
gs
add
add
jmp
ja
adc
push
jns
and
inc
popa
jo
imul
adc
mov
xchg
shl
mov
shl
out
fcmovne
sbb
adc
adc
pushf
aas
and
and
adc
mov
and
call
dec
dec
inc
inc
push
dec
dec
dec
and
cs
push
pop
(bad)
mov
dec
inc
inc
inc
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
ins
outs
jb
or
ins
pop
lock
outs
outs
ja
gs
or
cmp
pop
cld
sbb
call
popa
outs
popa
jae
outs
pop
rcl
or
data16
test
push
retf
or
mov
xor
or
fs
jb
or
push
rol
adc
xor
inc
repz
xor
jbe
lahf
es
mov
xchg
or
mov
cdq
popa
xor
add
xor
or
dec
push
cwde
loope
mov
ror
push
cmp
xchg
mov
or
pop
mov
xor
add
xchg
sub
fimul
add
xchg
sub
stos
stos
and
push
xchg
sti
fbld
jmp
gs
in
(bad)
fnstcw
imul
jb
sbb
ins
outs
arpl
ins
lahf
std
mov
jae
jb
outs
push
das
push
jne
jb
sbb
outs
push
outs
jb
popa
outs
arpl
outs
jne
je
xor
je
imul
pop
sbb
test
dec
outs
push
sbb
mov
ins
jo
out
push
call
jae
mov
add
push
mov
popa
and
jg
xchg
inc
gs
jne
je
dec
dec
lock
fstp
aaa
push
jae
xor
add
cli
push
xor
outs
dec
push
imul
ror
sub
jae
outs
jae
je
push
fdiv
dec
jne
jo
inc
push
daa
sbb
cmp
bound
jns
js
push
shl
jo
and
or
pop
jo
fs
outs
fs
retf
lods
dec
or
inc
imul
or
inc
mov
or
or
iret
mov
sbb
or
fadd
mov
push
outs
xchg
mov
inc
add
fwait
nop
pop
xchg
not
ins
cmp
adc
imul
push
adc
das
daa
sbb
pop
sbb
adc
aaa
push
retf
shl
and
inc
adc
xor
jbe
inc
repnz
outs
int
or
neg
jbe
ret
dec
mov
jbe
inc
push
sub
jecxz
push
and
jp
sbb
dec
and
cmp
push
inc
cmp
sahf
mov
js
push
imul
in
jbe
repz
shl
cmp
cmps
fisttp
push
jns
sbb
mov
loopne
cmps
leave
mov
fsub
jg
jmp
xchg
mov
dec
inc
lds
inc
gs
mov
sbb
inc
out
sbb
sbb
sbb
(bad)
imul
lods
loope
sub
out
and
sbb
dec
xor
and
push
sub
jo
jae
out
cmp
mov
pop
jno
(bad)
xchg
repnz
loop
loopne
fs
mov
(bad)
sub
jns
pop
std
xor
xchg
jae
push
sub
push
or
outs
data16
sbb
loopne
push
inc
xlat
loopne
xchg
add
xchg
jo
loop
add
out
and
inc
fimul
js
imul
sub
ins
outs
adc
push
adc
xchg
or
cmp
jmp
add
bound
inc
jb
test
push
jge
enter
loopne
rcr
push
mov
ins
jo
fisttp
xor
sub
mov
imul
xlat
cmc
dec
pop
add
imul
adc
retf
inc
outs
mov
pop
pop
jno
imul
or
ficomp
dec
pop
cmps
ins
mov
mov
fwait
mov
sub
pop
(bad)
mov
mov
sub
pusha
popa
xlat
mov
cmps
mov
cld
pop
xchg
inc
lock
cmp
xor
sub
jge
or
push
imul
adc
sub
pop
and
or
push
imul
rol
pusha
int3
ja
aas
dec
and
mul
inc
and
outs
xor
retf
xor
stc
sbb
mov
adc
sbb
and
mov
dec
mov
xor
loop
xchg
or
test
pop
popa
bound
sub
popa
jle
lods
ret
add
aam
mov
fstp
stos
daa
adc
adc
gs
add
fcomp
adc
rol
add
mov
cmp
xchg
outs
ss
in
add
jl
adc
aaa
sbb
stos
dec
adc
test
popf
in
fadd
and
or
(bad)
pop
ret
retf
loope
mov
scas
movs
pusha
neg
mov
cwde
mov
or
mov
cmp
outs
retf
push
adc
pop
enter
sbb
adc
les
lock
push
add
push
mov
push
retf
pop
mov
push
xlat
dec
gs
fild
outs
sbb
pop
jae
push
adc
push
sar
mov
jo
pushf
not
sbb
or
or
and
push
jne
arpl
jo
pop
sub
xchg
je
icebp
jno
lods
or
adc
je
ins
stos
push
int
sub
inc
dec
push
dec
sub
daa
(bad)
rcr
imul
movs
inc
mov
clc
loopne
mov
stos
nop
(bad)
popa
xor
mov
icebp
stc
lea
push
pop
je
test
bound
push
int
jbe
xchg
cmp
repnz
(bad)
push
sbb
add
pop
adc
sbb
jnp
or
xor
je
ss
and
cmps
push
cdq
or
test
inc
addr16
dec
inc
outs
lea
fsub
pop
pop
and
and
inc
pop
fsubr
and
sub
fmul
es
ja
mov
xor
mov
add
pop
sub
das
and
ror
lahf
jne
mov
adc
ret
ja
bound
inc
xchg
adc
xchg
xchg
ds
mov
mov
sbb
pop
sbb
add
mov
inc
dec
ins
test
fadd
push
outs
dec
xlat
pop
in
popa
fistp
(bad)
arpl
dec
inc
push
sbb
inc
ins
jne
mov
ret
dec
jb
hlt
pop
xchg
pop
fwait
add
retf
jo
loopne
add
gs
in
les
ins
dec
cld
not
push
xor
push
imul
loope
and
sub
lock
and
cmp
data16
xor
mov
mov
stos
je
sbb
icebp
test
loopne
jae
mov
and
sbb
sub
jne
arpl
adc
inc
pop
es
pinsrw
shr
outs
adc
scas
push
out
adc
jp
add
movs
mov
ins
pop
(bad)
in
and
mov
(bad)
xor
mov
cmp
(bad)
hlt
and
retf
and
xchg
jne
push
lds
push
push
pop
outs
jno
bound
and
pop
pushf
add
sub
sub
and
fimul
clc
pop
xchg
inc
outs
or
adc
mov
dec
xchg
bound
or
add
cmp
data16
lods
pop
sbb
dec
fcom
xor
dec
jnp
(bad)
inc
mov
(bad)
popa
jo
pop
cmp
and
out
adc
add
lds
in
pushf
cdq
retf
dec
inc
cmp
add
cmps
in
mov
cmp
fbstp
or
in
push
inc
sbb
nop
cmp
enter
inc
pop
in
in
jmp
inc
js
cmc
rol
push
jmp
loop
inc
cld
sbb
mov
and
mov
fs
and
and
pop
int
lea
and
call
xor
adc
sbb
sbb
sub
dec
jae
xchg
adc
mov
sbb
fldenv
(bad)
dec
daa
mov
outs
cmp
shl
outs
jo
add
loopne
inc
xchg
inc
popf
aad
shl
xchg
or
mov
add
rol
ss
adc
packsswb
shl
pop
dec
push
push
outs
es
ret
and
in
pop
into
or
inc
arpl
fdivr
inc
jne
inc
dec
push
dec
inc
push
ror
push
shl
retf
cdq
sub
cmp
xor
adc
ss
push
std
fild
jne
dec
and
dec
inc
push
js
mov
push
mov
loop
call
push
shl
ins
(bad)
sub
dec
data16
mov
mov
push
xchg
bound
sub
popa
arpl
popa
sub
cmps
xchg
adc
daa
mov
and
retf
(bad)
dec
add
int
ret
inc
fisub
sbb
push
xchg
out
sbb
xor
pop
enter
jo
jnp
les
test
repz
aaa
cwde
add
sbb
mov
dec
mov
mov
add
jle
retf
push
push
fsubr
mov
cmp
idiv
sbb
ins
xor
fistp
add
push
lods
hlt
xchg
adc
dec
sub
nop
div
retf
xor
cmp
(bad)
in
sub
adc
imul
ret
in
add
pop
sbb
in
into
in
rcr
jae
adc
mov
push
stos
mov
lea
mov
fsub
jmp
jo
push
inc
lods
adc
arpl
fs
or
xlat
into
loop
pop
inc
gs
mov
mul
inc
xor
add
add
or
movs
sbb
mov
call
xchg
adc
mov
jp
adc
push
and
pop
ja
ins
lea
cmp
test
popa
or
std
dec
mov
cmp
push
(bad)
xor
fiadd
sub
mov
gs
jmp
outs
sub
ins
push
movs
and
je
mov
inc
add
mov
lods
add
and
push
fadd
pop
(bad)
push
push
mov
outs
push
int3
pushf
enter
icebp
cmps
sbb
xchg
and
aaa
sti
adc
adc
lea
sub
shr
jae
xchg
push
inc
pop
xor
push
add
inc
fs
daa
push
call
mov
inc
xor
lods
jnp
rcl
imul
mov
sbb
cmps
inc
mov
push
adc
push
add
cmp
mov
add
sub
mov
retf
dec
sub
ins
add
pop
sbb
dec
mov
cld
or
test
sbb
adc
dec
jae
aam
iret
lock
je
mul
test
ficom
xchg
je
push
je
fcom
jmp
in
push
dec
ret
outs
mov
(bad)
and
inc
jbe
outs
jmp
xor
push
xchg
adc
pop
pusha
rcr
arpl
mov
sbb
add
push
sub
outs
sub
cdq
dec
les
sbb
loope
inc
arpl
dec
xor
int3
push
mov
mov
and
or
sbb
push
push
pop
add
mov
push
add
xchg
fstp
push
mov
adc
pusha
int3
in
dec
xchg
ss
mov
pop
add
add
lods
or
test
sbb
push
shl
daa
ja
mov
das
push
mov
dec
xor
ret
fld
rol
sbb
ins
addr16
mov
mov
imul
xor
add
pop
sbb
sbb
leave
and
xchg
push
loopne
arpl
sbb
xor
sbb
inc
push
inc
push
sar
add
stos
pop
mov
inc
(bad)
imul
pop
arpl
mov
inc
dec
retf
sub
and
out
fs
inc
xor
daa
ror
xchg
and
ins
test
push
imul
ss
gs
sbb
test
adc
push
and
add
je
add
retf
push
push
arpl
push
and
sub
or
out
sbb
add
dec
data16
or
data16
mov
movs
cmp
xchg
lea
sbb
jmp
pop
movs
mov
(bad)
sbb
mov
inc
push
adc
pop
sbb
pop
fs
mov
push
push
jo
gs
data16
sub
ins
pop
dec
loope
dec
jo
call
pop
popa
jmp
ins
and
adc
loope
xor
add
xchg
dec
add
aas
jge
inc
arpl
xchg
lea
bound
sub
fistp
push
xor
mov
sbb
(bad)
mov
test
cdq
or
adc
loop
in
sbb
pop
adc
add
mov
rol
sbb
out
pusha
xor
mov
clc
jbe
dec
je
outs
(bad)
in
xlat
pop
ret
push
into
and
sub
add
push
bound
or
cld
push
add
test
dec
je
jo
push
inc
add
add
xchg
ret
jg
jns
add
push
dec
add
add
xor
and
mov
fild
loopne
fisttp
add
daa
or
push
adc
(bad)
jnp
ror
add
add
cs
add
push
gs
mov
adc
xor
pusha
setbe
fiadd
push
jo
xchg
lds
inc
add
ins
and
sbb
add
ins
outs
enter
ds
or
pop
jl
mov
or
scas
mov
push
loopne
pop
outs
add
mov
div
adc
and
pop
mov
dec
popa
push
in
or
in
jne
ror
dec
or
bound
fsubp
add
add
jo
fadd
xchg
fdivr
lock
inc
add
push
je
lahf
adc
pop
fldenv
(bad)
add
scas
dec
gs
out
inc
jnp
idiv
mov
pop
mov
mov
push
dec
add
ds
and
sbb
mov
outs
push
lahf
mov
cmp
mov
add
push
mov
movs
jbe
dec
add
imul
dec
xchg
add
add
xchg
inc
add
add
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
jae
add
outs
