adc
add
add
add
dec
add
add
add
add
add
add
add
add
push
mov
add
add
add
adc
add
test
add
and
add
add
and
add
add
add
add
add
out
add
add
and
add
add
add
sbb
add
push
add
add
push
or
inc
or
add
pop
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
test
add
lea
add
add
add
add
add
add
add
or
mov
stc
and
(bad)
(bad)
popa
and
add
add
or
add
add
add
add
pop
sub
add
sub
sub
sbb
hlt
sbb
cmp
(bad)
jmp
jbe
add
lea
ror
add
add
add
add
or
add
pop
add
push
sub
and
and
fsubr
add
add
sub
adc
pop
add
and
add
jle
add
add
das
jle
add
add
xor
add
add
adc
inc
adc
add
pop
push
add
std
adc
add
adc
add
add
jp
add
das
sbb
add
add
sub
add
int
add
out
sbb
add
add
pusha
sbb
add
sbb
add
add
adc
add
fisttp
add
fcom
add
adc
add
and
add
and
add
jl
add
or
add
add
or
add
push
add
stos
sldt
call
add
sbb
add
add
cdq
pop
add
cwde
or
add
add
mov
push
add
mov
add
ds
add
sbb
add
and
add
call
adc
add
mov
add
pop
or
add
add
inc
adc
add
xchg
adc
add
sbb
add
or
add
sbb
add
sbb
add
add
or
add
or
add
push
add
inc
push
add
push
pop
add
mov
or
add
sbb
add
sbb
add
push
add
(bad)
adc
add
adc
add
add
add
xchg
or
add
repnz
add
sbb
add
add
add
std
adc
add
adc
add
add
pop
adc
add
adc
add
sbb
add
add
imul
add
sbb
add
add
ss
add
fist
add
rcl
add
adc
add
add
cmp
add
sbb
dec
or
add
adc
add
or
add
pop
add
xchg
sbb
add
and
add
push
add
aam
add
push
adc
add
sbb
add
or
add
adc
add
hlt
sldt
ror
add
loop
add
xchg
push
add
mov
add
or
add
into
adc
add
add
sbb
add
add
or
add
jecxz
add
add
add
add
add
adc
sbb
add
add
sub
add
sub
add
add
pop
push
add
pop
sbb
add
or
add
cmps
sbb
add
add
or
add
add
xchg
and
add
and
add
sbb
add
and
add
sbb
add
push
add
icebp
sbb
add
or
add
adc
add
adc
add
adc
add
push
add
xor
add
jae
add
push
sbb
add
push
add
outs
sbb
add
sbb
add
adc
sbb
add
push
add
int
add
cmp
add
or
add
sbb
add
push
add
test
add
xchg
adc
add
sbb
add
ss
add
adc
add
pop
add
test
add
fst
add
push
sbb
add
fstp
add
pop
adc
add
adc
add
and
add
sbb
add
add
jl
add
sbb
add
cwde
sbb
add
imul
add
add
mov
adc
add
adc
add
and
add
repz
add
enter
xchg
adc
add
add
push
sbb
add
sbb
add
stos
adc
add
sbb
add
adc
add
or
add
and
add
pop
add
fimul
add
test
adc
add
or
add
add
push
pop
add
ficomp
add
xchg
add
add
push
adc
add
push
add
nop
sbb
add
sbb
add
and
add
sbb
add
(bad)
push
add
sub
add
mov
add
arpl
add
xchg
or
add
and
add
sbb
add
or
add
push
add
mov
add
mov
sldt
pop
and
add
and
add
pop
add
xor
pop
add
jns
add
dec
adc
add
adc
add
adc
add
adc
add
add
add
add
outs
add
add
or
das
pop
push
and
adc
cmp
lahf
cli
xchg
and
mov
adc
cmps
add
add
cmps
add
add
add
sbb
add
and
add
xor
add
inc
add
add
add
dec
add
add
add
push
add
add
add
add
add
add
add
jne
add
jl
add
xchg
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
push
add
add
add
add
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
add
xor
add
cmp
add
add
add
add
add
jle
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
ins
add
add
add
jge
add
lea
add
popf
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
ins
add
add
add
lea
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
es
add
inc
add
add
imul
add
nop
add
add
mov
add
add
mov
add
add
fld
add
test
add
sbb
add
and
add
xor
add
cmp
add
dec
push
add
push
push
add
pusha
push
add
jo
add
ja
add
add
add
fwait
push
add
movs
push
add
mov
add
mov
push
add
fild
add
jmp
push
add
or
add
sbb
add
es
add
cmp
add
inc
pop
add
push
pop
add
pop
pop
add
fs
add
ja
add
jle
add
mov
add
sahf
pop
add
movs
pop
add
mov
pop
add
aad
add
call
call
cs
clc
(bad)
call
xor
xchg
add
add
add
jmp
add
loop
xor
ds
and
stos
add
pop
sub
adc
and
and
jl
add
lds
rol
add
sub
fadd
add
sub
movs
add
add
test
pop
ins
sub
adc
pop
pop
xchg
and
sub
add
mov
mov
add
cmp
(bad)
call
dec
cmp
(bad)
jmp
mov
outs
(bad)
(bad)
call
das
pop
gs
and
add
pop
cmp
(bad)
call
inc
cmp
(bad)
call
cmp
(bad)
call
xor
sbb
add
inc
(bad)
(bad)
call
push
call
das
and
and
add
pop
cmp
(bad)
(bad)
call
sub
pop
(bad)
(bad)
jmp
fld
add
cmp
xchg
add
cmp
(bad)
(bad)
jmp
add
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
les
add
cmp
(bad)
(bad)
jmp
xchg
add
add
out
(bad)
call
das
pop
adc
and
add
pop
cmp
(bad)
(bad)
call
das
pop
and
add
(bad)
(bad)
(bad)
call
pusha
cmp
(bad)
(bad)
call
xor
nop
add
add
add
lods
(bad)
(bad)
call
and
cmps
(bad)
(bad)
jmp
jecxz
add
cmp
pop
sbb
add
mov
(bad)
jmp
rol
add
cmp
jmp
scas
add
add
js
(bad)
call
xor
call
mov
gs
(bad)
call
dec
cmp
(bad)
call
xor
sbb
add
dec
(bad)
(bad)
call
xor
pop
xchg
and
cmp
(bad)
(bad)
call
sub
jmp
fiadd
add
cmp
cmp
(bad)
(bad)
call
or
and
(bad)
call
das
pop
pop
xchg
and
cmp
(bad)
(bad)
call
arpl
or
(bad)
call
xor
xor
add
stc
std
(bad)
call
xor
pop
xchg
and
cwde
add
pop
cmp
std
(bad)
call
das
pop
pusha
xchg
and
ja
add
fscale
(bad)
call
jae
sar
(bad)
jmp
mov
enter
adc
pop
dec
xchg
and
cmp
jle
mov
(bad)
call
das
pop
xor
add
mov
das
and
and
add
pop
cmp
jb
xchg
(bad)
call
xor
fs
and
and
add
ja
(bad)
call
xor
mov
and
fwait
add
pop
cmp
jmp
test
add
cmp
(bad)
jmp
into
add
add
push
std
(bad)
jmp
mov
inc
std
(bad)
call
xor
sbb
and
mov
add
ss
(bad)
call
xor
add
add
add
and
(bad)
call
xor
nop
add
add
add
adc
(bad)
call
adc
or
(bad)
call
das
pop
pop
xchg
and
sahf
add
pop
cmp
cld
(bad)
call
xor
movs
add
add
add
out
(bad)
call
jnp
(bad)
(bad)
call
xor
add
pop
cmp
cld
(bad)
call
inc
cmp
cld
(bad)
call
xor
fild
add
xchg
and
sub
add
mov
(bad)
call
das
pop
and
add
cmps
cld
(bad)
call
or
call
push
cmp
adc
add
cmp
cmp
das
pop
pop
xchg
and
lock
pop
cmp
(bad)
call
das
pop
push
xchg
and
jle
add
push
xor
popa
cld
(bad)
jmp
mov
add
cmp
(bad)
call
das
and
and
inc
cld
(bad)
call
cmp
test
add
cmp
cld
(bad)
jmp
xchg
add
add
sub
(bad)
call
xor
xchg
add
add
add
push
cld
(bad)
call
das
pop
setae
rcl
add
pop
cmp
cld
(bad)
call
xor
sbb
and
cmp
sti
(bad)
call
das
pop
cmp
add
out
(bad)
call
js
(bad)
(bad)
call
xor
xchg
add
add
add
int3
sti
(bad)
jmp
stos
add
add
ret
call
das
and
and
inc
add
scas
sti
(bad)
call
xor
cmp
add
lahf
sti
(bad)
call
inc
cmp
xor
dec
xchg
and
add
pop
cmp
xor
sub
add
pop
cmp
(bad)
jmp
mov
outs
sti
(bad)
jmp
mov
add
cmp
call
das
pop
pop
xchg
and
add
pop
cmp
call
xor
xchg
add
add
add
inc
sti
(bad)
jmp
aad
add
cmp
sti
(bad)
call
xor
ins
xchg
and
cmp
sti
(bad)
call
and
jmp
add
add
cmp
sti
(bad)
call
inc
cmp
sti
(bad)
call
xor
jecxz
add
xchg
and
cmp
cli
(bad)
jmp
std
add
add
repnz
(bad)
call
xor
add
mov
cmp
cli
(bad)
call
das
pop
xor
add
iret
cli
(bad)
call
das
pop
sub
add
mov
das
pop
setae
rol
add
scas
cli
(bad)
call
xor
fadd
add
xchg
and
add
pushf
cli
(bad)
jmp
lods
add
add
xchg
cli
(bad)
jmp
rol
add
cmp
das
and
and
cmp
(bad)
jmp
or
add
cmp
(bad)
call
dec
cmp
jmp
retf
add
pop
cli
(bad)
jmp
mov
add
cmp
(bad)
jmp
add
inc
cli
(bad)
jmp
mov
cli
(bad)
jmp
mov
xor
(bad)
jmp
push
add
add
sub
(bad)
jmp
mov
push
cli
(bad)
call
xor
inc
xchg
and
pop
add
pop
cmp
cli
(bad)
call
xor
pop
xchg
and
pusha
add
pop
cmp
stc
(bad)
jmp
jmp
add
cmp
stc
(bad)
call
xor
jmp
stos
add
add
jecxz
(bad)
call
xor
xor
add
sar
(bad)
call
sha256msg1
(bad)
call
das
pop
aas
xchg
and
mov
cmp
call
das
pop
pop
xchg
and
add
pop
cmp
xor
dec
xchg
and
xchg
stc
(bad)
call
aaa
cmp
in
add
cmp
and
and
jno
(bad)
call
inc
cmp
(bad)
jmp
rol
add
cmp
(bad)
call
xor
xor
add
push
stc
(bad)
jmp
in
add
add
inc
stc
(bad)
call
das
pop
ja
and
mov
add
ss
(bad)
call
das
pop
dec
xchg
and
mov
es
(bad)
jmp
mov
sbb
(bad)
call
xor
sbb
add
or
(bad)
call
das
pop
pop
xchg
and
cmp
clc
(bad)
call
xor
mov
add
xchg
and
mov
jmp
int
add
cmp
clc
(bad)
call
xor
add
add
add
int3
clc
(bad)
call
xor
(bad)
call
xor
out
add
xchg
and
mov
pop
cmp
pop
cmp
out
add
cmp
xor
ret
add
add
add
mov
(bad)
call
sbb
xchg
(bad)
call
xor
push
xchg
and
cmp
(bad)
call
das
pop
sub
add
pop
cmp
(bad)
call
xor
pusha
clc
(bad)
call
xor
enter
xchg
and
cmp
(bad)
call
xor
int
add
xchg
and
add
pop
cmp
clc
(bad)
jmp
rol
add
xor
(bad)
call
xor
add
add
add
sbb
dec
cmp
clc
(bad)
call
das
and
and
adc
cmp
lock
call
sbb
sbb
sub
inc
jmp
and
lock
(bad)
call
sub
jns
xor
pop
and
cmp
cmc
(bad)
call
(bad)
rcr
movups
inc
sub
cmp
mov
add
sub
and
leave
mov
and
sbb
cdq
and
into
int3
xor
hlt
(bad)
call
nop
pop
adc
adc
and
pop
and
jmp
(bad)
call
adc
adc
sbb
sbb
add
add
adc
xchg
pop
adc
das
pop
inc
xchg
and
add
pop
adc
cmp
lock
call
sub
nop
push
outs
jno
and
sbb
hlt
(bad)
call
add
or
add
adc
adc
adc
adc
loopne
xchg
dec
pop
and
rcl
popa
cmp
(bad)
call
sub
or
jmp
les
push
hlt
(bad)
call
sub
push
adc
pop
or
pop
adc
adc
mov
retf
and
cmp
hlt
(bad)
call
and
adc
sbb
and
add
add
adc
xchg
pop
adc
and
cmp
sub
mov
inc
aaa
pop
and
and
repz
inc
add
add
add
dec
and
cmp
repz
call
sub
aad
lds
and
mov
fdiv
(bad)
call
sub
push
imul
jnp
mov
(bad)
call
pop
sbb
pop
push
push
adc
push
rcr
push
adc
and
and
cmp
(bad)
call
sub
inc
xchg
into
pop
and
sbb
popa
cmp
add
add
add
nop
pop
adc
adc
and
and
les
add
cs
out
(bad)
jmp
fstp
cmp
inc
add
add
add
movhps
xchg
repz
call
push
push
rcr
jne
add
push
adc
sbb
and
push
repz
call
adc
adc
das
and
pop
and
jmp
call
daa
adc
or
adc
out
(bad)
call
xor
ins
xchg
and
in
and
jp
and
rcr
jmp
es
repnz
call
push
push
rcr
ins
push
adc
pop
or
pop
push
push
and
cmp
(bad)
call
sub
push
es
rcr
pop
pop
(bad)
popa
cmp
repnz
inc
add
add
add
adc
push
rcr
pop
adc
pop
pop
adc
cmp
pop
push
push
adc
clc
mov
and
mov
nop
repnz
call
adc
adc
das
pop
sub
add
cmp
out
(bad)
jmp
mov
add
sub
and
jecxz
mov
fs
pushf
and
adc
add
repnz
call
pop
pop
or
pop
push
push
add
add
add
pop
sub
cs
in
(bad)
call
movhps
pop
or
pop
adc
adc
mov
cmp
sbb
and
(bad)
call
sub
xor
adc
sbb
add
cmp
test
add
sub
and
sub
and
es
icebp
(bad)
call
sub
rcr
sub
sub
ret
adc
dec
test
call
sub
rcr
sub
sub
pop
push
push
add
mov
hlt
jmp
adc
adc
sbb
daa
xchg
adc
je
add
sbb
daa
xchg
pop
xor
pop
ja
cmp
in
(bad)
call
push
sub
and
out
jnp
sub
and
retf
push
and
mov
icebp
(bad)
dec
pop
js
pop
dec
sub
adc
pop
pop
xchg
and
adc
cmp
in
(bad)
jmp
mov
repnz
jbe
mov
mov
lods
and
or
aad
popa
cmp
icebp
(bad)
dec
adc
pop
or
pop
dec
pop
adc
adc
mov
inc
xor
jnp
jae
popa
cmp
(bad)
call
(bad)
rcr
movups
movs
add
cmps
cmp
cmp
icebp
(bad)
call
adc
adc
sbb
sbb
add
sbb
sbb
xor
xchg
add
add
add
cmp
(bad)
call
xor
aad
add
xchg
and
add
jmp
mov
sub
and
call
and
stc
(bad)
inc
pop
popa
cmp
push
pop
pop
adc
adc
jmp
call
fbld
mov
(bad)
call
sub
or
sbb
in
(bad)
call
das
sub
and
dec
cli
pop
and
stos
aaa
aaa
and
push
adc
pop
lock
call
adc
adc
movs
repnz
xchg
pop
and
add
cmp
(bad)
call
adc
adc
xor
and
xor
(bad)
call
sub
(bad)
pop
sbb
sbb
popa
cmp
lock
call
movhps
(bad)
rcr
mov
sbb
(bad)
call
movhps
dec
ror
adc
pop
rcr
sub
sub
lods
add
mov
shl
out
(bad)
call
sub
sub
adc
adc
outs
sbb
push
loopne
sub
jge
cmp
(bad)
call
sub
rcr
sub
sub
add
rcr
pusha
pop
jecxz
cmp
sub
push
adc
pop
rcr
sub
or
mov
dec
adc
pop
adc
pop
adc
adc
pop
inc
push
adc
pop
xor
add
cmp
(bad)
call
and
pop
adc
and
movs
clc
cmp
(bad)
call
sub
xchg
adc
and
es
mov
cmp
(bad)
call
push
pop
or
pop
push
push
adc
xlat
pop
or
and
call
(bad)
call
sub
lods
or
pop
and
inc
inc
dec
popa
cmp
sub
cmp
nop
pop
and
or
popa
cmp
out
(bad)
call
sub
inc
adc
push
and
pop
inc
popa
cmp
out
(bad)
call
and
or
or
dec
adc
cmp
(bad)
call
das
pop
or
add
in
and
push
and
aam
in
es
out
(bad)
inc
add
add
add
push
and
inc
outs
push
adc
fwait
mov
call
popa
cmp
(bad)
rcr
movups
gs
jp
pop
and
cmp
add
add
adc
inc
movs
repz
pop
and
xor
popa
cmp
(bad)
inc
add
add
add
(bad)
scas
mov
imul
dec
or
js
pop
dec
pop
adc
adc
or
pop
xchg
lahf
xchg
dec
out
(bad)
inc
add
add
add
sub
mov
and
popa
popa
cmp
sbb
pop
or
dec
outs
repz
and
push
jae
popa
cmp
sub
sub
or
adc
cmp
add
add
repnz
lahf
call
aaa
jno
(bad)
and
(bad)
call
adc
adc
rol
cld
pop
and
out
lock
cmp
in
(bad)
call
sub
add
sbb
add
pop
jle
add
add
pop
xchg
jle
add
add
jge
pop
pop
xor
pop
and
or
inc
popa
cmp
adc
sbb
pop
xchg
adc
ss
xlat
add
add
cmp
jmp
sub
and
aad
in
and
mov
cmp
call
push
sbb
pop
and
imul
and
mov
and
add
cmps
popa
cmp
(bad)
call
sub
pop
icebp
sub
pop
and
push
mov
in
(bad)
call
adc
adc
or
nop
fstp
or
int3
bound
xor
sbb
adc
sbb
sbb
adc
je
add
sbb
sbb
pop
xor
and
cmp
adc
cmc
and
mov
and
pop
les
and
popa
cmp
in
(bad)
call
adc
pop
adc
adc
inc
je
push
leave
mov
cmp
in
(bad)
inc
add
add
add
sub
xor
push
jnp
and
cmps
jns
popa
cmp
jne
add
add
add
add
sub
adc
and
pop
ds
and
out
cmp
in
(bad)
call
nop
pop
adc
adc
dec
add
pop
and
lea
jl
cmp
(bad)
call
cmova
pop
inc
adc
cmp
out
call
das
and
and
add
pop
sub
and
sub
and
inc
inc
inc
and
stc
push
push
adc
popa
cmp
call
(bad)
rcr
movups
push
scas
call
daa
xchg
call
sub
pop
jo
and
mov
in
(bad)
call
push
and
inc
outs
push
adc
sbb
pop
and
imul
adc
and
cmp
jmp
call
and
adc
adc
leave
jecxz
pop
pop
and
pop
pop
retf
popa
cmp
jmp
jmp
adc
sub
adc
mov
popa
cmp
jmp
call
sbb
adc
sbb
sbb
pop
adc
je
add
sbb
sbb
pop
adc
adc
sbb
add
cmp
sub
es
inc
imul
push
sbb
pop
and
ins
push
adc
es
mov
pop
and
cmp
(bad)
dec
adc
adc
and
jmp
call
add
or
add
adc
test
ins
pop
mov
popa
cmp
jmp
call
sub
pop
adc
and
movs
retf
out
cmp
jmp
call
adc
adc
leave
mov
mov
cmp
(bad)
call
and
push
adc
push
and
add
add
cmp
and
push
push
or
es
adc
pop
xor
cmp
(bad)
call
sub
sbb
pop
clc
pop
and
push
shr
(bad)
call
adc
inc
mov
jmp
mov
hlt
xlat
test
popa
cmp
adc
adc
sub
and
xlat
popa
cmp
sub
push
adc
pop
rcr
sub
sub
adc
xor
ds
and
stos
add
pop
adc
cmp
out
jmp
iret
add
add
repnz
imul
and
ret
and
(bad)
call
sub
outs
aad
imul
popa
cmp
(bad)
call
lea
or
push
add
or
sub
add
or
adc
sbb
sbb
pop
or
pop
dec
sahf
adc
pop
xchg
and
add
pop
adc
cmp
je
add
sbb
sbb
push
rcr
sahf
adc
jne
add
sbb
sbb
pop
adc
pop
dec
sahf
adc
pop
push
xchg
and
adc
cmp
(bad)
dec
pop
sub
pop
or
addr16
mov
int3
jmp
pop
pop
adc
sub
adc
mov
and
mov
cmp
mov
(bad)
dec
adc
pop
adc
loope
mov
adc
dec
pop
adc
adc
ret
add
cmc
pop
and
cmp
pop
cmp
pop
or
icebp
rol
push
test
(bad)
call
adc
das
or
movs
add
add
cs
in
jmp
call
jbe
pop
fisub
sub
cmp
call
daa
pop
pop
adc
and
lock
aad
xor
(bad)
dec
adc
pop
adc
rcr
adc
adc
sbb
add
pop
adc
cmp
adc
and
fiadd
cmp
jmp
inc
adc
adc
inc
iret
gs
and
push
scas
popa
cmp
call
js
pop
dec
adc
sub
fs
fistp
and
cmp
call
adc
sbb
and
add
sbb
and
enter
adc
cmp
sub
cmc
and
sub
and
ins
pop
mov
pop
inc
mov
pop
popa
cmp
and
pop
adc
jmp
jle
(bad)
inc
add
add
add
add
push
cmp
ins
call
adc
or
or
adc
pop
ins
xchg
and
adc
cmp
jecxz
jmp
aas
int
repz
call
sbb
pop
adc
adc
mov
js
pop
and
inc
cmp
popa
cmp
(bad)
call
and
add
or
leave
add
add
cmp
lea
add
sub
and
sub
and
cmp
out
call
adc
sub
jb
cmp
adc
(bad)
call
sbb
add
or
mov
add
adc
cmp
(bad)
jmp
fadd
add
sub
and
sub
and
push
std
and
(bad)
call
adc
adc
or
cmp
cmp
jecxz
call
xor
add
add
add
jmp
lds
push
mov
out
inc
add
add
add
out
mov
out
call
adc
sbb
and
adc
xor
and
add
pop
adc
cmp
loop
call
jbe
cmc
and
push
and
cmp
out
call
lea
or
push
add
or
sub
add
or
pop
sub
pop
or
add
add
add
cmp
sub
and
and
mov
loopne
cmp
out
call
or
or
adc
adc
inc
push
and
sub
in
cmp
out
call
sbb
and
adc
and
repnz
idiv
into
out
call
sub
pop
adc
adc
fdiv
pop
pop
and
adc
out
dec
adc
pop
adc
pop
adc
adc
pop
inc
push
pop
dec
adc
cmp
(bad)
jmp
dec
xor
out
call
adc
sbb
and
adc
pop
pop
xchg
and
adc
cmp
loop
jmp
cdq
add
add
repnz
xchg
fisubr
pop
and
cli
and
(bad)
call
adc
adc
sbb
and
adc
jne
add
sbb
and
pop
aaa
or
jl
cs
loope
call
cs
and
mov
and
adc
push
mov
pop
popa
cmp
out
call
sub
rcr
sub
sub
rcr
sub
push
adc
cmp
sub
push
stos
push
lds
jge
adc
cmp
in
call
sbb
pop
adc
adc
fisttp
bound
jns
cmp
popa
cmp
in
call
movups
dec
pop
adc
adc
xor
xchg
inc
pop
and
sbb
jns
cmp
adc
sbb
daa
xchg
adc
xor
add
adc
cmp
(bad)
call
imul
jp
and
syscall
iret
and
(bad)
call
push
and
fs
push
adc
and
lods
in
and
cmps
and
popa
cmp
(bad)
dec
or
adc
pop
dec
pop
adc
adc
loop
push
dec
pop
and
cmp
(bad)
call
sub
loope
fdivrp
pop
and
hlt
adc
popa
cmp
in
call
and
or
or
add
add
adc
cmp
and
cmc
and
loop
and
inc
and
(bad)
call
sbb
add
adc
xor
cmp
and
add
pop
adc
cmp
xor
movs
add
add
add
jmp
mov
retf
and
(bad)
call
sub
sub
sub
pop
jmp
and
call
adc
sbb
daa
xchg
pop
adc
je
add
sbb
daa
xchg
pop
adc
and
add
add
cmp
sub
iret
mov
test
scas
mov
cmp
and
fs
push
adc
sbb
pop
and
ins
push
adc
push
rcr
ins
push
pop
pop
adc
cmp
(bad)
call
sub
mov
and
cmp
(bad)
call
push
push
rcr
jne
add
push
adc
pop
or
pop
push
push
adc
pop
pusha
xchg
and
adc
cmp
adc
aas
or
pop
and
mov
mov
(bad)
dec
dec
adc
pop
push
rcr
or
add
xchg
and
add
add
cmp
sbb
pop
adc
and
ins
ficomp
and
push
adc
cmp
jecxz
call
sbb
pop
adc
and
xor
cmp
jecxz
call
or
pop
adc
cmp
(bad)
call
sub
and
push
inc
(bad)
and
test
and
(bad)
call
pop
pop
pop
adc
and
jecxz
call
and
pop
adc
and
repnz
idiv
and
adc
pop
dec
adc
and
movs
sbb
cmp
(bad)
call
adc
and
mov
mov
call
push
adc
sbb
pop
xchg
pop
adc
je
add
sbb
pop
xchg
pop
adc
adc
pop
xor
add
cs
fdivrp
call
sub
dec
cmp
sub
popa
cmp
jecxz
call
adc
adc
sbb
and
pop
adc
je
add
sbb
and
pop
adc
pop
sbb
cmp
sub
leave
pop
cmc
mov
mov
popa
cmp
loop
call
adc
adc
sub
and
pop
and
(bad)
inc
popa
cmp
loop
call
adc
adc
daa
clc
sbb
pop
and
loope
push
popa
cmp
loop
call
adc
sbb
sbb
adc
ss
mov
add
adc
cmp
daa
sub
and
pop
mov
and
es
(bad)
loop
call
push
adc
sbb
pop
xchg
adc
je
add
sbb
pop
xchg
pop
xor
and
cs
(bad)
call
das
and
and
fiadd
add
jmp
dec
and
and
jne
adc
scas
cmc
adc
pop
popa
cmp
movhps
cli
(bad)
cmp
loop
call
and
pop
adc
adc
xchg
push
push
fistp
clc
jns
mov
(bad)
call
pop
adc
or
mov
cmp
add
add
sub
and
push
popf
and
cmp
mov
(bad)
call
(bad)
rcr
movups
xchg
push
jmp
cmp
loope
dec
or
or
aad
mov
and
shl
loope
call
movd
push
loopne
movups
pop
adc
add
cmp
(bad)
call
(bad)
rcr
movups
movs
dec
aad
pop
and
add
jl
cmp
(bad)
call
cmova
cs
fdivr
call
sbb
cmc
and
sub
and
adc
sbb
popa
cmp
(bad)
call
push
pop
or
pop
push
push
push
adc
sub
push
inc
enter
fisub
xor
(bad)
call
sub
push
adc
pop
rcr
sub
sub
or
mov
cmp
aam
add
sub
and
out
xchg
dec
and
push
push
inc
and
icebp
sbb
sub
cmp
loopne
call
sub
in
nop
out
and
cmp
loopne
call
and
or
cmp
loopne
call
or
dec
adc
pop
je
add
add
add
or
outs
or
add
pop
cmp
or
lock
add
cmp
fdivr
jmp
out
add
sub
and
lods
mov
and
fisttp
sub
xor
cmp
add
add
and
push
in
cmp
call
sub
rcr
sub
sub
fsub
xchg
pushf
lods
std
popa
cmp
(bad)
call
sub
push
and
push
loopne
call
sbb
pop
adc
push
daa
jno
cmp
(bad)
dec
adc
dec
pop
sbb
pop
adc
adc
into
(bad)
pushf
pop
and
xor
loopne
call
or
or
or
cli
add
add
cmp
xor
mov
add
xchg
and
add
pop
sub
and
mov
fsub
hlt
fcomp
(bad)
inc
add
add
add
add
sub
inc
cmps
test
and
fisttp
(bad)
call
push
adc
adc
xor
cmp
add
pop
adc
cmp
call
das
pop
push
xchg
and
add
pop
sub
and
cli
fbld
in
cli
and
(bad)
call
and
add
adc
add
add
add
cmp
(bad)
call
xor
xchg
add
xchg
and
test
and
and
ret
and
pop
shl
and
(bad)
call
adc
sbb
sbb
adc
pop
pop
xchg
and
cwde
add
pop
adc
cmp
(bad)
call
das
pop
cmp
add
in
and
leave
cmps
shl
pop
cmp
(bad)
call
adc
pop
adc
and
add
sub
mov
and
cmp
fdivrp
call
sbb
add
or
cwde
add
add
cmp
(bad)
call
das
and
and
add
pop
sub
and
fsub
test
fild
mov
(bad)
rcr
movups
xchg
hlt
ficom
fdivrp
call
sub
data16
mov
lods
fdiv
fdivrp
jmp
add
add
xor
add
add
add
add
adc
add
add
add
add
push
sbb
add
add
or
add
push
add
add
add
add
add
aad
add
add
add
jnp
add
mov
add
rol
add
add
add
add
add
add
add
or
add
sub
add
mov
cdq
and
and
push
add
add
add
add
add
add
add
sub
add
sbb
add
xchg
sub
adc
shl
in
pop
or
call
push
pop
ins
xchg
and
add
fcom
add
adc
retf
pop
adc
dec
(bad)
(bad)
(bad)
jle
add
add
add
add
mov
add
and
add
add
add
add
and
add
cmp
(bad)
(bad)
jle
add
add
add
add
rol
add
cmps
add
add
add
add
and
push
(bad)
(bad)
call
or
and
and
cmp
(bad)
(bad)
inc
inc
add
add
add
add
sldt
add
add
add
add
add
adc
sar
(bad)
call
or
cmc
sbb
repnz
add
add
loop
or
ficomp
or
fisub
adc
mov
cmp
(bad)
(bad)
inc
sub
add
push
jle
add
add
mov
lahf
add
add
add
add
jle
add
add
jo
or
add
jo
jle
add
add
xlat
add
add
add
pop
pushf
jle
add
add
adc
add
add
adc
add
push
add
add
sub
xor
add
add
add
add
add
or
add
sub
adc
add
xor
add
add
add
sub
add
push
pop
and
and
add
add
add
add
add
adc
and
add
add
add
add
add
adc
add
push
add
add
add
and
dec
add
lea
ror
add
add
add
add
sub
add
xor
add
add
add
add
add
or
add
sub
adc
add
or
add
adc
sub
add
or
sub
add
add
xor
sbb
add
add
add
jle
add
add
or
add
and
pop
sub
add
sub
jae
add
or
add
adc
add
add
add
add
add
sub
add
adc
pop
add
add
adc
or
inc
add
add
add
add
add
add
add
add
add
or
add
and
imul
and
add
add
add
add
and
stos
add
add
add
or
mov
add
sbb
add
jle
add
add
sbb
add
xchg
jle
add
add
jmp
and
jle
add
add
mov
sbb
add
mov
jle
add
add
xchg
pop
and
popf
sub
adc
add
fadd
add
push
add
adc
add
add
push
jle
add
add
pop
sbb
add
add
add
add
mov
add
add
add
jo
add
jns
add
and
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
adc
pop
xor
and
add
pop
adc
stos
sub
xchg
or
add
add
add
add
add
add
add
add
add
sub
add
sub
movlps
call
push
pop
and
add
in
sbb
jmp
push
pop
sub
add
fstp
or
aad
sub
sbb
add
call
or
and
xchg
(bad)
pop
and
test
in
popa
sub
or
add
call
push
sub
and
hlt
iret
and
push
pop
lods
and
(bad)
call
or
ret
mov
inc
inc
pop
add
add
add
add
add
add
add
add
add
das
add
add
add
add
pop
and
and
adc
call
sub
sbb
repz
adc
out
adc
pop
fs
and
and
add
loop
sub
pop
sub
adc
pop
bound
add
iret
and
cmc
(bad)
(bad)
call
sub
add
adc
add
or
or
add
call
sub
or
add
sbb
cmc
add
add
add
pop
adc
add
call
sub
add
add
adc
add
or
add
push
add
or
adc
add
jbe
add
push
add
adc
add
add
push
jle
add
add
pop
pop
or
inc
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
loopne
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
lahf
add
add
add
add
add
add
sbb
adc
and
and
add
pop
adc
jb
xchg
and
and
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
push
add
add
adc
call
push
and
and
add
pop
sub
adc
pop
sbb
add
fcomp
adc
fcomp
or
aam
adc
rcl
push
pop
xor
add
ret
sbb
rcr
sub
pop
bound
add
lods
adc
and
and
add
pop
sub
and
add
add
add
mov
adc
test
or
add
inc
and
or
add
sub
add
or
sub
add
push
and
add
add
test
add
sub
add
sub
adc
add
inc
add
push
or
add
jae
add
or
movs
add
add
aam
add
sub
add
sub
xchg
(bad)
(bad)
dec
je
add
sbb
xor
fwait
mov
cmp
(bad)
(bad)
inc
pop
and
movs
add
add
or
add
and
xor
inc
inc
or
add
adc
add
pop
add
add
add
das
add
add
add
add
add
inc
add
add
add
adc
pop
outs
xchg
and
adc
call
pop
pop
dec
xchg
and
add
pop
sub
adc
pop
sbb
add
fist
sub
pop
or
fcom
pop
pop
das
xchg
and
add
pop
sub
pop
sub
pop
or
les
adc
jge
sti
cmp
and
sldt
add
add
add
sbb
xor
add
and
test
add
sub
add
sub
aam
xchg
mov
push
(bad)
(bad)
dec
je
add
sbb
jne
pop
pop
pop
or
and
add
arpl
mov
cmp
std
(bad)
dec
and
loop
push
pop
and
jecxz
popa
cmp
std
(bad)
call
add
bound
mov
std
(bad)
inc
and
add
add
nop
add
add
or
add
add
add
rol
add
jae
add
or
xor
add
and
add
sub
add
sub
adc
jmp
inc
add
std
(bad)
dec
je
add
sbb
xchg
or
and
adc
pop
and
gs
(bad)
dec
and
mov
jp
and
cmp
(bad)
inc
and
add
and
adc
add
and
add
add
movs
add
add
or
add
or
mov
pop
stc
pop
and
mov
(bad)
inc
push
sub
add
or
add
adc
add
and
add
add
add
sub
add
push
jae
add
or
and
add
add
sub
add
or
add
adc
add
icebp
add
add
add
adc
add
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
repz
add
add
cmp
add
jno
add
jle
add
add
adc
pop
push
xchg
and
and
add
add
outs
pop
sbb
pop
fistp
inc
popa
and
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
and
add
add
add
add
call
sub
sbb
lock
pop
sub
add
jecxz
push
pop
ds
and
stos
add
pop
sub
adc
and
add
add
add
(bad)
pop
sub
adc
and
and
mov
adc
call
or
and
dec
dec
mov
xor
popa
cmp
(bad)
inc
inc
add
add
add
add
adc
add
adc
add
push
add
add
or
add
call
sub
sbb
out
sbb
jmp
js
sbb
xchg
add
and
add
add
and
add
sub
add
push
sub
add
push
and
in
add
add
or
fs
push
add
sub
lea
adc
add
adc
pop
jg
and
fild
add
add
jmp
mov
(bad)
(bad)
dec
je
add
sbb
imul
add
add
and
cwde
sbb
cmp
and
mov
add
sub
add
push
and
(bad)
(bad)
jmp
pop
add
push
pop
inc
pop
dec
sub
add
push
and
push
jae
cmp
(bad)
jmp
add
add
xor
add
add
add
add
push
sub
add
xor
add
add
add
add
add
add
adc
sub
add
push
sub
adc
add
add
add
add
add
pop
add
add
inc
add
add
sldt
sub
add
xor
add
add
add
add
pop
sub
add
xor
add
add
jle
add
add
add
or
add
xor
add
das
add
add
add
add
add
add
add
xor
add
adc
add
cmp
add
inc
add
add
add
add
or
add
mov
and
ins
add
pop
or
popa
sbb
popa
inc
add
add
add
or
cli
sbb
add
or
pop
pop
or
and
pop
or
or
pop
sub
xor
add
cmp
(bad)
call
imul
pop
adc
adc
inc
add
add
add
add
add
add
add
adc
add
sub
mov
xor
add
add
add
add
adc
add
add
add
add
push
push
adc
add
or
add
inc
add
add
add
das
add
add
add
push
add
add
add
add
add
add
add
add
add
add
or
add
or
add
pop
adc
les
push
popa
inc
add
add
add
adc
scas
sbb
stc
pop
adc
cmps
add
mov
push
add
or
pop
pop
or
outs
push
add
or
cdq
add
add
aaa
add
add
sbb
pop
xor
adc
pop
inc
xchg
and
mov
pop
adc
addr16
(bad)
call
push
and
and
or
jmp
adc
inc
add
add
add
add
add
add
add
add
add
add
add
adc
sub
push
add
adc
add
in
add
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
xchg
add
add
add
add
add
sbb
add
outs
add
add
add
push
add
add
add
add
push
add
push
adc
pop
sub
add
add
sbb
add
push
add
popa
inc
add
add
adc
add
adc
and
add
add
add
add
stc
add
adc
pop
sbb
add
add
inc
mov
add
add
or
sbb
add
inc
pop
pop
or
inc
or
add
outs
add
add
add
sbb
pop
xor
pop
adc
call
sub
pop
sub
pop
pop
xor
add
add
call
xor
add
add
add
add
adc
add
add
push
jle
add
add
pop
sub
adc
add
add
push
add
add
add
add
add
pop
add
sbb
add
or
add
or
add
popa
add
add
add
pop
add
push
es
push
or
push
pop
push
xchg
and
mov
add
popa
pop
push
add
add
adc
add
adc
and
add
add
add
add
stc
adc
pop
adc
add
or
pop
adc
inc
pop
pop
or
cmp
add
or
adc
add
sbb
pop
xor
adc
pop
outs
xchg
and
adc
call
push
pop
dec
xchg
and
add
in
pop
jne
add
add
adc
pop
sbb
add
add
inc
adc
add
mov
add
add
add
jle
add
add
push
or
inc
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
pop
add
push
and
arpl
add
popa
and
add
add
add
add
adc
add
push
add
add
or
lods
or
lds
add
xchg
and
add
out
sbb
jmp
sub
sbb
xchg
sub
and
das
jnp
pop
and
jmp
add
sub
adc
add
enter
or
add
jle
add
add
or
add
add
or
sbb
inc
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
loop
add
retf
add
add
add
add
add
or
add
add
or
cs
and
pop
add
pop
adc
cmp
jmp
mov
cld
xlat
sbb
popa
and
pop
inc
or
add
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
and
and
push
add
pop
adc
cmp
or
pop
xchg
and
add
pop
sub
pop
adc
call
xchg
and
add
pop
sub
sbb
fcom
or
outs
xchg
adc
pop
outs
xchg
pop
sub
adc
pop
daa
xchg
and
sub
adc
pop
arpl
add
lods
pop
or
pop
sub
add
or
mov
(bad)
call
cmps
rol
and
in
jae
popa
cmp
(bad)
(bad)
dec
add
add
push
popa
inc
add
add
or
add
or
add
push
adc
cmp
(bad)
call
or
pop
push
and
inc
add
call
jb
add
inc
or
add
or
add
or
add
add
add
add
add
add
add
add
add
push
add
add
adc
or
sub
(bad)
call
or
cmc
sbb
repnz
pop
and
add
in
or
inc
xchg
and
cmp
fcomp
sub
push
sub
adc
pop
jl
and
sub
sbb
ret
pop
adc
add
mov
movntps
add
add
add
mov
adc
push
add
add
add
pop
jge
sbb
and
push
(bad)
(bad)
call
or
add
jbe
and
cmp
(bad)
call
or
(bad)
in
inc
cmp
(bad)
(bad)
call
pop
and
and
cmp
sub
add
add
add
sbb
adc
cmp
(bad)
inc
mov
add
add
or
or
dec
std
(bad)
inc
mov
add
add
or
pop
pop
or
pop
adc
cmp
std
(bad)
dec
add
pop
or
add
pop
or
or
call
and
test
add
or
adc
(bad)
call
or
xchg
and
enter
adc
cmp
cld
(bad)
inc
sbb
or
or
or
in
cld
(bad)
call
push
sub
sbb
xchg
and
adc
cmp
cld
(bad)
call
add
add
add
pop
adc
add
fld
sbb
push
adc
inc
add
add
add
add
add
add
add
add
add
add
adc
pop
xor
add
or
xchg
cld
(bad)
call
or
xor
add
in
pop
sbb
call
adc
pop
push
xchg
and
mov
xlat
pop
sbb
rcl
sbb
add
es
push
adc
cmp
(bad)
jmp
adc
pop
sbb
add
or
dec
cld
(bad)
call
xor
add
add
or
sbb
add
or
add
add
or
adc
adc
inc
sbb
add
sahf
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
adc
or
and
add
or
js
(bad)
jmp
mov
add
int3
popa
and
pop
inc
or
add
adc
add
add
add
add
add
add
add
inc
add
add
add
add
pop
add
add
or
lea
add
xchg
and
add
pop
adc
cmp
(bad)
(bad)
call
or
push
xchg
and
add
in
pop
sbb
call
add
add
add
fcom
or
setae
inc
rol
add
retf
pop
push
sub
adc
pop
inc
xchg
and
inc
add
pop
sub
or
pop
cmp
add
cmps
pop
push
adc
cmp
(bad)
(bad)
call
adc
pop
and
and
cmp
inc
push
popa
inc
add
add
or
add
pop
movlps
cmp
push
sub
and
(bad)
fstp
sbb
(bad)
call
pop
and
imul
push
imul
(bad)
(bad)
call
add
or
add
adc
add
add
add
add
add
add
add
add
add
push
add
add
or
call
and
test
add
or
cmp
(bad)
call
or
in
add
add
add
jmp
pop
adc
loope
or
cmp
add
aam
sub
pop
adc
int
or
mov
and
push
add
pop
sub
sbb
mov
(bad)
stos
cmps
cmp
call
popa
mov
cmp
(bad)
call
or
adc
cmp
(bad)
call
pop
and
stos
or
pop
and
adc
call
sub
sbb
add
or
mov
and
add
pop
adc
cmp
mov
add
add
sbb
add
push
pop
pop
or
or
enter
xchg
and
and
add
or
cmp
jmp
cld
pop
add
or
sub
inc
add
pop
sbb
pop
xor
pop
or
or
gs
(bad)
call
or
pop
xchg
and
add
in
push
adc
adc
cmp
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
or
call
add
pop
adc
cmp
std
(bad)
call
or
imul
pop
sub
pop
adc
call
adc
pop
push
and
int3
add
pop
sub
adc
and
and
sub
rcr
add
push
adc
and
and
adc
cmp
cld
(bad)
jmp
adc
pop
jge
and
add
add
jle
add
add
xchg
jle
add
add
or
add
pop
popf
pop
adc
cmp
xor
ret
add
add
adc
add
add
or
add
add
or
adc
adc
inc
sbb
add
and
add
jb
add
add
add
xor
add
fld
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
pop
and
add
or
je
(bad)
jmp
imul
sbb
adc
pop
or
inc
or
add
adc
add
pop
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
adc
adc
add
or
sbb
(bad)
call
or
cmp
add
in
adc
pop
xchg
and
add
pop
sub
sbb
fcomp
adc
fcomp
pop
sub
sbb
rcl
sub
pop
push
sub
adc
pop
imul
pop
sub
adc
push
xchg
and
cld
add
pop
sub
and
rol
add
lahf
adc
pop
je
and
adc
cmp
push
je
add
sbb
ss
pop
or
add
pusha
or
and
test
popa
cmp
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
or
stos
add
add
add
or
inc
(bad)
(bad)
call
or
inc
xchg
and
xchg
add
pop
sub
pop
sbb
call
xchg
and
xlat
add
pop
sub
pop
adc
xlat
pop
sub
pop
adc
rcr
sbb
int3
adc
pop
sub
add
mov
xchg
and
sub
add
add
add
mov
add
add
add
xchg
pop
adc
mov
mov
inc
mov
pop
(bad)
(bad)
call
or
sbb
scas
rcr
(bad)
call
or
iret
adc
test
popa
cmp
(bad)
(bad)
dec
add
popa
pop
jo
push
popa
inc
add
add
adc
add
adc
pop
push
and
int3
add
pop
adc
cmp
or
xchg
and
pop
add
pop
sub
and
mov
std
(bad)
call
or
push
je
add
sbb
xor
enter
cmp
std
(bad)
call
or
ficomp
arpl
pop
and
xchg
mov
std
(bad)
call
adc
jmp
(bad)
std
(bad)
(bad)
jle
add
add
pop
adc
and
and
cmp
add
push
and
std
(bad)
call
push
jne
add
sbb
sbb
add
xchg
pop
mulps
mov
jne
add
sbb
push
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
add
or
pop
adc
xchg
and
add
pop
adc
cmp
pop
pop
or
push
or
pop
add
add
or
pop
pop
xor
add
add
add
or
mov
(bad)
call
or
cmc
pop
or
add
jl
(bad)
call
sub
sbb
add
add
add
add
or
popa
cld
(bad)
inc
jne
add
add
sbb
add
dec
cld
(bad)
inc
add
xor
add
add
adc
add
add
sbb
inc
or
add
ins
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
push
and
scas
movs
mov
mov
or
pop
inc
add
add
add
add
adc
add
adc
add
pop
add
add
or
movs
or
aas
xchg
and
add
pop
sub
pop
or
in
sbb
jmp
sbb
fimul
pop
push
and
int3
add
pop
or
jbe
(bad)
jmp
push
and
and
je
pop
popa
sub
push
es
and
push
or
and
mov
adc
add
mov
add
add
add
jle
add
add
pop
or
inc
or
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
sub
add
push
sub
add
add
and
int3
adc
sbb
add
add
add
add
sldt
add
add
add
sub
or
sub
sub
sbb
in
or
jnp
and
add
pop
or
xchg
rcr
push
and
loop
nop
pop
and
sub
add
add
add
or
inc
or
add
dec
add
add
add
add
add
add
add
add
pop
add
push
sub
push
rcl
add
or
pop
inc
add
add
add
add
pop
add
add
add
add
or
mov
sub
pop
sub
sbb
hlt
push
or
mov
push
es
and
jae
push
pop
and
dec
popa
sub
sbb
add
push
add
add
jle
add
add
or
sbb
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
add
add
or
add
add
add
add
add
or
test
push
cmp
lods
and
and
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
cmp
(bad)
call
sub
pop
or
repnz
pop
cs
and
add
pop
sub
sbb
fistp
or
fcomp
or
or
inc
(bad)
(bad)
(bad)
jle
add
add
push
push
or
or
ss
dec
adc
(bad)
sub
dec
popa
sub
and
and
mov
(bad)
(bad)
call
or
sub
outs
lock
popa
cmp
(bad)
(bad)
jle
add
add
xor
add
sbb
or
repnz
(bad)
jmp
rcl
(bad)
(bad)
dec
inc
add
add
add
add
add
add
add
add
add
add
adc
add
add
or
mov
sub
sbb
sub
adc
cmp
add
loop
sub
and
loope
fstp
repnz
(bad)
call
or
add
sub
add
or
add
pop
movlps
adc
inc
adc
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
js
add
out
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
movntps
and
and
inc
add
add
add
add
add
add
add
add
add
or
add
add
(bad)
(bad)
(bad)
call
or
xchg
add
pop
sub
sbb
jmp
add
add
add
fstp
or
aad
or
xchg
xchg
add
pop
sub
push
adc
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
cmp
(bad)
(bad)
call
sub
sbb
repz
add
add
jecxz
or
fistp
sub
push
sub
and
sbb
call
add
sbb
ins
add
add
add
sbb
jmp
add
int
shl
cmp
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
(bad)
call
sub
and
cmp
and
lods
imul
es
(bad)
(bad)
call
add
sbb
in
add
xchg
and
sub
add
or
(bad)
(bad)
(bad)
jmp
push
add
or
push
daa
add
push
jae
add
or
add
or
push
je
add
sbb
push
add
add
add
add
adc
cmp
(bad)
(bad)
ficom
push
jne
add
add
add
sub
add
or
pop
or
inc
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
adc
sub
les
mov
cld
lock
and
inc
or
add
or
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
sbb
adc
js
(bad)
call
or
cmc
sbb
repnz
or
out
sbb
jmp
or
in
fild
add
ficom
or
mov
sub
adc
add
add
rcl
and
and
dec
add
pop
sub
xchg
and
add
pop
adc
cmp
(bad)
(bad)
jmp
and
mov
fstp
arpl
(bad)
call
pop
add
push
and
add
cmp
(bad)
call
or
or
jbe
and
sbb
popa
cmp
(bad)
call
adc
and
clc
cmp
(bad)
(bad)
call
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
scas
stos
add
pop
adc
cmp
push
sub
adc
mov
add
xchg
and
add
in
sub
adc
fwait
add
add
add
rcl
or
pop
xchg
and
enter
sub
adc
cmp
add
mov
test
mov
(bad)
call
adc
adc
and
adc
pop
and
je
fisub
mov
pop
add
push
sub
add
add
add
add
lea
add
mov
add
add
adc
add
add
add
adc
push
add
add
adc
add
add
or
add
add
or
push
adc
adc
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
push
add
add
or
add
add
cmp
(bad)
jmp
inc
sbb
and
popa
and
pop
inc
or
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
cmp
(bad)
(bad)
call
or
jl
and
in
pop
sbb
call
xchg
and
mov
add
fist
or
ds
and
stos
add
pop
sub
pop
sbb
retf
sub
pop
adc
ret
sub
adc
or
in
(bad)
(bad)
inc
jle
add
add
push
jle
add
add
push
xchg
add
popf
pop
push
popa
inc
add
add
adc
add
add
or
test
add
xchg
and
adc
cmp
adc
cmc
adc
pop
xchg
and
ret
pop
sub
and
inc
xor
cmp
(bad)
(bad)
call
or
push
add
imul
lods
outs
popa
cmp
(bad)
(bad)
call
and
and
cmc
and
stc
(bad)
(bad)
call
add
sbb
pop
add
add
add
add
mov
scas
lods
cmp
(bad)
(bad)
call
or
(bad)
mov
pop
and
data16
popa
cmp
(bad)
(bad)
call
or
adc
stos
push
push
repz
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
or
or
lock
(bad)
call
or
cmp
add
in
pop
or
call
adc
sbb
add
xlat
pop
sbb
rcl
or
xor
add
(bad)
adc
and
and
jmp
add
mov
or
mov
pop
sub
and
repz
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
xor
adc
sbb
or
jg
(bad)
inc
mov
add
add
add
or
adc
sbb
or
addr16
(bad)
inc
mov
add
add
add
or
pop
pop
or
inc
push
add
or
std
(bad)
jmp
add
and
add
pop
sbb
pop
jle
add
add
stos
add
add
add
add
stos
add
add
add
add
xor
sbb
or
adc
(bad)
call
or
push
xchg
and
add
pop
sub
pop
or
add
sbb
or
idiv
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
sub
add
xor
add
pop
sbb
or
int3
cld
(bad)
call
or
mov
and
add
pop
sub
sbb
out
or
jecxz
add
xchg
and
dec
add
pop
sub
pop
or
rcr
sbb
into
shl
add
push
sbb
or
xchg
cld
(bad)
jmp
pop
sbb
or
mov
(bad)
inc
add
adc
push
add
add
adc
add
add
or
add
add
or
push
adc
adc
inc
sbb
add
mov
add
les
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
jno
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jle
add
add
pop
adc
pop
pop
xchg
and
lahf
add
pop
adc
cmp
(bad)
jmp
icebp
mov
sub
in
push
or
adc
pop
or
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
stos
add
add
add
or
push
(bad)
(bad)
call
sub
sbb
repz
push
sub
pop
adc
jmp
or
out
sub
pop
sbb
loopne
sub
adc
inc
xchg
and
add
pop
sub
pop
adc
int3
adc
sbb
add
or
loopne
(bad)
call
or
dec
push
inc
lea
mov
popa
(bad)
(bad)
call
or
or
outs
fs
pop
popa
cmp
(bad)
call
and
add
es
adc
xor
cmp
(bad)
call
or
rol
xchg
mov
call
adc
sbb
call
or
push
jne
add
sbb
push
add
pop
adc
adc
std
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
data16
add
add
outs
add
add
add
adc
dec
xchg
and
add
pop
adc
cmp
(bad)
(bad)
call
or
xchg
add
add
add
jmp
adc
loop
or
xchg
add
add
add
rcl
or
xchg
and
sub
add
(bad)
adc
sub
add
mov
add
add
add
test
pop
movntps
pop
adc
cdq
adc
jge
and
mov
xor
jp
cmp
add
inc
pop
push
popa
inc
add
add
or
add
or
or
or
mov
(bad)
call
or
sub
and
or
pop
je
add
sbb
inc
add
add
sar
(bad)
call
cmp
(bad)
(bad)
call
adc
je
add
sbb
cmp
add
cmp
jmp
push
add
or
adc
jne
add
sbb
push
add
add
add
add
cmp
std
(bad)
jmp
push
add
or
adc
jne
add
sbb
jnp
pop
outs
jle
add
add
fadd
add
jle
add
add
fadd
add
xchg
add
dec
pop
pushf
pop
adc
cmp
cld
(bad)
inc
pop
pop
or
lock
add
sub
add
sbb
pop
xor
push
adc
cmp
cld
(bad)
call
or
cmc
adc
je
add
sbb
inc
xchg
adc
xchg
and
add
or
movs
cld
(bad)
call
pop
je
add
sbb
or
pop
aaa
pop
sub
pop
jne
add
add
adc
jne
add
sbb
sbb
add
xchg
adc
je
add
sbb
adc
pop
adc
cmp
(bad)
inc
adc
pop
add
add
adc
add
jle
add
add
or
sbb
add
or
adc
inc
sbb
add
loopne
add
xor
add
jne
add
sbb
add
sbb
add
xchg
add
add
add
add
add
pop
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
and
xlat
add
pop
adc
cmp
(bad)
jmp
aad
jl
and
les
and
pop
inc
or
add
or
add
or
add
adc
add
adc
add
pop
add
add
add
daa
add
add
add
add
add
add
add
sbb
or
xor
(bad)
call
adc
cmc
pop
sbb
icebp
pop
adc
in
sbb
jmp
cmp
add
pop
sub
sbb
ficomp
adc
(bad)
adc
adc
and
data16
pop
sub
pop
or
sub
pop
adc
or
icebp
(bad)
(bad)
(bad)
jle
add
add
push
sbb
add
or
fadd
pop
pop
and
cmp
(bad)
call
adc
aam
or
push
(bad)
(bad)
call
adc
or
xchg
xlat
sbb
pop
and
bound
popa
cmp
(bad)
(bad)
call
add
or
add
adc
add
pop
add
add
add
add
add
add
add
inc
add
add
add
pop
add
add
add
adc
call
cmp
call
or
or
add
in
adc
add
add
fcomp
adc
fcom
or
add
add
enter
pop
sub
adc
add
add
mov
adc
scas
pop
adc
stos
and
or
test
(bad)
call
or
jnp
fxtract
pop
and
cs
popa
cmp
or
loop
loope
cmp
or
push
sbb
pop
and
int
shl
jbe
(bad)
inc
push
popa
inc
add
add
or
add
pop
adc
or
iret
std
(bad)
call
or
add
add
jmp
jno
inc
(bad)
(bad)
call
add
sbb
jle
add
xchg
and
add
jle
add
add
icebp
add
add
add
add
icebp
add
add
add
mov
pop
cs
pushf
pop
cmp
adc
adc
cmp
(bad)
inc
mov
add
add
and
add
push
pop
pop
or
push
pop
add
or
sbb
add
or
jo
add
pop
sbb
pop
xor
pop
or
or
cmp
(bad)
call
sub
adc
jne
add
sbb
daa
add
add
add
adc
cmp
std
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
sbb
add
sbb
add
sub
add
sbb
cld
(bad)
call
pop
sub
adc
xchg
and
mov
add
jmp
or
setae
rol
add
fstp
pop
sub
shl
add
push
sub
or
add
add
or
mov
(bad)
inc
add
adc
pop
add
add
adc
add
jle
add
add
or
add
add
or
adc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
push
add
add
add
imul
add
add
add
add
add
add
sub
and
xchg
shl
or
pop
inc
or
add
adc
add
adc
add
add
add
and
add
sub
add
add
add
adc
pop
pusha
xchg
adc
pop
pusha
xchg
pop
adc
cmp
sub
push
sub
pop
or
sub
adc
pop
sbb
add
ficom
or
in
add
add
add
into
adc
movs
add
add
add
mov
add
add
add
scas
sbb
or
jmp
and
pop
call
call
add
or
add
or
add
or
add
add
add
add
add
add
add
add
adc
or
test
adc
repnz
and
and
jge
add
loop
or
inc
xchg
and
sub
adc
pop
pop
xchg
and
add
jle
add
add
mov
add
jle
add
add
mov
add
xchg
jle
add
add
jbe
pusha
and
popf
pop
sub
xchg
and
cld
add
pop
sub
add
add
add
xchg
or
jg
(bad)
call
cmp
(bad)
jmp
das
jo
(bad)
cmp
add
pop
xor
push
popa
inc
add
add
or
add
sbb
(bad)
(bad)
call
or
arpl
add
in
and
(bad)
out
cmp
(bad)
call
add
sbb
and
add
add
or
or
int3
lock
and
ja
xchg
popa
cmp
(bad)
call
add
or
repz
adc
fld
popa
cmp
or
push
movs
movs
lds
sub
(bad)
call
cmp
adc
or
or
add
or
(bad)
std
(bad)
inc
mov
mov
add
sub
pop
pop
or
or
jp
and
adc
cmp
(bad)
jmp
pop
add
add
pop
pop
or
sub
add
pop
sbb
pop
xor
pop
or
or
dec
std
(bad)
call
or
outs
xchg
and
add
in
push
adc
or
cmp
and
adc
cmp
std
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
or
out
cld
(bad)
call
pop
sub
pop
sbb
icebp
adc
pop
push
xchg
and
add
pop
sub
pop
pop
sub
adc
and
and
add
pop
sub
shl
add
push
adc
pop
cmp
and
adc
cmp
pop
or
cld
(bad)
inc
add
xor
add
add
add
add
adc
add
add
or
add
add
or
adc
or
or
add
add
add
iret
add
add
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
sbb
add
cdq
add
add
add
lods
add
add
add
add
add
add
add
jns
add
jle
add
add
add
xchg
and
jmp
jl
(bad)
jmp
ins
mov
inc
and
push
xchg
jle
and
inc
or
add
adc
add
adc
add
add
add
add
add
add
add
add
add
dec
add
add
or
adc
add
or
xor
sub
push
sub
sbb
lock
adc
in
adc
add
add
add
fcom
or
and
add
pop
sub
adc
pop
inc
xchg
and
xlat
add
pop
sub
pop
adc
mov
xchg
and
add
pop
adc
cmp
(bad)
(bad)
call
adc
mov
stos
adc
fs
(bad)
inc
pop
jle
add
add
push
jle
add
add
push
xchg
add
popf
pop
push
popa
inc
add
add
adc
or
lds
add
xchg
and
add
pop
adc
cmp
or
push
xchg
and
mov
in
and
mov
(bad)
(bad)
call
add
or
add
or
add
or
add
sbb
add
sub
add
sub
add
add
add
add
sbb
or
push
(bad)
(bad)
call
sub
adc
pop
pop
xchg
and
lahf
add
pop
sub
adc
and
and
add
pop
sub
pop
adc
aad
adc
rcr
adc
int
adc
sub
pop
pop
sub
and
sub
fwait
(bad)
(bad)
call
adc
or
cld
ja
leave
pop
and
cmp
or
xor
jle
cmp
(bad)
call
adc
or
shl
sub
es
popa
cmp
(bad)
call
add
sbb
lea
add
xchg
sbb
(bad)
(bad)
call
adc
adc
cmp
mov
add
sbb
mov
add
add
add
add
or
pop
pop
or
dec
add
add
pop
push
or
xchg
add
add
sbb
pop
xor
add
add
add
or
jbe
(bad)
call
or
ja
and
sub
adc
sbb
xor
adc
cmp
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
push
adc
cmp
std
(bad)
call
push
sub
pop
or
icebp
adc
pop
pusha
xchg
and
sub
adc
fadd
add
xchg
and
sub
pop
push
sub
shl
add
es
or
cld
(bad)
jmp
adc
pop
or
add
or
(bad)
(bad)
inc
adc
add
add
add
adc
add
add
or
add
add
or
sbb
or
or
add
add
add
add
add
add
add
fild
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
sub
add
add
add
sub
add
mov
add
add
add
add
push
adc
and
and
push
or
ins
(bad)
(bad)
jmp
add
ret
mov
xlat
or
out
and
pop
inc
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
pop
sbb
or
push
(bad)
(bad)
call
push
sub
pop
sbb
icebp
adc
gs
and
cmp
add
in
sub
adc
int
add
xchg
and
sub
pop
adc
retf
pop
cmp
add
mov
push
sub
xchg
and
enter
sub
adc
and
and
adc
cmp
or
dec
sub
and
(bad)
(bad)
call
push
jne
add
sbb
mov
add
xchg
and
cwde
add
pop
adc
jns
outs
pop
and
sub
adc
(bad)
(bad)
jle
add
add
pop
adc
and
out
adc
and
sbb
pop
popa
cmp
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
imul
add
add
adc
pop
inc
xchg
and
add
pop
adc
cmp
(bad)
(bad)
call
(bad)
cmc
sbb
repnz
pop
and
add
pop
sub
adc
xchg
add
add
add
aad
push
sub
adc
mov
and
ins
add
pop
sub
adc
and
and
fild
add
mov
pop
sub
xchg
and
ret
pop
sub
sub
mov
dec
(bad)
(bad)
call
or
adc
jmp
inc
popa
pop
jae
push
popa
inc
add
add
or
add
pop
adc
or
mov
(bad)
call
push
sub
and
ret
adc
(bad)
call
or
stos
popf
push
pop
and
cmp
(bad)
(bad)
call
or
jns
cdq
outs
pop
and
pop
shl
cmp
std
(bad)
call
push
jne
add
sbb
icebp
add
add
add
add
cdq
cmp
std
(bad)
call
and
and
mov
sub
adc
adc
jne
add
sbb
adc
and
adc
cmp
std
(bad)
inc
mov
add
outs
daa
add
or
adc
jne
add
sbb
dec
add
add
add
add
cmp
cld
(bad)
inc
pop
pop
or
adc
or
iret
cld
(bad)
jmp
aas
add
add
mov
adc
mov
and
add
pop
adc
cmp
adc
sbb
pop
xor
sbb
cld
(bad)
call
or
mov
and
push
add
pop
sub
adc
jne
add
sbb
adc
add
xchg
and
adc
cmp
call
pop
je
add
sbb
xor
je
add
add
add
jle
add
add
xchg
add
jle
add
add
xchg
add
xchg
add
jmp
popf
sub
pop
je
add
sbb
xor
or
dec
xchg
and
add
pop
adc
cmp
cld
(bad)
inc
add
xor
add
add
adc
add
jle
add
add
or
add
add
or
adc
adc
inc
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
mov
add
add
add
add
aam
add
and
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
jge
(bad)
jmp
ds
mov
loop
repz
popa
and
pop
inc
or
add
or
add
or
add
sbb
add
sbb
add
add
add
sub
add
sub
add
xor
add
xor
add
inc
add
add
add
pop
adc
or
cs
(bad)
call
not
or
bound
add
jmp
pop
adc
loope
sub
pop
adc
ficomp
pop
sub
pop
or
rcr
push
sub
adc
pop
cmp
add
rcl
and
and
sbb
add
mov
or
xor
add
movs
pop
adc
cmp
(bad)
(bad)
call
or
pop
mov
mov
call
pop
and
test
cmp
(bad)
(bad)
call
or
add
out
sub
(bad)
call
adc
popf
imul
jno
adc
popa
cmp
(bad)
(bad)
call
add
push
and
adc
(bad)
call
adc
xchg
jb
pop
and
and
jecxz
cmp
(bad)
(bad)
call
pop
and
and
dec
or
(bad)
call
pop
and
xchg
and
inc
popa
cmp
(bad)
(bad)
call
add
add
add
add
add
adc
add
adc
add
and
add
sub
add
add
add
inc
add
add
add
push
add
add
add
pop
push
adc
cmp
(bad)
(bad)
call
neg
or
repnz
sub
adc
pop
and
add
loop
or
push
xchg
and
add
pop
sub
pop
sbb
rcl
or
lea
add
xchg
and
jmp
add
rcr
sub
xchg
and
add
mov
sub
pop
adc
movs
and
push
out
cmp
(bad)
inc
popa
pop
popa
pop
push
popa
inc
add
add
or
add
pop
or
or
mov
(bad)
call
or
sahf
add
add
add
jmp
mov
call
push
jne
add
sbb
xor
(bad)
call
sbb
add
xchg
and
enter
adc
cmp
(bad)
inc
mov
add
outs
sub
add
or
adc
xor
(bad)
inc
pop
pop
or
mov
and
add
or
call
pop
pop
jle
add
add
jge
add
add
jge
jle
add
add
mov
add
xchg
pop
and
popf
xor
adc
pop
inc
xchg
and
inc
add
pop
adc
cmp
cld
(bad)
call
or
xchg
add
add
add
jmp
push
adc
cmp
cld
(bad)
call
repz
adc
mov
jne
add
add
add
add
push
adc
mov
adc
push
add
add
add
add
pop
inc
adc
and
add
add
add
add
jle
xor
sub
add
inc
add
add
sub
add
je
add
add
add
add
xor
add
add
adc
add
add
sbb
push
add
add
sbb
adc
inc
xor
add
mov
push
add
imul
add
add
cli
push
add
dec
add
add
stos
add
add
add
rol
add
add
in
add
adc
add
add
add
push
add
cmp
push
add
js
add
fiadd
add
mov
add
jb
add
pop
add
add
bound
add
sbb
add
out
add
add
add
add
add
add
mov
add
adc
add
cmp
add
ss
add
add
add
add
and
add
dec
push
add
adc
add
adc
add
add
add
es
add
add
add
add
add
jle
add
add
adc
sub
sbb
and
(bad)
jmp
inc
cli
or
cmp
popa
and
pop
inc
and
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pusha
add
add
add
jp
add
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
add
xchg
add
adc
call
mov
sbb
push
(bad)
call
or
cmc
adc
sbb
add
call
xchg
and
mov
add
fistp
adc
xlat
pop
and
rcr
and
int3
adc
cmp
add
mov
adc
xor
add
scas
adc
pop
xchg
and
add
pop
sub
xchg
and
sub
sub
mov
sbb
dec
xchg
and
pop
add
pop
cmp
call
(bad)
(bad)
(bad)
call
sbb
inc
lahf
add
pop
cmp
(bad)
call
sbb
add
add
push
(bad)
(bad)
call
push
cmp
(bad)
call
sbb
fs
and
cmp
(bad)
(bad)
call
sbb
mov
and
add
pop
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
cmp
(bad)
call
cmp
(bad)
(bad)
call
sbb
sbb
and
mov
add
push
(bad)
(bad)
call
sbb
add
add
add
repz
(bad)
call
sbb
nop
add
add
add
loopne
(bad)
call
adc
call
sbb
ret
lahf
add
pop
cmp
(bad)
(bad)
call
sbb
movs
add
add
add
mov
(bad)
call
cmp
sbb
xchg
and
cmp
and
call
fild
add
xchg
and
sub
add
xchg
(bad)
call
sbb
movs
stc
add
pop
cmp
(bad)
call
adc
cmp
cld
(bad)
(bad)
jle
add
add
adc
sbb
shl
mov
pop
sbb
cmp
push
jne
add
add
add
adc
pop
jno
add
add
pop
push
add
inc
add
pop
shl
add
cld
(bad)
jmp
(bad)
call
call
adc
add
sbb
int3
add
add
add
adc
sbb
shl
test
pop
and
cmp
(bad)
call
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
pop
add
add
add
jae
add
add
add
adc
sbb
adc
(bad)
call
daa
sub
adc
dec
icebp
add
pop
sub
adc
xchg
jle
add
fistp
push
sub
pop
adc
rcl
sbb
add
add
ret
sbb
rcr
mov
adc
xchg
add
add
add
test
xchg
and
sub
and
sub
xchg
and
inc
add
jg
(bad)
call
sub
js
(bad)
call
sbb
xchg
add
add
add
gs
(bad)
jmp
xor
mov
(bad)
jmp
inc
add
add
and
add
add
add
adc
and
jae
cmp
cld
(bad)
dec
add
add
pop
sbb
sbb
inc
sti
(bad)
jmp
daa
or
cld
(bad)
call
or
adc
sbb
add
pop
gs
and
cmp
adc
adc
and
and
xchg
mov
(bad)
call
sub
add
and
(bad)
(bad)
call
sbb
sbb
test
and
cmp
sti
(bad)
call
sbb
sahf
das
pop
and
jmp
cmp
adc
adc
and
aas
mov
pop
and
cmp
adc
adc
and
and
pop
enter
cmp
je
add
add
add
add
add
pop
add
sbb
lea
add
and
add
add
adc
add
adc
and
adc
dec
jno
popa
cmp
(bad)
call
pop
push
das
adc
add
add
add
sbb
pop
cli
(bad)
call
sbb
cmp
add
in
and
add
and
push
pusha
and
(bad)
call
add
pop
add
sbb
pop
or
add
adc
cmp
(bad)
jmp
push
loopne
push
cmp
cli
(bad)
call
sbb
out
or
sbb
and
cmp
cli
(bad)
call
sbb
icebp
fld
cmc
pop
and
sub
popa
cmp
cli
(bad)
call
pop
pop
pop
adc
and
jge
enter
jae
add
or
add
aad
sbb
cmp
adc
add
sbb
and
add
adc
mov
frstor
cmp
out
add
add
test
add
sub
add
push
or
add
je
add
add
adc
add
and
add
sub
add
sub
add
adc
sbb
dec
xchg
and
add
pop
adc
cmp
(bad)
jmp
pop
stos
dec
and
dec
cli
(bad)
jmp
fadd
add
and
add
add
xor
push
add
sub
add
or
fwait
retf
rcr
rol
add
add
add
add
push
sub
add
push
and
aad
add
sub
add
sub
sbb
sub
add
pop
adc
cmp
stc
(bad)
call
adc
and
push
pop
cmp
stc
(bad)
call
sbb
mov
push
and
mov
xor
call
push
adc
adc
and
mov
loop
and
cmp
stc
(bad)
call
sbb
xchg
imul
pop
and
movs
popa
cmp
adc
adc
and
ja
addr16
and
cmp
add
pop
push
adc
and
mov
(bad)
call
sbb
mov
or
call
stc
(bad)
call
adc
add
sbb
jmp
adc
and
sar
or
push
stc
(bad)
call
sbb
or
fcomip
pop
and
cmp
(bad)
call
sbb
in
retf
and
mov
cli
popa
cmp
stc
(bad)
call
sbb
enter
pop
and
test
cwde
popa
cmp
stc
(bad)
call
adc
add
and
and
add
pop
cmp
push
add
or
or
sub
sbb
psubb
call
push
je
add
add
add
sbb
add
or
pop
jae
add
or
or
or
pop
adc
inc
adc
add
xchg
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
sub
push
and
xchg
cmp
popa
and
inc
or
add
adc
add
add
add
add
add
dec
add
add
add
push
add
add
add
adc
add
jmp
add
pop
adc
cmp
(bad)
call
sbb
jo
add
pop
sub
adc
rcl
add
pop
sub
adc
aaa
rol
add
rcl
sbb
fadd
add
xchg
and
lea
add
ret
sub
sbb
add
add
stos
pop
or
cmps
sbb
pop
cmp
(bad)
(bad)
call
adc
add
and
add
add
add
adc
pushf
je
push
cmp
(bad)
jmp
add
add
adc
and
sub
(bad)
call
or
add
jne
add
add
or
add
push
adc
jne
add
sbb
add
and
adc
add
and
or
adc
pop
cmp
adc
cmc
and
pop
test
and
push
xor
and
(bad)
call
adc
or
add
or
add
or
add
sldt
add
add
add
add
add
add
xor
add
xor
adc
cmp
(bad)
call
sub
pop
push
sub
pop
or
jmp
dec
pop
add
pop
sub
adc
pop
xchg
and
add
pop
sub
pop
adc
int3
pop
or
enter
rcl
outs
(bad)
(bad)
call
or
add
add
add
adc
jne
add
sbb
adc
and
add
add
add
add
pop
or
std
(bad)
jmp
fld
bound
aaa
(bad)
(bad)
call
adc
pushf
je
push
cmp
(bad)
(bad)
call
adc
add
and
add
add
add
add
inc
adc
add
xchg
add
add
add
adc
add
add
add
pop
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
inc
add
add
adc
adc
add
add
and
mov
and
and
adc
sbb
inc
push
add
add
add
add
add
sub
add
sub
add
add
sbb
mov
add
xchg
and
adc
cmp
(bad)
call
or
cmc
sbb
repnz
xor
add
in
or
loope
sbb
mov
aam
sbb
add
add
add
adc
cmp
(bad)
(bad)
call
push
inc
pop
add
add
add
add
add
sub
add
xor
add
xor
add
aaa
add
add
sbb
test
and
adc
cmp
(bad)
(bad)
call
or
cmc
sbb
repnz
mov
add
add
loop
or
ficomp
or
ficomp
sub
pop
(bad)
shl
mov
adc
sbb
(bad)
call
sbb
clc
loop
in
pop
and
cmp
(bad)
(bad)
call
adc
and
sti
(bad)
(bad)
call
or
add
add
add
add
cmp
add
and
jbe
(bad)
call
or
aad
ds
adc
adc
(bad)
call
mov
add
add
add
add
add
or
push
adc
adc
inc
and
add
add
add
add
add
test
add
pop
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
or
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
jmp
add
adc
pop
pop
adc
cmp
(bad)
jmp
rcl
xchg
cmp
popa
and
pop
inc
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
popa
add
add
add
add
jne
add
js
add
pop
adc
(bad)
(bad)
call
sbb
iret
xchg
add
pop
sub
pop
and
call
pop
adc
loopne
and
fcomp
sub
pop
pop
sub
adc
pop
xchg
and
ret
pop
sub
pop
adc
les
sbb
inc
add
mov
and
mov
sbb
add
add
mov
push
sub
xchg
and
enter
sub
sbb
xchg
add
add
add
ja
(bad)
call
sbb
aad
add
xchg
and
and
pop
(bad)
(bad)
call
adc
add
sbb
pop
add
add
sbb
rcl
(bad)
(bad)
call
adc
adc
and
jne
fistp
js
pop
stc
popa
cmp
(bad)
(bad)
call
add
pop
add
sbb
or
or
add
je
add
add
or
or
add
jne
add
add
add
or
sbb
push
sbb
mov
or
(bad)
(bad)
dec
je
add
add
add
or
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
adc
and
mov
mov
pop
(bad)
(bad)
call
sbb
adc
and
popa
cmp
call
adc
add
and
add
xchg
and
fld
add
sbb
rcl
(bad)
(bad)
call
sbb
and
and
int3
push
cmp
(bad)
(bad)
call
adc
add
and
add
add
add
sbb
sbb
retf
jle
and
pop
xchg
cmp
std
(bad)
call
push
pop
pop
adc
adc
jne
add
sbb
je
add
xchg
and
add
pop
adc
pop
or
std
(bad)
jmp
rcl
std
(bad)
call
sbb
mov
and
test
mov
(bad)
call
or
sbb
push
call
or
fwait
std
(bad)
call
push
adc
sbb
or
and
frndint
(bad)
call
sbb
xor
add
in
and
cmp
and
add
and
(bad)
call
add
add
add
add
mov
add
and
adc
add
adc
sub
cmp
adc
adc
and
or
in
and
cmp
std
(bad)
call
or
add
jne
add
add
add
and
add
add
fwait
add
add
adc
push
je
add
add
mov
fadd
add
sub
add
sub
pusha
add
add
adc
add
sub
add
sub
add
sub
(bad)
call
adc
and
stos
pop
cmp
cld
(bad)
call
sbb
add
add
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
aas
add
add
add
add
push
add
add
add
add
add
sbb
inc
add
pop
adc
cmp
sti
(bad)
call
sub
pop
sbb
repnz
and
out
pop
adc
jmp
jecxz
sub
adc
fst
sbb
loopne
add
pop
sub
adc
jo
add
pop
sub
sbb
mov
adc
cmp
and
xchg
add
pop
sub
xchg
and
add
pop
sub
and
call
adc
add
and
add
xchg
and
add
pop
cmp
cld
(bad)
call
or
sbb
and
and
cmp
(bad)
dec
je
add
add
add
add
je
add
add
add
or
add
adc
adc
fwait
add
add
add
and
push
sti
(bad)
call
add
pop
add
sbb
jne
add
add
add
add
add
or
add
or
adc
imul
cmp
cli
(bad)
call
and
cmc
adc
je
add
sbb
in
add
xchg
and
inc
add
pop
adc
adc
fild
add
and
lods
cli
(bad)
call
or
jmp
add
add
add
sub
add
add
add
add
sbb
add
add
add
mov
add
add
xor
add
add
adc
add
add
or
add
add
or
adc
adc
inc
sbb
add
daa
add
add
add
inc
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
push
pop
or
or
jge
(bad)
jmp
sub
adc
adc
pop
or
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
pop
sbb
or
xor
(bad)
call
or
pop
xchg
and
add
pop
sub
pop
adc
call
sbb
loope
sbb
fstp
or
fstp
sub
sbb
rcr
sbb
iret
adc
cmp
and
xchg
add
pop
sub
adc
movs
add
add
add
mov
adc
cmp
(bad)
(bad)
call
sub
add
adc
jne
add
sbb
aaa
xchg
pop
jl
adc
dec
cmp
call
adc
aas
cmp
(bad)
(bad)
call
or
arpl
(bad)
(bad)
dec
add
popa
pop
sbb
push
popa
inc
add
add
or
add
pop
or
(bad)
(bad)
call
or
pusha
xchg
and
sub
and
pushf
imul
adc
and
and
mov
(bad)
call
or
jmp
jle
and
iret
ins
jmp
jle
add
add
pop
adc
and
pop
xor
pop
and
lds
cmp
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
or
jae
pop
adc
or
repz
(bad)
call
sub
sbb
repz
pop
xor
add
out
(bad)
loop
sub
pop
sbb
fistp
adc
xlat
adc
and
and
fild
add
(bad)
pop
adc
ret
pop
adc
mov
xchg
and
add
pop
sub
and
cmp
cmp
(bad)
(bad)
call
or
add
xor
pusha
dec
popa
cmp
(bad)
(bad)
call
pop
jne
add
sbb
xor
add
xchg
and
xchg
add
pop
cmp
adc
jne
add
sbb
loopne
add
xchg
and
add
add
push
std
(bad)
inc
mov
add
add
outs
xor
add
or
or
add
xor
(bad)
inc
pop
pop
or
adc
cmp
add
add
or
add
or
add
or
push
pop
pop
xor
pop
or
or
add
(bad)
call
adc
cmc
adc
jne
add
sbb
or
add
xchg
and
add
add
add
jecxz
(bad)
call
pop
jne
add
sbb
fild
add
xchg
and
pusha
add
jle
add
add
add
add
add
add
jle
add
add
in
add
add
popf
pop
sub
or
mov
add
xchg
and
add
pop
adc
cmp
sub
pop
je
add
sbb
push
xchg
and
adc
xchg
and
add
or
push
(bad)
inc
adc
pop
add
add
add
add
adc
add
add
or
add
add
or
pop
adc
adc
inc
sbb
add
add
add
cmc
add
add
add
add
add
add
add
and
add
hlt
add
add
add
add
add
inc
add
add
add
add
add
add
add
loop
add
mov
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
xchg
and
add
pop
adc
cmp
(bad)
jmp
popw
push
pop
and
and
pop
inc
or
add
adc
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
arpl
add
add
add
or
cmp
add
or
or
(bad)
cmc
adc
and
and
add
pop
sub
pop
adc
loope
or
add
add
add
rcl
or
sub
add
les
sub
pop
or
mov
xchg
and
mov
mov
or
lods
pop
sbb
test
sbb
movs
adc
sbb
add
cwde
pop
adc
or
mov
push
and
jae
adc
and
cmp
(bad)
(bad)
dec
inc
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
mov
add
pop
sbb
or
push
(bad)
(bad)
call
or
cmc
pop
sub
adc
pop
pop
xchg
and
add
pop
sub
adc
pop
bound
add
fcomp
sbb
aam
or
jp
and
scas
add
pop
sub
push
sub
pop
adc
rcr
sub
and
add
pop
sub
add
add
add
add
add
iret
add
add
add
add
iret
add
add
add
dec
xchg
pusha
pop
push
pop
popf
pop
cmp
(bad)
call
(bad)
(bad)
(bad)
jmp
xor
push
cmp
(bad)
call
add
add
add
and
add
add
add
and
inc
(bad)
(bad)
inc
pop
push
popa
inc
add
add
or
add
sbb
or
mov
(bad)
call
or
push
xchg
and
sub
and
mov
sub
adc
(bad)
call
push
and
xchg
pop
and
fldcw
(bad)
call
add
add
add
pop
adc
add
adc
and
cmps
add
pop
and
cmp
std
(bad)
call
or
enter
and
mov
(bad)
std
(bad)
call
push
and
jno
icebp
pop
and
mov
or
cmp
sub
add
es
add
dec
cmp
or
mov
xchg
add
xchg
std
(bad)
call
add
sbb
xchg
cmp
(bad)
(bad)
call
pop
or
cld
(bad)
call
add
sbb
mov
pop
adc
sbb
or
(bad)
inc
mov
add
add
sub
pop
or
xchg
and
add
pop
adc
cmp
pop
pop
or
or
or
xchg
cld
(bad)
inc
pop
sub
pop
sbb
or
jg
(bad)
call
sub
adc
sbb
and
add
xchg
sbb
sbb
or
fs
(bad)
call
sub
adc
add
add
and
add
add
add
sbb
or
inc
cld
(bad)
inc
sub
or
cmp
(bad)
inc
add
xor
add
add
adc
add
add
or
add
add
or
push
adc
adc
inc
sbb
add
test
add
add
add
add
add
add
add
enter
xor
add
push
add
add
add
inc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
sbb
or
jge
(bad)
jmp
mov
clc
inc
and
js
ins
popa
and
pop
inc
or
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
sbb
or
das
(bad)
(bad)
call
or
cmp
add
in
adc
and
and
sbb
add
fcom
or
xor
add
iret
sbb
int3
pop
push
sub
pop
adc
les
or
rcr
mov
xchg
and
sub
xchg
and
add
pop
sub
adc
and
and
sub
mov
add
add
add
pop
xor
add
and
sub
(bad)
call
or
repnz
pop
and
mov
(bad)
(bad)
call
push
and
ja
adc
jne
jecxz
popa
cmp
(bad)
(bad)
call
push
and
pusha
push
pop
pop
and
sar
popa
cmp
(bad)
(bad)
dec
inc
or
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
arpl
add
data16
add
or
jp
and
add
pop
adc
cmp
(bad)
(bad)
call
adc
cmc
pop
adc
icebp
pop
or
in
pop
or
jmp
add
add
add
fst
or
pop
xchg
and
enter
sub
pop
or
enter
inc
xchg
and
inc
add
pop
sub
add
add
add
stos
sbb
movs
pop
or
mov
inc
cmp
(bad)
jle
add
add
add
ret
dec
adc
and
jle
popa
cmp
(bad)
(bad)
call
or
mov
cmp
cmp
add
and
popa
inc
add
add
or
add
pop
adc
or
jae
(bad)
call
or
cdq
add
add
add
jmp
dec
cmp
std
(bad)
call
sub
add
es
sbb
inc
cmp
std
(bad)
call
or
lods
jo
push
cmp
std
(bad)
call
cmp
or
or
add
add
add
or
sbb
movs
add
add
int3
add
add
pop
add
push
or
add
sbb
rol
add
xchg
and
cmps
add
pop
or
add
add
add
or
in
(bad)
inc
pop
pop
or
and
pop
sub
sbb
or
iret
cld
(bad)
call
or
add
add
add
jmp
add
sbb
jge
or
add
add
add
or
lahf
cld
(bad)
call
sub
push
or
cmp
je
add
add
add
sub
or
cmp
(bad)
call
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
mov
add
jge
add
or
add
lods
add
add
add
sbb
add
lods
add
add
add
add
add
add
add
dec
add
add
sub
add
sbb
add
mov
pop
ds
and
stos
add
pop
adc
lods
add
popa
pop
bound
popa
inc
add
add
push
add
add
add
push
add
add
mov
push
pop
cs
and
add
pop
sub
adc
adc
add
add
add
push
(bad)
inc
mov
add
outs
xor
add
or
push
pop
pop
xchg
and
add
pop
adc
dec
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
cmp
(bad)
dec
sbb
adc
push
pop
sub
and
add
and
(bad)
call
or
cmc
pop
jne
add
add
adc
and
and
adc
add
(bad)
inc
adc
add
fld
add
sbb
add
jle
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
sub
adc
pop
inc
xchg
and
add
pop
adc
sbb
add
popa
pop
bound
popa
inc
add
add
sldt
add
pop
pop
sub
add
add
stc
adc
sbb
add
add
add
outs
xor
add
or
pop
pop
push
and
inc
add
add
inc
pop
pop
or
push
add
add
cmp
add
or
add
sbb
pop
xor
sbb
add
call
sub
pop
je
add
add
sbb
add
inc
add
adc
add
in
add
add
add
adc
add
add
push
jle
add
add
pop
sub
adc
add
add
add
add
or
add
or
add
pop
add
add
add
dec
add
add
add
add
add
add
add
push
sbb
add
adc
pop
adc
add
add
popa
pop
xor
popa
inc
add
add
add
adc
and
and
into
add
pop
sub
adc
sbb
add
add
add
outs
xor
add
or
adc
inc
pop
pop
or
cli
add
add
cmps
add
add
add
sbb
pop
xor
push
adc
call
push
and
add
add
add
jmp
add
sub
pop
pop
pop
xchg
and
enter
adc
inc
add
adc
add
rol
add
sbb
add
jle
add
add
add
sbb
add
add
or
add
push
add
add
add
push
add
add
add
add
cmp
add
push
add
add
add
add
add
push
or
or
popa
pop
jno
push
popa
inc
add
add
add
add
sbb
cli
adc
xchg
and
or
add
mov
add
sub
add
push
pop
pop
or
pop
pop
or
or
pop
sub
popf
add
add
add
cmp
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
das
add
push
sub
jae
(bad)
inc
add
adc
add
add
add
adc
add
add
adc
push
add
add
adc
adc
add
add
add
add
add
call
add
add
(bad)
add
add
add
add
add
add
fiadd
add
addr16
add
add
add
add
add
add
mov
add
fwait
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
lods
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
nop
(bad)
(bad)
jmp
adc
cdq
int
add
adc
pop
or
inc
or
add
or
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
dec
add
add
or
adc
out
(bad)
(bad)
call
and
cmc
pop
daa
sub
adc
xor
add
in
adc
pop
imul
pop
sub
adc
(bad)
push
add
pop
sub
pop
and
ret
mov
push
sub
adc
pop
add
xchg
and
add
pop
sub
nop
(bad)
(bad)
(bad)
jle
add
add
adc
and
pop
mov
ja
pop
popa
cmp
(bad)
(bad)
call
adc
and
sub
cmp
(bad)
(bad)
call
adc
call
push
stos
jb
cmp
(bad)
(bad)
call
push
inc
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
arpl
add
add
add
add
add
pop
or
adc
(bad)
std
(bad)
call
(bad)
cmc
adc
fs
and
and
add
call
pop
and
loopne
adc
bound
add
rcr
daa
sub
pop
adc
retf
pop
pop
sub
adc
xchg
arpl
add
mov
add
add
add
stos
pop
sbb
mov
pop
sbb
fwait
adc
imul
adc
int3
sahf
add
pop
cmp
(bad)
call
adc
inc
add
outs
(bad)
(bad)
call
cmp
(bad)
jmp
pop
lahf
out
cmp
adc
add
or
add
pop
call
adc
dec
std
(bad)
call
push
sub
and
push
and
rcl
and
(bad)
dec
je
add
sbb
sbb
pop
popa
or
or
std
(bad)
call
adc
movs
jne
pop
pop
and
mov
(bad)
(bad)
jle
add
add
adc
adc
push
stos
ficomp
adc
inc
popa
cmp
xor
add
sbb
push
and
mov
adc
adc
and
fild
popf
popa
popa
cmp
and
add
or
movs
fsub
pushf
cmp
(bad)
call
pcmpeqw
add
sbb
mov
add
xchg
and
cmp
(bad)
(bad)
dec
je
add
sbb
add
add
or
add
jle
add
add
add
add
push
adc
or
or
adc
add
add
add
adc
popa
cld
(bad)
call
or
adc
push
cld
(bad)
push
add
or
add
or
add
sbb
or
adc
add
sbb
or
pop
xchg
adc
adc
mov
and
adc
cmp
(bad)
call
pcmpeqb
add
sbb
inc
xchg
push
pop
adc
adc
sbb
add
adc
cld
sti
(bad)
call
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
arpl
pop
pop
adc
cmp
sti
(bad)
call
or
push
sbb
adc
iret
sti
(bad)
call
push
pop
and
or
adc
adc
mov
adc
xor
add
in
sbb
push
sbb
adc
cmps
sti
(bad)
call
push
sub
adc
pop
punpckldq
or
add
adc
xchg
adc
pop
sub
adc
cmp
call
push
adc
sbb
adc
je
(bad)
call
or
add
sbb
adc
adc
je
add
sbb
push
add
add
add
push
adc
bound
add
adc
aas
sti
(bad)
call
add
cmp
add
je
add
add
add
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
je
add
sbb
or
or
pop
adc
or
popa
shl
sahf
add
add
enter
sub
add
sub
adc
scas
add
add
add
adc
out
(bad)
call
or
push
sbb
adc
(bad)
(bad)
call
or
pop
adc
adc
jne
add
sbb
es
adc
adc
aad
add
xchg
and
adc
cmp
or
pop
xor
pop
sbb
adc
movs
cli
(bad)
call
neg
push
sbb
adc
xchg
cli
(bad)
call
pcmpeqw
add
sbb
xor
sub
adc
je
add
add
add
add
pop
add
add
sbb
add
or
add
or
add
pop
or
add
sbb
add
add
xchg
and
adc
inc
cli
(bad)
call
or
push
adc
push
mov
adc
sub
(bad)
dec
jne
add
sbb
add
add
add
add
xor
add
add
add
add
adc
add
add
or
add
add
or
sbb
or
or
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
mov
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
or
jno
(bad)
jmp
fst
les
mov
outs
enter
or
or
or
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
or
aas
xchg
and
add
or
and
(bad)
call
sbb
cmc
push
sub
adc
pop
gs
and
sbb
in
or
push
and
int3
add
pop
sub
pop
or
sub
pop
sub
adc
ins
xchg
and
add
rcr
sub
sbb
or
xlat
(bad)
(bad)
call
or
loop
movs
mov
and
in
in
cmp
(bad)
inc
add
push
pop
push
popa
inc
add
add
adc
add
adc
pop
sub
add
pop
adc
cmp
or
inc
xchg
and
inc
add
pop
sub
and
push
(bad)
(bad)
call
add
or
add
or
add
adc
add
add
add
pop
add
add
add
add
add
add
add
add
adc
cmp
(bad)
call
or
or
add
pop
sub
sbb
jmp
sbb
loop
push
sub
sbb
fistp
sub
pop
or
pop
gs
and
sbb
(bad)
and
(bad)
(bad)
call
or
jg
sbb
and
fdiv
popa
cmp
and
fwait
adc
(bad)
call
adc
outs
xchg
xchg
mov
cmp
call
and
das
retf
cli
pop
and
cmp
(bad)
call
add
or
mov
and
cmp
(bad)
call
sub
adc
sbb
cli
add
add
add
add
or
or
mov
test
add
add
adc
add
push
pop
pop
or
xor
and
add
or
add
add
sbb
pop
xor
sbb
std
(bad)
call
or
sbb
add
in
adc
sbb
xchg
adc
or
or
dec
std
(bad)
call
adc
adc
inc
add
add
add
add
add
add
add
or
call
add
pop
adc
cmp
std
(bad)
call
adc
cmc
pop
or
icebp
pop
or
in
pop
(bad)
jmp
shl
add
push
es
or
or
hlt
cld
(bad)
jmp
pop
or
cld
(bad)
call
xor
add
add
adc
add
add
or
add
add
or
movlps
adc
inc
sbb
add
fadd
add
dec
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
xchg
add
add
add
add
add
adc
add
sbb
add
add
add
adc
add
lds
add
lock
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
outs
xchg
and
adc
cmp
(bad)
jmp
sbb
adc
push
pop
or
or
add
or
add
push
add
add
add
add
add
sub
add
das
add
add
add
dec
add
add
add
push
add
add
add
pop
adc
cmp
or
sbb
add
in
push
sub
pop
sub
adc
and
and
add
pop
sub
sbb
rcl
or
sbb
add
(bad)
adc
pop
pop
xchg
and
add
pop
sub
sbb
sub
or
pop
xchg
and
add
pop
adc
cmp
(bad)
(bad)
call
push
and
nop
pop
pop
and
cmp
popa
cmp
(bad)
call
xor
add
adc
add
add
pop
inc
xchg
or
and
sub
(bad)
dec
inc
or
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
jne
add
sbb
or
popa
(bad)
(bad)
call
or
xor
add
in
adc
pop
pop
xchg
and
add
fist
or
pusha
xchg
and
sub
pop
adc
into
pop
or
pop
dec
xchg
and
pop
add
pop
sub
or
xor
add
lods
adc
and
and
popf
pop
adc
cdq
adc
pop
fs
and
and
add
mov
or
mov
and
cmp
(bad)
jmp
add
(bad)
(bad)
call
push
and
cmp
pop
and
dec
sahf
in
popa
cmp
(bad)
call
or
or
push
cmp
(bad)
(bad)
jle
add
add
add
sub
cmp
outs
mov
sub
(bad)
inc
add
pop
aaa
pop
push
popa
inc
add
add
or
add
sbb
or
cmp
call
sub
and
add
jno
add
(bad)
call
push
and
xchg
pop
and
rcl
cmp
std
(bad)
call
add
sbb
xor
add
and
shl
aam
(bad)
call
sub
adc
adc
sbb
push
xchg
and
mov
sbb
std
(bad)
inc
mov
add
and
add
add
rol
add
sub
add
sub
pop
or
xchg
and
mov
add
or
(bad)
cld
(bad)
inc
pop
pop
or
pop
sub
adc
and
and
les
add
or
fdivr
(bad)
call
or
nop
add
add
add
jmp
add
sbb
xor
add
xchg
and
add
pop
or
mov
(bad)
call
add
add
add
and
add
add
or
xchg
and
lahf
add
pop
adc
cmp
pop
add
add
add
add
pop
or
add
add
add
or
push
add
xor
test
add
sbb
sbb
add
or
push
add
add
or
adc
inc
sbb
add
movs
add
add
add
add
add
add
add
jne
add
jecxz
add
xchg
add
test
add
adc
add
xlat
add
add
add
add
add
add
add
mov
add
or
add
test
add
cmp
add
repz
add
add
add
add
rol
add
add
add
or
add
add
cmp
(bad)
jmp
loope
fbstp
lock
adc
adc
push
pop
inc
or
add
or
add
adc
add
add
add
add
add
sub
add
sub
add
sbb
(bad)
(bad)
call
or
dec
xchg
and
sub
pop
or
call
sbb
loope
sbb
fstp
sbb
fstp
or
aad
adc
rcl
or
dec
xchg
and
add
pop
adc
cmp
(bad)
(bad)
(bad)
jle
add
add
push
adc
and
and
cmp
call
and
and
dec
adc
add
popa
pop
pop
pop
push
popa
inc
add
add
adc
or
mov
add
xchg
and
add
pop
adc
cmp
or
xchg
add
add
add
jmp
add
push
(bad)
(bad)
call
add
or
add
adc
add
pop
add
add
add
xor
add
inc
add
add
add
push
add
add
add
add
add
add
adc
inc
rol
add
or
push
(bad)
(bad)
call
or
sbb
and
mov
add
in
adc
inc
inc
add
fistp
adc
and
and
add
pop
sub
push
sub
adc
add
add
mov
xchg
and
add
pop
sub
adc
dec
xchg
and
cmp
add
call
sub
lea
in
hlt
cmp
addr16
(bad)
call
adc
out
scas
adc
cmp
(bad)
call
or
add
sbb
jge
adc
out
scas
adc
cmp
(bad)
call
or
fcomp
adc
or
or
stos
std
(bad)
inc
and
add
add
sub
add
push
pop
pop
or
add
add
or
fwait
add
add
pop
adc
or
cmp
sldt
pop
or
pop
xor
adc
cmp
add
pop
adc
cmp
(bad)
call
or
xchg
add
add
add
jmp
add
sbb
xor
add
xchg
adc
je
add
sbb
xor
add
xchg
pop
adc
or
or
sub
sub
adc
sbb
jge
adc
or
ins
xchg
and
ins
add
pop
adc
cmp
adc
adc
inc
add
add
add
add
adc
add
and
add
and
add
sbb
or
in
(bad)
call
push
sub
pop
push
sub
adc
jecxz
add
xchg
and
dec
add
pop
sub
pop
push
sub
adc
add
fisttp
int
xor
add
adc
pop
lahf
add
pop
adc
cmp
adc
rcl
add
pop
adc
cmp
xor
add
add
adc
add
add
or
add
add
or
adc
adc
inc
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
jle
add
add
add
or
pop
xchg
and
add
pop
adc
cmp
(bad)
jmp
jno
shl
and
cmp
mov
adc
push
pop
inc
or
add
or
add
or
add
sldt
add
add
and
add
sub
add
add
add
add
adc
cmp
(bad)
(bad)
call
adc
cmc
push
sub
adc
pop
xor
add
in
adc
loope
or
aas
xchg
and
cwde
add
pop
sub
pop
pop
sub
adc
pop
xchg
and
enter
sub
adc
pop
dec
xchg
and
sub
cmp
(bad)
(bad)
(bad)
jle
add
add
add
and
loopne
sub
xchg
cmps
fucomi
popa
cmp
(bad)
call
or
aad
push
(bad)
(bad)
call
or
inc
mov
inc
(bad)
(bad)
dec
inc
or
add
or
add
sbb
add
sbb
add
and
add
sub
add
add
add
pop
add
add
add
bound
add
pop
push
adc
cmp
or
mov
add
xchg
and
jmp
push
sub
adc
pop
push
xchg
adc
pop
push
xchg
pop
sub
adc
arpl
add
enter
mov
lock
add
pop
sub
add
add
add
test
or
movs
pop
or
mov
add
add
add
nop
and
pushf
(bad)
(bad)
call
or
jle
out
outs
pop
and
mov
mov
mov
(bad)
inc
popa
pop
dec
pop
push
popa
inc
add
add
adc
add
adc
pop
sbb
add
or
fscale
(bad)
call
or
pop
xchg
and
lahf
add
pop
sub
and
dec
(bad)
(bad)
call
add
add
add
and
add
add
add
fdivr
(bad)
call
add
sbb
sti
add
add
adc
and
and
mov
or
test
(bad)
inc
mov
add
and
add
add
ins
add
add
sbb
add
push
pop
pop
or
and
adc
cmp
(bad)
inc
pop
pop
or
add
add
add
pop
dec
xchg
and
add
pop
or
add
add
add
or
xor
(bad)
inc
sbb
or
sbb
or
es
(bad)
call
or
out
add
xchg
and
add
pop
sub
pop
or
or
(bad)
call
add
add
add
and
and
cli
add
pop
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
or
or
iret
cld
(bad)
call
or
ret
add
add
add
jmp
adc
pop
push
xchg
and
add
pop
sub
adc
sub
add
pop
sub
pop
or
(bad)
shl
add
sub
or
enter
xchg
and
adc
cmp
xor
add
add
adc
add
add
or
add
add
or
sbb
or
or
add
add
add
rol
add
js
add
cld
add
add
add
add
add
add
add
and
add
sbb
add
or
add
retf
add
add
add
add
add
add
add
add
add
test
add
mov
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
pop
add
add
add
add
push
adc
pop
pop
xchg
and
ret
pop
adc
cmp
jmp
gs
stos
and
call
or
inc
or
add
or
add
adc
add
add
add
sub
add
xor
add
xor
add
inc
add
add
add
add
add
add
pop
or
or
sbb
or
xchg
and
sub
pop
adc
jmp
or
cwde
add
add
add
(bad)
pop
adc
sub
adc
pop
xchg
and
enter
sub
sbb
mov
add
add
add
scas
adc
and
add
add
add
sahf
pop
or
call
or
mov
(bad)
call
or
mov
mov
aaa
xor
(bad)
inc
add
das
pop
push
popa
inc
add
add
adc
add
adc
pop
xor
add
or
jl
(bad)
call
mul
(bad)
shl
test
call
xor
and
(bad)
xchg
cmp
(bad)
(bad)
call
push
je
add
sbb
mov
add
xchg
and
cwde
add
pop
adc
shr
adc
popa
cmp
(bad)
(bad)
call
or
or
add
sar
sar
(bad)
jle
add
add
pop
adc
and
mov
add
outs
popa
cmp
adc
les
cdq
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
cmp
add
dec
add
add
add
add
adc
or
add
or
mov
(bad)
call
adc
cmc
pop
push
sub
pop
adc
in
sbb
jmp
jecxz
push
sub
adc
xchg
add
add
add
iret
adc
xchg
and
mov
add
ret
pop
adc
mov
adc
pop
ds
and
stos
add
pop
sub
xchg
sti
std
(bad)
call
or
sbb
rol
cmp
std
(bad)
call
or
rol
cmp
lock
iret
aaa
popa
cmp
std
(bad)
call
pop
je
add
sbb
xor
(bad)
call
pop
or
std
(bad)
call
or
add
and
add
pop
adc
cmp
jmp
add
and
inc
add
push
or
push
jne
add
sbb
push
add
xchg
and
scas
add
pop
adc
xchg
and
add
pop
adc
cmp
cld
(bad)
inc
pop
pop
or
mov
add
or
and
adc
cmp
or
add
cmp
or
or
pop
sub
xchg
and
fild
add
or
cwde
cld
(bad)
call
sub
sbb
add
cmp
or
icebp
pop
jne
add
add
add
sub
or
add
xchg
and
add
or
arpl
(bad)
inc
adc
add
icebp
add
add
add
adc
add
add
or
add
add
or
adc
adc
inc
sbb
add
or
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
cmp
add
jne
add
movs
add
add
add
aad
add
rol
add
add
add
add
inc
add
add
add
add
push
adc
and
and
adc
cmp
(bad)
jmp
into
cmp
fsub
clc
cmp
popa
and
pop
inc
or
add
adc
add
and
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
pop
add
add
add
adc
pop
cmp
and
xchg
add
pop
adc
cmp
or
movs
add
add
add
jmp
sbb
pop
pusha
xchg
and
sub
adc
jae
pop
sbb
retf
pop
sub
pop
or
pop
xor
add
mov
sub
push
sub
or
cwde
add
add
add
or
scas
(bad)
(bad)
inc
pop
push
popa
inc
add
add
or
add
pop
or
or
xchg
(bad)
(bad)
call
sub
and
mov
(bad)
(bad)
call
or
or
sub
and
cmp
or
retf
jno
fistp
jmp
sub
call
pop
jne
add
sbb
jmp
and
and
shl
add
push
and
jp
cmp
(bad)
(bad)
call
or
push
jne
add
sbb
lods
add
add
add
add
sar
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
adc
add
or
sar
(bad)
call
neg
or
repnz
(bad)
out
pop
or
jmp
sub
pop
sbb
ficom
or
mov
add
xchg
and
add
pop
sub
adc
pop
cmp
add
pop
sub
adc
push
xchg
and
mov
mov
or
in
add
add
add
movs
and
mov
cmp
(bad)
(bad)
jle
add
add
pop
adc
and
in
fstp
sbb
std
(bad)
call
adc
adc
pop
and
cmp
std
(bad)
call
or
jns
or
pop
and
clc
pop
js
cmp
std
(bad)
call
cmp
(bad)
(bad)
call
adc
and
and
add
pop
adc
cmp
jne
add
sbb
leave
add
add
add
sbb
dec
add
add
or
pop
xchg
and
add
pop
adc
cmp
cld
(bad)
inc
mov
mov
add
and
fadd
add
sub
add
or
pop
cmp
add
or
mov
(bad)
inc
pop
pop
or
rol
add
or
or
or
mov
dec
add
add
add
sbb
pop
xor
add
add
add
or
jp
(bad)
call
adc
cmc
adc
je
add
sbb
aaa
add
add
add
add
add
add
or
dec
cld
(bad)
call
pop
jne
add
sbb
pop
aaa
pop
sub
pop
je
add
sbb
add
add
pop
adc
xchg
and
icebp
add
pop
adc
cmp
cld
(bad)
inc
add
adc
add
sub
add
adc
add
jle
add
add
or
sbb
add
or
adc
inc
sbb
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
bound
add
ins
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
mov
add
push
add
add
add
jle
add
add
add
add
push
pop
adc
or
bound
add
or
push
(bad)
jmp
retf
das
and
and
inc
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
adc
cmp
(bad)
call
or
aas
scas
add
pop
sub
pop
adc
sub
pop
adc
loopne
or
xor
add
rcl
or
add
add
ret
pop
sbb
mov
adc
push
xchg
and
adc
cmp
(bad)
(bad)
inc
pop
push
popa
inc
add
add
or
add
sbb
or
ret
(bad)
(bad)
call
adc
retf
cmp
(bad)
call
or
add
retf
das
cmp
(bad)
call
add
or
add
adc
add
push
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
or
xor
and
add
pop
adc
cmp
(bad)
call
sbb
cmc
pop
pop
sub
sbb
out
pop
sub
pop
adc
out
sub
sbb
loope
or
add
add
rcr
sub
pop
push
sub
and
or
enter
push
or
or
(bad)
call
adc
or
ret
or
sub
cmp
or
and
popa
cmp
cmp
(bad)
(bad)
call
adc
or
or
out
(bad)
inc
mov
add
add
add
add
inc
add
sub
pop
pop
or
mov
add
or
or
test
add
xchg
and
adc
cmp
hlt
add
add
adc
xchg
and
adc
cmp
mov
or
pop
xor
pop
adc
or
test
(bad)
call
or
cmc
sbb
and
xchg
mov
add
or
imul
je
add
sbb
mov
add
add
aam
push
jne
add
sbb
cmps
add
add
add
or
or
cmp
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
or
icebp
inc
add
or
or
(bad)
call
sub
sbb
lock
sub
sbb
add
push
sub
sbb
or
jmp
add
adc
push
add
add
adc
add
add
or
add
add
or
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
and
add
test
add
aad
add
lock
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
jle
add
add
push
push
adc
cmp
(bad)
jmp
addr16
je
mov
rcr
pop
or
inc
or
add
or
add
or
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
or
or
daa
(bad)
(bad)
call
or
cmc
adc
pop
ins
xchg
and
ins
add
pop
sub
adc
and
and
pop
add
fcom
or
sub
add
retf
pop
sbb
(bad)
adc
and
and
push
add
pop
sub
or
dec
xchg
and
sub
pop
adc
lahf
pop
sbb
fwait
pop
adc
xchg
adc
and
and
pop
add
pop
adc
cmp
adc
dec
cmp
(bad)
(bad)
call
add
add
add
add
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
sub
add
sub
add
add
add
add
add
movlps
cmp
(bad)
call
neg
pop
sub
pop
sbb
out
pop
push
sub
pop
or
out
push
sub
pop
or
ficomp
sbb
ficomp
sub
sbb
aam
or
gs
and
cmp
add
(bad)
pop
or
ret
and
add
call
pop
and
and
sbb
popa
cmp
pop
and
dec
in
push
in
pop
popa
cmp
push
add
pop
jp
push
popa
inc
add
add
or
add
pop
adc
or
loope
(bad)
call
adc
cmc
and
(bad)
(bad)
(bad)
call
push
jne
add
sbb
das
xchg
adc
bound
and
mov
popa
cmp
(bad)
call
or
retf
xor
aaa
(bad)
(bad)
call
pop
and
xor
retf
pop
and
cmp
jg
cmp
(bad)
call
pop
and
retf
pop
and
cmp
(bad)
(bad)
call
cmp
add
adc
je
add
sbb
jmp
and
loope
cmp
std
(bad)
call
cmp
or
or
add
dec
std
(bad)
inc
mov
add
add
add
std
add
add
push
add
sub
adc
pop
dec
xchg
and
add
pop
adc
cmp
adc
sbb
(bad)
inc
pop
pop
or
pop
add
add
add
adc
cmp
std
(bad)
jmp
rcl
add
or
sbb
pop
xor
adc
pop
jg
and
fild
add
or
loop
(bad)
call
or
arpl
add
in
adc
je
add
sbb
mov
adc
jne
add
sbb
push
xchg
pop
adc
add
add
add
or
cmps
cld
(bad)
call
sub
pop
or
add
add
add
add
or
mov
(bad)
inc
sub
or
add
xchg
and
add
pop
adc
cmp
(bad)
inc
adc
pop
add
add
add
add
adc
add
add
or
add
add
or
or
or
or
add
add
add
add
add
jle
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
fild
add
lar
add
or
add
push
jle
add
add
pop
sbb
or
xchg
das
icebp
and
and
mov
pop
popa
and
inc
or
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
inc
xchg
and
mov
pop
adc
cmp
(bad)
(bad)
call
or
push
and
int3
add
pop
sub
push
sub
adc
inc
xchg
and
add
pop
sub
pop
adc
fcomp
push
sub
pop
or
rcl
or
cdq
add
add
add
rcl
mov
cmp
(bad)
(bad)
call
or
add
pop
cmp
(bad)
call
or
mov
hlt
lock
and
into
jae
popa
cmp
(bad)
inc
add
pop
es
push
popa
inc
add
add
or
add
pop
adc
or
mov
or
jl
and
sub
and
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
dec
add
add
add
add
pop
adc
or
push
or
xor
add
in
adc
pop
ds
and
stos
add
pop
sub
pop
or
fistp
sub
pop
or
aam
sub
sbb
sub
adc
test
add
xchg
and
sub
adc
pop
pop
xchg
and
ret
pop
sub
rcr
data16
cmp
add
adc
je
add
sbb
das
xchg
adc
cmp
(bad)
call
or
add
pop
cmp
(bad)
call
or
loope
(bad)
call
adc
pop
cmp
add
or
(bad)
call
or
mov
mov
add
and
in
add
add
pop
add
sub
adc
je
add
sbb
and
and
add
add
add
mov
(bad)
inc
pop
pop
or
pop
or
mov
add
or
sbb
jle
add
add
jb
sbb
add
jb
jle
add
add
gs
popa
pop
bound
xor
adc
pop
sbb
add
or
inc
std
(bad)
call
adc
cmc
adc
jne
add
sbb
inc
xchg
and
fld
add
add
xchg
and
add
pop
adc
cmp
std
(bad)
call
sub
sbb
add
add
add
add
or
add
(bad)
inc
jne
add
add
add
sbb
adc
jne
add
sbb
inc
xchg
adc
jecxz
(bad)
inc
adc
add
fld
add
and
add
jle
add
add
push
jle
add
add
pop
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cld
add
add
add
in
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
push
add
add
add
or
sbb
add
jmp
mov
pop
cmp
mov
and
inc
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
ins
add
add
add
jne
add
test
add
pop
or
(bad)
(bad)
call
sbb
cmc
pop
or
icebp
adc
pop
sub
add
pop
sub
pop
or
loopne
push
pop
xor
add
rcl
pop
pop
inc
xchg
and
xchg
add
pop
sub
pop
adc
ret
sub
adc
and
and
sub
pop
adc
mov
sbb
fwait
push
sub
sbb
xchg
pop
adc
lea
push
pop
inc
xchg
and
add
jge
(bad)
call
sbb
jbe
(bad)
call
pop
sbb
add
add
call
lea
add
add
and
xor
(bad)
call
faddp
ins
pop
and
cmp
(bad)
(bad)
inc
je
add
sbb
add
add
push
and
add
popf
adc
pop
dec
xchg
and
add
pop
adc
jmp
and
sbb
cmp
lea
add
adc
add
and
pop
push
fstp
jno
loopne
popa
cmp
je
add
sbb
and
add
popf
sbb
and
pop
push
cs
and
pop
sub
(bad)
inc
je
add
sbb
dec
aaa
add
popf
and
push
xchg
cmp
(bad)
dec
inc
or
add
adc
add
add
add
daa
add
add
add
add
add
add
add
add
push
and
and
add
pop
adc
call
or
cmc
sbb
repnz
sbb
pop
sub
pop
adc
jecxz
push
sbb
add
xlat
adc
pop
sub
add
retf
and
add
add
add
mov
and
sub
ins
cmp
std
(bad)
dec
and
and
(bad)
jp
cmp
cmp
add
or
inc
sub
add
std
(bad)
inc
je
add
sbb
and
adc
add
add
sbb
(bad)
xor
add
hlt
cld
(bad)
jmp
fcmove
popa
dec
cmp
(bad)
inc
jne
add
sbb
sub
push
xor
dec
and
lock
mov
adc
popa
cmp
(bad)
call
adc
add
add
and
add
add
add
adc
add
xlat
pop
add
(bad)
dec
and
and
jecxz
push
popa
cmp
std
(bad)
inc
je
add
sbb
and
add
int
cmps
and
add
(bad)
inc
je
add
sbb
and
sub
add
das
cmp
cld
(bad)
call
or
and
ret
pop
and
pop
mov
fdivr
(bad)
call
or
and
and
(bad)
neg
popa
cmp
cld
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
mov
add
popa
add
add
add
add
add
add
add
add
add
add
add
sbb
add
lea
add
js
add
sar
add
push
sbb
add
mov
pop
push
xchg
and
add
add
lods
add
pop
ds
add
add
xchg
add
add
add
add
xchg
add
add
add
add
pop
push
popa
inc
add
add
adc
add
adc
inc
rol
add
add
ins
(bad)
(bad)
call
or
cmc
adc
adc
and
and
ins
add
pop
adc
push
(bad)
(bad)
inc
mov
add
outs
daa
add
or
pop
or
add
cmp
(bad)
inc
pop
pop
or
and
pop
or
adc
sub
(bad)
dec
sbb
or
adc
sbb
(bad)
call
or
cmc
pop
jne
add
sbb
adc
aam
add
pop
adc
(bad)
(bad)
(bad)
inc
add
xor
add
add
adc
add
add
sbb
inc
or
add
cmp
add
sub
add
pop
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
or
and
and
add
pop
or
rol
pop
ds
push
popa
inc
add
add
add
add
pop
or
stos
sbb
cli
push
or
movs
add
add
or
pop
pop
or
and
pop
sub
sbb
mov
sub
or
sbb
add
cmp
(bad)
jmp
push
adc
add
add
add
add
add
add
add
add
cmp
add
sub
lea
adc
add
add
add
jle
add
add
movd
add
add
adc
pop
adc
inc
adc
add
or
add
int3
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
adc
sub
xor
popa
add
jle
add
add
or
add
and
sbb
pop
popa
or
nop
xchg
and
add
pop
adc
cmp
(bad)
(bad)
jle
add
add
or
add
pop
call
pop
pop
xchg
and
add
push
cmp
(bad)
call
adc
push
xchg
and
cld
add
pop
sub
or
add
sub
je
add
sbb
add
add
add
add
push
adc
or
or
mov
add
add
add
push
cmp
(bad)
(bad)
push
add
or
add
or
add
adc
adc
add
sbb
or
pop
xchg
adc
adc
cmp
(bad)
(bad)
call
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
arpl
pop
pop
or
push
cmp
(bad)
(bad)
call
push
pop
and
or
adc
cmp
nop
and
sub
adc
pop
punpckldq
or
add
sbb
or
pop
pop
adc
adc
adc
pop
or
add
push
cmp
call
or
add
mov
or
adc
adc
pop
jp
and
add
pop
adc
cmp
call
add
cmp
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
jne
add
sbb
or
or
pop
adc
or
popa
shr
add
or
sbb
push
cmp
(bad)
(bad)
call
or
pop
adc
adc
pop
outs
xchg
and
adc
cmp
(bad)
(bad)
call
or
pop
xor
adc
pop
cmp
and
adc
cmp
std
(bad)
call
mov
add
add
add
jmp
add
add
add
or
add
or
add
pop
or
add
add
mov
je
add
add
add
xor
in
add
add
add
adc
add
add
add
add
push
sbb
add
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
retf
popa
pop
push
pop
push
popa
inc
add
add
push
add
add
or
add
mov
sub
adc
call
adc
mov
add
sub
add
or
pop
pop
or
and
and
and
sbb
add
or
pop
pop
xor
adc
pop
and
add
add
push
sub
adc
and
and
pop
add
pop
adc
push
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sub
pop
(bad)
(bad)
call
xor
add
add
add
sbb
add
or
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
daa
lea
add
add
add
add
add
adc
add
lea
add
add
push
jne
add
sbb
and
or
add
push
je
add
sbb
and
push
add
popf
push
jne
add
sbb
push
and
add
push
je
add
sbb
and
push
je
add
sbb
and
add
popf
sbb
cmp
inc
jne
add
sbb
add
add
sbb
add
add
popf
or
add
add
add
cmp
(bad)
(bad)
inc
jne
add
sbb
and
cmp
add
add
sbb
add
je
add
sbb
sub
aas
add
push
sub
xor
add
add
add
add
adc
add
add
add
inc
or
add
scas
add
add
add
add
add
add
add
jno
add
pop
add
add
add
add
add
fild
add
pop
add
add
inc
add
push
es
adc
mov
and
and
adc
stos
add
pop
push
jle
add
add
rol
add
jle
add
add
rol
add
xchg
jle
add
add
dec
xchg
pop
pop
imul
add
adc
add
adc
call
adc
gs
(bad)
call
add
mov
sub
adc
sbb
(bad)
(bad)
inc
mov
add
add
add
or
sbb
(bad)
(bad)
inc
pop
pop
or
pop
or
add
dec
icebp
add
pop
adc
sbb
(bad)
dec
sbb
adc
add
add
add
add
add
(bad)
call
add
add
add
jmp
add
sub
add
loop
(bad)
inc
adc
add
sti
add
add
add
adc
add
add
add
add
push
sub
add
or
add
das
add
add
add
add
add
add
add
lods
add
add
add
add
add
sbb
add
xchg
add
movs
add
add
add
rol
add
adc
add
add
add
mov
or
push
and
adc
and
pop
adc
call
push
popa
inc
add
add
add
adc
test
or
clc
adc
adc
pop
outs
xchg
and
adc
ins
(bad)
(bad)
inc
mov
add
add
add
or
sbb
add
push
(bad)
(bad)
inc
pop
pop
or
and
pop
or
or
add
inc
(bad)
(bad)
dec
sbb
or
or
add
xor
(bad)
call
add
add
add
jmp
add
sub
adc
adc
adc
add
jecxz
add
or
add
jle
add
add
add
add
push
sbb
add
add
or
add
js
add
cmp
add
pop
add
add
add
add
add
add
add
jo
add
cmp
add
sub
add
js
add
push
or
adc
retf
popa
pop
daa
pop
push
popa
inc
add
add
add
adc
mov
add
inc
icebp
add
pop
sub
adc
and
add
add
add
add
xchg
add
cmp
add
push
pop
pop
or
bound
push
add
add
and
add
or
pop
xor
adc
pop
mov
add
fs
(bad)
call
sub
sbb
add
pop
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
sub
fs
(bad)
inc
adc
add
fadd
add
sub
add
jle
add
add
push
sub
inc
or
add
mov
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
push
adc
pop
dec
xchg
and
add
pop
adc
adc
and
add
add
add
add
popa
pop
dec
pop
push
popa
inc
add
add
add
adc
stc
adc
sbb
add
jmp
cmp
add
or
adc
inc
pop
pop
or
jbe
add
or
add
fcom
add
or
pop
pop
xor
push
adc
call
sub
sbb
add
inc
je
add
add
sbb
add
call
xor
add
add
add
add
adc
add
add
push
sub
inc
or
add
mov
add
add
add
add
add
test
add
rol
add
add
mov
add
adc
add
add
add
pop
add
add
inc
add
push
adc
pop
setae
cmp
add
pop
adc
pop
adc
popa
pop
jne
push
popa
inc
add
add
adc
add
adc
and
and
adc
and
and
into
add
pop
sub
adc
pop
or
add
inc
mov
add
add
cmp
add
or
or
add
inc
pop
pop
or
add
add
add
out
add
or
sbb
push
add
add
jns
push
add
add
jns
add
popf
pop
xor
sbb
(bad)
(bad)
call
sub
pop
adc
inc
je
add
add
pop
adc
call
xor
add
add
add
add
adc
add
add
add
push
add
add
add
or
add
sub
add
inc
add
add
add
add
add
add
add
add
add
add
sub
add
inc
add
add
add
add
or
add
arpl
add
sub
add
popa
pop
jle
push
popa
inc
add
add
add
add
sbb
sub
adc
pop
aad
add
sub
sbb
sub
pop
pop
or
pop
or
add
xchg
add
add
add
cmp
(bad)
inc
sbb
pop
sbb
call
add
mov
and
ins
add
pop
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
sub
addr16
(bad)
inc
adc
push
add
add
add
add
adc
add
add
push
sub
add
add
add
add
add
add
add
test
add
add
add
mov
add
add
add
or
add
arpl
add
rol
add
es
or
add
pop
or
add
popa
pop
arpl
popa
inc
add
add
add
adc
and
and
add
pop
sub
adc
pop
or
add
add
add
outs
add
or
adc
and
and
push
add
pop
adc
inc
pop
pop
or
repz
add
add
or
add
or
pop
pop
xor
sbb
add
call
push
pop
dec
xchg
and
add
add
inc
jle
add
add
inc
xchg
add
inc
pop
popf
pop
sub
adc
and
add
add
add
add
inc
jne
add
sbb
pop
or
add
inc
add
xor
add
add
add
add
add
aas
add
or
add
sahf
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
(bad)
cmp
mov
data16
add
dec
or
dec
or
dec
or
dec
or
dec
or
cmp
or
data16
pcmpgtd
popa
data16
push
data16
push
cmp
imul
ins
data16
ins
data16
outs
data16
outs
data16
mov
data16
test
cmp
test
data16
stos
data16
lods
data16
lods
data16
scas
data16
scas
data16
into
data16
xor
push
xor
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
lods
push
cmp
jg
push
aas
jg
push
in
add
add
add
add
add
add
add
add
add
jno
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
out
add
sgdtd
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
outs
push
add
adc
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
or
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
cdq
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
imul
adc
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
lods
add
adc
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
cmp
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
and
add
aaa
add
add
add
add
add
add
add
dec
xor
add
add
add
add
add
add
add
add
xor
retf
inc
add
adc
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
data16
adc
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
cmp
xor
popa
add
add
add
cmp
arpl
xchg
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fmul
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movd
inc
push
pop
inc
in
shl
fmul
add
loopne
xchg
cmps
cmps
addr16
cmps
dec
ja
xor
je
aam
xchg
shl
sbb
cdq
call
sbb
js
fdiv
add
loope
mov
adc
cmp
pop
ds
mov
in
clc
in
rcr
pop
and
inc
out
test
push
test
cmp
or
xor
jno
jg
fsub
mov
or
int
xchg
jge
rcl
sbb
jo
push
or
jae
or
stc
cld
arpl
pop
mov
xor
in
jmp
mov
mov
xlat
ret
mov
add
push
pop
jmp
dec
icebp
pop
or
inc
aam
push
jns
and
repz
mov
jmp
pop
pop
pop
xchg
inc
sti
pop
in
ja
mov
jno
cmps
inc
sbb
add
sub
fsubr
xchg
ret
ret
aam
sbb
push
addr16
push
jmp
jb
mov
movs
jae
loopne
sahf
push
mov
jmp
or
int3
lahf
je
into
fist
push
pop
ins
adc
push
test
inc
call
mov
adc
retf
jmp
cmps
imul
iret
pop
xchg
test
xor
adc
dec
js
pop
or
mov
sbb
hlt
dec
cmps
mov
fisubr
movs
mov
jb
popa
(bad)
stc
push
loop
es
push
xchg
out
aaa
inc
push
lds
bound
daa
not
std
ficomp
aad
cwde
jbe
jg
(bad)
(bad)
pop
lods
jno
outs
adc
jl
xchg
sahf
mov
cmp
jmp
(bad)
clc
les
cmps
cmp
mov
cwde
das
push
push
push
mov
fisttp
cmc
pop
(bad)
repz
ror
leave
push
inc
adc
dec
test
push
int3
xlat
dec
in
mov
mov
adc
fadd
jo
xor
pop
sub
pop
loop
in
sub
dec
or
sbb
cmps
or
mov
dec
pop
(bad)
cmp
scas
push
mov
or
push
pop
inc
out
(bad)
jge
push
mov
xchg
or
mov
loopne
xor
mov
je
mov
cmp
sub
xchg
mov
lods
pop
test
or
jl
fsubrp
(bad)
jbe
mov
or
das
(bad)
mov
pushf
dec
shr
mov
mov
add
out
mov
enter
retf
scas
lds
(bad)
in
fld
cld
or
lods
mov
adc
cmp
sub
and
xlat
fld
push
xchg
inc
fucom
adc
ret
fcmovu
cmp
dec
pop
jl
ffreep
mov
mov
mov
xchg
enter
xor
add
das
mov
xchg
loope
sub
cmp
mov
cs
jge
pop
cli
stc
inc
and
lahf
(bad)
mov
and
sub
and
xor
int
test
mov
push
ror
jno
pop
mov
lods
sar
test
mov
movs
(bad)
push
jnp
add
ins
in
int3
xchg
pop
retf
shl
test
sbb
cmp
addr16
xchg
inc
dec
lds
hlt
mov
xchg
pushf
or
adc
xor
in
push
dec
adc
sti
push
cmp
mov
xor
shl
mov
jl
or
fdiv
out
dec
ja
out
mov
nop
or
mov
mov
cmp
aaa
aad
out
and
hlt
dec
repz
retf
jne
mov
pop
adc
scas
push
push
jle
mov
mov
xchg
loope
mov
out
mov
mov
dec
mov
xchg
enter
sub
pop
sbb
retf
ret
cwde
xor
mov
bound
bound
inc
fimul
adc
or
test
xchg
mov
sbb
push
sbb
sub
jmp
jno
rol
jecxz
fcom
pop
or
pop
rol
stos
pop
addr16
ins
push
out
inc
inc
inc
mov
xchg
sbb
pop
add
push
jmp
pop
dec
dec
xor
retf
les
and
push
inc
fs
data16
add
or
test
cmp
sbb
push
out
mov
dec
test
sbb
test
cmps
aas
mov
ja
cmps
je
jae
jmp
sub
pop
icebp
mov
sbb
fdecstp
loopne
pop
iret
fisttp
jbe
jl
test
xchg
(bad)
sub
lds
mov
pop
cwde
mov
cmp
pop
cmp
mov
and
pop
mov
jg
mov
jp
mov
test
jns
push
cmp
or
inc
push
shl
mov
adc
stc
ror
call
add
pop
outs
mov
lds
mov
lea
(bad)
cld
sbb
neg
fistp
mov
cwde
fwait
push
fisub
mov
dec
loopne
mov
dec
rcr
and
sbb
add
add
mov
or
call
inc
imul
ja
loope
inc
sub
(bad)
nop
test
movs
bound
(bad)
mov
xchg
repnz
cmp
ret
iret
mov
pop
cmp
ins
jecxz
mov
stos
or
dec
repz
into
ret
jmp
mov
push
int3
outs
retf
push
dec
(bad)
idiv
daa
jmp
and
or
jp
sbb
inc
loope
shr
ss
pop
pop
fdiv
inc
in
inc
call
xchg
pop
sub
das
push
jmp
sbb
popf
push
rcl
mov
jno
pop
pop
cmp
cmp
mov
bound
fwait
sbb
loope
arpl
push
fsub
rol
icebp
pop
mov
ret
add
mov
repnz
cmps
test
jecxz
jge
pop
mov
cmc
pop
data16
xchg
push
jl
int3
iret
ja
outs
popa
mov
push
adc
mov
imul
and
sub
repnz
int
movs
bound
ja
iret
aad
div
fidivr
mov
repnz
nop
sbb
movq
pop
and
ror
jmp
aaa
sub
aam
xchg
xor
lods
mov
mov
ror
fsub
cmp
or
xor
xor
lods
dec
aaa
in
mov
and
mov
out
xor
daa
(bad)
lock
out
sbb
mov
sti
push
cmp
jns
or
pop
mov
rol
dec
xchg
inc
jne
pop
jg
push
xor
out
retf
cmps
pop
mov
(bad)
add
test
mov
popa
mov
xchg
xchg
xchg
adc
sub
mov
sub
out
mov
sbb
stc
add
jbe
mov
xchg
or
sbb
stos
mov
arpl
ins
and
dec
cli
icebp
mov
jb
push
repz
push
sub
pop
mov
fcomi
sbb
inc
cwde
push
or
imul
cmp
rcr
mov
pop
push
xor
xchg
inc
sti
ins
adc
mov
push
or
cmp
scas
mov
aad
out
push
(bad)
aad
inc
xor
cdq
sti
in
inc
sbb
mov
(bad)
fild
or
daa
xor
xor
sub
iret
cwde
cmp
mov
xchg
push
imul
jmp
inc
fldenv
mov
and
jp
inc
out
mov
mov
and
push
rol
int3
aaa
addr16
xor
adc
stc
movs
xchg
cmc
je
push
or
fild
mov
clc
mov
nop
(bad)
mov
repnz
std
lods
jmp
inc
lock
mov
dec
fisub
(bad)
pop
ret
das
nop
mov
jmp
or
retf
mov
or
and
js
fld
out
mov
imul
cmp
mov
mov
mov
in
emms
cmp
dec
sti
shr
mov
cmc
ret
jo
ret
js
pop
xchg
imul
mov
and
movs
sahf
add
jne
xor
mov
cmps
fisubr
cmp
and
pop
fucomp
jp
dec
cmp
cmc
pop
pop
dec
mov
stos
leave
imul
push
mov
dec
mov
leave
inc
xchg
(bad)
fld
sti
pop
rcl
in
or
ret
mul
xchg
loope
jmp
and
sub
loope
and
xor
dec
rol
add
mov
push
push
shr
test
retf
sar
je
cdq
cwde
pop
and
outs
jnp
dec
or
lahf
pop
xor
test
mov
popa
aad
mov
int
pop
fmul
cmps
push
adc
test
fidiv
ror
jbe
cmps
addr16
mov
std
popa
clc
leave
xchg
sbb
mov
mov
stos
lods
push
pop
cmc
aas
pop
js
mov
fdiv
cmp
jp
inc
cmp
jle
ds
push
pop
and
push
inc
xor
cmp
mov
shl
adc
sub
loope
and
arpl
fs
retf
test
repnz
pop
sbb
sbb
shl
or
mov
pop
(bad)
hlt
push
dec
test
enter
mov
test
xchg
dec
push
and
xchg
push
xor
fisub
movs
push
mov
or
gs
jb
mov
mov
jmp
in
inc
cmps
mov
adc
(bad)
cmp
xchg
cmps
or
sar
call
push
popf
push
fiadd
jnp
jle
xchg
(bad)
call
(bad)
push
retf
lock
retf
cli
xchg
(bad)
(bad)
dec
jnp
push
jmp
lahf
jecxz
pop
gs
sbb
mov
sbb
adc
ret
xchg
ss
xchg
push
xor
push
inc
fsubr
fincstp
mov
bound
lds
in
aam
out
cmp
xchg
bound
adc
cmp
sbb
sbb
xor
inc
mov
repz
popf
sbb
mov
dec
fst
es
mov
mov
dec
das
pop
mov
push
cmp
mov
mov
jo
add
or
cbw
sub
mov
not
test
or
stc
sub
adc
adc
sbb
jmp
icebp
jo
pop
push
jno
(bad)
iret
jb
loopne
jle
aam
ins
je
fcom
retf
les
jmp
or
or
in
fs
jl
xchg
repz
js
push
enter
dec
sbb
(bad)
das
fistp
dec
xor
jae
xchg
mov
xchg
jge
rcl
test
mov
mov
pop
test
lock
imul
out
div
inc
jp
or
mov
dec
(bad)
(bad)
mov
cmp
mov
ret
dec
aam
push
jecxz
movs
or
push
sbb
mov
push
ret
arpl
dec
cld
rol
mov
pop
adc
stc
aaa
std
inc
jno
inc
(bad)
jmp
js
cld
bound
jb
xor
(bad)
jge
add
lea
mov
xchg
jnp
retf
add
xlat
adc
cmp
push
cmp
ror
retf
stos
mov
or
out
aad
pop
xchg
shl
jmp
arpl
dec
xor
inc
adc
fwait
iret
jb
lods
adc
dec
icebp
jns
ds
push
xor
test
into
sbb
stc
inc
sub
pop
xchg
xor
sub
sub
adc
jae
adc
popf
cmp
call
jmp
add
sub
scas
push
scas
dec
retf
fucompp
shr
cmp
pop
push
cmp
lods
iret
scas
xor
das
push
xchg
sub
(bad)
and
and
mov
xor
test
push
mov
out
xchg
sbb
mov
stos
call
ret
xchg
in
mov
shl
dec
daa
ja
xlat
cmp
jne
sahf
data16
(bad)
jg
stc
ret
add
push
pop
and
shl
adc
cmp
(bad)
jmp
sub
sbb
mov
(bad)
lock
pop
aad
cmc
sub
jns
pop
shl
sub
cmps
xor
(bad)
pop
sub
xor
aad
inc
jbe
inc
sbb
popf
pusha
or
and
sahf
jo
cmps
ror
out
sub
adc
xor
dec
fiadd
bound
lods
in
dec
lock
inc
xchg
fld
cs
sbb
add
setnp
push
ss
mov
jo
jl
cmp
pushf
rcr
(bad)
in
sbb
and
sub
lods
into
pop
jbe
jae
inc
cli
pop
lds
and
inc
jbe
xor
lock
ds
inc
xor
mov
cmp
(bad)
out
xchg
aaa
xchg
aas
cmp
mov
adc
mov
inc
inc
imul
sbb
stos
movhps
(bad)
push
dec
or
add
or
mov
jne
mov
dec
es
cmp
outs
sub
mov
push
in
shl
fldenv
cmc
push
mov
push
pop
inc
retf
cmc
lea
add
fwait
xchg
(bad)
dec
inc
inc
inc
mov
pusha
pusha
loope
inc
fcomp
pop
jp
jns
jecxz
adc
inc
data16
lea
clc
mov
(bad)
sub
loopne
mov
mov
mov
dec
jge
retf
cmp
add
push
repnz
push
lods
mov
xor
cld
lods
scas
out
imul
out
(bad)
mov
sub
(bad)
sar
sahf
cld
sar
sar
adc
mov
or
repz
aas
(bad)
cld
repz
aas
dec
loopne
rol
sti
jg
iret
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movq
inc
push
pop
inc
in
shl
sbb
add
loopne
aam
aaa
shl
jecxz
in
xor
pushf
mov
fnstsw
cmps
dec
lahf
cwde
into
stc
jmp
inc
sti
popa
iret
add
adc
xchg
fistp
or
sub
push
ret
stos
mov
fld
int3
and
call
rcr
repnz
or
popa
xchg
repnz
jne
jno
in
jecxz
xchg
cmp
jb
mov
enter
scas
xchg
sub
push
cmp
sub
(bad)
aad
push
ins
div
push
mov
in
jecxz
test
mov
retf
sub
push
enter
push
(bad)
pop
add
sub
pop
es
jbe
xchg
or
cmc
ret
jmp
imul
stc
or
in
inc
ja
cmp
pushf
sub
jns
or
mov
jecxz
pop
push
inc
(bad)
mov
dec
cwde
aad
or
xor
test
xchg
mov
imul
fwait
sbb
repnz
adc
jns
xor
xchg
cmp
and
push
or
loopne
add
lds
outs
jle
leave
aas
push
aam
bnd
lods
fadd
cmp
and
sub
add
je
jne
push
lods
psraw
mov
lods
or
add
lods
dec
in
std
xor
pop
sahf
inc
pop
cmp
mov
adc
(bad)
xchg
idiv
gs
mov
addr16
pusha
test
xor
pop
push
imul
cwde
bound
push
inc
xchg
stc
inc
int
shl
outs
dec
cld
pop
out
cmps
push
out
add
mov
or
inc
lods
pop
bound
icebp
ds
mov
or
push
mov
xchg
push
mov
lds
sbb
sti
movs
aam
shl
mov
inc
test
jp
shl
(bad)
mov
in
xor
xchg
div
lock
jbe
imul
rcr
xchg
in
test
and
ror
mov
xchg
and
mov
cmovne
jno
ret
pop
pushf
xor
or
push
push
call
dec
jb
call
or
push
or
ret
test
inc
mov
test
xor
jne
clc
idiv
and
bound
aaa
add
pop
pop
test
cs
dec
add
and
and
or
jmp
xchg
dec
rol
mov
int
shl
movs
sub
mov
(bad)
push
xchg
and
lock
sub
push
(bad)
dec
test
es
mov
lods
clc
xchg
mov
in
pop
lods
ds
and
jle
aas
div
rcl
xchg
mov
adc
xor
mov
jle
mov
push
mov
jge
mov
mov
lea
cmp
sbb
dec
fs
jae
or
cmps
ja
and
jo
sub
bnd
mov
lock
mov
sbb
pop
scas
xchg
in
pop
fwait
arpl
call
and
inc
xor
lahf
cmp
jmp
push
dec
sti
js
inc
sub
adc
cmp
adc
repz
daa
inc
cs
xchg
je
push
or
out
xchg
mov
push
cmc
imul
xchg
lds
sahf
xor
mov
cmp
dec
std
cmp
std
push
pop
test
and
bound
lods
imul
es
mov
cli
pop
cmp
(bad)
movs
nop
cli
fisttp
or
push
mov
mov
mov
jo
lea
ror
out
das
cmp
cli
adc
test
xchg
(bad)
mov
or
adc
mov
adc
clc
push
jl
loop
mov
sub
push
shl
clc
clc
pop
aaa
lods
mov
out
mov
mov
sbb
fsubr
inc
lock
mov
pusha
sbb
scas
jl
data16
pop
aaa
ja
loopne
cli
fmul
sub
jbe
inc
leave
pop
js
jnp
daa
sub
sbb
cmp
cmp
mov
shl
sub
push
pop
inc
xchg
pusha
aad
xchg
jp
(bad)
out
and
jl
and
jmp
push
in
rol
sbb
push
sbb
fs
lea
and
and
ret
cs
jb
jp
cld
xchg
sub
cmps
xchg
inc
add
rol
cmps
daa
cmps
cli
call
xchg
push
jmp
in
std
pop
cmp
ins
movs
(bad)
enter
je
outs
add
dec
jae
lods
pushf
hlt
sti
jne
sti
sbb
inc
xlat
jecxz
cmp
xchg
mov
cmp
adc
cmp
cmps
push
into
(bad)
mov
jge
ret
ins
jmp
adc
stos
jb
dec
jecxz
mov
nop
out
xlat
(bad)
ficom
scas
ja
and
ds
jge
add
dec
out
jnp
mov
dec
retf
int3
dec
mov
dec
ds
or
test
add
jle
inc
push
aas
xchg
push
into
movs
in
popa
or
and
enter
adc
outs
stc
pop
inc
mov
cli
(bad)
popf
dec
out
jg
gs
aaa
hlt
inc
retf
push
(bad)
xchg
in
and
or
aam
or
adc
jl
fdiv
dec
int
aad
lea
pop
sub
cld
cwde
ins
cmp
push
mov
or
rol
mov
mov
add
repz
ficomp
pop
xor
jle
sbb
or
push
cld
mov
xchg
das
data16
cmp
das
test
cmp
fst
les
ins
ret
pusha
pop
jmp
mov
push
mov
js
fisttp
out
pusha
add
stos
in
push
jmp
sti
xchg
das
inc
hlt
and
jp
fwait
mov
aad
shl
pop
or
xchg
pop
jge
or
bound
xchg
jo
jmp
inc
ret
jecxz
push
sti
pop
in
mov
mov
push
pop
scas
mov
jae
aaa
cmp
lock
or
(bad)
dec
mov
out
xchg
xchg
cmp
movs
inc
js
nop
cli
into
std
mov
pop
mov
sbb
lea
xchg
add
loope
jo
or
stos
pushf
rcl
fsubr
hlt
mov
imul
cmp
fld
cmp
mov
sub
and
dec
sbb
mov
mov
fs
mov
enter
xchg
shl
mov
pop
fist
ss
sbb
outs
ins
push
out
aam
inc
xlat
cwde
test
fs
and
mov
ret
popf
sbb
or
bound
mov
movs
push
enter
sub
test
xchg
sbb
sub
cdq
dec
sub
test
mov
mov
enter
cmp
jecxz
inc
in
lea
aad
je
xor
rol
pop
stos
adc
sbb
pop
dec
mov
call
hlt
cmp
(bad)
pop
cmp
pop
mov
leave
aaa
add
adc
bound
sahf
dec
jg
pop
rol
addr16
and
sbb
xlat
xor
test
(bad)
mov
add
mov
push
es
repz
out
(bad)
xlat
jmp
lock
aaa
xchg
test
adc
push
fdivr
data16
mov
push
mov
jle
push
mov
cwde
xchg
(bad)
shl
int3
push
push
retf
mov
pop
test
test
cld
mov
jno
out
add
ds
aad
pop
les
pusha
sbb
nop
fsubr
pop
pop
mov
ins
fst
pusha
fnstsw
outs
adc
ja
aaa
add
push
leavew
inc
stc
inc
mov
aas
je
push
mov
les
push
das
fnsave
push
add
imul
sbb
movs
dec
sub
movs
aam
pushf
add
hlt
aad
test
retf
cs
jmp
sub
cmps
mov
into
push
cld
push
push
in
imul
sti
and
cmp
pop
mov
jle
mov
loope
lds
dec
int3
in
mov
(bad)
jmp
xchg
mov
loop
push
inc
mov
lahf
push
arpl
jge
sub
cmc
loope
pop
movs
pushf
ins
adc
mov
jmp
pop
jbe
mov
aam
mov
test
mov
aam
movs
cdq
clc
loope
dec
js
cmps
sbb
jnp
enter
fnsave
and
jae
mov
sbb
or
push
sbb
jne
or
push
push
not
ins
(bad)
fidiv
xor
add
jge
jnp
mov
dec
and
add
cs
pushw
in
fidivr
sbb
mov
les
lods
inc
cli
mov
xchg
push
fild
mov
mov
out
dec
xor
icebp
pusha
idiv
loopne
dec
sbb
dec
push
clc
aad
retf
icebp
inc
mov
dec
or
cmp
jmp
outs
xchg
jnp
(bad)
mov
dec
lods
sub
lods
int3
retf
sahf
sbb
fwait
inc
and
rcr
cmp
adc
(bad)
and
popa
in
dec
rcr
test
int
jg
sbb
stos
(bad)
push
push
sub
nop
sbb
push
inc
(bad)
scas
test
cmp
adc
and
stc
jnp
cmp
ss
push
jb
ins
js
pop
jmp
cmp
test
push
cdq
or
mov
xor
nop
arpl
in
xchg
xchg
xchg
mov
lea
adc
ja
jge
(bad)
outs
fld
or
mov
in
pop
scas
inc
test
mov
pop
sbb
adc
stos
outs
cmp
pop
adc
mov
cmp
imul
scas
mov
push
and
inc
mov
mov
(bad)
mov
mov
call
fmul
sbb
lahf
ret
mov
retf
int
idiv
test
dec
leave
nop
xchg
jae
outs
std
mov
adc
stos
in
add
push
sub
in
mov
gs
xor
dec
stos
xlat
call
pop
(bad)
pop
rol
adc
mov
xchg
sub
mov
mov
(bad)
jnp
retf
mov
(bad)
mov
repnz
call
push
jecxz
xor
adc
mov
popa
jbe
stc
jb
test
pop
add
(bad)
adc
xor
aam
mov
sti
pop
cld
and
push
or
idiv
ficomp
inc
pop
scas
(bad)
fadd
sbb
push
cmp
cmp
clc
mov
mov
pop
pop
int
sti
ret
push
test
add
sbb
inc
out
cwde
push
popa
mov
inc
cmp
rcr
push
sub
cdq
call
xchg
movs
loopne
test
js
xor
adc
mov
inc
hlt
pop
push
mov
mov
jg
aam
cmc
call
bound
test
push
jl
sbb
(bad)
fstp
push
mov
pop
mov
jg
cwde
inc
and
add
dec
xor
pusha
mov
fcmovu
movs
(bad)
imul
movs
cmc
jne
jbe
icebp
dec
pop
and
push
icebp
dec
mov
retf
push
fbstp
mov
fxch
clc
addr16
popa
or
xchg
sbb
outs
sti
lds
lods
repz
(bad)
xlat
aas
mov
or
add
inc
movs
push
mov
popf
lea
jg
arpl
fldenv
iret
ret
mov
icebp
enter
fcmove
mov
cmps
in
in
movs
adc
jmp
mov
mov
int3
test
cs
call
cli
pop
add
sbb
cli
push
mov
jmp
jg
mov
push
push
fwait
mov
sbb
sbb
repz
(bad)
shl
push
cmps
mov
out
mov
adc
mov
adc
rol
inc
das
sub
test
and
out
test
fidivr
pop
stos
arpl
(bad)
xchg
push
cdq
pusha
in
(bad)
(bad)
xchg
mov
cmps
jle
ret
shr
bound
pop
cmp
nop
pop
push
dec
cli
sbb
ret
and
imul
jmp
jecxz
imul
les
lods
pop
pop
mov
test
stc
outs
rol
push
adc
and
add
inc
call
add
inc
mov
sub
rcr
sub
retf
jae
scas
ja
fdivr
mov
xor
stos
std
xlat
rcr
pop
pop
int3
fild
sbb
jbe
std
pop
push
add
adc
hlt
pcmpgtb
bound
imul
out
outs
push
pop
mov
das
(bad)
push
or
mov
daa
add
bound
shl
aad
cmp
jnp
sbb
push
inc
lods
inc
add
fs
enter
jno
sub
sub
dec
aaa
popa
cmp
jle
leave
xchg
jle
out
sbb
xchg
ja
cwde
sub
fsubr
cmp
fsub
inc
cmp
outs
jmp
icebp
or
or
xchg
fs
adc
sub
adc
ret
fmul
add
jae
mov
(bad)
(bad)
(bad)
out
mov
jl
pop
push
pop
pop
pop
and
dec
sub
out
out
mov
lock
cld
repz
aas
(bad)
cld
repz
aas
dec
cmp
es
cmp
test
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loop
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
je
pop
inc
in
aad
inc
xchg
lea
and
nop
data16
push
jmp
mov
fstp
test
mov
jmp
and
jmp
ficomp
mov
push
add
arpl
ja
inc
data16
and
jecxz
mov
mov
rcl
inc
into
pop
ins
xchg
leave
cmp
dec
jno
outs
cli
ret
pop
push
push
xlat
push
es
inc
or
int3
xchg
aam
shl
daa
dec
jae
leave
mov
iret
pop
mov
cld
fwait
mov
sti
xor
sbb
pop
push
mov
xchg
out
fisubr
loope
sbb
in
cmp
imul
cli
push
sub
sub
mov
adc
pop
xchg
cmps
xchg
xor
push
dec
aad
cmc
sub
repnz
repnz
cmp
sahf
cmp
dec
aam
cli
out
loope
ret
xchg
movs
ds
push
leave
mov
push
and
daa
inc
clc
out
test
pop
aam
cs
pusha
push
in
add
ins
fs
shr
stc
cld
rcr
and
cmp
inc
ins
inc
ins
jbe
mov
xchg
sub
sahf
sbb
scas
retf
cli
sbb
cmps
sahf
mov
leave
call
xor
add
dec
inc
ficomp
into
push
stc
and
stc
ret
xchg
sahf
ja
or
jne
dec
outs
xchg
sahf
shr
dec
cld
fld
stos
dec
rcr
es
cmp
push
iret
inc
mov
add
jg
pop
movs
scas
clc
lds
and
bound
xchg
ret
jns
pop
es
sub
rcr
rol
int
retf
and
mov
lea
adc
xor
std
mov
(bad)
das
mov
inc
fist
repz
xchg
movs
xchg
and
push
in
inc
push
pushf
cmp
cwde
aaa
jb
sti
js
jb
xchg
cmp
and
loopne
mov
das
fild
sbb
ss
shl
leave
mov
mov
lock
repz
retf
cmp
ss
pop
sbb
out
(bad)
div
and
and
addr16
mov
lods
mov
dec
fld
add
fs
(bad)
aaa
mov
jns
xchg
or
mov
jb
cmps
xchg
xchg
mov
in
cmc
cmps
mov
fisubr
push
add
jl
fidivr
nop
mov
pop
or
mov
or
cmps
int3
add
cmp
es
pusha
(bad)
retf
ficomp
lds
cwde
neg
gs
mov
(bad)
cmp
jecxz
iret
hlt
in
or
out
lods
retf
sbb
idiv
loope
mov
cwde
in
cmp
sbb
repnz
call
mov
adc
push
int
jl
(bad)
mov
aad
frstor
lea
push
int3
test
addr16
lods
inc
arpl
lahf
xor
and
(bad)
enter
add
sub
popf
dec
sar
stos
mov
and
pop
fcomp
jecxz
add
mov
enter
pop
cmp
push
pop
sub
xchg
mov
shr
pop
xchg
nop
push
sub
clc
jle
push
loop
bound
ror
push
icebp
jnp
mov
push
ja
inc
jmp
xchg
in
xor
in
pop
and
or
sahf
pushf
adc
cmc
jne
iret
add
xchg
nop
rcr
push
pop
mov
push
in
push
xor
outs
fstp
mov
fsubr
push
xor
enter
adc
cli
arpl
jg
scas
xor
in
xor
and
adc
dec
(bad)
adc
scas
gs
fld
push
lock
and
inc
and
jecxz
inc
jo
cwde
adc
cmp
and
scas
scas
stos
lods
jg
lds
mov
outs
cmps
jns
mov
je
mov
les
icebp
(bad)
jbe
cwde
push
sti
out
scas
call
mov
or
mov
cmp
push
arpl
push
mov
push
sub
push
xor
and
mov
fwait
out
xor
mov
fmul
lahf
neg
or
ret
jg
daa
xor
scas
imul
xor
std
sbb
xor
mov
fld
push
pop
cmp
inc
ss
aaa
inc
mov
jne
mov
fcmovu
jge
xor
fld
not
xchg
sahf
test
xchg
sbb
mov
pushf
sub
mul
and
mov
jns
jb
(bad)
out
iret
mov
cmp
jno
enter
xor
nop
mov
pusha
mov
pop
cmp
and
nop
xor
xor
fild
shl
or
ss
out
xor
push
ins
cmp
xor
adc
adc
adc
and
mov
xor
fidivr
pavgw
mov
shl
jno
mov
xor
push
lahf
mov
mov
and
push
pop
adc
idiv
mov
mov
xor
outs
lds
jg
add
cdq
lock
jae
fdivr
xchg
cs
inc
test
inc
sub
dec
jno
cmp
aad
cmp
or
adc
mov
sbb
xchg
jl
call
retf
fisub
out
dec
sbb
into
xchg
in
push
adc
push
shr
or
test
xor
xlat
add
push
outs
mov
dec
sub
sub
sbb
xor
fild
test
push
out
dec
rcl
(bad)
or
btr
mov
(bad)
movs
into
jne
dec
dec
outs
mov
leave
ret
cmc
cmps
jp
(bad)
cmp
movs
std
mov
and
cld
repnz
push
mov
fs
sub
add
cmp
cmp
ds
dec
aam
pop
loope
sub
xor
aas
push
dec
fs
jecxz
push
mov
and
cli
call
jge
jae
push
lds
mov
add
cmc
sbb
(bad)
idiv
pop
inc
aad
(bad)
iret
rcl
js
and
dec
xor
push
das
jl
(bad)
mov
out
(bad)
jbe
stos
mov
sub
mov
sub
mov
xor
mov
rcl
gs
jnp
mov
push
int3
or
bound
or
mov
xor
cmps
and
mov
push
popa
push
sbb
sar
mov
inc
test
add
sbb
jae
clc
cmps
adc
stc
iret
pop
xchg
dec
popf
jb
(bad)
jno
mov
jno
sbb
std
(bad)
out
and
hlt
jmp
xlat
(bad)
jns
and
jl
cmp
rcr
imul
xor
xchg
push
adc
sahf
sub
or
cli
pop
pop
xchg
retf
das
test
pop
jle
daa
pop
cmc
sub
push
mov
push
ja
xchg
loope
adc
jmp
or
push
xor
mov
ss
fdivr
and
and
(bad)
icebp
stc
test
add
(bad)
inc
jno
or
(bad)
xchg
scas
out
aaa
pop
cmp
jo
mov
mov
test
(bad)
cmc
out
leave
enter
call
(bad)
ror
imul
mov
sub
jecxz
daa
xlat
xchg
pop
pop
jno
and
and
pop
xchg
dec
aas
or
xor
sub
es
xor
ins
lods
test
mov
stos
xchg
fld
nop
xchg
pop
or
iret
or
dec
pop
xchg
mov
dec
(bad)
or
enter
test
int3
dec
fmul
repnz
pop
leave
dec
(bad)
mov
and
or
fdiv
das
pop
mov
inc
cmps
xor
mov
sub
loope
mov
out
popf
pmaddwd
pushf
shl
cli
in
lea
or
xor
mov
xchg
outs
xchg
mov
mov
ss
scas
sbb
mov
fisttp
or
in
and
or
test
jb
cmp
push
das
out
pop
clc
aam
call
leave
lods
fcomp
jle
inc
adc
stos
mov
jns
inc
xor
mov
push
in
outs
adc
(bad)
jno
xor
rcl
rcl
cmp
push
fbld
jmp
loope
les
test
sub
nop
xchg
cwde
cli
cmp
jb
jge
fist
das
gs
out
gs
gs
dec
aaa
not
sub
sbb
jmp
inc
mov
(bad)
ins
mov
mov
cmc
lds
inc
sbb
xchg
fdiv
gs
mov
xor
dec
leave
mov
jl
dec
retf
pop
xchg
mov
iret
into
aad
xchg
pushf
adc
bound
pop
jns
fcomp
xchg
or
sub
out
sar
imul
movs
jne
bound
(bad)
cdq
add
xchg
popf
int
push
fcmove
sub
sub
inc
mov
adc
scas
push
mov
mov
pop
lds
cmp
nop
addr16
aad
xchg
leave
arpl
movs
and
add
jmp
sub
mov
arpl
or
(bad)
cld
(bad)
jae
and
sbb
gs
cmp
mov
(bad)
dec
jecxz
enter
sub
mov
ret
cmp
mov
sub
outs
(bad)
gs
xchg
or
loope
repz
push
aad
es
ins
sti
mov
push
mov
mov
cmp
push
scas
retf
(bad)
cmc
xor
jecxz
movs
pop
ficomp
jp
(bad)
out
push
adc
into
push
fsubr
into
jns
outs
mov
out
retf
cdq
ss
fild
mov
fucomip
push
xor
loopne
fld
pop
lods
sub
adc
rol
mov
fcom
outs
outs
adc
pop
mov
repz
add
(bad)
stc
inc
add
sbb
add
movs
sbb
out
pop
rcl
sub
fwait
dec
sub
test
jmp
sbb
bnd
push
pop
xor
arpl
ds
pop
push
jno
jl
sbb
xor
out
mov
iret
and
in
test
pop
adc
fstp
pop
jne
repnz
push
test
xchg
cli
adc
shr
mov
jmp
push
std
nop
lea
cmp
push
movs
xchg
loope
jae
imul
cwde
xchg
mov
xlat
enter
jmp
pop
mov
fld
push
mov
mov
test
mov
data16
sbb
mov
jmp
sub
add
dec
pop
enter
adc
nop
repz
sub
sbb
xor
stos
inc
cmp
mov
cmp
mov
inc
jne
lea
outs
or
inc
mov
iret
(bad)
or
lea
out
ret
mov
mov
dec
cmps
cli
pop
mov
xor
and
or
aas
aas
mov
int3
ret
enter
(bad)
cmp
xchg
sar
in
int
dec
stc
icebp
fldenv
test
pop
jo
mov
dec
lahf
hlt
pop
ins
pop
ret
mov
out
sub
lods
nop
out
mov
jbe
xchg
add
or
ret
pop
inc
stos
cmp
and
inc
sbb
jne
fnsave
les
sub
mov
data16
push
mov
sbb
mov
es
(bad)
jl
push
adc
sub
std
icebp
sbb
lahf
ins
pop
out
call
mov
call
jg
xchg
movs
inc
ror
sub
cmp
mov
push
retf
cwde
mov
stc
adc
jb
xlat
adc
mov
jb
inc
mov
mov
pop
push
jae
xchg
add
jae
sbb
or
pop
ins
ds
mov
jmp
cmps
inc
dec
adc
ins
pop
dec
sub
inc
xlat
jmp
xchg
dec
mov
sar
or
mov
out
sbb
xor
sbb
test
(bad)
in
aas
fs
(bad)
sub
aad
cmp
jge
cmp
fisubr
pop
out
ss
mov
jne
(bad)
loop
and
repnz
sub
aas
fldenv
push
stc
adc
cmp
jmp
scas
popa
dec
(bad)
mov
movs
stc
xor
outs
mov
and
cmps
mov
adc
and
jns
mov
jae
movs
xor
jae
adc
mov
rcr
mov
js
cmp
nop
out
sbb
stos
add
mov
and
pop
jnp
nop
push
mov
enter
aad
sub
pusha
add
test
pusha
sti
xchg
jle
xlat
cmp
xchg
push
pop
jmp
ss
sub
retf
xchg
cmps
addr16
icebp
mov
mov
sbb
pop
xchg
sbb
leave
fistp
test
or
and
xchg
lods
add
enter
dec
jnp
or
fs
xchg
repz
adc
outs
adc
rcl
repnz
fistp
jmp
stos
adc
dec
scas
mov
enter
cmp
dec
add
jmp
and
in
or
imul
iret
in
push
inc
cmp
in
and
or
icebp
add
xchg
dec
xchg
push
inc
xor
and
cdq
out
sbb
mov
push
mov
fmul
mov
mov
imul
jg
stc
out
or
cld
pcmpgtd
iret
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loope
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jae
pop
inc
in
shl
and
pop
add
mov
arpl
(bad)
(bad)
mov
cmp
fstp
pushf
out
dec
popf
ror
mov
es
outs
jb
xchg
addr16
in
cmc
aaa
mov
pop
add
cwde
dec
xchg
pop
movs
fcmovb
push
rcr
fst
adc
or
shl
xchg
mov
and
ss
movs
xchg
or
mov
xchg
pop
cwde
and
fcomp
xor
mov
adc
aas
cmp
stos
jbe
mov
(bad)
and
jecxz
adc
or
jbe
push
pusha
mov
addr16
icebp
(bad)
xor
outs
in
call
lahf
add
das
fst
inc
mov
(bad)
or
retf
fstp
cmc
cli
shl
pop
js
cmp
out
mov
les
fcmove
dec
mov
shr
inc
xchg
jl
jne
cmp
jp
fimul
call
ss
aas
test
(bad)
xchg
das
mov
mov
sahf
aaa
and
xor
push
lods
aaa
sub
xchg
xchg
sub
jnp
fcmovbe
cdq
fist
mov
add
add
and
or
test
jecxz
lock
imul
test
jle
call
mov
xchg
sbb
ret
jmp
push
jge
jle
cld
fstp
fucomip
dec
(bad)
aad
adc
push
mov
cmp
mov
mov
and
sub
mov
gs
cmp
xchg
inc
adc
vpaddw
stos
sahf
rcl
out
lock
imul
add
jp
jmp
lahf
mov
adc
repz
mov
pop
scas
mov
push
das
and
mov
or
cmps
in
arpl
inc
rcl
mov
mov
mov
xor
inc
nop
int3
mov
pop
sbb
std
call
inc
jo
aam
ins
jb
ficom
cmp
loope
cmps
(bad)
arpl
xlat
mov
(bad)
add
fisttp
xchg
aas
push
adc
pusha
aas
mov
cmp
pop
ss
xchg
test
add
je
jmp
cli
enter
inc
dec
xchg
jns
lock
ins
inc
sub
push
xor
pop
call
add
jo
loope
pop
pop
scas
cmp
lock
sub
cmp
xchg
cli
test
jo
out
test
out
push
imul
pop
daa
cdq
retf
pshufw
sub
push
xchg
cmps
stos
push
mov
mov
or
not
and
push
gs
rcl
mov
hlt
push
pop
add
jnp
test
xchg
(bad)
xchg
push
dec
xor
fadd
add
jecxz
jae
in
dec
out
call
xlat
es
pushf
ja
aad
push
xor
xor
lock
pushf
jmp
and
xchg
mov
add
inc
retf
call
es
sub
sub
mov
cmc
mov
aas
xchg
popf
frstor
pop
xchg
lock
lods
aaa
push
and
out
mov
adc
shl
ds
js
mov
mov
fsubr
aam
xchg
push
xchg
inc
push
sbb
xchg
repz
jbe
imul
or
rol
jnp
retf
shr
pop
inc
inc
add
js
mov
xor
shl
xchg
ret
sub
aas
and
adc
and
in
hlt
call
pop
fs
icebp
xchg
stos
imul
and
mov
xor
push
jl
test
and
repnz
lds
cmp
xchg
or
out
cdq
fdivp
scas
mov
inc
das
pop
sbb
jge
test
sub
stos
push
shl
mov
cmp
cmp
dec
and
cs
xchg
fdivr
scas
mov
adc
fimul
fwait
popf
data16
fisubr
fdivr
ds
mov
repnz
ss
aad
sbb
rcr
clc
outs
cmps
aas
mov
fisttp
ficomp
stos
adc
dec
fdivr
dec
(bad)
xor
mov
mov
popa
scas
pop
lea
ss
inc
jg
ja
jbe
test
mov
shl
out
cwde
inc
(bad)
fisttp
mov
ret
sar
sahf
mov
lods
in
retf
call
ins
cmp
mov
imul
pop
cdq
push
xchg
test
inc
cmp
pop
ss
dec
mov
cmp
shl
mov
scas
cmp
xlat
xor
dec
aas
cwde
jnp
and
pop
ret
outs
cmp
daa
fcomp
pushf
mov
push
dec
jae
mov
xor
add
loope
fwait
lea
add
xlat
test
(bad)
pop
daa
dec
scas
mov
test
sub
mov
sar
dec
or
popf
jno
fmul
fld
mov
mov
loope
mov
add
iret
xor
and
addr16
pusha
sub
xor
inc
cs
pusha
repz
pop
std
leave
clc
outs
jg
xchg
xor
mov
jo
inc
and
adc
test
sbb
pop
mov
outs
scas
ret
popa
mov
mov
pop
popa
popa
les
sbb
inc
xchg
dec
or
mov
cmp
adc
lds
repz
es
inc
aaa
je
push
cmp
fmul
or
aad
inc
nop
iret
or
jle
lahf
(bad)
mov
sbb
mov
in
dec
mov
jl
cmp
mov
push
cmp
aaa
push
sub
adc
dec
aas
test
mov
and
popa
add
retf
sar
test
int
adc
mov
movs
stc
jmp
add
ret
mov
fidiv
xor
sbb
adc
lock
mov
inc
aad
cmp
fcmove
sub
xchg
pop
mov
les
repnz
scas
sbb
pusha
sub
and
mov
outs
jno
mov
repz
inc
mov
cmp
ins
scas
cmps
cli
fistp
pop
rcr
inc
and
call
in
push
mov
xlat
cli
ret
and
sbb
rol
les
inc
mov
pop
add
(bad)
scas
add
mov
test
inc
lea
(bad)
mov
in
movs
mov
jge
adc
iret
push
xor
jnp
sub
fwait
sbb
mov
imul
and
pop
jmp
inc
loopne
daa
adc
stc
push
test
leave
icebp
add
gs
jmp
push
adc
mov
dec
mov
dec
xor
xlat
jb
dec
cmp
or
cmp
(bad)
sbb
dec
ds
mov
adc
jle
mov
push
inc
aad
cmp
mov
pop
ror
push
dec
test
mov
mul
inc
pusha
ror
and
or
push
sbb
fwait
scas
not
or
cmc
or
(bad)
popf
xchg
in
xchg
stos
lahf
dec
sub
fmul
mov
repz
stc
retf
aas
fs
mov
dec
repz
inc
arpl
cwde
push
aad
int3
push
cli
add
cmp
push
ja
and
and
in
std
test
add
das
(bad)
stc
jmp
pop
cmp
arpl
ss
rcr
bnd
jp
xor
push
shl
xchg
in
into
xchg
mov
loop
pop
cmp
popf
clc
push
aaa
mov
sub
xlat
stos
sbb
sub
mov
cdq
or
jbe
jp
push
and
and
rcr
nop
add
loop
pushf
movs
sub
cmps
xchg
call
mov
int3
inc
xor
ins
retf
hlt
or
icebp
(bad)
call
adc
cs
mov
(bad)
add
hlt
mov
ficomp
push
bound
iret
sbb
setg
pop
scas
das
xchg
mov
jl
inc
push
push
sub
mov
int3
mov
xchg
cmp
sbb
and
mov
cmc
cmp
mov
jo
sub
gs
sbb
cmps
cmp
or
test
sub
dec
sahf
mov
push
mov
sub
pop
inc
adc
ret
in
xor
jg
psadbw
push
ror
cld
das
mov
xor
iret
ja
es
jno
mov
fst
pop
jb
ffree
(bad)
out
test
mov
push
adc
cli
in
cmp
sbb
pop
sbb
in
sbb
jl
push
jnp
call
loope
dec
sub
sbb
and
mov
jae
mov
call
pop
retf
call
mov
fs
or
mov
int3
sbb
add
je
cmc
cdq
loope
out
out
xchg
out
imul
mov
and
pusha
adc
stos
jmp
test
jl
add
aas
inc
mov
jmp
nop
in
stc
push
(bad)
fisttp
pop
cli
rol
loop
cld
xchg
mov
ds
push
fcmovne
cmc
fcmovnb
cmp
aaa
out
sbb
das
lock
in
push
mul
outs
push
or
jns
std
sbb
or
pop
cmp
mov
mov
test
jp
scas
mov
into
inc
retf
add
mov
cmp
add
or
push
jnp
jae
or
sar
pop
inc
adc
pushf
das
lods
adc
jbe
rcr
xor
pop
xchg
sar
push
mov
xchg
gs
test
cmp
add
frstor
or
repnz
sub
sub
push
and
push
pop
pop
mov
je
sub
bound
xchg
xor
pop
mov
test
push
jle
cmps
hlt
push
mov
jb
jp
enter
(bad)
imul
stos
adc
mov
jmp
ret
test
push
aaa
jg
inc
and
repnz
retf
mov
push
ds
add
fs
xchg
sbb
shl
inc
mov
(bad)
mov
mov
xor
stos
adc
xor
pop
neg
push
add
mov
sbb
not
sub
outs
push
leave
lock
daa
out
mov
cli
xor
xchg
inc
jmp
mov
push
xor
je
ja
lea
and
xchg
(bad)
int
mov
icebp
cmp
lds
mov
xor
mov
pop
dec
loope
(bad)
xchg
mov
iret
int
push
mov
jmp
jb
popa
push
mov
(bad)
inc
mov
xchg
mov
push
xlat
cmp
aas
mov
out
movs
into
stos
clc
ror
ins
cmp
imul
jl
das
ins
inc
pop
inc
jns
push
jg
mov
adc
jae
inc
lock
xor
lock
lock
es
adc
shl
sbb
xchg
mov
xchg
popa
call
mov
stos
mov
mov
dec
cld
sbb
push
mov
shl
imul
test
jmp
out
rol
sub
push
sbb
push
clc
clc
aad
in
sub
movs
inc
sbb
jns
cmp
test
sbb
popf
mov
push
pop
sub
dec
sbb
out
cdq
mov
fmul
sti
cmp
(bad)
jae
adc
pop
inc
mov
inc
push
cwde
loope
mov
sbb
jne
(bad)
sbb
ret
sub
bound
pop
mov
ret
and
fidiv
loop
into
add
pop
push
iret
mov
jmp
cs
cmps
popf
mov
in
dec
rcr
int3
adc
std
xchg
sub
in
ror
xchg
add
bound
pop
ficomp
cmp
mov
scas
mov
xor
push
jmp
xor
jge
sbb
imul
adc
xor
mov
mov
into
or
outs
mov
jmp
sub
adc
pop
mov
mov
lods
fcom
ins
loopne
movs
popf
cmp
aad
dec
push
sbb
stos
xchg
push
pop
mov
int3
fwait
xchg
sbb
mov
iret
cmps
xor
mov
test
pop
cli
push
or
jb
dec
adc
xchg
jae
mov
dec
fdiv
xor
ins
sub
pop
nop
mov
dec
fimul
cdq
into
push
mov
mov
adc
xchg
fwait
jge
sti
(bad)
arpl
jno
shl
test
data16
into
or
xchg
sahf
mov
ret
fs
push
cdq
mov
dec
mov
cmp
outs
je
rcr
jo
xor
or
fidivr
pop
and
addr16
aam
pop
dec
jns
jge
fisubr
lods
ror
jg
iret
addr16
pop
push
fld
jl
mov
add
stos
fcom
stos
push
outs
push
add
inc
sub
rol
fmul
push
push
jns
xchg
test
ds
cld
push
mov
outs
cmc
or
inc
xchg
call
ror
iret
das
sub
call
and
jp
or
imul
xchg
xor
inc
sahf
mov
lock
mov
mov
or
xchg
jb
rcr
inc
scas
push
adc
lods
or
movs
mov
xor
mov
ja
ficomp
add
xchg
adc
aad
rcr
mov
or
sbb
loop
push
push
(bad)
cmp
push
mov
mov
mov
cmps
leave
push
jp
add
jecxz
shl
mov
mov
dec
shr
or
repz
cwde
dec
sub
jg
out
add
(bad)
stc
out
jg
stc
inc
dec
sbb
cmc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fmul
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movd
inc
push
pop
inc
in
shl
fmul
add
loopne
je
je
sbb
je
sar
cwde
out
outs
into
cwde
jmp
loope
les
xor
fnsave
jecxz
popa
iret
add
add
(bad)
aad
inc
xchg
ret
cmps
out
push
inc
daa
ja
fwait
or
jb
imul
ror
ja
scas
xlat
das
jo
xchg
jecxz
push
ds
jo
xor
or
mov
es
push
mov
cwde
pop
retf
es
xor
push
adc
fsub
mov
mov
push
hlt
lds
xor
(bad)
jl
dec
ja
into
shr
cmps
(bad)
out
xor
cmc
in
push
mov
xchg
lea
mov
push
jbe
pusha
test
mov
sbb
nop
mov
dec
mov
ret
dec
in
les
ds
jl
arpl
xchg
inc
pushf
arpl
xlat
dec
pop
dec
sbb
test
stos
cmp
outs
mov
jmp
mov
sbb
mov
push
xchg
mov
sbb
dec
out
add
xchg
fisub
pop
sub
test
mov
pop
mov
add
dec
pop
xchg
out
das
jb
jnp
stos
xchg
rol
(bad)
cmp
or
xchg
and
sub
in
outs
dec
in
dec
xchg
repz
int3
xor
repz
push
mov
push
mov
cdq
(bad)
stos
sbb
sti
inc
loopne
mov
mov
xchg
out
sub
jg
dec
loope
mov
mov
inc
ret
test
and
call
into
add
adc
pop
inc
jl
push
imul
xchg
xchg
outs
cmps
sub
pop
rcl
add
pop
add
push
leave
jno
push
ror
stos
jns
sub
jmp
push
shr
sbb
nop
loop
pop
jmp
imul
hlt
jns
fs
retf
scas
movs
stos
lahf
jle
js
cmp
xchg
fcom
addr16
mov
xor
out
mov
(bad)
add
lds
sbb
jb
stc
idiv
add
mov
fcmove
rcr
imul
jecxz
xchg
mov
cdq
mov
stc
rcr
imul
cmp
adc
js
mov
arpl
xchg
(bad)
stc
loope
mov
inc
mov
repnz
fcom
dec
sub
inc
repz
out
test
scas
jl
xchg
test
shufps
add
push
sub
xor
pushw
fcom
addr16
call
hlt
lahf
xlat
iret
jns
scas
pop
xchg
push
mov
pop
fld
lods
mov
loope
adc
mov
lds
fs
mov
pop
dec
mov
out
ins
outs
fcmovnbe
popf
iret
ins
retf
lods
dec
shl
push
pop
ss
push
test
cmp
aas
lock
dec
jecxz
call
aaa
stc
xchg
aas
ds
push
(bad)
cmp
mov
cmp
sub
fsubr
(bad)
data16
sbb
stos
xor
pop
test
sti
shr
ins
(bad)
and
mov
sbb
mov
movs
cmp
je
fdivr
xchg
out
xchg
xor
push
jb
jge
or
push
jle
sahf
popf
aaa
lock
inc
or
loope
icebp
inc
(bad)
loope
or
pop
(bad)
mov
ret
jmp
cmp
xchg
not
out
retf
into
mov
ss
mov
into
push
jle
and
xchg
or
inc
aas
add
mov
icebp
in
push
sub
jmp
call
popf
jae
sti
fiadd
mov
loopne
inc
ins
fs
nop
loop
xchg
sti
sti
call
and
mov
das
mov
inc
movs
fadd
pop
sub
xchg
jno
sub
adc
test
mov
fisub
fsubp
fcom
xor
loopne
int3
and
xor
and
fsub
neg
mov
(bad)
adc
push
dec
sub
aam
fsub
sbb
movs
ror
cwde
push
adc
xor
cmp
dec
popa
imul
je
hlt
add
xchg
call
push
xchg
std
xchg
mov
sub
sbb
arpl
mov
aad
ja
fistp
jb
cmc
hlt
call
inc
imul
retf
adc
adc
arpl
jns
mov
mov
imul
inc
fiadd
sbb
mov
call
cmp
dec
fistp
pop
jge
jb
pop
mov
lock
pop
pop
aaa
mov
mov
add
dec
popf
adc
arpl
loop
pop
pushf
sbb
loopne
call
cmp
ins
sub
lods
test
into
mov
pop
or
sub
mov
xor
pop
sub
jmp
sub
sub
push
cli
adc
adc
inc
cmp
sbb
sub
cmps
mov
mov
pop
ja
cmp
iret
or
test
inc
push
mov
ja
dec
push
inc
mov
cmp
mov
rcr
jns
fnstsw
sub
test
out
or
fs
and
shr
lea
cmp
sub
push
stos
leave
(bad)
sti
movs
repz
adc
sbb
daa
inc
ja
mov
dec
lods
sbb
call
clc
outs
add
aaa
sub
inc
ins
pop
sub
inc
dec
ja
(bad)
scas
push
push
mov
mov
call
pop
jne
mov
ss
test
jle
adc
jnp
pop
push
stos
inc
rcl
cmp
js
xchg
popa
fcom
push
dec
dec
push
mov
inc
fisttp
fsub
inc
sti
jbe
(bad)
mov
out
imul
dec
sbb
and
sbb
pop
retf
pop
mov
jl
jl
sub
sar
mov
hlt
lahf
nop/reserved
push
fbld
mov
data16
fimul
xor
mov
and
jmp
mov
in
inc
mov
std
test
mov
inc
xor
xchg
add
xor
xor
cmp
stc
xchg
inc
sti
push
mov
clc
aaa
(bad)
daa
xor
mov
pop
mov
fcomp
push
pop
outs
aad
push
adc
js
xor
sub
pop
pop
sub
mov
and
cs
mov
lods
aad
mov
sub
(bad)
pop
xchg
sub
inc
mov
jbe
sbb
cmps
jg
pop
pop
and
dec
pop
jp
sar
pop
or
mov
stos
pushf
pop
fwait
dec
xor
cwde
xchg
dec
(bad)
xchg
fs
push
xchg
sub
and
mov
dec
das
pop
fisttp
jb
or
mov
and
xor
hlt
stos
iret
mov
push
stos
xor
je
neg
push
xchg
and
cmc
sub
xor
adc
mov
fucomp
(bad)
adc
push
or
scas
xor
push
push
shr
mov
mov
add
add
jmp
(bad)
pushf
gs
sbb
jo
fadd
xor
xchg
popf
push
pop
dec
repnz
xchg
shld
push
or
test
jno
scas
les
(bad)
stos
mov
cli
stos
gs
mov
dec
jle
call
idiv
ja
ins
mov
lods
and
jno
repnz
out
je
mov
addr16
scas
faddp
cmp
fwait
cs
lock
mov
pop
mov
sub
aaa
es
rcr
ins
jnp
mov
mov
jae
jne
xchg
aad
dec
mov
imul
mov
outs
inc
push
jmp
push
jbe
fisubr
ja
rcl
xchg
pop
stos
inc
mov
sbb
sbb
sbb
test
xchg
(bad)
jle
or
mov
bnd
fisubr
retf
or
dec
neg
push
mov
pop
mov
out
(bad)
mov
daa
pusha
mov
pop
mov
jbe
or
dec
or
sub
add
push
cmp
scas
mov
or
outs
xchg
arpl
aas
cmp
out
sbb
and
pop
jno
fcmovnb
bound
adc
test
les
aam
pushf
ins
cmp
push
rsm
std
push
call
xor
inc
mov
xchg
imul
mov
ja
add
dec
cmp
or
sub
ret
scas
in
mov
daa
xchg
push
outs
imul
sbb
and
inc
or
outs
mov
sub
pop
add
xor
cwde
jecxz
push
xor
add
sub
aaa
ficomp
push
neg
enter
cli
lahf
(bad)
mov
aam
pop
jbe
mov
clc
or
cmp
xor
and
es
mov
add
sbb
mov
sub
fadd
into
or
loope
sub
adc
jge
push
aad
(bad)
int3
xchg
or
nop
retf
hlt
repz
rol
jl
xchg
cld
pop
sub
push
jne
mov
mov
pop
pop
mov
jp
je
inc
push
repz
fsubp
mov
xchg
sub
pop
and
xor
dec
xor
mov
push
mov
add
pop
mov
stos
sbb
pop
sub
clc
addr16
adc
pop
jae
les
stc
cmp
pop
dec
dec
call
mov
cmp
shl
(bad)
mov
pop
stos
push
jbe
mov
sahf
xchg
retf
add
jbe
scas
push
dec
stos
and
jg
(bad)
add
and
adc
scas
push
pop
adc
cmps
mov
repnz
push
dec
dec
xchg
leave
out
mov
aaa
ins
retf
mov
or
fnstsw
mov
xchg
ins
jle
add
dec
jmp
stos
cmps
mov
inc
lahf
pusha
rol
jp
push
or
loope
clc
jae
mov
lods
daa
sub
sbb
jg
inc
mov
xchg
cmp
inc
daa
push
jg
and
mov
(bad)
xor
shr
test
into
cmps
cli
(bad)
shr
stos
push
sti
pop
cmps
mov
pusha
jecxz
push
ins
jne
xor
fst
es
outs
push
push
sar
fcmovbe
ficom
nop
inc
add
adc
add
jg
jb
push
xor
(bad)
cmps
sbb
inc
sub
jle
ins
cli
sub
ror
sbb
fiadd
xor
jecxz
push
mov
ds
lock
loope
les
xor
inc
out
jbe
stc
xchg
sub
aad
jne
inc
test
aas
sub
test
lahf
push
inc
daa
cwde
add
inc
les
(bad)
cmp
jne
cmp
into
sar
ja
and
push
mov
ror
jnp
leave
pushf
mov
inc
ret
add
inc
jno
push
mov
dec
jae
mov
movs
cmp
mov
jmp
xor
cs
lods
mov
sub
ins
(bad)
mov
inc
loope
icebp
xor
dec
sub
sub
(bad)
out
lahf
leave
je
push
mov
xchg
mov
loope
icebp
fadd
ins
inc
retf
mov
idiv
inc
test
test
gs
or
jmp
in
rcl
cmps
es
je
lods
sbb
inc
or
push
hlt
ror
outs
out
jmp
ja
and
call
jl
shl
lds
cmp
stos
out
sub
add
cmc
xchg
pushf
stc
dec
inc
or
inc
sub
push
pop
dec
mov
es
test
cmp
jae
push
outs
aam
push
dec
adc
dec
or
fwait
mov
imul
fcomp
pushf
cwde
popa
mov
ja
push
(bad)
xchg
in
out
pop
retf
pop
sbb
sub
pop
data16
sub
pop
stc
xchg
and
bound
push
daa
sbb
cmp
fst
cli
jl
mov
jnp
sub
mov
stos
mov
stos
jecxz
loopne
ins
pushf
imul
mov
adc
inc
daa
fiadd
xor
hlt
shl
add
xor
or
push
jecxz
pop
jne
ucomiss
test
inc
xor
mov
sub
and
mov
scas
jns
movs
jmp
dec
jne
loope
rcl
jo
mov
mov
rol
fs
pop
push
and
mov
(bad)
mov
nop
sub
out
push
mov
mov
push
adc
dec
or
jmp
mov
adc
xchg
push
rcl
dec
mov
xor
xchg
sbb
and
test
dec
leave
fdiv
pop
out
mov
mov
hlt
mov
sti
inc
pop
add
xchg
scas
add
call
out
(bad)
data16
or
sub
cli
sti
mov
in
sti
and
addr16
aad
enter
xchg
fwait
call
mov
popf
call
dec
cmps
adc
adc
dec
cwde
pop
or
ret
add
cwde
les
sbb
sub
push
mov
xor
or
aad
repnz
xchg
push
imul
mov
add
push
scas
pop
mov
xchg
in
xchg
add
out
ficomp
fimul
pushf
inc
push
jne
or
sub
out
test
pop
add
mov
aad
xchg
push
loope
fwait
aad
xor
lods
lods
pop
cmp
mov
or
mov
mov
push
lea
pop
dec
push
sbb
cwde
retf
daa
in
push
(bad)
mov
in
dec
cmps
mov
push
cmp
and
popa
mov
xchg
and
xor
or
clc
out
jg
stc
out
jg
lahf
add
inc
push
popf
xchg
shl
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jecxz
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jne
pop
inc
in
shl
and
pop
add
aaa
(bad)
aam
out
out
xor
ins
mov
dec
mov
xor
(bad)
mov
call
dec
pop
xchg
shl
aas
jbe
cli
ds
repz
pop
jg
or
inc
cmps
sub
add
stos
je
js
neg
retf
adc
les
mov
mov
pusha
inc
es
aam
hlt
movs
push
push
jnp
pop
mov
test
js
or
popa
mov
xor
ss
cld
jo
xor
mov
sahf
aas
adc
das
int3
cli
call
jno
pop
mov
adc
(bad)
xchg
out
mov
mov
ja
pop
movs
shl
imul
ins
jg
hlt
add
lahf
lahf
jns
mov
inc
push
retf
cmp
sbb
adc
cmp
xor
cmp
or
push
inc
call
cld
dec
cmp
retf
in
dec
mov
movs
push
xchg
daa
cmps
and
cmp
mov
cwde
and
sub
in
inc
add
out
aas
lds
lea
test
adc
fcomp
aas
or
in
mov
test
sub
(bad)
sbb
or
or
and
sub
psubq
pop
lds
pop
sbb
test
jmp
mov
stos
push
mov
out
inc
jnp
jg
out
mul
cmp
and
add
pop
fscale
out
adc
xchg
aam
ins
mov
clc
shl
leave
stc
(bad)
sbb
into
mov
mov
xchg
fcomp
mul
imul
test
aad
jecxz
lods
jl
cli
or
pop
test
fs
fwait
jl
xor
in
outs
push
popf
jecxz
mov
dec
popf
xchg
jmp
std
fs
pop
mov
pop
cli
xor
test
xchg
mov
adc
ins
mov
jp
xlat
adc
push
dec
repnz
push
test
(bad)
sbb
cdq
adc
js
xchg
mov
add
pusha
add
push
push
mov
ja
pop
push
or
std
inc
xchg
les
dec
rcr
jge
xchg
mov
cmc
aam
nop
cs
fcomp
xor
std
mov
test
inc
into
dec
inc
pop
popf
push
pushf
scas
sbb
sti
shr
mov
jae
push
cmp
sub
xchg
aaa
cmps
mov
das
jo
loope
pushf
stos
add
pop
iret
sub
xor
jg
jp
and
sahf
bound
enter
js
repz
into
fiadd
pusha
shr
add
mul
cmc
fldenv
test
out
dec
js
jp
cmp
push
fstp
ret
mov
push
repnz
ins
dec
inc
mov
ret
dec
sub
sbb
jle
imul
lahf
out
push
popa
sti
and
push
sub
movs
jnp
fist
add
aad
add
pusha
xor
xchg
sub
add
inc
lods
cli
aad
jbe
jmp
cmc
add
aad
sti
out
rol
iret
fimul
outs
mov
ja
mov
cmps
and
cs
fild
pop
sti
bound
cdq
cwde
clc
jle
popf
mov
in
jne
mov
or
and
adc
sti
(bad)
gs
jne
and
adc
(bad)
out
adc
cmp
cmp
jge
pushf
aaa
sbb
shl
mov
pop
sub
sti
jns
dec
xchg
fistp
xchg
mov
adc
mov
pop
fwait
aam
jge
clc
jns
cmp
mov
jmp
ins
mov
jp
or
push
lea
fadd
jns
(bad)
lods
icebp
xchg
ret
aam
cmp
mov
jmp
fldenv
sbb
bound
pop
xor
hlt
push
shl
xchg
and
movs
xchg
pop
adc
test
ja
movs
adc
lods
add
sub
inc
cmps
fs
jmp
out
pop
scas
ror
pop
ror
xor
fs
loope
imul
sbb
daa
outs
stc
ror
mov
dec
sub
inc
mov
pop
mov
iret
aad
fs
push
and
xchg
call
inc
push
cmc
(bad)
(bad)
ret
push
xor
push
inc
ret
push
dec
jmp
sub
movs
adc
sub
stos
pop
loopne
inc
cmp
std
lea
dec
arpl
retf
and
jp
icebp
and
test
jmp
fsub
int
sbb
sub
mov
daa
(bad)
jg
movs
addr16
aad
arpl
cdq
sub
arpl
jge
repz
int
xor
jmp
pop
xchg
cmp
push
(bad)
in
out
shl
mov
mov
rcl
pop
xchg
in
into
pop
ds
cmovnp
inc
sti
addr16
dec
jmp
jl
data16
pop
test
and
in
sub
das
dec
dec
call
sub
ins
mov
mov
adc
jbe
push
enter
dec
aaa
dec
xchg
aad
lahf
scas
push
dec
jmp
mov
xchg
loope
adc
stos
sbb
add
loopne
lods
daa
push
xchg
(bad)
mov
std
test
cmps
dec
test
jp
xor
sbb
aas
mov
addr16
ins
jb
sub
dec
bound
and
nop
inc
push
repnz
es
loop
mov
fs
lea
inc
and
ds
cwde
pop
mov
lock
mov
mov
add
pop
cmp
clc
icebp
xchg
pop
mov
daa
sub
dec
cdq
fsincos
scas
dec
(bad)
mov
ss
jmp
mov
fst
xor
xchg
jne
dec
or
mov
fs
sbb
js
inc
retf
stc
xchg
cli
sub
call
mov
sbb
mov
mov
jl
sub
jmp
and
or
push
lea
in
mov
mov
lods
dec
movs
retf
or
push
ins
dec
jmp
sbb
(bad)
push
mov
pmuludq
scas
dec
mov
test
clc
push
sbb
sub
xchg
xchg
pop
xor
int
dec
inc
push
adc
fidivr
add
cwde
stos
mov
pop
shl
ins
inc
add
imul
mov
bswap
arpl
imul
daa
mov
dec
xor
hlt
fisttp
fcmovb
lods
push
and
jbe
je
add
cmp
imul
je
adc
adc
(bad)
cmp
ins
push
xor
cmps
hlt
sbb
push
jmp
outs
dec
test
arpl
adc
scas
push
movs
jbe
shr
arpl
in
outs
adc
out
in
cmp
(bad)
test
or
sbb
jnp
xchg
int
ret
retf
in
cmp
xchg
mov
mov
ds
push
push
lods
xchg
repz
add
or
cmps
call
inc
or
sub
mov
push
adc
push
shl
pushf
pop
xchg
mov
sbb
jns
ret
cmps
push
aad
ins
pop
mov
mov
xor
ret
xor
std
test
lock
sbb
push
cmc
pop
mov
inc
loope
icebp
test
shr
push
out
in
lods
mov
dec
movs
sbb
xchg
dec
sbb
js
aad
pop
jge
dec
or
jmp
inc
push
js
iret
ins
mov
(bad)
int3
push
imul
mov
out
retf
xor
js
mov
pop
and
jmp
sar
retf
hlt
xchg
shl
and
in
add
rcr
mov
dec
xor
fiadd
jmp
add
or
inc
mov
call
cmp
xchg
dec
pop
and
lods
pushf
imul
ds
adc
and
aad
pop
(bad)
rol
loope
sub
leave
xchg
jae
mov
pop
ret
(bad)
call
repz
imul
jmp
rcr
retf
ds
and
and
jge
jo
fcmovnu
es
retf
sub
mov
xor
icebp
imul
xor
movs
dec
pop
cmp
fld
push
cmp
adc
call
test
mov
test
sbb
xor
or
inc
mov
outs
pop
gs
mov
(bad)
cld
pop
xchg
lock
or
add
mov
xchg
add
inc
mov
push
dec
pushf
cmps
inc
mov
mov
add
jge
cmp
imul
adc
cld
sbb
push
fstp
outs
test
(bad)
mov
imul
jmp
xlat
gs
daa
fcmove
repz
inc
mov
sbb
in
dec
fwait
sub
iret
out
add
mov
fisub
sub
sub
movs
fcom
fistp
lods
jle
mov
jno
sar
mov
jno
mov
cmps
retf
aaa
inc
imul
movs
dec
clc
(bad)
retf
push
jae
(bad)
fwait
or
inc
lea
mov
add
mov
mov
and
mov
int
loop
jmp
sbb
sbb
dec
arpl
pushf
mov
jb
jns
jbe
pushf
ss
jno
stos
cmp
popf
mov
jne
mov
icebp
lahf
retf
inc
push
call
scas
inc
aad
cwde
xor
xchg
pop
pop
test
test
out
dec
jl
lea
in
or
rcr
push
mov
das
loop
popa
fwait
xchg
push
(bad)
mov
mov
xchg
mov
mov
loop
adc
pop
inc
add
loopne
or
dec
dec
add
ret
or
or
mov
dec
es
sub
push
test
fcomip
pop
push
aad
loopne
popf
fwait
into
stos
out
leave
jmp
or
fld
mov
fldl2e
jns
xor
ins
add
xchg
shl
or
loopne
push
fdiv
sub
jp
inc
push
adc
aad
xor
(bad)
in
ret
jge
pop
rcr
iret
or
ror
daa
sbb
ret
dec
pop
imul
mov
sbb
mov
or
pop
aas
jb
dec
fistp
xor
sbb
xchg
push
in
cwde
mov
neg
fidivr
mov
mov
mov
dec
jmp
and
dec
shl
imul
jne
add
imul
push
pop
repz
shl
mov
inc
outs
fmul
push
jl
mov
jg
mov
pop
jae
in
cmp
ret
and
adc
mov
mov
and
movs
js
fadd
mov
xor
dec
pop
adc
addr16
loop
sbb
sub
fs
gs
popf
aaa
or
add
inc
xchg
add
cmps
mov
pop
outs
sub
lods
sub
fst
loop
icebp
pop
or
and
mov
sbb
(bad)
idiv
fdiv
pop
inc
pop
mov
cmc
test
cmc
das
idiv
pushf
fnsave
into
add
or
nop
jno
and
movs
jmp
rcr
das
pushf
into
inc
fwait
pop
(bad)
jns
dec
int3
sar
jns
mov
push
sbb
shl
jecxz
popf
js
pop
and
dec
outs
sbb
and
inc
je
movs
in
push
pop
es
leave
test
pop
pushf
adc
ret
xchg
cmp
xchg
sub
daa
mov
mul
jge
sub
cmps
(bad)
mov
idiv
dec
xchg
fisub
mov
stos
sar
push
(bad)
jg
into
(bad)
in
mov
fnsave
out
test
jae
inc
sub
adc
pop
sbb
xor
or
mov
fnstenv
stos
(bad)
pop
ins
daa
rcl
sti
lea
fcom
ins
mov
clc
sahf
cmp
mov
mov
cmps
sbb
bound
push
retf
mul
mov
mov
ret
imul
rcl
ins
cld
push
xor
and
es
jb
cdq
fdivr
stos
dec
in
fdivr
pop
fldcw
pop
cmp
(bad)
sahf
adc
sub
ss
jecxz
cs
sbb
jl
ss
lahf
adc
leave
test
scas
retf
mov
dec
daa
cmp
dec
pushf
and
mov
mov
xor
pop
push
or
adc
fcom
jl
in
repz
popa
popa
xchg
pop
mov
cld
xor
pop
jle
ret
xor
(bad)
in
and
test
dec
pop
adc
cmc
pop
push
ror
aam
push
call
push
ror
pop
shl
ficomp
scas
loopne
(bad)
loope
sbb
stos
or
jb
push
push
in
mov
mov
jns
sub
adc
mov
mov
and
in
daa
fstp
sbb
das
(bad)
inc
inc
pop
push
out
test
or
test
pop
jg
mov
and
outs
mov
pop
movs
ja
jle
ret
inc
mul
dec
jne
ret
dec
cmp
imul
pop
imul
popa
jmp
scas
retf
push
cwde
arpl
cmps
pop
fadd
cs
mov
inc
push
xchg
push
jnp
xchg
(bad)
nop
sub
mov
push
fwait
(bad)
je
mov
fidivr
lds
cdq
jle
iret
and
mov
inc
add
dec
or
cmp
mov
int3
mov
into
mov
scas
das
fwait
sbb
into
or
in
xchg
std
dec
ficomp
mov
push
sub
js
dec
sbb
fistp
mov
dec
add
jno
inc
pushf
les
fistp
shl
mov
xchg
ffreep
mov
adc
fldcw
jns
loope
sub
ds
push
xchg
addr16
sub
outs
or
repz
aas
(bad)
cld
repz
aas
call
jnp
mov
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loopne
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jb
pop
inc
in
shl
and
pop
add
test
jo
iret
je
mov
bound
pushf
outs
xchg
xchg
push
jae
int
ja
sbb
ret
cmps
sti
sti
cld
sbb
(bad)
std
or
add
cmp
xchg
fsubr
scas
test
and
aam
shl
sbb
inc
cmps
ret
loope
pop
(bad)
mov
sub
mov
jbe
xchg
cmp
xchg
frstor
inc
rol
and
mov
sbb
(bad)
mov
sbb
or
pop
ins
leave
and
cmp
jb
mov
ficomp
mov
ficom
movs
sar
jns
inc
cdq
jmp
pop
test
out
jae
test
push
hlt
mov
pushf
sar
cmp
mov
movs
mov
pop
gs
sub
xchg
(bad)
inc
test
leave
jbe
sub
arpl
int3
ror
pusha
and
inc
add
or
inc
mov
(bad)
cmp
mov
pop
out
fwait
repz
xor
xchg
mov
lods
loop
dec
aas
leave
and
rol
out
sbb
mov
loopne
movs
fild
pop
stc
(bad)
das
and
xchg
mov
xchg
mov
and
mov
outs
push
add
test
dec
test
push
ins
sbb
dec
xor
arpl
jnp
shl
push
(bad)
fiadd
test
ret
inc
fsubrp
outs
push
push
sub
cmc
test
shr
cmp
cdq
and
(bad)
bound
mov
dec
lea
or
xor
dec
movs
xor
test
and
push
jno
dec
or
test
sbb
and
or
fwait
adc
(bad)
repz
xor
cmp
adc
mov
jp
sti
mov
xor
inc
or
sub
lea
enter
inc
push
rcr
push
clc
pop
cmc
push
mov
mov
(bad)
jae
outs
pop
sbb
(bad)
ror
and
(bad)
fidivr
aaa
xchg
sub
idiv
ret
aam
je
xor
mov
cmps
lds
or
xchg
jne
jno
scas
adc
adc
sbb
mov
popf
fdiv
lods
les
ins
inc
mov
cwde
mov
inc
pop
repz
cmp
xchg
cld
or
jecxz
call
mov
aam
sbb
out
frstor
out
ffreep
and
mov
inc
loop
push
pop
cmp
mov
and
mov
mov
mov
addr16
or
(bad)
pop
loop
ds
ja
stos
pop
popa
jnp
(bad)
call
mov
mov
sub
add
cli
imul
sbb
inc
or
mov
ret
xor
mov
in
cli
rcl
mov
mov
loope
xchg
call
mov
punpckldq
(bad)
movs
test
popa
into
adc
mov
movs
lock
int3
cmp
fabs
inc
clc
(bad)
jge
in
fnstsw
dec
cs
mov
in
out
stos
sbb
adc
out
jecxz
adc
xchg
daa
les
fs
pop
jmp
adc
daa
mov
bound
push
cli
mov
ins
retf
and
cmp
xchg
push
mov
and
jb
or
push
inc
mov
sti
push
inc
fdecstp
xchg
setbe
repnz
ror
scas
mov
out
ins
jae
pop
xchg
and
xchg
dec
dec
sub
int3
mov
loop
dec
shl
rol
cmp
and
push
inc
into
loopne
sti
pop
push
test
sub
dec
mov
xor
scas
rol
bnd
daa
lock
adc
lods
sub
daa
cmps
mov
js
enter
ja
pop
call
(bad)
pop
mov
(bad)
mov
jle
mov
rcr
and
cli
cmp
or
lds
add
jne
pop
test
mov
dec
(bad)
jb
retf
imul
test
ret
mov
pop
xor
lahf
fild
push
aam
jae
jge
sub
enter
mov
stc
cmp
fstp
mov
push
mov
add
lahf
ret
mov
dec
pop
stos
xchg
das
rol
xor
cmps
outs
xchg
movs
fucomp
out
shr
add
rol
sub
jle
mov
retf
in
(bad)
popf
push
mov
sbb
clc
stos
push
jmp
push
fsubr
clc
(bad)
movs
(bad)
sbb
cmp
inc
mov
ror
inc
mov
inc
outs
xchg
(bad)
lds
mov
dec
mov
(bad)
repz
lea
mov
pop
out
cs
xor
(bad)
push
std
cld
xchg
lea
and
mov
xor
inc
push
ror
aas
scas
aad
sbb
loopne
repz
adc
test
jb
test
popf
into
dec
push
dec
jno
and
(bad)
in
or
mov
lods
aaa
cwde
pop
cld
mov
adc
jecxz
jmp
fnstenv
call
(bad)
jecxz
xchg
xchg
in
cmc
movs
popf
push
cmps
mov
out
jnp
xchg
popf
push
sub
rcl
out
sbb
hlt
pop
and
dec
inc
mov
push
jg
or
xor
mov
dec
ins
xor
mov
mov
das
jp
xchg
(bad)
daa
(bad)
dec
fmul
fisub
jg
test
repz
shr
push
nop
enter
mov
in
adc
cdq
push
imul
mov
ins
sub
jo
js
movs
sbb
push
xchg
mov
ror
out
(bad)
cld
(bad)
mov
add
jle
mov
ss
test
cmps
jne
xor
repnz
adc
test
adc
fs
jmp
in
add
sti
cmp
leave
xchg
ret
shl
sbb
inc
sbb
push
pop
stc
sub
add
push
jle
(bad)
mov
push
movs
push
mov
cld
es
aad
int3
xchg
pop
mov
rol
xchg
arpl
xor
adc
and
sub
movs
cmp
pop
jle
and
cmp
(bad)
jb
mov
pusha
or
std
ret
cs
dec
test
loop
inc
push
arpl
add
cli
ret
std
push
mov
mov
ror
push
enter
dec
cmps
xlat
mov
xchg
aad
cli
sahf
dec
aas
test
fucomp
je
test
xchg
mov
repz
sbb
or
lods
add
xchg
pop
in
xchg
push
scas
lock
sbb
xor
pop
stos
mov
or
cmps
je
mov
movs
shr
mov
and
push
xor
xor
loopne
mov
xchg
stos
movs
popf
icebp
inc
xor
test
cmovge
sub
lods
pop
xchg
or
push
shl
movs
xor
pusha
fstp
ror
ins
outs
cdq
nop
test
sub
leave
inc
mov
(bad)
sub
mov
dec
push
inc
jbe
sti
cmp
ss
cli
sub
push
call
icebp
lock
loopne
aam
jae
mov
xlat
pop
mov
clc
cmps
repz
cmc
jae
mov
shl
lea
or
xchg
ss
mov
xor
fs
jo
cmp
push
sbb
cwde
lock
(bad)
mov
hlt
les
into
xor
aad
lock
rol
test
inc
and
sahf
repz
es
les
shl
mov
inc
fimul
into
fisttp
mov
(bad)
data16
loop
inc
mov
ins
push
fild
inc
test
xchg
fnstcw
mov
fisttp
adc
or
and
test
fisub
pop
jg
dec
xchg
loopne
xor
pop
fistp
(bad)
fnstsw
in
cld
loop
push
xor
sub
sahf
or
ret
mov
pusha
mov
cmp
(bad)
int3
dec
inc
std
loopne
imul
hlt
out
fiadd
push
sub
jmp
hlt
and
js
or
dec
ss
jns
pusha
les
or
jns
jecxz
nop
bnd
mov
(bad)
ficomp
scas
test
clc
xchg
shl
xchg
cmp
xchg
push
xchg
fwait
addr16
cmovle
rcl
stos
cs
add
shr
add
mov
or
cmp
loop
pop
repz
aas
cmp
add
push
pop
daa
dec
inc
pushf
test
in
dec
or
imul
and
adc
mov
leave
call
into
push
out
sub
in
xlat
movs
cmps
sahf
mov
mov
dec
ret
mov
add
xor
je
imul
xchg
out
push
addr16
test
jmp
mov
out
frstor
std
outs
pop
imul
add
aas
stos
adc
std
popw
sub
outs
imul
fcom
and
fmul
js
fdiv
cmp
fcom
jno
bound
popf
sbb
mov
fsub
nop
mov
out
imul
pop
inc
push
or
call
mov
(bad)
mov
cmc
mov
dec
in
jnp
lahf
aaa
sub
test
sub
xor
int3
xchg
pop
push
loope
mov
mov
fbstp
cld
add
std
movs
test
shl
icebp
xor
push
sub
mov
lahf
dec
dec
sbb
je
and
mov
loopne
sub
cli
or
cmp
rol
rol
sbb
outs
xor
call
dec
mov
test
fwait
or
ss
mov
cmp
popf
test
in
cmp
and
cdq
sub
dec
in
mov
xchg
adc
and
ds
lds
dec
pop
nop
int
sbb
jmp
push
push
mov
dec
mov
push
mov
push
jb
adc
sbb
pop
cmps
push
xor
or
out
mov
sub
rol
dec
outs
test
xor
and
lahf
cmc
and
mov
and
lods
cli
dec
inc
pop
push
stos
aas
pop
pop
pop
in
dec
and
sbb
jl
out
adc
ret
fld
or
pushf
fstp
inc
cs
sub
and
cmps
shl
push
jp
and
ror
xor
xor
leave
loop
je
inc
and
or
inc
mov
pusha
jle
cld
and
or
push
and
or
scas
pop
mov
lods
mov
fs
mov
push
lahf
mov
movs
int3
cmp
not
ja
sub
test
xor
cmc
lock
jecxz
mov
pop
rcl
iret
stc
and
jl
or
retf
mov
sbb
aas
hlt
inc
(bad)
in
ja
js
sbb
test
add
add
test
rep
sub
jmp
push
lock
call
movs
(bad)
arpl
add
push
outs
(bad)
rcr
jl
ins
sbb
(bad)
pop
push
icebp
mov
fstp
iret
jp
add
(bad)
icebp
xchg
(bad)
and
out
push
sahf
mov
cmp
or
int
mov
xchg
retf
sbb
data16
mov
add
jnp
push
jge
sbb
repz
mov
dec
mov
or
ja
sahf
fnstsw
xchg
pop
mov
out
mov
gs
xor
ins
adc
les
add
sbb
fild
pop
shl
mov
fild
mov
test
fsubr
jno
cmp
xchg
sbb
imul
add
test
cmp
or
loop
xor
add
int3
inc
add
mov
xor
add
mov
adc
or
mov
outs
out
jbe
push
mov
adc
scas
mov
xchg
adc
jl
repz
pop
push
and
js
lea
loop
dec
add
jle
sti
lock
sbb
adc
outs
ds
add
xor
mov
inc
out
nop
xchg
ficom
adc
mov
(bad)
pushf
or
retf
add
inc
int3
aad
mov
push
test
out
out
lods
inc
jmp
imul
pushf
test
mov
mov
movs
in
mov
pop
into
jmp
mov
cmp
out
out
sahf
lea
adc
jl
inc
shr
fdiv
movs
lds
ret
inc
dec
shr
test
dec
addr16
test
popf
add
jnp
jno
xlat
mov
mov
movs
hlt
push
sbb
adc
mov
sar
(bad)
repz
loope
cmc
imul
retf
jecxz
cmps
jne
stc
repnz
retf
std
aam
jg
outs
int
int
add
sub
add
aaa
lahf
mov
ins
sub
jle
push
push
adc
cmps
out
pop
mov
adc
xchg
ret
pop
mov
jl
mov
icebp
xchg
xchg
ins
stc
fst
mov
call
(bad)
enter
in
xchg
fwait
rcl
mov
in
in
fcomi
scas
mov
and
in
dec
je
or
adc
mov
repz
shr
or
cld
xchg
sahf
pop
sub
pop
sub
loop
mov
mov
pop
pop
dec
dec
popa
ret
icebp
dec
pop
xchg
jb
mov
in
add
mov
and
fsub
push
adc
aam
add
jo
xchg
dec
xor
jae
fdiv
jo
and
repnz
sar
fidivr
loopne
(bad)
mov
ror
sti
mov
inc
repz
mov
sub
jge
cmp
sub
clc
out
jg
stc
out
jg
aas
add
jl
cwde
call
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loope
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jae
pop
inc
in
shl
aam
add
loopne
pop
fcomp
xchg
inc
mul
cmp
mov
and
retf
sbb
jne
xchg
cmp
cmp
fldpi
mov
cmps
jae
fnstenv
mov
jg
std
mov
add
loopne
xchg
sub
dec
cmc
xchg
stos
ins
sub
jo
sub
cmp
and
pop
push
xchg
mov
inc
jne
sub
test
adc
mov
pop
aad
mov
xor
mov
mov
pusha
jle
mov
(bad)
bound
add
int
les
mov
xchg
aam
in
adc
test
xor
xchg
jo
fimul
clc
jae
mov
xchg
xchg
jge
mov
sub
das
and
fisttp
mov
and
dec
xor
mov
repz
out
inc
pop
pop
push
out
or
(bad)
xchg
mov
jecxz
movs
mov
pop
das
imul
mov
jmp
pushf
repz
sbb
mov
mov
into
nop
adc
les
lods
mov
leave
movs
jbe
hlt
stos
cmps
adc
or
xlat
nop
aad
shr
les
fidivr
cmp
mov
stc
retf
data16
xchg
cmps
mov
mov
push
xchg
jmp
pop
sbb
mov
mov
and
sub
jmp
sub
rcl
lods
inc
in
or
fidiv
outs
lods
aad
pop
push
pop
pop
push
lods
push
xor
es
mov
dec
pop
inc
pop
xlat
stos
shl
push
ins
fbld
and
in
hlt
lods
adc
fnsetpm(287
sbb
inc
xchg
xchg
data16
imul
imul
iret
mov
fmul
push
pop
cmp
jecxz
mov
mov
and
mov
cwde
push
and
mov
jnp
rcl
mov
jle
outs
sti
mov
dec
cwde
mov
push
lods
div
pop
xor
pop
std
(bad)
pop
test
jbe
dec
scas
icebp
pop
sbb
addr16
imul
das
(bad)
into
call
or
pop
rcl
add
js
aas
xchg
(bad)
xor
add
js
mov
mov
mov
inc
sub
push
dec
mov
and
call
push
stos
adc
mov
mov
or
xor
outs
int
xchg
mov
or
fldcw
mov
mov
xchg
outs
call
sbb
fisub
xchg
lods
mov
sub
adc
ror
sub
imul
mov
ret
cmc
scas
in
sub
xchg
arpl
sub
jmp
std
shr
iret
adc
inc
mov
pop
sbb
shl
ds
out
outs
push
loope
mov
add
xor
mov
mov
dec
push
stos
push
push
mov
push
(bad)
div
ja
or
jg
jmp
pop
jno
outs
xchg
test
adc
fst
in
mov
xchg
lods
repz
mov
xor
es
nop
jmp
push
fld
or
mov
sar
aas
clc
sbb
addr16
or
cmp
sub
pop
sar
jnp
jl
xchg
es
jecxz
mov
shl
mov
sub
mov
xchg
or
sub
jae
sbb
pop
jbe
pop
dec
fnstcw
add
push
ficom
push
movs
adc
(bad)
sbb
addr16
mov
ds
jl
xor
xchg
cdq
push
sbb
ja
mov
out
mov
imul
and
dec
or
pop
jg
mov
cmp
dec
cld
and
lea
cmp
mov
xchg
out
call
mov
fidivr
gs
ins
loop
dec
inc
out
sbb
jl
xor
leave
jne
add
(bad)
ins
mov
mov
pop
fcom
inc
das
inc
mov
ror
das
mov
(bad)
pop
mov
loope
mov
mov
enter
and
dec
rol
pusha
inc
test
jns
sub
ins
xor
add
and
mov
dec
movs
(bad)
xchg
fdivr
retf
add
and
iret
sub
hlt
jne
nop
lods
adc
out
cmp
jmp
repz
aaa
pop
retf
jl
aas
pushf
cld
call
adc
test
adc
test
loop
(bad)
dec
jl
in
ds
popa
hlt
add
test
test
push
lea
add
xlat
inc
je
add
jmp
outs
xor
dec
icebp
push
sar
add
repnz
ret
push
mov
dec
push
mov
stc
sar
mov
push
popa
sbb
and
sti
push
ins
add
xchg
out
ins
xor
sti
mov
outs
cmps
inc
jno
mov
inc
push
and
int
retf
ret
pushf
adc
mov
(bad)
pop
push
sbb
sbb
cld
(bad)
clc
pop
(bad)
cwde
mov
jge
clc
mov
repnz
enter
inc
cmp
cmp
cmp
fidivr
stc
enter
mov
repnz
push
popf
je
jne
clc
test
xor
pop
cmp
mov
cmps
jmp
sub
into
pop
(bad)
mov
xchg
iret
fist
adc
aaa
pop
mov
(bad)
fld
lock
in
(bad)
or
test
sti
dec
dec
sti
inc
fisttp
or
out
xor
inc
or
xor
sub
add
out
outs
dec
mov
adc
and
add
add
shl
push
int
dec
push
or
cmps
push
hlt
sub
fs
mov
retf
out
cli
inc
add
inc
push
mov
jb
retf
dec
arpl
ins
shl
ret
adc
mov
sbb
mov
pop
loop
adc
mov
xchg
arpl
cmp
cmp
aam
(bad)
in
and
(bad)
enter
call
add
and
add
je
jge
add
and
fwait
mov
push
mov
out
(bad)
clc
dec
dec
sbb
pop
or
pop
jns
sbb
inc
mov
in
cmc
inc
pop
outs
hlt
div
mov
pushf
sbb
call
inc
cmc
sbb
mov
leave
mov
(bad)
xor
fld
repnz
lods
data16
sub
aas
loop
inc
mov
add
loop
xor
jno
jle
lods
xlat
rcl
sahf
xor
mov
das
dec
and
mov
sub
inc
gs
push
jl
hlt
outs
repz
iret
cmps
jnp
xchg
into
sbb
popf
popf
adc
(bad)
scas
imul
pop
mov
dec
cmps
xchg
inc
mov
cdq
add
mov
adc
les
fisub
sbb
or
sbb
outs
cld
mov
pop
mov
div
stc
pop
lods
push
(bad)
out
ror
js
jno
sub
xlat
fdivp
fbld
mov
scas
jmp
pop
pop
in
imul
pop
adc
fwait
(bad)
fistp
or
push
adc
(bad)
std
mov
loopne
aad
add
in
pop
sbb
jnp
cwde
push
pop
cmps
sbb
pushf
xor
pop
cli
pop
jl
push
mov
(bad)
imul
in
cmc
dec
sub
neg
gs
and
jp
push
fs
sbb
mov
lahf
ins
add
xchg
hlt
fadd
dec
xchg
cmp
jg
add
jge
cmp
ficomp
lods
xchg
jns
xchg
sub
inc
repz
adc
xor
cmp
pop
mov
fbld
shl
ins
jl
push
mov
push
lahf
cmc
sar
jnp
or
fsub
(bad)
mov
push
pushf
xchg
xchg
test
call
cmps
aaa
inc
add
daa
fwait
es
sbb
adc
or
pop
fwait
and
push
mov
(bad)
test
jmp
xor
sbb
cld
retf
sbb
pusha
ins
sbb
jbe
inc
or
sbb
push
rcr
mov
hlt
pop
jmp
xor
dec
movs
dec
sti
lahf
stos
(bad)
pop
dec
jl
gs
push
fld
mov
jo
sbb
fidiv
(bad)
mov
sbb
out
and
push
fld
mov
scas
enter
sbb
movs
or
mul
outs
outs
pop
xchg
push
sub
aad
jns
mov
gs
sbb
lock
pop
push
stc
movs
ret
hlt
and
add
adc
cmp
inc
sbb
or
jae
mov
push
cdq
jmp
mov
fsub
mov
fsub
mov
out
pushf
inc
movs
xor
push
iret
stos
rcl
bt
scas
push
sub
cmc
push
push
adc
pop
pop
push
add
imul
scas
xor
inc
prefetch
or
cmps
xchg
(bad)
fdiv
stos
(bad)
mov
hlt
jmp
pop
mov
cmp
in
cmp
xchg
push
mov
out
jle
jb
or
cmp
or
add
hlt
cdq
xchg
jge
jl
mov
dec
jmp
xor
out
mov
imul
jmp
aaa
jno
mov
jl
daa
and
inc
adc
xchg
repnz
and
pushf
xor
xchg
arpl
loopne
and
scas
aad
stc
jno
jecxz
sar
pusha
mov
js
lods
sub
aaa
jmp
pop
rcr
dec
(bad)
call
or
clc
shl
loope
and
dec
(bad)
arpl
loop
fbld
imul
retf
in
add
les
cwde
push
call
pushf
xchg
ret
ret
sub
dec
out
and
pushf
jg
add
leave
loop
lea
neg
cwde
jno
test
ss
adc
es
jne
pop
popf
pop
outs
sbb
xchg
jp
jl
neg
dec
lods
push
push
stos
lods
mov
pop
and
movs
arpl
icebp
cmp
pop
retf
nop
ret
mov
push
adc
test
adc
in
mov
push
add
xor
mov
sub
dec
sbb
jmp
rcl
stc
mov
mov
nop
sar
and
fnstenv
dec
mov
dec
scas
fcomp
sub
dec
lods
out
pop
retf
add
aaa
stc
pop
jb
adc
int3
aad
jmp
and
jo
mov
mov
mov
outs
dec
jns
int3
xor
(bad)
ficomp
add
in
jp
mov
iret
and
mov
not
pusha
gs
int
stos
or
mov
in
mov
rol
mov
jge
mov
sbb
mov
or
call
std
std
mov
hlt
mov
shr
sbb
daa
std
mov
cli
pop
and
imul
pop
cmp
iret
(bad)
mov
gs
sbb
imul
jmp
dec
push
ins
jg
sti
xor
jle
push
mov
bound
xor
pop
pop
xchg
cs
inc
dec
mov
or
add
les
adc
bound
js
leave
dec
jmp
add
mov
xor
cmps
add
jl
mov
ret
mov
jb
pop
rol
add
cmc
cwde
cmp
sbb
add
push
inc
inc
xchg
int3
jp
clc
jmp
mov
aam
jnp
mov
lds
xchg
in
inc
cmp
movs
mov
fs
stos
jae
cs
push
jmp
rcl
cwde
rol
iret
jp
test
inc
in
dec
sbb
cmp
loopne
and
and
lea
popa
xchg
jecxz
inc
pop
jmp
fild
fwait
inc
push
cmp
int3
retf
mov
int3
push
je
scas
xchg
cdq
int
cs
popf
or
and
push
add
jae
and
stos
mov
push
mov
mul
mov
xchg
outs
mov
jbe
sbb
out
xor
(bad)
sbb
mov
push
in
cli
sbb
jae
sahf
cmp
mov
jns
cmp
cmp
mov
mov
mov
and
ds
shl
cmc
mov
icebp
(bad)
jp
xchg
sbb
popf
pop
mov
cmp
or
dec
mov
jbe
mov
movs
push
xchg
mov
ret
mov
test
mov
outs
out
push
lahf
add
jnp
inc
and
out
pop
inc
jb
nop
out
stos
movs
xor
sub
jg
pop
or
in
mov
call
push
lods
iret
inc
loop
pop
nop
(bad)
adc
inc
outs
jecxz
pop
shl
and
outs
(bad)
aas
push
inc
and
hlt
mov
mov
cmp
loopne
out
ss
mov
and
js
mov
das
imul
push
jns
cmp
je
sbb
or
push
movs
xor
xchg
retf
sbb
mov
movs
aas
xor
in
mov
dec
outs
push
in
call
pop
mov
pop
or
cdq
or
leave
scas
sar
mov
and
les
inc
pop
test
es
mov
repnz
mov
jnp
and
jmp
icebp
jns
daa
cmp
jge
sti
fadd
mov
repnz
jnp
push
dec
or
push
inc
shl
mov
(bad)
nop
stos
push
mov
lock
mov
mov
cld
loopne
int
(bad)
mov
cli
es
cmp
(bad)
stc
jg
add
add
fadd
bound
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movq
inc
push
pop
inc
in
shl
aam
add
loopne
sub
fisub
ins
cs
in
mov
out
sti
movs
mov
ficom
sub
xchg
jecxz
adc
out
mov
add
int
push
push
nop
cld
cld
mov
and
jno
jae
outs
xchg
xchg
(bad)
mov
outs
sbb
or
mov
div
dec
adc
lods
xor
mov
sar
mov
jnp
clc
mov
push
pop
rol
jnp
or
stos
mov
dec
adc
jl
jecxz
mul
push
sti
and
imul
cmp
(bad)
ss
mov
dec
add
jnp
xor
mov
out
imul
stos
enter
sti
pop
stc
push
lds
popf
push
frstor
cdq
pop
cmc
daa
mov
stos
stc
dec
mov
or
add
push
push
(bad)
mov
inc
or
shl
pop
icebp
in
movs
mov
sbb
pop
push
scas
mov
xchg
retf
rcr
mov
pminsw
inc
jmp
sti
data16
jne
push
in
mov
lods
(bad)
cmp
aaa
mov
repnz
xchg
xchg
xchg
mov
and
pop
shl
nop
psubusb
cwde
sahf
movs
pop
sbb
sub
ret
repnz
daa
jmp
(bad)
sti
test
or
pop
cmp
cmp
inc
add
in
mov
mov
pushf
mov
popf
cmp
into
mov
mov
or
mov
sbb
jmp
cmc
call
jecxz
cmp
push
pop
jl
mov
xor
inc
dec
retf
mov
mov
cwde
xor
cli
scas
or
xor
stos
test
push
sub
in
pop
popf
ins
cwde
xchg
cmc
cmps
div
jecxz
fwait
cmp
fidiv
jb
mov
bt
push
sub
mov
pop
xor
cmp
jp
push
push
lahf
fwait
lock
mov
or
inc
push
call
add
stos
adc
sbb
mov
neg
pop
jno
adc
inc
mov
adc
pop
sub
daa
jae
sbb
dec
test
ins
push
cwde
sub
dec
inc
les
push
sbb
mov
outs
mov
pushw
retf
ss
repnz
bound
ret
dec
das
mov
mov
adc
daa
pop
pop
retf
and
sub
fisttp
mov
add
scas
in
sbb
sub
clc
mov
outs
(bad)
and
ret
and
add
sbb
cdq
jae
scas
xchg
adc
es
bound
repnz
aam
lea
das
adc
dec
loop
pop
call
pop
ret
sbb
mov
js
jecxz
add
aas
mov
mov
repz
loopne
inc
cmps
cmp
pop
mov
inc
cmp
mov
push
mov
fwait
jno
ffree
(bad)
and
repnz
daa
and
push
(bad)
mov
jns
pop
jno
and
inc
inc
retf
and
xchg
mov
mov
pop
sbb
out
mov
retf
not
cmp
mov
mov
cmps
sbb
into
add
sub
out
stos
fist
shr
scas
adc
dec
pop
mov
mov
mov
sub
not
mov
and
retf
mov
fistp
mov
repz
test
cmc
inc
pop
(bad)
shl
cmp
imul
cwde
and
out
inc
mov
hlt
pop
mov
retf
scas
aas
xor
imul
dec
jmp
cwde
cmp
xchg
aaa
jmp
outs
(bad)
or
int3
iret
xor
cdq
pop
jno
jnp
iret
mov
lods
lea
pop
sar
sbb
pop
stc
adc
jle
movs
int3
lahf
push
adc
dec
movs
push
lahf
ret
repnz
mov
xchg
cmps
and
fs
sar
jmp
push
stos
jg
mov
sub
push
ja
sub
lds
and
fdivp
sti
add
cmp
xchg
inc
adc
mov
mov
hlt
pusha
cmps
cld
fdivr
popf
sub
jl
out
cmp
and
mov
xchg
je
imul
popf
jne
or
dec
inc
inc
pop
pop
aad
icebp
stos
leave
xchg
cli
(bad)
outs
int
stos
jl
sub
and
int3
scas
push
mov
push
push
sbb
and
outs
neg
pop
add
lock
js
inc
mov
cmp
sbb
ret
js
adc
popf
jae
std
call
ss
and
cmps
outs
dec
mov
xchg
push
xchg
clc
cmp
xchg
xchg
call
cmps
hlt
sub
push
xor
adc
ds
mov
inc
or
ficom
and
mov
xchg
and
stos
ror
loopne
lahf
xchg
xchg
inc
call
and
aam
ss
inc
ror
out
je
jns
rol
xor
fdivr
fild
aaa
mov
pop
push
aaa
leave
stc
jne
push
data16
mov
aaa
daa
or
jae
das
test
xchg
dec
add
mov
push
xor
nop
cli
push
sbb
pushf
cmp
adc
push
shl
ins
sub
xor
cli
jle
adc
fadd
inc
inc
pop
jmp
outs
(bad)
adc
adc
jl
stos
aas
data16
mov
mov
mov
scas
out
div
jns
push
push
shl
out
mov
movs
xlat
ins
iret
daa
xchg
call
mov
xchg
sbb
cmps
test
lock
inc
and
ss
mov
je
cmps
xchg
pop
xchg
cmp
pop
jae
leave
das
xlat
cmc
fldenv
in
add
lea
int3
ins
mov
push
leave
or
jnp
cwde
sub
ins
cmps
xchg
and
xchg
cmp
out
jle
add
call
jle
sar
mov
movs
hlt
push
ret
jp
pop
mov
mov
mov
loopne
dec
xchg
sbb
cmps
mov
or
out
stc
into
cmps
es
mov
mov
dec
outs
mov
sub
scas
jb
test
loop
sbb
leave
sbb
dec
or
xor
jmp
or
push
mov
adc
mov
jno
test
int
mov
jnp
int3
rcr
sub
ins
scas
lea
push
call
add
pushf
adc
push
jp
fisttp
pop
push
cs
inc
cmp
(bad)
in
mov
cmc
jle
cmp
xor
and
dec
jmp
popf
in
ror
clc
pusha
push
addr16
into
test
xor
xchg
fistp
outs
arpl
pop
sar
ja
and
and
hlt
cdq
pop
imul
ror
cdq
mov
repnz
lods
xchg
rcr
je
retf
mov
push
jmp
and
fmul
mov
xchg
mov
xor
xor
sbb
movs
pushf
mov
push
pushf
jge
mov
cmps
cmp
pop
xchg
cmc
fwait
cmp
call
emms
rcl
frstor
and
xor
into
(bad)
sti
retf
mov
sar
sbb
out
pusha
int3
xchg
jge
dec
(bad)
in
std
lock
mov
xor
movs
pusha
mov
ds
repz
mov
js
movs
sbb
enter
mov
retf
js
in
xchg
mov
imul
push
fistp
jle
push
mov
fimul
xchg
test
cs
shl
into
rol
dec
pusha
xchg
cmp
jne
sar
lods
mov
mov
ins
jae
ins
cmp
pop
cdq
nop
xor
pop
inc
fistp
xchg
jle
xchg
dec
arpl
outs
setns
leave
aaa
or
ja
dec
ror
or
sahf
jbe
ret
push
push
mov
shl
iret
mov
fs
sbb
jbe
enter
push
or
and
mov
in
mov
cmp
or
test
cld
inc
lds
sub
cmp
mov
xor
inc
into
loop
jne
push
sub
dec
out
push
adc
int
mov
xor
jge
test
add
jl
mov
cmp
jmp
adc
jno
(bad)
mov
inc
adc
dec
cmp
push
lahf
cmp
xchg
jp
cdq
cmp
repnz
add
push
jle
push
jno
jne
sbb
jle
retf
pusha
fstp
jb
jmp
cmps
mov
icebp
lahf
push
mov
and
adc
loope
inc
or
icebp
out
inc
xchg
mov
xchg
pop
jno
(bad)
imul
les
xchg
pop
inc
sub
adc
or
dec
mov
ins
bound
jno
jmp
inc
pop
push
xchg
mov
daa
repnz
in
xor
aas
pop
cmp
push
inc
pop
jmp
arpl
inc
ficom
inc
pop
sbb
sbb
(bad)
mov
in
jge
scas
and
out
stc
movs
std
cmps
stos
arpl
fldz
push
xchg
addr16
inc
clc
out
(bad)
in
out
scas
mov
add
ss
addr16
jge
xor
(bad)
mov
pop
aaa
sbb
mov
int
push
add
jg
push
dec
mov
cdq
pop
and
(bad)
test
int3
lahf
shl
(bad)
mov
push
jae
(bad)
bound
les
pop
fsub
adc
ins
stos
xor
xor
pop
cmp
inc
jmp
add
aad
pop
ss
pop
cmp
aaa
nop
out
push
daa
xor
sbb
cdq
fwait
loop
cli
lods
(bad)
pop
pop
fadd
inc
xor
pop
pop
aad
mov
clc
xor
bound
dec
push
out
xlat
dec
dec
mov
fmul
test
sub
push
xchg
rcr
in
out
les
imul
(bad)
sub
in
mov
cmp
mov
adc
rcr
mov
scas
xor
das
stc
fwait
jl
mov
out
and
pop
jle
and
dec
retf
push
(bad)
(bad)
pop
shr
aam
test
retf
and
les
outs
jg
mov
ret
call
pcmpgtw
jmp
repnz
cmp
arpl
mov
xchg
vdivpd
inc
sti
loope
or
pop
in
sub
inc
ss
loope
bswap
xchg
nop
jp
ds
fcomp
xor
adc
jl
xchg
sti
arpl
xor
outs
dec
xchg
into
dec
mov
test
dec
(bad)
out
pop
dec
cmp
dec
ins
scas
ds
or
push
sub
jae
rol
push
pop
(bad)
mov
inc
aas
jmp
xchg
mov
imul
inc
(bad)
add
in
jno
call
fst
dec
pop
fstp
sub
mov
xchg
inc
inc
or
shl
pop
enter
out
retf
mov
rol
sub
push
and
pop
movs
aas
sar
outs
scas
gs
in
loope
inc
pop
vmwrite
dec
pop
test
cli
sti
(bad)
imul
cmp
mov
mov
bound
cmps
shl
call
pop
mov
dec
cmp
test
repz
gs
mov
pop
daa
adc
add
adc
push
adc
xor
push
inc
xchg
xchg
es
jmp
cmp
in
pop
test
test
jecxz
mov
test
in
or
scas
xchg
sbb
addr16
jno
jmp
hlt
call
and
pop
test
and
cmc
inc
int3
push
jae
outs
pop
(bad)
jns
mov
jp
mov
push
js
loopne
scas
xchg
cmp
push
mov
hlt
inc
push
mov
push
jbe
mov
inc
(bad)
fwait
or
sub
sbb
xor
out
in
pop
xor
xlat
jbe
mov
shl
retf
sub
xchg
sbb
add
cbw
adc
pop
out
cld
int3
movs
jnp
pop
ret
xchg
push
test
mov
mov
mov
and
add
out
ds
push
sti
or
jbe
ret
test
inc
and
adc
fld
mov
retf
or
push
xchg
adc
mov
mov
sbb
jb
data16
add
sahf
adc
popf
pop
add
imul
and
adc
sub
xchg
data16
test
hlt
retf
jle
inc
bound
(bad)
iret
xor
mov
sub
xchg
xchg
xchg
sub
jmp
stos
sbb
ins
adc
loope
inc
cmp
push
arpl
jnp
mov
(bad)
jge
sbb
cmp
hlt
aam
cmp
dec
ins
or
in
ret
and
add
xchg
xchg
call
xlat
stos
sub
cwde
jae
cwde
push
jp
pop
push
in
mov
mov
xchg
adc
sbb
cmps
outs
daa
in
inc
iret
pop
mov
rcl
inc
mov
mov
stos
jo
inc
xor
sub
idiv
fidiv
or
and
add
dec
or
mov
addr16
out
adc
enter
ins
push
lods
pushf
inc
mov
jg
sub
scas
inc
jmp
mov
ins
ret
imul
movs
cmc
mov
push
nop
add
repnz
fidiv
cdq
inc
enter
shl
xchg
fdiv
and
xchg
or
add
repnz
scas
xor
jo
mov
sbb
push
cmp
nop
out
pop
xor
and
shr
cmp
lock
cld
repz
aas
(bad)
cld
repz
inc
fld
rcr
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movq
inc
push
pop
inc
in
shl
fmul
add
loopne
cwde
out
out
call
hlt
pushf
out
cmp
pop
pop
jne
fnstenv
ja
(bad)
iret
cmp
(bad)
sbb
(bad)
push
add
cmp
dec
add
retf
mov
aas
adc
(bad)
hlt
pop
inc
jg
xchg
aaa
imul
mov
adc
call
loop
sbb
adc
cmp
pop
out
in
dec
out
xchg
sub
dec
pop
or
cmps
adc
fdivr
idiv
int3
sbb
not
stos
cs
push
jecxz
stos
mov
xchg
in
xor
and
jno
outs
es
bound
pop
mov
xchg
xchg
add
arpl
call
xchg
sbb
cmps
push
ja
or
sbb
cli
rol
inc
ins
cmps
xchg
dec
jns
imul
and
daa
mov
pop
sbb
in
pop
or
repnz
jmp
test
ss
(bad)
fist
lods
repz
jo
cmp
repnz
stos
sbb
push
cmp
pop
add
ja
cli
inc
or
mov
mov
rcl
mov
jg
arpl
push
jg
mov
fs
sbb
sub
hlt
sbb
pop
aam
movs
sbb
aas
cmp
call
jmp
lods
sub
test
push
xor
and
dec
adc
outs
and
or
pop
imul
mov
mov
xlat
(bad)
mov
add
(bad)
cli
xor
jecxz
mov
push
hlt
pusha
pusha
mov
cmps
pop
mov
scas
bound
ds
pop
fcmovb
fstp
cmps
fs
(bad)
retf
sbb
imul
mov
mov
jns
cld
lds
into
bound
mov
cmp
sbb
mov
pushf
add
pop
xor
mov
jg
adc
(bad)
movs
dec
mov
pop
mov
or
cmc
dec
daa
sub
pushf
pop
pop
enter
push
mov
xor
mov
sbb
xchg
adc
lock
or
mov
ror
aas
xchg
pushf
dec
pop
inc
mov
popa
sub
add
mov
mov
dec
test
fimul
xchg
mov
nop
movs
push
mov
cld
jmp
(bad)
call
mov
(bad)
push
and
(bad)
pop
cs
and
xor
test
or
mov
aaa
in
cmp
hlt
addr16
mov
icebp
mov
shl
jne
jge
lods
jne
dec
sub
push
hlt
data16
out
push
les
xor
test
mov
sub
push
jo
js
or
jp
mov
xor
cmp
push
and
outs
cli
xor
jmp
fwait
outs
sub
xchg
jl
adc
mov
adc
out
jae
push
and
or
bound
jle
int3
sub
mov
movs
repnz
imul
test
mov
mov
push
bound
fidivr
sbb
bound
popf
not
jne
imul
jo
and
xchg
adc
mov
les
(bad)
movs
lods
das
push
movs
jo
inc
xchg
ror
xor
mov
adc
mov
int3
fst
inc
mov
mov
add
lods
call
cmp
js
mov
mov
ja
pusha
jno
pop
ret
scas
rcl
pop
out
dec
popa
int
les
movs
mov
xlat
pop
jmp
(bad)
rcl
icebp
sbb
clc
popf
jge
scas
jp
test
mov
icebp
mov
in
pop
and
cwde
dec
mov
mov
push
mov
call
scas
jnp
add
fisttp
movs
adc
cmc
ret
push
adc
fiadd
pop
out
bound
xchg
pop
sub
xchg
ret
mov
outs
mov
dec
pusha
sbb
lds
xor
or
jo
pop
loopne
mov
fidivr
mov
test
jge
inc
out
rcr
xchg
push
mov
mov
icebp
(bad)
jmp
in
mov
sbb
outs
lods
test
jle
sub
sub
adc
std
pop
adc
and
hlt
mov
movs
aaa
test
sub
push
add
and
fisttp
mov
aam
test
fsub
call
inc
int3
sub
rcr
mov
ins
jae
adc
add
std
or
xchg
ds
cmps
scas
xor
cli
fwait
or
lods
jmp
xor
push
hlt
fcom
inc
js
mov
stos
push
aaa
cmp
inc
sbb
jp
push
arpl
jecxz
inc
mul
gs
mov
lea
mov
call
rcl
xchg
xor
ret
in
adc
dec
jne
(bad)
loop
sbb
iret
out
push
jecxz
adc
fild
add
das
and
mov
push
add
in
std
pusha
je
inc
fstp
inc
xor
rcr
cmp
shl
pop
sub
jno
cmp
aaa
popf
fcom
fnsetpm(287
(bad)
fiadd
or
pop
into
retf
mov
inc
mov
mov
sbb
(bad)
cmp
sbb
jle
addr16
jno
pop
dec
xor
mov
mov
xchg
and
mov
mov
add
pop
iret
mov
cmc
inc
out
xacquire
pop
xor
ja
mov
retf
jbe
mov
mov
dec
sbb
push
adc
das
cld
leave
cs
dec
pop
jmp
fisttp
leave
ret
call
mov
clc
mov
mov
(bad)
jmp
stos
and
inc
mov
call
mov
(bad)
sbb
xchg
pop
push
out
pop
std
inc
mov
int
sbb
xor
mov
fs
gs
dec
cmps
lods
add
into
outs
(bad)
mov
lea
xor
fstp
repnz
ins
addr16
jp
sbb
mov
mov
mov
xchg
xor
inc
out
ins
(bad)
ins
pop
push
adc
in
in
sar
mov
mov
es
jp
push
mov
rcr
fs
xchg
loop
aad
fs
pushf
call
and
adc
std
int3
adc
sub
push
push
pop
jbe
cli
lods
xchg
iret
or
xor
pop
sub
pop
in
mov
lahf
out
repz
lock
mov
dec
adc
inc
test
xor
push
inc
stos
cmp
stos
shl
pop
sbb
stos
push
mov
jb
icebp
sbb
pop
sbb
sbb
jbe
pop
jl
(bad)
sbb
pushf
test
fwait
xchg
push
jnp
or
sub
fist
ins
aaa
mov
int3
sub
loopne
or
mov
(bad)
sbb
add
rcr
ror
(bad)
repz
aas
repz
inc
lods
pop
ins
mov
prefetchwt1
mov
test
or
out
into
iret
xchg
sbb
(bad)
nop
mov
sbb
jg
in
(bad)
in
sbb
or
(bad)
lea
retf
mov
(bad)
inc
add
add
sti
call
call
cmp
xor
sbb
in
leave
mov
add
and
cs
(bad)
std
in
hlt
push
push
add
jmp
xchg
mov
mov
xchg
jle
push
jmp
mov
xor
add
mov
retf
mov
repnz
pop
xor
daa
jecxz
fnstcw
pop
push
lock
stos
in
hlt
mov
jecxz
test
or
int3
in
test
jle
push
ins
and
loopne
xchg
out
mov
test
mov
mov
out
sti
in
std
in
xchg
push
hlt
adc
or
cmp
(bad)
int
push
sub
inc
sbb
mov
adc
js
movs
adc
fucomip
(bad)
sub
adc
sbb
mov
push
cmp
mov
cmp
push
aam
sar
push
xchg
push
inc
mov
xchg
lahf
das
adc
adc
xor
adc
lea
jo
stos
jl
test
call
adc
adc
mov
jmp
xchg
scas
xchg
cwde
mov
and
fs
ds
aaa
mov
in
pop
or
mov
(bad)
dec
bound
movs
ret
aaa
retf
aam
push
cmp
dec
into
mov
ins
dec
cs
and
xor
sbb
add
out
and
adc
div
push
push
adc
mov
jb
shr
(bad)
pop
jge
dec
jne
dec
push
(bad)
adc
dec
popa
call
out
mul
cwde
mov
je
sbb
jge
pop
mov
fucomip
mov
outs
shr
xor
ss
push
dec
pop
fs
pop
sub
inc
aaa
inc
out
movs
(bad)
cmp
xchg
cmp
sahf
scas
sub
cmp
fnsave
les
sub
enter
mov
cmp
jl
gs
clc
jmp
mov
mov
addr16
jb
adc
mov
inc
test
xchg
ins
mov
aas
(bad)
pop
test
icebp
cmp
push
repz
xchg
mov
loopne
fs
ja
sbb
lock
sbb
out
xor
push
add
cdq
xor
xor
jae
push
xor
or
stos
pusha
mov
jne
mov
push
mov
cmp
mov
and
outs
fs
das
(bad)
fstp
mov
cmp
jns
push
hlt
mov
aaa
add
jbe
inc
pop
jnp
outs
(bad)
(bad)
faddp
loop
inc
das
stos
xchg
jb
fwait
nop
inc
jp
pop
mov
fs
xchg
cmp
push
fwait
lea
jnp
(bad)
xchg
inc
iret
cmp
stos
daa
xchg
das
scas
idiv
adc
aad
imul
xchg
ins
aaa
cmp
xor
inc
addr16
mov
xchg
push
retf
test
arpl
jnp
xchg
cli
xchg
jb
fsub
mov
jmp
in
xor
fucomip
mov
shl
dec
or
pop
fst
mov
shr
mov
mov
xchg
xor
pop
and
adc
mov
push
mov
call
jp
sbb
cmp
cmp
push
mov
int
icebp
mov
push
sub
cmc
fmulp
arpl
pop
in
push
retf
call
sbb
inc
leave
sbb
ja
xor
(bad)
pop
jmp
iret
sub
xchg
inc
pop
lock
dec
xchg
pop
xchg
dec
adc
sahf
lahf
test
adc
je
popf
aam
mov
cmc
and
icebp
jecxz
sbb
mov
scas
(bad)
xchg
lahf
out
jp
xlat
test
inc
sub
enter
call
test
sbb
stos
xor
js
push
pop
cdq
(bad)
cwde
stos
popf
cmp
mov
xor
enter
in
dec
dec
lds
movs
mov
retf
xor
sub
test
lock
js
mov
int
test
scas
adc
add
xlat
mov
sbb
inc
push
es
push
mov
sahf
sahf
pop
das
and
xor
(bad)
mov
push
cdq
rol
bound
dec
sbb
dec
lahf
mov
leave
in
rep
push
stos
aad
mov
mov
add
clc
mov
jnp
xchg
mov
lahf
sbb
adc
mov
cmp
sbb
loopne
(bad)
adc
pop
adc
sahf
sub
mov
loopne
cmp
jbe
sbb
test
mov
(bad)
xchg
data16
fmul
push
or
pop
pop
ret
dec
ins
dec
int3
jb
sub
das
push
push
mov
pop
mov
xchg
in
ins
dec
xor
jl
stos
aaa
lds
push
jnp
adc
int3
xor
mov
pop
cli
(bad)
in
mov
adc
xchg
std
sbb
or
adc
pop
mov
inc
sub
lea
mov
stc
push
in
push
arpl
imul
adc
and
mov
push
int3
pop
cmps
xchg
out
test
int3
repz
mov
push
cmp
mov
imul
pop
push
inc
sbb
(bad)
ficomp
jge
inc
adc
(bad)
in
push
lea
mov
jge
mov
push
pusha
add
ins
adc
add
dec
mov
pop
out
xor
sbb
adc
xor
fimul
loop
mov
test
xchg
xchg
or
mov
out
sbb
or
aas
loop
xchg
(bad)
ins
(bad)
dec
fwait
stc
sub
cli
popf
pop
mov
fprem
pusha
in
clc
not
push
mov
push
cmps
push
ds
pop
push
xchg
xor
pop
push
adc
jg
dec
cmp
adc
adc
mov
jmp
daa
dec
out
test
adc
imul
xchg
pop
jo
mov
inc
jbe
lods
test
cli
mov
cmp
fcomp
mov
psrlw
jo
add
mov
jnp
addr16
popf
and
xor
sbb
dec
into
imul
enter
rcr
mov
out
enter
xor
mov
push
mov
cmp
ret
xchg
in
jae
rcl
ins
clc
xchg
mov
pop
xor
(bad)
cld
repz
aas
(bad)
cld
repz
call
add
pop
call
lahf
and
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jno
pop
inc
in
aad
inc
xchg
or
sbb
imul
cmp
cmp
ja
add
movs
sbb
xchg
inc
mov
adc
aam
xchg
out
xchg
nop
or
shr
pop
add
jb
push
adc
jo
cmps
clc
mov
mov
mov
je
adc
cmp
inc
mov
push
das
add
shl
pop
adc
iret
bound
not
mov
clc
out
mov
ds
mov
push
popa
inc
sar
rcr
mov
sub
sub
dec
mov
lock
xor
popa
(bad)
mov
icebp
push
or
neg
shr
mov
push
jnp
push
or
jne
pushf
mov
jmp
fsubr
pop
mov
retf
jno
movs
popf
movs
(bad)
loop
inc
xchg
xchg
mov
xchg
(bad)
pushf
jl
jnp
lds
(bad)
cmc
and
mov
push
loop
inc
je
push
cmc
sbb
mov
cmp
jb
xchg
mov
aam
mov
call
inc
jno
push
fwait
mov
xor
pop
psrlw
fistp
adc
test
(bad)
xlat
push
pushf
sahf
jle
ret
mov
mul
or
or
xchg
push
mov
mov
jge
xchg
icebp
mul
jns
out
outs
sbb
and
stos
push
sub
sub
sub
aas
cmp
or
sar
push
add
mov
icebp
enter
xchg
cmp
and
sub
movs
jae
jb
adc
mov
sub
mov
jae
jl
or
fist
mov
pop
pop
imul
iret
retf
aas
fist
xor
ss
add
cmp
adc
ins
cmp
mov
mov
xchg
std
dec
ret
fidivr
mov
jo
loope
mov
cmp
mov
mov
cmps
cli
push
jnp
mov
mov
pop
hlt
ds
push
stc
mov
leave
mov
scas
and
in
mov
mov
cmps
movs
cmp
popa
rcl
xor
cmps
push
add
mov
push
loope
cwde
mov
daa
cs
pop
les
sahf
mov
sbb
add
sbb
das
push
xor
mov
xor
test
push
xchg
mov
aad
xor
loop
mov
push
xor
xchg
pop
(bad)
out
add
or
repz
not
inc
pushf
dec
retf
inc
jle
lods
retf
fild
dec
or
test
mov
call
sub
popf
xor
movd
mov
test
push
dec
pop
xlat
jne
cmps
popa
ret
cmp
mov
retf
pop
les
push
adc
inc
cli
das
in
div
pop
jno
pusha
cmp
fcmovb
or
mov
push
lds
jg
jge
(bad)
mov
jne
mov
inc
(bad)
cdq
sub
(bad)
jae
in
outs
aaa
std
arpl
sbb
jge
push
test
test
into
or
sbb
loopne
add
pop
in
push
mov
mov
mov
mov
js
xchg
pusha
cmp
and
repz
pop
pop
pop
xor
mov
imul
pop
sbb
xor
jnp
pop
ret
stos
and
mov
test
jno
call
jb
addr16
scas
fadd
lea
rcr
mov
aad
pop
or
cmps
mov
scas
imul
or
sti
mov
lods
push
sar
dec
inc
sub
in
rol
adc
dec
ret
pop
sbb
inc
adc
mov
mov
sar
xchg
les
clc
xor
and
add
cmp
jecxz
(bad)
popa
xchg
or
das
xchg
dec
and
mov
std
cmp
cmp
test
and
inc
addr16
fisubr
ss
and
shl
repz
aas
inc
mov
push
push
cmp
lods
push
xchg
jno
pop
sub
cwde
cmc
or
test
jns
loopne
mov
mov
call
jno
data16
xor
inc
in
mov
pop
out
sbb
dec
(bad)
int3
xchg
mov
mov
or
in
mov
loop
adc
fldlg2
cwde
cwde
loopne
call
push
mov
or
loope
jb
xchg
scas
(bad)
ds
dec
sbb
push
repnz
ins
xchg
stc
and
je
call
cwde
ins
fnstenv
sti
mov
or
arpl
push
and
cs
pop
xlat
cld
mov
jmp
xor
mov
mov
mov
sub
and
pop
ffreep
push
sbb
in
test
xchg
ret
shl
(bad)
mov
or
jnp
jne
push
push
sub
jmp
loop
pop
ja
(bad)
ins
add
xor
jp
out
adc
dec
test
out
pushf
inc
jecxz
xchg
movs
ins
cmp
push
jge
mov
xchg
jo
or
push
fistp
pop
add
push
inc
ret
sub
(bad)
mov
cmp
cwde
repnz
dec
sbb
sti
xchg
mov
inc
sub
sahf
test
in
cmp
mov
mov
dec
xchg
adc
pop
popa
aaa
pop
pop
sbb
retf
sbb
es
cld
pop
jnp
aam
add
xor
mov
push
add
dec
xchg
jns
scas
mov
jb
mov
outs
mov
movs
loope
gs
popf
out
pop
sub
push
scas
and
push
mov
ret
push
mov
xchg
cmp
sar
push
add
dec
inc
test
mov
push
bound
mov
pushw
imul
cmps
push
cmp
(bad)
sub
pop
mov
cmp
cmp
jg
ss
pusha
gs
mov
movs
mov
xchg
inc
inc
mov
retf
adc
addr16
and
lods
mov
xchg
dec
or
outs
je
jne
out
pop
jb
ins
fwait
dec
cvtpi2ps
lods
xchg
sub
xchg
ret
jmp
xchg
mov
fwait
in
int3
push
enter
lahf
repnz
cmc
int
sub
not
xor
je
jge
ror
sar
mov
and
cmp
xchg
mov
xlat
mov
vpmaxub
outs
in
fcomp
inc
sub
and
pop
out
ins
xlat
xchg
(bad)
jns
cld
jp
out
loop
sub
xchg
xchg
sahf
mov
dec
in
mov
loopne
test
jecxz
enter
(bad)
lea
pop
or
or
hlt
jne
xlat
lds
out
leave
dec
clc
push
repz
outs
fistp
ret
nop
cmp
jnp
cs
into
push
xchg
and
clc
int
and
inc
test
cmp
jle
sbb
mov
loopne
les
push
sti
mov
in
push
repz
stos
mov
in
pop
mov
jle
das
fcomip
ret
push
sbb
mov
vpunpcklwd
mov
popa
xor
push
xor
aaa
outs
push
and
jp
jns
retf
les
cmp
pop
jge
cmp
pop
and
or
into
in
ds
xchg
mov
jbe
loope
or
call
pop
lods
jle
aaa
mov
pushf
icebp
push
stos
add
aas
inc
mov
imul
pop
jno
or
xchg
sub
jnp
mov
push
sbb
test
and
in
(bad)
cmps
aaa
cli
sub
fild
call
or
push
xor
xchg
je
pop
cmp
enter
dec
call
inc
xchg
add
in
mov
or
daa
popa
mov
ja
jp
dec
int
or
jae
cld
sbb
or
leave
and
in
ror
shl
retf
and
sar
aam
aad
pop
test
add
lods
cmp
sbb
aas
mov
mov
into
fs
pop
arpl
fmul
fild
inc
cld
xor
aad
xchg
or
test
mov
or
icebp
or
add
(bad)
fmulp
cmp
push
mov
out
test
adc
neg
jmp
std
mov
ret
ins
inc
retf
repz
inc
leave
pop
push
aam
or
push
rol
xor
rol
mov
inc
mov
rcl
mov
cli
out
sbb
or
iret
and
jle
or
ins
mov
mov
test
(bad)
push
xchg
scas
mov
int
mov
lods
fwait
jmp
jae
jns
icebp
rol
mov
mov
(bad)
hlt
pop
sub
test
or
and
adc
inc
inc
jne
and
pop
pop
jl
popf
std
and
push
rcr
bt
(bad)
sbb
inc
shl
sub
cmp
ja
daa
xchg
push
pop
repnz
pop
in
sbb
outs
sbb
mov
retf
mov
cmp
pop
das
into
mov
hlt
jb
lods
sbb
call
(bad)
mov
(bad)
mov
pusha
xchg
mov
(bad)
jnp
lea
shl
inc
mov
(bad)
adc
xor
into
popa
cli
in
xchg
xchg
inc
or
(bad)
sbb
adc
push
shl
mov
push
mov
(bad)
xchg
pop
mul
sub
lds
popa
ins
popf
adc
cmp
jns
in
push
and
xchg
push
dec
pushf
adc
adc
pop
ja
xchg
push
pop
call
mov
mov
mov
cmp
scas
sub
push
fisubr
cmp
xchg
xchg
jae
sub
jge
inc
xchg
outs
mov
inc
out
les
imul
inc
inc
inc
mov
add
js
sbb
call
cmp
xor
push
pop
imul
out
jmp
fstp
push
xchg
sahf
push
jbe
push
repnz
xchg
scas
movs
inc
dec
cmc
mov
cmp
pop
outs
xchg
inc
fcomi
fild
enter
sub
inc
jo
retf
dec
add
inc
out
test
movs
cmps
mov
push
mov
xor
pop
fadd
call
fisub
mov
dec
mov
jle
arpl
arpl
imul
inc
popa
push
pusha
dec
cmp
cmc
aad
fiadd
(bad)
sub
imul
inc
xchg
inc
pop
add
push
retf
out
shr
stc
dec
nop
inc
ins
mov
xchg
push
xchg
fsub
push
cld
(bad)
dec
stc
aam
test
std
stos
push
or
xor
(bad)
icebp
scas
inc
loope
scas
inc
and
push
mov
jae
mov
fcomp
and
cmc
fild
add
dec
adc
movs
mov
or
cld
je
mov
or
lahf
xor
pop
dec
stos
pop
cmp
or
cmps
dec
and
and
cmp
daa
pop
loopne
stos
das
push
mov
dec
cmc
cmp
inc
or
xchg
jl
mov
ins
lods
aas
repnz
iret
cmp
mov
mov
cwde
aam
fwait
mov
jbe
mov
push
repnz
pop
in
or
jg
lods
inc
hlt
std
dec
or
shl
rcl
test
loopne
test
cs
jl
inc
in
mov
pop
or
adc
jmp
add
mov
sahf
push
sbb
retf
xor
cmc
xchg
loop
xor
dec
fistp
jmp
dec
mov
jne
dec
rcl
dec
push
imul
sbb
daa
push
neg
pop
jmp
loope
arpl
add
mov
repnz
adc
jns
call
lods
js
mov
sbb
cli
cmp
lods
scas
mov
rcl
shl
gs
sub
push
out
popf
test
mov
in
jp
mov
cmp
cvttps2pi
loope
and
fidiv
mov
stos
and
xor
movs
dec
popf
stc
push
stos
stc
xchg
mov
xor
mov
sbb
in
xor
dec
jp
pop
(bad)
popa
cmp
mov
push
fwait
repnz
mov
repz
cld
jb
jg
push
enter
xlat
cmp
adc
dec
(bad)
xor
mov
sub
inc
push
cmp
sbb
pop
or
mov
stc
xchg
adc
out
enter
dec
pop
imul
mov
sbb
and
inc
push
imul
jg
fisubr
iret
pop
mov
xor
cwde
test
cmc
add
push
push
and
inc
loop
or
test
loope
xchg
dec
push
les
imul
cmps
or
(bad)
mov
and
mov
(bad)
(bad)
sti
mov
pop
push
jne
call
pusha
mov
ret
mov
fisttp
jp
xor
(bad)
jmp
(bad)
fmul
mov
test
aad
and
pop
jbe
test
pop
addr16
jmp
jns
xor
inc
out
jo
inc
lea
xchg
cmps
fimul
loop
pop
mov
js
add
rcr
push
std
scas
xchg
test
jmp
dec
dec
sub
(bad)
in
outs
mov
sub
fstp
fstp
hlt
(bad)
lods
push
fwait
out
nop
adc
dec
adc
push
popf
jecxz
in
cmps
stos
xchg
test
mov
pop
into
xor
and
mov
std
mov
in
xchg
xchg
stos
iret
scas
clc
(bad)
fsubr
xor
ins
pop
in
xchg
or
pop
add
hlt
mov
mov
xor
push
adc
mov
mov
xchg
push
adc
xchg
push
and
add
and
shl
cmp
mov
push
xor
jecxz
add
btc
fs
sub
out
jg
stc
out
adc
clc
pop
out
sbb
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fmul
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movd
inc
push
pop
inc
in
shl
fmul
add
loopne
out
mov
cbw
jmp
sbb
aad
mov
loope
xor
fwait
out
je
dec
dec
out
fnstsw
aam
call
jns
xor
data16
pop
and
cs
mov
push
add
mov
outs
cmps
add
sub
adc
cmp
fldenv
loop
pop
das
aaa
cmps
xor
xor
ret
out
imul
or
pop
mov
cmc
cmp
in
mov
(bad)
fsubr
shl
xchg
out
(bad)
outs
leave
adc
call
cmp
add
ret
xor
das
or
cli
pop
outs
cld
(bad)
dec
xchg
je
lds
scas
sub
imul
(bad)
mov
mul
call
sub
jae
and
push
add
jl
jo
push
mov
aaa
xchg
mov
xor
cmc
sub
popf
lock
dec
test
rol
outs
ins
inc
inc
cmp
jp
shl
retf
push
jle
loope
jae
mov
call
cs
pop
mov
push
jne
retf
adc
push
int3
or
or
imul
call
mov
cmove
aad
xor
fdiv
repz
sub
mov
push
add
jbe
or
jg
cmps
fs
aaa
repnz
pop
addr16
dec
cmp
sub
mov
es
loop
xchg
push
pop
arpl
scas
cmp
sub
mov
pop
sub
or
or
pushf
mov
push
and
fst
sbb
or
mov
sub
das
das
xchg
lods
std
aad
fwait
add
cdq
cmp
je
in
and
lods
pop
out
fwait
cmps
(bad)
repz
cwde
sub
fld
mov
mov
setle
jl
xchg
mov
lods
lods
jbe
sub
(bad)
fucomp
stos
jnp
jae
dec
xor
in
pop
push
fcmovne
scas
mov
jle
into
push
lahf
in
dec
lock
imul
mov
mov
fild
dec
mov
fcmovnbe
or
sub
pop
jbe
add
sub
inc
inc
jg
popf
jecxz
mov
sub
push
and
sub
and
add
ins
mov
idiv
pop
cmp
out
stos
loopne
into
int3
pop
pop
out
sbb
sub
lock
out
arpl
sub
sub
sbb
aad
stos
and
pop
xlat
cmps
dec
dec
mul
xchg
cmp
jns
mov
xor
sub
(bad)
cdq
adc
movs
(bad)
idiv
out
add
jmp
push
test
dec
inc
out
mov
aas
aaa
mov
rcl
test
sti
xor
mov
sub
inc
push
test
sbb
rcr
cwde
xchg
popa
in
fwait
pop
mov
clc
test
cdq
jb
aam
outs
inc
or
mov
sub
lods
out
mov
loope
mov
mov
cmc
and
cmps
cmps
cs
cmp
imul
jnp
mov
jb
mov
push
or
sbb
fistp
into
mov
pop
inc
and
cld
mov
jmp
mov
scas
sub
jo
or
inc
sbb
or
aad
add
add
xor
dec
xchg
adc
cli
ds
or
outs
outs
dec
clc
in
es
sbb
stos
int
sub
sbb
sti
add
and
pushf
ds
or
or
fadd
arpl
lods
add
ds
xor
jnp
pop
(bad)
mov
and
adc
push
inc
out
bound
mov
(bad)
push
lea
push
add
mov
xchg
fdiv
cmp
inc
inc
inc
adc
repz
cmp
nop
arpl
enter
lock
xchg
mov
shl
xor
xchg
jbe
pop
bound
fmul
adc
repnz
fs
jnp
retf
dec
ror
pop
fild
stos
mov
jl
(bad)
inc
push
in
imul
sbb
jnp
dec
and
movs
mov
or
daa
int3
jmp
add
inc
lds
jl
movs
and
adc
loope
je
adc
cdq
sub
and
je
ins
rcl
fdiv
neg
retf
movs
(bad)
in
ins
sub
outs
jg
and
fmul
jge
mov
hlt
mov
or
cmp
inc
clc
mov
scas
daa
inc
cmc
sbb
rcl
cld
fld
push
xor
dec
or
or
add
xor
pusha
inc
outs
ss
jmp
mov
push
mov
xchg
push
(bad)
dec
xor
in
out
xor
je
fmulp
imul
fsub
cli
add
imul
cmps
mov
jge
clc
dec
xchg
aas
fld1
add
add
(bad)
mov
and
pop
fadd
clc
inc
pop
repnz
cs
das
in
jecxz
scas
pop
or
fsubrp
imul
xchg
fnsave
pop
mov
aam
fst
je
ret
cli
imul
pushf
and
les
sbb
(bad)
adc
xchg
mov
shr
cli
mov
inc
xor
sub
lock
and
in
imul
ror
out
dec
shl
in
mov
mov
cmp
dec
loope
cmp
neg
ret
jle
into
pop
mov
dec
enter
cmp
std
test
and
retf
jge
or
int3
mov
repnz
adc
pop
mov
sbb
or
dec
pusha
nop
or
pusha
in
jle
and
test
sar
and
stc
mov
js
cmc
mov
push
in
ds
push
pusha
xor
jno
sub
pusha
lea
mov
sub
dec
xor
mov
add
movs
add
cdq
jp
jnp
std
sub
scas
fadd
fs
retf
mov
jno
mov
jae
mov
add
icebp
call
sbb
or
retf
mov
sbb
mov
fcmove
in
lods
rcl
std
add
lds
xchg
stc
jmp
add
rol
sbb
jmp
stc
test
sbb
inc
into
jge
pusha
dec
hlt
sub
jmp
in
mov
push
inc
xor
pop
ret
cs
mov
sub
rol
cmps
jo
in
pop
aas
leave
cmp
jl
popa
(bad)
and
or
imul
(bad)
dec
cld
shr
cmp
es
xlat
or
jno
test
adc
out
sub
and
sahf
or
cmp
sub
mov
jbe
xchg
cmp
(bad)
dec
push
jb
sbb
ret
pop
test
dec
sbb
add
pop
add
movs
xor
cmp
mov
jb
movs
jo
ja
rol
in
or
xor
mov
mov
cmp
dec
aad
jo
pop
pop
jnp
mov
inc
aaa
sar
jne
das
cli
repz
dec
ja
push
rcl
inc
and
mov
xchg
sahf
cmp
pop
es
fiadd
lds
sbb
push
lahf
push
(bad)
sti
into
(bad)
aam
add
xor
dec
int3
fidivr
lods
pop
scas
jg
je
mov
dec
arpl
imul
ds
out
lea
xor
xchg
aad
pushf
xchg
repz
or
cmp
mov
push
cmp
xor
add
pop
in
push
lods
mov
mov
or
push
sbb
sbb
fs
mov
cmps
sbb
inc
pop
mov
adc
cmps
ins
inc
out
fcomp
and
cmp
mov
mov
nop
imul
xchg
xor
sbb
pop
push
pop
xor
cdq
rcl
pop
nop
pop
mov
bound
fcom
sub
retf
out
sub
popa
cmp
loopne
jecxz
loope
pop
pop
jmp
jl
mov
lods
pop
mov
ins
sbb
jle
pop
popf
push
cmp
popa
popf
jecxz
sbb
cmovge
or
je
imul
or
xor
xor
dec
fisttp
popf
aaa
call
mov
mov
xchg
push
jmp
hlt
cli
fidiv
add
test
push
push
xor
cmp
adc
data16
rcl
popa
xor
cmc
or
out
add
jecxz
push
sbb
and
push
dec
and
xchg
xlat
imul
ret
jecxz
sub
jbe
scas
pop
pop
pop
fcom
stos
mov
and
and
js
and
out
repnz
ret
mov
and
xchg
pop
and
pop
gs
fmul
cmp
call
call
out
add
dec
movs
pusha
es
outs
add
sub
fidivr
das
cmp
je
sahf
daa
in
mov
aam
(bad)
jecxz
add
xchg
(bad)
lea
sub
sbb
rcr
aaa
sbb
inc
test
es
sbb
xlat
stos
in
sub
xchg
popf
shl
jl
pop
outs
xchg
adc
repz
sbb
adc
inc
mov
cmp
ins
neg
mov
mov
imul
bound
enter
ins
nop
mov
cwde
pop
sub
out
mov
scas
fdivr
aam
push
es
leave
cld
dec
xor
jno
inc
cwde
push
into
(bad)
sub
aaa
bound
scas
arpl
(bad)
daa
push
adc
push
sub
cli
gs
jno
push
adc
ja
mov
dec
sub
push
jecxz
adc
or
pusha
nop
retf
lock
xor
pop
out
inc
sub
mov
mov
jmp
mov
rol
stc
and
jmp
je
pop
mov
lea
outs
jo
dec
jmp
sahf
retf
cmc
add
test
sbb
push
addr16
fs
mov
scas
shl
call
push
cmp
call
adc
scas
and
shl
and
lock
push
mov
stc
inc
jnp
xchg
sar
cdq
mov
adc
icebp
mov
fwait
sbb
xor
xchg
and
out
add
lea
jmp
cmp
hlt
gs
out
jle
inc
out
mov
das
mov
rol
mov
mov
mul
cmc
push
cmc
push
push
in
aaa
jmp
pop
pop
cmp
or
retf
xor
xchg
sub
push
sub
pop
jmp
mov
mov
je
dec
add
cmp
popa
or
or
pop
cld
stc
shr
push
(bad)
cmp
sub
jnp
add
cld
fistp
cmc
in
jl
scas
add
xor
jle
pop
shl
cmc
call
addr16
jne
sar
outs
lods
push
mov
mov
addr16
outs
mov
add
and
jle
nop
adc
fisttp
or
outs
push
pop
inc
mov
loopne
out
aas
push
fdivr
push
fwait
cmps
fsubr
xchg
adc
xor
in
cmp
jns
stos
dec
and
aas
js
xchg
jns
sbb
int3
pop
outs
iret
push
adc
xchg
icebp
jl
mov
adc
mov
inc
lds
jg
sub
pop
fist
mov
push
loop
sub
mov
int3
enter
call
gs
rcl
ja
pop
movs
jno
xchg
rol
ins
fstp
inc
pop
or
(bad)
cpuid
idiv
dec
or
push
xor
fs
(bad)
loopne
cmp
loope
pop
push
dec
in
xchg
test
push
fisub
sbb
lods
inc
arpl
cmp
in
int
push
mov
xor
jbe
mov
das
sub
mov
add
inc
mov
js
retf
lds
push
cmc
(bad)
mov
data16
out
xchg
mov
popa
shl
jmp
add
mov
sbb
xor
cmp
repnz
cmp
cwde
xor
mov
xchg
and
pop
repnz
jmp
jo
pop
cmp
addr16
hlt
aas
lods
fwait
push
jmp
fimul
mov
fucomi
mov
mov
imul
xchg
adc
jns
fldcw
in
fsubr
add
bndstx
scas
lods
pushf
in
repnz
or
out
mov
jl
fsincos
xor
push
enter
jb
sbb
mov
stos
into
arpl
call
stos
inc
mov
inc
out
mul
dec
sub
sbb
mov
cli
push
mov
call
adc
cmp
sbb
out
xchg
sub
mov
ret
aam
jecxz
or
ins
cmps
sbb
or
data16
mov
mov
mov
out
(bad)
or
xor
sar
mov
aas
pop
in
or
out
or
int
dec
lds
adc
and
and
icebp
cmp
pusha
sbb
mov
in
cmps
cmps
xchg
jmp
pop
fld
xchg
dec
ss
jp
jbe
mov
mov
mov
inc
(bad)
retf
mov
bound
stos
outs
push
jg
mov
stos
push
addr16
dec
cmps
mov
pusha
mov
stos
pusha
aad
enter
cmc
cmp
nop
shl
cmp
xor
pop
pop
or
add
push
adc
(bad)
adc
sub
xor
xchg
addr16
mov
dec
fnsave
fst
mov
xchg
cmps
pop
add
clc
out
jg
stc
out
jg
lahf
add
inc
mov
pop
(bad)
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fmul
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movd
inc
push
pop
inc
in
shl
lea
add
xchg
dec
pop
push
add
cmp
or
nop
xchg
push
dec
mul
dec
inc
mov
adc
dec
loopne
xor
xor
repz
jge
jo
call
jecxz
rcr
js
rcr
test
rcr
popa
aam
cmp
cmp
jb
das
ds
jmp
aaa
outs
cmc
iret
pushf
jecxz
ss
cmp
test
inc
aaa
mov
lods
xchg
out
add
mov
xchg
sbb
aad
mov
and
(bad)
ja
jl
pop
or
pop
es
xor
jno
in
cmp
and
sub
jl
fldcw
mov
mov
sub
lods
arpl
pop
adc
mov
jne
(bad)
lods
idiv
aas
push
lea
mov
xchg
sub
repz
dec
icebp
add
dec
cmp
das
push
vpsubd
xor
mov
inc
xor
hlt
repz
sub
data16
pop
mov
aad
adc
neg
movs
jae
lahf
or
(bad)
xor
push
mov
jp
adc
mov
dec
lods
mov
je
or
add
call
imul
sub
cmp
jo
jne
jp
jbe
and
test
jecxz
dec
xor
jecxz
shr
out
mov
hlt
movs
fistp
mov
push
test
in
(bad)
inc
jmp
pop
lea
repz
(bad)
add
cs
pop
push
dec
ficom
cmps
test
aad
arpl
lock
or
sbb
inc
or
sbb
(bad)
int3
inc
xchg
mov
adc
call
and
cmc
push
sahf
fld
jne
push
sub
out
aad
fdiv
jle
in
loope
movs
(bad)
outs
cmp
add
shl
and
in
cmp
push
mov
aad
mov
sub
retf
rol
xor
clc
cmp
loope
fidiv
push
fwait
add
xchg
jge
int3
sti
sahf
call
imul
rol
push
in
jns
mov
int3
inc
test
out
in
rcl
clc
and
and
ins
and
clc
clc
cmp
jne
fs
out
sti
jnp
aaa
adc
pop
jo
lods
jl
movs
cs
cmp
out
les
and
sub
xor
cmp
lahf
jmp
cmp
pop
push
fwait
clc
jno
frstor
pop
imul
cli
xchg
scas
pop
pop
fsub
mov
sbb
out
(bad)
mov
mov
add
xor
mov
jl
mov
mov
sar
faddp
adc
add
pop
sub
xlat
mov
loopne
lea
cmps
pop
icebp
sti
lds
fdivr
sub
aam
mov
fnstcw
mov
mov
loope
js
(bad)
mov
mov
push
lds
fiadd
dec
ret
popf
fidiv
pop
int
mov
xchg
jne
int3
iret
or
div
or
ins
sbb
jl
pusha
fadd
add
sti
lods
loopne
add
gs
xor
repz
add
call
mov
lods
inc
sar
in
push
mov
pop
jl
aad
mov
shl
les
pslld
mov
and
dec
jp
sub
push
jg
cs
mov
aas
fld
push
loope
xchg
cmp
dec
mov
mov
stos
arpl
mov
inc
mov
adc
sub
add
push
add
ficomp
cmps
cmp
leave
xor
mov
adc
inc
or
pop
and
outs
out
std
mov
jo
test
in
cmp
fst
cmp
neg
ds
div
cmc
(bad)
ds
dec
push
enter
push
(bad)
xor
jmp
mov
or
xchg
xor
xchg
test
in
or
ret
lock
inc
(bad)
cwde
int3
fdiv
xor
rcl
xchg
xor
pop
push
mov
movs
std
repz
fidiv
mov
test
mov
mov
jp
push
mov
imul
sar
aaa
sub
push
pop
(bad)
jmp
pop
scas
rol
lds
adc
add
inc
jmp
jbe
(bad)
and
push
popa
and
mov
dec
dec
jno
sub
xlat
dec
dec
pop
jg
sbb
jle
or
push
jmp
rcl
repnz
xchg
inc
pop
sub
sub
adc
inc
cld
leave
xor
nop
xchg
loope
adc
out
xlat
(bad)
hlt
pop
inc
mov
dec
add
cmps
and
pop
inc
mov
cwde
(bad)
stos
sbb
xor
lea
add
lock
mov
adc
add
test
add
push
and
sub
movs
daa
leave
sub
xor
loop
pop
lods
sub
js
leave
or
xchg
ret
dec
mov
mov
dec
xchg
and
ja
sar
lahf
jmp
stos
cmps
dec
cmp
xor
out
mov
js
mov
mov
rcl
push
mov
shr
pop
(bad)
and
stc
movs
inc
inc
push
pop
lea
aad
pop
push
mov
inc
ffree
in
cdq
dec
jle
ds
push
sbb
frstor
jnp
xlat
in
call
jns
aaa
or
pop
pushf
xor
pop
jnp
out
das
mov
mov
pop
add
stos
imul
(bad)
loope
movs
cdq
cs
pop
xchg
sbb
dec
sbb
inc
enter
mov
fisttp
sub
adc
adc
pop
dec
bound
imul
iret
dec
fwait
retf
imul
ja
hlt
ins
push
mul
inc
sbb
leave
and
adc
adc
push
cmc
xchg
xor
in
lahf
lahf
jns
lea
repnz
cs
cmp
adc
dec
push
jae
and
xor
out
push
add
push
mov
retf
pop
pop
mov
into
loopne
sbb
mov
icebp
mov
fild
addr16
fild
lahf
fidiv
and
cmc
stos
xchg
or
jp
sub
clc
jbe
dec
daa
adc
sbb
test
adc
mov
inc
test
xchg
sti
add
out
or
call
and
cs
sahf
fisttp
pop
scas
xor
scas
stc
test
xor
cwde
mov
fild
cs
fucomip
lods
pop
lahf
push
jns
loopne
stos
pop
cmp
packuswb
or
push
outs
xchg
ss
loopne
test
jmp
test
mov
xor
ja
jle
popa
lahf
ins
jb
imul
push
pop
cld
inc
xchg
loopne
mov
mov
dec
xchg
mov
push
cli
cmp
dec
pop
nop
push
push
mov
stos
js
xlat
adc
lea
dec
sbb
cdq
scas
fcmovnu
(bad)
jp
adc
dec
mov
push
stc
cmps
push
ficom
outs
enter
in
js
add
push
xor
mov
mov
test
mov
aas
xchg
dec
clc
ins
sub
into
das
fdivr
mov
pop
in
sub
adc
mov
xchg
in
and
aad
push
jbe
int
mov
sahf
dec
pop
jb
sbb
xchg
cmc
xchg
push
push
jp
inc
retf
jae
das
lea
mov
jge
xor
push
gs
cld
add
in
push
fcomp
sub
cwde
jae
test
push
aad
mov
ror
call
jne
mov
fsubr
test
icebp
outs
xchg
mov
lods
sub
sub
ds
jb
jne
test
fadd
(bad)
xchg
dec
ins
xor
inc
out
into
mov
cmp
fwait
and
xchg
fs
int
rcl
lock
and
add
jmp
fstp
fbstp
adc
data16
push
fs
mov
xchg
cmc
dec
nop
cmp
jne
push
mov
cmp
out
ds
xlat
sub
les
loope
mov
add
or
out
push
test
inc
cmp
dec
xchg
xchg
sbb
(bad)
pop
push
inc
mov
xchg
jge
aaa
inc
push
test
xchg
je
push
outs
xor
in
sbb
dec
popa
sti
daa
inc
dec
int
retf
fisubr
cmps
push
shr
rcl
xchg
push
adc
xlat
pop
arpl
(bad)
(bad)
dec
mov
mov
push
mov
fwait
sub
or
lahf
or
stos
fcmovnu
sub
std
sub
fiadd
push
push
clc
xor
sub
mov
mov
pop
cmp
ror
fwait
movs
cmps
add
mov
xchg
add
jns
jle
lods
dec
aas
sbb
out
jo
and
sbb
jge
lds
push
sub
int3
xlat
add
sbb
shl
add
pop
movs
(bad)
iret
or
test
dec
in
mov
xchg
das
or
sbb
loope
cmp
in
inc
scas
loope
outs
sti
out
xor
fidiv
sub
push
push
cli
ret
enter
xchg
jle
jno
push
mov
xor
jb
sub
cwde
or
and
jnp
iret
add
and
fistp
sub
push
mov
dec
jb
inc
dec
push
cmp
xor
jmp
das
xor
jl
add
xor
xlat
jae
mov
leave
rol
and
and
sahf
repnz
or
pop
ds
sub
jae
cli
mov
loopne
mov
push
jns
mov
jmp
dec
rcl
add
push
aad
mov
(bad)
(bad)
ret
or
or
stos
rol
mov
fdiv
fsubr
push
sbb
scas
add
inc
xchg
sahf
aad
and
mov
jns
pop
sbb
pushf
loopne
test
int
je
aas
fdiv
popf
mov
sbb
push
and
int
adc
jns
dec
mov
es
mov
fs
jae
jp
sub
aas
add
repnz
iret
(bad)
jecxz
sub
cmp
sbb
pop
pop
xchg
dec
movs
fnstsw
xor
jmp
adc
and
mov
aas
xor
lahf
(bad)
fadd
int
sub
addr16
fwait
push
lea
cmp
out
shr
xchg
inc
mov
pop
add
xor
(bad)
stc
sbb
stos
mov
mov
popf
mov
das
popf
int
jg
ret
sub
pop
xor
xor
inc
cmp
jns
or
xor
cli
pushf
imul
push
push
xchg
mov
shl
ja
mov
in
dec
or
and
jno
rol
pushf
xor
(bad)
pusha
rcl
inc
push
outs
mov
sbb
xor
repnz
mov
test
xor
(bad)
push
xchg
js
xchg
push
cdq
xor
lea
xor
wrmsr
aaa
jb
sub
call
call
push
out
fdivr
sub
jo
xchg
push
mov
xchg
dec
out
push
iret
and
push
mov
mov
arpl
out
sbb
sbb
and
mov
les
jmp
add
mov
imul
push
cmps
inc
jmp
outs
dec
ja
xchg
sbb
leave
cli
ja
mov
jno
push
inc
aad
xchg
stos
mov
ins
inc
add
mov
imul
mov
stos
cmps
cmp
or
js
sar
push
ins
mov
cld
adc
push
out
lock
imul
adc
test
out
cld
cwde
ds
xor
jmp
fwait
cmp
adc
(bad)
dec
ficom
push
mov
pushf
xor
fwait
lock
inc
pop
xchg
ins
jns
int3
(bad)
(bad)
loop
leave
adc
test
pop
or
inc
and
ja
jns
push
inc
cmp
or
leave
fdiv
imul
hlt
adc
mov
jae
jle
dec
das
int
addr16
mov
out
sar
pop
xor
fstp
pop
mov
push
sub
rcr
fs
add
mov
adc
repnz
cmp
icebp
(bad)
adc
mov
hlt
mov
mov
inc
dec
leave
repz
in
add
(bad)
out
outs
cmc
adc
inc
out
fistp
inc
loope
std
mov
fucomp
push
and
mov
add
adc
inc
icebp
daa
shr
jbe
stos
out
xor
mov
pop
addr16
pop
adc
stos
cmp
div
sub
mov
or
dec
fnsave
pop
lock
fwait
addr16
repz
(bad)
mov
test
fwait
pushf
ss
hlt
lea
sub
lods
stos
rcr
jo
data16
(bad)
or
ror
push
inc
jle
dec
inc
in
movs
popa
ins
daa
enter
aas
adc
outs
scas
fsub
aaa
sti
adc
sti
adc
aad
adc
pusha
sub
in
jp
fsub
(bad)
cwde
sbb
shl
pop
mov
xor
mov
rol
cmp
add
push
xchg
fimul
imul
sbb
pop
shl
out
aas
retf
mov
or
or
clc
xchg
sar
pop
pop
movs
pop
ja
cmps
and
adc
(bad)
fcomi
xchg
in
aad
mov
sub
dec
scas
mov
inc
jge
test
pop
adc
cvtdq2ps
add
repz
aas
(bad)
cld
repz
call
add
pop
cmp
add
repz
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loop
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
je
pop
inc
in
xlat
mul
aam
ret
add
ja
mov
cmp
in
mov
jb
cmp
inc
jmp
cmp
cmp
pop
out
cmp
mov
xor
enter
addr16
iret
lahf
icebp
cld
shr
mov
rcl
xor
scas
stos
jg
add
jnp
popf
retf
(bad)
stos
enter
nop
cdq
(bad)
frstor
inc
dec
pop
jmp
sbb
mov
in
call
out
add
or
int
jle
arpl
dec
scas
xor
movs
inc
jae
pop
out
test
adc
(bad)
fidiv
sub
push
(bad)
clc
(bad)
fsub
mov
mov
ret
int
je
pop
call
inc
das
mov
scas
ja
adc
lahf
fisttp
jns
(bad)
jl
in
pop
cmc
jnp
outs
and
arpl
leave
in
mov
test
and
loope
aas
cmps
and
mov
cmp
fsubr
sbb
jl
adc
bound
mov
mov
ins
js
ret
clc
shl
into
push
pop
pop
mov
dec
jb
mov
mov
ret
fistp
in
or
and
imul
mov
inc
fnstenv
adc
jmp
imul
mov
(bad)
ds
mov
jmp
push
mov
out
mov
inc
idiv
xor
xchg
inc
jbe
and
mov
aam
daa
pop
pop
cmp
enter
aad
cmp
and
push
(bad)
xor
pop
push
stos
xchg
mov
cmp
xchg
pop
jne
pop
sub
mov
cmps
inc
pop
icebp
mov
daa
bound
or
jmp
or
lds
das
mov
jmp
retf
call
(bad)
scas
iret
cmp
stc
sub
sbb
cmp
sti
bound
ror
push
adc
jmp
xor
or
inc
jg
xchg
cli
ficom
push
jbe
into
jne
aam
aam
stos
add
mov
adc
scas
dec
add
in
xchg
stos
cmp
test
fwait
ret
cmps
arpl
or
(bad)
lea
pop
mov
icebp
xchg
dec
clc
(bad)
lahf
mov
(bad)
inc
in
das
fisttp
pushf
loop
dec
ds
add
pusha
jae
jae
sub
jmp
push
inc
(bad)
mov
sbb
dec
cmp
mov
aad
jns
outs
repz
push
repz
cdq
xchg
test
dec
cmp
dec
jmp
cmc
or
or
(bad)
jne
sub
call
leave
mov
int3
je
lods
out
push
mov
and
or
xor
(bad)
jmp
imul
pop
and
cli
inc
dec
jns
xchg
or
push
test
test
add
push
dec
mov
push
xchg
rcl
out
test
pusha
dec
mov
mov
test
pop
fsub
inc
cli
sbb
pop
xor
dec
add
jne
xchg
mov
xor
nop
and
mov
rdpmc
cmp
vaddsubps
adc
xor
cmp
shl
shl
xor
add
add
loopne
ins
or
cmp
mov
call
mov
pushf
mov
(bad)
xor
xor
fsub
pop
dec
jne
jmp
push
loop
daa
lds
inc
xor
pop
cdq
or
sbb
cwde
sub
dec
(bad)
fcom
repnz
mul
adc
push
and
cld
js
adc
or
sub
jns
cmp
ret
movs
xor
cmp
ret
jg
or
mov
jae
in
sub
xchg
popf
mov
jl
popf
dec
jae
push
call
jp
cmps
inc
adc
nop
sbb
and
(bad)
rcl
shr
movs
iret
inc
inc
and
and
jle
jne
in
jno
imul
es
cmovnp
push
std
out
inc
(bad)
retf
popf
leave
das
les
bound
retf
icebp
push
fild
push
aaa
push
jecxz
cmp
popa
add
xchg
fidiv
mov
out
imul
mov
in
mov
pushf
push
xchg
js
pop
and
dec
(bad)
(bad)
jle
fistp
loopne
(bad)
fild
mov
retf
adc
jae
lock
adc
adc
sahf
ins
jl
xor
pop
test
aaa
sar
push
sbb
cli
cwde
xor
dec
pop
das
push
cmp
xchg
pop
lock
fld
cmc
jae
pop
ja
add
sub
cmps
push
inc
shl
pop
sbb
shl
jmp
sti
(bad)
(bad)
jl
xchg
lods
dec
aam
adc
sub
jo
test
sbb
sbb
fsubr
jnp
ss
cs
retf
jno
test
movs
iret
iret
xor
fdivr
inc
test
inc
mov
cmc
xor
mov
ja
in
aad
in
fs
scas
and
pop
xchg
mov
push
dec
adc
xchg
idiv
inc
push
call
or
pop
iret
cs
mov
rcl
lods
pop
cli
stc
loopne
sub
and
xchg
ret
xor
ss
xor
div
in
ds
inc
gs
(bad)
(bad)
mov
stc
jnp
movs
mov
(bad)
xchg
and
sbb
jbe
jns
test
imul
mov
retf
inc
push
jnp
sbb
mov
adc
pop
pusha
xchg
cmp
adc
dec
jmp
mov
fld
loope
dec
adc
inc
xchg
xlat
sti
mov
mov
ficomp
arpl
imul
ficom
aad
jmp
(bad)
fcmovne
add
cwde
add
add
ror
mov
paddd
out
ror
(bad)
fst
sub
aad
ja
cmp
push
pop
adc
stos
jle
rol
out
call
jmp
leave
in
adc
fmul
xlat
sub
repnz
jns
rol
jb
inc
enter
cmp
bnd
pop
ret
push
aaa
push
lods
add
(bad)
mov
rol
pop
sub
mov
push
add
iret
inc
jns
cmc
shr
loop
ss
icebp
rcl
fsubp
adc
sbb
push
push
cdq
push
ficom
iret
cmps
arpl
xor
pop
cmc
mov
jmp
fdiv
cmp
inc
dec
and
xor
and
fisubr
adc
mov
pop
mov
sbb
mov
inc
cdq
dec
inc
mov
dec
mov
pop
mov
mov
mov
ret
mov
fnsave
mov
jmp
in
dec
jae
inc
sbb
push
repnz
pop
xchg
mov
and
movs
or
ffreep
bnd
sub
or
jnp
and
mov
push
lea
sub
scas
cwde
mov
push
push
imul
lods
call
mov
adc
xchg
cmp
ins
(bad)
out
sti
gs
add
pushf
push
popa
mov
stos
(bad)
xchg
call
test
cld
and
ror
in
cmp
mov
mov
jmp
(bad)
sub
mov
mov
and
cmp
aad
mov
dec
outs
movs
inc
rol
(bad)
jmp
loopne
(bad)
push
sub
rcl
mov
jmp
mov
pop
dec
and
lahf
jmp
std
jnp
lahf
enter
out
add
sub
mov
scas
inc
xchg
push
int
push
enter
jno
movs
and
inc
mov
es
dec
add
push
out
in
aaa
ja
adc
daa
fmul
xchg
adc
and
pop
movs
or
rol
(bad)
sti
and
movs
pop
mov
retf
sub
push
clc
aas
dec
sbb
cmp
inc
mov
call
jl
xchg
repz
jecxz
mov
sahf
sub
pop
repz
into
mov
mov
pusha
mov
mov
dec
and
jecxz
pushw
and
or
das
in
dec
jmp
mov
fmul
mov
dec
mov
jecxz
mov
dec
mov
cdq
pop
mov
sbb
mov
out
jp
loopne
into
lods
daa
out
mov
daa
adc
mov
inc
push
sar
xchg
rcr
mov
sub
jno
sbb
mov
arpl
les
or
fmul
sbb
retf
mov
xchg
test
inc
es
jecxz
(bad)
pop
pop
cs
pushf
add
(bad)
pop
mov
movs
rol
dec
ror
jecxz
pop
cmps
jae
adc
es
retf
add
add
mov
push
lds
mov
ret
js
sbb
push
sub
jg
dec
xchg
test
fsincos
in
lea
xchg
lds
dec
repnz
aad
inc
jnp
pop
ins
cmps
pop
aam
shl
push
fucomi
sbb
hlt
cmps
mov
stos
stos
push
jo
dec
shr
and
test
pop
adc
or
(bad)
in
popf
leave
push
js
popf
pop
ret
sub
pop
xor
and
rcr
shr
out
xchg
pop
in
pusha
xchg
ja
mov
push
test
jno
fisubr
pop
inc
call
cmp
add
nop
sbb
sub
data16
jge
push
inc
scas
pop
mov
imul
jecxz
xor
sbb
pushf
fadd
jmp
dec
jmp
cmp
ins
push
outs
xchg
inc
xlat
jae
inc
pop
pusha
addr16
xchg
inc
adc
xor
pop
(bad)
inc
sahf
in
(bad)
jnp
test
call
cwde
push
dec
jns
(bad)
(bad)
xor
ret
xor
sub
push
jbe
cmp
and
push
dec
(bad)
xchg
in
in
inc
sar
ja
pop
fs
call
sub
xor
mov
ficom
pop
mov
int3
push
or
mov
popa
out
retf
sub
call
pushf
fcmovb
leave
mov
pop
mov
outs
dec
xchg
call
cmps
inc
das
mov
shr
scas
inc
mov
jo
xor
pop
fadd
jb
jl
xlat
gs
sti
sub
mov
pop
adc
cmps
fadd
inc
rep
jge
pop
jmp
push
gs
es
adc
mov
scas
sub
xor
jnp
dec
push
call
inc
add
jg
cld
adc
(bad)
jb
jmp
sbb
dec
push
vdivpd
retf
stos
xchg
ret
jnp
int
mul
inc
mul
fnstenv
push
pop
iret
sbb
push
pop
adc
push
popf
lea
or
loopne
shr
movs
inc
into
mov
jno
mov
xor
jp
popf
aas
sub
popf
pushf
retf
jno
(bad)
dec
movs
scas
fidivr
jo
mov
xchg
addr16
(bad)
fcomp
sahf
mov
xchg
dec
aam
and
dec
sti
out
add
mov
push
fucomp
sub
xor
or
aaa
and
jno
in
(bad)
sub
stos
inc
imul
in
movs
aas
cmp
cmp
push
add
retf
xchg
jb
jl
popf
cmps
das
(bad)
stos
sub
mov
lods
daa
das
adc
xchg
cmp
and
cmp
inc
inc
jo
hlt
cmovle
fwait
mov
xchg
out
in
sub
ret
jno
adc
dec
aad
sub
(bad)
jecxz
cmp
fs
mov
ret
(bad)
std
aam
mov
xchg
aam
fsub
es
pop
pop
mov
adc
mov
pop
fisubr
arpl
mov
pop
into
sbb
xlat
mov
xlat
jnp
adc
push
and
pushf
mov
out
mov
mov
bound
pop
add
jecxz
push
ror
(bad)
sti
hlt
loop
pop
and
ret
pop
xchg
adc
dec
push
lds
hlt
sub
mov
into
fisttp
push
fimul
loop
mov
call
adc
inc
adc
scas
sbb
jne
hlt
ds
sbb
lea
imul
mov
sbb
mov
jbe
sbb
bound
scas
mov
rol
mov
pop
pop
addr16
std
pushf
bound
scas
movs
jmp
fdiv
stc
lods
add
dec
xchg
rol
jecxz
cs
repnz
jo
test
mov
inc
or
pop
inc
call
adc
cli
mov
lea
jge
icebp
call
mov
jnp
mov
cli
clc
xor
int
test
cld
test
fwait
lahf
and
pusha
ins
ret
clts
rcr
outs
xchg
mov
adc
data16
out
cli
daa
xor
jmp
push
ret
cmp
retf
sti
stos
mov
add
push
pop
mov
out
push
adc
data16
and
or
or
nop
cli
jo
out
dec
loop
cmp
or
(bad)
(bad)
popa
adc
popf
ret
rol
cmp
daa
push
in
add
loop
cwde
or
ins
pop
aaa
mov
retf
dec
dec
cmps
sbb
and
mov
out
sub
sub
test
pop
(bad)
mov
mov
add
aaa
aad
pop
ficom
sbb
and
inc
jns
xor
dec
fst
std
jmp
in
lock
sub
les
mov
pop
fwait
stc
mov
retf
(bad)
add
and
lahf
fs
test
(bad)
bound
jle
rcl
(bad)
adc
(bad)
adc
sub
dec
add
repz
aas
(bad)
cld
repz
aas
call
icebp
mov
cli
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
(bad)
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
(bad)
dec
inc
inc
push
pop
inc
in
shl
fmul
add
loopne
cmp
fisttp
xchg
daa
cmps
mov
jl
int
adc
dec
cmp
mov
jmp
fidivr
std
popa
iret
add
js
pop
fadd
jns
cmp
movlps
aas
imul
sbb
inc
inc
icebp
push
or
mov
dec
lahf
(bad)
pop
ss
jecxz
push
adc
(bad)
jns
add
out
mov
in
xchg
call
mov
fdivr
lods
jge
fisubr
push
dec
xchg
lahf
mov
js
mul
mov
and
int3
or
add
clc
jge
loope
fdiv
push
faddp
stos
mov
les
mov
push
hlt
fwait
in
xlat
int
mov
in
(bad)
mov
(bad)
icebp
(bad)
aaa
shl
dec
pop
xor
in
movs
push
test
push
call
jmp
add
das
add
pop
(bad)
lods
dec
lea
ret
ret
cmc
or
or
aam
or
int3
pop
lock
aaa
iret
and
adc
jle
pop
call
(bad)
pop
inc
scas
fmul
sub
js
sbb
or
lahf
sbb
aam
arpl
imul
jmp
add
adc
cdq
inc
out
shl
cld
jae
push
xchg
xor
cli
out
jmp
loope
les
sbb
sub
retf
dec
push
fsubr
rcr
mov
inc
in
mov
pop
(bad)
ss
jns
aaa
call
pop
inc
ret
add
dec
pop
rcr
jae
inc
das
xchg
fiadd
movd
mov
(bad)
pcmpgtd
mov
icebp
cmc
mov
call
cmp
push
dec
outs
mov
outs
jns
test
or
out
std
mov
and
int
add
sub
loopne
inc
aaa
ja
sub
addr16
mov
mov
fsubr
mov
sub
pop
cmp
mov
mov
add
add
aas
leave
in
pop
adc
mov
jns
mov
ins
inc
leave
js
mov
dec
dec
mov
les
mov
mov
movs
inc
imul
dec
sar
fdiv
iret
xchg
fild
bswap
and
in
sbb
test
stc
cmp
shl
jo
out
adc
sbb
dec
or
mov
mov
adc
loop
aaa
icebp
retf
fadd
pop
js
cmc
cmp
cld
sub
aaa
scas
dec
test
add
sbb
retf
dec
pusha
push
int3
in
(bad)
mov
ins
xchg
pop
call
outs
adc
dec
imul
mov
in
mov
or
cmp
jns
jb
call
daa
xor
test
lods
fstp
mov
dec
mov
mov
out
dec
out
inc
ror
hlt
out
add
rcl
mul
movs
pop
out
xchg
fsub
xchg
sar
jne
aaa
inc
ret
rsm
mov
addr16
setae
out
loop
jno
pushf
cmps
sub
fisub
hlt
xor
outs
icebp
xchg
hlt
xor
loopne
sbb
fucom
and
dec
daa
inc
int
ficomp
xrelease
out
movs
call
sub
mov
xchg
push
nop
mov
xor
sub
mov
fwait
push
adc
sbb
out
xchg
mov
into
test
imul
in
mov
mov
jae
test
pop
iret
pop
dec
mov
mov
pop
sbb
(bad)
push
push
mov
enter
(bad)
add
mov
xor
sbb
cld
in
pop
jg
pop
adc
loope
bound
and
xchg
bound
cmp
inc
inc
adc
cmp
sbb
inc
icebp
and
adc
std
rol
call
ds
test
cmp
fwait
in
mov
cmp
push
ja
pop
es
mov
mov
xor
imul
jl
ja
ss
sbb
push
popw
pop
or
sbb
mov
mov
sub
(bad)
sbb
sahf
jmp
pop
xchg
lods
aad
cdq
(bad)
sub
cmp
out
and
lods
arpl
test
mov
cbw
call
mov
ja
mov
and
mov
and
mov
pop
hlt
fnsave
cmp
xchg
sub
pushf
add
(bad)
mov
sub
jb
mov
or
out
push
cs
jle
loop
lods
loopne
mov
cmc
or
fisub
(bad)
sahf
retf
mov
sub
sub
into
xor
push
es
add
push
repnz
in
add
hlt
das
pop
pop
mov
in
ja
ja
push
pop
and
ss
into
pop
cmps
je
sti
cmp
popf
push
fisttp
mov
inc
sar
fisttp
mov
and
sub
add
fsubr
mov
xor
rcr
xchg
loope
or
mov
mov
iret
ds
in
daa
lahf
movs
push
pop
push
dec
add
or
outs
inc
sar
or
(bad)
push
pop
neg
stc
sub
je
cmp
adc
imul
ins
cmp
inc
sti
call
inc
and
jae
jg
inc
fdivrp
add
pop
adc
fucomp
ja
jecxz
out
in
xor
xor
xor
cwde
lods
ret
mov
xor
daa
cmp
or
jp
(bad)
rol
xchg
cmp
sub
cmp
ins
imul
out
addr16
jecxz
pop
pop
xchg
inc
test
repz
adc
fcomp
jmp
idiv
xor
outs
or
mov
movs
mov
mov
shl
inc
mov
mov
add
(bad)
retf
xchg
cmp
push
bound
or
mov
ficom
cmp
data16
or
push
ror
js
cmps
sbb
and
sti
les
xchg
mov
int
loope
jno
test
cmp
jg
jle
cmp
ret
dec
pop
int
lods
fnstsw
lods
icebp
ins
pop
loopne
pop
cmp
xchg
stc
arpl
data16
jle
loopne
mov
ret
loop
or
adc
fdivr
in
cdq
inc
call
in
jp
(bad)
mov
or
imul
or
cdq
inc
sub
mov
sbb
sahf
push
les
jbe
fnstcw
not
outs
call
mov
jle
retf
fmulp
pop
pop
push
mov
xchg
sahf
data16
inc
cmp
push
or
or
call
xchg
(bad)
sti
cvtps2pd
inc
out
mov
or
push
aaa
(bad)
outs
mov
cdq
xor
ss
in
retf
inc
push
lds
cmp
and
leave
retf
add
mov
out
mov
xchg
es
adc
repz
pop
ins
imul
mov
sbb
mov
adc
dec
sub
cs
call
jmp
ins
pop
jmp
cmc
test
ja
mov
inc
jg
pop
lahf
jne
cmps
push
lods
pushf
clc
les
sub
rcl
pop
pop
or
clc
push
dec
sbb
cmps
mov
stos
sbb
inc
cli
pop
imul
ja
and
rol
pop
jae
pusha
outs
sbb
or
mov
sub
ret
pop
jb
pop
xor
idiv
int
mov
daa
aas
repz
mov
(bad)
rcl
jno
adc
xor
xlat
jae
rol
popf
cmp
int3
test
cmps
mov
aas
cwde
mov
mov
mov
push
mul
mov
ror
adc
push
jno
sub
shl
cs
push
mov
lock
(bad)
retf
test
add
dec
add
inc
in
test
mov
mov
xchg
pop
cdq
xchg
fucomip
dec
dec
fadd
out
popf
push
jmp
jmp
xchg
push
dec
popf
jo
push
xor
nop
sti
leave
xchg
in
add
jg
int3
xchg
leave
mov
iret
inc
nop
lods
pop
mov
in
mov
adc
ret
add
or
xor
fldenv
xlat
adc
loop
sub
icebp
adc
fwait
jne
lock
cmp
pop
mov
dec
in
push
aam
out
cmp
push
in
add
mov
push
xor
movs
mov
push
mov
outs
fisub
xchg
and
out
push
or
adc
fs
outs
scas
in
fidivr
rcr
jmp
icebp
xor
rol
or
out
leave
call
xchg
(bad)
repnz
mov
xor
loopne
xchg
sbb
xor
fstp
pop
int
adc
xchg
bound
outs
test
xchg
jne
scas
cmp
dec
xchg
and
xor
cwde
sbb
xor
jp
sub
mov
jbe
pushf
xchg
mov
in
(bad)
jo
popf
mov
in
out
adc
mov
lea
fnop
stos
dec
std
ds
cmp
enter
push
lds
jge
xor
push
jl
sar
add
cmp
inc
and
mov
push
mov
sbb
dec
fst
add
cwde
pop
jbe
vmovss
or
add
gs
scas
(bad)
test
inc
and
ins
dec
inc
inc
push
movs
pop
and
scas
out
fsub
std
arpl
stos
inc
adc
(bad)
int
mov
cmps
lods
lods
pop
(bad)
iret
and
sub
shl
jb
jl
sahf
mov
fbstp
pop
or
xor
jns
scas
mov
out
(bad)
pop
push
or
push
movs
fwait
es
sub
mul
or
adc
dec
ins
(bad)
into
add
mov
inc
imul
pop
ret
sbb
data16
mov
pop
xchg
rol
push
rol
cmps
ret
je
sar
pop
icebp
jbe
adc
mov
out
push
imul
fucomi
or
push
test
or
adc
les
and
mov
sub
adc
imul
xor
jecxz
sbb
clc
mov
xchg
arpl
or
(bad)
sbb
mov
adc
rcr
cmp
push
xor
mov
out
inc
push
das
add
and
and
mov
add
inc
fnstsw
inc
xor
movs
mov
sub
loopne
in
sbb
jmp
imul
xchg
test
sub
cmp
mov
imul
sbb
movs
xor
sar
xchg
mov
add
test
test
rcl
mov
mov
push
mov
jp
jns
and
sub
cld
int
ds
inc
mov
sub
dec
sbb
jnp
outs
jne
scas
push
pusha
lods
sub
mov
xchg
popf
adc
mov
stos
shr
pop
lods
cwde
mov
push
test
loop
je
mov
jmp
adc
push
test
push
push
mov
pop
adc
jg
lahf
sub
mov
cmps
ror
or
ss
mov
xchg
jl
jecxz
hlt
test
stc
mov
ins
aad
arpl
aam
cmps
cmp
(bad)
aam
sub
int3
clc
sbb
add
jo
hlt
cmps
inc
xor
and
mov
pop
sbb
xchg
inc
jns
sar
pusha
test
mov
lea
jecxz
jle
xchg
in
pusha
push
xchg
mov
adc
imul
jnp
sub
repz
iret
pop
mov
(bad)
dec
mov
mov
cwde
lock
mov
sbb
push
loop
adc
push
loop
leave
or
dec
xchg
ficom
fwait
into
add
dec
movs
pop
es
fwait
or
or
sbb
shl
loopne
nop
and
jns
pop
shr
out
cli
enter
mov
cmps
add
xchg
adc
push
repnz
jmp
add
jecxz
jns
pop
test
pushf
sub
add
inc
imul
or
stos
ss
xor
sub
pop
(bad)
cmp
xchg
popf
inc
adc
lock
dec
pop
shr
push
lea
sbb
push
jo
push
xchg
jno
daa
or
mov
int
lahf
jns
das
and
mov
jae
mov
loopne
push
je
push
jle
clc
sti
outs
sbb
dec
pop
mov
mov
sbb
dec
jmp
mov
icebp
cmc
mov
fbstp
and
scas
add
pushf
and
fiadd
adc
pop
les
je
adc
stc
test
adc
mov
clc
addr16
outs
xlat
add
lds
scas
jo
div
or
int3
sub
je
mov
push
into
fs
sar
sub
call
and
jne
aam
cmp
loope
sub
test
push
inc
retf
dec
mov
push
adc
cmp
adc
jne
sahf
jl
(bad)
pop
loop
movs
aad
sbb
stos
out
push
dec
arpl
call
lds
cli
sub
xor
xchg
mov
mov
aam
mov
jb
lock
(bad)
cld
repz
aas
dec
loopne
cmps
lods
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jno
pop
inc
in
shl
and
pop
add
mov
test
adc
fisub
pop
mul
sub
in
push
addr16
push
cs
xor
retf
lahf
in
lods
mov
ins
mov
and
shr
pop
js
add
lahf
iret
scas
inc
addr16
mov
mov
mov
push
pop
popa
cmp
(bad)
adc
fnstsw
rcl
xor
lea
sbb
retf
mov
lock
jb
mov
bound
pop
leave
and
pop
cmp
push
cmp
outs
jge
inc
test
mov
call
je
scas
shl
mov
stos
mov
out
xor
jle
lods
aad
mov
push
or
push
or
lods
jl
push
das
paddusb
and
out
xchg
div
popf
data16
addr16
xor
sbb
daa
loope
sbb
xchg
and
fdivrp
jg
arpl
and
mov
inc
repnz
daa
xor
inc
xchg
ror
jmp
sub
or
jae
in
xchg
dec
(bad)
jo
dec
enter
jns
sbb
push
ss
loop
jmp
cmp
adc
lods
and
sti
add
and
jmp
loope
scas
test
jecxz
aad
push
cmp
imul
sub
in
ins
aam
jecxz
int3
mov
ds
sub
fld
je
imul
ja
pop
sub
cmp
mov
jmp
fsub
popf
or
mov
mov
fnstcw
nop
inc
movs
cmp
xchg
lds
adc
push
fdivr
pop
add
sbb
imul
mov
jmp
je
mov
test
add
imul
push
popf
shl
repnz
mov
push
jecxz
xlat
cwde
pop
(bad)
mov
les
je
sahf
sbb
hlt
dec
dec
push
jg
fcmovb
mul
in
mov
gs
(bad)
jle
mov
test
mov
pusha
shl
das
in
mov
jo
call
push
int
jg
mov
pop
push
or
(bad)
pushf
shl
push
jge
stos
pop
add
xchg
mov
or
jae
sub
pushf
push
sbb
cmp
xchg
es
test
in
xchg
jecxz
in
fs
push
mov
imul
mov
mov
(bad)
sbb
sahf
adc
retf
leave
xchg
xchg
xchg
repz
add
sar
inc
sbb
push
or
push
add
dec
xor
cs
sahf
dec
andps
mov
mov
dec
(bad)
cmc
or
lock
and
xchg
aas
pop
daa
push
fist
stos
xor
dec
imul
xor
cmp
cmp
xor
adc
or
push
imul
enter
jae
dec
push
inc
pop
jb
sub
aad
inc
clc
fst
lahf
dec
stos
xor
ins
push
jp
(bad)
div
(bad)
mov
retf
les
xor
add
mov
or
pop
dec
xchg
rcr
loop
pop
pop
das
pushf
jmp
retf
add
or
aam
mov
in
cmp
sub
stc
retf
pop
loop
pusha
mov
push
pop
jmp
xchg
inc
xchg
xchg
into
je
iret
mov
(bad)
lock
push
add
mov
dec
fwait
ret
mov
xchg
clc
lea
jmp
adc
mov
in
dec
mul
out
into
rcl
(bad)
mov
xor
dec
mov
cli
xor
mov
sub
loopne
xchg
(bad)
fucomp
in
fisttp
cmps
cmp
stos
call
mov
sub
data16
or
adc
xchg
cs
cld
test
dec
outs
mov
mov
jo
mov
enter
push
(bad)
mul
sub
sub
into
test
inc
add
bound
push
push
cmp
ret
lahf
xor
iret
movs
adc
xlat
mov
and
cmp
sbb
inc
int3
sbb
pop
ret
sti
cmp
jno
push
cmp
arpl
xor
cmp
mov
mov
or
ins
mov
imul
popf
lods
ins
jle
mov
mov
jmp
mov
into
xchg
loop
pop
sub
int
jo
cmp
pop
ins
push
jne
jmp
mov
jnp
outs
xor
sub
lods
or
inc
adc
sub
ins
xchg
rol
stos
cmp
inc
cmps
jge
sbb
in
ja
shl
adc
sub
daa
push
xor
imul
mov
push
and
aas
adc
into
dec
ja
lods
aaa
ja
sub
in
call
push
sub
pop
data16
cwde
inc
jl
cmp
xor
fsub
jne
xchg
sub
lahf
jae
jo
and
fwait
aas
call
cmp
imul
stos
scas
lahf
or
inc
xor
out
cmp
lds
cmp
aas
dec
or
call
outs
jle
movs
jae
mov
mov
add
cld
fnsave
rcr
push
(bad)
xchg
test
sar
into
xchg
in
cwde
hlt
cmp
int3
ds
jno
aaa
int3
pusha
in
cmp
ret
mov
push
cmp
aaa
sub
arpl
in
jnp
ja
pop
hlt
push
sbb
fsub
cmc
sbb
lahf
icebp
push
and
ja
mov
xchg
lea
call
stos
in
or
dec
stc
and
out
mov
xchg
and
nop
sbb
ss
add
mov
pusha
push
pop
mov
cs
xchg
dec
ja
(bad)
mov
dec
xor
jmp
nop
popa
jne
fs
jns
jbe
pop
cmc
das
jecxz
ja
or
inc
sub
pop
fs
inc
(bad)
mov
cli
stos
es
or
(bad)
fnstcw
sub
mov
push
mov
loope
repz
pop
cmps
aam
dec
aad
cmp
dec
xchg
sar
out
pop
(bad)
ja
test
xor
fld
mov
xor
test
lds
sub
mov
or
arpl
xchg
pop
imul
icebp
(bad)
xlat
mov
dec
dec
mov
daa
sahf
and
xlat
cld
push
shl
and
lea
sub
adc
cmpps
cmp
cmp
push
xchg
call
lods
sub
pop
test
add
mov
xor
pop
call
mov
add
push
data16
pop
retf
mov
dec
push
pop
mov
scas
(bad)
mov
clc
sbb
loope
shld
mov
fimul
in
out
cmp
jmp
sub
cmp
and
fdivr
adc
jg
outs
sbb
jle
(bad)
xchg
xor
jne
push
loopne
inc
stos
xor
popf
xchg
cmc
pop
dec
leave
(bad)
jp
mov
loop
xor
fisub
nop
pop
inc
xchg
sbb
push
sti
fcmovnu
xchg
test
push
add
xlat
sbb
push
dec
cmc
xor
(bad)
ficom
es
outs
addr16
adc
sub
js
push
adc
test
mov
test
mov
dec
lahf
mov
dec
cmp
nop
jb
retf
mov
cli
loopne
or
add
ins
mov
or
shl
dec
(bad)
(bad)
mov
test
js
mov
mov
sub
mov
xor
daa
cmc
jbe
out
icebp
and
sbb
ja
shl
push
mov
mov
and
mov
imul
adc
xor
and
psubq
gs
repz
imul
mov
les
imul
push
sub
and
push
pop
adc
mov
aaa
mov
pop
cmc
mov
int3
aad
pop
mov
test
out
add
jnp
(bad)
xchg
ror
clc
imul
jl
cmp
xchg
test
mov
cs
in
ja
adc
pop
stos
mov
xchg
cmp
imul
sbb
stc
mul
aas
adc
test
std
fimul
js
out
out
add
leave
loop
pop
shr
lahf
push
cmps
rcr
jb
inc
out
inc
fsubr
jb
fnstcw
addr16
xor
cli
les
loope
into
imul
and
xchg
shr
mov
mov
mov
cmps
xchg
stos
dec
in
pop
cmp
and
(bad)
xchg
jmp
call
adc
cmps
or
cli
mov
(bad)
imul
jmp
jae
mov
xor
loope
adc
setle
cdq
arpl
adc
dec
jb
mov
cmps
loope
lahf
shr
fwait
dec
pusha
aam
cmp
outs
and
and
nop
fistp
xchg
push
pop
call
(bad)
leave
jae
or
js
xor
pop
call
mov
retf
stc
and
jo
popf
xor
dec
jns
push
and
mov
push
int
ds
popa
push
jo
mov
sub
or
xchg
imul
xor
add
popa
retf
mov
dec
stos
icebp
sub
pop
jmp
(bad)
push
adc
aad
aam
outs
ret
push
outs
pop
push
pusha
xchg
dec
scas
(bad)
dec
mov
cmp
xchg
adc
push
outs
lea
std
out
(bad)
add
cmp
movs
(bad)
sbb
push
fadd
test
dec
and
xchg
or
adc
mov
mov
cmp
mov
in
gs
cmp
xchg
cmp
in
sti
inc
push
mov
dec
test
adc
test
push
hlt
adc
xor
push
scas
nop
push
(bad)
ds
je
mov
mov
stos
loope
jae
jge
fistp
cwde
leave
mov
cmps
xchg
jp
mov
mov
xchg
ret
push
fcomp
xor
das
loopne
(bad)
fcmovb
lds
push
inc
pop
jnp
stc
pop
xlat
push
cwde
dec
outs
outs
inc
aas
and
loop
rcl
call
clc
and
loop
ds
sub
sub
cmp
stc
js
cmp
lahf
(bad)
push
xchg
in
xlat
icebp
into
fstp
movs
idiv
and
push
jecxz
add
ja
icebp
mov
icebp
xchg
hlt
push
sbb
aam
pop
push
mov
ins
sti
bound
out
loopne
mov
or
jb
fcomp
sahf
xor
or
outs
jns
dec
rcl
push
les
iret
sar
adc
xor
mul
adc
and
(bad)
mov
sbb
test
mov
inc
jb
pushf
loope
and
pop
repnz
or
or
ret
jbe
sbb
sub
cmps
cdq
cmp
cmp
lods
loop
jge
(bad)
or
data16
stos
fld
cmps
int3
out
sbb
fld
and
and
sti
fild
mov
push
scas
cmp
jno
push
xchg
aaa
mov
sbb
push
cmc
mov
adc
call
fadd
mov
mov
fwait
and
mov
mov
and
leave
mov
fidiv
xchg
mov
sub
push
xor
mov
add
and
jo
cmp
repz
loop
daa
add
push
push
push
sbb
push
inc
push
mov
mov
jp
cmp
dec
and
pop
jne
jne
sub
les
push
mov
call
cwde
imul
test
dec
rol
add
je
dec
sbb
jmp
in
adc
les
jmp
repnz
sub
or
ret
ss
int3
retf
outs
std
mov
adc
es
leavew
test
cmps
sahf
sub
xchg
sbb
pushf
mov
cmps
xchg
rol
aam
das
mov
pop
fdivr
in
call
xor
nop
hlt
int
jg
ret
fist
add
daa
jecxz
mov
sub
or
sub
jne
std
jmp
jecxz
jae
out
lock
ins
adc
shl
fcomip
std
mov
sbb
jae
sub
test
push
call
push
dec
lds
(bad)
adc
lahf
dec
sbb
(bad)
jns
jmp
pop
fs
fcmovb
sub
sahf
pop
xchg
inc
adc
sbb
cmp
rol
xchg
and
sbb
jge
mov
push
fwait
jbe
test
pop
mov
mov
xlat
fadd
shl
push
xor
ins
jne
xlat
jp
dec
mov
mov
or
mov
imul
call
sti
mov
enter
sti
cs
push
mov
jmp
dec
jecxz
or
pop
xchg
and
fistp
test
(bad)
(bad)
pop
jmp
and
push
movs
ret
rcl
mov
mov
xchg
push
movs
mov
fsubr
add
jp
push
jmp
jl
gs
cmps
shl
loop
jae
cmp
or
(bad)
xor
mov
jno
jne
and
sahf
jbe
cmps
fs
sub
cmp
sbb
shr
outs
pop
cmps
or
fwait
pop
call
cmp
sub
pop
aad
ja
sbb
idiv
lods
out
or
aaa
xchg
loop
aad
dec
mov
xchg
dec
inc
pop
addr16
cld
sub
cmp
mov
jmp
cs
inc
fldcw
lods
pop
out
xor
mov
iret
adc
ficomp
ds
inc
(bad)
mov
mov
add
retf
into
sar
cld
repz
aas
(bad)
cld
repz
add
(bad)
(bad)
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jno
pop
inc
in
shl
aam
add
loopne
adc
mov
mov
inc
inc
inc
test
pop
jmp
mov
cdq
cmp
jno
fnstcw
fs
adc
mov
add
lds
bound
js
xchg
(bad)
mov
jmp
retf
dec
outs
fsub
int
lea
loop
fwait
xor
sbb
(bad)
in
or
mov
into
jl
or
mov
cmp
mov
(bad)
sub
push
xchg
push
cmp
ret
mov
add
jg
mov
in
sub
or
jl
mov
fst
adc
xchg
adc
pop
sbb
frstpm(287
xchg
inc
inc
in
or
mov
gs
xor
pop
dec
dec
sub
add
lea
(bad)
lods
addr16
aad
push
enter
mov
jmp
xor
scas
xchg
xor
xchg
rol
pop
nop
stos
test
fdivr
out
arpl
fiadd
pop
cld
inc
push
or
push
sub
sub
clc
sbb
ret
dec
push
and
mov
push
leave
adc
xor
stos
in
iret
mov
xor
jbe
mov
jb
push
das
popf
out
mov
cs
pusha
(bad)
mov
add
scas
xchg
push
imul
inc
and
imul
jl
mov
into
mov
xchg
pop
shl
xor
fs
into
add
jl
in
icebp
lock
jne
out
dec
mov
pusha
and
pop
sub
adc
nop
inc
cmp
mov
push
daa
sbb
clc
in
(bad)
cmp
jp
add
and
fwait
shr
add
sub
nop
mov
pop
push
dec
sbb
mov
fld
call
jns
dec
fadd
mov
out
sti
nop
pop
pop
cmc
inc
or
sbb
loope
lahf
and
mov
push
cmp
addr16
mov
data16
shl
xchg
or
mov
cmp
and
jo
out
and
add
data16
test
ds
(bad)
fmul
jle
test
hlt
pop
push
ret
loop
jmp
adc
mov
aaa
into
mov
jns
lock
mov
or
pop
xlat
pop
pop
(bad)
or
leave
adc
xor
in
push
nop
inc
lods
not
jnp
(bad)
call
stos
dec
iret
rol
push
mov
push
mov
dec
retf
mov
cmp
xchg
cmp
in
mov
sbb
aam
test
xchg
dec
xchg
push
mov
and
lods
jns
push
not
mov
and
mov
pop
inc
jecxz
mov
int
fwait
add
sbb
and
aam
call
in
push
jp
aas
jge
imul
adc
jno
(bad)
aad
mov
mov
xchg
shl
les
test
test
push
jmp
and
in
mov
xchg
les
fist
shl
in
fcomi
push
inc
mov
xchg
pop
mov
gs
adc
dec
jne
dec
mov
push
mul
mov
dec
and
inc
mov
lds
jecxz
mov
jb
add
adc
test
or
in
fist
sub
mov
movs
aam
pop
jp
call
into
fst
mov
shl
pop
test
jl
(bad)
ss
xchg
or
loope
lods
icebp
pop
xor
imul
pop
add
test
and
(bad)
rol
cmc
push
movs
arpl
or
lea
cmps
int
arpl
enter
mov
out
pop
fidivr
jo
xchg
dec
lock
scas
add
addr16
inc
jns
jmp
in
xchg
cmp
les
rol
jmp
sbb
and
movs
iret
ins
sub
ss
and
mov
(bad)
stc
mov
xchg
cmps
fadd
pop
test
cmps
imul
and
loope
sbb
inc
sar
cmp
jmp
push
and
aam
leave
push
(bad)
or
repnz
push
jmp
cdq
pop
sub
push
cli
cmc
fidiv
les
xor
mov
sbb
jle
jmp
loop
adc
test
cmps
je
mov
cmp
popf
or
mov
popf
mov
fwait
imul
pushf
(bad)
mov
xlat
nop
cmps
jno
fnstsw
fidiv
int
mov
retf
jmp
add
in
cmp
jo
mov
or
ss
fadd
and
call
push
fist
out
fidiv
cdq
jnp
icebp
ret
or
cmp
mov
fisttp
push
dec
int3
mov
fistp
push
into
push
or
retf
repnz
pop
scas
inc
sbb
cmp
ss
jbe
xchg
fisub
(bad)
xor
add
bound
fidiv
in
into
jmp
pusha
into
cs
cmp
dec
(bad)
cmp
pop
std
xchg
xor
test
idiv
xchg
shr
lock
std
std
jnp
ror
jge
xor
jge
shl
xchg
clc
xchg
leave
mov
xlat
xchg
push
or
pop
push
xor
pop
mov
fidiv
sub
jo
xchg
jg
clc
adc
mov
fistp
int3
leave
ins
dec
jecxz
xchg
xchg
shl
nop
jmp
(bad)
push
std
in
push
mov
cmc
icebp
and
aas
gs
(bad)
ins
inc
mov
xchg
xor
test
rol
and
jo
sbb
push
mov
inc
push
cmc
pop
repz
mov
lock
neg
or
outs
pop
stos
xor
iret
pop
xchg
dec
out
add
cmc
test
xchg
push
dec
cld
xchg
jnp
fucomi
in
mov
pop
sub
push
fwait
(bad)
fcomip
add
clc
add
jns
jmp
jns
and
popf
fcmovbe
inc
push
push
aad
jl
lods
xlat
jmp
cwde
push
mov
data16
outs
xchg
repnz
or
fs
loope
mov
push
ret
in
inc
icebp
scas
int3
pop
(bad)
inc
push
dec
add
dec
add
inc
in
jge
shl
cmp
leave
fs
xchg
push
jmp
in
fiadd
jo
loope
mov
mov
push
ficom
ins
pop
push
das
pop
jmp
pop
out
enter
jecxz
dec
fidiv
or
mov
loopne
pop
cmp
(bad)
sub
xchg
mov
push
imul
ins
stos
xchg
hlt
aam
es
adc
pushf
inc
jge
dec
inc
bound
sbb
aam
mov
mul
dec
movs
mov
xchg
mov
adc
enter
pop
sub
lds
mov
pop
mov
out
call
scas
les
sahf
mov
outs
cmp
sahf
and
push
jecxz
lods
iret
scas
mov
mov
and
adc
adc
outs
xchg
ret
add
ret
jne
or
div
aam
cmc
loop
mov
mov
mov
jecxz
loope
das
retf
jbe
mov
sub
mov
mov
call
arpl
add
cmps
shl
aad
aam
inc
cmp
icebp
cli
das
xor
and
pop
ret
add
push
jecxz
mov
pop
and
jle
ficomp
out
icebp
jmp
or
movs
mov
push
or
pop
sub
lods
or
gs
popa
pop
and
fbstp
mov
int
leave
inc
jmp
and
add
in
jo
into
imul
or
xor
xor
ins
mov
jg
xchg
cmp
out
mov
(bad)
pop
cmps
cmp
dec
(bad)
dec
mov
dec
retf
or
aam
xchg
sahf
jg
shl
pop
(bad)
sti
sub
imul
jmp
or
dec
(bad)
push
inc
fadd
push
pop
xlat
retf
aas
test
ins
into
icebp
ret
test
adc
(bad)
jnp
jge
mov
cs
sub
jmp
ror
mov
mov
inc
out
dec
mov
in
adc
fwait
xor
inc
xor
jae
push
jnp
mov
cld
outs
outs
mov
jne
pop
imul
jmp
jge
in
hlt
sub
cmp
and
adc
aad
cmc
ja
push
dec
xchg
pop
enter
dec
pop
test
xor
rdtsc
pop
fnstsw
jmp
xor
fcomip
test
mov
in
ret
mov
add
jo
scas
mov
dec
dec
ss
and
out
pop
mov
push
mov
mov
fwait
xor
xchg
push
fild
inc
sbb
sub
xchg
scas
rol
movs
outs
xchg
dec
xor
scas
sub
int
icebp
sub
adc
jnp
xchg
dec
jp
inc
jno
dec
imul
shl
cmp
cmp
adc
cs
jns
cmp
ja
cld
xor
jb
and
(bad)
adc
add
sbb
ins
mov
sbb
inc
jns
cmp
enter
movs
mov
jmp
enter
xor
inc
mov
inc
out
movs
(bad)
mov
sbb
bnd
(bad)
loopne
xchg
stc
push
inc
shl
inc
mov
cmc
ret
sub
xchg
push
ret
xor
rsm
sbb
inc
pop
jle
jns
cdq
push
cli
enter
jb
lds
shr
ficom
jmp
cmp
retf
push
jmp
in
inc
stc
push
pop
pop
inc
mov
call
push
add
xlat
cmp
scas
daa
lea
pop
mov
icebp
or
popa
and
inc
daa
cmp
jno
sahf
jb
aad
pop
mov
dec
push
mov
mov
xor
xchg
mov
das
mov
and
xchg
jae
(bad)
sub
jl
into
and
bound
or
cmp
sahf
sahf
adc
jae
dec
add
jnp
je
adc
jecxz
dec
call
xor
cmps
and
fistp
fadd
ret
mov
or
push
sub
mov
cli
push
icebp
into
add
scas
out
mov
push
or
cmp
mov
cmps
call
inc
sbb
adc
leave
jns
xchg
retf
sub
dec
jbe
psubd
gs
imul
push
jo
pop
jbe
cmps
mov
daa
cmps
mov
pop
adc
sbb
and
sbb
pop
jge
loope
xchg
sahf
jb
iret
mov
xchg
fs
xor
repnz
in
std
and
mov
dec
jge
call
inc
dec
inc
cmp
mov
mov
cmp
popa
xchg
test
std
and
jno
xor
xor
stos
call
or
cwde
in
lock
cmp
movs
fiadd
mov
push
jae
outs
mov
and
outs
and
dec
push
les
fistp
jl
jp
idiv
pop
pop
inc
lods
pop
stc
jecxz
mov
jp
mov
mov
clc
sub
push
stos
fcmovb
bound
cmp
inc
fwait
xchg
jno
addr16
dec
xchg
jge
push
std
out
loopne
arpl
popa
(bad)
cmp
test
popf
mov
mov
sub
in
dec
loopne
xor
inc
mov
fist
repnz
add
in
(bad)
outs
ds
add
or
and
push
sub
cli
clc
pusha
std
push
jle
push
cs
xor
mov
jg
dec
sbb
jmp
fistp
mov
jmp
mov
xchg
xchg
imul
sbb
or
(bad)
in
call
icebp
jne
mov
adc
xlat
arpl
xor
cdq
ret
inc
mov
mov
cmp
jmp
data16
inc
mov
sbb
nop
and
pop
jne
sar
or
inc
leave
leave
clc
in
pop
push
cli
dec
cmp
push
scas
fdivr
sub
and
mov
cmp
(bad)
dec
push
and
cs
imul
mov
push
stos
cld
cmp
test
test
loope
jno
shr
sbb
xor
mov
rcl
in
outs
fcom
stos
xchg
xchg
loopne
sbb
mov
xor
push
(bad)
adc
add
push
jns
adc
push
ret
push
dec
xchg
cwde
pusha
jg
sub
and
scas
mov
outs
call
jmp
mov
jmp
dec
hlt
mov
xor
sub
adc
std
cmp
sub
mov
sbb
aaa
adc
sub
cli
xchg
sub
sbb
cmp
jecxz
cmps
cs
adc
arpl
xchg
stos
adc
and
mov
out
xchg
in
cmp
xchg
fst
xchg
nop
adc
pop
mov
rcl
loope
fwait
dec
scas
inc
js
test
fsub
adc
aaa
ds
int3
dec
push
(bad)
adc
push
je
neg
lds
shr
fild
or
movs
les
or
pop
xchg
test
jae
sbb
or
dec
fwait
or
scas
ins
in
(bad)
adc
cmc
adc
test
loopne
cs
in
cmc
(bad)
xor
clc
add
mov
sub
jae
jl
lods
das
xchg
fs
xchg
hlt
sahf
push
cmc
mov
in
mov
xchg
jnp
mov
push
cmp
adc
mov
outs
sub
mov
mov
adc
imul
inc
dec
or
mov
sbb
dec
pusha
fwait
push
fdivrp
dec
add
into
daa
fldenv
(bad)
jbe
mov
ins
adc
retf
jmp
(bad)
cld
repz
aas
(bad)
cld
repz
call
add
pop
mov
or
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loopne
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jb
pop
inc
in
shl
aam
add
loopne
jno
pop
addr16
lods
mov
xchg
jne
addr16
sahf
loope
addr16
cmp
sti
push
pop
inc
in
jnp
nop
cmp
xor
es
inc
into
in
fwait
mov
aas
hlt
cmp
inc
mov
sbb
mov
xor
or
repnz
imul
mov
div
(bad)
mov
stos
xchg
int
push
loop
aam
mov
retf
jmp
dec
gs
fild
cmp
pop
push
(bad)
inc
jb
loopne
scas
pushf
cmc
jmp
lock
(bad)
add
repnz
push
or
add
mov
jb
mov
xchg
mov
push
cmp
js
sbb
push
sub
pushf
out
ror
adc
cmps
push
xor
neg
popa
ficom
mov
sbb
inc
pop
rcl
cmp
iret
mov
test
out
inc
mov
jne
mov
or
shl
jno
in
mov
cmc
test
pop
faddp
pusha
retf
mov
ds
cmp
sar
mov
repz
iret
sub
out
sbb
cdq
xchg
push
cmp
xlat
mov
xchg
jg
out
xchg
mov
and
cmp
mov
inc
jmp
inc
(bad)
aam
mov
int
push
pop
mov
mov
ja
pusha
das
shl
sub
sbb
into
repnz
lods
out
or
bound
dec
or
gs
mov
stos
dec
jne
xor
fidiv
jnp
mov
jle
outs
cld
sub
xor
call
ds
push
pop
rcr
xchg
adc
xor
pop
and
xchg
lods
push
ss
add
mov
mov
hlt
dec
or
pop
(bad)
ds
int
lods
mov
retf
jmp
nop
mov
lahf
pop
into
(bad)
int3
ins
loop
pop
lods
mov
test
movs
mov
inc
dec
inc
stos
jb
mov
xor
adc
stc
pop
test
mov
and
scas
(bad)
mov
sbb
mov
into
and
movs
retf
or
add
xor
mov
sub
dec
xchg
int
aam
inc
xchg
mov
and
out
xchg
sbb
in
push
sub
ficomp
out
adc
mov
push
jecxz
data16
fwait
es
jnp
or
aaa
sub
push
in
leave
mov
adc
pop
into
pushf
rcl
shr
xchg
push
dec
pusha
pop
pop
sti
xchg
inc
fisubr
jns
mov
jecxz
test
xabort
mov
xchg
jnp
ins
push
call
jg
sbb
inc
mov
loop
mov
ds
lods
arpl
sbb
rcl
arpl
dec
bound
dec
scas
(bad)
loop
stc
sub
pop
shr
adc
dec
jmp
addr16
ss
das
xchg
lods
inc
pop
push
sti
sbb
cmps
sub
cmps
dec
rcr
mov
arpl
dec
mov
js
and
adc
rcl
in
mov
or
xchg
pop
sti
sub
inc
mov
sbb
mov
retf
movs
sbb
shl
js
jge
test
fidiv
test
sub
jb
mov
popa
lods
inc
cmc
jle
js
ss
inc
jae
shr
mov
push
fs
scas
or
fnstsw
adc
repnz
sub
stc
sub
bound
xchg
and
xchg
lds
fwait
cmps
sub
je
dec
lds
stos
out
or
jno
sub
inc
mov
or
sbb
mov
sbb
out
mov
push
sbb
in
push
xchg
xchg
add
mov
and
jae
pop
stc
sbb
call
cdq
ret
xchg
pop
pop
adc
cmc
movs
jbe
or
push
arpl
nop
cmp
scas
mov
aam
les
xor
mov
out
inc
xchg
xchg
test
xor
xchg
pop
icebp
movs
mov
push
scas
jmp
push
pop
rol
mov
xchg
or
push
adc
stos
mov
dec
mov
dec
pop
pushf
loope
adc
or
scas
ins
sub
shl
test
in
jnp
rcr
and
mov
cmps
scas
ror
xor
sub
fstp
sar
nop
in
dec
cmp
adc
aam
mov
std
mov
adc
xchg
movs
or
rol
pop
sbb
outs
adc
push
stos
dec
pop
int3
outs
icebp
jp
(bad)
pop
jle
pushf
xchg
sti
add
mov
sbb
ja
sub
sub
clc
scas
out
sahf
cs
sbb
push
arpl
test
cmps
push
fsin
adc
mov
imul
dec
mov
aas
lahf
fsincos
cmp
fdiv
popa
cmp
mov
mov
jg
and
fcom
fs
fld
mov
ret
mov
jle
or
sahf
in
sub
aad
nop
dec
out
stc
xchg
adc
mov
cmp
inc
mov
aaa
cmps
aad
and
es
inc
daa
adc
loop
or
mov
adc
jp
ss
mov
push
retf
push
stos
sar
cli
add
out
leave
(bad)
jae
push
or
xchg
mov
loopne
je
daa
mov
lea
cmps
pop
ins
jnp
mov
mov
stos
or
push
jo
adc
mul
call
push
pop
xchg
shl
ds
push
mov
addr16
stos
fnsave
xor
dec
test
pop
or
out
fldenv
daa
lea
add
add
repz
mov
mov
pop
cmps
push
lods
xchg
jb
xor
jp
cmps
mov
ins
and
mov
mov
imul
stos
mov
cmp
lods
xchg
jmp
adc
xlat
psubusb
jp
or
jmp
push
mov
outs
sbb
xor
scas
in
and
nop
add
sub
inc
sbb
mov
ss
pop
xchg
cmp
mov
ds
enter
rol
cmp
mov
add
mov
pop
lds
hlt
js
leave
xor
xor
jae
cli
jmp
or
fdivr
jbe
pop
pop
pop
jb
sbb
imul
mov
rcr
jo
leave
(bad)
jmp
fs
ficom
fldcw
xchg
enter
scas
fdivrp
stc
sete
es
fs
pop
cmp
sar
pop
sbb
fld
cmp
jge
out
push
and
xchg
icebp
pop
jmp
fldcw
jbe
aad
or
clc
fsub
aam
jle
into
xchg
xchg
loopne
or
fistp
jns
sahf
push
pop
pop
sbb
fsub
sub
dec
hlt
sbb
shl
cdq
clc
nop
loop
shl
out
mov
mov
jecxz
or
push
add
cld
mov
pop
lahf
jne
dec
sub
mov
sbb
push
in
and
push
xor
out
mov
neg
mov
and
cmps
ror
stc
or
or
jle
scas
lods
dec
jp
(bad)
scas
mov
js
loopne
xor
xchg
outs
inc
ins
cmp
arpl
push
rol
scas
imul
ins
enter
mov
sbb
inc
retf
in
mov
push
jo
movs
pop
push
cmp
imul
fmul
mov
sar
pop
(bad)
or
pop
out
fisttp
dec
jp
mov
pop
cli
xor
or
mov
pop
and
push
ret
icebp
and
mov
sbb
movs
test
dec
jne
jbe
mov
es
jmp
adc
scas
je
outs
xor
push
js
inc
and
xchg
jg
or
push
sti
pop
inc
inc
cmp
xor
(bad)
mov
dec
aam
pop
mov
sbb
ss
test
mov
mov
dec
scas
inc
aaa
jno
adc
jbe
xchg
mov
dec
loope
(bad)
and
inc
or
mov
dec
test
or
mov
sub
les
mov
jbe
dec
mov
sub
shl
lods
rcr
sub
mov
mov
out
es
test
jecxz
sub
ins
mov
sbb
scas
jmp
mov
cmp
(bad)
mov
inc
and
in
inc
sub
push
aam
jecxz
or
in
lahf
loope
mov
aaa
jl
jmp
sub
pop
inc
push
fistp
push
pop
xchg
jmp
sbb
sbb
pop
in
fnstsw
dec
in
mov
fmul
add
mov
loopne
sbb
std
mov
(bad)
jge
inc
lahf
pop
dec
test
fst
mov
fmul
jg
sub
mov
call
jl
sahf
mov
scas
fimul
push
push
or
mov
xor
loope
fs
test
outs
mov
ins
scas
std
retf
dec
scas
out
mov
cld
(bad)
shl
(bad)
and
or
mov
call
cdq
mov
jo
sbb
jnp
mov
sub
jns
mov
aam
int
mov
mov
lods
hlt
mov
bound
push
cmps
das
and
stos
fbstp
aas
repz
or
jg
dec
inc
loopne
mov
add
add
pop
jne
jge
xor
mov
daa
inc
ins
lahf
(bad)
data16
add
add
call
retf
adc
stos
out
into
std
inc
xor
sbb
sbb
and
mov
(bad)
rcr
pop
out
fstp
xchg
and
jg
or
in
stos
jb
call
cs
inc
or
mov
test
test
cmps
pop
pop
fidiv
mov
mov
shr
repnz
les
fs
xlat
movs
aas
ret
scas
xchg
dec
sti
imul
aad
or
dec
cdq
xchg
les
push
lea
or
sub
movs
add
fnstsw
mov
sub
push
adc
fldenv
push
add
sub
inc
shr
xor
mov
scas
add
xchg
not
ss
sbb
stc
jno
jge
(bad)
jno
mov
ret
aas
xchg
lea
inc
fnstsw
push
dec
jns
scas
outs
out
or
mov
pop
adc
int3
mov
cs
fist
test
das
outs
sub
dec
sub
inc
cmp
in
push
push
leave
jecxz
clc
clc
pop
(bad)
cmp
add
arpl
mov
lea
adc
aaa
sbb
xor
call
and
lods
test
or
lea
jmp
mov
mov
jne
mov
mov
out
sbb
xchg
pop
ins
lock
enter
push
dec
lods
scas
enter
mov
sub
movs
(bad)
movs
mov
(bad)
fild
std
push
sub
sbb
xor
imul
sahf
pop
pop
stos
jmp
mov
inc
jno
scas
dec
into
fsubr
cmp
scas
ror
out
cwde
ds
loop
xchg
mov
xchg
enter
jns
add
call
dec
mov
pushf
mov
pop
jno
pusha
sahf
pop
std
jecxz
enter
cld
retf
in
(bad)
push
push
mov
fld
cmp
jnp
sbb
into
out
add
sbb
sbb
cmc
(bad)
cmp
cmp
inc
cmc
pusha
inc
cmp
cmp
push
jp
lods
imul
out
push
std
sbb
xchg
stc
ins
into
sub
and
in
cmps
mov
call
push
adc
cmps
bound
outs
(bad)
lock
sti
xor
(bad)
repz
hlt
jmp
cli
push
mov
rcr
test
cmp
add
fiadd
es
gs
mov
pop
iret
ins
push
sbb
and
lds
push
dec
push
inc
sbb
imul
(bad)
(bad)
aaa
dec
push
loope
mov
xchg
mov
dec
adc
ss
ins
imul
(bad)
(bad)
jp
pop
dec
cmp
cmps
in
or
pop
leave
sbb
adc
jns
push
in
fldenv
fst
or
mov
adc
in
push
das
and
lods
daa
mov
loop
das
xchg
scas
fcomp
stc
aam
hlt
not
pop
xor
ret
iret
sbb
cmp
adc
ficom
aaa
mov
adc
ficomp
popa
scas
mov
and
cli
mov
ins
leave
mov
cmp
mov
add
xchg
pop
hlt
and
inc
rcr
loop
jb
dec
fnclex
cmp
sub
in
push
data16
sbb
xchg
imul
icebp
jno
or
mov
loop
in
pop
in
mov
rcl
ins
(bad)
jl
fwait
xor
pop
cmp
and
cmps
pop
loop
xchg
sahf
js
xlat
jle
mov
jecxz
out
mov
add
repz
loop
add
js
sub
enter
ja
or
ficomp
push
aam
push
imul
pop
xchg
pop
cmps
mov
inc
or
bound
push
sub
fcmovb
dec
sbb
stos
bound
mov
idiv
(bad)
stc
out
jg
stc
out
or
cld
setb
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loope
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jae
pop
inc
in
shl
xchg
or
dec
jmp
inc
dec
and
movs
sbb
ror
inc
inc
jp
dec
inc
mov
je
and
mov
and
mov
jle
repz
mov
fs
inc
(bad)
arpl
aas
sahf
jae
fcomi
xor
movs
js
jbe
rcl
je
adc
mov
mov
fisubr
jl
(bad)
test
mov
js
pop
mov
adc
das
or
dec
mov
pop
les
and
lea
pop
js
add
cmp
and
addr16
je
pop
mov
inc
(bad)
fmul
or
mov
sti
lahf
movs
sbb
jns
das
enter
leave
sbb
cli
cmc
lock
js
(bad)
jmp
ds
adc
das
mov
pop
xor
cmp
xchg
stos
aaa
ret
inc
movs
call
(bad)
adc
les
test
mov
xchg
ins
shl
xor
mov
xor
movs
adc
retf
in
test
mov
push
dec
or
jmp
cmp
ss
ins
enter
shl
lods
mov
cli
aaa
sbb
dec
mov
sub
shl
rol
push
or
jl
cmp
bound
pop
data16
cmc
and
mov
stos
addr16
mov
test
bound
shr
in
fxch
lea
add
shr
jb
pushf
iret
xchg
out
aad
add
jecxz
cmps
test
adc
add
ret
mov
mov
cld
ins
outs
mov
cmps
ins
or
ds
dec
arpl
add
outs
fcomp
nop
add
xchg
mov
pop
outs
push
mov
dec
or
dec
test
fxtract
push
dec
bnd
fcomp
push
mov
push
pop
and
popf
repz
fdivr
inc
jmp
stos
mov
je
fiadd
icebp
jp
rcl
dec
shl
lds
sbb
loope
inc
cmp
hlt
mov
lea
data16
rol
inc
adc
jl
arpl
test
test
in
lahf
fnsetpm(287
or
data16
out
mov
push
lods
jge
fst
(bad)
pop
mov
mov
sbb
add
in
jmp
shl
push
cld
nop
pop
mov
add
xor
xchg
fisttp
mov
mov
aam
imul
mov
jae
sbb
cmp
jg
adc
in
push
pop
cwde
jg
ins
lods
push
addr16
and
push
out
rep
xor
scas
dec
cmp
cld
cmc
and
and
ror
add
sti
dec
push
aam
inc
mov
sahf
stos
cli
sbb
mov
ss
push
and
add
mov
jbe
cmp
jmp
xchg
push
or
test
fistp
push
jne
xchg
pop
mov
pop
mov
cli
das
cmc
xlat
inc
mov
stos
mov
loopne
cmp
dec
push
pop
js
mov
or
push
xor
jg
pop
cwde
and
into
aaa
cdq
inc
test
das
xlat
add
rcl
fcom
jl
scas
sub
jns
fst
and
push
jg
and
inc
loope
in
pop
jo
fdivr
pop
shrd
clc
mov
fcmovu
pop
cld
pop
jmp
into
ja
sahf
mov
ja
fxch
pop
xchg
loop
jg
mov
add
cmp
adc
push
(bad)
xchg
stos
jne
shl
outs
cmps
mov
test
in
loopne
mov
pop
sub
cmp
jns
jnp
cmp
mov
aam
(bad)
jne
jbe
or
repnz
repnz
push
and
js
in
mov
lock
xchg
push
sub
std
and
mov
popa
movq
push
ror
inc
or
sbb
push
adc
call
movs
jle
hlt
nop
mov
dec
test
pop
jle
sub
inc
xor
lock
int3
cmp
mov
aas
adc
mov
fwait
stc
bound
mov
stos
push
mov
xchg
loope
(bad)
fisub
pop
jg
call
scas
nop
jg
jae
dec
push
pop
push
jmp
not
xchg
fistp
cmc
push
ja
dec
push
jne
jl
(bad)
dec
or
cmps
xchg
pop
mov
mov
hlt
daa
dec
xchg
stos
out
and
sub
xor
aam
loopne
test
popa
mov
leave
call
test
mov
sub
rcl
add
iret
mov
cmc
and
xlat
or
sub
push
pop
daa
stos
xlat
dec
jle
stos
shl
push
pop
in
addr16
jge
push
push
std
and
or
push
sbb
(bad)
(bad)
call
and
clc
cmp
mov
in
add
outs
test
fstp
sub
pop
mov
(bad)
xchg
lods
out
or
pop
test
fsubr
jne
into
repnz
aas
cmp
(bad)
adc
mov
jbe
lods
(bad)
hlt
ficomp
mov
(bad)
mov
out
enter
rcl
add
adc
cs
in
jbe
jmp
adc
aas
mov
ds
mov
xlat
add
aam
std
fcomp
jbe
cmp
or
push
shl
loop
aam
pop
push
inc
jmp
div
clc
pop
mov
mov
pusha
jg
dec
inc
stc
pushf
jmp
xchg
push
push
mov
or
dec
add
ret
dec
into
iret
mov
xor
aam
pop
adc
shl
xchg
les
cmps
(bad)
lea
popa
(bad)
pop
fnstenv
ret
adc
jmp
mov
jne
(bad)
(bad)
outs
mov
jno
imul
enter
rcl
xor
jb
and
repz
push
sub
andnps
pop
push
fcmovnu
mov
sbb
cmp
inc
aaa
sti
sub
push
lahf
sbb
jbe
pop
push
inc
(bad)
mov
add
popa
and
test
aaa
popa
js
jns
fisub
adc
sub
imul
sub
mov
jge
xchg
sub
jbe
or
in
lahf
pop
pop
sbb
test
mov
xchg
cld
call
push
ror
jb
adc
stos
jle
jle
jle
pop
pop
sbb
xchg
retf
dec
(bad)
mov
ret
out
lock
inc
ja
xchg
mov
add
adc
shr
and
das
mov
in
mov
rcr
xor
lods
mov
sub
sbb
inc
mov
test
add
adc
jb
fisubr
mov
add
dec
aam
cmps
stos
adc
in
jmp
movs
jecxz
or
mov
adc
retf
fiadd
mov
fmul
and
push
addr16
scas
fiadd
dec
cmp
adc
(bad)
bound
sub
scas
outs
movs
xor
jne
or
sbb
jnp
je
pushw
xor
jne
(bad)
or
mov
mov
movs
into
or
xor
scas
loopne
add
rcl
push
outs
cs
test
mov
imul
(bad)
in
sub
inc
adc
pop
cli
arpl
outs
hlt
mov
xor
inc
or
pop
lods
inc
test
dec
sub
cmc
sbb
movs
into
jl
mov
and
push
mov
cs
aam
xchg
les
sbb
push
mov
cmps
out
sub
inc
push
in
leave
push
mov
adc
lea
push
aas
mov
mov
fisttp
xchg
call
cdq
inc
shl
into
icebp
jmp
popa
xrelease
pop
mov
out
add
ret
sbb
mov
sbb
mov
pop
and
xchg
int3
js
mov
and
dec
arpl
or
cmp
mov
mov
rol
outs
mov
pop
push
xor
sar
and
sub
dec
adc
not
add
xchg
lahf
jmp
addr16
sbb
xchg
or
sbb
jmp
adc
test
dec
jmp
dec
mov
xchg
lds
cmc
mov
and
lahf
aas
lods
fild
sub
xor
xchg
xchg
adc
ins
test
pusha
in
pop
adc
jg
xchg
loop
mov
jns
push
int3
popf
dec
cmp
inc
xor
sub
out
and
fs
test
fcmovu
cli
dec
push
fwait
sub
repnz
sub
test
xchg
adc
sub
cwde
push
retf
jg
pushf
xor
push
mov
cmp
push
fiadd
mov
jmp
loopne
ds
jecxz
sar
cmc
or
into
jecxz
loop
repz
movs
hlt
sbb
push
int
or
or
mov
sbb
adc
cmp
shl
jmp
popf
sbb
pop
out
sahf
cmps
bound
loope
inc
xlat
retf
dec
inc
out
mov
mov
pushf
push
fisttp
sbb
add
mov
(bad)
int
xor
push
add
jns
jge
inc
xlat
jle
mov
sahf
cmp
jl
pop
not
push
mov
(bad)
dec
repz
sbb
mov
mov
out
pop
shr
dec
data16
adc
pop
test
jl
xchg
sub
cld
add
xchg
dec
and
arpl
div
sub
mov
xchg
inc
mov
push
retf
and
mov
jmp
std
outs
mov
xchg
inc
inc
mov
xchg
xchg
adc
mov
xor
hlt
cld
push
fld
mov
mov
fwait
mov
xchg
imul
repnz
mov
sub
hlt
or
jo
inc
cmp
ins
outs
pop
sub
and
stc
sbb
mov
adc
loopne
imul
mov
pop
cmc
xchg
(bad)
cmp
jge
fsubr
ret
popa
push
(bad)
leave
in
loopne
fidivr
jno
gs
mov
dec
ret
cmps
mov
imul
pusha
por
mov
into
xchg
ds
idiv
aas
push
imul
movs
jno
fldenv
out
shl
fisttp
sub
sub
js
xchg
mov
sbb
repnz
xchg
dec
scas
or
jns
ins
lods
outs
bound
mov
iret
jb
fbstp
mov
mov
ins
and
fmul
mov
test
dec
je
xchg
ficom
cmps
cwde
xchg
ret
retf
push
bts
ds
or
push
rol
mov
xor
adc
call
aas
mov
(bad)
(bad)
mov
int3
rcr
loop
ins
mov
mov
jb
xchg
mov
cmc
cmps
repz
xor
and
jmp
push
loopne
or
imul
popa
xchg
repnz
mov
jnp
jp
push
mov
cmps
cmps
mov
imul
div
int
fimul
outs
pop
or
ds
int
test
xchg
mov
pop
mov
fimul
mov
xlat
pop
cmp
hlt
sbb
rcr
sbb
jb
push
xchg
jmp
inc
in
fadd
ja
mov
ror
inc
inc
cld
dec
pop
leave
add
fdivr
pop
lods
aam
out
mov
mov
neg
jae
stc
movs
std
test
mov
jae
mov
je
jecxz
shl
jecxz
mov
cmc
push
mov
lea
mov
sub
mov
mov
fldcw
cdq
(bad)
xor
inc
das
rol
aaa
cmc
int
dec
and
(bad)
xchg
pop
jo
add
xchg
cmps
or
xchg
jae
arpl
ds
xor
push
jmp
in
and
mov
retf
shr
dec
jg
sub
rcl
jecxz
jbe
xchg
pop
imul
cld
fdivr
(bad)
shl
and
cmp
dec
mov
addr16
ins
pop
arpl
push
jae
sbb
adc
mov
fucom
push
scas
clc
xor
ja
repz
movs
out
call
or
test
(bad)
sbb
test
shl
push
or
int
push
int3
jp
xchg
push
inc
push
push
mov
push
adc
pushf
arpl
clc
(bad)
fistp
mov
dec
xor
mov
aad
sub
adc
lahf
mov
into
mov
xchg
ficomp
lea
cmps
shl
jmp
push
xlat
pop
stc
popf
jp
push
or
cmp
es
mov
mov
push
pop
lods
stos
cmp
push
pop
mov
test
out
mov
jbe
test
lds
sub
sar
xchg
jecxz
xchg
push
dec
and
out
ja
and
push
cmc
add
push
rol
ds
xor
xor
sahf
cmps
cmps
pop
pop
imul
add
test
mov
xchg
jge
jecxz
nop
cmc
mov
jp
mov
int3
cld
fwait
mov
fwait
cmp
fsubp
pop
push
jns
sub
adc
imul
addr16
outs
mov
dec
enter
(bad)
sbb
and
cmps
jb
in
sub
mov
dec
test
inc
lds
push
push
push
and
sub
add
sti
gs
in
adc
outs
in
scas
pop
(bad)
fadd
adc
xor
and
call
gs
outs
and
jle
mov
ds
sbb
sbb
ds
aad
cmp
dec
stos
add
mov
push
mov
adc
xor
scas
rcl
fwait
xchg
xchg
hlt
jecxz
ret
mov
cdq
sbb
mov
shl
lahf
jg
stc
out
jg
stc
jg
add
add
cld
cmc
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loop
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
je
pop
inc
in
aam
and
pop
add
test
cmp
(bad)
je
in
dec
sahf
cmp
xor
pop
cmps
mov
es
or
ds
repz
pop
jg
or
mov
iret
pop
add
(bad)
fwait
or
push
sbb
or
ret
jno
aad
sub
mov
outs
xchg
retf
shr
std
ror
daa
jb
pop
shl
outs
in
test
(bad)
fcomp
jmp
push
jne
inc
rcr
test
push
rol
in
js
fcomp
dec
repz
imul
sbb
clc
cmp
pop
adc
sub
inc
push
repz
into
mov
push
repz
ja
sbb
sbb
test
mov
shl
mov
dec
adc
xor
or
sub
loop
mov
inc
sbb
xchg
push
lods
pop
jp
or
shl
jge
mov
push
sbb
push
mov
test
aaa
sbb
ror
pop
cmp
mov
inc
stos
pop
sub
mov
js
ja
adc
push
repnz
test
dec
dec
mov
jns
outs
push
into
loope
push
fsub
jns
cdq
jg
xchg
out
pop
lds
dec
or
inc
mov
mov
scas
and
inc
xlat
push
jmp
rcl
cmp
mov
sbb
cwde
add
(bad)
push
int
retf
fbld
scas
add
jmp
fnstenv
js
call
mov
dec
push
repz
mov
mov
jne
aaa
movs
stos
cs
mov
pop
cmp
nop
out
arpl
sbb
xchg
js
cmc
fs
je
and
leave
jns
lea
cmps
and
xchg
sub
cmps
mov
iret
std
adc
ins
xchg
and
pusha
int
ror
push
out
(bad)
loop
enter
fist
hlt
fcmovne
ror
xchg
xor
push
add
pop
dec
push
cmp
fwait
sahf
sub
fild
inc
mov
pop
enter
cmp
fcomp
or
xchg
jns
adc
test
inc
push
xor
clc
sub
jmp
mov
jno
je
adc
scas
xchg
adc
call
into
lock
out
jge
ins
div
sub
xchg
pusha
lock
into
enter
into
mov
mov
adc
jmp
mov
imul
scas
int
(bad)
mov
int3
pop
daa
scas
push
lods
add
sub
cmovae
in
or
or
cmp
or
add
pop
ds
loope
retf
je
in
shl
int3
jmp
and
fsubr
sahf
mov
test
lods
and
outs
mov
imul
pop
mov
fwait
cmp
push
inc
pop
and
jbe
repnz
fisttp
fsub
(bad)
push
cmps
fs
xor
rcr
stos
or
inc
aad
cwde
mov
outs
mov
lea
jecxz
clc
les
call
sub
cmp
add
jb
nop
sub
imul
enter
push
mov
rcl
ret
push
movs
sbb
ins
pop
and
loop
ss
mov
adc
mov
into
pop
je
adc
ja
jl
shr
repz
add
or
scas
sahf
mov
dec
jl
les
add
(bad)
cld
aas
or
add
inc
out
pop
pop
int3
not
std
div
into
stos
pushf
leave
sub
mov
pop
inc
pop
(bad)
cs
xchg
stc
add
stc
fsub
call
retf
daa
mov
jbe
fimul
jne
xor
and
or
aad
and
ins
(bad)
popf
leave
pop
dec
mov
push
jmp
(bad)
mov
into
or
pop
dec
adc
stos
dec
jecxz
pop
and
cmps
sbb
sbb
leave
push
test
mov
jns
adc
or
jno
add
retf
xchg
xchg
lds
lea
add
in
cmc
fucomi
je
adc
mov
neg
gs
and
ja
scas
xor
out
add
xor
pop
mov
jl
into
cmps
loopne
sahf
(bad)
dec
ins
inc
mov
push
xchg
ror
push
daa
jl
adc
jl
mov
aaa
pushf
ja
stc
jno
sub
scas
cmc
dec
inc
dec
gs
rcl
mov
rcr
fnstsw
cdq
loopne
mov
data16
imul
je
mov
retf
movs
loop
repz
out
add
cs
adc
xchg
test
mov
cs
and
in
sbb
mov
mov
jmp
rol
xchg
dec
test
ins
and
cs
mov
jb
js
and
jecxz
sahf
fst
fidiv
and
call
cmc
cmps
and
add
pop
dec
mov
cmp
dec
scas
inc
iret
sub
sbb
sbb
pop
dec
xchg
push
add
rol
repz
std
jg
fldcw
into
movs
push
pop
bound
fnstsw
jl
and
or
pusha
lahf
sbb
sbb
repnz
enter
call
jmp
sbb
ja
or
icebp
and
in
enter
movs
mov
xchg
nop
xor
(bad)
fs
inc
adc
fld
cmp
pop
into
jle
cmp
push
mov
daa
push
adc
popf
mov
or
pop
cli
jmp
xor
arpl
push
xchg
jae
adc
add
jg
fyl2xp1
sub
inc
push
repz
call
cmp
add
stc
inc
jg
xchg
sub
push
pushf
push
fisubr
retf
icebp
push
rcr
jge
pop
addr16
aam
test
enter
stc
fild
mov
(bad)
movs
es
outs
inc
nop
xor
sub
mov
into
inc
cli
aaa
rol
cmp
xchg
fisubr
sbb
adc
jns
cmps
xchg
test
mov
arpl
push
aaa
inc
call
mov
push
hlt
bound
fisttp
or
push
xor
cmp
xor
fsub
cmc
mov
sub
inc
ret
or
movs
js
mov
sbb
mov
int3
in
arpl
fldenv
leave
or
jo
les
push
mov
(bad)
mov
cmp
scas
cmp
in
retf
sbb
add
adc
jb
cmp
sbb
mov
and
(bad)
js
xchg
dec
jne
and
fucomi
retf
dec
cmp
je
push
ds
ffree
sub
in
cmps
mov
mov
push
or
or
cmp
std
movs
popa
sbb
ror
retf
sbb
hlt
test
stos
scas
mov
cld
loop
mov
xor
fist
fcom
je
clc
test
ret
xor
adc
inc
dec
test
xchg
mov
das
inc
das
push
imul
cmp
ins
jmp
lods
xchg
fnstcw
or
nop
push
or
push
xor
lahf
push
pop
in
rol
out
les
test
fisttp
bound
add
lds
sti
jbe
pop
in
daa
in
and
lods
fst
mov
sbb
push
inc
and
push
iret
push
push
call
ins
sbb
imul
and
dec
rcr
hlt
ins
xor
fucom
enter
fsubr
cmp
leave
mov
push
mov
mov
nop
xor
xchg
pop
push
(bad)
push
pop
pop
mov
mov
rcr
xchg
aad
retf
fsub
cmp
xor
add
iret
jne
sbb
imul
xchg
pop
jno
test
sub
aaa
pop
jae
test
repnz
lock
nop
adc
mov
and
pop
push
mov
shr
cmp
cmp
dec
push
push
inc
mov
mov
scas
cmps
aam
in
clc
cmps
sbb
ins
cmp
lods
in
mov
lods
shl
loopne
rol
lds
xor
jns
push
cld
pop
push
dec
push
test
add
xlat
mov
sahf
cmp
clc
sub
or
ror
pop
inc
pushf
mov
push
(bad)
cmp
ja
ds
inc
or
cmp
xlat
jmp
mov
sub
push
popf
test
iret
jecxz
dec
inc
add
jo
jns
movs
call
jp
lock
nop
int3
sar
pop
adc
(bad)
dec
adc
mov
loopne
ja
xchg
jg
pcmpeqd
int
ret
dec
sub
ins
int
jno
mov
movs
pusha
push
or
aam
pop
cmps
and
outs
mul
add
data16
das
mov
sti
pop
push
mov
inc
in
cmps
and
adc
jae
enter
das
or
dec
scas
fs
and
fisub
or
out
or
ja
ds
movs
lds
adc
mov
je
mov
das
jae
test
xor
ficomp
dec
call
sub
jmp
ins
cdq
mov
pop
xlat
jae
add
mov
inc
int3
loope
call
jmp
mov
scas
xchg
or
inc
sbb
rcl
loop
mov
mov
sbb
mov
xchg
mov
aad
pop
cmps
jecxz
aaa
xchg
and
or
mov
xchg
loop
mov
outs
mov
or
ins
pop
sti
inc
out
or
jae
daa
jnp
dec
mov
aaa
leave
sti
pop
xchg
aam
inc
mov
dec
imul
test
sbb
std
jo
into
out
loopne
xchg
shl
xor
pop
scas
mov
ds
sbb
xlat
adc
les
movs
out
push
ins
leave
and
mul
jns
and
sbb
(bad)
sub
and
xor
cmp
test
outs
inc
jge
stc
in
fistp
(bad)
out
mov
cmp
inc
jns
shl
inc
out
fwait
cld
stos
hlt
inc
std
test
leave
add
mov
pop
cdq
stos
jbe
fisttp
ins
jge
lds
sub
test
aam
adc
jp
dec
ins
fistp
shl
add
es
mov
push
fwait
pop
cdq
jne
adc
or
inc
aam
jmp
jp
ret
test
mov
call
aad
call
mov
paddb
popa
mov
mov
push
popa
gs
add
pop
cmp
mov
stc
test
gs
inc
mov
mov
mov
pop
fcomp
xor
(bad)
dec
mov
mov
and
push
jnp
fld
mov
sbb
lock
dec
cld
popa
(bad)
retf
mov
js
push
ja
adc
xchg
sbb
loopne
std
(bad)
mov
xchg
aad
je
inc
pushf
adc
ins
sub
xchg
dec
and
mov
mov
test
add
cmp
mov
test
mov
dec
xchg
in
ins
inc
cmps
bound
jb
mov
push
rcl
loopne
fadd
ins
nop
pop
xchg
in
and
sbb
mov
dec
lahf
fistp
add
int3
hlt
addr16
pop
inc
jns
in
fcmovne
cmps
into
shl
mov
inc
test
cdq
jne
or
outs
add
out
push
fbld
push
into
jne
cmp
mov
cmc
inc
jae
add
xor
push
xchg
sahf
fwait
xor
(bad)
mov
stc
hlt
or
outs
mov
aaa
cld
in
mul
sti
aam
cs
ffree
std
in
xchg
jnp
test
inc
cmps
es
(bad)
pop
dec
cmps
cmp
icebp
nop
adc
scas
cmps
stos
cmp
dec
pop
icebp
cli
push
(bad)
std
stos
dec
cmp
jo
xor
and
xor
dec
daa
sbb
movs
imul
hlt
lods
ins
cwde
outs
pop
inc
inc
dec
sbb
add
dec
push
cwde
and
stos
mov
adc
fs
cs
cmp
ror
int
mov
sub
mov
and
ja
not
lods
rcr
je
xor
sbb
(bad)
dec
shl
cwde
xchg
xchg
retf
cwde
fsubp
lods
ficomp
lock
in
xor
sahf
(bad)
jecxz
sub
push
jmp
mov
inc
repnz
cdq
add
ret
nop
movs
out
sbb
pop
mov
sahf
sub
(bad)
sbb
icebp
xor
mov
int
mov
std
push
stos
push
data16
popf
mov
jp
jnp
retf
cdq
(bad)
fstp
jp
es
aad
sub
outs
push
out
pop
scas
mov
mov
or
iret
xchg
inc
movs
leave
leave
int
sbb
or
pop
sbb
cld
add
jno
(bad)
jbe
mov
mov
iret
aaa
shl
add
in
cmp
push
jmp
ret
sbb
mov
addr16
pop
and
add
xchg
aaa
lahf
mov
and
jne
test
dec
aaa
loop
(bad)
mov
lods
loop
fcomip
push
push
aas
mov
leave
popa
pop
mov
in
push
lods
inc
test
out
icebp
ret
push
lods
dec
cwde
aas
jbe
pop
push
iret
add
mov
fimul
mov
cld
test
pop
ror
arpl
nop
push
xor
je
test
sahf
rcl
cwde
or
jle
cmp
jle
sbb
ror
mov
xor
push
sub
sbb
jg
mov
adc
inc
xchg
mov
mov
(bad)
cld
repz
aas
(bad)
cld
repz
jmp
add
aas
jne
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movq
inc
push
pop
inc
in
shl
aam
add
loopne
cmp
fisubr
jge
popf
mov
out
in
push
out
ss
or
jmp
addr16
test
push
sbb
and
loop
sti
outs
mov
inc
jge
jl
add
or
std
out
or
imul
test
fcmovbe
sbb
inc
jb
sub
sbb
das
xor
jmp
fwait
je
pop
add
sti
pop
out
jnp
cld
imul
and
shl
or
mov
mov
ror
leave
ins
repz
push
movs
pop
or
dec
jl
mov
sbb
sbb
add
jmp
sbb
push
pop
shl
call
(bad)
mov
call
retf
xchg
(bad)
in
ja
popf
inc
fwait
inc
inc
sub
jle
cld
mov
mov
or
cmps
pop
dec
repz
or
stc
dec
pop
xchg
sbb
js
pusha
rol
shl
cdq
mov
xor
mov
push
xor
imul
jl
pusha
jae
pop
jge
rcl
movs
jns
mov
cmp
sub
mov
or
mov
std
dec
sub
jmp
lds
mov
xchg
and
fld
or
clc
xchg
and
aad
push
cmp
xchg
sbb
pop
mov
inc
xchg
inc
mov
std
in
pop
and
lock
jno
int
stc
jmp
loope
push
lea
xor
push
mov
fild
dec
pop
add
add
retf
rol
push
adc
stos
push
push
data16
mov
dec
test
xor
and
inc
sbb
cld
dec
(bad)
ficom
mov
push
sti
cmps
sbb
pusha
in
xchg
dec
lea
jge
or
add
popa
sbb
int
loop
push
adc
in
mov
inc
inc
fadd
jecxz
jge
test
shl
pmaxub
jae
jno
pop
loope
dec
ror
xchg
fisub
inc
sbb
cdq
or
out
mov
adc
popf
les
lods
dec
and
jb
int3
mov
js
cli
jae
in
gs
loop
imul
call
push
(bad)
and
or
outs
clc
mov
push
jo
clc
(bad)
call
ds
out
test
xchg
cdq
leave
push
or
push
nop/reserved
push
int3
sbb
imul
cmp
inc
adc
test
in
lea
push
js
adc
pop
xor
jg
and
add
mov
jecxz
arpl
mov
je
ja
cwde
cvtpi2ps
cmp
or
dec
mov
jg
les
jno
jbe
call
inc
dec
cmc
scas
(bad)
popa
or
inc
mov
dec
aaa
mov
out
push
lods
xchg
fadd
add
(bad)
shl
mov
cmps
mov
cmp
pop
mov
lods
test
clc
and
test
pop
mov
jb
cmp
or
inc
mov
pop
push
cld
jp
mov
pop
xchg
cli
cdq
outs
sub
int3
mov
jae
ret
adc
push
in
test
sahf
mov
mov
inc
and
dec
xor
sub
mov
rol
xlat
in
mov
mov
and
push
fcmovnu
add
cmp
in
jge
out
bound
or
sbb
pushf
aad
adc
cmp
jb
dec
adc
jne
or
mov
gs
mov
jle
jmp
fdivp
jb
retf
mov
in
fisub
sub
push
aam
ret
out
xor
jns
push
mov
inc
adc
pop
or
leave
adc
aas
int3
and
mov
cmc
jne
nop
jmp
aas
push
pop
cmc
jns
mov
retf
push
hlt
nop
fwait
mov
jmp
inc
je
jmp
cld
add
jmp
mov
jecxz
pop
retf
in
mov
lds
add
and
add
imul
cdq
add
aad
aaa
xchg
inc
faddp
es
pop
icebp
xchg
fbstp
(bad)
adc
pop
push
or
lds
jle
xchg
xchg
dec
jl
push
cmp
push
imul
shr
fimul
pushf
push
pop
mov
adc
inc
push
jne
push
adc
sub
loope
adc
stos
xor
nop
clc
out
(bad)
mov
cmp
cmps
jecxz
mov
retf
jl
ins
call
push
outs
pop
mov
mov
out
cld
sbb
jns
fisub
retf
xchg
fmul
cld
mov
mov
pusha
cmp
inc
pop
enter
imul
sar
in
adc
icebp
in
jne
cmp
mov
daa
ja
ss
ins
dec
push
dec
or
(bad)
test
pop
pop
mov
repnz
call
test
repnz
in
adc
hlt
adc
je
ins
jle
xor
leave
cld
jno
push
ret
pop
sub
jbe
ret
push
sahf
xchg
jp
fisub
push
mov
fwait
pushf
ins
mov
or
add
stos
f2xm1
call
push
add
ret
lds
leave
xor
dec
cmp
sbb
test
pop
cmp
mov
mov
loope
dec
add
jno
movs
gs
add
test
movs
jmp
sbb
push
enter
dec
push
int
push
or
rcl
push
or
cmp
pop
xlat
cdq
in
push
cmps
xchg
jb
(bad)
movs
xor
xchg
pop
fucomi
cmp
sbb
or
add
popa
or
aam
sahf
jnp
aas
jnp
fld
popf
mov
sub
add
in
push
dec
mov
xor
iret
or
cmc
aaa
pop
rol
cdq
inc
hlt
aas
test
lods
and
add
imul
pop
mov
mov
pop
pushf
fwait
jmp
jmp
sti
dec
and
sub
cmp
and
dec
int3
stc
loope
aaa
not
sbb
pop
or
fisttp
adc
adc
jbe
xchg
mov
mov
mov
sahf
jns
mov
push
cli
nop
dec
adc
jmp
shl
dec
call
jecxz
in
dec
imul
dec
arpl
jmp
rcl
fisubr
add
mov
mov
clc
sub
inc
dec
pop
gs
mov
jne
xor
jp
cmc
sub
jmp
ss
xchg
xor
ret
outs
xchg
mov
ds
and
fist
cmp
jae
push
scas
stos
and
iret
(bad)
mov
stos
or
adc
je
cmp
xchg
xchg
pop
adc
sbb
sbb
fnsave
adc
leave
lahf
pop
int
js
push
out
add
dec
push
lds
enter
outs
shl
retf
fisttp
xor
sbb
push
call
js
sub
pop
(bad)
out
jl
retf
push
dec
pop
jg
jmp
repnz
retf
mov
sub
jns
ffree
push
jecxz
or
loopne
dec
jmp
adc
shr
push
mov
mov
nop
jmp
adc
enter
out
fwait
cli
not
lock
jp
lds
gs
mov
fwait
jno
pop
pop
and
dec
scas
test
push
jbe
cmp
sub
ins
in
out
aad
jae
pop
in
test
sbb
sub
mov
in
xor
cmp
cs
fdiv
pop
fcmovbe
mov
int3
or
jmp
or
pop
out
std
retf
mov
leave
out
loopne
jl
fild
and
xchg
retf
inc
sub
jg
or
pushf
scas
jle
add
and
aam
test
adc
je
sahf
mov
scas
(bad)
push
mov
movs
leave
dec
mov
fst
cmp
es
into
stos
repnz
xchg
sub
icebp
(bad)
xchg
push
jge
lock
dec
jp
shl
mov
ins
dec
in
adc
jge
rcl
(bad)
mov
lock
loopne
sub
cld
cwde
cmp
test
add
adc
jle
dec
mov
jmp
cmps
mov
add
inc
je
(bad)
xlat
out
bound
sbb
jbe
mov
xchg
inc
xchg
jae
fdivr
idiv
mov
push
xor
call
cmps
ret
sub
ret
adc
hlt
mov
test
std
outs
add
scas
loop
hlt
jmp
cmp
in
jae
pop
(bad)
lock
data16
sub
bound
fisttp
cmp
movs
sahf
mov
adc
arpl
add
jae
cmp
sbb
pop
mov
xchg
mov
fcomp
clc
out
pop
dec
daa
out
xor
cld
xchg
dec
pop
movs
fadd
int
cmp
pushf
loop
aad
mov
cmp
sub
mov
dec
outs
mov
ja
pop
repnz
push
mov
mov
loope
(bad)
and
mov
je
ins
jb
inc
std
scas
adc
ror
stos
mov
loope
out
call
movs
and
retf
mov
jecxz
sbb
cli
pushf
jg
aam
xor
(bad)
retf
test
inc
in
mov
mul
repnz
mov
ja
jmp
sub
test
in
aam
(bad)
ins
xlat
ret
inc
not
sub
shl
mov
mov
push
inc
std
mov
pop
dec
aad
jmp
inc
dec
outs
dec
cmp
inc
jb
xlat
push
dec
and
xor
(bad)
adc
jb
pop
pop
mov
daa
mov
xor
jl
xchg
xchg
or
enter
add
sbb
(bad)
mov
ret
iret
xchg
sbb
out
std
mov
push
les
pop
sahf
das
sub
je
inc
lods
sub
sub
add
adc
adc
fdivr
mov
repz
fdecstp
hlt
inc
dec
mov
pop
popf
and
push
sub
out
jnp
into
(bad)
adc
add
push
pop
jmp
outs
push
enter
jl
jb
cmps
lea
push
dec
cs
outs
mov
pop
movs
ds
pop
shl
jle
out
je
lds
jg
sbb
aam
aad
xchg
sbb
imul
leave
and
and
sti
jno
xchg
xchg
out
adc
sub
pop
push
test
sub
or
fdivr
mov
jb
jns
idiv
or
in
int3
adc
popa
xor
pop
jae
arpl
add
mov
fiadd
into
std
add
pop
(bad)
repnz
adc
push
add
lds
add
out
adc
call
cmp
ds
xor
push
pop
repnz
scas
sub
adc
and
cmps
sub
scas
sbb
adc
sub
in
call
ins
enter
repnz
pop
daa
jle
add
xor
inc
rol
mov
mov
dec
das
inc
jg
retf
loope
retf
push
dec
imul
push
adc
dec
rcl
movs
imul
and
adc
retf
inc
stos
push
dec
sub
enter
sbb
cdq
sbb
in
push
scas
rcl
jmp
add
or
stos
out
ror
mov
retf
into
in
push
fiadd
ja
leave
mov
xchg
test
adc
dec
movs
pop
fs
sub
test
sti
sub
inc
add
sub
into
dec
div
adc
ins
inc
add
and
pop
mov
ins
or
call
pop
cmc
(bad)
lock
adc
fstp
and
stos
retf
mov
xchg
jle
or
popa
mov
and
xchg
sti
cmp
mov
lods
push
mov
cmp
xor
adc
jg
pop
fst
sahf
cld
repnz
pop
stc
out
scas
sbb
xchg
pop
popa
mov
xor
adc
cwde
nop
xchg
xor
sbb
out
sub
fsubr
jns
cmp
fidiv
sub
and
je
fdivr
test
leave
sbb
mov
je
mov
add
lods
mov
pop
test
scas
mov
pop
jne
ins
mov
and
mov
stos
rcr
lods
js
xchg
in
pop
or
mov
sub
push
add
int3
out
call
mov
cmp
test
inc
adc
mov
and
pop
sar
jns
nop
(bad)
js
ret
cld
sbb
mov
sub
push
pop
sub
mov
shl
inc
dec
fyl2x
in
mov
adc
jb
ror
test
stos
imul
push
xchg
int
jbe
pop
(bad)
jle
fistp
fstp
cwde
outs
iret
pop
xor
js
(bad)
ss
push
mov
push
rcr
scas
mov
mov
or
and
xchg
xchg
std
adc
fild
mov
jecxz
dec
ror
mov
out
jl
jbe
cmp
cmc
push
sub
or
jl
icebp
adc
in
mov
sub
dec
mov
mov
jo
ret
sbb
pushf
push
cmp
cwde
dec
(bad)
pand
jo
loopne
jg
stc
out
jg
stc
jg
add
add
addr16
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loope
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jae
pop
inc
in
shl
aam
add
loopne
test
mov
out
fnstcw
mov
in
cmp
int3
mov
jo
jecxz
nop
mov
adc
repz
sbb
(bad)
(bad)
cmp
xor
or
inc
inc
lea
scas
mov
sub
fisttp
dec
gs
mov
bound
inc
pop
mov
retf
add
or
shr
ins
scas
inc
inc
in
cmps
(bad)
adc
inc
jecxz
(bad)
(bad)
into
inc
mov
sysret
dec
push
jno
test
pop
(bad)
lds
push
xchg
adc
loopne
cli
rcr
in
adc
loop
arpl
jecxz
or
cmp
and
cmp
dec
xor
clc
js
fisub
fist
test
aam
cmp
loop
pop
push
leave
and
push
imul
call
cmp
or
cmps
aam
daa
jl
scas
mov
pop
push
out
jg
rcr
push
fs
dec
inc
loop
and
jmp
or
push
cmc
mov
jae
fisubr
ret
mov
daa
in
packuswb
inc
imul
retf
inc
and
out
jmp
add
xchg
jecxz
sti
jns
fstp
les
sbb
or
add
mov
fcom
jecxz
fwait
mov
push
dec
pop
jns
mov
cmp
pop
lods
dec
adc
shl
and
jo
aaa
push
mov
jne
pop
pop
(bad)
mov
inc
iret
addr16
test
cmc
inc
jmp
cld
sub
mov
push
rcr
aad
xchg
into
loopne
pop
xor
pop
jmp
shl
mov
cmps
test
jmp
inc
jb
adc
sbb
mov
test
pop
lahf
js
retf
into
or
pop
fdivp
jl
movs
xor
pop
sbb
(bad)
mov
fist
test
inc
ds
jb
pop
mov
sahf
dec
mov
es
fist
cmc
or
or
shr
dec
push
test
ja
mov
mov
and
cli
add
pop
fs
fcmovnbe
adc
lock
jle
cmp
scas
push
aaa
sub
adc
sub
aam
pop
adc
jne
mov
repz
in
jns
out
neg
nop
sub
adc
lods
sbb
jb
test
adc
ficom
jg
loop
mov
lock
rcl
movs
adc
jl
jno
mov
jecxz
adc
xor
or
neg
idiv
sub
adc
jbe
cmc
in
add
cmp
les
mov
dec
dec
ins
jmp
ss
aad
inc
rcr
(bad)
daa
adc
inc
dec
jbe
movs
mov
and
mov
dec
ffreep
loopne
lods
rol
and
mov
xor
sbb
mov
dec
cmp
inc
fsub
(bad)
cmp
rcr
push
(bad)
sar
sbb
(bad)
sub
xchg
dec
sbb
stos
ret
ficom
adc
cmc
mov
ins
cmp
mov
mov
sahf
adc
jnp
push
xchg
fwait
mov
mov
cmp
sub
pushf
(bad)
push
out
inc
pop
movs
in
push
div
test
xchg
stc
cmp
jb
int3
shl
lods
std
popf
jne
scas
and
test
mov
cmp
out
inc
aas
out
inc
inc
neg
push
iret
enter
outs
jl
imul
loope
inc
nop
test
adc
dec
jb
inc
jle
xchg
dec
lods
jmp
push
or
in
push
jg
xchg
sub
push
out
xlat
loope
push
adc
inc
(bad)
fisub
push
enter
cdq
mov
sub
mov
ja
mov
pop
cmp
and
mov
sub
and
push
out
hlt
cld
xor
or
mov
xchg
lahf
push
in
mov
inc
out
int
popf
pop
sbb
imul
sub
scas
pop
not
mov
into
fstp
in
fwait
inc
mov
jno
push
jp
xor
mov
dec
lea
les
jecxz
ins
sub
pop
adc
nop
mov
jmp
jno
pushf
mov
pop
(bad)
inc
mov
das
cmps
push
sub
mov
imul
test
int
dec
mov
jle
inc
or
fwait
xchg
xchg
les
mov
xchg
sub
and
jno
test
cli
aas
pop
push
mov
dec
push
popf
call
into
fwait
sub
cs
mov
mov
test
inc
fbld
jmp
pop
mov
xchg
das
loop
mov
lahf
add
sbb
inc
push
jge
(bad)
cmps
pop
gs
call
fsubp
inc
mov
stos
or
imul
data16
or
in
cmp
jmp
arpl
or
pusha
call
fimul
in
repnz
sahf
movs
or
xchg
iret
pop
adc
add
mov
mov
shr
sbb
cs
push
es
repz
repz
sub
test
mov
test
add
imul
aam
ja
cld
sub
sub
jns
add
ins
scas
xchg
mov
cmp
(bad)
cli
pop
cld
rcl
call
sbb
jmp
aad
mov
mov
mov
sub
nop
cld
pop
cwde
loopne
movs
and
add
sar
mov
ret
dec
xchg
out
int3
mov
test
push
jno
add
fwait
or
xchg
add
mov
mov
out
sub
inc
div
jecxz
mov
mov
arpl
push
je
add
and
jno
cs
test
dec
gs
les
jg
mov
push
xor
ins
cmp
jle
not
das
jne
outs
rcr
cmp
aam
cmps
mov
add
loop
lock
jno
xchg
retf
imul
lds
test
xchg
dec
xor
xor
cwde
les
and
aaa
dec
add
nop
inc
sbb
outs
lea
es
xchg
push
in
in
ja
cmp
(bad)
sub
shl
mov
xchg
mov
loop
movs
lods
por
mov
and
hlt
sbb
dec
sbb
jg
stos
iret
sbb
aaa
cld
pop
xor
cld
mov
pop
(bad)
mov
out
not
inc
hlt
rcl
and
sub
and
aaa
(bad)
push
push
enter
and
ins
movs
inc
clc
sti
xor
call
or
mov
inc
mov
sti
imul
int
push
adc
sbb
sbb
mov
out
icebp
sub
xor
shr
and
outs
aaa
loope
mov
fimul
je
popa
ret
(bad)
shr
mov
jmp
addr16
popf
mov
xchg
test
neg
lock
int3
sahf
inc
fnstenv
rol
stos
pop
cmp
out
mov
or
add
dec
leave
cmp
das
push
aas
(bad)
(bad)
loope
jl
cmp
adc
jmp
xchg
push
pop
cmp
and
call
js
mov
in
jns
sub
jnp
xlat
jae
std
out
into
adc
daa
adc
dec
fbstp
xlat
add
retf
xchg
pusha
mov
inc
sbb
out
sti
inc
mov
cmp
push
rcl
bound
out
rol
dec
ins
inc
mov
fchs
imul
(bad)
div
lods
cdq
xlat
mov
aam
xchg
daa
mov
xor
xchg
scas
pop
sub
dec
xchg
ficomp
icebp
out
pop
retf
(bad)
rol
xchg
xchg
cmp
sbb
cmps
test
(bad)
sbb
es
imul
xchg
sbb
out
ja
or
retf
ins
mov
lods
and
test
sbb
pop
test
push
aad
loope
test
xor
inc
xchg
mov
movs
push
dec
pcmpeqd
mov
mov
into
push
dec
sbb
push
jg
test
adc
(bad)
gs
outs
in
shr
mov
out
xchg
pop
push
imul
sub
out
in
add
outs
mov
xlat
movs
mov
or
enter
repz
jmp
fsubr
call
in
dec
pop
fdivr
cs
jge
sub
hlt
outs
sub
add
jns
mov
test
ret
(bad)
sbb
repz
mov
nop
and
call
mov
addr16
mov
fucomp
dec
push
inc
push
or
into
les
or
stos
test
in
addr16
push
pop
(bad)
adc
jecxz
retf
ja
icebp
add
xchg
das
out
jecxz
sbb
fs
pop
mov
push
shr
bound
sub
inc
or
jne
iret
(bad)
mov
cs
xlat
cdq
adc
cmps
sar
ins
pop
jbe
inc
stos
ins
jns
xchg
push
mov
add
es
push
mov
adc
inc
es
jbe
cmp
mov
sbb
lock
dec
push
loope
out
aad
and
xlat
bound
xor
and
add
mov
push
mov
push
push
mov
push
je
jnp
xor
or
out
jnp
push
sub
ds
(bad)
sub
cmp
mov
cmc
jns
mov
iret
fbstp
stos
sub
xor
in
sbb
popf
jnp
jbe
mov
mov
jge
ror
data16
loop
out
add
xchg
or
scas
push
jg
dec
dec
jo
sub
(bad)
push
outs
enter
mov
push
js
ret
mov
adc
push
enter
call
xor
fisub
mov
mov
adc
test
inc
out
sahf
push
sar
xchg
test
aas
inc
mov
pop
mov
sub
xlat
pushf
pop
xlat
cmp
xor
dec
xlat
dec
and
out
pop
pop
(bad)
clc
xor
dec
xchg
cli
xchg
sahf
hlt
(bad)
dec
outs
jle
or
fstp
fadd
in
test
adc
dec
push
and
ins
xchg
stc
pusha
cmc
sub
push
movs
add
inc
fs
out
js
pop
aaa
mov
outs
xor
fcmovnb
cmc
dec
cld
in
mov
or
and
out
xor
arpl
mov
out
out
xchg
fadd
mov
icebp
mov
mov
das
dec
pop
test
and
inc
pop
call
cld
push
bound
je
pushf
pop
mov
lds
popa
sbb
aas
je
ret
mov
mov
ficom
or
test
lods
dec
mov
outs
pop
lahf
push
adc
mov
mov
pop
shr
fmul
xor
mov
inc
pop
cmp
fwait
out
cmc
enter
repz
cli
xchg
jl
and
mov
mov
inc
clc
adc
rcr
in
sbb
lahf
aad
stc
mov
jecxz
gs
cwde
fwait
shl
inc
out
xor
or
mov
push
aad
adc
icebp
ret
in
fwait
test
popaw
(bad)
loopne
lods
xor
sbb
aad
dec
lock
outs
fdivr
sbb
out
or
mul
cs
arpl
inc
xchg
pop
fldcw
add
mov
jmp
in
jge
(bad)
retf
into
dec
mov
xor
jae
scas
pushf
in
stos
mov
push
cmp
mov
cmp
repnz
pop
mov
push
imul
mov
cmp
sub
dec
adc
lahf
mov
mov
or
mov
adc
inc
loop
pop
xchg
dec
add
cdq
inc
xchg
push
fidiv
fsub
icebp
(bad)
jecxz
into
fwait
rcl
sub
sub
sti
hlt
test
rol
jb
push
inc
bound
mov
paddsw
cli
xor
int
sub
jns
clc
jp
jmp
jnp
inc
and
fistp
mov
mov
cmps
push
add
pop
add
es
dec
inc
cld
xchg
xor
mov
mov
sub
mov
push
aaa
jnp
dec
sub
sbb
std
gs
xlat
pop
and
adc
cmp
shl
dec
adc
cmp
xor
stos
xchg
stc
dec
sbb
fidiv
icebp
shl
jno
inc
jmp
ss
in
lea
stos
inc
sbb
pop
jmp
xor
dec
dec
dec
sub
jp
jle
cmp
fld
test
rep
or
or
into
pushf
xchg
(bad)
out
push
rcr
jle
cmp
jl
or
adc
and
pop
mov
leave
mov
out
jae
fist
(bad)
xor
rcr
fdiv
xor
inc
(bad)
jle
ja
jge
sahf
mov
test
rcl
push
in
jnp
mov
jl
inc
add
mov
cdq
popa
call
jne
ins
inc
pop
add
in
popa
call
adc
inc
int3
ror
inc
out
enter
dec
or
test
ds
das
and
sub
in
int3
retf
in
jmp
shl
rcr
push
jnp
ret
mov
fiadd
xor
loop
and
push
inc
and
or
loope
pop
sahf
ds
mov
lods
popf
push
rcr
cmp
pop
fsubrp
mov
bound
or
dec
shl
or
dec
pop
das
mov
pop
scas
aaa
(bad)
sbb
mov
ret
jne
pop
test
arpl
cld
jo
scas
jg
rcr
and
jp
cmp
(bad)
stc
out
or
cld
pxor
retf
scas
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jecxz
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jne
pop
inc
in
(bad)
mul
aam
ret
add
ja
retf
and
push
jbe
sahf
xchg
cmp
int3
popf
mov
and
ins
and
adc
data16
fnstcw
jnp
into
idiv
mov
xchg
mov
pop
add
or
sub
(bad)
mov
add
cli
es
jo
fldcw
dec
mov
loopne
pop
mov
mov
mov
div
imul
dec
sbb
movs
sub
(bad)
in
scas
inc
ror
mov
and
add
cmp
cmp
and
mov
mov
adc
shl
cmps
adc
dec
in
mov
fsub
cmp
xchg
sbb
inc
adc
mov
imul
dec
or
pop
(bad)
mov
jg
cmp
pcmpgtw
mov
lahf
inc
rcl
cmps
lock
(bad)
mov
sub
in
mov
in
mov
movs
mov
or
out
adc
jno
fucomip
fidiv
mov
pop
jb
(bad)
shl
mov
jmp
jmp
push
retf
jge
(bad)
dec
xor
and
lahf
xchg
xchg
std
out
movs
and
or
out
test
mov
jns
xor
xor
adc
xchg
stos
pusha
test
sti
pop
(bad)
pushf
fcmovnu
lea
and
iret
stc
push
ins
adc
fld
daa
fmul
int3
fwait
xor
(bad)
aam
imul
sbb
lods
rol
sub
icebp
cmps
xor
xor
dec
aaa
and
push
je
les
js
xor
fs
adc
mov
(bad)
add
adc
outs
xor
(bad)
jmp
loope
ins
mov
jbe
jns
mov
test
mov
aad
das
xchg
or
and
test
(bad)
ss
jns
leave
dec
clc
jmp
push
lock
popa
xor
cmps
add
xchg
and
sar
int3
jl
inc
mov
fild
lods
xchg
mov
sti
mov
fneni(8087
jl
pop
push
xor
add
hlt
cmp
in
in
imul
loope
mov
(bad)
sbb
cwde
js
cmp
scas
mov
cld
mov
lods
sbb
pop
dec
lds
xchg
lock
mov
dec
dec
retf
jmp
bts
jmp
int3
ror
leave
sub
(bad)
jne
and
dec
call
xor
lock
movs
mov
mov
pop
icebp
cdq
fcomp
clc
call
push
pop
jns
and
movs
cmp
retf
jns
jl
push
(bad)
loop
popf
xor
dec
outs
sbb
div
xchg
cmp
repnz
out
inc
fdiv
sub
or
and
cmp
out
push
sub
dec
sub
jae
je
aas
hlt
std
shl
mul
addr16
xlat
sub
int3
cld
sub
aam
outs
lods
mov
fdivr
ds
or
cmp
sbb
xor
push
xchg
les
and
push
cwde
or
mov
dec
adc
and
pop
ficomp
mov
fist
push
cs
sub
jae
aam
out
movs
inc
mov
jge
imul
ror
cmps
cmc
mov
loopne
pop
mov
loope
sahf
lds
sbb
lea
adc
add
in
inc
stos
clc
stos
mov
clc
aad
imul
add
fwait
push
sbb
pop
clc
ret
(bad)
cmp
jge
and
push
push
sti
out
imul
push
cmp
pop
(bad)
dec
cmp
add
jge
fidivr
repz
popf
out
push
stos
mov
add
push
stos
mov
cmps
xlat
iret
adc
add
mov
mov
push
inc
mov
inc
test
sti
pop
loope
cmp
jl
pop
loope
ja
sar
sub
jbe
add
in
mov
pop
or
out
xchg
ds
mov
and
out
dec
repz
and
push
outs
push
fnsave
gs
cdq
inc
sahf
fwait
mov
dec
out
pushf
push
sub
cmc
xor
adc
neg
push
repnz
inc
stos
inc
push
sub
sbb
fwait
adc
add
jns
jp
ins
adc
sbb
mov
add
pop
and
std
(bad)
nop
scas
adc
cli
or
cld
movs
mov
sub
pop
mov
ins
cld
in
ret
outs
inc
call
push
sbb
push
xchg
dec
sbb
lds
rcl
jg
je
push
mov
sbb
cs
push
call
pop
sub
jne
into
js
xor
mov
add
mov
push
(bad)
ins
int3
loop
xchg
ins
ror
mov
sbb
repz
xchg
mov
and
inc
pop
cmp
in
adc
enter
xor
out
lds
or
mov
out
sahf
adc
jmp
loopne
adc
sub
enter
jl
loope
cli
xor
loope
xchg
(bad)
in
push
jecxz
adc
push
jns
pop
sub
test
aaa
repnz
imul
lods
mov
aam
jns
les
lea
data16
test
push
in
cmp
jp
jmp
sbb
xor
pop
push
cmp
pandn
and
lds
ins
inc
loopne
(bad)
scas
mov
pusha
retf
xchg
call
mov
sbb
les
cld
lods
mov
repnz
ds
rcl
jbe
cwde
(bad)
out
mov
movs
xchg
test
sub
aaa
call
cmps
and
outs
add
and
sbb
repz
outs
mov
mov
xchg
dec
xor
jmp
and
push
push
adc
xabort
std
in
jmp
fwait
inc
dec
mov
cmp
jnp
and
jbe
retf
push
add
lahf
mov
stos
mul
rol
icebp
lea
movs
addr16
int3
push
adc
clc
(bad)
test
inc
push
movs
push
adc
data16
sub
mov
out
out
adc
push
aas
fisub
cmp
pop
les
pop
cmc
jl
xor
sbb
jne
pop
push
shr
inc
mov
jae
movs
mov
xchg
cmp
or
bound
mov
dec
dec
dec
adc
js
fld
mov
jmp
imul
lahf
mov
dec
(bad)
dec
pusha
dec
jns
pusha
sbb
and
jg
sbb
jne
push
push
(bad)
out
arpl
sub
push
outs
and
or
or
mov
xchg
stc
aas
popf
or
fwait
mov
in
mov
icebp
mov
js
sar
inc
push
ja
icebp
scas
push
ret
mov
pushf
daa
loope
or
push
shr
push
pop
mov
in
idiv
xchg
dec
out
stos
into
or
test
test
cmp
or
sbb
stos
dec
or
mov
add
dec
xchg
(bad)
jecxz
nop
jl
xor
push
hlt
outs
jno
xchg
adc
jg
fucomp
push
(bad)
in
lds
cld
xor
xchg
fwait
dec
mov
outs
mov
in
aad
push
cmps
pop
jecxz
mov
ds
js
xchg
adc
mov
mov
lds
inc
mov
call
mov
inc
aas
(bad)
sar
xchg
in
jg
sub
ret
aam
or
scas
rcr
and
stos
sbb
cmp
scas
add
retf
fnstcw
or
nop
fild
(bad)
shl
jbe
jbe
imul
out
jb
popf
mov
hlt
loop
or
push
stos
test
add
sti
lock
das
stc
mov
push
lea
sahf
sbb
sbb
imul
and
jns
outs
out
push
in
aam
out
push
push
sub
lock
or
ds
xor
push
push
aad
cdq
clc
cmp
jg
mov
xchg
push
mov
test
fcom
mov
xor
mov
and
mov
inc
dec
retf
call
std
movs
pusha
sbb
jg
sbb
jns
not
aaa
int3
inc
retf
adc
xchg
call
pop
retf
jmp
gs
jmp
pop
clc
les
data16
ins
gs
mov
jno
push
push
xor
jnp
femms
icebp
fwait
pop
mov
mov
pop
jb
mov
push
pop
cmps
dec
pop
xlat
hlt
mov
call
jle
call
ret
rol
addr16
clc
dec
(bad)
jl
repnz
lods
mov
xor
stc
jecxz
daa
fs
fs
outs
das
out
not
(bad)
lock
rcl
add
test
sbb
mov
push
not
out
test
gs
inc
dec
and
repz
jp
adc
out
xor
cmovo
jnp
(bad)
cmp
jge
xchg
jb
call
sub
fisttp
xchg
adc
sub
std
mov
push
xor
mov
mov
(bad)
cmp
push
jb
add
xor
sub
push
addr16
push
pop
and
fwait
shl
test
hlt
out
push
pop
dec
pop
fwait
into
lock
lods
leave
icebp
mov
js
push
outs
addr16
test
jmp
or
test
int3
shl
or
inc
adc
lea
out
lahf
pop
xor
jbe
es
push
mov
pop
retf
ret
xchg
pop
test
leave
mov
inc
int3
push
aad
jle
imul
out
mov
inc
push
push
pushf
jbe
iret
inc
dec
sbb
mov
adc
adc
xor
ror
adc
shl
es
fcmovnbe
xor
clc
cs
or
mov
pop
fdivr
pop
xchg
cmp
push
in
mov
scas
aam
fidivr
add
dec
stos
(bad)
aas
add
xchg
ins
dec
cwde
jp
xor
popf
stos
les
inc
pop
dec
out
dec
inc
and
clc
ret
jne
(bad)
sub
and
jmp
leave
enter
int
stos
inc
les
jp
sub
rcr
out
push
mov
outs
in
stos
movs
inc
call
pop
add
sbb
xor
fxch
pop
fild
fld
(bad)
push
mov
ins
scas
sbb
inc
jp
test
xchg
test
addr16
enter
mov
mov
sub
mov
and
cmps
aad
movsx
inc
(bad)
lock
mov
imul
leave
clc
loope
ins
or
div
daa
dec
dec
xchg
int
repnz
stc
retf
sub
movs
retf
cmp
sar
mov
mov
daa
and
fwait
mov
xor
xchg
sti
retf
call
sbb
scas
repnz
push
push
jne
(bad)
sbb
in
shl
or
scas
lea
cwde
sahf
xchg
clc
scas
sbb
push
jno
ror
xchg
pop
mov
ret
call
mov
pop
sbb
mov
je
(bad)
dec
idiv
js
push
stos
cld
fadd
outs
in
out
jns
clc
sub
sub
mov
jmp
xor
xor
imul
xor
cmp
pusha
pop
jb
ins
aad
ins
jnp
jae
mov
pop
data16
sahf
stos
xor
and
dec
push
push
push
push
and
pop
dec
add
xor
je
push
dec
(bad)
cli
and
sub
mov
pusha
xchg
movs
ror
fmulp
ja
inc
and
push
jo
lods
pop
sub
ins
dec
mov
mov
fistp
sbb
pop
jmp
lahf
and
gs
imul
sub
xor
sbb
shl
stos
imul
sub
(bad)
cmp
jmp
sti
daa
mov
movs
cmps
sbb
aas
scas
call
outs
rdtsc
sti
cs
leave
je
jnp
psubsb
mov
mov
mov
std
jae
jbe
test
dec
push
cdq
pop
out
mov
jne
sbb
jmp
mov
aas
test
scas
ja
repz
or
sti
adc
rcl
pop
push
or
xchg
outs
and
cmps
in
or
fwait
or
push
(bad)
fld
lock
(bad)
sar
cmp
sub
mov
mov
cmp
xchg
out
mov
push
adc
pop
jmp
adc
jne
inc
push
mov
xchg
push
push
dec
lds
inc
xor
mov
test
fidiv
test
sub
pushf
call
xchg
cli
call
out
push
ds
ja
mov
mov
xor
stos
cmp
js
rcl
push
add
das
xchg
test
mov
sbb
xchg
jmp
adc
push
jbe
mov
in
sar
cmps
pop
adc
in
psubusw
fwait
mov
jg
fwait
das
out
ret
push
fsub
nop
cdq
add
fcmovu
dec
sbb
jnp
fisubr
add
and
mov
pop
(bad)
and
push
rcr
push
sub
add
shr
shl
js
pop
mov
cmp
inc
(bad)
iret
xlat
push
mov
lods
enter
mov
cmps
iret
xor
cmp
aaa
pop
fwait
ret
pop
sbb
mov
jns
xchg
repnz
push
popa
sbb
pop
sub
sbb
jecxz
repz
cmps
cdq
fwait
mov
cmc
sbb
mov
popa
int3
and
adc
test
icebp
ins
adc
sbb
cld
repz
aas
(bad)
cld
repz
aas
call
shl
dec
pop
hlt
pop
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fmul
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movd
inc
push
pop
inc
in
shl
fmul
add
loopne
into
mov
dec
dec
mov
jmp
rcr
xor
cmp
popa
dec
sahf
call
out
ret
jo
jle
(bad)
test
push
retf
pop
or
or
test
sbb
mov
mov
pop
xchg
stos
leave
mov
movs
jbe
cmp
add
cwde
hlt
xor
and
push
mov
mov
pop
or
jne
fdiv
ffreep
jecxz
jno
in
jle
inc
daa
lds
int
cmps
jbe
inc
bound
sbb
xor
pop
imul
pop
sub
push
push
aam
xchg
push
or
cmps
cwde
cld
xor
adc
adc
jmp
dec
xchg
out
ret
aas
test
das
mov
dec
ds
jne
imul
lea
pop
inc
or
pop
lea
pop
stc
fs
mov
hlt
mov
xchg
and
push
rcr
mov
push
fidiv
loope
fsubr
(bad)
xlat
inc
stc
cmc
shl
adc
mov
xor
add
repz
ins
cli
mov
in
cmc
call
xor
cdq
mov
sbb
jge
adc
in
je
push
mov
xor
pop
cdq
jmp
aad
arpl
ins
iret
cld
addr16
sub
bound
jns
ds
jg
mov
ins
lods
push
adc
scas
mov
lahf
or
and
xlat
in
add
and
sub
gs
mov
outs
push
inc
fwait
cmp
sub
in
lods
fisttp
add
iret
jle
icebp
xchg
shr
or
xchg
cld
push
sbb
shr
data16
mov
cli
xchg
call
fcmovne
pop
push
sbb
jno
mov
mov
js
faddp
lods
or
xor
(bad)
dec
pop
or
movs
pop
sbb
call
movs
jmp
adc
jae
sbb
dec
add
lea
push
popa
and
mov
adc
cli
adc
adc
jno
jnp
mov
into
mul
jo
ret
nop
int3
inc
pop
ins
xor
jbe
xor
mov
xchg
retf
shr
fbstp
loopne
and
push
sub
add
jmp
sbb
fist
(bad)
call
pop
scas
jne
std
and
dec
jbe
popf
adc
cmp
xchg
ret
leave
xchg
push
or
aaa
inc
xor
fistp
add
ja
pop
test
mov
pop
adc
not
push
xlat
stos
or
popa
cmc
sub
mov
daa
or
das
xchg
cmps
outs
loop
popf
or
ds
repnz
in
mov
clc
xor
cdq
xchg
or
arpl
or
xchg
cmp
repnz
xor
xor
mov
ss
lea
cdq
xor
mov
nop
(bad)
adc
pop
fsubrp
and
add
add
loope
and
cmpps
add
push
mov
mov
cmps
add
push
repz
add
jle
pop
jne
or
inc
xor
xchg
fnstsw
push
xchg
push
jmp
mov
xchg
mov
and
stos
push
repz
push
cdq
jle
mov
or
xchg
xchg
div
adc
jbe
rdmsr
mov
popa
ja
div
jecxz
stos
es
or
pop
fnstenv
lds
call
cli
sbb
mov
push
jle
sub
addr16
push
hlt
inc
stos
mov
mov
retf
scas
int
xor
jl
xchg
ds
ror
pop
out
call
vaddps
or
out
xchg
sub
fwait
xchg
xchg
mov
push
jno
xchg
jae
imul
push
icebp
cmp
push
dec
call
mov
mov
cmps
add
(bad)
ja
pop
ins
shl
f2xm1
cmp
push
into
dec
push
inc
dec
sbb
cmp
inc
or
cmp
jle
xchg
pusha
push
or
nop
sbb
dec
adc
dec
aaa
lds
setns
dec
imul
aas
add
and
cmps
inc
cld
clc
icebp
sbb
cli
icebp
adc
imul
stos
jns
mov
push
cmp
imul
dec
movs
mov
ficom
adc
call
repz
mov
hlt
add
mov
mov
pop
fwait
push
sub
add
fbstp
stc
jle
inc
aad
fs
or
mov
test
icebp
push
push
jmp
(bad)
adc
sbb
(bad)
lods
bound
push
repnz
scas
jg
jbe
imul
and
push
sbb
ins
sub
inc
xlat
repz
jge
and
(bad)
jecxz
call
push
pop
mov
jnp
sbb
jp
loopne
fmul
xchg
pop
repnz
xchg
sbb
ret
enter
mov
in
fucomp
(bad)
cmp
adc
into
imul
xchg
in
aas
xchg
sti
ret
rcr
cdq
or
jmp
adc
in
aas
lock
xor
jp
mov
xlat
or
push
mov
rol
into
in
jae
fbstp
cmp
fwait
add
ds
cwde
iret
inc
loop
dec
inc
inc
mov
xchg
inc
outs
in
icebp
jmp
push
sar
(bad)
pop
fdivp
arpl
inc
sub
loopne
dec
iret
sbb
movs
adc
lahf
jno
xor
adc
inc
aam
xchg
or
outs
aad
jne
and
mov
das
push
fst
lahf
sar
fbld
xchg
popa
and
or
cwde
cmp
mov
ret
outs
movs
push
mov
ficom
cmp
mov
pop
xchg
fwait
in
mov
std
pop
fs
sahf
sbb
jo
fst
jle
sub
out
sub
jnp
scas
and
adc
mov
cmps
mov
and
test
xor
push
xchg
xor
imul
test
call
and
in
lods
inc
mov
mov
outs
fs
jne
scas
(bad)
(bad)
jo
jg
std
and
xor
stc
lods
test
retf
xor
(bad)
pushf
jno
pushf
les
mov
rcr
and
jmp
jns
lock
pop
push
repnz
sti
xchg
dec
pop
in
test
addr16
mov
aaa
mov
cmp
jge
push
fild
cmps
xchg
jns
add
cli
dec
cli
in
ja
(bad)
enter
xor
call
icebp
scas
dec
add
cmc
mov
lods
loopne
cwde
pop
dec
shl
je
mov
and
jb
int
and
cmc
repnz
and
xchg
shl
mov
xchg
and
jne
test
xchg
pop
mov
movs
sar
mov
fld
cmps
adc
push
fisub
loope
call
push
adc
mov
in
or
xchg
clc
jge
jno
cmc
and
out
jle
dec
scas
pop
stos
aam
ins
jmp
stc
or
arpl
jmp
les
sbb
cmp
rcl
jl
lods
enter
das
stos
out
jmp
mov
or
xor
cmp
inc
hlt
sub
jl
inc
sbb
scas
js
ficomp
ss
push
jp
mov
clc
xor
sbb
in
mov
pop
adc
xchg
stos
and
jmp
cmp
test
inc
jne
xchg
inc
jno
cwde
out
mov
add
idiv
or
in
dec
retf
xchg
jno
mov
mov
inc
cmp
aad
sti
cmp
jno
lods
cmps
jg
push
data16
int3
mov
ins
xchg
ins
jno
ret
mov
mov
cmps
sahf
add
pop
movs
mov
test
fild
mov
int
fs
mov
in
push
mov
mov
adc
xchg
sub
ss
jp
mov
pusha
adc
sub
cmp
cmp
lahf
fcom
inc
inc
mov
iret
add
jge
nop
clc
movs
jge
jmp
ret
or
push
test
mov
mov
jnp
sub
out
cmps
loop
jns
stc
fdivp
das
jae
and
cli
jge
ror
and
pop
mov
dec
(bad)
loopne
or
pop
jg
pop
outs
push
mov
leave
and
pop
sbb
push
jmp
dec
ins
test
enter
icebp
push
xor
int
sti
push
jne
and
in
push
push
jnp
xchg
pop
and
jne
ja
lahf
scas
jle
clc
xlat
mov
out
cmp
sub
clc
and
retf
and
scas
sbb
xlat
sti
stc
sbb
imul
ds
push
popf
pop
and
pop
xchg
sub
nop
cmp
ret
pop
ins
xor
cli
(bad)
lock
call
push
repnz
push
cmc
inc
mov
imul
stc
mov
mov
and
cmps
rol
ret
in
ss
or
and
sbb
push
pop
cli
push
ret
mov
fcomp
pop
ins
add
lods
adc
jno
(bad)
cmp
mov
jl
ins
les
lahf
ss
mov
(bad)
loopne
pushf
mov
mov
cli
or
bnd
sub
in
ins
ins
cmp
lods
mov
jmp
(bad)
loope
stos
xlat
sbb
je
sub
test
hlt
or
enter
xor
lahf
push
xchg
pusha
shl
sbb
pop
dec
ss
cmp
xor
jp
mov
cmp
mov
mov
jl
rcr
sbb
push
les
jae
std
jnp
icebp
xchg
into
fild
hlt
shl
lock
push
sub
or
ror
das
fsubr
das
lods
es
push
sub
mov
xchg
fiadd
(bad)
sahf
imul
mov
ja
adc
shr
in
ins
movs
in
sar
push
mov
sub
mov
aaa
mov
js
ja
xchg
stc
mov
jo
cmc
jnp
jp
xchg
and
call
mov
xchg
pop
in
leave
cmp
inc
xor
js
cwde
xchg
push
push
mov
test
and
cwde
cmc
mov
sbb
mov
sahf
add
xor
(bad)
ficom
daa
inc
and
sti
mov
dec
xlat
xor
mov
loop
iret
push
jno
push
je
xchg
push
stos
aas
ins
(bad)
lds
xor
sbb
pusha
jb
test
imul
les
mov
aam
fs
push
(bad)
scas
jmp
mov
jae
arpl
popf
jecxz
cmp
scas
cli
sub
outs
ins
jnp
loope
mov
bound
mov
aad
cwde
cmps
inc
lahf
jne
test
inc
cld
(bad)
cmp
jb
dec
mov
int
rcr
pushf
(bad)
fdiv
dec
jns
mov
jp
cmp
outs
sahf
mov
jno
call
in
neg
dec
jmp
les
imul
cwde
jl
call
adc
sub
xor
add
xor
mov
xchg
int3
add
(bad)
fldcw
int
jp
test
leave
test
into
scas
mov
enter
arpl
fist
mov
jge
dec
and
mov
jbe
imul
int3
add
fst
call
jb
iret
(bad)
push
mov
inc
mov
adc
and
xchg
push
inc
or
xor
ins
cmp
sub
test
mov
jle
repz
xor
call
test
xchg
push
and
or
mov
inc
imul
cld
std
mov
or
std
int3
imul
(bad)
push
and
ss
into
push
inc
push
sbb
(bad)
ins
sbb
mov
mov
xor
jecxz
pop
dec
sub
(bad)
loope
xor
cmp
jge
add
mov
xchg
mov
mov
push
push
ds
push
daa
cmp
(bad)
call
int
xchg
xor
retf
bound
ror
popa
push
pop
fcomp
fdiv
pop
or
outs
pushf
pop
punpckhbw
mov
popa
mov
cmp
stos
or
or
fnstsw
sub
jnp
mov
add
jne
add
mov
inc
sub
pop
adc
push
adc
stos
enter
call
jb
lods
push
mov
and
stos
pop
push
ret
fadd
mov
dec
or
dec
(bad)
xchg
mov
or
xchg
jl
shl
dec
mov
mov
inc
and
out
mov
call
push
dec
dec
stos
shr
inc
mov
aas
jge
and
xchg
cmps
lahf
cld
xchg
mov
das
jg
repz
jne
cwde
shr
mov
movs
fidivr
add
aad
fisub
push
inc
adc
scas
ret
mov
je
and
movs
cmc
popf
mov
repnz
xor
xor
mov
jmp
and
(bad)
(bad)
fdivrp
cmp
shr
jmp
cld
stc
push
and
movs
and
mov
xor
loopne
retf
test
xchg
je
les
pop
sbb
or
sbb
fist
pop
sub
cmp
cwde
mov
aad
mov
cmp
aaa
arpl
mov
pop
xchg
sub
inc
cmpxchg
outs
iret
xor
and
retf
and
loopne
cld
enter
scas
add
stc
out
jg
stc
out
jmp
add
aas
retf
sbb
and
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loopne
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jb
pop
inc
in
int
and
ret
add
fwait
sbb
dec
fmul
cmps
jae
bound
popa
mov
out
sahf
outs
mov
dec
dec
aaa
pop
popf
mov
sahf
xchg
icebp
cld
mov
sbb
add
inc
fst
jp
inc
mov
xchg
mov
fwait
popf
add
outs
xchg
dec
xor
ret
or
push
add
mov
mov
shl
test
lds
mov
mov
dec
fdiv
(bad)
mov
je
aad
dec
mov
adc
cmp
ja
out
enter
xchg
cmc
jnp
jle
sbb
movs
mov
pop
stos
add
dec
fs
dec
(bad)
cmp
jns
mov
cmp
jmp
xor
mov
xchg
mov
or
aam
push
dec
mov
out
int3
xor
mov
mov
movs
in
rcl
pop
push
dec
mov
adc
mov
lock
cmp
xchg
das
sbb
cdq
iret
pop
shr
push
or
into
push
sar
out
test
div
cmps
scas
jg
arpl
mov
push
stos
cmp
call
cdq
or
adc
fidivr
pop
xchg
in
stos
and
pop
out
xor
ds
retf
imul
loopne
(bad)
jl
(bad)
(bad)
ins
xchg
repz
sub
xchg
push
push
or
retf
hlt
jns
lods
sub
fnsave
mov
or
mov
dec
scas
mov
into
scas
je
mov
ins
ja
push
jmp
shl
and
call
jns
iret
and
cmp
adc
mov
ds
lea
dec
ins
das
mov
outs
ss
sbb
push
push
mov
cmp
add
mov
setp
mov
sub
call
jecxz
push
loope
int3
xor
leave
pop
leave
call
sahf
cmp
adc
out
lds
ret
jp
cmp
out
adc
nop
(bad)
inc
jmp
mov
mov
sbb
adc
ja
stc
sbb
lahf
adc
ret
loope
data16
jge
dec
lods
cmp
xor
and
inc
cdq
fstp
and
test
lahf
push
ins
repz
ja
cmp
out
scas
pop
adc
mov
movs
and
dec
inc
test
cmp
(bad)
out
and
mov
mov
jbe
cmp
jbe
xor
cmp
(bad)
cmps
ret
(bad)
mov
pop
leave
mov
or
in
in
es
into
clc
movs
pop
xor
fisub
arpl
inc
mov
ins
les
inc
stc
in
popa
cmps
sbb
jecxz
mov
pop
jbe
lock
cwde
pop
sbb
jne
pushf
test
lock
fwait
and
fimul
test
jl
cdq
sbb
xchg
adc
xchg
sbb
cld
ins
hlt
dec
(bad)
es
mov
rdmsr
jmp
cmp
sub
(bad)
int3
sti
jp
sti
mov
sbb
sub
ret
add
mov
daa
mov
daa
dec
cwde
pop
mov
jns
xlat
fxch
inc
lea
leave
or
enter
xchg
cmp
xor
test
sbb
leave
adc
ins
xor
push
cmps
aas
(bad)
add
and
and
test
push
pop
xchg
imul
mov
pusha
xchg
aam
cmp
and
sbb
fcom
ins
scas
pop
add
mov
push
and
out
hlt
into
lods
jl
and
or
(bad)
dec
in
mov
es
test
test
retf
add
nop
inc
push
stos
mov
cmps
lock
pop
or
call
ins
mov
jnp
test
sbb
xchg
neg
clc
mov
adc
xchg
jmp
pop
jl
aam
ficom
mov
dec
sbb
dec
mov
loope
and
and
daa
movs
sub
mov
xchg
scas
jmp
scas
sar
and
pop
sbb
stos
push
mov
pop
clc
scas
push
jno
mov
out
pop
das
xchg
cld
aad
pop
or
sar
push
sub
mov
pop
jae
cmps
cmps
xor
shr
sti
je
das
fdiv
icebp
sbb
ins
retf
jg
call
ror
fbld
push
push
xchg
cmp
ret
pop
push
nop
mov
iret
xor
fist
mov
cmp
(bad)
xchg
retf
mov
pop
add
sub
and
jae
in
lods
lock
jle
cli
sub
or
fidiv
lahf
fimul
adc
mov
ds
clc
fsub
jmp
js
in
retf
gs
idiv
and
sahf
add
(bad)
mov
add
aas
push
sub
and
aam
fsubp
(bad)
clc
je
jl
dec
mov
push
jne
(bad)
jl
sub
mov
add
sub
lods
sub
out
das
lods
and
mov
das
xchg
mov
mov
shl
jae
outs
lods
fisttp
inc
ret
inc
es
cld
aas
pop
cmp
adc
sahf
outs
jne
or
cmp
int3
sbb
imul
aad
push
sar
in
sbb
loope
push
std
out
outs
dec
cmp
out
aam
cs
es
inc
std
pop
dec
add
adc
or
add
into
pop
(bad)
fld
mov
mov
mov
cld
xor
xchg
jne
movs
rol
outs
jns
clc
pop
push
push
mov
add
call
pushf
(bad)
jmp
ret
stc
test
or
push
pop
fwait
loopne
or
mov
ret
xor
xchg
das
xor
jns
cmp
dec
sahf
fcomp
or
aam
cmp
sbb
lea
push
movs
aad
pop
cmp
repnz
imul
aam
jnp
lock
mov
push
aaa
sub
call
mov
cmp
add
enter
pop
cmp
xor
icebp
not
mov
mov
add
jnp
or
adc
pop
sbb
shl
push
hlt
jmp
sub
not
push
jge
movs
jecxz
inc
adc
cmps
adc
sbb
dec
cmps
mov
fcomp
inc
cdq
js
pop
into
bound
rcl
arpl
pop
pop
push
fidiv
pop
xor
mov
cmc
test
pop
xchg
repnz
out
sar
lahf
sub
lds
movs
inc
enter
mov
jo
push
loope
mov
pusha
mov
xchg
js
rcl
pcmpeqb
mov
pop
test
jae
cmp
lods
xor
addr16
xchg
test
and
fldlg2
inc
lods
pusha
sti
push
jp
and
pushf
pop
bound
sub
and
scas
popf
rcl
cmc
pop
sub
xchg
jge
lahf
mov
dec
add
test
fnsave
dec
inc
mov
rol
sar
je
xchg
std
and
leave
pop
pop
out
and
movs
repz
xor
outs
popa
movs
xor
pop
(bad)
bound
xchg
mov
or
inc
dec
stos
lods
inc
sub
push
int3
scas
ret
rol
sbb
jecxz
scas
mov
imul
pusha
mov
int3
cmp
add
outs
jbe
inc
fidivr
sbb
test
add
popf
xchg
daa
jne
sub
jbe
adc
std
xor
pop
aad
addr16
jb
xor
mul
pop
je
(bad)
xor
xchg
cli
lea
mov
mul
clc
jbe
jmp
add
(bad)
push
push
xor
les
jecxz
movs
pusha
inc
inc
and
cli
xor
jge
cmps
fcom
inc
mov
push
xchg
popf
mov
mov
or
movs
retf
adc
mov
clc
pop
stos
cmp
push
jno
jecxz
inc
mov
cmp
or
enter
mov
mov
adc
adc
push
loopne
rcl
cmp
mov
mov
test
sbb
dec
fimul
push
pop
mov
push
fstp
cmc
stos
and
push
ret
(bad)
std
adc
xchg
data16
in
xchg
push
xor
ss
bound
int
push
mov
jb
mov
cmp
cmp
idiv
ret
repz
cwde
aam
xor
jp
(bad)
sub
sti
movs
add
cmp
sub
fiadd
or
stc
outs
add
xchg
xlat
jae
shr
popa
pop
push
addr16
addr16
into
or
cwde
jge
push
dec
push
and
cmp
jnp
and
loopne
sub
and
in
push
test
xchg
nop
das
and
pop
mov
mov
pcmpeqw
mov
adc
daa
jg
pop
fild
ins
sbb
ja
dec
fild
daa
cmp
cmp
cdq
loop
neg
hlt
mov
mov
int3
xor
jl
(bad)
cld
jl
xchg
and
fld
in
or
mov
loop
je
add
or
test
fisubr
fwait
xchg
lods
mov
jle
mov
mov
pusha
mov
dec
sar
int
(bad)
imul
push
and
fist
and
mov
fmul
or
stos
cwde
fcmovbe
aam
movs
shl
sahf
dec
inc
mov
jge
push
bound
inc
fcomi
push
sub
cmc
inc
(bad)
ds
(bad)
inc
and
xor
or
test
cmp
outs
jns
ror
or
mov
jo
outs
mov
data16
inc
pop
aad
nop
out
lahf
hlt
add
sub
movs
popf
pop
jno
js
(bad)
lock
(bad)
cld
sbb
(bad)
loopne
scas
sub
shl
lds
into
xchg
or
loope
push
loop
int
push
inc
push
xor
shl
ja
pop
into
xchg
cmp
pop
rcl
aas
adc
jmp
jns
scas
push
mov
jl
stc
aaa
xchg
ds
test
idiv
push
in
inc
push
or
iret
lock
pop
pop
popf
jmp
aam
mov
jae
lods
sub
stos
imul
(bad)
xchg
adc
jo
fcom
sbb
push
jae
mov
or
cmp
jmp
and
lea
(bad)
ds
xchg
loopne
aad
cdq
test
jg
adc
mov
cmp
daa
push
dec
jmp
fldcw
push
mov
dec
popf
inc
jmp
into
push
xor
add
aaa
push
push
sub
in
xor
ficom
and
xor
jne
out
shl
rol
jge
or
inc
loop
nop
mov
retf
push
add
shl
mov
shl
push
cmp
pusha
cmp
in
dec
push
push
(bad)
jnp
bt
movs
in
clc
and
mov
push
xor
jno
cmps
xchg
jae
sti
lahf
adc
push
(bad)
inc
loop
and
fdiv
bnd
mov
mov
mov
jl
shr
mov
xor
add
and
xor
push
cmc
pop
push
jge
cmps
popa
mov
fs
test
scas
or
popa
test
js
out
ret
pop
jmp
test
loopne
adc
adc
cmp
pop
fs
ror
inc
dec
mov
ins
pop
add
ror
ja
mov
jno
mov
in
jae
les
movs
aaa
push
cmp
dec
rcl
jbe
and
dec
test
cdq
retf
int
pop
xor
pop
push
scas
aaa
dec
xor
xlat
xor
jmp
cmps
(bad)
jns
repnz
in
jae
adc
bound
repz
dec
push
repnz
xchg
je
imul
inc
jno
sbb
pop
aam
aam
inc
jp
cmc
jp
cmp
pusha
push
scas
rcl
dec
ins
sub
push
movs
into
push
addr16
ins
ja
adc
in
or
jmp
inc
arpl
pop
fadd
or
and
outs
jl
xor
xchg
cdq
sahf
xchg
outs
pop
stos
test
pusha
clc
cmp
dec
movs
and
sahf
mov
scas
or
test
and
fistp
mov
call
lds
sbb
xor
dec
cmc
test
or
int3
jle
daa
sub
xchg
sbb
hlt
sbb
xchg
jg
loope
repz
lock
bound
cmps
sar
dec
push
fst
jae
sub
int3
out
gs
sahf
sub
mov
std
(bad)
std
ret
mov
loopne
(bad)
lods
xor
sub
cdq
imul
(bad)
xor
jae
pop
xor
inc
mov
xchg
test
push
xchg
pop
mov
dec
mov
push
retf
jmp
mov
push
icebp
test
movs
iret
into
mov
dec
(bad)
mov
arpl
pop
jnp
mov
std
mov
xchg
(bad)
mov
leave
ds
lock
pop
test
out
mov
pop
push
sbb
ret
ds
push
test
shl
push
std
pop
imul
add
rol
into
and
or
idiv
dec
jne
out
test
push
sub
outs
sub
stos
scas
mov
arpl
scas
fsubr
jmp
out
ds
icebp
enter
inc
ins
(bad)
push
dec
cmp
add
push
add
test
add
in
retf
nop
jne
shr
mov
inc
imul
xor
es
mov
mov
aaa
(bad)
mov
lods
ret
fidiv
daa
dec
aam
popf
test
inc
ins
je
and
push
xrelease
pop
add
xchg
dec
pop
stc
or
cmps
jl
pop
xchg
push
and
(bad)
cld
repz
aas
(bad)
cld
jg
add
setne
inc
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jno
pop
inc
in
shl
fmul
add
loopne
fsub
call
cmp
cdq
sahf
sbb
mov
dec
ja
xlat
aam
sahf
scas
jmp
js
(bad)
test
mov
mov
cwde
cmc
ret
cmp
ret
fist
cmp
cmp
test
cdq
scas
push
dec
mov
ror
inc
aaa
ins
sub
mov
repnz
jo
out
les
fistp
mov
call
hlt
cld
pop
jbe
stos
int
and
movs
push
std
(bad)
jno
jg
sahf
xchg
xor
gs
xor
gs
and
rcl
mov
push
call
xor
adc
cwde
adc
ret
jmp
cmp
sbb
push
xor
scas
push
test
pop
je
je
xchg
push
loopne
mov
cdq
xor
adc
in
icebp
loopne
xchg
fist
push
xor
jbe
dec
retf
test
nop
out
mov
cmp
je
or
aam
mov
mov
retf
sti
aam
stc
movs
call
scas
test
and
cmp
fdivr
enter
jle
shr
ins
xor
rol
sub
xor
xchg
dec
and
test
(bad)
ret
push
adc
popf
shl
adc
shl
inc
es
sub
mov
and
inc
cmp
or
ss
xchg
fistp
lahf
jo
mov
icebp
mov
icebp
xchg
jbe
outs
cdq
aad
jp
and
sti
sub
jns
add
mov
movs
pop
mov
leave
mov
in
ins
push
cmp
sbb
into
mov
test
sub
mov
pop
pushf
xor
mov
enter
in
fstp
int3
or
push
mov
fmulp
cmc
mov
stos
push
lock
(bad)
es
xor
push
aas
ins
sub
bound
jecxz
es
xor
adc
sub
sahf
pop
scas
push
int3
inc
dec
adc
fiadd
jo
bound
(bad)
fimul
aas
or
clc
cmp
sbb
sbb
fild
xchg
cmp
xchg
icebp
int
cmp
add
ss
cld
push
and
mov
cmp
dec
ret
int
and
ror
inc
cmps
and
and
sahf
idiv
dec
sbb
cmps
stos
ret
(bad)
pop
xchg
addr16
je
jg
mov
scas
rcl
xlat
clc
add
xchg
scas
enter
mov
pop
cmp
cwde
pop
and
and
mov
rcl
lea
sub
cmp
mov
inc
push
(bad)
enter
cld
push
push
xor
stos
jg
ret
jecxz
mov
adc
cs
sahf
push
inc
mov
dec
cmps
fdivr
mov
push
fdivp
sahf
or
jle
sbb
cmc
push
mov
inc
ins
add
jns
cdq
or
nop
dec
add
cs
pop
cli
leave
jl
cmp
adc
jnp
retf
ror
rol
mov
xchg
cmp
mov
pop
out
push
pop
xchg
fld
xor
mov
test
clc
adc
lods
(bad)
dec
cwde
scas
sti
push
test
pop
fst
jmp
out
jl
pusha
sbb
mov
jne
inc
cmp
inc
jle
pop
sbb
(bad)
fld
jbe
call
sub
ins
sbb
dec
out
ficomp
push
xchg
push
jne
dec
out
test
dec
pusha
enter
pop
andps
mov
test
xchg
xor
inc
and
fcom
jle
push
xchg
mov
pop
mov
repz
jbe
retf
outs
scas
retf
dec
jmp
gs
data16
retf
mov
ficomp
pushf
rcl
outs
aam
add
(bad)
push
aas
ins
pop
into
jge
test
gs
mov
ficomp
loope
mov
cwde
stc
jo
sbb
inc
repnz
cld
mov
sbb
push
mov
jns
pop
cmps
out
and
mov
pushf
mov
xchg
scas
add
xchg
(bad)
icebp
sub
int3
mov
push
fsubr
mov
jno
adc
lods
jb
sub
int
scas
outs
mov
dec
call
aam
pop
jge
and
pop
test
dec
ss
cdq
pop
rol
cvtps2pi
cmps
mov
and
enter
add
sbb
mov
inc
cmp
mov
stos
mov
add
sti
fiadd
fidivr
cmp
mov
cmp
std
outs
lahf
adc
(bad)
jl
sbb
mov
mov
in
mov
inc
repnz
icebp
push
add
sbb
jle
or
sub
jmp
jecxz
out
mov
stos
push
cmp
adc
int
add
loopne
call
adc
cmp
mov
push
ret
dec
pusha
pop
neg
push
cmps
cmc
movs
cmc
xor
pop
sbb
mul
clc
mov
(bad)
test
dec
(bad)
mov
xchg
or
outs
jae
xor
and
gs
ficom
sbb
cli
cmp
jne
add
mov
jns
dec
test
mov
call
jge
pop
mov
cmc
add
jmp
jns
sbb
cld
cmp
mov
pop
xchg
sub
mov
xor
rol
in
xor
test
gs
mov
inc
xor
popa
xor
inc
or
test
cmp
mov
dec
and
mov
inc
adc
xchg
push
mov
mov
xchg
dec
lahf
adc
inc
jge
mov
sub
dec
rcl
mov
arpl
cmp
add
xor
push
mov
leave
xor
xchg
mov
ins
ins
jbe
enter
aaa
jae
test
inc
or
and
jle
enter
retf
jae
outs
sub
retf
or
push
cli
pop
in
dec
imul
ins
mov
sub
mov
shl
repnz
jl
mov
sbb
cli
inc
cmp
mov
pop
je
addr16
lea
jmp
aad
lahf
sbb
mov
pop
fsubr
in
sub
xlat
pop
sbb
test
xchg
stc
test
pop
pop
mov
pop
inc
jae
pop
movs
mov
nop
xlat
sbb
and
or
cmc
push
mov
repnz
icebp
aaa
ss
das
jl
sub
das
hlt
inc
test
mov
movs
adc
mov
mov
mov
pop
repnz
pop
xor
adc
mov
and
and
pop
cmp
popf
fistp
out
cmp
push
cmp
push
pop
in
mov
push
inc
call
rcl
into
mov
hlt
or
clc
call
mov
inc
cmc
jbe
sbb
rcl
inc
and
ror
xchg
xchg
ror
pop
(bad)
cmc
cmp
xor
dec
xlat
inc
lods
inc
sbb
mov
push
pop
not
ins
sbb
xchg
dec
cli
hlt
mov
clc
adc
jmp
repz
movs
in
push
and
cmps
push
sbb
or
add
jne
xor
adc
adc
inc
xor
xor
xor
loope
int
ins
ret
iret
jae
pop
mov
outs
call
scas
inc
push
das
pop
push
sbb
cmc
mov
sbb
pop
mov
mov
or
fstp
pop
xchg
jl
cmp
icebp
mul
and
mov
cli
push
enter
mov
ror
sbb
mov
repnz
adc
jo
add
shr
and
xlat
push
sbb
popa
pop
or
in
bound
mov
inc
add
xor
pop
push
mov
iret
push
adc
inc
sub
mov
popa
push
sub
adc
les
stos
enter
leave
jo
dec
int3
cs
scas
gs
movs
sbb
int
movs
sahf
gs
iret
icebp
pop
fs
xchg
add
movs
sbb
(bad)
push
(bad)
pop
repz
mov
out
add
test
js
xchg
mov
mov
adc
call
sub
cmc
jg
movs
mov
out
ja
cli
push
xchg
push
cld
jle
daa
xchg
or
jo
sub
jno
push
push
imul
sar
in
mov
out
and
nop
inc
iret
outs
dec
or
cmp
cmp
sar
jle
inc
push
jne
repz
je
test
adc
mov
mov
retf
jl
in
and
sbb
retf
pop
hlt
xor
jmp
mov
je
mov
sbb
into
cmps
jbe
cmp
iret
not
icebp
stos
dec
es
sbb
mov
xor
pusha
popf
clc
test
mov
inc
retf
xchg
xchg
push
clc
add
cmc
ins
cmps
fcmovnbe
pop
fld
dec
leave
inc
add
std
out
iret
push
jge
dec
retf
mov
movs
scas
dec
sbb
push
mov
mov
cmc
fisubr
push
repz
mov
or
movs
dec
sbb
in
push
cdq
bound
dec
jmp
bound
push
ins
je
mov
lods
rcr
adc
mov
cmp
retf
arpl
sar
je
cmp
repz
imul
cmp
cmp
inc
fcom
pop
and
push
loope
lock
arpl
xchg
fnstenv
(bad)
push
mul
pop
imul
movs
jge
push
test
in
mov
mov
pop
xor
les
dec
add
sbb
push
jnp
pop
test
xchg
sub
in
jbe
out
mul
mov
out
sub
push
gs
rol
ret
aas
fs
pop
and
(bad)
adc
dec
into
xor
daa
fcmovb
jmp
mov
fnstcw
cdq
in
pop
inc
pop
add
jns
fcmovb
test
mov
dec
inc
aaa
imul
push
sti
ret
mov
movs
popa
ds
add
mov
xor
mov
test
popa
mov
mov
clc
sbb
cmp
lock
mov
sub
push
aad
ja
call
push
jl
aad
outs
lahf
cmp
xlat
sbb
mov
mov
inc
mov
cmp
out
arpl
shl
icebp
cld
push
(bad)
shl
loop
mov
mov
mov
adc
push
push
pop
pop
popaw
jecxz
jmp
or
out
cs
xchg
shl
sub
xadd
mov
dec
and
mov
and
push
push
popa
les
(bad)
sti
out
jnp
out
out
add
and
pop
mov
fimul
out
cmp
out
jmp
sbb
adc
inc
inc
mov
fs
cwde
pop
dec
dec
mov
add
mov
mov
pop
leave
jmp
cmp
mov
sar
pop
int
sbb
xor
pop
mov
sahf
pop
scas
dec
xchg
clc
cli
xor
adc
sar
gs
adc
data16
mov
pop
push
aam
lods
adc
sbb
and
jle
pop
mov
ja
movs
jbe
pop
nop
cwde
sbb
fs
mov
jg
fs
inc
dec
ja
sub
and
adc
cdq
or
outs
fmul
jmp
aam
add
retf
hlt
popf
inc
mov
jle
(bad)
mov
(bad)
dec
xchg
retf
mov
and
(bad)
mov
fiadd
push
int
(bad)
and
sbb
movs
and
jle
xor
hlt
ds
cmp
mov
test
xchg
mov
dec
sub
dec
rcr
sub
dec
aad
test
or
xchg
scas
leave
shl
cmp
adc
or
mov
scas
xlat
test
popf
sbb
out
stc
pop
mov
pop
mov
push
or
out
ret
call
call
jg
shl
add
inc
out
sub
mov
mov
rcl
sbb
cmp
pop
in
push
je
enter
outs
out
jmp
out
inc
mov
loopne
jmp
jecxz
shl
sar
cwde
push
jno
lods
icebp
rcr
sbb
imul
scas
push
out
adc
fidivr
jg
cdq
and
icebp
xor
nop
idiv
loop
push
enter
test
in
retf
xchg
enter
jmp
push
mov
pop
movs
sbb
mov
scas
push
in
sahf
int
aad
rol
push
or
sbb
pop
fbld
jns
sbb
int3
(bad)
mov
arpl
dec
cmp
fdiv
out
inc
mov
push
popa
in
pop
jbe
xchg
loope
sbb
aam
cwde
daa
jmp
test
mov
loop
popf
retf
ficom
(bad)
popa
in
cli
or
push
fcomp
adc
or
in
dec
xor
(bad)
pop
cli
movs
test
std
mov
mov
(bad)
cmp
pop
dec
mov
gs
mov
push
xor
adc
mov
xchg
sbb
rcl
and
in
sar
(bad)
jnp
ins
scas
nop
out
test
out
jp
xchg
mov
das
push
add
not
mov
ficom
dec
bound
ret
pop
iret
sub
fdiv
xchg
push
mov
mov
sub
notrack
test
dec
pop
pop
hlt
gs
outs
lea
out
or
inc
js
adc
cli
ins
pop
ror
cld
sbb
adc
cmp
cs
mov
mov
push
xor
push
nop
(bad)
xor
xor
mov
cld
repz
aas
(bad)
cld
repz
inc
imul
imul
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loopne
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jb
pop
inc
in
shl
fmul
add
loopne
push
shl
cmps
dec
dec
xlat
leave
jmp
dec
out
jae
xor
sbb
cmp
ja
sbb
fidivr
std
popa
iret
add
test
inc
mov
mov
int3
lods
aaa
xor
pusha
aaa
mov
out
pop
or
loopne
loopne
enter
stos
mov
xor
mov
aad
stos
mov
bound
sbb
test
jbe
pop
jle
stos
leave
mov
lods
and
cmps
lods
js
std
into
mov
movs
cli
lea
lods
int
push
shr
push
pop
add
mov
repnz
popf
mov
push
and
stos
lock
xchg
enter
scas
cli
(bad)
enter
jp
mov
xchg
sub
adc
leave
push
cmp
xchg
sub
repnz
jb
cmps
into
mov
cmp
dec
mov
test
adc
ret
cwde
(bad)
mov
xor
test
mov
stos
inc
xchg
add
cmps
cli
popf
xchg
lea
jno
mov
ins
dec
jnp
adc
bound
inc
jnp
mov
jmp
enter
cmp
rcr
pop
fwait
dec
mov
test
xchg
xor
sbb
pop
scas
cli
pmullw
cld
sub
jg
mov
mov
push
adc
ss
push
pop
or
pop
mov
cld
movs
in
push
cld
dec
jg
in
ins
call
stos
fdivr
jmp
cwde
fcmovnbe
mov
or
add
mov
jb
add
fstp
scas
inc
pusha
(bad)
cmp
pop
ja
and
pop
jl
pop
mov
pop
mov
and
stos
jmp
adc
sub
dec
loop
aad
es
(bad)
cmp
ret
pop
sub
dec
cmp
bound
jbe
shl
xchg
addr16
outs
xor
jo
scas
jae
xor
cmp
ja
inc
cmp
mov
in
xchg
shl
repnz
mov
stos
inc
fild
pusha
pop
jmp
mov
cmp
pop
imul
(bad)
in
dec
sub
stos
lea
mov
pop
mul
dec
sbb
cli
out
sbb
inc
gs
jl
dec
xlat
mov
mov
test
pusha
repz
pop
gs
pop
push
test
cmp
adc
or
mov
in
retf
mov
fadd
cmp
mov
call
into
mov
aas
jmp
push
ror
inc
nop
jbe
lock
mov
cmp
test
aam
push
mov
sub
arpl
scas
push
cmps
adc
adc
js
pop
scas
fcomp
lods
sub
cmp
ret
lea
scas
std
xchg
stos
scas
sub
sbb
mov
adc
pusha
lods
gs
xchg
test
popf
not
pop
enter
jns
jecxz
arpl
inc
inc
lock
daa
adc
push
addr16
and
call
or
ja
popf
ins
sbb
add
jns
or
loop
dec
xchg
jae
xchg
into
cmp
push
(bad)
sbb
cmp
lock
pusha
scas
jg
jo
ret
leave
xor
sbb
imul
leave
scas
cmp
cmp
mov
mov
push
test
iret
jle
push
popf
sar
(bad)
cmp
cmp
mov
push
pop
movs
and
mov
jecxz
mov
stos
mul
(bad)
add
jl
bswap
add
sbb
ins
jle
mov
imul
outs
addr16
sar
inc
jno
mov
xor
ja
ret
adc
in
sets
sbb
push
enter
xchg
daa
movs
push
(bad)
ins
sar
int3
lea
scas
xor
pop
mov
inc
xchg
cmps
add
data16
fisttp
xchg
push
xchg
movs
stc
mov
and
dec
sbb
gs
push
(bad)
mov
arpl
push
dec
enter
mov
mov
push
mov
or
scas
inc
fnsave
clc
xor
imul
jmp
jnp
fcmovnbe
stos
pop
cmps
jmp
cs
jle
jp
mov
jg
xor
call
stc
mov
cmp
inc
or
stos
movs
add
std
lahf
mov
in
mov
aad
stos
adc
jp
fidivr
xchg
mov
inc
adc
and
add
das
sahf
xchg
loop
sbb
rcr
lods
adc
(bad)
das
call
shr
mov
jl
pusha
mov
adc
movs
adc
mov
xor
add
ja
xor
pop
(bad)
test
cs
sbb
sub
sbb
lds
or
sub
jle
sub
push
or
inc
inc
inc
cmp
pop
imul
rol
xchg
mov
dec
cmps
leave
out
xchg
pop
pushf
or
pop
adc
xchg
and
loop
push
xchg
jge
fadd
push
rol
jo
mov
enter
cli
sub
cmps
in
or
(bad)
pop
daa
scas
jp
stos
dec
rcr
enter
rol
cwde
data16
aam
outs
mov
dec
fistp
dec
jno
rol
loop
(bad)
cli
pop
pop
jecxz
pop
mov
daa
rol
aam
jmp
xchg
mov
sub
jnp
sbb
outs
popa
repz
mov
sub
scas
mov
addr16
scas
ret
pop
fisub
not
dec
and
add
push
xchg
in
cwde
pop
xor
ret
inc
pop
jae
(bad)
lods
sub
out
jmp
sbb
mov
cmp
dec
nop
and
or
mov
mov
test
loopne
xor
dec
sub
mov
mov
(bad)
(bad)
xchg
call
ds
pop
retf
mov
pop
xchg
call
fistp
mov
xor
jne
xor
add
sbb
sbb
push
sbb
out
clc
adc
loop
popa
adc
movs
pop
adc
xor
(bad)
xor
movs
loop
xchg
outs
mov
fisub
inc
inc
ins
mov
dec
mov
push
pop
mov
and
pop
leave
sub
shl
repz
push
xchg
mov
jp
out
fmul
test
sti
adc
xchg
clc
stc
adc
mov
mov
jb
adc
jmp
(bad)
sbb
mov
xchg
mov
mov
or
adc
xor
cmp
test
cmp
jg
cld
test
fwait
cmp
jo
sub
iret
inc
outs
(bad)
push
cs
aas
fdivr
cwde
xchg
aam
inc
mov
jmp
fsubp
jae
out
arpl
cmp
(bad)
sub
jae
out
mov
mov
pop
or
(bad)
xchg
ja
nop
mov
in
int3
xchg
add
cmps
fucomp
sahf
inc
loop
mov
add
adc
push
xchg
lahf
mov
stc
or
jmp
sbb
cmp
cmp
mov
fcomip
inc
push
sub
loop
mov
xor
push
ds
push
mov
jnp
and
dec
(bad)
in
and
movs
das
aaa
jge
dec
jle
xchg
(bad)
sub
pop
push
cmps
hlt
inc
cs
xlat
dec
stc
enter
aam
mov
sub
adc
adc
pop
jno
mov
sbb
mov
sub
movs
or
push
mov
loopne
jnp
fsubr
ficom
cli
(bad)
sar
cli
addr16
push
mov
ins
(bad)
fisubr
cmp
push
mov
clc
scas
aas
in
push
or
in
jbe
bound
jae
stos
jnp
ja
cld
icebp
leave
stos
push
dec
aad
jecxz
div
mov
xlat
dec
cdq
scas
(bad)
test
retf
mov
add
sub
push
das
lahf
dec
int3
cwde
jmp
fpatan
inc
pop
sbb
cmp
inc
dec
mov
es
and
add
imul
or
arpl
cmp
cmps
in
fadd
test
scas
and
repnz
and
lock
mov
scas
sub
mov
pop
adc
xchg
inc
repz
je
nop
mov
ja
pop
repz
fcom
dec
ds
sar
inc
rcr
retf
popa
mov
movs
pop
rcr
ins
neg
xor
iret
push
adc
retf
jb
lods
hlt
jns
adc
stos
lods
cmc
sahf
je
cld
(bad)
std
movs
pop
cli
ret
inc
xlat
inc
int
cmp
pop
mov
or
aad
and
or
bswap
aaa
lods
cdq
and
cmc
shr
dec
int3
add
mov
xlat
test
push
cmc
push
loop
out
lahf
outs
pop
icebp
xchg
inc
aad
test
ja
in
ss
inc
enter
push
push
or
and
jb
call
sbb
into
jle
mov
sub
in
pushf
jmp
fcomp
ds
ins
out
push
stc
dec
mov
xchg
sbb
mov
dec
mov
pushf
xor
adc
jl
neg
in
cdq
scas
sbb
cmp
cs
cli
mov
ret
xchg
jge
dec
push
or
or
sbb
xor
pop
cmp
xor
and
jmp
dec
adc
jle
push
xor
dec
pop
cdq
(bad)
xchg
push
mov
retf
mov
dec
push
test
adc
xchg
xchg
outs
cmps
mov
push
sub
push
jl
inc
jl
mov
and
push
ds
das
xchg
pop
repz
jge
stos
cmps
or
movs
and
push
xchg
test
push
push
ins
outs
sbb
mov
icebp
ja
imul
jmp
in
fistp
jle
hlt
or
movs
hlt
test
and
popa
call
inc
push
jmp
retf
rcl
ds
jl
addr16
xor
mov
add
mov
aas
imul
cwde
mov
pop
fldenv
call
or
ja
or
push
jmp
fwait
popa
cs
jae
sbb
mov
mov
popa
sbb
push
pop
mov
neg
scas
add
clc
out
mov
sub
outs
bound
stc
push
retf
nop
aas
mov
outs
adc
das
mov
cld
push
ins
cmp
lahf
lea
cs
out
fwait
inc
leave
fmul
rcl
jae
pop
pusha
mov
jno
cli
outs
rol
cmp
loop
ret
cli
dec
add
pop
jmp
into
test
jne
sbb
pop
leave
je
popa
fsub
arpl
iret
jns
dec
push
iret
clc
mov
stos
out
popf
stos
ja
mov
scas
xor
dec
icebp
mov
ror
xchg
jmp
mov
and
ds
jmp
jg
mov
add
mov
retf
jp
leave
das
shr
inc
sub
cdq
xchg
cs
dec
pop
(bad)
in
lea
leave
push
jbe
cmp
push
add
addr16
ret
jmp
mov
dec
bound
push
push
xor
jno
xchg
dec
fist
leave
into
aam
hlt
lods
pop
in
int
retf
mov
pop
adc
aaa
add
adc
aam
mov
push
shl
cmps
popa
inc
into
pop
mov
dec
ret
setae
jg
shl
or
sub
sbb
aaa
ror
push
(bad)
scas
(bad)
sbb
xchg
xchg
nop
xchg
cmp
(bad)
fabs
enter
cmp
cwde
inc
pop
fs
out
cmp
std
test
jge
pop
dec
in
mov
nop
mov
xchg
pop
aas
jns
(bad)
cmp
sbb
inc
or
loope
jo
fistp
ins
jecxz
call
mov
or
in
mov
mov
jns
pop
mov
mov
mov
xlat
mov
lahf
loopne
outs
cmp
xor
clc
inc
in
sbb
js
push
loopne
mov
out
aaa
loope
loope
test
xchg
cmps
scas
adc
(bad)
push
dec
push
or
mov
aas
ins
dec
das
push
mov
push
cwde
iret
add
cmp
inc
ret
in
jns
lock
daa
and
mov
out
pop
out
ds
rcr
mov
add
mov
pop
jg
repnz
cli
mov
jnp
xchg
and
dec
shl
sub
(bad)
gs
mov
inc
loop
add
sub
jno
xor
push
inc
shl
sub
inc
mov
mov
cdq
hlt
in
push
push
clc
dec
pop
mov
sub
fmul
mov
(bad)
cmps
ins
pop
jmp
ret
or
xor
xchg
not
hlt
mov
cmc
inc
popf
or
mov
cmp
and
pop
stc
mov
cmp
inc
in
fcmovu
push
popa
arpl
cmps
jbe
addr16
sbb
sahf
dec
cmp
stos
xor
mov
test
inc
inc
ds
xchg
sbb
add
ret
mov
jg
cmps
or
sbb
leave
fsubr
mov
lods
fimul
test
cld
sub
add
mov
dec
int3
pop
inc
bound
mov
push
sub
outs
sbb
mov
inc
add
adc
cld
ja
push
push
mov
dec
jg
dec
repnz
sbb
cmp
mov
fsub
add
lahf
push
mov
popa
push
iret
shr
dec
sub
mov
out
pop
sbb
addr16
in
push
jmp
xor
add
stc
out
jg
stc
out
jmp
add
aas
pop
inc
mov
and
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loop
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
je
pop
inc
in
shl
and
pop
add
mov
leave
imul
repz
cmp
xor
out
and
cdq
out
pushf
out
ds
xor
xor
dec
dec
iret
idiv
xor
pop
add
hlt
test
lock
fstp
cdq
jmp
in
dec
jae
inc
jge
fwait
inc
pop
rcr
call
or
inc
call
xlat
mov
mov
cvttps2pi
stos
dec
repnz
cld
mov
xor
fild
addr16
xor
lock
add
test
scas
je
jns
gs
js
mov
daa
xlat
xchg
inc
aam
pop
fwait
xchg
jbe
pop
(bad)
addr16
add
sub
add
jb
jl
es
pop
outs
xor
jno
test
jo
test
retf
pop
shr
test
inc
test
cmps
adc
lods
xor
xor
cdq
ffree
sar
mov
pop
add
mov
in
sti
dec
mov
push
xchg
jmp
js
mov
pop
add
div
jmp
aaa
cmps
pop
mov
xor
fld
sti
aad
push
and
jecxz
(bad)
lahf
adc
adc
dec
shr
hlt
mov
inc
mov
icebp
pusha
lods
loopne
add
sub
shl
add
mov
pop
nop
or
mov
cmp
loope
addr16
in
aam
pop
sub
push
inc
jbe
imul
mov
pop
mov
dec
mov
int3
test
push
sbb
lahf
pop
fisub
jo
fcmovnu
cmp
mov
pop
stos
push
fldenv
adc
out
mov
(bad)
jg
add
xor
sub
pop
push
loopne
movs
mov
fs
rol
lods
mov
push
sbb
retf
add
out
icebp
rcr
mov
gs
xchg
popa
dec
(bad)
adc
pop
sbb
cmp
scas
mov
jo
(bad)
pop
pop
mov
and
cmp
mov
push
lock
cld
aad
sti
mov
dec
scas
fdivr
mov
xchg
nop
push
adc
mov
daa
push
dec
xchg
ja
or
adc
adc
hlt
ficomp
fld
rol
sbb
int
sti
call
pop
scas
fimul
mov
(bad)
hlt
mov
test
jl
movs
stc
addr16
add
(bad)
pop
aas
jle
rol
sbb
sub
in
fnclex
lea
jne
mov
sub
bnd
ins
lahf
dec
shl
scas
adc
jo
outs
mov
sbb
aaa
xchg
icebp
aam
dec
mov
push
xchg
retf
sub
inc
(bad)
aam
(bad)
rcl
add
mov
and
push
sub
xor
adc
fst
out
push
dec
xlat
leave
sbb
jmp
add
fistp
push
lds
and
enter
mov
or
push
popa
inc
stos
adc
out
aaa
push
retf
jno
out
sub
xchg
pop
test
mov
cmp
lods
mov
mov
sub
gs
adc
pop
js
sbb
and
popa
adc
cmp
jg
outs
fcomp
out
dec
repz
jg
push
repz
sbb
outs
cmps
mov
jo
loope
mov
pop
jmp
out
ficomp
stc
dec
in
fnstsw
call
imul
movs
adc
loop
int3
ss
sub
xor
mov
add
cmp
stc
sbb
fistp
je
retf
and
popa
sbb
shl
fiadd
adc
add
rcl
pop
push
iret
pop
in
add
dec
call
(bad)
adc
bound
push
inc
dec
(bad)
dec
jb
das
jmp
jb
adc
jecxz
mov
xchg
or
sbb
pop
inc
imul
mov
ret
and
ins
jmp
xchg
push
leave
retf
mov
inc
and
xlat
pushf
mov
mov
dec
mov
push
and
dec
clc
mov
daa
sub
mov
out
inc
mov
xchg
std
sub
sub
or
mov
inc
inc
(bad)
sti
stos
inc
pop
sbb
or
clc
adc
fwait
and
sub
pop
jp
push
and
pusha
adc
retf
lods
xchg
test
int
ret
fwait
cdq
scas
rol
cdq
sti
ret
lds
sbb
mov
add
(bad)
pop
inc
js
pop
mov
and
(bad)
pushf
mov
fmul
repnz
dec
mov
clc
iret
inc
lahf
mov
shr
or
and
xchg
fcomp
fwait
mov
in
mov
fld
jmp
add
mov
fucom
mov
adc
xor
mov
mov
pop
in
retf
inc
popf
iret
add
xor
movs
mov
das
xor
icebp
(bad)
pop
popa
bound
or
jmp
dec
pop
jle
jnp
jmp
adc
cld
cmps
ja
retf
stos
dec
fild
mov
xchg
ds
or
pop
mov
pop
or
sahf
push
or
mov
test
test
jns
cmp
inc
and
daa
out
jge
cmc
fld
mov
pop
mov
adc
jmp
fistp
clc
cli
cmp
sahf
in
push
mov
daa
mov
dec
int3
xchg
ret
hlt
nop
mov
sub
scas
fnclex
lods
ficom
mov
(bad)
mov
sbb
push
pop
or
mov
xchg
into
jno
pop
cli
jge
jno
add
out
leave
psllq
and
ins
or
push
lahf
(bad)
cmp
mov
test
add
jns
jp
push
xchg
xchg
xor
mov
iret
adc
js
jnp
std
clc
out
repz
fwait
nop
mov
aam
cmp
icebp
pusha
mov
adc
cs
cwde
inc
xor
add
xor
jecxz
(bad)
icebp
cmp
movs
push
repnz
push
icebp
leave
fwait
mov
ret
aam
cmp
cs
mov
cwde
je
mov
jmp
mov
push
test
daa
loopne
jmp
es
mov
cdq
cs
movs
jae
push
or
add
jle
cmp
cmp
bnd
fadd
popf
into
outs
xlat
xor
or
push
popa
push
and
mov
arpl
ja
ds
mov
pop
cmp
mov
push
in
aaa
sti
dec
(bad)
pop
iret
lahf
hlt
adc
das
retf
or
adc
cmp
scas
and
adc
popa
(bad)
mov
stos
xchg
push
add
movs
pop
xlat
push
imul
jae
std
ficom
loope
je
mov
addr16
in
ins
inc
push
gs
cdq
xor
iret
mov
jmp
pop
pop
jne
pop
call
gs
xchg
lods
or
push
sbb
xchg
cs
adc
pop
jmp
ds
push
retf
push
pop
push
sub
push
lods
aaa
jbe
int
jle
js
cdq
sub
jl
out
cdq
mov
aad
cld
adc
ret
pop
jns
jno
test
mov
mov
push
jae
inc
imul
cmps
es
sub
xor
dec
stc
je
lea
mov
xchg
repnz
add
std
sbb
retf
push
repnz
aaa
aad
sub
daa
in
test
sub
or
push
sbb
arpl
out
jecxz
test
xor
jbe
mov
ins
pop
pop
mov
hlt
and
push
xor
jecxz
ret
inc
push
cmp
popa
andps
loopne
sbb
mov
xor
sub
cmp
and
lods
cs
ror
or
bound
pop
outs
daa
retf
les
mov
call
mov
jmp
ds
clc
cmps
out
(bad)
mov
add
add
adc
xchg
retf
sub
push
jo
retf
adc
push
fisttp
int3
xchg
out
out
jmp
std
inc
mov
xchg
jle
adc
shl
call
sub
lock
pop
and
(bad)
xchg
mov
into
or
add
aas
inc
cmps
sahf
imul
push
aad
xchg
dec
fmul
adc
sub
data16
sbb
frstor
dec
mov
push
and
mov
retf
and
jne
(bad)
hlt
dec
pop
call
xor
push
jp
add
jg
xchg
or
pushf
xor
mov
cmps
hlt
sub
mov
imul
in
arpl
daa
xor
fild
das
movs
stos
psubq
fidivr
into
aas
mov
(bad)
mov
adc
ret
sub
out
gs
(bad)
mov
and
cmp
sahf
addr16
jmp
mov
and
mov
rcr
in
add
adc
std
out
dec
out
jp
scas
xor
cld
cmp
mov
repnz
or
jp
dec
pop
adc
in
js
mov
xor
jmp
pop
mov
pop
mov
inc
scas
dec
ror
pop
mov
fnstcw
rcr
pop
rcr
dec
jb
repz
iret
loope
lea
mov
sbb
inc
and
xor
push
push
mul
cmp
mov
jecxz
scas
sar
loope
clc
mov
and
fidiv
inc
cmps
jg
jp
xor
sbb
les
call
cmp
or
mov
rcl
jno
xchg
pop
or
sbb
cmp
push
imul
fstp
pop
adc
lahf
retf
jmp
inc
jne
fs
in
dec
jmp
mov
arpl
cdq
mov
in
(bad)
mov
xor
mov
(bad)
loop
mov
adc
mov
jg
std
sub
jno
in
into
loope
stos
hlt
jo
cmps
lods
jns
jp
nop
pop
push
in
jl
or
jnp
and
sbb
imul
ja
xor
out
iret
std
leave
mov
enter
dec
and
mov
ja
pusha
inc
loopne
icebp
cmps
xchg
sbb
sbb
mov
add
(bad)
nop
cmp
loope
repnz
mov
mov
lock
idiv
inc
iret
cli
ds
jmp
cmc
addr16
outs
xchg
scas
mov
mov
hlt
cmps
ja
mov
add
xor
dec
repnz
scas
xor
mov
je
pop
dec
pop
call
test
jns
int
lock
mov
jmp
jae
rcr
ror
jge
push
sbb
mov
adc
mov
inc
jbe
xor
call
jmp
clc
mov
je
mov
ds
xchg
push
sahf
pop
adc
ins
sub
mov
adc
ss
xor
mov
jb
push
adc
lock
clc
jae
stos
pop
cwde
dec
daa
sub
adc
xchg
cdq
test
arpl
xlat
sub
push
pop
in
call
lea
dec
ja
leave
shl
mov
in
mov
mov
push
mov
ins
ins
aam
xchg
lea
inc
cld
aaa
pop
int3
cmp
imul
out
cs
ret
mov
js
push
jg
mov
jmp
les
push
in
pop
mov
cmp
jecxz
pop
inc
sub
outs
push
repnz
xor
lods
call
jae
cmp
mov
inc
cmp
outs
push
js
jae
retf
xchg
jno
aaa
test
clc
cmps
cdq
test
mov
xor
sbb
mov
jnp
cli
push
lods
xchg
jge
int3
aad
cmps
cmp
mov
enter
jno
jg
sub
mov
dec
mov
retf
jne
cmp
fisub
jmp
push
outs
or
mov
xlat
sbb
arpl
jmp
out
sbb
sub
and
lds
fwait
inc
dec
cmps
iret
xchg
mov
add
jp
jmp
add
add
outs
pop
in
je
mov
lods
pcmpgtd
sbb
outs
arpl
inc
cmps
and
dec
adc
lods
or
mov
jnp
ja
mov
imul
shr
add
mov
out
pop
and
mov
std
xchg
mov
mul
pop
lea
lods
fnstenv
add
mov
inc
rcl
xor
repz
jecxz
push
dec
push
ret
es
test
and
clc
xlat
test
mov
scas
pop
sub
cmc
repnz
test
xchg
daa
cwde
jne
div
sahf
adc
imul
retf
cwde
lahf
xor
mov
aaa
fimul
push
aam
popf
jo
and
iret
or
outs
or
push
and
mov
ja
or
dec
sbb
adc
nop
mov
jnp
push
fwait
cdq
jmp
(bad)
cli
les
(bad)
cli
mov
xchg
loopne
push
scas
pop
aad
std
leave
add
adc
pop
cmp
jmp
(bad)
cmp
shr
movs
and
and
(bad)
call
mov
mov
movs
sti
mov
ins
cmp
mov
inc
dec
test
ss
push
xor
cmc
test
push
sti
test
clc
mov
lds
je
sub
push
imul
imul
repnz
mov
inc
jne
les
mov
bnd
sub
shl
repz
cmp
loope
inc
cmp
repz
aas
(bad)
cld
jg
add
add
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loope
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jae
pop
inc
in
shl
aam
add
loopne
int
test
xchg
jnp
jne
mov
(bad)
mov
repz
cmp
imul
xchg
jo
neg
and
jnp
pushf
adc
xchg
hlt
cmp
inc
jno
mov
clc
push
repnz
ret
mov
daa
fild
or
xchg
lock
adc
and
mov
and
std
stos
enter
or
int3
jmp
jp
or
bt
fstp
mov
xchg
hlt
inc
cmp
inc
xchg
mov
imul
jno
mov
mov
mov
sti
jb
sbb
in
(bad)
outs
mov
shl
ins
cwde
xchg
mov
adc
out
bound
xchg
cmp
sbb
icebp
mov
push
arpl
sub
lods
add
push
jmp
call
or
fstp
lahf
retf
pushf
into
push
loope
out
xor
repnz
jnp
sahf
ror
push
sbb
sti
or
add
es
daa
xor
ds
sub
je
lahf
or
mov
add
iret
add
xor
jmp
std
jbe
aas
imul
mov
xor
mov
cwde
fidivr
xor
mov
push
sub
adc
or
mov
mov
xchg
loopne
out
cli
aas
lds
sahf
xor
inc
add
in
retf
faddp
fs
test
aad
int
std
mov
jb
fisttp
pop
xor
xchg
mov
xcrypt-ctr
cmps
pop
ret
clc
cdq
add
scas
push
ja
inc
pop
jle
cmps
cmps
mov
daa
and
mov
ret
and
in
or
dec
pop
inc
ins
mov
mov
adc
retf
ret
loope
xlat
fwait
dec
add
push
in
imul
jle
mov
pushf
cmp
inc
ficom
xchg
pushf
mov
adc
icebp
pop
mov
fldcw
aas
das
stos
cwde
call
(bad)
(bad)
jp
fs
xchg
dec
leave
mov
sbb
mov
mov
adc
iret
in
jmp
(bad)
cld
es
push
xor
pop
int3
addr16
pop
jbe
ins
xor
adc
push
jb
mov
shl
mov
jecxz
sar
xchg
jae
imul
nop
rcl
in
jge
lahf
mov
out
mov
dec
mov
aad
mov
pop
test
mov
xchg
out
mov
popa
adc
inc
fmul
push
clc
jl
jo
add
add
adc
mov
jb
inc
and
jae
mov
jno
lods
xchg
xor
or
mov
cmp
stos
sti
add
icebp
mov
mov
cld
push
push
arpl
sub
adc
xchg
pop
push
jb
(bad)
call
in
sub
mov
mov
jae
fisttp
test
popf
xor
sahf
sub
aad
enter
hlt
sti
mov
or
xchg
mov
xchg
adc
aas
push
xlat
in
push
das
inc
push
sbb
mov
jg
or
mov
lea
inc
les
loope
sahf
inc
int3
jl
test
push
aas
rcl
(bad)
and
outs
mov
dec
pop
mov
adc
sbb
xor
lods
(bad)
imul
in
pop
neg
mov
stos
inc
mov
fs
or
cmps
test
or
mov
fbstp
or
or
pop
int3
sub
loop
and
and
ds
retf
push
fistp
out
xchg
mov
sbb
or
adc
call
push
scas
cld
(bad)
in
jno
push
and
test
inc
mov
mov
adc
push
retf
das
mov
push
push
(bad)
cld
les
and
ins
mov
sahf
fwait
push
out
stos
outs
jp
popf
ins
pop
data16
loope
sahf
xor
pusha
outs
pop
add
outs
inc
sub
ss
xchg
test
xchg
loope
popf
vpunpckhwd
cmp
inc
jp
jp
dec
cmp
pop
aad
mov
dec
std
mov
mov
loop
mov
bound
mov
(bad)
dec
xchg
pop
aaa
shr
pop
jg
(bad)
push
ja
sti
jl
fs
imul
push
test
adc
push
jnp
fs
mov
or
push
adc
push
dec
sub
adc
add
mov
mov
cli
xchg
aam
and
push
pop
xchg
jnp
pop
adc
jecxz
xchg
data16
in
inc
lock
out
mov
jno
loope
xchg
fidiv
jb
stc
aad
int
mov
pop
or
jl
movs
movs
retf
dec
out
mov
in
xchg
inc
mov
cdq
push
cmps
in
fs
mov
xor
out
sbb
fstp
aas
push
mov
or
push
lds
add
sub
mov
test
(bad)
imul
dec
dec
out
lea
icebp
fsubrp
xor
pop
cld
cmps
ins
jmp
aam
push
mov
cmp
arpl
mov
mov
mov
sbb
iret
pop
jns
aas
mov
scas
adc
cs
inc
out
adc
dec
xchg
lds
xchg
loope
aas
inc
fistp
jnp
lahf
imul
mov
mov
jg
mov
sahf
cdq
out
jl
idiv
adc
cmp
js
inc
test
out
pusha
dec
push
pop
sbb
xor
xor
push
sub
(bad)
scas
dec
jae
scas
pop
cmp
cs
sti
add
adc
inc
jmp
mov
lods
push
xchg
xchg
adc
xchg
clc
test
mov
and
jb
and
ret
pop
int
cmp
and
jle
in
xor
inc
stos
in
mov
inc
pop
sub
push
sub
bound
or
popa
jno
mov
daa
jle
cli
mov
shr
xchg
cmc
mov
sbb
fisttp
jl
outs
sar
int3
dec
jbe
pushf
repz
pop
or
mov
int3
sbb
cmp
add
cs
fsub
xchg
sub
lock
stos
les
icebp
inc
push
xchg
inc
sti
adc
adc
(bad)
out
mov
data16
jl
pop
xchg
popf
loop
push
fisttp
adc
mov
jnp
cli
cmp
mov
cmp
mov
xor
xchg
dec
inc
adc
jmp
and
and
adc
pop
std
and
ret
sbb
sbb
cmp
movs
ins
xor
mov
mul
xchg
mov
lds
ja
mov
inc
push
add
iret
push
mov
loope
or
dec
push
in
das
xchg
sub
das
and
xor
sub
pop
and
pop
or
mov
mov
inc
jnp
fldcw
imul
fcom
adc
int
cmp
stc
adc
and
sub
pusha
inc
mov
mov
ins
(bad)
dec
mov
cmp
pop
retf
xchg
adc
pop
pusha
mov
add
dec
and
in
pop
out
aaa
xlat
add
cmp
mov
add
call
mov
push
mov
leave
loopne
arpl
leave
sbb
dec
mov
(bad)
jp
jno
xchg
cs
sub
test
cmc
xor
pop
loop
lahf
inc
cmp
sbb
mov
or
stc
imul
ficom
inc
jmp
stos
addr16
or
inc
pop
jne
leave
jno
fist
xor
push
mov
cmps
cmp
xchg
hlt
retf
cwde
adc
daa
inc
jg
sbb
div
pop
mov
(bad)
jae
repz
adc
inc
mov
xchg
test
jns
jne
jecxz
out
stos
out
imul
bound
pushf
popf
ins
into
mov
dec
test
in
cmp
adc
mov
xchg
cmp
dec
cmp
sbb
cmp
jecxz
test
pop
push
sbb
xor
int
cld
inc
jl
xor
sbb
dec
ror
popf
dec
lods
xlat
cmp
push
stc
sub
mov
cdq
xchg
and
inc
(bad)
jae
cmp
dec
aam
ror
push
ror
lock
je
loopne
mov
imul
cmp
sbb
mov
sub
imul
xor
sub
xor
and
cdq
pop
stc
push
jg
push
jmp
(bad)
leave
mov
(bad)
stos
or
(bad)
xor
lods
mov
dec
mov
mov
adc
pop
mov
cmp
push
out
out
inc
mov
cmp
adc
repz
lds
lods
inc
sub
jo
js
je
sahf
push
ins
shl
idiv
fwait
cmp
dec
inc
iret
fidiv
jns
jmp
cmp
and
ds
adc
test
daa
popa
ja
mov
test
sti
iret
jno
push
dec
sti
neg
pavgb
jge
jb
mov
fidiv
(bad)
jmp
add
aad
push
dec
and
sub
mov
pushf
dec
popf
mov
sbb
fstp
mov
push
fwait
adc
mov
push
iret
fistp
xchg
nop
pop
test
ins
out
xchg
inc
xchg
cs
sahf
jae
add
loopne
inc
pop
push
jge
into
and
sbb
jne
sub
stos
jge
movs
fidiv
pop
xchg
icebp
pop
movs
retf
hlt
ret
sbb
cs
shl
sub
fcmovnbe
inc
jg
icebp
or
lahf
mov
(bad)
fmul
(bad)
test
ficom
adc
test
xchg
ss
sahf
adc
call
mov
aaa
xor
sub
fwait
or
xchg
push
scas
test
movs
sub
jo
(bad)
call
xchg
test
shr
pusha
cmp
test
or
cmc
movs
xchg
or
or
out
fdivr
int3
sub
xor
push
add
mov
fild
into
imul
xor
sub
out
xor
xor
mov
cdq
das
push
call
(bad)
in
dec
hlt
or
(bad)
mov
jb
movs
lods
in
mov
out
push
mov
(bad)
mov
push
pop
push
pop
inc
push
mov
sub
mov
or
outs
push
mov
adc
daa
jle
test
pop
mov
fisubr
mov
cmp
mov
dec
retf
cvtpi2ps
pushf
lahf
mov
cld
jge
out
les
addr16
sbb
out
mov
adc
adc
inc
sbb
ror
adc
mov
or
pop
inc
test
stos
push
repnz
inc
cld
test
icebp
sub
sub
dec
rcr
iret
adc
dec
pop
pop
push
jb
jne
in
pop
enter
pusha
jp
(bad)
std
fild
dec
adc
pop
push
cmp
or
and
cmps
aaa
inc
icebp
add
sbb
(bad)
(bad)
jo
mov
cmp
inc
inc
mov
add
fwait
mov
fsubrp
test
lods
jp
in
push
sub
aam
in
je
int3
add
inc
aas
sub
movs
call
xchg
xlat
sbb
jl
js
aas
cdq
aad
push
xor
mov
inc
stos
jns
mov
dec
xor
cmp
inc
loope
daa
shl
cs
add
in
into
dec
addr16
sbb
ins
mov
es
push
or
xchg
call
enter
es
outs
dec
popf
cs
div
jo
xchg
repz
int3
cmp
out
imul
ja
cmp
fs
xor
pop
sub
cli
ins
lods
imul
and
test
fnstcw
scas
into
sahf
sbb
sub
nop
ret
mov
jbe
mov
popa
jns
mov
cdq
(bad)
icebp
rcl
cmp
xchg
sahf
mov
shl
jmp
mov
scas
shl
and
je
outs
sti
iret
add
add
scas
jno
out
mov
neg
pop
in
shl
xor
cli
xor
in
inc
xchg
fidivr
jecxz
cwde
adc
push
jbe
xor
rcl
scas
fistp
in
jge
fistp
jp
call
aas
rcl
and
ds
mov
aam
inc
enter
ja
jno
add
shr
fwait
ss
mov
add
test
loopne
out
xchg
mov
xlat
dec
add
cmovp
je
div
lahf
push
scas
out
xchg
dec
pop
adc
fadd
iret
mov
mov
loope
jp
mov
test
mov
dec
jge
jle
das
test
sti
dec
sub
daa
mov
lods
adc
cld
inc
inc
(bad)
mov
push
in
aam
mov
jmp
ret
adc
fdivr
gs
hlt
jns
inc
test
and
inc
xor
push
or
xor
pop
ds
xchg
(bad)
pop
fild
lods
ins
mov
jecxz
push
sub
scas
out
loopne
aam
gs
(bad)
dec
test
aad
or
(bad)
jo
and
and
dec
sbb
lahf
push
pop
clc
inc
aaa
test
adc
js
inc
imul
mov
sbb
retf
dec
or
mov
shr
aaa
fisttp
xchg
pop
into
and
sub
aam
xchg
pop
imul
mov
int3
cmp
fnstenv
daa
out
fld
xor
pop
popa
cmp
inc
in
jge
sub
mov
cmp
mov
outs
mov
daa
or
pushf
and
mov
mov
mov
push
mov
xchg
xor
js
lock
out
push
pop
jnp
neg
(bad)
out
mov
jnp
rcl
movs
int
or
int3
add
ret
fstp
ins
scas
js
gs
push
rol
cmp
push
sbb
out
jg
stc
out
jg
lahf
add
inc
cmp
jb
mov
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loope
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jae
pop
inc
in
aad
inc
xchg
or
out
push
nop
xor
shr
jl
sbb
mov
test
aaa
or
mov
xchg
xchg
xchg
nop
out
adc
idiv
mov
shr
pop
add
repnz
sub
not
cmp
test
cld
fbld
hlt
jns
lods
(bad)
jecxz
jbe
pop
pop
or
or
and
mov
repnz
in
in
cmc
xor
xchg
lahf
jmp
jle
xor
sbb
mov
movq
shl
xchg
dec
sbb
pushf
pop
and
ret
movs
shr
mov
jno
jno
and
pop
add
pop
push
or
xor
dec
arpl
sub
ds
xor
movs
hlt
jle
mov
mov
jo
(bad)
jle
popf
std
popa
lea
dec
lock
js
out
mov
jnp
test
ret
xor
mov
add
mov
ret
pop
mov
lock
ins
pop
and
sbb
(bad)
xor
mov
daa
dec
jge
cmp
es
mov
dec
push
inc
pop
add
stos
outs
stos
popa
shl
mov
mov
addr16
sub
pop
xchg
int
(bad)
mov
ja
inc
out
mov
jmp
je
mov
repz
fnstsw
dec
lahf
pop
test
and
lds
adc
push
sbb
add
in
scas
cmp
aaa
pop
sbb
loopne
test
cmp
pusha
jp
dec
cmp
fst
cdq
clc
fwait
xlat
gs
(bad)
mov
movs
frstor
push
in
push
fild
mov
adc
pop
retf
mov
int
outs
sar
lea
lods
lds
jl
stos
push
retf
out
in
jmp
fdivr
loop
add
jg
in
push
int3
cmp
gs
jo
xor
pusha
or
push
ins
call
enter
stc
mov
push
hlt
cli
pop
xor
cmp
inc
fsub
div
xor
cmp
stos
pushf
fcomp
push
dec
(bad)
xor
jmp
jae
imul
push
xor
jne
inc
sti
js
mov
je
retf
inc
xlat
pop
dec
loop
out
mov
repz
ss
adc
repz
nop
sub
push
into
sti
sub
test
loop
dec
pushf
adc
les
(bad)
addr16
sbb
es
or
repnz
push
test
cmp
pop
push
arpl
rol
pop
mov
dec
(bad)
fisub
push
aaa
mov
jnp
xor
xchg
jnp
inc
sti
mul
push
pushf
inc
mov
fcmovb
arpl
mov
popf
ss
test
pop
mov
cmc
mov
div
sbb
xlat
scas
and
call
xchg
fld
pop
mov
xlat
inc
add
fcomp
lds
popf
sub
mov
cmps
ss
adc
les
sbb
mov
pushf
adc
arpl
xor
ror
js
xor
imul
xor
sub
cmp
js
stos
mov
mov
xor
pop
cmp
pop
cmps
pop
xor
mov
aas
jns
jl
mov
jg
add
(bad)
fsub
xchg
jb
mov
dec
(bad)
fisub
sub
neg
push
cmp
dec
xor
sbb
fidivr
popa
cli
lods
jg
movs
icebp
aad
and
push
adc
gs
pop
imul
adc
mov
dec
or
popa
xor
rcr
xchg
pop
sub
dec
out
stc
jp
repnz
stc
pop
xor
mov
pop
pop
daa
enter
mov
ins
mov
xlat
mov
inc
popf
out
mov
jmp
sahf
inc
lahf
dec
addr16
mov
les
comiss
fistp
ds
add
fmulp
pop
test
nop
dec
pop
mov
jnp
xchg
cmp
fwait
ror
outs
mov
ins
xchg
sbb
dec
sub
jb
or
mov
fiadd
out
xchg
sbb
sbb
fist
rol
jp
jmp
jl
jne
xchg
and
scas
dec
adc
mov
jl
cmp
jle
xchg
dec
jns
retf
outs
xchg
arpl
mov
jp
call
call
push
add
mov
pusha
mov
sub
adc
jecxz
and
test
push
push
aaa
loopne
cs
int
repnz
or
sub
hlt
lods
lds
ss
xor
or
clc
adc
repz
dec
and
add
cld
sti
sbb
dec
pop
add
push
outs
mov
push
(bad)
in
not
aaa
jne
loop
data16
lahf
fbstp
int3
jbe
pushf
jno
fdiv
lods
loope
cmc
rol
sub
jg
mov
call
inc
xor
xor
and
(bad)
in
jecxz
mov
es
adc
sub
fdiv
xor
das
and
cld
pop
xchg
ja
jge
retf
imul
pop
add
jb
fcom
in
gs
fldcw
pop
scas
pop
mov
add
dec
add
mov
jmp
sbb
(bad)
or
loope
inc
pop
mov
pop
loop
mov
xchg
lods
or
inc
sahf
cdq
mov
stos
cmps
ret
sbb
mov
in
xor
add
mov
jl
out
popa
das
neg
ret
(bad)
in
cdq
xor
pop
pop
or
adc
push
lods
les
mov
aam
int
les
imul
jae
dec
ins
jmp
add
inc
push
xor
mov
dec
pusha
inc
ficomp
test
xchg
jb
clc
dec
xor
mov
out
cmp
and
aam
scas
jmp
into
mov
bound
xchg
dec
es
xchg
stos
aam
out
(bad)
and
ret
shl
dec
push
adc
popa
shr
rcr
sbb
test
xor
jle
scas
pop
gs
mov
mov
popf
add
ins
xchg
pop
cwde
fsub
test
mov
push
inc
mov
mov
jge
in
rol
pop
pop
inc
cli
jno
inc
mov
push
dec
ret
xchg
(bad)
cmps
sbb
mov
push
dec
or
mov
inc
xor
or
add
mov
and
xor
push
loope
inc
xor
mov
cld
and
push
std
lea
ja
push
push
rcr
pop
mov
icebp
mov
addr16
in
and
inc
pusha
push
js
dec
iret
rol
pop
xor
in
cwde
sti
mov
clc
fwait
aad
fcmovu
cwde
stos
push
and
iret
sar
inc
test
cmp
imul
out
iret
cmp
and
fnclex
enter
cwde
rcr
mov
stos
xchg
out
out
lahf
adc
cmp
fdivr
ror
jo
fadd
int
cmc
xor
sub
addr16
in
add
aad
sbb
mov
xor
stc
xor
mov
test
dec
mov
dec
imul
sub
sub
jle
sub
es
mov
mov
loop
ficom
enter
ins
and
loopne
pushf
call
sub
pusha
sub
icebp
pop
pop
int
mov
sub
jecxz
movs
aad
ficom
les
fs
push
in
in
xchg
xor
test
cmp
rcr
dec
into
dec
lds
stos
xor
sub
push
push
pop
mov
and
xor
repnz
das
arpl
imul
ins
inc
and
pop
xchg
xor
cmp
and
adc
retf
and
push
scas
icebp
sub
push
mov
cmp
pop
in
mov
ja
dec
neg
sbb
dec
js
sub
fcmovb
aaa
iret
addr16
ja
or
or
push
call
sub
sbb
rcl
inc
sti
int
js
(bad)
repnz
fsubr
ins
je
shl
pop
jge
movs
cwde
call
inc
cmp
sahf
xlat
inc
xchg
push
outs
ins
push
pop
sub
(bad)
int3
and
fistp
enter
push
mov
retf
adc
rcr
jle
xchg
xchg
shl
rcr
inc
jl
dec
(bad)
mov
cmp
xchg
mov
ret
test
and
and
nop
fwait
mov
fwait
dec
sar
push
or
shr
(bad)
cdq
mov
add
or
ficom
mov
loopne
xchg
or
cdq
fmul
xlat
daa
mov
loop
add
fisttp
jl
inc
bnd
sbb
xor
sbb
fldenv
shl
cmp
scas
sar
jg
dec
push
jo
loop
loop
pusha
ss
mov
sub
fidivr
dec
scas
and
mov
pop
cmc
js
mov
outs
mov
mov
dec
imul
mov
xor
rcr
dec
lods
jno
int
mov
fwait
aad
push
fcmove
mov
push
sbb
in
and
dec
cs
cwde
xchg
addr16
daa
sub
inc
cmp
cmps
adc
arpl
xor
cmps
ja
les
cmp
out
or
jae
clc
iret
in
clc
dec
cmps
ficomp
pop
sub
imul
cmps
dec
add
shl
popa
lea
mov
aam
fstp
or
mov
sbb
sbb
leave
test
gs
mov
mov
outs
scas
add
xchg
and
push
pop
popa
and
push
inc
xor
ret
aam
fidiv
mov
or
sahf
mov
outs
cmp
icebp
xlat
ss
xor
mov
rol
std
pop
jmp
ret
xchg
sub
push
sub
int3
mov
fistp
inc
push
inc
add
sub
add
popf
add
jnp
sahf
mov
cmp
neg
mov
jle
enter
dec
sub
xchg
or
imul
aad
dec
lods
mov
jbe
sbb
in
add
(bad)
std
fnstcw
or
sbb
jge
mov
push
sbb
mov
movs
cli
mov
and
outs
clc
mov
lahf
call
aad
xor
lds
dec
(bad)
push
aaa
dec
test
in
jg
iret
std
(bad)
es
sbb
ins
loope
pop
cmps
je
mov
aaa
mov
adc
ret
retf
mov
idiv
and
je
cmp
jo
(bad)
and
sub
cmp
push
mov
adc
loope
jmp
es
arpl
cmp
in
jp
xchg
sbb
xor
imul
fmul
scas
or
inc
movs
mov
mov
cs
mov
pop
dec
je
shl
xchg
call
clc
push
scas
int3
push
xchg
push
mov
aas
xchg
pop
pop
(bad)
fwait
pop
int3
stos
mov
xchg
or
scas
and
inc
ja
neg
(bad)
cmps
jo
inc
jl
xchg
in
adc
popa
gs
in
mov
inc
mov
pop
ds
(bad)
push
inc
shl
pop
test
setge
xlat
sub
int3
sub
or
pop
lahf
(bad)
fdivr
push
iret
jle
dec
pop
dec
jge
nop
inc
out
push
bound
xor
mov
mov
retf
dec
mov
pop
pop
pop
sar
rcr
xor
movs
mov
cmps
ds
call
or
pop
out
and
std
mov
sbb
enter
loopne
xor
dec
aas
or
ret
out
pop
cmp
lds
scas
jbe
cmp
mov
push
ss
fimul
cmp
cmp
clc
jne
enter
pop
repz
pop
icebp
mov
mov
xchg
in
jno
shl
js
or
xchg
push
ja
ins
int
shr
addr16
xor
inc
(bad)
xlat
and
aas
pop
lds
mov
cld
ja
inc
repnz
jb
dec
mov
mov
lahf
mov
sti
mov
add
adc
jle
add
jp
xchg
pop
ror
inc
and
call
jns
mov
xchg
add
xor
mul
push
mov
cmps
clc
push
pop
add
lahf
mov
inc
and
(bad)
jge
sub
out
push
pop
shr
hlt
mov
push
scas
pusha
aaa
jnp
adc
(bad)
and
imul
or
test
ja
dec
movs
inc
in
js
and
call
fistp
xchg
mov
cmp
mov
sub
sbb
loope
mov
xor
add
mov
xchg
mov
movs
cmp
inc
inc
fild
pop
pop
inc
inc
setns
retf
iret
push
mov
xchg
fs
or
into
pop
scas
jne
test
daa
repz
pop
iret
inc
cmovl
fbld
ins
xchg
push
out
inc
vmwrite
mov
jle
or
push
into
pop
jbe
rol
sub
add
inc
push
jbe
enter
push
push
cdq
jno
outs
inc
out
xor
mov
(bad)
(bad)
fiadd
mov
push
add
cmp
test
ficom
push
cmp
mov
cmp
pop
pop
mov
jno
sar
imul
rol
daa
adc
pop
xchg
mov
frstor
adc
pop
loope
dec
jl
jecxz
or
sub
xchg
call
lods
dec
xchg
add
loope
(bad)
clc
push
ja
inc
cwde
jl
add
sbb
mov
pop
sbb
stos
mov
pop
repnz
sub
jg
stc
out
jg
stc
inc
inc
ins
js
ss
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jno
pop
inc
in
shl
aam
add
loopne
jno
nop
sub
nop
xchg
mov
jbe
addr16
in
jge
or
cdq
fstp
jl
or
cmp
jnp
out
mov
add
jecxz
push
or
sbb
mov
dec
cld
jmp
inc
popf
out
push
out
fild
sbb
stos
popf
in
repz
pop
dec
arpl
cmp
adc
(bad)
cmc
mov
es
pop
or
int
(bad)
loopne
mov
sub
mov
in
and
(bad)
fdivr
xlat
pop
mov
jne
xlat
ss
mov
or
ficom
fimul
sbb
pop
add
cmps
out
aas
dec
pop
ror
int
xchg
retf
clc
dec
jecxz
in
lods
mov
cmp
inc
or
mov
fstp
hlt
adc
add
es
fldenv
enter
std
add
push
mov
sbb
push
popf
ins
mov
dec
mov
stc
daa
ret
pop
sub
jb
sub
jo
inc
mov
iret
nop
mov
les
ss
xchg
add
scas
pop
les
rcr
rol
sahf
lods
mov
in
inc
rcl
mov
add
cmp
frstor
ins
jg
ins
fnstenv
mov
(bad)
loope
sar
jns
mov
sub
nop
pop
jecxz
(bad)
mov
sub
je
loop
dec
mov
and
fwait
mov
push
push
lods
lahf
pushf
sbb
xor
sti
fsubr
test
push
or
(bad)
push
movs
test
pop
xchg
xlat
dec
sbb
fwait
pop
sub
mov
daa
or
jmp
mov
outs
xchg
xchg
pop
pop
sbb
(bad)
aad
repnz
pop
jno
push
add
sub
cmc
add
add
cdq
scas
stc
in
xacquire
outs
mov
jmp
xor
pop
xor
loopne
jb
jl
mov
push
ins
stos
cmp
fwait
adc
push
mov
ss
inc
lahf
xor
jae
mov
lods
std
push
mov
add
push
jp
inc
cmps
push
xor
shr
(bad)
cmc
xor
xchg
push
outs
gs
push
mov
jnp
int3
mov
test
das
stos
mov
rcr
les
xor
cwde
loop
shl
(bad)
xchg
dec
hlt
jmp
not
fcomp
ins
aaa
and
mov
fwait
push
push
or
xlat
mov
push
push
lods
add
push
adc
mov
lods
lods
dec
nop
push
shl
pop
pop
sub
inc
sbb
scas
cmp
jmp
pop
pop
mov
clc
gs
call
icebp
in
cwde
jb
sbb
lods
dec
mov
dec
out
push
mov
mov
or
repnz
mov
sahf
cmp
pop
inc
into
cmp
mov
mov
add
ins
sub
xchg
or
or
dec
das
loop
cmp
sbb
dec
pop
push
lahf
popf
mov
pushf
repnz
push
jecxz
dec
sub
int3
daa
ret
les
push
js
pop
repnz
or
push
push
repz
mov
xor
mov
push
jne
add
push
fidiv
fisttp
pop
and
pop
push
xor
sbb
pushf
dec
aas
xchg
addr16
jb
aad
mov
popa
mov
rcr
stc
add
(bad)
outs
jmp
jnp
adc
in
mov
mov
dec
cmp
xchg
jnp
and
cmp
pop
pop
xchg
inc
stos
retf
jp
push
dec
movs
cmps
add
mov
pop
lahf
mov
lock
mov
outs
das
dec
add
inc
pop
daa
pusha
inc
aaa
or
neg
xchg
mov
ror
dec
fld
push
jl
xchg
out
pop
push
xchg
cdq
imul
cs
mov
fwait
inc
in
out
mov
adc
add
or
cdq
lahf
je
repnz
add
sub
das
pop
in
cmp
adc
and
push
rcr
out
xor
inc
imul
jmp
xchg
xlat
pop
dec
mov
ret
fisubr
movs
imul
dec
pop
mov
jg
js
add
adc
push
adc
adc
loope
cdq
test
lods
ja
cmc
xchg
lock
scas
lahf
hlt
xor
das
test
add
sub
and
shrd
lods
add
cmc
cmps
pop
call
nop
fdiv
aad
(bad)
pushf
out
shl
mov
outs
cmps
mov
shl
int
int
mov
cmps
xor
js
cmp
push
daa
int3
dec
or
scas
loope
xchg
ret
faddp
sahf
aad
adc
nop
push
sbb
add
sbb
retf
inc
sbb
ffree
mov
dec
mov
xchg
mov
mov
ret
test
push
stos
mov
xchg
add
add
fnstsw
add
es
in
and
(bad)
fwait
mov
cmp
out
jbe
xor
cli
scas
mov
movs
xor
push
repnz
mov
and
stc
lds
xchg
mov
fwait
push
(bad)
push
xor
pop
ja
mov
mov
aas
aaa
and
aaa
mov
fnstenvw
sbb
cmp
call
(bad)
aam
push
adc
fs
iret
lds
or
sahf
cmp
inc
ror
jns
nop
loop
ins
js
xor
pop
xor
xlat
cmp
mov
xor
pop
rol
jge
xor
sub
aam
ja
mov
fnstenv
repnz
js
sbb
xor
es
(bad)
cld
daa
mov
jmp
xchg
stos
cdq
mov
xchg
test
cdq
mov
push
enter
(bad)
pushf
push
shl
enter
dec
xchg
cli
jne
cmps
adc
loopne
dec
sbb
push
cmp
mov
in
cdq
stos
push
cwde
pop
int
cli
jg
rcr
or
(bad)
push
cmp
mov
inc
arpl
shr
jmp
pop
(bad)
shr
icebp
pop
pop
sbb
cwde
inc
repz
jb
mov
mov
sub
(bad)
arpl
dec
addr16
pop
aaa
shr
add
cdq
mov
gs
pusha
shr
sbb
pop
sub
(bad)
lahf
in
pop
and
jmp
movs
outs
mov
and
pushf
jnp
ret
adc
xchg
pop
stc
outs
in
ds
mov
retf
add
leave
cmp
jb
(bad)
sub
enter
dec
iret
push
(bad)
pop
mov
shl
js
cli
lods
stos
jae
pop
xor
and
data16
and
sti
addr16
scas
sub
sti
jp
ins
dec
and
xchg
xchg
mov
jno
data16
inc
cwde
add
mov
sub
jmp
(bad)
cmp
(bad)
cmp
cmps
fadd
adc
and
inc
mov
pop
leave
loope
jecxz
movs
cli
shr
lods
js
sub
mov
jbe
mov
inc
rol
icebp
push
dec
pop
xor
lahf
lock
fisub
pop
and
mov
dec
cmp
inc
xor
cdq
add
lods
ja
adc
aaa
jmp
ins
in
loop
jge
xchg
and
sti
pop
or
inc
ficomp
clc
pop
out
(bad)
pop
pushf
test
sub
xchg
push
(bad)
jnp
jne
mov
jp
xchg
cmp
or
push
leave
dec
cmp
mov
add
sbb
mov
mov
scas
test
dec
fcom
inc
push
mov
es
shl
jl
jbe
mov
push
mov
fdivr
vhaddpd
xor
mov
mov
mov
xor
push
clc
mov
fcmovnbe
icebp
test
arpl
mov
inc
(bad)
mov
(bad)
sbb
leave
pop
out
out
mov
call
pop
cmp
sti
ret
pushf
and
pop
into
sub
stc
inc
xor
test
ss
mov
mov
loop
out
add
adc
push
push
sbb
push
shl
cli
fs
out
fcomp
outs
mov
pop
ja
int
je
jb
xchg
add
or
or
fisub
sub
and
jnp
add
sbb
pushw
fistp
cmc
ret
loope
or
mov
aad
jl
fsubp
or
ret
mov
mov
jl
mov
xchg
jae
or
test
movs
adc
add
pop
das
push
jg
sahf
enter
jno
addr16
and
call
xlat
cli
lods
sbb
movs
cmps
add
and
jbe
sbb
and
and
(bad)
ja
sub
push
cmp
jae
push
jns
std
or
jnp
xchg
ds
scas
movs
outs
jg
leave
mov
jns
in
in
ins
push
fs
jmp
pop
repz
or
mov
aad
adc
cmps
imul
jle
cli
inc
aas
xor
mov
(bad)
adc
in
(bad)
fld
imul
push
push
inc
jo
jnp
lock
xchg
data16
add
fisttp
adc
nop
dec
lods
push
fwait
xor
pop
mov
out
daa
mov
add
cmps
(bad)
les
jg
movs
std
jp
push
sbb
popa
pop
mov
or
cwde
leave
sbb
lods
xchg
xchg
(bad)
cmp
inc
dec
pop
(bad)
mov
inc
mov
sub
jle
jo
mov
stc
test
leave
push
not
pushf
rep
(bad)
lods
xchg
movs
push
xor
cmps
mov
jnp
add
retf
jl
jo
call
sub
or
cwde
mov
shr
test
xchg
push
mov
outs
add
(bad)
mov
out
int
test
jmp
push
stos
dec
int3
sbb
loopne
push
fucom
aas
push
call
ss
lahf
or
xor
mov
imul
xlat
(bad)
lahf
push
or
xchg
jnp
adc
je
aad
dec
ss
int3
popf
ss
lock
xchg
rcr
add
into
or
mov
mov
ss
and
push
int
inc
mov
(bad)
out
gs
dec
push
in
int
fsub
out
into
mov
dec
repz
(bad)
mov
repnz
sbb
in
sar
popa
pusha
and
clc
int3
pop
xchg
push
jbe
(bad)
je
std
xchg
xor
add
pusha
int3
xchg
cs
mov
imul
jbe
out
fwait
pop
push
retf
sub
mov
rcl
imul
jge
loopne
loop
add
cmps
jmp
sbb
neg
or
scas
mov
push
cli
fsubr
cmp
movs
add
pop
sbb
adc
bnd
ret
xchg
xlat
lods
nop
sbb
ja
das
xor
fnsave
test
into
gs
add
sub
lahf
sbb
scas
xchg
cwde
inc
ss
cmp
out
mov
mov
lods
push
mov
stc
daa
gs
and
cmp
mov
int
jl
or
fldenv
mov
std
scas
call
mov
mov
push
xchg
adc
mov
mov
(bad)
fisub
inc
cli
add
cmp
leave
fild
fwait
scas
cmp
je
retf
fiadd
mov
sbb
(bad)
push
aam
adc
aaa
gs
jmp
or
mov
scas
sbb
outs
popa
daa
xchg
mov
push
sbb
test
repz
iret
add
cmp
fsubr
out
ret
arpl
push
cmp
stos
mov
icebp
repz
dec
nop
xchg
jle
add
sub
jge
pop
int3
hlt
push
shl
clc
(bad)
xor
mov
imul
(bad)
ds
cmp
xchg
xor
and
jl
aaa
xabort
(bad)
sbb
ror
movs
cmp
jp
mov
mov
adc
inc
std
in
sbb
sahf
mov
pop
or
lock
sbb
cmps
jnp
push
daa
int3
or
adc
stos
sbb
mov
or
into
test
jno
mov
push
in
xlat
xor
mov
push
test
sbb
fs
jbe
out
or
ja
jmp
pop
mov
js
outs
aad
jl
pop
lods
mov
addr16
lods
push
retw
fcomp
pop
out
sti
ds
jno
pop
xor
es
popf
cmp
(bad)
pop
dec
push
xchg
cmps
mov
loop
jg
dec
adc
mov
cld
cmc
lahf
out
add
out
xor
push
movs
sbb
fcomp
pop
std
cmp
jg
fistp
cmps
int3
es
push
addr16
iret
xchg
(bad)
in
mov
out
lods
xor
clc
(bad)
adc
mov
cli
pop
int
dec
fsub
xchg
mov
adc
in
call
jmp
jg
pop
xlat
jecxz
add
in
pop
or
lods
jnp
mov
mov
leave
out
xchg
nop
push
adc
sub
ror
(bad)
imul
push
ret
imul
dec
in
pop
dec
add
inc
shl
adc
outs
pop
push
aam
ins
xchg
mov
into
bswap
fst
or
xlat
popa
fnstenv
jl
cmc
ror
into
adc
xchg
jg
pop
mov
aas
pop
test
xchg
dec
dec
dec
pop
das
xor
and
das
xchg
pop
xchg
(bad)
xchg
ud2
add
inc
xor
call
fistp
adc
fwait
lods
(bad)
dec
push
in
or
test
inc
mov
lock
aas
(bad)
cld
repz
aas
(bad)
cld
aas
add
test
std
dec
ss
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jno
pop
inc
in
shl
aam
add
loopne
dec
mov
nop
cdq
jno
ins
cli
sahf
cmp
mov
or
cs
mov
ficomp
xor
sahf
addr16
xor
jg
std
mov
lahf
jl
and
in
xor
cmp
ins
mov
push
inc
scas
lds
xor
mov
push
sub
mov
pop
jo
sbb
outs
int
push
inc
xchg
ret
cmp
pop
add
test
xchg
(bad)
movs
or
add
int3
xchg
jle
mov
adc
pop
pop
jecxz
loope
ja
mov
cmp
mov
sbb
aam
fs
mov
cwde
adc
stos
mov
cmc
inc
aad
xchg
push
nop
mov
outs
cmc
xchg
inc
adc
sub
call
xchg
cdq
pop
retf
jmp
and
push
mov
and
cdq
or
outs
fidiv
mov
pop
inc
add
sbb
(bad)
(bad)
popa
cmps
or
sub
pop
inc
mov
daa
or
pop
jnp
fwait
pop
scas
ret
retf
scas
ja
fisubr
ret
pop
imul
imul
dec
iret
jle
ds
pop
pusha
pop
cmp
jp
outs
jmp
lahf
mov
pusha
jnp
test
lods
imul
cmp
xor
inc
xchg
(bad)
faddp
cmc
mov
add
jmp
xchg
xor
test
xchg
pop
(bad)
xor
in
mov
cli
test
mov
mov
push
fmul
inc
sub
imul
dec
aaa
or
sub
cmps
std
in
fiadd
stos
push
shl
enter
imul
arpl
push
adc
and
push
das
lods
or
int
sbb
js
mov
dec
rcr
xor
jmp
std
jae
jecxz
mov
or
pop
popf
shl
fwait
icebp
out
ret
xchg
push
clc
js
stos
pop
bound
sbb
jp
dec
dec
xor
out
or
mov
ins
push
out
outs
jae
cld
icebp
jl
loope
loopne
pushf
mov
push
in
out
dec
pop
in
in
addr16
jle
fcomp
sbb
pop
scas
aaa
xchg
adc
loopne
ss
sti
jmp
(bad)
jle
lods
hlt
retf
dec
aad
lahf
xchg
bound
out
sub
sbb
push
mov
stos
sbb
loope
dec
mov
jo
pop
mov
ja
enter
lock
mov
jne
mov
adc
cmp
das
cmp
(bad)
fdiv
inc
lods
cmps
fwait
mov
int3
mov
pusha
mov
push
call
daa
js
sub
push
rcr
push
fisubr
sbb
ret
pop
xchg
ret
jno
daa
std
xor
push
pop
mov
gs
cmp
ins
fwait
pushf
xchg
inc
sbb
mov
and
dec
aaa
push
je
stos
jmp
imul
xchg
mov
cmp
movs
jmp
out
cmp
add
es
push
js
call
fist
aaa
icebp
gs
int
aas
dec
fisubr
push
xchg
pop
sbb
inc
aas
cli
or
repnz
mov
call
neg
hlt
pop
jb
jbe
ds
mov
xchg
xchg
pop
push
test
movs
inc
or
das
add
leave
nop
cmp
fdivr
mov
xchg
cli
cdq
and
jnp
mov
loop
out
and
inc
jmp
cmc
cmp
es
leave
inc
mov
sbb
cmc
xchg
hlt
dec
test
mov
pop
aad
jmp
dec
xchg
ret
pop
xor
pop
cs
jg
mov
hlt
lock
fstp
inc
lods
cmps
sbb
xor
loope
cwde
add
xor
daa
dec
mul
push
retf
cmc
jle
mov
mov
add
adc
inc
sbb
mov
push
mov
xchg
dec
iret
ins
lods
arpl
cmp
cvtpi2ps
je
rcr
cmp
test
cli
jmp
out
dec
cmp
es
push
fld
cmp
or
add
pop
stos
pusha
aaa
xor
cs
imul
mov
dec
mov
movs
cmp
sub
sahf
cmps
(bad)
pushf
imul
push
imul
mov
out
das
fld
jne
mov
ja
mov
cmc
data16
rcr
das
loopne
cmps
fwait
push
mov
push
enter
push
xchg
cs
hlt
in
pop
je
cmp
cmp
jge
cmp
(bad)
in
addr16
sti
mov
je
add
xchg
mov
push
inc
adc
jo
popf
neg
xchg
mov
and
or
jnp
jl
and
add
mov
mov
loopne
pop
lods
lods
add
cmc
mov
dec
sub
pop
sbb
or
xchg
shl
movs
andps
js
ins
fisubr
int
test
in
ror
pushf
scas
cmc
cdq
mov
sub
rcr
add
frstor
imul
xchg
mov
pop
hlt
retf
loop
inc
xchg
xlat
inc
cmp
aaa
mov
idiv
jmp
int
popa
rol
mov
adc
and
sub
push
sbb
(bad)
loope
(bad)
(bad)
xor
mov
out
popa
dec
adc
ds
retf
fistp
ret
jmp
mov
retf
popf
ret
aad
jns
cmp
stos
adc
xchg
lds
lea
adc
push
push
lahf
shr
movs
add
cmc
(bad)
xchg
fcmovb
loope
in
imul
in
or
inc
sbb
fld
pop
jno
adc
add
jmp
xchg
test
in
mov
xlat
push
(bad)
mov
ds
jecxz
push
mov
inc
sahf
aas
or
cwde
jp
push
cmps
imul
xchg
or
hlt
push
sbb
test
outs
out
aam
daa
pushf
ss
ret
jmp
mov
out
mov
mov
adc
fld
jl
(bad)
push
or
ds
icebp
xchg
dec
cmps
xchg
cld
pop
or
lods
loopne
push
add
xor
dec
add
out
add
in
inc
test
ja
aas
adc
lds
xor
fcmovnu
fsub
mov
lahf
fisttp
ss
mov
vpcmpgtw
push
fcomp
mov
out
mov
stc
das
aas
inc
call
daa
stos
pop
mov
retf
sbb
cmp
mov
aaa
ins
(bad)
mov
lds
sti
dec
(bad)
push
add
popf
or
inc
aas
dec
mov
into
sbb
sbb
mov
sub
inc
push
dec
inc
xor
lock
lods
test
fwait
mov
jmp
ins
add
push
out
pop
jmp
xchg
stc
mov
aaa
gs
jp
ins
sbb
fild
hlt
in
mov
mov
xchg
dec
es
stos
push
mov
push
mov
shr
clc
fs
pop
dec
cli
cdq
mov
jp
push
data16
fsub
lods
xor
inc
fdivr
rcl
out
jge
rcr
fs
sub
shl
mov
add
bound
cwde
dec
loop
xchg
pop
mov
data16
mov
push
pusha
add
aas
jp
movs
pop
out
fwait
pop
push
cmp
std
jno
fstp
aam
mov
sbb
and
sbb
mov
jge
es
cmp
repnz
aam
(bad)
in
sbb
push
test
dec
xor
mov
clc
or
mov
aas
iret
sti
int3
adc
jne
dec
retf
ja
jmp
jp
scas
pop
push
cmp
inc
jno
push
stos
jbe
inc
push
inc
xchg
dec
mov
cs
xchg
mov
lods
sub
fcom
pusha
ins
xor
jecxz
fisubr
inc
(bad)
push
arpl
cmp
mov
and
(bad)
in
pop
(bad)
mov
pop
sub
scas
enter
jge
pop
push
push
sub
sub
cmp
push
push
movs
xchg
xchg
add
loop
mov
or
loop
jns
repz
hlt
popa
cmp
mov
jnp
mov
lods
sub
inc
inc
arpl
pop
call
mov
ja
xchg
ins
fnstcw
scas
mov
daa
pushf
inc
(bad)
popf
and
ret
jb
retf
clc
loop
icebp
jmp
in
stos
(bad)
sbb
mov
movs
jecxz
xor
jmp
push
inc
daa
fisubr
stos
fiadd
ret
dec
sub
adc
cmp
stc
lods
(bad)
push
add
out
push
imul
jmp
jge
js
cs
fld
call
mov
in
test
adc
arpl
add
cmp
mov
mov
jbe
pop
les
les
imul
pop
sbb
(bad)
cmps
ror
scas
daa
or
pushf
fsub
pop
jmp
sar
inc
mov
push
push
push
xor
cs
pop
scas
movs
je
aam
fsub
and
faddp
cmp
lea
push
fldcw
xor
ror
lahf
lock
imul
xor
xor
rcr
jns
pop
and
rcr
in
jecxz
int3
add
pop
cwde
scas
es
mov
in
dec
add
add
cdq
loop
addr16
inc
jecxz
fmul
push
cmps
jecxz
clc
adc
pop
or
inc
fadd
mov
xor
out
mov
jo
(bad)
mov
xchg
mov
xor
loop
mov
push
popf
in
aad
idiv
ins
inc
(bad)
daa
adc
cs
and
xchg
inc
push
inc
div
mov
and
dec
sahf
jo
enter
(bad)
aas
jnp
jnp
rol
int3
(bad)
push
loopne
fs
xchg
pusha
movs
nop
push
mov
sub
add
adc
jns
test
push
dec
cwde
mov
pop
rcl
(bad)
movs
aad
fst
push
test
jle
out
div
push
cmps
cmp
sub
mov
and
(bad)
push
fbld
ins
fstp
stos
icebp
clc
mov
bound
bound
(bad)
arpl
and
inc
cmp
adc
sbb
fsub
jmp
iret
and
and
dec
ins
call
stos
add
sub
cld
stos
lahf
adc
hlt
out
lods
mov
cmp
mov
(bad)
jno
ja
push
pushf
imul
pop
jne
icebp
mov
mov
push
fmul
pop
clc
mov
sub
sbb
cmps
and
fdiv
xor
xor
dec
cs
xchg
stos
pop
pop
repnz
pop
sub
push
movs
xchg
mov
(bad)
daa
mov
pop
sub
mov
jmp
adc
enter
sub
push
push
out
dec
lods
fstp
adc
pop
out
int3
xchg
hlt
push
test
mov
aad
cs
ins
cdq
aam
mov
pop
xchg
aad
xchg
into
xchg
cmp
arpl
mov
adc
ds
cmps
outs
movs
mov
mov
retf
retf
jmp
js
sub
adc
daa
sub
push
xor
jmp
stos
popf
and
dec
xchg
pushf
aaa
xor
push
pop
das
xchg
out
sub
jle
loopne
fadd
mov
in
repz
fist
arpl
ja
sub
mov
jp
mov
cmp
out
or
clc
cmp
popa
cmps
pop
gs
mov
xor
out
rcl
or
cmps
cmps
mov
icebp
xchg
and
push
adc
mov
sbb
ins
(bad)
icebp
mov
add
xor
inc
inc
cmp
push
mov
clc
retf
test
or
xchg
pop
sub
add
and
pusha
add
jae
mov
sub
es
out
pop
jns
fldcw
repnz
ret
or
or
out
(bad)
pop
mov
push
xchg
jmp
icebp
addr16
fbstp
adc
outs
xchg
into
mov
out
adc
cs
cs
sub
leave
repnz
and
jno
out
test
mov
inc
inc
iret
or
add
ja
mov
adc
xchg
adc
mov
jae
push
push
jle
(bad)
sbb
mov
mov
adc
ja
mov
or
xchg
xchg
(bad)
ss
vpcmpeqb
push
xlat
pop
adc
adc
ror
popf
mov
xchg
aad
out
out
fmul
fdiv
pop
in
in
cmp
xor
push
retf
fisub
adc
jo
aaa
clc
xlat
jae
add
mov
aas
push
pop
jp
cs
ficom
jle
mov
mov
sub
data16
xor
cmp
and
cmp
mov
and
sub
jnp
pop
clc
jmp
jmp
xchg
mov
or
jmp
popf
xchg
call
js
jno
in
push
(bad)
dec
cmps
aam
aaa
xor
jns
inc
jg
fdiv
push
xor
mov
cld
inc
push
fbstp
bound
jge
test
das
stos
ror
push
xlat
daa
xchg
dec
xor
cs
stc
add
addr16
cmp
jg
or
inc
jns
mov
jmp
test
cmc
fldlg2
mov
loop
icebp
scas
cli
xor
inc
out
lods
and
retf
sub
push
push
in
fsub
(bad)
mov
adc
inc
jmp
mov
pop
mov
xchg
push
sbb
mov
addr16
mov
inc
retf
hlt
push
fld
cmp
sub
sar
loopne
jg
stc
out
jg
stc
jg
add
add
mov
jo
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fmul
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movd
inc
push
pop
inc
in
shl
aam
add
loopne
cdq
addr16
mov
mov
test
mov
into
fidiv
sbb
sub
cmp
cdq
fldcw
inc
repnz
sbb
(bad)
sldt
ja
add
adc
and
and
xor
sar
mov
or
mov
sbb
cmp
pop
retf
test
dec
push
pop
bswap
push
jb
stos
jp
pop
mov
sbb
add
jae
fnsave
adc
daa
or
ror
inc
imul
mov
sbb
dec
aas
dec
(bad)
(bad)
jne
repz
jge
dec
add
fstp
loopne
pop
inc
add
mov
and
(bad)
out
(bad)
fld
jmp
jmp
mov
mov
inc
into
xchg
(bad)
retf
jge
add
sahf
mov
jmp
cmp
push
call
jle
mov
adc
dec
out
clc
jmp
push
jle
test
sahf
cmp
repz
xor
push
loope
sbb
js
xchg
fidivr
adc
stos
in
rol
es
mov
jge
sub
sub
fprem
repnz
xchg
sbb
mov
dec
mov
pop
push
adc
inc
cdq
bound
dec
(bad)
cmc
(bad)
mov
push
push
sbb
movs
das
fstp
sub
xchg
nop
mov
mov
popa
stos
or
pop
pop
popa
cmp
and
nop
xchg
or
cwde
sub
push
test
jle
and
lods
fsubr
(bad)
ror
xor
js
xchg
mov
stos
and
jo
cmp
shl
(bad)
ja
mov
cdq
dec
cmp
xor
dec
loop
sbb
loop
add
lds
sbb
dec
stos
jbe
ins
push
out
mov
pop
inc
pop
xor
addr16
shr
mov
mov
mov
adc
jae
popf
push
hlt
mov
movs
in
jl
mov
cld
in
dec
loope
sbb
push
add
sbb
xchg
mov
inc
adc
in
test
push
pop
inc
ret
fs
dec
inc
mov
inc
es
inc
(bad)
jl
test
push
call
int
and
push
icebp
js
cmp
mov
pop
add
pop
cmc
arpl
mov
arpl
push
jg
jo
mov
(bad)
xchg
jbe
jae
sub
cld
js
jge
call
lea
jb
jl
jmp
push
pop
mov
mov
fidivr
push
pop
das
push
cmc
int
sbb
mov
sbb
inc
dec
stos
out
mov
aaa
xchg
jb
jae
xchg
inc
sub
les
repnz
jno
push
in
rol
pop
jecxz
fld
lods
enter
sub
xchg
sbb
div
mov
sub
sbb
mov
out
aaa
call
movs
aam
not
dec
rcl
out
test
retf
or
stc
(bad)
(bad)
jne
fsubr
push
rcr
dec
mov
or
jae
(bad)
retf
ins
pop
sbb
ss
retf
std
in
out
mov
pop
inc
je
inc
in
xor
test
mov
pop
shl
or
in
xor
sub
jle
mov
rdtsc
sbb
inc
stos
dec
inc
das
imul
and
test
cld
and
aam
sub
in
ja
sbb
test
cld
mov
sub
xchg
add
aas
adc
xchg
movs
lahf
movs
fs
ds
dec
leave
js
xchg
call
push
ins
cmp
sub
xchg
push
mov
ret
inc
mov
repnz
xchg
jle
jle
xor
shr
push
xchg
test
sbb
push
mov
pusha
mov
inc
xchg
jns
call
mov
repnz
loope
cmp
in
inc
mov
cmp
jmp
int3
cmp
mov
(bad)
adc
or
jno
pushf
ins
lods
(bad)
mov
or
push
cmp
lahf
and
pop
sub
movs
(bad)
loop
out
movs
xchg
hlt
fidivr
jge
sbb
loopne
(bad)
sti
jg
cmp
sub
jne
std
fbld
je
mov
jnp
inc
push
mov
int3
je
inc
lds
fdiv
xchg
loopne
xlat
into
(bad)
call
nop
std
test
js
mov
jg
shl
jae
pop
rcr
repnz
popf
inc
out
daa
cwde
bound
retf
inc
(bad)
in
fisttp
popf
push
ret
lahf
mov
data16
stc
jg
popf
sar
aaa
enter
push
inc
sub
ins
sbb
scas
retf
dec
out
pop
jae
(bad)
aad
dec
sahf
mov
mov
outs
pop
imul
push
pop
add
mov
jmp
test
pop
mov
sti
push
pop
(bad)
nop
xchg
sub
in
inc
pop
add
push
das
mov
outs
push
jns
sub
ins
cmp
shr
aad
nop
imul
pop
sbb
mov
rol
push
test
inc
out
into
fiadd
or
repnz
xchg
push
mov
hlt
and
aas
push
adc
mov
jmp
and
lods
add
mov
in
dec
popf
bound
outs
mov
add
pop
push
add
mov
retf
arpl
inc
bound
ins
rol
in
inc
inc
pop
cmp
push
clc
pop
sub
in
aas
push
adc
loope
stos
jnp
test
test
scas
sar
mov
mov
mov
cs
out
bound
xchg
and
mov
xchg
jp
sub
sub
push
sti
ret
sbb
jle
pop
xchg
pop
loopne
sub
dec
inc
mov
pushf
cmp
test
dec
inc
mov
dec
pop
das
push
retf
pop
shr
shr
xor
push
div
push
sbb
mov
mov
adc
popa
cli
out
sub
or
mov
into
test
retf
faddp
jnp
mov
lock
sub
fcom
mov
in
leave
es
cdq
lods
inc
and
lahf
or
xchg
outs
dec
cmps
in
xor
adc
push
mov
into
dec
xchg
dec
mov
pop
and
jge
adc
mov
or
mov
fs
rep
adc
je
(bad)
xor
jp
mov
int
std
ret
and
pop
dec
out
xor
jmp
mov
(bad)
pop
xchg
inc
or
stos
jg
(bad)
stc
test
bound
inc
fsubr
xor
cmp
or
lds
xchg
or
dec
mov
iret
daa
int
mov
pop
ins
js
(bad)
or
int3
popf
and
fstp
add
fwait
ins
clc
test
xchg
or
mov
dec
rcl
inc
xchg
xchg
jb
fild
inc
jmp
adc
and
lahf
inc
pusha
xadd
(bad)
mov
xchg
cwde
jle
pop
imul
test
mov
pusha
mov
jae
sub
xor
jb
mov
jne
jbe
test
imul
popf
idiv
test
out
(bad)
mov
shl
bound
adc
and
adc
or
loop
inc
xor
inc
xchg
loop
test
in
cmps
ins
je
jp
sub
inc
lods
push
push
mov
shr
dec
mov
mov
sub
pop
push
repz
mov
test
loop
sahf
(bad)
adc
mov
(bad)
pop
aam
sub
inc
and
(bad)
stc
push
ficomp
pop
call
cs
or
mov
iret
sar
in
je
add
and
jmp
sbb
dec
xchg
fxch
mov
cmps
push
jle
sbb
test
jmp
dec
sti
cdq
push
stos
jno
dec
push
jb
xchg
mov
push
cmps
ins
imul
enter
movs
mov
push
sub
cwde
pop
or
and
mov
jno
pushf
popa
movs
mov
and
ret
fsub
mov
pop
test
std
sti
jnp
cmp
mov
and
xor
mov
mov
adc
mov
mov
inc
data16
mov
jp
add
xor
idiv
mov
dec
ins
add
nop
rol
jno
jg
into
lds
fbstp
jns
in
(bad)
aam
mov
ds
gs
es
jmp
pushf
arpl
or
push
les
addr16
jmp
xchg
adc
je
inc
mov
lds
push
sahf
jl
and
movs
movs
das
idiv
inc
mov
icebp
and
xchg
data16
mov
into
fimul
daa
push
ja
xor
ins
jne
push
lock
lods
xchg
jne
int
sub
sub
push
jae
xor
retf
test
into
int
mov
jmp
out
mov
fwait
lahf
out
out
and
cs
jecxz
xchg
data16
jno
out
inc
pop
enter
adc
movs
mov
sub
arpl
(bad)
mov
jbe
ja
pop
pop
int
loope
fisttp
jo
cmp
mov
loope
sub
cmps
mov
add
loope
mov
sub
jmp
imul
(bad)
out
mov
scas
mov
mov
shr
movs
sti
xchg
add
mov
dec
push
mov
add
int
mov
xor
mov
and
aaa
cmps
adc
sbb
imul
ja
shr
repnz
mov
sub
dec
fcom
outs
pop
cdq
stos
mov
test
ss
out
dec
push
or
hlt
mov
jnp
aas
mov
(bad)
out
mov
sub
ja
cmp
pop
push
pop
(bad)
mov
loop
sub
sahf
sti
mov
push
xor
test
mov
sbb
push
sub
aaa
xchg
xor
push
jb
sub
imul
jns
imul
cmp
mov
outs
jmp
adc
mov
ret
pop
cmp
popf
xchg
pop
inc
rcl
mov
xor
push
sbb
jne
inc
mov
out
inc
push
cmp
pop
cmps
data16
daa
pop
mov
mov
inc
xchg
dec
stos
and
pusha
mov
xor
lea
(bad)
push
call
cmp
add
jg
mov
mov
pop
stos
cs
mov
and
aad
xchg
enter
or
pop
adc
test
lds
(bad)
and
int
mov
cmc
jbe
lock
mov
jecxz
xchg
outs
aas
cdq
xchg
imul
leave
retf
pop
aad
mov
xchg
daa
adc
mov
jl
repz
setge
das
pop
inc
pop
mov
dec
hlt
rcl
inc
dec
shl
xlat
stos
pop
jg
in
stc
jno
sbb
pop
dec
adc
inc
rol
adc
mov
ret
loopne
or
add
test
test
adc
inc
mov
sti
mov
push
xor
sub
dec
cmp
cmp
(bad)
mov
(bad)
shl
inc
cmp
mov
movs
jmp
sbb
enter
das
sbb
pop
or
movs
out
bound
cs
lahf
fwait
dec
lahf
xor
push
mov
jl
pop
jno
ror
jecxz
out
sub
xchg
scas
pusha
loope
mov
mov
lds
xor
imul
lods
(bad)
push
ud0
dec
clc
xchg
cli
jnp
movs
xchg
mov
pop
adc
arpl
add
ins
push
ret
stos
movs
mov
xor
or
push
or
aam
pop
stc
jecxz
ss
nop
push
sbb
das
jno
outs
pop
cmp
cmp
cmp
cwde
scas
ins
jg
add
ins
mov
aad
jmp
and
test
in
(bad)
jmp
lds
scas
stos
loopne
fimul
adc
xor
rcr
mov
lods
aaa
and
cmps
adc
cwde
mov
(bad)
jmp
cld
jbe
mov
sub
not
add
mov
add
push
test
push
push
shl
jle
aad
and
les
out
mov
rcl
repz
scas
pop
lock
lahf
and
hlt
jp
push
and
fsub
aad
sub
(bad)
test
test
rcl
ins
adc
sub
pop
sub
aaa
xor
in
pop
xchg
jp
mov
push
add
pop
push
cwde
(bad)
jmp
iret
cwde
dec
cmps
pop
pop
or
push
pop
fcmovne
fisttp
add
pop
xchg
pop
jle
mov
(bad)
rcl
mov
or
fsubr
xchg
dec
inc
pop
jp
retf
shr
inc
xchg
dec
cmp
sar
xor
inc
(bad)
cld
cmp
pop
je
sbb
cmp
or
add
xor
xchg
or
mov
call
add
or
xchg
xlat
jmp
jae
test
or
jmp
push
test
inc
cmp
cld
pop
mov
and
bound
data16
das
and
retf
fdiv
sbb
cmp
xor
js
stc
xchg
push
cmps
cdq
inc
xor
neg
sub
mov
call
jnp
dec
std
push
imul
outs
outs
shr
sub
jg
push
push
jl
sbb
jmp
fs
icebp
mov
enter
lds
popf
adc
adc
ins
ja
test
cmp
jns
int3
or
cld
repz
aas
(bad)
cld
repz
call
add
pop
jbe
je
dec
xchg
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loop
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
je
pop
inc
in
shl
sbb
add
loopne
xor
fwait
call
ins
repnz
fcmovbe
xor
sbb
arpl
hlt
jo
dec
ja
je
sbb
fistp
in
jns
add
xchg
or
out
retf
or
sbb
adc
cmps
mov
enter
mov
out
stc
mov
loop
repz
aam
push
sbb
mov
xchg
es
adc
ja
int
add
mov
retf
lods
pop
mov
out
fisttp
adc
ja
pop
add
dec
cld
sbb
(bad)
iret
and
push
mov
dec
pushf
jne
jmp
iret
retf
pop
add
ins
pop
cld
pop
fcmovbe
outs
ja
arpl
mov
rol
dec
aam
(bad)
loopne
xchg
ds
neg
aad
ror
adc
and
es
push
jne
push
or
addr16
or
adc
int3
in
iret
push
pushf
mov
and
int3
mov
xor
(bad)
xchg
jle
cmc
inc
cdq
into
popa
int
xchg
lahf
neg
fld
movs
add
mov
mov
mov
xor
cmp
dec
mov
lods
inc
push
ja
aad
out
inc
cdq
or
cmp
imul
loope
cmp
in
sbb
add
mov
dec
pusha
(bad)
idiv
xor
push
mov
clc
or
and
xchg
xor
loope
ins
push
mov
mov
std
and
popa
cmp
and
jmp
lods
sub
push
add
test
bound
ins
cwde
stos
inc
shl
sahf
sbb
jb
pop
mov
(bad)
fidiv
ror
dec
pand
(bad)
call
mov
repnz
mov
mov
mov
xor
mov
aas
std
test
mov
mov
jmp
and
adc
sar
push
ins
mov
cdq
and
fnstenv
lds
test
dec
add
rol
jbe
cmp
sbb
mov
sbb
rcr
test
jp
mov
shr
das
stos
loopne
jne
dec
xor
jnp
xchg
frstor
mov
out
outs
sbb
jns
mov
pushf
retf
jecxz
gs
gs
cmps
sub
inc
jae
dec
cld
retf
ins
rcl
fnstenv
into
ja
movq
dec
int
stos
imul
cmps
xchg
push
mov
add
lods
inc
pop
adc
ins
jge
sub
cmp
pushf
lahf
or
or
jae
pop
mov
fcom
xchg
scas
jae
dec
aaa
pusha
gs
mov
lahf
cmc
xor
cli
dec
add
xor
hlt
jle
mov
adc
movs
inc
stos
jb
inc
not
outs
cmc
sbb
mov
aas
cmp
pushf
cmp
push
jecxz
add
xor
imul
xor
dec
inc
cli
mov
push
pushf
bound
push
in
mov
inc
addr16
cld
repnz
push
xor
cmp
jno
push
xor
out
cmp
inc
sahf
add
imul
cmp
adc
popa
in
push
adc
shr
adc
dec
scas
pop
aad
adc
stos
(bad)
sbb
mov
shl
cli
push
retf
cmovge
ror
jmp
push
sbb
loopne
mov
loope
push
cmp
addr16
add
inc
mov
jecxz
and
dec
retf
push
dec
cs
fnstenv
mov
sbb
xchg
pop
cmp
neg
pop
push
dec
sti
daa
cmp
sbb
retf
or
shr
mov
mov
out
and
lods
xchg
dec
bound
fstp
jmp
fnstenv
loope
jne
inc
aad
pop
(bad)
lahf
movs
or
lahf
jbe
mov
(bad)
popf
stos
sbb
sti
inc
aam
ret
fsub
pop
add
mov
sbb
shr
cmp
mov
int3
popf
sti
inc
inc
cmps
push
pop
push
cmp
pop
loop
sub
hlt
pop
cmp
loope
(bad)
ds
jb
je
push
push
sti
(bad)
into
outs
into
(bad)
loop
cmp
add
push
mov
pop
(bad)
lock
bound
inc
loope
(bad)
xchg
pop
and
jl
xor
cmc
pop
ja
lea
outs
stos
add
icebp
les
add
mov
sub
cmp
in
test
jmp
jle
add
dec
mov
mov
sub
push
pop
or
popa
xchg
loop
mov
arpl
lods
ins
xchg
mov
dec
lods
cmp
in
add
test
out
dec
fs
xor
cmp
test
jmp
cmc
mov
pop
xchg
and
outs
movs
cdq
push
push
push
cld
jmp
in
ror
push
sub
xchg
mov
mov
mov
push
jmp
mov
cmc
icebp
mov
shl
into
xor
data16
aas
rcl
and
push
dec
dec
lods
cmp
fdivr
xchg
or
jae
and
test
xchg
sbb
jge
jb
fwait
test
shl
in
xchg
(bad)
pop
cmp
cmps
pop
and
aad
xor
push
aam
mov
add
je
lss
retf
int
adc
ret
cld
pop
adc
fs
mov
and
repz
mov
mov
xchg
icebp
shl
dec
cmp
sbb
mov
cmp
cmp
sbb
scas
ficom
cli
jecxz
into
push
fdivp
jmp
cmp
fsub
sub
ret
and
xchg
shl
ins
repz
xor
in
fsub
sar
mov
addr16
in
jo
sub
or
xor
mov
in
jno
mov
ins
test
frstor
je
jo
xchg
retf
cmp
adc
test
(bad)
inc
fwait
aaa
sbb
xor
sub
jl
sub
in
xchg
(bad)
cld
cmp
cmp
daa
outs
or
xor
(bad)
call
or
aam
cmp
es
jmp
fwait
pop
inc
push
push
or
and
mov
adc
cmp
outs
fs
cld
ret
enter
dec
jmp
leave
push
pop
je
or
sti
push
cdq
(bad)
adc
es
mov
inc
pop
push
pop
xchg
adc
hlt
xchg
cdq
add
pop
jae
addr16
rcr
test
cmp
pop
cwde
aas
jnp
cli
loope
push
or
mov
mov
and
pop
mov
outs
pusha
out
adc
cmp
add
repz
ds
mov
mov
sub
hlt
ins
cld
and
(bad)
lahf
mov
push
sbb
mov
std
jb
rol
inc
mov
or
sub
mov
enter
pop
or
stos
fbstp
addr16
ja
dec
adc
cmp
mov
cdq
mov
imul
push
lods
cmps
movs
out
mov
scas
icebp
clc
mov
leave
lods
ss
fadd
push
mov
ret
sbb
sub
mov
test
sahf
inc
xchg
iret
sbb
or
sub
inc
test
shl
je
call
xor
xchg
mov
test
cmps
jno
push
imul
cli
aaa
hlt
mov
hlt
in
mov
or
rcr
mov
cmp
outs
adc
call
data16
push
sbb
mov
jp
das
aaa
inc
add
xchg
pop
mov
mov
mov
mov
push
jge
mov
add
fs
call
cmp
imul
(bad)
das
rol
xor
push
push
bound
jl
push
xchg
fwait
pop
dec
jge
cwde
sahf
lock
aad
mov
add
pop
ins
jl
les
cmp
jns
icebp
aad
fmul
inc
pop
dec
out
and
imul
mov
pop
dec
pusha
cmp
pop
add
pop
adc
pop
push
inc
aas
in
fwait
mov
pushf
lea
outs
outs
inc
push
pop
mov
scas
pop
fsubr
sbb
in
sub
stc
das
fisub
into
retf
stc
stos
ret
cmp
outs
fld
outs
sti
mov
jp
pop
in
outs
js
mov
retf
sub
ret
(bad)
mov
xchg
jg
iret
iret
xchg
adc
data16
int
scas
inc
in
mov
adc
in
sbb
inc
cmp
int
mov
push
ss
fld
fcmovne
test
repz
ins
push
ins
test
add
cmp
cmp
xor
aad
mov
(bad)
out
pop
mov
dec
inc
ds
and
stos
jmpw
ja
cdq
minps
mov
sbb
push
xchg
push
shr
pop
push
xor
push
pop
mov
loopne
idiv
mov
mov
adc
pop
aam
dec
pop
sbb
or
and
mov
lock
test
ds
pop
cs
jb
mov
fisttp
jmp
or
repnz
mov
fs
shl
mov
dec
aam
mov
ss
ret
xor
in
jmp
adc
stos
data16
out
sar
mov
test
ins
jns
mov
mov
mov
aaa
push
mov
push
adc
or
ror
jmp
jno
(bad)
mov
stos
or
inc
mov
inc
out
ss
rcl
fisttp
mov
outs
and
sbb
cmp
push
fwait
bound
adc
inc
das
jmp
(bad)
push
ds
xchg
cmp
jnp
xor
out
xlat
jb
sbb
iret
sti
punpckhbw
pop
and
xchg
inc
sub
or
int3
and
or
push
test
xlat
aad
xchg
not
(bad)
mov
iret
jmp
out
or
jnp
fucomip
jp
enter
dec
sbb
add
lea
fcomp
jmp
jl
jg
int
stc
cmps
shr
popf
fsub
fstp
inc
inc
jmp
test
sbb
jb
cmps
ja
mov
mov
out
leave
popa
mov
sbb
pop
and
cs
dec
(bad)
fistp
jb
jecxz
inc
fmul
mov
imul
xor
fdivr
arpl
or
stc
lods
sbb
fcmovu
sub
out
imul
fsubr
push
pop
movs
mov
sbb
cmp
icebp
in
aam
jle
jnp
push
mov
out
sub
movs
out
loopne
fdivrp
xor
cwde
cmp
unpckhps
adc
pop
lahf
scas
xchg
cmp
fadd
ficom
sub
adc
or
lock
xchg
sub
fimul
pop
hlt
icebp
movs
test
(bad)
xor
rcl
ins
scas
dec
retf
push
adc
retf
xlat
xchg
je
xchg
call
scas
fist
and
lods
pop
or
sahf
cmp
cmp
ja
jns
imul
push
outs
jns
adc
fcmovnbe
mov
push
jb
mov
xchg
ds
inc
jg
aaa
in
test
movs
out
mov
into
ins
dec
mov
xchg
cli
out
add
mov
xor
test
outs
inc
sbb
mov
mov
stc
pop
xchg
or
imul
pop
dec
xor
loope
ret
adc
in
sub
xchg
fwait
call
(bad)
jb
pop
addr16
pusha
xor
out
sub
retf
dec
in
btc
aaa
sbb
lahf
pop
fcmovne
ret
pop
out
nop
aaa
cmc
xchg
mov
mov
push
mov
cmp
ja
adc
sub
mov
xchg
les
mov
mov
retf
dec
or
ds
fisub
popf
ins
ds
pop
mov
loop
pop
jno
adc
fmul
mov
dec
int
out
jo
xor
iret
fwait
adc
ja
add
into
out
xchg
sub
mov
test
fistp
sub
push
pushf
leave
xchg
sbb
cmps
inc
cmps
int3
loope
ins
jl
add
clc
or
test
out
rcr
dec
inc
pushf
xlat
out
(bad)
cmps
inc
ins
call
in
imul
das
push
cmp
xchg
cmps
popa
cmps
movs
or
sbb
js
cmps
movs
inc
push
out
aad
pop
je
sbb
jp
mov
aas
jg
mov
or
or
or
inc
push
and
push
xchg
ins
inc
inc
lods
mov
das
fldcw
pop
xor
fwait
jecxz
in
stos
data16
xchg
cmp
adc
cli
jb
ret
add
and
cmp
std
iret
stos
addr16
(bad)
dec
xor
pop
mov
mov
ss
jns
out
xchg
out
xor
sti
movs
neg
mov
arpl
hlt
push
in
movs
mov
js
push
jno
mov
aaa
inc
mov
add
cmps
das
mov
(bad)
cdq
out
bound
icebp
adc
shl
cld
push
in
cmp
add
pop
push
mov
sub
sahf
ror
(bad)
dec
cmps
std
jne
xchg
int
into
push
xchg
xchg
jge
adc
sub
mov
xchg
mov
les
sub
je
(bad)
dec
sbb
test
aas
fnstcw
cmc
cmp
cdq
cmp
cmp
sbb
push
iret
(bad)
shr
push
fwait
popa
jg
xor
xor
aas
dec
sahf
jbe
adc
push
addr16
lock
mov
and
dec
lock
(bad)
and
fstp
mov
mov
ret
loop
sar
cmp
add
jg
stc
out
jg
stc
jg
add
cmovae
scas
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movq
inc
push
pop
inc
in
shl
aam
add
loopne
sub
not
cmp
mov
mov
push
mov
jnp
cmp
addr16
inc
(bad)
xlat
push
mov
mov
sbb
mov
add
jecxz
sbb
in
addr16
and
xchg
pop
add
cli
dec
fcmovbe
enter
cmps
jmp
dec
imul
adc
dec
push
leave
xchg
pop
mov
mov
push
imul
pushf
js
jmp
nop
sub
jae
sahf
retf
icebp
sbb
xlat
sar
push
or
push
lods
or
inc
jmp
rol
fs
dec
mov
imul
rcl
inc
xchg
mov
sub
outs
cdq
mov
aas
arpl
popf
dec
fild
out
popa
test
push
xchg
loope
jmp
cmp
push
or
aad
sbb
hlt
cs
cmp
push
mov
mov
into
aaa
aam
xchg
sub
mov
xchg
push
ds
mov
fisubr
adc
or
mov
inc
sbb
xchg
inc
cs
scas
popa
mov
adc
std
and
mov
shl
into
ds
xor
xor
movs
xchg
pop
push
add
jno
inc
xor
jns
jp
push
or
and
or
call
sub
rol
js
cmp
js
das
dec
jbe
push
mov
cli
ins
hlt
cdq
mov
sbb
and
jl
(bad)
mov
cmp
and
push
push
push
ja
adc
lahf
mov
mov
es
jp
sbb
push
mov
call
jle
int
pop
adc
mov
xor
cs
jecxz
ds
pop
push
xchg
rcl
js
pop
sbb
es
xchg
dec
push
scas
xor
popa
cmp
xor
push
adc
in
lea
test
ffree
dec
aam
jle
push
xor
lods
cli
arpl
mov
loope
jo
jmp
(bad)
cld
inc
and
xchg
mov
outs
fisttp
mov
enter
push
popf
in
outs
dec
jns
push
sub
xor
outs
(bad)
rcr
and
lock
jl
ret
or
push
outs
xor
outs
cmp
mov
sub
push
mov
jnp
ins
leave
cmps
sub
pop
xchg
or
into
fadd
arpl
not
jns
adc
lods
cmp
inc
aad
mov
or
xlat
retf
pusha
sbb
push
pop
sti
fdivr
or
cmc
add
nop
sub
jne
jb
jge
jno
push
mov
sub
js
inc
sub
cmp
mov
inc
cli
movs
mov
loop
aam
aaa
push
mov
or
arpl
adc
dec
clc
test
fld
in
and
mov
pushf
jmp
push
addr16
scas
pop
fabs
dec
fs
lods
push
adc
pop
loopne
xchg
push
inc
cmp
jns
sbb
fs
jmp
in
and
pop
ficomp
js
jbe
lock
sbb
pop
add
or
ins
int3
nop
jle
js
daa
add
(bad)
and
xor
pusha
shr
into
jns
inc
mov
into
xchg
mov
(bad)
daa
mov
jbe
cli
xchg
lods
cmps
sub
fldenv
stos
cli
(bad)
or
enter
mov
(bad)
sahf
inc
push
rcl
mov
ficomp
ja
leave
push
fimul
in
sub
leave
push
in
push
jo
or
jg
inc
lods
ins
inc
out
push
xor
or
pop
xchg
or
push
pushf
in
inc
retf
arpl
push
data16
push
loop
jge
push
fwait
loopne
xchg
cld
sahf
cdq
push
es
mov
adc
jecxz
mov
inc
sbb
lahf
fwait
(bad)
bound
dec
or
arpl
sub
jns
sahf
jae
and
lea
xchg
aam
xor
cmp
inc
push
cmp
retf
sahf
pop
jnp
dec
jp
and
pop
and
jne
dec
sar
xor
cmc
xor
test
scas
jge
clc
jnp
inc
xchg
fstp
rcr
lock
(bad)
mov
dec
(bad)
(bad)
retf
push
mov
outs
call
xor
(bad)
daa
or
out
ss
stos
inc
pop
stos
inc
ss
sbb
sbb
(bad)
ror
retf
sar
cmp
dec
cmp
xor
pop
sti
call
icebp
cmp
jne
push
inc
jns
jo
mov
mov
shl
push
into
jmp
xchg
inc
jle
xor
push
sbb
outs
ja
jnp
cmps
adc
mov
sub
(bad)
mov
imul
out
jb
mov
mov
pop
ins
mov
mov
mov
rol
lds
jmp
bswap
(bad)
push
push
fcomp
jp
mov
bswap
adc
adc
adc
icebp
inc
cli
push
jne
push
xchg
xchg
jmp
xchg
adc
ret
dec
les
pop
sbb
adc
retf
jne
mov
ja
mov
xchg
push
call
or
(bad)
mov
(bad)
aad
pop
sahf
or
(bad)
mov
cmps
arpl
push
xor
mov
pusha
lods
int
jns
xor
into
jnp
clc
push
(bad)
lods
and
hlt
push
push
push
(bad)
js
std
sahf
push
in
mov
jb
or
mov
imul
mov
cmp
or
sub
mov
rcr
jnp
in
jne
mov
in
sub
mov
cdq
mov
push
sub
ficomp
aas
daa
daa
jmp
mov
dec
pop
sbb
into
lods
test
retf
jae
aad
out
inc
jle
jp
xchg
bound
out
jnp
ins
xchg
shr
pop
dec
dec
test
scas
in
es
rcl
mov
pop
loop
dec
jle
jp
cmp
dec
aad
in
adc
pop
mov
mov
into
inc
movs
adc
lods
leave
inc
ret
sub
mov
fst
push
(bad)
test
addr16
fwait
in
fisubr
jnp
inc
mov
lock
xchg
(bad)
xchg
lods
fnstenv
pushf
push
inc
addr16
cmp
add
jge
mov
std
imul
fsubr
out
mov
push
pushfw
dec
scas
dec
pop
(bad)
ror
ds
add
push
jns
rcl
hlt
push
daa
push
out
mov
mov
push
repnz
xchg
push
sub
clc
push
lds
popa
push
inc
ret
adc
pop
jp
jo
gs
inc
mov
cmc
inc
or
imul
or
mov
mov
adc
icebp
xor
mov
setnp
and
adc
aaa
adc
jno
bound
mov
sbb
(bad)
mov
push
mov
nop
mov
xor
out
cmp
dec
bound
rcl
push
fist
jge
mov
gs
adc
pop
loope
dec
add
out
pop
push
mov
cmc
out
ror
hlt
and
test
mov
icebp
ds
jb
mov
pop
cmps
fcomp
jbe
mov
cmc
jmp
sbb
pop
add
dec
mov
mov
in
and
xor
fidivr
mov
cmp
cs
xor
xor
xor
aaa
inc
cli
cmp
test
jbe
sbb
and
mov
fisttp
ins
mov
jmp
xlat
bswap
adc
int
mov
movs
scas
pop
movs
cmp
pop
fild
jnp
retf
sbb
adc
ret
fild
in
adc
adc
xlat
jns
jbe
dec
ror
imul
adc
and
cmp
mov
retf
fmul
loopne
mov
(bad)
into
mov
hlt
es
xor
leave
sub
test
pop
scas
mov
into
test
cli
stos
add
sbb
xor
sub
fsubr
cmps
scas
or
shl
add
ins
add
jb
sti
pop
cwde
fwait
jb
inc
cmp
and
call
adc
lahf
mov
inc
push
push
(bad)
jl
imul
clc
pop
or
mov
imul
aad
or
movs
fisttp
test
mov
ins
adc
into
loope
popa
mov
push
inc
xor
pop
pusha
or
jne
inc
xor
bound
mov
jmp
dec
clc
pop
outs
int
mov
or
dec
dec
mov
fcmove
(bad)
scas
pushf
mov
js
sub
and
and
cwde
mov
cs
in
pop
(bad)
pop
shl
jmp
cwde
das
je
push
mov
popa
addr16
std
xchg
cli
int3
leave
leave
sahf
jecxz
and
outs
jns
(bad)
and
jnp
mov
fcmovb
xchg
dec
jg
stc
jbe
repz
stos
jge
adc
outs
sbb
in
gs
sbb
std
xchg
pop
jno
inc
sub
push
aad
out
mov
jno
pop
xchg
imul
add
fild
fwait
cmps
loope
add
aad
xchg
push
daa
xchg
mov
lods
add
aam
(bad)
test
mov
js
in
mov
ja
mov
mov
cdq
test
bound
push
adc
fcom
xor
sub
ret
leave
ret
push
jnp
(bad)
cld
inc
popa
mov
in
les
jp
pop
dec
cmp
xchg
or
pop
adc
in
xchg
mov
cwde
adc
pop
push
xor
push
mov
xor
pop
retf
movs
xor
push
fdivrp
xor
(bad)
push
out
cmp
xor
mov
xchg
mov
adc
pop
dec
mov
repz
fst
arpl
xor
add
fs
jae
test
dec
mov
cmps
pop
add
out
lods
xchg
dec
xlat
js
push
rol
or
jno
mov
sbb
shl
or
push
mov
test
or
jge
inc
adc
adc
int
jle
aas
retf
icebp
inc
(bad)
lods
xchg
or
fcmovbe
int
fild
in
data16
sbb
lahf
push
std
inc
(bad)
clc
std
or
mov
lea
test
(bad)
inc
jns
aas
and
push
ins
imul
add
fwait
stc
sti
xor
lock
dec
xchg
pop
iret
jge
jo
mov
sub
out
hlt
adc
aas
out
arpl
mov
sahf
cmp
mov
xor
in
out
pop
jecxz
inc
data16
inc
add
mov
sbb
mov
mov
popf
popa
mov
push
call
sbb
xor
jne
dec
pop
dec
xor
jmp
lods
cdq
rcr
bound
mov
int
int
movs
cmp
sbb
cmp
ds
mov
jp
cwde
ss
aam
inc
pop
imul
mov
mov
mov
xor
js
xor
in
iret
fistp
cmp
sub
out
mov
and
jnp
pop
(bad)
fcmovbe
icebp
mov
aaa
inc
fistp
fstp
repnz
cmp
mov
push
pop
add
inc
out
inc
mov
stos
hlt
inc
xor
clc
rol
xor
mov
out
inc
arpl
push
lock
ret
jl
out
mov
out
std
jne
sahf
push
shr
(bad)
adc
dec
ret
jg
cmp
and
mov
inc
scas
dec
in
xor
fld
cmps
(bad)
xchg
mov
ins
xchg
jmp
xchg
fist
xchg
cmp
mov
adc
movs
mov
dec
jne
mov
mov
popa
push
adc
mov
pop
sbb
push
mov
mov
mov
jnp
arpl
loopne
inc
mov
mov
jge
add
push
inc
dec
sub
jmp
pop
mov
js
or
lock
pop
inc
shl
adc
inc
shl
fsubr
mov
das
loop
sbb
jae
sbb
mov
mov
push
or
cmc
push
inc
add
mov
ds
shl
gs
add
inc
mov
jns
daa
mov
in
jle
mov
jl
inc
mov
enter
xchg
pop
repnz
pop
mov
jae
sub
xor
push
adc
stos
cmp
jmp
test
lea
mov
push
stos
mov
cmp
retf
push
adc
imul
ficomp
jg
push
lods
ins
imul
xor
cli
mov
mov
retf
cs
jo
cmps
fs
cmps
popa
sbb
icebp
cmp
das
fisubr
clc
std
jmp
js
adc
mov
mov
and
data16
inc
jmp
sub
and
dec
mov
mov
call
(bad)
lods
pop
mov
lods
push
dec
lods
adc
adc
out
fiadd
pop
gs
mov
xchg
js
mov
mov
dec
dec
lahf
ret
jne
imul
int3
mov
sbb
add
retf
adc
fcmovne
or
into
test
mov
sahf
inc
or
lds
movs
cmc
push
out
bt
(bad)
out
call
scas
push
push
icebp
sub
jo
xchg
call
push
xor
scas
fwait
mov
push
inc
fs
ins
test
in
dec
push
dec
mov
enter
jle
adc
jbe
mov
icebp
enter
cmp
jae
add
xchg
sub
ins
les
jno
push
shl
mov
fdiv
inc
and
(bad)
lods
dec
push
inc
sub
xchg
sub
push
sub
mov
add
in
jg
stc
out
jg
stc
out
or
cld
shrd
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
add
dec
inc
inc
push
pop
inc
in
ror
lock
pop
(bad)
xor
pop
xchg
push
sub
in
push
jp
lea
movs
data16
ficom
(bad)
out
mov
adc
lods
lods
pop
jb
ret
mov
int
mov
(bad)
out
sti
stc
inc
rol
mov
and
in
cmp
adc
mov
dec
dec
setnp
jl
push
into
and
xor
arpl
xor
es
cmps
scas
pop
pop
ins
xchg
mov
xchg
xor
ficom
test
adc
cmp
cmp
pop
lahf
jmp
fldz
jge
adc
mov
dec
inc
data16
rcr
dec
or
icebp
lahf
stos
push
pop
ja
addr16
leave
xchg
jp
push
aas
fwait
cmp
sbb
dec
out
mov
cmp
in
adc
xor
sbb
push
repz
and
stc
shl
pop
in
shl
shl
push
xor
stos
adc
cmp
xchg
fild
fadd
sub
outs
jl
push
mov
lahf
xor
mov
xchg
repnz
aas
jns
jge
mov
jbe
fs
adc
and
cmp
mul
lods
or
cwde
movs
nop
pushf
shl
xchg
pop
sub
aam
sbb
push
jge
je
pop
sbb
and
mov
mov
sbb
jno
mov
nop
ret
adc
movs
dec
(bad)
mov
add
sub
xchg
adc
xchg
outs
iret
or
mov
enter
jae
pop
pop
fimul
jge
icebp
sub
scas
out
test
shl
xchg
xchg
imul
(bad)
jns
jecxz
push
dec
daa
mov
das
mov
js
dec
dec
pop
or
sbb
mov
cmc
cmp
loope
lds
mov
mov
adc
test
xor
push
inc
inc
mov
sub
add
cs
jge
daa
jg
xor
mov
cmp
mov
pop
ins
test
cmp
pop
xor
push
cmps
bound
dec
movs
mov
jno
jp
jne
fs
mov
adc
and
mov
mov
cmps
in
out
shl
(bad)
inc
daa
and
dec
in
scas
es
loopne
(bad)
mov
sbb
and
leave
cld
jo
mov
lods
stos
push
aaa
fld
pop
movs
mul
xor
mul
or
push
in
call
inc
push
outs
jno
push
scas
(bad)
das
jecxz
or
xor
mov
or
stos
jo
sbb
gs
add
jbe
or
push
push
mov
fs
adc
les
mov
in
pop
mov
xor
mov
mov
cdq
loopne
sub
adc
jl
fcomp
mov
jnp
mov
(bad)
pop
cmp
loopne
or
add
clc
dec
inc
sar
mov
lods
push
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fmul
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
movd
inc
push
pop
inc
in
shl
aam
add
loopne
xchg
fs
mov
adc
and
ja
pop
loope
cs
retf
scas
in
jns
dec
fldenv
dec
js
(bad)
test
jge
out
push
mov
in
push
sub
fcmovb
mov
mov
fcomp
movs
mov
mov
loopne
xchg
fdivr
arpl
fwait
arpl
aam
mov
xlat
inc
(bad)
dec
addr16
call
stos
iret
or
in
les
(bad)
sub
push
xchg
outs
adc
test
pop
repnz
xlat
in
in
jne
stos
test
jnp
mov
ret
addr16
stos
sub
test
or
xor
movs
push
cmps
jge
dec
adc
imul
inc
mov
cmp
in
jge
addr16
retf
cmp
mov
dec
sahf
or
and
sbb
jns
mov
push
loop
add
inc
or
aad
pusha
or
pushf
push
adc
mov
inc
mov
lock
shr
(bad)
fisttp
and
nop
mov
jae
lods
(bad)
fild
pop
pop
jnp
dec
or
syscall
aas
cmp
mov
aas
xchg
fsubr
adc
outs
gs
dec
mov
cmp
fisub
nop
mov
call
cs
cmp
mov
aas
cmps
(bad)
push
stc
out
(bad)
lds
mov
mov
or
aas
adc
(bad)
call
jne
mov
and
cs
test
setns
mov
test
cmp
leave
(bad)
cld
sub
and
xor
jmp
addr16
iret
adc
sbb
push
push
xchg
cmp
je
jmp
xchg
jg
cmc
pop
inc
jge
(bad)
js
push
daa
pop
cwde
fs
inc
jne
in
in
push
fcmovu
out
xchg
push
push
std
out
sub
sub
cli
inc
mov
inc
cdq
pop
hlt
(bad)
ss
fwait
aas
cmc
pop
and
daa
inc
data16
outs
test
cmp
imul
aas
sbb
shr
shl
(bad)
mov
push
adc
fiadd
(bad)
outs
scas
popa
dec
retf
jbe
mov
shr
(bad)
fisttp
jnp
dec
nop
and
mov
cmc
dec
dec
push
out
xchg
dec
loop
push
xchg
jne
cmp
adc
mov
enter
add
mov
sub
mov
xchg
jmp
sub
movs
jge
sti
ret
popf
adc
pop
and
jp
out
adc
out
popa
iret
inc
cmp
inc
lahf
out
cmps
adc
jmp
mov
aas
or
sti
xchg
mov
fst
push
loop
lahf
in
xor
int
xchg
pop
movs
sbb
clc
sub
pop
jne
fisub
sbb
inc
mov
push
and
cmp
daa
fmul
jae
dec
aam
sub
mov
jae
ret
jb
mov
pop
inc
push
jl
pop
jnp
test
shr
stos
in
dec
std
sub
cmp
jb
stos
ja
xchg
jmp
jmp
dec
jnp
fist
aas
popa
sbb
mov
std
pop
pop
push
adc
mov
sahf
jno
adc
sbb
call
popa
sub
cmp
pushf
mov
adc
retf
shl
jecxz
(bad)
test
repz
xor
dec
dec
xchg
sub
test
cmp
xchg
cmp
mov
repz
out
sbb
mov
dec
mov
push
pop
test
leave
jecxz
in
call
dec
mov
pop
dec
sub
push
xchg
sbb
leave
adc
(bad)
sbb
sub
push
push
daa
cmps
cmp
loopne
js
inc
jmp
cmp
nop
push
xor
stc
xor
fdivr
cli
xchg
aas
sbb
mov
aas
imul
out
jmp
test
scas
(bad)
btc
or
retf
lods
xchg
and
or
mov
in
cmc
sti
cli
pop
nop
sub
dec
xor
jle
ins
addr16
fist
add
shr
test
nop
and
xchg
xor
icebp
movs
mov
xlat
aas
push
xor
cmps
mov
xchg
sbb
jb
ins
and
retf
out
cmp
dec
paddusb
mov
ror
repz
ss
pop
enter
pminsw
lock
cmp
arpl
push
jno
lods
cmp
je
sbb
dec
scas
lods
mov
int
mov
add
xchg
mov
sahf
jmp
dec
xchg
and
ds
xchg
jb
les
fnsave
sub
aam
popf
xor
xor
push
loopne
loope
cli
jge
bound
or
ins
mov
cld
mov
push
retf
mov
cwde
dec
lahf
out
retf
mov
pop
fld
inc
dec
dec
push
inc
cdq
inc
mov
stos
stos
loopne
dec
push
mov
das
inc
sbb
inc
sub
retf
imul
jg
pusha
fcom
fcmovnb
daa
inc
cmp
shl
jg
pop
adc
cmps
mov
inc
sbb
jmp
test
jle
mov
loope
mov
jae
adc
imul
and
std
into
pusha
jbe
sbb
xchg
rcr
jmp
bound
cwde
rol
std
sub
inc
mov
imul
and
pop
mov
pushf
lock
test
enter
jns
test
movs
inc
mov
stos
je
mov
sbb
test
mov
(bad)
call
cld
loop
hlt
xchg
adc
les
jle
icebp
xor
fsub
hlt
rol
sub
lock
push
mov
mov
or
mov
or
mov
pop
cmp
pop
mov
aas
hlt
ss
jae
stc
jno
rcl
jge
or
jae
sub
aam
adc
mov
pop
nop
sahf
dec
popa
outs
mov
xchg
and
jmp
(bad)
enter
fist
sub
pop
outs
mov
xor
arpl
imul
mov
test
xor
lods
aad
push
ret
addr16
aas
sbb
jl
iret
inc
sbb
std
push
pop
outs
jecxz
pop
xor
or
retf
call
push
std
test
aad
xor
adc
sahf
pop
push
imul
rol
movs
cmp
mov
xchg
sub
dec
add
aas
ja
outs
loopne
call
mov
xchg
(bad)
lock
(bad)
xlat
cmps
aas
mov
pop
pusha
dec
push
add
mov
adc
pushf
int3
mul
mov
mov
fsubr
fadd
shl
sbb
sub
scas
xchg
pop
xchg
adc
push
dec
cmp
loope
sbb
les
js
and
mov
rcl
inc
jnp
pop
dec
daa
push
sbb
cmp
cmps
outs
call
mov
sti
cmp
inc
xchg
jb
popa
mov
push
push
xor
xchg
or
int
stos
pop
adc
retf
mov
into
int
jge
cmp
adc
pushf
rcl
adc
xchg
push
cs
sbb
push
mov
adc
jmp
pop
or
pop
popf
pop
cmp
push
add
xchg
aas
dec
test
push
xor
jl
cmps
xor
lea
call
gs
mov
jne
dec
bound
xchg
cmp
stos
dec
inc
jo
dec
aaa
mov
mov
aad
ds
cmp
pop
jmp
pop
mov
mov
or
and
add
std
and
mov
push
adc
ficom
adc
inc
sbb
lods
ins
mov
test
push
mov
sbb
scas
and
iret
dec
mov
lahf
adc
out
sbb
and
repz
cmp
sti
pop
scas
xlat
ror
cmps
(bad)
pop
adc
lea
leave
fnstcw
lds
shl
ja
adc
add
sbb
cmps
inc
loope
aad
dec
push
call
mov
sub
mov
or
lods
sar
cmp
mov
push
mov
call
ret
adc
jg
jecxz
call
sahf
fimul
icebp
adc
pop
xor
sub
in
pusha
nop
hlt
sub
sub
outs
sti
ret
jae
mov
cmc
cwde
aam
xor
cmp
sbb
or
je
bound
in
jmp
xor
sub
sub
test
mov
ja
test
int3
ins
(bad)
fbld
test
jmp
mov
call
imul
(bad)
xrelease
je
pop
adc
lds
push
push
inc
repnz
and
cmp
mov
test
mov
lods
xchg
rol
mov
pop
stc
cmps
pop
leave
popf
xor
adc
inc
sbb
adc
lods
lock
pop
or
or
iret
js
jmp
sub
test
and
sub
push
out
sub
xor
lods
and
mov
in
div
cs
out
jle
push
pop
dec
jle
cdq
scas
in
not
adc
xchg
or
xchg
sbb
pusha
push
push
fstp
mov
inc
repnz
mov
loop
scas
(bad)
gs
xadd
cld
xor
fiadd
dec
jge
sar
out
imul
and
call
dec
fsubrp
sub
lock
and
outs
repz
xchg
call
cmc
dec
add
mov
sbb
xchg
sbb
push
fwait
lods
inc
pop
dec
pop
xchg
or
movs
sbb
imul
dec
sahf
push
scas
push
frstor
imul
mov
push
jne
in
pushf
stos
push
out
fsubr
add
or
jae
inc
xor
pop
dec
cli
add
pop
fdiv
js
mov
out
int
rcl
mov
gs
dec
fsubp
cmp
jne
or
arpl
fldcw
icebp
fs
lods
and
push
cwde
iret
xchg
sar
(bad)
mov
ror
ja
add
xchg
hlt
push
cld
outs
pop
sub
pop
inc
stos
shl
or
mov
lods
dec
int
and
stc
inc
mov
jecxz
add
sbb
mov
stc
xor
repz
fcom
jg
inc
fiadd
sub
lods
sub
mov
cmps
dec
icebp
push
cld
jle
push
dec
out
jp
mov
or
sub
sar
ret
mov
add
or
inc
add
and
enter
fdivp
rol
nop
imul
push
enter
fcmovnu
fimul
sbb
iret
mov
jmp
cmps
push
adc
ret
sub
pusha
lds
leave
lods
enter
or
cmp
mov
and
mov
adc
add
mov
sbb
out
xchg
fldz
bound
clc
xlat
in
out
cmp
in
ins
mov
ror
push
out
iret
inc
popa
jmpw
push
pop
addr16
rcl
sub
fs
pop
sub
pop
dec
lea
push
pop
lahf
lods
inc
test
dec
aaa
xor
(bad)
mov
idiv
mov
dec
clc
mov
jnp
fcomp
ror
jne
fldln2
adc
(bad)
loope
sub
xchg
sbb
and
pop
ds
inc
cmps
outs
dec
and
movs
lea
popa
imul
ror
push
adc
pop
pop
xchg
in
or
clc
pop
es
inc
daa
inc
test
cmp
xor
out
push
retf
leave
lock
mov
(bad)
out
scas
inc
inc
pop
pop
cli
lahf
mov
mov
in
xchg
test
int
lea
out
loopne
ja
or
mov
push
mov
adc
cmp
pop
sub
enter
inc
int
lock
push
inc
scas
mov
pop
add
add
dec
add
out
mov
daa
stos
loop
mov
sbb
xchg
sbb
mov
(bad)
push
push
xchg
shld
xor
mov
rol
pop
fs
shl
pop
sbb
push
pusha
or
scas
xor
jns
out
jl
ret
cdq
cmc
xor
lods
dec
inc
mov
xor
pop
(bad)
fisub
xor
adc
push
out
mov
mov
gs
add
jp
ret
push
pop
mov
inc
jge
sti
and
sub
pushf
sub
cmp
cmp
ins
jo
mov
sahf
cmp
push
push
js
jo
nop
cmp
or
mov
push
fldenv
and
cmp
hlt
test
adc
movs
shl
stos
das
movs
inc
cmp
jae
dec
out
push
loopne
jno
mov
clc
cli
adc
icebp
mov
push
lock
xchg
jecxz
hlt
jns
scas
lahf
not
jno
(bad)
loope
loopne
imul
jecxz
add
or
jmp
lahf
inc
push
inc
fist
cmp
sub
xlat
xor
cld
loope
(bad)
(bad)
outs
dec
dec
mov
jle
inc
xor
imul
cs
sar
inc
xor
fnstenv
gs
aas
test
ret
aam
and
xchg
dec
pop
mov
mov
pop
jbe
push
fs
jae
loope
(bad)
ja
pusha
jp
iret
into
movs
mov
sub
call
iret
addr16
xchg
fwait
vmread
push
and
in
(bad)
or
in
fwait
cmp
cmps
not
outs
pop
ficomp
fcom
mov
and
adc
shr
add
scas
xchg
icebp
into
add
mov
aas
(bad)
cld
repz
aas
(bad)
cld
repz
inc
js
xchg
es
iret
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jno
pop
inc
in
shl
lea
add
xchg
xlat
and
test
add
mov
cmps
xor
nop
push
or
je
push
fstp
mov
adc
fistp
enter
add
sti
xor
xchg
(bad)
inc
inc
sbb
fisubr
jecxz
pop
shr
sbb
xlat
push
xor
pop
add
shl
aaa
xchg
cmps
add
jo
jns
sub
inc
cmps
div
ja
outs
sar
pop
cdq
cli
adc
(bad)
repnz
xor
push
fld
hlt
jecxz
xchg
or
inc
leave
mov
sub
push
imul
xor
movs
lds
aaa
test
mov
cmp
iret
in
sub
pushf
cmp
test
or
sbb
push
dec
xor
das
xchg
mov
int3
or
jg
mov
scas
(bad)
jl
int
shr
mov
in
stos
add
cs
aas
mov
retf
push
sbb
test
int3
xchg
icebp
scas
inc
imul
(bad)
jne
aaa
push
xchg
cli
push
xor
mov
xor
(bad)
ds
(bad)
xchg
add
jmp
test
xchg
xchg
sbb
js
pop
fsubp
and
lock
icebp
pop
mov
stc
mov
call
jge
enter
or
and
dec
loop
jbe
jno
push
pop
in
mov
call
mov
push
pop
push
setbe
cwde
adc
inc
shl
les
sub
rcr
or
fisubr
call
pop
mov
cmp
enter
jl
dec
cmp
repz
data16
into
out
mov
push
std
sub
icebp
mov
adc
ss
dec
xchg
xchg
(bad)
mov
add
int3
int3
pusha
test
mov
cli
ja
arpl
add
pop
mov
aas
test
pop
cli
mov
dec
jl
dec
fs
cmps
in
mov
push
add
jb
cld
jmp
or
adc
shr
cmps
mov
icebp
mov
dec
inc
mov
and
mov
push
mov
call
cmp
push
push
push
shl
add
lock
or
and
movs
les
(bad)
in
sar
fistp
jne
js
fwait
xchg
mov
xlat
push
ja
shl
les
or
and
jns
popf
call
int3
jle
rep
dec
enter
or
fild
stc
push
cs
jb
add
sar
jbe
ss
enter
popa
jmp
adc
dec
mov
loope
(bad)
ins
imul
jle
mov
jno
ja
int
fcmovne
jl
pop
hlt
or
out
mov
ds
jnp
adc
mov
mov
leave
out
or
add
je
rcr
cmc
sub
cmp
fld
in
mov
pop
pop
jp
movs
iret
ss
les
ins
call
out
pop
xchg
sbb
(bad)
jns
pushf
mov
push
mov
fsubrp
mov
addr16
(bad)
stc
div
and
add
mov
push
adc
cmovge
push
mov
jg
mov
out
jmp
loopne
pop
inc
outs
xchg
outs
mov
pop
push
push
or
loope
int
loopne
push
mov
ins
or
pop
push
push
pop
pop
jge
jns
inc
pop
fninit
add
adc
mov
add
imul
sub
dec
inc
mov
and
cli
int3
(bad)
cmps
and
mov
cwde
outs
push
sub
sbb
sub
xchg
push
stos
dec
int3
add
(bad)
xor
nop
push
fnstcw
retf
push
into
in
fnstcw
mov
mov
mov
lea
scas
clc
sub
cmc
pop
mov
lmsw
cld
std
pushf
dec
test
es
js
mov
es
pop
fnstsw
mov
mov
xor
sbb
stos
rcl
jbe
retf
xlat
cs
sbb
push
out
cmp
ds
js
mov
fld
fsubr
stos
cmps
js
mov
repz
dec
std
and
or
xchg
push
sti
les
cmp
cmps
push
in
(bad)
lods
jne
jl
rcr
lds
movs
add
jp
push
fadd
push
mov
xchg
jmp
ret
xchg
retf
bound
ds
cdq
and
movs
inc
push
je
(bad)
shl
or
pop
stc
fwait
push
or
aam
(bad)
call
ja
jb
pop
outs
test
retf
push
sub
pop
or
lea
outs
jmp
mov
lods
mov
push
mov
or
cmps
or
fistp
jge
aas
jp
enter
push
inc
mov
mov
test
inc
jmp
sbb
bnd
lds
repz
mov
(bad)
std
mov
ficomp
or
ins
mov
data16
popa
(bad)
stc
adc
sbb
jle
retf
jae
push
int
jmp
stos
adc
std
inc
pushf
jmp
push
or
fcom
stc
or
push
jnp
out
add
setno
or
das
mov
call
repz
ret
cdq
pop
adc
xchg
dec
and
dec
hlt
jno
aam
fist
or
div
mov
adc
lds
xchg
inc
pop
pushf
mov
ds
xor
(bad)
jae
lods
into
pop
jo
in
dec
(bad)
mov
dec
dec
movs
packsswb
aam
inc
test
pop
pop
hlt
jl
idiv
mov
jne
xor
in
test
xor
xchg
mov
dec
pop
pop
shl
std
test
dec
mov
mov
fwait
mov
lods
cmp
enter
xor
cs
mov
(bad)
retf
fwait
dec
fsub
or
xor
mov
inc
push
pop
xor
pop
or
rcl
jp
(bad)
std
push
xor
and
push
mov
or
stos
loope
xchg
lahf
xchg
sbb
test
sar
jp
neg
repnz
adc
jle
mov
aas
pop
mov
sbb
xchg
xchg
mov
aaa
jmp
xchg
pop
jb
mov
xchg
fcomp
lahf
jge
xor
push
mov
mov
sub
xchg
dec
push
xor
pop
add
stos
mov
push
mov
mov
xor
xlat
cmp
mov
aad
test
inc
mov
pop
xchg
cdq
sbb
or
sub
out
pop
add
lods
mov
push
repnz
fisub
jp
pop
adc
test
push
cwde
(bad)
pop
(bad)
sbb
jmp
pop
push
out
push
popa
xor
pop
sbb
adc
repnz
xchg
or
shl
mov
stc
cmp
movs
or
scas
cmp
lea
jge
dec
jmp
jmp
mov
ret
jae
sahf
jbe
cs
jae
popa
mov
int3
lock
xchg
cmp
cmps
add
dec
xchg
push
sub
dec
movs
aaa
movs
test
push
push
push
aam
ret
sub
cmp
repz
int
or
daa
adc
in
out
out
ret
cs
sub
jle
sbb
xchg
pop
xchg
add
cli
or
gs
mov
test
sar
push
call
push
or
jne
sub
int3
inc
or
dec
jecxz
leave
cmps
das
fdiv
sub
retf
(bad)
mov
pop
mov
jmp
jl
dec
add
das
ror
out
pushf
jg
stc
movs
outs
loop
cld
clc
outs
inc
mov
push
(bad)
fnstsw
fwait
jbe
hlt
cdq
mov
dec
mov
sbb
pop
out
movs
(bad)
stos
jmp
nop
mov
in
pop
mov
or
mov
lods
inc
clc
retf
dec
sahf
out
mov
cmp
scas
xor
shr
pop
jmp
out
fwait
retf
outs
fbstp
movs
out
loop
and
outs
cs
sub
adc
push
dec
cmp
lock
and
inc
ja
mov
shl
mov
push
pusha
push
mov
dec
cld
sub
and
fdivrp
mov
(bad)
inc
or
stos
mov
popf
fstp
push
sbb
inc
inc
cmp
ror
pop
jbe
(bad)
xchg
aad
addr16
mov
add
rcl
and
icebp
or
cli
sub
mov
test
add
cmps
mov
out
inc
add
cmp
fbld
push
jno
pop
pop
jb
xchg
sahf
pop
outs
dec
(bad)
mov
cs
xor
aaa
(bad)
mov
stos
ja
adc
mov
imul
fdivrp
movs
and
pop
xchg
std
cli
push
scas
mov
mov
rol
or
inc
mov
jmp
out
aad
rol
mov
or
push
add
fwait
int
fdiv
cmp
inc
inc
ficom
pop
xchg
stc
jge
push
lahf
dec
je
mov
ficomp
repnz
stos
inc
movs
ret
call
add
sbb
pop
fstp
lods
adc
pop
dec
xchg
xor
sbb
xchg
xor
sub
test
cvtps2pi
rcr
sbb
arpl
inc
test
(bad)
mov
(bad)
leave
add
stc
jbe
retf
lock
sbb
cmp
pop
cmps
jbe
or
cmc
imul
or
ins
mov
nop
loope
jb
lods
xchg
xor
ret
xor
xchg
stc
fstp
dec
sub
cmp
repz
addr16
fild
mov
or
and
retf
cdq
adc
sub
pop
shr
fcomi
sbb
adc
out
push
jb
cmp
or
jmp
addr16
test
mov
repz
jae
test
and
imul
shl
or
fidivr
ret
push
xor
lock
mov
sub
pop
cli
sbb
mov
inc
mov
add
or
aas
dec
leave
pushf
rcr
pop
dec
dec
std
movs
fld
stc
sbb
popa
div
ficom
in
sub
jmp
bound
mov
loopne
ficomp
mov
loope
xchg
aaa
bound
inc
mov
in
mov
mov
(bad)
dec
xchg
popf
jle
ret
sbb
add
fwait
pop
xchg
sahf
outs
lahf
mov
mov
ss
sub
lahf
mov
(bad)
out
popf
ror
cmps
cld
jmp
dec
fs
(bad)
je
fucomi
xchg
cmc
push
push
popf
cs
inc
dec
clc
pop
lods
sbb
cdq
enter
aad
pop
icebp
xlat
hlt
xchg
cmps
pusha
dec
sub
stc
xchg
imul
cmp
mov
stos
retf
cmp
aaa
xchg
movs
inc
mov
daa
jmp
fstp
ret
lods
ds
inc
or
mov
jnp
dec
lock
imul
imul
imul
repz
cwde
cmps
push
cmp
dec
sbb
aaa
jmp
or
fmul
fbld
fsubr
xor
or
ja
cmp
and
mov
(bad)
jmp
aas
and
jecxz
ja
sub
lods
out
adc
dec
xchg
out
pushf
mov
xchg
xlat
dec
pop
(bad)
xchg
hlt
enter
cmps
scas
in
mov
call
jge
(bad)
retf
jno
sbb
pop
mov
push
dec
not
and
popf
xchg
inc
jb
mov
sahf
fs
je
mov
cwde
cmps
jae
mov
scas
or
pop
sbb
out
in
outs
inc
mov
pop
std
xchg
int
(bad)
pop
pop
xchg
sbb
mov
cmc
ss
daa
sbb
push
repnz
xchg
mov
call
push
pop
clc
pop
test
cmp
(bad)
(bad)
ins
mov
cmp
xlat
adc
mov
push
in
loopne
pop
retf
cmp
fsubr
mul
sbb
xchg
hlt
xchg
or
lds
shr
push
inc
fidivr
or
inc
jmp
ret
jo
sbb
add
pmulhuw
fstp
and
cld
jb
aam
les
mov
ficom
mov
xor
sub
xor
nop
dec
sbb
pop
aaa
dec
dec
(bad)
jb
mov
cmp
mov
test
es
imul
xor
jmp
into
push
lahf
xchg
jmp
mov
bound
ds
addr16
xor
push
pop
push
scas
and
addr16
enter
daa
jg
std
xchg
std
mov
xor
adc
add
mov
sbb
mov
fdivp
out
into
jl
jge
ja
inc
or
pop
mov
pop
jbe
imul
mov
pop
jnp
lds
mov
xchg
stc
movs
pop
and
add
pop
mov
scas
inc
test
cmp
sar
mov
mov
fsubr
test
xchg
stos
jle
adc
je
dec
cwde
xchg
cmp
inc
jae
loop
hlt
mov
dec
aas
(bad)
xor
cmp
and
rcr
jl
sub
inc
out
mov
xlat
and
mov
fild
imul
cmps
mov
inc
cmps
mov
shl
bound
repz
bound
out
fadd
xchg
scas
pop
fbld
rol
jnp
pop
in
or
push
xchg
stc
and
sbb
xor
cmps
xchg
xor
xor
sub
mov
loop
ins
inc
xlat
xor
pop
addr16
xor
jmp
(bad)
lea
cmp
push
cli
lea
cmp
adc
sbb
mov
mov
cmp
lahf
jg
stc
out
jg
stc
jg
add
add
aas
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loopne
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jb
pop
inc
in
shl
aam
add
loopne
xor
jb
addr16
sub
lods
in
cmp
xor
jnp
out
cmp
faddp
loope
push
data16
pushf
stc
inc
inc
pushf
jns
inc
icebp
(bad)
sbb
(bad)
ltr
cmp
fild
push
mov
push
das
jae
cmps
add
call
mov
rcr
ret
xor
outs
xchg
xor
sub
imul
pop
jae
sahf
out
les
lods
fdivr
dec
shr
popa
ins
fnstcw
inc
(bad)
int3
in
cmps
call
popf
jbe
(bad)
adc
das
mov
and
xchg
or
adc
mov
lods
outs
jl
jns
ds
pusha
sub
aad
inc
jmp
sub
aad
pop
dec
adc
repnz
mov
or
xchg
(bad)
and
adc
mov
scas
mov
pop
sbb
test
push
inc
cmp
pop
(bad)
or
inc
cmc
jb
arpl
lahf
in
add
add
ror
es
and
(bad)
sub
or
mov
in
clc
lods
retf
scas
inc
fsub
xor
cs
mov
fidiv
stos
jp
stc
add
shl
inc
jb
int3
popf
es
mov
sti
pop
loope
jg
xchg
add
pop
int
push
or
inc
dec
xor
inc
mov
jns
cmp
(bad)
ds
out
adc
retf
cwde
adc
jmp
das
dec
adc
jns
push
stc
sub
dec
rol
jne
or
push
ret
pop
aaa
sub
sbb
push
pop
pop
sub
cmp
or
cwde
adc
push
mov
pop
jmp
aas
out
lea
mov
adc
pop
loop
xor
pop
lods
cmp
iret
jbe
and
pushf
lods
lock
mov
lods
mov
sbb
repz
xchg
lea
out
push
adc
mov
neg
fucom
jp
repnz
pushf
sbb
jae
jae
(bad)
scas
ret
and
jbe
sar
adc
sahf
bnd
adc
(bad)
cwde
mov
fstp
dec
xor
ret
push
mov
test
jo
shr
dec
cwde
mov
xor
fcmovb
push
mov
sbb
aad
fcomp
or
mov
mov
xor
add
inc
je
pop
out
push
mov
push
int3
jno
fstp
stos
fbstp
setp
stos
retf
sahf
push
pop
icebp
or
dec
stos
fldenv
push
mov
(bad)
ds
jnp
cmp
adc
sub
(bad)
pop
pop
retf
je
imul
adc
fimul
pop
fisub
cld
push
les
fisttp
jmp
icebp
jne
mov
(bad)
sbb
and
repnz
aaa
dec
pop
pushf
and
in
repz
jns
into
fnstsw
out
mov
mov
xor
repz
sbb
inc
stos
sub
fdivp
(bad)
clc
aas
or
mov
and
or
ret
pop
jge
mov
test
pop
push
cmp
test
add
jno
fcom
cmp
mov
xor
inc
movs
into
pushf
xor
shl
popa
jbe
rcl
and
sub
fs
call
sbb
test
inc
mov
stos
fadd
sahf
fcomp
ss
imul
jp
mov
xchg
fcomp
pushf
adc
fdiv
jo
xlat
aas
mov
xor
dec
sbb
(bad)
jnp
js
cmp
dec
out
jbe
dec
mov
(bad)
push
jle
cmc
pop
jmp
mov
push
push
sub
loop
(bad)
(bad)
mov
pop
popa
sbb
sbb
fiadd
lock
cmp
scas
dec
mov
jb
es
mov
adc
adc
inc
shl
sbb
add
cwde
not
mov
mov
xor
out
loopne
and
adc
(bad)
es
(bad)
int
pop
jo
sti
adc
dec
mov
jns
ror
aad
test
std
mov
dec
aam
inc
sbb
(bad)
push
fisub
iret
bound
adc
in
jge
sub
out
mov
fisttp
dec
pop
jb
mov
std
ret
ja
ins
push
call
cmp
mov
das
enter
stc
add
into
sahf
mov
popf
mov
dec
popa
sub
(bad)
leave
(bad)
push
lods
jo
and
push
xchg
jb
test
xor
lods
jge
bound
cmp
xor
cwde
je
and
daa
stos
out
cmc
push
pop
call
fwait
mov
add
cwde
push
jg
xor
or
mov
popf
out
loop
mov
push
pop
sub
cmp
cwde
pop
adc
int
inc
repnz
je
mov
lds
repz
test
(bad)
xchg
mov
aaa
jns
adc
pop
into
hlt
ja
mov
ins
movs
popa
or
pushf
inc
in
repz
sub
push
test
sahf
sub
js
cmovbe
adc
sti
jp
mov
sbb
dec
mov
cmp
mov
test
movs
fmul
daa
test
js
stos
cmp
lods
pop
mov
sbb
pop
pop
ins
cmps
ret
test
xchg
jns
imul
fwait
mov
std
ins
repz
test
cmp
jno
push
lods
xor
test
mov
idiv
test
mov
lods
(bad)
lea
ins
imul
jmp
xor
lds
pop
xor
lds
xchg
pop
out
ror
in
fistp
loop
cmp
shrd
mov
daa
pop
mov
inc
xor
mov
int3
ret
sub
mov
scas
into
cmp
test
sub
fstp
outs
test
mov
or
mov
ss
inc
movs
fst
xlat
xchg
dec
jmp
arpl
sbb
lds
in
inc
sbb
movs
pop
cs
test
js
jne
jno
sti
push
imul
loop
sti
sub
test
fsubr
mov
pop
inc
xchg
mov
pop
xor
pop
cld
cmc
aas
leave
ss
repz
pop
loope
mov
mov
mov
div
jb
scas
int
sbb
into
je
(bad)
shl
xor
push
das
xor
xor
push
test
jp
inc
sti
and
sahf
xor
and
mov
outs
jle
ja
cwde
mov
call
lods
xchg
ja
push
inc
std
test
sub
mov
shl
fstp
addr16
shl
test
push
pop
and
mov
cwde
and
add
pop
mov
inc
enter
cmp
jnp
cmp
mov
sub
stc
inc
mov
out
mov
sahf
jmp
sbb
sahf
sti
add
lahf
adc
cmp
and
dec
mov
jbe
(bad)
mov
aaa
jno
cmp
jle
es
inc
add
test
(bad)
outs
sbb
stos
test
sub
adc
test
sti
dec
xor
add
push
sti
loopne
pop
js
pop
call
adc
aas
sbb
inc
xor
inc
iret
mov
and
inc
inc
leave
lea
mov
jl
into
out
stos
ins
out
pop
jbe
das
mov
xor
jne
fsqrt
or
sub
sub
inc
sbb
outs
stos
xlat
cmp
mov
movs
mov
inc
in
mov
jnp
ds
adc
cmp
fwait
int3
xchg
mov
xchg
cmp
jmp
mov
xchg
popa
inc
and
jmp
inc
mov
mov
js
mov
jg
cmp
jno
faddp
mov
cmp
out
sbb
push
mov
mov
or
xchg
repnz
dec
pop
cli
call
push
inc
rcr
iret
mov
icebp
test
loopne
pop
mov
jp
aas
dec
retf
cld
adc
mov
xchg
(bad)
sbb
dec
ror
dec
iret
jns
and
das
(bad)
std
sub
into
dec
push
xor
mov
loopne
addr16
push
in
inc
and
or
lods
test
push
lock
mov
add
in
sub
dec
add
push
or
dec
fisub
shl
test
fdivr
ins
call
dec
rcl
in
xchg
sbb
out
sub
adc
cmps
mov
add
sbb
in
and
imul
pop
sti
add
popw
xor
mov
mov
mov
sti
pop
ins
mov
test
out
push
lods
sub
sub
nop
popf
mov
xchg
pop
xor
xchg
mov
sbb
jbe
dec
add
inc
enter
xlat
mov
not
movs
sahf
clc
lods
das
push
dec
(bad)
(bad)
mov
sub
and
dec
sbb
(bad)
inc
in
in
jmp
popa
sbb
pop
and
fnstcw
push
scas
pop
iret
pop
imul
in
push
adc
pusha
retf
jnp
inc
xor
mov
pop
fst
inc
mov
xchg
das
loop
mov
add
sbb
xchg
nop
js
adc
pop
mov
or
pop
test
mov
into
dec
add
ja
add
push
dec
hlt
jbe
cmc
inc
movs
cmps
cmps
sub
push
adc
push
loope
cmp
push
ins
adc
mov
push
add
popa
mov
mov
mov
shr
lods
or
push
xchg
or
or
mov
jo
ds
sub
dec
inc
or
or
xor
aaa
adc
mov
jl
and
enter
mov
aad
jns
push
or
les
and
fwait
int
pop
mov
scas
push
das
shr
out
ss
sub
ficom
or
xor
stos
and
xor
fcomip
neg
push
mov
fs
fwait
test
clc
push
dec
xchg
fild
lds
mov
rol
mov
hlt
add
or
retf
bound
mov
call
mov
inc
or
pop
(bad)
jae
sbb
leave
xchg
push
outs
mov
jl
jae
dec
jmp
or
aas
xchg
mov
movs
adc
sub
test
adc
dec
push
dec
js
sar
lahf
jcxz
std
adc
sub
xor
out
fst
adc
popf
dec
les
jo
push
pop
cs
and
stos
mov
mov
push
sub
popf
cs
jmp
addr16
std
push
cmc
push
xor
cmps
sub
pop
cmps
add
cdq
fcmovnbe
leave
leave
or
into
fdiv
push
jo
fcmove
scas
cmps
cs
pop
cld
xor
out
or
fidiv
out
dec
push
dec
cli
pop
lea
pop
movs
ss
xor
data16
jb
loop
lea
cmp
popf
cmp
cmc
fiadd
shl
movs
cld
mov
or
pusha
nop
repz
ins
mov
mov
ret
pop
cmp
sbb
xchg
(bad)
in
popf
add
js
dec
inc
ds
jp
mov
ds
gs
fsub
in
ja
push
adc
(bad)
cli
lahf
sahf
jbe
out
ss
outs
add
fwait
jb
push
push
jo
pop
pop
pop
xchg
mov
jno
pop
push
neg
push
cdq
out
inc
call
jnp
jecxz
mov
xchg
(bad)
call
pop
xor
sbb
stc
pusha
lock
in
(bad)
add
pop
mov
fst
pusha
js
scas
pop
imul
test
dec
jle
dec
push
pop
mov
adc
call
mov
in
movs
xchg
push
ss
fnsave
push
jle
sbb
imul
cdq
outs
jbe
ins
int
sub
push
movs
cmp
cmp
js
in
pop
ss
jns
or
or
(bad)
(bad)
cdq
or
jle
xor
xchg
sbb
adc
push
popf
push
and
jnp
xchg
outs
add
in
mov
sub
dec
mov
xlat
repnz
cmp
pop
outs
imul
and
pusha
push
arpl
rcr
sbb
dec
(bad)
ins
mov
pushf
xor
cmp
xchg
out
xor
jbe
loopne
shl
ret
int
addr16
or
mov
inc
fwait
movs
push
cmps
jge
xor
nop
inc
imul
aas
rcl
fwait
je
xchg
stos
outs
cmp
mov
xchg
adc
push
mov
fwait
xchg
lods
dec
ds
adc
ds
mov
sbb
not
iret
add
mov
mov
mov
push
ds
daa
adc
cmp
pushf
cli
into
repz
pop
dec
xor
test
shr
mov
sbb
(bad)
push
addr16
adc
js
into
pop
adc
in
(bad)
jecxz
(bad)
sub
and
scas
inc
inc
add
inc
out
jae
push
mov
fisub
aaa
popf
cmp
inc
in
adc
xchg
adc
mov
scas
xchg
fst
fld
mov
imul
sub
arpl
les
sub
lods
movups
or
(bad)
out
and
mov
fidivr
mov
xor
push
pusha
jmp
inc
mov
push
fistp
or
fisubr
dec
or
dec
fld
lods
jno
outs
and
fdivr
sbb
lahf
and
xchg
pop
xor
in
call
cmp
push
retf
movs
out
mul
mov
mov
je
shl
push
aam
cli
outs
loopne
jg
stc
out
jg
stc
jg
add
add
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loop
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
je
pop
inc
in
(bad)
mul
aam
ret
add
mov
in
push
popf
xchg
cdq
jge
jge
fnstcw
mov
xchg
iret
cmp
test
push
xchg
mov
in
adc
lods
mov
jno
(bad)
iret
js
call
loopne
xchg
cmps
or
xchg
or
imul
or
mov
xchg
pop
xchg
add
dec
in
push
mov
jns
push
pop
fst
fstp
sti
ins
fwait
arpl
shr
cwde
xchg
repnz
jne
outs
xchg
arpl
out
(bad)
in
add
outs
dec
jb
stos
xchg
cld
jne
mov
lea
icebp
mov
loop
jl
push
cmps
sub
sub
xchg
mov
std
inc
repnz
cmps
or
adc
mov
push
xor
mov
dec
stc
push
into
(bad)
pop
jno
int3
xchg
mov
inc
fld
mov
rol
cmc
mov
push
(bad)
lods
cld
retf
cli
pop
jae
(bad)
(bad)
stos
add
sub
xchg
test
mov
add
mov
xchg
arpl
jecxz
inc
xor
mov
xchg
inc
mov
ror
lgs
dec
int3
cs
jns
int
shl
cli
stc
jno
les
and
vcvtss2sd
bnd
push
and
sub
push
cdq
pop
fcmovne
cmp
outs
(bad)
push
sbb
shr
add
bound
push
sub
mov
repnz
dec
cdq
dec
jle
sar
jmp
xchg
je
fwait
ds
test
pop
sti
int3
loopne
nop
xor
xchg
and
mov
dec
push
or
pop
test
mov
pushf
xchg
jmp
xchg
inc
pop
shl
sti
sub
adc
test
or
push
and
enter
xchg
sbb
fs
inc
rcl
jg
fisubr
pop
jnp
pop
imul
(bad)
mov
cs
loope
jb
jne
dec
xlat
and
sub
xchg
je
sub
sbb
jnp
inc
fsub
aaa
pop
adc
push
out
inc
pop
cmp
repnz
mov
add
icebp
pop
cmp
arpl
inc
cmc
xchg
outs
cmc
inc
cmp
or
bound
retf
mov
fcmovnbe
push
adc
adc
add
dec
repnz
jne
and
ror
dec
sbb
sub
test
out
in
pop
jb
xor
js
inc
lods
pop
or
retf
adc
adc
iret
lahf
pop
mov
pushf
mov
and
pop
data16
hlt
sti
stos
stos
jle
mov
push
lock
sub
sbb
pusha
xlat
out
mov
sub
jbe
dec
fsub
push
jl
rep
cs
push
jnp
cmp
popf
cmps
pop
mov
clc
(bad)
jo
and
push
jnp
repz
scas
push
mov
cmp
daa
jae
or
js
das
mov
scas
and
out
jg
call
test
ss
adc
adc
cmp
xchg
mov
jae
or
scas
xchg
repnz
mov
daa
xlat
ret
in
jmp
mov
and
popf
dec
inc
stos
shl
push
movs
pop
jb
movs
mov
loope
pop
test
fwait
mov
fmul
aas
sub
push
cmp
pop
loop
lods
sar
enter
hlt
add
cwde
js
pop
jns
shl
cmp
into
fcmovb
mov
aad
outs
sub
inc
fwait
jo
cmps
cwde
ret
not
iret
push
push
arpl
adc
sub
sbb
cwde
mov
jae
idiv
push
movs
push
shl
cmps
sahf
movs
jecxz
fisub
in
or
push
and
bound
call
mov
icebp
or
stos
clc
fcmovne
aad
or
mov
xor
mov
inc
mov
mov
mov
iret
push
pop
fidivr
int3
ds
jns
mov
lods
jg
rcr
mov
xor
out
mov
adc
pop
sub
mov
adc
jl
mov
mov
repz
cwde
push
imul
pop
aam
test
pop
mov
cmp
sti
jbe
in
out
jecxz
inc
pop
add
(bad)
fadd
push
mov
xchg
mov
push
in
into
dec
cmc
dec
lea
xor
or
mov
ins
loopne
(bad)
int
push
inc
cwde
outs
adc
lds
pop
dec
mov
iret
(bad)
clc
ret
bound
add
add
lea
aas
or
in
push
mov
cs
gs
or
bound
sahf
cmc
sbb
xor
jmp
and
(bad)
(bad)
cmp
sub
xor
xchg
shl
xor
(bad)
loopne
push
sbb
adc
nop
ds
mov
jns
dec
sbb
inc
imul
(bad)
mov
mov
fst
or
pop
inc
add
pop
rol
stos
jo
out
sub
xchg
jmp
(bad)
dec
leave
test
retf
out
pop
movd
cli
inc
ins
jecxz
aaa
sub
push
ja
cs
aad
outs
sub
js
fidiv
push
cmps
jbe
pushf
pusha
sub
daa
or
shl
daa
es
call
out
or
pushf
sbb
ja
xchg
jmp
fs
bound
test
lods
mov
sbb
nop
mov
cmc
lea
mov
xchg
mov
inc
das
scas
mov
pop
or
sti
cdq
jp
arpl
mov
sbb
push
mov
scas
adc
fadd
hlt
cmp
mov
(bad)
mov
call
(bad)
push
sub
and
and
sub
in
pop
das
dec
jnp
(bad)
or
daa
out
test
ins
cmp
rcl
cwde
stc
(bad)
out
adc
into
les
push
js
outs
mov
cdq
xor
mov
jns
ret
pop
cld
xchg
into
xlat
(bad)
or
dec
or
cwde
pop
sub
inc
xor
mov
nop
mov
test
fbstp
test
and
mov
popf
mov
xchg
jnp
pop
pop
xor
enter
xor
sbb
lds
loope
dec
aam
jns
hlt
aaa
(bad)
and
add
stos
in
sahf
lock
loop
js
push
ret
sub
mov
cli
out
ficomp
push
dec
sub
push
(bad)
push
sub
pop
cmp
sub
mov
test
dec
ins
neg
pop
(bad)
jl
inc
push
cmps
lahf
xchg
cld
mov
in
in
push
ret
mov
lea
gs
mov
lock
jns
xor
cdq
add
cmp
add
jb
fidivr
loop
out
push
(bad)
fcomp
test
push
mov
data16
(bad)
sub
sbb
lds
call
push
out
push
rcr
mov
sub
aaa
and
inc
cmp
leave
movs
cmp
sub
sbb
cmps
stc
sub
dec
push
mov
ins
cmp
mov
fisttp
gs
retf
(bad)
(bad)
mov
inc
cmp
mov
fsubr
sbb
adc
das
jae
and
lds
jns
call
ja
sbb
push
ja
fldenv
aad
or
push
repnz
mov
xor
jnp
mul
push
lods
fadd
push
adc
mov
push
bound
or
pusha
push
inc
jmp
mov
sar
lds
icebp
fld
movs
shl
ins
xor
mov
add
stc
outs
sbb
js
jle
rcl
cwde
mov
in
into
pop
rol
sbb
jge
(bad)
mul
xchg
mov
(bad)
leave
pop
imul
xor
sets
and
std
adc
pusha
rol
jo
or
jp
aaa
cmp
popf
push
stos
mov
call
inc
pop
push
and
xor
pop
jle
loope
repnz
icebp
daa
aas
and
(bad)
push
daa
out
into
push
add
lods
inc
sub
push
in
and
call
adc
rol
push
(bad)
push
and
pop
psrlw
es
inc
out
adc
xor
cwde
ins
jns
fisttp
mov
retf
in
xor
(bad)
cmp
popf
in
movs
push
aaa
ins
daa
retf
out
fwait
mov
outs
pop
xor
inc
adc
outs
bound
movs
std
cmp
nop
cwde
pop
in
(bad)
rcl
into
adc
or
arpl
arpl
fist
std
adc
inc
mov
in
popa
mov
or
inc
pop
rol
sub
mov
repz
sub
(bad)
mov
retf
mov
push
mov
fisttp
ret
xchg
mov
imul
jp
in
push
xchg
retf
cmp
dec
xchg
and
leave
mov
add
(bad)
fsubr
mov
mov
cmc
ror
inc
mov
jg
out
ss
mov
in
add
jns
ss
jmp
shl
add
neg
xor
pop
jb
(bad)
sar
loop
adc
mov
loop
ins
pushf
push
(bad)
dec
out
xchg
mov
mov
scas
xor
jle
mov
and
nop
shl
sti
enter
add
mov
out
dec
sbb
and
xchg
cmp
leave
and
loop
xchg
or
or
retf
or
jne
sbb
enter
xor
retf
call
cmps
cli
xor
mov
cmp
xlat
js
pop
hlt
enter
sub
fwait
mov
scas
pop
pop
pusha
adc
mov
add
jnp
inc
xor
pop
sbb
pop
mov
jp
neg
movs
mov
xrelease
(bad)
das
dec
fidiv
sbb
push
ja
dec
sub
pop
and
data16
push
aas
pusha
fs
mov
repnz
mov
mov
jno
pop
(bad)
ins
aas
fstp
adc
xchg
stos
cmp
dec
mov
jns
pop
jnp
loope
mov
xlat
push
mov
call
or
ins
add
div
loope
dec
shl
dec
xchg
push
push
sub
fistp
pop
test
in
xor
xor
lods
rcl
mov
retf
mov
mov
add
and
stos
std
mov
call
mov
mov
jl
sub
xor
(bad)
addr16
sbb
push
jo
lock
fmul
dec
push
retf
(bad)
jecxz
dec
in
neg
dec
out
sbb
div
outs
gs
push
mov
in
jns
fsub
fdiv
push
mov
xor
jle
jnp
test
pushfw
push
rcr
rol
mov
repz
add
cmovae
adc
rol
adc
fisub
outs
pusha
ret
pop
repnz
add
je
mov
dec
adc
data16
sub
sbb
dec
lods
jl
add
sbb
retf
xchg
les
xlat
adc
mov
fisub
xchg
xchg
and
cmp
cld
mov
mov
pop
mov
cmc
sbb
mov
sbb
or
xor
mov
fistp
inc
jl
lock
add
aas
pop
mov
inc
jmp
call
xchg
jb
mov
ins
int
mov
pop
stc
cmp
hlt
and
mov
pop
in
xchg
pop
mov
mov
xchg
(bad)
pop
or
sub
addr16
cwde
add
cmp
mov
jp
dec
scas
dec
aad
das
pop
std
scas
fnsave
icebp
daa
mov
out
imul
mov
test
dec
mul
jmp
jnp
outs
or
pushf
cmp
pop
dec
icebp
inc
mov
out
cdq
sbb
mov
xchg
inc
(bad)
repz
ds
cmps
enter
int
arpl
gs
xchg
or
cmps
mov
mov
cmps
xchg
test
nop
leave
pop
jl
mov
push
inc
mov
idiv
jb
test
shl
jge
mov
push
call
dec
xor
mov
mov
jp
inc
mov
aaa
loopne
shl
fcomp
dec
sbb
int3
fnstsw
std
lahf
cmc
fisub
mov
mov
mov
cmp
add
scas
mov
cmc
lock
(bad)
xchg
test
fisubr
inc
imul
mov
sub
xchg
sbb
rcr
call
mov
mov
(bad)
in
push
clc
ins
push
js
movs
pop
mov
sub
fnsave
pop
push
div
enter
jno
dec
or
out
adc
inc
pop
xlat
ins
push
push
js
pop
push
mov
push
jns
movs
xchg
not
mov
cmp
xchg
pushf
push
imul
adc
jmp
cmp
inc
push
in
pop
icebp
in
shr
shl
add
cs
inc
ror
jge
xchg
pusha
dec
xor
loop
neg
or
rcl
outs
mov
cmp
pop
fisttp
test
les
ss
cmp
cmp
cmc
fs
mov
rcl
pop
retf
lea
cmp
sbb
imul
arpl
push
cmc
pop
sbb
add
sub
push
mov
ficomp
movs
fwait
icebp
jnp
(bad)
mov
leave
inc
jae
cdq
mov
sub
mov
fstp
gs
mov
addr16
sbb
call
or
lods
inc
xchg
pop
pop
mov
add
sub
cmp
inc
jno
and
aad
enter
jecxz
fnsave
fadd
int3
and
lea
cld
repz
aas
(bad)
cld
repz
aas
call
test
(bad)
ja
test
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
sub
add
add
xchg
out
push
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jno
pop
inc
in
int
and
pop
add
mov
mov
into
ficomp
test
fs
ja
loope
stos
lods
mov
adc
fidivr
jne
int3
in
xchg
mov
stc
ds
repz
scas
jg
add
loope
cmp
xchg
mov
shl
mov
or
sub
test
xchg
and
mov
aaa
outs
lods
pop
dec
sub
mov
ds
fisttp
jno
test
cmp
xor
ins
sahf
jg
scas
and
sbb
xchg
push
sub
dec
mov
test
adc
stc
add
cdq
jmp
dec
call
jmp
out
aaa
pop
pop
mov
or
in
std
repz
adc
pop
fidivr
repz
pop
movs
dec
xor
jb
and
sti
mov
repz
mov
jb
xor
call
fnstenv
push
push
js
in
ins
push
cld
dec
mov
pusha
movs
fwait
sbb
cmp
sub
sub
jecxz
cmps
cwde
xchg
sbb
mov
push
add
out
ss
mov
and
pop
movs
imul
ins
pop
sub
sub
lahf
xchg
pop
jge
jmp
push
jg
fistp
pop
or
repnz
dec
inc
and
(bad)
xchg
ret
jle
mov
vunpcklpd
dec
mov
mov
lods
dec
mov
pop
stos
push
push
(bad)
ss
inc
imul
rol
jmp
push
and
jae
xor
int3
loopne
pop
hlt
push
mov
inc
cmp
mov
ret
pop
int
mov
ins
movs
outs
push
fwait
pop
push
and
or
test
fdivr
mov
ret
push
repnz
and
stos
es
xchg
add
pop
(bad)
jl
stc
cmp
aaa
mov
pusha
mov
repz
(bad)
xor
ins
movs
pop
xchg
push
scas
add
popa
sub
mov
dec
add
inc
or
mov
cdq
fdivr
push
ins
dec
cmp
mov
fwait
push
mov
mov
adc
pop
in
mov
sub
and
or
jmp
mov
es
ds
int
cmp
cmp
and
sub
cmp
movs
cs
adc
movs
jo
mov
sahf
and
cmp
jg
pop
arpl
pop
push
inc
ss
fsub
adc
and
or
ucomiss
loopne
push
jmp
xor
push
out
mov
xor
xchg
sbb
pop
shl
jmp
cwde
sar
sub
inc
sbb
pusha
stc
mov
xlat
mov
jmp
ss
inc
cmp
ret
xchg
xchg
cmp
mov
mov
in
inc
fs
into
lods
dec
xor
hlt
mov
inc
push
gs
sbb
xchg
sti
mov
nop
dec
mov
retf
ins
push
or
mov
pop
dec
push
jns
lods
out
mov
xchg
pop
data16
sub
in
push
pushf
add
aaa
das
addr16
fcmovu
rcl
ja
nop
dec
in
mov
mov
mov
xor
cdq
out
pop
repz
adc
dec
mov
mov
popa
ret
pop
mov
adc
sbb
xor
adc
cmp
sbb
rol
add
sar
jae
arpl
sbb
outs
pop
sar
adc
cmp
dec
sar
fisub
push
and
clc
xlat
out
push
xor
cs
add
jb
call
test
test
call
leave
fild
scas
call
int
shr
das
add
cld
pop
xor
es
inc
xor
dec
aad
sbb
je
jnp
rol
jno
fs
std
cwde
adc
call
repnz
xchg
xchg
push
cmp
retf
add
shr
in
div
push
jns
std
sti
lds
lock
xchg
fcomp
jb
mov
and
gs
fmul
jnp
lods
mov
lea
adc
jl
or
pop
nop
fsubr
retf
fucom
pop
or
enter
cwde
cmp
ins
std
(bad)
xchg
inc
jae
sahf
stos
aas
add
cmps
pop
xor
xchg
data16
aaa
ror
lods
(bad)
pop
ins
cmpps
daa
xchg
inc
stc
adc
(bad)
push
gs
scas
rol
mov
add
and
imul
or
lods
scas
jp
in
adc
aam
xor
ret
mov
fsqrt
mov
retf
cmps
cmp
lds
or
mov
in
aam
jmp
lds
xlat
stc
mov
scas
xor
cwde
pop
jo
add
mov
inc
into
inc
and
mov
int
dec
inc
shr
sub
cmp
lods
arpl
sub
xor
push
push
rol
mov
mov
lods
dec
call
rcl
rcl
sbb
push
out
mov
mov
ins
call
shl
js
in
sub
mov
push
stc
repz
fisttp
dec
mov
lahf
repnz
jecxz
(bad)
call
sub
out
sbb
jg
jle
adc
and
ja
retf
out
adc
inc
xchg
jae
xchg
jb
cmc
(bad)
shl
jns
popa
add
adc
mov
mov
ret
push
push
cmp
inc
pop
inc
call
sub
mov
scas
stos
push
jp
inc
(bad)
loopne
cwde
mov
bound
xlat
leave
dec
loope
fisubr
add
inc
xchg
jle
xor
out
fld
inc
stos
sbb
jb
cmp
mov
aas
inc
stos
in
mov
hlt
pop
sahf
leave
inc
fisttp
imul
adc
push
clc
lock
inc
js
jmp
repz
(bad)
pop
imul
mov
fnclex
sbb
xchg
jno
sbb
mov
fild
test
aas
mov
adc
xchg
jb
movs
mov
xchg
sub
xchg
fsubr
mov
xor
into
add
push
push
ins
jg
dec
or
loop
jg
stos
cdq
inc
pop
cmp
cmc
scas
push
jae
sbb
stos
xchg
pop
iret
cmp
(bad)
aad
add
jne
out
cmp
inc
bound
mov
mov
sub
jmp
push
adc
jmp
ja
in
sub
inc
ja
jp
xchg
scas
inc
test
jl
pop
das
mov
dec
shl
pop
sub
icebp
and
mov
(bad)
mov
sbb
inc
and
xchg
fwait
cmps
pop
test
rcr
mov
sub
aas
out
inc
pop
pop
mov
shr
add
rcr
push
cmp
mov
pop
enter
and
inc
fldcw
or
imul
xchg
xchg
outs
into
in
in
adc
xlat
addr16
enter
mov
icebp
pusha
aam
repz
psubusw
ret
and
adc
movs
or
adc
pop
dec
mov
je
pop
mov
(bad)
call
mov
xor
cwde
in
add
(bad)
xor
call
fsub
and
call
push
adc
clc
std
xchg
test
dec
inc
sub
out
arpl
aas
out
cs
clc
outs
push
mov
adc
gs
mov
pusha
into
cmps
push
pop
bound
jg
cmp
bound
inc
fimul
int
mov
repnz
cdq
std
xor
fadd
cmp
adc
cmps
adc
add
cmp
fldenv
inc
in
imul
scas
outs
mov
mov
jnp
icebp
out
ins
jno
pop
cmp
test
lds
cmp
cmp
adc
sahf
pop
imul
test
ror
and
lods
fldcw
clts
movs
sub
mov
rol
lods
mov
xchg
cmps
mov
popa
jp
xchg
xor
mov
scas
mov
sub
mov
jge
pop
push
into
add
sbb
push
ret
in
cwde
nop
inc
xchg
icebp
sbb
sub
lahf
and
(bad)
xor
aaa
push
jle
movs
(bad)
jmp
xor
int
push
pop
bnd
arpl
loop
imul
and
inc
out
lds
adc
js
rcr
xchg
je
cmp
aam
lods
mov
jge
shl
and
outs
sti
out
(bad)
in
neg
jmp
out
and
adc
fbstp
or
mov
sub
push
sub
lea
cmc
xchg
daa
xor
pop
jbe
mov
push
mov
shl
pusha
and
jl
pop
push
ins
js
sub
ds
push
mov
fwait
pop
push
jnp
shl
mov
jecxz
and
push
mov
mov
cmp
inc
test
xlat
mov
jl
jg
adc
ja
dec
das
rcr
sbb
adc
pop
and
xchg
test
sub
and
fnstsw
test
data16
inc
(bad)
inc
repz
lea
add
les
jmp
jge
and
mov
xchg
mov
mov
jns
xlat
sbb
push
xor
out
xchg
cmps
mov
pop
xor
out
sahf
daa
es
or
mov
lods
stos
or
addr16
jg
cmp
lods
jge
xlat
cwde
pop
push
add
aaa
adc
mov
cli
(bad)
and
sahf
mov
mov
jl
push
mov
ins
loope
xor
pop
and
test
adc
jp
xchg
ficom
mov
mov
mov
out
push
in
pop
call
add
ret
jge
and
das
xchg
sahf
and
outs
std
popa
add
add
xchg
test
cdq
add
sbb
aam
jmp
leave
test
sbb
cmp
mov
and
ret
jl
lods
test
push
sti
cmp
cmc
ins
retf
out
push
cdq
int3
popf
lods
jecxz
leave
es
cmps
repz
ins
sub
push
fidivr
cmp
sbb
dec
pop
jmp
pop
ja
sti
jle
adc
stos
xor
imul
mov
ja
es
jmp
out
mov
dec
fadd
ret
or
out
mov
mov
retf
ficom
cs
adc
ja
mov
rol
jg
lahf
and
repnz
test
sti
xchg
fdecstp
push
bound
das
push
dec
mov
cmp
fucomp
gs
stos
xlat
pusha
xor
mov
lahf
push
ja
xor
push
dec
pop
xor
call
adc
pop
mov
inc
sub
leave
mov
mov
mov
data16
push
test
retf
mov
inc
add
pop
imul
mov
retf
stos
call
inc
jno
jo
out
scas
lea
cmp
mov
test
mov
pusha
adc
pusha
mov
push
push
popa
mov
add
cli
repnz
ins
fsin
sbb
pop
xchg
jmp
mov
int3
test
fld
dec
cmp
mov
ss
pop
or
test
sub
or
mov
mul
and
pushf
push
mov
(bad)
pop
xchg
fs
arpl
sbb
out
cdq
outs
aam
add
lods
push
popa
retf
nop
rcl
mov
mov
sub
and
cmovnp
jae
vpsubusw
stos
sti
scas
lds
mov
and
jb
(bad)
mov
cmp
mov
js
jae
cmps
fnstcw
pop
ja
jp
leave
mov
aas
mov
jp
push
push
adc
cmps
call
ret
jl
inc
mov
mov
jmp
pop
push
xor
out
fidiv
sub
jl
repz
pop
adc
gs
mov
jmp
das
push
retf
lahf
sar
lahf
(bad)
adc
cmp
xchg
xchg
inc
xchg
test
pushf
xlat
push
(bad)
dec
jnp
ret
cdq
jo
outs
dec
lods
and
add
stos
adc
std
imul
lds
outs
lea
dec
xchg
push
dec
(bad)
ds
and
outs
dec
add
pop
(bad)
cwde
lods
adc
adc
sbb
add
pop
outs
fadd
sbb
ror
ins
add
lods
or
push
jae
(bad)
mul
jae
mul
mov
add
fcom
mov
xchg
das
cld
mov
jmp
sbb
inc
xchg
xchg
inc
out
repz
sahf
sahf
cdq
gs
loope
fwait
enter
sub
hlt
inc
inc
fadd
cdq
xchg
mov
inc
or
mov
fwait
xchg
xor
mov
ja
push
addr16
jl
mov
shl
mov
lea
sub
sbb
dec
repnz
pop
adc
fprem
mov
lods
rcl
das
add
mov
loope
jl
popa
jns
mov
hlt
(bad)
aas
iret
mov
int3
add
adc
(bad)
jb
test
int
mov
mov
jbe
mov
lock
out
cmp
call
xlat
cmps
(bad)
jp
outs
and
iret
mov
cmp
pop
call
(bad)
int
sbb
push
lods
daa
data16
loop
mov
mov
repnz
mov
lods
movs
push
fstp
xchg
out
call
je
pop
and
lahf
fistp
test
popa
jecxz
(bad)
scas
aas
cmp
arpl
int
jbe
adc
repz
jecxz
mov
out
push
hlt
xor
adc
sbb
mov
cvtpi2ps
and
in
ins
in
xor
loope
pop
outs
shr
outs
xor
jns
hlt
mov
outs
mov
jle
mov
or
mov
lods
popa
in
xchg
and
inc
xchg
sbb
and
scas
out
jmp
loop
pop
adc
out
xchg
mov
inc
mov
movs
fiadd
(bad)
cld
repz
aas
(bad)
cld
repz
jmp
add
aas
shr
scas
sub
dec
inc
dec
inc
scas
inc
pusha
or
sub
add
add
enter
pop
mov
or
lds
push
push
sti
xor
jl
out
adc
mov
rol
and
mov
out
jg
ret
loop
fsubr
fidivr
sbb
adc
cli
jo
ins
xchg
(bad)
imul
push
dec
ficom
or
fisub
mov
loop
shl
stos
mov
xchg
mov
popa
mov
(bad)
fdivr
lea
adc
rcl
and
add
movs
lss
lods
rol
(bad)
not
das
pop
(bad)
pop
mov
ret
in
retf
and
out
clc
jae
jl
or
sar
(bad)
cmp
xchg
add
pop
mov
fbstp
std
and
jle
cld
mov
inc
mov
xor
dec
sbb
jmp
inc
icebp
call
fisubr
mov
adc
daa
movs
mov
mov
hlt
retf
stos
(bad)
or
in
loope
dec
inc
sbb
pop
mov
jg
loop
cmps
fsubr
pop
addr16
mov
xor
dec
jle
mov
mov
cs
stos
xor
rol
jnp
xor
aas
push
(bad)
imul
shr
xchg
or
neg
lahf
call
mov
cli
sub
sbb
(bad)
cmp
adc
xchg
and
jae
les
test
adc
gs
sahf
or
rcr
mov
push
jnp
call
inc
cmps
mov
and
aaa
sub
and
xchg
mov
(bad)
sbb
jg
test
sub
pop
push
cmp
pop
add
cmp
mov
or
jns
inc
ja
mov
mov
pop
cdq
mov
xlat
mov
in
movs
jg
cli
ins
xor
mov
jnp
push
mov
mov
addr16
jae
cmps
cmp
les
cld
jno
xchg
cmp
ins
jl
ret
xchg
jmp
in
ja
xor
xchg
lods
inc
add
or
inc
pop
fnstsw
or
rcl
nop
addr16
jmp
int3
jl
xchg
inc
mov
or
adc
scas
pop
call
inc
fmul
jns
loop
movs
loop
fld
loope
xlat
jo
bound
ret
popf
add
daa
aaa
jmp
outs
push
popa
jne
or
inc
cmp
sub
(bad)
mov
(bad)
repz
bound
or
cmps
pop
inc
(bad)
pop
out
mov
jge
add
ficomp
cli
neg
scas
lock
je
jp
sub
(bad)
gs
cld
mov
iret
into
loope
fisubr
xchg
dec
leave
cmp
stos
cmovl
dec
int3
loopne
rol
mov
and
fadd
push
adc
aad
fild
cmp
sbb
mov
scas
arpl
sub
cwde
arpl
mov
pop
cmps
call
fbstp
gs
inc
xchg
or
xchg
mov
sbb
mul
loop
jle
enter
pop
add
data16
es
(bad)
(bad)
stc
jmp
fstp
xor
pusha
aad
jle
mov
shr
aad
push
pop
jge
inc
(bad)
fst
je
les
adc
mov
sahf
push
jmp
jns
cwde
mov
jb
cmp
jecxz
sub
sahf
out
pop
mov
call
stos
pop
mov
xchg
jg
mov
pusha
or
retf
rcl
aad
dec
icebp
stos
push
jae
popa
jg
jne
clc
mov
test
lock
push
(bad)
ficom
stc
mov
push
and
add
mov
aam
sbb
jmp
aaa
xchg
mov
es
repnz
arpl
stc
mov
pusha
pop
or
scas
xor
dec
and
mov
jl
imul
std
push
into
movs
cmp
out
dec
jmp
lds
dec
inc
sahf
jmp
sub
jne
pop
jno
sub
pop
add
push
je
scas
sbb
imul
cmp
in
mov
cmp
sbb
imul
pop
jl
call
test
daa
jmp
jne
stos
rcr
xchg
mov
add
cmp
pop
cmps
adc
cmp
sti
fcomp
push
mov
add
fs
ror
add
xchg
(bad)
adc
js
not
mov
xlat
addr16
mov
ins
pop
movs
jo
or
movs
push
and
lds
shl
jge
or
mov
mov
call
xor
xor
dec
sub
das
jecxz
mov
jae
cmp
xlat
mov
sbb
pop
and
dec
ds
mov
fcomip
push
fsubr
jnp
xchg
dec
xor
add
mov
add
mov
loopne
xor
jmp
jle
xor
fcom
mov
cmp
jne
inc
push
out
adc
jle
inc
inc
mov
add
pop
or
(bad)
(bad)
sub
add
addr16
dec
movs
mov
jg
mov
mov
adc
push
stos
pop
test
mov
jmp
push
jae
icebp
push
xor
mov
lea
inc
xor
mov
adc
mov
iret
sbb
push
pop
cmc
call
std
add
sbb
repnz
mov
jno
icebp
repz
pop
push
jne
repnz
sahf
fimul
dec
sub
xor
cmp
call
fst
push
jmp
pusha
test
popf
mov
cdq
shl
sbb
cmp
leave
or
mov
pushf
push
xchg
push
jg
out
ret
in
mov
and
xor
mov
in
pop
popa
lods
mov
out
mov
aam
shr
inc
push
shl
xchg
mov
mov
xchg
jl
pop
into
rol
jmp
add
sub
shl
aaa
adc
ss
jo
data16
bound
cmp
and
xchg
mov
mov
cmps
test
fld
adc
fisubr
push
mov
fidiv
call
push
gs
push
sbb
aam
xchg
and
or
xor
mov
jbe
push
xor
call
repnz
mov
pop
mov
fisubr
xchg
ret
dec
dec
adc
fwait
xor
mov
bound
call
adc
cmp
mov
lods
addr16
xchg
fild
or
mov
xor
and
dec
aad
inc
xchg
sbb
sbb
jp
test
int3
adc
call
fst
xor
addr16
xchg
cmc
jnp
das
xor
int3
daa
bound
imul
add
push
popf
xchg
push
add
rcr
pop
mov
pop
dec
add
inc
popf
and
mov
and
and
mov
ret
bound
inc
outs
mov
xchg
cmp
jo
pusha
aaa
test
(bad)
outs
push
aas
or
jns
pop
cmps
xchg
repnz
dec
pop
fidivr
call
and
xchg
jmp
neg
loopne
pop
inc
or
lods
imul
mov
inc
jge
(bad)
pop
into
jb
rsm
and
dec
sbb
pop
pop
add
cmp
dec
jge
fwait
push
jge
or
retf
mov
sbb
out
iret
sub
aaa
dec
rcl
dec
das
movs
inc
ror
jae
sbb
adc
jns
cmp
mov
or
adc
pop
add
mov
cmp
dec
fisub
test
rcl
fst
jg
jecxz
call
cdq
xchg
pop
jg
add
fnsave
pop
add
daa
mov
mov
(bad)
mov
sti
push
sar
mov
test
dec
inc
or
xor
shr
mov
or
clc
std
mov
sbb
pop
enter
xchg
mov
xchg
(bad)
int3
lds
repnz
test
inc
mov
and
ins
jp
pop
ret
mov
iret
scas
fwait
push
shl
sub
popf
movs
adc
stc
dec
jbe
xor
and
psubsw
fsubr
popa
xor
or
mov
shl
mov
push
lods
fdivrp
shl
in
loope
xor
inc
push
mov
and
out
mov
xchg
ja
cmps
or
pop
and
push
aaa
pop
mov
mov
test
(bad)
sbb
push
mov
adc
std
inc
std
add
dec
shl
or
adc
pop
cli
sbb
es
jns
sub
int
das
sbb
out
in
lods
sbb
mov
mov
xor
sub
lock
les
pop
push
adc
dec
push
sub
sbb
xor
push
fldenv
cmp
sbb
aas
out
or
leave
lods
xchg
lods
out
out
ins
lea
jg
mov
sub
xor
add
mov
cmp
push
call
mov
int3
shl
xchg
fsub
sbb
lds
pop
fdiv
lods
scas
mov
inc
jnp
aas
out
pop
loope
gs
or
cs
stos
sbb
mov
mov
repnz
jb
xor
movs
ret
pop
add
je
pop
jl
into
pop
cmp
add
xchg
rcpps
retf
mov
pop
cwde
ror
sub
xor
fnstcw
icebp
dec
ret
and
dec
push
repnz
push
dec
mov
jp
test
test
add
pop
mov
outs
push
push
jns
ins
lods
sahf
jbe
add
not
mov
mov
sub
sbb
ret
fmul
shl
sub
adc
adc
jno
xor
fabs
or
shl
fild
xor
arpl
push
rol
movs
or
nop
ins
les
inc
dec
test
cmp
and
inc
js
in
pop
test
jae
mov
shl
sub
ret
jg
lock
mov
or
or
aad
jecxz
push
(bad)
(bad)
pop
(bad)
adc
das
loope
movd
mov
outs
rol
(bad)
mov
cmp
dec
mov
dec
pop
xchg
xchg
inc
inc
ja
out
jecxz
shr
fisubr
mov
push
scas
jecxz
ror
sahf
mov
cmp
mov
scas
cmps
mov
push
sbb
fidivr
je
add
sub
and
push
enter
cld
dec
jbe
jae
jnp
sbb
fwait
das
fisubr
dec
add
jno
jno
push
add
ret
(bad)
jge
jmp
jmp
inc
dec
inc
cmp
and
test
jmp
nop
stos
cs
inc
loope
pop
cmps
out
adc
push
mov
(bad)
pop
inc
std
dec
jle
cld
(bad)
imul
call
adc
push
cwde
mov
int3
aas
fst
dec
push
mov
mov
movs
cmp
mov
in
or
test
inc
sbb
movs
cmp
in
jne
repz
push
aam
repz
cmc
xchg
push
inc
scas
add
push
fisttp
fcomp
ret
in
aad
pop
retf
imul
shld
test
movs
ret
push
adc
ins
add
mov
int3
dec
lahf
push
xchg
xlat
and
aad
pop
sti
dec
mov
jo
add
fcmovnbe
or
fisttp
lea
xchg
xor
unpckhps
adc
ins
push
neg
iret
mov
test
fmul
lds
inc
lds
pop
cmp
add
push
ss
or
ja
mov
mov
mov
ds
mov
cmps
sub
push
loopne
sub
inc
fiadd
fnsetpm(287
and
or
es
adc
mov
or
cmp
xor
les
int
out
xchg
(bad)
cmp
push
push
add
ins
and
mov
out
adc
inc
sbb
dec
bound
xor
jl
scas
adc
enter
leave
inc
jg
stos
mov
shr
mov
movs
cmps
dec
sub
rep
movs
mov
or
mov
xchg
inc
or
jp
cld
jo
in
jne
jmp
ss
push
pop
pop
add
cdq
(bad)
mov
pop
ins
pop
sbb
dec
adc
movs
(bad)
int
cs
sub
cmp
push
es
or
loop
cli
sbb
cs
push
push
movs
fwait
sbb
std
adc
push
pop
inc
pop
in
jge
sbb
jg
repnz
inc
jno
scas
int
fimul
(bad)
ja
or
xchg
push
shl
or
pushf
sahf
ds
dec
cmp
fwait
cwde
inc
jb
add
sbb
mov
push
jno
add
repnz
test
ins
dec
in
cmp
mov
push
(bad)
clc
int
ins
add
mov
pop
pop
das
nop
mov
mul
shr
and
cmp
xchg
push
and
pushf
jne
and
push
mov
jne
popa
pop
or
or
and
ret
cmp
pusha
ins
out
nop
cwde
jae
(bad)
sub
sbb
shr
jl
push
sub
out
jae
ret
pop
xlat
adc
in
dec
sub
jo
push
dec
xchg
push
cli
push
jmp
push
adc
jbe
xchg
lods
call
sar
aam
jmp
pop
or
ret
sub
push
mov
add
enter
scas
lds
mov
sub
inc
inc
outs
adc
test
xchg
push
(bad)
in
inc
pop
into
jns
sbb
and
jecxz
mov
push
jecxz
sub
inc
xchg
and
push
repnz
ins
adc
adc
and
inc
jl
inc
and
mov
(bad)
sahf
test
push
push
xor
cwde
aas
add
sar
push
les
inc
or
xchg
xchg
pop
dec
cmp
inc
out
add
jne
stos
imul
pop
fist
js
aaa
mov
sbb
jmp
pushf
daa
pop
fcomp
cli
dec
ret
mov
bound
fcomi
dec
shr
js
xor
xor
cmc
sbb
pop
pop
mov
lock
inc
mov
dec
fld
cmp
(bad)
and
mov
jp
stos
and
ror
cmp
in
push
mov
jmp
test
mov
inc
sub
and
xor
aaa
test
(bad)
mov
and
and
and
retf
sub
xor
nop
xchg
mov
mov
jno
aaa
out
and
or
cdq
loope
mov
dec
fnsave
add
or
les
leave
xchg
ds
cli
mov
mov
dec
retf
js
push
into
mov
dec
mov
jno
pushf
inc
mov
push
retf
and
loopne
jne
lock
inc
inc
inc
xor
mov
ins
jmp
adc
lods
push
das
mov
push
fisttp
lock
bswap
(bad)
in
inc
gs
shrd
into
mov
mov
jmp
xchg
cmp
pop
out
mov
dec
retf
fidiv
aaa
pop
inc
inc
int
aam
cmp
xor
dec
adc
add
iret
sti
xchg
xor
mov
aad
lahf
test
mov
inc
adc
cdq
mov
push
mov
cli
cmps
inc
sbb
das
cmps
das
add
dec
leave
inc
mov
xchg
fcmovu
or
out
jbe
sbb
push
aad
std
subps
dec
inc
in
push
push
mov
out
aaa
gs
out
icebp
test
cmp
dec
mov
jecxz
push
aam
rcl
pop
ds
imul
dec
repnz
jmp
mov
sub
dec
add
std
bsf
ds
rcl
arpl
mov
sub
dec
mov
ins
popa
inc
jbe
stos
push
test
and
mov
shl
or
sbb
xlat
(bad)
test
mov
jns
mov
into
push
mov
adc
or
cmp
pop
xchg
jecxz
dec
push
aaa
push
xor
sub
out
addr16
test
lods
lods
(bad)
cmp
add
pusha
add
(bad)
push
fbstp
sbb
dec
pop
inc
pop
into
and
loopne
int
leave
outs
adc
push
mov
js
adc
mov
imul
loope
push
sahf
ret
mov
pop
lock
add
jl
adc
addr16
pop
dec
aad
repz
retf
ror
or
sub
add
push
dec
or
mov
ss
jae
pop
mov
imul
jne
dec
cmp
out
leave
inc
aaa
neg
cmp
inc
mov
fsub
cmp
(bad)
jmp
jmp
pop
nop
xchg
mov
aam
imul
fild
push
dec
retf
push
addr16
(bad)
xor
dec
ret
lods
std
xchg
gs
push
setnp
cmp
xor
sti
adc
xchg
js
push
idiv
lods
(bad)
bound
stos
pushf
cmc
mov
fdiv
and
(bad)
retf
pop
loop
int3
rcr
push
cmp
mov
pushf
sub
adc
xor
ret
mov
les
mov
push
nop
rol
add
jns
data16
sbb
cmp
jbe
adc
mov
or
aad
aad
inc
adc
loop
ins
mov
icebp
add
(bad)
adc
or
adc
cmp
cwde
(bad)
out
fsubr
xor
mov
cmp
into
or
mov
cmps
pusha
(bad)
jb
js
dec
ror
adc
xchg
push
pop
in
xchg
ins
in
daa
lds
sbb
jle
loope
and
dec
dec
push
inc
jl
mov
push
cmp
fldcw
aam
xchg
shl
movs
push
fwait
sar
add
int3
aas
cmp
mov
fnstsw
repz
xor
mov
stos
jmp
push
lods
or
lods
adc
push
mov
add
or
aad
daa
cmp
cs
not
xchg
sahf
fisub
ins
or
into
outs
ret
adc
shl
or
dec
cld
into
test
addr16
fldcw
(bad)
int
jg
mov
popf
xor
push
cld
dec
std
fisttp
mov
push
retf
popa
movs
call
sbb
and
ins
psllq
adc
hlt
fdiv
add
inc
jmp
arpl
jg
rcl
sti
ins
inc
ret
adc
(bad)
loope
cmps
dec
test
ins
xchg
pop
not
xor
or
shl
jnp
inc
imul
rol
jae
inc
fwait
xchg
outs
loopne
hlt
and
adc
mov
jnp
mov
mov
add
adc
or
shr
out
stos
stos
aas
jnp
hlt
mov
lods
lds
(bad)
(bad)
int
leave
add
pop
cmp
add
shl
pop
inc
loop
ret
fwait
jmp
mov
leave
neg
inc
lahf
in
fiadd
mov
ret
or
push
out
cmp
(bad)
out
stc
in
and
pop
push
lock
ss
cmps
or
clc
imul
sti
mov
and
leave
das
pop
sahf
repnz
shl
mov
mov
jns
mov
pop
mul
jbe
in
loop
out
ja
cwde
push
and
and
jo
inc
es
into
int
jae
loope
pop
aam
mov
out
dec
add
popa
or
sti
xchg
mov
jb
cli
hlt
mov
mov
add
adc
sti
lods
xchg
loopne
dec
xor
xchg
movs
xor
adc
imul
inc
scas
(bad)
mov
pop
gs
mov
pop
shl
or
bound
into
push
cdq
push
jge
(bad)
in
cmp
es
test
push
mov
jns
and
inc
xor
push
adc
enter
das
xchg
arpl
xchg
(bad)
pop
int3
jne
outs
out
or
lea
jmp
xor
popf
sub
std
xor
in
rol
shr
fmul
pop
push
dec
or
jmp
inc
mov
inc
push
jp
repz
and
into
hlt
fsubr
sub
xchg
xchg
in
fcom
imul
std
xchg
mov
adc
xor
mov
xor
mov
pop
mov
mov
inc
push
adc
mov
fcom
cmc
jae
(bad)
fcmove
mov
movs
rcl
lahf
jbe
push
popf
mov
pop
test
mov
mov
mov
fist
inc
ins
push
packssdw
ror
dec
popf
and
sbb
or
call
dec
jae
add
xchg
lods
and
icebp
pop
ret
cmp
or
pop
xchg
add
mov
clc
mov
dec
js
inc
dec
xchg
or
mov
adc
out
test
cmp
inc
in
out
cmp
xchg
(bad)
xor
test
mov
mov
into
popf
fsincos
stos
sbb
push
lock
popf
mov
dec
mov
cmps
cmp
lahf
cli
ins
push
dec
mov
jge
sbb
daa
outs
mov
add
outs
mov
xchg
jmp
emms
test
mov
jl
stos
cmp
mov
je
cmps
sbb
mov
movs
or
push
shl
leave
in
pop
sbb
push
mov
push
stos
cmps
(bad)
icebp
in
aad
fistp
aam
daa
scas
push
iret
(bad)
outs
test
ffree
repnz
retf
stos
out
aas
mov
repnz
retf
pop
push
ins
ret
xlat
outs
popa
mov
iret
xor
sub
sbb
mov
push
repnz
lods
loopne
add
push
adc
adc
mov
outs
lds
test
mov
test
mov
rcl
(bad)
les
repnz
jns
nop
mov
daa
xchg
stc
add
push
dec
in
cmp
popa
cmp
mov
sub
inc
or
xor
inc
pop
les
mov
out
jns
inc
loopne
test
sbb
dec
mov
shl
xor
sub
sbb
inc
sub
inc
pusha
mov
out
movs
jmp
push
lock
jle
jmp
lock
mov
lds
jg
ret
scas
mov
sti
in
dec
dec
stc
jns
cmp
push
ret
jne
popf
jl
or
jle
xor
int3
dec
mov
shr
sbb
push
std
jo
xchg
add
xor
jbe
inc
lea
test
outs
mov
push
clc
rcl
ds
xchg
jmp
in
loopne
js
jg
jae
fwait
les
or
lods
into
out
daa
shl
mov
int
push
xchg
push
xor
pop
mov
dec
mov
out
inc
stc
ins
sub
mov
xor
inc
lods
(bad)
lea
adc
rol
popf
lods
sbb
or
push
in
sub
add
and
inc
push
mov
jg
iret
push
xchg
ja
inc
das
sti
mov
addr16
lods
cmp
mov
mov
cli
dec
push
add
mov
pop
cli
fsubr
or
pop
fild
icebp
fstp
call
test
stos
adc
push
(bad)
(bad)
psrlq
jmp
mov
fiadd
cld
jns
sub
xchg
cmc
pop
dec
in
cs
pop
or
mov
jo
cmp
neg
jg
cmc
popa
test
sar
mov
movs
mov
cmp
dec
mov
jo
jecxz
sub
in
sub
inc
mov
lods
cli
xchg
jae
sbb
loop
fdivr
mov
jae
jnp
aam
pushf
adc
imul
xor
ficom
gs
out
sub
jb
pop
ficomp
pop
jne
jo
push
jae
and
call
lods
fst
push
mov
jle
jae
mov
mov
cs
xchg
xchg
movs
cdq
mov
dec
push
test
push
pop
(bad)
fldenv
enter
xor
pusha
int3
adc
push
push
or
jae
cmp
xchg
cmps
sti
ja
and
dec
cmp
inc
mov
jo
xchg
pop
sub
xchg
sub
xchg
sub
dec
push
sub
test
mov
rcl
jno
pop
das
sbb
dec
mov
out
mov
jmp
pop
pop
pop
add
fwait
push
and
pandn
in
mov
sub
sbb
int3
iret
fistp
and
jb
pusha
add
add
aam
ficom
cwde
fcomp
dec
and
and
xor
lea
mov
test
aas
popf
fwait
mov
mov
fisubr
jmp
js
xchg
pusha
into
mov
cmp
pop
ins
aaa
pushf
fsubr
inc
fcom
hlt
xor
cmp
or
fidiv
in
xor
add
cwde
sbb
mov
or
dec
cmp
int3
inc
push
jp
jae
inc
push
pop
pop
dec
jmp
xor
test
cwde
jns
jecxz
or
cmovl
mov
or
dec
and
push
pop
in
jo
lea
add
pusha
sahf
pop
pusha
call
mov
jle
stos
xor
popa
add
(bad)
div
test
mov
movs
mov
retf
push
popf
adc
push
sbb
jnp
imul
sub
xor
sub
jmp
enter
not
dec
data16
mov
inc
clc
and
mov
(bad)
sub
jle
xchg
test
bound
jne
ret
fld
ja
popa
mov
xchg
test
pop
lock
loope
push
in
div
jle
or
repnz
not
jecxz
sub
add
bound
cmc
idiv
loope
xor
cmp
js
aaa
(bad)
pop
push
loope
loop
hlt
and
test
or
add
rol
cmp
and
mov
cmp
cs
in
xchg
inc
dec
or
push
imul
adc
xchg
les
push
scas
xor
addr16
or
xor
rol
jbe
xlat
jno
mov
cmp
movs
rcl
fimul
clc
movs
js
sahf
jne
loope
and
pop
mov
mov
add
mov
pushf
push
adc
xor
cld
push
sbb
push
js
loope
cld
das
je
adc
add
jecxz
mov
mov
mov
imul
mov
cmp
add
adc
stos
push
push
mov
aam
push
cmc
xchg
cmps
mov
jb
lods
inc
neg
mov
lods
sbb
mov
cmp
aaa
ret
or
aad
cmp
mov
sbb
mov
cmp
cmp
ins
(bad)
cmp
adc
cmp
push
fwait
jmp
push
int3
aaa
sbb
aam
ret
fild
cmps
push
scas
or
aaa
or
je
inc
xlat
mov
stos
jle
sbb
mov
(bad)
aad
out
adc
ja
xor
in
and
push
(bad)
xchg
xchg
(bad)
ja
movs
mov
test
test
add
cli
in
cmp
sbb
lods
inc
jecxz
mov
std
repnz
enter
fsubr
lods
cwde
aad
mov
pop
inc
mov
jb
pop
mov
pop
push
mov
mov
or
jo
sbb
aas
pop
mov
mov
xor
xchg
sub
jle
call
push
or
jle
push
jns
dec
mov
in
rep
sub
sbb
adc
test
push
mov
out
(bad)
xchg
retf
adc
popa
lods
stos
loopne
mov
dec
cmps
cmp
aas
cdq
movs
mov
dec
mov
(bad)
movs
and
cmps
add
es
aas
push
sbb
push
imul
test
fwait
inc
call
loop
or
xchg
mov
aas
imul
pop
pop
pushf
sub
test
mov
pop
rol
cdq
daa
mov
push
loop
pop
jle
push
into
cmp
inc
xor
lods
fistp
sbb
pop
sti
loop
sbb
dec
inc
dec
mov
pop
fucomi
(bad)
adc
cvtpi2ps
xor
mov
mov
scas
repz
add
pop
push
es
mov
gs
sbb
xchg
push
dec
adc
bound
cli
sub
popa
jp
mov
inc
imul
jge
xchg
out
mov
cmp
mov
mov
imul
imul
mov
test
aam
sar
lock
xchg
stc
jno
rcr
js
cmp
leave
cld
sub
cmps
or
xor
jmp
test
pop
inc
imul
push
mov
adc
xor
and
mov
mov
lds
mov
xor
adc
lds
mov
dec
push
out
push
mov
outs
jbe
dec
bound
cmp
mov
xor
cmps
add
mov
int3
out
add
bound
dec
mov
add
pop
cli
stos
jo
in
sbb
clc
inc
ret
(bad)
mov
mov
and
push
dec
xor
ins
jbe
nop
imul
sub
xchg
inc
and
or
ret
ins
dec
pop
lock
xor
mov
(bad)
loope
adc
pushf
fwait
ret
dec
push
adc
loop
mov
hlt
pop
ficom
push
push
sbb
xchg
pop
sbb
xchg
mov
cwde
rcl
add
cmps
jle
pop
jp
dec
fild
out
mov
mov
xchg
out
adc
adc
das
adc
scas
inc
cli
push
ja
sbb
scas
push
mov
jmp
or
jns
in
cs
fs
shl
mov
pushf
push
mov
inc
inc
sbb
add
nop
test
mov
loope
dec
call
inc
in
(bad)
adc
xchg
arpl
(bad)
dec
or
out
loopne
les
dec
inc
dec
retf
stc
and
ins
out
pop
push
xor
mov
adc
xchg
bound
repnz
je
dec
mov
cmp
into
jmp
in
mov
mov
mov
bound
jns
pushf
add
jmp
jl
aas
pop
cli
mov
or
dec
int3
push
outs
adc
mov
(bad)
sbb
mov
xor
mov
es
pop
in
cmp
sar
mov
scas
add
pop
sbb
push
xchg
ja
sub
loopne
mov
jp
push
adc
mov
popa
aaa
xor
mov
fs
jae
(bad)
aad
inc
lock
test
push
test
pop
aaa
out
ins
xor
sub
add
add
pushf
mov
inc
fwait
aam
ror
or
pop
add
dec
ins
inc
adc
iret
pop
mov
push
fistp
outs
xchg
jge
cmp
or
mov
xlat
test
cmp
daa
(bad)
jge
into
ror
cmp
or
pop
or
sbb
cmp
into
ret
fmul
sahf
loop
mov
dec
cli
mov
std
sbb
retf
add
adc
and
mov
jecxz
movs
div
cmp
sbb
cmps
sti
mul
test
inc
inc
ds
adc
cmp
ins
xchg
ror
icebp
jl
mov
pop
push
cmp
jmp
xchg
and
rol
cmp
adc
ins
xor
test
in
ror
cs
mov
push
xor
ss
das
mov
int
iret
or
lods
sbb
loope
rcr
lds
jmp
popa
frndint
shr
mov
inc
hlt
cwde
test
push
shl
or
leave
(bad)
mov
fcmove
inc
repz
jp
xor
push
(bad)
sbb
jl
pop
ds
ds
js
dec
push
js
pusha
pop
and
data16
jo
pop
fidivr
jp
xchg
add
loopne
outs
inc
movs
cld
call
jns
xchg
sub
daa
and
mov
(bad)
jmp
in
inc
test
mov
je
inc
jp
mov
cmp
mov
into
pop
scas
jp
pop
mov
push
xchg
jecxz
je
push
out
mov
dec
xchg
arpl
shl
mov
push
cli
inc
and
cs
mov
and
mov
cmps
lds
mov
repnz
mov
inc
mov
ror
push
(bad)
outs
into
jno
ins
outs
cmp
ins
cmps
mov
mov
popa
cmp
xchg
pop
xor
(bad)
xor
sar
cld
sub
jmp
aam
aas
mov
sub
iretw
ror
mov
data16
(bad)
jnp
gs
movs
jno
or
cmps
dec
pop
dec
loop
fisttp
jecxz
pop
xchg
jmp
retf
adc
jne
sbb
or
inc
sbb
inc
outs
push
stc
push
sub
mov
sti
add
mov
in
mov
(bad)
mov
cwde
int3
cmp
cmp
sbb
push
or
mov
out
cmp
mov
mov
or
es
mov
outs
add
jns
shl
cmc
jmp
mov
adc
daa
dec
and
mov
js
ds
sbb
sub
inc
jle
das
ins
inc
mov
sub
dec
mov
push
stc
daa
cld
push
outs
add
jmp
adc
dec
mov
push
addr16
mov
adc
cmp
push
dec
dec
xor
int
popa
or
push
sbb
rcl
sub
imul
cmp
(bad)
iret
nop
xchg
ds
loopne
cdq
fcomi
test
mov
mov
dec
lods
mov
adc
adc
cwde
jb
hlt
jno
ss
xchg
jp
mov
nop
stos
clc
neg
je
sbb
push
ins
fcom
shl
movs
mov
rol
sub
(bad)
out
fwait
dec
shl
cmc
and
pop
or
popf
arpl
jge
dec
and
mov
into
(bad)
pop
adc
shl
fnclex
inc
jne
fmul
push
aas
xchg
xor
repnz
icebp
xor
nop
xor
mov
fsubrp
xor
adc
fmul
push
in
iret
je
sbb
jb
sub
pop
arpl
fst
repz
add
push
(bad)
cld
xchg
ret
mov
add
pop
xchg
rcr
jno
dec
jo
sahf
and
push
out
(bad)
mov
sbb
inc
lahf
dec
mov
sub
cmc
mov
xchg
aaa
inc
push
adc
addr16
pop
es
mov
movs
or
fsub
dec
aaa
call
cmp
jae
jmp
xchg
icebp
dec
xor
push
xchg
cmp
pop
(bad)
lock
rol
mov
push
jl
test
inc
aam
and
adc
sub
inc
(bad)
push
dec
sahf
sbb
mov
or
test
cld
push
sbb
ins
mov
ficom
xchg
fwait
push
sub
cmp
pusha
data16
cwde
xor
fwait
push
inc
leave
(bad)
push
xor
adc
xor
xor
add
jmp
or
cwde
or
xchg
vcvtdq2ps
inc
fistp
pusha
ffreep
mov
out
push
mov
repnz
jb
ins
mov
and
mov
scas
data16
pop
xchg
sar
inc
xchg
inc
ins
mov
cmp
xor
and
adc
pop
jbe
xchg
mul
test
test
xor
dec
sub
and
out
fcomp
xlat
sbb
sub
pop
stos
or
std
imul
sbb
xor
lea
push
iret
daa
push
gs
scas
mov
cdq
rol
out
mov
inc
ds
(bad)
cmps
sub
outs
jecxz
add
adc
mov
shr
fs
and
sub
(bad)
sub
xchg
jo
pop
and
je
int
adc
scas
xchg
and
test
lock
adc
jmp
sbb
(bad)
(bad)
xor
fcmove
out
adc
mov
lds
out
adc
jecxz
add
imul
add
data16
enter
xchg
xchg
mov
outs
sub
ins
xchg
inc
repnz
lahf
sbb
sub
mov
outs
dec
adc
jg
leave
rcl
nop
pop
push
xor
jecxz
in
xlat
cmp
sahf
mov
sti
jp
cdq
pop
inc
xor
imul
pop
adc
jmp
mov
into
test
movs
cwde
lods
jmp
(bad)
enter
inc
pop
adc
data16
pop
(bad)
jb
xchg
inc
ret
retf
fs
retf
loopne
adc
or
retf
xchg
test
jp
mov
sbb
loope
adc
sbb
pop
movs
and
imul
fucomp
mov
dec
push
push
gs
inc
je
mov
ja
cmp
ss
dec
stc
pop
pusha
out
adc
push
das
(bad)
push
inc
fdivr
xor
and
ds
mov
lds
inc
(bad)
in
in
xchg
sbb
pop
jmp
add
and
dec
(bad)
outs
sbb
popa
pop
repz
adc
cmp
sbb
mov
adc
hlt
jmp
shr
add
mov
mov
mov
cmp
jmp
jns
or
pop
xchg
imul
imul
mov
dec
leave
mov
inc
inc
cld
pop
xor
mov
bnd
test
pop
inc
aaa
jmp
aaa
rol
sbb
xchg
movs
sub
cmps
hlt
test
fucomp
adc
add
lods
push
xor
dec
inc
cli
mov
aam
mov
sbb
and
cmc
jno
int3
jle
xor
xor
push
cmp
inc
inc
or
xchg
movs
jle
sub
test
cmps
repz
emms
outs
cmc
cmp
or
mov
mov
clc
mov
lods
jmp
mov
in
(bad)
jo
int3
push
fcomp
repnz
retf
mov
scas
(bad)
cmp
push
mov
movs
imul
into
fild
call
xchg
pop
jae
cmp
shr
push
sub
outs
jno
inc
out
inc
inc
hlt
mov
(bad)
dec
add
adc
movs
mov
sbb
addr16
cmp
xchg
arpl
add
push
push
inc
lds
iret
jecxz
inc
xor
cli
dec
jns
lahf
ret
lock
movs
jge
jne
sbb
inc
jle
mov
xchg
out
std
or
fs
cmps
and
push
xchg
loopne
dec
add
aad
stos
and
cmp
sti
adc
aam
jne
std
(bad)
leave
aam
fisubr
push
iret
mov
inc
add
imul
xor
and
(bad)
pop
lods
dec
test
in
mov
mov
mov
mov
add
xor
xor
mov
jno
or
stos
shl
sbb
aam
rol
mov
xchg
or
push
fdivr
dec
jne
xchg
icebp
sar
add
ror
mov
mov
pop
cwde
mov
adc
add
add
fldcw
dec
jno
mov
loopne
sbb
cmp
or
xchg
mov
cmp
xor
xor
cld
push
dec
cmp
pop
jb
push
in
adc
adc
fbld
push
(bad)
(bad)
pop
(bad)
lods
enter
add
adc
mov
out
out
out
(bad)
outs
pop
adc
mov
mov
mov
mov
movs
mov
sub
test
dec
jmp
outs
xor
imul
loop
xchg
and
fnstsw
push
retf
jo
cmp
push
(bad)
mov
mov
jns
pop
scas
in
inc
lods
nop
es
ins
fstp
int
push
scas
sub
sar
sbb
mov
mov
mul
dec
cmc
in
sti
pop
inc
daa
fwait
pusha
ret
in
cmp
cmps
(bad)
xchg
inc
(bad)
bound
inc
mov
pop
pop
into
ror
jnp
jp
sub
sub
mov
pop
xchg
xlat
or
push
sbb
cli
pop
rcl
ins
mov
imul
adc
cmps
xlat
pop
clc
xchg
sbb
add
inc
xor
sti
adc
push
call
add
stos
adc
aaa
push
sti
sbb
jle
mov
cmp
stos
das
pop
or
cmp
xchg
std
out
inc
mov
das
and
ret
cmp
rcr
pop
xchg
std
jo
mov
adc
dec
push
dec
cmp
outs
imul
fsubr
jp
inc
jge
cmp
sub
les
int
cmp
mov
jb
inc
sbb
dec
mov
xchg
mov
sub
add
dec
inc
mov
(bad)
data16
jo
dec
leave
(bad)
stos
push
sbb
mov
mov
jg
cmp
xor
jge
or
in
inc
push
out
(bad)
mov
or
jnp
add
stos
cs
mov
loop
mov
fstp
mov
repnz
ret
movs
daa
mov
test
je
pop
push
sbb
hlt
xchg
inc
data16
push
cmp
jbe
addr16
in
rcl
fucomip
and
push
and
loop
fcom
jmp
(bad)
frstor
test
jg
into
add
out
imul
and
jp
mov
push
scas
pop
fst
add
mov
pop
adc
(bad)
cld
ins
cs
rcl
xchg
mov
push
xlat
imul
aaa
push
xlat
jae
push
xchg
nop
mov
jl
xchg
rol
pop
jg
leave
cmp
dec
stc
push
loopne
ins
sbb
jmp
icebp
xchg
ins
or
jno
pushf
arpl
outs
repz
test
sub
(bad)
mov
(bad)
std
fabs
fs
cld
(bad)
pusha
test
iret
jbe
jmp
or
jge
ret
adc
push
push
bound
add
sub
push
mov
ja
jbe
(bad)
ins
dec
mov
(bad)
nop
cli
jmp
hlt
rcr
pushf
inc
mov
sbb
popf
shl
icebp
or
jno
imul
dec
nop
xchg
add
pop
jb
mov
pop
int3
cwde
aas
dec
mov
mov
and
mov
fisub
push
mov
call
jo
sbb
in
jp
pop
jnp
in
fld
test
jmp
jns
xor
mov
dec
clc
mov
and
inc
int
fwait
into
add
imul
test
sbb
ins
cmps
les
lea
sub
push
mov
xchg
ins
popf
popf
jns
pop
fs
call
mov
or
push
xor
ror
iret
data16
mov
es
and
lods
xchg
jp
inc
push
loope
shr
iret
in
inc
and
inc
sbb
cmps
inc
fsub
pop
inc
jecxz
inc
mov
mov
add
xchg
adc
mov
push
lea
ror
call
lods
sbb
mov
test
or
xor
dec
pop
sbb
jle
mov
inc
pop
add
and
xchg
xchg
stos
or
mov
dec
dec
sub
lods
lods
or
xchg
cmc
sub
ret
pop
push
leave
cmps
fisub
enter
fcom
inc
bound
dec
stos
dec
mov
push
inc
test
ins
sti
arpl
punpcklwd
pop
add
ret
stos
dec
lods
pop
add
mov
dec
loope
enter
sbb
ins
inc
adc
or
pop
mov
popa
dec
data16
inc
hlt
pop
ret
fisubr
sbb
mov
dec
stos
jl
mov
fs
adc
nop
fs
and
fidiv
add
push
cld
push
pop
in
cmp
mov
jno
mov
and
fisttp
jmp
cmovle
cmp
add
push
les
adc
test
(bad)
cwde
popa
cmps
and
sbb
in
or
fild
mov
jmp
inc
cmp
pop
cmc
scas
inc
push
mov
jp
fidiv
inc
sahf
test
dec
mov
pop
jg
sub
(bad)
imul
cld
cli
xchg
cdq
nop
or
jae
push
popw
nop
ret
adc
jp
mov
loop
retf
jnp
xchg
xor
inc
xlat
jne
inc
scas
mov
inc
xor
loop
aaa
and
xor
mov
fbld
call
sti
ret
jp
mov
pop
mov
fiadd
daa
lds
sbb
cmp
(bad)
xor
mov
aaa
sbb
lds
pop
or
add
push
pop
xor
or
das
ja
mov
stos
sti
cld
popf
mov
xor
jns
xor
push
mov
jg
jae
scas
cld
mov
xchg
ficomp
cmp
int
pusha
and
imul
adc
xchg
adc
retf
movs
xchg
fisub
mov
in
ins
mov
les
xor
std
cmps
xor
cmc
or
mov
and
ins
fbstp
(bad)
adc
ja
outs
dec
xchg
iret
xor
(bad)
inc
mov
fwait
mov
xor
outs
mov
nop
jb
push
ret
pop
std
push
ja
hlt
sub
inc
lods
fld
repz
add
fcmovnb
jmp
xor
mov
mov
sar
imul
retf
xchg
std
cli
fwait
gs
add
popa
lock
ficom
sbb
stos
aas
cmp
scas
push
xchg
sbb
fwait
bound
push
outs
push
retf
mov
jns
js
dec
lds
jmp
pop
repz
mov
fwait
and
test
push
mov
pop
add
sub
fst
out
out
adc
lods
cmc
xchg
dec
push
cmp
mov
pop
fwait
shl
xor
push
call
jno
stc
call
cwde
sbb
adc
dec
pop
or
push
jle
and
sar
movs
mov
movs
ins
lds
lahf
rcr
ins
fwait
je
(bad)
pop
std
mov
push
mov
pusha
repz
adc
add
adc
shr
lods
aas
jmp
jnp
jbe
pop
or
fmul
mov
jg
and
ret
or
out
popa
cmp
outs
mov
pop
icebp
mov
mul
ret
sub
pop
ins
pusha
sub
cmps
cwde
loopne
xchg
xor
dec
out
xchg
sbb
hlt
int
jl
scas
adc
out
sbb
iret
jle
sbb
sbb
jo
ret
sbb
imul
es
test
sbb
lahf
out
movs
fdiv
dec
scas
mov
push
mov
jge
xor
repz
inc
ins
sub
jle
xor
xor
ja
ins
test
mov
loope
pop
retf
(bad)
sti
xor
(bad)
fmul
dec
pop
out
xchg
ss
add
loop
aas
jb
push
lds
mov
jbe
aaa
jmp
(bad)
sahf
sub
sbb
daa
add
lods
jns
jmp
sub
retf
enter
pop
sahf
les
out
ffree
lahf
fcomp
mov
inc
or
fcmovne
scas
in
xor
pop
test
and
outs
sbb
mov
mov
and
mov
inc
xor
add
and
xchg
jl
das
nop
idiv
out
cli
call
cmp
pop
movs
cmps
enter
push
sbb
stos
xor
mov
jne
test
nop
stos
mov
cmp
dec
sub
rcl
stos
bound
lds
sbb
adc
mov
loopne
mov
enter
xor
sti
dec
repnz
ins
loope
xchg
rol
hlt
ds
in
fnstcw
fisubr
mov
cmovp
dec
xchg
pop
retf
(bad)
jl
sbb
inc
push
mov
rcl
and
adc
scas
lds
mov
sti
not
cmps
or
xchg
xchg
cdq
cld
imul
das
sub
gs
and
bound
scas
or
shl
sbb
or
dec
push
imul
sub
int
push
fsub
(bad)
(bad)
cmp
in
retf
imul
test
add
dec
int3
cmp
push
mov
sar
dec
dec
or
pop
leave
cmp
retf
test
into
fwait
jp
das
adc
mov
inc
xor
inc
sar
adc
popa
xor
mov
mov
xchg
and
retf
xchg
addr16
scas
mov
mov
sbb
outs
or
icebp
retf
test
add
or
xor
pop
out
bound
push
retf
retf
stos
loopne
scas
xor
add
mov
repz
pop
xlat
mov
call
mov
sbb
jmp
mov
cmp
cs
pop
ret
stos
aas
gs
dec
jmp
in
dec
call
rcr
mov
or
dec
popa
shl
icebp
mul
rcr
shr
jae
rcl
les
ret
push
rcr
adc
enter
ret
adc
pushf
dec
push
jbe
inc
push
inc
mov
into
mov
mov
mov
push
std
in
xlat
retf
pop
fwait
sub
fld
xor
push
(bad)
mov
pop
mov
imul
fld
rol
clc
jns
inc
ret
mov
stos
std
iret
repnz
lahf
stos
outs
pop
add
or
sar
rol
rcr
ja
push
test
xor
stos
xchg
inc
sub
ds
mul
push
daa
push
pop
jl
push
jae
(bad)
in
popf
int3
inc
in
jno
cmp
pusha
push
or
imul
pushf
push
popa
inc
aam
jg
xlat
stos
int
and
inc
scas
sub
add
scas
xlat
pop
mov
test
push
sub
or
sbb
jmp
add
adc
inc
jns
retf
in
add
sub
arpl
xchg
(bad)
xchg
test
pushf
dec
push
call
jo
adc
mov
dec
ss
or
mov
mov
mov
xchg
and
mov
clc
sbb
or
lahf
push
shl
xor
mov
shl
xchg
cmovp
cmp
push
ret
adc
stos
push
es
test
cwde
aad
push
pop
xor
jl
adc
mov
stos
hlt
out
push
and
in
lods
mov
(bad)
mov
rcr
mov
pop
movs
mov
mov
push
dec
jnp
scas
fmulp
leave
jge
(bad)
movs
dec
das
push
test
test
xchg
sbb
movs
sub
rol
fwait
cmp
cwde
jo
adc
imul
pop
cld
in
stos
js
daa
aad
inc
lahf
fsub
shl
and
xchg
xor
mov
jb
sub
or
cmp
sub
adc
daa
lods
aam
repnz
(bad)
out
add
inc
jle
and
loope
cld
mov
pop
repnz
sub
inc
cmps
scas
fild
ss
dec
retf
dec
inc
mov
pop
add
adc
cld
dec
adc
or
hlt
int
cmp
and
sbb
pop
cmps
cmp
stos
mov
push
jmp
sbb
and
cmp
ins
or
cmp
retf
mov
repnz
mov
call
arpl
pop
test
sbb
push
adc
pop
icebp
push
push
imul
jmp
adc
outs
loop
inc
dec
add
pop
mov
test
mov
or
cvttps2pi
push
imul
jmp
adc
loope
xor
movs
or
in
out
inc
retf
fld
cmp
je
daa
dec
adc
and
stc
loopne
test
imul
stos
add
inc
and
shr
jno
or
mov
sti
jl
data16
mov
mov
mov
jns
jno
cmps
pop
js
sbb
cli
leave
shl
dec
add
add
or
cmp
push
add
dec
retf
sbb
scas
int
outs
inc
stc
xchg
sbb
pushf
push
cmp
ret
add
outs
cmp
lods
movs
repnz
push
lods
sub
cli
pop
pop
shl
fsubr
sti
aad
bound
dec
rcl
dec
add
sub
cmp
sbb
push
xchg
call
jge
pop
push
jnp
das
out
fcom
(bad)
mov
ss
ret
aas
cmp
add
not
dec
loope
or
jae
rcl
arpl
and
xor
pop
and
aas
repz
push
rcl
xor
(bad)
mov
push
inc
push
loop
xchg
xlat
int3
outs
xchg
pushf
es
rol
neg
adc
jp
mov
and
cmc
jl
ins
test
data16
cmp
aaa
and
rcr
dec
cmp
int
in
adc
aam
mov
inc
xor
add
das
mov
lahf
sbb
push
xor
test
inc
cmp
pop
cmp
xchg
jle
add
shl
and
cmp
loop
mov
dec
and
cwde
and
scas
leave
sbb
fidivr
mov
xchg
test
stos
or
mov
sbb
sar
test
mov
pop
mov
pop
test
ret
adc
aam
test
out
mov
dec
push
pop
outs
ins
xchg
jbe
fcmovnbe
or
mov
pop
mov
imul
out
out
and
mov
mov
add
xor
add
pop
rcr
stc
rol
dec
xchg
cmp
outs
or
call
aaa
sbb
add
(bad)
adc
add
sahf
inc
iret
jne
pop
sub
cmps
jnp
aas
icebp
scas
mov
inc
imul
jp
pop
sar
stos
mov
mov
mov
mov
in
jne
fidivr
xor
mov
xchg
add
call
repz
loop
stos
sbb
cmps
cmp
sub
and
add
cmp
and
test
pop
js
cdq
lds
movs
imul
adc
lock
in
push
xlat
dec
mov
les
sahf
and
sub
xchg
dec
or
pop
div
test
aad
test
push
xor
push
and
imul
sbb
out
dec
adc
jge
outs
mov
sbb
push
and
and
or
ret
mov
cmp
xchg
lock
fdivr
or
pop
cmp
aaa
pusha
les
inc
in
jae
movs
data16
mov
mov
jl
lock
cld
in
or
sar
dec
ret
imul
cmp
fstp
scas
loope
pop
leave
jns
jp
inc
sbb
jne
mov
daa
movs
cmp
shl
mov
or
mov
das
shl
mov
mov
cmp
mov
mov
jb
fisttp
out
mov
and
cdq
popa
call
pop
inc
pop
ins
and
js
adc
clc
out
loope
or
adc
test
push
retf
fistp
nop
js
xor
add
jb
jg
jb
lods
sub
pop
dec
outs
scas
pop
inc
fcom
xchg
or
pop
add
cli
mov
fld
leave
ss
test
jmp
(bad)
xor
inc
jecxz
mov
sahf
stc
mov
rcr
addr16
adc
pop
cmc
sar
sub
sbb
pop
cmp
adc
arpl
pop
pop
pop
daa
adc
and
dec
fld1
and
aaa
retf
jbe
cs
add
aam
inc
xchg
adc
pop
mov
mov
xor
push
sbb
adc
mov
push
adc
ins
addr16
dec
xor
inc
out
shl
fdiv
mul
adc
mov
ret
sub
and
or
(bad)
test
fadd
inc
xor
inc
jecxz
cmp
push
scas
push
out
out
out
mov
push
jg
xchg
mov
arpl
mov
lods
and
mov
movs
jmp
outs
pop
push
iret
dec
aam
shl
sar
mov
repnz
cmp
or
lahf
pop
not
test
cld
xchg
mov
fs
push
std
push
imul
inc
cld
and
sub
ds
nop
pop
inc
add
jb
jne
call
call
(bad)
xor
aad
add
loop
das
out
out
inc
shl
xor
int3
mov
sub
sbb
aam
cmp
ror
add
push
cmp
adc
stos
pop
jl
jmp
xchg
push
lods
dec
and
std
push
sti
cdq
sub
mov
add
cdq
int3
cmps
mov
into
js
aas
add
push
push
loop
sbb
adc
(bad)
ret
mov
pop
shr
mov
test
nop
out
adc
popf
push
cmps
scas
push
dec
ret
sbb
mov
xchg
push
or
mov
xchg
inc
inc
xchg
adc
mov
push
xor
sar
and
(bad)
jp
jge
lock
dec
mov
lds
stc
cmp
aam
out
inc
sub
cmp
aas
(bad)
into
and
cmp
rol
xor
inc
into
(bad)
mov
es
imul
jmp
shl
push
enter
frstor
jmp
idiv
mov
(bad)
jg
(bad)
mov
xchg
sub
push
xor
jne
jb
mov
xchg
pop
out
aam
adc
outs
addr16
imul
stos
pop
push
add
sbb
pushf
in
(bad)
(bad)
dec
ds
and
sbb
sbb
sahf
aam
mov
test
sbb
enter
inc
stos
mov
in
into
iret
fs
adc
sar
outs
mov
and
ficomp
and
(bad)
cmp
movs
in
(bad)
sar
push
clc
xchg
scas
loope
(bad)
neg
shl
pop
icebp
cmc
mov
ds
xchg
pop
push
pop
inc
test
arpl
push
sbb
stc
add
inc
in
cmps
push
jl
pop
icebp
cmc
lock
inc
pop
sbb
cmp
in
mov
icebp
sbb
jl
(bad)
das
aas
mov
add
cs
mov
mov
dec
xchg
stos
fwait
mov
leave
mov
or
sar
push
inc
jmp
shl
jmp
sbb
loope
test
push
or
xchg
and
stos
add
adc
test
not
bound
aam
add
ja
das
add
sub
sub
xchg
mov
sti
stos
sbb
out
out
int3
xchg
push
push
mov
dec
fadd
or
push
xchg
(bad)
fs
sub
mov
push
outs
xor
jl
sbb
pop
xchg
push
cli
cmp
call
mov
cmp
jp
enter
out
aad
clc
or
jg
sub
jbe
inc
pop
bound
lea
xchg
fisttp
push
movs
test
xchg
mov
mov
jbe
fwait
ins
stos
adc
bound
loopne
sbb
shl
and
out
enter
int
xchg
push
dec
sahf
push
sti
scas
popa
push
inc
pop
test
or
push
and
loopne
lea
cmp
pop
add
aad
retf
add
dec
nop
adc
mov
js
cdq
pop
cs
xor
lods
pop
in
cwde
sub
out
inc
js
dec
xchg
adc
shl
aad
repnz
sbb
fistp
addr16
add
mov
aaa
(bad)
test
fisub
or
(bad)
not
push
adc
mov
pop
out
test
jns
or
adc
push
mov
sbb
cmp
inc
aad
addr16
lods
ins
or
out
stos
pusha
leave
sub
push
adc
inc
test
add
fadd
pop
loop
inc
hlt
std
inc
js
mov
cli
scas
xor
sbb
lods
out
cmc
icebp
loope
scas
cmp
xchg
push
cmp
fmul
pop
jge
xchg
mov
leave
push
push
and
enter
cmc
xchg
pop
adc
and
out
and
in
jns
arpl
fldcw
stc
cmp
fwait
(bad)
xchg
movs
popa
cld
rep
cld
fadd
in
cmp
jl
pop
xchg
test
push
leave
and
into
push
mov
mov
test
out
popf
rol
test
and
mov
test
push
cmp
gs
xchg
mov
xor
dec
clc
cmp
neg
cli
xor
inc
movs
lock
ins
mov
and
xor
ret
cmp
js
enter
xor
into
pop
dec
ins
add
stos
fdiv
xor
bound
cmp
and
aas
jmp
inc
xor
test
sub
loop
jge
add
in
cmps
mov
push
jl
pop
mov
out
lahf
push
dec
ins
scas
push
js
add
inc
lock
adc
dec
xchg
daa
into
stc
cmp
retf
clc
cmps
aaa
adc
test
ds
jecxz
fmul
pushf
pop
and
jae
dec
sub
pop
jmp
mov
or
mov
fdivr
cmp
sub
aas
aam
in
lods
(bad)
jge
mov
add
pop
jns
cwde
repz
and
sbb
cdq
mov
add
hlt
int3
inc
aam
daa
mov
rcr
cmp
jp
adc
sbb
cdq
adc
test
mov
outs
cmp
ins
jnp
mov
hlt
jns
out
stos
(bad)
sub
inc
jg
addr16
fs
push
movs
push
fcom
push
fcomip
ret
xchg
retf
ror
or
push
repnz
cdq
icebp
test
add
adc
repz
pop
push
inc
sub
xor
std
push
mov
mov
lods
lods
in
dec
push
test
fnstsw
pop
and
sbb
mov
xchg
ja
dec
cmp
jge
or
pop
imul
mov
push
or
sbb
jnp
sbb
ins
xchg
pop
sub
sbb
dec
out
cmp
jmp
pop
out
in
xchg
das
or
xor
xchg
mov
in
das
jmp
inc
lea
shr
mov
movs
add
push
inc
push
push
rol
test
pop
mov
or
mov
mov
pop
dec
call
and
xchg
add
inc
xchg
dec
xor
mov
jbe
add
call
push
mov
jle
mov
call
push
xor
cmp
inc
call
test
out
aas
es
retf
inc
(bad)
mov
fmul
leave
fisttp
int3
daa
pushf
jmp
arpl
push
fimul
jl
jns
loopne
sar
idiv
loop
rcl
push
mov
pop
inc
leave
aaa
jo
push
out
jmp
iret
sub
iret
out
call
shl
cwde
cmp
dec
sub
sbb
popf
test
cmps
pop
jbe
push
les
test
pop
leave
mov
call
jb
(bad)
push
pop
ins
ss
mov
loopne
leave
push
jae
sti
js
sbb
fcomi
and
xchg
inc
aaa
popf
leave
jno
sahf
mov
icebp
pop
mov
inc
(bad)
lock
lods
lods
daa
leave
rcr
repnz
int3
mov
inc
dec
mov
pop
rcl
push
int
les
or
push
sub
(bad)
mov
pop
out
dec
mov
mov
xor
mov
arpl
loopne
ja
sub
sub
push
fdiv
dec
loopne
outs
or
jl
(bad)
sbb
jmp
jmp
imul
mov
inc
mov
dec
in
push
and
lds
in
aas
clc
leave
data16
rcl
in
fistp
es
lods
outs
out
sahf
ds
xchg
and
inc
mov
das
jmp
and
fistp
or
inc
sbb
push
test
iret
xchg
ret
scas
les
pop
mov
mov
push
nop
fimul
rcl
mov
or
push
es
sti
ins
pop
movs
mov
push
adc
jmp
ins
jb
sbb
jno
xchg
add
stc
sbb
enter
stc
sahf
inc
fadd
pop
aas
ins
neg
(bad)
test
mov
pusha
jne
fistp
or
outs
lahf
xchg
das
mov
dec
out
sbb
mov
(bad)
mov
clc
icebp
mov
dec
cmps
mov
fwait
ds
daa
jmp
(bad)
mov
push
jp
je
mov
ja
scas
mov
test
cmps
sbb
dec
test
pop
sub
lahf
jnp
retf
xlat
and
inc
xor
jg
ins
scas
add
int3
pop
mov
not
cmps
pusha
push
(bad)
pop
lds
push
sar
out
popf
add
stos
add
inc
mov
retf
outs
mov
das
stc
cmp
and
and
fsubr
mov
mov
or
jno
adc
cs
jg
xor
cdq
xor
(bad)
gs
cwde
mov
jo
dec
std
mov
sub
mov
ins
and
mov
mov
xchg
cwde
or
or
pop
cdq
dec
xlat
push
sbb
lock
fs
rcr
aaa
cmp
inc
mov
aam
aaa
fstp
xchg
(bad)
(bad)
cld
pop
cmc
iret
ins
cmp
fsubr
jno
js
retf
mov
cmp
repnz
popa
fstp
test
xchg
jg
or
push
rcl
outs
in
clc
cmp
fst
daa
cmp
cmp
mov
out
cmc
mov
popa
sub
pop
or
dec
test
call
ret
mov
ret
in
test
jbe
cmc
cmp
ror
push
stos
adc
je
xchg
test
popf
(bad)
and
sti
fnclex
das
(bad)
outs
call
mov
jmp
mov
aad
test
push
sub
mov
or
stos
(bad)
lds
and
repz
pusha
xchg
and
mov
xor
sbb
dec
mov
repz
(bad)
icebp
xchg
inc
mov
mov
mov
mov
push
push
loop
cwde
das
inc
sar
call
add
or
test
(bad)
test
(bad)
(bad)
inc
ss
retf
test
sbb
ret
mov
outs
sti
fld
test
in
inc
jge
in
stc
popa
sbb
cwde
push
sub
inc
mov
mov
fisubr
xor
jo
dec
sub
idiv
and
dec
cdq
jle
lds
push
ins
cdq
ror
aad
sbb
jns
iret
pop
dec
test
adc
iret
aad
push
xchg
outs
cmp
jle
clc
inc
and
out
or
stos
scas
addr16
shl
stos
mov
retf
sahf
loopne
fsub
test
inc
push
jae
sub
ffree
outs
lock
aas
or
adc
cmc
bound
fiadd
outs
and
les
mov
add
cmps
or
xchg
mov
lock
xor
mov
ficomp
push
dec
nop
dec
mov
(bad)
sar
xchg
xchg
retf
(bad)
fiadd
mov
out
push
cmp
adc
mov
lds
sahf
mov
or
sbb
push
mov
out
je
rol
leave
jmp
jg
in
mov
dec
pop
fwait
jecxz
or
push
outs
(bad)
push
scas
sub
inc
jb
inc
and
xchg
jg
or
pusha
mov
out
(bad)
mov
cmp
popa
mov
xchg
jnp
sti
daa
iret
sbb
dec
jge
fmul
mov
test
mov
sbb
xchg
xchg
and
pop
scas
inc
in
sub
es
les
xchg
jge
and
jnp
dec
push
dec
adc
pushf
and
jmp
outs
cmp
mov
out
inc
in
mov
jbe
dec
icebp
into
ss
fucom
jmp
cmp
test
sbb
pop
and
or
loopne
leave
inc
aad
(bad)
iret
neg
scas
cwde
pop
xor
sahf
jb
sbb
add
mov
enter
xor
shl
movs
aas
push
gs
mov
fild
enter
inc
sub
push
ret
loopne
jno
pop
mov
or
shl
mov
fadd
leave
retf
pop
retf
out
jne
xchg
and
ds
jae
pushf
test
xor
jmp
pop
fwait
xchg
inc
int3
pop
test
cmp
jae
retf
pop
push
movs
or
arpl
mov
pop
fstp
adc
cmp
and
pop
stos
cwde
out
stos
inc
cmp
mov
xchg
mov
dec
sbb
(bad)
mov
mov
mov
fstp
mov
out
and
ja
cs
mov
retf
out
mov
addr16
add
sub
(bad)
jmp
sbb
cmp
call
jmp
out
cmp
test
retf
mov
sbb
inc
mov
es
dec
jnp
je
push
fisttp
jne
or
mov
lock
push
mov
lahf
test
ret
call
sub
sahf
jp
es
es
sbb
test
loope
sub
aaa
push
lds
lock
xchg
mov
(bad)
imul
push
daa
sub
add
mov
in
pushf
dec
daa
inc
(bad)
sbb
aad
dec
or
dec
(bad)
movs
ins
fadd
dec
push
xchg
pop
and
rcr
xor
pop
daa
aam
dec
or
sbb
mov
aad
mov
xor
jle
shl
push
mov
add
fwait
cli
in
and
test
fwait
mov
adc
mov
pop
push
pop
and
or
fld
ja
xchg
push
bound
ds
movs
jl
push
dec
out
jno
nop
test
dec
int3
ficomp
(bad)
call
xor
popa
or
mov
and
pop
cmps
dec
jp
into
loop
push
and
cmp
mov
and
mov
and
(bad)
xlat
sbb
ret
stos
aas
mov
xlat
add
push
(bad)
sti
and
lea
xor
mov
sub
inc
jle
psrad
push
lock
je
jle
stos
adc
jne
aam
loope
in
push
loopne
scas
(bad)
pop
lods
jns
or
data16
popa
pop
test
aam
iret
call
nop
pop
stc
outs
jnp
jno
adc
mov
jl
cmp
add
push
jbe
jle
in
mov
pop
es
das
(bad)
jp
bound
cs
out
clc
movs
jno
in
cmp
dec
adc
sub
inc
sahf
mov
sbb
fxch
xchg
imul
std
adc
inc
(bad)
call
mov
ror
sbb
lds
imul
test
ret
imul
cs
ror
push
(bad)
xor
adc
adc
sbb
inc
adc
push
push
rcr
in
lods
aam
pop
mov
sti
or
(bad)
adc
jg
xchg
pop
jmp
outs
add
mov
pop
nop
cmp
inc
mov
stc
mov
fcomp
inc
enter
cs
push
jne
mov
repz
ret
xlat
iret
icebp
mov
out
stc
fwait
dec
iret
fcomp
mov
jns
inc
into
dec
inc
sahf
test
imul
shr
fdiv
sub
mov
gs
jecxz
inc
or
(bad)
mov
or
jecxz
jmp
cmps
push
mov
adc
(bad)
movs
add
shl
jns
sbb
std
push
dec
(bad)
stos
test
mov
or
jb
jmp
dec
scas
xor
or
cli
in
add
mov
add
ss
sub
sti
jno
out
push
ss
jl
cli
aas
mov
cs
push
mov
lds
pop
push
push
std
hlt
popf
pop
pop
push
(bad)
fisubr
jno
mov
lds
inc
push
les
sub
xor
dec
and
mov
mov
jae
sahf
lock
xor
push
mov
lock
or
pusha
test
cmps
and
rol
stos
add
pop
bound
adc
movs
adc
(bad)
int
lea
xor
out
push
pop
jmp
loope
mov
shl
mov
retf
punpckhwd
jp
jnp
mov
add
push
pop
sar
aad
iret
sub
xchg
push
out
mov
loop
bound
clc
fiadd
rcl
jecxz
mov
hlt
mov
add
jmp
retf
hlt
push
jmp
ins
fst
jb
mov
movs
mov
and
inc
lea
or
sbb
nop
popa
jns
mov
sbb
cmps
fldcw
test
pop
(bad)
icebp
jae
fbld
sahf
and
mov
inc
inc
test
(bad)
xchg
ja
cmp
or
out
jne
retf
push
mov
xchg
pushf
aad
sub
sbb
daa
outs
pop
xchg
jb
aad
mov
cli
mov
inc
ins
dec
inc
or
retf
call
adc
mov
push
jnp
push
popf
inc
pop
cli
or
fcom
imul
nop
leave
enter
cmp
in
imul
push
ret
(bad)
jecxz
xchg
mov
inc
adc
jae
mov
xor
mov
out
sbb
hlt
aas
and
xor
sbb
sbb
gs
fnstenv
push
aam
or
sub
mov
(bad)
cmp
sub
in
repz
pop
push
je
retf
ins
adc
xor
pop
repz
ret
inc
fsub
and
aad
fild
add
jo
mov
in
sahf
mov
scas
and
lahf
rcr
xchg
xlat
ds
inc
scas
add
popf
fwait
push
mov
test
bound
mov
mov
mov
in
lahf
xor
cmps
xor
add
add
or
or
xchg
stos
cmp
jno
mov
inc
cli
jbe
test
int3
mov
scas
stos
fidiv
jge
dec
fistp
pushf
pop
and
fist
in
mov
hlt
int3
mov
pop
(bad)
sbb
add
ror
jmp
in
mov
fwait
int3
cmp
arpl
rcr
cmp
xchg
call
push
and
inc
push
aas
adc
sti
push
lds
test
movs
rol
add
xchg
mov
jbe
sbb
and
dec
push
into
xchg
fisubr
xchg
cmp
cld
push
(bad)
(bad)
das
popa
jp
rcl
jmp
xchg
ins
fisttp
sub
jl
shr
inc
mov
jmp
mov
adc
xor
ds
stos
scas
sbb
xlat
mov
loope
outs
std
xchg
push
mov
callw
pop
jnp
out
mov
addr16
xlat
int
stc
jno
shl
jge
inc
in
xchg
add
ja
push
push
pushf
jmp
dec
dec
call
loopne
jo
cmp
push
mov
and
or
xchg
lea
mov
imul
jb
mov
movs
push
test
nop
cmp
cmps
jbe
xchg
aad
pop
out
inc
push
xor
inc
pop
hlt
jp
popf
mov
outs
sbb
ss
xchg
sbb
inc
sbb
push
mov
mov
mov
in
mov
and
call
outs
aaa
xor
arpl
(bad)
xlat
fisub
ds
sbb
xchg
mov
out
mov
inc
fs
xor
cwde
dec
inc
nop
jns
shr
cmp
xor
test
addr16
scas
repz
sub
xchg
js
push
out
mov
fstp
rol
pop
inc
or
jnp
push
mov
retf
mov
fcomp
adc
imul
pop
ds
push
dec
push
inc
ret
dec
push
lahf
repz
mov
mov
je
pusha
(bad)
(bad)
fisttp
int3
dec
xor
das
scas
ja
int
mov
dec
jae
push
es
cld
push
mov
xor
mov
mov
add
out
cli
cmp
xchg
push
retfw
inc
cmps
mov
dec
aas
adc
and
dec
mov
popa
pop
stos
and
popf
xlat
push
push
bound
push
mov
inc
pop
push
push
jle
pop
dec
dec
push
pusha
outs
shr
cmp
dec
jb
jno
push
dec
and
cmps
in
mov
test
movs
dec
cli
popa
xor
(bad)
dec
fbstp
jge
inc
nop
arpl
dec
xor
xor
lods
outs
push
leave
ds
jo
aam
fwait
movs
je
cld
and
(bad)
add
outs
jmp
std
sti
xor
out
add
cld
lea
inc
es
out
sub
(bad)
call
cmp
stc
pop
les
add
dec
jp
mov
retf
mov
scas
sti
xchg
or
jo
and
sahf
ret
dec
(bad)
movs
mov
lock
popa
dec
mov
test
popa
popf
xchg
mov
xor
adc
(bad)
jmp
imul
sar
adc
cld
jg
(bad)
and
sub
sub
retf
sub
sbb
shl
ins
ret
into
ret
mov
cmps
aaa
call
or
jmp
loope
cwde
fdivr
out
enter
push
test
xor
std
add
(bad)
push
hlt
mov
mov
pop
daa
dec
dec
addr16
loope
xchg
or
xor
mov
inc
fst
push
das
jns
push
pushf
hlt
and
and
mov
xchg
xor
loop
xor
mov
xchg
jae
push
popa
popa
arpl
dec
mov
fadd
repnz
sub
mov
das
nop
or
les
push
or
(bad)
adc
mov
(bad)
std
fstp
xor
pop
call
adc
cmp
push
push
dec
cdq
icebp
mov
mov
dec
psrlq
add
jns
test
pop
in
mov
sbb
mov
push
lahf
movs
stos
sti
jp
sahf
sub
call
popf
add
(bad)
das
cmp
jmp
clc
pop
out
mov
mov
pushf
sub
sbb
pusha
lds
nop
das
mov
ret
sub
mov
mov
and
and
int3
pop
pop
pop
outs
mov
and
dec
call
je
sbb
jp
pop
xor
aad
mov
push
pushf
inc
loop
movs
loope
inc
xlat
adc
les
inc
fld
jae
push
cs
jg
cmp
imul
call
out
out
sub
ins
sahf
stos
sbb
xlat
push
jmp
movs
push
inc
out
add
mov
pop
sbb
mov
aad
cmp
and
or
pusha
or
cmp
retf
jne
add
call
and
enter
mov
inc
je
mov
xchg
popa
pop
fimul
xor
mov
dec
mov
std
jmp
cmp
mov
ins
fimul
test
cmp
cld
gs
ss
inc
mov
(bad)
popf
or
movs
daa
enter
sub
icebp
test
sbb
jo
or
xor
sbb
push
xor
or
pusha
jno
pop
jb
mov
inc
in
aad
loop
daa
adc
xor
shl
aad
xchg
ds
(bad)
mov
dec
adc
popf
addr16
mov
pop
out
mov
or
leave
test
sub
add
popf
xchg
dec
(bad)
cli
pop
xor
mov
push
imul
and
xchg
ret
imul
jae
inc
fstp
ja
das
dec
enter
clc
out
in
icebp
cmp
in
fstp
mov
xor
sub
(bad)
ss
inc
and
push
cmp
dec
ficomp
push
fst
xchg
dec
push
dec
clc
aas
outs
add
adc
adc
push
jb
mov
and
mov
std
mov
call
sub
dec
rol
or
jbe
leave
je
std
ins
fwait
jb
imul
and
jl
and
mov
cmovle
call
cwde
jnp
sbb
pop
aas
mov
adc
push
xchg
or
lods
cmp
and
ds
push
je
daa
sbb
mov
ficomp
aas
arpl
jnp
jp
push
stc
cwde
in
cdq
dec
mov
jg
push
ret
xlat
dec
fmul
add
imul
xchg
and
scas
adc
push
fiadd
mov
inc
cmp
xchg
sbb
mov
pop
(bad)
adc
fs
mov
add
pop
xchg
aad
retf
mov
sbb
jl
sbb
or
xor
rcr
lock
xor
add
sub
stc
repz
jns
and
arpl
ss
xor
mov
cwde
out
fild
enter
es
js
sub
mov
lods
stos
cmp
xor
(bad)
test
cmp
cld
sar
pop
sti
aam
js
mov
repnz
jnp
mov
sbb
rcr
jns
adc
sub
mov
or
adc
dec
ds
and
xchg
pop
neg
jmp
ds
jl
mov
mov
lods
popf
add
push
jmp
mov
gs
in
sahf
mov
dec
(bad)
out
mov
mov
out
jne
add
and
adc
aas
aam
mov
mov
pop
sub
xchg
fcomi
ds
xor
xchg
out
xor
aaa
adc
dec
dec
movs
leave
mov
mov
add
or
sbb
sar
retf
fist
and
push
xor
rcl
fsubr
push
fistp
mov
pop
push
adc
push
dec
mov
cmp
movs
dec
xchg
hlt
sbb
ins
stos
scas
jmp
sbb
xchg
push
(bad)
push
mov
(bad)
or
scas
aas
and
int3
xchg
(bad)
loopne
or
vsqrtps
es
mov
push
push
jmp
xchg
mov
loope
in
pop
test
hlt
ja
cmp
sub
mov
fisttp
popf
loopne
inc
cmp
neg
push
fcomp
dec
dec
or
or
mov
and
mov
push
mov
sub
movs
cmp
sub
inc
mov
add
mov
arpl
or
fsubp
cs
repnz
fild
sub
sbb
fwait
cs
retf
push
cmp
fwait
push
jae
sbb
jae
mov
cmc
dec
and
fisub
add
loope
xlat
dec
sub
dec
dec
in
popa
pop
xor
and
mov
jge
push
aas
mov
popa
pusha
add
xchg
nop
into
mov
imul
imul
jnp
push
call
pop
sbb
push
jle
repnz
sahf
dec
movs
test
mov
add
in
aad
pop
cmc
aam
dec
out
adc
mov
cmp
sbb
sub
cwde
aam
cli
add
out
cmp
and
xor
mov
fcmovne
div
push
das
lock
idiv
les
mov
sbb
adc
ins
or
dec
dec
xchg
cmc
ins
cmp
iret
push
aas
mov
ja
test
push
dec
imul
xchg
xor
fidiv
jne
xchg
clc
add
pop
adc
mov
inc
pop
push
or
mov
mov
leave
or
(bad)
jg
std
xor
dec
or
mov
lock
fsub
sub
lds
fmul
aam
cmp
jns
es
stos
pushf
test
cmps
pop
push
js
or
and
div
cmc
and
test
xchg
rep
xor
pop
push
mov
add
dec
push
loopne
movs
(bad)
aas
fidivr
pushf
jmp
in
xor
xor
pop
push
mov
adc
xor
cmp
push
adc
loopne
add
jnp
inc
inc
popa
xchg
cmp
mov
adc
retf
mov
movs
push
jae
(bad)
mov
mov
mov
and
and
and
in
and
push
pop
stc
neg
call
jmp
cmp
call
popa
bound
dec
adc
std
les
imul
push
push
ins
mov
mov
sbb
mov
ds
dec
inc
cmp
xchg
repz
xchg
cmp
int3
fnstsw
sbb
inc
(bad)
push
in
or
mov
ss
sub
jne
inc
daa
sti
mov
sbb
mov
cdq
je
daa
nop
call
jl
loopne
jae
jno
cmp
mov
pop
xor
fucomp
adc
aam
xchg
or
scas
ja
and
mov
add
sahf
xchg
mov
inc
or
jb
outs
ret
and
add
and
jecxz
cmp
ja
outs
push
or
dec
fcmovbe
test
ds
leave
ret
lahf
cmp
pushf
mov
hlt
shl
push
add
fs
xor
add
test
call
sub
mov
mov
cmps
ds
cmp
or
adc
in
push
retf
inc
pop
in
test
(bad)
dec
call
stc
ins
cmp
test
scas
mov
es
or
loope
mov
pusha
lock
je
aam
dec
int3
imul
mov
or
test
or
leave
cmp
mov
pop
jecxz
jnp
add
dec
xchg
jb
jg
pop
imul
fst
dec
ins
ss
xchg
cmc
and
or
cwde
push
fs
xchg
sbb
addr16
ror
rcl
jmp
ins
repnz
adc
mov
and
add
xlat
(bad)
cmp
cmp
shr
sbb
or
jmp
(bad)
pop
jle
inc
sbb
(bad)
jnp
retf
dec
in
pop
rcl
addr16
ror
(bad)
hlt
mov
(bad)
and
lahf
xchg
(bad)
(bad)
call
es
mov
out
and
(bad)
mov
in
addr16
push
jno
jbe
adc
sub
loope
push
out
stc
fs
retf
call
loopne
movs
lahf
mov
ja
or
cmc
(bad)
sub
in
cmp
mov
jmp
daa
popf
pop
arpl
out
cli
and
mov
jmp
test
hlt
push
test
or
ret
jl
or
or
ds
jbe
std
rcr
add
call
(bad)
std
mov
adc
mov
xchg
iret
aas
in
mov
or
(bad)
mov
pop
aaa
lods
adc
jbe
push
jnp
inc
jb
setp
mov
inc
cli
xchg
mov
leave
fsubr
out
stc
jae
or
cdq
adc
into
cmps
les
sbb
rdtsc
lahf
jo
mov
xor
adc
and
mov
test
xor
push
aaa
fs
dec
or
sbb
and
ss
test
or
jge
inc
iret
dec
adc
shl
(bad)
jl
fld
ret
pop
clc
sbb
push
cmc
neg
sbb
jecxz
stc
cld
mov
jmp
cmp
(bad)
sti
test
(bad)
push
data16
mov
(bad)
and
shr
cmp
mov
arpl
addr16
pushf
xchg
mov
jnp
shl
(bad)
icebp
dec
bnd
ja
aaa
ds
das
enter
and
mov
cmps
jo
xor
lea
rcl
ss
ins
cmp
push
pop
(bad)
(bad)
add
lods
or
out
dec
sbb
or
test
add
mov
fs
cli
sbb
push
and
ret
xchg
shl
inc
ja
jbe
scas
xchg
or
ror
(bad)
push
loopne
jp
pushf
loope
loopne
shl
arpl
lock
iret
addr16
mov
jmp
scas
xchg
dec
data16
test
(bad)
inc
shr
mov
sbb
or
sbb
or
add
rol
shr
and
fstp
aas
daa
mov
mov
ins
sub
xchg
pop
neg
loop
pop
dec
loop
sub
aaa
sub
shr
test
js
outs
ret
outs
pop
ss
cld
mov
aad
pushf
(bad)
cmps
push
xchg
xor
out
dec
bound
mov
ror
pop
mov
dec
inc
mov
xor
mov
fld
sbb
mov
in
jbe
ins
and
jl
das
aas
and
sub
(bad)
test
scas
xor
in
into
mov
aad
data16
pop
bound
out
dec
jne
mov
aam
cmps
dec
das
clts
inc
dec
and
clc
cmps
and
test
retf
pop
nop
push
fild
enter
es
xor
jae
push
stc
xchg
sbb
aam
xor
stos
push
mov
fadd
xor
xor
sbb
popa
add
(bad)
outs
retf
(bad)
dec
shl
push
inc
(bad)
ds
daa
movs
pop
js
jecxz
(bad)
(bad)
call
fstp
cmp
xor
mov
bound
test
sbb
pop
mov
dec
mov
add
mov
ins
and
fstp
fwait
jge
xchg
sbb
jns
push
mov
aad
adc
(bad)
jg
mov
fadd
or
out
das
fstp
push
call
or
add
add
xlat
push
retf
dec
jno
push
mov
(bad)
out
imul
jmp
not
stc
dec
cmp
inc
movs
and
jmp
xchg
popa
push
jne
aad
les
dec
arpl
jle
mov
inc
ins
cmp
cmp
out
nop
aam
inc
or
into
es
mov
fwait
aad
pop
inc
add
aad
ud0
addr16
aam
mov
fsub
push
jl
sbb
(bad)
clc
ins
repz
in
(bad)
(bad)
je
enter
das
test
mov
xchg
or
cmp
rcl
ja
aad
repz
hlt
mov
hlt
outs
sbb
repz
shl
test
and
(bad)
ficomp
test
or
mov
pushf
out
jae
or
or
jnp
sub
pop
inc
xor
mov
mov
ret
div
pushf
xor
das
fnstenv
adc
mov
mov
mov
in
jno
push
or
call
cli
imul
push
inc
std
or
inc
cmp
cmp
add
cmp
add
and
call
sahf
mov
and
(bad)
adc
jnp
cmps
sub
arpl
not
bnd
or
inc
loopne
fist
mov
cs
loope
inc
mov
xchg
inc
(bad)
je
inc
cmp
lahf
out
mov
add
loop
aam
cwde
mov
jno
sti
sbb
(bad)
pusha
(bad)
(bad)
mov
push
ss
icebp
xchg
adc
or
cmove
or
fbld
push
jb
out
mov
lods
popw
loopne
adc
mov
movs
xchg
rol
inc
mov
pop
inc
(bad)
xlat
dec
sub
mov
xor
aam
jo
out
es
nop
or
dec
xlat
repz
or
loop
fs
out
xchg
and
push
mov
stc
cmp
sbb
mov
daa
add
icebp
adc
push
jno
xchg
dec
imul
sti
int3
jmp
inc
outs
pusha
mov
bound
in
fsubr
in
leave
mov
inc
push
rcl
sub
xor
push
daa
sbb
lods
push
xor
bound
mov
cli
(bad)
nop
mov
mov
mov
dec
inc
jecxz
push
cs
mov
add
sbb
add
pop
cmp
fist
nop
xchg
adc
movs
or
dec
rcr
mov
pop
rcr
das
stc
(bad)
mov
sti
iret
das
lods
xor
ret
mov
movs
or
mov
aaa
add
or
adc
ror
jnp
mov
ja
dec
mov
cmp
div
stc
out
leave
ds
xchg
adc
mov
(bad)
clc
movs
clc
xrelease
mov
adc
fisttp
fwait
repz
add
cli
lds
stos
out
xchg
jmp
pop
push
mov
cmp
mov
in
sub
pop
mov
sbb
dec
test
push
add
cmp
cmp
or
xchg
inc
and
push
lds
jge
dec
fs
imul
pop
call
dec
out
shl
jmp
in
int3
xor
aas
xbegin
push
sbb
xchg
call
inc
inc
mov
sub
pushf
test
aam
leave
(bad)
dec
rcr
cld
fadd
xchg
mov
sub
sub
mov
mov
pop
aad
mov
mov
mov
mov
outs
push
shr
dec
dec
cdq
into
or
mov
es
(bad)
sahf
cmp
cmp
sub
call
add
fistp
xor
mov
push
(bad)
test
xchg
xlat
push
fistp
xor
mov
xlat
out
(bad)
scas
xchg
pop
push
std
add
cwde
pop
inc
add
xchg
fcmovne
fs
popf
lahf
addr16
mov
dec
outs
jo
adc
and
push
movs
xlat
mov
mov
cwde
inc
loop
or
retf
xchg
jnp
push
(bad)
stc
adc
pop
addr16
or
pop
sub
inc
shl
data16
sub
or
rcl
aas
leave
sar
dec
nop
push
sbb
xchg
sub
mov
push
jecxz
and
or
push
cmp
sbb
mov
mov
ret
push
xor
pop
add
xor
xor
mov
push
xchg
xchg
cmp
sbb
loopne
push
leave
or
scas
loop
sbb
fisubr
cmp
inc
cmp
inc
mov
pop
jae
sub
fsubp
adc
adc
mov
fisttp
scas
mov
sbb
xchg
(bad)
xchg
mov
or
and
into
mov
cmps
mov
rol
hlt
enter
xchg
and
aad
inc
push
cmc
adc
popa
jg
add
leave
cmovl
sti
xor
aaa
mov
sub
mov
cmp
movs
cmps
xchg
(bad)
pop
mov
xchg
and
sub
sub
dec
jno
(bad)
xor
mov
in
std
dec
inc
ret
stos
mov
call
rol
loopne
mov
jecxz
jmp
jno
dec
jbe
mov
push
xchg
ja
push
call
cmp
mov
mov
add
pop
call
pop
fsubr
popf
and
mov
test
xor
imul
and
inc
leave
stc
sti
(bad)
pop
mov
sar
aaa
test
dec
in
add
outs
jl
stos
retf
cwde
(bad)
pop
jle
cld
aaa
nop
dec
mov
imul
test
hlt
xchg
dec
(bad)
ins
jmp
sbb
push
cdq
mov
mov
(bad)
xchg
(bad)
push
ss
add
cdq
dec
inc
add
gs
push
mov
ret
mov
pop
pop
cmp
sub
cdq
jg
inc
or
sbb
mov
mul
and
fpatan
jnp
push
test
xchg
cwde
and
cld
lods
out
pop
adc
mov
sbb
jns
test
xor
push
xor
fisttp
addr16
pop
ss
xor
cmp
or
mov
pop
aaa
adc
push
pop
cmp
xchg
xor
fcomp
mov
scas
or
xchg
inc
inc
dec
aad
xor
xor
lahf
cli
xchg
fild
mov
mov
mov
das
(bad)
inc
cdq
sub
shr
inc
dec
and
rcl
inc
mov
pusha
inc
imul
(bad)
dec
std
imul
sub
sahf
sar
paddsb
aaa
iret
out
jno
nop
xchg
push
retf
jle
xor
test
mov
push
or
imul
pop
inc
test
lahf
int
dec
add
add
and
ja
adc
jmp
mov
and
call
test
gs
or
rol
mov
test
lea
adc
in
mov
into
cwde
cmc
mov
xchg
fadd
adc
jg
pushf
mov
mov
dec
repnz
mov
inc
push
clc
fld
push
loop
mov
and
add
in
outs
lock
cld
xchg
mov
mov
sub
leave
sti
and
js
and
hlt
jo
push
dec
xchg
pop
pop
retf
mov
jae
add
outs
cvttps2pi
push
dec
or
ins
inc
repnz
stos
cmp
dec
sbb
sbb
add
sahf
ds
sub
sub
pop
xor
jno
push
mov
test
or
xchg
scas
je
and
(bad)
in
jp
scas
push
jmp
xchg
sbb
cmps
bt
or
jae
adc
fsubr
mov
mov
hlt
(bad)
in
movs
jmp
jo
daa
clc
dec
pop
retf
dec
popa
mov
les
add
xchg
mov
cs
xchg
push
push
jb
dec
or
aad
rcl
pop
xchg
inc
retf
ror
daa
inc
mov
cmc
inc
cmp
lahf
ror
in
aaa
cdq
jae
test
ins
pop
mov
adc
mov
jo
out
inc
mov
loopne
dec
cs
cld
xor
mov
xor
aam
ja
dec
popa
xchg
inc
stos
iret
sbb
mov
sbb
xchg
jb
pop
fwait
call
dec
jb
retf
xor
add
sub
push
mov
(bad)
mov
or
pop
dec
inc
sub
pop
imul
(bad)
into
cmp
fs
arpl
ret
dec
jge
jmp
mov
imul
xchg
or
pushf
adc
xor
clc
test
arpl
push
add
ins
xor
clc
xchg
pop
mov
xchg
jmp
cmp
and
test
push
inc
dec
adc
xchg
pop
out
test
mov
adc
into
stos
bound
in
call
mov
arpl
mov
xlat
in
mov
icebp
push
inc
xchg
mov
pop
test
arpl
popa
xlat
mov
mov
inc
sti
and
xor
std
mov
jae
ja
stos
jne
je
imul
lock
daa
aam
mov
cmp
cwde
mov
mov
jmp
xor
mov
aad
inc
sbb
lds
mov
pop
scas
sub
stc
dec
mov
cmc
pusha
fiadd
adc
xor
test
push
daa
ret
aas
xor
mov
xchg
xchg
cmp
cwde
pop
xchg
and
jp
movs
adc
ret
into
fpatan
sbb
leave
jecxz
jmp
mov
or
pop
enter
jnp
cmc
xchg
aaa
fs
push
xor
(bad)
fisttp
mov
mov
push
jg
pop
loope
fnstsw
out
jo
mov
movs
adc
mov
xchg
pop
cmc
imul
pusha
dec
sub
jb
jmp
movs
lods
inc
xchg
fsubr
(bad)
sahf
or
push
pusha
pop
iret
jo
xchg
xchg
fidivr
fdiv
adc
test
loop
jecxz
std
inc
mov
adc
push
mov
(bad)
ss
test
and
sub
pop
inc
and
popf
in
jle
imul
xchg
fisubr
es
shl
or
cmps
loopne
dec
fwait
xchg
jecxz
and
mov
inc
jg
outs
pop
cmps
sub
fcomp
int3
jle
mov
jns
sar
jle
inc
(bad)
retf
push
xor
scas
cwde
mov
xchg
mov
int3
jno
dec
add
out
push
aaa
dec
neg
xchg
sbb
scas
mov
inc
push
int
dec
mov
scas
xor
xchg
jecxz
jmp
stc
sub
retf
adc
xor
iret
xor
(bad)
add
push
test
or
push
push
pop
lock
inc
jns
sub
xor
and
and
das
mov
inc
les
sti
sti
cmps
inc
mov
fbld
xchg
mov
sti
mov
add
inc
dec
leave
mov
repnz
dec
inc
cmp
jl
sbb
push
push
loop
bnd
and
fcom
int
push
mov
dec
stc
push
imul
and
push
(bad)
mov
addr16
aam
js
out
je
or
sar
(bad)
leave
jmp
outs
push
jns
je
ffreep
pop
and
pop
mov
jmp
xor
cmps
loop
or
loopne
cmp
pushf
fninit
es
(bad)
push
pop
xchg
push
mov
shl
fs
out
xlat
adc
mov
scas
ret
mov
sti
sub
mov
xchg
mov
and
add
mov
cld
adc
dec
add
fnstsw
(bad)
xor
rcl
cmp
adc
xchg
push
ins
cmp
loope
or
xor
shl
mov
repz
and
das
repz
ja
in
jl
xor
scas
cld
xchg
jmp
adc
push
imul
push
and
scas
test
sbb
mov
test
cmp
push
pop
(bad)
jo
mov
adc
mov
sub
xlat
cld
pop
jne
jno
mov
(bad)
push
int
ret
xor
(bad)
cmp
sub
fnstcw
retf
jl
repnz
or
pop
push
sbb
ss
dec
les
pop
idiv
push
imul
dec
sahf
movhps
dec
inc
add
inc
push
cmp
push
xor
iret
and
aad
outs
jg
shl
scas
mov
and
add
inc
mov
in
aam
jns
test
in
mov
sub
(bad)
jb
xchg
fdivrp
add
xchg
leave
push
scas
mov
js
mov
(bad)
sahf
call
int
lock
dec
dec
push
jns
and
idiv
loopne
cmc
pop
cmps
dec
imul
call
mov
push
add
fdivp
dec
sub
xor
push
xchg
outs
pusha
fldcw
mov
ror
pop
xchg
inc
add
je
mov
jecxz
pop
add
pop
pop
push
cli
mov
xchg
dec
xchg
and
shl
push
fsubr
loopne
push
inc
in
push
and
and
inc
lods
jl
cmps
xor
sahf
cmp
adc
xchg
jg
push
jmp
mov
inc
mov
fsub
fisttp
xchg
ss
mov
pop
xor
mov
sbb
idiv
sahf
mov
fs
call
inc
mov
dec
es
sub
push
or
cmp
lock
scas
fucomi
xor
pop
(bad)
fisttp
mov
push
pop
lds
lods
rcr
repz
jle
lds
fimul
xchg
xor
cmps
jae
xchg
mov
and
int
mov
retf
stc
fnstenv
add
adc
and
or
xchg
xlat
and
test
push
imul
repz
shr
(bad)
lahf
mov
inc
mov
nop
cmc
dec
and
into
xchg
ins
cmp
int3
out
mov
mov
or
adc
arpl
or
(bad)
repz
xchg
inc
les
sbb
popf
dec
jl
dec
sbb
shr
mov
(bad)
sti
adc
gs
sbb
jae
and
aaa
addr16
outs
pop
das
imul
xchg
adc
cmp
push
cli
adc
push
inc
loope
(bad)
retf
mov
xlat
outs
xchg
ins
mov
push
xchg
cmp
xchg
loop
cli
shl
loop
inc
jns
stc
sbb
scas
pop
test
fabs
cmp
xchg
mov
add
push
fnstsw
inc
cmp
mov
pop
xor
or
imul
jl
lods
mov
inc
jle
push
fadd
inc
push
(bad)
js
adc
sub
rcr
mov
loopne
xchg
and
push
add
into
lahf
lods
icebp
adc
ja
pusha
mov
lea
cmp
stc
adc
lods
pop
xor
call
cld
hlt
inc
push
sub
mov
pop
mov
or
add
(bad)
cmp
movs
pop
inc
mov
pusha
repz
dec
repnz
les
mov
mov
daa
inc
inc
push
sub
sub
jae
mov
rcr
ret
js
mov
lds
sub
mov
into
mov
pop
in
mov
leave
sbb
fcmovbe
fldcw
sbb
cmp
mov
push
jge
and
mov
ret
retf
ss
mov
xchg
xchg
test
mov
ja
xchg
mov
outs
outs
stos
lods
icebp
push
or
cmp
or
jae
sub
sub
jg
push
aad
mov
dec
or
adc
cmc
test
loope
or
ret
jno
mov
rep
fisttp
ror
xchg
inc
jl
mov
mov
std
out
jo
dec
xor
mov
test
cdq
pop
ins
cmp
pushf
push
sub
mov
mov
lods
retf
cli
ficomp
sbb
and
fwait
xor
fsubr
div
xor
fcom
dec
scas
push
cmp
jle
or
and
in
pusha
outs
leave
mov
in
dec
and
mov
xchg
add
xchg
test
ds
rep
jecxz
adc
jg
jmp
adc
mov
outs
imul
adc
cmp
(bad)
ss
push
adc
xor
xchg
sub
fwait
stc
test
and
dec
outs
adc
or
ds
mov
clc
sub
movs
dec
push
mov
mov
in
sbb
ja
mov
push
and
pop
push
pushw
cs
or
cmp
cmp
repnz
ret
fadd
mov
add
mov
push
(bad)
test
movs
cmp
movs
lea
ds
(bad)
out
pop
push
sbb
loop
sbb
pop
shr
adc
jno
adc
aaa
sub
xchg
jns
mov
adc
xchg
add
popa
ins
mov
or
push
std
aaa
int
pop
icebp
mov
adc
cmp
add
jle
pop
shr
retf
in
lods
push
inc
daa
add
imul
loopne
ret
mov
dec
dec
int
rcl
shr
mov
push
sbb
jbe
mov
ja
add
jb
dec
ja
fs
push
fld
rol
call
retf
or
jge
cmp
xchg
inc
sub
hlt
rep
dec
mov
fidivr
jg
lods
pop
push
cmps
fcmove
repz
cmp
fwait
rcr
ret
(bad)
je
retf
pop
mov
scas
and
or
bound
sbb
xchg
jbe
xchg
(bad)
adc
aam
mov
pop
dec
ret
addr16
les
adc
imul
mov
(bad)
mov
pop
mov
(bad)
out
add
sti
clc
jnp
dec
imul
inc
(bad)
jne
or
pop
test
sub
xlat
jl
adc
shl
mov
sub
aaa
iret
sub
cld
mov
inc
(bad)
data16
stc
ins
repnz
jmp
mov
mov
jmp
outs
lods
or
mov
shr
push
daa
clc
iret
mov
or
xchg
pop
dec
pop
es
addr16
loopne
lods
and
into
jnp
inc
pop
cmp
gs
dec
jge
inc
(bad)
cli
mov
xchg
xlat
jmp
fld
add
stos
fcmovnbe
arpl
xor
cmp
mov
lahf
add
or
arpl
or
mov
jo
cmp
mov
mov
ret
mov
mov
xchg
loope
(bad)
jge
sbb
mov
mov
fs
sub
cdq
fdivr
pop
(bad)
dec
sub
imul
pop
cmp
cmp
add
std
cmp
in
aaa
jns
lods
fwait
out
shl
cmp
test
test
push
inc
jo
iret
jns
xlat
clc
call
jg
test
pop
iret
and
mov
test
dec
jbe
out
loopne
daa
push
pop
mov
cli
shl
repnz
xchg
cmp
data16
sub
aas
shl
rol
jp
std
and
xchg
pop
dec
out
inc
lea
push
hlt
jnp
fimul
les
mov
mov
repz
sub
push
enter
lock
repz
pop
mov
add
fcom
bound
rcl
xchg
mov
xchg
push
xchg
inc
push
sub
scas
mov
xchg
pop
aad
int
xlat
rcr
lods
adc
adc
pop
mov
movs
or
pop
lock
cmp
vpmacssdql
rol
cmp
outs
ret
mov
and
out
scas
test
adc
movs
fwait
mov
data16
out
adc
lock
jb
mov
fcomip
dec
mov
mov
stos
mov
xchg
mov
sub
push
iret
sbb
push
mov
inc
inc
icebp
cmp
sti
cmp
arpl
loopne
retf
push
cmc
loope
and
push
gs
sbb
and
repz
lods
jmp
or
jne
aam
inc
das
mov
arpl
sub
out
inc
xchg
xchg
sub
(bad)
push
fidivr
add
ds
xor
into
push
mov
out
jg
outs
add
cmps
cmps
and
sub
mov
xchg
int
jbe
bound
and
idiv
popa
jle
xchg
shl
add
xchg
jl
cld
lods
sti
retf
mov
sbb
sti
mov
pop
push
leave
sbb
lock
lods
pop
leave
mov
add
xchg
mov
and
mov
cdq
loopne
pop
popf
stos
dec
sub
push
ins
call
arpl
jb
adc
jecxz
jle
jp
jo
ret
pop
and
(bad)
fmulp
sbb
pop
mov
dec
lahf
adc
das
lock
push
jg
pop
fnsave
mov
sahf
cmp
test
cmps
js
loop
js
popa
scas
fadd
cmps
int
call
push
sub
outs
loopne
mov
xor
xchg
jnp
jle
add
int
loopne
jnp
push
cmp
or
aad
and
add
inc
mov
movs
inc
sub
xchg
mov
mov
ss
rol
mov
jbe
xchg
mov
ss
cli
ror
inc
xor
jne
(bad)
push
mov
popa
outs
mov
ins
outs
cmp
out
xor
popf
sbb
stos
std
(bad)
stos
test
in
mov
add
fidivr
adc
xor
stos
aaa
scas
lods
fs
cmp
repz
xor
mov
cmps
rcl
push
pushf
test
(bad)
pop
(bad)
aaa
clc
xchg
add
mov
sbb
loope
jp
cmp
sar
fidivr
xchg
(bad)
int
enter
or
iret
ins
(bad)
xlat
pop
mov
pop
mov
out
mov
jns
mov
scas
std
mov
xchg
dec
dec
sub
scas
call
jmp
cli
mov
iret
inc
stos
scas
call
or
lahf
pop
aam
retf
push
lods
aad
sub
clc
rcr
inc
xchg
std
xor
push
dec
movs
cmp
push
mov
je
or
mov
scas
lea
sub
add
popa
pop
popa
aam
ds
mov
xchg
xor
push
int3
or
cmp
lods
push
stc
lods
fist
sbb
pop
pop
inc
xchg
cmc
cmc
daa
iret
js
mov
sub
test
xchg
xor
dec
mov
adc
and
stc
gs
mov
inc
mov
loopne
xchg
mov
outs
lods
inc
enter
shr
arpl
pusha
int3
mov
jmp
aam
dec
or
pop
aad
xor
push
lock
xor
mov
jns
mov
out
js
aaa
inc
lods
test
fimul
inc
hlt
mov
jecxz
lods
jns
inc
lods
cmp
push
sbb
jmp
out
mov
hlt
aas
loopne
outs
dec
movs
hlt
cli
ja
js
sbb
sub
mov
push
retf
test
pop
movs
daa
mov
mov
(bad)
shr
ins
fstp
pop
push
jp
sub
mov
aas
dec
mov
jno
mov
sbb
mov
push
or
inc
mov
dec
or
pop
jns
out
dec
jnp
and
jbe
jo
leave
or
pop
lods
push
xchg
push
popf
mov
in
xchg
xor
pop
mov
xchg
mov
jg
cmp
je
or
pop
mov
or
ja
xchg
test
mov
adc
leave
retf
sbb
xor
adc
xor
shl
adc
sbb
add
and
or
sahf
pcmpeqw
(bad)
mov
shl
push
and
les
jb
cmc
cmp
cmp
int3
je
(bad)
fsubr
dec
xor
(bad)
jp
add
mov
jg
cmp
dec
iret
inc
addr16
cld
mov
cmp
js
inc
fdiv
pop
adc
cmp
movs
mov
in
(bad)
(bad)
sub
es
movs
jo
mov
sar
dec
lea
scas
lahf
push
cmp
popf
ins
cwde
mov
sub
adc
(bad)
mov
aaa
gs
(bad)
pop
inc
shl
stos
leave
mov
cmp
jmp
les
fs
xchg
clc
jge
call
add
mov
aad
pop
enter
(bad)
sbb
pop
adc
sub
aas
mov
in
mov
in
jmp
mov
fmul
in
ret
jno
sub
jno
or
inc
stos
mov
aas
ins
dec
inc
mov
inc
adc
inc
dec
mov
jns
fcmovbe
(bad)
push
pop
push
mov
repz
js
and
or
dec
mov
dec
sbb
movs
mov
(bad)
mov
adc
test
imul
push
add
inc
jnp
cmps
into
cs
test
(bad)
jae
addr16
or
cmp
push
push
fstp
fwait
xor
mov
mov
mov
out
fwait
pushf
xchg
out
movs
push
jmp
jge
fwait
repnz
das
or
pusha
in
test
fnsetpm(287
dec
aas
cmps
rcl
add
jmp
mov
movs
outs
cmc
sub
jg
xchg
popa
lods
test
stc
push
or
bswap
ja
aad
push
jl
nop
out
xchg
sar
aas
mov
imul
leave
push
in
in
xor
test
arpl
enter
les
dec
stc
popf
fild
xchg
rol
movs
pop
(bad)
repz
(bad)
call
(bad)
aam
push
out
or
lods
jge
inc
rcr
test
add
sub
adc
test
pushf
arpl
add
imul
pop
jle
loopne
adc
jmp
add
xor
movs
jne
xor
pusha
shl
mov
xor
leave
push
or
pop
mov
bound
loop
mov
sbb
jg
into
sbb
lods
dec
les
jae
mov
add
ror
(bad)
call
cli
arpl
es
push
mov
lods
cmp
lahf
loope
mov
pop
adc
sti
push
adc
mov
mov
lock
push
or
das
or
pop
pop
and
and
lods
fs
push
fs
and
adc
mov
push
inc
and
mov
sbb
int3
inc
pop
clc
cwde
stos
jg
ror
add
push
inc
inc
mov
fistp
lahf
add
push
or
aas
test
dec
add
add
aaa
add
adc
dec
inc
add
mov
cmp
not
cmp
pop
outs
mov
cmps
(bad)
xchg
aas
xchg
int3
or
call
sti
xchg
in
movs
scas
dec
adc
or
ret
aas
and
mov
das
mov
and
popa
clc
out
add
mov
add
imul
mov
hlt
mov
(bad)
sbb
mov
dec
(bad)
out
adc
add
inc
push
push
outs
ins
test
ror
(bad)
stc
jg
imul
add
xor
adc
xchg
adc
movs
(bad)
imul
mov
mov
test
inc
mov
and
ins
nop
cdq
mov
jg
aas
cmps
sbb
outs
adc
add
adc
jg
push
mov
cmc
addr16
sbb
or
and
(bad)
sbb
js
mov
or
jns
pop
dec
xchg
ins
iret
inc
in
xor
fisubr
mov
sbb
jno
push
cs
mov
in
pop
xchg
adc
xchg
outs
jmp
push
xor
xor
ds
sub
cmc
inc
xchg
adc
div
imul
inc
mov
mov
ss
test
xchg
retf
mov
fs
arpl
in
fcom
mov
fsub
jp
dec
cmp
sub
pop
(bad)
addr16
sahf
in
dec
xor
inc
jl
loope
pop
mov
in
gs
jle
inc
add
cli
xchg
(bad)
mov
cs
xchg
mov
add
mov
les
iret
leave
ins
sub
and
scas
aam
into
imul
je
cmp
in
xchg
push
xor
sbb
daa
cs
sbb
imul
(bad)
jae
pop
inc
push
sbb
ins
retf
pushf
pop
popa
and
pop
xchg
mov
mov
push
jbe
movs
xchg
fmul
mov
inc
cmp
in
in
push
scas
icebp
je
or
sti
(bad)
out
sub
xchg
ret
sub
inc
js
adc
in
pop
pop
ins
aam
adc
add
aas
xor
jge
push
into
cmp
sub
adc
and
jae
fdiv
imul
mov
icebp
test
(bad)
and
imul
push
hlt
mov
mov
icebp
mov
sub
dec
pop
sahf
imul
call
int
hlt
aam
push
pop
jb
call
or
mov
ret
stc
int3
inc
inc
sar
jmp
xor
ds
neg
dec
addr16
mov
out
cmc
(bad)
dec
in
cli
adc
lods
js
rol
jge
and
add
and
rol
mov
and
dec
arpl
dec
xor
ror
dec
dec
rcl
mov
dec
pop
cwde
icebp
pusha
pop
xlat
ret
cmp
xchg
sub
loop
loop
cmp
pusha
outs
pop
xor
fimul
sbb
cmps
mov
gs
ds
xchg
and
pop
mov
inc
mov
push
dec
ins
and
inc
(bad)
ins
push
cmp
or
sbb
cmps
mov
test
neg
push
std
inc
test
or
lds
imul
(bad)
jecxz
jae
lods
inc
cmp
mov
ds
outs
xor
jp
xchg
adc
adc
cmps
or
xchg
sbb
push
and
(bad)
lock
out
pop
retf
(bad)
sbb
mov
pop
pop
add
jle
or
xor
ja
push
adc
inc
clc
es
pop
mov
sbb
rol
(bad)
mov
xor
rcl
(bad)
mov
stos
or
jmp
jns
inc
mov
test
xchg
stos
gs
sub
fs
jp
mov
fs
cmp
mov
std
cmp
push
lds
(bad)
aas
mov
sbb
mov
stos
test
push
jmp
add
jp
push
jo
mov
aas
xor
xlat
lea
inc
add
xchg
out
nop
std
repz
pop
jmp
in
(bad)
pop
add
addr16
mov
maxps
sbb
and
mov
rep
rol
hlt
jp
push
mov
std
fmul
cdq
add
out
inc
and
mov
cmp
inc
aaa
and
sti
out
pusha
lahf
cmp
in
jne
xchg
xchg
mov
mov
fucomi
pushf
repnz
imul
sub
mov
out
jae
pusha
inc
cmps
cmp
add
adc
push
xchg
and
inc
jle
mov
xchg
xchg
sub
loop
mov
mov
sahf
inc
(bad)
jns
mov
jo
scas
push
mov
ja
pop
jns
pushf
fiadd
push
xor
into
push
mov
add
mov
jecxz
std
ficomp
test
mov
sub
adc
movs
test
mov
(bad)
movs
pop
mov
push
or
cmp
jmp
xabort
sahf
stos
not
or
cwde
mov
xor
cwde
push
push
dec
mov
push
retf
lds
pusha
adc
or
add
aas
idiv
pop
or
int3
mov
retf
jp
add
(bad)
fimul
xor
or
scas
add
lods
mov
test
mov
push
push
mov
out
js
xchg
dec
mov
call
gs
dec
mov
ds
dec
je
imul
mov
rcr
ins
and
xchg
mov
sbb
mov
push
mov
xor
retf
pop
movs
jl
xchg
sbb
sub
and
into
inc
sub
inc
push
and
adc
cmp
push
movs
cld
cmp
es
push
sub
test
cli
(bad)
arpl
mov
std
xchg
push
pop
jecxz
push
icebp
push
sbb
mov
push
push
lea
and
jmp
(bad)
pop
lods
xchg
fwait
call
jae
popa
inc
and
add
ret
into
dec
mov
mov
cld
cmps
ret
pusha
ret
pcmpgtd
gs
daa
or
mov
xchg
cmp
inc
xor
repz
adc
in
rcl
pop
(bad)
mov
push
add
int3
inc
shr
push
add
call
sub
fisub
loopne
lahf
pop
xor
(bad)
mov
adc
in
ret
pop
cmc
and
xchg
jo
dec
test
pop
out
or
pop
imul
neg
add
push
inc
je
ja
add
xchg
adc
ficomp
ss
(bad)
int3
mov
pushf
sbb
jnp
imul
pop
call
push
inc
mov
movsx
imul
aas
sbb
push
inc
in
fmul
push
mov
dec
push
mov
out
(bad)
ja
fcomip
mov
jmp
das
dec
sub
cmp
or
sbb
fisub
std
mov
cli
nop
add
daa
cld
adc
jne
jmp
pop
pop
imul
les
imul
imul
sbb
(bad)
ds
es
push
xor
mov
mov
outs
or
push
mov
dec
sbb
mov
popf
sahf
jecxz
xchg
lea
popa
daa
mov
test
lods
inc
mov
xor
mov
shr
shl
sub
cmp
icebp
sub
hlt
sub
retf
outs
leave
lods
push
jbe
push
cmp
adc
sub
ja
(bad)
xlat
out
dec
nop
fbstp
popf
cmp
test
stos
ja
and
fwait
jno
ds
or
jge
jg
loope
mov
cmp
mov
mov
test
icebp
mov
mov
loopne
cs
pop
leave
mov
inc
aaa
inc
xchg
daa
sbb
into
leave
and
movs
cmp
rol
stos
add
and
push
sub
iret
loope
test
stos
in
shl
inc
(bad)
and
and
movs
pop
or
mov
sbb
dec
pushf
lods
ins
inc
cs
push
pop
enter
inc
mov
movs
push
sub
add
shl
aas
ss
push
mov
xor
sub
xlat
xor
iret
or
mov
sub
clc
outs
in
fwait
bound
(bad)
mov
dec
xor
mov
inc
repz
adc
add
xor
cdq
shr
jae
sar
(bad)
pop
movs
hlt
push
ins
xor
inc
and
ss
int
mov
inc
adc
xor
(bad)
fdivp
mul
in
xchg
xor
in
stc
adc
push
shr
arpl
jns
stc
fldcw
(bad)
call
lods
pop
xor
push
xlat
popa
sahf
fcom
cmps
aaa
leave
mov
in
call
movs
cmp
inc
mov
ja
add
lods
and
fmul
test
aam
ds
sar
(bad)
mov
pusha
scas
jge
cmp
dec
cmp
add
call
jbe
dec
or
pop
ss
pop
push
(bad)
xchg
jmp
or
dec
ja
mov
dec
xchg
jecxz
retf
repnz
shl
pop
sahf
pop
fsubr
pop
fwait
out
mov
xchg
enter
pusha
push
jbe
push
(bad)
gs
xchg
div
mov
ins
sbb
jecxz
adc
push
daa
loop
mov
cwde
arpl
push
shr
mov
jno
test
xchg
inc
pop
stos
mov
dec
retf
inc
mov
pop
jmp
jl
jb
xor
in
je
add
xchg
sbb
out
fwait
movs
pop
shl
dec
out
pop
mov
idiv
fsubr
call
adc
push
arpl
mov
dec
xchg
push
data16
lods
ds
or
mov
sub
add
jno
mov
and
ds
(bad)
adc
repnz
stos
dec
dec
mov
mov
fucomip
xor
push
out
cmp
pushf
test
push
xchg
cmp
data16
bound
(bad)
bound
cmp
dec
inc
add
mov
movs
jge
(bad)
aam
pop
loop
(bad)
push
into
or
cmp
(bad)
xor
dec
jg
popa
xchg
rcr
loope
inc
nop
hlt
std
scas
ret
daa
cmp
(bad)
pushf
dec
xchg
lea
cmp
cmp
ficom
stos
or
push
and
sub
sub
dec
jg
mov
in
jbe
std
test
test
mov
je
mov
sub
adc
inc
mov
fimul
shl
cmp
cmp
gs
iret
sub
mov
(bad)
inc
sbb
ror
xchg
cmp
outs
sbb
ins
(bad)
jbe
cld
(bad)
push
adc
jb
sbb
das
movs
sbb
jns
vpsrlw
jg
nop
pop
lea
mov
lock
mov
shr
xchg
not
ror
mov
adc
cwde
lahf
adc
in
ror
popa
call
adc
cmps
push
fwait
xor
hlt
loopne
sbb
xor
jne
cmps
jp
sahf
sbb
jno
arpl
es
or
ficom
add
out
or
ins
in
adc
or
stc
jge
pop
(bad)
adc
dec
lock
shr
xor
mov
ror
xchg
int3
jnp
movs
ss
out
dec
mov
sub
cwde
adc
icebp
int3
mov
or
pop
xchg
(bad)
mov
out
pop
jmp
(bad)
mov
add
test
sar
dec
imul
imul
les
push
mov
cmp
stos
and
inc
sahf
push
lea
rcl
sub
in
stc
push
(bad)
mov
push
or
add
lock
jle
xchg
clc
xlat
jl
jmp
fstp
ja
push
out
mov
js
push
sub
jmp
cli
add
sti
fwait
sbb
mov
cmp
std
mov
enter
mov
aad
add
ins
dec
loopne
ins
push
ins
enter
xor
popf
jb
call
jb
dec
fcomp
daa
jle
lods
loopne
cmp
inc
xor
mov
xchg
pop
adc
add
sub
scas
lock
mov
and
adc
lea
add
jp
cs
mov
cli
sbb
and
push
out
or
or
jae
push
xor
ins
sbb
xchg
in
push
push
and
and
adc
mov
shl
div
mov
push
add
imul
mov
pop
leave
cmps
in
cmc
shr
aad
popa
pop
call
ror
mov
cli
movs
adc
rcl
mov
rol
xchg
push
les
js
push
stos
aam
enter
pop
int
or
scas
xor
mov
retf
clc
cmp
dec
mov
cmp
div
mov
nop
and
dec
mov
fbld
(bad)
imul
xchg
addr16
mov
xchg
push
xor
adc
cmp
in
jo
hlt
shl
inc
shr
add
sub
stc
repz
or
cld
adc
gs
adc
shl
inc
cmp
or
xor
pusha
bound
pop
rcr
pop
inc
dec
jns
mov
sub
or
(bad)
dec
cdq
cld
mov
mov
cmps
lock
inc
test
dec
jecxz
pop
ss
call
or
adc
mov
pop
aas
fsub
xchg
push
mov
xor
push
fstp
in
xchg
cmp
sub
dec
sbb
mov
and
ret
jmp
sub
jmp
stc
aam
or
push
xchg
pop
pop
scas
or
cdq
ja
mov
lock
dec
mov
xlat
add
or
jmp
std
popf
xchg
cmps
cmc
xchg
add
in
mov
push
jbe
jge
not
idiv
xchg
or
xchg
pop
stos
xchg
in
imul
sbb
xchg
aas
ror
mov
ret
mov
addr16
out
in
jmp
inc
test
adc
in
addr16
fsubr
push
cmp
adc
(bad)
test
les
jge
cmp
add
cmps
test
into
push
xchg
aaa
scas
cmp
mov
sub
sbb
retf
fdivr
cmc
push
cmp
movs
add
jmp
mov
inc
imul
jne
rcl
sub
jns
sbb
pop
add
outs
ret
cmc
call
(bad)
and
stc
or
inc
stc
push
std
dec
stc
xchg
pop
inc
repnz
adc
and
or
neg
mov
ret
clc
xor
pop
icebp
adc
sbb
jge
ret
aam
push
mov
(bad)
sti
lds
(bad)
jmp
sbb
mov
repz
jmp
push
out
or
cmp
ror
xor
mov
push
hlt
mov
lods
adc
jle
mov
int
leave
clc
shr
mov
stc
cli
pop
xor
cs
dec
les
ds
pop
jne
out
xor
jge
inc
in
and
add
movs
mov
pop
dec
retf
fisttp
daa
and
shr
mov
sar
sbb
mov
mov
push
cmp
(bad)
mov
shl
arpl
or
(bad)
mov
or
and
mov
pop
pusha
movzx
into
xor
div
(bad)
mov
call
mov
ds
jo
in
jne
xor
mov
rcr
push
and
out
mov
inc
scas
dec
xor
fsubr
xor
pusha
cmc
dec
cdq
scas
repnz
loopne
pop
xor
cdq
aaa
shl
imul
or
inc
ds
stos
inc
mov
ins
cwde
das
loop
xor
dec
push
cmp
loope
stc
mov
sub
cmp
and
sbb
ins
jbe
popa
and
jns
clc
ror
and
out
call
xchg
stos
and
push
(bad)
pop
add
mov
or
mov
fimul
adc
xor
xchg
pop
lods
and
add
vmovshdup
fdiv
mov
ror
jnp
mov
lds
jecxz
jns
jo
imul
ret
ret
emms
or
pop
jb
sub
mov
fisttp
jge
mov
rcl
repz
add
dec
ja
icebp
ins
jno
xor
jmp
cmp
iret
test
sahf
add
(bad)
ret
(bad)
in
jb
lods
pusha
mov
ror
out
add
aas
(bad)
add
call
cli
fcmovnb
pop
jbe
stc
pop
jmp
dec
pop
and
dec
(bad)
mov
adc
mov
or
xor
xchg
mov
jbe
push
xchg
ins
popa
inc
retf
mov
(bad)
sti
mov
mov
dec
mov
mov
xchg
adc
pop
cmp
fs
scas
outs
jmp
mov
jnp
push
(bad)
jmp
inc
repz
pop
mov
pop
repz
pop
mov
mov
push
sbb
inc
loop
popa
shl
xor
pop
jns
sub
int3
pop
dec
jle
ss
jmp
sbb
aam
push
adc
lahf
cmc
jmp
sti
ja
sub
call
cmp
push
adc
out
fucomip
mov
pop
jmp
or
jecxz
adc
inc
ret
mov
mov
loope
fistp
jb
mov
fistp
and
gs
inc
fidivr
adc
(bad)
cmc
xor
shl
mov
jb
cmp
sbb
mov
add
push
mov
mov
daa
cmp
imul
push
imul
dec
inc
pop
mov
mov
iret
retf
jno
lahf
popf
fisub
or
in
int3
cmp
jmp
mov
xor
sub
test
cmps
lahf
mov
sbb
or
cmps
cmc
retf
cld
popa
mov
add
sub
or
pop
stos
leave
sub
add
dec
and
stos
aad
in
(bad)
aad
fild
dec
mov
mov
sub
mov
add
mov
push
xor
js
or
(bad)
or
lea
(bad)
and
or
icebp
mov
aad
push
push
shr
mov
lahf
jb
out
ds
div
int
sahf
dec
pop
mov
sbb
mov
retf
mov
js
sub
push
xchg
pop
icebp
test
xchg
daa
fmul
mov
sub
icebp
push
rcr
fs
rol
repnz
neg
ins
cmp
xchg
(bad)
fs
aaa
push
bound
fbstp
jp
scas
rcr
push
scas
or
aad
xchg
jmp
into
sub
push
dec
ds
pop
sbb
cld
scas
inc
cmp
mov
fadd
loopne
pop
loop
adc
pop
xchg
push
push
xor
les
retf
mov
in
xchg
mov
in
retf
repz
fisubr
cmps
mov
in
xchg
mov
stc
mov
out
test
adc
dec
not
cmp
xchg
inc
aas
sti
or
pop
add
mov
fiadd
cmp
pop
cmp
call
xchg
ds
adc
and
movs
cmp
lods
jecxz
fist
test
dec
jne
push
pop
(bad)
fldenv
movs
mov
push
add
hlt
cmps
std
mov
and
(bad)
aas
mov
imul
jnp
pop
pop
arpl
jne
popa
mov
mov
retf
cld
xlat
(bad)
cmp
fisttp
xlat
adc
dec
inc
sub
lahf
leave
dec
popf
push
adc
das
lds
mov
sbb
xor
out
in
push
adc
fdivr
sub
and
cwde
jbe
cdq
adc
jecxz
mov
push
mov
mov
mov
pushaw
xchg
sub
push
sbb
outs
leave
sbb
inc
fist
into
or
jbe
popa
jns
in
jecxz
fisub
(bad)
(bad)
and
das
push
rcr
in
inc
mov
mov
imul
add
(bad)
lock
(bad)
imul
or
and
in
pop
mov
dec
ds
jg
mov
imul
mov
mov
pop
je
lea
(bad)
jp
xor
cmp
cmc
adc
bswap
cmp
out
jle
dec
in
(bad)
(bad)
div
mov
test
popa
in
or
arpl
adc
fsubrp
mov
(bad)
cmc
jge
(bad)
pop
cmc
mov
(bad)
lea
aaa
pop
dec
test
jo
int3
pop
mov
(bad)
loopne
mov
outs
cmc
sbb
shr
pop
add
dec
sub
out
mov
adc
data16
mov
lods
pusha
shl
popf
pop
sub
add
xchg
add
xor
sub
aam
inc
cmp
and
xlat
mov
dec
sub
fistp
jge
jb
add
outs
loopne
jl
jecxz
mov
xor
out
adc
mov
xor
ss
scas
dec
shl
mov
test
cld
lea
dec
shl
push
lds
mov
je
mov
lods
jecxz
sub
in
and
cmps
outs
mov
mov
loopne
and
outs
mov
ret
mov
frstpm(287
mov
sub
(bad)
add
inc
(bad)
std
aaa
jno
dec
xor
pop
dec
sbb
sub
jno
out
xor
pop
sub
mov
xchg
adc
dec
cdq
fwait
mov
test
icebp
pushf
mov
ror
sub
xchg
cmp
enter
fld
dec
lods
stc
push
mov
cli
pop
sbb
jnp
repz
sti
mov
mov
push
inc
in
aad
dec
sub
pop
in
mov
jne
sbb
and
shr
xor
dec
das
aam
jl
lods
push
mov
sbb
out
bswap
cwde
adc
pop
xchg
popf
movhps
scas
pop
(bad)
bound
or
cmp
xchg
mov
(bad)
sbb
xchg
daa
add
aas
test
mov
xchg
and
push
inc
out
cmp
mov
int3
sahf
loope
pusha
(bad)
in
xchg
rcr
or
aad
gs
pop
mov
ret
sub
mov
jae
push
retf
scas
cmp
bnd
sbb
jno
inc
dec
pop
and
pusha
cmps
dec
clc
dec
sub
movs
and
js
jo
mov
dec
mov
leave
int3
setne
mov
scas
mov
mov
dec
cmp
push
fs
push
mov
push
sbb
mov
xor
mul
xchg
add
inc
test
fiadd
bound
sbb
outs
mov
adc
mov
aad
test
xchg
mov
add
push
je
mov
std
inc
in
xchg
(bad)
les
push
jo
aaa
xchg
lea
dec
push
fs
test
maskmovq
dec
jle
and
aaa
mov
in
std
ret
ror
jmp
sahf
or
or
adc
dec
xchg
push
pop
cwde
fnstenv
push
lock
adc
fsub
lahf
in
pop
xchg
mov
in
pop
sbb
into
shr
dec
pop
in
mov
inc
push
or
out
out
xor
xchg
xchg
movs
and
push
add
push
push
mov
aad
mov
loope
adc
repnz
mov
sbb
cmp
inc
xchg
movs
fwait
or
in
jl
fs
call
and
mov
jno
xchg
stos
dec
push
mov
sub
sbb
outs
stos
add
ins
(bad)
jg
inc
mov
or
or
ret
cdq
movs
aas
xchg
in
sub
hlt
pop
add
xor
enter
mov
lds
pushf
idiv
mov
adc
mov
call
push
popa
add
jnp
add
pushf
and
cld
adc
dec
inc
lea
std
cmps
dec
push
jmp
pop
and
cs
adc
adc
lods
out
mov
scas
inc
or
cmps
xchg
xchg
in
add
mov
push
popa
fs
hlt
call
js
shl
cmps
bound
mov
push
cs
fimul
add
das
ficom
pushf
mov
popf
into
xor
stos
or
(bad)
sti
sbb
out
push
jbe
gs
push
and
cs
cmc
bnd
push
cmc
adc
xchg
test
dec
xchg
ins
fld
sbb
pop
jo
(bad)
(bad)
ss
je
cmc
rcl
retf
fisub
aad
pop
push
call
std
mov
lock
call
inc
iret
shl
mov
xchg
or
cli
jecxz
pop
call
jnp
fcmovb
xchg
sar
jmp
nop
aam
sbb
lea
xchg
xor
sahf
fwait
movs
js
mov
xor
mov
pop
push
enter
in
enter
imul
or
pop
pop
or
xlat
push
div
bound
sbb
popa
mov
imul
in
icebp
mov
cmp
leave
mov
or
mov
xchg
cmp
mov
arpl
(bad)
arpl
test
or
repnz
lahf
push
xor
out
stos
sar
movsx
xchg
jmp
or
in
pop
outs
retf
mov
pushf
cli
fsubp
or
jns
arpl
fisubr
ins
sub
adc
adc
dec
add
xchg
and
mov
mov
push
jae
or
dec
out
retf
pop
and
mov
push
inc
xor
movs
ds
jg
xlat
mov
add
add
xor
cwde
adc
cmp
sbb
jp
xchg
push
pop
cmp
mov
gs
fild
push
lahf
cmps
nop
or
xor
pop
popf
jbe
stos
dec
leave
lds
daa
out
fwait
dec
movs
sub
cmp
sbb
lods
lahf
ret
cmc
add
rcl
cdq
call
and
pop
sbb
mov
xchg
clc
aas
sbb
mov
sub
push
loopne
mov
push
repz
out
xor
and
ins
mov
outs
out
adc
xchg
lock
push
jmp
in
cld
mov
adc
jecxz
pop
jle
mov
pop
popf
addr16
int
mov
ss
leave
fsubr
add
cmp
and
or
mov
sbb
hlt
jl
rol
(bad)
lods
jne
adc
(bad)
mov
sti
mov
aad
loopne
pop
cmps
neg
or
movs
test
loopne
adc
mov
mov
or
fisttp
cmp
(bad)
hlt
sar
cmp
adc
iret
inc
jmp
aaa
repz
pop
movups
dec
mov
(bad)
mov
icebp
sbb
dec
test
imul
imul
cmp
sbb
cmp
xchg
(bad)
cli
cmp
fcmove
mov
and
cmc
test
aam
and
es
mov
mov
movs
std
sahf
test
xlat
enter
jl
jbe
mov
loopne
xchg
aad
call
retf
test
adc
cs
dec
out
xor
loope
clc
(bad)
call
daa
popf
mov
mov
inc
xchg
(bad)
mov
leave
jae
ins
dec
mov
cs
add
or
push
fstp
pop
sub
xchg
rol
mov
js
mov
imul
mov
mov
mov
nop
adc
pop
add
and
dec
enter
dec
mov
out
(bad)
mov
fisub
mov
retf
cmp
add
popa
aad
and
jp
cmc
jg
retf
push
dec
jmp
in
or
pop
mov
pop
sub
push
bound
in
or
cmp
xlat
test
mov
lods
sub
in
mov
mov
sub
js
icebp
rol
popf
pop
mov
mov
jne
xchg
ds
xchg
sub
adc
scas
fs
cmp
(bad)
(bad)
push
(bad)
mov
mov
pop
xchg
out
sbb
mov
mov
xchg
test
leave
jo
stos
cdq
hlt
in
cs
lds
add
fmul
enter
mov
mov
scas
fwait
mov
mov
dec
jnp
retf
retf
dec
and
ret
popa
out
inc
and
pop
sti
sub
mov
push
or
sbb
dec
dec
mov
adc
ds
inc
shl
mov
inc
mov
jo
push
mov
pop
ficom
pop
or
imul
repz
test
rcl
mov
stc
rol
fstp
fsubr
add
test
push
xor
(bad)
shr
movs
out
xor
mov
dec
xor
loop
jb
jnp
xchg
bound
das
jo
dec
mov
mov
(bad)
retf
and
cmps
fadd
ret
sahf
frstor
in
xor
mov
sbb
(bad)
dec
inc
push
fidiv
rol
push
jmp
sub
inc
out
call
pop
int3
add
fdiv
fbld
and
sbb
mov
inc
add
adc
outs
dec
imul
cmc
mov
gs
mov
push
arpl
inc
xchg
aaa
cmp
pusha
cmovp
push
pusha
enter
mov
ret
mov
mov
xlat
adc
mov
stos
pop
and
iret
dec
jle
dec
sub
imul
xor
std
mov
mov
bound
push
(bad)
sub
fwait
test
or
std
movs
fcomp
(bad)
adc
jge
enter
and
das
out
sub
xchg
(bad)
fldln2
mov
popf
push
xchg
inc
test
stc
mov
dec
in
push
nop
jae
imul
jl
stc
sbb
push
jle
movs
adc
daa
jmp
in
in
dec
push
mov
xor
mov
fst
popa
jmp
adc
stc
xchg
jecxz
mov
jle
out
mov
sbb
sub
jne
aaa
jbe
stc
cmp
jmp
lds
shr
xor
cwde
leave
gs
xchg
inc
sub
push
push
in
ins
cwde
adc
femms
mov
push
fsub
sti
mov
sahf
add
pop
shl
ja
add
ins
mov
push
mov
mov
in
out
push
add
mov
rcl
sbb
repz
cmps
fstp
sub
shl
push
cmp
or
adc
mov
test
cmp
fcom
xchg
cmp
and
sub
add
sub
xchg
les
dec
aam
jno
mov
sbb
shl
push
out
leave
or
fcom
mov
xchg
jge
pop
push
ret
stos
lds
scas
(bad)
xchg
jg
push
sub
(bad)
fnstcw
pop
xchg
sbb
xor
ins
mov
aad
jbe
retf
sub
cmps
push
mov
jg
and
sbb
inc
packuswb
fadd
dec
cmp
add
rol
es
pop
push
xor
psrlq
(bad)
scas
jo
mov
mov
idiv
leave
loop
mov
or
push
fldcw
mov
dec
jg
jno
dec
and
das
rol
xchg
rol
(bad)
loop
sub
mov
push
imul
aam
repz
mov
in
aad
loope
push
jg
test
xor
sbb
hlt
ret
xlat
outs
push
sbb
jo
lock
out
adc
mov
jo
cmp
(bad)
clc
test
sti
mov
sbb
pop
call
push
push
inc
jl
ret
outs
mov
jnp
and
dec
fs
push
xlat
dec
jnp
push
ficom
cmp
jne
xor
cli
ins
add
outs
cmc
and
pop
pop
xchg
fwait
call
rol
inc
pop
fcomi
push
xor
xor
mov
push
dec
sbb
es
(bad)
es
push
mov
into
(bad)
pop
mov
call
repz
imul
fdiv
dec
enter
loopne
lea
popf
jmp
or
popf
jle
mov
mov
lds
ficom
(bad)
imul
push
mov
sbb
or
(bad)
pop
(bad)
and
push
into
mov
ret
sbb
imul
mov
mov
push
jae
jmp
or
jmp
pop
lea
ja
dec
mov
add
add
cmc
xor
shl
push
push
adc
pop
into
mul
pop
in
(bad)
mov
jbe
sti
data16
clc
pop
inc
mov
call
aaa
mov
push
sbb
fwait
cmp
pop
hlt
hlt
sbb
pop
mov
and
pop
dec
dec
in
leave
jmp
xor
aad
pop
sbb
cmp
test
and
xchg
ss
mov
lds
psubusb
ss
iret
xchg
ss
jle
push
mov
loopne
lds
jbe
push
jns
aam
(bad)
push
test
ror
bound
mov
adc
jmp
adc
call
jg
mov
or
sub
mov
dec
rol
pop
jb
(bad)
cld
div
mov
fsubr
jle
xor
or
out
xchg
sub
add
xchg
clc
mov
dec
leave
push
shr
cmp
mov
cli
aas
or
addr16
dec
jg
loopne
ror
push
nop
pop
and
and
jg
repnz
mov
cmp
rcl
jae
shl
adc
or
jge
mov
sbb
out
and
loop
mov
push
daa
add
aaa
cli
aam
cwde
sub
mov
push
jne
sbb
in
dec
or
mov
cmp
inc
or
jns
test
test
sbb
pop
rol
cmps
xor
movs
xor
mov
fcomip
push
out
adc
(bad)
fadd
lock
or
add
call
outs
repz
add
sbb
rcr
pop
xlat
adc
cmps
xchg
test
pop
fadd
sbb
cmp
(bad)
adc
add
jbe
xchg
sub
and
out
sbb
add
cdq
cli
(bad)
add
gs
cmp
ins
fstp
mov
sub
add
out
lods
daa
in
sub
mov
adc
es
jbe
mov
pop
jae
pop
xor
dec
dec
fs
and
cs
out
push
stos
xor
add
(bad)
sub
and
xor
sbb
stc
mov
adc
mov
jnp
or
jge
jecxz
out
xor
sbb
sbb
jbe
sbb
sar
or
pop
and
cmp
repz
cmps
xor
mov
mov
jp
stc
bound
add
idiv
hlt
hlt
(bad)
pop
test
std
adc
xor
sbb
into
(bad)
cdq
(bad)
(bad)
cmps
aas
aad
xor
sbb
push
and
or
clc
dec
jne
rcr
xchg
cmpps
imul
and
adc
or
pop
adc
jmp
inc
mov
jmp
shld
dec
jne
js
lea
in
jp
inc
dec
bound
mov
mov
jns
lea
lods
scas
sub
fnstenv
dec
lds
xchg
arpl
sbb
xchg
nop
cmp
jl
jg
std
push
xlat
pop
enter
adc
mov
pop
out
daa
dec
and
fsubr
int3
bnd
mov
mov
push
inc
bound
fadd
sub
pop
loopne
aam
es
retf
xlat
mov
outs
pop
push
cmp
repnz
adc
repz
xor
inc
jg
in
xlat
test
ficom
jg
retf
inc
dec
xchg
or
icebp
mov
sbb
mov
push
fs
push
cmp
xchg
lds
gs
and
adc
addr16
cmp
mov
push
imul
in
pop
mov
mov
or
push
mov
xor
ret
or
out
mov
inc
sbb
dec
or
jne
into
stos
add
(bad)
mov
scas
dec
sub
pop
pop
nop
lods
adc
push
push
cmp
mov
jle
sub
outs
mov
in
push
cwde
repnz
mov
je
xchg
push
cdq
add
inc
call
out
ins
push
ins
mov
clc
pop
es
xor
or
inc
das
pop
xchg
js
push
pop
mov
and
jns
xor
imul
enter
push
dec
or
call
sbb
idiv
cmp
pop
ret
xor
outs
out
sbb
jne
ja
cmp
xor
(bad)
xor
cwde
pop
pop
arpl
inc
sar
sub
fisub
cmp
aaa
mov
scas
cmp
dec
mov
inc
push
pop
iret
adc
ret
jb
xor
mov
call
xchg
pop
scas
test
xor
jp
bound
or
sbb
jae
and
rcl
(bad)
enter
or
or
es
jecxz
inc
or
lahf
mov
shr
lea
fild
cwde
jns
dec
jns
cmp
fsub
mov
jns
inc
out
sub
mov
aam
in
inc
test
sub
inc
inc
pop
movups
call
les
sahf
(bad)
leave
xchg
pop
xor
scas
add
sub
pop
into
add
adc
mov
cmp
cmp
xor
inc
sbb
loop
retf
(bad)
outs
movs
sbb
jl
sub
ror
xor
sub
pop
pop
loopne
and
push
inc
xchg
mov
out
mov
inc
outs
lds
sbb
mov
push
jnp
and
fisttp
add
add
pop
cmp
xor
test
pop
(bad)
and
jg
imul
xor
jb
xor
jbe
call
fidivr
jmp
ins
mov
mov
dec
sti
mov
cmps
xor
jae
adc
pop
movs
push
stc
retf
pop
rol
sar
ficom
inc
jns
ret
and
fidiv
lods
xor
ds
sub
(bad)
std
mov
sbb
ds
test
or
inc
retf
outs
sub
sar
not
dec
pop
and
into
fdivr
fucomip
jo
shr
lahf
or
or
cmp
int3
mov
(bad)
inc
cwde
std
xor
xchg
popw
mov
idiv
add
sub
sub
mov
mov
cmp
push
call
jl
cmp
sahf
les
test
loope
xchg
or
cmp
mov
popf
(bad)
push
push
xchg
mov
add
test
(bad)
repnz
out
call
inc
push
(bad)
ins
pushf
iret
daa
xor
inc
inc
movs
add
or
inc
add
ss
cmp
cmp
jo
jns
scas
push
mov
cli
mov
jmp
cmps
sbb
int3
mov
cmps
ds
loopne
jbe
xchg
sar
bound
inc
test
dec
mov
mov
mov
jno
pop
inc
jb
in
scas
movs
cmp
jle
shl
inc
or
jecxz
sub
jno
mov
jmp
xchg
dec
fwait
retf
movs
inc
or
adc
fs
dec
xchg
dec
mov
call
cmp
imul
jmp
jnp
inc
lahf
cli
xchg
leave
stc
test
clc
jo
and
stos
test
repnz
test
push
sbb
lds
dec
jae
mov
and
fsubr
add
mov
dec
out
mov
sbb
rcl
xor
into
sbb
fs
daa
mov
fs
mov
ja
mov
pop
jmp
dec
(bad)
loopne
mov
or
movs
add
ss
shr
pop
aam
inc
mov
jg
cdq
pop
ss
scas
retf
test
pop
repnz
test
and
jmp
dec
or
jae
push
in
leave
scas
imul
and
scas
(bad)
pop
xor
dec
cmps
fst
test
pop
xchg
cmp
stc
hlt
dec
sub
sbb
imul
pop
and
pop
ret
mov
or
je
lds
dec
dec
movs
push
pop
jbe
jmp
in
jg
xchg
push
lock
inc
cs
mov
jmp
pusha
int3
add
out
pop
imul
rcl
mov
cmp
mov
aas
cmp
lea
scas
inc
add
add
xchg
test
out
or
cmp
jmp
sahf
and
xor
pop
enter
and
jnp
adc
ficom
fwait
sbb
push
mov
ja
push
(bad)
jecxz
hlt
jl
or
ins
mov
sub
jns
or
add
mov
or
retf
mov
mov
push
int
in
mov
iret
rcr
dec
cmps
sub
(bad)
ja
cmp
sbb
retf
aad
dec
cld
pop
jle
inc
mov
jmp
aaa
inc
repnz
ins
mov
sbb
stos
cmp
jl
mov
mov
sbb
fdivr
das
xchg
shl
xchg
mov
jmp
imul
or
hlt
rol
mov
mov
add
inc
stos
outs
jb
pop
sahf
push
xor
pushf
mov
icebp
(bad)
loop
ins
adc
push
bnd
or
pop
test
loope
add
lds
mov
fcomp
xor
jp
mov
out
xchg
jns
iret
or
(bad)
mov
jp
add
popa
loop
sbb
aaa
lock
inc
cmp
rcl
mov
scas
int3
pusha
lock
je
jge
mov
jbe
xor
out
data16
stos
or
popa
rcr
or
ds
ins
mov
nop
push
mov
inc
mov
aaa
scas
inc
ja
pop
imul
or
push
je
ret
inc
shr
lea
sbb
sahf
aaa
xchg
sbb
push
(bad)
inc
cmp
dec
add
sbb
or
test
cld
dec
shl
addr16
mov
stc
aaa
mov
push
sbb
into
iret
add
retf
add
(bad)
jnp
xor
js
inc
cmp
fbld
pop
jns
movs
cli
ret
jne
repnz
es
movs
dec
enter
retf
push
sub
cs
dec
ja
adc
lahf
push
and
xor
neg
outs
ret
ror
and
mov
and
adc
retf
repnz
idiv
dec
movs
retf
gs
stos
dec
dec
retf
leave
xchg
lock
jae
in
test
in
rcl
(bad)
mov
jge
mov
mov
pop
adc
fnstsw
test
ss
pop
jmp
loope
dec
jecxz
repnz
mov
or
sar
xchg
xchg
shr
je
lods
add
and
imul
leave
pop
jnp
or
mov
push
sbb
mov
jmp
jb
js
mov
rep
(bad)
jbe
es
sub
inc
imul
loop
test
xchg
xchg
mov
fadd
jle
add
push
fs
cmp
inc
mov
scas
cmp
push
inc
stc
inc
or
pop
cld
xchg
mov
add
mulps
or
enter
sub
ins
sar
(bad)
jae
test
je
push
fnstsw
add
xlat
inc
dec
mov
or
mov
fcom
lods
rcl
mov
ins
sbb
ror
or
adc
das
test
and
test
mov
push
adc
popf
xor
fnstcw
adc
mov
push
mov
inc
ficomp
jbe
push
iret
in
pushf
mov
aas
fmul
rcr
imul
sub
inc
dec
mov
pop
fidiv
je
mov
and
jle
mov
std
(bad)
xchg
cdq
pop
push
mov
dec
adc
xchg
pop
add
push
jmp
rcr
out
scas
push
pop
ret
mov
sbb
push
push
xor
test
hlt
aad
icebp
stos
icebp
mov
ds
mov
enter
movs
inc
or
mov
clc
cmp
inc
jecxz
aas
push
mov
dec
pcmpeqw
lods
cmc
je
dec
das
mov
mov
dec
inc
cmps
inc
clc
adc
add
shl
test
clc
push
adc
push
sub
pushf
xchg
pslld
ret
pop
push
lea
xchg
aad
and
inc
mov
rcl
xchg
cmp
clc
iret
xchg
mov
in
sub
xor
jbe
cli
jecxz
cmp
data16
cmp
or
inc
jmp
push
mov
bound
cmps
xchg
not
jae
scas
push
adc
test
inc
inc
call
jo
pop
or
jne
push
xchg
and
in
mov
(bad)
jns
pop
lods
pop
or
jns
dec
sbb
cld
mov
xor
idiv
inc
push
mov
push
pop
mov
cmp
mov
push
dec
loopne
scas
xor
push
test
or
inc
sbb
xchg
mov
xchg
sbb
in
jecxz
jge
jmp
sub
inc
inc
inc
mov
shl
xor
repz
xchg
sub
mov
aam
sar
into
sub
cmp
dec
and
fld
aam
mov
mov
adc
xchg
sub
push
mov
(bad)
mov
mov
push
mov
dec
pop
xor
sub
mov
push
or
sbb
ss
pop
dec
sbb
rol
in
outs
dec
cmc
push
out
test
out
cmp
aam
adc
(bad)
xchg
lds
xchg
(bad)
mov
cmp
and
dec
cmp
xchg
or
test
jmp
mov
add
push
ucomiss
test
dec
arpl
dec
xor
pop
stc
fmul
std
lods
retf
mov
daa
ficomp
sahf
mov
add
mov
mov
test
and
sbb
jmp
mov
fild
cli
pop
jl
sbb
dec
imul
aad
pop
ss
xor
fwait
(bad)
xchg
lahf
mov
jno
and
push
arpl
(bad)
mov
jge
xchg
test
or
cmp
adc
test
lock
stos
adc
xchg
ror
hlt
outs
sbb
stos
sahf
pop
cwde
jmp
cmp
(bad)
inc
cmps
push
enter
xor
not
xchg
push
aas
mov
stos
ins
sub
sub
lahf
test
out
adc
mov
movs
pop
ret
movs
or
push
popf
sub
pop
test
push
fcom
xchg
xchg
js
retf
pop
or
dec
(bad)
adc
ins
icebp
and
outs
push
cmps
cmp
push
xchg
cmp
xlat
sbb
shl
xor
or
inc
not
imul
push
lahf
mov
add
push
pop
mov
add
sbb
rol
lea
scas
lods
xchg
cmp
ficomp
jbe
repz
xchg
push
loopne
loopne
jmp
call
in
stc
fild
imul
mov
mov
xchg
xor
out
pop
jnp
das
jecxz
jmp
sub
xchg
imul
jbe
mov
rcl
xchg
(bad)
in
jmp
out
push
hlt
sahf
and
pop
(bad)
in
jl
jg
xor
xchg
in
lds
gs
inc
inc
sbb
lock
jo
mov
sti
cwde
ja
test
xor
or
sbb
les
xchg
push
cmp
add
jmp
and
xchg
jae
add
rcr
adc
aas
push
mov
or
(bad)
pop
test
fmul
push
arpl
push
and
cmp
cmc
lock
out
inc
ror
push
jb
push
push
jle
dec
into
daa
into
out
retf
pop
ror
jp
dec
xor
inc
mov
mov
sub
out
jns
es
mov
data16
outs
popa
imul
dec
dec
repz
inc
sub
sub
sub
mov
cmps
pop
ins
aam
and
aas
cmc
xchg
xor
movs
jmp
mov
push
in
je
mov
jo
push
rcr
fistp
mov
jmp
mov
jne
mov
pop
stos
pop
pop
add
pop
mov
pop
ror
sbb
das
sbb
(bad)
mov
sub
cmp
mov
mov
fstp
adc
mov
lods
and
mov
imul
in
mov
inc
inc
cli
sti
xchg
xchg
push
sub
mov
ss
stos
dec
push
mov
jnp
les
xor
jge
repnz
stos
pop
push
pop
and
add
jbe
jge
add
mov
ins
jl
inc
jl
sub
mov
push
and
cmps
sub
sbb
jmp
or
adc
cmc
cmp
adc
mov
inc
push
es
popa
scas
retf
das
bound
movs
lods
pop
loopne
push
mov
xchg
pushf
dec
dec
adc
xor
dec
fcomp
xor
xlat
mov
mov
pop
xlat
(bad)
retf
jmp
into
lahf
jae
inc
test
mov
in
retf
dec
fld
(bad)
iret
or
sub
iret
lock
call
add
retf
bound
data16
bound
mov
aad
push
xchg
xor
or
push
cmp
iret
add
es
scas
push
aad
push
out
cwde
ds
xor
mov
pop
dec
dec
xchg
loopne
xchg
adc
sbb
or
lock
or
push
test
data16
out
inc
jp
xor
in
bound
jnp
sub
pop
push
popf
inc
and
push
sahf
popa
imul
xchg
and
std
popf
mov
jns
cmp
mov
fisttp
adc
sub
out
cmp
retf
call
into
mov
cld
and
cmps
adc
adc
ins
in
mov
or
loopne
inc
jbe
fiadd
push
sahf
pop
sti
ja
xor
sbb
push
imul
xor
hlt
inc
push
sbb
and
mov
fist
sbb
mov
mov
jo
xor
jl
or
out
jo
xchg
add
dec
sub
mov
push
ja
adc
call
movs
aam
xlat
dec
jb
jl
xchg
push
or
pop
xlat
pop
inc
push
ror
ret
shl
pop
ret
inc
in
xchg
jmp
mov
xchg
(bad)
movs
push
mov
mov
sar
sbb
ret
mov
add
loope
cmc
mov
cmc
js
jp
clc
int
call
test
sub
lahf
inc
cmp
jl
mov
arpl
aas
xor
mov
rcr
xchg
test
adc
xor
jg
jle
enter
inc
int3
stos
add
lea
das
dec
or
adc
mov
mov
xchg
pop
setge
push
ins
adc
(bad)
(bad)
rcr
mov
cmc
cmp
sbb
cmp
nop
movs
mov
fld
mov
or
adc
scas
cmp
pop
pop
popa
inc
nop
sbb
loope
jl
mov
pop
pop
xchg
jns
push
jae
push
sub
iret
mov
push
xchg
mov
aas
xchg
out
(bad)
mov
mov
repz
les
ss
bound
jp
jecxz
hlt
xor
mov
icebp
icebp
xor
adc
cdq
scas
inc
rcl
cmp
mov
adc
fnstenv
push
and
pop
mov
das
cmp
stc
xor
pop
jp
xlat
mov
mov
gs
adc
and
cmp
lea
or
outs
inc
mov
jbe
cli
and
xchg
xchg
or
and
mov
mov
retf
xchg
arpl
fsub
aaa
stos
push
cmp
pop
scas
and
ret
cmp
aad
add
in
xor
mov
push
shl
fcmovnb
push
imul
and
cmp
std
sar
jp
clc
jns
xchg
mov
push
adc
mov
mov
or
cmp
or
test
shr
clc
cmc
popa
cmps
push
adc
ret
push
gs
test
lock
inc
jmp
rcr
pop
mov
xchg
retf
js
push
arpl
test
sbb
jno
xchg
push
or
pop
ds
xchg
inc
sbb
pop
or
dec
add
add
mov
arpl
pop
jp
inc
ja
and
inc
fstp
push
ja
sbb
xor
shl
adc
or
cdq
cwde
into
idiv
inc
fsubr
mov
int3
push
outs
int3
pop
hlt
inc
mov
stc
push
repz
ss
pop
mov
push
dec
scas
pop
out
arpl
daa
leave
pop
(bad)
fadd
lods
test
stos
scas
add
aas
out
scas
rol
push
pop
push
pop
hlt
xchg
int3
repnz
cli
outs
data16
mov
dec
mov
icebp
adc
xchg
mov
cmp
sbb
out
in
pop
fisttp
mov
pop
into
int
shl
add
(bad)
mov
nop
sub
sbb
dec
xor
iret
jnp
ss
xchg
sub
popf
aad
out
rcl
popa
xchg
xor
lahf
mov
shl
fstp
clc
imul
pop
std
push
dec
or
(bad)
sbb
cs
aas
ss
jae
lds
adc
adc
icebp
rcr
xchg
add
jle
inc
cmc
jg
inc
sub
es
lock
push
dec
jo
mov
lods
daa
pop
test
scas
mov
stos
dec
pop
fdivr
addr16
xlat
push
sahf
mov
adc
into
bound
and
sbb
fsub
mov
mov
pop
mov
mov
xor
inc
mov
jp
cld
lds
nop
aad
dec
out
pusha
xlat
mov
mov
xchg
lahf
in
(bad)
mov
rcr
loop
and
mov
fwait
lds
add
dec
mov
mov
or
and
inc
rcr
sti
xchg
pop
orps
std
dec
sub
ss
push
sbb
div
es
in
xlat
adc
mov
sub
mov
test
mov
outs
call
popa
xchg
pop
cmps
sbb
push
arpl
adc
jnp
or
or
imul
jno
or
movs
push
sub
notrack
dec
xor
ss
or
inc
sti
mov
idiv
ins
push
ret
adc
mov
cmp
jge
int
mov
push
inc
dec
in
cmp
inc
ds
(bad)
push
mov
push
test
lods
mov
mov
xor
xchg
dec
push
(bad)
sbb
jbe
add
clc
pop
(bad)
adc
adc
or
dec
fdiv
rcr
push
ja
lods
pop
ds
movs
or
xlat
cmp
mov
ficom
sub
and
or
and
inc
pop
dec
(bad)
xchg
pop
xor
xchg
rcl
push
inc
cdq
pusha
and
or
or
xchg
out
test
cld
xchg
cmp
enter
cmp
movs
push
cmp
dec
scas
xchg
sub
pusha
scas
leave
sbb
push
idiv
mov
xchg
and
fst
test
(bad)
cmp
scas
lock
(bad)
pop
lods
adc
cmp
bswap
pop
dec
cmp
sub
in
mov
rcl
add
add
inc
in
jns
sub
ss
push
jmp
repnz
dec
lds
mov
daa
out
dec
push
inc
or
xor
push
add
or
call
jle
in
inc
xchg
dec
aaa
nop
push
jne
sar
push
sub
lods
mov
push
bound
cmc
pop
xlat
outs
stos
call
dec
or
xchg
xor
add
icebp
imul
sub
dec
scas
fiadd
out
movs
retf
int
xchg
push
(bad)
xlat
push
xor
push
push
sbb
push
(bad)
fstp
mov
cdq
adc
push
cdq
jmp
adc
jp
pop
shl
sbb
sbb
stos
cli
sbb
jo
js
xor
mov
lea
or
adc
or
stos
xchg
out
cmps
arpl
push
dec
fisttp
xlat
cmp
jecxz
sbb
mov
daa
xchg
outs
out
cmps
cmp
pop
pop
arpl
pusha
mov
fbld
mov
out
sbb
fistp
pop
xor
sti
outs
push
rcl
or
fs
push
cmp
(bad)
test
inc
shl
repnz
pop
stos
ins
ja
into
frstor
scas
dec
inc
imul
adc
adc
(bad)
sub
je
hlt
data16
not
adc
jbe
ret
and
push
inc
xor
ja
in
hlt
pop
pop
mov
xchg
push
pop
mov
lock
dec
mov
call
push
and
fcom
mov
jb
in
das
(bad)
mov
mov
jns
shl
or
xor
inc
mov
movs
dec
sbb
jno
cmp
adc
push
stos
pop
sbb
and
and
sar
dec
mov
lods
jae
hlt
add
sbb
jge
sbb
mov
test
jg
call
or
loopne
pop
hlt
rcr
aaa
and
adc
inc
pop
(bad)
fld
sahf
or
mov
cdq
cmp
inc
sub
in
mov
mul
out
lock
sub
fidiv
je
cmp
ss
jae
adc
cmp
sbb
icebp
lods
ror
jns
cmp
jmp
into
dec
das
mov
pop
ss
jg
dec
nop
ret
mov
mov
in
mov
rcl
cmp
pop
xor
add
cli
(bad)
jno
imul
or
shl
adc
push
dec
and
call
cmp
lahf
or
mov
push
mov
test
mov
in
movs
sub
jnp
inc
cmp
fisttp
xchg
stos
pop
inc
push
aad
mov
adc
mov
jecxz
cmp
dec
mov
inc
pushf
loop
arpl
cmp
pop
cli
pusha
in
(bad)
jb
sbb
jge
test
pop
xchg
call
cmp
je
scas
lock
sub
test
or
in
(bad)
out
and
adc
jl
pop
lea
pop
dec
mov
bound
fidivr
scas
arpl
mov
shr
mov
push
xchg
jp
mov
pop
mov
cwde
cmp
(bad)
push
fs
add
fild
(bad)
mov
cmp
imul
inc
lods
cs
clc
pusha
cmc
arpl
enter
clc
lahf
int
test
lahf
or
and
adc
pop
add
inc
imul
aaa
(bad)
jno
fs
lahf
das
mov
(bad)
inc
mov
(bad)
rcl
fdivr
shl
cmp
(bad)
xchg
aad
cs
adc
arpl
pop
shr
js
cmps
ja
and
pop
enter
dec
xor
stc
jge
rol
gs
jge
xchg
loopne
pop
es
sbb
ins
jge
pop
jo
fadd
fld
pop
aam
jb
push
jmp
jecxz
cmp
scas
arpl
jns
in
fcmovnb
push
ins
or
test
mov
pop
add
mov
fsub
or
jmp
cmp
dec
(bad)
inc
repnz
pop
(bad)
out
fst
loope
and
dec
es
(bad)
les
xor
call
dec
and
mov
std
std
add
inc
jecxz
addr16
and
add
push
stos
scas
cmps
cwde
jmp
mov
test
outs
jg
cdq
movs
push
mov
loopne
sbb
icebp
or
out
je
cmp
out
fstp
sbb
sub
js
addr16
fcomp
add
mov
icebp
loopne
in
cwde
sub
xor
push
xor
in
mov
push
mov
(bad)
aas
or
push
pop
clc
mov
(bad)
daa
les
mov
jo
scas
pop
out
(bad)
out
cmp
pop
or
popa
inc
movs
jmp
xor
(bad)
stc
pop
cmp
fwait
push
mov
test
sbb
inc
cmps
adc
adc
pop
jge
xchg
inc
xchg
cs
jns
lods
dec
pusha
dec
cdq
cli
mov
mov
vpsrad
dec
add
add
inc
inc
bound
int
mov
in
aam
jo
cli
push
cmc
cs
in
popa
add
mov
push
retf
cmps
out
test
xor
ins
push
mov
out
aad
imul
das
int3
fisub
xor
xchg
adc
adc
dec
dec
push
ja
xlat
(bad)
jle
sub
xchg
push
test
das
mov
mov
jbe
xor
xchg
fld
cmp
imul
out
pop
add
jmp
ret
pusha
frstor
xchg
ins
add
or
adc
cwde
push
mov
pop
dec
jnp
or
mov
sbb
cmp
outs
fisttp
pop
jl
and
or
mov
mov
adc
lahf
mov
retf
inc
scas
sbb
mov
cmp
daa
sub
fistp
ror
loopne
inc
cmps
(bad)
outs
repnz
repnz
arpl
add
xor
adc
fdiv
inc
pop
jns
leave
jle
(bad)
jne
test
scas
data16
and
fdivr
dec
sub
lahf
jbe
js
stos
sbb
jge
mov
xchg
stos
or
nop
cmp
mov
or
pop
lods
cmc
stc
leave
fcom
rcl
rcl
push
scas
and
adc
int3
sub
pop
je
enter
ss
mov
std
mov
lds
aas
dec
mov
pop
jno
mov
xchg
mov
dec
push
sub
mov
imul
jne
stc
not
ret
xlat
mov
dec
out
call
cmp
jecxz
sbb
jle
shl
lods
adc
cmp
cmp
jno
or
add
pop
cli
pop
fimul
jnp
mov
mov
ja
and
push
push
and
inc
jmp
inc
push
in
ficom
or
stos
ret
fcmovb
ins
inc
pop
push
ja
or
lods
into
push
sbb
(bad)
sbb
call
popf
stos
js
cmp
mov
mov
sub
xchg
and
retf
outs
ins
enter
loop
xchg
js
(bad)
mov
xchg
out
adc
and
enter
jbe
inc
add
cmc
stc
pop
push
xor
mov
popf
add
jp
loopne
push
frstor
jl
popf
dec
jmp
pop
call
sbb
test
mov
dec
push
retf
jns
scas
mov
dec
xchg
inc
call
cmps
ficomp
dec
add
fwait
pop
mov
loop
and
mov
adc
sub
mov
fstp
pop
mov
dec
dec
mov
pop
mov
vandpd
imul
and
jne
mov
or
ret
cmp
mov
cmps
leave
fisub
jle
in
xchg
shr
mov
cmps
nop
aam
pop
test
mov
xor
(bad)
int3
xchg
sub
cmp
and
pop
or
mov
and
xlat
jmp
and
inc
and
inc
adc
push
push
int
cli
(bad)
std
fs
mov
sub
scas
fadd
push
mov
or
push
xlat
or
jmp
ret
arpl
xor
cli
fild
data16
and
mov
and
and
jle
adc
loope
int
das
dec
aaa
and
pushf
cmp
push
mov
scas
jo
push
push
sub
mov
mov
and
aas
push
out
pop
or
lea
mov
pusha
adc
loop
mov
mov
rol
mov
cdq
xor
jmp
lods
sub
ds
(bad)
fst
adc
mov
push
in
es
arpl
lahf
pusha
not
xor
cmp
sub
(bad)
and
sub
jb
sbb
inc
xchg
pop
sub
xor
mov
mov
dec
sahf
mov
imul
std
out
adc
jbe
aas
xor
stc
lock
jg
popa
jb
sub
sahf
std
jns
sub
pop
sti
cmp
sbb
pop
xchg
icebp
into
jo
lods
and
cmc
or
neg
or
cmp
hlt
add
xchg
stos
pop
ins
push
mov
cmp
sbb
pop
cmc
and
xor
movs
xchg
lea
inc
sub
xchg
and
add
mov
movs
mov
jmp
stc
pop
arpl
pop
mov
add
aaa
push
mov
gs
sbb
mov
fdivr
ins
leave
pop
pop
(bad)
mov
adc
push
aaa
sub
pop
mov
xchg
jmp
mov
test
dec
es
mov
stos
imul
mov
and
push
scas
ss
cmp
(bad)
or
sbb
lods
mov
ins
xchg
popf
sub
push
ret
sub
xchg
mov
(bad)
pop
movs
pop
lods
xchg
jmp
sbb
scas
pop
mov
popf
inc
lea
adc
lea
xchg
xor
aaa
pop
dec
popa
shl
(bad)
sti
addr16
inc
sub
dec
arpl
or
sahf
xchg
jo
jmp
xchg
into
aas
loope
jb
sbb
push
cmp
iret
ins
fsubp
loopne
jne
fsubr
push
mov
jmp
clc
push
sbb
jmp
jno
push
xchg
mov
lods
scas
push
and
mov
cmp
adc
jge
mov
std
daa
mov
dec
outs
jmp
jne
and
popf
ins
(bad)
xchg
(bad)
adc
sub
test
mov
and
fmul
test
test
lea
jmp
lock
fnstenv
in
mov
mov
jne
dec
xchg
jle
aad
xor
dec
mov
and
or
add
mov
in
mov
cmps
jne
sbb
test
xor
(bad)
pop
xchg
cmps
inc
les
push
scas
hlt
(bad)
fpatan
stc
jge
inc
jmp
mov
mov
dec
out
or
rol
dec
cmp
push
adc
adc
jbe
inc
pop
inc
adc
or
jno
bound
sub
out
lea
mov
test
or
cmps
and
mov
sbb
sbb
stos
retf
enter
jmp
jecxz
(bad)
outs
xchg
dec
xor
push
aas
mov
sub
mov
add
repz
in
cmp
xchg
or
xchg
dec
imul
sbb
push
leave
xlat
adc
pop
jns
dec
lds
jecxz
call
shr
mov
shl
push
or
inc
std
in
lods
cld
mov
(bad)
and
sbb
add
sub
xlat
jno
add
sub
popf
adc
ja
cmc
(bad)
arpl
ss
into
add
retf
and
cdq
mov
dec
and
mov
cld
dec
mov
mov
fnsave
mov
sub
shl
lahf
shl
out
outs
and
call
pop
cmp
jecxz
adc
xchg
test
pop
or
or
enter
sub
cmps
(bad)
adc
jb
inc
rol
js
mov
ins
xor
add
shl
lahf
ror
inc
retf
enter
jb
xchg
mov
movs
and
xchg
pop
inc
jne
loopne
mov
pushf
sub
dec
cmp
data16
inc
inc
mov
dec
daa
xchg
adc
mov
push
cmp
dec
inc
gs
cmp
pop
and
ss
xchg
mov
(bad)
out
mov
test
(bad)
jbe
std
ss
mov
icebp
push
pop
xchg
mov
inc
shl
test
and
cmp
inc
lods
jmp
jmp
fidiv
mov
pusha
or
cwde
xlat
(bad)
jmp
jne
mov
dec
call
cli
push
pop
cmp
clc
and
sbb
jl
ins
xor
rcl
repnz
pop
(bad)
fld
iret
addr16
std
ror
cmp
and
jmp
jge
inc
inc
mov
mov
sbb
fist
repnz
cmp
xchg
sub
je
cmp
push
inc
mov
pop
hlt
xchg
xor
ret
pop
fcom
rol
pop
adc
and
xchg
call
sub
and
xchg
jae
repnz
push
inc
mov
out
ins
icebp
and
jne
jl
popa
in
sti
(bad)
mov
mov
imul
mov
pop
push
dec
pop
cli
ficomp
xor
movs
sub
(bad)
addr16
ret
xor
jbe
adc
add
dec
sub
mov
dec
in
fild
cwde
pop
sub
ror
stos
sub
test
in
dec
adc
add
mov
xor
cmc
pop
push
hlt
std
push
pop
xchg
(bad)
mov
pop
xchg
dec
arpl
inc
ins
sub
dec
test
push
gs
pop
mov
ret
jecxz
add
xchg
jmp
dec
stos
push
inc
and
pushf
jnp
ret
xchg
sub
pop
pushf
fild
xor
gs
cs
mov
mov
push
je
mov
sub
jb
call
push
fstp
xchg
ud2
mov
sahf
scas
js
jno
pusha
adc
test
inc
dec
(bad)
imul
std
inc
inc
js
mov
ret
sar
test
dec
mov
cli
and
scas
sar
inc
adc
pop
repz
inc
mov
(bad)
sub
fst
dec
jne
mov
jmp
and
in
aaa
and
ins
mov
mov
add
mov
out
faddp
scas
mov
or
lds
inc
(bad)
loope
push
lahf
inc
jge
fimul
in
iret
test
cmc
mov
data16
ret
stos
jg
jo
sub
sbb
mov
pop
fbld
cdq
xchg
and
xchg
inc
(bad)
or
xchg
lock
sbb
cli
and
shl
int
adc
ret
or
cmp
mov
push
push
jmp
cmc
out
mov
mov
xor
sub
xor
push
cdq
sbb
pop
in
ficomp
and
cmp
adc
ret
push
add
test
aam
pop
leave
aas
daa
sbb
test
xchg
loopne
jmp
mov
mov
(bad)
pop
mov
(bad)
xor
push
cmps
sub
inc
push
sbb
add
or
jne
mov
add
(bad)
pop
das
scas
vpgatherqd
pop
fistp
dec
add
inc
(bad)
call
mov
pushf
rcr
jb
adc
cmp
in
push
xor
sbb
cwde
xchg
push
jl
icebp
cs
jg
int3
out
(bad)
fwait
xlat
add
or
dec
scas
sbb
xchg
lea
loopne
or
(bad)
or
push
call
push
imul
lock
add
std
pop
loop
cmp
add
cli
fsub
retf
addr16
push
dec
jmp
out
adc
lods
gs
mov
dec
jmp
push
jns
aaa
mov
cmp
xchg
enter
add
sub
mov
sub
mov
xor
inc
out
adc
mov
mov
jp
je
mov
or
pop
mov
dec
dec
jecxz
(bad)
repnz
rcl
push
mov
cmps
or
xlat
jmp
div
ret
loop
mov
and
xchg
cs
fucom
clc
and
outs
(bad)
cmp
xor
add
test
push
mov
pop
bound
mov
sbb
pop
push
pop
add
mov
or
mov
repnz
retf
ror
into
mov
push
pop
fnstsw
add
call
pop
call
or
test
jae
sar
test
repz
rcr
xor
addr16
js
jp
movs
cmc
mov
dec
lea
inc
outs
data16
pop
gs
or
or
jne
call
pop
dec
sbb
xor
push
int
pop
sahf
inc
and
movs
and
jno
popa
rcl
and
pop
inc
clc
adc
ret
fs
pop
int3
mov
xchg
ret
loop
jmp
pop
mov
push
pop
cmps
ret
cmp
and
sbb
movs
(bad)
jp
dec
scas
and
xor
nop
int
cdq
frstor
sbb
scas
pop
xchg
cmp
sub
and
jle
ds
xchg
daa
push
xchg
daa
add
inc
movs
mov
inc
pop
(bad)
loope
leave
mov
loop
mov
adc
popf
outs
stos
mov
lods
rcr
cli
xor
pop
jp
pop
or
mov
xchg
ret
div
out
add
mov
test
test
arpl
into
mov
sub
nop
sti
dec
adc
js
(bad)
xor
push
sub
adc
stos
popf
retf
lods
stos
push
sbb
aam
jb
outs
sub
add
mov
adc
sti
outs
mov
and
push
inc
gs
adc
xchg
pop
int3
xor
adc
movs
jecxz
inc
test
aad
inc
sbb
push
enter
stc
scas
aas
xor
inc
inc
stos
sti
test
push
pushf
int3
pop
xchg
push
adc
sbb
inc
ret
mov
icebp
out
and
enter
push
push
adc
call
mov
push
in
or
jae
mov
inc
retf
je
rcl
or
jo
fwait
ins
sbb
dec
cmps
cmp
pop
out
lock
call
lea
sub
ficomp
ins
jmp
cmps
jmp
jne
ret
fdiv
pusha
ins
(bad)
push
imul
xchg
les
xor
mov
int
add
add
add
xchg
and
dec
inc
add
jmp
ret
xor
or
push
add
out
(bad)
aaa
das
mov
cmp
lea
das
cmp
out
dec
xchg
mov
test
sbb
pop
dec
rcr
sub
movs
cmp
add
push
stos
jp
jp
inc
xchg
dec
stos
jno
sub
js
xchg
add
jl
cmc
mov
(bad)
hlt
ins
mov
repz
int
into
ins
sahf
fnsave
daa
mov
cmps
mov
and
push
sub
cmp
call
or
mov
int
(bad)
mov
adc
jo
mov
push
sbb
sub
xchg
les
push
jecxz
jb
xor
xor
mov
or
dec
push
addr16
dec
fnstenv
scas
shl
mov
mov
lahf
adc
movs
loope
inc
ins
add
mov
ret
pusha
pop
xor
cli
addr16
ret
cmp
out
push
ja
push
cmc
xchg
push
mov
push
lock
jne
aam
addr16
lds
push
popf
jge
mov
sub
mov
lock
pop
adc
(bad)
pop
pop
or
add
inc
xchg
into
call
mov
sub
sub
mov
call
sbb
neg
and
ret
add
add
movs
inc
fistp
inc
in
jne
sbb
ins
cli
(bad)
mov
int
(bad)
xchg
retf
sub
lahf
jnp
dec
cmps
sbb
pop
cwde
sbb
call
sub
push
mov
sub
fistp
dec
xor
cmp
fnstenv
push
dec
add
and
ficomp
mov
fdiv
int
test
loop
push
inc
sbb
mov
sar
(bad)
jne
lods
test
popf
shr
inc
adc
lock
in
das
mov
mov
imul
or
push
xor
jg
loop
pop
cmp
cli
add
fcmovnbe
sar
daa
lods
fs
pop
push
rol
jno
sub
std
add
fisttp
dec
neg
div
dec
xlat
into
ficomp
cmc
icebp
and
inc
call
cmp
hlt
lds
xchg
dec
pusha
das
pop
call
dec
lea
push
in
pop
mov
mov
mov
sbb
clc
stc
sub
aas
push
push
push
pop
or
rcr
lds
scas
cli
adc
retf
mov
std
cs
push
push
cld
push
cmp
mov
psrld
pop
push
enter
fwait
push
and
adc
inc
cmp
mov
push
(bad)
pusha
cmps
push
iret
mov
ret
sbb
mov
out
data16
push
jl
loope
pop
and
sbb
iret
inc
fsubr
add
jne
lock
xchg
fld
or
in
dec
out
outs
xor
test
shl
popa
adc
cmp
xchg
shr
repnz
mov
dec
push
daa
jmp
mov
push
mov
push
dec
jmp
fsubr
scas
jecxz
or
pushf
xor
jmp
outs
test
jp
std
mov
sub
xlat
push
outs
sar
retw
push
pop
or
mov
aaa
scas
(bad)
rcl
(bad)
mov
sbb
xchg
mov
repnz
neg
out
aas
xchg
ret
lahf
add
call
mov
inc
or
jmp
mov
hlt
sbb
mov
add
in
test
cld
push
aas
pop
pop
push
push
fsubr
into
cli
rol
dec
lods
in
mov
mov
loopne
in
push
out
mov
lahf
mov
data16
push
pop
dec
mov
hlt
adc
sbb
imul
mov
push
in
mov
adc
lea
enter
test
dec
je
les
xchg
jge
psraw
mov
call
data16
jno
jmp
xchg
cmps
in
adc
sbb
popa
(bad)
ja
mov
push
jge
inc
or
inc
mov
mov
push
out
dec
jo
js
jle
imul
or
ins
dec
xor
jno
cmps
push
push
inc
cld
or
cld
int3
out
mov
dec
rol
fld
sbb
add
or
outs
dec
(bad)
outs
xor
loope
and
fcomp
xchg
inc
jle
push
inc
ja
mov
pop
rcl
sbb
jne
inc
sbb
jbe
lock
jae
test
push
pusha
jb
xor
mov
jmp
int3
bound
inc
add
shl
dec
out
cmp
mov
daa
shl
push
in
pusha
cwde
mov
mov
jo
cmps
jle
add
mov
fxch
inc
fs
xor
inc
mov
retf
das
mov
xchg
jae
(bad)
adc
into
xchg
dec
fucomip
xor
xor
(bad)
sbb
int
jmp
aam
jg
popa
push
fs
push
ins
pushf
cli
pop
and
aaa
dec
jno
aam
add
inc
and
mov
test
jecxz
jnp
je
shl
inc
xor
pop
popa
dec
popf
xor
fucom
dec
aam
adc
or
xchg
mov
mov
js
xor
sub
clc
pop
and
cmp
les
or
sbb
mov
jle
sar
test
jmp
pop
mov
pop
pushf
imul
jne
ffree
sbb
sub
and
fisub
fs
test
mov
inc
ror
(bad)
cmc
sbb
ja
push
xchg
pop
mov
or
mov
and
sub
lea
jmp
xchg
pop
out
add
ds
push
stc
stos
outs
dec
inc
cmps
dec
add
out
mov
stc
or
(bad)
or
push
add
popa
fld
push
xor
test
mov
cmp
pop
pop
push
imul
adc
sbb
scas
and
out
scas
(bad)
and
(bad)
cmps
(bad)
mov
in
fs
arpl
and
mov
xchg
adc
popa
pop
dec
add
add
or
dec
in
pop
or
pop
xchg
ds
cmps
rol
mov
lods
retf
lock
jbe
cli
mov
add
sub
cmp
out
add
sbb
pop
jl
cld
sub
jo
imul
inc
jge
ds
or
cmp
das
lahf
pop
and
stos
add
sti
icebp
cdq
sbb
sub
hlt
mov
add
mov
add
fld
push
lods
xor
iret
lea
push
mul
data16
hlt
das
jecxz
lahf
inc
int
mov
add
stos
lahf
add
popf
xor
jmp
sbb
repnz
lahf
xlat
dec
out
xchg
inc
adc
mov
aaa
pop
lea
stos
(bad)
std
cs
je
call
sbb
pop
and
lock
mov
(bad)
out
jb
movs
in
mov
inc
cmp
sar
and
in
scas
pop
dec
push
add
mov
scas
xchg
mov
cvtdq2ps
sbb
push
lods
xchg
mov
inc
in
jne
out
nop
adc
jp
xor
test
push
icebp
stc
xchg
(bad)
dec
aas
mov
sbb
cmps
ror
scas
inc
fild
cmp
sub
adc
sahf
hlt
mov
lea
push
outs
hlt
push
push
cmp
jbe
enter
sbb
or
mov
mov
shr
fstp
test
pop
adc
test
fstp
fcmovu
in
ds
mov
jle
mov
inc
and
and
ror
push
call
rcl
lds
cld
int3
cwde
(bad)
shr
sbb
jns
aaa
jo
fst
or
data16
mov
push
repnz
mov
test
fdivp
nop
mov
cmp
pop
cwde
mov
dec
jmp
push
xor
and
daa
xchg
inc
mov
inc
jmp
daa
icebp
(bad)
sahf
mov
jmp
mov
out
daa
jge
push
or
sub
xor
(bad)
scas
ja
(bad)
fs
push
push
and
mov
xchg
pop
push
jmp
and
pop
mov
sbb
adc
jo
(bad)
std
xchg
aas
dec
mov
pop
bound
lock
imul
mov
sahf
mov
stc
call
pop
stos
mov
xchg
ja
adc
xor
test
push
mov
jmp
jg
dec
movs
add
sub
and
mov
outs
mov
stos
jae
and
mov
data16
add
dec
(bad)
movs
leave
xchg
push
je
mov
les
sub
lods
shr
mov
pop
inc
dec
rcr
push
mov
in
mov
int3
scas
xor
aas
sub
mov
xchg
lds
adc
pushf
xor
(bad)
and
sahf
ins
or
scas
adc
mov
add
and
mov
bound
das
daa
mov
add
xchg
sbb
mov
xchg
fwait
daa
xchg
cli
adc
(bad)
push
push
mov
pop
and
outs
sti
lahf
and
std
stc
dec
clc
lods
loope
xchg
xor
dec
sub
cmc
or
je
mov
iret
or
sub
cli
xchg
das
loopne
cwde
pop
mov
ds
push
sbb
cmps
xchg
aad
mov
clc
mov
(bad)
push
std
xor
(bad)
movs
aaa
xlat
mov
mov
cmp
in
loop
cmps
out
call
dec
leave
out
and
mov
idiv
push
nop
xchg
push
mov
and
sub
cmp
test
push
icebp
aad
in
adc
ins
pushf
adc
xchg
bound
jge
sub
mov
or
push
jno
pop
nop
sub
dec
lds
daa
mov
aad
aam
enter
jmp
arpl
xor
jb
sub
cwde
adc
push
or
sub
or
cdq
mov
iret
into
pop
xchg
popa
jg
and
in
mov
jle
rcr
push
pop
test
push
pop
in
js
xchg
or
push
mov
out
dec
(bad)
mov
fwait
jno
sbb
xchg
xchg
cmp
cs
and
sub
cmp
test
xchg
imul
xchg
adc
mov
pop
or
mov
sub
(bad)
jmp
adc
jns
jbe
imul
popa
repz
pop
pop
stos
das
add
fnstsw
repnz
movs
clc
cld
les
dec
sbb
jmp
push
(bad)
or
mul
inc
data16
xor
fcomp
(bad)
int
imul
mov
sbb
and
fstp
sub
sbb
sbb
mov
adc
mov
das
outs
dec
add
fiadd
shl
push
icebp
pop
adc
xlat
fcom
test
test
or
ins
ds
test
inc
push
rcr
ins
mov
xor
sbb
test
dec
adc
(bad)
ss
call
mov
ret
test
xchg
mov
jns
push
dec
push
les
dec
lock
call
and
jle
in
inc
jmp
mov
mov
ja
xchg
inc
arpl
push
add
and
and
mov
mov
and
sbb
adc
mov
aas
nop
int3
sbb
ss
add
mov
jno
test
retf
push
fwait
mov
test
fild
mov
retf
(bad)
fidivr
xchg
fwait
xchg
pop
test
or
pop
pop
dec
jnp
cmp
sub
scas
fstp
sbb
imul
inc
and
sbb
pop
in
out
pop
xchg
das
inc
arpl
jae
addr16
mov
scas
or
inc
bound
out
or
push
in
fst
push
(bad)
sar
ss
addr16
je
in
mov
ret
inc
shl
jle
sbb
bound
adc
(bad)
mov
les
sbb
stc
enter
mov
add
clc
adc
pop
inc
mov
push
(bad)
mov
pop
imul
stos
(bad)
pop
lods
sar
push
jmp
adc
sti
add
loope
adc
lods
push
pop
nop
pushf
pop
addr16
xor
test
jo
xor
mov
imul
rcr
nop
fdiv
or
xor
rol
addr16
mov
sahf
mov
xor
ins
jecxz
fisubr
icebp
xchg
into
add
push
mov
mov
mov
hlt
(bad)
jbe
dec
int3
ja
cld
(bad)
xor
and
jne
aam
sti
enter
ret
cmps
jge
movs
xor
jbe
fs
fstp
aad
and
adc
fs
jnp
(bad)
adc
mov
ds
arpl
pop
ret
sar
fimul
cmp
iret
inc
pop
fisubr
push
mov
mov
fwait
xor
inc
mov
rcr
div
loopne
(bad)
lahf
mov
mov
lods
fwait
shl
movs
inc
mov
fdivr
nop
cli
push
or
bswap
sbb
cmp
fiadd
(bad)
fdiv
(bad)
call
pop
test
jge
cdq
xchg
mov
inc
jl
out
sahf
xchg
sub
movs
int
or
and
xchg
(bad)
aam
lahf
xor
(bad)
jecxz
jp
jmp
(bad)
cmp
lods
pop
mul
int
sar
adc
pop
aad
fs
push
stc
scas
inc
js
leave
mov
hlt
daa
jb
lods
leave
fs
pop
addr16
enter
inc
pushf
jecxz
inc
hlt
mov
pop
in
call
or
fstp
nop
stos
popf
cmp
cmp
retf
xor
iret
out
addr16
test
test
add
jo
mov
fst
ds
lea
sar
in
in
(bad)
(bad)
mov
mov
pusha
jbe
sub
aas
aaa
mov
stos
rol
dec
clc
xchg
lahf
movs
cmp
outs
jmp
mov
jl
pusha
xor
sbb
popaw
sbb
push
fidivr
mov
inc
and
loope
rcl
push
inc
fld
pop
ss
inc
rol
add
(bad)
aas
out
cdq
movs
pop
test
mov
pop
xor
xor
add
in
inc
and
pop
sbb
retf
ins
lds
or
fs
jb
xchg
adc
jmp
test
icebp
push
sub
aaa
arpl
cmps
dec
sub
cmp
test
and
in
nop
movs
dec
push
sbb
aad
sub
popf
not
pop
dec
sahf
imul
pushw
sbb
call
push
sub
sbb
fnstcw
(bad)
test
xlat
ins
dec
jno
push
pop
xor
adc
adc
sbb
cmps
cwde
stos
mov
mov
sub
ins
xchg
jb
clc
dec
in
stos
jo
sub
xchg
into
or
mov
cmp
inc
mov
fcomp
cmp
inc
fstp
inc
dec
mov
ficomp
int
sub
bound
dec
sahf
imul
enter
mov
sub
pop
push
clc
fist
imul
popf
ins
scas
jo
je
inc
retf
xor
mov
ret
gs
and
push
rcr
cmp
mov
adc
jns
xchg
and
xchg
jbe
cmp
push
jbe
add
xor
sahf
mov
pop
add
cmp
add
jmp
push
lahf
imul
adc
sar
lods
scas
inc
xchg
mov
into
shl
cmp
add
call
cdq
pop
sbb
popf
lock
push
cli
jecxz
mov
ds
test
cdq
rcr
xor
(bad)
mov
dec
and
mov
bound
rcl
push
int
add
mov
mov
sar
js
popf
hlt
mov
std
mov
push
pop
or
xlat
(bad)
jno
mov
lahf
popa
ja
out
dec
mov
and
xchg
mov
push
xor
mov
xor
dec
sub
pusha
divps
and
lds
dec
push
cmp
pusha
xchg
sbb
and
cs
cmp
in
mov
aaa
idiv
push
sbb
test
lea
popa
push
sbb
and
jp
cmp
out
sbb
adc
cwde
call
repnz
mov
fs
sub
dec
pop
adc
mov
add
test
test
pop
test
out
fwait
stc
add
mov
nop
jge
push
stos
xlat
sub
adc
push
pop
mov
cmp
(bad)
loopne
fdiv
cli
je
and
inc
les
scas
inc
mov
into
ins
adc
pop
call
xchg
sbb
jmp
inc
retf
sbb
adc
sahf
add
outs
inc
hlt
cmps
sub
add
sub
int
dec
xchg
pop
mov
or
loope
dec
lea
pop
add
sbb
adc
int3
push
test
imul
jno
mov
ldmxcsr
lds
repnz
mov
ins
jmp
mov
mov
popf
das
fwait
mov
in
mov
dec
mov
ins
mov
cwde
retf
jbe
sub
fcmovbe
mov
sub
rcl
stos
adc
pop
adc
retf
popa
adc
mov
dec
sbb
push
dec
xchg
adc
je
adc
rcl
xlat
sbb
push
outs
sbb
and
xlat
jl
sti
xor
mov
addr16
repnz
rcl
loopne
mov
push
pusha
push
mov
adc
cmp
xchg
retf
push
and
retf
mov
adc
lock
mov
and
pop
jp
fidiv
out
sbb
and
in
icebp
or
rcr
lock
rcr
xchg
cmp
xchg
loop
pop
aam
mov
fmul
data16
pop
xchg
dec
cmp
pop
cmps
imul
popa
push
movs
push
test
xor
aas
and
push
outs
cmps
shl
and
jge
ror
sbb
and
xor
pop
or
push
inc
cmp
repz
cli
cld
jnp
sub
scas
fistp
call
mov
pop
xor
push
jp
cmp
xor
push
(bad)
xchg
lea
pop
gs
je
scas
js
scas
mov
dec
adc
movs
imul
arpl
or
out
jecxz
stc
cmp
inc
and
daa
sub
push
add
loopne
pop
push
inc
adc
cli
add
or
mov
aam
leave
xchg
stos
add
sahf
jbe
cwde
mov
push
mov
adc
scas
mov
mov
lods
inc
imul
mov
std
mul
inc
mov
scas
push
push
mov
cmp
addr16
lds
std
test
aaa
pop
test
or
lods
adc
mov
cmp
mov
sbb
pop
cmc
push
jp
inc
aam
adc
cmps
jno
cmps
add
xor
movs
push
sub
push
adc
dec
clc
cdq
aas
mov
pop
xor
mov
test
addr16
cmp
popa
pusha
push
adc
pop
movs
dec
rcl
jl
xchg
pop
mov
jb
or
stos
mov
mov
sbb
sahf
test
in
pop
bound
clc
mov
sub
mov
test
push
fdiv
cmps
xchg
rcl
daa
or
test
(bad)
mov
movs
mov
pop
push
rcr
gs
ja
ins
cmp
sub
inc
add
inc
fwait
cdq
std
enter
add
aad
jbe
inc
jne
ins
cmps
pop
fs
inc
scas
mov
push
pop
aas
sub
cmp
jge
loop
(bad)
stc
cdq
test
sub
sub
cmp
aad
add
cli
push
lds
sub
dec
fs
lar
inc
retf
pop
xor
in
enter
sbb
jno
push
movs
dec
push
rol
mov
ins
add
inc
bound
dec
sub
sub
int3
add
lds
in
fwait
aaa
jns
sub
sahf
scas
dec
call
pop
test
(bad)
push
leave
mov
jl
add
dec
out
mov
adc
sub
mov
mov
lock
in
aaa
sti
push
std
nop
das
js
cmps
jnp
add
jl
arpl
mov
sbb
in
aam
cmp
lock
xor
mov
dec
out
ins
call
lahf
(bad)
enter
push
out
mov
pop
mov
test
and
add
jl
call
dec
pop
sbb
and
jns
scas
cmp
dec
jl
neg
in
dec
pop
inc
mov
retf
fucomp
mov
jbe
jne
mov
pop
xchg
in
ds
pop
retf
neg
gs
in
sub
cwde
stc
inc
out
pop
das
out
inc
sbb
pop
test
in
aad
int3
cs
add
push
mov
popf
enter
rcl
popf
loopne
inc
sub
in
inc
cmp
push
jle
scas
push
adc
scas
cmp
call
xchg
(bad)
mov
lea
mov
scas
pop
in
arpl
outs
push
pop
out
or
ins
js
sbb
and
xchg
cmp
pop
mov
and
mov
repz
jno
xchg
pop
fdiv
xchg
data16
lods
or
xchg
xlat
cli
inc
inc
(bad)
xor
aaa
outs
movs
cs
vpaddw
fwait
push
clc
dec
psrlw
pop
outs
xor
adc
add
jmp
jp
sar
ret
cmc
push
popa
inc
push
dec
(bad)
add
mov
aad
(bad)
ja
hlt
cli
es
sbb
mov
int3
push
xlat
iret
sub
pop
add
rcl
outs
mov
mov
ja
push
jmp
and
and
ins
aas
das
lahf
int
sar
cdq
je
mov
std
pop
stos
jns
mov
push
jmp
adc
neg
cmp
sbb
mov
mov
mov
jb
and
adc
sub
out
add
xchg
xor
or
xchg
hlt
ss
push
cs
scas
loopne
push
adc
mov
pop
sbb
aad
xchg
sub
jmp
jmp
pop
sub
mov
and
ins
ins
in
js
jno
inc
push
and
aas
aas
add
dec
xchg
add
adc
jmp
xor
dec
pop
seto
and
sub
pop
out
push
popf
fidivr
pop
push
fnstsw
push
stc
pop
mov
xor
push
or
inc
inc
push
xlat
push
or
push
call
aaa
out
mov
aaa
inc
dec
inc
rcr
cmp
loopne
push
xor
call
je
push
sbb
scas
cmp
fwait
sub
mov
aad
mov
pop
dec
int3
cld
out
sub
sbb
mov
dec
iret
fdivr
add
mov
lds
or
mov
iret
sbb
outs
mov
push
inc
out
outs
call
jb
repnz
or
mov
jb
pusha
cmp
mov
ret
mov
push
pushf
out
imul
sbb
sub
push
adc
imul
mov
or
adc
sbb
addr16
push
xchg
test
dec
into
pop
dec
int3
jp
adc
push
jmp
xor
add
mov
push
sahf
lahf
push
ret
dec
cmps
lds
jmp
add
jmp
mov
push
scas
ja
out
out
ss
mov
out
inc
xor
mov
sub
pop
in
dec
sub
xor
dec
sahf
dec
pushf
loopne
push
inc
enter
jo
test
ror
iret
mov
push
jle
jle
fidivr
mov
nop
(bad)
jl
enter
dec
adc
outs
mov
push
cdq
xchg
imul
aaa
ja
fld
xor
pop
pushf
es
data16
or
xor
mov
loope
lea
add
and
mov
mov
sbb
enter
ror
or
push
and
xchg
jp
sub
js
jp
ds
iret
test
cmp
ss
xor
pusha
pop
sub
adc
cli
pop
loope
and
mov
imul
or
pop
popf
mov
nop
shr
popa
cld
mov
adc
popa
lea
adc
or
fwait
mov
dec
mov
sbb
mov
push
fidiv
out
std
lds
and
push
add
in
repnz
xchg
test
dec
out
mov
mov
ror
iret
faddp
mov
jmp
mov
inc
retf
sbb
push
iret
pop
call
sub
xchg
test
and
push
adc
xchg
fcomp
inc
loopne
mov
js
inc
sbb
push
mov
jmp
cmp
mov
imul
jmp
in
mov
inc
jbe
sub
ror
loope
out
mov
inc
shl
ret
mul
imul
cmp
(bad)
ss
(bad)
sub
sub
fcmovu
test
lea
sti
(bad)
adc
cmp
add
stc
adc
leave
adc
fist
fbstp
(bad)
lods
lock
test
outs
dec
sbb
loopne
push
retf
xor
inc
push
ds
pusha
movs
outs
mov
jo
stos
enter
or
fs
sbb
xor
mov
jmp
jmp
xchg
xor
popf
xchg
dec
xchg
jne
out
or
pop
shl
jl
adc
out
jnp
clc
fwait
stos
fadd
pop
add
stc
pop
push
lods
add
test
sbb
cmps
aaa
fsubr
js
aad
jo
addr16
das
push
or
(bad)
fucom
pop
(bad)
push
cmps
lea
popa
cmp
sub
jmp
in
or
retf
xchg
dec
or
sub
out
test
pop
out
cmc
mov
inc
mov
fucomi
mov
fsubr
mov
dec
mov
pop
fisubr
cmp
mov
cmp
sub
das
xchg
loopne
ja
sub
imul
cld
stos
cdq
cmps
mov
inc
ds
cmc
adc
pop
dec
xor
inc
cmp
mov
push
inc
xor
mov
jp
push
cmp
pop
test
cmps
nop
lods
push
in
in
sub
scas
hlt
loope
mov
aad
fcomp
dec
int
test
icebp
pop
jmp
push
jno
push
(bad)
jl
mov
push
sar
repz
sbb
xor
mov
pop
mov
inc
push
fdivp
mov
inc
in
sbb
mov
pop
movs
mov
ds
xor
lock
nop
loop
push
inc
adc
push
ret
mov
imul
aam
fcmovbe
in
xor
bound
sub
mov
out
xor
pop
bound
mov
mov
push
leave
sar
mov
mov
xor
jge
movs
sahf
retf
lds
xchg
fidiv
mov
mov
clc
jbe
push
dec
sub
int3
xor
xchg
shl
and
cmp
jno
jo
cmps
inc
scas
sbb
fsubr
mov
push
mov
and
push
loope
loop
xor
ja
inc
inc
fistp
sti
inc
push
mov
jmp
dec
movs
mov
xor
mov
jmp
std
lock
ss
and
(bad)
imul
dec
scas
and
or
je
das
push
mov
inc
pop
and
or
scas
jmp
mov
in
bound
mov
mov
jmp
jmp
add
pop
enter
add
add
mov
les
sti
div
pop
inc
(bad)
cdq
mov
and
inc
inc
shl
jl
cmp
add
ficomp
push
inc
or
mov
add
mov
es
ja
jae
sbb
pop
xor
cmp
sar
push
xchg
mov
jg
and
push
stos
(bad)
xor
out
push
imul
mov
daa
les
mov
addr16
push
add
fbstp
daa
jle
out
mov
and
pop
ins
outs
add
mov
pop
jmp
arpl
and
jle
push
add
sbb
adc
(bad)
cmps
fsubr
cmp
xlat
arpl
ret
test
cmp
inc
sub
aam
inc
cdq
aas
dec
rcr
repnz
sub
(bad)
jmp
aaa
xlat
xlat
adc
stos
fmulp
lahf
jo
mov
arpl
out
adc
adc
outs
xchg
jbe
scas
mov
xchg
cmp
adc
idiv
je
mov
sbb
pop
xchg
mov
(bad)
es
mov
add
iret
push
add
adc
dec
sbb
push
mov
cld
xor
push
repnz
stos
test
jle
js
push
or
inc
push
ror
mov
or
aas
inc
enter
in
fnsave
(bad)
add
cmp
jae
and
test
cmps
push
sar
mov
data16
test
mov
(bad)
arpl
test
cmp
xchg
retf
xchg
cmp
mov
mov
mov
mov
xor
mov
mov
cmp
mov
sbb
push
add
push
pop
nop
and
cmc
xchg
out
and
xor
xor
sbb
imul
and
mov
dec
xor
enter
imul
cli
mov
into
xlat
push
nop
mov
enter
jmp
mov
iret
cmp
ror
mov
int3
adc
pushf
push
xchg
rol
out
cmp
mov
push
ins
pop
fnstenv
pop
call
js
pop
add
pop
imul
je
ja
jmp
mov
in
cmps
mov
xlat
xchg
inc
sub
xchg
(bad)
push
mov
out
adc
pop
arpl
or
xlat
enter
je
in
add
sti
xchg
mov
retf
cmps
lods
aad
jb
mov
jb
adc
daa
jbe
sbb
pop
out
xchg
jl
inc
mov
js
push
lds
xchg
iret
fsub
(bad)
inc
(bad)
or
call
xlat
pop
and
pop
rol
cmp
aaa
sbb
out
stos
popf
loop
arpl
pop
popa
cmps
call
ins
(bad)
jge
loopne
jae
xor
rol
test
fisubr
push
pop
cmp
repnz
test
push
lea
sbb
xor
mov
es
retf
or
shl
out
push
sub
mov
addr16
pop
adc
sub
push
iret
addr16
xor
(bad)
(bad)
cmp
cmp
scas
pop
xor
jle
aas
jns
mov
xchg
xor
mov
mov
bound
jnp
stc
imul
pop
js
das
cmps
or
in
jmp
lock
dec
ror
ror
cmps
pop
jmp
shr
push
or
aam
imul
cmc
rcl
mov
ds
out
sub
jno
jmp
ja
lea
(bad)
mov
cmc
sti
mov
shl
push
or
lahf
stos
or
xchg
je
cld
mov
dec
pop
adc
stos
mov
(bad)
cmps
ret
sbb
and
or
xchg
test
inc
and
add
nop
cld
inc
sbb
dec
(bad)
in
(bad)
xor
imul
mov
(bad)
sti
fs
cli
cmp
enter
cmps
mov
add
jb
mov
popf
sbb
fcmovbe
sub
pop
jb
mov
xchg
ret
adc
ret
lods
xchg
pusha
adc
nop
sub
aas
lds
pop
scas
dec
scas
jbe
daa
xchg
adc
jbe
into
sub
jmp
and
lds
push
sbb
cmp
jae
scas
sbb
inc
jg
shl
enter
dec
arpl
adc
popa
pop
fstp
bnd
dec
test
jns
les
xor
sbb
lods
and
sahf
mov
jle
xchg
lea
adc
(bad)
jle
adc
lock
lds
jns
pushf
jle
leave
stos
loop
jge
fs
add
sub
data16
hlt
mov
mov
cwde
pop
leave
rol
sbb
mov
or
mov
imul
fsubr
sub
in
push
outs
sbb
jle
outs
sar
cs
dec
add
ret
retf
xor
std
fnstcw
movs
jg
repz
out
pop
in
mov
(bad)
xchg
jne
and
mov
pop
cs
add
mov
xor
pop
(bad)
in
mov
out
cwde
loop
(bad)
pusha
fidivr
sahf
push
xor
mul
call
cmps
adc
icebp
add
dec
cmp
jo
icebp
cli
sbb
cmps
outs
push
sbb
ret
cmc
cmp
add
das
out
(bad)
sbb
xchg
ret
mov
xor
in
imul
add
add
imul
dec
nop
sub
cmc
inc
ss
dec
push
(bad)
aam
or
in
add
aaa
pop
mov
jmp
in
xchg
push
pop
mov
addr16
mov
mov
std
cmp
aas
(bad)
inc
cmp
ss
push
jo
jecxz
push
pop
pop
sbb
bound
pop
pop
or
retf
mov
sar
(bad)
inc
mov
inc
out
lock
jbe
icebp
ret
and
jle
push
fdivr
in
mov
int
add
dec
cmp
or
(bad)
call
or
gs
pop
daa
fsubp
xor
ins
inc
cdq
mov
repz
repnz
and
jns
add
sbb
invd
test
int
cmps
adc
push
and
aad
or
xchg
sbb
add
test
xchg
or
outs
cmp
mov
jle
lods
arpl
int
jp
or
dec
lods
aad
cdq
je
lds
sahf
js
ja
fsub
mov
xor
xchg
mov
adc
jg
dec
pop
(bad)
out
test
sbb
(bad)
fwait
xchg
mov
(bad)
mov
inc
sahf
test
fisub
or
sub
push
inc
xchg
retf
sbb
and
pop
loopne
cmps
and
xor
mov
or
cmp
cmp
gs
sub
and
mov
dec
pop
and
in
dec
mov
add
add
push
imul
and
clc
sub
out
bound
jns
xor
jg
pop
mov
sub
mov
aam
lods
cmp
inc
(bad)
jg
inc
push
ja
sbb
jp
leave
dec
mov
sub
adc
sti
and
imul
das
sub
cmp
mov
fsub
jle
fs
xor
push
jns
shl
adc
and
mov
mov
loop
and
icebp
dec
mov
outs
das
ds
or
and
sti
test
jmp
loope
int
in
dec
sbb
mov
int
sub
cdq
jo
sbb
pop
imul
mov
icebp
sub
pusha
sbb
ins
jge
sahf
cmp
jp
in
test
call
mov
cmps
cmp
pusha
rol
jmp
in
jmp
adc
and
jle
and
mov
inc
and
cld
dec
test
mov
mov
test
cmps
push
not
rcr
mov
call
xlat
fdiv
(bad)
cmp
movs
in
add
mov
fbstp
ja
(bad)
mov
add
pop
lock
mov
data16
pop
mov
loopne
dec
gs
jo
outs
mov
mov
imul
pop
mov
sub
dec
clc
xlat
lea
sbb
test
ds
xchg
in
cwde
cmp
lahf
pop
and
push
nop
push
mov
mov
cmc
lods
sti
(bad)
xchg
cmp
imul
mov
loopne
and
in
scas
cmps
cmp
cmc
idiv
ret
fxch
pop
mov
jge
inc
call
bound
dec
mov
loope
out
xchg
cmp
mov
fadd
iret
add
les
xor
and
aaa
mov
rol
add
stos
fldcw
pop
push
int3
test
and
clc
mov
mov
ds
repnz
sahf
jge
xchg
cmp
cmc
dec
xor
sub
or
nop
stos
stos
mov
hlt
or
das
test
les
jnp
test
adc
sti
les
xchg
sub
shr
xlat
xchg
popa
mov
push
push
xor
les
add
inc
ss
shl
imul
aaa
sub
test
pop
shr
mov
fsin
add
pop
aam
pop
test
ds
cmps
bnd
mov
adc
xchg
and
mov
sub
mov
dec
jno
push
adc
mov
inc
jle
sahf
call
loopne
or
stc
and
call
mov
loop
into
jmp
stos
movs
nop
hlt
loopne
pop
or
and
xchg
add
aas
cwde
popf
mov
xchg
mov
cmp
iret
fneni(8087
into
inc
stos
arpl
adc
pop
jp
ja
mov
sub
retf
push
loopne
adc
cmp
pop
cli
add
mov
test
enter
(bad)
ror
pop
sbb
xchg
(bad)
cmp
inc
cmp
jo
sbb
cmp
push
lds
xchg
fldenv
loop
sbb
repz
lea
jmp
jge
dec
and
mov
sbb
sbb
and
rcl
aam
inc
sbb
out
popf
sub
rol
int3
cmps
or
adc
outs
mov
clc
ret
xchg
adc
xor
imul
cwde
call
pop
loop
scas
stos
icebp
jbe
retf
push
cmps
adc
push
ja
mov
inc
sar
stos
jg
std
inc
leave
ja
inc
xchg
outs
retf
repnz
arpl
sub
xor
rol
sti
and
movs
repnz
(bad)
mov
mov
jg
loopne
add
jo
adc
dec
dec
sbb
push
xchg
adc
test
and
push
and
jmp
out
inc
mov
mov
cmp
mov
ficomp
cmp
or
enter
call
xchg
sbb
jo
add
add
fcomp
mov
mov
mov
cmp
retf
push
js
jl
in
or
xchg
cmp
imul
add
sub
pusha
adc
rcl
aam
movs
mov
loope
aaa
sbb
cmp
dec
add
adc
adc
popa
sbb
pop
test
cli
(bad)
sbb
cmp
popf
add
lock
aaa
fwait
dec
push
cmp
rcl
pop
inc
int
or
fidivr
aaa
and
retf
into
mov
pop
sbb
push
movs
call
movs
dec
push
pop
loopne
ja
repnz
and
push
sar
mov
gs
sbb
sbb
xlat
mov
sahf
mov
outs
adc
pop
xor
and
outs
push
cmp
lock
pop
lahf
or
ins
inc
mov
sbb
pop
jmp
out
xchg
mov
(bad)
lock
sar
retf
mov
js
jbe
ror
jecxz
sbb
push
cmp
inc
inc
pop
inc
ficom
mov
(bad)
je
push
xor
xor
or
jns
push
mov
sti
sub
bound
aad
sbb
rol
jo
enter
or
jno
test
add
in
sbb
sbb
movs
ss
(bad)
repnz
int3
ror
cmp
mov
pop
hlt
rcr
in
push
into
or
cwde
sub
push
popf
pop
int
add
in
fld
clc
ds
cmp
not
popa
(bad)
pop
lahf
mov
pop
sub
or
mov
add
mov
jp
add
cmps
jnp
dec
mov
call
fstp
aas
int
mov
idiv
and
mov
jb
int
(bad)
popf
or
leave
sbb
mov
jge
cmps
pusha
ds
repnz
jmp
retf
lahf
push
push
lods
in
xor
cmp
add
lea
into
(bad)
cmp
lock
out
ins
mov
push
mov
xchg
iret
push
mov
jle
mov
cmp
inc
mov
jg
inc
ret
cmps
fldenv
pop
xor
cmp
add
jl
add
add
enter
ds
push
xlat
sub
hlt
xchg
int3
cmp
lods
jmp
jg
push
jae
and
mov
cmp
ret
mov
fiadd
mov
or
data16
(bad)
mov
in
retf
imul
adc
mov
jecxz
cli
sub
ins
iret
mov
shr
xor
(bad)
fimul
jle
pop
push
rcl
hlt
leave
les
mov
nop
sahf
adc
ja
mul
mov
test
pusha
idiv
popf
fsub
lahf
jmp
sbb
outs
ins
mov
and
fnstsw
adc
push
mov
dec
nop
adc
sahf
je
xor
mov
(bad)
jmp
inc
cmc
add
cs
in
pop
nop
dec
iret
jmp
retf
test
ja
xchg
div
and
cmp
mov
push
(bad)
scas
jne
mov
mov
in
or
mov
or
mov
sub
adc
cmps
inc
sub
inc
outs
add
mov
repz
stos
cwde
push
cli
icebp
pop
mov
fiadd
mov
int
enter
dec
xor
mov
dec
fcmove
jne
xor
(bad)
mov
or
icebp
or
or
retf
dec
mov
and
and
in
jecxz
mov
rol
out
out
pushf
shr
imul
push
jno
sbb
pop
jbe
sahf
into
mov
xor
push
sub
aad
adc
lods
mov
cmp
dec
int
loopne
pusha
scas
push
mov
jo
js
xor
add
dec
out
std
pop
daa
jmp
push
mov
call
jne
jo
jne
jecxz
repz
jns
out
outs
jge
push
pusha
out
push
in
aas
mov
adc
in
mov
idiv
xchg
in
and
mov
ss
pushf
xor
sub
leave
sub
ds
mov
pop
mov
cli
es
in
nop
js
push
xor
jge
mov
pop
jae
dec
jnp
xchg
fild
daa
dec
xor
das
mov
sbb
mov
ror
sub
xor
jns
fs
xchg
data16
pop
mov
adc
xchg
shl
dec
jmp
inc
(bad)
out
mov
aam
jne
retf
sub
adc
test
ds
inc
dec
adc
pop
pop
xor
scas
retf
cdq
stos
pusha
jns
and
add
inc
sbb
jno
mov
call
dec
bound
scas
(bad)
in
or
sbb
adc
mov
inc
lock
inc
or
xchg
sahf
mov
icebp
lods
icebp
rcl
mov
out
push
sub
and
add
inc
hlt
dec
mov
ins
iret
mov
daa
lds
jge
xchg
lahf
mov
fsin
xchg
and
inc
shl
clc
nop
scas
mov
jb
inc
les
xor
cmp
sub
in
dec
sub
mov
das
inc
mov
scas
cwde
push
lock
test
mov
cmp
push
inc
ret
out
inc
pop
popf
adc
mov
outs
lahf
cmp
fstp
addr16
mov
or
mov
inc
ret
bound
add
sbb
pushf
test
inc
jmp
imul
xor
adc
shr
(bad)
xor
dec
sub
push
mov
mov
(bad)
mov
inc
inc
xchg
or
lds
dec
imul
gs
imul
daa
push
test
stos
sbb
pop
mov
sbb
ret
cmps
jp
pusha
push
cmp
jb
stc
mov
nop
outs
scas
int3
jg
fcmovbe
out
push
or
and
scas
clc
lock
in
mov
test
add
aas
inc
daa
and
or
and
cmp
sub
xor
pop
add
ror
data16
bound
movs
ins
outs
cdq
inc
es
lods
xchg
neg
mov
in
cmp
inc
pop
jb
div
sub
mov
not
hlt
nop
mov
add
not
jmp
aaa
pop
inc
inc
sub
loopne
je
popa
or
outs
jle
mov
xchg
mov
inc
push
hlt
inc
adc
shl
shl
inc
(bad)
xchg
jo
xchg
and
cmp
test
mov
das
sbb
ret
pop
pushf
daa
(bad)
mov
sbb
mov
inc
(bad)
ins
ins
jmp
mov
sub
lar
ds
jnp
aam
daa
call
aam
inc
inc
test
loopne
jmp
pop
jge
pop
retf
push
fistp
stos
xor
fld
stos
pop
mov
dec
pop
outs
mov
or
dec
xchg
xlat
aas
adc
outs
dec
imul
scas
leave
push
inc
xor
out
pop
adc
popf
loopne
adc
das
shl
iret
ret
scas
cld
fistp
or
adc
dec
add
pop
ret
cld
sbb
call
dec
inc
lds
push
dec
in
cdq
fisub
fcmovnu
pop
add
mov
mov
add
outs
or
push
data16
fcmove
out
push
jnp
add
imul
sub
std
in
ins
jmp
jae
aam
cmps
out
pop
and
(bad)
mov
mov
jl
push
push
arpl
fidivr
cmp
xchg
mov
cmps
jge
fwait
idiv
adc
aad
scas
jo
mov
pop
shl
(bad)
mov
mov
xchg
inc
int3
scas
mov
dec
mov
addr16
repz
jno
pop
jns
xchg
shl
inc
push
int
or
hlt
push
dec
add
sbb
push
xor
in
arpl
mov
xor
aaa
mov
jo
fsub
add
(bad)
pop
mov
loopne
push
mov
out
cmp
mov
stos
or
mov
ja
scas
test
mov
(bad)
sub
ss
sbb
dec
je
xor
push
clc
inc
cmp
scas
cmp
mov
sub
ds
cwde
jp
out
xchg
(bad)
js
cmp
or
fadd
shr
push
add
pop
mov
mov
stc
ins
and
icebp
das
mov
push
ret
adc
dec
pop
xchg
or
dec
arpl
cmps
sti
outs
loop
sbb
(bad)
push
outs
(bad)
es
pxor
mov
call
pop
xor
inc
es
shl
adc
lahf
in
cld
xor
inc
mov
mov
sahf
nop
or
mov
and
sahf
stos
sbb
add
jne
test
ins
movs
jg
add
loope
dec
jp
mov
lds
fwait
or
xchg
(bad)
inc
xchg
adc
xchg
ret
(bad)
push
or
dec
dec
aad
pop
imul
retf
mov
xchg
pop
inc
pop
jle
adc
mov
xchg
mul
cmp
repnz
adc
dec
add
(bad)
repz
lock
add
sub
lahf
es
std
xchg
fbstp
dec
mov
push
jge
push
sub
pop
nop
repz
cmps
sbb
sbb
sub
dec
cmovb
mov
stc
push
retf
jp
inc
jg
pop
pop
cmp
retf
ins
cmp
xor
fiadd
sub
push
cmp
and
add
lods
fnstsw
mov
jg
sbb
xlat
push
pushf
mov
sub
fnstenv
mov
in
movs
sub
xchg
std
sbb
jbe
movs
fs
jecxz
and
pop
and
(bad)
cmps
pop
xchg
mov
popf
in
mov
xchg
push
dec
adc
in
pop
mov
jg
sbb
pop
addr16
nop
push
mov
mov
dec
ds
cmp
retf
sub
cwde
mov
sahf
xchg
in
in
test
test
push
xor
and
jmp
idiv
cli
add
mov
push
int3
add
mov
mov
daa
aaa
(bad)
ret
idiv
or
lods
pushf
push
push
cmp
test
or
cs
cmp
push
data16
mov
xchg
pop
sbb
pop
daa
nop
retf
adc
stos
push
push
addr16
outs
enter
enter
dec
inc
int
fmul
and
cmp
std
pop
ins
adc
jae
xchg
sub
add
mov
mov
pop
das
mov
dec
loope
dec
lock
push
test
(bad)
scas
shr
pop
and
push
pop
sbb
out
ror
sbb
cwde
ss
and
cmp
mov
lea
int
ss
cmp
test
in
sub
iret
jmp
repz
xchg
rcr
popa
jb
xchg
dec
pusha
int3
sub
movs
dec
in
add
pop
sub
sub
mov
movs
xchg
retf
and
rsqrtps
xor
jl
add
enter
ds
je
rcl
lea
xlat
out
xchg
sub
cmp
pop
adc
cmps
data16
adc
mov
leave
shl
or
je
jbe
jo
push
jno
mov
das
cmp
mov
xor
xchg
add
or
(bad)
xchg
ins
push
das
loopne
xchg
aas
xchg
inc
mov
jbe
popa
aaa
stc
enter
scas
into
xchg
xchg
add
pop
push
cs
jb
pop
mov
mov
repnz
mov
add
ins
loope
jmp
ret
push
push
scas
repz
ror
test
mov
and
repz
mov
or
sbb
and
outs
mov
push
and
fnstsw
cmps
push
mov
and
mov
sub
xor
hlt
jnp
jo
stc
sub
rol
push
or
outs
in
cmps
adc
or
pop
out
outs
dec
cmp
push
xchg
ror
ret
mov
outs
ja
(bad)
aam
and
sar
adc
adc
add
test
jle
(bad)
mov
shl
pop
outs
pop
aam
rcr
aad
push
pop
sbb
dec
cwde
in
(bad)
fbstp
inc
mov
movs
add
inc
dec
xchg
(bad)
out
sbb
and
sub
jecxz
loop
shr
xchg
sub
int3
in
aad
jmp
mov
xor
(bad)
out
stos
loop
loopne
movs
xor
mul
inc
aaa
fnsave
daa
sar
xor
imul
xchg
sub
or
into
xor
inc
pusha
xchg
stos
mov
push
lock
cdq
xchg
push
jg
jmp
pop
mov
xor
add
ret
fstp
call
out
das
xchg
inc
dec
mov
lods
imul
js
jp
mov
pop
loop
out
aas
or
lahf
inc
cmp
adc
xchg
mov
ds
shr
mov
or
pop
aad
(bad)
mov
js
jge
xchg
and
cmc
scas
jmp
pop
sub
fbstp
and
inc
mul
pop
in
dec
lds
ror
jmp
dec
adc
cs
adc
iret
push
clc
mov
cmps
aaa
sti
pop
inc
mov
xchg
loopne
repz
mov
lock
jge
enter
jmp
inc
inc
pop
ror
(bad)
retf
in
fst
pusha
adc
(bad)
daa
ins
neg
(bad)
xchg
rol
addr16
sbb
mov
int3
xchg
scas
test
mov
icebp
inc
stos
lock
push
xchg
xor
rcl
cwde
sub
out
xor
inc
into
push
je
jns
add
test
fcmovbe
stos
add
push
es
push
ficomp
lahf
adc
push
push
popf
int
push
(bad)
cli
and
scas
movs
mov
xchg
outs
cmp
aam
or
xchg
dec
xor
pop
retf
lea
rol
retf
dec
push
pop
cmps
in
fstp
and
dec
lahf
aam
mov
cmp
sbb
dec
int
aas
fcom
ins
and
or
call
dec
clc
fwait
sub
fbld
adc
pop
sti
rol
gs
cmp
les
aad
icebp
push
mov
mov
into
or
jge
imul
inc
pop
pop
in
rcl
cmp
in
mov
loopne
sbb
jmp
cdq
jmp
push
adc
std
add
xchg
jno
out
mov
jns
push
or
fcmovu
js
(bad)
pusha
mov
mov
test
push
sub
inc
(bad)
fwait
xchg
(bad)
push
dec
add
out
and
jmp
sub
push
icebp
sahf
ins
addr16
ror
xor
mov
aas
(bad)
call
push
sahf
mov
ja
jno
sub
add
sbb
js
dec
(bad)
jae
ret
in
ror
cs
mov
jmp
or
ja
mov
call
jbe
push
stc
aaa
push
in
push
(bad)
test
and
mov
pop
cmp
and
or
dec
in
dec
(bad)
into
daa
aas
idiv
push
shr
ins
sbb
inc
enter
mov
lea
inc
jno
mov
add
(bad)
dec
xchg
push
xor
rol
outs
(bad)
mov
cwde
popa
sub
cmp
mov
sub
ret
push
imul
jle
jmp
pop
imul
movs
adc
add
in
dec
xchg
cmp
dec
pop
lods
test
pusha
scas
or
push
push
test
cld
int
pop
nop
pop
pop
out
mov
push
imul
pop
fnstsw
dec
mov
in
idiv
out
mov
sub
push
loop
and
(bad)
es
stc
test
loop
scas
jnp
lahf
adc
jp
push
dec
test
(bad)
sub
jbe
push
shl
push
inc
movs
fwait
xor
out
lds
mov
aam
sub
mov
sbb
mov
leave
sbb
push
ins
dec
pop
js
stos
out
sti
mov
ror
cwde
sub
das
ss
mov
add
jns
hlt
cli
mov
je
scas
lahf
fist
adc
ret
sub
shl
in
adc
inc
jle
int3
cwde
test
cmp
cmp
ss
cmc
mov
ins
int
ss
pop
dec
stos
jg
rcl
cmp
adc
ret
inc
retf
or
jb
push
or
sbb
out
test
aas
pop
inc
test
mov
and
ret
sqrtps
gs
mov
mov
mov
push
sub
sub
cld
pop
test
and
lahf
adc
xchg
push
push
mov
cmp
cwde
lds
data16
lahf
xchg
jl
pop
ror
dec
in
stos
sbb
mov
jbe
retf
cmp
hlt
mov
push
pop
and
sbb
mov
pop
loopne
jge
cmps
cmp
adc
mov
leave
pop
scas
add
lods
stos
test
mov
jle
mov
push
imul
jns
popa
pop
mov
xor
daa
fbstp
jmp
jbe
mov
mov
int
sbb
out
scas
lea
mov
sbb
outs
dec
cmp
dec
mov
(bad)
(bad)
mov
push
adc
imul
lods
aaa
cs
add
mov
push
rcl
scas
shl
mov
aam
jo
mov
in
shr
adc
and
cmc
xchg
add
adc
jge
loope
into
data16
frstor
lds
iret
adc
or
cli
adc
shl
not
(bad)
pop
adc
and
fist
adc
test
mov
fs
and
add
loope
cmp
push
lea
retf
ds
add
js
xchg
sub
out
mov
ja
retf
nop
test
or
push
out
xlat
(bad)
mov
fidivr
ins
mov
xchg
inc
and
pop
push
push
xchg
aad
jmp
jmp
jae
push
repnz
hlt
push
mov
push
dec
cmp
xor
cdq
push
push
(bad)
push
cmps
paddw
movs
out
xor
mov
cli
js
stos
jo
fwait
gs
xor
shl
popa
add
mov
or
addr16
sub
das
sub
adc
ror
xchg
mov
cmps
push
icebp
std
inc
sub
inc
cs
xchg
inc
mov
jmp
add
jge
jge
xchg
xor
push
sub
mov
out
clc
xor
shl
movs
arpl
es
fldenv
xor
sbb
push
out
sub
into
add
sbb
mov
iret
sbb
xor
pop
adc
xor
mov
fsubr
cmp
loopne
push
bound
pop
pop
add
dec
pusha
daa
and
mov
xor
mov
jmp
cmp
jge
movs
addr16
stos
test
(bad)
aad
and
test
xlat
pop
inc
lock
loope
add
imul
test
push
in
gs
ror
and
jecxz
cmp
ret
lods
loopne
jmp
aad
adc
and
popf
xlat
jmp
xchg
cdq
aad
pop
push
cwde
(bad)
lds
sbb
dec
cmp
(bad)
sbb
inc
jle
and
adc
fwait
xchg
mov
inc
out
cmps
inc
jmp
xchg
sbb
inc
std
stos
rol
retf
inc
aam
cmc
out
ja
push
pusha
in
xor
or
fdivr
mov
ss
test
pop
fsub
aad
fdiv
iret
aas
dec
push
jnp
popf
stc
in
imul
test
mov
push
mov
mov
scas
and
mov
out
aaa
arpl
mov
repnz
xchg
mov
mov
rcr
push
xor
shr
cmps
or
mov
push
(bad)
fsubp
shl
rol
mov
push
call
push
sbb
add
fiadd
jb
inc
mov
cld
mov
sub
mov
dec
mov
add
emms
mov
ins
out
jae
mov
pop
dec
icebp
xor
daa
call
jae
into
pusha
cmps
cmps
push
int
rcl
pop
dec
sub
mov
dec
shl
sbb
mov
mov
sbb
or
fidiv
sub
pop
or
xlat
retf
adc
jns
test
xchg
cmc
popa
adc
not
outs
es
in
pop
sub
test
(bad)
fist
mov
out
fs
mov
adc
sti
adc
mov
ds
sub
test
sbb
call
cmps
mov
stc
sbb
mov
sbb
adc
fisttp
xchg
push
ins
jmp
mov
stc
mov
ja
ja
mov
aas
pop
out
outs
dec
dec
add
or
adc
adc
mov
hlt
sub
pop
cdq
xor
jo
sub
push
(bad)
shl
test
fbstp
adc
sbb
mov
pop
jecxz
mov
fisubr
aad
in
xchg
leave
es
pop
mov
push
fiadd
arpl
adc
stc
push
jno
push
mov
inc
mov
or
rcl
sbb
mov
mov
or
in
xchg
xchg
pop
sub
mov
or
mov
cld
jnp
jmp
mov
das
cmovl
scas
hlt
pop
jmp
lods
das
rcr
and
in
add
out
jae
sub
xchg
sbb
ins
jmp
xor
cmp
aad
pop
pop
push
test
out
ins
push
cmp
or
dec
sti
out
or
sub
inc
test
jp
test
jl
adc
adc
rdtsc
mov
inc
jg
xchg
pop
mov
mov
jno
adc
icebp
adc
mov
adc
sub
mov
mov
xor
push
imul
addr16
push
ja
mov
rcl
inc
or
inc
push
sub
cmp
cmp
hlt
jmp
jae
scas
imul
test
inc
popf
stos
loopne
pushf
mov
outs
or
jle
imul
add
jl
add
pusha
mov
pop
ret
jle
push
ds
ror
mov
sub
neg
sub
jno
mov
xchg
jo
jle
(bad)
in
fimul
dec
repnz
sub
push
and
shl
std
xchg
and
sbb
add
adc
hlt
ds
int3
icebp
sub
in
cmp
ins
mov
outs
aad
or
and
mov
in
adc
sahf
add
jb
xor
or
xor
arpl
pushf
in
add
sub
mov
sub
ss
addr16
popa
mov
xor
cmp
xor
jae
xor
dec
and
mov
sbb
or
xor
lock
dec
push
data16
mov
outs
push
arpl
add
pusha
sub
out
mov
jno
retf
adc
(bad)
push
dec
mov
push
stos
inc
cmc
(bad)
ins
ins
jl
pop
or
loope
in
push
pop
and
imul
adc
cmps
add
inc
imul
imul
add
out
add
dec
hlt
cmp
imul
popa
jle
out
test
rep
mov
dec
pushf
sbb
add
push
pop
fst
adc
fimul
loopne
add
js
mov
fxch
push
and
mov
mov
mov
shr
sti
into
cmp
adc
cli
cmp
xchg
idiv
imul
xlat
ror
in
mov
jp
pusha
cmps
add
jbe
fmul
xchg
xchg
jg
movs
sub
clc
add
xor
mov
pushf
(bad)
cwde
loop
add
cdq
xchg
pop
inc
sub
ins
mov
shl
mov
mov
cmp
(bad)
daa
jg
or
xchg
mov
test
adc
push
data16
inc
push
imul
inc
and
(bad)
and
int3
add
(bad)
dec
cmp
sub
sub
dec
in
xchg
lock
out
mov
sbb
pop
test
mov
clts
mov
sub
cwde
enter
lock
inc
add
sbb
ret
xor
call
and
adc
pop
ins
xchg
inc
ss
in
inc
inc
cmc
push
nop
mov
mov
sti
cs
sbb
push
scas
jle
adc
mov
mov
pop
mov
repz
fwait
rol
sub
movs
mov
pusha
adc
mov
jp
cmp
idiv
arpl
cmp
sbb
cmp
aas
lock
repz
or
fcom
out
cmc
call
add
call
inc
push
jne
fadd
inc
(bad)
icebp
fimul
lods
or
lock
push
in
mov
adc
xor
jo
sahf
adc
mov
push
aaa
push
push
loope
retf
aaa
jns
sti
mov
jbe
jns
aaa
jecxz
add
js
rol
je
ret
xchg
stos
add
aaa
in
int
inc
sbb
jle
ins
mov
sbb
aad
lds
ror
sahf
cmp
ins
dec
fld
adc
mov
fbld
pusha
jns
test
(bad)
adc
fxch
neg
sub
out
pop
inc
cdq
out
std
std
add
aam
fimul
xor
sub
mov
nop
mov
jle
imul
sub
mov
cmps
lds
and
dec
test
cli
push
out
mov
dec
clc
mov
(bad)
shl
mov
sbb
add
ret
and
(bad)
push
popw
das
cmp
lds
sbb
into
mov
movs
pop
cmp
mov
jo
mov
push
out
bound
arpl
js
sub
stc
in
jge
mov
lock
mov
dec
sahf
inc
push
sar
sub
std
sbb
jle
mov
pop
sub
jns
or
nop
xor
push
lods
sub
push
call
mov
call
(bad)
in
xor
xchg
js
inc
sub
fist
(bad)
sub
xchg
mov
dec
test
ins
xor
mov
pop
sub
fstp
sti
lahf
stc
imul
call
ins
sub
aam
mov
jl
push
jnp
cmps
pop
xor
pop
in
imul
cld
cli
test
mov
les
jo
cmp
sbb
lock
int
call
loop
loop
in
inc
inc
push
mov
ldmxcsr
mov
aaa
test
mov
xchg
mov
in
jae
sub
in
rcl
mov
outs
sbb
xchg
leave
push
jbe
add
sub
xchg
call
(bad)
int3
in
loopne
mov
je
out
cwde
sub
push
cmps
loope
fst
shr
fidiv
(bad)
jne
gs
es
fldcw
aam
inc
fldenv
sbb
call
or
mov
imul
imul
shl
cs
push
cmp
push
sub
mov
or
es
outs
or
call
inc
fld1
shl
push
popa
push
popa
rcl
dec
aaa
jns
dec
jae
shl
push
les
scas
dec
pop
xor
aam
or
jge
sub
je
call
adc
xchg
dec
pushf
mov
mov
inc
add
not
call
xor
or
or
lods
(bad)
and
xchg
(bad)
pop
jmp
je
cmp
fidiv
push
ins
pop
adc
scas
inc
fdivr
nop
jns
mov
jmp
push
inc
test
out
inc
adc
cmp
retf
lea
inc
fistp
push
xor
int3
inc
jecxz
fstp
mov
mov
and
pop
gs
pop
inc
pusha
fcomip
sbb
cmc
adc
mov
add
sbb
in
push
pop
(bad)
lea
mov
rol
push
pop
add
push
mov
(bad)
daa
imul
test
push
dec
popf
mov
xchg
test
pop
inc
mov
push
hlt
sar
test
push
cmps
mov
add
mov
and
int3
ins
and
add
adc
das
out
inc
sub
xor
fsubr
push
mov
mul
pop
lea
ds
or
fwait
iret
test
add
popa
inc
sbb
adc
xchg
lahf
dec
push
pop
mov
test
add
cmp
mov
adc
stos
cdq
jle
aam
sub
ror
push
xor
inc
adc
dec
call
popa
pop
cmp
cmc
imul
mov
lds
adc
cwde
inc
mov
push
pop
xchg
cmp
retf
mov
fwait
add
jmp
xchg
pusha
out
jle
inc
pop
dec
fdiv
push
mov
dec
dec
mov
adc
das
pop
mov
add
fidivr
dec
mov
jg
push
jno
xlat
xchg
mov
call
push
std
jns
jbe
pop
imul
(bad)
shr
nop
mov
xor
or
mov
mov
js
push
test
xor
sahf
lahf
sub
push
inc
pop
mov
adc
or
xchg
sub
inc
out
outs
jecxz
adc
sti
push
sub
dec
dec
mov
pop
adc
mov
icebp
push
jnp
mov
call
sbb
adc
push
repz
cli
std
xlat
pop
aaa
jne
pop
and
cli
rol
xchg
adc
aaa
inc
fidivr
rcr
dec
mov
mov
mov
in
cmp
jl
cmp
enter
sti
mov
push
push
mul
test
inc
call
and
retf
mov
inc
jg
test
jg
in
jb
sub
jmp
test
sbb
cdq
add
imul
push
lock
scas
adc
popa
xor
mov
bnd
adc
mov
es
jle
mov
cmps
pop
loope
daa
xor
jge
aad
fidivr
inc
int
test
stos
sub
add
mov
ret
sub
inc
(bad)
ins
mov
dec
pushf
or
pop
jb
pop
jg
hlt
loop
jne
ret
repnz
lahf
(bad)
push
xchg
cwde
aam
inc
jg
or
push
ins
jl
ret
std
shr
adc
sub
and
xchg
xor
mov
retf
mov
aaa
test
fcomp
mov
inc
mov
push
jle
push
lods
movs
mov
mov
fst
iret
cdq
call
mov
scas
inc
dec
dec
or
ret
or
mov
mov
mov
call
cmc
jecxz
sbb
popa
push
out
adc
fwait
jno
bound
loope
icebp
enter
xchg
jecxz
arpl
in
imul
popf
mov
movs
fnstsw
icebp
jg
xchg
dec
sbb
shl
jecxz
xor
es
aad
repnz
add
inc
push
cmp
pop
ret
sti
enter
dec
mov
jecxz
retf
mov
test
cli
xor
adc
call
mov
mov
je
cmp
les
or
popa
mov
scas
das
sti
push
lock
loop
imul
xchg
cli
icebp
xchg
adc
pop
in
stc
fmul
add
(bad)
sbb
pop
xchg
cmps
bound
mov
or
sbb
xor
das
xchg
xor
add
xor
dec
es
sub
sub
pop
sub
std
dec
adc
and
mov
mov
push
pand
or
xchg
rcl
sub
retf
in
pop
cmps
mov
lods
mov
mov
mov
dec
sahf
push
adc
mov
push
ins
jno
inc
xchg
push
shr
call
stc
pop
aam
sahf
sub
sbb
jmp
test
fwait
adc
(bad)
cmp
movs
fcmovb
sub
aas
inc
cmp
repz
dec
jns
cmc
mov
xor
jl
pusha
xchg
call
sqrtps
xacquire
sbb
inc
mov
jmp
xchg
cmps
mov
kaddw
mov
fs
in
sub
xchg
sbb
packsswb
or
mov
sar
popf
lahf
bound
repz
or
retf
(bad)
and
xchg
jmp
xchg
std
jp
in
mov
mov
pop
jg
xor
mov
jmp
jl
out
sbb
sbb
fs
add
stc
mov
mov
(bad)
jecxz
adc
scas
jno
xor
retf
rcl
dec
mov
push
gs
lds
mov
loope
cmp
ds
pushf
jp
inc
inc
outs
popa
in
mov
xor
ficomp
(bad)
xor
imul
xor
pop
leave
pop
push
add
fcomi
mov
xchg
cdq
lods
stc
mov
sbb
movs
fdivr
sub
(bad)
out
sbb
jnp
xor
retf
int3
lock
mov
cli
rcr
sub
and
clc
mov
mov
adc
cmps
inc
jp
outs
stos
repz
push
push
stc
cmps
push
dec
cwde
out
icebp
arpl
push
addr16
mov
dec
push
push
sti
mov
pop
int3
xchg
ret
mov
loope
jns
adc
inc
call
xor
ficomp
lock
mul
sub
bnd
lods
xlat
push
add
sbb
mov
sbb
add
rcr
lea
out
jmp
fwait
fwait
stc
sub
mov
cld
scas
add
xchg
ror
mov
mov
loope
lock
mov
imul
pusha
mov
adc
mov
mov
test
cmc
cmp
cmp
cmp
movs
mov
ds
xchg
lahf
mov
xchg
sbb
mov
cwde
push
(bad)
adc
jl
(bad)
pop
out
cmp
cmp
icebp
jae
fs
push
push
push
mov
xchg
fnstenv
out
adc
aas
xor
leave
out
nop
jecxz
cwde
aaa
mov
sahf
and
inc
popa
pop
jl
inc
jg
adc
push
imul
das
or
cmp
lods
jo
mov
and
je
dec
inc
outs
xlat
arpl
scas
and
cwde
in
mov
push
inc
js
out
or
add
sub
jae
mov
sub
aas
in
scas
out
mov
shl
mov
int3
inc
bound
jne
sub
jns
pushf
xor
in
sbb
fs
jg
jmp
mov
ficomp
and
xchg
sub
xlat
jge
sbb
and
test
adc
mov
add
dec
inc
sbb
inc
add
cmp
ja
ret
sbb
xchg
jnp
sbb
inc
je
mov
mov
loop
into
pop
sub
mov
pushf
fcomp
pushf
cdq
mov
in
dec
mov
lahf
dec
jmp
jns
add
cdq
mov
pop
and
push
std
or
aaa
sub
loop
and
or
arpl
shl
jmp
hlt
ret
dec
sbb
movs
sbb
addr16
dec
pop
adc
mov
mov
pusha
(bad)
outs
fcmovne
add
inc
into
int3
ror
mov
shr
mov
or
into
mov
nop
jbe
push
jbe
cmc
add
dec
vcvtsd2si
retf
or
inc
mov
mov
sub
xchg
inc
(bad)
mov
nop
pop
ret
push
add
pop
out
std
rol
xor
push
inc
xchg
jb
rcr
mov
pop
call
pop
sbb
rcl
cs
call
mov
leave
adc
mov
lahf
mov
mov
jg
cmp
xchg
or
mov
cdq
arpl
add
pop
dec
cmp
inc
add
ins
push
push
mov
jecxz
push
stc
jmp
cmps
push
mov
cdq
scas
mov
xchg
xor
xor
mov
idiv
daa
dec
add
or
lahf
mov
xchg
jne
or
cdq
and
mov
adc
sahf
loope
loope
bound
icebp
and
push
inc
and
idiv
mov
in
mov
rcl
shl
xor
movs
and
pop
mov
test
mov
jge
push
jecxz
ja
push
mov
xchg
jecxz
shr
add
xor
fdivr
sti
push
push
xchg
jne
or
sub
pop
imul
jle
adc
push
mov
add
jecxz
adc
cmp
add
mov
dec
adc
add
jo
adc
in
mov
inc
sar
dec
stos
shl
rol
pusha
adc
xor
nop
pop
retf
sub
repz
aam
outs
retf
inc
or
div
xchg
or
xchg
scas
sahf
adc
stos
mov
sub
scas
ins
je
pop
jae
sahf
stc
push
retf
push
cwde
mov
repz
mov
jl
pop
call
sahf
mov
out
shr
cmps
lods
mov
jb
push
shr
add
adc
dec
jg
or
in
sub
jecxz
sub
pop
mov
fwait
mov
call
mov
jmp
push
jns
and
jnp
pop
jb
scas
sbb
adc
jnp
xor
mov
mov
int
xor
cmc
cmp
int
div
mov
mov
adc
mov
jno
mov
pop
or
sbb
jmp
xchg
hlt
push
push
outs
lahf
sar
int3
imul
out
test
lods
or
icebp
mov
or
mov
and
jbe
mov
push
nop
rol
fwait
shl
loop
add
xchg
jns
shr
clc
mov
repz
(bad)
shl
leave
pop
mov
push
fucom
push
fld
push
or
inc
mov
in
jle
icebp
fwait
or
loopne
xor
scas
mov
fadd
gs
cmc
ss
mov
aas
adc
ret
pop
xor
jp
mov
mov
(bad)
adc
mov
jnp
push
xor
mov
mov
mov
sbb
loope
out
dec
imul
jae
sti
into
inc
and
cmp
cmp
adc
pop
fstp
fwait
gs
mov
aam
mov
sub
mov
out
fbstp
add
das
dec
push
or
std
jmp
jns
xchg
in
xchg
rol
test
jne
xchg
in
mov
rcr
or
pushf
or
clc
pop
adc
imul
mov
mov
call
push
fadd
or
cli
aaa
lods
fsub
stos
add
outs
pop
xchg
mov
cwde
xchg
sbb
pusha
sub
xchg
pushw
add
imul
sbb
push
lods
je
cmp
adc
addr16
or
inc
cmp
and
ror
fsubr
pop
clc
dec
lea
stos
lahf
ficomp
add
add
or
pop
push
aaa
rcl
clc
push
fidivr
ins
dec
mov
fsubr
fsubr
inc
jl
inc
sub
sbb
and
retf
mov
jle
stos
cdq
adc
mov
mov
mov
loope
int3
je
dec
cmp
push
jns
add
add
mov
pop
jle
(bad)
mov
fwait
sub
scas
jp
jb
xlat
xlat
pop
dec
lods
adc
push
lods
xchg
sbb
retf
aam
dec
and
shr
mov
jne
jo
jb
or
mov
xchg
jmp
test
out
not
dec
xor
xchg
xor
mov
jg
or
xor
and
cmp
push
out
adc
(bad)
nop
mov
or
stos
pop
inc
push
or
mov
pushf
fcmovb
or
pop
mov
cdq
pop
push
xor
cmps
pop
ret
addr16
dec
adc
call
push
ja
(bad)
lea
stos
fstp
and
inc
fldpi
jle
pop
inc
hlt
loopne
pop
popa
jl
sub
add
mov
sbb
out
sahf
inc
inc
or
retf
psubusw
jb
shr
shl
scas
stc
ins
enter
jbe
push
loopne
jne
mov
push
xor
xchg
ds
enter
jns
xor
pop
aad
push
push
push
inc
cmp
mov
mov
(bad)
mov
bound
xchg
xchg
sub
bound
ins
iret
adc
cdq
mul
jmp
aam
mov
out
cmc
test
or
pop
mov
mov
jmp
cli
pop
add
imul
mov
mov
sub
cmps
push
inc
mov
inc
cmp
lahf
push
mov
mov
xor
jl
jge
movs
es
jbe
xor
xchg
xor
or
mul
mov
add
push
adc
shl
dec
xchg
jmp
fisttp
rcl
sub
mov
jmp
sub
xchg
mov
loopne
clc
dec
les
xchg
xchg
fisubr
xchg
gs
push
lods
xchg
test
push
inc
rcr
sbb
call
aas
fcmovbe
ds
adc
inc
pop
adc
jg
cmp
jle
push
inc
repz
jae
lahf
leave
imul
stc
inc
inc
jb
mov
out
add
loop
inc
ret
mov
fadd
fisubr
call
out
xchg
cmps
add
(bad)
jle
into
jnp
aaa
mov
int
sbb
mov
jb
cwde
cdq
inc
es
int3
sahf
inc
(bad)
rcl
aas
push
jl
sti
or
pop
jmp
xchg
nop
sbb
jb
pop
and
push
jmp
dec
mov
lahf
iret
popa
jl
mov
not
psubusb
ins
jns
(bad)
out
loope
or
dec
mov
adc
lock
pop
jbe
mov
jne
inc
test
idiv
xchg
jp
leave
cmp
dec
rol
push
sbb
loope
xor
iret
scas
jo
sbb
cmps
xchg
call
add
jmp
pop
and
inc
mov
fadd
movs
aam
shr
fidivr
jo
mov
out
cmp
daa
fstp
fwait
test
test
inc
aaa
arpl
aaa
movs
in
jo
jl
pop
stos
aad
adc
inc
loopne
cmp
or
pop
add
xor
out
repnz
adc
sub
dec
push
or
add
jae
mov
(bad)
test
sub
xchg
stc
outs
xchg
or
adc
cmp
add
test
add
lahf
(bad)
in
xchg
mov
dec
aad
jnp
jne
inc
retf
inc
sub
pop
pop
mov
sub
ins
cmp
call
fidiv
mov
adc
push
mov
loop
test
xor
fdiv
sbb
shl
mov
mov
inc
in
push
call
addr16
inc
sub
mov
adc
jbe
push
xchg
es
scas
in
mov
ror
pop
xor
inc
mov
(bad)
jae
ja
pop
mov
jae
sahf
mov
daa
fisubr
xchg
sub
scas
repnz
sbb
adc
test
cdq
mov
pop
push
adc
loope
push
jb
jno
adc
inc
in
scas
cld
and
sub
daa
inc
pop
push
fstp
sub
inc
fst
pop
mov
outs
mov
sub
imul
pop
dec
cmp
bound
repz
and
xor
jl
sub
fdivr
push
out
fld
jne
popf
mov
js
xor
scas
fnsave
in
pop
cmp
pop
xchg
ret
mov
push
and
inc
push
sbb
jl
xor
test
adc
nop
scas
rcl
mov
push
fmul
jno
out
dec
stos
dec
sub
outs
out
icebp
sbb
lahf
jns
rol
cmp
jae
out
mov
xor
sub
(bad)
mov
cmp
or
jl
pushf
sbb
mov
jno
sahf
pop
push
jo
mov
outs
add
jns
mov
retf
sub
imul
push
cwde
xchg
ret
jae
js
fist
inc
ja
or
arpl
into
dec
or
nop
or
test
adc
inc
mov
add
(bad)
xchg
in
daa
mov
push
arpl
daa
das
jns
add
(bad)
cmp
rcr
xor
sahf
(bad)
mov
xor
push
add
xor
xchg
and
inc
imul
cmp
xor
push
mov
nop
test
(bad)
sbb
ret
jns
inc
cmps
pop
and
inc
cld
int
fidiv
mov
fwait
push
gs
xchg
mov
ds
and
xor
int3
out
pop
jns
sbb
out
add
in
es
mov
jo
pop
repz
out
jp
mov
adc
sub
movs
test
mov
ss
je
out
fidivr
in
jns
loopne
mov
dec
add
add
dec
mov
nop
inc
inc
mov
lods
imul
push
unpcklps
add
mov
xor
cmp
fcom
icebp
xor
sahf
out
add
and
mov
(bad)
pop
dec
rol
dec
mov
ins
pop
sub
mov
pop
dec
pop
cmp
test
ror
push
cmp
sbb
lea
daa
ficomp
ret
pop
or
xchg
je
(bad)
xchg
or
mov
dec
mov
das
mov
jb
out
cmps
popf
adc
aas
mov
xchg
in
cli
mov
pop
or
fisub
test
(bad)
in
push
add
inc
mov
cmovs
retf
movs
mov
mov
(bad)
out
cmp
cmp
and
pop
cmp
push
or
sub
mov
or
mov
mov
and
mov
int
dec
mov
(bad)
sub
jle
dec
lods
jge
push
mov
push
scas
fdivr
fisub
add
inc
jae
fimul
in
ins
inc
jl
into
mov
and
dec
jmp
leave
enter
or
jecxz
js
movs
mov
mov
jne
mov
dec
loope
div
jo
in
ror
aad
xor
push
(bad)
into
iret
test
add
push
mov
sbb
or
push
fwait
mov
inc
jg
repnz
jo
cmps
sub
push
fmul
fist
sbb
sub
add
inc
or
cmp
lahf
(bad)
or
add
push
cmp
xor
loop
and
std
mov
xchg
cmps
lds
jl
jl
cmp
pop
daa
mov
mov
pop
mov
cli
mov
cmp
icebp
cmp
repnz
jl
mov
fild
mov
jne
setns
mov
das
mov
mov
cmp
xor
xchg
pop
push
mov
jmp
fisttp
fwait
xor
lea
jecxz
jno
xor
sbb
push
shr
fisubr
js
movs
lea
sub
fwait
mov
je
cmps
pusha
fdiv
push
adc
cmp
jbe
dec
mov
pusha
lds
enter
sub
or
int3
call
push
mov
mov
shr
lock
mov
jp
push
pop
sbb
jp
or
ror
outs
adc
and
and
adc
jnp
mov
out
cvtpi2ps
mov
xlat
in
jge
mov
push
cmovbe
dec
mov
push
(bad)
adc
or
add
ror
push
imul
shl
push
and
(bad)
sbb
inc
test
xchg
jno
cmp
test
lahf
and
mul
push
scas
mov
xchg
sub
sub
loop
jnp
mov
ficom
call
shr
and
movs
and
out
stos
cmp
xchg
in
imul
xor
out
push
xor
out
xchg
pusha
push
call
and
inc
xchg
add
fst
aas
ins
mov
fsubr
inc
popa
xor
cmp
push
add
dec
mov
cwde
xor
cmc
mov
cmc
mov
inc
aas
scas
loop
push
icebp
sbb
gs
xchg
add
or
aas
xor
fs
dec
xor
fistp
mov
xchg
iret
nop
ret
jo
xor
hlt
dec
mov
fistp
inc
inc
jmp
xor
xor
mov
sub
aaa
xchg
sbb
inc
and
mov
cmc
pop
(bad)
in
inc
outs
xchg
pop
xchg
arpl
sbb
xchg
jle
sbb
sub
pop
(bad)
mul
mov
mov
clc
mov
cs
(bad)
jge
dec
mov
push
in
sbb
xchg
mov
aad
nop
push
adc
fmul
adc
(bad)
lods
or
or
add
int3
(bad)
push
mov
rol
xchg
lock
cld
cdq
lods
in
hlt
out
enter
mov
jmp
mov
push
xor
sbb
shl
push
daa
inc
inc
inc
inc
mov
cmp
pop
mov
test
movs
rol
and
std
in
sub
nop
test
inc
and
(bad)
aad
nop
cwde
push
and
xor
aad
push
adc
xor
fld
ins
push
aam
mov
cld
ret
xor
(bad)
and
mov
bound
nop
fcmovnb
inc
cmps
fmul
push
push
(bad)
or
lock
out
test
sbb
aam
dec
mov
sbb
pop
out
hlt
jns
inc
aas
ss
je
pushf
adc
cmp
ror
xor
sbb
test
sbb
add
add
push
push
sub
mov
icebp
sub
arpl
iret
xor
fwait
sbb
jp
push
imul
jne
jge
add
add
sub
adc
and
adc
and
pop
cmp
lea
int3
retf
xlat
mov
dec
and
ja
xor
xor
add
and
cmp
das
jae
inc
pop
dec
mov
shl
into
xor
cmp
(bad)
mov
mov
cmc
xlat
cwde
popa
pop
das
outs
jle
mov
pop
pop
xchg
mov
and
cmps
(bad)
int
(bad)
pop
nop
(bad)
sub
push
popf
push
add
push
xchg
stos
dec
add
jo
std
pop
fmul
cmp
cdq
fisubr
inc
daa
mov
loope
fiadd
test
mov
(bad)
mov
adc
data16
cdq
cmp
adc
nop
cmp
stos
push
ror
mov
sar
test
or
xchg
popa
clc
lds
jne
xor
lea
scas
lea
mov
ins
sbb
mov
sbb
mov
mov
sar
and
xchg
rol
xchg
adc
mov
cmp
push
dec
mov
inc
lea
mov
push
fild
or
add
popa
fs
sbb
mov
push
push
or
dec
push
jns
arpl
mov
adc
fcomi
dec
scas
inc
(bad)
ret
or
scas
jge
pop
sub
ins
or
sbb
imul
sbb
jb
sbb
retf
lock
and
scas
rcr
inc
imul
loop
loope
fisub
pop
retf
sub
stc
(bad)
adc
loope
and
cmps
jge
mulps
xor
dec
push
cld
ins
inc
retf
cld
mov
sahf
fisttp
test
es
jno
icebp
out
cmp
inc
addr16
adc
jmp
popf
lds
int3
and
cmps
pop
push
hlt
pop
out
cs
fstp
and
(bad)
push
xor
in
cld
jbe
push
mov
add
or
fnsave
ds
dec
neg
daa
jl
sbb
or
push
xchg
std
iret
sbb
inc
mov
pop
ss
mov
and
inc
outs
adc
das
(bad)
fimul
xchg
mov
push
ret
xor
add
cmps
movs
or
lds
add
dec
and
inc
mov
mov
push
mov
mov
xchg
stos
nop
add
jl
retf
pop
inc
push
lahf
dec
mov
aam
and
or
outs
loop
(bad)
aad
xlat
jno
das
cmp
loop
clc
xchg
test
mov
mov
adc
sti
push
cmp
mov
bound
(bad)
sbb
dec
test
ds
mov
int
sbb
or
inc
jb
fwait
or
push
xchg
adc
add
(bad)
frstor
jno
jbe
push
xchg
inc
xor
cli
or
jae
sbb
push
mov
and
in
call
int3
test
xchg
fmul
dec
or
and
std
test
js
push
cmps
ins
test
mov
cmp
scas
jp
rol
loope
mov
jbe
fistp
mov
add
inc
mov
pusha
sbb
sub
and
daa
fs
sahf
jmp
cmp
repz
sbb
xor
iret
sub
or
fbstp
idiv
in
sahf
pop
mov
fistp
rol
or
pop
scas
and
data16
test
fs
mov
sub
les
and
stos
inc
inc
fdivr
mov
pop
sti
das
mov
jecxz
dec
xor
mov
or
stc
stc
and
sub
fadd
push
mov
mov
sbb
mov
fs
mov
rcl
js
scas
dec
mov
jecxz
std
pop
dec
pop
cmp
jae
fisubr
xchg
(bad)
or
push
pop
repnz
lock
mov
xchg
push
push
add
lods
xor
sub
cmps
pop
xor
in
dec
jge
xchg
push
push
(bad)
int3
sub
pop
sti
fldcw
icebp
mov
fldenv
scas
cmp
retf
jnp
in
scas
popf
or
in
lds
neg
pushf
jmp
ds
(bad)
add
and
rcr
mov
mov
cmp
mov
dec
add
lea
inc
dec
mov
scas
stos
xchg
in
imul
enter
test
inc
fild
(bad)
push
push
movs
test
xchg
mov
add
mov
push
xor
loop
movs
popf
outs
xor
sbb
(bad)
cmp
in
mov
icebp
imul
(bad)
mov
cmp
or
scas
sar
sub
pop
in
outs
or
lods
fld
clc
sub
jns
aas
xchg
fmulp
ins
je
cmp
in
or
test
sub
adc
les
ins
scas
sti
and
adc
xchg
inc
daa
pop
out
and
mov
mov
je
jmp
shl
leave
scas
nop
adc
cld
(bad)
stos
adc
xchg
in
inc
aad
in
xor
mov
bound
imul
dec
add
jp
fisubr
cmp
xlat
or
not
mov
call
scas
mov
or
push
fsub
cmp
inc
aad
pop
xchg
pop
out
adc
jg
xchg
cmp
cmp
jecxz
pop
mov
enter
cld
adc
cmps
xor
mov
mov
sti
mov
jmp
mov
sahf
in
sub
xlat
xor
test
add
adc
sub
test
mov
outs
mov
sbb
and
pop
jle
shl
fdiv
fcomp
(bad)
xchg
leave
adc
int
jo
sub
jp
xchg
test
and
test
(bad)
aas
int
ret
xlat
imul
fisub
ja
pop
addr16
lahf
xchg
repnz
test
in
xor
clc
(bad)
push
in
push
pop
pushf
hlt
jecxz
outs
sub
ficom
jg
sbb
xor
xor
jmp
push
cmp
fwait
dec
push
or
pop
xor
cld
mov
jmp
pop
aam
scas
sbb
or
inc
movs
lods
sub
lds
mov
dec
call
js
xchg
or
xor
mov
das
push
lds
fsubp
cmc
cmp
push
jo
lea
fiadd
adc
sbb
aad
arpl
cmc
out
stos
(bad)
cld
mov
mov
ud1
jp
sahf
nop
(bad)
out
addr16
sar
int3
jae
shr
cli
jle
fld
ss
and
add
pop
(bad)
fisttp
mov
mov
neg
sub
cdq
jmp
imul
sub
pop
push
and
aas
(bad)
mov
push
repz
scas
ds
jmp
ret
push
test
pop
les
pop
jle
loop
mov
stc
sahf
inc
sbb
xchg
inc
scas
mov
test
inc
loope
and
mov
xchg
xor
adc
in
push
mov
sub
or
jl
in
out
mov
push
dec
push
call
xchg
les
xchg
loope
mov
es
mov
fwait
(bad)
nop
shr
retf
das
pushf
mul
mov
mov
je
ror
cli
sub
cmp
lahf
jl
cli
(bad)
xor
jnp
jnp
out
push
jno
pop
add
lock
dec
cmps
mov
inc
outs
and
push
cmp
add
sti
outs
in
(bad)
xlat
loop
fidivr
bound
mov
xchg
(bad)
dec
cmp
stc
sub
mov
xor
adc
dec
or
add
icebp
jo
mov
jge
scas
out
outs
cdq
xor
repnz
sub
xor
jnp
loop
in
nop
aad
xchg
add
rol
adc
(bad)
sbb
sbb
daa
es
fsubr
push
add
popa
mov
in
call
xor
sub
mov
mov
or
std
push
adc
mov
enterw
pushf
inc
mov
xlat
dec
jp
in
shr
jl
inc
push
test
hlt
loope
xor
out
mov
scas
jmp
cmp
movs
or
sub
mov
fs
mov
dec
pop
test
fist
xor
call
clc
gs
fidivr
imul
cmps
mov
call
adc
sahf
mov
pop
mov
adc
lock
daa
push
mov
cmp
scas
lea
inc
mov
adc
jns
lahf
dec
jecxz
push
push
mov
gs
(bad)
pop
or
inc
ror
test
fld
icebp
ss
mov
mov
pop
and
fld
cmp
mov
or
jo
cmp
jge
pop
and
int3
in
(bad)
mov
ret
fcom
dec
dec
or
inc
xchg
jbe
inc
mov
pop
push
xchg
mov
sub
loope
or
or
fs
(bad)
enter
ret
or
cli
cmc
mov
push
sbb
arpl
stos
mov
pop
pavgw
pop
fcomp
cld
ret
jecxz
mov
sub
adc
cwde
mov
sbb
movs
mov
xor
jae
cs
sbb
into
sti
and
push
adc
gs
dec
clc
ds
dec
lock
pop
sub
mov
jp
jns
push
add
jae
fmul
dec
push
gs
test
push
mov
stos
inc
cld
push
out
xor
sub
and
mov
cmp
add
dec
pop
dec
jg
or
in
inc
pop
mov
and
pop
int
addr16
mov
dec
out
pusha
or
jnp
int3
jmp
hlt
push
movs
call
cli
mov
aam
into
push
push
aas
and
fidiv
mov
and
xor
dec
inc
jmp
das
inc
(bad)
xor
nop
add
mov
stc
pop
mov
call
and
add
iret
js
in
mov
stos
push
test
ds
cmc
adc
cmp
sub
xor
jecxz
jns
xlat
dec
mov
aaa
aas
enter
or
jmp
aad
retf
iret
mov
fstp
arpl
stc
pop
jp
in
xchg
xchg
xlat
push
xchg
loop
add
and
int3
inc
sbb
fwait
je
mov
jge
ins
inc
push
jle
mov
ret
imul
adc
fs
inc
scas
push
mov
popa
push
pop
arpl
ss
inc
lock
mov
mov
dec
pop
push
push
push
and
xor
outs
mov
mov
lods
jbe
adc
and
mov
xchg
ret
mov
inc
cs
neg
push
call
ror
inc
dec
push
sahf
mov
mov
push
retf
jg
xor
mov
add
ror
push
repnz
inc
inc
add
push
js
mov
out
ja
mov
repz
stos
mov
out
mov
out
pop
add
in
xor
int3
fdivr
ret
cmp
(bad)
mov
leave
cwde
pop
pusha
sahf
xchg
rol
inc
xchg
bound
pop
mul
gs
xchg
xchg
out
pusha
adc
movs
stos
cs
and
mov
mul
es
imul
hlt
mov
test
add
push
fcmovu
mov
test
adc
cdq
jmp
test
dec
fcomp
pop
adc
test
mov
inc
mov
xchg
stos
push
out
or
xor
das
dec
and
dec
and
mov
sub
loope
in
pop
cmc
fnsave
dec
pushf
ss
aam
cwde
outs
cmps
jmp
add
dec
jp
rol
cmps
mov
test
inc
test
out
xchg
(bad)
test
adc
cmps
popf
ins
je
fnsave
pop
mov
xchg
(bad)
test
stc
pop
adc
es
mov
aam
arpl
sbb
shr
stos
leave
into
retf
and
mov
fisttp
xchg
adc
sub
ja
or
or
jb
ret
rol
push
cmp
loop
(bad)
add
and
cmc
pop
mov
pop
je
sbb
iret
ror
mov
mov
push
cld
cdq
adc
xchg
push
ss
cmp
rcr
or
pushf
and
xor
cmp
and
fnstcw
not
sahf
jne
test
inc
out
scas
push
jmp
test
repnz
mov
mov
aad
(bad)
cmc
inc
cs
cdq
push
cmp
daa
jae
add
das
mov
inc
loop
xchg
add
ficom
mov
jg
push
imul
xchg
pop
xchg
imul
cdq
das
xor
pop
push
inc
gs
ret
(bad)
pop
lods
jb
add
(bad)
outs
adc
imul
mov
stos
jecxz
jne
sub
sub
mov
push
jmp
pushf
xor
cmc
add
sbb
dec
mov
push
ret
sbb
pop
adc
inc
call
dec
ret
mov
out
outs
movs
lods
pop
cwde
pop
inc
jo
dec
adc
push
pop
jmp
push
pop
lss
pushf
ds
sbb
or
add
or
in
retf
sbb
and
mov
sub
mov
mov
mov
fistp
jmp
outs
adc
push
nop
mov
jo
mov
aas
mov
mov
inc
movs
lods
xor
push
loopne
aas
cmp
pop
xor
adc
xor
push
leave
stos
lock
test
lea
cmp
mov
mul
jno
add
xlat
repnz
addr16
popa
adc
sub
push
push
inc
adc
pop
shl
cmp
sub
int
jge
shl
xlat
xor
sbb
test
into
rol
imul
cmp
mov
inc
or
or
inc
jo
push
lods
lahf
push
sbb
xchg
push
or
xor
xchg
test
xchg
(bad)
lods
imul
sti
push
jle
hlt
push
cmp
xchg
jg
xchg
sub
push
sub
xchg
ja
fst
lahf
xor
aaa
push
pop
or
jle
sbb
call
jbe
jns
jmp
xor
jmp
sbb
pop
add
sub
and
cwde
inc
lods
retf
xchg
in
out
(bad)
jp
sar
repz
push
push
jmp
push
mov
sub
inc
sub
aas
(bad)
mov
jbe
dec
or
mov
sbb
jge
int3
dec
test
mov
pop
and
shl
mov
lahf
dec
movs
es
or
inc
hlt
rol
cmp
scas
rcr
mov
mov
ins
fdiv
fistp
in
dec
imul
ins
imul
cld
cmp
and
pop
repnz
ss
fidivr
sahf
pop
mov
sahf
or
call
sti
cwde
xor
dec
test
pop
push
pop
sub
inc
push
pop
fnstsw
in
push
jbe
iret
ror
inc
add
adc
pop
cmps
movntq
repz
xor
cdq
push
adc
sbb
sbb
inc
adc
add
(bad)
pop
movs
push
pop
inc
pop
sbb
dec
das
sub
push
sub
mov
ds
xlat
out
xor
in
cld
and
or
test
mov
push
push
xchg
outs
popa
les
in
xchg
fwait
lds
push
push
and
sub
inc
mov
iret
sbb
loop
jno
sbb
outs
out
adc
ds
mov
fist
test
fistp
ins
xchg
or
inc
push
xchg
je
xchg
pop
pop
mov
mov
ins
(bad)
aaa
out
(bad)
jns
and
stos
sahf
push
pop
jmp
push
pop
mov
adc
dec
push
iret
and
mov
(bad)
aam
sub
push
jno
repz
xchg
adc
ja
jp
loop
lods
pusha
mov
inc
mov
or
adc
lahf
jle
adc
in
pop
sub
cmp
gs
adc
cld
jecxz
jb
test
sub
push
daa
lds
xor
inc
mov
out
dec
sub
pop
cld
and
pop
inc
les
lods
fisttp
popf
jmp
mov
jmp
push
jno
mov
jmp
enter
cmps
ret
mov
sbb
cmps
jecxz
jb
movs
xor
enter
cs
not
xor
mov
adc
or
jge
add
push
aas
in
xchg
test
test
leave
pop
retf
lods
ins
pushf
or
push
dec
xor
push
test
dec
ficomp
aam
das
push
std
in
sbb
leave
nop
mov
outs
pop
popa
mov
clc
cmp
mov
pop
stos
sbb
sbb
push
sub
(bad)
mov
imul
cwde
adc
in
push
mov
jbe
and
mov
mov
aas
mov
mov
mov
jae
mov
sub
loop
and
or
cmp
sbb
jae
imul
mov
hlt
sar
lods
int3
minps
arpl
mov
xchg
mov
data16
fistp
out
popa
retf
stos
mov
sub
lods
dec
shl
sub
out
xchg
or
pop
pop
gs
sahf
stos
in
add
outs
mov
cmps
mov
aas
scas
jmp
psubd
scas
retf
cmc
xor
push
adc
mov
xchg
push
xchg
lock
rcr
iret
xchg
mov
fisubr
mov
(bad)
repnz
pop
mov
sub
sahf
push
sub
xor
aaa
fs
and
mov
mov
out
arpl
xor
jmp
or
stos
lock
and
inc
aad
call
aam
repnz
jae
xlat
pop
mov
retf
sbb
test
ret
fist
popa
mov
mov
dec
popa
aas
fimul
dec
mov
pop
xchg
repz
lahf
fistp
movs
xor
outs
ret
popf
test
xchg
or
das
xchg
dec
ss
dec
mov
test
add
retf
jnp
fsubr
push
imul
(bad)
push
adc
pop
push
mov
sbb
cld
movs
add
xchg
movs
and
shl
lea
add
push
inc
mov
cmp
sub
icebp
cld
sub
or
dec
sub
xchg
mov
jb
cli
mov
or
cmp
pop
xchg
pop
jmp
pop
push
arpl
adc
cmp
xchg
stos
mov
int3
sbb
aaa
cmp
test
sahf
outs
jg
lods
call
sub
(bad)
cmp
rol
(bad)
jp
mov
aad
aad
fnstcw
mov
mov
sbb
pop
jp
jp
jbe
jg
dec
(bad)
push
xchg
push
cmp
sub
cmp
pop
adc
push
xor
sbb
or
es
mov
sbb
push
adc
pop
xor
sbb
push
adc
pop
xor
pop
or
xor
daa
sub
out
cmp
(bad)
in
out
loop
repnz
inc
push
out
cdq
sbb
xor
xor
fdivr
ins
popa
push
call
and
into
mov
std
mov
cmp
push
mov
xchg
xchg
ret
stc
push
fdiv
cli
shr
mov
jle
mov
push
sub
mov
adc
dec
sbb
(bad)
mov
dec
pop
sub
xchg
inc
cmp
aaa
and
xor
adc
(bad)
aaa
ins
sbb
ins
ja
pop
inc
mov
mov
or
clc
ret
stc
out
rol
shr
cmp
cmp
dec
das
in
(bad)
icebp
inc
ins
and
icebp
mov
mov
sub
inc
out
in
scas
pop
jns
and
hlt
in
fbstp
sbb
lds
(bad)
call
mov
inc
ins
xchg
sbb
add
scas
iret
mov
pop
push
stc
sar
jns
jecxz
popf
mov
or
cmps
fwait
add
dec
mov
in
dec
and
(bad)
fld1
inc
nop
xchg
dec
movs
sbb
push
pop
mov
add
xor
mov
and
push
sbb
jg
cmc
ins
ss
sbb
mov
inc
dec
inc
nop
jg
mov
and
mov
retf
dec
jmp
out
pop
test
in
jmp
inc
lea
(bad)
icebp
xchg
out
cmc
jb
nop
pop
sub
pop
sti
and
leave
pop
xchg
je
in
test
fwait
jecxz
pop
push
or
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
push
push
add
and
add
add
and
jb
outs
addr16
add
add
pop
add
adc
add
and
dec
inc
add
add
sbb
add
add
inc
ins
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
push
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
add
or
sub
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
pop
add
jle
test
test
push
add
fadd
jecxz
lock
sbb
adc
das
push
sbb
push
add
push
push
push
lock
jp
adc
mov
rol
add
push
pop
add
add
pop
push
pop
cmp
push
add
push
pop
push
add
add
add
pop
pop
add
add
push
or
add
add
cmp
push
add
cmp
push
add
pop
add
add
add
add
add
or
or
add
add
or
add
add
or
add
add
cmp
add
add
mov
add
add
add
add
add
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
test
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
adc
daa
add
add
add
add
xchg
add
add
add
push
add
xchg
add
add
add
add
add
push
inc
add
add
add
add
push
inc
add
add
add
add
push
inc
add
add
pop
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
push
or
add
dec
add
add
add
or
add
dec
add
add
sahf
add
add
sahf
add
add
add
retf
add
add
dec
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
xor
scas
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
call
dec
add
add
xchg
sbb
add
add
add
add
add
add
xchg
call
dec
add
add
xchg
call
dec
add
add
xchg
or
add
add
add
dec
add
add
add
add
or
add
add
xchg
add
add
dec
add
add
les
adc
sbb
add
xchg
dec
add
add
add
add
sbb
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
jp
add
pop
push
add
add
xchg
add
add
add
je
add
add
xchg
add
add
xchg
add
add
adc
inc
add
push
add
add
adc
movs
add
add
add
add
add
adc
cwde
add
add
add
add
add
adc
dec
add
add
add
add
add
xchg
sbb
add
add
add
push
add
add
adc
outs
add
add
add
adc
hlt
add
add
inc
pop
add
add
adc
scas
add
add
adc
add
add
add
add
bound
add
add
add
add
add
add
add
add
arpl
add
add
add
add
imul
add
add
ins
add
add
adc
dec
add
add
add
adc
imul
jae
add
add
add
add
add
add
add
add
sub
jp
add
add
add
push
add
add
adc
scas
add
add
xor
adc
jle
test
add
push
add
add
add
xchg
add
add
adc
scas
push
es
add
xchg
add
add
adc
mov
inc
add
add
adc
inc
add
add
add
add
add
adc
inc
add
add
jl
add
add
adc
mov
add
push
add
add
add
add
add
add
add
add
add
add
jmp
test
adc
test
mov
lods
add
add
adc
mov
add
mov
add
add
add
add
mov
add
add
add
cs
add
add
adc
scas
push
aaa
add
add
add
adc
jb
inc
add
add
add
adc
add
push
add
add
add
adc
inc
add
add
cld
lds
add
add
add
add
leave
add
add
xchg
sbb
add
add
add
int
add
add
add
mov
add
inc
into
add
add
adc
xchg
add
add
add
add
adc
mov
jmp
rol
add
add
add
ins
rol
add
add
add
add
add
add
add
add
push
add
mov
add
add
sub
add
test
add
add
adc
imul
(bad)
add
add
adc
lahf
pop
dec
push
add
jl
add
add
adc
cmps
add
add
add
add
push
add
add
add
adc
movs
add
fiadd
add
add
add
add
add
add
add
add
add
xor
daa
add
push
add
jp
pop
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
sbb
jns
call
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
cmp
mov
mov
repz
add
mov
add
xchg
add
lahf
add
call
add
add
add
pusha
push
in
jmp
add
xchg
push
xchg
add
fwait
push
sti
add
add
add
push
bound
add
push
xchg
add
add
mov
add
pop
movs
add
add
add
mov
loop
rol
pop
ret
add
add
add
add
pop
dec
push
popa
add
pop
pushw
add
icebp
add
pop
mov
loope
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
rol
add
add
pop
add
add
pop
add
mov
add
rol
add
xor
add
add
push
add
add
add
add
push
add
add
push
add
add
push
ret
add
add
loopne
mov
add
add
add
add
add
add
add
add
add
dec
add
or
add
inc
add
add
add
push
add
add
add
add
add
sldt
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
lea
or
add
add
add
add
add
add
jp
cdq
add
retf
add
cmp
push
add
add
add
dec
add
add
or
add
ja
sbb
xor
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
retf
add
adc
aas
into
add
adc
add
add
add
add
and
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
sub
sub
add
add
sub
add
add
add
add
add
xor
add
add
add
add
add
inc
add
add
add
add
jle
add
add
inc
add
add
hlt
add
add
add
add
add
add
dec
add
add
outs
add
add
add
inc
add
add
add
jle
add
add
push
add
add
add
add
imul
add
add
mov
add
and
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
or
add
add
outs
add
add
add
cwde
add
add
add
dec
add
add
add
test
add
add
outs
add
add
add
add
dec
add
add
add
inc
add
add
add
and
add
add
jns
and
add
add
jge
and
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
pop
add
inc
add
add
cmp
push
add
add
push
add
add
push
add
add
add
add
add
jb
jo
dec
add
add
add
add
add
add
add
add
add
sub
add
mov
jo
add
popa
add
add
add
add
add
dec
add
add
add
add
or
xor
or
popa
add
add
add
xor
add
add
add
add
add
add
adc
xor
adc
jns
adc
add
add
add
sbb
inc
add
add
add
add
sbb
xor
sbb
xor
sbb
add
pop
add
and
cmp
add
add
and
jne
and
loope
and
add
add
add
sub
jns
add
outs
jne
outs
and
data16
popa
jb
and
je
addr16
je
cs
add
outs
jne
outs
and
data16
popa
jb
and
je
addr16
je
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
jb
ja
outs
add
jae
gs
add
xor
cmp
fs
gs
jne
arpl
cs
jae
jne
arpl
add
gs
popa
jb
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
je
add
arpl
outs
jb
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
dec
outs
fs
add
fs
add
jae
gs
cs
gs
arpl
outs
add
outs
je
xor
dec
popa
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
dec
dec
push
push
inc
dec
inc
inc
add
je
je
add
pop
inc
js
ins
imul
jo
add
je
inc
jne
ins
jns
jne
ins
imul
ins
add
jb
outs
add
je
inc
push
loop
scas
loop
scas
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
mov
or
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
add
data16
push
arpl
add
jns
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
gs
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
arpl
add
add
add
inc
outs
jb
add
jae
push
imul
add
inc
jb
jo
outs
push
je
gs
ins
add
jb
popa
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
dec
outs
fs
bound
inc
jbe
outs
je
jb
jae
jne
dec
inc
imul
ins
add
jo
jae
add
outs
je
outs
ins
add
outs
je
popa
outs
fs
gs
inc
outs
outs
je
imul
je
outs
ins
add
jp
inc
add
jp
add
jae
ins
gs
popa
jns
jne
add
inc
jo
inc
outs
ins
popa
imul
ins
bound
push
push
inc
push
push
inc
je
jb
bound
add
dec
gs
outs
fs
outs
outs
add
je
outs
fs
popa
jae
add
outs
add
jo
imul
add
popa
bound
imul
jns
gs
jae
je
push
gs
add
popa
add
gs
je
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
xor
xor
xor
inc
inc
inc
inc
xor
ss
inc
inc
ss
inc
xor
inc
inc
inc
cmp
xor
inc
xor
aaa
xor
inc
inc
inc
inc
xor
cmp
xor
xor
cmp
inc
inc
xor
ss
inc
cmp
inc
add
inc
inc
xor
inc
xor
xor
cmp
xor
inc
cmp
inc
inc
inc
inc
cmp
xor
cmp
inc
inc
add
imul
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
dec
outs
popa
add
imul
jns
je
ins
cs
arpl
imul
arpl
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
ins
jne
push
jns
add
add
outs
imul
je
ins
cs
push
imul
gs
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
gs
arpl
js
je
jae
je
dec
gs
jae
je
dec
push
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
jae
je
dec
popa
ins
add
je
popa
je
add
imul
je
ins
cs
outs
ins
ins
arpl
outs
jae
push
outs
inc
jb
popa
jns
addr16
inc
jbe
fs
arpl
dec
inc
outs
jne
gs
bound
gs
push
gs
ins
jbe
inc
jbe
outs
je
jb
jae
dec
inc
outs
ins
ins
arpl
outs
add
jo
inc
outs
ins
popa
imul
imul
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
gs
popa
je
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
jo
gs
imul
add
jb
push
push
gs
bound
arpl
inc
outs
jne
gs
bound
xor
jae
je
dec
je
ins
add
jbe
fs
arpl
popa
arpl
jns
push
jns
je
ins
cs
arpl
imul
popa
je
add
je
dec
popa
ins
add
outs
je
imul
dec
outs
jbe
imul
add
add
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
ins
ins
add
pop
dec
gs
outs
fs
outs
outs
add
je
inc
outs
je
jns
outs
imul
je
imul
popa
je
inc
arpl
jo
outs
jb
popa
fs
dec
outs
popa
add
add
outs
ins
jo
jb
bound
xor
push
je
imul
fs
push
jns
je
ins
cs
gs
add
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
dec
inc
jno
popa
je
bound
xor
data16
outs
jae
add
jo
outs
add
jae
outs
fs
popa
jns
jne
add
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
pop
inc
jae
gs
bound
inc
gs
js
arpl
imul
ins
bound
inc
outs
outs
arpl
add
je
inc
ins
imul
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
ins
jne
inc
je
jb
bound
add
ins
add
and
add
and
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
imul
jne
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
leave
test
inc
lods
aad
dec
mov
or
xor
mov
mov
pop
jg
aad
cmp
pop
add
or
sbb
add
or
add
inc
pop
xor
sbb
add
syscall
syscall
syscall
syscall
syscall
syscall
or
or
add
or
adc
or
syscall
or
or
or
or
add
pop
or
or
or
add
adc
adc
and
sbb
sbb
and
sbb
add
add
sbb
add
add
add
add
or
push
sbb
or
or
or
or
adc
add
add
cmp
add
add
add
add
add
adc
add
sbb
pusha
add
add
cmp
add
adc
and
add
dec
adc
push
add
add
dec
push
and
add
pop
add
or
add
dec
add
add
or
or
sbb
sbb
add
add
push
add
sbb
or
adc
inc
add
adc
or
push
adc
or
adc
and
add
add
or
add
inc
add
add
dec
add
adc
pop
pop
or
sbb
or
sbb
adc
or
adc
add
add
add
add
push
add
add
adc
add
add
pop
or
or
sbb
add
add
add
or
or
or
push
add
push
add
add
push
or
add
push
add
add
add
or
or
or
or
and
or
adc
push
or
add
or
cmp
or
or
add
adc
add
adc
add
push
adc
add
adc
push
adc
pop
or
or
or
or
or
and
add
adc
push
add
add
push
adc
or
or
or
or
or
or
and
add
ins
or
add
push
add
ins
add
adc
or
or
adc
sbb
add
adc
add
lea
jns
add
push
add
push
add
pop
adc
or
or
or
or
sbb
or
or
add
sbb
add
adc
and
add
sbb
or
or
or
or
sbb
and
add
add
push
add
add
adc
or
pop
push
or
or
or
or
or
and
add
and
push
add
and
add
push
add
add
add
pop
or
or
or
or
push
add
sbb
adc
add
add
add
add
pop
or
or
or
sbb
or
or
and
sbb
add
push
adc
or
sbb
or
or
or
add
adc
add
or
push
adc
or
add
jns
adc
sbb
sbb
sbb
adc
sbb
sbb
or
or
or
or
or
or
or
or
or
or
adc
push
push
push
or
push
sbb
jne
or
adc
add
add
push
or
add
adc
add
push
adc
add
and
add
add
add
sbb
adc
sbb
add
add
add
sbb
adc
adc
or
pop
or
or
sbb
or
or
and
sbb
sbb
add
add
pop
or
sbb
or
or
sbb
adc
add
push
add
add
or
adc
or
sbb
or
sbb
and
adc
add
add
pop
or
sbb
or
or
adc
add
push
add
push
add
add
push
or
add
adc
add
add
or
or
or
or
or
add
push
add
add
add
push
sbb
push
adc
pop
push
or
sbb
sbb
or
or
sbb
or
or
or
or
adc
push
add
loope
or
sbb
add
push
or
sbb
sysret
or
sbb
or
or
or
pop
push
or
or
or
or
or
or
add
add
add
adc
or
sbb
or
or
adc
add
push
add
or
add
adc
or
adc
push
or
add
push
add
add
add
adc
add
push
add
jno
or
pop
or
or
or
or
or
add
push
or
add
add
or
or
or
sbb
or
add
add
push
or
or
or
or
sbb
push
adc
pop
or
or
sbb
adc
add
or
pop
push
or
or
pop
adc
or
sbb
or
or
adc
or
and
adc
add
or
or
adc
add
push
add
push
pop
pop
add
or
sbb
or
or
sbb
adc
add
adc
add
pop
pop
or
and
or
sbb
adc
add
and
add
push
add
add
add
pop
or
sub
or
or
adc
add
adc
add
pop
pop
or
add
or
or
push
push
push
or
add
push
add
add
push
add
jno
pop
pop
or
or
or
sbb
add
add
push
adc
add
inc
outs
jo
jb
addr16
and
xor
xor
add
pop
add
sbb
outs
jne
outs
and
data16
popa
jb
and
je
addr16
je
add
add
add
add
and
cmp
sub
sub
sub
sub
data16
data16
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
adc
add
xor
cs
xor
xor
xor
add
lock
push
lock
add
add
adc
add
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
