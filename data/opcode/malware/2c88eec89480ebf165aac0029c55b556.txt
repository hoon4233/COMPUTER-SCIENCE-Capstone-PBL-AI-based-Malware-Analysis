(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
or
mov
mov
repz
add
push
call
add
neg
pop
sbb
pop
inc
ret
fwait
outs
jb
mov
mov
mov
mov
mov
cs
cmp
mov
test
jb
dec
xchg
push
mov
sub
push
call
push
call
movzx
cmp
jne
push
push
push
call
mov
call
push
call
pop
jmp
call
call
call
push
push
push
push
push
call
push
push
push
push
call
push
call
push
push
push
push
call
call
mov
imul
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
push
call
leave
ret
push
mov
push
mov
xor
mov
jmp
xchg
inc
repz
mov
inc
cld
leave
ret
push
mov
sub
mov
mov
mov
xor
mov
mov
or
mov
mov
add
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
push
mov
push
call
pop
pop
mov
mov
mov
mov
shr
add
mov
call
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
or
mov
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
or
mov
mov
add
mov
mov
and
mov
mov
mov
imul
mov
mov
xor
mov
mov
mov
mov
xor
jne
mov
sub
neg
sbb
inc
leave
ret
or
or
daa
push
jge
jae
call
call
call
int3
push
mov
push
push
lea
mov
mov
push
mov
push
mov
push
mov
push
lea
call
leave
ret
push
mov
sub
lea
mov
mov
mov
and
mov
mov
xor
mov
mov
sub
mov
mov
mov
mov
mov
push
push
call
pop
pop
call
test
jne
xor
inc
jmp
mov
xor
mov
div
mov
mov
imul
mov
mov
add
mov
mov
mov
push
push
push
call
push
call
mov
leave
ret
int3
xchg
dec
les
sub
js
js
lea
test
inc
cli
and
mov
mov
jne
or
dec
or
mov
adc
sti
dec
ficom
ins
loopne
push
cmp
rol
pop
inc
mov
pop
stc
mul
add
mov
stos
fsub
lahf
(bad)
mov
ds
nop
sub
and
sahf
adc
mov
jnp
cld
dec
ret
mov
inc
movs
xchg
sbb
sub
and
sub
xlat
es
mov
xchg
out
pop
out
loopne
mov
mov
push
aaa
loopne
jb
add
bound
sub
cmp
jle
add
add
loop
call
sub
cli
xor
push
mov
stc
out
cli
jnp
enter
fadd
fwait
jno
inc
dec
or
imul
in
add
mov
mov
inc
jp
frstor
in
ja
sub
sbb
fnsave
ret
les
cdq
xchg
xchg
cmp
sub
pushf
or
cdq
xchg
and
sbb
(bad)
scas
pop
in
and
hlt
mov
js
adc
pop
adc
sbb
aaa
shr
cmp
adc
push
adc
fucomp
mov
stos
loop
das
pop
rcl
pop
sub
lods
dec
fisttp
mov
jnp
inc
jle
je
ja
pop
push
jge
aas
xchg
scas
je
mov
mov
inc
icebp
sbb
add
mov
and
icebp
push
jns
les
dec
and
ds
jne
xchg
xchg
je
cmp
lahf
addr16
iret
cmp
mov
je
dec
cmps
mov
or
jb
syscall
ins
fst
pusha
cmp
cmps
movs
data16
ret
xchg
leave
mov
jo
and
dec
jl
shr
call
sub
fs
xor
imul
shl
sbb
out
jb
std
(bad)
xchg
jbe
add
iret
lds
(bad)
cmc
cmps
pop
adc
dec
cmps
jmp
mov
push
in
jle
call
ins
xchg
pop
ja
pop
cdq
mov
sbb
mov
mov
jge
fisttp
push
mov
stos
xchg
adc
icebp
push
mov
movs
ret
or
aaa
cmps
loopne
push
cwde
fwait
push
push
in
xor
dec
imul
lea
jo
mov
sub
mov
jge
sub
xor
cmps
gs
sub
int
imul
pop
cmp
sub
imul
xor
push
loop
xchg
repnz
(bad)
mul
call
aaa
sub
xor
and
movs
pop
jne
and
lea
adc
dec
test
ins
and
neg
loope
out
(bad)
jno
mov
jns
pop
pushf
add
xor
xor
xor
cmp
and
jle
push
inc
bound
push
fcmovnbe
dec
mov
and
sub
rol
pop
mov
sbb
movs
rcr
aas
lods
int3
or
cwde
pop
push
ds
adc
(bad)
hlt
xor
cmp
jge
cmp
xor
(bad)
call
add
pop
lock
sar
inc
and
and
loope
mov
sbb
rol
and
pop
pop
cwde
out
jno
xchg
xchg
dec
mov
call
aas
imul
add
inc
xor
inc
(bad)
or
inc
mov
in
stos
(bad)
jo
fistp
mov
mov
and
movs
sub
mov
fcom
aaa
stos
jmp
jnp
enter
in
or
leave
repz
xor
pop
outs
xchg
lods
adc
mov
dec
ret
retf
ret
xchg
ds
sar
and
int3
mov
dec
or
and
xor
mov
scas
call
mov
dec
xchg
jno
fiadd
mov
dec
(bad)
fidiv
pushf
(bad)
jmp
es
mov
stos
sub
inc
sub
and
xchg
xor
and
sub
sahf
dec
stc
inc
or
xchg
or
cmp
pop
or
outs
loop
mov
adc
shl
ss
pop
ret
std
and
dec
fwait
cmp
scas
nop
ret
inc
outs
jle
inc
mov
sahf
pop
jp
jbe
pushf
lock
enter
repz
dec
shl
mov
popa
sbb
and
or
mov
int
adc
cmp
stc
mov
js
popf
stos
ins
popa
or
(bad)
out
cmp
pop
loop
les
add
cli
jp
xchg
adc
int3
dec
xchg
push
lahf
loope
fist
into
adc
mov
sar
xor
scas
xor
movs
nop
lock
fld
push
push
in
outs
cmp
dec
aaa
stos
xor
dec
ret
sar
je
adc
ins
inc
mov
retf
retf
adc
cld
(bad)
call
jle
icebp
loopne
cs
stos
js
adc
pop
dec
je
in
push
outs
movs
push
push
sub
push
jmp
test
inc
cmp
push
shl
mov
div
xchg
shl
and
sbb
mov
ret
push
push
xchg
ins
mov
sahf
mov
mov
fcmovne
mov
pop
nop
in
cmc
int
addr16
add
icebp
fisubr
push
gs
cmp
xor
ficom
daa
and
sub
jl
dec
pop
push
and
mov
push
fcmovnu
mov
mov
icebp
adc
inc
inc
bound
or
add
enter
in
mov
sbb
fnsave
push
cmp
stos
and
jbe
cmp
and
rol
sub
(bad)
sar
dec
xor
fbstp
pop
lock
dec
jmp
inc
retf
cmp
aas
mov
imul
inc
js
adc
pop
gs
test
mov
out
in
mov
mov
fcomip
rcl
and
xchg
or
sahf
adc
cmp
in
shl
adc
sub
mov
or
fnstenv
sbb
test
pushf
jnp
cmp
push
pop
out
jg
and
mov
dec
dec
cs
or
cmp
lds
das
adc
inc
call
test
stos
enterw
add
(bad)
sbb
(bad)
mov
inc
mov
out
or
sub
pop
repz
repz
and
cld
pop
push
jns
icebp
clc
les
mov
inc
cdq
in
xchg
into
rcr
test
adc
out
jl
add
cmp
mov
imul
les
aad
cli
data16
(bad)
pusha
mov
sahf
and
addr16
repz
(bad)
aam
popf
(bad)
ret
movs
sbb
sbb
sbb
xchg
fwait
push
dec
jnp
ins
in
sbb
cwde
loop
jmp
retf
dec
icebp
sub
out
imul
das
call
cmp
loopne
pop
enter
nop
je
adc
in
sub
call
jb
cmps
or
add
ret
stos
mov
int3
int3
int3
int3
int3
int3
lea
mov
add
jmp
call
lea
push
ret
cmps
adc
jo
mov
aaa
inc
sbb
fcmovb
fadd
pop
and
ret
das
shl
sbb
push
imul
inc
je
imul
pop
jno
ins
cld
mov
add
imul
aas
push
jbe
adc
mov
mov
in
xor
jg
data16
(bad)
retf
cmp
inc
cmp
jge
inc
adc
imul
adc
mov
call
stos
jle
mov
add
push
sub
adc
loopne
mov
add
out
std
retf
sub
xor
mov
adc
shr
jbe
jns
push
loope
repz
and
test
jno
ins
xchg
dec
push
xchg
aaa
lock
push
sbb
cmps
lds
(bad)
ret
and
xchg
mov
or
inc
and
stos
push
cwde
mov
(bad)
fcomp
sti
mov
cmc
and
jnp
retf
js
cmp
jmp
(bad)
and
aam
mov
mov
ja
sbb
xchg
adc
pushf
jae
in
sub
jg
add
add
xchg
mov
and
stc
mov
test
xchg
lods
adc
movs
(bad)
fistp
sub
mov
fild
lea
ror
loop
leave
dec
lods
cmp
repz
pop
push
add
xor
xchg
and
dec
pop
jg
sub
pushf
cld
pop
push
jbe
add
fisub
sub
(bad)
push
adc
pop
jmp
(bad)
fsubr
and
xchg
or
icebp
add
mov
pop
push
adc
icebp
and
icebp
mov
ret
jmp
inc
mov
or
mov
mov
sub
push
jmp
jb
jg
loop
add
adc
sbb
test
outs
jne
aaa
popa
jne
cmps
sbb
jo
fldenv
iret
lds
adc
pop
sahf
stos
sbb
sub
cmps
cld
pop
or
dec
imul
dec
xchg
adc
xor
jmp
aam
jge
call
cwde
cmps
outs
mov
inc
stos
xchg
add
aas
mov
test
add
test
lahf
inc
push
xchg
inc
ffreep
jle
push
and
jbe
xor
(bad)
fmul
sbb
push
jecxz
mov
mov
xchg
mov
dec
retf
mov
cdq
xchg
xor
outs
or
inc
ins
adc
call
mov
and
mov
push
stos
ins
adc
mov
push
dec
xor
scas
mov
sbb
pop
mov
xchg
gs
bound
inc
sahf
push
pop
imul
mov
jnp
add
(bad)
sti
clc
mov
pop
test
pop
pop
cmp
sar
int
call
xchg
and
cmp
ins
pop
je
push
add
push
jge
sub
xor
aas
sub
dec
mov
fdivr
xchg
mov
(bad)
aas
ja
push
mov
xor
loope
pop
or
sbb
lods
jg
jbe
lock
pop
pop
jle
into
fisttp
xchg
push
add
push
jnp
lods
xchg
fs
push
in
jns
iret
movs
sub
stos
sahf
jno
imul
or
js
fisubr
test
test
dec
xor
jae
rcr
cmp
leave
(bad)
bound
push
inc
jmp
pop
sub
add
jp
add
fcomp
pop
push
adc
shl
or
jge
fldenv
cmp
sahf
jbe
out
cli
pop
mov
add
jp
mov
push
stos
in
cmp
outs
imul
in
imul
inc
sub
es
mov
lahf
xchg
(bad)
in
pushf
pop
mov
and
cdq
ret
(bad)
cmps
xchg
js
or
pop
mov
jmp
dec
and
int3
mov
push
mov
das
nop
sub
sbb
rep
xchg
mov
mul
push
add
mov
or
and
xchg
(bad)
or
shl
adc
add
scas
jmp
ret
jmp
call
bound
jl
mov
out
sbb
adc
cmp
ss
rcr
xlat
dec
mov
inc
xchg
mov
xor
mov
fst
jmp
(bad)
test
jmp
mov
dec
(bad)
cmc
ret
jmp
sub
mov
pusha
pop
mov
lods
mov
cmps
inc
jmp
pop
leave
adc
or
mov
fcomip
scas
mov
push
call
test
pop
jp
add
mov
(bad)
sti
leave
loopne
jmp
ficomp
(bad)
repz
xchg
ret
dec
cmps
scas
sti
inc
mov
ins
inc
and
mov
imul
addr16
rol
adc
jb
mov
push
mov
pusha
(bad)
jmp
push
and
cs
mov
cmp
xchg
mov
push
pop
push
cmp
ins
out
sbb
add
hlt
repnz
aaa
jbe
add
xor
movs
adc
or
push
fsubp
mov
cs
dec
in
lock
test
fdivr
in
fdiv
jl
push
imul
push
adc
stos
test
out
or
sub
jne
mov
sbb
ret
mov
retf
cmc
cmp
icebp
ss
add
sar
(bad)
xchg
neg
mov
push
adc
cwde
js
xchg
add
sub
test
push
idiv
es
or
mov
cmp
test
daa
mov
je
and
retf
cmp
outs
or
add
pop
mov
cmp
iret
stc
jecxz
lea
aas
fucom
mov
fwait
jecxz
inc
loopne
inc
fnsave
cmc
xchg
pop
rol
int
mov
dec
sti
cmp
mov
scas
or
loopne
ja
add
(bad)
(bad)
addr16
pop
loope
and
js
adc
movs
jb
stos
das
sbb
jne
mov
cmps
adc
and
div
fwait
cmp
and
int
cmp
xor
mov
fsubr
js
sub
mov
or
lea
push
aaa
popf
push
fwait
jle
jg
dec
je
sub
ret
retf
hlt
adc
xchg
cdq
cmp
je
das
pop
test
mov
in
les
inc
repz
into
jnp
stos
mov
icebp
es
out
adc
sub
jmp
outs
sbb
mov
adc
sub
retf
or
cwde
jmp
aas
int3
mov
push
cmp
dec
(bad)
mov
push
call
mov
lods
es
je
ror
pop
clc
inc
js
mov
jmp
or
sub
adc
mov
mov
mov
fnstenv
cmps
(bad)
(bad)
fist
rcl
mov
nop
loop
(bad)
and
loop
cwde
test
stc
repnz
and
sbb
mov
lods
fcomp
out
vsqrtpd
scas
dec
jbe
jbe
rcl
inc
(bad)
xor
and
push
aas
jmp
dec
push
dec
xor
scas
mov
daa
lods
arpl
push
jo
mov
outs
push
or
sbb
dec
aam
scas
outs
jecxz
lahf
push
inc
les
mov
(bad)
ret
int
(bad)
mov
les
inc
xor
mov
aas
ja
icebp
mov
inc
test
jb
stos
xor
jmp
call
dec
jnp
add
dec
mov
jmp
xor
out
sub
pop
fxam
test
cmp
push
in
repnz
adc
add
sub
xchg
xor
jge
mov
fwait
push
std
test
mov
aaa
mov
pop
or
xchg
inc
pop
inc
and
(bad)
jge
pop
xor
fbld
jge
and
adc
sbb
pop
cdq
es
ins
dec
cli
sub
fnstsw
out
inc
pop
sub
cmp
cmp
loop
add
dec
ficomp
add
mov
push
add
rol
(bad)
pop
ror
aad
outs
stc
mov
cli
inc
cmp
xlat
sbb
jmp
test
mov
mov
and
cmp
retf
sub
sar
loop
data16
movs
mov
mov
aam
adc
add
sbb
in
sbb
adc
sti
in
ror
mov
dec
outs
ffree
retf
mov
scas
bound
and
xor
outs
or
iret
mov
inc
and
jbe
xchg
pop
loope
fsub
jbe
dec
pop
adc
dec
push
scas
shr
mov
and
stc
mov
mov
mov
sbb
loop
push
and
mov
cmps
push
lods
outs
push
(bad)
jno
aad
pushf
or
dec
add
sti
cld
in
sbb
xor
popa
pop
and
add
or
cli
shr
push
sbb
addr16
rol
add
scas
cs
mov
pop
jb
add
sbb
cld
icebp
adc
push
lods
loopne
mov
xchg
add
fsubr
in
retf
call
cmc
sti
fadd
cmp
cmp
sub
push
or
cmp
loop
inc
xor
je
test
adc
jle
add
xchg
add
lods
ja
out
and
jge
loopne
arpl
aam
jne
dec
sti
sbb
xchg
imul
scas
sbb
and
jecxz
and
jge
dec
mov
sbb
xor
inc
(bad)
neg
shl
xchg
fiadd
adc
xchg
jns
jb
adc
fs
fst
sbb
cmps
add
test
cmp
test
pop
shl
dec
(bad)
mov
dec
clc
test
jg
adc
das
xor
xor
out
gs
push
call
jmp
sub
or
ins
int
in
fstp
je
or
xor
and
and
mov
inc
xchg
cs
push
ins
imul
(bad)
nop
jno
je
stc
jecxz
push
(bad)
adc
mov
mov
(bad)
into
fist
adc
sbb
mov
or
dec
into
mov
push
jns
mov
xlat
(bad)
call
inc
and
xchg
add
xchg
movs
pop
shl
fs
sbb
jecxz
cs
xor
xchg
repnz
push
scas
cli
cpuid
int
aas
push
hlt
push
or
fstp
sub
cdq
dec
dec
sahf
mov
mov
pop
mov
call
ds
inc
js
hlt
inc
inc
xor
dec
mov
outs
retf
sahf
cwde
mov
sbb
sub
enter
stc
sub
(bad)
push
push
xor
jmp
ja
lods
outs
and
test
mov
pushf
fisub
xchg
shl
add
in
push
jp
cmps
leavew
pop
ja
jge
xor
fadd
les
jmp
retf
sub
enter
or
adc
dec
movs
lahf
sbb
test
js
mov
repz
and
jae
jmp
cmp
addr16
sbb
(bad)
push
fmul
jns
daa
loop
mov
xchg
call
loop
mov
or
js
je
add
push
push
lea
in
xchg
(bad)
sbb
adc
mov
sahf
xchg
loope
in
popa
je
inc
and
sti
mov
lock
pop
and
cmc
shl
sar
iret
mul
fsub
(bad)
into
adc
adc
(bad)
sbb
dec
hlt
cmps
dec
stos
stc
cmp
cmps
int3
cmc
push
lods
mov
leave
js
xor
das
pushf
cmp
xor
icebp
test
mov
retf
add
ror
sub
adc
fiadd
leave
lahf
mov
inc
retf
mov
push
xchg
cmps
push
imul
pop
movs
int3
jmp
sub
movs
mov
les
jg
test
xchg
jmp
daa
add
jnp
lahf
or
ret
sbb
add
neg
mov
jnp
inc
add
push
icebp
sbb
xchg
mov
int3
sbb
cmc
pop
xor
sar
add
mov
das
fistp
xor
mov
mov
scas
sahf
jb
inc
pop
jae
fisttp
add
cdq
int
lods
cld
ins
std
(bad)
cs
push
mov
cmp
loopne
popa
fdiv
push
add
(bad)
dec
scas
mov
bnd
nop
(bad)
mov
adc
inc
out
popf
neg
push
std
mov
movs
ja
ja
sahf
stos
and
pop
jecxz
test
adc
push
mov
rcl
push
sbb
fild
ins
mov
inc
and
cmp
sti
xchg
mov
dec
int3
dec
fs
lods
test
imul
dec
sbb
mov
inc
movs
add
fisubr
and
add
or
jo
mov
aam
lds
ret
sti
sbb
mov
sar
add
icebp
sub
(bad)
pusha
dec
jmp
mov
and
inc
cmp
cli
adc
mov
adc
sub
add
mov
outs
xor
fs
ret
into
out
push
xor
inc
fcom
nop
xlat
pop
sbb
outs
mov
ss
mov
push
enter
out
repnz
pop
mov
scas
adc
movs
inc
mov
jp
imul
adc
jmp
fmul
mov
call
adc
adc
cmp
mov
cmp
or
xchg
int3
int
mov
das
mov
dec
(bad)
push
sub
or
(bad)
xor
mov
aas
test
fcomp
inc
sub
xor
(bad)
aas
movs
cmps
cs
mov
cli
fisttp
adc
and
stos
pusha
enter
mov
aad
(bad)
clc
pop
add
div
sbb
xchg
jl
mov
imul
rcr
sbb
xchg
mov
mov
add
inc
clc
sar
cmc
fadd
add
push
sar
sti
pop
adc
int
stos
test
inc
test
xchg
push
or
movs
pop
popa
outs
mov
sbb
cmps
into
outs
sub
fimul
loopne
sbb
sbb
or
cmp
inc
sbb
cmps
cmp
aas
pop
cmp
mov
test
and
or
adc
test
mov
pop
mov
sbb
mov
retf
xor
sub
addr16
in
sbb
or
xchg
sub
loope
(bad)
stos
inc
imul
mov
in
sub
pop
xchg
and
fiadd
add
cmp
mov
loopne
inc
add
xlat
add
cmps
mov
inc
imul
clc
lahf
inc
inc
movs
popa
mov
dec
mov
xchg
xor
pusha
mov
pop
dec
and
sbb
or
pop
add
in
int3
sahf
daa
push
adc
mov
clc
(bad)
(bad)
jae
(bad)
movs
sub
push
add
pop
xchg
mov
cmp
mov
jmp
inc
gs
jb
inc
(bad)
pop
cmp
outs
jge
adc
push
jns
cmps
and
int3
mov
adc
or
or
pushf
stos
int3
repnz
enter
mov
test
daa
inc
mov
pusha
test
test
div
test
out
jmp
shr
pushf
icebp
sub
cmp
or
inc
dec
in
push
pop
dec
pop
into
inc
inc
push
xchg
mov
nop
cmps
pusha
cmps
mov
push
jle
push
mov
sub
xchg
pop
jae
mov
loope
neg
mov
imul
jge
dec
xor
xchg
fs
push
sahf
xchg
inc
fprem
imul
pop
mov
int3
dec
aaa
mov
jmp
xor
inc
and
ins
pushf
pusha
mov
jecxz
lock
mov
dec
call
hlt
cmc
faddp
cs
lahf
rol
fist
jecxz
jge
adc
out
add
stos
arpl
and
shl
cmp
mov
(bad)
imul
fldenv
adc
retf
ins
cmc
or
push
inc
mov
retf
sahf
adc
and
dec
ins
and
cmp
jmp
pop
and
pop
int
add
ret
fwait
xor
cmp
mov
shl
cmp
call
xchg
and
xchg
cld
dec
push
cmp
test
sub
lods
cmps
mov
mov
cmps
jns
rcl
mov
in
xchg
jmp
push
jl
iret
clc
push
enter
dec
cmp
call
and
retf
mov
push
push
or
cld
pusha
cwde
popa
sub
out
cmp
das
lods
ror
add
aam
jge
cmps
sar
jnp
inc
(bad)
sbb
sbb
push
lods
sub
mov
cli
sbb
mov
push
out
xchg
sub
and
mov
lahf
loopne
sahf
xor
in
stos
loop
jmp
sti
stos
sub
in
push
vpaddd
ins
sbb
push
loope
push
pop
ds
(bad)
sub
rcl
sub
xor
daa
push
cmp
xor
push
cmp
pusha
cwde
inc
cmps
adc
mov
pop
data16
xor
mov
pop
leave
xor
pop
xor
test
lds
mov
ds
adc
call
fld
imul
mov
jle
pop
or
push
mov
xchg
call
ffree
(bad)
(bad)
sub
loopne
shl
sub
xchg
sbb
xor
mov
mov
clc
aad
nop
(bad)
sub
push
ds
loopne
inc
ret
repnz
jb
in
cs
ds
or
sahf
cmp
int3
pop
dec
and
(bad)
mov
mov
pop
xor
loop
xchg
in
xchg
arpl
or
mov
mov
add
enter
jmp
sbb
push
pop
inc
outs
in
xor
jae
cmp
add
cmps
ret
add
arpl
fstp
fmul
or
es
stos
je
cmp
or
(bad)
and
sti
fdivrp
in
add
jle
daa
add
outs
in
mov
hlt
out
movs
call
imul
popf
push
jl
pop
popa
and
shufps
and
(bad)
add
(bad)
sar
fisttp
test
and
inc
arpl
loopne
cmps
(bad)
repnz
(bad)
into
(bad)
mov
pop
jbe
(bad)
sbb
xchg
push
pop
repnz
pusha
int
mov
mov
(bad)
jno
sahf
cli
dec
je
mov
movs
pop
imul
push
push
das
add
pushf
aam
mov
pop
xchg
mov
scas
daa
push
cdq
jno
fnsave
dec
lea
jbe
fwait
mov
xor
loope
(bad)
jo
and
mov
jle
sbb
dec
mov
sub
fwait
imul
mov
or
add
add
mov
test
popa
pop
imul
out
retf
repnz
mov
xor
pop
mov
sub
sbb
popf
mov
push
pop
push
push
in
sti
mov
loop
(bad)
or
xor
jns
(bad)
(bad)
fisub
dec
mov
enter
cld
gs
push
stos
iret
test
lods
scas
add
xor
adc
jg
sub
movs
jg
push
mov
aad
xor
jmp
xlat
(bad)
mov
sub
inc
mov
jb
add
into
ss
lock
cmp
inc
loopne
adc
inc
int
add
cwde
rcl
daa
adc
xlat
add
aas
les
mov
sti
jg
dec
into
sbb
loope
test
xor
lahf
sub
dec
inc
push
sub
inc
loop
je
imul
pusha
and
push
jae
aam
cmc
mov
(bad)
std
and
pop
add
in
and
sub
sahf
fmul
lods
xchg
jmp
ds
ins
lahf
nop
cmp
imul
xor
xchg
retf
jmp
into
stos
push
xchg
sub
pop
outs
repnz
lahf
fwait
sub
dec
and
imul
add
add
push
in
(bad)
in
outs
repz
inc
adc
cwde
clc
jp
jmp
push
pop
push
mov
ficomp
icebp
pop
dec
dec
std
jmp
or
xchg
sub
call
(bad)
pusha
mov
add
pop
sub
mov
push
retf
xchg
lahf
sub
add
push
mov
clc
ret
int3
add
adc
dec
sub
loop
jmp
push
sub
mov
mov
jo
inc
ss
push
dec
cmp
and
inc
xchg
xchg
clc
push
nop
mov
les
ins
std
cmps
neg
clc
add
add
call
cmp
fs
push
inc
sti
push
xchg
add
mov
mov
cmp
push
fs
or
push
adc
jp
dec
(bad)
mov
fadd
xchg
stos
loope
mov
and
xchg
stc
les
mov
sub
push
aas
test
push
add
(bad)
jecxz
in
repz
and
out
outs
test
lahf
(bad)
sahf
pop
or
test
rol
cmp
shl
iret
jno
scas
sub
cmp
rcl
inc
mov
adc
clc
jmp
adc
call
ds
push
ror
ficom
mov
mov
and
cmp
gs
xchg
int
add
out
out
inc
cmp
push
dec
retf
sahf
loopne
pusha
lods
push
std
enter
ficomp
(bad)
repnz
push
pop
cmps
adc
lods
sub
test
cmp
outs
and
das
aas
stos
push
or
and
mov
js
cli
fidiv
aas
mov
mov
inc
sbb
popa
(bad)
mov
loope
data16
lods
call
push
je
mov
hlt
sub
mov
inc
cmc
sub
out
add
into
inc
dec
pusha
inc
cwde
pop
pushf
jmp
sub
jo
cmc
test
es
sub
mov
std
jmp
clc
mov
in
rep
xor
aam
fcomp
out
dec
xchg
retf
mov
test
loop
shr
mov
pop
mov
push
gs
mov
js
sbb
mov
rcl
xor
pop
lods
jg
dec
fsubr
outs
jp
add
int
sub
in
adc
mov
std
aam
ss
mov
jmp
cmp
ror
push
jge
jbe
xor
test
sub
in
hlt
(bad)
das
aas
mov
(bad)
mov
push
and
enter
gs
sbb
loop
(bad)
jmp
lea
hlt
adc
enter
xor
imul
cli
test
jle
ror
je
inc
(bad)
pop
imul
fbld
push
into
clc
ficom
cdq
stos
mov
out
hlt
stos
jmp
sar
je
mov
pop
mov
or
cmp
sub
jle
fs
xor
jnp
bound
shl
pop
cs
lods
ds
jo
(bad)
lahf
mov
scas
mov
pop
dec
movs
sub
add
push
mov
cmp
imul
retf
shr
(bad)
in
jle
inc
fiadd
nop
pop
inc
scas
ins
or
outs
mov
test
bound
cmp
mov
cli
xor
jbe
pop
shl
imul
imul
ret
mov
push
bswap
mov
ficom
mov
mov
in
ja
stos
mov
repnz
mov
inc
mov
xchg
cld
loope
or
jmp
repnz
inc
pop
int
sub
es
(bad)
daa
mov
clc
cmps
or
and
pop
ins
mov
leave
icebp
inc
test
cmp
not
pusha
cmp
push
int3
aas
jecxz
add
jp
and
sbb
rcr
les
or
dec
fidiv
dec
inc
xchg
xor
mov
cmp
bsf
add
jae
pop
push
jge
outs
mov
jne
and
ja
push
hlt
shl
cmp
adc
xchg
nop
xor
jbe
jno
inc
out
sub
aas
mov
add
mov
pop
jb
jae
shl
xor
loop
jb
dec
lock
pop
test
pop
mov
mov
add
lahf
lds
ja
sbb
aas
sti
cli
sub
jp
cmp
xor
pop
pop
mov
push
pushf
enter
enter
mov
cmp
jp
jmp
std
jmp
mov
sub
aas
or
shl
std
pusha
xor
xor
pusha
inc
out
mov
pop
inc
jo
inc
and
in
scas
push
sub
dec
add
mov
(bad)
lock
mov
xchg
adc
jb
cdq
sbb
push
cmp
jno
(bad)
jge
and
rcl
jg
sub
in
add
dec
aas
cmp
(bad)
into
scas
(bad)
arpl
cwde
xor
xor
fcom
inc
das
(bad)
dec
enter
mov
push
movs
in
jg
aam
pop
push
ss
in
out
mov
loope
jne
ror
mov
or
dec
fist
jb
mov
mov
hlt
jno
out
(bad)
je
jge
sbb
inc
mov
or
add
pop
aam
sub
inc
dec
mov
jnp
loop
adc
movs
xchg
mov
pop
jns
fcom
push
pop
mov
lods
sbb
sahf
loopne
dec
pusha
cwde
jns
mov
push
stos
inc
jmp
push
add
xchg
loopne
stos
cli
add
in
pop
jns
stos
icebp
mov
mov
rcr
mov
inc
dec
sti
mov
mov
push
imul
jo
cli
mov
pusha
jp
push
lahf
fsub
lahf
sub
push
and
push
ror
dec
xchg
fnstsw
cmps
ja
shr
mov
aas
or
das
idiv
add
mov
repnz
js
loopne
sub
inc
fld
retf
outs
pop
push
es
rcl
push
xchg
jecxz
hlt
cli
lahf
and
push
fmul
imul
leave
and
xchg
xor
test
xchg
std
sbb
js
in
test
xchg
loopne
mov
int3
jecxz
repz
aad
inc
pop
mul
retf
sbb
in
cmp
inc
add
jbe
xor
(bad)
xor
push
xchg
pop
inc
cmp
mov
cli
imul
mov
lods
pushf
jo
push
xlat
jmp
jnp
lea
xor
cmps
pop
push
dec
push
mov
jne
fcomi
inc
leave
xchg
movs
pop
outs
das
and
dec
outs
out
fsqrt
and
xor
mov
add
xchg
outs
(bad)
(bad)
mov
clc
xchg
inc
cmp
retf
cs
jb
and
mov
inc
ret
add
inc
in
ja
inc
fmul
fidivr
or
ss
dec
add
cli
and
inc
mov
cmp
(bad)
sbb
dec
icebp
mov
(bad)
fdivr
(bad)
jo
jb
or
test
out
push
call
xchg
ret
mov
sbb
and
jecxz
add
push
push
jmp
bnd
mov
inc
push
cmps
xor
repz
cli
sbb
int3
or
mov
mov
sub
idiv
dec
mov
push
(bad)
push
repz
(bad)
loope
out
rcl
inc
dec
xchg
or
xor
inc
shr
dec
xchg
fidiv
mov
mov
or
fadd
neg
push
adc
repnz
pop
push
add
sti
jmp
out
arpl
xchg
iret
bnd
popa
jg
and
jnp
sub
test
fiadd
xor
test
dec
cmp
jns
cmp
lods
fwait
das
cwde
mov
stos
test
cmp
jg
inc
mov
push
jnp
and
in
movs
mov
aad
fsubr
xor
sub
inc
jle
stc
retf
aaa
sar
rcr
mov
icebp
sub
or
sar
jecxz
out
push
jbe
add
cmp
push
bnd
xlat
in
clc
sbb
inc
and
xor
cmp
ror
dec
(bad)
loopne
icebp
sbb
imul
(bad)
cmc
mov
ins
inc
jecxz
add
icebp
imul
and
dec
fwait
movs
ret
sub
retf
mov
add
xlat
int
sbb
fistp
xchg
sbb
std
adc
iret
or
inc
sti
leave
arpl
clc
adc
add
pushf
adc
jmp
push
or
rcl
inc
repnz
clc
xor
add
mov
sbb
call
nop
fnsave
pushf
ret
xor
hlt
xchg
sbb
cwde
in
leave
mov
mov
or
cmp
inc
sub
sub
fs
lahf
stos
pop
repnz
frstor
inc
push
popf
inc
hlt
add
ss
pop
lea
js
call
push
adc
sub
rcr
sub
(bad)
pop
or
mov
xlat
aad
(bad)
sub
stos
sub
jb
popa
inc
dec
hlt
mov
adc
iret
lods
lock
pop
xor
pop
call
mov
xor
inc
pop
mov
lea
xor
mov
and
cmp
les
outs
xor
shr
jnp
jmp
lods
fcomp
adc
lea
mov
cmp
lods
pop
mov
dec
inc
sub
in
mov
sbb
stc
xchg
repz
xor
mov
ficom
push
jmp
adc
aaa
test
enter
movs
stos
lea
ins
lds
inc
scas
ja
cmp
or
xchg
stos
pop
add
retf
fldenv
int
lea
inc
pop
lds
fldenv
lahf
movs
aaa
repnz
ss
imul
mov
aad
call
leave
xor
ret
inc
int3
retf
mov
xchg
sahf
mov
mov
ja
jbe
mov
mov
aam
push
test
outs
xor
fchs
push
in
ret
dec
or
data16
mov
gs
or
sub
lea
bound
jne
mov
movs
xor
push
push
(bad)
cld
psubb
pusha
or
(bad)
jp
loope
mov
int3
xchg
arpl
out
sahf
movs
adc
out
mov
arpl
or
mov
jle
call
xchg
dec
xor
movs
sub
(bad)
jp
pop
jp
shl
xor
repnz
inc
jbe
daa
hlt
clc
and
and
xor
jbe
leave
clc
mov
cmp
out
das
jge
add
pop
sbb
mov
arpl
lds
adc
ss
fild
add
sbb
(bad)
int
je
retf
xor
or
js
jns
sti
enter
(bad)
pop
(bad)
jo
jbe
nop
ss
imul
imul
or
jmp
ins
jl
mov
or
jb
fwait
pop
mov
sti
or
dec
xor
lods
cwde
mov
dec
test
(bad)
cmps
inc
push
xchg
mov
or
scas
xchg
outs
xor
sbb
cli
inc
idiv
int3
or
push
sub
and
jmp
jle
sti
dec
sbb
jb
sbb
sbb
xor
xchg
fs
fcomp
ins
int3
mov
iret
aad
dec
in
and
ret
inc
xchg
scas
push
inc
inc
cli
mov
movs
mov
xchg
adc
popa
add
mov
jmp
ret
sbb
loope
mov
pop
pop
scas
aam
or
cmp
jno
sahf
and
lock
jne
fwait
lods
dec
and
shl
sbb
adc
mov
popf
and
jge
mov
cmp
sbb
gs
mov
cmp
sub
shr
test
mov
xor
ins
push
pushf
std
inc
or
retf
jae
pop
jbe
mov
sbb
mov
fadd
sub
dec
stos
daa
mov
push
lahf
das
pop
cmps
cmp
es
fld
(bad)
lahf
dec
or
je
neg
imul
xor
cmp
mov
lods
mov
inc
sbb
hlt
adc
(bad)
pop
int
lahf
gs
mov
push
sbb
(bad)
call
add
cli
pop
add
outs
cli
xchg
xchg
in
mov
mov
std
sub
mov
fwait
jo
ins
pushf
cld
mov
shl
xchg
not
and
mov
xchg
sub
shr
sub
cmp
movs
mov
scas
jp
stos
retf
mov
lds
dec
shr
adc
xchg
or
das
jmp
sub
inc
bound
aaa
push
mov
inc
xor
cmp
add
and
ret
inc
sbb
sbb
and
lds
dec
rcr
inc
push
xchg
scas
mov
xlat
cmps
dec
add
ja
push
push
mov
fidiv
xlat
jnp
into
push
xor
sub
retf
sub
in
mov
dec
fcom
dec
js
mov
pushf
jns
inc
cli
push
cli
xchg
int
jg
pop
push
adc
js
or
inc
push
jne
xchg
popf
pop
inc
mov
js
bound
cld
aas
push
outs
sbb
(bad)
shl
in
push
in
add
retf
test
dec
push
push
add
out
pop
push
movs
andps
cdq
bound
mov
rcr
inc
shl
mov
sub
cmp
push
xchg
mov
xchg
into
ror
dec
fmul
mov
inc
sub
jns
and
sti
mov
and
xor
inc
pushf
jmp
push
(bad)
ret
sahf
frstor
adc
and
push
sbb
retf
pop
in
jle
lea
(bad)
xlat
imul
inc
pushf
push
pop
dec
jmp
lahf
in
jo
xlat
aas
aad
sbb
add
add
inc
mov
jno
push
nop
and
enter
cmc
push
adc
push
adc
push
dec
sub
enter
ins
adc
push
out
push
int3
sub
or
in
jmp
ins
iret
pusha
les
mov
(bad)
mov
imul
stos
mov
adc
(bad)
push
add
sub
cdq
adc
mov
xor
outs
shl
jle
add
push
mov
mov
push
mov
sub
add
(bad)
ud1
cs
pop
xchg
mov
jo
and
jmp
cmp
mov
nop
adc
inc
mov
rol
popf
cmp
sbb
loope
in
push
xor
sbb
jp
div
inc
retf
mov
mov
sbb
aas
sub
pop
lea
sub
cli
sbb
jnp
in
push
xor
jb
mov
dec
cmp
push
add
cmp
sub
cmp
in
push
jp
xchg
dec
sbb
cmp
fcmovu
pop
sbb
add
rol
dec
dec
mov
sar
popf
mov
out
(bad)
aam
pop
aas
pop
aad
repnz
sub
sbb
cmps
(bad)
push
mov
shl
test
mov
ins
cmp
jne
and
das
xor
xchg
movs
pop
sbb
push
or
imul
(bad)
cmp
mov
popa
inc
cli
into
pop
icebp
aad
and
mov
ins
jbe
out
sub
out
prefetch
lahf
mov
daa
fwait
xor
cs
adc
sub
inc
and
inc
out
add
fmul
cmp
push
or
dec
xor
les
fwait
inc
enter
xchg
addr16
xor
jb
repz
pop
push
sbb
loop
(bad)
imul
jmp
clc
jae
pop
mov
or
push
adc
add
out
ins
shr
xchg
daa
inc
or
cmp
movs
scas
xlat
push
addr16
adc
xor
rol
cmc
stos
sbb
cmp
push
mov
xchg
packuswb
out
adc
ss
jo
jns
enter
daa
dec
fbstp
or
xor
enter
stc
cmp
push
mov
je
adc
jbe
add
xchg
add
ins
stos
pop
cmp
rol
xchg
std
xor
pop
dec
xor
cmp
and
sbb
xchg
fbld
call
sbb
repnz
cmp
push
bound
mov
dec
hlt
mul
inc
add
movs
mov
mov
or
gs
paddsw
sti
and
jmp
aad
out
movs
mov
dec
cmc
jmp
adc
add
xchg
cmps
xchg
(bad)
fidiv
cwde
mov
jbe
push
adc
in
rcl
mov
mov
jne
popf
jns
(bad)
push
mov
fild
ror
pushf
jns
or
push
sbb
lods
inc
sahf
mov
cmps
inc
pop
call
fucomp
jo
jno
adc
mov
cwde
inc
push
sahf
pop
out
cmp
ins
fild
lea
loopne
test
repnz
loope
cmp
jns
nop
mov
pop
dec
arpl
mov
and
add
cmps
jmp
popa
gs
loop
in
or
adc
sub
push
xor
shl
add
stc
loop
mov
sbb
pop
or
js
sbb
push
das
add
xlat
cmp
add
(bad)
mov
jg
adc
and
test
xchg
lahf
mov
call
fstp
mov
sahf
jmp
stc
dec
ficom
arpl
xchg
cmc
mov
movs
hlt
push
mov
jp
arpl
imul
sub
sbb
add
adc
cmc
ret
jmp
das
or
adc
inc
lods
movs
rol
movs
add
pop
add
imul
dec
mov
cli
mov
cdq
fstp
fld
in
adc
sub
sbb
out
cwde
das
sar
add
pop
imul
pushf
pusha
push
sbb
fisttp
rol
into
xor
cmp
adc
loop
pop
adc
ret
jp
sub
cmp
ins
pushf
inc
dec
jno
xchg
cmp
js
push
fnstsw
and
je
jae
loopne
(bad)
fs
jecxz
pop
popa
mov
in
push
stos
idiv
jmp
pop
(bad)
pop
imul
and
pop
aaa
jl
mov
repz
jg
stos
movs
cwde
adc
cli
xor
cmps
push
sbb
adc
and
cwde
arpl
cmp
dec
push
fiadd
add
cmps
pop
push
div
dec
imul
ds
xor
loopne
xchg
mov
(bad)
call
sti
ret
adc
jno
jae
ficomp
lahf
and
pop
outs
dec
shl
dec
xchg
adc
xchg
sub
mov
in
push
mov
pop
push
std
and
inc
jae
xor
pop
movs
add
dec
div
fsubrp
adc
pop
jb
dec
and
sbb
pusha
pop
sub
pop
aaa
movs
sub
in
(bad)
test
imul
jmp
mov
je
sbb
pushf
jno
sub
pop
cli
pop
xchg
aaa
or
xchg
push
sbb
shrd
fstp
mov
neg
cmp
ins
repz
pop
pop
ucomiss
xchg
outs
sub
mov
and
inc
cmp
mov
mov
mov
dec
and
adc
call
mov
int3
xor
sbb
cdq
call
pop
or
pop
jecxz
push
xchg
(bad)
ja
and
sti
cmp
hlt
arpl
leave
inc
stos
ret
call
inc
push
lods
mov
dec
cs
cmc
add
pop
add
push
and
mov
cmp
arpl
lea
rcr
pop
sbb
out
mov
or
je
into
rol
sahf
aad
mov
mov
pop
test
in
adc
xor
add
test
mov
loop
mov
les
and
pop
stc
add
sub
(bad)
add
inc
jns
fistp
test
sub
imul
and
(bad)
sahf
jg
inc
sub
ret
cmp
loopne
(bad)
fst
jl
and
dec
aam
cdq
loop
cld
in
dec
rcr
pop
stc
xchg
sbb
dec
sub
add
clc
repz
jno
cmp
movs
inc
sub
and
jle
stos
ret
xchg
mov
rcr
hlt
add
ins
ins
sub
pop
mov
sub
or
shl
jno
mov
push
sbb
enter
repz
pop
mov
jmp
test
jmp
mov
add
add
mov
cmp
adc
ins
add
xor
enter
sub
pop
movs
add
sub
hlt
les
jb
imul
inc
aaa
and
fcmovu
arpl
call
das
imul
jae
iret
sti
aad
fbld
outs
lock
push
sub
sahf
ins
(bad)
(bad)
adc
leave
(bad)
mov
(bad)
cmp
sub
aaa
ret
fild
mov
inc
data16
shl
inc
adc
out
fdiv
ins
loop
adc
addr16
pop
popf
xchg
sbb
sub
scas
es
rol
aam
xchg
int
push
adc
fsubr
aad
pop
test
or
dec
shl
dec
sti
enter
adc
xchg
cli
(bad)
nop
in
and
(bad)
mov
push
outs
jo
sbb
and
dec
xchg
mov
nop
fadd
clc
pop
test
ss
in
lahf
call
rol
gs
push
movs
mov
jb
dec
leave
test
pusha
adc
jb
mov
cmp
shl
jb
mov
dec
aas
ret
cwde
xchg
inc
xor
lock
push
loopne
ds
int3
jmp
cwde
inc
out
mov
mov
gs
jp
xchg
mov
std
dec
sub
xor
hlt
enter
jecxz
jecxz
imul
pop
push
and
inc
jle
push
sar
sub
mov
mov
pop
gs
add
shr
cmp
add
dec
(bad)
nop
add
out
out
push
push
mov
xor
pop
inc
inc
push
adc
mov
push
arpl
pushf
jns
cmp
aad
imul
loope
fistp
test
jg
mov
retf
xchg
add
inc
jns
loop
cli
pop
jo
jne
dec
mov
test
add
in
push
stos
retf
push
aaa
push
int
sub
pop
fmul
dec
cmp
test
sbb
lahf
mov
jae
push
and
pop
je
jp
sti
pop
fwait
xchg
cmp
cmp
jmp
mov
stos
pop
daa
xchg
das
loope
and
bound
inc
enter
in
mov
push
xchg
inc
jns
adc
pop
loop
stc
test
cmp
hlt
adc
in
cmp
(bad)
js
jle
mov
std
ins
sub
push
and
mov
fstp
xor
dec
adc
mov
mov
sbb
loope
dec
mov
int3
xchg
imul
mov
scas
mov
(bad)
fist
pop
inc
sbb
inc
loopne
sbb
dec
dec
xor
xor
or
aam
add
sub
mov
inc
clc
xchg
jmp
int3
push
inc
repnz
cmp
or
mov
adc
dec
mov
cwde
outs
das
ins
pop
mov
jae
push
dec
add
xor
jecxz
int3
sti
dec
push
aaa
cdq
push
(bad)
inc
scas
or
xchg
adc
fidivr
repnz
adc
dec
(bad)
mov
rcr
les
and
dec
mov
mov
es
add
data16
out
retf
scas
pop
imul
cs
sbb
xchg
push
jmp
xchg
cli
mov
cdq
loopne
jge
loopne
mov
or
repnz
ror
fldenv
arpl
les
mov
xor
and
out
cwde
and
sbb
daa
xchg
mov
xchg
adc
xchg
aaa
test
fidivr
data16
cmc
pop
sbb
lods
gs
sbb
inc
jmp
push
mov
jnp
mov
inc
fisub
push
pushf
jb
lods
jno
xchg
mov
sti
pop
dec
in
cmp
mov
jbe
pusha
xor
and
push
cli
dec
ja
add
jae
mul
out
and
pop
repnz
dec
addr16
mov
sbb
jl
shr
(bad)
(bad)
mov
xchg
inc
mov
xchg
and
jbe
xchg
xor
pop
je
jge
xchg
cmp
sbb
ret
fs
mov
pmulhuw
into
in
xor
pop
inc
and
mov
add
push
hlt
sbb
mov
sub
loope
add
inc
fcomp
mov
ins
xchg
dec
inc
iret
rcr
in
mov
retf
push
pusha
(bad)
adc
fwait
dec
in
inc
aad
nop
sub
dec
repnz
enter
lock
jecxz
jno
aas
(bad)
mov
cdq
call
ror
mov
lock
sbb
imul
mov
jp
mov
cmp
mov
fld
cld
and
and
cdq
xor
sbb
or
pushf
loop
int
sub
push
retf
and
inc
mov
ja
mov
adc
add
push
mov
ja
scas
jl
and
mov
lods
call
mov
mov
mov
or
push
out
sbb
(bad)
jmp
(bad)
out
sbb
scas
ret
pop
and
hlt
sahf
loope
mov
xchg
dec
jae
or
xchg
retf
adc
or
jle
test
jg
cmp
mov
inc
scas
mov
jb
pop
(bad)
pop
ror
dec
push
out
dec
clc
and
push
shr
mov
lods
cmp
aaa
outs
fmul
push
sub
gs
dec
adc
jbe
lds
movs
mov
in
inc
ret
call
(bad)
in
inc
loope
sub
imul
add
ror
adc
xor
xor
mov
or
gs
fbstp
inc
jno
(bad)
adc
dec
dec
adc
pop
mov
js
int3
xor
pop
loopne
inc
xchg
call
mov
inc
inc
or
dec
pusha
push
sahf
xlat
mov
popf
xchg
(bad)
scas
stc
outs
stos
icebp
not
test
idiv
fcomp
cmp
test
push
mov
loopne
or
inc
push
cwde
sbb
mov
xor
gs
sbb
sub
cmp
bound
(bad)
retf
fstp
xchg
sub
xchg
fwait
cwde
push
daa
fild
scas
pushf
jb
cmp
lds
pushf
xchg
retf
mov
inc
push
fimul
sbb
or
dec
cmp
mov
lock
push
xchg
daa
cwde
inc
push
jbe
pop
sbb
stos
inc
inc
sub
jno
jg
shr
test
fist
sub
xor
fs
fst
mov
xchg
mov
or
adc
cmc
jg
call
add
add
loopne
jecxz
dec
add
mov
dec
or
xor
push
and
in
in
pop
call
and
inc
mov
jns
loope
dec
xchg
aas
push
pusha
popa
scas
jmp
xchg
outs
dec
test
out
xchg
(bad)
push
add
or
fstp
mov
mov
(bad)
mov
mov
sti
dec
(bad)
mov
ficom
or
dec
and
les
adc
retf
rcl
outs
aas
push
mov
mov
aas
add
xor
mov
(bad)
sbb
cmp
pop
call
pop
mov
or
xor
mov
mov
leave
(bad)
pushf
xor
(bad)
das
inc
or
and
popa
jo
push
jle
loop
stos
inc
inc
scas
sub
icebp
push
loopne
dec
outs
jns
out
jg
add
sbb
cmp
mov
jb
mov
jne
pushf
adc
add
jne
jmp
add
mov
jnp
cli
cmp
pop
enter
stos
cmp
xlat
cmp
jo
sti
xor
ja
ret
iret
xor
pop
(bad)
fidivr
and
lea
and
cmp
inc
test
js
mov
scas
sub
xor
gs
pop
sub
or
aaa
jp
daa
xlat
mov
scas
int3
push
jbe
je
daa
add
adc
mov
scas
sub
dec
int3
add
fxtract
and
clc
into
jbe
mov
mov
inc
jecxz
xor
inc
rcr
cmp
stos
or
out
cmp
std
fwait
and
test
in
pop
pop
xchg
adc
rcl
push
lock
add
es
pop
mov
pop
dec
jg
or
or
xchg
xchg
mov
add
ja
das
xor
sub
gs
sub
sbb
inc
xchg
ds
add
push
inc
or
outs
or
sub
sbb
shr
pop
stos
ins
(bad)
repz
outs
lods
mov
mov
ret
xor
cdq
fcmovu
and
pop
(bad)
scas
sbb
dec
in
inc
push
loopne
mov
or
xchg
jae
mov
lock
into
outs
mov
jge
dec
mov
xchg
stos
in
and
(bad)
sbb
dec
sub
xchg
arpl
cmp
sub
cmp
jnp
test
xor
shl
adc
into
or
aam
sbb
sub
fdiv
(bad)
mov
jnp
ret
push
gs
dec
xor
cwde
push
xchg
cmp
daa
pop
add
retf
push
repz
add
xchg
sti
or
jmp
sub
fisubr
mov
add
jo
xor
imul
pop
sub
test
jb
inc
dec
shl
push
jl
cmps
cmps
add
fstp
fsubr
movs
lods
xor
adc
mov
dec
cmp
loope
mov
ins
push
loope
push
jle
out
sbb
mov
movs
lods
ds
mov
xchg
das
and
outs
iret
inc
jmp
sub
mov
cmp
mov
jno
mov
jne
jecxz
cmps
scas
clc
stos
ins
sub
ins
pop
jb
pusha
cli
imul
push
jmp
jmp
out
fs
cmp
xchg
retf
jp
dec
mov
das
fs
push
xchg
or
(bad)
sub
outs
test
ror
in
cli
pop
add
ins
lods
or
jmp
xlat
mov
(bad)
xchg
mov
dec
sub
mov
and
es
test
pop
sar
test
push
stc
ins
sub
out
rdpmc
fidivr
cmps
fisub
xor
sub
sub
in
fsubr
call
rcl
jne
cmps
push
aas
mov
dec
push
mov
jmp
test
and
mov
push
in
test
jb
into
jmp
mov
xor
cs
(bad)
retf
jge
out
ds
aaa
das
cmps
(bad)
sub
sub
dec
cmps
shr
mov
push
jns
retf
xchg
push
xlat
xchg
jns
sbb
adc
pushf
dec
dec
popf
inc
add
and
jp
fmul
cmps
xchg
adc
nop
and
lea
cmp
jle
lahf
sti
lods
cmp
sti
addr16
scas
xor
mov
leave
push
push
imul
push
jb
mov
leave
fld
sub
lods
sub
popf
rcl
div
cmps
add
aaa
nop
sub
add
add
jnp
in
data16
jecxz
sbb
dec
dec
pusha
cmp
cdq
cld
mul
dec
stos
inc
(bad)
jmp
cmc
xor
int3
dec
inc
(bad)
icebp
test
jmp
push
pop
jmp
lds
mov
cdq
push
lahf
fimul
call
xchg
ds
out
out
popf
cs
lods
mov
inc
add
add
sub
xchg
sub
jo
mov
jg
xor
dec
inc
fs
lahf
fisub
mov
out
mov
cmp
ins
mov
mov
inc
xchg
hlt
popf
ins
xor
std
sub
outs
inc
inc
stos
mov
fimul
stc
fbld
js
jle
dec
sbb
cs
sbb
or
xor
dec
sbb
std
(bad)
fnsave
sub
ins
add
inc
ss
push
inc
mov
popf
cdq
xor
mov
sub
lods
and
pop
fstp
mov
ret
fild
sbb
mov
xchg
mov
xchg
aad
adc
xchg
sbb
shr
xor
repz
sbb
outs
xchg
dec
mov
les
stos
stc
push
pop
btr
pop
dec
ret
sbb
push
pop
inc
hlt
in
xor
rol
aad
xchg
push
xchg
or
or
fwait
mov
mov
push
mov
das
call
mov
arpl
adc
pop
ror
dec
idiv
xchg
xor
sub
push
dec
xor
dec
add
idiv
jne
push
jns
(bad)
mov
and
jg
pop
into
ins
nop
repz
fs
call
or
dec
adc
jle
cwde
jl
jb
outs
or
adc
cld
scas
mov
repnz
sub
push
ret
mov
loop
xchg
enter
test
ss
repz
(bad)
stc
lds
popf
xchg
cwde
cmp
jb
and
hlt
xchg
push
inc
ss
inc
inc
mov
dec
and
js
dec
push
outs
hlt
loop
aas
movs
sub
mov
cs
cld
test
and
cmps
pop
adc
les
jle
les
xor
cmp
jmp
shl
jns
lods
mov
int
mov
aad
int
ss
cmp
mov
pushf
mov
ins
test
xchg
cmp
es
add
pop
push
sub
int
and
bound
repz
inc
inc
int
test
in
jmp
inc
(bad)
sbb
movs
pop
rcr
mov
jmp
shl
lods
std
mov
daa
mov
imul
push
or
xchg
mov
jne
sub
pop
inc
jbe
loope
dec
aad
jno
pop
xor
ror
or
inc
aaa
aam
dec
enter
nop
adc
lds
xchg
in
icebp
xchg
stos
adc
sar
adc
imul
mov
call
cmp
xchg
pop
cmp
arpl
sti
popf
cdq
call
xor
jge
push
and
mov
scas
add
sti
aad
cmp
pop
cmp
call
cmp
mov
cs
lock
or
fistp
inc
mov
pop
hlt
mov
inc
sbb
and
(bad)
(bad)
idiv
cmp
sub
or
add
ret
cli
inc
push
cmp
pusha
sub
mov
repnz
and
test
rol
inc
mov
dec
aaa
pop
mov
retf
pusha
(bad)
cmc
(bad)
pusha
inc
aam
scas
repnz
jecxz
mov
mov
aaa
add
dec
stos
retf
fisub
mov
stc
xchg
scas
push
mov
or
loope
int3
xchg
push
and
aaa
and
sub
test
retf
mov
jb
(bad)
les
jo
rcl
jmp
(bad)
ins
cmps
pop
inc
jno
xor
lea
adc
loope
adc
sti
mov
pop
xchg
fwait
pop
mov
clc
sbb
sub
dec
xchg
(bad)
outs
jo
scas
inc
inc
enter
cmp
imul
(bad)
and
cwde
mov
jp
jl
test
gs
cwde
pushf
jp
shl
fwait
out
cmp
scas
mov
cs
les
mov
out
inc
xchg
lds
add
sub
test
je
xchg
dec
stos
mov
mov
pop
sub
cmp
(bad)
push
mov
jl
adc
int
cld
mov
xchg
fadd
cwde
in
push
inc
push
imul
mov
dec
(bad)
sbb
mov
mov
fcomp
popf
mov
xchg
add
popf
cmp
adc
dec
imul
mov
mov
adc
adc
popa
iret
cmps
loop
mov
cli
sahf
shr
pushf
test
ins
inc
mov
inc
mov
fsub
dec
addr16
pop
fiadd
(bad)
repnz
les
push
jecxz
test
lods
in
jnp
js
mov
mov
ja
or
xor
jmp
fdivr
mov
sub
cmc
xchg
mov
nop
mov
jne
jns
push
pushf
nop
or
cmp
jge
pop
sbb
jne
cmp
add
lea
lea
jbe
push
ins
sub
daa
push
pop
inc
push
loopne
fstp
lock
xchg
cmp
ret
jle
mov
sub
fstp
ss
dec
test
pop
adc
ins
(bad)
mov
aam
pusha
jl
sbb
idiv
pusha
sahf
call
sbb
fs
cwde
dec
outs
rep
pop
(bad)
les
dec
hlt
in
adc
test
and
scas
xchg
ins
loop
repz
mov
push
or
repnz
lock
and
shl
lahf
in
in
mov
xchg
out
push
xor
out
repnz
sub
pop
cmp
adc
cmp
jnp
ret
adc
sub
arpl
mov
dec
lds
inc
add
fdiv
sahf
xchg
push
(bad)
dec
repnz
inc
cmp
lds
daa
ror
dec
dec
icebp
stos
ss
lods
aam
jns
jb
inc
movs
test
sbb
dec
lea
mov
ins
jno
aas
pop
xchg
jo
dec
dec
pop
cmp
out
daa
sbb
ins
inc
xchg
mov
lds
fld
dec
mov
cmp
adc
jb
popf
push
xchg
jne
out
rcl
in
into
push
cmp
or
mov
in
cwde
ds
not
ret
push
outs
cmp
jmp
mov
std
cmc
je
dec
pop
fwait
lds
and
cdq
outs
adc
sub
inc
ret
mov
pop
and
push
push
imul
aaa
adc
loope
jnp
(bad)
nop
adc
loope
in
jecxz
pop
adc
xchg
adc
daa
or
cmp
push
push
sbb
xchg
pop
in
cmps
(bad)
shl
or
(bad)
movs
bound
pop
inc
mov
add
lods
leave
sbb
mov
in
pop
dec
sti
adc
outs
jo
push
das
clc
fsub
push
push
sub
loope
inc
in
xor
das
in
into
es
cmp
mov
leave
dec
mov
mov
xor
inc
mov
movs
lods
enter
dec
push
nop
jne
sub
sar
push
popf
xchg
inc
sub
inc
movs
retf
pop
cmp
leave
cmps
xlat
les
mov
mov
dec
ds
adc
adc
loopne
push
call
xor
xlat
call
adc
aad
pop
popa
ror
xchg
xor
pop
or
rol
inc
test
pop
pop
scas
sbb
sub
sub
leave
jg
pop
pop
mov
jmp
mov
push
pop
fist
jno
cwde
mov
popa
jecxz
repz
sbb
pop
ror
mov
stos
(bad)
pushf
out
or
vunpckhps
fwait
add
aas
gs
(bad)
in
mov
mov
adc
mov
xlat
aaa
sub
mov
movs
sbb
and
mov
cmps
out
push
jecxz
aad
mov
jp
fnstenv
jns
ja
aas
xchg
in
nop
pushf
inc
add
lods
xor
loope
pop
in
dec
cmc
push
cmp
inc
xchg
les
lods
and
popa
mov
dec
sub
iret
fsubr
sub
push
enter
inc
pop
sub
jg
and
addr16
or
fistp
imul
mov
jp
dec
loopne
loop
(bad)
out
mov
scas
popf
out
test
test
jmp
stc
xor
mov
jle
cmc
fdecstp
add
mov
or
addr16
and
jmp
jp
scas
inc
pop
xchg
cmp
stos
adc
jp
mov
ds
mov
cmp
dec
in
dec
hlt
dec
push
push
ins
xchg
repz
in
adc
repnz
loope
dec
out
push
imul
or
icebp
jmp
mov
ss
mov
add
sti
cs
(bad)
lock
cmps
ins
inc
shr
adc
cld
cmp
jne
shl
adc
test
psrlw
adc
psubb
cli
out
mov
call
push
lods
and
cmps
cmps
pop
inc
pop
and
push
repnz
mov
stos
cdq
adc
dec
mov
xchg
dec
xor
cmp
push
sub
jae
clc
mov
xchg
pop
gs
cmp
scas
push
retf
dec
sub
xchg
mov
adc
jg
add
pop
pop
or
in
into
mov
pop
mov
mov
dec
push
loop
int3
popa
add
jnp
aaa
test
pop
and
(bad)
out
rcl
inc
adc
dec
inc
cs
lods
or
push
inc
fild
pop
add
shl
jae
int3
fild
add
cli
idiv
(bad)
jmp
add
pop
sbb
stos
push
sub
xor
retf
xchg
mov
push
jno
in
lea
mov
loope
push
call
mov
push
out
arpl
(bad)
in
mov
xchg
(bad)
js
jl
mov
adc
aas
out
inc
xchg
sub
pusha
(bad)
pop
adc
retf
loopne
retf
sar
(bad)
or
dec
inc
test
daa
jns
js
add
or
mov
fidiv
adc
aad
and
cli
mov
or
movs
mov
sub
loope
mov
fld
mov
popf
pop
mov
hlt
mov
adc
(bad)
mov
mov
aaa
cmp
imul
repnz
pop
cli
add
cmp
mov
mov
push
adc
cmps
(bad)
movs
push
jmp
das
sub
ss
pop
sahf
mov
mov
test
mov
jbe
in
rcr
call
mov
mov
mov
dec
jnp
pop
fnstenv
cdq
hlt
hlt
push
out
es
nop
mov
test
xchg
out
dec
pop
jo
pop
cmps
dec
add
pop
in
cmp
in
repz
jne
icebp
and
fs
(bad)
sbb
jmp
push
adc
xor
xor
sbb
cmp
pop
mov
dec
cdq
add
fcmove
and
add
cmp
pop
in
pusha
pop
jmp
and
mov
xchg
(bad)
das
arpl
xchg
sub
fist
mov
cld
imul
adc
xchg
in
sbb
sbb
jecxz
loopne
mov
inc
imul
inc
mov
jae
std
add
xor
adc
inc
or
cmp
fs
out
or
shr
iret
push
mov
ins
mov
test
lds
xor
mov
pop
sbb
mov
into
push
sub
retf
sbb
aad
cli
dec
into
(bad)
push
std
sub
addr16
loope
dec
outs
and
inc
add
jecxz
data16
jmp
xchg
fdivrp
pop
cmp
test
mov
cmp
pop
and
mov
fnstcw
(bad)
out
mov
fs
les
popf
inc
push
out
or
scas
fisttp
adc
sub
add
dec
push
gs
mov
gs
retf
and
jle
ins
je
jl
mov
sbb
mov
xchg
stc
call
sub
inc
sahf
outs
lea
add
xor
inc
out
sbb
out
pop
mov
mov
pop
cmp
lods
shr
popf
add
ins
mov
ror
inc
or
imul
dec
and
cmp
sbb
data16
adc
call
clc
pop
sub
ins
fild
xchg
fild
cmps
inc
push
inc
sub
cmc
push
sub
add
pop
pop
adc
jl
adc
sbb
sbb
pop
mov
in
imul
push
xor
sub
adc
pop
les
mov
ret
test
add
out
pop
push
mov
(bad)
arpl
adc
inc
jae
jns
xor
cld
xchg
fld
dec
mov
test
test
xchg
(bad)
inc
repnz
dec
shl
call
or
jbe
clc
push
pop
push
or
or
test
or
mov
jp
xor
js
dec
call
ins
or
aam
pushf
loopne
es
xchg
je
cdq
ja
repnz
sub
mov
daa
sar
pop
sub
xor
scas
pop
out
sbb
jae
mov
xor
mov
call
xor
pmuludq
inc
cli
rcr
mov
fs
cmps
sbb
cmp
mov
in
shr
aad
mov
mov
cmp
or
pushf
jp
ret
mov
add
stos
ret
mov
add
inc
cmps
mov
shr
push
imul
mul
push
pop
push
cmps
cmp
and
test
ins
iret
lock
mov
pusha
and
mov
imul
adc
jne
(bad)
hlt
mov
inc
push
mov
stos
mov
in
pop
push
pop
push
xor
cmc
jmp
sub
rol
mov
loop
call
in
cli
pop
sbb
loopne
icebp
addr16
sub
mov
fnstenv
xor
stos
push
dec
wbinvd
imul
in
or
xchg
mov
aas
fdiv
push
fsubr
fs
dec
xchg
sar
out
dec
pop
mov
imul
cdq
mov
sbb
leave
int
or
imul
jg
adc
xchg
push
out
hlt
mov
inc
dec
cmp
mov
xchg
inc
adc
dec
add
jnp
adc
add
and
lods
fdivr
retf
rcr
movs
add
push
jb
scas
add
test
idiv
push
(bad)
cld
pop
(bad)
aas
mov
cmps
pusha
fwait
movs
mov
in
or
cmp
and
lods
push
mov
pop
sbb
arpl
scas
retf
add
mov
dec
(bad)
rol
or
ret
scas
pop
pop
jp
call
imul
jg
mov
jmp
add
pop
repnz
push
retf
or
xchg
sar
pop
fs
adc
and
lahf
test
lds
data16
lods
rcr
ret
sbb
xchg
sbb
test
out
imul
pop
pusha
add
test
jo
add
sbb
icebp
mov
cmp
mov
jae
scas
xchg
xor
std
add
sub
cs
mov
and
or
icebp
mov
or
fwait
push
ja
mov
fwait
push
shl
call
cwde
mov
dec
cmp
or
jbe
dec
(bad)
dec
mov
in
aam
lods
int3
add
lods
je
mov
xor
addr16
push
call
push
jle
imul
out
mov
cmp
push
gs
cwde
(bad)
xchg
test
sbb
mov
cs
xchg
iret
mov
cli
frstor
(bad)
dec
outs
pop
cmps
stos
sub
cmc
or
int
pop
retf
lock
mov
pop
fldcw
fcom
ror
test
mov
outs
add
dec
or
test
inc
cs
mov
scas
aam
call
inc
adc
dec
arpl
add
ret
pop
cmp
jg
mov
pop
mov
mov
fcmovbe
gs
imul
dec
pushf
jae
arpl
cmp
push
mov
push
cmp
lock
test
icebp
push
mov
push
fmul
mov
in
inc
das
cmp
dec
ja
cwde
xchg
les
cmps
add
adc
mov
js
inc
mov
and
adc
add
sub
and
mov
inc
aaa
inc
push
js
fcom
sti
sbb
push
loope
movs
sub
push
mov
(bad)
mov
jae
retf
call
cmp
lahf
mov
xor
sub
outs
mov
inc
push
test
hlt
push
aad
mov
or
fist
mov
in
test
scas
(bad)
cmp
movs
test
rcr
mov
mov
cmp
jns
cmc
mov
and
rol
cmc
imul
pop
inc
(bad)
movs
sahf
repnz
imul
jno
gs
in
inc
xchg
or
xchg
mov
addr16
mov
movs
jg
cld
mov
add
adc
push
cmps
cmp
xchg
ins
cmp
retf
xor
mov
imul
gs
dec
and
(bad)
test
sub
dec
out
push
imul
jne
enter
inc
int3
adc
fwait
adc
addr16
push
rep
mov
popf
pop
mov
scas
sahf
outs
xchg
test
or
push
xor
pop
clc
pop
xchg
or
jnp
add
inc
(bad)
sub
mov
(bad)
loope
fistp
xor
mov
cmp
pop
mov
sub
pushf
into
add
imul
rcr
or
enter
push
jge
jo
test
mov
shl
imul
jmp
retf
sti
push
push
cmp
mov
adc
je
mov
jmp
in
arpl
jns
movs
(bad)
lea
xor
pop
mov
push
or
pop
lock
jge
ins
sub
ins
outs
lock
add
in
pop
push
outs
nop
into
call
retf
lods
les
iret
xchg
aam
retf
xor
dec
cli
sbb
stos
inc
movs
mov
mov
mov
mov
js
fwait
adc
(bad)
adc
cdq
sub
loope
jle
jns
dec
mov
inc
shl
in
or
clc
sub
cli
inc
out
sti
mov
into
or
loop
mov
ss
xlat
xchg
pop
inc
loop
jge
cmps
fdivrp
mov
inc
jae
test
pop
sahf
pop
scas
aas
aam
xchg
retf
sub
sub
or
pop
leave
loopne
das
jnp
adc
inc
into
sbb
mov
adc
sbb
mov
call
mov
arpl
push
addr16
enter
jae
test
xchg
lea
cmp
es
jmp
add
pop
sub
fs
adc
push
push
mov
cmp
nop
cs
fisub
push
out
loopne
xchg
fidivr
fsub
outs
xchg
mov
leave
cli
mov
pop
repnz
cli
mov
pop
jmp
data16
ror
arpl
out
dec
adc
lock
jnp
xchg
ja
inc
in
inc
pop
push
jnp
enter
cli
xor
jge
jnp
pop
stos
ror
outs
cmp
lock
sub
arpl
stos
jl
jmp
adc
sub
mov
mov
es
xor
lahf
inc
push
test
into
out
mov
sub
out
mov
fist
xchg
or
sbb
add
lds
pop
cmps
push
cwde
aam
popf
adc
fs
retf
sub
or
xor
and
jbe
jmp
ret
hlt
stos
mov
mov
inc
stos
ds
or
inc
inc
scas
das
jmp
rol
imul
inc
sub
jmp
push
jmp
inc
inc
add
imul
pop
mov
mov
mov
mov
dec
stc
clc
imul
clc
cmp
push
jp
stc
shl
cld
and
pop
call
jnp
imul
sbb
daa
adc
sbb
out
loopne
leave
jle
sets
lods
mov
lock
shl
hlt
call
fadd
lds
imul
lods
inc
cmp
jmp
xchg
sar
repnz
push
mov
mov
dec
loope
and
xchg
push
pushf
dec
mov
lds
mov
ret
and
dec
movs
add
or
mov
(bad)
pop
mov
jl
jle
iret
push
xor
inc
jle
add
dec
dec
out
jo
dec
loopne
popa
cs
out
cmp
imul
mov
outs
jmp
push
mov
pop
dec
push
out
dec
inc
sub
mov
mov
dec
mov
or
sbb
es
fst
sub
outs
push
adc
dec
push
and
sbb
adc
push
sahf
ins
dec
pop
loope
lock
pop
aam
push
pop
xor
xchg
je
daa
and
sub
sub
pop
nop
adc
inc
js
jne
sti
(bad)
hlt
leave
sbb
(bad)
jp
push
and
dec
or
xchg
jle
popf
xchg
and
ja
cmp
adc
test
inc
mov
iret
mov
nop
sub
test
enter
sbb
cli
les
stos
pop
sub
mov
cmc
mov
xlat
daa
jb
lds
xchg
out
mov
(bad)
daa
mov
and
push
jmp
test
addr16
stos
and
jne
fs
stos
push
push
int
and
add
sbb
or
mov
adc
push
aaa
or
into
cmp
push
je
adc
ja
mov
pop
movs
popf
push
sbb
psubq
(bad)
sbb
add
jmp
add
push
xchg
xchg
sub
pop
dec
loope
xor
ins
xchg
push
xor
addr16
add
xlat
(bad)
sub
push
fimul
(bad)
mov
cmps
stos
mov
mov
test
les
adc
dec
push
pop
cmp
cmc
ins
ret
clc
fwait
in
mov
inc
ret
sub
or
dec
mov
push
ins
gs
sar
cmp
sahf
xlat
clc
std
mov
mov
mov
ret
inc
es
cwde
sbb
push
and
mov
or
cmp
pop
mov
repnz
xchg
retf
mov
jl
popf
and
fdiv
ret
pop
and
xchg
call
inc
outs
push
cld
les
in
inc
or
pushf
enter
pop
mov
xlat
outs
imul
push
mov
add
and
and
add
addr16
mov
pop
jp
(bad)
push
mov
(bad)
push
adc
outs
pop
jle
imul
xor
adc
fsub
std
sahf
or
sar
cmp
pop
jb
dec
out
repz
push
idiv
xchg
pop
cmp
sbb
rol
or
add
sbb
inc
inc
pop
push
mov
or
mov
xchg
call
fcom
push
(bad)
js
xor
or
movs
inc
jo
iret
std
mov
xlat
dec
add
retf
ret
in
inc
stc
or
in
out
loope
pop
repz
mov
ja
movs
mov
push
mov
test
pop
ficom
xor
loope
cmp
xor
add
xchg
sti
and
sub
imul
push
push
out
push
call
in
clc
shl
cs
pop
call
leave
xor
mov
xchg
mov
or
ins
or
nop
cmp
xchg
cs
xchg
gs
mov
mov
xor
and
mov
mov
movs
aaa
nop
sar
jmp
add
arpl
fwait
pop
xor
in
xchg
mov
push
push
pop
loop
rcl
adc
and
cdq
nop
(bad)
xchg
jmp
jns
call
mov
xor
aaa
idiv
adc
mov
cmps
push
iret
pop
mov
in
push
jg
fdivr
cmps
call
popf
mov
push
mov
imul
loopne
arpl
jb
loope
pop
aas
outs
repnz
lahf
jge
int3
out
sbb
(bad)
sbb
dec
mov
fsubr
inc
(bad)
sar
lahf
xchg
add
xchg
lods
mov
icebp
les
outs
adc
fisubr
push
retf
mov
(bad)
dec
out
mov
xor
xchg
mov
or
push
dec
or
push
es
std
jmp
fcom
push
sbb
imul
clc
push
pop
jl
mov
ja
jecxz
sbb
mov
sub
mov
mov
shl
push
add
jmp
push
js
add
stos
imul
cld
fldcw
scas
in
xlat
and
aaa
out
pop
(bad)
cli
fsub
jne
sub
shr
push
leave
cmp
test
xchg
pushf
inc
sub
test
xor
dec
imul
mov
jns
cmp
pop
in
gs
shl
dec
pop
rol
cdq
mov
pop
xchg
pop
mov
dec
lahf
sbb
fs
pop
(bad)
(bad)
in
push
gs
jnp
lods
push
lahf
lods
ficom
adc
popf
lea
add
inc
shl
pop
fwait
jmp
mov
jp
and
inc
nop
test
fs
pusha
cli
xchg
in
les
mov
daa
xchg
adc
(bad)
shr
div
add
es
xor
lea
shr
xchg
cmps
xor
mov
pop
gs
xchg
jl
and
jnp
pop
imul
fnsave
mov
mov
push
inc
icebp
jns
ja
movs
mov
int
cwde
push
push
add
lods
inc
fs
jb
lds
mov
dec
inc
xchg
mov
lea
test
xchg
mov
nop
(bad)
pop
sub
pop
and
jbe
sub
fsqrt
mov
cld
push
mov
xor
jg
aad
popf
add
jns
ss
mov
int
inc
pushf
stos
mov
enter
pop
arpl
sub
aam
pushf
or
lods
jne
xchg
mov
dec
pop
push
and
push
in
add
xor
or
rcl
inc
fnstenv
cs
imul
or
repz
lock
in
mov
mov
rdtsc
jb
cmp
je
jnp
mov
out
add
cmp
sar
jns
mov
add
mov
call
out
nop
push
aad
and
aaa
lds
retf
leave
repz
fs
inc
xchg
out
cmps
stc
mov
xchg
sbb
jne
mov
leave
cdq
sbb
movs
jmp
sti
push
sub
sbb
jp
repnz
lods
or
pop
sar
pop
dec
jle
dec
cmc
inc
arpl
cs
and
and
pop
pop
ds
lods
imul
cmp
inc
popf
mov
and
popf
mov
arpl
add
xchg
fisttp
and
in
push
stos
clc
cmp
dec
push
ss
push
sahf
mov
out
xor
or
inc
out
sbb
fnstenv
jl
cli
ss
push
(bad)
cld
mov
sub
push
cmp
xchg
sbb
inc
push
aam
iret
jecxz
and
sub
shl
lahf
addr16
pop
or
jecxz
in
push
mov
fcomp
aam
push
jg
mov
mov
jns
mov
cmp
jne
push
outs
jmp
(bad)
sti
sub
mov
cmp
(bad)
pop
cli
mov
and
mov
mov
fistp
sub
dec
mov
mov
mov
dec
aas
push
imul
push
xor
jg
sti
inc
div
call
ins
sub
test
sbb
ltr
pop
cld
mov
fild
push
cli
lea
aaa
test
loop
xor
jbe
js
xchg
push
add
xor
push
ror
imul
push
jmp
pop
stc
lods
or
(bad)
call
jbe
mov
fdivrp
xchg
mov
scas
popf
add
add
mov
rol
push
adc
std
jecxz
mov
push
push
cs
pop
push
cmp
mov
call
retf
jae
mov
jne
mov
sar
js
popf
out
lea
call
adc
int
xchg
(bad)
adc
test
je
xor
outs
dec
dec
cmp
push
jo
call
lods
cmp
div
sub
push
aam
fisttp
dec
mov
jmp
fwait
jmp
scas
and
sbb
mov
mov
sub
xchg
mov
call
ror
call
adc
sub
aad
fisub
retf
popf
add
or
cli
mov
(bad)
push
push
loop
sahf
xchg
ss
fsub
adc
ds
dec
and
mov
pop
jb
stos
(bad)
rcl
xor
retf
scas
xlat
cmc
rsqrtps
int
xchg
jo
mov
mov
jl
xor
sahf
mov
loope
add
add
mov
fcom
lahf
call
movs
loopne
inc
std
pop
push
push
mov
cmp
sub
lds
in
repz
push
pop
push
sub
fsubp
mov
in
loop
pushf
jmp
mov
and
repz
cmp
dec
sbb
sbb
les
in
cmp
sub
cmp
jecxz
cmp
push
add
test
out
ins
add
fldenv
add
mov
push
in
cmc
(bad)
adc
mov
cdq
xchg
add
nop
or
loope
and
cli
inc
add
xchg
mov
ficomp
mov
rol
mov
and
or
out
into
das
jae
or
imul
iret
jg
and
inc
scas
jns
dec
push
out
aaa
into
punpcklwd
loop
or
das
add
int3
cmc
cmp
cmp
or
push
pop
xor
pop
push
mov
xchg
scas
cmp
inc
xchg
cs
sub
pusha
xchg
std
sbb
scas
jle
cwde
add
cmp
pusha
shl
cdq
inc
jno
scas
jbe
cmps
cmp
push
movs
jg
scas
jne
aas
stos
cmp
ds
jnp
stos
dec
and
cmp
mov
enter
dec
adc
ret
imul
mov
imul
jbe
fmul
neg
and
mov
fiadd
pop
mov
push
push
test
bound
adc
mov
mov
pop
or
jmp
(bad)
arpl
push
es
dec
rol
dec
and
sahf
jge
hlt
std
inc
(bad)
jge
sbb
(bad)
xchg
out
bound
push
sbb
dec
(bad)
mov
call
fs
mov
call
aam
xor
ins
in
sahf
retf
icebp
scas
nop
push
xchg
jns
scas
sub
(bad)
out
test
call
icebp
aas
mov
inc
mov
fld
jnp
adc
leave
sub
sar
jmp
mov
lock
push
jecxz
sar
cmp
outs
loop
gs
jmp
enter
lea
je
mov
test
mov
lahf
add
sub
sub
loop
add
out
cld
dec
jle
scas
cmp
xor
pop
ret
adc
xor
jg
sub
or
scas
cs
inc
add
mov
outs
push
dec
arpl
fs
xor
repz
sub
and
pop
lods
jmp
mov
push
dec
movs
jns
pop
xor
das
mov
mov
rcr
mov
jl
sub
test
movs
fisttp
xchg
cmps
cwde
cmc
ja
mov
adc
pop
aaa
sub
call
add
push
xor
cli
mov
lds
push
aam
(bad)
test
pop
cdq
js
and
clc
adc
push
pop
outs
mov
sub
mov
add
repz
int
jle
imul
out
inc
repz
mov
mov
leave
out
fdiv
(bad)
pop
inc
je
scas
push
scas
dec
or
ja
and
push
jmp
push
lods
push
add
cld
sub
pop
std
push
iret
int
dec
arpl
clc
mov
outs
push
add
lods
and
add
or
add
pop
mov
xchg
jns
mov
jp
ss
cmp
pop
pop
mov
scas
ret
dec
jnp
sbb
lahf
mov
(bad)
sbb
sbb
mov
pop
mov
pop
sub
jns
rol
or
scas
inc
mov
addr16
lahf
sub
xor
lea
jae
cmp
fldenv
xchg
int
or
aam
add
mov
dec
popf
leave
mov
or
addr16
rol
out
rcl
mov
and
xor
idiv
add
movs
add
add
xchg
jo
cmps
ret
shr
jle
in
fldenv
(bad)
out
cld
outs
fdivr
add
jno
jl
fld
ja
add
push
mov
pop
pop
cld
(bad)
int
jnp
aas
mov
and
xchg
or
pop
sti
inc
mov
aas
setne
mov
scas
das
inc
or
cwde
xchg
jge
jne
stc
cmps
pop
push
sbb
ins
aas
pop
sub
gs
cmp
mov
popf
data16
and
push
mov
fidivr
pop
pop
test
fdivr
xchg
mov
and
push
sbb
imul
cdq
adc
int3
sub
cmp
aaa
cmp
inc
cmp
xchg
ror
inc
aam
stc
pop
into
xchg
jl
ds
call
mov
jnp
sbb
adc
mov
xor
unpcklps
sar
xor
xchg
out
addr16
scas
call
mov
add
ret
add
test
add
sbb
int
popf
push
cmps
ret
pop
cmp
hlt
int
sar
mov
js
inc
push
outs
mov
scas
dec
popa
jmp
cmp
pop
sub
into
addr16
fmul
loope
and
or
mov
shl
(bad)
xchg
mov
fwait
or
mov
or
js
jb
jmp
scas
mov
xchg
in
jg
es
or
mov
ds
push
jo
inc
mov
aaa
cmp
movs
jmp
shl
js
aam
jp
rcr
pop
xor
lods
inc
inc
pushf
push
mov
js
mov
cwde
mov
shl
aaa
mov
repnz
daa
int3
xchg
lds
add
retf
div
retf
jmp
mov
inc
xlat
pop
nop
cwde
imul
jbe
(bad)
xor
mov
scas
mov
pop
dec
inc
push
fdiv
fstp
mov
add
sub
xchg
mov
sub
mov
xor
dec
sbb
jae
adc
in
pop
test
outs
into
sbb
sub
pusha
pop
xchg
andps
sbb
mov
xchg
ins
test
call
mov
femms
out
pop
outs
mov
push
dec
stos
xchg
add
loopne
scas
sub
xchg
int
test
fs
mov
add
pop
data16
push
jge
adc
test
jo
popf
cmps
mov
imul
mov
fwait
(bad)
out
pop
cmp
test
loop
and
imul
dec
test
sbb
(bad)
lock
jge
inc
push
adc
mov
(bad)
push
push
ret
aaa
sahf
xchg
inc
jne
and
cmc
push
into
mov
fisttp
xor
arpl
daa
pop
pushf
mov
xchg
(bad)
sbb
cmp
sub
sub
mov
loope
jb
inc
idiv
inc
xchg
xor
aaa
mov
cmp
push
inc
scas
(bad)
mov
lahf
pop
or
inc
test
lods
cmp
movs
or
sbb
xchg
nop
sahf
mov
outs
xor
fimul
ja
jecxz
push
pop
xchg
mul
mov
pusha
push
mov
mov
mov
sbb
adc
sub
imul
bound
pop
inc
cmp
test
das
enter
addr16
das
and
call
push
add
and
and
retf
mov
xlat
adc
sbb
and
out
aaa
mov
push
and
inc
(bad)
les
push
xor
ds
dec
shr
and
mov
and
inc
mov
mov
push
repz
sub
lods
cmp
aam
push
inc
adc
mov
and
shl
sub
test
pusha
popf
dec
out
rcr
xor
daa
adc
rcl
fist
shl
pop
add
aad
cmp
inc
(bad)
repz
inc
aas
arpl
out
mul
out
pop
retf
xchg
jl
test
adc
or
adc
mov
cld
push
(bad)
mov
and
(bad)
push
push
xchg
add
fisubr
dec
out
push
(bad)
cmp
retf
lock
add
addr16
bswap
stos
push
stos
xchg
retf
mov
div
pop
scas
mov
push
sbb
ret
int
data16
cmp
imul
pusha
scas
sub
cli
xchg
add
rol
out
stos
xchg
cmps
pop
dec
pop
fisub
adc
lods
shl
add
es
hlt
daa
ret
mov
cmp
cmp
pop
pop
sub
add
mov
jg
mov
int3
mov
test
bound
mov
retf
jno
out
adc
js
push
shl
retf
popa
xor
push
ret
mov
xor
dec
popa
stos
movs
dec
inc
or
mov
ja
mov
pop
aad
sbb
data16
retf
add
dec
int3
pushf
aam
xlat
cmp
enter
sbb
push
add
mov
(bad)
jg
popa
jle
mov
dec
push
jge
sub
fst
pop
xor
pop
test
imul
mov
aam
adc
imul
jne
sub
sbb
cwde
add
out
cmps
dec
hlt
mov
shl
mov
cmp
mov
mov
out
xchg
mov
outs
add
push
ins
adc
jg
xchg
iret
xor
mul
inc
ja
(bad)
popa
inc
pop
inc
jge
stos
jns
stc
adc
not
pushf
out
mov
fisttp
mov
fcom
cs
jmp
lods
repz
or
jmp
pop
xor
test
pop
mul
outs
mov
pop
dec
push
push
ja
mov
push
cmc
dec
pop
nop
js
lds
add
loope
push
xchg
push
adc
ins
and
or
or
cmp
lds
jl
mov
loop
fmul
js
popa
call
mov
repz
cmp
nop
inc
addr16
cmp
pop
jns
add
popf
pop
sbb
fcom
shl
pushf
scas
pop
adc
lea
push
mov
imul
scas
ds
int
push
jle
mov
sub
jmp
test
jo
mov
pop
push
jl
fsub
out
mov
mov
push
and
and
(bad)
xor
repnz
cmc
pop
call
sub
hlt
add
jno
sub
push
es
addr16
dec
and
mov
push
fdiv
jnp
xchg
out
push
sub
dec
int
mov
je
(bad)
icebp
loop
add
add
inc
sub
sar
pop
sub
jge
mov
(bad)
out
and
jp
enter
shl
adc
sub
xor
sbb
push
cmp
rol
sbb
mov
sbb
push
loope
xchg
lds
iret
(bad)
or
pop
dec
mov
dec
cmp
mov
xor
inc
fild
or
(bad)
retf
in
xor
scas
jae
or
add
cld
dec
xchg
ret
mov
push
push
sub
sahf
pop
mov
les
popa
cwde
jecxz
sbb
lea
retf
xchg
test
mov
(bad)
and
xor
mov
popa
jbe
adc
loope
sbb
push
pop
outs
clc
ss
mov
call
mul
fidivr
fild
cmp
enter
pusha
pop
push
psllw
stos
mov
test
(bad)
mov
mov
int
xor
cmp
jo
push
cdq
jae
inc
popf
adc
xchg
mov
cmps
add
cdq
mov
scas
movs
xor
mov
pop
retf
fcomi
push
aad
mov
push
mov
lock
jl
mov
daa
jecxz
ret
fdivp
and
fstp
inc
sub
cmp
sub
inc
mov
daa
dec
xchg
in
pop
dec
bndstx
les
xor
jns
and
push
mov
sub
cs
call
sub
retf
loope
xor
inc
dec
jmp
in
loope
imul
inc
xchg
test
or
mov
scas
xor
sbb
mov
cmc
je
xchg
pop
(bad)
pop
sbb
jecxz
jne
ret
bound
daa
int3
cmp
or
mov
pusha
fidivr
cli
dec
and
mov
mov
pop
inc
cli
movs
lods
inc
pop
or
xor
(bad)
pop
mov
cs
nop
add
outs
add
fsubr
add
inc
add
sbb
cmp
retf
sahf
js
ds
test
fstp
xlat
xor
sub
fstp
or
mov
into
or
(bad)
adc
leave
stos
aam
cmp
add
xor
fmul
aas
and
fnstcw
jnp
push
cwde
push
inc
lods
popf
mov
xchg
mov
lods
jae
jo
out
pop
dec
into
ficom
dec
ret
stc
and
dec
nop
lods
mov
pop
push
popa
add
jmp
sub
test
fucomi
das
fs
sub
inc
push
ss
loopne
mov
nop
(bad)
cli
les
mov
dec
cdq
popf
and
xor
mov
jl
movs
push
xchg
add
xchg
cmp
adc
sbb
inc
stos
adc
xchg
pop
or
pop
sti
out
and
mov
pop
ss
jns
call
aad
imul
jmp
pop
or
mov
jmp
bnd
push
addr16
mov
icebp
add
mov
adc
je
bound
xor
sahf
sahf
mov
fs
fstp
fwait
outs
xchg
pop
or
aad
jmp
mov
imul
stos
scas
ja
lods
cmp
push
and
pop
mov
jmp
or
xchg
sub
xchg
sub
sub
arpl
mul
mov
cs
mov
mov
sub
add
mov
and
ins
cs
mov
mov
sub
out
test
mov
fiadd
mov
xchg
cmps
movs
pop
lahf
jns
mov
popa
repnz
mov
cmp
cwde
in
push
out
xor
lock
xor
inc
in
inc
ss
call
add
das
loope
push
(bad)
cld
fincstp
imul
sbb
cmp
js
push
out
test
fistp
aad
and
movs
add
push
call
jo
in
add
mov
adc
sahf
mov
push
add
das
jp
mov
(bad)
out
mov
pop
xor
inc
in
dec
adc
inc
pop
cmp
mov
test
rol
mov
jne
in
and
cmp
bound
adc
mov
mov
xchg
ins
ins
arpl
dec
fld
dec
or
repz
mov
mov
shl
shl
inc
adc
imul
fbstp
loope
push
jmp
rol
mov
xchg
xchg
sub
out
xchg
vpminub
cmp
xchg
jo
pop
hlt
add
aad
sbb
fs
(bad)
rcr
sbb
gs
aaa
add
in
push
jmp
lods
stos
or
movs
pop
push
adc
fnstenv
jmp
and
or
dec
pop
shl
fwait
and
les
mov
test
and
stc
add
aaa
fwait
lods
inc
ins
out
pop
mov
mov
fwait
xor
in
loopne
ret
ja
or
push
sbb
sub
(bad)
addr16
cmp
stos
cs
or
xchg
adc
scas
test
sti
stos
cmc
cmp
std
mov
inc
(bad)
je
inc
adc
lahf
sbb
ficomp
pop
sar
or
or
enter
and
jle
xor
add
xchg
cwde
cmc
shl
imul
cmp
mov
mov
mov
aad
(bad)
and
mov
fadd
mov
pushf
cld
xchg
stos
repz
ja
and
cli
iret
or
jg
cmp
fstp
mov
rol
out
jecxz
cs
adc
inc
xor
je
lahf
clc
fdivr
push
out
test
std
cwde
movs
adc
cs
dec
stos
in
daa
push
in
mov
sbb
jno
mov
jle
mov
pop
sub
(bad)
or
shl
or
ja
dec
mov
inc
dec
mov
inc
adc
je
ins
mov
and
xor
cmps
stc
pop
push
mov
dec
nop
jp
mov
add
pop
jle
push
ins
mov
cmps
test
and
inc
fwait
enter
xchg
call
jg
inc
add
adc
jo
dec
xor
add
lea
xchg
ret
xor
lahf
add
or
push
and
pop
test
mov
or
add
bound
fistp
jno
or
sbb
aad
sbb
push
push
push
mov
and
fstp
les
sti
shr
pop
sbb
jb
adc
push
push
repnz
pop
and
xchg
cs
xlat
not
dec
mov
lock
xchg
dec
jnp
pushf
sbb
scas
cmp
mov
nop
push
push
movs
adc
mov
cmc
cmp
inc
fcmovbe
pushf
dec
call
scas
xchg
or
loope
or
lea
mov
inc
(bad)
cmps
add
fdivr
ins
pop
sub
in
pop
rcl
pusha
enter
mov
cmp
sub
imul
inc
xor
cmp
jo
test
cmp
mov
lock
mov
push
cmp
cmp
pop
and
cmps
into
aam
data16
cmp
dec
sbb
into
add
push
mov
lods
dec
ins
mov
or
inc
data16
sbb
xchg
mov
jle
ret
out
adc
(bad)
mov
icebp
jne
adc
in
leave
mov
inc
or
or
adc
sar
int3
cmc
inc
mov
les
loope
leave
cmps
or
or
enter
mov
pcmpeqw
sar
ret
mov
jecxz
push
sbb
stos
out
je
pop
iret
fmul
pop
jne
xchg
(bad)
sub
sub
or
inc
dec
nop
mov
retf
shl
stos
push
add
xor
sub
jge
mov
cmp
add
cmp
out
sub
(bad)
xor
scas
scas
xchg
pop
test
mov
adc
int
cli
and
leave
aaa
xor
mov
retf
mov
push
mov
mov
xor
ins
jmp
ja
sbb
mov
sub
outs
call
mov
hlt
in
mov
test
loope
dec
add
cmp
cdq
and
adc
adc
pop
fdivr
push
repz
in
in
int3
xor
push
push
push
daa
sub
pop
sub
sub
or
cmp
sbb
cli
sahf
jo
fldcw
cmp
jnp
stos
loopne
sar
cmp
in
js
out
push
mov
daa
push
sbb
dec
and
cmps
dec
int
pop
mov
loop
xchg
mov
inc
add
sbb
test
pop
mov
and
into
outs
nop
mov
(bad)
dec
push
mov
addr16
ins
aas
mov
pop
push
out
loop
rol
add
out
jle
mov
mov
mov
mov
(bad)
call
popa
cmp
pop
jnp
sbb
push
sbb
add
push
fdivp
xchg
sub
xor
mov
aaa
mov
int
rcr
jg
push
xchg
pop
iret
cdq
mov
int
cmp
push
mov
outs
pop
adc
leave
addr16
sub
fldcw
shl
cwde
fadd
cwde
adc
loope
pushf
out
shr
fcmovnbe
jecxz
das
stc
pop
pop
pop
daa
lock
cmp
cmp
iret
cld
fcomp
mov
add
pop
(bad)
mov
cmp
into
loop
mov
jecxz
sub
mov
clc
inc
inc
jmp
sar
pop
or
repnz
push
dec
xchg
out
ds
or
in
rol
jmp
ror
sahf
repz
ja
(bad)
fdivr
xor
push
mov
inc
out
sub
ss
xchg
dec
or
bnd
loopne
jo
dec
sbb
fmul
fcmove
cmp
sbb
cmp
jb
aam
xchg
repz
scas
cmps
clc
mov
into
cli
mov
inc
out
mov
ins
jne
mov
mov
jne
add
ja
mov
in
mov
lods
rol
push
hlt
cmc
xchg
(bad)
(bad)
loopne
shl
nop
les
sub
fild
or
mov
xlat
adc
xchg
outs
add
sbb
cmps
pop
in
stos
cwde
inc
dec
outs
xchg
cdq
inc
mov
mov
mov
xlat
adc
adc
fstp
add
call
or
pop
ds
mov
stos
dec
inc
push
dec
aam
ret
xchg
shl
lds
xor
mov
fsub
xchg
jmp
sahf
add
jle
mov
cmp
repz
xchg
mov
pop
shl
mov
inc
stc
inc
sbb
outs
jge
mov
add
js
sub
cmc
enter
adc
rcr
clc
lahf
add
sar
xor
add
in
stc
loope
call
inc
dec
pusha
push
gs
push
push
pushf
dec
fimul
mov
fld
push
sub
cmp
mov
mov
xor
push
ret
aas
cwde
inc
or
mov
mov
or
push
ret
inc
sbb
add
mov
retf
sahf
pop
fs
sub
dec
push
or
sub
push
enter
stos
mov
std
lahf
push
imul
stos
sahf
nop
add
int3
mov
cmp
fidivr
xor
mov
int3
mul
fs
sbb
and
mov
mov
scas
mov
inc
popf
in
mov
sub
jne
std
arpl
cmp
mov
outs
in
shr
aaa
dec
in
sbb
(bad)
repz
jge
sbb
jp
arpl
and
lock
cmp
and
es
stos
jae
cmp
adc
xchg
ss
lahf
mov
cmp
xor
adc
fiadd
scas
jbe
shl
push
dec
out
lods
lds
int
ret
js
pop
jno
jnp
mov
add
arpl
inc
popf
add
push
inc
cmp
fucom
std
mov
pop
xor
jge
lock
test
mov
lds
rol
fidiv
clc
retf
and
push
xor
jne
add
xchg
lahf
push
imul
dec
movs
xlat
repz
dec
cmps
out
xor
icebp
cmps
aam
jl
mov
pushf
pop
or
cld
mov
pop
lods
xor
sbb
js
dec
sar
mov
mov
into
mov
and
mov
test
push
dec
and
mov
(bad)
mov
xor
std
xor
push
jge
adc
pop
xchg
out
ins
aas
stos
mov
mov
push
dec
arpl
fstp
ret
int
ret
adc
cmp
ins
jns
nop
out
cdq
push
adc
pop
fadd
fdiv
cmp
ss
retf
fst
lock
dec
es
xor
and
adc
fsub
mov
xchg
popa
add
mov
sbb
in
mov
inc
fnstenv
push
cmp
mov
stc
cdq
test
pop
mov
popa
arpl
out
fs
rcr
mov
out
and
or
fnstcw
lock
jne
xor
sbb
cmps
and
or
push
enter
out
pop
fst
pop
mov
imul
and
mov
clc
out
ja
mov
ds
(bad)
mov
sub
pop
mov
or
mov
cmp
jp
mov
ret
xchg
out
fcom
(bad)
into
push
sub
fld
rol
cmp
mov
xchg
cmp
(bad)
adc
inc
mov
cmp
cmp
inc
sbb
ins
mov
mov
adc
push
stos
mov
pop
jno
in
lods
cdq
mov
push
pop
add
jns
dec
in
fbstp
mov
or
daa
sbb
xchg
popf
push
rcl
das
mov
pop
fisubr
mov
add
cmp
das
cs
cmps
lods
fs
stos
out
loop
call
pusha
fwait
loopne
xor
outs
or
or
mov
xchg
int3
inc
pop
or
pop
sub
adc
mov
ds
sbb
jne
dec
mov
fist
lahf
les
and
popf
inc
addr16
js
(bad)
imul
loop
retf
xchg
sti
ret
jmp
dec
jbe
fisubr
retf
pop
pop
scas
xlat
scas
adc
ficomp
adc
cwde
bound
movs
stos
retf
in
sbb
mov
mov
test
nop
jb
pop
addr16
add
xor
scas
js
mov
test
ds
jns
adc
xor
mov
clc
in
and
inc
ins
outs
sbb
ds
cmps
movs
pop
xchg
ret
shufps
xor
repnz
jae
mov
test
fdiv
inc
stos
sbb
inc
mov
clc
pusha
test
or
sbb
and
mov
out
inc
jae
sub
inc
lods
cmp
dec
scas
hlt
or
or
inc
jae
mov
repnz
lds
push
xor
xor
hlt
icebp
retf
ret
sbb
jmp
mov
(bad)
pop
loope
sub
xor
xchg
or
push
pop
dec
shl
ret
clc
pushf
push
mov
loopne
cmp
push
fstp
cmp
stc
rcl
(bad)
dec
fst
xor
mov
lds
jno
retf
retf
mov
ds
adc
adc
nop
xchg
xor
xor
(bad)
push
cmc
push
mov
inc
aaa
dec
or
rol
and
cmp
cli
mov
sub
dec
rcl
call
jge
out
sbb
pop
popf
mov
imul
imul
xchg
icebp
sub
pop
je
xor
jb
(bad)
push
and
hlt
lea
inc
pop
push
ja
cmp
adc
stc
shl
or
(bad)
in
inc
jge
repnz
ror
pop
ds
movs
sub
mov
fidiv
jl
test
adc
mov
jb
dec
movs
cmp
(bad)
jl
outs
enter
mov
shl
jmp
xchg
xor
adc
sub
sar
movs
enter
pop
push
adc
retf
cmp
daa
mov
or
lds
(bad)
add
adc
xor
scas
inc
popf
les
xor
jecxz
inc
inc
ja
popf
dec
xchg
cmp
mov
pop
cmps
or
cs
outs
jmp
adc
xor
fs
adc
loopne
fnsave
pop
push
loope
and
jmp
out
dec
cs
mov
ss
inc
rol
pop
in
jl
stos
pop
push
mov
pop
ja
mov
cmp
clc
xlat
xor
inc
dec
pop
jl
jbe
repnz
mov
or
rcr
retf
jg
int
xchg
ins
fist
test
popa
call
fdivr
add
xchg
jg
and
add
imul
push
add
mov
mov
xchg
dec
fwait
data16
ficomp
sbb
fldcw
jg
repz
shl
mov
push
mov
cmp
or
mov
loopne
in
mov
dec
lahf
mov
mov
aam
inc
mov
fcomp
in
popf
inc
or
outs
lea
ret
fwait
add
xchg
int3
rcr
push
mov
outs
in
fsub
(bad)
xor
and
ret
mov
inc
ror
rol
jno
fs
cmps
jp
(bad)
jp
icebp
lds
mov
xchg
movs
leave
rcl
pop
push
mov
out
add
mov
mov
aam
xchg
js
fisub
stos
jo
push
out
ret
dec
push
mov
repnz
xor
pop
(bad)
repz
mov
aad
push
jl
xchg
or
pop
scas
pop
mov
imul
out
pop
xchg
fisubr
jo
and
shl
inc
xor
sar
repz
rcr
popf
mov
mov
fwait
mov
fsub
mov
xchg
xor
dec
hlt
fsub
inc
cmps
ins
and
add
push
cwde
pop
mov
or
inc
sub
pop
or
push
js
int3
idiv
stc
popa
les
add
(bad)
in
lods
sbb
pop
xor
jmp
jmp
jo
stos
movs
in
jl
icebp
mov
or
imul
out
mov
mov
dec
mov
sub
dec
sbb
pop
test
sbb
sub
or
adc
retf
mov
mov
fcomp
add
jl
mov
or
and
add
punpcklwd
ret
mov
out
adc
test
bound
out
inc
rol
test
(bad)
repnz
enter
pop
dec
cli
das
pop
lods
adc
imul
sbb
fst
in
add
mov
cmp
std
xchg
imul
or
inc
inc
push
inc
pop
repz
stos
out
adc
ficomp
gs
cmc
jne
inc
and
pop
stc
(bad)
push
push
push
lahf
cmps
fadd
push
(bad)
sub
pop
adc
addr16
and
shr
mov
outs
and
test
mov
mov
push
jns
pop
cs
popa
dec
movs
mov
jmp
jne
pushf
shl
cmp
call
js
pop
in
mov
push
mov
sub
sbb
push
(bad)
std
lods
push
inc
mov
aas
pop
rcl
cvtdq2ps
jns
pop
sbb
int3
push
pop
test
mov
xchg
mov
fadd
or
xor
lods
in
in
dec
test
in
adc
or
les
aas
outs
push
lahf
mov
inc
dec
ins
add
into
and
fild
aam
dec
xor
lods
cmp
add
inc
jae
fldcw
pushfw
dec
test
push
inc
xlat
push
or
pop
pop
popa
clc
test
fisttp
push
in
sti
xchg
aad
push
push
mov
pop
pusha
es
lock
repz
pusha
(bad)
out
sbb
(bad)
out
adc
cwde
(bad)
retf
mov
add
xor
out
sahf
enter
fimul
outs
xchg
lea
add
cmps
or
push
inc
lods
mov
mov
ret
ret
rcr
and
outs
push
cmc
mov
add
into
pop
cmp
test
or
mov
mov
pop
cwde
jnp
dec
pop
inc
or
xor
ret
jl
or
int
dec
push
fs
mov
ss
lods
fiadd
sub
push
inc
jae
add
xchg
cmp
xor
jmp
or
mov
gs
push
icebp
retf
inc
pop
jle
or
pushf
pop
dec
in
jle
out
call
pop
jae
jmp
ror
push
rcl
mov
xchg
pop
loopne
or
xchg
movs
fst
ja
push
test
sti
imul
pop
adc
pop
outs
pop
pop
xor
sub
dec
nop
mov
cli
jmp
push
mov
and
rcl
mov
dec
jne
mov
mov
push
(bad)
pop
push
jno
jns
xor
clc
test
fistp
lods
dec
lock
jnp
out
sub
mov
dec
sbb
add
xchg
retf
mov
xchg
cmp
mov
nop
sbb
jmp
dec
mov
xor
add
and
dec
shl
dec
lods
dec
add
pop
mov
pop
addr16
sub
ret
xchg
rcl
xchg
push
into
fadd
pop
pop
sahf
cmp
out
mov
clc
inc
(bad)
xchg
dec
add
pushf
cld
cmp
loopne
push
fld
into
mov
(bad)
mov
mov
add
pop
mov
inc
loopne
lods
pusha
(bad)
sub
cmps
jmp
push
addr16
shl
je
jle
mov
cmps
and
in
sbb
dec
fs
inc
dec
or
jo
(bad)
ds
daa
aam
lea
mov
fs
movs
sub
pop
cmp
xchg
xchg
rol
setns
lods
mov
std
sub
dec
out
mov
sbb
sub
fcmovb
(bad)
movs
add
lock
cmovp
mov
(bad)
loopne
inc
idiv
loope
popf
mov
cwde
xchg
inc
xchg
push
mov
retf
or
arpl
inc
xchg
movs
pop
movs
psubusw
(bad)
pop
push
inc
fstp
mov
div
repnz
in
xchg
inc
mov
int
jmp
mov
inc
dec
in
clc
js
int3
mov
mov
das
stos
fiadd
push
cmps
inc
test
mov
(bad)
mov
int
aas
cmp
inc
sbb
xchg
loopne
adc
out
mov
add
push
jmp
jp
jo
aas
popf
fisttp
fst
fisub
iret
(bad)
dec
cwde
cmp
add
sub
push
inc
adc
sub
or
xchg
jg
cmp
(bad)
jb
sbb
test
lods
das
jecxz
repz
mov
jge
test
mov
jecxz
xchg
lods
scas
out
push
(bad)
stos
mov
jmp
xchg
(bad)
push
cdq
imul
pop
outs
loopne
cmps
xor
inc
pop
inc
daa
sub
sbb
jae
push
xchg
dec
jmp
xchg
lock
js
push
sub
pop
sbb
js
in
push
xor
rsm
js
push
rcl
idiv
or
call
movs
fiadd
dec
(bad)
fdiv
cwde
nop
mov
outs
mov
mov
add
adc
add
sbb
scas
xor
pop
adc
ret
or
dec
push
loop
hlt
and
in
call
sub
lock
fiadd
mov
shl
out
push
jecxz
sub
frstor
fild
jo
xchg
mov
adc
cwde
mov
push
cwde
push
inc
or
xchg
dec
add
in
inc
xor
add
pushf
lea
outs
xor
push
pushf
inc
hlt
ret
out
sub
pop
sbb
imul
inc
loop
xor
loop
ds
add
jmp
(bad)
jge
mov
(bad)
icebp
in
lea
call
rcr
int3
pop
clc
ret
pop
sbb
xor
add
lods
daa
inc
(bad)
popa
jmp
cmc
cmp
xchg
pop
jno
add
jg
mov
sbb
cwde
(bad)
cmp
jae
mov
dec
cmp
jne
into
shr
shl
mov
nop
pop
adc
fmul
jae
ss
out
in
sbb
add
jno
movs
les
aam
stos
lahf
call
add
xor
or
bound
pop
jo
ficom
fsubr
lods
aaa
cmps
sbb
fs
xlat
cmp
mov
dec
dec
lds
dec
cld
cwde
rol
scas
inc
pop
add
fsub
ins
mul
dec
rcl
cmp
push
push
cmps
(bad)
xchg
les
xchg
cs
gs
ret
jmp
ins
(bad)
fs
jns
mov
adc
lea
xchg
dec
mov
into
in
mov
nop
push
push
ja
pusha
movs
pusha
movs
dec
cmp
das
nop
pop
jno
das
stos
repz
jbe
mov
push
retf
xor
movs
loop
or
add
inc
in
mov
loope
add
mov
adc
mov
jno
addr16
or
ret
fimul
xchg
fnstenv
sub
aaa
and
neg
dec
lods
imul
pop
movs
(bad)
test
bound
mov
stos
test
adc
js
jmp
pop
out
shl
stc
jg
pop
xlat
jmp
sbb
mov
pop
(bad)
xchg
sub
loop
inc
gs
jnp
retf
push
sbb
or
adc
inc
and
mov
outs
adc
add
mov
out
inc
mov
cmp
ror
pop
mov
jbe
cld
sub
xor
lds
gs
pop
inc
cwde
cld
stc
push
in
call
loope
adc
sbb
je
mov
fld
push
aas
push
dec
push
popf
aad
pop
scas
inc
mov
sub
in
or
lods
pop
movs
cmp
shl
jp
pop
pop
in
cmp
iret
sub
cmc
pop
stc
add
push
pop
(bad)
dec
mov
pop
mov
sub
mov
add
push
cmp
out
aas
mov
push
xlat
add
or
xlat
mov
or
into
imul
xchg
push
lea
dec
and
aam
retfw
je
xchg
scas
test
mov
mov
mov
dec
add
cwde
or
inc
sbb
sub
int
mov
aam
iret
jbe
lods
or
jb
outs
mov
retf
sub
pop
fs
mov
stos
(bad)
mov
test
sbb
pusha
out
adc
sub
push
shl
idiv
iret
repz
scas
mov
idiv
jnp
(bad)
fbld
ins
and
add
pop
mov
mov
mov
push
push
popa
jg
inc
int3
lods
push
xor
out
fld
cmp
sti
mov
pusha
lahf
xchg
jecxz
mov
out
ret
hlt
add
dec
mov
push
imul
xchg
cmp
stos
xchg
and
add
gs
lds
inc
push
cld
cmp
in
sbb
push
mov
test
cmp
fdiv
push
xor
shl
adc
cmp
clc
pop
ret
sub
inc
mov
ret
fist
sar
pop
lock
stos
cmp
pop
fld
imul
(bad)
and
ror
test
mov
pop
outs
mov
nop
push
shl
enter
jb
lahf
pushf
inc
push
inc
or
les
xchg
cmc
mov
sub
mov
cli
sub
js
(bad)
xchg
rol
ss
lods
xor
and
lock
call
fwait
push
sahf
ja
(bad)
pop
cmps
out
cld
in
ins
xchg
push
jg
neg
fcmovu
adc
stos
jp
dec
das
sub
mov
popa
and
mov
mov
xor
cld
mov
(bad)
mov
cmc
dec
add
xchg
inc
shl
or
mov
inc
lds
xor
xor
bound
lods
loopne
inc
inc
mov
aaa
pop
outs
adc
mov
enter
pop
pusha
pop
ror
or
sbb
inc
das
int
sar
sub
pop
xchg
xchg
ins
ret
mov
and
add
test
(bad)
lds
shr
jecxz
push
mov
mov
mov
xor
sti
imul
dec
sbb
fild
test
xlat
jecxz
shl
dec
es
(bad)
mov
mov
cmp
xchg
pop
push
lea
ins
cmp
push
xor
bndstx
inc
inc
or
in
and
dec
jb
mov
ins
adc
and
inc
jns
mov
jnp
pushf
ret
into
sbb
push
jne
jmp
pusha
movs
pop
sub
stos
jge
mov
int
mov
xlat
into
lds
mov
imul
inc
mov
test
xor
adc
sbb
retf
and
call
rol
in
(bad)
push
xor
stos
ss
je
in
cld
and
xor
jne
(bad)
and
jb
xor
fist
push
and
mov
xor
call
ret
mov
jb
ror
into
inc
stc
scas
sub
test
pop
lock
and
ins
sub
stc
add
out
stos
test
icebp
mov
aaa
stc
sbb
fidiv
jg
xlat
popf
or
xor
sahf
test
outs
add
stc
or
push
pop
dec
push
aad
cdq
sbb
(bad)
cli
jg
movs
xchg
mov
or
sbb
mov
sbb
xchg
pop
mov
dec
xchg
add
loopne
cmp
mov
push
sahf
and
mov
and
(bad)
div
lea
xchg
mov
xor
repz
data16
cld
aad
movs
test
es
stos
pop
mov
addr16
add
inc
pop
test
mov
daa
mov
sub
xchg
icebp
and
mov
jo
pop
dec
mov
pop
fild
stos
call
test
popf
lock
ds
out
(bad)
test
(bad)
shl
adc
mov
sbb
sti
in
adc
sbb
pop
retf
pop
cmp
adc
shl
je
mov
lea
pop
aad
pop
ins
je
dec
(bad)
stos
in
or
dec
dec
fnsave
call
sbb
stos
pop
jae
mov
sbb
sbb
stos
pop
icebp
outs
ins
mov
imul
jecxz
dec
or
popa
dec
pop
or
ins
xor
js
add
in
pushf
jecxz
lock
(bad)
sub
fimul
mov
xchg
stc
sub
jmp
and
fnstenv
sub
or
sub
rcr
xor
repnz
inc
sub
add
fild
(bad)
stc
sub
add
xchg
pusha
adc
mov
cmp
mov
clc
cmp
clc
in
das
mov
cs
xchg
jo
scas
jle
push
adc
lea
fadd
dec
sahf
mov
pop
das
out
(bad)
das
mov
mov
(bad)
clc
inc
jne
ret
ins
dec
int3
mov
sti
(bad)
cmc
popa
inc
or
add
adc
les
dec
int
jns
dec
jg
pop
cmc
test
jmp
outs
cs
add
cmp
jmp
frstor
out
mov
dec
adc
and
call
pusha
dec
cmp
ins
int
lods
mov
jecxz
inc
and
pop
pop
aad
mov
mov
mov
hlt
jmp
cmp
loope
xor
add
ss
cmps
je
aaa
int
mov
jo
push
sbb
cli
xchg
pop
sub
cmp
aas
popf
es
mov
sbb
aam
xor
lea
fmulp
xchg
in
popa
inc
scas
xchg
shr
fild
or
aas
pushf
je
add
sbb
lods
cmp
std
pop
adc
xchg
aas
push
test
je
cmp
das
stos
dec
adc
mov
(bad)
das
jnp
imul
pop
xchg
mov
inc
xchg
cmp
icebp
mov
jnp
dec
push
pop
dec
aas
outs
(bad)
fsubr
int3
or
xchg
hlt
jae
pop
mov
or
shl
dec
xchg
mov
fidivr
nop
pusha
add
call
bound
aam
out
jnp
aaa
jg
and
push
(bad)
cli
ficom
inc
and
mov
pusha
fmul
xchg
popf
sub
and
sbb
fs
ficom
cmc
ss
fidivr
pop
sub
movs
push
and
popf
and
(bad)
or
mov
pop
aaa
das
sbb
push
sbb
mov
mov
jnp
out
(bad)
fcmovb
and
dec
xor
retf
push
jl
test
and
loop
out
dec
movs
or
sbb
std
and
cmps
pop
das
pop
les
lock
ins
scas
stos
push
sbb
cmp
icebp
xlat
xchg
dec
adc
jge
dec
gs
sub
push
dec
push
pop
mov
mov
inc
xchg
jmp
add
inc
xchg
movs
mov
pusha
ror
mov
(bad)
cli
es
pop
hlt
mov
cmc
jmp
frstor
dec
xchg
dec
les
push
cmps
call
(bad)
xchg
(bad)
loop
adc
fadd
cmp
add
cmp
scas
mov
loopne
gs
fcmovnb
pop
rol
dec
adc
out
xor
and
inc
stos
iret
out
lods
out
jmp
jle
mov
mov
xor
xchg
mov
and
shr
jno
iret
xor
outs
mov
sbb
mov
dec
adc
mov
pop
add
and
sub
outs
mov
int3
pop
add
in
les
bound
or
xchg
jmp
pop
ins
ret
call
inc
dec
call
pop
in
cmp
(bad)
jge
sti
lea
ret
loopne
cmp
xor
add
jmp
cmp
shl
shr
mov
cdq
fimul
nop
call
icebp
push
dec
mov
mov
ror
jp
lods
dec
data16
clc
add
jae
jo
addr16
jmp
inc
dec
test
(bad)
call
fdivp
xor
aas
leave
rcr
mov
mov
or
dec
and
fmul
sbb
(bad)
mov
ss
in
shl
pop
cmp
fbld
mov
repnz
clc
add
leave
rcr
xchg
je
fisttp
gs
or
jns
lods
jns
call
xor
fwait
mov
mov
ja
cmp
pusha
hlt
(bad)
mul
pop
(bad)
es
xor
xchg
or
cwde
fs
xor
add
ret
pushf
cmps
out
call
pop
sbb
test
fst
xor
scas
push
mov
inc
adc
in
mov
sub
jp
mov
pusha
xchg
pusha
pusha
push
movs
loopne
imul
or
lock
loope
not
mov
jbe
inc
jg
sbb
mov
std
sub
(bad)
adc
movs
xchg
cmps
mov
jmp
ror
pop
cwde
mov
jmp
xor
xchg
inc
ss
hlt
push
or
or
stc
mov
dec
cmc
ret
mov
nop
cdq
or
out
(bad)
mov
mov
cwde
and
mov
mov
pop
call
pop
call
in
and
mov
lock
mov
jae
arpl
jb
xchg
stos
jmp
xchg
cli
iret
rcr
ins
cs
mov
into
out
int
xchg
es
cmp
pusha
pop
fimul
xor
dec
je
mov
sahf
jecxz
and
(bad)
fdiv
inc
xchg
add
into
cmp
stc
gs
push
add
push
push
loop
stc
jp
cld
and
pop
cli
push
bound
or
xchg
pop
pop
push
push
xor
aaa
gs
jle
xchg
(bad)
repz
cdq
sub
test
jg
mov
ins
sbb
push
xchg
retf
js
or
push
jmp
jae
inc
sbb
add
fnstenv
jns
xchg
dec
bound
ja
test
or
mov
add
mov
out
pop
fiadd
pusha
or
or
arpl
inc
fistp
out
dec
push
and
out
sbb
and
pop
jne
(bad)
fisttp
jns
outs
adc
aad
movs
dec
jne
mov
rcr
in
mov
adc
(bad)
cdq
(bad)
outs
cld
retf
sbb
sub
cdq
in
push
jmp
xchg
mov
cmp
xor
iret
ss
inc
sub
out
add
les
inc
in
mov
outs
pop
mov
sub
adc
aas
xor
mov
fst
in
mov
jmp
test
push
and
scas
sbb
(bad)
jge
ins
nop
or
adc
retf
inc
mov
or
pop
adc
call
lods
dec
add
adc
push
lds
loope
addr16
shl
ja
jno
icebp
mov
jg
ffree
out
pop
nop
mov
push
or
call
mov
or
adc
ret
scas
int
mov
mov
jecxz
(bad)
outs
iret
sbb
std
mov
scas
inc
lock
aam
cmps
jecxz
into
lods
movs
stos
mov
xchg
in
adc
(bad)
(bad)
out
ret
fsub
mov
rol
out
adc
xchg
dec
fs
push
mov
push
jmp
add
call
sub
and
daa
mov
repnz
mov
in
cwde
mov
and
push
cwde
xadd
inc
and
pop
mov
mov
stos
push
mov
imul
add
iret
inc
sbb
pop
sub
sar
mov
les
movs
stos
mov
dec
lea
into
jbe
inc
push
pop
ror
mov
dec
push
fiadd
lods
stos
cmp
fdiv
xsavec
ds
sbb
cmp
cmps
push
psadbw
mov
(bad)
retw
or
add
mov
adc
adc
mov
push
xchg
mov
cmps
pop
cmps
repz
or
mov
sub
ss
fimul
repnz
out
cmc
sub
sbb
mov
add
gs
out
adc
mov
aas
not
dec
mov
xchg
jg
jae
icebp
mov
lea
fistp
shr
xor
icebp
imul
int3
sti
push
cmp
popa
inc
dec
push
and
pop
shl
xchg
pop
xor
push
mov
dec
push
or
movs
mov
and
xchg
or
mov
mov
lock
shl
add
pop
mov
fild
and
mov
hlt
enter
repz
cmp
cwde
outs
jns
push
pop
test
or
shr
or
movs
or
xlat
fbstp
pop
cmps
in
adc
jle
xlat
arpl
nop
sbb
and
sub
lea
fwait
daa
cdq
xchg
call
and
mov
ret
jmp
jb
(bad)
aad
push
stos
stos
fsubr
les
dec
sbb
dec
lock
adc
lods
iret
or
sub
mov
icebp
adc
outs
das
cmp
jbe
outs
int
fadd
xchg
(bad)
pop
push
xchg
in
mov
out
in
fs
add
fnsetpm(287
jb
ins
xchg
push
inc
(bad)
sub
gs
lea
mov
push
stc
call
xchg
rol
loopne
lea
sub
or
pop
leave
scas
push
or
add
push
push
cmp
xchg
sub
xchg
in
push
dec
je
call
iret
lahf
sti
adc
pop
adc
shr
add
mov
push
call
lea
dec
jns
adc
(bad)
dec
daa
movs
mov
mov
push
add
xlat
jecxz
fsubr
outs
ja
xor
mov
add
or
adc
and
dec
adc
cmps
idiv
push
ins
xor
(bad)
out
xor
xchg
(bad)
popa
xchg
ret
sbb
mov
dec
mov
mov
daa
hlt
push
outs
sbb
arpl
enter
sbb
push
xchg
push
pushf
call
sbb
ins
adc
daa
mov
xchg
push
in
popa
ins
inc
xchg
test
jmp
sub
fcmovb
aam
dec
sub
add
jmp
rol
sahf
movs
jg
sub
shr
adc
jo
dec
cmp
mov
dec
pop
leave
xor
sub
cmp
test
cdq
jbe
xor
pushf
add
mov
mov
(bad)
in
inc
repnz
xor
mov
adc
loope
mov
xor
jge
push
mov
daa
jmp
fisttp
pop
ja
dec
test
jecxz
in
inc
jno
cmp
sub
adc
cmp
loope
(bad)
jo
aas
dec
xchg
push
arpl
mov
mov
test
and
ds
push
push
or
shr
mov
mov
sub
jbe
xor
jg
stos
and
mov
jl
inc
in
push
cmp
sbb
lea
fisubr
push
test
jb
sbb
xchg
into
jmp
push
push
fwait
xor
mov
mov
sub
xor
outs
adc
mov
out
out
add
mov
out
cmp
mov
imul
js
clc
mov
fist
les
popf
clc
stos
sub
mov
jl
push
pop
mov
aas
mov
adc
(bad)
pop
out
xor
(bad)
jmp
stos
fsub
pop
mov
outs
push
(bad)
js
(bad)
(bad)
shl
fwait
or
fisttp
scas
jge
xor
xchg
jns
inc
int3
fadd
or
inc
sub
pop
mov
data16
mov
push
mov
nop
fadd
cmp
and
das
xchg
xchg
sbb
lods
ror
aaa
(bad)
fsub
rcr
pop
mov
in
push
das
xchg
ret
xchg
call
test
sub
repz
add
shl
adc
(bad)
in
sub
and
sbb
pop
aad
out
ror
cmc
pop
inc
daa
cli
out
cmp
cmp
adc
cmp
ins
jno
into
push
call
or
or
push
loope
xor
test
rcr
addr16
aad
gs
add
jmp
add
mov
shl
jge
jnp
mov
iret
stos
ret
push
fadd
push
or
mov
in
call
lods
push
pop
adc
into
jle
pop
out
jecxz
jne
sbb
mov
add
pusha
frstor
and
inc
gs
fistp
pop
call
dec
cmp
jecxz
mov
fistp
or
add
rcr
pop
xor
nop
icebp
and
fisub
cli
pushf
sbb
fsubr
shr
pop
dec
nop
xor
sahf
xchg
mov
inc
mov
ds
pop
iret
into
sub
inc
mov
neg
cmp
jns
lahf
ret
mov
dec
mov
adc
(bad)
dec
ret
inc
push
pop
jge
enter
pusha
neg
mov
add
fwait
into
pop
pop
or
int3
inc
imul
pop
mov
cli
fadd
xlat
shl
sub
cmps
fcomp
data16
add
xor
out
fadd
lock
test
mul
rcr
cmp
sbb
aas
outs
lahf
std
aad
lds
or
jno
sub
jmp
jo
clc
sahf
inc
sahf
shl
mov
clc
out
lods
pop
div
sbb
pop
cmps
inc
mov
adc
xor
xor
add
aam
cwde
mov
sbb
pop
clc
imul
jb
cdq
mov
mov
xor
push
outs
jno
and
in
arpl
std
push
push
cmp
add
arpl
sub
ror
in
or
xchg
loopne
inc
out
jmp
mov
dec
ror
push
push
pop
push
cld
dec
aas
inc
mov
xchg
and
push
stos
mov
push
cmp
jo
(bad)
popa
out
movs
aaa
pop
aad
or
cmps
cmp
mov
mov
pushf
and
test
sub
data16
out
xchg
push
fdiv
adc
fdiv
vcvtpd2ps
aad
out
sbb
fild
and
push
in
push
push
fstp
adc
scas
lds
pushf
jbe
add
pop
(bad)
ja
mov
rcr
pop
pop
adc
mov
or
or
adc
and
stc
imul
or
sbb
or
test
data16
je
sbb
(bad)
and
add
(bad)
inc
add
call
xor
inc
dec
inc
pushf
hlt
adc
repnz
xchg
cwde
push
pusha
xlat
dec
lock
push
pop
xor
mov
call
jnp
das
xor
in
loopne
push
loopne
xchg
loope
ins
cmp
mov
retf
xchg
test
dec
push
xchg
jnp
imul
retf
outs
jb
mov
mov
add
push
cwde
imul
clc
cld
pop
push
push
xchg
test
xchg
push
loopne
add
sbb
dec
adc
out
dec
popa
js
sub
test
xchg
cdq
jbe
leave
and
(bad)
lea
pop
test
dec
into
cmp
mov
dec
mov
mov
dec
iret
scas
and
cmps
mov
mov
inc
call
outs
scas
loop
cmp
cmp
in
cmps
mov
or
lds
pusha
push
adc
xor
inc
fsubr
push
push
out
jle
lock
xchg
inc
pop
pop
icebp
xor
retf
xor
int3
jp
cwde
pop
mov
xchg
add
mov
aas
add
xchg
mov
ror
cmp
call
div
and
add
(bad)
std
add
and
repnz
enter
fadd
mov
sahf
xchg
push
outs
sbb
test
mov
js
push
jns
jmp
jne
fsub
pop
ret
ss
test
xor
lods
ftst
in
call
out
adc
dec
(bad)
(bad)
ins
shr
movzx
shl
pop
jg
sbb
ss
xor
xchg
push
add
gs
and
lods
push
inc
hlt
cmc
jnp
movs
fwait
cld
cli
sub
mov
loop
sbb
mov
xor
push
leave
fsubr
xor
cmp
int
adc
js
stos
mov
pop
cmc
inc
push
addr16
call
sub
jle
stos
mov
rol
popa
jnp
push
leave
es
ja
and
add
std
xor
fdiv
dec
adc
sub
jl
mov
clc
mov
fistp
cld
das
mov
stc
cli
jge
inc
mov
test
xchg
movs
pushf
mov
popa
je
test
(bad)
xor
and
jl
add
sub
sbb
or
and
ins
push
adc
and
es
pop
gs
fnstcw
jg
pusha
or
mov
mov
fnstsw
jg
ins
dec
lahf
pop
dec
xchg
je
in
inc
pop
pop
pop
nop
ret
cmp
cdq
mov
push
lahf
fdivr
xor
pop
push
fsub
dec
lods
sbb
cmps
push
jb
gs
addr16
inc
das
into
ds
int3
sub
add
pop
jmp
int3
mov
test
mov
inc
(bad)
sar
or
or
jo
(bad)
xchg
aaa
mov
cli
fcom
mov
xchg
sbb
retf
and
retf
or
mov
cmc
pop
(bad)
repnz
mov
scas
dec
call
adc
push
add
cmp
cld
loop
into
nop
jmp
push
mov
popf
cs
scas
repz
stos
sub
ins
popf
fimul
mov
mov
outs
xor
xchg
xchg
add
xor
adc
pop
cmp
sub
mov
mov
and
mov
ss
nop
neg
and
jge
pop
mov
popf
retf
dec
sub
addr16
mov
test
enter
int
sbb
jbe
push
xchg
test
dec
xor
push
xor
xlat
add
push
int3
hlt
sbb
mov
mov
mov
cmc
cli
push
outs
xor
xor
or
cwde
inc
mov
cmp
mov
cdq
cmp
ss
loop
mov
test
sub
or
dec
sbb
test
xchg
cmovg
mov
movs
ins
add
jne
stc
jp
shr
mov
cdq
in
xchg
stc
ins
cmp
repz
add
(bad)
outs
jecxz
mov
(bad)
cld
mov
sub
mov
push
js
js
ja
sbb
gs
pop
icebp
jg
xchg
add
sbb
push
xchg
cld
or
dec
test
and
sar
(bad)
int3
aam
jns
xor
cmp
xor
jne
mov
and
dec
pop
sub
jle
nop
ins
loop
scas
jns
movs
xchg
xchg
fcmovb
nop
out
ror
popf
imul
dec
adc
inc
lods
inc
iret
push
xor
mov
sahf
pop
push
xor
xchg
mov
cmp
repz
or
jns
inc
mov
and
cmps
add
jecxz
mov
or
pop
ins
loopne
jne
clc
les
sub
push
cmc
rol
cs
nop
mov
sbb
test
ret
nop
aam
ja
sbb
std
xor
or
jecxz
ds
sub
nop
dec
cmps
sbb
add
outs
in
inc
mov
mov
push
jecxz
jmp
adc
rcl
pop
out
sub
pop
xor
mov
dec
test
jecxz
stos
loop
pop
leave
or
push
push
test
lods
push
adc
mov
jne
ret
(bad)
xchg
adc
aad
and
or
cmp
outs
mov
or
adc
jae
and
pop
lahf
sbb
xchg
in
repz
test
jno
sub
mov
dec
mov
inc
mov
mov
dec
cmp
adc
pushf
ds
leave
push
inc
pop
nop
hlt
lds
mov
sbb
sub
push
jo
cs
daa
addr16
stos
rcr
cwde
mov
and
outs
mov
shr
mov
lahf
(bad)
xchg
ffree
mov
xchg
daa
sub
(bad)
pusha
loop
sub
inc
dec
adc
sbb
hlt
pop
push
jnp
xchg
cmps
ins
ins
mov
mov
test
jg
add
hlt
sbb
pop
je
dec
(bad)
sti
data16
fst
or
ins
jle
cmp
repz
jecxz
fsubr
ja
jnp
mov
push
ss
and
push
lea
repz
int3
xor
dec
jmp
sub
adc
int
ins
clc
cmp
jns
sahf
add
inc
jl
(bad)
in
outs
das
(bad)
scas
scas
pop
dec
or
cmc
push
add
xchg
dec
sub
movs
sbb
mov
out
fsub
(bad)
imul
not
cdq
in
aam
sub
jg
push
jae
fnstsw
nop
pop
clc
jg
dec
jae
gs
int3
push
lds
adc
xor
mov
inc
out
loop
lock
and
lea
xor
(bad)
arpl
mov
int
dec
cmc
cmps
push
jecxz
adc
popa
xor
xchg
(bad)
jg
mov
jmp
ds
inc
pop
fs
sahf
xor
test
cdq
mov
(bad)
jmp
lds
jmp
adc
pop
inc
stc
popa
add
rcr
or
dec
hlt
push
les
fcmovnu
mov
dec
cmp
dec
js
out
and
mov
je
xor
cmp
loopne
mov
stos
xchg
fcom
mov
or
les
imul
js
mov
lea
adc
loop
inc
or
pop
push
or
adc
or
icebp
sbb
mov
add
mov
and
xchg
fwait
imul
mov
sub
scas
std
cmp
pop
sbb
popa
mov
xor
ret
aam
push
or
xor
das
or
jae
jmp
and
cmp
sbb
mov
xor
sbb
icebp
adc
in
pop
mov
xor
or
sub
push
ror
je
jge
mov
pop
lock
mov
(bad)
loop
jl
inc
push
pop
lods
and
mov
adc
xchg
sub
repz
scas
sti
mov
mov
push
jmp
mov
mov
imul
xor
inc
jle
stos
enter
fiadd
scas
pop
add
aam
pop
es
jp
pop
scas
inc
scas
int
inc
outs
ror
mov
aas
cmp
int
or
jns
mov
ds
test
jp
mov
mov
add
sbb
mov
sbb
xchg
pop
or
push
jp
mov
cmp
mov
lods
xlat
pop
inc
jle
cmp
mov
jecxz
push
mov
out
mov
scas
pop
inc
pusha
mov
fwait
push
cmp
mov
cmps
daa
stc
out
jmp
jbe
mov
mov
or
inc
(bad)
lods
(bad)
fidivr
je
add
push
xor
push
add
add
inc
daa
pop
adc
xor
inc
mov
pandn
lock
push
fsubr
cmp
bound
and
clc
out
es
retf
cmp
push
popa
push
clc
push
retf
in
and
sbb
mov
jg
mov
aas
mov
sbb
mov
enter
stos
jecxz
inc
cmp
icebp
call
pop
mov
aam
mov
das
pop
dec
repnz
xchg
push
dec
jmp
iret
add
imul
ins
sub
daa
out
mov
shr
push
mov
outs
iret
sar
mov
xchg
inc
cmp
mov
xchg
sahf
jbe
mov
mov
add
inc
add
mov
hlt
push
jl
sbb
push
test
loop
jge
adc
push
into
mov
mov
mov
loope
or
setl
mov
inc
sbb
cli
inc
pop
inc
jne
mov
das
xor
retf
loope
imul
add
fmul
lahf
push
push
sbb
push
js
pop
cmp
leave
dec
and
lea
out
clc
xchg
xlat
jge
cmp
add
push
test
add
aad
cdq
into
bound
stc
data16
mov
dec
add
cmps
inc
sahf
xchg
fstp
fbld
mov
push
gs
dec
adc
fst
mov
test
mov
and
lods
sbb
shl
(bad)
pushf
pop
push
pop
or
out
ret
lods
fs
movs
enter
cld
jecxz
scas
nop
jnp
outs
mov
adc
sti
or
mov
shl
inc
dec
fadd
jno
xchg
cwde
call
lods
dec
out
add
xor
(bad)
es
jge
mov
pusha
mov
xchg
test
push
int
pop
mov
mov
inc
mov
add
inc
adc
inc
sub
mov
jmp
sbb
and
fsubr
jl
mov
je
je
adc
cmp
pusha
fsubr
sub
push
jno
mov
mov
(bad)
pusha
(bad)
dec
ins
(bad)
(bad)
test
xor
mov
lods
sub
push
and
sar
pushf
sti
ins
jecxz
pop
pop
lods
mov
call
call
push
into
sub
cmp
sbb
data16
cmp
aad
dec
add
in
lea
xchg
and
mov
sbb
cmp
xor
cmp
push
call
rol
cmp
mov
cmp
pop
or
add
add
mov
lea
mov
shl
mov
push
stos
and
outs
mov
adc
cmp
imul
stos
call
sbb
pop
mov
pop
adc
in
and
mov
lahf
pop
jmp
cmp
add
loopne
shl
adc
(bad)
push
add
mov
push
rcr
fsub
add
push
arpl
int
loopne
jnp
in
push
adc
je
outs
in
int
dec
sahf
cmps
cs
(bad)
xchg
add
jno
cmp
iret
or
ins
push
(bad)
or
test
movs
xlat
(bad)
and
xchg
mov
xchg
test
sub
dec
jl
test
xlat
pop
repnz
into
adc
jns
xor
inc
pop
cmp
and
push
mov
and
mov
xchg
xchg
(bad)
lods
pop
or
pop
xor
mov
(bad)
mov
jae
sbb
aam
jg
sbb
adc
mov
xchg
out
adc
sbb
(bad)
outs
add
sti
adc
cmp
xchg
movs
jecxz
fcomp
repz
fsub
inc
dec
xchg
lods
push
mov
cld
sar
ret
ror
daa
mov
jle
nop
mov
push
mov
jnp
je
sti
xchg
push
mov
xor
sbb
pop
jl
cmp
push
pushf
outs
lock
popf
cmp
mov
jmp
test
fwait
ins
int3
ss
mov
lods
inc
stos
sub
movs
cwde
popf
loop
xchg
inc
ret
sbb
inc
push
jbe
scas
dec
retf
cmps
fsubp
jne
push
ficom
(bad)
jb
push
(bad)
inc
cwde
mov
xchg
aaa
stos
xchg
sub
lock
into
outs
popa
dec
icebp
frstor
shr
sbb
clc
inc
push
push
arpl
(bad)
das
xchg
fld
(bad)
fs
loope
dec
ja
lock
add
data16
jns
call
fild
sbb
cmc
push
(bad)
mov
fmul
stos
push
ds
in
movs
mov
ins
push
jbe
in
xchg
imul
(bad)
(bad)
loope
sub
sbb
cmp
dec
cmp
addr16
jbe
mov
push
inc
push
in
sub
mov
gs
inc
jmp
out
xchg
sbb
pop
sti
gs
xchg
mov
lea
and
mov
cmp
xor
rcr
mov
jle
xchg
inc
xchg
cmc
cmp
mov
les
push
fistp
mov
jg
dec
lods
pop
adc
es
push
(bad)
push
push
or
call
mov
mov
popa
pop
arpl
ja
inc
les
rcl
sbb
push
fsincos
xchg
xchg
push
adc
arpl
test
(bad)
out
cwde
xor
push
push
fbld
cld
mov
daa
add
ja
test
nop
stos
mov
in
adc
sbb
fsub
pop
xlat
xor
out
inc
and
and
push
sub
add
lock
jle
mov
lods
retf
mov
adc
loope
pop
jle
aaa
add
test
js
pop
stc
and
jmp
movs
(bad)
sub
jno
inc
icebp
xchg
mov
sub
stos
ss
push
sbb
jmp
repz
cmc
dec
cmps
fnstenv
retf
mov
push
inc
std
out
loope
jb
jg
pop
cwd
mov
pop
daa
outs
dec
adc
sbb
inc
stos
sub
int
or
fnsave
push
xor
cs
addr16
or
mov
adc
mov
mov
sub
fsubr
xchg
mov
sbb
jae
out
dec
loope
int3
adc
mov
int3
inc
fisubr
xlat
or
rcr
mov
mov
push
pop
outs
cmp
not
shl
jns
fcomip
addr16
inc
jmp
loopne
(bad)
scas
add
ins
push
(bad)
mov
hlt
xchg
add
cli
jno
loopne
cmps
cwde
cmp
fimul
pop
adc
mov
loopne
sub
cmp
cmp
ja
xor
cmp
pop
fs
xchg
mov
inc
loop
mov
jge
retf
pop
out
and
pop
lahf
mov
jne
and
mov
dec
inc
gs
test
into
fcom
jl
jb
repnz
sbb
inc
xor
fwait
lock
fidiv
add
mov
aas
sub
mov
push
lock
xlat
pop
test
xchg
data16
push
lods
xor
data16
xchg
icebp
or
jg
and
sub
inc
cli
jmp
pop
inc
ret
cdq
sub
or
mov
mov
movs
icebp
(bad)
xchg
and
call
pop
xchg
cmp
jae
fiadd
cmc
inc
std
push
mov
inc
push
push
inc
cli
jo
rcr
clc
sub
mov
shl
mov
push
mov
add
shr
in
es
fadd
mov
cmp
push
scas
xor
cmps
mov
stc
inc
call
je
jl
dec
adc
xchg
cmp
push
ins
cmp
(bad)
out
ret
and
and
cmp
nop
fbstp
jns
inc
test
pop
xchg
dec
lods
pop
cwde
adc
bound
pop
cmc
mov
xor
add
js
daa
jnp
stc
cmp
xchg
push
jno
cmp
jmp
cmp
and
cmp
sub
add
or
add
into
push
std
outs
test
(bad)
pop
scas
jge
xchg
adc
movs
sbb
ins
fmul
je
lods
sub
neg
add
or
test
iret
arpl
pop
into
pop
pop
jle
icebp
clc
test
fs
cdq
push
jb
repnz
add
jmp
repnz
xor
lods
out
call
je
aaa
cld
and
popf
mov
inc
add
or
mov
les
repnz
cld
jle
inc
(bad)
je
xchg
or
stos
inc
push
ss
jns
jno
jg
jle
stc
push
xchg
mov
mov
sbb
xlat
xchg
pop
inc
xchg
repnz
push
lods
jle
inc
sbb
pop
push
aad
ins
pop
cmp
push
xor
repz
mov
loopne
call
mov
enter
xor
retf
lahf
out
rol
push
es
imul
push
push
(bad)
fisttp
xchg
call
clc
leave
lock
adc
inc
pop
neg
dec
xor
inc
clc
xchg
lahf
pop
sbb
sub
mov
mov
in
lock
mov
ss
cmp
in
imul
cmp
(bad)
stos
mov
pop
nop
sbb
int3
idiv
xlat
in
mov
es
call
and
leave
xlat
push
mov
xor
movs
rcr
ins
xchg
xchg
in
popa
and
inc
mov
(bad)
xchg
adc
jno
jge
lds
mov
mov
imul
xor
or
jl
into
retf
xchg
ss
popf
movs
mov
dec
mov
mov
aad
xchg
jnp
xor
icebp
ins
cmp
int3
popa
enter
jp
rep
jae
pop
cmc
fist
scas
out
dec
jmp
frstor
pop
jl
mov
pop
lea
rol
cli
or
div
dec
outs
push
push
push
or
sub
jp
ins
pop
(bad)
and
test
inc
dec
mov
mov
xchg
repnz
(bad)
cmps
mov
fld
xchg
sub
sbb
mov
cmp
mov
popf
into
inc
dec
mov
ds
ins
add
(bad)
push
xchg
fs
loopne
sbb
(bad)
push
sub
pop
sub
pusha
repz
cwde
dec
movs
arpl
mov
pop
sbb
movs
pusha
outs
adc
inc
or
or
pusha
add
mov
scas
push
sub
jbe
sbb
sbb
into
xor
scas
xchg
xchg
push
push
mov
outs
fcmovbe
dec
inc
dec
dec
sbb
pop
mov
or
adc
repnz
xchg
pop
imul
das
mov
and
scas
pop
xlat
inc
ret
xchg
mov
mov
or
adc
inc
ins
ficom
mov
jno
inc
shl
pushf
test
mov
mov
add
xchg
call
fbld
pop
not
es
pop
inc
mov
mov
mov
mov
bound
fist
call
pop
cmps
stc
xor
sub
mov
fstp
(bad)
sub
imul
sub
mov
cmp
into
test
sub
lods
rcl
mov
retf
add
mov
xor
repnz
xor
or
push
push
dec
enter
ret
cld
pop
ins
jo
aam
pushf
ffree
loop
in
mov
sub
(bad)
call
adc
shr
pop
or
cli
xor
adc
sbb
pop
(bad)
mov
jg
ins
mov
pop
je
dec
gs
mov
inc
repnz
fs
out
and
xchg
jg
mov
or
adc
outs
cmp
arpl
and
popf
push
sbb
call
(bad)
hlt
popf
adc
jmp
and
addr16
retf
cld
dec
out
(bad)
pop
scas
push
sbb
cmps
ins
lock
mov
add
sbb
add
retf
push
loop
shr
xchg
jb
dec
xchg
sahf
data16
xor
push
adc
pop
ins
cmp
and
sbb
addr16
fcmovne
sbb
push
fbstp
or
mov
jne
retf
mov
test
xor
adc
mov
mov
add
mov
dec
ret
loopne
sub
mov
and
jae
imul
pop
and
cmp
(bad)
nop
cs
into
cmp
mov
xor
dec
cmps
pop
jns
aad
neg
cmps
or
jg
(bad)
mov
or
xor
mov
clc
mov
inc
movs
ror
dec
cs
dec
cmp
add
xor
sbb
dec
adc
jg
cmps
cld
enter
cdq
pushf
add
rcl
ds
jbe
xor
xor
pushf
aam
adc
call
fisub
inc
rcl
in
xor
add
mov
loop
cmp
vpcmpgtb
data16
shr
cmp
das
or
rcl
xchg
sar
mov
and
add
cmp
push
cmp
fldenv
imul
stos
sbb
xor
in
xchg
xchg
pop
fidiv
hlt
test
arpl
call
inc
mov
push
cmp
and
mov
cmp
add
imul
jl
loopne
xchg
push
dec
push
cmc
aaa
mov
mov
pop
mov
out
push
and
jbe
mov
shl
ss
push
sar
sub
loope
adc
adc
in
repz
stos
icebp
dec
mov
sahf
xchg
mov
sbb
mov
jb
dec
or
push
inc
sbb
stos
stc
push
xchg
mov
cmps
fs
repnz
jnp
cmp
cmp
out
je
js
push
mov
cmps
xchg
sahf
iret
lea
inc
jb
sbb
cmps
clc
and
out
lahf
mov
daa
add
iret
xor
(bad)
into
scas
pop
mov
mov
mov
leave
mov
sub
cld
(bad)
inc
out
sub
arpl
inc
xlat
jg
in
sbb
cmp
mov
je
sub
lock
xor
jp
xchg
outs
test
mov
movs
out
cmp
data16
and
sub
clc
xchg
jne
(bad)
jbe
mov
(bad)
fstp
shr
lahf
out
(bad)
aaa
cs
pop
push
leave
xor
es
mov
sub
das
out
lods
int3
call
add
jno
xchg
mov
or
sbb
inc
cdq
cmp
xchg
adc
jge
cmps
xlat
pop
retf
retf
sbb
mov
sub
push
je
retf
rcl
shl
mov
inc
int3
cmps
add
mov
ret
sbb
mov
add
add
or
adc
iret
sub
popa
or
mov
sub
dec
addr16
jo
add
or
ds
add
test
mov
xchg
movs
inc
in
stos
or
ret
mov
cmps
out
lahf
clc
dec
pop
and
inc
xchg
sub
and
add
ds
test
sbb
loopne
mov
data16
ret
xchg
(bad)
aas
xchg
push
inc
pop
xor
aas
sahf
aas
ins
stos
cli
dec
jo
cmp
dec
and
mov
fstp
jl
neg
cmp
adc
mov
aad
out
xor
iret
scas
or
xor
loop
mov
mov
fcomp
dec
inc
cmc
xlat
xchg
sar
mov
mov
sub
mov
in
(bad)
lahf
cwde
mov
jle
inc
xchg
shl
in
mov
pop
mov
mov
inc
mov
adc
scas
(bad)
mov
ror
xchg
(bad)
cld
mov
jbe
mov
sub
inc
fcomip
lahf
aaa
push
jbe
(bad)
mov
sbb
push
jle
test
arpl
and
retf
mov
aaa
mov
and
rcr
or
push
and
in
mov
fistp
popa
imul
(bad)
int
add
adc
retf
sar
push
pop
(bad)
mov
sub
push
push
dec
mov
pop
inc
push
adc
ja
daa
int3
sbb
sar
pop
xchg
jmp
test
stos
jae
mov
xchg
daa
call
loope
jae
or
mov
push
lods
dec
and
bound
fdiv
dec
jmp
scas
jl
int3
dec
mov
(bad)
(bad)
cwde
in
lods
mov
(bad)
repnz
cli
scas
xor
push
stos
dec
and
popa
cwde
test
and
inc
ja
sti
mov
cmc
xor
sub
lods
or
add
xor
ds
mov
mov
sbb
inc
push
in
test
mov
xor
ins
xchg
inc
dec
inc
int
mov
mov
cmp
mov
xchg
movs
shl
paddb
sti
call
sti
das
call
mov
in
lea
bound
loop
jo
sbb
mov
jns
jbe
inc
jno
es
mov
jmp
mov
leave
push
pop
jnp
sbb
pop
pop
arpl
cmp
jns
shl
mov
xlat
push
adc
adc
test
dec
in
jge
inc
stc
xor
mov
and
cli
lods
fist
push
pop
sub
nop
inc
clc
adc
mov
mov
or
movs
jge
xor
stos
hlt
push
in
add
stos
dec
pop
cmp
adc
sar
mov
inc
fcomp
les
push
int3
arpl
in
sar
call
or
loopne
sbb
cs
fpatan
mov
shl
es
loope
je
sbb
cmps
add
dec
jb
sbb
mov
push
and
or
mov
xchg
xor
mov
and
add
clc
sub
out
out
cld
cs
out
xor
fiadd
dec
je
dec
(bad)
push
add
and
pop
sbb
mov
mov
cmp
jecxz
pop
mov
mov
mov
sbb
pop
or
aam
xlat
fist
mov
out
push
jns
jnp
cmps
fld
dec
inc
(bad)
jbe
adc
mov
inc
dec
sub
std
out
cs
jnp
call
pushf
sti
cmps
retf
cmc
pop
ror
mov
jb
mov
adc
fistp
add
mov
xor
imul
push
push
dec
dec
in
jecxz
pop
add
mov
xor
cmp
arpl
aas
cld
sbb
lea
mov
push
js
sbb
dec
imul
mov
add
dec
rol
clc
or
jl
aad
cmps
popa
mov
and
or
sbb
push
ror
mov
scas
sub
dec
mov
or
test
push
xor
push
int3
adc
shl
call
sahf
mov
movs
fs
push
test
sbb
push
mov
add
jbe
ret
pop
in
pop
jg
dec
add
test
dec
jae
sub
sbb
pop
test
or
pop
cmc
shr
lods
imul
push
repnz
xor
rcl
cmps
neg
xor
pop
mov
bound
dec
cwde
sar
pop
(bad)
dec
or
cmps
inc
xchg
xor
mov
shr
and
xchg
js
stos
pusha
repnz
push
inc
push
sbb
outs
(bad)
push
push
inc
outs
in
push
fst
jns
and
jge
je
movs
xlat
xchg
icebp
bound
mov
jno
dec
clc
test
stc
aaa
imul
aas
jmp
mov
push
shr
pop
scas
(bad)
mov
dec
out
fwait
shr
add
(bad)
popa
cmps
outs
adc
xor
jbe
and
fild
jp
icebp
test
(bad)
std
retfw
test
jp
sbb
or
aad
pushf
gs
xor
enter
neg
shl
dec
and
inc
mov
shl
jge
sbb
adc
mov
jecxz
and
inc
js
and
push
mov
es
js
push
sub
test
int
scas
rol
xlat
inc
push
push
pop
mov
sbb
cmp
and
cmp
sti
test
aaa
ret
xor
cmc
pop
clc
push
add
outs
inc
push
and
pop
mov
mov
jbe
data16
dec
dec
xchg
sbb
dec
inc
push
adc
jnp
or
mov
movs
jo
xor
fcom
ror
and
(bad)
push
add
and
pushf
test
ror
sub
fcom
pop
sub
rcl
data16
sbb
inc
clc
jmp
mov
imul
xchg
aad
arpl
and
mov
aad
rcl
aas
push
pop
les
adc
call
mov
cmps
out
retf
test
fisub
loopne
xchg
shl
rcr
cmc
daa
and
lods
pop
jmp
cmp
int
sbb
mov
jnp
and
dec
js
loop
cwde
mov
adc
jmp
add
xor
ja
mov
std
mov
mov
int
sar
fwait
xor
(bad)
shl
aam
fincstp
gs
mov
jmp
(bad)
pop
cmps
test
out
xor
in
dec
stc
and
out
jnp
pop
lea
xlat
fnstcw
sbb
inc
jnp
push
jecxz
in
push
inc
sub
mov
mov
clc
in
shr
sti
push
jns
push
call
mov
int3
adc
vmread
xchg
(bad)
dec
(bad)
rcr
in
ret
xor
inc
mov
scas
(bad)
sub
repz
inc
shl
mov
xchg
cmp
jp
dec
push
jmp
or
out
sub
scas
retf
(bad)
fsubr
out
pop
or
cmps
jle
retf
add
and
add
add
xor
push
into
add
(bad)
adc
(bad)
(bad)
test
sub
or
mov
and
repnz
scas
shl
scas
jmp
into
and
rol
adc
mov
ins
test
cmp
add
jp
repnz
or
dec
jb
aam
pop
sbb
mov
push
mov
fild
ss
pop
mov
dec
push
xor
sbb
mov
stos
sbb
daa
sbb
sbb
ret
push
xchg
or
push
add
jmp
pop
outs
sbb
mov
xor
adc
aad
jmp
mov
jp
sub
jg
push
push
dec
push
adc
mov
addr16
ds
fdivr
ds
mov
xchg
inc
call
loope
mov
adc
repnz
push
push
jb
push
scas
rcr
pop
loop
mov
mov
fwait
adc
jnp
ins
pop
aaa
sbb
clc
mov
push
cmp
push
mov
scas
inc
lea
push
repz
les
mov
std
or
adc
cmps
jo
sbb
fcmovnbe
pop
or
push
das
pop
repz
push
adc
dec
and
xchg
das
inc
popf
adc
fucomp
inc
and
and
sar
sub
pop
shl
mov
repz
repnz
repz
test
std
sahf
sbb
out
mov
mov
push
or
mov
out
ror
push
jb
push
cmp
and
and
imul
and
jmp
pop
pop
fsubrp
xor
push
cmp
xchg
cmps
jnp
push
(bad)
pop
mov
out
fstp
dec
cli
ds
mov
lahf
jge
mov
push
sub
xchg
int3
dec
jae
push
ja
push
xchg
push
leave
push
add
sti
jl
sbb
jmp
(bad)
loope
ret
loopne
retf
push
in
int3
dec
fcomi
test
jbe
aaa
jo
xor
jno
js
arpl
aam
(bad)
lds
jnp
mov
jb
cdq
push
mov
jg
rcl
repz
add
pop
out
and
ror
retf
inc
xchg
sub
hlt
test
dec
mov
mulps
rcr
inc
push
inc
cmps
push
retf
push
mov
popa
push
xor
or
rcl
ds
js
adc
pop
sub
inc
pop
cld
test
sbb
ja
push
add
rcl
bound
lock
add
sbb
or
retf
ins
adc
mov
call
push
out
ret
xor
xchg
fdivr
push
jo
fimul
xlat
(bad)
cmp
(bad)
push
(bad)
jno
mov
cs
lea
retf
rol
pop
jg
int3
loop
push
outs
arpl
cli
jno
jp
scas
sti
cld
les
in
xchg
shl
test
jnp
jno
arpl
jb
mov
mov
adc
in
mov
imul
xor
(bad)
jp
mov
mov
inc
dec
test
fs
or
sar
mov
into
add
js
sub
sbb
inc
adc
jge
movs
outs
pushf
and
cmp
xchg
or
add
jp
ret
xor
mov
cdq
arpl
jp
sub
pop
xchg
cmp
pop
icebp
ret
bswap
mov
push
not
push
cdq
cmc
rol
cmp
and
jo
iret
mov
mov
in
adc
mov
lahf
test
and
mov
jb
shl
xor
into
xchg
sub
push
(bad)
loopne
cmp
nop
xchg
push
and
adc
imul
outs
cmp
std
lahf
push
pop
mov
aad
cld
pop
jmp
mov
mov
mov
pop
jb
inc
arpl
add
mov
cmovo
jge
mov
fidivr
mov
and
dec
jbe
aam
jno
dec
pop
pop
pop
stos
hlt
div
mov
loop
call
popa
fcomp
nop
sahf
xchg
rcr
stos
ret
cmp
fild
movs
pop
xchg
adc
test
mov
out
add
push
xchg
sbb
repnz
push
inc
std
popa
xchg
dec
movs
cmp
push
iret
in
mov
cmps
rol
loope
div
das
or
retf
in
sbb
out
leave
xor
aad
popa
popa
dec
(bad)
bnd
in
or
jb
sbb
cmp
xchg
outs
sbb
mov
inc
aam
add
in
ret
sub
mov
loope
mov
sub
sub
push
adc
xchg
pushf
pop
sbb
arpl
aad
pushf
inc
gs
mov
adc
mov
mov
pop
jbe
(bad)
out
in
mov
shr
sahf
in
ret
imul
cld
test
sahf
pop
dec
shl
mov
sub
adc
xor
and
jl
(bad)
mov
inc
xchg
pushf
cs
jne
jmp
lods
jno
add
ss
aam
sbb
fimul
lea
add
out
std
jo
bound
xchg
in
(bad)
fadd
mov
ins
in
sub
int
cmp
bswap
mov
inc
jg
cmp
xchg
(bad)
and
sub
mov
xchg
sub
push
addr16
pop
adc
push
cmc
pop
jp
sub
cwde
jns
fild
add
cmps
data16
cwde
adc
pop
aaa
xchg
sub
cmp
sub
in
loopne
jmp
mov
push
jnp
pop
mov
bound
jmp
and
xchg
icebp
sbb
es
add
loope
loop
sbb
rol
adc
inc
xor
aas
add
and
xchg
add
jnp
repz
add
mov
jmp
pop
retf
mov
arpl
outs
mov
jmp
sti
add
mov
pop
mov
test
sub
xchg
jle
dec
jnp
dec
lods
pop
jns
xor
sub
push
xchg
ss
outs
(bad)
aas
or
xchg
dec
sbb
mov
int
lock
cmps
pop
imul
mov
cld
pop
xchg
loope
pushf
ins
fwait
(bad)
pop
sbb
imul
push
outs
push
dec
nop
xlat
adc
out
jbe
mov
inc
xor
inc
(bad)
push
mov
inc
cdq
add
xor
ret
aad
cld
(bad)
xchg
fistp
(bad)
mov
adc
stos
add
(bad)
pop
mov
mov
stos
xlat
loop
pop
cmp
mul
xor
fimul
and
mov
xchg
ins
or
sub
test
jmp
mov
xchg
dec
sbb
jl
push
cmp
add
mov
out
in
fsubr
push
(bad)
push
int
xchg
clc
call
iret
adc
(bad)
lahf
xchg
fsubr
popf
inc
xchg
retf
xor
pop
int
call
dec
cmps
aas
dec
push
dec
fadd
add
rcr
push
dec
and
sub
sub
lea
inc
call
inc
test
sbb
fcmovne
sub
mov
cmc
pop
les
and
add
ins
or
shl
outs
sbb
pushf
jp
loop
or
test
mov
ja
jae
movs
mov
xchg
dec
jno
in
hlt
add
aaa
test
jns
sub
add
inc
jns
ins
int3
push
adc
push
pop
mov
pop
lock
inc
stos
out
dec
dec
adc
adc
fisub
dec
movs
pop
pop
repz
adc
addr16
pop
(bad)
cmp
in
xor
cdq
js
mov
test
pop
or
mov
lds
sub
lods
imul
loope
dec
dec
pop
jb
mov
nop
push
sub
mov
and
sub
jbe
stos
dec
jns
test
in
cmp
xor
outs
and
retf
mov
xor
dec
lods
pop
cmp
jg
mov
xlat
sar
fwait
jle
inc
mov
mov
xor
mov
loop
push
and
and
lea
xlat
cmp
dec
test
mov
push
push
in
imul
inc
les
dec
ins
xchg
std
and
js
dec
dec
fdivr
out
sbb
jae
in
add
jle
inc
push
adc
mov
arpl
mov
les
or
jae
icebp
leave
jp
sub
test
in
(bad)
(bad)
aad
neg
add
std
cmps
dec
jmp
cmp
push
fldcw
cmp
bound
mov
pop
xchg
cmp
mov
mov
les
cmps
fsubr
aam
mov
dec
out
xchg
cld
and
gs
push
add
loop
rcr
dec
out
imul
mov
(bad)
sti
xchg
test
and
(bad)
mov
lods
jno
pop
xor
cmps
call
push
add
pop
call
mul
outs
loopne
mov
ja
or
mov
cs
cs
jp
mov
pop
adc
pushf
imul
xchg
xchg
sub
popa
mov
ja
call
test
loopne
les
stos
cli
(bad)
push
ins
mov
mov
inc
js
leave
jmp
push
(bad)
aad
sbb
scas
in
push
xor
repnz
mov
add
in
mov
pop
xchg
add
out
arpl
dec
adc
popa
cmp
cmps
push
pusha
fmulp
hlt
inc
int3
mov
into
sti
icebp
clc
enter
dec
adc
adc
jl
xchg
and
jp
jne
sub
xor
les
pop
(bad)
mov
fwait
into
mov
fsincos
xchg
dec
out
mov
cdq
mov
xlat
cmp
daa
cmp
ins
sbb
xlat
push
add
out
div
fwait
adc
push
retf
pusha
xor
jle
mov
(bad)
fsub
repz
dec
and
ins
rcr
jbe
add
js
push
add
jnp
lods
cmp
dec
xchg
pop
loope
into
sbb
sbb
dec
and
(bad)
pop
cmp
test
adc
ret
mov
icebp
(bad)
mov
and
fimul
int
push
mov
dec
icebp
sub
jl
xchg
push
arpl
adc
add
mov
and
movntq
hlt
enter
or
mov
adc
add
inc
movs
xor
and
dec
das
adc
and
sub
pop
fisubr
sti
loope
pop
rol
out
push
mov
and
adc
cwde
arpl
iret
jns
fucomi
leave
xchg
sbb
movs
das
(bad)
cmp
push
push
js
in
mov
out
mov
sub
add
loope
test
mov
cmp
inc
xor
lds
xchg
sbb
cwde
test
mov
push
stos
xchg
jbe
imul
sub
mov
jo
outs
fbstp
fs
mov
add
std
adc
mov
mov
add
push
jbe
cmp
or
mov
scas
push
repz
dec
mov
sub
movs
mov
leave
(bad)
clc
shr
shl
out
dec
push
jg
or
cmp
adc
inc
(bad)
das
leave
(bad)
stos
adc
ffree
in
ret
das
movs
push
push
icebp
dec
frstor
(bad)
retf
xchg
call
(bad)
xchg
pop
in
std
fisttp
lds
push
jns
jb
or
(bad)
cmps
jmp
xor
or
je
and
mov
fcmovnu
or
pop
xor
mov
sahf
adc
cli
lock
les
mov
xor
les
or
xchg
pop
inc
sbb
sti
add
shl
push
add
loopne
jp
enter
mov
mov
pusha
push
push
inc
push
jne
mov
outs
pop
bound
pop
push
xchg
outs
fcom
pusha
outs
into
out
pop
dec
(bad)
sahf
mov
mov
mov
retf
cmp
push
sti
sahf
inc
or
pop
outs
add
out
mov
fcomp
push
sbb
push
fwait
jmp
shl
pop
popf
jp
int
call
mov
imul
pop
push
lds
int3
sub
inc
int
dec
or
cdq
push
mov
mov
call
cmp
adc
or
das
fst
nop
sbb
aas
adc
call
jb
dec
pop
stos
mov
ins
adc
sub
sub
push
xor
movs
imul
(bad)
mov
dec
and
cwde
mov
pusha
sahf
daa
lods
retf
in
inc
hlt
jno
out
jns
push
fld
add
enter
sti
mov
mov
mov
jns
(bad)
enter
(bad)
int3
xor
push
or
lods
jg
push
mov
call
pop
adc
loop
(bad)
cmps
xor
iret
(bad)
lea
pop
pop
cmp
add
les
jnp
cmp
jmp
dec
push
lods
clc
or
push
clc
gs
add
out
sbb
adc
out
cmp
add
outs
aaa
mov
sub
(bad)
xor
loop
xor
lea
nop
xchg
aad
fisubr
ret
jge
pop
mov
push
adc
shl
lods
test
mov
pavgb
das
paddsw
popf
jmp
ret
xchg
cmp
mov
fs
fnstcw
popf
mov
cmp
mov
mov
mov
push
das
adc
adc
inc
sbb
aad
sub
es
inc
imul
stc
int
jl
mov
movs
cmc
sbb
push
(bad)
addr16
or
push
cmp
hlt
jno
leave
dec
scas
int
mov
gs
inc
jmp
rol
stc
aaa
mov
xor
adc
sub
jne
push
mov
jae
mov
mov
pop
sbb
aaa
ds
or
jb
minps
repnz
mov
mov
mov
aas
adc
pop
popf
ret
iret
sti
pop
xlat
push
lods
mov
enter
test
gs
cmp
loopne
sub
in
mov
sub
icebp
or
adc
push
inc
lods
cmp
cmc
icebp
dec
add
pop
cmc
pop
dec
std
mov
jle
div
mov
leave
jb
push
ins
(bad)
arpl
repnz
push
dec
pop
cmp
mov
sbb
pushf
outs
test
add
xchg
rol
or
sub
adc
(bad)
cdq
aaa
shl
not
push
add
add
(bad)
sbb
lods
in
xor
pop
inc
pop
cld
pop
xor
dec
jge
push
pop
fidivr
out
paddusb
add
jp
jmp
and
in
sub
test
jp
sub
push
adc
cld
cwde
dec
jmp
icebp
mov
retf
jns
mov
ins
push
or
xor
in
ja
sbb
sub
cmp
lock
xor
add
arpl
xor
loopne
add
scas
js
(bad)
sti
jnp
mov
and
mov
ror
xchg
adc
jp
les
icebp
sbb
(bad)
stos
push
add
loope
sbb
repnz
cmp
aas
inc
inc
dec
out
imul
and
xor
fisub
imul
inc
ss
xchg
adc
pop
adc
repz
sub
movs
adc
mul
push
outs
adc
fld
pop
aam
loop
in
sub
mov
jno
cli
call
xor
dec
xchg
pop
clc
ins
call
or
xchg
inc
ret
mov
repnz
mov
in
nop
in
mov
lock
inc
fiadd
mov
in
dec
je
lea
and
popf
mov
pusha
inc
fucomi
mov
xor
sahf
jb
je
ja
inc
mov
rcr
add
xchg
mov
mov
jb
pop
ins
movsx
jne
leave
mov
or
mov
mov
daa
dec
push
inc
push
sub
repz
imul
mov
sbb
pop
inc
jmp
(bad)
xor
add
dec
jne
mov
in
jge
js
jmp
or
xchg
cwde
cmp
push
mov
cli
mov
jp
pop
mov
(bad)
cld
dec
cmp
movs
push
sahf
or
into
popa
aad
add
fldcw
jmp
lods
mov
out
adc
xchg
lahf
ins
das
cld
add
cmp
js
mov
(bad)
icebp
jb
hlt
cmp
and
fld
mov
test
push
jne
sub
imul
cmc
push
xchg
sbb
and
les
jne
sub
retf
inc
adc
mov
outs
inc
mov
ret
arpl
cmc
xchg
jbe
sahf
inc
inc
inc
adc
cdq
repnz
jge
mov
jge
mov
int3
cmp
stos
push
loopne
dec
or
loope
ror
or
aas
in
push
(bad)
shl
lock
sub
(bad)
shl
test
cmp
cld
pop
(bad)
ror
inc
imul
lea
and
sub
retf
es
dec
push
mov
xchg
cmc
or
mov
push
sbb
stos
push
add
adc
mov
adc
popa
mov
dec
cmps
xor
jle
and
mov
test
stos
fld
dec
push
mov
popa
(bad)
cmp
pushf
ror
fstp
or
mov
mov
mul
adc
ret
mov
mov
xchg
mov
jp
sbb
and
mov
or
cmp
jmp
clc
add
mov
repz
mov
int3
sbb
aam
scas
gs
neg
jmp
iret
mov
mov
mov
dec
test
add
mov
mov
out
in
loopne
mov
lods
push
outs
dec
mov
das
leave
out
mov
xor
xor
jne
mov
xchg
mov
cmp
pop
jl
loop
sbb
fld
std
inc
pop
pop
inc
mov
jae
cmp
add
inc
frstor
cli
cmp
jmp
fld
cmps
cmp
jno
add
cmp
mov
outs
in
or
in
cli
outs
jne
xchg
pop
cs
cmp
jge
or
xor
popa
pop
xchg
mov
in
fwait
cmp
sbb
ficomp
adc
push
loopne
in
cmp
fldcw
mov
les
sbb
movs
repz
aas
push
into
jns
fld
les
add
inc
stos
sbb
fcomp
mov
rol
(bad)
ficom
lods
div
sar
mov
xor
sti
ret
cli
add
add
add
faddp
data16
mov
aad
ss
pop
ficom
mov
iret
jae
mov
int
sbb
jbe
mov
jae
shr
hlt
sbb
ss
jmp
test
in
fsub
icebp
jmp
in
das
push
mov
dec
cwde
push
dec
pop
pop
jp
imul
enter
jecxz
jbe
pop
or
add
in
fistp
lahf
std
call
mov
icebp
mov
xchg
push
push
pop
add
ficom
cmp
pushf
pusha
jno
add
mov
adc
ss
movs
fisubr
fst
xor
repz
xchg
cmps
dec
or
push
inc
pop
rcr
sub
fnstsw
movs
jo
ror
or
faddp
mov
cmc
dec
push
adc
sub
xor
push
xor
mov
sbb
push
push
cmp
test
and
xchg
mov
jp
dec
cmp
fnsave
adc
shl
inc
inc
rcl
das
mov
sbb
inc
dec
mov
nop
loop
pop
dec
outs
pop
call
jmp
cdq
pusha
fsub
imul
pushf
bound
call
je
dec
push
pushf
xchg
arpl
dec
pop
push
and
movs
test
je
mov
xor
pop
adc
imul
out
dec
(bad)
in
pop
push
leave
rdmsr
sbb
jl
cmp
xchg
loopne
mov
fbstp
test
mov
adc
push
sbb
in
jae
bound
faddp
lock
fsubr
fbld
clc
and
cmp
mov
into
dec
push
aas
jg
push
adc
ss
jnp
(bad)
adc
adc
cld
call
and
sbb
adc
jnp
and
push
pop
fs
lea
jo
xchg
pop
call
loope
aas
mov
icebp
mov
or
cli
pusha
cmc
mov
(bad)
sti
inc
jnp
push
fistp
jp
pop
or
std
cdq
(bad)
hlt
je
call
push
(bad)
lahf
jbe
xor
cmp
mov
xlat
movs
test
dec
jl
das
jg
js
cld
jno
sbb
ja
adc
movs
add
mov
push
retf
movs
fwait
jle
inc
dec
jo
aas
dec
cld
mov
loop
pop
mov
pop
cs
mov
jbe
xor
jmp
sbb
jp
movs
ja
scas
inc
cmp
sub
ror
ficom
mov
jg
adc
lds
or
cdq
bnd
cld
retf
out
push
mov
inc
cdq
(bad)
xchg
dec
das
add
in
push
sub
pop
cmp
(bad)
mov
cmps
push
pop
movs
lock
mov
pop
jnp
dec
dec
shr
outs
imul
add
ds
es
ins
push
iret
pop
iret
mov
cmp
call
xchg
pop
mov
xlat
stos
in
push
lahf
jb
stc
adc
mov
shl
js
pop
inc
jns
iret
adc
lds
xor
leave
mov
mov
es
or
or
sub
std
jnp
adc
xchg
mov
(bad)
xchg
or
xchg
loope
adc
fistp
push
xchg
mov
test
jg
sbb
das
push
mov
loop
dec
inc
or
push
xchg
inc
cmps
mov
mov
cmps
in
add
mov
cli
push
mov
icebp
xor
xor
std
ins
xchg
and
dec
or
push
pop
pusha
add
xchg
jecxz
rcr
fidiv
xor
fcomp
fcom
lock
jnp
ins
inc
and
ds
scas
pavgw
jl
sbb
iret
jmp
cmp
shr
stos
lds
cmp
out
mov
pusha
xchg
int3
mov
adc
pop
aas
and
pop
jp
ss
or
pop
aad
retf
fndisi(8087
and
or
popf
les
pop
xlat
lods
pop
xchg
jbe
push
push
gs
add
sar
or
sahf
pop
stos
pushf
cmp
xchg
fidiv
and
in
nop
sub
dec
(bad)
push
fdiv
ret
stos
cmp
leave
sub
lock
xchg
jmp
aas
sti
outs
cmp
push
icebp
mov
adc
push
dec
test
push
mov
jnp
push
rcl
push
es
fisttp
icebp
mov
aas
push
sbb
xchg
lock
cmp
pop
fimul
jbe
ja
jne
mov
sub
lods
bound
daa
in
push
push
cmp
jle
ins
push
mov
push
repnz
pop
js
push
mov
les
(bad)
call
cli
(bad)
mov
inc
push
enter
ret
cs
push
aaa
mov
ins
jmp
rcl
mov
neg
jae
clc
loop
aas
loopne
jns
aaa
mov
push
clc
push
rol
mov
jecxz
fstp
add
ficom
pop
inc
fisubr
pop
(bad)
loopne
push
std
jno
pop
sbb
aam
push
cli
fistp
mov
int
inc
sbb
jns
mov
es
ins
xchg
and
retf
xor
test
aaa
hlt
adc
jne
or
and
(bad)
call
pop
aas
pop
push
mov
mov
mov
mov
sub
xchg
dec
sbb
fwait
cmps
xchg
inc
stos
loope
pop
or
xor
dec
add
dec
dec
repz
fst
(bad)
push
aas
mov
push
rol
cmp
dec
(bad)
cmp
ja
aaa
adc
or
or
add
dec
mov
mov
push
sti
(bad)
mov
add
es
imul
popf
adc
cld
aad
xor
imul
dec
sbb
in
test
cmps
adc
xor
mov
imul
call
or
dec
pop
pop
xor
mov
sar
mov
out
xchg
pop
mov
inc
jl
stos
retf
cmps
mov
rol
and
test
ja
mov
mov
hlt
test
dec
mov
stc
sub
sub
fst
movs
sub
je
add
shl
mov
pop
mov
or
jp
pop
xor
(bad)
fadd
out
cli
xchg
out
jmp
in
adc
clc
xchg
push
dec
mov
(bad)
dec
mov
inc
sbb
lods
fwait
add
ror
jecxz
clc
mov
dec
sbb
jmp
pop
mov
fwait
daa
cld
push
inc
jbe
cmp
push
inc
loopne
jns
out
cmps
push
push
arpl
dec
dec
movs
xchg
push
pop
pop
push
in
stos
ds
sbb
mov
sbb
inc
lahf
leave
xor
daa
test
movs
out
fst
mov
push
sbb
xchg
jo
mov
mov
push
xchg
and
cmps
sar
add
or
popf
arpl
lock
cmove
enter
ja
sub
push
add
call
mov
nop
push
call
aam
in
mov
sub
jae
add
sar
loope
jnp
or
repnz
arpl
imul
mov
jns
jno
outs
outs
shl
mov
sub
ret
fs
in
inc
inc
inc
std
xchg
loopne
sub
jle
add
push
cs
inc
cmp
stos
iret
jmp
fcos
in
add
nop
shl
cli
movs
xchg
adc
cmp
cld
xor
shl
into
jne
std
dec
dec
add
sub
ins
mov
or
std
call
(bad)
(bad)
mov
jns
and
and
mov
xor
fsub
bound
sbb
out
stos
mov
mov
int3
sub
popa
mov
(bad)
stos
je
and
add
sbb
cmp
mov
call
daa
xchg
jo
xor
int3
pop
or
or
mov
repz
sub
xchg
mov
ret
leave
imul
fimul
das
cmps
fist
mov
inc
out
add
ins
inc
(bad)
xchg
into
mov
stos
mov
inc
add
iret
cmps
dec
ins
add
push
ja
pop
scas
inc
cwde
xor
sub
cmp
clc
xchg
mov
jmp
(bad)
cld
imul
or
mov
push
dec
jmp
movs
sbb
jmp
push
je
stos
shl
sbb
and
imul
inc
inc
xor
xchg
push
stos
mov
cmps
ds
inc
jb
sahf
in
mov
lods
sbb
rcl
fldcw
mov
loopne
push
stos
xchg
hlt
in
call
xor
jbe
je
(bad)
rol
imul
cdq
pop
aam
aam
jle
sub
mov
jne
dec
aad
sub
out
pop
cdq
retf
sbb
in
or
mov
jo
sbb
sub
jmp
or
cmp
pushf
cmp
push
jp
sub
or
cld
mov
repz
(bad)
dec
movs
stos
pushf
out
adc
sub
dec
bound
sbb
adc
mov
push
mov
sub
xchg
scas
lock
lea
jp
sbb
repz
push
inc
xchg
jecxz
sub
data16
iret
(bad)
sbb
pop
dec
cmps
psubusw
out
or
dec
out
dec
cmps
sbb
outs
ret
cmp
inc
or
cmp
or
test
lea
or
xor
add
mov
in
fbld
xchg
repz
loop
movs
jle
sbb
cli
test
sti
outs
push
clc
and
mov
and
stos
pop
pusha
js
pop
leave
popf
add
xchg
retf
xchg
inc
imul
jne
repnz
es
lds
out
mov
lds
xchg
adc
push
aam
add
pusha
pop
add
xchg
jne
xchg
rep
jmp
leave
add
or
adc
popa
and
or
imul
ins
sbb
mov
call
fimul
xor
push
retf
aas
sub
pusha
sub
sbb
push
mov
xchg
in
in
retf
or
das
pop
fmul
inc
add
aas
inc
ja
test
mov
mov
cwde
and
jg
cmps
or
or
cmp
fdivr
mov
and
aaa
cmps
push
adc
js
xor
popf
dec
std
inc
xor
jmp
and
sbb
jne
mov
cli
pop
(bad)
jns
loopne
repz
inc
ja
add
add
cpuid
jno
popa
test
clc
pop
mov
loopne
adc
pop
iret
mov
push
and
add
mov
call
(bad)
das
jecxz
int3
jle
xchg
jmp
js
push
nop
sub
sub
in
sub
ins
sub
int3
ins
mov
ret
call
(bad)
(bad)
xchg
xor
pop
mov
cmps
push
add
mov
je
stos
mov
sub
icebp
push
ja
(bad)
js
mov
gs
in
xchg
test
shl
dec
xor
mov
jnp
mov
mov
jecxz
dec
mov
pop
sbb
dec
fld
aaa
jne
cdq
sbb
(bad)
arpl
sbb
mov
and
cmp
fistp
ret
xchg
cmp
pusha
adc
icebp
repz
mov
inc
jns
add
fimul
cmps
loop
xor
loop
rol
stc
neg
clc
test
popf
cli
or
lock
inc
mov
or
ja
cmps
ret
mov
adc
rcr
inc
je
or
aaa
xlat
and
pop
sar
mov
jge
shl
aas
into
outs
or
mov
xchg
push
and
or
in
fisttp
dec
mov
ins
aam
jnp
mov
outs
cmp
cmp
mov
gs
mov
iret
nop
aaa
mov
ret
les
cmp
movs
(bad)
mov
gs
dec
jmp
shr
push
jns
mov
mov
call
sub
ror
xchg
loopne
cmp
or
xlat
sub
aad
in
cmp
push
arpl
add
sub
mov
push
icebp
fxtract
fisttp
mov
stos
jmp
inc
loop
in
cwde
and
inc
xor
stos
inc
sub
xor
jnp
jge
nop
pop
mov
mov
and
add
push
repz
jb
adc
les
inc
enter
mov
cmp
cmp
mov
sub
ja
loopne
sahf
jge
sub
cmp
sub
adc
jle
adc
fwait
mov
jae
mov
or
jo
hlt
fwait
jmp
loope
push
add
ja
jbe
dec
mov
pop
test
mov
outs
adc
test
add
mov
loop
xor
icebp
jp
call
in
sti
cli
mov
or
xchg
xchg
jmp
(bad)
xchg
ret
cmp
adc
inc
jns
fcomi
dec
hlt
xor
into
aam
mov
jns
popf
push
cmc
mov
outs
dec
xchg
fsub
sti
inc
adc
lahf
sbb
cs
xor
inc
lock
(bad)
out
jns
cmps
jl
das
lds
arpl
jae
xor
ja
xor
push
or
inc
push
(bad)
(bad)
add
sar
push
dec
fcom
cmp
inc
cdq
loop
xor
mov
mov
in
adc
jecxz
jl
pop
bound
mov
mov
mov
and
push
and
mov
(bad)
dec
out
clc
jne
xor
adc
sbb
out
scas
out
sub
pop
xlat
repnz
lods
mov
mov
sbb
inc
pop
adc
jge
nop
cmp
aaa
jo
adc
adc
inc
(bad)
fidivr
add
inc
pop
test
and
lea
xchg
xchg
cmp
cmp
movs
aaa
sti
pop
sub
mov
ror
and
xchg
das
out
and
push
push
push
std
fcom
xchg
cmps
jp
out
xor
xchg
pop
enter
mov
mov
mov
scas
push
gs
mov
mov
cmp
mov
icebp
and
mov
fstp
pusha
ret
mov
add
pop
mov
lea
push
or
adc
cmp
xchg
repz
sahf
jnp
xor
ret
stos
icebp
cli
mov
fdivr
mov
sar
add
adc
add
xchg
ret
ins
imul
inc
xchg
jae
fstenv
inc
call
mov
and
or
fwait
jne
pop
das
add
mov
inc
(bad)
popf
lock
pop
in
dec
xor
lock
and
mov
fcompp
cmp
jmp
dec
cmp
cdq
push
push
cmp
xor
jle
icebp
fnstsw
sbb
pop
and
and
mov
cmps
mov
xor
sbb
mov
lods
mov
pop
mov
mov
pop
gs
add
push
xchg
and
hlt
rol
retf
scas
lods
jp
aad
and
mov
dec
test
push
mov
ds
call
shr
xchg
jmp
lsl
mov
sub
es
push
dec
sbb
fisub
pusha
adc
xchg
fisub
repnz
loope
icebp
int
push
sub
or
inc
out
pop
dec
fist
sbb
pop
movs
add
xlat
and
jno
pop
loope
inc
mov
mov
not
push
sbb
push
jne
push
test
out
pop
pop
lahf
or
wrmsr
jnp
jne
jmp
retf
adc
mov
push
das
jns
lods
mov
pop
xchg
push
fcmovbe
xor
jle
jge
cmps
(bad)
in
mov
test
lahf
hlt
rol
jae
into
movs
xor
and
nop
ror
cld
ret
sub
xor
rol
out
fwait
xor
pop
(bad)
fisttp
mov
test
repnz
dec
push
xor
cmc
lods
xor
lock
cmps
inc
lods
in
xchg
inc
hlt
fwait
inc
and
js
add
ror
inc
scas
xor
call
mov
sub
ret
or
jg
aas
mov
sbb
arpl
test
xchg
les
xor
cwde
push
fbld
aas
ins
cdq
push
ins
add
or
retf
stos
daa
push
inc
(bad)
fwait
or
adc
jecxz
adc
cwde
test
xor
sub
mov
and
in
(bad)
loopne
retf
enter
xor
or
pop
push
cmp
mov
hlt
int
or
(bad)
movs
jecxz
push
sub
inc
push
add
xchg
mov
cwde
xchg
mov
repz
cmps
cdq
outs
iret
(bad)
lock
mov
ds
cmps
mov
out
sub
ja
out
add
pushf
inc
fisubr
xchg
sub
sti
cld
fidivr
mov
or
ins
mov
movs
scas
push
add
addr16
mov
sbb
cs
dec
jno
call
cmp
mov
xchg
pop
mov
jp
inc
fisubr
js
dec
xchg
mov
ins
fucomp
pop
cmp
shl
fcomip
xchg
jae
mov
push
jl
fnsave
add
jg
jno
jle
jl
mov
cs
inc
xchg
push
imul
add
in
sub
es
and
or
adc
pop
fld
movs
fs
mov
or
in
gs
inc
fmulp
in
mov
ja
in
jns
stos
sahf
push
(bad)
movs
push
and
sar
out
imul
cmps
mov
retf
xor
loop
test
pop
mov
fst
jmp
shl
ins
push
lods
sub
mov
inc
xchg
mov
outs
std
outs
call
inc
pop
cmp
jecxz
sub
test
out
sub
fsubrp
ror
jns
push
adc
xor
pop
adc
sti
pop
mov
loop
mov
sub
in
mov
push
push
or
sbb
push
movs
pop
hlt
cmp
mov
clc
stc
mul
out
lods
adc
mov
xor
mov
inc
in
repnz
and
xor
dec
cmps
mov
xor
xlat
xchg
mov
aad
cld
mov
out
shl
and
xlat
test
push
pop
popf
add
mov
xor
into
(bad)
out
imul
movmskps
xchg
rcr
add
je
sub
shl
js
test
xchg
sbb
out
sahf
int
and
dec
sub
mov
leave
int3
add
outs
aad
xor
cmp
push
hlt
inc
(bad)
clc
je
sar
adc
cwde
ins
scas
xor
sub
mov
in
adc
out
adc
mov
and
fsub
fisubr
movaps
in
(bad)
js
or
mov
shr
scas
mov
and
jb
test
or
and
popa
(bad)
int
rcl
mov
cmp
std
imul
jbe
outs
pop
jmp
stos
mov
or
daa
int
add
pop
cmp
add
iret
pop
movs
pop
out
fwait
jmp
xchg
retf
add
jmp
mov
cwde
xor
(bad)
std
sbb
sbb
jns
adc
dec
hlt
push
mov
popf
ret
pop
push
sbb
xor
sbb
data16
leave
mov
dec
movs
call
movs
pusha
pushf
fs
add
dec
jno
retf
stos
dec
ret
pop
jns
mov
inc
and
rcr
mov
or
mov
into
xchg
mov
mov
pop
jnp
cmp
lods
out
mov
psubusb
push
inc
fimul
pop
hlt
xchg
pop
icebp
push
imul
jecxz
sub
ds
add
inc
push
xchg
call
jp
cli
int3
fdiv
xchg
mov
sbb
aam
cli
jge
sub
and
push
out
fwait
repnz
pop
shr
cmp
mov
pop
sub
mov
push
mov
lea
mov
test
stc
add
mov
pop
mov
mov
sti
ret
adc
cmps
mov
xor
pop
ja
lea
xchg
xlat
xchg
scas
sahf
clc
(bad)
scas
push
sbb
dec
js
mov
mov
in
cld
sbb
adc
iret
(bad)
js
repz
ror
jecxz
push
dec
call
add
pop
outs
adc
jno
xchg
lahf
push
std
adc
arpl
mov
outs
jp
pop
or
fistp
inc
bnd
pop
std
add
or
dec
jae
push
mov
ret
stc
aas
adc
push
cmc
icebp
ret
adc
enter
mov
lods
cmp
jbe
retf
adc
xchg
out
xchg
mov
out
or
xor
bound
int
cmp
and
fs
mov
cmp
jmp
outs
loopne
cmp
or
sub
mov
stos
add
adc
cld
lods
bound
nop
xchg
fldcw
(bad)
ds
add
int
sbb
je
fidivr
inc
sbb
ret
adc
mov
stc
int3
adc
test
shl
jecxz
enter
xor
std
mov
je
lods
push
sub
jmp
ss
pushf
push
hlt
dec
pop
xchg
stos
ret
mov
mov
or
xlat
gs
jge
adc
sub
ins
sub
xchg
mov
out
outs
addr16
dec
outs
xchg
pushf
(bad)
stc
cmp
pop
mov
pushf
or
and
je
cmps
jl
inc
int3
sbb
add
repnz
stos
jmp
mov
push
inc
(bad)
popf
jmp
pop
sbb
retf
xor
adc
je
shr
call
loop
gs
test
ror
inc
mov
ds
nop
lods
push
sub
sbb
push
mov
dec
(bad)
retf
push
jg
push
push
pop
adc
fistp
mov
cmp
inc
int3
ins
cs
dec
sbb
stos
add
call
mov
ja
sub
in
or
pop
sbb
popf
adc
or
inc
sub
sbb
enter
fld
aas
inc
or
pop
pop
stos
mov
adc
add
jo
add
pop
lods
adc
and
jg
aam
sahf
dec
dec
xchg
mov
add
cmp
mov
test
stc
sbb
gs
cmp
dec
xchg
and
or
iret
out
mov
sar
ins
call
(bad)
xor
cli
and
cs
aas
lods
idiv
add
sahf
cmps
nop
inc
movs
jmp
ins
pop
inc
jecxz
test
sar
mov
nop
mov
sbb
mov
dec
(bad)
aas
fwait
stc
ds
inc
jnp
sub
fadd
xchg
mov
aam
into
es
pop
ss
lds
bound
mov
std
add
leave
cmps
xchg
xor
xor
xor
jb
leave
jne
dec
fbstp
popf
lahf
repz
dec
je
or
rol
aas
lods
repz
adc
push
inc
xchg
loopne
mov
repz
pop
repz
mov
int
int
mov
mov
enter
dec
(bad)
dec
mov
call
fild
mov
add
inc
cdq
fcomip
mov
xchg
pop
adc
fistp
clc
call
adc
adc
mov
gs
cmc
xchg
nop
lahf
mov
cdq
push
(bad)
arpl
addr16
cdq
test
mov
shr
aaa
adc
add
jl
and
push
fstp
sti
push
jns
lock
pop
xchg
sub
mov
cli
setl
mov
clc
lods
pop
nop
es
ret
cmp
rep
sbb
ret
in
imul
push
nop
and
inc
jecxz
mov
pop
xchg
js
cmps
inc
ror
outs
inc
jae
pop
xlat
dec
pop
je
test
fisttp
into
push
fiadd
repnz
jns
sbb
mov
xchg
mov
mov
xchg
cmp
scas
in
xchg
loopne
sbb
xchg
add
inc
es
and
movs
repnz
xchg
mov
add
and
sub
adc
cmc
xchg
mov
stc
xor
movs
xor
mov
sub
pop
xchg
cmp
inc
scas
xchg
mov
jmp
push
out
inc
cmp
xchg
jmp
xor
or
add
dec
leave
imul
inc
lea
in
adc
loop
retf
inc
ss
popa
test
aas
arpl
je
bswap
push
xor
or
pop
mov
jmp
fist
push
bound
outs
fild
pushf
jl
test
leave
out
xor
jmp
push
add
clc
addr16
js
mov
mov
int
(bad)
js
sbb
push
dec
popa
mov
popf
mov
stc
cmp
stos
inc
pop
add
fiadd
jmp
and
ds
addr16
(bad)
into
shr
daa
mov
mov
outs
cmp
int3
shr
jb
fs
enter
add
jo
mov
pop
cdq
push
add
leave
xlat
in
mov
mov
lds
loope
int3
pop
lock
add
popa
sub
mov
movs
mov
adc
test
cmps
pop
or
jge
loopne
jnp
adc
mov
leave
stos
test
sbb
inc
pop
jae
bnd
dec
cmp
addr16
push
test
mov
leave
cmc
dec
dec
test
fs
nop
mov
dec
lods
push
shl
jbe
xor
nop
cmps
(bad)
or
mov
jle
dec
mov
scas
or
mov
out
lods
aam
and
pop
(bad)
pop
sub
add
mov
iret
jb
pop
out
push
(bad)
jecxz
outs
inc
cs
push
add
jmp
in
sbb
pop
test
push
sub
in
repz
or
pop
sbb
sub
or
adc
push
adc
aaa
pop
xchg
mov
popa
mov
cmp
jp
adc
push
dec
cmps
mov
mov
sub
rcl
and
icebp
fsub
xor
shl
mov
pop
adc
mov
jp
sbb
dec
and
loopne
daa
inc
(bad)
mov
sub
mov
xchg
out
mov
sub
stos
push
adc
sar
cmc
enter
push
loope
fstp
push
push
mov
lods
test
cmp
add
pop
and
add
jns
push
pop
repnz
xchg
push
jb
mov
mov
sub
leave
sar
dec
test
pop
or
leave
fmulp
jnp
into
ins
imul
(bad)
in
mov
cld
mov
out
adc
mov
sar
and
cdq
and
jne
aam
lea
es
mov
jp
retf
in
rol
popa
aaa
mov
repnz
jne
nop
sub
add
dec
xchg
pop
outs
in
sub
mov
jae
cmp
add
mov
icebp
dec
mov
add
cwde
xchg
push
jno
push
sbb
mov
dec
xlat
dec
mov
jo
mov
jno
call
(bad)
repz
xor
and
mov
ins
hlt
dec
outs
add
mov
push
inc
stos
or
in
call
sbb
mov
dec
jae
sub
push
fstp
out
xlat
cld
push
outs
jmp
mov
fs
jge
call
leave
xchg
sbb
push
jmp
or
int3
or
sub
repnz
pop
repz
pop
(bad)
daa
xchg
daa
stos
sub
adc
fs
mov
push
xchg
xchg
shl
jae
mov
fdivr
popf
push
jg
cld
movs
scas
add
iret
push
pop
imul
movs
scas
push
push
xor
sar
jle
xchg
dec
lea
leave
stos
cs
mov
(bad)
into
repz
mov
sbb
rep
(bad)
and
and
bound
scas
push
clc
pop
sbb
push
inc
xor
push
mov
adc
xchg
arpl
addr16
inc
popa
jne
in
jl
fmul
jmp
dec
mov
lock
lods
sbb
or
jmp
fistp
dec
ds
push
jmp
mov
dec
xor
aad
(bad)
hlt
aas
je
fmul
xchg
xlat
outs
pop
cmp
imul
lock
sti
adc
or
stos
xchg
(bad)
in
out
push
es
dec
jo
sbb
push
cmp
in
or
mov
or
daa
pushf
cdq
jmp
jmp
in
leave
push
ss
mov
mov
push
mov
and
dec
sbb
loope
std
sub
xchg
add
push
icebp
fwait
or
cmc
push
(bad)
add
popa
das
inc
cmp
loopne
lock
mov
add
xchg
or
sub
inc
leave
dec
mov
sar
add
xchg
dec
stos
(bad)
xor
xor
dec
cmp
lock
push
pop
fsubr
lahf
pop
test
and
aam
idiv
sbb
stos
loop
pop
dec
dec
mov
or
or
adc
add
(bad)
pop
xor
cmc
jo
mov
gs
mov
fdivr
sbb
mov
fiadd
fstp
mov
sub
mov
xchg
push
xlat
and
mov
jne
and
sub
add
push
cmp
inc
lea
aad
shr
out
lea
sahf
xor
xor
push
push
ss
in
pop
scas
push
arpl
mov
das
out
push
setp
inc
push
inc
jmp
xor
jno
repnz
mov
xor
xchg
in
mov
dec
data16
repnz
mov
add
push
jae
pop
movs
jl
or
lea
jne
inc
sti
inc
shl
ja
pop
xchg
fidivr
lock
jl
cmps
sbb
add
mov
fnstsw
scas
ror
(bad)
and
popf
imul
adc
addr16
fmul
push
add
(bad)
out
xor
mov
cmp
(bad)
int3
xor
jae
test
in
stos
push
jmp
fstp
mov
xchg
pop
pop
pop
mov
(bad)
in
cmp
icebp
inc
icebp
xchg
and
outs
mov
pop
(bad)
js
pop
pop
mov
dec
mov
inc
jl
fnstcw
ret
pop
(bad)
jmp
push
cld
pop
dec
cmps
jle
mov
pop
je
sbb
cdq
fild
retf
cwde
scas
jecxz
out
movs
lods
pushf
xor
sbb
ret
mov
je
or
test
pop
cmp
pushf
in
mov
jmp
push
push
iret
sub
nop
mov
dec
dec
push
fs
out
cld
fnstsw
or
iret
pop
fucomp
mov
sbb
push
jmp
(bad)
movs
(bad)
mov
pop
jno
jb
lods
mov
mov
jae
test
xor
sub
fcmovu
pop
ins
retf
es
rol
sti
lock
jb
call
cmp
dec
cs
xor
cmp
adc
xchg
mov
jp
mov
pop
and
les
fwait
cmp
cmc
lods
mov
add
jmp
outs
xchg
dec
mov
stc
inc
dec
jo
enter
loop
add
mov
fdivr
je
int
dec
jecxz
ss
cwde
push
sub
das
push
and
sub
inc
or
sti
fstp
xchg
pop
imul
int
and
cmps
adc
rol
xor
xor
ja
mov
or
out
sbb
cmp
pop
addr16
cmp
stos
fcmove
fistp
pop
push
addr16
lahf
cs
cli
mov
shr
fdiv
ds
sub
mov
inc
lahf
movs
xlat
neg
jno
xchg
retf
aam
jmp
sub
and
pop
dec
shl
jmp
mov
xor
cmc
pop
adc
xchg
shl
sub
jns
in
call
sbb
repz
add
call
gs
mov
popf
pop
mov
mov
sub
xor
inc
xchg
adc
xchg
mov
test
(bad)
sub
add
jp
call
aam
mov
sahf
xchg
add
mov
mov
or
mov
mov
push
fsubr
push
inc
pop
dec
mov
inc
stc
addr16
shr
jns
or
int
sti
cmp
mov
mov
fdiv
sub
scas
ret
push
les
mov
xor
ret
or
lahf
push
mov
mov
mov
int
scas
in
cmp
repz
mov
pop
mov
into
adc
shl
loope
adc
xchg
ins
data16
test
pop
out
mov
push
inc
mov
sahf
sti
add
adc
lock
xor
bound
ret
ftst
fcmovu
cdq
movs
sub
dec
aas
fild
imul
es
adc
jae
fnstsw
xchg
repnz
mov
and
shl
setnp
mov
xchg
push
jle
inc
pop
jecxz
xchg
leave
out
ds
push
jnp
push
cmp
movs
call
jb
icebp
clc
repnz
and
ret
lods
sti
or
in
les
mov
or
mov
inc
and
dec
xor
stos
xchg
mov
mov
mov
and
cmc
ja
retf
ins
mul
cwde
scas
dec
mov
push
fldenv
fnstenv
mov
cmp
iret
movs
into
aaa
ins
nop
rcl
inc
mov
and
push
ds
xor
repnz
jl
pushf
dec
cwde
sbb
sbb
mov
cmp
fbstp
or
mov
leave
rol
jg
push
icebp
mov
cmps
pop
xchg
pushf
lea
jb
and
jo
fdivr
sti
inc
mov
inc
jno
xchg
push
sbb
xchg
xlat
(bad)
push
adc
js
inc
inc
sub
push
imul
les
mov
inc
cmp
mov
loopne
mov
dec
pop
cmp
ss
mov
ficomp
out
cdq
(bad)
push
mov
movs
inc
mov
fmul
fdivr
mov
jmp
shr
cmps
stc
std
jb
rcl
add
adc
gs
out
pusha
lods
idiv
cmps
inc
imul
inc
fs
jae
adc
add
xor
shl
ret
out
into
add
loope
in
out
push
sub
inc
fld
mov
xor
jmp
mov
cmp
(bad)
lock
mov
push
icebp
inc
mov
sbb
add
xchg
enter
adc
xor
add
push
xchg
pusha
call
sbb
push
dec
adc
or
popf
inc
fsub
inc
(bad)
loope
outs
or
jmp
sub
pop
out
mov
cmp
lahf
xlat
or
push
ins
nop
jl
mov
or
repnz
scas
jge
dec
xor
jns
cmp
push
dec
push
pop
jnp
jmp
cwde
call
and
loopne
jno
xor
in
xor
arpl
ret
xchg
mov
stos
jns
mov
aad
jno
imul
stc
aas
movntq
add
add
sub
data16
xor
xor
mov
pusha
bound
pop
or
popa
sub
add
jb
add
push
xchg
jb
or
or
fdiv
out
and
mov
in
out
sar
mov
pop
data16
xor
mov
mov
jmp
sub
aad
jnp
add
push
loopne
sbb
int3
fmul
inc
ja
clc
call
mov
cmps
add
div
outs
adc
retf
adc
out
in
mov
or
xor
stos
or
adc
rol
xor
xchg
and
pusha
lods
mov
push
aad
inc
xchg
or
int
mov
nop
mov
aaa
sub
frstor
xor
test
test
popf
jb
inc
mov
ret
cmp
pop
pop
jecxz
or
fstp
pop
xor
das
sbb
adc
int
ins
fnstcw
aam
ret
sub
or
adc
pop
dec
std
sbb
sbb
bound
retf
mov
mov
xchg
sahf
sbb
push
clc
sub
loope
fldcw
pop
and
cmp
imul
loope
pop
add
outs
out
daa
cmp
xor
xor
cmps
in
es
imul
ret
cs
ins
mov
loop
mov
scas
or
fsubr
retf
dec
fstp
movs
fld
loope
xor
mov
and
push
retf
pop
push
push
fld
or
sbb
aad
sbb
cmp
xchg
xchg
stc
inc
shl
xchg
leave
inc
inc
fwait
test
sar
push
push
mov
clc
mov
pop
inc
push
lahf
fisub
in
or
inc
data16
mov
aad
leave
jl
cmp
or
scas
sti
mov
push
xor
xor
push
(bad)
mov
mov
add
pop
fstp
pop
out
dec
enter
popf
fstp
mov
add
mov
in
mov
popa
call
mov
daa
sub
jmp
jmp
mov
fldenv
scas
cmp
shr
mov
clc
loop
jns
dec
in
adc
xor
nop
dec
in
js
les
sahf
cmp
daa
sar
add
adc
mov
jae
jg
lods
cdq
ins
sub
inc
sahf
dec
jnp
cmp
(bad)
xor
inc
repnz
leave
push
inc
push
bound
mov
sub
mov
xor
in
inc
aad
push
mov
mov
fsub
pop
mov
cs
mov
mov
lods
and
dec
int3
sub
jb
jmp
cmps
jne
cld
ret
mov
adc
fwait
pop
push
enter
xchg
pop
jo
cmc
mov
cs
pop
sub
sahf
lock
(bad)
addr16
in
pushfw
lock
ret
aam
ret
xor
cmp
cmps
xor
sub
outs
cdq
popa
jmp
sub
add
or
in
adc
jl
jecxz
dec
ss
sbb
inc
mov
in
mov
rol
or
fsub
outs
dec
pop
add
into
xchg
shl
arpl
call
or
pusha
ja
inc
addr16
mov
jae
aad
inc
push
mov
fadd
inc
or
ror
lods
aaa
mov
imul
fistp
movs
and
out
mov
push
popa
pop
sbb
pop
out
mov
rcr
inc
ret
push
dec
cld
xor
ret
jb
adc
ds
jae
or
ficom
aaa
(bad)
fisubr
retf
push
aam
call
mov
cmps
sbb
aam
and
or
xchg
lods
mov
xchg
data16
push
sub
sub
xor
adc
xor
ror
push
mov
sub
xchg
popa
and
sbb
bound
jns
rcr
hlt
test
dec
(bad)
jp
cmp
push
mov
mov
ins
pushf
xchg
daa
push
imul
jbe
lock
xor
fild
(bad)
shr
mov
std
add
fcom
bound
cmp
scas
mov
sub
int
scas
clc
loopne
pop
xor
xor
inc
lods
leave
aad
jne
pop
inc
mov
sub
xor
sbb
mov
add
fucompp
loop
in
mov
clc
mul
rol
iret
xor
fcmovnu
ss
fisubr
test
neg
pop
call
xlat
push
pusha
addr16
and
jae
imul
rcl
and
pop
ins
jnp
(bad)
popa
enter
popf
jg
cli
mov
push
xchg
mov
sti
sbb
add
shl
push
inc
jbe
inc
mov
or
inc
push
je
cld
sbb
inc
xchg
mov
ret
push
test
sbb
cmps
pop
sub
jne
scas
xlat
(bad)
repz
shl
push
test
jg
in
fst
mov
xchg
pop
mov
cmp
jle
leave
jmp
or
xor
dec
jo
in
ror
aaa
outs
mov
cmps
and
retf
shr
or
jmp
fwait
repz
add
pop
movs
jno
mov
bound
leave
mov
mov
cdq
(bad)
pusha
cmps
cmp
xchg
enter
push
es
fdiv
sub
cmp
xor
fcmovbe
call
and
add
and
mov
add
or
adc
test
mov
popa
adc
sub
shl
dec
sahf
aas
mov
in
test
imul
rcr
xchg
lods
sahf
sub
outs
adc
fisubr
push
imul
jae
pop
nop
mov
jmp
shl
fild
movs
jo
pop
(bad)
xchg
mov
inc
cwde
mov
imul
ins
fsub
cmps
fucomi
sar
add
ins
push
mov
add
repz
mov
jmp
es
mov
and
das
mov
pop
cmp
jno
(bad)
movs
mov
mov
inc
mov
push
(bad)
jne
int3
sub
test
sti
mov
sub
sbb
mov
cld
addr16
loopne
pop
adc
ss
pop
push
xchg
jne
dec
mov
es
call
jle
(bad)
clc
ja
add
aas
inc
add
mov
scas
dec
out
aas
daa
in
fmul
dec
rcl
aaa
cdq
(bad)
fwait
jns
cdq
gs
std
fsub
jae
mov
sub
sbb
js
dec
imul
bound
addr16
popf
push
fld
into
ds
scas
adc
inc
pop
ficom
cmp
sar
cmp
and
lds
imul
xor
sbb
inc
cmps
jbe
mov
dec
leave
and
sub
inc
inc
imul
out
xchg
jmp
mov
xor
or
xchg
jl
adc
dec
jmp
mov
sub
fiadd
iret
call
js
push
lea
aad
ret
in
(bad)
mov
mov
movs
aaa
enter
pop
xor
stos
lds
mov
mov
cmp
push
test
aam
addr16
in
scas
pop
inc
in
arpl
mov
dec
ins
scas
fwait
scas
fwait
mov
push
int3
inc
add
stos
test
inc
retf
dec
cs
pop
cmps
(bad)
(bad)
sbb
mov
addr16
add
push
xchg
mov
neg
gs
jb
stc
loope
leave
pop
rcl
es
mov
shl
outs
xchg
scas
pop
push
pop
lahf
xchg
adc
call
dec
out
dec
sar
mov
fidiv
aaa
rcr
hlt
imul
nop
and
test
cmps
sti
ret
mov
push
cmps
shl
add
add
jo
test
shr
cmp
call
dec
jge
pop
out
xchg
pop
mov
xchg
or
mov
test
fnstsw
cwde
dec
aam
pop
sub
out
les
push
push
ins
jbe
mov
cmp
mov
push
or
or
lods
and
pop
push
sub
adc
and
mov
mov
ror
movs
out
push
pop
outs
test
jno
pop
lock
sub
add
inc
lods
jmp
pop
push
pop
into
int
cdq
sbb
sbb
sti
xchg
cdq
ret
movs
in
sti
shl
mov
arpl
add
mov
push
sub
or
fcomp
cmp
(bad)
push
cmp
push
enter
js
call
lahf
dec
jnp
clc
sbb
test
idiv
dec
js
add
les
mov
imul
in
mov
push
jo
rcr
cmps
jmp
cmp
add
ins
sbb
dec
mov
popa
ins
sub
jns
xchg
shl
ret
mov
add
ins
sar
jbe
pop
aas
xor
in
sub
enter
jl
sub
icebp
ins
mov
xchg
leave
adc
rcl
test
mov
out
daa
push
jno
icebp
mov
push
popa
dec
iret
xor
sbb
mov
pop
cmps
scas
lock
test
jmp
hlt
outs
xor
sub
xor
xor
in
mov
push
add
sub
adc
mov
outs
and
sub
jle
dec
stos
fcom
dec
shl
mov
cmp
stos
stc
and
jmp
pop
pop
dec
xchg
cmp
pop
mov
and
xchg
pop
mov
sbb
fs
lahf
or
mov
rcr
adc
push
add
fsubr
(bad)
ss
pop
aas
retf
dec
push
mov
mov
jmp
arpl
lahf
xor
std
cmp
mov
movs
fistp
inc
jle
inc
fbstp
mov
popf
movs
cmp
stos
mov
jne
adc
pop
xchg
xor
or
mov
repnz
pop
xor
loop
je
mov
mov
seto
or
fldcw
stc
mov
push
pushf
xor
mov
jle
mov
cmp
jno
call
xchg
push
mov
push
adc
(bad)
fistp
sti
inc
add
inc
shl
push
(bad)
aad
push
in
test
sbb
mov
test
movs
dec
sbb
mov
xor
add
cmp
push
cmps
inc
pop
or
add
aaa
pop
cmp
sub
push
in
push
push
lods
fs
and
ins
mov
pop
jns
mov
xchg
sar
jg
xchg
mov
adc
mov
call
and
pop
xor
mov
pusha
xchg
push
cmps
lods
(bad)
jnp
or
in
es
stos
aad
and
in
mov
test
adc
dec
es
lahf
pop
xor
push
mov
sbb
xchg
xchg
mov
cmp
lea
cmp
cmp
ins
cmp
pop
mov
push
mov
jg
mov
cmp
push
fdivr
mov
outs
std
jns
das
xor
int
nop
xchg
cmp
mov
jecxz
mov
mov
pop
imul
enter
mov
mov
jnp
or
pop
aas
dec
jb
xor
cmp
ja
aas
jecxz
or
lods
xchg
or
or
imul
mov
push
pushf
sar
mov
dec
je
xchg
cmps
mov
mov
jge
push
(bad)
es
cmc
cmp
push
pushf
cmps
std
add
arpl
xlat
sahf
in
sub
rcr
nop
sahf
push
outs
mov
mov
jl
jno
mov
mov
dec
shr
ror
xchg
xchg
cwde
add
leave
mov
pop
ds
jge
sbb
mov
cmp
(bad)
sar
fisttp
dec
adc
cwde
nop
test
xchg
outs
mov
pop
ret
nop
fist
push
mov
pop
pop
push
scas
pop
daa
adc
std
adc
mov
stc
sbb
pop
stos
cmp
mov
inc
retf
iret
mov
adc
data16
push
push
add
stos
icebp
ret
imul
(bad)
lock
adc
icebp
sub
mov
push
jg
pop
retf
ins
inc
push
dec
adc
fisttp
xor
in
fsubp
push
push
pop
test
inc
sbb
xchg
ins
je
ins
shl
xlat
ja
fimul
push
inc
(bad)
sahf
aam
lods
jne
sub
adc
mov
jmp
addr16
pop
jo
sub
clc
inc
jb
stos
ja
xchg
xor
xchg
loop
sbb
add
push
mov
xor
movs
stos
push
ret
call
in
(bad)
call
sbb
mov
mov
fidiv
sub
lods
xchg
or
imul
xchg
jnp
inc
push
unpckhps
enter
sar
sbb
popa
ret
cmp
addr16
addr16
dec
aad
data16
cmp
jl
cmp
and
mov
les
fs
nop
cmc
xchg
mov
xor
push
ror
ds
xchg
rcr
(bad)
loope
inc
loopne
jbe
dec
cli
lea
ds
pop
add
push
lahf
sbb
in
aas
outs
mov
repz
rcl
outs
jl
fsubp
stos
arpl
fcmove
xchg
xchg
(bad)
sbb
ret
loopne
(bad)
sub
or
and
and
xchg
lods
les
pop
movs
lods
jbe
pusha
adc
jo
dec
ins
popf
mov
and
outs
xchg
dec
ret
sbb
push
lods
(bad)
xor
and
fnstsw
fadd
shl
dec
repnz
mov
add
out
push
stos
ret
leave
cmp
jae
pop
or
mov
jecxz
sub
adc
sbb
int3
dec
leave
xchg
mov
jg
pop
jl
(bad)
cmp
fbstp
call
jmp
xchg
mov
popf
push
pop
sub
js
(bad)
mov
ja
loopne
div
cmp
xchg
adc
movs
test
in
out
or
push
in
jnp
pop
sbb
mov
pextrw
xchg
mov
adc
pop
loop
cmp
(bad)
fidiv
loop
cmc
jo
ss
sbb
movs
jnp
adc
mov
sbb
outs
fadd
or
sti
push
aam
jmp
(bad)
(bad)
xor
xor
sbb
(bad)
daa
or
fidivr
xchg
cmp
fidivr
out
stos
pop
call
mov
dec
dec
and
jle
adc
push
(bad)
in
int3
mov
pop
mov
push
inc
xor
jl
out
push
push
mov
dec
mov
pop
mov
jge
jne
mov
dec
lahf
dec
in
imul
imul
add
push
xlat
icebp
or
aad
inc
push
in
je
jno
ret
and
arpl
lods
add
xor
std
imul
mov
shl
push
jbe
pop
cmp
inc
dec
add
in
retf
retf
adc
out
das
ja
push
and
add
mov
aad
sub
(bad)
cmp
jge
mov
push
ins
int3
cmp
rcr
mov
in
outs
or
pop
aad
leave
push
fstp
adc
jmp
add
call
idiv
push
push
xchg
inc
sbb
cmps
add
add
mov
popa
jmp
pop
scas
das
add
cmps
mov
lahf
and
stos
mov
sbb
jl
int3
inc
movs
jmp
imul
data16
mov
cs
xor
and
sub
fwait
sub
fistp
enter
rcr
sbb
dec
outs
inc
jo
xor
in
sbb
ins
in
jnp
push
in
xchg
ret
dec
in
sbb
sub
jb
shl
shl
inc
gs
cmp
in
popa
xchg
pop
jl
mov
fdivr
add
aad
loopne
sub
mov
pop
test
or
inc
dec
push
push
mov
movs
je
ja
mov
jb
cmp
aas
mov
int3
mov
jmp
push
push
leave
dec
xlat
stc
adc
mov
jecxz
inc
jl
pop
les
inc
inc
push
inc
sahf
movs
push
(bad)
(bad)
dec
mov
xor
sub
xchg
arpl
aad
in
adc
lods
rcl
pushf
lock
aaa
ja
shl
leave
inc
xor
(bad)
jns
lds
pop
pop
pop
or
mov
xor
pop
sahf
push
fcom
lea
test
movs
xchg
lods
jno
stos
lahf
stos
dec
(bad)
sbb
sub
sub
sahf
jbe
push
jo
push
in
jae
shl
lahf
cmc
mov
or
adc
lahf
stc
mov
xlat
push
jae
add
(bad)
or
jno
ret
pop
or
mov
jecxz
arpl
clc
sbb
icebp
bound
pop
call
jne
xchg
jae
mov
repnz
dec
cld
jge
aas
(bad)
fucomi
mov
and
xlat
add
cmp
arpl
sbb
push
fndisi(8087
scas
jmp
inc
(bad)
shl
mov
push
inc
adc
mov
add
dec
inc
fsub
leave
sbb
scas
dec
add
xchg
mov
(bad)
cmp
cld
movs
lea
ret
es
popa
mov
call
cmp
aas
push
loopne
jmp
pop
jg
mov
dec
pop
sahf
test
push
jg
in
icebp
addr16
add
add
outs
sub
adc
test
pop
ficom
pop
push
sub
outs
data16
nop
mov
mov
pop
push
sbb
ins
pop
mov
into
xchg
xor
fldl2t
dec
sbb
into
cmp
stc
dec
sub
xchg
mov
jno
sbb
std
pop
scas
jge
xor
adc
lods
leave
std
adc
pop
sbb
jnp
or
inc
scas
inc
and
nop
mov
mov
xchg
add
int
xor
xchg
sti
(bad)
sub
jbe
and
adc
xchg
std
es
xor
ret
sbb
int
aam
add
mov
add
mov
jmp
add
sub
xor
test
push
popa
in
xor
ret
repz
jmp
dec
xrelease
xor
jo
pop
in
fld
lea
dec
daa
mov
jl
shl
sub
call
mov
jno
mov
ins
push
int
inc
inc
popa
mov
aaa
mov
fstp
and
mov
movs
xor
aad
cmps
aam
scas
xchg
in
xchg
aas
fwait
and
mov
ret
lea
int
jp
stc
stos
mov
jns
stos
jne
jle
or
lahf
inc
jno
cli
jnp
mov
jb
jmp
mov
cmp
(bad)
adc
mov
pop
in
mov
idiv
add
push
cs
lock
stc
rcr
call
scas
ret
mov
movs
movs
leave
mov
mov
movs
bound
retf
cmc
jle
add
imul
xor
stos
push
inc
add
xlat
xor
mov
cmps
retf
sub
or
ret
js
push
push
mov
movs
(bad)
fs
xor
addr16
aaa
dec
xchg
ins
jmp
popf
in
sbb
dec
sub
scas
cmp
xchg
mov
and
ror
jle
mov
test
mov
outs
xchg
(bad)
mov
call
dec
sbb
pop
out
dec
in
call
jmp
cs
xchg
or
and
add
repnz
aas
mov
test
(bad)
in
daa
pop
adc
inc
repz
mov
xor
mov
ins
jb
pop
pop
cmp
mov
cmc
mov
leave
add
jo
push
add
sti
xlat
div
jmp
data16
js
cmc
movs
dec
pop
loopne
retf
or
push
imul
pop
leave
inc
jecxz
scas
(bad)
and
jp
xchg
mov
xlat
popa
adc
xchg
daa
rcl
jno
dec
je
(bad)
int3
aas
sub
or
xchg
push
sbb
lods
fdivrp
dec
mov
cmp
lea
and
dec
jp
ret
outs
je
sbb
das
cmc
inc
mov
add
xchg
jae
out
xor
mov
mov
jp
fwait
mov
sub
(bad)
mov
sbb
inc
xor
add
and
adc
daa
lods
inc
out
adc
popa
adc
loopne
jmp
neg
clc
dec
stos
sub
gs
cmps
mov
loope
pop
daa
add
cs
gs
inc
out
pushf
xchg
enter
js
out
leave
push
fmulp
cmps
(bad)
push
ins
mov
int
cld
inc
add
xchg
std
and
pop
popf
es
(bad)
sub
(bad)
xchg
mov
fidivr
scas
stc
add
ror
ret
sti
pop
mov
leave
aad
cmp
out
movs
sub
xchg
xor
outs
je
jge
mov
aam
mov
dec
sahf
and
lds
in
push
shl
push
std
ret
pop
push
fistp
in
stos
cs
mov
rol
cld
data16
adc
mul
pop
push
cwde
jmp
sbb
inc
xchg
mov
ins
lds
enter
mov
and
add
jecxz
sub
cs
or
mov
repnz
jae
xor
mov
mov
xor
mov
stos
push
jge
jb
inc
push
cmc
push
call
cmps
jp
aad
sbb
push
retf
call
cdq
adc
inc
or
rcr
mov
call
fdivr
div
dec
aam
sub
pop
and
in
sar
xor
bound
push
ret
out
push
xchg
(bad)
fcomi
cmp
(bad)
dec
xor
test
addr16
or
retf
xor
out
jns
jns
fsub
fcomp
xchg
call
mov
mov
hlt
pop
rcr
call
add
xor
push
(bad)
push
sub
mov
push
nop
cmp
in
pushf
mov
popf
xlat
mov
push
jne
mov
leave
sbb
sbb
push
xchg
cmps
loope
retf
push
adc
movs
mov
mov
mov
jb
xor
inc
(bad)
shl
sbb
add
loop
mov
or
test
stc
mov
pop
or
pop
dec
test
popa
pop
jne
jne
out
and
mov
jmp
push
or
xchg
xchg
dec
jge
les
cs
jae
adc
push
sub
jne
les
push
(bad)
pusha
shl
outs
loop
push
mov
lahf
or
popf
cmp
push
hlt
cmps
cdq
pop
imul
mov
inc
push
mov
or
ficomp
xchg
test
fs
pop
add
dec
pop
mov
dec
add
test
pop
mov
mov
ror
std
mov
pop
outs
outs
inc
xchg
pop
cmp
dec
pop
jb
sub
in
sbb
clc
in
jb
mov
cmp
test
mov
das
mov
and
lods
add
pop
pop
xchg
mov
inc
dec
je
dec
out
lods
repnz
das
or
bound
sub
ja
push
test
dec
push
add
lds
outs
std
data16
in
pusha
mov
lds
inc
sbb
lea
fwait
gs
fadd
ret
pusha
push
in
cwde
leave
add
mov
test
test
(bad)
pop
mov
cmps
push
popa
xlat
pop
pop
sar
mov
xchg
sub
push
je
dec
fnstsw
mov
cmp
mov
cmps
rcr
fcom
movs
cmp
add
and
push
(bad)
xor
pop
pop
(bad)
movs
test
dec
mov
(bad)
xor
wbinvd
push
xchg
rcl
and
pop
and
mov
imul
push
leave
daa
dec
aaa
mov
paddsw
in
imul
cmp
arpl
add
sub
push
jo
jnp
jmp
imul
(bad)
out
jg
xchg
leave
adc
mov
mov
mov
mov
or
daa
adc
dec
ja
mov
pop
(bad)
sbb
dec
ret
sub
addr16
dec
mov
movs
dec
fisubr
and
out
jns
mov
popf
arpl
(bad)
xor
lahf
test
jg
lea
add
cmp
into
cvtps2pi
dec
push
xchg
xchg
xor
sub
cmp
jle
cmp
or
pushf
neg
and
imul
cmp
dec
jl
cmp
ins
inc
jae
ins
pop
xor
lds
or
jb
pop
mov
adc
lods
jmp
sub
js
aas
ins
push
jno
mov
(bad)
std
cs
arpl
nop
pop
fisttp
into
jg
int
sahf
out
(bad)
call
loope
pop
cmp
adc
and
and
xor
inc
loopne
aaa
push
xchg
or
stc
cwde
call
mov
and
push
push
out
xchg
mov
jmp
cmp
repnz
or
ficomp
test
out
inc
ds
add
mov
sub
xchg
and
sbb
cwde
pop
sbb
mov
push
jns
test
ins
sub
mov
int
inc
data16
(bad)
jbe
retf
inc
push
inc
mov
or
pusha
push
sub
add
mov
fs
int
mov
xchg
xchg
sbb
cld
lea
sub
fistp
ret
push
into
je
mov
out
fcomp
mov
(bad)
fmul
xchg
xchg
inc
sub
mov
ret
cmc
sbb
into
loop
shl
fisttp
sahf
dec
out
add
jmp
pop
(bad)
jns
mov
lds
inc
dec
lods
and
xor
add
cmp
mov
and
fs
dec
call
ss
or
mov
jnp
stos
out
xchg
push
and
leave
cwde
or
ror
subps
sar
in
adc
mov
fidivr
mov
pop
mov
lahf
or
mov
sub
call
icebp
dec
vmulps
cmp
test
jne
xchg
stc
in
mov
lea
xor
jbe
retf
jbe
and
loope
sbb
test
(bad)
dec
xchg
pop
mov
xchg
cmp
adc
sub
(bad)
aad
aad
fisubr
inc
fisttp
rol
cmp
sbb
cmp
sub
cmc
jno
call
loop
pop
out
cdq
ja
call
stos
sub
fs
mov
pop
fs
stos
ins
xor
or
dec
pop
sbb
test
push
lds
lods
cs
mov
stc
jb
int3
adc
lds
(bad)
ds
jb
in
add
mov
jns
loope
iret
cmc
repz
imul
std
mov
cmp
je
add
and
aaa
out
out
or
(bad)
leave
loop
out
adc
arpl
cmp
cdq
enter
ins
or
cld
cmc
idiv
and
into
pop
fidiv
imul
pop
dec
ror
pushf
test
aad
xchg
jne
jg
imul
test
mov
lock
jmp
pusha
adc
into
sub
push
loop
sub
adc
mov
mov
sbb
cmps
adc
jmp
inc
adc
je
int
dec
xchg
adc
(bad)
repnz
sbb
dec
(bad)
seto
in
arpl
or
mov
and
and
and
inc
cmp
inc
sbb
jbe
(bad)
mov
je
std
call
int
aas
pop
adc
out
mov
(bad)
(bad)
(bad)
push
adc
pop
xchg
mov
mov
or
cmps
(bad)
mov
or
jnp
pop
cmps
mov
fwait
out
outs
(bad)
fisub
lock
dec
xor
mov
xchg
sub
test
lods
mov
pop
inc
or
jno
pop
push
pop
ins
mov
(bad)
push
aas
out
and
imul
jb
cs
cs
jo
mul
iret
sub
jno
dec
test
mov
push
jae
es
pop
mov
scas
pop
repz
xor
inc
mov
add
sbb
iret
cmp
or
sbb
popf
cmps
repz
ror
mov
dec
sub
push
inc
inc
ins
loop
fadd
add
cdq
mov
mov
xchg
in
mov
dec
sbb
mov
push
outs
idiv
imul
gs
test
outs
outs
pop
sub
test
loope
and
sar
dec
jns
inc
int
shr
sub
xchg
push
call
in
je
jo
and
cld
mov
dec
fcomp
jno
imul
aad
mov
and
xor
test
mov
push
test
daa
outs
cli
popa
stos
pop
js
movs
add
push
mul
mov
and
add
push
icebp
mov
ja
mov
loop
jbe
imul
iret
adc
mov
adc
dec
arpl
fcom
or
int3
out
cwde
dec
adc
add
inc
shr
inc
sti
adc
push
les
lods
out
and
jne
xor
mov
sbb
jle
outs
xchg
inc
adc
or
sub
push
fstp
xchg
ds
vphaddbd
cwde
jbe
and
pop
aas
pop
sti
add
jecxz
je
imul
es
jmp
dec
xchg
retf
inc
aas
pop
cmc
mov
adc
push
xor
bound
stos
mov
jmp
xor
out
jmp
mov
fdivr
fwait
mov
sub
push
mov
scas
xor
push
enter
mov
sub
xor
(bad)
call
sbb
cmp
mov
pop
mov
jmp
and
mov
lods
clc
mov
iretw
push
mov
lahf
shr
xchg
aas
shl
xor
sbb
(bad)
jmp
xchg
dec
fstp
mov
cmps
xchg
inc
jnp
(bad)
scas
mov
sbb
xchg
inc
pop
xor
sub
shl
movs
(bad)
out
call
mov
dec
mov
add
xor
fbld
lock
out
(bad)
mov
pop
pop
cmp
xor
push
or
(bad)
retf
xchg
repz
lds
pusha
push
(bad)
and
ror
and
xchg
ret
outs
pop
loope
push
les
sbb
and
je
movs
and
frstor
adc
jecxz
cmp
add
xchg
outs
nop
in
xchg
jnp
rcl
dec
ins
repz
or
push
frstor
(bad)
mov
pop
in
test
adc
cdq
push
add
aam
popf
and
dec
push
fidivr
and
mov
push
adc
push
mov
push
adc
jmp
aam
rdmsr
out
pop
cmp
add
cmp
arpl
jecxz
aas
call
mov
stos
xor
movs
mov
icebp
adc
ror
bound
dec
cmp
pushf
icebp
out
xchg
ret
inc
dec
jmp
or
xor
sbb
sysret
jmp
stos
call
xchg
adc
stc
mov
adc
jl
fsub
xchg
and
mov
push
sub
pop
dec
loop
in
in
mov
mov
arpl
loopne
mov
sub
mov
fcomp
push
adc
and
lock
retf
mov
add
pushf
push
cld
or
(bad)
mul
gs
sbb
sbb
mov
loopne
or
push
out
xlat
add
dec
cmp
push
iret
inc
jns
fmul
jmp
inc
outs
aad
aam
push
ins
sub
fcomp
mov
pop
sbb
addr16
inc
fistp
and
sub
push
imul
cmp
pop
(bad)
sub
xchg
push
cmp
jg
enter
leave
pushf
xor
adc
sub
jecxz
xor
fild
mov
rol
ins
pop
repnz
mov
outs
xchg
outs
sbb
xchg
and
ja
mov
push
jp
push
mov
test
fneni(8087
or
int3
push
sti
ins
push
mov
jns
xchg
mov
xor
fstp
xchg
jge
cmp
jbe
inc
dec
fcomp
(bad)
(bad)
cmp
add
stc
xor
ins
mov
inc
xchg
cmps
call
or
in
xor
jne
add
xchg
add
imul
jmp
in
gs
movs
mov
xchg
cwde
fild
in
pop
loop
test
cs
xor
sar
fcom
cs
jnp
out
adc
sub
aam
loope
in
mov
xlat
add
jae
js
xchg
leave
lea
mov
rcr
mov
ins
jmp
popa
dec
jmp
or
push
or
popf
jecxz
dec
push
bound
adc
repnz
xchg
sahf
and
push
inc
inc
pusha
xor
inc
xchg
cwde
push
inc
icebp
enter
sbb
xchg
add
shr
add
mov
leave
lds
imul
cmps
(bad)
outs
icebp
sub
sahf
mov
xchg
pushf
addr16
imul
xchg
dec
push
(bad)
iret
jg
push
cmc
add
lahf
dec
jp
aad
lods
mov
jb
xchg
xchg
fs
aaa
data16
leave
mov
sub
add
dec
dec
inc
fldcw
cmp
mov
les
(bad)
mov
shr
or
add
xor
mov
fs
cmp
inc
jle
ds
mov
pop
aam
push
test
das
adc
in
xor
bound
lea
lds
add
lea
push
jns
gs
mov
lahf
jle
sti
sbb
in
(bad)
sbb
jns
fdivrp
fsub
nop
in
cdq
fwait
push
push
mov
ds
pop
arpl
xlat
in
dec
js
movs
sbb
mov
in
dec
pop
fiadd
dec
loope
sub
inc
ds
es
ins
repnz
pop
mov
xlat
cmc
test
fwait
cmp
jl
sar
hlt
sbb
(bad)
addr16
mov
add
mul
xchg
mov
push
xchg
lds
cmp
and
push
pop
pop
dec
mov
mov
sbb
cwde
call
adc
aas
inc
gs
xchg
movs
jge
xchg
cdq
ds
jmp
fcmovne
adc
sub
push
and
sbb
pushf
icebp
repz
mov
add
outs
inc
test
mov
aam
(bad)
jmp
and
retf
inc
and
cmp
repz
shl
push
ret
and
xor
pop
or
pop
iret
daa
retf
xor
fwait
sbb
add
mov
sub
xchg
rcl
xor
xchg
mov
es
cmp
shr
test
popf
(bad)
cmps
mov
push
pop
arpl
jmp
test
jmp
push
leave
call
cmp
aam
adc
sbb
leave
retf
aaa
into
dec
stc
ss
add
call
push
ror
mov
int
pop
sub
and
fldl2e
test
scas
jmp
scas
retf
adc
int3
push
xor
in
mov
dec
push
xor
push
fnstcw
(bad)
pop
fdivr
and
shl
jno
mov
inc
ins
pop
or
pop
mov
fidivr
jno
or
mov
push
retf
fisttp
pop
jne
adc
test
cmps
fdivr
pop
dec
ror
sub
mov
ror
dec
cmp
cwde
mov
das
sbb
into
les
nop
out
fdivr
outs
jle
inc
xadd
xchg
popa
add
cmp
xor
mov
jmp
test
into
leave
add
fnsave
dec
or
adc
and
sbb
fwait
push
cld
xchg
lock
sahf
cmp
and
mov
sbb
(bad)
hlt
mov
inc
push
pop
sahf
jmp
mov
aas
mov
fs
imul
lods
xchg
mov
iret
sub
addr16
and
pop
dec
sub
and
lock
pushf
push
dec
sbb
jmp
bndmov
lods
sbb
sbb
pop
pushf
out
scas
lods
imul
(bad)
popa
mov
mov
cmp
(bad)
jo
mov
pop
ficom
add
jg
pop
pushf
or
(bad)
cmp
cmp
rcl
call
jns
imul
out
mov
js
inc
add
xchg
mov
ror
fimul
jae
inc
rcr
test
clc
jg
mov
lods
sub
test
fmul
and
mov
inc
out
pop
dec
cmc
dec
rol
daa
adc
loope
ins
mov
add
xor
mov
retf
leave
dec
in
jmp
in
pop
std
aam
mov
int3
push
inc
and
push
pop
sahf
mov
fwait
xor
into
sub
mov
mov
adc
inc
push
ret
push
fdivr
xor
sub
arpl
outs
or
cmp
or
scas
popa
cmps
push
mov
jnp
cmp
ror
ret
out
xor
or
add
std
imul
out
repnz
leave
ins
mov
cmps
sbb
sbb
(bad)
lock
sti
sti
adc
push
(bad)
xlat
mov
dec
imul
test
cmp
test
xchg
cmps
sub
and
adc
push
sub
adc
or
mov
hlt
or
pop
adc
adc
xor
push
mov
jo
call
mov
xchg
dec
push
dec
lock
(bad)
jae
mov
dec
pop
pop
loope
sub
xchg
test
xor
ret
mov
xchg
xchg
shl
xor
stos
xor
sbb
mov
test
mov
cli
jnp
(bad)
addr16
inc
sahf
add
enter
je
push
sbb
retf
sbb
lds
push
sar
push
fistp
xor
scas
int3
adc
add
cdq
sbb
into
dec
and
les
in
or
jnp
or
nop
lods
push
pusha
cmps
out
or
xchg
cmp
or
ins
dec
retf
inc
int
pushf
mov
test
xor
add
push
inc
movs
dec
mov
loope
pop
cs
es
sbb
iret
cmp
shl
aas
add
inc
les
in
mov
xor
mov
outs
aaa
cmp
cmp
pop
dec
or
out
(bad)
add
mov
mul
cmps
xchg
ret
jecxz
daa
outs
xchg
lds
sar
jo
mov
(bad)
cli
jmp
cmp
jne
adc
shl
lods
mov
dec
mov
stos
mov
aad
sub
push
imul
popa
jge
icebp
jne
loope
push
sub
rol
adc
push
cmps
out
and
neg
xchg
int3
xchg
pusha
int
pop
inc
pop
test
pop
cmp
aam
loop
lock
loope
xchg
mov
fidivr
mov
pop
xchg
pop
pop
and
(bad)
in
(bad)
cmps
test
mov
outs
iret
sub
loopne
or
dec
stos
adc
in
adc
test
shr
cmps
add
arpl
retf
hlt
dec
hlt
dec
jne
fstp
int
and
jp
not
daa
jbe
nop
xchg
push
cmp
cmp
ins
lods
rcr
and
and
test
shr
sbb
pop
adc
adc
pop
in
jns
mov
outs
lds
imul
mov
cmp
or
mov
xlat
adc
in
add
js
movs
pop
push
xor
lea
xchg
lea
sbb
and
fmul
xor
mov
cmp
mov
sbb
mov
dec
stc
icebp
push
jae
cmp
test
mov
adc
cmps
jae
ds
repz
unpckhps
cmp
jmp
fwait
call
adc
sub
dec
sub
cwde
std
mov
cmp
mov
mov
mul
xor
ins
repnz
jmp
pusha
test
mov
loop
lock
add
in
push
ja
jmp
cdq
add
stos
loopne
mov
out
mov
or
hlt
dec
jmp
fadd
xor
or
mov
jne
cmp
dec
push
fcomp
pop
adc
jne
hlt
out
loopne
sbb
sub
pop
inc
adc
adc
mov
je
jecxz
sbb
jb
retf
or
jecxz
lea
pop
cmc
or
add
daa
lods
iret
sub
mov
jmp
int
ret
nop
adc
outs
push
fisttp
sbb
fwait
xchg
add
mov
lea
push
pop
cmp
not
mov
lahf
inc
mov
lods
and
dec
pop
xchg
lahf
jno
retf
xchg
loope
mov
jo
cmp
mov
pop
adc
pushf
stos
inc
je
ret
(bad)
sar
hlt
cld
cmps
jl
movs
adc
sbb
inc
mov
aad
popf
call
mov
add
clc
xor
out
or
(bad)
adc
(bad)
aam
push
loop
cdq
pop
(bad)
sub
xchg
pop
dec
push
mov
dec
ds
aaa
sbb
jno
stos
sbb
sbb
in
xchg
data16
sub
jmp
lea
dec
in
sub
xchg
lock
mov
stos
mov
mov
outs
or
jmp
loopne
outs
repz
push
(bad)
jno
mov
push
clc
(bad)
mov
xor
mov
dec
pop
xchg
pushf
pop
and
fstp
inc
lods
pop
mov
jecxz
sahf
inc
mul
mov
or
es
pop
push
jp
xchg
xchg
cmps
bnd
test
mov
ret
adc
out
aad
fcmovu
es
cs
(bad)
outs
dec
test
jecxz
xchg
sbb
icebp
dec
fistp
jo
add
stos
ret
xchg
in
xchg
xor
fimul
out
stos
mov
pop
sti
mov
cmc
mov
lods
aad
in
stos
cmp
mov
movs
pop
sbb
sub
mov
aad
adc
ret
jb
adc
(bad)
ficomp
cmp
and
imul
mov
mov
jmp
mov
push
gs
inc
and
repz
mov
pop
mov
cdq
imul
mov
in
pop
jnp
sahf
lods
dec
popf
push
mov
mov
push
loopne
mov
imul
inc
or
jmp
in
sub
inc
add
loopne
arpl
out
sbb
mov
fmul
mov
icebp
(bad)
mov
mov
aam
hlt
icebp
popa
push
dec
stc
sar
add
mov
pusha
test
retf
cmp
sti
(bad)
pop
aaa
fldcw
outs
push
mov
mov
test
inc
mov
out
mov
ins
neg
cwde
cmp
or
in
stc
pushf
jnp
nop
repnz
imul
pusha
adc
call
xor
inc
lds
lock
ret
addr16
mov
mov
ror
sub
idiv
add
cld
outs
cmp
or
pop
xchg
pop
or
clc
in
push
push
xchg
inc
fistp
add
cmps
sti
(bad)
lods
jbe
mov
cmps
xchg
mov
add
retf
stc
cmp
mov
ret
adc
or
jno
ror
aaa
jbe
rol
mov
cmp
jg
outs
sub
pushf
jg
in
inc
inc
pushf
or
or
mov
retf
aad
inc
mov
dec
sbb
repnz
icebp
sar
daa
push
jp
sub
imul
jo
mov
mov
mov
repz
pop
(bad)
pop
sbb
sub
jnp
mov
pop
sub
mov
jle
xor
sbb
xor
fild
(bad)
xchg
dec
xor
in
mov
in
das
shl
mov
outs
inc
les
adc
mov
xchg
pop
jl
push
int3
sahf
adc
out
in
cmc
bound
xchg
fisub
lds
cmc
lds
sub
or
dec
in
jo
arpl
xchg
shl
mov
push
daa
mov
mov
out
dec
mov
ror
(bad)
jmp
mov
sub
ret
adc
cs
mov
int3
jno
cli
and
pop
mov
outs
das
push
outs
lods
movs
xchg
push
ins
mov
call
mov
xor
cmp
jmp
adc
dec
mov
mov
in
rcl
cld
out
sbb
or
popf
push
push
cmp
in
add
jo
clc
stc
inc
pop
loop
cmc
and
push
out
inc
inc
pop
cmps
and
ret
jne
jecxz
jmp
call
lahf
test
cmc
ror
jecxz
fcom
sar
fs
fild
daa
fadd
in
mov
dec
dec
imul
xchg
ss
sar
xor
mov
sbb
(bad)
mov
mov
pop
aaa
and
and
cmp
push
aas
push
jno
outs
or
push
pushf
movs
pop
shr
in
sub
out
gs
inc
iret
or
dec
mov
in
test
dec
loope
jmp
dec
out
out
test
mov
mov
cmp
repz
pop
add
scas
or
es
mov
ficomp
xor
test
mov
jb
(bad)
or
pusha
mov
cmp
or
mov
xor
mov
mov
add
mov
or
adc
jo
ret
mov
popa
rcl
(bad)
repz
hlt
jbe
mov
cli
ret
xchg
mov
xchg
inc
clc
adc
jne
mov
ror
emms
stos
mov
dec
cmps
into
data16
ret
pushw
enter
(bad)
in
cs
dec
addr16
or
sub
adc
inc
dec
xchg
adc
fisttp
adc
fistp
push
and
sub
rcr
or
xchg
adc
in
sar
mov
push
push
sub
cmp
(bad)
fidiv
sbb
xor
add
sub
pop
fs
fst
push
pop
fisubr
xchg
mov
or
sti
lea
pop
enter
test
rep
jbe
inc
push
movs
outs
fs
mov
in
pop
ss
xchg
adc
fcmovbe
aad
mov
ret
jp
mov
mov
push
test
imul
repz
push
add
xor
push
jb
sbb
pop
test
pop
jbe
pop
mov
sbb
test
fcmovne
mov
lahf
enter
jp
jns
outs
push
xchg
in
out
and
and
mov
fs
or
test
pusha
gs
xchg
arpl
daa
cmps
rcl
push
ins
ret
fimul
les
jae
sub
cmp
ss
aam
or
gs
sbb
xchg
pop
rol
jo
sub
xor
jo
fmul
call
aas
clc
adc
dec
test
cmp
jl
iret
movs
fdivr
js
rcl
fiadd
mov
loopne
shr
sub
sar
sahf
lock
js
xchg
dec
and
cli
hlt
jle
rol
iret
xor
gs
cld
fcmovb
inc
lea
loope
push
cs
xchg
jb
scas
int
xchg
les
sub
push
call
out
jns
repnz
adc
int3
in
adc
aam
cwde
ins
xlat
or
xor
mov
push
fnsave
adc
mov
mov
mov
adc
xchg
dec
inc
lahf
cwde
cmp
push
stc
frstor
or
mov
add
cmp
mov
in
(bad)
nop
dec
inc
sbb
nop
add
inc
add
xor
jmp
cmp
addr16
jecxz
ins
xchg
fist
gs
pop
inc
fild
imul
fwait
das
retf
push
push
xor
test
add
mov
pushf
sub
inc
jg
sbb
ret
add
mov
push
test
mov
pop
cmps
cdq
lock
inc
sub
xor
mov
xor
mov
fsub
xchg
cdq
shl
fimul
gs
xor
jp
lahf
mov
retf
dec
or
pcmpeqd
dec
push
pop
pop
in
or
stos
loopne
mov
mov
mov
ins
mov
jle
xchg
add
fcmovnu
ficomp
cld
into
test
repz
sub
or
or
arpl
xor
pop
and
or
lods
mov
movs
mov
loop
push
sub
scas
jle
lea
fcomp
pop
sbb
test
das
or
int
(bad)
hlt
or
clc
gs
mov
lock
hlt
add
adc
imul
shl
ret
fistp
cs
xchg
mov
das
adc
aam
inc
add
jns
and
cmps
outs
mov
sbb
sub
div
jne
push
jno
in
mov
adc
(bad)
ins
mov
mov
inc
pop
cmp
inc
out
sbb
out
jecxz
arpl
or
fst
xor
sub
mov
call
push
add
scas
jge
mov
or
jg
addr16
or
push
mov
repnz
add
out
add
pop
add
sub
push
xlat
ins
ss
outs
xlat
or
jb
call
pop
xor
gs
stos
stos
sbb
outs
shl
nop
push
lahf
and
inc
add
inc
je
loope
dec
lods
sbb
mul
jb
jmp
int
xchg
dec
pop
int
pop
div
les
outs
jo
mov
sahf
mov
sbb
ror
outs
in
out
hlt
popf
ss
push
add
jmp
mov
(bad)
mov
outs
push
or
call
pop
pop
mov
(bad)
out
cmps
push
cmp
sbb
mov
pop
std
xchg
push
pop
sahf
(bad)
nop
lds
cmove
popa
stos
aad
push
bound
cld
push
sbb
jae
ret
mov
dec
xchg
jecxz
retf
aas
xchg
retf
cmp
inc
sub
xchg
out
push
push
push
inc
and
cmp
scas
fidivr
jp
(bad)
cmp
les
gs
jbe
mov
das
cmp
(bad)
cmp
scas
shl
shl
mov
je
jle
retf
mov
adc
add
cwde
aam
popf
mov
inc
add
retf
or
or
xor
repz
mov
and
test
ins
cdq
mov
(bad)
(bad)
arpl
lahf
jge
(bad)
stc
ret
hlt
mov
adc
fnstcw
mov
cld
out
jo
push
mov
cmp
movs
clc
sahf
push
jbe
push
(bad)
push
pop
mov
xor
cdq
jle
lahf
pop
fisttp
int3
mov
mov
cmp
mov
into
cld
cmp
xchg
xchg
xchg
test
inc
ins
xchg
xchg
inc
mov
outs
cmps
mov
jmp
xchg
dec
push
sub
fidivr
push
ins
adc
std
push
xchg
or
addr16
fstp
outs
jge
clc
sbb
daa
push
scas
jmp
in
fisubr
jnp
cmp
outs
into
dec
mov
inc
sub
mov
daa
mov
jge
jmp
sbb
cmc
and
xchg
bound
mov
mov
cmps
stc
mov
sub
or
or
jl
aaa
jns
mov
pop
call
ret
jae
shl
mov
loopne
sar
cmp
cdq
stc
cmp
gs
into
xor
xor
or
(bad)
and
mov
mov
pop
adc
fsubr
test
sahf
ret
cli
inc
mov
fistp
clc
and
mov
push
push
imul
cmp
push
push
lahf
mov
or
pushf
mov
dec
pusha
sub
adc
(bad)
jns
inc
jne
and
arpl
inc
(bad)
in
mov
ins
lahf
rcl
cmp
and
mov
sub
sbb
das
jge
aam
cmp
sbb
adc
mov
xor
xchg
pop
cmp
aad
or
and
mov
icebp
call
push
(bad)
cs
iret
retf
jmp
jnp
xchg
nop
and
mov
data16
inc
jecxz
xor
mov
jbe
dec
push
ret
(bad)
pop
adc
dec
sub
pushf
mov
sub
and
mov
repnz
pusha
retf
xchg
push
xlat
into
out
imul
push
std
inc
movs
adc
aam
int
sub
jle
inc
jmp
cli
xchg
addr16
cmps
mov
ja
xchg
adc
lds
addr16
xor
push
or
arpl
jecxz
dec
call
lea
inc
(bad)
mov
popa
icebp
shl
mov
test
xchg
aam
in
rol
popa
or
ins
pop
or
xchg
ret
leave
push
imul
inc
jge
pusha
mov
or
push
inc
cmp
push
cmp
add
ds
lahf
neg
pop
sbb
data16
rol
pushf
jmp
mov
sbb
leave
movs
or
cmp
mov
push
movs
fst
mov
cmc
mov
xlat
xor
repnz
icebp
popf
jmp
ret
push
ja
bound
inc
iret
aad
or
clc
div
imul
sub
ficom
loope
std
xor
pop
jp
xchg
loop
add
mov
or
xor
nop
mov
lods
add
pop
sbb
inc
or
sub
cmp
lea
icebp
gs
adc
inc
gs
add
sbb
stos
outs
fiadd
test
push
jnp
iret
test
pop
mov
(bad)
lods
and
adc
xor
inc
in
std
jb
add
ror
pushf
cld
sub
stos
adc
dec
or
sbb
out
loopne
mov
xchg
jl
add
scas
jge
dec
test
fiadd
call
mov
cmp
dec
xor
mov
sti
xor
adc
xor
mov
pop
std
jmp
mov
mov
in
ds
cdq
cmp
xor
xchg
xor
xchg
jg
call
pop
(bad)
sbb
imul
xor
jmp
mov
retf
loop
and
mov
cmovae
cld
sbb
cmp
mov
jae
rcr
icebp
push
repz
aam
add
popf
in
jecxz
cmp
int
xor
je
push
test
out
int
inc
jl
clc
div
psubd
cmp
cmps
popf
cli
push
pusha
cld
dec
div
sub
inc
iret
mov
add
mov
xchg
mov
fisttp
adc
xor
jno
sub
dec
shl
jg
cs
inc
nop
shr
xor
mov
div
ret
out
and
inc
dec
adc
xor
jecxz
inc
mov
sbb
sti
or
dec
in
push
ret
rcr
push
cmp
cld
cmp
dec
stos
fisttp
mov
xor
out
sbb
pop
(bad)
xchg
lds
inc
out
xor
add
cli
lea
bound
mov
fadd
push
adc
sahf
ror
sub
mov
cli
xchg
pop
jp
ds
movs
xor
or
and
or
adc
mov
mov
bound
push
cli
popf
in
or
sub
out
nop
retf
mov
push
mov
inc
stc
outs
xor
mov
aaa
mul
or
push
call
loop
jle
ss
xor
inc
inc
lea
test
aas
or
push
xor
loope
sub
dec
ret
ror
test
hlt
dec
pop
fstp
jmp
retf
sti
mov
sbb
sbb
scas
rcl
cmp
sub
xchg
mov
out
xchg
push
and
cmps
sub
aaa
dec
jmp
pop
xchg
dec
pop
pop
jp
and
inc
pop
cmp
xor
push
push
popf
mov
popf
fldcw
ja
jl
hlt
jle
lahf
cmc
mov
cmps
jmp
sbb
xor
mov
lock
mov
test
ret
mov
jnp
sbb
mov
int
les
mov
push
mov
and
mov
bound
push
jae
add
add
inc
iret
les
iret
mov
cmp
ret
and
test
test
cmp
mov
mov
jbe
push
mov
icebp
mov
ja
pop
data16
into
jg
push
jb
shr
ss
bound
mov
xchg
sar
mov
cli
xchg
mov
mov
lods
stos
mov
pushf
add
dec
mov
push
jp
cmp
mov
ret
add
xchg
outs
call
div
rol
adc
in
repnz
cmp
and
push
hlt
pop
push
in
pusha
daa
sub
movs
dec
mov
inc
pop
movs
adc
mov
rol
(bad)
pop
test
rcl
adc
jns
stos
sub
or
outs
or
add
pop
xor
sub
popa
push
ret
dec
enter
mov
shl
popa
push
dec
mov
fdiv
out
push
xchg
xor
inc
mov
fs
cmps
xchg
pop
arpl
imul
inc
(bad)
jbe
ins
xor
cmps
out
inc
mov
nop
shl
sbb
xchg
and
loopne
xchg
jne
inc
loopne
add
jecxz
xor
mov
mov
test
jg
sbb
fs
mov
ds
loope
daa
ret
ds
jae
inc
in
imul
jnp
cmp
adc
mov
sub
js
pop
adc
loopne
pop
pop
enter
hlt
jmp
les
lods
mov
jb
mov
(bad)
jnp
mov
pop
jae
pop
dec
xchg
adc
imul
(bad)
xchg
sub
mov
push
push
cmps
and
inc
cli
dec
cmp
sti
mov
sbb
shl
fmul
movs
mov
xchg
test
cmc
cld
inc
push
neg
add
ins
push
sub
lea
xor
xor
adc
inc
jecxz
es
outs
mov
pop
(bad)
pop
and
jmp
cmp
dec
in
pop
adc
cwde
enter
sahf
mov
jns
add
cwde
ret
or
pop
cmp
fdivr
sti
jo
xor
(bad)
stc
daa
sub
sbb
ds
(bad)
(bad)
fcmovu
enter
(bad)
movs
pop
pushf
popf
mov
add
mov
inc
arpl
int
(bad)
xor
shr
(bad)
outs
popf
pop
and
inc
xchg
ret
nop
rol
rol
sbb
lods
add
mov
(bad)
fsub
cmps
test
scas
popf
jmp
sub
jl
jecxz
call
cmp
pop
sbb
jl
dec
pop
fwait
mov
and
jno
mov
add
pop
daa
mov
pop
mov
cmps
mov
cmp
es
hlt
fst
fistp
xchg
adc
clc
cmp
adc
mov
ss
xor
(bad)
fisubr
bound
cmp
push
pop
fisub
add
adc
(bad)
sahf
stc
sbb
push
jge
xchg
ins
xlat
ins
sub
iret
loope
ss
or
mov
jmp
imul
jae
(bad)
jb
cmp
dec
adc
mov
stos
repz
sbb
stos
inc
cmps
loop
mov
mov
lahf
(bad)
fadd
cmps
dec
out
push
hlt
mov
shl
pop
(bad)
in
rol
jp
cmps
fcomp
mov
bnd
jl
addr16
sbb
movs
inc
pop
int3
push
popf
push
xchg
jae
fdiv
mov
mov
leave
outs
bnd
outs
pop
ss
jns
xor
mov
jb
es
xor
sub
sbb
sar
or
sub
push
push
dec
imul
mov
push
sub
adc
sbb
jg
das
inc
ficom
std
(bad)
shr
cmp
rcl
push
jmp
or
inc
add
mov
add
sub
(bad)
popf
push
or
xchg
push
test
jb
xchg
and
adc
mov
jle
ret
fild
and
js
enter
dec
and
rol
dec
imul
das
imul
push
ins
retf
mov
test
push
and
push
rcl
adc
lds
fcom
adc
imul
jae
xchg
dec
int3
in
xchg
jg
imul
fild
cmp
fidiv
pop
call
retf
popa
pop
lods
or
push
xor
(bad)
mov
paddsw
je
das
std
cli
jp
mov
xchg
rcl
mov
fadd
dec
mov
call
add
push
fstp
pop
dec
mov
xlat
sub
pop
add
dec
test
call
cmp
mov
pop
out
xchg
or
movs
sbb
in
jo
mov
mov
int3
inc
sbb
xor
popa
pop
cli
inc
jnp
neg
mov
mov
inc
into
xchg
xor
fnstenv
sub
rol
mov
retf
cwde
lea
ins
jecxz
or
mov
xchg
jle
dec
out
sbb
push
ret
mov
stos
fsubr
sub
mov
lea
aam
nop
pop
sub
pop
xchg
pop
push
mov
or
pop
cmp
int3
idiv
popf
add
and
movs
cwde
push
cmp
adc
shl
dec
push
loope
imul
jne
or
mov
jle
dec
and
jp
sbb
mov
or
bound
pop
ss
jmp
add
js
xchg
call
push
hlt
mov
popf
mov
dec
mov
lahf
jmp
clc
jb
popf
add
jecxz
(bad)
test
(bad)
xor
dec
ds
outs
jb
jl
(bad)
gs
inc
sbb
sti
test
mov
popf
sar
das
inc
mov
xor
fdivp
enter
arpl
pop
ror
shld
add
dec
mov
xchg
jo
inc
mov
inc
out
jecxz
iret
jle
mov
push
sbb
xchg
out
lods
aas
push
in
imul
jns
(bad)
pop
pop
and
push
jg
mov
sti
or
fcom
mov
jne
and
or
jnp
fdiv
test
int
mov
leave
retf
mov
icebp
xchg
pop
loopne
repz
ret
das
int
pop
fild
cwde
sub
sbb
xor
pop
inc
fadd
push
aad
popf
shl
sar
js
icebp
pop
fucomp
add
nop
push
xchg
(bad)
sar
rol
or
mov
je
add
call
movs
std
or
push
lahf
mov
or
push
sbb
std
fwait
mov
adc
pushf
or
fs
jne
push
or
outs
cmp
jo
sbb
out
jmp
aaa
pop
dec
icebp
mov
jns
jo
xchg
jge
sar
inc
ret
mov
and
jno
in
fs
call
xor
loop
jmp
loopne
cmp
loop
sbb
push
jae
pop
pop
xchg
sbb
fsubr
or
retf
out
not
nop
jg
nop
enter
test
jne
sub
test
ret
out
dec
mov
sbb
int
mov
push
adc
aad
fbld
jbe
jl
hlt
push
cli
imul
repnz
jg
xchg
or
mov
dec
or
mov
push
cs
push
mov
and
stc
dec
(bad)
sbb
scas
lock
ins
test
sub
mov
mov
fisubr
daa
imul
jecxz
jb
cmpps
outs
xor
inc
and
and
nop
lahf
xchg
mov
mov
data16
leave
test
jb
jns
push
jl
inc
test
inc
mov
xor
bound
lahf
(bad)
and
xor
mov
std
mov
and
jl
dec
ss
dec
aam
inc
add
pop
(bad)
mov
sbb
mov
retf
pop
fwait
and
sbb
push
gs
jns
into
mov
outs
push
test
inc
push
push
inc
cmp
sbb
xchg
data16
adc
out
mov
cmc
dec
or
xchg
lods
movs
jbe
jb
cwde
test
push
pop
into
mov
int3
aas
jmp
mov
aam
xor
mov
mov
mov
out
sub
int3
test
jge
jb
aam
out
cmp
xor
adc
cli
cli
sub
fisttp
outs
mov
ror
ror
jno
mov
dec
arpl
mov
jmp
nop
or
pop
xchg
int
push
int
pop
mov
mov
dec
cmp
push
jmp
xor
sar
ins
and
lock
push
imul
push
cmps
cmps
int
sub
jb
nop
push
stos
mov
enter
xchg
xor
push
gs
inc
mov
sbb
mov
retf
mov
inc
lods
outs
mov
(bad)
jnp
mov
es
push
or
ss
fcomp
add
(bad)
movs
add
inc
fld
shl
js
inc
cmp
mov
lods
xchg
jae
popa
jge
add
sbb
and
ins
mov
dec
xor
aad
xlat
je
shl
jae
aam
jo
fcmovnu
mov
jmp
fidiv
addr16
sar
mov
(bad)
out
push
jne
scas
out
into
and
cmc
retf
push
call
pusha
aad
pop
cmps
jno
sub
lea
fisttp
loope
pop
mov
cwde
call
cwde
ja
add
add
out
ds
mov
ret
inc
sbb
dec
lods
inc
movs
cwde
inc
leave
sbb
je
int3
adc
mov
dec
and
(bad)
and
push
jns
pop
mov
inc
sbb
xor
sahf
lds
ins
jmp
call
adc
shr
cmp
xchg
cmp
xchg
jge
cmp
aam
fwait
jo
mov
data16
test
stos
outs
fnstenv
xor
mov
(bad)
outs
mov
cli
popf
into
test
push
jle
cmp
in
and
dec
push
or
sbb
add
dec
mov
test
jp
add
bound
(bad)
out
in
(bad)
(bad)
xor
ss
dec
pop
out
cdq
inc
neg
stos
(bad)
(bad)
int3
(bad)
js
das
js
push
imul
xor
hlt
push
dec
or
fcom
clc
mov
jbe
ja
sar
dec
lods
mov
std
adc
xchg
(bad)
outs
cmp
sbb
(bad)
push
loop
xlat
aad
cmp
aas
shl
dec
fs
int
es
ins
jo
scas
fwait
nop
cmps
movs
xchg
dec
push
jg
mov
xchg
adc
adc
sub
jecxz
mov
sbb
adc
jno
in
icebp
out
gs
aam
cmps
add
sub
mov
xchg
mov
jecxz
dec
sbb
adc
xchg
jnp
out
(bad)
push
fwait
lds
out
push
test
jecxz
into
cmp
shr
ret
loop
sar
cmp
mov
neg
das
and
into
cmp
add
pusha
dec
xchg
rol
dec
mov
stos
push
sti
jge
sbb
daa
loop
sub
push
in
push
pop
dec
in
cdq
jl
arpl
pop
xchg
pop
lock
mov
mov
mov
inc
cmp
adc
push
retf
or
or
stos
idiv
ret
sbb
ins
push
in
(bad)
jae
test
in
adc
fs
pushf
fmulp
pop
fadd
(bad)
in
pop
or
pop
xchg
rcpps
push
cmp
cmps
(bad)
ins
jle
rcr
sbb
and
xor
dec
push
sub
cmps
push
imul
jl
pushw
ret
sub
pop
ror
out
sub
pop
sbb
sbb
mov
inc
ror
(bad)
adc
sbb
cwde
add
add
aas
or
sub
fs
jmp
cmp
xchg
inc
addr16
jb
setbe
icebp
popa
cmps
adc
inc
push
inc
call
add
loop
add
dec
outs
mov
pop
xor
nop
sub
and
lods
call
inc
cli
repnz
iret
lods
mov
stc
pop
adc
ret
outs
xor
mov
inc
sbb
push
add
outs
fimul
sbb
mov
daa
cmc
pop
and
sbb
imul
sub
ins
sahf
jo
or
xchg
jge
jnp
add
stos
inc
jecxz
pop
push
je
sti
add
jmp
mov
das
jmp
cmp
sub
sub
add
xchg
(bad)
mov
call
jp
push
(bad)
fcomp
sub
rol
dec
pop
out
push
and
add
push
(bad)
pop
in
lock
loop
(bad)
(bad)
aad
out
adc
mov
vmaxpd
pushf
fisub
xor
or
rcr
fs
in
mov
mov
jb
xor
test
(bad)
cmp
or
jns
adc
jmp
cmp
je
sub
imul
cmp
or
pop
cmp
jmp
push
pop
pop
call
mov
mov
add
pusha
mov
sub
rcl
jmp
fcom
mov
data16
dec
inc
mov
dec
and
pop
loope
cmp
into
hlt
daa
mov
and
jb
push
and
imul
rcr
cmp
dec
out
push
push
inc
addr16
xor
(bad)
cmps
int
cli
gs
loopne
clc
inc
in
xchg
lahf
div
jnp
test
jbe
mov
xchg
retf
scas
test
enter
pop
inc
push
lea
jecxz
sub
(bad)
inc
jl
mov
scas
leave
push
xchg
sub
(bad)
cmp
inc
push
rol
cmp
cmp
push
jo
mov
ins
or
mov
(bad)
mov
lea
push
sbb
pop
sub
cwde
xlat
cmp
jno
test
stos
cld
pop
pop
or
push
test
cdq
jge
push
movs
sub
mov
movs
fldcw
sar
push
imul
cmp
(bad)
mov
mov
shl
adc
cmp
movs
add
sbb
add
push
sub
mov
inc
and
pop
mov
mov
pop
das
cld
dec
stos
clc
shr
in
sbb
js
push
xor
inc
cmps
push
ja
fwait
adc
les
(bad)
push
lock
add
sti
push
mov
cmp
in
push
xchg
sub
lock
add
cmp
mov
lea
jp
cld
sbb
jne
inc
sti
pushf
aaa
lahf
call
in
pop
int
jmp
mov
add
sub
jnp
and
daa
mov
mov
xor
mov
pop
int
stos
mov
and
inc
jbe
mov
push
pushf
js
fdivr
jnp
and
out
icebp
sbb
inc
iret
in
hlt
pop
test
icebp
clc
movs
dec
jnp
pop
mov
dec
pop
adc
mov
or
daa
xor
jo
push
call
mov
sahf
push
popf
rcr
call
xor
sbb
shl
ror
xchg
lds
mov
xchg
mov
imul
xchg
jo
inc
sub
into
cmp
shr
(bad)
pop
repnz
or
mov
cmp
out
mov
add
add
pop
fwait
add
retf
dec
pop
sub
push
icebp
mov
push
push
mov
test
mov
jp
pop
pop
movs
pop
mov
sub
xchg
addr16
sbb
out
(bad)
mov
in
mov
cmp
and
aaa
jge
push
push
xchg
jns
cmp
inc
push
mul
sub
cmps
cmc
mov
and
jns
ror
sub
push
push
dec
cmp
inc
leave
inc
ror
inc
adc
add
shl
ss
movs
call
dec
inc
adc
sbb
inc
jne
jg
cmp
call
xor
mov
mov
xchg
pop
jecxz
and
mov
add
pop
cli
xchg
ss
inc
fimul
cmp
xor
push
push
rcr
mov
retf
xchg
push
(bad)
mov
inc
data16
mov
fidiv
adc
outs
lock
movs
int3
dec
pop
and
loope
pop
pop
jg
jno
and
dec
pop
out
fcomp
mov
mov
fs
mov
loop
in
adc
dec
or
sub
pop
or
jmp
test
leave
inc
shl
js
push
jecxz
add
mov
cli
mov
out
pop
inc
(bad)
cmp
add
mov
inc
mov
outs
loop
sub
xchg
test
cld
call
jno
inc
jo
add
movs
cdq
cdq
push
shr
sub
mov
add
cmps
sbb
adc
sbb
inc
inc
aaa
pop
xchg
push
pop
cmp
loop
push
shl
adc
fstp
xor
jo
mov
aas
xchg
data16
inc
gs
imul
mov
jb
push
lods
test
sub
or
and
hlt
out
cmc
mov
push
mov
sub
inc
inc
mov
adc
sub
loop
ss
cmp
pop
jae
jae
jno
imul
test
lods
sbb
inc
cmp
push
pop
dec
or
sub
int
out
mov
cwde
adc
xor
mov
mov
fcom
xor
sub
(bad)
jo
mov
ins
pop
add
dec
or
fldenv
jno
and
arpl
jbe
inc
test
(bad)
mov
or
fld
dec
push
leave
inc
dec
lea
cmp
add
add
mov
js
(bad)
into
pop
sbb
mov
push
mov
mov
mov
pop
mov
and
pop
inc
mov
push
push
aam
mov
jns
rol
into
repnz
cmc
mov
mov
js
cdq
jmp
jne
lea
into
mul
(bad)
jmp
stc
mov
in
cmc
push
xor
mov
cmp
ret
jnp
mov
mov
lds
add
lock
add
dec
push
or
mov
fwait
jle
out
jbe
ret
push
add
adc
jne
outs
jp
daa
xchg
push
pop
int3
cld
sbb
xchg
lahf
mov
fdivr
xchg
stos
jno
pop
xlat
sbb
rcr
sbb
mov
loopne
mov
sbb
or
cmps
dec
mov
into
adc
or
leave
aad
dec
mov
mov
and
inc
pop
pop
icebp
sbb
xchg
and
and
gs
int3
pop
das
inc
aam
jp
push
mov
out
retf
inc
jmp
sar
std
inc
repz
and
xchg
jno
push
sahf
ss
cli
inc
mov
popa
shl
mov
cwde
push
mov
out
xor
sbb
pop
or
mov
sbb
repnz
out
push
push
movs
push
iret
fcomip
inc
bound
push
daa
pop
mul
jae
scas
cmp
or
or
fxch
xchg
xor
idiv
sbb
xor
(bad)
hlt
push
add
jno
add
sti
xchg
push
ins
push
push
xchg
je
cmp
ds
jle
and
or
outs
jp
mov
xor
mov
scas
inc
mov
lods
stos
dec
xor
adc
sahf
std
push
jg
pop
sar
mov
in
jne
cmp
aaa
jns
pop
mov
je
lahf
das
stc
or
pop
mov
sbb
pop
xor
clc
or
push
or
dec
xchg
cmp
adc
pop
pop
js
mov
sbb
add
(bad)
fiadd
jle
jge
inc
add
sub
fdivp
xchg
out
inc
add
cmp
push
mov
and
xchg
or
clc
cmc
inc
jg
add
cdq
scas
call
adc
vmovaps
lea
pop
push
and
mov
lds
or
loopne
pop
inc
mov
(bad)
in
jmp
sub
and
push
mov
mov
inc
push
popa
adc
retf
rcl
cmps
retf
mov
pusha
mov
outs
ret
cld
fcmovnu
mov
cmc
jmp
fldenv
sbb
dec
into
out
dec
adc
mov
xchg
cmps
push
outs
inc
xchg
sahf
iret
fst
int3
gs
mov
(bad)
cmp
mov
(bad)
mov
pop
enter
add
movs
add
jbe
dec
jp
add
push
cmp
jp
jmp
and
jecxz
and
mov
mov
push
inc
pop
mov
inc
jle
sar
add
arpl
(bad)
sbb
mov
frstor
push
out
pop
push
loope
dec
pop
pop
daa
dec
imul
xchg
aad
mov
neg
test
xor
imul
jmp
outs
ins
sub
push
repnz
push
jns
sbb
pop
sti
cmps
je
cld
movs
stos
cmps
jmp
dec
je
(bad)
pop
lds
push
into
lods
inc
or
sbb
dec
imul
pop
sahf
or
int
cmp
adc
adc
cmps
rcr
js
sahf
movs
push
leave
jno
ret
outs
sub
pop
xor
sahf
js
into
outs
jb
sub
and
dec
mov
out
cmps
or
or
add
inc
shl
not
mov
fxch
push
js
add
jo
test
cmp
popa
mov
aaa
xchg
mov
imul
aad
mov
xchg
push
daa
(bad)
repz
or
int
mov
sub
mov
cs
and
jne
inc
mov
test
or
push
lahf
gs
add
xlat
imul
(bad)
rol
xchg
inc
aam
adc
ins
add
in
aaa
jnp
xor
dec
mov
add
popa
or
push
mov
xlat
cmp
mul
mov
sbb
sbb
popw
popa
and
lahf
lock
test
jns
push
mov
dec
fidivr
iret
mov
add
clc
push
imul
mov
sub
jne
xchg
cli
mov
pop
into
test
test
pop
jmp
cmp
and
out
xchg
mov
pop
movs
add
fcmovne
add
sbb
add
jmp
dec
fwait
xchg
in
mov
inc
pusha
(bad)
call
push
mov
inc
xchg
pop
push
dec
aad
inc
add
xchg
movs
xchg
fsubr
mov
mov
out
xor
js
cmp
add
jmp
add
out
js
pop
lahf
cmp
mov
mov
aas
mov
push
aad
scas
pop
les
(bad)
mov
fild
loope
mov
xchg
rol
pop
dec
push
pop
mov
mov
rcl
and
push
xor
lock
mov
push
push
sub
cmp
mov
outs
jmp
popf
mov
jle
sbb
xchg
out
mov
cmp
ret
sub
aad
test
push
dec
inc
xor
ins
lock
aam
int3
cmp
js
pop
ja
adc
add
test
jl
scas
pop
mov
add
adc
pop
clc
movs
push
mov
sbb
mov
sub
int
test
inc
mov
sbb
push
ds
pop
mov
push
mov
ret
and
xor
or
adc
ins
push
pusha
adc
xor
push
xchg
mov
xchg
or
pop
mov
in
es
xor
das
sub
cmp
mov
sbb
or
dec
(bad)
push
rol
loop
fwait
jecxz
mov
and
dec
jecxz
xor
pusha
imul
nop
dec
lea
iret
lahf
mov
in
and
(bad)
movs
ja
xchg
xor
jle
adc
nop
and
or
mov
mov
xchg
pop
xchg
aas
push
inc
cmc
movs
popa
push
adc
dec
sbb
pop
(bad)
int3
scas
xlat
xchg
pop
hlt
xor
sub
adc
push
sub
ds
pop
(bad)
jb
and
and
pop
push
sub
out
add
ror
adc
inc
or
retf
push
es
mov
sbb
nop
jo
mov
xchg
dec
fwait
mov
dec
add
pop
jge
icebp
xchg
std
das
add
jne
mov
mov
popa
xchg
jmp
xchg
mov
mov
sub
cmp
test
xor
xor
leave
and
leave
mov
js
enter
popf
pop
rcr
gs
sub
adc
shl
mov
dec
or
sbb
sbb
lock
test
and
and
int
pop
pop
inc
shr
lods
sbb
jmp
fsubr
hlt
outs
dec
cmp
(bad)
fisubr
das
push
cli
addr16
dec
lahf
pushf
aad
not
push
addr16
into
test
jmp
inc
and
movs
(bad)
rol
adc
mov
out
xchg
push
ds
lds
pop
cmp
xor
add
nop
scas
fucomi
push
mov
jl
mov
stos
xchg
out
shl
dec
pop
data16
mov
sti
jb
icebp
mov
in
jae
jecxz
shl
push
mov
outs
push
aam
out
pusha
push
ins
mov
mov
les
data16
pushf
aaa
lahf
pop
xchg
pop
and
or
xor
mov
jg
sub
sbb
aam
inc
xlat
cmps
sbb
les
push
inc
call
cmp
jp
outs
add
popa
dec
xlat
jmp
fidiv
fcom
call
mov
sub
jb
ds
nop
add
(bad)
xor
(bad)
dec
jp
jecxz
xchg
test
inc
xchg
jmp
cli
push
pusha
fst
inc
cmp
or
shl
push
jnp
dec
inc
pop
shr
fwait
ror
push
sahf
mov
(bad)
dec
mov
or
mov
dec
test
xchg
and
popa
aaa
push
mov
in
push
or
push
es
dec
xchg
inc
mov
out
jae
gs
sbb
arpl
test
pop
ds
outs
hlt
sub
mov
cs
cmp
cmp
aad
dec
lahf
sub
fs
dec
lods
(bad)
call
jb
jl
mov
add
sub
outs
jne
enter
test
ds
je
xchg
cmp
jmp
sub
add
out
rcr
fdiv
push
cs
aas
xchg
popa
cmp
or
push
jnp
icebp
and
test
adc
or
pop
cmp
ja
sar
xor
into
dec
shr
mov
sbb
pop
std
cdq
ins
sbb
adc
and
lock
stc
int
lods
mov
lahf
or
sub
mov
push
add
sub
retf
xor
hlt
push
adc
and
ds
and
cmc
popf
aas
mov
push
daa
arpl
in
xor
add
es
cmp
xor
sub
push
stos
(bad)
sbb
ins
inc
xor
scas
cli
bound
sbb
jecxz
imul
shr
xchg
xor
mov
or
stos
mov
out
push
cmp
mov
inc
pop
inc
test
xor
lfs
xchg
push
xchg
mov
cmp
stos
ffree
mov
pop
dec
aas
mov
push
(bad)
test
fcmovbe
inc
enter
pop
loop
leave
retf
push
aas
jmp
imul
fbstp
adc
push
in
gs
fld
lea
jno
pop
cmp
(bad)
fnstsw
aas
nop
push
mov
(bad)
movs
test
jmp
pop
inc
adc
aaa
fidivr
repnz
ins
aam
iret
mov
scas
(bad)
fcomp
sub
pop
dec
mov
push
arpl
fdivrp
retf
dec
popw
retf
jnp
jno
inc
daa
arpl
(bad)
xchg
mov
ins
mov
int
jae
adc
push
cmp
mov
xor
pop
cdq
icebp
scas
push
and
jae
jmp
shl
push
add
fs
mov
cdq
mov
ds
icebp
iret
cmp
lods
jmp
push
jle
fwait
adc
neg
repnz
inc
push
stos
pop
mov
bswap
pop
stos
bound
lock
sub
retf
jl
adc
das
loop
fucomi
and
jnp
mov
jnp
mov
shl
sahf
jp
jg
fld
mov
pop
repnz
push
jb
in
cmp
out
cmc
adc
adc
jno
inc
xchg
cmps
mov
add
ret
scas
test
popa
sbb
xlat
xor
mov
aad
xchg
leave
out
gs
test
outs
in
dec
div
xor
cld
adc
popf
je
jbe
push
gs
pop
jnp
popa
sub
gs
adc
or
and
and
hlt
nop
into
inc
add
nop
cmp
pop
je
and
js
cmp
or
cld
cmp
lods
movs
xchg
xchg
push
inc
popf
jno
pop
xor
lods
inc
add
clc
lock
jb
xchg
clc
data16
xor
cmp
aad
test
pop
sbb
mov
and
icebp
add
jge
cli
cmp
imul
mov
pop
xchg
jno
pop
sbb
dec
xchg
loopne
push
test
xlat
lods
les
test
test
cmps
daa
and
cmps
mov
cmp
push
xchg
mov
jg
pushf
shr
lock
dec
aad
adc
outs
fdivr
(bad)
xchg
sub
iret
dec
mov
fld
ret
ret
icebp
fistp
mov
je
pusha
add
jl
enter
add
xor
mov
mov
std
jmp
sub
loop
popa
pop
imul
enter
loope
test
imul
mov
pop
pop
xor
lahf
dec
pop
cmc
arpl
sbb
js
push
inc
out
cwde
and
mov
retf
push
stos
outs
into
dec
inc
sti
adc
jg
movs
cmps
fwait
or
into
and
cmps
or
retf
jmp
fiadd
sbb
xchg
mov
in
nop
cld
arpl
jae
xchg
test
prefetch
hlt
sbb
call
sub
adc
sbb
xor
shl
into
jo
xchg
outs
add
sub
xchg
inc
mov
dec
pop
mov
dec
jne
sub
cmp
into
push
test
push
mov
lahf
call
popa
jne
fadd
imul
fdivr
mov
mov
xchg
cld
add
ins
lahf
push
ret
clc
out
cdq
pop
push
je
aaa
mov
js
adc
lock
scas
retf
add
mov
dec
push
(bad)
sbb
cmc
push
in
rcr
or
jne
test
cmp
js
pop
adc
fcmovnbe
ins
cmp
cmc
in
test
pop
(bad)
pop
mov
xor
mov
push
aam
and
jns
ficomp
or
je
cdq
movs
(bad)
out
jl
out
mov
fisttp
mov
mov
mov
mov
sahf
adc
arpl
mov
rcl
xchg
inc
cmps
xor
std
or
test
push
sub
inc
ins
xchg
mov
sbb
test
ja
outs
cs
push
clc
shr
cli
and
fisubr
ss
(bad)
jmp
cvtps2pd
inc
push
hlt
retf
in
out
sbb
or
iret
outs
add
or
adc
jg
imul
pop
test
gs
cmps
dec
adc
test
mov
and
mov
add
and
cld
pop
jbe
imul
pop
push
jnp
push
inc
xor
mov
mov
outs
aaa
lock
fs
dec
jbe
add
cmp
jae
fld
mov
jmp
dec
fldcw
fdiv
pop
jmp
lock
push
or
std
adc
sti
mov
xchg
(bad)
fcmovne
mov
fisubr
cmp
add
daa
sahf
xor
xchg
mov
loopne
and
leave
pop
out
retf
xor
out
cmps
mov
pop
adc
inc
popa
inc
xchg
loope
pop
shl
push
and
enter
gs
fsubr
cmc
loope
push
ins
xchg
into
aaa
pop
ins
add
xor
ror
inc
(bad)
mov
ss
sbb
test
push
sbb
shl
xor
retf
into
fsubr
int3
jmp
lods
fwait
test
add
xor
(bad)
xor
retf
dec
test
push
dec
push
mov
stos
mov
inc
xchg
(bad)
loopne
pop
clc
fs
cmp
stos
outs
sub
mov
lock
sbb
out
jns
and
pop
outs
add
data16
add
sbb
pop
out
sub
inc
add
movs
lods
test
xchg
je
cs
fidiv
mov
and
pop
loope
daa
popa
scas
dec
sahf
not
out
sahf
leave
fs
mov
cmp
popf
(bad)
pop
ins
ins
sub
cmp
fidiv
es
add
(bad)
sbb
pop
test
out
add
push
ror
dec
popa
ffreep
adc
cmps
pop
in
movs
add
test
repnz
sbb
lea
ret
idiv
sub
sbb
retf
js
mov
xchg
jmp
clc
mov
inc
gs
call
daa
je
in
popa
inc
mov
(bad)
ins
loopne
push
jle
mov
xor
imul
sub
nop
or
mov
sub
ja
sbb
ret
nop
shl
mov
xchg
ss
add
add
(bad)
xsha256
cmps
push
or
adc
push
cmp
push
adc
add
push
fst
je
push
clc
add
mov
in
jo
cwde
cmp
sahf
mov
push
inc
cmp
mul
pop
mov
pusha
mov
inc
repnz
xchg
sbb
hlt
shr
adc
sbb
shl
hlt
pop
jo
push
add
jb
scas
xor
push
xlat
push
mov
in
ins
push
mov
lods
mov
stc
adc
stos
imul
jg
in
pop
fldenv
add
mov
cmp
ret
out
(bad)
jmp
push
jle
in
sub
shr
ds
nop
cvtps2pi
ret
retf
dec
les
mov
sbb
adc
loop
jecxz
jp
stos
dec
adc
daa
lahf
pop
sbb
in
stc
xor
or
ins
push
adc
xchg
mov
pop
pop
sbb
cmps
imul
inc
(bad)
and
in
fcmovu
jb
inc
gs
mov
sbb
push
and
cs
call
int3
push
xchg
repz
push
jl
push
fidiv
lds
sub
fld
mov
jae
push
test
outs
les
jle
inc
outs
stc
lahf
icebp
jnp
scas
and
rol
sub
push
clc
lea
in
sbb
jo
leave
adc
inc
test
cld
imul
sbb
stos
mov
scas
mov
sub
dec
mov
call
les
popa
mov
xchg
sbb
mul
pusha
das
push
mov
cmp
icebp
or
mov
fiadd
dec
mov
outs
xchg
adc
dec
mov
jmp
ret
jle
add
je
adc
mov
mov
xor
call
data16
sbb
hlt
adc
mov
xchg
cmps
fstp
or
push
rcr
je
imul
shl
lock
sahf
jns
lds
push
push
(bad)
sub
push
fld
or
adc
or
jl
nop
fwait
cmp
test
test
jno
ret
nop
add
jne
cmp
xor
aaa
sub
jb
mov
or
cdq
shl
fs
or
popa
aad
leave
fs
mov
add
mov
add
punpckhdq
lea
inc
pop
jb
mov
(bad)
push
adc
jmp
mov
nop
push
inc
mov
mov
mov
mov
inc
cmp
cdq
outs
leave
cwde
std
loop
hlt
jne
mov
pop
xchg
and
sti
add
ins
fld
fidiv
mov
cli
or
movs
sub
sahf
pushf
dec
xchg
inc
push
xor
pop
ins
outs
mov
mul
or
jnp
cmp
adc
mov
push
dec
sbb
mov
cmp
(bad)
jmp
mov
or
mov
int
inc
in
(bad)
into
xor
jmp
push
call
loopne
push
aaa
push
sbb
ins
inc
or
int
jbe
mov
cdq
out
adc
scas
popa
clc
inc
call
or
adc
sbb
sub
test
into
push
fcmovnb
repz
add
and
jmp
in
in
pop
ficomp
enter
data16
sbb
mov
sbb
mov
sub
jmp
adc
jg
or
mov
in
mov
mov
(bad)
test
icebp
addr16
loope
sub
dec
adc
inc
shr
(bad)
sub
dec
pop
call
sahf
xor
or
fdivr
sub
(bad)
mov
inc
xchg
or
gs
mov
push
push
ret
das
mov
add
pop
jmp
nop
pop
xor
pop
jmp
rol
icebp
push
test
fstp
add
mov
and
pusha
sub
ja
daa
mov
jl
rcr
rcr
and
lock
ror
xchg
and
and
scas
jns
xchg
imul
adc
xor
xchg
or
xchg
mov
add
push
xchg
inc
adc
cwde
xor
call
and
adc
int3
pop
or
cmp
adc
and
leave
stos
call
mov
cmps
fisttp
ja
mov
ins
pop
vgf2p8affineqb
test
fs
cmp
fwait
adc
push
gs
xor
push
stc
call
ror
(bad)
xor
jo
dec
cdq
push
or
pop
adc
or
ja
sar
jns
ins
mov
std
dec
(bad)
jge
enter
sbb
dec
daa
mov
movs
push
and
out
cli
mov
push
js
into
mov
in
cs
add
jmp
fcom
add
loopne
xchg
cwde
aad
(bad)
sbb
jnp
xor
ror
data16
and
icebp
ds
(bad)
iret
daa
push
and
mov
sbb
push
or
cmp
sbb
lea
xor
jl
int3
stos
fld
mov
jne
shr
jecxz
ror
int3
inc
lods
mov
pop
mov
ds
shl
mov
xor
fdivr
dec
cmc
pop
ins
int
push
mov
clc
call
cli
mov
push
aam
(bad)
sbb
out
mov
jle
cmp
mov
mov
and
or
mov
pop
pop
push
les
and
mov
imul
test
bswap
mov
cmc
js
dec
cli
mov
xor
or
les
mov
(bad)
and
jbe
shl
sti
mov
sbb
jns
sbb
xor
shl
das
cmp
xchg
push
lods
movs
cdq
sbb
addr16
(bad)
mov
jmp
xlat
rcr
lahf
inc
inc
adc
aad
aad
pop
cmp
stos
lahf
inc
xchg
fst
jl
int
dec
jmp
or
retf
sbb
pushf
aas
mov
std
mov
jo
add
test
jne
xor
std
push
and
xchg
fist
aam
out
rcr
rol
dec
xchg
scas
mov
out
mov
das
push
sub
add
outs
push
pop
inc
add
push
xlat
fcmovbe
out
push
sbb
push
cs
cwde
in
sub
pop
fcmovnbe
test
push
adc
mov
fidivr
mov
sti
mov
addr16
imul
stos
mov
jb
xlat
ds
or
sar
add
sbb
push
or
xlat
neg
jae
mov
fadd
add
test
xchg
xchg
dec
data16
fadd
or
jmp
jecxz
test
inc
inc
mov
jg
pop
fs
enter
push
sbb
inc
dec
fiadd
in
jmp
loopne
cmp
sti
dec
push
xchg
test
nop
mov
loop
enter
stc
sahf
push
xor
mov
push
data16
xchg
xchg
push
out
push
dec
mov
arpl
push
push
jl
jnp
sub
(bad)
cmp
xor
mov
add
sub
push
lods
add
push
stos
mov
ss
dec
pop
xor
imul
int
hlt
std
pop
dec
mov
pop
jnp
or
mov
movs
xchg
xchg
lock
sub
dec
xor
xlat
xchg
rol
add
and
pushf
xchg
rol
call
ret
retf
mov
dec
xchg
cli
daa
cmp
xchg
dec
mov
jmp
test
sub
ret
dec
xchg
ss
aam
or
pop
xchg
aam
push
repnz
sub
cdq
popf
or
mov
pop
push
sub
add
(bad)
push
inc
enter
loop
scas
mov
add
data16
(bad)
sar
out
cwde
lock
inc
repnz
movs
(bad)
xlat
outs
xchg
je
(bad)
sub
pop
dec
pop
not
push
pop
in
jl
cwde
add
jmp
mov
mov
call
movs
fild
pop
jnp
in
inc
(bad)
ret
pop
mov
loope
add
xor
xor
xor
aad
pop
pushf
mov
lds
jae
mov
cwde
adc
cmp
popa
shl
nop
test
lock
add
int
jmp
push
fwait
or
ja
das
or
stos
xlat
fild
inc
aad
add
in
xor
add
ret
popa
jns
pop
scas
mov
mov
pop
cld
and
sbb
scas
pop
je
xchg
pop
sub
(bad)
bnd
in
pop
loope
pop
mov
add
pushf
mov
dec
xchg
jle
jno
xor
aam
pop
mov
in
xchg
cmp
jge
pushf
jecxz
retf
or
lahf
inc
mov
and
js
and
in
mov
pop
inc
pop
mov
test
xor
xlat
sbb
sub
inc
cmp
rcr
mov
pushf
hlt
add
xchg
dec
sbb
push
ss
and
adc
cs
dec
cmp
lock
mov
push
movs
mov
mov
fbld
adc
mov
jle
repz
jno
and
mov
or
cmp
rol
push
fcomp
(bad)
cmc
mov
scas
mov
enter
fisubr
inc
and
mov
not
or
fdiv
repz
jnp
mov
inc
test
jmp
mov
mov
arpl
or
push
pusha
test
cdq
push
in
stc
sub
sub
push
in
lock
outs
sub
mov
xlat
fsub
jno
popf
or
push
inc
sub
jl
popa
adc
dec
sub
inc
mov
dec
ret
push
leave
arpl
mov
call
out
mov
mov
xor
lahf
mov
lods
cmps
pushf
int
aas
mov
push
pop
xor
sbb
fwait
mov
sub
out
mov
sub
outs
mov
stos
push
sub
shl
pop
push
push
jmp
mov
sbb
push
mov
addr16
movs
mov
xchg
ins
push
sub
jmp
(bad)
out
add
mov
push
std
jae
jb
xchg
pop
add
pop
and
xor
dec
shl
fmul
jge
call
movs
cs
stos
pop
push
push
cmps
adc
shl
pusha
pop
enter
jecxz
test
jp
mov
bound
clc
xchg
(bad)
mov
fldenv
out
push
ret
cs
in
mov
sub
dec
mov
mov
push
ds
xchg
mov
and
dec
and
push
not
sub
mov
add
push
mov
mov
mov
mov
call
call
pop
js
inc
mov
retf
sub
lods
iret
stc
gs
fidiv
pop
outs
rcr
das
clc
mov
sahf
push
cmc
and
bound
jns
and
add
xchg
jl
(bad)
test
ret
or
in
test
mov
cmp
sub
push
sbb
mov
cmp
movs
pop
pop
xchg
push
and
int3
jb
cmp
out
adc
lock
shl
sub
pop
pop
adc
ja
repnz
ins
pop
and
(bad)
mov
add
outs
aaa
xlat
dec
inc
jle
popf
jmp
sbb
pop
movs
inc
lock
adc
push
push
inc
push
pusha
or
inc
cwde
xor
iret
aaa
xchg
je
ins
cld
ja
xchg
sub
repz
dec
xor
xchg
shl
mov
mov
(bad)
jmp
daa
pop
out
arpl
jno
shr
jnp
dec
mov
inc
ins
ret
sti
jnp
sub
dec
lea
sub
cmps
xor
pop
xchg
(bad)
mov
test
inc
mov
fldln2
lods
les
jo
cmp
das
push
aas
imul
aam
cmps
cdq
xchg
loope
test
adc
in
lods
dec
cdq
mov
add
mov
xor
je
xor
rcl
mov
pop
loopne
shr
inc
sub
push
xor
or
pop
ret
test
sub
xor
xor
jecxz
pop
pop
pop
in
push
dec
jae
jb
iret
outs
mov
push
(bad)
out
pop
jbe
das
outs
push
adc
lea
xchg
fcmovnb
add
add
cmp
(bad)
cld
xlat
lock
out
fnstenv
push
jl
(bad)
jbe
in
(bad)
pop
mov
dec
ror
jne
sbb
jg
ror
pop
mov
push
or
mov
loop
mov
imul
cmp
mov
and
mov
popa
repnz
push
lods
das
lea
test
jmp
sbb
lods
jbe
xor
add
shl
and
push
xor
rcl
cwde
fbld
inc
idiv
sbb
mov
adc
or
int3
push
pop
cmp
xor
sbb
xchg
stos
data16
inc
sbb
repz
mov
add
out
adc
mov
cmp
mov
mov
sub
cmp
mov
mov
pop
rol
jno
xchg
pop
call
mov
jecxz
ror
popf
fisub
jmp
push
jnp
jmp
fistp
mov
rcl
daa
lods
retf
xor
fdivr
xor
mov
out
mov
cmp
xchg
or
sbb
dec
outs
shl
mov
mov
rol
add
push
jbe
fsubr
push
or
jo
clc
inc
scas
xlat
pop
or
inc
mov
sub
es
jb
inc
stos
movs
sub
jl
inc
sti
pop
sub
push
call
lds
fcomp
call
outs
push
jno
adc
out
adc
call
cmp
push
gs
int3
int3
xchg
lock
or
jl
fwait
clc
xchg
adc
dec
and
sub
mov
test
daa
daa
(bad)
movs
pop
pushf
inc
xor
idiv
xor
out
out
rcl
and
in
sahf
mov
or
or
adc
shl
lahf
cmp
sbb
cmps
addr16
nop
(bad)
outs
mov
loope
jge
fsub
(bad)
xchg
xor
mov
push
stos
dec
push
mov
jmp
pop
retf
pop
add
sub
stc
dec
(bad)
retf
dec
pop
jp
cmp
daa
sar
and
mov
fwait
jae
(bad)
cmp
aam
arpl
cmp
cmp
push
push
cmp
cmp
jne
das
fisubr
test
xor
stc
push
or
outs
cmp
jo
and
(bad)
in
sbb
icebp
push
mov
fdiv
je
adc
jbe
pop
jge
(bad)
xchg
imul
push
push
cmp
mov
pop
push
movs
jl
push
mov
push
add
add
sub
adc
cmp
shr
mov
mov
js
push
pusha
cmp
jo
les
or
in
xchg
hlt
(bad)
rol
inc
jmp
scas
lea
les
sub
call
add
or
pop
rol
call
sbb
jbe
imul
leave
jb
pop
div
xor
xor
jg
clc
xchg
cli
dec
jle
xchg
pop
cli
addr16
adc
pop
aas
sahf
outs
jnp
xchg
ss
xchg
iret
mov
push
mov
add
int
movsx
bound
cmc
cmp
cld
jbe
dec
lds
pop
inc
sbb
push
mov
dec
or
cdq
mov
movs
or
jmp
xor
out
data16
push
(bad)
cmps
scas
iret
in
test
mov
test
popa
xor
aas
test
cmp
in
ret
mov
scas
jecxz
idiv
push
xlat
dec
jno
add
jle
fisub
xchg
dec
out
jnp
add
push
repz
adc
aad
std
jnp
jb
and
push
mov
cmps
lods
test
or
inc
jge
sub
fld1
pop
pop
or
mov
rcr
adc
cmp
pusha
getsec
push
repnz
rcl
popa
mov
mov
mov
cmp
inc
icebp
icebp
pop
sub
in
pop
xchg
rcl
dec
mov
mov
into
pushf
pusha
lods
daa
xchg
and
adc
aad
xchg
(bad)
idiv
cmps
(bad)
ror
scas
adc
mov
lea
out
mov
gs
call
pop
stc
pop
loope
es
mov
mov
call
push
add
in
lock
mov
push
or
cmp
mov
jb
jmp
sbb
ror
mov
mov
lahf
mov
cmp
out
mov
mov
fsub
adc
ins
jle
pop
push
ins
aaa
out
cmp
push
in
pusha
in
(bad)
adc
test
mov
cwde
rcl
pop
jns
ins
xchg
imul
js
sub
adc
leave
or
sub
pop
rol
in
sbb
leave
ret
rcl
xchg
call
jmp
fld
arpl
ficomp
push
mov
add
aam
or
nop
mov
mov
xchg
jmp
in
in
test
inc
mov
push
mov
mov
or
ss
sbb
xchg
mov
test
ja
hlt
cdq
xor
push
jne
pop
xchg
jp
in
aaa
int
and
mov
xor
mov
sub
and
mov
aaa
enter
mov
pop
push
mov
or
xor
jp
aas
mov
xchg
pusha
cmp
mov
in
xor
xchg
jmp
ins
ins
push
(bad)
jns
pop
dec
daa
mov
lea
jmp
test
pop
pop
hlt
lock
sar
iret
push
xlat
push
xchg
lods
mov
outs
adc
add
sbb
sar
fbld
call
inc
lock
jae
cli
mov
(bad)
jg
icebp
jne
jge
mov
outs
lds
inc
mov
jnp
sub
inc
(bad)
daa
mov
cs
jge
into
icebp
or
movs
jae
mov
lea
(bad)
mov
pop
ins
inc
in
cmps
xchg
cmp
shr
push
xor
mov
stc
mov
mov
mov
pop
sar
jmp
in
and
xor
mov
sub
sub
sti
sbb
dec
test
(bad)
mov
add
in
mov
ins
or
cmc
jae
sbb
shl
out
sbb
xor
xor
lods
pop
rol
jmp
repnz
cmp
or
repz
or
push
xchg
ds
rcr
and
inc
xchg
lea
adc
mov
rol
push
rol
xchg
scas
jb
jno
dec
scas
in
or
aas
(bad)
hlt
or
mov
enter
(bad)
or
out
mov
jmp
pop
xchg
mov
sar
xchg
cmp
repz
add
mov
rcl
out
ds
(bad)
dec
sub
cld
pop
add
inc
jmp
xor
jb
test
cmp
fimul
adc
icebp
test
stos
popf
add
cmp
(bad)
das
cmc
out
movaps
mov
add
cmps
jbe
cmc
jle
aas
in
sub
repnz
push
xor
hlt
push
mov
int3
mov
loop
ds
retf
dec
inc
jnp
mov
xlat
dec
int
popf
inc
xchg
push
and
cmp
sub
(bad)
hlt
shl
je
je
push
jg
(bad)
pop
data16
pop
aad
aam
push
sbb
jnp
and
stos
popa
push
mov
enter
(bad)
add
sub
mov
dec
and
and
das
jbe
push
xor
pxor
sar
xor
xchg
mov
stc
or
mov
in
mov
xchg
dec
inc
cld
add
push
stos
test
mov
dec
xor
cs
add
js
add
out
sbb
stc
icebp
jne
push
mov
(bad)
pop
jb
mov
mov
out
mov
adc
ret
mov
lods
aam
cwde
jnp
bound
mov
out
push
bound
popf
ja
mov
popf
xchg
test
cmp
std
add
and
add
stos
inc
inc
adc
pop
sbb
hlt
hlt
jno
lods
cmp
adc
out
pushf
mov
dec
mov
fistp
adc
data16
adc
jmp
mov
aaa
js
inc
push
aas
xchg
cwde
inc
ins
pop
or
sub
push
mov
imul
add
ins
adc
cli
int
scas
xchg
dec
xor
imul
aas
clc
lds
mov
mov
jnp
push
or
test
cmps
xor
mov
(bad)
cdq
xor
jnp
xchg
retf
cmp
sbb
mov
and
mov
mov
lds
in
popa
loop
mov
out
daa
(bad)
div
out
mov
jne
imul
add
(bad)
aas
push
add
fadd
out
repz
jbe
dec
mov
push
nop
nop
outs
push
jmp
shr
scas
pop
pop
into
lds
pop
mov
xor
rol
adc
jge
ds
(bad)
cld
scas
stos
push
in
in
pop
add
sub
imul
shl
cwde
xchg
(bad)
pop
repz
and
push
popa
jle
fiadd
sub
cmp
cmp
std
and
xor
(bad)
outs
les
dec
stos
mov
inc
sub
sub
clc
jmp
cmps
mov
add
clc
scas
inc
push
icebp
cli
pop
stc
cmps
lldt
mov
fs
aas
mov
jb
sub
xor
jp
or
ja
adc
sbb
out
retf
sti
jmp
rol
(bad)
in
mov
lahf
div
fdivp
mov
or
cmp
hlt
jno
gs
dec
pop
push
aad
sub
mov
pop
ss
retf
cmp
add
and
inc
or
mov
pop
aas
fdiv
fisubr
jge
mov
fild
rcl
int
retf
mov
out
jb
jl
lahf
repnz
xchg
ret
push
bound
jl
pop
scas
jg
ret
into
cmp
jb
mov
rcl
outs
or
cwde
pusha
inc
repz
push
mov
dec
add
test
pop
jg
aad
popf
lea
out
xchg
mov
mov
addr16
cmp
bound
les
push
movs
jmp
sahf
inc
ficomp
cld
enter
sbb
ins
and
pusha
in
push
dec
add
pop
mov
jp
das
jmp
fs
sahf
inc
add
mov
repz
or
sar
stos
jle
daa
dec
mov
adc
inc
clc
fwait
mov
mov
ins
dec
inc
pop
adc
out
push
sub
js
cmp
std
inc
cmp
jmp
js
movs
fxch
sub
cmp
add
mov
sbb
ds
pop
cmps
sbb
ins
sti
dec
add
aad
mov
dec
adc
test
aad
vmovq
aas
inc
push
call
cdq
xchg
idiv
out
pop
lahf
jns
cwde
ins
cmovne
jge
push
shl
pop
sub
push
retf
pusha
iret
xchg
outs
fwait
sti
ret
push
and
ja
cmp
jl
sub
(bad)
out
retf
mov
add
std
mov
xor
outs
jecxz
sahf
loopne
cdq
lds
jne
rsm
bound
mov
or
sahf
es
add
pop
pop
xchg
and
loopne
sub
xor
retf
test
shl
xor
in
test
adc
pop
or
mov
inc
sbb
lahf
imul
jle
aam
outs
add
dec
aam
jae
dec
fsubr
push
inc
adc
jb
sbb
push
push
push
add
lahf
mov
cmp
(bad)
push
hlt
clc
mov
and
mov
sti
sub
and
dec
push
popf
gs
mov
outs
mov
mov
neg
cmp
xchg
outs
call
mov
rcl
inc
div
pop
fisubr
fwait
test
add
xchg
push
push
or
mov
pop
adc
and
mov
je
ret
xchg
dec
pop
inc
shl
(bad)
leave
add
cld
add
fcom
dec
sbb
leave
repnz
and
cmc
pop
loopne
into
lea
mov
or
out
pop
and
jne
sbb
or
pop
mov
pushf
or
add
cmp
loop
(bad)
loopne
daa
popa
rol
cmps
arpl
vrcpss
mov
lea
cld
jmp
or
sbb
fs
ins
outs
mov
xchg
sbb
retf
pop
sub
xor
xor
test
dec
movs
mov
das
mov
sub
dec
imul
sub
in
outs
mul
ret
add
mov
stc
xchg
or
xchg
jecxz
sub
add
retf
stc
movs
sbb
pop
pop
jge
xchg
sub
stos
xor
or
or
mov
mov
add
mov
movs
inc
lock
cmp
jge
inc
mov
adc
xor
mov
ins
(bad)
jg
out
rcl
ins
cmp
mov
loop
jbe
ret
sbb
mov
xchg
or
cmps
xor
mov
jbe
aad
mov
hlt
sub
and
jl
vmovaps
lods
out
push
or
icebp
cmp
scas
xchg
push
push
mov
sub
rol
pop
jns
les
cmc
jb
push
cmps
scas
mov
and
and
out
sbb
mov
aaa
add
ins
repnz
adc
frstor
sahf
inc
fwait
mov
pop
push
xrelease
jno
add
or
(bad)
jg
jmp
mov
pusha
fmul
mov
and
popa
je
pop
mov
enter
nop
xchg
loopne
sbb
std
jp
push
and
popa
inc
inc
jne
(bad)
outs
scas
jnp
cmp
loopne
call
(bad)
sahf
push
mov
xchg
xor
dec
pop
sub
push
scas
sbb
adc
fbld
jne
(bad)
aaa
test
les
push
inc
pushf
jl
push
xor
sbb
mov
popf
dec
jp
dec
jb
out
jmp
pop
or
or
mov
adc
sbb
mov
pop
cmp
js
xor
push
add
repnz
sbb
in
out
std
jmp
shl
ret
or
mov
cmps
loope
or
test
(bad)
xlat
jb
loop
jmp
add
cld
xchg
call
(bad)
jae
pop
dec
sbb
or
or
and
mov
inc
push
adc
pop
outs
stc
jbe
pop
sbb
fbstp
pop
cmps
mov
iret
cmp
aaa
mov
ja
movs
inc
and
pop
ja
lds
jmp
mov
sahf
push
inc
add
rcr
pop
jmp
cmp
ret
pop
push
sub
sub
ret
stc
shl
iret
fs
pop
rcr
add
mov
scas
push
std
pop
(bad)
imul
lods
inc
adc
push
imul
cmp
xchg
dec
push
dec
cmp
fistp
xor
imul
and
mov
out
add
(bad)
inc
or
cmc
add
or
jmp
sbb
jae
mov
mov
js
mov
in
ret
mov
clc
mov
add
sub
cmc
out
mov
ins
pop
loope
movups
xor
xchg
bound
je
adc
push
add
sbb
mov
push
xchg
cli
or
xor
pop
leave
xlat
jo
icebp
xchg
mov
jle
and
sar
ret
cmp
dec
xor
nop
xor
jg
loopne
jno
xchg
loop
test
dec
xor
std
popf
retf
add
pop
cld
scas
jge
xchg
nop
and
pop
arpl
aas
mov
cmps
jecxz
mov
inc
cmp
fnstcw
push
push
mov
iret
int3
fwait
aas
inc
dec
push
mov
es
test
outs
cmp
ret
push
xchg
push
and
and
in
mov
jge
retf
jb
mov
mov
in
movs
and
pop
mov
pushf
shl
jge
movs
in
pop
lods
icebp
enter
xlat
lods
in
add
hlt
mov
mov
popf
outs
dec
push
lds
mov
imul
push
mov
add
mov
cmp
sbb
dec
ins
cmp
inc
and
or
out
fldcw
pop
fldcw
shr
idiv
cwde
outs
pop
(bad)
xchg
sub
cmc
xchg
lock
adc
adc
sub
cmp
in
ins
mov
dec
add
ret
push
add
fisubr
rcr
and
push
jmp
push
sub
push
cdq
dec
sub
retf
xor
lods
fcomp
ins
dec
pusha
loopne
fiadd
sbb
mov
sub
mov
xchg
dec
iret
ror
add
or
aad
adc
mov
xor
push
mov
inc
jae
sbb
icebp
into
inc
jnp
pop
cmps
mov
retf
pop
retf
shl
sbb
mov
mov
movs
fidiv
and
sub
pop
sbb
jg
add
stos
pop
push
in
sbb
aaa
xor
je
cmp
int3
sub
inc
loop
cmp
xchg
jp
xchg
push
stc
div
jecxz
loopne
mov
or
into
jle
icebp
jecxz
popa
lahf
sub
xchg
fs
dec
addr16
(bad)
loop
jle
dec
popf
test
jge
in
inc
dec
ins
lea
addr16
mov
push
imul
repz
mul
ret
das
fsub
loope
js
fld
xor
mov
sbb
adc
inc
pop
mov
or
xor
inc
jmp
jns
cmp
push
add
mov
jo
cli
push
movs
mov
adc
and
(bad)
push
or
bound
mov
xchg
jmp
pop
push
repz
pop
fmul
add
push
iret
repz
or
ret
pop
je
dec
pop
inc
cmp
dec
(bad)
sti
xlat
sbb
inc
icebp
cmp
(bad)
not
add
lods
fadd
inc
mov
addr16
fild
xchg
imul
push
pusha
call
dec
xor
pop
add
aaa
aam
sub
enter
push
jne
push
aam
adc
sbb
sbb
jmp
iret
push
dec
scas
inc
cmc
leave
call
lahf
arpl
cmpps
mov
shl
pop
mov
int
push
ret
pop
adc
inc
inc
in
and
movs
out
(bad)
add
pop
jmp
push
jns
jo
mov
add
iret
sbb
inc
aad
arpl
jl
or
dec
(bad)
dec
repnz
lahf
sub
call
mov
push
dec
inc
test
cdq
mov
dec
je
push
outs
pop
adc
inc
shl
pusha
mov
jb
int
ret
push
add
add
scas
xor
jecxz
jle
retf
(bad)
icebp
loopne
push
cld
xchg
enter
popf
push
iret
dec
mov
mov
add
popf
xlat
fsubr
repz
add
mov
push
je
jg
out
jns
cmp
mov
mov
add
cmp
scas
js
dec
mov
dec
pop
sbb
sub
pop
mov
movs
daa
std
repz
cdq
imul
in
adc
sub
pushf
fs
fdivr
or
xchg
push
xchg
jb
imul
lods
push
repnz
repz
arpl
shl
adc
aaa
or
push
test
pushf
sbb
imul
and
test
pop
pop
retf
ds
ds
xor
stos
cmp
mov
jmp
mov
(bad)
mov
jge
hlt
pop
pusha
loope
inc
mov
cmp
dec
and
cmps
fnstcw
punpcklwd
jecxz
jae
mov
cwde
xor
pop
add
in
enter
cmp
movs
push
stc
xlat
jne
loopne
stos
retf
xchg
add
mov
clc
shl
mov
mov
sahf
in
je
inc
sub
call
mov
dec
xchg
mov
or
push
ja
xchg
and
jge
scas
call
js
sbb
outs
push
js
jle
jo
inc
into
das
pop
lea
test
(bad)
cmps
cwde
rol
push
jmp
jmp
mov
inc
add
mov
mov
fild
nop
stc
test
loope
mov
mov
nop
inc
daa
cld
cmp
pop
(bad)
xchg
daa
fs
lods
jbe
mov
fsubr
push
pop
loop
jns
inc
sbb
shl
jns
aad
mov
add
ss
bound
jge
sub
enter
cmps
mov
aam
and
xchg
mov
rcl
xor
movs
add
shr
xchg
ret
aam
retf
loopne
loop
div
xchg
dec
pop
pop
pop
pop
fs
mov
aas
ret
mov
dec
mov
dec
sbb
add
jne
dec
aam
in
int
fst
arpl
js
mov
mov
cmp
into
jmp
ins
maskmovq
div
stos
shl
xchg
mov
xor
outs
xor
sbb
mov
movs
(bad)
xchg
lahf
adc
jno
popa
jmp
sub
mov
aam
test
mov
stc
jle
sbb
sbb
cmps
nop
sub
not
dec
cmp
jmp
ds
(bad)
mul
or
dec
jle
iret
sub
int3
(bad)
inc
inc
retf
call
mov
cmps
dec
mov
and
shl
ins
gs
jmp
pop
push
in
(bad)
xchg
cwde
aad
loope
and
pop
xor
pop
cmp
mov
adc
xchg
mov
cld
out
xchg
mov
push
mov
xor
mov
movnti
adc
mov
pop
xchg
mov
push
sub
sbb
shl
inc
(bad)
pop
enter
pushf
rol
dec
int3
rol
lds
jno
jmp
mov
or
sub
push
pop
jg
sbb
xor
xor
mov
mov
arpl
dec
jecxz
test
cmp
out
mov
dec
mov
into
int3
in
adc
cli
pop
ins
movs
(bad)
div
(bad)
fcomp
arpl
sahf
add
push
gs
mov
add
inc
aam
hlt
cmp
mov
cdq
jmp
sar
push
lods
push
loope
addr16
dec
imul
jb
cmps
sahf
push
cmc
lahf
cwde
stos
int
aas
fisub
xchg
mov
addr16
retf
aas
scas
mov
mov
xchg
ret
xchg
(bad)
dec
pop
and
inc
or
xor
test
push
cmp
or
sbb
sbb
(bad)
cmp
sub
xchg
je
push
loop
mov
fnstcw
test
retf
test
test
rol
(bad)
cmp
dec
pop
adc
mov
jmp
cmp
not
cmp
gs
jmp
and
aam
mov
sub
push
cmps
xor
jmp
lods
out
xchg
jmp
out
inc
(bad)
mov
(bad)
ror
pop
pop
pop
cmp
dec
mov
ror
pop
mov
stos
push
outs
and
(bad)
xchg
jl
int3
loop
or
lahf
outs
inc
data16
xchg
mov
adc
add
lock
dec
mov
mov
inc
bswap
sub
xchg
or
je
retf
add
cli
pop
dec
call
lods
push
push
lods
xor
inc
push
cmp
lds
jae
xchg
add
loopne
xor
mov
sbb
ja
mov
pop
push
icebp
ja
and
push
ja
jecxz
pop
test
pop
push
retf
or
dec
lahf
cmp
xor
cmps
enter
and
aad
mov
pushf
xlat
dec
mov
mov
push
inc
dec
push
out
or
std
call
loop
sbb
idiv
cmps
repz
cdq
push
sub
cmc
inc
fst
icebp
push
add
pusha
call
aad
stos
clc
call
and
jmp
mov
jl
add
das
cmp
push
xchg
adc
jmp
jnp
les
inc
push
or
pop
sub
out
(bad)
mov
push
shl
call
movs
mov
loopne
ins
mov
clc
or
mov
and
pop
jmp
jne
and
aad
aas
push
movs
dec
pushf
imul
fcom
repnz
jbe
push
cmp
and
pop
cmps
xchg
push
sbb
jne
xchg
loope
add
call
xchg
mov
jmp
and
dec
rcl
popf
jmp
std
in
ret
test
out
dec
test
mov
jno
xchg
loope
arpl
and
bound
stos
sti
pop
sbb
rol
imul
inc
addr16
repnz
enter
bound
aad
sub
sub
test
mov
and
or
adc
(bad)
xor
adc
pop
cmp
call
jg
push
sbb
sbb
mov
mov
xlat
inc
cmp
or
int3
mov
push
jmp
mov
int
xchg
inc
mov
cmp
jle
cwde
sti
sub
shl
push
pop
data16
jecxz
mov
jmp
fbld
shr
rcl
shr
int3
(bad)
mov
pop
sbb
jl
mov
mov
xchg
mov
sahf
test
scas
je
push
dec
lods
gs
adc
cmp
mov
jnp
cwde
xchg
or
adc
and
sub
jne
inc
adc
xchg
pusha
cmp
loopne
or
xchg
imul
enter
sub
inc
enter
mov
dec
rcr
call
shl
pusha
dec
sub
je
add
add
adc
test
ror
leave
inc
loopne
rcl
fs
std
les
aas
mov
test
mov
cmc
dec
popa
test
sub
lock
(bad)
fldenv
fstp
icebp
repz
lods
mov
cld
mov
or
(bad)
leave
xor
je
cmc
mov
iret
xchg
imul
sbb
mov
sbb
ror
sub
inc
test
dec
test
outs
repnz
vpand
ror
mov
sub
xor
dec
cmps
cmp
inc
enter
mov
push
fisttp
add
mov
cmps
aas
pop
sbb
sub
mov
jo
aam
mov
or
cli
mov
icebp
jecxz
bound
fild
pop
add
mov
outs
ds
fwait
dec
xor
popf
je
mov
fimul
lods
jb
or
iret
aam
mov
aaa
cli
push
cwde
xor
mov
xor
test
leave
xlat
dec
addr16
popa
cmp
sub
sbb
add
call
(bad)
xchg
ins
mov
xor
jle
mov
std
pop
(bad)
lock
sub
int3
mov
jle
clc
fwait
add
mov
mov
mov
outs
dec
sbb
idiv
lods
dec
std
sbb
sub
adc
mov
jbe
or
jl
mov
movs
call
inc
and
jae
ret
inc
xor
iret
icebp
(bad)
retf
mov
or
shl
add
cmp
fidiv
jb
cmc
ret
iret
ret
dec
jne
or
icebp
sbb
cs
stc
sti
adc
into
cmp
cmps
or
inc
imul
fist
imul
(bad)
mov
ins
and
jp
adc
bound
pop
pop
cmp
hlt
stos
xor
or
je
jns
xchg
push
pop
inc
into
ins
daa
ss
cs
pop
pop
hlt
mov
sbb
lahf
mov
out
hlt
lds
jg
dec
outs
jmp
out
mov
je
cs
pop
sahf
(bad)
fild
cwde
ret
movs
movs
mov
pop
xor
or
out
(bad)
or
sub
pusha
icebp
dec
sbb
dec
sub
enter
rcl
dec
outs
or
xchg
sub
sbb
ins
test
mov
rol
test
loopne
lock
js
pop
jg
pop
scas
push
popf
pusha
mov
retf
aad
ja
mov
jo
adc
call
lahf
in
outs
ret
movs
clc
enter
cmp
push
xchg
int
add
call
imul
inc
and
shl
cdq
dec
retf
inc
pop
sbb
xchg
lods
inc
add
push
data16
cmp
mov
inc
(bad)
push
sbb
mov
bt
cmp
jge
push
aas
fst
lock
xchg
mov
test
xor
add
and
lds
add
push
sub
sbb
test
add
dec
inc
mov
gs
scas
fs
push
xchg
shr
sbb
das
ins
mov
call
fst
mul
retf
(bad)
add
adc
ja
lea
retf
mov
std
cld
gs
mov
stos
xchg
and
(bad)
retf
jle
mov
jmp
mov
test
jl
retf
dec
in
mov
or
out
popf
les
jmp
(bad)
loop
cmps
ret
mov
in
pop
test
addr16
mov
jle
out
or
jmp
adc
cmp
cmps
repnz
cmc
popf
stc
and
in
and
(bad)
xor
pop
inc
xchg
mov
ret
sub
imul
pop
pushf
mov
xchg
dec
mov
loope
fimul
int3
mov
movs
mov
in
sbb
into
sub
mov
xchg
cld
cmc
mov
scas
add
les
sub
lahf
or
js
cmc
jecxz
in
pop
jg
cmp
aas
shl
inc
cmc
mov
jecxz
(bad)
pusha
es
fadd
sbb
xor
aad
jbe
xor
cmps
mov
mov
arpl
cmp
lods
pop
xchg
(bad)
push
or
iret
out
retf
(bad)
daa
pop
mov
popf
loopne
fisttp
jp
mov
xor
call
cmp
test
or
dec
sti
in
les
pushf
sbb
mov
jbe
imul
pop
and
mov
cwde
cmp
push
push
out
lahf
out
add
std
inc
scas
jmp
repz
mov
cmps
push
adc
stos
and
in
loopne
pop
mov
fisubr
xor
push
hlt
imul
xchg
mov
loop
push
or
mov
popa
add
sti
push
mov
xor
inc
sub
jbe
push
sbb
sub
jno
xchg
xlat
pop
jmp
bound
in
jmp
lock
jmp
aaa
jnp
mov
add
push
test
popa
or
aaa
dec
cmc
dec
int
mov
dec
das
xor
push
in
sbb
mov
cmps
mov
hlt
imul
or
addr16
ud0
cdq
dec
jns
cmp
mov
les
shl
les
sub
cmp
clc
xor
fisttp
lods
out
jp
jne
jae
or
xchg
mov
popf
xchg
out
(bad)
jp
in
test
(bad)
mov
push
jne
xor
push
fs
cmp
scas
enter
cmp
or
xor
mov
xor
dec
cmc
push
xchg
push
test
jmp
fld
or
dec
sbb
inc
(bad)
mov
out
fidiv
cs
outs
mov
aam
retf
dec
xor
add
push
in
push
lds
stc
(bad)
std
es
cdq
mov
dec
leave
dec
xor
xor
scas
dec
dec
pop
ja
not
mov
sbb
cdq
ror
out
test
in
dec
movs
pusha
clc
adc
ficom
pop
inc
inc
scas
dec
push
int3
outs
mov
dec
iret
mov
pop
xor
into
jno
mov
pop
add
sub
xor
dec
loopne
in
mov
jae
les
aas
mov
fistp
fcomp
daa
jae
test
js
cmps
push
lahf
(bad)
(bad)
push
aam
and
call
xchg
mov
mov
add
adc
imul
mov
or
jp
daa
std
out
std
loope
scas
xor
xchg
mov
clts
xchg
sbb
sub
cli
dec
pop
pand
dec
jo
jge
popa
rcr
cmps
sub
xchg
mov
call
inc
pop
push
ins
lods
and
mov
cdq
or
arpl
rcl
or
push
adc
xchg
and
test
or
cmp
ins
sti
sbb
pop
mov
mov
inc
mov
xchg
(bad)
xor
lods
dec
cmp
push
cld
gs
mov
(bad)
add
dec
lods
mov
add
out
loope
stos
rcl
push
mov
sbb
inc
in
adc
xchg
dec
repnz
ds
fcom
lahf
fcomip
inc
push
push
inc
mov
sbb
xchg
in
sti
or
sub
pop
(bad)
cli
adc
fidivr
repnz
cmp
xchg
xchg
movs
repz
repnz
test
repnz
mov
out
ds
xchg
daa
fistp
sbb
mov
sbb
sbb
jb
cmp
leave
out
jno
inc
add
push
xchg
loop
mov
out
(bad)
fwait
dec
inc
icebp
mov
dec
add
dec
fmulp
imul
and
imul
shr
pop
jl
loop
outs
xchg
sbb
out
(bad)
(bad)
imul
push
mov
push
cmps
inc
lock
sti
adc
mov
lods
push
es
das
cli
pop
dec
cmps
ins
add
bound
mov
mov
push
mov
cmp
dec
clc
mov
inc
or
dec
mov
lods
int3
cmp
pop
(bad)
hlt
cmp
fisub
fsub
mov
out
clc
pop
sbb
add
mov
pop
mov
xor
and
mov
test
fldl2e
mov
push
movs
fild
mov
cmp
dec
mov
leave
ins
push
pop
inc
sub
stc
cmc
jg
pop
sbb
jle
sub
sbb
inc
movs
mov
adc
loop
stos
mov
(bad)
iret
daa
fsub
icebp
out
sub
xchg
das
in
enter
and
lock
or
mov
or
loopne
in
pop
mov
jne
inc
out
adc
imul
fbld
adc
arpl
arpl
daa
mov
adc
push
jbe
in
ficom
leave
movs
stos
fs
mov
call
ret
(bad)
pop
and
dec
loop
scas
ucomiss
ins
shl
sbb
mov
js
retf
cmp
clc
add
pop
lods
movs
add
push
pusha
mov
ror
sub
jae
call
mov
and
jg
mov
in
and
inc
lods
add
add
outs
mov
lahf
jbe
jmp
push
int
loop
cmc
test
dec
scas
sbb
rcr
je
ret
mov
xchg
jae
mov
inc
add
test
add
shl
or
leave
rcr
jne
ss
loop
dec
popf
cdq
into
ja
mov
or
std
push
imul
add
call
je
shl
cmp
jbe
shr
dec
add
nop
call
pop
lds
in
dec
sub
sbb
repz
xchg
scas
(bad)
sbb
push
and
jmp
inc
cmp
xchg
into
pop
movhlps
arpl
out
enter
je
inc
fdiv
xchg
nop
fidivr
clc
push
sub
call
pop
inc
ins
daa
adc
leave
push
test
add
clc
mov
ds
inc
sub
xchg
or
cmps
push
bound
stc
ins
ss
pushf
push
icebp
lods
cmp
test
punpcklbw
xor
cmc
or
mov
lods
inc
mov
or
pop
push
(bad)
iret
cs
add
jno
lock
lock
adc
clc
add
lahf
test
cmps
sub
(bad)
aam
xor
outs
outs
mov
or
jae
push
push
pushf
ins
popa
add
mov
sub
lahf
std
out
hlt
lods
jne
fldcw
pop
inc
jns
inc
inc
mov
push
ins
ins
stos
jbe
ffreep
(bad)
or
jae
loope
and
xchg
inc
xchg
cmp
xchg
push
add
pop
fsubr
call
xchg
mov
pop
in
leave
pushf
push
outs
mov
in
arpl
test
adc
aaa
jg
or
(bad)
call
cmp
icebp
lds
(bad)
mov
pop
aad
jg
jl
outs
jno
jmp
push
push
inc
xchg
xchg
into
inc
fist
dec
xlat
mov
sub
mov
add
jbe
push
adc
add
cmp
fsub
ret
bound
or
add
imul
hlt
jl
mov
xor
icebp
call
pop
int
addr16
or
and
sar
sbb
ret
inc
sbb
mov
call
inc
ret
mov
ss
jcxz
out
adc
daa
nop
pop
bound
push
out
add
nop
dec
mov
out
mov
cmp
inc
or
data16
pop
popf
int3
sbb
cli
pop
jge
ins
inc
jb
push
xor
loopne
xlat
fidiv
jg
int
outs
(bad)
imul
add
(bad)
mov
ss
aaa
xchg
pop
mov
fs
xor
sti
sub
push
loopne
add
leave
mov
ret
dec
outs
sub
jg
push
pushf
and
inc
pop
jbe
outs
repnz
inc
fs
shl
jp
jmp
pop
daa
out
cli
cli
loope
fild
into
or
cmp
out
fidivr
pop
sbb
add
aaa
lea
dec
jne
mov
mov
xchg
loope
pop
jmp
sahf
mov
in
jo
pop
xlat
lods
fsubr
sti
dec
cmp
ja
repnz
clc
aaa
mov
es
stos
dec
nop
mov
fild
bound
shr
inc
or
sub
inc
in
cmp
call
inc
outs
push
push
or
aam
mov
jmp
shl
mov
call
std
(bad)
sar
js
jne
pusha
inc
mov
xor
pop
(bad)
or
pusha
lods
add
syscall
add
push
scas
jb
(bad)
cmc
xchg
enter
xor
dec
push
adc
(bad)
fld
mov
fcomp
pusha
dec
mov
mov
daa
and
mov
pop
sahf
bound
push
inc
cmovg
iret
std
push
clc
mov
or
jl
cmp
mov
cdq
mov
push
push
sub
scas
out
dec
fiadd
add
dec
aad
or
mov
(bad)
push
int
add
(bad)
or
and
mov
movs
imul
shl
dec
inc
mov
xchg
iret
sar
outs
mov
daa
das
pop
cmc
fistp
push
fwait
add
aas
lods
cmp
mov
fst
loope
scas
mov
adc
ins
jno
adc
pop
movlps
dec
dec
dec
pop
push
dec
icebp
xchg
cwde
push
jmp
jmp
lock
in
test
push
mov
cmp
rcl
or
mov
xor
dec
clc
bound
push
mov
xor
inc
pop
fst
iret
xchg
loopne
jecxz
enter
test
mov
retf
mov
int3
push
pop
xor
inc
pop
mov
repz
and
retf
push
call
xchg
jle
dec
movs
stos
(bad)
sub
sar
shl
shl
cwde
or
daa
ficomp
test
pop
addr16
cdq
(bad)
daa
add
dec
dec
dec
jnp
fucomip
js
mov
sbb
inc
es
xchg
adc
xchg
ds
xchg
pop
pop
sub
int3
sub
sub
sbb
and
or
inc
mov
add
ror
fdiv
xchg
mov
mov
outs
mov
xor
or
out
xchg
adc
loope
neg
xchg
and
rcr
pop
mov
mov
(bad)
dec
and
sbb
ret
xchg
fistp
and
push
inc
maskmovq
inc
es
xchg
mov
test
mov
scas
rcl
cmps
ret
mov
mov
mov
loope
hlt
dec
stc
push
fs
mov
sqrtps
je
enter
jg
push
fcomip
add
fadd
push
inc
retf
jne
cli
stos
jmp
xchg
push
jmp
jns
in
jae
mov
out
(bad)
out
std
jno
cli
mov
fwait
outs
mov
arpl
mov
shl
(bad)
or
xchg
cdq
shl
imul
inc
jo
xchg
push
xor
adc
mov
repnz
loopne
outs
adc
hlt
daa
(bad)
mov
jns
push
fstp
arpl
bound
xchg
dec
bound
(bad)
mov
inc
movd
and
pusha
popa
xor
fcmovu
shl
push
call
fwait
popa
mov
sbb
sub
xor
xchg
imul
add
outs
addr16
mov
push
mov
or
out
rcl
scas
dec
loopne
cmp
das
stc
push
test
push
mov
cmp
clc
push
das
jne
mov
jl
add
int
xor
mov
adc
jns
add
or
xchg
movs
cmps
iret
and
daa
sub
mov
cmc
bound
adc
inc
aas
movs
es
das
test
dec
mov
xchg
adc
jo
xchg
shl
jg
mov
sub
stos
xchg
jnp
inc
outs
mov
mov
adc
or
mov
gs
xor
sub
mov
dec
xchg
(bad)
lahf
xchg
inc
mov
loope
fst
pop
in
bound
adc
neg
out
fscale
or
mov
les
or
mov
adc
cmp
cmp
cmp
add
xor
(bad)
jmp
jne
pop
xlat
mov
ret
imul
shr
adc
add
imul
add
pop
cmp
es
pop
xor
dec
xchg
cmp
pop
(bad)
jmp
push
xor
jp
push
fucom
popf
dec
xor
jne
push
xor
aaa
mov
or
dec
mov
inc
xchg
retf
ror
cli
or
dec
or
(bad)
and
xchg
repnz
int
and
mov
les
push
test
in
or
and
and
fnsave
dec
adc
test
aas
xchg
repz
cmps
ins
push
jp
and
dec
pusha
leave
push
adc
xchg
jno
scas
xchg
cmp
or
lahf
push
fdivrp
sub
push
add
push
(bad)
das
std
(bad)
adc
call
sahf
push
xchg
movs
cmp
mov
jl
jmp
cmc
sahf
enter
in
xchg
enter
sbb
pop
aam
lds
ins
push
sub
lahf
pop
pop
mov
cs
pop
add
jg
jecxz
mov
std
adc
add
std
push
add
inc
cmc
out
test
adc
data16
stc
xchg
leave
sbb
pop
mov
ins
ja
int
and
shr
sub
pop
mov
push
xchg
(bad)
js
lock
add
xor
cmp
mov
rol
or
mov
out
movs
and
loop
inc
adc
jmp
fistp
sub
sub
dec
jle
mov
fld
sbb
cmp
outs
loopne
mov
jae
rcl
push
cs
cmps
stos
sbb
test
xor
mov
and
not
dec
ss
pop
lock
daa
pop
pop
mov
jne
jge
or
scas
xchg
inc
mov
out
pop
push
pusha
in
cmps
xchg
pop
push
mov
ret
cmp
xor
sbb
(bad)
sbb
sub
xor
push
pop
and
cwde
xchg
mov
int
into
fdiv
push
test
jle
loopne
ret
cmps
dec
pop
scas
jg
in
ja
jecxz
pcmpgtd
sbb
adc
pop
pop
sbb
jl
fs
arpl
inc
lods
hlt
ficom
pop
jge
(bad)
sar
int3
dec
push
rcl
rol
xor
xchg
xor
popa
inc
test
outs
mov
or
dec
pop
cmp
js
call
sub
sub
test
add
cld
or
arpl
arpl
jbe
cwde
pop
lahf
inc
aaa
inc
xor
enter
adc
xchg
sub
xor
and
repz
or
add
cmp
shl
mov
add
sar
in
cmp
(bad)
jecxz
xchg
leave
push
test
mov
add
jno
and
cmp
sub
in
mov
cs
mov
mov
lds
outs
not
fldcw
pop
xor
sti
inc
sbb
xchg
jnp
jnp
xchg
out
rcl
sbb
cmps
lods
popa
pop
jno
shr
push
cmp
mov
fwait
pop
push
inc
lock
or
movs
push
cmp
dec
jmp
or
mov
test
mov
retf
cmp
xor
out
fist
leavew
push
dec
and
fwait
xlat
and
imul
push
in
out
das
adc
cmps
add
rcr
mov
pop
cmp
je
cs
push
inc
mov
mov
icebp
icebp
or
sbb
mov
popf
test
test
push
imul
sub
lahf
push
retf
dec
pop
(bad)
adc
and
sub
ret
jae
sbb
and
pop
jmp
xchg
add
leave
imul
(bad)
lds
dec
outs
lds
mov
lea
and
mov
and
outs
jp
loop
ds
lods
push
mov
and
rcr
xor
xor
sub
loop
es
xchg
retf
mov
lods
or
pop
push
xchg
mov
(bad)
cmp
jnp
adc
cmps
and
mov
pusha
popa
int3
rcr
mov
sub
repz
xchg
arpl
dec
out
out
mov
or
es
addr16
cs
dec
mov
adc
ret
sub
cmp
shl
std
pop
ins
add
lods
add
adc
jg
ror
and
in
addr16
(bad)
cmps
into
add
rcl
push
mov
jecxz
hlt
push
pushf
sub
les
mov
xor
scas
dec
inc
leave
imul
sbb
adc
push
and
jb
or
sbb
xchg
lock
push
jne
inc
jo
push
cs
mov
mov
pop
dec
mov
mov
push
fidiv
sub
jbe
pusha
arpl
sbb
or
mov
stc
add
nop
sbb
arpl
dec
rcr
push
dec
mov
iret
adc
jmp
add
add
jae
(bad)
pusha
add
imul
fmul
ret
mov
pusha
sub
pop
push
adc
shr
retf
and
pushf
pop
je
sub
lods
mov
cmp
cmp
sub
gs
mov
pop
jnp
outs
xor
dec
(bad)
daa
jo
mov
pmullw
int
int
push
dec
lods
in
mov
nop
adc
aam
js
jnp
dec
pop
xchg
xor
hlt
or
call
jae
ins
push
sbb
cmc
xor
sbb
xchg
lahf
inc
popf
repz
jg
mov
jecxz
sar
mov
mov
movs
xchg
hlt
mov
mov
es
lahf
add
mov
jle
xchg
adc
mov
pop
int3
xchg
stos
xor
add
push
and
sbb
inc
rcl
gs
in
inc
mov
jo
rol
dec
sub
(bad)
pop
jle
js
or
cli
into
pop
adc
ds
mov
jp
dec
sub
mov
add
push
or
xchg
jne
pop
jle
xor
dec
cmp
xchg
test
or
or
retf
dec
les
leave
pop
sub
sar
inc
and
adc
mov
or
push
and
add
pop
aad
push
or
cmc
lahf
push
mov
xchg
xlat
jns
inc
dec
pop
push
inc
les
sbb
mov
cmc
sbb
sub
or
add
xchg
mov
jp
sub
cli
ds
inc
mov
xchg
or
and
jne
int3
adc
adc
adc
out
sub
repnz
fnsave
or
lahf
stc
scas
xor
push
into
adc
jg
out
cmc
and
loop
les
je
xchg
jge
loopne
leave
mov
mov
jmp
ins
js
js
clc
loope
fisubr
clc
clc
fs
mov
and
hlt
sbb
push
loope
cld
lods
push
scas
in
scas
dec
aam
aam
adc
xchg
ret
pushf
shr
pushf
scas
and
std
add
out
out
and
mov
jmp
ss
cmp
js
neg
(bad)
shl
or
and
in
dec
add
add
imul
sub
movs
lahf
jle
rol
push
scas
ins
xchg
push
lods
inc
retf
inc
push
jne
dec
add
aas
mov
xor
pop
out
mov
jg
lahf
paddsw
dec
pop
pop
add
jp
call
(bad)
xchg
push
bound
jnp
add
pop
out
mov
popa
add
mov
cmps
scas
sbb
jb
xchg
call
fdivr
jmp
dec
xor
mov
sbb
test
mov
ins
ins
and
push
sub
push
mov
in
xchg
xor
xor
aas
xchg
push
je
rcl
imul
das
popf
push
lock
jo
adc
jmp
or
lods
adc
xchg
pop
addr16
add
addr16
leave
xor
mov
pop
jge
mov
aas
out
and
mov
in
fldenv
cmp
int
arpl
inc
push
add
(bad)
cmp
test
ret
enter
sbb
test
and
adc
push
push
mov
ds
mov
pushf
jle
arpl
mov
add
cmp
popf
jmp
mov
mov
push
mov
push
xor
xchg
cli
fs
test
or
sub
adc
mov
cmp
scas
push
das
pop
mov
and
pop
je
xor
lds
pop
fiadd
dec
(bad)
add
push
fisttp
dec
mov
pop
sahf
rcl
mov
adc
mov
xchg
div
sub
adc
fwait
push
pop
or
sti
add
cmp
jecxz
inc
jmp
lds
sub
retf
inc
imul
fcmovnu
or
sbb
outs
pop
mov
sub
stc
sbb
out
sbb
(bad)
cmp
jnp
push
fistp
mov
xor
adc
(bad)
or
jb
inc
add
ja
push
mov
mov
ja
imul
pop
ins
or
dec
ror
pusha
inc
rcr
add
(bad)
scas
mov
inc
jge
enter
out
mov
xchg
sbb
loop
mov
mov
out
mov
scas
mov
dec
call
cs
lea
mov
jle
push
mov
inc
xor
(bad)
fidiv
(bad)
out
aas
mov
pop
inc
sub
repnz
imul
int3
or
push
jns
scas
sub
adc
dec
ja
xchg
outs
out
pop
sbb
repnz
pusha
call
lods
(bad)
ss
add
jp
cmp
in
xor
jmp
stc
jmp
dec
sub
ss
cli
das
pop
mov
push
xchg
jmp
shl
jnp
xlat
and
xchg
cmp
repz
ret
ficom
adc
dec
jg
leave
and
jp
fisub
(bad)
in
retf
xchg
js
icebp
scas
mov
sub
dec
push
dec
stos
shl
push
outs
mov
das
call
and
dec
xor
cmps
adc
sbb
add
stos
mul
jp
xor
sbb
jnp
fst
or
shl
xor
mov
lock
push
xlat
mov
jge
or
loope
out
sub
mov
inc
add
ret
add
cld
dec
ret
pop
ret
pop
adc
push
(bad)
jge
push
imul
clc
push
and
arpl
inc
retf
push
sbb
cmp
push
imul
imul
and
push
cwde
mov
or
pop
scas
rcr
scas
bound
mov
arpl
jmp
inc
stc
fmulp
xchg
dec
lock
stc
add
bound
sbb
mov
xlat
mov
pop
push
xchg
adc
stos
in
repnz
push
xor
mov
mov
aas
ss
out
inc
cmps
cmc
push
pop
cs
push
div
hlt
iret
inc
retf
(bad)
pop
inc
sub
out
sbb
jle
sub
and
out
mov
lahf
xchg
jnp
cmp
imul
sbb
into
les
pop
inc
xor
cli
rcl
bound
and
pop
pop
mov
jne
dec
outs
push
popf
cs
es
jns
ins
adc
ss
jle
movs
sar
mov
adc
cmps
inc
arpl
inc
retf
loopne
push
sahf
cmp
cmp
jo
retf
popa
push
nop
in
(bad)
cmp
(bad)
mov
ret
repnz
mov
ins
pop
ffreep
call
jp
xor
cmps
pop
adc
mov
sbb
scas
xor
cwde
stc
or
ret
int
jg
add
inc
dec
cli
adc
aam
dec
retf
(bad)
in
aas
sub
mov
repz
push
mov
js
or
pushf
inc
mov
mov
icebp
into
sub
ret
pushf
ins
pushf
sub
popa
lea
ffreep
imul
loope
pop
(bad)
push
fcomp
pusha
lods
dec
jno
mov
int
aaa
cmp
not
sbb
aaa
or
cmp
pop
add
imul
sbb
mov
cmp
ins
and
es
jno
icebp
cmp
out
mov
stos
add
jb
xlat
aam
xchg
enter
cmps
adc
mov
mov
xor
cmp
jmp
dec
add
push
dec
(bad)
pushf
shl
cmp
push
les
cdq
cmp
es
popf
cmps
xchg
jmp
jle
inc
dec
mov
lds
test
cli
repz
sar
cmc
xchg
mov
bound
aad
(bad)
and
arpl
jmp
push
mov
mov
cmc
jecxz
sahf
pop
and
clc
adc
pop
mov
adc
mov
movs
retf
int
les
and
es
push
cmps
outs
mov
adc
fiadd
sahf
shl
pop
cmp
imul
dec
add
movs
out
mov
push
call
daa
sub
and
xlat
inc
movs
push
dec
push
mov
inc
xor
dec
adc
cmp
ins
test
add
mov
dec
inc
and
dec
(bad)
out
movs
inc
push
test
pop
ds
or
push
nop
inc
(bad)
push
or
jmp
sbb
jmp
stos
cmps
cmp
jne
xchg
addr16
xor
xchg
cmp
cwde
stos
sahf
ret
cmp
test
mov
das
into
jp
lds
in
scas
or
adc
ror
cmp
mov
test
or
mov
push
dec
and
fld
sbb
(bad)
fldenv
stos
pop
push
clc
mov
dec
pusha
test
ret
in
loop
jg
push
inc
push
je
test
jge
dec
xor
lods
enter
inc
call
mov
inc
ret
xchg
and
inc
jno
sub
xor
mov
push
adc
aam
cdq
jnp
lods
repnz
mov
in
pop
xchg
popa
jnp
fsub
(bad)
dec
mov
cmp
or
aas
pop
push
sbb
pop
sbb
cmp
sbb
dec
dec
popf
mov
cdq
cmp
adc
(bad)
in
sbb
sbb
dec
nop
aad
jmp
xor
fnstenv
adc
aaa
movs
dec
(bad)
mov
and
jge
test
sub
retf
sub
das
out
inc
imul
fwait
or
gs
inc
out
mov
push
add
pop
lahf
add
sub
(bad)
call
mov
mov
adc
jmp
scas
iret
pop
xchg
fcmovnu
or
or
mov
xchg
xor
clc
aam
cli
(bad)
jae
jns
(bad)
lods
sbb
mov
cmp
xchg
mov
and
or
test
ins
in
push
ins
mov
xor
or
mov
mov
add
clc
scas
adc
jae
ja
xor
mov
shr
sbb
mov
aas
sbb
cmps
out
cmps
dec
xchg
or
inc
mov
hlt
ret
mov
mov
jp
dec
retw
out
push
dec
mov
jns
stc
repnz
xchg
sbb
push
jmp
and
sar
cli
nop
in
dec
xor
and
js
xchg
cmp
outs
sub
pop
sub
and
hlt
pop
rcr
jne
outs
or
fistp
pop
inc
adc
sbb
xor
or
inc
mov
xchg
sub
mov
jle
push
adc
les
fisubr
jmp
das
ficomp
pop
in
dec
inc
mov
mov
jp
sub
in
mov
push
sbb
ficomp
cmp
(bad)
mov
call
out
ds
fwait
ror
mov
xor
mov
sti
fldz
pop
cmp
fnstcw
jl
mov
adc
fwait
retf
in
dec
jae
fmul
cmps
xor
adc
fbstp
jle
addr16
imul
push
fxch
or
xor
hlt
scas
push
iret
je
cdq
ins
sub
(bad)
jg
scas
adc
aaa
outs
fwait
adc
retf
daa
call
int
lea
mov
and
mov
mov
pop
cmp
arpl
add
in
shl
call
cmp
mov
fidivr
push
xor
stos
out
cmp
test
mov
icebp
psrlw
daa
mov
and
push
jecxz
out
cwde
push
mov
ret
mov
shr
mov
push
fnstsw
inc
and
mov
in
fstp
xchg
js
xchg
(bad)
ret
mov
mov
iret
cmp
inc
sub
lds
pop
pop
int
jmp
call
sub
sub
dec
scas
adc
inc
push
repz
adc
add
loop
ret
ret
push
pop
test
ja
push
icebp
mov
retf
add
dec
dec
xor
jmp
mov
add
mov
xchg
jle
mov
jle
mov
jo
pop
retf
cli
mov
sub
cld
cmp
in
imul
jns
pop
and
shr
fbld
xchg
jnp
sbb
jo
mov
push
cs
leave
daa
xchg
mov
daa
cmps
and
and
dec
sbb
js
int3
cmps
inc
pop
add
and
fstp
lahf
mov
and
jne
jp
jg
hlt
or
gs
or
rol
cmp
push
dec
rcr
int
jb
sbb
xchg
data16
adc
inc
adc
loope
sub
adc
lds
call
aas
push
lods
lahf
(bad)
popa
mov
push
push
lods
test
pop
dec
ret
push
iret
cmp
dec
test
rol
ins
jbe
ret
sbb
ficom
push
sub
jmp
mov
cmp
add
sub
cmp
stc
push
adc
add
sbb
pop
and
inc
push
xchg
add
fadd
repnz
cmp
jo
pusha
jmp
hlt
mov
cli
xchg
into
hlt
sub
jge
outs
cli
daa
fdiv
js
add
stos
ret
dec
movs
and
push
out
imul
add
mov
aam
test
jb
stos
retf
(bad)
mul
out
jecxz
sbb
into
gs
inc
mov
imul
mov
mov
fidivr
stos
retf
gs
fs
sbb
cmp
or
pop
int3
outs
ret
lods
or
pop
jmp
cmp
out
loope
call
jp
mov
mov
out
xor
bound
xor
(bad)
sahf
cdq
retf
mov
out
or
ror
xchg
and
loope
cmp
mov
enter
cs
sub
pop
mov
pop
frstor
pop
dec
not
jo
mov
rol
jge
mov
and
jne
xchg
test
sbb
xchg
cmc
sbb
fsubp
fnop
fld
mul
enter
sub
popa
add
int
stc
inc
fsubr
push
mov
xor
push
or
mov
shr
repz
xor
xor
nop
jne
adc
(bad)
jmp
xchg
std
add
nop
xchg
inc
jmp
pop
je
mov
mov
add
in
inc
rol
push
lods
scas
push
test
test
xchg
out
push
pop
mov
xor
in
push
sub
nop
int3
loop
data16
(bad)
jmp
inc
frstor
dec
mov
dec
dec
add
jge
pop
xor
mov
scas
retf
or
loope
or
out
lahf
sub
mov
es
mov
push
fadd
out
add
mov
or
mov
imul
pop
xor
outs
std
aad
dec
cdq
(bad)
and
adc
mov
cmp
(bad)
je
add
jmp
fwait
xor
es
pop
mov
int
out
outs
clc
test
les
jecxz
adc
xor
cwde
inc
or
gs
mov
data16
mov
and
jns
scas
sbb
pop
push
xor
add
push
add
or
cmp
or
cmp
jle
dec
loop
sbb
xor
fdivr
pop
aam
xor
loopne
(bad)
push
xchg
inc
dec
jmp
or
sub
fisubr
xchg
icebp
jo
xor
idiv
int
mov
jle
and
pop
fnstenv
ds
xor
je
cs
cmp
push
(bad)
fidivr
mov
test
sub
imul
sub
mov
adc
mov
xlat
sub
push
stc
lahf
cmp
stc
dec
or
jmp
mov
(bad)
ficom
xchg
mov
cmp
jbe
inc
mov
xacquire
inc
dec
sub
repnz
aaa
cld
outs
mov
out
loop
push
pop
mov
stc
inc
sbb
cmp
push
cld
push
in
out
sub
dec
das
cdq
mov
and
out
jo
mov
in
pop
xor
and
mov
in
pop
add
xchg
inc
pop
ficomp
mov
(bad)
push
hlt
stos
mov
adc
push
sub
mov
push
(bad)
repnz
loop
enter
(bad)
shr
(bad)
xor
push
nop
push
imul
inc
push
std
fs
mov
cmp
fild
(bad)
mov
enter
out
inc
sbb
and
and
add
fild
pop
pop
lea
inc
hlt
sbb
mov
in
int3
cmps
(bad)
(bad)
retf
scas
sub
mov
jl
jno
cmp
sahf
mov
push
pop
lods
pop
sti
inc
cmp
out
hlt
mov
ja
push
test
std
pop
sub
dec
mov
std
js
mov
out
push
retf
mov
lods
and
lods
gs
out
mov
push
adc
scas
jmp
inc
sbb
inc
sub
cmps
cmovs
mov
and
pop
mov
and
les
dec
data16
pop
nop
adc
and
sbb
add
stos
mov
mov
in
aam
jae
and
pop
in
lods
dec
sub
jge
jbe
dec
jle
iret
xor
test
out
jb
outs
fdivr
or
jns
sbb
scas
mov
lock
outs
or
xchg
jl
js
dec
mov
mov
sti
stc
enter
jle
ja
shl
(bad)
pop
sub
mov
ficom
add
jae
pop
gs
pushf
ds
clc
add
call
jmp
ins
shl
mov
push
xchg
call
ins
or
pop
aad
add
xlat
push
sub
std
mov
dec
sub
addr16
mov
jmp
pop
call
pop
mov
lods
into
les
add
shr
xchg
into
hlt
cmp
mov
and
adc
imul
data16
into
or
fdivr
or
or
sbb
gs
xchg
daa
dec
repz
arpl
dec
and
lds
pop
xchg
mov
xchg
fwait
mov
repz
mov
or
cmp
lock
xor
ja
ret
mov
adc
xor
mov
cmc
sbb
pop
dec
nop
xor
jne
imul
test
push
shl
les
or
cmp
jg
jo
pop
in
das
inc
dec
inc
inc
retf
xchg
xchg
dec
sub
jbe
push
lahf
mov
test
push
icebp
xor
je
push
daa
sub
adc
ins
rcr
mov
daa
inc
aaa
jl
fsub
pop
and
ret
cmp
rcl
sub
pop
jae
adc
arpl
ret
sub
call
(bad)
jl
adc
fsub
addr16
lahf
es
adc
fsubr
and
(bad)
(bad)
int3
lock
add
movs
sbb
scas
sub
push
or
syscall
call
ins
sbb
(bad)
mov
(bad)
leave
ror
add
and
int
ret
sub
cmp
add
or
out
movs
cmp
jmp
in
xchg
rcl
mov
or
cmc
inc
push
pop
jae
(bad)
into
fcmovb
jp
outs
out
jecxz
out
push
repnz
out
jns
cmp
adc
xor
push
inc
cmp
inc
fwait
jge
jge
sub
sbb
mov
xor
push
iret
sbb
hlt
dec
ins
or
ins
add
adc
fs
fwait
mov
arpl
mov
adc
dec
das
and
inc
xchg
in
dec
(bad)
cs
test
sub
cmp
imul
scas
jnp
mov
in
rcl
test
inc
stos
(bad)
mov
push
lods
mov
scas
call
clc
jle
inc
lds
cmp
sbb
add
sbb
jl
imul
sahf
jo
push
jge
inc
mov
cmp
inc
push
mov
adc
mov
cmc
stos
sbb
out
fnstcw
jmp
xor
mov
sbb
ins
and
pop
not
pop
inc
call
dec
xor
and
jp
iret
mov
inc
push
xchg
adc
fnstenv
aas
ins
mov
adc
xor
adc
xchg
iret
sub
daa
dec
mov
add
lods
push
leave
and
int3
push
xor
mov
cs
call
stos
retf
jp
les
jnp
add
xor
cmp
std
movs
and
or
ret
sbb
out
mov
push
adc
in
jae
push
push
lea
push
inc
popf
loopne
mov
sub
into
dec
mov
les
hlt
jg
mov
(bad)
or
jae
jge
das
cld
(bad)
loope
dec
jne
daa
cmp
je
outs
ins
and
in
sbb
in
and
gs
aam
dec
jp
shl
bswap
add
inc
nop
mov
mov
push
retf
xor
and
fwait
out
inc
shr
mov
icebp
dec
imul
cmp
aaa
imul
arpl
fisttp
lods
push
enter
mov
scas
stos
shr
in
add
mov
pop
jne
and
jge
inc
dec
stc
inc
xor
mov
shl
mov
scas
xor
jge
or
xchg
out
lods
add
jbe
frndint
pop
mov
leave
clc
mov
je
(bad)
enter
lds
into
inc
dec
ret
or
retf
jns
or
mov
inc
pop
cs
adc
add
xor
inc
mov
iret
(bad)
lods
inc
bound
loope
jae
rcl
and
inc
nop
sub
cmp
(bad)
xor
xchg
lock
imul
rcr
and
dec
add
retf
push
sbb
sbb
or
sub
jbe
sub
in
call
jmp
(bad)
xlat
sbb
xor
rcr
test
add
mov
xlat
cwde
or
pop
ja
das
in
call
push
pop
sbb
and
xchg
je
xor
cli
sbb
pusha
sahf
scas
in
add
cwde
in
dec
mov
in
int3
xchg
push
stos
mov
dec
sti
adc
cld
cmp
sbb
jo
xchg
push
lods
inc
gs
mov
sub
outs
clc
(bad)
cmp
cwde
in
daa
xor
in
add
nop
sbb
pop
jne
lods
daa
push
or
jns
add
jb
mov
(bad)
lods
inc
push
mov
lock
leave
push
cmp
adc
dec
cmp
stos
inc
cld
ds
xchg
aas
push
ja
stos
icebp
mov
add
retf
mov
(bad)
push
fisubr
xchg
(bad)
iret
(bad)
mov
adc
enter
mov
shl
sbb
cmp
scas
bswap
ss
or
push
aad
das
dec
int
test
inc
add
mov
adc
scas
adc
in
inc
pop
and
sti
sbb
cmp
(bad)
push
imul
xor
mov
xchg
jne
rcl
xchg
aas
stc
aas
push
and
xlat
sub
ins
bound
outs
outs
out
add
mov
call
push
jg
(bad)
mov
icebp
sub
mov
fdivr
es
cmp
sahf
outs
xor
add
sub
aad
jae
pop
ficomp
call
jmp
push
add
stos
stos
(bad)
imul
loopne
scas
imul
sub
leave
dec
sub
or
ds
scas
push
adc
bound
xlat
jne
mov
fs
push
mov
iret
or
lods
(bad)
jmp
mov
aas
xchg
sbb
inc
es
sbb
jp
repz
into
sbb
sar
jge
mov
xchg
scas
cld
inc
or
lods
mov
push
sbb
fisub
mov
repnz
xchg
ret
jmp
xchg
mov
ret
ret
(bad)
pop
cmp
sub
test
jle
jg
in
jae
jmp
js
arpl
dec
and
pop
inc
mov
inc
mul
xchg
xchg
or
std
and
mov
fchs
gs
dec
fstp
aam
inc
out
or
test
pusha
fbstp
dec
xchg
sar
mov
(bad)
xor
call
inc
push
(bad)
mov
and
mov
pop
sbb
out
arpl
cmp
xchg
mov
fwait
sub
jb
jmp
jecxz
cli
inc
jecxz
outs
fimul
iret
test
mov
into
(bad)
popf
pop
stos
out
pop
add
pop
lods
push
sub
adc
pop
inc
dec
jle
add
inc
ds
call
hlt
ret
fimul
xchg
inc
and
jmp
inc
xchg
xchg
idiv
jb
aaa
cwde
mov
addr16
lods
xor
sub
pop
add
mov
or
add
push
jecxz
and
push
push
popf
je
hlt
mov
pop
sbb
(bad)
out
inc
loope
push
imul
sbb
fdivp
and
imul
jae
icebp
test
nop
jae
lods
lods
jns
xor
les
hlt
mov
dec
cmc
gs
rcr
push
cmp
push
mov
test
ror
enter
das
sbb
cwde
inc
outs
clc
test
lea
xlat
scas
inc
jmp
sub
xor
mov
push
dec
movs
mov
cmps
jae
(bad)
push
and
mov
sbb
push
pop
inc
mov
rcr
xor
in
dec
ret
jg
stos
jg
pop
dec
iret
dec
pusha
lods
cmp
scas
pop
clc
movs
test
clc
inc
fimul
std
jmp
push
mov
mov
sub
cs
daa
adc
bound
jle
jae
les
mov
jno
fwait
loopne
cld
retf
js
sbb
iret
cmps
mov
xchg
in
les
or
jmp
add
pop
mov
jmp
enter
xchg
retf
in
jae
jg
test
sbb
loopne
adc
repnz
add
fisttp
out
cmps
mov
fwait
ror
fmul
sar
xchg
sbb
jo
and
pop
xchg
bound
inc
sub
push
cmp
hlt
add
add
adc
ror
dec
mov
pusha
adc
mov
add
pushf
not
push
fld
add
xor
iret
xchg
test
cmovs
inc
push
sub
jl
mov
jle
adc
and
test
mov
mov
movs
int3
call
jle
(bad)
clc
out
nop
inc
in
test
cmps
inc
in
xchg
pushf
jmp
outs
xchg
inc
adc
jecxz
sbb
push
js
hlt
adc
es
je
leave
adc
jg
arpl
cmp
test
adc
stc
pop
call
les
xor
arpl
imul
ins
cdq
xchg
push
arpl
(bad)
sar
pop
fmul
inc
push
cld
ss
loopne
inc
or
ja
es
out
icebp
push
mov
mov
sub
mov
xchg
cli
mov
sar
stc
in
pusha
xchg
data16
nop
dec
dec
fcom
xchg
adc
xchg
test
ins
dec
mov
and
(bad)
mov
inc
mov
mov
sub
push
inc
xor
mov
hlt
sahf
or
mov
jae
(bad)
rol
xlat
mov
aaa
sti
fcom
sbb
add
sbb
rcl
mov
iret
and
add
sbb
popf
mov
adc
retf
mov
ins
dec
jecxz
das
mov
in
mov
push
xchg
and
jno
dec
cmc
mov
sbb
jbe
and
cmc
sub
leave
adc
cmps
(bad)
ud1
nop
out
pushf
addr16
cmp
xor
cmp
cmps
inc
ins
fisttp
ret
xor
popf
pop
pop
mov
cmp
mov
dec
ficom
sbb
xor
xchg
in
mov
pop
out
ja
repnz
sub
xor
data16
(bad)
outs
stos
aaa
jmp
lds
lock
cmp
cmps
pop
out
idiv
cs
in
and
cli
gs
jmp
pop
call
mov
in
retf
mov
mov
int3
out
js
pop
nop
jp
je
mov
mov
sbb
xor
dec
idiv
loop
jle
mov
je
xchg
ins
in
adc
pop
(bad)
or
sar
jecxz
retf
dec
jmp
cmps
push
cmps
pusha
(bad)
cmp
or
call
sar
jbe
test
in
jbe
movs
dec
scas
xchg
sti
mov
fcomp
js
mov
scas
pop
mov
in
mov
rol
dec
adc
xor
(bad)
mov
ins
(bad)
gs
inc
stc
int3
add
jns
int3
pop
out
repnz
ror
add
cmp
es
std
neg
adc
aas
jb
ins
lahf
cmp
or
mov
(bad)
retf
(bad)
int3
mov
outs
ror
pop
es
in
push
icebp
push
xor
ds
mov
scas
dec
sti
dec
addr16
loope
and
push
inc
push
inc
fisttp
push
dec
rcr
cmp
je
jecxz
pop
adc
cmps
pusha
(bad)
js
sub
jb
or
mov
xor
xchg
push
neg
push
jno
js
outs
scas
jp
loop
jae
les
ss
jae
adc
sub
lahf
xor
add
lods
push
mov
bound
sahf
mov
mov
stos
stos
jb
or
enter
adc
out
push
repz
stc
xor
fadd
mov
and
xor
and
test
mov
jb
loopne
add
ret
sub
test
push
rcl
mov
imul
jmp
dec
mov
fcmove
sub
ret
rcr
fmul
data16
lods
not
stos
inc
jp
mov
repz
aad
hlt
mov
sti
inc
sub
add
(bad)
and
fs
and
inc
(bad)
fisubr
adc
adc
push
jp
adc
pop
data16
cdq
mov
dec
and
mov
xor
mov
mov
jp
mov
imul
in
push
or
inc
ret
int3
ins
shl
gs
clc
dec
mov
pop
sbb
cmp
push
sub
adc
dec
sub
add
jmp
xchg
int3
mov
cmp
lea
into
sbb
or
cmp
imul
repz
jp
in
fstp
jmp
and
mov
outs
inc
sub
mov
sub
in
fs
sub
add
fadd
sub
lods
aas
inc
ja
xchg
sub
mov
sahf
aas
loope
dec
rcr
mov
jmp
or
ud0
adc
dec
ret
je
std
add
jle
jg
inc
fwait
mov
sar
sub
pop
pop
stos
add
inc
or
lahf
pushf
enter
scas
sub
add
pop
cmps
ja
scas
adc
ins
or
mov
sbb
jl
test
jnp
test
dec
jb
cmp
out
push
jb
cmps
xchg
aaa
lds
(bad)
xchg
jae
mov
pop
or
jo
std
jnp
jo
(bad)
or
cwde
mov
mov
push
sub
outs
and
sub
mov
cli
mov
das
xor
pop
stc
dec
mov
mov
inc
mov
shl
in
pop
mov
icebp
xchg
push
fs
popf
sbb
mov
gs
cmp
cdq
in
mov
mov
mov
push
and
dec
push
push
and
xor
call
daa
xlat
jge
mov
loope
das
outs
jae
or
cdq
mov
sub
xor
mov
xlat
cmp
jmp
or
repnz
sub
mov
add
icebp
push
aaa
adc
add
mov
xor
or
stc
push
push
mov
sbb
in
push
arpl
cmp
xchg
loope
jbe
sub
dec
clc
(bad)
mov
test
rdmsr
pop
and
imul
loop
pop
sbb
leave
sti
cmp
daa
lock
sub
xchg
div
mov
sti
pop
cmp
mov
jge
cs
ins
sub
loop
mov
shr
add
retf
cmc
xchg
mov
inc
int3
enter
dec
popa
dec
mov
inc
cmps
push
sbb
iret
or
stc
dec
add
into
push
enter
mov
sbb
js
enter
stos
jmp
es
imul
out
aas
mov
cmp
xchg
xchg
jecxz
xchg
stos
mov
push
or
sub
mov
jl
imul
into
sub
aam
jo
pusha
xor
repz
mov
or
push
adc
push
cmp
xchg
push
mov
pop
xchg
shr
cmps
movs
into
mov
out
cmc
ja
mov
ins
sbb
adc
mov
mov
mov
inc
add
(bad)
or
clc
sbb
ja
ja
mov
ret
aas
add
fs
mov
inc
bound
xor
lods
sbb
sbb
add
pushf
xor
xchg
adc
push
fsub
or
std
out
movs
jl
cld
daa
push
jbe
jg
adc
dec
stos
cmps
lds
jns
lea
std
add
add
enter
push
cmp
mov
pusha
fstp
lea
fadd
ins
sahf
test
pop
and
xor
in
mov
jecxz
movs
in
lock
fwait
nop
or
pusha
rcl
add
mov
and
gs
out
xor
inc
cmc
cmps
sub
ret
repz
ins
mov
mov
mov
popf
jmp
xchg
test
dec
leave
fidivr
cs
mov
out
mov
sti
ret
pop
out
dec
jae
sub
addr16
mov
iret
fisub
sub
mov
adc
mov
int3
cmp
popf
mov
and
pop
sahf
cmp
(bad)
dec
idiv
fdiv
into
dec
add
popf
fs
pop
popf
fwait
popa
and
dec
pushf
(bad)
adc
ins
in
jns
ins
movs
std
jle
data16
loop
ins
pushf
test
mov
(bad)
or
ja
add
std
jnp
push
mov
psubsb
lods
sbb
or
push
outs
lods
adc
cmp
push
mov
shl
cmp
cmp
push
jmp
adc
nop
pusha
rcl
mov
adc
js
or
xor
cmps
pop
rol
shr
and
xchg
push
jae
xor
dec
add
(bad)
mov
cmp
cmp
into
sub
sub
sbb
dec
test
inc
pop
jle
jne
ret
retf
jo
dec
push
mov
inc
add
ret
in
jne
jmp
pushf
sbb
xchg
cmp
sti
sub
mov
aaa
jmp
xlat
add
sahf
movs
or
push
outs
cwde
nop
mov
mov
adc
es
stos
out
mov
data16
dec
push
ja
sbb
push
jmp
jae
(bad)
leave
jp
pop
lods
inc
mov
add
mov
stc
and
cli
call
stos
adc
gs
jmp
stos
test
ret
sahf
fwait
push
xor
sub
in
xchg
je
lahf
mov
mov
jns
ss
xchg
js
xchg
cmps
iret
push
push
(bad)
(bad)
push
xchg
sbb
iret
ins
xchg
out
(bad)
mov
popf
loope
push
inc
and
fldcw
pop
xchg
mov
test
mov
retf
jno
clc
add
jp
jbe
pop
loop
popf
loopne
pusha
(bad)
sub
ss
pop
add
mov
(bad)
mov
dec
push
sub
pop
popa
pop
(bad)
push
jl
add
mov
cmp
movs
sbb
lods
(bad)
mov
add
adc
in
not
cld
cmp
enter
push
inc
cmp
fwait
inc
das
frstor
xchg
push
sbb
loop
sbb
mov
xchg
pop
mov
(bad)
push
push
jecxz
cli
cmp
js
jp
fidiv
push
cmp
popa
popa
inc
call
jbe
call
xchg
mov
mov
mov
push
cmps
xor
push
in
dec
inc
push
popf
push
aam
sub
(bad)
mov
(bad)
xlat
(bad)
cld
lahf
or
mov
cmp
dec
test
outs
in
cld
retf
in
jne
fild
mov
je
stos
pop
dec
mov
push
out
mov
ds
shl
jbe
fcom
int
test
pop
and
adc
sub
add
cmp
aam
outs
test
push
jg
add
xchg
xchg
std
loop
xor
scas
nop
(bad)
jnp
cmp
sbb
mov
icebp
pop
imul
mov
icebp
test
jno
scas
out
mov
test
mov
add
cmp
ror
pop
jnp
repz
into
outs
outs
xor
or
jmp
cdq
adc
stos
aaa
fild
mov
xor
aas
push
adc
aas
sbb
lea
sub
out
in
out
or
ret
pop
repnz
mov
xchg
adc
xchg
add
dec
les
shl
xchg
dec
in
inc
cmp
dec
fmul
xor
pop
stos
icebp
add
fist
imul
pop
dec
fcomp
push
xchg
(bad)
push
out
lahf
int3
aam
js
(bad)
loop
mov
jmp
pop
icebp
lods
mov
icebp
adc
jge
push
jmp
dec
stos
daa
addr16
xor
add
pop
imul
push
mov
push
and
and
pop
jno
and
sub
push
cmp
ins
mov
dec
mov
xor
cmps
loopne
xchg
dec
or
lods
and
loope
ror
mov
xor
fisubr
ins
pop
mov
mov
sub
mov
mov
ja
xor
push
shr
lods
fnsave
jecxz
scas
add
imul
and
push
test
les
jo
test
popa
arpl
mov
cmp
push
mov
adc
xchg
adc
cmp
dec
ficomp
xchg
push
arpl
(bad)
(bad)
sbb
shl
inc
sub
and
pop
cmp
inc
and
jp
lods
jl
dec
popf
outs
pop
xchg
push
mov
(bad)
or
pop
xchg
jnp
cdq
jle
mov
xchg
mov
ins
cmps
pop
loop
or
xlat
ficomp
xchg
out
pop
aaa
(bad)
ds
scas
nop
aad
popa
rcl
retf
std
in
xchg
outs
xchg
jns
pusha
mov
jg
or
xor
and
mov
mov
mov
jle
ret
add
jmp
xor
fldenv
dec
xchg
repz
dec
pop
xor
das
je
xchg
sar
imul
or
int3
pop
pushf
retf
je
jo
pop
cld
push
cmc
stos
push
push
pop
inc
mov
sti
ret
fiadd
pop
dec
loop
bndldx
jmp
or
ins
lods
mov
push
out
dec
add
test
add
not
fadd
das
inc
adc
add
loopne
arpl
lahf
lock
xor
dec
mov
or
call
xor
(bad)
mov
sbb
or
std
aas
test
pop
test
mov
mov
jb
enter
dec
cmp
mov
xchg
sub
sbb
cwde
mov
clc
(bad)
jmp
push
adc
add
push
mov
add
xchg
imul
pop
data16
add
dec
mov
and
dec
jns
sahf
aas
push
int3
add
gs
fbld
pusha
imul
sbb
sbb
sahf
leave
xchg
push
sti
and
cvtpi2ps
int
pop
loopne
shr
adc
jecxz
cs
dec
fsub
les
lods
pop
xor
arpl
outs
inc
out
shl
outs
sbb
ror
ins
sahf
aas
popa
jmp
aas
add
sbb
jnp
enter
pop
jno
lods
shr
fcomi
add
dec
lds
pop
pop
adc
inc
aam
mov
mov
pop
dec
mov
fwait
or
lahf
push
pusha
mov
call
inc
sar
pop
lods
repnz
in
add
dec
es
and
bound
or
mov
inc
scas
ss
mov
adc
and
clc
mov
out
out
les
scas
stc
dec
in
add
and
xor
cmp
arpl
stc
dec
push
jb
xor
add
fist
repz
outs
lds
rcr
out
sbb
out
inc
retf
xor
(bad)
and
jns
addr16
mov
mov
lock
adc
ret
fdivr
mov
in
sbb
jmp
call
xchg
xor
dec
(bad)
outs
sbb
imul
neg
ret
push
pusha
pop
stc
gs
inc
xchg
add
stos
mov
(bad)
out
es
mov
loop
hlt
out
mov
inc
pop
jne
lahf
ret
add
and
loope
mov
fcom
call
pop
push
sub
sub
loopne
xor
retf
xor
lods
mov
push
jb
xchg
or
leave
adc
add
xor
rcr
in
xchg
push
in
push
retf
adc
ins
xor
sbb
sub
add
sub
fist
cmps
pop
push
sub
imul
push
add
push
pop
les
add
idiv
cs
cmp
int
mov
(bad)
fadd
adc
push
push
jmp
or
imul
shr
popf
mov
test
jl
add
stos
pop
std
or
xchg
(bad)
pop
cmp
aad
dec
(bad)
xor
call
dec
(bad)
adc
shl
sbb
add
pop
scas
lods
(bad)
mov
xchg
pop
jnp
mov
sub
or
inc
inc
and
scas
mov
sahf
hlt
jmp
pop
scas
test
rcr
add
ins
pop
test
sahf
loope
xor
inc
mov
xchg
and
or
lods
ins
xlat
outs
out
fld
fild
not
sahf
xor
and
aas
dec
fwait
mov
cmp
mov
push
test
aam
lods
popf
mov
mov
pop
out
xchg
popf
add
out
xor
xor
mov
movlps
xor
(bad)
adc
test
(bad)
lods
ins
mov
sbb
inc
leave
daa
iret
jae
mov
rcl
lds
jmp
xor
loope
stos
sbb
dec
or
fmul
imul
pop
movs
cmp
hlt
mov
jne
sar
inc
jae
cmp
dec
mov
pcmpgtb
out
mov
xchg
push
repz
cmp
fst
jb
cdq
ins
push
hlt
or
jge
enter
rcr
scas
or
nop
out
dec
ficomp
or
inc
push
push
add
mov
jecxz
pop
push
adc
pop
enter
lds
loop
or
mov
cmps
cmp
hlt
nop
shl
adc
sub
or
xor
push
adc
xchg
mov
repz
adc
xlat
lea
push
sub
push
dec
test
jnp
aaa
xor
icebp
jns
push
mov
mov
push
xor
je
(bad)
cmp
mov
mov
pop
(bad)
std
adc
dec
sahf
mov
pop
cdq
mov
ret
test
sbb
cmp
in
push
fdivr
(bad)
ins
mov
add
jo
cwde
cmp
clc
sub
retf
add
adc
mov
xchg
dec
add
sbb
mov
jl
push
mov
xchg
dec
aaa
add
outs
or
fiadd
aaa
or
cdq
or
int3
rol
push
outs
cmp
out
cmp
pop
retf
or
rcr
mov
dec
jns
fidiv
xor
xor
mov
cmp
xor
add
add
cmp
mov
dec
xchg
jnp
push
sti
adc
cli
adc
jp
add
sbb
dec
mov
imul
cld
cmc
add
mov
mov
mov
cmp
sub
cld
jmp
or
ins
xor
jbe
lock
imul
shr
scas
cmps
pop
in
push
pop
xor
dec
inc
cwde
mov
imul
icebp
xchg
or
mov
dec
rcl
dec
jbe
(bad)
ins
in
push
push
push
aas
inc
or
push
stos
(bad)
cmps
fldcw
mov
sbb
cmp
fiadd
fidivr
jl
int
add
pop
cmp
cmp
jle
lock
sbb
sub
push
pusha
pop
sub
adc
das
adc
dec
cli
adc
mov
shr
pop
mov
jno
icebp
aas
ins
outs
mov
xor
ins
ret
pop
jne
fsubr
call
adc
scas
jae
out
retf
sti
pop
jg
lock
cmps
dec
pavgb
lea
inc
lsl
in
sub
jl
xchg
fwait
mov
mov
push
dec
call
add
pop
(bad)
int3
fdivr
popa
adc
and
jnp
mov
cmp
scas
inc
call
xlat
push
rol
ret
bound
jmp
popa
push
das
test
jg
jge
out
lods
fist
jl
xor
lods
sbb
push
dec
or
inc
pop
movs
add
addr16
inc
push
cmp
imul
mov
push
iret
sub
mov
icebp
xchg
mov
shr
or
jmp
push
cli
xchg
mov
pop
in
cmp
neg
movs
inc
in
dec
add
jne
add
aam
lahf
inc
dec
inc
mov
out
adc
cli
xor
jp
jmp
sub
adc
pop
rcr
loop
jbe
mov
xor
and
add
fsubr
cmp
mov
lods
dec
add
imul
sub
push
pop
push
sbb
xor
mov
movs
push
pop
test
das
enter
or
lods
push
cmp
mov
pop
gs
std
mov
xchg
pop
pop
repnz
jnp
and
cmps
mov
popf
imul
and
push
test
icebp
outs
nop
fdiv
add
push
not
jge
cwde
mov
and
cmc
imul
jo
push
xlat
jge
xor
or
cmp
xor
sub
sub
scas
mov
and
push
rcl
push
xchg
cmps
adc
sbb
enter
ja
lock
shr
enter
xchg
inc
mov
mov
stos
push
out
mov
and
hlt
adc
sahf
sub
xchg
shr
(bad)
xchg
jmp
das
dec
shl
out
pop
jl
ja
repnz
pusha
shl
popw
stos
ja
cmp
mov
xor
pop
pop
lahf
pop
(bad)
pop
jno
movs
hlt
push
cld
test
cmp
sub
enter
xor
inc
and
fst
inc
ror
pop
xlat
adc
cmp
mov
xchg
sub
call
leave
inc
xchg
mov
fild
ins
mov
mov
xchg
movs
mov
mov
div
aas
cmps
mov
mov
ror
repnz
or
xchg
cmp
add
ss
jns
sub
mov
mov
cmp
mov
shl
leave
mov
ja
add
je
inc
out
rcl
hlt
pop
ins
jo
cmp
rol
adc
mov
fsubr
mov
mov
jg
div
jne
pop
xor
cs
push
movs
pushf
mov
push
adc
(bad)
xor
sub
(bad)
cmp
dec
pop
adc
cmp
fwait
push
data16
arpl
test
scas
ins
sbb
sub
lods
adc
pop
(bad)
push
and
and
xor
xor
in
sub
sub
int
push
iret
pop
mov
jmp
cmp
into
loopne
or
retf
xchg
ss
movs
cs
lock
mov
cmp
dec
rol
icebp
dec
hlt
addr16
push
jae
fild
lds
mov
cmps
ss
push
popa
adc
ins
stos
xor
fwait
aaa
push
add
rcl
xor
inc
jns
jae
outs
jg
adc
push
shl
cdq
adc
add
adc
std
shl
pop
jg
pop
mov
inc
mov
es
mov
mov
loopne
aam
add
xor
xchg
mov
bound
pop
clc
mov
outs
int3
jo
sub
cmp
shr
mov
or
mov
mov
ds
dec
jmp
push
out
and
hlt
push
stc
mov
dec
loope
pop
icebp
icebp
mov
mov
aas
lea
or
es
inc
push
jge
jns
xchg
lods
inc
mov
mov
in
jge
inc
int3
sbb
ins
add
jle
cs
mul
daa
or
push
cld
xor
and
loop
pushf
push
mov
fcomp
jb
add
cmp
rol
test
jl
xchg
jp
push
sbb
cdq
rol
pushf
int3
out
cmps
ss
das
jg
and
call
inc
xor
outs
pusha
js
cdq
loopne
mov
fs
sub
jae
add
in
dec
mov
sub
lock
into
and
ror
jp
xchg
push
inc
shl
mov
addr16
rcr
or
mov
mov
sub
(bad)
jp
push
jo
sub
inc
mov
std
pop
ret
xchg
sbb
int3
jge
xor
sbb
out
div
jecxz
aas
jmp
popa
sbb
sub
loopne
or
adc
ins
cmc
js
mov
inc
cmp
jno
ss
les
pop
nop
repz
mov
retf
and
mul
xchg
test
inc
xor
dec
push
adc
adc
add
lods
jmp
cmp
add
stc
sahf
ret
mov
fsubr
mov
inc
aam
dec
test
mov
pop
into
lock
adc
mov
mov
ret
xor
mov
(bad)
push
or
in
mov
pop
movs
push
fisub
and
popf
outs
cmp
fidivr
xor
jo
mul
popf
in
fsubr
ja
jge
ins
out
jo
jp
mov
rcl
sub
arpl
adc
loope
jno
jmp
movs
inc
pop
sti
add
mov
mov
cmp
outs
mov
rol
in
loop
mov
test
pop
cmps
test
(bad)
xor
jo
enter
pushf
jbe
in
and
test
stos
out
je
gs
pop
adc
add
mov
pop
sub
push
xor
ret
mov
xchg
push
mov
ins
outs
cld
xor
loopne
jle
xchg
pop
(bad)
dec
push
stos
pop
sbb
sbb
not
js
xor
and
(bad)
mov
xchg
xor
(bad)
out
mov
xor
out
dec
imul
es
sbb
fnstenv
sub
test
mov
and
dec
jg
cld
mov
cmp
(bad)
(bad)
add
fnstsw
and
ss
repnz
xchg
cmps
sahf
(bad)
mov
sbb
mov
arpl
add
cld
ins
mov
sahf
mov
mov
out
imul
inc
fldcw
dec
xchg
and
imul
mov
popa
mov
test
stos
adc
cdq
adc
add
fwait
mov
xchg
cmp
les
and
idiv
repnz
mov
cli
loope
pop
mov
mov
lods
push
sar
jle
out
xor
lods
fisubr
xchg
call
jbe
inc
cmps
fild
or
and
jbe
fs
out
stc
jb
mov
adc
jle
push
push
add
sub
leave
adc
lods
and
mov
mov
jb
mov
imul
loopne
shl
in
dec
test
jecxz
das
inc
fist
xor
mov
fdiv
or
pop
jmp
push
jnp
call
iret
sub
(bad)
or
out
mov
int
jge
sbb
imul
inc
xlat
xchg
mov
call
inc
adc
push
shl
icebp
loop
adc
test
aam
fwait
mov
jg
nop
jmp
cdq
retf
dec
mov
ins
loopne
push
push
(bad)
das
ret
ret
add
fcomi
adc
jns
push
idiv
mov
or
(bad)
pushf
jmp
mov
adc
adc
xor
ror
mov
rol
mov
rol
cwde
adc
mov
xor
cli
inc
or
xchg
iret
mov
xchg
sbb
jl
sbb
xchg
movs
popf
jno
bound
test
inc
into
add
loope
lock
ds
dec
inc
pop
mov
dec
fwait
inc
mov
sahf
xchg
xor
inc
mov
sbb
or
lahf
clc
sub
imul
and
cmp
in
cmp
xchg
xchg
mov
push
shr
inc
jae
push
cs
loop
push
and
popf
mov
fcomp
hlt
test
stos
adc
loopne
xchg
cmp
or
xlat
jb
inc
push
sti
out
fadd
lods
loopne
ret
inc
ret
jno
and
mov
aas
sub
cli
test
xchg
jp
sbb
add
cdq
fld
cmp
enter
ja
in
adc
lock
cmp
retf
ret
xchg
call
test
movs
aam
cmp
das
xor
cmp
mov
mov
mov
lock
xchg
(bad)
ins
xchg
into
call
int3
fwait
fwait
clc
xor
inc
xor
shl
and
pusha
mov
pop
sbb
into
add
ins
mov
mov
stos
sbb
mov
cmp
sbb
cmps
out
sahf
cld
mul
xchg
mov
fild
mov
cmps
mov
scas
inc
arpl
mov
rcr
inc
mov
sti
cmc
int3
inc
(bad)
pop
out
sbb
cmp
adc
sbb
out
jg
popf
imul
pcmpgtd
mov
sub
popf
imul
inc
jl
fld
pop
push
and
fwait
inc
and
cmc
sub
pop
repnz
dec
add
add
je
imul
xchg
shl
gs
xchg
mov
mov
stos
ret
and
outs
xchg
std
out
(bad)
test
dec
ficom
xchg
jp
js
iret
int3
or
jmp
rol
aaa
cli
jns
stos
mov
stc
test
cmp
es
(bad)
hlt
fsub
ret
xor
lahf
repnz
mov
pushf
or
lods
mov
stos
in
es
add
aas
leave
and
jae
mov
addr16
add
icebp
mov
pop
neg
xor
or
inc
jno
sbb
mov
cmp
sbb
rol
jb
lea
lea
cmp
iret
pop
lods
fstp
lea
add
test
cmc
mov
push
push
aam
add
es
nop
mov
xor
or
cmp
xorps
rol
aas
pop
pop
es
clc
into
test
(bad)
mov
add
jno
repz
js
test
imul
mov
or
dec
aaa
cld
sub
add
dec
or
pop
push
retf
push
repnz
outs
test
push
dec
mov
movs
jmp
xor
test
ins
arpl
mov
stos
jo
mov
loopne
fwait
and
jbe
sub
or
mov
sub
or
sbb
test
mov
imul
dec
or
ja
jmp
xchg
das
inc
fstp
push
pmullw
mov
xchg
aad
mov
std
pop
ins
stc
daa
mov
or
test
add
pop
mov
idiv
cmp
jne
jnp
push
inc
push
xor
jnp
xor
pop
mov
mov
pop
cmc
sbb
sbb
loop
cs
mov
sbb
nop
in
xchg
and
int
std
out
imul
cmps
dec
dec
pop
cmp
rol
inc
rcr
leave
fisub
inc
add
cwde
pop
repnz
or
repnz
and
or
jmp
add
pusha
mov
iret
cs
or
push
(bad)
mov
test
retf
test
push
out
xor
jmp
adc
pop
mov
mov
ret
cli
inc
push
int
enter
xor
iret
shl
mov
jb
pop
shl
cmp
or
mov
loop
out
xchg
push
and
xor
mov
adc
mov
xchg
aas
push
lods
out
jo
mov
mov
hlt
sub
movs
fdivr
adc
cmp
nop
add
push
or
inc
test
cli
in
mov
xor
(bad)
cmc
jnp
xchg
cli
push
lods
jo
and
or
mov
and
loope
ds
mov
adc
ret
ins
fsubr
(bad)
mov
dec
push
xchg
jno
dec
sub
fnsave
xchg
or
pop
or
test
xchg
into
push
or
(bad)
push
(bad)
mov
hlt
movs
pop
das
je
adc
cwde
sti
mov
cmp
or
test
and
nop
push
scas
fisttp
cmp
scas
out
mul
fucomip
add
pushf
adc
jp
push
mov
loope
fild
(bad)
xor
adc
(bad)
xchg
jge
cwde
addr16
ins
cmp
das
mov
xchg
lods
bound
in
or
loop
add
je
sahf
repz
movs
mov
in
and
xchg
dec
icebp
movs
inc
jns
shl
test
jmp
repnz
pushf
dec
jo
gs
mov
inc
lock
mov
aas
and
jb
cmp
test
pop
or
scas
sahf
and
fidivr
outs
sbb
clc
jbe
pop
rcr
in
cmp
cli
mov
(bad)
xchg
mov
inc
cmp
scas
repz
leave
das
pop
lahf
xchg
mov
jne
jb
and
mov
nop
loopne
xchg
das
test
call
daa
(bad)
pop
mov
mov
retf
or
sub
push
and
cdq
mov
test
out
inc
mov
push
lods
popa
pop
mov
jbe
or
out
or
inc
in
jae
mov
jecxz
sbb
add
xor
retf
xor
cwde
stc
and
dec
cmp
fbld
fadd
(bad)
xchg
std
shl
mov
adc
hlt
and
std
or
call
pop
rcr
pop
test
sbb
xchg
cmc
hlt
inc
adc
mov
fst
xchg
dec
outs
lods
cdq
into
jecxz
sub
mov
ins
xchg
div
imul
fwait
arpl
xchg
popa
mov
and
scas
pop
mov
fild
stos
and
scas
mov
jge
cmp
daa
mov
popf
mov
shl
and
xor
add
pop
adc
lea
lahf
push
push
clc
xchg
fst
js
push
push
inc
xchg
sub
adc
push
push
(bad)
rcl
xor
rol
jne
pop
mov
and
rol
xor
scas
nop
mov
add
sub
aad
shl
std
adc
out
mov
shr
into
fucom
jl
outs
or
retf
dec
aad
xor
add
ror
push
(bad)
in
mov
inc
xlat
lock
dec
data16
and
cmp
sbb
gs
enter
aaa
sbb
ficomp
push
mov
fldcw
xchg
add
iret
call
mov
scas
push
out
fcmove
sub
loopne
sub
jmp
xchg
adc
cmp
ret
pop
add
dec
mov
(bad)
mov
mov
inc
jb
mov
inc
leave
cli
or
outs
out
in
popa
mov
xor
xchg
movs
js
mov
xor
cmps
sbb
ficomp
inc
test
(bad)
fnstenv
xchg
jl
mov
and
inc
xor
mov
aaa
sbb
ss
add
mov
pop
cmp
sub
outs
aas
add
mov
daa
cmp
clc
lea
pop
rcl
jb
repz
or
xor
inc
retf
lds
jae
or
arpl
dec
push
in
pusha
rol
(bad)
mov
mov
sub
jg
jbe
enter
inc
push
push
pop
es
int
daa
and
mov
stc
pop
push
outs
or
loop
aas
adc
ss
jecxz
mov
cs
add
dec
add
pop
mov
lods
mov
into
in
inc
jnp
push
(bad)
loope
add
push
rcl
jge
add
pop
(bad)
out
adc
(bad)
enter
mov
xor
mov
mov
ret
pop
sbb
jns
das
cmp
in
popa
nop
loope
dec
jnp
fs
sub
add
data16
xchg
loopne
mov
push
push
adc
retf
cli
rcl
xchg
mov
ins
xchg
xchg
cld
sbb
dec
nop
test
(bad)
ficom
daa
sbb
aas
fbld
xchg
fwait
jge
xor
scas
into
xchg
push
add
xchg
movs
lahf
cmp
cld
pop
aaa
and
pop
adc
(bad)
mov
cmps
sbb
add
or
pop
cli
dec
fisubr
mov
mov
outs
jnp
std
popf
pop
and
fisttp
idiv
call
adc
push
loop
mov
mov
loope
lods
retf
xchg
jns
sahf
xchg
js
cmp
push
push
aam
inc
je
jae
aad
inc
cmp
lds
sub
pusha
cdq
sar
xor
test
popa
dec
mov
mov
mov
dec
rcl
mov
movs
mov
sbb
sti
fisubr
lahf
mov
loop
xchg
movs
enter
clc
aas
xchg
std
jmp
ins
xor
inc
lods
push
xchg
mov
cld
mov
test
mov
movs
adc
pop
and
repnz
dec
lods
and
sti
push
adc
xor
jnp
adc
adc
jno
sub
jb
rcl
stos
aad
popf
retf
sub
cdq
xchg
push
std
stc
out
sbb
push
xchg
fucomip
push
or
jnp
out
add
mov
push
mov
sub
fldenv
mov
or
jae
jb
dec
or
cmp
jmp
mov
dec
sbb
out
cmp
dec
scas
outs
push
xor
jl
xor
hlt
xor
imul
push
add
pusha
pushf
sbb
movs
adc
leave
add
test
out
dec
xor
(bad)
pop
jmp
or
xchg
xchg
retf
stos
add
lea
jbe
fwait
iret
imul
(bad)
xor
dec
xchg
popf
daa
loop
cmp
jmp
iret
enter
mov
stc
int
inc
(bad)
shl
dec
pop
mov
stos
xchg
pop
jo
and
scas
add
cmp
jmp
inc
jge
aaa
push
xchg
call
sbb
loop
rcr
clc
ja
jg
loop
js
cmp
jmp
ret
xor
mov
addr16
clc
or
imul
or
jo
pop
pop
cmps
inc
test
mov
nop
pop
(bad)
jnp
cmps
cld
sbb
stos
int
pop
mov
loop
mov
retf
call
out
push
cdq
scas
mov
push
push
sub
xchg
sub
imul
loopne
dec
sti
arpl
pop
out
rcl
lods
pop
and
inc
ret
ins
xchg
push
add
pop
adc
inc
loope
loope
and
xchg
or
jne
sub
jmp
gs
out
cmc
pop
test
mov
call
sub
jb
adc
rol
or
stc
and
xor
dec
sti
push
test
fmul
sub
push
xor
outs
jno
gs
xor
xlat
jp
xor
xor
std
cmp
aaa
cli
dec
sub
je
stc
lods
fs
aas
(bad)
out
sub
ins
jle
jno
add
aas
xchg
cmps
lea
loope
fdiv
push
mov
sti
aas
pop
enter
fnstenv
xchg
fwait
test
mov
adc
out
test
inc
(bad)
cmc
aaa
mov
cdq
and
dec
jge
scas
loopne
lahf
mov
pop
push
xchg
lock
sub
mov
mov
and
mov
(bad)
aad
jnp
push
mov
aas
rcl
or
ins
mov
or
sub
fisttp
out
stc
sub
xchg
ret
cmp
sbb
mov
and
mov
lods
inc
sub
and
push
mov
sub
hlt
cmp
ja
pushf
imul
ss
neg
hlt
pop
daa
sbb
mov
jnp
xor
xor
adc
sbb
and
dec
pop
add
mul
(bad)
adc
ret
(bad)
or
inc
jp
(bad)
rcr
cmp
fist
push
mov
(bad)
mov
(bad)
inc
add
cmc
mov
pop
sar
in
add
fs
lahf
fsubr
scas
jbe
sub
pusha
mov
cmp
(bad)
shl
inc
cs
adc
xchg
leave
mov
push
jnp
cmp
out
sub
cmp
sub
dec
xchg
dec
loopne
mov
out
aas
shl
dec
fimul
pop
jmp
xchg
fistp
mov
scas
test
dec
add
xor
out
js
call
imul
(bad)
sub
fsub
add
ins
repnz
pusha
adc
cs
jo
xchg
int3
dec
inc
xor
jne
lods
mov
and
scas
lods
int3
test
dec
xor
mov
inc
jne
fcom
(bad)
mov
stos
ja
in
hlt
sub
dec
push
inc
cmp
sub
shr
dec
aam
lahf
cmp
xchg
mov
push
mov
push
push
and
push
push
test
mov
jge
dec
addr16
push
add
sub
mov
arpl
cmp
out
mov
mov
sub
or
sub
push
add
add
push
lods
sub
loope
or
mov
aad
pop
lahf
xchg
pop
icebp
enter
adc
dec
push
icebp
pop
ficom
jae
mov
jmp
xchg
cmp
test
jns
in
sub
jmp
outs
nop
fisubr
shl
pop
mov
fidiv
mov
mov
fiadd
outs
popa
pop
movs
lock
idiv
adc
pop
gs
adc
imul
adc
mov
in
test
or
jno
das
ds
pop
cmps
in
cmp
dec
pushf
outs
push
xchg
call
inc
mov
or
dec
mov
(bad)
out
ins
fist
or
sbb
addr16
int
fild
repz
mov
enter
mov
sbb
call
aam
dec
jno
mov
popa
shl
shr
sbb
mov
jle
mov
ret
into
sahf
retf
or
std
sub
ja
aaa
int3
out
mov
fisub
jg
jb
nop
test
mov
adc
jmp
test
or
jmp
lods
inc
outs
mov
inc
push
push
or
xlat
push
push
pop
out
mov
shr
sar
hlt
jnp
cld
add
mov
jbe
jns
or
stos
xchg
lds
jle
rol
fsubr
call
xchg
loopne
jb
les
shl
inc
loope
cs
dec
push
mov
(bad)
popf
data16
loop
clc
inc
(bad)
ja
mov
ret
inc
fcomp
mov
adc
lock
pop
test
or
add
popf
cli
adc
popf
sub
mov
jg
add
dec
aad
sbb
pop
into
neg
call
jnp
into
sar
retf
(bad)
pop
inc
scas
aam
jmp
sbb
cmp
pop
and
adc
dec
(bad)
lods
repnz
not
out
jno
pop
sar
mov
movs
es
jmp
call
ja
jb
ins
xlat
cmp
adc
aas
xor
add
jge
cmp
outs
nop
fidivr
stos
pop
ss
cs
sbb
lds
xor
mov
mov
or
dec
mov
xor
mov
push
pop
aad
in
aad
or
ins
dec
add
aam
push
dec
test
add
cmp
sti
pop
xchg
repnz
mov
(bad)
and
lea
shr
stos
push
jl
loope
mov
das
shr
cdq
or
xchg
and
xor
shr
ja
dec
sbb
mov
push
fxch
pop
or
repz
addr16
cmps
cmps
cwde
pop
and
pop
cmp
ret
lds
stc
sub
test
mov
aam
mov
fisttp
ret
push
push
inc
pusha
push
cmps
push
jns
ret
xchg
xchg
(bad)
popa
mov
jo
jg
aam
retf
cli
push
xchg
cmc
outs
scas
fwait
mov
pop
xor
ins
dec
fwait
in
rol
jae
test
scas
xchg
es
test
xor
sub
into
hlt
cmp
rcl
mov
jecxz
rol
dec
xlat
cmp
dec
loopne
loop
mov
jb
fcom
or
mov
addr16
in
jnp
out
pop
dec
jns
leave
xlat
or
and
cmp
movs
call
lods
xor
loope
sbb
xchg
repz
ss
inc
push
and
aad
and
cmps
xchg
lods
jmp
or
cld
jne
mov
call
cmp
sbb
adc
out
(bad)
aad
and
(bad)
dec
mov
dec
movs
bound
mov
imul
xlat
retf
das
out
dec
scas
xor
mov
adc
(bad)
adc
jno
mov
int
inc
cs
jno
call
imul
das
fcom
mov
loop
nop
imul
movs
xchg
xor
in
add
outs
pop
js
(bad)
fidiv
push
aad
aam
sbb
or
pop
and
pop
shr
pop
mov
sub
test
or
xchg
dec
push
add
das
add
and
arpl
push
mov
inc
sbb
rcl
cmp
mov
cmp
call
sar
les
out
mov
push
jmp
mov
nop
and
mov
cmp
xchg
scas
dec
clc
mov
xchg
fwait
push
arpl
xor
movs
sar
leave
and
gs
lds
ret
fiadd
iret
xor
enter
int
xor
add
inc
mov
ins
test
add
sub
call
out
ror
inc
add
je
mov
fadd
fnstsw
sbb
mov
sti
pop
xchg
add
dec
jg
sub
or
cmps
sub
mov
and
mov
sub
pop
in
js
sub
mov
sub
lahf
jmp
test
cmp
xor
add
test
call
sub
in
leave
jmp
cmps
inc
(bad)
imul
test
sahf
push
xchg
stc
je
outs
(bad)
mov
mov
dec
sti
arpl
mov
cli
add
shl
pushf
mov
mov
inc
dec
movs
les
test
jb
push
push
sub
jno
adc
dec
or
xchg
pop
adc
ja
data16
shr
xor
mov
push
fbld
cwde
(bad)
xor
(bad)
(bad)
lea
aas
rcl
mov
nop
mov
in
pop
aaa
es
mov
dec
inc
(bad)
jno
adc
adc
lahf
push
jge
das
push
push
pop
arpl
cli
jmp
xor
fsub
pushf
jbe
xor
adc
or
or
(bad)
rcr
push
pop
mov
push
das
sbb
pushf
(bad)
leave
pop
mov
and
into
outs
leave
repz
mov
or
shr
mov
push
adc
and
out
clc
out
xor
or
stos
sbb
gs
(bad)
sub
mov
sahf
adc
in
sbb
test
xor
push
push
cmp
add
add
lahf
mov
mov
ja
xlat
cmp
mov
pop
jmp
dec
je
jecxz
mov
cld
hlt
xor
dec
scas
fcmovnb
movs
mov
jae
or
mov
shl
add
(bad)
adc
bound
and
clc
cld
push
mov
dec
mov
movaps
xchg
jmp
iret
in
aas
lods
push
call
ret
sbb
xlat
and
cmp
push
mov
ret
mov
xchg
push
xchg
nop
test
inc
test
adc
xchg
push
add
cmp
jecxz
sbb
dec
dec
(bad)
imul
je
push
adc
dec
xchg
sub
or
mov
add
inc
stc
sub
inc
jp
mul
fsub
movs
mov
push
not
xor
pop
inc
cmp
mov
or
sub
mov
xchg
shl
daa
test
mov
pop
dec
mov
push
xlat
cs
push
adc
inc
shl
mov
xor
jl
nop
lahf
lds
hlt
sbb
add
and
inc
call
lock
xchg
ins
cli
or
sub
push
(bad)
adc
shr
out
dec
sub
adc
and
cmp
cmp
pop
call
pcmpgtb
jl
popa
pop
xchg
aaa
out
dec
push
sub
push
mov
test
ins
dec
bound
jecxz
mov
outs
mov
pop
sub
cmp
pop
pop
clc
enter
xchg
stos
dec
mov
out
inc
pushf
(bad)
xor
mov
and
in
int3
inc
push
pop
pushf
paddsw
ret
(bad)
mov
sbb
add
pop
adc
push
fs
pop
mov
ds
fisttp
xor
mov
ror
ins
sub
mov
mov
(bad)
mov
stos
les
add
clc
test
and
call
push
mov
fucomi
out
sbb
push
movs
cmp
pushf
imul
in
ret
pop
repz
dec
jg
push
dec
xchg
scas
ds
adc
fadd
dec
push
ret
cmp
test
in
out
in
or
iret
push
enter
push
mov
sahf
or
movs
ins
mov
imul
arpl
ret
loopne
or
mov
fstp
(bad)
ss
sbb
add
pop
sub
or
ins
stos
pop
pop
push
mov
ds
jg
xor
xchg
scas
pop
mov
mov
sbb
cmps
loopne
push
adc
lea
mov
pushf
or
and
test
loope
mov
sahf
aam
dec
add
(bad)
enter
cmc
push
fwait
inc
push
add
push
inc
sahf
shr
dec
dec
mov
push
jbe
pop
jmp
mov
xor
jg
add
jmp
or
mov
mov
aaa
stc
fs
cmc
sub
and
pop
ja
jbe
ins
pop
ret
pushf
loope
adc
jl
jno
adc
mov
dec
sub
je
push
mov
inc
jb
fsub
cmp
js
rol
dec
aad
ins
push
aam
std
ficom
cmp
sbb
jno
jmp
imul
jmp
js
cld
mov
adc
mov
and
cs
push
xchg
push
sahf
out
or
sub
dec
xor
add
mov
push
sbb
adc
sahf
cli
jp
mov
rol
dec
cmp
hlt
mov
xchg
mov
mov
lock
cmps
sub
icebp
mov
clc
cld
std
popa
data16
mov
mov
mov
jl
sbb
xchg
in
jb
mov
cmp
xchg
(bad)
fnsave
adc
xchg
mov
in
fs
and
clc
mov
stos
adc
cdq
and
or
out
push
out
and
push
cmc
je
pop
ss
stos
or
push
cmp
loopne
inc
jl
xchg
and
mov
dec
scas
icebp
mov
sbb
mov
sub
inc
mov
add
xchg
xor
movs
fs
outs
jnp
mov
pushf
jp
lahf
cld
push
jg
jno
popa
das
dec
add
xor
xchg
cmps
xlat
jne
es
outs
out
retf
jbe
fnsave
mov
jno
aas
or
movs
or
adc
xor
fwait
jns
xchg
jg
ret
jb
dec
xchg
mov
cdq
movs
mov
shl
aas
xchg
push
int3
cmc
add
or
fmul
xchg
xchg
lods
(bad)
push
sub
xchg
paddb
or
loop
mov
icebp
sahf
imul
push
jae
movs
int
inc
sahf
out
mov
je
xchg
or
mov
mov
jg
or
pop
and
dec
aaa
cmp
or
fwait
test
mov
dec
(bad)
aas
or
icebp
xchg
jp
in
fimul
iret
popa
sahf
out
jae
inc
sti
pop
jbe
push
jle
(bad)
xchg
fs
pop
inc
pop
stos
push
(bad)
jl
sbb
push
push
cmp
imul
mov
dec
mov
sbb
adc
in
jne
fucom
retf
mov
or
pop
xor
(bad)
jle
jns
loop
or
mov
mov
and
shl
je
and
adc
pop
mov
stc
imul
out
mov
and
loop
js
sbb
adc
(bad)
popf
mov
call
repnz
mov
imul
dec
sub
sbb
aaa
(bad)
sub
cmp
jecxz
stos
or
push
jmp
stos
popa
mov
jno
jns
rcl
or
sbb
inc
repnz
xor
addr16
or
jnp
in
add
xchg
fimul
mov
sub
pop
xor
mov
jbe
push
scas
pop
cdq
shl
pop
lahf
push
cli
lods
in
into
jae
xchg
push
aas
rcl
dec
inc
nop
ja
daa
adc
xor
or
mov
jo
mov
pop
add
mov
and
add
cmps
(bad)
or
jno
jecxz
or
fdivrp
hlt
out
pushf
add
and
inc
sub
xor
fwait
(bad)
fidiv
enter
push
add
or
cli
push
adc
in
or
(bad)
out
sbb
mov
mov
mov
bound
push
xlat
mov
arpl
outs
sub
xchg
push
inc
stc
mov
(bad)
int3
mov
fidivr
cmp
xchg
mov
push
dec
clc
repnz
aad
retf
add
lods
js
cmp
pop
sbb
mov
popf
push
inc
stos
xchg
push
sub
xor
xchg
sti
icebp
movs
cwde
and
(bad)
mov
fdivr
jmp
test
daa
jle
inc
movs
test
dec
int3
add
call
fs
test
fistp
shl
out
outs
imul
xchg
sbb
(bad)
out
fisttp
inc
fcomp
sbb
neg
xchg
js
retf
jae
adc
cli
stos
(bad)
mov
jb
pop
pop
sub
inc
pop
ror
and
fist
outs
xor
mov
xchg
adc
not
sbb
(bad)
push
inc
ins
test
add
(bad)
xchg
mov
das
leave
and
sti
push
and
dec
mov
dec
jae
xchg
repz
sub
push
rcr
dec
cdq
in
and
(bad)
dec
cmc
xor
das
in
in
neg
cld
pop
inc
lods
mov
or
push
sub
push
pop
mov
adc
test
mov
inc
inc
xchg
push
adc
test
adc
and
push
jg
mov
or
dec
enter
push
mov
dec
sub
push
arpl
cdq
fidiv
xor
loopne
push
lock
mov
pushf
test
dec
inc
cdq
and
(bad)
hlt
out
clc
fsubr
dec
es
mov
add
add
stos
and
sahf
jb
fcomp
mov
jae
xor
fild
aaa
pop
sbb
les
aam
mov
sti
or
cs
mov
sub
inc
xor
xchg
imul
ds
les
in
inc
test
scas
(bad)
adc
jecxz
leave
int3
outs
xchg
ins
push
out
sti
pop
sahf
cmc
xchg
xchg
sub
jbe
jmp
push
daa
pop
fwait
cmc
push
ja
dec
and
and
pop
jns
aaa
cmp
mov
jle
repnz
out
adc
xchg
xor
jge
cs
pop
fcmovu
icebp
std
retf
jg
add
sub
xchg
cs
aaa
cmp
inc
shl
je
(bad)
out
jmp
mov
fcmove
ror
sbb
mov
jne
mov
cmp
mov
sbb
je
jnp
imul
sbb
nop
jne
sahf
cwde
jne
and
inc
mov
xor
in
add
sbb
clc
sub
fcomp
fild
es
and
call
pop
push
or
into
pop
shr
call
aas
or
dec
adc
cmp
jmp
in
test
iret
hlt
call
jl
push
aad
pop
sbb
xor
rol
ja
mov
jmp
add
xchg
nop
nop
sbb
lods
sub
mov
jno
add
sbb
cmp
cmp
aaa
pop
inc
daa
inc
or
setle
xchg
test
(bad)
call
adc
inc
xor
(bad)
jecxz
cli
dec
out
hlt
fld
cmc
das
je
fisubr
push
cmp
jns
jae
mov
jp
sbb
mov
sub
mov
cmp
rcl
or
add
sub
sub
push
movs
pop
pushf
jecxz
pop
mov
and
push
dec
adc
push
call
in
mov
jecxz
(bad)
jge
aam
sbb
jmp
pop
push
add
mov
clc
mov
fidivr
push
(bad)
cmp
stc
mov
out
fisubr
mov
jnp
adc
into
std
je
dec
sbb
or
xchg
ss
fbstp
ja
int
or
sub
push
cmp
repz
sbb
cld
jnp
mul
fldcw
out
fdivr
sub
or
mov
aam
fidivr
(bad)
in
dec
(bad)
mov
scas
and
mov
sbb
lahf
or
clc
daa
sahf
out
aaa
sti
mov
arpl
div
test
pop
ins
es
or
adc
fld
inc
loop
jo
jb
loope
imul
retf
imul
add
inc
call
int
jno
pushf
lods
jno
mov
jb
(bad)
adc
cdq
mov
dec
cli
jmp
sub
jle
xchg
pushf
aaa
retf
dec
xchg
jp
mov
adc
jmp
lods
jno
outs
jecxz
mov
inc
xor
push
pop
nop
xor
sbb
inc
loopne
cmp
iret
xor
das
sti
sbb
stos
popf
fst
movs
pop
not
and
mov
movs
mov
cmp
iret
fsub
xor
pop
loopne
jmp
mov
jne
xchg
xchg
js
xor
xchg
repnz
mov
pop
icebp
fdiv
inc
addr16
icebp
sbb
pusha
add
dec
pop
push
lock
cmp
xor
or
xchg
sbb
rol
stos
pop
jne
test
(bad)
clc
mov
mov
shl
xchg
jg
xchg
mul
pop
shl
ss
pop
fisub
shr
iret
sub
push
xchg
cmp
rcr
xchg
xlat
mov
pop
mov
sub
mov
(bad)
jl
push
inc
mov
stos
ret
xchg
aam
retf
jg
lahf
mov
idiv
cdq
xor
xor
pop
loop
adc
xchg
sub
nop
pop
out
addr16
xchg
xor
test
jne
push
push
cld
(bad)
rcr
cmp
inc
icebp
mov
dec
cli
(bad)
loop
loopne
pop
and
xchg
mov
(bad)
sbb
adc
pushf
xchg
dec
ds
dec
mov
cmp
test
jae
mov
sti
inc
jo
xor
push
enter
mov
mov
push
cmp
je
icebp
(bad)
std
jae
arpl
and
mov
and
gs
dec
inc
clc
sub
xor
cwde
in
adc
outs
pop
lea
clc
mov
add
aaa
pop
push
jne
int
inc
(bad)
and
add
mov
and
dec
fs
pop
cdq
mov
cmp
sub
and
repnz
add
xchg
pop
ret
(bad)
in
xchg
retf
jecxz
ins
cdq
mov
jbe
je
sbb
lods
sbb
xchg
jmp
xor
ret
ret
jge
lods
dec
leave
fdiv
inc
sti
sbb
inc
jnp
mov
dec
and
fmul
loope
mov
(bad)
dec
cmc
cmp
test
(bad)
mov
sbb
lahf
mov
call
out
out
ins
or
push
(bad)
call
daa
stc
pop
adc
mov
mov
daa
fdiv
sbb
int
pushf
jns
dec
pop
dec
aas
in
and
(bad)
sub
cmp
(bad)
(bad)
rol
jl
inc
pop
fdivr
fcom
cld
inc
in
shl
pop
lods
hlt
sbb
push
xor
mov
jnp
xchg
push
xchg
shl
inc
push
repz
aas
inc
jg
adc
jbe
sahf
sub
outs
xchg
jg
mov
gs
int
mov
mov
jo
sub
xchg
shl
frstor
je
cs
stc
ins
pop
inc
xchg
pop
push
push
test
jmp
xchg
push
(bad)
xchg
or
je
cld
gs
push
loope
icebp
ja
jg
stc
sub
(bad)
mov
sar
and
loope
xor
clc
test
push
ja
ss
or
sar
xchg
(bad)
and
xchg
add
mov
cmps
sar
cmp
(bad)
or
push
call
xor
dec
rcl
hlt
push
add
std
or
das
jae
(bad)
cld
xchg
retf
xchg
or
ins
bnd
call
inc
sub
mov
inc
xor
xchg
mov
inc
dec
sar
fdiv
jmp
loope
inc
pop
test
repz
cmp
xor
loop
mov
sub
mov
push
cmps
push
add
mov
sub
xchg
mov
jmp
and
xor
jmp
inc
jg
pop
sub
cmc
add
cmp
shr
adc
mov
pop
push
pop
cmp
test
dec
mov
xor
mov
inc
xchg
data16
dec
jbe
and
dec
cwde
test
(bad)
inc
(bad)
mov
cld
movs
sbb
loopne
scas
cmc
imul
cmp
out
inc
shrd
aad
lods
jmp
hlt
lods
sbb
push
mov
sbb
test
sbb
imul
nop
sub
adc
stc
push
xor
pop
dec
test
aad
pop
pop
xchg
hlt
fbstp
rol
sbb
mov
sbb
pop
jns
dec
(bad)
fcomp
xor
pop
dec
aam
repnz
rol
call
jne
push
sub
mov
stc
cld
xchg
(bad)
mov
sub
push
mov
mov
ret
push
iret
jnp
sbb
inc
inc
xchg
shr
xchg
pop
les
sahf
sub
fwait
mov
shl
adc
or
cmp
pop
(bad)
sub
fucomip
pop
(bad)
push
in
adc
or
gs
cmp
(bad)
(bad)
xor
loop
retf
pop
cdq
aam
retf
xor
hlt
outs
in
lea
jmp
test
cmp
movs
in
add
int
push
xchg
out
adc
scas
sti
fucomip
push
rcr
shr
mov
mov
cwde
sbb
mov
pop
mov
xor
jbe
xor
daa
sahf
retf
adc
sub
cdq
ret
ins
xchg
mov
jne
pop
outs
and
loope
xor
adc
(bad)
jmp
(bad)
cmp
xchg
push
push
cld
jecxz
(bad)
pop
cwde
dec
xor
xor
xor
or
mov
fs
mov
jle
ret
cmp
inc
cmps
xor
test
lds
sub
jae
cdq
xchg
fwait
mov
cmp
aaa
and
xchg
jecxz
or
popa
mov
cld
push
push
repnz
pop
pop
dec
xor
mov
adc
xor
adc
(bad)
fcomp
push
push
js
loopne
pushf
add
je
lahf
jecxz
pop
aaa
jae
mov
sub
daa
test
test
in
(bad)
retf
cmc
int
jno
cmp
inc
sbb
mov
(bad)
(bad)
cmps
(bad)
aas
pop
push
test
outs
push
sti
mov
push
xor
lods
fwait
retf
push
adc
mov
std
jmp
xchg
scas
sar
je
fidivr
adc
mov
pop
ss
dec
pop
dec
arpl
stos
and
push
sti
lods
imul
add
out
xchg
sbb
sbb
xchg
test
loope
aaa
adc
or
sub
inc
sbb
adc
or
mov
pop
fcomp
arpl
cdq
adc
aaa
xchg
push
imul
ror
cmp
jge
or
dec
cmc
dec
jp
dec
push
mov
addr16
cmc
stos
pop
gs
jne
mov
cli
xor
cld
fmulp
pop
cmp
mov
mov
loopne
inc
in
inc
or
out
mov
lods
leave
sar
push
enter
jne
mov
loopne
sbb
mov
idiv
inc
retf
cmp
sahf
pop
out
std
ds
aaa
cmp
mov
mov
clc
mov
repnz
outs
xor
mov
xor
outs
mov
fild
add
xchg
add
cmp
mov
adc
int
pop
hlt
mov
push
test
imul
fidivr
jle
sbb
inc
adc
mov
xor
push
xchg
(bad)
push
jl
shl
inc
mov
aas
pop
sub
in
jp
add
sub
mov
out
in
jns
push
or
cwde
and
in
scas
lahf
or
(bad)
jle
test
test
mov
mov
(bad)
int
cmp
adc
pop
(bad)
mov
xor
or
inc
or
cli
and
sbb
and
clc
jmp
outs
jb
scas
jl
fwait
dec
mov
into
adc
push
shl
clc
scas
dec
mov
test
mov
inc
adc
cmps
lea
and
pushf
jmp
fdivr
adc
sub
xor
nop
add
ins
add
stos
xor
pop
fwait
add
inc
lods
call
cld
setl
sub
aas
jge
adc
and
movs
dec
bound
dec
in
mov
popa
pop
or
call
sbb
add
adc
mov
pop
push
test
movs
cmc
inc
jmp
add
in
or
adc
inc
in
adc
enter
and
push
xor
(bad)
jl
ror
adc
add
mov
(bad)
stos
jp
add
daa
or
scas
popf
push
pop
in
xlat
(bad)
adc
test
pop
mov
loope
mov
jg
es
bound
rol
xchg
lods
hlt
add
les
in
in
xor
clc
push
cwde
ss
stc
sbb
jnp
stos
fwait
or
call
(bad)
in
inc
dec
mov
add
neg
or
fyl2x
in
push
mov
push
jne
imul
dec
daa
xchg
(bad)
cmp
aas
idiv
push
fadd
push
gs
mov
(bad)
jo
(bad)
cmps
mov
addr16
adc
jl
jg
xchg
rcl
(bad)
cmp
sub
add
stos
ss
fwait
mov
mov
lods
xor
mov
ss
cwde
(bad)
cmp
and
push
lods
add
int3
sub
xchg
jle
mov
push
push
dec
cmps
mov
outs
ss
nop
add
inc
clc
push
sub
and
xchg
shr
call
push
jae
test
mov
add
pop
(bad)
mov
pusha
and
icebp
aam
cmps
mov
cmp
ins
sbb
sbb
lock
dec
in
loope
or
rcr
cld
loope
lods
xchg
pop
nop
ss
mov
mov
dec
push
dec
outs
mov
les
cmp
add
push
pop
mov
je
or
jne
popa
mov
ror
in
xchg
(bad)
(bad)
mov
(bad)
fbld
ins
ins
pop
mov
jg
mov
dec
push
xor
test
ins
push
mov
out
test
movs
mov
xor
xchg
scas
call
add
call
div
jmp
push
call
sar
jno
and
cmps
sub
out
jecxz
fistp
cmp
not
jb
adc
call
xchg
sete
leave
push
ret
repz
jno
retf
sar
pop
call
xor
js
sbb
mov
sub
ds
mov
push
jmp
test
popa
add
push
ss
pop
call
loope
adc
jb
sub
push
mov
mov
jae
cmp
pushf
cwde
into
jmp
mov
cmp
add
loope
lea
xor
sbb
push
in
mov
adc
or
ins
mov
hlt
or
enter
in
sub
add
icebp
pop
in
pop
stc
(bad)
mov
xchg
pop
pushf
aam
dec
or
and
mov
cwde
arpl
pop
jne
cmp
xor
ret
cmps
xor
cmp
ret
shr
or
int3
std
or
arpl
test
push
test
xchg
pushf
dec
ror
jge
enter
call
adc
das
or
call
pop
movs
jno
xor
or
mov
and
in
jo
cmp
mov
gs
mov
jl
xor
xor
mov
es
adc
rol
mov
mov
add
outs
adc
(bad)
xlat
jne
dec
sbb
mov
sub
mov
fnstcw
jb
push
sbb
je
dec
xchg
sar
jmp
dec
loopne
icebp
loop
fst
ja
add
rcl
add
(bad)
or
lods
iret
mov
push
sbb
(bad)
adc
or
int3
add
fstp
and
lods
aas
jmp
retf
and
out
sub
cmp
nop
jge
add
mov
mov
mov
data16
push
fwait
test
jae
dec
mov
les
xor
xor
push
pushf
cmp
les
imul
loop
jmp
push
(bad)
mov
ja
cmps
inc
in
fidivr
jb
or
jmp
inc
dec
movs
cdq
rol
push
aas
shl
jecxz
stc
push
cdq
call
out
xor
xlat
mov
or
aaa
push
mov
pop
mov
ret
inc
sbb
aam
mov
mov
xor
scas
mov
and
das
shl
pop
outs
pop
pop
lods
cmps
popf
imul
outs
add
pop
lods
jae
(bad)
add
arpl
(bad)
xor
aad
jmp
cmp
dec
mov
mov
push
add
sub
sbb
mov
mov
xchg
or
sbb
call
and
xchg
lea
xchg
inc
cld
and
and
push
dec
fs
iret
push
or
add
dec
mov
pop
dec
clc
ret
xchg
xor
data16
jg
and
mov
ins
mov
mov
fistp
inc
xor
mov
dec
add
inc
jmp
and
imul
jo
sbb
ja
lea
add
stos
inc
movs
mov
cmps
and
arpl
(bad)
iret
pop
lock
or
xchg
sub
stc
cdq
(bad)
cli
(bad)
xlat
imul
sub
sbb
pop
xchg
add
pop
shr
mov
out
and
jmp
push
push
mov
dec
push
and
dec
sti
cmp
inc
push
jle
mov
pop
adc
dec
pop
adc
(bad)
in
pop
and
sub
je
or
loopne
popf
push
in
xchg
aas
daa
xor
ds
enter
outs
lock
ror
pop
popa
mov
jnp
push
in
std
inc
hlt
mov
ss
lods
jae
shr
aad
fsubr
push
inc
inc
fbld
xor
iret
mov
or
xchg
mov
or
jns
add
pop
add
and
xchg
mov
cs
push
pop
adc
fmul
dec
rep
or
into
jge
pop
sub
cli
jnp
xchg
arpl
xor
repnz
test
out
and
mov
mov
clc
push
push
inc
in
sbb
inc
adc
jmp
sub
xchg
push
jl
cmp
push
mov
xchg
popa
bound
stc
cs
sub
sahf
outs
mov
inc
ins
jno
adc
ftst
mov
mov
cmp
and
movs
pop
pop
or
stos
inc
pop
aam
mul
and
xor
cdq
les
inc
inc
lock
int
jbe
das
cmp
movs
mov
pop
pop
adc
dec
in
cmp
pop
sbb
sahf
xor
and
nop
lea
sti
jno
fisttp
add
fwait
scas
add
gs
addr16
and
pop
mov
lds
fidivr
(bad)
push
xor
int
mov
or
test
jae
pop
mov
iret
lahf
cld
inc
mov
sub
repnz
adc
or
call
shl
pop
out
mov
xchg
pop
(bad)
xchg
or
gs
fwait
inc
xor
inc
ds
adc
dec
sub
popa
cmp
mov
jnp
lahf
fiadd
cs
jo
add
out
imul
xor
(bad)
sub
ret
mov
movs
inc
ss
inc
dec
shr
mov
push
add
jmp
repnz
out
dec
mov
outs
sub
repnz
push
repnz
xchg
icebp
xchg
enter
jp
mov
mov
out
rcl
add
pop
leave
jp
pop
into
jecxz
xbegin
mov
sbb
ja
xchg
adc
mov
in
inc
xchg
or
fwait
daa
movups
push
(bad)
xchg
xor
ret
scas
sub
stc
inc
and
jne
fcmovbe
int3
sar
push
xchg
(bad)
sub
inc
outs
ins
std
neg
enter
adc
test
aad
mov
sub
bound
cmp
test
mov
inc
adc
inc
sahf
cdq
pop
xor
jmp
cmp
popa
or
es
sbb
rcr
hlt
xchg
sub
(bad)
in
cmp
push
inc
push
sub
neg
adc
std
xor
mov
call
loope
les
add
adc
inc
stos
arpl
and
dec
int3
retf
jns
add
inc
aas
sub
sti
shl
jg
movs
and
stos
pop
mov
add
clc
daa
lock
xchg
int3
inc
xchg
out
bound
sbb
inc
pop
popf
inc
iret
sahf
call
add
inc
pushf
jl
jae
sub
push
jp
mov
push
mov
mov
fist
sub
rol
jne
pop
mov
cmp
mov
into
ret
fild
adc
lock
xchg
sub
sbb
cli
lods
mov
(bad)
stc
hlt
data16
and
cld
pushf
outs
lods
mov
shl
push
push
and
sbb
mov
(bad)
cs
ja
das
loopne
add
mov
xchg
jmp
xor
pop
dec
sub
rcl
int3
cmp
mov
sbb
call
scas
and
xchg
shl
pop
das
push
inc
fistp
mov
cmp
add
sar
jmp
jo
mov
sbb
xor
out
mov
gs
jmp
xor
je
jl
in
lock
jnp
das
or
std
movs
mov
icebp
jbe
pusha
scas
jp
jbe
pop
fwait
add
scas
enter
das
leave
not
icebp
and
sbb
xlat
push
jg
or
add
mov
int3
cmps
jb
inc
inc
int3
scas
add
lahf
sub
cmp
xchg
pushf
fld
push
add
adc
mov
sub
popf
xchg
push
pushf
pop
(bad)
clc
fistp
repz
mul
shl
adc
daa
and
aad
aad
mov
ret
mov
js
arpl
dec
iret
lds
dec
xchg
sbb
jge
add
scas
ficomp
(bad)
and
or
push
mov
call
aaa
push
sar
jmp
cmp
pop
pop
dec
cmps
cli
push
call
cwde
mov
and
test
mov
or
nop
ds
div
lock
dec
mov
in
xchg
or
push
retf
mov
ins
rol
or
scas
popa
mov
inc
fs
nop
call
or
push
add
in
cmp
fcomp
es
and
push
ins
pusha
xor
lods
or
popa
fisub
fcomi
push
xchg
(bad)
jl
fisttp
mov
sub
adc
inc
lds
inc
cmps
(bad)
idiv
xchg
sbb
and
lods
xor
push
and
push
fldcw
mov
mov
and
jae
xchg
xchg
sbb
mov
not
dec
in
mov
inc
int
adc
jbe
bound
aas
loopne
jo
lods
and
fwait
mov
(bad)
aaa
jle
ror
div
xlat
loope
ja
inc
xchg
sbb
push
cmp
cmp
arpl
je
jae
retf
push
push
jbe
inc
sub
(bad)
ins
stos
add
cmp
cwde
lods
lock
push
ret
dec
repnz
mov
push
inc
pop
lds
lods
aad
cs
ret
mov
mov
inc
imul
fyl2xp1
inc
and
xchg
cwde
xlat
cmp
xchg
xchg
mov
or
push
mov
jp
out
dec
(bad)
pop
mov
sub
push
test
or
mov
sub
sti
mov
jl
or
mov
or
stos
pop
stc
scas
std
inc
lock
jge
mov
fimul
cmps
pop
xchg
xchg
mov
nop
loop
cmp
(bad)
out
iret
jne
dec
jmp
sti
xchg
xchg
in
adc
mov
push
sub
jmp
inc
ins
jnp
in
push
mov
cmp
cmp
enterw
push
arpl
icebp
mov
or
lock
push
and
icebp
ds
sbb
xor
push
jmp
inc
push
sbb
adc
lea
sahf
add
inc
cmp
mov
xchg
add
call
(bad)
rcr
fcomp
icebp
push
mov
jnp
ret
add
mov
add
aam
jae
add
in
mov
and
paddb
pop
cmp
jo
stos
cmp
test
stc
add
out
mov
pop
jmp
outs
enter
call
sbb
mov
div
fs
jbe
jl
push
inc
fistp
ja
es
div
mov
icebp
fwait
dec
xchg
fmul
mov
xor
test
pushf
push
ror
dec
inc
mov
movs
or
adc
mov
mov
push
cmp
jl
(bad)
movs
sbb
mov
lods
adc
adc
add
sub
push
xchg
mov
cmp
fwait
ror
jne
shl
pop
cmp
arpl
mov
(bad)
jae
cmp
or
inc
ja
fist
rcl
neg
pop
out
loop
jae
mov
out
add
pushf
cmp
inc
sbb
fs
sar
cld
jg
mov
adc
add
lsl
ret
mov
and
not
and
sbb
pop
adc
call
movs
(bad)
das
fcmovne
inc
add
adc
pop
cwde
mov
out
shl
jmp
lea
nop
xchg
dec
cmp
cmp
mov
xchg
xchg
scas
jbe
mov
adc
or
xchg
dec
xor
outs
push
mov
and
xchg
sbb
fcmovbe
clc
test
adc
call
add
ins
data16
push
std
mov
xor
push
jno
ds
push
aaa
cmps
out
sbb
mov
test
and
mov
repz
lea
out
hlt
and
rcr
xchg
or
or
data16
(bad)
rol
xor
sub
lods
test
fwait
ret
push
adc
add
das
(bad)
jns
mov
stos
(bad)
sbb
mov
outs
sbb
pop
ret
dec
mov
into
jb
push
sbb
test
stc
in
jns
adc
push
and
cmp
xchg
int3
int3
stc
out
push
ss
das
mov
in
inc
inc
rcr
mov
adc
shl
rcr
jge
out
jp
push
cdq
inc
sbb
cmp
int3
(bad)
cmp
test
cs
jmp
sahf
jno
aam
inc
test
out
or
adc
adc
shl
call
shr
dec
out
sub
es
jge
lahf
push
stc
and
neg
les
push
or
xor
fdiv
pop
pop
push
jne
add
pop
push
dec
imul
lods
enter
rcr
adc
jbe
jno
cmp
aad
leave
int
pop
fwait
rcr
dec
inc
loop
outs
sbb
into
lods
mov
bound
fstp
leave
ret
adc
push
push
ret
lock
ret
stos
mov
or
in
dec
pop
in
call
inc
iret
movs
rol
sub
mov
cmp
rol
(bad)
outs
cmovp
jno
mov
push
adc
addr16
xor
lods
xor
add
mov
test
lods
(bad)
stc
sub
nop
scas
cmp
fbld
in
mov
cmp
rcl
add
sar
adc
sar
inc
adc
xchg
call
fld
mov
mov
test
xchg
leave
stos
lock
fldcw
test
sub
adc
out
leave
outs
inc
sbb
test
aam
fst
or
or
mov
dec
sub
mov
jns
sub
(bad)
pop
xchg
xchg
aas
add
rcr
stc
cmps
xor
call
icebp
es
sub
mov
sahf
pop
(bad)
xor
cs
fcom
mov
repnz
call
cs
mov
cdq
push
cmp
into
adc
fs
int
test
call
mov
mov
bound
mov
inc
adc
pop
lods
xchg
pop
stos
cs
test
cmps
sub
pop
rcl
or
ja
push
jg
jmp
inc
imul
movs
pusha
jbe
sbb
aad
fisubr
or
xlat
jecxz
int
jae
pushf
test
adc
inc
push
sahf
sub
iret
xor
push
jg
cmps
inc
xor
lock
das
pusha
dec
stos
and
test
(bad)
(bad)
push
retf
mov
loop
test
sar
lahf
(bad)
and
fs
lds
pop
in
call
clc
sub
aas
retf
add
arpl
fldcw
sub
test
sub
add
cmp
pushf
sub
sbb
sahf
jnp
sub
or
sar
inc
out
mov
and
sbb
jecxz
sub
sar
mov
std
cmp
push
cmps
push
add
xchg
and
mov
lds
add
and
push
adc
jne
xchg
and
in
lds
jle
(bad)
mov
jmp
fcmovbe
rcl
sub
movs
out
clc
sbb
adc
or
(bad)
call
sti
into
sbb
jno
fadd
xchg
pop
adc
not
lods
adc
adc
fsincos
dec
cmps
mov
push
mov
fwait
aas
mov
mov
lods
push
pop
imul
dec
sbb
jne
test
int3
xor
sub
stos
sub
(bad)
arpl
sbb
adc
sub
in
cmps
nop
push
push
push
outs
fldenv
xlat
cmp
outs
shl
and
stc
jae
push
mov
cmp
cdq
sub
push
push
sub
lods
rcr
mov
xchg
pop
sbb
sub
xchg
aas
loope
lea
dec
std
pop
ror
mov
xchg
jl
jbe
cmp
enter
out
movs
mov
jne
int3
ss
stc
test
push
sbb
mov
imul
fldlg2
shl
ss
shl
imul
adc
int3
popa
mov
fisttp
jns
jl
cmc
mov
lahf
inc
lods
xchg
aaa
loope
shr
add
xor
fs
addr16
dec
stc
(bad)
lock
mov
rcl
mov
movs
inc
mov
add
test
add
fistp
sub
mov
fistp
fisubr
pop
aas
add
call
mov
adc
icebp
push
add
add
inc
in
sbb
ret
leave
sub
xchg
mov
or
imul
ss
jp
inc
xor
push
bound
call
lds
ja
xlat
mov
inc
int
out
or
jns
icebp
jmp
(bad)
out
jecxz
scas
xchg
and
sub
inc
out
(bad)
cmp
cmp
cwde
and
cmp
in
add
jle
pusha
loope
jb
not
rcl
jno
add
mov
lock
sub
push
loop
or
mov
adc
cmps
dec
ret
jne
retf
add
pop
dec
mov
and
xchg
fdiv
or
ret
xchg
test
xor
test
xchg
fwait
jo
mov
adc
fiadd
lds
jbe
push
iret
or
sbb
jge
pop
(bad)
push
xor
jns
add
daa
outs
aaa
xchg
jge
and
dec
pop
test
sbb
mov
cwde
xchg
repnz
leave
sbb
inc
dec
and
inc
lea
cli
movs
xlat
mov
into
pop
cmp
imul
adc
mov
push
arpl
mov
and
mov
add
popf
push
mov
sbb
test
call
jl
nop
mov
popf
push
in
sar
xchg
ins
jecxz
pop
pop
push
test
and
(bad)
mov
xor
jno
out
xor
ss
inc
dec
mov
lods
idiv
(bad)
shl
sbb
mov
ss
out
jl
dec
retf
xchg
int
and
inc
lea
fsubr
ffree
out
mov
jmp
xor
dec
repnz
jo
or
lock
cmp
dec
int3
and
and
outs
in
neg
pop
ins
or
sbb
jle
sub
pop
mov
jne
aad
int3
sbb
xchg
into
cld
add
inc
mul
in
mov
push
repz
popa
imul
jo
or
es
icebp
jp
mov
movs
mov
(bad)
shl
push
adc
add
push
sbb
jp
mov
in
in
int3
inc
mov
cmps
idiv
dec
lahf
add
ins
ins
sub
jns
aaa
add
or
jb
sub
popf
push
mov
call
xchg
shl
push
scas
push
sub
jae
mov
sub
retf
imul
pop
jle
mov
xor
outs
sbb
bound
leave
mov
lods
mov
rcl
leave
ret
inc
hlt
ror
and
inc
mov
add
jle
sub
outs
cdq
cmps
or
out
shl
test
and
inc
push
pushf
cmps
test
mov
mov
mov
loop
mov
jle
pushf
and
xor
xchg
sub
xchg
or
sbb
mov
jg
call
aad
mov
retf
jle
sti
jnp
and
adc
jp
retf
add
mov
xor
imul
out
or
or
jmp
(bad)
sahf
sub
xchg
and
ss
pop
push
adc
stos
clc
adc
add
jns
mov
das
jno
mov
xor
test
stc
push
ret
jno
nop
cmp
mov
sbb
sahf
sbb
js
jae
push
or
es
mul
jae
cmps
add
mov
out
jmp
xor
cmp
or
adc
sbb
pop
push
pop
(bad)
sub
adc
xor
rol
adc
mov
inc
popa
lods
jmp
outs
imul
(bad)
pusha
std
jnp
pop
adc
sahf
cmp
sbb
out
and
sahf
(bad)
fistp
and
in
icebp
ins
call
inc
ss
imul
out
and
fstp
xor
pop
cli
repz
sub
dec
ror
(bad)
or
xchg
dec
mov
(bad)
out
fbstp
cmps
dec
dec
addr16
movs
or
pop
lds
adc
pop
mov
ds
imul
dec
and
mov
repz
jae
push
retf
imul
(bad)
cdq
mov
pop
xchg
mov
push
rol
ds
sar
or
pop
loop
and
or
push
cdq
imul
ss
mov
in
lods
jae
(bad)
mov
xchg
dec
out
mov
mov
push
stc
jg
adc
pop
xchg
ror
leave
xchg
pop
lods
std
inc
bound
mov
add
adc
pop
sub
ins
add
imul
hlt
fadd
xor
movs
sar
ss
jnp
adc
cmp
nop
int
lahf
adc
mov
nop
ret
paddusw
or
fstp
cs
dec
pop
add
sar
xor
xlat
mov
or
sbb
in
inc
out
jne
cmp
cmp
and
into
and
addr16
(bad)
mov
out
jbe
movs
mov
push
xchg
mov
outs
cmps
sub
shl
mov
push
in
jns
mov
mov
inc
pop
aas
jp
pop
das
int
mov
mov
xor
xor
movs
outs
popf
in
xchg
xor
or
cmps
ficomp
mov
dec
movs
stos
add
jns
cmps
rcr
or
addr16
inc
fst
addr16
loope
(bad)
iret
xchg
(bad)
ds
mov
loope
jo
(bad)
sub
and
push
adc
popa
shrd
pop
int3
inc
rcr
fdivr
test
adc
cmp
into
xor
out
sbb
cmp
jmp
sbb
pop
jno
inc
mov
bound
(bad)
int3
cli
mov
or
mov
dec
ret
imul
fcom
cs
ja
in
in
nop
xchg
out
aaa
and
imul
arpl
dec
pop
push
enter
scas
sti
push
imul
pushf
ret
sub
or
sbb
mov
mov
int3
sub
out
scas
xor
push
dec
into
adc
(bad)
es
int
push
push
scas
xor
jno
popw
jb
rcr
in
pop
push
shr
add
repz
popf
xor
add
sahf
frstor
les
cmp
inc
call
adc
shl
jl
in
inc
xor
icebp
inc
or
dec
adc
loope
pop
push
pop
sbb
cmp
inc
mov
add
int3
ja
pop
pop
dec
cmp
lods
mov
mov
cmp
lods
mov
aas
pop
mulps
lds
xchg
jmp
cmp
and
jo
ins
stos
iret
(bad)
in
idiv
neg
cmc
test
and
ror
call
push
add
les
fucomi
pop
adc
ins
(bad)
xchg
fcmovb
mov
push
mov
shr
pop
lahf
bnd
enter
cmp
mov
(bad)
sbb
and
inc
xlat
xchg
adc
(bad)
outs
cmp
inc
xor
mov
add
jle
call
scas
mov
jae
idiv
jecxz
iret
cmp
mov
push
jne
lea
hlt
(bad)
test
and
in
pop
dec
fisttp
in
mov
mov
ret
mov
lods
je
fwait
cmp
mov
imul
ins
push
loope
sbb
jle
(bad)
fstp
xor
mov
xchg
je
inc
fistp
sbb
and
cmovle
pop
sahf
hlt
jp
sti
push
xchg
es
mov
data16
xchg
enter
adc
add
push
ret
cli
jge
call
ja
hlt
add
mov
imul
popa
leave
imul
mov
mov
inc
fisubr
pop
pop
push
xchg
or
inc
adc
std
push
shl
push
pusha
sub
iret
lods
dec
in
ss
inc
xchg
push
iretw
sub
in
mov
(bad)
div
mov
pop
jmp
data16
jno
(bad)
push
iret
mov
mov
xchg
aas
jae
add
sbb
push
ds
mov
xlat
and
popf
adc
adc
into
add
retf
mov
scas
movs
push
test
in
mov
in
sbb
test
ror
popf
fdiv
imul
loope
cld
test
fmul
push
and
xor
dec
pusha
cli
cmp
dec
stos
into
cmp
pop
lea
rol
pop
sub
push
arpl
fisub
adc
popa
in
(bad)
jb
fs
into
cmp
test
jnp
cmovb
or
xor
mov
cdq
scas
(bad)
cmp
jg
xchg
mov
jae
sbb
or
int
movs
aad
sahf
mov
fstp
stc
add
pop
cs
arpl
cmps
cmp
sub
or
mov
add
fwait
sar
fdiv
sbb
add
or
mov
xor
mov
mov
jle
pop
ret
das
sbb
xchg
lea
dec
jp
mov
test
cmp
jl
jl
and
inc
int
enter
mov
pop
lock
jmp
add
enter
repz
mov
dec
jl
hlt
pop
pop
cdq
jle
cmp
out
mov
push
xor
clc
ficomp
and
lds
jne
test
and
xor
std
xchg
leave
shl
mov
jnp
add
lea
adc
and
loopne
and
std
push
in
sbb
dec
in
pop
jae
(bad)
in
lods
repz
loop
mov
push
hlt
fld
ror
dec
cwde
xchg
mov
les
jecxz
jl
rcr
(bad)
movs
add
jmp
clc
std
and
mov
pop
jne
fldcw
movs
dec
sub
dec
sti
sbb
stos
or
scas
adc
sbb
push
push
call
sbb
add
jnp
and
data16
gs
iret
pusha
ins
arpl
aad
inc
xchg
pop
cmp
sbb
std
jno
pop
cli
cmp
add
cs
add
xor
loope
mov
mov
dec
or
adc
push
lds
call
ins
cmp
test
pop
inc
adc
clc
in
and
sahf
pop
sar
les
xor
dec
xlat
fsubp
shl
shr
cmp
movsx
fldenv
sbb
push
push
mov
bound
aam
dec
pop
or
mov
mov
add
sar
xchg
sti
test
jmp
add
xchg
jne
sbb
gs
dec
iret
or
and
cwde
adc
xor
pop
repz
xchg
fild
mov
push
jp
add
adc
push
mov
push
fwait
mov
cmps
sti
push
dec
jo
jne
add
push
test
mov
jmp
and
icebp
ins
lea
or
or
retf
cld
(bad)
cmp
test
cmp
mov
ss
or
(bad)
aam
jb
xlat
mov
fsubp
mov
dec
imul
mov
vmptrst
fs
jmp
sar
out
mov
mov
movs
add
int3
adc
inc
shl
inc
out
cmp
push
mov
ins
add
stc
or
add
add
sub
pop
rcl
ja
cmp
ret
jl
xor
imul
dec
sub
or
into
jno
ss
cmc
push
push
aas
mov
out
mov
pop
pop
or
mov
ret
pop
in
imul
pop
loopne
aaa
xor
xor
and
jg
mov
sub
sbb
cmps
xlat
xor
out
mov
xor
and
or
lahf
xlat
out
lea
jmp
jbe
in
push
mov
push
push
mov
std
int
aas
daa
add
aad
add
jle
movs
pop
sub
add
fcmovu
adc
ret
inc
frstor
or
loopne
sti
pop
int
nop
or
xchg
iret
(bad)
cwde
jg
mov
push
and
test
mov
push
adc
shr
leave
in
inc
cmp
fwait
test
cmp
cmps
repnz
rcl
test
inc
loope
daa
fidivr
sar
and
cli
retf
mov
mov
imul
inc
popa
push
pop
xor
mov
out
push
cli
cs
sbb
ins
push
into
test
sub
push
sbb
adc
enter
loopne
mov
fcmovnbe
xor
shr
ins
bound
arpl
adc
xor
bound
push
mov
shl
xor
rol
out
fpatan
pop
mov
inc
xchg
jnp
clc
jmp
loop
sub
jnp
dec
repnz
push
mov
outs
ins
rol
int3
pop
cmp
inc
mov
lds
loop
fwait
dec
stos
icebp
leave
mov
and
mov
push
out
or
addr16
das
(bad)
out
les
test
ret
xchg
les
sub
cmc
and
mov
enter
sub
dec
pop
stos
push
lods
xor
jb
lea
add
add
cmp
cdq
ret
sbb
inc
push
and
mov
lidtd
mov
cmps
ss
cs
xchg
jg
(bad)
dec
inc
int
stos
cmp
imul
and
in
jl
leave
mov
mov
jle
fsubr
jae
shl
push
adc
pop
pop
aam
adc
pop
cmp
adc
mov
fidiv
add
stos
or
hlt
pop
rol
mov
fimul
push
ds
xchg
in
cmps
bound
ss
add
lods
mov
ret
jb
fmul
lea
gs
dec
pop
cmc
xchg
test
stos
push
add
rol
in
add
mov
add
iret
cmp
imul
sbb
or
mov
sbb
dec
movs
fsubr
sbb
jae
cdq
mov
pop
xor
out
retf
adc
pop
adc
int3
xor
inc
sbb
cli
and
(bad)
into
mov
pop
push
loop
dec
xchg
sbb
inc
mov
test
and
sub
mov
adc
sar
cmp
push
enter
pop
push
popa
jg
add
pop
cmps
ins
and
jmp
mov
sbb
xor
xchg
xor
sub
adc
adc
pop
pushf
lds
adc
fs
jmp
test
fadd
pushf
add
pop
and
repnz
cmp
out
repnz
div
dec
test
push
retf
js
jle
sub
lahf
cmp
imul
ret
shr
mov
sub
pop
je
cmc
add
icebp
mov
and
mov
in
xchg
hlt
(bad)
sub
pop
in
retf
ret
loopne
outs
mov
test
cli
imul
es
dec
push
push
jle
cmc
add
aad
and
mov
push
xor
add
out
std
(bad)
test
xchg
adc
rcl
arpl
clc
jg
and
pop
leave
push
in
in
inc
sub
inc
adc
movs
es
fstp
or
mov
cmp
lea
loope
in
xor
nop
imul
sbb
out
mov
add
call
stos
mov
je
jns
or
loopne
cmps
push
mov
inc
in
mov
mov
and
jmp
popa
push
nop
mov
jo
scas
mov
ret
push
xor
xor
sub
sti
cmp
mov
mov
sbb
mov
loope
mov
stc
sub
ds
pushf
movs
mov
jmp
js
xor
jo
or
hlt
(bad)
ins
popf
mov
add
and
out
idiv
mov
arpl
stc
xor
sub
jg
sub
movs
xchg
mov
gs
push
(bad)
aaa
inc
int3
mov
mov
cmps
xchg
xor
mov
add
loopne
rol
loopne
sbb
mov
out
out
sub
cmps
jp
jne
pop
test
ret
inc
fst
outs
xchg
in
lahf
int
icebp
mov
mov
xor
es
div
leave
mov
in
push
pop
xchg
stos
outs
mov
push
xchg
dec
dec
movsx
int3
cmp
pop
pop
add
pushf
sar
inc
jmp
rcl
xor
das
rol
xor
fbld
mov
fwait
out
in
in
ds
test
push
lahf
sub
cmp
cmp
ds
cld
dec
cmps
scas
add
cmps
fisttp
mov
sahf
scas
neg
mov
adc
mov
push
out
pop
push
ret
push
mov
adc
push
stos
mov
xor
dec
movs
mov
push
test
out
mov
push
fsubr
test
mov
cdq
in
(bad)
lock
jg
mov
sub
and
imul
and
test
xor
sub
mov
mov
(bad)
rcl
imul
rcl
int3
jmp
ret
add
fstp
jbe
sub
mov
push
loop
sbb
sub
pop
mov
sti
pop
mov
cli
btr
cmps
repnz
pop
sbb
(bad)
arpl
out
xchg
push
adc
sbb
repnz
push
xchg
into
loop
dec
add
adc
lods
push
lods
sub
xchg
movs
sbb
jns
loop
cmp
mov
sahf
mov
call
ret
add
fcmovbe
movs
into
cdq
mov
int3
mov
call
inc
xlat
sbb
xor
jmp
and
cmp
pop
enter
mov
add
outs
int
add
push
mov
stc
sbb
mov
pop
imul
xor
mov
dec
imul
pop
sub
in
(bad)
imul
retf
sbb
cld
dec
sbb
mov
lods
rcr
imul
aas
xchg
es
xchg
mov
or
fmul
xchg
sbb
sbb
mov
movs
adc
loop
loop
xor
mov
jb
nop
pop
xchg
out
repz
lock
pop
fadd
sub
in
movs
mov
jl
push
test
xchg
mov
push
mov
call
xor
xor
push
adc
mov
pop
mov
nop
jp
ret
aas
sbb
push
jb
rcl
pop
(bad)
sbb
int3
sub
lock
xor
movlps
sbb
shrd
sbb
lock
xchg
sub
std
inc
test
mov
ret
xchg
stos
jl
mov
scas
test
test
cmp
clc
icebp
dec
ds
int3
cmps
scas
jns
fsub
out
mov
jecxz
test
int
adc
gs
cmp
jl
push
push
stc
js
sbb
ds
ret
jge
or
mov
scas
mov
fisub
xchg
sbb
mov
data16
mov
jp
ins
xor
aas
cld
xlat
dec
mov
(bad)
sbb
mov
sub
lods
inc
fisttp
xchg
mov
inc
popa
movs
out
and
test
xchg
repz
add
dec
pushf
inc
jb
xchg
cmp
ds
push
mov
dec
mov
jns
pop
mov
or
lods
jmp
mov
test
retf
adc
loop
fistp
sbb
xchg
neg
ja
sbb
mov
pop
int3
mov
xchg
loop
dec
push
dec
or
popa
or
xor
shl
dec
(bad)
je
cmps
aam
xchg
sbb
mov
loopne
stos
pop
movs
retf
das
sbb
imul
and
xchg
push
aaa
jno
fmul
inc
jl
push
dec
or
push
xchg
(bad)
in
inc
push
sub
inc
imul
sbb
iret
jmp
pop
test
pop
div
xor
jo
push
inc
lds
sbb
adc
ja
or
gs
xor
dec
xchg
add
das
adc
out
mov
inc
shr
cmc
lahf
cld
fsub
mov
pop
pop
jmp
xchg
push
mov
fs
jae
add
test
je
push
sbb
dec
inc
ja
dec
add
not
cmp
jnp
pop
cmp
movs
push
mov
ins
cwde
imul
sbb
outs
rcr
mov
es
pop
mov
jecxz
inc
ins
setae
(bad)
cmp
cmps
jae
adc
rcr
inc
shl
aas
lods
or
sbb
mov
(bad)
(bad)
inc
xchg
inc
adc
dec
stos
push
dec
sub
iret
pop
fsub
loop
sahf
add
sti
xchg
jmp
push
pop
ret
aad
sahf
retf
das
outs
rep
cmps
pop
or
mov
xchg
out
mov
jmp
mov
ds
jmp
mul
loop
popa
xchg
daa
(bad)
adc
cmp
outs
xchg
dec
popa
js
sbb
mov
or
lock
jb
inc
neg
lods
push
into
mov
mov
push
mov
cmp
daa
adc
inc
les
aad
pushf
leave
adc
mov
gs
dec
dec
and
sbb
mov
into
mov
sub
sbb
push
sar
inc
in
lds
leave
pop
inc
nop
sub
das
repnz
aad
in
fs
pop
mov
out
add
pusha
(bad)
push
sub
idiv
cmovo
pop
and
pop
push
add
mov
out
ja
push
sti
mov
push
jmp
mov
lahf
fisub
push
pushf
jl
jbe
push
xchg
jp
push
ins
mov
xchg
xchg
mov
lahf
xchg
adc
fadd
fbstp
cmc
push
loope
fwait
add
add
aad
xchg
mov
int3
adc
arpl
movs
xchg
(bad)
and
mov
add
shl
dec
ins
dec
xchg
data16
loope
push
jno
xor
fidivr
inc
push
push
mov
cmp
cmp
jg
fidiv
lahf
sub
or
test
xor
lods
adc
adc
add
mov
mov
(bad)
das
xor
lahf
ja
fnstcw
add
mov
adc
add
pusha
mov
mov
cmp
enter
(bad)
xchg
test
popf
scas
push
call
xor
jl
mov
xchg
mov
push
xor
sti
popa
pop
int3
sub
and
mov
cmp
xor
jb
sub
dec
pop
icebp
or
jp
arpl
xchg
dec
div
xchg
(bad)
xor
iret
scas
xchg
ror
inc
bound
(bad)
cld
fstp
fcomp
cld
lea
daa
cmp
mov
sbb
push
mov
add
scas
dec
(bad)
out
inc
xor
sbb
pop
inc
loop
lock
fmul
and
pop
mov
call
fidiv
mov
add
inc
inc
cli
stc
ins
ret
mov
or
pop
mov
cmp
shl
add
out
or
lods
repz
mov
bound
jg
jns
cmc
pop
jmp
mov
nop
shl
aaa
not
(bad)
stc
mov
retf
xchg
or
dec
or
adc
mov
inc
clc
or
stos
shl
mov
xchg
cld
nop
mov
test
push
loope
sub
jo
adc
ret
mov
mov
or
in
adc
mov
cld
pop
mov
mov
mov
mov
sbb
adc
(bad)
outs
pop
std
mov
adc
cmc
hlt
pop
(bad)
retf
shr
pop
sub
inc
pop
imul
pop
je
xor
dec
arpl
cmp
out
inc
sti
sub
data16
inc
mov
mov
int
gs
push
inc
adc
arpl
in
out
sti
or
mov
push
or
or
(bad)
es
cmp
jecxz
fimul
int3
in
xchg
lahf
cmc
jbe
nop
fwait
mov
aas
mov
inc
fst
or
sub
in
jge
xchg
push
add
push
cwde
dec
lods
jp
cdq
mov
test
mov
cmp
inc
pop
pop
js
xchg
cmc
mov
inc
mov
mov
push
dec
mov
fistp
adc
mov
xchg
lahf
fs
jmp
xchg
jmp
xor
(bad)
das
dec
mov
fadd
test
jo
add
mov
cmc
stc
outs
imul
int3
dec
sbb
sub
add
xor
or
jbe
into
pop
mov
paddq
mov
xor
ss
xlat
sbb
aaa
retf
enter
test
or
pusha
ss
test
jle
les
xor
push
rcl
cwde
and
adc
or
cdq
pop
movs
cli
mov
je
mov
pop
cmp
jae
shl
xlat
icebp
and
addr16
cld
adc
shr
ret
mov
repnz
inc
aas
movs
repz
aam
adc
mov
loop
aas
sub
jnp
imul
(bad)
push
jp
sbb
aad
div
loopne
xlat
lds
xor
push
sub
mov
inc
xor
and
jns
adc
mov
lods
sahf
push
jl
out
push
fstp
mov
loope
leave
inc
pop
movzx
xor
xor
jl
fst
fidivr
xchg
rcl
and
mov
cli
aam
inc
dec
test
arpl
popa
cs
pop
sti
addr16
sub
into
(bad)
pop
push
xchg
xor
call
mov
ins
push
xchg
sbb
in
inc
xor
mov
das
imul
push
outs
push
add
push
adc
sub
mov
retf
cld
dec
dec
dec
(bad)
jb
xchg
or
ins
inc
in
or
test
in
fmul
add
jecxz
out
xchg
shl
mov
pcmpgtb
mov
sbb
repz
jg
jmp
lock
mov
pop
retf
push
stos
imul
adc
clc
frstor
std
stos
pop
out
lea
xor
out
sbb
scas
xchg
sub
fsubr
std
xor
cmp
xor
sar
fst
mov
or
jle
test
aad
inc
fmul
xchg
mov
adc
cld
and
lahf
add
xor
aas
jl
sbb
xor
icebp
lods
neg
mov
cwde
les
and
in
push
loope
pop
into
loop
inc
aam
sub
jmp
pop
pop
dec
jnp
in
out
mov
push
test
cs
pop
repnz
aad
pop
dec
aas
shl
and
cwde
mov
or
xchg
mov
ins
cs
cmp
call
mov
cmps
jae
stos
bound
cmp
inc
and
adc
push
das
sbb
loope
pop
fsubp
push
cld
pop
mov
pusha
inc
addr16
frstor
icebp
push
test
gs
sub
cmps
adc
icebp
fisttp
mov
out
xchg
cmp
repz
mov
fsub
jl
dec
clc
addr16
jecxz
mov
repz
gs
jne
std
cmp
mov
clc
repz
xchg
push
fstp
push
xchg
add
xor
scas
adc
pop
xor
dec
add
push
push
adc
xchg
pop
sub
adc
xchg
add
mov
dec
stos
jmp
jle
xor
dec
inc
pop
and
inc
lds
movs
rol
in
mov
jmp
(bad)
pop
lahf
xchg
ds
stos
mov
ret
leave
xchg
shl
push
and
or
sub
shr
jecxz
jnp
mov
jno
scas
je
ja
sub
dec
push
into
pop
cli
daa
jmp
movs
cmps
inc
pop
dec
shl
push
jns
or
mov
retf
scas
in
mov
loope
(bad)
(bad)
mov
mov
mov
fnstenv
push
scas
stos
jnp
mov
push
popf
das
mov
jl
cdq
sar
ret
cmp
adc
mov
add
mov
(bad)
pop
push
and
cmps
ret
enter
jmp
mul
sub
sbb
dec
mov
(bad)
test
cwde
xor
iret
(bad)
xchg
daa
cld
xor
mov
(bad)
mov
inc
loop
(bad)
jb
std
in
mov
jo
jno
jg
inc
jns
imul
stc
imul
mov
push
repz
retf
cmc
jb
ja
xchg
das
mov
ins
pop
sbb
lock
ja
cmp
mov
push
mov
or
les
pop
inc
push
ins
idiv
inc
ror
cmps
lds
cmp
out
repnz
jle
in
push
out
enter
inc
add
adc
sbb
leave
fwait
mov
or
ret
icebp
xor
pushf
xchg
adc
inc
push
xchg
popa
loope
lahf
out
stos
js
dec
jl
push
mov
addr16
fld
push
enter
add
jmp
push
add
xchg
xor
sub
adc
(bad)
(bad)
sahf
in
hlt
icebp
or
enter
fcom
out
sub
push
jle
xor
pop
jne
int3
adc
test
add
adc
push
push
lahf
sysenter
in
xchg
mul
fadd
cmovnp
icebp
cld
xchg
scas
mov
jno
add
push
xchg
hlt
and
(bad)
aad
cmp
cmps
mov
mov
cld
aaa
mov
fadd
pop
or
mov
and
lods
popf
dec
shl
das
xor
test
and
popf
push
repnz
or
xor
pop
inc
je
cmp
stos
je
cmc
test
bound
in
in
fs
ret
adc
jg
mov
dec
jmp
std
pushf
inc
inc
stc
pop
test
in
mov
xor
mov
lods
stos
mul
jp
ret
pop
popa
stos
cdq
movs
add
ds
js
adc
jecxz
sbb
inc
movs
add
add
push
addps
(bad)
mov
shl
jge
adc
inc
popa
sub
stos
cld
retf
pop
mov
push
sbb
push
cld
mov
ja
dec
add
xchg
add
ja
cmp
dec
es
mov
adc
mov
(bad)
out
aam
outs
jge
out
push
inc
push
scas
rol
xchg
aam
xchg
ret
das
scas
jne
adc
jmp
add
xchg
test
xor
cmps
jmp
mov
xchg
pop
out
pop
cs
fmulp
dec
xor
jecxz
push
arpl
ret
jge
bound
pusha
push
push
retf
fst
pop
xchg
into
stos
jae
push
jmp
pop
push
dec
fdiv
rcl
fld
call
jnp
mov
push
xchg
jl
push
cmp
pop
leave
sar
in
pop
push
add
mov
adc
bound
int3
add
mov
sub
and
sahf
mov
(bad)
retf
lahf
imul
lahf
into
out
inc
fnsave
leave
iret
inc
add
or
inc
jns
gs
dec
xchg
call
clc
mov
xor
inc
sbb
or
push
inc
enter
or
outs
jno
inc
inc
mov
sbb
(bad)
dec
(bad)
cli
lds
(bad)
popa
shr
push
sub
cmp
push
mov
mov
push
pop
sbb
fs
inc
hlt
or
test
mov
xchg
ucomiss
ffree
xchg
rol
adc
out
int3
pop
mov
pop
mov
cwde
enter
popf
jns
and
out
out
cmp
pop
(bad)
ins
pop
push
add
inc
test
cmp
stc
xchg
neg
ficomp
adc
ss
fwait
repz
pop
call
jbe
ror
adc
enter
or
in
jge
xchg
loopne
pop
shl
es
cmp
add
mov
and
cmps
aam
sbb
pop
dec
out
and
add
pop
adc
add
and
adc
or
cmps
scas
and
jmp
pushf
lods
jmp
ss
lds
push
lds
xchg
mov
mov
pop
mov
jle
ins
loope
xchg
add
scas
icebp
loopne
cs
mov
rcr
movs
call
push
push
mov
jbe
mov
sub
arpl
pop
mov
(bad)
push
cmp
xchg
mov
ret
pop
cmp
sahf
xchg
push
repz
dec
jo
cmp
je
imul
out
jp
push
(bad)
mov
arpl
add
or
push
(bad)
pop
in
push
imul
out
pop
icebp
test
or
adc
sub
and
push
(bad)
call
enter
in
popf
pop
nop
mov
xchg
adc
xchg
icebp
sbb
adc
in
call
xor
stos
(bad)
sub
or
mov
cmp
lock
icebp
repnz
add
retf
lahf
enter
or
dec
push
pop
in
jge
mov
shr
add
lods
mov
adc
pop
in
adc
or
mov
xor
xor
cmps
icebp
xor
pop
adc
aas
xbegin
fwait
ins
loopne
cld
xchg
push
dec
add
test
les
jb
dec
neg
sbb
xlat
iret
test
xor
jo
pop
out
jmp
or
repnz
mov
cli
xor
sbb
loope
cmp
xchg
cmp
in
js
in
sbb
es
pop
in
sbb
xor
push
inc
jecxz
sbb
add
sar
mov
pop
sbb
int
xlat
add
xchg
out
test
pop
ins
push
mov
lods
aam
or
scas
add
cmp
addr16
in
push
dec
jecxz
dec
sub
es
dec
push
nop
inc
(bad)
cmps
dec
mov
sub
mov
adc
leave
mov
movs
push
xchg
push
shl
mov
mov
sub
pop
pop
int
rcl
mov
scas
lock
dec
je
lds
loop
and
out
je
sub
xor
data16
sti
lods
jo
sub
add
add
in
pop
mov
push
je
out
xchg
std
mov
inc
test
fnstsw
push
push
iret
aas
mov
stos
mov
addr16
adc
test
(bad)
cld
pop
imul
int3
and
scas
sub
jmp
leave
adc
mov
pop
in
sub
push
mov
(bad)
in
pop
cmp
iret
int
add
push
add
in
add
jae
adc
jmp
adc
jns
adc
ret
inc
lods
imul
dec
fnsetpm(287
jle
mov
in
pop
mov
adc
xlat
cli
and
inc
dec
pop
les
inc
repz
cli
cmp
outs
out
sbb
dec
xor
int
pop
jg
aam
pop
movs
or
lods
in
cmovge
push
(bad)
loop
pop
cmc
push
push
xchg
mov
scas
movs
adc
sub
add
scas
jl
jmp
mov
popf
jns
or
sub
aaa
mov
jecxz
cmp
xchg
dec
mov
popf
jmp
jo
gs
mov
es
lock
pop
mov
ret
js
je
jae
rol
add
mov
(bad)
mov
jg
xor
or
adc
mov
(bad)
call
stos
ror
xor
ja
inc
retf
cmp
jno
and
and
repz
rcr
jmp
movs
add
imul
jp
test
pop
jne
iret
add
lods
sar
sub
xor
(bad)
inc
push
lahf
mov
in
add
std
xor
or
stos
or
add
xchg
pop
icebp
dec
push
pop
push
dec
sbb
(bad)
and
or
dec
dec
jg
lods
fcomi
or
xlat
dec
sub
pop
sub
daa
mov
xchg
mov
into
pop
loop
leave
xchg
adc
ss
mov
pop
cwde
sysret
inc
add
test
add
imul
scas
pop
and
retf
jae
sub
sub
jne
rcl
lods
or
pop
cmps
xchg
pop
or
gs
adc
jo
add
call
cdq
(bad)
repnz
sub
xchg
inc
add
iret
or
inc
sub
push
xchg
dec
mov
sub
sub
mov
(bad)
idiv
add
movs
retf
add
mov
push
cmps
loop
cs
sbb
lods
movs
dec
inc
pop
cld
sbb
dec
add
ds
mov
sub
mov
lea
add
jns
or
mov
idiv
pop
adc
sbb
pop
inc
movs
add
xlat
imul
sbb
push
ret
xor
ret
sbb
and
std
mov
ficom
sahf
movs
mov
repnz
inc
imul
adc
out
imul
mov
push
je
or
retf
mov
mov
mov
sub
add
xor
or
sub
cld
jo
mov
out
ds
test
xchg
cmp
adc
inc
xchg
inc
adc
mov
jb
lock
das
or
std
adc
out
mov
push
pushf
iret
mov
ins
stos
xchg
inc
ja
ja
jns
add
das
cs
cli
push
popa
mov
pop
xchg
mov
mov
inc
inc
pop
cmp
jns
or
adc
repnz
cmp
push
xor
adc
in
or
jnp
xchg
imul
and
cs
stos
xor
clc
mov
and
push
lahf
js
std
aas
cmp
imul
mov
frndint
sbb
test
inc
sbb
jae
pushf
pop
push
sub
pop
imul
mov
inc
sbb
mov
out
mov
jp
sar
jo
push
stc
mov
lahf
repnz
movs
sbb
aas
adc
(bad)
daa
or
mov
push
cmp
pop
push
xor
mov
add
or
das
xchg
adc
cmps
and
in
loope
mov
cli
rcr
in
shr
das
and
ss
cmp
sar
je
xor
or
das
dec
imul
(bad)
pop
pop
push
int
jle
mov
push
xor
test
jmp
xor
lods
xchg
and
(bad)
jmp
mov
loop
stos
xor
out
xchg
enter
std
jbe
cs
imul
into
or
ret
movs
cld
fs
rcr
adc
dec
mov
rol
mov
jo
mov
adc
fnsetpm(287
out
xchg
ret
out
bswap
add
ins
inc
in
xlat
or
jne
xchg
xchg
xchg
sub
mov
loopne
mov
sub
rcr
and
dec
pop
xchg
mov
cmp
shl
sub
mov
cs
mov
fiadd
in
int3
aad
jge
in
jns
dec
ror
or
cmp
cwde
fcomp
mov
(bad)
sub
stos
cdq
(bad)
test
pop
sbb
js
xor
pop
cmp
mov
(bad)
imul
test
sub
ret
loopne
nop
mov
es
ret
(bad)
(bad)
lods
mov
push
adc
cli
adc
mov
push
xchg
inc
inc
test
inc
test
mov
mov
into
data16
push
(bad)
in
push
int3
dec
rcl
loope
mov
or
out
sub
cmps
mov
ins
(bad)
bound
bound
lock
adc
xchg
fcomp
out
pop
or
xlat
push
xor
test
mov
stos
jmp
out
mov
jae
or
fild
aam
xchg
push
inc
rcl
rol
add
in
and
das
add
rcr
aaa
cmp
and
icebp
mov
sub
out
jecxz
pusha
jle
out
mov
in
mov
aam
cli
mov
test
sub
or
push
push
jle
sbb
pop
js
(bad)
xor
clc
pop
(bad)
xor
inc
xchg
sub
xor
inc
jnp
test
daa
jge
or
(bad)
and
or
xchg
cmp
xor
sbb
xchg
(bad)
nop
cmp
and
aaa
shl
lods
mov
and
jle
out
retf
out
jns
jb
gs
aas
out
retf
pop
lods
or
pusha
pop
xor
jnp
or
pusha
pop
push
xchg
cli
xchg
bound
add
shl
inc
add
loop
popf
test
out
mov
(bad)
fimul
dec
adc
mov
sub
aaa
retf
cmp
aam
(bad)
cmc
fiadd
bound
push
pop
push
pop
mov
inc
cmp
jmp
lahf
lods
jnp
shr
cmp
push
cmps
push
jmp
movsx
or
xor
aaa
clc
cmps
ja
imul
sbb
sub
aas
(bad)
hlt
call
mov
cmp
inc
fistp
sub
mov
xlat
imul
movs
and
aas
jb
xor
and
mov
push
(bad)
dec
cmps
test
adc
outs
xchg
out
in
mov
jmp
inc
mov
shr
aam
outs
cwde
or
adc
jg
xor
and
dec
jae
(bad)
in
dec
push
and
pop
(bad)
out
lods
mov
das
xchg
dec
jmp
adc
xor
nop
mov
pop
scas
dec
jmp
pop
pop
xor
dec
pop
sub
jo
xchg
mov
aaa
or
clc
lea
inc
dec
xchg
mov
push
dec
pop
push
mov
inc
add
lods
ret
and
ret
(bad)
mul
mov
js
(bad)
fnstcw
xlat
inc
add
fistp
aad
(bad)
arpl
ss
lds
(bad)
stos
fnstsw
jb
xor
dec
push
sbb
ja
mov
inc
add
mov
xor
(bad)
mov
retf
push
addr16
push
inc
sbb
add
push
(bad)
(bad)
mov
mov
xchg
loopne
and
jno
mov
loopne
(bad)
xchg
xor
cs
ins
and
pusha
jo
std
push
icebp
sbb
pop
cmp
cwde
inc
mov
sub
ficom
fcom
rcl
popf
fidiv
mov
neg
add
es
dec
lds
jb
fild
add
mov
call
pop
fucomi
push
cmps
aas
dec
mov
pop
mov
ds
mov
mov
cmp
lea
int3
aad
xor
shr
or
or
in
fwait
sbb
not
scas
stos
mov
call
xchg
sub
and
mov
mov
into
stc
lods
fstp
inc
outs
xchg
pop
xchg
and
jb
push
sbb
xor
sub
retf
popf
lods
(bad)
(bad)
push
call
nop
les
jnp
xchg
pop
mov
inc
(bad)
jg
cmc
test
imul
lds
enter
dec
mov
rcl
int
push
test
stos
xor
outs
mov
push
pop
rcl
push
(bad)
mov
dec
sub
cld
jno
push
dec
addr16
daa
fdivr
adc
lds
ret
and
push
sub
push
int
jno
fs
pop
dec
xchg
stos
sbb
or
sbb
mov
jo
dec
mov
pop
lods
shr
xchg
cmp
sub
mov
ret
stos
imul
mov
jne
jbe
jns
out
mov
stos
pop
xlat
add
and
lea
(bad)
mov
movs
test
push
mov
xchg
adc
mov
aas
aas
mov
and
push
cmc
add
xor
scas
mov
xchg
jl
cwde
pop
pop
jb
mov
cld
mov
nop
push
sub
ficom
lods
mov
dec
add
mov
xor
pushf
inc
dec
cld
cmps
fdivr
popf
daa
pop
out
aas
clc
sahf
pop
test
or
pushf
or
inc
loopne
push
add
gs
pop
movs
movs
sub
xor
outs
mov
aaa
add
retf
enter
pop
jecxz
mov
int3
sub
pop
cmc
push
loopne
int
enter
jge
test
lea
xlat
shl
loop
pop
xchg
cli
add
icebp
inc
sbb
jp
xor
aas
and
out
mov
push
sbb
or
(bad)
xchg
inc
inc
sbb
jle
(bad)
ret
mov
and
pop
aaa
enter
ss
fbstp
out
push
jge
dec
xchg
sub
dec
or
sbb
mov
jl
sub
leave
retf
add
je
mov
inc
xor
sbb
in
daa
into
test
mov
mov
sbb
pop
push
retf
shr
(bad)
stos
mov
(bad)
(bad)
mov
xor
jne
gs
push
jl
or
out
mov
ficom
(bad)
push
xlat
pop
ins
nop
adc
repz
test
sub
push
inc
or
lea
(bad)
icebp
inc
out
xor
and
jbe
and
and
out
pop
clc
cs
loope
cld
pushf
ins
cmp
push
jmp
repnz
nop
dec
xor
cmp
xor
lahf
out
icebp
arpl
mov
sahf
in
cmps
push
int3
(bad)
mov
or
adc
mov
cmovbe
mov
mov
inc
out
scas
mov
in
pop
cdq
out
add
xor
hlt
mov
js
div
fwait
sar
ja
inc
mov
inc
lea
ja
movs
cmp
sub
lods
add
push
and
out
(bad)
adc
nop
sbb
mov
aad
adc
in
lods
and
out
cmc
call
add
jbe
(bad)
jg
xlat
fnstenv
xchg
sbb
pushf
in
jo
pop
sbb
dec
xor
mov
mov
int3
rol
movs
inc
leave
loope
dec
push
(bad)
or
or
push
lock
leave
sub
je
js
pop
call
enter
push
and
add
push
mov
aam
xor
cmp
(bad)
fist
dec
adc
mov
adc
ret
rcr
and
xor
jmp
fnstenv
mov
dec
adc
js
aam
pop
repnz
(bad)
sbb
push
popa
das
push
fistp
jmp
pusha
dec
or
aaa
ds
adc
jno
xor
into
jmp
addr16
mov
sbb
inc
aaa
iret
cld
mov
mov
push
addr16
icebp
stos
jmp
out
je
sub
sub
pop
mov
in
fcmovnb
popa
push
xchg
dec
lock
cmp
ror
inc
dec
push
shr
repz
cmps
sub
lock
xchg
xor
(bad)
xchg
fdiv
jecxz
cmps
movaps
(bad)
fmul
xor
bound
sti
enter
nop
mov
cmp
test
aas
aad
xor
dec
stos
sti
popf
add
scas
jbe
mov
inc
std
test
ins
jge
das
arpl
pusha
imul
adc
pop
fstp
add
cli
mov
cs
test
and
cmp
in
stos
mov
ficomp
scas
pusha
pop
ret
or
stc
and
mov
dec
inc
ins
cmp
shl
das
adc
or
std
sbb
into
imul
inc
mov
test
add
mov
fsub
movs
adc
xchg
add
(bad)
push
inc
cmp
sbb
dec
push
out
dec
mov
cmp
mov
xor
int
jle
fist
mov
jmp
(bad)
inc
js
cmps
push
aam
xchg
push
imul
fistp
and
fidivr
pop
adc
int3
in
mov
xchg
in
push
aam
das
popa
or
loope
ds
clc
xor
sar
xchg
daa
mov
ffreep
dec
jae
test
adc
(bad)
push
(bad)
xchg
pop
rcl
push
shr
push
in
in
add
add
ja
int3
xchg
mov
enter
hlt
sti
jne
push
sub
icebp
imul
mov
pop
(bad)
pop
jns
mov
sbb
outs
lods
scas
shr
fdivr
pop
xchg
shl
mov
xor
mov
mov
add
mov
adc
cmps
rol
rol
daa
xor
sbb
cmp
inc
pop
mov
inc
jmp
jo
mov
movs
clc
sbb
ins
cmp
jge
ror
xor
retf
fwait
add
movs
pop
cmp
leave
fcomp
mov
in
and
cmp
sbb
xlat
sub
add
loopne
fmul
xchg
sub
in
pop
add
jg
sbb
cmp
or
loopne
add
dec
mov
mov
jae
jo
xor
jmp
in
bnd
add
adc
push
scas
push
or
sbb
(bad)
push
push
mov
and
jp
ret
mov
mov
pop
gs
pushw
lods
jge
push
enter
rcpps
xlat
test
sbb
lahf
pusha
cmp
mov
cmc
in
push
xchg
lea
xor
xchg
xor
(bad)
cdq
push
mov
mov
rol
mov
cli
popf
stos
mov
arpl
mov
fiadd
test
add
in
imul
mov
outs
jnp
push
gs
xor
cli
pop
fisub
mov
pusha
or
fsubr
mov
mov
sub
rcr
test
sahf
mov
sbb
mov
mov
cmps
out
bound
test
ja
mov
dec
add
inc
pop
retf
lahf
jg
adc
cmp
cdq
and
cmp
jmp
fs
call
jp
dec
leave
ja
fisttp
call
jo
mov
in
cmp
pop
push
cmp
adc
fstp
dec
data16
adc
js
div
outs
pusha
sub
out
dec
jmp
push
je
mov
adc
ret
fs
push
sbb
aad
mov
(bad)
or
mov
mov
or
int
push
loope
sahf
or
cmp
shr
jo
mov
imul
add
cs
fs
(bad)
xchg
cli
mov
pop
and
sti
cld
xchg
scas
cdq
ror
test
adc
mov
dec
js
in
and
sbb
retf
pop
mov
sub
push
sub
outs
(bad)
mov
mov
sub
xchg
mov
adc
sbb
push
inc
lahf
or
jno
dec
test
retf
xchg
shl
push
jle
ret
je
mov
mov
mov
icebp
retf
mov
ja
pop
xchg
push
out
cmp
pop
mov
loopne
xor
mov
cmp
enter
sub
leave
imul
and
retf
xchg
sub
dec
(bad)
out
push
retf
mov
gs
sub
cli
mov
pop
rol
push
outs
xchg
outs
loope
or
mov
enter
add
out
(bad)
mov
loope
retf
adc
dec
jge
mov
dec
popf
add
sahf
inc
xchg
popa
imul
sbb
test
adc
xor
(bad)
aaa
xchg
imul
outs
ret
jbe
dec
arpl
mov
jno
pusha
xchg
mov
or
aaa
mov
pop
mov
or
sbb
hlt
(bad)
dec
push
xlat
out
test
jecxz
(bad)
ud1
shr
add
(bad)
aaa
(bad)
sbb
out
and
addr16
loop
scas
lods
popa
jo
pushf
loop
pop
js
call
call
in
imul
jbe
mov
stc
add
xor
cmp
push
jmp
jmp
ror
push
les
loope
or
cli
repnz
sbb
push
cmp
inc
cld
hlt
ds
cli
inc
sbb
adc
mov
(bad)
mov
(bad)
fldenv
cmps
ja
enter
mov
(bad)
and
ret
std
fistp
call
sub
push
fidivr
mov
add
mov
gs
sub
cmp
(bad)
retf
ds
out
jno
mov
dec
aas
arpl
imul
mov
(bad)
ds
int3
pusha
ret
faddp
in
test
mov
std
in
mov
jg
enter
push
sbb
jp
addr16
jo
shl
sbb
cld
call
inc
fld
mov
adc
(bad)
enter
adc
mov
je
dec
xlat
(bad)
push
das
lock
sub
out
add
pop
xor
jle
stc
xor
push
fwait
sub
and
xchg
fisub
xor
ret
push
(bad)
das
cmps
das
aaa
push
jg
inc
xchg
sbb
push
cdq
loop
sub
dec
iret
outs
adc
and
xchg
cmp
and
daa
sti
or
xlat
lock
test
enter
adc
push
imul
or
or
pop
mov
or
retf
adc
sub
xor
scas
jb
xor
push
cmp
add
out
adc
inc
add
rcl
aad
cmp
mov
mov
mov
out
adc
xchg
push
int3
cmp
fwait
jb
not
rcr
adc
mov
cmc
dec
clc
dec
int3
call
icebp
cmp
or
add
mov
push
jno
mov
or
pusha
imul
pop
clc
cdq
cmps
xchg
stc
iret
sbb
(bad)
pop
iret
mov
mov
loope
fisttp
xchg
call
push
inc
test
arpl
dec
adc
mov
jns
popf
sbb
call
mov
xor
loope
outs
call
es
call
xchg
jle
sahf
dec
pop
(bad)
loope
xor
add
nop
dec
mov
mov
aad
call
or
jecxz
xor
adc
mov
lea
jmp
cmp
cmp
ret
lods
xchg
jne
std
or
ins
add
leave
jp
adc
pop
sbb
add
cmp
ins
cmps
repz
pop
xor
je
enter
xor
adc
pop
cdq
or
push
mov
push
inc
and
addr16
cld
mov
sbb
mov
clc
outs
imul
xchg
(bad)
ss
mov
aam
icebp
xor
pop
out
ror
xchg
sbb
test
aaa
add
mov
mov
push
fisttp
call
cmp
xchg
xchg
jl
lahf
sbb
xchg
adc
xor
lahf
lahf
aad
xchg
and
in
push
dec
jmp
out
hlt
loop
pop
or
mov
test
mov
dec
cwde
xchg
inc
push
out
xchg
jo
add
int
mov
mov
(bad)
sbb
cmp
or
inc
pop
loope
daa
xor
stos
sub
dec
xor
adc
inc
push
aad
xchg
dec
mov
fcom
sbb
dec
nop
push
push
in
jge
fisubr
push
dec
je
outs
call
mov
mov
push
sbb
sub
test
mov
ins
and
movs
adc
fistp
out
and
push
lahf
stc
movs
jne
mov
cmp
in
lahf
lods
adc
lahf
leave
repz
xor
js
jno
add
adc
(bad)
xor
adc
int
sar
arpl
fsub
call
test
(bad)
push
mov
jbe
adc
push
pop
mov
test
call
cmp
add
mov
pop
imul
lahf
and
and
or
cmp
cmp
xlat
inc
add
(bad)
xchg
stos
cmp
pop
mov
outs
inc
push
xchg
arpl
fsub
js
(bad)
jo
xor
mov
jmp
repz
ja
lea
mov
daa
test
push
jecxz
jmp
int3
test
punpckhdq
pop
sub
rcl
ret
jmp
cmp
test
bnd
or
rcr
sub
into
outs
outs
sbb
or
lds
mov
(bad)
sub
mov
and
scas
inc
stos
and
shl
jnp
pop
adc
mov
dec
push
xor
lods
cmp
jns
add
out
inc
and
and
push
cdq
pop
xchg
push
ss
mov
push
scas
lods
xchg
retf
adc
and
popa
xchg
mov
adc
push
add
out
in
sbb
push
movs
aas
dec
adc
mov
pop
pop
pop
mov
aaa
dec
test
xor
cs
pop
out
add
sahf
cmp
fstp
mov
dec
pop
xchg
and
gs
sub
mov
movs
fst
sub
icebp
dec
sbb
out
inc
mov
dec
adc
shr
ret
cmp
or
inc
call
dec
ss
cs
jle
mov
imul
mov
mov
mov
push
aad
mov
stos
in
sbb
sahf
push
leave
push
dec
daa
ins
jecxz
mov
ss
aam
jg
xor
in
stos
jno
dec
not
daa
aam
inc
lock
adc
imul
xor
sbb
jmp
push
xor
adc
sbb
clc
jnp
sub
adc
into
fsubr
ror
jno
mov
push
push
cmps
je
jbe
dec
cmps
loop
add
out
inc
shr
fbstp
(bad)
loop
test
ins
lock
mov
sbb
pop
gs
aaa
xor
sub
add
adc
dec
adc
adc
ret
dec
xchg
xlat
arpl
push
mov
fadd
xchg
shl
ret
test
sub
push
jp
xor
daa
hlt
dec
xchg
jl
nop
push
mov
int3
sbb
push
push
and
jmp
retf
lea
dec
pop
mov
sbb
adc
in
pop
cmp
push
mov
xor
pop
cmc
adc
jecxz
sbb
mov
mov
clc
fs
push
cs
jne
mov
sub
and
repz
das
jmp
add
mov
ror
les
(bad)
xchg
test
pop
imul
imul
mul
stos
sub
not
push
lods
out
loopne
int3
cmp
(bad)
mov
shl
push
pusha
jmp
mov
enter
mov
lds
cwde
ror
xor
sbb
pop
xlat
imul
jne
movs
push
loop
ret
push
sbb
add
adc
adc
(bad)
mov
mov
mov
js
inc
fist
push
mov
mov
adc
jae
jecxz
xor
(bad)
in
dec
pop
add
shr
imul
cmp
push
xor
shr
pop
retf
or
outs
sub
test
aas
bnd
call
pop
or
push
std
add
pop
daa
jmp
addr16
mov
arpl
nop
cmp
or
test
xchg
stos
or
mov
add
int3
inc
jb
adc
mov
aam
imul
test
pop
push
mov
push
xor
shl
shl
daa
(bad)
cwde
add
xchg
jmp
into
mov
mov
daa
push
mov
test
sbb
add
rol
retf
xor
add
fstp
adc
iret
mov
cmps
xchg
sbb
out
inc
or
fwait
test
fnstcw
mov
or
push
xchg
add
ds
int3
je
stc
inc
push
test
bound
or
jle
sti
in
push
loop
mov
push
jle
shr
xor
dec
dec
cwde
sub
mul
xchg
imul
pop
pop
dec
ret
and
adc
sbb
retf
xchg
not
cmp
cmp
ret
jbe
push
xchg
xor
dec
mov
leave
cli
mov
(bad)
lahf
(bad)
loopne
xchg
jo
js
aad
lds
dec
mov
div
mov
and
xchg
sbb
push
inc
add
pop
rcl
ja
add
sub
cmps
xor
mov
out
xchg
(bad)
mov
or
add
mov
xchg
ja
push
mov
out
push
inc
pop
sti
mov
dec
cmps
icebp
mov
fmul
les
rcr
push
adc
(bad)
sub
loop
cld
inc
(bad)
mov
shl
mov
(bad)
mov
adc
hlt
sub
hlt
out
jl
jns
push
(bad)
aas
lds
xchg
pop
fidiv
push
or
fs
cmc
or
fisttp
push
mov
sbb
jmp
inc
loopne
dec
shl
and
lea
cmp
call
inc
loope
sub
fcomp
sbb
mov
inc
cmp
jns
push
leave
aad
gs
clc
or
sub
mov
pop
das
cli
push
mov
(bad)
call
jns
dec
(bad)
pushf
xchg
jo
or
cmp
or
loop
shr
jmp
dec
and
push
or
pop
(bad)
iret
cmp
pushf
xchg
test
mov
cmp
mov
jne
push
adc
push
add
inc
lahf
cld
stc
sub
jecxz
add
mov
pop
popa
lock
cmc
scas
dec
add
push
cmps
xor
sbb
test
pop
cmps
inc
pusha
push
outs
lds
fmul
pop
mov
mov
das
cmp
dec
push
test
jbe
and
jae
jne
add
fsub
int3
fcomp
jo
pop
jl
sar
mov
and
iret
mov
movs
cli
aaa
mov
rcl
xchg
cmp
leave
(bad)
and
xchg
ja
loop
cmps
dec
pop
inc
push
loop
mov
test
sub
push
call
mov
pop
int3
loop
push
imul
out
aad
xor
iret
inc
xor
(bad)
mov
call
(bad)
std
mov
hlt
sub
mov
sbb
adc
xchg
mov
retf
jmp
icebp
jl
dec
ret
mov
sub
add
xchg
(bad)
pop
add
mov
mov
fiadd
xchg
retf
push
fcomi
test
bound
inc
je
sub
dec
pop
(bad)
add
sub
cmc
cmc
cmps
icebp
cmp
xchg
cmps
(bad)
pop
sysexit
xchg
inc
data16
imul
xchg
lds
dec
mov
aas
xor
add
or
pop
(bad)
jge
test
fcmovb
je
add
xor
and
mov
inc
add
adc
call
push
mov
adc
aaa
dec
pop
enter
aas
shl
pop
adc
neg
push
sub
popa
cmps
mov
xchg
out
mov
lods
sbb
xor
(bad)
enter
in
movs
cdq
test
aam
test
(bad)
cwde
cld
push
add
iret
loopne
div
mov
pop
adc
or
inc
and
cwde
test
mov
xchg
mov
cli
xchg
xchg
(bad)
jb
or
arpl
mov
aas
pop
sub
test
jecxz
pop
es
and
and
outs
dec
addr16
scas
fsubr
rol
fild
rcr
add
nop
xchg
int3
mov
or
inc
es
mov
mov
jae
shl
mov
pop
pusha
dec
xor
js
or
retf
sbb
lds
(bad)
dec
jo
xor
jge
movs
push
retf
lods
mov
data16
xchg
ja
sbb
test
jge
fcomp
in
jo
cmp
mov
add
js
fwait
push
adc
repnz
add
pop
fmulp
into
enter
dec
dec
sbb
loope
cmp
adc
loop
lahf
inc
daa
push
lds
add
push
or
and
in
int3
lea
dec
sbb
push
mov
pop
out
fist
int
scas
(bad)
aam
sbb
outs
scas
leave
mov
sbb
mov
addr16
test
push
addr16
jl
paddw
jmp
sti
daa
ins
scas
inc
imul
test
int
movs
dec
(bad)
sub
sub
adc
and
stc
pop
xor
cpuid
outs
cmps
stc
add
pop
jle
push
gs
cmp
cmp
cdq
push
xor
int
or
mov
enter
add
fmul
pop
test
sbb
push
inc
xor
cmps
lods
jmp
mov
mov
and
pop
in
ins
and
retf
loope
cmps
dec
pop
push
rcl
outs
div
sub
das
jnp
pop
inc
std
xor
repz
xor
xor
sbb
test
sub
jecxz
pop
out
adc
mov
movs
and
(bad)
mov
mov
inc
xor
adc
mov
and
and
inc
pop
mov
fwait
jne
xchg
daa
push
mov
mov
pusha
fcomp
in
clc
stos
into
jnp
outs
push
in
enter
jo
nop
pop
pop
les
cmp
push
pop
mov
(bad)
aas
mov
dec
fwait
or
outs
mov
jnp
adc
pop
and
int3
or
or
std
in
popf
fucomi
pop
rol
add
mov
ret
mov
repz
mov
adc
jecxz
repnz
(bad)
xor
out
jns
loopne
xchg
and
add
sub
arpl
inc
pop
or
inc
pop
jmp
neg
test
popf
retw
adc
fnsave
xor
ins
test
cmp
retf
push
adc
call
dec
aas
shl
shl
stos
ins
jno
dec
inc
in
xor
pop
xor
mov
loope
xchg
mov
jbe
(bad)
cld
les
jne
push
and
cmps
dec
pop
loopne
jbe
aaa
cmps
mov
and
cmc
popa
mov
test
add
(bad)
rcl
sbb
imul
pop
cmp
ficomp
loopne
fisttp
xlat
(bad)
call
jns
fdiv
ja
mov
fs
cmp
gs
dec
lea
ins
ja
test
js
cmp
hlt
cmps
add
and
xor
imul
arpl
out
aad
ror
xor
or
inc
pushf
mov
xor
mov
hlt
retf
popf
stos
adc
shr
inc
sub
pop
ins
jnp
push
cmp
fldcw
dec
sub
(bad)
and
scas
push
lea
les
cli
data16
mov
cli
ja
lods
rol
stc
movs
xchg
inc
popf
icebp
push
fcmovbe
es
sub
jns
adc
out
sub
out
mov
sahf
test
das
nop
mov
cs
add
sar
(bad)
push
add
push
movs
jbe
sub
mov
inc
xchg
int3
jbe
pop
(bad)
leave
push
clc
outs
daa
inc
mov
xor
push
xor
jne
jmp
js
out
test
pop
adc
add
adc
pop
sub
(bad)
mov
lahf
lea
inc
rol
clc
sub
repnz
xchg
fwait
push
xor
push
sti
jmp
lds
push
ret
add
jbe
mov
or
repz
mov
cs
adc
mov
ss
or
and
pop
gs
pop
xchg
out
inc
add
pushf
and
loop
jecxz
ss
mov
movs
or
or
inc
xchg
shl
mov
shl
fcom
pop
(bad)
pop
add
ror
shl
push
ins
(bad)
mov
es
int
sti
fisttp
inc
mov
fld
inc
sbb
sti
fwait
jae
in
xor
fiadd
jne
mov
sti
mov
sub
loope
xor
(bad)
daa
adc
mov
inc
xlat
adc
add
in
inc
pop
mov
lahf
pop
lahf
adc
adc
push
jecxz
pusha
pop
cdq
cmp
daa
retf
pop
cmp
ja
sub
inc
mov
and
cdq
ins
in
dec
in
outs
sub
aaa
xlat
jge
sbb
mov
ror
inc
mov
jae
pop
ror
out
inc
loop
xchg
sbb
iret
sbb
xor
sub
mov
jno
inc
jp
adc
dec
movs
mov
jns
lea
mov
pushf
add
test
xchg
mov
mov
mov
push
lahf
or
fist
jp
sbb
pop
push
wrmsr
iret
mov
cmps
nop
pop
outs
dec
xor
ss
gs
ds
int3
mov
mov
daa
sub
xchg
out
call
dec
dec
inc
mov
cmp
scas
test
jge
int
mov
int3
sbb
shl
and
ror
mov
and
pop
inc
xor
imul
mov
cdq
fidivr
popa
stos
add
add
sub
rol
ret
sub
lahf
add
push
dec
test
jecxz
shr
add
or
add
inc
in
mov
sbb
mov
adc
sub
sub
sub
dec
sub
call
int3
(bad)
push
inc
jmp
jmp
mov
mov
mov
cmps
xchg
ja
gs
xchg
popa
sbb
sub
mov
pop
psllq
ins
(bad)
push
out
inc
out
xchg
mov
add
push
add
mov
mov
xor
jno
mov
lock
mov
sub
cwde
icebp
iret
retf
ins
sub
xchg
lods
int3
js
lods
mov
xor
test
push
cmps
mov
in
mov
pop
imul
jl
xor
mov
cmc
out
pop
cmp
call
test
mov
data16
das
push
jmp
jo
pop
lock
sub
mov
mov
bound
pusha
mov
and
imul
mov
xor
xor
in
mov
xchg
nop
ret
shr
push
mov
or
xlat
outs
popf
fidiv
repnz
ins
retf
ins
pop
fcom
mov
inc
push
jo
jg
fs
jbe
sub
jmp
adc
pop
lea
xor
mov
(bad)
dec
xor
out
fst
fsubr
mov
popf
ficom
mov
mov
and
in
adc
into
addr16
retf
call
mov
jns
mov
cmps
or
out
mov
dec
pop
das
jno
in
cmp
dec
out
rcr
or
pop
mov
or
dec
out
out
pop
xchg
sub
xor
imul
pop
sbb
xor
cdq
xchg
mov
cmp
test
mov
std
add
int3
xor
jl
sub
leave
out
call
cmp
dec
(bad)
xchg
cmps
inc
mov
and
dec
movs
ror
xchg
ficomp
xchg
mov
mov
data16
call
add
scas
gs
fnsave
sbb
out
popf
jns
jle
dec
(bad)
lods
shr
jnp
push
mov
pop
or
cs
dec
adc
xchg
dec
mov
mov
idiv
cmp
jns
dec
adc
mov
sbb
add
xor
xchg
adc
jl
imul
adc
sub
push
jne
sbb
jnp
nop
mov
and
je
dec
sbb
test
jge
jmp
xchg
mov
sbb
aaa
es
ja
sahf
fisubr
jl
rcl
pop
push
into
ret
clc
mov
or
stos
sar
inc
dec
jecxz
inc
(bad)
ret
test
xchg
movs
xor
fwait
mov
pop
xchg
and
out
dec
mov
hlt
rol
pop
or
addr16
fst
mov
jno
stos
inc
popa
inc
fwait
lahf
pop
mov
stos
or
shl
or
mov
jmp
adc
iret
jmp
xchg
jae
xor
outs
iret
sub
xlat
add
mov
aam
(bad)
js
cmps
dec
sbb
push
mov
aad
in
sub
sub
add
lods
pop
daa
push
vpandn
pop
int
movs
mov
arpl
xlat
pop
retf
mov
in
test
in
cmc
mov
popf
sbb
mov
div
mov
imul
lods
push
cmp
lds
test
push
mov
pop
cmp
xchg
and
shl
ja
aaa
jp
cmp
aas
and
mov
sub
xchg
sbb
jno
das
retf
cmp
mov
mov
pop
pop
rcl
(bad)
les
cld
inc
mov
shr
(bad)
sub
pop
mov
cwde
mov
mov
into
push
iret
cmp
sub
outs
ror
bound
cmps
or
pushf
or
ins
xor
add
inc
xchg
fistp
mov
hlt
mov
add
mov
aam
(bad)
(bad)
in
sub
clc
aas
je
push
lods
sahf
mul
in
les
add
mov
int
mov
xor
mov
pop
outs
jns
pop
shl
mov
popa
adc
enter
inc
or
dec
or
push
mov
call
adc
repnz
push
or
pop
sbb
adc
sahf
and
gs
mov
fisttp
jmp
test
push
jae
int
adc
mov
loop
cli
popa
add
xor
mov
mov
cmp
sub
mov
pop
sub
push
inc
push
aam
and
ror
xchg
dec
xchg
mov
sub
xchg
jg
and
cmc
push
jmp
data16
retf
clc
out
push
lahf
push
inc
iret
jmp
outs
push
stos
mov
jge
add
dec
leave
cmp
xchg
setge
add
in
sub
push
repnz
cld
mov
and
ja
int
les
stc
icebp
xor
or
(bad)
movs
es
and
inc
add
call
pusha
scas
loope
adc
sub
imul
pushw
outs
mov
jle
xchg
enter
stos
jne
repnz
dec
jbe
xchg
cmc
adc
pop
retf
leave
scas
lahf
sbb
stos
in
xchg
add
fwait
or
dec
dec
repz
(bad)
xlat
in
shr
xchg
(bad)
sub
in
call
dec
stc
xor
fdivr
dec
call
cmp
and
pop
adc
dec
or
aaa
aam
push
sub
stc
or
stc
pop
sub
pop
outs
mov
mov
mov
add
ret
mov
push
lods
in
inc
stos
(bad)
shl
lock
clc
mov
xchg
stos
enter
xor
or
sti
push
sahf
pop
in
xchg
inc
lahf
pop
push
scas
push
or
pop
in
fsub
jne
test
cmp
sbb
clc
mov
dec
fmul
mov
mov
mov
xor
loope
lods
pop
dec
add
jp
xchg
dec
adc
jmp
ret
xor
cmp
sbb
or
int3
xchg
dec
test
jnp
rol
addr16
in
pusha
rcl
out
mov
test
xchg
cmp
ja
push
leave
in
(bad)
fst
push
dec
dec
loop
test
xlat
movs
mov
xchg
jbe
(bad)
push
xchg
scas
push
cld
mov
out
shr
mov
out
enter
sar
jp
xor
lea
mov
ret
hlt
and
nop
cmp
pop
test
xor
xchg
shl
les
dec
push
jg
add
lock
mov
mov
aad
lea
or
vpsrld
retf
iret
mov
or
aam
push
mov
xchg
dec
push
xchg
cmp
jle
inc
not
loopne
inc
mov
fbstp
aad
xchg
xchg
mov
fld
scas
out
xchg
and
loopne
xor
repz
call
les
mov
lods
jg
inc
xchg
cmp
js
pop
outs
mov
cmp
jl
or
xor
cli
(bad)
rcr
dec
mov
pop
retf
and
scas
sub
ror
addr16
xchg
mov
pushf
jecxz
push
xchg
mov
push
pop
cmp
push
retf
repz
and
enter
stos
lods
inc
adc
mov
or
mov
hlt
cli
(bad)
mov
mov
push
cwde
xor
xor
rol
div
sub
mov
pop
push
mov
aaa
jge
std
sahf
inc
and
xor
(bad)
cmps
cwde
and
sar
out
iret
test
in
dec
(bad)
imul
jmp
xor
dec
or
lods
cmp
(bad)
sub
jecxz
(bad)
pop
cmp
mov
in
push
jbe
outs
adc
xchg
xchg
cmp
push
cs
cmp
movs
jecxz
mov
sahf
mov
(bad)
inc
jl
fmul
fxch
xchg
fs
daa
cmp
mov
jne
or
neg
sub
sbb
xchg
ss
adc
call
cmp
cmp
or
push
mov
repz
aaa
cmp
add
adc
xchg
fimul
cmp
dec
into
enter
xlat
test
xchg
add
ss
or
push
test
xor
and
fisttp
fcomp
xchg
lods
pop
scas
in
cmp
xor
(bad)
cld
ja
lods
xchg
adc
shr
dec
jge
fcomp
jb
sub
int
xor
outs
ja
shr
mov
sbb
sub
push
mov
repnz
(bad)
fmul
push
xlat
mov
fs
inc
add
aam
lods
push
xor
out
mov
sub
lahf
mov
mov
jae
inc
jg
ror
arpl
xchg
pusha
fiadd
or
repz
mov
or
idiv
add
push
lea
lahf
inc
mov
sbb
add
mov
jp
dec
rcl
lds
dec
or
xchg
sar
sahf
push
and
inc
(bad)
and
(bad)
push
cmps
test
fcmove
fst
ret
nop
std
lods
mov
cmp
adc
cmp
cmp
xchg
retf
test
cdq
stos
jns
mov
jle
adc
xchg
out
jge
add
pop
push
in
cmc
enter
mov
dec
inc
out
sar
loope
dec
push
xor
sbb
mov
push
adc
add
cwde
or
inc
xchg
in
sbb
out
rol
fisub
dec
dec
fwait
mov
add
fcomp
or
mov
inc
imul
std
sub
mov
test
call
adc
mul
in
loop
(bad)
mul
cmp
or
xor
(bad)
call
bound
and
inc
jecxz
sbb
jmp
jg
mov
xchg
movs
xchg
mov
push
mov
pushf
loope
(bad)
push
aam
(bad)
jp
mov
pushf
add
pop
inc
pop
xor
or
xchg
call
jns
imul
cmp
inc
and
bound
pop
and
xchg
addr16
scas
push
pop
in
sar
rcl
stos
test
fild
pusha
push
xlat
jbe
int3
xchg
mov
sbb
ret
imul
pop
pop
sbb
adc
xchg
adc
hlt
mov
pop
mov
xor
cmp
lods
inc
or
fwait
ja
fdiv
bound
inc
call
jmp
xchg
jo
sub
shl
loopne
scas
iret
jno
add
retf
xchg
xor
xchg
pop
aad
dec
push
ins
cmp
rol
cmp
pop
jle
mov
mov
cmps
sub
das
mov
jne
rcr
ret
std
dec
imul
mov
jbe
je
mov
nop
mov
inc
jmp
ja
ficom
pop
cmp
and
sbb
jbe
mov
addr16
jbe
cmps
cmp
ret
mov
int3
add
inc
int3
sahf
mov
jo
in
or
retf
push
inc
sub
pop
push
mov
push
mul
fsub
stos
shl
lock
test
mov
dec
and
pop
and
push
in
int3
shr
js
bound
ja
jae
ss
or
and
jmp
push
div
dec
jmp
mov
mov
mov
les
jnp
repz
jo
sub
jp
sbb
mov
stos
add
push
aam
imul
std
pop
lock
or
mov
daa
lock
fistp
fimul
push
xchg
mov
push
stc
js
jns
jmp
inc
pop
loope
jg
lock
stos
sbb
pop
dec
sbb
sbb
data16
sahf
ds
xor
fucomp
neg
mov
sub
cwde
jp
pop
inc
sub
aaa
cmp
div
add
push
das
xchg
lds
test
mov
cs
mov
xchg
jbe
jmp
lods
pop
fs
push
shl
sbb
pop
iret
cmp
and
mov
and
das
popf
mov
xchg
push
jp
dec
inc
jnp
ror
lds
pop
adc
cmp
and
(bad)
push
mov
cmc
lods
cs
add
dec
dec
data16
ret
pop
dec
jle
dec
mov
jg
outs
mov
inc
rcr
out
xlat
out
pavgb
and
add
jge
sub
jmp
cpuid
imul
test
adc
and
daa
xor
popf
scas
mov
inc
dec
push
out
in
or
cmc
mov
cwde
cli
jnp
push
loope
data16
sahf
das
or
sahf
lods
pop
(bad)
aas
mul
cmp
push
addr16
and
adc
pop
pop
lahf
jbe
cmc
lahf
test
mov
popf
sub
fs
or
pusha
adc
test
fcmovnbe
aad
adc
fld
lea
xchg
fcom
pusha
mov
sbb
add
arpl
pop
xor
cmc
jo
mov
jg
es
test
fimul
aad
mov
jp
add
push
or
push
dec
sbb
rcl
jl
inc
fld
aaa
or
inc
sahf
inc
cmp
aam
or
inc
shr
aaa
mov
xchg
inc
mov
popa
xchg
aam
cmp
mov
mov
push
xchg
adc
movs
and
push
dec
xchg
jmp
cli
push
dec
aad
popa
cmp
jae
inc
jmp
push
cmp
mov
repz
outs
pop
dec
cld
pushf
lods
jmp
js
aaa
mov
adc
js
xor
adc
xlat
in
(bad)
stos
mov
adc
fnsave
inc
mov
xor
test
sub
fnstenv
rcl
rcl
or
mov
xchg
mov
dec
jmp
(bad)
pop
mov
repnz
xor
mov
dec
repnz
adc
or
xor
gs
shl
hlt
std
sub
mov
inc
cwde
cmp
les
cmps
mov
adc
sahf
lock
mov
hlt
push
sub
stos
xor
and
push
sbb
push
iret
inc
clc
and
mov
scas
dec
cmp
idiv
cdq
xchg
in
js
(bad)
cdq
xchg
rcr
ja
test
push
add
imul
push
jp
int
cmps
ss
movs
mov
lea
or
jae
pop
mov
inc
xor
pop
mov
inc
out
pop
(bad)
xlat
enter
fidivr
stos
dec
adc
cli
test
out
fs
xchg
jns
jns
in
loop
out
adc
ficomp
mov
sub
outs
sub
aam
not
dec
sub
stc
pop
inc
sub
and
mov
lahf
fwait
sbb
and
out
or
ret
jmp
loop
cdq
add
push
push
push
jp
or
xor
fidiv
adc
in
and
and
(bad)
(bad)
adc
test
lods
cmc
pop
inc
or
bound
or
cs
sahf
ret
sub
mov
sbb
lahf
lea
mov
test
sahf
cmp
dec
lahf
pop
fnsave
push
pop
std
sbb
cdq
sbb
or
push
hlt
push
xchg
icebp
repnz
mov
xchg
fdivr
pop
sub
push
scas
test
xchg
or
jb
aaa
in
inc
mov
sahf
sbb
stos
sub
inc
mov
ret
bound
and
ficomp
cmp
xor
stc
imul
jmp
mov
pop
cmp
and
ins
icebp
fiadd
retf
test
jb
fnsave
retf
cs
mov
jo
je
ds
adc
cmp
(bad)
dec
add
add
pop
rol
inc
pop
pop
stos
jb
and
icebp
and
mov
mov
mov
mov
out
(bad)
iret
add
clc
dec
in
sbb
inc
and
cmp
adc
and
inc
cli
jo
dec
add
fs
(bad)
jmp
inc
push
loopne
scas
and
jge
cmp
push
fcom
push
fidiv
dec
pusha
outs
sbb
rcr
loop
jl
pop
and
rcl
cwde
(bad)
cld
(bad)
xchg
pop
push
jnp
inc
mov
jg
xchg
dec
js
ja
xor
cli
jl
inc
das
xchg
popa
push
add
mov
imul
adc
jecxz
jae
inc
loope
stos
aaa
fwait
ja
aam
sti
sahf
sub
push
mov
loopne
ret
pop
fldenv
push
repz
and
into
iret
pop
jp
mov
je
pop
jle
mov
sub
jle
lods
stc
mov
mov
adc
loopne
mov
push
cmps
push
add
(bad)
(bad)
(bad)
call
mov
push
adc
push
dec
jp
cmps
pop
jp
mov
push
mov
push
xchg
adc
test
adc
pop
cmps
into
push
fadd
or
push
cmp
clc
mov
stc
call
in
stos
icebp
xchg
popa
push
aas
mov
adc
inc
cmp
stos
js
xchg
pop
bound
pop
into
sub
adc
iret
adc
lock
icebp
pop
(bad)
test
jle
dec
in
test
cmc
outs
or
mov
xor
jno
(bad)
out
push
retf
or
jge
popa
push
loop
xchg
or
dec
enter
(bad)
cmp
or
inc
xor
mov
sbb
fwait
pop
push
cmp
xchg
dec
mov
mov
mov
aaa
sbb
test
xor
push
sti
jmp
and
jo
pop
mov
adc
aas
dec
movaps
sahf
test
push
test
out
add
(bad)
jmp
ds
lock
cld
outs
test
stos
in
rol
in
lock
xor
(bad)
stos
pushf
repz
dec
scas
pop
aas
mov
jle
mov
cmp
sti
int
mov
xchg
push
push
push
sub
mov
addr16
pop
jp
xor
or
cmp
movs
inc
test
xchg
je
les
push
loop
push
jae
fwait
imul
adc
and
call
fdiv
xor
call
stos
add
dec
lods
xchg
mov
sub
(bad)
or
pusha
sbb
(bad)
gs
outs
movs
mov
jge
pop
push
stos
jge
jne
and
repz
(bad)
jno
cmp
jmp
imul
cmp
enter
pop
add
ret
and
add
ror
xchg
mov
mov
push
loope
(bad)
leave
or
ins
sub
mov
loop
cmp
mov
popf
(bad)
das
stos
jne
repz
pop
jecxz
mov
(bad)
(bad)
pop
pop
shl
jg
fcomp
dec
stc
or
xor
scas
mov
mov
cmp
ins
jmp
mov
out
movs
outs
nop
dec
and
(bad)
in
sbb
mov
aaa
sti
nop
cmps
mov
int3
inc
inc
(bad)
cmp
push
imul
retf
push
repnz
fimul
jmp
vmovq
or
lods
mov
rcr
mov
push
call
les
test
mov
push
pusha
gs
push
add
std
mov
mov
inc
push
dec
add
add
aad
mov
out
sbb
or
xchg
sub
sbb
stos
jmp
dec
inc
lods
rep
pop
retf
mov
dec
movs
outs
pop
xchg
xor
std
out
bound
adc
adc
xlat
jbe
mov
cmp
cmps
xchg
push
inc
xor
mov
inc
cmp
push
push
pushf
mov
fmul
lock
add
cmps
aas
dec
xchg
sub
adc
test
lea
mov
por
jo
mov
push
inc
mov
jmp
add
xchg
xor
stc
test
jmp
dec
les
sub
mov
out
fild
jecxz
push
dec
inc
dec
shl
push
outs
cmp
or
add
pushf
push
mov
cld
(bad)
nop
sti
lea
mov
mov
or
push
dec
pop
and
xchg
xchg
jnp
jbe
in
adc
stc
xor
(bad)
shr
lea
fstp
pop
pop
ficomp
ret
and
int3
pushf
xchg
jg
shl
std
ds
imul
sub
jae
pop
mov
call
int
dec
sub
outs
adc
or
aas
in
jg
xor
jmp
jns
ss
idiv
xchg
retf
sbb
out
clc
pop
jmp
push
mov
(bad)
outs
mov
mov
mov
push
jo
sbb
gs
mov
or
loope
add
jg
cmps
push
xor
sub
js
pop
inc
cmp
mov
pop
retf
jno
adc
mov
out
push
scas
lds
lods
loop
jmp
jle
dec
lds
push
sbb
in
cmp
and
dec
push
jb
adc
cmp
add
jle
xlat
jg
gs
jmp
sbb
inc
or
push
xchg
xchg
xchg
lahf
add
(bad)
xlat
jecxz
pushf
rcr
iret
sub
lods
clc
push
jmp
add
or
js
js
shl
aam
jae
in
sbb
push
push
call
loopne
mov
es
push
outs
and
test
pop
push
xchg
pushf
out
pop
add
enter
sbb
add
ficomp
cld
jg
cmp
lods
aam
popf
jmp
add
mov
pop
fistp
cmps
mov
scas
jl
xchg
dec
add
(bad)
repnz
xchg
aam
ja
cld
mov
jae
lods
add
sub
repz
pop
sub
push
cdq
or
arpl
cmp
adc
or
or
ins
mov
test
jp
es
jmp
xor
and
fsubrp
enter
jne
or
push
cli
in
std
add
pusha
pop
sub
push
and
add
les
xchg
test
and
push
fadd
adc
jae
jecxz
daa
dec
out
xchg
cmp
push
dec
push
cwde
add
mov
aad
add
dec
mov
loop
ror
enter
add
ja
jne
(bad)
jge
cmp
mov
lds
stc
das
xchg
and
cmps
sub
repz
mov
xor
call
pushf
dec
mov
sub
and
ja
add
std
lahf
sbb
add
les
inc
push
rcr
dec
outs
and
test
shr
ins
lods
test
inc
lock
dec
mov
or
inc
sbb
je
stos
out
lods
adc
clc
and
push
xchg
sbb
adc
xchg
imul
xor
arpl
imul
mov
jp
mov
sbb
push
(bad)
fnstsw
leave
pusha
and
cmc
arpl
cli
mov
movs
addr16
lods
into
outs
nop
mov
(bad)
xor
shr
adc
cwde
arpl
sbb
jmp
add
pop
daa
add
pop
sub
call
dec
leave
cmp
mov
imul
cmp
xchg
or
cmp
dec
adc
mov
enter
vcvtss2si
loopne
sti
mov
or
xor
fadd
mov
lods
(bad)
mov
add
daa
or
addr16
enter
dec
ds
je
mov
test
jbe
xchg
fldenv
div
clc
aad
(bad)
in
add
inc
sar
pop
inc
cli
rcl
pop
dec
push
xor
adc
mov
xchg
xlat
add
call
sahf
mov
outs
cwde
fwait
push
mov
xor
adc
or
mov
and
sbb
lock
jp
(bad)
fsub
xor
test
and
mov
call
mov
pop
(bad)
jg
mov
sbb
sbb
xchg
scas
les
hlt
outs
mov
pop
jnp
dec
inc
fsubr
shl
loopne
jg
xchg
retf
inc
ret
fdivr
xchg
sbb
outs
add
outs
push
mov
push
sub
inc
jmp
xchg
push
lea
push
or
popf
push
push
stos
sub
pop
add
lahf
push
lods
mov
cmp
aas
pop
lea
jae
bound
and
mov
pop
retf
(bad)
loopne
aas
sti
fld
mov
dec
jle
inc
stos
jo
out
push
punpckldq
nop
push
pushf
push
test
inc
add
dec
lea
pop
es
add
loop
cld
or
das
call
jne
setb
call
and
adc
xor
in
jmp
jp
test
bound
sbb
loop
shl
push
jge
mov
aam
(bad)
fld
pop
xchg
push
xor
jmp
jae
test
mov
adc
adc
jmp
push
mov
cmp
jae
jne
shrd
dec
mov
xchg
lds
mov
jae
push
inc
xchg
enter
test
mov
mov
inc
cmp
call
ins
dec
add
mov
mov
outs
ret
movs
xchg
mov
mov
imul
hlt
inc
std
cli
test
jle
sub
(bad)
int
jo
int3
out
push
repnz
inc
lea
lds
stc
stos
in
jnp
add
cmps
cmp
dec
dec
lahf
and
cs
mov
shl
out
ja
stc
and
or
sub
pop
enter
or
ret
dec
sbb
or
xchg
dec
xchg
dec
xor
retf
rep
or
lock
jg
outs
mov
repnz
(bad)
in
mov
(bad)
jno
sub
mov
mov
mov
adc
pop
outs
cmp
stc
data16
cdq
sbb
push
pushf
stc
xchg
outs
and
aam
not
xor
mov
jbe
test
add
jb
mov
dec
xchg
mov
shl
xchg
lock
stos
stos
inc
push
retf
inc
adc
sub
mov
xchg
(bad)
(bad)
fld
xor
cwde
sbb
(bad)
mov
loop
ins
dec
arpl
mov
mov
shl
cmp
test
pop
cmps
mov
call
leave
xchg
mov
rcl
cld
lea
inc
cli
and
inc
adc
int3
and
or
cmp
adc
mov
bound
pop
adc
or
scas
dec
pop
cmp
imul
outs
cwde
test
sbb
xchg
popa
std
add
cmp
pop
xchg
aad
mov
push
adc
push
(bad)
repnz
fwait
pop
xor
popf
daa
mov
add
mov
call
adc
pop
fistp
call
xchg
ret
or
ins
mov
(bad)
out
test
mov
pop
fs
xor
adc
adc
add
ret
xor
push
lock
push
cmp
adc
mov
retf
in
call
(bad)
repz
inc
mov
mov
cwde
(bad)
cmp
pop
(bad)
pop
jl
pop
dec
pop
movs
push
xchg
sbb
pop
or
inc
dec
inc
out
(bad)
in
sbb
xchg
sub
add
loope
inc
sahf
lods
mov
dec
jnp
mov
fnsave
pop
cld
mov
mov
pop
arpl
dec
inc
jbe
in
or
add
jne
call
jo
icebp
loop
sahf
nop
outs
rol
jl
sahf
std
jl
and
dec
and
mov
addps
push
cld
sahf
loope
add
inc
in
in
push
in
mov
pmuludq
sbb
stos
mov
jecxz
sbb
jnp
test
retf
mov
ret
mov
or
daa
(bad)
imul
cmp
jp
xor
aam
add
cmp
dec
(bad)
enter
push
jno
stos
in
mov
js
daa
xchg
out
inc
fild
dec
call
jle
data16
pop
(bad)
adc
fist
hlt
fs
dec
stc
sahf
pushf
shr
xor
ja
mov
fidivr
mov
jle
in
mov
mov
adc
mov
push
shr
lods
arpl
sbb
xchg
fld
xchg
add
adc
fistp
lahf
imul
cmp
jo
inc
pop
or
cmp
mov
inc
test
sbb
push
mov
inc
clc
mov
in
aam
mov
xor
or
sbb
stos
imul
and
jp
mov
push
xchg
push
retf
adc
sub
jns
sti
add
pushf
jns
movs
inc
mov
test
gs
icebp
jne
not
cmps
cmp
pop
loope
out
and
stc
gs
pop
iret
xchg
int3
push
(bad)
jmp
ins
out
xchg
(bad)
inc
test
push
mov
cmp
stc
lods
sub
push
sbb
add
pop
jns
jmp
sbb
cmp
fistp
xor
js
pop
xchg
push
mov
dec
xor
shl
sub
std
mov
sbb
popa
mov
mov
mov
sub
mov
push
sti
mov
fadd
inc
bnd
pusha
sbb
popf
jmp
daa
mov
jo
clc
imul
(bad)
jmp
xlat
push
in
mov
ins
mov
or
sahf
sbb
rcl
iret
sub
int3
mov
inc
sbb
imul
mov
out
push
test
(bad)
hlt
ror
add
inc
ret
mov
push
adc
pop
gs
adc
push
mov
add
(bad)
sahf
imul
xchg
jg
(bad)
stc
add
pop
pop
dec
dec
pop
and
mov
push
pop
sub
and
test
(bad)
out
lds
out
(bad)
rcl
repnz
ins
and
(bad)
inc
mov
ret
sub
cdq
repnz
lahf
leave
outs
bswap
sub
movq
add
bound
ja
leave
or
out
dec
test
adc
or
mov
int
movs
cmps
push
fsub
jnp
pop
inc
and
(bad)
out
ins
(bad)
ss
mov
mov
shl
test
test
clc
jne
xor
jnp
mov
clc
mov
xor
mov
cmp
aaa
fnstsw
(bad)
sti
repnz
mov
and
xchg
pusha
shr
jmp
out
push
mov
fucomip
inc
cmp
inc
dec
mov
mov
or
push
add
pop
add
jns
ja
and
cmp
popf
mov
fld
stc
loopne
xor
fdivr
mov
hlt
loop
push
data16
cmp
adc
(bad)
into
mov
lods
jb
jnp
out
or
aaa
xor
call
mov
pcmpeqd
popf
mov
cmp
hlt
(bad)
nop
pop
mov
(bad)
fisttp
pop
cmp
or
jle
inc
retf
enter
out
jmp
jmp
or
inc
jmp
stc
pop
mov
fmul
cmp
xchg
fisubr
push
leave
stos
sbb
push
inc
repnz
pop
push
jb
out
aaa
mov
mov
push
int3
pop
out
hlt
xchg
fwait
push
jmp
pop
sbb
das
add
jge
outs
arpl
sbb
data16
xor
jmp
sbb
jno
mov
popa
arpl
cmp
push
ficomp
cmc
and
sbb
cmps
fdiv
jg
dec
aam
(bad)
adc
out
scas
out
sbb
pop
clc
imul
cmp
xchg
clc
mov
mov
jne
sti
call
sub
xchg
cli
lods
mov
aam
and
lds
test
(bad)
push
fimul
xor
push
mov
movs
push
out
xchg
aaa
jl
sub
jb
imul
add
fcomp
xor
adc
mov
add
test
out
nop
movs
test
jbe
retf
mov
push
fild
mov
or
aas
out
mov
or
pushf
add
sbb
repnz
xchg
ins
ja
jnp
xchg
push
push
cmp
jp
in
fst
(bad)
out
lds
jl
mov
xchg
repnz
stos
mov
or
(bad)
out
in
jns
adc
dec
test
test
sub
xor
cwde
es
rcr
in
pop
cmps
push
mov
xor
in
push
lahf
aad
xor
fisttp
into
jmp
in
lods
test
adc
pop
mov
aad
sar
icebp
mov
out
fistp
xchg
and
jmp
inc
call
cdq
test
xor
sbb
jo
rcl
jle
mov
dec
lock
pop
mov
inc
pop
add
jmp
jbe
retf
aam
ret
outs
mov
cmps
es
int
shr
push
mov
sbb
dec
add
xchg
mov
sub
sub
dec
mov
jg
(bad)
cmp
test
sbb
cmc
mov
scas
pop
mov
xor
sbb
inc
pop
fild
pushf
xchg
test
pop
fsub
cdq
cmp
push
dec
dec
adc
push
dec
mov
pop
add
pop
xchg
shr
inc
cs
mov
lea
xor
and
push
mov
xor
or
retf
stos
sub
xchg
mov
ja
dec
push
xchg
mov
sbb
or
aam
rcr
movs
out
(bad)
mov
sub
mov
adc
(bad)
mov
push
mov
leave
push
inc
dec
scas
sub
js
pushf
jb
mov
mov
and
into
scas
xor
sti
inc
retf
dec
(bad)
es
jl
fbld
cli
into
dec
pop
sub
shr
add
fwait
movs
pop
dec
mov
sub
sub
xor
jnp
ficom
out
dec
cwde
inc
push
mov
aad
(bad)
out
mov
lahf
jmp
test
loop
test
sub
pop
or
fadd
cwde
call
jae
inc
cmp
cmc
cdq
lea
(bad)
adc
in
mul
and
shl
sub
jnp
inc
lahf
icebp
dec
(bad)
jge
xor
movs
add
cld
int3
or
pop
popf
stos
adc
sub
add
xor
sahf
inc
or
(bad)
iret
outs
das
mov
movs
cmps
mov
cmp
adc
enter
jle
test
dec
dec
popa
inc
scas
movs
mov
lea
inc
cmps
jl
push
leave
js
pop
je
imul
fmul
nop
mov
int3
sbb
out
mov
mov
pop
dec
cs
dec
push
aaa
ret
lea
fs
jecxz
add
lods
xor
push
xchg
cmp
scas
lods
jl
in
xor
enter
leave
add
scas
daa
dec
rcl
ss
icebp
add
leave
aad
xor
jecxz
aam
lds
adc
mov
sbb
inc
test
std
rcl
leave
push
ret
push
add
adc
imul
jbe
repnz
popa
pop
inc
in
inc
aaa
adc
mov
data16
add
mov
push
add
push
mov
sub
dec
jbe
lock
test
rol
fs
imul
sbb
cmp
sub
pop
rcr
std
outs
jp
(bad)
dec
mov
retf
mov
fdiv
arpl
fstp
mov
inc
cli
and
int3
dec
enter
sahf
xchg
sahf
or
pop
mov
push
dec
sbb
les
xchg
imul
jp
movs
xor
clc
jge
lods
out
push
xor
test
dec
call
lea
cmp
ror
mov
push
mov
push
fxch
cmp
stc
inc
mov
or
xchg
pop
xchg
dec
sbb
ins
mov
jl
fdiv
inc
popf
lea
loopne
mov
jo
sub
push
arpl
mov
(bad)
push
(bad)
dec
inc
jmp
mov
add
das
mov
movs
call
clc
mov
loop
bound
repnz
add
idiv
jmp
push
les
das
or
pop
adc
jno
and
push
and
jns
div
(bad)
(bad)
mov
gs
sbb
movs
cmp
loopne
pushf
mov
fiadd
add
or
popa
xchg
repz
mov
test
sbb
push
(bad)
jb
jns
xchg
shl
icebp
lods
out
inc
mov
imul
and
lock
pop
stc
mov
les
repnz
push
add
ds
cmps
lock
mov
and
int
scas
loop
fild
outs
mov
(bad)
xor
pusha
pop
aaa
cs
nop
stc
fiadd
mov
adc
sbb
mov
jns
sbb
lock
aad
cmp
test
ins
xor
jmp
inc
jl
and
call
call
call
push
in
test
inc
mov
mov
jecxz
test
xlat
mov
jl
jl
dec
adc
or
loop
loope
test
(bad)
imul
js
sbb
std
das
(bad)
sub
add
popf
call
or
out
dec
push
es
xchg
add
xor
and
add
mov
mov
cmp
ins
or
inc
mov
cli
inc
stos
add
cwde
lds
out
mov
sbb
stos
lds
fnsave
xchg
daa
add
popf
mov
loop
repz
ret
inc
in
mov
jl
test
add
fisub
call
cmp
mov
lds
add
dec
in
jb
and
ret
pop
fdiv
push
in
jle
add
inc
sar
mov
sub
pop
sbb
fadd
cmps
(bad)
clc
sub
sbb
fidiv
movs
call
mov
es
in
jne
int
cmc
dec
add
test
sbb
jmp
hlt
dec
popf
jge
pop
hlt
jb
enter
repnz
rol
loopne
pop
out
push
inc
cdq
frstor
jb
in
dec
hlt
inc
xchg
push
mov
out
jo
pop
and
clc
popa
pop
adc
add
sbb
std
fadd
fwait
jno
(bad)
inc
jae
push
sar
clc
mov
xchg
add
test
lods
rcr
xchg
lods
adc
(bad)
into
and
jae
pop
mov
pop
imul
xor
inc
sub
int
ss
(bad)
movs
mov
and
fcmovnbe
push
mov
popa
fmul
stos
push
imul
add
push
les
fsubrp
(bad)
sbb
out
mov
lea
jbe
in
mov
mov
adc
sub
call
outs
mov
shl
xchg
pop
call
dec
xchg
ds
adc
mov
fcmovnb
sbb
xchg
pop
push
rcl
in
jns
or
xchg
mov
inc
mov
xchg
sar
xchg
push
les
iret
push
popf
mov
outs
cmp
mov
and
mov
sbb
leave
(bad)
lods
fsub
xchg
std
adc
loopne
cmp
fisttp
out
or
add
cmp
ja
loope
mov
cmp
push
stos
pop
das
or
lds
pop
xchg
push
or
jmp
jae
inc
lds
sub
jno
lahf
xor
mov
and
inc
cld
(bad)
pop
fsub
outs
xchg
dec
push
inc
mov
inc
mov
xlat
cmp
mov
pop
jne
pop
lds
cli
pop
lock
mov
shl
or
jmp
adc
push
push
lea
stc
push
or
in
xlat
sti
xchg
add
mov
fwait
jge
nop
dec
add
scas
mov
jae
mov
int3
loopne
jmp
jns
jns
cmp
ror
int3
sub
idiv
inc
push
push
es
scas
arpl
imul
ja
(bad)
sbb
bswap
add
jl
jmp
rol
inc
and
call
aaa
cmps
jo
stos
mov
sub
jne
fld
sub
repz
adc
(bad)
sub
repnz
test
xchg
icebp
jmp
mov
sbb
fcmovnbe
ins
sub
outs
mov
(bad)
sti
hlt
fnstsw
aaa
xlat
loope
mov
mov
shl
xor
mov
dec
jmp
jecxz
jnp
add
mov
mul
fdivr
jnp
adc
js
out
retf
call
popa
jmp
mov
pop
mov
test
and
and
rep
mov
stos
xchg
dec
sbb
add
not
in
adc
mov
loop
imul
jmp
sub
in
xchg
inc
push
pop
aam
or
rcl
fsubr
shl
inc
mov
inc
shl
xlat
dec
add
push
addr16
sub
outs
hlt
sbb
mov
aas
scas
outs
adc
dec
or
jle
mov
mov
mov
mov
push
and
jb
push
sub
cmp
sub
inc
or
jnp
push
stc
sbb
mov
xchg
movs
imul
xor
mov
mov
xor
xchg
sahf
mov
inc
mov
test
jb
mov
sbb
and
push
fwait
push
rcl
icebp
sub
cmp
push
into
pop
jp
int
repnz
lods
adc
mov
mov
out
scas
aam
icebp
mov
mov
mov
mov
in
clc
loop
sbb
(bad)
mov
dec
pushf
call
nop
aad
jl
shr
push
(bad)
mov
fld
pop
pop
mov
imul
add
leave
cs
imul
push
fst
mul
iret
dec
add
jg
xchg
lods
cwde
mov
mov
jecxz
lods
xor
xchg
pop
xchg
fptan
cmp
mov
push
jns
stos
aas
cmp
mov
mov
inc
imul
popa
or
and
and
in
xchg
in
out
and
popf
sbb
jmp
push
xor
mov
clc
in
sbb
sub
sbb
dec
cmp
addr16
inc
movs
jns
rol
cmp
xchg
sub
adc
jge
xor
push
add
dec
int3
int
xor
dec
nop
ins
test
xchg
ss
jb
cmps
mov
or
pop
loop
rcl
addr16
aaa
dec
inc
jecxz
jno
fimul
push
xchg
mov
jle
or
push
cmp
xlat
jecxz
cmp
jne
pop
scas
repz
loop
adc
lds
addr16
popa
pop
sti
stos
lds
test
sub
cmps
pusha
xchg
or
xor
fs
popa
and
dec
popa
ja
call
call
out
mov
or
movs
bound
js
fst
std
aaa
pop
and
and
loopne
push
xchg
jbe
sbb
cmp
fs
es
and
rol
adc
add
stos
inc
mov
pop
pop
add
jp
dec
sbb
pop
es
jb
ds
iret
push
(bad)
mov
aam
push
inc
push
pop
cmp
pop
or
adc
clc
adc
jae
fiadd
shl
test
stc
sbb
push
bound
fistp
daa
xchg
leave
pop
or
lds
sub
scas
jnp
mov
push
mov
rcl
xchg
out
inc
lods
ja
fcomp
fiadd
jecxz
rcl
sub
je
jno
mov
sti
popf
repz
out
xchg
inc
ss
mov
lea
jno
or
jge
sahf
fmul
or
rcr
bound
in
push
push
mov
loope
sbb
adc
jo
jnp
mov
daa
pushf
mov
inc
(bad)
cmps
out
jae
movs
sbb
jae
xor
sbb
popa
repnz
(bad)
and
dec
push
aad
push
mov
xchg
ret
and
pusha
jmp
sub
leave
imul
inc
ds
jg
mov
adc
(bad)
jp
sub
inc
or
mov
(bad)
(bad)
ror
push
xor
mov
ins
inc
test
call
test
(bad)
in
out
fldenv
cmp
mov
in
and
int3
cmp
jmp
mov
sbb
scas
adc
and
inc
in
daa
addr16
jg
pop
inc
mov
cmps
push
movs
popa
pusha
out
jp
xchg
sbb
into
int3
sbb
dec
(bad)
mov
jnp
stc
adc
sahf
call
cli
mov
fldenv
sbb
call
pop
into
jmp
ja
call
je
test
adc
or
push
(bad)
cmps
cli
fistp
jae
gs
outs
cmp
(bad)
stos
stc
or
loope
fadd
dec
or
sub
sub
adc
dec
mov
out
sub
daa
mov
fcmovnbe
and
aad
mov
nop
cmc
outs
or
mov
adc
mov
rcr
cwde
xor
mov
jl
(bad)
xchg
mov
mov
jle
jmp
xor
sub
les
pop
xlat
jl
popa
xor
fadd
cmp
call
xor
jg
pop
pop
push
aam
sbb
xchg
cmp
mov
mov
sbb
(bad)
cld
cmp
idiv
movs
mov
pop
inc
call
rcr
test
inc
adc
pop
push
sbb
fmul
loope
cld
mov
add
mov
adc
and
cmp
mov
stos
push
jb
sub
das
push
add
mov
(bad)
js
push
scas
or
dec
test
xor
jg
pop
popa
sub
adc
imul
aad
out
dec
pop
mov
fidiv
cmp
pop
je
sbb
les
outs
imul
sbb
mov
(bad)
cmp
fcom
loope
out
(bad)
cli
aam
stos
cmp
jne
sbb
(bad)
ins
pop
sti
cwde
adc
es
sbb
enter
push
scas
and
sbb
and
add
mov
popa
push
repnz
pop
lods
dec
xor
gs
ins
popw
push
fld
mov
mov
push
stos
cmp
ja
jnp
jmp
movs
push
cld
cmp
call
movs
in
or
arpl
sub
imul
lea
push
sub
in
out
xor
adc
out
jmp
add
sub
sub
in
xchg
mov
xchg
shl
sub
push
xchg
out
add
dec
mov
ret
and
fs
xor
add
fadd
mov
retf
in
lods
xchg
push
(bad)
sbb
xchg
out
and
jo
mov
in
xor
inc
pop
js
stos
popa
push
int3
dec
dec
sbb
cld
cmc
xchg
movs
std
sub
pop
dec
ja
xor
stos
mov
dec
sub
aad
out
fisub
rcl
shl
mov
jbe
xchg
ret
jg
imul
dec
idiv
mov
adc
test
mov
adc
scas
push
jnp
repz
xor
nop
push
stos
sbb
(bad)
popf
or
sbb
mov
jge
adc
cdq
ror
inc
bound
push
mov
lea
mov
stos
cmc
mov
retf
iret
icebp
ret
mov
pop
push
sbb
push
jge
add
sbb
pop
dec
outs
add
pop
shr
out
adc
inc
out
test
outs
loopne
mov
cmp
data16
ss
sti
lahf
outs
xchg
inc
fdiv
mov
repz
or
mov
xor
je
fwait
jmp
mov
daa
mov
mov
not
cmp
push
pusha
add
ret
mov
inc
pop
pop
call
or
cmps
fs
or
cmp
lea
cmp
adc
aaa
xor
loope
mov
sub
push
hlt
pop
into
or
dec
adc
(bad)
aad
xor
mov
scas
rcr
sbb
cld
sub
adc
loop
iret
ret
fs
divps
ret
shl
pop
jo
mov
stos
jnp
cmps
jmp
call
lock
inc
xchg
dec
ja
or
clc
pop
mov
jo
sub
cmc
out
xchg
xchg
mul
mov
lds
repz
mov
mov
mov
fbld
sub
pop
pop
outs
jecxz
fldcw
sub
(bad)
sub
in
dec
mov
pop
cmp
movs
pop
xor
out
(bad)
pushf
lock
jb
or
pop
mov
out
ret
loop
pop
stos
mov
movs
ret
mov
aaa
push
push
jle
mov
push
jae
adc
in
pop
es
shr
jns
push
fst
fimul
pop
mov
es
shr
out
jns
in
push
add
mov
fs
and
cs
int
jp
inc
ret
fldcw
or
sub
dec
imul
lahf
test
cs
pop
mov
loope
dec
xchg
lea
test
sub
xchg
dec
inc
out
dec
fistp
das
or
repnz
mov
test
movs
cmps
xchg
or
repz
xlat
push
in
aad
pop
pop
dec
std
je
inc
and
call
lods
stos
sbb
jbe
push
or
nop
xchg
mov
or
(bad)
mov
cmps
mov
js
jne
leave
mov
test
push
xchg
xor
sub
scas
mov
dec
loopne
push
and
shr
push
adc
imul
and
xchg
sub
retf
dec
push
mov
sub
push
jl
xchg
inc
add
mul
(bad)
xor
inc
push
into
jg
add
or
xchg
dec
sahf
push
push
pop
retf
jno
in
mov
mov
mov
cli
or
mov
loopne
cdq
shl
cli
(bad)
mov
sbb
jecxz
gs
loop
icebp
call
mov
stos
xlat
das
stc
or
sub
pop
xchg
jnp
adc
pop
stc
pop
stos
(bad)
imul
cmp
mov
xchg
imul
add
(bad)
sub
dec
in
repz
(bad)
clc
adc
aaa
inc
movs
test
mov
fild
in
loopne
in
leave
ds
(bad)
xchg
pop
inc
xchg
icebp
mov
das
cmps
xchg
inc
scas
(bad)
fwait
inc
scas
ficom
ret
and
(bad)
imul
xchg
xchg
call
pop
leave
and
movs
and
call
test
push
mov
outs
lea
rcl
mov
mov
dec
and
(bad)
leave
dec
mov
and
(bad)
adc
outs
xor
stc
loopne
dec
rcr
sar
cld
aas
xchg
inc
mov
dec
mov
lahf
or
dec
loop
das
out
iret
xchg
outs
push
jecxz
(bad)
or
mov
dec
ret
sub
(bad)
retf
mov
jg
loop
inc
dec
or
mov
scas
jle
cmp
xor
sub
lock
fld
jge
ds
jecxz
sbb
xchg
or
test
push
add
aad
les
loopne
pop
fild
pop
loope
mov
and
adc
cmps
inc
fimul
xchg
fs
shl
mov
mul
imul
(bad)
rcl
in
js
arpl
hlt
xor
jno
shr
mov
mov
pushf
inc
ins
push
clc
ins
jne
pop
push
adc
xor
mov
mov
sahf
xor
sub
fcom
loope
popa
outs
loope
aaa
or
xor
dec
push
cdq
fcomp
inc
and
mov
inc
add
fcmovnb
stc
push
loop
scas
aad
mov
dec
shl
dec
push
lahf
cli
xchg
or
push
sahf
rol
popa
xlat
mov
xchg
jle
jnp
test
popa
mov
fsubrp
mov
sar
adc
(bad)
sub
mov
add
push
xlat
push
mov
(bad)
fdivr
inc
mov
sub
xchg
retf
inc
add
fs
and
sbb
cmp
or
stc
jns
mov
mov
cmp
add
and
stc
sbb
xchg
(bad)
lea
call
test
enter
ins
push
lods
rol
jae
sub
jno
in
fcomp
repz
mov
fstp
cdq
jbe
mov
add
jb
pop
push
adc
jmp
ret
mov
lods
aas
je
call
retfw
cs
arpl
xor
out
fist
sbb
add
or
push
in
mov
jns
in
push
xor
mov
int
pusha
(bad)
cld
into
stc
addr16
xchg
mov
int
inc
or
push
push
pop
or
mul
mov
cmp
and
aas
jg
push
sbb
push
ret
mov
int3
sub
pop
in
mov
rol
inc
jmp
faddp
jae
cmc
or
pop
or
fs
fs
dec
xchg
add
add
mov
rcl
enter
dec
or
push
aas
add
or
xlat
sub
mov
pop
xor
ret
lea
mov
movs
call
repnz
xor
lea
sbb
js
scas
or
cmp
xor
and
jb
inc
and
push
or
pop
imul
adc
cmp
daa
ins
cli
mov
push
sbb
cmp
push
dec
push
jns
daa
movs
jmp
loopne
clc
push
repnz
int3
inc
or
pop
ins
retf
enter
into
test
daa
lea
loope
sub
cdq
aad
cmp
push
xchg
stos
icebp
cmp
aas
mov
xchg
sbb
fdivp
jns
mov
rcl
add
pop
xchg
push
adc
mov
mov
sbb
idiv
push
or
stos
shl
js
aas
shr
xor
out
push
imul
add
xchg
fstp
test
mov
dec
fwait
(bad)
out
aaa
daa
cmps
add
and
retf
lea
jmp
sbb
rol
fld
fisttp
xchg
(bad)
loope
pop
and
test
mov
mov
iret
bnd
jecxz
aam
adc
rcr
pop
aam
pusha
lock
adc
adc
pop
mov
ret
fwait
inc
(bad)
syscall
xlat
in
aad
jb
cmp
enter
add
push
ficom
rcl
int3
das
popf
pop
scas
enter
scas
add
jge
or
int
dec
push
jbe
pop
mov
in
loope
mov
data16
mov
adc
iret
(bad)
loope
dec
out
cmp
xor
pop
aam
aaa
adc
enter
adc
fist
dec
and
pop
and
sbb
lahf
add
mov
push
iret
pop
cmp
mov
xchg
call
xchg
mov
dec
pop
leave
lahf
pushf
nop
call
retf
call
push
popf
enter
push
fs
enter
mov
push
dec
mov
js
aad
push
sbb
mov
sub
inc
xor
jno
mov
cmc
aas
retf
or
(bad)
outs
aad
push
push
ja
and
cmc
addr16
xor
out
xchg
xchg
pop
pop
imul
mov
dec
ins
outs
xchg
outs
add
in
std
mov
mul
dec
lods
cmp
ja
sti
jle
pop
add
xor
xor
loopne
not
repnz
push
shl
in
push
lea
je
pusha
pop
cwde
or
arpl
shl
movs
inc
adc
mov
lods
shl
cld
fwait
xor
jl
dec
jb
jg
adc
or
cli
push
imul
in
push
push
push
sub
or
mov
mov
dec
add
jl
loopne
mov
jp
xchg
jno
and
jb
inc
pop
jns
ins
(bad)
test
sub
and
xor
imul
dec
mov
dec
ret
out
xor
cmp
and
jae
add
adc
cdq
rol
sub
adc
mov
and
movs
jp
xor
lods
xor
js
inc
std
add
dec
xchg
or
shl
push
pop
cmp
jnp
test
scas
sub
xchg
push
cmp
mov
jnp
cmp
retf
jecxz
into
sub
and
retf
addr16
aaa
icebp
jecxz
(bad)
cmp
pop
jnp
xor
out
popa
cmp
ret
mov
push
retf
fisub
sub
add
fabs
fstp
retf
test
jmp
sbb
mov
in
mov
sub
mov
jae
mov
pop
test
or
shl
xor
cmp
and
adc
cmp
dec
je
push
add
push
jmp
lods
out
sub
cmc
xor
mov
mov
call
mov
(bad)
aam
and
(bad)
cmc
or
ficom
mov
repz
rcl
pop
(bad)
xchg
mov
mov
mov
test
popa
imul
inc
(bad)
iret
push
out
cmp
pop
pop
mov
fdiv
sub
in
outs
fdivr
jge
js
mov
ins
or
sbb
sub
adc
ds
xor
(bad)
mov
hlt
push
mov
call
cs
shl
mov
je
cmp
(bad)
fimul
cdq
clc
mov
jno
and
int3
ds
push
or
add
mov
int3
add
ret
xchg
push
ja
pop
or
mov
dec
cli
adc
std
in
stos
ror
mov
loop
inc
outs
cwde
into
adc
jno
inc
scas
in
in
and
adc
add
popf
pop
adc
ss
xor
fxch
(bad)
add
dec
std
mov
inc
fcom
pop
jmp
aas
popa
pop
call
ret
pop
ins
dec
arpl
adc
mov
dec
lock
lahf
in
out
dec
test
adc
aas
ja
sub
std
test
xlat
aad
cmp
xchg
cmp
and
(bad)
mov
or
mov
cmp
jmp
lods
mov
mov
inc
fstp
xor
das
pop
jecxz
or
dec
clc
lahf
adc
stos
sbb
mov
cld
adc
mov
ret
nop
loope
(bad)
popf
iret
cmc
pop
inc
ficom
xlat
jae
aam
jmp
cdq
sub
push
mov
mov
shl
mov
adc
xchg
adc
aam
fstp
je
mov
sbb
ror
pop
or
sti
mov
stos
(bad)
ins
jge
push
js
rcr
adc
sbb
(bad)
cmp
mov
adc
popf
inc
mov
fdiv
xchg
mov
cmp
ror
(bad)
rcr
cdq
or
jno
mov
sbb
and
or
loope
add
mov
mov
and
scas
sbb
in
(bad)
sub
sub
ins
aaa
xchg
inc
pop
movs
pop
jp
lahf
(bad)
mov
bsf
push
xor
add
out
cmp
or
test
jmp
repnz
inc
inc
cdq
addr16
(bad)
es
or
mov
out
sbb
stos
sbb
cmp
mov
and
mov
leave
jns
cld
dec
adc
push
push
setge
inc
pop
js
adc
fcom
out
scas
add
shl
rol
outs
and
and
pop
lds
pop
inc
push
shl
ins
ja
shl
fstp
push
mov
xchg
(bad)
scas
push
mov
dec
mov
shl
cmp
jle
jnp
mov
out
or
std
(bad)
push
iret
cld
(bad)
and
not
xchg
xchg
cli
lds
retf
nop
xor
dec
in
cmps
or
cmps
mov
js
cs
sti
mov
(bad)
mov
int
leave
push
rcl
fstp
fwait
repz
test
jbe
add
push
aas
sub
push
dec
inc
sub
sub
sbb
repnz
mov
dec
mov
dec
mov
adc
inc
inc
retf
hlt
sbb
int
leave
lea
data16
sub
xor
adc
test
or
loop
or
int3
adc
cwde
mov
mov
mov
lock
mov
or
(bad)
adc
push
(bad)
jb
pop
lea
pop
cli
popf
cdq
out
iret
xor
popf
jg
dec
(bad)
jns
mov
aam
in
inc
sub
or
and
fs
imul
pop
fidivr
loope
scas
test
shl
adc
cmp
ss
pushw
push
ja
jle
xchg
xchg
mov
jl
(bad)
aaa
adc
fdiv
shl
arpl
stos
and
test
and
mov
loop
scas
xchg
pop
push
mov
jge
push
and
repz
pop
jge
add
rol
jns
test
xchg
cmp
lods
sub
retf
push
out
adc
(bad)
jmp
add
jno
outs
xchg
xor
stos
dec
call
outs
mov
pusha
jp
jmp
ins
push
fs
dec
xchg
mov
jg
xor
in
pop
mov
add
iret
ds
adc
add
sbb
ret
mov
pop
ds
sub
leave
shr
sar
push
push
push
aad
jmp
xor
popa
das
jmp
je
clc
lock
in
push
loopne
pop
mov
fcom
aas
sub
mov
(bad)
jo
gs
xchg
ss
into
lds
jmp
mov
arpl
inc
pusha
add
lds
xchg
dec
mov
call
inc
push
sub
daa
test
dec
jne
push
and
stos
xlat
shr
mov
jae
mov
lock
cli
push
sub
outs
cmovns
jmp
bound
shrd
addr16
jmp
fidiv
fcom
repnz
cld
sub
mov
repz
push
imul
ror
call
sbb
push
push
fild
in
or
aad
dec
push
sbb
dec
test
iret
neg
(bad)
out
xchg
leave
mov
add
or
inc
out
jae
sbb
dec
icebp
lods
mov
push
cmps
retf
(bad)
xor
lods
outs
paddd
cmps
fstp
(bad)
adc
mov
mov
cmps
dec
jb
sbb
je
and
xor
stos
xor
ror
(bad)
pop
xchg
scas
jle
ins
xchg
gs
xchg
aam
test
push
pop
xchg
xor
arpl
jl
mov
or
push
adc
push
js
sar
pop
xor
pop
pop
jne
repnz
and
pop
jne
jge
in
adc
arpl
call
lods
lods
call
mov
pop
lods
xchg
sub
stos
arpl
mov
pop
addr16
sar
fdivr
fdiv
repz
jecxz
xchg
sub
sub
xor
inc
mov
repz
adc
jnp
and
imul
in
fdiv
mov
sub
repnz
fild
mov
jo
dec
test
jle
ror
push
pop
pop
cmc
test
pop
enter
mov
jmp
add
mul
in
sbb
push
fs
jmp
jb
jo
add
inc
push
or
into
fld
(bad)
not
jmp
pop
addr16
add
cwde
nop
push
adc
loop
mov
mov
mov
enter
arpl
mov
dec
mov
and
pushf
xor
inc
and
sub
cmp
out
inc
jbe
add
arpl
js
(bad)
fldenv
sti
scas
xor
pop
fnstcw
sahf
popf
shr
or
fstp
fisubr
mov
jns
xor
or
stos
and
mov
and
jmp
mov
xchg
outs
sbb
add
push
das
mov
xor
jp
mov
or
fldcw
jge
adc
mov
push
pushf
mov
mov
xlat
xchg
xor
fstp
jmp
mov
cwde
jne
inc
rcr
out
dec
jge
mov
inc
cdq
test
sbb
mov
xlat
adc
test
add
retf
mov
outs
std
ja
pusha
or
in
imul
dec
xchg
icebp
cmps
push
retf
lods
arpl
cdq
and
and
lods
(bad)
mov
push
pop
mov
mov
xchg
jmp
xor
ins
cmp
or
xchg
jno
cmp
mov
dec
push
cdq
add
gs
mov
sbb
inc
out
outs
or
mov
outs
data16
pop
(bad)
xchg
stos
jno
adc
xor
jle
shl
xor
xor
jnp
retf
daa
inc
push
ss
cmps
outs
or
push
addr16
mov
ds
pop
or
sahf
arpl
mov
adc
cmp
mov
and
add
xor
aad
fs
mov
std
dec
bound
sbb
movs
xor
push
sahf
adc
test
adc
nop
sbb
mov
mov
xchg
stos
sub
int3
mov
ficomp
ret
ins
dec
push
push
jno
call
sub
mov
sbb
test
daa
sbb
mov
pop
mov
add
lds
push
sbb
pandn
and
rcl
dec
jb
out
arpl
in
dec
pop
jne
fsub
mov
inc
xor
mov
ins
cwde
or
dec
int
cmps
mov
jge
movs
dec
cdq
mov
adc
add
ds
sub
fistp
jmp
dec
inc
in
or
mov
cmp
sbb
add
inc
int3
gs
dec
or
inc
dec
sub
push
(bad)
ror
test
mov
pop
lea
rcl
sahf
mov
scas
stos
loopne
sub
inc
(bad)
push
xlat
out
enter
in
or
scas
jae
mov
es
push
loope
fidivr
mov
(bad)
pop
jl
pop
neg
dec
add
push
push
test
push
dec
jge
add
jmp
xlat
jl
mov
sti
(bad)
xchg
pop
shl
cmp
sbb
add
mov
sbb
inc
mov
xchg
mov
scas
jne
xor
stos
sub
push
pusha
dec
xor
or
xchg
cmps
fmul
push
push
mov
mov
xor
std
mov
mov
daa
xchg
pop
mov
retf
or
xchg
inc
mov
adc
rcl
fs
fmul
xchg
push
xchg
stc
ja
je
xor
jns
add
dec
mov
imul
xchg
sbb
cmp
sahf
fmul
aam
mov
jno
sbb
test
sti
push
leave
mov
scas
in
ror
xor
dec
imul
pop
call
inc
icebp
mov
mov
sub
rcl
dec
dec
pop
stc
adc
jmp
pop
mov
mov
sbb
aaa
xor
cld
call
(bad)
shr
out
cdq
mov
jg
out
mov
jl
add
shr
add
sub
shl
sub
push
xor
xor
jo
nop
fs
dec
fst
out
or
mov
cmps
test
retf
pop
loopne
(bad)
into
xchg
adc
jno
cmp
push
or
aaa
imul
fisttp
mov
add
pop
ficom
sbb
fistp
cmp
out
sub
nop
(bad)
fsub
push
or
pusha
lods
or
push
lods
push
and
mov
mov
mov
aaa
xor
pop
nop
cmp
sub
mov
repz
sti
(bad)
xchg
pop
arpl
dec
test
push
sbb
jb
pop
inc
pop
sbb
(bad)
sub
pop
push
adc
and
inc
cli
sbb
inc
pop
popa
sahf
push
push
mov
xchg
pop
inc
push
sub
call
add
and
rcl
lds
repz
mov
push
and
nop
retf
lahf
std
push
push
jge
add
pop
cmp
sub
pusha
sbb
shr
je
ss
test
cmp
xchg
icebp
inc
cmp
sub
mov
add
cmps
xchg
inc
pop
sub
mov
movs
fmul
fmul
push
pop
hlt
aad
or
push
jnp
je
and
mov
push
sub
out
adc
pop
int
jl
ret
aas
cmp
xor
movs
push
in
push
rcr
dec
cmps
inc
jp
movs
pop
jl
or
shl
push
popf
jg
div
shl
jne
mov
push
fs
add
push
inc
sub
iret
bound
lock
adc
leave
fstp
dec
(bad)
test
mov
push
mov
xchg
jae
and
jle
mov
jp
add
pop
ret
clc
push
mov
jle
mov
mov
add
pop
jmp
repz
xchg
xchg
in
repnz
add
push
xchg
fist
outs
jne
(bad)
xor
mov
dec
jge
sbb
xor
mov
(bad)
dec
jecxz
enter
call
pop
add
or
repnz
call
jle
hlt
ss
and
dec
shr
push
mov
adc
sub
(bad)
neg
fnstsw
(bad)
or
loop
pop
mov
push
bound
lea
scas
out
shl
cld
leave
iret
and
(bad)
xchg
test
fs
xor
mov
aaa
cli
inc
ins
inc
ror
call
jge
adc
popf
push
in
jmp
jae
mov
push
mov
js
sbb
imul
jno
aaa
shr
dec
scas
xchg
inc
pop
fadd
stos
sar
xchg
and
jecxz
pop
cdq
push
stos
dec
and
iret
ins
ret
mov
or
and
mov
mov
jne
sub
push
jmp
jecxz
pop
dec
cmp
stos
cmp
ins
and
mov
call
and
cs
aad
dec
cmp
dec
mov
or
push
cld
mov
xchg
imul
into
loop
aam
mov
outs
(bad)
dec
std
outs
xchg
push
ds
cdq
mov
and
dec
pop
adc
fistp
in
push
(bad)
jmp
addr16
and
loope
mov
mov
jno
add
mov
jns
scas
push
sbb
popf
rol
popf
xchg
pop
shl
repnz
sbb
pop
pusha
outs
stos
adc
jmp
addr16
pop
jl
je
cld
int
push
dec
into
pusha
push
cmp
outs
inc
mov
movs
mov
mov
push
iret
push
fimul
aad
mov
sub
xchg
cmp
dec
call
xor
cs
daa
es
movs
mul
call
mov
xor
xchg
dec
pop
inc
add
ins
jmp
sahf
punpckhdq
push
mov
jne
sub
bound
retf
add
cmp
sbb
add
ret
fwait
mov
mov
imul
int
stos
daa
pusha
(bad)
add
pop
imul
clc
fwait
neg
jmp
fcomp
push
cld
mov
push
cmp
fs
add
addr16
or
or
das
repz
(bad)
lods
rol
inc
sub
test
lods
mov
shl
and
pop
div
xor
or
call
cli
int3
sbb
sbb
jle
xor
cmp
mov
lods
int
ins
xor
add
add
fdiv
mov
cdq
push
outs
jbe
mov
(bad)
outs
sub
cld
call
mov
call
shl
in
lea
inc
enter
push
dec
loop
pop
inc
out
xor
jb
cmp
stos
push
imul
and
retf
in
cs
pop
mov
data16
sbb
add
mov
pop
repz
add
not
mov
cli
push
popf
rcr
jnp
xchg
test
pop
leave
fwait
add
or
sub
mov
call
push
test
call
or
cmp
ret
cmp
idiv
cmc
cwde
jmp
adc
cmp
(bad)
hlt
popa
hlt
sti
hlt
inc
(bad)
push
out
add
xchg
and
pop
ja
inc
sub
call
imul
jo
jmp
xor
es
add
push
(bad)
adc
mov
popf
push
pop
lods
pop
xchg
(bad)
mov
pop
xor
cmc
lods
psllw
loope
jmp
xchg
sub
cmp
push
pop
inc
(bad)
adc
arpl
icebp
xchg
jmp
out
test
cmp
jmp
and
out
jg
(bad)
(bad)
(bad)
pop
mov
xor
pushw
sub
cmc
shl
into
push
cmp
mov
in
adc
in
push
icebp
lock
xor
(bad)
xor
cmps
xchg
jp
add
hlt
mov
inc
test
jl
in
jecxz
mov
(bad)
imul
mov
sbb
cmp
xor
hlt
dec
int
inc
sub
jecxz
cmp
sub
fnstcw
mov
sti
sbb
movs
stc
inc
or
cli
adc
xor
fnstenv
jmp
loopne
push
inc
pop
(bad)
sbb
shl
xor
jp
std
and
fsubp
pop
inc
or
pop
xlat
xor
test
push
repnz
sbb
rol
xlat
push
mov
inc
ja
adc
mov
pushf
pop
xor
out
xor
sbb
inc
aaa
pushf
jmp
arpl
dec
stos
xor
cmps
push
cmp
js
ret
mov
dec
lods
mov
xchg
and
call
sbb
out
inc
xor
cmp
gs
addr16
lock
mov
jp
pop
scas
jmp
out
(bad)
cmp
add
mov
adc
xchg
and
dec
push
je
sbb
or
(bad)
int3
je
cmp
adc
sub
jg
push
xchg
adc
dec
shr
dec
jne
dec
jl
add
sahf
mov
out
and
xor
into
xchg
dec
pop
inc
mov
mov
pop
cmp
add
je
cmp
cmp
xor
stos
fadd
mov
enter
imul
pop
jle
jns
int
push
xchg
call
mov
jmp
sahf
xor
ficomp
adc
js
std
jecxz
add
pusha
cmps
loopne
sub
adc
jp
lock
aam
xchg
mov
pop
int
xor
or
loopne
xchg
push
daa
(bad)
lods
pop
cmp
push
pop
lahf
cmp
jl
ins
retf
mov
xchg
fwait
das
push
xchg
je
mov
ja
scas
and
int
pop
loopne
xchg
mov
fild
ror
inc
mov
push
mul
inc
cmp
xchg
mul
cmp
cwde
jmp
xchg
ss
mov
fisub
and
movs
test
jle
dec
int3
out
(bad)
dec
xchg
outs
pop
pop
inc
test
push
mov
jnp
sub
xor
mov
aaa
(bad)
stos
(bad)
cld
and
mov
and
dec
jbe
mov
int
sbb
fidivr
pop
dec
ins
cmc
out
jnp
dec
add
in
js
popa
rol
pop
les
mov
ret
sti
cli
xor
les
push
mov
adc
mov
call
jbe
retf
pop
mov
daa
dec
outs
scas
jmp
or
sub
push
push
jmp
sti
cmp
fwait
repnz
cmp
sub
mov
mov
push
pushf
(bad)
ja
jp
cdq
xor
and
push
push
daa
scas
frstor
xchg
adc
mov
inc
pop
fadd
test
lahf
xor
and
lods
cmp
int
jmp
push
mov
shl
scas
xchg
xor
ds
rcr
jbe
or
cdq
sub
adc
ror
pop
cmp
int3
jne
jg
push
dec
hlt
sub
sub
pop
pop
pop
test
fcmovnu
dec
xor
add
into
stos
xor
icebp
cmc
movs
push
imul
jns
mov
push
or
mov
inc
in
mov
mov
shl
stc
inc
test
popa
and
dec
mov
xor
xor
pop
neg
ss
ret
sub
(bad)
push
(bad)
cmp
mov
mov
fcom
mov
test
inc
stos
and
jmp
iret
test
jb
cmp
dec
out
idiv
sahf
(bad)
out
(bad)
movs
jl
jbe
(bad)
leave
ss
xchg
je
loopne
pop
scas
out
jle
repz
fs
outs
mov
enter
nop
cli
dec
jnp
popf
push
(bad)
sub
xor
pop
inc
nop
test
mov
loop
imul
adc
jg
cmp
movs
adc
es
rcr
mov
fisubr
mov
ret
adc
enter
movzx
add
pop
scas
cwde
int
in
pop
or
or
popf
ss
daa
or
js
jbe
adc
in
jae
gs
mov
add
dec
xor
and
push
data16
adc
mov
mov
mov
(bad)
call
scas
mov
and
test
std
push
xchg
aaa
sar
sti
fisttp
jp
cmp
jmp
sub
fistp
sahf
(bad)
push
or
pop
mov
dec
cmps
sub
adc
aad
mov
pminsw
out
mov
mov
mov
out
add
jl
int
mov
and
push
fnstenv
xchg
mov
fnsave
imul
mov
int3
and
sbb
add
ds
xchg
xor
and
lock
mov
xor
mov
dec
repz
loopne
jge
(bad)
mov
cmps
or
in
fadd
adc
jmp
push
and
xor
call
add
icebp
and
dec
movs
xchg
and
adc
or
pusha
or
es
push
inc
pop
(bad)
sbb
adc
imul
mov
repnz
jbe
call
push
jo
icebp
or
dec
test
(bad)
loopne
adc
jp
inc
add
push
push
fucomp
add
outs
pop
push
add
sbb
dec
fldcw
addr16
mov
sbb
xbegin
fwait
adc
mov
and
lea
loop
xchg
xor
cs
dec
inc
retf
addr16
sahf
test
aaa
xor
std
not
push
fistp
add
in
jo
dec
popf
jns
les
push
sti
jge
jge
aad
push
daa
pop
push
mov
dec
cmp
loop
sub
and
ss
sub
xchg
add
add
(bad)
fmul
xchg
jecxz
mov
and
out
or
and
jmp
push
mov
rcl
rcr
mov
push
test
pop
and
stos
or
inc
loope
mov
jecxz
xlat
xchg
out
fld
imul
movs
and
test
add
mov
neg
leave
pop
fwait
or
inc
ror
or
jno
into
outs
rol
adc
shl
mov
imul
sub
pusha
stos
cs
clc
nop
enter
addr16
sbb
push
adc
mov
iret
scas
jno
test
fwait
cmps
pop
xor
lock
cmp
xor
push
int
data16
fmul
xchg
mov
or
ss
jbe
mov
and
jg
xor
push
sub
sub
outs
(bad)
aad
retf
jl
lods
sbb
loope
add
cs
jg
jecxz
push
retf
stos
push
repz
mov
and
cmp
push
int
cld
out
in
adc
xchg
outs
inc
rol
xor
cmp
mov
loopne
sahf
jg
xchg
fninit
push
cmp
xor
xchg
push
jp
(bad)
push
lds
lahf
imul
mov
stos
je
idiv
inc
jne
or
lods
nop
jns
xchg
mov
cmps
imul
movs
mov
stos
sahf
lds
neg
dec
mov
xor
gs
es
inc
out
add
sub
cwde
enter
call
in
jl
dec
repnz
loope
ins
xchg
aad
pop
pop
daa
sub
lea
(bad)
adc
hlt
add
mov
pop
(bad)
call
cli
lock
inc
in
in
fild
sti
lahf
mov
mov
or
test
dec
push
sbb
out
sbb
inc
or
lods
mov
sti
cdq
and
js
mov
cld
dec
sbb
inc
test
adc
push
hlt
retf
push
adc
mov
sub
or
int3
xor
adc
call
xchg
lds
jo
aam
mov
or
jge
cwde
xchg
xlat
(bad)
rcr
adc
mov
add
xor
jbe
(bad)
stc
jecxz
dec
ins
push
cmp
sbb
and
jmp
mov
outs
not
sbb
cmc
fistp
sbb
xchg
sbb
(bad)
pop
js
sbb
sbb
cmc
xchg
push
push
add
sub
xor
cmp
enter
cdq
pop
imul
aas
test
lods
call
pop
in
jae
das
hlt
sbb
jns
out
xor
outs
sub
lods
push
inc
int
or
pop
ds
cli
cmp
mov
popf
sub
pusha
mul
rcl
xor
retf
daa
jbe
lahf
inc
out
fsubr
adc
popf
dec
faddp
cli
shr
mov
scas
push
inc
dec
adc
xor
cmp
imul
out
xchg
loope
int3
fcom
ins
jp
add
nop
pop
lahf
pop
fstp
xor
cmp
dec
cmps
mov
adc
add
mov
push
repz
and
inc
shr
and
jmp
push
std
add
scas
jl
cmp
cmps
and
shr
xlat
scas
jno
test
add
data16
pop
mov
jbe
popa
retf
pop
adc
sbb
mov
cmp
xor
dec
stc
jecxz
mov
push
dec
ss
push
(bad)
jmp
ret
imul
ror
into
mov
or
fsubr
cmp
pushf
sbb
call
xchg
inc
xor
dec
je
inc
xor
data16
popf
mov
addr16
xor
rcl
cs
mov
cmc
lock
aas
jne
mov
inc
loope
lods
xchg
mov
mov
in
retf
repnz
jo
imul
ss
add
idiv
sbb
mov
icebp
fmul
fsubr
dec
push
daa
ins
xchg
data16
std
dec
mov
or
dec
or
inc
fsincos
or
pop
mov
pop
pop
and
daa
ret
aam
stc
fld
push
repz
shl
and
mov
sub
test
xchg
lock
fistp
sub
cmp
test
repz
rcr
(bad)
call
retf
repz
inc
leave
mov
inc
adc
add
cmc
sub
mov
scas
ins
les
or
aaa
and
adc
outs
push
inc
push
xchg
jbe
jge
cmp
sti
stos
pop
push
push
pop
xchg
ss
and
aad
inc
cwde
mov
shl
je
stc
pop
inc
and
out
arpl
cli
pop
test
loope
fisttp
gs
mov
inc
inc
mov
xor
push
dec
pop
sub
inc
aad
js
push
rep
sbb
jns
inc
int
pop
xchg
xor
jae
in
dec
test
(bad)
fs
pop
xchg
sti
fbld
xchg
inc
add
rcr
cmps
fcmovnu
adc
cmp
daa
cmp
inc
mov
xchg
sub
sbb
xchg
loop
mov
xchg
mov
xadd
dec
xchg
jp
shl
sub
dec
jno
cmp
push
add
xchg
and
lods
(bad)
jmp
xchg
sub
jge
gs
jmp
xchg
xor
cmp
mov
mov
jae
push
and
cmp
add
cmc
popa
sub
ja
xchg
fistp
jae
in
xor
lods
adc
and
mov
daa
mov
or
pusha
inc
mov
jl
xor
push
mov
mov
ror
xor
outs
xor
fnsave
rcl
gs
xchg
in
test
cmp
mov
loop
sbb
loop
fs
sbb
fiadd
movd
inc
pinsrw
test
push
add
xor
xor
lods
js
les
push
add
fcmovb
push
test
mov
cmp
(bad)
je
xchg
jbe
js
push
popa
fs
in
inc
pop
inc
cmps
mov
nop
mov
aas
push
idiv
sbb
inc
push
dec
xchg
repnz
cld
pop
cmp
adc
mov
rcr
call
ins
push
xor
stos
out
jno
cmps
cmp
push
xchg
pop
jg
sahf
push
lods
dec
pop
push
sub
or
ins
add
dec
aam
dec
add
retf
xchg
cmc
jns
xchg
jp
loope
mul
cmp
add
in
rcl
cwde
cmps
dec
arpl
sub
jne
sbb
in
or
int3
mov
jmp
ss
out
or
sub
jne
shl
mov
cmp
enter
jl
loop
push
call
dec
lock
jg
mul
cmps
inc
push
shl
xor
push
mov
outs
dec
xchg
inc
inc
into
adc
jmp
jnp
xchg
inc
test
loopne
es
xchg
jbe
xlat
repz
push
les
push
in
jge
test
jecxz
sub
loope
dec
xor
fbld
or
adc
or
sti
mov
ja
and
iret
sub
shr
pop
cld
lds
cmps
shr
push
or
cmps
rcr
gs
add
ror
out
ret
cli
aas
mov
hlt
hlt
test
sti
sub
(bad)
sbb
in
int
scas
clc
add
sbb
loop
dec
xchg
cmc
aaa
mov
inc
scas
clc
nop
inc
and
test
jp
les
clc
fwait
xchg
jmp
inc
loop
les
jae
outs
xchg
icebp
sub
push
and
retf
popf
adc
mov
lods
mul
add
je
sar
cmp
daa
fadd
xor
call
daa
inc
es
into
xchg
call
cld
popf
jnp
test
jae
hlt
aaa
add
cmp
call
push
pushf
xlat
enter
or
stos
cdq
cmp
xor
in
aad
mov
fist
scas
add
jle
mov
ins
imul
and
aaa
int3
sbb
cmp
mov
js
and
fst
test
pop
mov
fadd
test
cmps
jp
dec
into
push
repnz
inc
push
in
movs
sub
or
and
int
xchg
ds
lahf
cmp
stc
fdivr
test
push
div
cmps
and
mov
out
sbb
lock
push
repz
rol
arpl
xor
mov
pop
inc
(bad)
push
jnp
cwde
ja
sti
adc
loop
repz
xchg
mov
fwait
pop
push
out
cdq
push
lds
or
or
or
daa
fwait
jno
push
sbb
iret
xlat
jno
xor
retf
sbb
ds
jne
popf
pop
sub
xlat
mov
add
mov
or
mov
push
add
jnp
fsub
movs
and
jbe
cdq
jae
mov
mov
call
popa
das
cli
in
mov
aad
jmp
inc
js
xor
or
xor
sub
dec
xor
jecxz
jmp
push
push
or
or
and
push
mov
loopne
imul
mov
aam
push
dec
les
push
mov
sar
adc
jg
mov
repnz
ja
shr
dec
inc
adc
pop
or
sbb
pushf
aad
mov
in
lods
push
jne
hlt
pop
ins
sub
repz
leave
mov
or
(bad)
daa
fist
sbb
dec
iret
test
jo
lahf
shl
cmp
jl
jle
push
jo
loopne
retf
mov
push
or
inc
movs
(bad)
and
fidivr
rcr
adc
repz
mov
scas
addr16
js
ret
cmp
pop
movs
shl
dec
add
or
mov
dec
movs
and
sub
xor
cmp
mov
mov
sub
ret
mov
xlat
adc
dec
aas
inc
mov
pop
xchg
int3
xchg
in
mov
pushf
xchg
adc
mov
adc
gs
jmp
sar
in
leave
or
fbstp
and
enter
cmp
cdq
add
sti
in
adc
inc
cmp
mov
loop
xchg
ins
pop
sti
xor
leave
int3
icebp
mov
or
and
lods
mov
xchg
jmp
inc
and
mov
pushf
pop
jb
ror
ds
cmc
jb
lahf
dec
pop
mov
xor
je
test
inc
loope
aas
mov
dec
push
dec
in
bound
sbb
inc
stc
push
mov
(bad)
(bad)
dec
scas
(bad)
jp
or
and
mov
pusha
hlt
jbe
mov
mov
push
mov
dec
out
pop
(bad)
test
loopne
scas
mov
test
outs
sahf
mov
es
movs
mov
xchg
ins
retf
or
pop
(bad)
mov
lahf
pop
or
fs
cli
or
and
(bad)
fcom
test
jle
ret
inc
adc
movs
mov
or
das
movs
sbb
xchg
les
(bad)
xor
cs
int3
mov
add
mov
or
push
js
aaa
push
pop
mov
ficomp
in
jge
mov
mov
or
ss
adc
mov
dec
dec
pop
mov
xor
and
dec
dec
mov
inc
and
push
ja
xchg
add
aaa
in
loope
or
mov
pop
adc
jne
out
sub
and
inc
mov
jmp
mov
loopne
xor
jmp
(bad)
sub
inc
fs
icebp
call
push
inc
and
mov
popf
loopne
aam
aad
or
sahf
jnp
mov
mov
mov
jnp
push
sub
iret
pushf
or
rcl
cs
(bad)
cdq
sti
push
push
dec
fs
mov
cmc
pop
imul
lock
xor
call
(bad)
push
js
dec
loope
push
push
xchg
sbb
or
xchg
movs
(bad)
push
xchg
popf
jnp
push
pop
mov
cmp
add
stc
xlat
movs
call
add
mov
cmp
mov
push
scas
test
mov
sti
movs
add
ret
sbb
pop
arpl
xchg
push
inc
into
in
push
(bad)
sub
adc
addr16
jg
cmp
mov
(bad)
pop
fiadd
lahf
in
adc
pop
dec
pop
ret
stos
push
or
rol
(bad)
sbb
mov
sbb
xchg
hlt
mov
push
pop
mov
loopne
dec
xchg
dec
jge
xchg
mov
jnp
scas
in
push
scas
movs
outs
test
push
call
jecxz
push
sub
out
mov
mov
mov
pop
jl
out
push
lock
imul
add
adc
in
add
pushf
(bad)
in
fisub
sub
add
fsub
jge
out
xor
stos
inc
and
pop
mov
in
in
push
and
neg
loope
cmp
or
fdiv
leave
mov
cmc
mov
pop
test
rcl
adc
sub
sbb
popf
xor
int
adc
js
and
xor
loopne
es
in
and
cmps
lea
out
or
sub
dec
fwait
inc
mov
out
daa
jnp
add
xor
add
adc
xor
iret
std
loope
push
jne
ja
and
mov
xchg
mov
(bad)
movs
mov
and
mov
and
nop
imul
in
sbb
test
fadd
inc
sub
pop
xor
call
enter
mov
popa
imul
mov
aaa
aas
out
pusha
xchg
scas
(bad)
frstor
xchg
cmc
out
pusha
xchg
arpl
add
mov
int3
(bad)
sbb
adc
push
mov
ror
in
inc
fcom
jmp
pop
sub
aaa
pop
rol
test
xchg
sub
fwait
xor
xchg
add
cdq
loop
push
shl
imul
sub
fild
sub
lds
movs
js
pop
push
fs
xchg
js
dec
iret
dec
int
and
(bad)
pop
inc
xchg
sbb
cmps
lock
out
add
add
gs
in
movs
pop
mov
or
call
nop
add
mov
mov
enter
sti
jb
arpl
mov
scas
stos
and
ss
int3
adc
or
pusha
in
out
nop
dec
aaa
imul
adc
adc
shl
std
sub
lea
pop
jb
retf
cdq
fld
pop
test
std
fmulp
aaa
inc
mov
mov
adc
lods
push
ret
push
lfs
jnp
shr
out
jle
jl
test
mov
(bad)
(bad)
mov
add
mov
cmp
ins
dec
inc
movs
jmp
xor
lahf
sbb
outs
je
sub
repnz
sbb
imul
and
cmp
ret
sub
sti
cmp
push
jb
sahf
retf
or
pop
push
bound
loop
lods
inc
adc
jmp
xor
fs
mov
and
mov
jb
mov
xchg
inc
dec
push
fs
outs
loope
leave
push
and
fldcw
add
ret
lods
mov
test
call
call
in
push
push
ins
pop
dec
scas
mov
out
mov
iret
cmp
and
inc
adc
shl
mov
int
push
mov
aas
icebp
retf
sti
sahf
cmps
aam
cmc
ja
mov
int3
pusha
fisttp
cmp
sar
ins
sahf
cmp
mov
dec
std
cmp
dec
cmps
xchg
add
mov
push
les
imul
xor
lods
jns
pop
ja
ss
cmpxchg
fcmovbe
mov
(bad)
frstor
test
ffreep
fsubr
dec
inc
cdq
cwde
cmp
retf
and
loope
mov
out
cmovbe
jle
fstp
xchg
dec
inc
pop
pop
xlat
sbb
rcl
mov
cdq
xchg
test
sbb
enter
xor
xchg
mov
in
jmp
outs
jne
jge
inc
mov
stos
dec
pop
push
mov
xor
int
iret
es
push
lea
add
or
mov
cmp
retf
pop
sahf
outs
xor
mov
sbb
mov
mov
jb
pop
cmp
add
adc
test
loopne
inc
int3
adc
mov
ror
and
dec
sahf
iret
cmp
sahf
lods
dec
or
inc
mov
fs
lock
inc
leave
push
out
fstp
mov
cli
cld
out
test
test
cmp
retf
(bad)
jmp
sub
push
jecxz
pop
jge
xor
repnz
mov
mov
mov
mov
js
fdivr
dec
push
lods
pop
cmp
push
(bad)
sbb
movs
(bad)
jo
mov
sar
mov
or
jo
mov
js
stc
ret
loope
push
gs
sub
add
dec
sbb
cmp
or
test
jmp
popa
scas
jnp
sub
loope
fidivr
ins
push
xchg
mov
in
pusha
push
cmps
faddp
or
sbb
sbb
es
sub
sbb
inc
pop
inc
popa
(bad)
call
sbb
repnz
mov
(bad)
dec
xor
loopne
addr16
push
sub
inc
add
adc
dec
imul
sbb
and
sub
fimul
xor
and
inc
and
lahf
test
push
push
lea
xor
inc
aas
jmp
(bad)
sbb
add
rcl
cmps
jb
and
jbe
sbb
and
push
idiv
out
out
pushf
in
mov
test
push
shl
jmp
push
jb
into
(bad)
pop
sub
jp
sbb
add
mov
or
aam
xchg
push
cdq
and
ficomp
inc
or
adc
iret
pop
pop
test
jno
or
jno
wrmsr
scas
add
push
cmc
imul
sbb
rol
lea
loopne
mov
test
cmp
sbb
pop
mov
mov
jmp
hlt
dec
cmp
scas
out
rcr
mov
out
es
hlt
ja
idiv
mov
out
mov
and
add
mov
xchg
test
jb
stos
mov
inc
mov
fmul
adc
or
fsubr
xor
xchg
out
adc
int
lds
clc
mov
rcr
xchg
sub
adc
mov
sbb
dec
(bad)
aas
popf
cmp
or
mov
xchg
je
std
fwait
push
adc
mul
repz
xor
push
retf
data16
mov
(bad)
enter
pop
out
dec
loop
cmp
out
aaa
or
pushf
popf
ins
jmp
or
aas
inc
in
cdq
add
and
xchg
sub
inc
cmc
daa
js
popf
popa
inc
adc
jmp
fs
mov
cmps
fs
in
lods
adc
add
mov
dec
and
call
jo
mov
add
call
jp
add
add
xlat
xchg
mov
jb
stos
sbb
mov
sbb
repnz
pop
xor
inc
and
lods
mov
fwait
outs
dec
stos
hlt
and
aas
jp
mov
imul
sbb
cmp
jno
push
call
or
and
add
pop
xchg
mov
(bad)
inc
cld
jmp
push
ficomp
stos
jo
jns
inc
or
cmp
mov
loop
sub
or
test
aad
mov
int3
or
dec
cld
test
xor
push
adc
jmp
dec
out
adc
add
in
sbb
outs
bound
leave
adc
ffree
pop
or
add
dec
popa
(bad)
and
pop
hlt
out
shl
push
xchg
retf
int3
lahf
xchg
or
push
(bad)
xchg
mov
adc
inc
inc
jl
inc
repz
out
add
xor
jne
jmp
inc
cld
outs
xor
mov
pushf
cmp
push
jmp
repz
pop
push
xlat
sbb
out
popa
push
test
loopne
fisubr
les
jg
aas
adc
inc
inc
pop
xor
push
sub
imul
movs
push
or
stos
xchg
ins
pushf
pop
inc
imul
test
addr16
jae
inc
or
into
call
mov
or
or
(bad)
jmp
xchg
pop
push
in
out
jmp
jnp
nop
out
mov
stc
pushf
mov
and
ret
inc
push
iret
test
dec
aaa
sbb
push
pop
dec
bts
mov
mul
xor
iret
pop
push
mov
enter
mov
outs
loope
push
jmp
(bad)
aas
sub
or
pop
cmp
mov
inc
imul
out
icebp
mov
jmp
ins
jne
je
js
dec
add
mov
or
mov
dec
sub
dec
(bad)
jae
fstp
mov
lea
pop
cmp
dec
pop
call
or
xlat
dec
adc
push
call
inc
mov
sbb
fs
loop
pop
cmp
ins
rcr
enter
(bad)
imul
pushf
push
push
push
mov
sbb
dec
shl
ins
sahf
test
and
xchg
xchg
scas
mov
or
dec
sbb
lds
pop
pop
(bad)
lock
ja
retf
adc
jae
iret
jg
dec
rcr
cs
push
movs
sbb
mov
test
cmps
mov
jl
mov
shl
ss
add
mov
cmp
jg
mov
jle
jne
js
jp
retf
cmps
in
mov
mov
ret
idiv
and
icebp
xchg
or
hlt
push
mov
and
mov
call
pop
in
repz
out
jmp
sahf
jmp
(bad)
jmp
push
js
sub
sub
xor
mov
mov
mov
imul
out
inc
into
and
xlat
cmc
add
cmp
add
pop
loope
div
push
call
test
outs
xor
jmp
aad
inc
call
enter
pop
and
add
(bad)
push
ds
mov
cmp
lahf
xchg
retf
or
stos
test
push
xchg
leave
es
outs
sub
cmp
xor
sahf
maxps
lds
push
out
add
cmc
mov
jb
mov
mov
push
aas
ins
mov
push
rcl
sbb
push
or
in
out
mov
and
stc
jae
cmp
and
xchg
sti
popa
sahf
push
rcr
cmp
mov
daa
dec
retf
jbe
pop
shl
clc
sub
sar
or
mov
fadd
xor
ds
sbb
xlat
adc
mov
mov
cmc
cmp
test
mov
std
adc
scas
and
stos
mov
mov
sub
sub
mov
ins
test
adc
stos
adc
in
add
inc
sbb
(bad)
jp
loopne
cwde
cmc
(bad)
test
ss
ins
add
ja
(bad)
(bad)
xor
shl
rol
cmp
sub
pop
mov
rcl
aas
ror
imul
out
sbb
dec
mov
mov
cmps
add
push
in
or
mov
retf
push
adc
mov
ja
pop
repz
and
loop
test
mov
aaa
das
lahf
(bad)
(bad)
clc
data16
sub
bound
int3
mov
push
movs
aam
or
pop
sbb
mov
outs
mov
xchg
pop
pop
adc
mov
mov
adc
bound
repz
cmps
imul
es
mov
mov
fist
outs
dec
iret
mov
push
data16
push
mov
inc
lods
ror
pop
cld
pop
jmp
sbb
and
lds
daa
pop
outs
add
addr16
mov
mov
popa
mov
mov
add
lahf
xchg
push
jmp
fwait
mov
in
sahf
or
dec
xor
jmp
xchg
pop
pop
shr
cmps
adc
fadd
test
cmp
add
scas
push
jae
sbb
aad
jecxz
sub
xchg
inc
es
inc
xlat
imul
dec
mov
jp
into
jne
add
pop
jle
push
adc
pop
xchg
xchg
xor
rcl
fldenv
lods
and
lods
sti
jmp
push
movs
lods
js
dec
out
sub
ret
push
call
xchg
imul
int
int
push
xlat
push
lock
xchg
dec
sbb
xchg
inc
mov
xor
repz
jo
fs
or
stc
or
jle
push
cmps
scas
mov
push
imul
jge
inc
sbb
xchg
popa
sub
pop
fadd
mov
inc
repnz
pop
mov
jns
sub
jp
sub
mov
mov
push
fldenv
sbb
mov
loope
lahf
cwde
mov
sbb
shl
ds
xchg
mov
nop
adc
call
push
cld
(bad)
std
adc
std
and
pusha
hlt
in
jecxz
in
xchg
add
adc
test
xchg
dec
ficomp
or
out
ja
pop
clc
cmp
push
fwait
shr
cmc
mov
inc
push
stc
popf
std
iret
fnstenv
enter
popf
ret
cmp
jg
imul
call
(bad)
popf
xor
inc
imul
cli
dec
(bad)
sbb
push
jmp
pop
or
(bad)
test
mov
nop
movs
imul
imul
je
or
jle
pop
arpl
or
mov
jl
inc
pop
mov
mov
enter
sbb
jmp
mov
fnstenv
ds
inc
ins
iret
addr16
mov
sub
scas
rcr
add
jno
test
out
stos
pop
in
mov
xchg
mov
imul
ja
xchg
push
out
push
cld
in
imul
xor
or
leave
or
mov
adc
push
push
cmp
clc
jns
das
mov
add
int
adc
push
jmp
xchg
pop
mov
shr
add
add
mov
pop
and
stos
cmp
inc
test
xchg
push
push
xchg
or
aaa
pop
cmp
mov
out
fld
dec
cmp
cmp
les
jecxz
div
or
jmp
aas
pop
lods
adc
xchg
adc
mov
mov
jbe
adc
call
rcl
je
(bad)
loopne
dec
fstp
repz
mov
cmp
pop
mov
lahf
mov
push
(bad)
push
mov
adc
out
movs
ss
mov
mov
jmp
out
add
arpl
fdiv
add
jmp
imul
cli
dec
mov
inc
mov
add
mov
jmp
dec
xchg
xor
cmp
jmp
pop
fbstp
lock
aaa
int3
mov
xlat
aam
and
std
test
imul
arpl
nop
push
inc
adc
js
add
mov
xchg
inc
fucompp
pusha
and
das
int3
push
shl
lods
mov
and
stos
jecxz
mov
arpl
xlat
add
xlat
add
jo
(bad)
push
ss
pop
std
dec
cmp
int3
ds
scas
cmp
mov
leave
(bad)
sbb
test
jmp
les
ss
in
sbb
dec
js
sbb
xlat
bound
push
aaa
xchg
loopne
bound
(bad)
fstp
ins
(bad)
shr
or
movs
in
std
and
loope
ret
sub
or
scas
out
xchg
rcr
lock
mov
sub
mov
and
pop
sti
push
(bad)
fld
inc
scas
or
jl
pushf
ror
jbe
inc
xor
mov
aam
mov
es
test
jg
push
jnp
cmp
and
pusha
les
or
aas
jbe
push
out
push
arpl
stos
mov
aad
cmp
inc
push
pop
(bad)
in
sub
push
add
and
inc
shr
adc
ins
fcomp
mov
jbe
nop
cmps
mov
int3
pop
mov
cmps
sbb
neg
jl
push
pop
(bad)
sbb
sub
ins
add
xchg
repnz
mov
fisttp
push
enter
or
cmp
cmp
inc
repnz
sub
dec
aam
aad
jmp
int3
jp
jge
inc
icebp
ja
mov
loop
daa
mov
les
adc
dec
mov
in
enter
cmps
movs
xchg
sbb
jae
jbe
in
ret
fistp
loope
test
pop
retf
xor
push
mov
es
out
push
imul
jne
adc
adc
dec
inc
inc
xor
pusha
sbb
mov
mov
add
je
rol
sahf
mov
adc
cmp
xchg
push
mov
ret
jo
lock
xchg
xchg
mov
ror
lds
rol
mov
mov
adc
xor
push
aad
in
jmp
mov
dec
scas
add
pshufw
data16
mov
dec
mov
iret
jno
cmps
inc
sbb
pop
pop
dec
or
xor
mov
pusha
fmul
pop
cmp
js
cli
sti
xbegin
adc
ret
xor
shl
(bad)
les
cmp
int
(bad)
addr16
and
jge
mov
addr16
add
(bad)
xchg
test
clc
push
dec
dec
cmp
or
vphaddbq
jecxz
sti
sub
lods
jo
cmp
fcom
lahf
push
mov
lock
push
jmp
xchg
or
repz
add
shl
in
test
cli
xchg
adc
jl
in
call
inc
repnz
into
ret
add
and
cmp
es
jl
fs
add
push
aas
addr16
je
mov
movs
and
cmps
rcl
cwde
dec
jne
push
sbb
and
ret
jnp
scas
or
dec
mov
into
mov
lahf
mov
and
push
mov
add
fwait
sbb
cmp
nop
loope
lock
or
dec
sbb
(bad)
mov
xor
push
xlat
push
cdq
mov
rcl
push
imul
loop
dec
cmp
push
cs
(bad)
daa
shr
cmp
sbb
out
aam
dec
fs
push
(bad)
and
sar
stc
ret
or
inc
add
or
hlt
test
shl
xchg
jo
xor
and
push
pushf
mul
sbb
into
cmps
mov
sub
xor
mov
jbe
and
popf
jne
std
inc
and
imul
xor
jne
stos
arpl
fsubr
jg
cwde
inc
mov
cmc
pop
inc
es
cmp
and
mov
jmp
or
dec
dec
jno
mov
xchg
dec
lock
push
test
push
(bad)
push
jbe
rcl
jne
cwde
or
fisubr
out
in
retf
mov
pop
repnz
mov
retf
mov
call
dec
xchg
jns
add
add
mov
stos
nop
sbb
or
and
dec
cdq
in
inc
call
mov
xor
or
push
enter
jg
mov
lahf
fyl2x
lock
stc
ins
mov
pop
cld
and
cmp
ret
bound
inc
add
adc
adc
xor
mov
pop
xor
push
xor
mov
mov
mov
mov
lea
and
scas
std
inc
daa
in
jne
jo
pop
cmp
push
in
xchg
jbe
dec
cwde
sti
sbb
sbb
xchg
jo
xchg
retf
dec
je
bound
fisttp
les
push
push
dec
in
mov
ins
mov
adc
sub
arpl
fdivr
movs
in
add
mov
sahf
sub
imul
or
sub
cwde
into
or
push
pop
ret
add
(bad)
jge
int
mov
xchg
sbb
mov
jg
add
pushf
cmp
and
jae
mov
bswap
add
ins
mul
js
and
in
push
xor
ficomp
jne
mov
aam
imul
out
add
jmp
inc
lods
icebp
dec
jne
scas
outs
cmps
nop
lods
adc
or
fst
add
std
pop
inc
xchg
rol
jo
leave
cwde
xor
repz
test
and
push
cmps
call
pop
rol
data16
mov
outs
cwde
out
ss
push
aad
das
scas
sub
or
lds
(bad)
clc
fnstcw
push
scas
dec
nop
and
xchg
push
nop
int3
adc
(bad)
adc
neg
push
ss
sbb
cli
lock
scas
mov
and
lods
rcl
dec
mov
fwait
sbb
adc
cmp
scas
fwait
inc
shl
pusha
ins
cmps
jge
add
js
mov
lds
jbe
jnp
dec
ror
xor
cmps
sub
sbb
jb
stos
arpl
jmp
cmps
xchg
xor
push
ds
fcom
inc
pop
adc
not
dec
or
push
cmp
mov
jle
pop
pop
jmp
fstp
sub
in
xor
sub
xchg
(bad)
jo
aad
or
adc
stos
cmp
stc
sub
cmp
rcl
scas
test
mov
push
(bad)
loope
in
xor
jmp
pop
mov
call
in
mov
popa
movs
sub
mov
inc
mov
jae
movs
mov
add
push
fcom
and
cmp
jbe
lods
xlat
push
add
inc
ja
and
xor
mov
js
retf
inc
sub
mov
xchg
ds
or
mov
lods
cmp
add
call
sar
xor
sbb
sub
mov
pop
push
jb
add
into
pop
in
add
(bad)
aaa
xchg
shr
imul
outs
pop
cmp
push
ins
outs
test
movs
xchg
adc
xlat
dec
mov
push
dec
xor
push
or
sub
dec
stos
mov
(bad)
in
(bad)
jns
xchg
xor
cld
jnp
arpl
cmp
mov
jno
or
cmps
(bad)
adc
or
mov
in
dec
ror
test
cwde
push
push
fs
retf
popa
(bad)
cli
xor
pushf
(bad)
push
repz
push
icebp
cdq
xchg
xor
add
pop
pop
or
pop
mov
sub
mov
add
mov
ja
mov
stos
das
call
add
inc
inc
pop
push
dec
outs
popa
bound
mov
aam
pop
push
and
push
rcl
jns
jl
hlt
retf
xchg
pop
cld
inc
jns
push
sar
lods
dec
push
pusha
push
cmp
not
push
mov
fiadd
push
inc
inc
xor
add
xor
test
ds
and
pop
xor
inc
cmc
(bad)
adc
fld
dec
(bad)
enter
stc
jecxz
inc
jo
loope
imul
into
cmps
push
add
pop
mov
or
cwde
add
dec
push
sahf
jne
movs
lock
push
push
lock
je
(bad)
in
stos
jb
sbb
outs
jl
(bad)
pushf
retf
or
mov
pop
inc
fisubr
sbb
das
mov
call
gs
retf
lods
xchg
add
jecxz
mov
adc
sbb
dec
fisubr
icebp
jl
(bad)
cmc
inc
fmul
mov
scas
aad
push
mov
out
xchg
mov
mov
ret
push
jnp
stos
sub
mov
cwde
enter
ja
xor
adc
lea
and
mov
int3
jmp
jae
pop
pushf
(bad)
push
lods
retf
inc
stos
imul
and
sub
push
xchg
mov
data16
mov
outs
dec
mov
adc
cmps
out
pushf
push
and
lods
push
out
jns
dec
pop
jno
sbb
addr16
pop
xchg
mov
int
mov
aas
jbe
jp
or
(bad)
adc
mov
or
xlat
mov
mov
adc
adc
push
inc
rcl
cmps
std
inc
adc
aam
jp
(bad)
jmp
call
pop
cmp
out
and
inc
outs
arpl
data16
test
(bad)
clc
xchg
shl
inc
mov
sar
inc
lea
movs
(bad)
sbb
aaa
inc
inc
push
js
sbb
imul
cmc
dec
outs
stc
xor
mov
inc
into
xlat
inc
out
sub
ds
inc
rol
jbe
mov
in
jle
ja
mov
imul
adc
ins
outs
mov
out
jge
pop
cmps
mov
push
jb
or
sbb
add
push
pop
fwait
mov
pop
pop
cs
push
and
scas
enter
arpl
jg
and
cmc
cld
out
in
mov
inc
mov
pop
sub
xor
fadd
sub
xchg
int3
hlt
push
mov
cmc
out
imul
jecxz
addr16
in
xchg
dec
and
mov
adc
dec
in
retf
jge
cmp
dec
xchg
inc
push
pusha
sbb
test
mov
repz
outs
out
mov
jnp
loopne
adc
je
movs
jmp
int
shr
(bad)
jae
pop
adc
mov
dec
inc
mov
jmp
jnp
out
cmp
pusha
arpl
sbb
and
sub
add
xchg
pop
sub
mov
push
test
jno
and
rcr
scas
ds
cmp
inc
popf
outs
int3
mov
xchg
add
imul
cmps
sub
ret
iret
(bad)
rcr
jmp
adc
sbb
pop
and
clc
dec
push
xor
push
neg
lea
in
mov
loop
jp
add
mov
shl
or
sub
mov
xchg
push
mov
icebp
loope
int3
je
(bad)
ds
and
mov
mov
or
adc
or
inc
xchg
int
mov
repz
mov
addr16
dec
inc
int
pop
adc
outs
cli
loop
(bad)
iret
pop
dec
cmc
jl
jg
push
adc
pushf
mov
scas
push
adc
ja
jmp
push
inc
in
inc
push
xor
fmul
lahf
sbb
add
in
mov
inc
sub
scas
(bad)
mov
jo
dec
sub
mov
imul
mov
jns
and
leave
inc
outs
bound
push
push
sbb
rol
mov
cmp
or
and
adc
mov
push
(bad)
mov
add
xor
outs
and
imul
(bad)
xchg
(bad)
outs
pop
adc
arpl
lods
xor
call
out
js
aas
retf
push
bound
and
test
and
adc
and
pop
mov
cs
nop
mov
xor
lods
and
(bad)
aaa
pusha
es
loopne
or
xor
mov
dec
stos
bnd
cmp
movd
loopne
add
shr
xlat
mov
jne
jmp
or
pop
bound
push
pop
repz
data16
ss
mul
cmp
fisub
repz
add
jmp
add
sbb
fcomi
and
cmps
(bad)
add
shl
dec
adc
fxtract
test
xchg
cli
jmp
icebp
hlt
sbb
lds
dec
cmps
mov
retfw
movs
dec
jge
jns
lods
pop
mov
jl
adc
inc
pop
push
cmps
push
jbe
dec
out
aaa
inc
daa
mov
(bad)
popa
mov
jge
mov
xchg
pop
sub
call
lock
or
rcr
lds
popa
mov
cmp
stos
add
(bad)
jl
call
inc
xchg
jo
push
cmp
adc
xlat
jne
inc
mov
js
jb
test
lea
fdiv
dec
and
fimul
add
push
test
pop
fdiv
shl
add
add
sar
aad
test
ss
sub
mov
or
mov
into
cdq
or
(bad)
fwait
xor
pop
sbb
jno
test
call
lahf
and
push
and
aad
out
in
gs
mov
cmp
mov
adc
mov
retf
xor
xchg
mov
es
push
movs
imul
aaa
call
fst
push
sub
adc
or
cmc
push
xlat
cmps
xchg
dec
aam
sar
dec
mov
inc
sbb
cmp
iret
mov
(bad)
dec
push
sbb
and
jmp
into
pop
jl
jns
bnd
cmps
shl
adc
imul
retf
repz
push
sbb
inc
icebp
push
scas
fbstp
popa
ss
loop
jp
push
mov
or
lods
ret
jo
or
retf
pusha
std
div
enter
mov
adc
add
jl
int3
jg
dec
stos
das
in
aas
xchg
jmp
aaa
xchg
clc
iret
add
inc
in
adc
scas
dec
sbb
mov
push
and
popf
shl
adc
sub
pop
push
xchg
outs
adc
inc
mov
push
in
pop
enter
jns
int
push
neg
and
pop
dec
adc
sahf
loopne
mov
and
imul
jmp
pop
scas
xabort
xchg
test
(bad)
aam
outs
mov
pop
ja
enter
outs
pop
pop
lods
jmp
(bad)
and
neg
ror
xchg
mov
mov
test
fnstsw
iret
mov
adc
out
jo
nop
jg
in
mov
pop
sbb
xor
or
jno
aaa
lock
ins
or
in
pushf
in
xchg
cmps
(bad)
out
jo
int
adc
es
cmp
xor
jp
cmp
adc
dec
xchg
stc
mov
xor
push
cdq
cmc
in
cmp
nop
ficom
scas
adc
(bad)
xchg
out
xor
arpl
fisubr
adc
stos
sbb
inc
out
dec
data16
mov
cmps
js
or
es
push
in
(bad)
push
mov
mov
sti
arpl
xchg
mov
dec
xchg
aas
lods
and
inc
jbe
fs
and
dec
mov
(bad)
dec
sub
push
(bad)
jecxz
mov
push
jae
(bad)
(bad)
adc
and
iret
iret
(bad)
ds
jge
push
sbb
lods
sub
shl
sbb
mov
add
cmp
adc
sbb
push
adc
std
inc
add
mov
mov
stc
and
(bad)
push
cdq
sti
ret
and
cmc
imul
mov
mov
inc
pop
jne
jnp
add
clc
adc
cmps
test
and
mov
or
js
test
pop
aam
cmps
adc
pop
mov
dec
sub
mov
aaa
adc
cmp
gs
ss
mov
lss
das
(bad)
jne
and
and
shl
mov
mov
fs
add
push
adc
repz
add
and
(bad)
push
pop
xor
jle
xchg
jle
inc
or
cmp
mov
jbe
push
les
(bad)
jmp
call
sbb
fwait
xchg
xchg
(bad)
(bad)
scas
aaa
retf
inc
pop
cmp
dec
push
(bad)
mov
pop
lahf
call
pop
es
jmp
ror
xchg
inc
cdq
loop
fs
mov
inc
pop
in
pop
leave
pop
xchg
inc
es
sub
lock
not
pop
ins
pop
add
mov
or
mov
sub
xchg
mov
js
std
pop
stos
ds
(bad)
repz
mov
daa
call
adc
inc
repnz
sub
jbe
loop
jmp
pop
cmp
test
adc
imul
in
retf
pusha
and
out
fmul
(bad)
in
icebp
arpl
sti
jb
jmp
sbb
push
(bad)
shl
mov
xchg
dec
outs
mov
mov
fld
sub
(bad)
mov
push
sar
hlt
lea
movs
push
in
mov
imul
or
xor
mov
jmp
mov
cmp
out
test
arpl
or
fmul
stc
int3
sub
mov
mov
scas
inc
push
rcr
lock
xchg
and
inc
add
inc
push
cs
inc
pop
push
inc
inc
add
xchg
add
loope
mov
(bad)
inc
push
je
js
cmps
daa
retf
bound
in
pop
lods
add
ds
jns
lods
neg
add
mov
xchg
jecxz
aad
pmulhuw
js
jo
out
jp
fimul
xor
repnz
xor
pop
aam
pop
jnp
cmp
mov
(bad)
mov
jg
cld
hlt
sbb
lds
test
rol
xor
sub
aad
jl
out
ds
nop
sbb
adc
mov
nop
inc
dec
pop
inc
inc
lea
gs
daa
pop
inc
test
sbb
add
adc
in
dec
ja
lahf
mov
fcmovnu
jecxz
fcomp
adc
loope
xor
jno
mov
dec
sbb
push
pop
pop
mov
repnz
dec
push
adc
xor
test
iret
push
mov
xor
adc
clc
dec
jae
fsubr
test
repnz
icebp
stc
ret
mov
repnz
pop
mov
imul
sbb
sbb
repnz
mov
mov
ins
mov
fnsave
lds
mov
jecxz
jb
int
and
jnp
out
xchg
aad
cdq
dec
lea
or
loope
inc
std
mov
mov
ror
icebp
in
fsub
std
inc
popf
pop
rol
repz
adc
jge
ja
movs
mov
mov
jb
das
ins
ror
push
and
mov
mov
jb
call
imul
ret
scas
icebp
fist
(bad)
(bad)
and
adc
test
fcom
cmps
mov
pop
rcl
xchg
mov
xchg
pop
add
jo
add
cmp
es
movs
lods
jmp
iret
xchg
or
pop
jmp
sub
mov
push
inc
and
sub
mov
inc
sub
jmp
push
rol
enter
scas
imul
dec
jns
daa
mov
out
mov
scas
add
cmps
sub
and
loopne
pop
push
inc
js
stos
std
xchg
or
add
pand
je
adc
mov
push
repz
icebp
int
mov
out
arpl
dec
push
into
add
xchg
inc
out
imul
js
xor
test
dec
mov
vmovaps
mov
inc
push
cwde
push
mov
mov
mov
or
arpl
or
retf
xor
cmps
ins
cli
cmp
retf
or
retf
dec
or
sbb
pop
into
pop
outs
push
cmps
add
xchg
cdq
pop
cmp
mov
sub
clc
push
retf
neg
hlt
mov
lock
inc
and
es
push
cmp
stos
lock
mov
xor
test
lods
out
and
fst
dec
inc
mov
sbb
sbb
pop
in
and
ins
nop
stos
in
add
in
es
inc
jmp
out
xor
pcmpgtd
mov
xor
test
shl
in
or
ins
std
sti
mov
enter
data16
into
adc
int
and
mov
call
mov
movs
xchg
or
xor
sbb
push
test
mov
cmp
scas
mov
or
mov
add
out
jbe
outs
addr16
pop
pop
adc
jnp
sti
push
mov
or
inc
pushf
(bad)
cdq
(bad)
das
fs
jecxz
scas
out
mov
ds
dec
xor
cwde
mov
dec
xor
adc
pop
nop
lods
xchg
push
xor
ss
lea
das
or
repnz
fld
xor
loop
jae
pop
add
jmp
jae
fist
popa
cmp
xchg
xor
jb
mov
pop
push
mov
ds
shl
dec
(bad)
pop
cld
ret
dec
stc
cmp
aaa
push
and
mov
loope
scas
adc
add
mov
and
jno
or
pop
add
iret
mov
add
mov
xor
xor
cmp
pop
jmp
adc
sub
add
loopne
in
out
imul
or
int3
pushf
in
mov
lahf
xchg
aas
repz
cld
xchg
xor
and
or
(bad)
push
sbb
stos
push
dec
dec
mov
push
sbb
pop
sub
add
xchg
add
out
mov
dec
xchg
jmp
movs
fsub
rcl
mov
aam
cmps
(bad)
fidiv
dec
aam
adc
or
mov
adc
cmp
mov
retf
cmp
mov
enter
cld
adc
mov
iret
and
sub
int
ins
out
mov
iret
gs
js
mov
cmp
cwde
or
fcomp
jo
(bad)
aaa
nop
xchg
jl
pop
pop
mov
fnstenv
cli
in
jecxz
aad
lock
jmp
(bad)
in
repnz
add
jl
xchg
scas
outs
loope
sbb
loopne
sahf
in
frstor
cmp
adc
sub
ja
out
mov
and
pop
leave
outs
jp
sti
or
stc
inc
ja
push
pop
scas
dec
pop
int
add
dec
push
add
sub
aas
std
jl
movs
add
movs
pop
aas
xchg
je
pop
adc
push
jo
jge
sbb
xor
inc
outs
iret
xor
jge
xor
ins
leave
lods
std
cli
pop
mov
push
pop
retf
add
sub
(bad)
xchg
stos
test
in
mov
test
mov
daa
imul
loop
sub
cmp
iret
pop
or
push
nop
sub
fdivr
sbb
jmp
popf
cmps
or
popa
lea
or
inc
cld
jmp
pop
jae
sahf
sub
push
daa
dec
push
or
inc
call
shl
mov
rcl
jle
cmps
pop
int3
and
inc
adc
les
enter
loopne
add
mov
retf
out
adc
imul
adc
sti
pop
cs
out
pushf
push
retf
dec
push
in
pop
retf
jne
add
cwde
aas
dec
push
pop
mov
rcl
mov
adc
sub
jge
cmp
push
out
sub
test
jb
mov
pop
cwde
mov
dec
mov
pop
movs
cwde
and
jno
mov
mov
jb
xchg
pop
xchg
nop
add
bswap
aad
mov
ret
in
cli
pop
popf
out
sti
cmp
dec
mov
cdq
inc
mov
push
dec
inc
mov
(bad)
mov
sar
sar
inc
mov
mov
and
daa
sub
push
fwait
pop
fwait
jp
loope
jno
aam
dec
lea
(bad)
dec
(bad)
rcr
shr
and
fisubr
rcr
aam
xor
jge
jl
xchg
sbb
add
inc
imul
jmp
cld
and
jbe
mov
sti
pop
mov
ret
test
pop
dec
sti
inc
jb
pop
clc
jo
stc
out
push
call
jg
repz
add
mov
ins
cli
js
fisub
in
out
or
add
addr16
or
jo
mov
mov
ins
bound
or
test
dec
adc
pop
test
call
cdq
adc
mov
xchg
jecxz
xlat
in
outs
add
jmp
sub
add
mov
jp
loope
loope
jecxz
xchg
sub
jp
sbb
aad
cld
inc
push
or
std
xor
mov
and
sahf
not
inc
jp
daa
push
pop
push
call
in
pop
inc
ins
sti
push
jg
in
jge
xchg
icebp
in
mov
dec
std
inc
sub
mov
fcomp
iret
cmp
in
xor
jl
jo
mov
jmp
aad
and
xchg
mov
data16
scas
push
frstor
sar
and
add
shl
mov
push
cs
mov
test
mov
and
shl
xchg
fnstcw
dec
add
retf
ror
mov
mov
aaa
call
add
xlat
cmps
dec
and
sub
hlt
and
jnp
jb
ins
call
jle
mov
lahf
cmp
adc
sub
fs
in
jns
shl
xchg
adc
add
mov
inc
rcl
(bad)
aas
xchg
dec
mov
mov
and
ja
mov
adc
cwde
and
inc
js
push
mov
retf
add
cmp
add
xchg
packsswb
fcmovne
pop
dec
xor
xor
adc
and
imul
paddsb
cmp
js
mov
inc
pop
mov
jle
and
mov
sti
movs
pusha
jecxz
mov
lods
add
push
jmp
sar
add
(bad)
fadd
or
out
mov
and
out
xchg
jne
and
adc
test
pop
pusha
or
test
cld
push
repz
pop
adc
inc
or
sub
jge
jne
ins
pop
mov
adc
sub
sub
jmp
and
mov
xchg
jno
cmp
inc
jle
loop
pop
push
icebp
clc
lea
jb
push
popf
cmp
dec
pop
add
sbb
popf
nop
add
rol
fwait
sub
xor
push
(bad)
sub
jmp
xor
or
push
inc
adc
fwait
cmp
cld
mov
push
js
pop
jle
lods
pusha
test
int3
fucomi
cld
push
dec
lds
pop
sub
sar
ins
mov
imul
inc
adc
xor
jae
mov
adc
jae
popa
adc
push
imul
outs
shl
jge
add
ins
mov
in
mov
fcomip
scas
pop
jecxz
cmc
ins
pusha
stos
push
xor
fisub
mov
pop
add
and
push
jmp
and
scas
adc
xchg
int3
and
jecxz
lahf
xchg
inc
or
mov
xchg
enter
cmps
add
jne
rcl
mov
sub
mov
call
jl
iret
cmps
add
inc
sbb
sar
fwait
jmp
pause
es
xor
mov
sbb
pop
cmp
popf
cld
dec
int
or
and
mov
mov
adc
lods
rcl
cmp
cld
or
push
and
(bad)
sbb
repz
xor
cdq
push
stc
pop
pushf
fistp
cwde
inc
add
jae
icebp
inc
out
and
xor
or
not
inc
xor
sub
call
jmp
cmp
int3
pop
jb
mov
mov
xchg
(bad)
repz
push
sti
jne
push
adc
mov
mov
fsub
ror
mov
in
stos
popf
add
call
ins
mov
mov
and
jbe
sub
dec
fild
push
sbb
outs
mov
dec
lock
aad
mov
adc
sbb
dec
cmps
out
imul
in
sbb
sbb
pop
cmp
mov
add
outs
ss
pusha
mov
out
mov
inc
push
in
mov
stos
shl
sbb
aam
repz
xor
jle
mov
dec
and
scas
ja
sub
jg
adc
stos
stos
mov
std
bound
sahf
sbb
xchg
push
mov
ja
outs
cmp
shl
rol
sbb
rcl
clc
mov
shl
mov
dec
ret
mov
mov
lods
repz
fnsave
cmp
ficomp
jmp
mov
jmp
call
enter
inc
sahf
pop
and
sbb
adc
mov
adc
push
pushf
mov
and
sbb
ror
(bad)
div
ds
pop
ins
jmp
jg
outs
dec
outs
xor
fs
add
push
mov
sub
xor
out
and
lahf
sbb
mov
icebp
push
fwait
mov
xor
sub
pop
les
sbb
cmps
lds
mov
xchg
out
and
add
dec
jne
jl
and
inc
aad
jge
in
jb
mov
fistp
movs
sub
addr16
fild
test
sbb
sub
jmp
inc
loopne
push
ret
push
movs
xor
mov
jl
xlat
jns
push
jno
(bad)
(bad)
das
loopne
xor
call
test
push
inc
pop
call
repz
out
bound
mov
mov
sbb
cli
dec
(bad)
cmc
loopne
mov
(bad)
pop
pushf
jae
sbb
sbb
in
dec
cwde
inc
inc
inc
fsubr
add
cmps
lock
ffreep
xchg
mov
dec
fdiv
daa
arpl
scas
and
movs
jl
lea
sbb
iret
mov
or
aam
push
or
and
push
dec
push
mov
sti
lds
rol
xchg
sbb
cmovae
adc
fisubr
mov
test
inc
shl
pop
(bad)
pop
shl
lock
cwde
and
(bad)
xchg
mov
lds
in
imul
xchg
push
sbb
mov
pusha
je
pop
xor
jg
call
and
and
push
cli
cmp
mov
mov
add
sbb
and
cs
jbe
and
xor
mov
jecxz
std
dec
popf
in
sub
test
imul
pushf
sbb
loopne
push
addr16
dec
mov
bnd
les
sub
aas
adc
imul
push
cmp
aaa
sub
dec
ja
add
mov
and
cmps
jecxz
das
packuswb
dec
out
pop
sub
dec
movs
cmps
(bad)
popf
adc
(bad)
jp
nop
loop
(bad)
or
(bad)
mov
push
into
push
lea
test
inc
leave
pop
mov
mov
push
or
ja
xor
xchg
stos
xchg
aad
loope
(bad)
mov
lea
xlat
sub
movs
mov
sbb
or
nop
push
pop
and
adc
or
sub
mov
stos
jnp
jo
sub
add
pop
in
inc
sar
jl
push
out
je
(bad)
fisttp
shl
in
add
imul
xchg
dec
int3
aam
and
xchg
add
or
add
mov
or
or
jns
xchg
dec
pop
lahf
mov
jg
cld
stos
enter
xchg
add
ret
loope
sub
retf
mov
mov
sbb
popf
mov
(bad)
or
cmp
ds
adc
(bad)
outs
dec
mov
in
mov
pushf
dec
push
sbb
sub
mov
cmc
cli
mov
pop
adc
rol
daa
ins
scas
mov
pop
into
rcl
push
and
jge
jecxz
push
push
stos
ins
or
icebp
arpl
mov
test
fs
ins
push
xor
xchg
push
mov
push
sbb
popa
clc
ja
push
adc
push
inc
jno
or
fdiv
xchg
jo
pop
loopne
icebp
mov
push
xor
mov
repnz
nop
nop
sub
(bad)
sub
or
sbb
mov
mov
xchg
or
add
or
xor
push
stos
stos
xor
mov
das
xor
and
mov
jecxz
adc
fmul
mov
mov
and
dec
inc
rcr
pop
push
scas
nop
les
add
loopne
jmp
xor
xchg
sbb
mov
imul
into
dec
cwde
jno
adc
mov
push
mov
add
mov
in
in
push
pop
in
and
or
(bad)
dec
sub
dec
mov
int3
jne
lea
outs
mov
xchg
das
je
scas
inc
or
adc
push
leave
out
out
(bad)
popa
xor
inc
mov
jmp
mov
xchg
sar
enter
sbb
(bad)
dec
jnp
or
or
dec
push
dec
xchg
fwait
xor
fld
ss
test
addr16
mov
loop
call
mov
call
push
mov
inc
arpl
mov
mov
xchg
or
sbb
mov
xor
fld
add
in
adc
xchg
dec
pop
mov
push
xchg
mov
push
xor
outs
add
xchg
add
sbb
mov
mov
ja
sbb
push
sub
fs
cs
jl
sbb
addr16
jg
inc
arpl
mov
push
mov
and
pop
jp
jbe
outs
dec
pushf
inc
pop
shr
dec
xor
cdq
push
lods
mov
loopne
sahf
(bad)
xchg
inc
and
dec
mov
and
(bad)
push
pop
sub
scas
fimul
dec
icebp
cmp
stos
stos
xchg
jne
test
or
dec
lods
jmp
mov
sbb
sub
movs
out
mov
nop
repnz
clc
call
push
jp
jno
push
lods
leave
js
mov
adc
or
mov
pop
test
inc
stc
fistp
push
pop
mov
jns
mov
xlat
lods
mov
sub
sub
inc
mov
daa
enter
aas
fsubr
xchg
dec
lds
call
test
movs
inc
imul
ss
in
shl
shl
test
fcmove
test
mov
outs
cdq
mov
scas
sub
into
ficomp
scas
jecxz
fcomp
push
inc
pop
xchg
call
nop
dec
mov
sub
cmc
loope
iret
jge
enter
sti
jnp
(bad)
js
sub
dec
mov
and
scas
ins
push
sbb
xchg
fisubr
push
jmp
sahf
hlt
jo
or
inc
jl
dec
ret
(bad)
je
pop
ins
leave
sub
std
fcmove
jae
dec
ret
aas
lods
adc
fwait
mov
cmps
jmp
retf
daa
xchg
and
push
sub
mov
and
jg
ret
mov
mov
retf
leave
(bad)
jbe
xor
retf
jae
cmp
mov
sbb
sti
inc
loope
adc
pop
adc
xor
xor
stos
ja
test
push
hlt
cmp
pop
(bad)
outs
push
pushf
jmp
jecxz
stc
sbb
mov
popa
pop
aad
mov
(bad)
call
mov
inc
and
adc
mov
int
push
int3
mul
xor
pop
mov
mov
pushf
push
out
mov
aad
icebp
fcmovnu
scas
out
div
ds
leave
sahf
dec
int
ins
ror
add
movs
cmps
xchg
retf
int
jmp
mov
xchg
xor
test
pusha
stos
dec
hlt
push
add
daa
mov
aam
iret
mov
outs
loope
push
cmps
or
movs
dec
inc
fadd
addr16
mov
test
dec
or
scas
pop
popf
pop
in
adc
(bad)
mov
and
jmp
(bad)
pop
lods
in
in
sbb
(bad)
loop
fs
xchg
add
mov
test
xor
add
cmps
repnz
and
aad
jle
jns
scas
outs
mov
dec
xor
or
mov
inc
jne
cmp
mov
push
jecxz
fwait
inc
jl
(bad)
fisub
jg
ins
xor
hlt
in
fldenv
mov
out
imul
loop
dec
imul
js
sbb
and
jo
add
(bad)
mov
cmps
scas
(bad)
ds
jle
imul
xchg
push
loopne
jmp
imul
cmp
int
ja
cwde
inc
pop
stos
retf
or
(bad)
stc
push
fistp
jmp
mov
ror
repz
call
int3
outs
pusha
cmp
js
jge
dec
pop
pusha
das
inc
mov
jl
jnp
hlt
fbld
and
mov
ss
mov
mov
push
and
shl
xchg
sbb
mov
out
(bad)
cmc
jae
sbb
out
xchg
imul
mov
jge
mov
mov
mov
mov
sbb
mov
rcl
leave
gs
stos
outs
test
dec
neg
dec
mov
add
pop
and
add
sar
enter
sbb
(bad)
fsubr
cdq
add
xchg
sti
in
(bad)
cmps
or
pop
jecxz
mov
sub
sbb
dec
idiv
stos
pop
add
pop
push
cmp
pop
mov
add
inc
frstor
ror
std
iret
sbb
mov
(bad)
fiadd
test
mov
xchg
arpl
xor
lods
ins
xchg
jmp
jge
add
test
mov
and
jle
sbb
push
sub
fidivr
mov
pop
mov
mov
sub
xchg
cmp
icebp
mov
inc
imul
lods
inc
mov
(bad)
pop
test
xchg
cdq
push
and
adc
add
mov
test
aad
stos
movs
xor
aas
pop
stos
adc
(bad)
test
loopne
xor
jmp
loope
inc
pop
std
loop
lea
mov
enter
popa
outs
lea
les
inc
cmp
rol
(bad)
cld
cmps
outs
mov
(bad)
mov
jne
movs
pop
loope
add
and
and
es
jg
lock
gs
aaa
cwde
dec
(bad)
fisubr
or
and
test
mov
push
push
add
mov
mov
xor
add
fs
retf
jae
jnp
adc
jmp
out
lds
lea
bound
repz
ficom
iret
push
arpl
xor
xor
mov
stos
ss
aam
iret
sar
or
lods
nop
inc
pop
and
ret
jno
inc
enter
mov
jp
stos
cmc
jge
add
and
test
xor
test
int3
dec
push
test
xchg
cmps
lahf
mov
std
inc
ds
mov
mov
and
mov
mov
mov
bound
or
xchg
in
add
int
pop
push
sbb
nop
pop
addr16
leave
clc
push
xchg
dec
out
in
adc
ret
jo
xchg
mov
gs
mov
dec
les
inc
jmp
push
loope
mov
(bad)
frstor
cmp
xchg
in
mov
rcl
adc
shl
xor
cdq
xchg
les
mov
mov
cmp
pusha
fxch
shl
int
pop
push
hlt
pushf
aaa
push
or
in
add
and
(bad)
inc
scas
rcr
or
sub
push
test
xor
cmp
in
mov
push
push
pop
inc
adc
inc
pop
push
or
cmc
lds
xchg
dec
(bad)
dec
retf
cli
in
repz
and
sub
clc
js
loopne
pop
jne
sbb
popa
ret
mov
mov
pushf
es
jnp
mov
xor
push
stc
clc
and
in
cmovb
imul
push
jp
jp
jle
sub
sbb
or
push
sbb
inc
or
jno
loope
dec
adc
xchg
adc
inc
data16
add
int3
push
dec
jne
(bad)
cmp
fbstp
push
icebp
or
adc
or
movups
pop
call
push
rol
mov
(bad)
bnd
or
(bad)
bound
fadd
inc
mov
inc
movs
fldl2t
mov
ja
jns
dec
std
retf
mov
sbb
add
nop
or
frstor
sub
sbb
pop
in
push
loope
xchg
and
call
cld
(bad)
rep
or
in
stos
xchg
mov
push
and
leave
mov
fcom
fbstp
pop
pop
sar
sub
repnz
mov
pop
test
fdiv
sbb
jp
iret
fucom
stos
sar
(bad)
daa
adc
repnz
sbb
ds
js
std
sbb
add
mov
dec
mov
gs
repnz
mov
add
cmp
sar
xor
pop
stos
dec
bound
sbb
or
mov
lahf
leave
bound
call
mov
enter
add
cmp
cmps
(bad)
fisubr
and
ror
sbb
(bad)
and
in
mov
fmul
xchg
scas
sub
sub
or
neg
cmc
cmps
adc
mov
(bad)
mov
sbb
pop
push
adc
add
mov
in
dec
mov
cdq
mov
adc
inc
mov
xchg
xchg
imul
cld
jg
mov
mov
movs
and
sbb
xchg
push
push
cmps
lods
sbb
sub
xchg
xchg
fsubr
push
pop
adc
fadd
mov
cmps
adc
xchg
pusha
in
xchg
mov
faddp
xor
dec
ins
jns
push
ror
push
cld
adc
and
jb
repz
inc
mov
and
in
shr
pop
retf
and
test
sbb
into
js
retf
mov
loop
pop
icebp
repnz
pusha
movs
es
iret
gs
push
inc
cmp
call
test
enter
push
jne
cmc
jle
and
mov
pushf
jmp
into
and
push
bound
hlt
sbb
lods
pop
(bad)
ror
cmc
inc
ret
gs
stos
jmp
rcl
mov
ficom
push
mov
pop
ret
jae
sbb
int
retf
sub
sbb
pop
add
stos
mov
or
shl
cmp
jne
cmps
push
and
cmc
adc
clc
bound
pop
daa
sbb
adc
loopne
xchg
aas
nop
rcl
shl
jl
push
adc
mov
popf
xlat
push
enter
and
stos
jae
or
push
push
adc
adc
sar
addr16
mov
add
rcl
out
jle
(bad)
in
pop
les
sub
cli
movs
ins
jl
xor
gs
push
mov
imul
dec
mov
nop
jae
je
bound
in
and
jbe
mov
push
loopne
repz
fbld
loop
xchg
xchg
mov
push
mov
cmp
jb
and
ins
gs
in
jle
jbe
neg
ja
xchg
push
ja
std
dec
xor
jns
cmp
ficom
jbe
cmp
push
xchg
retf
rcl
test
sub
icebp
mov
sar
xchg
inc
cli
push
jge
jne
mov
mov
sbb
scas
test
les
jns
into
xlat
jle
mov
clc
pop
rol
push
test
(bad)
cld
outs
or
dec
xchg
add
movs
adc
dec
es
cs
push
ficomp
sbb
repnz
push
mov
imul
inc
arpl
mov
out
or
push
xchg
shl
mov
mov
out
xchg
sub
or
stc
or
xor
ja
inc
daa
fst
shl
cmp
ret
adc
in
ret
and
mov
adc
pushf
jbe
push
mov
test
in
push
xor
inc
scas
out
xchg
repnz
mov
fsub
pop
push
add
add
dec
mov
(bad)
sbb
out
fs
cmc
sub
stc
fwait
test
int
xor
fwait
pop
mov
pushf
jle
cmp
and
push
adc
(bad)
push
cs
int3
pop
adc
jle
scas
stos
(bad)
and
jb
mov
fimul
mov
jmp
mov
pop
jbe
xchg
es
loop
lods
mov
jmp
push
popa
ss
imul
jae
mov
(bad)
(bad)
xchg
cmp
xchg
or
stos
int3
cdq
sbb
call
sub
mov
sub
outs
add
or
mov
neg
push
outs
scas
repz
and
mov
dec
or
inc
cdq
add
mov
lock
jle
push
sbb
pop
adc
jmp
scas
jmp
dec
dec
ja
pop
test
jo
(bad)
test
inc
(bad)
cld
lods
push
xchg
mov
test
mov
enter
jecxz
das
in
iret
pop
movs
rcl
cli
dec
and
cdq
inc
sbb
adc
out
call
mov
ds
xchg
jg
and
ins
dec
sbb
int3
cmp
jge
sbb
fdiv
mov
mov
mov
adc
mov
bound
aad
or
jno
mov
addr16
sti
jnp
(bad)
mov
call
mov
cmp
cmp
push
xchg
mov
into
sahf
iret
hlt
xor
push
adc
and
xor
adc
xor
out
xchg
sbb
adc
popf
fst
cdq
rcr
ja
or
inc
sbb
test
and
repz
push
or
mov
mov
push
mov
dec
ret
mov
pop
fdivr
mov
into
(bad)
adc
and
xor
popf
add
in
retf
mov
inc
jle
inc
add
mov
dec
sbb
mov
in
fnstsw
adc
or
push
pop
pushf
inc
sub
xchg
pop
jl
(bad)
xchg
mov
jg
aam
jns
shl
push
mov
cmp
in
dec
sbb
push
test
fisubr
imul
mov
cld
shl
jg
jns
cwde
mov
or
mov
shl
xor
cli
sbb
xchg
pop
pop
fiadd
outs
getsec
sbb
xchg
sbb
mov
cs
cmp
lods
xor
shr
stc
rcl
lods
and
xchg
push
push
or
movs
dec
int
ins
les
jmp
lahf
push
xchg
push
lods
push
cmps
std
mov
sub
scas
pop
mov
adc
mov
inc
adc
jns
ins
loope
push
shl
js
or
imul
xor
lods
mov
cmp
mov
ja
repnz
sbb
stc
or
and
ficom
xor
aas
leave
jl
retf
inc
aam
sub
add
sub
pop
aad
xchg
shld
fistp
seto
hlt
popa
out
imul
test
fbld
mov
test
loop
popa
lock
mov
loope
or
pop
and
cmp
dec
xor
fs
jg
jmp
mov
(bad)
push
out
(bad)
xchg
and
push
lock
js
pminub
cmp
(bad)
jo
movups
push
not
cmp
shl
xchg
xchg
scas
lods
bound
mov
add
hlt
sbb
xchg
into
in
adc
stos
fcomp
sbb
ret
jb
push
out
push
repnz
iret
imul
addr16
fsubr
pop
test
pop
push
loope
mov
popf
ja
imul
test
lea
mov
fs
ins
add
xor
sbb
jo
in
dec
mov
aad
adc
scas
out
dec
push
xchg
push
mov
adc
xchg
and
lea
sbb
jl
das
adc
dec
ja
and
dec
mov
or
outs
xor
pop
add
sar
push
adc
in
sti
adc
mov
mov
xor
push
pop
xchg
pop
in
bound
in
stos
pop
or
xchg
or
pop
stos
mov
xlat
pop
inc
test
sub
xchg
jecxz
xor
lea
cld
mov
das
cwde
inc
ror
lods
lds
fidiv
sub
test
dec
sub
and
iret
out
pop
mov
cdq
jno
movs
out
leave
(bad)
fidiv
call
cmp
pusha
sti
adc
dec
fcmove
jg
addr16
pop
cmps
fcmovnbe
sbb
mov
dec
stc
mov
mov
jecxz
retf
dec
push
or
out
je
popf
xchg
les
or
pop
sub
mov
hlt
mov
xor
push
pop
dec
ss
out
or
dec
jle
mov
popf
rol
adc
adc
shr
add
push
hlt
add
mov
iret
xchg
mov
pop
rol
or
inc
sti
jb
inc
mov
push
test
sti
adc
leave
mov
adc
not
dec
cmps
dec
dec
jnp
loop
mov
retf
stos
mov
ins
aad
sub
xchg
inc
mov
fwait
dec
cmc
xor
fist
and
ds
or
mov
jl
mov
adc
sbb
and
pop
cdq
shl
stos
push
xor
inc
daa
test
dec
movs
test
mov
adc
nop
push
pop
in
dec
test
aas
arpl
jnp
cmp
cwde
push
push
mov
mov
or
(bad)
out
scas
mov
add
stc
jae
fcmovnb
shr
mov
ret
dec
cld
add
pop
sbb
xor
leave
add
mov
mov
dec
sub
popf
jb
cmp
ficom
out
rcr
retf
or
clc
xor
aad
sub
cdq
imul
scas
les
mov
mov
xor
adc
mov
ror
sti
xchg
jg
adc
imul
xor
sub
mov
cdq
mov
je
mov
pop
hlt
repnz
and
dec
mov
lods
push
aaa
push
clc
icebp
jne
xchg
push
imul
cmp
and
std
stos
fisub
nop
sub
add
scas
xchg
mov
pop
jns
dec
leave
loope
xchg
or
adc
sub
sbb
dec
sbb
adc
push
inc
movs
lea
sti
into
add
in
sbb
jecxz
or
mov
xchg
xor
or
jb
mov
and
inc
xor
and
rcl
pop
stc
pop
out
jl
sbb
(bad)
jmp
xlat
ror
stc
and
add
xor
scas
fnstsw
mov
das
jmp
or
inc
(bad)
in
mov
jmp
dec
cmps
pop
adc
data16
xchg
and
push
jns
cmp
rcl
(bad)
push
cld
aad
call
dec
into
mov
jmp
std
dec
lock
mov
mov
xchg
jo
jecxz
pusha
in
fistp
xor
test
pop
jb
jmp
push
ret
add
in
sbb
call
test
fwait
in
dec
addr16
ror
inc
fwait
pop
test
(bad)
xor
movs
cmp
inc
sti
stc
mov
sbb
mov
pop
push
out
fmul
mov
cmps
cmp
sub
ds
fadd
jmp
aad
aam
inc
in
xor
cmps
mov
fisubr
cmovge
pop
lock
jbe
push
ret
sbb
mov
ret
inc
cmp
mul
xchg
test
daa
mov
or
push
xor
std
(bad)
xchg
shl
pop
loopne
ins
faddp
aad
js
cs
lods
dec
mov
in
dec
aaa
xchg
je
aam
or
in
add
jnp
push
scas
aad
out
ret
dec
stc
inc
sbb
arpl
cld
in
xor
lock
test
idiv
pop
lds
sub
cmp
in
test
(bad)
jg
ret
push
xor
pop
xadd
ds
sub
sub
sbb
mov
mov
lods
jge
xor
aaa
(bad)
outs
jg
out
mov
mov
and
test
lods
add
cmp
(bad)
rcl
inc
ja
ret
xchg
jg
dec
or
push
or
pop
mov
mov
adc
or
sbb
sub
leave
aad
mov
xor
add
imul
stos
nop
imul
adc
stos
sub
pop
mov
loope
jp
xor
stos
lock
jge
pop
mov
dec
test
cmc
ins
(bad)
adc
or
add
mov
or
sub
out
pop
retf
and
pop
jmp
imul
gs
mov
ja
jle
call
add
fidivr
test
add
pop
mov
dec
ja
daa
cmp
cmp
fisub
sub
or
out
mov
adc
lods
repz
or
and
js
add
mov
les
push
shr
lods
xchg
or
fstp
scas
add
pop
xor
test
cld
add
and
das
mov
push
jge
mov
(bad)
dec
sbb
mov
pop
leave
cld
rcl
xor
and
std
cmp
cmp
dec
push
dec
and
ss
(bad)
mov
mov
test
ret
pop
sub
fmul
adc
ins
fld
jecxz
shl
mov
into
mov
imul
push
or
and
icebp
test
je
int3
or
call
scas
shl
cmp
imul
out
int
imul
into
lods
mov
push
bound
cmps
xchg
out
repz
xlat
scas
mov
(bad)
or
sub
inc
pop
nop
outs
stos
das
mov
fild
addr16
xor
shl
dec
hlt
gs
push
icebp
dec
test
jnp
retf
pop
pop
aas
outs
xchg
les
out
imul
dec
out
(bad)
push
mov
cmp
jns
pushf
scas
ret
add
cmp
repz
out
stos
int3
adc
ret
lahf
xchg
test
out
aam
and
xlat
cmp
add
cmps
mov
xlat
ins
imul
shr
adc
sub
jne
push
jg
rcr
movs
lods
push
xchg
mov
xlat
gs
std
stc
lods
icebp
push
aam
or
cwde
mov
pop
add
and
jp
outs
xlat
dec
outs
cdq
cld
stc
adc
mov
push
mov
jg
mov
dec
add
ret
ret
pop
push
out
inc
jbe
scas
ficom
fmul
pop
jbe
mov
mov
hlt
mov
mov
adc
pop
inc
or
pop
jmp
scas
leave
gs
pop
pop
jb
jp
outs
pop
xor
xchg
mov
test
inc
xor
rcl
pop
pop
stos
mov
mov
and
jecxz
int
sub
popf
mov
sub
dec
jnp
cmp
outs
arpl
loop
int3
loopne
mov
xchg
pushf
test
cmp
js
fdivr
dec
pop
ret
jecxz
and
jge
mov
ins
xor
repnz
mov
addr16
jbe
fimul
test
push
jg
sbb
jns
cli
cmp
fnstcw
jno
(bad)
int
jo
pop
retf
mov
int3
shl
jecxz
test
das
mov
(bad)
rol
mov
das
test
fidiv
mov
in
out
xor
mov
inc
in
ja
sar
mov
popf
movs
mov
push
xchg
mov
mov
les
sbb
push
and
js
jl
mov
push
add
or
outs
inc
outs
xor
jns
aaa
pop
xor
sahf
jbe
in
movs
outs
or
mov
jmp
and
in
in
inc
mov
std
mov
mov
adc
push
movs
cmp
fimul
js
lock
mov
jmp
xor
mov
inc
xlat
and
sar
(bad)
xchg
cdq
add
xor
add
pop
(bad)
in
push
(bad)
dec
(bad)
mov
test
fbld
je
xlat
inc
lock
retf
cmp
bound
add
lahf
jno
adc
xchg
cdq
loop
sub
pop
out
xchg
test
in
mov
popf
add
call
call
or
in
xor
adc
add
gs
pop
inc
nop
loopne
loopne
xor
or
test
push
mov
add
sub
psubd
dec
xchg
jmp
xlat
test
jae
pop
cmp
push
dec
xchg
stos
lahf
in
lods
outs
fsubr
sbb
dec
mov
lods
xchg
pop
pop
frstor
scas
jmp
das
jl
les
xor
push
cmp
push
jnp
jl
fisubr
ins
cmp
shl
icebp
jb
mov
xor
xlat
fadd
cld
outs
cmp
iret
out
retf
or
xchg
push
push
loope
pop
mov
sub
sub
int
cmp
call
sub
xlat
push
imul
out
dec
xchg
ins
imul
fsub
or
js
inc
push
inc
fistp
mov
movs
mov
mov
imul
jae
std
(bad)
js
pop
cmp
pop
imul
fwait
pop
xlat
mov
rcr
push
pop
and
xchg
push
dec
sahf
aad
inc
sbb
int
xchg
aas
iret
shl
inc
push
adc
and
imul
in
and
cs
jns
sbb
scas
cmp
add
in
ss
add
aas
sbb
loop
xchg
lds
xor
sbb
mov
xor
dec
mov
push
xor
push
test
sahf
dec
inc
dec
or
cmps
addr16
xor
cli
sbb
fld
push
inc
adc
repz
push
ins
fwait
div
cmc
jle
imul
pusha
cmp
xchg
inc
jmp
gs
(bad)
mov
dec
retf
jmp
rol
pop
add
push
or
add
add
pop
mov
fadd
rol
jb
jno
arpl
add
fsqrt
cli
xor
add
shr
ret
pop
les
jmp
int3
cmps
sub
daa
int
outs
xchg
push
xor
mov
or
inc
fdivr
and
inc
inc
add
je
movs
idiv
or
mov
xchg
inc
mov
add
movs
inc
xchg
lods
loopne
inc
call
sub
and
pop
ds
les
xchg
inc
jg
(bad)
cdq
fsubr
jbe
mov
adc
out
mov
scas
mov
cmps
pop
add
outs
fcom
int3
outs
(bad)
or
data16
mov
pop
jle
cmp
inc
inc
or
es
xchg
retf
mov
mov
dec
(bad)
sar
outs
data16
ret
sbb
sti
jae
jae
repz
(bad)
cld
fldcw
je
mov
adc
adc
xchg
mov
sbb
addr16
les
adc
pop
xor
pop
adc
shl
sub
xchg
adc
add
int
sahf
jecxz
xchg
cs
shl
test
pusha
aaa
int
imul
dec
pop
nop
adc
ja
ins
popf
lea
cmp
loop
mov
cld
and
ficomp
or
aad
sbb
jbe
cmps
in
dec
jl
aad
fs
fist
xchg
gs
sub
std
sahf
test
sahf
js
add
lock
sbb
mov
sub
cdq
sub
sbb
jl
aaa
cmp
or
sbb
inc
jo
outs
imul
jnp
mov
inc
mov
rcr
cmp
add
es
xchg
pop
(bad)
sub
stos
aas
jo
in
cld
add
mov
lods
mov
(bad)
lea
test
fiadd
fidiv
sahf
(bad)
xchg
outs
mov
into
or
fisub
cmps
push
or
clc
lods
movs
lahf
sub
test
fbld
mov
test
imul
add
call
(bad)
xor
frstor
dec
add
sbb
fwait
mov
mov
(bad)
sti
xchg
loopne
mov
jo
int
aas
and
arpl
and
or
rcl
dec
lds
xchg
ja
and
cmps
add
xchg
mov
dec
neg
outs
push
das
and
dec
es
stos
sub
push
and
mov
movs
mov
outs
pop
push
add
inc
test
xchg
push
push
adc
push
dec
enter
aaa
push
sbb
and
test
cli
nop
ins
test
xor
stos
mov
std
xchg
sbb
dec
(bad)
cmp
fist
daa
and
xchg
lods
sahf
xor
xchg
jbe
mov
fwait
(bad)
mov
call
sbb
inc
mov
fsubrp
jp
stos
lods
or
in
rcl
retf
mov
dec
jb
sub
xchg
mov
mov
frstor
int
int3
div
outs
dec
psubb
cmp
sti
ret
jp
inc
fadd
sbb
je
mov
sar
fcmovnbe
sbb
(bad)
push
push
fsubr
cmp
jns
jmp
jle
sti
add
bound
cmps
nop
pushf
pop
daa
add
add
punpckhbw
popf
pop
enter
rcl
and
mov
fs
bound
shl
pop
out
in
retf
mov
jmp
add
adc
pop
mov
jg
hlt
js
push
test
lock
mov
xchg
push
mov
stc
vphaddubq
or
and
addr16
xchg
popa
xchg
lods
retf
pop
fmul
or
cdq
jge
pop
loope
and
fsubr
mov
in
hlt
push
dec
psllw
int
ins
shl
add
adc
out
int
aam
ja
and
das
popa
fucom
inc
clc
pusha
or
inc
stos
fcomp
and
repz
sub
(bad)
cmp
and
sbb
cmps
(bad)
lods
imul
xchg
pop
pusha
xchg
popf
add
(bad)
mov
sbb
jnp
in
cli
sub
adc
in
mov
fs
dec
sub
ds
in
push
daa
pop
add
enter
imul
add
rol
cmp
mov
out
mov
inc
repz
push
imul
xor
hlt
sar
inc
arpl
popa
(bad)
fsubr
cmc
fwait
push
dec
cmp
mov
inc
jbe
xchg
or
fmul
arpl
mov
xor
test
cmp
pop
mov
add
pop
add
cmp
inc
lods
sub
and
dec
sahf
xor
ss
mov
enter
ficomp
push
inc
jecxz
jnp
cli
xchg
ret
fstp
cdq
cmp
cli
cld
aaa
push
jmp
inc
mov
jmp
xchg
sbb
stos
add
pop
mov
shl
adc
ss
cmp
add
dec
data16
sbb
jle
cmp
mov
mov
(bad)
adc
fnstenv
adc
cmc
xchg
mov
mov
xchg
outs
xor
inc
fwait
jae
sbb
pop
cmp
icebp
or
mov
xor
dec
shr
dec
adc
push
and
adc
cmps
jne
xor
inc
add
unpckhps
mov
in
pushf
dec
xchg
pushf
sbb
jbe
mov
jge
sub
and
jl
call
mov
mov
bound
cmp
push
mov
or
xchg
(bad)
in
cmps
neg
inc
jl
pop
mov
push
pop
(bad)
out
inc
cmp
fxch
loop
push
inc
not
inc
test
repnz
fsubr
dec
(bad)
js
(bad)
lods
ror
push
sbb
ins
mov
xchg
sbb
push
out
lea
mov
dec
mov
mov
out
rcl
sbb
mov
push
mov
cmps
movs
or
mov
pop
ins
pop
shr
mov
mov
sub
aaa
mov
leave
pusha
cmp
jecxz
push
xor
mov
mov
je
shl
jle
adc
xchg
xor
int3
in
jmp
xor
jle
pop
sti
cmps
js
into
xor
xor
(bad)
(bad)
jmp
in
out
into
leave
aaa
lods
add
repz
mov
push
push
xor
lods
fs
mov
in
sub
aam
fcom
push
pushw
popf
outs
repnz
icebp
mov
inc
retf
in
xor
mov
mov
cmp
mov
(bad)
dec
sahf
adc
xor
push
mov
pop
push
lods
movs
mov
div
jmp
test
or
mov
xchg
jl
add
lds
and
dec
and
push
out
cmps
jae
xchg
mov
mov
mov
ja
push
lock
outs
les
(bad)
mov
mov
add
faddp
hlt
stos
jnp
mov
test
cmps
and
xor
mov
sub
sub
pop
cli
xchg
push
(bad)
into
stos
mov
inc
pop
ins
lds
dec
mov
cmp
jmp
jmp
jo
int
inc
movs
push
test
or
in
lea
ret
std
mov
aas
ins
and
jmp
(bad)
add
fisttp
lahf
sbb
shr
out
lea
shl
test
imul
xchg
(bad)
mov
xchg
mov
xchg
lahf
add
imul
shl
xor
ret
fdivr
xchg
stc
leave
pop
cmp
xchg
gs
imul
xor
ins
out
xchg
shr
out
ucomiss
jb
gs
mov
mov
dec
and
add
xor
mov
daa
fmul
sbb
and
pop
sub
pop
xchg
push
mov
mov
fs
pop
mov
sahf
icebp
push
mov
mov
jg
ror
jmp
dec
out
mov
or
movs
imul
imul
test
retf
or
fnsave
je
xchg
bound
mov
inc
push
loop
stos
xor
xor
and
fild
aad
adc
xor
mov
mov
inc
inc
rcl
push
jo
or
jmp
and
wbinvd
fist
xchg
int3
sbb
fild
pop
mov
in
xchg
in
ja
jle
adc
daa
cmp
jge
loope
test
adc
mov
mov
mov
rol
cmp
(bad)
vpmacssdd
nop
pop
rcr
cmc
ret
(bad)
fsubp
and
xor
ret
test
dec
(bad)
jns
jne
leave
and
int3
push
call
dec
loop
jge
jns
(bad)
shr
jecxz
inc
xchg
nop
pushf
jno
jmp
jb
addr16
out
shr
mov
iret
nop
test
mov
dec
cmp
xor
or
fidiv
sub
fcmovu
add
retf
in
sub
popf
aam
jmp
xchg
mov
adc
popf
xor
ss
jae
adc
and
xor
adc
js
movs
pop
jl
sub
fimul
jg
pop
outs
ret
rcr
aam
mov
add
push
xchg
add
pop
mov
dec
mov
cli
cdq
or
sar
enter
mov
das
xor
or
pop
cmp
leave
add
and
out
out
sbb
jmp
cmp
or
xchg
mov
dec
std
mov
retf
jo
jmp
stc
lgs
adc
and
pop
dec
fidivr
inc
loop
out
push
push
sbb
mov
or
call
ficomp
sbb
dec
cmp
aaa
ret
sti
les
or
xor
xchg
dec
cli
cmp
enter
mov
rcl
adc
jp
mov
add
inc
mov
nop
xor
popf
xchg
ficomp
loope
jbe
or
push
cmp
push
or
adc
cwde
xor
fild
fsubrp
xchg
(bad)
push
call
xor
mov
in
(bad)
mov
mov
(bad)
push
loope
pushf
in
fadd
inc
into
mov
push
clc
cmp
push
inc
inc
xchg
pop
sub
data16
jb
sub
cmp
push
add
ins
jp
iret
adc
mov
sar
test
ins
mov
push
out
mov
not
in
pshufw
add
stc
lods
bound
test
sti
cli
dec
mov
sub
test
push
test
inc
ret
ds
fnstenv
mov
pop
mov
adc
sbb
cmp
xchg
push
in
inc
sar
or
repnz
pop
retf
fnsave
push
sbb
dec
mov
leave
fwait
jmp
pusha
ror
dec
repz
mov
cmc
jle
mov
sub
mov
inc
inc
mov
test
sahf
push
ins
xchg
repz
and
or
or
adc
outs
jae
mov
inc
imul
push
push
adc
(bad)
js
jbe
jl
icebp
daa
cmp
or
cmp
sbb
mov
movs
mov
fcomip
icebp
jp
cmp
stos
call
pop
mov
and
cmp
dec
cmp
mov
test
mul
sahf
rcl
push
imul
pop
mov
mov
add
xbegin
repz
add
jo
scas
les
mov
loope
push
dec
or
sbb
popf
sub
cmp
xchg
push
mov
push
test
stc
out
jecxz
scas
jo
xchg
xlat
or
or
ins
fild
cli
into
mov
int
in
mov
je
jmp
out
push
mov
fstp
pop
loope
cmp
jno
pop
pop
pop
mov
lahf
xor
adc
mov
rol
xchg
lods
scas
mov
inc
xchg
ss
test
movs
in
inc
cmc
ds
dec
sbb
jne
sub
mov
loope
in
sub
div
repnz
or
(bad)
into
cmp
out
loope
fwait
and
mov
pusha
int
xchg
pop
int
inc
rcl
sbb
pop
xchg
arpl
movs
pushf
jae
push
inc
mov
adc
test
mov
mov
cmp
stos
inc
jg
adc
push
and
arpl
test
int3
aam
test
jb
cld
cmp
and
mov
push
nop
nop
sub
xor
pop
fdivr
mul
jp
adc
xchg
fld
adc
mov
dec
xchg
mov
dec
call
adc
test
repnz
shl
adc
int
jno
out
mov
fdivp
jg
jle
mov
xchg
mov
js
jbe
lods
jae
push
in
xlat
inc
sbb
mov
imul
mov
mov
jge
(bad)
fsubr
aad
shl
add
dec
mov
call
daa
mov
fisttp
int
inc
cmc
mov
dec
cmps
adc
test
sub
sub
dec
pop
xor
neg
sub
sub
and
add
xor
icebp
dec
dec
lds
push
mov
(bad)
mov
loope
xchg
cli
mov
pop
jbe
stos
mov
in
push
(bad)
cmp
jge
pop
lds
mov
call
xchg
out
(bad)
cmp
sti
mov
lds
pop
popa
pop
enter
mov
inc
pop
sub
nop
sbb
mov
adc
pop
xor
sbb
ins
sbb
sub
clc
cwde
(bad)
cwde
xlat
pop
and
xchg
mov
push
jmp
ins
sti
push
mov
push
daa
pop
mov
mov
adc
inc
xchg
push
gs
push
mov
dec
and
and
ja
imul
push
ret
push
jp
test
xchg
mov
cmp
sbb
sar
pop
sbb
dec
xor
xlat
int
jne
fldenv
mov
lahf
mov
cmp
or
inc
push
mov
outs
stos
pop
outs
xchg
outs
xlat
xor
ins
stos
pushf
adc
nop
inc
cmps
xor
outs
mov
mov
cmovs
imul
mov
test
(bad)
xchg
lock
xor
xchg
or
push
or
push
rol
imul
loopne
and
in
je
outs
stos
adc
xor
in
sub
cld
shr
into
lds
popa
add
jbe
mov
or
cmc
aas
in
test
adc
mov
mov
aam
push
sti
jb
out
pop
inc
mov
popf
lea
jle
outs
and
and
jbe
add
mov
add
outs
into
mov
cmp
fdiv
dec
mov
ss
lods
mov
and
adc
scas
xchg
add
fiadd
jmp
mov
adc
push
imul
pop
nop
in
xchg
inc
hlt
push
and
push
cmp
ins
pushf
cdq
push
imul
lods
xor
add
retfw
in
aam
movs
or
fdiv
pushf
jg
pop
jg
fild
ret
mov
cwde
add
mov
out
pcmpgtd
adc
inc
enter
(bad)
pop
pop
dec
add
jno
add
adc
pop
xchg
(bad)
jne
adc
cld
lods
jbe
jmp
loopne
loopne
fucom
adc
outs
retf
data16
xor
push
dec
imul
push
call
add
or
inc
leave
jnp
xor
hlt
out
adc
maskmovq
neg
cld
xchg
inc
inc
imul
mov
dec
sub
pop
dec
test
sbb
dec
and
xor
sahf
(bad)
loop
xchg
mov
pop
cmc
ins
and
pop
mov
jl
call
pop
pop
push
rcr
dec
cmps
rcl
sbb
repz
inc
xchg
jno
adc
push
push
push
or
sub
retf
xor
xchg
fucomi
ins
push
sti
or
cli
pop
mul
add
xlat
dec
sbb
xchg
in
mov
jmp
das
cmps
jge
xchg
lods
inc
mov
sub
push
movs
movs
jae
mov
add
mov
mov
push
lods
imul
fstp
or
push
lea
add
xor
inc
rcr
dec
cld
and
idiv
lods
scas
pop
call
out
sub
push
inc
aam
adc
mov
hlt
sbb
arpl
scas
or
adc
stos
xor
or
std
sub
fcmovu
xor
inc
jmp
jmp
add
sub
adc
pop
fistp
inc
xchg
push
(bad)
cmps
nop
and
xlat
cmp
frstor
clc
(bad)
fild
inc
test
test
movs
fistp
inc
loop
jb
adc
mov
dec
add
bound
(bad)
mov
arpl
or
jns
jecxz
outs
dec
mov
jmp
lds
cmp
addr16
jg
and
ss
mov
xchg
inc
and
ds
inc
std
rcr
sbb
dec
stos
xor
mov
add
mul
xor
adc
rcr
ret
pop
jle
mov
unpcklps
test
lahf
mov
mov
xchg
or
sub
int
dec
dec
add
fidivr
(bad)
xchg
cli
sub
ins
pop
and
sar
nop
cdq
xabort
add
jge
ficomp
mov
into
mov
mov
or
add
inc
(bad)
cld
cmc
adc
dec
jecxz
inc
sbb
push
sbb
jl
xor
aaa
out
mov
mov
lea
loope
xchg
xchg
push
jmp
shl
or
jp
jnp
icebp
scas
and
sbb
in
out
inc
aaa
lock
mov
cmps
out
pusha
fucom
adc
mov
fs
push
add
in
mov
stos
cwde
fld
ss
add
(bad)
sub
bound
xchg
sub
fsub
and
arpl
add
mov
ret
fcomp
jb
dec
stc
out
fidiv
push
fisubr
stc
pop
mov
xchg
fstp
jge
xor
xchg
test
mov
fmul
pop
inc
pop
push
jmp
icebp
dec
pop
sub
xchg
mov
popa
push
mov
jecxz
or
out
mov
cdq
pop
stos
sub
jmp
fidivr
ret
imul
test
xchg
add
jecxz
jmp
test
retf
xchg
add
inc
add
pop
in
and
sub
jb
das
dec
add
out
scas
xchg
out
inc
jecxz
in
jmp
jle
fisubr
stc
sub
sbb
and
pop
jmp
aad
jnp
jno
scas
sub
push
jo
jmp
js
in
mov
adc
inc
dec
xchg
mul
dec
jecxz
out
sub
dec
jecxz
das
cli
mov
mov
push
in
repnz
mov
in
std
clc
sbb
nop
popa
pop
cmp
push
rcl
loope
xchg
pop
rol
xor
pop
push
xchg
arpl
mov
sar
add
fs
dec
daa
bound
push
sbb
movs
mov
xchg
jmp
dec
ins
and
mov
into
sti
aaa
cmp
inc
fstp
sti
call
pop
ds
test
popf
mov
sub
in
outs
retf
cmp
enter
enter
cdq
mov
cmp
push
push
pop
dec
jge
(bad)
cmp
repnz
mov
outs
fidiv
pop
adc
cld
fwait
mov
jb
scas
mov
test
(bad)
std
ins
sub
out
sbb
pop
fiadd
cmps
nop
mov
retf
fwait
sub
sub
cli
mov
movs
ret
(bad)
mov
xchg
out
ror
enter
cmps
sahf
sbb
sbb
pop
xor
mov
dec
sub
je
mov
mov
out
in
mov
push
mov
mov
mov
jmp
jne
and
jecxz
rol
js
mov
idiv
fs
(bad)
mov
and
add
xor
and
pop
xchg
addr16
int3
mov
mov
xor
xchg
sar
sub
mov
into
lods
and
pushf
popa
push
repz
ror
adc
inc
sar
mov
sbb
push
mov
mov
cmp
adc
dec
je
into
or
call
jle
add
repz
inc
rcr
jg
mov
daa
push
sbb
push
loopne
ss
dec
jl
push
out
nop
xchg
(bad)
inc
ds
aad
sbb
mov
pop
sbb
ja
adc
mov
adc
add
mov
pop
inc
retf
mov
js
jb
sbb
add
xor
test
inc
jae
lds
inc
push
int3
test
jno
cwde
push
inc
mov
sbb
popf
cli
(bad)
shl
ret
mov
inc
mov
cs
mov
std
inc
sub
imul
sbb
push
push
cmp
mov
icebp
adc
fsub
sub
or
and
mov
xchg
xor
ss
repz
pop
arpl
mov
inc
cmp
leave
xchg
inc
sbb
icebp
xchg
add
pop
dec
or
mov
push
mov
sbb
xchg
daa
adc
in
pop
push
adc
mov
out
pusha
aam
out
push
cwde
xchg
fs
add
add
and
and
outs
in
jae
push
pusha
push
push
add
clc
fsub
cwde
shl
in
mov
jl
xlat
stos
jle
pop
out
inc
ret
add
repz
pop
pusha
or
repz
retf
push
pop
and
es
jmp
frstor
ficom
int3
pop
ja
mov
mov
xor
mov
pop
jecxz
add
mov
jge
cs
cmp
sahf
in
push
xor
push
and
fs
jmp
aaa
sbb
push
mov
nop
mov
js
loop
or
jo
call
mov
adc
retf
mov
push
mov
mov
push
mov
add
inc
bound
std
sbb
mov
cmp
mov
rol
or
ror
aas
jp
das
push
cmp
add
loope
add
xlat
(bad)
xchg
call
push
push
jb
adc
mov
pop
push
dec
gs
push
test
mov
retf
adc
sbb
add
enter
cmc
mov
fcomp
mov
mov
push
xchg
(bad)
cld
out
aad
mov
cmp
mov
les
ja
xchg
push
out
sti
pop
push
xchg
pop
push
repnz
sub
and
lahf
cmps
pop
clc
cli
and
stos
movs
xchg
add
test
out
ins
sub
push
sbb
enter
retf
jmp
movs
fld
sub
push
cmp
push
push
mov
arpl
in
mov
cmp
cmp
aad
idiv
push
fistp
clc
pop
xchg
jns
sbb
dec
dec
shl
fsub
rcr
mov
mov
aam
add
aad
adc
xchg
nop
call
shr
fmul
or
aas
mov
inc
in
pop
adc
dec
pop
out
int3
jp
jge
dec
test
jle
inc
push
and
(bad)
shl
add
dec
dec
daa
sub
and
std
and
ds
mov
mov
jnp
jp
sub
cmc
popa
mov
aam
in
cmps
mov
and
mov
sbb
mov
outs
mov
shr
fsubr
mov
push
pushf
hlt
pop
arpl
xor
push
sub
cmp
out
add
xor
adc
mov
sbb
stc
dec
movs
pushf
or
xor
cs
arpl
mov
xchg
test
mov
out
jne
bound
call
or
xor
fiadd
in
dec
pop
nop
push
inc
xor
js
mov
test
sbb
neg
push
inc
(bad)
push
(bad)
mov
enter
imul
lods
daa
adc
cld
xlat
(bad)
(bad)
movs
aas
push
clc
call
xchg
in
adc
mov
ss
or
add
neg
(bad)
cli
xchg
sbb
mov
aam
loope
or
xchg
lods
pop
movups
int
dec
or
and
xchg
sub
nop
and
sti
cmp
adc
lds
jp
les
out
mov
ror
add
popf
shl
mov
cmp
js
and
int3
retf
outs
sbb
mov
push
rcr
call
in
pop
mov
cld
xchg
adc
(bad)
stc
je
movs
sar
xchg
mov
pop
outs
and
sbb
xchg
mov
neg
sub
fiadd
push
aam
ffree
cli
add
and
aaa
sahf
rcl
and
jmp
and
lock
mov
push
inc
mov
retf
dec
xchg
aam
mov
(bad)
rcr
shl
cli
mov
mov
out
cmp
adc
inc
xchg
pusha
push
cli
jmp
cmp
ins
daa
inc
mov
scas
imul
jp
int
fs
and
adc
dec
adc
or
fwait
(bad)
dec
xchg
xchg
iret
ins
sbb
aad
je
mov
fcom
ror
adc
outs
and
aad
mov
div
pop
lahf
add
cli
jnp
mov
jo
sub
loopne
shl
push
push
cmp
test
lds
shl
xor
sbb
cmp
lea
or
pushf
jmp
add
xchg
into
jne
clc
out
xchg
xchg
out
rcr
shl
cmps
mov
inc
or
(bad)
js
push
sar
cmps
add
push
pop
xchg
cmps
nop
and
mov
jge
sub
jae
mov
ret
xor
icebp
push
cmp
jae
adc
sahf
xchg
mov
clc
icebp
add
repz
js
add
in
loop
in
lods
push
jle
dec
dec
rcl
repz
test
jmp
push
xchg
pop
fcomp
jno
pop
adc
xchg
xchg
dec
pop
jno
in
add
call
lahf
jecxz
and
add
jle
nop
arpl
outs
mov
lods
jmp
or
add
push
pop
ins
dec
sahf
leave
ja
loopne
in
sub
imul
test
aas
xchg
outs
xor
cmps
pop
pop
or
xchg
dec
push
add
inc
retf
jae
pushf
in
test
out
sbb
jg
push
mov
jbe
mov
movs
inc
mov
outs
mov
pop
inc
jl
lods
add
sub
xchg
mov
sbb
out
jno
js
cmp
hlt
cmp
ins
loop
out
cmp
push
outs
xchg
push
push
dec
and
hlt
in
xchg
sbb
jecxz
inc
aaa
adc
and
arpl
cmp
shl
jg
test
shl
movs
jmp
mov
pop
or
mov
cvttps2pi
sahf
xchg
mov
jo
dec
cmp
leave
bound
loopne
jmp
(bad)
mov
(bad)
mov
jb
push
sysret
lahf
add
or
inc
enter
movs
fisttp
loope
and
jmp
pop
movs
cmp
daa
stos
mov
in
fstp
adc
int3
std
xlat
inc
(bad)
out
jmp
or
shl
dec
adc
data16
mov
mov
call
push
iret
cmp
sub
inc
pop
int3
add
xor
movs
jne
arpl
cdq
jae
pop
sub
out
adc
mov
ins
xchg
ins
xchg
jmp
or
and
in
ror
cmp
sub
mov
mov
mov
sbb
cmp
dec
ins
test
push
sbb
or
add
push
jmp
pushf
or
test
sbb
je
cmp
inc
xor
call
push
inc
jmp
pop
jmp
sbb
jnp
ds
out
jmp
outs
loop
hlt
push
xor
push
int
xor
jmp
fisttp
loope
jmp
sbb
je
dec
jge
mov
and
ja
addr16
adc
leave
lea
mov
and
mov
in
inc
add
sub
jge
jno
cld
fisttp
fstp
cmp
cmp
sbb
sub
hlt
arpl
and
icebp
push
cld
clc
mov
popf
fnclex
popf
jecxz
(bad)
adc
add
jns
fwait
imul
xor
mov
repz
ds
repnz
push
push
jmp
test
int3
in
data16
int
test
popa
inc
dec
jb
xchg
cld
(bad)
imul
fmul
scas
(bad)
mov
jecxz
bound
fcomp
daa
mov
ins
fldenv
push
cmp
imul
arpl
push
fcmovb
jb
popf
xor
repz
ins
pop
test
push
mov
lahf
and
retf
out
das
sub
(bad)
(bad)
daa
addr16
pop
mov
in
xchg
movs
ret
push
push
ins
cmp
sahf
and
icebp
ret
cs
mov
inc
retf
and
push
mov
or
mov
ds
int
out
pop
outs
mov
jle
and
int3
(bad)
rcl
out
pop
enter
popa
inc
nop
xor
lock
mov
jecxz
add
cwde
bound
adc
or
lods
push
mov
jg
scas
or
fsubr
add
lea
push
lods
(bad)
xor
aas
lahf
out
pop
hlt
add
jbe
leave
dec
(bad)
cmps
inc
clc
mov
inc
xchg
jbe
xor
lock
dec
add
xlat
cmp
leave
jl
mov
sbb
loop
add
sahf
jmp
pop
cmp
mov
mov
mov
push
into
addr16
mov
sbb
div
(bad)
jnp
mov
call
popf
je
mov
dec
xchg
retf
fsub
or
mov
repnz
outs
xchg
test
fs
lods
data16
jns
cmps
test
inc
sbb
jg
test
add
inc
dec
mov
sbb
mov
push
out
cld
mov
hlt
mov
stos
leave
pop
add
sbb
xor
sbb
adc
mov
pop
cmp
(bad)
fcomp
pop
and
sbb
cmp
xchg
clc
dec
xlat
ins
or
cmp
jbe
imul
sbb
in
mov
xchg
mov
jmp
ret
inc
push
add
gs
dec
sti
ins
push
std
cmps
add
(bad)
xor
xchg
fisubr
xor
xor
in
jle
(bad)
scas
(bad)
in
and
jmp
cwde
fbstp
jo
repnz
lods
add
sub
lea
jb
cmp
jg
adc
into
pushf
pop
inc
jle
sub
sbb
inc
add
push
addr16
mov
pop
pop
dec
repz
mov
inc
dec
mov
add
cdq
in
mov
arpl
out
stc
or
das
or
inc
push
aam
jne
shl
mov
cli
fwait
inc
dec
cmps
sub
ss
ffreep
xchg
push
ret
out
mov
jmp
or
shl
or
jns
dec
rcl
pop
hlt
cmp
cmc
inc
iret
jo
cli
sub
mov
das
je
test
push
or
jne
loope
add
(bad)
push
dec
retf
call
xchg
inc
daa
lds
and
cmp
pop
clc
mov
xlat
jmp
xchg
call
fld
loopne
js
ret
mov
outs
pop
pop
xlat
stos
lods
fidiv
out
repz
sub
mov
pop
xor
pop
cmp
stos
mov
jecxz
mov
pop
jbe
mov
mov
ret
movs
(bad)
cdq
shl
int
mov
loop
jmp
(bad)
xchg
and
push
cmp
iret
cmp
repz
pop
(bad)
pop
cmps
retf
into
ja
(bad)
call
bound
out
add
add
inc
fld
mov
rcl
xchg
add
and
mov
xchg
call
popa
es
cmp
ror
fadd
xchg
cmp
fdivr
and
out
pop
shl
adc
clc
xor
iret
enter
cmp
nop
inc
aam
xchg
sub
in
or
xor
push
fdivr
push
test
add
adc
or
inc
mov
dec
dec
pop
add
xchg
fistp
shr
sbb
and
jb
add
arpl
scas
stc
in
loopne
and
ins
or
jecxz
jnp
fnstsw
sub
cmps
pop
mov
es
pop
xchg
or
call
cmps
pusha
pop
sbb
in
fdivp
push
adc
inc
sbb
je
pusha
jl
mov
jmp
mov
sar
xor
int
xchg
and
shl
pop
mov
inc
(bad)
jb
sub
add
jns
sbb
into
mov
or
sahf
push
mov
inc
sub
jle
jecxz
stos
mov
int
pop
or
mov
popf
and
hlt
xor
mov
sbb
in
and
and
inc
jl
outs
sub
add
repnz
stos
inc
mov
add
in
ret
cli
mov
icebp
pop
aam
mov
popa
out
and
das
cmps
xchg
adc
inc
dec
ja
jb
inc
pushf
pop
pop
adc
xchg
xor
mov
xchg
and
jno
dec
das
dec
clc
(bad)
sub
fld
adc
mov
xlat
add
imul
mov
jb
inc
ret
and
stos
adc
(bad)
std
in
pop
test
daa
xor
(bad)
push
dec
dec
aaa
lods
test
jno
outs
jg
sub
rol
sub
scas
push
pop
mov
popa
ss
jae
ins
lds
aad
daa
les
cmps
cld
test
sbb
or
gs
fbstp
mov
pop
repz
fs
sub
mov
mov
std
jnp
push
sub
iret
rol
rcl
repz
jge
call
cmp
inc
lods
xor
scas
push
loop
fwait
push
sahf
repz
aas
bound
scas
test
test
pusha
cld
pop
or
mov
aaa
push
addr16
call
jge
psubsw
lods
jg
xchg
jg
adc
pop
adc
cli
das
fcomp
xor
call
pop
jno
push
sub
lock
or
add
rcl
sar
icebp
push
and
xchg
inc
or
iret
fsubr
add
push
fs
daa
push
pop
fwait
xchg
sbb
adc
hlt
nop
pusha
fs
dec
mov
push
fst
loopne
fwait
loop
aaa
push
jnp
jl
push
push
push
push
adc
inc
bound
mov
jo
(bad)
jmp
in
scas
sar
ret
in
lock
push
mov
out
xor
inc
cmp
add
mov
pop
mov
into
cwde
mov
out
into
ja
imul
xlat
dec
and
call
cdq
scas
test
mov
es
jno
jbe
test
add
das
push
dec
jns
in
data16
jo
or
xor
cmp
mov
loopne
fs
icebp
dec
icebp
int
push
mov
pop
mov
dec
push
ret
in
push
into
cmp
jns
xchg
sub
cmp
mov
pushw
imul
lahf
xchg
call
rcl
out
int
(bad)
lock
dec
cwde
xchg
ja
imul
sub
aam
es
cmp
stc
jmp
inc
inc
dec
clc
cmp
xchg
outs
das
and
rol
sub
outs
xchg
(bad)
scas
push
push
xchg
adc
sub
inc
push
jecxz
mov
rcl
adc
xor
mov
stos
(bad)
cmps
retf
mov
push
add
in
xchg
adc
jne
xor
loop
jns
jb
inc
and
dec
sub
sub
pop
dec
lds
dec
fcom
xor
les
or
dec
cmp
jbe
sub
movs
(bad)
xor
and
xor
test
sbb
xchg
shl
mov
lds
(bad)
shl
xchg
push
in
pop
repz
fincstp
fsub
xor
mov
pop
mov
cmovb
sub
mov
pop
(bad)
cmp
hlt
jl
jae
daa
nop
popf
ins
add
stos
dec
and
les
aas
lahf
jb
gs
call
stos
cmc
push
inc
test
jle
inc
dec
xchg
ins
xor
les
mov
div
cmp
mov
xor
cmp
fist
pop
jle
loop
stos
daa
sub
sti
mov
movs
dec
adc
xor
(bad)
jmp
in
jbe
imul
xchg
cmp
mov
lods
adc
inc
push
adc
(bad)
dec
xchg
arpl
cmp
cmp
outs
push
outs
lea
dec
mov
jne
adc
sbb
das
outs
sar
add
fdiv
cmp
call
rcr
cld
ins
push
push
cmp
test
xlat
cmps
rol
imul
dec
jp
mov
xor
(bad)
fxtract
bound
test
sbb
in
cmp
push
inc
popf
cmc
repnz
rcl
xchg
out
jnp
push
sub
fyl2x
addr16
cmps
lods
xlat
inc
or
cmp
sbb
addr16
add
sub
add
xor
or
jp
sub
pop
outs
add
lods
xor
and
or
mov
imul
call
es
scas
xor
imul
cmp
jmp
(bad)
dec
iret
test
arpl
pushf
movs
outs
hlt
rcr
xchg
cmc
sahf
dec
xchg
lea
sbb
and
clc
mov
cmp
jmp
inc
loope
ins
mov
jae
adc
jno
mov
lea
leave
(bad)
movs
pop
retf
push
int
cmp
xchg
ret
push
xchg
arpl
mov
gs
dec
loopne
lods
sub
dec
inc
bound
(bad)
xchg
pop
mov
iret
cmp
and
icebp
rcl
ret
add
xor
mov
movs
sub
push
nop
jle
jno
jno
outs
push
cmp
retf
pop
fisubr
jnp
enter
jge
xchg
mov
mov
pop
or
xor
loope
xor
mov
into
stos
out
int
(bad)
lea
hlt
inc
push
(bad)
popa
sub
pop
ret
push
mov
ja
mov
outs
fdivr
and
imul
inc
push
lea
retf
das
xor
int
xor
sbb
hlt
ret
push
inc
es
adc
push
adc
pop
data16
push
mov
mov
xchg
inc
loop
hlt
gs
loope
sub
imul
int3
jnp
and
loopne
cmp
adc
adc
push
lds
(bad)
lods
pop
push
xchg
fcom
dec
fisttp
mov
fnstcw
dec
outs
ret
scas
ficom
lods
aad
inc
xchg
or
daa
(bad)
rcr
mov
imul
push
inc
fst
mov
add
int3
push
jecxz
and
mov
xchg
pusha
in
inc
add
pop
call
cwde
jge
aas
add
or
psubsw
test
push
mov
les
sbb
lock
arpl
data16
pop
mov
call
mov
call
adc
jg
call
call
lea
jmp
daa
pop
jo
cmps
popf
imul
mov
es
test
iret
mov
mov
(bad)
scas
das
mov
or
pop
ret
dec
out
lds
daa
mul
pop
mov
add
xchg
inc
mov
hlt
mov
enter
push
dec
jno
xor
mov
and
cmps
inc
jmp
add
outs
fldenv
aaa
fisttp
or
mov
jl
sbb
cmp
int3
or
fsub
or
dec
cmp
loopne
out
addr16
cmp
inc
xor
sbb
xchg
dec
ret
and
adc
imul
jne
imul
sbb
aas
dec
arpl
or
add
xor
mov
aas
add
lods
fst
fcomip
in
sbb
pop
fsubrp
test
and
sbb
jl
shl
div
ins
jno
sar
aam
lock
out
scas
enter
push
test
in
pop
pushf
sub
scas
mov
out
sar
adc
(bad)
lds
push
shr
std
sub
xchg
inc
push
rcr
sbb
push
xchg
clc
cmp
xor
cmp
popa
push
int3
jne
mov
mov
mov
jecxz
dec
pop
jns
mov
(bad)
and
movs
imul
xchg
adc
in
and
add
and
jns
lahf
in
rcl
in
or
mov
gs
int
jae
(bad)
fsub
adc
mov
test
inc
mov
dec
fcomp
retf
mov
jl
sar
outs
(bad)
or
out
cmp
mov
push
mov
xlat
jno
jl
mov
(bad)
loopne
test
mov
popa
dec
ds
sub
sub
ds
imul
retf
(bad)
cmp
cmp
sbb
(bad)
imul
ror
aam
sbb
and
cmp
xchg
mov
aam
pop
add
out
mov
add
shl
(bad)
gs
mov
mov
aaa
mov
mov
(bad)
movs
cwde
mov
in
adc
cwde
cmp
dec
adc
push
imul
xchg
push
into
sbb
clc
mov
jae
popw
xchg
neg
cld
mov
int3
xchg
out
cmp
push
add
leave
cmps
adc
fs
ret
push
int
call
shl
fidivr
shr
pop
or
inc
(bad)
or
or
shl
mov
jo
jecxz
jl
retf
push
push
call
addr16
cli
xor
ret
cmp
scas
sbb
ins
(bad)
popa
push
mov
jmp
push
push
(bad)
scas
jmp
es
sub
loopne
xchg
cmps
out
dec
jg
sub
pop
jne
stos
movs
pop
cmp
add
pop
arpl
xchg
call
lock
and
int3
stos
pop
dec
lea
shl
out
cmp
lea
pop
fnsave
push
xchg
movs
lods
mov
lahf
ins
mov
aam
jg
or
sti
jl
dec
ja
inc
push
mov
fidiv
dec
pop
dec
popf
cmp
xchg
xor
add
cmp
adc
mov
out
and
ror
cmp
sbb
gs
addr16
mov
pop
pop
fcomp
push
idiv
rcl
inc
jle
and
push
push
in
cmc
inc
mov
movs
sub
add
or
test
mov
sbb
imul
and
and
js
push
outs
aas
ss
push
je
lods
leave
pusha
cmp
add
mov
cmp
clc
ss
add
cs
pop
rcr
cmp
push
add
inc
mov
push
xor
in
xchg
adc
inc
aaa
int
imul
jle
test
mov
push
jbe
jl
dec
ds
inc
call
mov
cdq
aam
push
icebp
pop
and
mov
and
sbb
sbb
(bad)
leave
retf
mov
pop
in
sub
cmps
sbb
stos
pushf
adc
mov
jmp
push
mov
push
mov
lock
in
pop
sbb
out
fs
shl
xor
out
data16
je
test
mov
aaa
fstp
cs
push
mov
mov
xor
ror
les
fs
mov
loop
dec
sub
xlat
push
sub
and
xor
(bad)
mov
mov
call
sub
mov
cdq
mov
sbb
jno
in
dec
into
into
xchg
inc
jl
adc
fcomi
mov
pop
sbb
mov
das
dec
sbb
add
push
repz
neg
ins
daa
hlt
lods
mov
mov
jb
and
mov
push
fisub
jge
fs
arpl
jmp
dec
rol
jmp
lods
and
or
js
popf
outs
cmc
sub
ret
sbb
mov
inc
mov
mov
adc
fcomp
jno
xlat
dec
test
hlt
sub
push
jbe
(bad)
es
ins
push
add
xchg
adc
dec
mov
adc
xlat
rcr
jecxz
std
sbb
add
(bad)
jecxz
mov
imul
inc
ins
fdivr
fdiv
std
mov
fnstsw
add
ret
ss
push
sbb
xchg
retf
inc
cmp
push
push
add
inc
xchg
or
rcl
xor
out
ror
jge
jne
pop
mov
or
mov
(bad)
inc
sbb
fwait
addr16
xchg
and
cmps
test
xchg
pop
outs
inc
mov
inc
imul
jge
fmul
xor
jle
push
pop
jbe
fwait
or
xchg
or
int
call
add
pop
pusha
in
mov
retf
retf
mov
cli
push
repz
jmp
pop
fnstenv
pop
inc
sub
dec
loope
in
jge
adc
pop
stos
or
push
xor
inc
in
pop
call
int3
push
stos
shl
or
jmp
or
fsubr
and
aaa
enter
mov
jo
aaa
push
xchg
out
cs
sahf
int
and
jge
or
imul
aam
jae
movs
test
mov
adc
lea
scas
mov
xor
dec
stos
sbb
pop
mov
mov
mov
mov
bound
push
and
in
vpmacswd
jo
add
imul
iret
std
xchg
scas
jg
push
adc
dec
(bad)
push
add
(bad)
je
mov
dec
cmp
or
xchg
and
popa
idiv
iret
cwde
dec
xor
cld
sub
(bad)
push
push
xchg
sbb
out
pop
in
cld
sbb
and
dec
movs
(bad)
aam
sbb
mov
ds
jmp
loopne
adc
mov
into
jg
imul
call
(bad)
pop
lea
or
jbe
mov
or
jle
sbb
sbb
xor
pop
dec
outs
pop
inc
mov
popa
mov
fidiv
sub
push
rcl
popa
mov
cmp
les
dec
hlt
cmp
test
fldenv
out
mov
push
push
inc
aaa
fcom
shl
add
(bad)
ja
je
dec
xor
or
ja
inc
jo
rol
or
sti
jbe
out
mov
jnp
jnp
fiadd
pusha
sbb
dec
aaa
xchg
stos
add
xor
jno
inc
and
js
xor
xchg
push
mov
nop
std
and
jae
leave
sbb
fwait
mov
mov
pop
dec
adc
pusha
adc
test
arpl
add
aas
inc
aaa
stos
cmp
in
dec
inc
rol
or
das
jbe
out
inc
ficomp
ror
icebp
jp
fs
inc
scas
mov
mov
xchg
xor
mov
mov
jge
mov
sbb
pop
xchg
push
cmp
dec
push
in
jnp
add
cmps
call
sub
or
pop
dec
mov
and
mov
push
mov
jle
rcl
hlt
mov
jns
and
sbb
push
adc
cmp
inc
jp
inc
mul
and
adc
sub
or
data16
repnz
scas
xor
repnz
test
adc
je
add
cmp
jne
mov
xchg
mov
es
jne
aaa
push
cmp
cmp
retf
jnp
inc
push
adc
inc
xchg
pop
sub
push
(bad)
or
je
jge
pop
out
mov
fdivr
test
repnz
dec
pop
jnp
in
jmp
movs
xchg
inc
mov
jno
mov
lea
pop
mov
aaa
mov
adc
in
out
js
mov
mov
inc
adc
and
mov
scas
adc
pushf
cmps
ja
imul
xchg
icebp
mov
sti
int3
sub
lahf
(bad)
fstp
fistp
mul
(bad)
fist
aaa
nop
xchg
xor
jmp
arpl
mov
pcmpeqb
jp
push
push
mov
cmp
leave
add
sbb
sbb
dec
mov
xlat
xchg
ja
mov
inc
and
jns
imul
jnp
movs
sub
lea
popf
(bad)
cmp
jmp
out
je
daa
adc
pop
sub
adc
aad
add
jp
fisttp
or
inc
inc
mov
jne
ret
xchg
mov
aaa
test
xchg
shl
dec
mov
pusha
dec
icebp
pop
add
xchg
push
sub
mov
and
(bad)
lea
shl
lahf
sub
daa
cmp
retf
ja
mov
pop
cmovo
rcr
cmp
ja
(bad)
push
outs
(bad)
cli
pop
jb
xor
inc
mov
cdq
add
sbb
jae
fadd
or
lea
push
outs
(bad)
jle
(bad)
sbb
lahf
jbe
rcl
fldpi
sbb
fist
ins
push
mov
push
loopne
ficomp
xor
into
sub
sub
inc
shl
inc
lea
xor
mov
imul
in
sub
fcomi
movs
movs
test
mov
push
sub
dec
ja
cmp
outs
mov
add
out
push
je
dec
fisttp
lods
cmc
sub
lods
in
nop
add
push
sbb
(bad)
imul
add
cwde
push
adc
xchg
and
fcom
cmp
add
mov
enter
(bad)
mov
call
sbb
add
ret
push
movs
mov
sub
into
shr
adc
clc
imul
adc
mov
dec
add
sub
ss
lods
jge
mov
cmp
xchg
std
arpl
sub
pop
(bad)
dec
add
pushf
sub
push
(bad)
int3
mov
xor
in
icebp
(bad)
push
cld
stos
mov
dec
inc
sbb
test
mul
hlt
pop
jbe
pop
js
shl
cmp
xchg
inc
mov
sti
call
in
aad
sub
mul
sbb
jl
mov
jnp
je
into
in
inc
hlt
loopne
xchg
xor
push
loopne
stos
mov
lock
sahf
add
ins
push
sbb
jo
or
push
xchg
mov
adc
add
xchg
or
popa
or
lock
inc
sar
ins
leave
jmp
lsl
(bad)
gs
and
mov
jp
(bad)
cmp
adc
xor
and
into
es
cmps
aad
sbb
sti
inc
mov
push
add
leave
aas
jnp
mov
xchg
outs
in
xor
arpl
inc
sbb
cli
mov
add
push
xlat
fimul
pop
mov
pop
sbb
cmps
jl
fwait
jmp
adc
push
mov
jno
pop
push
pop
cmp
cmp
inc
imul
or
jb
cmp
or
cmp
mov
movs
popf
cmp
xchg
dec
jmp
aad
add
fdivr
icebp
out
aam
adc
rcr
sahf
or
sub
push
shl
addr16
icebp
(bad)
ja
dec
and
bound
movs
or
nop
and
inc
fwait
lods
lods
dec
jno
fild
ficomp
in
mov
fiadd
xchg
jno
push
add
xchg
add
repnz
enter
mov
push
test
test
loop
call
xchg
and
mov
out
or
fnstcw
bound
cmps
pop
dec
outs
mov
sub
scas
loopne
fldln2
and
mov
movs
adc
aam
cmps
sbb
cmp
ins
mov
xchg
sahf
mov
and
ins
repnz
xchg
lahf
nop
je
loop
push
push
sub
cmps
push
mov
add
xor
nop
adc
mov
shl
pop
aam
mov
fidivr
retf
mov
mov
sub
in
pop
mov
mov
inc
pusha
dec
clc
popf
xchg
scas
jecxz
stos
push
retf
por
out
xchg
(bad)
(bad)
dec
pop
mov
push
arpl
in
and
shl
jl
call
jnp
sub
mov
inc
imul
lea
(bad)
cmp
outs
out
int
imul
inc
mov
push
push
pop
cdq
js
es
sbb
dec
rol
and
jmp
scas
sbb
xor
cmc
add
retf
call
push
lds
cmp
lods
xchg
loope
mov
jo
imul
dec
(bad)
mov
int
lods
pop
in
lahf
or
shr
ficomp
push
lods
mov
jnp
cld
push
inc
dec
int3
dec
dec
mov
xor
jb
jl
sub
xchg
adc
sub
lods
dec
cdq
mov
fild
shl
add
cmp
mov
dec
fdiv
inc
xor
gs
das
xchg
adc
pusha
movs
retf
(bad)
adc
loopne
pop
inc
fmul
inc
sub
inc
xor
inc
mov
jns
pop
pop
mov
jns
jae
push
and
sbb
sub
and
lods
pop
and
add
or
mov
out
in
popa
xor
das
or
dec
jmp
jmp
pop
fiadd
jge
aad
push
ss
sbb
movs
fist
pushf
fcmovne
mov
cwde
std
jge
xchg
fmul
neg
pop
ror
xor
pop
inc
cld
shr
push
test
or
sub
push
das
mov
xor
sub
call
jmp
adc
(bad)
enter
xchg
lfs
xlat
movs
cmp
jecxz
scas
inc
mov
xchg
mov
sub
mov
nop
add
pusha
dec
icebp
dec
mov
mov
not
fisttp
gs
shr
repnz
and
outs
mov
pop
mul
ficomp
xlat
mov
cmps
add
jmp
and
retf
pop
jp
adc
xchg
mov
sub
iret
js
sbb
jne
dec
or
and
(bad)
xor
iret
inc
stos
bound
pop
iret
adc
adc
mov
ret
ds
add
or
rcl
out
lahf
sub
dec
pop
fs
or
or
xchg
std
or
xchg
jae
mov
imul
cmp
loope
push
adc
xchg
push
cmp
imul
mov
jb
sub
scas
mov
inc
ins
loopne
lods
and
call
inc
mov
pop
or
aas
xchg
sbb
and
and
cmp
xchg
mov
inc
stos
cmp
mul
xchg
ins
jmp
cli
fdiv
cmp
add
mov
imul
ficomp
arpl
jns
cmp
push
sbb
mov
mov
dec
jle
jb
lods
aad
retf
jmp
ins
jae
inc
xor
jmp
jmp
gs
outs
jecxz
and
mov
loope
les
push
mov
out
jp
jb
test
inc
(bad)
jp
dec
pop
pop
imul
cld
add
mov
dec
jle
ins
adc
mov
push
div
nop
lea
dec
pop
sub
cmp
add
mov
repz
mov
xor
cmp
ror
repz
push
ret
xlat
cdq
adc
and
loopne
loop
jl
mov
scas
xchg
lahf
ret
or
or
add
das
mov
jnp
inc
and
cs
sar
add
cmps
das
(bad)
rcl
ins
xchg
jg
sub
adc
dec
sub
imul
mov
adc
shl
(bad)
jnp
ret
cmp
cmp
mov
xchg
xchg
mov
loopne
bound
rol
push
xlat
cmp
out
scas
dec
xor
daa
xchg
push
in
pop
pop
xor
bound
out
cmp
in
add
movs
stos
pop
jnp
lods
add
ds
pop
loope
add
pop
pop
xor
(bad)
and
sub
or
call
sti
jb
and
loope
dec
push
cmp
mov
js
mov
xor
push
lahf
mov
add
daa
into
push
and
sbb
cwde
test
(bad)
mov
inc
mov
les
gs
mov
rcr
adc
jp
stc
sub
jnp
mov
pop
push
repz
div
arpl
pushf
fcomip
outs
cmp
stos
call
cmp
push
xor
mov
clc
scas
inc
and
push
mov
inc
push
jg
adc
(bad)
enter
cld
dec
xor
mov
fadd
into
out
out
push
cwde
pop
into
aam
ins
mov
scas
stos
aaa
push
loop
outs
mov
data16
test
and
int
inc
sar
sub
xchg
xor
mov
stos
mov
dec
cmp
mov
xchg
sub
aad
scas
loopne
push
jno
push
into
mov
mov
mov
jmp
popf
sbb
and
xor
sub
out
popa
xor
std
js
xor
psubsb
hlt
jl
sbb
je
jecxz
push
cmp
bound
sub
repz
push
mov
xlat
and
test
xor
and
jb
add
pop
mov
sub
fsubr
dec
jae
inc
cwde
push
sbb
mov
stos
sbb
dec
retf
jae
hlt
loop
gs
jle
ja
mov
and
sbb
pop
jne
imul
mov
xor
ror
jp
das
mov
sar
adc
jmp
dec
neg
out
xor
ja
or
outs
aaa
in
jne
icebp
fcmovnu
jp
adc
in
loop
cmps
sti
pop
adc
test
cmps
pop
idiv
lea
mov
std
ss
jmp
pop
sub
cmps
mov
push
jo
adc
sti
dec
clc
fld
lahf
retf
add
mov
sbb
mov
push
and
fucomip
sbb
fcom
inc
dec
test
cs
add
xchg
pop
and
add
sti
nop
pop
fwait
or
fldenv
cli
scas
and
add
push
rcl
stc
pop
mov
or
xchg
addr16
int3
dec
add
shl
pop
rcl
xchg
cwde
inc
out
(bad)
xchg
(bad)
movs
lahf
inc
jecxz
jbe
sbb
jnp
mov
jb
idiv
arpl
(bad)
cs
add
movs
seto
adc
data16
outs
jno
enter
jno
jne
sar
daa
loopne
inc
leave
fmul
xlat
adc
cmp
sbb
mov
stc
fcmovbe
add
sub
es
movs
retf
pop
inc
mov
jno
enter
or
out
sub
mov
outs
inc
ja
out
inc
in
and
es
outs
outs
sar
mov
loop
loop
and
loopne
xor
pushf
adc
sub
adc
pop
and
sbb
rcl
ret
out
je
jmp
test
or
fcom
or
das
repnz
sub
(bad)
cmp
arpl
xor
call
mov
dec
sbb
inc
ret
cli
jge
xchg
xchg
inc
inc
mov
xchg
loope
push
es
cmps
cmp
std
test
setnp
std
dec
popf
jmp
and
jns
sahf
je
ja
xchg
mov
icebp
sub
mov
adc
fist
cmc
test
mov
cwde
cmc
retf
jnp
(bad)
pushf
ficomp
sub
mov
jno
lock
mov
popf
inc
or
pop
paddusw
sub
adc
retf
jle
frstor
shl
jl
xchg
add
nop
cdq
jp
rol
pop
sbb
mov
xchg
pop
pop
push
jno
int
sub
dec
pop
pop
aas
xor
adc
cmps
xor
call
jmp
cwde
and
push
mov
xchg
pop
fstp
imul
fisttp
movs
movs
pop
call
into
fs
dec
test
scas
xor
add
iret
into
inc
gs
jmp
push
fist
in
and
aam
inc
xchg
ins
sbb
adc
xor
je
push
sbb
movs
mov
outs
xor
dec
mov
ds
push
in
sar
and
es
mov
in
mov
jge
por
ins
push
pop
add
retf
mov
pusha
cmps
int
or
arpl
jp
repz
clc
pextrw
pop
fndisi(8087
ret
es
mov
sbb
in
adc
repz
sbb
into
dec
pop
jns
data16
push
in
cmc
ret
(bad)
fisubr
inc
sub
fidivr
(bad)
mov
fnstcw
pop
cdq
je
sbb
adc
sahf
(bad)
repnz
push
pop
fcmove
in
or
movq
mov
lods
push
pop
mov
push
jno
lock
add
inc
xchg
shl
and
sub
retf
fmul
add
xor
pusha
xchg
dec
in
pusha
push
loop
xchg
inc
mov
in
lea
nop
(bad)
pushw
mov
out
mov
xor
sbb
adc
inc
outs
sub
jmp
and
lahf
rcr
outs
scas
mov
dec
ret
mov
adc
dec
and
cli
mov
xor
ret
int
adc
sub
mov
add
fidivr
jg
imul
mov
(bad)
lds
clc
sar
arpl
or
fnsave
div
int3
mov
inc
fxch
es
aam
add
sbb
push
ins
pushf
jge
(bad)
(bad)
push
dec
out
cld
inc
push
cs
ret
shl
shl
push
cmp
cld
(bad)
scas
add
popa
cs
xor
es
sbb
push
pop
mov
repnz
or
fbstp
xchg
mov
xchg
mov
loopne
in
or
and
push
aas
not
adc
pushf
mov
aad
push
stc
inc
ds
jne
fbld
dec
fsub
and
xor
out
in
dec
mov
retf
fsub
xchg
stos
inc
aaa
pushf
imul
dec
push
and
shl
inc
cmc
sbb
aad
mov
sbb
pop
icebp
enter
test
add
aam
call
imul
call
loope
push
lods
sub
stos
les
fsub
scas
shl
mov
xchg
push
sub
push
mov
stc
mov
adc
add
adc
pop
mov
loopne
cmc
ins
adc
push
and
jno
jbe
cmp
stos
and
pop
pop
lods
and
mov
cwde
xchg
stos
pop
std
jno
inc
dec
jns
fwait
pushf
xor
xor
ja
mov
es
adc
jp
scas
sub
cmps
retf
cdq
out
mov
cmc
loop
push
arpl
ror
and
jle
xchg
inc
inc
inc
xchg
sub
add
repnz
les
xor
mov
sbb
pushf
imul
sbb
pop
icebp
dec
cdq
icebp
or
push
das
and
nop
icebp
xchg
xchg
and
dec
adc
adc
pop
enter
out
cs
(bad)
sbb
ja
popf
push
je
pop
repz
add
(bad)
popa
test
outs
mov
jge
jmp
inc
push
sub
sub
sbb
js
xor
jb
cld
sti
pop
hlt
pop
mov
inc
leave
mov
xchg
pop
adc
sub
aaa
je
pop
icebp
cmps
xor
leave
adc
arpl
lahf
aas
pop
retf
lds
add
inc
dec
pop
arpl
xor
push
inc
adc
in
cmp
es
mov
jne
mov
dec
movs
adc
hlt
cmp
mov
in
cli
inc
(bad)
push
cmp
cmp
jg
or
sbb
lock
adc
push
or
mov
sbb
jns
mov
push
inc
dec
fistp
fwait
sar
sbb
call
or
push
mov
out
hlt
call
pop
push
mov
shl
and
arpl
jns
inc
scas
shr
ret
inc
into
push
jp
xor
jmp
aad
pop
pushf
pop
sub
sti
iret
cmp
xor
pop
ss
sub
cmps
gs
mov
mov
(bad)
cwde
mov
dec
push
jl
pop
add
dec
or
stos
in
adc
jg
test
cmp
hlt
popa
adc
pop
xlat
cmp
fs
mov
xor
lahf
cmps
fs
xchg
cs
mov
mov
dec
cdq
lods
sbb
dec
jae
inc
(bad)
icebp
inc
jmp
adc
xchg
push
ss
adc
adc
sbb
inc
jbe
push
dec
sub
cmps
dec
mov
sub
iret
test
push
pop
xor
cmps
(bad)
lods
pop
shr
fistp
repz
pop
loope
mov
and
xor
loop
jle
and
imul
mov
fimul
test
mov
or
cmps
sti
hlt
repnz
dec
push
pop
outs
shr
adc
dec
test
outs
ret
call
jae
sub
retf
dec
sub
(bad)
lds
fs
xchg
test
lea
push
loop
jge
leave
(bad)
test
mov
inc
mov
fisubr
add
test
(bad)
add
pop
or
movs
jno
popf
inc
pop
jnp
ret
dec
jmp
(bad)
out
in
pop
into
retf
cmp
outs
jmp
inc
mov
call
(bad)
leave
shl
loope
out
mov
or
pop
xchg
movs
movs
xor
popf
pop
aaa
add
mov
repnz
cmp
std
pop
sahf
loope
mov
push
retf
and
dec
adc
and
sub
cmp
cmp
mov
adc
mov
mov
ds
jns
mul
cli
int3
stos
out
jp
es
and
sbb
(bad)
xchg
outs
push
jbe
push
in
mov
xor
ss
pop
jbe
mov
adc
aam
mov
scas
push
and
pop
inc
invlpg
mov
adc
mov
jb
mov
cmps
jmp
pushf
in
add
mov
or
xchg
cmp
xor
or
imul
loop
stc
mov
mov
dec
dec
cmp
inc
add
adc
rol
add
shl
sub
mov
sbb
xor
xchg
and
xchg
mov
push
xchg
test
sahf
xor
jbe
lods
jb
or
pop
rcl
jbe
out
pop
sbb
adc
fcom
test
fistp
push
cmps
adc
int
inc
ror
dec
rcr
push
mov
xor
loopne
pop
fild
sahf
and
xchg
mov
(bad)
outs
cmp
out
enter
std
(bad)
adc
addr16
sahf
cmc
mov
lods
pusha
jo
nop
pop
clc
daa
pop
push
std
lea
push
add
xchg
mov
shl
cmp
stos
jmp
adc
gs
push
ds
dec
push
cmps
cmp
add
add
icebp
in
inc
(bad)
mov
movs
cmp
pop
das
lahf
popf
jae
xor
pop
pop
adc
jmp
pop
add
sbb
hlt
mov
dec
ss
icebp
jae
pop
xor
outs
and
pop
mov
pushf
ins
mov
xchg
inc
dec
pop
stos
(bad)
push
and
fucomip
mov
mov
pop
fimul
in
xor
sbb
push
pop
scas
fwait
mov
mov
popa
cli
cmp
cmp
jns
test
dec
pop
and
lahf
ds
mov
push
jmp
xlat
rcl
enter
fnsave
mov
popa
xor
mov
add
cmps
mov
or
jecxz
js
or
jge
rol
les
pop
add
dec
xchg
inc
es
data16
mov
je
sub
stc
cld
mov
loopne
pop
mov
retf
sbb
lea
push
pop
mov
icebp
mov
dec
mov
(bad)
outs
pop
loope
loope
inc
adc
ins
and
xor
pop
mov
add
out
(bad)
ss
jb
fwait
dec
pusha
lea
call
or
cmp
fdivp
ja
pusha
ja
pop
xchg
imul
pop
and
std
cli
shl
xchg
jns
jle
mov
das
ja
cwde
fimul
nop
dec
test
jmp
call
in
sub
int
mov
cdq
fistp
jno
rcl
pop
fist
(bad)
(bad)
pop
out
dec
xor
cmp
les
adc
lea
sbb
sbb
ret
lods
ds
cwde
mov
repz
dec
call
jns
lock
and
ins
xchg
or
jmp
cmp
push
xor
into
out
jecxz
stc
jns
jle
je
retf
fstp
fcom
(bad)
imul
xchg
dec
dec
outs
jecxz
test
mov
scas
add
rcl
in
jmp
int3
adc
mov
cli
inc
cmps
mov
shl
addr16
iret
sbb
jns
enter
adc
inc
or
push
mov
leave
sbb
add
dec
mov
scas
inc
xchg
inc
fcom
cmp
scas
cmp
int
aaa
or
jbe
mov
sub
inc
test
or
sbb
(bad)
xchg
lods
mov
cli
pop
dec
sahf
cmp
imul
test
loope
mov
mov
imul
out
arpl
test
adc
mov
hlt
lock
mov
fldcw
pop
adc
cmc
cmp
xchg
adc
and
outs
xchg
addr16
sbb
sahf
call
sbb
add
mov
sbb
jg
xchg
inc
mov
sub
mov
add
jmp
not
cld
adc
addr16
or
xlat
ret
in
fdiv
mov
mov
sbb
cmp
sbb
das
mov
xchg
push
xchg
pop
out
cdq
xor
mov
push
add
retf
mov
popf
std
shr
adc
xor
mov
mov
xor
ja
pusha
clc
rol
div
ret
fstp
jns
xlat
scas
call
push
cmp
in
push
push
out
mov
test
out
call
cmp
cmp
push
mov
push
not
push
ror
dec
popa
(bad)
fstp
arpl
mov
arpl
mov
out
aaa
xor
shr
xor
inc
xor
ja
jno
out
inc
(bad)
lock
dec
mov
adc
fadd
jge
mov
loope
ins
push
cmps
neg
sti
jg
jge
mov
push
pop
pop
aas
add
mov
push
lods
push
sbb
sbb
jo
shl
jmp
std
(bad)
mov
mov
xchg
pusha
shl
movs
outs
sahf
push
mov
daa
sbb
inc
cmps
mov
jbe
mov
xchg
mov
mov
pop
add
push
sub
pop
adc
add
loopne
sbb
dec
hlt
sub
rcl
mov
icebp
jl
adc
out
lock
mov
rol
sbb
clc
adc
dec
fucom
adc
adc
push
sub
xor
push
popa
xor
outs
dec
jbe
jb
adc
(bad)
push
mov
movzx
cdq
cs
add
xor
jg
(bad)
stos
and
jae
jmp
jo
mov
sub
lods
data16
test
inc
mov
add
mov
dec
clc
call
aad
and
xchg
cli
das
push
add
ror
stos
fadd
sbb
add
(bad)
test
rcr
or
pop
pop
xchg
add
shr
ins
sbb
dec
dec
setne
add
inc
mov
push
pop
dec
sub
aam
lock
jne
es
pusha
lock
xchg
or
inc
and
jnp
jb
add
xchg
or
lods
cdq
jno
jae
and
cmp
xchg
cmp
jl
jae
pop
cdq
xor
dec
inc
aad
cld
adc
ret
fld
pop
aas
fs
std
clc
scas
mov
and
xchg
lock
cli
dec
adc
inc
cmps
mov
std
mov
push
inc
add
(bad)
enter
imul
gs
jmp
je
push
nop
adc
pop
inc
test
das
and
sbb
pop
repnz
std
or
pop
aad
sbb
mov
cli
ja
jecxz
(bad)
popf
add
clc
mov
jmp
aad
jp
leave
(bad)
pop
int3
push
in
data16
arpl
jecxz
in
sub
mov
pop
inc
into
xchg
(bad)
gs
bound
jp
cli
adc
or
add
addr16
test
mov
xlat
aad
fs
or
sbb
and
mov
sbb
xchg
ds
push
add
cmps
sub
pop
fcom
cmps
sti
push
dec
frstor
mov
outs
fwait
int3
out
fnstenv
cmp
sub
sar
arpl
jbe
test
test
sub
(bad)
(bad)
sbb
sbb
push
data16
xor
(bad)
sub
and
or
shr
pop
fidivr
jg
add
es
fsubr
sti
or
arpl
inc
ret
cmp
addr16
stc
sbb
xor
jno
mov
sub
pusha
pop
daa
cs
sar
or
lods
movs
js
aas
or
adc
cmp
imul
cmp
xchg
into
nop
je
imul
hlt
jmp
mov
(bad)
call
lahf
adc
sub
sahf
(bad)
sub
and
jl
fs
aam
mov
movs
inc
imul
pop
(bad)
jle
xor
fwait
cmps
sti
sub
add
mov
jp
hlt
jmp
add
xchg
or
jle
adc
popa
das
add
sub
dec
mov
pop
in
das
sub
dec
sbb
jp
sbb
sbb
aam
mov
mov
test
jmp
inc
fadd
ds
inc
adc
ds
fisub
mov
dec
pusha
(bad)
sbb
mov
popf
jnp
test
fmul
pop
fwait
xchg
xor
pop
inc
push
into
test
adc
popf
(bad)
loopne
out
or
hlt
mov
in
add
pop
add
repnz
ja
mov
fmul
popa
(bad)
(bad)
aam
enter
adc
test
xor
nop
jb
retf
fwait
xadd
imul
dec
sbb
cmps
retf
jnp
movs
cmps
mov
pusha
xor
inc
sbb
mov
xchg
add
das
inc
add
cld
xor
adc
pop
dec
lahf
or
mov
push
je
sbb
imul
cmp
mov
ret
push
in
lods
push
in
shl
(bad)
xor
ins
mov
lods
push
icebp
jo
call
scas
ins
jge
sbb
or
jmp
clc
fbstp
addr16
push
dec
fs
fisubr
stc
inc
xor
add
in
xlat
mov
xor
sbb
mov
jp
push
cmp
or
or
mov
push
inc
loope
add
jmp
(bad)
out
xchg
vshufps
add
pop
je
xor
xchg
mov
jne
dec
in
add
rol
mov
and
addr16
aaa
cmps
addr16
push
es
xor
fcmovu
xor
pop
pushf
mov
jmp
or
and
bound
(bad)
(bad)
(bad)
push
add
add
cld
setge
mov
push
push
cmps
in
lods
add
push
hlt
ret
or
stos
xchg
mov
mov
sti
sub
push
mov
out
sbb
cmp
xchg
push
jp
cmps
ss
pop
loope
cmp
dec
loopne
aaa
inc
inc
or
push
sbb
sbb
mov
lock
mul
std
adc
and
sbb
inc
add
jl
pop
mov
mov
dec
cmp
cmp
shr
call
movs
or
push
push
fsub
ds
scas
dec
push
add
popa
js
mov
adc
push
test
rcr
or
push
stos
or
retf
frstor
data16
stos
dec
jle
push
xor
test
fwait
dec
icebp
in
jp
mov
dec
jno
shr
mov
dec
movs
cdq
out
imul
push
mov
dec
cmp
xor
cmp
mov
ds
jmp
xor
xchg
dec
or
jmp
outs
mov
int3
inc
push
mov
movhps
aad
aaa
inc
rol
push
push
(bad)
jge
dec
xchg
add
shl
lods
sub
mov
cli
mov
inc
xor
ror
lods
(bad)
lock
mov
jl
cmp
sbb
das
inc
fld
cmp
loopne
pusha
xor
test
jns
loopne
movs
daa
js
div
in
sub
and
(bad)
aas
out
adc
je
mov
jmp
push
out
repz
out
adc
adc
pop
cmp
or
int
cs
ror
pop
arpl
jle
stos
dec
movs
inc
clc
jle
and
mov
sub
shr
ins
mov
enter
in
or
sbb
adc
xor
rcl
dec
jmp
enter
scas
inc
mov
push
fwait
pop
das
cmps
(bad)
xor
lock
or
or
xor
dec
xchg
cmp
(bad)
test
aas
aas
xchg
adc
movs
add
mov
cmp
fild
mov
loopne
mov
pop
ins
jmp
sbb
lock
jecxz
sbb
mov
and
xchg
test
and
pop
hlt
(bad)
out
pop
mov
xchg
jns
jb
loope
pop
(bad)
push
(bad)
jmp
mov
adc
stc
movs
sbb
int3
inc
scas
mov
(bad)
push
mov
cmp
xchg
cli
ffreep
jmp
js
push
push
mov
sbb
sbb
sbb
jae
jmp
cwde
xor
sbb
in
cwde
outs
mov
push
rol
push
xchg
das
ins
or
test
retf
cmp
jo
sbb
mov
or
xlat
cli
push
xor
(bad)
stos
jle
jns
mov
jmp
mov
mov
imul
jae
sbb
outs
in
sub
mov
pop
enter
dec
mov
shl
jl
adc
add
sti
ret
jge
push
pop
lock
das
pop
out
cmp
mov
inc
cmp
and
fmul
test
sbb
push
iret
mov
add
jae
fistp
gs
(bad)
(bad)
jle
pop
push
and
jae
or
inc
out
mov
inc
cmc
lock
adc
clc
inc
and
mov
sub
aad
mov
adc
scas
enter
dec
js
sar
daa
push
cmp
ret
lds
mov
xchg
xchg
das
xchg
jno
cmc
or
mov
ins
mov
out
fiadd
cmp
out
cmp
cmps
mov
xor
retf
daa
dec
cmps
mov
push
push
dec
inc
sbb
dec
movs
mov
jle
add
loope
sahf
pop
mov
cli
mov
sub
enter
push
out
sti
sub
dec
aaa
hlt
in
mov
nop
shl
push
add
jp
dec
rcl
out
loope
dec
xor
retf
add
pop
test
adc
add
fs
dec
pop
mov
push
aad
das
sub
inc
fwait
mov
jns
mov
push
mov
pop
cwde
mov
pushf
inc
sbb
(bad)
adc
mov
fwait
or
jp
call
push
mov
in
leave
mov
push
fiadd
ffreep
pop
mov
mov
rcl
mov
lock
aas
inc
add
xchg
int
arpl
popa
movs
pusha
add
(bad)
jbe
clc
sti
pop
loopne
out
sub
cmp
xor
mov
lods
int3
loope
stos
fmul
nop
imul
(bad)
pop
(bad)
(bad)
push
(bad)
cwde
cld
(bad)
xchg
mov
cmp
xor
and
ja
pusha
push
lds
bound
jno
rol
pop
push
outs
popa
mov
in
cli
mov
in
call
data16
aad
dec
mov
mov
inc
inc
cmp
fs
inc
ror
push
jae
ret
add
adc
out
cld
retf
inc
push
int
les
push
add
mov
and
push
xor
sar
inc
sbb
mov
or
lock
cmp
mov
aam
push
out
push
jb
fidivr
sbb
push
sbb
lahf
push
mov
mov
sbb
repz
mov
or
or
das
mov
jl
scas
ja
add
add
jbe
clc
and
int3
repz
ficomp
and
or
inc
xor
test
repnz
or
mov
out
into
cmp
or
sbb
push
pop
enter
push
loope
dec
loop
lea
ret
push
call
fldenv
stos
push
xchg
jge
or
jmp
hlt
xor
aam
pushf
dec
jae
add
add
adc
dec
in
pop
xchg
dec
daa
xor
xchg
fld
or
jecxz
popf
jo
jno
data16
pop
ret
pop
lods
aaa
xchg
jb
push
cmp
shl
out
jle
jbe
jmp
lods
jp
fistp
jmp
bound
jbe
popa
loop
(bad)
mov
inc
sub
fidivr
icebp
push
sub
dec
cld
das
pop
dec
les
call
inc
push
les
fdivp
test
and
fiadd
jnp
jmp
pop
jmp
fimul
ins
sar
dec
daa
dec
outs
add
sub
sub
fstp
cmp
mov
mov
outs
mov
aam
daa
test
cmp
jmp
ja
cld
inc
push
jmp
jecxz
jo
or
not
xchg
jp
je
(bad)
cld
xchg
ins
or
lahf
add
mov
iret
add
push
lods
mov
das
sub
mov
repnz
pop
pushf
xchg
out
ds
xchg
cmps
xor
xchg
dec
out
pop
inc
push
mov
cli
mov
xchg
test
in
popf
ret
sub
out
push
fisttp
hlt
cmps
inc
adc
nop
aas
stc
and
ds
leave
ror
or
int
stc
pop
mov
cmps
xor
mov
rol
das
repz
or
stc
xor
xor
stos
add
mov
rcr
bound
or
push
out
push
push
xlat
cli
lahf
xchg
je
sbb
xchg
mov
pop
mov
mov
into
sub
sbb
xchg
pop
std
fsubr
dec
pop
push
mov
or
mov
pushf
and
jmp
mov
daa
popf
inc
sbb
xor
sbb
mov
sub
add
pop
sbb
and
out
mov
lds
inc
loope
or
jmp
push
(bad)
cmps
cmp
jg
adc
call
movs
imul
dec
leave
adc
xlat
mov
adc
out
sub
cmc
(bad)
mov
mov
and
lahf
arpl
and
adc
sti
aas
sti
xor
cmps
xlat
sub
mov
nop
sub
stc
push
jl
daa
pop
clc
std
call
(bad)
test
sahf
dec
xor
pop
push
rcl
pop
xlat
jb
dec
out
iret
sti
inc
mov
dec
and
pop
mov
lock
dec
fs
cmp
xchg
dec
sub
lea
sbb
daa
push
mov
out
outs
xor
xor
(bad)
add
sbb
or
sti
pop
enter
and
push
fstp
or
loop
cmp
or
test
or
xlat
aas
push
cmc
xchg
inc
inc
pop
pop
loope
cmp
mov
daa
xchg
outs
inc
jne
in
mov
daa
adc
push
cmps
cmc
in
shr
daa
and
sub
popa
jge
sbb
stc
inc
sbb
inc
add
mov
xor
lahf
rcr
pop
ins
dec
mov
inc
hlt
fimul
mov
add
mov
out
lods
loopne
stos
test
data16
fwait
sub
xor
sub
jl
sub
call
(bad)
cmps
inc
push
scas
xor
pop
push
sbb
add
mov
js
mov
jmp
and
js
jne
or
lods
mov
call
xchg
cmps
pop
ja
stos
jmp
retf
nop
xor
lea
lods
ja
leave
mov
(bad)
(bad)
(bad)
adc
outs
icebp
cmp
add
xchg
movs
jmp
fild
cmp
ja
jge
dec
clc
in
lods
outs
lock
sbb
inc
test
or
pop
push
(bad)
inc
or
add
push
or
in
inc
dec
xchg
dec
inc
jno
push
mov
mov
fsubr
adc
cmp
add
mov
cmps
scas
rol
adc
icebp
xchg
repnz
xor
dec
add
test
jb
push
add
and
cmc
lock
jmp
mov
jns
(bad)
call
push
mov
cmp
adc
xor
js
loope
and
das
call
push
addr16
inc
sar
and
push
push
jle
push
mov
aad
xchg
std
sbb
out
and
sub
js
and
rol
ins
xor
mov
test
add
push
cmp
daa
xor
adc
das
inc
push
js
add
inc
ds
inc
xchg
sub
xor
jns
mov
pop
xchg
neg
cmps
call
dec
sbb
add
pop
out
rcl
inc
xor
nop
enter
pop
mov
retf
mov
pop
sbb
or
dec
push
ins
ja
ins
or
push
or
dec
ffreep
adc
loopne
pop
int
xchg
test
outs
mov
out
add
icebp
sub
pusha
clc
rcr
dec
sahf
jge
mov
js
ja
sbb
mov
add
popa
bound
dec
jecxz
fbld
(bad)
int
nop
hlt
xchg
(bad)
push
jg
mov
fadd
cli
and
fimul
adc
fidiv
cmp
test
cdq
push
test
and
cmps
(bad)
call
out
push
push
pop
out
jbe
imul
xchg
ror
rcl
jbe
aas
cmp
add
pop
das
mov
sbb
sub
rcr
mov
cwde
or
test
call
dec
mov
add
ficomp
push
scas
xchg
fdivr
mov
daa
push
das
cld
sets
or
pushf
std
nop
stos
lods
sti
scas
in
in
pop
out
(bad)
dec
bswap
jns
xlat
push
(bad)
mov
ins
jnp
ss
or
dec
into
xchg
sbb
sbb
cmp
ins
push
and
xor
fbld
pushf
sub
mov
inc
test
adc
sar
and
arpl
or
in
mov
(bad)
call
dec
cmp
sbb
mov
mov
cmp
jmp
fcom
test
retf
popa
int
xchg
loope
shl
bound
lock
ds
sub
push
cmc
retf
mov
and
pop
hlt
adc
js
xor
pop
push
(bad)
out
data16
retf
jnp
pop
cdq
xchg
jge
mov
mov
jb
stc
inc
sti
ins
inc
mov
dec
test
push
sahf
push
push
gs
or
retf
lahf
lods
xchg
cmp
push
sub
loopne
push
pushf
mov
mov
ret
in
sbb
xor
jo
fnstcw
mov
mov
jge
aam
imul
xor
icebp
jb
mov
std
xchg
sti
retf
sahf
push
data16
aam
(bad)
cdq
cld
(bad)
jns
in
test
or
and
cmps
xor
pusha
test
add
xlat
xor
test
add
repz
jmp
sub
les
stos
mov
cmp
loope
jb
xor
cmp
fdiv
mov
sbb
xor
or
loope
mov
or
in
dec
jge
enter
or
je
push
cmps
lods
dec
out
and
lahf
icebp
jae
add
mov
push
test
ins
outs
cmc
inc
cmp
inc
lds
std
lea
xor
sub
push
scas
sub
fxtract
inc
cmp
add
push
fcomp
or
pop
xor
cld
mov
push
test
dec
pop
popf
ins
mov
jle
and
push
rol
movs
sub
or
mov
loopne
pop
jmp
mov
std
shr
xchg
sub
dec
fwait
mov
lods
cwde
fisubr
addr16
pop
std
cmp
push
sub
sbb
inc
xchg
fs
mov
and
aad
test
or
je
and
lock
aas
(bad)
pop
jge
inc
gs
inc
daa
out
(bad)
rol
sub
daa
sahf
imul
cmp
and
(bad)
dec
adc
pop
aaa
(bad)
sub
js
imul
popa
add
ret
dec
jb
mul
movs
sub
clc
into
sub
mov
iret
scas
pmulhw
adc
cmp
int
jge
push
imul
and
mov
add
shl
mov
sub
jno
jbe
call
imul
jmp
test
(bad)
sub
dec
adc
pop
mov
add
lock
ins
inc
int3
enter
push
push
adc
push
jl
gs
jl
out
mov
mov
loope
xor
sub
push
mov
xchg
leave
dec
movs
add
fld
push
icebp
mov
and
add
int3
in
enter
sub
(bad)
push
xchg
ffree
xor
push
icebp
stos
outs
sti
push
mov
imul
dec
hlt
and
test
sub
pop
mov
pop
adc
in
xlat
jae
push
enter
push
(bad)
addr16
push
jge
clc
sub
popf
cmps
shl
int
mov
xor
and
xor
shr
outs
jl
and
sbb
call
scas
xchg
push
fbstp
pop
dec
jbe
into
jmp
inc
je
mov
out
pusha
mov
stc
cmp
or
js
repz
pushf
mov
loopne
jle
pop
les
or
jne
test
mov
retf
movs
(bad)
int
xor
stos
sbb
mov
dec
add
nop
repz
push
inc
pusha
cmc
scas
cli
add
or
jns
les
cmp
add
ficomp
fild
and
push
push
jge
xchg
out
inc
fs
leave
push
xlat
inc
fcmovnu
sbb
sbb
sbb
(bad)
pop
jmp
xchg
std
mov
push
sub
mov
pop
and
adc
popf
xchg
icebp
leave
add
pop
jo
ror
dec
xchg
mov
dec
jns
jns
cmps
aam
add
fistp
push
mov
sbb
mov
in
jno
jmp
xchg
xchg
jge
dec
sub
mov
sub
repz
retf
(bad)
lods
lock
loope
and
inc
push
adc
inc
mov
xchg
cli
sbb
mov
pop
fs
fild
scas
dec
loope
sar
xchg
sti
mov
nop
cmps
push
mov
cs
bnd
in
movs
fs
retf
test
jmp
jo
sub
mov
jnp
jg
jecxz
(bad)
cmp
scas
or
icebp
push
jo
ficomp
repnz
(bad)
mov
sub
jp
or
sub
js
and
xor
jp
mov
lds
mov
jecxz
mov
jg
push
in
das
scas
adc
sub
sbb
xchg
xor
mov
aas
fst
cmc
imul
outs
and
and
push
mov
inc
aam
jbe
(bad)
clc
jp
jecxz
pop
cmp
or
push
imul
out
ret
dec
mov
mov
cmp
(bad)
test
jae
and
lods
mov
inc
sahf
jl
dec
xchg
imul
dec
xchg
pop
mov
mov
inc
ja
inc
xlat
add
mov
jle
fld
ret
addr16
in
in
cwde
pop
pop
mov
or
inc
jecxz
push
and
inc
dec
cdq
retf
jns
test
jecxz
js
dec
mov
shl
adc
push
sub
mov
scas
pop
pop
mov
pop
jecxz
sub
mov
inc
cwde
stc
xchg
loop
sti
xchg
jle
fs
pop
jne
cmp
pusha
mov
push
inc
push
outs
xor
lea
and
(bad)
jmp
int
lods
dec
cmp
sub
pop
imul
pop
imul
add
pop
adc
add
in
pop
scas
lods
rcl
and
xchg
pop
xor
jmp
cmp
xchg
ins
js
stos
mov
loopne
xor
es
movs
fs
(bad)
mov
ffree
sbb
add
push
lds
pop
sbb
sub
or
jno
xchg
xchg
xchg
xor
mov
ret
sbb
cli
jnp
mov
sub
call
inc
ret
jne
mov
add
loopne
fld
mov
fstp
pop
and
mul
fcompp
test
fisub
jo
arpl
xchg
ja
jbe
mov
mov
push
push
sahf
jae
fnstsw
xchg
je
fadd
mov
adc
aam
montmul
cmps
inc
mov
inc
xchg
jl
jne
ins
pop
(bad)
mov
shr
or
inc
fstp
push
pop
scas
ins
jecxz
call
jo
fwait
xchg
mov
mov
or
fcomp
ds
mov
pop
popa
aad
adc
(bad)
dec
fadd
xor
mov
jge
jmp
cmp
adc
xchg
and
and
mov
cli
mov
pop
repnz
inc
retf
ror
icebp
add
hlt
ret
out
leave
xchg
ret
xor
xlat
mov
or
sub
out
outs
cld
push
(bad)
stc
mov
xor
mov
inc
cmps
mov
int
aas
ss
hlt
addr16
in
cmp
int3
mov
test
cmps
mov
inc
sub
cdq
and
and
scas
adc
push
repnz
stos
fstp
pop
and
mov
jl
inc
stos
sub
ja
dec
outs
rcr
pop
inc
fcomp
dec
stos
mov
sub
adc
(bad)
mov
(bad)
jns
dec
mov
cwde
jnp
pop
push
std
jns
ret
test
test
and
lea
(bad)
div
adc
adc
and
int
xchg
rcr
mov
pushf
and
mov
jbe
jo
or
adc
xor
xor
arpl
retf
enter
xchg
cmc
addr16
pop
jmp
pushf
pop
mov
inc
imul
mov
test
(bad)
jp
je
lods
or
movs
xchg
(bad)
sahf
lea
inc
pop
jg
xor
out
pop
fimul
jl
in
fisubr
pop
sub
mov
fld
cmp
mov
js
or
and
call
jb
adc
xor
inc
xor
das
shl
dec
adc
dec
jnp
loop
mov
jp
cdq
xlat
addr16
inc
xchg
jmp
out
inc
dec
xchg
add
retf
cmps
cmc
gs
sub
retf
pop
mov
retf
ror
xchg
mov
ins
add
xor
mov
dec
fs
movs
imul
mov
pusha
pusha
out
cmp
push
push
jecxz
scas
and
jecxz
push
jecxz
fstp
mov
outs
sub
pushf
push
pop
dec
or
push
iret
popa
push
cmps
in
fbld
dec
ret
push
cmp
fwait
loopne
repz
sub
adc
mov
pop
cmp
movs
nop
fs
shr
dec
clc
xor
std
dec
mov
fisub
ja
into
xor
imul
retf
jg
pop
sbb
dec
mov
imul
sbb
and
(bad)
rep
in
(bad)
push
cs
inc
and
test
clc
dec
not
cmp
imul
xchg
in
(bad)
or
or
in
psrld
mov
pushf
sub
fmul
popa
xchg
xchg
icebp
dec
arpl
mov
xor
xchg
aas
mov
call
or
jae
imul
out
add
iret
jns
nop
pusha
inc
pop
fs
cdq
daa
sub
inc
xchg
mov
outs
dec
push
fisttp
out
jp
adc
push
xor
fsubp
movs
jb
outs
(bad)
gs
inc
std
sti
mov
mov
jmp
(bad)
repnz
mov
jg
sub
es
mov
rol
inc
xor
rcr
push
nop
dec
sub
inc
dec
cmp
mov
mov
jle
lods
ret
cmp
jns
and
sub
scas
cmp
lds
push
bound
mov
dec
add
jmp
addr16
loop
fsub
ror
mov
jae
je
sub
loopne
jne
jo
sub
loop
sbb
adc
dec
adc
cmps
(bad)
cmc
sbb
sbb
out
test
or
in
adc
popa
sbb
in
mov
cmp
(bad)
mov
out
add
add
cmp
in
sbb
fimul
fld
mov
in
mov
fs
mov
add
arpl
dec
test
leave
mov
(bad)
dec
sbb
shr
cmp
sahf
adc
mov
jbe
pop
cmp
inc
sbb
mov
push
pop
movs
lods
mov
sbb
adc
sti
movs
in
shr
xchg
add
xchg
cmp
xor
out
(bad)
mov
jmp
bound
cmps
movs
inc
adc
ins
daa
loopne
sub
into
jge
(bad)
mov
adc
das
and
xor
jmp
add
pop
or
in
push
les
sahf
out
jmp
cs
add
retf
push
aad
cmp
or
call
rcr
mov
xor
push
push
fisttp
lock
nop
loop
xchg
dec
inc
data16
push
and
sar
and
sbb
shr
mov
stos
xchg
sti
call
mov
push
test
adc
ins
or
xor
(bad)
xchg
hlt
pop
mov
dec
add
mov
ror
and
jne
or
sbb
imul
loope
movs
push
sbb
bound
mov
popa
jo
pop
ins
jp
push
je
sub
xchg
push
pop
pop
bound
mov
dec
pop
mov
pop
or
and
cmp
jo
fcmovne
push
stos
mov
icebp
(bad)
in
cld
jp
pop
aam
popf
mov
test
clc
ja
sbb
not
cmp
outs
or
add
sbb
fbld
ins
jge
pushf
test
jmp
(bad)
mov
xchg
sub
xlat
pop
fst
cmps
loop
aam
jnp
es
push
ret
mov
cmp
mov
xchg
ins
mov
repnz
popa
inc
push
sub
push
jo
pop
add
mov
pop
xchg
jg
mov
popf
sbb
gs
sbb
adc
daa
addr16
movs
ss
jb
xor
push
std
movs
out
mov
mov
jmp
sahf
(bad)
jae
aad
into
push
outs
icebp
movs
xchg
ins
das
aaa
jp
scas
lods
(bad)
test
ret
jge
repz
sbb
sbb
jl
nop
sub
dec
adc
sub
hlt
ja
mov
pop
in
sbb
adc
mul
(bad)
mov
into
jns
(bad)
(bad)
jecxz
retf
cmc
mov
push
sub
int3
ror
or
inc
and
adc
sub
adc
adc
imul
ss
jmp
mov
cld
dec
dec
mov
lea
sahf
fisub
mov
repnz
dec
sbb
or
inc
stos
cmps
xor
xor
ret
and
cmp
pushf
pushf
std
dec
dec
popf
call
not
enter
loope
dec
rol
or
jp
push
shr
dec
std
push
adc
daa
jo
pop
xchg
mov
out
cs
jns
jmp
repnz
fst
(bad)
pop
xor
(bad)
imul
and
cwde
int
sbb
int3
lods
shl
mov
cmp
and
cmp
jno
lahf
fld
xor
mov
call
adc
loop
dec
and
js
cmp
mov
pushf
xchg
retf
sbb
daa
and
out
and
sar
lea
fild
ret
js
shl
rcl
push
data16
retf
aaa
lea
xchg
dec
jae
repz
jae
ror
fisub
lahf
rcl
outs
gs
js
shl
adc
test
repnz
push
and
(bad)
(bad)
inc
fucomip
les
push
(bad)
in
lods
jae
xor
pop
test
mov
xor
fucomip
gs
add
cwde
loop
out
(bad)
adc
inc
and
cmp
pop
rep
mov
inc
ins
(bad)
pop
aam
and
jecxz
loope
fs
pop
mov
mov
repz
ins
sub
test
out
xor
adc
add
xchg
xchg
inc
movs
sbb
bound
mov
pop
iret
pop
stos
fwait
jmp
jb
and
pop
jg
push
je
out
js
ss
mov
ja
jmp
(bad)
mov
ja
xor
push
and
repnz
out
pop
repz
mov
xchg
cmp
lods
test
sub
or
push
push
out
push
or
sub
ins
mov
xchg
xor
mov
out
fmul
or
inc
mov
sbb
dec
ins
adc
es
xor
adc
xchg
pusha
jns
push
aam
movs
mov
out
out
pusha
ja
jle
sub
icebp
xor
or
mov
push
add
pop
jmp
(bad)
movs
sbb
mov
outs
pop
or
lea
loop
dec
pop
pop
dec
shl
in
pop
scas
je
fiadd
cwd
test
icebp
out
mov
jge
pop
mov
mov
enter
shl
dec
add
mov
fisub
test
stos
je
inc
sbb
xchg
xor
lods
mov
cmp
pop
sub
call
inc
add
inc
and
add
jmp
xor
sbb
retf
mov
fstp
cdq
adc
stos
mov
(bad)
mov
fisub
cmp
xlat
push
jo
dec
mov
mov
xlat
enter
loopne
mov
shl
cmp
stos
cmp
pop
and
cli
ret
add
mov
ins
pop
into
mov
dec
or
in
inc
addr16
cdq
pop
cmp
daa
add
in
fs
(bad)
imul
jns
jb
hlt
aaa
mov
aaa
inc
aas
rcl
jbe
out
into
test
test
sbb
movs
sub
sbb
fdivr
push
xor
in
das
es
pop
int3
sub
mov
std
inc
cli
xor
xor
dec
or
push
stos
in
pop
pop
mov
dec
xchg
in
mov
cmp
aam
std
xchg
mov
pop
cdq
sub
loope
cmps
add
(bad)
fdivr
cdq
cli
xor
xlat
(bad)
pushf
out
clc
cmp
je
mov
push
dec
aas
out
sbb
test
inc
inc
loopne
icebp
jl
mov
sar
sbb
popf
adc
iret
in
into
rol
les
scas
mov
jmp
(bad)
call
inc
data16
or
in
lods
cdq
in
lds
pop
jo
add
into
add
mov
mov
dec
in
mov
jb
arpl
adc
or
mov
add
xchg
adc
mov
clc
dec
mov
sbb
mov
sub
bswap
cli
sbb
ret
add
int
and
outs
mov
add
adc
retf
bound
shl
fwait
add
add
cs
mov
pop
mov
sub
pop
mov
and
rol
xchg
call
inc
jo
sbb
jg
loop
push
adc
push
stos
adc
and
mov
push
push
fcomp
adc
xor
sub
ret
imul
sahf
push
cli
hlt
mov
or
and
sub
or
pop
sbb
jp
cmps
add
mov
gs
xchg
ja
xchg
hlt
loope
pushf
gs
inc
bound
add
loop
lds
sbb
and
(bad)
cmp
sub
fwait
mov
imul
test
xor
inc
std
idiv
lahf
pop
js
aas
sub
pop
gs
repz
xchg
fisub
inc
cmp
push
lods
xchg
(bad)
xor
inc
dec
aam
jne
push
test
lahf
(bad)
std
fcompp
das
ret
xor
loop
call
stc
push
or
adc
push
ja
outs
xchg
jle
and
clc
(bad)
pop
xor
ja
in
nop
add
(bad)
cmc
xchg
mov
fs
xchg
sar
sar
(bad)
outs
mov
dec
imul
push
add
pop
je
adc
lock
inc
xchg
leave
pop
lahf
jns
ja
add
xchg
cwde
or
pop
pop
dec
sub
inc
ins
mov
fwait
(bad)
fld
stc
mov
js
shl
lods
loope
js
push
mov
aas
loop
sub
xor
mov
xchg
or
out
scas
rol
retf
inc
pop
addr16
in
mov
push
rol
loopne
mov
mov
lahf
icebp
scas
inc
dec
fcomp
inc
xchg
je
sbb
jg
jl
jne
daa
mov
je
loope
push
bound
int3
adc
movs
ja
aad
mov
mov
xor
cmps
add
push
mov
rol
ss
mov
xor
scas
pop
cmps
cmp
inc
test
hlt
shl
jle
adc
mov
inc
jo
add
or
or
inc
pop
dec
cdq
in
fst
scas
sbb
pop
mov
retf
fucomip
pop
sub
(bad)
pop
mov
repz
xor
adc
xor
sbb
adc
add
dec
mov
dec
data16
mov
sub
dec
mov
scas
jb
(bad)
push
cmp
hlt
test
mov
push
mov
fnstenv
call
bound
cmps
mov
pop
and
in
arpl
xchg
jle
ret
cmp
pop
jae
sbb
repz
push
jns
cli
fidiv
pop
data16
mov
cmp
push
in
mov
xor
pop
fst
push
cdq
sub
sar
xor
jmp
jo
fistp
(bad)
jl
aaa
rcl
jns
loope
xor
pop
cwde
cmp
cmp
fcom
inc
sub
int
add
mov
jmp
stos
inc
aad
rcl
fcom
cmps
jnp
and
jo
cmp
cs
test
mov
fdiv
repz
jge
jns
ins
dec
jns
pop
pop
inc
pop
push
lods
push
push
cs
repz
pop
or
sub
adc
and
inc
outs
mov
jle
pop
jnp
push
jmp
jg
das
add
lahf
jl
aas
push
push
ror
cmp
sbb
out
dec
jbe
jge
add
aas
jg
push
dec
or
adc
dec
aam
loopne
scas
adc
mov
sub
pop
adc
adc
(bad)
imul
inc
out
outs
mov
xchg
leave
pop
dec
scas
fist
clc
push
mov
xor
add
push
dec
aas
addr16
inc
sbb
loope
int3
cdq
out
cwde
mov
lahf
pop
sub
sub
std
push
(bad)
outs
adc
mov
or
dec
outs
mov
or
sysenter
jecxz
jge
xchg
fistp
ja
mov
inc
iret
lahf
int
popa
pop
push
aam
mov
lea
cdq
xor
xor
loop
mov
inc
add
xor
push
mov
xchg
inc
xor
xor
scas
pop
mov
sbb
fs
test
enter
push
jns
rcl
lahf
adc
leave
and
adc
push
xchg
arpl
out
icebp
mov
push
inc
imul
pop
mov
in
mov
psadbw
loopne
mov
sbb
sbb
cmc
ret
add
xor
test
in
jmp
neg
cld
fcmove
test
(bad)
sub
mov
clc
adc
cs
inc
sbb
test
mov
inc
mov
(bad)
push
in
bound
mov
push
bound
adc
int3
ins
cmps
xchg
and
pop
adc
inc
pop
inc
push
rol
adc
jecxz
popf
int
pop
mov
ds
sbb
jnp
aas
push
mov
(bad)
cmp
mov
and
mov
scas
adc
dec
cmp
ins
(bad)
hlt
(bad)
mov
jp
jmp
mov
add
popa
inc
cmp
je
jecxz
mov
pop
(bad)
push
je
jo
xchg
mov
fs
stc
dec
inc
cwde
scas
pusha
jne
in
dec
dec
loope
repnz
lods
sub
mov
imul
aaa
mov
iret
mov
lods
in
jecxz
and
rcl
pop
sbb
mov
in
pop
mov
bound
and
(bad)
xor
mov
ss
mov
cmc
stc
aas
(bad)
aaa
or
mov
pop
xlat
stc
mov
lods
inc
(bad)
cmc
cdq
imul
or
cmp
jmp
mov
inc
test
xor
movs
mov
int3
xchg
jecxz
sub
cmps
test
in
loope
dec
or
mov
pop
push
push
sbb
sub
jmp
enter
mov
pop
aas
imul
nop
add
aad
dec
lods
adc
and
mov
ins
add
test
frstor
lods
shl
jnp
and
xor
jbe
or
shl
adc
xchg
cmp
push
fcom
sbb
std
push
sbb
adc
test
dec
mov
jo
outs
cmps
pusha
jle
push
test
lea
jae
lea
paddb
jg
mov
call
shl
popf
sbb
retf
lock
xchg
out
das
cmp
outs
(bad)
lods
push
xchg
scas
call
or
pop
js
loopne
inc
ds
xchg
lock
lods
xchg
pop
movs
jo
clc
scas
jbe
stos
xchg
cwde
mov
test
push
inc
sbb
or
(bad)
int
cwde
adc
xchg
adc
cmc
fdivr
push
pop
xor
or
jmp
inc
jo
or
mov
ja
add
nop
push
mov
push
repnz
xor
dec
bound
aas
scas
inc
sbb
(bad)
mov
cmp
push
jle
leave
out
cli
movs
pop
aad
xchg
je
icebp
cmps
dec
popf
ins
test
fisttp
(bad)
repz
test
mov
stc
mov
js
fs
fcom
or
and
push
iret
test
sbb
(bad)
iret
retf
jl
icebp
push
xchg
xchg
cmc
add
xlat
sbb
add
jle
sbb
aas
cwde
jns
iret
inc
cmp
adc
push
xchg
pop
adc
cmp
popa
mov
xlat
popa
xchg
loopne
cs
mov
push
aad
adc
cmp
jno
iret
push
sub
add
xor
rcl
in
lock
sbb
aam
pop
xchg
stc
jne
aad
mov
lods
out
(bad)
cmc
xor
sahf
mov
fwait
lods
mov
dec
fdivr
jbe
clc
pusha
mov
clc
add
mov
ins
inc
icebp
into
mov
xchg
mov
loopne
movs
xor
dec
test
push
lds
outs
dec
xor
jb
addr16
stos
jns
pop
dec
add
cmp
cdq
int3
mov
or
push
push
xor
les
mov
inc
int3
mov
mov
push
leave
lods
dec
cmc
stos
push
jp
repnz
mov
push
mov
stos
xchg
jle
fst
ins
iret
imul
or
call
jmp
fisttp
inc
loop
jle
aas
(bad)
idiv
xchg
pop
mov
mov
xchg
movs
movs
jne
pop
je
mov
dec
(bad)
jno
pop
and
leave
mov
mov
mov
cli
xchg
pop
and
and
in
xchg
loop
mov
and
fwait
lock
pavgb
movs
rcl
loope
test
movs
cli
sbb
add
jmp
or
arpl
movs
test
push
aas
jmp
inc
popa
pop
xor
ret
in
rcr
cli
mov
add
fld
pushf
xor
(bad)
mov
lods
inc
adc
or
les
dec
mov
push
and
cmc
jo
aad
xchg
(bad)
jmp
sub
add
sbb
sub
jl
jmp
sub
ficom
mov
loop
jns
push
data16
sub
popf
fwait
and
loope
xadd
data16
data16
iret
sbb
fisub
jbe
je
sar
outs
sub
mov
stos
sbb
inc
call
scas
mov
das
fcomp
jle
movs
loop
dec
inc
mov
jo
dec
push
jae
mov
mov
imul
mov
aas
ja
cmp
cdq
in
jae
cvtpi2ps
loopne
add
push
mov
(bad)
cli
pusha
jg
mov
dec
sbb
lock
inc
retf
loopne
(bad)
jmp
xor
add
inc
movs
add
ins
inc
jle
push
jmp
push
ss
call
jb
test
std
pop
jae
mov
mov
sub
and
sub
les
and
clc
fiadd
mov
imul
sub
ss
pop
mov
cmp
dec
js
inc
aam
popf
cmc
or
push
push
stc
and
cmp
xor
sub
jae
sub
mov
leave
mov
adc
dec
and
mov
sar
add
pop
pop
jge
push
and
aas
daa
cmp
sub
pop
sti
icebp
cs
dec
jmp
rol
stos
xchg
dec
jo
xor
inc
(bad)
sbb
cmp
sar
sub
lods
(bad)
shr
cmp
dec
mov
inc
scas
cmp
inc
fsub
push
mov
xlat
popf
mov
mov
push
inc
(bad)
xchg
mov
xor
aam
add
pushf
xchg
pusha
mov
out
pop
pop
repz
xchg
cmp
ss
inc
jle
sub
lds
dec
cmp
cmp
dec
sbb
xor
ins
sub
mov
xor
cmps
ins
mul
mov
xchg
popa
sbb
cmp
add
inc
sbb
(bad)
push
jmp
jmp
lods
inc
repnz
bound
movs
xchg
adc
movs
sti
out
les
mov
mov
mov
xchg
cmp
arpl
jg
sub
std
clc
or
xchg
jbe
mov
das
sbb
in
test
sbb
or
and
sub
mul
lahf
std
retf
sbb
hlt
add
imul
adc
sbb
addr16
repz
mov
stos
cmp
push
(bad)
hlt
out
inc
sti
xchg
adc
int3
pop
jbe
mov
int
je
in
sbb
pop
inc
repz
adc
add
cmp
outs
or
(bad)
xchg
inc
mov
(bad)
push
add
mov
cli
bound
hlt
repnz
retf
repz
xor
ds
ret
sbb
or
test
mov
add
jae
aam
mov
test
pop
setp
das
lods
(bad)
icebp
stc
fwait
xor
or
adc
ins
js
in
pop
add
(bad)
aad
clc
outs
out
in
mov
and
lahf
icebp
add
sub
xchg
and
ss
push
dec
mov
inc
ret
pushf
adc
mov
rcr
jne
bound
inc
jge
push
jl
in
xchg
add
jo
adc
xchg
pop
and
sub
sub
pop
or
pop
fwait
stc
and
neg
add
inc
xchg
in
outs
ror
add
scas
out
mov
out
xor
sub
shl
ins
loope
sti
fcom
enter
adc
aad
jns
dec
je
neg
cwde
in
test
fisubr
loop
ja
js
int
or
pop
inc
add
add
cs
movs
ficom
cmps
mov
popa
pmaxub
jp
xor
in
div
jb
xor
dec
repz
jae
popa
out
adc
xchg
in
mov
outs
ins
inc
pop
cli
ds
sub
cdq
les
pop
bound
arpl
(bad)
out
sub
cmps
add
pop
rep
mov
add
add
inc
or
push
fnsave
je
mov
sbb
and
push
leave
mov
xlat
leave
cwde
push
jns
test
mov
repnz
dec
lock
es
ja
mov
mov
stos
loop
add
scas
(bad)
int
jmp
push
les
adc
clc
xor
iret
mov
rcr
sbb
cmp
lods
pusha
and
mov
pop
mov
mov
sub
sbb
and
add
dec
mov
pop
cmp
cdq
pop
loope
add
sub
enter
call
mov
jl
mov
sbb
xchg
add
mov
and
xor
lahf
or
xchg
jle
and
loop
pop
movs
(bad)
int
cdq
cmc
cmps
sub
test
dec
xchg
pop
and
scas
xor
pop
lods
lea
xchg
fdivr
mov
mov
(bad)
stos
jg
(bad)
aam
ror
sbb
mov
cmps
hlt
mov
repnz
enter
mov
dec
xor
mov
ins
scas
pop
lock
daa
jbe
pop
icebp
pop
add
and
push
aam
int3
push
mov
jno
sti
adc
and
xlat
out
je
add
add
mov
xor
jns
adc
mov
xchg
gs
out
je
(bad)
sub
fdivr
lods
dec
mov
ja
push
call
rol
push
jno
jmp
mov
push
xor
je
adc
test
push
les
jle
(bad)
mov
aam
adc
pop
xor
push
adc
mov
mov
adc
xor
(bad)
push
mov
ja
pop
mov
sbb
fstp
jns
jg
(bad)
jecxz
jle
push
(bad)
neg
or
fild
pusha
int3
jnp
pop
out
add
cli
int
fdiv
fadd
push
fcmovnb
cmc
fisttp
add
sahf
js
sub
rcl
pop
aam
aaa
(bad)
mov
loopne
and
test
into
sbb
jnp
mov
imul
cs
xchg
pusha
ret
xor
fistp
outs
xor
push
jns
rcl
xor
inc
push
pop
add
xor
add
js
leave
outs
mov
sub
mov
sbb
push
clc
imul
shr
push
add
test
mov
push
fstp
jno
repz
sbb
and
mov
dec
int
es
fwait
ret
ins
nop
not
cs
mov
sahf
(bad)
ja
cdq
pop
xchg
inc
jmp
fsubr
ins
test
sub
js
(bad)
dec
or
dec
jge
sub
addr16
or
pop
sub
aas
lods
in
pop
pop
fs
sub
mov
push
jb
outs
push
add
movs
jp
ror
mov
push
dec
lea
and
dec
add
sbb
outs
or
imul
out
xor
fistp
xchg
xchg
in
call
jecxz
jmp
jmp
cmp
scas
repnz
push
sub
lods
adc
(bad)
imul
push
stos
scas
xor
dec
and
xchg
das
mov
cmp
shr
and
fwait
fs
leave
test
mov
add
jnp
shl
push
add
popa
inc
inc
mov
das
mov
mov
dec
pop
pusha
mov
mov
pop
iret
and
and
test
cmps
add
push
dec
xor
inc
das
xor
push
mov
out
sub
sub
add
jmp
leave
xor
adc
lods
aaa
sub
data16
jo
mov
lods
inc
dec
sub
mov
cmp
xor
loope
mov
pop
ss
into
test
clc
jg
test
out
jae
pop
pop
jnp
out
(bad)
mov
mov
inc
imul
inc
push
cmp
mov
pusha
pushf
push
int
dec
push
xchg
popa
or
stos
pop
pop
sub
shl
fstp
mov
call
cs
mov
not
mov
movs
adc
adc
stos
fs
cld
inc
xchg
movs
mov
and
call
inc
cmp
fst
mov
pop
pusha
and
out
adc
xchg
aam
imul
pop
inc
repnz
xor
push
jne
adc
mov
into
loopne
dec
test
push
call
pusha
les
mov
sub
cli
pop
ins
stos
(bad)
rcl
ins
mov
mov
cmc
gs
add
aad
add
sbb
lods
xchg
dec
scas
mov
scas
(bad)
addr16
stos
dec
jns
add
mov
hlt
in
jl
scas
xchg
mov
or
imul
clc
lahf
(bad)
mov
mov
paddsb
(bad)
test
out
(bad)
push
test
fild
mov
ins
repz
rcr
mov
rcr
test
push
(bad)
sbb
add
push
xchg
popa
loop
div
adc
aam
test
fldcw
loope
out
add
xchg
pop
ficom
sbb
out
test
add
mov
inc
je
repnz
pop
mov
jge
call
inc
inc
jmp
sbb
jl
imul
xchg
jno
adc
ror
mov
xor
les
push
mov
cmps
outs
sbb
aam
xor
out
ins
inc
adc
jae
mov
dec
jne
push
or
ins
mov
push
push
adc
test
push
sub
adc
div
inc
cmps
sar
retf
jne
fwait
jg
test
sbb
add
xchg
pop
(bad)
xor
push
push
cmc
mov
sbb
push
lods
xchg
jb
stos
pop
mov
in
mov
shld
or
and
mov
retf
jmp
lds
test
xor
lods
dec
mov
push
sbb
inc
push
cmp
inc
push
xchg
cmp
mov
sahf
add
les
push
out
push
xlat
sbb
xor
jl
hlt
xor
cli
push
leave
jnp
scas
test
(bad)
push
mov
in
ja
inc
jmp
push
pop
outs
repz
push
and
arpl
adc
sahf
sahf
pop
fistp
loopne
pop
mov
or
sub
add
mov
xchg
and
mov
xor
pop
(bad)
icebp
iret
call
mov
cmp
and
sub
push
mov
or
sub
mov
repnz
pop
inc
and
loop
add
mov
cdq
ss
sbb
push
div
mov
imul
jmp
xor
pop
fs
jg
sbb
jg
stos
(bad)
retf
data16
and
cmc
(bad)
xor
inc
(bad)
into
dec
push
cwde
cmp
xor
pop
pop
mov
out
sbb
add
leave
das
mov
in
and
aam
not
addr16
sti
xlat
mov
xor
dec
jecxz
and
and
mov
lods
repz
add
adc
dec
jp
pop
in
xchg
add
cmps
mov
dec
pop
bound
shl
icebp
adc
xchg
ja
sub
inc
cmp
mov
adc
xchg
adc
lock
bound
arpl
inc
add
cwde
pop
cmp
xor
cld
retf
mov
cmp
fstp
rcl
push
imul
pusha
or
into
fiadd
loopne
jno
mov
loope
push
cmp
push
push
fild
push
mov
jmp
lods
jp
cli
imul
xchg
(bad)
cmc
dec
pop
inc
das
vcvttss2si
pushf
pop
jo
int3
rcl
pop
mov
pop
mov
sbb
mov
dec
fucom
pop
gs
adc
outs
sbb
jne
lahf
add
stos
test
xchg
inc
cmp
mov
(bad)
adc
adc
cmp
or
mov
ret
lock
cmp
push
addr16
xor
leave
pusha
(bad)
fbld
idiv
popa
nop
push
add
sti
fsubrp
or
xor
out
adc
dec
inc
mov
mov
stos
adc
mov
push
addr16
call
mov
and
and
cmc
cmp
rcl
xor
lea
out
call
jns
mov
fnstcw
lds
inc
shr
ror
and
pop
sbb
scas
cmp
inc
or
addr16
sbb
je
adc
jno
aam
test
sbb
call
test
pop
dec
mov
mov
nop
ss
xchg
stc
pop
cmp
lea
fbld
pop
repnz
and
aas
xor
cmp
icebp
sahf
mov
jp
dec
(bad)
cmp
lds
jbe
mov
std
xchg
cmp
mov
push
iret
mul
jl
in
int3
sub
inc
int
arpl
dec
movs
pop
aas
call
idiv
push
xlat
jbe
add
popf
mov
mov
jecxz
cmp
dec
ins
dec
nop
jl
sti
and
(bad)
(bad)
(bad)
xor
sub
xor
scas
xchg
mov
sbb
inc
inc
mov
scas
xor
es
aam
mov
shl
push
test
pop
ja
pusha
retf
mov
jmp
dec
dec
jmp
scas
icebp
mov
fcomp
ja
nop
and
inc
popf
push
and
test
repnz
loope
aas
jne
jmp
inc
jmp
pop
xchg
cmp
outs
iret
rcr
ror
mov
ins
je
sub
jno
dec
scas
add
add
and
and
mov
je
xchg
push
out
(bad)
mov
sbb
mov
cs
xchg
std
fdiv
adc
mov
sti
mov
push
in
sbb
cli
sahf
sub
call
in
daa
dec
int
sbb
cmps
fnstenv
sbb
mov
jno
test
xor
inc
mov
xchg
aaa
in
pop
loope
lds
mov
push
imul
mov
gs
push
add
mov
jns
(bad)
push
ficom
xor
jg
in
sbb
adc
sub
pop
mov
sub
(bad)
in
mov
jecxz
nop
aas
cmp
adc
sbb
icebp
mov
add
enter
xor
fcmovbe
addr16
push
or
sub
xchg
retf
imul
rcr
retf
push
std
xor
in
mov
mov
iret
aas
pop
inc
push
push
cli
retf
clc
mov
fnstenv
shl
sbb
div
xlat
push
xor
fist
mov
shr
push
fisub
pop
or
sub
or
fcom
in
inc
popa
sub
xchg
mov
mov
jmp
shl
sub
and
mov
imul
inc
ret
pop
inc
pop
or
add
pop
push
lods
jge
inc
fwait
repz
xlat
and
int3
dec
int
cmps
mov
data16
arpl
adc
dec
xchg
je
mov
stos
ja
std
jno
dec
cmp
lea
fistp
fistp
dec
mov
retf
mov
jmp
sub
icebp
pop
fstp
xor
jmp
nop
xchg
dec
xchg
dec
pop
push
mov
push
dec
inc
push
pop
xor
imul
rcl
fld
test
sub
xor
retf
mov
cmp
pop
inc
shr
outs
mov
into
dec
mov
(bad)
xchg
fcmovne
es
inc
(bad)
retf
adc
(bad)
adc
sub
out
ror
test
pop
sub
and
fisttp
mov
adc
dec
ffree
mul
push
mov
jno
outs
jmp
mov
mov
ret
aad
push
sub
add
outs
popf
dec
xchg
xor
push
mov
dec
xchg
mov
es
das
test
scas
xchg
jp
sub
loop
cmp
pusha
cmp
iret
retf
sbb
xor
es
mul
call
jge
mov
imul
mov
mov
pop
sar
cs
jo
add
sub
leave
mov
and
pushf
mov
mov
test
fnstenv
repz
inc
add
pop
push
call
pop
inc
in
mov
xchg
iret
ret
cld
mov
fdivp
rcl
std
and
dec
xchg
jl
sub
or
cmps
int
jmp
mov
popa
or
es
mov
fnstcw
add
popa
fld
ficomp
scas
push
ins
sbb
mov
loope
les
clc
dec
je
call
sbb
fld
ss
outs
xchg
add
ja
xor
ror
es
inc
push
cmp
mov
push
fidiv
mov
pop
(bad)
mov
lahf
cmp
cli
aam
xlat
add
lea
sub
test
cdq
push
div
sub
ss
or
fcomp
xchg
dec
or
out
jns
dec
sub
icebp
loop
into
imul
cs
test
jmp
jg
add
pop
popa
test
cmp
jbe
and
fwait
mul
dec
ret
sbb
adc
scas
js
xchg
pop
loopne
es
jb
nop
aad
push
add
dec
adc
dec
jecxz
mov
mov
jecxz
and
add
push
sbb
test
mov
das
cmp
pushf
rol
popf
adc
jb
sub
push
lods
mov
popf
les
xor
lahf
and
jl
mov
scas
ror
repnz
test
push
lods
cmp
add
les
inc
sub
mov
push
cmp
or
aam
mov
cmp
stc
lock
push
iret
cmp
pop
mov
in
loopne
or
iret
ret
xor
shl
inc
mov
std
jae
dec
push
lods
scas
loope
jo
pop
stc
div
dec
or
xlat
ror
xchg
adc
clc
pop
ror
(bad)
repz
jmp
mov
push
mov
xlat
gs
add
je
xor
or
and
push
adc
mov
mov
test
jecxz
mov
or
sub
push
aad
sbb
outs
out
je
jecxz
adc
outs
les
push
jge
(bad)
adc
aad
dec
outs
mov
mov
popa
out
clc
mov
lock
adc
das
sub
push
adc
sbb
in
iret
cmpxchg
fnstcw
xchg
sbb
push
xchg
jno
aad
push
xchg
adc
cdq
(bad)
jno
or
xor
adc
dec
gs
pushf
fs
mov
dec
test
js
(bad)
cmp
xchg
or
push
mov
retf
pop
xchg
outs
rcl
movs
push
sbb
mov
or
pop
popf
lds
cmps
sub
add
mov
push
pusha
lahf
ret
push
add
nop
mov
mov
adc
stc
(bad)
inc
dec
mov
or
cmc
mov
push
or
add
aam
sub
and
xchg
jle
mov
ins
repnz
inc
fcmovbe
sub
xchg
not
movs
mul
jo
or
cmp
and
mov
cdq
das
shl
cmp
xlat
popa
je
xor
and
or
jecxz
and
and
or
rcr
int3
retf
push
test
imul
dec
xchg
inc
ja
repnz
mov
xor
(bad)
shl
xchg
iret
mov
cwde
adc
push
sub
into
sub
sar
sub
jl
jmp
mov
(bad)
mov
movs
xchg
adc
js
sar
cs
pop
(bad)
pop
stos
and
push
cmp
sti
push
cmovg
es
aaa
xchg
or
repnz
add
or
call
inc
scas
cld
(bad)
aam
mov
scas
popf
xchg
dec
cld
jmp
cmp
in
mov
mov
pop
sbb
mov
pmaxsw
adc
jmp
into
into
add
xchg
fcom
and
mov
fimul
(bad)
sbb
popf
mov
push
loope
int3
xchg
jno
dec
mov
retf
jbe
bound
sbb
pop
adc
popa
mov
in
scas
mov
pop
aam
inc
mov
ins
push
adc
pop
test
xchg
fisttp
mov
jb
mov
stos
and
movs
mov
or
test
adc
in
call
std
push
xchg
retf
sub
lds
xor
fwait
mov
lods
ror
inc
outs
pop
arpl
dec
inc
call
fcom
pop
or
outs
xchg
sub
dec
sub
ret
pop
jnp
mov
aaa
jl
cmps
pop
mov
jle
adc
push
pop
out
jbe
inc
fs
sbb
cld
shl
pop
xor
xor
int3
sub
mov
fwait
data16
jle
je
mov
sahf
push
add
xchg
mov
test
pop
fs
pusha
push
mov
pop
mov
mov
cmp
pop
pop
sbb
push
mov
popa
adc
in
or
loopne
mov
cmp
mul
or
xchg
xchg
xor
inc
mov
(bad)
jb
inc
jae
mov
stos
in
mov
jle
cmp
int
mov
or
shl
repz
adc
not
sub
rcl
push
les
or
sbb
icebp
scas
or
sub
dec
fild
es
pushf
stos
sbb
pushf
push
push
mov
call
mul
cmps
add
leave
cmp
dec
xchg
mov
sub
xchg
cmp
cli
hlt
jns
inc
pushf
jecxz
lea
cmp
mov
shl
pop
mov
loope
pop
or
jo
fisub
aad
test
cdq
xchg
call
sub
out
mov
or
inc
fdivrp
cmp
test
jle
cmp
mov
pop
push
sub
mov
adc
not
out
sar
mov
mov
mul
push
fs
inc
(bad)
jge
sbb
jmp
aas
jns
xor
mov
js
aas
mov
pop
pop
lahf
push
mov
lock
(bad)
les
jmp
mov
or
jmp
icebp
gs
add
adc
(bad)
aad
js
add
stos
and
sbb
xchg
adc
sbb
mov
pop
hlt
mov
sbb
push
das
mov
add
test
and
sbb
das
ficom
jmp
ins
out
shr
xor
test
jle
stos
bound
je
sub
(bad)
aam
adc
sub
push
adc
fnstsw
add
stos
adc
lods
rcr
pop
fild
sar
nop
inc
pop
int3
adc
lods
adc
not
loop
ret
shr
jmp
test
sbb
cmp
cmp
lock
xor
out
shl
sti
rcr
xchg
es
ss
inc
in
cmp
and
xor
push
lods
and
jp
jne
rcr
outs
and
mov
mov
mov
jp
mov
pop
mov
mov
loope
retf
mov
jmp
inc
xchg
cmp
div
sbb
jmp
add
call
mov
sub
lea
imul
and
add
aas
int3
jecxz
xor
cmp
xor
jno
leave
fs
xchg
mov
ins
mov
inc
jl
mov
push
inc
imul
jecxz
mov
jl
lea
aad
mov
stc
mov
inc
jno
adc
into
call
cwde
in
lahf
ins
je
add
aam
(bad)
mov
pop
icebp
sar
jge
xchg
inc
push
mov
cmp
or
aad
scas
push
cld
inc
in
fbstp
mov
fwait
scas
aas
out
xor
add
xchg
jno
fcom
sbb
movs
test
pop
hlt
aad
jmp
ins
rcr
mov
xor
add
add
jns
aad
je
cmp
ins
fstp
adc
sub
sbb
and
adc
aaa
pop
retf
sub
shl
push
fcmovbe
mov
jp
imul
inc
outs
pop
aad
or
sub
pop
or
pushw
xchg
fild
std
inc
push
jecxz
(bad)
leave
scas
cwde
stc
jnp
push
inc
test
push
sub
and
mov
push
add
sahf
pop
dec
add
sub
mov
fiadd
add
sub
pop
mov
mov
add
scas
xor
xchg
and
rol
xchg
cmp
jl
bound
loopne
xchg
ss
xchg
cmp
inc
mul
data16
mov
leave
dec
cmp
jmp
adc
jecxz
je
loopne
out
jo
dec
xchg
in
lea
inc
pushf
sti
gs
cmps
xchg
dec
cmps
and
mov
cs
in
repnz
cmp
or
(bad)
out
pop
in
neg
ficomp
push
test
add
retf
retf
outs
or
in
(bad)
xchg
xchg
add
(bad)
pop
fnstcw
cmp
adc
icebp
mov
aaa
mov
cmp
cmp
mov
jg
jne
loop
cmps
jp
in
fisttp
mov
bswap
adc
lods
fild
mov
inc
inc
xor
jge
cmp
mov
out
bound
add
loope
mov
imul
mov
adc
push
sbb
xor
jmp
ror
repz
cs
xchg
pop
in
xchg
jge
pop
pmovmskb
test
imul
inc
jl
pop
enter
inc
jns
inc
cmp
rcl
cli
cmp
js
call
imul
push
repz
add
ins
sbb
stos
mov
call
push
mov
cmps
inc
mov
jnp
call
adc
das
scas
push
loop
fbld
test
add
cmp
pusha
dec
icebp
enter
out
or
fdiv
add
mov
jl
hlt
and
push
in
push
xchg
icebp
movs
retf
or
aaa
lock
ror
pushf
jns
scas
dec
push
inc
gs
arpl
pop
not
or
in
scas
and
(bad)
in
or
mov
push
je
dec
ss
in
cmp
inc
lods
pop
xchg
icebp
and
xchg
xchg
iret
cmps
mov
icebp
xchg
mov
jo
xchg
ret
jo
es
hlt
push
push
addr16
jnp
stos
movs
mov
ret
cmp
nop
daa
inc
cmp
js
fistp
add
jmp
sbb
inc
xlat
icebp
inc
and
std
(bad)
inc
in
mov
fst
xlat
cmp
sub
xchg
dec
out
sub
xor
scas
fs
mov
lds
or
xchg
stos
nop
sub
es
jne
pop
inc
adc
cdq
xlat
mov
push
dec
xchg
and
xchg
pop
jl
sub
retf
das
jge
ror
or
jns
test
cmc
push
daa
push
ss
nop
(bad)
fcomp
inc
pop
ins
pop
sub
pop
jnp
push
adc
mov
(bad)
inc
outs
cmp
cmp
in
sub
int
ins
adc
ror
xchg
xor
xchg
lock
cmp
call
mov
shl
xchg
cld
pop
pusha
data16
das
sbb
inc
mov
jge
shl
lea
jnp
scas
cwde
not
pop
into
or
mov
lds
lods
dec
or
lock
ja
xchg
sub
cmp
jl
jae
xor
push
push
(bad)
or
(bad)
int
push
mov
rol
movs
outs
dec
mov
jo
(bad)
cmc
sub
dec
mov
shr
lods
retf
daa
dec
sub
ss
or
sahf
push
mov
mov
scas
rol
sbb
sbb
ret
addr16
fst
push
add
scas
dec
mov
push
popa
and
lea
popa
icebp
cs
js
jno
pushf
pop
mov
test
cdq
sbb
inc
xchg
adc
jmp
sbb
inc
in
das
ret
sub
mov
mov
rcr
mov
out
jb
cdq
jl
adc
(bad)
test
or
pushf
sub
jg
push
stos
in
mov
imul
xchg
add
mov
mov
(bad)
popf
rcl
in
movs
bound
mov
fild
movs
into
sub
jp
xchg
jbe
add
(bad)
and
call
pop
mov
popf
clc
cld
std
fdivr
adc
cmp
and
add
xor
fwait
pop
sbb
inc
push
pop
sub
adc
or
push
and
cmps
cld
ja
and
mov
retf
imul
inc
push
sbb
push
dec
xor
cmp
(bad)
js
sbb
pop
not
(bad)
arpl
xor
jns
jp
test
jne
arpl
push
ja
push
lahf
pushf
ss
adc
add
cmp
mov
dec
addr16
pop
xchg
sub
std
push
xchg
add
add
fsubr
cld
jg
daa
cmps
sbb
cli
dec
xor
or
push
or
inc
adc
mov
xor
mov
jmp
call
dec
add
adc
pusha
in
or
or
pusha
lahf
test
rcl
xor
hlt
add
lds
push
dec
mov
(bad)
loope
mov
add
es
bound
and
sbb
push
leave
and
cmc
inc
dec
pop
lds
div
dec
cli
ja
sbb
push
out
cmc
jle
adc
arpl
xor
pop
mov
xchg
pop
icebp
push
rcl
add
mov
pop
js
(bad)
pop
(bad)
sub
sub
outs
jnp
adc
jb
xor
mov
scas
mov
daa
jmp
mov
xchg
mov
xchg
mov
push
movs
jae
fistp
stc
jmp
add
push
fs
int3
repnz
test
push
fadd
stc
(bad)
test
pop
repz
das
mov
mov
push
arpl
call
adc
leave
mov
fistp
add
mov
jae
add
mov
cdq
mov
mov
pusha
stos
push
jno
inc
add
shr
mov
xlat
imul
adc
pop
mov
addr16
push
adc
xchg
les
fld
dec
out
sbb
xor
add
call
std
jno
add
popf
leave
xchg
adc
mov
push
xrelease
clc
cmp
mov
dec
imul
mov
outs
call
jle
jbe
imul
stos
repnz
cmc
clc
popf
dec
jmp
or
lock
or
sub
pop
and
sbb
popf
cmp
shl
(bad)
jmp
movs
sbb
cmps
stc
test
mov
jmp
daa
stc
das
cmp
lods
jb
jnp
sbb
push
out
popa
pop
in
mov
int
lock
and
cmp
in
inc
cld
jno
test
mov
or
fucomp
in
out
jo
inc
rol
sbb
xor
inc
div
xor
push
rol
lock
aad
rcr
jl
in
ja
jns
fwait
mov
mov
test
or
(bad)
dec
rol
sub
mov
(bad)
jns
lds
jae
loop
xor
es
fcomp
js
(bad)
jecxz
jg
fwait
jp
je
xchg
xchg
mov
je
xor
push
jno
dec
pop
or
sub
jno
push
xor
retf
int3
fistp
ds
cmp
mov
into
add
xchg
adc
push
adc
add
jns
repnz
sub
jae
sub
xchg
icebp
xchg
cmp
xlat
push
cmp
mov
test
ja
sub
pop
idiv
mov
fadd
pop
mov
lds
ja
lods
sbb
dec
push
and
or
aas
pop
leave
shr
jp
and
xchg
outs
sbb
cmp
je
rcr
push
arpl
xchg
rcl
xchg
inc
xchg
lea
mov
sbb
xchg
mov
mov
rcl
fist
iret
pop
out
idiv
sbb
push
mov
cs
inc
ficomp
pop
mov
cmps
adc
xchg
dec
dec
push
sti
fild
pop
mov
or
dec
popf
and
adc
fnstsw
jmp
mov
jno
scas
js
xor
pop
pop
pop
and
push
stos
xchg
mov
jg
push
or
jl
stc
aaa
ins
inc
pop
mov
push
sbb
stos
xlat
arpl
fisubr
mov
into
cmp
push
mov
retf
push
jb
mov
sub
outs
leave
aad
inc
xchg
shr
call
retf
sbb
xchg
add
inc
sbb
xor
pop
movs
das
loope
inc
inc
add
dec
pop
out
xchg
inc
cs
out
out
fld
sbb
mov
ror
adc
popa
aas
leave
cld
cmp
xor
or
cdq
mov
jbe
cld
lods
dec
cmp
mov
ins
dec
sbb
push
call
inc
test
inc
push
push
and
dec
test
mov
sahf
mov
cli
dec
or
mov
and
jo
mov
cmp
mov
and
mov
add
cmp
dec
ret
sbb
loopne
loope
rcr
mov
cmp
pop
ja
jg
arpl
(bad)
jp
jnp
dec
mov
(bad)
aam
sbb
fdivr
int
mov
addr16
clc
(bad)
lods
sbb
add
mov
aas
cmp
ds
pusha
imul
xor
pop
stos
mov
stc
pop
cmp
call
sbb
cmp
test
ja
scas
fistp
mov
add
test
stos
mov
and
retf
nop
lods
call
test
xchg
data16
mov
or
xchg
mov
or
pop
and
es
push
mov
inc
sbb
cmc
push
mov
add
lods
lods
rcr
pushf
sahf
shl
sbb
push
sbb
leave
dec
inc
in
in
popf
movlps
jg
cmp
stos
shl
sahf
dec
mov
scas
mov
and
mov
not
push
mov
xor
xchg
data16
xchg
addr16
or
sbb
xor
mov
shl
and
xchg
out
addr16
popa
sub
ins
bound
sub
mov
add
jmp
cmp
mov
or
cdq
pop
xchg
retf
(bad)
jmp
popa
adc
js
adc
jbe
sbb
popf
push
inc
mov
scas
into
(bad)
xchg
push
sbb
data16
pop
cdq
sti
cmc
xor
jmp
aad
dec
je
mov
xor
push
jg
adc
jne
in
scas
dec
xor
std
cmps
pop
ins
or
jge
lahf
xor
stc
(bad)
nop
and
std
jae
mov
mov
inc
mov
inc
sub
inc
lods
cld
repnz
ror
jb
fwait
out
out
jle
mov
ins
stos
pop
push
fild
mov
mov
(bad)
retf
jno
addr16
scas
stos
std
fild
jg
not
(bad)
mov
bound
mov
xlat
aad
jbe
stos
fdivr
jbe
or
sub
or
out
or
repnz
xchg
fwait
push
(bad)
mov
and
fisttp
jg
bound
repz
add
movs
les
lods
xchg
or
out
hlt
adc
dec
jbe
shl
js
sar
add
and
shl
js
das
cwde
dec
fcmovnu
adc
mov
int
cwde
xor
xchg
lock
fcom
xchg
test
xor
xchg
frstor
ret
in
push
xchg
cld
inc
dec
cmp
test
jp
inc
sbb
call
fild
in
xchg
sub
inc
xor
mov
call
mov
popf
and
mov
mov
cwde
icebp
jg
xchg
movs
sbb
dec
daa
mov
mov
jno
mov
add
frstor
ins
pop
xor
dec
add
fwait
mov
jno
jecxz
out
fnstcw
sub
or
aaa
add
ror
or
pop
pop
daa
inc
call
in
jb
sbb
mov
mov
arpl
mov
xchg
mov
popa
push
in
jae
xor
sbb
sub
lods
(bad)
mov
lods
jb
jp
shl
cld
and
xor
mov
sbb
cmp
mov
std
in
fcom
fadd
add
cmp
mov
dec
ret
out
fmul
dec
ror
pop
xchg
cdq
ds
lods
cwde
jp
dec
jno
pop
adc
mov
js
out
jg
sbb
movs
inc
out
push
jo
rcl
(bad)
xor
and
mov
or
scas
rcl
add
or
mov
sub
push
ret
adc
mov
ret
push
data16
scas
call
sbb
repz
or
test
xor
cmp
jnp
mov
jp
mov
adc
mov
xchg
pusha
cs
pop
outs
adc
inc
fimul
xor
fld
(bad)
stc
and
xchg
bsf
icebp
lods
mov
pop
test
lea
rcl
sub
xchg
mov
pop
sub
lea
call
inc
mov
mov
sub
mov
ja
add
add
scas
call
xor
arpl
inc
and
dec
inc
push
je
jge
(bad)
push
pop
rcr
mov
mov
inc
mov
jno
mov
mov
sub
adc
mov
or
dec
repnz
inc
icebp
je
cs
adc
imul
je
loopne
jl
sub
dec
xor
pop
cdq
adc
cdq
and
jnp
outs
retf
stc
in
pop
bt
cdq
out
test
ja
pop
dec
and
sub
loopne
shl
pop
stos
(bad)
xor
mov
xchg
div
out
pop
icebp
mul
cmp
xor
das
repz
adc
mov
in
nop
inc
stc
mov
rcr
fidiv
jmp
je
sar
sbb
xchg
pop
lds
je
and
xchg
pop
jo
and
jle
scas
pop
into
cmc
or
gs
jmp
adc
call
fdivr
ror
jno
add
cmp
jl
xor
rol
sub
enter
xlat
pop
mov
leave
xor
rcr
add
sahf
push
scas
pusha
mov
inc
mov
or
mov
jl
outs
jb
repnz
push
mov
and
sub
loopne
xchg
adc
out
sub
jb
fadd
xchg
(bad)
pop
sar
je
popf
imul
jmp
or
shr
add
div
inc
sbb
in
(bad)
pop
adc
xchg
repz
outs
shr
icebp
shl
aam
sub
es
cmp
and
imul
test
enter
fs
xchg
icebp
arpl
dec
xor
ficom
imul
fcom
xchg
pushf
shl
jg
jle
arpl
sar
add
or
les
jg
push
pop
in
jo
dec
xlat
xor
inc
ret
pop
add
repnz
leave
and
arpl
push
das
inc
call
pop
jl
or
ins
and
pusha
sahf
push
stc
xchg
sbb
xor
adc
popa
sub
sbb
cmp
cs
ss
loop
aam
mov
gs
dec
dec
cmp
sub
mov
inc
sbb
or
lods
ins
sub
add
mov
cs
or
in
sub
fst
test
(bad)
xlat
pusha
out
ror
nop
dec
sub
inc
sub
inc
rcr
movs
xchg
inc
fstp
mov
sub
out
jge
mov
ror
fadd
stos
mov
stos
push
cld
ds
xchg
push
push
cs
and
dec
xchg
adc
mul
mov
cwde
outs
sbb
mov
(bad)
pop
out
jmp
xacquire
push
(bad)
cmp
inc
add
xor
mov
daa
xchg
iret
mov
and
into
mov
nop
add
sbb
(bad)
stos
pusha
rol
push
add
addr16
lock
mov
pop
mov
shr
ja
mov
pop
rol
sub
push
dec
push
jle
sub
dec
mov
push
daa
fnstenv
hlt
fisttp
data16
xchg
dec
mov
test
imul
aas
mov
ins
int3
ret
inc
lds
daa
test
xchg
bound
sar
movs
ror
xchg
mov
sahf
dec
call
cwde
ficomp
repnz
in
fcmovnu
loop
pushf
mov
call
or
push
cdq
xchg
hlt
sub
jo
lods
imul
adc
rcr
ins
out
out
in
repnz
pop
add
and
add
shl
push
loopne
push
getsec
out
(bad)
sahf
shl
adc
mov
mov
rcr
mov
scas
sti
and
xchg
mov
enter
popa
or
lahf
jmp
int
adc
movaps
and
xchg
mov
sbb
inc
pop
jmp
stos
cmp
and
aas
sbb
mov
add
add
dec
adc
jae
test
jl
imul
jle
mov
or
scas
cmp
mov
in
cdq
daa
mov
mov
(bad)
cwde
mov
jp
xchg
je
fst
mov
push
mov
xor
rol
pushw
test
cmps
pop
out
cmp
ins
push
push
repz
leave
test
cmp
add
(bad)
ds
dec
mov
mov
aad
mov
and
gs
(bad)
(bad)
fisttp
mov
xchg
push
dec
inc
in
loop
add
or
sbb
mov
enter
adc
sub
popf
pusha
sub
lea
in
mov
add
xchg
cs
and
or
imul
adc
outs
and
fiadd
test
sahf
sbb
out
sub
xlat
cmp
imul
mov
hlt
packuswb
inc
cli
push
pusha
cdq
(bad)
lods
xor
shr
xor
and
(bad)
adc
sbb
es
sbb
outs
cmp
test
adc
test
push
xor
cmp
(bad)
enter
add
outs
gs
add
sahf
scas
cmp
and
push
ror
hlt
push
loope
inc
not
jp
cmp
(bad)
leave
jmp
push
int3
mov
xchg
xor
cmp
xor
test
adc
or
stos
mov
xchg
les
int3
je
cmp
adc
xchg
imul
push
pop
dec
fld
aad
div
cmc
jle
popf
ins
adc
(bad)
(bad)
leave
cmps
add
mov
dec
add
mov
and
stos
push
or
dec
xchg
lods
sbb
sub
outs
cld
or
and
out
mov
mov
movs
pop
mov
push
cmps
jmp
loopne
sub
scas
xlat
sbb
adc
mov
inc
int3
sbb
ret
pop
pop
pop
retf
xchg
xchg
sub
or
and
mov
xchg
js
dec
and
dec
loopne
not
mov
sbb
add
xchg
cdq
push
lahf
mov
add
xchg
loopne
mov
cld
push
sbb
(bad)
fstp
mov
scas
adc
add
ficom
adc
icebp
imul
retf
(bad)
jge
mov
sbb
movs
retf
add
nop
jnp
jl
jl
aas
push
loop
jg
mov
add
(bad)
push
and
inc
adc
inc
pushf
popa
xor
sub
mov
pushf
cmp
stos
adc
loopne
push
into
call
neg
push
outs
sbb
mov
add
sti
lods
lods
jnp
mov
(bad)
jp
out
sub
jp
pushf
dec
out
push
(bad)
cmp
mov
pop
jbe
jmp
in
imul
ins
lea
daa
sbb
ret
bound
ror
jno
lea
(bad)
into
add
xchg
inc
pop
inc
jp
add
stos
xor
mov
sub
ja
mov
(bad)
push
sub
in
jp
adc
inc
pusha
jle
int
loopne
xchg
fsub
mov
adc
aaa
jl
push
hlt
repz
idiv
xchg
loopne
mov
addr16
test
xchg
lahf
sbb
ror
test
inc
and
fsub
pusha
adc
xchg
and
jecxz
aam
int3
cmps
mov
shl
cmp
sbb
jo
adc
gs
(bad)
or
(bad)
mov
mov
and
retf
and
(bad)
cli
into
inc
and
cmp
ins
sbb
vpsllw
jecxz
cmp
xor
jg
push
mov
sbb
shl
xor
(bad)
out
icebp
and
test
ror
cmp
jnp
rcr
jge
sbb
xchg
fidivr
addr16
sub
jg
mov
xlat
push
sahf
jb
icebp
scas
loopne
fucomp
or
jae
sbb
dec
push
mov
(bad)
out
sti
inc
sbb
(bad)
dec
rol
and
sub
clc
aad
retf
repnz
xchg
repnz
jb
pop
in
arpl
mov
popf
inc
inc
adc
mov
adc
xchg
int3
mov
jmp
sahf
pop
push
dec
xor
or
xchg
and
mov
xchg
retf
push
les
sub
sbb
retf
jnp
add
mov
inc
(bad)
mov
cdq
scas
lahf
jbe
mov
xor
adc
inc
xlat
push
jle
fidiv
movs
xlat
add
sbb
jne
aad
add
adc
xchg
pop
lea
in
xchg
xor
ret
mov
xchg
pop
mov
aaa
mov
lods
jo
std
enter
xchg
sbb
xchg
hlt
add
sbb
pop
jg
int3
push
stc
mov
(bad)
mov
and
inc
sbb
sub
cmps
cmp
pusha
sub
add
push
inc
ins
sub
sbb
mov
add
mov
test
(bad)
test
ja
mov
in
cmps
jo
cdq
stos
jge
gs
ret
jp
nop
pop
inc
imul
bound
mov
es
add
daa
iret
mov
xchg
mov
dec
out
cmp
sbb
cmp
js
daa
addr16
cdq
(bad)
(bad)
daa
mov
mov
mov
adc
mov
lahf
aas
rcl
sbb
mov
mov
xor
ja
xor
(bad)
frstor
xchg
(bad)
bound
push
dec
sbb
or
fldenv
scas
int
cmp
sar
shl
into
aad
sbb
nop
add
(bad)
in
xchg
push
cmps
loopne
or
xchg
push
jns
mov
ror
add
iret
sub
gs
xor
addr16
adc
and
imul
rol
ror
fisttp
xchg
neg
rcr
inc
dec
test
hlt
(bad)
sub
iret
jg
sub
add
add
mov
push
jae
pusha
mov
add
enter
(bad)
add
pop
adc
fs
inc
rcr
sub
and
dec
pop
pop
std
rol
inc
rol
lock
in
push
and
leave
ds
and
adc
addr16
lds
and
cmps
sub
out
sbb
jecxz
fs
sbb
xchg
sbb
lods
inc
in
sbb
hlt
push
xchg
shr
push
mov
sbb
push
jmp
in
jge
and
push
jecxz
jecxz
imul
fisub
fwait
adc
ds
shl
fdivp
sub
les
push
sub
das
sbb
aam
push
lock
pop
cli
xchg
ret
cmp
cmp
mov
icebp
lahf
jmp
sub
outs
pop
cmp
in
mov
addr16
push
scas
sub
push
or
dec
repnz
xor
in
inc
fidivr
out
add
add
push
aas
mov
add
push
xchg
adc
push
call
into
push
addr16
inc
adc
(bad)
cli
mov
mov
sbb
std
(bad)
cli
xchg
xor
lahf
mov
mov
inc
dec
out
(bad)
bsf
dec
xchg
sar
iret
test
cmp
inc
jns
xchg
mov
test
inc
adc
fstp
in
jge
xchg
aas
mov
pop
adc
cli
sbb
pop
xor
jb
out
ss
std
in
jl
cli
jae
mov
cmp
cmp
xchg
or
add
xor
jl
and
xchg
xchg
cmp
inc
lods
push
pop
jecxz
mov
and
stos
(bad)
call
mov
and
in
faddp
ss
scas
mov
push
test
cdq
(bad)
cdq
sub
push
adc
pop
and
mov
mov
xabort
xchg
sahf
pop
dec
adc
lea
sub
push
pusha
lods
push
mov
push
mov
hlt
fdiv
lods
push
mov
mov
push
add
(bad)
jmp
push
sub
inc
mov
int3
push
out
sbb
inc
(bad)
(bad)
sub
sbb
sub
sbb
js
test
(bad)
mov
mov
gs
add
mov
int3
fist
call
or
cmc
mov
sti
das
div
mov
cdq
push
adc
cmp
sar
(bad)
push
lods
xor
fsub
stos
(bad)
cmc
lahf
mov
or
inc
mov
call
or
mov
or
jns
pop
pop
pop
aas
imul
or
ror
(bad)
sbb
pop
fwait
xlat
jg
and
lods
inc
jp
aaa
xor
mov
(bad)
aad
aas
dec
hlt
in
sub
sbb
or
mov
fwait
es
aad
xor
push
xchg
xchg
inc
xor
test
and
rep
or
sub
adc
add
cmp
cli
shl
xchg
(bad)
or
jmp
shl
stos
call
mov
imul
gs
out
jmp
jmp
(bad)
repnz
jne
inc
in
xchg
jb
inc
mov
jbe
scas
dec
xchg
outs
pop
mov
cmp
jmp
out
sub
sub
sub
inc
popf
test
inc
cmp
clc
sub
imul
jo
cmp
and
out
enter
xor
movs
xor
push
mov
push
mov
pushf
xchg
hlt
into
es
into
adc
imul
pop
push
push
jo
loopne
in
or
out
lods
jbe
dec
cmp
jne
das
mov
pop
(bad)
mov
loope
dec
fstp
push
jg
mov
lahf
pop
mov
(bad)
mov
mov
rcr
bswap
in
jl
rcr
cmps
fwait
loope
loopne
push
cs
scas
jae
popa
sbb
imul
nop
or
and
sub
shr
int3
push
idiv
adc
mov
aas
(bad)
cli
xchg
sar
cwde
call
mov
lock
adc
xchg
test
or
mov
pop
lods
out
(bad)
and
pop
cmp
push
sub
mov
adc
aad
iret
pop
pop
add
stos
mov
push
mov
xor
push
ins
xchg
and
aam
mov
lahf
sbb
mov
xchg
call
jcxz
imul
cmp
inc
js
pop
xchg
jo
pop
es
or
push
cmp
ret
cmp
test
mov
jo
cwde
jge
push
xchg
add
lea
and
fidiv
push
cmpps
jb
int3
mov
add
or
shl
sub
daa
push
stos
inc
lea
fwait
loope
idiv
leave
cmp
out
aas
(bad)
dec
lds
ret
cld
inc
lock
sti
iret
mov
fld
push
mov
jecxz
and
fwait
icebp
out
out
xchg
adc
pop
int3
(bad)
ret
and
fdivr
fs
cmp
push
ja
int3
add
jmp
jmp
dec
dec
data16
in
into
scas
aad
sbb
in
jbe
push
sub
dec
mov
sub
stos
mov
inc
xchg
fwait
pop
scas
sbb
rol
mov
mov
pushf
fadd
and
ret
ror
imul
maxps
mov
inc
call
cmp
ss
mov
mov
sbb
cmp
push
repz
mov
fild
stos
cmp
jno
je
cmp
inc
xor
cmps
call
and
jne
mov
mul
test
inc
xchg
test
(bad)
mov
mov
adc
cmp
mov
xor
dec
jo
popa
sub
jbe
jne
mov
xchg
inc
in
mov
jo
adc
fcos
rcl
icebp
retf
test
(bad)
jno
pushf
fidivr
cmp
mov
data16
sbb
and
adc
call
clc
scas
movs
and
sbb
mov
pop
outs
lahf
adc
call
mov
fs
xchg
retf
dec
out
xor
mov
mov
pop
icebp
and
scas
bound
and
and
test
mov
jb
in
into
cmp
ins
in
mov
adc
pusha
jge
cmps
mov
lea
jge
mov
loopne
out
clc
ret
mov
stc
inc
lods
cmps
pop
out
loop
cdq
sub
mov
mov
ret
or
out
call
repz
jmp
aaa
dec
(bad)
nop
xchg
add
sbb
mov
popf
push
pop
adc
mov
test
jbe
jl
and
add
(bad)
stc
xor
mov
(bad)
sbb
mov
cmp
lods
jmp
push
(bad)
(bad)
movs
popf
cmps
mov
out
inc
jne
loopne
sub
and
pop
xchg
data16
stc
xchg
mov
add
and
mov
pop
movs
mov
xchg
ja
pop
mov
mov
loopne
cmps
in
(bad)
xor
inc
nop
mov
loopne
addr16
cli
mov
push
mov
sbb
sub
ds
(bad)
push
call
stos
lsl
pop
lahf
aas
sub
maskmovq
neg
repnz
push
std
mov
push
mov
inc
cmp
sbb
jae
xchg
aad
jle
dec
add
pop
ret
aad
test
gs
mov
pop
adc
pop
inc
retf
jmp
pop
das
in
nop
cld
ror
movs
dec
xchg
fs
ss
clc
cmp
sbb
pushf
cmp
ret
mov
adc
je
pushf
push
adc
pop
sub
pop
and
adc
cmp
xor
jmp
lea
ss
or
jnp
loope
mov
cmps
push
inc
fisttp
add
xchg
arpl
scas
and
cmp
ss
sub
jge
dec
mov
cmp
enter
leave
cmp
loope
addr16
loope
stos
(bad)
inc
mov
bound
retf
loop
cmp
and
add
call
xor
out
push
faddp
stos
(bad)
ss
xchg
sbb
daa
add
sub
mov
adc
and
rcl
mov
rol
jge
jecxz
or
cli
outs
shl
push
inc
lds
popf
cdq
push
xlat
call
push
jne
mov
out
ret
scas
fist
jmp
bound
mov
xchg
and
(bad)
xchg
out
pop
pop
stc
add
sub
jge
push
mov
dec
out
push
leave
xchg
add
xchg
and
and
fld
jge
xchg
pop
and
cli
or
cmovno
xchg
rcr
imul
and
and
push
or
movs
jle
sub
mov
mov
sti
paddd
mov
into
dec
sbb
mov
xchg
fmul
mov
nop
lds
sbb
test
sub
enter
sahf
mov
cli
popa
cld
repz
shl
mov
or
push
aad
mov
cdq
cwde
cmp
fbld
jnp
mov
pop
(bad)
mov
mov
imul
jle
pop
xor
int
lods
gs
adc
das
push
or
scas
or
xor
fs
or
sub
ins
push
test
ror
cmps
pusha
icebp
mov
push
xchg
fisubr
sbb
repz
idiv
mov
jg
fisub
cdq
add
and
add
pop
js
mov
retf
rol
lock
sar
jae
ds
xchg
xchg
mov
and
sbb
xor
add
mov
mov
(bad)
sbb
cmp
test
je
call
shr
call
stc
movs
fcmovbe
int3
pop
pop
loope
inc
je
inc
xor
clc
lahf
rol
gs
pop
dec
lds
fcmovne
xor
pop
adc
jg
daa
sub
or
dec
push
dec
stos
jl
dec
xchg
loopne
sub
inc
fmul
jnp
jp
icebp
(bad)
loopne
daa
jmp
pop
test
sbb
fist
xchg
jp
and
aaa
cmp
test
ins
cmp
repnz
pop
ror
sub
popa
pop
jge
cmps
add
mov
jns
in
aad
push
es
cmps
movs
xchg
pop
enter
idiv
lock
xchg
retf
sbb
sbb
or
sbb
popa
shl
sbb
test
ss
ins
vaddsd
cmc
xlat
fmul
cs
jae
call
loope
movs
pop
xor
adc
clc
pop
(bad)
int3
imul
sub
mov
mov
leave
pop
(bad)
mov
ins
jns
imul
jmp
add
push
out
pop
mov
push
test
xchg
retf
test
(bad)
(bad)
cmp
repz
movs
fsubr
and
in
dec
nop
in
retf
xor
fsubr
jge
dec
popf
shl
js
adc
and
je
in
dec
das
sbb
mov
data16
adc
imul
jne
xor
jnp
mov
adc
fistp
sub
fst
inc
mov
cmc
in
inc
and
push
(bad)
push
fdiv
jno
cmp
sub
popf
cmp
loopne
and
push
sar
mov
dec
out
outs
movs
xchg
pusha
fimul
xchg
cmp
repnz
leave
pop
jae
push
sbb
je
cmp
mov
or
push
pop
pop
gs
cmp
push
fs
shr
and
cmp
mov
push
jnp
inc
out
mov
pop
cwde
in
xchg
int3
mov
cmp
ds
xlat
sar
dec
shl
xchg
in
loope
pop
aam
and
inc
aad
inc
xor
or
ss
xchg
sub
xor
mov
dec
pushw
jnp
push
sbb
call
and
sub
pop
adc
aaa
push
xor
mov
aas
mov
aam
sbb
fs
ja
jbe
jb
fisubr
stc
adc
mov
mov
out
xchg
adc
adc
dec
jno
mov
mov
inc
bound
or
in
adc
aad
or
xor
push
xor
rcr
cmp
push
out
aam
pop
xor
pop
sub
inc
out
(bad)
std
out
fdiv
push
in
pop
and
pop
sbb
and
add
push
jnp
dec
js
call
cmovl
enter
dec
sbb
inc
adc
cmps
pop
sub
movs
js
or
dec
xor
daa
out
rep
dec
xchg
dec
arpl
popf
lds
dec
(bad)
daa
sbb
imul
mov
cs
std
add
ret
or
adc
mov
in
push
inc
add
shr
lods
out
add
sub
sbb
or
inc
pop
fldcw
cdq
std
push
ins
ins
retf
fimul
jg
adc
dec
sbb
(bad)
cli
pop
jl
test
test
pop
das
sbb
jo
aad
push
mov
mov
scas
clc
add
mov
cmp
pop
fcmovnu
jle
aad
retf
or
xor
mov
fild
push
sahf
xor
out
mov
jo
push
(bad)
dec
cmp
or
imul
(bad)
loop
into
mov
shr
out
mov
bound
jo
push
adc
lock
push
pop
gs
or
icebp
sbb
sbb
xor
pop
test
pop
xchg
pop
loop
(bad)
push
jl
outs
sbb
xor
mov
int3
fstp
or
pop
add
stc
ds
jmp
or
add
xor
mov
cmp
(bad)
ins
push
inc
adc
lock
movs
jae
xor
(bad)
cli
ins
or
lock
dec
out
std
pop
loope
adc
jmp
jl
or
pop
cmp
mov
add
in
xor
mov
js
mov
jne
sub
(bad)
push
mov
fadd
and
js
xchg
sbb
cmp
enter
push
push
dec
jns
das
mov
dec
test
push
mov
jae
mov
das
dec
push
add
ficomp
in
adc
mov
nop
mov
lods
inc
(bad)
repnz
mov
inc
pop
mov
ins
mov
mov
cmp
dec
mov
scas
pop
xor
daa
lock
sub
scas
mov
imul
and
popa
rol
jns
push
inc
xchg
call
sbb
and
pop
mov
dec
mov
adc
xchg
jmp
cmc
sbb
sbb
mov
mov
pop
inc
lahf
fbstp
push
clc
popf
les
xchg
inc
push
xor
mov
lsl
xor
add
jmp
retf
enter
std
scas
xchg
mov
xchg
pop
shl
(bad)
(bad)
sahf
and
jmp
test
mov
into
enter
lods
mov
mov
or
je
xor
pop
sub
mov
add
cmc
movs
(bad)
xlat
pop
fstp
push
mov
xchg
fld
push
(bad)
stos
sub
lods
or
mov
xchg
xor
adc
mov
push
mov
mov
sub
mov
icebp
jbe
arpl
mov
(bad)
test
or
popa
push
add
stc
idiv
scas
or
call
ins
dec
gs
mov
sbb
add
adc
add
(bad)
xchg
jecxz
(bad)
fsub
jge
icebp
add
xchg
je
ins
or
sti
mov
xor
and
cdq
mov
jp
aas
rcl
out
cmp
lods
call
inc
ss
jl
mov
std
cmp
outs
adc
inc
cwde
pop
call
stos
loopne
or
sbb
xor
lods
cmps
mov
fucom
lahf
fcom
stos
iret
mov
xchg
add
out
jecxz
fwait
adc
pop
mov
pop
in
add
mov
xchg
pop
and
lods
xor
in
int
stos
addr16
and
mov
xor
adc
add
repz
and
cli
jmp
mov
inc
imul
xor
sbb
inc
push
(bad)
jb
mov
and
rcl
fdiv
(bad)
cmps
loop
pop
pop
pop
jbe
or
add
pusha
mov
inc
jle
js
pop
jl
push
xchg
xor
push
loop
dec
(bad)
test
es
xlat
je
xchg
cwde
daa
mov
stos
cmps
and
and
sahf
pop
xor
push
inc
or
aad
jl
dec
aaa
shr
and
shr
push
call
or
cmp
arpl
jl
mov
mov
dec
mov
cs
cmp
movs
xchg
test
ins
dec
mov
loop
(bad)
and
test
repz
push
sub
stc
mov
dec
mov
jnp
pop
ins
out
out
scas
ffree
in
xor
xchg
fs
loop
mov
jp
push
inc
pop
inc
inc
sub
sbb
lods
jecxz
js
xchg
stos
pop
nop
xchg
movs
cs
and
mov
ja
mov
xchg
movs
xchg
(bad)
or
sbb
(bad)
(bad)
fdivr
loop
xor
xchg
fisubr
out
cwde
push
xchg
push
mov
xchg
cli
mov
mov
ins
std
push
(bad)
hlt
lds
es
fwait
inc
push
jnp
push
pop
jns
clc
and
in
rol
or
aam
sahf
inc
jb
outs
mov
call
jno
ja
mov
and
add
and
fadd
scas
xlat
jns
sahf
and
repz
mov
inc
sbb
rol
(bad)
sbb
pop
xchg
out
sbb
xchg
push
mov
rol
pop
aaa
fadd
cmp
jb
int3
lods
cmp
xor
push
enter
fxch
lea
sahf
inc
mov
xchg
and
into
push
mov
dec
test
fstp
cwde
aam
out
cdq
aam
lahf
out
aad
mov
imul
fcmovu
lock
shl
sbb
pop
repz
shl
pusha
cmp
adc
pop
dec
clc
out
pop
xchg
hlt
cmc
loop
cmp
add
in
pop
aam
std
sub
(bad)
imul
test
icebp
jnp
scas
adc
call
arpl
inc
pop
inc
rcr
or
dec
mov
xor
cs
or
pop
outs
mov
dec
mov
add
adc
xor
add
sti
test
idiv
aaa
adc
movs
sub
pop
adc
mov
push
mov
xchg
push
lods
inc
aas
test
jmp
xchg
lahf
les
or
call
je
aad
stos
push
int
aam
fild
(bad)
cdq
xchg
mov
lds
xor
lahf
and
in
sbb
lea
xchg
mov
cmp
pop
lahf
out
cdq
dec
outs
in
out
xor
inc
ss
movs
retf
les
lahf
push
aas
cmp
push
jl
xor
pushf
bound
es
mov
inc
jns
scas
popf
lock
add
push
in
jne
cmp
pusha
test
add
jbe
xor
pop
xor
add
lods
arpl
xor
or
or
xchg
or
add
jmp
movs
pop
(bad)
out
sub
mov
popa
xor
mov
outs
loopne
add
retf
jmp
xlat
stc
lahf
adc
mov
aaa
xchg
retf
mov
fnstenv
mov
movs
fwait
lds
jo
xor
rol
int
(bad)
(bad)
fadd
aaa
loopne
in
pop
push
ret
pusha
fdivr
pop
ins
push
lea
retf
cmps
repnz
imul
push
dec
fwait
retf
aaa
add
cs
mov
ins
inc
mov
cmp
sub
adc
mov
jo
xlat
mov
jmp
imul
clc
fisubr
add
adc
fcmovnu
inc
fwait
and
mov
out
pop
retf
fadd
repz
sbb
outs
shl
nop
sub
dec
loopne
push
fucompp
int
dec
outs
cmc
pop
push
xor
push
sbb
add
mov
sub
mov
inc
jo
xchg
or
inc
cmp
jge
mov
mov
dec
(bad)
xor
(bad)
jmp
xor
add
addr16
adc
cli
mov
outs
push
xchg
shl
adc
test
lock
jp
xchg
push
sub
fadd
rol
mov
mov
ud1
(bad)
stc
stc
loopne
mov
or
push
and
ds
(bad)
rcr
lods
and
(bad)
psrlq
aad
lea
add
xchg
fadd
je
mov
adc
jb
psubsw
sub
fmul
pop
in
in
adc
retf
pop
cwde
pusha
dec
push
sub
xlat
and
stc
lods
xchg
ins
in
movs
psubq
ja
retf
std
push
add
dec
jns
push
pop
jp
js
mov
movs
xchg
adc
xor
js
sub
xor
mov
cmp
adc
sbb
jp
xchg
adc
lds
rol
paddq
shr
dec
out
jns
ret
int3
dec
cmps
cdq
and
cmp
push
mov
cs
mov
fisttp
adc
iret
sar
push
ret
cmp
or
pop
inc
pop
icebp
pop
cld
repnz
pop
cmps
ins
into
sbb
scas
rcl
inc
cmp
imul
ror
push
mov
push
ret
xchg
mov
lock
in
lods
cli
daa
dec
mov
inc
lods
jne
fs
aad
(bad)
fnstenv
cmps
das
sub
fwait
cwde
dec
loope
adc
jp
retf
push
rcl
sbb
shl
call
mov
nop
pop
or
inc
push
add
ror
lods
scas
adc
je
xchg
push
arpl
adc
push
inc
loop
bound
shr
jns
mov
imul
or
dec
std
fistp
push
(bad)
sar
inc
mov
shl
xor
dec
add
inc
fwait
xlat
test
ficomp
imul
(bad)
sub
int
add
ret
cwde
inc
dec
add
das
stos
rcr
cmp
clc
pop
add
stos
mov
jae
xor
rol
lock
xchg
xchg
movs
add
jo
std
jp
cs
push
aas
or
mov
outs
iret
or
aas
inc
out
dec
adc
jmp
cli
xor
add
sbb
mov
pop
cmp
jno
sti
push
mov
jne
call
or
mov
cmp
gs
rol
cmp
push
(bad)
loope
pop
rol
shl
nop
aaa
add
outs
movs
test
jmp
iret
ins
and
pop
push
xor
add
mov
xchg
and
bound
sub
xchg
sti
and
gs
ja
or
cmps
fs
out
add
ins
test
push
and
es
or
out
push
jbe
push
inc
xchg
inc
and
sbb
adc
inc
xor
loopne
repnz
and
int3
xor
fstp
push
cmp
das
xor
movs
cmc
shl
push
cmp
test
mov
cmp
inc
cs
adc
xchg
out
lods
inc
out
adc
mov
cmp
imul
add
scas
aad
xlat
xor
xchg
shl
adc
dec
jns
(bad)
(bad)
lahf
test
(bad)
das
push
in
mov
(bad)
rcl
jne
xlat
xchg
pop
xchg
shr
push
nop
or
mov
aaa
(bad)
mov
xor
xchg
lock
cmps
add
mov
xchg
mov
pop
(bad)
sbb
hlt
(bad)
std
ja
retf
dec
or
jns
in
mov
out
xor
push
xchg
and
jb
test
stc
out
sub
dec
fidiv
add
cmp
fld
imul
(bad)
aam
mov
sub
shr
leave
lock
lds
mov
jb
bound
pop
in
bound
dec
stos
das
popa
je
(bad)
loop
jae
mov
test
in
popa
int3
mov
into
mov
retf
in
movs
icebp
mov
loope
add
in
add
xchg
pop
es
add
stc
sbb
push
loopne
sbb
fist
and
mov
dec
cmp
inc
mov
pop
outs
out
cmp
aaa
inc
dec
das
inc
imul
clc
in
mov
loopne
mov
jbe
xchg
sbb
jne
iret
xchg
sbb
xlat
mov
pop
xlat
in
ficomp
retf
in
jp
movs
iret
and
inc
xchg
outs
ret
push
jne
cmp
(bad)
mov
xor
fldcw
push
jg
inc
rol
push
ds
mov
not
inc
and
stos
fidivr
pushf
cld
mov
mov
jmp
rcl
mov
push
icebp
xor
sbb
fwait
lea
add
cdq
retf
pop
js
cmp
cld
rcl
mov
lahf
and
adc
scas
add
pusha
mov
jbe
(bad)
test
pop
add
or
push
and
mov
jbe
xchg
iret
bound
mov
hlt
int3
out
add
pop
push
sti
sub
(bad)
jmp
push
cmp
fisub
or
sahf
cmc
inc
push
push
push
jge
push
xchg
(bad)
jmp
sbb
or
stos
cld
xchg
add
jo
mov
jno
adc
sbb
scas
sub
mov
sbb
fldln2
das
(bad)
popa
call
mov
stos
fdiv
add
fmul
mov
sar
pop
rol
sub
or
inc
inc
add
fsub
mov
and
shl
push
aaa
in
icebp
inc
std
aad
inc
test
(bad)
and
rcl
loop
dec
pop
arpl
leave
pusha
movq
push
into
sbb
mov
adc
repnz
out
xor
stc
mov
popf
xlat
int3
pop
int
popf
aad
ret
loop
push
out
repz
bound
push
ud0
clc
cwde
data16
leave
mov
jg
cwde
cmp
xchg
sti
jmp
bound
call
push
and
mov
sbb
sub
icebp
enter
dec
movs
retf
cmp
es
and
ror
sahf
sub
lods
je
iret
and
sbb
out
adc
mov
in
add
cld
push
je
cli
xor
pop
sbb
in
retf
or
jbe
sar
lahf
cmps
mov
pusha
mov
adc
sub
(bad)
xchg
pop
mov
inc
and
xor
call
icebp
push
call
dec
les
jo
shl
mov
push
jns
daa
loopne
dec
retf
stos
pop
sub
std
ins
mov
repz
adc
and
stos
and
mov
mov
mov
inc
daa
pop
mov
ins
mov
retf
cwde
adc
pop
cmp
push
pop
(bad)
push
mov
sbb
add
into
je
pop
in
jne
popa
jmp
ja
jns
mov
sahf
fldl2e
fld
jb
mov
xchg
lods
adc
dec
jnp
or
xor
sub
test
xor
(bad)
leave
sbb
repnz
cdq
sub
mov
outs
fldenv
push
dec
outs
fwait
ror
(bad)
test
loope
pop
cmp
retf
xchg
out
jbe
ret
and
dec
or
aam
retf
sbb
popa
or
push
(bad)
sbb
adc
call
mov
ins
call
loop
rcl
sbb
mov
popf
enter
mov
mov
leave
in
popf
fild
cwde
lds
imul
out
add
pop
push
jecxz
out
sar
test
call
repz
imul
mov
into
adc
pop
(bad)
mov
fndisi(8087
bound
push
outs
dec
push
xchg
mov
movs
inc
mov
jmp
and
fidivr
icebp
or
fxrstor
jmp
rol
mov
(bad)
fisttp
test
sub
les
jp
pop
cs
sub
dec
mov
xor
popa
add
push
mov
cmp
je
test
mov
enter
push
pop
push
outs
mov
mov
push
adc
dec
mov
mov
cli
(bad)
sbb
loopne
addr16
test
call
and
pop
sbb
mov
push
jno
popf
jbe
sahf
call
cwde
in
int3
mov
rcl
mov
aad
(bad)
int
inc
scas
xchg
sti
loop
jp
inc
cmc
fild
aad
pop
je
push
into
movs
mov
sbb
js
das
bound
sbb
in
inc
ins
pop
inc
push
sbb
jae
out
xchg
sub
xchg
into
in
push
lahf
and
ss
sub
mov
ds
imul
shr
lahf
or
jbe
push
mov
ins
xchg
pop
pop
loop
outs
test
mov
push
pop
sar
mov
push
nop
aas
aas
sub
push
add
dec
mov
push
push
dec
mov
or
mov
das
pop
out
in
sub
pop
push
jmp
mov
ret
pusha
mov
cmp
mov
in
test
loopne
js
sbb
jo
xchg
pop
repz
das
pop
jo
out
pushf
repnz
push
jno
and
repz
lods
jg
cmp
pop
jns
je
inc
das
push
stos
or
in
push
push
inc
xchg
cmps
cld
lods
xchg
mov
adc
lea
pop
enter
cli
ret
mov
jo
mov
out
out
sar
aas
shl
test
sahf
clc
mov
frstor
sbb
rcl
or
push
add
sub
xchg
jl
ins
aas
bound
jmp
jle
bnd
out
retf
movsx
adc
stos
int
push
mov
mov
sub
leave
outs
mov
cmc
pop
xor
cmc
jle
push
cmp
mov
data16
imul
stos
jae
xor
sbb
ret
ins
pop
dec
or
mov
jle
fcmove
add
or
push
fs
adc
inc
fiadd
in
cli
mov
or
push
cs
ret
push
sbb
sub
aam
jg
push
and
dec
aaa
div
sbb
xchg
fimul
jecxz
pop
ret
push
(bad)
pop
lock
xchg
pop
sbb
add
int
jns
bound
jns
(bad)
call
repz
call
adc
call
sahf
push
out
xchg
sub
pop
fld
movs
or
cwde
inc
fs
pushf
adc
mov
gs
imul
ins
or
mov
call
pop
nop
in
xchg
out
out
fstp
add
mov
mov
pop
add
adc
lds
out
test
cmp
pushf
mov
adc
in
bound
(bad)
sbb
in
push
mov
cs
add
mov
int3
scas
adc
in
cmc
jle
les
mov
or
adc
mov
movs
dec
pop
data16
jbe
push
jb
cmp
cli
or
jmp
dec
push
and
and
shr
pop
sti
popf
stos
push
dec
pop
bound
inc
inc
lds
imul
add
xor
mov
les
test
mov
fsubr
mul
icebp
sub
cmp
sbb
jno
mov
enter
mov
mov
sub
push
dec
jge
scas
xchg
psllq
xor
stos
bnd
inc
jle
jle
push
aaa
push
xchg
mov
and
ins
push
inc
or
mov
xor
fmul
fild
xor
mov
or
ss
add
retf
int
int
xchg
fwait
or
les
mov
inc
push
inc
dec
call
cmp
pushf
pop
pop
fadd
aaa
cmp
push
xchg
push
mov
mov
push
xchg
sub
sub
stos
enter
adc
hlt
into
jae
in
push
jb
sub
pop
jns
out
mov
lds
adc
out
ins
inc
adc
lods
pop
ret
push
jbe
outs
mov
and
push
or
sub
mov
jnp
test
lods
xchg
jecxz
add
mov
cmp
and
sub
and
stos
and
push
sahf
icebp
jae
clc
in
in
pusha
(bad)
cmps
adc
xchg
ins
les
cdq
rcr
cld
sbb
fdiv
loop
xchg
fucom
and
pop
jae
mov
adc
push
sbb
jno
ins
cdq
add
pop
pop
cmp
mov
test
add
inc
dec
and
mov
inc
or
jae
or
call
ret
lds
push
adc
mov
fidiv
stos
or
out
cmps
push
dec
pop
aas
shl
xor
lods
mov
add
xchg
sbb
(bad)
jns
cmp
pop
dec
sbb
popa
push
mov
mov
adc
aad
js
lds
pop
mov
cmps
push
sti
xor
call
xor
aas
xchg
cdq
aam
std
mov
pop
out
pop
jnp
pop
(bad)
fst
or
push
jns
sbb
mov
dec
daa
ja
jo
push
outs
sub
sbb
dec
cmp
int
dec
in
add
in
popa
test
test
jne
ror
retf
inc
popa
leave
or
and
repz
shr
xchg
or
in
test
fisubr
enter
daa
aam
test
imul
fwait
jmp
mov
cmp
sub
adc
pop
(bad)
cmp
pop
dec
xor
ror
xlat
jno
movs
jno
cs
(bad)
rcr
inc
sub
icebp
shr
mov
mov
or
add
mov
jb
mov
jle
jbe
mov
adc
(bad)
add
movs
jbe
dec
aas
pop
inc
ror
jmp
fcomp
xchg
mov
jp
test
fidiv
mov
mov
shl
mov
pop
cmp
mov
xchg
lods
mov
daa
dec
cmps
loope
ror
outs
clc
add
enter
mov
fnstsw
sahf
jle
mov
or
xlat
sbb
mov
punpckhdq
sbb
add
stos
jl
ins
jp
je
aaa
push
mov
add
pop
test
mov
mov
xchg
popa
mov
rep
jb
jno
ret
dec
mov
mov
dec
xor
and
push
imul
and
adc
and
lods
push
xchg
loop
dec
xor
out
sub
mov
fistp
sub
icebp
pushf
xor
movs
jnp
dec
fnstcw
or
jg
sbb
xor
out
dec
jecxz
out
scas
lock
pop
loopne
mov
add
jne
mov
idiv
push
add
xchg
adc
jp
sub
mov
imul
jmp
xchg
ins
out
push
mov
sub
mov
cmp
pop
sub
push
push
cmp
push
imul
paddsw
sub
jno
add
xchg
test
lods
fnstsw
dec
and
xor
scas
jmp
jecxz
mov
inc
imul
adc
(bad)
int3
pop
mov
rcl
cld
fisttp
or
retf
inc
aam
inc
pushaw
sahf
xchg
cmp
ja
mov
cmp
imul
ins
cwde
out
sub
retf
fwait
xor
in
arpl
mov
pop
cmc
scas
gs
std
cmp
and
jecxz
and
lea
ins
push
adc
push
push
cmp
call
push
and
pop
mov
jmp
xchg
movs
sbb
cmp
popa
xchg
sub
ror
js
add
pop
mov
push
sbb
mov
adc
shr
hlt
call
jle
jle
js
cmp
pop
inc
or
adc
sbb
int
xchg
(bad)
push
(bad)
(bad)
out
sbb
inc
(bad)
repnz
jne
or
mov
in
pusha
int3
addr16
sbb
sub
loopne
sbb
jo
pop
adc
std
xchg
ret
test
pusha
in
pushf
add
ja
scas
pop
and
jmp
rol
mov
call
popf
cmp
xchg
das
ins
les
out
push
push
scas
sub
js
imul
mov
sahf
aad
pop
(bad)
adc
xor
das
(bad)
sti
adc
xor
push
cmp
sub
push
cmp
dec
retf
aad
in
mov
push
test
dec
adc
in
lds
stos
test
pop
cmp
dec
(bad)
(bad)
jmp
fidiv
mov
inc
rcl
(bad)
imul
int3
or
mov
and
shrd
out
test
xchg
dec
test
loope
mov
inc
pop
mov
loope
cs
std
mov
push
call
scas
pop
mov
jmp
jl
arpl
xchg
cmp
imul
xor
and
inc
dec
jne
pop
arpl
dec
cmp
movs
sub
test
fild
stos
push
adc
pop
mov
es
(bad)
jnp
popf
mov
inc
in
adc
xor
jmp
mov
js
ret
mov
mov
add
push
xchg
ins
je
jne
inc
scas
sbb
xor
and
ja
jmp
xlat
mov
pop
xor
and
cld
xor
sbb
fld
and
scas
jp
jbe
loope
hlt
sbb
shr
cmps
and
hlt
add
call
imul
dec
dec
retf
and
bsf
jns
lds
dec
lock
add
jecxz
and
xchg
fdiv
xchg
scas
cs
xor
shl
jo
int3
push
cmp
loopne
stos
mov
(bad)
inc
int
fadd
or
div
jmp
sub
ss
popf
dec
or
int
jne
jnp
sbb
push
leave
pop
mov
push
mov
dec
lods
or
mov
mov
xor
or
(bad)
mov
(bad)
cmc
add
jae
out
dec
mov
mov
ja
lods
xchg
mov
push
sar
ja
fwait
sub
jbe
mov
test
pop
out
inc
movs
and
(bad)
sar
mov
adc
sbb
mov
jecxz
out
dec
pop
xchg
or
mov
mov
jecxz
repnz
push
jo
mov
push
ins
push
sbb
loopne
inc
lahf
nop
mov
mov
rol
mov
push
ret
mov
mov
mov
dec
mov
jo
arpl
inc
ret
mov
mov
dec
jbe
mov
add
add
test
xor
inc
movs
movs
out
mov
adc
or
cmp
mov
or
out
cmp
adc
aad
leave
mov
(bad)
rcr
mov
imul
dec
clc
or
dec
adc
cmc
(bad)
add
mov
sbb
mov
push
xor
jecxz
xchg
scas
cmp
lea
loope
xor
dec
push
fnstenv
sub
pop
idiv
out
sub
adc
sbb
dec
stos
jg
jecxz
mov
pop
jnp
pusha
sbb
adc
sahf
push
dec
mul
mov
into
pushf
dec
and
dec
pop
sub
imul
push
sub
and
call
fwait
jecxz
stos
or
nop
inc
sahf
add
out
dec
mulps
jmp
les
cmp
call
inc
sub
mov
lds
adc
sbb
iret
push
mov
shl
fldcw
mov
fcmovne
stos
mov
call
dec
sub
mov
call
fsub
push
xchg
cdq
sbb
loop
test
xchg
mov
mov
cli
mov
arpl
push
mov
xchg
push
in
sub
sbb
jg
dec
mov
inc
or
pop
into
(bad)
cmp
sub
add
pop
or
sbb
or
pop
popa
xor
inc
adc
stos
movs
or
mov
pop
adc
clc
jl
in
les
pop
ins
jge
nop
sar
push
xchg
pop
aam
and
jmp
dec
xor
push
mov
das
pusha
mov
xor
push
cmp
add
inc
pop
retf
(bad)
or
push
ja
out
mov
mov
xchg
mov
sbb
mov
mov
int3
loope
in
sbb
pop
sti
sbb
push
sub
(bad)
imul
scas
das
(bad)
cmc
pop
bt
or
jno
and
push
(bad)
lds
mov
dec
sub
out
cwde
pop
js
pop
or
out
push
les
inc
out
cmps
nop
or
xor
mov
mov
pop
and
mov
lds
lock
rcr
call
cmc
in
inc
out
not
stos
dec
call
or
scas
pop
nop
or
mov
add
arpl
(bad)
and
jno
add
leave
jmp
mov
jmp
jmp
jmp
or
(bad)
mov
stos
jg
mov
sbb
xor
or
retf
jb
adc
dec
jp
and
pop
cwde
push
loopne
and
loope
dec
inc
mov
mov
mov
jae
shl
mov
outs
aad
xor
inc
fs
sbb
mov
nop
addr16
adc
ficomp
sub
or
ss
pop
(bad)
in
aam
(bad)
retf
push
dec
sbb
pop
mov
cdq
int3
repnz
shl
push
clc
into
in
stc
dec
(bad)
mov
jg
push
fisubr
jns
pop
push
adc
int
movs
push
loope
pop
sti
mov
arpl
aam
mov
fnstenv
mov
adc
cmps
mov
or
cwde
enter
repz
scas
ret
ins
jb
das
jmp
jmp
loope
sbb
rcl
mov
inc
mov
xlat
wrmsr
mov
fadd
(bad)
sbb
and
ffreep
fs
mov
jecxz
ror
push
inc
inc
test
aad
cli
mov
dec
jle
xor
jmp
aam
adc
push
cmp
in
dec
xchg
outs
adc
xor
(bad)
ins
daa
inc
add
test
popf
je
mov
jne
bound
repz
out
pop
mov
aas
jns
movs
inc
pushf
and
push
je
adc
or
mov
sub
sti
in
shl
mov
and
push
push
int3
test
mov
movs
pushf
sub
mov
lds
es
inc
adc
inc
ret
lea
mov
stos
and
add
mov
cmp
jno
inc
pusha
xor
sti
mov
or
mov
push
scas
or
adc
rcl
pop
repnz
mov
out
cmp
shr
mul
fistp
sbb
or
neg
stos
dec
add
dec
add
mov
pop
cld
sbb
out
mov
mul
sub
cmc
call
mov
fsub
push
mov
shr
fdiv
xchg
push
movs
and
retf
in
popf
mov
out
(bad)
les
xor
mov
add
lock
stos
in
mov
cdq
jbe
or
loopne
outs
loopne
jae
mov
mov
addr16
sahf
movs
jle
jg
cmp
hlt
cmp
(bad)
dec
jecxz
int
mov
sbb
iret
dec
mov
adc
jge
mov
lds
or
clc
inc
adc
pop
call
jmp
cld
cmps
in
mov
nop
jl
jo
mov
dec
mov
jle
jne
push
into
sub
push
push
cmps
pop
inc
mov
jns
pop
jecxz
shl
push
std
add
jbe
cmp
out
jmp
lock
inc
popa
dec
inc
jo
cmps
ins
popa
inc
(bad)
fs
popa
pop
inc
xor
mov
lea
sub
ins
mov
dec
cmp
mov
sbb
inc
(bad)
hlt
push
sbb
and
clc
jmp
sbb
adc
dec
fcom
(bad)
mov
xor
bound
adc
in
mov
in
mov
jmp
pop
mov
iret
sbb
push
adc
pushw
push
mov
not
pop
push
js
sub
(bad)
mov
mov
jb
mov
cmp
xor
sbb
retf
repnz
sbb
ret
jb
mov
xchg
daa
mov
push
and
ss
jle
in
pop
mov
jl
xor
adc
cdq
jae
pop
mov
xor
aas
xor
test
mov
dec
fidiv
and
mov
popa
std
mov
lods
movs
mov
push
icebp
(bad)
push
jg
push
add
stos
loopne
xor
add
and
mov
ret
inc
inc
loope
in
xor
mov
xchg
iret
sbb
cmp
sbb
iret
xor
test
jae
jnp
repnz
(bad)
inc
cmp
mov
mov
(bad)
or
inc
inc
cmps
pop
mov
mov
(bad)
outs
sub
pop
outs
mov
mov
cdq
test
dec
in
inc
shl
sub
popa
adc
mov
push
jnp
push
xor
fist
lock
xchg
out
(bad)
fcomp
xor
mov
push
mov
lock
(bad)
loope
fcomp
mov
cmp
leave
push
push
pop
cwde
xor
push
(bad)
pop
inc
rol
jb
imul
inc
int3
jmp
je
cmc
inc
call
popa
mov
ret
and
cmps
or
aaa
jle
and
jp
(bad)
dec
fs
rcr
xchg
fbld
lds
mov
xchg
mov
cwde
cmps
ins
add
add
inc
sbb
cmp
outs
loop
dec
mov
out
push
inc
test
jne
xchg
cdq
popf
or
push
xor
pop
leave
or
out
add
shl
cmp
mov
mov
dec
aad
dec
out
pop
loopne
add
inc
push
fistp
test
sbb
mov
xlat
(bad)
sbb
mov
(bad)
mov
dec
movs
or
mov
ss
add
inc
and
test
je
test
sbb
int3
pop
mov
xchg
aas
cmps
pop
jne
ja
xor
and
mov
call
jo
pop
cmps
pop
push
gs
push
sbb
push
jne
cmp
adc
shl
mov
ror
pusha
shr
imul
pop
push
dec
and
pop
xchg
inc
adc
dec
dec
inc
movs
mov
nop
std
xchg
out
aad
xchg
sbb
cdq
sbb
cmp
pop
and
dec
mov
pop
je
mov
mul
add
or
push
jae
repz
cdq
js
jno
repnz
and
mov
pop
push
test
lea
sub
xlat
xchg
sub
dec
xchg
cli
jnp
dec
inc
jecxz
ret
push
jno
mov
test
sub
mov
mov
iret
repz
ins
cmps
push
jo
sub
xor
inc
mov
std
mov
icebp
iret
or
std
pop
fistp
call
(bad)
adc
and
cwde
push
out
fdiv
jecxz
push
imul
xlat
push
inc
int3
mov
outs
jle
hlt
mov
add
icebp
sbb
xor
inc
pop
ret
push
ds
jne
in
cdq
sbb
call
mov
mov
push
iret
jmp
iret
clc
pop
mov
mov
xchg
jl
or
lock
test
dec
loop
lock
ja
fild
xchg
sbb
in
xchg
and
push
jmp
push
mov
cmps
pop
movs
(bad)
outs
(bad)
call
cmp
or
add
and
cmp
fwait
loop
ret
and
int
lods
arpl
call
aad
shl
dec
cmp
call
pop
sbb
push
stc
mov
fst
pop
mov
lds
cs
adc
ins
neg
mov
adc
stos
lods
lock
mov
cdq
xchg
test
cmp
in
push
mov
jmp
movs
mov
adc
mov
xor
enter
add
test
jns
mov
shrd
xchg
cld
out
clc
pusha
pop
mov
stos
mov
out
fnstcw
fnstcw
es
xchg
mov
int3
push
pop
mov
cmc
call
popa
mov
les
loopne
mov
mov
sub
hlt
scas
adc
inc
pop
inc
jae
into
push
sbb
xor
mov
hlt
mov
ss
dec
cmp
add
inc
jb
mov
and
mov
dec
sub
sub
sbb
(bad)
mov
push
loopne
jg
jle
mov
mov
data16
add
add
loopne
test
dec
pop
dec
and
loope
pop
adc
mov
pop
adc
fmul
mov
scas
test
pop
inc
jge
(bad)
stos
jnp
aaa
repz
loopne
pop
mov
xor
jg
and
out
and
jns
aam
add
inc
mov
dec
fisub
sbb
dec
push
fwait
mov
add
cmp
inc
test
shl
xor
lahf
xchg
push
loope
jle
jne
push
sub
adc
adc
popa
call
push
cmp
test
sar
push
or
xchg
or
or
pusha
sbb
into
add
repz
push
add
push
pop
pop
lea
push
pop
dec
cmps
fwait
push
aas
fdiv
jle
mov
es
scas
inc
mov
mov
bswap
test
lock
rcr
dec
cmp
or
push
jecxz
xor
xor
inc
mov
xchg
pop
(bad)
jg
aas
jmp
mov
xchg
mov
pop
retf
call
(bad)
pop
push
mov
mov
mov
jmp
(bad)
sub
dec
lds
inc
daa
fdiv
push
imul
rcr
pop
fsub
div
outs
call
movs
call
lds
jg
ins
push
dec
ret
and
mov
lods
pop
ficomp
dec
arpl
ret
(bad)
push
mov
out
mov
inc
iret
mov
movs
pop
xchg
jne
inc
(bad)
cmps
popf
fdivr
data16
jo
outs
or
inc
adc
and
shr
xchg
call
bound
retf
xchg
out
xchg
sbb
sub
adc
inc
movs
add
sub
fadd
sbb
(bad)
cmc
xor
daa
(bad)
and
sbb
cmp
pushf
(bad)
mov
jmp
or
sbb
(bad)
sti
dec
push
je
sub
mov
imul
imul
in
js
pop
popa
daa
xor
dec
lods
push
rol
jle
xchg
(bad)
and
repz
dec
inc
xchg
push
mov
loope
imul
cmp
sub
mov
loop
push
in
cmp
jg
fwait
mov
fnsave
mov
fiadd
clc
lea
popf
jne
xchg
scas
stc
shr
add
jns
test
ret
loopne
leave
add
push
pop
clc
popf
or
call
push
retf
jb
inc
add
xchg
pop
lahf
and
sub
add
lahf
(bad)
add
ins
pop
jp
and
jnp
jl
or
xchg
cmp
or
in
jge
sub
inc
sub
rcl
stos
test
sti
and
mov
idiv
xor
icebp
movs
and
inc
in
add
icebp
mov
inc
pop
and
fadd
mov
push
inc
(bad)
cli
jo
sbb
xchg
cmc
nop
push
aaa
mov
fs
sub
lock
inc
xchg
mov
add
sahf
loopne
cmp
pop
jo
adc
xchg
ja
inc
ror
cdq
(bad)
xlat
pop
jae
cmps
je
sbb
and
loop
xor
nop
inc
pop
imul
test
dec
mov
jnp
int
test
sahf
or
pop
outs
push
push
add
enter
dec
fs
(bad)
(bad)
fisubr
rol
mov
loopne
imul
test
cmp
jmp
add
(bad)
scas
mov
jg
sub
shl
sbb
clc
add
xchg
scas
pop
inc
scas
mov
jecxz
hlt
add
mov
push
dec
inc
cmps
es
in
pop
data16
add
adc
xchg
jae
das
movs
xchg
and
push
adc
xor
push
jmp
xchg
mov
inc
stos
xor
idiv
std
add
push
sbb
dec
mov
aaa
jmp
ret
mov
pushf
ss
sub
push
xchg
fnsave
jge
push
gs
in
fwait
popa
or
jg
xchg
(bad)
fimul
or
loope
xchg
ins
cdq
mov
push
in
mov
out
dec
push
cdq
jmp
mov
lods
mov
dec
inc
aaa
pop
jmp
ror
lods
pop
xchg
mov
mov
dec
daa
mov
stc
jge
popa
sub
in
sub
movs
mov
in
das
fwait
lea
outs
add
xchg
aam
popa
jge
shl
xchg
test
xchg
and
jl
sub
inc
xchg
sub
lds
cli
xchg
jno
call
mov
shl
(bad)
jmp
or
adc
lea
mov
test
js
and
bound
enter
adc
les
xchg
mov
pop
dec
xor
aam
jge
or
push
mov
push
mov
addr16
mov
aam
push
sub
pop
xchg
inc
ror
dec
adc
cmp
sub
neg
popa
popf
mov
nop
adc
nop
push
lahf
cmps
sbb
jg
sbb
ja
fcmovnb
ins
xchg
fwait
ins
into
mov
pop
xchg
jo
push
and
xor
idiv
pop
jp
movs
in
add
out
pop
inc
(bad)
xor
(bad)
ds
icebp
jnp
test
push
fcmovb
xchg
stos
xor
fs
push
(bad)
jge
sub
leave
mov
cli
pop
xchg
iret
jne
xchg
leave
or
cld
inc
sahf
imul
(bad)
mov
repnz
test
push
jle
clc
fld
scas
(bad)
pop
dec
sub
sar
mov
scas
jl
pop
fistp
stos
sahf
out
test
out
and
pushf
inc
stos
aad
cmp
iret
test
xchg
or
fadd
adc
pop
test
jb
xchg
mov
pop
fimul
dec
fstp
cmp
shl
and
push
dec
sar
int
into
in
mov
imul
mov
mov
xor
mov
add
adc
pop
jns
inc
and
push
inc
scas
add
jo
in
je
adc
cmps
nop
inc
cmp
cmp
adc
pop
repnz
or
inc
aaa
sbb
sub
popa
push
xchg
mov
pusha
mov
les
add
cs
or
adc
pop
xor
inc
lods
test
ret
mov
mov
and
xchg
fbstp
out
bound
xor
add
das
pop
mov
inc
rol
data16
add
bound
pushf
jnp
adc
pop
mov
cmp
ret
xor
mov
adc
fistp
bound
sbb
lock
cmp
test
inc
xchg
xchg
(bad)
cwde
xchg
or
push
sahf
fs
loope
xor
jp
xchg
js
dec
mov
push
xchg
ret
sar
xor
jae
mov
push
jne
push
scas
inc
xchg
je
test
push
mov
sti
mov
pop
sub
sub
adc
int
pop
out
and
inc
pop
jle
inc
and
inc
cmc
mov
fwait
mov
cmp
mov
inc
jno
xor
ja
dec
outs
lods
int3
push
adc
frstor
into
mov
(bad)
jae
mov
xchg
out
shl
imul
les
xchg
iret
dec
les
mov
sub
mov
test
inc
inc
mov
inc
inc
es
imul
imul
mov
inc
retf
ret
fnsave
daa
cmp
pop
mov
and
shl
dec
ficomp
pusha
push
fsubr
pushf
sti
mov
xlat
stos
shl
aad
jbe
pop
sar
sti
mov
pslld
clc
stos
cmps
out
test
pop
fimul
jns
lds
inc
call
cmc
cmp
pop
xor
inc
xlat
scas
add
inc
popa
push
in
sti
and
clc
jl
jp
mov
idiv
mov
or
imul
test
adc
jbe
lahf
or
inc
mov
mov
xchg
(bad)
nop
in
pop
adc
(bad)
push
fstp
dec
ret
or
adc
stos
fdivr
stos
or
mov
xchg
aaa
adc
into
pop
je
or
out
aaa
mov
icebp
das
daa
xchg
je
aas
push
mov
inc
pop
outs
or
inc
iret
adc
icebp
jb
add
dec
sub
imul
jle
adc
scas
cmp
push
push
fwait
in
out
add
jecxz
in
repnz
jae
mov
les
jnp
ins
jbe
clc
and
dec
scas
scas
pop
cs
inc
repnz
xchg
test
jp
push
inc
loopne
jnp
jne
aas
leave
icebp
mov
in
or
lahf
movs
push
(bad)
sub
cmp
dec
sbb
and
pop
div
inc
arpl
jge
pusha
arpl
push
daa
mov
pop
(bad)
ror
clc
fstp
push
loopne
push
fadd
xor
xchg
scas
sbb
(bad)
mov
dec
fs
cdq
movs
mov
aas
pop
xchg
fild
loop
cmp
(bad)
daa
das
cwde
shl
and
mov
scas
ss
mov
imul
add
lds
adc
xchg
in
into
test
fwait
int3
mov
out
jecxz
imul
int3
add
in
mov
cmp
movs
aam
pop
loop
pop
sub
rcl
xchg
and
xchg
shl
ja
dec
inc
test
cmps
cmp
xchg
(bad)
sbb
mov
jo
sub
aam
aad
gs
sbb
(bad)
call
repz
jmp
(bad)
test
dec
pop
push
aam
dec
ins
mov
jo
or
and
gs
loope
cmps
xor
(bad)
lods
retf
mov
add
cmp
jb
cmc
adc
pop
inc
inc
inc
adc
or
out
mov
pop
gs
xchg
adc
pop
aas
imul
inc
cmps
shr
outs
push
mov
jo
xchg
mov
xor
push
mov
sub
popf
fild
jo
repnz
bound
cmp
int
stos
fcomi
jo
sub
dec
jl
mov
ins
jnp
(bad)
outs
jge
jp
femms
shr
or
outs
stos
pop
(bad)
rcr
xor
or
xor
retf
movs
pop
pop
mov
xchg
hlt
push
iret
pop
cmc
sub
loop
jecxz
lds
inc
lods
cmc
push
popf
aas
jp
xchg
add
jnp
inc
fist
(bad)
jne
(bad)
in
push
ins
shl
fimul
mov
repz
add
sub
xchg
jae
(bad)
adc
push
jo
into
dec
imul
sbb
xchg
(bad)
xor
test
sbb
mov
and
sti
dec
lea
out
sbb
dec
jle
fcmovnbe
sub
dec
push
dec
pop
mov
test
sbb
in
pop
(bad)
push
mov
ins
jl
dec
fdivr
data16
add
mov
lea
xchg
outs
fistp
mov
(bad)
and
rcl
test
scas
jnp
mov
adc
movs
cli
mov
inc
cbw
or
std
stc
shl
pop
sbb
data16
ret
das
lock
mov
xchg
mov
je
sahf
sub
xor
outs
(bad)
imul
xor
fwait
mov
sub
sbb
pop
(bad)
xchg
(bad)
dec
out
stc
sbb
pop
in
xchg
dec
movs
ja
dec
out
ds
dec
jle
es
das
aaa
(bad)
jmp
inc
std
inc
mov
data16
nop
in
or
lods
or
jno
jecxz
or
aas
dec
push
or
inc
cmps
mov
jmp
lods
push
in
shr
jo
and
jg
stos
hlt
pop
mov
out
pop
mov
xchg
jne
bound
mov
jmp
mov
in
(bad)
out
arpl
adc
mov
imul
xchg
fcmovnbe
enter
push
enter
popa
test
xor
pop
jecxz
popa
add
pushf
or
sbb
in
push
xor
xchg
push
fwait
mov
inc
adc
into
lahf
pop
mov
(bad)
mov
stos
(bad)
and
xchg
xlat
add
stc
idiv
sub
cdq
fs
push
test
leave
mov
ins
jg
jae
hlt
fwait
rol
xchg
popf
add
xchg
inc
pop
sub
les
and
adc
and
sahf
mov
jno
cmps
dec
jb
dec
mov
sar
inc
sub
sub
sbb
imul
xchg
div
sbb
outs
fwait
test
out
aad
pop
cmovg
mov
icebp
bound
repnz
fcom
pop
ret
shl
inc
fldenv
aam
mov
nop
nop
sbb
aad
into
test
cld
add
mov
xchg
push
xchg
jge
movs
dec
sub
dec
mov
sbb
adc
jo
mov
sbb
or
xchg
lds
pop
inc
sub
inc
jle
pushf
aam
aam
rol
ja
lods
push
or
je
mov
das
ins
sahf
js
add
add
call
inc
cld
pop
mov
mov
add
out
out
mov
inc
push
xor
push
or
cmp
dec
cdq
and
mov
cmps
cdq
ror
lahf
sub
sub
popa
leave
jmp
mov
dec
dec
and
jge
into
data16
mov
aam
mov
sbb
test
dec
add
ret
sub
pusha
jns
push
mov
in
sbb
jecxz
dec
bound
xchg
dec
fistp
and
sub
outs
movs
sub
mov
sbb
xchg
pop
popa
ja
lods
jne
adc
and
push
lock
xchg
adc
mov
loope
jge
push
ds
mov
pop
adc
shl
scas
dec
ret
sbb
inc
pop
or
sub
and
push
jmp
push
fisub
ds
aas
cmp
and
cdq
sub
dec
(bad)
dec
cmp
hlt
mov
sub
jne
lahf
div
sub
(bad)
mov
loope
iret
dec
cmp
ret
xor
ror
push
enter
dec
mov
inc
loop
mov
push
adc
(bad)
out
cmp
lds
movs
adc
sub
pop
add
pop
and
jp
sar
pop
imul
movs
jnp
jae
cmp
pop
mov
pop
xchg
pushf
push
sbb
xlat
sbb
hlt
fstp
push
ins
mov
inc
fs
int3
cmp
verw
inc
xchg
mov
mov
xchg
stos
or
iret
fsubrp
push
pop
repz
mov
sbb
cdq
fst
ja
and
mov
jne
popa
ins
sub
jae
inc
mov
lods
sub
enter
lods
push
push
push
lea
das
mov
loopne
pushf
add
pop
mov
mov
inc
jmp
cdq
push
push
or
sub
ja
stos
int
scas
push
nop
xor
outs
ins
dec
loopne
dec
mov
lahf
pop
add
scas
fst
pop
mov
dec
rcl
outs
push
test
cdq
push
je
out
mov
cmp
adc
les
xchg
outs
dec
add
dec
out
sbb
fild
cs
leave
stc
fdivr
repnz
and
lahf
and
xchg
push
shr
adc
cdq
adc
gs
or
cmc
data16
push
sub
cld
out
cmps
pop
xor
cmps
sub
or
out
add
adc
mov
in
mov
mov
sbb
pop
dec
dec
lahf
adc
pushf
popa
sbb
rcr
mov
or
fwait
iret
int3
jnp
xchg
jne
sbb
mov
inc
inc
fadd
pushf
fcomp
(bad)
cdq
adc
mov
int
pop
jae
dec
push
cmp
pop
mov
out
push
cmc
cli
test
mov
lods
movs
or
or
mov
cmp
inc
pop
mov
sbb
or
loope
mov
xchg
pop
xchg
(bad)
mov
add
loopne
dec
sbb
add
or
adc
push
mov
push
fnstcw
cmp
je
aam
xchg
adc
lock
out
lods
in
std
add
je
add
sub
daa
sahf
push
mov
or
and
mov
push
fwait
cmp
fsub
loope
pop
pop
test
(bad)
adc
cld
les
(bad)
repz
scas
xchg
inc
or
lods
ror
jne
mov
ror
int
cld
mov
pop
mov
sbb
cli
mov
addr16
jle
xor
sbb
neg
call
lahf
outs
std
leave
sbb
push
mov
imul
iret
mov
jmp
xchg
pushf
push
add
mov
inc
pop
xchg
inc
xor
sbb
adc
sub
cmp
xchg
add
mov
dec
in
jno
inc
out
add
jno
cmpxchg
jp
popf
sahf
setbe
mov
add
inc
adc
sbb
imul
add
out
out
sbb
fcomp
mov
rcl
add
call
(bad)
dec
sar
aaa
sar
and
cmp
cli
cmpxchg8b
xchg
aad
pop
inc
pop
or
jne
(bad)
jbe
cmp
mov
xchg
loop
popf
push
mov
rcl
adc
xor
push
pushw
push
push
cmp
dec
inc
jb
(bad)
mov
daa
scas
xor
or
add
bound
fisub
movs
bound
iret
mov
jne
fwait
sub
xchg
nop
jl
fiadd
hlt
in
dec
mov
jmp
pusha
mov
lods
nop
adc
les
mov
daa
sbb
and
dec
outs
adc
aaa
cmc
std
mov
jo
pop
retf
mov
out
mov
and
or
test
push
enter
sbb
sbb
bound
push
and
daa
dec
sub
scas
ss
mov
in
jns
movs
jl
or
mov
mov
mov
or
sub
test
mov
jle
jo
adc
pop
sub
fwait
mov
sbb
in
lahf
push
mov
jno
(bad)
in
mul
jmp
or
loop
movs
xchg
fnstenvw
das
jbe
shr
sbb
popa
test
shl
in
push
cdq
push
ds
cwde
inc
jle
xor
fild
in
in
retf
rol
mov
mov
jg
jb
mov
adc
xor
(bad)
pop
push
mov
pop
jmp
mov
mov
inc
adc
pop
out
jmp
lahf
sub
cdq
mov
mov
test
dec
jmp
ret
in
jbe
push
lea
mov
inc
addr16
pop
mov
mov
and
push
(bad)
mov
xor
rol
mov
outs
sub
aas
and
jns
jne
push
(bad)
jmp
shl
mov
jmp
inc
add
jge
jmp
in
stos
clc
pop
mov
mov
es
push
ins
movs
jns
xchg
mov
sbb
dec
out
(bad)
hlt
mov
add
mov
cmp
dec
je
js
pushf
scas
jmp
pop
xchg
int
xor
cmp
adc
cmc
cmp
popa
pop
pushf
and
and
jge
sub
clc
in
imul
pusha
jle
cmp
sub
daa
add
lock
sbb
cmp
or
mov
stos
lods
fisub
in
ja
or
movs
xor
adc
mov
xchg
nop
fidivr
xor
ds
in
ror
push
adc
cmp
add
xchg
dec
out
fimul
xor
and
dec
dec
fistp
popa
cli
test
aaa
xor
jle
jge
and
dec
inc
adc
xor
jae
aam
sub
cli
mov
inc
in
mov
or
cmp
xchg
(bad)
cdq
cmp
mov
out
stos
push
cmc
rcr
nop
es
jmp
pop
mov
cmp
push
mov
sar
leave
xchg
push
stos
xor
xor
pop
popa
push
sahf
repz
sar
bound
mov
loopne
sbb
adc
push
rol
stos
rol
xchg
and
hlt
mov
out
or
jl
xchg
push
scas
cmp
lds
or
jmp
add
stos
pop
scas
dec
inc
adc
loopne
jne
imul
fimul
adc
fisubr
adc
movs
jp
sbb
push
mov
rcl
(bad)
(bad)
daa
test
test
test
aad
pop
and
in
xchg
sub
push
add
into
fisub
fadd
pop
in
mov
xchg
lods
inc
adc
jne
das
mov
mov
cmp
mov
int
jns
dec
test
imul
xchg
enter
sub
call
leave
mov
mov
aaa
pmovmskb
sbb
addr16
cdq
jmp
leave
xchg
lods
push
xor
xchg
adc
ret
or
std
gs
and
inc
xor
call
and
ss
mov
sub
jno
es
jbe
mov
mov
inc
lock
or
lods
ror
and
cmp
faddp
inc
mov
sub
mov
add
sub
cmc
sbb
xchg
outs
or
ja
push
and
adc
das
out
js
clc
sahf
mov
pop
(bad)
mov
dec
sub
daa
inc
mov
cmp
loopne
mov
fdivr
inc
xor
dec
or
test
movs
mov
sub
ret
icebp
cwde
inc
jmp
push
cmps
(bad)
sbb
arpl
les
into
xchg
sbb
daa
mov
xchg
leave
cmp
popf
xchg
pop
sbb
scas
leave
cmp
out
xchg
xlat
ror
xchg
xlat
imul
hlt
mov
in
xor
xchg
in
pop
sub
push
ins
add
mov
ss
int3
cmp
and
ret
nop
or
movs
push
ins
and
stos
js
xor
sar
cmp
retf
mov
xchg
js
std
or
(bad)
sub
rol
jns
outs
jbe
push
mov
jmp
int3
icebp
pop
mov
add
adc
iret
ret
pop
sti
add
push
int3
je
jnp
hlt
xchg
mov
cld
fild
movs
pop
sub
cwde
sbb
lods
jp
push
cli
jbe
jge
push
push
push
mov
mov
mov
frstor
pop
sti
mov
push
popa
frstor
push
add
ret
sbb
shl
addr16
mov
arpl
pop
push
adc
jbe
nop
lahf
scas
mov
dec
xor
popf
sub
pop
test
jmp
pop
mov
loopne
lods
xchg
push
sub
js
inc
rcr
jns
mov
stos
pop
data16
xor
ins
jmp
out
enter
aad
scas
movs
(bad)
aam
and
mov
mov
pop
dec
mov
push
scas
inc
pop
mov
cmps
es
sbb
jnp
jecxz
outs
cwde
sub
in
cmp
fwait
call
iret
inc
push
inc
jae
mov
iret
dec
adc
ret
scas
dec
cmps
inc
lods
fsub
dec
ror
push
xchg
mov
inc
repz
outs
jle
loope
leave
out
adc
in
pushf
lds
mov
mov
xchg
loopne
sbb
out
sbb
add
mov
dec
es
inc
aam
xchg
mov
pop
push
ins
in
jne
cmp
outs
push
inc
push
push
xchg
inc
cmps
repz
pop
(bad)
es
cmps
gs
mov
xchg
retf
dec
jb
inc
fwait
ret
enter
mov
pop
ror
ins
mov
push
iret
pop
jecxz
pop
xor
dec
cmp
jns
cmp
cmp
int3
inc
fidiv
fcom
push
fs
or
fsub
faddp
cmp
inc
loope
sbb
iret
dec
cs
mov
test
stos
dec
xchg
pop
mov
mov
(bad)
mov
xor
adc
add
int3
jnp
xor
retf
push
repz
mov
cmps
test
rol
add
dec
lock
ins
and
xchg
push
in
(bad)
adc
push
push
adc
push
or
pop
je
sub
dec
ins
cdq
cmps
es
push
push
pop
rol
js
in
add
int3
xchg
push
cmp
jl
into
pushf
mov
pusha
add
inc
pop
xchg
scas
xchg
imul
jne
retf
pop
jb
cmp
push
cwde
arpl
or
mov
push
mov
out
xor
xor
fdiv
sub
or
cmp
fisubr
jnp
call
mov
mov
loope
jge
mov
pop
(bad)
jnp
or
int
scas
mov
nop
xor
adc
les
pushf
retf
pop
mov
and
arpl
mov
mov
pop
jae
and
std
or
outs
aad
lods
outs
mov
push
mov
je
xchg
mov
lock
ss
adc
mov
and
fyl2x
out
cmp
push
push
dec
(bad)
push
or
push
and
cmps
imul
xlat
mov
sub
cmp
gs
cld
bound
cmp
lahf
xor
daa
das
sbb
jmp
cmp
fidivr
push
mov
std
ret
jne
mov
iret
add
inc
scas
mov
add
xor
pop
int3
lds
or
std
int3
retf
in
pop
ret
scas
mov
(bad)
loopne
fistp
or
cs
ins
jg
jns
out
inc
xor
xchg
jge
dec
clc
lods
fisttp
adc
push
add
fsub
stos
jmp
hlt
xchg
int3
lods
sbb
loope
mov
int
and
cmp
mul
popa
jp
scas
or
dec
add
fild
retf
into
(bad)
mov
jmp
push
fstp
sub
int
pushf
cmps
sub
adc
repz
scas
jae
and
adc
mov
xchg
push
into
aam
push
ins
mov
xor
mov
jns
arpl
and
aaa
mov
std
stos
pop
push
xchg
push
lds
cmc
pop
int
jecxz
icebp
bound
pop
mov
add
(bad)
clc
test
sbb
das
fcomp
jmp
mov
cmps
lock
icebp
pop
xor
nop
xchg
mov
xchg
or
movs
or
push
arpl
dec
imul
loop
fsub
lahf
jl
fbld
dec
aam
lds
lods
push
inc
inc
pushf
shr
xchg
add
clc
rcr
arpl
cwde
inc
pop
cmp
jb
xlat
aam
(bad)
pop
ret
pop
inc
cmp
mul
add
int
hlt
and
dec
cmp
jmp
fdivrp
or
mov
call
sbb
xor
in
jnp
adc
je
in
call
cmps
sbb
mov
jmp
jo
adc
(bad)
mov
ret
dec
test
out
int3
out
cwde
add
ret
ret
xchg
repz
icebp
sar
push
data16
(bad)
cdq
or
cs
into
nop
mov
sbb
cmp
lods
lea
jle
adc
je
js
or
cdq
mov
hlt
and
xlat
(bad)
idiv
pop
cli
stos
inc
push
xchg
cmp
sar
cmp
xchg
jne
hlt
enter
mov
sbb
cli
mov
(bad)
adc
mov
jns
popa
leave
xor
jo
test
sub
mov
inc
adc
push
popf
inc
cmp
lea
loop
(bad)
mov
mov
fstp
inc
icebp
test
out
sbb
mov
push
sub
call
dec
sub
ins
outs
jae
js
or
stos
int
popa
jmp
je
jns
or
push
popa
pushf
rol
jle
test
xchg
mov
adc
cmps
adc
mov
mov
dec
not
mov
mov
jp
sbb
push
add
cs
and
imul
xor
das
sub
push
xor
popa
pop
add
outs
ins
jo
mov
push
cdq
xchg
gs
leave
inc
retf
jecxz
leave
jb
ja
mov
jnp
adc
shl
adc
xchg
sbb
dec
sbb
js
jnp
mov
jle
fwait
inc
fcom
jne
(bad)
(bad)
push
jns
jp
das
aas
loopne
in
dec
push
sub
push
push
mov
xor
mov
and
call
ja
add
nop
mov
call
xchg
js
cmps
jae
cmp
ret
sar
mov
mov
xchg
and
pop
cmc
sbb
popf
xor
or
or
jb
inc
shl
lea
adc
mov
loop
mov
dec
xor
push
fdiv
or
lea
movs
(bad)
push
push
jle
jecxz
or
or
xchg
stos
push
lahf
popf
mov
stc
fisttp
sti
mov
cmps
addr16
add
repz
inc
(bad)
icebp
pop
cmp
mov
mov
(bad)
xlat
mov
stos
jb
popa
xor
iret
nop
jae
movs
sar
dec
sbb
add
scas
add
jns
sbb
push
das
push
stc
xchg
inc
je
loop
and
inc
call
dec
test
(bad)
int
jmp
retf
xor
pop
sub
pop
jne
les
inc
and
and
xchg
add
sbb
cmc
jecxz
imul
mov
mov
cmp
pop
mov
jno
jno
mov
mov
pop
dec
loop
pop
daa
push
mov
dec
lahf
or
hlt
push
stc
lods
pop
leave
sub
cmp
cmc
(bad)
adc
jmp
xor
and
sbb
mov
rcl
sub
push
mov
std
jne
pop
xor
(bad)
and
push
(bad)
repnz
mov
imul
sbb
add
aad
leave
mov
dec
jbe
test
pop
(bad)
adc
inc
fbld
in
xchg
imul
mov
jns
iret
jge
jp
lds
inc
cmp
xor
mov
fsubr
jo
out
nop
inc
mov
jmp
mov
or
push
xor
push
xlat
test
inc
fisttp
pop
xor
out
push
icebp
das
mov
inc
sub
sbb
pushf
out
call
or
mov
inc
mov
aad
test
or
dec
sub
push
out
xchg
(bad)
mov
add
scas
out
xor
lods
out
loopne
lds
retf
jg
(bad)
jb
js
call
dec
or
jmp
mov
adc
cmc
mov
cmc
add
jnp
ja
xor
sbb
add
cli
lods
addr16
mov
sub
ret
pop
cdq
iret
cld
je
adc
or
daa
mov
lds
nop
xlat
cmps
mov
lods
test
xor
push
mov
adc
jo
outs
jg
cli
mov
dec
fwait
enter
pop
arpl
mov
std
jl
push
or
mov
(bad)
jno
sub
xor
repnz
out
in
out
push
test
(bad)
aad
ret
xchg
(bad)
xchg
xchg
push
mov
pop
add
or
cld
add
dec
sub
js
rcr
fcmovb
pusha
rcr
into
in
lahf
ss
push
arpl
in
in
(bad)
lock
inc
push
push
clc
bound
pop
cs
pop
mov
imul
div
cmps
or
add
or
lds
(bad)
call
or
push
sbb
xchg
pop
pop
stos
and
imul
and
cmp
cmps
(bad)
outs
or
adc
and
(bad)
daa
jmp
imul
ja
push
imul
sbb
pop
sub
jl
sub
sub
(bad)
adc
nop
mov
jmp
pop
mov
push
ds
cmp
inc
push
sbb
xchg
daa
mul
not
push
sub
test
aas
in
adc
jne
inc
inc
mul
mov
sbb
int
test
add
jnp
mov
inc
xor
test
mov
mov
mov
jns
mov
fnstcw
sub
movs
shl
sbb
(bad)
out
icebp
pop
test
and
sbb
test
mov
cs
std
mov
push
add
shl
dec
in
popf
cli
fxam
outs
sub
leave
cmp
xchg
push
mov
shr
push
rcr
mov
and
popa
pop
lea
loop
(bad)
mov
pop
mov
sub
inc
cmp
popf
shl
cli
sub
dec
rcr
hlt
outs
out
jbe
cmps
push
sti
sub
xchg
add
sbb
sub
xchg
arpl
jmp
xchg
stos
pop
fist
hlt
mov
adc
pop
test
iret
dec
push
ret
inc
fist
jg
pop
jmp
js
push
sbb
xor
retf
push
in
jbe
jp
sub
sbb
xor
shl
mov
sbb
sbb
add
mov
sbb
imul
stos
les
adc
pop
sar
cmc
xor
lock
cli
mov
inc
add
loopne
inc
(bad)
in
movs
and
popa
loop
pop
jnp
jl
imul
test
and
(bad)
mov
cmps
pushf
leave
mov
fidiv
mov
dec
add
mov
and
add
inc
push
sbb
push
or
loope
push
adc
xchg
es
cli
and
inc
cmp
cmc
sar
sti
mov
pop
mov
scas
outs
lahf
test
mov
rol
mov
mov
push
fisub
cmp
jle
mov
div
out
mov
jno
add
dec
add
hlt
shl
sub
dec
call
outs
add
lds
lahf
pop
inc
sahf
out
jge
cmp
dec
jo
sub
push
retf
mov
sub
cmps
mov
push
jp
xchg
shl
jle
scas
loope
retf
into
pop
xor
or
cwde
sub
nop
push
stos
jmp
sbb
cmp
fnstsw
push
push
adc
jmp
xor
cmp
and
or
das
xor
xlat
or
dec
or
ret
fs
cwde
jl
pop
icebp
mov
jno
jg
mov
int
inc
(bad)
jb
and
push
cwde
jmp
mov
dec
cmp
or
mov
outs
ss
lahf
cmp
cmp
cmp
daa
xor
pop
pusha
and
jmp
add
or
into
lea
jle
add
lock
call
jge
mov
or
icebp
xlat
cmp
aas
ss
cmps
sar
push
mov
shr
sbb
mov
ins
and
outs
xchg
mov
jmp
sbb
push
inc
mov
cmp
cmp
mov
lahf
mov
stos
out
jl
mov
adc
hlt
mov
jns
ror
jle
adc
xor
xchg
xor
jmp
add
xchg
mov
iret
or
retf
xchg
inc
mov
(bad)
movs
fld
scas
mov
xlat
fwait
call
imul
in
dec
(bad)
dec
mov
dec
pop
or
out
push
cld
jae
outs
(bad)
(bad)
pop
jle
fst
xchg
jmp
std
fs
je
mov
cmp
fstp
adc
test
xchg
lods
sbb
aas
dec
dec
fucomi
call
das
stos
loope
dec
pop
dec
jae
popf
xchg
int3
dec
xchg
or
push
jno
bound
xor
data16
and
ret
sahf
js
jb
arpl
rol
mov
push
scas
push
cmp
push
mov
(bad)
aad
add
je
mov
sbb
loopne
ins
lods
loopne
cli
mov
mov
sbb
or
push
clc
lahf
js
and
mov
and
ror
inc
jecxz
push
xchg
daa
push
dec
mov
scas
dec
cmp
jmp
in
imul
cmp
pop
push
ss
nop
adc
dec
dec
iret
test
repz
sbb
movs
push
xchg
sbb
(bad)
jmp
call
xchg
cld
aam
push
out
xchg
iret
ror
(bad)
test
outs
jge
push
lahf
sbb
sub
adc
cmp
ret
push
xor
sub
mov
inc
adc
loopne
ficomp
popf
mov
rol
push
es
jg
xor
jno
in
mov
lock
stc
mov
or
dec
or
stos
add
adc
pushf
xchg
sbb
inc
cmps
dec
aaa
lea
ja
or
or
push
pop
test
lea
xchg
ins
mov
retf
push
or
shr
cli
pop
xchg
bound
jmp
sbb
out
sbb
mov
lods
jb
or
test
adc
push
cmps
inc
jmp
leave
jmp
(bad)
and
and
dec
adc
and
jecxz
inc
(bad)
stc
test
xchg
xchg
cs
cmp
push
dec
xchg
sub
mov
adc
or
dec
mov
add
movs
repnz
rol
sti
int3
cmp
xor
shl
mov
(bad)
mov
frstor
(bad)
in
mov
mov
pop
and
pusha
repnz
pop
daa
sbb
lods
fmul
jmp
scas
jae
pusha
xchg
push
sub
cs
ins
(bad)
popf
scas
push
movs
mov
test
mov
mov
push
push
xor
pop
clc
fnsave
dec
inc
sub
sub
das
mov
or
adc
and
mov
jmp
push
xor
push
jnp
pop
aam
ds
inc
mov
or
push
dec
push
aad
movs
xchg
inc
hlt
fsub
neg
sub
mov
ins
xchg
mov
pop
inc
sub
call
repz
mov
sar
jno
cwde
outs
stos
pop
mov
scas
scas
icebp
shl
xchg
lock
adc
or
lods
aas
dec
sbb
je
aam
loopne
sbb
das
mov
enter
jnp
es
(bad)
xor
xchg
xchg
cmp
jmp
sub
popf
cmp
ffree
cld
xor
ds
xor
inc
jmp
out
rcr
or
scas
lahf
sti
jnp
fisubr
jbe
adc
pop
dec
idiv
pop
iret
and
scas
imul
jmp
test
stos
mov
inc
xor
imul
push
push
ficom
push
xchg
scas
popf
loop
into
hlt
cwde
jmp
stos
in
mov
(bad)
into
scas
dec
cmp
mov
or
aam
dec
retf
(bad)
ins
and
pop
and
iret
test
cld
movs
cmp
mov
sbb
mov
pop
aaa
call
adc
jno
aad
ret
pop
nop
cs
inc
ret
jg
outs
mov
fmul
xlat
rcl
arpl
jb
icebp
pop
aam
int
in
dec
or
arpl
mov
sbb
push
jge
pushf
dec
enter
(bad)
sub
xchg
jge
xlat
sub
icebp
int
xor
xor
int
xchg
or
xor
cmps
dec
(bad)
xor
dec
push
aas
shl
rol
mov
stos
xor
mov
fs
loopne
adc
push
test
sbb
int3
jne
data16
shl
cmp
sub
mov
stos
test
jecxz
jp
pop
mov
xor
clc
dec
xchg
scas
push
test
test
cmc
mov
jge
inc
mov
lods
or
bound
cmps
cli
lahf
mov
ja
(bad)
aam
popa
sbb
dec
arpl
pop
ins
movs
pushf
adc
mov
cmps
in
retf
sbb
sti
sub
ins
inc
test
add
cmp
dec
lods
add
mov
pop
(bad)
js
and
stos
mov
push
mov
dec
daa
mov
int3
bound
test
pusha
cmps
mov
mov
fsub
adc
(bad)
jmp
movs
in
imul
add
push
or
pop
xchg
jmp
mov
repnz
cwde
fnstsw
mov
sub
push
push
jbe
(bad)
mov
out
les
mov
mov
inc
pop
rcl
jne
jns
or
mov
inc
sbb
lods
lds
arpl
mov
pop
or
int3
jl
ret
call
daa
clac
fs
fisub
nop
xchg
jecxz
loop
or
in
inc
mov
mov
pop
jmp
mov
in
sbb
mov
aad
xor
push
dec
xchg
pop
test
pop
xchg
fcmovne
cwde
mov
jns
and
loopne
(bad)
mov
in
shl
or
mov
hlt
xor
push
jno
sahf
popf
test
pop
out
outs
es
pop
jp
mov
jle
ror
fcomp
cmps
test
sbb
sbb
sbb
cmp
mov
add
push
or
test
scas
retf
sti
xchg
adc
call
sbb
jno
std
mov
adc
int
bound
xor
(bad)
xchg
in
xlat
mov
fmul
sbb
sub
add
push
gs
cmp
push
dec
pop
cdq
ds
dec
retf
ss
adc
jno
mov
test
pop
sti
jle
sbb
xor
xchg
sub
adc
fist
int3
mov
push
stc
ja
mov
dec
lea
jnp
std
pop
mov
or
sbb
dec
(bad)
mov
fcomp
sub
sbb
in
not
mov
rol
lea
cli
adc
inc
cmp
adc
jge
pop
stc
and
ret
cdq
or
test
(bad)
mov
(bad)
daa
ins
ins
mov
daa
inc
in
sar
mov
out
jge
add
push
mov
std
xor
in
cwde
jg
retf
aas
int
mov
in
jl
cmp
xchg
(bad)
fbstp
outs
xchg
xor
mov
ja
sbb
and
mov
movs
xchg
js
mov
xor
test
and
mov
cmp
pusha
or
or
sub
add
ret
push
mov
sbb
jo
inc
test
pop
retf
xor
inc
inc
pop
hlt
or
out
shr
mov
shl
xchg
xor
inc
mov
or
push
mov
(bad)
lahf
mov
dec
xor
adc
ja
clc
mov
dec
outs
(bad)
jns
out
push
fwait
mov
test
and
inc
mov
stc
and
mov
adc
mov
xor
dec
int
aam
(bad)
jmp
inc
xchg
inc
jno
jle
icebp
call
fsubrp
data16
shr
outs
push
je
std
inc
mov
xchg
adc
in
clc
not
rol
sub
adc
es
(bad)
call
adc
pop
jbe
js
aam
out
mul
out
aad
je
mov
stos
dec
(bad)
mov
sbb
jl
inc
or
jecxz
sub
sbb
add
sbb
int3
test
jge
pop
mov
rcl
adc
lods
sub
and
xchg
dec
inc
add
and
adc
cdq
pop
int
and
fnstcw
movs
test
jnp
std
mov
mov
lds
jno
xor
int
lahf
test
jae
loop
dec
xchg
cld
add
sub
sbb
icebp
jbe
mov
dec
add
dec
sbb
and
fimul
jns
push
push
jnp
mov
add
mov
(bad)
pop
xor
ss
sub
lahf
imul
mov
jbe
mov
xchg
lea
lods
arpl
test
pop
jae
dec
sbb
pop
push
and
call
mov
mov
jmp
sub
pop
and
xor
xlat
mov
fwait
arpl
call
jmp
add
push
shr
push
mov
shr
jmp
ins
lea
or
sar
sbb
add
xchg
mov
dec
or
mov
mov
iret
inc
loope
fwait
test
retf
pop
push
push
aam
mov
rcl
dec
mov
jmp
je
pop
test
lods
pop
jo
cmp
push
in
cmps
pop
fnstsw
sbb
add
push
mov
std
xor
push
pop
int
mov
mov
aam
mov
rol
mov
popf
je
and
pop
add
(bad)
mul
inc
pop
sub
inc
sti
retf
or
inc
ret
cmc
or
sub
sbb
jo
lods
loopne
(bad)
push
jo
mov
enter
push
mov
add
addr16
pop
in
inc
sub
in
in
pop
mov
mov
cwde
jmp
push
in
or
add
add
cld
adc
and
or
jl
mov
xor
ja
xchg
xlat
ins
mov
cmc
ins
jo
dec
push
xchg
mov
cmp
test
xchg
adc
mov
lock
pop
test
xor
ficomp
pop
sbb
or
lea
and
mov
xor
mov
jo
in
pop
cmp
or
and
jbe
sbb
(bad)
jmp
pop
jge
jnp
rcr
xor
pop
loopne
pop
cld
dec
leave
fwait
xor
cmps
out
mov
je
mov
lock
inc
mov
adc
daa
js
enter
test
mov
scas
and
les
fstp
ror
test
xor
les
pushf
mov
enter
xchg
sub
aaa
dec
test
enter
cld
sub
ins
das
or
pop
push
pop
aas
gs
fnsave
jmp
(bad)
mov
jnp
xor
inc
rcl
fild
mov
pop
or
jns
je
ss
push
xchg
test
add
jnp
lds
shr
jno
mov
mov
iret
call
dec
jmp
pushf
sub
stc
hlt
jmp
ja
add
pop
and
or
not
mov
push
xchg
stc
adc
int3
xchg
push
lods
dec
jo
call
add
mov
xlat
inc
scas
(bad)
mov
dec
sub
and
pop
mov
xor
jecxz
loop
loopne
jg
enter
lahf
loop
gs
in
sbb
dec
xor
pop
jmp
in
pop
sbb
lock
loopne
push
add
aas
fs
(bad)
jge
cmp
enter
sbb
cli
stos
jge
inc
sahf
fnstsw
sub
shl
rcr
push
push
pop
pop
test
leave
dec
not
jecxz
bound
add
je
sbb
jb
adc
clc
mov
sbb
test
sbb
sub
out
jge
mov
and
or
pop
jecxz
fmul
inc
out
sbb
movs
mov
mov
adc
les
jmp
test
stc
xchg
xlat
aaa
stc
(bad)
cmp
inc
(bad)
sub
sbb
pop
std
sbb
mov
fxch
sub
in
sti
sbb
(bad)
ins
jae
inc
pop
test
loopne
ss
mov
outs
sbb
call
jge
fdivr
mov
adc
sbb
(bad)
dec
ret
or
sub
cmp
adc
mov
push
js
leave
pusha
xlat
pushf
jo
shl
cmp
bound
or
xor
pushf
je
mov
push
push
inc
mov
jmp
add
rcl
cmp
mov
mov
and
push
xor
mov
xchg
bound
mov
cmps
retf
lds
mov
int3
push
xlat
add
mov
mov
and
sbb
pop
pusha
sbb
push
cmova
lea
push
xor
sub
iret
je
cmps
cmp
xor
sbb
sbb
mov
pop
xor
fcmovu
fist
shl
inc
sub
loop
test
mov
(bad)
leave
(bad)
inc
cmps
fisttp
adc
mov
mov
cmc
mov
jmp
cmp
idiv
cmc
test
stos
cld
inc
or
scas
outs
jno
sub
pop
add
cmp
mov
test
movs
mov
fsincos
enter
imul
xchg
stc
mov
adc
cmp
mov
add
sub
dec
push
and
in
add
or
rol
sahf
sbb
movs
(bad)
mov
adc
xchg
mov
jb
cmovg
leave
push
mov
and
jge
je
pop
outs
inc
jno
mov
hlt
ja
mov
adc
mov
pop
retf
dec
aaa
dec
cs
inc
sbb
popa
sub
mov
rol
sub
sahf
loopne
ja
sub
mov
push
das
sub
cmp
sub
mov
pop
sub
popf
pop
mov
pop
mov
cmp
inc
dec
rol
(bad)
pop
in
popa
jb
in
cmp
and
dec
daa
sub
fwait
mov
bound
add
mov
mov
mov
loope
(bad)
mov
clc
mov
(bad)
fbld
cld
mov
clc
int
mov
or
lock
ja
xchg
mov
xor
addr16
lods
jmp
loop
dec
stos
cmp
jge
add
out
fisub
sbb
inc
into
pop
cli
inc
add
loop
and
cmp
sbb
repz
(bad)
dec
cld
mov
mov
pop
ds
bound
fcmove
sub
call
aaa
loopne
cmc
pushf
mov
and
sub
push
add
aas
cmp
mov
call
pop
call
cmp
mov
imul
movs
vrsqrtps
cmp
push
and
push
pop
push
jmp
add
adc
(bad)
std
in
jbe
stos
fild
lods
mov
lods
loope
add
push
ss
inc
jmp
sbb
in
mov
cmc
xchg
das
inc
pop
adc
test
or
jne
aam
pop
in
or
cli
xlat
pop
jo
ror
movs
(bad)
in
adc
cmp
xor
jecxz
enter
dec
sbb
retf
adc
xor
daa
scas
lds
cmp
sbb
pop
movs
clc
adc
sub
sbb
push
add
jle
dec
sbb
pop
sub
push
pop
sar
inc
jmp
xchg
stc
lea
xchg
out
sar
push
xor
adc
xor
mov
push
daa
pop
push
and
push
in
aad
or
loop
xchg
add
dec
jmp
xor
(bad)
fnstenv
sbb
int
add
clc
mov
ror
add
fwait
das
mov
gs
lods
(bad)
popf
fcmove
and
ins
jmp
add
jno
aam
ds
xchg
cmp
add
enter
inc
mov
leave
mov
(bad)
mov
adc
aaa
pusha
(bad)
hlt
jl
sti
sub
mov
pop
scas
aam
fbld
pusha
popa
jo
add
or
adc
push
repz
cmp
or
out
add
sbb
fistp
inc
jo
dec
lds
dec
pusha
jmp
jns
mov
push
mov
add
mov
dec
inc
mov
dec
jge
mov
adc
push
call
jne
and
mov
fimul
cmp
fwait
mov
sbb
pop
mov
xor
sbb
push
stos
popa
push
add
jmp
pop
cdq
imul
icebp
adc
and
jo
adc
fnsave
rcl
test
scas
call
and
or
ret
mov
add
movs
pop
stos
repnz
mov
cmp
push
jbe
push
mov
xor
sbb
inc
lds
inc
mov
adc
out
cmp
push
mov
and
sbb
jno
and
sbb
or
ficom
repnz
stos
cld
out
loop
sahf
sbb
adc
mov
shl
sub
sbb
lods
cmc
adc
setl
(bad)
data16
mov
repz
in
icebp
push
mov
or
or
retf
retf
fwait
mov
cmps
mov
inc
ins
mov
sahf
cld
dec
add
xchg
pop
mov
add
cwde
adc
jb
hlt
xlat
dec
pop
into
and
adc
dec
test
arpl
leave
push
aaa
mov
pop
in
sahf
in
out
js
mov
xchg
mov
jge
pop
shl
(bad)
jecxz
push
popf
add
jno
fs
cmc
mov
ficom
mov
jae
xor
or
cmp
add
adc
push
adc
push
push
popf
mov
mov
es
aaa
js
inc
(bad)
pop
rol
and
push
repnz
push
mov
cmps
pop
ror
dec
std
cli
dec
inc
ret
fdivr
and
ja
outs
xchg
mov
je
stc
leave
mov
mov
mov
scas
inc
jge
inc
retf
mov
imul
iret
test
mov
cmps
test
cs
push
fcmovnu
xchg
lds
or
sar
add
sbb
push
or
fistp
(bad)
xchg
sub
inc
adc
aam
mov
inc
fild
add
cmp
hlt
mov
jecxz
inc
or
shl
or
mov
pop
cwde
pop
push
jp
out
push
mov
mov
rol
test
sub
daa
inc
loop
or
sti
test
loop
xchg
dec
inc
inc
xchg
sbb
xor
in
push
inc
adc
popa
mov
sub
mov
ret
mov
daa
pop
leave
cli
jge
repnz
xchg
mov
sub
shld
or
bound
movs
cmp
push
or
dec
test
int
loopne
dec
inc
cld
mov
in
mov
daa
or
sub
cdq
and
loop
aad
aam
xchg
(bad)
aas
lods
push
cmp
pop
push
ret
je
inc
popf
les
leave
cmp
push
mov
jecxz
sti
test
cmp
xchg
fistp
sbb
ficomp
mov
mov
adc
xchg
bnd
xchg
sub
xchg
mov
ret
movs
fnstcw
rcl
dec
scas
sbb
sbb
mov
lods
xor
cmps
jecxz
ins
movs
lods
jne
jge
stos
push
fstp
ja
mov
repnz
or
or
add
dec
or
es
in
or
cmc
rcl
jno
imul
loop
fidivr
or
(bad)
retf
fild
(bad)
call
(bad)
and
(bad)
cld
mov
imul
sub
sbb
jbe
inc
ins
bound
adc
mov
push
hlt
fprem
dec
inc
dec
adc
mov
out
and
lods
xchg
scas
pop
imul
or
jmp
std
or
adc
jns
retf
dec
shl
jmp
shl
scas
jg
out
(bad)
(bad)
xor
ror
mov
push
neg
mov
push
pop
sbb
cmp
inc
icebp
pop
or
call
imul
push
dec
int
xchg
lods
mov
push
sub
std
aad
bound
dec
mov
lock
fist
sub
nop
arpl
pop
cmps
jo
push
add
adc
leave
inc
aad
xchg
inc
ss
cmp
xchg
std
pop
cmp
jae
into
push
add
jle
mov
hlt
pop
jno
popa
push
stos
xchg
and
daa
ret
adc
mov
jns
sbb
add
cs
jae
xchg
and
ja
mov
fmul
sub
xchg
add
clc
xor
sub
mov
ror
ret
mov
test
jle
xchg
loopne
mov
pop
shr
nop
loop
shr
and
cwde
in
adc
outs
mov
xchg
push
push
mov
daa
pop
ja
xchg
add
mov
inc
nop
rcr
cli
add
retf
add
not
ret
inc
adc
jne
push
push
pop
jbe
test
push
int
nop
movs
and
repnz
jp
mov
or
sub
js
or
fsub
pop
ds
jmp
enter
add
retf
cmp
mov
pop
fadd
or
icebp
aaa
bound
add
(bad)
sub
rol
xor
pop
pop
inc
xor
xchg
cwde
or
repnz
mov
rcl
bswap
dec
mov
into
cmps
inc
cs
out
xor
test
lea
or
pop
lods
and
dec
and
mov
pop
mov
ror
push
and
movs
stos
out
popa
mov
mov
pop
outs
cmps
push
ret
call
pop
mov
push
jb
js
(bad)
jmp
cmc
out
xor
sti
pop
ret
int
icebp
cmp
and
cdq
cmp
nop
mov
lahf
fpatan
mov
sub
push
icebp
std
(bad)
shl
add
shl
sub
add
ins
ret
mov
cmp
fst
push
sub
wrmsr
mov
adc
xchg
mov
and
fucomip
stos
jns
xor
xor
fsubr
rcl
jge
inc
aad
xor
cmp
or
push
mov
ds
push
adc
pop
pop
push
or
fld
sti
test
inc
ja
sbb
push
(bad)
fsubr
sti
sbb
hlt
test
movs
cmp
(bad)
sub
mov
inc
es
sbb
(bad)
out
(bad)
hlt
cmp
imul
sahf
sbb
aaa
ret
dec
popf
test
std
adc
sar
inc
int3
rcr
dec
cmp
inc
pop
push
cmp
dec
inc
fxch
test
xor
jno
xlat
gs
pop
or
ret
(bad)
stc
and
imul
fidiv
test
stos
cmp
adc
popa
cmps
push
scas
mov
les
cld
jns
stos
fld
cli
ror
mov
mov
add
mov
dec
mov
jg
xchg
fnsave
dec
arpl
and
jg
enter
mov
mov
mov
jg
ins
inc
dec
int3
(bad)
fld
cld
mov
jo
mov
jne
push
icebp
scas
jns
mov
jge
pop
lods
cld
mov
and
xchg
xchg
add
imul
and
movs
icebp
pushf
retf
cs
lock
pop
stos
fistp
mov
mov
jp
addr16
aad
push
test
and
jb
jle
mov
dec
mov
es
inc
xchg
xlat
add
add
in
fidiv
pop
mov
stos
sbb
les
(bad)
in
xor
ins
cmp
stos
fbstp
inc
mov
cdq
add
loopne
jp
ins
push
call
pusha
add
pop
mov
mov
fimul
cmp
add
(bad)
ficomp
adc
test
add
dec
not
dec
movs
inc
(bad)
sti
pop
push
shl
addr16
jb
jmp
movs
xor
xchg
bound
jne
push
stc
mov
and
gs
into
dec
mov
or
dec
js
lahf
stos
pop
mov
sti
mov
pop
mov
adc
test
mov
mov
inc
mov
icebp
jnp
xchg
inc
(bad)
mov
dec
(bad)
leave
adc
adc
mov
adc
cs
xor
fcom
sub
out
into
xor
pop
add
rol
dec
mov
movs
shl
xchg
mov
scas
lock
dec
cmc
add
imul
adc
shr
sbb
sub
ficomp
test
inc
sub
inc
out
out
dec
dec
dec
ror
inc
jo
mov
aas
cmp
jge
addr16
xor
dec
cmovo
cdq
clc
dec
push
cli
jmp
pavgb
adc
push
jmp
adc
pop
sbb
mov
popa
sub
sbb
mov
outs
or
repz
jmp
aad
dec
adc
and
mov
pop
ins
gs
or
sbb
mov
push
fsub
xchg
lods
sub
pusha
mov
out
inc
jmp
xchg
test
push
jno
pop
mov
push
pop
(bad)
pop
popf
or
jmp
nop
mov
in
(bad)
repz
cmp
adc
into
movs
out
mov
out
cmp
jge
sub
aas
call
and
loopne
xchg
ja
dec
icebp
loope
push
std
or
data16
adc
sub
scas
push
iret
add
iret
mov
mov
jmp
clc
push
xchg
mov
lahf
fisub
cmps
(bad)
iret
xor
mov
fld
adc
test
lahf
mov
es
int3
outs
pop
sub
or
or
inc
addr16
popa
and
add
mov
(bad)
xchg
fidiv
das
fs
ins
les
ret
mov
mov
pop
push
ins
icebp
inc
test
sbb
mov
adc
dec
add
jp
out
(bad)
pop
push
cmp
test
invd
fild
pusha
shl
retf
aaa
or
inc
xchg
jbe
xor
in
sub
ret
jae
popa
inc
(bad)
aaa
clc
into
jno
xor
mov
xor
inc
cmps
rol
(bad)
mov
outs
xchg
xchg
pop
cli
xor
aam
jg
xchg
mov
mov
sbb
pop
nop
push
je
js
pop
mov
scas
stc
imul
test
xor
lods
jmp
inc
movs
and
or
mov
cdq
xor
dec
div
daa
inc
mov
add
adc
outs
xor
aas
mov
inc
mov
out
or
addr16
retf
and
and
jp
adc
mov
pop
int
jl
sar
inc
loop
xchg
mov
mov
push
pop
jge
mov
int3
cld
sub
jecxz
push
stos
mov
je
jbe
popf
das
call
xchg
cwde
cli
add
shl
add
ins
jp
dec
mov
inc
int3
adc
aad
je
stos
jno
gs
dec
arpl
mov
sahf
in
dec
push
mov
xchg
mov
aaa
or
sbb
pop
sub
add
and
cdq
clc
es
cmc
clc
inc
xchg
xor
pop
fld
rcl
mov
nop
rol
add
mov
iret
shl
repz
pop
mov
inc
out
jns
mov
retf
jmp
jmp
jecxz
pop
or
inc
(bad)
mov
fcomp
push
push
add
aad
imul
xor
jle
mov
mov
adc
icebp
repnz
inc
cs
mov
outs
dec
xchg
int
mov
pop
leave
pop
xor
pusha
call
inc
pop
mov
pop
mov
jecxz
arpl
sub
shr
ins
movs
mov
ins
repnz
cmp
jns
mov
mov
cwde
pushf
or
xchg
sbb
lds
jg
loop
push
adc
pop
stc
ja
fcmovnb
and
sbb
out
cli
bnd
inc
mov
les
cmc
loopne
pusha
or
ins
pop
add
nop
repnz
sub
jg
gs
mov
cwde
lea
push
outs
or
cmp
rol
xor
jmp
test
stos
aad
cmp
mov
popa
mov
les
sub
out
ror
mov
cmc
cdq
fsub
movs
sbb
outs
fld
jl
fild
and
test
mov
and
jmp
mov
push
nop
mov
sub
movs
xor
out
xor
or
and
xor
push
or
adc
sti
add
out
das
and
jp
push
inc
cmp
xlat
jg
movs
in
jbe
cmp
push
push
mov
ja
jmp
bound
ficom
adc
enter
dec
xor
das
mov
xor
jg
(bad)
adc
push
pop
adc
dec
add
leave
popa
sbb
out
hlt
and
mov
lahf
pop
jle
js
jg
sbb
add
leave
lea
ret
mov
sub
add
into
ss
out
sbb
xchg
out
mov
(bad)
pop
imul
in
loopne
ja
sahf
or
add
neg
xor
sbb
xchg
or
nop
adc
fld
sbb
or
dec
lahf
xchg
outs
adc
dec
mov
jo
retf
popa
cli
mov
(bad)
push
je
jp
add
loopne
stc
mov
mov
mov
out
nop
(bad)
and
mov
fst
jo
push
ins
add
aam
les
pop
cmps
pusha
or
ss
inc
and
mov
mov
(bad)
push
push
test
jle
ror
fsub
inc
(bad)
and
sbb
inc
sub
cmp
(bad)
mov
in
popf
push
stos
pop
movs
lds
dec
mov
dec
sbb
(bad)
xchg
es
fcom
aam
gs
dec
loop
jno
nop
das
into
adc
leave
ret
jne
mov
leave
sub
and
jle
cmp
inc
cld
pop
mov
ins
(bad)
xor
cmp
mov
test
sub
jbe
mov
adc
cwde
inc
adc
lock
or
ins
pushf
jecxz
inc
(bad)
push
dec
call
ins
or
add
mov
ins
loope
add
adc
ds
aaa
fidiv
xor
movs
sub
pushf
int
lods
ins
ja
cld
fstp
sub
rcl
mov
arpl
sti
repz
xchg
test
imul
mov
ret
adc
xor
jo
adc
inc
repz
lahf
imul
sti
inc
ins
adc
push
aam
pop
add
cmp
lock
lea
mov
sub
cmp
and
mov
(bad)
cmp
jge
shl
push
push
imul
(bad)
stos
lods
sar
push
cmp
daa
dec
das
dec
add
mov
hlt
in
nop
mul
loopne
cli
clc
fsincos
cmp
ficomp
xlat
gs
xchg
xor
mov
inc
xchg
pop
fiadd
add
pushf
jae
loopne
push
and
fst
sbb
imul
ss
fs
cmp
add
push
fdiv
cmp
push
adc
jne
mov
aaa
and
retf
sbb
pusha
es
fstp
add
std
sub
xor
je
pushf
adc
or
cwde
in
adc
mov
sbb
mov
jo
cmp
daa
and
push
cmp
popa
cmp
and
inc
jp
pop
sbb
sub
pop
pop
inc
scas
xchg
xchg
jns
jl
cmp
lds
repz
outs
xchg
add
dec
jbe
ja
leave
cmp
xchg
not
(bad)
test
out
mov
xchg
lahf
movs
push
outs
xor
dec
lds
ja
inc
das
adc
outs
push
into
jle
pop
cmp
clc
mov
fiadd
sbb
sub
mov
imul
and
sahf
mov
pop
add
sub
mov
stos
mov
leave
xchg
mov
pop
arpl
fld
push
mov
leave
jmp
lds
fst
pop
push
sub
add
movs
test
mov
push
ds
lods
add
aad
push
jecxz
jmp
sti
outs
jae
cld
mov
jecxz
imul
stmxcsr
jno
sub
xchg
jp
dec
(bad)
sub
aad
repz
js
push
aam
pop
aaa
(bad)
adc
mov
push
fstp
int3
mov
in
and
push
enter
sahf
lods
cmps
sbb
scas
popa
outs
xchg
dec
cmp
ds
in
call
xchg
data16
xchg
leave
mov
pop
scas
cmps
pop
inc
mov
movs
dec
mov
arpl
in
jns
adc
fistp
les
loop
mov
mov
add
jp
jae
inc
jle
mov
in
pop
or
push
push
mov
ss
outs
les
cmp
scas
icebp
ret
cmc
mov
cmps
sub
in
test
cld
and
adc
pop
aaa
dec
fdiv
inc
cld
and
jns
inc
stc
cmps
dec
js
ds
sbb
mov
adc
(bad)
in
cmps
fnstsw
daa
outs
push
call
leave
cmps
sbb
pop
push
pop
push
dec
(bad)
aam
pop
xchg
cdq
sub
push
mov
mov
and
cmp
(bad)
sar
call
pop
lea
mov
lahf
imul
imul
and
add
test
and
jnp
vfmaddsubpd
and
or
mov
loope
sbb
retf
shr
adc
addr16
xlat
(bad)
and
xor
movs
into
ja
sub
mov
loopne
shl
retf
mov
aaa
xor
mov
mov
xchg
xor
jp
sbb
cdq
inc
imul
xchg
sbb
mov
sub
and
inc
jae
outs
cmp
mov
sbb
pop
add
add
adc
test
or
dec
sub
shr
out
sub
and
dec
lahf
movs
retf
das
or
xchg
and
mov
jle
clc
movs
ret
jns
dec
xor
enter
sti
jbe
inc
mov
stc
in
rcr
js
inc
ins
test
cmps
loop
loopne
push
retf
push
mov
xor
pop
sbb
inc
je
sbb
popa
sbb
call
add
leave
inc
cdq
jmp
cmp
test
or
js
cmp
ror
int
in
jnp
loope
add
fld
pop
test
inc
mov
hlt
and
cmp
ja
mov
and
rol
xor
push
push
movs
cdq
aas
lahf
loop
jnp
aam
mov
pop
xchg
repnz
in
pop
dec
or
push
ins
sub
mov
adc
fsubr
inc
sahf
push
dec
stos
cmp
popf
add
or
sbb
dec
fbstp
je
stos
xor
xor
scas
dec
or
jle
nop
cwde
cmp
mov
mov
mov
(bad)
adc
icebp
mov
pop
jno
std
jne
add
call
shl
(bad)
frstor
push
fistp
mov
xchg
mov
jecxz
loopne
outs
add
(bad)
aad
push
jnp
jge
adc
enter
and
xchg
jne
popf
icebp
loope
movs
sbb
sub
mov
fistp
add
sbb
aaa
mov
mov
fidivr
xor
mov
pop
outs
fimul
push
xchg
test
dec
adc
inc
xchg
data16
fiadd
sahf
int
jo
shl
add
or
(bad)
pop
dec
adc
and
xchg
push
rcl
inc
push
nop
repz
cli
add
mov
xor
add
sbb
scas
shr
push
mov
dec
sahf
and
inc
mov
add
rcr
mov
sbb
outs
bound
repz
hlt
cmp
fidivr
movs
pop
sbb
cwde
popf
sbb
mov
fisttp
fcomp
test
mov
mov
pop
add
imul
push
xor
test
lods
aam
enter
xor
call
jbe
(bad)
retf
cmp
fsub
xchg
pop
ret
sbb
and
sub
jb
in
jge
das
jp
jno
add
adc
clc
and
jl
repnz
loope
daa
ds
test
aas
push
aam
rol
mov
mov
mov
call
mov
scas
sbb
sub
cmp
std
or
scas
xchg
pop
rcr
jle
iret
sub
and
popa
arpl
push
fild
inc
add
push
retf
gs
push
mov
ins
adc
add
add
aaa
inc
lods
push
gs
aad
mov
jo
adc
inc
push
stos
in
cmp
push
adc
jle
dec
mov
rcr
enter
mov
add
popa
test
enter
not
xchg
jl
stos
add
in
(bad)
ja
pop
add
cmp
mov
rcl
dec
lahf
lods
aas
xor
and
ja
mov
or
add
sbb
add
xchg
and
jns
fbstp
cmp
int3
jbe
int
arpl
mov
or
loope
or
(bad)
inc
push
pop
pop
fmul
fs
xchg
push
imul
dec
jl
jbe
sub
mov
mov
aas
daa
xchg
cmps
add
lea
xor
sbb
cmp
jnp
jmp
jno
fucomi
aas
movs
les
jo
gs
mov
or
mov
addr16
sbb
xchg
inc
test
add
cmp
loopne
shl
push
push
jle
or
fadd
test
loope
cmps
mov
mov
ds
dec
(bad)
hlt
push
sbb
dec
loop
dec
add
(bad)
mov
scas
(bad)
mov
adc
lods
dec
icebp
cld
call
scas
xor
je
scas
mov
loope
movs
int3
(bad)
fist
push
cmp
mov
retf
in
lds
or
icebp
inc
xchg
mov
fstp
pop
add
in
xor
push
dec
cmp
xor
(bad)
shl
cmp
sub
dec
rcr
inc
in
std
daa
push
push
pushf
mov
cmp
ja
cmp
mov
retf
sub
int3
test
jmp
mov
(bad)
js
mov
imul
sbb
push
cmp
adc
addr16
jecxz
shr
enter
dec
mov
add
jnp
adc
aas
loopne
mov
jg
xor
aam
mov
outs
pop
aaa
not
outs
add
dec
(bad)
jl
or
stos
(bad)
xchg
push
push
or
out
scas
fild
out
fwait
outs
xchg
sbb
out
adc
sbb
cmp
mov
div
(bad)
fnop
add
icebp
repnz
dec
(bad)
cdq
(bad)
clc
mov
lahf
push
push
pop
fisubr
inc
xchg
sub
(bad)
jnp
inc
fldcw
and
dec
arpl
push
pop
out
imul
cmp
loope
aas
jnp
push
iret
xchg
sbb
or
push
data16
shl
cld
cmp
jae
push
xlat
sub
not
cmp
sbb
mov
cmc
inc
add
call
add
dec
jmp
inc
scas
jnp
cdq
push
mov
mov
ret
ret
jl
iret
cmp
inc
xor
push
repnz
xchg
scas
jecxz
movs
rcl
js
inc
adc
leave
iret
(bad)
mov
into
sbb
add
mov
stos
cmp
jb
and
ret
lds
addr16
movs
retf
je
mov
and
nop
jmp
mov
inc
aas
scas
mov
cmps
scas
jmp
imul
sbb
mov
add
inc
push
jb
cli
xor
pop
sbb
jmp
dec
call
mov
dec
sbb
adc
sub
adc
dec
aam
and
mov
repnz
sub
xchg
stos
in
mov
pop
fld
and
call
cmp
call
mov
cmp
add
push
into
xchg
jo
xlat
outs
iret
cmps
jns
xor
sbb
mov
imul
cmp
ins
adc
sub
xor
mov
add
sti
stos
xchg
mov
mov
cdq
popa
jp
adc
inc
adc
mov
js
sbb
mov
push
sar
or
inc
(bad)
bextr
dec
lods
ins
adc
sub
stos
xor
clc
les
ret
test
mov
and
inc
test
lock
cmps
nop
push
or
dec
(bad)
ins
jb
mov
and
mov
ss
pop
mov
lods
repz
mov
and
inc
or
call
daa
sti
jmp
or
fisttp
pop
cmc
jb
and
jmp
mov
inc
rol
pop
(bad)
adc
xlat
pop
mov
or
or
push
inc
outs
dec
and
jbe
clc
mov
mov
jp
sbb
sti
neg
bound
mov
xor
push
xor
ror
dec
cmp
sub
inc
cmpxchg
add
mov
mov
(bad)
xchg
dec
adc
xchg
scas
inc
jle
jl
adc
popf
mov
ins
sub
dec
sbb
sub
test
pop
hlt
lahf
fist
adc
jne
ret
int
dec
xor
(bad)
repz
les
xchg
add
pop
sbb
mov
sub
xlat
ja
jecxz
push
cmp
test
aad
jge
out
in
popa
jge
cmc
aaa
outs
shl
and
cmp
sbb
fs
and
or
sub
daa
and
inc
call
fistp
popa
mov
push
add
mov
sub
cmp
jne
int3
pop
jge
push
inc
int3
das
cmps
sub
push
push
retf
add
jae
in
(bad)
fdiv
cmp
mov
daa
cmp
push
push
jb
pop
test
dec
xor
mov
mov
dec
fnstenv
inc
ret
pop
int3
lock
stc
imul
cmc
jne
scas
jno
outs
add
pop
mov
dec
inc
jne
mov
adc
mov
(bad)
ror
adc
push
push
sbb
jne
cmc
pop
or
jns
and
imul
dec
inc
push
xadd
mov
and
dec
and
cmps
scas
fld
and
or
js
cmp
loop
inc
(bad)
fucomp
dec
pop
and
adc
loope
ss
cmc
add
push
add
jge
(bad)
out
pop
sub
ins
push
neg
imul
push
mov
and
out
in
push
sti
dec
in
and
add
mov
push
inc
in
or
mov
xchg
add
jle
ror
push
push
or
outs
mov
dec
push
test
push
movs
repnz
xchg
xor
repnz
mov
adc
fisttp
pop
scas
(bad)
jmp
daa
add
cmp
pushf
push
xor
cmp
test
retf
fnstcw
out
cmp
mov
pop
leave
scas
dec
push
mov
(bad)
shl
in
les
pop
movs
pop
popa
repnz
ret
sbb
js
pop
pop
je
std
pop
push
fs
mov
jns
in
loopne
cmp
and
pusha
loop
fwait
sar
hlt
fimul
les
and
sbb
jno
fcmovne
mov
mov
adc
xchg
sub
int
dec
cld
push
cld
dec
cmp
sub
xor
dec
dec
lds
lds
mov
dec
sub
inc
mov
mov
nop
mul
cld
mov
dec
or
and
movs
hlt
aaa
pushf
xchg
popa
arpl
cmp
adc
xchg
test
jg
fstp
jmp
es
ret
jmp
pop
and
shr
sbb
xchg
inc
push
jg
xor
add
mov
pushf
mov
push
jmp
js
and
sub
sub
and
cli
outs
sbb
mov
dec
fisttp
cmp
pop
imul
repnz
ja
dec
outs
mov
retf
gs
pop
popa
in
xor
je
mov
cs
out
dec
mov
jne
ins
arpl
mov
mov
test
xchg
push
pop
ds
rcr
cmp
add
shr
cmps
cmc
cwde
div
lock
jle
jge
test
xor
xchg
jb
push
push
inc
cmps
(bad)
aas
aaa
lods
jecxz
jecxz
xchg
clc
jge
mov
sbb
mov
jp
add
in
mov
and
jge
jmp
nop
out
lahf
push
pop
mov
xchg
out
pusha
je
push
scas
dec
xchg
inc
cmp
nop
fisub
cmp
lods
rcr
add
add
(bad)
jne
imul
or
int
add
and
dec
or
pop
inc
dec
or
mov
push
lds
fld
call
mov
xchg
das
aam
pop
dec
ins
sub
inc
xor
pop
mov
sub
sbb
mov
push
adc
push
(bad)
jmp
jae
movs
pop
mov
adc
fsubp
ja
or
xor
sbb
cmp
test
dec
(bad)
aad
push
cs
loope
loopne
mov
loop
ret
sbb
cmp
mov
push
sub
pop
stos
cmps
rol
pop
inc
push
fwait
mov
int3
shld
mov
or
test
inc
(bad)
xlat
mov
mov
test
addr16
lods
fidiv
sar
dec
cli
sub
ret
lahf
cmc
push
mov
out
test
pop
mov
cwde
jbe
popa
stc
sub
in
imul
retf
cwde
out
xor
xchg
pushf
lahf
xlat
dec
xchg
jo
(bad)
dec
daa
mov
mov
xchg
(bad)
in
jmp
scas
shl
jmp
cdq
das
xor
aad
in
jne
add
add
xchg
and
nop
and
mov
or
repz
jecxz
pop
arpl
pop
xlat
sub
dec
dec
aaa
cmps
cdq
std
fist
inc
adc
test
dec
adc
repnz
mov
daa
arpl
cmp
ja
lods
jb
mov
jo
ret
clc
(bad)
into
sbb
addr16
inc
push
outs
add
scas
sub
pop
fidiv
fiadd
push
push
or
adc
cmovnp
std
adc
xchg
inc
in
mov
cmp
cmp
(bad)
fsubr
lods
mov
jg
movs
daa
in
mov
pop
mov
and
mov
outs
mov
iret
bts
lea
sub
or
cld
push
sub
imul
test
sub
jae
cmp
sbb
jmp
fs
repnz
push
mov
jp
fmul
dec
daa
or
cmps
cmp
sar
cmp
push
xchg
pop
rcr
add
fisubr
addr16
mov
cmps
cld
in
xor
and
adc
mov
inc
stos
jne
addr16
add
sbb
jo
sub
mov
test
adc
rol
jo
add
pop
inc
sbb
add
dec
and
push
mov
xchg
xchg
das
inc
and
dec
mov
ins
dec
ret
iret
fmul
daa
push
adc
pop
pop
repz
fisub
stos
mov
loope
and
imul
push
in
add
or
adc
jae
add
sbb
iret
xor
lds
pop
enter
ss
cmc
mov
pop
mov
mov
jle
movs
sbb
fist
mov
js
mov
mov
movs
imul
(bad)
pop
mov
jp
mov
scas
(bad)
pop
add
adc
or
aas
mov
mov
fnstsw
mov
lods
cmp
mov
jle
out
dec
movs
enter
add
jmp
arpl
or
loopne
add
std
bound
xor
lods
sbb
pop
xchg
mov
jmp
xor
jbe
push
pop
outs
ror
xor
push
clc
int3
xchg
pop
(bad)
push
out
jae
(bad)
ja
test
rcl
aas
fsubr
(bad)
stc
imul
xor
out
ja
and
sbb
gs
pop
out
inc
imul
mov
repnz
mov
imul
fwait
pop
inc
fistp
dec
mov
div
in
mov
leave
mov
jcxz
xchg
aas
add
jg
adc
dec
adc
fwait
mov
mov
jle
mov
popf
xor
mov
xchg
pop
xchg
bound
in
cld
aaa
dec
outs
cmp
outs
dec
clc
mov
loope
jne
adc
(bad)
xor
sahf
cmp
daa
aaa
xchg
fsub
aad
jge
enter
(bad)
ficom
mov
xor
nop
mov
test
outs
adc
test
repz
les
scas
in
mov
jl
loopne
sahf
jno
fldl2t
xchg
aas
pop
rcl
cmp
into
mov
or
mov
and
icebp
jmp
adc
outs
xchg
sbb
push
mov
rcr
call
iret
popf
pop
mov
cmp
call
xor
dec
xchg
int
mov
in
std
movd
dec
jmp
inc
movs
mov
scas
pop
jne
pop
test
jge
dec
cmp
fisub
nop
movs
add
jle
test
gs
(bad)
jp
mov
imul
popa
sbb
sub
outs
xchg
push
or
ret
push
cmc
js
scas
mov
dec
lea
push
push
jl
mov
je
mov
arpl
pop
push
mov
imul
dec
sub
sahf
add
inc
lea
add
stos
sbb
jmp
jnp
(bad)
scas
(bad)
jmp
mov
lds
mov
int3
(bad)
std
loope
dec
adc
loopne
pushf
xor
sub
stc
aas
xchg
std
cli
inc
jg
sbb
and
xchg
lock
mov
inc
sahf
adc
mov
add
sbb
inc
(bad)
ret
nop
aam
mov
jbe
sub
mov
out
sbb
add
gs
cmc
mov
mov
int3
cmp
lods
dec
jecxz
fsubr
test
push
lea
pop
gs
pop
call
sbb
pop
mov
movs
jmp
ret
out
ret
fstp
inc
js
sub
(bad)
lods
dec
inc
push
retf
jo
shl
out
lock
scas
inc
outs
inc
(bad)
xor
sti
(bad)
xchg
lods
adc
dec
push
push
not
int3
push
lahf
dec
sbb
test
push
pop
adc
arpl
add
mov
jnp
mov
push
aaa
jnp
xchg
xchg
fmul
mov
mov
movs
std
xchg
mov
xor
and
sub
fwait
xchg
cmp
push
sbb
ret
sub
jl
lahf
out
retf
out
mov
loop
jne
push
aad
jl
push
sahf
and
daa
xor
mov
ja
jecxz
cmps
lock
or
cwde
cs
pop
hlt
sbb
push
in
mov
sbb
inc
inc
inc
ds
imul
imul
iret
mov
pop
and
fisubr
(bad)
and
es
or
imul
add
sbb
icebp
int
mov
pop
fisubr
and
push
adc
loope
scas
dec
push
lahf
(bad)
repnz
jne
xlat
out
xchg
mov
sbb
ins
aam
xor
in
mov
mov
and
dec
lea
call
inc
push
mov
mov
imul
jns
cdq
test
nop
cli
push
cmp
mov
fbstp
add
mov
mov
xchg
jmp
add
test
fstp
push
syscall
packssdw
je
xor
dec
cmp
mov
test
cmp
mov
in
xor
mov
inc
inc
xor
add
inc
or
adc
or
add
adc
shl
out
aas
add
mov
(bad)
and
mov
mov
mov
adc
fnstsw
(bad)
std
ins
sahf
retf
jmp
adc
and
fwait
mov
inc
jge
add
xor
jge
cwde
sub
cmps
loopne
scas
and
and
mov
inc
sbb
mov
xchg
pop
jl
adc
jne
push
pop
iret
fcom
cmp
push
pop
xor
mov
dec
adc
adc
sar
sbb
push
in
into
test
cdq
out
mov
mov
jmp
xchg
sti
daa
cmp
jmp
std
sbb
ss
adc
mov
int
sbb
fdivp
push
adc
xor
nop
pop
dec
xchg
lahf
outs
jbe
shr
or
gs
xchg
jno
push
sbb
mov
movs
ds
pushf
ss
imul
sub
clc
jp
popa
div
mov
aaa
and
mov
loop
sar
add
jg
sbb
(bad)
mov
pop
cld
and
push
or
dec
lds
(bad)
mov
repz
jmp
cmp
fcmovne
inc
pop
out
xor
sbb
or
je
pusha
fmul
xor
dec
pop
sub
movs
mov
fcom
jae
jge
pop
lds
(bad)
jl
mov
xlat
retf
data16
jbe
popa
jmp
ror
std
push
fsub
pop
pop
hlt
sbb
jae
add
mov
retf
pop
mov
mov
movs
or
mov
je
push
movsx
cmps
add
dec
inc
mov
(bad)
mov
jmp
in
pop
je
fist
and
pop
cdq
fcomi
loop
nop
test
xor
add
fcom
shr
jg
sbb
int
idiv
(bad)
out
ins
add
and
jl
mov
inc
in
sub
(bad)
into
test
out
aad
in
sbb
cmp
shl
mov
or
loopne
es
cdq
and
mov
sub
ror
lods
ds
inc
lods
les
(bad)
call
enter
and
stos
add
mov
ror
sub
sbb
xor
xor
jp
test
xlat
and
mov
pop
push
jl
movs
jns
jno
adc
std
xchg
adc
nop
dec
data16
sub
in
adc
(bad)
shl
movs
out
jecxz
push
not
lahf
retf
sub
push
xlat
int3
test
outs
or
jno
(bad)
sub
fcom
les
mov
xadd
push
lds
inc
cmps
(bad)
cmp
push
int
jne
fcom
xor
mov
cmc
ds
jmp
add
push
and
dec
jb
das
outs
sbb
jge
cld
mov
lock
mov
pushf
push
(bad)
cmp
aam
and
mov
cdq
inc
push
jbe
add
jmp
cmp
(bad)
aas
in
xchg
or
mov
dec
mov
jg
cmp
loopne
jbe
test
jno
ds
jno
pop
xchg
shl
add
ins
shl
iret
cld
stos
out
inc
mov
xchg
nop
sbb
or
push
in
scas
imul
and
sahf
sub
push
out
inc
mov
sub
lods
fst
and
in
imul
jle
sar
mov
and
push
pop
mov
jb
cmp
outs
add
push
fs
test
sub
jne
std
mov
inc
mov
sub
lock
dec
pop
inc
sti
or
xchg
cmps
push
int3
stos
leave
jmp
sub
out
sbb
stc
rcr
sub
outs
daa
xchg
sub
mov
xor
enter
dec
pusha
aaa
or
test
cdq
jmp
dec
or
adc
sub
aas
ud2
mov
mov
inc
fwait
pop
arpl
dec
adc
push
push
leave
sti
retf
sbb
cdq
enter
pop
mov
in
cmp
mov
pop
push
mov
hlt
add
ins
adc
push
jge
or
aaa
in
mov
movs
or
push
out
push
pushf
test
xchg
lods
mov
mov
pop
popf
mov
in
dec
push
or
push
and
mov
rcl
out
add
dec
and
mov
sti
data16
stos
hlt
lock
mov
add
shl
or
pop
push
outs
pop
jle
std
mov
fist
hlt
and
sahf
jmp
xchg
xchg
adc
push
or
xchg
das
xor
cmc
fsubp
xchg
cmp
cmp
pop
push
(bad)
movs
aad
mov
retf
pop
into
dec
movs
or
movs
rol
adc
out
jmp
out
rcr
stc
imul
(bad)
outs
dec
popf
retf
jne
loope
push
xchg
and
dec
inc
call
mov
daa
ret
jae
fstp
ja
inc
push
jmp
leave
loope
sar
xchg
cmp
dec
jge
push
pop
stc
xchg
cmp
adc
fstp
or
jge
dec
cmp
ret
test
jle
inc
lds
(bad)
stc
mov
retf
or
xchg
push
sbb
pop
and
ret
out
sub
lods
inc
dec
mov
push
ja
and
ds
aaa
jle
ins
loop
int3
(bad)
std
shl
imul
bound
cwde
retf
cmp
in
sti
(bad)
lds
adc
ss
sahf
rol
(bad)
jle
ins
fnclex
test
ins
xchg
fs
xchg
pusha
or
cmps
test
in
mov
idiv
movs
lods
je
sub
mov
clc
(bad)
xor
outs
ds
scas
aaa
das
adc
cmps
push
jns
cs
rcl
mov
sub
xchg
and
mov
xchg
mov
mov
in
xor
mov
cmp
mov
pop
mov
sbb
push
sbb
push
cmp
push
icebp
(bad)
push
repnz
ja
jle
pop
add
ins
xlat
jmp
mov
push
rcr
pop
jo
out
movs
add
add
fld
ins
cmp
mov
jmp
jle
adc
popa
dec
mov
or
xlat
movs
mov
aad
test
adc
push
mov
mov
or
fsub
iret
push
cs
pop
hlt
and
int3
(bad)
js
push
xor
add
jp
call
adc
sti
push
out
xor
les
xchg
xchg
rol
mov
lods
(bad)
ins
pusha
(bad)
pop
cmp
inc
cmp
xchg
sahf
fistp
stos
stc
movs
xchg
aaa
push
dec
xchg
into
sbb
(bad)
movs
mov
jae
cmp
lahf
dec
cmp
inc
fmul
data16
rcr
cmps
pop
xchg
mov
xchg
jecxz
xchg
ror
call
jns
gs
sub
sub
daa
dec
aam
and
dec
mov
or
jmp
mov
bound
outs
mov
daa
jecxz
pop
es
ins
test
cmp
push
fnstcw
mov
dec
xchg
push
mov
pop
inc
movs
mov
push
mov
jne
ret
clc
mov
mov
or
jg
neg
xor
adc
ins
xchg
sar
es
sub
(bad)
ret
xchg
cmp
cmp
fwait
push
shr
mov
mov
fnsave
fcompp
mov
fild
push
push
inc
dec
mov
mov
test
sub
or
retf
fld
popa
inc
mov
mov
dec
pop
pop
mul
daa
cmps
ss
mov
xchg
xchg
push
mov
add
sub
pop
outs
hlt
lods
ror
pop
sahf
pusha
lock
hlt
popa
and
push
das
xchg
sub
sar
clc
adc
xchg
aad
cli
in
add
xor
cmp
or
int3
pop
and
ret
fnstcw
stos
push
xor
punpckhwd
ins
push
sub
mov
daa
int3
push
mov
xor
leave
xlat
cmp
(bad)
aas
push
(bad)
icebp
call
pop
jge
or
sub
adc
int
das
dec
xor
jno
push
(bad)
sbb
out
mov
sub
je
sbb
in
daa
enter
div
jle
neg
jecxz
ret
cmp
cmp
scas
pop
lods
imul
cdq
repnz
mov
xchg
std
pop
mov
jmp
imul
push
repnz
mov
and
loope
or
add
xor
cs
test
jle
push
dec
in
sbb
stc
fbstp
pop
jae
iret
mov
js
cmp
fisub
pusha
(bad)
cmp
xor
(bad)
bound
bnd
or
xor
repnz
mov
(bad)
mov
int
das
jne
mov
imul
nop
add
add
dec
cmps
xchg
xchg
out
mov
mov
imul
pop
pop
in
popf
addr16
push
pop
xchg
jo
xchg
xchg
das
sub
repnz
push
mov
ja
sub
lock
cmp
(bad)
mov
dec
loopne
out
div
mov
pop
add
xlat
repnz
mov
std
adc
add
jns
push
xchg
(bad)
xlat
push
adc
push
hlt
sbb
lock
cmp
lea
push
and
leave
test
xor
jl
dec
aam
test
lea
sbb
int3
xorps
mov
push
sar
push
ret
aaa
xchg
pop
xlat
adc
xchg
movs
(bad)
push
nop
dec
cmps
add
ins
mov
pop
lods
movs
add
jle
inc
jb
fistp
aam
movs
aas
scas
mov
ret
or
in
mov
fs
stc
cli
jmp
dec
ins
add
or
fwait
mov
mov
mov
sub
repnz
hlt
mov
push
jno
xchg
(bad)
outs
jno
cmp
cmp
jnp
sub
int
sub
pop
ja
xchg
out
sub
cmp
adc
int
in
data16
jns
jnp
adc
push
adc
retf
pop
cmps
sub
xchg
aam
jnp
and
test
mov
inc
or
stc
punpckldq
dec
mov
neg
in
sbb
std
jnp
jne
xor
sbb
xor
add
iret
fadd
mov
lahf
repnz
mov
xchg
mov
inc
add
pop
push
jecxz
out
pop
mov
mov
rcl
cmc
imul
push
jg
das
popa
push
pop
push
adc
jmp
fwait
outs
test
pushf
shr
ret
mov
popf
ficomp
pop
jne
or
push
add
add
bnd
jmp
dec
arpl
or
or
jmp
sub
leave
repz
mov
gs
(bad)
popf
test
jae
pop
jmp
dec
mov
or
test
mov
call
pop
xchg
sbb
dec
push
push
ficom
xor
les
cmp
mov
pop
push
sbb
pop
cmp
or
cwde
add
sbb
jbe
das
push
div
mov
popf
add
lds
ret
jp
sub
sbb
imul
jmp
rol
inc
aaa
pop
cmp
sbb
ss
sub
inc
mov
(bad)
push
jno
push
cli
sti
sbb
cld
mov
push
cmps
cwde
les
mov
adc
call
mov
cmp
hlt
and
mov
mov
sar
fs
fs
sub
xchg
jmp
lock
test
jmp
gs
cmp
pop
mov
cmp
out
ret
into
lea
pop
lock
pop
mov
fnstsw
xor
cmp
movs
push
xchg
movs
xchg
mov
addr16
jb
ror
int3
pop
cmp
aas
inc
fadd
jle
and
sbb
loopne
cmp
icebp
mov
into
cmp
push
mov
lock
mov
inc
cwde
jmp
pop
pop
pop
call
scas
(bad)
or
sti
fistp
movaps
jae
outs
hlt
sub
add
das
mov
stc
or
arpl
xlat
sti
inc
aad
push
pop
inc
stc
cmp
lods
stos
push
cmp
dec
fistp
pop
outs
cmp
outs
ret
fsub
in
jb
or
sbb
pop
int3
test
sub
(bad)
sahf
pushf
cmp
cmp
(bad)
sbb
das
pushf
popa
or
fstp
clc
imul
fcomp
mov
movs
fadd
test
or
sub
adc
or
inc
popa
out
sub
loopne
push
cli
push
push
or
in
imul
push
jb
leave
push
cmc
push
adc
addr16
les
sbb
iret
fistp
inc
fs
daa
sbb
and
sahf
stc
fistp
pop
pop
push
loop
push
call
mov
pop
ret
dec
repnz
xchg
sahf
mov
or
mov
add
(bad)
and
cmp
pop
sahf
mov
fwait
inc
jbe
ret
sbb
cmp
aaa
imul
test
iret
mov
jp
cmps
jae
or
popa
jmp
call
icebp
lods
stos
adc
fisttp
xchg
nop
inc
mov
push
sub
imul
jnp
daa
add
out
xchg
pop
cmc
sub
jl
aam
mov
xchg
loope
stc
mov
xchg
int3
movs
lahf
inc
fwait
xor
dec
sbb
popa
mov
or
sbb
loope
ins
call
into
sbb
xchg
arpl
push
xchg
mov
mov
add
ins
test
jne
jge
call
jne
adc
or
mov
(bad)
popf
mov
sub
maskmovq
jl
leave
sub
add
shr
push
das
fadd
push
xor
push
dec
push
call
out
leave
xchg
adc
movs
loopne
fcmovu
inc
xor
dec
stos
aaa
sar
add
sti
rol
and
jnp
mov
xchg
in
(bad)
(bad)
lock
jge
or
fist
push
jbe
jnp
pop
loopne
xor
adc
gs
retf
add
repnz
mov
mov
and
jo
fdiv
mov
ror
aaa
pop
and
(bad)
xor
push
rol
push
lock
dec
mov
sub
mov
pop
repz
out
inc
push
mov
or
in
dec
and
cli
fsub
xchg
adc
cmp
ret
cwde
inc
bound
in
loopne
xor
sbb
pop
mov
cmp
mov
cmc
mov
jns
xchg
retf
ret
retf
pushfw
or
ror
xor
mov
push
data16
in
leave
push
mov
ret
sahf
push
cmp
lea
mov
mov
jne
lock
pop
inc
aaa
lds
sbb
xchg
cld
dec
add
in
jle
dec
mov
arpl
add
mov
inc
mov
out
push
sahf
mov
outs
fs
(bad)
xor
(bad)
fisttp
mov
cli
xchg
aad
cmps
mov
iret
add
pop
addr16
jae
leave
mov
and
mov
add
mov
inc
leave
test
ins
imul
mov
mov
rol
loopne
mov
inc
mov
pushf
fisttp
cdq
dec
mov
xchg
in
mov
rcr
add
fsub
sub
jno
adc
test
sub
test
in
push
sub
xor
leave
mov
xabort
mov
std
sbb
lahf
punpcklwd
jo
daa
cmp
xor
xor
(bad)
jecxz
mov
dec
mov
test
in
push
and
add
stos
outs
xchg
pop
xor
test
fild
es
jmp
push
sbb
ins
sbb
loopne
pop
(bad)
sub
clc
aam
cmps
and
(bad)
test
cwde
or
arpl
rcr
inc
enter
mov
cmp
pop
jo
rcr
xchg
jge
adc
mov
xor
shl
nop
(bad)
mov
xchg
int3
sbb
in
arpl
in
push
xor
mov
ds
scas
push
and
cmp
sub
cmp
xchg
test
pop
dec
mov
imul
cmp
(bad)
es
mov
xchg
and
out
iret
or
or
and
leave
jb
add
cmp
cwde
ds
mov
push
jg
(bad)
pop
ins
add
sbb
mov
fcom
pop
pushf
push
jns
(bad)
jg
aam
push
push
aaa
pop
push
(bad)
fwait
sahf
jb
sub
sbb
clc
add
or
mov
inc
or
xchg
jb
xchg
mov
arpl
xorps
jae
hlt
sub
jb
in
in
int3
rcl
push
dec
sbb
xchg
xor
sbb
sub
hlt
ss
or
inc
xchg
mov
hlt
out
test
mov
je
aam
cmps
jo
sbb
popf
pop
jecxz
call
cmp
mov
jne
out
call
xor
or
fnstcw
call
or
jno
fisubr
(bad)
dec
daa
(bad)
cli
mov
cmps
pop
retf
mov
js
mov
imul
test
cwde
jne
push
xchg
jne
xchg
mov
or
std
add
movs
jnp
adc
mov
jge
jae
ret
adc
in
bound
mov
jecxz
std
xchg
xchg
cdq
xor
mov
aam
jno
popa
mov
jmp
cmp
jle
adc
iret
cmp
adc
jae
les
loope
sub
push
pop
adc
fnstcw
xchg
dec
jecxz
and
inc
dec
cmp
(bad)
jns
retf
mov
mov
sbb
es
test
mov
adc
fdiv
call
push
cmp
or
inc
in
xor
enter
retf
(bad)
out
xlat
aam
clc
adc
pop
fprem1
jmp
ds
es
mov
inc
loop
fwait
inc
jecxz
lods
aas
and
dec
mov
(bad)
mov
fiadd
movntq
lds
mov
call
clc
dec
aad
cs
dec
cwde
inc
fimul
adc
scas
push
xchg
iret
mov
add
jmp
sbb
popa
repz
push
jnp
add
jo
hlt
cli
push
adc
inc
popa
sub
sbb
push
aaa
mov
mov
loopne
jmp
(bad)
pop
sub
arpl
adc
add
ret
mov
dec
hlt
jge
xor
adc
or
imul
pop
xchg
retf
mov
jge
call
xchg
add
in
(bad)
jns
jae
dec
hlt
lods
repnz
imul
add
cmp
inc
add
sub
cmp
out
and
xchg
sbb
sbb
mov
or
addr16
scas
cdq
xor
push
mov
push
fiadd
dec
inc
pushf
sahf
jne
mov
jb
xor
movs
dec
ret
shl
and
rcl
sub
rcl
ja
cwde
in
xchg
(bad)
pushf
mov
cdq
or
dec
mov
aaa
mov
int3
fadd
das
add
ja
popa
inc
fbstp
popf
xchg
jle
leave
shr
shl
jno
cmp
and
pusha
adc
push
js
or
je
or
outs
mov
cs
cmp
cmp
xrelease
dec
ins
in
sbb
loop
push
mov
je
(bad)
fdiv
inc
and
sbb
cmps
cmps
push
dec
jnp
and
inc
call
inc
call
gs
push
fcomp
ror
in
jecxz
push
push
dec
mov
jecxz
popf
into
mov
push
inc
sbb
loope
dec
and
mov
test
add
cwde
lahf
inc
push
outs
xor
js
sub
les
mov
mov
push
mov
nop
pop
sub
xor
xchg
inc
xor
cmp
jp
xor
push
test
rol
add
test
pop
mov
mov
push
xor
nop
pop
lea
jne
mov
jnp
fisub
gs
js
shl
cmps
and
pop
out
fld
inc
(bad)
xchg
aas
popa
fistp
push
jmp
dec
aas
in
xchg
int
jmp
mov
mov
js
dec
mov
movs
inc
data16
loopne
pop
sub
pop
xchg
sbb
jge
test
sbb
es
(bad)
dec
jno
or
pusha
jg
dec
cmp
out
imul
cmp
lock
in
xchg
dec
out
or
and
or
add
and
mov
jecxz
cmps
mov
out
mov
mov
popf
jno
pop
mov
fild
dec
sbb
pop
stc
fldcw
movs
dec
mov
not
cmps
bound
push
call
xor
cmp
in
inc
sbb
retf
loope
stc
imul
and
ds
pop
loop
movs
add
movs
adc
jg
es
nop
mov
dec
mov
stos
cli
mov
and
lahf
outs
sub
call
stos
mov
retf
add
push
cmp
inc
jmp
sti
jne
mov
adc
dec
jmp
nop
loop
cmp
addr16
loopne
cmp
ret
xchg
mov
adc
mov
jbe
test
and
out
adc
(bad)
icebp
stc
mov
xchg
push
imul
xor
jae
movs
pop
cmp
cmp
gs
jle
sar
cmp
jbe
mov
sub
mov
push
mov
psrad
cmp
or
fs
aas
push
add
ret
loop
sub
jmp
xor
mul
(bad)
mov
sub
clc
fnstenv
mov
sbb
daa
(bad)
xchg
shr
clc
cmp
jmp
adc
pop
mov
push
and
pop
cli
mov
(bad)
cmps
jg
jmp
or
push
(bad)
adc
pop
int3
movs
cli
fsubr
ret
dec
or
ss
addr16
pop
sbb
jo
push
(bad)
out
push
fisubr
(bad)
into
cmps
sbb
push
and
mov
popf
outs
popf
retf
push
(bad)
sbb
sub
inc
sti
dec
and
mov
dec
adc
cmp
jne
mov
xchg
shl
enter
std
call
retf
nop
call
add
mov
hlt
mov
cmc
xor
xchg
xor
cwde
mov
and
cld
js
loope
cmp
(bad)
pop
mov
arpl
pop
sbb
adc
and
xor
dec
jne
inc
inc
fs
rcl
inc
xlat
int
push
and
mov
(bad)
aad
mov
inc
into
mov
sub
imul
adc
or
push
gs
addr16
push
push
xchg
cmp
sbb
jne
aad
pushf
inc
cmp
or
les
aad
(bad)
lods
sub
xchg
mov
adc
mov
xchg
or
inc
stos
int3
int3
inc
jecxz
cmp
sahf
push
dec
push
rcl
cdq
push
test
add
loope
mov
sbb
ins
mov
ret
cs
push
sub
imul
sbb
out
pushf
sbb
test
sub
fnstsw
sub
xchg
scas
dec
xchg
jle
enter
pop
lock
ja
mov
out
stos
ds
in
scas
xor
mov
cmp
sar
lock
cwde
nop
cli
retf
or
add
je
retf
jno
cs
ror
jo
or
hlt
nop
(bad)
aam
es
xlat
jmp
pop
mov
adc
mov
in
mov
xchg
cmp
and
jne
sbb
sbb
xor
add
dec
jmp
pop
pop
cmp
in
fs
cwde
inc
cmp
inc
dec
call
add
mul
mov
mov
icebp
xor
push
js
imul
jns
daa
pop
test
mov
adc
out
cmps
pop
das
(bad)
mov
test
push
push
adc
into
lahf
jb
sub
retf
mov
mov
mov
inc
dec
daa
mov
(bad)
inc
mov
lahf
ror
adc
dec
jne
inc
loope
loopne
push
inc
pop
xchg
scas
cmps
xor
jl
fs
imul
inc
ja
mov
pop
dec
int
and
enter
push
push
xor
jae
sar
call
mov
or
cmp
or
jae
push
xor
jns
and
movs
push
(bad)
clc
aaa
and
scas
sub
xor
sbb
ins
sbb
or
dec
hlt
sub
inc
loopne
int
in
mov
imul
jmp
ja
mov
loop
inc
push
data16
inc
aad
pop
jmp
inc
mov
sbb
pop
std
out
jmp
pop
xchg
enter
fnstenv
mov
mov
push
inc
adc
shl
int3
les
and
addr16
call
jl
aam
push
sbb
in
inc
imul
mov
or
imul
push
sbb
add
inc
(bad)
jns
sub
leave
mov
dec
and
sub
sar
adc
imul
aam
loop
push
in
jns
fdivr
test
adc
hlt
rcl
stos
call
ja
repnz
and
fsub
arpl
sub
rcl
mov
dec
sub
or
dec
xchg
mov
pop
add
jmp
(bad)
cmps
cli
fdivr
ror
jg
and
dec
sbb
jbe
scas
and
pop
(bad)
sbb
inc
add
mov
mov
cmp
gs
push
int
mov
es
jp
add
mov
sub
adc
jmp
ins
xor
in
test
pushf
clc
loope
(bad)
loope
xlat
loopne
or
in
add
jo
sbb
(bad)
cwde
test
jmp
outs
mov
fnstsw
gs
xchg
icebp
ror
popf
adc
jns
fistp
pop
lods
lahf
ins
mov
iret
push
imul
push
(bad)
mov
and
iret
add
mov
jge
xchg
leave
loop
xor
sbb
jmp
das
mov
ja
xor
and
adc
js
cld
sbb
icebp
and
pop
mov
mov
xchg
std
fldl2t
inc
ret
iret
out
adc
cmp
popf
push
sar
mov
adc
repnz
enter
(bad)
in
test
inc
xchg
or
in
push
cmc
cmp
push
js
repnz
and
rcl
mov
mov
cli
add
cmp
sahf
xchg
aam
mov
dec
pop
inc
imul
or
rcr
aam
outs
lahf
(bad)
and
sti
push
lds
jb
xor
pop
mov
lods
scas
push
int
dec
inc
imul
mov
jno
test
xor
js
mov
cmovl
cmps
lahf
lea
and
fs
jnp
stos
pop
push
xchg
data16
loope
ret
pop
mov
add
jg
inc
fwait
rcr
ja
rcr
call
cmc
xchg
pusha
push
push
pop
je
xchg
fnsave
(bad)
mov
push
fadd
fst
call
ins
nop
pop
or
jae
std
sar
mov
jno
fisttp
(bad)
pop
dec
stos
mov
mov
and
or
dec
or
retf
add
out
inc
and
fcomp
pop
pop
push
(bad)
lods
nop
fs
mov
cmp
mov
cmp
jo
into
sub
xor
rcl
push
add
movq
add
mov
out
shr
aas
pop
cmp
sbb
mov
sbb
push
mov
in
push
add
push
pop
xchg
popa
sbb
repnz
push
mov
mov
sbb
xchg
cmps
push
stos
jno
cmp
or
xor
sub
adc
ret
push
gs
in
mov
jne
out
ja
pop
mov
lock
loope
sbb
sbb
std
xor
in
jno
inc
in
je
xchg
sub
jp
outs
and
mov
jmp
push
pop
push
test
in
sbb
and
in
loopne
(bad)
cld
cmps
fdivr
icebp
jnp
pop
jle
icebp
test
das
cli
dec
out
xor
fucom
adc
dec
sub
mov
sbb
and
sti
(bad)
arpl
mov
push
cmps
mov
hlt
sbb
or
loop
mov
xchg
ins
sti
mov
hlt
into
sbb
pop
add
fdivr
jnp
xchg
aas
jg
xchg
loop
int
arpl
mov
mov
xchg
cmp
not
sbb
std
cmps
inc
pushf
ss
mov
add
retf
(bad)
pop
push
jl
dec
push
sahf
aas
into
and
stos
add
xor
push
pop
pop
mov
mov
(bad)
out
ins
rcl
dec
rol
punpckldq
scas
cmps
push
gs
nop
xor
and
inc
sub
dec
into
xchg
fdiv
test
mov
and
lea
sti
rdmsr
jl
mov
and
mov
pop
dec
aad
into
idiv
dec
push
clc
xor
sub
data16
add
pop
mov
mov
sub
mov
push
xor
xor
jns
inc
push
sar
and
mov
dec
mov
test
cmp
add
jns
or
pop
int
pop
aad
inc
adc
push
fidiv
jmp
cmc
jbe
xor
jle
push
push
adc
(bad)
mov
mov
out
mov
sub
push
jg
mov
sahf
and
sub
cmp
cmps
in
int3
cmps
ins
lahf
mov
or
push
jl
or
retf
les
or
bound
outs
jmp
pushf
stc
or
jnp
mov
push
aad
fdivr
out
imul
xchg
adc
xchg
pop
jmp
lds
cld
(bad)
loopne
les
popf
sub
push
mov
push
and
inc
mov
cmp
stos
cli
gs
pop
(bad)
fist
pusha
dec
loopne
lods
cmp
push
dec
(bad)
pusha
ins
pop
push
ret
jge
push
inc
inc
or
push
xchg
pop
inc
repz
add
addr16
pop
sbb
sbb
sub
arpl
jl
xchg
loop
mov
add
in
xchg
icebp
ret
adc
data16
sahf
adc
xor
adc
mov
out
es
int3
xor
sub
pop
imul
adc
dec
aad
add
sbb
sub
xor
mov
sbb
das
test
sar
scas
cmc
add
sar
mov
push
mov
(bad)
test
mov
in
cmp
sub
out
or
xor
mov
scas
sbb
out
adc
and
scas
mov
cdq
push
fs
sti
pusha
push
dec
push
aas
adc
mov
fs
jge
ss
and
enter
je
inc
je
push
mov
aad
(bad)
mov
stos
les
ficomp
aam
addr16
jbe
fs
push
pop
fisubr
add
xlat
push
mov
nop
push
in
adc
sub
cmp
ins
adc
mov
mov
and
sahf
add
mov
out
cmc
sub
mov
xchg
push
loopne
push
lods
(bad)
cmp
mov
stos
cmps
int
adc
(bad)
sub
and
push
jp
fs
lods
sbb
clc
ds
dec
test
jne
pusha
dec
jg
add
ins
or
and
lods
data16
rep
inc
stc
call
rcl
call
repnz
dec
outs
pop
cdq
push
sbb
in
daa
dec
ins
dec
and
xchg
dec
add
ds
in
adc
adc
jl
xchg
xchg
int
sbb
aad
cmps
inc
repz
and
jg
rcl
pop
sbb
in
jmp
add
sbb
mov
dec
leave
pop
call
pop
rol
mov
sub
pop
out
mov
lods
mov
push
cmp
cmp
mov
stos
sti
shl
inc
sub
jmp
jns
inc
loopne
mov
inc
imul
xor
push
dec
out
sub
push
out
arpl
lea
push
push
sub
pop
mov
aaa
ss
aas
pop
pop
in
(bad)
cld
stos
jb
or
jl
inc
(bad)
pop
in
dec
cs
pop
mov
xchg
lds
mov
push
and
or
ins
mov
std
xor
mov
hlt
push
mov
push
xchg
aaa
(bad)
je
sbb
jns
and
sbb
jo
xchg
lds
or
pop
push
and
pushf
ja
xor
nop
je
add
mov
cmp
inc
mov
sub
sbb
mov
dec
scas
cwde
xchg
test
comiss
jge
loope
push
jg
or
fisub
aas
fiadd
test
(bad)
retf
push
xor
lods
adc
jno
inc
lea
in
loop
cmps
push
pusha
cmp
stos
movs
sbb
ret
add
stos
dec
mov
imul
(bad)
cmp
mov
mov
adc
(bad)
jmp
fdivr
cmps
sti
mov
add
(bad)
shl
inc
pop
add
push
pop
mov
scas
mov
movs
push
jle
(bad)
adc
push
ins
loope
popf
push
jne
movs
mov
stos
jb
inc
or
ins
aas
movs
lods
mov
cmp
push
push
imul
or
sub
fcmove
ss
fidiv
and
xor
mov
mov
sbb
mov
mov
jne
mov
stos
mov
ret
mov
and
jp
test
enter
movs
ret
pop
je
out
push
retf
pop
ins
rcr
adc
pop
sub
lds
mov
dec
lds
daa
adc
cmp
(bad)
ins
push
aas
adc
arpl
push
dec
or
push
dec
inc
fsubr
xor
pop
dec
mov
mov
jg
ret
sub
push
int3
movs
nop
repz
xlat
hlt
xor
xlat
jae
outs
arpl
out
inc
lods
icebp
bound
lea
sbb
lods
inc
push
xlat
xchg
mov
inc
addr16
mov
cld
ja
xor
push
jnp
inc
sub
xchg
popa
js
loopne
cmp
and
sub
(bad)
push
push
sbb
cmps
(bad)
sub
and
cmp
pop
dec
cmp
je
cmp
out
sahf
add
call
cmp
mov
and
stc
test
mov
sbb
aaa
xchg
cs
dec
inc
jno
pop
nop
dec
stos
es
push
lahf
xor
fstp
add
retfw
fcos
jg
xchg
or
push
sahf
addr16
imul
fs
ret
cwde
push
sar
in
test
lds
mov
mov
stos
mov
add
sub
call
popa
mov
cmc
and
icebp
jp
pop
xor
test
icebp
jle
add
mov
cmp
je
push
xchg
mov
mov
das
mov
sub
test
or
sbb
nop
add
pop
sbb
mov
cdq
xor
scas
push
xor
or
mov
pop
jne
add
mov
call
jge
adc
cmps
sub
pop
sbb
jle
pop
mov
stos
mov
or
jb
mov
sub
call
xor
add
das
sbb
jae
jmp
push
test
movs
jb
sub
dec
cmp
(bad)
jno
stc
add
cmp
cmp
sub
cmp
fidiv
shl
out
cli
dec
iret
or
xchg
rcr
push
rcr
mov
fwait
popa
jmp
mov
(bad)
lea
push
mov
or
jmp
sbb
dec
shl
mov
mov
cdq
ret
movs
push
and
ja
jnp
mov
push
lea
cmps
add
outs
add
loope
rol
fs
cwde
test
dec
in
cdq
lock
mov
shr
xor
mov
sahf
in
jns
jecxz
or
xor
mov
inc
les
pop
or
fnstenv
push
ret
and
lods
adc
mov
add
jb
cmpxchg
gs
xchg
mov
mov
ins
hlt
pop
arpl
or
or
add
fcmovnb
add
push
and
add
or
call
dec
(bad)
out
pop
(bad)
retf
cmp
fbld
or
es
jnp
jle
xor
mov
lods
mov
ret
push
std
es
inc
mov
icebp
dec
ret
fcom
mov
pop
push
mov
into
rcr
push
ret
or
cld
add
jmp
mov
ror
push
jo
dec
and
dec
repnz
cmps
popa
jg
rcr
mov
inc
cwde
or
outs
push
or
repnz
jne
sahf
inc
clc
cld
jno
adc
jl
push
dec
sbb
ja
jecxz
int
and
das
jg
cwde
dec
mov
push
fiadd
xchg
ins
out
mov
lahf
ret
div
fnsave
add
sar
mov
jae
addr16
imul
daa
ins
xchg
sahf
es
push
or
push
xor
xor
stc
ja
lods
and
cmp
mov
iret
mov
mov
mov
daa
fcomi
pop
xchg
out
add
pop
sar
(bad)
jae
iret
clc
mov
xor
sti
scas
repnz
add
or
sub
scas
nop
ret
outs
jmp
sahf
push
mov
data16
ds
cmp
enter
call
test
jmp
mov
call
add
mov
pop
idiv
scas
xor
icebp
dec
push
sti
arpl
cwde
xlat
xchg
in
cmc
dec
inc
repnz
adc
call
les
cmp
jmp
or
or
(bad)
jle
aam
aaa
adc
shl
int3
adc
xchg
movs
dec
cld
mov
adc
fnstenv
lea
cmp
xor
jns
sbb
adc
mov
cmp
lods
pop
mov
call
ja
aad
sbb
aam
mov
pop
push
pop
sbb
(bad)
popf
fsubr
or
jns
stc
ret
sub
out
mov
pop
jb
retf
cwde
mov
xchg
cmps
push
dec
bound
xchg
mov
mov
mov
pop
je
dec
push
fimul
pop
and
xor
mov
pop
ins
pop
cld
test
mov
scas
std
imul
sbb
cdq
jnp
push
push
push
sub
pop
cmc
aam
pop
(bad)
xchg
jge
add
add
xor
push
dec
cmp
pop
sub
lds
aaa
sbb
cmp
jns
shl
int
pop
xchg
in
pop
(bad)
aad
inc
out
daa
dec
dec
test
push
aaa
fist
push
and
fstp
call
sub
cdq
and
rcl
fisubr
cdq
aam
fcmovb
push
aaa
pop
sbb
out
xchg
inc
in
je
scas
stc
test
enter
pop
in
cmp
lods
pop
out
in
mov
pop
icebp
or
(bad)
jb
jmp
(bad)
(bad)
cmps
xor
sti
jl
jnp
gs
pop
mov
cmc
cmps
sbb
mov
push
cli
fdiv
pop
fsub
call
dec
cmp
lock
repnz
inc
repz
mov
call
jge
lds
addr16
scas
(bad)
push
out
add
sar
dec
mov
mov
lods
loopne
jmp
jle
or
pop
popf
mov
imul
dec
or
(bad)
loop
ds
xchg
rcl
pusha
cld
dec
shr
push
sbb
(bad)
stos
outs
ret
sub
into
(bad)
lea
inc
lock
icebp
nop
jge
mov
repnz
sahf
pop
mov
dec
imul
dec
in
push
xor
shl
pusha
inc
cli
fcmove
jns
mov
xchg
and
sti
push
inc
add
dec
cwde
data16
jle
mov
mov
loopne
pop
(bad)
sub
(bad)
and
ret
jg
mov
mov
shr
inc
mov
nop
fldenv
and
shr
je
xchg
int
test
mov
icebp
and
sub
rcl
cmp
jge
and
jbe
clc
call
cs
ficom
fidivr
aas
jnp
mov
scas
loop
(bad)
inc
push
fstp
sub
and
leave
scas
lahf
inc
repz
retf
je
xor
je
mov
stos
sbb
mov
outs
fs
inc
cmp
mov
cmps
lahf
int
aam
loopne
jae
stc
jo
or
jmp
js
cwde
adc
cwde
popa
into
mov
jae
sti
pusha
cmp
jns
push
sub
adc
push
outs
xor
stos
fadd
and
ror
or
push
(bad)
and
dec
xchg
int
xlat
cli
in
add
lock
xor
and
mov
mov
adc
push
jp
cmp
sbb
and
xor
pop
dec
add
cmps
jecxz
add
cs
call
push
jnp
adc
add
clc
push
xor
loope
push
jbe
pop
int
std
add
aad
xchg
xor
or
hlt
cwde
pop
out
jle
adc
add
mov
test
and
sbb
out
iret
push
mov
ffreep
cmp
icebp
in
jno
xchg
lock
mov
jno
clc
test
jg
(bad)
popa
ficom
cmp
movs
dec
rcr
jmp
and
ins
sub
add
xchg
or
rcr
mov
loop
xchg
mov
and
cmp
mov
ror
cld
pusha
mov
(bad)
mov
test
xchg
mov
xor
mov
pop
lock
mov
les
add
inc
mov
test
nop
lds
cmp
push
sar
test
adc
ror
das
lods
ins
and
popa
pop
pop
daa
retf
mov
repz
and
sahf
aas
(bad)
and
out
xchg
dec
sbb
sbb
mov
aam
jbe
push
cmc
pop
jmp
cmps
dec
ror
das
jo
push
outs
nop
xchg
rol
int3
popa
mov
or
push
xchg
aas
pusha
rol
movs
adc
push
imul
ja
sbb
ins
outs
adc
cmp
push
pop
and
pop
xchg
mov
add
xor
jbe
in
ret
xchg
mov
les
repnz
adc
sub
pop
data16
(bad)
aaa
push
and
movs
push
ja
iret
fnstcw
cmp
or
sub
ss
out
or
cmps
fild
ror
mov
dec
cmp
add
cwde
dec
mov
jne
xor
clc
in
cld
mov
add
cmp
push
jns
and
lods
dec
mov
clc
pushf
lods
repz
push
aaa
xor
or
and
and
not
cmps
dec
inc
dec
ins
idiv
mov
mul
div
add
mov
mov
imul
imul
imul
pop
(bad)
or
sbb
enter
pusha
and
into
xchg
call
ins
jb
cmp
xchg
dec
sbb
jl
xchg
jne
xchg
xor
leave
test
ins
mov
ret
xor
icebp
repz
add
cwde
pop
jg
or
loop
popf
sbb
fld
cmp
inc
int3
std
sub
pand
add
in
inc
cmps
mov
pop
fdiv
mov
xchg
and
pushf
add
(bad)
(bad)
syscall
retf
adc
pop
(bad)
or
inc
pusha
ss
sub
and
mov
fwait
sbb
adc
scas
or
lods
sbb
or
pop
out
mov
inc
xchg
adc
popf
or
sub
add
cdq
sub
popa
call
(bad)
les
xor
stos
cld
enter
neg
add
push
mul
sbb
and
cmc
aaa
xor
dec
push
pushf
push
lock
and
out
fwait
adc
fwait
dec
push
adc
fwait
ins
xchg
(bad)
call
daa
cmps
das
movs
dec
rcr
enter
aam
out
ror
adc
push
ja
gs
and
push
pop
cmp
jnp
jmp
xor
or
jae
jns
or
push
scas
jmp
sti
in
push
cmp
mov
cmp
jb
imul
pop
jns
cwde
adc
push
in
retf
xchg
mov
and
or
add
pop
(bad)
sbb
cmp
(bad)
call
sub
push
or
cld
push
jo
jbe
push
mov
xchg
pop
xor
xor
dec
fsincos
popf
cmc
mov
jmp
inc
gs
loop
int
jo
pushf
mov
dec
xchg
scas
and
or
pushf
xchg
cmp
cmp
outs
sub
int3
mov
je
push
test
scas
adc
mov
ja
mov
ja
xchg
pop
adc
mov
cmps
stos
push
fs
push
fwait
xchg
ficom
or
cwde
lods
sbb
cwde
gs
neg
sbb
inc
aas
imul
and
jecxz
jmp
call
ins
sar
xor
dec
lea
xchg
out
jns
stc
xor
retf
push
cmp
add
gs
test
das
sbb
clc
xor
pop
fs
jle
jecxz
mov
dec
and
xlat
js
inc
mov
dec
das
mov
sahf
rol
stc
lea
ret
scas
inc
shl
daa
mov
push
lea
xor
dec
mov
add
xchg
inc
push
jno
mov
pop
dec
add
or
pop
jo
shr
je
add
mov
xor
rol
pop
fdivr
stos
imul
pop
dec
ret
mov
pop
shl
mov
xor
mov
xchg
mov
jmp
inc
or
xor
push
add
sti
ja
push
iret
adc
mov
pop
sahf
and
fidivr
shl
ret
fstp
mov
adc
sub
adc
call
adc
aad
mov
in
je
pop
push
add
rol
ficomp
mov
iret
fnstenv
retf
movs
mov
je
dec
out
push
lock
(bad)
pop
adc
sub
xchg
adc
push
or
adc
push
icebp
jo
ja
add
iret
fisub
sti
xchg
aad
fwait
aad
push
mov
pusha
xchg
ins
ds
bswap
mov
es
jg
fsubr
pop
retf
pop
mov
ret
pop
ret
bound
into
or
cmp
cdq
nop
pop
mov
add
fild
mov
ins
pop
fimul
pop
(bad)
movs
pop
add
jmp
je
inc
in
loopne
dec
retf
nop
sub
loopne
(bad)
in
mov
sbb
cdq
or
mov
mov
pop
and
add
and
icebp
sub
sahf
xchg
ja
adc
ss
xchg
xchg
pop
in
sbb
jmp
gs
test
and
ror
aas
sub
scas
lods
inc
xchg
xchg
pop
push
int3
aaa
addr16
push
das
mov
sub
pop
in
sub
test
or
pop
bound
mov
mov
cmp
aaa
jecxz
xchg
pop
dec
inc
cmps
push
jecxz
(bad)
(bad)
jge
retf
mov
mov
sbb
sub
cmp
fdivr
pop
outs
cmp
mov
pop
mov
push
(bad)
lods
imul
jo
mov
test
or
cmp
inc
loope
mov
stos
jecxz
jmp
ror
repz
mov
adc
dec
dec
mov
push
stos
mov
daa
sbb
outs
hlt
(bad)
ins
clc
cmps
add
test
and
fstp
cmp
adc
xchg
mov
mov
outs
sahf
out
pusha
bswap
mov
pop
mov
push
call
pop
push
push
inc
mov
adc
mov
push
pop
and
xor
sub
shl
stc
fist
sbb
or
add
in
scas
sub
mov
je
enter
push
mov
pop
aas
xchg
mov
addr16
jmp
xor
xchg
lahf
lock
jecxz
sub
dec
inc
sbb
jns
adc
(bad)
pop
bound
js
mov
or
call
xor
push
stos
stos
inc
enter
enter
add
fs
jmp
cmc
not
popf
jmp
mov
mov
mov
push
icebp
mov
pop
mov
test
fst
mov
mov
inc
js
mov
xor
sub
stos
xchg
(bad)
shl
div
addr16
cmp
xor
repnz
and
jnp
xchg
inc
jecxz
in
lock
jp
out
pop
sbb
int3
aam
scas
push
scas
icebp
cmc
jae
lods
push
(bad)
mov
imul
sbb
pop
add
inc
(bad)
and
loope
sbb
pop
lods
loop
aad
std
icebp
inc
out
pop
test
jg
fsub
mov
jp
cmc
lock
or
mov
arpl
add
cwde
mov
mov
dec
iret
push
or
mov
push
mov
mov
sub
(bad)
push
pushf
mov
cwde
out
mov
gs
mov
arpl
dec
(bad)
cwde
add
add
add
pusha
mov
sbb
stc
pop
mov
test
iret
out
cmp
jp
mov
out
pop
lahf
sbb
fdiv
movs
push
mov
xchg
stc
ret
scas
aas
jmp
out
cmp
idiv
sbb
adc
dec
push
add
stos
sar
and
fldcw
inc
lea
frstor
mov
sub
xor
xor
inc
sub
add
cmps
(bad)
add
dec
inc
nop
cmp
mov
sbb
inc
popa
add
mov
sbb
or
mov
int
cdq
aaa
or
mov
(bad)
sbb
add
or
les
cmp
fimul
mov
scas
xor
loop
adc
dec
or
(bad)
loop
mov
xchg
xchg
adc
jne
mov
jb
or
stos
cdq
(bad)
iret
sbb
push
out
push
jnp
push
repnz
test
cmp
push
imul
sbb
ret
bound
les
mov
jmp
test
pop
sbb
jae
std
xchg
not
scas
das
inc
jnp
xchg
ins
test
dec
lock
jecxz
loop
out
leave
mov
mov
jne
mov
or
jge
cdq
je
stc
pop
fcmovnu
call
sub
sub
jnp
enter
clc
call
sbb
cmps
cmp
cmp
mov
push
dec
lods
lods
mov
mov
cmp
jmp
add
mov
xchg
sti
mov
and
fstp
arpl
(bad)
mov
sub
mov
and
xchg
push
inc
xor
je
xchg
mov
inc
aam
in
js
dec
and
push
adc
xlat
mov
mov
les
das
test
and
pop
leave
sbb
fbld
repnz
cmova
sbb
cmp
cs
mov
mov
mov
pop
mov
dec
jbe
push
test
adc
dec
add
jp
jle
cmc
mov
(bad)
sub
ficom
das
xor
popf
jmp
cmp
nop
mov
stos
ins
fistp
sub
scas
(bad)
hlt
and
sub
sub
jge
aas
inc
push
in
pop
shl
jle
mov
mov
(bad)
pop
sub
sub
imul
cdq
out
dec
mov
push
sbb
aas
inc
adc
fwait
test
call
data16
test
fnsave
sub
jnp
jmp
mov
mov
mov
jb
xchg
nop
mov
mov
call
in
lods
mov
and
ret
dec
jle
push
or
jl
int
jmp
mov
sbb
retf
idiv
call
jmp
aaa
or
adc
test
ror
sub
(bad)
xor
adc
push
ss
ss
mov
sbb
fild
pop
mov
fisttp
popf
fs
push
hlt
push
cmp
dec
scas
sar
lahf
ins
push
xchg
mov
enter
xor
mov
mov
dec
adc
or
pop
mov
retf
pop
inc
push
inc
adc
mov
fld
mov
jno
dec
leave
adc
cwde
ins
scas
mov
dec
lods
leave
mov
pop
mov
cli
aam
mov
inc
out
sub
aad
repz
cmps
mov
mov
movs
jmp
dec
mov
xlat
retf
fdiv
sub
push
push
dec
add
fild
jns
xchg
mov
dec
push
fcmovnb
inc
in
xchg
fcomp
test
mov
pop
aas
out
scas
push
push
ret
pop
lahf
sbb
out
push
scas
mov
inc
loop
lahf
mul
ja
pop
inc
(bad)
popf
mov
aad
cmps
ja
jns
repz
pop
mov
test
imul
and
lahf
sub
aam
ret
pusha
jae
mov
mov
fimul
add
cmc
xlat
add
mov
movs
sbb
pop
int3
inc
cmp
fsubrp
sbb
sbb
cmp
sub
stc
std
ret
or
inc
jge
push
xor
ds
cwde
xchg
cli
xor
sub
cmp
adc
xchg
or
fsub
and
mov
jns
pushf
adc
jmp
inc
push
std
mov
adc
jmp
pop
lods
sub
cmp
and
cld
push
inc
cmc
mov
mov
mov
out
sub
cmps
xor
stos
iret
cdq
aaa
fimul
or
and
push
fistp
and
dec
add
mov
fisub
mov
xchg
add
fnstenv
(bad)
cwde
push
push
push
or
hlt
mov
jg
add
push
xlat
outs
mov
cwde
mov
rol
movs
mov
scas
cmc
popa
cmp
sub
retf
sbb
mov
lock
mov
test
push
push
into
dec
sahf
inc
push
mov
push
pop
cmp
lods
in
xchg
ror
jo
push
sbb
adc
xor
into
(bad)
push
or
cbw
xor
ret
dec
fs
sbb
jo
sbb
outs
or
lods
shl
add
(bad)
xor
pop
mov
sub
or
movs
cmp
aad
xchg
dec
in
imul
sar
jge
sbb
xchg
xchg
cmp
mov
push
cli
xchg
and
out
add
mov
imul
mov
ja
aad
xchg
punpckhdq
or
int
jg
mov
jmp
repz
fisttp
jle
xor
outs
fstp
inc
push
mov
pushf
sbb
std
mov
inc
ror
and
pop
add
or
fisubr
cld
movs
cwde
ret
mov
jno
mov
shl
int
sub
push
cmps
xor
xchg
ret
hlt
outs
outs
(bad)
mov
and
mov
or
mov
mov
loop
xchg
shl
jle
inc
cmps
daa
in
mov
sub
ds
in
or
je
xor
adc
pop
dec
mov
pop
(bad)
jl
int3
xchg
mov
cmp
cdq
xor
loope
inc
inc
push
and
push
rol
aad
ins
bound
cmps
loop
pop
push
xor
push
add
fiadd
pop
call
ss
scas
jle
cmps
and
shl
cli
adc
jae
ins
sub
stos
(bad)
aaa
push
loope
fs
xchg
push
jl
mov
mov
mov
fst
and
sub
in
dec
mov
mov
pop
add
test
sub
neg
fs
imul
jp
or
mov
or
test
mov
sar
cwde
push
or
mov
adc
and
push
push
int
fild
pop
xchg
movs
pop
push
sub
push
imul
nop
or
int
rol
fld
cmps
fnstcw
dec
sar
enter
mov
cwde
inc
mov
push
xchg
test
mov
loope
jo
test
inc
int3
addr16
loope
bound
popa
mov
mov
in
aaa
or
(bad)
xchg
ret
rcl
sbb
int3
add
sub
and
lods
jno
cmovs
je
lods
lods
push
es
scas
sbb
xchg
mov
mov
aas
rol
add
js
mov
imul
fidivr
jecxz
rcl
in
and
pop
pusha
and
fstp
dec
push
xor
pop
adc
push
add
dec
aad
pop
ficomp
jno
push
lahf
xchg
push
dec
and
ret
xchg
fwait
out
cwde
mov
mov
push
in
push
mov
(bad)
imul
jb
pop
xchg
xchg
add
mov
add
ret
mov
mov
retf
pop
push
jns
retf
inc
mov
fbstp
repnz
lea
and
imul
movs
jne
adc
test
push
xchg
or
jno
add
sbb
pop
out
xchg
shl
daa
push
loope
dec
stc
pop
outs
in
mov
pop
(bad)
pop
mov
aaa
popa
push
icebp
adc
jmp
jl
inc
mov
xchg
push
jb
daa
data16
sub
mov
rcr
add
test
mov
aaa
mov
cmp
sti
inc
jns
(bad)
retf
in
(bad)
push
sub
pop
inc
mov
das
dec
jne
mov
inc
std
out
inc
(bad)
and
mov
lods
pop
cmp
jno
add
jae
inc
aas
pop
jle
xlat
add
push
push
mov
ficom
in
rcl
loop
test
and
repnz
lahf
js
aam
out
push
xchg
inc
pop
js
xchg
inc
cmc
ins
fist
popa
fisttp
dec
aas
dec
xor
cmps
pop
push
push
jg
leave
fidivr
pop
jle
lahf
mov
outs
push
sbb
std
dec
sti
jmp
fisttp
gs
rcl
xor
leave
rcl
sub
jmp
sub
or
in
push
or
xchg
mov
inc
pop
push
daa
cmp
add
sbb
add
lods
mov
std
sbb
and
xchg
retf
addr16
and
mov
not
iret
push
bound
loopne
push
cwde
movs
hlt
cmp
(bad)
(bad)
je
(bad)
mov
push
dec
fiadd
jno
rol
ds
out
loopne
stos
es
(bad)
into
(bad)
packsswb
xchg
mov
lds
retf
fs
hlt
pop
retf
in
int3
add
fwait
iret
in
outs
and
not
adc
es
push
test
fdivr
ja
shr
push
ror
cmp
cmp
into
and
cmps
push
mov
mov
mov
mov
push
adc
inc
add
cli
adc
out
adc
pop
mov
ret
adc
adc
pop
sbb
sbb
rcl
pop
sbb
mov
sub
in
cwde
out
sbb
sbb
xchg
pop
xor
test
shl
sub
adc
fcom
cs
dec
inc
and
adc
jns
mov
mov
test
pop
fbstp
xor
push
xor
aas
cmc
out
out
loop
(bad)
shr
rcr
xchg
mov
mov
ds
pop
push
or
scas
pop
aam
xchg
scas
loope
sbb
data16
push
inc
mov
or
loope
adc
jns
loop
out
dec
jno
push
lods
push
jecxz
jmp
cmp
outs
push
cmps
addr16
sub
jl
mov
les
ror
imul
pop
gs
sbb
xor
pop
test
mov
adc
lds
popf
int
mov
mov
retf
cmp
data16
xchg
mov
mov
lock
inc
or
dec
dec
xchg
retf
pop
in
popa
push
xor
add
push
mov
addr16
leave
jle
jmp
xchg
(bad)
pop
mov
aaa
test
mov
lea
xor
cmp
inc
(bad)
popa
sbb
fld
adc
ret
add
dec
cmp
(bad)
sahf
cli
xor
arpl
int3
jae
push
push
ins
add
aad
add
int3
xchg
std
ffree
lods
mov
pop
fsubr
imul
mov
mov
imul
pop
mov
or
stc
stos
cld
dec
jge
push
pop
dec
mov
repz
popa
mov
daa
sbb
mov
inc
cmp
mov
xchg
gs
push
mov
out
repz
js
xor
add
pop
jmp
xchg
lea
call
(bad)
sbb
fisubr
add
xor
int3
cmp
inc
sbb
in
mov
jmp
jl
adc
add
dec
ror
cmp
xor
mov
int
push
xor
adc
xchg
pop
inc
inc
mov
add
sahf
test
out
mov
stos
imul
mov
mov
jmp
xchg
std
adc
fmul
push
leave
inc
fsubr
shr
rcl
loope
or
pop
mov
inc
jmp
movs
fs
fsub
into
jp
fsubr
adc
mov
pop
aad
iret
pop
jmp
adc
mov
sbb
sub
out
mov
jb
mov
repz
sbb
pop
mov
fwait
mov
mov
pop
loop
jae
sub
pop
das
stos
gs
out
mov
addr16
in
out
movs
mov
ret
stc
xchg
mov
scas
dec
shl
cmp
sub
and
test
test
push
iret
jne
cld
jmp
inc
inc
int
out
test
cmc
sar
sbb
xchg
sbb
mov
xor
push
sahf
cmp
xor
cmp
stos
add
pusha
mov
xchg
xchg
jl
jae
push
and
or
pusha
xchg
shr
into
mov
sti
mov
pop
aam
fld
ins
adc
je
dec
sar
(bad)
sub
dec
add
test
repz
add
bound
push
loope
out
ret
loopne
cmp
sub
ret
sbb
mov
in
jbe
jno
jne
jp
stos
pop
fcomp
iret
je
dec
div
mov
(bad)
je
mov
cdq
push
add
inc
sahf
add
cs
(bad)
lock
retf
cmp
mov
mul
js
mov
mov
sub
push
(bad)
push
mov
rol
and
inc
cmp
popa
mov
dec
sahf
add
sbb
inc
push
jne
inc
pop
mov
jl
mov
and
sub
add
sbb
cmps
and
and
stos
rol
ins
int
sbb
(bad)
mov
mov
arpl
sub
cs
mov
xor
sub
dec
jge
pop
sar
mul
jnp
hlt
cld
or
push
and
inc
xor
jge
jb
pop
fist
inc
movd
inc
xor
aaa
jle
cli
in
sbb
xchg
out
mov
cmp
inc
push
retf
je
sub
addr16
stc
fdivrp
iret
test
and
push
sbb
cmp
or
adc
ds
bts
mov
cmps
inc
adc
jp
xor
shr
imul
pop
pop
ins
scas
sbb
in
ja
cmps
je
add
and
mov
inc
sbb
repz
jecxz
loop
push
xchg
cmp
xor
cmps
movs
or
inc
enter
in
or
jae
scas
leave
out
push
xchg
push
xchg
je
fdivr
scas
mov
dec
arpl
mov
jl
pop
sbb
cmps
mov
lods
or
jl
std
sbb
retf
and
pop
fld
mov
pop
sub
cmp
push
dec
nop
add
pop
adc
adc
out
ret
repz
psraw
jne
dec
mov
mov
out
sub
aam
dec
pop
aaa
jae
fnstcw
or
push
inc
dec
lods
pop
outs
(bad)
pop
mov
pop
add
sub
aaa
add
or
push
cmp
pop
dec
xchg
cdq
jbe
in
push
jae
sbb
cld
call
cmp
xchg
cs
fnstcw
rcr
inc
and
xor
push
std
pop
js
cmp
outs
add
add
add
in
pop
adc
jns
movs
sub
jmp
xor
iret
mov
(bad)
loop
dec
xlat
cmp
sahf
adc
test
lahf
jge
repnz
pop
sti
cmps
(bad)
add
or
jno
(bad)
mov
lds
cwde
cmp
lock
push
and
je
lock
loope
pushf
jg
movs
retf
and
cld
lea
iret
jmp
ret
cld
pusha
hlt
daa
fcmovu
mov
xchg
adc
xchg
push
pushf
or
ss
mov
sar
in
jo
movs
sub
fdivr
faddp
cmp
test
std
psllw
rcl
lea
push
sbb
daa
das
mov
call
or
je
test
jp
xchg
stos
ins
call
loopne
push
pop
jne
adc
inc
fistp
sahf
inc
dec
jge
dec
aas
or
sub
xor
xor
xchg
cmp
adc
hlt
inc
xchg
leave
xor
push
idiv
mov
mov
stc
inc
retf
dec
adc
lds
ret
push
ret
adc
mov
mov
push
sub
pushf
ins
pop
pop
sahf
stos
in
les
inc
push
and
inc
add
add
xchg
test
jns
and
fwait
and
packssdw
pop
mov
add
pop
ins
xor
dec
sbb
bswap
div
sbb
jne
pop
ret
sbb
test
sbb
sbb
pop
sub
shr
cmp
fsub
cmp
and
fdivr
cmp
(bad)
jmp
mov
pop
dec
icebp
jns
inc
adc
int3
inc
cmp
xor
and
in
cmp
in
sub
fisttp
push
push
jae
cmp
ds
clc
xor
add
sub
loop
mov
test
nop
aaa
mov
jbe
(bad)
jmp
outs
ss
jmp
sub
loopne
mov
ins
xchg
test
push
aad
lods
ror
push
stos
push
mov
aam
retf
xchg
aaa
dec
ins
lds
sub
retf
mov
lahf
ss
and
pusha
push
xor
or
aaa
dec
shl
jl
inc
adc
test
popf
dec
or
cwde
div
dec
jmp
daa
and
or
in
int
push
(bad)
(bad)
out
cmp
or
into
fimul
mov
je
mov
movs
div
or
inc
loope
push
js
mov
sub
sahf
adc
lock
outs
ja
int
add
shl
jbe
mov
stc
(bad)
scas
mov
(bad)
fmul
add
test
cdq
or
jge
xchg
ret
and
sub
adc
xor
xor
in
les
cdq
xchg
jns
pop
fcom
shl
popf
js
imul
and
xchg
xchg
mov
mov
xor
es
adc
dec
xor
call
enter
jge
ins
adc
jb
(bad)
add
cmp
xor
adc
pop
sbb
inc
imul
adc
push
sub
std
mov
pop
out
mov
jecxz
inc
(bad)
loope
test
icebp
push
test
xchg
fucomi
cdq
aas
and
mov
fwait
and
sti
or
loope
adc
cmps
out
adc
adc
xor
test
loope
and
push
jno
nop
popf
outs
sbb
cmp
les
adc
jg
add
or
mov
shl
pushf
pop
shl
scas
mov
lods
popa
arpl
jb
loopne
pusha
jecxz
je
lea
test
nop
jb
pop
jns
add
fadd
adc
aaa
sti
clc
outs
in
xor
stc
je
push
retf
xchg
sbb
sub
jno
jl
cmp
sub
sub
mov
pop
push
fbstp
mov
fnstcw
add
arpl
sbb
cdq
jmp
inc
out
(bad)
jmp
jl
push
scas
and
jne
inc
cmps
dec
jmp
mov
ret
add
jp
fwait
sub
jno
loopne
push
dec
sbb
call
cli
push
cld
mov
inc
mov
xor
stos
sbb
call
cwde
adc
inc
hlt
pusha
cdq
iret
adc
push
shl
dec
mov
test
cmps
test
xchg
aas
inc
das
adc
cmp
push
lock
test
div
and
sub
inc
lods
ins
ja
(bad)
test
lds
mov
fiadd
nop
xchg
dec
sub
mov
add
adc
test
sbb
and
pop
mov
and
or
adc
adc
rol
or
sahf
inc
cmp
imul
pop
sub
cmc
push
ror
cmc
loop
loop
leave
sbb
std
sub
and
jmp
mov
clc
clc
and
ja
lahf
pop
movs
dec
jge
mul
fild
test
clc
dec
xchg
aad
jne
rcr
aas
pop
adc
imul
jl
aam
fisttp
jo
cmp
inc
add
pop
jmp
sub
and
xor
adc
mov
sub
xor
sahf
push
push
jae
mov
or
fs
adc
dec
shr
sbb
(bad)
adc
mov
sbb
popf
jne
sbb
ins
cwde
pop
in
xchg
dec
xchg
sbb
xchg
sbb
mov
xchg
and
ins
push
repnz
jl
jp
fist
lds
sub
jmp
sar
clc
xor
shl
jl
test
mov
daa
fwait
push
inc
aas
btr
or
into
sub
mov
add
ins
push
inc
arpl
cmp
dec
ss
mov
ins
pop
lahf
xor
sub
shr
push
dec
jl
cmp
push
popa
pushf
es
scas
mov
cli
sub
inc
jmp
xchg
push
in
imul
jge
jl
dec
fwait
or
xor
dec
inc
or
ret
jg
sbb
adc
hlt
and
leave
mov
in
popf
pop
inc
lods
mov
and
add
sbb
pop
dec
mov
xchg
mov
mov
aas
mov
idiv
inc
xchg
and
mov
push
lds
mov
or
fst
sbb
xor
fmul
pop
ins
or
addr16
jl
push
jae
cwde
(bad)
mov
push
mov
mov
popa
outs
ins
push
mov
adc
xor
push
ror
pop
push
adc
jg
push
(bad)
jb
mov
lods
iret
sbb
push
cmp
rcl
xor
adc
mov
popa
or
cld
pushf
mov
jge
push
clc
ins
test
stos
dec
call
lods
pop
nop
sub
(bad)
xchg
adc
stos
mov
sbb
out
(bad)
je
daa
sub
rcr
bound
add
xlat
stc
ja
and
retf
fcom
push
test
sbb
ror
xor
or
xchg
or
push
xchg
leave
in
inc
dec
ds
gs
cwde
sbb
and
sbb
dec
test
lahf
xlat
mov
cmps
sub
mov
lea
and
sbb
shl
jbe
minps
stc
push
movs
ror
dec
inc
jnp
(bad)
lods
cmps
inc
xchg
js
add
and
jno
dec
loop
cwde
cmps
xor
repnz
push
ins
and
out
jle
bound
call
out
imul
into
jae
adc
sub
push
or
(bad)
out
rcr
push
out
mov
mov
sub
mov
add
add
imul
lea
movs
rcr
sub
dec
mov
movs
jns
xchg
mov
hlt
sub
out
ins
ja
popa
dec
dec
and
dec
push
mov
aaa
xor
stos
sub
lods
mov
loopne
(bad)
arpl
push
out
lahf
pop
and
out
xchg
add
daa
popf
adc
push
outs
cdq
mov
sub
and
dec
ror
add
pop
mov
adc
mov
cmp
cmc
cdq
out
xchg
xor
push
and
lods
xchg
cwde
push
inc
sub
pusha
sub
and
xchg
ret
inc
mov
loop
add
cmp
out
add
mov
lea
add
jmp
mov
inc
cld
sbb
aaa
mov
xor
push
dec
bts
xchg
pop
and
xor
push
xor
pop
stos
test
sub
push
mov
mov
shl
mov
push
mov
jo
mov
in
inc
or
les
mov
inc
popf
or
rcl
ins
fst
cs
pusha
pushf
adc
ds
scas
and
push
jmp
sbb
push
test
ffree
jle
push
paddq
jmp
repz
fidivr
aad
sbb
into
out
or
or
cdq
movs
or
cmp
fstp
dec
add
lds
mov
ja
call
sbb
lahf
xchg
leave
push
add
dec
test
hlt
or
aam
dec
xchg
dec
sbb
or
mov
cmp
inc
ret
rcl
mov
mov
jnp
mov
loope
pusha
xchg
adc
popf
popf
pop
sbb
sub
ss
cld
and
and
mov
(bad)
mov
lods
retf
mov
jnp
aas
push
fs
dec
xchg
mov
fstp
lea
xchg
cmp
mov
div
stos
xchg
pop
shl
ficom
arpl
outs
pusha
dec
mov
jnp
jno
push
ins
test
addr16
jge
je
push
mov
cmc
leave
sbb
mov
mov
scas
xchg
mov
jbe
mov
and
add
loop
inc
(bad)
jmp
xor
loop
movs
out
push
inc
mov
int
add
or
mov
test
dec
pop
cmc
cli
sub
and
popa
mov
push
xchg
dec
push
clc
pop
out
pop
cmp
xchg
pop
jb
mov
jg
stos
jae
mov
inc
mov
stos
rol
mov
xchg
neg
es
push
(bad)
mov
sbb
(bad)
fisttp
leave
xlat
push
mov
in
inc
mov
outs
jmp
leave
ror
sbb
inc
xchg
retf
idiv
mov
das
push
jecxz
shr
inc
xor
ins
in
es
lea
and
jbe
outs
push
int3
cmp
mov
mov
and
mov
push
aam
sbb
js
jmp
int
loop
(bad)
or
sub
mov
not
push
ins
fstp
mov
movs
push
pop
sti
or
retf
shl
pop
popf
in
push
or
fnstsw
nop
repnz
and
cli
clc
lahf
das
xchg
sbb
call
xor
nop
pop
jle
in
pop
int3
adc
dec
adc
sbb
test
movs
and
dec
lock
and
fnstenv
dec
aam
jne
fsub
xchg
add
loop
push
push
pop
scas
sub
dec
out
sub
mov
jp
push
scas
sbb
dec
sbb
inc
xor
cmp
mov
mov
push
fmul
mov
outs
inc
mov
movs
push
xchg
data16
test
push
les
inc
fisub
retf
push
push
or
cli
loop
call
mov
out
cmp
pop
fneni(8087
not
out
rcl
add
enter
leave
call
mov
icebp
push
les
in
mov
cmp
mov
dec
adc
add
movs
or
dec
inc
xor
outs
xor
mov
(bad)
pop
and
mov
sbb
or
cwde
mov
and
dec
mov
cmp
add
daa
mov
push
gs
xchg
xor
loop
sub
movs
jb
push
sbb
frstor
add
int3
mov
mov
add
mov
adc
sub
inc
retf
mov
fnclex
retf
sbb
jae
addr16
sbb
lock
jmp
call
mov
sub
mov
inc
push
pop
adc
dec
sbb
push
pop
pushf
in
idiv
inc
dec
inc
arpl
int3
inc
mov
push
mov
fldcw
sbb
in
ror
inc
adc
sub
jp
loopne
jo
out
call
inc
xor
nop
sub
push
pop
jo
lods
jp
pop
adc
hlt
push
popa
jb
or
add
xchg
hlt
mov
mov
imul
pop
inc
repz
mov
mov
and
jo
sbb
jmp
push
popf
mov
les
fdivr
mov
xchg
mov
xlat
scas
mov
sub
in
shl
dec
jnp
jnp
call
je
mov
inc
sub
lods
jmp
or
dec
jne
in
xor
jge
enter
xor
sub
push
cld
inc
xchg
push
test
cs
into
in
xor
in
jmp
sub
xchg
or
(bad)
lds
(bad)
daa
retf
ins
pop
mov
aas
(bad)
int
jne
rcl
jns
retf
icebp
mov
push
cmp
in
xchg
mov
icebp
cmc
repz
xlat
add
test
mov
repz
loop
mov
cli
mov
sbb
retf
clc
pop
jmp
or
or
push
js
movs
(bad)
ret
push
in
popa
aaa
test
xor
cli
xor
xchg
cmp
gs
xchg
enter
mov
es
les
sbb
or
ins
dec
ja
outs
cli
dec
or
sti
es
ror
test
mov
and
mov
imul
push
sbb
inc
shl
and
out
test
bound
gs
sbb
pmaddwd
jl
push
pop
popa
mov
mov
iret
adc
shl
or
xor
xchg
lods
mov
mov
stos
cmp
push
fld
inc
les
rol
dec
jo
mov
mov
add
(bad)
jae
or
jle
jmp
mov
imul
inc
arpl
inc
jo
das
test
mov
(bad)
stos
jno
stc
pop
mov
fcomp
xchg
add
fst
jecxz
popf
jnp
push
into
sbb
dec
ret
push
mov
retf
dec
pop
mov
fcom
arpl
les
inc
inc
movs
outs
lods
mov
lahf
or
adc
cmp
fucomp
jns
xchg
sbb
and
(bad)
int3
icebp
mov
neg
sub
or
or
pop
pop
in
jne
dec
jb
cdq
dec
aas
out
sub
popa
pop
lods
and
or
cmp
fsub
(bad)
idiv
(bad)
hlt
out
stc
outs
and
xchg
sbb
neg
mov
jle
cmp
fwait
push
cmp
sub
xchg
add
(bad)
pop
inc
(bad)
xchg
mov
and
loopne
sti
adc
mov
push
and
test
div
pusha
sub
in
adc
repz
lock
xor
je
aaa
xchg
mov
xlat
das
jns
shrd
jno
push
cdq
cwde
fst
lds
loop
and
sbb
sub
stc
xchg
loope
push
mov
fild
inc
or
or
cmp
xor
sub
sar
dec
out
mov
mov
jg
fwait
sub
in
xor
adc
cmp
loopne
add
sar
lock
sub
fldcw
repnz
sub
lods
pop
mov
jns
mov
ss
sbb
sub
jg
jmp
sbb
pop
bound
mov
mov
ficom
test
in
mov
mov
cmp
imul
push
and
jg
(bad)
ret
push
int3
add
mov
int
imul
mov
sub
adc
cmps
xor
imul
ds
cmps
ret
sbb
into
jecxz
jno
leave
or
out
pop
cwde
jmp
nop
pop
jl
rcr
sub
sub
cmp
inc
fucom
out
imul
sbb
iret
cmps
mov
xchg
and
push
js
mov
movs
mov
dec
pop
push
push
test
add
sahf
lahf
push
lock
iret
cmp
aam
and
jns
lahf
cwde
mov
mov
mov
in
sub
xchg
mov
mov
push
and
js
dec
js
mov
pop
xor
mov
or
stos
fiadd
psubsw
std
jne
(bad)
adc
jb
aas
sar
mov
mov
ja
test
outs
and
out
xor
cdq
cld
popa
push
scas
out
jg
fistp
(bad)
pop
cmp
call
mov
test
ds
leave
push
test
call
push
movs
jo
mov
jge
cwde
add
cwde
sub
jns
addr16
sahf
add
ret
sbb
pop
sbb
dec
fbstp
stos
mov
xor
scas
cmp
xor
aad
stos
sbb
mov
sti
dec
ror
mov
add
jle
jne
add
inc
test
lahf
cmp
imul
out
rol
dec
add
pop
fild
scas
inc
out
sub
je
gs
daa
and
movs
out
push
lea
out
jo
push
aad
cmp
in
bnd
cld
inc
pop
jo
lock
clc
push
mov
ret
jno
inc
test
stos
cmp
jne
aad
sbb
fistp
sar
sahf
mul
cmp
or
fild
mov
cmps
sahf
stos
jbe
int3
mov
or
mov
dec
jbe
test
ja
repnz
sub
lock
mov
ins
test
adc
inc
push
std
cli
outs
mov
inc
jns
(bad)
and
popa
push
or
pop
mov
inc
sahf
and
and
mov
jl
and
sbb
outs
mov
push
sub
aaa
pushf
add
cdq
sub
popa
add
psubd
mov
add
bound
dec
push
pop
jg
sbb
sub
retf
mov
xor
dec
push
fistp
cli
inc
mov
sub
in
mov
scas
(bad)
sbb
mov
pop
pushf
sahf
shl
xlat
pop
xchg
sahf
rcl
mov
outs
data16
mov
inc
jge
fild
add
adc
lds
test
or
inc
xor
push
and
into
inc
out
cmp
stos
add
movs
jbe
mov
pop
lahf
push
std
ficomp
pop
fisub
dec
ret
repnz
xor
gs
enter
jae
call
xchg
out
sahf
(bad)
out
arpl
outs
movs
repnz
add
jae
mov
stos
int3
lea
mov
or
(bad)
not
div
pusha
je
test
pusha
push
sbb
mov
popa
xchg
mov
mov
scas
pop
std
les
sub
jl
lahf
pushf
test
mov
jne
add
push
push
cdq
xchg
dec
sbb
xchg
adc
shl
test
movs
dec
xchg
daa
outs
imul
push
mov
jle
arpl
out
call
mov
adc
dec
daa
stc
mov
retf
nop
aad
cld
xchg
or
pop
push
inc
pop
icebp
mov
rol
and
pop
jns
jo
xor
jle
ficomp
cmc
stos
push
pop
adc
test
scas
in
outs
cmp
fwait
and
mov
push
out
aas
outs
push
(bad)
and
pop
loop
cmp
outs
pusha
add
add
add
popa
aad
int3
dec
ror
mov
xor
xchg
fst
or
push
fcomi
movs
dec
lock
(bad)
cmpps
jmp
fidivr
daa
sub
adc
sbb
push
(bad)
call
imul
xchg
dec
cmp
inc
movs
into
icebp
mov
loopne
into
test
aad
int
inc
add
push
(bad)
push
inc
jmp
mov
inc
xchg
adc
xor
dec
add
arpl
pop
pop
(bad)
mov
push
push
scas
ss
xchg
sub
cmp
gs
jnp
jge
inc
mov
add
je
xor
xlat
mov
add
pop
lahf
test
pop
xor
xchg
mov
cwde
loop
add
leave
pop
mov
daa
fsub
jae
xor
sahf
pop
ret
cmc
out
in
test
mov
push
inc
fdivr
adc
xchg
cmp
mov
movs
test
mov
sub
aam
cmp
fistp
add
loopne
mov
shr
in
dec
fistp
cmps
mov
vmwrite
aas
pop
and
push
cli
lods
add
sbb
mov
loop
pop
es
xchg
loopne
stc
les
test
jbe
cdq
repnz
call
rcr
push
cs
dec
inc
inc
xchg
lahf
shr
retf
xchg
pop
add
imul
pop
outs
cmp
mov
ror
cs
cmp
call
(bad)
xor
mov
jge
inc
push
not
mov
ds
push
out
dec
add
jg
sbb
xchg
push
mov
mov
sbb
clc
push
and
push
sub
pushf
push
push
push
mov
in
pop
sub
cld
jns
inc
in
mov
jno
xchg
push
cli
inc
pop
add
repz
add
mov
adc
(bad)
mov
push
jge
and
pop
test
movsx
xchg
xor
(bad)
data16
cmps
arpl
pushf
test
sbb
push
xchg
and
(bad)
adc
mov
aam
dec
jl
dec
dec
mov
xor
pusha
(bad)
(bad)
pop
cmp
cmp
jmp
inc
enter
xchg
sbb
add
adc
(bad)
adc
inc
sub
xor
pop
mov
out
sub
jp
call
xor
scas
sub
add
ret
mov
push
loopne
mov
icebp
dec
jle
inc
mov
jno
mov
lock
fild
(bad)
or
shl
sub
sbb
(bad)
dec
inc
sbb
pop
pop
push
mov
stos
xor
out
sbb
xchg
shr
dec
mov
iret
test
enter
mov
(bad)
lods
stos
out
adc
or
cmp
inc
lds
pop
scas
pop
jg
mov
mov
sbb
inc
dec
or
dec
and
sbb
xchg
dec
lods
inc
imul
jbe
mov
popa
scas
adc
nop
push
into
shl
mov
cmp
jns
bnd
push
out
stos
popf
add
aaa
jle
iret
repz
push
loop
mov
add
and
xor
mov
(bad)
push
push
xlat
mov
pop
pop
and
add
movs
or
inc
xchg
outs
ds
aad
scas
dec
jp
push
out
lahf
lods
call
cmps
or
popa
and
sar
xlat
cli
mov
fsub
enter
sub
xor
mov
xor
enter
ds
mov
sbb
push
mov
retf
out
(bad)
call
xchg
cmp
arpl
loop
pop
mov
jb
sub
inc
sub
jo
shl
push
xor
jp
je
movs
imul
shl
sti
jne
inc
imul
inc
addr16
or
je
mov
ins
xlat
sub
pop
xor
dec
xchg
neg
or
and
mov
jle
not
es
adc
xchg
mov
stc
dec
jo
mov
sub
and
pop
inc
or
test
xor
rcr
mov
sbb
jg
(bad)
js
imul
add
or
pop
pop
inc
call
mov
mov
cmp
pop
not
repz
mov
pop
cmp
xor
cmp
lods
mov
inc
(bad)
sbb
movs
xchg
xor
add
loope
test
cmp
fldcw
push
push
pop
fst
and
add
mov
sbb
mov
jbe
in
xchg
sti
inc
or
or
and
mov
movs
lahf
aas
rol
imul
mov
mov
outs
and
cmp
sub
std
pop
xchg
xchg
xchg
idiv
enclu
out
jmp
fs
test
adc
add
or
ret
inc
retf
adc
mov
addr16
ss
xchg
mov
std
pop
idiv
xchg
adc
in
test
mov
push
cmp
cdq
xchg
xchg
add
in
xor
xchg
pop
int
sbb
scas
xor
shl
mov
pop
rcl
cmp
adc
sbb
xor
mov
mul
loop
ror
stc
or
or
stos
les
dec
stc
(bad)
pop
and
add
cmp
out
pop
mov
cmps
ins
sbb
dec
mov
sub
loop
test
mov
std
in
add
mov
ret
inc
dec
pusha
or
fwait
inc
jo
cmp
(bad)
(bad)
cmc
add
add
jle
out
mov
xor
xchg
ins
call
lods
div
cmc
neg
xor
mov
out
pop
lods
loopne
pop
dec
mov
dec
or
push
retf
es
jp
dec
retf
(bad)
dec
dec
(bad)
int3
push
jne
shl
mov
mov
data16
(bad)
sbb
retf
or
fwait
cdq
cld
rol
add
sbb
retf
mov
xor
push
sub
cmps
(bad)
std
sbb
pusha
jg
jbe
push
sbb
xchg
mov
mov
xchg
(bad)
mov
push
lahf
push
jecxz
push
in
js
inc
jno
or
mov
popf
mov
lods
or
dec
lahf
mov
adc
jo
mov
js
mov
add
sub
xor
mov
and
leave
out
pop
and
and
jl
jbe
adc
pop
int3
push
aas
out
cmp
fsubr
inc
xchg
lahf
gs
mov
mov
icebp
xor
or
jae
sahf
xchg
mov
int3
movs
fadd
imul
imul
rcl
xchg
mov
(bad)
loop
sar
cs
(bad)
call
pop
sar
test
jmp
mov
cmp
jle
adc
sub
popf
jne
push
imul
pusha
jge
mov
sbb
sub
daa
fwait
push
push
outs
ins
lock
arpl
sbb
pop
aas
out
push
jecxz
fst
inc
pop
lods
xor
jne
lds
into
div
fbstp
fs
mov
ret
stos
cld
enter
mov
and
fstp
add
inc
imul
and
pop
inc
shr
out
jmp
loop
and
vmovsd
push
(bad)
mov
popf
ret
mov
cdq
cld
cmp
das
mov
adc
test
pusha
xlat
pop
das
cmp
loope
mov
dec
dec
nop
mov
in
enter
jns
enter
fcmovnb
lods
(bad)
sbb
movs
bnd
add
into
iret
push
or
inc
call
rcl
push
movs
pop
sbb
fcmovbe
frstor
dec
imul
dec
retf
mov
and
dec
and
push
pop
mov
fwait
adc
enter
mov
jae
and
int
pop
mov
sti
pop
and
cmp
shr
jmp
add
inc
mov
cld
xchg
ins
(bad)
pop
retf
sub
push
les
xchg
xor
push
cwde
sbb
sbb
sbb
cmps
xor
fcomi
ret
or
jmp
jb
pop
mov
in
movs
mov
outs
mov
stc
add
in
fldenv
xor
fld
(bad)
sbb
(bad)
fisttp
pop
mov
loopne
repnz
sub
loope
dec
mov
sub
jge
outs
dec
xor
mov
cs
in
int3
add
jmp
adc
popf
dec
imul
push
dec
or
inc
inc
jo
xlat
popf
lea
scas
jmp
retf
aad
icebp
inc
xchg
sti
fild
mov
leave
test
daa
cmp
cmp
push
(bad)
dec
movs
les
xor
(bad)
push
loop
movs
inc
loope
idiv
test
(bad)
scas
jle
cmps
or
movs
sysexit
scas
lods
xchg
sbb
or
pop
xchg
or
cmps
mov
pop
jg
adc
jno
pop
nop
cwde
gs
mov
xchg
sub
or
in
cmp
(bad)
shl
scas
xchg
pop
sbb
inc
pushf
mov
cmp
xor
adc
xchg
sbb
mov
aam
inc
xchg
or
push
je
fsubr
adc
cwde
ret
into
in
mov
add
cdq
cmps
mov
stos
call
or
or
fiadd
daa
daa
movs
jb
enter
push
inc
pop
adc
mov
mov
loope
mov
add
call
jmp
stc
and
lods
hlt
dec
popf
outs
mul
js
mov
mov
inc
xlat
or
inc
inc
pop
xchg
mov
fxch
adc
adc
int3
jp
sub
mov
rcl
add
push
pop
imul
mov
je
(bad)
outs
jb
push
pushf
scas
rcr
jbe
cmp
popa
clc
mov
lods
push
dec
push
mov
sub
adc
out
mov
dec
int3
sub
clc
imul
cwde
and
jmp
mov
sti
mov
mov
xchg
mov
mov
fs
xchg
adc
(bad)
cli
inc
mov
and
dec
add
jg
cmps
fsub
sbb
xlat
data16
xchg
stos
std
add
mul
(bad)
pushf
pop
xor
push
fidivr
sub
leave
mov
and
push
shr
sub
fidivr
pop
loope
jmp
pop
aad
call
inc
sub
fidiv
mov
sbb
daa
(bad)
push
inc
mov
mov
sub
cmp
sub
or
imul
push
hlt
jge
xor
pop
jmp
mov
xor
in
jle
xor
sbb
aam
aaa
retf
mov
or
ss
shl
sub
xchg
std
mov
enter
test
cmp
mov
inc
sbb
xor
xchg
pop
mov
ja
inc
retf
push
mov
aam
pop
dec
out
adc
or
in
xchg
jae
sbb
retf
loope
jg
les
add
jnp
dec
pop
pop
into
loopne
dec
ret
xchg
ds
jnp
jmp
adc
mov
dec
pop
push
dec
into
dec
nop
aas
aas
fwait
cdq
pusha
fistp
jl
xchg
stos
jo
push
sbb
cdq
xlat
sbb
jecxz
fwait
in
lahf
jl
push
test
iret
mov
cli
fld
sub
aad
push
mov
sub
dec
out
les
scas
push
stos
cmp
cmp
hlt
stos
ret
fsub
sbb
or
enter
push
rol
aad
jo
xchg
fwait
jb
sub
jae
dec
ja
jge
cmps
out
test
mov
int3
dec
jle
aaa
mov
and
sbb
test
icebp
mov
(bad)
sub
pop
stos
fcmovne
xor
or
jecxz
stos
push
inc
and
out
(bad)
int
mov
cmp
sahf
fdivr
push
movs
ss
(bad)
pusha
push
fdivrp
xchg
cmp
rcl
cmps
rcl
cmp
cmc
sub
jp
mov
ret
cmps
fdivr
jg
or
and
outs
jge
stc
pop
xchg
pop
lock
in
scas
loop
xchg
retf
sbb
mov
mov
inc
sub
and
iret
into
pusha
(bad)
out
outs
inc
or
into
movs
jb
std
das
mov
lods
mov
leave
pop
inc
cmp
scas
pop
mov
mov
xchg
retf
sti
mov
ja
cmp
xchg
inc
adc
data16
aaa
add
cdq
fadd
sub
out
sahf
xchg
pop
cmps
adc
rcl
sbb
call
jae
stos
jo
adc
mov
out
sbb
push
js
push
sub
mov
xchg
jnp
mov
daa
lods
pop
mov
sub
out
jno
ins
popf
dec
movs
pop
lods
daa
cmp
mov
cmp
cmp
sbb
lahf
mov
les
inc
inc
(bad)
sub
cmp
ins
call
mov
and
add
cmps
mov
(bad)
adc
mov
xchg
pop
cmp
lods
call
cdq
int3
leave
push
retf
clc
push
mov
jmp
mov
or
push
jecxz
scas
cmps
pop
sub
ins
into
(bad)
mov
std
ds
inc
push
mov
mov
push
fdivr
cdq
adc
neg
aam
lea
and
stc
fadd
ins
rol
test
js
add
xor
leave
push
mov
enter
stos
push
push
neg
jns
(bad)
(bad)
ja
scas
cmp
push
cmps
jae
xchg
outs
sar
sbb
cmp
sahf
or
scas
mov
add
and
push
pop
xchg
movs
cld
lods
fdiv
mov
mov
stos
mul
pop
or
jmp
adc
dec
push
or
cwde
(bad)
leave
ret
mov
inc
dec
bound
adc
pop
lock
mov
mov
ins
ss
or
call
fxch
inc
loopne
pop
lods
dec
ret
sbb
cmps
addr16
scas
in
xchg
mov
mov
xor
xchg
sbb
fbstp
es
test
xchg
test
div
cdq
scas
pushf
inc
es
mov
inc
add
aam
js
imul
xor
add
dec
xchg
inc
stos
fistp
inc
int3
mov
sub
add
pop
outs
cmp
and
fsubr
(bad)
cs
jae
mov
push
adc
xor
int3
mov
push
enter
nop
jg
xchg
popf
sub
push
adc
mov
push
cmp
xchg
fucompp
jae
xchg
jne
(bad)
mov
js
stos
cmp
dec
adc
dec
xchg
inc
ss
data16
mov
popa
or
ja
hlt
mov
add
movs
ss
mov
ins
xchg
out
mov
push
arpl
imul
cld
sub
xchg
in
xor
lods
lods
hlt
mov
fsubr
sbb
(bad)
imul
jl
add
add
data16
xor
xor
sahf
sahf
int3
adc
data16
and
or
mov
mov
mov
fld
test
pop
aas
dec
aad
pop
(bad)
hlt
loopne
test
xlat
jae
mov
sbb
adc
stc
sar
xchg
jnp
cmp
adc
rol
push
mov
sub
(bad)
shl
jbe
std
rcl
inc
cld
ror
push
bnd
jnp
aam
cs
mov
fbld
cmps
rol
add
xchg
ins
cmp
adc
cmp
sub
loope
push
jecxz
mov
ins
lods
adc
daa
pop
sahf
and
ficom
adc
movs
and
and
aaa
ins
push
movs
cmp
mov
loopne
and
pop
pop
gs
sub
cli
sar
daa
les
and
xchg
repz
and
mov
fdivr
mov
ds
aas
popf
add
neg
mov
ror
or
int3
jg
ret
sub
mov
scas
sbb
push
mov
xor
push
in
adc
cmc
sub
inc
adc
jmp
jns
xchg
cdq
jmp
xor
out
in
xchg
in
xchg
mov
outs
sub
retf
xchg
inc
jae
mov
mov
mov
sbb
cmp
lea
lods
xchg
and
test
(bad)
xor
or
mov
inc
ins
push
jl
fcom
or
jecxz
jo
xor
sahf
fucomp
movs
(bad)
mov
cmp
(bad)
jg
jl
(bad)
in
(bad)
jb
ret
sti
adc
pop
cmp
mov
cmp
cpuid
test
movs
pop
ins
adc
jecxz
jl
and
xchg
imul
push
pop
(bad)
rol
mov
and
movs
adc
pop
cli
in
(bad)
xchg
movs
pop
push
push
(bad)
arpl
dec
(bad)
lock
xchg
loope
dec
inc
out
(bad)
push
pop
dec
push
mov
ja
arpl
or
mov
push
(bad)
push
mov
ds
add
int
sub
mov
jmp
and
or
mov
lock
xlat
xchg
and
fidiv
jno
sub
stc
mov
sub
popa
jp
cmp
or
cmps
leave
loope
sub
xchg
es
stos
fcom
leave
jmp
or
mov
loope
jbe
inc
inc
cli
repz
adc
cmp
inc
pop
jmp
add
add
inc
ret
cmp
mov
sbb
arpl
push
ficom
dec
xor
nop
mov
pop
push
mov
and
int
in
dec
enter
adc
shl
inc
ror
fmul
jb
movs
and
push
fcomp
xchg
inc
xchg
test
jnp
dec
mov
je
call
stos
pop
test
or
jecxz
push
mov
dec
(bad)
cwde
dec
or
test
mov
or
mov
adc
into
mov
fld
push
xor
jge
ins
push
sbb
sub
movs
arpl
test
push
je
dec
fist
rcl
cmc
gs
dec
aam
jo
cmps
adc
in
out
or
jl
sub
jo
int
push
mov
add
shl
(bad)
fdivr
mov
xor
stos
or
pop
aas
add
or
mov
adc
mov
or
dec
pop
(bad)
aas
or
mov
ror
movs
addr16
mov
nop
jmp
sbb
xor
push
retf
sar
xor
aas
ret
pop
and
outs
mov
stos
mov
outs
div
out
(bad)
sub
push
xchg
push
xchg
pop
push
mov
dec
test
mov
add
in
jl
cmovg
stc
cmc
retf
cmp
cmp
movs
out
jge
sbb
jle
lahf
fwait
sahf
jmp
mov
test
test
adc
adc
cmp
sahf
mov
iret
js
sub
xchg
loope
jge
jno
aam
out
gs
dec
jg
ds
mov
into
fwait
cmp
cmc
lds
out
inc
jmp
push
daa
call
inc
call
pop
movs
test
aad
mov
mov
repz
add
xor
push
dec
ror
push
int3
aas
fldcw
push
pop
cmc
xor
daa
and
mov
std
test
push
rcl
jl
mov
jae
fsub
or
iret
sbb
push
call
cdq
mov
cs
test
(bad)
aas
mov
jl
imul
iret
dec
call
and
repnz
rol
pop
fist
xor
mov
inc
inc
xchg
retf
cmps
sar
push
lock
jge
(bad)
loope
dec
mov
mov
cmp
out
add
fidivr
mov
push
fsubr
mov
cmp
stos
es
mov
in
aad
xlat
fwait
jp
pop
and
pop
ficom
sub
jno
daa
jns
nop
ret
bound
mov
dec
cld
lods
mov
adc
xchg
call
mov
pop
shr
jl
xchg
dec
leave
aad
test
add
jl
mov
stos
pop
aas
push
xor
mov
mov
or
push
test
(bad)
inc
popa
int
outs
data16
mov
jmp
dec
call
outs
inc
inc
jno
arpl
adc
popf
cmps
dec
inc
lods
aaa
aas
cwde
in
fcom
mov
lea
pop
bound
xchg
movs
mov
mov
int3
inc
jle
arpl
out
jmp
sub
xor
xor
jae
pop
jb
stos
xor
retf
mov
sahf
mov
jge
call
mov
mov
int3
fwait
hlt
add
outs
adc
mov
push
call
popa
mov
pop
sbb
out
int
js
pop
bound
imul
inc
mov
xor
jns
daa
sub
add
jp
and
jge
aaa
call
xor
mov
cmps
in
sbb
mov
cs
or
rcr
xchg
cmp
or
inc
add
shr
inc
xor
cld
cmps
push
hlt
add
push
jo
rcl
mov
dec
lods
cmp
push
lods
xor
cmps
aas
adc
sbb
jl
daa
das
or
dec
push
sub
inc
enter
or
push
icebp
pushf
montmul
cmps
pop
(bad)
and
mov
pop
xchg
rcl
sbb
js
xor
push
out
dec
pop
mov
pushf
icebp
hlt
push
mov
dec
dec
ds
bound
push
sub
scas
les
add
push
mov
jmp
inc
and
scas
dec
fsub
das
adc
add
enter
jne
or
pop
pop
std
icebp
mov
dec
xor
mov
int3
xor
popf
jp
les
ds
inc
jp
and
adc
xchg
xchg
jp
xor
sub
jns
out
es
mov
cmps
scas
out
adc
jge
sbb
ds
and
repnz
mov
sti
in
dec
pop
in
jecxz
sbb
fimul
cld
cmps
and
in
cli
out
sar
scas
fimul
jb
icebp
and
xchg
jno
loop
inc
mov
add
inc
(bad)
sbb
mov
sbb
add
inc
cmc
xlat
fsubrp
mul
xor
vpxor
loopne
mov
mov
(bad)
mov
or
imul
fcmovu
jae
fdivr
inc
gs
and
imul
sti
lock
xchg
jns
fs
call
push
or
jo
cld
inc
inc
cs
mov
push
loop
adc
and
scas
pop
sub
cwde
xor
mov
and
leave
cmps
xor
aas
jnp
rcr
mov
and
xor
(bad)
shr
fld
pop
jge
out
inc
fcmove
mov
jae
loopne
stos
stos
dec
test
data16
sub
add
sub
jnp
sbb
mov
cmp
cs
sub
push
inc
pop
test
sbb
rcl
sbb
mov
mov
test
(bad)
pop
mov
pop
cmp
lea
into
mov
scas
out
icebp
out
xchg
pop
and
gs
dec
je
lahf
fdiv
es
mov
mov
call
and
pop
(bad)
adc
sub
mov
pop
stc
inc
pop
sar
xchg
jle
js
or
mov
sub
xchg
movs
pop
hlt
pop
clc
pop
dec
ss
loop
adc
pop
mov
and
(bad)
iret
neg
cwde
add
mov
pop
iret
aam
cwde
(bad)
(bad)
jb
aaa
mov
adc
jg
mov
repz
(bad)
pop
ins
add
and
lods
jo
and
(bad)
std
pop
inc
push
jge
aas
js
sub
inc
mov
jg
ins
fst
outs
cli
ins
stos
add
add
push
lea
out
pop
pop
sti
sub
sbb
fwait
js
xor
enter
in
addr16
aad
mov
cmc
cmps
and
add
or
dec
mov
sbb
icebp
push
gs
out
cmp
jbe
pusha
retf
cmps
and
cmps
inc
or
enter
nop
or
and
inc
mov
imul
scas
inc
pushf
inc
iret
cmp
fistp
xchg
inc
ja
cmc
pop
xchg
(bad)
int
cmc
mov
xchg
push
xchg
push
test
stos
sahf
imul
cmps
mov
mov
fwait
data16
cmp
xchg
or
pop
sbb
mov
xor
nop
or
adc
and
xlat
mov
test
jmp
out
inc
sar
sub
imul
retf
mov
sub
dec
mov
push
mov
dec
les
inc
ret
out
adc
and
jno
or
outs
inc
sub
ret
sbb
mov
dec
scas
mov
xchg
pop
mov
or
and
push
fstp
add
add
mov
inc
pop
rep
repz
dec
cmp
push
pusha
jnp
dec
icebp
xchg
push
fs
aaa
arpl
push
ins
fdiv
in
or
inc
cli
pop
ror
cmp
(bad)
fidivr
xor
retf
jb
ins
jle
mov
fmul
mov
fs
mov
lds
frstor
cld
xor
jge
mov
in
shr
(bad)
push
or
mov
(bad)
ret
ret
jb
sbb
jp
shl
cmp
fisub
add
adc
or
jmp
mov
fs
int3
mov
and
mov
pop
aaa
mov
jmp
xor
add
js
mov
lods
mov
aad
pop
xchg
sbb
xchg
sub
jbe
mov
int3
inc
sbb
inc
xchg
jp
xchg
lds
je
retf
mov
enter
popa
or
mov
fsincos
mov
test
fbld
es
push
mov
inc
aaa
dec
test
cmp
jae
aam
sbb
jmp
fwait
mov
jne
jmp
pop
add
add
sub
or
jecxz
mov
les
pop
call
outs
cmp
xlat
sar
xor
pusha
cmps
scas
mov
adc
adc
mov
nop
in
xchg
loop
adc
imul
sbb
mov
mov
mov
in
pushf
sbb
je
cld
mov
retf
jecxz
data16
push
mov
mov
ss
add
add
and
or
aam
add
add
xor
popf
push
ret
mov
jns
sub
popa
enter
rol
ins
mov
sub
dec
not
mov
scas
sbb
inc
add
cld
xchg
das
mov
xchg
sbb
pop
jmp
enter
pop
dec
imul
aas
jmp
daa
ret
jge
out
mov
cmp
mov
(bad)
outs
jnp
sub
fnsave
in
sbb
rcl
mov
sub
mov
or
sub
xor
lds
mov
les
daa
loopne
add
or
and
cs
jp
fld
inc
hlt
jns
outs
leave
mov
stos
dec
cmc
xchg
sahf
jns
fstp
cmp
xchg
xchg
lods
mov
sbb
lods
xor
cmp
iret
daa
lahf
fwait
rcpps
jl
into
call
cld
mov
out
cmps
xor
retf
div
jmp
loopne
adc
inc
mov
add
xchg
or
push
xchg
push
inc
push
(bad)
jp
jbe
cli
xchg
push
sub
imul
jno
in
ficomp
aad
mov
lods
and
sub
push
je
movs
adc
xchg
ds
fwait
mov
(bad)
ins
fdivp
ret
ins
(bad)
and
pop
in
mov
mov
sbb
shr
push
ret
sub
push
test
neg
ins
mov
ins
ss
add
cdq
stos
add
aas
repnz
hlt
fcomp
cli
xchg
sub
scas
hlt
int
push
sti
add
jo
imul
stos
sub
loopne
rol
xor
jge
aas
ds
jbe
iret
and
jbe
push
mov
mov
sahf
inc
sub
fs
outs
mov
and
and
push
sub
mov
dec
movs
jo
mov
test
push
ud0
pushf
rcl
xlat
(bad)
cmc
scas
ret
mov
xchg
(bad)
jl
pop
pop
and
in
adc
mov
pusha
lahf
dec
push
push
and
mov
dec
jg
mov
and
add
std
cmp
or
gs
leave
iret
push
xchg
mov
popa
push
ds
inc
retf
aad
add
hlt
mov
test
imul
pop
dec
xchg
lds
sbb
dec
pop
adc
test
std
(bad)
in
int3
(bad)
inc
cli
xor
jp
xchg
xchg
pushf
retf
(bad)
out
jbe
gs
push
dec
cmc
push
int
dec
cs
repz
sbb
popf
mov
gs
repz
fild
daa
dec
mov
xor
inc
pop
(bad)
cmp
nop
add
adc
test
movs
into
add
jg
stos
xchg
and
jp
add
push
xchg
repz
pop
fistp
sub
xchg
xchg
cdq
push
(bad)
jnp
dec
dec
sbb
xchg
stos
cmp
popf
cmps
fwait
jo
xor
jne
cld
sbb
jbe
push
and
aam
out
mov
push
leave
xchg
push
call
popa
stos
shl
fs
cmps
lock
mov
test
sbb
xor
les
outs
inc
pop
dec
or
mov
pop
loop
push
or
lea
or
dec
jge
mov
pop
mov
inc
rcr
addr16
nop
das
pop
fnsave
push
pop
xor
lods
test
shl
jne
enter
push
xlat
inc
or
pop
sub
cmp
xchg
jp
add
imul
push
sub
gs
mov
out
push
mov
mov
in
ds
adc
add
dec
xsaveopt
test
pushf
ins
shl
cmp
mov
sub
enter
jle
xchg
shr
mov
inc
mov
or
mov
adc
add
les
std
in
jl
push
push
mov
mov
fdivr
mov
jecxz
cmp
cmp
sahf
xchg
mov
mov
ss
ja
inc
push
jl
xchg
ds
jne
int3
xor
fistp
je
je
out
js
jg
push
adc
pop
ins
and
and
add
je
lahf
(bad)
fdiv
(bad)
sahf
jmp
out
xchg
mov
dec
clc
inc
movs
xchg
lock
lds
inc
aaa
pop
rcl
sbb
je
and
in
hlt
mov
outs
pop
aad
js
ds
mov
call
cmps
movs
(bad)
scas
push
into
fild
push
movs
std
mov
cdq
call
leave
pop
hlt
loop
jno
dec
mov
ss
in
push
outs
scas
ret
imul
and
repnz
test
pop
xchg
in
or
adc
sar
gs
push
retf
inc
mov
xor
leave
in
out
(bad)
xchg
push
jo
pop
mov
dec
mov
mov
sbb
pop
pop
add
jmp
xchg
push
js
loopne
enter
xor
fwait
sbb
mov
enter
jno
je
cmp
ss
add
popf
fdivr
fwait
pop
jne
ss
lahf
out
(bad)
pop
(bad)
jg
mov
jg
cmps
mov
and
mov
lahf
jle
cmp
jmp
dec
dec
cmp
fcmovbe
mov
mov
jno
gs
mov
xor
retf
test
in
fs
add
jecxz
jns
and
mov
mov
ds
lds
popa
rdmsr
add
xor
and
and
dec
inc
in
mov
inc
movs
mov
push
movs
sub
add
ror
mov
fist
dec
loope
test
sti
sbb
shl
data16
ds
xchg
arpl
rdtsc
call
std
sub
jp
lea
outs
out
fldcw
(bad)
popf
push
lds
rol
in
xchg
sar
xchg
and
or
add
inc
(bad)
les
xchg
pop
call
jae
add
jp
xchg
jbe
aas
jne
and
and
sbb
or
jb
iret
rcl
aam
out
mov
mov
das
mov
lahf
push
inc
push
movs
pop
push
(bad)
inc
or
ss
daa
adc
cld
and
mov
mov
xchg
sbb
adc
int3
ja
or
aaa
or
cmps
xor
xor
adc
int3
push
test
mov
cmp
inc
dec
sahf
jno
xchg
retf
sub
xor
push
aad
ficom
and
pop
xchg
in
mov
jne
in
add
adc
ficomp
out
outs
dec
xor
pushf
dec
inc
(bad)
(bad)
scas
push
retf
pop
xchg
movs
push
(bad)
stos
(bad)
loopne
mov
mov
jae
rol
mov
jg
and
jnp
or
das
xchg
xchg
xor
add
add
lds
dec
sbb
mov
enter
clc
xor
in
in
bound
fwait
lahf
ficomp
jg
mov
fidiv
cmps
(bad)
push
ret
mov
test
and
out
inc
test
retf
push
daa
mov
clc
mov
add
xchg
outs
cmc
gs
inc
or
adc
xor
mov
adc
jp
xchg
imul
cmp
mov
jmp
mov
stc
mov
xor
rcl
ins
(bad)
push
call
mov
arpl
pushf
sub
pop
cwde
mov
stos
movs
push
repz
fisubr
or
inc
xor
movs
mov
xor
retf
pop
adc
bound
xchg
out
sti
int3
addr16
outs
sbb
lock
mov
ds
jecxz
mov
mov
pop
enter
cmp
adc
add
inc
repz
sub
and
ja
and
jbe
into
push
into
xchg
out
xchg
aaa
dec
int
aas
fs
rol
mov
movs
fdivrp
mov
sbb
clc
push
pusha
inc
push
add
stos
add
outs
inc
jnp
loopne
std
sti
dec
xor
ss
sbb
pop
cli
adc
das
pop
dec
es
push
adc
movs
jge
pop
mov
pop
call
cmp
hlt
std
push
cmp
mov
jno
mov
test
inc
jbe
test
adc
jecxz
mov
mov
into
lahf
pop
lods
mov
pop
sub
inc
in
and
call
jl
push
xchg
dec
xor
fwait
lods
pop
mov
and
pop
or
es
add
cmp
cmp
push
jecxz
stos
jo
fst
and
scas
mov
ret
test
xchg
popf
in
inc
or
pop
outs
scas
sti
mov
mov
int3
shl
aas
fdiv
leave
(bad)
pop
add
sbb
out
mov
sbb
sahf
push
xchg
test
mov
push
das
and
sub
(bad)
loopne
out
jns
into
dec
or
sbb
mov
outs
cmc
pop
push
xchg
push
bound
add
dec
jge
dec
lds
cld
add
or
sbb
xor
cs
mov
xchg
xchg
xchg
into
in
call
les
(bad)
pop
(bad)
mov
pusha
jle
ins
or
mov
pop
and
imul
arpl
xchg
bound
or
cmp
ret
inc
inc
in
popa
pop
(bad)
into
cmps
nop
cld
xchg
ds
xor
add
mov
add
push
adc
jns
cmp
enter
cli
inc
or
lea
lea
fwait
cdq
inc
call
mov
adc
leave
xor
dec
popa
jno
cs
sbb
cmp
jmp
push
or
xchg
pop
mov
jg
and
sub
or
movs
mov
popf
(bad)
iret
mov
sub
adc
sub
loop
inc
mov
jbe
adc
pop
xor
loope
in
pop
adc
xchg
ss
cmp
mov
jle
cwde
jge
icebp
cmps
inc
call
cmps
jb
push
jne
retf
mov
and
xlat
sahf
jmp
aam
cli
pop
push
mov
xor
jnp
dec
jo
sbb
or
or
xchg
sahf
jbe
fnstcw
pop
jo
sbb
mov
rol
repz
lea
push
xchg
movs
sub
or
and
cmp
out
mov
es
ds
push
mov
dec
pushf
mov
mov
dec
aas
fistp
hlt
adc
and
pop
jnp
push
icebp
shl
pop
int
cwde
jns
mov
adc
mov
xor
pop
add
mov
cmp
inc
leave
sub
xor
fdiv
test
sub
jmp
addr16
loope
outs
icebp
(bad)
pop
cmp
int
(bad)
inc
inc
add
dec
pushf
enter
cli
xchg
pop
dec
es
gs
push
sub
add
mov
in
inc
mov
(bad)
rol
and
and
inc
scas
cmps
pop
clc
adc
or
lods
mov
xchg
mov
push
mov
pop
add
arpl
add
pop
add
sub
xor
and
push
(bad)
int
sub
add
or
ror
add
or
jl
in
cmp
dec
sbb
jg
(bad)
mov
iret
xchg
lahf
jl
mov
and
movs
aaa
test
into
data16
or
pop
call
out
jp
mov
pop
(bad)
out
inc
test
cmp
or
cmc
retf
std
sub
mov
lods
or
pop
jae
add
ins
fdiv
fsub
pop
(bad)
iret
lds
jl
xchg
add
and
lahf
pop
aam
dec
leave
cmc
cmps
cs
and
(bad)
cmps
outs
add
ss
paddusb
mov
xchg
inc
xor
imul
fwait
mov
mov
mov
fcmovnu
int
jg
nop
mov
sub
jle
fwait
jns
adc
shl
ret
cmp
scas
test
cdq
imul
ins
sbb
dec
xor
lods
in
inc
push
xor
ficom
pushf
inc
jb
add
mov
ret
dec
jb
jle
pop
mov
pop
sbb
mov
push
inc
mov
mov
into
mov
ds
fbld
and
in
in
mov
fs
shl
sbb
xor
aas
sub
mov
and
aam
sbb
dec
(bad)
inc
push
psrld
mov
pop
pop
sub
mov
jbe
adc
sub
out
nop
ins
jno
xor
cmp
test
test
mov
sbb
cmp
jo
mov
inc
adc
dec
jmp
movs
lea
inc
sub
ret
ficomp
mov
ins
pop
xor
sub
pushf
repz
jnp
jmp
mov
pushf
not
sub
xor
lahf
bnd
push
sub
mov
inc
mul
aas
mov
sahf
jmp
imul
jo
sub
push
sub
leave
pop
sub
sub
rcl
jp
movs
add
push
pop
outs
xchg
jns
inc
inc
test
rcl
ret
cs
jmp
loop
test
xor
das
jne
and
sub
hlt
bound
mov
cmp
push
push
sub
cmp
retf
fist
call
or
loope
mov
clc
xor
and
cmp
add
sbb
cmp
mov
cmovp
mov
add
fadd
sub
dec
rcl
lahf
jmp
jmp
mov
sbb
inc
int3
imul
popa
sti
ja
push
fsub
sahf
std
jge
pop
pop
(bad)
fcom
outs
out
adc
mov
hlt
xchg
retf
jp
test
shr
xchg
mov
shl
adc
arpl
je
xlat
outs
inc
push
push
hlt
ret
les
sbb
sub
or
mov
ds
and
xor
mov
mov
xor
mov
sub
(bad)
or
movs
mov
push
inc
and
or
cmp
jns
xor
cmp
jle
in
inc
emms
adc
add
out
icebp
popf
in
jmp
test
les
mov
push
lds
fmul
sbb
mov
and
lahf
jmp
push
(bad)
lods
out
xchg
fstp
jmp
test
add
div
push
jae
push
sub
jmp
pop
test
xchg
lahf
fwait
mov
mov
or
test
adc
repz
push
jecxz
pop
xor
lock
sar
cli
retf
cmp
xor
inc
adc
push
(bad)
mov
aas
add
mov
fistp
ret
pop
das
dec
xor
ins
dec
popa
pop
mov
es
gs
add
(bad)
ins
test
cmp
icebp
movs
fadd
stos
mov
fxrstor
fwait
sub
sub
out
push
fst
imul
jbe
pop
mov
and
addr16
jo
pop
inc
dec
and
mov
aaa
mov
je
mov
ror
xor
pushf
inc
xor
pop
sbb
xchg
mov
dec
lds
xor
enter
push
push
adc
xor
test
mov
jns
dec
xor
push
and
das
retf
hlt
mov
test
push
add
pop
imul
dec
cli
mov
dec
and
into
push
push
mov
mov
shl
mov
add
and
mov
sbb
fwait
xchg
add
jle
ret
in
xor
aam
xchg
(bad)
and
sahf
sub
fcom
fsub
int
ss
(bad)
mov
sub
shr
out
cdq
xor
adc
rcl
nop
js
arpl
sahf
add
sti
sub
add
inc
mov
sub
call
ss
mov
cmp
mov
fsub
push
mov
test
mov
pop
mov
pop
or
enter
cmp
mov
lahf
mov
pop
push
std
push
pushf
jp
jp
ds
mov
xchg
sub
fmul
out
aas
jmp
xlat
retf
icebp
rcr
addr16
pop
cld
inc
pop
cmp
cmps
scas
lock
jp
imul
add
mov
xor
das
mov
jle
mov
mov
enter
ja
call
imul
push
or
mov
inc
das
sbb
xchg
arpl
sbb
call
jmp
stc
and
pop
xchg
mov
sbb
xor
jge
mov
jo
cmp
sbb
ins
push
mov
js
in
adc
push
mov
mov
dec
push
cmp
xlat
jae
xchg
leave
add
sbb
(bad)
adc
or
cmp
and
mov
out
in
inc
push
jbe
(bad)
jno
and
pop
int3
sub
aad
lods
(bad)
retf
pop
xchg
pop
xor
test
jmp
jno
cmps
test
stos
mov
stc
add
into
fiadd
and
push
adc
jl
test
aam
loope
clc
mov
xchg
cmp
pop
push
and
lahf
(bad)
jmp
arpl
sub
add
mov
jmp
stos
(bad)
call
xchg
mov
(bad)
adc
loope
ins
cld
jb
popf
push
call
xor
div
mov
mov
stos
(bad)
mov
xor
xor
in
movs
test
or
sub
fisubr
mov
stc
cmp
push
sbb
ja
in
pop
test
push
push
dec
test
sub
or
lahf
addr16
pusha
retf
adc
hlt
dec
add
je
test
out
and
arpl
aam
adc
xchg
inc
xor
jecxz
inc
outs
push
add
pop
ror
push
cmp
mov
mov
adc
mov
ret
pop
fsubp
bnd
mov
addr16
inc
adc
lds
mov
enter
pop
daa
or
inc
mov
mov
(bad)
popf
call
or
(bad)
shl
mov
jp
lds
outs
xchg
icebp
pop
add
lock
push
lods
pop
mov
adc
bound
xor
lahf
jb
sub
and
xor
sbb
addr16
push
and
fdivr
dec
sbb
cld
test
xor
pusha
jp
test
and
out
dec
cmp
test
mov
mov
mov
das
mov
pop
lods
mov
add
out
xlat
cmp
adc
mov
cmp
xchg
aam
sbb
stos
mov
imul
sbb
mov
xchg
addr16
push
mov
ficom
cmp
mov
or
xor
lock
inc
imul
stos
ror
das
jb
cmp
pop
repz
ja
jg
les
push
push
xor
adc
iret
sub
jl
enter
mov
mov
sbb
iret
imul
int
xor
js
mov
xchg
clc
loop
pop
and
sub
int3
(bad)
fsubr
and
xor
call
imul
or
dec
repz
xchg
adc
sub
cmc
dec
arpl
mov
and
jmp
sbb
jae
add
mov
fwait
inc
imul
mov
push
loope
(bad)
outs
cdq
loope
pop
aam
arpl
pop
popf
fld
inc
pop
test
(bad)
out
push
sbb
xor
icebp
out
mov
ret
adc
inc
jo
mov
out
fst
movs
adc
inc
stos
int
add
popf
cmp
jae
sub
test
fld
(bad)
xor
je
loopne
ds
in
repnz
pop
test
ficom
adc
fsubr
jno
cmc
popa
cmp
mov
cmp
aam
mov
xor
adc
ss
sbb
mov
outs
stos
inc
ror
jnp
scas
and
inc
test
mov
mov
sahf
retf
or
push
rcl
dec
lds
adc
mov
mov
dec
lock
je
repz
out
popf
loop
pop
outs
push
popf
dec
pop
jbe
(bad)
jns
scas
stos
push
fucomp
idiv
push
ins
data16
into
xor
ror
call
and
(bad)
mov
add
dec
sahf
call
cmps
or
outs
shl
pop
bound
call
adc
psubsw
in
cmps
bound
test
ror
and
retf
pop
fidiv
cmp
jle
in
sub
add
or
inc
pushf
int
imul
pop
outs
mov
inc
xchg
ins
push
sub
jg
mov
mov
arpl
(bad)
cmp
or
in
inc
js
addr16
inc
dec
(bad)
das
es
xchg
fdiv
sub
sub
jmp
cmps
add
nop
(bad)
arpl
scas
mov
les
repnz
mov
push
sub
push
sbb
jbe
ror
cmp
js
ror
add
pop
adc
fadd
fdivr
sub
lods
mov
into
dec
pop
cli
sti
xor
mov
adc
loope
mov
or
arpl
push
inc
jmp
fcomp
popf
idiv
sub
mov
mov
xlat
push
fwait
mov
int3
data16
xchg
or
lock
leave
(bad)
pop
cmp
push
xlat
rcl
cmps
and
push
cmp
adc
scas
je
les
arpl
jge
imul
fstp
mov
out
jge
xchg
movs
adc
mov
sub
jmp
inc
xchg
mov
push
mov
pop
ins
(bad)
push
lods
xchg
lock
(bad)
cs
and
add
adc
cld
jb
leave
dec
sub
push
push
ret
mov
pop
ds
add
push
loopne
aam
out
add
push
cmps
sbb
pop
sbb
jp
pop
jb
clc
mov
repnz
ja
mov
mov
mov
shl
sahf
adc
inc
dec
pop
jb
mov
mov
jl
pop
push
lea
outs
cmps
ret
xor
jns
mov
mov
sub
xchg
jp
inc
add
inc
jb
lock
add
(bad)
push
add
scas
iret
pop
push
out
dec
pop
cdq
mov
inc
aad
fnsave
cmp
adc
jmp
jmp
or
call
sub
jmp
cmp
aas
gs
repz
pop
aas
push
sbb
ja
call
push
adc
pop
repz
jb
xchg
cmc
push
ror
test
mov
dec
dec
inc
push
jae
push
shl
fst
rol
mov
adc
test
xor
in
js
les
mov
mov
loop
adc
(bad)
mov
ret
cmp
adc
imul
adc
mov
fs
xor
test
stos
push
xchg
test
movs
sub
push
ror
jnp
gs
leave
psllw
cmp
and
ror
aas
add
imul
cmp
dec
jle
fcomi
not
push
push
(bad)
fwait
out
jecxz
dec
sub
enter
xchg
js
not
inc
xor
sbb
rcr
lahf
in
xchg
cmc
sub
cld
ret
out
jae
mov
dec
pop
push
fild
mov
push
add
fisttp
ror
lock
sub
sahf
sbb
shl
and
jno
sub
sahf
into
paddsb
je
add
mul
or
lahf
shl
and
dec
push
add
sub
and
fucomip
movs
mov
lods
jno
outs
mov
pushf
pop
xlat
or
cmc
or
dec
sub
or
pushf
pop
dec
ins
mov
pop
int
add
loope
pop
enter
cmp
ja
cmps
movs
inc
mov
int
lea
dec
out
mov
cmp
inc
(bad)
inc
mov
test
dec
xchg
jge
fsubr
popf
push
cs
mov
(bad)
pop
push
aas
lods
xchg
ret
sub
mov
ret
cmc
cmp
xchg
inc
ret
popa
mov
or
xor
and
mov
bound
mov
lock
jno
and
inc
fwait
pop
pushf
vpslld
out
push
push
pop
sub
cmp
jg
pop
loopne
out
mov
xor
(bad)
loopne
les
stos
int
cwd
iret
sub
inc
jo
push
adc
fcomi
fdivr
sub
mov
scas
sti
and
fstp
mov
jmp
retf
fxch
and
imul
jne
leave
dec
sar
push
jmp
push
movs
repnz
(bad)
inc
repnz
lea
les
iret
cmp
pusha
arpl
push
xchg
fucom
xor
ds
or
cmp
(bad)
jmp
dec
adc
es
pop
fimul
(bad)
push
adc
add
xor
das
dec
pushf
fst
(bad)
push
dec
inc
cmps
gs
cmp
sub
jo
cmp
or
lock
push
ins
jle
cmp
call
cmp
mov
inc
jp
inc
push
lahf
xlat
std
dec
ds
inc
xchg
pop
inc
sub
addr16
popa
add
or
enter
adc
mov
jp
inc
push
jp
leave
int3
mov
outs
sbb
jo
xor
int3
sub
or
add
push
scas
arpl
jbe
dec
fcom
out
mov
shl
(bad)
jmp
or
push
jno
lea
cli
xor
or
pop
sub
mov
push
mov
jge
fiadd
cmp
mov
add
(bad)
call
dec
push
add
pop
(bad)
jbe
adc
jmp
sbb
xchg
test
ret
mov
aas
mov
mov
push
cmp
jb
add
call
or
dec
imul
cwde
mov
data16
loop
jmp
sbb
in
pop
sub
retf
mov
adc
sub
mov
sahf
daa
test
daa
test
xchg
cwde
jnp
jge
das
and
pop
add
adc
mov
dec
xlat
sti
xchg
(bad)
mov
shl
gs
ins
dec
and
mov
jnp
test
nop
fsubr
mov
mov
jo
dec
sbb
xor
icebp
xchg
scas
mov
popf
loope
cmp
mov
sbb
data16
mov
add
pop
lock
imul
aaa
xchg
je
pusha
dec
cs
jmp
idiv
mov
add
or
mov
sbb
(bad)
sub
mov
les
shl
(bad)
imul
pushf
mov
add
pop
mov
sar
xor
mov
sub
mov
push
out
pusha
mov
rcl
scas
outs
out
xor
xor
nop
xchg
lock
and
and
out
mov
xor
movs
pusha
dec
jno
cli
xlat
pop
pop
adc
and
jle
sub
push
or
xchg
or
xchg
pushf
daa
inc
ja
aam
arpl
mov
out
add
mov
mov
iret
xchg
aam
test
jnp
imul
(bad)
mov
dec
push
or
mov
xchg
mov
jnp
fsubrp
xchg
test
sub
retf
sbb
adc
iret
call
sbb
jmp
fsubr
jno
or
mov
xor
or
retf
sti
xchg
(bad)
jns
pusha
shr
nop
leave
pusha
jno
inc
and
popa
xchg
shl
push
(bad)
iret
adc
pop
sti
add
mov
mov
push
mov
jno
aaa
pop
sbb
stos
fcomp
sar
mov
xor
xor
fsubp
hlt
in
daa
dec
sbb
popa
cld
call
push
xor
cld
xor
sbb
dec
aad
xor
mov
and
mov
mov
xchg
push
jle
xchg
mov
mov
(bad)
loop
out
repz
and
std
pop
jbe
jge
(bad)
sub
aas
jle
fs
pop
mov
and
mov
pop
dec
in
mov
inc
xchg
or
es
mov
mov
pop
or
call
shl
xchg
cmps
pop
jmp
cmp
js
fst
pop
(bad)
ja
fs
call
xchg
lds
add
dec
leave
xchg
sub
mov
aaa
arpl
ss
jb
shl
in
mov
pusha
int
ins
add
lods
leave
mov
(bad)
daa
hlt
mov
mov
jnp
cmps
xlat
jns
add
jmp
fldenv
rol
test
mov
loope
cmp
std
sti
adc
aaa
test
jge
cmps
xor
or
cwde
mov
arpl
cmp
outs
cmp
push
or
lds
adc
iret
lods
mov
cmp
xchg
test
ret
push
repnz
inc
mov
ror
xchg
outs
and
jmp
in
jg
int3
test
and
jmp
in
push
mov
or
(bad)
int3
ror
lea
retf
pop
div
inc
jmp
pop
bound
popf
sbb
xor
mov
cwde
(bad)
adc
xchg
sbb
adc
push
pop
fsubr
push
rcr
mov
cmp
stos
or
bound
cli
popa
xor
add
test
inc
xor
arpl
clc
fwait
mov
mov
das
aas
jbe
push
out
movs
and
arpl
scas
inc
ins
(bad)
dec
mov
bound
jp
inc
ret
bound
cdq
sbb
out
mul
pop
fst
ins
push
sub
add
sub
fnsetpm(287
dec
fs
xchg
shl
sub
sti
out
xchg
fs
fs
test
iret
sbb
jno
xchg
sub
push
or
jge
rcl
adc
je
mov
push
jno
retf
push
fadd
cmps
mov
or
addr16
movs
push
and
mov
lock
imul
sahf
adc
sbb
mov
sub
xor
mov
lods
or
jns
cmp
ds
in
jbe
push
test
push
je
and
push
mov
push
arpl
pop
xchg
cdq
and
mov
rcl
fs
loop
sar
movs
xchg
sti
cli
bound
test
pop
cmp
pop
mov
or
stos
adc
push
pop
sub
adc
mov
push
jns
lods
mov
mov
fst
xchg
bound
sbb
fimul
xor
jg
and
sub
es
repz
test
addr16
icebp
scas
jmp
stc
sbb
mov
adc
jo
xchg
ror
jmp
xor
test
pop
mov
shl
std
fadd
sub
ja
int3
dec
shl
push
mov
cmps
mov
pop
mov
and
rcr
xlat
leave
fild
lds
in
es
or
push
in
fidivr
adc
and
adc
and
xchg
mov
(bad)
fstp
sub
out
cdq
mov
lahf
lock
mov
cli
add
repnz
cmps
push
xor
xchg
(bad)
sar
sti
in
movs
shrd
icebp
(bad)
jge
inc
(bad)
out
fisttp
(bad)
int3
imul
dec
shr
adc
sub
int3
(bad)
inc
cmp
retf
mov
retf
js
into
popf
jo
pusha
jo
add
xor
test
push
or
jbe
loopne
jg
fwait
ins
pop
ds
mov
mov
daa
push
(bad)
push
add
inc
xor
sahf
mov
push
fnsave
retf
xor
repz
fwait
xchg
add
xlat
test
push
in
pop
push
push
sub
push
adc
dec
cmps
inc
jnp
test
xchg
push
sub
or
fs
int
jge
or
dec
and
and
push
mov
hlt
xchg
in
(bad)
lahf
jl
mov
mov
mov
aam
cmp
jle
and
(bad)
idiv
int
test
pop
mov
or
cmps
pop
int
mov
add
mov
mov
fwait
sbb
sbb
jno
push
outs
mov
xchg
push
movs
push
xchg
add
in
in
xchg
xor
in
pop
dec
outs
fs
inc
pop
clc
or
dec
push
je
mov
(bad)
stos
mov
inc
(bad)
icebp
imul
xor
dec
std
dec
jecxz
cmp
fdiv
hlt
jge
pop
lahf
loope
ins
aam
repz
inc
mov
fsubr
(bad)
in
cld
xchg
push
nop
jo
ins
ins
mov
dec
jmp
pop
in
jp
leave
xchg
inc
xchg
add
js
mov
inc
rol
call
lods
cmp
and
jge
out
jge
jb
pop
scas
cmc
div
mov
ret
add
xor
sbb
movs
cld
int
mov
mov
daa
dec
call
hlt
div
adc
inc
sbb
mov
mov
pop
xchg
retf
aad
js
inc
ins
mov
test
or
daa
inc
mov
jns
lds
xadd
jle
es
xchg
jl
sbb
jae
dec
jmp
aam
scas
add
arpl
mov
jbe
sti
ss
shr
push
test
add
jg
push
mov
loope
test
mov
aaa
fucomi
inc
dec
and
inc
(bad)
imul
imul
(bad)
call
push
ret
or
test
and
pushf
xor
add
in
cmp
jp
sbb
xchg
jno
adc
int
jp
(bad)
cdq
sbb
fist
sbb
out
push
mov
fcomp
sti
xor
shl
lea
aam
xlat
ret
inc
shr
aaa
in
mov
sti
cld
out
inc
ds
les
ds
call
xchg
jp
cmp
icebp
and
and
retf
outs
push
mov
call
sar
inc
out
push
push
xchg
outs
xchg
imul
inc
shl
xor
popa
xchg
loop
cmp
cli
mov
xor
call
xlat
mov
xor
(bad)
stc
cld
lods
sub
add
mov
add
cmovge
jb
mov
hlt
das
imul
ins
(bad)
stc
cmps
adc
jmp
ret
xlat
jle
dec
and
jo
nop
mov
sbb
mov
ret
add
cmp
jne
stc
mov
jnp
add
pop
push
mov
or
cwde
dec
(bad)
out
mov
fwait
aaa
jns
(bad)
and
jns
vdivsd
sub
mov
add
loopne
xchg
xor
into
and
inc
cmps
mov
outs
xchg
fdiv
push
jle
sub
push
or
fiadd
(bad)
and
mov
js
xor
push
in
sti
xor
nop
not
movs
clc
jecxz
xor
or
iret
test
cli
adc
and
xchg
jmp
inc
push
bound
aaa
test
push
add
lds
(bad)
push
mov
aas
pop
sbb
xchg
mov
test
and
enter
mov
inc
je
mov
jecxz
fst
mov
icebp
sar
ret
jmp
fisubr
cmp
ins
mov
mov
(bad)
das
scas
cwde
push
pop
cli
xchg
call
sbb
mov
jnp
call
sub
sub
lock
mov
cmps
stc
pop
sub
dec
sub
call
js
fcomp
inc
(bad)
xchg
scas
retf
jmp
cmps
imul
ds
cmp
cmp
xor
and
jnp
(bad)
or
popf
outs
pop
fisttp
sub
pop
in
jge
rcl
int3
pop
enter
inc
sar
adc
sub
or
loope
out
and
push
xlat
out
mov
add
outs
push
ror
pop
pop
mov
jb
jge
rcr
push
shl
(bad)
retf
jmp
imul
out
inc
xchg
rcr
inc
psadbw
mov
adc
mov
into
xchg
shl
dec
fisubr
sub
lock
inc
repz
call
(bad)
mov
or
out
inc
arpl
(bad)
btc
stos
push
cmps
pop
mov
push
daa
in
and
inc
jecxz
jns
jae
fcmovne
test
jle
pop
mov
or
inc
push
mov
add
iret
inc
or
loopne
xor
xchg
sub
inc
jbe
jg
fwait
sub
loop
adc
sbb
stos
mov
sbb
leave
sti
jl
push
(bad)
dec
sbb
int
loop
push
jmp
or
ret
test
or
(bad)
and
aas
sub
movs
mov
jne
xchg
sti
jns
xchg
out
xchg
or
sbb
aas
dec
inc
cmp
das
mov
xchg
jmp
pushf
ins
stc
or
fild
sbb
add
mov
inc
fs
push
mov
das
icebp
dec
arpl
lds
call
mov
mov
inc
stos
push
lea
mov
push
lahf
dec
pop
out
movs
sub
std
repnz
or
fistp
sbb
loop
xchg
daa
ins
cmp
dec
adc
neg
aas
lock
cs
(bad)
int
lods
shr
xor
lock
or
jae
and
repnz
push
cdq
ins
sub
and
add
call
mov
jae
sar
sub
jno
test
xor
dec
fxch
mov
mov
lea
inc
cmp
mov
mov
mov
inc
sub
jo
hlt
push
add
or
jmp
in
imul
jecxz
cwde
pop
xchg
mov
cmp
cmp
mov
sub
movs
add
fs
mov
cmp
pop
push
add
hlt
(bad)
clc
xchg
fdivrp
xor
aad
shl
addr16
jl
lods
mov
loop
(bad)
mov
fiadd
(bad)
pcmpeqb
xchg
icebp
mov
pop
ins
xchg
ins
movs
pop
fidivr
dec
movs
or
push
dec
inc
sub
or
pop
push
enter
mov
retf
xchg
enter
sbb
sar
data16
jae
aas
das
or
or
push
and
in
int
pop
pop
inc
int3
and
adc
sahf
mov
mov
call
xchg
(bad)
leave
std
leave
das
mov
stc
or
cld
cmp
repnz
jecxz
sub
adc
cmps
dec
out
mov
push
fwait
adc
jmp
or
in
mov
jne
mov
sahf
mov
fdivr
cli
add
aam
adc
inc
js
and
imul
fwait
(bad)
sub
cli
nop
scas
fsubr
add
pop
mov
mul
cmc
sub
(bad)
fisub
in
stos
cli
stos
xor
movs
outs
jle
mov
sub
and
repz
xor
dec
(bad)
mov
call
jns
fimul
jmp
ror
push
pop
(bad)
out
and
ins
mov
sbb
loopne
(bad)
out
xchg
mov
cmps
cwde
sub
sub
mov
scas
sbb
imul
sub
into
xchg
shr
or
sub
inc
jbe
jl
test
or
xchg
les
sub
inc
dec
and
fld
call
out
jle
out
test
ja
pop
sub
dec
fisub
sub
xchg
ja
or
or
push
mov
aaa
mov
pop
push
shl
aas
shl
pop
ds
jp
pop
cmp
out
int3
into
add
aad
cmp
neg
jae
inc
mov
xor
cdq
pop
jne
sbb
std
js
pop
inc
call
shr
xchg
aaa
pop
rol
scas
sbb
daa
int3
cmp
mov
ds
mov
and
es
xor
cld
xor
lds
int3
adc
(bad)
fisubr
xor
jp
les
or
pusha
push
fcom
mov
add
in
mov
nop
cwde
jmp
popf
addr16
push
inc
and
cmp
cmp
jnp
lods
dec
or
sbb
adc
or
call
rol
call
sar
sub
or
pop
dec
aam
inc
pop
inc
jmp
pop
(bad)
pop
pop
ror
pop
cld
(bad)
je
push
test
cmps
push
aaa
push
dec
xor
test
or
xor
mov
inc
jae
dec
mov
mov
int
aad
fnstsw
sbb
icebp
dec
push
xchg
mov
cmp
xchg
jmp
cld
inc
add
out
aas
gs
pop
call
iret
fldenv
xchg
frstor
(bad)
(bad)
ror
cdq
inc
xor
push
and
dec
dec
(bad)
xor
or
adc
inc
cmp
mov
cmp
or
test
pop
retf
sbb
and
neg
scas
lahf
out
cli
imul
xchg
push
sbb
xchg
les
fidivr
pop
cld
mov
mov
mov
mov
fiadd
mov
(bad)
das
rol
pop
mov
mov
cmc
aad
add
loopne
jbe
ins
cmp
mov
ss
fst
cli
(bad)
pop
enter
add
pop
popf
cmps
add
test
xchg
pop
xor
pop
les
stos
lods
lahf
stos
out
outs
or
pop
xor
sbb
cmp
add
hlt
pop
test
lock
out
mov
movs
and
push
sti
jl
cmp
xchg
stc
sahf
ficomp
jb
movs
es
out
add
sub
cmp
fwait
clc
rcl
jbe
std
mov
push
mov
dec
mov
fld1
retf
push
call
xlat
fwait
outs
xchg
and
or
pop
aad
popa
lds
push
xchg
jno
sar
ror
lods
aas
call
push
aam
fs
xchg
or
sbb
mul
test
out
push
adc
hlt
scas
in
jns
mov
pop
cmp
in
push
xchg
test
neg
fld
xchg
outs
stos
or
prefetcht1
(bad)
mov
test
outs
sahf
sbb
adc
push
pop
pop
mov
push
dec
idiv
sbb
adc
idiv
and
mov
idiv
stos
out
pop
aam
pop
outs
sbb
jle
pop
lahf
loopne
push
cmp
and
jl
cdq
pop
and
pop
leave
jl
dec
or
div
aam
jae
push
jl
cmps
mov
fadd
jecxz
aad
mov
dec
xchg
loope
or
(bad)
imul
xor
ret
and
sar
xchg
push
fisttp
sub
seto
(bad)
fsub
aaa
cmp
fisub
mov
leave
sub
cdq
icebp
ins
in
fisubr
cwde
sub
inc
pushf
adc
lods
dec
xchg
pmulhw
fcomp
fmul
shr
jae
cs
es
jge
pusha
aad
lods
push
pusha
adc
add
inc
adc
(bad)
shl
loopne
cmp
add
mov
pop
cmc
inc
cmc
pop
stc
mov
or
gs
inc
inc
pop
loopne
inc
sbb
jp
push
mov
jo
dec
add
jo
js
out
in
stc
fnsave
mov
jmp
xor
adc
ja
pusha
in
mov
fld
in
adc
mov
sahf
xlat
nop
add
cmp
int3
dec
pop
mov
mov
loopne
mov
push
mov
sahf
xor
and
in
inc
std
jnp
popf
cmp
dec
cs
mov
or
fsubr
cmp
dec
cmp
add
mov
imul
mov
arpl
test
rcr
push
mov
repz
push
addr16
and
pop
pop
arpl
push
in
xchg
cld
or
inc
jb
das
push
int
into
ss
adc
sti
sbb
imul
sbb
xor
idiv
out
jl
inc
push
cwde
pusha
cmpps
cmp
test
sbb
cdq
pusha
or
sub
outs
push
call
leave
pop
mov
jmp
mov
dec
pop
and
pop
pop
dec
dec
scas
cmp
and
outs
loopne
fisttp
pop
and
sbb
repz
pop
aas
shl
adc
outs
xor
retf
inc
add
push
sub
or
sti
rcl
jmp
fsubr
fnstsw
jb
les
clc
add
rol
push
aas
pop
xor
divps
call
mov
iret
pushf
dec
sub
mov
test
js
stc
dec
(bad)
jmp
pop
out
int
into
popf
shr
in
mov
sti
add
mov
add
inc
push
adc
push
fwait
or
ret
sbb
cli
std
imul
dec
pop
test
dec
jne
call
push
hlt
jbe
in
movs
int3
movs
pop
cmp
cmp
xor
(bad)
fwait
mov
cmp
sub
mov
scas
inc
fdivr
mov
cwde
or
pop
sub
mov
loop
or
(bad)
cwde
scas
sbb
hlt
xor
sub
xchg
(bad)
push
cdq
pop
or
xor
xchg
cwde
pushf
jns
scas
call
fwait
pusha
mov
inc
mov
push
lds
or
dec
into
pop
cdq
dec
mov
and
xchg
dec
aas
add
cmc
add
sbb
adc
mov
xchg
mov
aas
fs
xchg
adc
cli
ror
or
call
push
xlat
stos
push
cmps
out
in
xor
shr
adc
pop
sub
in
inc
loope
sbb
(bad)
mov
mov
enter
mov
ds
int3
sub
test
leave
mov
stc
push
into
inc
mov
aaa
and
push
pop
xchg
pop
push
add
xor
stos
sub
jno
repz
aaa
pop
mov
xor
je
ins
movs
xor
popa
push
stos
inc
fimul
mov
(bad)
jecxz
sbb
repnz
pop
scas
mov
mov
call
mov
aas
or
push
mov
rol
jne
sbb
cld
rol
movs
icebp
neg
cwde
mov
aas
(bad)
pop
retf
dec
cli
sahf
je
push
(bad)
ret
cs
ret
mov
xor
icebp
inc
cmp
cld
mov
xchg
xchg
(bad)
(bad)
sub
push
sahf
div
cmp
clc
pop
(bad)
cmps
fsubr
and
out
mov
mov
loope
sbb
sbb
mov
enter
int
xchg
aad
in
(bad)
movs
jae
sar
and
mov
cdq
ja
icebp
and
add
dec
inc
mov
movs
jmp
das
mov
iret
out
int3
cdq
adc
dec
xchg
movs
jb
xor
xor
sub
jbe
aam
cmc
jne
pop
into
loopne
sbb
xchg
std
or
stc
sbb
cli
aas
mov
sbb
movs
out
inc
fdivr
xor
es
adc
cmps
shl
cmp
sbb
dec
aam
and
hlt
ss
add
cld
test
(bad)
cmps
ficom
aas
pusha
xor
mul
test
dec
add
daa
xor
push
sbb
into
test
(bad)
jnp
(bad)
or
sbb
push
scas
mov
lea
inc
push
aas
call
xor
rol
lea
or
out
mov
lock
add
out
popf
outs
cmp
sbb
mov
les
int3
push
xchg
or
in
mov
push
leave
adc
in
inc
in
cmp
call
mov
ja
int
mov
ins
ffree
neg
inc
imul
aam
mov
shl
test
aad
or
sub
pop
xchg
inc
mov
lock
cmp
jbe
aaa
push
adc
lods
lods
fs
cld
cmps
not
jecxz
push
test
sbb
and
(bad)
push
nop
ss
push
es
inc
jecxz
fs
sbb
(bad)
inc
xor
mov
sbb
inc
cmp
mov
out
out
loopne
adc
loop
add
repz
xor
mov
repnz
dec
sahf
lods
jmp
mov
inc
les
in
dec
scas
push
and
test
in
adc
arpl
shl
loopne
lahf
mov
xchg
popf
mov
cmps
xor
mov
out
or
sub
xchg
jg
sahf
mov
pushf
add
xor
in
scas
cmp
pop
popf
lods
adc
leave
outs
mov
fisubr
sbb
mov
jo
cdq
scas
movs
jmp
ins
or
push
sbb
dec
push
jno
dec
xor
aad
mov
stos
fcmovbe
sti
(bad)
clc
jae
mov
mov
pushf
adc
rcl
clc
aas
aad
inc
mov
mov
ret
push
sub
aas
inc
jae
sahf
in
or
or
imul
cmp
push
jno
push
mov
nop
je
mov
sub
sbb
ficom
out
cmp
loope
pop
jbe
adc
pop
xchg
sbb
mov
push
hlt
add
dec
movs
(bad)
mov
lea
in
push
mov
inc
push
sub
inc
and
shl
gs
cs
jg
icebp
mov
retf
mov
rol
adc
ss
arpl
xchg
mov
jne
or
retf
cwde
call
sti
add
sub
mov
bound
rcr
jmp
mov
dec
shl
xchg
data16
(bad)
leave
je
(bad)
inc
jecxz
mov
mov
mov
mov
sbb
je
cmp
fild
mov
xchg
fidiv
into
xlat
pop
xchg
pop
not
add
les
ret
adc
arpl
inc
aam
sar
xchg
jmp
icebp
cmp
mov
lock
retf
mov
mov
adc
sub
push
jecxz
dec
popf
sar
cmc
loop
sub
hlt
cld
and
lea
xchg
cmp
add
lods
xor
in
loope
scas
in
add
or
push
mov
push
fmul
jae
aaa
rcl
add
push
aaa
dec
and
add
pop
scas
ror
pop
mov
push
dec
pop
stc
les
and
xor
jmp
or
mov
repnz
xchg
addr16
call
dec
gs
shl
ss
int3
aas
aas
jnp
shl
sub
shl
movs
xor
pop
jl
stos
sbb
addr16
outs
test
cmps
add
or
sub
xchg
fld
lods
dec
and
mov
aas
sti
add
call
js
cmp
jnp
aas
repz
fwait
xchg
stc
fmulp
ins
mov
repnz
or
cwde
popf
sbb
adc
cmps
ja
outs
sti
mov
push
jo
iret
xor
add
ss
nop
out
lahf
cmp
xchg
mov
fsubrp
or
ja
call
stos
pop
dec
rcr
out
xchg
sbb
out
cmps
daa
push
adc
lods
push
retf
jbe
mov
ins
sahf
mov
in
xchg
test
add
out
and
imul
sub
jp
inc
jnp
sub
xchg
mov
mov
jge
xchg
clc
mov
imul
retf
test
jmp
addr16
and
lods
test
adc
test
imul
das
(bad)
out
jno
jge
movs
in
out
cld
mov
lahf
into
ins
sti
xchg
(bad)
in
rcl
int3
cmp
jge
sbb
push
dec
(bad)
mov
mov
shl
cdq
sub
ret
mov
shl
icebp
scas
or
fist
sub
sub
ds
dec
inc
repz
sbb
mov
pop
fnstenv
xchg
mov
dec
call
ss
(bad)
ror
outs
out
or
aas
lock
ins
and
pushf
icebp
aam
repz
les
jb
xor
sar
test
or
cli
test
dec
jp
jmp
movs
mov
jmp
(bad)
mov
and
(bad)
cmp
pop
xchg
and
push
inc
mov
sub
sbb
inc
sbb
jge
xchg
fnstsw
push
pop
jle
daa
js
and
popf
pop
lods
into
bound
mov
xchg
in
jbe
mov
xchg
lods
add
ror
(bad)
adc
adc
mov
pop
out
jg
inc
mov
mov
jo
push
inc
in
clc
lods
xchg
add
adc
enter
add
sbb
pop
pop
test
push
or
iret
test
jecxz
xchg
mov
popa
adc
pop
or
(bad)
mov
or
cdq
pop
inc
fmulp
pusha
push
mov
mov
(bad)
aam
pop
add
in
shl
or
addr16
push
sti
push
mov
push
mov
fimul
out
out
or
xchg
xchg
xor
and
mov
addr16
outs
jmp
mov
add
mov
jmp
mov
fs
push
and
(bad)
fcmovb
pop
or
push
dec
adc
xchg
call
dec
or
(bad)
mov
inc
mov
cmp
fwait
xchg
push
test
jp
inc
sbb
aas
sub
push
inc
(bad)
gs
pop
rol
xchg
aas
lock
jnp
cmc
mov
mov
mov
jmp
fsub
cmp
mov
imul
add
call
xchg
cwde
fs
jp
mov
push
xchg
(bad)
sbb
lods
add
jo
or
push
imul
adc
gs
jmp
xchg
or
cmp
jmp
mov
inc
add
(bad)
adc
lea
js
mov
pop
jle
loop
in
cmps
sbb
dec
jae
enter
add
pop
mov
sub
popf
sbb
inc
mov
daa
push
add
xchg
adc
jmp
push
leave
mov
adc
arpl
xchg
inc
dec
pop
fcomp
lock
fld
pop
addr16
mov
mov
mov
loopne
sbb
leave
inc
add
nop
pop
shr
(bad)
repz
jl
add
out
lods
stos
rcl
fbld
add
call
lahf
bound
mov
xor
mov
mov
or
iret
(bad)
mov
dec
dec
ins
ja
(bad)
sbb
adc
inc
imul
stos
sbb
jmp
xor
xchg
addr16
xlat
jbe
daa
test
jle
sbb
mov
push
jge
test
push
jl
cwde
push
test
ins
push
sbb
inc
sub
int
inc
pop
push
pop
ja
leave
sbb
bnd
repz
add
jbe
call
cdq
inc
fwait
mov
iret
inc
mov
outs
jmp
lods
push
sbb
or
inc
lods
jae
xchg
daa
and
dec
dec
loope
push
movs
addr16
xchg
jmp
jl
sbb
ret
fcom
aam
inc
jnp
push
mov
sti
mov
jmp
nop
adc
sti
xor
pop
xchg
ja
mov
cmc
out
mov
or
xchg
or
sub
cdq
or
inc
sub
std
rcr
pop
gs
inc
xchg
pop
std
in
std
mov
sahf
repnz
in
and
mov
push
ret
xor
test
mov
test
xchg
leave
ficom
neg
ins
push
xchg
jmp
inc
mov
push
sbb
xchg
dec
push
popa
push
jo
dec
mov
int3
fistp
sbb
and
icebp
cmp
repz
or
iret
inc
mov
cwde
pop
mov
test
(bad)
daa
dec
cs
xchg
movs
mov
lea
popf
inc
repz
test
fld
sub
mov
pop
ret
je
dec
leave
dec
cdq
sub
fild
ret
imul
es
int3
adc
xchg
dec
fs
mov
cmc
call
sbb
movs
fs
push
sbb
sub
stos
pop
mov
enter
dec
inc
das
aam
sbb
jne
test
mov
out
mov
jge
sbb
inc
ret
xor
ret
adc
mov
in
ja
xor
arpl
push
push
jb
and
addr16
cmp
or
inc
jp
movs
xchg
sub
mov
xor
loope
mov
xor
or
rcr
mov
movs
pop
fnstenv
icebp
xor
pop
pop
pop
je
pop
(bad)
dec
adc
clc
movs
adc
mov
sahf
xor
test
ins
mov
or
fsubr
jge
or
pop
sbb
loop
mov
fwait
jle
push
mov
cmp
and
std
sar
xchg
scas
jbe
xchg
sub
and
and
sar
mov
sti
cmc
dec
(bad)
jecxz
stos
cld
sbb
in
mov
ds
dec
mul
pop
test
xor
pop
inc
xchg
(bad)
jle
pop
or
aas
sar
adc
jbe
add
cmps
(bad)
add
xchg
xchg
iret
add
aaa
loopne
(bad)
in
dec
mov
(bad)
dec
lds
jo
mov
xor
cmp
stos
mov
jmp
lods
daa
xchg
inc
sub
push
fmul
fiadd
cmp
jb
aam
xlat
iret
(bad)
jg
test
mov
(bad)
(bad)
cmp
sar
cs
scas
jge
sub
adc
xchg
cmp
sti
dec
mov
sub
fst
pop
addr16
xchg
dec
icebp
shl
popf
dec
or
and
popf
and
call
cmp
lea
imul
cmc
(bad)
in
jg
sbb
push
push
mov
sub
jle
or
aas
mov
leave
xchg
into
dec
add
mov
ficomp
rep
iret
mov
xor
mov
push
push
pop
imul
std
xlat
mov
xor
dec
std
fnsave
jns
inc
adc
ins
pop
pop
les
xchg
rcr
add
or
sar
addr16
dec
pusha
ret
dec
(bad)
mov
xor
xlat
dec
mov
mov
mov
cdq
cmp
mov
mov
das
jmp
mov
push
inc
dec
nop
ret
outs
jmp
mov
sub
pop
rcr
xor
mov
pop
jns
jl
mov
aad
movs
mov
or
cwde
pop
adc
cmp
or
dec
shr
xor
add
add
cmp
outs
out
inc
popa
rcr
shl
push
(bad)
mov
rcr
hlt
xor
mov
cwde
ss
add
ins
pusha
inc
jb
(bad)
cvtdq2ps
adc
add
call
(bad)
jmp
imul
sbb
inc
aam
dec
sbb
stos
push
in
stos
je
aaa
mov
and
cdq
test
xor
mov
cld
in
repz
cmp
cdq
imul
cmp
loopne
sbb
inc
fcmovbe
jmp
aaa
(bad)
mov
xchg
repnz
pop
inc
fisttp
and
mov
call
sub
out
mov
xchg
mov
sbb
xor
dec
adc
iret
test
jmp
aam
ins
dec
inc
adc
jmp
add
push
adc
pop
and
test
cmp
add
mov
fisttp
scas
or
icebp
mov
daa
je
sub
or
xor
sub
xchg
int3
lock
cwde
push
mov
jo
aad
jl
fwait
popa
loope
mov
int
sti
int3
cld
ficom
and
test
dec
lods
repz
jno
mov
ror
inc
or
pop
in
mov
bound
mov
add
cmp
dec
sti
mov
inc
xchg
cmp
jae
dec
and
ins
inc
scas
cmp
pop
dec
hlt
pushf
xchg
and
push
push
imul
aas
add
add
sub
lods
mov
test
ficom
and
add
pop
int
xchg
mov
inc
cmp
ret
shl
rcr
add
lods
imul
and
out
or
ds
push
jl
fdiv
sbb
sub
into
pop
in
sbb
cmp
mov
test
jmp
sub
out
inc
icebp
fst
mov
in
sub
loop
and
push
sub
dec
movs
pop
mov
mov
call
shl
dec
out
mov
je
dec
test
lahf
in
addr16
xchg
cmp
aas
pop
mov
(bad)
cmps
(bad)
push
into
mov
jo
xchg
mov
lahf
jb
test
aam
cmp
mov
xchg
sahf
mov
(bad)
jg
sbb
mov
jmp
out
adc
mov
shl
mov
or
cld
out
pop
or
pop
cmp
loopne
add
mul
imul
fbld
dec
mov
dec
jmp
mov
add
pop
fldcw
(bad)
lock
icebp
lahf
sub
shl
add
mov
add
jno
and
cmp
(bad)
movs
cmp
stc
test
dec
jae
mov
cmp
pusha
xchg
mov
call
mov
test
(bad)
fidiv
call
adc
lahf
push
mov
and
ja
mov
addr16
cmp
pop
shl
repz
out
mov
aas
f2xm1
aaa
aam
das
call
in
fcomp
adc
cwde
xor
inc
adc
imul
out
mov
sbb
fcmove
(bad)
sti
mov
pushf
imul
push
ds
(bad)
xchg
pop
xchg
pusha
cs
xchg
cs
inc
fild
mov
sbb
sar
xor
(bad)
and
push
or
popa
das
adc
sti
mov
push
inc
cmp
cmp
out
int
mov
sub
inc
pop
addr16
xchg
popa
mov
scas
dec
cmp
div
mov
(bad)
fs
popf
out
mov
in
inc
pushf
data16
dec
fistp
lock
jmp
out
jo
data16
mov
lahf
cli
mov
sbb
rol
xchg
pushf
fld
outs
or
or
fst
rol
shl
dec
mov
adc
adc
cmp
ret
xchg
repz
pop
cmp
adc
shr
into
int
aaa
scas
jmp
add
xchg
cmp
jmp
jmp
clc
js
sub
stos
dec
ret
sbb
adc
xor
xor
inc
(bad)
cmp
loopne
lea
mov
pop
mov
fisubr
sbb
pop
mov
cmp
ins
mov
outs
es
push
sub
jmp
jl
xor
lods
cmp
add
lds
mov
mov
dec
push
lea
inc
dec
cmp
mov
xchg
loopne
add
fiadd
dec
in
scas
or
mov
lods
or
rcl
clc
sub
pop
pop
mov
ja
pop
ins
mov
repz
aam
xor
enter
push
rcl
lock
ja
pop
sbb
mov
inc
lods
or
mov
cld
push
clc
adc
into
fbstp
add
(bad)
or
xlat
xchg
cmps
adc
inc
inc
jno
xchg
jle
rol
mov
div
inc
xor
dec
in
dec
stc
neg
imul
jne
xor
xchg
retf
adc
aaa
rcl
movs
movs
test
or
daa
adc
fstp
cmp
xchg
call
(bad)
leave
stos
pop
mov
ret
jmp
lahf
test
jno
xor
pop
aaa
mov
lods
fidiv
cvttps2pi
pushf
adc
sete
nop
add
ja
mov
cmps
(bad)
aad
add
loopne
cmp
mov
xchg
fs
fimul
jns
sbb
outs
ficomp
jmp
mov
sbb
sbb
mov
fcomp
daa
jmp
cmp
xchg
imul
ds
xchg
xchg
inc
or
push
mov
adc
mov
std
push
fmul
jl
pop
fs
push
dec
inc
stc
outs
std
popf
(bad)
ds
xor
outs
xchg
sbb
xchg
loopne
fstp
dec
das
adc
mov
inc
out
imul
retf
xor
mov
xchg
jns
out
aas
and
add
and
push
(bad)
cmp
mov
outs
test
cs
mov
in
mov
vmwrite
cld
stos
dec
cmp
cmp
cmp
xor
ss
xor
push
add
inc
test
xor
pop
pop
cld
jmp
enter
cmp
or
and
inc
ds
sti
cmp
ja
retf
xor
jmp
fldcw
pop
push
aaa
xchg
lods
mov
mov
cmc
xor
jecxz
or
outs
adc
cmp
scas
xor
push
enterw
div
(bad)
mov
jecxz
sbb
(bad)
inc
mov
and
dec
jne
mov
pop
out
loopne
mov
retf
popf
xor
push
push
dec
nop
xchg
dec
mov
loop
and
jecxz
cmc
in
sbb
aas
in
mov
cmp
fldcw
jge
lods
out
addr16
xor
shl
repnz
int
js
int3
pop
js
inc
sti
inc
ins
jae
aas
jne
sbb
rcr
add
xor
outs
mov
scas
add
icebp
pop
sbb
cdq
add
(bad)
cmp
(bad)
xor
ja
fpatan
dec
inc
or
popa
and
xchg
sub
push
cmp
sub
aaa
mov
mov
jmp
nop
sbb
mov
push
adc
aas
stos
xchg
pop
xlat
outs
xchg
or
add
mov
popa
idiv
in
pop
sub
inc
stos
dec
and
dec
fs
(bad)
sub
inc
push
cmp
pop
xor
push
dec
cmc
pop
or
out
cli
sbb
ins
imul
std
jle
pop
cmps
mov
lds
push
ins
stos
and
mov
mov
(bad)
jns
dec
stc
inc
cmp
dec
mov
cmc
jbe
or
push
jle
add
lods
test
ins
hlt
sub
add
int
jmp
xchg
jge
jecxz
inc
fdivr
(bad)
loopne
sub
adc
mov
push
leave
aaa
sub
sar
push
sub
add
icebp
mov
mov
sub
loop
cs
fild
scas
les
dec
bound
call
push
or
sbb
arpl
daa
cmp
xlat
pusha
adc
mov
loope
imul
add
hlt
pop
pop
jl
xor
mov
(bad)
fidiv
mov
or
jp
lods
sbb
mov
stos
cmp
test
add
dec
scas
fiadd
sar
jecxz
gs
inc
pop
pop
push
mov
push
mov
fiadd
mov
pushf
xor
pop
popa
mov
mov
push
cmp
and
ret
adc
xor
ins
dec
mov
push
lock
addr16
lds
and
cwde
mov
jo
or
ins
mov
mov
sub
std
popa
outs
jnp
imul
sub
loope
dec
aas
sti
xor
sub
push
mov
pop
ds
rcl
pop
outs
(bad)
jg
test
retf
retf
sbb
mov
outs
iret
add
fsubr
sub
xchg
bound
inc
add
add
stos
lea
mov
retf
and
ret
mov
push
mov
jmp
xor
iret
mov
das
popa
mov
test
shl
xor
inc
fs
dec
mov
inc
pop
stos
jo
add
cmp
xor
loope
sbb
jg
mov
rcr
(bad)
mov
mov
jle
ds
lods
je
push
adc
(bad)
out
xchg
out
rol
jbe
mov
mov
mov
add
mov
imul
and
sbb
pop
and
sar
mov
xchg
inc
dec
inc
inc
enter
outs
or
jmp
enter
and
aas
mov
sub
out
sbb
(bad)
bound
mov
cmp
inc
and
loope
ja
push
ins
sub
sahf
bnd
dec
mov
add
inc
cmp
in
lahf
cld
hlt
gs
je
movs
sbb
test
jnp
add
sub
loop
mov
mov
cdq
sub
out
out
nop
sar
out
jne
ins
jmp
into
sahf
dec
cmp
mov
imul
punpckhwd
lock
push
mov
dec
and
jne
sahf
mov
jae
imul
xchg
outs
dec
hlt
fcmovbe
or
sub
push
int3
push
frstor
xor
jp
popa
dec
call
retf
sbb
scas
std
pop
pop
jns
test
mov
paddw
ins
ror
adc
rol
dec
xor
sbb
out
icebp
daa
enter
fcomp
xor
add
sub
xchg
mov
stc
(bad)
iret
sub
lea
pop
stc
aas
mov
test
sbb
and
daa
xor
lock
repz
lea
push
xchg
pop
cmp
or
stc
hlt
sahf
xor
jmp
inc
mov
outs
fsubr
shl
mov
addr16
adc
mov
sbb
retf
and
lds
dec
inc
mov
jns
adc
and
add
add
test
icebp
pop
push
loopne
push
inc
jns
pusha
fidiv
cmp
cmp
loope
dec
data16
leave
push
xor
cmp
pop
push
inc
(bad)
lock
xchg
in
bnd
popf
xor
cmp
xor
out
clc
xor
gs
or
shl
ret
xchg
push
dec
in
jae
cmp
push
mov
icebp
je
jne
adc
imul
fild
jmp
inc
and
loopne
fmulp
mov
cmp
mov
adc
test
icebp
xchg
cmp
stc
outs
push
popf
adc
sbb
jmp
xchg
sub
(bad)
push
out
mov
or
xchg
jns
mov
xor
mov
les
and
adc
and
nop
aam
call
or
enter
and
push
fisub
popa
mov
mov
xor
paddd
loopne
movs
mov
jle
out
int3
pop
mov
cmp
out
mov
push
gs
xor
add
test
cmp
in
pop
cld
or
jne
pop
inc
mov
sub
imul
jb
mov
(bad)
fxch
in
sbb
mov
push
or
pusha
adc
std
add
out
call
mov
ret
mov
jmp
scas
(bad)
fbstp
xor
hlt
je
fs
dec
xchg
pop
pop
mov
push
push
and
movs
dec
or
inc
pusha
dec
in
sub
jl
xor
add
jno
cmp
push
mov
inc
push
mov
call
pop
mov
cmc
retf
xchg
das
(bad)
mov
push
repz
shl
xchg
or
mov
sbb
dec
(bad)
clc
ret
xchg
cmp
test
stc
or
jp
cs
fistp
(bad)
(bad)
pushf
movs
xor
packuswb
mov
test
mov
dec
sbb
adc
(bad)
xchg
inc
dec
xchg
fdiv
leave
imul
and
mov
mov
lods
mov
ret
xor
xchg
repz
ret
cmps
mov
cdq
cmc
and
(bad)
cmp
rcl
enter
addr16
rcl
sub
push
lods
jmp
xchg
dec
adc
sub
sahf
(bad)
in
nop
xor
je
or
out
add
imul
inc
(bad)
inc
es
mov
sbb
int3
cmc
loope
sbb
sub
lods
mov
fisttp
mov
in
scas
adc
ret
cmp
dec
jnp
push
xor
xchg
loop
fbstp
in
cs
shl
bound
leave
xchg
cmp
cs
(bad)
lds
pop
add
rcl
mov
and
jmp
daa
std
out
rcl
sub
sahf
xchg
enter
push
std
jnp
xlat
jmp
xchg
jle
add
jb
xchg
mov
jns
not
push
sub
pop
aas
mov
das
jl
mov
inc
pop
xchg
lds
and
fidiv
pop
cmc
xchg
pop
stos
jbe
aam
adc
ds
lahf
cmc
xor
sbb
cli
sub
push
jmp
and
lock
gs
mov
sbb
dec
mov
sbb
pop
add
les
cmp
pop
mov
xchg
pop
push
mov
fist
xchg
dec
push
retf
mov
inc
cdq
push
mov
popa
xchg
xor
xchg
cmp
out
cli
mov
or
in
mov
nop
(bad)
ret
xlat
std
outs
call
adc
jecxz
cs
pop
sbb
inc
int3
retf
cmp
sbb
iret
xchg
jg
movs
and
mov
push
(bad)
mov
and
popf
dec
shl
hlt
pop
xchg
jle
xor
jmp
ja
imul
stos
repz
fwait
(bad)
fld
sbb
ja
dec
jmp
aas
ins
lods
outs
mov
cmp
xor
icebp
mov
dec
mov
loope
or
inc
dec
aaa
aad
imul
es
shr
sbb
cwde
loopne
cs
cmp
imul
dec
test
outs
push
xor
mov
mov
jbe
in
pop
adc
aad
cmp
mov
sbb
jae
retf
jmp
aaa
out
sub
add
das
jo
mov
mov
and
adc
dec
lahf
mov
in
popa
inc
mov
in
xchg
ds
add
or
daa
push
mov
and
push
sbb
xor
fisttp
inc
jne
fs
es
sbb
out
int3
mov
adc
fdivr
inc
xchg
sbb
mov
test
scas
cmp
mov
xchg
stc
jmp
pushf
jne
cmp
add
data16
into
(bad)
jl
or
lahf
cdq
ja
and
cmp
push
jle
(bad)
cmp
pop
ins
scas
ret
push
aad
cmp
stos
add
shl
cld
out
push
sbb
sar
fs
adc
imul
icebp
imul
inc
sub
push
mov
outs
dec
add
push
sti
shl
(bad)
adc
mov
imul
add
jnp
out
repz
fnsetpm(287
test
call
add
bound
fdiv
dec
push
add
dec
nop
scas
pop
jmp
retf
sbb
jg
movs
mov
or
or
mov
or
shl
movs
xchg
mov
jmp
cs
cmps
jbe
aas
jge
enter
mov
fwait
xor
fwait
in
xchg
sub
or
fisubr
pushf
sbb
icebp
mov
nop
aas
xor
not
retf
test
and
xchg
adc
bound
ja
test
lods
mov
add
ins
pusha
mov
cmp
les
adc
fcomi
dec
and
rcr
std
push
fwait
xor
pop
add
add
fs
cli
add
out
dec
rcr
sub
xchg
adc
push
sub
fbstp
dec
clc
push
in
inc
hlt
or
jp
jg
cmp
push
push
int
push
mov
out
pop
daa
xlat
ds
enter
in
dec
dec
jl
add
xor
pop
mov
aam
imul
out
sar
retf
mov
sbb
fld
pop
cmp
add
add
jge
test
aam
dec
xchg
shl
mov
xor
sub
and
mov
mov
push
sbb
sti
mov
je
mov
mov
aad
jl
push
push
hlt
mov
and
push
fstp
iret
add
and
int3
stos
adc
jg
adc
pop
fdiv
or
push
aaa
lds
inc
add
add
scas
retf
sub
pop
or
test
push
mov
enter
pop
jnp
sub
adc
or
(bad)
add
pop
xchg
or
fnstsw
sub
or
sub
call
or
ror
inc
sbb
ror
je
or
ins
stc
mov
scas
mov
lods
(bad)
mov
jp
push
gs
dec
xchg
push
scas
mov
out
xlat
cmp
adc
idiv
pop
lock
mov
rcr
movs
jge
in
jle
jg
enter
and
fild
not
xor
xchg
push
sub
push
xchg
xchg
push
pop
test
jmp
push
push
je
loop
fistp
jmp
add
cmp
mov
mov
inc
out
mov
out
dec
jle
cli
ja
(bad)
dec
mov
jge
or
pop
pop
jl
pushf
mov
and
(bad)
inc
in
gs
push
scas
pop
mov
xor
inc
icebp
push
popa
arpl
clc
mov
(bad)
icebp
into
ds
mov
push
aam
pop
push
pop
push
jecxz
mov
sbb
nop
hlt
or
or
add
fldenv
lock
push
loope
test
pop
cmp
stos
ret
and
inc
inc
cwde
xchg
lods
int
jg
out
mov
imul
pop
fidiv
inc
call
xchg
xchg
mov
loop
jns
jb
or
(bad)
xor
jns
sub
mov
xchg
mov
addr16
loopne
fistp
sar
push
and
leave
pop
mov
xchg
adc
jg
inc
pop
push
sbb
mov
aad
int3
int
push
or
arpl
stos
lds
jno
in
or
jno
loope
mov
pop
xor
and
mov
out
(bad)
(bad)
add
js
sub
and
or
xchg
stos
inc
scas
scas
lods
jg
or
cwde
aam
rol
push
out
(bad)
cld
mov
scas
push
lds
pop
and
mov
retf
lods
std
jbe
shr
scas
xchg
inc
loopne
cmp
adc
push
(bad)
popf
mov
scas
cmc
data16
cmps
cmc
(bad)
push
jns
shr
dec
aaa
or
ret
add
or
mul
jbe
xchg
xor
xchg
mov
xlat
cmp
mov
popf
jle
push
movs
adc
pop
lahf
mov
pop
dec
rcr
add
push
out
sbb
clc
mov
stos
cld
ins
dec
jo
push
sub
in
sbb
inc
and
dec
mov
mov
push
xchg
lahf
scas
pop
(bad)
fisttp
sahf
pop
inc
cld
sbb
out
pop
push
outs
pop
aas
(bad)
mov
aaa
addr16
out
inc
jnp
ins
xchg
out
iret
shr
mov
in
in
pop
pop
inc
enter
sub
(bad)
xor
or
in
aas
test
mov
push
mov
std
xchg
jne
push
adc
mov
or
inc
ja
push
scas
pop
hlt
icebp
fstp
out
test
test
xchg
push
scas
daa
pop
js
pop
enter
fsub
test
or
push
not
sub
hlt
push
mov
jns
pop
les
jae
inc
jns
mov
push
adc
push
dec
mov
and
jns
aaa
sbb
mov
jg
xchg
sbb
dec
cmp
test
call
mov
xor
(bad)
sbb
(bad)
fdivr
pop
xchg
jns
adc
jp
xchg
cmps
shl
das
mov
or
outs
cld
push
loop
add
inc
ss
int
inc
mov
mov
push
(bad)
sbb
lock
gs
pop
pop
js
sbb
cmp
test
and
jne
mov
mov
sub
xchg
in
lahf
and
or
out
cmp
sub
and
fwait
cdq
jecxz
push
sub
push
sub
imul
sub
int
imul
jne
jle
xor
aad
ins
jl
(bad)
mov
xor
mov
shr
es
pop
jae
lds
add
sbb
lock
shr
push
jmp
mov
(bad)
pop
mov
jne
push
(bad)
les
jns
fwait
psubb
add
clc
cmp
jp
cwde
leave
cld
xchg
dec
movs
(bad)
jnp
adc
(bad)
dec
icebp
mov
xchg
jle
lahf
es
fcomp
jmp
sbb
adc
or
call
mov
nop
inc
movs
mov
cld
stc
idiv
xor
pop
sub
(bad)
adc
lea
clc
loope
out
pop
mov
pop
aas
cmps
call
mov
xchg
imul
pushf
mov
std
rcl
xchg
push
inc
adc
add
out
movs
and
test
mov
fild
adc
ret
retf
bound
xor
add
mov
dec
xchg
add
out
sub
out
stos
hlt
inc
and
test
rol
popf
retf
loope
jno
hlt
pusha
arpl
mov
dec
pop
das
(bad)
stc
in
ins
mov
hlt
pop
js
shr
les
xchg
mov
cwde
int3
outs
jbe
dec
xor
iret
sbb
imul
rcr
sub
lods
retf
mov
(bad)
fcomp
imul
nop
jecxz
fidiv
nop
fist
jno
or
add
arpl
mov
sbb
test
fcmovbe
pop
fst
out
cmps
xchg
lea
scas
add
jge
imul
adc
mov
mov
in
fwait
cmp
dec
test
nop
sbb
loope
sahf
cld
test
cmovs
ins
sub
mov
xor
jg
ror
adc
fsubr
and
sbb
cld
pop
es
jmp
push
jp
push
cmps
adc
mov
test
popf
inc
sbb
dec
and
in
dec
sub
cmp
aam
lahf
ja
xchg
push
sub
fs
ins
mov
fsubr
mov
cmp
ins
in
jmp
sbb
test
retf
mov
rcl
adc
test
pop
push
scas
ficomp
into
mov
lea
cli
fisubr
adc
or
xchg
mov
fwait
aaa
jnp
js
aaa
xor
dec
lds
(bad)
repnz
aaa
mov
ins
dec
data16
jle
xchg
or
imul
dec
pushf
push
add
and
idiv
enter
xlat
pop
iret
out
or
inc
in
movs
cmp
test
push
push
xchg
xor
or
mov
adc
mov
push
mov
dec
pop
fistp
mov
in
movs
xor
jle
ins
sbb
adc
sub
leave
fs
mov
dec
popa
jmp
pop
xor
dec
xchg
cmp
jo
xor
ja
xchg
test
push
adc
xor
mov
or
xor
(bad)
loope
imul
loopne
aad
mul
jmp
adc
push
and
repnz
or
inc
xchg
pop
adc
retf
cmp
movs
sbb
dec
retf
mov
cld
out
fmul
cmps
fmul
nop
cld
pop
inc
imul
jo
dec
xchg
lea
push
icebp
push
or
cli
sbb
adc
push
jb
mov
mov
xchg
pop
sub
out
stos
jno
addr16
add
aas
out
je
or
(bad)
pop
jb
int3
out
jnp
xor
lea
push
icebp
je
sbb
cmp
sbb
iret
gs
cs
std
adc
adc
jo
(bad)
xor
popa
dec
pop
cmps
and
rol
xor
(bad)
imul
xlat
pushf
gs
cmp
pushf
jae
cmp
jnp
popa
inc
leave
lahf
mov
xor
xor
add
push
test
jmp
inc
mov
test
sbb
xchg
mov
ss
in
cmp
fld
push
sti
cmc
fldcw
cmp
pusha
jns
xchg
pop
lds
sbb
xor
shl
inc
pop
lods
shl
push
sub
je
cs
dec
pop
push
push
popa
scas
xor
mov
out
scas
and
adc
int
out
sub
hlt
out
loopne
mov
jb
fdivrp
mov
pop
push
stos
pop
sbb
ins
out
push
imul
pop
mov
mov
pop
or
inc
add
pop
frstor
lods
mov
movs
(bad)
out
and
hlt
repnz
pop
adc
cmp
sbb
aaa
aaa
mov
sbb
inc
mov
jmp
xchg
jb
fwait
retf
nop
jbe
cmp
or
mov
test
adc
xchg
cmp
inc
repz
fdivr
or
aam
xor
arpl
ret
mov
sahf
in
rcr
add
lods
fst
dec
inc
or
sbb
hlt
xchg
cmp
push
(bad)
fidiv
jmp
inc
xor
in
and
adc
xchg
sahf
shr
mov
mov
sub
jae
out
or
jbe
arpl
imul
mov
ds
and
fidivr
mov
popf
mov
or
xchg
push
imul
mov
cmps
clc
movs
out
xor
inc
cli
int3
sbb
iret
cdq
mov
iret
call
jle
mov
xchg
jmp
mov
(bad)
or
or
sti
jge
call
xchg
mov
add
enter
pop
popa
mov
xchg
pop
xchg
cld
xor
jg
jecxz
inc
out
mov
aas
and
cmps
daa
pusha
es
fwait
out
call
xor
mov
jp
jmp
pop
sub
rcr
pop
jg
add
mov
dec
mov
je
(bad)
out
add
xor
aad
loop
das
push
and
shl
pop
cs
jmp
xor
jne
jmp
das
xor
ins
loopne
fdivr
clc
popa
sub
and
outs
mov
js
pop
xchg
xor
rol
(bad)
out
outs
sub
out
mov
pop
inc
ins
mov
loop
xchg
or
jl
push
cmc
jnp
movs
das
mov
call
xchg
add
mov
lods
or
nop
ins
movs
xchg
and
pop
push
and
dec
and
out
sbb
addr16
pop
mov
sbb
mov
xchg
int
sub
push
mov
xchg
push
sub
mov
add
test
inc
shr
mov
out
ins
arpl
xor
cdq
push
dec
repz
push
jnp
add
repnz
ret
jle
inc
out
and
sub
ret
add
aam
mov
fcom
inc
retf
scas
(bad)
sbb
cld
mov
mov
into
xchg
mov
lea
loope
lods
mov
(bad)
scas
and
inc
retf
jmp
jle
addr16
loopne
sub
xor
and
fimul
sub
test
dec
cmps
xchg
bound
out
jle
fwait
cdq
dec
xchg
push
sbb
add
inc
fsub
(bad)
out
stos
in
and
(bad)
stos
in
mov
pop
loope
lds
inc
call
fidivr
das
jo
scas
stos
dec
xchg
sub
pop
shl
fwait
js
scas
cld
sub
add
dec
gs
das
and
cmp
pop
cld
xchg
arpl
retf
fwait
push
sub
cmp
cmp
or
jp
sbb
xlat
mov
neg
(bad)
jmp
mov
mov
adc
jae
in
adc
xor
xlat
in
cmp
enter
iret
dec
xchg
cdq
leave
xchg
int3
fwait
pop
mov
iret
adc
ins
jno
add
sub
ins
inc
inc
add
mov
push
xchg
pop
push
mov
int
add
out
lods
arpl
pop
mov
dec
jne
mov
pushf
cmp
xor
adc
(bad)
xchg
fisubr
cwde
pop
test
mov
xor
cmp
(bad)
(bad)
jns
xchg
(bad)
pop
inc
sub
sbb
sub
(bad)
sahf
mov
xor
push
(bad)
adc
push
repnz
inc
mov
jns
clc
aad
ret
mov
(bad)
cmp
loope
or
fiadd
leave
sar
mov
push
cmps
xor
adc
and
stos
loope
ins
mov
jp
(bad)
in
sbb
cld
xchg
fsub
mov
clc
push
mov
(bad)
(bad)
rcl
sub
jns
push
daa
cmp
push
(bad)
mov
jbe
mov
pop
inc
jb
inc
out
sbb
fimul
add
into
bound
xchg
mov
mov
mov
leave
dec
pop
inc
xchg
add
leave
jne
out
stc
add
movs
push
lea
xchg
cmp
imul
mov
retf
push
push
arpl
(bad)
out
(bad)
xor
xor
fidiv
mov
mov
fcom
aas
adc
movs
or
xchg
mov
shl
arpl
adc
arpl
lock
mov
in
fwait
arpl
xchg
icebp
cmp
xchg
lock
arpl
pop
retf
jnp
sbb
or
pop
xchg
and
mov
shl
dec
lds
adc
out
sbb
cmp
sti
mov
cmps
outs
cwde
(bad)
popa
mov
in
ss
or
sbb
mov
cs
outs
fisttp
iret
adc
sahf
icebp
jno
dec
push
xlat
and
ucomiss
push
pop
add
push
mov
and
pop
nop
pop
sub
jle
jg
jae
add
mov
cs
xor
nop
jbe
pop
dec
or
cmp
lds
xor
and
adc
movs
repz
cmps
lock
vpsllw
and
dec
pop
pusha
lock
imul
adc
shl
mov
mov
les
lock
scas
pop
outs
pop
cmps
fcom
fistp
jns
xchg
mov
mov
sahf
mov
jp
nop
outs
jno
jae
cmp
popf
inc
push
xor
xor
and
cmc
push
(bad)
mov
retf
imul
std
loopne
loopne
add
adc
stc
outs
adc
mov
and
lods
mov
cwde
mov
inc
rcl
mov
ss
loop
jecxz
out
enter
sub
ds
and
xlat
scas
pop
stos
xor
mov
(bad)
mov
jecxz
cdq
sbb
or
imul
adc
arpl
add
inc
inc
test
sbb
jl
(bad)
nop
xchg
mov
push
outs
mov
aaa
ins
scas
xor
mov
mov
push
sbb
sbb
jo
js
lock
shr
mov
and
and
mov
scas
sbb
dec
test
mov
mov
in
shl
fcomp
xor
cmp
sbb
pushf
jne
sbb
nop
(bad)
and
out
sub
cmp
sbb
out
dec
ins
lock
call
dec
out
add
loope
jae
inc
clc
cmp
enter
addr16
je
mov
xor
(bad)
(bad)
ja
les
sbb
fst
adc
call
imul
push
jbe
movs
and
scas
pop
test
pushf
add
arpl
inc
cmp
mov
dec
data16
aad
cdq
dec
mov
iret
pop
das
mov
ficomp
inc
or
or
cmp
and
repz
or
pop
out
mov
fwait
cmp
sbb
fwait
add
push
scas
dec
je
les
push
jg
popa
aaa
out
call
jbe
inc
aam
test
test
lea
nop
or
push
push
or
aaa
das
arpl
imul
(bad)
fucomp
das
cmp
or
ja
outs
leave
xchg
cld
stos
inc
ror
mov
rol
push
pop
add
(bad)
jl
adc
xchg
bound
fld
xor
rcl
popa
addr16
call
(bad)
pop
adc
jmp
lea
mov
push
mov
push
mov
in
(bad)
outs
mov
add
cmps
dec
pop
mov
xchg
add
push
(bad)
call
ret
adc
jns
adc
pushf
test
fdiv
(bad)
mov
outs
mov
or
dec
pop
loopne
add
in
out
and
shl
cmp
jge
jp
cld
stc
sbb
outs
nop
mov
or
mov
sub
iret
pop
ret
jl
pop
lds
ret
sbb
jae
arpl
xchg
sub
fnstenv
(bad)
idiv
rol
pop
mov
jbe
xchg
arpl
sahf
jb
xchg
jmp
mov
(bad)
std
or
mov
pop
clc
pop
cmp
mov
std
ror
lods
fist
je
and
add
or
and
jmp
int3
xor
jb
repz
add
gs
popa
in
cmp
lods
jmp
clc
mov
adc
mul
sub
shr
mov
mov
xor
sbb
je
arpl
dec
jle
push
lahf
mov
enter
mov
lods
pop
ins
cmp
xchg
add
add
mov
ins
cmp
loop
ret
test
xor
js
(bad)
adc
add
inc
push
or
dec
sub
out
(bad)
inc
cmp
jmp
aam
jno
adc
sub
les
(bad)
jmp
inc
jp
xchg
mov
stos
push
sbb
or
ins
in
jae
in
fist
gs
repnz
or
push
cmc
sub
dec
jbe
inc
dec
xchg
cmp
in
lock
push
popa
pop
ins
jmp
sbb
mov
jg
cmp
add
nop
jnp
xor
mov
clc
xchg
fwait
push
retf
fiadd
and
mov
or
clc
cmp
jb
icebp
cs
and
gs
cmp
icebp
pop
xor
push
cmp
cdq
and
pop
or
pop
mov
inc
(bad)
push
int
inc
sbb
jbe
cmp
or
ins
aaa
adc
fs
mov
cmc
mov
bnd
stos
adc
neg
push
mul
xor
mov
sub
retf
dec
jne
jnp
sbb
shl
jmp
clc
push
mov
rol
popa
xchg
addr16
or
push
jle
inc
push
add
sbb
ins
xor
mov
sub
(bad)
dec
jnp
mov
test
jmp
stc
adc
sbb
pop
(bad)
psubb
push
(bad)
push
lods
stos
stos
pop
gs
(bad)
sub
xchg
jmp
(bad)
xor
pop
mov
addr16
cld
inc
cmps
ins
enter
xchg
leave
dec
pop
out
push
loop
jecxz
sar
xchg
aas
ja
js
or
xchg
fs
pop
aam
push
cs
test
add
dec
(bad)
and
dec
imul
ja
clc
cmps
in
int
mov
sar
sbb
scas
add
daa
sub
es
cli
cmp
mov
inc
retf
mov
scas
inc
ror
cdq
xchg
imul
not
pop
(bad)
fadd
or
mov
inc
pop
push
mov
xchg
push
(bad)
or
test
(bad)
jnp
and
dec
mov
arpl
cmp
std
fdiv
(bad)
and
lock
mov
cmp
cdq
lea
jne
out
ret
mov
and
cmp
lock
xchg
dec
and
sub
movs
inc
pop
dec
cmp
pop
ds
hlt
mov
ds
pop
(bad)
dec
cmp
arpl
pop
cmp
and
pop
push
(bad)
jl
test
cmp
test
mov
mov
xchg
mov
enter
fs
dec
les
sbb
pusha
enter
pop
(bad)
iret
sti
sbb
pop
xor
pop
(bad)
retf
jmp
jbe
jge
rcr
mov
rcl
enter
sbb
pop
lea
mov
inc
fsubr
dec
cmps
sub
adc
mov
shr
js
sub
sbb
sbb
sti
mov
push
iret
mov
jle
push
sbb
mov
retf
jmp
fnstsw
or
(bad)
mov
xchg
xor
aas
cmp
mov
loopne
popa
sbb
loop
jo
leave
mov
lahf
xchg
xchg
icebp
sbb
fwait
rep
push
mov
or
rol
push
or
sar
sbb
xchg
mov
sbb
out
dec
loop
inc
(bad)
adc
jbe
scas
inc
jns
lock
adc
cld
xor
jl
dec
mov
sub
inc
push
adc
(bad)
jnp
adc
inc
out
fwait
jmp
dec
mov
adc
out
daa
clc
xor
mov
cmp
pushf
scas
jb
fdivr
call
je
jo
jno
test
pop
lods
icebp
outs
movs
and
xchg
push
xchg
ins
nop
push
mov
test
xor
xor
xchg
dec
test
vcvtpd2ps
or
enter
pop
dec
jle
repnz
fbld
mov
shl
outs
add
jmp
imul
jbe
push
daa
fwait
mov
movs
bound
out
in
mov
pop
aad
int
jg
xlat
pop
mov
sahf
popf
sbb
inc
xor
fcom
cmp
call
add
cld
sbb
ds
xlat
ja
or
mov
inc
rol
rcl
lds
out
and
adc
scas
arpl
jb
in
push
add
mov
ins
ss
into
das
dec
shl
addr16
int3
xor
add
mov
or
add
push
addr16
fiadd
push
shr
imul
ror
pop
test
dec
and
lock
cmp
(bad)
neg
dec
ins
xor
mov
(bad)
xor
sbb
or
lahf
dec
test
fld
inc
nop
push
mov
das
div
adc
fisubr
mov
shl
and
movs
or
mov
push
jp
sub
fisub
fisub
test
xchg
sbb
scas
in
clc
fstp
or
dec
rcr
in
loope
sub
mov
cmps
mov
jecxz
in
cmp
imul
cmp
cmps
cmp
xchg
jmp
shl
repz
mov
or
test
lods
loopne
adc
shr
jmp
mov
out
pushf
into
adc
sub
jp
icebp
sub
cli
inc
mov
cld
out
nop
mov
aad
lea
or
cmp
or
pminub
fistp
inc
movs
xchg
push
pop
idiv
imul
jmp
scas
or
add
or
xchg
arpl
dec
retf
outs
popf
and
ret
fstp
or
pop
xchg
sub
push
xor
shr
or
lds
leave
sbb
ja
scas
sahf
push
and
pop
aam
out
mov
movs
test
(bad)
and
and
xchg
stos
les
movs
jl
adc
push
mov
jbe
adc
dec
fwait
cli
cwde
lds
mov
std
data16
(bad)
sub
jmp
xchg
adc
jge
jmp
mov
loope
pop
mov
adc
push
mov
xor
jns
mov
scas
scas
xchg
sub
ret
shr
bound
int
mov
xor
div
movs
dec
test
out
and
add
sbb
aam
fnstsw
sub
mov
call
and
jmp
push
fwait
mov
mov
enter
push
mov
cld
mov
xchg
jo
movs
sub
fsubr
xchg
gs
xchg
loop
add
outs
retf
or
mov
sub
vmaxps
daa
jg
lds
inc
fnstenv
mov
xchg
movs
pop
sub
and
icebp
adc
ss
and
jb
jecxz
cmps
cld
mov
mov
int
dec
test
out
add
or
pop
pusha
jmp
pop
sub
mov
aam
xor
push
add
mov
inc
mov
push
and
cmp
xchg
mov
ror
les
je
pop
stos
push
inc
add
(bad)
xor
test
dec
mov
stos
ja
mov
adc
adc
mov
and
outs
out
add
mov
pop
sbb
aad
inc
outs
cli
push
add
xlat
les
call
add
pop
or
ret
mov
inc
popf
cmp
std
cmp
lods
(bad)
lea
stos
in
pop
out
cmp
or
jns
xchg
test
add
jle
xchg
ror
ins
jb
test
push
fbstp
shr
es
and
pop
cld
jns
jbe
fist
mov
push
jo
movs
mov
repnz
inc
mov
adc
mov
mov
mov
pop
and
shl
(bad)
hlt
dec
cli
pop
inc
cmp
stos
adc
xchg
pop
(bad)
xchg
mov
fadd
mov
xchg
adc
adc
cmc
jnp
xlat
pop
les
push
xor
movs
jb
xor
pop
in
add
fistp
mov
xlat
ins
mov
and
jmp
ds
pop
fnstcw
clc
cwde
mov
les
lods
js
out
cdq
sar
mov
scas
xchg
pop
fwait
mov
pop
ins
test
daa
mov
xchg
(bad)
push
je
xor
mov
cwde
pop
scas
mov
pusha
cld
dec
ja
imul
hlt
stos
adc
adc
add
imul
cmc
or
adc
xchg
movhps
ss
popa
aam
scas
sahf
jle
fsubr
sub
loope
test
push
aad
sbb
retf
es
cmp
gs
lods
jge
inc
and
xchg
fcomp
dec
daa
inc
lea
in
jmp
jge
int3
popa
add
inc
ret
repnz
nop
and
push
pop
jl
sub
stos
and
xchg
pop
sbb
jg
adc
test
mov
sbb
xor
xchg
and
aaa
inc
pop
cmp
cdq
or
dec
mov
fmul
xor
lahf
pop
inc
mov
push
fsubr
and
mov
dec
div
ror
mov
lock
dec
retf
out
lahf
movs
jne
push
cdq
(bad)
das
xor
(bad)
and
not
and
call
cmp
sti
iret
add
jbe
push
das
mov
stos
or
or
xor
sub
jns
sub
es
push
mul
dec
adc
movs
in
add
push
xchg
test
and
and
inc
popf
adc
scas
rol
addr16
dec
xor
cmp
stc
leave
das
xor
push
xchg
fsubr
out
aas
addr16
movs
test
push
out
add
repnz
mov
cmp
icebp
or
xor
loope
adc
jl
and
push
call
or
sub
ret
hlt
mov
jb
mov
ins
out
jle
sbb
ins
mov
mov
hlt
mov
fwait
sbb
jl
mov
jb
dec
mov
xor
shl
pop
es
imul
inc
fild
ret
jg
mov
mov
sbb
pop
inc
clc
mov
mov
xchg
ja
wbinvd
lods
pop
or
jmp
fimul
mov
mov
in
repnz
mov
pop
ss
jmp
lds
jne
je
xchg
jo
adc
popf
test
mov
stc
jae
adc
repnz
mov
call
dec
cld
pop
aas
rcr
xor
pop
out
fmul
stos
adc
outs
leave
sahf
aad
jmp
mov
fidiv
and
jnp
ins
js
add
shr
lods
adc
dec
popf
add
inc
fsubr
icebp
hlt
mov
daa
inc
out
or
loope
(bad)
jne
xchg
popf
cld
add
pop
cli
lods
test
fidiv
add
imul
xchg
leave
rcl
(bad)
ds
sbb
shr
jae
xchg
outs
cmp
adc
dec
xchg
sbb
sbb
mov
aaa
dec
lar
sub
shl
les
jmp
pusha
push
add
adc
jo
rcr
aas
or
push
mov
inc
icebp
out
(bad)
movs
arpl
jbe
mov
aas
push
cmp
mov
movs
ins
fild
mov
sub
push
stos
stos
arpl
xchg
sti
mov
nop
cmp
mov
jle
enter
mov
fist
jno
mov
lods
jp
add
lahf
dec
xchg
ins
shr
icebp
or
enter
and
dec
inc
loop
enter
mov
fsub
dec
aam
loope
sbb
arpl
lods
gs
cmp
je
ins
inc
fwait
mov
mov
hlt
leave
inc
xchg
adc
repnz
push
and
aas
mov
or
aaa
test
(bad)
int3
inc
cmp
pop
sub
mov
xchg
clc
jl
js
fidivr
mov
xchg
(bad)
invd
stos
sub
inc
out
mov
pop
scas
push
fcom
sbb
jne
cmp
mov
gs
add
sbb
call
xchg
cmp
inc
aad
cdq
out
push
push
fwait
repz
ficomp
lea
cli
addr16
es
mov
call
in
ja
mov
jl
xor
and
test
push
daa
ins
mov
cmps
(bad)
js
jne
lahf
dec
adc
sub
setns
jmp
or
xchg
daa
xchg
jl
push
stos
mov
imul
test
iret
imul
add
rol
shr
cmps
data16
xor
in
loopne
pop
push
adc
shr
aam
mov
fsubr
mov
daa
sbb
shr
sub
inc
int
jmp
and
je
mov
stc
mov
popf
lds
sbb
mov
jns
call
sbb
ja
sbb
and
orps
cmp
loopne
add
repz
adc
xchg
movs
xor
xor
mov
inc
push
jns
sub
pop
dec
fild
add
or
xchg
dec
or
pop
(bad)
sbb
loopne
es
dec
add
in
sub
outs
out
addr16
push
enter
rol
out
adc
push
ror
fwait
mov
in
or
call
rol
xor
into
(bad)
cmp
or
out
xchg
inc
lods
inc
and
pop
sub
or
pop
jne
xor
mov
int
mov
inc
adc
jno
sahf
mov
sub
sahf
cs
ds
sbb
dec
inc
and
add
pop
and
sub
add
dec
push
cld
jo
cs
sahf
aam
pushf
int3
loope
loopne
je
leave
lds
dec
leave
aas
xor
pop
xor
int3
pop
push
and
ret
inc
ret
add
pop
xchg
inc
mov
dec
(bad)
pop
les
sub
test
fcomp
mov
mov
ror
imul
dec
dec
scas
xor
inc
mov
loope
(bad)
aaa
xor
ret
out
fdiv
gs
inc
pop
loop
aam
dec
add
and
adc
cmc
cmp
jmp
jmp
and
ins
out
out
lods
leave
pop
lahf
xor
dec
enter
inc
clc
les
or
mov
call
mov
xlat
jp
fwait
outs
and
xchg
in
fs
loope
push
aas
mov
sub
inc
std
fadd
pop
add
add
int
vhaddps
clc
call
cld
(bad)
jg
icebp
stc
(bad)
mov
test
and
nop
por
or
mov
outs
cmp
mov
sbb
sbb
dec
lods
and
push
inc
xchg
hlt
jno
aam
xchg
fs
mov
and
sbb
retf
cld
xchg
and
adc
(bad)
push
retf
push
xchg
cmc
pusha
imul
xchg
jo
ja
adc
push
pusha
inc
scas
es
not
sbb
pop
out
pushf
push
add
push
pop
push
xchg
ss
jle
mov
add
cmc
pop
ss
les
mov
xor
add
mov
stos
icebp
(bad)
jmp
or
pop
lds
mov
test
test
fstp
push
inc
mov
imul
inc
and
test
adc
fld
adc
(bad)
xchg
and
repnz
cmp
mov
lock
pop
push
fist
fsubrp
push
xor
movs
test
mov
xchg
scas
xchg
stos
jb
bound
fiadd
and
aam
addr16
gs
mov
pop
aad
xchg
fidiv
fsubp
dec
in
jp
outs
pop
jmp
ins
dec
jle
mov
cmp
or
lods
cld
shl
sub
mov
(bad)
cs
pop
jmp
add
test
push
add
and
pop
mov
sbb
call
das
push
ror
add
and
mov
dec
or
retf
das
(bad)
push
fdiv
cs
push
clc
(bad)
cdq
mov
jnp
jmp
inc
leave
pusha
inc
adc
in
movs
call
shl
arpl
cmp
xor
pushf
push
gs
xor
jge
cmp
in
out
cmp
sti
lock
addr16
aas
repz
test
jnp
mov
jnp
rol
pop
xchg
xor
fiadd
mov
(bad)
fsub
fidiv
popf
fdivr
pop
push
xor
adc
xchg
adc
jb
test
sar
ret
cmps
repz
in
pop
enter
aas
(bad)
out
mov
jne
jne
les
mov
dec
push
add
mov
dec
cmps
dec
cmpxchg
push
xchg
or
inc
lods
pop
jo
jmp
dec
or
aam
test
and
je
fcomp
in
repnz
stos
sub
fwait
popf
test
inc
mov
clc
adc
add
les
leave
sub
fwait
mov
dec
jns
pop
mov
mov
scas
mov
test
mov
cmc
push
mov
dec
fstp
pop
dec
xor
sub
shr
sub
das
out
rcl
retf
and
jmp
xchg
out
cmps
or
dec
dec
outs
int3
outs
sub
fs
dec
in
inc
fs
inc
xor
pop
push
inc
and
push
sub
sbb
lahf
jbe
inc
outs
rol
adc
rcr
pushf
mov
mov
aas
loope
pop
mov
fist
mov
push
ror
retf
shl
fbstp
add
stc
fiadd
jecxz
outs
inc
push
movs
loopne
cmp
cs
cmc
retf
jbe
aad
cli
mov
cdq
js
test
mov
fild
vandnpd
cmp
ja
daa
shl
mov
jmp
aaa
retf
inc
mov
dec
mov
adc
test
push
mov
imul
retf
jg
xor
sbb
test
or
ds
and
push
outs
or
inc
jecxz
(bad)
clc
aad
test
mov
nop
mov
hlt
imul
ja
je
or
xor
imul
sub
in
sar
dec
js
das
or
jo
or
pop
pushf
jne
inc
(bad)
leave
rcl
mov
mov
mov
sti
int3
push
popa
mov
adc
cli
jle
ds
mov
sbb
stc
std
fisub
xchg
cwde
into
pop
or
mov
not
lea
lahf
mov
test
cmp
out
std
xchg
or
and
mov
sub
repnz
jmp
int
and
test
pop
xor
jmp
cmps
test
arpl
or
jmp
jns
inc
mov
gs
jbe
sub
pop
mov
lahf
stos
xor
pusha
jge
pop
not
or
inc
cld
dec
div
pop
adc
inc
adc
cmp
loopne
inc
cmp
lahf
mov
fidivr
fs
or
hlt
pop
pop
jg
in
rcr
mov
mov
in
ja
pushf
cmps
and
jp
and
lods
movs
inc
xor
pop
cmps
adc
pop
cmps
out
xchg
jo
retf
inc
fmul
mov
call
retf
sub
inc
ds
and
jmp
or
aaa
sahf
push
call
xchg
mov
dec
and
imul
jl
cmp
adc
imul
outs
sbb
jns
xor
push
push
mov
push
sub
sub
stc
aas
sbb
loop
push
push
repnz
inc
xor
inc
fcom
push
pop
xlat
xchg
jl
mov
aam
pop
cmc
es
or
push
hlt
mov
pop
pop
call
push
pop
stos
je
mov
call
mov
rol
lds
xchg
int
mov
or
mov
test
mov
(bad)
aad
xor
adc
adc
hlt
fidivr
xchg
loopne
jmp
call
arpl
int
adc
pushf
retf
dec
add
xor
dec
sub
lods
cwde
(bad)
aaa
jbe
and
pop
(bad)
pop
out
xchg
add
sar
xchg
or
ficom
inc
inc
pop
arpl
xchg
test
daa
lods
in
pop
cmp
inc
std
xchg
jecxz
pop
cmp
inc
int
sbb
in
push
mov
mov
int
jmp
sub
stos
pop
sub
dec
inc
jp
mov
clc
mov
dec
repz
cwde
sub
jbe
mov
lahf
mov
in
call
shl
inc
jno
xchg
xor
cwde
pop
push
in
ds
(bad)
fbstp
(bad)
pop
cmp
ins
jbe
inc
cmp
pop
stc
and
daa
and
stc
lods
nop
fisubr
xchg
dec
and
or
arpl
pop
aam
mov
shr
adc
dec
xchg
fistp
popf
add
mov
popf
lods
add
into
loopne
adc
pop
test
les
popf
test
rol
sbb
dec
or
loop
stc
in
push
arpl
lea
push
cmps
push
popa
mov
mov
sar
popa
cmc
sahf
adc
das
hlt
pop
adc
js
stc
cdq
or
int3
sbb
xor
pop
arpl
xor
push
(bad)
out
adc
mov
or
(bad)
call
call
inc
aaa
push
push
pop
fdiv
cmps
add
dec
sbb
mov
adc
adc
xor
ret
std
daa
jmp
leave
xchg
outs
rcr
jmp
std
pop
outs
fcomi
xchg
cmp
xchg
cmp
es
add
fadd
xor
(bad)
adc
xor
mov
fcom
lods
cmp
or
aad
jmp
cmp
push
stos
data16
pop
mov
into
adc
push
inc
out
mov
mov
xor
in
fadd
in
cmp
mov
mov
imul
fistp
xchg
dec
adc
push
pop
jns
mov
cld
xor
add
cdq
sub
int3
jl
mov
or
xchg
inc
mov
out
jo
lods
mov
push
lods
jmp
rol
sub
in
in
loopne
dec
into
inc
hlt
pop
sbb
arpl
adc
pop
js
mov
push
shl
out
sub
test
imul
inc
sbb
hlt
enter
rcr
rcl
popf
cdq
or
pop
lea
int3
pop
xchg
cmps
leave
mov
fstp
sbb
cli
sti
ret
repz
dec
sbb
push
cmp
mov
dec
in
xchg
pop
mov
inc
mov
test
mov
pop
cwde
mov
and
out
arpl
push
xchg
test
mov
cwde
sets
aam
pushf
sbb
pop
xchg
xor
inc
inc
ja
xchg
int
movs
xor
sbb
add
cmp
test
add
fsub
xchg
mov
sub
movs
pop
mov
out
jecxz
sbb
fcomp
adc
adc
fidivr
sbb
mov
int
or
sar
mov
xor
mov
cs
cmp
shr
sti
jne
test
adc
mov
aas
aas
pop
add
(bad)
mov
add
add
adc
stos
into
xlat
jnp
dec
xchg
daa
xchg
mov
mov
imul
rcl
jne
and
fldenv
popa
and
in
mov
test
adc
lods
enter
test
loope
sbb
and
scas
push
sti
jge
xchg
jmp
dec
jmp
dec
pop
jnp
pop
stos
xchg
adc
xor
push
sbb
int3
push
mov
int
push
cmps
test
dec
add
mov
mov
mov
aad
or
push
lods
adc
fisub
add
dec
mov
push
jbe
push
test
loop
cmp
sbb
or
call
or
call
mov
or
xor
mov
(bad)
maxps
xchg
jmp
push
mov
push
imul
out
dec
addr16
jmp
addr16
push
fimul
xor
xlat
stos
xor
sar
inc
outs
loopne
xor
xchg
sub
pop
fimul
les
add
mov
mov
and
sahf
dec
(bad)
mov
cli
mov
mov
int3
sub
add
pushf
inc
add
mov
into
xor
pusha
xchg
aas
jp
add
sbb
ror
js
fstp
xchg
add
xor
pusha
cli
rcl
icebp
xor
xor
sub
fwait
movs
and
ins
add
(bad)
out
loope
push
movs
fucomp
sbb
jge
test
xchg
add
ja
pop
xchg
adc
or
inc
push
adc
repz
push
aad
out
dec
adc
loopne
sbb
or
mov
pop
cli
fs
jae
pusha
or
fsub
call
pop
push
pop
icebp
xchg
out
xor
stc
push
jmp
pop
repnz
add
adc
mov
mov
lds
pop
lea
adc
mov
push
fwait
add
and
ds
outs
cmp
inc
cmp
neg
add
jnp
into
jge
aaa
cli
(bad)
(bad)
jb
cmp
aad
adc
pop
popa
out
pop
sub
dec
ror
inc
test
ror
in
and
sbb
ds
and
jae
jns
xchg
add
aas
imul
outs
jl
mov
popa
in
js
repz
xchg
xor
jge
fsubp
loopne
add
jp
loopne
out
out
arpl
xor
bound
xchg
jmp
cmp
and
or
push
and
(bad)
push
sub
in
push
xor
imul
clc
mov
cmp
or
loop
dec
push
(bad)
mov
data16
scas
call
add
inc
adc
pop
pop
xchg
mov
sbb
and
into
scas
icebp
cmp
mov
jge
sfence
mov
pop
jbe
push
data16
dec
sbb
in
loopne
adc
pop
pop
xchg
add
jmp
adc
add
xchg
inc
fnstenv
outs
mov
push
sbb
lods
int3
arpl
and
jnp
in
pop
cmps
mov
lds
jmp
clc
xchg
cmp
sub
leave
sub
repnz
jns
test
inc
mov
mov
iret
cdq
xchg
je
(bad)
pop
push
stos
fwait
out
popa
bound
clc
add
push
inc
mov
or
gs
gs
xchg
mov
ret
dec
shl
int3
xlat
mov
push
(bad)
mov
shl
outs
(bad)
or
call
mov
cwde
dec
lahf
mov
jns
and
cmc
iret
es
mov
jb
inc
inc
mov
mov
nop
inc
xchg
mov
and
ja
mov
pop
jle
mov
ret
call
mov
fdivrp
sub
dec
nop
mov
pop
pop
xchg
repz
sbb
fwait
inc
pop
mov
ret
hlt
or
(bad)
out
or
add
push
jle
mov
pop
or
aad
jge
aad
fst
dec
push
cwde
mov
loopne
bound
sub
test
iret
leave
push
aaa
daa
add
sub
lods
pop
mov
push
arpl
addr16
es
xor
adc
jae
lods
mov
mov
xchg
mov
inc
out
arpl
fadd
sub
mov
imul
ret
int
mov
fcmovnbe
add
jae
cli
dec
fcomi
xor
adc
dec
sub
cmp
pop
test
popa
mov
mov
and
dec
push
aad
fwait
inc
mov
jle
mov
loope
push
in
fmul
pop
xor
jl
cmps
(bad)
push
inc
clc
(bad)
xchg
outs
inc
into
imul
sub
test
xchg
push
sub
loope
out
push
lock
jecxz
in
pop
mul
add
test
add
mov
add
gs
xchg
adc
push
cmps
(bad)
push
sbb
in
mov
inc
xlat
cmp
shr
pop
pop
shl
jp
movs
(bad)
(bad)
test
aad
fimul
into
outs
jns
int3
xchg
add
loopne
in
stos
dec
sub
bound
scas
pop
fsubr
loop
dec
mov
aaa
lods
aas
je
shl
jle
mov
push
iret
pusha
mov
arpl
ret
lea
ja
dec
jmp
lock
loopne
jne
out
or
test
pop
in
jns
pop
or
mov
pop
sbb
data16
pop
push
fs
dec
xor
ret
and
div
sub
mov
mov
out
pop
jb
ret
sub
fadd
xor
sbb
retf
test
stc
imul
retf
xchg
and
int
jae
inc
push
fldcw
cli
iret
mov
mov
repz
lods
dec
loopne
lds
sbb
mov
add
mov
je
mov
xor
xor
sar
adc
std
mov
add
or
push
hlt
jae
push
lds
push
rol
retf
je
push
jle
inc
loope
cmp
ins
xchg
push
retf
xor
sub
es
adc
and
xor
xor
int
or
retf
and
int
scas
push
lock
loopne
adc
(bad)
mov
shr
xchg
aad
pusha
fwait
retf
cmp
jmp
mov
cli
mov
pop
or
(bad)
pop
dec
xor
int
xchg
and
sahf
sub
retf
sti
popf
ror
lahf
and
jl
and
cmp
jns
retf
mov
js
add
jno
js
je
aam
mov
push
cmp
std
inc
cmp
xchg
not
stc
(bad)
push
pop
jmp
mov
mov
push
sub
pushf
xchg
mov
push
xchg
add
ret
dec
mov
in
pop
pusha
adc
sub
fs
ins
addr16
call
cmc
sbb
loopne
enter
popf
push
or
shl
inc
and
mov
sbb
xor
cli
cs
loop
xor
or
repz
sub
and
add
lods
sbb
pop
pop
loop
sub
int3
inc
mov
cld
jp
cmp
scas
mov
cs
inc
(bad)
test
mov
jmp
mov
(bad)
xchg
mov
test
inc
xor
add
mov
mov
push
repnz
or
test
or
ror
push
fwait
inc
sbb
ins
fcmove
(bad)
leave
inc
mov
and
imul
cmp
xor
fbld
outs
pop
enter
addr16
push
mov
or
pop
std
mov
je
gs
mov
pusha
push
push
push
int
fst
inc
add
inc
call
jo
mov
mov
xor
push
sub
push
mov
cmps
sbb
sbb
in
xchg
pop
push
fcom
mov
jo
inc
jbe
inc
xlat
std
add
out
aas
je
mov
stos
cld
test
mov
pop
mov
adc
jmp
in
daa
hlt
lods
mov
sub
sub
cld
bound
scas
sub
cmps
xchg
mov
les
push
pop
and
xchg
ret
mov
pop
xchg
push
xor
push
cdq
jno
mov
mov
pop
mov
clc
cmp
arpl
test
ins
loope
scas
xor
outs
sbb
je
adc
sbb
adc
xchg
or
movs
sub
xchg
sbb
jo
leave
(bad)
outs
add
mov
cli
ins
cmp
dec
xchg
movs
push
xor
sbb
inc
sbb
shr
mov
in
call
xor
xchg
lahf
fimul
jnp
test
sub
push
lods
je
rcl
in
ds
dec
repz
lods
pop
mov
sub
aam
cmps
add
sbb
popa
jne
sub
jns
and
stos
lods
nop
cmp
pop
xchg
pop
stc
xor
jp
jle
jmp
and
push
jae
dec
pop
out
gs
xchg
lods
loope
mov
mov
jg
jae
lock
mov
aas
mov
pop
inc
sbb
xor
aam
lar
lods
or
outs
push
mov
loopne
shl
jnp
adc
xchg
aad
and
mov
addr16
mov
fst
xchg
jg
stos
push
mov
lods
dec
outs
adc
xchg
leave
test
mov
xor
sbb
or
in
rcl
inc
mov
leave
rol
push
leave
call
add
repz
sbb
cmp
sub
addr16
push
fimul
cs
test
jne
cs
mov
ret
mov
push
icebp
cdq
enter
add
inc
xchg
push
sub
aaa
test
daa
push
fstp
ret
jno
add
test
jne
cmp
xor
icebp
or
sbb
sbb
pop
cmp
popa
mov
or
jmp
or
adc
retf
add
jl
out
retf
sar
push
pop
xchg
push
loopne
pop
mov
adc
xor
repnz
mov
push
push
pop
ror
cmps
pop
pop
popf
test
jp
inc
dec
into
(bad)
popf
sbb
mov
mov
cs
pop
jl
push
xor
add
push
and
lods
scas
inc
retf
aas
dec
sar
rcl
ds
cs
es
xchg
xor
retf
int
int
cdq
inc
cmp
leave
and
cli
pushf
stos
mov
sti
jg
fimul
or
(bad)
hlt
retf
inc
loopne
out
add
add
pop
jo
and
dec
adc
imul
ja
movs
push
dec
(bad)
mov
and
pop
rcr
mov
mov
jle
cmp
ins
dec
pushf
call
jbe
outs
(bad)
cmp
pop
mov
add
loopne
fld
cdq
hlt
js
lock
jnp
dec
sahf
sub
cwde
adc
jp
add
dec
add
add
repnz
xchg
sub
xlat
inc
push
loope
mov
adc
(bad)
lds
fcomp
rcl
or
out
cmp
ret
pop
jo
movs
sti
inc
nop
sub
rol
int3
(bad)
shr
mov
test
les
daa
repnz
les
xchg
mov
repz
idiv
bnd
push
pop
sub
xchg
sbb
shl
loopne
push
aaa
jge
jg
bound
cdq
aaa
pop
or
dec
fs
inc
mov
idiv
jle
mov
xor
mov
mov
arpl
fld
test
inc
add
jno
sub
cmp
mov
or
pop
mov
inc
fdivr
int3
enter
(bad)
iret
in
xchg
dec
clc
jmp
sbb
sub
in
push
mov
pop
mov
jo
or
mov
xor
cmp
mov
and
xchg
pusha
outs
xor
adc
adc
clc
or
jmp
and
lock
dec
dec
std
jnp
pop
push
or
(bad)
xor
mov
out
pushf
mov
movs
xor
sub
jle
test
addr16
enter
(bad)
pop
cmp
(bad)
pushf
fdiv
or
jp
sub
cmp
js
push
mov
mov
mov
and
jb
sub
cwde
fs
(bad)
gs
outs
xchg
in
jmp
ins
stos
push
mov
jae
call
fs
mov
aad
pop
fbld
mov
or
jp
cmc
outs
mov
sub
jg
mov
(bad)
jmp
inc
xor
(bad)
or
mov
cmp
test
inc
xchg
stos
mov
rcl
mov
repz
xor
push
jg
(bad)
xchg
neg
sub
in
and
push
xor
add
lods
xchg
(bad)
fld
gs
and
and
or
icebp
mov
jb
inc
hlt
sbb
mov
push
inc
shl
sahf
out
imul
loopne
pop
pop
xchg
mov
push
or
retf
shr
push
imul
leave
inc
ins
and
cmp
fnstsw
xchg
rcl
call
test
mov
jb
ds
mov
fs
sbb
stc
push
adc
int3
pop
ja
shl
das
shl
jo
inc
mov
mov
push
addr16
push
test
out
mul
scas
add
xor
and
mov
fisub
pop
cs
outs
xchg
mov
and
mov
jo
jmp
add
nop
mov
xchg
adc
mov
shl
sbb
ja
jae
mov
jle
hlt
shl
mov
rol
dec
sub
call
shl
mov
in
outs
cld
inc
lock
xor
push
push
rol
ins
idiv
and
or
aas
(bad)
mov
gs
cmps
clc
fs
pop
hlt
leave
out
pop
mov
jg
push
cs
repnz
or
push
or
mov
stos
call
sar
mov
pop
outs
call
cs
movs
jg
adc
adc
sbb
loopne
outs
outs
aaa
adc
and
std
sbb
jge
cmp
fiadd
mov
je
add
loop
gs
add
leave
cmp
xchg
or
xor
xor
pop
push
outs
inc
fcomp
inc
sbb
xor
dec
mov
mov
jbe
cmc
jecxz
test
xchg
lahf
(bad)
loop
add
jl
mov
cmp
test
dec
push
mov
push
cli
push
or
shl
add
xchg
ja
inc
fsubr
mov
mov
cs
add
je
aam
rcr
adc
jmp
fs
dec
sbb
mov
jg
mov
movs
iret
mov
jne
sub
inc
push
mov
arpl
inc
mov
shr
mov
pop
out
inc
dec
scas
add
call
push
xchg
pop
movs
call
sub
cmps
rcr
(bad)
cmp
xor
xor
push
paddsb
lahf
loopne
jb
mov
mov
jo
arpl
push
push
jle
and
imul
add
sbb
inc
xchg
and
push
lds
(bad)
xchg
cli
mov
sahf
xchg
mov
cli
(bad)
lahf
jno
ror
dec
jns
scas
dec
and
test
popf
dec
push
inc
jle
enter
outs
addr16
mov
nop
cdq
scas
call
inc
fsubp
add
(bad)
popf
sbb
ret
lahf
les
jle
(bad)
jmp
jbe
ficomp
mov
sub
retf
cld
ds
test
pop
or
rcr
loopne
shl
aas
sub
les
xchg
pop
test
xchg
stc
xor
pop
mov
aas
push
pop
sbb
mov
sub
mov
aas
push
xchg
mov
sar
xor
shl
lahf
mov
dec
add
add
or
jmp
cmps
cmp
mov
push
(bad)
mov
pop
mov
add
loop
arpl
bound
xlat
cmps
jne
xor
cwde
stos
lock
xchg
pushf
cmp
inc
cmp
mov
std
jmp
in
dec
jl
xor
cmp
mov
aad
pop
stos
stos
aaa
mov
sahf
(bad)
popf
mov
sbb
daa
jmp
add
mov
sub
fidivr
stos
out
jmp
retf
inc
lods
sub
icebp
sbb
xor
xchg
nop
lock
and
neg
inc
mov
jg
stos
jno
test
cdq
fldln2
mov
dec
fdivr
add
hlt
dec
cmp
cmc
mov
imul
mov
outs
icebp
into
fcom
push
jle
jnp
and
inc
jbe
daa
ret
mov
fldlg2
mov
std
std
xchg
stos
ins
adc
into
icebp
fst
retf
pop
movs
sbb
pushf
dec
xchg
jns
sbb
test
push
xchg
xchg
xchg
imul
cmps
loopne
push
popa
scas
inc
mov
popf
cmp
outs
inc
cmc
(bad)
ss
sub
lahf
push
lock
push
test
mov
mov
shl
lods
mov
movs
or
mov
mov
das
scas
push
sub
push
in
cmp
out
fiadd
mov
xor
(bad)
addr16
sub
lsl
leave
aad
mov
cli
sbb
retf
outs
xchg
push
ret
rcl
arpl
lea
xchg
inc
sti
or
inc
jno
pop
push
stc
mov
jns
and
pop
mov
fcomp
or
dec
scas
and
jge
into
cmp
and
adc
push
pop
inc
stos
ret
dec
out
pop
cli
imul
inc
in
xor
outs
push
push
(bad)
jnp
shl
or
mov
jp
jmp
sbb
fmul
xor
inc
mov
sub
xchg
ret
lds
(bad)
leave
mov
outs
cli
out
pusha
pop
fadd
mov
cld
pop
jge
loope
mov
inc
rol
rol
push
push
jecxz
pushf
and
push
xor
call
dec
sub
add
add
xchg
(bad)
aas
daa
pop
(bad)
xchg
pop
sbb
pushf
or
and
or
movs
icebp
fistp
and
xchg
(bad)
popa
adc
and
and
retf
sub
inc
mov
mov
pop
jne
mov
cmps
scas
and
adc
xor
adc
add
loope
fwait
ins
mov
aad
mov
dec
jbe
pop
jp
sbb
out
retf
xchg
repnz
push
aad
in
mov
call
data16
(bad)
scas
sbb
mov
repz
jge
lahf
mov
(bad)
inc
mov
icebp
pop
xchg
jne
out
stc
fnstcw
jp
xor
xchg
fild
in
inc
enter
test
push
mov
sub
jnp
bound
jmp
inc
jmp
cmp
jmp
cmp
idiv
inc
shl
xor
mov
mov
loope
mov
add
cmp
pop
mov
dec
mov
lahf
push
frstor
sbb
push
mov
mov
mov
aam
xor
add
lahf
popa
or
pop
lea
adc
xchg
mov
scas
js
scas
js
add
nop
aad
sahf
and
pop
jbe
arpl
mov
push
sub
into
or
add
jmp
cmc
out
cmp
data16
gs
in
pop
xor
scas
jb
xor
xchg
mov
sub
in
daa
movzx
and
sbb
(bad)
fistp
cmp
sbb
jmp
jmp
scas
sbb
dec
dec
mov
arpl
cmp
movs
pusha
sub
push
and
and
js
add
jp
mov
into
add
or
stos
stc
scas
out
mov
inc
add
mov
bound
test
and
jl
pop
punpckhbw
pop
and
inc
jo
dec
lods
mov
add
push
(bad)
mov
pop
jge
loop
pop
out
dec
mov
pusha
jb
jmp
rol
add
fild
xor
cmp
mov
dec
push
xchg
adc
push
or
pop
movs
mov
cmp
pop
jg
imul
dec
ror
test
sti
nop
inc
xor
ret
(bad)
adc
fsubr
inc
out
and
nop
les
icebp
and
push
bound
aad
and
es
xor
mov
xor
imul
adc
(bad)
pop
(bad)
shl
cmp
xchg
je
pop
jmp
mov
pop
jmpw
push
adc
sub
inc
cmp
aad
adc
bound
or
ret
adc
adc
jecxz
pop
adc
mov
cdq
xlat
jb
(bad)
call
addr16
fdiv
test
mov
mov
loopne
mov
push
js
hlt
or
scas
mov
mov
mov
or
ins
(bad)
lods
fs
pushf
lock
push
and
popf
mov
jmp
mov
jmp
push
fisttp
adc
and
pop
adc
shl
mov
repnz
jp
xor
dec
pop
jae
push
adc
xor
cmp
inc
mov
ret
add
rcr
lea
xor
in
in
push
icebp
pop
fcmovu
shl
repnz
mov
loop
imul
add
arpl
stc
lock
jmp
shl
pop
mov
(bad)
push
inc
push
xor
jg
addr16
jle
xchg
repnz
(bad)
stos
add
leave
mov
pop
or
loopne
xor
jb
test
pop
sti
loopne
movs
pushf
dec
adc
xchg
mov
std
add
mov
inc
dec
xchg
push
call
pusha
mov
xor
dec
dec
jp
lahf
dec
scas
aam
(bad)
push
fwait
mov
fistp
xor
sub
and
das
adc
mov
daa
pop
ds
fist
fnstsw
sbb
pop
test
add
ffree
pop
mov
sbb
jecxz
fmulp
xchg
pop
dec
jne
mov
mov
std
add
push
iret
pop
data16
div
adc
jg
push
retfw
mov
or
popf
ss
mov
xor
imul
cmps
add
(bad)
es
stos
jmp
push
jno
out
xchg
mov
jmp
into
pop
pop
inc
xor
dec
jae
inc
or
adc
add
mov
pushf
nop
mov
shl
in
jb
jmp
lahf
ror
mov
push
das
mov
mov
shr
dec
hlt
das
shl
int
or
dec
leave
xchg
xchg
add
adc
mov
xchg
cld
adc
xor
pop
sti
inc
pop
sub
sbb
fcomp
sbb
and
out
cwde
test
js
sub
xchg
push
or
dec
ss
xor
(bad)
jp
mov
mov
je
cwde
icebp
cmp
push
mov
(bad)
jae
inc
ret
imul
mov
enter
or
adc
(bad)
xchg
stos
adc
push
dec
in
cmp
mov
ins
cmp
clc
mov
outs
xor
fsub
mov
push
fstp
daa
scas
ja
add
or
inc
repnz
mov
jmp
push
test
scas
mov
daa
add
cmp
stos
dec
or
call
adc
mov
dec
mov
lods
ja
push
mov
mov
sub
push
lods
mov
lods
dec
ds
xor
push
mov
mov
sub
sti
sbb
push
dec
mov
call
fbld
in
sbb
push
inc
pop
dec
mov
test
add
mov
fdivr
push
dec
mov
add
sub
adc
cmp
into
lock
add
inc
js
rol
daa
sub
cmps
cmp
(bad)
xor
lods
out
inc
xor
sbb
leave
mov
and
rol
sbb
xor
(bad)
jnp
sbb
adc
mov
sub
aaa
out
lock
out
cmc
in
test
jle
jno
jge
jns
mov
inc
xchg
add
aaa
fist
push
outs
(bad)
dec
mov
add
(bad)
loope
mov
loop
push
ret
jns
test
ins
jb
add
jb
xchg
popa
cdq
pop
mov
repnz
jbe
cld
add
dec
scas
jnp
ret
or
rol
mov
xchg
cmp
push
setbe
repz
mov
jmp
add
movs
enter
sbb
xor
into
cmp
jno
push
icebp
out
cmps
mov
repnz
shr
or
mov
pushf
mov
movs
inc
ins
push
xor
add
xchg
test
cmp
or
loope
push
shl
test
lea
fs
xchg
mov
ins
imul
(bad)
xchg
ds
mov
shl
repnz
mov
(bad)
mov
jo
push
dec
es
lds
xchg
inc
int3
jmp
pop
ret
test
adc
pop
(bad)
aad
aas
xor
fs
addr16
pushf
jmp
enter
adc
mov
popa
adc
xor
movs
inc
(bad)
movs
cmp
daa
out
pop
bound
scas
std
fwait
or
inc
xlat
les
outs
fistp
out
arpl
inc
jecxz
pop
jmp
cmps
jmp
jb
cmp
iret
push
and
ins
aas
cmp
test
dec
fisttp
fist
fst
iret
dec
sub
sbb
inc
xor
push
cwde
cwde
push
(bad)
inc
nop
dec
outs
xchg
loopne
je
xor
out
lods
dec
cmp
std
add
jge
xchg
in
xor
(bad)
gs
sub
adc
mov
repz
mov
sub
ins
lea
dec
jae
pop
cs
sbb
mov
fstp
push
cmp
cmc
(bad)
ror
push
xchg
jae
push
cmps
out
out
ja
imul
xor
out
arpl
out
aaa
addr16
icebp
mov
pop
in
mov
out
(bad)
or
mov
add
dec
movs
add
test
lods
iret
fdivr
leave
jge
scas
adc
add
mov
jg
(bad)
mov
in
xlat
jl
rol
xchg
mov
pop
cmps
icebp
sbb
imul
gs
jns
mov
(bad)
mov
adc
push
loope
test
scas
(bad)
push
daa
jl
outs
sbb
and
jno
sub
stos
movs
aaa
imul
sub
popa
out
pop
inc
lds
xchg
sbb
push
xchg
outs
rol
mul
retf
sbb
adc
mov
sub
xchg
jae
sub
and
jmp
hlt
int
add
in
mov
or
repnz
out
data16
movs
hlt
jnp
mov
jl
cmp
lods
or
ja
dec
push
aaa
adc
jmp
push
mov
cs
xchg
aad
jmp
(bad)
dec
cwde
rcl
cmp
lahf
jae
dec
gs
into
jne
push
cs
(bad)
or
fnsave
mov
cmp
add
call
fs
inc
mov
sahf
scas
adc
add
inc
mov
jo
in
mov
aad
fnstcw
enter
aam
mov
mov
in
push
and
and
call
sbb
xlat
mov
xchg
xor
sub
push
out
ja
dec
ds
mov
dec
ja
cmp
push
test
les
mov
jb
push
repz
adc
add
sub
loop
or
lds
sub
jmp
xchg
xchg
je
lods
mul
fwait
test
add
cmp
idiv
movs
rol
xor
mov
or
cmc
push
int
mov
nop
(bad)
adc
sub
jno
ds
test
sbb
mov
in
xor
mov
xor
jp
pop
xchg
aaa
cwde
sub
sub
xchg
xchg
je
jmp
push
jmp
jl
add
cmc
shl
mov
push
mov
test
lods
gs
das
jns
mov
pop
das
popf
and
jb
shl
pop
cmp
mov
imul
sbb
out
(bad)
jae
dec
shl
ror
pop
fdivp
cmp
cs
inc
sbb
arpl
adc
cmp
mov
inc
and
jmp
loopne
(bad)
mov
push
push
push
iret
adc
or
or
lods
ror
or
aaa
sti
mov
inc
push
repnz
movs
inc
sub
aaa
pop
xchg
and
scas
add
cs
push
cmp
mov
add
cld
pop
add
or
(bad)
fadd
popa
jnp
inc
mov
mov
adc
mov
out
cli
jecxz
aaa
retf
xchg
adc
pop
ins
cmc
lahf
jle
in
(bad)
cmp
(bad)
rcl
movs
test
jmp
dec
sbb
cs
jge
fimul
mov
pop
pusha
lock
data16
jmp
ss
fwait
xor
ret
inc
test
sub
movs
aas
add
out
neg
and
mov
jp
fstp
or
test
mov
icebp
call
or
inc
inc
arpl
jb
xor
jns
jbe
add
fild
dec
and
mov
inc
mov
inc
mov
jns
aam
jnp
mov
jmp
or
jbe
loope
mov
cld
retf
pop
mov
add
add
sar
mov
sub
inc
(bad)
fwait
sahf
lea
adc
nop
std
jp
xor
out
adc
nop
sbb
retf
out
or
daa
fsub
aam
mov
retf
arpl
lods
dec
loop
push
loopne
sub
mov
mov
and
inc
and
ins
push
add
mov
push
lock
xor
adc
fucomp
jno
jnp
fimul
adc
mov
hlt
arpl
sti
xor
icebp
jno
ins
xor
mov
ret
cmps
lahf
and
fwait
jbe
bound
cdq
mov
scas
cmps
jne
pop
shl
dec
ret
jo
aam
xchg
enter
or
scas
outs
cmp
es
and
add
jmp
pop
inc
cmp
imul
stc
gs
sbb
jp
push
outs
cwde
sub
clc
xchg
int3
pop
outs
jb
mov
arpl
stos
sbb
push
and
cmp
cmp
mov
add
cmc
sub
pop
push
mov
cli
stos
or
dec
dec
(bad)
add
in
jo
mov
mov
jne
int3
mov
xchg
ror
add
push
jb
push
mov
cmps
fnstcw
jb
in
pop
jbe
sub
mov
cdq
gs
pusha
aaa
cmp
cwde
mov
aam
pop
repz
ret
(bad)
jle
jl
adc
xor
sub
push
mov
jg
push
sub
mov
mov
inc
fwait
and
dec
jp
(bad)
test
dec
fsubr
scas
in
les
jecxz
inc
xchg
les
lds
inc
or
ins
jbe
aam
inc
mov
leave
repz
sar
repz
xchg
cmc
dec
sbb
test
movs
xor
inc
rcr
mov
push
cmps
dec
xchg
jge
add
xchg
mov
pop
mov
jg
jle
(bad)
jmp
jmp
imul
cmp
mov
pop
cld
cmp
or
loope
rol
mov
scas
cmps
shr
retf
fbld
jge
clc
leave
cmp
mov
jecxz
in
xor
(bad)
sti
rcr
in
repnz
push
fimul
out
push
sub
clc
es
pop
push
scas
lahf
pop
out
imul
hlt
jnp
aad
fld
sub
sbb
std
push
sub
loopne
sbb
cmps
jno
push
jnp
add
xchg
loopne
add
cmp
jne
fist
push
sbb
pop
xor
xor
cmc
sub
dec
mov
cmp
xor
aad
mov
adc
packuswb
call
xor
sbb
das
jb
xchg
xchg
ins
repnz
adc
xchg
mov
pop
loopne
sub
pop
mov
cmp
pop
test
cmp
sahf
repz
mov
and
sub
dec
xchg
and
test
sbb
out
out
jmp
jl
add
aam
sar
icebp
add
mov
adc
and
cmc
pop
cmp
icebp
jecxz
sub
aad
adc
cmc
fst
pop
and
sahf
out
pop
jbe
fadd
fld
sub
mov
cs
pop
sbb
jae
push
adc
scas
push
lods
pop
xchg
lods
test
jp
mov
jle
rcr
xor
mov
xchg
cmp
cwde
mov
mov
cli
rcr
(bad)
or
add
fxch
das
pusha
pop
fsub
std
retf
shr
ror
cli
jmp
popf
mov
jmp
mov
mov
cmp
mov
or
aam
xchg
inc
sub
stc
lods
mov
sub
or
pop
test
or
mov
(bad)
jno
in
xchg
xor
push
out
sbb
push
dec
jmp
shl
pop
push
stos
clc
mov
mov
fst
jae
hlt
push
fcmovu
adc
iret
inc
out
cmp
add
daa
into
std
or
adc
leave
ror
(bad)
mov
mov
inc
xchg
sti
sbb
into
and
push
int3
popa
int3
sbb
pop
test
push
pop
(bad)
or
ffreep
cmp
add
shr
jne
pushf
shl
bound
xchg
in
push
ins
clc
add
les
adc
pop
sbb
dec
mov
loop
xor
or
xchg
call
jb
fstp
js
enter
stos
aad
mov
not
pop
ret
fbld
std
adc
mov
cwde
out
and
push
inc
pop
ins
js
xor
xor
pop
sub
xlat
cmp
fs
cmps
xor
cmp
add
shl
lods
into
jge
outs
sbb
shl
cs
mov
clc
dec
stos
jns
add
ins
(bad)
and
xchg
fldcw
inc
add
mov
aaa
shl
cs
loope
(bad)
mov
outs
mov
in
mov
mov
into
pop
cwde
in
cwde
adc
icebp
out
call
movs
xchg
mov
xchg
inc
cmp
retf
cmp
xchg
push
jg
iret
xor
and
xchg
leave
push
sbb
test
or
stc
lahf
jge
je
push
arpl
jmp
pushf
loopne
jmp
mov
sub
into
fldcw
fstp
aaa
xor
adc
test
jmp
repnz
inc
sahf
push
jmp
outs
jg
sti
shr
and
(bad)
aam
jae
add
push
aam
cli
pop
aas
(bad)
popf
push
clc
add
(bad)
gs
imul
adc
shl
mov
(bad)
mov
cs
cmp
rcr
jbe
xchg
ss
imul
dec
out
xchg
fisub
inc
or
and
or
add
xchg
clc
sub
mov
pop
mov
nop
retf
xor
cmp
loope
add
imul
imul
lock
dec
aad
adc
jbe
fcomip
cmp
sub
jns
mov
jb
mov
cmp
push
ss
dec
fist
jp
push
sub
mov
(bad)
shr
push
pop
inc
cwde
add
fdivr
test
add
push
dec
aam
jno
retf
push
out
jns
jne
mov
popa
add
cld
mov
aaa
adc
sub
push
push
fwait
add
stos
scas
data16
mov
aaa
cmp
imul
dec
call
cmp
sbb
aas
adc
xchg
push
test
hlt
js
push
adc
jb
or
adc
outs
jge
loope
cmps
push
repz
out
out
retf
rcr
stc
dec
test
ds
fcmovu
test
and
inc
push
movs
iretw
and
test
leave
jbe
scas
cmp
and
xor
pusha
mov
xchg
out
or
push
push
pop
inc
adc
call
jo
into
int
out
iret
cmp
rcl
enter
stc
enter
(bad)
mov
mov
inc
or
jmp
adc
inc
mov
and
fistp
fmulp
mov
push
pop
sbb
and
arpl
outs
popf
ret
jp
inc
mov
xchg
inc
jmp
cmp
inc
xor
scas
in
rcr
adc
push
ret
dec
std
or
cdq
std
lock
mov
adc
push
inc
jmp
(bad)
push
xor
jmp
push
mov
adc
icebp
aas
loop
gs
jo
jnp
mov
(bad)
movs
cmp
dec
cmps
daa
add
mov
jecxz
lods
mov
bound
mov
scas
pop
mov
retf
or
into
in
pushf
cmp
das
hlt
jecxz
movs
dec
in
in
dec
push
add
fldenv
sbb
fist
test
lds
std
sbb
ins
outs
fst
gs
inc
dec
mov
scas
xchg
jmp
jmp
pop
cmp
(bad)
sbb
call
xchg
mov
rcl
cmc
int
cmp
mov
call
out
jp
mov
mov
xor
lahf
fist
mov
cld
in
mov
mov
ror
cmp
fdiv
ins
ret
jae
ins
call
jns
dec
out
adc
fwait
cmc
pop
loope
push
leave
popa
mov
jg
adc
out
mov
fucom
mov
out
cld
in
jge
push
es
pop
jle
stos
mov
inc
cbw
and
inc
xchg
cmp
rep
call
push
push
out
popa
mov
dec
cmc
xor
test
inc
aaa
adc
sub
cmp
jp
cmps
sti
push
mov
cmp
mov
in
inc
sub
imul
mov
mov
aam
cmp
popf
mov
and
xor
sbb
jo
add
sbb
rcl
cmp
xchg
cmps
dec
or
ret
rcl
jno
stos
sub
push
into
and
mov
jl
int3
fmul
je
mov
cdq
mov
xchg
inc
and
call
mov
jo
cdq
and
and
(bad)
push
aad
mov
xchg
jp
int
outs
sub
sub
and
xchg
call
fs
std
push
or
out
test
pop
mov
(bad)
and
lods
arpl
mov
mov
sub
adc
repz
xchg
lock
jl
enter
adc
jne
xchg
inc
and
mov
(bad)
data16
aas
and
aaa
jno
hlt
in
sahf
inc
(bad)
adc
ds
arpl
mov
dec
movs
stc
inc
imul
add
pop
pop
test
out
cmp
cmp
sar
in
js
or
inc
je
xor
ins
ret
daa
das
cmp
push
test
shr
jnp
daa
movs
pop
bound
sbb
rol
add
cmp
scas
and
mov
cs
push
test
cmc
jle
stos
shl
sahf
enter
shr
enter
pop
xchg
or
jp
xor
scas
adc
ror
lahf
push
cmp
jbe
aad
sbb
jns
mov
ss
cmp
cmp
shl
je
cmp
cmp
pop
xor
fisub
add
sub
add
xor
inc
jmp
out
mov
pop
nop
inc
pop
ror
and
pop
xchg
pop
(bad)
ins
hlt
and
jns
sar
dec
pop
mov
fsub
inc
inc
loop
neg
xor
test
out
pop
fcomp
xor
mov
jg
sub
push
mov
cld
ss
mov
inc
sub
rol
hlt
or
(bad)
jmp
popa
dec
int3
ds
fdivrp
loopne
scas
aas
sub
dec
mov
movs
rcl
sbb
or
ret
nop
in
nop
or
cmovl
shr
inc
mov
(bad)
stos
inc
xchg
xor
push
inc
enter
(bad)
imul
cmc
call
and
jp
test
test
call
sub
(bad)
data16
jecxz
jne
(bad)
ins
push
dec
add
jp
stos
and
dec
div
scas
jne
shl
and
sbb
push
push
lock
aad
cmp
sub
dec
sbb
inc
jp
mov
cmp
in
test
repnz
test
adc
mov
add
pop
test
pop
sahf
aam
les
das
std
pop
test
jo
xchg
retf
and
push
mov
(bad)
inc
adc
dec
and
ss
inc
mov
in
xchg
lods
add
rcr
retf
(bad)
jne
sahf
mov
mov
sub
mov
popa
in
aas
and
fld
sub
adc
adc
cmp
sbb
rcl
cs
stos
jg
pop
or
(bad)
in
sbb
push
adc
inc
(bad)
push
sar
fwait
movs
inc
sub
or
or
mul
jmp
(bad)
jmp
dec
or
cld
sbb
xor
jnp
retf
das
es
cdq
inc
lds
sub
push
sbb
or
sbb
sbb
sar
mov
pop
out
xor
push
(bad)
int
ins
pop
mov
test
test
dec
lea
rcr
(bad)
or
push
xor
xchg
dec
loop
mov
les
nop
pop
jb
fild
push
mov
aas
es
std
pop
(bad)
pop
loope
push
repnz
xor
pop
clc
pop
xor
jae
mov
mov
mov
mov
and
outs
jmp
and
aaa
fidivr
inc
pop
stos
lds
pop
rcl
outs
(bad)
cmp
into
addr16
add
test
sub
enter
and
jb
pop
push
jne
xchg
mov
or
addr16
ss
icebp
adc
jmp
or
sub
add
repnz
in
sub
mov
(bad)
jge
inc
pop
cmps
jecxz
shl
inc
add
dec
adc
loopne
inc
mov
add
mov
mov
leave
push
pop
inc
jbe
mov
sub
daa
and
mov
pop
pop
icebp
aas
shl
and
xor
pop
sub
(bad)
loope
cs
jg
xchg
sbb
or
jbe
add
nop
xchg
idiv
xchg
pop
pushfw
xor
loope
cmp
cmp
ret
js
add
jmp
jno
cdq
pop
sbb
(bad)
(bad)
(bad)
xchg
jmp
dec
cmp
call
mov
sub
jl
gs
lods
cmp
push
(bad)
mov
out
unpckhps
fcomip
mov
int
lea
cmp
dec
mov
imul
clc
pusha
and
xchg
pop
test
cli
imul
or
lods
jbe
(bad)
jbe
sub
push
fs
mov
jg
push
shl
shl
cmps
pop
inc
jo
sub
mov
sbb
es
das
lock
in
outs
mov
in
mov
fs
dec
jnp
jmp
stc
sub
fnstenv
cmp
cli
xchg
dec
sbb
addr16
mov
out
mov
push
cmp
fidiv
mov
jnp
inc
cs
mov
arpl
jecxz
jmp
mov
aad
cdq
xor
dec
adc
cs
xchg
pop
loopne
pop
das
dec
sbb
shrd
mov
jnp
rcr
mov
xor
push
test
inc
pusha
push
in
pop
jnp
mov
dec
xchg
mov
xor
mov
inc
ja
or
mov
or
call
je
js
sti
push
push
mov
push
push
hlt
arpl
pop
pop
or
in
fst
sub
sti
jnp
movs
jmp
sbb
pop
xor
and
(bad)
adc
mov
xchg
push
jb
out
sbb
or
mov
push
repnz
mov
sbb
jp
ret
inc
cmp
data16
mov
and
inc
push
xchg
mov
mov
fisub
pop
lods
add
push
(bad)
int3
push
adc
mov
mov
pop
dec
pop
into
jmp
dec
sub
xor
pop
jno
mov
sbb
dec
jmp
out
and
inc
push
fldcw
(bad)
inc
mov
fidiv
daa
inc
cli
call
shr
popf
jmp
fdiv
aad
xchg
xor
push
pop
rcl
ret
pop
mov
push
fidiv
loopne
push
inc
fcmovu
cmp
add
push
cmc
fiadd
adc
or
pop
leave
aaa
test
mov
push
mov
mov
ficomp
in
loop
ret
inc
pop
sbb
push
dec
sub
into
pop
adc
cmc
xlat
and
sahf
fidivr
je
mov
dec
(bad)
jg
pop
std
pop
test
cli
enter
push
imul
mov
daa
xchg
push
adc
cmp
sub
push
add
ds
scas
ffree
dec
xchg
mov
mov
int3
jge
push
and
arpl
dec
nop
add
int
add
cdq
inc
outs
popa
out
(bad)
mov
ins
lds
lock
in
cmp
movs
pop
xchg
inc
jns
or
xlat
sbb
xchg
ret
cmp
je
rol
mov
in
cmps
aad
ror
push
es
mov
pop
xor
gs
inc
cmc
dec
cmp
add
shr
sahf
mov
movs
fs
fldcw
xchg
pop
inc
stc
or
xchg
(bad)
push
loopne
rol
cwde
std
(bad)
or
xchg
test
and
(bad)
shr
or
push
daa
mov
or
inc
xor
or
sub
daa
push
fdivr
cmc
cs
dec
ret
push
stc
ror
push
hlt
push
push
ja
clc
cmp
cli
pop
mov
lods
pop
xchg
cmp
retf
jg
(bad)
out
mov
jecxz
pushf
pusha
sar
push
test
or
cmps
fld
add
stos
stos
mov
sbb
data16
stc
add
add
sbb
in
adc
xor
adc
push
stos
and
pop
mov
add
ins
sbb
pop
loop
mov
add
outs
push
retf
mov
pop
xchg
pop
inc
add
retf
int
pop
jmp
xchg
imul
push
stc
lods
ror
xchg
ins
or
sti
fidivr
or
and
scas
sub
sub
pop
dec
in
dec
mov
aas
jae
xor
popa
xchg
add
call
fisubr
lahf
retf
imul
inc
dec
rcr
push
cmp
push
add
imul
(bad)
adc
es
sub
aad
neg
loop
fstp
(bad)
push
outs
cmp
cmp
les
cmps
imul
cmp
pop
push
(bad)
aaa
aad
mov
and
or
call
or
lods
sbb
ja
(bad)
loopne
loopne
add
movs
and
lock
addr16
and
mov
dec
add
fwait
jg
push
mov
shl
pop
dec
sbb
(bad)
push
jle
push
int3
mov
loop
cmp
push
mov
mov
popa
jecxz
(bad)
cdq
add
iret
jne
sti
leave
inc
imul
push
push
xor
rcl
add
push
sbb
mov
pop
mov
mov
enter
or
(bad)
out
je
out
add
aaa
or
aad
xchg
xor
(bad)
arpl
lahf
repz
cmp
aaa
mov
jl
adc
jg
push
sub
xchg
push
bound
and
mov
nop
ror
ja
fucompp
cld
inc
or
mov
fidiv
fdiv
loop
inc
test
dec
inc
aam
in
loop
fldcw
into
dec
ficomp
inc
sub
sbb
jmp
sub
jg
jle
sbb
cmc
mov
fstp
das
sar
out
fild
cmps
pop
movs
enter
mov
ins
aad
sti
popf
jbe
push
call
ss
push
shr
movs
push
inc
mov
push
add
pop
add
out
lock
and
add
jo
(bad)
int
jle
lds
inc
mov
stos
rcl
aam
adc
jb
loopne
loop
cmp
loop
cmp
pop
pop
daa
dec
test
jmp
cli
inc
sbb
mov
jmp
int
mov
and
push
mov
sbb
addr16
je
add
shl
sub
cwde
jle
mov
cmp
movs
pop
push
xchg
call
aaa
mov
cdq
aas
test
inc
(bad)
pop
cld
jg
and
dec
std
imul
pop
clc
mov
sbb
lods
or
sti
cmp
and
fidivr
loopne
int
in
cld
dec
(bad)
gs
pop
mov
dec
pop
ret
jb
outs
sub
jno
je
or
repz
das
inc
mov
das
loope
mov
sbb
mov
dec
mov
(bad)
(bad)
jle
stos
in
push
xor
mov
or
popa
pushf
xor
(bad)
mov
pop
rcr
fwait
in
add
dec
mov
out
push
mov
push
cli
push
adc
std
ins
stos
jecxz
xchg
add
jb
pop
xor
sbb
sub
pop
inc
aas
dec
sbb
inc
xchg
cs
loopne
mov
ss
sbb
push
jns
pop
push
in
pop
or
fsub
adc
pop
mov
mov
fisttp
xchg
pop
adc
push
or
sar
jns
fidiv
jne
ss
xchg
mov
cdq
xor
or
hlt
pop
int3
gs
adc
lods
jbe
jmp
add
repz
out
in
push
add
mov
and
mov
sbb
mov
push
pop
jle
iret
shl
adc
mov
test
add
aam
xchg
mov
cmc
dec
cmp
or
mov
xor
pop
repz
pop
jle
ins
sbb
mov
jg
dec
mov
in
out
test
mov
aad
dec
and
ins
cmp
xor
loopne
jg
mov
mov
lods
test
jae
jns
je
mov
mov
xchg
icebp
ror
dec
(bad)
test
adc
sub
adc
cmps
cmps
pusha
mov
mov
fistp
xchg
addr16
push
js
inc
push
and
push
(bad)
fld
jl
xchg
ds
sbb
(bad)
sbb
(bad)
retf
dec
into
mov
in
inc
jne
mov
sbb
(bad)
fnstenv
mov
fist
ins
mov
xchg
inc
bound
test
cmps
lds
nop
dec
scas
lods
pop
xchg
push
mov
loopne
lock
icebp
mov
push
sbb
pop
push
test
nop
in
mov
ret
addr16
sub
or
fld
imul
jb
clc
mov
(bad)
out
xchg
inc
mov
pop
ret
add
shr
dec
dec
shrd
das
mov
retf
test
add
add
cld
cmp
xchg
xor
xchg
mov
cmp
adc
loopne
add
pop
call
mov
xor
movs
pop
repnz
icebp
mov
adc
outs
inc
xchg
mov
sbb
call
sub
test
mov
adc
movlhps
xchg
add
adc
xor
mov
(bad)
pop
bound
push
in
fiadd
pop
das
inc
aam
loop
mov
fstp
shr
mov
mov
add
test
retf
out
xor
mov
mov
daa
pushf
mov
cmp
scas
pop
pushf
and
test
fst
aas
daa
inc
jmp
imul
sbb
shl
pop
scas
xor
and
or
pop
mov
std
xor
stc
iret
fidivr
sti
hlt
dec
jne
push
out
das
cli
mov
add
push
lods
mov
and
dec
rol
jmp
in
or
pop
xor
stos
sahf
cmps
pusha
dec
call
jae
ds
and
ins
js
inc
ss
cmp
xchg
mov
add
xor
mov
and
les
mov
(bad)
adc
or
mov
jp
jge
push
jb
stc
jle
jmp
ss
and
(bad)
sub
cmps
hlt
inc
retf
xor
repz
or
sahf
hlt
ja
repz
push
mov
aas
add
jbe
mov
mov
pop
sub
cmps
retf
(bad)
jns
mov
mov
add
add
xlat
daa
ss
cli
movs
cmp
xor
loop
dec
js
mov
mov
sub
and
xor
sbb
stos
enter
cmp
xor
lods
push
pop
mov
inc
not
pop
or
aaa
cmps
push
mov
mov
cmp
push
cmp
jne
cmp
mov
(bad)
out
xchg
fnstsw
outs
cwde
sub
das
adc
into
jne
jmp
lods
xchg
and
nop
loop
mov
and
xchg
cld
rcr
in
jmp
dec
jg
xor
add
aam
popa
mov
cmp
(bad)
(bad)
pushf
fwait
je
(bad)
cmps
rep
out
stos
xor
adc
dec
mov
push
loope
jecxz
das
loopne
inc
retf
sbb
gs
shl
lea
mov
cwde
pop
addr16
adc
jae
retf
(bad)
and
fwait
popa
cmp
fwait
movs
adc
ror
inc
mov
inc
xchg
loopne
inc
xchg
aad
xchg
mov
repnz
mov
jns
into
jne
inc
sbb
call
dec
(bad)
xor
mov
int
mov
inc
sub
adc
std
push
push
mov
push
in
cmp
push
push
jmp
inc
aas
and
aas
sub
sub
shl
jl
pusha
lea
cwde
adc
stc
inc
fst
push
jne
inc
jp
jae
js
xor
cmp
pop
jl
call
dec
jle
ror
mov
out
jne
aaa
js
mov
mov
ret
enter
pop
outs
mov
cmp
sbb
imul
iret
out
in
jg
cs
popf
loopne
int
adc
mov
or
das
clc
inc
popa
cmp
lock
mov
dec
adc
sbb
es
dec
jle
pop
cmp
shr
push
movs
popa
aaa
stos
mov
nop
xor
mov
(bad)
xchg
jmp
mov
jp
fild
dec
push
loopne
cmps
les
xor
fwait
xor
and
add
xchg
mov
out
shl
into
sub
sbb
pop
mov
xlat
pop
(bad)
addr16
jb
in
xor
call
push
(bad)
div
mov
xchg
add
ins
and
cmp
not
daa
inc
adc
jno
mov
and
push
jae
or
cli
cmp
inc
stos
add
xchg
mov
and
ficomp
mov
add
or
and
or
and
sub
mov
dec
fwait
pop
(bad)
jmp
rcl
sbb
nop
jle
rcr
test
sbb
call
jbe
inc
ret
adc
add
push
jge
out
mov
mov
cli
int3
pop
imul
cli
jp
fs
xchg
and
sar
mov
mov
out
sbb
fst
lock
mov
data16
je
nop
clc
adc
ss
icebp
cdq
add
push
xchg
in
dec
fist
cmp
and
pushf
jl
mov
add
retf
fwait
sub
test
jg
call
imul
push
es
scas
imul
retf
stos
(bad)
ds
jl
cmp
jmp
shr
stc
add
pop
in
fist
test
pop
in
mov
adc
shl
nop
dec
ds
stos
jno
push
jmp
cmps
out
fbld
xchg
xor
push
pushf
push
push
mov
clc
dec
(bad)
retf
xor
push
rcr
inc
test
pushf
mov
mov
mov
into
jbe
sub
fbld
cmp
loopne
pop
push
dec
call
pushf
daa
rol
retf
cmp
movs
xor
outs
int
inc
xlat
mov
push
sti
cdq
xor
pusha
cmp
sbb
dec
aad
outs
sbb
pop
add
xor
lods
push
shr
sub
fmul
mov
ins
sbb
cmp
dec
add
mov
push
stos
adc
clc
in
xor
sbb
jne
ins
movs
mov
mov
test
jnp
xchg
shrd
inc
femms
and
xor
cmp
movs
fadd
xchg
test
or
cmp
lahf
das
ror
pop
in
fistp
or
into
mov
push
stos
sub
gs
and
dec
ins
or
inc
mov
dec
sbb
fisubr
or
addr16
ret
leave
into
sub
xchg
cmp
push
and
xchg
xor
enter
jmp
sub
ins
js
mov
pusha
adc
out
pop
pcmpeqd
xchg
pop
xchg
inc
shl
sti
cmp
sahf
and
jae
sub
push
add
mov
xchg
sub
and
xor
dec
cmp
push
hlt
mov
pushf
xchg
jne
pop
pop
or
push
rol
mov
(bad)
jmp
or
or
or
and
enter
fs
jo
out
sub
rcr
inc
aas
push
rcr
cmp
out
xor
popf
push
dec
cmp
repz
push
mov
std
push
not
sub
div
mov
dec
xchg
inc
xor
mov
stc
icebp
add
out
lods
jno
jmp
add
dec
mov
nop
mov
push
pop
pop
push
jns
fs
push
fstp
mov
mov
pop
fwait
hlt
in
pop
pop
add
or
lea
dec
stos
add
push
jno
ret
mov
shl
mov
mov
pusha
nop
mov
jne
mov
jle
cmc
xor
enter
xchg
mov
and
push
cmps
push
jno
and
xor
(bad)
cwde
jmp
adc
ror
or
jbe
mov
aad
stos
out
movs
or
popf
test
dec
mov
dec
les
xor
fcmovu
xor
ds
jmp
or
xlat
xchg
ins
mov
push
cmp
mov
sbb
pop
or
jb
or
jmp
pop
cli
and
stc
push
or
adc
popa
adc
popw
push
dec
adc
dec
cmc
and
adc
imul
jb
adc
and
(bad)
daa
xchg
adc
xor
stos
and
imul
cmp
pop
jbe
dec
out
stos
test
and
cli
add
mov
lock
sub
sub
mov
retf
loope
and
jae
nop
pop
cmp
cmp
in
mov
movs
and
cli
addr16
stos
loopne
mov
pop
lods
aas
int
jae
sub
or
ja
adc
jno
add
gs
nop
mov
ins
dec
test
arpl
(bad)
fnstsw
stos
jmp
push
mov
iret
cmp
in
jg
call
movs
pop
call
dec
jbe
or
stc
xchg
cmp
pop
mov
dec
xor
in
cs
mov
mov
bound
or
or
cmp
or
pop
jecxz
fst
mov
mov
mov
gs
sbb
mov
sahf
xor
lahf
dec
jmp
jp
xchg
mov
fiadd
ja
mov
fidiv
cmps
mov
je
imul
push
mov
or
clc
sub
je
pop
cld
xchg
xor
push
pushf
cmps
clc
xchg
adc
rcl
(bad)
enter
(bad)
fdiv
or
out
repnz
std
mov
out
repz
pop
or
xchg
cli
inc
hlt
test
mov
hlt
inc
(bad)
mov
mov
in
(bad)
cmp
lods
adc
jne
push
popa
push
fadd
cmp
rcl
sti
ret
(bad)
inc
add
push
sahf
dec
fs
cmps
mov
mov
daa
jmp
add
ret
mov
ss
mov
inc
ret
mov
mov
push
clc
xchg
adc
mov
cli
loop
cwde
out
ds
sbb
cmps
jp
sbb
jnp
xchg
jp
pop
pushf
daa
jne
jmp
cld
std
mov
icebp
movs
fisttp
gs
scas
mov
or
inc
xchg
xor
(bad)
xor
dec
mov
add
mov
ja
jns
data16
adc
fsub
and
lea
lods
mov
je
sbb
pop
dec
pop
movs
in
mov
mov
cmp
(bad)
movs
pop
pop
pushf
(bad)
retf
or
pusha
sub
ss
sahf
test
ss
and
pop
mov
or
popa
mov
pop
stos
pop
push
int3
jecxz
xor
adc
add
push
inc
icebp
loop
adc
arpl
nop
mov
jecxz
add
gs
pop
mov
mov
enter
xor
pop
lods
xor
mov
dec
mov
sbb
cli
jnp
rol
lods
ja
mov
movs
jg
push
inc
and
or
stos
jns
or
(bad)
hlt
sbb
adc
xchg
mov
cmp
(bad)
jmp
ins
jno
out
mov
jne
out
dec
fcomp
jg
out
retf
inc
pusha
loopne
mov
sub
pop
pop
(bad)
out
iret
and
lock
dec
and
push
sbb
fiadd
call
jp
add
loope
jmp
mov
jb
cmps
jns
jne
imul
push
out
pop
mov
aad
add
cwde
data16
add
jno
add
shr
jg
jo
dec
pop
int3
mov
in
rol
mov
jp
push
jb
pop
enter
or
mov
fs
pop
or
call
cmp
xchg
sub
pusha
mov
test
push
and
popa
call
xchg
movs
push
sub
(bad)
cmc
push
pop
xchg
xchg
xchg
dec
leave
adc
aad
jno
js
lods
mov
cmps
push
cmp
in
stos
retf
dec
fadd
call
movs
call
ins
jg
stos
sbb
sti
mov
xor
add
pop
ret
shl
retf
sbb
inc
jns
inc
es
push
adc
sub
push
push
gs
test
push
jne
loope
add
in
pop
jns
mov
mov
adc
push
or
xor
int3
or
add
ficomp
lods
icebp
and
ins
jno
popa
push
jb
fsub
xor
daa
ja
xchg
add
mov
enter
pextrw
inc
dec
mov
adc
gs
lods
js
jo
sub
(bad)
std
in
aam
hlt
stos
xchg
fstp
ins
add
(bad)
and
ins
and
iret
loop
inc
cmc
int
stc
adc
pop
cwde
pushf
call
pop
and
cmp
ins
mov
and
cmps
int3
addr16
or
or
fidivr
rcl
test
jmp
je
xchg
sti
gs
xor
push
imul
enter
leave
push
add
mov
push
jne
dec
fsub
mov
sbb
push
xchg
jo
pop
mov
sbb
jns
push
addr16
xchg
shl
cs
mov
shr
push
pop
addr16
jl
sub
stc
mov
(bad)
adc
daa
mov
mov
xor
inc
xchg
xchg
loopne
xchg
push
sbb
xor
(bad)
ins
shl
jns
add
cdq
neg
xchg
sar
cmp
mov
in
lods
or
jg
jle
pop
(bad)
mov
dec
xchg
jne
pop
push
pop
imul
xchg
pop
and
in
add
sbb
ja
(bad)
(bad)
fisub
xor
ss
fidivr
test
or
js
(bad)
push
shr
inc
cmp
mov
jg
gs
mov
dec
lock
mov
lahf
push
jbe
push
call
or
call
lods
push
mov
xchg
sub
xor
jo
mov
jne
(bad)
cmp
and
sbb
jns
mov
mov
(bad)
frstor
es
inc
int3
pusha
mov
addr16
sbb
out
in
inc
rol
leave
imul
pusha
jg
clc
mov
push
sbb
leave
lods
in
pop
imul
and
mov
adc
rcr
mov
and
idiv
fimul
sub
(bad)
(bad)
imul
inc
in
inc
scas
add
sbb
sbb
mov
mov
cdq
push
scas
push
sbb
div
fsub
push
fwait
mov
push
and
popf
test
push
shl
cdq
ins
cwde
xor
icebp
adc
xor
xor
sub
add
adc
retf
add
adc
js
sub
test
adc
das
dec
ds
stos
inc
repnz
xchg
xchg
jle
and
pop
and
aaa
jo
sti
and
sbb
test
cmp
cmps
cwde
movs
push
mov
inc
hlt
dec
add
pop
or
xchg
in
loop
call
inc
inc
jge
fld
loope
gs
ds
pop
sub
pop
shl
btc
add
int
mov
push
jno
mov
sbb
cmps
shl
push
xchg
addr16
cmps
jns
scas
or
xchg
or
sub
cmp
loopne
or
xor
xchg
pop
test
jns
inc
shr
dec
jb
imul
out
mov
stc
das
cmp
xor
ficom
jnp
test
ror
mov
call
mov
sbb
into
xor
sub
xor
leave
mov
cmps
fwait
out
push
out
bound
stc
inc
dec
pusha
xchg
dec
cmp
test
ds
and
pop
sub
sti
ror
or
popw
sub
pop
popa
jge
out
outs
dec
into
xchg
dec
add
scas
mov
mov
fisub
cmp
mov
ret
xchg
mov
push
jle
test
fisub
retf
or
aas
test
shr
mov
in
jno
jae
cdq
sub
add
xchg
cmp
pop
mov
(bad)
ror
mov
adc
jno
pop
cmps
in
(bad)
rol
loopne
inc
(bad)
daa
mov
cli
shr
inc
cli
call
mov
cmps
dec
test
out
test
fstp
push
outs
add
xchg
pop
retf
mov
out
out
dec
scas
push
sub
in
in
jae
test
xchg
adc
jnp
add
inc
test
push
mov
retf
jg
mov
ins
fcmovu
imul
outs
or
or
or
mov
jbe
inc
xchg
test
sbb
lock
dec
add
lods
repnz
dec
sbb
or
or
cmp
pop
stos
test
jg
jae
xor
xor
pop
push
mov
arpl
(bad)
push
repnz
mov
pop
lock
dec
je
pushf
out
xchg
sbb
popa
jmp
jmp
jb
jnp
loop
dec
hlt
scas
dec
cmp
add
cmp
push
(bad)
icebp
cmps
mov
or
add
xchg
inc
adc
cwde
mov
and
cmp
cdq
sub
adc
pop
or
(bad)
ror
mov
sbb
repnz
xchg
dec
xchg
push
mov
ins
or
rcl
xor
out
adc
ss
xor
and
pushf
retf
xor
pop
jmp
inc
adc
out
ins
xor
sbb
fsub
add
into
repnz
jl
jl
fs
popf
cs
movs
xlat
shr
clc
mov
in
xchg
fimul
ins
pop
xchg
inc
sbb
mov
add
jae
movs
or
out
mov
les
cli
aam
bound
xchg
loop
in
js
adc
jg
jl
sub
clc
xchg
cmp
retf
imul
sbb
and
lea
mov
sbb
sbb
aas
mov
sub
popa
cs
es
test
xchg
push
cmp
pop
dec
mov
add
fsubr
push
add
daa
xchg
mov
pop
jae
aam
or
pusha
xchg
and
dec
pop
dec
adc
pushf
jg
retf
mov
and
scas
aam
icebp
add
mul
or
rcr
mov
cli
sub
inc
aas
jmp
xchg
push
sbb
pop
sub
add
jb
dec
dec
mov
dec
mov
clc
ja
fmul
nop
pop
sub
dec
test
push
aam
pop
pop
pop
mov
test
sar
int3
fnstenv
dec
and
mov
mov
stc
xor
and
stos
jle
push
test
idiv
sbb
xlat
gs
pop
xor
outs
test
sub
xor
fcomp
test
test
lods
aad
or
(bad)
jne
sbb
mov
push
lea
stos
idiv
fbstp
fld
(bad)
mov
(bad)
jnp
pop
jbe
test
into
cs
mov
pop
cmc
cmp
dec
and
outs
mov
add
push
add
and
addr16
jo
mov
sbb
mov
or
idiv
push
fwait
sub
ja
call
pop
adc
sub
mov
shl
push
call
stos
inc
cmp
gs
mov
leave
adc
int3
or
cs
cli
aaa
push
xor
iret
sti
adc
xor
mov
push
lock
mov
pop
in
or
mov
cmp
add
or
jg
loop
add
and
push
test
lea
pop
call
sub
test
pop
out
push
pop
aam
fsub
into
in
(bad)
fdivrp
int3
pop
mov
or
cmp
and
pop
mov
xor
mov
mov
sbb
arpl
imul
dec
imul
stos
jge
xchg
out
pop
mov
scas
scas
xor
sti
add
fdivr
fiadd
outs
out
in
sbb
sub
cmc
xchg
fxch
or
enter
inc
push
xlat
add
ins
data16
mov
dec
popf
push
xchg
pop
rcr
mov
daa
push
pop
pushf
or
jbe
retf
adc
cmps
je
mov
outs
imul
push
xchg
repz
mov
ret
(bad)
pop
cdq
pop
jne
aaa
mov
mov
out
cmp
scas
dec
ds
mov
imul
sbb
and
cwde
loop
or
xlat
xchg
movs
stos
and
iret
bswap
in
dec
loop
and
jmp
not
adc
push
(bad)
or
and
push
add
push
inc
sub
mov
lock
mov
xchg
xor
dec
xchg
ins
nop
jmp
mov
push
into
inc
fistp
test
add
ret
int3
dec
pop
mov
icebp
push
jo
pusha
push
push
ja
popa
and
xchg
das
lock
xchg
cmp
mov
cmp
or
mov
rol
retf
mov
dec
stos
sbb
inc
dec
fisubr
add
xchg
jae
retf
jge
addr16
mov
frstorw
push
mov
push
cmps
out
nop
call
mov
cmps
mov
inc
fwait
sub
ror
call
rol
adc
add
jg
push
clc
cmp
cmp
and
retf
xchg
dec
dec
xchg
xor
fdivr
push
adc
or
mov
or
mov
mov
cmps
imul
mov
fwait
mov
mov
shr
pop
and
pop
add
jmp
jo
out
push
in
fistp
sar
shl
mov
loop
jbe
and
(bad)
or
or
cmp
mov
stos
aad
sahf
push
adc
jo
out
lock
add
pop
or
pop
pop
scas
int3
jne
rcr
fiadd
stc
pusha
mov
js
cmc
je
and
add
inc
cmp
jmp
inc
repnz
imul
movs
(bad)
frstor
enter
push
adc
movlps
lock
mov
jle
(bad)
lea
pushf
lods
jle
xchg
mov
jl
fisttp
stos
adc
mov
out
xor
(bad)
xlat
fs
call
loopne
adc
push
aas
xchg
imul
or
movs
stc
je
xchg
call
mov
(bad)
sub
imul
cwde
ja
sub
out
jno
inc
enter
mov
cs
sbb
sahf
add
scas
jno
out
pop
sub
mov
mov
xchg
in
cmps
mov
iret
imul
jle
je
shl
mov
es
push
nop
jns
add
xor
sti
in
gs
sar
mov
jp
or
arpl
push
pusha
(bad)
pop
int3
jbe
mov
mov
mov
and
dec
push
jb
mov
xor
xchg
pop
loopne
mov
sbb
stos
jmp
xchg
jmp
popf
push
bnd
xchg
mov
mov
sbb
xor
in
frstor
movs
fld
adc
xlat
mov
jne
aas
cld
mov
add
fsubr
xor
mov
mov
xchg
mov
mov
lock
jmp
inc
mov
mov
adc
ss
(bad)
sar
aam
test
xchg
test
pop
fiadd
movs
in
push
in
jge
xchg
add
sub
add
push
jg
and
test
sub
adc
idiv
push
xor
arpl
mul
and
or
sti
sahf
test
mov
mov
cvtps2pd
xchg
mov
(bad)
popf
cmp
jmp
scas
cdq
and
sbb
test
lds
stc
pop
call
dec
dec
pop
aaa
stos
sar
jno
adc
retf
movs
inc
pop
xor
dec
jmp
sbb
add
fcomip
stc
dec
sub
ror
repz
cmp
nop
add
pop
mov
and
mov
cmp
cmp
sbb
das
test
das
not
push
fucomp
sub
push
aaa
loope
adc
idiv
sbb
inc
mov
setb
inc
sti
and
jo
addr16
repnz
out
xor
shl
stc
sbb
cmp
pop
jl
mov
mov
xchg
inc
or
ds
jne
dec
mov
pop
jmp
je
xor
cmc
scas
xor
retf
aad
pop
or
mov
(bad)
mov
push
sub
and
lock
or
push
dec
in
and
cmps
(bad)
mov
dec
push
lahf
dec
cs
xchg
or
out
xchg
pop
or
(bad)
ror
cwde
sub
mov
ret
cmp
sbb
inc
or
les
push
add
aad
stc
aaa
ds
aad
adc
lds
xchg
lea
push
adc
cld
call
movs
xlat
jl
xchg
stc
xchg
xor
fs
add
mov
out
into
push
ror
xchg
inc
adc
sub
shr
dec
sbb
bound
in
int3
pop
gs
mov
jne
jb
jmp
in
ja
popa
jge
jmp
(bad)
push
fmul
jnp
cmc
jl
out
dec
sahf
(bad)
sub
imul
inc
pop
or
outs
je
jmp
loop
test
outs
push
push
pop
xor
ret
or
adc
imul
out
aas
push
(bad)
push
(bad)
xlat
jns
add
loope
jbe
mov
mov
sub
pop
cmpxchg
mul
cmp
jbe
push
dec
xor
outs
loopne
lea
sub
scas
mov
push
push
fsub
dec
jmp
imul
mov
jecxz
sbb
cmps
mov
jo
out
and
sub
shl
adc
or
mov
push
push
daa
pusha
fdivr
xchg
ret
cmps
cmp
dec
adc
sbb
lahf
retf
(bad)
cld
pop
sahf
dec
outs
sbb
add
popf
dec
loopne
push
sub
loop
enter
mov
mov
sahf
jle
jmp
outs
es
repnz
das
sbb
mov
pop
leave
cs
jno
add
hlt
popf
jg
ja
jmp
adc
add
scas
push
cld
dec
mov
cmc
sbb
fsub
pop
dec
movs
call
inc
dec
add
dec
pop
jecxz
xor
(bad)
cmp
dec
push
cmp
(bad)
retf
(bad)
pop
test
mov
sub
jo
(bad)
lock
outs
pusha
cs
inc
mov
jmp
jnp
lea
dec
into
sub
xor
lods
(bad)
push
or
xchg
inc
push
outs
cmp
cwde
cli
hlt
addr16
repnz
mov
aaa
add
mov
fwait
push
mov
jmp
xchg
das
inc
out
popf
or
dec
dec
and
pop
(bad)
leave
push
imul
inc
popa
mov
repnz
scas
cmp
sub
idiv
xlat
ja
dec
inc
(bad)
jns
cwde
ret
fadd
adc
mov
pop
jb
add
push
cld
test
push
mov
xor
sbb
sub
push
push
and
and
repnz
and
test
or
mov
pop
icebp
jnp
fdiv
test
pusha
gs
sbb
retf
cmp
fadd
jg
push
xor
movs
and
pop
sar
loop
sub
xor
jo
clc
paddw
int
jno
movs
sub
xchg
clc
loop
movs
mov
dec
data16
sbb
aaa
dec
cs
adc
dec
dec
xchg
fbstp
out
inc
mov
sbb
xor
mov
mov
add
mov
stos
ret
hlt
cmps
fst
cdq
movs
mov
lods
rcl
stos
jg
rcr
jecxz
jb
jmp
inc
inc
jp
push
test
cmps
adc
or
ss
pusha
add
add
and
retf
xchg
push
dec
xchg
jno
imul
sahf
call
imul
sbb
sub
aam
and
mov
(bad)
cmp
push
mov
or
pop
(bad)
aas
mov
cwde
scas
mov
cmps
push
inc
pop
or
mov
in
loopne
pop
mov
cli
sahf
les
repnz
aaa
imul
or
ret
inc
repz
test
mov
mov
pushf
push
aaa
bound
rol
pop
cli
arpl
loop
lock
sbb
cld
icebp
cld
les
jae
mov
adc
dec
int
mov
jecxz
cmp
popf
ret
or
or
ss
inc
or
je
cli
sub
jp
scas
mov
mov
pop
(bad)
add
xchg
mov
mov
jnp
rcl
mov
jnp
add
int
imul
sbb
mov
ins
add
pop
ret
dec
cwde
jno
cmp
sub
xor
mov
fwait
cmp
add
and
add
dec
mov
cmp
inc
movs
mov
xchg
xor
push
ret
sbb
pop
pop
mov
jo
sub
and
jmp
ret
hlt
(bad)
push
popa
dec
add
or
sbb
xor
es
ret
idiv
in
push
xchg
fmul
(bad)
ins
xchg
in
das
dec
inc
mov
pop
xchg
xchg
and
lock
popa
loope
mov
inc
add
hlt
mov
mov
(bad)
fst
xchg
jl
xchg
movs
jo
sbb
jmp
stc
inc
mov
lods
mov
call
dec
jmp
jle
mov
aam
or
xor
loopne
jno
dec
daa
add
test
rcr
dec
in
gs
mov
jle
sbb
mov
fistp
xchg
dec
and
shr
daa
in
test
or
sbb
pop
push
add
addr16
in
sbb
and
pop
aad
dec
shl
in
call
cmps
inc
mov
sub
or
mov
(bad)
and
push
adc
jmp
xor
sub
and
iret
cmps
and
add
mov
jecxz
pop
mov
js
mov
xor
aam
push
ficom
jecxz
sbb
xor
outs
mov
neg
adc
xor
dec
loope
push
in
jmp
push
or
adc
xor
cmp
out
sub
lea
and
iret
mov
sbb
das
rcl
lock
fcomp
sub
or
and
mov
ss
out
lds
push
cvtps2pd
inc
pusha
mov
sub
dec
leave
loopne
iret
xchg
jns
imul
es
fidiv
leave
sbb
cld
cli
imul
fwait
jb
dec
xor
pop
enter
fchs
or
std
stos
xor
test
cmp
add
jecxz
add
xchg
jmp
mov
lock
cdq
neg
mov
(bad)
out
call
xchg
cmps
lods
push
mov
popa
loope
mov
in
lea
lea
nop
jo
fcmovne
pop
iret
sbb
in
add
popf
mov
test
mov
adc
ror
push
mov
or
xchg
push
pusha
sub
pop
xlat
mov
mov
pop
fld
jmp
shl
or
popa
and
punpckhwd
jge
jae
in
call
scas
in
dec
ins
jle
cdq
and
jecxz
pop
(bad)
in
inc
xlat
mov
sbb
cdq
cmp
scas
xchg
or
jnp
(bad)
mov
or
xor
ss
enter
sbb
stos
sub
mov
or
adc
out
mov
std
sub
leave
and
sti
pop
(bad)
pop
and
add
jecxz
mov
sbb
add
and
fild
or
pop
ret
aaa
stos
or
push
test
jnp
popa
pop
lods
ret
test
movs
xchg
repnz
ja
(bad)
pop
and
mov
mov
iret
call
xor
scas
sub
or
or
cmps
or
data16
movs
mov
mov
pop
ja
pop
(bad)
retf
mov
das
mov
mov
mov
imul
jbe
clc
jmp
xor
inc
and
stos
aad
xchg
lds
push
jns
or
ficom
pusha
retf
call
and
int
inc
int
fcom
pop
mov
xor
xchg
or
fisubr
inc
mov
sub
xor
outs
das
aam
fwait
lds
cmp
dec
pop
sbb
outs
shr
mov
xor
adc
mov
rol
xchg
mov
outs
ror
mov
mov
xchg
jbe
lock
inc
aas
cmps
getsec
scas
xchg
dec
into
jne
shl
jecxz
vpmadcswd
inc
out
movs
add
inc
je
adc
jns
loop
retf
dec
mov
aad
or
das
test
in
into
(bad)
jne
jmp
(bad)
inc
into
lahf
in
lahf
inc
scas
cmp
push
inc
pushf
or
sbb
jno
mov
jg
mov
gs
in
inc
int3
(bad)
sub
jle
and
cmp
cmp
jmp
pop
mov
jae
xor
(bad)
mov
in
mov
pop
push
test
push
add
fisub
aad
xchg
jae
hlt
pop
pop
sbb
mov
or
adc
add
adc
popa
dec
aam
aam
sbb
repz
bound
in
adc
div
dec
xchg
aas
and
cmp
sbb
inc
cdq
lods
sub
sub
std
nop
add
(bad)
xchg
cmp
test
push
pop
test
mov
push
ret
aam
mov
pop
leave
rcl
sahf
aas
dec
cld
sbb
sub
xor
push
pusha
mov
jl
mov
mov
adc
pop
or
jle
push
add
outs
lods
scas
and
mov
jns
mov
stc
jb
or
(bad)
aam
mov
push
fstp
add
test
add
scas
dec
push
lds
push
jg
pop
cld
mov
and
addr16
pop
xchg
jo
sahf
mov
push
pop
cmp
mov
push
sub
pusha
sbb
mov
in
fiadd
imul
out
call
js
pop
call
xor
test
retf
(bad)
mov
repz
push
aaa
loop
xor
adc
cli
movs
es
jns
sar
jbe
mov
sub
pop
mov
outs
xchg
sbb
aad
shr
or
pop
xlat
mov
ja
cmps
jno
mov
dec
lahf
nop
inc
stos
pusha
fwait
or
(bad)
xor
lock
jo
push
sbb
stos
mov
scas
inc
fstp
pop
mov
rcr
sub
je
push
mov
ins
std
mov
movs
neg
mov
add
mov
mov
pop
mov
enter
or
push
call
dec
scas
ror
sub
fistp
sbb
aad
cmp
jne
idiv
jmp
popa
xchg
fisubr
cmps
add
mov
mov
xchg
jp
push
xchg
fsubr
mov
sub
mov
xor
mov
aad
aad
mov
iret
xchg
fdiv
xchg
clc
sbb
cwde
push
inc
mov
sti
push
jp
repz
adc
stos
neg
cmp
push
pop
scas
adc
mov
pusha
or
stc
xor
mov
je
fbstp
loopne
cli
sbb
leave
fsubr
les
scas
shl
dec
sbb
sti
mov
and
pop
movs
enter
cmps
jge
push
retf
dec
mov
cwde
in
mov
sbb
pop
adc
popa
movs
aad
pusha
lds
rcl
dec
imul
aad
jecxz
inc
ja
add
xchg
jg
mov
int
ss
ins
dec
bound
mov
ds
mov
mov
into
fs
push
bound
pop
ret
or
mov
push
mov
sbb
(bad)
aad
scas
jle
adc
les
push
pushf
fisubr
fisubr
jbe
add
dec
es
sbb
inc
mov
gs
pop
mov
movs
inc
lahf
fs
mov
mov
cdq
or
inc
mov
(bad)
sbb
int
pop
in
std
in
loopne
cmp
add
retf
or
jo
cmp
sbb
mov
daa
call
test
inc
inc
bound
repnz
out
(bad)
ins
adc
jns
sub
xchg
or
test
lods
fld
xchg
in
cmp
js
pusha
inc
(bad)
icebp
xchg
mov
mov
pop
fldenv
xchg
adc
ins
inc
ins
pop
ins
push
sbb
mov
sub
mov
and
in
pop
jge
inc
rcl
cmp
push
(bad)
ror
ins
push
dec
test
jnp
xchg
cdq
scas
retf
adc
cmp
fsubr
sub
ficomp
sbb
aad
sar
sbb
hlt
push
stos
std
out
mov
in
and
repz
adc
push
pushf
push
popa
and
mov
cmps
jle
loope
or
jecxz
mul
in
(bad)
mov
xchg
(bad)
adc
js
adc
ja
sti
and
(bad)
(bad)
je
dec
inc
xchg
pop
cmp
xor
rol
adc
mov
sbb
in
pop
xchg
mov
jne
or
rol
das
addr16
mov
sbb
out
(bad)
out
in
dec
icebp
cmp
sub
pop
mov
sbb
xor
mov
retf
mov
loope
and
and
rol
(bad)
xor
ror
int3
and
or
jnp
mov
mov
gs
popa
push
mov
ds
push
jbe
xor
les
outs
out
les
adc
jae
jge
or
in
jmp
fild
cld
outs
add
bound
sahf
mov
push
call
std
and
pop
mov
add
jne
leave
gs
int3
mov
lea
mov
pusha
repnz
mov
jne
cmps
xor
imul
mov
sub
mov
adc
(bad)
push
nop
popf
add
out
dec
int
loope
push
push
in
adc
lods
hlt
jno
lods
add
dec
mov
in
pushf
loop
(bad)
push
xchg
in
(bad)
mov
and
push
movzx
jo
xor
mov
push
test
ins
aad
jnp
aaa
add
sub
(bad)
imul
inc
aad
stos
xlat
stos
mov
shr
or
out
popf
mov
xchg
lahf
xchg
and
int3
mov
jp
fs
ins
pop
stos
aam
xor
xchg
mov
mov
xor
shl
adc
pop
mov
(bad)
mov
push
push
rcl
or
not
push
mov
mov
cmp
lahf
xchg
aaa
sub
clc
add
jae
pushf
les
mov
cmp
outs
data16
(bad)
mov
push
pop
mov
inc
cmp
xchg
mov
rcr
ja
sbb
add
sub
or
push
or
das
mov
dec
add
fwait
inc
retf
mov
bound
mov
push
dec
arpl
adc
jge
push
sbb
in
aad
jecxz
lsl
xchg
jmp
shr
pushf
mov
popa
nop
xor
(bad)
call
sbb
out
and
sti
lahf
cmps
lods
cmp
xchg
dec
xchg
rcr
popa
dec
dec
gs
arpl
push
imul
lods
jle
sub
inc
jge
data16
or
adc
icebp
cmp
sub
cdq
arpl
cmc
jge
cs
pop
xchg
iret
(bad)
into
(bad)
int3
rol
sub
pop
pop
xlat
jecxz
mov
aad
xor
lock
inc
into
and
lahf
xchg
xchg
dec
sti
mov
aad
push
jne
ds
jge
(bad)
jb
xor
mov
jmp
cmp
cmp
ror
add
xor
in
dec
dec
cmps
js
dec
(bad)
mov
mov
lahf
push
mov
push
xchg
cmp
adc
inc
ret
icebp
or
xor
lods
loope
jo
mov
aam
movs
or
pop
jnp
lods
jae
inc
dec
push
sbb
cmp
and
mov
and
fmul
(bad)
hlt
popa
popa
(bad)
pop
pop
jmp
or
xchg
mov
push
xlat
mov
jle
sahf
sbb
ret
jecxz
mov
cmp
lea
test
jmp
dec
sti
jno
push
dec
push
push
mov
jns
test
addr16
jbe
and
enter
push
nop
ret
mov
scas
pop
stc
or
repnz
addr16
and
pop
inc
jnp
sbb
jne
out
gs
str
sub
lock
mov
imul
or
and
or
adc
leave
xchg
aam
xor
xchg
mov
jb
stos
mov
xchg
adc
int3
lock
mov
xchg
dec
mov
jbe
add
in
lds
and
pop
imul
xor
jmp
pop
add
fimul
xchg
mov
fcmovnbe
imul
leave
cdq
int
add
mov
stc
pop
(bad)
jge
cwde
mov
cmp
js
cmp
and
vpminsw
mov
sbb
mov
xor
pusha
push
cmp
or
and
bound
out
or
dec
pushf
movs
sub
imul
(bad)
hlt
stos
jle
cmps
cli
cmp
mov
or
mov
sar
jmp
lahf
mov
std
or
scas
clc
pop
push
sbb
icebp
out
xlat
mov
in
add
pop
pop
push
mov
cld
rcr
je
pop
push
mov
sub
daa
jno
jmp
cli
inc
adc
enter
sbb
mov
shl
fwait
dec
cmp
clc
(bad)
jmp
sar
sbb
sar
adc
and
sar
icebp
hlt
pop
(bad)
repnz
mov
(bad)
xlat
daa
iret
je
pop
jmp
popf
adc
cmp
leave
adc
jns
pop
mov
add
icebp
inc
sbb
iret
and
scas
std
or
or
shl
mov
jae
and
mov
sbb
cs
fnstsw
push
ficom
(bad)
xor
cmp
mov
icebp
iret
scas
lods
mov
sub
out
sti
sbb
sbb
pop
or
call
add
repz
icebp
xor
sbb
and
push
mov
fwait
and
adc
not
push
xchg
xchg
lea
out
pop
or
adc
mov
popa
retf
xchg
or
cdq
out
dec
jecxz
cmp
mov
outs
and
jg
xor
adc
cmp
and
(bad)
jp
movs
inc
ja
shl
mov
xchg
xchg
imul
dec
jno
rcl
ds
das
and
test
xchg
add
push
into
daa
inc
mov
aad
mov
stc
push
(bad)
and
mov
sbb
scas
push
add
loopne
jg
mov
jns
sub
push
loope
xor
cdq
add
or
shl
inc
int3
das
mov
sbb
and
and
test
les
lahf
cli
push
push
mov
test
push
lds
jnp
fisub
mov
repz
jp
retf
ins
dec
xor
js
rol
xchg
jnp
stos
sub
cmps
jle
or
movs
arpl
xchg
adc
pop
adc
dec
mov
jae
add
jle
repz
stos
sub
push
pop
test
lods
mov
in
int3
arpl
adc
pushf
mov
(bad)
jo
fcmovnb
xor
scas
data16
dec
pop
rcr
inc
dec
or
mov
mov
and
dec
cmp
push
and
dec
ds
xor
or
pop
outs
and
loop
in
jmp
and
fistp
imul
sub
cmp
aam
cmp
jmp
es
xchg
mov
mov
shr
and
in
push
int3
movs
and
xchg
xchg
push
xchg
popa
push
call
test
cmps
icebp
into
xchg
stc
cdq
pop
pop
push
add
pop
push
pop
loope
jnp
pushf
xchg
mov
cmp
sahf
sub
(bad)
fisttp
iret
adc
sub
adc
jne
push
adc
and
or
jo
and
cs
js
and
scas
add
rcr
pop
jne
dec
sub
or
add
daa
(bad)
cld
push
jl
jb
push
les
push
mov
xchg
fldenv
leave
xchg
shr
inc
push
and
and
inc
les
mov
ror
inc
xchg
push
sub
or
fidiv
cdq
je
mov
loop
into
pop
mov
adc
xchg
les
pop
sub
and
mov
sub
add
lock
std
jbe
mov
pop
iret
push
(bad)
pop
mov
clc
fisub
dec
fiadd
shr
test
popf
xor
inc
sub
jne
in
pushf
loop
fist
in
and
jle
add
pop
push
clc
(bad)
pop
fwait
stos
cmc
mov
push
push
je
arpl
or
adc
sub
inc
and
out
cmp
shr
js
clc
sub
int3
add
mov
push
adc
xor
pop
mov
retf
or
sahf
xchg
mov
mov
and
dec
jb
unpckhps
(bad)
pusha
inc
pop
pop
stos
test
clc
mov
nop
or
int
daa
jae
xor
clc
sub
out
jp
mov
inc
and
jl
stos
mov
mov
and
cli
dec
or
adc
adc
add
jmp
das
ss
(bad)
adc
jnp
int
fcmovbe
das
xlat
and
mov
or
xor
dec
je
lds
fcmovbe
adc
cli
scas
stos
stos
cmp
loop
mov
mov
ds
repz
call
inc
outs
push
push
pop
data16
and
addr16
mov
mov
jmp
ja
dec
fs
mov
or
mov
neg
popf
xchg
ror
adc
pop
adc
test
(bad)
sub
fnsave
ror
sub
sbb
add
aas
push
cmp
inc
or
xchg
mov
sub
in
jg
mov
cmp
add
add
mul
xor
or
pop
xchg
imul
jb
lods
pop
cli
pop
pushf
scas
or
ffreep
pop
das
popf
int
cmp
adc
ret
add
xor
sbb
dec
and
cmp
and
daa
retf
fs
mov
(bad)
xchg
fcomp
mov
xor
shl
sub
xchg
(bad)
jbe
sar
jbe
mov
sub
(bad)
ds
and
jmp
mov
mov
pop
sub
aad
fcomp
sbb
push
stos
mov
push
dec
dec
jb
sub
dec
lods
sub
mov
lods
push
mov
pop
inc
cs
stc
jl
add
sub
jno
pushf
pop
out
fsub
scas
inc
mov
fisubr
add
add
mov
jae
ficomp
pop
pushf
mov
adc
pop
sbb
and
daa
std
sti
jmp
sbb
mov
cdq
or
cwde
mov
leave
in
loopne
and
sar
add
shr
rcr
lds
xor
xor
mov
sbb
out
ss
arpl
jge
fisub
stos
dec
or
or
(bad)
inc
scas
jnp
or
add
add
popa
cld
loop
and
jae
leave
xchg
in
pushf
xor
rcr
fcomi
cmp
mov
adc
dec
cmp
cmc
scas
imul
cmc
cmps
xchg
nop
push
ins
pop
iret
xchg
jnp
popa
icebp
xor
mov
fcomp
imul
dec
mov
mov
or
inc
mov
lods
not
loop
cmp
pop
iret
call
or
sub
sub
jo
mov
inc
sbb
(bad)
pop
outs
aaa
inc
add
repnz
xlat
(bad)
stos
xchg
fpatan
ins
movs
repnz
ds
mov
leave
sbb
shr
outs
popf
xor
jmp
and
loop
retf
stos
sub
push
ds
icebp
fs
test
nop
test
loop
ror
sbb
push
lock
mov
shr
fild
(bad)
fistp
pop
or
xchg
cdq
pop
ja
pop
push
stos
pop
mov
mov
fldcw
leave
mov
out
fucomip
in
adc
mov
(bad)
jge
bnd
lea
adc
pusha
xor
fmulp
fidiv
pop
jmp
(bad)
popf
stos
xor
cmp
rcl
adc
adc
test
inc
pop
mov
ret
push
xor
push
(bad)
xchg
sbb
cmp
popf
mov
cmp
repz
jo
outs
callw
rcr
mov
shl
pop
popf
loopne
and
jmp
cmp
call
dec
dec
arpl
aaa
frstor
mov
(bad)
cmc
xor
aad
jmp
jle
popa
aaa
dec
push
scas
fidiv
mov
cld
loop
movs
iret
inc
test
cmp
inc
or
mov
push
imul
dec
daa
rcr
bound
jp
outs
dec
mov
adc
add
xchg
fldenv
inc
inc
and
adc
outs
jo
fs
shl
mov
cdq
push
ds
push
push
mov
jmp
(bad)
addr16
or
sahf
fincstp
jg
mov
xor
xor
leave
sub
dec
pop
iret
dec
push
popf
inc
mov
push
or
mov
fild
mov
dec
sar
fsubrp
pop
inc
mov
xor
sbb
lahf
jo
sub
mov
nop
cmp
add
push
sti
mov
add
push
push
sbb
stos
cmp
out
loope
(bad)
imul
fldenv
xchg
mov
add
mov
jl
dec
stos
jns
ja
jne
in
sub
(bad)
int3
lods
jnp
mov
out
int3
adc
movs
fiadd
ror
xor
adc
xchg
sub
loope
hlt
lock
inc
daa
loope
jmp
or
in
inc
aam
add
mov
jmp
scas
shl
sub
das
mov
mov
into
test
std
ins
bound
lods
sahf
ds
les
ss
mov
cdq
xor
mov
sbb
dec
mov
repnz
rcr
pop
xor
inc
xchg
mov
lods
mov
jp
adc
mov
call
xor
scas
in
ss
gs
lds
shl
fist
sbb
and
mov
fs
sub
and
test
xchg
cmps
push
lods
inc
paddd
test
xor
push
xor
cmp
in
das
push
xchg
adc
jecxz
mov
pop
mov
shl
cs
cmp
mov
cmp
mov
or
ret
or
mov
ror
scas
jo
xor
hlt
fisttp
gs
inc
dec
push
fidivr
adc
mov
and
pop
cdq
stc
retf
xor
jl
ret
pop
inc
jg
(bad)
cmp
stc
cmp
lods
mul
mov
bound
out
add
in
int
push
jno
and
lahf
jne
xchg
sbb
adc
jg
jmp
cwde
jecxz
sub
outs
fwait
dec
add
sub
out
cwde
mov
rcr
mov
retf
pop
cmp
jo
shl
pop
mov
into
bound
push
(bad)
gs
pop
cwde
das
mov
retf
mov
sbb
fimul
mov
int
mov
or
out
bound
add
fild
push
jb
fs
aam
cmp
inc
jnp
ret
xchg
and
repz
popa
(bad)
xchg
aas
loopne
xchg
push
adc
(bad)
cli
dec
outs
call
dec
push
in
fmul
jb
pusha
adc
cmp
mov
outs
adc
xchg
fs
pop
retf
cmp
xchg
xlat
or
dec
fst
enter
ja
cwde
adc
jnp
jo
mov
add
sar
lea
movups
sub
sbb
cmps
outs
aaa
gs
test
in
mov
and
inc
(bad)
aaa
loopne
shl
mov
inc
xchg
std
jle
into
out
out
mov
mov
push
sub
or
mov
xor
inc
lock
push
fcomp
inc
add
js
nop
mov
lea
sbb
push
or
arpl
clc
and
ror
mov
adc
and
rcr
jno
jmp
xor
xchg
cmp
inc
and
stc
mov
pop
out
sahf
fs
pop
out
jnp
add
mov
xchg
cmc
(bad)
in
test
sahf
icebp
sbb
xlat
(bad)
icebp
jmp
fld
sub
inc
std
mov
dec
sahf
loope
inc
repz
sbb
dec
jnp
xchg
dec
push
push
enter
cmp
pop
cmps
leave
pop
gs
or
push
bound
mov
daa
scas
push
(bad)
pop
lock
push
fwait
pop
jo
stos
jne
or
pop
inc
repz
pop
movs
dec
(bad)
push
jge
inc
leave
or
sahf
mov
inc
mov
loop
aaa
pop
(bad)
cmps
(bad)
xor
xchg
cmps
dec
sbb
f2xm1
pop
mov
lods
sti
std
xor
and
test
cmp
jno
addr16
inc
jbe
or
jae
xlat
(bad)
call
sbb
(bad)
dec
or
mov
enter
mov
xor
inc
and
retf
xor
ins
cmp
dec
jecxz
int3
jae
fscale
test
jg
cmps
pusha
inc
icebp
push
pop
movs
mov
pop
shl
(bad)
mov
fst
dec
lock
mov
jmp
xchg
add
sbb
stos
(bad)
cmp
in
mov
fidivr
and
sbb
cmc
loop
leave
push
ds
in
mov
(bad)
shr
test
ins
dec
xchg
fst
mov
mov
xchg
and
fidivr
fiadd
inc
loope
js
dec
aaa
push
les
(bad)
mov
mov
(bad)
and
shl
in
jl
es
mov
es
in
ins
sbb
xor
mov
cmpxchg
repz
mov
retf
cmovg
jecxz
sub
push
jle
pop
xchg
imul
cmp
and
jle
cmp
xor
test
mov
out
jmp
lock
imul
sbb
sub
mov
sti
popf
xchg
pusha
sbb
mov
sbb
out
jmp
inc
inc
js
cmp
mov
mov
ss
imul
loopne
mov
ret
jle
cmc
fistp
std
aaa
or
inc
retf
and
jmp
xor
sub
sub
pushf
mov
and
sub
sub
dec
std
rcr
movs
loopne
pusha
stos
outs
les
mov
les
in
pop
ja
mov
mov
imul
lds
ror
lds
outs
pop
std
(bad)
pusha
(bad)
mov
cmps
mul
push
mov
add
(bad)
jmp
mov
fdivrp
(bad)
and
fwait
cmp
dec
rol
les
stos
sub
in
arpl
dec
and
and
(bad)
scas
stos
jae
and
cld
lea
push
fwait
xor
sar
sbb
push
mov
retf
jnp
push
ds
or
hlt
enter
fidiv
cmp
fmul
and
cs
hlt
or
jecxz
cmp
js
jge
sbb
push
push
fcom
mov
pop
hlt
bnd
js
inc
mov
mov
ds
sbb
shl
jbe
sub
add
leave
jmp
mov
mov
inc
xor
(bad)
jl
je
dec
sbb
lea
stc
fld
mov
mov
jle
outs
lods
dec
icebp
jns
and
pushf
outs
cmp
adc
xor
xchg
jge
mov
sbb
rcl
jmp
(bad)
cmp
jbe
push
cmp
dec
xlat
mov
jle
push
js
xor
cs
and
xor
mov
mov
mov
test
or
sub
pop
mov
je
sub
jnp
add
in
pop
or
inc
mov
fild
mov
sbb
rcr
or
push
test
adc
pushf
sub
bnd
and
scas
pop
cmp
shl
push
cs
add
pusha
pusha
pop
xor
stos
dec
jp
mov
rcr
lea
pop
aad
and
sub
fld
fisttp
xor
jbe
and
sub
test
dec
fidiv
sub
push
jmp
(bad)
push
mov
(bad)
push
pop
xchg
stos
out
in
in
xchg
inc
inc
cmc
fsubr
div
jne
and
adc
in
inc
mov
fwait
and
popa
movs
addr16
and
shr
inc
(bad)
and
xchg
mov
addr16
fistp
inc
inc
lahf
cmps
rol
sti
mov
popf
fs
adc
test
adc
jmp
lock
pop
test
mov
and
cmp
cmp
pop
mov
mov
pop
mov
fstp
adc
push
add
loope
repz
into
addr16
leave
dec
mov
in
shl
jp
outs
push
jno
push
jnp
push
jnp
loopne
(bad)
fdivr
cs
icebp
xchg
rol
jno
out
pusha
out
int
dec
push
and
dec
cmp
push
add
lahf
xor
jae
xchg
ds
push
lahf
mov
mov
dec
(bad)
xchg
xchg
icebp
add
add
pop
mov
mov
push
ret
push
imul
push
push
pop
out
xchg
jle
std
xchg
add
aas
add
hlt
or
jae
fdivr
das
in
imul
bound
xor
fisttp
push
and
or
shl
in
xchg
pop
outs
retf
lods
stos
scas
scas
xor
sti
fwait
aad
jmp
test
mov
xor
hlt
xchg
(bad)
mov
mov
inc
pop
jecxz
xchg
inc
js
repnz
mov
dec
mov
xchg
jge
std
add
dec
mov
repnz
fld1
int3
xor
jge
xchg
or
cmp
nop
pop
or
xor
jo
test
dec
movs
imul
xchg
ja
add
sub
push
mov
mov
jne
in
into
aad
iret
std
dec
repz
shr
dec
adc
inc
cmc
nop
adc
add
in
dec
shr
mov
fst
jbe
clc
push
push
cmp
jno
loopne
pop
nop
and
cwde
cmp
jno
iret
or
sub
idiv
gs
scas
inc
rol
aas
popf
stc
and
ins
jns
shl
sbb
js
jmp
sub
and
inc
lods
adc
inc
lahf
imul
mov
jb
jno
loope
repnz
into
push
(bad)
pop
cdq
in
add
stos
sub
std
mov
xor
stos
mov
imul
dec
add
sub
sub
ret
push
pop
fwait
rcr
and
inc
push
imul
jl
aaa
out
jne
jmp
pop
jno
dec
repz
or
mov
mov
push
jg
ror
jmp
icebp
jg
jmp
sub
lahf
sub
pop
(bad)
xor
mov
rol
dec
add
cdq
mov
xor
inc
or
cli
sti
icebp
test
pusha
(bad)
or
add
retf
fimul
int3
(bad)
fild
sbb
std
cmp
icebp
outs
std
add
je
pop
aaa
in
lahf
scas
inc
sar
jne
mov
push
in
inc
mov
out
shl
fnstenv
in
mov
cwde
cmp
test
ret
xor
aad
ret
dec
mov
and
adc
pushf
cmc
mov
call
test
mov
inc
pop
jo
jne
in
popf
mov
lods
ret
sub
arpl
hlt
not
or
cmp
shr
xor
leave
cmp
fstp
ss
pop
gs
xor
arpl
into
mov
js
pop
idiv
scas
and
and
xchg
jmp
jge
imul
fdivr
loope
repz
mov
nop
cmps
stos
scas
adc
js
cwde
aam
ins
fcom
xor
mov
pop
inc
imul
mov
dec
mov
popa
mov
add
or
pop
mov
pop
mov
mov
je
sahf
ficom
out
and
jg
gs
inc
xchg
int
pop
idiv
cmp
retf
adc
sub
xor
xchg
or
mov
sub
call
mov
in
mov
hlt
xchg
test
add
ret
inc
fnstenv
push
cld
adc
rol
daa
retf
cmp
and
xchg
dec
sahf
inc
scas
inc
jmp
lahf
sbb
retf
dec
hlt
inc
dec
(bad)
aad
aas
add
mov
pop
pop
(bad)
stos
fsub
jg
(bad)
push
push
mov
lods
stc
add
mov
xchg
dec
push
fsubr
add
xor
cli
sahf
push
fs
cmp
xchg
jge
lahf
push
fcmovnu
enter
das
icebp
jecxz
mov
pusha
lock
pusha
pusha
call
leave
out
in
cmp
(bad)
shl
xchg
fidivr
dec
push
popa
jle
test
mov
sub
sbb
inc
xor
mov
pop
ins
iret
xchg
(bad)
xchg
or
push
and
pop
inc
or
xchg
dec
xlat
and
xor
mov
mov
je
xor
aas
(bad)
imul
inc
movs
jno
lods
jno
adc
xchg
xchg
mov
bound
cmc
xor
adc
mov
out
mov
cmp
mov
lea
sti
das
retf
mov
movs
rcr
mov
inc
adc
and
mov
arpl
pop
xchg
leave
into
test
mov
cdq
ror
dec
ds
mov
jns
das
ffreep
int
add
outs
jge
fs
xor
cmp
adc
mul
out
ror
dec
add
leave
call
mov
in
pop
cdq
sub
add
loopne
sbb
test
les
sub
rol
int
cli
(bad)
ds
sbb
iret
ss
sti
mov
mov
test
pop
xchg
loope
out
imul
ret
or
adc
jmp
js
icebp
mov
(bad)
loop
iret
xchg
bound
les
push
test
imul
test
pop
clc
adc
dec
sub
mov
rcl
add
sbb
in
push
sbb
pop
call
push
cmp
popf
xor
pop
xchg
xor
sti
mov
lds
and
loope
cdq
pusha
movs
bound
push
std
movs
lods
xor
xor
sbb
dec
into
pop
or
add
xor
neg
xor
cmp
add
out
push
call
add
data16
mov
imul
pop
lock
mov
addr16
inc
jo
movs
fsub
jge
and
loope
(bad)
or
cmps
leave
in
sahf
jg
addr16
sti
outs
mov
enter
add
pop
ins
dec
ret
sbb
xor
jmp
pusha
push
outs
shl
pop
js
dec
das
push
cwde
mov
lods
int
leave
loope
push
pop
mov
cmp
cmp
push
jne
add
leave
adc
and
add
sub
(bad)
sub
mov
or
in
pop
add
jmp
sub
cmp
pop
or
mov
rol
(bad)
mov
out
cmp
mov
or
inc
retf
int3
or
or
popa
aam
jo
sbb
out
and
int3
fisub
add
cmp
ins
mov
dec
jbe
lahf
stos
daa
cmp
pop
addr16
push
push
xchg
das
sbb
fsubr
or
adc
ins
pop
pusha
leave
adc
mov
cmp
dec
push
bound
fnstenv
mov
mov
pop
fsub
and
repz
push
sbb
sbb
(bad)
and
fadd
in
jp
adc
mul
imul
fimul
retf
mov
fstp
jno
ds
cmp
xchg
mov
cld
mul
(bad)
jp
inc
cmp
mov
out
mov
or
mov
adc
push
imul
pop
int
dec
clc
or
mov
and
mov
enter
cwde
cmp
fmul
pop
push
and
xchg
ds
mov
xchg
lea
in
cmp
and
gs
cmc
in
cmp
mov
xor
pop
shr
mov
pop
aad
dec
or
je
ret
bound
adc
sub
jae
jbe
pop
xor
cld
adc
push
dec
popa
xchg
dec
int
pop
mov
push
mov
mov
inc
mov
jp
cmp
jg
mov
leave
pushf
inc
cld
pop
das
or
push
shl
mov
(bad)
push
ret
ror
dec
xchg
movs
push
add
out
(bad)
mov
xor
(bad)
xor
movs
cmp
imul
push
push
retf
rol
test
push
(bad)
lods
imul
loope
sub
test
in
cmp
mov
test
or
retf
iret
or
rcr
mov
pop
stc
clc
(bad)
mov
ficom
bound
add
mov
add
xchg
sbb
call
add
cld
inc
cmc
lahf
mov
jmp
xchg
pusha
in
es
pop
daa
sub
and
xor
call
fistp
dec
sub
repz
mov
pop
cmp
mov
popf
push
add
test
mov
adc
inc
fwait
(bad)
repz
fld
outs
sub
ret
inc
test
mov
mov
push
push
mov
iret
mov
and
jne
arpl
adc
dec
cli
xchg
dec
add
imul
mov
into
cmp
adc
pop
cmp
xor
fld
into
fcomip
push
mov
lods
jl
sahf
shl
fwait
int
not
mov
sub
test
or
out
out
fbld
nop
push
push
retf
in
mov
std
mov
dec
add
push
iret
fistp
xchg
test
mov
mov
out
cwde
xchg
fwait
cmp
rcr
psrld
dec
pop
daa
mov
mov
or
inc
jo
inc
dec
sbb
jb
sub
(bad)
enter
jg
loope
or
sbb
dec
test
and
repz
xor
adc
pop
leave
lock
gs
hlt
pop
jbe
pop
push
adc
mov
xor
sub
adc
jmp
bound
sub
push
cld
jle
movs
leave
pop
mov
xchg
dec
mov
fistp
ftst
fidiv
push
cmp
cmp
and
adc
or
inc
mul
cmp
mov
out
sbb
test
lods
jmp
push
add
stos
cmp
lods
lds
mov
loopne
arpl
xchg
into
sub
jl
fld
sar
bound
cmc
das
push
mov
jnp
add
mov
cdq
jne
cmp
loope
nop
inc
jne
out
test
movs
sar
shl
sub
push
mov
sbb
icebp
sub
and
pop
xchg
xor
sub
cmp
pop
mov
xchg
ds
fnsave
add
push
in
jae
mov
call
jp
shl
div
xor
fdivr
mov
mov
clc
lea
ins
movs
popf
add
loopne
pop
call
mov
mov
xchg
stos
sbb
jae
cmp
jnp
inc
pop
call
in
mov
scas
adc
enter
test
xchg
xchg
es
aad
push
paddusw
cmovnp
pop
mov
or
mov
cmp
int3
dec
jmp
fucomi
jecxz
mov
ja
loopne
jp
pop
retf
sub
popf
adc
push
cmp
add
add
pusha
push
fcomp
(bad)
dec
aas
stos
daa
adc
pop
xchg
imul
mov
(bad)
and
int3
and
sub
stos
mov
xor
mov
xchg
jmp
sub
loope
cmp
inc
xchg
pop
pop
outs
add
sbb
mov
cmp
or
(bad)
adc
jbe
icebp
or
push
je
jmp
pop
dec
and
xchg
jae
push
ja
mov
xor
out
je
stos
shld
in
popa
mov
out
retf
jmp
mov
pop
clc
push
iret
mov
sub
and
add
and
jnp
idiv
push
in
xchg
or
cmp
outs
or
inc
stos
jbe
mov
jne
fsub
bound
pop
mov
arpl
push
push
sbb
into
in
cmp
push
pushf
mov
jl
push
fucomi
push
mov
xor
ret
call
dec
dec
jl
sbb
popa
jne
imul
loopne
sbb
add
adc
mul
sti
mov
ror
pop
mov
lea
imul
push
loopne
jmp
pop
pop
jmp
(bad)
(bad)
push
je
dec
aaa
call
xchg
add
add
stos
cmovnp
push
jno
and
jmp
rol
push
ret
fsub
rcl
dec
in
cmps
aaa
jno
jmp
mov
fmul
cwde
cmp
sbb
xor
pushf
jg
pop
cmps
xchg
and
loope
pop
mov
sub
shl
les
cmp
xchg
mov
lods
add
mov
adc
xor
xor
dec
xchg
(bad)
mov
or
xchg
stos
outs
mov
addr16
int
xor
idiv
jp
mov
and
outs
in
xor
inc
mov
pop
push
xchg
dec
mov
push
mov
cmps
xor
pusha
sub
outs
mov
aad
xor
mov
ins
jmp
outs
pop
outs
lods
test
cmp
and
stos
ret
dec
into
fs
mov
mov
and
(bad)
xor
push
push
out
sub
iret
push
push
pop
test
fisttp
push
xchg
pop
cld
in
xchg
ds
push
leave
pop
push
jle
adc
mov
mov
ror
add
enter
aam
addr16
dec
mov
pop
pop
in
rol
jmp
xor
stos
test
js
adc
xor
mov
inc
adc
in
stos
add
mov
cld
(bad)
sbb
add
hlt
xor
push
ss
pop
xchg
sub
xchg
dec
mov
lock
mov
mov
jl
inc
not
inc
mov
stc
gs
lds
in
and
and
jmp
and
outs
mov
iret
and
inc
and
sahf
push
cld
js
daa
clc
jo
and
mov
pusha
pop
ret
iret
xchg
fs
jmp
mov
js
pop
int
ficom
push
pop
in
sar
pusha
dec
(bad)
stos
fnstcw
dec
popf
cmp
out
sub
aaa
cmps
inc
dec
gs
and
ins
cli
push
cmp
mov
dec
and
sub
adc
mov
out
cmps
outs
sub
xor
push
pop
neg
pop
es
mov
rol
jae
cwde
xor
arpl
shl
sar
(bad)
lods
call
mov
mov
arpl
push
sbb
and
lock
mov
std
jns
sub
pop
xlat
test
fnstcw
icebp
inc
push
test
pop
push
jmp
xor
in
sub
(bad)
call
std
inc
or
pop
les
sbb
(bad)
aaa
sub
mov
aaa
add
outs
inc
shl
into
mov
rcl
cmp
lock
cmp
adc
dec
mov
xchg
in
daa
xchg
cld
mov
inc
mov
out
cmps
gs
ins
nop
pop
(bad)
xor
idiv
adc
push
push
addr16
inc
rol
xchg
jne
cmc
in
cmp
inc
xor
cmp
mov
mov
jle
test
aas
retf
jno
push
jmp
stos
jbe
in
enter
aas
jle
xor
rol
cld
dec
add
das
call
cmp
pop
sahf
push
call
aas
mov
xchg
jmp
push
mov
out
mov
pop
adc
jae
lahf
ins
mov
push
jb
xchg
bnd
jb
out
push
ins
jge
mov
ret
(bad)
pop
mov
add
mov
ficomp
fld
or
jmp
add
sub
ror
push
lock
addr16
add
shl
cli
ds
jmp
call
xchg
pop
mov
sbb
push
popa
cmc
call
jp
or
add
push
mov
femms
xor
pop
ds
adc
fcmovbe
cmps
mov
dec
mov
add
jecxz
(bad)
je
cmp
push
mov
jo
test
es
push
les
(bad)
inc
lock
fs
cmp
adc
dec
out
add
inc
aam
in
sbb
push
push
and
sub
test
cmp
nop
repnz
lds
jo
adc
and
mov
xlat
in
shr
fdiv
test
xor
aaa
mov
jmp
lds
or
je
shl
loopne
mul
test
push
mov
cmp
ret
add
mov
or
movzx
outs
dec
shr
inc
jecxz
imul
call
xchg
sbb
sub
xor
stos
mov
xchg
ds
int
es
adc
xor
(bad)
test
add
add
fild
sub
pop
daa
ja
cs
mov
shl
cmps
mov
ret
loope
lds
fs
(bad)
xchg
shl
cmps
pop
inc
mov
xchg
jbe
pop
(bad)
call
and
push
jae
mov
dec
movs
jge
(bad)
loopne
jae
hlt
mov
and
and
adc
or
xor
add
outs
sub
setb
add
xchg
movs
mov
pusha
stos
and
add
xor
nop
outs
in
push
jle
ret
movs
inc
xor
loopne
sbb
add
outs
in
add
dec
ja
jl
jno
pop
ins
je
xor
hlt
inc
mov
inc
lahf
pusha
xor
dec
xchg
lods
inc
sbb
nop
stc
mov
push
mov
popa
sti
ss
fucomp
cli
scas
xchg
mov
xchg
cvttps2pi
mov
movs
nop
and
jg
push
ja
outs
shl
pusha
push
or
aaa
shr
mov
mov
cwde
daa
lods
pop
(bad)
out
cmp
dec
rol
(bad)
in
sahf
jle
rcl
(bad)
jmp
xlat
loop
bound
cmp
mov
push
shr
xchg
mov
push
inc
jp
scas
leave
cmp
and
(bad)
pop
xchg
push
stos
mov
ja
mov
dec
sub
out
add
not
dec
push
inc
sbb
adc
adc
and
les
mov
or
mov
lods
xor
vunpckhps
sub
inc
or
scas
mov
loope
mov
popa
pusha
inc
aad
outs
jecxz
fmul
cmps
dec
fcomp
add
les
lea
ror
cmp
inc
pop
mov
in
xchg
xor
addr16
cwde
jne
jb
and
jnp
cmp
hlt
lods
mov
add
and
adc
scas
mov
repz
(bad)
mov
mul
mov
push
adc
call
aas
sbb
stos
into
out
mov
das
bnd
ja
inc
sbb
jge
enter
mov
cmc
dec
call
es
fs
inc
aas
out
arpl
loopne
lods
in
xor
scas
mov
pop
xor
iret
sbb
imul
fistp
cmp
hlt
das
sbb
cmp
str
or
rol
mov
sub
scas
mov
out
outs
outs
xchg
push
lahf
lods
int3
add
sub
ins
(bad)
mov
dec
dec
cwde
xchg
(bad)
jl
fsubr
sti
and
aaa
sti
xor
pop
add
lods
add
jbe
(bad)
sbb
jmp
enter
pop
dec
jbe
imul
pop
dec
add
jns
add
inc
adc
js
dec
dec
retf
ret
cmc
ja
hlt
push
(bad)
add
pop
(bad)
mov
jae
enter
pop
inc
xchg
popf
xchg
clc
add
out
nop
cli
xor
mov
das
jo
jo
adc
pop
adc
add
xchg
jns
scas
mov
adc
data16
mov
pop
cmp
sbb
adc
xor
aaa
outs
clc
xchg
jmp
mov
js
adc
jae
jmp
mov
sbb
aaa
movs
adc
je
push
movs
arpl
arpl
or
push
push
retf
fcom
cwde
mov
mov
aaa
std
jmp
xor
mov
call
xor
add
scas
pop
rol
adc
icebp
enter
xor
fdivr
cs
cmp
rcl
popf
sbb
mov
pop
jg
out
sbb
xchg
scas
or
pop
or
sbb
ror
call
jle
retf
mul
ss
sti
pusha
jl
sti
(bad)
lock
repz
js
popf
(bad)
jns
lods
es
xchg
clc
xchg
ins
and
pop
into
not
fadd
out
sbb
cs
pop
inc
pop
pop
jmp
mov
pop
fisubr
and
push
mov
xlat
cmp
dec
adc
jl
xor
or
mov
pop
jge
int
loop
loopne
(bad)
mov
dec
mov
fst
retf
push
push
inc
ins
jecxz
getsec
mov
lea
pop
pop
jmp
mov
les
adc
pusha
jge
aam
jae
mov
or
clc
or
sub
movs
aas
sub
mov
imul
stos
push
out
cs
rol
mov
adc
les
pop
scas
ds
repz
and
mov
add
imul
adc
aaa
push
mov
mov
jg
sub
mov
sbb
push
movs
in
jae
icebp
sub
or
jae
and
shl
push
dec
test
cmp
cwde
(bad)
mov
sub
aad
adc
mov
popa
sbb
fwait
pop
xchg
loope
aas
retf
or
out
fstp
fwait
call
add
jl
adc
addr16
dec
ins
pop
push
das
das
xchg
adc
pop
aaa
rcr
cwde
sub
je
mov
adc
out
sar
inc
add
vcvtdq2pd
stos
jno
daa
sbb
popf
stos
mov
scas
pop
jns
adc
and
sub
jmp
and
imul
push
dec
inc
in
dec
mov
mov
sbb
add
mov
xchg
in
xlat
les
sub
jne
sub
fistp
fld
mov
aad
std
adc
lods
xchg
and
dec
dec
iret
xlat
adc
fcom
fst
mov
pop
(bad)
icebp
std
les
rcl
sbb
mov
jo
sbb
or
dec
retf
retf
punpckhwd
pop
ret
pop
cmp
cmp
mov
scas
jns
test
test
in
sub
ffreep
cmp
data16
jbe
mov
lea
(bad)
sti
xchg
xchg
loope
pop
loope
mov
dec
add
mov
inc
pushf
xchg
xchg
fsubr
sub
push
shr
mov
cmps
rcr
dec
xor
retf
jo
and
inc
mov
mov
call
push
and
inc
ss
adc
pop
or
stc
push
or
push
mov
mov
retf
inc
lahf
sub
and
or
cmc
sbb
scas
inc
fimul
xchg
mov
arpl
lea
mov
out
call
shr
cmp
jmp
lock
aaa
addr16
cmp
test
movs
push
pop
scas
pusha
bound
retf
es
scas
out
mov
scas
ret
icebp
or
dec
call
(bad)
in
lock
jmp
jmp
(bad)
pop
das
mov
dec
in
and
fwait
or
shl
out
ins
fimul
pushf
fistp
fistp
call
push
cld
in
mov
js
inc
popf
jb
sbb
dec
push
add
test
push
fincstp
adc
lock
mov
cmp
lea
rcl
jmp
shr
shl
mov
repnz
arpl
dec
pop
outs
push
pop
mov
mov
std
push
pop
jg
daa
cmp
fsubr
sub
mov
add
loope
inc
outs
cdq
mov
rol
loopne
and
pop
in
and
xor
pop
mov
test
mov
jae
int
adc
imul
jmp
js
mov
(bad)
in
and
pusha
lea
inc
cmp
out
xchg
ret
jecxz
int3
shl
(bad)
rcr
xchg
imul
into
cmp
bound
fld
adc
jecxz
jmp
gs
add
(bad)
call
hlt
pusha
shl
jmp
es
push
xchg
xor
out
cmp
sub
popf
pop
and
cmc
arpl
outs
(bad)
les
mov
mov
add
add
test
pushf
repz
addr16
cld
mov
jne
mov
mov
sar
xchg
and
fsubrp
repz
cdq
jmp
rcr
cmp
hlt
push
call
inc
ja
movs
call
push
fsub
adc
retf
adc
into
cmp
mov
push
xchg
xor
mov
fisub
es
sub
xchg
outs
push
stos
retf
frstor
adc
cmp
jae
dec
scas
sbb
mov
add
data16
leave
clc
mov
add
push
mov
pop
jo
mov
ss
retf
iret
ret
sahf
test
adc
or
xchg
push
ficom
add
add
fs
lods
and
mov
dec
jno
imul
or
sbb
inc
(bad)
lods
out
and
mov
pop
je
push
or
loope
adc
jmp
retf
xor
ins
imul
imul
pop
fdivr
mov
mov
xlat
add
ficom
xchg
xchg
sub
sti
rol
sbb
fcompp
xor
sbb
mov
dec
jb
dec
cmc
out
shl
es
pop
xor
out
and
mov
in
inc
xlat
xchg
inc
dec
sub
sbb
(bad)
in
pusha
gs
or
stos
inc
inc
push
in
test
loopne
sbb
push
inc
and
adc
push
lahf
clc
scas
mov
pop
ror
adc
mov
(bad)
pop
adc
rol
cmps
push
or
fdiv
cdq
fbld
push
push
or
popa
and
pushf
int
mov
das
adc
lods
nop
test
adc
cmp
gs
mov
dec
mov
fxch
cmp
les
sbb
nop
sbb
jmp
pop
cmp
ins
std
ins
pop
test
jle
sbb
sub
xor
add
or
mov
push
xlat
push
out
sub
dec
lods
test
int
fcomip
jl
jmp
xchg
cwde
add
mov
jae
stos
add
sub
add
dec
fucom
add
or
adc
jg
test
mov
jns
sbb
add
xchg
jle
push
cs
lahf
cmps
mov
fadd
cmp
test
js
adc
push
cmps
mov
scas
stc
lods
sbb
jmp
das
mov
xor
repz
jno
es
push
aas
inc
cmp
adc
mov
inc
popa
lock
sub
int
sbb
sar
sbb
sbb
ds
pop
lods
fidivr
xor
sti
lods
(bad)
lock
xchg
jl
retf
jg
inc
ds
cwde
fiadd
jae
pop
std
inc
inc
jge
movs
nop
loope
lock
mov
dec
gs
lea
inc
jbe
fidivr
cmc
aam
lea
mov
jmp
push
cmc
div
jge
hlt
xor
cwde
retf
pop
out
jp
(bad)
ret
fwait
xchg
and
cmp
test
inc
pop
jae
or
add
mov
sub
mov
inc
jmp
fwait
fwait
out
pop
imul
test
push
inc
jmp
in
fcom
int
scas
add
mov
mov
hlt
sbb
in
fbstp
jp
push
daa
add
inc
(bad)
pop
shl
mov
fidivr
sbb
outs
stc
aam
and
mov
aas
ret
adc
xchg
mov
in
in
les
xchg
add
mov
out
mov
mov
xor
xchg
cli
shr
dec
push
test
mov
mov
aas
add
fimul
dec
sbb
icebp
jge
sti
push
stos
push
jecxz
cmp
cs
(bad)
cmp
sti
fsub
mov
pop
xlat
dec
add
movs
aad
repnz
ret
int3
fbld
adc
repz
cmc
daa
mov
movs
pop
rol
(bad)
xor
mov
xchg
mov
into
jge
mov
mov
pop
push
pop
and
or
add
popa
je
jb
(bad)
xchg
mov
mov
adc
mov
cmp
sbb
xchg
into
add
mov
in
mov
cmp
in
sahf
in
inc
cmp
add
leave
or
and
jmp
mov
hlt
mov
pushf
int3
pop
js
mov
mov
push
test
mov
int
mov
push
ins
popf
push
push
rcr
lea
pop
imul
mov
add
and
mov
dec
sub
or
or
push
mov
lods
or
in
cmp
daa
rol
cmp
lahf
outs
sbb
push
rcl
int
stos
fist
or
pop
pushf
mov
cmc
lds
pop
dec
cmp
xor
lods
popa
mov
xor
int
fucomp
pop
xchg
arpl
(bad)
dec
repnz
sub
xor
cmps
xor
adc
inc
adc
sbb
aas
sbb
mov
jmp
js
xlat
xor
(bad)
test
mov
xlat
rol
rcl
cmps
out
mov
ds
pop
call
cmp
js
ret
mov
jle
(bad)
into
pusha
cwde
test
or
retf
cwde
sbb
xchg
push
cdq
jo
cmp
cld
jp
or
sub
in
xchg
(bad)
jmp
je
cmp
add
dec
sub
je
pop
aam
jno
cmp
pop
pop
rol
retf
ja
nop
fs
pusha
inc
out
inc
cmp
sub
jg
dec
imul
and
out
daa
(bad)
sbb
pop
pop
daa
push
daa
es
test
loopne
int
rep
ret
scas
push
jne
(bad)
fcom
dec
mov
div
push
jno
cmp
or
xchg
rcl
pop
fsubr
gs
(bad)
lea
call
mov
cld
push
das
(bad)
ror
in
in
fld
js
sub
mov
fcmovbe
scas
fisub
out
adc
das
xchg
xchg
ins
aaa
pop
(bad)
dec
xor
into
inc
in
pop
stos
sbb
sti
mov
mov
lods
lahf
out
push
stc
add
xchg
push
xchg
add
out
in
jge
in
shl
mov
sub
inc
mov
dec
or
in
loopne
adc
dec
mov
and
retf
xchg
nop
test
add
add
xchg
dec
push
add
jl
push
je
pop
xor
xchg
cmps
cmp
sbb
loopne
mov
dec
add
lea
push
pop
int
and
gs
cs
outs
je
sub
test
push
mov
mov
mov
or
mov
jp
jns
adc
retf
push
jl
stos
and
push
and
inc
es
mov
or
or
in
call
jnp
adc
and
mov
sbb
push
nop
dec
mov
inc
jp
mov
ins
push
aas
cmc
pop
fistp
popf
mov
xor
scas
fsubr
js
jmp
mov
repz
mov
scas
mov
arpl
addr16
popa
or
xor
cmp
fcomp
push
call
je
add
or
mov
jnp
xor
(bad)
iret
ret
pop
dec
retf
pop
add
aas
push
lock
and
push
jo
jo
cmp
inc
xchg
test
(bad)
adc
adc
mov
push
cmp
inc
xor
jb
add
or
xor
push
aam
mov
xchg
in
cmc
sti
add
in
pop
shl
jl
std
es
ret
mov
pop
jle
cmps
jae
popf
shr
or
rol
inc
call
popa
clc
push
mov
or
sbb
sbb
into
fs
cld
retf
fs
loope
stos
cmps
into
imul
mov
or
test
cmc
gs
mov
test
jo
int
fistp
in
adc
add
or
fs
cmp
inc
adc
or
(bad)
cwde
sbb
jp
sub
mov
lock
in
xchg
push
sub
outs
hlt
(bad)
aam
xchg
data16
mov
pop
rcl
and
sub
push
imul
int
sub
daa
cmc
shl
inc
(bad)
neg
mov
cmp
mov
daa
pushf
mov
cwde
add
sub
adc
or
ret
cdq
push
xchg
in
stos
sti
mov
neg
(bad)
in
loop
and
imul
jnp
and
xchg
xor
adc
xor
sub
mov
out
or
call
loope
push
xor
xchg
fld
jo
repz
aad
adc
dec
mov
stc
ret
and
call
sbb
mov
ins
fld1
and
out
dec
outs
add
xor
movs
shl
mov
shl
jmp
push
mov
jge
pop
jl
or
aad
mov
fldpi
(bad)
push
or
and
and
adc
adc
xchg
rol
mov
or
(bad)
sub
(bad)
or
xchg
test
sbb
cli
jl
outs
sbb
mov
adc
xor
shl
mov
scas
push
outs
and
jmp
mov
iret
aaa
in
cmp
popf
dec
(bad)
outs
ins
cmp
push
ins
mov
xor
pop
stc
outs
inc
and
jbe
add
sbb
and
cld
dec
sub
loop
retf
jbe
mov
dec
fldcw
and
xor
xor
sar
sbb
jae
cs
mov
sub
ja
add
repz
shl
in
push
sti
std
rcl
mov
in
fld
mov
sub
out
ret
adc
jge
sbb
mov
mov
aaa
jne
dec
loope
pop
dec
out
and
or
cmp
outs
in
stc
dec
or
cmp
jg
stos
icebp
rol
push
aam
push
cmp
cdq
(bad)
mov
lods
(bad)
mov
xor
pop
in
fstp
es
call
xor
mov
sbb
fcomp
xor
stc
fcomp
xor
push
add
retf
mov
cmp
repz
xor
in
inc
adc
or
push
popf
(bad)
mov
push
fcmovnb
jle
mov
outs
aad
pusha
adc
mov
mov
lods
pop
mov
fbstp
jp
xchg
icebp
xchg
sub
dec
and
jae
pop
dec
push
ins
movs
xchg
sbb
sbb
repz
fadd
push
out
push
cmp
shl
push
scas
mov
push
out
iret
cmp
mov
mov
imul
in
fsubr
xchg
cmp
aaa
xchg
add
cmps
inc
cdq
sbb
mov
dec
push
shl
bound
mov
call
sub
stos
add
lds
or
and
push
mov
fwait
arpl
outs
(bad)
xor
hlt
aam
push
add
movs
jnp
dec
jae
jmp
cmp
sbb
mov
push
add
mov
ret
xor
dec
addr16
dec
xor
das
and
adc
fadd
push
sub
push
ds
imul
jne
cmps
(bad)
sbb
dec
sbb
or
fild
and
add
retf
adc
jo
add
fucom
adc
out
dec
push
inc
outs
fldcw
dec
sbb
xchg
rcr
mov
test
pop
(bad)
jmp
xchg
xchg
xchg
das
cmps
xor
sbb
lods
mov
in
jge
lods
popa
ror
mov
add
xchg
icebp
es
lds
aam
out
je
dec
lock
movs
mov
js
cmp
pop
mov
mov
or
loopne
jl
jmp
sti
or
test
movs
adc
mov
cli
cmp
cld
mov
inc
je
imul
aad
inc
fsubr
xchg
sete
(bad)
pop
jl
fild
and
(bad)
xchg
ret
dec
xchg
xor
push
out
jbe
add
icebp
cmp
adc
sub
jne
clc
popa
dec
pop
fsubr
fistp
je
jge
repnz
add
push
inc
into
and
imul
rcl
mov
cmp
or
pop
xchg
xchg
mov
dec
or
inc
lods
mov
push
mov
test
xchg
loopne
fwait
mov
test
cmc
add
popf
push
fdiv
jmp
lods
rcr
cmp
ja
jno
aam
outs
hlt
sbb
stos
lds
adc
sbb
int
jb
hlt
mov
movs
dec
stos
icebp
in
dec
adc
push
into
dec
xor
xchg
mov
xlat
rcl
xor
and
loop
(bad)
aam
jecxz
js
pop
xor
fadd
clc
sbb
push
retf
jecxz
cdq
clc
fdivr
fwait
mov
xchg
ret
jp
mov
imul
inc
shr
mov
cwde
es
push
mov
xchg
cli
retf
xchg
sbb
add
fld
xchg
sub
pop
leave
pop
adc
jmp
cwde
sub
mov
nop
inc
mov
inc
(bad)
mov
add
pop
xchg
arpl
in
push
dec
sub
js
out
sbb
dec
add
inc
add
ret
push
sti
lds
mov
or
cmp
mov
mov
push
and
sahf
push
jge
sbb
repz
push
ficomp
pop
mov
mov
clc
sbb
or
arpl
pop
xchg
inc
push
in
and
sub
mov
out
cld
push
movs
inc
fistp
adc
shl
mov
ror
pop
mov
mov
imul
pop
pushf
mov
or
dec
dec
mov
xor
or
pop
lods
dec
call
mov
imul
(bad)
icebp
hlt
pop
(bad)
sbb
dec
and
outs
jp
inc
dec
sbb
pop
out
test
add
xor
dec
shr
mov
mov
mov
cmp
pushf
aas
jno
sti
enter
std
add
fadd
outs
or
cmps
mov
das
mov
cmps
ret
mov
out
push
call
loop
je
dec
and
mov
aas
jp
mov
add
(bad)
push
into
mov
jmp
adc
fidivr
leave
inc
(bad)
mov
ret
dec
sbb
test
sub
xor
ficom
and
push
sub
inc
adc
repz
jmp
sti
push
xchg
test
jno
fld
mov
and
les
rol
adc
mov
cli
pop
cmps
test
xor
and
ret
outs
cwde
imul
repz
(bad)
retf
jnp
fnstcw
and
cs
clc
xchg
scas
inc
mov
test
add
dec
jmp
enter
push
xchg
mov
fild
js
fistp
jnp
std
(bad)
mov
retf
lds
mov
jecxz
inc
sbb
pop
sub
out
ret
fdivr
cmp
mov
imul
jb
xchg
div
inc
int
sub
iret
mov
mov
out
xchg
arpl
pop
repnz
mov
xchg
les
je
or
jno
(bad)
in
fisubr
test
mov
add
loope
jae
daa
test
xor
push
dec
test
and
lock
push
scas
dec
jge
in
inc
jne
cmps
out
das
pushf
loopne
jns
xor
in
jns
xlat
xor
mov
or
scas
push
and
inc
adc
cdq
imul
stos
addr16
mov
adc
ret
repz
dec
ja
cli
push
add
or
sub
ret
sti
add
and
mov
sbb
stos
(bad)
enter
inc
call
mov
ins
xchg
add
xor
xchg
xchg
sub
xchg
test
inc
jl
out
into
push
sbb
fs
fsub
push
jp
inc
aaa
popa
(bad)
leave
jg
lds
cmp
push
jp
xor
push
push
mov
sbb
xor
push
sti
jae
ror
xchg
mov
addr16
(bad)
fcomp
aam
pop
sub
call
ret
mov
enter
out
mov
add
sub
arpl
push
(bad)
idiv
xor
fwait
xchg
xor
lea
xchg
push
inc
mov
fstp
and
add
inc
nop
(bad)
retf
fs
push
js
sbb
xor
push
retf
scas
stos
inc
pop
outs
scas
xor
movs
scas
sti
push
jo
sti
jmp
xchg
pop
ss
jmp
es
loop
push
adc
dec
loopne
inc
fisubr
ja
cli
cdq
push
push
inc
addr16
imul
dec
loop
adc
jo
mov
test
ins
mov
jg
or
add
pop
mov
cli
push
(bad)
jno
and
pushf
and
push
and
push
dec
out
shl
xchg
jp
jg
and
(bad)
mov
std
adc
mov
push
rol
or
sbb
imul
cmp
cmp
jmp
push
push
mov
dec
dec
adc
aam
and
nop
test
sbb
sar
xor
dec
push
fidivr
lods
ja
push
mov
jle
and
sbb
xlat
test
and
pushf
lds
jo
lods
jns
cmps
fs
fidiv
inc
outs
ret
jl
mov
imul
dec
test
push
pop
dec
jb
or
aam
sub
pusha
add
div
icebp
cmp
(bad)
retf
(bad)
adc
dec
jl
and
nop
mov
mov
adc
test
inc
jl
dec
and
cmp
mov
jg
dec
add
and
xchg
pop
sub
xor
sti
xchg
jmp
outs
(bad)
leave
in
icebp
nop
sub
xchg
jo
into
imul
push
cmps
loop
inc
add
div
stos
in
retf
push
cmp
xor
movs
inc
xchg
sbb
xchg
bound
retf
out
outs
les
ret
ins
push
dec
cmovo
add
pusha
mov
cmp
jle
mov
dec
mov
sbb
repnz
inc
sub
fisttp
mov
sub
jg
(bad)
cs
icebp
imul
add
pop
test
mov
xor
push
cmp
fldenv
push
out
int3
add
frstor
adc
mov
les
mov
xchg
(bad)
cmp
dec
adc
inc
jge
ja
mov
inc
sbb
pusha
mov
sbb
and
test
cmc
loopne
lea
mov
pop
inc
cmp
cmp
and
lods
cmp
xor
ficom
in
in
sub
into
inc
xchg
xchg
mov
cmp
data16
hlt
shl
sub
pop
rcr
imul
js
cmp
out
xchg
inc
and
mov
in
(bad)
jo
daa
leave
inc
rol
mov
xchg
fisttp
push
inc
fisub
mov
pop
jmp
shr
sub
xchg
nop
icebp
clc
ret
sub
out
out
and
or
fidiv
sbb
fld
push
hlt
pop
jnp
ds
xor
jg
xchg
(bad)
jnp
xor
sbb
ret
dec
mov
cli
push
(bad)
fidivr
gs
mov
sbb
and
add
rcl
sbb
xchg
mov
sub
out
sbb
aad
mov
pop
add
xlat
sti
adc
cli
adc
jbe
int
mov
out
push
sbb
cmp
addr16
xchg
xor
cmp
mov
inc
out
xchg
test
mov
xchg
loope
mov
mov
mov
adc
add
inc
xchg
dec
mov
xchg
pop
cmc
test
addr16
pop
dec
sahf
hlt
sbb
call
bound
mov
aas
jno
(bad)
in
(bad)
mov
sbb
stc
test
and
sub
sub
add
ficomp
sbb
shl
dec
or
test
sub
cmps
sub
in
sub
xchg
out
fcom
jg
std
push
pushf
push
mov
out
dec
fist
lds
dec
xchg
cmp
aam
adc
sbb
stos
lahf
sbb
push
push
bound
cld
pop
sbb
out
mov
fcmove
mov
movs
and
int
aad
pop
or
jl
das
xchg
pop
movs
jge
pop
jbe
iret
sbb
les
xchg
and
add
xor
ds
pop
push
push
pushf
add
mov
sub
ret
cmp
cli
inc
xchg
int
movs
push
in
jb
repnz
push
mov
dec
and
loope
dec
(bad)
inc
repnz
in
jmp
out
xor
popf
xor
pop
cmp
cli
xchg
add
dec
jo
(bad)
sahf
jno
jmp
jl
and
xor
push
push
out
inc
cmps
push
nop
mov
lods
jnp
or
not
cmp
jg
xor
popa
call
bound
sub
sub
inc
jmp
ja
dec
xchg
mov
(bad)
push
xchg
fs
iret
jo
xchg
dec
cmp
repnz
mov
ins
pop
push
push
mov
sar
mov
xchg
ja
pop
mov
daa
push
retf
xchg
push
inc
xchg
sub
jmp
dec
mov
js
jbe
loope
aas
rcl
mov
retf
ins
adc
xchg
dec
xchg
cld
aas
int
pop
loop
push
scas
aas
sbb
mov
aad
into
(bad)
mov
and
pop
dec
std
jno
xor
imul
jb
adc
sbb
inc
ins
out
les
cmp
dec
stc
xor
je
ss
push
sub
pop
loopne
hlt
in
test
out
mov
and
arpl
loop
imul
jbe
add
shl
mov
repnz
scas
and
mov
fwait
cmp
lock
sub
cmps
jno
out
push
shl
scas
adc
movs
test
adc
into
jle
pop
pop
cs
inc
out
dec
shl
rcr
es
dec
inc
int3
pop
pop
fstp
movs
sbb
aad
jne
sub
or
xlat
or
push
sbb
movs
jge
neg
add
cmp
cmp
pusha
mov
ds
retf
hlt
hlt
sub
retf
repz
push
push
movs
dec
rcl
mov
pusha
jo
mov
jg
add
xchg
iret
inc
xor
cmps
icebp
js
shl
je
hlt
fsubr
xor
xor
xor
adc
movs
in
sub
jb
sub
inc
adc
jle
jae
push
test
aaa
pop
pushf
stos
out
pop
mov
jb
rol
sbb
inc
xor
fwait
rcr
xchg
xor
add
ins
mov
xchg
mov
add
into
dec
lahf
aas
je
fadd
sbb
cmp
and
(bad)
shr
xchg
add
cmps
sub
cmp
dec
sub
loopne
cld
pop
jne
(bad)
sbb
cmp
xchg
pop
sub
mov
icebp
mov
xchg
jp
lahf
aaa
fisubr
adc
xchg
pop
add
scas
daa
mov
mov
cdq
retf
dec
out
sti
mov
push
addr16
jmp
ror
mov
xor
pop
or
cmps
loop
outs
ficomp
jae
shr
test
(bad)
cmc
popa
adc
or
lods
adc
imul
pop
xor
scas
sbb
dec
jo
retf
out
shl
xchg
cmc
xchg
mov
in
pop
jo
push
ins
dec
cmp
sub
adc
sahf
xchg
data16
test
pop
jmp
push
ds
dec
inc
aam
clc
dec
push
lock
icebp
xchg
sub
dec
scas
jno
pushw
hlt
rol
mov
xor
pusha
xchg
xor
test
push
mov
fdivr
in
sbb
movs
iret
jno
mov
test
mov
sub
out
mov
push
imul
cmp
int3
adc
adc
popa
mov
push
mov
in
test
dec
test
icebp
mov
cli
mov
shl
(bad)
jo
inc
mov
je
mov
aaa
enter
inc
ret
pop
jmp
ss
aas
cmps
scas
jmp
adc
sub
jecxz
lock
call
fmul
sbb
inc
repz
xchg
leave
imul
fdivr
popa
cmps
in
add
popf
outs
into
inc
or
adc
out
dec
pop
xlat
cli
push
pop
lahf
enter
sti
xor
outs
cmc
lahf
ror
movs
xchg
push
pusha
mov
rcr
xor
mov
stos
adc
push
or
les
loop
add
stos
cs
pop
jmp
adc
loope
jo
out
xchg
xor
or
sbb
cs
outs
fadd
xor
inc
ret
out
sub
enter
mov
jge
inc
push
jno
aad
jg
popa
out
inc
js
jl
lea
xor
adc
outs
int
rol
jmp
and
enter
sub
dec
and
out
push
xor
les
data16
or
dec
add
fst
jmp
push
cmp
fsubr
aas
mov
push
mov
ficomp
cs
ins
cmp
and
fsubrp
in
aad
mov
dec
cmp
xchg
jb
pop
dec
mov
pop
mov
jecxz
out
sbb
mov
cmps
es
shl
test
test
aas
movs
fld
adc
mov
sub
(bad)
jp
pop
ret
cmp
dec
jo
not
aam
gs
sbb
nop
mov
dec
and
fs
cmp
call
loopne
or
and
sub
push
popf
in
adc
mov
mov
jg
and
push
les
push
mov
imul
xor
les
add
dec
xor
out
jle
cdq
cmps
push
xchg
not
xor
nop
push
jge
adc
inc
ret
mov
cld
in
dec
xor
cs
xor
or
sub
ins
jae
jo
(bad)
aam
cmp
call
and
xchg
popa
out
(bad)
stc
retf
mov
and
xchg
push
mov
mov
jmp
jg
add
fcmovnu
ds
dec
dec
(bad)
lods
dec
hlt
imul
jno
sub
sub
jae
daa
enter
test
ss
jle
inc
ffreep
cmp
jo
pusha
cmp
pop
add
mov
and
xor
pop
adc
mov
dec
mov
sub
xor
retf
mov
adc
mul
lods
fcomi
dec
adc
pop
loopne
aam
sub
cmp
les
sbb
(bad)
jmp
popf
pop
fstp
pop
adc
retf
mov
idiv
call
es
ret
jp
mov
mov
cld
xor
mov
mov
sbb
jmp
cwde
jne
aaa
pop
hlt
cs
rcr
cmc
inc
jmp
mov
les
jecxz
sbb
mov
dec
adc
cli
jle
ja
iret
mov
jae
mov
pop
scas
dec
cmp
mov
xor
cs
mov
jmp
push
dec
and
ficomp
inc
mov
or
dec
(bad)
leave
sbb
icebp
clc
xchg
std
rcl
xchg
push
inc
sbb
pusha
ficomp
repz
iret
mov
mov
cmp
pop
rcl
ret
sub
fwait
in
dec
and
bound
nop
or
cwde
xchg
cmc
adc
pushf
les
mov
xchg
in
lahf
(bad)
push
fcmove
(bad)
fndisi(8087
mov
das
outs
ss
sahf
push
lods
pop
mov
shl
je
dec
lods
call
sub
ins
jmp
pop
rcl
jle
mov
adc
jmp
push
mov
imul
lahf
cmp
cwde
aas
ror
and
adc
loopne
gs
repz
imul
fcom
add
sbb
and
add
xchg
in
or
in
sub
ss
mov
xchg
adc
xchg
gs
jnp
cmc
or
adc
sbb
test
imul
sub
cld
jmp
nop
push
repz
fild
add
dec
je
dec
aas
pop
xchg
ss
loop
cmp
push
mov
pop
mov
mov
adc
fstp
xlat
les
movs
popf
int3
std
imul
mov
mov
mov
fcomp
ins
in
push
pop
push
mov
test
adc
test
mov
mov
jno
xchg
mov
shl
lods
push
mov
xlat
fadd
xchg
jns
mov
rcl
sub
dec
mov
je
dec
icebp
sbb
inc
mov
adc
ss
xor
retf
cli
cli
mov
add
mov
out
loope
std
or
ret
or
fld
mov
pop
push
pop
cli
cdq
(bad)
call
add
jmp
cmps
sub
xchg
mov
or
rcl
aam
in
(bad)
mov
ret
lods
and
xor
add
and
pop
aaa
jecxz
dec
mov
ins
leave
loope
mov
lock
arpl
dec
or
add
push
ins
fstp
pop
pop
and
sbb
xor
mov
imul
or
xor
pop
repz
int3
dec
pop
loopne
test
add
imul
hlt
fwait
mov
inc
inc
add
mov
xor
cmp
sub
test
stos
jae
idiv
lea
cwde
sbb
sbb
sbb
repz
imul
in
aad
fld
or
scas
das
lahf
add
call
mov
or
lods
lods
xlat
lea
sbb
push
mov
dec
inc
push
inc
or
sbb
mov
sbb
add
sbb
in
dec
loopne
push
xor
mov
fcom
mov
cmps
shr
pop
leave
retf
stc
ds
jge
sub
sar
jo
loope
cmp
fistp
pusha
xor
(bad)
fcmovu
sti
inc
and
stos
mul
mov
xor
xor
jno
clc
and
pop
sub
push
int3
xchg
jb
pop
cli
mov
pop
in
(bad)
xlat
fucomi
popa
cmp
retf
leave
popf
aad
std
xchg
pop
daa
mov
mov
rcr
shl
leave
ins
adc
jbe
idiv
fsubr
bound
fmul
pop
xchg
adc
loopne
sti
je
mov
not
dec
add
xchg
mov
imul
je
aas
(bad)
push
mov
retf
nop
xor
aaa
mov
sar
loope
jns
adc
aaa
out
sbb
xchg
shl
dec
iret
cli
and
shr
fisttp
dec
inc
jb
addr16
adc
sbb
jecxz
movs
push
ins
xchg
push
push
inc
or
clc
imul
sbb
movs
test
xor
call
xchg
out
inc
adc
fidiv
adc
xor
and
adc
mov
imul
ins
enter
cmc
loop
stc
fstp
imul
sbb
jmp
push
push
popf
retf
les
jae
lods
popf
repnz
repnz
or
es
enter
(bad)
sbb
aad
stos
jnp
sbb
aad
fcom
jge
popf
and
(bad)
mov
es
mov
mov
jmp
mov
js
mov
mov
jp
push
and
aaa
cli
sti
jo
fdivp
xchg
adc
in
jg
xchg
push
shl
cs
lds
sub
out
inc
sub
mov
rcr
fs
stos
jmp
jbe
pusha
in
retf
sti
lea
rol
sbb
sub
loopne
loopne
enter
cwde
push
xchg
adc
iret
sub
add
shl
and
add
(bad)
xchg
shr
shl
mov
fnstcw
jle
add
pop
out
add
leave
outs
jne
pop
dec
(bad)
jmp
shrd
test
add
sub
jecxz
lds
xchg
out
adc
aam
or
ja
cmc
lahf
mov
sbb
sar
sbb
jge
add
pop
ja
scas
retf
pop
in
dec
jno
push
jg
hlt
xchg
xlat
and
sub
outs
imul
ret
cld
jl
or
mov
(bad)
nop
mov
scas
ss
(bad)
pusha
out
sbb
addr16
aam
in
mov
sub
fwait
xchg
das
or
mov
add
lds
mov
fwait
std
cmc
mov
pop
xchg
stc
dec
lods
xchg
es
add
shl
mov
pop
scas
fs
nop
mov
fldcw
fimul
pop
sub
jb
adc
or
mov
push
nop
cmp
push
cmp
mov
cmps
iret
mov
pop
jle
icebp
jge
leave
cmp
clc
dec
pop
jmp
cmc
cmp
fmul
hlt
enter
stos
and
jge
popa
pop
cmps
repz
push
cdq
xchg
mov
std
in
add
xor
sahf
mov
or
add
xchg
stc
aam
mov
xor
add
dec
scas
sub
(bad)
test
call
mov
fdiv
jno
push
repz
movs
push
push
xor
xlat
aad
aad
clc
into
push
mov
sar
into
test
push
lea
pop
sub
je
sar
cmp
loop
scas
shr
popf
ret
scas
cmc
mov
sbb
xchg
sbb
add
sbb
adc
aam
shr
mov
jmp
mov
push
loop
(bad)
dec
dec
rol
xchg
or
xor
mov
leave
mov
sub
or
je
popa
and
hlt
dec
cmp
pop
test
daa
pop
add
sub
stos
sub
dec
cwde
and
xchg
pop
and
fsubr
sub
add
aad
pop
sbb
add
das
pop
hlt
jns
retf
pop
pop
lods
nop
outs
dec
sbb
mov
dec
xchg
push
jbe
dec
sbb
imul
push
and
push
stos
(bad)
xchg
shr
sbb
(bad)
out
add
stos
dec
mov
fsub
push
popa
cmps
add
jae
in
call
cmp
inc
and
adc
stos
call
lods
adc
mov
popa
daa
das
or
and
xor
jbe
cmc
lock
mov
sbb
adc
fild
xchg
inc
cmps
stc
shl
aad
loopne
xor
add
icebp
leave
lock
add
inc
push
xor
je
cmp
sub
inc
xor
sbb
xor
nop
inc
add
pop
fisttp
dec
imul
cmps
out
pop
add
inc
mov
out
popa
nop
call
repz
mov
push
prefetchnta
jmp
into
sbb
into
and
aas
cmc
rcr
dec
push
pusha
in
stos
pop
std
cs
sbb
shr
repnz
call
push
add
into
lea
retf
mov
mov
repz
add
xchg
jmp
in
pop
or
mov
pusha
mov
out
push
jmp
jbe
mov
imul
mov
aad
shr
loopne
mov
or
out
fmul
pop
mov
lahf
mov
aaa
add
inc
pop
jl
adc
push
cmp
push
stc
lods
cmps
mov
pop
movs
add
dec
mov
mov
out
lock
jmp
add
xchg
pop
std
and
aad
inc
xchg
jns
rcr
in
pop
(bad)
retf
sub
pop
mov
push
push
or
fbld
xor
add
pop
inc
mov
nop
jl
jnp
mov
add
xor
xor
sbb
and
pop
icebp
test
push
sub
hlt
sbb
pop
cli
(bad)
loop
mov
ss
mov
lods
pop
sbb
(bad)
xor
js
mov
push
or
jb
xor
mov
cld
mov
dec
adc
push
sbb
leave
push
pop
int3
jmp
and
inc
xchg
mov
adc
fcmovbe
mov
jo
sbb
iret
pop
dec
leave
fwait
and
(bad)
dec
mov
jmp
(bad)
cmp
mov
data16
inc
fcom
fmul
or
add
dec
mov
adc
aaa
xchg
bound
rcr
inc
pop
jmp
or
dec
xor
add
repnz
mov
movs
addr16
fisttp
dec
iret
push
fcmovb
add
mov
sbb
scas
in
and
mov
stos
(bad)
pushf
and
addr16
xor
add
pop
(bad)
ins
mov
test
sbb
lods
pop
pop
add
jmp
retf
mov
mov
retf
pop
jmp
clc
sub
popa
std
pop
inc
out
shl
test
ins
pop
pop
retf
mov
mov
popa
cmp
inc
jmp
leave
jbe
and
pop
xchg
xor
pop
ja
push
mov
stos
inc
cmps
mov
sub
sahf
jp
aad
aam
xchg
push
into
push
push
push
adc
jnp
mov
pop
retf
pop
xchg
dec
into
push
mov
or
shr
cmc
xor
pop
ss
cli
xchg
mov
ds
sbb
adc
mov
scas
es
fisubr
mov
int3
cli
xchg
movs
les
pop
xchg
cs
sub
dec
pop
push
leave
jno
push
(bad)
jl
mov
loop
loop
push
dec
das
into
in
dec
loop
sbb
xchg
adc
xor
xchg
add
fs
dec
out
jmp
cld
(bad)
(bad)
jmp
mov
sub
in
mov
cmp
test
ficom
pop
es
mov
lods
aad
add
mov
mov
std
cmp
xlat
cmps
adc
and
pop
push
cld
in
ds
mov
xor
leave
(bad)
imul
mov
addr16
out
movs
iret
lods
js
(bad)
in
retf
inc
bound
popf
fild
fdiv
dec
idiv
lods
movs
arpl
sub
jns
xchg
aad
clc
xchg
(bad)
lods
xor
bound
ja
scas
in
mov
push
mov
cmp
aas
retf
js
sbb
or
dec
lahf
jmp
and
add
out
mov
cmp
test
iret
das
inc
jmp
fnstcw
retf
pop
bound
adc
leave
inc
inc
enter
retf
fisttp
call
xchg
add
out
mov
or
call
out
div
stos
jp
inc
rol
jge
fild
push
out
fwait
xor
xor
jns
daa
mov
enter
mov
jo
out
jecxz
lods
clc
mov
sbb
cmp
and
mov
pop
ja
stos
ins
push
leave
mov
dec
or
std
out
ja
and
sub
outs
dec
pop
sbb
or
bound
jb
shr
mov
sub
xor
push
pop
dec
add
jp
xchg
inc
fwait
ja
dec
mov
popf
or
popa
cmp
ret
jmp
jb
jge
nop
mov
jcxz
xchg
retf
(bad)
js
sub
sub
ret
jno
sub
out
ins
pop
mov
pusha
cmps
scas
cs
out
xchg
(bad)
movs
in
outs
outs
pop
test
je
jl
and
enter
xor
mov
inc
pop
add
or
(bad)
fs
mov
mov
loopne
hlt
out
or
jmp
xchg
lock
movs
adc
jmp
and
jl
fsubr
add
cmp
aas
adc
imul
ja
mov
fwait
and
test
sub
and
cwde
mov
(bad)
in
cwde
or
jp
dec
or
loope
push
data16
es
add
and
xor
pop
into
jmp
add
int3
stos
push
call
daa
push
add
jo
cmp
enter
repnz
inc
inc
movs
inc
rcl
fwait
inc
dec
ret
push
jb
in
jae
push
push
jecxz
dec
repnz
pop
dec
jl
jbe
xor
js
inc
int
ja
jecxz
(bad)
pusha
and
xchg
sar
cmp
pop
or
mov
mov
(bad)
sbb
cmp
push
ret
leave
mov
push
jo
iret
xor
loopne
sub
mov
mov
push
fldln2
or
sub
cmp
stc
pop
pusha
addr16
inc
jne
loop
icebp
sbb
lock
sbb
cld
js
mov
in
nop
or
jmp
cmp
inc
adc
add
dec
dec
jl
xchg
sub
push
mov
sti
mov
mov
cdq
xchg
sbb
outs
movs
mov
mov
ror
sub
pop
out
stc
scas
mov
cs
cmc
ins
jnp
or
call
mov
rol
cmps
cmp
aam
push
je
je
pop
cmc
cmps
pop
or
dec
sbb
dec
push
mov
inc
cmps
jbe
fiadd
fild
je
test
fdivr
shl
lds
shl
jno
fwait
(bad)
and
cdq
mov
mov
nop
cmp
aam
lods
inc
lock
mov
lahf
cwde
cli
jo
cdq
(bad)
push
push
retf
fcmovne
pop
xchg
or
fsubr
mov
or
mov
and
mov
ret
sbb
jmp
push
xor
lods
ins
dec
leave
cmp
adc
aad
adc
push
pop
or
add
add
cmp
xchg
retf
jno
jge
add
arpl
arpl
movs
(bad)
cmp
shr
icebp
ja
add
or
adc
push
push
cmp
retf
jge
call
inc
ret
xchg
dec
sub
inc
scas
dec
shl
xor
(bad)
or
jbe
sub
nop
mov
test
push
sbb
mov
and
inc
or
dec
movs
xchg
retf
inc
ret
mov
sbb
das
(bad)
jae
cmp
mov
movs
adc
inc
fadd
xor
pop
adc
add
arpl
sahf
xchg
mov
or
inc
fstp
std
push
setb
pop
adc
stos
shr
dec
ins
rol
xchg
sbb
ins
pop
test
fmul
outs
add
pop
xor
jb
leave
xchg
xor
push
push
pushf
ror
adc
inc
mov
xchg
xor
mov
push
movs
stc
sbb
arpl
xlat
cmp
retf
and
inc
retf
ins
xor
xchg
or
or
pop
pop
pop
retf
mov
add
fwait
pop
push
hlt
cli
jnp
sub
dec
loop
ret
mov
inc
cdq
mov
and
xor
in
xor
jnp
push
iret
mov
cs
xchg
inc
or
xlat
add
out
dec
int
jge
sbb
and
shr
sahf
nop
sbb
push
mov
into
sbb
(bad)
pmuludq
inc
mov
lods
add
pop
xchg
fmul
inc
inc
leave
xlat
jmp
js
adc
and
sub
adc
mov
push
aam
push
jne
mov
retf
add
mov
xchg
xlat
movs
dec
movs
mov
pusha
mov
sbb
gs
jnp
sbb
pop
cs
rcl
in
out
jne
push
leave
sub
mov
inc
rol
imul
out
push
and
imul
je
xor
je
out
adc
leave
rep
fcom
shl
push
imul
inc
dec
jp
jb
inc
xlat
pop
or
add
cmp
jns
cmps
je
sub
jne
int
pop
push
fild
sub
ficom
and
lahf
add
xor
(bad)
retf
test
cmp
pop
pusha
iret
xchg
fs
hlt
push
mov
rcl
and
mov
add
xor
test
mov
ja
push
test
push
shl
mov
mov
aaa
scas
dec
jns
enter
(bad)
push
mov
mov
jp
arpl
(bad)
xchg
sub
out
adc
sbb
dec
cld
and
cs
add
sbb
dec
lea
movs
push
enter
ds
loop
into
into
mov
inc
cmp
mov
and
xchg
and
(bad)
arpl
outs
scas
pop
stos
pop
imul
xor
test
mov
popa
add
adc
pop
pop
sahf
mov
jno
jp
mov
push
xchg
aam
cmp
adc
lock
mov
hlt
xlat
scas
mov
dec
jl
(bad)
xlat
cdq
mov
xlat
(bad)
cmp
push
or
gs
outs
sbb
enter
dec
repnz
jecxz
scas
pop
in
rcr
jmp
and
inc
adc
sub
icebp
pop
lods
call
push
sar
das
(bad)
fwait
cmp
mov
call
leave
mov
inc
ds
pop
mov
repz
xchg
dec
call
fcmovnbe
push
pusha
mov
ja
cs
loope
xchg
pop
push
aaa
mov
rcr
rol
adc
retf
shr
cmc
mov
aam
mov
outs
mov
xor
fcomp
inc
(bad)
mov
cdq
jne
adc
or
and
retf
cmp
xchg
mov
idiv
cmp
sar
xchg
add
stos
jne
test
mov
jo
inc
pop
xor
pop
or
pop
inc
cmc
sub
bound
loope
and
lods
or
push
xchg
popf
jmp
pop
pop
in
push
adc
cmp
jo
pusha
(bad)
mov
dec
push
outs
mov
add
fisttp
adc
out
and
ds
dec
sti
cmc
shr
das
ds
mov
push
ins
or
push
scas
dec
not
repz
sub
jns
pop
adc
cmps
scas
and
jne
mov
mov
cmp
pusha
shr
lods
jl
sub
adc
mov
fdivr
call
out
fsubr
cs
(bad)
cmp
popf
jl
fbstp
int
lea
push
js
mov
pop
mov
ficom
jle
mov
cwde
add
or
retf
ja
dec
xchg
cmp
bound
add
lock
je
daa
retf
adc
in
lods
scas
pop
mov
push
movs
inc
dec
jo
cdq
retf
out
push
mov
mov
test
sbb
jo
add
(bad)
js
push
(bad)
lds
and
add
sar
xlat
jmp
dec
mov
rcl
jl
arpl
test
or
std
push
outs
loop
nop
mov
cmp
test
add
inc
pop
xchg
cli
das
pop
xchg
dec
aam
dec
sub
cmp
add
popa
xchg
push
sub
fistp
pop
cmp
dec
or
ins
cmps
jle
inc
xchg
cmps
movups
and
(bad)
outs
aaa
nop
pop
fsub
add
mov
rcl
icebp
mov
outs
push
push
ds
sub
emms
xor
mov
and
mov
cli
popa
popa
or
ja
inc
(bad)
mov
jns
mov
adc
and
push
popa
xor
pop
sub
dec
or
sbb
mov
cwde
aaa
jmp
stos
xor
pop
push
int3
mov
pop
adc
mov
or
call
jmp
std
add
cmp
out
das
(bad)
(bad)
dec
pop
stos
mov
scas
mov
std
(bad)
or
dec
xor
xor
popf
pusha
iret
cmps
and
inc
enter
mov
jb
xchg
inc
xor
or
shl
sbb
mov
adc
inc
pop
dec
sbb
(bad)
xor
addr16
test
inc
add
xchg
stos
adc
movs
loop
cmps
add
call
imul
in
aaa
push
inc
sti
pop
adc
sub
movs
cmp
in
push
out
clc
or
jge
fisub
ficomp
mov
cli
push
test
cmp
lods
retf
outs
or
rol
loopne
imul
xor
test
lods
or
data16
stos
mov
add
push
push
stos
(bad)
out
int
cmc
in
ret
cmp
add
test
dec
inc
lds
iret
sti
xchg
lds
retf
test
add
add
ss
pop
xor
fcos
movs
adc
ins
cmp
jmp
mov
rcr
daa
test
stc
cdq
jmp
mov
mov
(bad)
pushf
or
cmp
dec
adc
pop
adc
mov
int
cmp
xchg
jle
call
push
cmp
(bad)
pusha
in
lea
(bad)
fdiv
fs
daa
out
or
cs
enter
jnp
xor
test
push
mov
lods
mov
clc
jb
sbb
iret
fwait
out
pop
jecxz
inc
cmp
or
les
xor
test
mov
mov
push
pop
jmp
repz
xor
sub
or
mov
mov
js
jge
dec
pushf
adc
rcr
jl
dec
pop
int3
inc
shl
mov
cmps
sahf
aad
rol
sti
mov
iret
mov
into
mov
repnz
ja
sbb
xchg
sti
int3
jg
mov
pop
out
push
xchg
ror
cmc
enter
mov
add
and
sti
outs
fst
cmp
xchg
inc
retf
retf
xchg
cmp
cmp
mov
clc
cmp
fidiv
add
pushf
add
lds
and
xor
xchg
int3
shr
pusha
scas
pop
movs
scas
in
and
cmp
aad
int3
repnz
push
mov
add
pushf
retf
(bad)
fstp
cmp
pop
shl
mov
pop
inc
mov
popa
loope
xor
sub
leave
push
cli
and
test
xchg
jl
and
adc
dec
mov
pop
movs
cwde
loop
mov
and
mov
cmp
mov
popa
jne
jnp
pop
pop
mov
xchg
scas
loope
outs
xlat
int
loop
dec
or
add
test
in
mov
ret
push
mov
or
jbe
add
add
retf
push
jmp
cs
mov
mov
(bad)
cmc
xchg
lods
(bad)
imul
xor
mov
dec
dec
jge
lahf
cmp
inc
out
adc
sti
jns
sbb
sbb
inc
js
add
icebp
cmps
adc
sti
pop
jne
mov
pusha
pop
movs
(bad)
in
push
(bad)
jle
es
sbb
test
cmp
imul
push
fsub
mov
outs
call
push
cmp
sbb
mov
xchg
xor
pop
fsubr
les
and
outs
int3
lods
fwait
int3
jmp
add
mov
call
stos
sbb
ins
sub
or
daa
cld
cdq
mov
jb
or
add
push
(bad)
cmc
or
xchg
or
and
loop
int
test
loopne
sar
pushf
or
jle
neg
sbb
sub
add
sub
xchg
push
push
fs
(bad)
call
cmp
inc
xchg
mov
cmp
dec
popa
add
add
xor
sub
jp
aas
fldenv
out
sbb
repz
out
mov
pop
test
sub
mov
repz
outs
mov
loopne
aad
test
test
cwde
stos
add
sub
cmc
inc
xor
loope
jle
mov
cmp
xor
mov
data16
push
mov
xor
ret
jno
mov
and
sbb
or
sub
cmps
jcxz
adc
xor
sub
add
test
lahf
test
push
add
inc
push
jns
xchg
arpl
or
mov
adc
dec
dec
loope
add
pop
daa
test
rcl
jmp
lahf
and
pop
imul
pushf
jmp
xchg
inc
and
push
jae
movs
test
push
imul
call
cmp
(bad)
loop
pop
call
push
ja
aam
add
push
cmp
sahf
and
mov
jb
jmp
fadd
sub
sahf
mov
mov
jnp
mov
push
js
imul
jmp
add
xlat
dec
clc
xor
xchg
mov
in
mov
imul
and
arpl
fwait
in
int3
push
mov
inc
dec
dec
retf
xor
add
sbb
adc
loope
and
xchg
inc
push
pop
jmp
mov
lds
scas
js
imul
mov
jae
outs
mov
call
pop
dec
mov
or
stos
add
mov
outs
mov
push
push
ss
xor
pop
movs
inc
cmp
fbstp
in
(bad)
push
jmp
stos
sub
inc
in
adc
out
daa
inc
jb
push
clc
rcr
or
sub
adc
mov
(bad)
fwait
(bad)
xlat
sub
ja
and
cmps
stos
sub
xor
pop
dec
mov
sub
lahf
mov
mov
in
inc
xor
ss
sbb
add
mov
ror
fidiv
push
arpl
mov
stos
pusha
fucomi
dec
mov
sbb
not
ds
outs
cli
shl
(bad)
pop
std
lahf
mov
mov
jl
stc
cmp
out
aas
sub
push
test
call
enter
dec
mov
bound
xor
cmp
add
cmp
mov
ficomp
rcr
sbb
push
sahf
dec
cmp
in
inc
mov
(bad)
ja
cdq
(bad)
push
shl
fistp
push
xchg
sbb
pop
inc
aam
adc
adc
aas
popa
retf
xor
lods
adc
cmc
jne
or
xchg
pop
retf
js
lea
xchg
pop
mov
add
gs
sar
xor
jge
cmps
mov
in
or
sub
scas
and
push
mov
aaa
push
aaa
pop
jp
cmp
add
mov
jg
lods
fucompp
push
fcomp
in
cmp
call
scas
inc
call
das
sub
xchg
fs
inc
fild
jmp
cwde
ds
fiadd
frndint
aaa
and
push
jmp
sbb
inc
jmp
sbb
cmp
add
jg
shl
mov
(bad)
out
loopne
push
(bad)
mov
adc
scas
retf
mov
cmp
mov
add
add
fstp
rcr
add
pop
loopne
fmul
xchg
movs
in
mov
push
and
jle
shr
and
ret
test
cmp
js
aaa
pop
lds
push
je
(bad)
pusha
rcl
or
jae
push
outs
scas
sbb
and
stc
jmp
into
xchg
mov
push
hlt
bound
test
outs
daa
add
lahf
or
leave
mov
in
jbe
pushf
xchg
cli
shl
inc
push
mov
adc
mov
pop
push
lahf
push
jg
fmul
jp
mov
movs
cmp
clc
xor
js
test
cmps
aaa
or
mov
sti
xchg
not
xchg
popa
lea
sub
mov
imul
mov
(bad)
call
mov
mov
shl
add
push
inc
and
dec
popa
sub
push
jns
shl
ins
int3
rcl
out
dec
mov
jnp
ds
bound
jnp
(bad)
shr
ss
aaa
fld
stos
mov
xor
ins
cmp
jg
popa
retf
adc
or
adc
pop
jl
aas
push
bound
bound
dec
ret
xchg
pop
fiadd
and
cdq
fadd
(bad)
aad
mov
xor
stos
push
daa
jno
sub
jl
test
mov
pushf
add
daa
xlat
pop
add
aas
sti
sub
sbb
jmp
push
loop
mov
movs
jo
dec
rcr
(bad)
xor
pop
fs
mul
cmp
adc
or
and
cmp
test
(bad)
mov
jno
ss
cmc
xchg
push
shl
xor
pop
in
sbb
fst
pusha
push
ins
jmp
xor
shr
dec
dec
xchg
sbb
adc
sbb
rcr
and
cmp
arpl
adc
xchg
jae
outs
mov
mov
mov
mov
not
ret
xor
lea
retf
mov
loopne
pop
mov
mov
stos
in
pop
adc
dec
push
xchg
ror
adc
imul
adc
aam
lea
push
push
mov
loope
push
push
movs
fisttp
xchg
cmps
(bad)
mov
mov
jb
and
iret
dec
mov
mov
jo
jbe
dec
xcrypt-ofb
cmps
cs
enter
call
test
xchg
or
xchg
(bad)
jno
rol
hlt
fist
dec
out
pop
sbb
bound
data16
mov
add
sub
das
pop
adc
scas
xchg
loopne
inc
xchg
(bad)
push
sbb
ss
outs
pop
shr
pop
(bad)
retf
sar
jmp
jle
ret
addr16
adc
jge
sub
std
addr16
mov
mov
push
in
shr
push
es
adc
jo
into
loop
test
ja
mov
push
dec
shl
repnz
or
js
and
lea
jbe
cmp
xchg
fwait
test
adc
xor
dec
pop
cli
mov
sub
out
mov
pop
jecxz
daa
icebp
sub
xchg
push
xlat
xor
mov
mov
and
xor
cdq
cdq
daa
xor
sbb
fisubr
jge
add
ret
or
out
xchg
add
sbb
das
cdq
mov
push
test
ss
xor
push
aad
test
aaa
or
pusha
push
(bad)
enter
pusha
cs
and
sub
ja
dec
sub
inc
lods
jmp
loop
or
retf
ds
add
into
sub
out
xchg
lahf
retf
jge
mov
aaa
sbb
inc
scas
cmp
addr16
push
xchg
out
or
loope
std
in
push
pop
add
popf
test
ss
xor
in
push
push
cdq
and
(bad)
mov
dec
ret
retf
and
push
leave
mul
retf
fucomi
sub
jl
xchg
or
sub
mov
inc
pop
imul
sbb
lods
or
ins
call
fld
pop
push
push
lahf
(bad)
sar
jg
icebp
scas
pop
clc
popf
xchg
pop
sub
pusha
inc
mov
sub
sub
mov
jl
sub
adc
sbb
push
xchg
dec
adc
adc
mov
les
jl
je
mov
and
xor
push
shl
push
cmp
xchg
mov
jo
div
sub
fidivr
imul
call
and
add
cmp
cdq
in
int
loop
mov
(bad)
mov
(bad)
pop
inc
sbb
mov
dec
call
in
xor
fs
leave
stos
movq
cmp
adc
repz
adc
cld
cmps
add
sbb
fidiv
cmp
shl
mov
fsincos
ins
in
or
test
jo
popa
mov
imul
jae
inc
movs
pusha
push
mov
fdiv
inc
cmc
add
mov
(bad)
push
in
in
aam
leave
jp
jge
test
retf
inc
mov
cmp
mov
outs
iret
jae
xchg
cwde
retf
xchg
std
ja
jg
inc
pop
(bad)
push
mov
adc
adc
stc
sbb
bound
loope
cli
std
ror
dec
jno
scas
cmp
jo
dec
(bad)
scas
jne
or
inc
xchg
jp
and
or
jg
fisub
outs
aad
mov
sbb
push
and
sub
out
adc
frstor
cmp
jb
sbb
neg
dec
or
fisub
xchg
mov
inc
or
adc
iret
lahf
mov
aam
fs
and
adc
sub
(bad)
and
jo
cmp
add
mov
adc
mov
in
add
into
sbb
clc
and
rcl
jge
mov
call
jno
inc
dec
fimul
arpl
sub
add
fcomp
mov
push
or
xor
shl
add
(bad)
int3
call
push
mul
fisubr
lods
int
mov
(bad)
xor
and
inc
sub
push
adc
int
add
leave
or
je
out
sbb
fmul
jmp
(bad)
jnp
cmp
xchg
sub
call
mov
mov
mov
(bad)
(bad)
jbe
sub
dec
rcr
jns
int3
or
cs
stc
(bad)
add
adc
add
stos
arpl
or
fidiv
loopne
or
mov
aaa
mov
rcl
fldenv
in
xchg
jp
adc
cmps
sti
pop
fldl2e
js
pushf
daa
and
mov
pop
mov
fmul
mov
adc
cmp
jge
std
call
shl
adc
addr16
mov
(bad)
std
adc
rcl
jns
in
adc
int3
int
loop
adc
dec
out
inc
sar
call
mov
test
push
aas
(bad)
(bad)
rol
imul
push
sub
repz
mov
xor
rcl
das
xchg
pop
sub
sub
out
mov
ret
jp
mov
ret
fs
out
mov
xchg
and
loopne
xor
int3
jne
mov
add
fisttp
fld
push
loope
repnz
xor
push
xor
ins
stos
retf
dec
adc
call
rcr
test
ja
arpl
mov
std
imul
in
in
cvttps2pi
imul
lahf
out
daa
outs
inc
stos
cli
sti
mov
shr
retf
xchg
hlt
dec
dec
xchg
pmullw
sub
push
and
adc
cwde
sbb
add
cwde
call
inc
loope
xchg
ror
fnstcw
retf
fstp
inc
in
shr
sbb
push
in
sahf
jb
mov
and
(bad)
jge
aad
ret
jg
jns
stc
sti
pop
aad
push
inc
cmp
mov
xchg
push
sahf
in
xchg
rcr
and
mov
mov
mov
pop
(bad)
cmp
inc
mov
inc
test
push
xchg
add
(bad)
nop
xor
arpl
lods
es
sub
sbb
xchg
sahf
pop
imul
data16
addr16
push
pop
pop
xchg
inc
(bad)
cld
adc
sub
in
add
shld
scas
mov
pop
cmp
out
xor
mov
jmp
cli
or
repz
fs
ror
xlat
repz
lea
cdq
pop
clc
add
cs
pop
sub
mov
sub
in
lods
sub
pop
inc
(bad)
jmp
sbb
out
xchg
arpl
je
fdiv
sbb
xchg
add
lds
in
pop
inc
int
aaa
xchg
(bad)
in
shl
fxch
fidiv
stos
cwde
popf
ds
outs
hlt
xchg
cmp
sub
and
inc
mov
xchg
xchg
xchg
test
arpl
inc
(bad)
scas
stc
pushf
in
push
adc
(bad)
mov
jno
and
popf
or
jbe
pop
xor
push
dec
fcomi
cmp
xchg
jne
push
sbb
cmp
scas
scas
clc
mov
scas
mov
push
fs
ret
in
push
xor
mov
movaps
in
push
xor
popf
or
clc
popf
pop
out
enter
cwde
mov
mov
inc
adc
xor
int
into
mov
data16
or
popf
lods
loop
dec
and
cmp
push
ficomp
(bad)
or
adc
pop
dec
test
lds
adc
xlat
pop
je
mov
loopne
addr16
add
xor
(bad)
pop
pop
dec
cmp
and
mov
sbb
repz
leave
mov
test
outs
leave
xor
fisub
push
icebp
ins
xchg
cmp
retf
lods
ja
add
call
data16
ds
fwait
push
push
push
iret
fdivr
aaa
(bad)
hlt
adc
sbb
sbb
and
mov
fs
sar
cmp
out
mov
in
(bad)
jmp
dec
mov
sar
aaa
adc
lock
sub
sub
and
mov
pop
pop
inc
mov
cmp
adc
cmps
sub
pop
cmp
xchg
aas
lahf
cli
mov
mov
gs
jecxz
lahf
inc
adc
out
das
sub
xor
mov
xchg
jns
dec
retf
push
cmp
xor
adc
jmp
pusha
data16
(bad)
push
add
and
bound
push
push
mov
inc
or
rol
xchg
cmps
ins
cwde
gs
fisubr
jl
pop
inc
in
into
inc
push
xchg
sub
(bad)
cmp
cli
pop
fdiv
jg
sub
lea
loope
stos
les
pop
int
jo
nop
sbb
or
gs
outs
out
call
inc
add
pop
xor
in
or
test
(bad)
aaa
or
fild
sbb
fild
in
bound
mov
cmc
sub
adc
cdq
sub
ja
into
ins
and
test
movs
lahf
imul
test
pushf
loope
fcmovne
mov
ss
in
jecxz
add
add
imul
xor
jns
push
mov
adc
call
test
and
mov
mov
mov
lea
and
repnz
or
in
test
xchg
sub
mov
mov
and
push
imul
mov
cmc
mov
bound
xor
scas
outs
lds
pop
lock
mov
loope
push
or
inc
jmp
pop
enter
pushf
addr16
push
imul
mov
adc
dec
xchg
dec
gs
call
cmps
enter
xor
fwait
(bad)
(bad)
loopne
adc
xchg
aam
div
xchg
std
repnz
sbb
cmp
dec
jle
(bad)
cmp
jge
adc
sbb
jp
popa
out
mov
fst
jo
xchg
jmp
fnstsw
int
adc
mov
bound
mov
sub
mov
dec
dec
fistp
in
sub
cmc
(bad)
pop
out
push
stos
push
inc
lock
push
das
shl
inc
sahf
fidiv
adc
xor
fmul
cmps
or
xor
int
retf
or
out
int
jecxz
mov
xchg
sti
movs
ds
(bad)
aaa
jno
test
mov
sub
sub
sub
push
add
or
dec
aad
call
adc
mov
mov
cmc
xchg
jmp
call
adc
les
adc
mov
pop
call
pop
(bad)
xor
sub
mov
xor
ret
mov
in
retf
fimul
in
dec
rol
push
leave
jns
ficomp
push
cmp
xchg
sub
dec
call
dec
ret
add
cmp
je
mov
pop
xor
add
in
movs
scas
in
adc
xchg
retf
jbe
pop
sbb
stos
jp
jns
adc
inc
jo
push
cmp
retf
jmp
je
cmps
mov
pop
repnz
xchg
in
cmc
hlt
retf
ret
sub
aad
int
jmp
xor
xlat
mov
jo
clc
sub
cmp
std
in
xchg
in
je
retf
xchg
and
jmp
outs
pop
mov
lds
cmp
jne
int3
inc
or
(bad)
xor
inc
xchg
cmps
jb
sbb
call
add
add
(bad)
jno
rcl
(bad)
jno
xor
sbb
rcl
cld
lods
adc
shr
dec
xchg
adc
clc
adc
js
add
leave
and
or
aas
dec
bound
xor
sbb
xor
mov
call
cmp
iret
jmp
lods
pop
sub
cli
push
adc
es
lds
and
retf
mov
fcmovu
inc
enter
xchg
loope
or
fcmovnb
push
push
push
arpl
inc
(bad)
jp
mov
dec
fyl2xp1
shr
pop
sbb
loopne
cmp
push
out
jmp
or
aas
mov
cli
popa
shl
int
xchg
xchg
mov
mov
jnp
out
je
les
fisttp
push
adc
jb
cld
fild
sub
inc
mov
outs
es
xchg
(bad)
xchg
cmps
or
out
lock
or
jno
fist
push
cmps
mov
test
test
outs
pop
add
(bad)
jmp
hlt
in
jb
iret
call
pop
dec
movs
pop
lock
arpl
ja
add
ins
inc
jo
jae
push
or
adc
ss
daa
inc
pop
mov
dec
leave
aas
sbb
lods
test
aad
mov
xchg
dec
pop
outs
shl
mov
movhps
loopne
sbb
mov
into
pop
ret
sub
sbb
push
dec
das
in
aam
in
push
push
rcr
jmp
xor
fwait
movs
jbe
cmp
int3
xchg
es
xor
adc
add
sbb
adc
gs
dec
mov
dec
mov
out
jno
jg
or
mov
ja
test
xchg
add
lds
jne
cld
mov
inc
addr16
jp
sub
inc
pop
mov
push
iret
(bad)
dec
hlt
pop
sar
ss
clc
push
mov
cmp
shl
dec
add
mov
test
dec
push
jnp
inc
and
xchg
out
(bad)
cld
sbb
shl
aas
dec
inc
imul
addr16
push
(bad)
pop
sbb
stos
jp
ror
jge
cmp
mov
enter
int
cmp
ins
mov
lahf
fcmove
clc
inc
or
fst
push
push
rcl
mul
mov
pop
mov
lds
hlt
scas
and
sti
pop
ds
push
std
inc
cmp
jmp
inc
or
call
fdiv
test
dec
hlt
int
ins
fistp
pushf
lahf
push
pushf
enter
and
lods
rcl
je
dec
cmps
std
les
ret
js
or
shr
sub
and
pop
or
cs
mov
fs
xchg
cdq
ret
rol
(bad)
xlat
mov
adc
sbb
call
lahf
mov
or
sbb
sbb
data16
movs
mov
push
mov
out
mov
stos
xchg
cmp
fs
test
rcr
jnp
sbb
nop
mov
ror
imul
lods
sub
inc
test
push
jb
je
mov
pop
push
popf
int
mov
fcmovnb
push
iret
mov
mov
in
xor
mov
jbe
push
ja
sub
out
push
mov
jns
push
inc
cmps
sub
and
sbb
pop
cdq
push
push
mov
into
rcr
mov
inc
jns
jne
out
push
sub
cmp
cs
or
pusha
pop
or
cwde
adc
(bad)
into
xor
pop
jmp
(bad)
data16
add
mov
retf
and
jg
push
mov
test
out
enter
sub
ds
fdivr
dec
gs
nop
mov
aad
dec
mov
mov
or
jl
jb
push
ins
das
lods
add
inc
stc
mov
dec
clc
aad
aad
mov
push
inc
inc
mov
mov
in
aam
mov
iret
(bad)
and
push
push
pop
cld
into
fld
add
pop
inc
or
pop
mov
jg
lds
(bad)
(bad)
shl
imul
xor
push
test
(bad)
xor
sbb
lahf
sti
(bad)
(bad)
std
cld
and
ss
imul
fs
daa
mov
iret
and
fidivr
xor
repz
ret
mov
add
(bad)
adc
test
xchg
adc
inc
dec
test
test
xor
xchg
mov
call
jbe
shl
pop
sbb
cmps
arpl
dec
out
inc
jns
push
popa
xchg
push
idiv
movs
or
cmps
mov
rcl
jecxz
scas
pop
(bad)
bound
les
inc
je
imul
(bad)
hlt
jne
mov
sub
stos
jl
cmp
pop
test
add
out
iret
rol
add
sbb
jmp
inc
rcl
and
and
cmp
stos
pop
dec
fmul
mov
mov
jmp
out
fwait
outs
add
jmp
orps
add
enter
adc
lods
hlt
js
jl
(bad)
mov
cmp
retf
adc
ret
or
btr
dec
mov
loop
inc
ds
fucomip
sub
pop
sbb
dec
mov
dec
imul
mov
add
test
shr
sbb
cmc
inc
inc
jmp
movs
xchg
rcr
or
sahf
jmp
jge
mov
out
cmp
jl
jbe
xor
ins
or
call
cmp
pop
lods
mov
cmc
imul
ret
dec
cmp
addr16
xor
outs
call
mov
xor
mov
iret
(bad)
dec
xchg
(bad)
jl
das
xor
xlat
inc
rcr
fadd
dec
stos
cmps
nop
je
cmp
sub
pusha
out
ficomp
cmp
cdq
dec
mov
pop
push
mov
cmps
sub
xchg
pop
jmp
(bad)
out
and
fsubrp
icebp
in
add
movs
(bad)
xchg
and
adc
jae
mov
push
add
pusha
push
fdiv
sar
loop
sbb
iret
push
pop
mov
imul
inc
cmp
std
push
rcl
add
push
in
ds
dec
push
cmps
jae
fwait
(bad)
dec
adc
int3
xchg
xor
jo
shl
dec
sahf
push
outs
mul
push
(bad)
loop
jecxz
test
outs
popf
es
imul
push
in
adc
dec
adc
ins
test
stos
mov
and
adc
xchg
fldenv
adc
pop
dec
xchg
mov
add
jo
push
repnz
xchg
jnp
rcl
aad
loope
jae
mov
xor
popf
mov
cmp
test
repnz
jp
xchg
lock
mov
cli
push
and
movs
mov
shl
inc
pop
or
inc
mov
fs
out
sahf
jnp
jae
sbb
cli
inc
sbb
sbb
pop
sbb
scas
outs
and
xchg
ins
mov
adc
dec
push
cmps
adc
cmp
inc
push
loop
sahf
nop
loope
enter
mov
sbb
in
aad
mov
scas
jo
cmpxchg
cmc
push
leave
daa
fild
xor
adc
mov
adc
pop
popf
inc
aad
cmp
int
(bad)
adc
add
or
push
dec
retf
ja
mov
adc
jbe
shl
xor
jp
push
stc
xlat
cmps
cs
push
sub
push
mov
mov
aad
push
pop
(bad)
mov
sbb
mov
lea
push
sbb
sub
xchg
ja
fidivr
imul
dec
push
test
add
cmp
or
jns
iret
add
mov
jecxz
dec
xchg
mov
jae
add
ja
inc
call
mov
retf
test
pop
xchg
movs
dec
aam
lock
push
inc
mov
dec
into
setbe
shr
jmp
sbb
mov
sbb
cmps
sti
or
jmp
jnp
lods
(bad)
adc
cmp
sub
cmp
(bad)
and
jno
in
xor
sbb
in
js
aad
les
push
fwait
jle
stc
lahf
lods
cmp
gs
out
jge
sub
cld
jecxz
das
dec
std
lahf
dec
jmp
cs
out
adc
mov
outs
inc
outs
jecxz
cld
in
jge
jmp
xor
lock
ins
imul
jbe
fst
retf
shl
mov
into
inc
(bad)
jmp
xchg
iret
push
shl
into
mov
ret
ret
outs
mov
mov
cmp
adc
dec
mov
rcl
pusha
pop
pop
test
(bad)
div
adc
pop
jmp
or
out
sahf
and
sub
xor
or
sbb
(bad)
(bad)
stos
mov
movs
mov
jb
dec
push
(bad)
sub
inc
cmp
sbb
in
ins
mov
sahf
inc
cmp
ds
cmps
inc
ret
mov
add
add
out
stos
xor
mov
mov
js
ret
ficomp
cmp
mov
jle
fwait
push
ins
icebp
and
jbe
xchg
in
(bad)
mov
lahf
and
rcl
sub
ja
jmp
sti
xchg
in
rol
pop
sbb
and
sub
pop
(bad)
jmp
mov
sar
sub
jns
inc
shl
cld
xchg
and
xchg
mov
mov
or
sbb
add
mov
jns
dec
aad
fcomp
pop
ret
sbb
fwait
push
dec
jnp
retf
lods
mov
fmulp
aaa
das
and
dec
xor
push
dec
inc
repz
icebp
sub
fnsave
xchg
call
shr
(bad)
daa
retf
or
jmp
jae
dec
cmps
leave
sub
test
not
repnz
sar
push
cmp
mov
in
pusha
iret
pop
push
cmp
retf
mov
arpl
xchg
fisttp
inc
into
ja
in
(bad)
mov
outs
push
or
push
inc
pushaw
or
push
xchg
movs
cmc
or
mov
cli
movs
pusha
pop
imul
mov
in
call
inc
aam
shl
(bad)
iret
mov
outs
inc
or
mov
into
test
jmp
stos
jnp
cmps
daa
mov
iret
(bad)
out
ins
popa
push
adc
add
cmp
mov
inc
push
std
sbb
scas
lds
xchg
cs
mov
pop
lds
xor
push
push
or
(bad)
icebp
mov
xor
mov
xor
mov
in
sti
repz
and
out
movs
loop
and
aad
jnp
movs
ds
jl
cmp
or
fimul
push
aam
hlt
jge
inc
pop
fdivp
mov
fdiv
scas
inc
fiadd
sbb
in
not
cmp
jle
pop
add
mov
push
mov
inc
fxch
aaa
cmp
or
cmps
mov
or
out
xor
cmp
repnz
out
xchg
scas
movs
inc
dec
pop
and
frstor
dec
cmp
dec
(bad)
mov
sub
add
or
adc
stos
push
and
jmp
jnp
xchg
inc
test
mov
jns
xchg
test
adc
push
mov
(bad)
or
xchg
loope
mov
mov
call
jl
out
(bad)
fnstsw
dec
mov
aad
ds
mov
cli
add
popa
pop
ja
imul
clc
or
or
mov
xor
inc
add
add
xchg
fincstp
shl
outs
push
(bad)
mov
les
lods
sub
test
push
pop
pusha
inc
push
nop
ret
mul
stos
cmp
movs
pop
push
pushf
jmp
add
cmp
jae
mov
sub
(bad)
fadd
inc
(bad)
add
retf
mov
push
loopne
push
scas
adc
dec
dec
hlt
cmc
mov
stc
fistp
sar
mov
jmp
(bad)
je
test
scas
add
mov
jg
xor
addr16
mov
mov
scas
pop
push
mov
pop
stos
push
(bad)
lods
dec
xor
xor
stos
bnd
stos
(bad)
gs
xlat
pop
inc
pop
jle
aam
fisub
add
mov
ret
test
mov
mov
gs
pop
mov
int3
pop
outs
aas
fdivr
(bad)
jne
stos
add
pop
push
fwait
(bad)
test
sti
mov
mov
xchg
mov
std
mov
movs
stc
ss
mov
jmp
std
or
cmp
jmp
push
cmp
adc
rcr
jmp
movs
ins
mov
sub
enter
in
inc
push
out
mov
jmp
loope
fnstcw
xlat
adc
test
fadd
test
in
cli
loopne
fsubr
stos
test
or
cld
aas
cwde
js
push
mov
inc
bound
push
test
(bad)
fidivr
sbb
jne
lahf
adc
mov
rol
adc
ss
add
(bad)
repnz
std
iret
cwde
iret
lods
add
pop
ins
ins
adc
mov
int3
lahf
ins
lods
mov
and
mov
push
mov
loop
fld
loopne
mov
shl
or
movs
add
jbe
push
daa
xchg
mov
push
or
test
or
daa
stos
and
mov
bound
pop
mov
cmp
push
loopne
xor
loope
mov
push
lock
out
mov
out
ret
les
ja
jp
mov
push
(bad)
shl
xor
out
mov
dec
xor
adc
mov
dec
(bad)
(bad)
mov
jno
xor
cmp
and
lahf
push
(bad)
shr
stc
add
call
mov
movs
(bad)
out
test
xchg
and
test
cmp
stc
ss
dec
test
dec
xchg
jne
and
ja
push
mov
and
mov
xor
das
inc
add
sti
and
xchg
push
push
jmp
mov
movs
mov
cmps
inc
mov
fsub
in
lahf
or
lods
or
frstor
outs
outs
ss
pop
xchg
dec
mov
outs
fild
jmp
mov
popa
arpl
inc
fisubr
mov
lock
imul
and
fwait
bnd
pusha
ret
jg
jnp
lods
or
shl
mov
idiv
push
adc
leave
xchg
bound
rcl
jb
out
adc
or
inc
jae
sub
and
mov
daa
inc
mov
dec
pushfw
dec
add
inc
(bad)
jp
rcl
adc
rcl
in
mov
enter
test
or
lea
call
mov
(bad)
test
imul
je
mov
dec
fnstcw
jno
push
pop
and
mov
ror
adc
int3
in
mov
dec
mov
sub
arpl
mov
mov
loope
mov
mov
mov
mov
mov
push
mov
neg
mov
int
arpl
or
jmp
push
sbb
leave
push
out
sahf
out
enter
pop
mov
sbb
push
or
cmp
arpl
and
and
and
ror
loope
out
lods
sub
adc
and
lods
xor
outs
pop
dec
cmp
sub
int
jp
int
mov
jecxz
inc
inc
scas
je
jnp
movs
and
or
cvtdq2ps
xchg
sub
mov
test
mov
(bad)
sbb
aad
push
pop
or
sub
fisub
sub
sub
shl
inc
leave
inc
movs
sbb
and
scas
scas
imul
mov
xor
mov
stos
repnz
into
loopne
movs
das
out
iret
jbe
mov
xchg
or
hlt
popf
stc
xor
int3
adc
into
fwait
pop
mov
xchg
mov
dec
cmps
loope
push
lock
jl
jo
and
lods
cmp
call
test
sub
jg
gs
loope
out
push
xor
ds
sar
jbe
adc
inc
or
cli
stos
xor
ds
(bad)
inc
adc
push
mov
or
cwde
jecxz
daa
push
leave
scas
call
movs
or
pop
fiadd
mov
xor
push
push
ret
int
pop
and
sbb
dec
mov
arpl
int3
mov
cdq
pop
jnp
rol
and
mov
add
jmp
dec
inc
cdq
es
mov
dec
adc
stos
jmp
mov
or
sub
adc
mov
leave
cmp
out
scas
cmps
(bad)
loop
xchg
jno
call
iret
or
das
jns
mov
mov
mov
push
es
push
push
js
mov
inc
jmp
mov
(bad)
dec
add
aaa
sub
in
in
or
or
pop
ror
sbb
scas
outs
lds
dec
call
mov
ror
ins
mov
add
xchg
xchg
fistp
rcr
popf
and
stos
in
xchg
ror
mov
shl
cmp
push
or
(bad)
xchg
mov
(bad)
leave
movs
dec
inc
(bad)
outs
mov
jmp
or
call
or
or
int
bound
or
xchg
push
xlat
loop
lock
push
ficomp
mov
jmp
fadd
or
das
push
stos
ds
jge
cmp
push
add
push
pusha
fmulp
or
pop
adc
mov
in
cli
arpl
inc
ret
mov
out
dec
jl
mov
push
xchg
add
mov
inc
pop
sub
lods
inc
mov
pop
adc
xchg
and
pop
shl
js
sbb
pop
push
sub
jp
imul
xor
pop
fidiv
imul
push
rcr
scas
and
sbb
pop
push
bound
daa
push
fidiv
test
repz
ja
push
xchg
cs
enter
xor
dec
(bad)
mov
cmp
fdiv
and
outs
stos
adc
retf
mov
cmps
cmps
ins
aaa
mov
xchg
xchg
outs
in
push
sbb
imul
sti
add
inc
arpl
and
enter
cwde
adc
out
iret
sub
adc
sub
and
pop
sahf
js
loop
xchg
fnstsw
clc
or
out
test
sub
aas
mov
into
inc
xlat
ror
pop
les
or
pop
add
scas
aas
(bad)
in
fcom
jg
inc
push
in
ror
scas
sub
mov
sub
enter
cld
(bad)
outs
adc
add
push
inc
icebp
or
inc
dec
cmp
mov
pop
ja
cwde
pop
xor
data16
cwde
pop
cs
inc
pop
inc
sub
repnz
push
fnsave
jne
xchg
or
movs
outs
test
cli
retf
cmp
fisttp
loop
pop
or
loopne
and
das
jo
adc
jecxz
sti
push
jl
mov
fidivr
es
in
mov
mov
inc
je
xor
aaa
sti
sahf
loope
cmp
test
les
gs
add
mov
inc
std
or
in
fstp
pop
sub
ja
(bad)
pop
and
jo
test
mov
out
(bad)
sub
sahf
jnp
in
into
xchg
rcr
das
scas
(bad)
mov
or
xor
xchg
mov
xor
test
push
or
imul
push
add
jle
test
pop
dec
push
out
scas
mov
xor
add
pop
sbb
lock
cmp
in
jne
shr
jge
(bad)
imul
daa
xchg
cdq
adc
mov
mov
mov
lahf
xor
stos
pop
movs
inc
test
lds
pop
shl
xlat
cdq
and
(bad)
in
fwait
sbb
sbb
dec
scas
inc
jmp
(bad)
fisttp
dec
and
loope
adc
adc
mov
xor
add
mov
or
sub
dec
cli
inc
fbstp
jb
sub
add
imul
ffreep
fadd
adc
and
jnp
int
dec
cmp
push
jle
push
xchg
or
dec
push
jne
jns
and
mov
xchg
push
jmp
sbb
movs
cmp
inc
shr
or
pop
outs
ret
jle
xor
movs
push
popa
leave
sub
mov
sub
push
push
imul
(bad)
ficomp
or
mov
inc
push
jp
sbb
mov
mov
cs
adc
cdq
mov
in
das
(bad)
out
shl
dec
inc
push
loop
push
jmp
push
adc
add
jp
xchg
sbb
add
pop
cld
or
mov
push
ret
fdivr
and
mov
test
jae
add
add
sbb
scas
into
iret
cmp
or
push
in
xchg
mov
or
cs
out
out
int3
(bad)
icebp
and
cmps
adc
mov
push
push
scas
test
leave
clc
mov
cmps
std
mov
pop
das
loope
es
inc
fidivr
popa
fld
icebp
push
ins
cmp
fs
push
addr16
and
push
xor
push
push
jge
mov
pop
ret
push
sbb
push
pop
aad
push
stos
push
mov
jo
xchg
cmp
das
pushf
jecxz
xchg
xchg
push
sahf
mov
es
jae
aas
sbb
fistp
fs
into
movs
jo
mov
add
or
adc
arpl
xor
in
add
jne
or
push
and
sub
pop
es
sub
jnp
loop
and
mov
rcr
loopne
in
mov
xor
jecxz
pop
call
dec
cli
inc
jp
pusha
imul
push
jmp
mov
aas
test
push
xor
icebp
leave
repnz
rol
dec
and
mov
mov
pop
mov
test
into
das
add
out
jmp
inc
jge
fldlg2
aas
jne
and
loopne
sti
mov
mov
out
adc
xchg
push
cdq
xchg
push
adc
and
out
cmps
xor
nop
adc
les
jmp
add
clc
cmps
jb
jnp
jne
dec
das
mov
fldcw
xor
xlat
push
jns
fldenv
and
mov
xor
pop
pop
wrmsr
fistp
jl
xchg
xor
add
scas
in
mov
xchg
std
jns
jg
mov
jmp
int3
pop
adc
cmp
push
mov
fnstenv
out
dec
popf
jnp
neg
ret
mov
jmp
sar
push
cli
jg
add
inc
pop
loop
imul
into
fwait
jp
xchg
repnz
pop
push
mov
dec
sbb
out
loopne
mov
(bad)
dec
cwde
aad
inc
jp
mov
mov
or
fldcw
cmp
in
adc
xchg
jbe
sub
pop
sti
inc
push
aam
adc
mov
dec
dec
or
mov
mov
bndstx
push
pushf
ret
mov
push
add
and
mov
scas
ja
xor
out
push
nop
mov
in
hlt
loopne
add
icebp
xlat
xchg
scas
cmc
push
rol
pop
sbb
div
ins
pop
or
or
inc
mov
and
xor
mov
mov
seta
pop
inc
dec
ja
rol
data16
xor
repz
sbb
mov
cmp
or
inc
fisttp
adc
push
pop
lock
and
pop
jne
xchg
lahf
jno
mov
mov
sub
lods
dec
push
shl
lods
adc
xchg
jl
cmp
clc
jnp
jg
lods
in
in
test
mov
cld
fwait
sub
mov
pop
mov
inc
cmc
and
add
adc
scas
or
inc
clc
mov
xchg
shr
push
inc
mov
jmp
mov
loopne
jns
mov
jbe
cmp
mov
mov
jp
retf
movs
inc
popa
test
shr
add
cmps
iret
outs
std
ds
fldenv
mov
mov
and
enter
xor
or
popf
out
out
aad
das
cmc
or
fcomp
cmp
mov
addr16
xor
loope
pop
sbb
cmps
stos
mov
mov
push
inc
push
(bad)
(bad)
jecxz
sub
nop
or
add
test
gs
jmp
jp
fild
inc
add
jl
adc
in
cmp
push
ret
das
rol
arpl
jnp
push
and
test
(bad)
ud0
pop
lds
test
out
les
aam
popf
fdiv
popa
mov
add
ret
pop
or
mov
push
dec
in
fs
cmp
sbb
or
and
push
sub
xor
xchg
adc
sti
scas
sbb
xor
repnz
pushf
sti
loopne
imul
bound
add
push
mov
xchg
inc
xor
lods
(bad)
cmp
gs
adc
jb
push
dec
xor
in
shl
cmp
sbb
or
xor
sbb
mov
xor
push
xchg
or
fld1
pop
dec
shl
pop
mov
loopne
jle
or
jg
jle
ins
xchg
xchg
scas
mov
jmp
loopne
or
in
mov
cmp
cmps
cmp
push
adc
mov
mov
dec
dec
adc
push
std
or
sub
cmp
fst
sbb
pop
bound
xor
jae
sar
adc
or
clc
add
mov
lahf
dec
cmp
and
mov
not
daa
les
adc
outs
sahf
or
stc
in
xchg
sub
pop
adc
movs
ins
iret
cmc
test
ficom
jp
js
aam
stc
push
and
sti
(bad)
lock
ret
stos
mov
je
into
push
sar
clc
imul
mov
movs
out
dec
les
push
(bad)
xor
ss
clc
mov
or
(bad)
bnd
xchg
in
xchg
jns
mov
out
stos
dec
rol
add
sbb
fild
or
loope
sub
sub
outs
(bad)
xor
in
mov
in
inc
and
jmp
repz
lods
(bad)
aad
jmp
cmp
lds
repnz
sbb
(bad)
bound
cmps
rol
leave
ja
push
bound
dec
and
imul
into
and
les
xchg
pop
push
sahf
jne
ror
xchg
jge
mov
pop
xchg
sub
jb
retf
add
add
imul
test
(bad)
(bad)
clc
fdiv
and
es
fwait
dec
ret
mov
out
sub
cmp
sbb
imul
mov
(bad)
and
push
add
push
and
imul
test
pusha
stos
test
inc
fwait
movs
inc
pop
cdq
push
mov
mov
fs
mov
aad
fld
fbstp
xchg
test
xchg
mov
into
stos
sub
arpl
lock
scas
xor
add
push
cmc
mov
das
sbb
jae
mov
pop
and
fcos
xor
pushf
dec
and
lea
mov
dec
pop
add
imul
dec
int
int
xchg
push
xchg
add
gs
xor
xchg
push
sbb
popa
inc
pop
into
jmp
mov
outs
and
add
dec
or
xchg
jl
mov
mov
rcr
pop
jmp
sbb
scas
push
lds
data16
dec
jmp
aas
stos
rol
jae
pop
inc
sbb
push
or
fcomp
mov
ss
daa
or
scas
out
push
lods
aad
in
bswap
adc
les
fstp
adc
cwde
loope
fidiv
pop
mov
or
mov
bound
pop
pop
xchg
jne
sahf
neg
adc
pop
pop
inc
dec
jg
sbb
imul
aam
push
pop
xor
mov
fs
and
imul
cmps
pop
fxch
cmp
shl
or
shl
std
in
jmp
fcmovbe
mov
jne
cdq
adc
fwait
and
pop
std
mov
push
cmps
(bad)
dec
les
das
mov
cmp
(bad)
in
lods
pop
sub
int3
mov
popa
mov
(bad)
jno
dec
sub
(bad)
jne
mov
xchg
xchg
jns
pop
fucomi
cmp
push
mov
test
sbb
or
add
sbb
retf
jmp
clc
cld
sub
sbb
push
and
cmp
outs
pop
pop
pop
addr16
call
(bad)
cwde
mov
sub
int
sub
les
add
cmp
scas
jns
cmc
test
dec
arpl
sti
add
es
inc
jle
imul
idiv
fmul
dec
shr
add
rcr
inc
out
pop
lea
fwait
sbb
outs
shr
int
jne
mov
mov
out
xor
pushf
mov
ret
mov
mov
jnp
mov
xor
jle
sbb
jmp
pop
or
mov
int3
and
and
fstp
dec
repz
aas
dec
push
icebp
pusha
(bad)
mov
or
in
retf
mov
mov
fld
jp
xlat
imul
jg
fcmovnb
int
adc
jg
loope
inc
enter
cmp
loopne
mov
dec
js
inc
fisubr
and
movs
or
(bad)
jb
mov
fsub
or
pop
mov
(bad)
push
addr16
arpl
pop
mov
loop
jle
xchg
mov
jp
dec
sbb
or
es
jbe
pop
cmp
and
jb
sub
and
jns
scas
pop
(bad)
xchg
cmp
sbb
pop
jne
sti
jne
shl
jne
fadd
pop
int3
out
lock
sbb
mov
lahf
pushf
push
jl
sub
or
and
sbb
fs
dec
sub
loop
jnp
bound
lods
popa
cwde
rol
shl
or
cld
retf
sahf
sub
std
scas
or
in
pop
mov
inc
add
push
mov
fst
out
pop
or
or
or
pop
sbb
rcr
outs
pusha
loope
clc
popf
or
push
dec
pop
jg
xor
(bad)
dec
cmc
inc
adc
xchg
inc
loop
loop
out
test
outs
push
aas
popf
outs
(bad)
pop
xchg
xor
jb
pop
pop
sbb
fwait
ja
and
adc
add
sbb
mov
jle
mul
out
add
and
sbb
adc
or
push
and
cdq
inc
into
xchg
sub
std
ret
mov
cmps
push
lods
inc
mov
pop
mov
test
ficomp
pusha
ja
cmp
int
mov
mov
not
sbb
pop
fs
in
sbb
(bad)
adc
scas
dec
pop
adc
scas
xlat
jg
and
stc
cmps
sar
xor
mov
fldcw
aaa
idiv
data16
outs
mov
mov
js
sub
or
retf
cmp
add
pop
jo
adc
sub
push
sub
pushf
jecxz
jbe
test
mov
fstp
xchg
sub
mov
(bad)
test
jb
mov
xchg
mov
ficomp
push
dec
xor
aas
xchg
cmp
adc
fld
ffree
scas
cmp
push
js
cdq
cli
inc
pop
push
cmp
jne
hlt
clc
movs
(bad)
jmp
and
in
int3
ds
jl
cmp
cmps
fdivp
jae
cmp
inc
sub
inc
add
adc
add
pop
lock
nop
push
stos
dec
mov
lea
popf
je
ins
fwait
mov
imul
pusha
xchg
mov
cmps
xlat
fmul
fldenv
call
out
mov
pop
test
aaa
push
add
call
icebp
adc
jle
jmp
jecxz
bnd
cdq
xchg
push
jae
xchg
loope
cmc
fmul
push
jb
test
lahf
cmc
jmp
pop
inc
dec
fld
(bad)
cmp
loope
pop
jns
sub
jo
mov
sbb
ror
gs
sar
scas
cdq
cmps
push
mov
sbb
push
ficom
movs
dec
les
inc
add
push
push
sub
sub
push
cmp
jmp
mov
jp
add
mov
ins
or
jle
add
cdq
add
mov
adc
je
ja
rcr
sti
cmp
movs
xchg
dec
daa
fsubp
(bad)
or
jmp
stos
test
lock
jmp
sub
push
add
adc
jns
jge
pop
xor
int3
stos
inc
lea
jnp
dec
inc
dec
add
mov
pop
popf
inc
shr
pop
and
call
pop
fadd
retf
test
sub
xchg
xor
cmp
add
fstp
add
sar
mov
or
sub
clc
ins
sbb
add
iret
add
getsec
dec
lahf
mov
aas
or
sbb
daa
stos
(bad)
pop
mov
mov
in
push
imul
into
daa
loop
xor
adc
mov
inc
mov
into
add
enter
(bad)
popa
scas
shl
in
adc
aam
mov
rcr
pop
fnstenv
pop
loope
push
cmp
fld
adc
fcomp
pop
cld
stos
pop
add
inc
aam
cmps
in
icebp
mov
mov
mov
lds
push
cmp
xor
jmp
xchg
test
mov
(bad)
inc
cs
or
mov
pop
js
retf
lahf
xor
sub
xlat
mov
call
and
repz
scas
ss
ins
in
pop
jno
pop
mov
add
mov
ja
push
or
sbb
and
mov
cmps
pushf
sbb
jmp
pushf
out
call
mov
inc
mov
(bad)
int3
mov
jl
cmp
mov
mov
scas
loop
xchg
adc
mov
pop
mov
and
add
mov
mov
arpl
mov
or
push
mov
bound
push
xchg
lea
add
lahf
mov
hlt
retf
adc
std
ins
ins
fistp
mov
fbstp
lock
(bad)
cli
jbe
lods
addr16
or
mov
outs
lahf
retf
gs
add
(bad)
imul
hlt
mov
fcom
xchg
stos
jb
and
or
sub
fiadd
cmp
cmp
jbe
rol
addr16
inc
sahf
inc
xor
xchg
lods
push
rol
jo
leave
and
pop
(bad)
repnz
aas
into
test
sti
loope
hlt
cmps
mov
or
frstor
push
dec
mov
jbe
jl
mov
adc
mov
ror
in
jb
nop
sti
(bad)
mov
jns
les
pop
dec
mov
stos
mov
shr
adc
dec
sub
lea
gs
jno
in
mov
sar
outs
ret
je
mov
jno
ja
repnz
cmp
imul
ret
fwait
jge
pop
movs
add
rcl
fistp
pop
rcl
popf
dec
rcl
lods
lds
add
test
mov
add
rcl
das
and
dec
lods
pop
mov
cmps
rol
or
xor
inc
xchg
push
dec
xchg
jo
pop
popa
jno
jo
sbb
popa
rcr
push
fs
sbb
(bad)
popa
xor
xor
rcr
xlat
mov
dec
popa
mov
in
adc
dec
xchg
push
popa
inc
aaa
add
(bad)
cld
or
in
push
mov
gs
jnp
mov
scas
inc
icebp
mov
inc
enter
xchg
cmps
fsubr
and
test
outs
push
movs
es
mov
into
pop
add
int3
add
inc
or
and
shl
and
adc
or
ds
pop
iret
clc
xor
or
mov
push
cmc
mov
pusha
hlt
retf
fldenv
sub
push
hlt
cli
outs
jge
push
jg
push
adc
stos
aad
add
out
cmps
cmc
popa
sbb
xchg
imul
in
push
and
(bad)
int3
in
mov
test
xchg
rol
xor
test
cmps
ror
inc
ret
mov
fwait
sub
add
mov
pushf
pop
mov
or
in
push
stos
in
rcl
add
call
scas
stos
add
(bad)
mov
or
(bad)
lods
dec
xor
push
adc
ss
ret
int
(bad)
sbb
add
lods
cld
jo
cmp
push
pop
imul
inc
push
pop
mov
hlt
sahf
xor
inc
pushf
sti
retf
mov
pop
push
and
xchg
iret
retf
push
lods
daa
mov
xchg
sar
jmp
ins
daa
mov
lods
adc
movs
add
popf
scas
mov
arpl
xchg
inc
aad
jbe
xlat
hlt
inc
adc
add
xor
test
fst
push
ja
push
sbb
out
mov
and
or
jmp
push
xchg
add
add
in
ds
jmp
xor
xchg
aam
(bad)
inc
and
repnz
cmps
ret
mov
clc
xchg
in
(bad)
and
sbb
add
scas
mov
outs
jge
xchg
je
pop
inc
add
push
int
and
mov
enter
mul
into
inc
sbb
clc
pusha
cmps
adc
adc
mov
lahf
and
jns
(bad)
test
and
or
push
add
(bad)
ficom
push
popa
jp
fsubr
cmps
retf
in
sahf
cwde
imul
mov
cmps
xlat
setge
push
ds
add
push
outs
mov
iret
adc
ret
out
nop
int
mov
inc
sub
push
ins
mov
pop
pop
sbb
or
push
movs
sub
loopne
cmc
loop
nop
mul
pop
in
bound
and
popa
ret
adc
mov
adc
repnz
mov
fsubr
mov
jge
or
cmp
mov
outs
sub
outs
pop
push
lock
int
mov
cmc
mov
out
rcl
push
pop
or
cmp
or
mov
(bad)
ins
out
add
or
adc
nop
imul
adc
xchg
inc
imul
jecxz
xor
jge
cmp
or
pop
loop
adc
push
mov
xchg
nop
cwde
push
xchg
sub
stos
push
jmp
shl
xchg
aad
pop
int
sbb
fcmovne
sbb
aad
movs
icebp
dec
fwait
(bad)
out
fidiv
and
mov
les
hlt
std
js
popf
jb
adc
jns
repnz
(bad)
dec
mov
cmp
scas
mov
shl
pop
(bad)
lock
retf
cmp
loop
iret
in
dec
xchg
mov
cmp
jo
jbe
pop
lds
retf
mov
scas
sbb
mov
dec
cdq
adc
movups
and
into
es
fcmovbe
jmp
cmps
ror
push
mov
mov
icebp
mov
call
out
shr
loopne
outs
mov
movs
or
out
cmp
sbb
daa
(bad)
lds
in
mov
add
push
ret
pop
xchg
cmp
out
jb
pop
adc
call
(bad)
stc
cmp
sub
nop
imul
push
pusha
cmps
adc
(bad)
jecxz
add
or
cmps
gs
adc
mov
and
ds
cmc
pop
push
es
cmp
push
xor
aas
pop
add
adc
sbb
sbb
int3
mov
call
shl
test
gs
sub
fistp
stos
jo
xor
movs
mov
jnp
add
fbld
xchg
xchg
push
inc
add
jmp
int3
jg
sub
add
push
xchg
imul
popf
mov
mov
or
xchg
mov
push
xor
in
mov
test
sbb
mov
cmp
mov
pslld
add
jmp
xchg
lods
imul
retf
adc
pop
repz
mov
sub
lods
add
mov
stos
cmp
fs
push
pop
nop
or
cmp
sahf
sbb
mov
je
pop
cwde
icebp
sub
xchg
leave
cmp
inc
adc
pop
xor
fwait
icebp
(bad)
fldenv
or
pusha
fiadd
sti
dec
bnd
mov
ret
inc
and
js
sbb
mov
xchg
cli
inc
pop
aad
in
pop
add
popf
push
das
or
sbb
sbb
imul
pop
ja
jp
jmp
cmp
iret
xlat
int3
xchg
cli
sub
inc
test
repnz
fnsave
push
mov
fdivr
gs
dec
sub
xor
icebp
lds
(bad)
imul
xchg
mov
fistp
inc
mov
xor
pushf
sbb
adc
in
xor
push
shr
or
mov
adc
mov
movs
sbb
and
loopne
sar
inc
cwde
loope
sbb
fbld
xchg
les
pop
jmp
popf
xchg
cld
loopne
jns
scas
and
jbe
push
or
fsubr
pop
mov
mov
and
jnp
push
mov
call
push
ret
rcl
aaa
ror
add
jmp
sub
gs
shl
dec
cmc
fdiv
add
std
fadd
mov
fwait
or
push
dec
shr
pop
stos
(bad)
jmp
mov
cmp
aaa
rcr
aas
cmp
repnz
mov
loopne
xor
xor
adc
pop
in
mov
pop
sar
sti
pop
push
gs
mov
jbe
mov
stos
repz
gs
loop
adc
xchg
imul
repz
daa
mov
mov
jno
adc
mov
pop
mov
mov
repnz
nop
sub
inc
sub
mov
jbe
inc
sub
mov
hlt
hlt
in
cmp
and
stos
dec
mov
lahf
icebp
mov
pusha
fwait
xor
dec
jmp
movs
ss
push
lahf
inc
inc
leave
fldcw
sbb
push
sub
jp
mov
pop
mov
stos
push
mov
(bad)
in
icebp
js
loopne
xlat
cmp
pushf
sti
movs
lock
and
aad
dec
hlt
mov
jp
fsubr
mov
xor
cmc
leave
pop
inc
jnp
fs
stc
popf
inc
inc
mov
xchg
lock
cmps
mov
aas
mov
das
push
sar
outs
sub
and
mov
cmp
scas
ret
leave
mov
xor
in
xor
push
pop
mov
xor
test
or
dec
(bad)
jmp
pop
xor
sub
dec
jmp
jne
xchg
fisttp
lods
movs
cmp
jecxz
mov
push
xchg
mov
jae
cli
add
nop
mov
sub
adc
retf
pop
adc
lock
or
stos
rol
and
test
loopne
xchg
adc
dec
rcr
scas
pop
dec
stos
mov
mov
ficomp
jne
mov
mov
out
cs
add
push
mov
data16
xor
out
mov
and
cmc
sbb
cmps
retf
in
mov
ss
mov
pop
fsubrp
inc
sbb
mov
stos
jae
jmp
inc
push
lods
cmp
or
cwde
push
pop
call
and
pop
pushf
fld
daa
pop
push
repz
ins
pop
shr
xor
(bad)
push
pushf
xchg
pop
leave
cdq
xchg
add
and
dec
inc
aam
adc
retf
ret
or
enter
fwait
loop
outs
sbb
cmc
cmp
stc
pop
rcr
(bad)
cwde
cmp
xor
cs
fisubr
mov
jne
xchg
(bad)
popf
sbb
mov
push
mov
(bad)
mov
mov
outs
dec
movs
cs
push
mov
cmp
adc
xchg
std
xchg
fnstenv
movs
push
imul
mov
or
adc
jno
push
mov
dec
das
sbb
push
sub
adc
xor
sbb
int3
add
push
jp
jo
xchg
xor
or
retf
push
add
inc
jo
mov
push
imul
push
inc
ja
clc
push
(bad)
and
add
sub
sbb
cmc
je
push
out
pop
nop
xchg
inc
fnstenv
(bad)
xchg
mov
outs
js
and
jg
iret
cmps
sub
test
daa
lds
push
fldenv
mov
push
inc
pop
jne
in
cmp
mov
mov
add
(bad)
setnp
rol
into
cmp
test
out
fwait
cmp
inc
nop
data16
sbb
lea
in
inc
(bad)
into
inc
rcr
jmp
mov
scas
dec
or
test
lock
mov
dec
out
adc
(bad)
loope
outs
push
test
mov
ds
xchg
jle
push
sub
add
loopne
shl
jb
outs
lods
adc
jp
(bad)
lock
cmp
enter
sbb
sbb
mov
retf
int3
ret
sbb
xchg
ins
ret
push
mov
mov
call
shl
fadd
mov
(bad)
push
repnz
or
stos
sbb
mov
add
in
call
xchg
pusha
movs
mov
cmp
jb
cli
(bad)
add
cmps
sti
pop
daa
int
add
std
aam
mov
imul
push
popa
inc
gs
sub
mov
jns
out
out
push
in
mov
(bad)
push
add
sub
stc
xor
loopne
or
loop
repnz
cmps
iret
popa
push
ds
hlt
xor
fnsave
mov
fild
jle
cmp
add
rol
cmc
xchg
pop
out
dec
xchg
rcl
pop
nop
jno
out
(bad)
mov
sar
sub
pop
inc
(bad)
push
sbb
mov
mov
sub
arpl
outs
imul
inc
mov
pop
and
mov
rol
fldenv
popa
xor
pushf
push
mov
aam
jbe
add
push
shl
mov
push
add
and
adc
inc
das
arpl
or
test
fdiv
sub
sahf
ror
pushf
mov
inc
popa
sub
xor
aad
jae
scas
or
and
outs
sar
cmps
pop
push
xchg
lods
jo
cmp
fistp
movs
(bad)
in
daa
cld
shl
imul
dec
xchg
(bad)
in
sub
rol
int
adc
es
and
test
aaa
outs
cmp
jmp
outs
test
ret
in
mov
test
mov
and
pop
cmp
jl
popa
dec
scas
(bad)
adc
clc
imul
repnz
inc
xor
xor
(bad)
pop
dec
out
dec
out
push
push
aas
push
stos
mov
inc
mov
lock
pop
pop
cmp
jmp
push
sti
or
jb
ins
test
rol
jle
jmp
iret
aas
adc
in
out
fadd
nop
inc
mov
movs
mul
imul
test
push
shl
xchg
cmp
test
cmp
mov
mov
(bad)
cmps
(bad)
(bad)
xor
jnp
mov
push
fwait
pop
mov
in
popa
cdq
mov
or
dec
and
and
movs
cdq
push
push
(bad)
lea
(bad)
scas
fst
mov
dec
test
mov
fbld
enter
xchg
call
fild
push
jp
xor
jmp
iret
cmc
mov
sbb
mov
and
clc
in
sub
call
or
adc
lods
cmc
adc
push
mov
std
mov
mov
dec
test
sar
dec
mov
movs
cmps
fcom
retf
ins
and
mov
arpl
jl
add
cdq
pop
fdiv
mov
jmp
sahf
out
test
adc
call
scas
pop
ja
shr
or
hlt
xchg
sub
sub
repnz
data16
lock
out
dec
pushf
xchg
xor
(bad)
add
sub
icebp
stos
xor
xor
call
aam
stc
add
loop
and
jmp
dec
pop
test
xlat
or
sbb
adc
shl
jo
aad
xor
jns
pop
inc
rcl
enter
push
adc
outs
or
cs
add
out
lods
xor
stos
xchg
into
hlt
push
out
push
lea
ror
cmp
arpl
int3
sbb
adc
test
jo
in
jae
push
mov
call
imul
fcmove
loopne
nop
das
xor
push
mov
xchg
test
cmp
push
inc
test
push
inc
pusha
out
or
(bad)
adc
daa
sbb
test
pop
add
mov
inc
cmps
jbe
xchg
aas
loop
icebp
je
push
repnz
test
cdq
mov
add
loope
sbb
fwait
in
(bad)
int3
push
push
fs
test
fldcw
loopne
jge
inc
or
int
push
sti
mov
add
dec
jne
xchg
sub
pop
popf
mov
aam
div
dec
push
fld
xor
leave
xor
into
pop
push
adc
into
(bad)
ror
cmp
and
and
mov
xor
test
inc
xchg
aaa
mov
add
and
outs
jmp
(bad)
pop
mov
loop
adc
fwait
jae
or
dec
into
and
(bad)
xchg
outs
or
pop
(bad)
adc
push
loop
mov
push
ins
xor
rol
std
xchg
or
add
sbb
jno
adc
sub
pop
fsubp
push
xchg
mov
jle
push
ds
out
stos
fimul
inc
cmps
jae
stc
into
sti
inc
pushf
inc
xchg
stos
xchg
imul
pusha
movs
xor
adc
and
loope
int3
jbe
sub
jnp
fs
cmp
ret
adc
or
clc
nop
out
add
xor
push
xchg
sbb
je
mov
scas
or
aam
mov
dec
in
into
mov
sub
(bad)
mov
nop
and
and
repnz
retf
cmp
es
and
mov
push
inc
rol
jp
test
pop
xlat
xchg
rcl
xchg
xchg
jge
call
pop
push
xchg
lea
adc
cmc
xor
cmp
jns
int
mov
jmp
stos
cli
pop
ja
mov
repz
xlat
mov
out
add
sub
add
fdivrp
xor
or
iret
pushf
adc
push
mov
sbb
mov
(bad)
js
sar
(bad)
stc
pop
(bad)
neg
sbb
je
imul
jne
inc
rcr
inc
sbb
adc
mov
mov
outs
jnp
adc
arpl
fsub
push
pop
push
aam
sbb
and
rcr
in
mov
(bad)
fisttp
pop
or
sub
sbb
mov
pop
xchg
jae
inc
shl
pop
test
or
ds
and
jge
nop
(bad)
loope
cmps
rcr
xor
pusha
test
mov
pop
adc
cwde
xchg
aas
movs
adc
dec
ror
in
outs
xor
push
aad
pushf
adc
hlt
mov
in
xchg
lock
or
add
aas
inc
lock
(bad)
shl
mov
mov
stos
leave
push
mov
hlt
ror
jae
test
xor
push
(bad)
pop
in
stos
jmp
xchg
es
xor
add
(bad)
lahf
xchg
push
sti
xchg
cmc
mov
pusha
mov
lea
adc
repnz
test
mov
and
or
and
jno
jmp
(bad)
xor
aas
dec
imul
rcr
or
inc
imul
scas
sub
fldenv
and
pop
leave
fs
inc
or
cmp
lahf
xchg
or
sahf
add
and
cmc
pop
add
es
inc
add
jecxz
jmp
loope
add
cli
pop
or
scas
dec
fidivr
push
in
pop
and
mov
cmps
xor
retf
xor
fiadd
iret
stos
adc
imul
retf
outs
mov
dec
fidivr
or
sti
cdq
jmp
retf
cmp
neg
(bad)
mov
adc
xchg
sbb
cmp
loop
ss
les
ja
aaa
cmp
pop
inc
cmp
(bad)
mov
dec
add
add
setg
bound
int
call
inc
mov
dec
cdq
cmp
call
dec
mov
xor
mov
ins
fndisi(8087
mov
ins
(bad)
loope
in
test
push
xchg
ins
inc
sbb
inc
push
sbb
xchg
jo
fisub
(bad)
fidiv
or
xchg
outs
cmp
repnz
out
stc
mov
push
lock
(bad)
ds
fs
xchg
xor
cwde
in
or
pop
cmp
jmp
dec
std
in
outs
add
imul
movs
mov
sar
xor
push
cmp
std
mov
sti
pop
jg
ja
dec
ficomp
dec
and
push
fwait
xchg
cmp
sbb
jns
lahf
loopne
adc
xor
retf
ror
loopne
stos
ja
adc
mov
pop
mov
jmp
pop
outs
je
cmp
adc
sbb
push
jae
retf
daa
or
test
jns
idiv
cwde
jmp
cmp
mov
shr
je
xchg
cwde
xlat
adc
xor
cmp
xchg
pop
fist
jle
outs
or
sti
mov
ja
mov
xchg
addr16
js
movs
aas
and
loope
and
jbe
adc
dec
or
shr
fistp
inc
lea
cmp
xchg
add
cmp
sbb
test
pop
sub
aaa
je
stc
mov
jne
pop
hlt
cmps
out
mov
jl
lock
adc
(bad)
cld
fs
cmp
adc
cdq
xchg
sbb
inc
lods
inc
scas
data16
inc
mov
xor
push
ss
or
xchg
mov
sub
dec
or
push
dec
call
inc
bound
pusha
or
rcl
in
add
loop
movs
sar
pop
jl
jno
ja
mov
mov
and
mov
pop
fwait
inc
and
stos
es
rol
inc
mov
mov
enter
cmp
mov
inc
(bad)
dec
adc
xor
fisttp
lods
adc
mov
xchg
enter
repz
pop
push
movs
inc
xchg
pop
mov
pusha
dec
adc
pusha
push
pop
ja
mov
nop
mov
and
ret
xchg
push
imul
add
sahf
imul
jp
xor
mov
pop
rcr
dec
mov
adc
iret
mov
stos
mov
clc
out
mov
fwait
leave
in
(bad)
xchg
daa
xchg
ret
xchg
cmp
jne
inc
jne
cmp
(bad)
sbb
add
inc
bound
push
std
jns
std
mov
ror
aaa
pop
sbb
test
shr
mov
leave
inc
retf
sti
call
in
cmp
in
sbb
push
push
nop
stos
and
popf
push
test
loope
(bad)
dec
mov
lods
xchg
cwde
stos
add
sti
or
cmp
xor
test
jge
cmps
inc
cmps
stos
mov
in
push
dec
clc
sub
xchg
nop
mov
inc
les
mov
mov
add
mov
ss
jl
gs
repnz
retf
lea
aam
fsubr
jne
mov
or
sbb
xchg
mov
mov
mov
jp
leave
mov
mov
jg
test
jg
gs
fcomp
ins
mov
test
xchg
adc
rcl
sub
pop
xor
xor
mul
movs
das
lock
(bad)
mov
out
retf
mov
cmp
mov
pusha
sbb
sub
mov
pop
jmp
loopne
inc
sbb
push
mov
pop
hlt
icebp
js
dec
xchg
js
mov
inc
sar
jne
(bad)
mov
ror
sub
sbb
sahf
(bad)
jns
push
pop
lods
in
(bad)
(bad)
sar
pop
idiv
xor
push
iret
or
or
pop
pop
push
xchg
mov
push
call
into
push
sub
push
push
fist
fadd
dec
mov
or
test
and
add
inc
(bad)
mov
sub
add
and
xchg
inc
stc
call
cld
pop
jle
add
xchg
adc
ins
int3
sub
dec
mov
cmp
add
out
mov
retf
mov
cmc
int
ror
inc
add
sub
xor
hlt
es
iret
mov
popa
adc
pop
inc
jno
or
sbb
ja
addr16
mov
sbb
mov
jns
jle
mov
jp
sbb
and
xor
fsubr
mov
stos
mov
dec
out
lahf
or
icebp
jmp
xchg
and
cmp
ds
ins
jno
psllw
repnz
jnp
jp
dec
and
pop
jno
movs
shl
sbb
and
das
push
mov
call
cwde
xor
xchg
hlt
jne
xor
mov
js
mov
test
push
and
xchg
or
add
jge
mov
and
jmp
sahf
fcmovbe
pop
icebp
jmp
add
clc
nop
dec
rcl
and
pop
ret
scas
test
mov
adc
xchg
xchg
push
je
in
dec
push
jne
fxch
and
cmp
push
fbld
cmps
test
mov
dec
cmp
imul
out
jge
movs
mov
mov
lock
sub
addr16
mov
popa
cmp
xor
push
push
lahf
push
inc
and
stc
mov
mov
add
(bad)
jmp
and
jo
xchg
add
inc
fwait
call
lock
arpl
pop
jg
in
and
cmp
jnp
pop
ret
add
test
add
xchg
retf
push
and
(bad)
push
add
jmp
or
sahf
and
outs
rol
lods
and
outs
mov
cwde
jle
out
cmp
or
out
adc
mov
add
mov
inc
sbb
sbb
mov
mov
stc
jb
cmp
repnz
int3
push
mov
arpl
call
push
adc
xor
jno
fidivr
ret
inc
js
dec
stos
retf
out
sub
inc
cmp
arpl
les
inc
test
lahf
inc
ja
sub
and
jl
adc
mov
test
add
aaa
mov
push
or
loope
mov
rcr
sbb
pop
pop
inc
scas
shr
fcom
ret
adc
sub
dec
mov
arpl
popa
stos
scas
xor
dec
mov
out
xchg
xor
xor
adc
push
outs
jae
dec
mov
push
or
add
inc
test
jnp
call
ja
call
and
jle
bound
or
or
add
in
push
les
cmps
fistp
mov
pop
fidivr
lds
mov
jp
movs
in
scas
ret
xor
gs
sub
js
test
pop
jo
les
sbb
inc
gs
push
mov
jge
pop
sub
mov
fs
out
sysenter
mov
mov
movs
mov
sbb
ret
pusha
cmp
adc
or
or
ret
xchg
pop
arpl
mov
aas
das
sbb
iret
leave
dec
sbb
pop
add
cmp
inc
xchg
rcl
sti
mov
jecxz
pop
or
retf
movs
mov
test
cmp
scas
cmp
mov
jecxz
xchg
pop
retf
cmp
mov
sti
icebp
add
enter
pop
cli
int
push
popf
addr16
pop
ret
mov
icebp
aas
mov
daa
clc
sub
push
inc
cmps
adc
sbb
push
ret
mov
pop
fs
jg
mov
push
fwait
shl
or
cmps
xchg
jbe
mov
mov
sahf
loop
sahf
mov
adc
movs
stos
sub
pop
jge
fstp
jmp
jmp
mov
mov
xchg
jno
call
add
jns
imul
inc
add
jmp
lahf
ret
retf
das
retf
loope
dec
jmp
icebp
popf
movs
and
jge
push
cmp
mov
ret
test
mov
push
add
movs
std
(bad)
adc
jns
retf
mov
add
mov
lds
imul
push
inc
jmp
lahf
lds
fcomi
sub
movs
add
jmp
jnp
int
xor
mov
mul
mov
out
cwde
mov
cmp
icebp
repz
cwde
mov
pop
ret
pusha
fsub
mov
adc
jbe
mov
lahf
pop
test
dec
inc
push
repnz
(bad)
out
inc
enter
loopne
jb
cmps
pop
lds
jmp
adc
test
sub
and
int
add
sub
jmp
pusha
cmp
nop
xor
(bad)
sar
pop
(bad)
mov
dec
fcmovnu
xchg
xor
mov
cmps
into
mov
or
adc
mov
jmp
rol
gs
add
dec
dec
rcl
or
sub
packuswb
lods
sbb
adc
ins
dec
mov
xor
sub
repnz
mov
lea
cli
jle
xor
ror
xchg
jle
lock
xlat
shr
or
cmp
pop
push
inc
dec
add
dec
push
stos
mov
fchs
xchg
repz
das
fnstcw
mov
arpl
push
push
cmps
enter
jg
retf
pop
or
mov
mov
mov
mov
es
aas
push
hlt
jecxz
test
mov
sbb
cmpxchg8b
ficom
pop
push
jno
mul
out
adc
sahf
xlat
dec
sar
popf
mov
push
int
mov
pop
(bad)
leave
xchg
mov
fstp
xlat
sar
sbb
mov
pop
into
ins
pop
xchg
cmc
arpl
leave
ins
sbb
sub
jno
jmp
fimul
sahf
mov
out
push
mov
mov
aas
cmps
add
push
push
pop
mov
cmp
pop
fadd
(bad)
js
das
mov
les
imul
jno
jecxz
loopne
retf
(bad)
pop
mov
jae
add
adc
adc
add
cmp
shl
lds
repnz
push
mov
mov
xchg
in
jnp
popa
sbb
retf
lea
push
sub
loopne
call
xchg
loop
loopne
nop
fldcw
out
dec
xchg
adc
xor
lods
clc
xchg
cli
mov
adc
das
mov
ss
pop
push
hlt
lock
sti
scas
pop
jecxz
test
pop
les
sbb
pop
retf
dec
std
mov
enter
sar
outs
(bad)
lock
xor
rcr
outs
sub
out
int3
scas
call
ret
imul
pop
jo
stos
mov
aas
sub
(bad)
jnp
or
scas
(bad)
mov
iret
sbb
mov
ror
add
sub
sbb
push
lock
or
enter
cmps
(bad)
add
mov
fstsw
or
ud0
stos
stos
mov
fnstcw
test
inc
dec
imul
adc
push
test
sub
call
mov
ret
mov
inc
cwde
mov
push
lock
repz
jl
std
jle
sti
mov
mov
mov
sbb
cmp
ror
test
cli
dec
retf
shl
cmp
xchg
pop
push
shl
pop
cmps
pop
call
cmp
or
leave
add
das
iret
pop
fsub
mov
xchg
fiadd
inc
ret
outs
outs
aad
fs
movs
icebp
add
scas
daa
jp
lahf
es
ficom
push
sub
adc
test
sbb
jecxz
pop
mov
or
ss
das
or
loopne
push
push
sub
adc
loopne
mov
adc
jmp
call
mov
or
cmc
or
dec
jb
mov
xor
add
(bad)
(bad)
mov
xchg
mov
ja
in
call
or
pop
xor
(bad)
leave
dec
daa
lods
or
xchg
adc
inc
rol
jae
xor
arpl
xor
fsubr
xchg
dec
pop
inc
mov
and
stos
pop
int
(bad)
inc
repnz
aam
daa
mov
pop
jnp
add
loope
pop
stos
aad
jo
sar
clc
mov
inc
pop
out
in
lods
test
retf
mov
rep
sahf
retf
imul
dec
jp
sbb
sbb
ins
fcomp
loop
xor
xor
xor
xor
das
cli
inc
retf
leave
mov
stos
inc
int3
aad
out
cld
mov
jb
loopne
add
mov
push
adc
rcr
cmc
(bad)
fiadd
test
jmp
ret
sub
in
popa
rol
cdq
mov
into
push
lock
push
dec
push
or
xchg
iret
cmp
push
mov
sahf
mov
or
mov
call
in
adc
inc
jg
out
pop
dec
je
or
aad
mov
push
mov
sahf
mov
sbb
push
xlat
pop
and
pop
dec
mov
(bad)
and
cmp
mov
movs
cmc
in
dec
aam
sbb
xchg
rcr
daa
adc
or
out
mov
test
lds
bound
inc
mov
out
imul
setl
sbb
pop
inc
dec
(bad)
das
push
div
lods
rcr
popa
test
inc
cmps
cmps
pop
cs
pop
sbb
add
shl
ja
mov
dec
mov
push
lods
xchg
enter
fsubr
das
into
retf
xchg
mov
pop
xchg
std
and
or
shr
xchg
mov
cmp
ds
and
xchg
ss
lods
cmp
loop
jp
mov
imul
xchg
test
ret
dec
add
sub
jno
xor
mov
mov
xor
push
xor
add
loopne
arpl
jmp
repnz
adc
xchg
adc
in
scas
and
xchg
popa
mov
cs
pop
jmp
(bad)
jne
das
cmp
mov
pop
sbb
cmp
mov
cmc
mov
mov
leave
and
es
call
mov
pushf
lods
rcr
mov
jmp
in
(bad)
cmp
xor
xchg
pop
pop
xchg
pusha
jle
fs
add
daa
mov
xlat
and
lea
sub
sub
aam
push
mov
std
fidivr
mov
popf
push
cld
cmps
aad
jae
cmps
js
inc
jbe
es
and
xchg
push
out
adc
mov
inc
fwait
sbb
xor
inc
mov
fisub
and
jbe
add
lods
cmp
in
fst
adc
and
sbb
mov
shl
dec
and
adc
push
stc
(bad)
sbb
jne
cmp
mov
dec
mov
or
xchg
lahf
test
retf
sub
cmp
pusha
popa
imul
test
jp
addr16
test
jg
xchg
and
cmps
mov
pop
dec
mov
mov
adc
push
leave
xchg
push
mov
jno
fidivr
pop
jno
xchg
jp
sbb
cmp
push
add
add
cmps
in
add
dec
out
ror
fst
or
xchg
repnz
ja
lea
dec
xchg
dec
mov
jp
stc
adc
jnp
pop
sti
js
sub
jl
outs
fdivr
mov
jmp
cmp
cmp
stc
into
xchg
test
std
(bad)
or
pusha
sbb
in
mov
jp
aas
(bad)
cmp
out
jns
shr
cmps
sub
es
cli
scas
std
inc
push
dec
out
shr
sbb
std
sbb
xor
jns
loop
cwde
dec
repz
fdiv
inc
movs
add
jge
xlat
mov
push
inc
repnz
nop
inc
jp
cmp
repz
pushf
mov
dec
lahf
outs
mov
sub
mov
repz
jg
hlt
jbe
add
and
enter
and
imul
dec
push
push
dec
fs
cwde
inc
cmps
inc
or
mov
or
sub
push
lds
mov
xor
sahf
cli
div
mov
xlat
jle
cld
rcr
(bad)
scas
sahf
and
loope
push
stc
iret
ret
mov
sub
xor
jbe
icebp
(bad)
sbb
push
push
jg
fist
loop
test
pop
out
int
inc
pop
add
push
jnp
sbb
mov
pop
retf
mov
arpl
mov
dec
je
retf
int
imul
cmps
push
and
adc
mov
sub
dec
push
out
or
sub
inc
repz
pop
das
pop
repz
into
pusha
arpl
mov
ror
imul
and
mov
into
inc
push
dec
or
push
call
or
daa
xor
pusha
pop
test
pop
aaa
add
retf
push
les
shr
jmp
mov
inc
loope
mov
and
rol
inc
icebp
jp
outs
xchg
adc
loope
and
sar
cld
je
cld
inc
push
fmul
xlat
shr
nop
mov
out
xchg
test
jo
sub
push
call
xchg
cmc
addr16
sub
push
aas
cmp
cmps
push
adc
cdq
jne
mov
push
retf
add
xchg
sahf
and
mov
sti
pcmpeqb
ds
jge
push
pop
nop
dec
and
mov
push
out
sbb
xchg
popa
xlat
mov
xchg
(bad)
ins
pop
add
stc
and
inc
and
fwait
sbb
mov
push
or
add
cmc
icebp
or
cmp
aam
sahf
mov
add
and
es
arpl
pusha
ja
inc
fnstsw
call
pop
je
xlat
push
sar
(bad)
pop
imul
outs
sbb
xor
test
and
cmp
mov
xchg
fst
push
pop
mov
mov
jnp
or
jae
and
jbe
fidivr
fbld
xchg
jmp
inc
cmp
jbe
test
mov
sbb
dec
mov
sti
xchg
xchg
xor
mov
sub
jnp
push
shl
retf
mov
cmp
adc
push
sbb
and
mov
push
dec
cdq
inc
fsubr
movs
stos
mov
lock
aam
ss
adc
push
(bad)
mov
aas
xor
sbb
mov
jbe
mov
jmp
ret
xchg
sub
les
jne
out
mov
inc
add
ss
sar
imul
hlt
shl
or
adc
mov
add
retf
cmp
enter
mov
cmp
pop
jl
and
ins
retf
mov
clc
(bad)
rol
movs
ror
cmc
cdq
xchg
inc
out
lahf
mov
inc
pop
in
cmp
repz
in
stos
test
adc
add
jmp
shr
hlt
pop
std
popf
addr16
jae
xchg
repnz
adc
es
mov
fcomp
loope
rcr
xor
and
outs
pop
scas
xchg
(bad)
popa
xchg
call
int3
mov
mov
jp
xchg
sbb
inc
pop
imul
xchg
cld
xor
mov
rol
adc
rcl
inc
jmp
pop
jb
mov
mov
pop
pop
out
lods
ror
les
aas
fldcw
xor
retf
lea
cmp
in
jmp
dec
mov
xchg
mov
dec
inc
ja
mov
fadd
sbb
add
sub
pop
add
mov
ret
dec
mov
push
lods
repnz
sahf
jmp
or
push
cli
adc
outs
sti
sub
pop
jmp
lock
fdiv
cmp
lea
add
data16
mov
gs
push
push
adc
jne
loope
scas
sub
cmp
add
inc
cmp
inc
in
(bad)
imul
jb
jle
mov
or
(bad)
mov
push
adc
xchg
push
mov
sbb
stos
pop
in
es
mov
jno
mov
mov
or
jecxz
mov
xchg
pop
retf
and
pop
mov
loope
out
xchg
push
dec
cli
imul
push
sub
mov
xor
leave
xchg
loopne
ins
inc
call
cmp
loop
or
retf
imul
xor
out
cmp
out
(bad)
stc
fisub
mov
sub
xor
ret
jns
int
xor
clc
xor
add
jbe
mov
movs
adc
add
sbb
test
sub
(bad)
inc
cli
jecxz
dec
lahf
jg
ja
add
fdiv
adc
ret
leave
mov
outs
pop
lods
sub
sbb
test
rcl
aaa
outs
sbb
jp
ror
test
gs
(bad)
mov
jb
dec
mov
xor
cmp
hlt
iret
dec
loopne
test
repnz
or
jle
xor
cmp
xor
add
dec
mov
cld
pop
imul
pop
mov
repnz
push
test
mov
xor
cmp
mov
sub
mov
call
push
cld
push
retf
outs
jmp
cmp
addr16
inc
and
cli
sbb
sbb
jo
xchg
xor
mov
pop
mov
lock
imul
dec
dec
or
je
push
dec
retf
fld
cmp
movs
pusha
pop
dec
lock
sub
cmp
das
lods
cmps
int
mov
jne
repnz
cld
pop
xor
and
jmp
ror
sub
dec
mov
fidivr
mov
cmp
cmp
movs
mov
jns
scas
outs
xchg
push
xor
lock
lods
inc
sub
mov
jb
lea
mov
cwde
fs
out
lahf
inc
pop
in
cs
mov
and
out
ret
or
lock
xlat
repz
xchg
cmps
mov
cmc
scas
loopne
call
and
cmp
aas
out
clc
add
into
dec
(bad)
xor
or
mov
add
lods
inc
int
js
leave
mov
out
fisubr
mov
(bad)
pop
addr16
add
ja
adc
test
test
adc
mov
inc
lock
cs
cmp
sub
xor
sub
inc
pop
es
or
or
push
pop
js
or
ja
fadd
dec
mov
mov
out
(bad)
js
lods
jae
adc
ins
mov
daa
imul
repnz
jg
dec
call
mov
and
test
fnsave
mov
adc
popa
jl
jnp
stos
jbe
enter
push
je
aaa
jg
or
sahf
add
or
mov
lock
loope
in
data16
adc
cmp
retf
push
adc
mov
sub
mov
mov
mov
sbb
sub
aaa
frstor
movs
ins
(bad)
ror
mov
xchg
lahf
mov
lods
popa
repz
adc
std
lds
loop
popf
mov
(bad)
jbe
xor
lods
xor
xor
outs
dec
xchg
fnstcw
xor
inc
add
icebp
jmp
aaa
pusha
aas
cld
adc
aaa
es
mov
xlat
outs
aas
ja
inc
mov
sbb
sbb
cld
mov
shl
push
pushf
sbb
retf
jl
cmp
mov
push
mov
gs
ror
jb
sbb
aaa
test
ret
addr16
lea
push
xor
mov
loopne
dec
out
ret
ror
addr16
scas
jmp
in
loop
or
icebp
mov
jle
dec
popf
pop
sub
cmps
or
xor
mov
jmp
fstp
xchg
inc
std
ficomp
fcomp
sub
adc
(bad)
inc
stos
movs
xchg
add
rol
dec
mov
int
fidiv
mov
or
imul
repz
add
jl
aad
data16
test
test
sahf
cmc
xchg
pop
movs
lds
jmp
imul
push
fcom
mov
loop
ret
xchg
pop
mov
jl
cdq
push
(bad)
add
cmp
adc
call
mov
mul
and
lock
cmp
jmp
clc
xchg
mov
xchg
out
mov
movs
or
dec
test
xor
sbb
nop
add
and
and
pop
pop
pop
xor
in
add
in
(bad)
pop
cmp
inc
sbb
xchg
cli
out
cmp
cdq
pushf
adc
cmps
dec
and
push
retf
add
xlat
mov
push
dec
inc
out
mov
loope
or
and
mov
xlat
mov
xchg
mov
pushf
stc
and
(bad)
imul
mov
mov
mov
adc
jl
data16
adc
js
imul
pop
ins
(bad)
xor
dec
dec
repz
mov
popf
add
lahf
mov
inc
add
cmp
inc
imul
ret
sbb
jne
loope
ror
or
jmp
xchg
test
dec
push
mov
shr
and
adc
mov
push
cmp
mov
and
xchg
fbld
adc
xchg
gs
jl
jns
ds
clc
(bad)
pushf
hlt
dec
lock
pop
in
push
call
jbe
xor
xchg
inc
fucomi
jne
pushf
bound
aad
in
cmps
ins
lods
mov
into
dec
int
popf
push
jo
sbb
xchg
movs
out
and
icebp
jb
push
or
mov
aam
ror
in
enter
push
arpl
movs
and
sub
call
dec
lods
and
test
cmp
aam
ss
cmc
dec
sbb
js
aad
push
jbe
pop
mov
iret
jmp
mov
inc
xchg
jecxz
(bad)
fs
lods
and
pop
add
call
xor
dec
jp
jle
daa
xchg
jge
ins
loop
call
jne
add
call
out
not
jp
add
nop
mov
cdq
mov
mov
pop
out
cmp
adc
adc
cmp
or
dec
lods
mov
inc
lock
outs
sbb
bound
loopne
cwde
je
daa
jbe
mov
xchg
xchg
or
aaa
and
dec
call
pop
movs
stos
dec
inc
aam
and
popa
mov
inc
loopne
add
mov
popf
lds
dec
imul
mov
and
mov
cmps
push
sub
add
out
pop
jb
jmp
mov
jmp
push
dec
xor
aas
aas
push
mov
cdq
xchg
pop
sub
shl
inc
or
fcomp
jno
sub
or
fmul
retf
stos
mov
fst
mov
jbe
es
sbb
cmp
aad
sbb
jns
or
(bad)
xchg
adc
cmp
test
icebp
lods
lahf
mov
rcr
and
fst
loopne
shl
xchg
mov
mov
je
aam
xchg
aaa
mov
(bad)
out
les
out
push
and
lea
std
(bad)
neg
pop
and
add
pop
out
gs
aaa
call
and
xor
pop
xchg
sbb
xchg
mov
bound
bound
sti
mov
cmp
dec
jg
mov
mov
fs
push
jg
inc
fiadd
mov
push
dec
inc
jmp
jne
ins
addr16
jns
out
into
jb
inc
out
jl
mov
stos
mov
aad
inc
and
xor
jmp
dec
movs
xor
or
push
push
scas
inc
adc
es
jne
ja
lahf
jb
add
leave
inc
cmp
fld
movs
xor
xchg
inc
or
mov
mov
call
push
and
push
mov
jne
cdq
test
jno
mov
or
sub
adc
repz
outs
cmp
or
popa
stos
push
outs
jb
adc
sbb
leave
fldenv
xchg
and
push
fsub
stos
mov
sti
push
stc
mov
retf
mov
test
in
pop
leave
sbb
mov
fadd
bound
(bad)
push
mov
frstor
jecxz
push
stos
mov
push
push
mov
sbb
test
ret
out
je
aas
jne
ret
stos
fcom
mov
adc
add
xchg
ins
pop
in
shl
xor
paddb
or
inc
jne
je
cs
enter
(bad)
je
mov
rol
xlat
(bad)
cmc
sbb
les
and
imul
push
pop
ret
gs
sub
xor
sub
sub
jp
icebp
cld
cli
call
das
clc
into
push
ja
push
aaa
jle
retf
xlat
mov
out
adc
cmp
paddsw
loopne
test
repnz
popa
ret
lods
mov
mov
test
mov
sbb
imul
jmp
pop
jmp
mov
call
pop
or
repz
aam
mov
mov
mov
xor
cmps
adc
jmp
popf
xor
xchg
int
jmp
xchg
jo
test
mov
imul
cmps
ja
sbb
lods
mov
push
hlt
push
sti
lods
dec
pusha
and
pop
fs
sbb
jnp
imul
fs
ja
rcr
and
pop
or
jmp
jmp
test
xor
fisubr
je
jle
or
add
enter
ins
sar
pop
mov
jmp
mov
popf
out
or
push
retf
xchg
je
push
addr16
jp
sbb
inc
(bad)
aam
lds
retf
pop
pop
jecxz
sub
(bad)
sub
sbb
inc
shr
mov
lods
sbb
xchg
adc
sub
pop
mov
jae
mov
rol
jl
mov
xchg
sbb
arpl
xchg
les
int3
mov
or
scas
leave
cs
imul
pop
test
jno
les
pushf
cmp
sub
jno
push
and
add
int
das
or
or
lea
and
fidivr
int
and
jge
fnsave
aad
fsubp
xchg
pop
lods
frstor
icebp
pop
mov
es
inc
and
lock
xchg
shl
add
(bad)
mov
pushf
add
push
xchg
in
push
or
fstp
or
sub
mov
stc
je
sbb
out
xor
cmp
fstp
sbb
sub
jmp
fisttp
dec
jo
(bad)
in
pop
or
test
push
or
sar
dec
ja
inc
imul
mov
leave
and
dec
outs
xchg
xchg
pop
inc
mov
inc
xor
pop
adc
fidivr
outs
outs
out
add
nop
xlat
and
ds
cli
(bad)
in
and
rol
in
popa
pop
add
cwde
mov
push
sahf
iret
fnstenv
cmp
push
repz
arpl
dec
xchg
out
ja
sub
lds
xor
ss
adc
inc
push
inc
inc
or
push
mov
sub
or
pop
loopne
mov
or
(bad)
mov
add
mov
pop
xchg
aaa
mov
ror
mov
fcom
popf
push
fcmovne
dec
cdq
or
mov
fild
test
sub
adc
iret
mov
add
dec
cwde
mov
jae
cmp
mov
out
rcr
aas
cmps
pop
movs
mov
test
sbb
pop
ins
(bad)
(bad)
(bad)
fiadd
inc
call
pop
push
mov
mov
test
cmp
icebp
in
inc
ror
pop
jb
ret
out
xchg
ret
push
adc
mov
push
lods
mov
int
push
lahf
sub
and
inc
pop
cmp
call
repnz
lahf
test
sbb
scas
mov
jno
pop
retf
jp
inc
sbb
sbb
sbb
(bad)
out
sbb
mov
outs
test
xchg
pmulhw
jbe
push
lea
sahf
mov
mov
xor
fild
xchg
sbb
push
scas
pop
inc
mov
mov
gs
out
pop
call
jmp
mov
xor
and
fwait
push
ret
mov
or
aaa
or
stc
add
mov
pusha
xchg
add
add
sahf
cmc
aad
mov
inc
stc
pushf
pushf
ja
cmps
test
out
jecxz
or
sbb
cwde
add
(bad)
dec
or
int3
sar
add
movs
in
sub
cmp
adc
sti
mov
xchg
adc
js
add
retf
cmp
add
mov
adc
inc
inc
lods
mov
(bad)
imul
xor
jge
mov
sbb
push
mov
(bad)
fldenv
cmp
sub
mov
stos
test
in
aad
repnz
vpmuludq
mov
stos
repnz
cmps
ret
jae
lods
test
pop
add
ret
in
aas
jg
mov
jmp
shl
test
pop
push
mov
adc
lock
loope
jl
clc
enter
sbb
pop
jg
aaa
xlat
data16
iret
push
outs
pop
in
push
sub
push
ror
je
cwde
clc
inc
outs
mov
cwde
outs
popa
scas
(bad)
ds
pop
adc
cmp
loop
sbb
cmp
add
mov
stos
jge
ins
jbe
dec
mov
sahf
inc
dec
xor
and
dec
mov
mov
dec
mov
add
arpl
loopne
and
push
add
add
pop
dec
adc
(bad)
xor
cwde
cmp
daa
rol
mov
pop
jmp
cld
or
jno
dec
fwait
(bad)
dec
rcl
mov
(bad)
fiadd
into
jbe
mov
std
or
nop
out
fucomp
daa
xor
retf
push
aaa
inc
and
cmc
dec
scas
inc
fnstsw
xchg
cli
cmps
jmp
dec
shl
mov
pop
cmp
fcomip
xchg
aas
adc
or
fwait
mov
sbb
in
sub
and
lds
fldenv
mov
loopne
jle
cmp
iret
dec
scas
inc
pop
sti
mov
mov
sbb
cmp
mov
fbstp
jp
cmp
adc
into
or
addr16
call
pop
sub
sbb
mov
or
or
jg
out
rcr
jecxz
int
jge
aam
dec
inc
call
fisubr
call
ins
mov
sbb
mov
(bad)
out
mov
mov
push
in
loopne
lds
xchg
sbb
int
jmp
faddp
push
movs
push
mov
mov
fistp
xor
mov
in
sar
iret
pop
shr
add
jne
push
rcl
fstp
mov
pop
shl
mov
outs
inc
leave
std
jbe
lock
fucomi
scas
xor
leave
ds
add
out
repz
cdq
out
je
xchg
push
imul
dec
and
pop
push
inc
mov
pushf
cli
pop
pusha
mov
fwait
mov
cmps
or
mov
push
out
mov
adc
mov
(bad)
fistp
jle
cwde
jmp
inc
cmp
xor
int3
hlt
gs
fwait
je
mov
mov
mov
adc
(bad)
fxch
dec
and
sub
push
xor
fld
in
mov
int3
mov
xor
xchg
fadd
imul
mov
imul
ss
push
into
push
lods
dec
ja
jnp
ror
push
clc
cmps
lods
ret
stc
mov
mov
les
outs
ffreep
retf
xchg
in
xchg
in
pushf
lea
add
cmp
sahf
xor
xchg
xor
push
jo
out
mov
or
sub
(bad)
or
ret
pushf
fistp
in
sub
cmp
sub
aad
xor
sbb
xor
(bad)
sub
in
xor
fldcw
jle
jmp
gs
(bad)
sar
jns
sar
pop
cmp
push
jmp
iret
cmp
dec
pop
jmp
hlt
aaa
test
jnp
sub
xor
dec
mov
fimul
mov
fistp
std
adc
dec
and
jnp
ins
dec
call
fwait
ret
mov
out
ret
xor
sub
cmps
cld
dec
into
sbb
jge
cwde
or
cmc
add
fisubr
test
movs
je
dec
cmp
lods
test
sub
mov
enter
pushf
sub
dec
xor
cmp
pop
jbe
add
lods
ret
repz
or
mov
pop
in
shl
scas
sub
test
sub
sar
mov
idiv
pop
dec
adc
aam
(bad)
mov
inc
sub
fnstcw
pop
xor
mov
jnp
call
and
cli
dec
mov
inc
sar
in
dec
popa
mov
cmp
cmp
test
cwde
(bad)
cwde
adc
test
cmp
and
rcl
or
xchg
imul
test
inc
test
test
pusha
dec
cmp
add
aas
add
dec
mov
int3
sbb
rol
ret
pop
sbb
lea
xor
cmp
dec
mov
das
pushf
out
jl
add
shr
mov
pop
jno
or
enter
pop
or
test
into
call
inc
cmp
cmp
adc
call
gs
out
inc
or
ficom
mov
out
imul
cs
jbe
lods
add
push
sub
cmp
sti
xor
lods
jo
push
leave
pop
sbb
xor
call
mov
(bad)
sbb
lds
adc
sbb
pop
push
movs
dec
cmp
mov
push
shr
adc
ins
scas
mov
sbb
fs
cmps
loopne
pop
add
jmp
jno
ret
xor
cdq
stos
call
out
jmp
add
in
xor
scas
add
or
adc
lds
push
iret
cld
sub
jl
loopne
ds
pop
cs
jg
imul
lock
(bad)
xchg
dec
adc
repz
adc
stos
sub
fnstcw
dec
neg
cmps
dec
cdq
mov
cmc
fisubr
int3
or
sahf
dec
lods
adc
mov
xchg
rcl
cmc
shr
jae
fcomp
mov
or
push
mov
sub
xchg
sub
(bad)
mov
or
jno
movs
pop
jmp
(bad)
int
pop
retf
xor
pop
push
test
aaa
inc
and
rcl
dec
lds
dec
icebp
mov
pop
iret
or
push
stc
shl
add
in
clc
inc
pushf
push
nop
adc
arpl
scas
or
out
pop
push
scas
out
or
js
fisttp
loopne
ret
movs
xchg
movs
lea
mul
les
and
ja
xlat
sti
push
ins
mov
push
pop
cs
mov
retf
cmp
jp
xchg
push
movs
pusha
gs
call
outs
xor
test
mul
xchg
hlt
xchg
mov
cli
mov
fwait
xchg
pushf
lds
cmp
fld
lods
clc
sbb
loopne
xor
mov
aas
and
scas
sbb
dec
xchg
xchg
add
adc
sub
std
cli
xchg
fwait
repz
dec
add
(bad)
fistp
test
sub
lods
test
mov
enter
push
(bad)
movs
jbe
mov
push
cmp
mov
test
mov
mov
push
xor
fs
and
dec
mov
daa
ja
xchg
pop
xchg
sbb
mov
pop
sbb
mov
pop
sbb
or
cmp
rcl
ret
mov
mov
std
pop
iret
rol
sub
iret
adc
sub
sbb
gs
mov
aaa
xlat
call
cmc
out
and
fimul
push
mov
setnp
pop
mov
arpl
jmp
mov
or
ins
and
adc
xchg
mov
shl
sub
dec
test
jo
mov
xchg
fcom
(bad)
jl
in
call
aas
into
ror
jmp
das
fwait
lea
jp
lods
lahf
and
js
or
aad
daa
inc
jbe
mov
or
mov
xor
add
sub
push
mov
jmp
test
adc
popa
pusha
repz
(bad)
stos
mov
int3
enter
es
fwait
dec
mov
loopne
fisub
xchg
sar
cmp
cmp
je
out
call
fimul
sbb
and
and
(bad)
repnz
daa
jns
ret
jae
jl
add
pop
sub
repz
sub
call
int3
pop
push
fsub
push
cmp
jge
mov
pop
popa
popa
out
movs
adc
test
or
test
add
int3
adc
fs
inc
adc
mov
sbb
xchg
cmp
cld
ins
vpsubusb
sub
mov
and
in
jne
or
and
push
shr
int3
fimul
repnz
sub
pop
or
fsub
in
ret
adc
fstp
mov
and
cs
push
imul
dec
jno
aad
retf
sbb
mov
pusha
pop
cs
mov
adc
stc
push
sub
inc
test
cmps
mov
pop
leave
push
fimul
or
pop
data16
movd
loop
jecxz
push
xor
mov
push
mov
in
push
dec
or
adc
push
shr
popf
and
add
or
ds
(bad)
jne
xor
test
sahf
int
in
mov
push
pop
xchg
xchg
ffree
(bad)
pop
int
push
or
pop
push
mov
push
jg
xor
ret
(bad)
cmp
std
push
dec
idiv
data16
aaa
mov
das
mov
xor
sbb
out
or
(bad)
js
vmovmskps
jle
add
dec
je
fsub
jecxz
popf
fadd
(bad)
jg
cli
push
icebp
out
call
(bad)
ja
push
push
jns
les
fdiv
push
inc
mov
jg
icebp
push
je
neg
cld
ins
mov
pop
lock
xchg
ds
stc
sub
xchg
je
jge
sbb
test
lahf
sbb
jl
aas
xchg
in
pop
jmp
int3
daa
(bad)
imul
arpl
pop
mov
inc
mov
jb
sbb
ins
sub
jl
sahf
adc
dec
jb
xchg
push
(bad)
test
mov
dec
repnz
pop
xchg
mov
test
shl
sub
icebp
js
daa
loopne
cmp
sbb
nop
mov
test
xchg
xchg
mov
mov
cli
mov
(bad)
xchg
mov
das
fbld
(bad)
sub
repz
imul
jb
add
cs
imul
mov
jle
mov
shl
fadd
cmp
data16
dec
std
das
lods
fs
sub
cmp
mov
call
mov
sub
xchg
in
aaa
fwait
cmps
mov
and
in
push
adc
hlt
push
nop
sub
retf
cmc
xchg
mov
pusha
movs
push
add
push
push
scas
test
(bad)
jmp
pop
xor
xchg
dec
sbb
cmps
loope
nop
push
and
cmc
test
fldenv
dec
sbb
retf
loope
jg
cmps
ret
mov
mov
dec
xorps
ins
dec
xchg
iret
mov
inc
aas
cmp
in
cmc
fisubr
dec
(bad)
frstor
dec
imul
rep
aas
xor
sub
xor
add
aam
pop
and
out
add
mov
cmps
mov
call
call
mov
mov
mov
mov
add
(bad)
mov
and
push
movs
cs
jg
or
and
xchg
(bad)
dec
das
int3
cmp
mov
xchg
xchg
aas
mov
std
cmps
push
mov
loope
or
fmul
icebp
inc
retf
pop
mov
dec
pop
(bad)
jbe
and
push
adc
or
(bad)
call
jno
cdq
lock
xchg
sar
in
sbb
aas
dec
sti
ja
movs
test
sub
add
mov
sub
scas
fdiv
adc
outs
push
mov
mov
or
stc
repnz
jmp
mov
add
xchg
pop
test
xchg
sbb
dec
dec
clc
leave
mov
es
ficom
mov
les
inc
or
cwde
pop
retf
jecxz
or
mov
dec
push
mov
jl
mov
mov
mov
xor
in
(bad)
mov
xchg
and
and
jp
std
xor
icebp
popf
or
pop
push
jb
dec
add
data16
aas
mov
inc
stos
ret
pop
sub
dec
xor
or
stc
sbb
test
ins
pop
shl
jbe
jne
je
rcr
fwait
cmps
or
mov
(bad)
mov
std
ss
sbb
adc
retf
iret
mov
sti
jb
call
addr16
sbb
(bad)
test
mov
stc
cwde
cmp
add
int
sub
call
adc
dec
or
mov
push
cmp
pop
out
and
fist
ror
jns
inc
mov
sub
sbb
jbe
mov
sti
push
mov
js
test
push
mov
add
jmp
pop
add
cld
jmp
xor
fst
cwde
ror
int3
mov
fnstsw
cmp
nop
add
push
add
fistp
repz
fwait
inc
adc
(bad)
int3
mov
or
cmp
outs
dec
xor
dec
cld
add
lea
imul
pop
ds
xor
adc
mov
shr
int
dec
push
and
or
test
mov
add
into
in
scas
xchg
retf
and
and
mov
push
push
ss
loop
rcr
mov
pop
daa
inc
dec
fcomp
in
ficomp
cmp
rcl
and
mov
inc
cmp
add
jae
mov
cld
out
(bad)
jo
mov
out
mov
cmp
data16
add
push
pop
sbb
fidiv
push
mov
pop
jno
inc
dec
mov
sar
rol
movs
sar
inc
and
inc
pop
int
sbb
pushf
or
cmp
scas
xor
jmp
sub
pop
bound
xor
outs
scas
movs
test
dec
(bad)
or
xor
(bad)
hlt
mov
sbb
jns
test
xchg
in
and
lock
pop
pop
dec
(bad)
cmp
and
dec
lock
pop
jge
test
cdq
out
dec
sub
stc
cmp
pusha
inc
or
and
(bad)
jecxz
push
fs
sbb
jns
add
mov
cmovs
jnp
das
mov
pop
(bad)
(bad)
iret
sar
jo
int3
jb
adc
and
push
mov
outs
ins
(bad)
js
je
inc
adc
or
lahf
adc
dec
or
aam
adc
inc
mov
ins
xlat
enter
add
or
pop
add
aad
adc
inc
add
fidivr
int3
jne
or
or
pop
call
cli
jg
int3
(bad)
jbe
out
and
in
out
(bad)
js
mov
jne
clc
repz
in
pop
div
fst
push
jae
ret
cwde
cmp
rol
ja
or
jns
out
xor
(bad)
xor
mov
jge
pusha
cmp
push
mov
mov
lods
call
dec
fcomp
mov
retf
push
add
rep
cwde
in
add
mov
add
mov
arpl
cmps
jae
gs
clc
pop
leave
push
mov
fild
mov
cmp
imul
shr
cmp
aam
or
in
adc
push
xchg
(bad)
ror
cmp
cmps
jb
aad
or
or
add
imul
imul
jb
sbb
push
test
imul
mov
js
mov
jae
popf
add
inc
add
js
sti
(bad)
lds
mov
out
test
jp
int
mov
sbb
sbb
scas
and
mov
int
gs
imul
aaa
xchg
data16
adc
(bad)
out
pop
scas
cld
in
dec
mov
pop
push
lock
xor
fsub
iret
outs
or
jl
jbe
xor
cli
or
mov
fild
retf
sti
jecxz
push
sub
xchg
mov
neg
fidivr
aam
in
aas
ds
add
cs
mov
dec
or
pinsrw
dec
push
adc
shr
cld
or
or
push
hlt
lods
movs
scas
aas
xor
sub
mov
mov
xlat
or
sub
sahf
xchg
inc
jnp
xchg
push
add
push
sahf
icebp
or
push
fsub
cmp
loop
dec
jbe
push
cwde
in
pop
pop
jno
scas
push
ror
cld
mov
and
jl
jge
sbb
ds
ins
add
dec
add
xor
call
mov
inc
fnstsw
jb
int
xor
xlat
inc
xchg
sahf
enter
inc
loope
retf
rcr
jge
outs
repnz
rol
mov
mov
cmp
(bad)
sti
jecxz
xchg
jo
iret
out
sbb
pop
repz
push
inc
add
xor
xchg
rcr
sbb
mov
pop
sbb
mov
push
jbe
ret
cmp
into
sbb
dec
mov
jle
adc
stos
mov
in
mov
cwde
xchg
es
push
scas
mov
pop
mov
stc
inc
addr16
jnp
retf
add
mov
rcl
int3
adc
(bad)
xchg
dec
jl
std
sbb
(bad)
ror
sbb
dec
xchg
imul
pop
clc
push
jl
loop
inc
adc
call
nop
sbb
inc
and
shr
dec
xchg
imul
mov
ret
sahf
pop
and
fsubr
lods
out
cwde
ret
pop
fnsave
push
or
frstor
and
mov
inc
mov
inc
enter
sub
sbb
hlt
and
gs
mov
mov
mov
mov
add
mov
arpl
ret
cmp
push
sti
mov
sbb
jmp
push
cwde
and
jecxz
xor
repnz
mov
leave
mov
sti
(bad)
jmp
push
jnp
(bad)
ret
pop
add
cwde
stc
arpl
int
sahf
les
mov
loopne
int
imul
pop
and
sbb
xor
mov
adc
jmp
and
fadd
rol
inc
jp
cwde
(bad)
xchg
icebp
xlat
mov
mov
sti
and
fidiv
inc
and
push
out
iret
and
push
mov
cmp
stos
cmp
xor
sub
imul
test
dec
jne
iret
push
loopne
push
xchg
pop
mov
and
sbb
sub
inc
leave
iret
retf
ficom
fs
xlat
cmp
jns
pop
mov
sub
fnstenv
sub
stos
(bad)
sub
rcr
pop
push
and
jmp
int3
jl
add
stos
retf
jmp
or
cld
cwde
xchg
pcmpgtd
in
mov
jbe
dec
arpl
popa
add
int3
add
mov
jbe
and
mov
cdq
mov
in
jno
xor
leave
icebp
push
push
mov
add
dec
js
inc
mov
jmp
daa
push
lahf
xor
add
test
rcl
jg
xchg
inc
or
lods
fwait
ss
push
pop
(bad)
cdq
pop
(bad)
xchg
lahf
or
daa
add
cld
ins
lods
cli
outs
push
fs
or
rcl
cmp
fcomp
dec
outs
(bad)
js
popf
xchg
out
xor
lea
sub
call
or
mov
inc
fwait
jmp
cmp
jno
jmp
inc
(bad)
xor
or
mov
cdq
xchg
pop
pop
fbld
cmp
jmp
dec
cmp
cmps
mov
jb
cmp
push
popf
jbe
cld
pop
pop
or
std
ss
(bad)
cld
jns
xor
mov
mov
mov
hlt
inc
mov
aam
pop
test
or
sbb
xor
inc
ret
ret
lock
fcmovnb
cmp
repz
ret
or
push
sar
sbb
jae
inc
ins
(bad)
ret
inc
std
les
sub
jmp
es
add
lahf
dec
jle
std
dec
jns
icebp
fistp
xor
jb
cdq
push
std
fstp
daa
ret
mov
cs
mov
push
dec
das
scas
pop
push
js
xor
outs
add
outs
push
mov
fwait
jmp
push
retf
fs
or
aam
dec
push
fsub
aaa
(bad)
loopne
inc
mov
daa
sub
or
sub
das
cwde
xor
addr16
pop
or
sbb
cmps
ret
pop
ret
jae
add
xchg
push
xchg
jno
arpl
mov
call
adc
jne
inc
or
(bad)
mov
sub
mov
mov
mov
inc
mov
mov
lock
popa
hlt
(bad)
loope
jge
dec
scas
push
hlt
pop
lods
loopne
pop
cdq
stos
out
inc
and
sbb
dec
pop
ret
push
mov
repnz
push
xorps
inc
pop
cwde
inc
test
daa
dec
test
fwait
mov
inc
adc
jg
push
pop
or
jae
jl
stc
call
or
mov
adc
fcmovnu
jb
aam
outs
mov
add
clc
adc
mov
loope
dec
add
in
fiadd
leave
jmp
idiv
inc
arpl
int3
outs
xchg
xchg
pusha
add
cld
sub
in
mov
jmp
hlt
cmps
jmp
mov
xor
dec
xchg
inc
jmp
movs
mov
push
(bad)
frstpm(287
push
inc
pop
pop
push
mov
pop
(bad)
sbb
js
rcl
add
cli
loope
xchg
sahf
dec
add
es
imul
dec
(bad)
pop
or
arpl
sbb
pushf
les
adc
adc
clc
fwait
pusha
push
int3
dec
adc
pop
push
xchg
cmp
pop
fs
mov
jle
cmp
ret
jmp
push
jp
push
cmp
ficom
retf
xlat
sub
hlt
inc
push
je
inc
(bad)
mov
ficomp
sahf
and
lds
push
outs
lea
mov
repnz
xchg
xchg
add
aas
jp
push
and
outs
inc
pop
fimul
cmp
enter
(bad)
cs
mov
add
movs
inc
movs
out
adc
inc
dec
ins
sar
icebp
inc
cld
add
ret
or
xchg
mov
addr16
jl
loop
fwait
adc
ucomiss
mov
sub
fs
pop
fs
mov
loop
add
cs
push
mov
jmp
sbb
aam
shl
cmps
in
inc
jmp
mov
adc
cld
cdq
mov
in
in
cmp
push
pop
out
ror
dec
push
mov
sahf
movs
fiadd
fcom
adc
aas
sub
(bad)
mov
mov
repnz
repz
sbb
iret
pop
imul
ins
mov
or
mov
stc
cdq
inc
fwait
popf
loopne
addr16
shl
(bad)
movs
mov
sub
push
cs
fbld
fiadd
call
mov
out
ret
data16
mov
add
fisub
out
xor
xlat
scas
aad
inc
push
or
add
dec
push
sub
outs
jmp
add
xchg
int
call
stos
rcl
mov
scas
jbe
jecxz
cmps
pop
out
shl
cmps
stos
(bad)
sahf
xchg
hlt
sub
jb
iret
lock
jl
outs
arpl
xchg
clc
dec
iret
push
adc
push
iret
cmc
sbb
sahf
out
shl
inc
adc
rep
ja
and
inc
dec
and
inc
stos
fcmovnu
xchg
cwde
inc
fild
popa
out
das
fldcw
sub
ins
dec
add
mov
ds
jge
push
test
call
outs
add
(bad)
lock
pop
pusha
jp
xor
lds
cmp
pop
cmps
sbb
fsubr
pop
loopne
cmp
cmp
out
or
sbb
and
mov
and
mov
sub
sub
cmp
stos
xor
xchg
scas
jno
shl
xchg
popa
mov
mov
push
imul
test
in
xchg
and
retf
mov
add
jmp
ss
cs
pop
leave
ins
xor
adc
das
in
adc
xor
or
outs
add
rcr
punpckhdq
jmp
pushf
push
out
xchg
sbb
lds
(bad)
xlat
loopne
jbe
or
in
(bad)
inc
jp
adc
imul
fnsave
jmp
pop
cmp
retf
in
test
lods
mov
mov
adc
sbb
pop
pop
pop
push
loop
mov
aad
adc
retf
in
inc
mov
loop
xchg
mov
sub
in
test
retf
pop
rcl
xchg
xchg
sbb
movs
test
inc
or
xor
leave
jl
mov
jns
or
adc
retf
push
outs
nop
mov
mov
sbb
pusha
jecxz
pop
imul
fistp
retf
fild
jmp
mov
jp
or
call
xchg
dec
addr16
xchg
sar
popa
add
(bad)
lds
(bad)
jle
and
or
pop
mov
ss
adc
imul
stos
cli
(bad)
in
test
xchg
sbb
mov
add
add
idiv
pop
shl
int3
push
jecxz
add
inc
add
dec
ror
or
mov
js
pop
retf
ja
gs
cwde
jecxz
cmc
sbb
jmp
popf
rcr
push
int
xchg
mov
inc
jmp
cmps
in
imul
mov
jno
or
enter
clc
adc
xchg
xor
div
call
xchg
push
mov
and
mov
call
pop
in
xchg
cld
in
test
(bad)
scas
sbb
loopne
aaa
in
cmp
fisub
outs
jnp
(bad)
call
movs
xchg
mov
cmp
lods
push
loopne
pop
dec
push
sub
sub
shr
ins
sahf
loope
mov
jns
or
pop
fwait
or
mov
icebp
stc
in
call
jge
cmps
or
pop
mov
push
scas
or
sub
xor
mov
push
mov
add
mov
or
push
lea
lds
jno
retf
out
unpcklps
cmp
mov
push
cdq
mov
jnp
stos
ret
icebp
ins
(bad)
inc
mov
dec
and
xchg
jae
mov
inc
retf
ss
cmp
xchg
adc
mov
add
aam
mov
jmp
mov
xor
popa
shr
jp
std
or
push
repnz
adc
xor
push
lods
js
in
mov
mov
lods
out
bound
nop
pop
lds
pop
lock
sub
xchg
daa
push
aas
dec
call
ror
retf
push
ss
or
cs
lock
xchg
push
dec
lods
ret
adc
jle
pop
icebp
xchg
lahf
xchg
loopne
mov
xchg
je
mov
jmp
scas
nop
push
imul
adc
jbe
push
mov
ins
mov
xchg
adc
arpl
in
test
arpl
jns
(bad)
xchg
or
push
dec
mov
popa
ror
aad
mov
into
cmp
outs
xor
call
inc
jcxz
push
loop
test
leave
in
shl
fidivr
mov
(bad)
sub
pop
mov
ret
popa
outs
mov
mov
mov
pop
push
jnp
add
mov
fcomi
or
clc
nop
mov
retf
pop
sub
mov
sub
fcmovnu
jns
mov
ds
cmp
loop
mov
aad
mov
add
mov
ins
cld
aas
data16
jmp
push
push
push
push
aas
jmp
pop
clc
dec
mov
fistp
leave
pop
jno
inc
rcl
cmp
xchg
out
dec
push
add
sub
dec
mov
jae
shl
add
jg
out
jmp
cs
jmp
cmc
loop
ret
sbb
cdq
mov
cmps
xor
add
ret
inc
jge
sahf
push
cwde
jmp
clc
inc
xor
xor
pop
inc
pushf
sahf
adc
pop
xchg
sub
hlt
out
mov
dec
pushf
xlat
pushf
mov
fadd
push
idiv
add
xchg
pushf
std
retf
push
add
lahf
mov
sar
es
out
mov
cmp
(bad)
(bad)
mov
cmp
fucomip
jb
xlat
push
call
dec
dec
jbe
sahf
(bad)
(bad)
dec
push
nop
mov
add
neg
sub
mov
xchg
and
cs
imul
adc
push
scas
or
ds
add
dec
retf
sti
bound
fadd
ja
xchg
out
dec
inc
mov
pop
mov
ins
mov
pop
sbb
xor
pop
adc
out
aaa
push
lods
cwde
imul
mov
pop
lahf
xor
jo
xchg
pop
retf
cld
pop
movs
dec
and
mov
loopne
lea
call
jnp
pop
ror
icebp
jbe
push
test
in
pop
mov
enter
mov
push
mul
jmp
sbb
or
push
sub
mov
mov
adc
mov
sbb
dec
(bad)
jl
inc
ins
(bad)
add
sbb
stc
cmp
sbb
adc
cmp
sub
jnp
ds
(bad)
clc
les
or
dec
jl
mov
rcl
and
rcl
xchg
ds
xchg
inc
std
cmp
out
test
mov
mov
cmp
sbb
outs
mov
cmps
push
and
hlt
dec
out
adc
cmp
test
fwait
mov
mov
pop
dec
ins
pop
mov
or
test
xchg
popa
cwde
adc
and
adc
dec
pop
adc
push
push
in
adc
pushf
dec
arpl
jae
inc
or
add
(bad)
adc
xor
push
sbb
inc
pop
shl
in
icebp
jbe
sbb
scas
movs
fwait
push
add
xchg
pop
popf
mov
mov
int3
pop
inc
imul
jns
arpl
scas
mov
add
icebp
mov
inc
js
mov
inc
sbb
cli
retf
test
adc
adc
push
popf
shr
pusha
dec
movs
xor
mov
fdiv
frstor
(bad)
mov
mov
mov
add
in
pop
ret
jle
jno
ins
xor
stc
and
clc
push
pusha
xchg
push
(bad)
mov
mov
cmps
inc
lea
retf
pop
movs
sub
inc
xor
jmp
xchg
mov
pop
shl
hlt
inc
mov
mov
cmp
push
and
jmp
popf
imul
sub
sbb
push
test
mov
imul
daa
dec
or
cmp
xchg
test
rol
stos
add
sub
enter
mov
jns
jno
add
je
dec
mov
push
je
outs
push
mov
jae
and
pop
lea
int
sbb
inc
inc
pop
pop
xor
jno
popa
mov
test
push
in
jle
nop
push
in
push
retf
dec
cwde
push
jnp
cmps
out
inc
imul
push
xchg
jge
dec
jbe
adc
cmp
movs
mov
mov
aam
add
xchg
mov
out
imul
fmul
fs
mov
ret
movs
call
jnp
mov
jg
mov
fnsave
retf
dec
jle
sub
mov
int3
push
nop
mov
into
sbb
inc
cmp
stc
rcr
pop
es
pop
mov
hlt
adc
push
aam
mov
xchg
xor
stos
add
mov
mov
ins
xor
loope
out
fcomp
icebp
jmp
pushf
jg
and
jmp
or
fs
mov
imul
mov
les
xor
mov
sbb
ror
cwde
pop
(bad)
std
sbb
jno
xor
mov
ror
test
fnstsw
cli
add
es
neg
ret
pop
out
je
and
cmps
mov
xor
xchg
cmp
mov
or
mov
push
pushf
adc
push
pop
cmp
retf
adc
dec
cmp
out
sub
adc
inc
fwait
jmp
cmp
ins
jl
popf
push
cmc
mov
cwde
ret
mov
in
and
jp
mov
in
fst
dec
xchg
dec
mov
rcl
dec
cmp
xchg
mov
cmps
fnstcw
xor
(bad)
test
add
jmp
xor
pop
jno
add
inc
mov
xor
and
aam
aaa
dec
(bad)
jmp
dec
mov
mov
jnp
aam
les
jnp
sbb
mov
imul
pop
jmp
std
sub
mov
shr
mov
sub
cmps
stos
mov
pop
cmp
pusha
dec
sub
in
mov
mov
push
les
cli
or
ret
adc
in
std
pusha
mov
adc
aaa
int3
add
(bad)
mov
sbb
call
inc
cmp
in
sub
ror
pop
inc
mov
es
push
jg
arpl
leave
xor
mov
push
retf
test
push
cs
repnz
jb
mov
cmp
push
cmp
mov
and
cdq
fs
cs
sub
mov
and
pop
dec
xchg
push
ss
adc
adc
in
jle
mov
jecxz
loope
jl
xchg
pop
cmp
shl
xchg
mov
cmp
and
imul
or
dec
xor
lds
pop
rcr
xor
dec
inc
les
push
ret
bound
popf
aaa
outs
add
cs
dec
repnz
pusha
push
or
jmp
jg
sar
bound
inc
(bad)
in
test
mov
rol
lods
(bad)
in
inc
adc
stc
mov
mov
or
fsubr
sub
int
mov
not
xchg
out
repz
stos
std
retf
outs
push
enter
es
jp
loope
bound
xor
aaa
inc
cmp
cmp
retf
pop
retf
popa
fiadd
pop
mov
shl
aam
push
push
or
gs
movs
or
adc
aad
rcr
jnp
sar
js
in
xor
cmp
mov
mov
push
fistp
aad
mov
rcl
bnd
adc
lds
(bad)
push
ror
outs
add
in
lds
mov
inc
pop
xchg
int
push
ins
jno
mov
pop
pop
(bad)
ins
mov
jno
sbb
cmp
xorps
or
lahf
xchg
and
cmps
cmp
jbe
add
sub
jle
pop
and
inc
imul
adc
push
scas
xchg
dec
rol
push
add
lock
fild
mov
or
call
fld
mov
outs
mov
lahf
dec
iret
fistp
jp
jns
gs
faddp
fiadd
mov
sbb
bound
mov
mov
cmp
xor
jmp
popf
or
(bad)
cmps
lock
movs
mov
or
add
es
adc
mov
add
fdivr
in
mov
js
pop
mov
xchg
enter
jg
and
les
jb
fild
inc
jp
scas
xor
cmc
ss
scas
jmp
pop
push
int3
shl
xchg
sub
sub
lock
(bad)
add
xchg
aad
retf
sbb
pop
jge
xlat
xchg
je
pop
jmp
add
jecxz
lahf
pop
sbb
idiv
mov
cwde
lock
jge
aad
rcr
in
rcr
jnp
dec
in
ret
call
add
or
sub
inc
popf
test
jl
fdiv
pop
adc
inc
push
mov
xchg
(bad)
xor
or
cmp
xchg
std
ins
call
cld
xor
ins
mov
xchg
in
ret
test
stos
push
jb
adc
mov
adc
in
js
inc
loope
nop
cmp
adc
add
mov
into
pop
push
cmps
ja
xor
push
hlt
push
into
push
mov
mov
imul
out
aas
retf
clc
jae
js
daa
push
sub
xor
mov
cs
lods
or
mov
aaa
out
popa
inc
rol
nop
adc
jg
dec
mov
jecxz
sub
stos
or
popa
adc
inc
sbb
jg
and
sbb
cli
push
sbb
leave
add
fldcw
dec
mov
push
sbb
nop
or
pop
xor
push
ja
out
dec
lahf
or
push
push
loop
push
int
adc
lods
arpl
std
jge
inc
sbb
cmp
adc
xor
sub
dec
int
sub
scas
mov
enter
test
popf
mov
cwde
into
mov
mov
mov
out
aam
xor
fwait
loopne
in
adc
jge
lahf
stos
add
push
aam
add
js
inc
imul
push
in
mov
and
adc
cmp
loop
and
popa
cmp
outs
push
scas
das
cmps
push
scas
fstp
icebp
dec
and
cmp
(bad)
out
ret
mov
jle
sbb
jns
int
daa
xor
mov
dec
cmps
les
in
sub
xchg
sub
call
push
(bad)
fcmovnb
jmp
push
xor
test
int3
imul
int3
lds
mov
mov
ins
movs
aad
shl
retf
jno
cwde
adc
aaa
ffreep
or
adc
in
dec
add
scas
cwde
std
cmp
(bad)
and
outs
jb
jl
fidiv
rol
pop
xor
xor
adc
lock
fimul
iret
inc
push
mov
fadd
jl
test
inc
out
cld
fs
mov
por
int3
mov
stos
hlt
div
inc
(bad)
jecxz
call
dec
xchg
shl
neg
push
mov
cli
and
pop
xchg
mov
jbe
or
push
leave
xor
sbb
dec
out
es
test
push
and
ror
retf
jbe
sub
out
movs
ret
mov
in
scas
arpl
fwait
cmps
stc
icebp
mov
xor
xchg
adc
ss
test
(bad)
xchg
pop
pop
xchg
add
xor
xor
push
add
enter
or
(bad)
adc
sbb
clc
(bad)
mov
push
(bad)
mov
jl
repnz
adc
dec
inc
and
and
fsubr
jne
pop
dec
xchg
ins
push
pop
fs
cmp
add
es
ja
pop
jecxz
fisubr
arpl
inc
mov
pop
pusha
(bad)
jecxz
push
test
adc
icebp
(bad)
xor
inc
dec
movs
stos
ja
or
jmp
js
jmp
sahf
enter
add
nop
sbb
sub
repnz
(bad)
pop
(bad)
(bad)
push
adc
sbb
repnz
mov
mov
mov
in
pop
add
rcr
out
sbb
fnstsw
stc
jle
icebp
mov
cmp
stos
dec
aad
rcl
mov
pop
cmp
xchg
sub
out
sahf
sbb
ret
fisub
xchg
mov
mov
rol
movs
jl
and
xor
pop
int3
aam
dec
jae
add
jnp
xchg
xor
mov
bound
fwait
mov
dec
cmp
pop
popf
ins
push
jg
(bad)
jbe
mov
sub
mov
fbstp
clc
xchg
cmp
mul
lods
pop
out
jg
cmp
xchg
add
or
dec
add
loopne
jmp
jae
xor
mov
mov
dec
mov
mov
mov
sub
xchg
pop
jb
repz
retf
jecxz
mov
inc
pop
scas
push
pop
adc
jb
mov
les
repnz
and
cld
test
(bad)
adc
jae
pop
scas
fst
adc
or
movs
xor
jp
mov
out
fisub
jns
push
xchg
adc
std
jnp
scas
add
sar
pop
push
shl
cdq
sbb
adc
mov
cs
and
mov
xor
pusha
add
and
sti
popf
addr16
push
jge
in
jo
(bad)
into
pop
cdq
push
pop
fmul
imul
mov
and
lahf
xchg
sbb
call
jmp
push
(bad)
xchg
repnz
popf
mov
jmp
or
shl
jno
mov
inc
dec
dec
add
or
or
sub
xor
jo
enter
loop
mov
inc
and
add
hlt
push
mov
imul
mov
add
bound
jbe
aas
test
mov
inc
inc
pop
jle
retf
inc
cmp
loope
mov
mov
or
outs
fnsave
push
sbb
or
sub
les
mov
mov
adc
or
scas
sbb
adc
mov
mov
sbb
dec
jg
ret
add
lea
mov
jmp
fstp
dec
pop
mov
stc
pop
push
sti
jne
adc
rol
lods
aad
in
rol
cmp
(bad)
fist
in
loope
push
ror
and
mov
pushf
or
push
jbe
movs
cwde
xchg
call
es
and
jle
mov
mov
jo
mov
inc
xchg
mov
sbb
or
sahf
pop
push
pop
or
mov
test
dec
pop
ficomp
adc
mov
inc
dec
jb
and
movs
sub
mov
mov
(bad)
fisttp
aas
aad
fbld
rcl
jmp
fcom
lods
and
aaa
pop
test
in
xchg
(bad)
or
xor
add
shl
rcr
inc
iret
rcr
dec
ja
xor
adc
cs
push
mov
movs
cmc
fnstcw
pop
nop
popf
jno
adc
and
jp
leave
xor
ficom
or
mov
adc
sbb
int
cmp
push
imul
jle
dec
nop
xchg
movs
test
(bad)
out
outs
out
push
pop
inc
loope
sub
out
or
ins
push
inc
cmc
ss
jecxz
fist
or
add
and
mov
sti
push
pop
sub
aas
xor
mov
jp
sub
cmps
mov
mov
jno
popf
adc
ret
pop
inc
loope
or
aad
and
repz
pop
mov
test
(bad)
jns
and
retf
std
ss
das
jg
test
test
rcl
xor
cmps
pop
jbe
pop
popa
cmp
in
pop
jnp
xor
(bad)
sti
std
sar
dec
inc
cmp
pop
pop
push
(bad)
cmc
or
sbb
add
jo
xor
xor
outs
add
push
mov
push
test
mov
and
fst
sub
test
neg
mov
sub
mov
test
(bad)
mov
cmps
leave
mov
jg
sbb
jecxz
sbb
dec
xor
int3
cmp
pop
push
stc
lods
sub
mov
mov
out
and
jmp
imul
add
add
mov
inc
dec
sbb
inc
sub
push
ja
movs
or
ret
ja
mov
mov
push
rcr
test
push
or
sbb
stc
fnop
sahf
inc
mov
add
xor
hlt
xchg
pop
mov
inc
test
ret
fistp
cmp
cmc
cmp
mov
pop
add
ds
hlt
and
xor
dec
mov
shl
test
sbb
mov
and
or
imul
sbb
ror
or
shl
fmulp
cli
push
cld
push
fld
repz
sbb
or
pop
sahf
or
enter
(bad)
je
push
jl
jno
fsubr
std
and
mov
fild
xchg
dec
or
icebp
and
lods
pop
test
mov
mov
xchg
jg
xchg
xchg
fmul
push
or
inc
push
push
not
lods
sbb
push
fnstcw
mov
popa
mov
push
sub
loop
imul
mov
aaa
test
int
inc
(bad)
mov
(bad)
ss
not
out
mov
inc
and
mov
mov
lods
mov
lock
adc
jno
clc
push
in
test
mov
jl
xchg
sub
jp
loop
hlt
and
xchg
dec
mov
sbb
pop
call
inc
or
xchg
jecxz
inc
cwde
retf
into
dec
pop
push
and
sub
jne
iret
mov
es
mov
scas
cmp
inc
add
retf
mov
mov
or
jg
int3
inc
int3
pop
sbb
mov
stos
push
cs
dec
sub
dec
jmp
jecxz
dec
xor
xchg
mov
out
push
jnp
cmps
scas
pop
iret
inc
add
jmp
aam
pop
les
movs
pusha
cmps
jle
les
inc
(bad)
mov
ins
popa
pop
xor
imul
out
aas
inc
mov
adc
test
sub
sub
mov
or
jb
ret
icebp
sbb
mov
(bad)
and
je
push
arpl
in
mov
jne
mov
ret
es
mov
jae
xor
fadd
adc
clc
outs
or
dec
mov
cmps
pop
aam
mov
rcl
mov
push
das
jno
pop
lahf
shl
cmp
add
dec
jbe
or
gs
sbb
pop
(bad)
je
xor
xlat
test
mov
sub
dec
rcl
mov
fiadd
jnp
pop
mov
out
mov
scas
push
mov
mov
dec
push
(bad)
adc
push
pusha
dec
push
dec
in
jmp
inc
add
paddw
jle
or
aad
rcr
jg
pop
mov
cdq
ss
pop
out
xor
hlt
mov
push
mov
int3
push
jl
std
movs
pop
mov
mov
fstp
lea
mov
(bad)
dec
pcmpeqb
int
and
push
jg
dec
(bad)
jmp
xchg
mov
mov
into
xchg
ins
arpl
add
sbb
cmp
xor
push
sbb
dec
cs
jo
add
mov
add
stc
aas
cmp
fcmovne
adc
cld
push
jnp
jecxz
loope
arpl
jns
fstp
fidivr
cmp
inc
fmul
xchg
sub
sub
jg
mov
(bad)
dec
jne
outs
dec
push
shl
fcomp
in
xchg
lea
sub
test
push
mov
test
in
jle
(bad)
mov
imul
push
retf
mov
add
sbb
rcl
sahf
imul
push
dec
rcl
xor
jmp
and
mov
leave
mov
dec
je
xor
xor
mov
aam
cld
movs
push
ss
cmp
rcl
pop
in
pop
(bad)
mov
daa
(bad)
(bad)
nop
pop
cs
push
int3
es
repz
xlat
jnp
push
(bad)
mov
push
or
cli
pop
sbb
(bad)
xor
push
gs
data16
out
das
lods
sbb
sub
(bad)
jl
fs
push
lods
or
hlt
into
pop
in
retf
xchg
loop
sub
sub
sub
add
lds
out
adc
inc
arpl
xchg
cmps
rcr
add
enter
es
imul
or
or
cld
out
adc
or
iret
rcl
loop
mov
gs
repz
movs
inc
je
out
enter
loope
pop
jl
pop
cmp
jbe
inc
aam
dec
or
cdq
imul
ins
push
in
inc
xchg
test
sub
sub
in
xchg
data16
add
repnz
cmp
les
add
jmp
dec
hlt
fiadd
mov
hlt
adc
ss
loop
push
lods
push
fdivrp
hlt
xor
cmp
adc
dec
sbb
and
push
inc
mov
nop
ret
mov
xchg
retf
sub
mov
shr
and
sbb
in
jae
jge
sbb
jno
bound
(bad)
jmp
cmc
lock
and
sub
push
gs
sahf
xchg
jl
inc
mov
lods
mov
bnd
pop
bnd
mov
mov
pop
repz
add
cmps
jno
nop
aad
adc
mov
imul
jne
push
(bad)
call
inc
xchg
int3
ja
call
shl
mov
call
mov
push
fs
cld
(bad)
or
xchg
int
mov
mov
or
push
dec
and
jae
stos
push
jge
in
mov
(bad)
sub
cmc
cdq
mov
mov
in
or
lods
fiadd
mov
inc
mov
test
mov
repnz
pusha
pop
pop
add
xchg
or
(bad)
pop
js
inc
rcl
xchg
or
lds
int3
sub
pushf
ins
pop
cli
xor
hlt
push
jbe
add
scas
mov
ror
dec
push
test
in
out
std
and
dec
pushf
xor
jb
pushf
aam
sbb
adc
add
lahf
sbb
dec
mov
stc
jae
mov
imul
xchg
enter
mov
ss
xchg
mov
push
psubw
push
shl
stos
lahf
je
loope
and
mov
pop
in
hlt
mov
jg
push
jg
ins
call
inc
mov
es
add
sahf
cmp
lds
loop
sub
mov
jl
cmp
loop
sub
enter
adc
jne
aam
in
or
push
lea
sbb
ret
push
pushf
and
mov
push
test
(bad)
jns
inc
js
fsubr
dec
mov
inc
or
adc
(bad)
jne
add
scas
mov
mov
pop
sahf
shl
push
loopne
xchg
pop
test
inc
test
inc
jae
cmp
jb
jg
adc
and
push
add
push
jns
add
inc
push
out
xchg
shr
inc
cmp
shl
fdivr
mov
inc
sbb
sub
jl
in
ror
neg
mov
(bad)
fxch
pop
xchg
push
jno
retf
in
pop
xor
mov
push
fdiv
pop
mov
push
pop
inc
sbb
cmp
inc
inc
xchg
(bad)
loop
inc
cmp
push
adc
dec
jnp
inc
xchg
sbb
mov
adc
cli
mov
mov
adc
neg
adc
sbb
jp
push
fxch
data16
ja
xchg
std
xor
dec
jge
inc
and
loop
in
mov
shl
mov
call
pop
mov
pop
mov
jle
jg
jns
add
dec
inc
pop
std
adc
pusha
cdq
mov
sahf
or
push
dec
mov
dec
cmp
xor
or
imul
xchg
(bad)
aas
sti
ror
cmp
es
push
mov
std
push
inc
lea
outs
inc
(bad)
mov
lock
rcl
push
cmps
jle
sbb
lahf
mov
inc
add
sub
sub
fst
repz
push
xor
out
mov
mov
stos
sub
mov
imul
das
push
jecxz
push
xchg
push
push
mov
mov
ret
cmp
scas
cmps
hlt
push
pop
enter
in
popa
pop
mov
mov
jl
ror
adc
jmp
pop
stc
aam
loop
leave
popf
push
dec
mov
cwde
or
xor
in
leave
dec
xchg
outs
outs
(bad)
unpckhps
(bad)
sbb
inc
jmp
ret
dec
mov
and
mov
mov
mov
sbb
fcmove
dec
mov
lahf
mov
jmp
test
inc
fst
cmps
sub
fisubr
mov
add
sbb
sahf
sbb
jle
cs
jge
push
imul
or
cdq
adc
add
aaa
cmc
pop
repz
ret
inc
cs
xor
aam
mov
dec
cld
int
mov
sbb
sub
retf
retf
jne
jmp
add
fs
push
imul
mov
xor
adc
pop
xor
or
push
mov
ins
xlat
cwde
xchg
push
xlat
arpl
mov
mov
push
repnz
inc
add
adc
dec
aam
and
xor
ror
in
hlt
lea
jecxz
jns
xchg
iret
mov
les
xchg
mov
jb
sub
icebp
adc
cmp
or
or
pop
clc
xor
inc
fstp
pop
cmp
fs
scas
sbb
inc
cmps
add
cmp
in
aam
repz
mov
xor
fbstp
rol
mov
cdq
pushf
ror
adc
sub
shl
icebp
test
jb
cmp
or
xchg
xchg
jl
mov
in
and
fsubr
cld
and
in
dec
mov
scas
xchg
cld
or
inc
mov
repz
mov
imul
dec
dec
fucomip
inc
fpatan
and
movs
jg
pop
popf
xor
das
neg
ror
xchg
ja
mov
sahf
adc
jns
je
repnz
pop
mov
mov
mov
adc
aad
jmp
mov
popf
fcomp
mov
xor
stos
rcl
es
ds
mov
inc
cmp
mov
dec
xchg
xor
sbb
cmp
add
test
or
jne
pop
dec
add
aam
dec
(bad)
fs
pop
push
mov
jae
les
in
jae
xor
and
hlt
ret
xchg
cmps
adc
out
sub
mov
mov
loopne
mov
sub
cmp
mov
push
xor
call
jno
test
pop
addr16
outs
js
or
inc
fdivp
(bad)
enter
call
scas
dec
xchg
jmp
cmc
int3
dec
pop
imul
xor
cs
shr
cwde
cmp
ret
add
push
aaa
mov
sub
inc
ja
mul
stos
mov
mov
sahf
and
push
ins
ret
or
pop
mov
mov
lahf
add
call
outs
outs
es
out
adc
popf
pop
scas
xor
xor
push
pop
out
neg
(bad)
jg
jbe
cld
pop
mov
fcomp
push
loopne
pusha
pop
inc
mov
imul
cmp
cmp
or
rcl
fs
sub
repnz
dec
jl
jne
(bad)
(bad)
fimul
sub
jo
cmp
sbb
jle
bound
(bad)
xchg
pop
dec
cmc
inc
adc
sbb
mov
imul
mov
inc
sub
out
add
outs
or
test
jp
pop
adc
add
pop
inc
lock
mov
cmova
xor
aas
jo
call
leave
fidivr
shr
cwde
call
dec
pop
ds
mov
cmp
retf
push
sbb
add
pop
jp
or
loopne
out
ds
icebp
pop
ins
xlat
mov
outs
enter
mov
pop
das
push
and
sar
popa
and
daa
(bad)
hlt
adc
aam
aad
xlat
inc
jmp
(bad)
jp
stos
je
int3
ins
mov
ins
jp
test
hlt
sbb
addr16
cmp
mov
mov
repnz
cmps
inc
cmp
cmp
adc
pop
movs
repz
ror
ror
mov
retf
pop
sbb
mov
pop
loop
mov
call
out
adc
int
pop
das
popa
dec
ss
mov
sbb
sbb
sub
dec
adc
daa
in
aam
dec
imul
jae
cmp
int3
retf
and
sub
mov
pop
cmp
je
mov
dec
in
mov
jnp
aad
loop
cld
mov
ins
ret
in
ror
cdq
push
bnd
cs
jge
pop
xchg
cdq
outs
jo
push
xchg
sub
test
ds
enter
adc
xor
sbb
dec
or
push
ror
mov
ds
cmp
jl
mov
cmp
not
jnp
mov
dec
cmp
adc
jo
mov
or
lods
mov
jns
add
lods
push
cwde
adc
cs
loope
cmp
mov
cld
cli
(bad)
sub
pop
loope
arpl
repnz
push
or
lds
and
push
imul
jmp
cmc
ins
xchg
ins
scas
adc
sbb
(bad)
mov
mov
mov
imul
xchg
js
xchg
push
ss
add
fsub
push
or
(bad)
push
arpl
mov
xchg
pop
fwait
or
xchg
outs
adc
mov
les
add
retf
out
mov
dec
inc
dec
cwde
adc
hlt
ins
mov
mov
lahf
push
fimul
jb
sub
push
add
cdq
rol
dec
je
xor
cmp
repz
adc
cdq
fstp
(bad)
and
pop
cmps
ret
or
ss
mov
sub
ss
inc
iret
push
mov
lds
push
(bad)
cli
out
pop
mov
jo
rcr
test
jl
cld
lds
pop
(bad)
cdq
jp
(bad)
loopne
fs
mov
push
lea
push
call
(bad)
add
aad
(bad)
xchg
push
pop
xchg
gs
bound
mov
xchg
cmp
pusha
call
sub
adc
mov
pop
les
push
jo
hlt
imul
push
mov
lahf
sub
pop
les
and
sbb
xchg
and
sahf
adc
retf
add
test
jne
jbe
xor
in
(bad)
adc
test
add
push
loopne
ins
jecxz
adc
add
inc
pop
add
mov
jno
cmp
shl
mov
ds
or
daa
shr
pop
lahf
inc
adc
sbb
inc
and
mov
clc
pop
xor
das
popf
sub
call
repz
sub
xchg
mov
mov
mov
div
or
sahf
ja
mov
and
add
in
jle
lods
xor
daa
xchg
fmul
xchg
push
test
mov
xlat
shl
bound
test
aam
clc
(bad)
ja
add
mov
loop
imul
lea
mov
test
sub
(bad)
pop
sub
cdq
inc
xchg
pop
gs
cmp
dec
(bad)
dec
js
inc
and
xor
retf
repz
jnp
(bad)
hlt
outs
movs
adc
aas
mov
in
jns
pop
into
or
jge
push
hlt
mov
jns
cmp
call
mov
jle
push
cld
mov
fstp
in
xchg
and
or
sub
cwde
shl
cmp
shl
loope
jb
mov
hlt
fdivp
cmp
adc
cmps
int3
loopne
(bad)
mov
pop
icebp
ss
mov
arpl
out
sbb
inc
push
xor
lahf
std
xor
adc
push
push
mov
inc
sti
sub
enter
push
vfnmaddps
pop
mov
test
xor
mov
fs
int3
inc
std
dec
das
jb
xor
adc
ret
fild
daa
imul
add
mov
sub
xchg
xchg
add
imul
popa
add
dec
cmc
push
or
cmp
mov
add
ds
mov
sub
cdq
push
push
cmps
cmc
(bad)
test
(bad)
mov
pop
xchg
cmps
and
inc
xchg
mov
sub
nop
in
mov
loope
shl
mov
sar
das
outs
(bad)
jae
retf
xchg
(bad)
jae
push
or
cmp
(bad)
aaa
popa
mov
fcomp
mov
sbb
test
fimul
fcomp
push
aad
lods
xchg
dec
inc
(bad)
push
shl
sbb
pop
adc
jg
cmc
bound
pop
mov
ins
and
call
dec
fcom
(bad)
ror
test
mov
jl
cmp
out
push
cs
imul
ror
test
ins
jg
inc
jp
pop
sti
inc
mov
add
xor
pop
xchg
lds
test
push
inc
jge
xor
cmp
mov
mov
jns
(bad)
hlt
jae
xchg
daa
test
adc
jnp
in
mov
mov
pop
mov
dec
sbb
das
xchg
jns
and
call
ss
xchg
push
add
adc
inc
xor
cld
int
pop
or
cmp
push
nop
jo
popf
mov
add
sbb
pop
xor
add
sub
add
mov
repz
push
or
jle
or
xchg
cli
or
test
ins
jecxz
stc
cmp
cmps
or
add
cmp
(bad)
test
xchg
push
fs
mov
pop
cmp
cwde
sub
add
dec
js
mov
in
mov
mov
xor
retf
add
int3
je
mov
pop
xchg
cmps
sbb
sahf
and
cmps
in
cmp
adc
jo
push
test
stos
call
push
mov
test
ins
les
repz
dec
retf
call
jle
push
call
int
add
retf
(bad)
cmps
adc
push
clc
loop
and
mov
jo
jle
pop
ficomp
add
push
jns
adc
xor
jge
ins
cmp
hlt
mov
outs
scas
and
sahf
lds
cmp
mov
and
pusha
adc
test
in
call
loop
sbb
dec
pop
add
push
outs
je
add
xchg
in
and
sbb
iret
and
cmps
jmp
jp
dec
push
js
cs
stc
in
hlt
mov
mov
ja
jl
nop
fld
jmp
leave
and
rcl
arpl
xchg
in
cli
sub
icebp
xor
mov
clc
add
js
cmps
add
rcl
loopne
popa
push
jg
push
and
adc
fs
nop
sti
nop
add
inc
mov
mov
mov
cld
pop
(bad)
cmp
xor
(bad)
push
mov
outs
cmp
push
inc
mov
dec
add
movs
addr16
jmp
sbb
das
test
push
pusha
ja
fist
lods
pop
dec
in
lock
test
push
lods
(bad)
leave
cmps
cld
mov
ins
cmc
xchg
jo
or
arpl
mov
jp
jg
pop
icebp
(bad)
fistp
(bad)
fld
shl
cld
push
xor
aas
add
(bad)
push
cmp
sub
inc
push
pop
enter
stos
ret
mov
pop
sbb
add
mov
fdivp
fs
test
push
adc
(bad)
jb
retf
pop
rol
mov
mov
mov
xor
bound
mov
xor
sti
or
jl
mov
ins
jmp
in
mov
mov
out
dec
jo
cmp
mul
out
add
pop
jmp
out
dec
test
pop
xchg
cdq
arpl
pop
inc
push
sub
xor
clc
mov
cmps
pop
lds
pop
fld
mov
dec
mov
imul
sbb
fisttp
xchg
pop
(bad)
cmp
adc
sbb
scas
in
call
adc
call
mov
push
ja
mov
jns
cmp
retf
stc
addr16
lahf
inc
les
mov
retf
or
cwde
movs
jne
mov
je
rcl
ins
push
aad
dec
jae
fisubr
cmp
inc
jmp
mov
cmp
cmp
xchg
jb
xor
scas
jmp
fldcw
movs
jbe
cs
push
adc
into
cdq
jo
pop
pop
push
push
adc
xor
or
(bad)
xor
movs
stos
or
xor
imul
lea
in
pop
into
pop
retf
push
add
arpl
pop
imul
or
(bad)
repz
imul
arpl
pushf
je
int3
fs
fadd
(bad)
mov
int
outs
in
xchg
mul
xor
je
adc
jle
ror
jecxz
movs
sbb
pop
std
cmp
sub
test
and
int
inc
popf
aas
and
int3
je
ins
push
cld
pop
dec
pushf
cmp
popa
hlt
cmps
std
hlt
(bad)
mov
aad
rcl
pop
push
test
mov
int3
push
push
mov
fisub
(bad)
ficomp
push
call
cmps
js
fld
rol
addr16
mul
pusha
div
sbb
(bad)
int3
push
jl
sub
pop
jg
inc
(bad)
jmp
sub
cmps
das
ret
fistp
loop
xor
lds
jb
in
push
call
sbb
minps
cmp
std
push
pop
ins
aam
xor
ds
jg
jo
pop
sub
pop
daa
fstp
xor
cs
sub
mov
rol
(bad)
fild
vrcpps
push
outs
dec
cli
push
loope
cmp
scas
add
sbb
inc
jnp
adc
and
dec
sub
dec
addr16
pusha
xchg
jns
icebp
arpl
dec
mov
or
mov
outs
add
mov
std
sbb
imul
popa
push
mov
in
mov
pop
test
mov
lods
mov
xchg
cmps
push
jne
sub
call
push
arpl
push
xor
bound
dec
push
mov
and
fdiv
inc
sbb
lds
loop
jne
xchg
std
sub
and
rcl
add
inc
mov
adc
xchg
lahf
repnz
push
mov
mov
out
ret
mov
push
sbb
push
addr16
fadd
mov
outs
cmp
sti
or
movs
rol
(bad)
in
sub
xchg
jae
aaa
test
in
add
or
and
das
fwait
mov
sub
js
add
push
iret
or
xchg
mov
sbb
jl
pop
adc
rsm
dec
pop
dec
cmp
xor
ds
add
je
jmp
fistp
ds
(bad)
test
arpl
cmp
mov
cmp
mov
dec
and
lahf
push
and
loop
iret
mov
xchg
popa
into
inc
into
ret
mov
inc
adc
ficomp
out
lds
hlt
gs
jmp
pop
sbb
xchg
sub
ret
outs
fadd
pop
cld
ror
test
cmp
dec
xor
mov
scas
leave
and
cmps
mov
dec
add
test
push
dec
jnp
mov
or
inc
sar
ror
mov
xor
stos
mov
repnz
cmp
add
mov
lods
sar
sbb
mov
(bad)
xor
pop
dec
push
cli
(bad)
daa
add
add
stos
test
(bad)
dec
cmp
lea
loop
push
jle
outs
adc
(bad)
jmp
pop
or
(bad)
jecxz
xchg
out
xor
inc
stos
shl
cmp
stos
jns
inc
out
loopne
mov
mov
pop
sub
nop
xor
pop
ja
inc
add
mov
repz
test
cmps
xchg
inc
scas
mov
call
mov
mov
sbb
addr16
mov
out
sbb
sub
adc
mov
and
cmps
out
mov
jne
adc
sub
ins
(bad)
sti
cmp
movs
stos
lods
or
int3
sbb
adc
imul
xor
addr16
push
cmp
stos
mov
cs
dec
jge
adc
jg
dec
push
add
xor
icebp
push
dec
(bad)
cmp
push
mov
int
and
leave
add
mov
xchg
sbb
or
clc
add
(bad)
lea
stos
jne
int3
cmp
int
out
xchg
or
arpl
add
ss
or
jg
popf
outs
xchg
aam
cmp
dec
adc
adc
ret
outs
mov
dec
fldenv
and
adc
lods
popa
jl
mov
jge
dec
and
call
pop
pop
repnz
pop
call
pop
in
ja
std
dec
loope
dec
jge
retf
fcom
sub
stos
sbb
adc
pop
icebp
test
adc
popa
mov
mov
cmp
lods
sub
in
lds
fstp
sbb
mov
inc
add
lods
ret
cmps
dec
or
jmp
mov
test
cld
loop
cwde
cmp
lods
ret
imul
or
pushf
scas
mov
aam
xor
retf
stc
daa
lock
jne
mov
cs
dec
jns
or
lea
inc
adc
leave
clc
inc
ror
rol
adc
popa
retf
adc
gs
inc
jl
(bad)
or
ds
ja
gs
cmp
cmp
cli
out
jp
ja
ret
adc
pop
xchg
out
pop
arpl
fidivr
cmp
mov
lds
jmp
and
sub
js
mov
jnp
push
cmp
out
pop
mov
ret
enter
gs
dec
iret
mov
cld
call
inc
test
or
cmps
(bad)
scas
cmps
movs
push
int3
outs
addr16
imul
jb
adc
scas
xchg
dec
out
and
pop
push
cmp
aad
enter
call
lods
jae
fsub
test
xor
inc
inc
rol
sub
inc
jle
jle
or
test
xchg
arpl
xchg
pop
scas
ja
mov
add
ja
sub
sub
xor
mov
bound
jge
or
pop
dec
popa
ror
push
fcmovnu
aaa
shr
retf
adc
call
test
dec
adc
inc
retf
pop
xor
push
pop
mov
fld
dec
xor
xor
mov
or
xchg
push
gs
lock
jb
call
fnstcw
cli
sub
fucomip
push
call
push
les
mov
scas
iret
ds
push
mov
mov
pushf
in
xchg
ja
(bad)
aaa
clc
fwait
inc
sbb
xchg
ficom
add
call
xchg
aad
add
dec
cmp
xchg
test
pop
cmp
mov
add
in
ds
ds
(bad)
add
fisub
arpl
ret
dec
pop
popa
test
pop
shl
ins
fild
dec
fcmove
cld
cmps
lea
dec
jmp
mov
inc
aam
shl
mov
cmps
xor
sub
stos
inc
mov
ret
pushf
mov
and
sahf
add
jge
lea
ds
daa
mov
fmul
mov
cmp
call
sbb
cmps
add
arpl
and
adc
stos
stc
fidivr
ret
mov
push
sub
test
sbb
inc
xor
nop
outs
lahf
in
daa
fimul
sub
ficomp
sbb
sahf
ret
mov
push
mov
push
ja
mov
outs
add
sub
pop
jle
(bad)
xor
dec
pop
dec
or
adc
add
leave
shr
or
(bad)
es
out
into
ret
rcl
mov
add
mov
push
push
outs
jno
push
jns
jp
icebp
fdecstp
ret
add
cmp
inc
shr
sbb
nop
int
cwde
retf
sbb
mov
xchg
jne
xchg
add
adc
repz
fbstp
gs
push
sbb
in
add
clc
mov
push
enter
jl
ins
or
sub
ja
push
sbb
fidivr
mov
cmp
out
pop
cdq
adc
push
bound
stos
aas
adc
test
stos
dec
inc
lods
stos
gs
jle
mov
sti
cmp
pusha
out
push
scas
test
cmps
pop
ficom
pop
inc
movs
mov
mov
(bad)
aam
xor
mov
mov
in
jmp
das
dec
repz
lds
jl
ins
mov
cmps
jo
and
pop
add
and
add
push
sbb
add
shr
aas
(bad)
or
cwde
dec
jge
jl
in
mov
or
jp
(bad)
cs
mov
call
cmp
pop
loop
or
jnp
movs
popf
sbb
cmp
add
or
arpl
dec
and
add
add
fisub
scas
ins
add
pop
sbb
add
daa
out
loop
mov
(bad)
push
dec
mov
xor
out
mov
rol
inc
(bad)
or
repnz
sub
pop
push
push
mov
xchg
inc
push
fnsave
push
je
aad
push
sbb
push
pop
aam
mov
xchg
cmp
popa
add
sbb
enter
jae
ins
shl
jno
inc
fwait
aam
dec
mov
push
lahf
scas
jmp
pusha
sub
push
add
mov
jge
or
dec
jne
and
and
lock
mov
push
out
pop
push
cmp
add
xchg
jns
dec
sub
jns
cli
call
out
aad
lods
test
daa
jb
pop
and
xchg
pop
int
out
or
xor
xchg
leave
(bad)
add
pop
stos
stos
icebp
and
pop
push
hlt
arpl
cmp
mov
in
ins
and
scas
and
mov
ret
outs
mov
sub
fimul
in
jp
shl
push
movs
mov
stc
scas
sbb
add
leave
mov
stc
sar
mov
mov
push
test
in
jle
or
mov
pop
jge
jno
sbb
div
cmps
jne
cmc
sbb
into
xlat
push
cli
retf
test
xchg
and
and
je
or
std
jb
mov
dec
xor
mov
jne
or
add
add
int
out
and
pop
pusha
retf
fsubr
pop
hlt
xchg
retf
cdq
test
aas
ss
in
jmp
jno
sbb
hlt
es
xor
cmp
bound
or
nop
(bad)
inc
iret
mov
pop
shl
xchg
in
pop
adc
inc
mov
inc
jno
pop
or
out
mov
jmp
pop
adc
adc
push
popa
cmps
jecxz
lea
mov
das
adc
loopne
cmps
mov
pop
je
adc
pushf
add
inc
sar
jmp
inc
inc
call
cmovl
in
push
lahf
or
cli
iret
ret
sahf
in
pop
mov
inc
pop
int
xchg
stos
cs
outs
jmp
pushf
add
shr
lods
fist
add
not
sbb
fcom
in
sub
aam
inc
fistp
retf
xor
cmc
rcl
test
leave
clc
add
jge
mov
mov
and
cmp
and
sbb
jl
or
xor
push
in
dec
ret
xchg
jno
xchg
lds
sbb
in
mov
movs
mov
ds
pop
fs
jmp
les
nop
aad
jo
jbe
xlat
das
aas
call
and
shl
daa
fnstcw
aaa
mov
ret
adc
add
xor
in
test
pop
or
and
lock
scas
enter
fwait
adc
jno
(bad)
cmps
pushf
push
andps
sbb
cmp
(bad)
out
mov
(bad)
in
sub
mov
mov
test
rcr
sbb
iret
cmc
mov
adc
and
clc
jmp
(bad)
push
or
fcomp
mov
mov
fst
xchg
mov
mov
xchg
push
or
add
add
ret
push
cs
scas
rcl
ja
cmp
jmp
or
mov
gs
mov
fxch
sar
mov
or
repz
je
popa
mov
pop
fld
dec
les
(bad)
lds
add
dec
jo
push
and
stos
add
and
mov
pop
jae
or
dec
fsubr
mov
sahf
lods
into
sbb
(bad)
adc
sub
dec
mov
sub
push
in
push
lods
fscale
jb
lea
cmps
js
out
push
shl
and
ss
adc
scas
test
pop
data16
cmp
mov
call
pop
dec
push
xchg
inc
and
pop
jp
sub
mov
int
xchg
fdiv
pop
lods
fimul
pop
mov
jge
ret
or
push
popa
rol
jbe
loopne
stos
xchg
stos
jmp
out
cmp
ss
test
mov
jmp
js
dec
mov
cld
adc
push
or
idiv
scas
push
adc
jns
loop
es
test
adc
clc
jnp
int
idiv
out
xlat
cmp
cmp
test
mov
or
neg
ins
jecxz
pop
cwde
jp
sbb
pop
cmps
push
and
lahf
push
lock
add
js
sbb
ja
push
dec
icebp
jle
or
xor
push
(bad)
clc
bound
and
iret
xor
mov
dec
adc
js
dec
xchg
dec
adc
xor
and
out
sbb
mov
in
pop
add
sbb
cld
jno
fwait
outs
add
outs
pop
(bad)
jge
pop
jne
sti
push
cmp
cmps
xchg
sub
call
push
sahf
xor
out
or
retf
add
ret
repz
xor
ja
xor
fst
push
jmp
sbb
cmp
push
clc
mov
add
xchg
cmp
test
aad
hlt
push
ins
arpl
rol
pop
fisubr
cmp
adc
pop
mov
repnz
inc
cmp
fidiv
mov
mov
cmps
std
and
daa
xchg
(bad)
shr
(bad)
test
loope
in
daa
push
cmp
push
pop
jo
mov
sar
adc
icebp
sahf
ret
cmp
lds
bound
push
cli
mov
ret
or
dec
sub
mov
sub
xor
rol
jbe
pop
leave
fstp
ja
dec
cmp
add
jae
xchg
or
retf
mov
test
or
xchg
call
sahf
dec
adc
adc
sub
and
inc
xchg
sub
xchg
push
add
(bad)
jp
jae
push
cld
sar
(bad)
fimul
mov
xchg
shl
icebp
or
push
inc
jmp
ins
das
xchg
mov
jns
mov
sti
or
mov
mov
push
stos
sbb
fild
push
loope
mov
adc
hlt
iret
(bad)
mov
fisubr
fdiv
dec
jg
inc
and
sar
pop
frstor
(bad)
imul
gs
sub
out
ss
aaa
popa
cmp
into
ins
data16
mov
mov
push
sub
adc
jmp
mov
xchg
popa
loop
or
sahf
dec
push
ins
outs
into
sahf
cmps
rcr
or
nop
push
mov
fcomp
repz
cmp
js
mov
cmps
or
xchg
xchg
push
add
sbb
xor
xor
pop
sbb
xchg
jmp
imul
in
mov
rcr
rol
fst
mov
(bad)
dec
scas
sbb
pop
daa
adc
rcl
pop
xor
hlt
jp
loop
mov
cmp
push
add
sub
movs
mov
and
cmp
dec
mov
jne
shl
pop
sbb
repnz
sub
mov
std
je
rol
jle
popf
lahf
popf
push
ds
icebp
jp
xlat
xchg
call
mov
and
jbe
jmp
cwde
repz
pop
cmp
or
test
push
mov
repnz
pop
or
push
or
loopne
mov
ja
or
out
(bad)
sahf
pop
add
pop
mov
jecxz
xchg
loopne
aam
out
sbb
fucomi
adc
pop
push
inc
out
xor
mov
sbb
push
jle
mov
push
dec
xor
adc
inc
xor
mov
inc
jle
adc
mov
mov
xor
pop
xchg
repnz
(bad)
adc
push
cmp
push
arpl
pusha
(bad)
jmp
inc
shl
pop
or
sub
mov
fnsave
stc
nop
push
ret
sbb
jle
pop
push
mov
and
cmp
loopne
add
lahf
fisttp
mov
pop
push
cld
sub
jmp
fs
std
add
jmp
adc
pop
and
fld
jecxz
pop
sbb
sbb
aaa
adc
aad
adc
mov
inc
xor
and
mov
pop
xor
outs
and
(bad)
push
fidiv
xor
cmp
sub
call
mov
test
xor
mov
pop
jl
adc
push
fs
not
in
xchg
out
in
add
(bad)
or
pop
stc
push
mov
cli
rcl
stc
ret
fist
lea
inc
push
div
and
pop
jle
fcom
mov
bsf
std
and
add
cmp
push
gs
push
pop
sahf
push
jl
sbb
(bad)
mov
sbb
loopne
popa
mov
pop
jne
jge
(bad)
pop
push
stos
push
and
jno
fidivr
bound
popf
ins
or
dec
or
pop
sub
stos
cmps
jmp
sbb
adc
loop
idiv
repz
mov
and
dec
rcr
add
push
outs
mov
pop
jmp
loop
cdq
mov
xchg
dec
mov
xchg
(bad)
or
jns
push
std
xlat
sbb
mov
dec
lods
push
pusha
(bad)
fidivr
xchg
xor
and
cs
cmp
mov
call
xor
std
and
sbb
jne
cmp
rcl
ds
loopne
add
dec
cmp
xchg
mov
cmp
sbb
sub
jecxz
ds
mov
aam
dec
and
retf
xchg
cmc
jl
pop
mov
jecxz
add
inc
cmp
gs
xchg
aaa
ds
xchg
fdiv
call
cmp
cmc
out
pop
ja
cmp
ins
jge
out
js
mov
add
cmp
mov
outs
or
sub
pop
mov
(bad)
mov
add
xchg
mov
call
jne
retf
inc
or
push
cmp
imul
xchg
test
jmp
les
pop
mov
mov
or
mov
std
jb
inc
fwait
lea
sbb
push
cmp
mov
nop
out
xor
sti
mov
(bad)
jno
scas
in
jge
xchg
push
gs
out
jne
push
xor
(bad)
sti
scas
push
jo
push
test
mov
test
jo
add
push
sub
loope
sub
sub
enter
sbb
add
cmp
xchg
test
push
in
jg
jle
dec
ja
xor
sbb
stos
mov
add
jmp
push
aaa
out
dec
(bad)
fadd
sub
scas
fild
add
fmul
xchg
(bad)
mov
repnz
cmc
fidiv
lods
mov
fisubr
leave
ss
sar
sbb
imul
and
loope
loope
adc
inc
adc
in
call
dec
mov
cmp
pop
dec
(bad)
stos
stc
aam
jmp
fcmove
mov
mov
scas
out
call
enter
xor
push
xchg
dec
leave
mov
mov
pop
push
scas
call
add
mov
xchg
jp
cwde
dec
inc
cmp
test
(bad)
sbb
leave
rcr
or
inc
sbb
dec
dec
loope
sbb
outs
loop
sbb
gs
rol
aad
or
pop
mov
pop
out
pop
xor
rcl
push
into
push
jp
pop
mov
xchg
push
enter
xchg
sti
push
cwde
bound
xchg
jle
(bad)
aad
int3
sub
aas
xchg
push
mov
mov
xor
mov
sbb
pusha
pop
pop
dec
and
push
mov
mov
pop
add
scas
mov
sti
add
adc
js
out
scas
xor
mov
ss
sub
les
sahf
call
shl
fmul
inc
pop
mov
jle
inc
adc
hlt
fld
or
rcl
pextrw
mov
popa
dec
out
imul
retf
ficom
adc
or
rol
test
xor
sbb
movs
dec
cmp
xor
mov
inc
sbb
loopne
add
mov
push
sar
xor
ficomp
add
ds
test
push
test
sub
jnp
shl
jmp
aaa
mov
push
icebp
lods
xchg
pop
pop
popa
sti
jge
add
xchg
add
aas
mov
loopne
rcr
push
pusha
std
sub
dec
jmp
inc
(bad)
mov
sub
sbb
jmp
(bad)
mov
jge
retf
loop
add
retf
sub
jg
mov
test
cmp
mov
mov
mov
mov
push
push
imul
adc
ds
dec
jb
sbb
cmp
(bad)
cwde
xchg
or
or
icebp
je
sbb
addr16
pop
cmp
inc
ffree
jae
jno
xchg
stc
dec
test
popa
jmp
push
jmp
adc
cmp
in
test
mov
inc
and
jo
adc
sti
xlat
pop
add
mov
dec
sub
lods
mov
pop
add
test
add
cmps
pop
cmc
hlt
adc
int
push
not
ins
aas
retf
out
in
rcr
inc
out
xchg
mov
mov
std
inc
pop
imul
scas
jg
je
jnp
out
push
clc
xchg
or
pop
(bad)
dec
fistp
in
imul
jge
leave
mov
push
mov
sub
loopne
outs
dec
mov
mov
add
dec
loop
hlt
mov
dec
jb
push
jns
call
es
int
pop
mov
or
push
or
push
test
daa
mov
mov
repnz
lock
sub
(bad)
adc
lods
enter
clc
mov
ret
mov
and
retf
neg
sub
arpl
adc
add
add
and
rcr
out
dec
add
sbb
inc
aam
aas
call
shl
dec
pop
js
icebp
fcom
cmp
mov
sbb
jle
lods
mov
arpl
ins
fist
jne
mov
jmp
adc
ret
shl
add
adc
jo
jns
jle
push
jnp
xchg
cmp
or
cmp
jo
adc
jbe
repz
push
mov
out
jbe
push
out
ret
lods
inc
or
push
inc
loopne
cmps
das
xlat
cld
sbb
jg
xchg
dec
jmpw
cmp
xlat
cmc
pop
xlat
rcr
or
jns
sbb
mov
dec
in
test
mov
loopne
pop
cmp
imul
mov
cmp
xchg
cmp
imul
xchg
mov
popa
jl
and
xchg
imul
sub
fidivr
clc
ins
xchg
cmp
jp
mov
xor
mov
and
pop
(bad)
sbb
or
cld
das
je
pushf
test
xor
out
lea
jae
inc
adc
je
add
es
adc
(bad)
outs
cmp
retf
into
xchg
xor
add
pop
in
push
ret
fucomp
lea
inc
or
(bad)
cli
shl
shl
and
bound
shr
xchg
cmp
or
nop
sub
mov
cli
add
jl
imul
aad
into
xchg
mov
ja
pop
sub
out
cmps
(bad)
test
cmp
mov
push
and
xchg
iret
outs
and
loop
pop
rol
mov
call
mov
pop
sbb
cs
das
lock
inc
fsub
int3
cli
push
shr
into
or
inc
xchg
clc
scas
out
cmp
jne
push
arpl
scas
or
dec
leave
enter
jns
aas
or
cwde
mov
inc
jmp
and
add
cmp
xchg
in
movs
or
cmp
js
fidivr
add
push
and
imul
bound
pop
cmps
mov
sbb
xchg
das
xor
and
jo
aas
xor
push
test
(bad)
int3
arpl
mov
jne
call
bndstx
sub
xor
and
mov
fcmovnu
mov
mov
sub
fbstp
pop
push
das
xchg
iret
xchg
int
in
pop
and
je
outs
mov
sbb
pop
xlat
adc
sub
sbb
add
mov
xor
loope
(bad)
and
push
dec
jno
dec
cdq
icebp
bound
sub
or
inc
dec
lahf
leave
mov
shl
jo
dec
xchg
inc
addr16
xchg
mov
mov
add
cmp
addr16
and
(bad)
xchg
scas
pop
lods
fabs
clc
inc
mov
in
std
or
add
jmp
xchg
jo
jg
arpl
inc
adc
pushf
push
mov
int3
cmp
in
fmul
fstp
(bad)
ffreep
fistp
xor
rcr
in
sub
adc
and
fsubr
fdiv
xchg
cli
and
sbb
pop
data16
ins
cmps
push
fsubr
fs
in
xor
(bad)
leave
xor
xor
nop
xor
xchg
mov
xchg
add
int3
xchg
sbb
gs
test
loope
pop
mov
mov
jns
(bad)
leave
adc
je
test
fwait
cmp
mov
sub
repz
inc
outs
out
gs
jne
jae
mov
xchg
add
jge
in
sbb
out
daa
sbb
scas
rol
cmp
dec
add
add
or
arpl
sbb
add
stc
in
xor
das
jne
dec
mov
xor
xchg
addr16
test
push
adc
popf
fst
ins
adc
clc
xchg
push
cdq
jb
jns
mov
or
mov
pop
mov
mov
mov
mov
fbld
adc
jmp
mov
mov
push
or
fiadd
outs
mov
arpl
or
outs
mov
push
cmp
jmp
mov
inc
xor
mov
jno
stos
mov
inc
call
cmp
xlat
add
and
test
jl
sub
mov
pop
stos
jecxz
cwde
xor
dec
sti
mov
dec
dec
cmp
repnz
sar
push
push
xor
pop
mov
in
hlt
icebp
ror
jl
sub
scas
cmps
push
retf
lods
mov
das
cmps
aam
xor
cmp
and
mov
icebp
in
ror
in
popa
enter
mov
leave
adc
stos
inc
ins
and
test
sbb
ror
jmp
lds
pop
mov
jbe
xchg
out
xchg
cmp
mov
ins
repz
jmp
mov
out
push
jle
fs
adc
(bad)
fbld
pop
push
push
call
leave
lahf
call
lods
inc
pop
test
int3
fistp
jmp
add
call
pop
mov
or
fnstcw
es
xchg
mov
or
mov
xchg
icebp
leave
test
pop
int
js
add
dec
dec
mov
inc
mov
or
add
and
lea
cwde
pop
fwait
push
or
push
xchg
xor
scas
(bad)
lds
movs
sub
xchg
inc
outs
jmp
xor
cmp
test
shl
pop
xor
xor
shr
ret
xor
sub
out
adc
push
jle
lds
retf
mov
xchg
in
out
int3
cmps
fneni(8087
fistp
(bad)
sub
aad
lahf
mov
mov
call
fisttp
mov
dec
cwde
adc
jo
pop
mov
popf
mov
bswap
cmc
shl
push
or
jnp
daa
daa
and
out
jg
push
nop
test
or
movs
dec
fdiv
es
xchg
and
gs
xchg
jle
and
adc
sub
mov
stc
hlt
cmp
and
fs
xchg
or
add
dec
pop
loopne
dec
jmp
push
push
into
lods
xor
xor
test
les
and
or
movs
sub
gs
test
enter
aas
xchg
pmullw
fadd
pop
jne
int3
into
inc
and
mov
jbe
cld
or
nop
dec
mov
loopne
dec
call
cmp
(bad)
push
fimul
lods
xor
xlat
inc
push
out
dec
hlt
mov
fistp
dec
mov
jb
dec
repnz
(bad)
outs
(bad)
test
jns
bound
push
mov
cmp
add
inc
ja
mov
xchg
push
clc
fcom
outs
jecxz
xor
fisttp
loop
(bad)
pop
cdq
push
xor
aas
xchg
cdq
adc
dec
movs
cmp
mov
sahf
mov
mov
pushf
add
icebp
jecxz
nop
sub
push
jmp
cmp
rcr
add
and
mov
scas
pusha
call
pop
out
adc
fcom
outs
jmp
jp
jno
ss
lea
xor
cmp
ds
sub
xlat
retf
pop
test
cmp
jno
jl
pusha
ficomp
pop
xor
mov
mov
lock
push
dec
xchg
sub
sbb
lock
inc
les
jbe
cmc
mov
fs
push
ror
mov
adc
arpl
rcl
popa
mov
xchg
mov
jmp
lods
push
cmp
(bad)
adc
lods
push
into
push
and
fsubp
cmp
mov
stc
aam
outs
int3
and
inc
cmp
jmp
(bad)
cmps
mul
inc
mov
or
test
push
(bad)
cmp
daa
push
adc
mov
add
into
(bad)
jo
xchg
adc
ret
dec
push
scas
mov
(bad)
lock
call
fcmovbe
inc
sbb
int
ror
jns
push
xchg
sbb
jno
push
test
add
repz
test
bound
cdq
lods
pop
add
inc
pop
xchg
mov
xor
mov
repz
mov
test
neg
inc
mov
sub
xchg
lea
jae
jbe
cmp
xor
push
sti
ret
or
sbb
xor
push
call
mov
es
enter
inc
popf
xor
(bad)
xor
jmp
cli
jb
pop
scas
mov
test
sub
into
xchg
shl
and
cmp
xchg
push
ins
(bad)
mov
sbb
xchg
dec
mov
sub
push
sbb
or
bound
jo
repz
cmp
ret
mov
cmp
add
sbb
push
xlat
or
inc
xchg
movs
nop
loop
call
sbb
jmp
pushf
outs
fwait
rcr
ret
into
dec
jl
sbb
jae
xor
pop
lods
jns
inc
or
(bad)
pop
movs
(bad)
pop
cdq
gs
movs
pop
mov
std
dec
movs
mov
aaa
ror
retf
ret
xchg
cmps
in
xchg
jmp
mul
(bad)
leave
jo
mov
inc
cmps
fadd
retf
stc
add
pop
or
(bad)
pop
stc
(bad)
mov
sub
mov
leave
dec
lahf
enter
gs
into
adc
fsub
cmp
jb
cmp
jmp
sar
mov
into
inc
jmp
jne
fcmovnu
adc
stc
clc
dec
xlat
ret
inc
xlat
je
(bad)
jp
mov
xor
add
jg
sub
gs
sub
jecxz
inc
jecxz
clc
xchg
cmps
jecxz
aam
lods
inc
and
adc
ret
pushf
mov
push
out
imul
sub
scas
mov
jl
push
mov
cmps
xor
(bad)
xchg
iret
fistp
outs
jb
sbb
ret
pop
xchg
or
shl
int
movs
(bad)
(bad)
(bad)
test
aaa
out
inc
jge
or
sub
adc
stc
fmul
push
mov
rcr
ror
aam
call
call
adc
pop
sub
call
mov
or
fbstp
retf
sbb
ins
pop
cmp
das
cmp
out
sbb
gs
loopne
dec
sub
cdq
pop
sub
push
mov
aas
movs
loop
push
jg
and
pusha
(bad)
mov
retf
mov
mov
pop
imul
popf
xchg
lock
push
sub
arpl
xchg
or
cdq
inc
and
rcl
dec
add
xor
mov
or
add
pop
arpl
push
loope
jecxz
lock
outs
add
into
sub
out
dec
or
mov
dec
push
(bad)
addr16
cmp
jne
aas
test
push
fs
ds
dec
sbb
lds
jmp
outs
add
loope
call
repz
push
or
dec
call
aas
jno
ds
jb
mov
or
or
push
fnstsw
or
les
mov
arpl
iret
pop
sbb
popf
add
stc
imul
(bad)
inc
xchg
inc
jns
push
nop
movs
cmc
adc
lahf
aaa
fidiv
jno
xchg
adc
pop
ins
(bad)
aam
mov
dec
and
lea
xchg
xchg
adc
sub
xchg
(bad)
test
inc
call
pop
inc
lods
jmp
retf
les
and
and
gs
sub
mov
in
hlt
pop
mov
mov
jne
jbe
dec
ins
popf
int
(bad)
pop
pop
jns
cmp
out
hlt
dec
ss
aaa
cli
in
in
test
(bad)
fidiv
mov
cmp
sub
test
jmp
adc
fwait
loope
mov
xchg
xchg
lahf
mov
mov
outs
mov
pop
and
ficomp
je
add
push
cmc
mov
cmp
xchg
sub
nop
mov
cli
pop
lahf
sbb
xor
jl
mov
sti
xchg
sub
fcomi
inc
movs
or
pop
xor
pop
or
cmp
inc
xlat
lods
aad
dec
int3
xor
jbe
jo
pop
fsub
ins
aas
int
cwde
or
cwde
call
jb
outs
dec
jp
pop
xchg
loopne
xor
jge
cmp
je
cmp
mov
pop
xor
inc
outs
pop
popa
cmp
mov
sub
enter
and
shr
loopne
call
pop
add
or
arpl
(bad)
push
jae
popf
adc
adc
fs
cwde
inc
pop
sbb
pop
les
in
and
mov
mov
in
dec
(bad)
nop
dec
or
or
fiadd
jmp
mov
jno
retf
out
push
xchg
and
fcmovnbe
fisttp
sbb
dec
fsubr
xor
sahf
das
jns
cwde
xchg
ds
mov
adc
call
or
mov
rcr
pop
or
test
push
xor
js
ds
push
cmp
outs
mov
sbb
mov
inc
jo
aad
xlat
cmp
sub
outs
pop
add
push
mov
inc
cmp
pop
call
and
adc
xchg
shl
in
js
jl
neg
aam
pop
aad
shl
dec
push
xchg
outs
addr16
(bad)
push
dec
loope
scas
out
mov
xor
mov
fisttp
dec
cmps
mov
daa
sbb
popa
mov
enter
jp
jae
aaa
xchg
cmps
cwde
xchg
xchg
jo
xchg
loope
jmp
and
mov
outs
or
mov
mov
cmps
sbb
xchg
cwde
push
shl
punpcklwd
rcl
movs
mov
int3
fwait
and
dec
fstp
sar
stos
cmp
add
cli
fimul
jmp
movs
and
push
je
xchg
call
les
pushf
gs
sar
js
movs
add
or
sbb
(bad)
int
(bad)
push
adc
inc
loop
loop
add
pop
push
cmc
add
fwait
sub
mov
cwde
sub
cmps
push
xor
out
imul
xchg
in
retf
cmp
mov
ins
stc
sti
or
nop
jb
inc
inc
(bad)
or
jg
out
fwait
push
das
xchg
ficom
and
jns
fwait
inc
push
add
inc
mul
pushf
es
dec
mov
adc
jmp
scas
mov
mov
lods
iret
aaa
out
sbb
jnp
(bad)
out
rol
out
shr
adc
jne
adc
xor
jmp
adc
inc
js
popa
push
in
cmp
sub
xor
push
into
fst
mov
mov
xor
gs
sub
cmp
popf
leave
(bad)
(bad)
adc
or
xrstor
icebp
ds
mov
push
popa
ret
xchg
dec
nop
mov
sar
add
int3
mov
xchg
add
cmps
aas
aad
out
daa
push
xor
cmc
inc
inc
ins
pop
out
(bad)
jb
pop
dec
xchg
push
ficom
test
lods
lods
aam
mov
jmp
or
xor
rol
bound
pushf
add
dec
test
add
dec
push
js
push
mov
mov
ins
mov
adc
push
pop
push
push
jecxz
dec
dec
(bad)
in
ins
loopne
jnp
lea
push
loope
mov
dec
mov
(bad)
jmp
mov
cmc
arpl
mov
or
js
addr16
xor
jno
mov
push
push
push
or
inc
out
retf
aaa
mov
je
mov
daa
xchg
push
icebp
sbb
xchg
sub
mov
mov
adc
xor
inc
fs
jmp
out
inc
mov
xchg
cs
mov
adc
fisttp
ins
mov
aas
mov
push
loop
retf
xor
mov
or
outs
xor
mov
sub
sti
cmp
pop
cdq
mov
xchg
(bad)
push
fiadd
jnp
aas
retf
dec
and
out
mov
adc
sti
in
pop
add
icebp
jo
inc
pushf
pop
pop
xor
pushf
repz
inc
mov
repz
ins
enter
dec
cs
inc
rol
dec
and
xor
mov
push
neg
adc
dec
ret
inc
dec
stos
retf
pop
cmp
ror
popf
aam
xor
inc
sahf
and
xchg
std
pop
mov
sahf
xor
xchg
or
test
call
sbb
sub
xchg
int3
xchg
sti
inc
outs
jbe
add
lods
mov
jecxz
div
add
push
cmp
and
mov
(bad)
mov
psubq
mov
xchg
mov
inc
mov
push
or
retf
lea
push
pop
jbe
enter
aam
cmps
lds
xor
popa
outs
clc
enter
sbb
cmp
mov
sub
pop
jnp
div
mov
push
mov
and
push
cld
ds
pop
fs
push
mov
xchg
dec
jno
push
add
pop
inc
push
xor
ret
clc
ja
ret
cdq
mul
rcl
cdq
jge
sti
pop
(bad)
inc
call
sahf
std
and
mov
scas
mov
mov
mov
ret
and
cdq
fild
je
popf
add
sbb
sbb
shl
inc
cmp
test
loop
sbb
jnp
jb
bound
sbb
xor
adc
fiadd
adc
inc
jecxz
add
add
add
jl
and
inc
test
cmc
cdq
adc
mov
or
cmp
mov
pop
fldenv
dec
jecxz
jg
xchg
cli
dec
in
bound
mov
mov
jo
jg
mov
test
push
inc
mov
mov
ret
lods
jle
or
and
rcr
fld
jge
retf
or
shl
adc
adc
inc
sub
call
adc
add
rcr
xchg
jne
inc
cmc
pop
pop
pop
pop
mov
icebp
enter
aas
mov
(bad)
xlat
repnz
or
and
dec
shr
ins
mul
test
cmp
lahf
into
in
dec
adc
pop
mov
aad
push
push
cmp
in
sub
retf
sahf
pop
imul
repz
test
xchg
call
push
or
sbb
fdiv
addr16
xchg
aas
inc
into
pop
rol
dec
sub
scas
(bad)
pusha
xchg
push
xchg
mov
lods
mov
xchg
jmp
push
cmps
pop
stos
jg
sbb
icebp
aam
inc
movhps
pop
imul
pop
movs
mov
inc
xor
fbld
cmp
pop
push
adc
pusha
sbb
in
mov
or
call
je
cmps
mov
aad
and
push
arpl
or
mov
and
mov
pop
pop
hlt
rol
mov
xor
stos
cdq
xor
add
stos
outs
leave
or
div
and
mov
outs
xchg
shl
sbb
(bad)
ror
or
adc
gs
push
sti
test
and
js
cwde
jmp
call
mov
pop
(bad)
jo
inc
jg
or
sahf
outs
mov
and
sbb
jg
jmp
mov
loop
frstor
mov
xor
gs
ins
inc
fsub
jp
lods
push
add
push
add
bnd
mov
mov
leave
rol
inc
cmc
icebp
cmovs
cmps
popa
rcl
cmps
sbb
sbb
mov
fbld
xchg
or
cmp
mov
xchg
or
mov
pop
inc
(bad)
push
out
pop
mov
jno
aad
(bad)
fld
(bad)
cmp
rcl
adc
mov
test
outs
xchg
fist
call
icebp
cmp
mov
push
iret
popf
ins
or
sbb
fiadd
aaa
fcmovnb
(bad)
and
sub
pusha
aaa
xchg
mov
movs
rcr
mov
mov
push
jae
movs
push
push
dec
push
push
cmps
dec
out
in
jne
test
scas
jmp
nop
into
pop
pop
sbb
(bad)
fld
mov
cwde
mov
in
ds
call
lods
dec
jo
cmp
sar
clc
jb
je
retf
jle
(bad)
(bad)
retf
test
cmp
mov
inc
dec
stos
in
aad
jl
push
in
call
pushf
ins
or
and
or
pop
mov
loope
cmp
(bad)
stos
xor
and
or
pop
pop
jg
xchg
push
sbb
ins
xchg
jns
cmp
in
push
push
mov
leave
aaa
movs
iret
push
add
pop
pop
lea
adc
jecxz
inc
scas
mov
cld
push
aas
lock
jmp
stos
cmc
call
lea
or
call
add
push
sbb
pop
aaa
xchg
mov
es
xchg
ret
jno
call
test
mov
(bad)
sub
and
dec
js
lahf
sbb
mov
loopne
(bad)
mov
or
mov
in
sbb
mov
jge
pusha
mov
call
jge
jbe
jmp
popf
out
jns
dec
scas
mov
inc
mov
jb
es
in
pop
pop
push
pop
imul
push
jbe
arpl
jno
xchg
push
mov
add
mov
in
xchg
retf
repz
movs
and
inc
xchg
iret
jmp
enter
push
pop
ins
js
mov
or
dec
xor
sub
sbb
iret
add
mov
jmp
dec
dec
xchg
retf
sub
das
enter
mov
sbb
xacquire
in
jp
stos
test
mov
adc
xchg
cmps
shl
sub
cld
xor
lods
(bad)
fld
or
sub
stos
or
mov
push
jo
stos
xor
xor
adc
mov
sub
jae
fnstenv
gs
jl
xor
(bad)
dec
addr16
scas
xchg
lock
imul
mov
pusha
scas
push
fld
add
dec
push
jmp
(bad)
shl
inc
stc
aad
xor
mov
fst
xor
rol
adc
adc
(bad)
or
fsubr
loop
cmp
(bad)
test
xchg
push
adc
xchg
sbb
scas
mov
loop
js
iret
jle
and
adc
mov
icebp
jl
and
push
into
stos
xchg
jmp
push
sar
dec
pop
mov
pop
fchs
sbb
mov
lock
rol
in
pop
push
fst
dec
push
call
out
mov
mov
sbb
push
int
cmp
es
xchg
cmp
mov
cmp
call
add
xor
rcr
clc
aam
mov
dec
iret
pushf
xchg
cwde
pop
jl
mov
enter
test
jb
jp
mov
mov
sbb
dec
cmp
jle
call
outs
mov
imul
rol
inc
mov
xor
mov
mov
test
aaa
mov
addr16
adc
imul
rcr
jmp
ret
lods
sbb
sbb
pop
push
sub
pop
loopne
out
jo
cmp
cmp
push
les
push
out
push
rcr
fistp
pop
cs
add
shr
daa
jbe
dec
dec
icebp
std
repz
sar
jmp
nop
bound
ficomp
mov
adc
mov
push
movs
adc
daa
and
in
jne
xor
sbb
xchg
dec
mov
cmp
xlat
cmps
mul
std
push
adc
mov
hlt
pop
push
jbe
sub
out
(bad)
ins
or
ins
lock
cmovnp
ins
xor
push
movs
push
jmp
cdq
retf
int3
mov
jp
cwde
mov
xchg
test
jl
popf
add
adc
and
mov
push
into
call
sar
std
sbb
out
(bad)
fidiv
dec
(bad)
dec
push
jmp
stos
lock
push
push
shr
fbld
cmp
scas
test
push
sub
enter
adc
adc
mov
bound
add
lahf
es
les
fdivr
loopne
mov
retf
shl
xchg
dec
arpl
inc
adc
and
jp
xor
cmp
xor
sub
cmps
jno
rcr
pop
popa
je
inc
or
int
mov
cmc
jle
fistp
aas
jo
ror
mov
and
les
hlt
dec
or
push
sbb
or
mul
scas
cwde
(bad)
fs
idiv
out
(bad)
mov
sub
sub
in
ds
jmp
ja
ins
push
cmps
sub
repz
mov
(bad)
jge
mov
push
movs
gs
add
aam
mov
cld
mov
int3
pop
shr
int3
addr16
dec
mov
xor
jne
hlt
cmp
in
sub
leave
ret
(bad)
cld
and
hlt
push
mov
inc
mov
jmp
out
or
cmp
js
push
inc
sbb
inc
fsubr
and
add
inc
push
in
xchg
jns
xor
add
mov
ret
in
xchg
aam
test
xchg
or
hlt
xchg
xor
retf
jl
push
adc
lock
outs
imul
fcom
bound
and
clc
(bad)
retf
in
dec
shl
lahf
sub
ins
aam
int
sbb
jns
and
ss
add
ss
dec
lock
and
jl
jmp
mov
lock
jmp
add
mov
add
bound
add
lds
leave
xor
mov
mov
(bad)
sbb
xchg
mov
or
mov
jmp
leave
ret
inc
icebp
add
ror
in
jecxz
mov
les
mov
fstp
rcl
sbb
mov
add
sub
dec
mov
dec
xchg
mov
clc
pop
xor
in
pushf
pop
and
jge
xor
in
jbe
or
push
pop
and
mov
les
mov
jae
pop
into
mov
div
dec
inc
adc
push
fs
add
fisttp
ins
jns
lock
repz
cli
mov
dec
push
dec
cwde
xor
xchg
icebp
push
cmc
and
lods
retf
pop
or
rep
cwde
pop
sbb
pop
mov
sub
push
pop
ror
jecxz
sbb
dec
jmp
sub
sub
ficom
ins
popa
dec
imul
xchg
sub
sub
stos
sbb
sub
ficom
daa
daa
fwait
push
scas
push
clc
cmp
inc
fist
(bad)
sub
test
loopne
sar
bound
jb
pop
loop
adc
(bad)
pop
cmc
xchg
popa
and
sub
pop
cmp
ror
call
jmp
sub
(bad)
out
in
unpcklps
lock
dec
je
cmps
adc
fld1
jbe
shl
mov
jb
adc
sbb
lds
xchg
push
imul
push
or
daa
sahf
mov
ins
out
mov
fs
jb
dec
lods
jo
(bad)
push
sahf
aaa
in
dec
mov
push
mov
loopne
inc
cmp
cdq
fidivr
pop
jb
add
out
leave
sub
call
pop
push
jmp
imul
mov
lahf
nop
stos
push
jns
rol
pop
mov
mov
fs
dec
pop
dec
out
mov
retf
and
jo
loop
outs
and
mov
popa
loopne
xchg
out
jmp
mov
jo
sub
jae
mov
inc
jmp
sub
js
stos
es
scas
in
push
fsub
inc
sbb
mov
cmp
push
test
jno
mov
rcr
data16
(bad)
into
in
add
test
retf
stos
ins
add
stos
xchg
fisub
push
and
pop
iret
sti
xor
adc
stos
pop
shl
mov
stos
mov
pop
xchg
int
mov
repnz
jns
out
add
and
mov
test
rcl
adc
sar
adc
push
mov
add
outs
(bad)
rcr
iret
fwait
fs
add
mov
int
push
jmp
fmul
gs
add
jnp
hlt
rcl
dec
mov
mov
mov
push
loop
add
push
jb
(bad)
ficom
dec
mov
sbb
cdq
jecxz
(bad)
cmps
in
xor
mov
mov
pop
pop
fist
loop
pusha
sti
pop
inc
mov
cwde
aam
aam
nop
xor
cdq
push
call
(bad)
mov
adc
and
xchg
aad
and
loopne
xchg
call
(bad)
add
sbb
mov
pop
in
(bad)
iret
sbb
and
dec
sbb
or
movs
adc
xchg
mov
jbe
jae
push
adc
movs
dec
dec
jae
shr
loopne
add
gs
mov
(bad)
add
jecxz
adc
arpl
add
imul
cs
dec
xor
cwde
and
xchg
or
mov
out
dec
jl
xor
loop
pop
call
mov
fimul
fadd
xor
mov
or
cs
lahf
mov
cmp
sahf
mov
and
add
popf
xor
inc
dec
imul
mov
(bad)
mul
dec
or
mov
leave
mov
scas
jmp
cmp
fwait
aaa
push
and
adc
or
add
imul
int3
(bad)
sbb
pop
or
or
pusha
data16
(bad)
push
ror
push
xor
dec
jo
mov
dec
dec
and
(bad)
call
sbb
mov
cmps
dec
js
jns
sbb
(bad)
xor
(bad)
sbb
mov
ins
push
mov
and
aam
and
xor
loopne
push
push
mov
cmp
add
sbb
inc
ds
gs
cmp
fld
pushf
aam
dec
fnsave
cmp
and
dec
jmp
xchg
add
or
inc
and
sbb
xor
cld
call
test
ss
int3
jno
mov
lods
(bad)
pop
and
mov
(bad)
push
popf
pushf
movs
fdiv
sub
fcmovnb
jge
ffreep
mov
mov
call
enter
jecxz
(bad)
jae
addr16
dec
(bad)
mov
and
pop
pushf
cli
inc
ror
mov
fcmovne
mov
jecxz
icebp
jbe
inc
les
push
fldcw
xor
repz
pop
xchg
sbb
movs
xchg
add
add
test
add
shl
imul
cmps
mov
mov
test
lock
fldenv
xchg
in
sub
mov
and
cwde
mov
std
or
xor
loop
adc
or
cmps
mov
and
pavgb
push
sbb
cwde
(bad)
push
pop
mov
clc
push
inc
sbb
or
add
ins
(bad)
jno
loop
clc
js
xor
xchg
cwde
fimul
jbe
sub
fisttp
sahf
inc
mov
pop
jp
leave
retf
into
jg
inc
jne
pop
ficom
fdiv
and
int
pop
inc
shl
or
mov
pop
adc
cs
inc
inc
xchg
ja
mov
inc
call
mov
or
mov
xchg
add
and
and
loope
adc
mov
cmps
test
(bad)
enter
and
ins
pusha
inc
inc
jnp
or
jg
inc
sub
jle
popf
or
push
mov
xchg
adc
in
mov
cmp
cmp
fcmovbe
(bad)
fimul
rcl
fnstsw
in
xchg
inc
mov
repz
and
iret
out
xchg
push
test
cmp
push
popa
frstor
sbb
push
jmp
xchg
inc
add
ret
mov
mov
xchg
mov
adc
enter
scas
adc
out
inc
xor
push
retf
xor
je
addr16
mov
retf
cmp
sub
addr16
push
repz
mov
(bad)
sub
xor
or
rcr
pop
jmp
je
std
mov
cmp
sbb
mov
mov
mov
mov
xchg
inc
push
xor
loopne
int3
xor
jecxz
inc
mul
xchg
jmp
jne
xor
call
mov
ins
adc
movs
sbb
mov
aas
jge
in
dec
cmp
loop
pop
adc
dec
and
cmp
or
fidiv
cmps
or
movs
pusha
jp
jno
jno
adc
outs
std
jmp
add
push
cmp
mov
(bad)
fadd
mov
push
(bad)
int
fucomp
test
pop
in
jmp
jns
ins
std
call
dec
jg
add
cli
pop
outs
loopne
pop
retf
test
mov
push
daa
retf
(bad)
jp
retf
inc
push
inc
xchg
pushf
mov
inc
sbb
data16
mov
sbb
xor
xor
mov
loope
or
push
aad
stos
shr
retf
sbb
addr16
and
(bad)
call
ds
jnp
jno
cld
jb
adc
inc
popa
fwait
xchg
(bad)
xchg
pop
fistp
fcomp
out
(bad)
ds
cld
sahf
jl
or
and
xchg
loop
jle
cmp
scas
sti
or
outs
adc
jns
xchg
adc
xchg
and
aam
shl
xchg
inc
sti
fild
jbe
arpl
add
xor
es
or
aaa
pop
sar
ins
mov
xor
and
mov
neg
je
cmp
repz
push
and
imul
in
lods
jb
push
hlt
cwde
fidivr
xor
xchg
dec
push
fistp
stos
mov
ds
lahf
adc
sbb
and
fld
gs
or
(bad)
pushf
xchg
dec
(bad)
fldcw
iret
mov
inc
ss
adc
not
ja
pop
jle
push
mov
fldcw
cwde
push
cmp
cdq
fs
cmp
xchg
adc
leave
mov
lds
push
addr16
mov
outs
out
push
inc
in
lds
test
cmp
inc
adc
fcom
outs
sbb
push
adc
sub
xor
(bad)
stos
mov
ss
xor
xchg
aas
out
fisub
out
sbb
dec
ins
adc
xor
add
cs
mov
jmp
ror
and
cmp
add
daa
mov
mov
rep
cmp
push
add
fisubr
arpl
dec
inc
lahf
es
mov
sub
hlt
call
dec
lea
inc
int3
(bad)
lahf
sbb
mov
in
mov
dec
or
test
xor
pusha
mov
sub
mov
adc
sub
fdivr
sbb
popf
push
loope
iret
aam
dec
sub
add
js
retf
and
inc
xchg
jg
cmp
xchg
jne
lock
mov
mov
and
dec
xchg
lods
pop
sbb
bound
(bad)
pop
mov
sub
adc
repnz
in
stc
pop
dec
pop
je
cwde
sub
fcmovnu
dec
pop
cmps
jmp
loope
into
inc
pop
xor
cmp
mov
mov
push
call
push
xlat
pop
into
dec
cli
inc
xor
test
mov
(bad)
fucomp
jl
mov
enter
inc
pop
popa
in
mov
fild
dec
call
inc
sbb
pop
pop
and
rol
movups
lds
(bad)
or
jecxz
pop
push
ss
or
push
or
mov
mov
cmp
push
mov
mov
aam
test
dec
std
fdiv
outs
mov
mov
xor
pop
mov
mov
test
and
repz
add
mov
jmp
pop
mov
sbb
push
xchg
jecxz
loopne
lods
mov
mov
(bad)
mov
retf
xchg
and
sub
ss
retf
fwait
pop
mov
push
(bad)
jl
cmp
repz
and
mov
inc
mov
fwait
div
xchg
outs
xor
cs
call
loop
test
int3
adc
inc
fwait
jne
sub
ficom
cs
adc
js
xor
ja
pusha
leave
jmp
(bad)
mov
les
cli
push
push
dec
xchg
das
lahf
mov
popf
add
outs
div
scas
cmc
popf
dec
fistp
inc
push
out
mov
movs
push
pop
ss
inc
xchg
pushf
rol
les
(bad)
aam
leave
dec
adc
rcl
xor
inc
fcom
repnz
dec
pop
mov
xor
cmp
lods
mov
inc
add
xlat
xlat
inc
std
js
nop
ja
sbb
mov
inc
ja
adc
clc
add
test
std
leave
nop
adc
push
daa
popf
sbb
mov
pop
leave
add
mov
stc
inc
adc
addr16
jnp
jg
stc
int3
dec
sub
fadd
dec
fst
push
xor
xsavec
pop
call
into
aad
mov
sub
mov
imul
push
shl
push
aam
mov
mov
pop
sbb
jnp
sti
(bad)
lods
mov
bound
adc
test
mov
push
stc
nop
loopne
inc
je
lds
mov
je
ss
dec
sub
ret
add
push
inc
clc
sub
xchg
cwde
dec
ins
mov
cmps
sub
mov
in
adc
mov
pop
(bad)
int3
ret
(bad)
jmp
das
sub
dec
inc
neg
out
out
sbb
aas
in
cwde
shl
xchg
or
cmp
repnz
sbb
jmp
xchg
inc
inc
inc
or
or
fisttp
dec
xchg
mov
int
and
xchg
into
mov
movs
sahf
mov
jmp
pop
fsubr
xchg
fsubr
sub
movs
rdpmc
pushf
jmp
loop
aad
out
sub
cmp
mov
mov
adc
mov
cmp
pop
retf
or
stos
test
lahf
push
leave
add
fnsave
jne
cmp
push
mov
int
inc
mov
inc
(bad)
and
aad
das
and
xor
jbe
jae
rcl
adc
cmp
cmp
adc
add
pop
cmp
inc
dec
in
test
pop
sbb
sbb
adc
fdiv
lods
std
(bad)
aaa
lods
xchg
je
loopne
(bad)
(bad)
call
push
cmps
test
cmc
sbb
mov
push
mov
mov
and
jmp
fimul
or
test
jb
sub
fisubr
scas
aaa
outs
push
sub
outs
and
aas
xchg
pop
push
test
mov
or
in
mov
addr16
inc
xlat
mov
xlat
jnp
neg
mov
xlat
sub
mov
mov
inc
pop
jnp
lds
hlt
xor
not
shr
dec
aaa
js
int
dec
in
mov
dec
daa
cmp
mov
lods
out
cmp
in
cmps
aaa
push
icebp
or
fldenv
stos
or
cmc
aad
dec
push
loopne
mov
inc
into
xor
cs
mov
int
sbb
(bad)
adc
adc
shl
pop
mov
push
leave
or
pop
(bad)
lea
shl
push
xlat
dec
gs
and
fld
add
jmp
push
neg
push
or
test
call
retf
xor
in
mov
adc
inc
adc
sub
adc
jge
or
pop
mov
sub
ror
xchg
cmp
dec
scas
pop
push
mov
or
cmp
pop
hlt
sbb
shl
in
mov
push
mov
mov
add
jae
jnp
mov
pop
dec
leave
push
sub
or
sbb
sbb
dec
xlat
fistp
cdq
test
add
mov
data16
cmc
and
test
ins
push
fwait
cmp
jp
push
add
mov
xchg
cmp
imul
(bad)
cmp
mov
push
jns
push
lods
inc
jmp
mov
std
adc
fs
ins
hlt
and
outs
out
mov
push
call
sbb
cmp
add
add
inc
xor
jb
fld
pushf
mov
int
mov
adc
call
ret
cs
rcr
dec
jle
mov
xor
push
aam
ja
repnz
sub
leave
mov
mov
(bad)
movs
mov
sbb
(bad)
loope
popf
cmp
mov
and
rcr
mov
sub
inc
int3
mov
test
popa
dec
addr16
pop
rcr
movs
pop
and
pusha
sub
or
mov
xor
mov
cli
xchg
adc
jge
xchg
fucomp
sbb
retf
(bad)
jp
cmp
pusha
test
imul
(bad)
out
dec
in
lahf
push
cmp
out
xchg
mov
xchg
out
mov
mov
ror
mov
jns
retf
xchg
stos
or
retf
stos
add
and
test
inc
hlt
loopne
dec
add
out
fnstsw
retf
add
and
ss
pop
sub
out
pop
mov
pop
std
(bad)
fstp
and
xchg
sbb
fdivr
cmp
sub
push
and
add
jge
dec
push
and
outs
adc
cli
fadd
ds
push
in
popa
xlat
ins
nop
sbb
or
pop
enter
test
jl
lods
shr
push
imul
dec
test
mov
arpl
mov
je
ret
adc
adc
sahf
gs
sbb
sbb
cwde
pop
inc
(bad)
fsub
or
inc
imul
push
dec
leave
ret
dec
hlt
and
jecxz
out
call
pop
or
mov
cmp
pop
adc
lods
mov
lahf
inc
add
push
dec
dec
cmp
mov
ins
jbe
outs
(bad)
mov
rcl
(bad)
mov
jecxz
jne
ret
push
push
iret
repnz
jb
mov
cmps
push
pop
dec
jg
inc
cmp
pusha
adc
push
ret
ret
les
test
dec
mov
(bad)
xlat
movs
sub
mov
call
dec
popf
(bad)
gs
repnz
mov
cdq
mov
scas
sbb
pop
adc
mov
mov
out
lods
sub
ins
sub
test
enter
nop
repz
aad
arpl
add
push
sbb
les
and
sbb
rcr
pop
jmp
sti
mov
les
mov
(bad)
mov
inc
xchg
push
or
repnz
mov
or
and
pop
loop
out
mov
test
loopne
iret
iret
pop
(bad)
lods
mov
xchg
in
push
jb
imul
aad
adc
std
sbb
mov
or
mov
cli
cmp
mov
adc
arpl
ins
in
pop
push
js
daa
popf
jl
outs
sbb
int3
rol
and
out
ja
mov
sub
scas
add
aam
jmp
cmp
in
sbb
in
dec
je
push
aam
int3
push
aad
mov
mov
ud0
push
sbb
int
inc
mov
cmp
and
push
dec
sbb
cmps
out
mov
pop
std
sahf
repz
scas
push
mov
xchg
push
adc
cmp
cmp
outs
add
movs
test
sbb
jne
scas
cmp
cli
sbb
mov
pop
mov
mov
std
xor
movs
push
and
in
loope
inc
xor
je
fcomp
xchg
pop
cs
popf
adc
ins
add
enter
jno
mov
pop
adc
push
dec
mov
xor
(bad)
div
mov
jmp
and
pop
inc
add
addr16
shl
inc
cmc
sbb
mov
gs
stos
mov
mov
fstp
pop
mov
pop
(bad)
scas
fnstsw
je
dec
push
xchg
loope
inc
jp
ins
xchg
push
cmp
push
cld
call
cmp
fdiv
add
xchg
fmulp
in
shr
jg
addr16
sub
cmc
mov
xchg
mov
or
inc
rol
nop
sbb
out
mov
mov
sub
pop
sbb
pop
pop
sbb
or
pop
pop
fld
jbe
enter
jg
in
adc
cmp
in
mov
out
outs
mov
cmp
xor
or
addr16
add
and
in
outs
pop
cmps
dec
mov
xor
ret
(bad)
inc
cmps
xchg
xor
(bad)
and
xor
sub
(bad)
ins
and
jge
xor
shl
paddb
jmp
rol
fisttp
sbb
push
outs
sub
lods
mov
jg
es
clc
rcl
inc
das
xor
repz
rcr
xor
lds
in
sub
test
pop
movs
ja
ffree
mov
jmp
sbb
call
xchg
out
sbb
sbb
and
add
div
xor
sbb
ret
in
push
stos
ror
pop
clc
data16
mov
stos
into
sub
add
push
cli
dec
add
push
or
fs
daa
mov
cmps
bound
xchg
data16
jecxz
mov
ret
sahf
dec
push
lea
sub
outs
test
lds
adc
sti
aad
jle
mov
add
and
or
inc
push
or
cld
dec
dec
ja
or
jae
ss
dec
pop
sbb
clc
inc
sbb
enter
jae
jne
push
adc
jp
test
retf
push
and
loope
sub
int3
push
bound
sub
and
int
test
mov
mov
add
mov
out
pop
mov
sbb
aam
lock
xchg
fcom
inc
and
(bad)
mov
add
xchg
pop
add
xchg
mov
call
jno
arpl
lods
sub
mov
jle
jno
pop
push
push
adc
ss
fisttp
adc
mov
xor
retf
pushf
mov
aam
xor
cdq
adc
(bad)
push
adc
xchg
jp
fstp
pop
jns
jno
inc
push
cwde
sar
ins
jl
call
stc
xchg
test
or
mov
add
mov
sbb
sub
(bad)
stc
gs
adc
or
jmp
xor
pop
scas
or
test
dec
sbb
addr16
xchg
rol
dec
sbb
cmp
out
repnz
repz
jle
push
test
cs
sub
fdivr
pop
ret
fcmovbe
xor
test
pop
mov
popf
xchg
jge
push
cld
pop
or
je
add
repnz
shr
add
in
(bad)
adc
fst
jne
repnz
std
fwait
popf
mov
cmp
test
and
push
push
mov
jno
call
test
mov
dec
jmp
sbb
xchg
push
pusha
aad
or
jle
in
push
pusha
pop
mov
pop
add
cmp
sub
call
pop
fst
sub
push
cmc
jmp
cmp
in
or
fwait
and
scas
daa
sbb
fild
sub
fmul
add
dec
push
sub
adc
fnstcw
xor
jle
push
inc
test
ret
and
sbb
ins
mov
outs
cmps
sub
in
icebp
add
mov
xchg
dec
xchg
add
mov
cmp
shl
xor
ins
sub
fcom
dec
call
jmp
mov
mov
mov
mov
ja
add
cmp
mov
sub
int
xchg
rcr
stos
cli
cmps
adc
ror
mov
dec
(bad)
in
mov
dec
cmc
ret
mov
fdiv
ss
mov
movnti
push
inc
or
rcl
push
xchg
outs
add
add
and
dec
fwait
mov
(bad)
jmp
stc
out
das
pop
inc
outs
stc
mov
cmp
fcmovbe
push
xchg
and
adc
adc
xchg
add
repz
adc
mov
mov
inc
fidivr
pop
and
adc
lahf
daa
push
call
(bad)
pop
adc
dec
xor
pop
adc
cmp
dec
ror
ja
mov
shl
jp
jmp
daa
jp
mov
add
dec
(bad)
cmps
loop
outs
aad
out
icebp
jmp
jo
inc
xchg
adc
(bad)
jp
sub
test
cmps
mov
xor
lds
mov
repnz
movs
fcmovnbe
xor
mov
and
jo
ds
fwait
and
xchg
cli
mov
in
mov
push
lahf
jne
adc
clc
gs
add
hlt
pop
fprem1
mov
mov
push
je
(bad)
div
lods
retf
pop
xor
adc
stos
add
jl
icebp
sbb
loop
jnp
ret
inc
enter
mov
xchg
adc
(bad)
call
pusha
rcr
mov
add
das
pop
mov
cmc
cmp
dec
xchg
shl
sbb
add
sbb
lahf
repnz
jo
(bad)
scas
cmps
retf
ja
aas
cli
xchg
mov
clc
lock
sub
or
out
mov
fild
sti
sbb
and
test
sub
xor
repnz
inc
cwde
cli
add
xchg
or
mov
sbb
call
cmps
ret
adc
ds
lds
shl
stc
dec
js
inc
sbb
jmp
sbb
pushf
ds
jp
jne
clc
cmp
cmp
std
jl
test
dec
ficom
scas
sbb
adc
mov
gs
mov
add
cwde
fimul
cmps
das
or
xor
mov
fsub
push
add
inc
mov
push
pushf
mov
xor
and
addr16
aas
lea
std
inc
xchg
mov
fist
cmps
icebp
out
xlat
jp
sti
cmp
in
(bad)
(bad)
xchg
and
inc
(bad)
enter
sub
mov
cmp
jne
in
repnz
lock
jns
jge
lods
out
sti
neg
mov
mov
sub
repz
add
shl
pop
add
dec
mov
pop
test
xlat
jge
mul
mov
pop
xchg
int
pop
enter
sub
xchg
cmp
mov
cmps
(bad)
jle
jge
test
(bad)
sbb
shl
js
icebp
jp
mov
mov
xchg
dec
jae
pop
sahf
inc
lods
cmp
mov
stos
jl
add
mov
std
add
inc
in
mov
add
jle
or
mov
jg
pop
cmp
dec
ja
into
add
sub
nop
jge
or
dec
jnp
out
out
jg
xor
add
rol
push
stos
or
xchg
adc
xlat
jnp
popa
dec
xchg
mov
and
loopne
popf
mov
adc
fimul
mov
mov
(bad)
cld
aad
(bad)
mov
sbb
fidiv
pop
mov
sbb
or
or
dec
les
mov
or
add
adc
std
xor
mov
out
push
sub
mov
shl
lock
adc
(bad)
hlt
inc
pop
cmp
shl
jle
test
adc
in
mov
js
dec
sar
outs
add
mov
imul
inc
xor
pop
xor
adc
push
xchg
leave
xor
xchg
pop
pop
(bad)
in
adc
dec
push
or
arpl
test
jo
out
mov
jbe
fisubr
dec
inc
xor
sar
scas
aad
fcom
(bad)
rcl
int3
mov
mov
add
lods
add
xor
add
sbb
add
loope
xchg
lock
cli
mov
in
add
shl
js
cmps
dec
call
ja
inc
xchg
adc
pop
mov
scas
test
js
jl
adc
cld
xor
(bad)
push
bound
stos
test
mov
jo
sub
fcom
(bad)
dec
sahf
int
push
movs
sti
lock
jecxz
and
fmul
push
out
or
lds
mov
inc
push
fdivr
sbb
mov
xor
int3
cmp
stos
leave
or
mov
dec
popa
push
dec
outs
mov
push
and
test
add
(bad)
sbb
or
jmp
pop
fstp
sahf
(bad)
fistp
xor
fcomp
add
repnz
mul
mov
out
mov
cmp
push
imul
mov
push
or
mov
ins
shl
stos
push
int
test
cmp
mov
or
push
push
adc
not
xchg
and
push
xchg
aas
aam
lock
adc
mov
call
or
adc
repz
sub
out
mov
jo
sbb
mov
sub
in
out
out
pop
adc
push
cli
(bad)
mov
cmp
aas
aam
cs
xchg
xchg
test
xor
pushf
or
xor
mov
inc
jo
inc
sbb
lods
popa
inc
jns
stos
xchg
cmp
fisttp
and
out
push
mov
cwde
push
add
jp
int
push
fs
std
shl
aas
pusha
jge
(bad)
pop
cli
ror
mov
call
std
jne
mov
arpl
cmc
dec
jnp
push
pop
dec
mov
or
sar
ficom
icebp
imul
data16
ins
pop
mov
loope
dec
ds
aas
fimul
push
fimul
pop
sub
push
leave
das
arpl
sbb
out
inc
sti
arpl
gs
(bad)
or
(bad)
test
mov
je
mov
fst
add
daa
call
pop
clc
jge
jle
loope
popf
cmp
jno
mov
xor
ret
(bad)
(bad)
pop
imul
jae
mov
push
mov
inc
adc
pop
xchg
push
mov
lock
mov
out
jmp
or
not
imul
pop
aad
cmp
sahf
popa
xchg
neg
mov
mov
jno
or
pop
arpl
pop
pop
xor
push
mov
mov
loopne
mov
sbb
push
loop
popa
or
or
shl
dec
jp
ds
(bad)
hlt
cmp
fsubr
fnstcw
sub
fld
mov
mov
xor
in
cmp
inc
les
mul
inc
inc
dec
scas
dec
push
std
push
(bad)
xor
idiv
jne
jns
out
or
aad
xor
jne
mov
test
popf
push
ret
inc
adc
jne
push
pop
leave
rcr
lods
leave
jl
hlt
sub
test
rcr
xchg
push
sbb
lods
hlt
rcr
dec
xlat
jb
loopne
hlt
jge
out
pop
data16
nop
popa
in
mov
inc
popf
outs
jae
scas
push
dec
fistp
into
mov
xor
dec
push
ror
arpl
inc
sbb
add
inc
(bad)
cmps
scas
mov
inc
aaa
push
in
pusha
std
popa
add
or
into
fild
push
add
out
push
cmp
adc
mov
aam
push
iret
cli
pop
dec
cmp
cli
sbb
sahf
(bad)
mov
or
cmps
pop
sbb
mov
hlt
inc
stos
dec
and
mov
mov
dec
push
shl
jmp
daa
fwait
jbe
icebp
call
xchg
and
inc
shl
and
fcom
addr16
test
xchg
fadd
add
mov
add
fst
push
add
scas
mov
ins
push
fdivr
fidiv
inc
fld
lods
out
sahf
xchg
push
sahf
sub
or
xor
pusha
xchg
jno
mov
and
(bad)
pop
inc
inc
sbb
in
stos
adc
inc
sti
lock
and
push
dec
sub
sub
mov
xchg
jns
cld
dec
es
adc
loopne
inc
icebp
mov
cli
cli
pop
sbb
xchg
cmps
stos
les
adc
iret
sti
push
inc
daa
push
push
sbb
out
mov
or
int
inc
shl
inc
test
sbb
loopne
xchg
xlat
test
xchg
ja
mov
pop
jo
ja
add
cmps
inc
cli
mov
sbb
jbe
daa
xlat
lods
aas
pop
std
pop
popf
fdiv
mov
in
mov
push
mov
sub
cld
aad
shld
cwde
pop
imul
push
(bad)
cld
cmp
rcl
pop
pop
sub
xor
sbb
or
inc
popf
inc
jae
cli
stc
pop
mov
jo
(bad)
sub
in
mov
(bad)
push
dec
xor
inc
iret
or
aas
(bad)
mov
add
pushf
pop
sub
movs
pop
xor
in
call
add
in
adc
dec
scas
pop
scas
ror
mov
es
xchg
mov
shl
xor
jae
stc
jae
push
dec
rcl
sub
fld
xchg
add
enter
sbb
enter
sbb
jne
dec
sbb
stos
pop
ins
pop
add
mov
mov
es
test
test
mov
or
call
cmc
inc
ror
xchg
(bad)
cs
ss
jmp
jmp
xor
push
fdiv
mov
or
jne
sbb
mov
ror
mov
mov
adc
mov
mov
cmc
and
cmp
div
inc
fs
out
loope
bound
pop
imul
dec
push
retf
hlt
outs
std
dec
and
mov
push
and
(bad)
and
mov
jbe
pop
(bad)
and
(bad)
xor
pop
aaa
xor
jg
ret
rcr
shr
push
dec
push
mov
test
lahf
in
dec
clc
add
fnstenv
movs
xchg
stos
sbb
mov
add
fldenvw
mov
pop
cmp
les
mov
mov
xchg
xor
(bad)
popa
hlt
jae
sbb
idiv
rcl
fwait
pusha
mov
and
jno
push
call
adc
sub
jmp
icebp
xchg
add
dec
stos
data16
fisub
mov
dec
sbb
adc
shl
push
dec
xchg
mov
jmp
cwde
jle
int3
(bad)
std
and
cmp
popf
mov
(bad)
xchg
dec
fild
mov
dec
inc
or
out
(bad)
fistp
outs
jns
jp
call
sub
iret
nop
adc
stos
jo
adc
popf
mov
cmps
cmc
test
and
ja
dec
mov
sbb
dec
push
div
dec
add
adc
scas
xor
xor
test
pop
(bad)
adc
add
ret
in
mov
aam
jno
aas
rcl
sub
mov
test
push
test
ins
jmp
sbb
fadd
jmp
cmp
jecxz
xchg
outs
cmp
push
mov
xchg
ja
fs
div
push
test
dec
xchg
dec
push
pop
sbb
adc
scas
dec
stc
gs
sub
cdq
dec
push
add
out
fst
sar
push
arpl
sub
jmp
js
and
xchg
pop
inc
mov
int
mov
adc
sti
dec
add
mov
and
or
xor
fild
jb
pop
scas
jo
push
lea
inc
jne
add
ja
repz
cmp
xchg
aam
sbb
cli
xchg
inc
xor
out
out
(bad)
fisub
push
jo
(bad)
repz
loope
inc
or
or
outs
dec
push
(bad)
fidiv
(bad)
sbb
enter
or
movs
adc
mov
jne
push
gs
push
sbb
icebp
pop
add
dec
mov
(bad)
fmul
bswap
ss
xor
pop
sub
cmp
fild
outs
push
das
jmp
out
jns
xchg
jecxz
inc
mov
inc
popa
add
or
(bad)
lock
and
jnp
push
jmp
adc
cwde
push
inc
call
stc
(bad)
in
lock
movs
xchg
sbb
popf
int
push
shl
enter
xchg
daa
pop
mov
jns
mov
xor
xchg
cli
dec
inc
cmp
push
fcom
adc
inc
ins
mov
ficom
addr16
xchg
mov
jecxz
xor
push
push
(bad)
mov
or
push
inc
or
test
add
add
add
lahf
push
arpl
mov
(bad)
jle
rcr
dec
sti
ins
das
add
imul
fisttp
cmovnp
fsubr
daa
add
mov
mov
mov
iret
dec
add
mov
clc
and
inc
and
pop
mov
loop
pusha
adc
mov
sbb
popf
(bad)
mov
push
daa
repnz
test
cli
(bad)
jns
ficomp
jne
lods
out
jge
imul
or
jns
ins
int3
mov
mov
inc
inc
rcl
mov
add
mov
stos
clc
jg
test
jne
fadd
push
outs
aad
(bad)
mov
xchg
inc
adc
mov
jg
cmp
fsubr
inc
loop
mov
(bad)
mov
lods
out
bound
xchg
fcomi
pop
fs
loop
inc
adc
push
shl
aad
out
dec
dec
and
clc
loopne
mov
sar
test
cmp
rcr
sar
ror
pop
ins
out
arpl
push
cmp
sub
adc
imul
jecxz
jmp
leave
xor
loop
jmp
cld
ret
in
leave
push
rol
daa
repz
dec
push
jns
xchg
jmp
outs
sub
ret
(bad)
ror
hlt
sar
cmp
loope
pop
hlt
mov
inc
sub
repz
pop
pusha
mov
jp
jo
dec
mov
and
xor
sbb
push
bound
(bad)
push
cdq
das
retf
or
movs
pop
es
jle
fbld
xchg
jnp
sbb
fsubr
push
xor
iret
sub
stos
mov
outs
scas
lods
jle
pop
and
sbb
cmp
ds
cmp
leave
lods
mov
xor
jbe
arpl
sahf
push
sbb
jne
daa
sbb
dec
lods
ret
movs
fs
adc
jns
sbb
lea
adc
jmp
xor
fmul
or
in
fwait
xchg
fnstsw
or
sbb
cld
dec
stos
adc
into
repnz
dec
leave
sbb
cmp
cmp
adc
jno
mov
ss
retf
inc
sbb
(bad)
sar
and
mov
xor
adc
repz
and
mov
imul
adc
inc
pop
nop
jmp
stc
cmp
lods
out
call
call
add
mov
out
lahf
push
jnp
mov
push
cld
popf
shl
mov
cmc
and
pop
call
mov
jge
mov
jecxz
sbb
retf
pop
and
xor
pop
pop
ins
jecxz
pop
mov
aaa
add
xchg
js
mov
repnz
outs
mov
push
aad
jno
jns
mov
add
std
das
xor
ja
lods
xor
pop
ret
fs
(bad)
test
mov
test
(bad)
outs
leave
sbb
mov
(bad)
or
adc
jo
jbe
sbb
add
push
mov
jmp
inc
adc
pop
loop
xor
cmc
fild
jae
push
cdq
cmp
in
cmp
mov
pop
push
das
push
push
xor
fdiv
mov
xchg
sub
push
sub
retf
in
imul
aaa
outs
dec
shl
push
mov
pushf
adc
xchg
adc
add
jmp
jle
(bad)
inc
inc
in
stos
cmps
test
cmps
cli
sub
jp
dec
jb
cmp
das
stos
adc
cs
jno
js
cmp
xor
jmp
xchg
push
xor
jp
inc
mov
push
sub
inc
ret
lea
leave
cmc
jae
xor
shl
mov
xor
mov
and
arpl
iret
sub
ret
jno
cmp
sub
pinsrw
add
push
outs
stos
arpl
jns
adc
fidiv
leave
xor
pop
movs
xchg
mov
test
cmp
clc
xchg
sub
jnp
pushf
cwde
push
js
retf
or
pop
adc
jl
out
push
rcr
ltr
xor
cli
cmp
xor
out
gs
test
jb
mov
xor
mov
dec
fwait
mov
jo
dec
sar
rcl
xchg
cmp
retf
xchg
jo
dec
out
mov
push
xchg
adc
cwde
mov
movs
int3
push
jne
hlt
scas
cli
cmps
add
test
cwde
in
and
mov
mov
dec
pop
adc
leave
sti
mov
(bad)
cmps
pusha
push
cmp
pop
sub
das
or
into
sub
icebp
out
ret
shl
mov
repnz
(bad)
outs
and
jbe
sbb
add
mov
pusha
pop
or
push
cmc
test
sbb
cmp
mov
add
int
ins
je
mov
leave
mov
mov
cmp
push
out
retf
push
retf
out
pop
jmp
call
xchg
jmp
aad
pop
sub
jecxz
push
movs
movs
out
push
ss
repnz
push
dec
dec
jle
daa
sub
jno
in
cmp
je
imul
pop
mov
das
loopne
out
sbb
pop
nop
push
or
xor
cmp
jmp
pop
lods
lods
in
pop
pop
les
and
pusha
arpl
pushw
cmp
call
pop
lock
rol
(bad)
pop
stos
sbb
leave
outs
daa
pop
mov
neg
mov
jns
cmp
or
inc
(bad)
cld
jne
and
mov
nop
fnsave
leave
retf
out
std
data16
mov
outs
(bad)
(bad)
int
jbe
jg
js
retf
call
out
and
xlat
call
or
and
and
retf
aaa
addr16
pop
test
and
rcr
mov
sbb
cmps
inc
clc
jle
mov
shl
cmp
jge
dec
sub
cmp
or
fcomip
push
cmp
je
dec
test
lahf
cmp
mov
fisub
pop
cmp
or
cmps
mov
cmp
pop
cmc
xor
(bad)
out
or
outs
and
sbb
sahf
leave
sub
mov
or
add
aad
enter
adc
jmp
cs
test
lldt
jg
pop
cmc
sbb
jp
sbb
leave
cmp
(bad)
xlat
inc
cmc
xor
fst
fs
or
(bad)
lods
sbb
push
mov
mov
in
(bad)
fisttp
(bad)
cli
sbb
lock
in
inc
enter
scas
sub
mov
jge
xorps
and
int
or
imul
mov
test
mov
(bad)
cmp
mov
mov
stos
add
out
mov
movs
hlt
xor
movs
jne
daa
cmps
aaa
fsub
mov
inc
inc
aad
adc
xor
push
sub
dec
or
out
push
fcom
adc
mov
arpl
push
cdq
adc
jbe
sti
or
cmc
inc
jmp
repnz
outs
mov
std
jg
adc
push
mov
push
jae
ret
jbe
out
xor
repnz
xchg
inc
fidivr
js
mov
inc
rcr
jecxz
inc
shr
daa
or
aaa
xchg
popf
in
jo
cmp
or
jp
jae
xchg
sar
mov
test
mov
setg
push
inc
rcr
les
fdiv
test
inc
pop
pop
cmp
cs
jb
cmps
cmc
mov
mov
shl
mov
push
(bad)
int3
xchg
inc
add
pop
stos
mov
in
test
xlat
enter
call
mov
cmps
push
pop
ins
adc
push
ins
pop
pop
add
cmp
sbb
popa
sbb
or
test
cmp
xor
mov
and
(bad)
mov
inc
push
stos
jnp
les
scas
(bad)
rol
lea
mov
pop
cmps
push
gs
sahf
fincstp
push
sub
mov
or
cmps
(bad)
xchg
xchg
je
daa
rcl
pop
push
inc
cmp
aaa
ins
jl
int
test
fsubr
pusha
pop
inc
inc
dec
push
js
lock
fisttp
xlat
xor
stos
jno
lods
es
les
pop
fisub
daa
inc
div
movs
in
dec
jbe
pop
push
sbb
hlt
or
add
hlt
leave
pop
pop
jae
push
mov
dec
test
jae
push
cmp
sti
(bad)
mov
adc
pusha
cmp
mov
dec
and
out
jnp
sbb
std
push
(bad)
cmp
clc
fs
cmp
add
pop
inc
outs
in
sbb
inc
(bad)
std
jno
(bad)
test
push
mov
mov
sar
shl
add
jge
adc
int
jmp
daa
xchg
push
and
sub
fldenv
es
inc
and
sub
(bad)
mov
pop
loop
sub
mov
daa
cmp
adc
loope
aad
xchg
in
dec
mov
(bad)
test
dec
and
inc
shl
imul
cmp
mov
out
enter
sub
pop
push
outs
xchg
xchg
mov
xchg
sbb
data16
cmp
outs
jg
out
ret
(bad)
fild
jne
and
inc
adc
mov
and
es
sahf
pop
xor
cmps
pusha
dec
leave
xchg
adc
in
out
movs
les
mov
ins
mov
in
push
mov
aas
(bad)
out
xor
fdivr
pop
into
cmc
ds
and
mov
ss
ss
pusha
cs
push
iret
jmp
mov
(bad)
outs
das
and
je
push
imul
jnp
dec
adc
fwait
jb
out
dec
sub
pop
cdq
push
or
es
push
rcl
cs
popf
shr
loop
ds
inc
fisub
pop
and
aaa
repnz
stos
scas
in
mov
movs
mov
inc
es
xor
mov
imul
inc
add
or
mov
gs
in
cld
or
sub
push
dec
fadd
clc
jne
jbe
lods
xchg
inc
and
sahf
inc
add
mov
fs
pop
lods
mov
mov
xchg
in
shl
lock
inc
fstp
movs
bt
in
push
out
or
inc
vpcmpub
jmp
dec
retf
int
xor
scas
imul
pop
adc
dec
jo
mov
movs
lock
sti
pop
add
jg
add
sub
mov
fldcw
pop
out
inc
pop
fdiv
ds
dec
neg
add
das
mov
mov
and
push
mov
cmps
mov
dec
xchg
mov
and
jno
mov
pop
iret
call
push
cld
adc
lods
add
xchg
jo
xchg
lahf
lds
mov
dec
outs
adc
dec
or
pop
mov
jl
jle
enter
pop
rcl
jmp
pop
mov
and
jns
dec
imul
jmp
cmp
inc
xchg
mov
xor
jg
xchg
and
stos
or
add
retf
mov
ret
xchg
add
xchg
ret
ins
jmp
retf
pop
xor
(bad)
rep
mov
stos
mov
mov
push
mov
mov
fwait
(bad)
loop
xchg
mov
push
in
(bad)
aas
test
xchg
aas
dec
mov
adc
mov
push
xor
sti
pop
and
mov
xchg
aaa
outs
cmp
push
into
add
sub
jo
test
movs
cdq
jno
je
retf
outs
jecxz
jns
xor
rcl
fwait
xchg
imul
xchg
fisttp
adc
mov
in
mov
add
push
out
lahf
sub
aam
and
loop
in
jp
jge
rcr
in
or
mov
ins
push
ds
mov
je
xchg
fcom
pusha
fs
cmps
and
pop
test
pop
push
test
xor
das
mov
stos
loopne
pop
jle
xor
popa
sub
mov
pop
and
pop
stc
adc
(bad)
xor
sbb
cdq
dec
shl
or
ror
and
xchg
mov
adc
shl
xor
xchg
jle
push
adc
in
icebp
cmp
int
es
popa
mov
jmp
ins
into
add
(bad)
loopne
neg
fisubr
sti
cs
retf
xor
arpl
xor
mov
in
inc
pop
sbb
dec
push
inc
and
jp
mov
xchg
mov
cmp
jnp
fsubrp
cmp
adc
imul
inc
jecxz
out
retf
lds
pop
pop
jne
loop
(bad)
arpl
fisttp
js
sti
or
shl
pop
stos
push
aaa
mov
std
rol
out
jns
fcmovu
imul
stos
sub
mov
mov
cmp
fldenv
popf
mov
adc
shl
lea
inc
add
push
lods
mov
jno
mov
xchg
mov
lds
lahf
dec
(bad)
pop
ss
or
call
mov
sub
push
pop
pop
or
pop
jb
add
call
lods
sahf
mov
jae
call
shl
fstp
push
jnp
daa
xchg
(bad)
fild
test
ins
cld
sub
inc
mov
and
mov
loopne
add
scas
fs
data16
shr
cdq
ret
das
mov
xor
scas
inc
cmp
addr16
or
in
add
push
push
jo
mov
stos
sub
iret
xor
jb
ins
test
mov
jmp
push
(bad)
movs
fcomip
xor
pop
inc
stos
shl
popa
(bad)
int
push
icebp
lds
out
xchg
retf
mov
inc
shl
xchg
xor
push
imul
jbe
pop
xchg
int3
inc
mov
or
addr16
fiadd
mov
mov
jmp
add
dec
cwde
arpl
cmp
xor
pop
adc
pop
enter
jnp
ins
call
or
out
cli
ret
mov
int3
(bad)
fild
fcomip
inc
mov
sub
out
jo
pop
iret
push
dec
hlt
pushaw
sub
pop
outs
out
push
addr16
inc
bswap
out
dec
gs
pop
mov
mov
pusha
imul
and
std
jecxz
mov
call
add
jmp
scas
les
push
cmps
mov
jne
adc
cli
xchg
xor
push
mov
or
aas
fidivr
dec
stc
outs
mov
sbb
(bad)
ss
jo
aas
not
(bad)
cmps
sbb
inc
adc
jno
jg
test
pop
xchg
sbb
inc
sbb
retf
fld
sbb
cmp
repnz
mov
cmp
xor
(bad)
jecxz
and
mov
fwait
repz
icebp
pop
jne
(bad)
dec
sbb
mov
add
ret
(bad)
int3
pop
adc
iret
popa
mov
and
loopne
push
sub
ins
fucomi
mov
sub
xchg
or
or
and
jo
push
arpl
adc
jmp
out
xor
adc
mov
outs
xor
hlt
add
xlat
iret
ds
lock
mov
fs
mov
stos
sbb
movs
bound
inc
or
push
jg
cdq
ins
dec
push
loopne
sahf
ficomp
and
aam
sub
jle
test
pop
jne
push
rol
and
stos
dec
cmp
push
stc
push
aam
(bad)
(bad)
jno
mov
xor
adc
pop
jmp
fisub
inc
or
jb
fiadd
popa
add
out
call
test
into
ja
xchg
pushf
in
adc
rol
call
jno
ja
sahf
int
sbb
mov
mov
iret
out
test
dec
sti
dec
call
in
push
push
jbe
xor
jns
mov
mov
ins
push
add
psubw
mov
or
popw
dec
scas
add
mov
xchg
pop
push
jne
dec
inc
and
dec
xor
fidiv
and
aam
es
lahf
inc
in
ror
and
shl
adc
aad
xchg
in
adc
mov
and
lock
inc
mov
add
or
fwait
mov
pop
outs
sbb
imul
jl
loope
dec
rcl
sub
out
pusha
ins
or
ins
cmps
push
jge
mov
shl
pop
mov
fnsave
(bad)
lds
lods
std
sahf
lea
and
ret
arpl
sbb
and
mov
in
mov
sub
into
iret
add
or
push
clc
frstor
and
push
jecxz
loopne
pushf
lods
cdq
enter
pop
popf
push
push
adc
xchg
mov
ret
push
sbb
shl
hlt
add
xor
sbb
jle
sub
adc
retf
push
in
rcl
jns
outs
sbb
mov
sbb
cdq
mov
lds
hlt
pop
add
bound
js
xor
and
mov
or
jmp
(bad)
fmul
jne
imul
jp
ret
dec
daa
not
lea
into
xor
mov
adc
ss
repnz
push
add
in
inc
inc
and
adc
sbb
push
retf
xlat
jns
sbb
add
add
push
fst
pop
xchg
enter
pop
out
scas
pop
and
push
mov
push
push
cmp
pop
pushf
jmp
stos
xchg
shl
jge
(bad)
add
inc
jne
ss
mov
mov
iret
xor
add
emms
cmps
sahf
and
cmp
mov
mov
in
push
inc
add
out
sbb
or
lea
icebp
mov
mov
adc
adc
mov
mov
icebp
or
dec
fsub
lods
sub
les
inc
lea
push
nop
add
mov
es
fdivr
test
push
lahf
add
fidiv
fnstenv
adc
dec
ss
sbb
push
mov
(bad)
lock
js
call
jecxz
adc
aas
gs
inc
sub
jmp
(bad)
test
icebp
cmp
in
ror
imul
std
xchg
cmps
fs
test
inc
sub
mov
outs
add
xor
push
xor
ins
pushf
push
lds
ins
mov
and
mov
rcl
lea
inc
add
jmp
ds
xchg
add
cmp
sub
imul
jae
mov
and
add
retf
sub
and
sahf
or
xchg
(bad)
in
add
and
xchg
sahf
pop
mov
sub
xchg
scas
pop
add
loope
jmp
push
jmp
push
inc
mov
push
out
push
sub
imul
popa
or
jmp
popa
in
dec
sub
mov
pop
add
inc
js
fistp
inc
ja
push
xor
fnstenv
enter
push
pop
test
std
dec
xor
cmp
mov
popf
cmp
out
in
hlt
sub
stos
sub
xor
outs
outs
sub
mov
movs
push
cmp
out
push
ins
pop
pop
add
ret
xchg
(bad)
mov
outs
xchg
(bad)
adc
jbe
popf
ins
jg
jg
aas
call
push
lds
jo
fistp
dec
mov
std
xor
mov
(bad)
outs
test
adc
cmp
aad
outs
dec
mov
bound
cmp
(bad)
test
cld
in
jmp
xchg
leave
mov
pop
pop
rol
cs
inc
add
int3
imul
inc
cs
mov
add
sub
xchg
pop
inc
push
sub
jno
aas
js
scas
and
push
aas
add
jnp
movs
cmps
jae
jbe
dec
push
imul
ds
jmp
and
(bad)
in
mov
cmp
dec
sub
xor
push
dec
test
loope
test
(bad)
jg
cmp
or
mov
push
fisubr
shr
dec
(bad)
add
(bad)
nop
pop
cli
adc
fdivr
pop
sub
cli
dec
sbb
ss
mov
adc
test
fwait
jp
aaa
mov
push
aam
ret
dec
shl
daa
stos
scas
loope
rol
jmp
(bad)
xor
pop
jecxz
test
mov
mov
fld
push
xchg
xchg
jb
mov
test
fdivr
mov
pop
sub
cmc
mov
add
jmp
push
in
or
addr16
or
popa
sbb
jno
es
pop
push
xlat
fadd
adc
inc
test
mov
ins
mov
sub
pop
stc
out
pop
push
sub
fwait
xor
mov
out
adc
push
jbe
push
fs
adc
pop
scas
jg
lea
inc
pushf
xchg
xor
sub
add
dec
dec
sti
xor
mov
push
adc
aas
cld
(bad)
ds
adc
ins
jae
dec
sahf
stos
mov
or
add
outs
adc
iret
loop
loopne
xchg
bnd
popa
mov
cwde
dec
pop
jl
iret
stos
mov
shr
or
adc
mov
pop
lock
pop
xor
(bad)
adc
cmp
push
add
cmc
sub
mov
mov
ins
lods
cs
std
fsubr
xor
ins
xchg
add
iret
push
imul
xchg
cmps
scas
cmp
push
and
stos
fist
pop
(bad)
fnstcw
in
dec
aam
mov
mov
adc
xchg
leave
mov
push
movs
ins
cmc
cmps
ss
sub
aam
ins
jbe
or
fisttp
xchg
fstp
int3
stos
xor
lods
movs
lods
xor
pop
sbb
inc
arpl
push
jmp
les
hlt
adc
pop
add
fist
mov
push
adc
pop
and
mov
stos
cdq
jno
add
push
jecxz
mov
cmp
cmps
cmps
aad
jb
add
sar
imul
out
rol
or
sub
int
cmp
test
adc
jb
loope
popa
data16
xchg
and
adc
and
xor
pop
(bad)
out
or
adc
add
jmp
mov
mov
mov
loop
loopne
cmc
add
fnsave
outs
lods
xchg
daa
xchg
sub
inc
dec
rol
mov
mov
add
inc
dec
retf
bound
ja
(bad)
stos
or
in
shl
cs
fnstcw
inc
xchg
jbe
xor
mov
movs
push
adc
fsub
sub
pushf
push
in
es
adc
lods
add
xchg
stos
stos
popf
xchg
pusha
aad
dec
cmp
mov
pusha
fcom
cmp
xor
sbb
nop
in
mov
ror
daa
rcl
cwde
fwait
scas
push
xor
outs
jns
les
clc
mov
aam
lds
mov
mov
sbb
xchg
mov
cmp
jne
pop
iret
mov
inc
or
or
or
xchg
arpl
stc
dec
lods
es
and
int3
pop
jg
push
sar
xchg
fs
xor
lock
loope
sar
std
bound
leave
movs
or
daa
gs
int
inc
inc
push
fwait
int3
mov
gs
pop
jl
jns
add
mov
pop
add
xchg
push
aaa
pop
and
jne
aaa
push
call
jbe
and
sbb
outs
inc
dec
call
xchg
fidiv
mov
sbb
in
mov
aad
and
cld
stos
jns
(bad)
push
in
or
xchg
int
pop
sbb
push
pop
push
ficomp
dec
retf
lahf
in
xlat
pop
sahf
adc
mov
xchg
or
je
sbb
in
ret
xor
test
adc
fstp
jnp
sub
imul
fsub
cmps
add
ins
jnp
mov
shl
je
inc
clc
sub
and
into
(bad)
push
clc
idiv
jl
push
stc
or
test
in
in
sahf
sub
mov
repnz
jp
adc
mov
sar
push
imul
aas
mov
jp
or
retf
in
sbb
in
mov
jle
inc
mov
push
xchg
sbb
in
test
mov
push
mov
mov
mov
add
sub
dec
push
into
pop
je
mov
inc
add
mov
and
das
xchg
dec
push
inc
jnp
stc
test
xor
pop
push
and
xchg
addr16
mov
enter
mov
(bad)
mov
xchg
mov
cmc
lea
adc
fist
pop
or
adc
sbb
inc
jge
call
test
add
shl
jp
jnp
jecxz
inc
mov
add
dec
push
lods
imul
lods
shr
push
push
cdq
xor
iret
push
xchg
adc
cmp
popa
mov
push
mov
add
or
and
addr16
cmp
sbb
push
shl
cwde
es
mul
dec
sbb
add
aaa
jo
ins
fcom
popa
pop
mov
adc
sub
adc
mov
cwde
int
call
dec
pop
aam
cmc
mov
cwde
pop
stc
sub
jg
adc
pop
in
sub
bound
cmp
mov
test
or
pop
xchg
scas
cmp
leave
outs
scas
iret
mov
loope
inc
loope
sti
jmp
ins
or
dec
stos
dec
mov
lods
mov
gs
ja
or
fidivr
xchg
fimul
xchg
aas
cdq
leave
mov
ds
test
iret
test
inc
repz
jne
xchg
(bad)
xor
call
mov
les
jp
mov
or
mov
inc
imul
inc
xor
(bad)
mov
sbb
out
cmp
cmp
push
mov
xchg
retf
adc
sub
jmp
push
push
pop
pop
dec
pop
fiadd
sbb
and
add
or
mov
add
jb
jns
cmps
jnp
add
cmp
mov
push
jb
push
mov
mov
fsub
xor
push
jp
je
loopne
mov
xor
inc
jne
jns
dec
jbe
or
mov
mov
inc
inc
int
aas
mov
jg
fmul
call
ja
into
add
inc
mov
imul
das
dec
gs
xchg
and
(bad)
mov
(bad)
(bad)
inc
bound
inc
loopne
iret
add
push
push
lock
mov
ds
mov
sti
outs
add
lods
cmp
mov
call
cmp
adc
push
mov
js
mov
pop
js
(bad)
push
xchg
dec
add
(bad)
lock
xchg
dec
sub
inc
mov
mov
jp
sbb
or
out
sub
repz
mov
ins
hlt
aaa
adc
es
xor
loopne
pop
test
ret
mov
aaa
jae
jmp
push
hlt
leave
sub
test
jb
push
int
push
sbb
add
into
sahf
adc
cmp
cmp
ds
jnp
dec
ds
rol
stc
cmp
sti
mov
ja
push
shl
inc
mov
jecxz
add
std
ret
(bad)
mov
ret
rol
and
xchg
mov
int
push
jle
push
mov
add
cmps
fstp
add
daa
mov
imul
cmp
jp
inc
(bad)
retf
pop
jmp
scas
jmp
mov
jl
test
outs
ret
adc
xor
out
cmp
scas
je
push
adc
nop
push
out
test
test
cmps
movs
iret
push
dec
inc
mov
push
mov
dec
das
out
scas
mov
outs
jg
mov
xor
int
pop
or
jo
pop
push
fistp
in
push
xchg
pop
in
mov
mov
and
fdiv
mov
enter
outs
sbb
mov
mov
outs
jecxz
add
enter
mov
fcom
daa
cwde
lds
test
jmp
cmps
lahf
sub
rcl
daa
stos
xchg
xchg
je
movs
dec
and
xor
(bad)
add
imul
jnp
push
jl
xor
and
dec
inc
in
rcl
icebp
cmp
int3
xor
leave
dec
dec
das
or
inc
jge
in
sbb
stc
outs
cmp
lds
xlat
loopne
mov
xchg
mov
js
jne
pop
dec
das
mov
repnz
sub
mov
push
sar
rcr
outs
or
cmp
leave
dec
mov
jmp
repnz
(bad)
fisub
out
sub
cdq
neg
push
cmps
in
fiadd
(bad)
retf
mov
sbb
icebp
bound
stos
cmp
mov
mov
rcl
cmps
(bad)
xlat
clc
push
and
in
mov
lea
push
dec
jg
mov
test
std
cmp
inc
mov
push
adc
std
out
fistp
xchg
(bad)
hlt
push
mov
pop
std
push
pop
push
sti
cli
mov
adc
sub
add
push
push
dec
nop
or
jbe
sub
lahf
xchg
xor
retf
nop
arpl
mov
out
stos
div
imul
(bad)
int
cmp
lahf
pop
ins
add
out
jle
packssdw
int3
fcomp
repnz
inc
add
fnstsw
sar
jmp
ins
sub
sar
xchg
ja
dec
mov
pop
leave
aad
jb
xor
mov
xchg
cmp
push
xchg
dec
xor
xchg
adc
and
lea
out
mov
xor
pop
leavew
adc
and
mov
sub
sbb
call
dec
sbb
fsub
xor
pop
pop
push
push
mov
dec
cli
lds
and
xor
cwde
dec
stc
nop
dec
aam
jns
std
loope
dec
cmp
imul
push
cmp
xlat
mov
sbb
adc
loop
xchg
arpl
test
hlt
int
jbe
popf
pop
fstp
add
mov
loop
dec
adc
test
imul
sbb
test
cmp
in
(bad)
(bad)
add
jp
pop
enter
pop
jecxz
cld
and
bndldx
add
inc
add
cmp
cmp
test
cmc
add
jns
(bad)
sub
call
dec
ins
ss
adc
fldcw
aas
push
scas
mov
movs
mov
in
jmp
xchg
mov
or
retf
add
ds
adc
add
jp
out
out
hlt
imul
xor
sbb
adc
arpl
jp
sbb
or
cmp
cmp
pop
fcmovnb
pop
sub
or
(bad)
jne
enter
int
mov
stos
ds
cmp
push
inc
mov
xchg
or
idiv
bound
pushf
cmp
xor
mov
test
or
jne
push
leave
test
mov
cmp
xor
movs
ds
jbe
push
fs
push
sbb
dec
(bad)
test
xor
push
in
dec
cmp
ds
add
(bad)
sbb
adc
jge
push
mov
add
mov
mov
sahf
addr16
out
push
push
fsub
shl
cmc
mov
xchg
adc
js
jo
in
push
movs
and
test
sbb
jbe
cmp
int
jle
mov
scas
stc
ins
adc
pop
mov
push
mov
ins
or
rol
test
aad
addr16
stos
fdivr
popf
aaa
dec
stc
push
push
xchg
push
int
rcl
pop
test
pop
pop
(bad)
push
repz
fs
fdiv
int
test
mov
pop
and
cmc
add
sub
lods
out
mov
jecxz
and
loope
fadd
popa
dec
cmp
stc
cs
data16
mov
fadd
and
leave
lahf
cmp
cmp
sub
data16
jns
sar
fst
add
jmp
sbb
stos
(bad)
inc
sti
pop
sub
int
inc
sub
jo
dec
out
mov
pop
aaa
aad
test
cdq
cmp
push
fwait
jle
mov
inc
mov
stos
jns
adc
ret
and
cmp
push
stc
pop
jne
out
dec
add
or
shl
stos
shr
setb
sbb
or
mov
add
mov
(bad)
(bad)
shl
out
pop
inc
aad
fdivr
ins
lods
fs
daa
inc
lea
inc
add
cmp
or
adc
lds
cli
call
ficomp
inc
xor
or
adc
add
je
mov
cmps
mov
js
adc
in
jb
ficom
jb
and
dec
pop
jmp
iret
inc
sahf
or
pop
xor
xchg
movs
adc
sub
lock
xor
pusha
and
retf
fiadd
sub
inc
jg
mov
sahf
mul
adc
sub
lea
movups
sbb
mov
or
sub
jg
xor
add
and
cwde
push
xor
adc
jns
mov
mov
lock
int3
and
pusha
aaa
xchg
xchg
push
mov
pop
mov
test
push
loope
dec
out
dec
dec
mov
hlt
mov
jmp
push
ins
dec
cmp
lock
push
fbstp
adc
push
jb
push
jmp
push
xor
int
push
xchg
xor
mov
enter
push
xchg
fiadd
mov
and
mov
and
aam
out
inc
adc
pop
jmp
lock
jp
sub
cmps
dec
add
into
inc
add
je
xor
add
addr16
or
xchg
cmp
ret
fld
stos
push
adc
int3
fs
add
add
cli
mov
lods
jge
jle
test
add
pusha
pop
push
(bad)
add
ins
jmp
jbe
ss
mov
xchg
fisubr
iret
add
int3
inc
pushf
test
gs
dec
cs
ret
cmp
cmps
aas
in
call
xor
cld
add
popa
adc
lods
dec
inc
rcr
fwait
and
cmp
or
pop
mov
mov
pop
sahf
push
aaa
js
out
mov
adc
mov
sbb
dec
sub
lods
stos
mov
inc
cdq
lock
xchg
sbb
pop
(bad)
in
mov
stos
ror
fs
and
and
lea
sti
sbb
xor
jno
mov
je
adc
push
pop
clc
int3
imul
pop
push
fsub
xchg
mov
xchg
push
adc
ja
gs
and
fld
test
(bad)
test
mov
andnps
fnsetpm(287
inc
data16
cmps
scas
cwde
cmp
rol
lds
jnp
mov
adc
cdq
aam
adc
ret
mov
(bad)
cld
cmps
loop
pop
sub
mov
int
push
sub
out
xor
(bad)
(bad)
(bad)
or
mov
ret
dec
mov
(bad)
sub
or
ja
cmp
jp
xchg
pminub
nop
adc
push
test
pop
imul
sbb
push
jo
xchg
cmp
mov
pop
sti
dec
jbe
xchg
sahf
rcl
mov
out
pushf
cld
push
pop
or
daa
std
xor
hlt
jbe
ss
pusha
adc
movs
out
fsub
inc
rcr
push
jae
mov
popf
int
jmp
fldenv
aam
jno
dec
stos
jle
lods
jbe
(bad)
ds
sub
dec
and
mov
jbe
mov
cmp
enter
stos
es
xlat
dec
fistp
mov
xchg
enter
mov
add
cmp
call
pop
xchg
pop
mov
mov
jp
sbb
dec
sub
mov
cld
ret
inc
dec
pop
sub
sub
(bad)
dec
pushf
sub
mov
ins
repnz
dec
jp
js
aas
enter
mov
aaa
or
ja
inc
ss
or
xor
sbb
sti
pop
jo
push
ins
sahf
mov
paddusb
loope
inc
loopne
cmps
clc
ret
les
aad
mov
imul
xor
add
call
ins
mov
aam
push
dec
ins
cmp
pop
and
(bad)
cmp
(bad)
jnp
sbb
fxch
icebp
lods
call
aad
jne
(bad)
or
push
popa
adc
outs
in
mov
in
test
jge
jnp
push
fadd
adc
seta
inc
sahf
xchg
data16
outs
adc
pop
(bad)
xor
cmps
or
iret
or
mov
dec
test
scas
adc
add
xor
pop
hlt
cmp
outs
sub
mov
(bad)
outs
fild
sbb
fsubr
je
cmp
xor
push
pop
cmp
jmp
int3
fld
in
add
jmp
div
les
sbb
leave
mov
iret
push
and
add
icebp
adc
in
or
sbb
stos
pop
push
jmp
xor
mov
movs
fsub
test
fistp
mov
jg
ret
jg
push
das
push
rcl
adc
fcomip
dec
fdivr
mov
and
mov
loopne
aam
test
out
into
repz
sub
dec
imul
jbe
pop
xchg
ss
les
int3
not
movs
call
sahf
mov
sub
dec
cmp
jmp
xlat
jl
jge
sub
lea
movs
xchg
xchg
jno
inc
adc
mov
jl
push
add
test
mov
mov
mov
mov
xchg
shl
jns
xchg
inc
push
inc
adc
repnz
not
out
mov
mov
and
lock
add
sbb
add
lods
test
or
pop
inc
hlt
sti
and
pop
hlt
aas
aaa
addr16
push
call
cmps
ror
fwait
(bad)
xor
scas
sub
and
loop
lahf
xor
lds
fdivp
mov
into
(bad)
cmp
jge
scas
mov
sub
ret
cs
xchg
mov
mov
push
ins
and
bswap
jbe
dec
jmp
fst
test
push
pop
pusha
cs
jmp
adc
or
std
xchg
mov
xchg
dec
bound
xchg
pop
shr
cmp
(bad)
out
add
(bad)
push
ins
les
bound
or
xor
mov
sbb
ss
stc
lea
sahf
sub
test
cmc
jl
loope
xchg
ss
push
in
cmp
mov
push
bound
and
std
xor
push
inc
je
sub
mov
ins
add
cmps
jo
mov
add
outs
sbb
adc
int
xchg
iret
clc
dec
jne
scas
add
scas
xchg
cmps
loop
stos
xchg
sub
lea
pop
movs
icebp
pop
pop
sbb
adc
int3
cmp
mov
dec
jns
ds
sbb
push
mov
jmp
sbb
push
retf
mov
xor
dec
add
jne
mov
scas
sar
push
popa
pop
in
pop
lds
(bad)
jge
sti
dec
mov
push
dec
xor
pop
movs
inc
and
idiv
adc
gs
sub
add
and
push
mov
movs
jno
fld
jae
and
and
xchg
lods
or
dec
lds
inc
(bad)
cmps
rol
les
addr16
in
xchg
(bad)
mov
leave
pop
push
push
mov
mov
push
dec
sbb
sub
fcomp
mov
sbb
xchg
mov
inc
jl
js
sbb
mov
sbb
add
jp
dec
cmp
js
cdq
ss
mov
imul
loope
(bad)
ins
cwde
cmp
sbb
je
loopne
sbb
xchg
je
lock
or
mov
(bad)
mov
mov
inc
push
mov
jmp
stos
cmp
sub
xor
xchg
ret
sar
nop
and
mov
pop
loop
mov
ja
jo
inc
es
fdiv
sbb
sub
inc
inc
and
mul
xor
xor
scas
and
pop
mov
cmp
(bad)
sub
add
ins
test
adc
lahf
fisubr
mov
or
push
mov
mov
sub
add
adc
pop
jge
sbb
cmp
rep
repnz
mov
adc
dec
pop
xlat
fsub
jle
push
push
out
xlat
mov
mov
shl
adc
sub
jg
jge
mov
push
imul
aad
pusha
pop
cmps
or
and
icebp
mov
lods
push
out
xor
xchg
shl
js
pop
pop
ds
daa
imul
scas
enter
mov
ds
loopne
fistp
(bad)
aas
mov
adc
(bad)
adc
adc
pop
adc
clc
jl
arpl
cmp
scas
ja
fbld
add
loop
out
dec
dec
out
lea
inc
pop
imul
sbb
mov
add
push
mov
xchg
push
sti
mov
ret
xchg
add
int3
(bad)
arpl
xlat
sub
mov
es
push
cmp
mov
sbb
add
add
scas
dec
mov
sub
mov
add
adc
sub
mov
push
push
pop
sar
or
jle
enter
inc
and
rcl
mov
int3
jl
push
inc
faddp
ins
jo
fistp
(bad)
xor
dec
arpl
xor
push
imul
push
cdq
mov
loopne
mov
adc
hlt
jmp
adc
jmp
mov
dec
and
ret
inc
popf
into
test
jle
test
cmp
ins
aad
popf
fldl2t
ins
ds
data16
std
push
dec
fistp
arpl
in
cdq
cmc
dec
or
inc
xchg
jg
pop
aad
stos
test
pop
into
fmul
or
aas
jmp
test
sbb
addr16
xchg
(bad)
mov
sbb
fwait
iret
rcl
jns
ss
retf
(bad)
jmp
cmp
adc
and
ret
in
and
cdq
pop
xor
mov
cmps
call
cli
dec
into
and
xor
sbb
jl
push
cmp
push
sbb
aam
pushf
or
mov
inc
cdq
call
in
cmc
ret
mov
pop
ret
mov
push
jns
add
mov
xchg
mov
test
or
jno
push
(bad)
dec
std
aas
mov
dec
mov
and
mov
push
add
push
and
sbb
mov
repz
xchg
sbb
push
jnp
and
xor
in
lock
mov
adc
or
lea
out
cmps
int
pop
jns
mov
shl
or
in
hlt
call
inc
and
mov
pusha
mov
int
cmps
mov
mov
hlt
enter
inc
push
shl
pop
fdivr
lahf
leave
push
aas
dec
call
shl
(bad)
and
test
cmc
mov
dec
call
sub
xlat
arpl
iret
call
mov
ficom
dec
movs
out
pop
jae
sub
mov
mov
sbb
ficomp
hlt
mov
movs
ds
sbb
bound
xchg
cmc
xchg
jmp
test
out
add
dec
rcl
in
and
imul
xchg
pop
mov
adc
dec
stos
jo
cmps
pusha
loope
jge
dec
and
dec
cmc
dec
cmp
and
sbb
test
dec
lods
dec
loope
nop
pop
mov
add
xor
in
ror
aas
pop
sbb
dec
dec
stos
xor
mov
aam
sbb
pop
movs
sbb
movs
push
dec
jge
arpl
call
xor
aaa
add
add
xchg
cmp
dec
jne
jno
pop
sub
xor
mov
imul
mov
loop
(bad)
icebp
jge
inc
sbb
sub
cmps
rcr
xchg
lods
xchg
sti
mov
mov
sti
imul
call
mov
out
and
jnp
ret
je
cmp
adc
mov
adc
imul
xor
or
mov
dec
sub
fprem1
adc
pop
test
dec
jle
into
jecxz
imul
popf
scas
or
(bad)
hlt
inc
les
mov
sub
cli
mov
sub
ret
add
sub
push
dec
xor
jecxz
adc
bound
xchg
mov
in
repnz
in
fbld
mov
and
stc
sub
dec
ja
dec
add
adc
call
mov
jmp
cli
sub
bound
xor
mov
cmps
and
dec
mov
xor
loop
outs
(bad)
scas
push
(bad)
mov
jg
in
or
jmp
(bad)
fcomp
ror
retf
js
push
mov
xor
push
push
dec
xchg
in
icebp
and
fdiv
push
xchg
(bad)
movs
add
ret
adc
jae
mov
(bad)
les
es
inc
xchg
repnz
iret
ss
aad
adc
xor
push
fdivr
stos
(bad)
pop
or
mov
xacquire
(bad)
stc
and
push
mov
and
jno
imul
call
or
and
lock
xor
push
inc
ss
mov
sub
leave
lock
pop
mov
inc
dec
aas
inc
ds
cwde
jecxz
inc
pop
or
xor
or
jae
test
add
test
adc
inc
inc
mov
dec
arpl
stc
int
bound
cmp
jle
jmp
cli
retf
xchg
push
enter
mov
fimul
xchg
out
xchg
dec
mov
inc
test
dec
dec
aaa
mov
repnz
cs
jno
cmp
adc
or
push
jno
sbb
sub
ins
rcr
fisttp
stos
xchg
or
cmc
ja
and
xchg
sbb
jno
mov
sub
mov
jecxz
jecxz
mov
popa
std
hlt
(bad)
cmp
les
jmp
fcom
test
xchg
in
repz
leave
jmp
iret
dec
xor
in
or
rcr
xchg
cwde
bound
cld
mov
les
push
dec
jo
aas
jmp
addr16
fdivp
scas
stos
xchg
sar
iret
pop
pop
xchg
pop
pop
mov
mov
jno
mov
inc
in
clc
dec
and
in
inc
xchg
fyl2xp1
jle
dec
nop
dec
arpl
add
rep
lock
or
mov
mov
test
test
xor
lahf
sbb
adc
icebp
cmps
mov
imul
fimul
jl
adc
(bad)
(bad)
sti
add
push
sub
leave
pop
xor
adc
pop
ins
sti
cmp
outs
push
push
div
dec
fist
add
push
jmp
sbb
jns
cs
or
push
popf
push
xor
int3
xchg
sub
sub
je
ret
xlat
js
stos
mov
mov
jnp
mov
cmps
popf
jae
nop
mov
(bad)
out
mov
xchg
push
mov
jo
jp
xchg
add
aas
jae
iret
pop
inc
movs
mov
mov
jnp
xor
or
mov
pop
repnz
mov
pop
mov
adc
stos
add
push
es
sbb
bound
sub
sbb
sub
cmp
cmc
aam
inc
fisttp
aas
imul
dec
fpatan
jns
pop
sbb
jne
cmp
pop
ror
sbb
hlt
(bad)
and
add
fmul
cs
xor
int3
pop
mov
mov
jmp
and
sub
mov
fsubrp
pop
movs
daa
push
cmp
xor
mov
adc
and
fwait
test
mov
and
jmp
xor
jmp
dec
call
rcr
mov
sti
xor
movs
int3
push
mov
cmp
lahf
cmp
and
cmps
repz
push
loopne
cmp
or
and
inc
jnp
test
mov
dec
xchg
xor
lock
(bad)
in
sbb
and
dec
xchg
xchg
push
push
inc
dec
pop
aam
fmul
fs
mov
or
mov
fldcw
adc
dec
cmp
imul
push
mov
jae
test
inc
push
es
add
xor
(bad)
cmp
(bad)
sbb
adc
push
icebp
out
add
sbb
xchg
pop
inc
xchg
mov
sub
add
jle
and
cdq
push
sub
dec
or
popa
(bad)
gs
pushf
sbb
fldcw
or
popf
pop
mov
ror
test
(bad)
ins
fisub
xchg
repz
movs
xor
neg
rcr
pop
cmc
inc
cwde
adc
jns
popf
sub
ja
addr16
and
pop
push
test
or
ret
daa
sbb
inc
jno
stos
gs
shr
sbb
xchg
cld
cld
int3
xor
mov
mov
dec
lea
fimul
sub
sbb
fstp
xchg
dec
pop
xor
mov
pop
or
cmps
stc
sahf
repnz
into
xchg
or
fsubr
sbb
push
in
sub
xchg
mov
call
leave
adc
mov
test
jmp
sbb
ficomp
lds
or
jmp
dec
lds
mov
iret
cmps
add
fidiv
outs
in
in
stos
leave
jo
shl
das
jmp
sub
rol
xor
pop
aas
and
fs
out
pop
aam
push
pop
adc
push
rol
inc
dec
xor
cld
imul
mov
in
add
es
push
sub
or
cwde
push
and
aaa
cmp
inc
inc
aad
cmp
jns
lahf
inc
daa
aad
leave
lods
fidiv
std
adc
push
and
rcl
lock
inc
mov
xchg
sar
cmp
push
jmp
dec
inc
and
iret
fist
leave
idiv
cmp
dec
mov
cmp
outs
mov
(bad)
mov
cmp
mov
pop
mov
(bad)
not
dec
inc
mov
mov
cmp
ficom
cmp
sahf
movs
mov
inc
xchg
dec
dec
dec
dec
push
xchg
shl
cmc
adc
sub
in
sub
aad
add
shl
test
stos
pop
push
lds
ret
xchg
xchg
sahf
pusha
or
enter
jae
adc
and
(bad)
jns
cdq
out
nop
lahf
add
adc
std
jmp
sub
test
dec
ret
xor
mov
dec
aaa
adc
mov
fadd
sub
ficom
cmps
pop
aam
mov
imul
(bad)
rcl
lods
iret
lds
fsubr
lock
mov
hlt
jl
ja
add
mov
mov
popf
pop
cli
test
sub
idiv
ins
cmp
adc
ret
push
repnz
in
imul
xchg
sahf
mov
cli
add
cmps
aas
dec
jbe
std
les
xor
stc
add
pop
(bad)
test
xchg
xchg
mov
mov
js
movs
(bad)
fld
fst
icebp
jecxz
(bad)
push
pop
scas
in
mov
out
cmc
xchg
or
xchg
or
fidiv
js
mov
adc
or
mov
and
add
das
dec
xchg
icebp
lds
aam
mov
pop
push
popf
xor
lods
fdiv
(bad)
(bad)
pop
dec
ins
push
adc
retf
ror
xchg
mov
mov
xchg
xchg
xor
inc
jae
jge
push
mov
push
inc
push
pop
mov
sub
out
add
dec
sub
add
scas
sbb
imul
adc
cmp
xor
mov
dec
sbb
mov
mov
test
xchg
popf
rcr
sbb
cmp
jmp
and
adc
or
mov
in
mov
lahf
pop
addr16
mov
or
mov
(bad)
shl
mov
fimul
jmp
scas
push
mov
aad
cmps
dec
jp
pusha
repz
push
shl
sbb
shl
jge
mov
mov
xor
cmp
push
ffree
xor
mov
inc
pop
fsubr
add
mov
(bad)
pop
cmp
xchg
je
pop
es
cmp
test
stos
cmp
mov
dec
(bad)
fmul
test
fisttp
sub
jbe
test
push
add
push
push
mov
add
nop
int
hlt
jmp
dec
or
sbb
mov
rcl
cmc
std
in
cmp
outs
ins
into
jae
lds
add
fs
call
and
dec
mov
fidiv
nop
lock
fsub
push
xchg
popf
fadd
mov
pop
fwait
test
push
or
pushf
leave
add
fild
outs
push
movs
push
or
xchg
movs
inc
dec
popa
or
pop
test
adc
add
ret
xchg
fs
mov
arpl
sbb
push
pop
pop
add
push
pusha
inc
or
in
lea
jl
shr
(bad)
and
mov
aas
pusha
adc
cli
mov
dec
mov
push
adc
(bad)
xlat
call
pushf
cld
jg
jno
mov
sub
sub
sub
inc
mov
mov
add
je
(bad)
addr16
hlt
xchg
mov
pop
jns
push
mov
adc
mov
mov
ret
nop
push
loope
dec
xor
xchg
sub
jno
outs
shl
jle
xchg
cs
inc
or
stos
xor
xor
mov
cmps
sbb
inc
je
mov
dec
cmp
sbb
sbb
pop
dec
enter
(bad)
repnz
jl
inc
jne
adc
mov
add
hlt
in
push
pop
ins
mov
iret
or
rcl
xor
xchg
xor
pop
pusha
cs
shl
ret
into
stos
dec
dec
aaa
in
iret
shl
(bad)
lods
push
in
mov
adc
add
jmp
outs
mov
adc
loope
inc
push
int3
std
shl
jne
cmp
jnp
retf
adc
stos
fsub
sar
adc
pop
inc
cmc
xor
ss
(bad)
in
icebp
lods
xlat
scas
loop
push
cwde
mov
jg
fs
lds
fistp
(bad)
loope
add
shl
mov
(bad)
pop
retf
add
fst
(bad)
sahf
in
push
adc
dec
mov
adc
pop
mov
fld
or
xchg
or
inc
push
jae
in
dec
cmps
outs
mov
jp
neg
and
pop
out
je
lahf
cld
cdq
xchg
popa
or
ss
call
lock
mov
dec
jne
mov
hlt
scas
push
jnp
push
xor
inc
ficom
(bad)
mov
push
adc
xor
pop
and
push
es
test
ins
call
loop
xor
out
scas
loopne
test
pushf
js
pop
inc
shl
lock
or
jns
aad
call
inc
xor
daa
mov
xlat
movs
aad
mov
nop
jno
xor
(bad)
loop
pop
mov
add
mov
push
lahf
lock
arpl
movs
push
scas
xchg
aas
mov
cmc
mov
inc
shr
cs
movs
cld
sti
imul
xchg
(bad)
push
es
pusha
add
and
retf
dec
and
adc
retf
outs
dec
inc
mov
jl
xchg
iret
lock
daa
call
push
push
aas
sub
mov
repnz
xor
ret
and
mov
pop
int3
ja
pop
pop
mov
loope
std
mov
mov
push
mov
push
test
loope
xor
out
into
dec
sub
jp
add
xlat
cwde
adc
lahf
fs
ror
mov
and
je
es
nop
fisubr
or
cmp
fnsave
rcl
test
xchg
mov
dec
mov
stc
sbb
jecxz
pop
push
dec
jg
daa
test
jb
mov
data16
imul
and
mov
(bad)
lahf
nop
je
xchg
inc
cmp
retf
fcomp
pop
sub
sub
push
js
push
pop
pusha
xchg
(bad)
clc
and
in
sub
out
ins
dec
mov
xor
sub
fdivr
enter
jnp
rol
sbb
push
xor
pop
mov
jae
test
sbb
or
push
jg
fadd
inc
outs
aaa
lds
fcom
fidivr
inc
retf
and
xchg
repz
daa
inc
xchg
add
jge
inc
(bad)
stos
fdiv
fdivr
mov
pop
scas
ror
sbb
inc
xor
mov
mov
nop
dec
xor
lahf
(bad)
add
sbb
sbb
push
push
xor
cmp
ret
icebp
xor
std
repz
push
mov
stc
xor
push
mov
ss
pop
pop
arpl
ss
rcl
sbb
(bad)
std
add
in
shr
adc
mov
fidivr
jecxz
sbb
cmc
lds
int
mov
call
aad
push
cmp
mov
test
push
adc
sub
fisubr
outs
arpl
xlat
(bad)
mov
jbe
add
push
out
arpl
(bad)
mov
ins
jmp
cld
jecxz
test
or
xchg
jle
adc
stos
adc
sub
sbb
adc
mov
lods
or
jl
movzx
mov
into
in
sbb
cdq
cmp
cs
add
sbb
sbb
int
scas
xor
jmp
enter
jmp
add
jo
icebp
xlat
lods
mov
sub
sub
hlt
mov
movs
and
int
add
add
test
cmp
adc
(bad)
outs
cmp
scas
cdq
push
xor
push
jle
cld
xchg
popf
adc
(bad)
in
jnp
pushf
jmp
mov
mov
adc
inc
hlt
popa
rol
dec
daa
cmc
dec
ja
bound
psubusb
std
inc
aad
cld
pop
ja
jo
repnz
mov
in
mov
sbb
dec
mov
in
lock
rol
test
mov
fsubr
add
add
pop
lea
div
adc
pop
push
inc
pop
and
cmp
iret
and
enter
pop
jle
mov
ins
or
xor
add
pop
cmps
ins
pop
xor
mov
js
call
cwde
push
rol
mul
xchg
test
sub
pusha
and
retf
fs
ret
pop
aaa
ss
xor
lds
mov
cmp
aas
and
bound
dec
push
stos
mov
pop
or
mov
sti
jge
aad
loopne
sahf
ja
mov
enter
mov
ficom
adc
sti
lods
movs
test
dec
dec
jnp
add
jb
jl
jb
jmp
xor
pop
aad
mov
loope
or
fwait
pop
aaa
sbb
out
adc
out
pop
adc
(bad)
std
mov
xor
jl
(bad)
pop
lea
ret
outs
fcomp
loope
test
push
stos
sbb
jo
add
push
jmp
or
ds
push
push
xchg
push
sbb
aam
lds
and
push
jo
cmp
ds
ret
jl
push
mov
sub
xor
pop
mov
mul
sti
fcom
push
or
pop
sbb
mov
or
pop
jl
ja
out
inc
xchg
jb
icebp
ja
ficom
cs
cmp
pop
or
and
pop
(bad)
jae
mov
adc
adc
cmp
icebp
arpl
and
dec
pop
outs
mov
call
xchg
push
push
addr16
mov
mov
inc
fldenv
mov
jecxz
mov
hlt
(bad)
(bad)
cmps
outs
(bad)
fdiv
xor
push
cs
mov
in
ret
iret
add
dec
outs
xor
cli
push
adc
jg
adc
add
jg
push
mov
fsubp
jnp
loopne
retf
jle
mov
jecxz
and
fmul
add
cmp
sbb
or
inc
fidiv
mov
xchg
mov
nop
std
shr
es
jne
into
xchg
dec
xchg
shl
(bad)
aad
das
mov
mov
mov
arpl
ss
movs
or
adc
pushf
shl
jmp
push
and
pop
in
sub
loopne
ja
jmp
jae
fcmovu
clc
popf
inc
xor
fwait
xlat
push
test
leave
or
pop
pop
mov
jne
mov
or
jmp
cdq
xchg
xor
jg
imul
jnp
outs
push
aas
lods
int
mov
xor
dec
sbb
cmp
dec
test
jo
out
loopne
fld
pop
(bad)
inc
neg
add
cli
das
inc
xor
out
jae
or
mov
jb
aad
push
push
push
rcr
aaa
js
test
push
out
inc
lds
pop
dec
(bad)
int3
dec
(bad)
dec
loop
sub
dec
hlt
bound
dec
call
xlat
inc
dec
and
scas
xor
pop
push
pop
mov
sub
jae
call
fst
push
xchg
sub
add
add
aas
scas
mov
stos
imul
rcl
shl
arpl
push
sub
pop
pop
outs
in
sar
adc
shl
icebp
fisubr
jmp
outs
cmp
mov
repz
jmp
(bad)
mov
dec
fild
xchg
movs
add
cmp
bound
cmp
ror
adc
cmps
aam
into
pop
sub
mov
lahf
sahf
stos
inc
aaa
xchg
mov
inc
mov
js
pop
cmp
xlat
out
pop
cmp
sbb
or
push
fdivr
in
adc
jge
popa
retf
jo
add
jp
dec
mov
fisub
or
pushf
mov
cmp
jne
xchg
mov
mov
ja
pop
sub
mov
push
inc
sbb
ror
stos
lahf
aam
pop
cld
xor
push
aam
ins
xchg
(bad)
fld
scas
dec
sar
(bad)
call
dec
lds
popa
sub
test
adc
xchg
cmp
iret
sub
inc
sbb
call
or
sub
adc
jmp
ret
mov
iret
mov
shl
lds
loope
je
clc
push
sub
hlt
cmp
xor
inc
jge
push
mov
mov
and
js
outs
(bad)
mov
cmp
inc
jno
je
(bad)
sub
mov
or
shl
js
or
adc
out
jmp
aad
ins
jmp
adc
loope
nop
jbe
add
or
cmp
adc
scas
sub
mov
das
adc
jle
icebp
sahf
jmp
jle
dec
or
jl
push
sub
test
sub
mov
jne
dec
add
jle
std
mov
fwait
ret
cmp
(bad)
call
lods
addr16
mov
fnsave
jmp
sbb
fs
movs
pop
in
sbb
cmp
ret
push
ror
loopne
add
imul
push
pusha
in
xor
stc
push
or
fs
jne
cmp
xlat
mov
add
jnp
mov
add
mov
js
jae
mov
and
mov
fld
pushf
mov
loop
mov
mov
retf
xchg
lea
mov
loop
ret
cmc
xor
push
inc
or
(bad)
jmp
mov
inc
and
cmp
out
shr
je
sub
pop
and
in
pop
add
push
pop
xchg
fisubr
push
adc
pop
mov
jnp
in
mov
push
cmp
add
dec
aad
das
jle
mov
push
cld
dec
nop
push
sub
pop
ds
add
das
push
icebp
mov
or
or
loopne
cmp
sbb
leave
mov
xor
shl
mov
xchg
hlt
cmp
or
mov
push
xor
cmp
mov
or
fnstsw
pop
xchg
jne
and
cs
aaa
sar
xor
test
retf
sub
pop
hlt
lds
mov
mov
movs
adc
(bad)
xchg
bound
sub
enter
mov
shl
pushf
imul
jl
push
mov
jnp
cmp
sub
ror
mov
daa
imul
and
cmp
(bad)
mov
test
push
out
out
cmp
sub
ret
outs
hlt
enter
jae
jo
mov
out
shl
test
jmp
cmp
int3
sub
hlt
idiv
pcmpeqd
adc
ud1
mov
iret
fwait
clc
inc
rol
stos
dec
sbb
test
int
aad
in
dec
stc
shr
stos
pushf
and
and
cmps
(bad)
aam
cmp
mov
shr
nop
fsub
ins
sahf
mov
add
enter
sar
sbb
adc
cmp
adc
add
leave
rol
test
in
sbb
xchg
iret
mov
sar
jnp
add
and
(bad)
fsub
mov
mov
popa
pop
mov
jl
cmps
call
or
sar
je
pusha
inc
xchg
dec
imul
sub
out
jecxz
dec
cmp
mov
or
nop
lock
mov
push
das
jns
int
xchg
pop
jns
pop
pop
jmp
mov
pop
fsubr
test
fld
sub
pop
cmp
sbb
loope
int
push
int
pop
test
fst
ss
cmc
mov
ss
push
cmp
into
xchg
pop
dec
in
push
fs
jl
pop
in
jo
ja
xchg
(bad)
(bad)
std
jl
sub
mov
aam
add
in
jmp
lods
mov
cld
cmp
adc
fs
xor
push
adc
push
cmp
push
cmovns
(bad)
push
mov
jge
pusha
sub
jge
inc
push
xchg
stos
sar
xchg
sbb
jnp
call
pop
adc
(bad)
cdq
out
les
push
cmp
jne
pushf
pusha
add
sub
mov
sbb
mov
mov
retf
ins
cmp
xchg
retf
push
add
les
mov
mov
lods
data16
inc
xor
push
daa
mov
fs
cmp
scas
lahf
ins
leave
out
ficomp
push
stc
(bad)
bnd
pop
pop
add
rcl
fiadd
into
pop
shr
mov
fdivr
lods
out
bound
dec
mov
mov
movs
cmp
xchg
in
lds
xchg
call
out
fwait
xlat
cmp
push
xchg
or
cmps
pop
push
sub
jmp
push
cmps
pop
xor
jmp
cmp
cdq
push
out
test
sbb
sbb
fs
loopne
fs
leave
adc
test
pop
in
inc
in
loopne
bound
test
and
mov
repz
jmp
(bad)
daa
in
out
sub
mov
cs
mov
cld
xor
popf
int3
rcl
cmps
cmc
arpl
je
push
cmc
in
xchg
ins
cmc
push
mov
retf
out
adc
lock
jno
push
mov
pop
inc
push
fisttp
fdivr
movs
arpl
push
(bad)
pop
inc
aad
sub
mov
aad
sub
(bad)
js
pushf
cmc
aam
xchg
cs
xor
push
dec
mov
jnp
mov
sub
test
dec
fnsave
dec
scas
mov
jns
mov
inc
dec
js
cdq
aad
dec
dec
retf
sbb
int
xchg
fwait
xlat
bound
out
sbb
sbb
sub
(bad)
fdiv
aaa
push
mov
test
xchg
stos
add
shr
cmp
into
mov
imul
sub
add
jo
dec
mov
add
test
jle
inc
js
in
inc
pop
shl
adc
push
outs
sub
dec
mov
dec
aam
add
mov
adc
popa
lods
les
xchg
int
aaa
pop
mov
dec
fs
jmp
jmp
movs
jmp
xor
jle
or
arpl
adc
gs
leave
(bad)
gs
fld
and
sbb
push
iret
pop
cmp
ins
push
mov
inc
cmp
aaa
sbb
jne
jl
pop
mov
jp
dec
repz
jl
or
cli
(bad)
stc
icebp
sub
rcl
stos
in
bound
xchg
loop
sbb
sbb
add
pusha
xor
sti
sub
enter
sbb
les
sahf
and
push
xchg
outs
mov
push
mov
sub
jle
mov
inc
fucomi
sbb
dec
jns
rcl
shr
inc
xchg
cmps
xchg
or
dec
in
push
sbb
xor
xchg
jg
shr
ss
dec
inc
fld
inc
jle
sub
aaa
mov
jae
mov
mov
or
imul
aam
dec
adc
xchg
outs
mov
pop
and
out
sub
cs
push
mov
sub
add
mov
clc
push
cld
xchg
ret
clc
lods
mov
push
mov
movs
jp
sbb
lods
jns
and
ret
push
mov
push
push
pop
out
ret
out
mov
test
jg
or
lods
or
cli
int
lods
imul
popf
pop
cmps
paddd
xchg
mov
dec
mov
pusha
(bad)
sbb
adc
dec
repz
cld
(bad)
adc
stc
add
cmp
fwait
mov
icebp
pop
pushf
hlt
mov
rcl
pop
mov
icebp
add
pop
adc
inc
out
push
jne
outs
pusha
sbb
mov
lods
js
inc
or
or
not
fnsave
xor
retf
mov
mov
jo
jo
lahf
sbb
or
fwait
ins
test
mov
idiv
pop
jecxz
pop
ret
xchg
popa
pop
or
(bad)
sbb
les
mov
push
cmp
push
cmp
out
cwde
imul
inc
and
lahf
std
call
dec
dec
and
(bad)
and
sbb
call
xor
sbb
mov
loop
add
pop
repz
jp
add
aaa
loope
push
mov
sahf
xor
jl
fild
shl
jle
mov
rol
pushf
pop
in
mov
xor
in
jle
ret
mov
prefetchnta
pushf
aad
xchg
add
pop
pushf
pop
loopne
arpl
cmp
xchg
mov
adc
push
in
ins
pushf
mov
call
or
sbb
sbb
push
xchg
aaa
pop
mov
icebp
fwait
push
loopne
or
mov
ds
add
push
push
cmps
cs
adc
mov
popf
je
and
mov
imul
mov
pop
mov
test
adc
imul
gs
inc
sahf
shl
in
xor
cmp
push
(bad)
and
and
mov
scas
test
fst
leave
mov
aas
mov
adc
push
adc
and
dec
jnp
add
xor
iret
inc
adc
adc
jno
les
mov
cs
and
jp
(bad)
push
and
fist
adc
adc
aaa
pop
mov
jmp
xor
mov
push
fcom
(bad)
jae
xchg
(bad)
icebp
into
call
cmc
mov
ins
sti
add
adc
fidivr
sar
mov
int
inc
jmp
rol
movs
out
inc
and
outs
mov
call
add
xlat
(bad)
fmul
call
int3
pop
and
add
jp
mov
cmp
lock
xchg
fdiv
mov
pop
pop
rol
dec
inc
xor
test
and
bound
mov
and
loopne
dec
push
push
and
lock
lods
ret
mov
pop
inc
pop
jb
(bad)
jno
addr16
cmps
mov
adc
movs
jo
jae
jp
nop
aaa
scas
mov
mov
inc
sbb
outs
sahf
shr
mov
sub
test
js
cdq
adc
cmp
and
test
test
(bad)
and
aaa
fild
call
xchg
cmp
enter
inc
pusha
rcl
rcl
pusha
xchg
xchg
addr16
push
jp
cmps
xchg
pop
cmp
cmc
or
das
pop
inc
mov
inc
cdq
mov
ins
mov
mov
push
sbb
test
call
retf
daa
mov
mov
test
test
or
sahf
or
mov
adc
mov
sbb
and
or
sbb
lods
arpl
(bad)
sub
sbb
addr16
mov
inc
add
push
fmul
scas
in
retf
rcl
add
inc
fmul
adc
push
cmps
add
dec
add
xchg
cmps
add
sub
(bad)
js
xchg
outs
inc
repz
iret
loope
cmp
push
xor
cmp
push
mov
sti
ins
cli
iret
loope
repnz
(bad)
retf
adc
ss
push
xchg
mov
add
push
cmps
sub
imul
add
cmp
pop
dec
or
in
ss
enter
cwde
ret
scas
imul
or
cmp
sbb
stc
push
mov
test
inc
push
add
or
add
cli
push
pop
dec
aaa
xor
loop
mov
inc
outs
retf
or
pushf
add
fstp
and
mov
pop
jmp
dec
sbb
sbb
pop
and
nop
push
mov
(bad)
ss
loopne
outs
data16
adc
js
or
fsub
cmps
neg
sahf
adc
inc
rcr
pop
sbb
pop
add
(bad)
int3
test
movs
sbb
mov
dec
aas
pop
and
or
dec
repz
add
cmp
add
add
mov
repnz
sahf
push
test
fisubr
dec
pop
dec
add
leave
cmp
xlat
mov
push
ins
ins
shl
lea
fimul
adc
jmp
mov
out
sub
dec
inc
(bad)
push
scas
mov
clc
cmp
je
fldenv
test
push
pop
enter
jp
sub
sub
test
bound
ins
adc
xchg
pop
push
mov
cmp
jns
popf
call
(bad)
push
xabort
pop
pop
dec
pop
or
mov
jecxz
mov
loope
or
mov
cld
xor
inc
or
xlat
aas
pop
cmc
fldcw
xchg
sub
shr
aaa
push
gs
call
in
sbb
mov
movs
add
add
not
enter
mov
lods
je
xor
iret
es
push
pop
add
mov
xchg
mov
sbb
imul
dec
cmp
sub
retf
(bad)
fcomp
leave
mov
pop
push
mov
ins
(bad)
loopne
ror
repnz
or
popf
pop
xchg
sbb
and
aaa
mov
iret
inc
xor
push
jecxz
loopne
sbb
xchg
sbb
xor
inc
mov
push
mov
dec
adc
inc
jns
sbb
aad
push
imul
int3
out
pop
mov
sbb
xchg
xor
pop
ss
jle
shr
xchg
retf
shl
fmul
add
jno
xor
ret
sahf
(bad)
pop
jno
dec
nop
push
pop
xor
stos
stc
daa
inc
jno
xor
out
mov
mov
jnp
cmc
int
mov
pop
sbb
cmp
add
je
inc
in
out
cmp
in
pop
cwde
aam
les
xor
push
jb
adc
push
ds
xchg
test
mov
sub
imul
or
pop
daa
pushf
mov
ja
sbb
or
sub
mov
data16
xchg
jmp
lds
repnz
sub
xchg
in
jb
mov
punpckhwd
mov
mov
sbb
cmp
push
cmc
pop
xor
pop
jl
or
cmp
lea
push
push
stc
push
push
mov
xchg
xor
inc
pop
inc
mov
and
rcr
jb
mov
pop
ds
mov
jl
pop
sbb
ret
push
je
and
mov
repnz
out
dec
sbb
sbb
iret
xchg
sar
sti
xor
aam
mov
adc
jns
sbb
lock
(bad)
in
xor
nop
sbb
(bad)
fs
(bad)
or
sub
jmp
push
inc
pop
retf
pop
pushf
pop
mov
test
popf
cmc
dec
dec
ds
jmp
mov
adc
jmp
pusha
icebp
movs
gs
dec
enter
jno
ja
xchg
add
push
cmc
repz
mov
stos
push
lahf
(bad)
test
lds
fs
mov
jp
jge
in
or
outs
mov
add
jnp
pop
(bad)
push
dec
xchg
enter
xchg
in
test
sub
lahf
pop
pop
adc
repnz
xchg
repz
xor
hlt
mov
mov
out
jno
mov
mov
adc
and
movs
xchg
emms
ret
adc
dec
mov
adc
dec
pop
dec
int
sub
icebp
pop
fnstenv
fadd
pop
push
push
hlt
cmp
mov
cmps
or
add
cmp
cmp
out
hlt
scas
push
ins
jp
std
cmps
stos
jp
(bad)
jne
add
ficomp
sub
xchg
dec
sbb
clc
pop
popa
(bad)
xchg
imul
lods
rcr
or
push
aam
daa
aam
adc
inc
jb
scas
in
call
xor
sti
add
inc
push
lock
mov
js
nop
loop
(bad)
(bad)
(bad)
movs
push
les
mov
and
outs
jp
xchg
shl
loop
adc
cmp
fwait
(bad)
sub
ret
inc
dec
jne
cmp
inc
std
aas
jle
add
dec
lods
out
xor
xor
das
sub
add
xchg
movs
jae
cld
or
mov
xchg
pushf
mov
xchg
mov
rcl
jl
sub
xor
pop
xchg
jecxz
fs
xchg
add
or
jo
push
sbb
stos
jle
mov
ja
ret
mov
mov
jmp
mov
adc
cwde
cmp
out
mov
or
add
(bad)
adc
pop
add
(bad)
cwde
arpl
pop
xor
ret
lods
cmps
sahf
leave
enter
cld
mov
sub
idiv
sbb
je
and
or
sub
out
inc
xchg
mov
jmp
(bad)
cmp
sub
pop
and
stos
sbb
pop
jne
leave
loopne
fwait
cld
inc
jle
mov
push
jbe
mov
mov
jne
inc
hlt
out
xchg
fs
push
cdq
ds
xchg
and
xchg
(bad)
iret
sar
sbb
xor
mov
or
push
cmp
pop
addr16
lods
icebp
ret
xor
pop
mov
adc
in
jne
add
or
mov
lods
mov
dec
fld
fwait
scas
jnp
pop
mov
xlat
cmp
xchg
icebp
mov
cli
int
xor
fst
fisubr
cmp
jbe
mov
hlt
sbb
aaa
aam
loop
mov
inc
cmp
xchg
retf
pop
fs
fistp
mov
xchg
push
sbb
in
test
mov
mov
ss
push
ins
add
icebp
dec
pop
int3
cmp
mov
adc
inc
out
push
pop
inc
aam
dec
dec
mov
mov
sub
xlat
xchg
ds
xchg
xchg
pusha
repnz
jmp
sbb
retf
push
fnstcw
sbb
xor
loopne
test
fmul
es
nop
gs
xchg
(bad)
xchg
aas
(bad)
in
popa
add
push
adc
int3
imul
jecxz
jbe
(bad)
sub
into
sahf
in
sbb
adc
out
jmp
fisttp
cmp
pcmpgtd
and
rol
mov
loopne
stos
pusha
or
jns
pop
cmp
pop
inc
pusha
xor
mov
ret
cld
push
or
jp
inc
popf
pop
pop
imul
(bad)
out
add
sub
imul
and
out
add
jne
push
jmp
neg
(bad)
test
mov
sub
dec
cmps
cmp
std
fs
loop
sbb
dec
and
fwait
and
mov
or
fwait
lahf
stc
add
imul
js
mov
add
push
jbe
cmp
in
lods
dec
mov
sti
and
mov
(bad)
sahf
lea
movs
imul
aas
aad
or
and
jmp
xchg
imul
ins
dec
ficom
mov
(bad)
outs
retw
push
mov
pop
lahf
ret
or
xchg
test
inc
sub
xor
inc
mov
xchg
outs
and
pop
data16
adc
or
stc
es
add
les
test
lds
inc
and
mov
add
xchg
cld
mov
out
cdq
test
sbb
popf
and
or
mov
dec
sbb
mov
in
outs
es
jns
sbb
dec
sbb
and
out
lods
aad
mov
popa
(bad)
arpl
jns
inc
lahf
out
in
pop
lahf
pop
out
cmp
sbb
jmp
mov
mov
xor
cwde
out
jl
lds
and
or
out
adc
sahf
and
ss
cmp
cmp
push
cs
push
sbb
aaa
cmp
lds
pop
add
cmps
js
push
add
pop
(bad)
dec
frstorw
xor
dec
icebp
fidivr
out
dec
sar
cmpxchg
cmp
sbb
pop
add
out
sub
mov
cmc
xor
mov
mov
scas
adc
xor
pop
imul
push
ror
sahf
movs
jg
repz
xchg
jo
mov
jmp
mov
in
in
jno
aam
bound
push
xchg
or
and
call
test
cmp
xchg
int3
pop
lock
sbb
jmp
retf
mov
cmp
ficomp
retf
xchg
loop
retf
push
push
mov
mov
xchg
(bad)
test
lds
adc
arpl
cmc
stos
add
out
mov
push
in
test
jl
rol
(bad)
inc
dec
pop
enter
fs
pop
jb
call
push
mov
pop
jmp
test
aaa
xchg
xchg
cs
add
lods
cmps
mov
adc
in
sbb
push
add
shr
in
and
mov
(bad)
push
ror
push
xchg
sbb
out
ja
pop
push
arpl
push
jne
(bad)
clc
jae
fucomi
xchg
pop
inc
mov
ja
mov
mov
mov
fdivr
add
or
push
les
mov
imul
adc
sahf
nop
mov
cld
add
je
call
jb
fidivr
cmps
cmp
clc
mov
aad
loopne
mov
out
mov
leave
mov
jae
add
xlat
cdq
lods
mov
sub
pop
aad
and
add
or
popa
add
int3
push
xlat
and
mov
fsub
add
adc
cdq
jb
pop
call
mov
sub
mov
inc
push
in
or
or
std
movs
(bad)
fstp
adc
push
movs
jg
cmp
push
cmp
retf
push
add
add
js
mov
jmp
xor
call
repz
out
and
cmp
inc
pop
or
sbb
jae
adc
and
push
je
ror
int3
ins
outs
and
pop
push
sub
into
pop
jo
cmp
dec
dec
int3
dec
jmp
enter
pop
bound
push
cmc
jbe
mov
sbb
(bad)
push
or
mov
mov
loope
pop
mov
int3
fwait
aad
les
out
add
mov
dec
sbb
jbe
sti
imul
adc
adc
cdq
or
sar
sbb
or
idiv
rol
(bad)
mov
test
repnz
aas
xchg
or
pop
inc
es
lahf
shr
(bad)
fprem1
les
gs
aam
mov
js
mov
das
jo
pop
movs
sub
mov
mov
mov
xor
in
fisubr
pop
(bad)
jge
stos
add
or
dec
jae
adc
fwait
inc
mov
iret
pop
je
cli
push
addr16
push
jmp
mov
push
mov
sbb
addr16
pop
or
cmp
in
push
mov
sub
iret
retf
ret
mov
cld
xchg
jp
fadd
and
cmp
inc
fidivr
daa
dec
jp
ins
push
or
jae
je
mov
sar
(bad)
jne
dec
mov
mov
jnp
int3
add
xor
dec
(bad)
aad
mov
push
mov
or
push
jp
mov
mov
popa
sub
inc
test
fptan
push
scas
daa
mov
mov
xchg
out
mov
or
sub
dec
mov
add
(bad)
loopne
je
pop
call
aaa
xchg
mov
or
sbb
sahf
test
and
xchg
popf
fimul
jp
xchg
cwde
in
jl
iret
call
in
and
(bad)
add
popf
sbb
mov
pop
test
add
add
ret
jno
ret
cs
test
leave
fnstenv
xchg
jno
gs
mov
sbb
jle
je
sbb
sub
mov
aam
out
aad
stos
push
mov
mov
add
test
fstp
in
ror
dec
pop
loope
in
shr
fmulp
ret
or
frstor
pop
sub
sub
xor
or
in
or
std
jnp
lahf
dec
sbb
push
sahf
je
jecxz
inc
jp
mov
add
pushf
rcr
aas
js
cmc
cwde
outs
xchg
xchg
ins
repz
dec
cmps
mov
xor
shr
in
adc
or
(bad)
pop
mov
jo
imul
fdivr
jp
ds
call
pop
jecxz
cli
or
rcl
inc
push
push
aas
sbb
xor
mov
imul
stos
or
jecxz
fsub
(bad)
cli
fbld
cmp
dec
mov
cmp
push
xor
test
adc
push
lea
or
mov
jne
mov
ins
test
sar
or
jne
movs
mov
sbb
mov
sub
scas
pop
fs
mov
(bad)
out
ds
and
mov
sub
jle
repz
call
sbb
mov
mov
jb
xor
and
movs
cli
sbb
movs
jmp
cmc
fsubrp
jo
cwde
dec
test
mov
inc
push
fild
sbb
or
popa
inc
popa
pushf
cmp
arpl
call
jne
xchg
ss
cmp
mov
add
mov
stc
sbb
inc
jge
adc
and
retf
(bad)
ins
or
mov
xor
push
nop
aas
lods
ret
dec
(bad)
outs
bound
lods
xor
cmp
and
jae
test
stos
sbb
jb
fild
fst
in
jb
sub
push
test
cwde
mov
jns
div
sub
mov
leave
xor
fwait
sbb
fisub
jo
test
sub
ins
push
jle
sbb
aam
scas
push
adc
adc
in
cmc
retf
add
jnp
dec
mov
mov
scas
fstp
lds
ret
pop
sbb
lahf
fdivr
inc
sub
jmp
pop
cld
xchg
push
dec
xchg
xchg
xchg
retf
mov
mov
mov
push
xchg
add
cld
retf
mov
sbb
sub
push
lods
cmps
jp
pushf
nop
jecxz
xchg
pop
fwait
(bad)
test
xor
fwait
or
je
add
out
pop
sbb
nop
les
das
pop
enter
outs
jo
xchg
push
push
fistp
mov
mov
add
xor
cmp
jp
mov
inc
pop
dec
aaa
ret
adc
xor
xlat
es
push
and
and
out
sbb
mov
sar
sbb
sub
arpl
or
cmp
dec
div
cmc
rcr
xor
or
movs
and
push
div
jbe
jp
mov
mov
cmp
jg
arpl
cmp
mov
cli
div
sub
shl
adc
aad
int
lahf
push
stos
xor
fsub
in
je
sbb
jo
xor
scas
mov
aas
jo
cdq
jb
test
xor
test
pop
adc
pop
cdq
xor
or
jbe
adc
jge
nop
pop
pop
push
inc
cmp
push
fsubr
hlt
mov
std
hlt
cdq
scas
push
scas
ss
das
hlt
cmp
sub
xchg
jle
sbb
lahf
sbb
pop
rol
sub
test
sub
in
sub
loop
sbb
xchg
mov
pop
sbb
bound
jns
pop
add
lock
nop
pushf
add
jbe
lods
test
inc
cmp
les
sub
push
std
stos
dec
fisttp
push
int3
push
dec
or
cmp
push
enter
fsub
pop
fs
jae
fucomp
push
fcomip
outs
out
sbb
movs
push
lock
(bad)
pop
lods
xchg
shl
mov
jg
shl
add
cli
pcmpeqb
push
and
(bad)
xor
xchg
and
daa
and
inc
mov
sbb
mov
sbb
fcom
aad
pop
mov
shl
xor
add
mov
out
ret
not
mov
cdq
jo
fiadd
loopne
shr
bound
neg
and
xor
ins
jbe
(bad)
test
movs
pop
mov
pop
aam
inc
aas
dec
js
mov
sbb
adc
or
cmp
push
jno
mov
cwde
call
push
in
stos
arpl
mov
or
fstp
neg
stc
jb
or
fcmovbe
(bad)
lea
dec
lods
mov
add
cwde
pushf
out
sub
cmp
gs
ins
cdq
ror
push
call
sub
call
xor
pop
mov
push
retf
(bad)
cs
je
pushf
push
retf
out
mov
fadd
jmp
add
sbb
fnsave
xchg
cmp
lods
cs
push
inc
lods
cmps
inc
pop
jl
test
ins
mov
js
aas
nop
xchg
inc
pop
jno
cwde
sub
sbb
mov
mov
shld
rcr
div
mov
lds
pop
mov
dec
popf
xchg
mov
or
aad
mov
sbb
jae
mov
sbb
mov
pop
fdiv
cmp
les
ja
mov
pop
pop
ds
mov
xor
shl
hlt
and
jne
retf
add
daa
int3
and
test
pop
aad
ins
lahf
jbe
repz
fidiv
stos
movs
shl
imul
xor
cmp
push
shl
or
rep
ins
sub
mov
jle
mov
mov
in
mov
aad
movs
inc
sbb
sti
add
ds
add
stos
call
mov
mov
pusha
mov
xor
push
outs
repnz
mov
mov
sub
push
les
or
jbe
or
xchg
daa
sbb
rcr
test
in
inc
cs
stos
scas
xor
(bad)
jns
inc
adc
hlt
jmp
loopne
test
dec
fild
test
repnz
arpl
push
jbe
inc
mov
jmp
cmps
jge
pop
fild
(bad)
mov
lea
mov
adc
fwait
push
xlat
mov
in
enter
test
cld
cmp
daa
call
out
aaa
jno
mov
sub
ret
stc
dec
jne
dec
scas
xlat
ins
sub
push
repnz
inc
dec
mov
jp
pop
inc
shr
cmp
inc
or
mov
gs
repz
test
or
cmc
push
in
pop
sub
mov
cli
xchg
add
out
lea
fadd
xor
push
loope
pop
cld
in
add
ins
lods
les
jbe
in
sbb
jo
jmp
mov
pop
loope
lahf
int
jae
rcr
outs
mov
pop
adc
pop
loope
outs
cld
xor
mov
add
sub
mov
push
add
push
repz
adc
stc
jmp
(bad)
icebp
cmc
retf
and
(bad)
(bad)
pop
and
retf
test
jecxz
mov
orps
push
ja
mov
mov
xor
in
push
add
loopne
(bad)
jb
nop
add
push
js
arpl
fsubr
call
popa
xchg
jbe
mov
fisub
outs
mov
mov
dec
loopne
jbe
lods
mov
cmp
add
js
mov
pusha
ret
push
neg
xor
inc
cmp
inc
es
dec
imul
es
inc
pop
push
mov
dec
mov
sti
movs
mov
clc
dec
dec
or
inc
mov
out
jmp
jmp
call
out
aas
dec
(bad)
por
push
sbb
xchg
jno
movs
pop
(bad)
jmp
movs
cdq
ins
mov
loope
mov
sbb
xor
inc
xchg
or
xchg
push
mov
imul
sbb
and
(bad)
xor
ret
lods
in
int3
mul
sub
outs
push
(bad)
shl
aam
jno
out
jecxz
sub
push
imul
jnp
fisttp
fcomp
jo
xchg
mov
ret
ins
neg
jne
call
dec
sbb
and
push
push
adc
or
imul
sub
and
fiadd
pop
pop
fcomp
add
pop
shl
dec
jae
pop
idiv
loope
cmp
or
push
enter
jmp
test
xchg
jmp
adc
mov
mov
js
jmp
xchg
push
lea
cmps
aaa
ja
add
or
jmp
push
or
jns
sti
(bad)
jns
popf
sub
adc
or
neg
lods
movs
nop
jge
enter
mov
ss
and
xchg
movs
(bad)
sbb
add
mov
mov
rcl
and
mov
dec
frstor
pop
push
push
pmulhuw
sbb
in
call
jbe
js
jbe
std
imul
sahf
fdivr
mov
mov
fdiv
mov
push
test
pop
mov
xor
sbb
es
ror
imul
inc
cld
jmp
dec
add
mov
test
or
dec
mov
shr
mov
test
push
fscale
push
jae
pop
daa
call
jg
cmp
dec
ret
shl
mov
mov
mov
xchg
pusha
cmc
inc
ins
clc
add
jmp
lock
fst
sub
push
and
cld
adc
pop
in
inc
das
(bad)
or
cmp
out
ss
stc
aam
call
xlat
mov
pop
arpl
xchg
imul
xor
xchg
or
(bad)
test
jbe
aam
int
jno
clc
or
cwde
fmul
xor
sbb
je
repz
data16
dec
(bad)
xchg
cmc
mov
fst
pop
mov
lods
lahf
sbb
or
xchg
rol
shr
rcl
clc
jno
xchg
popf
mov
jmp
loope
inc
out
xchg
jbe
fnstcw
inc
add
cwde
add
mov
sbb
(bad)
lods
call
xchg
xchg
les
in
lock
pop
loope
stos
in
add
cmp
ret
(bad)
popf
mov
and
jne
repz
xor
into
inc
js
ret
cmp
and
adc
push
xchg
iret
cmps
mov
hlt
in
pusha
jnp
adc
cld
sub
adc
in
dec
mov
and
pop
mov
pop
sti
dec
and
cmp
stc
aas
ins
test
je
pusha
xchg
mov
and
dec
dec
jae
jp
or
rcl
sbb
enter
mov
push
das
mov
push
jmp
sub
fild
pop
dec
ins
sub
bound
movs
fmul
adc
jae
dec
inc
loop
cmp
pop
out
pop
(bad)
jb
out
push
movs
outs
jno
pop
shr
mov
or
adc
push
inc
jo
adc
mov
inc
jl
jmp
or
aaa
lods
imul
in
inc
(bad)
scas
cmp
(bad)
and
test
fs
out
adc
scas
pop
xor
out
add
cli
aaa
cwde
cmp
jb
out
mov
sbb
inc
js
(bad)
cwde
add
out
daa
xchg
push
lock
mov
cmp
push
cmp
or
xchg
jl
dec
dec
xchg
mov
push
icebp
pop
sub
dec
xchg
fwait
and
movs
cdq
pusha
fprem
fdiv
pop
aaa
dec
in
outs
xchg
imul
mov
mov
pop
xchg
lods
dec
mov
adc
mov
pop
mov
jge
(bad)
test
push
movs
mov
(bad)
sahf
not
popa
push
mov
mov
mov
add
or
repz
mov
mov
jmp
and
inc
adc
or
and
push
dec
not
gs
cmc
outs
xchg
mov
std
mov
adc
cdq
mov
mov
add
div
xor
add
dec
stos
add
iret
push
cwde
imul
xor
fnstcw
push
loope
sbb
add
cmps
push
(bad)
mov
xchg
repnz
out
mov
call
js
nop
pushf
(bad)
psrlq
mov
out
and
jge
xor
cmp
in
es
xchg
push
(bad)
hlt
ss
ds
cmp
xchg
sti
pop
sbb
aad
repz
and
sub
or
aaa
nop
std
addr16
jmp
in
or
out
mov
pop
mov
xchg
(bad)
dec
rcl
popa
mov
mov
test
adc
shr
xchg
add
xchg
adc
imul
cwde
daa
mov
jmp
pop
outs
adc
rcr
pop
out
sub
add
and
mov
inc
push
fwait
jo
enter
imul
in
or
not
jmp
or
inc
sub
ret
stos
in
aaa
repnz
mov
in
xchg
cdq
movs
pop
xchg
jp
stc
push
bnd
inc
(bad)
jmp
pop
mov
pop
cmp
sub
sti
mov
arpl
mov
jne
xor
stc
adc
mov
nop
scas
sbb
loop
shl
loop
push
add
fcomp
rol
shl
sbb
test
mov
cld
mov
xchg
mov
add
sbb
pop
xchg
imul
cmps
test
jns
push
and
fistp
cmp
outs
clc
mov
xor
and
leave
arpl
leave
inc
popf
cdq
pop
cmp
mov
sahf
repnz
mov
mov
sub
ss
cli
mov
cmc
inc
dec
clc
in
cmp
and
jl
in
jecxz
aam
out
dec
retf
and
sahf
jmp
add
sub
sub
imul
inc
ins
imul
xchg
in
test
(bad)
daa
scas
enter
lods
xor
fwait
enter
bound
sub
test
adc
xchg
lock
cmp
ja
jg
mov
ds
mov
jp
push
mov
mov
ds
adc
scas
and
ret
ret
aam
(bad)
mov
inc
pushf
mov
cmp
add
nop
(bad)
mov
push
xor
aas
jnp
pop
jle
dec
ss
test
imul
movs
rcr
mov
aas
fdiv
(bad)
push
lea
mov
imul
data16
cwde
test
jbe
sbb
or
les
sub
mov
out
dec
jle
(bad)
retw
jbe
popf
je
fwait
out
sar
ins
dec
(bad)
scas
ins
aas
daa
mov
call
push
aad
xor
xor
or
push
test
sub
sub
iret
sti
adc
fmul
popa
pop
lahf
jl
stc
scas
in
jmp
add
stos
movs
ret
push
inc
adc
inc
jbe
or
sub
inc
fwait
xor
ins
mov
mov
sbb
retf
xchg
mov
cdq
sbb
out
shl
sti
inc
jo
rol
push
sub
mov
push
jo
mov
call
mov
sub
icebp
sahf
stos
add
clc
jnp
imul
test
outs
(bad)
mov
aas
lahf
ficomp
cmp
xchg
enter
push
je
sub
cdq
test
pop
movs
outs
pop
outs
mov
dec
fidiv
imul
shl
jb
mov
inc
aas
xor
cmps
lea
and
stos
jecxz
in
cmp
add
adc
xchg
add
or
sub
mov
pop
xchg
scas
scas
mov
jle
retf
sbb
nop
fidiv
push
sahf
mov
adc
push
jb
add
jne
aad
jno
sahf
mov
aam
ins
enter
(bad)
clc
mov
sub
add
jns
mov
in
nop
data16
icebp
jle
mov
sbb
idiv
inc
repnz
dec
js
stc
jnp
lods
aas
clc
mov
sbb
pushf
add
popf
mov
mov
div
dec
inc
fsub
xor
int
jae
or
not
clc
push
and
or
inc
aam
cmc
scas
pop
repnz
enter
repnz
and
retf
je
mov
push
inc
mov
push
add
sahf
js
mov
leave
or
mov
dec
fldenv
mov
xchg
mov
in
call
ja
xor
(bad)
std
jo
jp
aam
scas
call
jb
mov
sub
mov
mov
sbb
dec
sbb
pusha
test
call
jmp
cmps
dec
sbb
sub
and
xchg
sbb
or
out
fidiv
sbb
jne
add
jp
outs
sbb
jns
stos
cmps
xchg
pop
inc
add
lods
cmp
add
push
rcl
mov
fs
mov
mov
cmp
sti
push
jnp
xor
push
int3
inc
inc
jecxz
leave
movhps
leave
inc
sub
pop
mov
dec
mov
and
ins
pop
add
pushf
test
dec
test
addr16
aaa
cmp
push
cmp
jne
and
ja
das
dec
mov
jg
daa
xor
jne
mov
and
fild
movs
arpl
imul
mov
and
inc
repz
leave
repnz
sar
outs
pop
adc
add
arpl
cli
(bad)
call
retf
or
pop
arpl
mov
sub
std
xchg
dec
add
mov
adc
fnstsw
cmp
(bad)
mov
(bad)
aam
aas
hlt
jno
jo
pop
sbb
push
cmp
sub
push
idiv
push
push
add
ret
sub
fild
sub
mov
jae
into
popf
mov
ficom
add
jnp
je
adc
xchg
jp
imul
xor
dec
outs
repz
jo
push
fsubr
inc
icebp
or
ins
out
sbb
xchg
jae
mov
scas
push
inc
mov
push
sbb
mov
jmp
mov
inc
sbb
xor
add
cmp
cli
aaa
push
aad
popa
add
mov
mov
sub
mov
int3
pusha
nop
cdq
scas
test
push
dec
repz
mov
xchg
ins
xlat
loope
pop
jno
xchg
movs
mov
icebp
cmp
pop
mov
ror
push
and
mov
or
cmp
imul
push
imul
cmp
push
mov
movups
mov
data16
or
push
xchg
sbb
shl
cmp
sar
xchg
add
push
push
xchg
in
and
test
add
mov
sbb
add
addr16
mov
jne
add
jo
pop
push
hlt
frstor
mov
cmps
ret
retf
lock
jecxz
fnsave
test
and
sub
jnp
sbb
pop
and
xchg
jmp
or
dec
pop
push
adc
(bad)
mov
mov
adc
shr
rol
nop
xor
dec
fdivr
and
retf
sti
cmp
or
dec
stos
int3
(bad)
dec
retf
and
and
adc
lea
cmps
fldcw
es
int3
mov
aaa
xchg
and
adc
or
sahf
mov
xlat
mov
scas
mov
add
lock
mov
pop
loop
call
mov
out
dec
pop
jmp
dec
fnstcw
fucomi
mov
(bad)
jns
ins
dec
repz
push
inc
mov
xor
cmp
jne
adc
push
shl
jg
push
xchg
push
xchg
dec
jno
popf
(bad)
loopne
or
int
add
adc
imul
adc
xchg
ficom
repz
cmps
data16
xchg
leave
scas
mov
sbb
add
outs
fwait
and
inc
je
jmp
fst
int
(bad)
jae
xor
rcr
fnstsw
out
add
mov
sub
xchg
or
mov
mov
lea
daa
mov
cmps
shr
in
and
mov
and
pop
mov
bnd
push
pop
adc
lods
inc
aas
and
mov
ret
inc
mov
jmp
out
in
repnz
mov
push
imul
or
add
scas
inc
sbb
das
(bad)
jg
push
fild
sbb
and
push
jecxz
xor
pop
jge
sbb
into
push
cld
shr
cmps
xor
les
test
out
ret
(bad)
jmp
addr16
pushf
shl
or
icebp
fnstenv
xchg
cmp
jl
stos
adc
ret
xor
fdivr
sahf
xchg
movs
imul
xchg
sub
xchg
mov
add
ret
(bad)
iret
out
dec
cmc
and
rol
outs
xchg
jmp
ss
(bad)
jnp
cmps
scas
sub
add
mov
ss
out
inc
pop
retf
pop
jle
aas
xchg
call
loope
repnz
sbb
cmp
xlat
fimul
jp
dec
dec
lea
xchg
push
mov
aaa
popa
ins
imul
mov
dec
inc
es
fwait
int3
stos
dec
repnz
loop
add
into
lods
sub
adc
xor
test
pop
pop
jo
cmp
dec
daa
and
ret
xchg
xor
movs
mov
loope
mov
sbb
in
push
mov
push
outs
imul
mov
mov
pop
xor
(bad)
mov
mov
ficomp
cli
aaa
dec
cmp
xor
icebp
mov
mov
cdq
xchg
cli
push
je
or
inc
xchg
fisttp
jnp
cli
mov
pusha
mov
jle
push
retf
scas
pop
cwde
std
cmp
mov
scas
pop
out
xor
shl
or
pushf
std
cmp
in
sub
ret
js
xor
dec
out
jb
lods
jp
nop
or
not
mov
mov
retf
in
mov
jns
in
in
mov
(bad)
ins
xchg
sub
xor
jp
cdq
and
mov
bound
retf
imul
cmp
fsub
mov
add
push
xor
jle
add
lea
jb
dec
cwde
mov
push
ret
(bad)
jecxz
or
sbb
movs
sar
int3
mov
sbb
(bad)
test
je
outs
pop
test
in
inc
fwait
ret
adc
sub
jle
add
data16
dec
scas
mov
mov
pop
outs
pop
jns
and
sbb
jp
jo
mov
dec
into
pop
mov
(bad)
clc
or
loope
jnp
adc
lods
push
sub
(bad)
sbb
cmp
shl
adc
(bad)
pop
dec
xor
scas
loop
ror
mov
pushf
ins
mov
call
inc
push
pusha
pop
jecxz
loop
jb
sar
xchg
fiadd
dec
jae
push
nop
inc
xlat
in
scas
cwde
jmp
add
ss
out
jne
cmp
pop
icebp
stos
les
and
int3
imul
clc
mov
retf
dec
inc
sahf
mov
cmps
push
cmc
cdq
xor
out
shr
imul
(bad)
sbb
jmp
mov
pop
add
sub
and
sbb
fmul
add
pop
movs
sbb
ret
cmc
mov
pop
cmps
daa
pop
(bad)
jbe
or
xor
aaa
movs
popa
cwde
pop
xchg
jg
test
add
or
addr16
jns
in
inc
mov
mov
push
mov
push
aad
jb
sar
sbb
sbb
idiv
mov
(bad)
sahf
std
in
jnp
int3
in
mov
(bad)
adc
cli
dec
push
sti
cdq
add
xor
push
sub
and
or
jo
cmps
and
add
call
dec
jmp
addr16
mov
mov
xchg
xor
pop
lock
dec
call
or
and
jg
pusha
retf
lods
out
idiv
imul
je
movs
pop
cmp
jmp
pop
inc
fcomp
jns
loop
addr16
xlat
push
cmp
es
icebp
inc
out
pusha
jne
xchg
xor
mov
xchg
es
ss
cmp
arpl
cs
sbb
and
pop
ins
sub
bound
ins
dec
test
hlt
inc
fsub
xchg
cs
sub
or
dec
mov
and
movs
push
dec
adc
jae
test
adc
cmps
fstp
call
ret
test
int3
push
aaa
fidiv
pop
inc
and
aas
scas
dec
mov
cmp
and
adc
mov
dec
test
jbe
aas
dec
or
mov
ret
imul
retf
cld
jmp
push
xlat
push
add
pop
addr16
mov
stos
enter
pop
and
add
popa
lea
icebp
cmp
cmp
push
mov
es
fsubr
xchg
dec
xchg
mov
cdq
jmp
inc
push
les
and
leave
xchg
stos
in
dec
aam
lahf
lahf
out
and
shl
push
retf
mov
retf
mov
cmc
jp
clc
ror
push
mov
pop
cmp
xlat
push
ror
or
cmp
lods
mov
jg
(bad)
dec
loope
xchg
ror
daa
mov
lahf
sub
lahf
sbb
mov
js
popf
mov
or
mov
mov
or
push
mov
jbe
lods
adc
xor
mov
or
daa
mov
(bad)
aam
(bad)
shl
jo
push
jb
mov
pushf
test
xor
pop
and
dec
and
inc
jmp
xor
inc
cmp
jmp
add
std
lahf
jg
or
mov
sbb
(bad)
sbb
mov
push
retf
sahf
mov
into
or
sbb
sub
iret
jmp
add
lods
jecxz
cwde
sbb
pop
imul
push
xor
xchg
jge
fs
or
dec
adc
xchg
add
inc
je
repnz
lods
iret
jg
(bad)
sbb
sbb
mov
adc
jge
fwait
out
ficom
pop
mov
leave
shl
cmp
call
ds
in
pop
lahf
dec
test
adc
push
dec
popf
dec
in
mov
lea
pop
out
(bad)
jb
jmp
mov
leave
jmp
int3
fcomip
aas
in
sbb
movs
aad
jnp
retf
jae
stos
jnp
cmp
mov
stos
push
pop
out
cmc
pop
pop
sub
jmp
es
mov
and
arpl
dec
xchg
add
dec
stos
sbb
jne
mov
pop
jle
xchg
test
stos
mov
or
mov
sub
jecxz
add
adc
sbb
clc
cmp
loope
test
sub
push
mov
sti
add
das
bound
xchg
mov
adc
jne
cmp
jmp
push
push
shr
iret
fwait
mov
push
mov
dec
ficom
out
push
inc
out
lea
jmp
rcl
fcom
lahf
mov
pushf
call
cs
lods
mov
push
dec
xchg
xor
jb
dec
dec
sbb
adc
das
jl
sbb
lahf
(bad)
jnp
cmp
jle
cs
jge
stos
add
xchg
sbb
xor
mov
and
mov
mov
cmc
xchg
(bad)
pop
mov
call
or
jb
add
mov
test
(bad)
cmp
or
lea
fstp
in
mov
pop
pop
pop
add
stos
das
fist
cmp
pop
pop
push
in
jnp
push
push
imul
popa
xor
and
mov
scas
aas
add
adc
xchg
xlat
test
push
inc
je
or
cli
sub
and
jno
add
(bad)
cwde
and
xchg
sub
out
sahf
cmp
int3
push
imul
je
out
add
es
or
imul
bound
outs
and
adc
and
xor
daa
pop
daa
xchg
out
aam
nop
mov
push
or
cmp
add
les
getsec
adc
test
jbe
stos
sub
cli
cmp
sub
lahf
inc
enter
xor
mov
add
push
cmp
pop
sti
adc
movs
out
mov
push
lahf
addr16
jbe
add
sahf
pop
sub
loope
pusha
sub
cli
and
sbb
test
(bad)
out
ja
push
neg
addr16
jnp
jge
bound
mov
adc
(bad)
jp
lahf
mov
mov
pusha
arpl
sbb
rol
xchg
aad
and
fadd
idiv
jb
xchg
sub
(bad)
fst
pusha
mov
jo
in
pusha
(bad)
mov
aas
inc
add
in
mov
fnstsw
jno
sahf
and
in
mov
ret
dec
lock
ret
push
push
in
and
jmp
cmp
jo
jecxz
je
addr16
lock
push
outs
pop
xchg
xchg
xchg
xor
popa
mov
sub
push
fadd
push
aad
mov
aas
xchg
sub
cld
xchg
jmp
fcomp
cmp
mov
test
xchg
aad
jg
rcr
dec
loopne
cmp
int
std
cmps
jne
popf
pop
jmp
add
cwde
xchg
(bad)
fldenv
maxps
xor
sbb
inc
mov
or
mov
xor
add
xchg
lock
ror
fisub
sbb
cmp
pop
sbb
xchg
push
inc
push
sub
or
std
test
sub
gs
imul
in
idiv
(bad)
push
pop
jg
mov
push
aas
adc
cmp
xchg
cld
fadd
jp
inc
ins
or
cmps
dec
data16
pop
call
sbb
test
dec
fucom
ret
cmp
aas
dec
ins
ss
jb
adc
xor
repnz
xlat
mov
jmp
pushf
sub
repz
jne
push
mov
outs
push
jmp
rol
sbb
mov
ins
mov
push
fld
dec
dec
mov
adc
inc
ftst
loopne
and
mov
add
cmp
add
cmp
movs
jae
jmp
mov
adc
mov
inc
adc
and
sbb
dec
std
xchg
test
int
retf
inc
jl
add
mov
mov
jb
sahf
or
pop
xchg
loop
pop
loope
mov
mov
lods
sbb
add
xor
sti
out
stos
test
xchg
push
xchg
in
je
cmp
stos
fnsave
xchg
mov
xor
adc
daa
repz
adc
fsubr
sub
xor
adc
scas
or
cdq
lds
xor
ror
mov
mov
add
arpl
ins
sub
mov
ins
cmp
es
sbb
mov
pop
jle
clc
out
pop
out
mov
sti
in
jne
movs
xchg
fwait
push
dec
inc
test
add
scas
jne
jne
sbb
adc
idiv
sbb
jle
ret
and
iret
jae
repnz
push
stc
ss
push
fldcw
jno
push
jnp
add
fmul
cmp
mov
fucomi
dec
out
(bad)
fistp
in
or
call
mov
inc
(bad)
xor
sub
mov
xchg
test
push
xor
mov
jbe
into
jnp
addr16
movs
fnstsw
or
scas
icebp
jmp
leave
mov
loope
lds
dec
mov
mov
sub
adc
and
popa
dec
fadd
test
loopne
test
jns
js
add
and
jmp
jae
add
imul
xchg
sbb
cdq
and
int
push
je
lds
ret
xor
xchg
ror
test
sbb
push
jbe
loop
xor
sbb
cmp
push
or
pop
add
or
inc
cmc
xchg
(bad)
js
add
nop
inc
nop
out
mov
arpl
mov
test
inc
or
mov
mov
test
push
retf
sti
xor
push
mov
mov
sbb
jnp
loop
jno
out
cld
push
cmc
call
lahf
pop
and
mov
dec
jp
add
xchg
xchg
fldcw
xor
addr16
dec
mov
fdiv
jmp
outs
pop
dec
retf
stc
shr
jo
cmps
dec
pop
xchg
ror
push
imul
sbb
ja
xchg
sub
imul
inc
fisubr
test
rcr
push
popa
or
adc
sub
and
aas
out
fistp
xor
mov
push
shl
iret
xlat
jp
scas
nop
dec
gs
xchg
aad
sar
add
dec
mov
test
sub
sub
fsubr
cdq
push
xor
dec
sbb
adc
rol
add
jne
and
xchg
xchg
addr16
ins
ja
leave
in
mov
fcmovnu
mov
xchg
retf
xchg
leave
dec
les
inc
lods
addr16
fdivr
inc
jnp
mov
out
pop
cmp
fistp
cmp
(bad)
adc
sub
add
sahf
sti
dec
jne
xchg
lods
xor
cmps
loopne
data16
xchg
loope
pop
ins
fisttp
adc
jmp
add
addr16
push
gs
xor
dec
push
and
ins
ret
adc
push
stos
adc
cdq
and
cmp
mov
pop
popa
xchg
pushf
inc
out
pop
ins
cld
stos
popa
xor
retf
std
push
cld
int3
(bad)
cmp
lods
test
push
loop
aad
imul
fs
stos
add
fst
es
dec
fs
idiv
pop
push
mov
mov
push
add
push
push
dec
idiv
mov
mov
scas
jo
stos
call
xchg
mov
mov
fisubr
movs
movs
add
sub
leave
mov
inc
dec
mov
sbb
out
(bad)
jmp
mov
xchg
inc
lds
dec
inc
inc
push
ss
lods
push
push
jg
inc
lds
cmp
daa
xchg
pop
mov
push
push
cmps
loopne
pop
out
add
jne
pop
(bad)
fcomp
push
lods
pop
pop
pop
icebp
frstpm(287
adc
aas
xchg
mov
inc
xchg
js
sbb
fistp
cmp
adc
mov
cs
addr16
pop
pop
cmps
adc
xchg
sti
inc
imul
dec
and
push
sub
pop
arpl
test
dec
mov
dec
mov
jae
icebp
ffreep
jp
test
mov
add
ja
xchg
cli
mov
ins
mov
dec
movq
adc
cld
jmp
sbb
push
sar
cmc
stos
pushf
add
or
inc
push
mov
inc
cs
sahf
jmp
mov
adc
push
sbb
ror
fwait
mov
or
popf
jns
movs
cmp
test
mov
sbb
frstor
sar
mov
xchg
inc
daa
adc
daa
out
mov
(bad)
dec
loope
jmp
xlat
sbb
jno
or
mov
data16
push
dec
ret
pop
xor
std
cdq
ret
mov
mov
mov
dec
mov
movsx
jae
mov
lahf
dec
push
das
cmp
call
dec
loope
adc
pop
rol
push
jae
adc
in
add
add
xchg
stos
push
(bad)
in
inc
in
dec
cmps
mov
pusha
out
push
pop
xchg
imul
lods
push
xor
or
and
arpl
popa
mov
add
int3
mov
sbb
mov
cmp
inc
and
test
scas
mov
sub
shl
mov
push
and
ret
aas
or
mov
sti
not
mov
add
test
sub
xchg
lods
cwde
cmp
addr16
mov
loope
sti
mov
popf
mov
push
(bad)
ss
pop
call
(bad)
call
out
pusha
std
movs
and
mov
mov
fidiv
movs
stc
hlt
neg
xor
push
pop
inc
dec
inc
dec
in
xchg
pop
jbe
lods
pop
ja
fldcw
cs
loop
clc
(bad)
sbb
lock
xchg
dec
or
ficomp
icebp
dec
sbb
xchg
ja
adc
xchg
xchg
fiadd
adc
sub
movlps
mov
das
(bad)
mov
mov
lods
jge
adc
and
and
mov
inc
scas
pop
stos
inc
gs
aad
and
and
dec
pop
jle
aas
pop
xchg
in
jno
push
push
cs
ss
pop
sbb
mov
shr
fist
mov
push
inc
les
mov
in
jmp
ret
jno
int
(bad)
pop
movs
cmp
cmp
btr
add
mov
fs
mov
fcom
push
or
jg
or
cmp
push
enter
sub
loope
or
out
sub
adc
addr16
pop
adc
cmp
add
adc
inc
stos
pop
xor
jae
push
mov
sbb
add
out
into
jmp
aas
ins
in
push
and
fsub
loope
imul
dec
mov
or
mov
je
cld
inc
mov
mov
mov
mov
in
jg
out
js
pop
(bad)
xor
pushf
pop
dec
in
xlat
jmp
js
fst
rol
ficom
test
pop
test
mov
cli
rol
adc
cs
pop
mov
pop
ja
retf
add
and
xor
test
test
mov
sti
lea
retf
movs
xchg
rol
mov
repz
add
cmp
or
xchg
nop
scas
and
push
lods
popf
jecxz
mov
sbb
xor
es
(bad)
mov
repz
jge
fnstcw
fist
retfw
sbb
xchg
fimul
pushf
mov
mul
ds
imul
div
and
mov
jnp
(bad)
std
stc
ss
mov
sub
imul
or
adc
in
inc
outs
ds
and
push
test
pop
push
inc
mov
mov
fidiv
test
lods
pop
(bad)
popa
sub
xor
lds
jae
sub
sar
dec
aad
push
(bad)
xchg
adc
(bad)
repnz
ds
retf
rol
lahf
dec
(bad)
fistp
sahf
or
out
mov
pop
clc
and
or
cmp
jns
call
jno
das
and
ins
inc
cmp
lods
gs
out
(bad)
mov
and
inc
mov
daa
push
mov
in
cwde
push
add
std
ret
xchg
es
mov
pop
int
faddp
mov
add
rcr
popf
add
ret
das
mov
cmp
push
sub
cli
out
or
les
les
stos
aad
or
mov
push
or
mov
shr
sub
mov
enter
sar
aaa
movs
jmp
jle
dec
mov
cld
call
inc
and
fist
adc
mov
or
pop
in
inc
call
sbb
mov
push
cmp
pop
inc
loop
mov
popf
clc
add
shl
pop
adc
imul
icebp
add
int
adc
dec
sub
add
in
(bad)
fstsw
hlt
xlat
mov
cld
icebp
lahf
nop
cmc
xchg
popf
xchg
test
mov
movs
xor
test
sbb
data16
sub
mov
(bad)
nop
xchg
push
mov
repz
or
ret
push
mov
add
neg
out
mov
leave
xor
cmp
pop
paddd
pusha
and
sahf
fisubr
fnsave
and
sub
sbb
mov
(bad)
ret
sub
pop
cmps
jno
fist
mov
xor
iret
mov
xchg
loope
daa
icebp
jb
push
jb
sub
mov
in
test
std
cwde
pop
test
mov
push
call
call
fwait
je
es
stos
adc
movs
cmp
and
int3
push
cmp
(bad)
add
call
mov
fdiv
fimul
lods
xor
mov
push
dec
xor
pop
out
push
shr
sahf
daa
jmp
in
call
mov
cmc
pop
mov
out
ds
sub
into
adc
xchg
ror
popa
mov
inc
dec
loope
fiadd
mov
add
jnp
and
mov
mov
cli
mov
mov
or
(bad)
and
adc
adc
mov
mov
cwde
xchg
push
fmul
aas
ror
mov
mov
xor
adc
cmc
icebp
lock
mov
leave
cdq
test
or
fstp
xchg
mov
mov
mov
dec
in
xchg
(bad)
xor
arpl
ror
and
dec
cmpps
dec
sbb
mov
aam
pop
adc
mov
nop
cld
jbe
scas
push
ins
cld
lds
cli
pop
jp
not
sub
pop
inc
fild
ret
jnp
inc
cmp
xor
push
add
cdq
or
loop
fdivr
neg
sahf
(bad)
xchg
mov
call
mov
or
pop
sbb
push
mov
sbb
xchg
cmps
xor
push
dec
fldenv
iret
inc
jae
(bad)
jmp
aas
mov
jmp
jno
adc
pop
shl
pop
out
(bad)
jp
jmp
sti
sbb
add
pop
(bad)
js
pop
mov
xor
arpl
mov
jbe
mov
pop
inc
push
sti
daa
cld
loop
lea
push
in
jecxz
test
adc
xlat
mov
mov
icebp
jp
pusha
ins
mov
cdq
dec
and
mov
mov
bound
pop
popa
dec
daa
push
mov
sbb
int3
sbb
fnstcw
mov
das
js
fcomp
inc
(bad)
fimul
pop
das
mov
push
clc
aad
jo
pusha
adc
ja
jle
fnstenv
fwait
dec
add
push
popf
adc
mov
pop
cs
mov
and
stc
data16
and
dec
ret
pushf
fmul
push
mov
push
add
add
(bad)
mov
in
jb
xchg
js
sub
ja
lods
or
int
jne
adc
mov
hlt
clc
add
jle
sbb
aad
arpl
test
fxch
icebp
xor
sbb
retf
dec
xchg
xchg
iret
push
inc
imul
inc
mov
int3
loope
jb
xor
inc
add
not
adc
ins
mov
loop
xlat
sub
cmp
xchg
repnz
and
cmp
pminub
add
push
or
push
movs
js
stos
pop
xor
lods
jecxz
fmul
test
jno
std
sub
sub
pop
push
pop
cli
outs
bnd
add
(bad)
fsub
pop
retf
rol
int
(bad)
popf
ja
enter
cli
jmp
mov
in
and
ss
rcr
sub
sbb
addr16
and
cmp
ja
inc
xchg
test
mov
fild
retf
shl
inc
xor
mov
mov
into
das
fcomp
add
fimul
push
and
xchg
dec
xchg
loope
push
push
push
dec
xchg
inc
dec
cmp
sbb
dec
ror
gs
mov
jbe
pop
(bad)
push
add
lea
sub
arpl
mov
jnp
mov
(bad)
mov
sub
mov
xor
mov
sbb
add
stc
push
or
jne
repnz
(bad)
add
cmp
jle
mov
mov
cld
jle
retf
mov
aaa
jae
adc
adc
icebp
out
push
pusha
xchg
and
dec
cli
and
inc
fild
push
xlat
out
test
iret
ror
(bad)
push
add
xchg
test
popf
add
mov
arpl
(bad)
out
std
dec
arpl
sub
rol
jl
sub
pop
retf
dec
mov
mul
fld
xchg
retf
repnz
bound
test
inc
cs
add
movs
push
pop
in
std
push
jmp
sahf
add
call
xchg
test
pop
shl
(bad)
ror
or
add
cdq
add
adc
xor
mov
(bad)
jnp
and
(bad)
ficomp
(bad)
jge
dec
jbe
mov
add
jg
in
les
test
jg
add
outs
mov
pop
inc
mov
lea
out
cmps
je
xchg
mov
es
sar
mov
loope
cmp
outs
add
shr
cwd
xlat
jmp
add
push
stos
pop
adc
arpl
daa
(bad)
call
pusha
nop
xchg
sbb
add
js
fsubr
or
mov
dec
mov
inc
lea
rcl
ins
cli
dec
out
or
sbb
lods
mov
and
popa
int3
shl
add
push
or
jbe
not
fild
aaa
xchg
les
jno
dec
ds
mov
lods
dec
cmp
not
fdiv
sbb
cmps
mov
mov
push
loope
jb
push
xchg
xchg
ret
cmp
fist
(bad)
sahf
cmps
int3
add
fild
shr
add
adc
loope
and
jns
test
sbb
cmps
adc
or
cmp
lock
clc
sbb
push
in
pop
jecxz
(bad)
fs
sub
ret
leave
mov
pand
out
mov
xchg
push
push
fild
dec
pop
xor
ss
add
mov
and
test
ficomp
loope
and
mov
std
lea
stc
mov
rcl
push
loop
popf
punpckldq
in
dec
(bad)
ror
lods
(bad)
cwde
pop
stc
ds
mov
dec
leave
mov
inc
jl
mov
clc
sbb
pop
xchg
in
dec
int3
or
inc
pop
adc
pushf
sub
ret
or
inc
imul
adc
sub
xor
mov
int
and
mov
iret
lock
jbe
daa
(bad)
mov
xchg
xlat
jle
and
out
xlat
test
aaa
les
popf
xor
dec
cld
fs
(bad)
jns
in
addr16
daa
pop
in
cmp
out
adc
jae
xor
pop
fmul
mov
push
loopne
adc
sbb
mov
pop
pop
sub
push
lods
jmp
cmp
xor
cli
push
stos
cmp
dec
adc
mov
dec
imul
out
sbb
mov
icebp
push
push
adc
popa
and
inc
fst
into
xlat
bnd
mov
mov
test
mov
test
or
sub
retf
pop
ins
pop
mov
sahf
mov
xchg
inc
inc
sbb
mov
icebp
stos
sub
pop
icebp
jecxz
scas
adc
es
sub
xor
or
inc
pop
lods
mov
leave
fstp
mov
ins
mov
movzx
or
loop
es
mov
mov
jo
push
popf
cmp
cmp
clc
movs
pop
or
imul
pop
inc
and
mov
adc
and
pop
shr
cdq
popf
scas
movs
or
inc
mov
fdivr
jns
adc
xlat
adc
ret
out
lock
scas
mov
xchg
dec
cmp
test
in
ins
fisttp
aad
pushf
movs
jnp
ror
aas
add
xchg
cmp
mov
mov
add
pop
ror
pop
data16
mov
ret
dec
pop
xor
call
fcomp
enter
leave
dec
sar
imul
cmc
mov
(bad)
inc
push
lods
cdq
xor
xchg
iret
dec
push
sbb
sbb
js
pop
mov
outs
add
std
sub
push
test
cmp
or
retf
xor
mov
adc
xchg
into
rcr
jl
cli
mov
mov
push
push
in
mov
paddsw
cwde
dec
mov
retf
push
arpl
and
jb
push
sbb
stos
imul
test
inc
cli
(bad)
sbb
sub
add
bound
ins
cmp
(bad)
movs
sub
les
xchg
jae
in
(bad)
jp
stos
fiadd
loop
mov
ret
cmp
cmc
mov
dec
call
or
ins
arpl
out
fiadd
les
add
cli
adc
test
(bad)
mov
inc
push
and
mov
mov
(bad)
int3
adc
and
xor
test
adc
jge
imul
xor
mov
addr16
nop
xchg
es
xchg
and
test
add
stc
cli
push
inc
mov
fistp
mov
sub
jecxz
push
in
(bad)
iret
adc
cmps
std
retf
jae
mov
mov
cwde
or
scas
xor
adc
xor
inc
int
ror
ficomp
jle
pushf
cli
sub
retf
xchg
fadd
xor
daa
pop
xor
push
aas
push
scas
mov
add
lea
fld
call
sbb
outs
lods
inc
jb
jmp
in
iret
mov
dec
(bad)
retf
scas
xchg
or
pop
ss
movs
or
jle
cwde
lds
mov
xchg
es
adc
hlt
popf
add
mov
jmp
inc
sbb
(bad)
push
ror
mov
ins
or
sub
mul
or
out
sub
hlt
cdq
out
pushf
pop
ja
mov
inc
test
sbb
sub
mov
mov
mov
data16
mov
jne
(bad)
jnp
fadd
jb
cs
outs
cmp
div
push
pushf
pop
nop
mov
push
xor
cwde
in
mov
pop
jno
pop
and
mov
les
inc
pcmpeqb
xchg
and
ror
(bad)
mov
inc
jae
pop
in
xchg
and
lahf
mov
rcl
dec
aam
pop
cmc
cmp
stos
fs
outs
shl
mov
test
test
jge
mov
push
ds
ja
mov
push
mov
or
xor
push
pop
jbe
std
xor
and
pop
movs
dec
or
leave
mov
add
(bad)
aad
add
fs
ins
shl
mov
aam
pop
xor
hlt
inc
jbe
mov
push
out
sbb
mov
(bad)
jg
sbb
gs
mov
sbb
cmps
test
xor
frstor
addr16
(bad)
jnp
xchg
cmps
mov
jmp
sub
pusha
xor
cmp
aad
enter
movs
retf
fisttp
mov
adc
inc
and
popf
lock
cmps
mov
jnp
sti
or
push
rcl
repz
enter
xchg
out
jge
test
mov
add
adc
push
adc
mov
xchg
add
sbb
lea
add
retf
gs
lock
jo
xchg
popf
xor
jle
or
dec
mov
jmp
and
rol
into
pop
loope
mov
outs
push
aas
adc
fyl2x
pop
add
and
push
dec
adc
push
in
hlt
mov
pop
dec
inc
ds
xchg
dec
outs
adc
(bad)
push
es
inc
mov
mov
in
dec
test
cwde
das
or
xchg
sub
mov
lea
cmp
cld
xchg
retf
sti
mov
mov
ret
push
(bad)
push
add
ins
test
dec
sbb
scas
popf
jmp
clc
inc
clc
in
add
ja
adc
mov
and
repnz
sbb
pop
dec
adc
sti
sub
add
stc
addr16
lock
pop
xchg
sbb
movs
mov
jns
mov
and
movs
rcl
jg
sub
loopne
sbb
js
pop
sti
jle
push
(bad)
mov
cmp
xchg
cmp
cdq
mov
add
jne
xchg
jno
movs
shr
test
lods
sar
inc
stos
pop
mov
cmp
iret
pop
xor
aam
iret
lds
lahf
retf
movs
fwait
xor
dec
mov
lahf
js
push
push
lea
cmp
add
dec
shr
lea
ins
push
push
fs
and
push
or
dec
call
jge
sahf
adc
std
sub
xchg
sar
mov
jno
push
dec
pop
inc
xchg
sti
add
dec
mov
jp
popa
clc
ss
jle
mov
or
cmp
cmp
cmp
xchg
mov
mov
into
loopne
mov
pop
sub
fs
push
aas
stc
nop
sbb
(bad)
in
push
jle
adc
pop
add
scas
adc
lahf
sbb
int3
repnz
cmp
xor
xor
push
cmp
das
ret
jbe
jl
or
sti
fucom
add
repz
mov
in
popf
jp
jne
ret
adc
jb
mov
push
test
pop
dec
popa
in
inc
push
sbb
mov
retf
call
sbb
or
add
repnz
sbb
in
lods
jecxz
adc
push
or
cmc
unpckhps
btc
sub
jecxz
or
xchg
into
aaa
pop
and
xchg
out
push
in
xchg
std
sub
jmp
mov
inc
adc
mov
xor
cmc
iret
jbe
and
je
clc
inc
lods
push
out
scas
mov
dec
jecxz
xchg
pop
addr16
stos
aaa
adc
mov
dec
sbb
sbb
xchg
out
cmp
cmps
imul
xchg
sub
loope
jno
xchg
cs
sti
xor
retf
pop
retf
dec
repz
cwde
data16
xor
lfs
xor
sbb
fbld
dec
add
sub
xor
aad
call
adc
ins
fst
ins
les
xchg
xor
dec
sbb
mov
ins
cld
jmp
leave
in
cmp
sbb
test
sub
mov
cmps
sar
mov
xor
jo
mov
(bad)
hlt
je
sbb
mov
fiadd
scas
imul
jae
pop
outs
les
or
sub
or
dec
jno
stc
pop
jne
dec
outs
test
dec
lea
pop
icebp
sti
xor
adc
mov
push
das
inc
in
xor
das
in
mov
loope
lea
mov
sub
mov
sub
push
repnz
repnz
or
mov
test
pop
out
out
xor
push
inc
gs
mul
inc
and
test
xchg
test
mov
sbb
mov
add
cmps
les
mov
imul
push
imul
mov
adc
xchg
test
mov
dec
stos
push
pop
push
cmc
xchg
jmp
push
xor
addr16
movs
push
mov
rcl
aaa
fst
mov
cmp
in
retf
jae
xchg
add
adc
shr
arpl
loopne
sub
dec
lahf
inc
add
xchg
int
movs
jbe
cld
les
or
pop
popf
sub
popa
mov
mov
adc
xor
movs
mov
push
in
mov
lahf
push
mov
sbb
mov
xchg
test
aas
in
fst
mov
div
iret
jmp
ja
lods
add
fbstp
mov
mov
xor
push
pop
push
mov
(bad)
fwait
sub
jmp
std
inc
pop
repz
cmp
inc
jnp
ss
and
pop
ret
ins
pop
ret
sub
add
jne
jp
mov
push
mov
xor
mov
(bad)
lock
out
push
lods
push
adc
adc
ffree
inc
mov
xor
pop
or
mov
sahf
cmc
pop
mov
test
inc
inc
stos
cmc
lea
call
psubb
sbb
aaa
pop
arpl
aam
stos
(bad)
les
repnz
rcr
jns
fnstcw
jg
lds
sub
push
jbe
dec
sahf
fs
aam
add
jnp
pusha
daa
mov
aas
pinsrw
rol
adc
xchg
stos
out
adc
retf
clc
scas
xchg
retf
iret
fs
adc
add
sbb
daa
add
xchg
push
cmp
push
mov
and
sub
cmp
pop
hlt
aaa
xchg
lea
mov
test
(bad)
and
hlt
mov
test
or
es
dec
and
in
dec
lods
cld
jne
or
fdiv
mov
test
and
add
or
mov
jecxz
adc
and
and
mov
cmp
xchg
stc
sbb
dec
sbb
call
adc
pop
stc
push
lock
aaa
jecxz
(bad)
fistp
je
inc
ins
cwde
fisubr
add
mov
mov
(bad)
popa
pop
(bad)
rol
xlat
rol
pop
push
sub
adc
imul
mov
adc
adc
ja
rol
out
retf
push
sub
and
inc
sbb
test
push
push
mov
fdiv
sub
xchg
aaa
push
add
fs
xchg
push
xlat
xchg
inc
nop
(bad)
jmp
dec
jmp
stos
outs
jmp
sub
gs
in
stos
sub
and
es
xor
pop
pop
or
inc
rol
imul
je
loope
pop
enter
jl
cld
addr16
test
fs
sbb
push
xchg
cmc
scas
stos
inc
inc
repz
movs
cli
(bad)
(bad)
jae
sbb
setae
mov
icebp
pop
xchg
push
jns
mov
scas
push
add
aam
mov
pop
cli
mov
icebp
retf
(bad)
cmp
xor
jae
and
not
mov
out
jns
ja
out
scas
div
repz
sub
int
not
cmp
mov
cmp
lea
dec
jmp
pop
test
fdivr
jge
pusha
adc
(bad)
pop
cmp
cmp
jbe
sbb
shl
fiadd
lahf
ror
retf
inc
add
sub
in
mov
or
fisubr
mov
mov
lock
jne
jns
idiv
and
shl
or
cmps
add
mov
xor
xor
xlat
arpl
sub
or
rcr
jbe
das
lock
cmp
fistp
ins
cmp
(bad)
push
mov
mov
pop
out
ins
(bad)
std
sbb
or
sub
and
or
retf
push
xor
shr
add
pusha
(bad)
aad
xchg
gs
out
mov
fistp
inc
sub
inc
sti
out
push
cmp
dec
jp
mov
std
stc
xor
(bad)
scas
sbb
pop
sbb
test
in
inc
mov
mov
out
xchg
hlt
test
lock
xor
jmp
pop
ret
push
dec
adc
(bad)
jmp
outs
xchg
mov
dec
pop
push
adc
or
sar
daa
add
dec
ds
pop
xor
dec
xchg
xchg
stos
aas
and
xlat
ret
mov
push
lahf
add
cmp
call
ins
dec
push
xchg
mov
arpl
in
sub
sbb
add
pop
nop
pusha
aaa
pop
mov
or
mov
cmp
es
in
mov
int
xchg
imul
push
add
pop
add
outs
xchg
hlt
cmp
(bad)
lods
jl
pop
out
out
dec
inc
adc
outs
jmp
push
jmp
mov
jl
pop
out
sub
mov
es
mov
ror
push
xor
xor
lock
adc
enter
mov
cmc
or
stos
aam
out
sbb
dec
inc
push
popa
jbe
shl
(bad)
push
push
pop
scas
jbe
rcl
imul
sub
retf
xor
jb
int
aam
add
lods
cwde
test
cwde
lods
pop
sbb
test
mov
pop
je
pop
pop
inc
call
lea
mov
mov
pop
lock
jb
push
pop
(bad)
cmc
jg
fadd
aam
or
inc
cmp
mov
cmp
cmp
retf
dec
pop
lods
je
movs
and
fild
dec
push
neg
fwait
in
les
inc
or
(bad)
mov
icebp
pop
aas
dec
dec
push
mov
cmps
int
push
mov
dec
mov
push
adc
popf
mov
sbb
call
mov
in
les
dec
dec
shr
jns
movs
jbe
std
sar
jmp
aas
bound
xchg
cld
gs
imul
(bad)
pushf
lahf
aaa
pop
lea
mov
mov
popa
dec
add
cmps
and
inc
or
iret
lock
or
(bad)
sub
mov
aam
div
jmp
or
push
adc
adc
inc
arpl
loop
pop
sbb
das
out
out
jnp
int
(bad)
popa
mov
inc
sub
addr16
sub
loopne
push
into
adc
push
inc
mov
push
sti
fld
(bad)
cwde
lock
or
pop
cli
mov
cmc
pop
cmps
out
mov
das
fmulp
adc
inc
imul
rcr
jb
in
(bad)
test
mov
inc
stc
shr
push
call
mov
jle
dec
sub
and
xlat
imul
aam
sub
sub
mov
sbb
scas
(bad)
pop
jne
fisubr
dec
mov
ins
bound
jne
das
dec
push
dec
xchg
aaa
int3
pop
js
push
rol
mov
test
popa
xchg
add
inc
jne
and
iret
mov
mov
aad
xor
mov
push
lods
mov
movs
sahf
pop
mov
lods
(bad)
out
cld
lods
hlt
dec
ins
cmp
cmp
jmp
into
loopne
mov
inc
nop
sbb
xor
dec
jnp
shr
das
shl
xchg
dec
sti
jmp
outs
test
mov
pop
add
jecxz
sub
jo
jb
adc
jl
xchg
std
mov
sub
outs
dec
and
or
push
scas
dec
sbb
sub
xlat
pop
sbb
movs
loope
inc
dec
or
xchg
call
sub
mov
xor
inc
cmp
test
mov
mov
sti
aas
xor
xor
mov
nop
stc
call
neg
sub
iret
sub
retf
mov
call
xchg
cmps
adc
ins
iret
inc
ins
sbb
add
fbld
jp
push
xchg
ins
lahf
aas
call
jecxz
movs
lods
pop
xchg
push
iret
(bad)
ja
mov
cmp
xchg
jle
cdq
adc
pop
ror
sbb
mov
stos
aad
xlat
push
daa
pop
outs
add
js
mov
xchg
cmps
outs
mov
inc
jae
mov
push
xor
add
jo
out
cs
lds
pushf
movs
mov
and
mov
fsubr
pop
add
jnp
in
rol
call
shl
aas
xchg
pushf
mov
out
sbb
xchg
add
stos
xchg
iret
jnp
mov
stc
iret
(bad)
jp
inc
pushf
scas
lahf
jmp
push
jl
sahf
mov
add
(bad)
mov
pop
fwait
push
loope
fucomp
in
mov
pop
aaa
xchg
fdiv
mov
or
fmul
sbb
sub
add
xchg
mov
out
inc
mul
adc
cmp
lahf
jmp
iret
es
push
imul
mov
push
push
and
fimul
xor
dec
xchg
bound
mov
shl
mov
jns
jmp
jae
mov
arpl
shl
pop
ret
xchg
and
mov
popf
std
repz
imul
(bad)
loopne
xor
add
dec
rcl
outs
ret
aad
ds
jl
dec
rol
(bad)
mov
les
ds
leave
mov
ds
dec
inc
jmp
xchg
scas
(bad)
fimul
fs
jmp
add
pop
mov
and
push
outs
dec
aad
outs
cmc
sub
retf
xchg
jnp
jge
dec
call
sub
sar
cmp
nop
cmp
lock
and
mov
gs
or
dec
clc
cmp
xchg
stos
xchg
push
ja
adc
cmp
push
ins
cdq
push
and
leave
lahf
out
cld
jae
dec
fdivrp
cmp
stos
rcl
test
shl
xor
or
sbb
adc
adc
popf
or
mov
cmc
dec
aas
push
pop
(bad)
and
aad
mov
daa
mov
dec
xor
popa
pop
ret
push
out
cmps
mov
dec
cmc
pop
and
jge
sar
xor
inc
repnz
pop
cmp
add
sbb
jl
sub
xlat
xchg
popa
dec
jb
and
push
imul
dec
adc
push
lock
lods
in
les
dec
mov
std
pop
jmp
cmp
adc
and
cmovb
pop
je
pop
icebp
scas
loop
mov
fcom
push
(bad)
pop
into
stc
fs
xlat
adc
cmps
xor
jg
cmc
cmp
clc
and
mov
pusha
ds
adc
add
mov
xchg
and
push
fcom
sahf
daa
retf
bnd
daa
ss
adc
adc
sbb
xchg
and
repz
mov
repnz
cmp
fcmovne
and
xor
imul
dec
adc
push
enter
adc
push
mov
push
(bad)
(bad)
lods
ins
adc
jo
xchg
in
mov
push
add
mov
(bad)
outs
xchg
out
mov
dec
mov
inc
js
lds
addr16
add
adc
(bad)
enter
stos
xor
inc
lahf
xchg
mov
ins
push
loope
push
js
or
add
(bad)
sbb
sub
cmp
push
fucomp
fs
pop
mov
mov
lea
sub
jno
adc
sub
and
shr
adc
je
jbe
popf
test
sbb
push
das
lods
xor
(bad)
popf
leave
inc
sbb
xchg
xchg
gs
hlt
pminub
sbb
mov
mov
cmp
sbb
pop
mov
adc
cmps
pop
icebp
test
mov
inc
xor
dec
gs
xor
pop
les
cli
mov
and
jmp
jmp
in
cmps
mov
out
sahf
daa
add
rcl
dec
cmp
and
repz
and
add
retf
mov
or
cld
push
and
jge
xor
pop
sbb
out
pcmpgtw
jg
sbb
aam
adc
adc
mov
mov
cld
outs
and
inc
inc
jmp
mov
sub
fnstenv
mov
mov
mov
popf
mov
sub
fidiv
cwde
jmp
pop
ficom
sub
and
mov
push
cmp
cmps
inc
mov
cmps
rol
push
mov
in
shr
cmp
ret
adc
push
or
add
cmps
lds
push
fsubr
into
cmps
adc
mov
mov
xor
outs
shl
jne
or
data16
mov
and
and
push
mov
xor
jle
inc
(bad)
rol
mov
popf
jmp
jle
push
popf
or
(bad)
lock
mov
fnstsw
jae
movs
push
(bad)
fmul
cmc
gs
test
xchg
xchg
add
retf
sbb
pusha
outs
inc
je
cli
inc
out
mov
xor
mov
dec
inc
cld
pop
cmp
sbb
es
push
ins
scas
xchg
fcmovne
imul
call
pop
cmp
dec
retf
xchg
(bad)
push
push
stos
push
jb
sub
fmul
outs
or
out
mov
(bad)
adc
mov
fwait
mov
fs
les
jb
jno
pop
leave
ins
push
icebp
sub
outs
icebp
aas
fmulp
rcl
int3
lds
push
leave
cld
mov
mov
fwait
dec
cmp
pop
lock
adc
pop
cmp
das
rol
std
scas
jl
test
fist
dec
mov
mov
xor
mov
or
or
pop
pushf
cmp
jne
or
adc
pop
mov
add
xor
mov
mov
or
jg
aaa
sbb
jmp
test
or
cmps
inc
xchg
push
fiadd
fwait
ss
cdq
adc
xlat
mov
sbb
cmc
repnz
push
ffree
ds
mov
sti
sbb
ret
or
in
sbb
iret
xchg
jmp
adc
lock
mov
inc
and
jp
addr16
adc
xchg
jne
mov
aas
test
das
imul
bound
and
mov
cld
sbb
jmp
pop
test
pushf
lods
stos
cmp
xor
push
cdq
mov
sbb
jnp
push
sti
movs
adc
pop
hlt
and
jp
adc
aad
arpl
in
inc
js
mov
jl
movs
cld
push
imul
mov
jle
movs
jmp
push
mov
cld
das
xchg
sahf
pop
pop
jne
adc
push
clc
cmps
jl
cmp
sbb
sub
arpl
cmp
sbb
sbb
inc
int
pop
pop
mov
out
mov
sbb
and
repnz
inc
cmp
sti
mov
or
daa
(bad)
jo
dec
inc
xchg
jge
int
rcr
or
dec
inc
jg
adc
pop
xor
jge
lods
add
jno
adc
jmp
loop
loopne
mov
and
int3
jmp
push
enter
push
mov
rcr
hlt
pusha
js
ja
les
(bad)
mov
sub
pop
stos
scas
xchg
addr16
jo
sub
loop
push
mov
fst
push
sbb
into
inc
in
fst
lds
add
xchg
and
icebp
mov
out
add
les
sbb
mov
adc
mov
mov
add
lahf
lea
dec
lea
cmp
in
ins
add
sbb
outs
push
cmps
sbb
call
adc
scas
movs
pop
or
push
mov
arpl
mov
mov
and
(bad)
sub
pop
ret
test
or
dec
addr16
cmp
stos
and
int
jno
push
ins
jbe
ds
aam
sub
mov
add
(bad)
fild
cld
mov
jp
push
jmp
icebp
and
repnz
aam
and
ja
push
outs
repz
mov
repz
daa
sbb
fucomi
in
(bad)
cmps
push
fcomp
aaa
adc
loop
add
inc
add
and
scas
xchg
adc
xlat
inc
jnp
mov
lea
clc
xchg
enter
xchg
retf
imul
mov
popa
loop
lea
jo
sti
add
stos
ja
pop
je
repz
mov
cli
or
fisttp
in
cli
cmp
dec
push
std
and
sar
sub
repnz
cmp
mov
scas
retf
inc
popf
movaps
xor
imul
sbb
jnp
sbb
shr
sbb
(bad)
jecxz
scas
cmc
pop
and
hlt
stc
hlt
test
ins
xor
sub
pusha
retf
dec
pusha
fnsave
push
bound
bound
add
hlt
mov
jb
add
(bad)
inc
cmps
jmp
xor
or
add
inc
in
add
int3
xor
hlt
and
cmp
retf
or
or
test
add
adc
pushf
xchg
and
jb
sbb
test
cs
bound
sbb
add
pushf
dec
push
xchg
imul
or
stos
ret
pop
or
xchg
sub
xor
xchg
jb
adc
imul
adc
scas
cmovnp
mov
and
xor
adc
mov
test
add
add
xchg
push
iret
in
fidivr
sub
imul
jl
test
jo
jbe
push
adc
dec
sbb
fwait
sub
add
outs
cmps
out
inc
enter
sub
push
jbe
ror
xchg
cmps
in
mov
into
mov
loope
lods
mov
lods
(bad)
sbb
scas
bnd
lods
pop
pop
pop
fwait
stos
jbe
mov
inc
xor
or
sbb
bound
mov
and
and
push
push
add
or
shrd
inc
retf
pop
pop
retf
test
out
shr
gs
test
sar
mov
push
and
loopne
mov
mov
sbb
imul
xchg
fbld
and
adc
adc
xor
mov
push
cmp
xor
and
dec
inc
repnz
(bad)
test
arpl
sbb
stos
(bad)
cdq
inc
loope
fmulp
pop
repz
or
add
test
ss
jbe
push
or
ret
pop
test
cmp
sub
cmps
xchg
test
adc
daa
aad
ss
add
mov
repnz
add
iret
call
push
jp
cmp
jp
mov
mov
and
mov
data16
hlt
and
pop
sub
(bad)
lods
retf
iret
out
mov
imul
pop
mov
ins
push
pop
xchg
test
data16
and
push
cmp
pcmpeqb
nop
jno
in
inc
pusha
jmp
add
popa
and
adc
push
popa
call
push
sbb
mov
rcr
pushf
popa
push
retf
and
fbstp
mov
cwde
js
fstp
mov
ret
pop
mov
jns
mov
sar
rol
test
xor
sti
lods
retf
fist
aas
inc
pop
push
es
mov
stc
add
adc
xchg
mov
sub
ficom
mov
add
sub
pop
jne
bound
mov
xor
add
sub
mov
fadd
outs
imul
add
pusha
cmps
int
in
aas
pushf
mov
push
dec
inc
jnp
push
xor
or
inc
je
scas
jbe
ret
pop
rcl
cmp
inc
ins
adc
push
ror
data16
outs
inc
pop
mov
mov
sub
cwde
jmp
or
aaa
or
adc
dec
pusha
rcr
psrad
pop
xlat
lock
lods
icebp
test
arpl
clc
pop
add
add
ja
push
ds
cmps
(bad)
cmps
mov
or
pushf
dec
mov
lods
mov
enter
ins
adc
jbe
imul
aad
daa
inc
daa
or
inc
cmp
loop
xor
jg
popf
xchg
adc
xchg
jl
cmp
mov
movs
loopne
fmul
bound
push
push
in
and
mov
dec
cmps
or
test
mov
std
xor
pop
daa
push
xchg
cmp
dec
xchg
or
xchg
cmc
jmp
xor
ja
repnz
jno
mov
or
clc
addr16
jno
push
inc
push
and
movs
or
fld
cmp
mov
xchg
cmp
push
cmc
mov
test
fnstenv
jmp
inc
sub
jl
or
sti
mov
jp
cli
mov
dec
iret
push
sbb
das
cmp
stos
mov
lahf
test
loope
sub
dec
push
or
mov
sub
xor
in
pop
jno
cmps
out
movs
out
mov
es
nop
sbb
stc
leave
test
mov
mov
je
inc
and
cmp
lds
dec
int3
lock
cmp
cdq
jns
jg
mov
pop
add
push
fnsave
pop
call
mov
(bad)
xchg
jno
cmp
mov
mov
sbb
loopne
dec
(bad)
movs
jae
mov
sub
xchg
mov
repnz
pop
mov
push
(bad)
out
jg
xor
mov
add
shl
in
mov
sub
rol
retf
jmp
xor
pop
bound
jnp
jmp
mov
(bad)
rol
xor
das
data16
sbb
icebp
sub
bound
sub
add
mov
pop
xchg
jecxz
shl
sti
scas
adc
test
xchg
mov
in
clc
int
imul
mov
push
out
inc
test
push
mov
dec
adc
jmp
aaa
fmul
pop
pop
lods
imul
mov
adc
fimul
aam
inc
shl
sbb
jo
mov
inc
mov
not
scas
mov
cmp
inc
cli
stos
mov
movs
cld
call
push
push
xor
fistp
leave
sbb
push
push
sar
sub
push
fadd
mov
in
je
mov
stc
pop
and
(bad)
mov
mov
(bad)
jmp
push
cmp
mov
or
dec
int3
dec
push
nop
out
xchg
adc
rol
mov
dec
frstor
fist
loope
(bad)
fist
sar
cli
aas
xchg
shl
lock
push
mov
retf
lods
js
aaa
mov
add
jmp
add
sar
fdivr
imul
test
add
scas
jmp
or
add
loope
stos
sbb
fld
call
adc
xor
jnp
fsubr
push
fimul
sahf
xor
cli
pop
(bad)
mov
fs
cmps
mov
sar
(bad)
pop
dec
cmp
push
loop
inc
test
(bad)
cmp
fstp
jae
outs
cdq
inc
pusha
pop
daa
(bad)
pop
call
outs
fimul
add
out
xor
inc
scas
adc
ds
call
jp
add
push
add
test
daa
and
jmp
repz
sub
popa
popa
jecxz
mov
jns
or
inc
add
das
jg
fistp
inc
mov
stos
adc
in
out
push
jb
pop
inc
loop
mov
mov
push
add
sbb
retf
imul
inc
sbb
sub
cdq
cmc
test
xchg
sbb
adc
out
popa
xchg
cld
mov
jle
mov
aad
and
imul
stc
cmps
and
sub
inc
xchg
clc
call
mov
aas
jmp
fisttp
mov
rcl
mov
test
pusha
mov
inc
ficomp
push
push
inc
cmp
fiadd
xchg
and
xchg
fnstenv
stos
jnp
test
imul
cli
dec
dec
fisubr
(bad)
loope
fst
sahf
jne
jae
pop
mov
jmp
mov
sbb
out
call
or
xor
movs
lahf
in
popf
pusha
mov
add
jmp
fld
out
(bad)
or
fdivrp
cmps
mov
cmp
push
inc
jmpw
arpl
movs
xlat
cmps
add
mov
shl
mov
retf
jae
jge
xchg
and
add
ins
add
adc
inc
adc
aad
and
mov
mov
push
sbb
jle
(bad)
clc
push
shl
cmps
dec
ja
sbb
cdq
call
dec
add
push
xor
mov
push
jnp
xor
lods
jmp
xchg
out
pop
call
dec
sbb
pop
(bad)
xor
les
xor
add
popa
push
data16
clc
(bad)
pop
adc
pop
xor
rol
out
cmp
daa
cs
adc
das
add
sbb
adc
lea
mov
jmp
je
pusha
dec
(bad)
fwait
inc
xchg
cmp
xchg
pop
(bad)
loopne
in
jge
outs
xor
retf
sbb
xchg
addr16
lods
stos
xor
fisttp
rcl
sti
lods
xchg
mov
out
outs
cmp
iret
mov
sbb
fcmovbe
mov
pusha
arpl
xor
call
sbb
pop
in
mov
das
xchg
popf
mov
or
aad
mov
jg
jl
test
pop
in
adc
movs
fcom
scas
mov
or
mov
vaddpd
hlt
or
cmp
cwde
test
dec
cmps
pop
mov
dec
dec
in
adc
aas
scas
out
mov
xchg
ins
push
ret
retf
sub
and
jo
jmp
mov
inc
or
inc
sub
stos
out
pop
sub
pop
std
mov
inc
add
xchg
inc
jmp
inc
jl
fild
add
jnp
cmp
sbb
add
add
rcl
imul
pusha
sub
or
inc
xlat
and
ror
popf
push
jbe
stos
sbb
sub
xchg
sbb
fst
and
fldcw
loope
ds
push
push
clc
jmp
jg
ja
push
inc
dec
push
retf
xor
dec
fst
cs
jp
jg
dec
xchg
shl
jmp
jo
ret
jb
jbe
mov
and
cmp
(bad)
cs
cmps
pop
cmc
jecxz
jnp
mov
sti
les
retf
(bad)
std
mov
aam
or
xchg
cmps
lods
out
adc
add
retf
dec
or
gs
jl
popf
aam
movs
scas
movs
fs
shl
shl
gs
cmp
lods
arpl
jbe
pusha
pusha
sub
push
pop
inc
xor
ins
popf
or
lods
ror
(bad)
sub
sub
iret
xchg
cmc
mov
call
push
fisttp
mov
xchg
jno
and
sti
dec
(bad)
jns
pop
cmp
sbb
ja
jecxz
es
cmp
xor
(bad)
sbb
jne
pop
out
sti
xchg
outs
push
mov
sar
and
das
retfw
das
dec
mov
dec
dec
adc
or
shl
push
mov
stc
push
fst
ja
pop
loope
mov
nop
shl
enter
adc
mov
out
pusha
inc
data16
push
mov
cli
gs
stc
ror
push
mov
popa
pusha
push
fldcw
adc
inc
cmp
push
sbb
push
int3
sub
in
ficomp
sbb
xchg
xchg
ds
sub
mov
ror
push
adc
aas
(bad)
jp
xor
ret
jae
loope
movs
inc
ins
jmp
push
pop
jg
fwait
ja
inc
lock
clc
add
pop
cdq
adc
dec
push
fmul
ins
in
dec
or
sub
or
cmp
mov
mov
jb
adc
mov
div
lods
std
xlat
neg
add
ins
jmp
loope
rcl
test
ins
sbb
inc
and
js
lods
pusha
xchg
outs
sub
fs
sbb
mov
push
(bad)
loopne
push
(bad)
adc
fst
jecxz
xlat
inc
sub
xchg
shl
sti
or
dec
mov
sbb
gs
pop
jb
pop
cmps
dec
paddsw
jae
imul
adc
jmp
mov
add
enter
out
inc
cdq
sub
push
outs
xchg
fdivrp
xor
aaa
or
sub
imul
in
sub
mov
lahf
mov
cld
ja
mov
jae
data16
inc
cmp
lods
mov
jo
adc
adc
jecxz
xor
(bad)
addr16
and
sub
in
lock
fwait
mov
and
ror
sbb
js
push
sbb
call
leave
mov
push
or
scas
xchg
mov
pusha
xchg
std
cmp
pop
out
cmc
ins
scas
dec
enter
mov
sub
add
scas
and
fimul
es
pop
ret
loopne
pop
jae
add
leave
and
(bad)
aam
loopne
popf
jge
push
jbe
shl
ficom
aam
xchg
imul
and
jl
jmp
push
aas
sub
ret
mov
jns
pop
icebp
rcl
in
cmp
pop
mov
and
adc
test
dec
test
hlt
fs
aas
dec
aaa
cmp
sub
jmp
add
xchg
xor
xor
aam
mov
inc
scas
and
add
xchg
cmp
cmp
and
das
or
in
inc
ror
ud0
mov
cld
xchg
pavgw
cmp
std
js
pop
fsubr
popa
cmp
ins
add
test
add
push
pop
jmp
outs
add
pop
dec
popf
add
nop
fistp
shl
daa
jo
jae
pop
cwde
ins
(bad)
popa
inc
retf
retf
inc
lock
cmc
add
adc
outs
mov
mov
xor
dec
xchg
push
fdivrp
add
stos
xchg
(bad)
push
jp
mov
sbb
push
xor
ja
sub
pop
mov
xor
sub
dec
pop
ds
enter
in
add
dec
adc
dec
retf
xorps
or
cdq
xchg
mov
mov
mov
add
jb
icebp
ret
loope
or
iret
or
pop
gs
out
add
pop
dec
pushf
xchg
cmp
in
sub
mov
sbb
jne
and
shr
scas
jo
(bad)
push
adc
push
adc
(bad)
outs
cmp
inc
or
sub
les
add
pop
movs
mov
sbb
(bad)
out
or
ins
stc
inc
cli
or
inc
(bad)
fidiv
or
test
mov
and
scas
movs
jmp
jne
lahf
or
lds
cmp
dec
adc
jl
mov
xchg
fcomp
test
xlat
adc
cld
out
mov
test
push
and
push
push
jb
mov
cmp
loopne
jns
sub
or
inc
outs
mov
jl
outs
sar
xchg
lds
and
cmp
out
aaa
inc
pop
cmp
sar
into
shr
mov
ret
mov
jecxz
cs
call
mov
inc
jg
lds
inc
idiv
mov
dec
or
(bad)
in
mov
inc
jne
jle
mov
add
pop
or
inc
adc
xlat
mov
push
jo
jb
int3
ret
cmc
stos
aam
jne
mov
jmp
fnstsw
test
retf
jp
add
and
mov
xor
out
push
gs
inc
inc
cmps
mov
fwait
xchg
and
and
jo
test
jge
fwait
sub
rcl
xchg
push
(bad)
inc
test
push
xor
das
ja
xchg
mov
xlat
ror
cmps
push
in
fsub
sbb
xchg
loop
adc
or
push
fist
push
popf
jb
hlt
adc
mov
or
call
jno
xor
dec
cmp
xor
mov
call
mov
pop
shl
and
adc
cdq
or
sbb
cmp
imul
call
adc
adc
add
or
mov
ret
jno
jmp
test
or
mov
das
ret
out
pop
mov
not
sbb
mov
ret
shl
sbb
fistp
xor
xchg
jecxz
pushf
clc
iret
loopne
pop
fdivr
mov
int
pop
repnz
sbb
fcomp
and
movs
mov
imul
fcomp
mov
inc
mov
mov
add
gs
dec
cs
xor
pop
mov
xor
mov
cmp
retf
push
xor
es
std
pop
repnz
sub
push
sar
inc
add
dec
std
enter
int3
enter
push
sub
fld
pop
div
mov
mov
jmp
push
mov
pop
jp
retf
mov
pop
(bad)
in
or
scas
imul
pushf
imul
ret
jl
jecxz
or
cli
pop
mov
mov
mov
jmp
pop
xchg
push
and
stos
icebp
icebp
inc
in
and
push
dec
fsub
cwde
(bad)
and
lds
inc
fild
(bad)
jb
popa
sbb
ret
test
jmp
pop
or
mov
popa
sbb
ja
push
cmp
lds
inc
jns
cmps
in
ss
mov
arpl
jg
cmp
xor
inc
cmp
push
cld
push
mov
push
xor
mov
scas
cmp
test
adc
dec
sub
sub
dec
repnz
jmp
mov
aad
jle
test
out
cmp
xor
add
jle
icebp
sahf
or
cmps
repnz
mov
push
push
pop
cdq
ja
cmps
sub
pop
mov
das
test
push
aad
inc
pop
push
mov
dec
(bad)
push
sub
lock
xlat
fisttp
pushf
imul
ins
xor
add
sub
mov
add
add
les
into
push
cmp
pop
mov
and
push
adc
pop
inc
pop
ins
out
add
lock
inc
push
test
sbb
call
push
ss
repz
inc
xchg
test
jbe
retf
add
dec
pop
ins
fwait
dec
or
cdq
cmp
repnz
test
retf
add
inc
mov
das
ror
mov
fistp
pushf
fs
inc
xchg
sbb
mov
fcom
push
lods
xchg
stos
push
cmc
rcr
loop
shr
addr16
adc
inc
xchg
inc
sbb
and
bound
or
and
pop
mov
xchg
add
pop
sbb
nop
push
mov
mov
inc
leave
test
inc
cs
test
nop
or
sbb
rol
pop
sub
jge
cmps
xor
dec
inc
fcom
mov
cmp
dec
cmp
or
mov
mov
outs
jmp
loop
dec
aad
or
and
iret
fisubr
cdq
push
sbb
adc
ins
pop
mov
adc
daa
lods
cmp
xchg
sub
idiv
sub
in
call
test
adc
adc
jo
sbb
sub
adc
jecxz
int
jbe
(bad)
xor
cmc
mov
clc
not
or
gs
push
mul
daa
es
dec
mov
lods
push
mov
lahf
enter
cmp
jae
or
in
out
(bad)
fisttp
jne
sub
xchg
mov
pusha
ror
or
mov
and
(bad)
fisttp
mov
jp
jns
repnz
test
mov
rcl
cmp
enter
and
ins
and
add
sbb
repnz
ds
stos
push
pop
bnd
data16
pop
mov
scas
inc
and
and
pop
stos
inc
addr16
daa
cmp
std
add
into
hlt
dec
in
xchg
sar
nop
gs
xor
in
push
sti
cmp
fs
mov
clc
cmp
xor
das
adc
daa
(bad)
cs
pop
push
xchg
jge
pop
sbb
jecxz
ins
aam
arpl
imul
dec
adc
cmp
mov
or
fst
lds
sbb
or
icebp
dec
loop
std
es
int3
push
xchg
sub
cwde
addr16
div
mov
mov
fiadd
call
cmp
repz
call
push
inc
pop
pop
neg
hlt
out
cmp
sar
lods
add
getsec
or
sub
jl
add
add
xor
pushw
push
rol
xor
pushf
and
fcom
mov
mov
sub
ins
mov
cmc
fcomp
xor
ins
and
daa
adc
adc
fsub
dec
xor
not
mov
adc
add
add
or
addr16
xchg
cmps
push
fabs
call
sbb
xchg
dec
sub
xor
adc
in
add
mov
pop
and
outs
push
out
xor
and
mov
(bad)
xlat
pop
sub
xor
xchg
xchg
cmp
sub
repz
dec
push
outs
outs
in
loopne
push
cmp
mov
lods
dec
pop
xchg
in
imul
adc
xchg
add
add
jns
sub
inc
cmps
retf
cdq
push
push
jbe
xor
outs
pop
mov
pop
dec
push
ins
adc
push
sti
adc
cdq
jle
pop
xchg
in
xor
adc
bound
inc
(bad)
jns
lods
rol
fidiv
rol
stos
jmp
outs
rcl
push
jns
repnz
int
rol
call
dec
inc
rcr
pop
add
mul
push
jne
mov
cmps
or
(bad)
ins
ins
push
adc
push
inc
cli
dec
fidivr
push
fs
stos
ins
sub
mov
mov
push
into
in
mov
sbb
adc
dec
test
push
or
or
fmul
pop
int
inc
push
hlt
pop
xchg
mov
hlt
aad
mov
lahf
jg
or
out
fisub
add
and
lods
mov
xor
sub
xor
mov
mov
or
pop
arpl
jno
pop
inc
pushf
daa
adc
push
cmp
dec
test
mov
or
in
ror
cwde
sbb
add
and
rcr
cmp
xchg
mov
outs
cmp
out
fbstp
dec
or
jns
sahf
sub
retf
dec
inc
loope
push
out
xor
out
push
jmp
mov
push
cmp
and
dec
sub
push
push
iret
sbb
pop
xchg
inc
loopne
fadd
pusha
cwde
scas
xchg
pusha
mov
ret
imul
mov
repnz
pop
push
jmp
cwde
xchg
sahf
movs
pop
pop
xchg
cmps
dec
outs
loopne
not
push
outs
cmp
mov
popf
dec
cdq
test
push
shl
enter
push
sti
test
jbe
jmp
mov
out
dec
sbb
mov
fst
mov
movs
xchg
into
ficom
jnp
std
mov
outs
or
ss
in
les
or
seta
test
scas
add
adc
adc
into
fmul
movs
test
(bad)
mov
add
jns
dec
or
(bad)
cld
mov
xchg
cmp
repz
inc
add
pop
cdq
int
mov
mov
ja
push
mov
pop
and
jae
out
(bad)
sbb
test
dec
arpl
outs
call
ds
hlt
repz
retf
xor
inc
addr16
mov
mov
jne
jb
dec
lods
mov
out
jbe
cmps
fstp
mov
rol
es
xchg
dec
sub
jl
sbb
ja
or
push
aam
mov
gs
daa
int3
mov
fwait
outs
outs
push
xchg
test
xchg
add
lods
arpl
ret
cs
xor
fimul
shr
push
xchg
jle
fcom
popf
add
and
adc
aam
inc
fbld
xor
test
loopne
jns
cmp
or
mov
arpl
fcmovnu
out
outs
bound
inc
sbb
add
(bad)
mov
retf
cdq
arpl
xor
mov
pop
adc
inc
sar
fs
call
inc
push
push
jo
and
mov
rcr
iret
movs
test
xchg
jmp
dec
into
jbe
dec
and
ins
and
jae
in
pop
loope
jecxz
bound
sbb
mov
xor
jne
ret
mov
push
gs
xchg
ins
adc
mov
(bad)
loop
inc
mov
or
mul
stos
xor
push
and
stos
xchg
fwait
loop
call
xchg
push
and
mov
out
fcomp
xchg
imul
stos
mov
inc
pop
jo
jecxz
mov
mov
sbb
cmp
cmp
sbb
jb
mov
and
jle
dec
les
inc
lock
inc
sbb
(bad)
jp
cmp
dec
stos
mov
mov
aad
(bad)
cmp
add
add
pop
out
mov
add
das
aad
jno
daa
xor
out
mov
sub
dec
aas
into
fucompp
int
int
or
pusha
loope
mov
cmc
test
retf
cs
(bad)
in
imul
pushf
push
pop
push
inc
ret
mov
jge
or
lahf
jb
ficomp
jl
popa
fdivp
ret
xchg
ret
sbb
xor
imul
out
xchg
repnz
sub
ret
pop
sub
jp
jg
lds
popf
mov
gs
push
shl
xor
jecxz
inc
aas
scas
in
pop
add
jge
or
out
sbb
adc
xlat
fstp
fistp
aam
mov
dec
add
(bad)
xor
dec
daa
js
(bad)
xchg
push
(bad)
out
push
jno
sti
push
outs
xchg
and
xlat
fwait
or
adc
mov
lea
lds
popf
push
stc
pop
mov
xchg
sahf
inc
lahf
push
push
adc
mov
dec
push
loopne
push
movs
or
mov
cmp
lahf
inc
loop
test
mov
ret
call
imul
gs
ja
rcl
push
push
inc
sahf
xor
sbb
sub
cs
xor
sar
hlt
pop
cmp
xor
push
xor
mov
xchg
or
jb
mov
ins
out
pop
retf
(bad)
fwait
ret
sub
sub
popf
test
imul
lods
clc
les
dec
fwait
cmp
sub
aas
movs
cmp
aaa
push
out
aaa
jb
push
fadd
in
loop
and
jnp
aad
inc
or
cwde
outs
adc
xchg
pop
push
pop
inc
push
mov
add
icebp
mov
movs
jecxz
adc
loop
(bad)
add
je
dec
or
inc
dec
shr
push
popf
retf
clc
daa
(bad)
jne
inc
imul
out
stos
retf
dec
gs
scas
leave
dec
mov
push
in
aaa
cli
sub
jecxz
jno
add
push
aas
int3
fidivr
sub
out
pop
stc
bound
sub
sub
push
in
push
ficomp
dec
mov
loopne
mov
leave
push
and
and
out
sti
and
fld
dec
rol
sub
xchg
cmps
pusha
jp
into
(bad)
in
out
pop
or
fcomp
mov
iret
xchg
mov
adc
test
bound
retf
jg
daa
mov
(bad)
jmp
or
bound
jnp
add
(bad)
repnz
stos
cmp
sbb
ins
scas
fistp
sub
aad
hlt
sub
pop
mov
inc
leave
ins
cwde
mov
and
neg
sbb
mov
sahf
lea
fcom
(bad)
cmp
push
rol
(bad)
mov
sldt
je
lods
(bad)
stc
jae
test
cmp
inc
in
lds
retf
ret
sub
(bad)
aad
and
cmp
popf
push
push
aas
std
sbb
js
adc
jl
or
in
call
mov
mov
pop
call
retf
(bad)
lods
mov
sar
shr
inc
arpl
mov
xor
mov
pop
inc
in
pop
xlat
inc
daa
or
sub
ja
test
jl
pusha
(bad)
dec
nop
mov
cmps
lds
jge
or
mov
mov
es
push
mov
inc
(bad)
stos
push
lock
push
adc
(bad)
push
scas
xchg
scas
aas
add
into
dec
pop
xor
adc
mov
xchg
std
test
pop
sti
cmps
jecxz
shl
mov
sub
jmp
jl
inc
bound
mov
iret
bound
jae
test
outs
pop
xchg
(bad)
hlt
mov
mov
call
shl
push
ret
mov
into
lahf
dec
mov
add
inc
inc
or
jle
xor
imul
adc
cmp
add
push
mov
loope
aaa
je
cmovl
and
mov
movs
cmp
ror
int3
in
es
fs
mov
push
push
or
popa
push
sub
movs
pop
pop
lea
fmul
xchg
daa
cmp
jmp
sub
arpl
ins
test
xchg
push
retf
push
pop
fdivp
scas
sub
leave
pop
imul
sbb
mov
in
add
pushf
icebp
pop
push
add
pop
retf
dec
sbb
and
jp
pop
cmp
(bad)
mov
lahf
js
sub
or
jbe
push
retf
(bad)
test
xor
mov
adc
ret
dec
sub
movs
push
mov
sub
out
stos
mov
outs
add
jb
mov
idiv
pop
daa
mov
in
rcl
add
jge
movs
cmp
loope
jns
movaps
jp
rcr
xchg
dec
mov
mov
call
aas
sti
dec
leave
or
(bad)
stc
leave
pop
test
ja
fcmovb
add
popf
or
(bad)
ficom
jmp
mov
stos
or
in
mov
icebp
add
dec
mov
add
or
jge
inc
les
(bad)
int3
adc
dec
add
and
jnp
dec
je
out
inc
jmp
jns
jno
lea
adc
cmp
push
fnstcw
imul
add
or
test
cmp
stc
fwait
xor
jp
std
neg
out
jl
inc
mov
mov
xor
shl
jg
and
mov
pop
pop
push
cli
mov
xchg
out
push
pop
sbb
aad
aam
lods
mov
mov
mov
outs
fs
adc
push
fisttp
call
cmp
jae
out
ds
stos
add
add
push
mov
xchg
imul
aam
mov
ja
pop
dec
data16
loope
loop
movs
fist
and
mov
stos
(bad)
movs
div
arpl
cmc
and
pop
jb
stos
sbb
stos
ror
aad
xchg
sub
arpl
ret
or
pop
fs
or
jb
stos
mov
stos
xchg
mov
dec
mov
ins
in
inc
dec
mov
loop
imul
inc
test
mov
cld
shl
mov
mov
sbb
inc
xchg
adc
cmp
cmps
jne
imul
les
and
and
int3
test
or
stos
out
ss
fmul
lock
jmp
mov
mov
outs
xchg
int3
push
jmp
mov
jae
inc
out
sbb
xchg
or
mov
xor
cli
dec
pop
adc
xlat
ss
les
push
mov
loopne
mov
jmp
mov
rcr
cmps
or
movs
outs
mov
mov
sub
jmp
dec
dec
push
xor
out
aaa
nop
out
mov
mov
rcr
and
test
enter
mov
add
fisttp
push
sub
and
ins
scas
jo
mov
mov
scas
pusha
shl
retf
cmp
aaa
mov
mov
xor
xor
fs
push
shl
and
les
inc
add
ret
dec
xchg
or
jg
mov
ja
dec
mov
pusha
jbe
scas
xchg
mov
and
push
mov
vmovlpd
mov
addr16
data16
das
out
aaa
fwait
inc
ss
mov
mov
sbb
push
ins
dec
pop
pop
arpl
mov
adc
pop
jmp
into
add
cmc
dec
in
outs
or
and
inc
xor
mov
sar
sub
cmps
aad
mov
rcr
mov
retf
mov
mov
or
mov
int3
sub
adc
inc
call
inc
add
nop
sub
xlat
cld
jae
mov
jno
sahf
mov
jle
push
inc
dec
add
jno
add
sub
push
add
sbb
inc
jecxz
sub
push
addr16
jae
jb
inc
dec
js
movs
mov
adc
or
je
jg
ja
and
addr16
outs
into
xchg
shl
stc
xor
mov
push
cmp
loop
ret
add
imul
inc
mov
add
out
xchg
call
or
jbe
inc
jnp
int
jmp
push
pop
mov
sbb
jne
test
stc
inc
movs
add
xor
lods
jae
add
mov
and
test
dec
ret
fild
aam
xchg
xlat
jl
mov
fstp
push
mov
mov
aas
bound
enter
inc
cs
aas
and
push
mov
lock
xchg
test
add
shr
mov
outs
jecxz
push
adc
mov
xchg
sub
pushf
mov
popa
out
ret
sti
add
popf
movs
xchg
pop
sbb
out
cmp
test
test
add
pop
add
dec
mov
pop
xor
xchg
test
push
and
jge
dec
mov
or
jecxz
mov
dec
test
popf
xor
cmp
push
pop
jge
pop
sbb
push
and
aam
cli
fs
mov
ds
js
sub
jae
sti
fincstp
mov
fwait
add
iret
int3
dec
loop
fldlg2
mov
mov
pushf
pop
jo
dec
jns
imul
cmp
xchg
cmp
test
aaa
and
ins
mov
rcr
mov
mov
test
cli
add
fdiv
jl
jle
mov
mov
in
push
adc
xor
cwde
loop
mov
mov
movs
(bad)
int3
xor
test
les
jl
dec
sub
mov
pop
cmps
call
cmp
fcomip
push
inc
lods
test
outs
scas
mov
fimul
ficomp
push
out
xor
shl
sbb
test
movs
scas
jnp
pushf
ret
xchg
(bad)
fldcw
xchg
or
add
inc
jno
cmps
mov
loope
mov
pop
shr
add
add
repz
enter
shr
lock
mov
mov
xor
xchg
dec
push
push
sbb
xchg
cmps
pusha
leave
push
mov
cs
mov
mov
xor
js
fidiv
lods
pop
es
adc
cmp
into
jp
pop
jno
jle
das
pop
outs
mov
repz
fild
sub
jne
xchg
push
or
jp
scas
mov
cmp
cmp
dec
mov
jg
cmps
rcl
inc
shl
in
xor
movsx
not
mov
scas
cld
pushf
dec
aas
mov
inc
dec
in
rcr
inc
aaa
retf
mov
pop
push
inc
(bad)
sbb
and
jmp
sbb
cli
cli
and
dec
xlat
aam
(bad)
lods
cmc
or
int3
jmp
or
push
sbb
mov
popa
or
pop
sub
aad
inc
adc
cld
pop
cli
sub
cmp
dec
xchg
ret
(bad)
bound
push
push
je
and
mov
pop
xor
jnp
push
xchg
(bad)
and
les
push
pop
frstor
pop
test
xchg
jmp
mov
or
rcl
test
loope
leave
bound
xchg
add
sub
ss
or
pop
dec
aad
sub
ja
mov
cld
(bad)
loopne
jae
lea
test
adc
adc
pop
hlt
mov
mov
pusha
xlat
scas
ret
lock
or
dec
stos
hlt
test
push
movs
mov
fs
addr16
popa
mov
fucomp
mov
loope
jmp
xchg
dec
(bad)
scas
xchg
imul
xchg
cmp
add
push
xchg
mov
test
rcl
nop
sub
cmp
mov
pusha
jns
popa
ins
jno
shl
or
imul
sbb
aas
imul
and
sahf
dec
cmp
ds
and
add
jge
imul
movs
(bad)
in
sbb
push
jae
push
ror
cmp
fsub
test
dec
jbe
movs
cmp
cmp
mov
pop
xor
lods
and
rcl
(bad)
aas
das
imul
dec
mov
inc
lock
sahf
add
xchg
jbe
sbb
xchg
mov
pusha
sbb
push
sbb
adc
out
ja
adc
mov
shl
cmp
jae
adc
mov
xor
xchg
icebp
pop
mov
sub
adc
adc
hlt
fdiv
jnp
and
xchg
add
lods
push
dec
scas
push
ret
call
dec
int
cmps
(bad)
pusha
daa
lds
xor
mov
mov
sbb
adc
adc
std
jb
add
push
pop
mov
sbb
xor
scas
les
xchg
xchg
sti
es
(bad)
sub
sti
pop
push
loope
cli
sub
lock
push
iret
add
loopne
clc
jno
xor
xor
retf
sbb
ret
cs
xchg
xchg
repz
aas
stos
dec
neg
pop
mov
cmp
jg
ror
and
mov
enter
ins
call
add
sti
mov
sub
cmp
jno
ds
xor
and
cmc
mov
xchg
cli
cmps
loopne
xchg
jmp
xor
loop
ss
mov
push
sbb
stos
jl
retf
pop
fwait
cmp
je
loope
mov
icebp
test
das
jne
jne
mov
into
out
pop
fsub
rcr
dec
movs
in
ror
push
mov
mov
das
pop
int
scas
sar
out
in
jge
imul
inc
stc
pop
loope
sub
add
test
inc
int3
lahf
sti
pop
pushf
loop
lods
and
sbb
imul
sbb
nop
mov
arpl
mov
or
xlat
jl
jnp
out
xchg
into
movs
jge
aas
icebp
ins
nop
inc
repnz
dec
jge
cmps
push
jecxz
sub
sbb
mov
pop
and
adc
pop
mov
fcom
pop
lock
mov
les
mov
test
pop
in
or
mov
rcr
push
fdivr
push
cwde
cdq
je
jp
rcl
nop
jae
cmps
and
ja
data16
xchg
mov
repz
mov
lahf
jg
and
or
(bad)
imul
mov
xor
lods
shl
sbb
sbb
xor
adc
stos
scas
pop
pop
cli
jle
scas
shr
(bad)
fadd
pop
mov
cwde
jbe
xchg
sahf
(bad)
in
lods
push
pop
and
out
xchg
mov
lock
and
xchg
jmp
out
cdq
stos
adc
movs
loope
sbb
dec
rcr
pop
push
inc
sar
stos
hlt
loop
sub
in
loope
xchg
sub
push
mov
add
push
rcr
add
jne
(bad)
jmp
xor
sbb
test
pop
mov
add
add
arpl
(bad)
xchg
in
push
and
cmp
into
movs
out
mov
das
mov
adc
mov
daa
dec
sbb
sub
or
(bad)
jl
retf
or
stos
(bad)
mov
in
push
aaa
add
nop
shl
call
jbe
xor
push
mov
pop
loop
dec
push
add
add
push
xchg
jne
or
inc
push
or
and
pop
jmp
out
cld
mov
push
sub
sbb
pop
sbb
gs
pop
outs
jo
sub
xchg
jle
adc
repnz
fadd
lods
mov
or
dec
and
fisubr
das
adc
sbb
test
xor
mov
in
push
movs
mov
cli
stos
jge
ins
xchg
arpl
inc
es
or
sti
ret
push
push
aas
sub
push
xor
adc
mov
add
sub
xchg
dec
jmp
call
push
pushf
sar
dec
repz
inc
push
xchg
inc
pop
mov
push
outs
pop
add
adc
adc
shl
or
shl
push
int3
pop
dec
pop
add
loopne
mov
mov
and
xor
pop
loope
push
fs
retf
push
mov
nop
mov
idiv
xor
sub
mov
mov
leave
jp
xor
ret
dec
int3
cmp
cmps
sbb
(bad)
lods
pop
xchg
ss
pop
push
(bad)
dec
dec
fild
clc
loope
inc
(bad)
fst
ds
add
enter
xchg
push
pushf
jae
je
int
pop
push
dec
and
mov
retf
fld
and
inc
cmp
add
je
cmp
popa
pop
xor
xchg
sub
loope
fisttp
(bad)
iret
mov
jns
sub
push
mov
movs
jo
dec
movs
cmp
cmps
out
addr16
inc
cmp
sub
add
(bad)
xchg
sar
aam
inc
cmp
pop
push
jno
or
jge
push
mov
jp
mov
pop
jbe
mov
lea
xlat
xchg
mov
shr
iret
jnp
(bad)
push
dec
xchg
mov
inc
push
lock
sahf
dec
push
rol
out
or
dec
inc
push
sub
inc
cli
sub
jecxz
push
imul
mov
fiadd
mov
sub
adc
das
stos
and
loop
in
dec
mov
fwait
ss
sti
or
je
fwait
test
or
scas
stos
sub
add
in
jp
in
xor
(bad)
lods
xor
pusha
push
clc
int3
jae
stos
pusha
psubw
xchg
add
repz
sub
dec
jb
xor
dec
cs
push
push
lea
adc
stos
lock
and
mov
sub
enter
stos
mov
push
mov
jle
or
stc
inc
xchg
mov
sbb
lock
out
mov
stc
addr16
pop
movs
dec
(bad)
or
(bad)
movs
sbb
add
or
jns
adc
jb
jl
xor
ss
mov
xchg
xor
or
aad
mov
pop
mov
jb
mov
mov
int3
repz
pop
push
mov
arpl
pop
xchg
retf
jmp
pop
pop
cmp
sub
pop
out
in
push
mov
mov
push
and
(bad)
sar
cld
cwde
sti
jle
add
sub
pop
stos
std
cmp
push
xor
shl
fsubr
ins
sub
jl
sub
sub
out
push
imul
jns
xchg
cmc
std
es
scas
loop
ret
sub
adc
push
push
call
add
into
or
pop
cmp
out
push
pop
or
imul
addr16
out
jmp
es
fs
xchg
shl
push
push
daa
sti
or
loope
inc
dec
mov
mov
popa
cmp
inc
adc
fidiv
mov
xchg
std
and
push
rol
jbe
scas
pop
mov
push
cmp
add
jl
cmp
sar
lahf
lock
adc
mov
shl
or
pop
scas
jp
call
jmp
dec
(bad)
in
retf
in
cmps
sub
jmp
popa
push
shr
scas
jmp
push
cmps
mov
mov
push
in
enter
rcpps
ror
jno
push
cmps
sbb
cmp
sbb
mov
push
scas
xchg
or
in
jbe
or
lods
ret
xor
popf
retf
in
sbb
mov
out
mov
mov
add
cmps
test
sub
es
in
xlat
sub
mov
sbb
js
fidiv
shl
mov
pop
lods
jo
jmp
cmp
push
aam
cli
call
jno
inc
pop
pop
clc
mov
dec
pushf
sbb
pop
arpl
mov
je
cs
push
and
mov
js
in
les
and
sub
mov
iret
xor
in
jge
pop
inc
pop
add
fucompp
out
cs
fcom
inc
pushf
jle
repnz
mov
jmp
sub
mov
mov
add
dec
push
scas
(bad)
xor
sbb
inc
dec
(bad)
and
call
push
xlat
out
es
(bad)
cdq
test
sahf
xchg
dec
xchg
mov
dec
jmp
pop
retf
les
into
loope
xchg
and
jmp
adc
cmc
xor
sbb
cmp
fcomp
pop
jnp
and
test
iret
cdq
in
and
pop
(bad)
pop
(bad)
idiv
fcom
in
or
jle
lahf
lea
mov
ds
cmps
lea
cli
pusha
add
enter
mov
xchg
adc
mov
push
in
xlat
in
dec
xchg
dec
imul
xchg
in
and
mov
pop
sub
int3
cmp
(bad)
out
and
adc
aaa
pop
std
sti
movs
out
mov
cmp
jecxz
dec
sub
mov
add
adc
popf
and
xlat
fmul
(bad)
movs
mov
mov
outs
cs
mov
les
xchg
push
mov
mov
sub
les
stos
push
mov
pop
jne
stos
dec
or
stos
xchg
inc
stos
add
sub
jne
xor
test
imul
xor
dec
call
ror
lock
shr
mov
mov
adc
inc
ins
scas
lods
sbb
mov
js
lds
push
imul
mov
jp
mov
adc
push
or
lock
in
mov
dec
mov
repnz
dec
pop
cmp
or
fld
imul
sub
leave
out
sbb
adc
mov
jae
lahf
sbb
pop
cs
movs
nop
sbb
outs
jb
test
mov
push
fidiv
bound
lock
cmps
xor
dec
jecxz
leave
add
push
add
push
mov
sub
ja
pusha
jmp
pop
jmp
jb
in
sbb
ret
add
or
in
leave
and
pop
sahf
inc
sahf
pop
sub
es
add
jns
inc
add
outs
repz
cdq
jmp
rcl
das
in
add
cs
pop
aam
inc
xchg
inc
xor
retf
add
mov
jmp
fbstp
das
retf
aas
movs
fwait
inc
push
mov
pop
(bad)
push
popf
mov
imul
mov
daa
push
mov
mov
cmp
or
mov
cmp
cmps
inc
outs
mov
stc
cmps
popf
dec
fsubr
cmp
lock
or
mov
dec
or
xchg
out
inc
push
and
inc
jle
sar
mov
jl
vmovd
mov
or
xchg
dec
xor
cwde
stos
pop
push
bound
pop
cmp
movs
xor
into
jmp
adc
fcomp
add
inc
xor
cmp
into
pop
push
push
into
and
mov
push
sbb
adc
cdq
dec
retf
ins
adc
xor
add
dec
bound
mov
jg
shr
adc
gs
mov
xor
sub
lea
mov
in
adc
sub
(bad)
xchg
mov
add
xor
lods
xor
push
xchg
and
das
xchg
outs
lods
sahf
sbb
mov
leave
or
repz
xchg
sub
sub
mov
xlat
mov
add
rcr
add
sbb
mov
lock
push
lock
daa
adc
push
jbe
retf
adc
cdq
sub
stc
dec
xor
cmc
adc
pop
fs
movs
or
dec
and
sbb
push
xchg
aad
or
jecxz
das
cdq
xor
cli
in
sub
cmp
stos
cmps
jb
xor
sbb
sbb
out
inc
xor
mov
out
xchg
ja
sub
pop
aam
pop
jno
fld
sbb
inc
jnp
adc
and
push
mov
addr16
dec
mov
out
sub
xchg
jl
into
into
push
popa
push
push
retf
popa
cmp
aaa
xchg
sub
addr16
loop
std
jge
jle
xor
mov
sub
push
fdiv
mov
gs
gs
adc
or
imul
inc
jmp
xchg
push
call
or
lea
xchg
mov
hlt
xchg
sti
sub
popw
pop
lods
cld
lock
nop
fdivr
mov
movs
dec
pop
sbb
sbb
fistp
in
into
imul
aaa
sbb
add
pop
mov
hlt
fs
std
and
push
sahf
add
pushf
jle
mov
lahf
cmp
je
pop
push
repz
and
pop
fucomi
pop
xor
xchg
or
out
sbb
mov
mov
fnsave
xchg
loopne
pop
adc
pusha
pop
jp
cmp
mov
lds
test
inc
pusha
ret
pop
push
and
imul
mov
dec
into
aam
push
adc
retf
xor
jb
jae
rcl
push
pop
dec
cmp
mov
rdmsr
ror
gs
mov
daa
jg
adc
or
ss
mov
cdq
(bad)
xor
inc
repz
std
mov
add
add
mov
and
cmp
jecxz
add
dec
(bad)
adc
sub
dec
pop
dec
ret
shl
shl
imul
es
mov
pop
dec
int
pop
dec
add
xchg
inc
mov
pop
xor
jp
mov
in
jnp
out
test
push
loopne
je
sbb
sahf
sbb
xchg
dec
cli
add
sub
mov
in
mov
cmp
mov
xchg
mov
loop
inc
mov
or
mov
pop
jns
jno
into
pop
or
fsub
push
sbb
out
mov
pop
outs
xor
ss
cwde
loop
mov
push
rcr
aad
sub
stos
mov
adc
(bad)
mov
push
mov
and
ret
jmp
inc
cdq
xor
in
mul
xchg
ret
nop
inc
sub
sbb
jne
inc
rcl
and
cmp
ins
(bad)
daa
sti
rcl
mov
push
repz
int
sbb
adc
jecxz
and
fistp
in
add
sub
fld
cmp
mov
repz
rdtsc
test
pinsrw
test
add
and
dec
mov
jecxz
dec
push
dec
neg
xchg
mov
ret
stc
push
fsubr
ds
sbb
cmp
fcom
loop
outs
adc
jmp
out
pop
push
outs
shl
pop
mov
das
addr16
in
and
adc
jge
lahf
and
add
jns
cmp
push
and
scas
mov
jne
inc
xchg
push
mov
inc
leave
jno
mov
std
and
mov
das
imul
pop
adc
rol
ins
cmp
lods
mov
mov
ja
loop
push
jge
or
jmp
and
shl
push
pop
call
adc
push
jno
fisubr
in
out
jno
and
mov
pop
test
imul
inc
outs
pop
cmp
mov
sub
popa
(bad)
in
pop
jmp
in
out
rep
adc
push
lods
mov
mov
call
lods
int3
test
aas
add
sahf
cmp
dec
adc
shl
or
xchg
(bad)
cdq
sub
icebp
or
mov
shr
ret
movs
icebp
fsub
mov
jge
lods
test
mov
lods
daa
ds
jbe
and
cwde
inc
imul
pop
fmulp
mov
ss
xchg
in
jb
xchg
mov
dec
mov
in
adc
sbb
dec
jmp
(bad)
pusha
popa
push
cld
push
repnz
(bad)
sbb
(bad)
push
ds
ret
cwde
push
jo
or
rol
xor
sti
mov
add
jp
sub
rol
lds
inc
(bad)
push
(bad)
mov
mov
inc
pop
dec
inc
test
mov
sbb
add
mov
mov
fadd
out
inc
dec
sbb
mov
push
in
add
add
sahf
adc
movs
mov
rcr
(bad)
jne
hlt
push
(bad)
jne
fadd
enter
in
js
fdivr
ret
pop
into
adc
xor
in
addr16
ja
jp
sub
in
movs
and
cmp
fistp
push
enter
inc
push
or
add
adc
adc
pop
and
loopne
call
cli
or
sbb
cmp
pop
loop
push
mov
ins
jl
pop
int3
js
fldenv
and
cmp
fidivr
sbb
add
cmp
jl
std
add
mov
repnz
imul
mov
popf
adc
mov
mov
stos
push
sbb
stos
sbb
xchg
and
adc
movs
inc
push
lock
cli
leave
lea
mov
test
push
pop
fild
push
jg
pop
fninit
inc
data16
push
icebp
imul
(bad)
mov
cwde
js
xor
adc
mov
loope
inc
cld
inc
dec
add
jb
inc
sbb
inc
inc
in
inc
jae
loop
add
fcomip
fs
scas
aam
ja
sahf
movs
fs
fsubr
loopne
out
or
pop
stos
mov
jg
xchg
adc
mov
outs
fcmovnb
mov
cli
xlat
icebp
fbld
inc
mov
aas
shl
xchg
mov
test
les
jo
cmp
loope
dec
inc
cli
push
neg
out
fwait
xor
fs
dec
xor
fcomp
jmp
loopne
or
pop
or
adc
xchg
xchg
mov
adc
dec
xchg
add
je
sub
mov
lods
pop
mov
mov
int3
(bad)
(bad)
jp
std
adc
icebp
inc
mov
rol
aam
xchg
ror
daa
pop
(bad)
bound
mov
jmp
ror
sub
mov
xor
retf
mov
pop
jg
xchg
add
(bad)
cmp
mov
or
inc
sub
and
jae
outs
daa
ja
xchg
popf
add
xchg
mov
repz
mov
push
cmc
xor
cmps
cmp
not
push
(bad)
loope
cmp
mov
inc
outs
xor
js
call
int3
(bad)
sbb
fldenv
mov
and
bswap
inc
rcl
xchg
repnz
stc
sbb
push
aam
lea
push
ins
gs
je
xchg
shr
call
sub
dec
push
in
xchg
jmp
mov
dec
out
xor
ins
jg
mov
mov
enter
sub
inc
shl
pop
scas
scas
mov
sub
jbe
adc
lods
imul
mov
lods
push
push
movs
imul
lock
and
sbb
adc
mov
fistp
dec
and
cs
in
stc
mov
and
xchg
jg
mov
int
mov
shl
or
push
mov
clc
lahf
mov
mov
loope
(bad)
mov
(bad)
pop
stos
add
mov
stc
pop
mov
fisttp
mov
test
inc
aaa
cmp
das
xchg
jo
test
imul
inc
mov
jg
fsub
pusha
(bad)
mov
jmp
movs
cwde
into
in
mov
cwde
int3
pop
push
dec
shl
loope
mov
ins
push
pusha
cld
pop
ret
xchg
sub
xor
and
rol
add
stos
inc
push
popa
xchg
jmp
js
stc
mov
out
call
aas
lahf
jno
or
add
dec
fld
mov
xor
fbstp
and
cdq
leave
cdq
push
sbb
dec
mov
pusha
jp
and
jb
rcl
dec
leave
sub
je
sbb
cmp
xchg
jae
xchg
sub
out
or
jp
jne
and
jne
adc
or
test
xchg
sub
add
push
dec
icebp
cs
xor
mov
mov
push
push
mov
jnp
data16
repz
dec
outs
pop
pmaddwd
(bad)
inc
push
mov
addr16
mov
and
pop
sub
and
pusha
loope
xor
xor
stc
into
retf
fidivr
fimul
push
sbb
(bad)
jmp
inc
push
or
inc
pop
aam
dec
push
dec
mov
sti
and
out
xchg
xchg
cmp
inc
sub
push
fmul
xlat
xchg
push
int3
dec
ds
xchg
push
inc
pop
and
jo
jmp
or
dec
dec
dec
or
adc
leave
xchg
mov
xchg
mov
sahf
cmp
push
jmp
mov
xor
bound
jl
out
mov
add
jp
lds
loop
xor
adc
into
out
es
scas
(bad)
rcr
sub
cmps
ret
push
or
xchg
stc
push
sbb
les
and
cmp
dec
les
mov
mov
ret
xor
fidiv
fcmovu
jp
int
or
(bad)
iret
not
sar
enter
ds
or
jle
pop
lods
xor
cmp
add
pop
jle
cld
xchg
sub
mov
jmp
sbb
xchg
jl
outs
pushf
and
aaa
pop
add
mov
mov
test
mov
(bad)
fbstp
daa
cwde
and
fldenv
ins
pop
jb
shr
push
out
test
cli
mov
adc
dec
stos
sbb
inc
cmc
test
mov
psraw
rcl
les
inc
addr16
cld
xchg
aaa
arpl
icebp
push
cld
cdq
adc
aas
xchg
inc
or
pop
mov
jb
mov
jle
add
and
test
inc
add
jg
sub
sbb
sub
sbb
cmp
out
je
mov
sbb
std
xor
aaa
scas
jb
inc
cmc
dec
jmp
mov
(bad)
pusha
pusha
xor
das
mov
inc
popa
int3
push
stos
jo
sar
or
add
js
xor
arpl
cli
das
add
push
loopne
pop
sbb
adc
dec
pushf
mov
sub
jge
retf
out
retf
mov
adc
sbb
and
and
call
mov
in
mov
inc
vxorps
add
xor
inc
neg
add
cmps
cmps
out
popf
fldenv
lahf
je
fs
and
call
(bad)
ss
aam
neg
fyl2x
in
add
lahf
sbb
adc
push
push
cwde
sub
add
sub
movs
adc
dec
cmc
frstor
xchg
jne
inc
(bad)
pop
ins
cmp
mov
push
push
arpl
mov
jns
or
add
aaa
dec
enter
cmp
jp
mov
test
adc
ins
adc
in
sub
or
mov
shl
sub
cmc
rcr
aaa
sar
pop
adc
inc
push
psignw
(bad)
cs
ins
sub
jnp
cmc
pop
dec
pop
cmc
lds
mov
jae
ficomp
shl
stos
cdq
add
repz
xchg
cmc
push
pextrw
sub
addr16
mov
xchg
push
sub
sbb
icebp
fisub
xchg
sub
call
mov
mov
sub
xchg
and
fs
rol
and
or
adc
mov
cmps
or
sub
enter
outs
test
push
jge
pushf
mov
dec
sbb
add
aad
(bad)
push
mov
or
js
push
(bad)
or
(bad)
outs
jge
dec
jno
dec
jnp
lea
test
fwait
xor
fstp
not
clc
hlt
out
nop
aaa
lock
outs
jmp
and
jge
movs
xchg
enter
pop
mov
fcomp
movs
adc
adc
or
push
inc
inc
(bad)
jmp
sub
inc
cmp
cmc
adc
push
mov
sub
ret
sbb
das
push
push
sbb
dec
popa
or
in
xchg
(bad)
sti
in
cdq
fucomp
call
int
sub
mov
jns
push
inc
cs
mov
out
outs
pop
jbe
mov
daa
jmp
data16
jae
(bad)
adc
sub
pop
test
add
fisttp
ja
retf
mov
adc
mov
test
stos
jmp
inc
sahf
add
mov
sbb
inc
mov
add
mov
lods
xor
imul
inc
add
lds
xor
sbb
lods
mov
sub
dec
std
adc
loopne
and
cmps
sbb
and
test
mov
lea
mov
sub
(bad)
out
test
scas
sahf
fidiv
adc
lods
and
icebp
clc
or
std
adc
jmp
int
push
stc
cmp
out
outs
inc
popa
cli
adc
outs
cmp
fwait
sbb
shl
lock
rcl
pop
pop
jo
mov
jle
push
inc
lock
jne
imul
cmp
lea
aas
retf
retf
adc
sub
lahf
popf
mov
pop
push
add
mov
xcrypt-ecb
cmps
dec
pop
daa
fcom
xchg
rcr
mov
and
sub
clc
mov
xchg
and
xor
mov
jle
popf
ror
push
mov
xor
lock
cld
cwde
cli
clc
cdq
jge
dec
rol
mul
ret
push
stc
sbb
add
jnp
sub
fstp
add
test
test
fld
scas
push
and
ds
push
pop
scas
hlt
dec
ds
add
aad
add
loope
scas
retf
lods
loopne
out
mov
js
push
pmuludq
lods
aad
loopne
rcr
fimul
cmps
ja
pop
(bad)
cmp
rcl
mov
and
mov
mov
js
fidiv
(bad)
dec
and
sub
mov
les
inc
inc
jbe
mov
stc
movs
mov
popf
mov
jecxz
(bad)
repnz
loop
push
lea
inc
test
xor
imul
call
in
test
sbb
mov
push
fld
mov
data16
or
movs
ins
jmp
ret
jl
shl
hlt
sbb
call
sub
out
in
mov
xor
pop
xor
lock
sysret
pop
mov
and
shl
prefetch
adc
dec
pop
cld
int3
cs
out
outs
mov
in
adc
daa
xor
jle
ror
jno
mov
stc
out
out
xchg
pop
fsubr
pop
cmp
mov
shl
sbb
or
retf
add
pop
or
and
hlt
repz
cmp
cld
adc
sbb
xchg
lods
mov
pop
inc
xchg
popf
mov
test
jno
jle
leave
sbb
(bad)
and
scas
and
imul
sbb
ins
xor
mov
mov
in
dec
ret
or
(bad)
xchg
cmp
lock
je
mov
xchg
adc
inc
(bad)
cmps
inc
fld
cmp
clc
cs
sub
loopne
push
mov
push
fwait
call
push
lock
daa
pop
gs
mov
xor
ja
ins
push
shr
jmp
outs
xchg
out
(bad)
cmp
jnp
popa
ret
xchg
add
ja
inc
inc
pop
sbb
dec
dec
test
scas
stc
imul
mov
dec
dec
in
push
rcl
ja
daa
adc
add
push
(bad)
ins
ja
fsub
jmp
cmp
fisttp
imul
sahf
fs
xchg
jmp
nop
stos
jae
push
retf
std
in
sub
in
lods
or
xor
(bad)
mov
ins
sbb
les
imul
push
mov
popa
cdq
xchg
(bad)
test
call
sub
mov
shr
repnz
mov
push
xchg
nop
aas
loope
sbb
setns
mov
dec
call
jg
xor
fdivr
outs
mov
movs
xlat
mov
or
bnd
ss
call
loopne
cmc
jl
dec
mov
mov
or
pop
add
das
jb
push
iret
jo
loope
inc
push
sub
push
inc
mov
add
jnp
leave
ret
in
pop
and
dec
dec
lods
jbe
shl
arpl
xor
xchg
out
adc
cld
sub
shr
rcl
jno
dec
mov
add
shl
fidivr
push
mov
dec
inc
jns
push
jno
clc
mov
(bad)
(bad)
pop
bound
daa
xchg
pop
mov
mov
jecxz
jl
enter
adc
jo
and
scas
push
repz
lea
mov
push
or
sbb
adc
xchg
in
cmps
and
or
fisubr
repnz
jno
mov
fisubr
xchg
jmp
in
bound
(bad)
push
push
test
cmps
aam
imul
(bad)
les
bound
xor
(bad)
sar
out
je
pop
aas
dec
loope
pop
push
not
cmp
lock
push
fist
mov
cli
xlat
fstp
jg
int
jge
les
sub
push
cld
pop
(bad)
lahf
ins
adc
pop
fsub
sbb
cmp
lds
fimul
aam
inc
mov
(bad)
das
in
add
cs
sub
sbb
dec
icebp
xor
test
sahf
push
push
or
xor
adc
push
ins
cmp
add
icebp
mov
repnz
xor
sbb
jne
add
je
jp
xchg
fld
movs
pop
gs
push
outs
shl
lods
pushf
sub
mov
add
neg
and
jp
in
ficom
jg
sub
(bad)
faddp
das
aad
gs
xchg
int
into
lea
jae
sub
leave
pop
fucomp
push
jmp
cmc
mov
jmp
test
fisub
stos
sbb
loop
sub
icebp
inc
pop
test
daa
cmps
and
mov
xchg
ret
in
int
dec
out
jmp
sahf
std
into
xchg
rol
std
ins
dec
dec
xor
pushf
and
xchg
mov
aas
in
movs
or
adc
ror
mov
inc
mov
pushf
add
pop
xchg
dec
inc
repnz
inc
movs
mov
sahf
pop
outs
jp
push
(bad)
or
fild
aas
or
and
pop
mov
adc
jmp
adc
mov
sub
dec
sub
gs
leave
fstp
test
jmp
shr
loope
icebp
push
or
sbb
xchg
mov
sub
push
mov
lahf
dec
popa
stc
sti
js
push
inc
popf
pushf
out
aad
mov
xchg
jmp
jbe
hlt
cs
int3
(bad)
jecxz
repnz
daa
pop
lds
adc
les
mov
inc
fs
out
and
mov
leave
push
jo
or
adc
repnz
outs
ss
and
add
mov
xor
daa
mov
sub
sub
xor
mov
popa
sub
push
add
(bad)
xor
icebp
ja
cmps
and
pop
mov
pop
ficom
dec
mov
in
es
jl
jg
sbb
daa
fmul
push
mov
repnz
inc
addr16
inc
and
mov
and
iret
dec
sbb
mov
fyl2xp1
es
dec
push
push
inc
cwde
rcr
fst
sahf
shl
sbb
jmp
ja
sahf
and
pop
mov
lods
das
adc
lahf
stos
dec
ins
repnz
and
and
aas
clc
retf
jnp
cmp
jl
cmp
iret
jp
test
cmp
push
xor
stc
xor
add
sub
fstp
shl
xchg
jmp
ins
inc
mov
pop
cs
lock
push
push
rcl
xlat
mov
fiadd
or
scas
fist
icebp
mov
js
mov
xchg
leave
xchg
nop
(bad)
pusha
adc
fisubr
cmp
push
in
nop
les
stc
int
push
sub
mov
inc
mov
and
jecxz
adc
mov
mov
push
popf
mov
pop
scas
sti
repz
pop
outs
or
inc
popf
fimul
shl
imul
inc
sti
test
mov
fldcw
xchg
test
ret
fisttp
jb
jl
push
rcr
cmp
push
cmps
mov
(bad)
push
mov
cmp
add
cs
mov
movs
add
ja
push
in
jb
and
loop
xlat
xchg
(bad)
not
fsub
in
call
inc
adc
xchg
adc
ret
loop
leave
or
stc
sub
nop
in
push
and
xchg
loopne
adc
fcomp
imul
nop
pusha
cmp
sahf
mov
push
inc
bound
ss
jae
cmc
(bad)
jmp
mov
mov
sti
retf
xchg
nop
ret
mov
jmp
(bad)
in
fisttp
pop
fimul
push
adc
imul
or
pushf
ss
loopne
pop
jle
inc
inc
push
push
pop
retf
and
inc
push
xor
mov
(bad)
adc
pusha
jmp
nop
dec
sbb
fs
test
add
les
aas
add
out
leave
data16
movs
mov
test
pmulhuw
lods
ds
lock
arpl
lods
xor
mov
(bad)
repz
test
or
movs
fadd
push
push
or
and
fistp
(bad)
ins
fdiv
inc
in
mov
push
out
(bad)
cld
repz
aam
mov
jnp
ret
add
add
scas
pop
test
mov
cmps
icebp
xor
mov
xchg
idiv
mov
shl
mov
shr
rcr
das
mov
mov
and
sub
in
sub
test
add
adc
mov
ja
inc
mov
mov
retf
pop
fdivr
addr16
mov
in
dec
add
out
nop
jbe
sub
dec
hlt
push
in
test
cmp
bound
scas
call
leave
push
sub
xchg
ins
scas
sbb
pop
ret
ja
jbe
scas
cld
sti
outs
or
push
sar
and
lods
jnp
adc
je
sub
mov
sbb
jo
arpl
in
xchg
out
mov
push
mov
(bad)
jg
sbb
fisubr
loop
push
xor
cmp
repnz
out
pop
call
int3
into
sub
sbb
es
sahf
mov
gs
clc
push
stc
lock
mov
ins
push
cwde
sub
popa
jbe
add
(bad)
push
call
arpl
sbb
hlt
lock
pop
sahf
call
ja
aam
pop
call
push
neg
mov
mov
dec
xor
ja
pop
popa
enter
jp
iret
pop
lea
dec
xor
in
sub
mov
bound
(bad)
xchg
cmp
iret
inc
cmp
rcr
push
xchg
xchg
xor
xchg
leave
jbe
xor
or
and
jae
idiv
int3
push
dec
into
shl
and
xor
ret
add
mov
test
pop
add
hlt
les
sbb
and
jmp
loope
call
das
int3
inc
aam
jmp
xchg
cmps
cs
cmp
sbb
call
mov
mov
mov
das
pushf
or
add
fild
js
push
cmp
fwait
fwait
push
leave
call
cmp
daa
mov
pop
faddp
(bad)
repz
enter
sbb
imul
and
xchg
dec
fisttp
cmps
cli
ins
adc
out
cmps
mov
cmps
fs
pop
cmp
neg
pop
aam
adc
jne
xor
mov
in
cmp
dec
addr16
push
sbb
sub
xor
and
test
pusha
loope
pop
mov
data16
mov
sbb
ds
push
sti
pushf
popa
hlt
(bad)
out
pushf
add
icebp
loop
inc
lock
std
call
cvttps2pi
lods
cmp
repnz
aas
lods
inc
dec
push
adc
sahf
mov
pop
test
mov
cwde
popa
pop
mov
sub
(bad)
sub
mov
push
mov
push
in
sbb
stc
aas
out
ds
das
push
mov
sar
scas
and
out
lods
dec
cwde
je
dec
fwait
icebp
stos
mov
mov
fild
and
pushf
dec
push
push
xchg
mov
adc
retf
cs
cmp
popa
xlat
xlat
cmp
fnstcw
push
mov
jnp
cmp
mov
movs
pop
inc
pop
ins
jno
rcl
cs
pop
sbb
rcl
mov
adc
mov
xor
out
dec
out
and
lock
gs
dec
mov
jp
call
adc
xchg
push
xchg
xchg
enter
xchg
mov
xor
push
mul
sub
xchg
inc
repnz
jge
mov
dec
mov
sub
inc
cmp
push
cli
push
cmp
mov
popf
xchg
cmp
mov
out
push
rcr
pop
(bad)
mov
fscale
sbb
out
fadd
repnz
pop
add
out
sub
fistp
sub
dec
pop
mov
xchg
push
(bad)
mov
(bad)
call
lds
xchg
sti
call
inc
push
dec
rcl
and
add
in
test
loop
adc
or
and
std
xlat
mov
or
sub
cmp
mov
jl
call
push
nop
cwde
(bad)
push
lea
adc
daa
or
mov
cmp
or
sub
or
and
xchg
div
cs
sub
test
arpl
call
mov
dec
dec
push
push
inc
cmp
idiv
mov
jae
or
movs
(bad)
and
push
push
push
mov
fld
out
aad
retf
add
xor
loope
inc
mov
push
sahf
ds
cli
mov
sbb
or
push
or
jnp
push
dec
frstor
xlat
not
repz
and
repz
xchg
push
shl
xchg
push
sbb
push
lahf
and
or
call
xor
sbb
lock
push
pop
aaa
hlt
test
test
hlt
push
shl
fidivr
es
pop
mov
push
or
sbb
arpl
loopne
push
jle
jecxz
push
dec
add
test
rcl
loope
adc
cwde
push
outs
push
iret
sub
pushf
les
xor
xor
xchg
mov
inc
xchg
ret
xor
pop
sti
dec
adc
dec
adc
xchg
lods
movs
mov
(bad)
mov
mov
mov
xchg
repnz
js
enter
mov
dec
rol
mov
xchg
es
mov
sbb
or
in
xor
mov
fsubr
leave
jne
mov
push
pop
add
in
xchg
fimul
xchg
xchg
or
jmp
rcl
mov
sbb
inc
das
jb
les
out
mov
fistp
adc
jmp
push
jns
lea
mov
cmp
aaa
jge
fdivr
jo
mov
mov
sub
cmps
mov
jno
ret
push
cmps
mov
push
mov
mov
inc
mov
sbb
test
add
out
jge
pop
sub
stos
cmp
call
and
xchg
lea
dec
inc
sub
push
adc
mov
fidiv
cmp
(bad)
jmp
mov
(bad)
movs
cld
sar
adc
fsub
pop
sbb
stc
and
in
xor
loope
js
mov
adc
out
rcl
or
jo
das
mov
fild
fsubr
shl
repnz
push
jmp
repz
pop
pop
jl
(bad)
js
and
(bad)
scas
aad
fsub
inc
dec
cmp
jp
dec
inc
jae
or
ror
dec
dec
jle
xchg
cmp
ins
imul
mov
repnz
mov
pushf
mov
lods
pop
and
mov
fs
addr16
mov
xchg
jle
xchg
clc
mov
pop
inc
cmp
cwde
sub
mov
push
jmp
int
sub
lds
rcl
cmps
js
repnz
or
jle
sbb
push
jnp
xchg
xchg
adc
cdq
mov
jmp
(bad)
out
dec
(bad)
fadd
shl
xor
pop
mov
jg
imul
cli
jb
jge
jg
fdiv
cmp
loope
test
pop
pop
cli
repnz
(bad)
xchg
ds
js
xchg
mov
and
push
push
popa
es
and
pop
jl
pop
scas
jge
das
scas
add
or
xchg
call
xlat
fld
shl
pop
sbb
leave
les
in
icebp
cmp
jae
inc
test
push
sub
jg
aam
popf
lock
push
shl
gs
mov
loopne
loopne
mov
push
mov
sbb
cmc
and
pop
gs
adc
jbe
mov
div
mov
pop
into
sub
cld
cld
cmp
pminsw
and
shl
dec
mov
popa
arpl
add
loope
in
sar
mov
cmp
cmps
mov
dec
push
xchg
sbb
mov
adc
dec
mov
imul
mov
mov
sub
pop
outs
(bad)
dec
jne
pop
aaa
jns
stc
jmp
mov
pushf
in
stos
xchg
in
sub
and
inc
jo
or
lods
jnp
dec
jnp
jg
ins
movs
scas
and
fucomip
test
jns
in
xchg
fbld
ja
and
cld
shl
(bad)
adc
ss
fisttp
js
test
or
and
jmp
and
rol
fdiv
inc
jmp
loop
sti
mov
push
aam
xlat
cmc
(bad)
(bad)
mov
dec
mov
cs
or
mov
push
pop
jmp
mov
cmp
inc
or
stc
xor
cmp
mov
or
sub
test
adc
adc
in
add
dec
or
fs
ficom
in
lock
xchg
lea
mov
adc
scas
mov
inc
retf
inc
or
sbb
jnp
loopne
adc
(bad)
(bad)
or
ins
add
pop
je
(bad)
leave
imul
inc
pop
jmp
sbb
ins
loope
inc
in
adc
add
or
xor
fimul
addr16
fcmove
mov
out
and
push
sbb
repz
inc
pop
shl
lock
mov
mov
add
pop
cmp
jns
xor
shl
inc
and
mul
and
cmp
xchg
daa
sti
push
cli
nop
fmul
movs
repnz
jne
push
out
mov
push
aas
arpl
movs
fsin
xchg
sbb
rcl
cmp
mov
pusha
ss
pop
xlat
mov
cmps
aad
cmp
pop
dec
adc
sub
out
xchg
and
fs
(bad)
aad
sbb
and
inc
push
call
pop
cmp
cmp
mov
xor
mov
and
aaa
sbb
pop
cmp
cmp
inc
mov
mov
cmp
mov
inc
inc
into
(bad)
jnp
mov
push
mov
popf
cmp
lock
cwde
xor
(bad)
cmovbe
cmp
(bad)
popa
xchg
jp
(bad)
mov
dec
out
test
pop
pop
pop
cld
sbb
push
retf
retf
pop
scas
sub
cmp
call
mov
push
sbb
data16
data16
jnp
mov
xchg
sbb
or
mov
bound
lods
pop
movs
push
cmp
out
test
xor
inc
fld
les
ficom
xor
mov
mov
popf
outs
cmp
or
les
jns
fnstenv
xor
adc
int3
repnz
mov
pop
fwait
and
xchg
xor
scas
inc
hlt
hlt
cmp
(bad)
rcr
and
rol
pushw
mov
add
push
cmp
dec
jle
sub
inc
dec
inc
xchg
out
inc
push
movs
leave
add
cwde
fild
dec
movs
and
arpl
sbb
div
fs
inc
mov
dec
dec
(bad)
sbb
fcom
jge
cmc
loope
retf
ds
sbb
les
les
and
add
fisubr
inc
(bad)
push
cdq
push
push
sbb
and
xor
rcl
aaa
(bad)
dec
jmp
mov
xchg
rol
aam
push
(bad)
ins
xor
or
cmp
ja
scas
aam
shr
dec
dec
test
sub
jo
pop
dec
call
popa
arpl
lods
ss
mov
cs
push
cmp
cmps
gs
aas
sub
xchg
xor
jb
adc
mov
call
pop
movs
fcomp
(bad)
scas
pop
nop
mov
dec
shr
cmps
push
jno
push
sub
fist
push
pop
ror
lods
sar
dec
dec
mul
dec
mov
xlat
pop
les
pop
aam
fcmovnb
pop
push
sbb
jmp
test
sti
pop
jmp
pop
mov
xor
out
iret
push
daa
fxam
ret
pusha
or
div
push
mov
sahf
push
jg
sbb
or
retf
inc
add
mov
dec
lahf
sbb
in
out
test
in
push
add
jge
fidiv
iret
fbstp
xor
dec
adc
pop
loopne
aam
pop
jmp
out
fwait
leave
adc
rol
cwde
jae
xor
pop
mov
adc
cmp
add
inc
cdq
and
iret
or
inc
outs
outs
xor
leave
mov
jge
enter
push
pop
(bad)
push
je
sahf
and
mov
aas
sub
test
mov
movs
aas
inc
fimul
(bad)
repz
pusha
sub
push
dec
cmp
fdiv
jge
xor
jge
sub
add
fldl2t
arpl
and
retf
lea
sub
pop
adc
scas
mov
dec
shl
pop
stc
push
dec
bound
rcl
cmp
fldenv
js
pop
pop
add
fistp
cmps
movs
lds
pop
fwait
daa
pop
mov
push
or
dec
test
icebp
push
outs
mov
adc
mov
clc
test
dec
xchg
shr
cmc
cdq
ss
ds
xlat
and
mov
test
fwait
popa
push
dec
cwde
hlt
add
in
jae
inc
gs
imul
and
push
cmps
jmp
stc
loopne
adc
arpl
add
(bad)
fnstenv
push
mov
test
ja
inc
push
outs
out
ja
in
push
fld
out
mov
jno
vpand
out
add
adc
xchg
jmp
jae
(bad)
inc
push
mov
movs
mov
mov
aas
inc
int
pop
scas
sub
dec
jmp
(bad)
(bad)
fcmovnb
pop
retf
dec
cdq
or
xchg
gs
push
xchg
out
aas
push
pop
in
jge
jmp
mov
and
pushf
rcl
adc
inc
sbb
mov
mov
popa
data16
jae
repz
sbb
lods
out
bound
inc
jmp
stc
imul
mov
gs
andnps
pop
mov
repz
mov
jl
inc
pop
fcom
add
and
sub
mov
dec
dec
adc
mov
pop
push
sub
jb
push
mov
ret
pusha
or
test
dec
xor
cmps
xchg
pop
xor
push
mov
or
xchg
cmp
sub
scas
dec
aas
push
adc
sub
xlat
inc
(bad)
scas
shl
add
fiadd
shl
popf
xchg
call
out
or
arpl
daa
push
add
pop
inc
cli
ss
or
das
or
aad
fidiv
mov
addr16
pop
jns
sar
dec
movs
popa
hlt
inc
mov
mov
dec
mov
call
cld
cmp
in
mov
aas
js
adc
add
iret
pop
inc
xor
into
jne
mov
bswap
hlt
out
jno
lahf
repz
arpl
sar
fucomp
gs
lahf
mov
pop
scas
jl
stc
shl
push
cmp
inc
mov
inc
fadd
aaa
xchg
sub
jmp
xchg
addr16
aaa
or
sbb
xor
xor
or
imul
mov
sub
hlt
adc
push
repnz
mov
daa
jmp
les
stos
fsubr
mov
(bad)
push
mov
ret
leave
mov
mov
inc
sbb
sbb
outs
cld
sti
adc
movs
pop
lock
mov
push
pop
dec
push
int
jmp
jmp
out
mov
xchg
stc
aas
jmp
and
add
push
std
(bad)
cli
dec
loop
sti
call
cmp
cli
sub
push
or
das
test
aad
fstp
retf
pop
dec
mov
and
cmp
fmul
stos
fidivr
mov
test
in
sub
popf
adc
call
mov
jl
push
scas
jae
leave
pop
loopne
fs
sbb
mov
bound
jne
xchg
shr
imul
pop
lea
inc
mov
jae
mov
pop
jnp
dec
aam
adc
sbb
or
push
sbb
and
fisttp
cdq
ja
add
out
dec
pop
test
adc
js
inc
ds
pop
daa
scas
aam
sub
xlat
(bad)
jle
addr16
mov
(bad)
mov
int
rol
xchg
jmp
shl
lods
int
xlat
push
scas
call
push
jmp
inc
xor
popa
jmp
push
outs
xor
xor
mov
clc
pop
popa
add
mov
cmp
pop
fst
imul
jp
pop
ja
pop
call
adc
(bad)
mov
stc
mov
gs
aaa
mov
ret
xor
dec
xchg
outs
call
xchg
hlt
dec
mov
adc
inc
cmp
rcr
or
mov
xchg
ins
mov
pop
out
loope
push
aam
sbb
cmp
dec
xchg
test
add
add
or
(bad)
shr
loop
mov
ins
aas
cmp
jp
xchg
and
add
ins
js
sub
and
mov
gs
mov
rcr
sub
cwde
cwde
xchg
xor
mov
and
xchg
imul
cmps
xor
sti
ins
movs
add
inc
(bad)
pop
xchg
repz
pop
pop
fs
cli
shr
dec
lods
sub
ret
cld
cld
js
cmp
mov
push
cmp
and
sti
jnp
mov
mov
out
div
mov
fs
call
repz
shl
dec
sbb
mov
xor
mov
iret
addr16
je
movs
shr
cmp
and
cmp
dec
cmp
mov
sub
rcr
clc
jns
inc
retf
push
push
sub
out
xchg
loopne
cmp
jmp
xchg
(bad)
dec
and
or
mov
jne
in
add
sbb
sbb
js
mov
inc
lds
daa
mov
sub
xor
mov
inc
xor
pop
mov
xor
leave
leave
cli
aas
sbb
shl
daa
nop
xor
cwde
ins
and
xchg
aas
push
cmp
cmps
jae
aas
aam
into
pop
add
jns
cmp
pop
cmp
arpl
fs
jo
push
test
dec
ret
rcr
xor
cmp
mov
add
imul
mov
scas
mov
or
push
je
bound
cmp
sbb
cmp
xchg
aam
pop
mov
imul
add
mov
mov
jo
push
lods
adc
adc
xor
mov
mov
aaa
xchg
and
sub
cmp
int
mov
clc
clc
sahf
(bad)
shl
dec
out
add
sub
enter
retf
add
cdq
lahf
scas
out
pop
mov
je
call
cmp
jne
xchg
mov
sub
enter
cli
shr
jp
aad
jne
mov
xchg
and
add
outs
jle
jae
stos
mov
data16
or
imul
das
leave
sub
sbb
mov
push
ret
adc
jp
add
repnz
add
mov
ins
shl
and
popf
pushf
loope
stos
hlt
gs
or
jl
and
xchg
mov
imul
dec
fisubr
shl
hlt
icebp
ret
fadd
(bad)
xchg
and
(bad)
or
or
retf
push
push
call
and
fucomip
gs
cs
pushf
mov
rcr
(bad)
push
retf
adc
mov
imul
push
cmp
dec
retf
xchg
push
or
arpl
dec
or
ins
inc
scas
mov
dec
ins
and
xor
xchg
jbe
ss
xor
cmp
mov
(bad)
add
or
imul
(bad)
push
fild
jecxz
inc
pop
dec
dec
sti
iret
adc
pop
jae
ds
rol
dec
mov
stc
aam
push
aas
stos
nop
rcl
aaa
mov
imul
add
mov
dec
and
test
xchg
mov
mov
call
push
ror
int
fsub
and
in
(bad)
fwait
add
clc
cmp
inc
cmp
pop
cmc
or
mov
into
sbb
pop
mov
push
adc
test
mov
cmp
mov
imul
ficom
push
fstp
xor
xchg
push
mov
xchg
fmul
pop
dec
xor
(bad)
mov
xlat
(bad)
mov
js
mov
or
fiadd
or
fcom
add
sbb
mov
cdq
test
xchg
inc
fs
cmps
push
lahf
mov
dec
mov
(bad)
out
pop
jmp
and
pop
aam
add
pcmpgtw
shr
xchg
xchg
xchg
add
and
xchg
inc
mov
enter
mov
jl
inc
lods
xchg
(bad)
cs
cdq
adc
dec
shl
cmp
or
adc
repnz
lds
stc
lods
dec
(bad)
(bad)
es
fwait
dec
xchg
sbb
jmp
mov
and
push
inc
jecxz
scas
xchg
sub
pop
arpl
hlt
add
sub
(bad)
push
int
test
stos
nop
es
push
stos
imul
push
stos
dec
adc
stc
retf
sti
outs
push
leave
sar
or
push
aas
les
in
xchg
retf
sub
sahf
add
loopne
cli
jne
arpl
and
shl
xor
ficomp
mov
sbb
push
xor
in
pop
xchg
xor
sub
jmp
clc
dec
lahf
push
pop
dec
out
inc
mov
daa
pop
test
xchg
or
addr16
sub
les
add
add
sti
pop
inc
sub
je
sbb
cmp
mov
or
and
adc
daa
sbb
or
(bad)
ds
push
sub
leave
or
shl
js
jo
imul
cmps
cmps
int
ja
psadbw
loope
dec
push
pop
push
fstp
in
call
mul
add
dec
daa
pop
mov
jne
pop
int
adc
pushf
bnd
ret
push
mov
clc
mov
stos
mov
movs
or
hlt
or
xchg
jne
pop
xlat
push
out
inc
fwait
aad
or
aaa
outs
dec
push
add
dec
cmp
xor
mov
dec
fsub
pop
(bad)
add
adc
cdq
and
mov
fild
mov
sub
adc
jns
mov
sbb
push
cmps
loop
mov
repnz
xchg
sbb
mov
xor
mov
pop
jns
ds
sub
fdivr
push
stos
push
ficomp
dec
mov
mov
and
dec
mov
pop
or
div
pop
xchg
jecxz
pop
push
aad
jo
pop
gs
mov
ficomp
mov
ins
mov
xor
inc
xchg
xor
xor
lock
jo
movs
or
out
lods
les
call
icebp
hlt
inc
outs
sbb
data16
sar
mov
add
dec
mov
(bad)
mov
leave
adc
and
popf
imul
mov
cmc
imul
clc
jb
ins
xor
xchg
ds
sbb
pop
or
stos
add
pushf
adc
and
inc
mov
inc
ds
retf
cmp
mov
xor
xlat
or
mov
cmp
and
mov
pusha
idiv
aaa
xchg
jmp
aam
call
add
or
call
fmul
sub
bswap
lds
push
stos
inc
mov
xor
mov
push
pop
inc
aad
mov
int
sub
adc
or
imul
push
loope
and
arpl
and
(bad)
jns
adc
daa
jg
outs
fidivr
adc
sbb
cld
mov
jno
mov
or
push
mov
sahf
in
stos
ds
sub
sbb
pop
iret
mov
fabs
or
push
clc
mov
loopne
push
imul
jnp
je
mov
repnz
fnstcw
jo
(bad)
jns
push
shl
jb
add
mov
xchg
adc
aad
and
and
imul
in
adc
mov
or
loop
adc
push
pmaddwd
or
rol
loope
mov
or
mov
adc
pop
sbb
rol
popa
add
into
jmp
inc
movlps
popa
shl
cmp
jg
je
popa
stc
adc
sti
jne
test
(bad)
sbb
inc
call
pop
scas
sbb
rcl
cli
push
popf
cld
mov
cmps
aas
add
jnp
(bad)
dec
icebp
or
pop
aas
jmp
retf
adc
pop
neg
das
call
or
ror
xor
mov
lea
cmp
mov
not
arpl
loopne
pop
cmp
add
mov
sub
add
mov
mov
xchg
and
mov
mov
xlat
adc
add
(bad)
push
sbb
shl
inc
loopne
xchg
jp
rcr
push
mov
xchg
xlat
loope
aad
arpl
fstp
test
push
dec
addr16
and
in
idiv
aaa
push
cwde
sub
int3
xor
js
stos
cdq
js
lahf
scas
fist
movs
inc
mov
mov
sub
cmp
dec
ins
aad
jae
daa
outs
iret
mov
xlat
add
es
mov
outs
fst
add
cmp
aad
bound
scas
inc
mov
sar
std
pop
push
je
addr16
xchg
sub
loope
xor
mov
ret
fptan
mov
rcr
lahf
aad
jp
mov
push
adc
push
dec
fbstp
lods
dec
mov
sub
cld
lahf
mov
adc
clc
hlt
or
cmp
popf
mov
bnd
sti
sbb
and
add
lock
jb
push
or
inc
ins
sbb
pop
mov
imul
rol
mov
jmp
mov
pop
jle
ja
dec
ins
and
mov
inc
xchg
clc
add
ror
add
dec
(bad)
and
and
bnd
shr
les
mov
mov
lds
fucomi
adc
pop
dec
sysenter
add
loopne
ins
xor
loop
sbb
mov
and
add
sar
jns
xabort
hlt
pop
pushf
popf
movs
loope
popa
add
dec
and
add
add
adc
and
and
test
push
mov
fadd
sub
ja
push
xor
mov
mov
dec
pop
loop
xor
ins
jmp
test
mov
loop
inc
jno
outs
outs
cdq
aad
mov
test
mov
out
adc
push
pusha
bnd
and
rol
jmp
outs
inc
xchg
pop
push
(bad)
jmp
iret
fisub
jl
mov
mov
mov
aad
cmp
xchg
repnz
popa
push
mov
(bad)
xor
lods
stos
es
and
or
sahf
dec
stc
jbe
mov
jmp
dec
add
test
jecxz
jecxz
jo
and
ins
iret
bound
repz
stc
inc
test
into
je
push
xchg
in
xchg
fist
lds
push
out
ins
sar
pop
cmp
mov
std
rcr
pop
mov
jle
pop
(bad)
aad
(bad)
jl
(bad)
xor
add
sub
jo
jl
sbb
outs
sub
cwde
sbb
pop
clc
lock
xor
pop
nop
int3
push
mov
lock
stos
jmp
div
lods
int3
repnz
daa
sub
hlt
aam
xor
sti
and
mov
add
xor
push
out
mov
push
pop
test
jnp
sbb
(bad)
aad
cld
jb
(bad)
cmp
lds
sub
and
push
push
test
fisubr
push
cld
jle
stos
ins
ds
cmp
sahf
sub
aam
add
push
in
inc
xchg
xor
and
pop
aas
in
sbb
inc
bswap
stos
ins
xchg
fsubr
inc
imul
scas
mov
push
pop
jle
jnp
mov
mov
sbb
sti
mov
fcompp
pop
sar
in
(bad)
sub
and
dec
shl
scas
stos
add
mov
add
in
xor
std
test
cli
sbb
mov
sbb
test
mov
dec
sub
(bad)
sbb
and
(bad)
jge
sahf
push
(bad)
dec
sbb
movs
sub
dec
ds
xchg
dec
adc
add
lods
jmp
push
mov
or
(bad)
xchg
push
fxch
add
inc
in
imul
push
pop
or
test
ret
shr
pusha
shr
xchg
lock
xchg
hlt
out
fdivrp
ret
leave
mov
or
or
fmul
imul
fwait
popa
pop
and
loopne
cmovbe
std
xchg
aad
jmp
jl
push
iret
stos
ror
mov
jno
mov
out
pop
jecxz
nop
scas
shr
xor
lahf
and
nop
mov
cmp
nop
sub
icebp
pushf
(bad)
pop
pop
clc
xchg
pop
sbb
cmps
(bad)
jnp
test
add
cmp
jae
mov
mov
sbb
push
pop
fisttp
or
inc
out
pop
sbb
pop
ins
arpl
cmps
je
aad
rcl
fwait
jmp
adc
mov
pop
xchg
mov
lods
ret
ss
movs
sub
mov
arpl
cli
push
ror
inc
movs
(bad)
pop
test
rcl
lahf
hlt
repz
outs
cmc
sbb
mov
loop
mov
xchg
into
cwde
je
scas
hlt
cmp
push
cmp
mov
xchg
push
mov
and
adc
scas
pop
adc
inc
pop
mov
pop
inc
mov
(bad)
outs
mov
dec
into
loope
and
out
retf
hlt
sbb
das
sub
test
cmc
and
loopne
xchg
out
ret
lea
and
rcr
mov
idiv
dec
or
ret
fist
ror
xchg
push
test
pop
or
(bad)
shl
cs
mov
jne
push
ret
lods
scas
jne
push
vmwrite
or
sahf
and
test
test
lods
add
pop
cmp
inc
loop
push
pop
sti
sub
jnp
fnstcw
jmp
xchg
stos
inc
pop
jecxz
inc
cli
fidivr
cmps
dec
ret
sub
out
and
xchg
shl
pop
test
pop
movs
sub
test
mov
add
mov
test
sahf
loope
and
mov
dec
scas
pop
fiadd
fs
add
retf
xchg
xlat
clc
xchg
add
(bad)
mov
(bad)
push
jb
mov
inc
js
scas
inc
jle
jb
fistp
movntq
add
test
stos
fidiv
mov
mov
sub
lods
push
jo
aaa
movs
fcomp
sub
mov
nop
mov
ins
lea
xchg
sbb
and
jp
es
inc
int
inc
jl
shl
out
jo
push
jle
loopne
fwait
adc
(bad)
fidiv
dec
jnp
jle
mov
fnstsw
sti
aas
xor
aaa
fnstcw
mov
lea
dec
or
fdivr
jge
xor
mov
loopne
mov
stos
or
or
jns
jbe
push
dec
mul
rol
push
retf
xchg
packssdw
mov
cmp
loope
idiv
lahf
mov
iret
or
push
xor
push
aad
fsubp
xor
ss
xchg
cmps
leave
outs
pop
ror
push
es
lods
inc
jb
xor
mov
(bad)
xchg
mov
lds
xchg
dec
mov
pop
mov
inc
jbe
jmp
mov
add
add
dec
or
mov
outs
imul
inc
jl
pop
dec
scas
mov
mov
mov
push
xchg
cld
nop
bound
call
mov
inc
movs
sahf
in
or
cmp
xchg
nop
jnp
pop
lods
sbb
sahf
xchg
cmp
outs
(bad)
data16
test
dec
jg
or
and
mov
xor
xchg
ret
push
push
and
(bad)
push
or
mov
cwde
mov
call
sub
xchg
fbld
push
int
sub
ret
and
add
cmp
adc
mov
rcr
xchg
dec
scas
imul
ds
add
(bad)
add
mov
add
nop
(bad)
(bad)
mov
stc
lods
hlt
push
cdq
xchg
xor
adc
popa
mov
sbb
sahf
sub
mov
(bad)
inc
(bad)
in
in
push
arpl
in
movs
push
mov
jl
cmp
test
data16
sahf
(bad)
std
or
pop
iret
jb
stc
fldcw
es
inc
jnp
nop
fcmovbe
jns
jae
mov
jmp
sub
add
mov
mov
xchg
out
dec
mov
ins
(bad)
mov
push
mov
cmp
sti
inc
inc
sbb
dec
out
data16
cmp
rol
mov
and
dec
sub
mov
mov
mov
rcl
xor
call
jbe
out
mov
xor
ss
mov
pop
lds
cld
xchg
lea
ret
jno
and
leave
cli
inc
(bad)
movs
add
lods
inc
dec
clc
das
ins
inc
imul
adc
or
sahf
pop
dec
ins
mov
pop
mov
lods
fwait
cwde
ins
fisubr
aas
pop
push
popf
cmp
sub
ins
jb
stos
dec
push
dec
pop
and
mov
je
arpl
inc
mov
jp
mov
popa
cld
and
lahf
mov
mov
sbb
(bad)
jo
dec
pop
jmp
adc
xchg
push
imul
or
pop
data16
dec
cmp
jmp
jbe
leave
add
into
inc
pop
jo
stc
clc
rol
sbb
sub
push
ror
gs
sub
inc
fwait
mov
xchg
int3
ins
jle
pop
add
mov
rcl
loop
mov
into
inc
add
dec
outs
push
mov
rep
cmc
aaa
mov
adc
pop
push
jb
adc
sti
mov
sub
ins
push
push
sbb
adc
lds
jl
data16
imul
inc
aas
dec
mov
jmp
xchg
mov
cld
cs
dec
mov
idiv
push
xchg
mov
call
(bad)
ins
sbb
and
mov
pushf
pop
cld
ret
xlat
mov
and
leave
cmp
push
loope
stos
jl
sub
push
add
div
sti
lahf
mov
in
call
sub
mov
push
rcl
daa
call
dec
xchg
iret
mov
iret
adc
mov
pop
add
sbb
cmps
fwait
mov
cld
xchg
repnz
or
jns
stos
(bad)
mov
jo
test
(bad)
retf
lock
cmps
jno
cdq
mov
outs
aaa
add
aad
xchg
sbb
mov
hlt
jmp
(bad)
pop
mov
movs
pop
jle
and
xchg
jl
pushf
mov
mov
lock
lods
jp
es
pop
and
add
mov
xchg
std
iret
mov
xor
dec
ret
xor
and
cld
dec
mov
sub
loopne
out
mov
xchg
or
jecxz
mov
and
sub
jge
sahf
xchg
rcr
xor
ds
sub
stos
jge
mov
int
(bad)
sbb
fdivr
sbb
xchg
cmp
outs
lea
jns
mov
push
jecxz
in
and
(bad)
or
lea
sub
adc
and
fcomp
dec
adc
out
test
ror
mov
nop
mov
push
jo
popa
jl
rol
xchg
xchg
cmp
hlt
pop
daa
je
das
out
mov
push
enter
mov
jnp
sbb
inc
clc
mov
jp
xchg
cmp
mov
inc
dec
or
(bad)
ja
mov
cld
iret
push
pause
imul
mov
xchg
out
mov
xchg
shl
push
dec
add
test
repz
xor
lods
mov
cmp
fisub
or
inc
aad
sub
jmp
dec
push
(bad)
(bad)
in
cwde
pop
pop
stos
mov
out
shr
std
push
cdq
dec
rol
test
xchg
sub
mov
fs
out
sbb
icebp
jno
mov
sbb
jae
mov
(bad)
movs
in
mov
in
pop
stos
nop
pusha
xor
fiadd
sbb
pop
push
jmp
mov
pop
(bad)
jno
dec
retf
cmp
imul
xor
jmp
scas
es
add
push
js
xchg
loopne
stos
icebp
hlt
inc
mov
xchg
push
cli
push
leave
nop
scas
pop
jl
pmulhuw
cs
push
scas
iret
inc
sub
jge
and
jg
popa
sbb
js
sub
pop
adc
push
mov
push
pushf
sbb
ficomp
and
mov
inc
push
loop
or
test
sbb
mov
jg
sub
pop
es
sub
pop
hlt
mov
stos
pop
adc
pushf
mov
push
cmps
dec
ins
cwde
dec
inc
test
jmp
adc
xchg
sub
add
ret
xor
cmp
movs
xchg
loopne
nop
adc
or
mov
push
lahf
outs
push
push
pop
cmc
mov
dec
dec
call
push
xor
out
loopne
int3
in
fnsave
pop
xchg
xchg
xor
aaa
and
cmp
retf
pop
rcl
(bad)
push
push
pop
jp
xor
adc
and
inc
(bad)
sbb
mov
push
xor
outs
xor
jbe
pop
cmp
jnp
frstor
adc
push
push
popf
push
jle
arpl
fist
jae
mov
dec
cmp
outs
mul
retf
imul
sbb
inc
add
mov
push
mov
dec
test
push
pop
inc
push
jmp
hlt
cmp
les
mov
(bad)
sahf
and
stos
jmp
dec
loopne
xchg
mov
cmp
adc
repz
mov
push
adc
(bad)
je
(bad)
call
imul
pop
jo
imul
jnp
retf
push
jne
add
push
push
push
mov
lea
jge
js
sti
or
fxch
jmp
fsub
mov
ficom
lahf
sbb
push
movs
cmps
adc
int
cdq
fiadd
adc
add
jl
mov
retf
(bad)
daa
mov
push
mov
aaa
cdq
mov
sub
mov
outs
mov
cmps
xchg
mov
push
inc
and
ins
add
pop
add
sbb
sbb
mov
(bad)
js
shl
sub
jecxz
hlt
add
mov
retf
ss
inc
ret
add
stos
and
arpl
daa
adc
popa
sahf
and
pop
add
and
ret
sbb
ins
daa
ss
push
out
mov
dec
jl
and
int
dec
nop
or
and
mov
(bad)
cmp
vunpcklps
outs
stos
je
mov
iret
dec
ss
loopne
mov
push
mov
daa
lds
in
fist
inc
inc
retf
inc
rcr
add
in
mov
stc
(bad)
fnstenv
repz
lds
cmps
das
and
sbb
lahf
mov
push
in
stos
mov
add
sysenter
leave
lea
xchg
fdivr
lea
les
test
stos
int
mov
stc
or
out
xchg
pop
pop
test
dec
(bad)
movs
mov
nop
dec
(bad)
(bad)
cmp
sbb
sub
mov
popf
mov
jbe
push
sub
(bad)
push
sub
pop
(bad)
or
jle
icebp
les
push
mov
mov
lea
sbb
pop
inc
aas
les
jns
cmps
add
arpl
mov
add
(bad)
in
jnp
or
(bad)
pop
clc
xchg
mov
mov
mov
mov
stc
ficomp
mov
ret
mov
or
in
sbb
loope
(bad)
or
leave
mov
mov
push
pop
shr
bound
ins
jg
inc
je
inc
sar
call
cmp
in
mov
sbb
xor
imul
inc
push
jmp
retf
les
sub
sbb
lock
sahf
jmp
lods
pop
add
ins
xchg
into
sbb
outs
push
aas
and
jno
cmp
imul
addr16
adc
(bad)
and
sbb
push
or
xor
and
fs
sbb
or
add
jnp
add
mov
xchg
sbb
dec
mov
mov
std
mov
dec
adc
out
sbb
cli
jg
sub
test
push
adc
jo
stc
lock
mov
xchg
rol
inc
and
call
stos
iret
lock
mov
jmp
jnp
ins
in
add
mov
pop
(bad)
and
mov
mov
sub
es
add
inc
imul
pop
inc
xchg
mov
mov
lds
ja
sar
sub
xchg
movs
mov
xlat
cmp
mov
jno
sti
(bad)
xchg
imul
out
push
(bad)
pop
mov
les
adc
lock
push
cmp
sbb
xor
inc
pop
rol
out
mov
mov
and
xchg
leave
je
pop
scas
mov
mov
mov
mov
mov
push
movs
in
add
dec
mov
(bad)
jecxz
or
mov
and
(bad)
add
xchg
repnz
loope
stos
sub
(bad)
adc
cmp
and
xor
leave
cmp
loop
mov
jbe
out
xor
cs
jp
mov
loop
mul
pop
inc
inc
cli
add
push
cli
sbb
and
push
mov
scas
add
xchg
(bad)
mov
fs
test
sub
ror
aam
in
jns
dec
pusha
xchg
pop
ror
arpl
stc
xor
dec
into
icebp
adc
mov
push
test
test
fisttp
leave
xchg
or
dec
jmp
cmc
add
fild
pop
cmovb
out
scas
jae
or
arpl
les
test
lods
sbb
stos
push
cmp
stos
daa
cmp
scas
cld
mov
sub
pop
dec
or
mov
in
aad
sbb
xchg
adc
(bad)
sub
add
and
fwait
jmp
dec
mov
jbe
test
xor
iret
mov
dec
bound
and
out
out
cwde
mov
sub
rcl
dec
pop
adc
adc
mov
adc
and
std
(bad)
test
jp
and
push
pop
inc
out
(bad)
sub
ss
dec
sub
jle
mov
lods
add
xchg
and
mov
in
retf
cs
shl
sub
sar
pop
stc
or
int
xchg
add
sub
push
cs
imul
popa
test
fldcw
icebp
jbe
out
shl
and
xchg
das
les
ss
shl
in
xchg
cmp
stc
loop
jg
sbb
rol
mov
xchg
pushf
hlt
test
jne
and
xchg
stos
test
or
sbb
mov
movs
sub
jo
xchg
popf
in
mov
jae
retf
call
or
pushf
mov
xchg
sub
cwde
push
push
les
push
imul
mov
lahf
(bad)
or
dec
in
cwde
adc
cmp
adc
out
clc
push
lods
or
jecxz
xchg
jns
aad
xchg
lea
add
mov
dec
lds
jmp
push
std
mov
aaa
jbe
lahf
inc
and
loope
jns
popa
pop
movs
int3
add
test
clc
cdq
pusha
test
fimul
adc
popf
xor
out
add
push
out
(bad)
arpl
les
adc
pusha
jge
sub
push
mov
sar
mov
adc
out
add
sub
lods
mov
add
(bad)
sub
sbb
or
add
xor
sbb
pop
mov
ficom
mul
inc
cli
and
call
popa
jp
xor
push
xchg
push
pop
cwde
cs
xor
xchg
pop
int
in
sbb
lea
sbb
adc
mov
jb
pusha
jmp
ret
call
fwait
adc
push
xor
fst
cdq
out
mov
pop
mov
hlt
jecxz
shl
adc
xchg
add
movs
ja
xor
dec
inc
(bad)
sbb
jb
in
add
repnz
push
arpl
ds
mov
(bad)
xchg
mov
test
inc
cmp
fistp
ret
aaa
ss
mov
xor
repnz
or
lahf
jmp
(bad)
aad
(bad)
adc
pop
inc
mov
mov
call
mov
dec
dec
test
inc
aam
pushf
imul
push
inc
inc
clc
xchg
dec
scas
inc
add
pop
fsub
fs
mov
or
jmp
dec
add
and
dec
ins
sub
and
arpl
xchg
fild
pop
out
push
cmc
loopne
inc
or
test
rep
nop
pop
mov
mov
push
push
dec
or
cmp
js
push
inc
retf
mov
dec
cdq
xor
mov
cmp
rcr
mov
aaa
ins
add
outs
jp
jecxz
xchg
leave
out
(bad)
push
jmp
lock
jae
fs
imul
cwde
cwde
js
or
or
dec
cmp
cs
cmp
cmp
mov
jl
fist
push
jb
sbb
test
and
rcr
push
jmp
or
ins
push
inc
pop
fisttp
mov
in
fdivr
mov
popa
scas
add
jbe
jbe
mov
(bad)
call
sbb
pop
push
push
fst
push
aad
(bad)
sbb
dec
lea
outs
iret
pop
xchg
in
pop
jns
out
ss
fld
push
mov
ret
test
ficomp
fstp
xchg
and
mov
mov
mov
into
call
mov
imul
mov
mov
dec
xor
inc
xlat
cld
or
sub
je
loope
stc
sbb
out
add
and
scas
enter
shl
cs
je
sbb
mov
sbb
mov
fimul
sub
xor
jo
mov
add
cs
mov
ficom
enter
fcmovu
les
mov
add
mov
cdq
addr16
dec
sbb
mov
lahf
mov
test
call
fsubr
je
imul
sub
mov
les
dec
cmp
fdiv
aas
add
jnp
inc
sub
mov
test
clc
lods
int
xchg
lds
jecxz
mov
or
call
cwde
popf
jecxz
push
jle
cmp
push
(bad)
repnz
mov
out
int3
cli
shr
pusha
daa
repz
push
xchg
hlt
cmp
jno
mov
mov
int
mov
loope
xor
cld
outs
mov
cli
addr16
or
nop
in
jmp
xor
lahf
jno
mov
inc
dec
(bad)
cmc
adc
rcr
fdivr
loope
int
fcomip
sub
popf
xor
popf
pop
ins
push
aam
ss
fsub
out
in
test
xchg
mov
xor
xor
loope
or
mov
pop
je
xor
outs
push
jns
mov
fild
inc
outs
adc
cdq
inc
mov
or
scas
fcmovnu
jle
aaa
lods
adc
arpl
mov
add
rcl
mov
jne
lods
jno
inc
add
retf
repnz
dec
mov
imul
out
in
out
add
cld
mov
aaa
mov
mov
cli
push
idiv
lock
rol
mov
aam
adc
cmp
inc
nop
(bad)
popf
outs
cmc
sub
ja
mov
fwait
cmc
fcmovnu
xchg
xchg
popf
in
ja
mov
pop
xor
cmps
inc
data16
std
add
cmp
cmp
mov
mov
mov
push
sub
dec
les
push
sbb
jmp
xor
mov
mov
xor
cmp
stc
mov
cmps
int3
xchg
hlt
loope
aaa
dec
mov
inc
jecxz
mov
pop
in
and
add
shr
mov
pop
(bad)
sbb
jmp
adc
out
in
outs
jmp
xlat
jl
xchg
fist
neg
add
jmp
sub
adc
pop
in
sbb
stc
dec
cdq
xor
out
popa
xchg
or
in
push
ins
mov
sbb
add
sub
pop
pop
scas
into
push
clc
add
in
cdq
stos
sbb
push
pushf
sub
mov
sar
mov
lock
sbb
ror
popf
xlat
mov
and
mov
out
(bad)
mov
xor
adc
nop
movs
pop
sbb
cmp
mov
lods
cmp
(bad)
pop
fs
cmp
fst
out
mov
push
rcr
xor
pop
mov
rcr
test
ja
xchg
int
out
movs
test
pushf
cmps
stos
ja
jmp
lahf
(bad)
sub
sub
sbb
xor
imul
lods
fs
and
imul
sub
mov
sti
pop
mov
retf
sub
iret
pop
loope
mov
fwait
mov
das
out
neg
push
fcom
xor
dec
fwait
outs
pop
lock
push
cmp
aas
fisttp
inc
repnz
sbb
jecxz
adc
adc
fs
aas
and
loope
jo
inc
add
ret
repz
or
mov
(bad)
push
inc
iret
and
shl
dec
adc
xor
jmp
jns
scas
bound
push
xor
rep
enter
repz
push
cmc
ret
xchg
xchg
imul
lods
cmps
lahf
lods
hlt
inc
scas
add
aas
jge
shl
and
or
mov
xchg
iret
dec
icebp
mov
mov
mov
ficomp
(bad)
jg
push
xchg
push
pushf
add
int
pop
pop
call
add
cmps
pop
push
push
mov
in
fs
mov
out
fisttp
jl
cld
fistp
xor
xchg
(bad)
cmp
lods
movs
mov
adc
loop
sar
push
and
mov
sbb
push
xlat
lods
push
mov
mov
mov
in
cmps
or
jb
pop
out
adc
test
repz
pop
ret
int
outs
ror
sahf
mov
push
jb
je
ins
and
call
(bad)
jo
mov
pop
xchg
add
xchg
loopne
sub
(bad)
pop
inc
(bad)
add
xor
daa
imul
mov
jo
xchg
adc
cmps
xchg
retf
int
outs
or
or
and
movs
and
push
cmp
sbb
retf
mov
(bad)
fild
hlt
(bad)
xlat
jecxz
push
mov
movs
or
sub
jo
lods
mov
ds
or
pushf
push
lea
js
add
(bad)
sbb
popa
push
iret
unpckhps
lahf
scas
mov
leave
std
mov
lods
lock
sbb
jge
popa
das
push
push
ret
sbb
dec
mov
icebp
js
scas
sbb
mov
sbb
xchg
xchg
cli
ins
rol
adc
xchg
lahf
dec
sub
jmp
adc
xchg
xchg
xchg
sbb
push
inc
icebp
fild
cmp
out
jnp
adc
jno
push
xor
test
xchg
xlat
pop
sahf
mov
push
xchg
jne
out
xchg
or
inc
mov
mov
adc
fs
adc
icebp
inc
adc
stos
xor
jmp
xchg
sar
fwait
mov
dec
inc
cmc
imul
adc
add
push
jg
adc
je
and
out
aaa
or
push
popf
push
adc
jne
(bad)
scas
call
pop
sbb
cmp
cmc
push
popa
inc
cmc
and
adc
lahf
arpl
ja
(bad)
jecxz
ss
push
mul
and
mov
dec
dec
mov
movs
jmp
xchg
sbb
sub
jnp
adc
xchg
mov
mov
jecxz
adc
push
push
cli
push
or
pop
mov
ins
pop
fidivr
fwait
cmp
scas
mov
popf
rcr
mov
adc
bnd
test
mov
mov
sbb
adc
test
mov
gs
sub
mov
sti
jp
ret
xchg
add
lods
sub
pop
push
in
int3
pop
add
int
xor
shl
pop
xor
fwait
jmp
lock
dec
sbb
outs
les
sub
cs
not
int
sbb
and
sub
pop
add
je
cwde
pop
jp
retf
or
jo
mov
sub
xchg
mov
std
pop
jge
cmp
rcl
mov
cmc
pop
xchg
inc
xchg
jns
xchg
inc
dec
and
aad
mov
dec
stos
leave
in
mov
ret
mov
mov
fstp
jne
mov
mov
mov
fmul
cmp
pop
lods
mov
xchg
add
push
fmul
dec
mov
jb
fs
retf
jecxz
add
push
lock
mov
cmp
dec
xor
int3
test
sbb
add
jo
vmovaps
mov
out
sbb
test
xchg
retf
popa
ja
lock
fldenv
fidivr
rcl
sub
loop
push
lods
aad
or
push
mov
mov
add
add
aaa
xor
test
jnp
jp
sbb
pop
push
cmps
dec
fstp
inc
retf
jmp
dec
sahf
adc
push
pop
aad
pop
test
(bad)
aaa
shl
xor
je
arpl
dec
jae
in
call
jmp
fdivr
and
xchg
sbb
mov
cmp
xor
adc
dec
jb
test
data16
jle
(bad)
mov
add
in
adc
or
add
iret
ins
dec
sub
jmp
pop
mov
push
sbb
or
imul
fiadd
fs
sti
into
and
outs
mov
scas
enter
adc
xchg
mov
inc
add
xchg
lds
repz
mov
fs
sub
add
sub
xchg
dec
push
sbb
lods
(bad)
and
cmps
inc
pop
scas
push
mov
jp
push
(bad)
xchg
cs
lahf
mov
in
sbb
and
(bad)
outs
jbe
aad
inc
in
shl
vhsubpd
mov
jne
jne
mov
adc
inc
cld
jmp
mov
push
call
adc
xor
addr16
or
call
jge
in
mov
or
movs
xchg
sub
adc
scas
ins
push
hlt
mov
push
mov
mov
mov
inc
push
or
and
push
fldenv
inc
xchg
jecxz
out
popf
or
push
imul
xor
mov
or
repnz
call
and
bound
sar
inc
sbb
outs
mov
leave
clc
jle
jp
(bad)
loope
movs
jecxz
ins
movs
xlat
xor
neg
mov
push
jno
call
jle
adc
jl
sub
out
arpl
xchg
cmp
stc
fcom
push
inc
les
fstp
aaa
sbb
out
shl
xchg
jo
mov
sub
repnz
cmps
dec
scas
nop
fistp
mov
cmp
or
xchg
pop
jnp
aas
call
iret
inc
inc
dec
pop
movs
jge
and
and
fistp
cmp
xchg
cmp
pushf
int3
loop
mov
jg
mov
mov
xchg
sbb
es
adc
inc
ins
xor
les
lods
call
sub
fimul
sbb
stos
test
lock
inc
adc
push
lea
ror
mov
dec
sbb
lds
ins
(bad)
or
jne
push
in
loopne
ds
xchg
jg
jbe
or
sbb
dec
push
scas
pop
imul
xlat
sub
and
cmps
lea
cli
retf
and
rcl
iret
cli
xor
or
cs
das
xor
pop
jnp
cli
inc
pop
pop
aad
adc
mov
mov
test
or
shr
jb
leave
xlat
push
xor
and
sahf
dec
mov
test
jge
iret
(bad)
loope
aaa
loop
fwait
pushf
and
pop
stos
cmp
sbb
pop
paddb
ss
mov
mov
mov
movs
ret
test
pop
xor
pusha
(bad)
fdiv
pushf
(bad)
in
mov
xchg
repz
into
fst
pop
mov
push
(bad)
sar
lock
cmps
xchg
sub
pop
jae
loope
imul
mov
pop
(bad)
adc
mov
xor
adc
sbb
sbb
add
sahf
fisub
lahf
cmp
cwde
ins
lock
(bad)
in
jnp
call
aas
cld
std
pushw
push
ss
rcl
or
or
xlat
mov
stc
rcr
imul
rol
les
fild
and
fs
dec
jp
inc
jbe
mov
and
pop
jnp
fcomp
push
clc
mov
add
adc
test
mov
add
xchg
mov
scas
pop
rcr
push
mov
popa
dec
xor
popf
fadd
push
scas
inc
mov
or
lods
adc
sbb
mov
cmp
fisub
cwde
imul
std
mov
fdiv
lods
ret
mov
frstor
leave
xchg
xor
dec
jmp
outs
add
dec
ins
ret
rol
add
inc
out
jns
stos
dec
cwde
retf
mov
xchg
adc
sbb
xor
cli
shr
mov
mov
rcr
jge
cmc
fld
or
lahf
popf
cmp
sbb
add
jecxz
sbb
into
scas
popf
movs
xorps
adc
fs
dec
call
cmp
jae
mov
cmps
jno
xor
call
stc
jl
call
imul
jb
(bad)
mov
inc
js
xchg
add
sbb
hlt
jecxz
pop
ins
(bad)
jge
adc
adc
inc
dec
sub
dec
es
push
out
stos
aam
push
repnz
popf
mov
loop
mov
xchg
cmp
stos
mov
cmp
pop
sbb
xor
mov
xchg
and
fmul
popa
mov
sub
cmp
inc
std
mov
ins
mov
lods
ja
push
je
pop
xlat
movs
sub
xor
or
sub
and
sbb
icebp
stos
dec
mov
mov
out
out
add
outs
mov
in
fwait
pop
rep
ds
xor
imul
cmp
cdq
je
mov
or
dec
rol
loop
bound
inc
add
xor
dec
out
mov
xchg
pop
and
jno
or
xor
loop
or
sub
test
push
jbe
dec
repnz
cmps
imul
das
adc
xchg
mov
popf
xor
mov
rcr
dec
jle
int
loope
xor
xor
inc
inc
mov
bound
fisubr
or
hlt
mov
sub
or
sub
fistp
inc
int3
hlt
enter
dec
(bad)
std
dec
je
(bad)
add
dec
ins
push
std
push
daa
test
(bad)
or
xor
and
ins
gs
xor
lods
dec
jo
cmp
int3
mov
mov
inc
bound
add
jl
lods
outs
fnsave
sbb
adc
in
inc
aad
ja
rcl
xchg
jo
xchg
pop
int
cmps
dec
mov
test
(bad)
nop
adc
fneni(8087
ret
jp
adc
inc
inc
sub
ret
ror
inc
popf
mov
iret
test
jnp
pop
ret
push
mov
mov
jmp
test
sub
cmp
and
scas
nop
pop
xor
ret
inc
mov
pushf
ins
mov
stos
xchg
lods
cmps
add
popa
aad
add
inc
int
inc
or
xchg
push
xchg
outs
adc
iret
iret
inc
cmp
lds
arpl
push
hlt
mov
es
mov
pop
cmp
inc
and
dec
mov
jmp
jge
push
push
lahf
pop
int
push
xchg
mov
imul
adc
jb
ds
stos
pop
in
shl
mov
mov
dec
dec
dec
and
aaa
lds
adc
(bad)
je
lahf
mov
cmps
aam
movs
pop
xchg
ins
(bad)
add
scas
dec
sti
inc
pop
inc
xchg
clc
sbb
mov
inc
iret
jne
jns
mov
mov
cmp
aam
sub
adc
gs
enter
mov
outs
mov
pop
dec
test
push
shr
out
xchg
retf
imul
icebp
dec
xchg
push
pop
adc
out
pusha
lock
pop
inc
repz
call
cli
push
pop
ds
call
adc
xor
inc
adc
inc
inc
or
and
ins
dec
adc
in
mov
or
rep
jl
fst
fbstp
sub
aaa
add
xor
je
fidiv
inc
shl
dec
(bad)
jbe
adc
(bad)
loope
cmps
aaa
xor
adc
add
dec
js
pop
push
repnz
jo
out
gs
sub
int3
bound
nop
push
dec
sub
sub
sbb
daa
(bad)
pop
push
(bad)
mov
data16
mov
cmp
pusha
mov
test
jmp
cmp
les
sbb
(bad)
iret
mov
ds
add
test
mov
enter
mov
and
(bad)
rol
sbb
popf
arpl
cmps
fadd
daa
bound
add
cmp
(bad)
jle
push
cmp
dec
jecxz
jns
mov
gs
cdq
out
add
adc
scas
push
das
jae
es
push
mov
icebp
icebp
pop
rcr
(bad)
mul
inc
daa
sub
gs
cmp
inc
out
pop
cmp
pop
scas
mov
lds
aam
and
xor
cmp
sub
icebp
sti
mov
mov
movs
icebp
xchg
(bad)
mov
dec
mov
stos
call
push
or
and
mov
rcl
add
repz
call
xchg
sbb
inc
repnz
cdq
movs
xchg
cmp
outs
jecxz
ja
sbb
sbb
xor
scas
fistp
mov
and
sub
mov
jg
push
and
xor
ins
arpl
popf
movq
mov
stos
out
pop
and
cld
test
adc
ja
call
xchg
dec
and
loope
ins
cld
lods
mov
les
mov
adc
lahf
xchg
cmp
mov
fucom
ret
lea
mov
lea
sbb
inc
call
sub
inc
jp
and
xchg
cmps
or
out
xor
sti
inc
fstp
rol
xchg
cld
cmp
xchg
dec
push
fcmovnbe
sbb
add
lea
adc
jge
cmp
dec
jb
push
add
push
push
mov
pop
rol
in
mov
mov
adc
mov
xor
sbb
test
iret
jg
in
mov
add
cld
popf
mov
xchg
pop
dec
jmp
and
xchg
mov
push
mov
mov
and
xchg
sbb
mov
loop
dec
push
lods
and
popa
or
xor
dec
rol
mov
pavgw
leave
gs
add
fidivr
push
out
mov
imul
ja
shl
jnp
leave
or
dec
sub
out
ds
cmps
mov
lea
mov
xlat
inc
xor
sti
mov
cld
movs
pusha
int
mov
jne
adc
pop
jnp
in
xchg
push
sub
rol
bnd
push
fld
and
iret
outs
dec
dec
ds
push
sbb
sar
enter
push
std
cld
adc
or
ret
sub
out
int
sbb
sbb
xchg
or
div
cmps
(bad)
adc
mov
imul
lods
xor
sub
mov
push
xchg
mov
pop
loopne
ins
ret
mov
test
fadd
and
jmp
push
mov
mov
sub
mov
add
out
sub
lahf
inc
das
inc
ds
test
mov
mov
mov
jecxz
leave
jge
(bad)
pusha
lods
cmp
and
aad
mov
test
ret
dec
mov
inc
lods
adc
data16
(bad)
mov
sub
ret
rol
push
adc
xchg
cmps
xor
jmp
retf
pop
pop
jecxz
jge
jge
mov
ins
ss
mov
adc
xchg
cmp
outs
shr
dec
xchg
lods
lea
leave
push
popa
js
movs
mov
js
or
xchg
retf
cwde
mov
clc
icebp
xchg
xchg
jbe
sub
sub
and
fsubp
dec
dec
(bad)
les
mov
fnstcw
and
jmp
sub
inc
(bad)
mov
aaa
add
sub
mov
repz
and
xor
in
jo
adc
xor
pop
dec
mov
cmp
mov
ret
add
xchg
iret
dec
xor
inc
(bad)
xchg
jb
xchg
test
dec
retf
jns
sub
mov
pop
test
data16
mov
pop
pop
ins
add
add
hlt
xor
pop
adc
imul
daa
push
mov
stc
mov
dec
retf
out
fild
pop
loope
or
inc
sahf
mov
xor
ss
pop
mov
mov
sub
pop
jnp
aaa
shr
add
and
ins
ficomp
les
data16
jmp
fmul
inc
xor
(bad)
jl
jge
jnp
adc
push
xchg
ret
pop
push
loope
inc
dec
add
and
sub
mov
dec
mov
add
cmp
sub
repnz
xchg
das
add
inc
push
or
not
add
sar
sub
dec
enter
in
pop
mov
jbe
xchg
jae
lods
(bad)
xchg
ss
bound
std
fs
out
sbb
push
or
pop
sbb
in
icebp
sub
xchg
mov
pushf
xor
arpl
imul
mov
sbb
pop
mov
or
jne
push
mov
push
push
sub
adc
or
enter
icebp
stos
lea
inc
fmul
fadd
(bad)
popa
push
xor
or
(bad)
adc
xlat
mov
sbb
mov
mov
dec
div
imul
mov
mov
js
xor
push
sbb
or
pop
aaa
add
outs
sbb
test
addr16
pop
mov
aas
jmp
dec
repnz
test
scas
enter
xchg
call
mov
popa
fdivr
lock
push
daa
aam
call
mov
out
call
(bad)
mov
pusha
repz
and
push
or
lods
cdq
jnp
jne
cmc
mov
sbb
lods
adc
bound
test
mov
mov
(bad)
pop
leave
fucomip
mov
jmp
mov
fisttp
movs
movs
jno
sub
mov
bound
imul
test
adc
shl
mov
adc
mov
ins
das
sub
test
pop
bound
inc
not
icebp
mov
xchg
xchg
mov
push
aam
gs
dec
dec
xor
stos
inc
pusha
call
outs
loop
sbb
inc
mov
xchg
xor
in
or
push
adc
pop
nop
pop
add
pop
xor
add
push
fcom
out
popf
and
jp
cmp
mov
mov
mov
mov
js
xchg
jmp
and
mov
out
repz
fcmovu
mov
ss
or
add
clc
loope
dec
shl
ins
jno
cmp
nop
add
add
jb
jl
mul
sbb
xchg
mov
xor
scas
sbb
je
pop
cmp
and
cmp
mov
loop
pop
push
(bad)
arpl
inc
retf
xchg
adc
mov
lods
fmulp
loope
mov
shr
das
mov
repnz
pop
pop
add
sbb
push
cwde
xlat
pusha
add
add
mov
push
stos
es
or
fmul
adc
addr16
rcr
fdivr
mov
dec
xor
fist
ret
xlat
test
jb
push
dec
ins
int3
push
mov
in
cdq
mov
inc
mov
and
aam
mov
retf
int
enter
popa
and
jmp
int
ret
or
inc
arpl
xchg
mov
xor
in
jp
jg
aas
jmp
nop
mov
out
inc
adc
ficomp
or
shl
pop
inc
pushf
xchg
pop
push
jo
ss
dec
lahf
and
ja
jp
mov
jmp
jae
ss
dec
test
sub
inc
fsubr
mov
daa
pop
mov
mov
mov
jmp
xor
ins
xor
ficom
ja
cwde
cmps
mov
mov
push
jg
enter
retf
stc
xor
shr
and
not
xchg
pusha
out
lahf
jmp
ret
or
push
xchg
sbb
dec
adc
sar
mov
mov
out
mov
je
jno
mov
xchg
ss
mov
stos
ror
xchg
mov
imul
xor
or
sbb
mov
lock
mov
pop
into
pop
pusha
mov
dec
aas
or
in
div
movs
or
ja
std
dec
jmp
pop
mov
cmp
inc
push
gs
lods
mov
(bad)
lock
pusha
inc
imul
sub
jmp
ds
in
hlt
imul
pop
cmps
xchg
dec
cmp
loopne
hlt
test
lock
cmc
push
push
jp
inc
inc
push
mov
dec
adc
push
sub
inc
pop
adc
shl
test
mov
mov
pop
adc
test
sar
xlat
outs
lock
add
add
xchg
mov
repz
jg
addr16
jle
dec
loop
sub
adc
outs
mov
xchg
nop
pop
pop
addr16
push
outs
and
sbb
call
mov
sub
(bad)
fstp
int3
repnz
add
jecxz
fucom
sub
push
dec
cmp
loopne
std
lea
(bad)
sub
xor
sub
test
mov
mov
sub
push
repnz
jne
xor
std
adc
lock
jns
neg
push
fs
shl
js
and
dec
out
loope
fadd
mov
or
add
lea
mov
mov
inc
sub
mov
stos
xchg
fs
sub
jp
in
cmp
and
dec
ret
int
std
add
pop
dec
push
outs
inc
mov
sti
lea
and
lock
loopne
clc
std
fwait
and
xchg
mov
loop
call
or
loopne
je
ss
add
mov
movs
out
push
rcr
lea
jo
sub
cli
pop
in
sub
sbb
and
aas
cmp
sbb
push
push
sbb
sub
shl
push
retf
retf
jo
push
fsub
or
in
xor
data16
dec
pop
or
add
fistp
test
cdq
adc
gs
jg
jmp
retf
lahf
or
jae
or
adc
or
in
out
fcmovnb
sbb
lea
and
jl
popf
cmp
pop
push
sbb
cmp
movs
sub
stc
in
push
gs
nop
push
(bad)
mov
cmp
pop
mov
mov
dec
aas
pusha
test
sbb
adc
dec
dec
cld
xlat
aaa
sub
mov
out
int3
movs
aaa
fstp
add
cmp
jb
inc
jmp
cmp
dec
mov
mov
lea
sub
sbb
mov
stos
hlt
or
adc
test
sub
cmp
test
imul
aam
out
int
xor
call
mov
mov
add
jne
pusha
nop
inc
jo
int3
xor
dec
push
sbb
lahf
and
adc
cli
dec
dec
js
popf
inc
add
bound
ins
mov
add
inc
stos
in
jb
mov
hlt
add
call
and
lods
pop
pop
daa
loope
push
or
xor
push
pop
mov
fiadd
xor
xor
mov
addr16
push
sub
cmp
cmps
mov
push
fs
cmp
cmp
add
fisttp
add
add
inc
sbb
mov
pop
add
jbe
pop
adc
mov
aas
push
lahf
lds
es
fld
mov
movs
(bad)
nop
push
cmp
(bad)
in
dec
jg
inc
and
or
lods
and
and
xchg
dec
xchg
dec
sub
ja
push
inc
add
ror
jp
fcmove
and
cdq
jge
retf
adc
and
ins
ret
das
mov
mov
add
ficom
icebp
out
dec
mov
push
fcom
xchg
and
push
jmp
or
mov
add
mov
(bad)
loope
pop
scas
lock
jb
xor
movs
sbb
jo
xchg
(bad)
femms
stos
repz
mov
lods
fstp
in
retf
cli
cld
lahf
sbb
int
ror
into
sub
ss
(bad)
cmp
or
add
ins
sbb
sbb
mov
ror
outs
xchg
dec
mov
out
call
mov
cdq
adc
push
push
xchg
scas
or
push
dec
jmp
je
(bad)
adc
jns
push
in
push
or
pop
dec
jg
(bad)
not
rol
scas
daa
adc
xor
jmp
dec
stc
pop
sub
sub
push
xor
or
rol
ror
lods
mov
push
dec
mov
int3
lods
cmp
lock
add
je
sbb
add
pop
mov
pop
je
xchg
adc
dec
jmp
ds
mov
add
sbb
ficom
dec
cmp
push
cmp
cmc
repz
in
(bad)
(bad)
pop
pop
push
fisttp
ret
add
std
out
and
ss
clc
fist
pop
(bad)
pop
retf
xchg
pushf
mov
(bad)
mov
mov
clc
dec
pop
add
xchg
xor
fdivr
cmps
iret
jp
sbb
loop
adc
and
call
fild
xchg
push
(bad)
push
sbb
sub
xor
inc
push
mov
(bad)
xor
xor
cmp
pop
xor
jne
fldcw
imul
outs
lods
push
adc
xchg
retf
lock
lea
fwait
mov
std
loope
or
jge
jg
div
lahf
popa
sub
arpl
enter
cmp
sar
mov
lock
xchg
loop
mov
mov
sar
(bad)
sub
inc
jb
stos
push
jg
daa
js
(bad)
pop
jmp
std
nop
addr16
scas
rcr
pop
hlt
nop
sbb
pushf
and
imul
rcr
xchg
adc
jb
movs
mov
inc
int3
xor
into
cmp
loopne
test
retf
jne
cmps
je
xchg
xlat
jns
out
mov
sbb
sbb
jecxz
(bad)
mov
add
lea
add
and
inc
out
(bad)
inc
sub
jmp
inc
setl
push
add
pop
mov
mov
outs
push
cwde
and
ins
dec
xchg
popa
lods
movs
dec
(bad)
fldz
sbb
(bad)
xchg
mov
retf
retf
cmp
or
icebp
pop
mov
imul
inc
je
stc
mov
pushf
loope
xor
pop
push
mov
adc
lock
lahf
sub
seto
retf
mov
scas
leave
mov
movs
cmp
xchg
push
mov
and
pop
dec
ret
pushf
mov
pop
inc
idiv
pop
(bad)
ins
push
in
add
sub
cs
mov
mov
fdivr
and
push
leave
call
push
sub
stos
scas
and
enter
stos
dec
lea
pop
in
push
stos
lock
fisttp
das
movs
sbb
outs
loope
test
popa
and
add
pop
cmp
out
mov
(bad)
(bad)
popa
xchg
sti
enter
pop
test
dec
out
sbb
pop
imul
cmp
shr
pop
pop
(bad)
xor
inc
pop
adc
adc
retf
push
push
pop
dec
mov
imul
add
dec
and
and
jp
sbb
sub
popf
(bad)
cli
dec
repz
mov
dec
pop
(bad)
daa
add
adc
pavgb
and
popa
mov
aaa
mov
xlat
jb
daa
test
sbb
ror
push
sub
inc
jl
pop
call
dec
fistp
xchg
sub
xchg
pop
movs
rol
ja
or
fidivr
fild
adc
in
sub
movs
rcr
cmp
hlt
iret
inc
mov
xor
shl
lea
and
sbb
in
enter
sub
jns
cmp
test
in
in
rcr
je
shl
and
outs
xor
cmc
adc
mov
aaa
mov
mov
rol
outs
stos
ficomp
push
mov
sub
or
and
call
adc
dec
mov
repnz
pop
xor
cmps
out
fiadd
movs
movs
lea
out
ret
lods
inc
sub
push
push
cmp
out
(bad)
jmp
xor
cwde
fnsave
leave
dec
mov
arpl
push
xor
adc
cmp
lods
nop
(bad)
and
in
test
loopne
jo
mov
mov
cmp
fisub
scas
mov
jne
pop
inc
std
mov
ss
or
xchg
cmp
jae
cld
mov
xchg
(bad)
retf
sub
cld
and
lods
xor
add
ret
jmp
movs
push
sub
fwait
std
mov
or
xchg
sti
sbb
or
mov
cmp
out
and
addr16
fcomp
sti
jbe
data16
movs
sbb
aaa
enter
into
push
retf
movs
mov
cli
add
pushf
jno
pop
shl
add
push
push
mov
mov
push
lods
iret
sbb
das
out
cs
push
jg
lds
in
int3
dec
mov
ficomp
iret
dec
or
and
or
repnz
or
(bad)
es
imul
and
fisubr
call
fnstsw
ins
mov
mov
cmp
fstp
js
push
sbb
int3
les
shl
out
or
mov
scas
mov
inc
outs
loop
lods
pop
xchg
sub
sar
test
out
sub
mov
fsub
mov
or
ins
push
or
sbb
call
jae
fs
leave
or
inc
jmp
sahf
daa
mov
sbb
call
mov
inc
pop
jo
jge
mov
push
sti
hlt
leave
xchg
sub
fiadd
repnz
sbb
lahf
add
(bad)
pop
shl
sub
pop
jmp
sub
cli
ficom
(bad)
push
ror
leave
push
xchg
and
push
xchg
and
loopne
and
popa
push
xlat
leave
pushf
stc
mov
sbb
mov
fs
sbb
mov
shr
not
std
mov
loop
call
sub
jmp
frstor
(bad)
fldcw
fmul
push
pop
(bad)
xor
adc
cmc
mov
and
lods
push
in
pop
test
mov
inc
das
data16
imul
nop
cmp
call
inc
xchg
or
adc
js
mov
sub
adc
pusha
push
test
fldenv
mov
add
cmp
cli
fisub
mov
jb
(bad)
push
aam
adc
ja
mov
mov
fadd
sub
rcl
imul
add
add
and
(bad)
jmp
cdq
js
mov
and
mov
pop
fsub
mov
lea
jecxz
pushf
cmp
addr16
fcos
ficomp
call
dec
test
jge
ds
loop
fwait
sbb
cli
mov
rol
jae
popa
inc
cmp
mov
adc
mov
mov
pop
mov
xor
test
xor
sbb
xor
inc
push
mov
sub
loopne
retf
pop
idiv
fistp
mov
imul
ja
push
or
push
ret
jg
jbe
pusha
dec
add
scas
mov
outs
cmp
dec
mov
sub
mov
in
cmps
adc
ins
mov
adc
outs
add
rcl
xor
sub
lds
js
aas
mov
and
xor
cwde
rcl
outs
nop
dec
push
sub
je
jle
data16
jnp
lods
out
xchg
cld
in
cmps
repz
inc
add
repz
push
loop
test
sbb
xor
push
jnp
scas
mov
mov
fwait
pop
jo
mov
je
lea
into
adc
pushw
jmp
cli
cwde
std
push
mov
jno
xlat
push
inc
aaa
and
fcom
mov
imul
inc
rol
inc
add
push
les
mov
daa
fdiv
and
(bad)
mov
js
mov
aaa
paddusb
inc
xor
xor
aas
test
test
mov
stos
nop
dec
push
pop
ins
lods
mov
movs
aaa
pop
(bad)
call
sti
sbb
call
or
mov
dec
shl
cmp
sub
pop
push
pop
jns
rcr
popf
xchg
pop
shl
xchg
stos
sub
sbb
jbe
jle
mov
out
add
imul
outs
in
(bad)
adc
(bad)
sub
xor
jle
test
and
and
gs
push
inc
leave
mov
xchg
repz
sahf
pop
(bad)
clc
test
mov
(bad)
and
loop
mov
or
jb
or
push
popa
inc
cmp
out
inc
popa
cs
ss
add
rcr
jnp
retf
mov
jp
addr16
scas
jge
sti
jecxz
push
fisub
sub
hlt
neg
mov
add
inc
dec
(bad)
ficom
jg
inc
es
xor
fs
out
pop
jmp
cmp
pop
and
mov
into
pop
(bad)
cmp
sub
or
sub
lods
sub
repz
mov
adc
pop
xor
aas
add
test
loopne
mov
test
cdq
loopne
push
fild
ret
(bad)
mov
add
xlat
cmp
dec
leave
mov
sub
dec
cmp
xchg
xchg
or
mov
out
pop
inc
ret
outs
out
(bad)
cmp
nop
dec
push
sbb
jl
inc
test
dec
sub
mov
fst
push
gs
mov
xchg
inc
mov
mov
sahf
mov
in
mov
jb
mov
movs
test
xor
jg
adc
into
sbb
dec
mov
loop
or
jo
sub
xchg
addr16
outs
lods
and
xchg
push
rol
addr16
mov
ret
pop
push
es
inc
add
mov
call
psrlq
jb
or
mov
mov
fnstcw
xchg
sub
cli
sub
sub
xchg
repnz
mov
fs
loope
pop
mov
add
or
test
or
cmps
in
into
push
dec
pop
sti
(bad)
fucom
in
push
or
push
or
movs
in
loope
adc
cmps
aas
fiadd
mov
push
and
addr16
push
cs
mov
ja
mov
xor
add
aad
push
mov
not
add
xchg
loop
sub
imul
in
mov
pop
cmp
call
or
pop
and
ins
jmp
inc
std
out
imul
adc
xchg
cmp
test
and
shl
inc
lock
sbb
rol
inc
adc
inc
js
clc
ds
mov
jno
inc
out
dec
adc
addr16
cwde
mov
out
pushf
xchg
repnz
aas
sar
pop
sti
mov
inc
or
add
xor
fldcw
jne
cmc
xor
les
pop
idiv
cmp
mov
cmp
and
mov
cmp
xchg
mul
jecxz
pop
xchg
mov
xchg
mov
nop
pop
push
cmp
mov
jp
das
dec
jmp
ins
push
test
xor
icebp
mov
add
stos
hlt
mov
fst
inc
xchg
cs
sbb
mov
jmp
inc
xor
pusha
pop
dec
adc
sub
and
jg
mov
pushf
mov
inc
cmp
fwait
ds
rol
iret
fisttp
sti
(bad)
ins
pop
mov
dec
push
ins
mov
pop
jbe
or
and
lods
repnz
cmp
aad
add
es
ins
mov
loopne
lods
pop
mov
loope
inc
mov
xchg
jae
inc
(bad)
mov
push
(bad)
mov
ins
inc
jecxz
and
mov
test
sub
lods
cs
lea
push
sbb
shr
fild
cmp
adc
imul
fwait
push
test
cmp
loopne
iret
xchg
mov
imul
xchg
das
sar
jbe
mov
out
or
mov
or
push
mov
cmps
adc
cld
stc
aam
mov
rcr
mov
cmp
nop
or
arpl
dec
test
cs
xor
pop
out
test
ja
cmp
sbb
imul
add
cmps
add
fst
lea
pop
movs
inc
pushf
cwde
cmp
mov
ror
mov
dec
mov
inc
iret
cmps
sub
dec
ret
dec
wbinvd
jge
jecxz
shl
xchg
out
mov
sti
and
and
xchg
push
outs
aam
aam
fisub
cld
xor
cmps
retf
xchg
xchg
cmp
pop
(bad)
push
daa
jg
aas
inc
mov
cmp
popa
push
jae
xor
pop
mov
push
inc
fcmovnb
cmp
dec
outs
inc
xor
jl
jmp
mov
clc
mov
int3
pop
sbb
xlat
(bad)
add
scas
ret
mov
push
iret
xchg
pusha
xlat
das
push
test
mov
(bad)
pop
js
and
ror
aam
cmp
lock
enter
jno
arpl
jp
test
mov
pop
inc
lods
jp
rol
into
mov
inc
test
add
xchg
(bad)
pop
ret
fstp
pop
sahf
ret
inc
cs
and
inc
mov
cmp
mov
mov
rol
cmp
repz
push
dec
loopne
fdivp
mov
fistp
or
dec
aam
ins
pop
sub
or
xor
xchg
push
or
xchg
repz
leave
retf
xlat
std
sbb
sbb
int
mov
in
lock
addr16
xchg
rcr
sub
push
adc
retf
imul
xor
pop
xchg
jl
sbb
mov
retf
aad
or
jge
cwde
int3
in
xchg
sbb
push
cmp
sub
inc
movaps
jae
pop
clc
inc
cmovg
jecxz
es
popa
movs
jmp
mov
push
imul
fs
outs
pop
dec
cmp
sub
(bad)
stc
test
pop
test
das
xor
push
stos
test
das
jmp
adc
(bad)
aas
mov
loop
pop
cld
cmp
out
and
data16
xchg
push
jnp
mov
aam
in
imul
retf
js
cld
jge
mov
ficomp
aad
add
ror
cmc
data16
lods
mov
ror
scas
sbb
loop
in
lock
cmps
ins
and
std
adc
in
stos
fs
arpl
jecxz
imul
mov
xchg
cmp
dec
js
xchg
mov
adc
mov
pop
std
ret
fld
(bad)
or
push
adc
jmp
fsub
je
sub
retf
or
daa
in
cmp
bound
out
call
(bad)
sub
mov
in
(bad)
push
aam
icebp
mov
es
jne
cmp
js
dec
aam
jmp
or
xor
adc
outs
inc
pop
mov
push
sub
mov
pop
add
pop
adc
xor
inc
daa
shr
gs
add
lods
jl
jbe
mov
mov
cmp
sub
xchg
data16
mov
sub
iret
loop
xchg
lea
gs
(bad)
push
je
sbb
cmp
xchg
jp
ja
lds
ret
div
ins
dec
mov
and
add
inc
cmps
inc
mov
in
je
cmp
call
rol
and
and
sbb
lods
adc
mov
pop
(bad)
(bad)
sub
inc
dec
or
xchg
call
fistp
retf
or
push
sub
mov
stos
in
mov
int3
sbb
mov
imul
mov
jge
add
aaa
xor
pop
push
popa
inc
mov
cmp
push
repnz
jecxz
out
ffreep
jnp
test
hlt
xor
inc
sub
add
cmp
or
cmp
add
leave
loope
stos
in
jle
jmp
test
mov
loop
add
(bad)
sbb
mov
loope
(bad)
cld
push
mov
add
leave
dec
add
mov
dec
out
pop
stc
fistp
inc
push
xchg
icebp
imul
iret
pop
addr16
retf
adc
mov
je
jae
dec
add
imul
stc
icebp
inc
popa
jns
ja
mov
(bad)
aad
(bad)
aad
push
sahf
mov
jnp
inc
jp
sti
stc
jg
gs
fsubr
xchg
clc
mov
icebp
clc
fidiv
sbb
clc
dec
push
mov
rdmsr
mov
pop
jae
pop
dec
inc
xor
add
push
ss
push
inc
jne
mov
jb
push
pusha
ret
loopne
test
dec
pop
stos
nop
fidiv
(bad)
and
iret
ret
or
mov
xchg
mov
pop
mov
stos
mov
setb
push
lds
xchg
cmp
jge
and
mov
in
pusha
sub
stos
movs
mov
add
repnz
aam
call
sub
and
fiadd
loopne
dec
int
adc
mov
outs
adc
mov
sub
mov
pop
xor
les
ds
or
arpl
cmp
adc
movs
rcr
aam
jne
outs
jns
adc
lock
xchg
ins
mov
jns
add
aam
jae
fwait
sub
inc
test
push
lahf
dec
iret
fdivrp
sbb
dec
and
and
xchg
cmps
jl
ja
ss
ret
shl
(bad)
int
out
dec
(bad)
gs
bnd
loopne
hlt
rcr
cmp
or
mov
mov
out
shr
jecxz
fbstp
dec
stos
push
ret
sbb
pop
imul
leave
or
ds
(bad)
aam
xchg
inc
or
push
call
std
jmp
inc
add
xor
dec
jg
xchg
(bad)
mov
fmul
pop
inc
aad
push
cmps
jecxz
cmp
pop
(bad)
ror
js
loopne
dec
push
push
sbb
adc
mov
data16
xor
cmp
lods
xlat
retf
dec
jae
push
jno
and
jae
xor
loopne
cmp
mov
out
dec
rcr
icebp
out
cmp
xchg
jl
movs
sub
or
cmp
mov
daa
popa
mov
call
pop
imul
icebp
pop
in
or
mov
fmul
movs
ficom
cs
jl
mov
xor
mov
imul
loope
pop
adc
aad
sub
add
shl
xor
lods
stos
test
scas
shl
rcl
inc
arpl
sbb
sar
jmp
jnp
jg
mov
pop
and
xor
aas
adc
scas
and
cdq
push
addr16
popa
xor
cmp
pop
shr
xchg
cmps
loope
cdq
loopne
xor
stc
pusha
mov
xchg
mov
neg
cmp
int
pop
mov
loope
cmp
imul
int
jo
fwait
add
enter
cdq
or
or
and
or
sbb
enter
push
inc
adc
and
repnz
and
mov
pushf
cmp
pop
ss
std
adc
push
push
inc
inc
inc
cmp
fisubr
push
fcom
pop
sbb
pop
aaa
scas
dec
dec
in
test
mov
sub
mov
add
pushf
nop
je
enter
pop
add
ins
pop
test
jmp
ins
dec
pop
ss
jne
cli
mov
daa
lea
and
shr
imul
push
(bad)
shl
dec
sbb
leave
cmp
ja
fbstp
ins
mov
repz
sti
mov
xor
test
mov
inc
jnp
iret
test
jp
mov
rcr
mov
push
mov
mov
add
sbb
dec
ffreep
js
dec
bound
test
arpl
in
fnstsw
add
adc
inc
call
stos
cmp
sub
add
in
pop
xchg
clc
in
push
jl
int
add
push
mov
std
fnstenv
dec
xchg
pop
mov
mov
dec
in
jbe
sbb
dec
push
dec
jmp
std
push
inc
int3
shl
push
outs
in
cmps
cdq
outs
inc
bound
xchg
inc
push
fwait
jno
mov
dec
xlat
sbb
dec
cwde
test
dec
adc
cmps
lods
jbe
sbb
or
add
pop
sbb
mov
push
fucom
shl
retf
add
into
dec
mov
xchg
imul
shl
xor
jae
cmp
leave
das
pop
lods
push
add
sbb
pop
pushw
hlt
mov
mov
mov
es
stc
add
jg
and
je
add
or
mov
mov
mov
push
push
mov
cmp
mov
test
jl
pusha
in
mov
icebp
push
es
lahf
jns
ret
jmp
cmp
jns
fsub
int
add
xchg
dec
mov
cli
ds
and
int3
(bad)
std
xlat
push
sbb
psllq
outs
or
(bad)
jmp
jecxz
mov
test
pop
mov
cld
rol
(bad)
and
mov
and
mov
pop
fucomp
clc
in
xchg
ss
mov
sub
sbb
repz
into
sar
jb
fistp
mov
outs
call
cmp
dec
sbb
push
or
pop
xor
cdq
push
push
cmp
mov
push
lock
jns
xchg
call
adc
sub
adc
cwde
outs
mov
out
cmp
jbe
pop
mov
rcl
lock
add
adc
mov
dec
push
add
sbb
xchg
and
dec
dec
inc
xor
cmp
loope
push
sbb
fistp
add
jmp
seta
in
pop
dec
adc
std
jns
lods
push
retf
movs
fimul
xor
xor
xor
add
sub
shr
mov
xor
pop
jae
pushf
rcr
sbb
mov
repz
inc
test
adc
js
jp
sahf
push
mov
cwde
cmp
sbb
aad
test
enter
test
pushf
and
outs
push
jne
push
xchg
and
jl
test
ss
xor
mov
scas
or
stos
pop
retf
pop
mov
inc
mov
retf
cmp
push
clc
sahf
mov
or
ror
ds
bound
mov
mov
sub
into
xchg
xchg
icebp
cld
popa
test
pushf
xchg
xchg
cmp
fucom
sbb
and
sbb
mov
stc
retf
sbb
mov
jp
adc
mov
cmp
ds
inc
xchg
in
fwait
enter
mov
inc
pop
cmps
jo
mov
jmp
xor
pop
je
icebp
mov
jno
sbb
scas
fld
mov
add
in
mov
sbb
xlat
xor
dec
loopne
pop
jne
cmps
cmp
ss
jl
mov
pop
pusha
push
jb
dec
sahf
mov
fst
pop
gs
xor
hlt
or
jmp
and
sbb
out
add
pop
add
imul
loope
sub
pop
jmp
or
scas
fidivr
out
fisubr
jge
retf
pop
mov
xor
jnp
sub
dec
aam
pop
fwait
cmp
shl
xchg
xchg
fldenv
popf
popf
inc
mov
daa
cmp
mov
iret
inc
push
lahf
pop
inc
jle
imul
lock
add
out
xor
cmp
movs
adc
dec
pop
inc
bound
cld
sbb
adc
inc
fucom
and
loop
jae
xor
add
repnz
lds
add
mov
dec
cwde
or
adc
xchg
fs
hlt
pop
inc
mov
mov
(bad)
or
out
cmp
test
and
mov
jg
retf
sbb
mov
imul
idiv
mov
mov
and
sbb
fidiv
pop
fdivr
mov
outs
mov
jg
fdiv
call
or
jnp
dec
sub
mov
je
xor
sbb
jg
jecxz
cwde
stc
jmp
mov
out
inc
dec
pop
xor
cmps
jb
dec
push
sbb
es
mov
out
js
cmp
cli
pop
pop
xchg
push
cmp
or
pop
pushf
aad
adc
clc
sbb
imul
mov
loopne
mov
int3
leave
jmp
daa
neg
pop
and
and
jle
sbb
dec
xchg
cmp
das
or
mov
xchg
repz
in
push
cmp
jl
in
cmp
cmps
jnp
rol
sti
popa
mov
push
and
mov
scas
out
jne
push
ins
lahf
mov
aaa
das
xor
(bad)
and
repz
cdq
or
pop
fwait
xor
xchg
sub
xchg
jno
cmp
loop
cdq
loop
cmp
test
rcl
sub
js
mov
std
cdq
lea
loopne
out
pop
add
sahf
cmp
add
or
pop
std
stos
cmps
cmps
cdq
lock
push
add
mov
mov
xor
jb
sub
rcl
xchg
in
jns
loope
push
stos
xor
cmps
dec
and
stos
(bad)
enter
arpl
mov
cmp
and
cmp
adc
push
dec
push
mov
add
jp
mov
sbb
xor
and
test
push
dec
jmp
mov
mov
ja
aam
iret
push
xchg
sub
or
cmp
cmp
xchg
out
imul
jmp
es
fdivr
and
dec
fadd
sub
adc
shl
fadd
shr
out
cdq
js
rep
and
lahf
loope
ins
gs
adc
mov
adc
loope
stos
ret
imul
cmp
aad
cdq
ficom
sub
sbb
les
xchg
scas
rcr
out
sti
inc
xchg
test
das
mov
bound
dec
pop
(bad)
or
adc
add
test
cmp
shr
arpl
call
cmp
sub
dec
sti
inc
sbb
cmp
shr
dec
jne
mov
pop
and
imul
dec
sbb
hlt
xchg
jecxz
push
inc
inc
xchg
mov
jns
and
add
(bad)
call
push
cs
and
es
(bad)
cmp
mov
lds
outs
mov
jle
xor
fiadd
(bad)
aad
sar
add
and
dec
(bad)
cli
dec
or
jecxz
xchg
mov
inc
aam
fs
scas
aad
add
sub
mov
mov
xchg
jmp
sbb
and
cs
cwde
sub
test
jp
add
cs
add
pop
scas
push
call
jnp
nop
and
sar
dec
inc
imul
xor
or
fs
jmp
mov
mov
loope
sbb
stos
arpl
cmp
add
cmps
out
fsubr
sbb
sub
sub
mov
paddd
mov
shl
out
ret
xor
dec
in
xchg
retf
fisubr
scas
xor
aad
dec
and
mov
xor
push
xlat
aaa
dec
hlt
pop
push
pop
mov
lods
ins
xchg
test
jmp
mov
ror
add
fldenv
test
daa
(bad)
mov
icebp
push
pop
jl
or
div
cmp
push
(bad)
add
dec
mov
ja
fsub
push
hlt
(bad)
fs
shl
mov
push
push
xlat
sub
jmp
aas
and
pop
out
iret
bound
lds
popa
or
sahf
loope
adc
or
loopne
dec
cmp
jb
jns
push
retf
scas
ds
jnp
sub
sbb
(bad)
lods
in
jo
mov
and
clc
nop
sbb
mov
(bad)
or
sahf
adc
pop
sub
lahf
ins
(bad)
xchg
retf
mov
or
dec
add
stos
sti
adc
mov
icebp
data16
and
or
xlat
xor
pop
jmp
push
(bad)
pop
(bad)
hlt
pop
xor
lods
and
stos
xchg
jmp
pop
push
rcr
inc
clc
jmp
add
arpl
mov
in
jae
xor
push
fisttp
pop
mov
add
rcr
loopne
add
lds
or
aam
push
(bad)
in
scas
mov
stos
cmp
push
movs
push
mov
not
sbb
sub
jae
imul
push
push
adc
cld
icebp
popa
lds
xchg
cld
xlat
dec
movs
xchg
fcomp
or
sbb
std
imul
fsub
add
aad
cmc
lock
repnz
xchg
inc
fisub
aaa
gs
aaa
mov
ficom
(bad)
and
xor
or
fadd
mov
mov
pop
push
pop
jns
fidivr
mov
scas
sub
push
mov
(bad)
aam
or
in
and
(bad)
clc
jbe
adc
call
stc
pop
and
and
es
cwde
adc
mov
adc
adc
push
(bad)
jle
fidivr
in
popf
int
add
shr
mov
fdiv
(bad)
pop
mov
xchg
mov
mov
fiadd
mov
jne
mov
cvtps2pd
xchg
neg
xor
xlat
aad
jp
mov
in
fwait
mov
(bad)
cmp
dec
sub
hlt
test
add
dec
inc
rol
pop
cmps
xor
inc
push
inc
xchg
xor
into
stos
mov
fld
add
mov
jge
inc
neg
adc
in
out
jle
and
lods
sbb
ss
xchg
add
jmp
popa
jmp
sti
(bad)
or
imul
mov
sub
inc
xchg
pop
jae
sti
cld
out
fs
cmc
out
add
sbb
mov
outs
and
ds
push
pop
jae
add
clc
xchg
push
outs
(bad)
fiadd
ds
cmp
jne
pop
(bad)
adc
mov
mov
dec
pop
mov
and
mov
inc
dec
retf
repz
xchg
pop
mov
dec
lods
dec
mov
jbe
sub
(bad)
arpl
mov
(bad)
xchg
jne
and
mov
popf
mov
push
sbb
push
mov
cdq
jbe
fidivr
mov
adc
lea
imul
sar
sti
xor
rcl
das
test
adc
popf
fldcw
lock
imul
xchg
push
ficomp
jno
jg
mov
aam
mov
xchg
stos
out
xchg
fdivp
cs
push
xchg
push
add
push
stos
xchg
sti
jg
popa
adc
sbb
movs
xor
push
loop
jne
daa
pop
cmp
in
fcomp
pop
not
jmp
mov
cdq
fstp
push
push
mov
adc
or
pop
int3
lds
mov
stc
pop
push
leave
and
and
pusha
mov
and
xchg
inc
sub
push
xchg
outs
jg
ins
xchg
inc
mov
into
lds
adc
daa
push
sub
shr
je
cdq
ss
(bad)
mov
sti
add
in
mov
(bad)
mov
dec
in
jl
outs
mov
cwde
imul
push
popf
mov
mov
mov
cmp
jge
rol
inc
outs
xchg
inc
(bad)
add
das
xor
sbb
fcomp
fwait
icebp
std
pop
xchg
shr
cwde
add
je
dec
je
xchg
ror
popa
test
js
mov
cmp
leave
lods
inc
stos
cmps
(bad)
xchg
mov
xchg
add
inc
add
and
dec
push
jg
sbb
retf
(bad)
mov
(bad)
xchg
and
stc
push
sbb
scas
mov
pusha
fwait
xchg
repnz
rol
in
push
fldcw
push
addr16
xchg
lea
ret
lahf
pushf
pop
inc
clc
mov
push
pop
or
sub
sbb
mov
data16
or
inc
mov
aaa
sub
add
ror
(bad)
cli
pop
cmp
int3
inc
xchg
into
xor
jnp
pop
jmp
cmps
hlt
addr16
adc
bound
(bad)
mov
add
lds
add
mov
ja
shl
ins
jl
cmp
(bad)
mov
ret
push
inc
pop
cmc
sub
add
adc
mov
outs
fld
outs
clc
cmps
and
jae
inc
mov
jo
sub
push
or
outs
inc
rcr
call
pop
or
jecxz
mov
mov
push
mov
sbb
pop
xor
shl
(bad)
in
lods
(bad)
lods
test
add
data16
xor
and
mov
and
push
jmp
or
fst
inc
pop
mov
cld
cmp
sbb
xor
fidivr
sbb
mov
scas
(bad)
or
jns
xor
push
bound
(bad)
sub
ja
popa
js
pop
(bad)
push
mov
jns
sbb
scas
in
iret
cmp
(bad)
stos
inc
loope
fldenv
movs
stos
(bad)
fadd
loop
ins
mov
xchg
xor
dec
call
and
test
inc
scas
xor
xchg
in
imul
cmp
nop
les
sar
pushf
ins
add
in
fdiv
xchg
xchg
and
mov
in
dec
fst
outs
mov
jp
push
pop
in
or
inc
adc
or
pop
xor
lods
std
push
and
test
jmp
xchg
push
repz
icebp
aas
pop
(bad)
scas
(bad)
adc
sbb
push
and
dec
or
and
fs
scas
hlt
jle
mov
mov
inc
repnz
les
fild
or
mov
pop
test
pop
mov
retf
fwait
dec
shl
mov
loope
adc
cmp
daa
dec
es
or
ds
test
icebp
mov
(bad)
mov
mov
gs
xor
cmp
or
fld1
outs
aaa
jns
arpl
xchg
cmp
popf
js
sbb
dec
push
imul
adc
xchg
retf
or
cli
les
mov
loopne
repnz
adc
imul
cdq
cld
ficomp
xchg
cwde
xchg
repz
or
mov
and
out
cmps
frstor
dec
mov
dec
mov
cmp
popf
mov
cmp
stos
fdivr
xor
and
cdq
mov
add
or
fbld
test
jmp
cmps
mov
into
clc
jle
push
iret
je
cmp
mov
ret
mov
sbb
sbb
mov
add
aad
mov
test
enter
and
(bad)
retf
push
pop
movs
in
shl
cmp
adc
je
retf
and
mov
scas
and
inc
call
jo
dec
mov
push
xchg
cmp
sub
and
push
ds
aad
mov
xchg
rcl
adc
mov
dec
adc
adc
push
dec
ins
xchg
ds
in
jl
inc
cmp
aam
xor
xchg
leave
add
push
popf
(bad)
pusha
xor
fwait
jb
pop
pop
mov
jge
push
enter
dec
mov
(bad)
mov
mov
shl
pop
lods
mov
daa
pop
es
sar
jae
call
push
cli
xor
sbb
xor
or
neg
add
int
pushf
into
or
es
xor
pop
mov
jae
lock
and
or
callw
js
clc
push
adc
mul
fwait
and
pop
shr
mov
fucomip
pop
and
mov
dec
lods
mov
les
gs
adc
xor
popf
sub
push
das
cmps
ret
fst
mov
xchg
adc
inc
or
leave
stc
jmp
jecxz
dec
pop
push
and
test
and
data16
jnp
inc
cs
fs
outs
fadd
in
loop
mov
out
jne
ins
xchg
dec
les
je
movs
push
sbb
cli
pop
in
xchg
repz
pop
xchg
inc
push
and
fadd
lahf
cmp
sub
out
xchg
inc
add
add
add
jg
mov
jnp
call
sti
retf
pop
and
adc
scas
imul
inc
and
popa
loopne
jecxz
fild
nop
dec
push
imul
mov
out
retf
lahf
jecxz
std
mov
or
cs
jbe
out
(bad)
into
cmp
jmp
xor
movs
aad
push
mov
add
dec
inc
push
stos
mov
mov
cmp
pusha
jo
add
xor
push
in
pop
pusha
retf
xchg
clc
mov
pop
push
or
jle
jmp
(bad)
mov
push
pop
inc
loope
mov
outs
mov
xor
mov
fsub
pop
lahf
rcr
(bad)
es
xchg
into
les
and
cmp
pop
mov
dec
dec
cmps
cmps
shr
mov
out
test
cmp
test
in
push
push
aaa
cmp
sbb
mov
or
ins
dec
cld
push
sbb
xchg
lea
(bad)
call
add
lods
mov
lods
adc
push
mov
mov
hlt
cmp
daa
shl
pop
sbb
addr16
mov
ins
movs
sbb
in
sti
xor
je
loop
gs
or
shl
out
int
int3
into
mov
retf
es
push
ja
xchg
xor
jle
sbb
cld
popa
btr
data16
(bad)
mov
push
pop
in
pushf
mov
repnz
mov
js
pop
rcl
cwde
add
mov
or
into
call
sub
(bad)
popa
pop
mov
int3
xor
inc
call
and
mov
ret
pop
ror
xchg
jo
push
sub
fsubr
mov
dec
cmp
inc
loope
or
test
push
mov
imul
xchg
sbb
sbb
jg
mov
sbb
xchg
or
jns
mov
xor
push
test
popa
mov
dec
in
(bad)
arpl
hlt
mov
in
mov
mov
sahf
sahf
int3
mov
inc
sti
faddp
sub
in
sar
sbb
push
sub
or
loopne
lods
pop
mov
push
or
cmp
(bad)
jne
pop
dec
pusha
cmp
pushf
cmps
stos
cmp
repnz
or
rcl
fidivr
add
inc
or
in
mov
xchg
cld
retf
dec
pop
push
lods
inc
jl
sti
(bad)
xchg
jbe
cdq
sub
pop
inc
dec
mov
leave
sub
adc
cmp
xchg
push
jo
jle
lea
jo
mov
gs
mov
xchg
sbb
add
rcr
ins
add
je
test
and
mov
into
push
xlat
scas
push
(bad)
lahf
mov
gs
mov
(bad)
mov
out
addr16
mov
ja
and
cli
push
in
test
xchg
ficomp
dec
int
fcomp
dec
add
pop
cli
lahf
mov
inc
jns
cmp
test
push
ret
xor
inc
xchg
int
(bad)
and
mov
cmp
dec
loope
push
mov
out
test
mov
inc
ret
sbb
inc
and
out
bnd
inc
call
mov
sbb
shr
imul
shr
inc
ret
rol
scas
fsubr
jo
les
outs
in
inc
sbb
rcr
sub
push
lahf
sbb
(bad)
dec
xchg
fsubr
mov
test
jle
loop
cmp
daa
ret
shr
mov
jle
add
add
(bad)
jecxz
test
mov
jb
mov
xor
xchg
retf
rcr
aam
inc
mov
out
xchg
call
or
sti
adc
test
mov
jmp
dec
sbb
fist
dec
pop
les
push
xchg
out
or
push
test
daa
mov
out
scas
lock
jle
or
mov
(bad)
and
jmp
push
lods
daa
xor
arpl
or
repz
inc
fdivr
pop
inc
mov
inc
int
and
pusha
mov
in
sub
imul
in
adc
sub
lahf
sub
les
in
dec
cld
fstp
push
scas
inc
sbb
push
and
mov
shl
add
fld
gs
(bad)
ja
push
adc
adc
jae
fbstp
test
(bad)
leave
pop
hlt
cmp
in
outs
in
cdq
shr
xor
je
popa
or
push
add
repz
out
ret
dec
mov
jae
test
nop
je
xchg
(bad)
mov
xchg
in
add
pop
scas
les
test
mov
dec
nop
mov
dec
lods
bound
add
inc
push
jne
jne
pmulhuw
gs
dec
jmp
mov
adc
in
outs
in
adc
test
push
xlat
arpl
xor
dec
mov
xor
cmp
jno
add
jmp
inc
or
ret
rol
push
dec
leave
push
jg
sub
pop
test
add
dec
xchg
xchg
inc
dec
(bad)
daa
aam
add
inc
push
(bad)
(bad)
cmp
pop
or
add
mov
cmp
xchg
sbb
xchg
add
jmp
dec
movs
jb
loope
sub
sbb
and
mov
mov
(bad)
mov
and
dec
or
xor
or
mov
dec
mov
sub
les
jecxz
arpl
dec
sub
xchg
push
pop
sbb
push
out
add
inc
movs
or
sub
movs
jnp
nop
mov
ja
push
pushw
jno
ret
scas
stos
xchg
add
xchg
shl
fistp
dec
mov
lock
icebp
imul
inc
aaa
bound
add
dec
mov
and
or
push
add
retf
mov
jp
ins
rol
cmp
xchg
outs
or
push
sti
fs
mov
mov
or
js
aad
stos
(bad)
std
movs
cli
xor
xor
dec
retf
mov
jp
movs
mov
mov
(bad)
addr16
stos
xchg
icebp
hlt
les
xchg
popa
cmp
imul
fwait
jne
mov
retf
sbb
inc
cmps
test
ja
ret
and
inc
inc
sbb
jmp
inc
push
call
mov
test
add
fcmovnbe
add
mov
repz
arpl
loopne
xor
imul
comiss
push
cli
or
frstor
das
(bad)
cwde
shl
jb
add
pop
or
pop
inc
mov
mov
ret
call
add
pusha
mov
jle
inc
jbe
lods
call
repz
dec
mov
sub
cmp
pop
aas
mov
sbb
jbe
or
clc
int
sbb
mov
or
pop
mov
(bad)
fcomip
xchg
xchg
inc
in
push
pushf
adc
bound
call
inc
mov
mov
aas
shl
ror
lods
xchg
ficomp
or
jb
jp
movaps
jbe
int
sub
mov
aaa
add
mov
add
inc
and
cmp
mov
test
push
std
and
(bad)
adc
out
loope
inc
ins
sub
mov
clc
and
xor
push
mov
ja
sbb
arpl
leave
sahf
aas
int
(bad)
xchg
sar
jae
pop
add
sbb
mov
sahf
mov
into
pop
test
xchg
mov
pushf
mov
push
sti
test
ja
not
sbb
add
mov
push
inc
or
pop
(bad)
jbe
stc
adc
sbb
cmp
push
retf
inc
mov
enter
popa
ss
add
mov
cli
(bad)
adc
hlt
fidivr
or
xor
pop
sbb
lock
adc
pop
mov
add
jns
(bad)
jmp
rcr
int3
in
sub
loopne
lahf
lahf
lahf
call
push
pop
out
push
jb
lea
inc
sub
sub
daa
inc
lods
ficom
lock
cmp
push
stc
(bad)
push
aad
adc
sbb
neg
jge
jae
or
and
gs
xor
xchg
dec
xor
mov
fcom
movs
imul
cmp
push
add
mov
int3
int3
sub
stc
mov
or
and
inc
outs
pop
adc
pop
cld
pop
scas
sbb
push
das
lock
add
or
jno
xor
dec
stos
mov
mov
jg
pop
inc
int3
xor
mov
pushf
repz
add
fs
dec
cmp
xor
call
push
mov
rcl
mov
inc
rol
push
cld
stc
rcr
in
sbb
push
push
mov
les
add
push
(bad)
jae
cmp
add
or
addr16
fidiv
popa
and
int
cmp
cld
jecxz
ins
sar
and
xor
xchg
hlt
test
lock
pop
dec
push
add
jg
cmp
inc
push
outs
repnz
pop
cmp
jb
xlat
and
outs
push
pop
sar
xchg
out
int
enter
test
int
inc
arpl
in
mov
xchg
sbb
jl
bnd
mov
and
adc
dec
push
pop
push
jmp
cs
pop
cmp
inc
enter
outs
pop
fs
inc
adc
xchg
out
cmp
sub
jno
inc
fsub
aaa
jl
movs
jb
ret
addr16
dec
out
mov
aaa
cmps
retf
out
adc
push
and
inc
fdiv
fsub
test
adc
and
fmul
sub
pop
les
outs
rcl
sbb
jns
xor
xchg
sbb
xchg
ret
xor
(bad)
stos
fbstp
jmp
out
shl
push
loop
add
jge
sbb
jmp
mov
out
or
shl
lahf
clc
test
or
add
ins
out
repnz
lea
xchg
pop
stos
arpl
mov
inc
adc
aas
mov
mov
pop
pusha
sahf
iret
inc
pop
add
rol
dec
or
popa
jecxz
mov
jbe
mov
mov
mov
sub
loopne
in
gs
mov
out
push
add
or
xchg
cdq
and
idiv
sub
push
int3
lahf
ins
mov
sbb
pop
test
xchg
mov
in
mov
outs
dec
and
inc
xor
int3
adc
mov
push
lahf
in
sub
lods
test
fidivr
sub
fmul
mov
pop
movs
xchg
lods
mov
mov
mov
scas
mov
and
mov
pop
dec
fidiv
movs
retf
ss
(bad)
popf
ret
mov
jge
mov
or
push
gs
push
shl
xchg
xlat
int3
mov
data16
call
enter
cld
mov
movs
push
inc
in
mov
not
add
adc
and
lds
xor
loopne
(bad)
ficom
inc
mov
daa
lock
push
pop
cmp
inc
mov
pop
mov
movs
leave
or
adc
cli
adc
sbb
cmp
ret
mov
mov
cld
clc
call
sub
xchg
sub
imul
jg
leave
cmps
pop
adc
inc
por
(bad)
(bad)
cmp
pop
xchg
sub
mov
mov
aaa
cmp
fwait
wrmsr
mov
sub
ds
or
and
push
xor
ja
mov
movs
repz
fisttp
fldcw
popf
push
outs
cmps
fstp
ror
ds
pop
outs
sub
pop
cs
lock
inc
pop
ret
and
fadd
xchg
mov
into
bound
jge
fisttp
ins
(bad)
stc
dec
cmp
pusha
and
shl
ins
inc
test
sbb
xchg
or
in
mov
push
add
pop
inc
cmp
adc
sbb
outs
jmp
ins
repz
sub
mov
cld
mov
inc
add
mov
or
fnclex
add
inc
aad
inc
loope
jno
dec
sub
lea
(bad)
outs
or
test
rep
in
jmp
arpl
std
cmp
xchg
mov
or
pusha
cmp
add
ins
stc
adc
int
pop
jp
jmp
or
fwait
mov
les
and
cmp
push
xchg
and
(bad)
pop
loop
adc
adc
pop
push
sbb
int3
xor
adc
ja
aam
mov
test
inc
pushf
ficomp
adc
push
(bad)
sub
inc
sbb
xchg
ret
mov
call
leave
sbb
sahf
mov
sbb
sbb
dec
popf
stc
mov
pop
iret
xor
dec
in
jmp
shrd
nop
call
movs
mov
adc
stos
jl
cmp
push
xchg
xor
ins
mov
cmp
mov
mov
push
mov
les
pop
pop
sbb
lods
mov
test
push
xchg
jns
aam
mov
mov
(bad)
adc
ja
pop
test
inc
xor
arpl
cmp
push
lods
jnp
inc
shl
cli
mov
ins
enter
jno
js
neg
mov
sahf
or
mov
jge
inc
std
mov
xor
imul
ror
and
cmp
bound
lock
xchg
stos
sub
mov
imul
push
cs
ficomp
stc
xchg
mov
inc
and
inc
pop
mov
sbb
xchg
sub
push
cmp
push
xor
(bad)
cmps
bswap
jnp
loop
int
and
call
cmps
adc
sub
aam
xor
pop
xor
repz
arpl
push
int3
mov
stos
mov
add
xor
in
cld
adc
push
ja
jns
in
arpl
jb
mov
sbb
out
fsubr
fistp
mov
dec
lods
aas
push
lock
mov
push
xchg
loope
out
(bad)
mov
adc
std
les
ins
cmps
jmp
mov
mov
push
adc
popf
mov
inc
xchg
xor
iret
xchg
inc
mov
mov
out
xor
cmc
push
adc
ficomp
daa
and
push
retf
pop
sbb
push
fadd
scas
sahf
aam
push
es
or
mov
js
popa
mov
adc
jge
retf
(bad)
dec
in
and
fwait
inc
popa
and
sub
call
(bad)
cs
hlt
cwde
xor
fs
sbb
inc
xor
or
cmps
inc
xchg
adc
stc
add
icebp
sbb
call
cdq
or
int3
cmp
xchg
push
enter
sbb
dec
lods
sbb
mov
cld
test
test
call
aam
push
cs
shl
dec
lods
xor
loopne
out
ins
gs
mov
add
jae
fldl2e
leave
xor
outs
push
cs
ror
fwait
int3
adc
bound
push
and
inc
mov
mov
mov
sbb
add
stos
iret
ja
pop
fdivr
jecxz
in
cmps
mov
mov
lea
fld
mov
jecxz
cmc
jecxz
xor
lock
inc
popf
or
dec
aad
adc
push
fnstenv
sbb
dec
(bad)
fcmovnb
mov
pop
mov
push
push
loopne
(bad)
cli
push
ror
and
add
pop
ins
jno
adc
cmp
push
lods
dec
sti
lahf
mov
xor
int3
out
xor
pop
movs
xchg
sbb
adc
push
push
sti
or
mov
ss
mov
adc
jg
rcr
pop
push
mov
xor
jl
lock
sub
loope
push
sub
mov
sbb
aad
rol
mov
sub
or
(bad)
cmc
not
mov
xchg
inc
outs
xchg
mov
pop
mov
mov
sahf
mul
ret
rol
call
xchg
or
jb
aas
popa
loopne
inc
add
lock
xor
nop
out
out
or
loope
xor
ret
pop
scas
xchg
jl
adc
cmps
mov
adc
cmp
(bad)
and
xchg
inc
sbb
adc
sub
or
inc
pop
sub
pop
std
inc
xchg
xchg
push
mov
pop
cmp
mov
cdq
add
fmul
jne
dec
loopne
push
dec
jmp
mov
js
push
add
xlat
test
hlt
xchg
lds
stos
mov
xor
jae
jg
rcl
fsubr
inc
push
fistp
into
gs
pop
xchg
pusha
dec
mov
and
fwait
loopne
mov
mov
loope
add
cmp
mov
addr16
test
lods
in
push
adc
ja
out
sar
outs
jp
ins
pop
xchg
sti
dec
xor
inc
xchg
jle
fs
(bad)
mov
sub
xchg
xchg
ret
jbe
jno
xchg
mov
jbe
fist
sub
retf
adc
aaa
shl
sti
pop
fadd
icebp
jge
mov
xor
btr
lods
push
cmp
mov
neg
add
jne
sub
sub
sbb
add
out
jns
dec
les
(bad)
xor
sub
push
cmp
loope
aad
push
inc
call
cmps
pop
push
cmp
jne
jmp
mov
in
jmp
mov
xchg
mov
xchg
dec
mov
pop
jno
ds
mov
push
out
or
mov
push
test
push
movs
mov
rol
xchg
int3
dec
dec
inc
retf
mov
hlt
push
sar
mov
call
les
inc
xor
lahf
gs
in
adc
int
stos
inc
jge
add
out
push
adc
loope
xor
or
cmp
mov
pusha
cmp
sbb
pop
pop
inc
xor
sub
data16
loopne
(bad)
js
xlat
icebp
mov
in
jmp
lods
dec
repz
movntps
xchg
push
pushf
add
dec
xor
adc
dec
cmp
rol
push
dec
mov
push
jnp
dec
fidivr
push
sti
mov
sbb
mov
or
frstor
dec
jle
enter
ret
cmc
je
cmps
pop
cmps
mov
shl
nop
mov
div
lock
xor
cmp
pop
fistp
mov
das
in
dec
repz
dec
lock
rol
ja
push
cmp
mov
popf
loop
or
dec
fistp
jecxz
fldenv
movs
dec
mov
out
jmp
mov
and
xor
popa
fstp
hlt
pop
repnz
jmp
mov
cmp
es
loopne
jbe
adc
push
out
pushf
lock
xchg
push
leave
push
icebp
shr
xchg
iret
cmp
mov
sbb
loopne
sub
test
mov
(bad)
sti
push
ins
and
dec
or
push
aam
pop
cld
jnp
call
add
(bad)
push
jns
mul
shl
mov
das
aas
fs
or
jb
mov
push
jae
and
cmc
lods
lods
mov
cli
cmc
xchg
mov
fstp
(bad)
mov
and
pop
pop
imul
sti
xchg
iret
mov
mul
ja
adc
cmps
sub
push
loopne
sbb
ds
push
out
or
add
bound
mov
jns
adc
or
adc
mov
jmp
test
inc
or
lock
jns
push
or
pop
adc
sahf
int3
jg
mov
or
pop
adc
inc
pop
pop
xor
aas
jne
jp
fs
(bad)
pop
sbb
adc
dec
jne
outs
ret
outs
lods
or
sbb
push
inc
xchg
and
in
xchg
dec
adc
add
cmps
mov
shl
xor
lods
dec
lds
(bad)
pop
inc
les
mov
xor
cmp
ret
adc
test
sbb
loope
cmc
add
xlat
(bad)
dec
add
(bad)
add
retf
fcom
aad
xchg
cs
jae
push
inc
fild
mov
or
pushf
sub
(bad)
xchg
aas
iret
cmc
adc
loop
ss
lea
xchg
or
xchg
iret
push
pop
add
jno
lods
shr
shl
cmp
test
add
cdq
fdivr
arpl
sahf
shl
test
sbb
lods
mov
pop
mov
inc
or
(bad)
mov
cmp
push
movs
sub
hlt
sbb
jmp
push
fdiv
lds
jge
cld
mov
push
jecxz
sub
xor
test
ss
xor
shl
outs
adc
mov
pop
mov
cmps
sub
sti
adc
repz
sub
lds
in
xchg
je
(bad)
aas
push
aad
test
xor
fbstp
pop
push
push
shr
retf
add
xor
cwde
sbb
pop
push
cmps
xor
jo
pop
dec
cmp
mov
out
fs
or
pop
fmul
clc
(bad)
into
sbb
cli
cld
sub
xchg
aam
loop
mov
or
sub
mov
sub
mov
sub
scas
(bad)
jg
retf
les
dec
inc
cmp
test
lods
xchg
sbb
(bad)
mov
pop
and
xor
std
(bad)
xor
adc
in
and
cmps
nop
std
adc
or
xchg
mov
xchg
mov
div
cmp
ds
sar
pop
and
adc
or
cmps
xchg
mov
cwde
ja
mov
add
dec
inc
cmp
and
push
sub
retf
(bad)
sub
cmp
jp
loopne
rcl
lock
movs
mov
push
jp
inc
mov
out
and
pop
add
fisubr
daa
sub
mov
outs
lock
push
jbe
inc
push
push
sub
and
jnp
imul
aad
push
jnp
fwait
inc
pop
out
inc
(bad)
sti
mov
mov
lods
inc
pop
pop
jnp
or
and
mov
or
mov
stos
ds
movs
stos
lea
mov
mov
jns
pop
ret
pop
nop
sbb
retf
jmp
and
out
pop
adc
sahf
pop
fisub
call
push
adc
sub
xchg
mov
movs
dec
retf
dec
pop
add
arpl
ret
ficom
lods
jne
push
aad
xor
and
jmp
or
mov
retf
stc
add
adc
aam
pop
loopne
gs
rcl
daa
adc
dec
mov
cmp
out
pop
jo
pop
adc
jb
sbb
aaa
jmp
pop
xor
lods
mov
mov
or
adc
jle
mov
and
push
push
mov
mov
in
jbe
pop
adc
test
data16
repnz
icebp
das
test
xor
dec
dec
xor
movs
jns
test
std
mov
jp
stos
test
lock
mov
das
shl
inc
rol
das
push
mov
or
rcr
jmp
xor
xchg
sbb
sahf
push
out
sar
mov
cmp
add
sub
jge
popf
push
fistp
test
cld
add
and
push
xchg
repnz
push
inc
les
cli
mov
call
aas
xchg
stos
cmps
into
jg
les
add
fstp
xchg
push
aam
add
iret
sub
icebp
in
arpl
test
(bad)
fwait
jb
inc
lods
loopne
fcmovnb
daa
nop
pop
dec
push
add
cs
jge
(bad)
cmp
xchg
jmp
lods
pop
or
ja
mov
mov
add
sbb
sti
mov
nop
ja
push
in
lods
mov
jns
rcl
ds
push
mov
jmp
sub
cmps
aam
ret
jo
add
cli
(bad)
fs
in
pop
mov
sub
add
leave
jns
dec
jae
cdq
scas
dec
out
push
xor
popf
test
fldenv
or
push
mov
fmulp
inc
call
add
les
aad
add
(bad)
imul
add
jg
lahf
in
mov
mov
mov
call
call
push
pand
scas
out
fld
int3
shr
jns
add
data16
mov
inc
inc
out
imul
dec
and
push
add
inc
loope
and
sbb
xchg
hlt
mov
or
add
bound
push
xor
imul
sub
and
adc
repnz
mov
cmp
lock
mov
and
push
ins
(bad)
mov
inc
push
ffreep
jmp
jae
mov
jle
fwait
jge
adc
push
lahf
push
add
jns
pop
push
mov
ds
mov
jg
cmp
inc
ins
cs
fidivr
pop
pop
nop
jbe
jle
pop
sbb
shl
ret
stos
sub
dec
mov
in
xchg
mov
fnsave
mov
test
push
jns
cwde
dec
sar
dec
int
sub
add
adc
mov
inc
pop
(bad)
or
push
enter
mov
loope
jbe
retf
paddusb
add
jecxz
push
xor
xor
popa
(bad)
in
sahf
cmp
stc
sbb
(bad)
xchg
leave
or
sbb
daa
stos
jmp
xor
cli
aas
das
sbb
repnz
cs
jno
mov
sub
and
dec
test
mov
je
mov
retf
adc
in
inc
mov
add
outs
jmp
sub
xor
pop
shl
and
push
xchg
jmp
jb
jns
push
test
sub
push
std
mov
test
inc
push
dec
lods
sub
add
sub
sub
push
xlat
int
sbb
ficom
xor
ror
mov
dec
push
or
sahf
xchg
mov
mul
js
adc
sbb
test
daa
sbb
fiadd
xchg
ja
sbb
out
repnz
js
jge
loope
jge
sub
ja
lahf
shr
retf
pop
test
add
es
add
test
lods
push
sub
std
and
sub
call
mov
sbb
rcl
jo
jmp
pop
and
loope
lods
xchg
imul
inc
mov
jge
sti
add
jp
jo
int3
dec
dec
imul
push
push
int3
aaa
adc
popf
push
add
pop
adc
or
mov
sbb
add
sbb
test
and
add
loop
sbb
cli
push
neg
pop
out
dec
loope
push
in
adc
jae
sar
mov
push
rcl
inc
push
shr
mov
sub
mov
imul
push
out
xlat
jbe
ret
cmp
dec
addr16
lods
jp
pop
xchg
and
scas
stc
lahf
sbb
or
inc
sub
div
aad
ja
neg
in
outs
ret
aad
cmp
icebp
jo
fnstsw
(bad)
in
loop
in
or
jp
mov
dec
dec
stos
jl
sbb
mov
dec
sbb
xchg
(bad)
shl
shr
lea
cmps
test
and
mov
xor
pop
jnp
sub
ds
sbb
and
jecxz
pop
aas
(bad)
in
mov
pushf
pminub
or
sub
add
mov
and
sbb
stc
sahf
adc
cmp
stc
pop
nop
xchg
inc
dec
fstp
mov
dec
mov
add
in
mov
jb
movs
shl
mov
sahf
cmps
mov
movs
sub
mov
retf
lods
das
arpl
loop
mov
lahf
cmc
(bad)
loopne
pop
aas
call
iret
dec
out
or
aam
add
ret
push
lahf
xchg
xchg
fcmovnu
push
call
dec
push
sbb
pusha
fcomp
out
cmp
mov
retf
or
(bad)
(bad)
mov
(bad)
and
sbb
in
imul
ret
xchg
xor
idiv
(bad)
sahf
dec
or
jg
adc
rcl
sub
mov
ds
(bad)
test
xor
pop
jg
jg
mov
xlat
ja
mov
loope
clc
and
scas
inc
xor
ins
arpl
movs
xchg
and
push
xlat
cmp
mov
movs
aad
test
adc
xchg
and
fstp
add
xor
add
inc
and
cmp
pop
lock
loop
jl
jge
xchg
pop
jecxz
es
aam
or
add
sar
fwait
mov
(bad)
fdivrp
in
mov
enter
push
xchg
iret
jb
mov
outs
mov
sbb
hlt
cld
mov
xor
cmp
rol
push
mov
rcr
and
mov
aaa
mov
cld
iret
clc
(bad)
ds
pop
mov
sub
rcl
mov
inc
fs
cmp
cmp
push
xor
and
dec
lock
jbe
sub
inc
cmp
mov
leave
popa
jmp
out
outs
cld
mov
jae
out
cmps
or
inc
stos
cmp
dec
cdq
mov
(bad)
fbld
stc
adc
shl
dec
test
push
push
popa
pop
aas
push
xchg
test
cmp
mov
add
xchg
js
sbb
std
xchg
add
ins
mov
or
inc
cdq
in
jno
adc
or
pusha
in
addr16
in
mov
cld
cmp
mov
fldcw
fwait
mov
sub
fldcw
push
cwde
retf
fld
adc
mov
mov
out
pop
in
out
and
pop
in
mov
jne
jae
jge
push
sub
iret
ins
adc
add
or
stc
mov
xchg
mov
mov
cwde
rol
scas
cmp
aad
fcom
sahf
out
test
xchg
mov
rcr
pop
pushf
sub
or
and
test
inc
cmp
stos
ins
push
cli
fwait
repz
push
and
jnp
xchg
stc
mov
adc
sub
xchg
pop
xchg
push
push
and
xor
scas
rcpps
add
pop
mov
push
adc
jno
jns
movs
xor
or
sub
mov
fnsave
popa
sub
mov
or
mov
and
mov
pop
push
sti
shl
dec
ins
jb
scas
jl
pushf
jg
cmps
loope
aad
jecxz
xor
add
add
iret
push
jbe
test
mov
fwait
push
xor
push
sbb
dec
test
xchg
sbb
mov
arpl
push
or
push
int
add
jae
adc
inc
or
mov
cmps
add
jns
mov
xchg
or
ss
fnstsw
in
mov
mov
in
into
cs
adc
mov
dec
fiadd
dec
std
inc
shr
dec
xchg
jecxz
out
enter
add
add
xchg
cs
outs
xor
enter
ds
gs
jnp
sub
sub
dec
add
mov
js
bound
and
adc
jae
fistp
ror
movs
int3
push
movs
dec
mov
ror
in
dec
mov
xor
or
and
enter
mov
std
test
pop
sub
xchg
imul
cmps
pop
jno
xor
jle
stos
retf
loopne
adc
shr
arpl
cmp
mov
retf
pop
hlt
adc
pusha
sbb
adc
push
lea
pop
jmp
xchg
out
das
gs
loopne
dec
mov
(bad)
xor
push
xchg
push
push
inc
nop
inc
ror
repnz
mov
fisttp
jp
call
add
call
cmc
out
dec
sub
xchg
push
in
inc
je
stos
pop
icebp
push
jmp
cmp
fidivr
xor
test
ja
(bad)
(bad)
jmp
iret
pop
repnz
sub
inc
in
adc
sub
cld
sbb
lods
int3
movs
push
cdq
cmps
cmps
xchg
sub
and
xor
xchg
mov
push
scas
cmp
in
ins
inc
cmp
call
sub
xchg
enter
and
repnz
inc
movs
xchg
jns
dec
fnstsw
cdq
mov
loope
(bad)
xchg
jl
imul
adc
sbb
mov
push
mov
mov
lods
cmp
sbb
mov
sub
mov
inc
(bad)
stc
imul
repnz
rcl
fwait
push
mov
imul
cmp
and
push
or
ret
xor
pop
dec
push
mov
cdq
jnp
imul
pop
add
inc
pop
in
adc
inc
nop
test
pusha
jbe
pop
js
and
sbb
call
mov
les
pop
jnp
jae
jmp
sbb
adc
pop
arpl
cmps
cmp
dec
sahf
jbe
clc
aad
cmp
sub
aas
mov
test
cwde
ret
mov
fist
out
xchg
mov
cld
cmp
in
pop
mov
stc
mov
jmp
clc
call
or
les
sub
jno
or
lock
fisub
retf
sbb
inc
inc
imul
cmps
adc
das
xlat
add
push
jb
pop
inc
pop
cmp
mov
sub
lds
in
(bad)
(bad)
jnp
in
int3
jmp
and
mov
pause
or
idiv
dec
into
(bad)
mov
add
mov
xchg
and
xchg
pop
jbe
push
xor
mov
(bad)
stos
clc
xor
sbb
std
mov
add
js
inc
xor
clc
push
lea
test
test
ficom
or
xor
mov
aas
cmp
(bad)
cli
test
(bad)
std
mov
jmp
loopne
cmovp
and
retf
add
xchg
jmp
or
in
iret
sub
jo
dec
(bad)
bound
and
js
adc
cs
mov
(bad)
(bad)
mov
mov
(bad)
push
xor
repnz
ja
sbb
sti
outs
iret
sti
push
cmp
addr16
and
mov
mov
pop
leave
sbb
cdq
loopne
popa
frstor
add
push
out
mov
and
lock
shr
xchg
pop
add
xchg
rcr
cld
mov
sbb
lahf
fs
lahf
int3
adc
sbb
inc
test
add
push
nop
repnz
test
xlat
pop
or
adc
imul
mov
xchg
scas
sub
stos
repnz
movs
mov
aaa
add
shl
arpl
push
mov
mov
and
retf
push
mov
retf
jb
or
pop
mov
outs
sbb
frstor
adc
cmp
jg
jns
sbb
scas
cmp
push
pusha
das
fisub
mov
mov
pop
or
aaa
sti
loopne
adc
jle
inc
mov
mov
fist
or
xor
shl
mov
mov
lods
or
mov
cmp
fnsave
sub
iret
addr16
mov
jb
mov
test
mov
pop
or
loope
jns
fild
dec
ins
fs
out
adc
enter
dec
rol
mov
jbe
dec
addr16
addr16
mov
add
mov
adc
aad
cmps
jbe
and
aad
imul
inc
mov
movs
retf
mov
sahf
dec
mov
rol
btc
jmp
jne
clc
or
fbld
cmp
les
mov
cld
xor
gs
fstp
rol
dec
bound
jns
pop
push
adc
jae
mov
out
in
jb
and
les
dec
es
fdivr
push
sub
fnstsw
push
fsub
bound
sbb
scas
adc
jle
int3
push
fisubr
jns
add
push
pop
add
icebp
mov
pop
dec
cs
frstor
pop
and
push
in
mov
(bad)
sub
lock
cs
sub
lahf
cmc
push
outs
fld
xchg
(bad)
mov
imul
push
inc
ins
cs
dec
push
cmp
mov
js
shl
mov
add
lea
ins
inc
jo
scas
jns
inc
adc
pop
pop
mov
sub
or
and
pop
call
cmps
or
mov
rcr
ds
movs
sbb
sar
je
int3
ss
data16
js
iret
test
jge
mov
xor
mov
bound
mov
sub
jecxz
fsubr
mov
outs
mov
jmp
js
push
gs
sbb
mov
xchg
push
adc
jle
pop
imul
push
test
mov
pop
mov
test
push
int3
sub
in
sub
mov
(bad)
gs
pop
stc
mov
dec
jp
xchg
push
nop
jle
cmc
shl
inc
xor
lahf
sub
push
sub
xor
sbb
aad
jmp
mov
in
fabs
and
repnz
mov
dec
dec
call
mov
scas
int
and
test
inc
test
sbb
fstp
in
push
addr16
gs
cld
cmp
loope
xlat
xor
jecxz
jbe
add
mov
out
sbb
mov
pushf
out
jg
call
lock
retf
movs
in
mov
in
xor
fisubr
cld
xor
ja
repz
retf
leave
nop
cld
aaa
scas
rcl
sbb
or
fdiv
adc
sar
iret
int
cli
sbb
dec
movs
stos
and
push
sbb
jne
push
and
cmps
hlt
out
push
sar
sbb
and
fstp
lea
adc
push
mov
dec
outs
pop
xchg
test
pop
mov
jle
ret
xor
xchg
sub
jb
mov
ds
jmp
xor
mov
jb
or
pop
jp
jo
pop
popf
std
adc
lds
test
sbb
int
pushf
and
fiadd
push
mov
fsubr
dec
outs
mov
sbb
or
sbb
mov
jp
xor
mov
mov
call
lock
add
sbb
xchg
or
sub
mov
mov
or
call
retf
inc
and
je
mov
cwde
neg
cmp
cld
mov
test
les
mov
sbb
lds
adc
cmp
and
jmp
pusha
pop
bnd
mov
add
div
stos
or
xor
or
or
pop
mov
sar
xchg
jge
mov
adc
pop
jb
sahf
retf
jmp
jno
xchg
jle
popf
retf
mov
(bad)
jmp
mov
test
inc
lds
loop
hlt
fmul
mov
mov
test
scas
dec
scas
je
retf
cmc
stos
mov
movs
xchg
shl
test
(bad)
sub
mov
and
cmps
and
(bad)
push
imul
and
outs
clc
push
cwde
mov
jge
pop
adc
xchg
test
dec
adc
in
mov
inc
neg
add
or
or
fxam
cmp
dec
into
push
sub
mov
loope
ret
push
jno
cmp
das
cld
pop
adc
int
push
pop
gs
jbe
ret
push
(bad)
sahf
hlt
and
fsub
arpl
mov
clc
and
das
sar
dec
shl
inc
jle
inc
cmp
xor
pop
ins
xchg
inc
jns
fild
xor
ins
xor
add
xchg
popf
fwait
mov
dec
mov
test
mov
inc
into
(bad)
fucomip
cmp
outs
adc
rdtsc
clc
retf
mov
add
or
arpl
jb
fst
ror
pop
retf
inc
enter
xchg
sbb
js
(bad)
loop
(bad)
cmp
xchg
add
mov
cmp
xchg
add
outs
aaa
pop
mov
out
fstp
cld
adc
add
stos
pop
int
rol
pushf
out
mov
hlt
cmp
stos
mov
test
jecxz
fldz
and
lahf
aas
or
imul
stc
xchg
loope
or
out
in
lds
push
fisubr
sub
retf
or
inc
pop
stos
je
les
xchg
mov
mov
mov
std
aaa
or
mov
cmps
xor
mov
xchg
and
add
pusha
sub
mov
jl
(bad)
sbb
mov
ins
es
pop
dec
jle
ins
in
ror
add
je
shl
pop
mov
sub
ror
les
add
test
in
outs
adc
inc
mov
popf
jnp
enter
sbb
fisttp
cmc
test
das
test
into
loope
push
in
mov
xchg
add
retf
inc
mov
aas
js
and
pushf
in
sahf
jo
push
clc
xor
iret
inc
push
and
xlat
pop
cmc
leave
jl
inc
mov
sub
pop
inc
nop
cmp
mov
je
mov
ins
fnstcw
mov
lea
outs
pop
jno
out
aam
push
test
mov
cmps
xchg
and
jp
int
push
push
(bad)
fidiv
mov
sub
ds
pop
aam
sahf
mov
stos
cmp
sti
sub
pop
xor
shl
out
test
sbb
nop
adc
push
fxch
inc
data16
and
mov
enter
mov
retf
add
(bad)
in
mov
jge
sbb
mov
ret
icebp
lds
push
sbb
inc
sub
jnp
sub
mov
pop
push
or
pop
(bad)
mov
int
inc
add
mov
aaa
sbb
adc
cmp
add
inc
int
xor
push
adc
push
dec
sbb
jnp
nop
iret
cs
iret
lahf
jnp
inc
jo
jl
test
lock
(bad)
(bad)
mov
jp
jmp
add
mov
sub
shr
icebp
clc
pop
xor
jp
add
aad
dec
inc
mov
cmps
jmp
jge
jnp
movs
add
adc
mov
mov
xchg
pop
adc
ss
call
(bad)
bsr
int
push
mov
xor
aas
jnp
mov
stos
adc
(bad)
ftst
ret
out
mov
mov
pop
push
and
and
cmp
add
js
jle
(bad)
push
jno
and
and
push
movs
xchg
xchg
out
mov
popa
adc
cdq
scas
add
jae
sbb
dec
test
pop
pop
es
pushf
push
mov
mov
cli
sbb
pop
hlt
lahf
jbe
(bad)
int
or
call
daa
dec
popf
pushf
aad
adc
out
daa
call
jp
or
stos
inc
xor
push
or
lds
inc
mov
cld
push
out
retf
test
sar
pop
pop
jb
imul
inc
mov
je
xchg
or
mov
movs
mov
mov
std
aas
cmp
sbb
mov
sbb
cmp
xchg
jmp
mov
adc
loopne
cli
jb
scas
fdiv
ins
mov
iret
adc
test
jns
ins
ins
call
dec
xchg
popf
xchg
nop
pop
int3
out
lea
out
or
ins
jnp
addr16
sub
hlt
(bad)
push
inc
mov
jns
cmp
scas
ins
inc
or
pop
xor
mov
shl
push
dec
dec
not
lds
xchg
xchg
jg
(bad)
push
add
int3
pop
cmp
jl
(bad)
sti
arpl
jl
and
push
sub
cli
fcmovnu
mov
neg
pop
lds
push
aad
fcom
pop
scas
mov
sbb
test
inc
jae
mov
std
stc
data16
mov
stos
fist
and
pop
in
enter
sbb
mov
add
push
add
sbb
push
push
dec
fs
sub
mov
jns
pusha
or
rep
loop
inc
xchg
movs
jg
shl
stos
jbe
xchg
add
ror
jle
sbb
add
sub
dec
jl
add
stos
scas
jo
sar
and
fisttp
(bad)
cmps
mov
cmp
jmp
(bad)
jbe
call
ret
sub
ret
push
sub
cmp
pushf
sahf
cmp
inc
sub
xchg
mov
not
mov
and
stos
jns
or
repz
shl
push
out
fwait
add
jb
sbb
movs
adc
mov
sub
add
dec
lods
mov
cmp
add
ret
stc
sti
xor
enter
outs
call
xchg
adc
test
imul
mov
mov
fcmovbe
push
fstp
jmp
clc
outs
inc
aas
mov
shl
or
dec
jp
adc
push
mov
in
inc
jae
push
ret
inc
xor
push
adc
jmp
scas
repz
inc
pop
and
clc
inc
ss
add
inc
inc
xor
push
inc
jns
jo
jae
or
mov
cdq
dec
test
outs
sbb
call
adc
(bad)
dec
push
cmp
repnz
pop
vmulsd
rcl
pop
scas
fild
retf
sar
xchg
adc
push
push
jl
mov
jl
mov
mov
adc
(bad)
outs
add
daa
jg
pop
imul
push
cld
test
cld
dec
push
movs
jmp
add
dec
addr16
test
mov
(bad)
ins
xor
mov
and
or
in
ja
test
in
fcmovb
ret
jns
sbb
push
jno
or
retf
mov
repnz
mov
mov
pushf
in
inc
mov
jg
ins
movs
add
bound
cs
movs
pop
out
mov
popa
icebp
fild
cmp
in
cmp
loop
out
out
(bad)
jmp
jmp
sub
inc
push
loopne
scas
cmc
leave
aaa
lahf
mov
leave
mov
push
rol
xchg
je
push
gs
js
popf
cmove
fbld
cmps
ds
pop
fst
lea
out
retf
(bad)
add
dec
jl
imul
mov
movs
fstp
and
inc
repz
or
sub
call
int
push
xor
stc
fwait
retf
mov
gs
aas
adc
sbb
pop
dec
mov
pop
xchg
sbb
mov
xor
into
xchg
jge
(bad)
cmp
test
imul
out
inc
add
cmp
leave
sbb
or
and
mov
and
ja
outs
loopne
sub
das
loop
pop
add
idiv
xor
xchg
pop
shr
jne
movntq
sub
iret
shl
std
and
ret
(bad)
add
pop
pop
sub
lds
mov
adc
out
les
xor
add
add
clc
idiv
jae
les
xchg
jecxz
in
jnp
and
jb
sbb
mov
sub
inc
jno
jnp
hlt
pop
xchg
inc
push
pop
inc
push
pop
dec
mov
mov
das
movs
push
inc
test
shl
repz
jne
xor
test
cdq
(bad)
in
mov
and
pop
add
fs
mov
ds
jne
or
sbb
lea
fwait
push
fidiv
push
movs
jmp
cmps
and
and
pop
mov
mov
jp
jb
fs
inc
pop
cld
push
int3
push
push
rcl
jbe
cmc
cmp
imul
sti
inc
aaa
int
sub
jp
sti
fsub
(bad)
push
jno
cmp
shl
jb
popf
adc
pop
xchg
nop
pop
and
and
aaa
mov
ja
sbb
mov
jne
dec
pop
or
xchg
ret
mov
(bad)
cmp
loopne
ror
rep
adc
or
sti
pop
retf
mov
test
mov
shl
jae
stos
lea
xchg
or
movs
jnp
aaa
repz
cmps
daa
cmc
jecxz
mov
or
(bad)
mov
xor
mov
scas
mov
add
cld
jo
adc
push
sbb
das
out
ins
pop
daa
jbe
mov
add
push
inc
idiv
and
repnz
mov
cmps
xlat
push
mov
sub
pushf
mov
and
adc
add
adc
pop
push
out
xchg
sti
or
js
sub
inc
cmp
push
push
add
dec
pushf
out
nop
retf
mov
jns
repnz
cmps
ret
cmps
leave
inc
jno
imul
in
(bad)
jmp
push
cmp
(bad)
iret
mov
pop
and
mov
pop
aam
test
adc
jg
push
test
add
iret
pusha
(bad)
push
sub
cli
jbe
adc
sbb
xor
repz
bound
loopne
mov
sbb
add
mov
cdq
repnz
fnstcw
and
dec
in
es
push
hlt
test
js
cli
inc
push
lods
scas
pop
pushf
es
in
leave
mov
(bad)
mov
daa
sub
popf
outs
push
sbb
mov
cmp
mov
daa
in
(bad)
nop
out
push
ss
and
jg
fadd
sub
gs
and
and
out
jo
fmul
pop
ds
lock
stc
fistp
mov
popf
lods
clc
mov
in
or
cmp
xor
adc
and
mov
sar
cli
jb
jp
push
adc
ins
push
add
and
mov
fwait
(bad)
jae
pop
cli
stc
in
mov
xchg
mov
sti
shr
pop
push
sub
mov
fcmovnbe
shr
cmp
rcl
pop
in
popf
rcr
jbe
pop
sub
les
push
jmp
dec
pop
pusha
dec
nop
mov
iret
ss
adc
aam
inc
lods
icebp
push
inc
xchg
mov
loopne
push
push
inc
jl
inc
imul
mov
cld
push
jmp
std
out
into
mov
test
ja
and
shl
sbb
pop
mov
(bad)
cmps
xor
(bad)
out
or
fs
sbb
movs
sahf
in
or
cs
add
out
inc
sub
mov
push
and
and
loope
mov
push
sbb
sbb
ja
inc
int3
jge
repnz
fcomp
movs
popa
icebp
mov
pop
lods
xchg
cpuid
fisub
xlat
mov
aas
mov
enterw
xlat
ret
cmp
mov
push
jbe
mov
into
mov
push
mov
xchg
(bad)
and
movs
loope
fidiv
repz
dec
mov
lahf
sbb
movs
push
fsubr
and
dec
in
push
jl
and
xor
sbb
mov
shl
xchg
ss
jge
pusha
xor
in
mov
sbb
vaddsubps
jl
fidiv
imul
or
(bad)
outs
mov
mov
or
cmp
test
daa
icebp
or
push
iret
mov
test
mov
cmp
repz
push
push
sbb
nop
dec
pop
push
test
jns
lea
add
in
jbe
xchg
cmps
jmp
push
adc
scas
pop
sub
addr16
jmp
loop
cmps
xor
lock
cdq
or
mov
(bad)
inc
fsub
xchg
cmp
loopne
mov
cmc
ficomp
lods
mov
in
ins
mov
scas
call
(bad)
xor
enter
jmp
in
jmp
add
repz
mov
stos
js
jmp
and
ins
xor
cmpxchg
and
add
push
data16
jg
jns
aad
fs
loope
sub
shl
add
cmp
sbb
add
fisub
movs
xor
call
dec
icebp
icebp
ret
sahf
popa
jno
enter
lods
loop
adc
xchg
sbb
icebp
push
lods
xor
sbb
mov
cmp
cmp
add
fwait
out
pusha
cld
mov
jp
sbb
out
fnsave
sub
test
sti
add
or
jg
xchg
pop
in
aad
sbb
jmp
and
popa
outs
loope
pop
adc
shl
aad
and
fnstcw
push
psadbw
mov
push
pause
jmp
lahf
mov
sub
test
fidiv
das
xchg
push
cdq
sbb
mov
mov
lahf
mov
rcr
jge
and
mov
xchg
fsub
xchg
adc
(bad)
push
jb
ja
inc
pop
stc
push
pop
lods
mov
or
mov
mov
out
aad
aaa
mov
ror
stos
mov
fild
je
pop
xchg
cmp
(bad)
pop
inc
add
dec
rcr
mov
popa
outs
stos
cmps
add
inc
stc
rcr
jne
cmc
das
push
or
inc
mov
mov
xchg
fild
pop
xchg
and
or
ret
sub
popf
outs
xor
xchg
sar
mov
or
push
lock
test
call
or
pop
jns
xor
imul
data16
mov
jle
pop
adc
and
inc
aaa
xor
cmp
js
inc
dec
add
mov
les
inc
(bad)
push
xchg
(bad)
sbb
add
cmp
mov
out
inc
jl
push
cmps
inc
mov
and
or
aaa
dec
mov
xor
js
mov
popa
(bad)
inc
inc
in
and
push
mov
mov
std
aam
lods
sahf
shr
addr16
add
int
cmps
xchg
and
xor
fbld
or
aam
sbb
fst
mov
fcom
adc
mov
(bad)
mov
push
clc
test
in
nop
pop
add
(bad)
pop
push
sbb
inc
inc
movs
retf
mov
mov
inc
(bad)
xor
popa
jno
fisub
sub
sbb
xchg
test
mov
adc
leave
sub
jns
out
or
or
cs
data16
call
data16
outs
cwde
call
add
adc
lods
lods
ins
cmps
and
(bad)
fisttp
aaa
mov
inc
sub
ins
jecxz
mov
xor
adc
cmp
jmp
rcr
pop
push
clc
dec
iret
or
fst
sbb
xchg
inc
icebp
out
mov
(bad)
cmp
add
test
sahf
sub
pop
or
inc
sub
sbb
ja
cmp
ss
dec
xor
pop
add
test
jns
push
mov
stos
dec
aas
repz
cmp
es
cld
add
cld
mov
out
(bad)
retf
pop
aas
dec
ss
pop
mov
ficom
push
gs
outs
out
(bad)
(bad)
aam
test
jle
jne
repz
leave
pop
jno
adc
test
jecxz
mov
pop
xchg
and
or
xlat
enter
jae
xchg
sbb
mov
xchg
sbb
std
lods
stos
jmp
mov
lods
stc
and
mov
xor
dec
push
jp
mov
nop
inc
jne
cwde
sbb
gs
(bad)
mov
jb
jle
inc
pusha
test
mov
xchg
and
mov
movs
inc
mov
fs
add
sub
dec
pop
(bad)
cmp
add
mov
jns
cmp
and
aas
xchg
(bad)
mov
cmp
ret
loopne
call
adc
outs
dec
(bad)
imul
adc
call
mov
fstp
dec
cmp
retf
(bad)
retf
dec
imul
(bad)
jmp
sub
mov
inc
outs
jns
xchg
xchg
jns
fidivr
(bad)
stos
sub
outs
js
test
cld
(bad)
mov
jae
pop
inc
jnp
ins
cmp
and
into
rcl
out
out
add
add
jl
test
inc
or
adc
or
xchg
xlat
popf
fs
daa
pusha
outs
or
pop
jl
shr
and
cmps
jno
aad
push
jmp
ja
xlat
dec
(bad)
hlt
mov
adc
xchg
clc
pop
test
or
cmp
in
cdq
dec
sub
cmp
pop
xor
dec
jecxz
jbe
and
out
jmp
pop
les
ret
mov
dec
and
int
jo
std
mov
xchg
arpl
jmp
inc
or
xchg
cli
lods
inc
fcom
loope
cmps
(bad)
aad
(bad)
loopne
rcl
fstp
daa
push
es
iret
js
inc
in
sbb
inc
movs
mov
xor
push
ins
sar
cs
sti
mov
cmp
xchg
mov
test
sub
sbb
call
push
sub
jp
and
jno
push
cmp
dec
cmp
inc
adc
(bad)
cmp
je
ins
fcmove
adc
hlt
and
sbb
clc
push
imul
xlat
mov
out
mov
dec
test
int3
and
ret
shl
fadd
jno
ret
or
ficom
cmps
mov
mov
aaa
hlt
into
aas
repz
std
push
(bad)
xor
nop
stos
mov
push
xchg
dec
cmp
mov
fistp
jmp
mov
bound
mov
jae
les
adc
xor
lahf
mov
outs
ja
cmp
inc
sub
jb
mov
arpl
rcr
cs
ret
psubusb
jne
fst
jge
xchg
xchg
sbb
stos
(bad)
nop
xor
imul
inc
add
cmp
pop
std
cmp
cmp
movs
sub
mov
sub
mov
fnstcw
jmp
pop
adc
inc
ins
repz
pcmpeqb
in
push
es
test
(bad)
sar
leave
add
sub
sahf
inc
arpl
lods
cmp
pop
mov
pop
jns
pop
(bad)
gs
xlat
rcl
fistp
ss
out
and
retf
mov
xchg
sbb
mov
adc
je
rcr
push
mov
sbb
mov
bound
lahf
in
pop
xor
arpl
leave
leave
xchg
aaa
pop
lods
push
pop
adc
xchg
mov
mov
mov
fnsave
or
and
call
and
adc
test
(bad)
(bad)
in
jge
push
jmp
mov
adc
add
ficomp
pop
inc
cmp
mov
ret
dec
inc
mov
jge
fs
xchg
inc
out
jnp
fst
subps
and
call
sbb
sbb
mov
mov
leave
push
pop
cmp
lahf
cmp
push
jge
mov
neg
faddp
int
xor
add
loope
in
push
popa
pushf
(bad)
cld
test
test
loop
xchg
inc
jno
mov
inc
mul
mov
fsub
inc
loop
out
add
neg
mov
aas
jo
xlat
xchg
std
out
jno
pop
ja
lea
shl
loop
test
cmp
jge
pop
mov
outs
ja
ins
fisub
mov
or
pop
mov
movs
jle
bound
add
je
int
sar
cmps
xchg
sbb
or
popf
imul
test
retf
lea
mov
sti
push
push
fst
adc
dec
mov
into
fcom
mov
daa
cmc
pop
and
enter
lods
jecxz
ficom
add
jbe
hlt
cmc
or
fild
retf
pop
or
jno
shl
(bad)
clc
pushf
in
test
mov
mov
cld
lahf
ins
sbb
dec
ds
(bad)
div
push
mov
cmp
lock
jo
dec
stos
jle
push
add
ins
or
push
pop
fs
mov
aad
je
popf
xlat
es
jnp
sbb
sbb
enter
jecxz
xor
rcl
lea
mov
jp
mov
rcr
out
sbb
hlt
pusha
mov
mov
mov
pop
jo
jp
xchg
repnz
aam
push
fcmovbe
and
add
mov
call
repnz
cmp
nop
adc
call
movs
xor
lock
push
or
dec
(bad)
push
frstor
xor
xchg
push
add
das
call
mov
push
fnsave
xor
pushf
int3
jge
lea
sti
sbb
push
mov
cmp
nop
inc
add
jne
fcom
pop
es
push
test
jecxz
xchg
push
jno
and
dec
outs
add
inc
mov
xor
cs
das
imul
aas
lahf
mov
jnp
dec
inc
(bad)
sbb
push
jge
adc
xchg
adc
popf
lods
fnstcw
add
sub
cmp
sub
add
out
xchg
icebp
fwait
pushf
pop
adc
or
cmp
(bad)
mov
(bad)
cmc
pop
clc
sub
mov
test
xchg
sbb
rol
mov
ds
or
test
out
cmp
pop
pop
mov
pop
and
push
jns
sub
or
sar
mov
stos
sbb
fimul
in
mov
scas
mov
xchg
test
test
push
retf
shl
fadd
sbb
dec
mov
and
xchg
cmp
cmp
test
pop
and
mov
retf
mov
call
movs
inc
dec
sub
(bad)
inc
jo
in
cmp
or
and
jae
pop
imul
fmul
in
daa
xchg
hlt
rol
enter
sbb
nop
mov
jmp
enter
and
and
retf
in
xor
push
add
imul
lods
loope
dec
mov
mul
inc
test
mov
push
mov
mov
push
(bad)
pop
adc
jg
(bad)
cmp
inc
or
or
dec
nop
popf
cld
cmp
(bad)
and
mov
cmp
mov
and
popf
cmps
rol
xchg
mov
das
adc
cld
ins
inc
dec
ins
loope
push
xchg
dec
cmp
sub
or
outs
mov
mov
jp
adc
cdq
(bad)
shl
sub
in
or
xlat
aad
jno
fwait
cmp
in
cmp
das
add
ins
aam
jo
scas
xchg
add
or
shl
sti
jg
int
or
push
(bad)
fistp
aas
fldcw
(bad)
out
jno
sub
rol
pop
mov
out
fs
out
mov
mov
push
mov
jb
lahf
rcl
push
test
in
jecxz
jne
push
push
dec
sbb
sub
inc
dec
mov
cmp
pop
movs
and
mov
(bad)
cld
lock
movs
sahf
test
sti
shl
mov
pop
mov
pop
mov
sti
dec
xchg
clc
fidiv
movs
mov
fisubr
das
dec
cmps
jecxz
fs
cli
hlt
je
push
sahf
loopne
aad
push
push
cwde
jns
mov
ret
jnp
out
adc
cmp
out
out
out
ins
dec
fs
or
loopne
mov
ins
mov
in
push
movs
stos
push
(bad)
sub
shl
(bad)
jae
adc
in
test
xor
into
cmp
sbb
xchg
sub
and
stc
mov
rcl
mov
or
sbb
sahf
push
push
cmp
and
sub
and
leave
push
sbb
ss
jmp
rcr
fisttp
cdq
mov
call
push
inc
sub
cmp
(bad)
pinsrw
loop
sub
mov
popa
mov
ficomp
mov
movs
jmp
add
fistp
sbb
es
jecxz
push
add
jnp
ins
scas
je
or
lods
(bad)
cli
into
es
and
xchg
jb
repz
mov
leave
jle
arpl
or
sahf
xchg
(bad)
bound
and
repnz
enter
inc
or
fst
jmp
add
jno
fwait
and
sbb
pop
mov
(bad)
pop
sub
(bad)
push
aad
in
les
mov
jge
(bad)
cmp
push
int3
xchg
inc
lahf
xchg
jnp
mov
sub
jns
cld
sub
retf
mov
shl
inc
or
test
sub
jmp
pop
fs
cmp
neg
js
cdq
inc
pop
jp
add
jae
sub
(bad)
hlt
jle
ds
lods
xchg
ja
xchg
clc
std
push
cmp
sub
push
(bad)
ds
loop
retf
nop
jl
add
retf
mov
les
mov
xor
shr
outs
rcl
xchg
inc
jg
fst
ret
mov
add
cs
je
sub
push
jns
ficom
xchg
push
movs
cmp
add
iret
lock
cmp
push
sub
pop
std
jp
cli
mov
into
imul
jo
sti
stos
xchg
jg
xchg
mov
jno
ret
in
stos
lea
xchg
(bad)
jbe
cmps
dec
sbb
std
aad
out
dec
sub
call
psubd
jl
dec
cmp
js
push
cli
arpl
adc
inc
sub
jl
movs
xchg
(bad)
mov
sbb
data16
push
sbb
mov
lods
retf
jbe
out
pop
jns
in
mov
sub
arpl
and
repnz
arpl
dec
cmps
xlat
mov
cmp
adc
aaa
and
iret
ss
mov
cld
ror
gs
out
mov
or
jecxz
std
movs
mov
add
or
addr16
and
stos
enterw
add
dec
movs
int
jb
sub
cmp
add
dec
jbe
repnz
inc
adc
xchg
mov
in
jge
movs
sbb
in
icebp
test
mov
mov
dec
ja
pop
xchg
adc
aad
cmp
mov
int3
push
call
aas
pop
xor
mov
mov
sub
pushf
outs
dec
(bad)
in
cld
pop
leave
pop
or
ret
in
pop
pop
sbb
stos
sar
repz
dec
iret
mov
arpl
sub
dec
out
push
aas
ret
mov
cmps
daa
clc
sahf
jb
or
outs
pause
mov
hlt
ins
xor
pop
inc
dec
and
fs
(bad)
arpl
fwait
mov
lds
repnz
and
xchg
(bad)
das
xor
mov
push
mov
addr16
js
mov
test
cmp
pop
and
cmp
cmp
jae
add
mov
pop
popf
jl
test
xor
ss
dec
dec
jl
xlat
stos
push
mov
xor
pop
leave
cwde
push
imul
in
mov
push
(bad)
(bad)
mov
mov
jge
pop
sub
push
adc
mov
movs
xchg
mov
push
adc
push
mov
mov
mov
push
xor
mov
pop
clc
xor
sub
sar
iret
outs
push
inc
xchg
pop
adc
mov
sti
inc
add
xor
test
mov
test
jecxz
outs
add
fs
dec
ret
cmps
pop
push
dec
add
push
jns
aam
pop
jo
push
(bad)
xlat
sub
pmulhw
mov
shl
fadd
jns
push
sar
stos
pop
and
arpl
jae
push
loop
mov
cmp
push
pop
(bad)
outs
out
sbb
pop
scas
sbb
(bad)
pop
jno
mov
pcmpgtw
sub
es
out
add
and
(bad)
fist
xchg
mov
cmp
push
mov
ret
scas
cmps
clc
(bad)
jo
fxtract
xor
shl
fsubr
inc
ins
mov
pusha
fcom
stos
mov
mov
dec
scas
(bad)
out
pusha
mov
mov
xor
bound
or
xor
jmp
and
jne
inc
mov
fs
jno
hlt
push
or
dec
cmps
inc
test
lods
mov
loope
sub
ror
scas
out
loop
dec
addr16
jmp
aam
jle
xchg
mov
xchg
in
sub
loop
iret
lods
outs
mov
xchg
mov
cmp
push
pop
push
jno
add
sub
aad
xchg
or
fidivr
dec
sbb
sti
xor
and
in
xchg
sbb
xchg
sar
adc
push
fwait
outs
jmp
shl
adc
out
loopne
sbb
sub
dec
sub
jg
fwait
stos
add
popa
jno
je
mov
ins
cmc
ror
cmp
cs
retf
pop
cmps
(bad)
shl
lods
sti
loopne
lods
and
adc
leave
push
gs
das
pop
jle
xor
loopne
enter
loopne
inc
jns
adc
retf
daa
jns
dec
cmps
pop
shr
inc
push
and
mov
sub
xchg
stc
push
dec
scas
mov
repz
inc
and
mov
push
mov
push
pop
popa
rol
cli
mov
sub
pushf
xor
rcr
mov
(bad)
xor
adc
jns
add
or
repnz
cdq
iret
(bad)
(bad)
xchg
div
mov
mov
adc
jmp
popa
loopne
cmp
lock
jg
bound
hlt
cmp
fisttp
mov
push
je
add
outs
dec
jae
in
ret
mov
mov
test
stc
ret
mov
or
mov
retf
and
ins
loop
push
cmp
gs
xor
adc
mov
inc
ins
enter
adc
pop
ret
inc
jne
not
test
int
adc
pop
bsf
mov
sub
or
jo
cli
jo
stos
bound
(bad)
jmp
xlat
xchg
xchg
xor
dec
xchg
repnz
stos
and
xor
sbb
enter
cwde
cld
aam
dec
xor
xor
mov
and
and
inc
movs
(bad)
in
imul
inc
out
popf
sti
es
popa
mov
mov
mov
js
dec
or
add
jmp
imul
stos
cld
out
js
sbb
or
mov
xchg
xchg
clc
imul
sbb
jmp
add
(bad)
mov
lahf
hlt
jl
retf
pop
add
pop
xchg
adc
push
test
cmp
js
push
jns
jbe
mov
mov
lahf
mov
mov
lods
pop
nop
(bad)
aaa
dec
jle
mov
cmp
iret
fidivr
imul
inc
adc
sub
cli
mov
hlt
ss
(bad)
adc
xchg
stos
jp
jmp
push
xor
dec
jl
and
les
xlat
call
retf
mov
iret
adc
push
mov
rcl
add
xchg
stos
lods
xor
mov
(bad)
std
icebp
ss
lods
or
xor
pushf
daa
xlat
mov
mov
mov
cmp
call
call
mov
jmp
stos
jnp
movntq
cwde
rol
les
aad
dec
cmp
cmp
cmp
in
pop
sbb
in
add
mov
push
mov
out
jle
popf
cmp
push
cmps
in
arpl
das
sbb
xchg
xor
outs
daa
addr16
sub
cdq
push
jns
test
out
mov
cli
(bad)
ss
clc
cdq
stc
std
ficom
push
pop
sbb
clc
or
xchg
xchg
push
call
xchg
dec
int3
jno
cmp
das
hlt
fs
xor
lods
mov
or
dec
add
les
es
ins
mov
fnsave
push
and
and
pusha
mov
out
and
ss
addr16
dec
int
jecxz
push
nop
adc
xor
mov
mov
stos
test
fbstp
cmp
das
sub
sub
cdq
push
int3
pop
rcl
test
cmp
inc
xor
add
scas
test
mov
iret
and
retf
jae
cmc
scas
sbb
sub
pop
mov
cmc
mov
sub
xchg
movs
sbb
sub
jp
enter
adc
push
add
into
(bad)
cmps
cmp
mov
push
dec
xchg
and
cmp
xchg
and
and
sbb
pop
icebp
mov
add
aad
call
push
sbb
or
stos
xchg
adc
xchg
in
nop
jp
or
cmp
mov
retf
popa
xchg
sahf
shr
ja
fs
push
in
retf
pop
fstp
jle
test
jmp
xchg
add
in
mov
xchg
adc
pusha
mov
push
jo
xor
mov
call
repz
push
lea
movs
rcr
mov
test
pop
neg
test
add
nop
test
out
not
sub
mov
push
rcr
and
jmp
mov
pop
dec
push
xor
std
in
jno
ins
mov
jl
sbb
dec
data16
fwait
jne
push
(bad)
arpl
ins
mov
dec
(bad)
cmp
pop
mov
sbb
mov
jge
mov
enter
jb
mov
dec
jo
add
xchg
and
inc
das
pop
pushf
adc
out
(bad)
adc
repz
xor
out
loop
ins
ins
fwait
and
ret
ss
sti
cmps
add
or
xor
sub
inc
push
lods
inc
pop
aas
jmp
xor
test
cwde
cmps
aad
dec
dec
or
mov
xchg
mov
dec
leave
ja
scas
jno
call
call
jmp
dec
sub
outs
jnp
lock
popa
pop
sub
(bad)
xchg
aas
cmp
mov
jb
xor
ret
xor
push
ins
mov
repnz
dec
mov
and
dec
mov
xchg
pop
pop
push
imul
dec
mov
or
or
xchg
dec
fsub
mov
mov
ret
loope
rol
mov
outs
loopne
mov
inc
test
and
test
idiv
mov
xor
bnd
(bad)
mov
mov
fild
jne
lahf
sbb
jbe
xchg
gs
mov
sub
jnp
jle
jl
or
ret
xor
imul
push
(bad)
sub
pop
add
test
sbb
cmp
mov
mov
push
(bad)
imul
lods
sbb
mov
jmp
shl
mov
push
das
and
cmpxchg
addr16
data16
mov
sbb
in
int
mov
dec
xlat
popa
dec
jl
fcom
xchg
into
ins
(bad)
popf
jg
xchg
xor
loop
cmp
mov
cmc
dec
jmp
jne
gs
jl
pop
ins
jae
adc
imul
mov
mul
xor
sub
lahf
or
jle
dec
push
loop
xor
popf
ret
mov
(bad)
test
je
xchg
inc
in
cmps
cmps
xor
call
outs
xor
fcomp
push
ret
xchg
call
inc
shl
add
xchg
jl
inc
jmp
(bad)
xor
jb
outs
cmp
xchg
ins
in
jle
inc
test
mov
(bad)
mov
ds
inc
cld
sbb
shr
mov
inc
in
add
mov
js
mov
sti
leave
inc
cld
je
mov
arpl
add
mov
repz
retf
inc
sbb
fnsave
mov
not
arpl
push
adc
test
jns
js
and
add
fld
sub
xor
cmp
lahf
mov
leave
push
(bad)
mov
cmp
push
jle
gs
ss
enter
rcl
push
fdivp
ja
cdq
adc
sub
and
outs
pusha
mov
push
jle
pop
mov
repz
xor
mov
xor
lods
jmp
mov
sbb
jnp
retf
(bad)
outs
push
test
jmp
push
loop
cmp
lea
not
add
mov
jbe
mov
std
cmp
mov
popa
sub
mov
stc
jne
cld
push
add
lods
xor
in
inc
call
int3
pop
xlat
xchg
ss
inc
sti
sub
shl
out
cwde
mov
dec
cmp
lahf
mov
daa
pop
inc
mov
or
inc
bound
sahf
(bad)
jg
stc
clc
jmp
jmp
ins
xor
shl
sar
neg
icebp
enter
(bad)
dec
mov
dec
jns
or
pop
pop
sbb
mov
inc
dec
into
push
push
add
adc
in
push
test
imul
or
ja
ror
xor
sub
imul
aam
shl
call
stc
jnp
inc
aaa
pushf
cmp
je
bnd
pop
pop
ds
movaps
dec
add
fnstcw
push
cwde
push
in
pop
(bad)
pop
nop
adc
push
xor
mov
xor
mov
or
dec
fmul
pushf
or
loop
mov
ret
(bad)
out
out
dec
mov
cmp
adc
pop
cmp
ret
xchg
arpl
dec
push
(bad)
cmp
iret
cs
loop
lds
scas
push
lahf
adc
sbb
test
ss
pop
imul
jmp
and
xchg
fcomi
and
jp
cmp
fst
retf
popa
and
mov
jge
sub
xchg
rcr
loope
add
jno
mov
inc
pop
pop
mov
add
sub
xor
cmps
shl
int3
add
pop
ja
scas
cmp
jns
mov
cmps
ins
iret
(bad)
pop
inc
shr
or
mov
rol
fwait
pop
rcr
sti
dec
rcl
dec
mov
loopne
in
or
fsubrp
test
mov
push
and
push
fs
aam
es
in
mov
fs
sbb
add
movs
and
or
aaa
mov
mov
mov
ret
in
aam
test
pop
push
mov
jle
jmp
ins
mov
dec
sbb
in
or
popa
mov
sbb
xor
outs
add
jecxz
lods
or
jne
mov
jo
push
sub
out
add
stos
or
or
mov
push
in
je
xchg
inc
call
sub
and
(bad)
out
mov
jg
sbb
into
mov
aaa
bound
aad
lods
out
sbb
push
les
sub
(bad)
push
or
(bad)
jbe
mov
dec
push
adc
nop
pop
xor
dec
xlat
or
or
dec
sbb
dec
mov
pop
out
add
imul
inc
cmp
das
jbe
dec
popf
retf
lock
jb
rol
aad
push
dec
mov
clc
cli
in
pop
dec
pop
jnp
push
dec
movs
push
repnz
repnz
cmp
mov
imul
fist
add
test
dec
lea
pop
lock
mov
dec
sbb
jmp
shl
aad
sbb
in
or
cmp
xor
add
pop
sti
add
fistp
mov
dec
sub
iret
in
hlt
sbb
and
pop
data16
jbe
int
scas
cdq
inc
sub
push
(bad)
ins
sahf
loope
mov
jle
and
mov
stos
icebp
hlt
push
repz
jge
clc
leave
scas
xor
les
cwde
inc
inc
scas
xchg
push
(bad)
sbb
cmp
not
pop
dec
ds
sub
out
enter
in
push
adc
ror
dec
pushf
leave
add
push
xor
inc
je
pushf
bound
jbe
cmp
cmp
mov
dec
inc
jl
xchg
lods
lahf
movs
js
xchg
repz
sbb
mov
inc
xchg
jmp
mov
cmp
popf
(bad)
ds
mul
jbe
test
jo
dec
sub
adc
(bad)
pop
push
cmp
popf
cmp
sbb
sub
pop
ds
repnz
inc
std
xchg
rcl
jecxz
fstp
fs
mov
aas
(bad)
fsub
dec
loopne
pop
pop
cli
aas
mov
in
movs
adc
out
or
cmp
xchg
push
xchg
nop
xlat
push
lods
mov
gs
adc
cmc
(bad)
cmp
icebp
aad
mov
ror
or
data16
cmps
push
add
add
jns
jecxz
pop
lahf
fdiv
pop
jne
jecxz
lahf
enter
sub
jne
stc
mov
sub
jmp
arpl
test
adc
add
pop
repz
dec
nop
xchg
pop
(bad)
lds
mov
xchg
ror
xor
or
xchg
test
test
push
inc
pop
lock
mov
scas
add
xchg
jnp
adc
adc
sub
or
or
fnsave
inc
repz
mul
dec
inc
imul
push
push
pushf
sub
bnd
sahf
call
repnz
mov
mov
aas
sahf
inc
sbb
cdq
cwde
xor
daa
jle
jae
test
mov
jne
adc
daa
mov
mov
cmp
cmps
xor
call
jns
jmp
daa
clc
mov
inc
push
(bad)
std
cs
mov
pop
outs
jbe
cs
jnp
mov
xchg
xor
(bad)
jb
aas
ror
mov
popa
call
or
ins
xor
out
jl
add
test
bound
bnd
in
add
xchg
mov
popf
test
lock
aam
xor
push
pop
mov
xchg
pop
sub
xchg
fidiv
xlat
das
push
rol
dec
xor
mov
cmp
je
add
int3
test
add
xchg
dec
mov
or
jns
stos
mov
cmp
mov
mov
iret
scas
pop
or
sub
into
(bad)
xor
out
mov
or
mov
cwde
retf
std
adc
mov
clc
lods
xchg
outs
stos
mov
loop
xchg
das
in
call
mov
mov
adc
mov
jl
inc
xchg
cs
mov
(bad)
rcr
leave
ret
in
leave
neg
inc
fstp
xchg
xchg
xchg
daa
loop
cld
in
test
iret
(bad)
push
mov
lds
mov
int
cmp
(bad)
pop
mov
js
movs
popa
sub
clc
lods
(bad)
ds
pop
ins
jl
jp
in
rcl
xor
pusha
sar
mov
in
iret
sbb
je
stc
inc
dec
retf
pop
dec
xchg
pop
inc
test
push
ret
sahf
iret
sbb
nop
mov
bound
and
sub
fstp
std
sbb
es
mov
fsubr
xchg
cmp
stc
mov
pushf
mov
jl
(bad)
das
(bad)
jmp
mov
clc
pop
enter
popf
push
jmp
or
mov
cmovl
jmp
scas
xor
fsubr
mov
sbb
mov
dec
add
pop
lock
xchg
cmp
sahf
gs
inc
fsub
xor
push
mov
outs
js
add
dec
jmp
jg
jns
jno
mov
add
sbb
adc
rol
xchg
test
sub
mov
cmp
add
xchg
scas
dec
jnp
mov
jmp
shl
ins
scas
popa
lods
jo
in
cld
or
dec
cmp
cmp
pop
shl
out
out
fisttp
repz
jp
xor
dec
outs
repnz
cli
ss
test
mov
(bad)
call
out
push
push
mov
mov
mov
mov
push
dec
ins
call
jo
stos
add
mov
and
mov
cmp
mov
nop
pop
xor
jge
jecxz
mov
arpl
push
mov
push
repnz
aad
(bad)
hlt
retf
(bad)
enter
push
stos
and
pop
xor
nop
sub
xor
jp
enter
dec
xor
jmp
xor
rep
push
add
ins
cld
jb
dec
sbb
cmp
jmp
clc
pop
test
retf
js
mov
push
mov
cmc
out
jecxz
pop
sbb
into
sub
pop
adc
sar
dec
cmp
gs
lea
(bad)
pop
pop
xor
rol
or
mov
xchg
std
jns
cdq
jb
lds
call
jno
stc
mov
pop
xor
push
fs
push
stc
mov
xlat
or
ins
cli
mov
fisttp
cwde
jmp
xor
mov
sub
push
cmc
pop
mov
ins
dec
div
inc
or
mov
inc
fild
dec
pop
(bad)
(bad)
rol
pop
xor
cmc
jns
stos
push
cdq
pop
ins
shl
xor
cmp
mov
movs
(bad)
jae
call
cmp
push
imul
or
outs
in
int3
loop
dec
push
cmp
js
fisub
scas
leave
test
mov
inc
(bad)
mov
dec
imul
ror
fsub
xchg
ret
out
push
mov
int3
mov
and
mov
fild
ja
movs
inc
hlt
xchg
adc
iret
push
cmp
mov
fcmovb
out
xchg
mov
jns
jmp
es
pop
leave
loopne
adc
mov
es
add
mov
jb
mov
jge
add
adc
clc
push
in
cmp
sub
adc
push
int
mov
adc
xchg
sub
in
push
push
pop
repz
and
jmp
push
iret
loope
xor
leave
mov
jl
pop
aam
arpl
test
or
push
arpl
lods
cmc
cmp
jne
adc
xlat
dec
sub
cs
in
mov
or
and
outs
mov
icebp
push
loope
stos
fwait
je
push
pop
pushf
daa
inc
aad
cmp
les
out
aas
pop
cdq
push
shr
push
xor
jmp
inc
shl
sub
push
aam
dec
mov
pop
scas
cld
and
repnz
xchg
mov
out
int3
cmp
inc
stos
dec
inc
mov
sbb
jnp
inc
cmps
not
out
fs
adc
jne
in
std
test
cmp
sar
dec
stos
add
mov
ins
clc
mov
push
mov
sti
dec
leave
inc
dec
loop
mov
push
sub
jbe
daa
sub
arpl
lds
cmps
scas
dec
sub
add
call
mov
mov
jne
dec
pop
cmp
pop
and
in
(bad)
xchg
sahf
xor
cmps
push
pop
sbb
dec
aad
loopne
and
xor
ss
in
push
cmps
mov
sbb
retf
sub
and
outs
push
mov
scas
sahf
mov
adc
outs
loopne
add
test
jecxz
cwde
bound
add
mul
ds
adc
imul
or
loop
je
jg
inc
pop
mov
push
loope
(bad)
mov
sar
jg
sub
adc
int
xchg
jecxz
mov
es
sbb
sub
push
cmp
shl
in
mov
adc
dec
(bad)
ja
nop
push
dec
and
movs
cmp
aas
or
movs
rol
lods
dec
scas
jmp
(bad)
lds
imul
sbb
mov
(bad)
or
add
lods
fwait
les
jo
in
adc
(bad)
jae
sbb
scas
push
nop
cmp
rcl
es
fmul
or
test
fist
rol
adc
(bad)
cmp
jne
jne
(bad)
fadd
sub
div
clc
enter
es
out
rcl
dec
leave
call
mov
sub
mov
jge
fisubr
dec
shr
sahf
xchg
jmp
sub
or
fbld
push
mov
nop
jle
push
stos
out
nop
xchg
sahf
pop
in
std
ins
(bad)
mov
sbb
test
push
or
pop
jge
jg
inc
test
xchg
and
mov
outs
jmp
call
(bad)
sub
daa
dec
jg
add
inc
and
jmp
and
dec
mov
fistp
mov
nop
dec
xchg
std
loopne
sub
cld
cmp
jbe
not
stos
mov
scas
or
bound
ins
adc
mov
add
test
fcomp
xchg
jge
ds
es
mov
pop
scas
fstp
xchg
shl
(bad)
ss
int
loopne
ret
test
adc
test
ret
mov
jg
cmps
sbb
push
rol
mov
sub
inc
lods
jbe
mov
cli
mov
movs
adc
leave
test
out
sub
jecxz
popf
dec
movs
add
out
aas
mov
mov
or
into
jp
mov
stc
adc
lds
leave
in
jp
mov
cmp
add
jns
cmc
mov
xchg
xor
xchg
pop
cwde
or
xchg
add
adc
int
gs
or
jae
push
imul
scas
mov
jo
push
cmc
scas
xchg
lods
int
jb
mov
mov
sub
dec
jmp
mov
ds
mov
je
stos
in
test
scas
xlat
jae
jge
sub
in
popa
jle
ret
adc
and
and
rol
scas
adc
pop
sub
daa
stc
xchg
cmp
add
push
sub
sub
cs
jge
pop
ret
pop
jae
aam
inc
or
pop
xchg
fldcw
push
shr
pusha
cmp
xchg
(bad)
sub
dec
or
les
rcl
call
fst
retf
fistp
stos
ins
or
xlat
es
icebp
cmps
push
clc
sbb
retf
pop
loop
aad
mov
or
in
mov
sbb
icebp
dec
shl
mov
ret
xchg
retf
mov
mov
out
push
imul
ins
jnp
out
sbb
cmp
and
jecxz
jge
into
fsubr
hlt
out
clc
cs
push
xor
jb
pop
(bad)
sahf
(bad)
mov
call
jp
and
sub
test
fs
xchg
pushf
lea
xchg
and
jp
add
mov
sbb
mov
js
mov
mov
fwait
aaa
mov
adc
cmps
xor
or
jb
sub
pop
jo
ins
push
lock
dec
add
jmp
sar
inc
pop
xchg
push
sub
pop
and
rol
jb
call
mov
mov
mov
(bad)
jmp
mov
inc
push
dec
inc
inc
xchg
call
clc
pop
cld
and
jo
movs
ins
jp
(bad)
jmp
add
pop
inc
mov
or
cmp
imul
das
mov
or
test
loop
lods
mov
cmp
jecxz
mov
jge
push
and
stos
mov
movs
mov
je
or
pusha
cmp
push
mov
adc
inc
fist
sub
inc
pop
ror
sub
sub
or
xor
or
xchg
mov
dec
arpl
push
xchg
pop
inc
dec
push
lods
shl
jns
js
bound
push
cmovge
push
daa
pushf
add
pop
repnz
and
jmp
mov
pop
dec
push
pop
nop
lods
pop
jp
sub
fcos
inc
add
call
cmp
jl
pop
iret
movs
cmp
loope
in
ds
call
clc
jmp
mov
pop
div
sti
pop
xchg
clc
vcvtdq2pd
ror
enter
inc
dec
mov
mov
out
repz
loope
mov
sub
ret
stos
pop
sbb
xor
mov
fld
mov
mov
or
adc
mov
cmp
mov
jns
and
xor
push
add
add
aam
inc
icebp
test
cmp
mov
jmp
push
cmps
sar
push
cmp
cmc
jne
fild
(bad)
into
inc
sub
push
stc
in
inc
lea
adc
cdq
sbb
mov
pop
inc
dec
daa
test
in
inc
call
or
sti
xor
push
or
xchg
push
lea
cmps
jb
sbb
mov
test
jnp
lock
pushf
in
dec
sbb
std
out
loop
dec
cs
or
leave
out
xor
das
popa
data16
add
out
push
mov
mov
test
call
ror
or
dec
mov
xor
loope
pop
pop
xchg
pusha
xor
xchg
retf
pop
out
push
sbb
xchg
adc
adc
jge
sbb
stc
or
loop
inc
dec
adc
or
push
dec
addr16
push
test
push
movzx
pusha
xchg
xchg
fucompp
ja
dec
mov
xor
fwait
sti
cdq
mov
add
fstp
gs
cld
dec
push
inc
in
and
inc
mov
mov
and
mov
test
pop
movs
fstp
inc
add
pop
mov
xchg
ja
retf
dec
mov
jmp
fdiv
sub
lds
jecxz
adc
xchg
sbb
rep
retf
xor
out
jno
pop
jne
ss
mov
inc
add
fild
xor
or
pop
arpl
dec
repz
movs
xchg
adc
jg
sar
inc
pop
enter
mov
sbb
jg
jo
mov
cmp
mov
movs
push
fs
sbb
xchg
sub
sar
or
cld
push
(bad)
xchg
pop
cwde
mov
leave
les
mov
popf
and
sub
cmp
xor
sbb
xor
pop
(bad)
pop
clc
fs
cli
push
les
(bad)
jae
mov
mov
fs
jge
mov
jp
jp
ret
push
inc
shl
or
retf
(bad)
cwde
mov
rcl
test
cs
aaa
call
jne
out
add
fwait
and
cmp
cmp
ror
push
fld
xchg
sub
xor
adc
xor
jne
mov
inc
clc
sar
adc
sar
and
push
rcl
push
mov
inc
int3
push
mov
int
jbe
fiadd
pop
je
ss
loopne
sbb
xchg
inc
lods
popa
mov
retf
dec
ret
pushf
fsubr
xlat
fs
aas
or
loopne
es
push
div
mov
lock
jns
add
stos
add
es
ins
addr16
mov
not
fucom
iret
mov
cmc
jecxz
and
lods
dec
xor
sbb
push
jae
dec
jnp
je
es
(bad)
movs
xor
aad
jbe
push
imul
cmp
sbb
dec
popa
adc
fcmove
xor
cmp
add
mov
out
fimul
fld
retf
jmp
add
mov
outs
mov
pushf
pop
(bad)
aas
out
mov
inc
imul
jg
pop
push
sbb
sbb
jecxz
dec
pushf
hlt
jo
shl
mov
addr16
sar
into
mov
or
jl
mov
ins
or
repz
(bad)
jmp
fcmovb
mov
pop
mov
xchg
jno
std
adc
sub
loope
push
xor
pop
pop
mov
cld
mov
mov
sti
test
inc
test
call
or
jg
mov
std
hlt
add
jbe
lock
dec
push
push
dec
mov
imul
shl
movs
xor
jb
jne
int3
push
movs
(bad)
push
or
ds
ss
mov
pop
mov
fwait
imul
into
sub
test
fbld
inc
test
push
xchg
mov
mov
dec
mov
mov
out
cmps
nop
out
jl
pop
leave
xchg
cmps
push
dec
mov
addr16
or
push
in
imul
mov
int3
mov
xchg
jl
sbb
mov
sbb
mov
and
loop
push
or
xor
push
inc
sbb
callw
xor
cdq
enter
jnp
dec
push
cdq
jecxz
jl
xchg
sbb
repnz
xor
cmp
sbb
(bad)
arpl
jae
das
inc
(bad)
push
dec
jmp
push
mov
mov
xchg
popa
stc
inc
lods
dec
mov
xchg
loopne
pop
loope
add
in
dec
test
cs
cmp
pop
sbb
out
test
mov
xlat
bound
es
inc
mov
(bad)
jecxz
pop
int3
sti
in
jecxz
aaa
xor
ja
inc
sub
mov
loopne
clc
pop
dec
sub
cwde
cmps
enter
xlat
push
mov
jb
push
adc
fiadd
add
push
pop
mov
daa
mov
xor
fsub
mov
push
sub
ins
mov
lods
xchg
pusha
mov
add
push
sbb
das
test
adc
ror
xchg
jecxz
push
outs
int3
or
jo
hlt
das
cwde
scas
or
int
or
sbb
cmps
dec
(bad)
ds
loop
out
lock
jae
retf
rcr
pop
fmul
mov
in
xchg
and
dec
pop
popf
cmp
cmps
mov
jo
leave
mov
icebp
sbb
xor
std
inc
mov
fbstp
icebp
dec
jnp
lahf
fwait
gs
dec
push
push
sub
cmp
call
cmp
or
or
stc
push
push
push
xchg
inc
jg
fisttp
add
lea
xchg
aas
daa
shl
cmp
hlt
mov
not
adc
std
or
repz
mov
pop
jp
ret
bnd
jns
loop
ds
into
(bad)
jl
cmp
xor
inc
dec
xor
lock
out
call
and
cmp
sub
cmp
mov
shl
sbb
push
or
mov
outs
adc
inc
xor
adc
mov
jp
pop
sub
btr
ins
shl
dec
inc
sub
(bad)
cmc
je
cld
loope
adc
(bad)
sti
and
test
adc
aaa
jae
pop
pop
push
xchg
neg
ret
or
dec
sar
inc
add
sub
aam
stos
or
mov
gs
fucomp
fldenv
mov
jbe
loope
test
mov
scas
retf
mov
scas
add
aam
ret
xchg
jnp
cmp
dec
pusha
xor
xor
popa
sub
jae
pushf
pop
pop
std
xor
rcl
ret
enter
or
js
inc
cwde
dec
fmul
mov
cmp
outs
nop
jo
mov
and
sbb
gs
cmps
xlat
cmp
icebp
pushf
fcom
push
adc
sub
pop
add
pop
cmp
sbb
in
push
sbb
cmp
mov
mov
inc
fnstenv
mov
movs
and
xor
retf
lods
add
mov
add
sbb
jae
xlat
retf
pop
(bad)
dec
lea
push
jp
aam
add
mov
div
(bad)
pop
call
dec
cwde
loopne
cmp
dec
shl
push
test
mov
xor
xor
popa
ret
lods
push
push
add
std
or
fistp
mov
loop
mov
sbb
jmp
push
jo
cmp
sbb
fstp
ror
adc
lock
int
and
adc
push
dec
popa
pop
jge
dec
inc
sbb
jmp
hlt
fxch
repz
mov
cmp
adc
call
jmp
into
push
int3
mov
ins
dec
cdq
xchg
pop
or
out
mov
sub
mov
push
(bad)
push
leave
mov
sub
sub
retf
int3
pop
std
fs
cmp
jmp
(bad)
jnp
sub
push
mov
jbe
add
ins
jb
sbb
(bad)
xchg
sbb
mov
push
inc
mov
gs
pop
inc
mov
jmp
push
shr
test
adc
xor
call
sub
pop
jbe
clc
jb
fwait
adc
sub
and
inc
and
shl
and
dec
sbb
lock
push
pop
xchg
shl
lods
add
mov
rcl
pop
sbb
cmps
mov
scas
sub
pop
es
mov
cmp
jns
sahf
(bad)
push
cmc
jle
jns
cmps
cmp
or
sbb
mov
and
adc
jb
dec
mov
fdivr
clc
mov
(bad)
rcr
xchg
push
pop
xchg
popf
lea
and
popa
or
fbld
popa
jo
mul
sub
(bad)
mov
nop
stc
pop
add
call
(bad)
push
loope
psrld
push
ja
pushf
data16
les
cmp
push
cmp
ss
mov
fld
mov
mov
fcomp
fst
xchg
rol
and
mov
jne
aam
sbb
arpl
movs
sbb
iret
and
jg
fst
lahf
add
xchg
cdq
jnp
mov
pop
xchg
inc
ja
call
in
adc
in
sbb
into
adc
or
add
sbb
fsubr
mov
push
push
gs
cmp
or
mov
xor
add
sbb
retf
cs
push
sahf
test
push
loope
or
(bad)
(bad)
adc
aam
inc
test
retf
bound
push
jg
pop
jmp
repz
imul
cmc
pop
scas
cmps
cmp
and
retf
fsubr
cmp
push
stos
stos
(bad)
jecxz
inc
ss
test
adc
xchg
add
shr
aam
addr16
lods
mov
or
push
mov
loop
and
mov
in
in
sub
(bad)
les
and
xor
test
dec
cmps
xor
fdiv
jno
retf
(bad)
jae
enter
ins
scas
dec
add
jns
or
lock
mov
out
scas
lahf
mov
test
cmps
arpl
out
sub
jne
inc
xor
xor
xor
scas
pop
or
cmp
iret
mov
pop
jb
push
in
fcom
out
dec
outs
mov
add
stos
mov
cmps
rcl
mov
xor
in
jb
hlt
int3
push
(bad)
imul
and
jecxz
mov
sbb
push
pushf
sbb
pop
inc
ds
inc
shr
jbe
dec
in
int
xchg
mov
and
or
js
test
or
dec
idiv
jo
sti
aas
call
fcomp
jmp
hlt
pushf
sub
xlat
add
xlat
hlt
sbb
ficomp
pop
icebp
icebp
popa
repz
jne
call
jb
stc
scas
jnp
xlat
xor
mov
push
outs
cmp
jae
aam
fcmovb
add
cmp
rcr
xchg
stos
inc
(bad)
out
jo
shr
cs
sahf
adc
scas
sbb
addr16
fild
iret
jmp
(bad)
mov
popa
xchg
sbb
dec
xchg
and
mov
retf
mov
ds
jge
js
shr
dec
add
jo
cli
and
jg
imul
ficom
adc
or
out
imul
or
lock
not
dec
shr
out
out
das
jo
enter
aam
adc
jmp
stos
js
pop
pop
outs
xchg
popa
test
fwait
in
add
mov
shl
scas
icebp
sbb
in
xlat
mov
mov
or
iret
jmp
ins
ins
inc
dec
popf
cs
jecxz
mov
ja
inc
sahf
ret
arpl
mov
and
mov
adc
das
adc
fcmovne
cli
add
fwait
repnz
fsub
jb
mov
mov
int
mov
sub
test
rcl
adc
aam
mov
add
in
test
jb
popa
retf
(bad)
push
push
daa
out
pop
sbb
inc
cmp
(bad)
je
sbb
loopne
shl
bound
out
ret
cmc
cmp
das
(bad)
mov
iret
push
fidivr
je
add
aas
out
add
stc
or
movs
xor
jo
rcr
cmp
mov
jmp
repz
out
jl
dec
pusha
add
add
sar
push
imul
xchg
stc
pop
jo
sar
fdivrp
push
stos
lods
dec
loope
inc
fs
sub
cwde
call
sub
cmps
adc
lock
mov
inc
out
pop
add
inc
mov
inc
mov
movs
leave
jge
sahf
jns
lock
rsqrtps
sbb
aaa
bound
call
pop
pushf
mov
test
xor
or
pop
adc
push
sbb
lahf
inc
loope
fs
push
mov
mov
or
sub
inc
dec
(bad)
aas
outs
dec
out
loope
lock
icebp
push
or
(bad)
sub
jp
fild
jno
xlat
icebp
stc
jle
call
xor
leave
mov
pop
jae
call
inc
jmp
xor
jnp
sub
shr
push
fnstcw
(bad)
cs
loop
(bad)
test
pop
cmp
xor
fdiv
push
mov
test
mov
xchg
out
dec
cmp
mov
std
cmp
add
fcom
and
clc
sbb
sub
or
mov
movs
push
mov
retf
inc
stos
mov
mov
enter
es
sbb
cmp
daa
lock
stos
in
rcr
fnstenv
jbe
cmc
imul
ret
inc
and
out
pushf
inc
add
add
add
jg
inc
scas
mov
lods
fbstp
push
dec
shl
mov
add
(bad)
fcmovnb
push
push
xor
call
ins
mov
rol
cmp
ret
rcr
xlat
jp
jns
call
xor
mov
sub
xor
les
pop
sbb
xchg
adc
jge
aam
jnp
stos
pop
jmp
and
mov
mov
push
(bad)
icebp
popf
mov
pop
out
adc
call
cli
pushf
or
add
jg
sub
adc
jmp
fwait
mov
jmp
inc
iret
mov
xor
push
mov
icebp
lods
unpcklps
je
jb
(bad)
fsub
fisttp
jo
cmps
loopne
mov
add
call
inc
xlat
loop
inc
shl
sub
sti
xchg
test
inc
or
dec
stos
hlt
add
cmp
ja
sub
xor
jmp
xchg
add
das
add
loopne
(bad)
imul
ror
dec
fwait
jp
(bad)
jmp
mov
mov
das
inc
gs
shr
push
icebp
nop
add
repnz
and
loopne
mov
mov
dec
inc
outs
bound
sbb
add
cmp
ss
lods
in
jbe
mov
pop
pop
xor
in
pause
jmp
xchg
ret
stos
(bad)
aad
mov
pusha
ins
sar
add
rol
inc
outs
jmp
fs
push
enter
call
jle
pop
mov
shl
mov
mov
mov
and
push
scas
and
fisttp
xchg
cmp
test
cwde
jbe
add
fcom
imul
mov
int
inc
test
enter
push
or
push
not
cli
sub
jnp
jnp
mov
push
adc
inc
mov
mov
cdq
pop
aaa
jg
push
jle
inc
lock
or
mov
push
push
ret
xchg
shl
add
dec
das
scas
jbe
dec
(bad)
push
test
lahf
sbb
inc
loope
jae
call
push
into
pop
adc
clc
enter
das
sub
xor
imul
pop
loope
sub
xor
pop
sub
jmp
sbb
pusha
(bad)
cmp
mov
xchg
xor
inc
iret
and
pop
sbb
js
add
shl
mov
push
ss
push
int
or
iret
popa
daa
lahf
in
pop
fdiv
dec
fmulp
dec
xor
stos
neg
add
adc
loopne
out
jle
or
add
mov
sub
sbb
add
jnp
pop
and
or
mov
push
pop
shr
and
and
or
ins
add
adc
sbb
dec
sbb
sbb
popf
xor
stos
shl
sbb
jmp
mov
fisttp
(bad)
mov
mov
cmps
sar
dec
push
inc
je
cmc
pushf
and
pop
call
mov
(bad)
fisttp
sub
mov
jmp
std
rcr
mov
xchg
fwait
out
mov
pop
out
xchg
pop
push
and
adc
imul
pusha
xlat
xchg
cmps
xchg
out
pop
fcomp
or
clc
pushf
enter
pop
xchg
add
cwde
jecxz
imul
push
pop
inc
loop
scas
ins
mov
xchg
popa
mov
pop
outs
dec
mov
call
mov
pop
jns
sbb
cmps
inc
inc
inc
adc
inc
fist
inc
ins
or
push
mov
sbb
dec
add
cmp
(bad)
jns
nop
and
mov
dec
sbb
add
inc
rcr
int
sbb
test
(bad)
jmp
push
lock
mov
shl
xchg
sbb
stos
jb
xchg
adc
cmp
clc
jl
sub
adc
leave
scas
push
ds
inc
shl
xchg
das
aad
mov
cmp
fistp
daa
sbb
jl
add
add
rcr
jbe
adc
(bad)
cli
mov
ficom
or
mov
lahf
retf
jl
cmps
fadd
lea
pushf
sti
cs
stc
pop
dec
cmc
cmps
mov
out
jno
cs
dec
fucom
hlt
fmul
int
mov
jns
out
rcl
bnd
mov
(bad)
daa
add
outs
fwait
popa
xlat
cmp
add
sbb
mov
sub
jle
cmp
cmps
out
nop
std
mov
lods
gs
stos
dec
mov
dec
push
scas
inc
inc
sbb
mov
lods
loop
dec
(bad)
push
enter
jne
popa
dec
xchg
mov
add
adc
mov
dec
adc
out
mov
fs
or
cmp
lahf
jae
in
lods
cmps
cmp
mov
push
push
into
rol
in
leave
mov
or
add
or
lds
mov
adc
lahf
jl
jo
(bad)
scas
add
inc
push
pop
cmp
or
jo
jg
jb
out
fmul
xchg
ins
(bad)
push
add
(bad)
xor
test
das
add
not
xchg
cli
xchg
fild
mov
sbb
hlt
into
jge
cmp
leave
std
adc
ins
dec
inc
add
and
psubb
test
push
lods
mov
and
and
stos
push
pop
mov
push
push
dec
sbb
adc
rcr
scas
pop
nop
lahf
shr
test
mov
jge
daa
js
or
sbb
cmp
inc
addr16
lahf
cmc
cli
movs
fs
inc
jecxz
sub
loope
adc
cwde
cmc
repz
mov
mov
mov
lods
sub
call
fnstenv
push
xchg
sub
jb
and
sti
repz
push
dec
xor
and
sbb
sub
cmc
dec
jecxz
sub
(bad)
mov
test
(bad)
or
push
clc
cmps
lock
rcl
popa
and
enter
pop
mov
enter
jo
shr
cmp
adc
mov
stc
cmp
or
push
pop
mov
jmp
loopne
jle
aaa
icebp
sbb
dec
push
popa
and
jmp
xchg
inc
ja
dec
imul
stos
push
xchg
cmp
cmp
sbb
(bad)
mov
out
cmps
inc
cmp
sbb
xchg
mov
ror
add
sub
lahf
mov
or
lahf
dec
cmps
cld
ja
jne
jne
fnstenv
mov
mov
out
clc
leave
adc
cld
outs
inc
jns
xchg
xor
out
pusha
jle
xor
dec
inc
jae
retf
movs
xchg
int3
cli
enter
in
outs
ins
iret
mov
add
pop
or
fild
cmps
pop
or
fsub
(bad)
call
mov
inc
test
pop
mov
movs
sahf
pop
sub
in
stos
movs
xchg
xor
js
into
movs
cmps
lahf
fcom
add
es
and
sub
sub
push
inc
xchg
into
xchg
test
pop
cmp
call
fdiv
test
xchg
push
add
jno
outs
mov
push
sbb
add
call
sub
sub
scas
ret
rol
aam
and
or
and
popw
mov
xchg
leave
lock
xchg
daa
movs
cmp
fadd
add
or
test
pop
repnz
ins
cmp
xchg
sahf
cmp
push
xchg
ret
loop
loop
jmp
int
icebp
sub
in
push
arpl
cld
sti
stos
add
mov
mov
pop
sahf
push
sbb
outs
inc
jne
aam
div
push
or
(bad)
int3
lea
in
outs
ja
aam
leave
daa
jg
mov
sbb
xchg
adc
add
pop
fild
jmp
inc
adc
cld
mov
xchg
inc
add
test
fdivr
into
inc
jmp
mov
or
pop
push
cmp
xor
(bad)
xchg
sbb
push
in
out
cdq
test
jno
xchg
pop
cli
(bad)
out
arpl
cmps
xlat
mov
sub
ds
in
int
mov
jl
or
pop
js
addr16
xor
inc
push
icebp
(bad)
pop
int3
jmp
push
mov
xchg
ss
xchg
xor
sub
jne
mov
jl
sub
add
inc
mov
mov
inc
call
call
inc
scas
mov
cmp
xchg
shl
cmp
cmp
adc
mov
adc
pop
mov
or
mov
not
stos
add
sub
neg
or
repz
hlt
iret
or
and
stos
adc
jae
pop
out
test
clc
sub
xchg
imul
dec
jl
js
push
je
xchg
ins
div
cmps
lea
or
dec
dec
ds
sbb
mov
into
out
jg
push
rep
xor
cs
fst
outs
push
push
sar
jge
pop
out
inc
inc
and
fiadd
dec
outs
cmc
arpl
pop
add
pop
dec
cdq
nop
jl
xchg
sbb
sahf
fist
rol
aaa
sub
add
adc
call
fdiv
pusha
dec
push
imul
sub
bound
dec
inc
mov
adc
jp
inc
xor
jae
or
neg
leave
fist
or
inc
in
mov
shl
add
mov
inc
sbb
sub
mov
lock
mov
daa
dec
xchg
add
arpl
mov
dec
int3
loop
mov
sub
fdiv
popf
xchg
pop
dec
dec
mov
xchg
icebp
sar
fcomp
push
or
sti
in
bound
nop
push
shl
stos
jecxz
pop
sar
and
bound
ret
in
cmp
in
cli
int3
(bad)
ds
fisub
push
aam
push
cmp
jbe
jp
pop
out
pop
iret
les
and
jbe
call
xchg
sub
je
jno
ins
aad
out
xor
adc
mov
clc
cmps
rcr
in
or
fwait
test
mov
mov
sti
in
in
and
sub
arpl
sub
sbb
jns
jne
or
mov
mov
add
adc
or
sar
ret
mov
sub
test
or
popf
cli
mov
mov
mov
jmp
fld
inc
inc
inc
std
lock
jmp
enter
jo
rol
push
mov
aad
lods
push
and
push
sub
dec
test
outs
jecxz
and
int
scas
push
or
mov
je
dec
jnp
mov
imul
scas
movs
ror
inc
ror
sub
add
(bad)
and
fucomp
dec
out
(bad)
pop
xor
fisub
and
test
inc
sub
into
add
dec
(bad)
rcl
pushf
jecxz
mov
mov
arpl
adc
imul
fs
mov
out
and
pop
cld
(bad)
(bad)
imul
cmc
mov
jmp
out
jp
icebp
mov
hlt
cmp
retf
and
sbb
ror
jbe
lods
leave
xchg
pop
inc
lods
rol
inc
or
inc
in
ja
inc
test
outs
jmp
cmp
jmp
push
jno
dec
lds
loop
add
je
inc
fsub
std
leave
pop
lods
aas
inc
gs
test
jmp
rcr
push
mov
jle
aad
or
xchg
cmc
dec
adc
cmp
cli
adc
pop
stos
mov
xor
cmps
test
mov
outs
in
shl
ins
and
push
or
sar
xor
imul
fincstp
add
mov
and
dec
cli
mov
shl
dec
jns
out
jecxz
xlat
pop
mov
div
movs
mov
pop
lods
add
retf
lods
mov
jge
inc
jns
pop
movs
inc
cdq
push
jecxz
std
adc
xrelease
push
mov
pushf
and
pushf
adc
addr16
or
arpl
sbb
ret
fidivr
movs
shr
stc
test
cmp
dec
add
xchg
retf
push
and
daa
mov
adc
xor
mov
jno
shl
inc
push
pop
xchg
pop
mov
mov
(bad)
or
rcl
hlt
shl
push
xchg
mov
xor
cld
mov
icebp
mov
mov
popf
or
ja
jecxz
mov
loop
sub
arpl
test
push
adc
cli
loopne
mov
(bad)
ds
adc
pop
push
and
xchg
or
pop
les
pusha
adc
loope
loopne
(bad)
test
cwde
bound
push
ins
xchg
pop
into
pop
pop
sbb
xor
ds
cmp
bswap
dec
sbb
add
inc
push
dec
(bad)
movs
sub
mov
nop
out
jmp
cmps
dec
xchg
movs
in
imul
shl
xlat
jge
call
cdq
inc
dec
fwait
cmp
mov
mov
retf
cmps
ss
mov
sub
dec
fsub
cmp
loopne
retf
retf
cmp
mov
xor
mov
xchg
and
xchg
fisubr
jno
pop
xchg
loopne
or
pusha
(bad)
mov
pop
mov
(bad)
push
stc
push
push
fist
xchg
movs
repnz
(bad)
fisttp
popa
cs
jbe
dec
mov
mov
bound
push
xor
xchg
mov
push
(bad)
or
adc
sahf
mov
xor
add
jg
ja
or
rol
and
mov
sub
lods
jmp
dec
jmp
aas
cdq
pop
das
xchg
stos
fsin
in
push
aad
call
xor
call
fsubrp
mov
jno
popa
adc
test
add
in
jno
int
adc
cmp
pushf
shr
repnz
enter
hlt
push
dec
test
or
mov
push
outs
rcr
add
jne
stos
addr16
mov
cmps
jge
cmp
shr
data16
or
xor
enter
mov
or
ins
mov
mov
push
adc
outs
mov
sub
shl
push
movs
loop
idiv
test
jbe
cmps
or
add
jmp
adc
mov
mov
idiv
pop
stos
out
loopne
and
in
lea
mov
ret
pusha
sub
or
(bad)
dec
add
or
jg
xchg
aas
mov
pop
sbb
pop
ins
or
ins
clc
inc
and
pop
int
loopne
push
sbb
sbb
bound
push
adc
xor
push
cmp
jnp
aaa
je
lods
pop
cmp
sub
sti
mov
and
mov
jnp
loopne
dec
sub
loope
leave
call
hlt
dec
scas
mov
movs
cmp
mov
and
imul
push
pop
and
imul
or
mov
mov
invd
inc
je
lock
mov
mov
ret
sub
cmp
jge
shr
outs
inc
repz
rcl
jno
jp
in
inc
(bad)
popa
sar
sti
mov
stc
inc
adc
inc
(bad)
movs
in
clc
sbb
test
fnstcw
pop
mov
sbb
(bad)
push
movs
add
mov
shl
or
cmp
adc
cwde
mov
mov
fwait
das
adc
popf
xor
sbb
mov
sub
inc
xor
int3
pop
out
ja
lea
or
jle
add
cld
push
imul
push
out
int3
inc
add
inc
adc
mov
mov
nop
sbb
add
call
fwait
popf
push
fwait
jmp
jmp
loopne
jmp
lock
cmc
pop
ss
in
or
shl
mov
leave
or
inc
or
xor
jno
inc
jle
mov
mov
shl
sar
mov
or
cld
retf
jns
test
sbb
inc
stos
(bad)
iret
xchg
xchg
icebp
add
in
aam
xchg
cld
(bad)
dec
xor
dec
push
jmp
mov
pop
jno
nop
mov
adc
pop
jmp
fld
mov
mov
xchg
xor
pop
or
mov
les
shl
dec
add
jg
pop
popf
jecxz
adc
inc
loope
leave
fstp
cmp
mov
icebp
jbe
adc
sar
cmp
call
push
in
loope
mov
jb
lods
nop
nop
iret
mov
and
mov
enter
je
test
jge
ror
pop
cld
movs
and
push
inc
pop
pop
add
mov
or
xor
cs
ds
leave
movs
pusha
jge
je
jb
dec
ins
aad
fcomi
mov
retf
pusha
jb
shl
pop
xchg
add
mov
add
push
inc
mov
inc
jnp
cmps
sub
push
mov
in
push
(bad)
jp
xor
stos
cdq
add
dec
out
aas
nop
es
xlat
sub
sahf
add
mov
sub
icebp
repnz
mov
sub
cli
push
adc
mov
mov
rcl
xchg
dec
dec
arpl
jbe
shl
add
xor
das
mov
adc
mov
je
(bad)
push
cdq
dec
push
adc
repnz
mov
adc
popa
xor
imul
xlat
mov
popf
loopne
addr16
cmc
dec
adc
sbb
pop
dec
push
pusha
add
lds
sub
xlat
mov
loopne
lds
or
js
sub
dec
mov
ins
ret
jge
mov
rep
mov
arpl
in
mov
mov
out
adc
inc
xor
call
scas
retf
(bad)
pop
retf
inc
xchg
int3
popa
xor
jmp
xchg
and
push
mov
sub
adc
and
mov
test
js
pop
stos
pop
adc
call
add
lock
aad
dec
loopne
fcomp
ret
xchg
pushf
pop
(bad)
mov
sub
ss
xchg
(bad)
outs
sbb
lods
into
pop
mov
test
cmps
jmp
rcl
jp
sub
adc
fbld
test
sti
(bad)
pop
hlt
ret
call
js
xchg
cld
mov
push
xor
dec
(bad)
outs
ins
xchg
movs
(bad)
(bad)
jne
sbb
outs
or
mov
add
cmps
sub
jge
cmps
cmp
mov
or
xor
pop
sub
or
iret
arpl
xchg
jno
mov
aaa
cdq
sub
(bad)
push
ins
ins
addr16
push
out
and
pop
bound
or
mov
addr16
inc
sahf
xchg
aaa
ror
fadd
out
inc
pop
pop
pop
popf
cmp
push
aaa
xchg
cmp
push
lahf
gs
pusha
les
dec
movs
add
out
sub
(bad)
xlat
sub
sbb
movs
loope
rol
int3
dec
inc
int3
aas
mov
jle
test
aad
ins
iret
add
and
cmp
fist
movs
inc
in
fdiv
in
or
out
sub
sub
mov
out
sub
inc
adc
mov
test
dec
rol
das
or
mov
cmp
clc
out
sbb
push
(bad)
xchg
xor
cmp
mov
jmp
mov
jmp
aam
jmp
ins
in
bound
ins
pop
or
sub
add
leave
push
xchg
sbb
mov
push
iret
inc
and
(bad)
(bad)
inc
sbb
xor
fcom
icebp
xchg
dec
loope
stos
cmp
mov
in
dec
pop
std
mov
daa
add
cmc
push
sbb
cmc
sbb
or
repnz
dec
dec
pop
les
repz
or
sub
xor
(bad)
mov
sbb
popf
cmc
mov
test
pop
dec
paddsb
in
lahf
std
paddsb
dec
lock
fwait
push
out
adc
repnz
add
cld
add
bound
adc
mov
mov
adc
xchg
mov
hlt
mov
icebp
pop
jg
int3
sti
and
ja
xchg
adc
out
mov
inc
cmp
pop
xlat
jns
fdiv
outs
sub
clc
mov
cmp
cmp
cmp
adc
dec
loopne
push
pop
xor
movs
xchg
ins
mov
pushf
adc
mov
call
neg
fbstp
pop
pop
jp
mov
add
inc
outs
in
(bad)
xor
push
dec
cmp
sbb
mov
or
enter
es
lock
xor
call
out
in
mov
ror
imul
fcom
push
add
bound
jecxz
xchg
adc
aad
jmp
xchg
out
xor
sbb
(bad)
pop
pop
xchg
pusha
add
jb
not
sbb
das
lods
ins
mov
and
cmp
inc
jl
mov
ins
cmc
mov
dec
push
add
mov
mov
test
stos
(bad)
ret
movs
jg
aad
pop
mov
or
dec
lods
cmp
inc
int
xor
inc
arpl
push
and
out
inc
scas
mov
pop
retf
movs
(bad)
mov
dec
inc
push
inc
pop
xchg
or
xlat
and
jl
in
sbb
arpl
es
sar
ins
xchg
xor
out
lahf
push
cmp
mov
lahf
repz
cmp
xchg
sub
imul
inc
push
bound
shr
mov
push
jl
add
mul
and
ins
mov
not
call
push
lock
mov
mov
repz
pop
mov
out
mov
repnz
ins
pop
je
je
mov
push
call
stc
popa
repz
fs
ret
and
cmp
(bad)
mov
push
adc
loop
shl
hlt
retf
adc
test
xor
popf
add
sahf
pop
es
mov
push
xchg
lahf
jnp
fs
cmp
or
jge
test
shl
sub
rcr
arpl
lds
xchg
jno
inc
add
retf
lock
leave
add
ret
xor
jmp
cmps
or
(bad)
sbb
pop
xor
mov
xor
daa
fmul
movs
mov
pop
daa
cdq
xchg
add
pop
ret
imul
and
daa
adc
das
bound
aam
pop
jge
mov
imul
in
fwait
lods
cmp
test
out
mov
lock
js
jecxz
std
jge
repnz
push
in
add
ret
pop
out
push
enter
push
dec
push
or
push
inc
adc
add
mov
jae
(bad)
adc
or
movs
inc
arpl
adc
int
fsubr
out
push
loopne
inc
inc
lods
loop
cmc
or
sub
lea
or
sar
stos
fstp
scas
lds
xor
add
fwait
pusha
ja
leave
(bad)
push
clc
loopne
push
pop
(bad)
sub
loope
jp
xor
lods
dec
mov
or
retf
xor
inc
lock
ins
mov
mov
ret
es
add
or
(bad)
adc
and
enter
cmp
jge
inc
retf
pusha
ins
xchg
inc
jb
inc
jae
cmp
ret
ins
xchg
xchg
push
aam
icebp
aaa
loop
leave
arpl
mov
loop
shld
mov
jl
or
out
outs
xchg
jo
dec
xchg
arpl
add
inc
je
xlat
cmp
mov
ins
dec
xchg
push
push
fst
shr
inc
and
jo
scas
test
xchg
sub
sbb
mov
push
shr
mov
push
push
retf
mov
mov
pushw
clc
aas
test
jg
and
adc
or
scas
outs
adc
(bad)
test
repnz
pop
pop
dec
cmc
cmp
mov
xchg
(bad)
pop
ds
push
cmp
inc
xor
xchg
shl
jae
cdq
js
retf
pop
xor
loopne
aaa
add
fdivr
es
mov
mov
and
sbb
sbb
aas
mov
ret
pushf
inc
cld
je
inc
aaa
pop
xor
rol
stc
inc
lods
cmp
cmp
sbb
(bad)
jmp
retf
fsubr
or
pop
sbb
retf
and
jge
mov
addr16
out
jmp
call
in
arpl
idiv
inc
jno
xchg
adc
or
push
jg
dec
push
jns
mov
dec
out
inc
mov
add
mov
shl
in
push
xor
xor
xchg
test
jecxz
cwde
xchg
xor
rcl
dec
add
rcl
or
out
cmp
sub
push
fst
xor
fcmovu
push
mov
nop
js
xchg
cmp
leave
mov
adc
repz
xchg
pop
or
or
mov
xor
je
stc
(bad)
sub
jl
xchg
inc
inc
pop
mov
mov
fld
add
add
jns
adc
icebp
in
clc
js
sbb
jns
push
arpl
pop
shr
call
retf
out
lock
cmp
(bad)
aaa
cmp
mov
repz
cwde
mov
jge
aaa
dec
jmp
movs
jo
jg
ret
adc
adc
fwait
mov
cdq
pushf
pop
fs
jnp
xor
retf
test
shl
int3
hlt
mov
xor
fisubr
push
or
pop
dec
aaa
xchg
shl
xchg
not
pop
fs
ss
in
fcomp
fnstenv
pop
enter
fcom
js
retf
mov
and
pushf
icebp
inc
pop
xchg
push
push
dec
ror
xchg
dec
icebp
popa
cmps
cmp
pushf
(bad)
xadd
or
div
cs
mov
sub
jge
xor
sub
test
loop
inc
into
cmc
jb
add
sbb
mov
stos
test
cmp
xor
mov
stos
int3
sub
scas
and
xor
mov
into
sahf
popa
ret
dec
inc
mov
push
shr
(bad)
(bad)
ins
cmc
mov
shl
repz
mov
jo
jbe
push
call
push
shl
jbe
popa
mov
dec
fnstcw
sbb
push
popa
data16
sbb
jno
jne
in
and
arpl
and
lahf
dec
sbb
mov
call
add
xlat
outs
xor
(bad)
cmc
inc
adc
push
repz
fs
xor
pushf
add
loope
xor
mov
dec
sub
(bad)
(bad)
sub
inc
cmp
fimul
xchg
push
not
or
cmp
pop
arpl
les
mov
xchg
mov
mov
jmp
or
add
jae
retf
and
retf
test
cmp
mov
in
pop
add
fs
add
fsubr
cmp
jge
dec
pop
cmp
movs
xchg
mov
and
int3
ins
jecxz
sub
loope
inc
subps
adc
jae
pop
jecxz
ins
popf
bound
pop
add
dec
cli
movs
jecxz
push
cmp
aad
mov
retf
pop
xlat
icebp
inc
test
inc
jb
sub
pop
mov
jl
ins
fsub
not
call
daa
cmp
call
and
cs
fiadd
or
cmps
sub
dec
(bad)
int3
jecxz
adc
(bad)
sbb
stc
(bad)
(bad)
daa
xor
xlat
fs
jb
les
pop
inc
xor
shl
das
jle
test
ret
mov
xor
dec
lea
mov
loopne
sbb
or
std
sar
pop
adc
inc
(bad)
push
pop
adc
enter
and
sub
push
xlat
push
stos
add
cmp
stos
mov
aad
sbb
mov
adc
jp
jge
adc
in
push
jns
hlt
and
gs
pop
enter
push
mov
cmps
cdq
xchg
cmp
stc
jno
push
dec
addr16
das
mov
ret
mov
jmp
icebp
adc
or
xchg
jecxz
xlat
gs
dec
dec
adc
imul
inc
push
aas
mov
push
mov
stos
cmp
or
and
into
les
or
cli
push
scas
inc
or
dec
and
scas
ficomp
and
aas
fild
sbb
cmp
stos
push
mov
fwait
cmps
inc
mov
stc
add
mov
push
add
jo
shl
jae
cdq
movs
pop
aas
cmp
les
in
jle
xchg
dec
adc
jecxz
push
xor
lods
je
jns
dec
sub
jl
leave
(bad)
pop
or
aas
repz
stos
dec
add
inc
inc
int3
pop
mov
jae
or
in
push
xor
in
inc
cli
data16
xor
xchg
int3
lea
mov
and
test
push
enter
lahf
jae
jne
movs
jb
nop
xor
mov
clc
movs
sbb
mov
mov
repnz
jno
inc
pop
shl
jne
or
xor
xchg
cdq
test
ins
out
add
inc
loopne
or
fldenv
ds
push
fidiv
inc
fnstsw
dec
in
(bad)
adc
cld
xchg
mov
in
and
sahf
popf
stc
aas
fidivr
lods
cmp
loop
pop
hlt
dec
sub
dec
ja
inc
mov
mov
loopne
jle
or
cmc
mov
add
fisttp
test
sub
xchg
fsub
int3
xlat
mov
cdq
lods
adc
dec
inc
xchg
sti
and
mov
(bad)
mov
add
cli
daa
xchg
pop
inc
out
jp
adc
stos
lea
xchg
push
cld
int3
mov
add
out
jp
mov
inc
iret
mov
test
loope
xor
stos
push
mov
test
je
push
jp
jb
into
cmp
push
pop
mov
mov
mov
outs
test
cwde
mul
pop
lahf
fcomp
add
xor
scas
mov
add
sub
mov
les
mov
push
mov
iret
out
loope
cmp
mov
iret
jae
sbb
aaa
and
xchg
jmp
fdivr
stos
add
mov
xchg
(bad)
or
call
jmp
stos
out
add
sbb
bound
addr16
test
rcl
ins
loopne
mov
push
mov
cmps
nop
repz
sub
jge
retf
or
jp
stos
(bad)
push
add
loop
add
jnp
ins
addr16
add
push
ins
xor
mov
and
dec
les
fisttp
push
push
sub
mov
sbb
jb
or
mov
xor
inc
leave
das
call
xchg
mov
in
lahf
mov
jns
inc
jo
loopne
ins
ins
xor
retf
xchg
sbb
imul
dec
ror
jl
scas
cmp
cmp
push
es
dec
fisttp
adc
popa
scas
hlt
sahf
inc
cld
mov
inc
bound
dec
je
test
push
popf
jno
fild
adc
inc
mov
fisttp
(bad)
sub
fistp
mov
aad
mov
sbb
retf
pusha
cs
cmps
jne
dec
pushf
in
adc
sub
pop
fld
sti
enter
movsx
(bad)
cmps
pop
sub
pop
add
sbb
sub
aad
cmc
outs
lods
push
lock
push
shl
mov
pop
mov
xchg
shl
out
cdq
(bad)
pop
shr
ss
add
mov
(bad)
inc
fwait
std
sbb
icebp
adc
std
or
outs
shl
cmp
outs
xchg
sbb
int3
and
sub
fcomp
call
jbe
mov
cs
adc
mov
or
in
fs
add
jmp
rcr
add
xor
aas
out
jle
mov
in
loope
pop
jecxz
push
sub
lahf
rcl
sub
retf
pop
cmp
dec
and
ret
push
enter
adc
ins
xor
jb
int3
sub
pusha
adc
sbb
mov
and
sub
pop
mov
aaa
jns
xchg
jne
xchg
cwde
mov
std
das
cmps
frstor
jecxz
sub
test
lds
mov
(bad)
adc
push
mov
mov
pop
mov
(bad)
fwait
sahf
mov
push
clc
lods
in
movs
int
xchg
jmp
test
jmp
cmps
movs
aad
test
cld
pop
add
out
(bad)
retf
fisttp
mov
push
mov
aad
mov
push
push
jb
sub
test
jle
fld
call
sub
mov
cdq
mov
outs
xor
cmps
jmp
jg
adc
inc
fmul
and
gs
test
or
and
or
mov
mov
add
into
out
add
outs
popa
nop
cwde
xchg
mov
sub
inc
iret
inc
(bad)
inc
das
or
stc
lds
(bad)
push
jns
dec
lods
push
dec
or
aad
add
push
outs
push
add
ins
add
in
mov
jne
(bad)
jns
jns
enter
in
jl
ffreep
cmp
cs
int3
leave
inc
add
mov
shl
jne
inc
(bad)
int3
jmp
pop
xor
xor
xor
das
fcom
sbb
(bad)
je
aaa
xor
aas
or
(bad)
xor
aas
mov
nop
dec
jmp
pop
mov
cmp
mov
lock
jmp
repz
jge
or
xor
inc
ss
sub
or
fs
fwait
out
out
adc
xchg
pushf
jge
mov
adc
pop
fisub
mov
es
fnstsw
sti
adc
mov
or
push
sbb
shl
les
mov
and
(bad)
out
xor
fbstp
imul
cmc
idiv
xchg
lock
loopne
scas
sar
test
pop
push
xchg
and
hlt
ins
pusha
in
mov
xchg
das
gs
pusha
mov
mov
mov
int3
push
pop
sub
clc
push
das
jg
jmp
clc
in
cmovge
push
dec
scas
xor
xor
aam
dec
lahf
or
es
(bad)
out
inc
loope
out
dec
push
adc
and
fs
xchg
cs
mov
sbb
adc
xor
fst
xor
loop
mov
aaa
scas
test
and
or
test
stc
(bad)
test
outs
mov
idiv
ror
icebp
stc
fimul
push
in
arpl
idiv
fwait
mov
xchg
jb
add
inc
or
push
clc
aas
push
mov
xor
xor
mov
mov
pop
push
sub
out
cld
inc
outs
push
(bad)
das
pusha
jb
add
and
mov
inc
mov
jmp
push
(bad)
scas
and
pop
mov
cmp
stc
arpl
ret
jb
ficomp
in
lock
retf
cwde
and
mov
cmp
rep
ret
or
clc
and
in
(bad)
sahf
and
in
dec
jnp
mov
mov
ret
inc
inc
(bad)
repnz
dec
mov
add
inc
je
add
es
push
outs
bound
stc
adc
xor
test
hlt
test
jge
addr16
xor
repnz
call
scas
push
mov
mov
jp
lock
jae
push
pop
sbb
cdq
adc
push
shr
inc
test
fsubr
mov
iret
loope
and
lock
push
cmps
jl
ja
dec
rcr
rol
inc
sub
xchg
jne
add
loop
daa
fimul
hlt
mov
jge
mov
adc
mov
inc
sahf
sti
mov
mov
data16
push
mov
retf
sub
stos
(bad)
fsubr
sahf
push
rcr
pop
add
mov
arpl
sbb
or
cdq
mov
push
push
adc
adc
retf
and
inc
or
in
or
dec
xchg
in
pusha
in
adc
push
pop
popa
mov
cmp
outs
cli
inc
jae
add
ror
xchg
cld
clc
dec
dec
in
fldcw
je
pushf
lock
pop
fstp
outs
retf
ficomp
mov
test
add
(bad)
jns
add
jne
cmp
xor
mov
adc
dec
xor
imul
push
push
pop
test
xor
inc
sbb
movs
mov
push
xchg
dec
fldenv
and
mov
xor
dec
cmps
push
int3
call
sub
cmps
seta
jb
lahf
sbb
repz
and
into
test
arpl
enter
mov
push
adc
cli
or
fs
push
movs
dec
and
jecxz
push
int3
dec
push
sub
xchg
xor
xor
lods
dec
imul
mov
xchg
push
jno
jns
lahf
es
cmp
sub
(bad)
lea
xor
pop
add
push
mov
jne
add
xor
cmps
fld
retf
pop
inc
mov
mov
sub
iret
xlat
idiv
test
out
retf
loope
mov
push
lods
and
sub
test
cmp
mov
mov
mov
cld
and
xor
mov
cli
mov
retf
popa
ret
or
outs
inc
jle
sbb
sub
jl
call
xchg
gs
push
mov
mov
mov
fdivr
pop
pop
push
jbe
clc
sbb
inc
out
mov
jmp
jmp
fcomip
shl
cmc
adc
lds
dec
pushf
movs
stos
pop
adc
xchg
movs
jp
or
mov
out
test
aas
(bad)
jne
pop
sbb
mov
and
jne
popf
or
arpl
xchg
outs
pop
push
popf
or
(bad)
sbb
pop
addr16
inc
jmp
fadd
int3
mov
push
jle
shl
mov
jmp
in
mov
xchg
sahf
mov
mul
into
push
pop
xchg
retf
sub
cmp
loop
ror
inc
cmc
jge
clc
ja
shr
iret
ds
inc
test
fsubp
mov
mov
scas
xor
out
rcl
dec
xchg
clc
mov
xlat
push
dec
sbb
push
cli
daa
or
inc
ficomp
and
fisub
call
out
jmp
mov
fnsave
loope
in
push
adc
ds
scas
jo
sbb
adc
in
dec
pop
xor
pushf
jmp
push
mov
xor
(bad)
(bad)
(bad)
jmp
clc
jno
mov
xor
aas
bswap
jbe
in
and
fsub
pop
repz
inc
and
and
shl
inc
dec
shl
push
or
jge
inc
scas
out
rep
test
int3
clc
fwait
xchg
xor
mul
jle
aam
cwde
inc
loopne
push
fisttp
or
aas
sub
mov
stc
dec
xor
fst
jo
jp
fs
out
mov
mov
mov
test
inc
sahf
popa
jl
mov
shr
sub
sub
jb
addr16
les
ret
lahf
fistp
pop
repz
fs
js
sub
pop
cmp
mov
pop
outs
test
xor
mov
ret
retf
mov
or
iret
les
je
(bad)
mov
adc
loopne
mov
sub
popa
mov
(bad)
call
mov
xor
xchg
jne
loopne
inc
mov
cli
mov
cli
and
cwde
movs
sub
push
test
jmp
call
je
jo
aaa
mov
mov
add
adc
movs
retf
(bad)
das
repz
jmp
pop
cmp
retf
cli
nop
cmps
clc
mov
xor
pop
cmp
cdq
xchg
cmp
mov
stos
mov
adc
dec
dec
dec
(bad)
pop
sbb
les
cli
dec
push
mov
jp
and
retf
fmul
leave
mov
pusha
jns
adc
jne
ja
mov
jnp
das
adc
and
ds
sub
sbb
jo
adc
je
pop
adc
cwde
xchg
shl
and
out
push
stc
mov
rol
stos
fadd
push
(bad)
(bad)
mov
test
popa
(bad)
jmp
pop
movs
xlat
jae
in
stos
jecxz
dec
call
xchg
(bad)
pop
lahf
xor
jecxz
jmp
pop
lock
mov
outs
in
lods
xchg
inc
aam
xor
lds
ja
ds
shl
(bad)
out
call
xchg
adc
out
stos
cld
mov
push
push
je
mov
jmp
cld
ss
movs
test
mov
mov
(bad)
push
popf
push
js
adc
aas
stc
out
mov
stc
out
jno
adc
ja
push
nop
or
and
xor
jnp
push
add
adc
cwde
dec
dec
addr16
ins
(bad)
(bad)
and
jl
jle
fdivr
(bad)
shl
sahf
(bad)
out
pop
cmp
mov
test
xchg
and
ins
push
pop
mov
sub
outs
dec
push
push
adc
not
push
mov
in
sbb
pushf
enter
mov
sub
mov
xlat
or
inc
inc
lods
add
scas
je
pop
mov
shr
in
mov
pop
mov
sub
mov
retf
push
stos
stc
cmps
loopne
or
aam
inc
hlt
cld
xor
push
pop
push
inc
xor
add
mov
sahf
jmp
mov
add
pop
jne
add
mov
adc
test
(bad)
repnz
add
mov
adc
mov
jp
popf
xor
lea
and
adc
inc
cdq
(bad)
shl
push
int3
mov
mov
rol
mov
push
mov
gs
push
sbb
pop
mov
int3
lock
test
hlt
mov
push
push
lods
aad
pop
enter
repnz
pop
or
cdq
ss
into
dec
and
xor
jb
inc
xor
and
arpl
pushf
rcl
and
mov
inc
not
outs
fwait
inc
rcl
pop
add
pop
or
cs
sahf
outs
(bad)
inc
popa
lock
pop
data16
(bad)
xor
gs
lock
jae
out
out
int
mov
inc
(bad)
das
retf
pop
mov
adc
add
mov
or
pop
movs
cmc
test
cwde
cli
add
adc
out
jmp
dec
cdq
adc
test
aam
rcl
and
cld
inc
sar
inc
shl
xchg
dec
movs
rcl
mov
gs
movs
es
das
sbb
jns
inc
adc
ret
jge
rcr
loope
lock
or
es
jae
or
cmc
push
xor
js
mov
dec
imul
clc
xor
lods
shr
push
add
out
pop
jb
(bad)
mov
retf
repnz
or
retf
ret
lds
(bad)
xor
push
shr
mov
sbb
xor
cmps
imul
push
xor
cmps
mov
aad
dec
push
or
pop
jmp
mov
lea
xchg
in
xor
xor
js
mul
jae
jae
mov
dec
dec
dec
loop
fwait
sub
adc
add
inc
push
ss
je
jle
xor
lods
inc
fsubrp
xchg
and
daa
inc
cs
add
pop
ret
add
adc
arpl
push
ret
dec
lods
dec
out
bound
pop
or
or
fsub
mov
addr16
fld
and
xor
lock
in
in
push
loopne
ja
and
sub
shr
aam
or
test
fld
dec
mov
sbb
outs
scas
aam
shl
rcr
inc
in
pop
stc
jp
loopne
cld
jns
push
or
adc
imul
dec
stc
arpl
jnp
push
ficomp
ja
xor
icebp
xor
jge
loop
mov
jbe
adc
outs
sub
ret
mov
sbb
out
hlt
retf
dec
aad
jnp
add
pop
clc
lock
jecxz
dec
mov
mov
add
or
repz
sub
push
pop
shl
mov
pop
cmp
add
scas
and
cmp
mov
mov
inc
xor
jmp
mov
mov
cmp
push
mov
jno
fadd
mov
pop
(bad)
fmul
test
mov
jbe
push
sbb
xchg
repnz
mov
fs
cmps
stos
or
and
hlt
ret
test
jmp
or
(bad)
imul
mov
ja
pusha
or
ins
mov
pushw
cmp
mov
jno
aad
cmp
je
mov
icebp
dec
rcr
(bad)
sbb
add
aas
loop
add
pop
lea
pusha
daa
out
mov
aas
popf
fwait
mov
or
ins
pushf
mov
adc
xchg
ds
movs
int3
and
fild
sbb
sub
(bad)
cmp
jmp
inc
cmp
outs
idiv
cmp
popf
fist
dec
outs
call
adc
ss
pusha
and
sbb
repz
sti
or
or
sub
push
loopne
in
cmp
or
(bad)
mov
ret
and
mov
mov
cmp
jne
mov
or
(bad)
mov
or
cs
mov
mov
enter
xchg
inc
pusha
sbb
cmp
jne
inc
leave
sbb
fimul
xor
fidiv
call
rcl
lea
sbb
mov
(bad)
mov
xchg
dec
push
inc
mov
jp
fidivr
add
lods
mov
ret
scas
daa
ins
and
popa
inc
dec
dec
retf
mov
cmp
in
gs
enter
into
bts
and
loop
lods
jg
cmp
or
cmp
and
push
cmp
lock
mov
ds
mov
mov
push
mov
and
in
jmp
dec
stc
mov
inc
out
jne
stos
cmps
push
jno
mov
das
sbb
dec
(bad)
sub
(bad)
sub
shl
sbb
xorps
xchg
add
push
fcomp
movs
push
add
jl
mov
xchg
scas
inc
fisubr
inc
stos
lea
in
add
test
jge
loope
pop
outs
popa
add
retf
cmp
js
fld
not
rcr
xchg
ss
mov
push
rcr
xlat
bound
pop
lods
imul
retf
cs
adc
dec
and
xchg
movs
mov
loop
adc
jl
ss
or
repnz
push
std
repnz
push
cmp
pop
jmp
ja
sti
ficomp
inc
dec
out
cmp
and
cdq
fs
lds
arpl
push
fisubr
inc
mov
pushf
sub
fnsave
pop
test
xor
enter
add
mov
xor
clc
sbb
ds
add
jp
mov
pop
xor
lock
rcr
int
cwde
or
inc
loopne
call
in
loopne
jo
xchg
jae
push
dec
out
cld
les
xor
mov
je
add
or
xchg
retf
pop
rcr
and
jmp
cmp
cmp
jge
sbb
xchg
retf
mov
call
fdiv
in
lock
add
sbb
into
inc
shr
sub
ror
es
adc
or
gs
lahf
add
sbb
leave
repz
mov
mov
xchg
jns
test
pop
and
repz
fs
sub
xchg
test
in
mov
ret
arpl
adc
in
gs
repnz
jg
and
mov
xchg
or
jmp
jl
retf
ins
es
sbb
push
jns
xor
and
retf
cmp
sbb
or
mov
pop
fwait
or
fcmovb
mov
aam
ss
je
(bad)
frstor
mov
adc
xor
pop
cs
adc
sub
test
(bad)
fimul
iret
fiadd
cmps
arpl
test
cmps
sub
dec
mov
pop
retf
and
xor
div
xor
xchg
mov
push
aad
dec
cmp
xchg
popa
xchg
movs
add
and
adc
and
daa
xchg
(bad)
aam
mov
cwde
dec
jmp
inc
mov
cmp
push
inc
sbb
xor
mov
sub
lahf
jne
add
(bad)
jg
in
inc
div
cmps
cmp
xor
fisubr
sar
mov
test
bound
lahf
test
sbb
dec
hlt
(bad)
cwde
or
xchg
popa
jmp
sahf
mov
sub
out
ss
push
add
or
enter
and
xchg
fs
jnp
daa
push
and
in
push
push
icebp
imul
scas
loop
mov
mov
fwait
aam
lea
xchg
in
mov
push
push
scas
dec
or
pop
repnz
and
icebp
mov
pop
lea
fs
ins
jecxz
les
xchg
fnsave
push
in
jecxz
lea
das
mov
or
fbstp
mov
call
dec
push
mov
inc
adc
or
xchg
xor
cmp
mov
cmp
inc
xchg
xchg
leave
fcomp
lods
mov
xchg
repnz
adc
je
pop
clc
test
ds
and
(bad)
mov
xchg
pop
dec
push
jne
jecxz
cvtps2dq
lds
sar
jb
add
adc
xlat
xor
mov
xchg
fwait
out
fbstp
fwait
repnz
and
jbe
popf
data16
xlat
out
das
jmp
jge
lock
mov
nop
adc
add
gs
adc
xor
push
push
int3
mov
test
jp
aas
mov
dec
cmp
into
imul
jmp
pop
cmc
cmc
inc
in
cmp
jae
xchg
adc
inc
(bad)
sub
movs
loopne
sbb
pop
dec
dec
fwait
cmp
inc
gs
in
inc
xchg
shl
mov
jnp
leave
and
xlat
aad
mov
add
jmp
mov
adc
sbb
loop
sahf
sbb
iret
aam
pop
xor
sub
jns
icebp
loope
push
movs
push
sti
pop
dec
mov
shl
rcl
xlat
cmp
imul
cmp
push
jge
or
xchg
sbb
jmp
ins
scas
xor
shl
and
xor
rcr
add
cdq
or
arpl
loopne
mov
sahf
js
out
aad
les
jp
pop
inc
push
jecxz
jmp
xchg
mov
clc
leave
sbb
cmp
xchg
add
mov
pop
sbb
jne
and
(bad)
aam
(bad)
cmp
mov
inc
lea
popf
pop
adc
enter
adc
mov
ficom
(bad)
sub
std
dec
sahf
sbb
jo
pop
xchg
not
and
pop
inc
or
pop
mov
xchg
mov
mov
jno
out
xchg
rcr
(bad)
scas
cmp
aaa
mov
movs
inc
xchg
dec
push
cdq
mov
jne
and
mov
xchg
jns
push
shr
jo
pushf
push
cmp
and
mov
add
aas
outs
jp
sahf
cmp
imul
xchg
imul
repz
adc
push
mov
mov
popa
sub
xchg
bnd
test
jp
pop
test
mov
(bad)
pop
mov
push
mov
imul
sbb
icebp
imul
sub
xchg
rcr
imul
shl
xchg
sub
jmp
movs
cmp
div
xchg
xchg
imul
pop
jmp
cmp
cmc
pusha
aaa
inc
cmp
(bad)
push
sar
call
call
or
xchg
fidivr
or
or
xchg
iret
ret
ret
in
add
adc
jo
js
push
lock
mov
xlat
dec
je
cmp
xchg
mov
adc
call
ffree
sbb
cmp
dec
aam
repnz
and
mov
data16
sahf
sub
pop
test
xchg
xor
mov
or
xchg
mov
retf
icebp
sub
sbb
adc
cli
dec
in
(bad)
out
mov
(bad)
push
sub
nop
out
aas
add
and
push
pop
pop
mov
dec
pop
sbb
cmp
and
cmp
mov
(bad)
push
fisttp
fwait
clc
pop
or
ret
aas
inc
aad
int3
and
mov
inc
shl
mov
maxps
shr
(bad)
sbb
(bad)
lods
push
add
nop
mov
das
push
inc
push
mov
adc
push
shl
jmp
jecxz
rcr
mov
das
xor
mov
adc
xchg
jmp
inc
stos
mov
jle
jbe
sbb
mov
and
fdiv
pusha
(bad)
jmp
and
jg
in
or
push
sub
jmp
test
cmp
les
adc
push
cmp
mul
or
popf
repnz
push
pop
in
lahf
dec
daa
dec
imul
stc
into
sbb
adc
arpl
xor
fldenv
push
std
popf
arpl
ins
sbb
jb
stc
xor
inc
cmp
jmp
loopne
cli
jg
in
aad
div
das
pop
pop
mov
clc
add
imul
adc
xchg
int
mov
aaa
call
call
dec
sub
iret
xchg
jne
rcl
pop
pusha
scas
or
and
(bad)
mov
int3
sbb
js
not
xor
and
aaa
jne
sub
out
rol
inc
addr16
push
pop
call
sbb
pop
addr16
xchg
push
mov
xchg
in
mov
stos
mov
add
mov
lahf
outs
mov
and
call
dec
fbstp
dec
sahf
xor
fwait
mov
lock
and
jo
mov
or
push
jnp
inc
push
sar
jo
lock
inc
or
dec
adc
pop
add
dec
stos
fst
ret
pop
clc
add
(bad)
push
mov
mov
adc
sbb
(bad)
je
into
das
loope
in
dec
sbb
test
jge
pop
shl
sbb
inc
dec
mov
sub
mov
adc
arpl
pop
xor
fisub
pop
sub
scas
inc
sbb
push
lock
jp
adc
dec
cmp
jb
out
out
lahf
or
cmc
push
call
sbb
cmp
pop
or
imul
test
xchg
enter
movs
jbe
ja
and
inc
dec
(bad)
icebp
cmp
dec
adc
(bad)
push
pop
and
mov
dec
ror
lods
jg
or
inc
mov
mov
in
dec
ret
add
lds
arpl
cmp
into
repnz
mov
std
pop
test
ret
mov
pushf
and
js
ficomp
sbb
mov
jbe
shr
jmp
popa
ds
sti
daa
push
and
call
std
aad
test
sub
sbb
mov
rol
inc
push
(bad)
nop
mov
jo
outs
pop
push
cmp
mov
clc
mov
loop
cs
(bad)
xor
adc
add
je
stc
rol
pop
mov
sbb
and
xor
out
push
in
push
mov
mov
and
sub
ret
pushf
push
push
pop
cld
fcom
jmp
(bad)
pop
pop
xlat
(bad)
sub
das
push
inc
pop
sbb
retf
repz
ins
rcr
rcr
adc
jae
jmp
xchg
pop
pop
int
ja
jne
dec
lods
(bad)
jecxz
jle
out
(bad)
push
sahf
dec
lea
pop
xor
pop
aas
loopne
mov
and
or
loop
jl
mov
inc
stos
xchg
repnz
ret
cmps
push
nop
jle
pop
(bad)
into
sar
sahf
pop
dec
jmp
fsubr
inc
xlat
enter
out
jnp
(bad)
gs
push
dec
aaa
(bad)
pop
(bad)
sbb
jmp
ficomp
mov
xor
add
ret
cdq
inc
retf
xor
mov
cmp
aaa
cmp
xchg
mov
xor
das
push
repz
dec
lock
mov
xchg
cmp
push
mov
xor
fnstenv
cmp
sbb
sub
fmulp
xor
adc
cmp
adc
fwait
loope
mov
imul
or
fistp
retf
test
inc
ret
leave
dec
pop
pop
push
out
mov
mov
(bad)
pop
mov
or
push
cmp
add
(bad)
xor
push
in
leave
mov
sub
stos
push
ret
std
push
jl
pop
cmp
sbb
into
icebp
adc
sub
push
mov
movs
or
sti
sub
addr16
jmp
out
xchg
ins
test
xchg
jge
mov
loope
and
ror
(bad)
(bad)
mov
or
xchg
mov
jae
push
test
xchg
add
mov
aas
aas
xchg
cmc
cmp
call
outs
xchg
out
cmp
xchg
xor
loope
mov
rol
sbb
push
fwait
div
pushf
ja
sbb
sub
inc
or
aam
jne
xchg
mov
sub
sar
into
and
xchg
xchg
add
push
jbe
xor
icebp
(bad)
jmp
inc
arpl
mov
add
push
ds
lods
xor
fcmovnbe
ret
sahf
sub
and
mov
pop
outs
repz
push
lahf
jecxz
(bad)
in
xchg
aad
inc
inc
ret
cld
adc
and
add
xchg
or
cmp
leave
adc
int3
fistp
stos
sub
add
popf
adc
leave
rcl
stos
mov
xor
fwait
dec
mov
push
aas
ret
scas
pop
push
xchg
mov
push
xlat
sbb
dec
or
in
not
call
pop
and
cld
and
adc
(bad)
mov
mov
mov
dec
loopne
mov
lods
in
xchg
pop
sbb
xchg
inc
daa
xor
mov
jb
pop
test
dec
(bad)
in
adc
repz
or
int
ja
and
cmp
adc
xor
xor
pop
adc
cmp
push
mov
add
xor
mov
or
loope
jb
jo
ror
sti
and
push
cwde
das
cmp
add
and
lods
and
cld
imul
push
add
push
bound
int3
push
inc
mov
xchg
push
ins
mov
push
cmp
iretw
pushf
stos
sbb
pop
xchg
inc
daa
fs
repz
push
lea
sbb
fstp
pop
mov
mov
mov
ror
and
out
add
pushf
arpl
fist
dec
std
adc
icebp
pop
sahf
pop
out
dec
and
cld
out
shl
jne
daa
add
mov
enter
xchg
loop
cmps
dec
fimul
cmp
mov
pop
iret
xor
dec
aaa
rcr
cmp
cmp
add
into
mov
sahf
stos
cmp
gs
add
xlat
js
xlat
cmp
bound
fdiv
(bad)
adc
add
mov
or
push
xchg
les
pop
repz
xor
and
rcr
and
adc
mov
(bad)
loopne
push
xchg
jo
pop
adc
jmp
les
test
add
test
pop
aad
push
ret
fcomp
data16
mov
mov
adc
jns
ss
cwde
xor
repnz
jmp
ins
shl
jg
mov
cmc
mov
push
inc
int
sbb
es
cs
scas
or
adc
xchg
pop
add
adc
aam
mov
add
pop
and
push
inc
ret
ins
mov
ret
retf
mov
mov
dec
or
mov
int
(bad)
xor
inc
sti
ret
add
lea
jns
and
out
pop
iret
jmp
sub
loop
scas
sbb
or
sti
rcr
das
jbe
cmp
mov
fwait
mov
and
out
push
inc
jecxz
(bad)
mov
jb
xchg
mov
loope
and
stos
nop
popa
xor
clc
shr
jecxz
jne
xchg
sbb
xchg
or
mov
test
add
cmp
mov
add
jnp
pop
jnp
dec
(bad)
int
(bad)
cmp
and
popa
fstp
xor
pop
cmp
stc
mov
pop
jle
sbb
in
or
loopne
fldenv
jns
or
sbb
add
push
je
aad
xor
(bad)
in
push
xor
sbb
scas
or
jne
cmp
dec
push
mov
xchg
jne
sahf
inc
fdiv
shl
cld
retf
int
pop
mov
sbb
dec
xchg
xchg
outs
mov
fst
mov
push
lock
pop
mov
mov
fld
adc
inc
test
jp
mov
mov
stos
jmp
push
xchg
push
sbb
add
mov
push
mov
mov
cmp
sbb
out
or
mov
mov
adc
lods
mov
aaa
dec
and
sbb
in
imul
loope
clc
xor
call
scas
loope
in
rcl
dec
pop
push
mov
test
daa
xor
push
call
fdiv
lods
jbe
jmp
pop
push
add
sub
in
ins
retf
call
mov
xor
mov
jae
in
push
adc
(bad)
jecxz
adc
int3
and
ins
cmp
and
sub
lea
mov
mov
jle
lods
xchg
loop
push
out
or
cmp
loopne
in
mov
push
stos
mov
xchg
inc
ss
add
dec
in
mov
cmp
int3
cmps
cmc
les
das
pop
dec
aaa
das
mov
daa
mov
push
xchg
leave
dec
jmp
aam
jge
mov
cmp
into
xor
dec
das
push
idiv
mov
movzx
daa
jmp
sbb
push
mov
and
or
stc
sbb
mov
fisttp
cmp
xor
push
mov
mov
or
cmps
scas
inc
idiv
push
mov
cmps
(bad)
dec
cmp
pop
or
jecxz
xor
clc
pop
ins
pop
(bad)
sar
mov
mov
and
rcl
cmp
cmp
mov
xchg
dec
inc
lods
xor
sbb
sbb
fdivrp
add
mov
jns
mov
mov
cmp
rcl
lods
sti
fcmovb
js
pop
adc
inc
call
mov
xchg
mov
leave
and
cmp
call
popa
sti
inc
inc
xor
leave
loope
add
or
inc
les
add
add
mov
int3
sbb
jl
pop
add
fild
ja
dec
fucomp
xor
in
or
cmp
or
sbb
jb
(bad)
nop
out
pop
in
mov
clc
je
adc
mov
mov
mov
dec
loopne
sar
inc
rcl
(bad)
sub
push
aad
pop
push
xchg
pop
test
pushf
fisub
ja
jecxz
sbb
sbb
cmps
add
pop
push
adc
retf
push
int
aaa
mov
xchg
shr
call
push
lods
xlat
fs
cmps
mov
ins
test
dec
rcl
cmp
or
jbe
int
sub
mov
pop
and
ds
js
dec
test
(bad)
xchg
xor
and
arpl
mov
das
push
cmc
cmp
sub
out
iret
fs
mov
or
add
xchg
sub
arpl
call
out
test
dec
(bad)
loop
jbe
jno
ja
xchg
cmps
int3
mov
inc
test
(bad)
dec
cld
dec
inc
mov
rcr
call
or
repnz
sub
imul
add
in
mov
mov
mov
mov
cmps
repz
movs
imul
push
into
imul
xor
push
pop
or
xchg
pop
outs
fldenv
(bad)
fstp
and
mov
mov
neg
ret
xchg
sar
(bad)
xor
fadd
in
sbb
cmp
sbb
pop
fs
stc
in
mov
jge
movs
not
aaa
and
mov
outs
scas
ds
lahf
cli
imul
aas
outs
bound
jmp
sahf
lahf
les
js
in
idiv
or
sbb
and
adc
xchg
pushf
aas
dec
pop
dec
out
xchg
jmp
mov
test
scas
bound
rcr
xlat
fs
in
movs
dec
cmp
lods
outs
pusha
cdq
push
mov
sahf
pop
inc
adc
inc
shl
xor
enter
inc
or
sub
push
loope
rcl
inc
jp
addr16
dec
lea
and
not
push
mov
xor
shl
cmps
and
add
nop
js
es
xchg
(bad)
or
and
rcl
xlat
in
nop
mov
lahf
or
push
pop
into
jmp
push
mov
mov
fisubr
sub
adc
add
out
add
adc
pop
hlt
jecxz
repnz
retf
inc
ins
aaa
push
push
ja
push
cmp
fwait
imul
dec
sbb
dec
jo
sub
sub
mov
cmp
adc
enter
pop
inc
dec
add
(bad)
stos
inc
retf
int3
push
outs
out
push
push
lods
cmp
daa
or
and
gs
jl
mov
fadd
jp
icebp
jmp
(bad)
or
out
push
inc
xor
pop
js
jecxz
scas
jg
or
rcr
leave
cmp
xor
sbb
sti
push
mov
movs
data16
ror
nop
test
adc
push
cmp
xor
mov
fstp
pop
popa
test
mov
add
add
