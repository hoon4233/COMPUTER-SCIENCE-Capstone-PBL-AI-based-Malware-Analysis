push
mov
push
push
and
push
push
push
push
call
mov
mov
mov
cmp
lea
jae
push
call
mov
lea
push
push
push
push
call
lea
mov
push
push
push
push
call
push
call
push
mov
push
call
mov
push
push
call
push
push
call
push
push
call
push
mov
call
mov
pop
pop
pop
leave
ret
cmp
mov
je
sar
add
scas
add
call
out
rcr
mov
out
dec
lea
test
xlat
fsub
ret
xchg
sub
push
int3
jae
loopne
pop
outs
cmp
mov
dec
inc
inc
push
cmp
xchg
into
adc
dec
test
cmp
(bad)
out
bound
aaa
retf
fiadd
jl
call
gs
cs
js
fiadd
sbb
cdq
adc
(bad)
test
(bad)
repz
xor
in
sub
in
cmps
add
stc
call
lea
imul
push
retf
fadd
dec
das
inc
(bad)
imul
dec
pushf
dec
inc
frstor
neg
mov
sub
(bad)
aam
or
adc
cmp
fiadd
push
sub
xor
and
jns
push
push
push
(bad)
fdivr
lds
sahf
jnp
and
lds
sbb
xchg
(bad)
xor
push
mul
iret
xor
pop
cmp
or
xor
ins
cmp
(bad)
out
inc
and
mov
stos
dec
test
adc
xchg
test
shl
enter
scas
push
sub
iret
push
jl
ret
sub
fisub
sub
or
add
lods
adc
test
imul
xchg
fcmovbe
xchg
mov
adc
cmova
mov
xor
pop
cdq
pop
xchg
icebp
(bad)
ror
jns
add
push
or
ss
loop
jl
push
mov
sbb
rcr
call
pop
cmp
xchg
test
mov
jnp
mov
(bad)
cmp
push
mov
int
outs
outs
mov
xor
jnp
or
sbb
aas
xchg
sti
or
push
std
jbe
cs
add
out
test
in
xchg
daa
loop
lea
mov
xchg
mov
lods
push
jmp
push
sub
xlat
fstp
mov
mov
test
mov
or
leave
push
repz
das
cmp
retf
in
ret
dec
call
pop
loop
jmp
push
das
adc
mov
pop
loopne
pop
fcmovu
push
mov
cs
cmp
les
adc
jne
or
cli
out
dec
xor
int3
js
mov
push
jle
fist
adc
int3
cmp
sub
rcr
ins
jo
jbe
inc
add
(bad)
sub
jecxz
(bad)
pop
push
mov
cmp
(bad)
sub
sub
jmp
push
or
jge
cmp
and
cmp
mov
cmc
sbb
sbb
xor
stc
jmp
lods
aam
or
mov
neg
pmaddwd
lds
inc
inc
inc
sub
pop
mov
in
xchg
inc
inc
cmp
inc
shl
ss
adc
ret
push
pop
xchg
push
sub
jo
mov
rcr
jo
and
xchg
add
xor
std
pop
out
jb
jno
clc
retf
xchg
in
cs
(bad)
ror
or
addr16
pop
std
and
pop
dec
cdq
mov
call
mov
cmp
aad
mul
mov
xor
sub
push
fwait
(bad)
aam
sbb
pop
and
loope
jl
(bad)
enter
sbb
push
mov
cmps
adc
sub
mov
ss
cld
loopne
and
cld
or
mov
inc
push
or
sub
fwait
loopne
mov
cs
sbb
push
dec
test
pop
cmp
imul
mov
and
in
dec
or
loope
mov
aam
cmp
out
leave
int
fucom
imul
outs
or
mov
push
(bad)
xor
sub
xlat
aas
cld
shl
inc
fidiv
sub
sub
inc
mov
cwde
xchg
(bad)
ror
adc
adc
dec
dec
xor
xor
xchg
jl
adc
int3
sbb
and
js
rcl
jnp
(bad)
ins
mov
out
lds
jne
adc
int
movs
sub
(bad)
mov
lods
rol
pop
sbb
adc
mov
inc
fdiv
xlat
xchg
sub
adc
sti
pop
(bad)
inc
mov
movs
ins
test
adc
lods
ror
test
push
fstp
jb
dec
movsx
shl
outs
aam
xchg
mov
add
or
xchg
mov
call
into
pop
aas
(bad)
clc
jmp
cmps
movs
or
mov
sbb
loop
push
dec
mov
in
fist
jle
jb
mov
sti
js
jb
and
push
out
inc
ret
or
fidiv
pop
cmp
loopne
and
jmp
xchg
and
out
clc
jg
aam
add
pop
shl
clc
movs
push
out
pop
mov
mov
int3
pop
and
cmps
mov
ficomp
iret
(bad)
pop
fsubr
or
js
sub
jnp
aad
mov
(bad)
adc
xor
sub
mov
hlt
cmp
jns
in
push
aaa
movs
or
pop
push
in
adc
sti
push
dec
ret
cs
jno
adc
xlat
cmp
popa
push
ret
popa
lock
add
and
mov
ror
lahf
xchg
xchg
sub
loop
repz
imul
rcl
pop
lahf
sub
inc
mov
je
clc
sub
sbb
and
dec
sub
(bad)
cmp
mov
adc
sub
ins
xor
in
push
xor
inc
js
adc
add
pop
std
mov
retf
or
(bad)
in
pmullw
int3
fwait
mov
outs
stc
mov
mov
jge
mov
inc
sub
addr16
xor
mov
mov
retf
popf
fwait
mov
scas
gs
cmp
cmp
sbb
repz
bound
inc
daa
enter
lahf
mov
xchg
rol
out
cmps
sbb
pop
(bad)
sub
mov
push
mov
push
push
mov
push
xor
call
test
jbe
push
mov
sub
mov
push
xor
mov
inc
call
cmp
jb
pop
and
pop
pop
mov
pop
ret
mov
push
cmps
mov
jnp
sbb
pop
sub
pop
cmp
popa
(bad)
adc
ins
add
dec
cwde
mov
push
fld
outs
sbb
popf
outs
add
cmps
test
add
cmp
cmps
xlat
ror
push
scas
ins
xor
leave
sub
sbb
xchg
dec
xchg
fxch
out
dec
add
outs
call
jmp
dec
fdiv
gs
fmul
sub
hlt
call
add
sub
test
adc
jmp
mov
out
mov
loopne
test
xor
xor
xlat
lock
loope
jns
test
cli
mov
xchg
sahf
add
sar
xor
jle
sub
jb
hlt
jo
mov
mov
lea
and
jge
je
(bad)
ins
cmp
mov
fst
mov
xchg
pop
xor
pop
push
cmc
adc
retf
push
xor
ror
sti
adc
bnd
test
(bad)
or
repz
(bad)
mov
std
push
jnp
retf
fstp
add
mov
sbb
hlt
pop
xor
nop
in
cmp
mov
outs
sub
jmp
push
into
xchg
iret
imul
push
scas
pop
push
sbb
outs
mov
sub
push
cwde
add
leave
cmp
push
mov
push
scas
mov
popa
jmp
call
mov
clc
jmp
bound
dec
(bad)
add
mov
pop
je
xlat
cmp
jge
arpl
mov
push
sub
les
in
call
mov
mov
pop
call
mov
fld
bound
sub
jo
adc
inc
es
push
jge
mov
dec
lods
mov
jle
(bad)
(bad)
jno
push
jbe
and
and
xchg
xor
mov
rcr
pop
dec
sbb
shl
add
(bad)
ja
cwde
clc
inc
mov
gs
sbb
sub
lahf
rep
rol
sub
pop
push
fcomip
jns
loope
push
or
cli
(bad)
jle
fwait
(bad)
xchg
call
jbe
call
vmovdqa
dec
xchg
das
stos
push
jno
add
push
scas
movs
xor
xchg
repz
cmps
and
dec
push
xchg
pop
sbb
cld
or
imul
test
adc
or
jb
and
mov
mov
sub
lods
jno
jmp
or
aas
sbb
cmps
xor
imul
ins
cmp
cmp
sbb
cs
cmp
pop
cld
add
jp
xchg
(bad)
cwde
xchg
ror
push
into
mov
int3
pop
mov
or
inc
sbb
fbstp
dec
mov
lock
inc
shr
sbb
(bad)
(bad)
xor
sub
and
pop
or
enter
push
jecxz
push
rcl
jmp
gs
push
push
test
in
push
fiadd
cmp
push
and
js
lahf
(bad)
fcmovu
int3
(bad)
jecxz
fidiv
ss
mov
mov
fiadd
jge
retf
jb
cmps
or
ret
adc
mov
ret
std
xchg
movs
adc
cwde
mov
cmp
std
pop
pop
dec
jge
xchg
rcl
cld
push
in
lds
push
push
movzx
xor
test
jbe
lea
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
ret
lea
lea
mov
sub
add
jmp
push
mov
sub
and
push
push
xor
pop
lea
rep
stos
stos
push
lea
push
push
call
mov
mov
sub
push
push
lea
push
call
push
lea
push
push
call
add
call
push
call
pop
push
mov
sub
mov
push
push
push
xor
mov
mov
inc
cmp
jl
xor
mov
cdq
idiv
mov
inc
cmp
mov
mov
jl
lea
xor
sub
mov
mov
jmp
mov
mov
movzx
movzx
add
add
mov
cdq
idiv
mov
mov
mov
add
mov
inc
dec
mov
jne
pop
pop
pop
leave
ret
push
mov
sub
xor
cmp
mov
mov
jle
push
push
mov
push
mov
jmp
mov
inc
mov
cdq
idiv
mov
mov
lea
mov
movzx
add
cdq
idiv
mov
mov
lea
mov
mov
mov
mov
mov
movzx
add
movzx
add
mov
cdq
idiv
mov
xor
inc
mov
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
push
inc
add
inc
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
inc
add
push
inc
add
pop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
inc
add
pop
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
and
lods
and
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
