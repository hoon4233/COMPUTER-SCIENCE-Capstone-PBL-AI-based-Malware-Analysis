pusha
xor
add
add
add
add
add
add
add
add
add
add
cmp
add
clc
inc
or
dec
sub
sub
sub
push
add
push
sub
sub
add
push
sub
mov
add
add
jge
add
add
sub
add
push
jge
add
add
jle
add
add
add
add
jae
add
or
add
add
sub
jnp
add
add
push
sub
sub
sub
add
imul
add
or
repnz
add
add
dec
add
add
add
add
sub
adc
es
add
add
and
and
sub
push
sub
sub
jnp
add
add
sub
push
sub
(bad)
add
xlat
add
fld
add
or
(bad)
outs
pop
add
or
aam
sub
outs
pop
add
or
fild
add
sbb
add
repz
add
add
adc
test
add
cmp
scas
add
add
scas
add
add
add
add
stos
add
add
cmp
add
add
stos
add
add
cmp
add
stos
add
add
sub
add
or
pop
sub
add
or
add
add
pop
sub
add
push
jle
add
add
bound
sub
add
outs
sbb
add
or
or
add
or
adc
add
add
sbb
add
es
sub
sbb
add
sub
fimul
adc
(bad)
push
pop
add
sbb
add
or
push
outs
add
jae
add
or
dec
(bad)
(bad)
dec
cmp
(bad)
inc
cmp
inc
cmp
(bad)
jmp
add
or
dec
(bad)
(bad)
inc
cmp
(bad)
jmp
add
or
dec
(bad)
(bad)
inc
cmp
(bad)
jmp
add
or
dec
(bad)
(bad)
inc
add
add
add
aas
add
add
add
add
adc
add
mov
add
add
add
push
sub
pop
sub
pop
inc
add
add
and
add
push
add
add
add
add
add
sub
jle
add
add
sub
sub
add
add
je
cmp
jle
add
add
jge
xor
jle
add
add
mov
add
sub
jle
add
add
pop
add
sub
sub
sub
sub
push
sub
push
sub
sub
add
push
sub
sub
add
push
sub
sub
add
push
sub
add
add
rol
add
add
adc
sbb
add
add
cwde
add
add
adc
add
add
sub
add
or
in
sub
loopne
sub
add
sub
add
add
add
sub
add
push
sub
add
sub
or
add
add
imul
sub
or
add
add
imul
sub
or
sub
adc
add
mov
add
adc
sub
sub
add
add
add
cmp
add
add
add
cmps
add
add
sub
dec
sub
add
add
jae
jnp
jg
add
add
adc
add
sub
add
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
(bad)
dec
cmp
cmp
sub
add
cmp
and
add
cmp
cmp
and
add
cmp
cmp
(bad)
inc
cmp
(bad)
jmp
add
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
add
or
add
add
add
or
add
add
jle
add
or
add
add
add
xor
pop
add
add
add
add
sub
sub
jnp
add
add
xor
sub
jge
add
add
sub
sub
sub
add
add
adc
add
mov
add
sbb
pop
sub
jge
add
add
add
les
sbb
add
sub
add
lds
sub
sub
add
push
sub
add
fisubr
and
add
sub
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
add
sub
add
push
sub
add
adc
add
push
add
add
add
adc
push
add
add
add
add
cmp
add
add
out
add
add
std
add
add
add
add
out
add
add
hlt
add
add
stc
add
add
add
jle
add
add
sbb
add
cmp
add
add
clc
add
add
add
cmp
add
add
add
add
and
add
add
jnp
add
add
adc
add
sub
add
add
jnp
add
add
add
add
add
jnp
add
add
adc
add
sub
add
add
jnp
add
add
add
add
add
jnp
add
add
add
add
add
jnp
add
add
add
add
sub
jnp
add
add
and
add
add
jnp
add
add
adc
add
sub
add
add
jnp
add
add
add
add
add
jnp
add
add
add
add
add
jnp
add
add
add
add
add
jnp
add
add
adc
add
sub
add
add
or
add
sub
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
add
(bad)
rol
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
xor
loope
add
add
add
jle
add
add
add
add
mov
ret
add
add
adc
add
and
add
adc
inc
jle
add
add
aaa
add
add
pop
add
add
inc
jle
add
add
mov
add
sub
inc
sub
sub
add
lea
add
sub
sub
sub
mov
sub
add
or
pop
adc
add
adc
sub
add
push
sub
push
sub
push
sub
sub
add
sub
and
add
sub
add
add
mov
sub
add
pop
outs
add
xchg
add
push
sub
sub
es
sub
sub
add
push
cmp
(bad)
(bad)
jmp
mov
xor
(bad)
inc
add
add
add
add
and
jle
add
or
add
sbb
add
cwde
add
add
aaa
add
add
fild
add
cmp
add
cmp
add
push
adc
add
and
add
sbb
add
repz
add
add
cld
add
add
call
in
add
add
add
add
aaa
add
add
cmp
add
cmp
add
add
add
add
mov
add
cmp
add
add
jecxz
add
cmp
add
add
sub
add
or
add
mov
add
sub
add
push
sub
dec
push
sub
add
rol
add
sub
add
push
sub
sbb
add
outs
add
push
jle
add
add
cmp
add
sub
add
push
sub
add
jle
add
add
mov
add
sub
add
push
sub
push
sub
add
or
add
or
add
or
jle
add
add
add
add
sub
add
push
pop
sub
add
sub
sub
add
or
add
add
sbb
add
popa
add
pop
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
mov
or
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
stos
add
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
jle
add
add
sbb
add
sub
add
push
or
add
or
add
push
sub
add
cmp
sub
add
push
cmp
mov
jl
(bad)
inc
add
add
add
and
add
add
add
add
and
add
or
add
sbb
add
dec
add
add
add
jle
add
add
push
add
add
daa
add
add
sub
add
push
sbb
add
and
add
sbb
add
add
aaa
add
add
jae
add
cmp
aaa
add
add
movs
add
add
xchg
add
add
fwait
add
add
mov
aaa
add
add
mov
add
cmp
pushf
add
add
popf
add
add
mov
sub
add
or
jle
add
add
aaa
add
add
jae
add
sub
add
push
jle
add
add
into
add
add
sub
add
sub
jle
add
add
fild
add
sub
add
push
push
sub
add
sub
sub
add
or
mov
or
sbb
add
sbb
sub
add
push
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
stos
add
push
cmp
(bad)
dec
cmp
(bad)
jmp
sub
add
cmp
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
dec
sbb
add
add
lock
add
sub
add
pop
outs
add
xchg
add
push
sub
fiadd
sub
sub
add
cmp
(bad)
(bad)
jmp
mov
retf
inc
add
adc
add
add
in
adc
and
add
add
xor
jmp
add
adc
adc
add
sbb
add
and
add
add
cmp
add
sbb
popa
add
add
pop
cmp
add
cmp
add
push
sub
add
add
add
add
add
add
cmp
add
add
pop
add
add
add
add
sub
add
push
add
add
pop
add
add
add
cs
add
sub
add
or
and
add
sub
sub
add
or
add
or
add
add
cmp
add
sub
add
sub
add
or
pop
adc
add
pop
add
add
jle
add
add
inc
add
add
sub
add
sub
add
aaa
add
add
dec
add
add
sub
add
adc
and
add
sub
add
sbb
add
sbb
sbb
(bad)
jmp
daa
add
or
add
add
cmp
add
sub
add
sub
add
or
pop
sbb
add
pop
add
add
jle
add
add
push
add
add
sub
add
sub
add
add
pop
add
add
sub
add
adc
or
mov
add
or
daa
add
or
add
add
cmp
add
sub
add
sub
add
or
pop
sbb
add
cmp
(bad)
(bad)
fidiv
push
add
push
cmp
cmp
push
add
push
cmp
cmp
push
add
push
cmp
xchg
(bad)
(bad)
inc
cmp
sub
add
cmp
stos
add
push
cmp
push
sbb
add
add
push
sub
add
adc
outs
add
xchg
add
push
sub
fiadd
sub
add
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
add
dec
cmp
aaa
add
add
test
lods
add
add
mov
add
sub
push
cmp
add
add
jle
add
add
mov
add
cmp
push
add
add
adc
add
cmp
stos
add
add
add
add
dec
cmp
aaa
add
add
iret
add
add
sub
add
outs
sub
add
sub
pop
add
and
add
sbb
add
aaa
add
add
fadd
add
sub
add
jle
add
add
adc
add
sub
add
or
mov
sbb
add
inc
add
add
add
icebp
add
add
sub
add
outs
sub
add
sub
sbb
sub
add
push
sbb
add
aaa
add
add
inc
add
sub
add
jle
add
add
adc
add
sub
add
or
mov
pop
add
add
inc
add
add
add
pop
add
add
push
outs
sub
add
sub
sbb
sub
add
push
and
add
aaa
add
add
and
add
push
jle
add
add
adc
add
sub
add
or
mov
and
add
inc
add
add
add
cmp
sub
add
outs
sub
add
sub
sbb
sub
add
push
and
add
aaa
add
add
inc
add
add
push
jle
add
add
adc
add
sub
add
or
mov
and
inc
add
add
add
arpl
add
push
outs
sub
add
sub
sbb
add
and
add
aaa
add
add
ins
add
add
push
jle
add
add
adc
add
sub
add
or
mov
sub
add
inc
add
add
add
mov
add
push
outs
sub
add
sub
sbb
sub
add
push
sub
add
aaa
add
add
xchg
add
add
push
jle
add
add
adc
add
sub
add
or
mov
sub
add
inc
add
add
add
scas
add
add
push
outs
sub
add
sub
sbb
sub
add
push
sub
add
add
mov
sub
add
jle
add
add
adc
add
sub
add
or
mov
add
add
inc
add
add
add
fld
add
push
outs
sub
add
sub
push
add
and
add
xor
add
aaa
add
add
loop
add
sub
add
push
jle
add
add
adc
add
sub
add
or
mov
add
inc
std
(bad)
jmp
sub
add
cmp
(bad)
jmp
add
or
inc
std
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
mov
dec
std
(bad)
inc
cmp
(bad)
inc
add
xor
add
add
add
add
adc
mov
add
cmp
mov
aaa
add
add
inc
add
add
mov
add
cmp
dec
add
add
mov
add
cmp
add
add
add
or
push
cmp
add
adc
sub
add
or
outs
bound
add
or
outs
push
add
or
pop
cmp
add
add
pop
sub
add
or
add
adc
add
push
sub
adc
push
sub
aaa
add
add
inc
push
add
sub
add
push
adc
push
sub
add
adc
dec
adc
push
sub
add
push
jle
add
add
popa
push
add
sub
add
push
adc
push
sub
add
adc
sbb
add
sahf
push
add
sub
add
push
adc
push
sub
add
adc
add
mov
add
push
sub
adc
push
sub
aaa
add
add
mov
sub
add
adc
push
sub
add
adc
dec
adc
push
sub
add
push
jle
add
add
popa
push
add
sub
add
push
adc
push
sub
add
adc
sbb
add
fadd
add
sub
add
push
adc
push
sub
add
adc
add
mov
pop
sub
add
cmp
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
pop
add
sbb
add
or
adc
sub
add
or
movs
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
add
fsubr
sub
add
push
cmp
(bad)
jmp
arpl
add
cmp
(bad)
dec
cmp
(bad)
jmp
sub
add
cmp
(bad)
inc
cmp
jmp
add
or
aas
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
mov
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
inc
add
add
add
jge
add
sub
add
test
add
sub
add
or
add
add
add
add
add
sub
add
sub
add
sub
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
arpl
add
cmps
add
add
add
add
add
add
xor
mov
add
adc
sub
jnp
add
jle
add
add
ja
add
cmp
add
cmp
add
cmp
add
cmp
add
push
and
add
add
inc
cmp
add
add
or
jle
add
add
std
push
add
sub
add
push
outs
xor
add
push
sub
pop
add
add
or
sub
sbb
mov
add
sub
pop
pop
adc
adc
mov
mov
add
cmp
cmp
(bad)
inc
cmp
mov
add
cmp
(bad)
dec
cmp
(bad)
inc
cmp
dec
call
add
jge
(bad)
dec
cmp
(bad)
call
xor
add
add
or
add
cmp
add
add
or
add
cmp
add
cmp
cmp
or
add
cmp
adc
add
cmp
add
add
adc
add
pop
outs
push
add
push
sub
pop
outs
dec
add
push
sub
aaa
add
add
or
add
sub
add
push
pop
outs
dec
add
push
sub
add
or
dec
es
dec
add
push
sub
add
push
jle
add
add
daa
pop
add
sub
add
push
pop
outs
dec
add
push
sub
add
or
push
push
sub
add
pusha
pop
add
sub
add
push
pop
outs
dec
add
push
sub
add
or
sub
sub
add
or
add
or
or
sub
add
or
cmp
(bad)
(bad)
call
sub
add
test
add
sub
add
push
or
and
add
or
jle
add
add
mov
sub
add
or
and
add
or
sub
jae
add
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
dec
call
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
inc
add
add
add
add
cmp
sub
sub
add
add
xor
jnp
add
or
add
push
cmp
add
add
add
add
pop
add
add
add
add
sub
add
cmp
add
jle
add
add
aaa
add
add
mov
add
add
and
add
cmp
add
add
sub
add
add
xor
add
sub
add
aam
add
sub
add
push
or
and
add
sub
jle
add
add
stc
pop
add
sub
add
push
or
and
add
sub
aaa
add
add
or
add
sub
add
jle
add
add
xor
add
sub
add
push
or
xor
add
pop
push
sub
add
push
sub
jle
add
add
inc
or
add
sub
add
or
sub
and
add
add
pop
or
add
sub
add
or
and
add
or
cmp
(bad)
inc
sub
sub
or
sub
aaa
add
add
mov
add
sub
add
push
or
and
add
or
pop
or
leave
add
push
jle
add
add
scas
or
add
sub
add
or
and
add
or
add
sub
sub
retf
(bad)
(bad)
jmp
xor
sar
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
xor
into
(bad)
(bad)
dec
int
(bad)
dec
cmp
(bad)
(bad)
inc
add
add
add
jmp
add
add
xor
loop
add
or
add
push
sub
add
add
xchg
add
add
xchg
add
add
call
add
add
add
add
nop
add
add
add
add
call
xchg
add
push
cmp
cmp
nop
add
add
add
das
push
sub
add
or
push
outs
inc
add
push
or
add
jle
add
add
call
sub
add
push
sub
adc
sub
add
or
add
push
or
add
outs
add
add
fsubr
sub
add
push
cmp
(bad)
dec
cmp
(bad)
jmp
mov
add
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
scas
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
data16
(bad)
inc
add
adc
add
add
aas
mov
push
add
add
adc
add
xchg
add
or
add
cmp
add
cmp
cmp
xor
add
inc
or
add
add
add
add
add
push
add
add
add
mov
add
cmps
add
add
add
add
add
add
lock
add
sub
add
aaa
add
add
stc
or
add
icebp
add
add
test
add
jle
add
add
aaa
add
add
push
or
add
jmp
add
cmp
add
add
jle
add
add
aaa
add
add
adc
add
cmp
add
add
jmp
add
add
aaa
add
add
sub
add
sub
add
push
sub
add
sub
add
add
aaa
add
add
xor
sub
add
sub
add
sub
sub
jle
add
add
aaa
add
add
or
add
sub
add
sub
add
sub
add
add
aaa
add
add
dec
or
add
sub
add
sub
add
sub
add
add
aaa
add
add
push
or
add
sub
add
sub
add
sub
add
add
aaa
add
add
popa
or
add
sub
add
sub
add
sub
add
or
add
(bad)
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
and
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
inc
sbb
add
add
aaa
add
add
outs
or
add
jl
add
cmp
or
add
cmp
add
cmp
xchg
add
cmp
lea
add
cmp
pop
add
sub
jle
add
add
mov
add
sub
add
push
add
sub
add
sub
sub
add
sub
add
add
jle
add
add
cld
or
add
sub
add
sub
jle
add
add
add
add
sub
add
push
pop
mov
add
add
sub
add
sub
jle
add
or
cmp
add
cmp
add
add
mov
add
or
outs
cmp
add
adc
cmps
add
add
add
add
or
add
outs
add
push
push
sub
add
jle
add
add
cld
or
add
sub
add
sub
pop
jle
add
or
cmp
add
sub
jle
add
add
jle
add
add
cld
or
add
sub
add
adc
(bad)
push
adc
add
outs
add
sub
and
add
add
or
add
sub
add
pop
mov
add
add
sub
add
sub
xor
add
add
jg
add
sub
add
push
pop
mov
add
add
sub
add
sub
adc
cmp
sub
add
or
inc
(bad)
(bad)
(bad)
fimul
adc
push
or
add
outs
add
add
fadd
sub
sub
add
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
mov
je
(bad)
inc
cmp
(bad)
jmp
push
add
push
cmp
(bad)
dec
cmp
(bad)
inc
cmp
jmp
sbb
add
cmp
(bad)
inc
add
add
add
add
mov
push
add
add
adc
add
add
add
adc
xchg
add
cmp
lea
add
push
sub
cmp
nop
add
add
add
add
mov
add
jle
add
add
cld
or
add
add
add
add
push
adc
add
outs
add
cmp
add
sub
jle
add
add
fmul
add
sub
mov
add
add
sub
add
sub
pop
jle
add
add
sbb
sub
add
pop
mov
add
add
sub
add
sub
sub
pop
sub
cmp
(bad)
jmp
push
add
push
cmp
(bad)
dec
cmp
(bad)
jmp
cmp
add
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
cmps
add
push
cmp
jmp
sub
add
cmp
add
xor
add
add
adc
sub
sub
ins
cmp
add
cmp
add
jle
add
or
outs
add
add
sub
jno
jb
ja
add
jle
add
add
lock
add
jno
adc
add
or
add
and
add
jge
add
add
add
and
add
jge
add
add
push
jge
add
add
sub
pop
add
add
add
sub
push
sub
cmp
pop
add
push
cmp
cmp
cmp
cmp
add
cmp
sub
cmp
cmp
jmp
sub
add
cmp
xor
add
add
add
add
cmp
add
add
int3
add
add
int
add
inc
or
add
add
add
add
add
add
add
push
add
add
add
jb
add
add
add
lea
add
jle
add
add
jb
add
cmp
jle
add
add
ja
add
cmp
jle
add
add
jl
add
cmp
jle
add
add
or
add
add
jle
add
add
mov
add
cmp
add
sub
add
add
xchg
or
add
jnp
jle
add
add
pushf
or
add
sub
add
sub
add
add
movs
or
add
sub
add
sub
add
add
scas
or
add
sub
add
sub
add
or
add
das
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
sub
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
sub
add
cmp
jmp
sub
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
inc
add
xor
add
add
adc
add
add
test
add
push
cmp
add
cmp
add
inc
or
add
add
add
or
add
adc
add
sbb
add
and
add
add
add
add
xor
add
add
inc
push
sub
add
jle
add
add
push
sub
add
jle
add
add
jle
add
add
jle
add
add
sbb
add
push
sub
add
jle
add
add
jle
add
or
add
ja
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
inc
add
add
adc
add
add
inc
add
add
add
add
sub
rol
add
add
and
es
add
add
mov
add
sub
sub
add
and
sub
xor
add
sub
add
or
fsubr
sub
shr
sub
add
sub
sub
fiadd
adc
add
mov
add
adc
or
add
sub
ins
add
add
add
add
inc
add
add
fimul
add
cmp
add
add
add
and
sub
inc
add
add
sub
inc
add
add
jmp
add
sub
bound
push
sub
sub
sbb
add
sub
add
or
push
push
pop
sbb
jae
add
or
sub
pop
add
or
mov
(bad)
jmp
sub
mov
(bad)
jmp
sub
add
cmp
add
or
xchg
(bad)
(bad)
jmp
inc
add
or
xchg
(bad)
(bad)
jmp
sub
add
sub
cmp
nop
(bad)
(bad)
inc
sub
add
add
add
add
adc
lods
add
add
mov
add
cmp
mov
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
pop
cmp
cdq
add
add
call
popf
add
add
sub
sub
add
or
pop
xor
push
sub
add
or
push
outs
push
add
or
add
and
add
or
sbb
add
sbb
or
sub
add
push
adc
pop
or
sub
add
outs
pop
add
or
add
sbb
add
sub
add
push
pop
add
sbb
add
or
sbb
test
(bad)
inc
sub
add
or
dec
(bad)
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
dec
dec
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
pop
(bad)
(bad)
jmp
dec
add
push
cmp
(bad)
inc
add
add
add
imul
add
add
adc
add
scas
add
add
add
adc
imul
add
add
ins
add
add
jb
add
cmp
add
sub
sbb
add
push
sub
push
sub
jo
je
or
add
pop
add
push
sub
pop
outs
add
push
sub
jle
add
add
add
add
sub
add
sub
inc
add
add
call
add
sub
cmp
cmp
sub
add
cmp
cmp
cmp
cmp
inc
add
or
mov
(bad)
inc
cmp
inc
add
or
cmp
inc
adc
add
push
add
add
add
adc
pop
sub
adc
sub
sub
sub
add
cmc
sub
add
push
sub
add
sbb
add
pusha
add
add
add
adc
aas
add
add
add
or
cmp
add
add
xor
add
cmp
or
cmp
add
add
adc
das
add
add
movs
add
add
cmps
add
add
cmps
add
add
cmp
cmp
push
add
or
push
sbb
sub
push
sub
add
or
or
add
sub
add
sub
push
adc
add
or
pop
or
add
and
sub
add
jg
add
add
inc
add
or
xor
add
sub
inc
add
add
inc
add
or
push
sub
jle
add
add
sub
xor
add
or
push
(bad)
push
pop
add
sbb
add
or
sub
add
push
(bad)
(bad)
inc
cmp
jmp
daa
add
push
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
call
add
inc
add
add
push
or
add
sub
add
add
add
add
jg
add
sub
add
push
adc
add
inc
add
or
mov
add
add
add
test
add
sub
add
sub
sub
add
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sbb
add
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
sbb
add
add
jne
add
add
add
add
sub
int3
test
add
xor
add
add
sbb
add
mov
xchg
add
add
sbb
sahf
add
add
add
add
test
xchg
add
add
call
popf
add
add
lea
add
cmp
call
add
add
test
xchg
add
add
inc
add
or
push
sub
push
mov
sub
push
push
call
sub
add
push
adc
sub
add
sub
jle
add
or
jle
add
add
scas
or
add
sub
add
pop
or
dec
add
or
add
sub
cmp
(bad)
jmp
sbb
add
cmp
(bad)
inc
cmp
jmp
sub
add
cmp
(bad)
jmp
add
or
pop
(bad)
(bad)
inc
cmp
(bad)
call
add
popa
(bad)
(bad)
call
add
pop
(bad)
(bad)
jmp
sub
add
cmp
(bad)
call
xor
push
add
add
and
add
pavgb
ret
add
add
add
add
ret
or
add
mov
mov
rol
add
lds
add
cmp
add
add
add
or
lds
add
sbb
push
cmp
add
add
cmp
add
sub
add
je
add
add
pop
sbb
dec
add
or
add
or
outs
dec
add
or
add
or
outs
dec
add
or
enter
inc
add
add
outs
dec
add
or
add
adc
adc
outs
push
add
or
push
add
or
sbb
push
add
push
add
imul
add
in
add
sub
add
push
sub
or
add
pop
adc
add
add
(bad)
or
sub
or
add
or
or
add
or
add
add
or
add
push
outs
push
add
or
add
add
es
add
push
adc
or
mov
add
or
jle
add
add
inc
or
add
push
outs
push
add
or
add
add
push
or
add
push
push
dec
mov
add
sub
add
sub
dec
push
xor
add
add
pop
outs
push
add
or
inc
add
add
gs
add
push
add
sub
add
sub
pop
adc
jle
add
add
or
add
adc
sub
add
or
mov
add
and
(bad)
call
pop
jle
add
add
mov
add
sub
add
push
adc
sub
add
or
mov
add
sbb
sub
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
inc
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
mov
xor
(bad)
inc
xor
(bad)
inc
cmp
cmp
(bad)
(bad)
inc
add
add
add
add
pop
add
cmp
add
mov
add
add
add
add
add
xchg
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
push
add
adc
and
add
pavgb
cmp
add
add
cmp
add
add
fild
add
adc
cmp
add
add
adc
jle
add
add
int3
or
add
add
aam
add
cmp
add
add
fiadd
add
cmp
add
add
sub
add
push
or
outs
push
add
or
add
popa
adc
sbb
add
or
sub
sub
pop
sub
add
push
sub
push
sbb
push
fisub
push
dec
pop
pop
push
jle
add
add
and
sub
add
jg
add
add
inc
add
or
xor
add
sub
inc
add
add
inc
add
or
dec
jle
add
add
scas
adc
sbb
add
sub
fimul
adc
push
pop
add
sbb
add
or
push
and
jmp
push
sbb
sub
cmp
(bad)
(bad)
inc
and
(bad)
jmp
das
add
push
cmp
(bad)
(bad)
jmp
push
add
push
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
add
jno
add
add
add
sbb
add
add
add
adc
add
add
aad
add
sub
add
push
add
and
add
sub
push
add
or
outs
push
add
or
add
dec
add
or
add
or
jle
add
add
repnz
add
push
outs
pop
add
or
jle
add
add
sti
or
add
push
outs
pop
add
or
push
mov
outs
pop
add
or
and
pop
add
or
outs
pop
add
or
or
or
sub
imul
sub
push
sub
push
sub
outs
pop
add
or
out
or
or
add
or
pop
outs
dec
add
or
add
or
sub
sub
and
add
add
add
push
fiadd
in
outs
pop
add
or
out
sub
outs
dec
add
or
loope
add
push
or
add
or
adc
inc
add
add
sub
add
sub
add
push
adc
sub
add
sub
adc
sub
add
add
add
add
js
sbb
add
add
add
or
add
add
add
add
loopne
and
add
add
xor
add
add
sbb
add
sbb
push
dec
loopne
dec
sub
push
sub
push
sub
pop
push
push
sub
sub
push
sbb
sub
or
and
or
or
add
or
push
sbb
sbb
pop
pop
push
push
sbb
push
sub
add
or
leave
pop
outs
add
or
scas
jae
add
or
stos
or
test
sub
(bad)
dec
sub
popa
add
or
movs
add
add
xor
jmp
add
adc
sub
jle
add
add
dec
push
add
cmp
mov
add
cmp
xchg
add
add
add
add
xchg
add
add
xchg
add
add
cmp
sahf
add
add
add
add
jbe
add
cmp
sub
add
sub
sub
add
or
push
add
add
add
cmps
push
add
sub
add
push
sub
add
sbb
add
or
pop
push
sub
push
xor
push
pop
add
add
or
pop
outs
push
add
or
jle
add
or
sub
add
push
cmp
(bad)
inc
cmp
jmp
and
add
cmp
(bad)
jmp
mov
(bad)
(bad)
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
dec
cmp
jmp
sub
add
cmp
(bad)
inc
add
jbe
dec
add
add
in
add
sub
sub
sub
sub
add
sub
sub
icebp
add
adc
add
outs
add
add
add
adc
cmp
cmp
add
add
mov
add
sub
add
add
in
add
sub
ds
sub
add
and
sub
sub
push
and
sub
xor
add
sub
push
sub
sub
mov
push
sub
sub
ror
mov
or
lds
sub
add
sbb
add
add
add
sbb
add
push
sub
add
enter
cmp
stos
add
add
lods
add
add
mov
add
pop
cmp
mov
mov
mov
rol
add
movlps
sub
or
pop
add
add
push
adc
sub
add
sub
add
push
or
add
outs
add
add
fdivr
add
add
in
push
add
sub
add
push
add
and
add
sub
sub
jle
add
add
sldt
sub
add
push
add
and
add
or
cmp
(bad)
call
cmp
cmp
pop
add
add
push
sub
sub
sub
add
cmp
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
mov
inc
(bad)
(bad)
jmp
inc
add
push
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
cmp
(bad)
dec
inc
add
adc
add
add
add
add
add
add
sbb
add
mov
add
sbb
add
adc
add
cmp
add
popa
add
add
sub
add
cmp
add
cmp
add
sub
add
adc
sub
sub
sub
adc
sub
add
sub
add
or
out
sub
pop
sub
outs
inc
add
push
sub
adc
(bad)
push
or
add
outs
add
add
sbb
fcom
cmp
sub
add
cmp
cmp
cmp
data16
or
xchg
(bad)
(bad)
dec
xchg
(bad)
(bad)
inc
add
adc
add
add
add
add
add
add
adc
(bad)
ror
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
sub
add
cmp
add
add
cmp
add
add
push
sub
add
sub
jnp
add
add
add
test
add
add
add
add
sub
and
add
and
and
add
add
push
add
add
pop
sldt
sub
sbb
push
push
sub
fld
sub
add
fadd
sub
sub
add
push
sub
sub
add
sub
sub
add
push
sub
add
sub
jnp
add
add
add
test
dec
add
add
add
cmc
add
hlt
add
add
sub
jnp
add
add
add
test
dec
add
add
add
cmc
add
hlt
add
add
sub
jnp
add
add
add
test
push
add
add
add
cmc
add
hlt
add
add
xor
add
add
adc
sub
dec
add
add
pop
add
add
pusha
add
add
add
add
push
add
add
pop
sldt
sub
pop
push
sub
pop
jle
add
add
pop
sldt
sub
sbb
push
sub
sub
push
add
add
pop
sldt
sub
add
push
sub
add
or
add
and
add
or
sub
cmp
cmp
cmp
sub
add
sub
cmp
mov
push
sub
or
mov
(bad)
ror
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
add
add
push
add
add
push
add
add
push
sub
add
push
sub
add
xor
add
add
add
add
push
sub
add
add
in
add
add
icebp
add
add
sub
add
sub
cmp
add
add
repz
add
hlt
add
add
cmc
add
add
cli
add
add
sub
sub
or
sub
jle
add
add
arpl
add
sub
add
push
or
add
push
sub
add
sub
jae
add
push
or
add
or
pop
sub
add
sub
push
add
sub
push
add
sbb
add
or
sub
add
add
cmp
add
adc
sub
or
add
or
add
add
arpl
add
sub
add
push
adc
push
sub
add
sub
add
push
adc
push
adc
outs
push
or
aaa
add
or
or
push
or
add
outs
add
add
fadd
sub
add
or
or
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
rol
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
add
(bad)
call
pop
cmp
(bad)
(bad)
inc
add
add
add
add
push
add
add
add
mov
push
add
add
adc
add
arpl
add
sbb
adc
cmp
ds
add
sbb
ds
sub
push
sub
sub
sub
xor
sub
push
sub
add
or
pop
or
pop
mov
sub
xor
push
sub
add
or
shr
add
or
mov
sub
pop
sub
or
enter
add
mov
xor
add
add
push
add
adc
sub
push
sub
sbb
sbb
and
and
and
sub
push
sub
sub
sub
add
jecxz
data16
push
sub
or
fld
sub
outs
push
xlat
push
sub
add
xlat
outs
ins
add
push
sub
sbb
add
ins
add
add
add
sub
sub
sub
jle
add
add
nop
sldt
sub
and
sub
sub
fimul
xor
add
sub
add
(bad)
cmp
add
sub
sub
add
push
sub
sub
fmul
sub
push
sub
sub
add
push
sub
or
add
add
lds
add
sub
add
push
pop
outs
add
and
add
sub
add
add
add
adc
add
add
add
add
or
add
ret
add
add
adc
sbb
add
add
push
add
add
adc
push
add
add
sub
add
or
in
sub
loopne
sub
add
sub
add
add
xor
add
add
add
push
add
add
dec
sub
push
adc
push
sub
add
push
add
add
jmp
inc
jle
add
add
inc
sub
dec
adc
add
push
add
add
push
add
add
jmp
ds
add
add
outs
pop
add
or
sub
add
or
scas
sub
test
or
movs
sub
add
push
sub
or
mov
pop
add
or
mov
push
add
or
lods
sub
add
push
sub
or
mov
jle
add
add
add
jle
add
add
add
add
adc
add
add
xchg
add
add
add
add
sldt
add
xor
add
cmp
add
add
add
add
or
add
cmp
add
add
jle
add
add
pop
adc
add
sub
add
sbb
add
data16
add
sbb
add
cmp
add
add
jle
add
add
sbb
add
cmp
add
sbb
add
data16
add
mov
or
add
sbb
add
data16
add
sbb
add
cmp
add
add
jle
add
add
sub
add
cmp
add
add
jle
add
add
adc
add
sub
add
sbb
add
data16
add
xchg
add
sub
add
push
sbb
add
data16
add
mov
sub
add
and
add
data16
add
jmp
sub
add
and
add
data16
add
sbb
add
sub
add
push
and
add
data16
add
xor
add
sub
add
push
and
add
data16
add
pop
adc
add
sub
add
and
jle
add
add
adc
add
push
and
add
sub
add
or
(bad)
(bad)
(bad)
jmp
sub
mov
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
inc
add
xor
add
add
add
add
sub
jle
add
add
lds
add
sub
add
push
jge
add
add
jle
add
add
lds
add
sub
add
push
jge
add
add
jle
add
add
lds
add
sub
add
push
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
mov
add
add
adc
adc
add
add
add
call
or
call
push
add
push
sub
add
jecxz
add
add
inc
add
add
add
add
add
add
pop
add
add
adc
jle
add
add
mov
add
sub
sub
sub
sub
xor
in
sub
sub
add
sub
sub
add
push
sub
sub
add
sub
sub
fld
bound
add
sub
sub
sub
add
sub
sub
add
or
out
add
add
xor
add
add
add
bound
add
add
imul
add
sub
sub
pop
jle
add
add
mov
pop
sub
pop
sub
imul
add
sub
jle
add
add
ficom
add
sub
sub
add
mov
add
sub
add
sub
add
push
add
push
jge
add
add
sub
pop
sub
sub
cmp
sub
cmp
add
push
sub
dec
add
push
cmp
and
add
cmp
mov
mov
(bad)
jmp
sub
add
cmp
add
adc
add
loop
add
pop
add
adc
dec
loopne
pop
add
jle
add
add
jmp
add
cmp
mov
add
cmp
xchg
add
add
xchg
add
add
fwait
add
add
cmp
jo
add
or
add
cmp
add
add
and
add
sub
sub
add
or
add
popa
adc
add
sub
add
pop
sub
add
sub
cmp
add
add
pop
jle
add
add
xchg
adc
add
sub
add
sub
add
or
jo
add
fwait
adc
add
sub
add
or
add
sub
add
or
mov
adc
push
cmp
add
add
push
push
sub
or
dec
call
or
add
add
sub
add
sub
add
sub
jle
add
add
les
add
sub
add
push
adc
jo
add
aad
add
sub
add
push
add
dec
add
push
sub
add
sub
sub
add
or
add
xor
add
push
push
dec
pop
pop
push
push
dec
adc
mov
xchg
pop
sub
add
adc
push
sbb
push
sub
push
sbb
call
imul
add
add
or
jo
add
cli
adc
add
sub
add
sub
add
adc
sbb
adc
mov
xor
adc
pop
sub
add
or
sbb
sbb
pop
pop
push
push
sbb
adc
mov
stos
sub
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
mov
imul
inc
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
jae
add
cmp
(bad)
dec
cmp
(bad)
jmp
sub
add
cmp
(bad)
inc
cmp
(bad)
inc
add
sub
sub
sub
sub
add
repnz
add
sub
sub
add
sub
add
out
dec
add
push
sub
sub
fstp
xor
mov
add
and
add
jle
add
add
cmp
add
cmp
add
jle
add
add
movlps
add
pop
add
add
bound
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
outs
add
add
mov
add
jle
add
add
cmp
add
sub
add
push
outs
inc
add
or
add
add
sub
jle
add
add
inc
adc
add
sub
add
add
add
add
and
add
sub
pop
jle
add
add
outs
adc
add
sub
add
outs
inc
add
or
add
add
sub
jle
add
add
ja
add
sub
add
push
add
add
add
jo
add
test
add
sub
add
push
add
add
add
inc
add
or
mov
jnp
add
add
jo
add
mov
add
sub
add
push
outs
push
add
or
push
xor
jnp
add
add
sbb
push
add
or
sub
or
sbb
add
sub
je
add
jge
add
add
and
add
jo
add
mov
add
sub
add
push
adc
add
and
add
sub
add
add
add
add
jo
add
test
add
sub
add
push
add
add
add
and
add
jge
add
add
sub
add
push
cmp
cmp
add
push
cmp
cmp
and
add
cmp
mov
mov
(bad)
inc
cmp
sbb
add
cmp
cmp
add
add
add
test
and
and
add
add
xor
in
add
add
add
adc
cdq
add
add
call
add
jle
add
add
xlat
adc
add
xchg
add
add
fwait
add
add
add
add
add
add
add
nop
add
add
xchg
add
add
xchg
add
add
cmp
jle
add
or
push
or
pop
outs
popa
add
or
cmp
das
push
push
outs
popa
add
or
sub
sub
add
sub
push
push
outs
popa
add
or
jbe
add
mov
add
push
pop
outs
push
add
or
sub
add
or
jo
add
cmp
add
sub
add
or
and
add
sub
ja
add
or
add
or
or
sub
add
adc
add
pop
adc
jp
add
jle
add
add
data16
add
sub
add
jle
add
or
add
or
add
jo
add
imul
sub
add
push
adc
or
mov
sub
or
adc
sub
or
or
add
or
push
pop
jle
add
add
push
add
push
outs
jnp
add
outs
popa
add
or
sub
add
or
aaa
pop
cmp
(bad)
(bad)
call
or
and
call
or
or
or
add
or
mov
jo
add
xchg
adc
add
sub
add
pop
sub
add
sub
adc
sbb
add
add
rcl
sub
add
push
adc
outs
add
xchg
add
push
sub
fiadd
pop
sub
cmp
(bad)
jmp
push
add
push
cmp
dec
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
mov
pop
(bad)
(bad)
jmp
sub
add
cmp
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
mov
pop
(bad)
(bad)
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
xor
add
add
rcl
add
add
push
sub
jo
add
(bad)
adc
add
push
and
add
jo
add
lock
add
dec
sub
add
and
sub
add
add
jo
add
pop
adc
sub
add
jo
add
xor
sub
add
sub
add
or
movs
sub
mov
push
sub
push
sub
or
mov
sub
add
sub
push
sub
sbb
push
add
add
adc
and
pavgb
fwait
add
add
pushf
add
add
add
or
inc
add
add
dec
add
add
add
add
imul
add
add
inc
add
add
inc
add
add
inc
add
add
dec
add
add
add
or
add
or
add
outs
jge
add
jle
add
add
imul
push
push
push
sub
pop
jp
push
push
dec
pop
pop
push
push
dec
jle
add
add
jmp
push
pop
push
push
sub
adc
add
push
pop
dec
outs
popa
add
or
add
xchg
popa
rcr
pop
dec
pop
pop
push
push
sbb
jle
add
add
add
push
push
push
pop
push
push
pop
dec
pop
pop
push
push
push
pop
dec
add
add
or
mov
pop
or
push
push
push
pop
adc
push
sub
add
adc
or
sub
add
adc
push
pop
adc
push
push
cmp
pop
and
push
push
pop
adc
dec
outs
popa
add
or
push
push
pop
and
pop
and
jle
add
add
pop
or
dec
outs
popa
add
or
push
push
pop
and
pop
and
or
pop
adc
xchg
popa
rcl
add
pop
and
outs
jg
add
push
pop
or
push
pop
or
dec
pop
pop
push
push
pop
or
dec
jle
add
add
pusha
add
or
push
push
pop
or
push
push
push
pop
adc
pop
adc
pop
pop
push
push
pop
adc
jle
add
add
push
push
pop
adc
push
push
pop
adc
push
pop
adc
dec
pop
pop
push
sbb
push
pop
adc
dec
adc
outs
pusha
add
or
push
(bad)
(bad)
(bad)
jle
add
add
imul
push
pop
sbb
push
sub
adc
push
pop
sbb
pop
pop
pushf
push
pop
sbb
pop
sbb
pop
pop
push
push
pop
sbb
jle
add
add
fiadd
sbb
push
or
add
or
or
pop
sbb
push
push
sub
adc
push
sbb
adc
push
pop
sbb
dec
xchg
adc
push
sbb
xchg
popa
rcr
pop
dec
pop
pop
push
push
sbb
jle
add
add
add
push
push
pop
sbb
push
pop
sbb
dec
pop
pop
push
push
pop
sbb
dec
push
outs
add
adc
pop
outs
jge
add
adc
add
or
or
add
or
test
add
push
fidivr
jae
add
or
mov
(bad)
dec
cmp
cmp
xchg
add
cmp
cmp
mov
(bad)
push
add
or
scas
std
(bad)
jmp
push
pop
and
push
fiadd
pop
sub
pop
and
sub
cmp
(bad)
inc
cmp
(bad)
inc
add
inc
sbb
add
add
add
add
add
add
add
add
adc
push
add
add
adc
sub
pavgb
pusha
add
add
popa
add
add
bound
add
push
cmp
add
cmp
add
sub
add
cmp
add
jle
add
add
jae
add
pop
pop
das
add
sub
pop
add
add
add
add
dec
adc
add
add
add
add
push
adc
add
push
outs
sbb
add
adc
add
mov
add
or
jle
add
jle
add
add
push
add
or
jae
add
or
add
imul
jle
add
add
imul
push
push
push
sub
add
dec
pop
jp
adc
pushf
push
push
dec
pop
pop
push
push
dec
jle
add
add
jecxz
sbb
push
push
push
pop
push
push
sub
adc
pop
push
push
pop
dec
xchg
adc
xchg
popa
rcr
pop
dec
pop
pop
push
push
sbb
jle
add
add
add
push
push
push
pop
push
push
pop
dec
pop
pop
push
push
push
pop
dec
pop
mov
jae
add
xor
push
push
push
pop
or
push
push
sub
jle
add
add
push
pop
or
dec
pop
xchg
adc
dec
xchg
cs
push
pop
sub
push
push
pop
or
push
pop
or
dec
pop
pop
push
push
pop
or
dec
jle
add
add
mov
sub
push
sub
pop
adc
push
push
pop
adc
push
push
push
pop
sbb
jb
add
cmp
pop
sub
push
pop
sbb
xchg
push
push
pop
sub
pop
sub
pop
push
pop
adc
dec
xchg
popa
rcl
pop
sub
pop
sub
or
pop
adc
xchg
popa
rcl
push
pop
sbb
jle
add
add
push
pop
sub
pushf
push
pop
adc
pop
adc
pop
pop
push
push
pop
adc
or
pop
adc
push
push
pop
adc
push
pop
adc
dec
pop
pop
push
push
pop
adc
dec
jle
add
add
push
push
pop
adc
push
push
push
pop
sbb
pop
sbb
pop
pop
push
push
pop
sbb
jle
add
add
jb
add
aas
popa
(bad)
(bad)
inc
pop
sbb
push
push
pop
lea
add
adc
add
add
or
pop
and
jb
add
jae
add
push
cmp
add
add
pop
sub
push
pop
and
xchg
push
push
pop
sub
pop
sub
pop
push
pop
adc
dec
xchg
popa
rcl
pop
sub
pop
sub
or
pop
adc
xchg
popa
rcl
add
pop
sbb
dec
push
pop
sub
adc
pop
sbb
dec
xchg
popa
rcr
sub
pushf
add
jle
add
adc
outs
inc
add
or
add
or
push
pop
adc
pop
adc
pop
pop
push
push
pop
adc
or
pop
adc
push
push
pop
adc
push
pop
adc
dec
pop
pop
push
push
pop
adc
dec
jle
add
add
push
push
pop
adc
push
push
push
pop
sbb
push
pop
sbb
dec
pop
pop
push
push
pop
sbb
dec
jle
add
add
push
push
pop
sbb
push
push
push
pop
and
pop
and
pop
pop
push
push
pop
and
pop
mov
jae
add
aas
and
(bad)
inc
pop
and
push
push
sub
or
pop
and
dec
xchg
adc
pop
and
dec
xchg
cs
push
pop
sub
push
push
pop
and
push
pop
and
dec
pop
pop
push
push
pop
and
dec
jle
add
add
rol
pop
sub
sub
push
sub
sub
cmp
cmp
sbb
xchg
cld
(bad)
inc
cmp
add
or
(bad)
cld
(bad)
inc
cmp
pusha
add
or
mov
(bad)
inc
cmp
sub
add
cmp
xor
add
add
add
add
rcl
add
add
aas
push
sub
es
add
add
pop
add
add
cmp
add
sub
push
xor
add
xor
add
jne
add
pop
adc
xor
adc
jecxz
sub
add
or
mov
push
sub
push
sub
sub
add
jbe
jbe
add
call
add
or
sub
add
push
sub
sub
icebp
add
adc
add
outs
add
add
add
adc
cmp
cmp
add
add
outs
adc
sub
jle
add
add
call
xor
ds
sub
add
and
sub
sub
push
and
sub
pop
add
push
sub
push
sub
sub
mov
push
sub
sub
ror
mov
or
lds
sub
add
sbb
add
lods
add
add
add
push
cmp
add
jle
add
add
adc
cmp
add
cmp
add
cmp
add
sbb
inc
cmp
add
ins
add
add
jb
add
sub
add
sbb
push
pop
outs
add
push
pop
sub
adc
sub
add
or
ficomp
sub
add
sub
or
fist
add
push
or
add
outs
add
add
fcom
cmp
sub
add
push
cmp
mov
xchg
(bad)
(bad)
jmp
arpl
add
cmp
cmp
mov
(bad)
jmp
add
or
mov
(bad)
dec
mov
(bad)
inc
add
add
add
add
xor
push
add
add
push
add
adc
(bad)
rcl
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
add
outs
cmp
add
add
add
push
add
add
push
sub
add
push
add
add
or
pusha
add
push
add
sub
add
add
add
or
add
add
add
or
or
add
add
add
cmc
add
hlt
add
add
or
or
add
add
add
cmc
add
hlt
add
add
xor
add
add
add
cmp
add
add
int
add
jnp
add
add
leave
add
add
mov
add
sub
jns
add
jle
add
add
test
add
cmp
add
jns
add
push
cmp
add
cmp
add
cmp
add
or
outs
mov
add
push
sub
outs
mov
add
or
adc
sub
push
sub
add
add
ja
add
outs
mov
add
outs
pop
add
or
add
pop
adc
mov
sub
cmp
(bad)
jmp
cmp
add
cmp
(bad)
jmp
sub
add
cmp
xor
jge
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
push
add
or
js
(bad)
jmp
fiadd
add
add
add
add
sub
lea
add
cmp
adc
add
add
add
add
sbb
add
lds
add
add
adc
mov
add
pop
cmp
cmp
xchg
add
add
sub
add
cmp
xchg
add
add
aas
push
sub
inc
sub
sub
jle
add
add
leave
adc
add
push
or
add
push
sub
add
sub
sub
or
add
push
or
add
or
add
aaa
add
or
add
or
mov
sub
or
add
outs
add
add
fadd
sub
add
or
ins
(bad)
(bad)
dec
cmp
(bad)
jmp
mov
add
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
gs
(bad)
call
add
arpl
(bad)
inc
add
add
add
add
sub
push
jle
push
add
add
sbb
add
sti
add
add
add
adc
mov
add
cmp
add
add
test
add
cmp
mov
add
cmp
xchg
add
add
xchg
add
add
cwde
add
add
cdq
add
add
add
or
sub
add
es
outs
mov
add
or
adc
push
adc
sub
adc
adc
call
or
add
add
out
adc
add
push
sub
add
sub
adc
(bad)
add
push
adc
pop
pop
adc
adc
adc
mov
(bad)
add
outs
(bad)
(bad)
jmp
cmp
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
xor
push
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
push
add
or
arpl
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
call
add
add
not
add
push
adc
or
and
add
sub
add
add
adc
add
add
add
(bad)
add
add
add
adc
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
xor
adc
add
sub
add
add
adc
or
inc
push
add
add
add
add
add
push
add
add
mov
add
add
add
push
jle
add
add
push
push
add
sub
add
push
sub
add
jge
add
add
add
outs
cmp
add
jle
add
add
pop
push
add
sub
add
push
sub
add
jge
add
add
add
outs
cmp
add
jle
add
add
movs
push
add
sub
add
push
sub
add
jge
add
add
add
outs
cmp
add
jle
add
add
jmp
sub
add
sub
add
jge
add
add
add
outs
cmp
add
jle
add
add
cs
add
sub
add
push
sub
add
jge
add
add
add
outs
cmp
add
jle
add
add
pop
pop
add
sub
add
push
sub
add
jge
add
add
add
outs
cmp
add
jle
add
add
push
push
add
sub
add
push
sub
add
jge
add
add
add
sub
jnp
add
add
add
mul
add
sub
sub
sub
add
sub
sub
add
or
out
add
add
add
sub
sub
sub
add
sub
sub
out
add
add
pop
sub
sub
sub
sub
add
sub
add
lock
jmp
add
or
or
adc
add
add
add
repz
add
sub
sub
jmp
or
or
sub
sub
sub
sub
add
hlt
sub
lock
add
sub
add
xor
add
add
add
add
adc
sub
cmp
mov
add
cmp
mov
jl
add
cwde
pop
add
cmp
mov
add
cmp
mov
add
jle
add
add
cwde
pop
add
cmp
mov
add
jne
add
add
pop
sub
pop
jle
add
add
test
sub
add
outs
xchg
add
or
push
sub
pop
jle
add
add
test
sub
add
outs
xchg
add
or
add
add
sub
or
or
outs
mov
push
add
add
sub
or
outs
xchg
add
or
jmp
add
sub
push
sub
cmp
(bad)
jmp
imul
push
cmp
dec
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
add
or
inc
(bad)
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
add
or
inc
(bad)
(bad)
inc
(bad)
rcl
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
test
add
ds
sub
sub
sub
add
sub
sub
icebp
add
adc
add
outs
add
add
add
adc
cmp
cmp
add
add
mov
xor
add
add
ds
push
sub
sub
push
sub
add
and
sub
sub
push
and
sub
outs
add
push
sub
push
sub
sub
mov
push
sub
sub
ror
mov
or
lds
sub
add
sbb
add
lods
add
add
add
adc
add
add
iret
pop
add
cmp
add
cmp
add
pop
cmp
add
jno
add
cmp
add
cmp
add
cmp
add
adc
adc
sub
sub
pop
outs
jbe
add
push
sub
xchg
add
or
ficomp
sub
loopne
sub
adc
(bad)
push
adc
add
outs
add
add
fcom
sub
(bad)
(bad)
jmp
sub
add
push
cmp
mov
mov
(bad)
jmp
jne
add
cmp
cmp
cmp
xchg
add
or
cmp
dec
cmp
inc
adc
add
add
add
add
add
add
push
add
adc
(bad)
rcl
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
add
add
push
add
add
push
add
add
push
sub
add
push
sub
add
xor
add
add
add
add
adc
sub
add
add
in
add
add
icebp
add
add
sub
add
sub
cmp
add
add
repz
add
hlt
add
add
cmc
add
add
cli
add
add
sub
sub
or
sub
jle
add
add
jmp
sub
add
or
add
push
sub
add
sub
jae
add
push
or
add
or
pop
sub
add
sub
push
add
sub
push
add
sbb
add
or
sub
add
add
cmp
add
adc
sub
or
add
or
add
add
jmp
sub
add
adc
push
sub
add
sub
add
push
adc
push
adc
outs
cwde
add
or
or
aaa
add
or
or
push
or
add
outs
add
add
fadd
sub
add
or
or
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
rol
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
add
(bad)
call
pop
cmp
(bad)
(bad)
inc
add
add
add
add
push
add
add
add
mov
push
add
add
sbb
add
jo
add
add
add
sub
sub
and
sub
sub
sub
sub
sub
push
sub
add
loopne
ja
add
sub
or
fiadd
sub
sub
add
or
aam
jo
add
sub
push
sub
sub
add
push
sub
or
pop
jle
add
add
push
sbb
add
sub
add
pop
outs
add
and
add
sub
sub
fiadd
sub
adc
add
add
add
add
or
add
adc
add
je
add
sub
add
pop
sub
sub
add
add
sub
add
sub
sub
inc
push
sub
add
ds
add
add
stc
adc
sub
sub
push
sub
test
add
test
add
sub
add
push
sub
add
mov
push
sub
push
sub
sub
push
sub
sub
mov
sub
(bad)
rcl
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
adc
add
or
or
add
add
add
cmc
add
hlt
add
add
sub
jnp
add
add
add
not
xor
rol
add
sub
add
add
add
add
test
add
cmp
mov
add
sbb
mov
add
cmp
xchg
add
add
cwde
add
add
sub
add
push
add
add
push
add
jnp
add
jle
add
add
cwde
sbb
add
sub
add
add
jnp
add
sub
add
or
mov
and
add
jae
add
or
add
jae
add
or
add
add
jnp
add
add
pushf
add
or
sub
cmp
(bad)
inc
ja
(bad)
jmp
jp
add
cmp
(bad)
inc
cmp
(bad)
jmp
add
push
cmp
jmp
or
add
cmp
(bad)
inc
cmp
(bad)
jmp
jnp
add
cmp
(bad)
jmp
or
add
cmp
(bad)
inc
add
add
add
cmc
add
add
add
add
add
add
aad
add
cmp
add
add
mov
cmps
add
add
lods
add
add
mov
add
cmp
mov
add
jnp
add
add
jno
sub
add
jnp
add
add
popf
add
or
add
(bad)
sbb
add
sub
add
add
jnp
add
sub
add
or
mov
jnp
add
add
sahf
add
or
hlt
add
add
arpl
add
jle
add
add
sub
add
sub
add
push
add
add
add
popf
add
or
sub
add
sub
sub
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
jnp
add
cmp
jmp
sub
add
cmp
(bad)
jmp
mov
dec
(bad)
(bad)
inc
cmp
(bad)
jmp
add
push
cmp
inc
cmp
(bad)
inc
cmp
inc
add
push
sub
add
xor
add
add
add
add
sub
sub
sub
push
sub
jle
add
add
push
sbb
add
das
sub
xor
ds
sub
add
push
sub
add
push
sub
sub
outs
jge
add
sub
sub
add
push
sub
sub
add
push
sub
add
leave
sub
add
sub
sub
add
or
mov
push
sub
push
sub
add
xor
add
add
add
adc
pop
sub
mov
add
sbb
sub
sub
sub
sub
sub
sub
sub
add
sub
outs
mov
aad
sub
add
sub
sub
aad
sub
push
sub
sub
add
or
rol
sub
outs
test
add
sub
push
sub
add
add
mov
(bad)
rcr
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
xor
mov
add
adc
imul
add
outs
add
add
cmp
add
cmp
add
jne
add
jle
add
add
xchg
sbb
add
ins
add
add
jno
add
cmp
add
jle
add
add
mov
ins
add
add
add
or
jle
add
add
lods
sbb
add
sub
add
outs
pop
add
or
jle
add
add
mov
sub
add
outs
pop
add
or
jle
add
add
(bad)
sbb
add
sub
add
outs
pop
add
or
jle
add
add
aam
add
sub
add
push
outs
pop
add
or
jle
add
add
loope
add
sub
add
push
outs
pop
add
or
add
add
mov
add
fiadd
add
sub
add
push
push
sub
or
or
and
add
or
xchg
add
adc
adc
call
add
sub
add
add
das
sbb
add
sub
add
sub
add
adc
sbb
add
add
mov
add
out
sbb
add
sub
add
sub
add
add
add
mov
add
add
add
sub
add
push
sub
push
adc
or
sub
adc
add
push
adc
push
adc
outs
mov
or
pop
adc
adc
adc
mov
outs
(bad)
(bad)
inc
sub
add
or
mov
(bad)
dec
cmp
add
or
xchg
(bad)
dec
cmp
cmp
sub
add
cmp
pop
add
or
test
(bad)
inc
cmp
add
push
cmp
add
xor
add
add
adc
dec
loopne
pusha
jle
add
add
mov
add
adc
add
sub
pop
sub
pushw
push
sub
ins
sub
pop
push
push
sub
sub
sbb
call
add
pop
sbb
add
sub
add
outs
xor
add
sub
push
push
dec
pop
pop
push
push
sbb
sbb
pop
pop
push
push
sbb
or
dec
sub
cmp
sub
add
sub
cmp
cwde
(bad)
(bad)
inc
cmp
xchg
(bad)
(bad)
dec
inc
cmp
sub
sub
(bad)
rcr
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
sub
jnp
add
add
add
idiv
add
adc
add
add
add
add
xor
add
add
add
add
adc
push
jne
add
add
or
or
or
or
or
repz
repnz
sub
sub
in
add
add
add
or
or
push
sub
sub
add
cmc
outs
mov
add
sub
sub
add
or
jmp
add
add
push
add
add
add
add
sub
sub
sbb
sbb
pop
sub
sub
sub
sub
sub
sub
outs
pop
add
sbb
sub
sub
sub
add
into
sub
leave
add
shr
xchg
add
push
sub
add
shr
xchg
add
push
sub
add
iret
add
into
add
or
add
add
add
add
cmc
outs
movs
add
or
cmc
add
add
sub
jnp
add
add
add
not
add
sub
sub
add
imul
nop
add
push
sub
add
add
or
or
or
inc
sub
sub
add
hlt
sub
out
push
add
cmps
add
or
and
add
cmps
add
or
add
add
add
sub
add
add
sub
jnp
add
add
add
imul
sub
jnp
add
add
add
test
add
add
add
add
sub
sub
add
outs
sbb
add
sub
add
jae
add
or
outs
pusha
add
or
add
ja
add
sub
add
push
jle
add
add
outs
sbb
add
sub
add
jae
add
or
add
add
add
add
sub
add
add
mov
add
add
adc
add
stc
add
add
add
adc
sub
cmp
mov
add
cmp
lea
add
movs
sbb
add
test
add
cmp
push
sub
add
cmp
mov
add
stos
add
add
cmp
lea
add
lods
sbb
add
sub
add
outs
sbb
add
add
add
add
xor
sbb
sub
sub
add
add
outs
stos
add
or
add
or
pop
push
sub
pop
pop
or
add
add
add
lods
add
or
aad
jle
add
add
mov
add
sub
add
push
outs
sbb
add
es
outs
add
jae
add
or
dec
(bad)
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
add
or
dec
(bad)
(bad)
inc
cmp
inc
cmp
(bad)
jmp
add
or
dec
(bad)
(bad)
inc
cmp
(bad)
inc
add
(bad)
rcr
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
add
sub
add
add
or
or
add
jae
add
or
icebp
jae
add
push
sub
add
add
add
scas
add
or
mov
add
sub
add
add
sub
mov
add
sub
add
xor
add
add
add
add
sbb
sub
sub
sub
or
pop
sub
sub
sub
sub
sub
add
mov
add
sub
sub
add
loop
xchg
add
or
fld
sub
add
fld
fsubr
mov
add
sub
add
xlat
add
(bad)
add
scas
sub
sub
sub
sub
sub
adc
sub
sub
add
in
sub
call
sub
sub
jecxz
xor
fild
add
xor
add
rcr
add
add
test
add
cmp
xchg
add
add
cdq
add
add
test
add
or
add
add
mov
jp
add
adc
add
add
enter
cmp
add
adc
adc
add
add
rcr
add
sub
xchg
add
add
sub
add
pop
and
sub
sub
pop
adc
sub
xchg
add
add
sub
pop
jae
add
or
sub
pop
add
or
jb
(bad)
jmp
sub
ins
(bad)
(bad)
jmp
sub
add
cmp
(bad)
jmp
sub
add
cmp
jmp
sub
add
cmp
sub
add
cmp
mov
add
sub
mov
add
sub
dec
add
add
add
adc
sub
sub
sub
es
add
add
ficomp
add
sub
sub
mov
add
jle
add
add
mov
sbb
pop
sub
sub
sub
ror
sub
sub
add
push
sub
push
sub
sub
add
push
sub
sub
fiadd
adc
add
dec
add
add
add
adc
jle
add
add
sub
jle
add
add
sub
add
sub
sub
push
sub
add
and
daa
add
push
sub
sub
sub
sub
sub
sub
into
adc
sub
sub
ror
sub
push
sub
add
xor
add
add
add
add
adc
add
adc
adc
add
push
jle
add
add
sub
sub
sub
sub
sub
repz
sub
add
push
sub
add
jle
add
add
add
out
bound
add
sub
sub
sub
repz
out
add
add
sub
sub
add
cli
outs
add
cmc
pop
lldt
add
or
sub
imul
mov
icebp
add
add
add
or
sub
imul
mov
icebp
add
add
add
or
sub
imul
mov
icebp
add
add
add
or
sub
imul
mov
icebp
add
add
add
or
sub
imul
mov
icebp
add
add
add
or
sub
imul
rol
or
icebp
add
add
add
or
sub
imul
rol
or
icebp
add
add
add
or
sub
imul
ret
or
icebp
add
add
add
or
sub
imul
ret
add
or
icebp
add
add
add
or
sub
imul
les
add
sub
add
add
add
or
sub
imul
lds
add
sub
add
pop
and
add
add
add
jmp
add
sub
sub
sub
pop
and
push
sub
sub
add
sub
sub
out
mov
or
loope
mov
add
sub
inc
sub
sub
sub
sub
cmc
add
push
sub
sub
pop
sub
sub
sub
add
imul
jae
add
sub
add
adc
add
scas
add
add
add
push
cmp
add
add
push
add
sub
add
adc
add
pop
add
add
add
add
sub
push
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
pop
inc
adc
add
and
add
sbb
add
xor
add
pusha
add
add
add
dec
add
add
add
add
add
xchg
add
xchg
add
add
add
add
add
add
mov
sub
cmp
add
add
add
sub
push
movs
add
add
test
add
sub
movs
add
add
cmps
add
push
sub
movs
jle
add
sub
push
movs
jns
add
sub
push
movs
jp
add
sub
movs
dec
add
add
stos
add
push
sub
movs
imul
add
push
sub
sub
push
movs
jnp
add
sub
push
movs
jbe
add
sub
push
movs
jl
add
sub
push
movs
jge
add
sub
push
movs
push
add
add
mov
add
sub
movs
adc
add
sub
movs
and
add
sub
xchg
add
add
lock
add
sub
add
add
add
or
xor
add
jae
add
or
cmp
cmp
cmp
cmp
cmp
leave
add
or
movs
(bad)
(bad)
dec
cmp
cmp
cmp
(bad)
(bad)
inc
push
sub
sub
adc
pop
sub
sub
add
imul
mov
repnz
sbb
add
mov
add
adc
jae
js
add
cmp
add
cmp
add
cmp
test
add
cmp
and
cmp
push
cmp
add
or
or
pop
pop
or
add
imul
add
push
or
sub
or
outs
and
add
pop
or
outs
adc
add
fimul
or
or
add
or
push
outs
add
sub
cmp
push
add
or
jle
(bad)
dec
cmp
(bad)
push
add
push
cmp
(bad)
dec
cmp
(bad)
inc
jbe
(bad)
jmp
add
add
cmp
(bad)
dec
jae
(bad)
inc
cmp
inc
add
add
add
dec
add
add
add
add
inc
sub
sub
sub
sub
cmc
add
push
sub
sub
adc
pop
sub
sub
add
imul
mov
repnz
inc
sub
sub
add
stc
sub
add
sub
cmc
add
add
add
sbb
or
movs
adc
add
sub
sub
sub
add
or
in
add
jmp
mov
out
xor
add
add
adc
ja
js
add
cmp
add
cmp
add
cmp
sub
cmp
add
add
pop
push
cmp
sub
pop
sub
cmp
add
outs
add
or
or
pop
pop
or
sub
or
imul
add
push
adc
adc
outs
or
add
or
sub
adc
add
add
fmul
sub
cmp
int3
add
or
jle
(bad)
dec
cmp
(bad)
push
add
push
cmp
(bad)
dec
cmp
(bad)
inc
jns
(bad)
jmp
add
add
cmp
dec
jnp
(bad)
inc
cmp
(bad)
inc
add
add
add
pop
add
add
add
add
xor
add
add
add
add
adc
or
adc
adc
adc
adc
adc
jae
add
push
sub
or
in
push
sub
add
jmp
sub
outs
adc
add
sub
add
jle
add
add
outs
sbb
add
or
adc
adc
push
sub
sub
jp
sub
add
sub
add
in
sub
add
or
call
or
jecxz
xor
add
sub
jae
add
or
fld
add
add
adc
(bad)
shl
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
add
iret
add
or
adc
add
pop
add
add
add
adc
sub
sub
xchg
add
add
xor
sbb
cs
sub
sub
je
add
add
xor
xor
add
pop
sub
add
sub
push
pop
xor
push
sub
leave
or
int
sub
or
rol
sub
add
into
sub
add
or
leave
or
int
sub
add
xor
add
add
cmp
add
push
sub
sub
xchg
add
add
xor
sbb
cs
sub
sub
je
add
add
xor
xor
add
pop
sub
add
sub
push
pop
xor
push
sub
leave
or
int
sub
or
rol
sub
add
into
sub
add
or
leave
or
int
sub
add
xor
add
add
cmp
add
sbb
sub
sub
sub
sub
sub
sub
icebp
sub
push
outs
rol
add
push
sub
add
push
sub
sub
outs
aam
add
sub
add
aam
aad
add
sub
add
into
outs
(bad)
add
or
leave
jae
add
push
sub
or
ret
add
lds
add
stos
sub
add
or
add
add
or
or
or
add
out
add
repnz
icebp
outs
xlat
add
or
in
add
xor
add
add
adc
add
sbb
jle
add
add
movs
sbb
add
jbe
jnp
add
jp
adc
sbb
and
add
jae
add
or
adc
push
sub
add
or
out
fiadd
add
sub
sub
add
push
sub
or
push
outs
fild
add
push
sub
add
or
add
push
push
sub
add
or
jle
add
add
mov
add
sub
add
push
push
jae
add
or
sub
push
sub
fiadd
sub
cmp
(bad)
jmp
sub
add
cmp
test
jnp
(bad)
inc
adc
add
add
sub
aas
or
add
or
sub
push
add
adc
(bad)
shl
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
add
fild
add
sub
sub
jnp
add
add
add
test
cdq
add
add
add
cmc
add
hlt
add
add
add
fild
add
add
jge
add
add
add
sub
jnp
add
add
add
imul
sub
jnp
add
add
add
imul
sub
jnp
add
add
add
imul
sub
jnp
add
add
add
test
add
add
add
add
sub
sub
add
(bad)
sbb
add
sub
add
jae
add
or
add
add
add
and
adc
add
add
push
jge
add
add
push
jge
add
add
jae
add
or
add
add
push
jge
add
add
sbb
fadd
add
sub
add
pop
sub
push
sub
mov
sbb
sbb
and
add
pop
jge
add
add
sub
sub
sub
add
jecxz
loope
add
sub
adc
add
push
add
add
add
adc
sub
sub
sub
sub
sub
jnp
add
add
sub
mov
sub
pop
sub
add
add
pop
jge
add
add
and
add
aam
fiadd
add
sub
or
into
add
int
sub
outs
loop
add
sub
outs
jecxz
add
sub
push
sub
add
sub
jnp
add
add
or
add
pop
sub
sub
sub
add
lock
in
add
sub
add
add
xor
add
add
add
add
pop
sub
push
cmp
add
add
dec
add
add
les
add
jnp
add
add
rol
add
rol
add
and
add
add
cmp
daa
cmp
add
add
mov
add
pop
pop
inc
inc
add
cmp
mov
add
cmp
mov
add
jnp
add
add
or
data16
pop
bound
cmp
pop
imul
cmp
pop
outs
cs
or
jb
inc
pop
add
add
add
pop
add
add
add
add
add
add
add
mov
push
add
add
add
outs
add
push
cmp
jnp
add
add
or
add
push
cmp
jnp
add
add
or
add
push
cmp
jnp
add
add
or
add
push
push
sub
jnp
add
add
or
push
sub
jnp
add
add
jnp
add
add
add
push
sub
movs
add
add
rcr
add
sub
add
push
add
sub
add
jae
add
push
jp
jnp
add
add
xor
(bad)
call
and
pop
push
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
add
push
push
sub
add
push
cmp
sub
add
rcr
add
sub
add
push
add
sub
add
jae
add
push
jp
sub
add
push
add
jge
add
add
sbb
add
add
add
add
add
popf
add
add
jnp
add
add
outs
arpl
add
add
dec
add
add
pop
add
or
add
add
add
add
add
or
xor
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
fadd
add
cmp
(bad)
inc
cmp
(bad)
inc
adc
add
inc
add
add
add
adc
sub
add
add
and
sub
sub
sub
adc
sub
sar
add
add
and
and
loopne
add
aad
in
add
sub
or
xlat
push
sub
add
fadd
sub
push
push
jnp
add
add
or
add
add
out
outs
out
add
sub
add
or
add
add
add
hlt
outs
out
add
sub
add
xor
pop
push
jge
add
add
add
test
add
sub
adc
push
sub
jnp
add
add
sub
add
sub
movntps
sub
cmc
sub
sub
add
jmp
sub
sub
add
push
sub
adc
add
out
add
add
sub
add
jnp
add
add
push
cmp
cmps
add
add
sub
add
jnp
add
add
mov
mov
or
add
add
add
xchg
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
outs
sub
sub
sbb
push
sub
sub
add
push
sub
sub
add
push
cmp
call
sub
add
add
or
add
sub
add
add
add
add
add
add
sub
add
jae
add
push
jp
cmp
(bad)
inc
cmp
(bad)
jmp
fadd
add
cmp
(bad)
inc
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
inc
cmp
add
push
cmp
lea
add
xor
add
add
add
add
adc
rol
add
add
add
mov
mov
das
xor
sbb
cmp
sub
dec
cmp
inc
pop
das
cmp
dec
cmp
cs
add
jge
cmp
cmps
add
add
or
movs
add
add
sub
add
push
pop
sub
pop
or
call
sub
add
push
pop
sub
sub
add
push
pop
sub
sub
add
push
add
fild
add
push
sub
jnp
add
add
out
add
sub
add
fild
add
sub
add
and
add
sub
add
add
add
add
add
add
sub
add
jae
add
push
jp
sub
add
push
cmp
sub
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
jmp
call
push
(bad)
(bad)
inc
adc
add
mov
add
adc
push
add
jnp
add
add
data16
add
add
add
sub
and
add
add
das
cs
sub
sub
sub
push
sub
or
pop
pop
sub
pusha
sub
sub
sub
add
or
call
sub
jnp
add
add
out
add
sbb
adc
in
add
sub
sub
add
push
cmp
sub
cmp
cmp
xchg
(bad)
(bad)
inc
cmp
cmp
sub
push
sub
add
push
sub
xor
add
add
add
add
add
sub
cmp
mov
add
jnp
add
add
mov
add
sub
push
sub
add
cmp
cmp
fwait
add
add
and
pop
sub
cmp
fwait
add
add
daa
xor
cmp
mov
fwait
add
add
in
add
sub
add
ja
add
sub
add
push
add
add
add
add
add
sub
add
jae
add
push
jp
jnp
add
add
cmp
or
sub
add
cmp
loopne
add
add
add
add
add
add
jmp
sub
add
add
outs
arpl
add
pop
sub
cmp
inc
cmp
(bad)
jmp
out
add
cmp
(bad)
inc
cmp
(bad)
jmp
out
add
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
xor
add
add
add
add
pop
sub
fwait
add
add
cmp
lock
cmp
add
add
xor
fwait
add
add
xor
xor
jle
add
add
lods
sbb
add
das
sub
add
add
sub
add
jae
add
push
jp
sub
lds
sub
outs
add
push
sub
add
enter
add
sub
sub
add
push
sub
add
leave
add
add
inc
add
add
add
add
cs
add
add
sub
fwait
add
add
pop
adc
sub
fwait
add
add
and
add
sub
sub
and
sub
sub
add
or
iret
add
rol
sub
add
add
out
add
add
add
add
cmp
mov
mov
sahf
add
add
add
add
call
add
cmp
fwait
add
add
xchg
add
add
jno
add
sbb
push
cmp
fwait
add
add
cmp
add
sub
sub
test
add
cmp
fwait
add
add
add
add
add
add
jnp
add
add
add
push
sub
add
fstp
add
sub
add
add
add
add
add
add
sub
add
jae
add
push
jp
sub
add
push
cmp
(bad)
call
sub
sub
cmp
(bad)
inc
cmp
jmp
add
push
cmp
inc
cmp
(bad)
jmp
out
add
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
out
add
cmp
(bad)
inc
push
sub
sub
adc
pop
sub
sub
add
imul
jmp
repnz
adc
add
cmp
add
aas
add
adc
cld
add
add
std
add
add
add
add
stc
add
add
cli
add
add
sti
add
add
pop
inc
push
add
add
add
add
add
push
add
add
add
ja
add
jle
add
ja
add
ja
add
ja
add
cmp
add
push
add
add
add
ja
add
sub
add
add
jge
add
add
mov
add
push
cmp
mov
fild
add
sub
sbb
add
add
pop
sub
add
push
add
fild
add
sub
or
out
add
push
add
fild
add
add
jge
add
add
sub
out
add
push
add
fild
add
add
jge
add
add
push
add
jge
add
add
sub
add
push
sub
add
jge
add
add
sub
add
add
mov
add
add
add
add
sub
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
jmp
fadd
add
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
jnp
add
inc
add
adc
inc
add
add
add
add
cmp
add
add
aaa
add
add
das
xor
xor
add
pop
sub
sub
xor
add
pop
and
cdq
add
add
sub
add
pop
daa
pop
inc
add
add
add
add
add
add
add
add
adc
add
pop
sub
add
add
cmp
add
add
pop
add
add
das
cmp
add
add
pop
add
add
cld
add
add
data16
pop
pop
pop
pop
inc
add
add
fld
add
aas
add
add
add
add
pop
cs
cmp
pop
outs
cs
pop
pop
je
inc
add
add
sub
add
movs
add
add
pop
jnp
inc
add
add
cwde
add
add
add
add
add
add
add
add
fild
add
pop
sub
sub
add
push
pop
sub
sub
add
push
pop
sub
sub
add
push
sub
add
fiadd
add
or
pop
jne
or
sub
add
push
sub
pop
xor
add
in
add
push
sub
jle
add
add
and
add
push
add
add
add
add
add
sub
add
jae
add
push
jp
movs
add
add
imul
add
jae
add
push
jp
sub
sub
add
push
pop
sub
sub
add
push
pop
sub
pop
sub
add
push
pop
and
sbb
call
sub
pop
or
call
sub
pop
sub
pop
or
call
sub
pop
or
call
sub
jnp
add
add
or
or
pop
or
add
add
sub
sub
jle
add
add
and
add
push
add
add
add
add
add
sub
add
jae
add
push
jp
jnp
add
add
out
add
sub
add
add
jmp
sbb
cmp
inc
jnp
add
add
sub
fwait
add
add
xor
add
in
add
push
push
cmp
(bad)
(bad)
call
sub
add
add
and
add
push
add
add
add
add
add
sub
add
jae
add
push
jp
sub
add
push
cmp
sub
cmp
cmp
std
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
inc
adc
add
dec
add
add
add
sbb
sub
sub
pop
sub
sbb
sub
and
add
add
push
sub
add
and
pop
sub
sub
or
fiadd
sub
sub
add
push
sub
add
fld
out
add
sub
add
fadd
sub
add
add
xor
add
add
inc
add
adc
sub
add
jle
add
add
sbb
add
pop
cmp
add
add
adc
add
cmp
add
add
cmp
add
add
add
add
sub
and
mov
and
add
jnp
add
add
sbb
and
add
sub
add
push
add
add
add
jmp
jnp
add
add
add
add
add
add
outs
arpl
add
jae
add
or
add
sub
add
push
add
add
add
sub
add
add
sub
add
push
cmp
pop
or
add
add
adc
add
add
add
jmp
add
add
or
add
add
sub
add
push
sub
add
add
test
add
push
sub
add
or
in
add
or
out
add
or
sub
add
push
or
jmp
sub
pop
jae
add
push
jae
add
push
adc
mov
or
or
pop
or
add
push
add
fadd
add
sub
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
repz
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
jmp
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
add
add
inc
add
adc
cmp
sub
cmp
mov
or
and
add
add
sbb
mov
mov
mov
add
jnp
add
add
mov
add
cmp
movhps
add
sub
add
push
sub
add
add
add
pop
pop
outs
jnp
add
push
sub
add
add
add
add
mov
out
add
or
sbb
mov
add
mov
lock
or
push
sub
jnp
add
add
outs
arpl
add
add
or
jmp
cmp
jmp
or
cmp
cmp
(bad)
(bad)
jmp
hlt
add
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
jmp
add
push
cmp
inc
cmp
(bad)
inc
cmp
(bad)
inc
add
adc
add
bound
add
cmp
add
pop
sub
sub
sub
sub
cmp
sub
jle
add
add
mov
sub
mov
add
push
mov
dec
add
or
add
push
jp
sub
(bad)
sub
add
push
sub
or
rol
rol
mov
push
sub
sub
add
sub
add
mov
add
stos
add
add
adc
sub
jb
add
cmp
add
cmp
add
cmp
add
cmp
add
inc
add
add
add
add
or
add
pop
add
add
and
mov
sbb
shr
bound
sub
sub
sub
or
mov
jle
add
add
xlat
sbb
add
push
push
mov
sub
add
jae
add
push
jp
cmp
fiadd
add
cmp
cmp
inc
cmp
cmp
cmp
sub
sub
add
popa
add
add
add
adc
sub
sub
or
sub
sbb
sbb
add
add
add
add
add
add
or
add
sub
sub
add
add
pop
push
add
sub
add
add
push
sub
jp
sub
sub
push
sub
add
jecxz
sub
add
sub
jae
add
push
sub
add
add
xor
add
add
add
add
add
mov
mov
cmp
fwait
add
add
sub
ins
sub
mov
add
jnp
add
add
sub
inc
cmp
scas
add
add
cmp
fwait
add
add
das
cs
cmp
mov
sub
mov
jnp
add
add
jnp
add
add
add
push
push
sub
jnp
add
add
jnp
add
add
add
push
add
fadd
add
sub
movs
add
add
sbb
add
sub
add
jae
add
push
jp
sbb
jnp
add
add
add
jmp
jnp
add
add
outs
arpl
add
add
fild
add
sub
cmp
(bad)
jmp
fadd
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
fadd
add
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
add
push
cmp
(bad)
inc
add
adc
add
add
add
add
adc
adc
sub
fwait
add
add
cmp
cmp
cmp
sbb
cmp
push
sub
cmp
add
or
or
sub
add
push
sub
in
outs
pusha
add
or
sub
or
mov
sub
push
sub
outs
popa
add
or
mov
sub
push
sub
add
ret
add
xor
add
add
inc
add
adc
sub
sub
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
add
hlt
add
push
sub
sub
sub
sub
add
into
sub
add
push
sub
or
retf
add
int
sub
push
sub
add
aad
fadd
add
sub
add
xor
add
add
add
add
adc
mov
add
jnp
add
add
mov
add
cmp
sub
adc
xchg
add
pop
sub
inc
cmp
sub
sbb
add
add
das
cs
jnp
add
pop
pop
or
js
add
pop
jge
xor
sub
jae
add
sub
add
push
sub
push
sub
add
push
pop
sub
sub
sub
jnp
add
add
or
sbb
sub
jnp
add
add
sub
add
push
sub
sub
pop
sub
sub
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
inc
cmp
inc
cmp
(bad)
inc
cmp
inc
cmp
(bad)
inc
cmp
cmp
add
add
dec
add
add
add
add
and
add
sub
sub
sub
push
pop
mov
add
sbb
add
mov
add
sub
sub
add
fsubr
repz
push
sub
add
fisubr
jmp
fsubr
sub
add
sub
jae
add
push
sub
add
add
xor
add
add
add
add
sbb
sub
jle
add
add
sub
sub
sub
pop
or
sbb
add
fcomp
add
sub
sub
add
(bad)
repz
push
sub
add
fild
call
fsubr
sub
add
sub
jae
add
push
sub
add
xor
add
add
add
add
sbb
sub
jle
add
add
sub
sub
sub
pop
or
sbb
add
add
add
sub
sub
add
(bad)
repz
push
sub
add
fild
call
fsubr
sub
add
sub
jae
add
push
sub
add
xor
add
add
add
add
sub
add
sub
sub
sub
push
push
mov
add
sbb
add
mov
add
sub
sub
add
fsubr
repz
push
sub
add
fisubr
jmp
fsubr
sub
add
sub
jae
add
push
sub
add
add
add
sub
add
stc
sub
add
push
sub
add
add
add
add
or
or
sub
sub
sub
sub
add
repz
hlt
sub
add
push
sub
add
add
jns
add
add
add
sub
jge
add
add
sub
push
sub
jge
add
add
dec
adc
popf
add
add
sub
jge
add
add
cmp
add
add
or
xor
add
xor
ss
add
add
or
xor
add
add
add
push
push
sub
sub
cmp
sub
sub
sub
outs
icebp
add
or
enter
add
int
add
(bad)
shl
add
or
sub
add
or
imul
sub
icebp
add
add
add
repnz
or
and
add
repz
or
add
add
add
add
hlt
add
or
add
push
add
repnz
or
and
add
repz
or
add
add
add
add
hlt
add
or
add
sub
jnp
add
add
add
test
add
add
add
add
sub
xor
push
sub
sub
mov
inc
pop
add
sub
sub
jp
and
and
add
add
sub
push
sub
rol
sub
sub
add
push
sub
jae
add
or
fild
sub
add
fiadd
add
add
add
or
adc
adc
add
add
adc
add
add
add
in
sub
jae
add
push
sub
add
jmp
add
add
jge
add
add
add
push
sub
adc
pop
sub
sub
add
imul
or
add
sub
add
add
add
pop
add
add
add
add
sub
movd
ficomp
add
sub
sub
sub
sub
sub
adc
push
sub
and
and
and
sub
add
push
sub
jae
add
or
aam
sub
outs
loope
add
sub
add
fild
sub
add
fldcw
or
add
sub
add
xor
add
add
sub
ins
add
add
sub
sub
add
imul
add
add
outs
add
add
cs
add
pop
or
add
ins
sub
sub
sub
adc
or
add
or
sub
push
pop
outs
jmp
add
sbb
or
outs
loope
add
sub
add
dec
pop
add
sub
add
push
jae
add
push
jp
xchg
add
push
cmp
cmp
cmp
aam
add
cmp
cmp
mov
(bad)
dec
cmp
cmp
sub
push
add
add
add
pop
sub
cmp
add
add
fld
add
cmp
aad
add
cmp
add
add
fild
add
cmp
add
add
pop
sbb
push
cmp
add
add
or
add
jle
add
cmp
add
add
or
dec
sub
rol
add
rol
add
add
or
add
add
push
push
sub
mov
sbb
add
sub
add
jae
add
push
jp
outs
aam
add
sbb
xlat
add
adc
or
add
or
pop
or
add
or
daa
push
sub
add
add
mov
sub
add
add
add
push
mov
add
sub
add
or
add
push
jp
outs
loope
add
cmp
(bad)
(bad)
jle
add
add
sbb
add
sub
add
jae
add
push
jp
lahf
add
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
aam
add
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
dec
cmp
cmp
(bad)
(bad)
jmp
add
push
cmp
add
xor
add
add
inc
add
adc
and
add
pop
jge
add
add
sti
add
add
cld
add
add
add
sti
add
add
add
inc
add
cmp
add
add
add
add
sub
add
push
add
add
pop
pop
inc
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pop
add
add
add
xor
add
sbb
sub
sub
or
add
sub
add
add
adc
add
or
popa
add
or
add
or
add
sub
add
add
adc
add
or
dec
add
outs
aad
add
add
or
add
or
cmp
outs
aad
add
outs
add
sub
sub
adc
sub
add
stc
pop
add
sub
add
push
add
add
push
mov
add
sub
add
or
add
push
jp
and
add
pop
jge
add
add
sub
cmp
(bad)
(bad)
inc
(bad)
(bad)
(bad)
jmp
adc
sti
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cli
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
call
xor
std
add
add
add
cmp
add
push
sub
add
sub
add
sub
mov
add
cmp
mov
mov
mov
mov
add
pop
cmp
add
sbb
cmp
test
or
pop
push
outs
test
pop
ror
add
sub
add
or
add
or
add
add
add
or
or
add
or
add
outs
sti
add
or
sub
sub
add
and
add
sub
add
add
add
or
dec
add
or
add
or
cmp
(bad)
call
sub
add
pop
adc
mov
outs
std
add
or
add
add
cmp
(bad)
inc
inc
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
ds
(bad)
dec
cmp
cmp
(bad)
inc
cmp
(bad)
inc
dec
(bad)
(bad)
inc
add
adc
add
arpl
add
dec
add
adc
ds
add
add
or
sub
sub
add
add
ss
add
add
xor
add
xor
sub
sub
xor
push
or
jnp
add
add
push
outs
inc
add
push
sub
sub
inc
add
sub
add
mov
add
or
enter
add
leave
add
enter
pop
add
add
add
add
sbb
pavgb
retf
add
retf
add
add
adc
retf
add
iret
add
add
cmp
retf
add
iret
add
add
rol
add
cmp
add
add
(bad)
add
add
sub
sub
pop
sub
add
or
add
sub
add
add
outs
rol
add
adc
or
outs
int
add
adc
or
and
add
sub
add
or
outs
add
add
push
push
pop
pop
or
add
push
push
push
sbb
sub
push
adc
push
inc
push
pop
pop
inc
push
sbb
sub
add
or
push
outs
pusha
add
push
adc
sub
add
or
xchg
(bad)
call
sub
fimul
adc
(bad)
push
sbb
add
outs
add
add
fcomp
cmp
(bad)
dec
sub
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
test
add
cmp
(bad)
dec
cmp
(bad)
(bad)
push
add
push
cmp
(bad)
dec
sub
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
and
pop
cmp
(bad)
(bad)
inc
add
adc
add
add
add
add
adc
add
xor
add
dec
add
adc
loop
add
cmp
add
add
add
jnp
add
cmp
add
add
loope
add
cmp
add
add
call
cmp
add
add
in
add
add
out
add
add
push
sub
outs
add
inc
push
push
add
push
add
or
add
push
sub
sub
add
pop
add
push
sub
sub
add
sub
add
or
add
sub
add
push
or
add
pop
add
push
add
sub
shr
add
add
pop
add
or
or
add
mov
add
push
or
add
sub
add
push
or
je
add
add
add
outs
pop
add
or
jle
add
add
mov
add
sub
add
push
push
add
outs
or
add
outs
int
add
sub
add
jae
add
push
jp
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
dec
add
sbb
(bad)
jmp
xor
add
cmp
(bad)
(bad)
push
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
jmp
or
or
(bad)
inc
add
xor
add
add
dec
add
adc
xor
cmp
cmp
cmp
add
add
aaa
sub
jge
add
add
xor
xor
add
add
pop
inc
sbb
or
add
sub
add
or
sub
add
push
sub
or
les
sub
add
ret
mov
lds
sub
add
enter
add
sub
add
add
xor
add
add
cmp
xchg
add
add
cmp
sub
xchg
add
add
xchg
add
add
cdq
add
add
call
cmp
or
push
sub
cmp
aad
add
outs
add
add
push
add
sub
add
push
sub
push
sub
add
add
stc
and
add
sub
add
add
add
push
mov
add
sub
add
or
add
push
jp
outs
loope
add
sub
add
and
add
sub
add
jae
add
push
jp
cmp
(bad)
jmp
or
add
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
add
push
cmp
(bad)
dec
popa
(bad)
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
inc
mov
or
or
or
adc
adc
add
hlt
add
repz
add
push
sub
add
in
sub
add
push
sub
add
xor
add
add
add
add
sub
sub
add
outs
and
add
sub
xor
sub
push
sub
movd
inc
pop
add
sub
sub
jp
sub
sub
add
push
sub
sub
sub
add
push
sub
jae
add
or
leave
add
iret
sub
add
push
sub
jae
add
or
rol
sub
add
rol
iret
add
xor
add
add
add
add
cmp
add
add
add
cmp
add
add
cmp
add
add
int
add
cmp
add
add
add
rol
add
sub
cmp
add
add
aad
add
add
rol
push
sub
cmp
add
add
or
outs
leave
add
or
sbb
adc
add
pop
add
add
add
add
add
pusha
add
add
add
add
add
push
add
add
add
jp
add
xchg
add
xchg
add
add
add
add
add
add
ret
add
add
pop
je
add
add
add
push
sub
pop
movs
add
add
add
push
sub
pop
movs
add
add
add
push
sub
pop
movs
jle
add
outs
dec
add
push
sub
pop
movs
jns
add
outs
dec
add
push
sub
pop
movs
jp
add
outs
dec
add
push
sub
pop
movs
dec
add
add
add
push
sub
pop
movs
imul
add
push
sub
pop
movs
jnp
add
outs
inc
add
push
sub
pop
movs
jbe
add
outs
inc
add
push
sub
pop
movs
jl
add
outs
inc
add
push
sub
pop
movs
jge
add
outs
inc
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
adc
add
outs
push
add
push
sub
pop
movs
and
add
outs
dec
add
push
sub
add
pop
add
push
sub
sub
add
add
daa
add
add
sbb
add
sub
sub
add
add
sub
add
sub
add
push
sub
sub
add
add
add
add
sbb
add
sub
sub
add
add
inc
add
push
sub
add
pop
add
push
sub
xor
(bad)
inc
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
sub
mov
(bad)
(bad)
jmp
adc
and
cmp
(bad)
(bad)
inc
cmp
adc
add
jno
add
dec
add
adc
sub
sub
mov
cmp
sub
sbb
sub
sub
mov
xor
xor
sub
cmp
push
sbb
pop
sub
pop
pop
or
add
add
add
or
add
xor
add
push
push
sub
sub
lds
sub
outs
or
add
sub
or
ret
pop
sub
add
shr
add
sub
add
lock
add
add
cmp
stos
add
add
sahf
add
add
stos
add
add
stos
add
add
lods
add
add
mov
add
cmp
mov
add
cmp
or
cs
sbb
add
add
add
pop
inc
add
add
add
add
pop
add
add
push
jle
add
add
and
add
sub
add
jae
add
push
jp
jle
add
add
popf
and
add
sub
add
add
add
add
sub
add
sub
add
jae
add
or
push
add
sub
int
add
outs
xor
add
sub
add
sub
jmp
jg
add
cmp
inc
inc
dec
(bad)
(bad)
jmp
add
(bad)
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
add
push
cmp
(bad)
inc
cmp
(bad)
call
xor
add
add
cmp
add
add
in
add
cmp
add
add
jmp
add
cmp
add
add
icebp
add
add
repnz
add
cmp
add
add
add
add
add
outs
mov
add
add
pop
add
or
and
ror
add
sub
add
or
add
or
add
add
stc
add
or
add
push
sub
outs
pop
add
push
add
jmp
add
add
add
push
add
sub
or
add
or
add
xor
add
adc
add
or
add
push
sub
pop
add
push
sub
add
add
add
pop
add
push
adc
sub
add
sub
add
push
adc
adc
add
sub
fimul
add
pop
adc
add
add
fadd
outs
xor
add
add
add
push
add
adc
add
sub
push
(bad)
(bad)
jmp
add
or
adc
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
test
or
or
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
add
add
mov
inc
leave
add
add
add
xor
push
add
add
add
sub
sub
add
sub
sub
sub
sbb
push
sub
sub
sub
sub
sub
add
push
push
sub
shr
add
or
int3
or
rol
rol
sub
outs
adc
add
sub
add
(bad)
add
aad
sub
add
add
xor
pop
add
add
add
adc
sub
push
and
push
sub
xor
xor
sub
sub
sub
or
sbb
sbb
add
adc
add
xor
add
add
push
sub
sub
outs
xor
add
sub
or
lds
sub
add
enter
push
sub
outs
adc
shr
add
push
sub
stos
add
add
add
push
sub
sub
jle
add
cmp
test
add
cmp
das
sub
sub
movs
pop
add
sub
push
sub
add
push
add
or
add
or
add
push
add
adc
sub
add
or
adc
add
sbb
adc
add
sub
sub
outs
sbb
add
sub
sub
push
sub
add
add
sub
or
add
or
add
add
push
sub
cmp
(bad)
jmp
add
push
cmp
(bad)
inc
ja
(bad)
jmp
add
or
jb
(bad)
dec
cmp
(bad)
inc
add
add
add
sbb
dec
push
adc
add
add
sub
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
add
adc
adc
add
xchg
add
add
adc
cmp
pop
jnp
add
add
pop
sub
add
add
cs
sub
or
add
sub
mov
popa
jnp
add
add
pop
jnp
add
add
pop
or
push
outs
sbb
add
add
add
add
loope
add
push
sub
mov
pop
inc
add
sub
add
push
jae
add
push
jp
cmp
aam
add
cmp
cmp
cmp
cmp
cwde
add
pushf
add
mov
push
sub
sub
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
add
add
or
adc
adc
add
add
adc
add
add
add
in
sub
jae
add
or
out
sub
add
xor
add
add
adc
outs
jnp
add
add
push
add
cmp
add
inc
or
add
sbb
add
push
add
add
add
add
add
add
add
adc
add
or
add
or
add
push
sub
push
sub
sub
sub
sub
sub
sub
and
jmp
or
add
sub
sub
jnp
add
add
xor
add
sub
sub
add
mov
(bad)
dec
cmp
cmp
sub
add
sub
add
aad
sub
add
sub
jae
add
push
sub
add
sub
jnp
add
add
add
test
jecxz
add
add
cmc
add
hlt
add
add
sub
jnp
add
add
add
test
add
add
add
add
sub
das
movd
add
add
sbb
sbb
push
jp
sub
push
sub
sub
sbb
add
sub
fsubr
sub
add
sub
jae
add
or
fild
sub
add
loopne
add
sub
jnp
add
add
add
test
add
add
add
add
das
pop
and
push
sub
sub
push
sub
movd
add
add
push
and
add
push
sub
jp
pop
sub
jge
add
add
sub
sub
sub
add
xlat
sub
add
push
sub
jae
add
or
fiadd
sub
add
fld
sub
jnp
add
add
add
test
in
add
add
cmc
add
hlt
add
add
sub
jnp
add
add
add
test
out
add
add
cmc
add
hlt
add
add
xor
add
add
add
add
add
adc
sub
add
mov
sub
add
jae
add
or
add
add
add
pop
and
add
add
pop
jge
add
add
pop
and
add
add
sbb
add
add
push
jge
add
add
pop
jae
add
or
add
add
jnp
add
add
outs
loope
add
add
jge
add
add
add
add
add
ja
add
add
add
sbb
and
add
pop
jge
add
add
sub
sub
jnp
add
add
aaa
sub
fild
add
adc
sub
loopne
add
das
push
sub
es
xor
add
add
sub
add
sub
add
or
sub
ret
add
or
ret
rol
retf
into
outs
loope
add
sub
add
int3
add
rol
sub
add
xor
add
add
add
add
adc
sub
push
sub
sbb
and
and
add
pop
jge
add
add
sub
sub
sub
sub
sub
add
push
sub
or
fadd
sub
add
(bad)
loopne
add
or
add
add
pop
sub
sub
add
repnz
in
add
sub
add
or
add
add
add
add
cmc
outs
sbb
cmc
add
add
sub
jnp
add
add
push
sub
sub
sub
add
push
sub
add
jmp
push
add
or
jmp
add
add
push
add
add
add
add
sub
sbb
sub
pop
sbb
sub
sub
sbb
add
add
jmp
shl
add
sub
sub
sub
sub
rol
sub
sub
add
sub
add
shr
sub
add
sub
outs
pop
add
or
fiadd
inc
sub
sub
sub
sub
add
push
sub
add
add
add
push
add
add
add
add
sub
sbb
sub
sbb
sub
sub
sub
sbb
add
add
jmp
aad
add
sub
sub
sub
sub
rol
sub
sub
add
sub
add
shr
sub
add
sub
outs
pop
add
or
fiadd
inc
sub
sub
sub
sub
add
push
sub
add
add
add
add
add
add
add
sub
push
sbb
sub
es
out
add
adc
dec
jnp
add
add
dec
jnp
add
add
inc
sub
loop
add
inc
sub
jnp
add
add
adc
jnp
add
add
jnp
add
add
and
add
add
add
add
cmp
add
or
add
lods
sub
stos
add
stos
add
mov
sub
sub
mov
pop
add
or
mov
sub
sub
sub
sub
sub
sub
add
cmc
sub
add
push
sub
sub
add
push
sub
add
adc
add
jo
add
cmp
add
sub
dec
sub
add
add
add
add
adc
add
sub
sbb
sbb
adc
xor
ficom
sub
sub
add
fisub
add
sub
sub
sub
sub
add
jae
add
push
jp
sub
sub
add
push
sub
add
leave
sub
add
sub
sub
add
push
sub
add
leave
jp
add
or
jnp
add
add
xor
sub
sub
sub
add
push
sub
add
jmp
add
add
add
adc
sub
sub
or
sub
sbb
sbb
add
add
add
add
add
add
or
add
sub
sub
add
add
or
add
sub
add
add
push
sub
jp
sub
sub
push
sub
add
jecxz
sub
add
sub
jae
add
push
sub
add
add
xor
add
add
add
adc
xor
xor
xor
add
add
add
add
push
pop
or
pop
or
jle
add
add
sub
add
sub
add
add
push
sub
jp
sub
or
retf
push
sub
sub
add
push
sub
add
jecxz
sub
add
sub
jae
add
push
sub
adc
add
test
add
pop
adc
add
pavgb
lods
add
add
scas
add
add
push
cmp
pop
push
push
sub
cmp
add
add
mov
pop
cmp
fild
add
popf
add
add
pop
dec
pop
push
cmp
loopne
add
xchg
add
add
pop
dec
cmp
add
cmp
add
xor
push
push
sbb
pop
pop
push
push
cmp
add
add
push
push
sbb
sbb
pop
pop
push
push
sbb
add
add
add
cdq
sbb
hlt
add
add
dec
sub
add
dec
and
add
sub
add
jae
add
push
jp
pop
or
push
push
cmp
add
sub
cmp
add
or
jnp
add
add
lar
add
add
cs
add
cmp
add
pop
or
pop
or
add
add
add
add
push
add
add
add
add
add
jmp
and
add
sub
add
outs
pop
add
or
inc
add
add
add
jmp
imul
add
sub
add
outs
pop
add
or
cmp
(bad)
(bad)
jmp
and
add
add
jo
add
sub
add
push
pop
mov
add
sub
add
or
add
push
jp
pop
or
push
pop
or
dec
pop
pop
push
push
pop
or
dec
push
dec
aas
dec
(bad)
(bad)
inc
sub
add
push
or
adc
add
add
add
add
add
or
add
adc
add
sub
add
jge
add
add
add
jge
add
add
add
jge
add
add
jle
add
add
lea
add
sub
add
push
or
sub
add
jae
add
push
jp
cmp
(bad)
inc
cmp
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
arpl
(bad)
inc
adc
add
rol
add
push
add
adc
sub
push
dec
loopne
xchg
add
push
sub
add
jnp
add
add
inc
jo
add
cmp
add
jnp
add
add
ja
add
cmp
add
add
sub
jle
add
sbb
push
sub
cmp
add
jnp
add
add
jne
add
jnp
add
add
and
add
sbb
push
sbb
sbb
pop
pop
push
push
sbb
add
add
add
into
push
push
dec
pop
pop
push
pop
sub
push
dec
add
add
add
sub
xor
or
jae
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
add
or
jp
(bad)
inc
cmp
(bad)
inc
cmp
inc
cmp
cmp
add
adc
add
add
add
add
cmp
add
add
add
add
cmp
add
add
pop
inc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
cmp
add
add
aam
add
sub
sbb
cmp
add
add
jle
add
add
int3
add
add
int
add
jnp
add
add
leave
add
add
pop
sbb
add
add
cmps
and
add
sub
add
add
add
jnp
add
add
xor
add
outs
add
dec
add
or
add
push
jp
jnp
add
add
or
jnp
add
add
xor
add
lar
add
add
sub
and
add
sub
add
add
add
xor
add
add
add
xor
add
and
add
or
sbb
or
sub
add
push
sbb
push
add
cmp
add
add
jge
add
add
add
sti
(bad)
(bad)
dec
cli
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
and
add
cmp
add
sub
sub
jnp
add
add
adc
adc
add
in
add
in
sub
out
sub
add
jmp
in
add
pop
sub
jle
add
add
or
add
add
repz
add
push
sub
add
or
add
add
or
add
add
repz
add
push
sub
add
pop
sub
pop
or
pop
sub
sub
add
cmc
sub
add
push
sub
add
sub
jnp
add
add
or
add
out
add
in
add
in
sub
in
sub
add
push
sub
add
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
push
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
push
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
sub
sub
sub
add
hlt
sub
out
sub
add
push
sub
add
or
or
or
push
sub
sub
add
hlt
sub
sub
add
push
sub
add
or
or
or
push
sub
sub
sub
add
repz
sub
add
push
sub
add
add
jnp
add
add
add
push
sub
sub
sub
sub
sub
loop
add
jmp
add
add
cmp
sub
inc
jnp
add
add
aas
sub
inc
jnp
add
add
jmp
or
add
sub
add
outs
pop
add
or
sub
mov
cmp
mov
sub
push
sub
or
mov
sub
or
mov
add
add
dec
add
add
add
add
and
sub
sub
sub
add
or
sbb
and
and
add
and
and
add
fiadd
sub
sub
sub
add
push
sub
jae
add
push
sub
add
fadd
sub
outs
pop
add
or
xlat
add
add
add
sub
add
stc
sub
push
sub
add
add
pop
cs
or
sub
sub
add
push
sub
add
lock
add
push
sub
add
add
xor
add
add
add
shl
add
add
fiadd
add
cmp
add
add
cmp
add
add
out
add
cmp
add
add
push
sbb
add
jmp
add
push
pop
sbb
add
out
add
add
sbb
or
push
sbb
or
push
sbb
or
push
sbb
or
push
sbb
sub
add
or
add
push
sbb
add
push
pop
push
sbb
and
add
push
pop
pop
sbb
and
add
push
pop
sbb
or
pop
sbb
or
pop
sbb
sub
add
or
pop
sbb
sub
add
or
pop
sbb
sub
add
or
pop
sbb
add
push
sbb
sbb
and
add
push
sbb
sbb
and
add
push
sbb
sbb
or
sbb
sbb
or
sbb
sbb
and
add
push
sbb
sbb
and
add
push
sbb
or
sbb
add
push
sbb
sbb
or
sbb
sbb
or
sbb
pop
sub
add
or
sbb
pop
sub
add
or
sbb
sbb
or
sbb
sbb
or
sbb
or
sbb
add
push
sbb
sbb
or
sbb
pop
sub
add
or
sbb
sbb
and
add
push
sbb
sbb
and
add
push
sbb
sbb
and
add
push
sbb
sbb
and
add
push
sbb
or
sbb
add
push
sbb
sbb
or
sbb
sbb
and
add
push
sbb
sbb
or
sbb
sbb
or
sbb
sbb
and
add
push
sbb
sbb
and
add
push
sbb
or
sbb
add
push
sbb
add
sub
add
or
sbb
(bad)
jmp
sub
pop
(bad)
(bad)
push
add
or
adc
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
and
add
cmp
cmp
(bad)
inc
add
add
repnz
or
and
add
repz
or
add
add
add
add
hlt
add
or
add
call
add
add
hlt
add
add
add
add
push
add
test
add
push
add
add
add
sub
jnp
add
add
add
imul
sub
jnp
add
add
add
imul
sub
jnp
add
add
add
imul
sub
jnp
add
add
add
imul
sub
jnp
add
add
add
div
(bad)
sub
sub
pop
add
push
sub
add
add
xor
add
add
add
add
sub
add
jo
add
cmp
add
sub
invlpg
jbe
add
sub
push
sub
(bad)
sub
jg
add
cmp
cmp
sub
add
pop
and
add
sub
add
(bad)
sub
add
(bad)
sub
add
outs
and
dec
add
or
add
push
jp
push
sub
add
or
add
sub
add
or
add
mov
(bad)
jmp
pop
add
push
cmp
add
cmp
add
push
cmp
cmp
pop
add
push
cmp
jmp
push
add
or
ja
(bad)
dec
cmp
(bad)
jmp
pop
add
push
cmp
(bad)
inc
add
push
add
sub
add
sub
xor
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
or
or
add
add
add
cmc
add
hlt
add
add
sub
jle
add
add
stc
add
add
add
sub
add
jge
add
add
adc
add
pop
add
add
add
adc
cmp
add
add
pop
sub
add
push
sub
lock
daa
sub
stc
add
add
and
add
sub
pop
pop
jge
add
add
sbb
sbb
add
enter
sub
add
sub
add
ror
sub
push
sub
add
loop
add
outs
sub
jle
add
add
stc
add
add
or
jge
add
add
add
jmp
add
add
pop
add
adc
sub
sub
jnp
add
add
sub
sub
sbb
sub
pop
lea
add
sub
sub
jnp
add
add
pop
sub
jnp
add
add
sbb
and
and
add
add
add
mov
fild
sub
push
sub
add
(bad)
sub
add
sub
add
fadd
sub
add
jle
adc
add
add
sub
jnp
add
add
pop
sub
sub
add
bnd
add
or
repnz
lea
add
cmp
add
add
add
or
or
or
or
inc
sub
sub
sub
add
repnz
sub
add
sub
adc
add
cmps
add
add
adc
sub
add
add
xor
add
add
cmp
add
sub
imul
add
sub
sub
sub
push
(bad)
adc
sbb
sub
sub
add
out
and
add
push
rcl
add
sub
add
or
outs
sub
add
mov
add
dec
add
or
add
or
cmp
sub
add
cmp
cmp
sub
add
cmp
cmp
sub
or
mov
(bad)
inc
sub
push
sub
add
add
add
add
push
sub
cld
add
add
sub
sbb
sbb
sub
sub
push
sub
and
add
sub
sub
sub
sub
sub
sub
add
or
add
les
sub
add
sub
sub
mov
rol
sub
jae
add
or
aad
sub
push
sub
add
add
xor
add
add
add
add
and
add
add
cmp
sub
add
add
sub
and
lea
add
add
sbb
add
(bad)
sub
add
sub
sub
(bad)
pop
add
or
fld
sub
sub
fst
xor
adc
add
pop
add
adc
pavgb
lds
add
cmp
add
add
add
add
cmp
add
add
ret
add
mov
add
add
inc
and
add
add
ret
add
add
enter
sbb
push
cmp
add
add
add
or
jae
add
or
push
sbb
push
cmp
add
add
rol
pop
add
or
add
jp
add
cmp
xor
add
push
call
sub
add
or
lea
add
add
pop
adc
push
or
add
push
adc
sbb
push
add
add
or
or
push
push
sub
or
dec
call
add
or
push
sbb
add
or
xor
adc
push
push
outs
xor
add
or
add
or
push
sbb
push
push
sub
push
dec
pop
pop
push
push
dec
adc
mov
mov
sbb
sub
add
push
and
add
push
add
add
dec
add
or
add
or
sub
add
je
add
add
push
sbb
push
sub
daa
add
add
pop
add
or
outs
sti
add
or
add
ja
add
sub
add
or
add
je
add
add
sub
jle
add
add
aam
add
sub
add
push
add
xor
add
jae
add
or
pop
outs
aaa
add
or
sbb
sub
add
add
or
pop
je
add
add
sub
push
outs
cmp
add
or
sub
add
sub
add
or
jns
add
sub
add
lea
add
add
or
or
pop
mov
add
or
add
or
sub
cmp
cmp
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
xchg
add
push
cmp
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
xchg
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
shl
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
xor
add
add
add
adc
add
add
cmp
add
add
add
add
push
pop
inc
push
add
add
add
sbb
add
xor
add
les
add
add
add
add
cmp
add
add
and
call
add
pop
pop
cs
stos
add
add
fadd
add
jle
add
add
push
add
cmp
add
add
aam
add
sub
fadd
add
jle
add
add
adc
add
sub
add
push
outs
pop
add
or
add
add
add
sbb
add
sub
add
push
outs
pop
add
or
add
add
add
sbb
sub
add
outs
pop
add
or
add
add
add
and
add
sub
add
push
outs
pop
add
or
add
add
add
daa
add
sub
add
push
outs
pop
add
or
add
and
add
movd
add
add
sub
add
sub
add
push
outs
pop
add
or
add
pop
xor
add
outs
and
add
sub
add
pop
add
sub
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
add
or
and
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
add
jne
add
sbb
add
sub
or
sub
sub
dec
sub
sub
push
push
sub
sub
sbb
sub
push
sub
popa
add
or
jno
add
push
sbb
sub
pop
or
add
add
or
sub
sub
add
and
add
sub
inc
sub
and
add
cmp
cmp
sub
sub
add
sbb
add
xchg
add
pop
add
adc
movntps
dec
cmp
add
adc
sub
add
adc
add
add
push
sub
sub
sub
add
jb
add
push
sub
add
or
sbb
ficom
push
sub
add
in
sub
push
outs
add
add
adc
sub
sub
push
cmp
cmp
cmp
add
cmp
add
or
cmps
sub
lahf
(bad)
(bad)
dec
cmp
add
adc
add
add
add
inc
add
(bad)
shl
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
xor
sub
pop
xor
sub
sub
or
popa
and
push
sub
sub
sub
add
fild
sub
add
add
add
adc
add
add
mov
add
add
add
sub
add
add
xor
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
sbb
sub
push
sub
imul
add
sub
add
add
pop
add
or
add
sub
sub
add
sub
and
cmp
sub
add
cmp
xchg
add
push
cmp
cmp
cmp
nop
(bad)
(bad)
inc
cmp
add
or
mov
(bad)
inc
cmp
das
add
or
mov
(bad)
inc
xor
add
add
add
cmp
add
add
xor
add
sub
sub
push
sub
sub
sbb
sub
sub
adc
push
lea
add
add
and
inc
sub
sub
sub
add
push
sub
sub
ret
add
enter
add
sub
add
iret
outs
inc
add
or
aam
add
adc
add
push
add
add
add
sub
sub
adc
sub
sub
sub
add
cmc
sub
add
sub
add
add
add
pop
add
add
add
add
sub
add
add
aaa
add
sub
sub
sub
inc
add
inc
add
sub
sub
sub
add
jnp
add
sub
sub
sub
add
push
sub
sub
rol
sub
sub
add
push
sub
sub
rol
sub
add
iret
add
into
adc
add
or
add
popa
add
adc
and
add
pavgb
mov
mov
mov
adc
mov
mov
sbb
pop
sub
mov
mov
dec
cmp
mov
add
add
add
add
or
push
push
sub
or
dec
call
add
sub
add
sub
add
push
xor
add
pop
pop
push
ficom
push
dec
pop
pop
push
push
dec
or
xor
add
add
or
add
sub
inc
add
or
push
sub
add
add
add
or
push
sub
add
add
or
push
sub
sbb
sub
cmp
(bad)
(bad)
inc
cmp
cmp
(bad)
inc
inc
cmp
(bad)
inc
inc
(bad)
(bad)
jmp
add
or
cmp
(bad)
inc
cmp
add
or
cmp
(bad)
inc
add
adc
add
cld
add
add
add
cmp
inc
add
aaa
add
cmp
add
add
sub
cmp
test
adc
sub
cmp
cmps
add
add
cmp
and
add
cmp
add
jp
add
sub
sbb
push
outs
cmp
add
sub
jle
add
add
dec
add
sub
add
push
add
xor
add
jae
add
or
outs
xor
add
push
call
sub
add
or
outs
sti
add
or
adc
jle
add
add
dec
add
sub
add
push
add
xor
add
jae
add
or
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
xchg
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
dec
(bad)
(bad)
inc
cmp
jmp
add
or
dec
(bad)
(bad)
inc
cmp
(bad)
jmp
pop
add
or
dec
(bad)
(bad)
call
xor
add
add
add
add
cmp
inc
add
aaa
add
cmp
xchg
add
cmp
add
add
mov
add
adc
cmp
xor
mov
add
cmp
sbb
add
add
push
add
cmp
sub
add
jae
add
or
outs
xor
add
pop
call
sub
add
or
outs
sti
add
or
adc
jle
add
add
push
add
sub
add
push
add
xor
add
jae
add
or
cmp
(bad)
jmp
sub
add
cmp
jmp
xchg
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
pop
add
or
outs
(bad)
(bad)
jmp
jp
add
cmp
(bad)
inc
cmp
jmp
add
or
addr16
(bad)
jmp
sub
add
cmp
(bad)
inc
add
xor
add
add
add
add
cmp
inc
add
xchg
add
cmp
xchg
add
add
cdq
add
add
call
add
push
sub
add
sbb
add
add
sub
add
add
add
add
add
mov
add
pop
adc
adc
sub
add
add
add
outs
inc
add
or
add
add
outs
inc
add
or
add
add
outs
dec
add
or
jle
add
add
pushf
add
sub
add
push
jle
add
add
xchg
add
sub
add
push
jae
add
or
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
xchg
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
pop
(bad)
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
adc
add
push
add
add
add
sub
jle
add
add
xchg
add
sub
jne
add
add
sub
sub
or
sub
sub
sub
sub
sub
sub
sub
add
push
sub
sub
iret
add
into
or
rol
sub
push
sub
sub
rol
xor
add
add
add
add
push
sub
inc
add
icebp
add
sub
sub
mov
add
inc
push
sub
fsubr
sub
add
sub
sub
fadd
sub
outs
dec
add
or
(bad)
add
add
xor
add
add
adc
mov
add
add
add
xchg
add
cmp
ret
add
mov
add
add
(bad)
add
cmp
ret
add
add
enter
cmp
add
add
into
add
add
sbb
pop
or
adc
movntps
je
add
add
outs
dec
add
or
add
add
add
dec
add
or
fisub
jle
add
add
pop
daa
add
sub
add
push
add
add
or
xor
add
jle
add
add
xchg
add
sub
add
push
push
jae
add
or
inc
add
cmp
add
sub
add
push
add
add
or
xor
add
jle
add
add
xchg
add
sub
add
push
jae
add
or
sub
cmp
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
xchg
add
push
cmp
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
xchg
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
sub
cmp
(bad)
inc
add
add
add
add
pop
add
imul
add
xor
call
add
adc
sub
cmp
inc
add
xchg
add
cmp
xchg
add
add
xchg
add
add
add
add
(bad)
add
cmp
xchg
add
add
cwde
add
add
cdq
add
add
sahf
add
add
sbb
pop
push
pop
adc
adc
and
je
add
add
add
dec
add
or
add
add
add
outs
dec
add
or
inc
add
mov
add
sub
add
push
add
add
or
xor
add
jle
add
add
xchg
add
sub
add
push
jae
add
or
cmp
jmp
sub
add
cmp
(bad)
jmp
xchg
add
push
cmp
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
xchg
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
pop
(bad)
(bad)
dec
cmp
call
xor
add
add
bound
add
sbb
sub
sbb
sub
or
sub
adc
add
or
sub
and
add
sub
push
and
sub
outs
dec
add
or
ror
sub
push
sub
push
sub
add
(bad)
add
or
fld
add
xor
add
add
bound
add
sbb
sub
sbb
sub
or
sub
adc
add
or
sub
and
add
sub
push
and
sub
outs
dec
add
or
ror
sub
push
sub
push
sub
add
(bad)
add
or
fld
add
xor
add
add
add
sbb
sub
sub
sub
sub
sub
push
sub
xor
outs
push
add
or
add
or
sub
add
or
(bad)
sub
push
sub
add
(bad)
add
aad
push
add
or
shr
add
or
retf
push
sub
add
int3
adc
add
sub
add
data16
adc
or
or
sub
sub
add
icebp
add
lock
jmp
sub
push
sub
sub
add
sub
in
xor
add
add
add
add
sub
jle
add
add
fisub
add
sub
sub
add
sbb
push
sub
sub
and
add
sub
sub
sub
add
push
sub
sub
fadd
sub
sub
add
or
fild
sub
outs
push
add
or
aad
xor
test
add
add
add
sub
inc
add
repz
add
sub
dec
sub
inc
add
adc
add
sub
dec
sub
push
jle
add
add
repz
add
sub
inc
add
and
add
sub
add
push
add
xor
add
sub
outs
push
add
or
add
lods
sub
add
push
sub
push
sub
sub
add
sub
sub
lods
add
stos
outs
cmp
add
sub
push
sub
xor
xor
add
add
adc
adc
add
sub
sub
push
sub
mov
sub
sub
sub
or
in
push
sub
add
in
push
sub
add
jmp
mov
add
sub
adc
add
ins
add
add
add
pop
sub
sub
jle
add
add
repz
add
sub
sub
sub
sub
jle
add
add
adc
add
sub
sub
sub
xor
add
push
or
add
cmp
add
sub
sub
sub
add
push
sub
sub
lds
sub
sub
add
push
sub
sub
add
sub
retf
leave
add
enter
add
sub
(bad)
sar
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
xor
add
add
adc
dec
sub
add
pop
sub
add
inc
sub
sub
push
sub
push
sub
push
sub
es
sub
dec
sub
push
sub
add
or
push
sub
pop
pop
or
add
add
or
sub
xor
pop
sub
cmp
sub
add
sub
cmp
test
pusha
add
or
mov
sub
sub
or
test
add
xor
add
add
push
or
sub
adc
sub
sub
jae
add
or
jmp
sub
push
sub
jae
add
or
in
sub
pop
sub
adc
add
sub
add
adc
adc
or
add
adc
sub
sub
or
or
adc
add
jmp
sub
outs
pusha
add
or
in
jae
add
or
call
xor
add
add
add
add
cmp
inc
add
pusha
sub
add
mov
add
cmp
xchg
add
add
sub
pop
maxps
mov
add
cmp
sub
cmp
arpl
maxps
mov
add
cmp
sbb
sub
pop
(bad)
sub
pop
push
sub
add
or
pop
maxps
jne
add
or
and
add
add
jne
and
add
add
outs
and
add
add
outs
and
add
add
outs
and
add
add
outs
and
add
push
sub
sub
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
xchg
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
jne
add
cmp
(bad)
dec
cmp
(bad)
inc
cmp
jmp
jne
add
cmp
dec
cmp
(bad)
inc
add
(bad)
sar
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
sub
add
add
push
add
sub
sub
sub
sub
add
out
sub
add
sub
add
jmp
xor
add
sub
sub
add
sub
loope
add
xor
add
add
add
add
push
sub
add
jp
and
and
push
sub
and
and
sub
fild
sub
jae
add
or
fild
sub
outs
sub
add
sub
add
fld
sub
jae
add
or
xlat
add
or
or
add
cmc
add
div
add
or
icebp
jb
or
or
or
add
repz
hlt
add
repz
add
or
out
add
add
cmp
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
add
fwait
sub
add
sub
add
sub
add
push
add
jge
add
add
add
add
add
add
add
adc
add
or
add
add
add
push
sub
add
jnp
add
add
sbb
mov
cmp
mov
add
jle
add
add
fwait
sub
add
stos
add
add
mov
add
cmp
mov
add
jnp
add
add
lods
add
add
mov
add
cmp
add
add
adc
add
sub
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sub
add
push
add
jnp
add
add
add
add
push
cmp
inc
add
add
add
add
add
add
or
add
sub
cmp
(bad)
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
and
add
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
dec
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
add
(bad)
sar
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
xor
add
add
adc
dec
loopne
test
add
cmp
push
sub
ins
add
add
jno
add
cmp
add
cmp
add
cmp
add
pop
push
push
sub
outs
add
add
sbb
call
pop
add
or
fiadd
fiadd
or
add
or
pop
pop
xor
arpl
add
or
add
or
push
push
dec
pop
pop
push
push
sbb
sbb
pop
pop
push
push
sbb
or
xor
cmp
pop
add
or
mov
(bad)
dec
cmp
cmp
cmp
cmp
cmp
fiadd
push
dec
sub
cmp
(bad)
inc
cmp
(bad)
inc
add
add
add
add
or
add
add
add
add
adc
fwait
stos
add
add
add
sbb
add
cmp
add
ins
add
adc
sub
sub
sub
imul
cli
push
sub
sbb
sub
sub
add
sub
or
loop
sub
or
jmp
fiadd
push
sub
add
sub
sub
sub
add
adc
add
add
add
add
add
add
adc
adc
push
add
add
adc
sub
push
sub
push
add
add
mov
dec
sub
adc
push
jle
add
add
mov
dec
sub
push
sbb
(bad)
sub
add
add
or
add
or
push
sub
add
add
pop
push
add
cmps
add
push
sub
lods
push
sub
push
sub
or
stos
push
sub
sub
or
lods
or
stos
sbb
or
add
add
push
add
adc
adc
pavgb
retf
add
retf
add
add
cmp
add
add
push
sub
leave
add
add
add
add
push
cmp
add
add
cmp
cmp
or
mov
add
add
push
sbb
repnz
pop
push
push
sub
pop
sub
push
sbb
dec
pusha
push
sbb
pushf
add
push
push
push
push
pop
dec
push
sub
push
pop
add
push
adc
sbb
dec
pusha
push
push
sbb
pop
or
sub
push
push
pop
push
sbb
add
push
add
add
add
push
push
push
push
pop
dec
sub
pop
pop
push
push
sub
sbb
sub
sbb
sub
push
sbb
sub
sub
sub
pop
adc
sub
cmp
(bad)
(bad)
dec
add
jmp
iret
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
add
inc
cmp
(bad)
inc
cmp
(bad)
inc
adc
add
add
mov
add
add
adc
add
dec
add
add
add
adc
push
sub
sbb
sub
push
sub
sub
push
sub
or
sub
add
or
sub
sub
add
fld
fsubr
test
fmul
sub
push
sub
add
fiadd
sub
add
fadd
add
sbb
or
jp
add
outs
add
adc
sbb
pavgb
add
add
add
add
aaa
add
add
add
add
sub
cmp
add
and
add
add
add
add
cmp
add
add
add
add
push
cmp
add
add
pop
push
push
push
push
pop
add
push
pop
push
dec
pusha
push
sbb
pushf
add
push
push
push
push
pop
dec
pop
cmp
mov
add
push
pop
or
push
push
push
pop
adc
add
add
push
and
add
lea
add
or
push
and
add
sub
add
push
push
pop
push
sbb
add
push
pop
or
or
pop
adc
mov
push
push
pop
dec
sub
pop
dec
or
add
add
add
add
add
add
push
add
add
add
sub
pop
adc
push
pop
adc
push
push
sub
pop
dec
push
sbb
push
pop
adc
pop
pop
loopne
sub
pop
push
pop
adc
dec
pop
pop
push
sub
add
or
push
pop
adc
dec
outs
bound
add
or
or
add
or
sbb
mov
(bad)
(bad)
ficom
push
sbb
push
sub
sbb
sub
sbb
sub
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
jmp
iret
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
add
add
frstor
add
add
add
jp
or
or
je
add
add
add
icebp
add
lock
out
sub
jmp
add
add
add
adc
push
sub
sub
sub
push
sub
sub
push
sub
add
sub
and
and
add
fild
sub
add
(bad)
stos
add
push
sub
or
fld
sub
sub
add
or
rol
sub
jae
add
or
fadd
add
add
inc
add
add
add
add
sub
sub
sub
sub
pop
sub
sbb
push
sub
or
sub
sub
sub
push
sub
sub
sub
add
fiadd
(bad)
lods
add
push
sub
add
in
sub
add
jecxz
lods
add
push
sub
add
xor
cmp
add
outs
add
adc
sub
sbb
sbb
sub
and
jmp
and
sub
add
loope
sub
add
add
push
sub
or
fld
sub
add
add
xor
add
add
jo
add
pop
adc
pavgb
inc
add
cmp
add
add
cmp
add
add
add
add
and
add
add
gs
add
add
cmp
add
add
add
add
push
push
sub
add
sbb
push
cmp
add
add
adc
push
cmp
add
add
pop
add
add
add
adc
add
sub
add
push
outs
add
or
add
add
pop
add
add
sub
add
or
add
add
pop
add
add
sub
add
or
push
pop
dec
pop
cmp
(bad)
call
xor
add
push
pop
dec
pop
pop
outs
push
add
or
add
push
push
pop
dec
outs
add
or
pop
or
add
push
and
add
add
dec
pusha
push
sbb
pushf
add
push
push
push
pop
or
dec
sbb
push
sub
dec
sbb
hlt
pop
sub
sub
pop
adc
push
ficom
sub
push
sbb
sub
push
sbb
sub
fadd
pop
adc
sub
cmp
(bad)
(bad)
inc
cli
(bad)
(bad)
jmp
iret
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
add
add
mov
cmp
add
add
add
xor
add
add
add
add
pop
or
mov
mov
or
mov
add
sub
mov
add
add
push
push
sub
add
sub
cmp
add
add
push
cmp
push
push
cmp
or
push
push
push
sub
pop
add
push
and
add
add
dec
pusha
push
sbb
pushf
add
push
push
push
push
pop
dec
sub
dec
add
mov
sub
pop
or
pop
push
ficomp
push
sub
push
sub
dec
sub
adc
pop
dec
sub
fadd
pop
or
inc
push
cmp
(bad)
jmp
or
pop
(bad)
(bad)
inc
jmp
iret
add
push
cmp
(bad)
inc
cmp
(bad)
inc
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
add
add
add
dec
add
mov
pop
add
add
adc
add
dec
add
add
add
adc
push
sub
sbb
pop
sub
and
and
sub
sbb
and
sub
sub
add
loope
mov
add
sub
or
fadd
sub
add
loope
sub
sub
fmul
sub
add
add
xor
add
add
jb
add
pop
sbb
pavgb
stc
add
add
cli
add
add
pop
and
add
add
add
add
push
sub
add
push
pop
and
add
add
add
add
or
push
push
cmp
add
add
jmp
jmp
jmp
pop
pop
outs
add
or
push
pop
adc
add
push
push
push
pop
dec
pusha
push
pop
or
sub
pop
adc
sub
pop
push
push
and
add
add
add
or
push
push
pop
sbb
add
add
adc
pop
or
dec
push
pop
adc
dec
or
pop
sbb
push
push
push
sub
push
pop
adc
sub
add
pop
add
or
pop
adc
push
pop
adc
dec
pop
pop
push
push
pop
adc
outs
jle
add
add
mov
or
dec
sub
push
pop
or
dec
sub
fadd
outs
add
or
or
add
(bad)
inc
cmp
(bad)
(bad)
inc
pop
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
push
add
or
adc
(bad)
dec
cmp
(bad)
(bad)
inc
adc
(bad)
jmp
iret
add
push
cmp
add
add
add
add
push
add
add
add
xor
add
add
jno
add
adc
push
sub
sbb
pop
sub
and
and
sub
sbb
and
sub
sub
add
loope
mov
add
sub
or
fadd
sub
add
loope
sub
sub
fmul
sub
add
add
xor
add
add
pop
and
pavgb
cmp
add
cmp
add
and
add
add
add
add
cmp
add
add
add
add
push
cmp
add
add
pop
push
push
cmp
add
add
cmp
add
cmp
push
cmp
add
sub
add
or
push
push
pop
add
push
pop
push
dec
pusha
push
sbb
pushf
add
push
push
push
push
pop
dec
cmp
add
add
pop
or
push
push
push
pop
adc
push
push
pop
adc
push
push
push
push
pop
push
sbb
adc
pop
or
jle
add
or
pop
adc
push
push
pop
adc
jle
add
or
add
or
add
or
add
movs
add
push
push
push
push
pop
dec
sub
add
jae
add
or
push
push
push
sub
pop
sbb
and
add
add
pop
push
sbb
push
pop
sbb
or
pop
sbb
jle
add
or
add
or
add
or
add
or
movs
add
push
push
push
push
pop
dec
sub
add
pop
add
or
pop
sbb
pop
sbb
pop
pop
push
push
pop
sbb
push
pop
adc
dec
outs
xor
pop
dec
sub
push
sbb
sub
fadd
outs
add
or
or
mov
(bad)
inc
cmp
cmp
cmp
cmp
(bad)
(bad)
push
add
or
mov
cmp
cmp
iret
add
push
cmp
add
adc
add
add
out
add
add
add
push
add
adc
mov
add
add
push
sub
and
add
add
add
sub
add
or
jmp
sub
out
xor
add
add
add
add
add
add
add
sub
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
sub
sbb
add
push
add
sub
sbb
add
jae
add
or
cdq
(bad)
(bad)
push
add
or
movs
jae
add
or
test
or
scas
jae
add
or
mov
imul
jae
add
or
(bad)
sbb
add
js
add
inc
add
adc
pop
sub
push
sub
sub
sub
icebp
fiadd
jle
add
add
fsubr
add
sub
sbb
add
add
(bad)
add
sub
sbb
sbb
pop
sub
sub
sub
add
sub
sub
add
push
sub
add
in
sub
add
sub
sub
fimul
sub
add
mov
add
and
pop
push
sub
sub
sub
add
add
add
add
adc
add
add
add
add
add
add
or
add
bound
add
sub
sub
outs
add
repz
out
add
add
sbb
push
add
add
add
add
add
cli
sub
cmc
add
sbb
add
add
adc
push
add
add
add
add
jmp
add
cmp
add
pop
cmp
add
cmp
add
cmp
add
sub
sub
add
add
push
add
add
cmp
add
cmp
add
sub
sub
sub
add
add
push
add
add
sub
add
sub
add
outs
add
or
add
or
push
add
sub
sub
sbb
add
sub
push
add
add
add
imul
add
sub
add
push
sub
add
sub
jae
add
or
sbb
add
or
sub
add
or
push
sub
add
or
add
and
add
add
push
or
add
or
sub
add
adc
add
pop
add
add
add
add
sub
add
push
sbb
add
add
jno
add
mov
add
mov
mov
push
add
add
adc
add
outs
jae
add
mov
add
mov
add
sub
jbe
add
mov
mov
add
or
or
add
pop
adc
add
add
(bad)
add
fiadd
sub
jne
add
cmp
sub
add
cmp
inc
add
or
mov
cmp
mov
sbb
add
cmp
sbb
add
cmp
cmp
sbb
add
cmp
add
sbb
add
add
add
add
add
add
add
xlat
push
add
or
add
sbb
add
cwde
add
add
add
pop
sbb
pavgb
mov
add
sub
add
add
add
adc
sub
sub
pop
and
add
add
add
aas
sub
pop
and
add
add
add
inc
pop
push
sub
pop
adc
cmp
pop
dec
sub
ins
sub
push
push
pop
dec
add
sub
add
pop
push
dec
pop
sub
add
sub
add
push
fisubr
push
sub
or
lods
push
sub
ret
les
sub
sub
add
sub
es
pop
adc
sub
fiadd
push
pop
adc
sub
cmp
(bad)
inc
adc
add
add
add
add
add
add
push
add
adc
(bad)
rol
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
xor
fadd
add
jne
add
pop
sub
cmp
cwde
add
add
sub
add
pop
lea
add
cmp
xchg
add
add
pop
es
cmp
xchg
add
add
cmp
cmp
add
adc
sub
add
or
lea
add
adc
adc
push
pop
cmp
jp
add
or
mov
xor
sbb
push
or
call
pop
call
jl
add
adc
pop
pop
adc
adc
adc
hlt
xor
add
or
arpl
(bad)
dec
cmp
(bad)
inc
cmp
call
add
push
add
data16
(bad)
call
add
push
jp
add
cmp
(bad)
dec
cmp
inc
cmp
(bad)
jmp
add
add
push
add
add
push
add
add
push
sub
add
push
sub
add
xor
test
add
cmp
lods
add
add
add
add
sub
add
cmp
add
add
movs
add
add
test
stos
add
add
scas
add
add
sub
add
cmp
push
sub
push
sub
add
or
add
push
adc
sbb
add
add
and
add
in
adc
add
sub
add
sub
add
add
or
mov
jle
add
sbb
or
push
sub
add
or
sub
push
sub
push
or
add
outs
add
add
fadd
sub
add
or
dec
(bad)
(bad)
dec
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
and
add
cmp
(bad)
dec
cmp
(bad)
jmp
mov
add
cmp
dec
dec
(bad)
(bad)
dec
cmp
(bad)
jmp
add
or
dec
(bad)
(bad)
inc
add
add
add
inc
add
add
add
add
(bad)
rol
add
sub
sub
sub
pop
add
or
imul
sub
icebp
add
add
xor
add
add
adc
add
add
inc
sub
add
pop
sub
pop
add
add
pop
jle
add
add
add
sub
pusha
push
sub
sub
sub
add
sub
sub
pop
or
add
add
jle
add
add
add
add
push
adc
(bad)
push
adc
add
outs
add
sub
pop
sub
sub
add
cmp
cmp
sub
push
sub
push
sub
(bad)
inc
sub
sub
sub
add
add
add
adc
add
add
and
add
sub
add
cwde
sub
add
sbb
add
cmp
add
add
and
add
jle
add
add
popf
sub
add
sbb
add
cmp
add
add
and
add
cmp
add
add
sub
add
cmp
add
sub
mov
add
or
outs
cmp
add
adc
xchg
add
add
add
add
or
sbb
add
outs
add
push
jle
add
add
and
add
jle
add
add
cwde
sub
add
sub
add
sub
push
sub
add
or
add
and
add
sub
add
cwde
sub
add
sub
add
push
push
sub
sbb
sub
add
(bad)
sub
add
sub
add
push
sub
add
sub
sbb
add
add
and
add
sub
add
push
push
sub
add
sub
or
sub
add
or
pop
(bad)
(bad)
call
sub
add
push
or
add
outs
add
add
fdivr
add
add
jl
add
sub
add
push
sub
and
add
sub
sub
sub
add
cmp
(bad)
(bad)
jmp
stos
add
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
mov
sar
(bad)
inc
cmp
(bad)
(bad)
jmp
sbb
add
cmp
(bad)
(bad)
inc
add
add
add
add
pop
add
add
add
add
inc
add
add
add
add
sub
add
leave
sub
add
adc
push
sub
sub
and
sub
es
sub
add
push
sub
add
out
and
add
sub
sub
fld
sub
sub
add
push
sub
add
sbb
add
sbb
add
ja
add
jle
add
add
imul
add
cmp
add
add
retf
add
mov
add
retf
add
add
int3
add
add
int
add
cmp
add
add
rol
add
cmp
add
add
outs
add
or
pop
sub
pop
outs
add
add
add
add
adc
adc
push
jle
add
or
and
add
mov
or
add
add
aaa
sub
add
sub
add
adc
add
or
add
or
add
adc
call
aaa
adc
add
sub
add
adc
call
push
ficomp
add
or
pop
sub
adc
outs
add
add
fdivr
add
or
adc
sub
sub
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
push
add
or
sub
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
and
(bad)
inc
add
adc
add
add
jp
add
add
add
xor
add
add
add
add
sbb
pavgb
inc
add
push
cmp
add
add
stc
add
add
pop
push
push
jle
add
add
inc
sub
add
in
add
add
icebp
add
add
repnz
add
test
add
add
mov
add
cmp
adc
sub
push
push
push
sub
add
dec
call
xchg
add
add
and
add
sub
jle
add
add
imul
add
push
add
and
add
sub
outs
pop
add
or
sbb
push
push
push
dec
pop
pop
push
push
dec
adc
mov
sub
sbb
sub
add
xchg
sub
add
sub
add
add
and
add
sub
cmp
cmp
(bad)
jmp
pop
add
or
imul
dec
cmp
(bad)
dec
add
(bad)
sub
add
sub
add
or
sub
add
sub
sbb
push
fiadd
sub
sbb
sub
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
jmp
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
xor
mov
add
jns
add
cmp
add
add
sbb
jle
add
add
clc
sub
add
add
add
mov
add
push
sub
sub
das
sub
sub
sub
push
add
add
or
add
or
sub
add
push
pop
outs
mov
add
pop
or
add
or
iret
or
into
push
sub
add
int3
outs
lea
add
sub
or
sub
sbb
jle
add
add
cmp
sub
add
add
or
mov
add
sub
or
add
outs
(bad)
(bad)
jmp
sbb
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
mov
outs
(bad)
(bad)
inc
add
add
add
add
and
daa
or
add
sbb
or
sbb
add
jp
add
sbb
pavgb
out
add
cmp
add
add
jmp
push
jle
add
add
call
add
cmp
add
add
sub
cmp
add
add
add
add
repz
add
sub
add
cmp
add
add
xor
add
cmp
add
add
cmp
sub
add
sub
add
push
add
and
add
sub
pop
sub
add
push
or
add
add
pop
sub
add
push
pop
mov
sub
add
sub
add
adc
adc
(bad)
adc
adc
or
pop
add
jge
add
add
add
adc
adc
add
inc
add
add
pop
add
jge
add
add
add
and
add
jge
add
add
sub
add
adc
add
cmps
sub
add
push
adc
or
mov
push
push
jle
add
or
push
add
sub
add
pop
sub
add
push
adc
adc
inc
add
add
add
push
dec
adc
adc
sub
add
push
es
cmp
(bad)
jle
add
add
shr
add
push
sub
dec
add
add
sub
add
sub
sbb
push
fidiv
sub
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
mov
mov
pop
jle
add
add
cmp
sub
add
add
pop
sub
mov
add
and
sub
add
and
add
sub
add
push
sub
dec
add
add
sub
add
sub
push
and
jmp
push
cmp
call
cmp
(bad)
(bad)
inc
sbb
sub
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sbb
add
cmp
sub
add
cmp
(bad)
jmp
mov
paddd
inc
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
inc
sub
xchg
add
or
cmc
add
adc
add
push
add
adc
cmp
sub
add
add
push
add
sub
add
data16
sub
sub
fsubr
sub
sub
push
sub
sub
sub
sub
into
add
push
sub
sub
add
push
sub
sub
add
push
sub
sub
add
push
sub
sub
add
push
sub
sub
add
push
sub
push
sub
adc
add
pop
add
add
add
sub
sub
xor
xor
add
or
cs
sub
push
sub
xor
add
or
xor
sub
sub
sub
sub
sub
add
push
sub
or
int3
push
sub
sub
retf
push
sub
add
into
sub
add
push
sub
sub
leave
adc
add
mov
add
add
add
jle
add
add
and
add
sub
add
jnp
add
sub
inc
sub
dec
sub
pop
jle
add
add
mov
add
sub
and
add
inc
sub
sub
add
add
lods
add
sub
add
add
and
add
sub
sub
pop
sub
sub
add
sub
push
sub
sub
or
lods
sub
add
push
sub
or
mov
mov
scas
sub
add
push
sub
add
out
add
add
adc
dec
loopne
loopne
add
sbb
sub
jle
add
adc
add
add
jge
add
sub
add
(bad)
add
cmp
add
cmp
add
cmp
add
add
sub
add
or
sub
sub
sub
add
add
add
sub
add
push
sub
jle
add
add
xor
add
sub
add
push
pop
sub
add
sub
pop
pop
push
inc
push
ficomp
push
sub
add
push
cmp
(bad)
dec
cmp
inc
cmp
(bad)
jmp
sbb
add
cmp
(bad)
jmp
sub
add
cmp
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
mov
jne
(bad)
dec
sub
or
add
or
mov
add
and
jmp
push
pop
pop
inc
sub
cmp
(bad)
(bad)
inc
add
add
add
or
ret
adc
add
add
xor
pop
add
add
add
jle
add
add
push
das
add
cmp
and
add
mov
ret
add
add
add
add
and
add
sub
add
jle
add
cmp
add
add
mov
sub
add
xchg
das
add
cmp
mov
mov
mov
sub
add
or
jle
add
or
push
jle
add
add
lods
das
add
sub
add
push
sbb
add
or
pop
push
xor
push
push
pop
sbb
add
or
push
sbb
or
push
pop
and
popf
or
pop
daa
popf
or
add
or
jle
add
add
mov
add
sub
add
push
push
sub
add
sub
sub
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
mov
xor
(bad)
jmp
sub
add
cmp
(bad)
jmp
stos
add
push
cmp
cmp
(bad)
jmp
sub
add
cmp
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
(bad)
inc
adc
push
add
add
jle
add
jle
add
add
fisubr
add
cmp
sbb
add
mov
add
push
add
add
sbb
add
cmp
add
add
cmp
sbb
add
cmp
add
add
and
pop
and
add
add
add
adc
cmp
add
add
sub
es
add
add
pop
xor
add
sub
add
adc
sub
add
add
sub
add
sub
sub
add
xor
add
sub
add
sub
dec
add
add
sub
add
sub
sub
push
sub
adc
adc
or
pop
add
jge
add
add
sbb
ja
(bad)
call
or
add
pop
adc
sub
add
push
es
add
add
lea
add
sub
add
push
adc
sub
add
add
sub
add
sub
sub
add
fidiv
add
sub
add
push
sub
dec
add
add
sub
add
sub
sub
sub
push
push
cmp
(bad)
jmp
sub
add
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
mov
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
xchg
add
or
(bad)
(bad)
jmp
add
or
(bad)
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
fadd
add
cmp
(bad)
(bad)
inc
add
xor
add
add
adc
sub
add
sbb
sub
add
bound
sub
push
add
cmp
add
sub
push
sub
add
add
add
sub
bound
bound
addr16
sub
add
or
add
add
sub
add
sub
add
push
adc
sub
add
add
sub
add
sub
sub
cmp
cmp
fiadd
add
cmp
cmp
cmp
sub
add
sub
sub
or
xchg
sub
xchg
add
xor
add
add
add
sub
loopne
movs
add
add
cmps
add
add
cmps
add
add
sub
add
pop
xor
add
sahf
add
add
mov
movs
add
add
test
sub
cmp
lods
add
add
pop
adc
sbb
add
or
sub
sub
fiadd
fiadd
push
push
dec
pop
pop
push
push
dec
adc
cmp
add
add
jb
add
or
sbb
push
sub
adc
push
sbb
call
add
xlat
add
push
es
sbb
sbb
pop
pop
push
push
sbb
adc
mov
fcom
sub
cmp
(bad)
inc
cmp
jmp
xor
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
mov
dec
(bad)
(bad)
inc
cmp
(bad)
jmp
xchg
add
or
dec
(bad)
(bad)
inc
add
add
add
push
add
pop
add
or
add
or
add
inc
add
add
add
add
sub
sub
sbb
es
sub
add
stc
sub
hlt
fiadd
pop
and
loop
add
shr
xor
add
sub
add
shr
(bad)
add
push
sub
add
add
add
add
adc
adc
add
or
add
add
add
dec
add
add
add
add
inc
add
add
out
add
cmp
add
add
add
add
xor
add
out
add
and
add
sub
add
jmp
add
cmp
add
add
jle
add
add
and
add
cmp
add
add
add
add
rol
add
and
add
sub
add
sub
add
mov
add
add
add
mov
add
sbb
push
sub
add
ins
xor
add
mov
add
and
add
add
jb
add
sub
add
push
and
add
sub
add
xor
add
sub
add
and
add
sub
add
xchg
xor
add
sub
add
sub
add
add
add
sub
add
add
add
and
add
add
add
add
add
add
sub
add
or
ud0
jmp
sub
or
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
inc
out
sub
add
add
add
jle
add
add
lods
add
add
sub
add
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
add
xchg
jle
add
add
or
add
movntps
jle
add
add
outs
pusha
add
or
in
add
out
sub
add
push
sub
add
add
jle
add
add
add
xor
movs
add
add
add
adc
cmp
dec
add
add
cmp
add
cmp
add
adc
add
add
add
shl
add
cmp
add
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
push
add
add
adc
add
cmp
add
sub
pop
jle
add
add
and
add
sub
add
push
outs
inc
add
or
jle
add
add
cli
xor
add
sub
add
jle
add
add
and
add
sub
pop
jle
add
add
push
adc
add
sub
add
outs
inc
add
or
add
add
pop
add
add
das
xor
add
sub
add
add
add
add
and
add
sub
jnp
add
add
pop
add
add
cdq
adc
add
sub
add
outs
push
add
or
sbb
push
xor
and
jnp
add
add
sbb
push
add
or
add
sub
je
add
jge
add
add
and
add
pop
add
add
push
sub
add
adc
add
and
add
sub
add
add
add
add
pop
add
add
nop
adc
add
sub
add
jle
add
add
and
add
jge
add
add
sub
add
push
cmp
cmp
add
push
cmp
cmp
and
add
cmp
mov
lods
(bad)
(bad)
inc
cmp
sbb
add
cmp
cmp
adc
add
add
add
adc
and
add
add
xor
pop
add
add
add
add
sub
add
add
pop
add
add
je
add
sub
sub
sub
and
add
mov
add
sub
sub
sub
sub
add
push
sub
sub
fiadd
sub
sub
add
push
sub
sub
add
push
sub
sub
add
sub
sub
iret
add
add
add
push
add
add
add
add
es
add
add
pop
add
add
je
add
sub
sub
add
add
mov
add
sub
sub
sub
sub
add
push
sub
sub
fsubr
fild
add
sub
sub
add
push
sub
sub
add
sub
sub
rol
add
bound
add
sub
sub
sub
add
push
sub
sub
add
or
out
add
add
add
sub
sub
sub
add
push
sub
sub
add
or
out
add
add
xor
add
add
add
add
add
dec
add
add
jbe
jnp
add
jle
add
add
xchg
xor
add
jbe
add
or
add
pop
add
add
scas
xor
add
outs
jle
add
add
jb
push
add
add
pop
add
add
bound
add
sub
pop
add
add
imul
push
add
add
pop
add
add
sbb
add
sub
adc
add
pop
add
add
lods
add
add
sub
add
adc
sub
pop
add
or
cmp
jmp
sub
jnp
(bad)
jmp
sub
add
cmp
sub
add
cmp
and
add
cmp
add
push
sub
or
mov
sub
add
sub
or
cwde
add
xor
add
add
adc
dec
add
add
adc
add
add
adc
add
add
lds
add
cmp
add
sbb
add
sub
add
loop
add
sub
pop
add
add
sub
popa
add
add
add
add
dec
sub
sub
pop
add
add
cdq
add
or
and
sub
sbb
add
sub
add
or
nop
(bad)
(bad)
jmp
sub
(bad)
(bad)
(bad)
jmp
sub
add
cmp
sub
add
sub
or
movs
sub
add
push
sub
or
movs
or
movs
push
sub
xor
add
popa
add
add
sub
add
cmp
add
cmp
add
add
add
inc
xor
add
add
add
ins
add
add
jno
add
jle
add
add
cmp
add
add
add
bound
add
pop
add
add
pusha
add
add
popa
add
add
bound
add
outs
sldt
push
pop
sub
arpl
add
add
fwait
xor
add
sub
add
or
pop
outs
sldt
push
pop
sub
adc
add
adc
adc
push
add
push
sub
add
push
jle
add
add
pop
jle
add
add
sub
add
push
jle
add
add
aam
add
sub
add
push
outs
sldt
push
sbb
adc
add
push
sub
fstp
pop
add
add
popa
add
add
in
xor
add
sub
add
jle
add
add
and
add
jle
add
add
cli
xor
add
sub
add
sub
add
in
add
push
jle
add
add
popa
add
add
in
xor
add
sub
add
jle
add
add
and
add
jle
add
add
cli
xor
add
sub
add
jle
add
add
push
add
sub
add
push
sub
sub
add
push
sub
jle
add
add
add
add
sub
add
push
sub
or
add
es
cmp
or
push
add
push
add
sub
add
push
add
inc
jmp
add
adc
pop
add
add
pop
add
add
fwait
add
or
add
add
popa
add
add
and
sub
add
jle
add
add
dec
add
add
sub
add
sub
sub
sub
pop
add
add
pushf
add
or
sub
sub
add
xchg
add
push
or
pop
outs
sldt
push
pop
sub
or
add
push
cmp
(bad)
jmp
fstp
add
add
jnp
add
add
or
add
es
add
add
scas
xor
add
push
sub
push
pop
push
jae
add
or
inc
add
or
jnp
add
add
cmp
(bad)
(bad)
jmp
add
add
jnp
(bad)
(bad)
jle
add
add
fdiv
add
push
sub
push
sub
add
cmp
mov
mov
(bad)
jmp
sub
add
cmp
lock
push
cmp
cmp
sub
add
cmp
cmp
cmp
cmp
jle
add
add
cmc
xor
add
push
or
sub
add
sub
sub
fiadd
jle
add
add
push
add
sub
add
push
sub
add
add
add
rol
add
add
add
add
add
add
add
xor
dec
add
add
add
adc
add
add
daa
add
cmp
cmp
jle
add
add
popa
add
add
in
xor
add
mov
pop
add
add
mov
popa
add
add
cli
xor
add
sahf
add
add
mov
inc
cmp
cmps
add
add
add
add
popa
add
add
in
xor
add
popf
add
add
add
add
and
add
jle
add
add
cli
xor
add
sub
add
push
sub
sub
sub
add
push
sub
add
jmp
pop
add
push
sub
add
push
jle
add
add
aam
add
sub
add
push
sub
jp
sub
add
cmp
jmp
mov
dec
(bad)
(bad)
jmp
sub
add
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
lods
add
push
cmp
(bad)
inc
cmp
jmp
in
add
push
cmp
(bad)
jmp
sub
add
cmp
(bad)
dec
sbb
add
add
inc
add
sub
add
push
push
outs
add
xchg
add
push
sub
fiadd
jle
add
add
jne
add
sub
add
push
sub
inc
sbb
add
add
add
add
add
add
or
add
add
add
loopne
add
add
add
jle
add
add
mov
add
cmp
mov
add
cmp
jge
add
add
mov
add
jnp
add
add
sub
add
add
scas
add
cmp
add
cmp
add
cmp
pusha
add
add
adc
add
sub
add
add
sub
sub
add
add
loopne
add
sub
add
push
jle
add
add
or
sub
add
jae
add
push
sub
sub
push
sub
sub
sub
add
cmp
(bad)
jmp
mov
outs
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
mov
jns
(bad)
inc
cmp
(bad)
jmp
add
or
jp
(bad)
jmp
or
add
cmp
(bad)
call
xor
sti
add
add
dec
loopne
fadd
add
jle
add
add
sub
add
cmp
add
add
aam
add
cmp
add
jne
add
add
popa
add
add
inc
xor
add
inc
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
jmp
add
jge
add
add
jnp
add
add
cmp
add
add
pop
aaa
add
sub
add
push
sub
popa
add
add
nop
aaa
add
sub
add
push
add
add
add
add
add
sub
add
sub
sub
add
push
or
pop
lea
add
adc
or
pop
sub
adc
jp
add
or
add
lods
aaa
add
sub
add
push
or
sbb
add
push
sbb
push
jae
add
or
add
adc
pop
add
add
or
add
add
or
push
adc
and
add
add
push
jle
add
add
rol
add
push
sub
add
or
popa
add
add
sbb
add
sub
add
push
sub
add
or
cmp
xchg
add
add
sbb
add
jle
add
add
sub
add
sub
add
or
movs
add
add
add
add
push
adc
add
outs
add
pop
jle
add
add
ret
add
sub
add
adc
sub
add
sub
jnp
add
add
push
outs
lahf
add
or
sub
sbb
push
adc
push
adc
outs
mov
jnp
add
add
push
outs
mov
inc
add
add
sub
add
push
add
add
add
push
pop
outs
mov
sub
add
jle
add
add
sub
add
sub
add
or
pop
add
add
add
add
push
adc
add
outs
add
or
add
add
jmp
add
sub
add
push
adc
sub
add
sub
jnp
add
add
push
outs
lahf
add
or
pop
push
adc
push
adc
outs
mov
jnp
add
add
push
outs
mov
mov
sub
add
add
add
add
push
pop
outs
mov
mov
sbb
add
sub
add
sub
add
or
sub
add
jg
add
add
push
adc
add
outs
add
or
add
add
adc
add
sub
add
push
adc
adc
sub
add
sub
jnp
add
add
push
outs
lahf
add
or
pop
push
adc
push
adc
outs
mov
push
jle
add
add
stc
add
add
push
sub
add
or
add
add
add
push
outs
mov
adc
sub
add
push
add
add
add
push
pop
outs
mov
push
dec
pop
pop
push
push
dec
adc
std
(bad)
inc
jnp
add
add
mov
movs
add
or
movntps
adc
sub
or
add
or
add
or
pop
push
adc
sub
(bad)
adc
or
sub
add
outs
add
add
fadd
adc
push
sbb
sub
jle
add
add
dec
cmp
add
sub
add
sub
or
add
ficom
cmp
sub
add
cmp
lock
push
cmp
cmp
cmp
stos
cld
(bad)
call
or
sub
add
add
xchg
cmp
add
sub
add
adc
outs
add
xchg
add
push
sub
fiadd
jle
add
add
fstp
add
sub
add
push
sub
or
and
(bad)
jmp
sub
add
cmp
cld
(bad)
jmp
mov
and
(bad)
inc
inc
xor
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
xor
add
add
add
add
adc
add
add
adc
add
sub
ins
add
add
add
add
ins
add
add
jno
add
jle
add
add
xchg
sldt
sub
jo
add
cmp
add
cmp
add
cmp
add
sub
add
or
push
outs
daa
add
or
add
add
gs
add
push
sub
add
or
sub
sub
and
sub
add
cmp
mov
mov
(bad)
jmp
xor
add
cmp
cmp
sub
add
cmp
cmp
and
add
cmp
mov
cmp
inc
cmp
(bad)
inc
add
adc
add
pop
add
add
add
adc
add
add
inc
cmp
add
and
and
add
and
add
add
xchg
sldt
sub
sub
sub
sub
xor
sub
add
push
sub
sub
aam
xor
add
sub
or
shr
sub
add
sub
push
sub
sub
add
sub
sub
int
sub
add
jle
add
add
outs
cmp
add
or
push
sub
sub
sub
add
sub
sub
jmp
xor
add
sub
sub
add
sub
sub
push
sub
add
add
add
jge
add
add
pop
jge
add
add
jae
add
or
add
add
sub
add
add
xor
add
add
add
add
add
dec
add
add
add
add
mov
add
cmp
bound
add
lea
add
sbb
and
add
sub
cmp
adc
add
add
xchg
cmp
add
add
add
movd
add
xchg
cmp
add
jns
add
and
add
sub
sub
jle
add
outs
test
add
push
sub
sbb
sbb
test
stos
add
or
add
or
add
add
mov
add
and
add
sub
add
or
jae
(bad)
jmp
sub
outs
(bad)
(bad)
jmp
rol
add
cmp
(bad)
jmp
rol
add
cmp
(bad)
jmp
iret
add
push
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
test
jge
(bad)
jmp
add
or
js
(bad)
inc
and
add
adc
add
sub
add
adc
add
jecxz
add
add
add
cmp
add
add
cmp
test
add
cmp
add
add
inc
xor
add
mov
add
cmp
add
add
pop
add
jnp
add
add
mov
add
cmp
xchg
add
add
add
add
adc
add
sub
add
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
push
sub
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
jnp
add
add
add
add
add
jnp
add
add
add
add
add
adc
add
sub
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
jmp
and
add
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
imul
inc
cmp
(bad)
inc
cmp
(bad)
inc
sbb
add
push
add
add
add
adc
and
push
sub
jne
add
jle
add
add
mov
sub
add
outs
inc
add
or
push
sub
add
or
add
or
add
add
add
fiadd
add
jge
add
add
pop
jge
add
add
add
adc
add
add
add
inc
add
or
add
push
jle
add
add
mov
add
sub
add
push
sub
add
add
xor
add
add
add
adc
sub
add
add
add
cmp
lods
add
add
mov
add
cmp
mov
add
pop
jge
add
add
stos
add
add
lods
add
add
add
add
lods
add
add
add
add
test
add
cmp
jge
add
add
jnp
add
add
aaa
sbb
add
add
lds
add
sub
add
push
add
add
add
dec
add
add
sub
add
sub
jnp
add
add
sub
sub
add
sub
ins
add
add
loop
add
sub
add
push
sub
jnp
add
add
outs
(bad)
(bad)
(bad)
fnstsw
sub
add
cmp
(bad)
push
add
push
cmp
(bad)
jmp
mov
add
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
push
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
add
push
cmp
(bad)
inc
cmp
(bad)
dec
pop
jle
add
add
pop
cmp
add
sub
add
push
outs
add
xchg
add
push
sub
ficom
pop
and
add
add
dec
cmp
add
sub
add
pop
outs
add
xchg
add
push
sub
push
sub
sbb
add
add
jne
add
sub
add
push
or
add
or
add
push
sub
sbb
fiadd
sub
add
inc
dec
add
add
add
add
add
and
add
mov
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
xor
add
add
sub
jge
add
add
ins
add
add
call
imul
add
add
add
add
sbb
imul
add
imul
imul
add
add
add
sub
add
add
mov
add
sub
add
push
sub
jnp
add
add
lods
add
or
call
arpl
add
sub
cmp
sub
add
cmp
mov
(bad)
(bad)
(bad)
inc
cmp
(bad)
(bad)
(bad)
inc
sub
push
sub
jmp
xchg
add
add
push
add
add
add
add
sub
jle
add
add
sar
add
sub
sub
sub
jnp
add
add
or
sub
and
add
add
and
add
add
pop
sub
sub
add
sub
sub
rol
sub
add
(bad)
add
push
sub
add
fisubr
add
push
sub
add
add
sub
sub
or
clc
add
dec
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
add
adc
adc
add
pop
add
add
add
add
sub
sub
jle
add
add
out
cmp
add
and
dec
add
add
and
sub
sub
sub
sub
add
ins
add
add
sub
shr
sub
add
sub
sub
add
or
fsubr
add
or
shl
add
or
into
or
int
sub
add
add
dec
add
add
add
or
sub
add
or
imul
sub
icebp
add
add
sub
sub
add
jns
add
(bad)
cmp
add
adc
sbb
sbb
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
sub
sub
add
jns
add
(bad)
cmp
add
adc
sbb
sbb
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
sub
sub
add
jns
add
(bad)
cmp
add
adc
sbb
sbb
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
sub
sub
add
jns
add
stc
das
add
sub
sub
sub
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
sub
sub
add
jns
add
(bad)
cmp
add
adc
sbb
sbb
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
sub
sub
add
jns
add
(bad)
cmp
add
adc
sbb
sbb
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
sub
sub
add
jns
add
stc
das
add
sub
sub
sub
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
sub
sub
add
jns
add
or
add
sub
sub
sub
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
sub
sub
add
jns
add
stc
das
add
sub
sub
sub
add
sub
outs
mov
fsubr
sub
add
sub
sub
add
sub
sub
fadd
add
add
sbb
or
pop
add
add
sbb
or
cvtpi2ps
add
or
in
outs
add
or
out
sub
add
sub
add
xor
inc
add
add
cmp
add
add
add
add
or
pop
add
add
sbb
add
cmp
mov
jle
jns
add
sub
add
cmp
mov
jns
add
push
fwait
add
add
add
add
arpl
add
cmp
fwait
add
add
xor
add
pop
push
sub
add
push
sub
jle
add
add
jo
add
sub
add
push
sub
sub
pop
or
fwait
add
add
add
add
cdq
cmp
add
sub
add
sub
or
add
add
add
add
retf
add
sub
add
sub
or
push
push
cmp
(bad)
jmp
xor
add
cmp
jmp
sub
add
cmp
(bad)
jmp
mov
push
(bad)
(bad)
jmp
sub
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
add
add
cmp
(bad)
dec
jle
add
add
out
cmp
add
sub
add
push
sub
add
or
mov
sub
add
cmp
(bad)
(bad)
inc
sub
sub
add
cmp
(bad)
(bad)
jmp
mov
(bad)
(bad)
inc
adc
add
add
add
add
and
add
add
xor
aas
add
add
cmp
jns
add
and
add
push
add
add
sbb
add
jle
add
add
cmp
cdq
add
add
sahf
add
add
mov
test
add
pop
sub
sub
add
jbe
add
cmp
mov
adc
add
ffree
add
add
add
add
push
sub
add
jle
add
add
lahf
cmp
add
sub
add
sub
add
push
sub
add
pop
push
sub
add
push
sub
sbb
jle
add
add
mov
add
sub
add
push
sub
or
jns
jns
add
fnstsw
add
sub
add
sub
or
popa
sub
add
push
cmp
(bad)
jmp
mov
pop
(bad)
(bad)
jmp
add
add
cmp
(bad)
jmp
xor
add
cmp
(bad)
jmp
sub
add
cmp
(bad)
jmp
mov
push
(bad)
(bad)
dec
cmp
(bad)
dec
jle
add
add
push
cmp
add
push
push
sub
add
or
mov
or
add
cmp
(bad)
(bad)
inc
sub
sub
add
cmp
(bad)
(bad)
jmp
mov
(bad)
(bad)
inc
add
add
add
sbb
jmp
add
xor
add
add
adc
add
add
inc
cmp
add
add
jge
add
push
cmp
add
add
test
add
add
cmp
add
add
add
add
sbb
sub
cmp
add
cmp
add
add
add
sub
add
push
sub
add
push
sub
add
or
mov
add
add
sub
add
or
xchg
add
add
add
add
sub
add
or
test
add
jae
add
push
adc
jle
add
add
fs
add
push
sub
push
jle
add
or
add
add
outs
mov
movs
add
or
or
cmp
add
or
adc
and
add
jns
add
mov
add
push
push
push
pop
outs
add
or
push
outs
mov
add
sub
add
sub
add
jge
add
add
or
cmps
add
or
or
push
sub
add
outs
add
add
fcom
push
jnp
add
add
sbb
add
sub
jnp
add
add
jns
add
push
push
add
sub
add
push
sub
add
jge
add
add
push
and
add
jns
add
xchg
cmp
add
push
jle
add
add
enter
sub
add
sub
add
jge
add
add
jns
add
mov
add
sub
add
push
adc
jnp
add
add
and
add
sub
or
add
or
add
add
loopne
add
sub
add
push
pop
outs
mov
add
mov
add
sub
add
sub
outs
mov
add
push
inc
add
pop
outs
mov
add
outs
mov
add
adc
cmp
add
add
or
mov
add
or
sub
add
push
sub
jle
add
add
sbb
sub
add
or
and
add
sub
xchg
add
add
add
push
adc
add
push
jge
add
add
jns
add
data16
sub
add
push
or
and
add
sub
add
or
add
or
add
add
jns
add
stos
add
sub
add
push
adc
jl
add
dec
add
add
sub
add
sub
add
push
adc
call
add
or
add
jle
add
add
hlt
add
sub
add
push
sub
add
push
sub
add
sub
or
mov
add
cmp
(bad)
(bad)
(bad)
ficom
push
sub
push
sub
add
outs
add
add
fcom
and
(bad)
add
add
add
add
sub
sub
add
sub
adc
push
sub
add
adc
add
cmp
add
sub
add
adc
or
mov
adc
fld
jns
add
mov
add
sub
add
push
sub
adc
fisubr
add
add
cmp
cld
(bad)
jmp
xor
add
cmp
cld
(bad)
jmp
add
add
cmp
cld
(bad)
jmp
xor
add
cmp
cld
(bad)
jmp
add
add
cmp
cld
(bad)
jmp
xor
add
cmp
cld
(bad)
jmp
or
jmp
jns
add
lock
add
sub
add
push
adc
sub
add
or
mov
sub
push
sub
fiadd
adc
sub
sub
add
cmp
(bad)
jmp
mov
jns
(bad)
inc
inc
add
add
add
lods
add
add
add
test
add
add
add
add
add
mov
add
popf
add
add
add
add
add
fadd
add
and
add
add
add
add
add
dec
add
add
add
add
add
add
add
jle
add
add
and
add
adc
pop
jle
add
add
pop
es
add
add
push
sub
sub
add
sub
sub
loop
retf
add
push
sub
sub
add
push
sub
add
xor
add
add
add
add
sbb
pavgb
movs
add
add
add
add
mov
cmps
add
add
sub
add
cmp
cmps
add
add
push
sbb
sub
mov
mov
call
sub
or
add
or
add
add
and
add
sub
jle
add
add
ds
add
sub
add
push
jle
add
add
and
add
sub
sbb
push
fisubr
pop
push
push
dec
or
jns
add
ja
add
sub
add
push
jle
add
add
and
add
sub
sub
sbb
sub
cmp
(bad)
jmp
pop
add
or
push
(bad)
(bad)
dec
cmp
inc
cmp
(bad)
dec
inc
cmp
dec
cmp
(bad)
inc
cmp
(bad)
dec
pop
(bad)
(bad)
call
xor
add
add
xchg
add
push
cmp
dec
loopne
clc
add
add
add
repz
add
hlt
add
add
push
sub
add
add
mov
add
cmp
add
add
in
add
add
out
add
add
repz
add
cmp
jne
add
in
add
add
repnz
add
adc
push
push
sub
add
dec
call
xchg
add
jle
add
add
and
add
sub
jle
add
add
stc
inc
add
sub
add
push
jle
add
add
and
add
sub
outs
mov
add
sub
add
push
or
mov
push
jle
add
add
dec
inc
add
sub
add
push
sub
sub
push
sbb
push
fidiv
sub
push
push
dec
pop
pop
push
push
dec
adc
imul
jle
add
add
ja
add
sub
add
push
jle
add
add
and
add
sub
sub
sbb
sub
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
sbb
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
inc
cmp
and
add
cmp
(bad)
(bad)
jmp
mov
add
(bad)
jmp
pop
add
or
or
(bad)
dec
cmp
(bad)
(bad)
inc
add
adc
add
or
add
mov
add
cmp
les
add
sbb
add
lahf
inc
add
cmp
mov
ret
add
ret
add
add
les
add
push
cmp
add
add
jg
sub
add
adc
push
outs
xchg
add
jle
add
add
lahf
inc
add
sub
add
push
sub
add
or
or
add
or
retf
push
or
add
lods
inc
add
sub
add
push
or
and
add
sub
sub
add
or
add
or
add
or
outs
mov
add
outs
mov
add
adc
aas
jbe
(bad)
inc
sub
add
or
aaa
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
pop
add
or
cmp
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
add
xor
add
call
add
aaa
(bad)
(bad)
inc
add
adc
add
inc
add
add
add
adc
add
add
or
fld
add
cmp
add
add
out
add
cmp
add
add
sub
add
cmp
add
add
clc
add
add
std
add
add
add
add
sub
add
push
pop
sub
sub
add
push
sub
add
push
jle
add
add
add
add
sub
add
push
jle
add
add
add
add
sub
add
push
sub
add
push
sub
sub
add
push
es
sub
jle
add
add
xor
add
sub
add
sub
add
push
sub
lahf
add
or
add
or
mov
add
or
sub
add
push
inc
add
sub
add
push
push
sub
add
sub
add
add
push
pop
push
sub
add
push
es
add
add
mov
sub
add
sub
cmp
(bad)
jmp
sub
add
push
cmp
(bad)
(bad)
jmp
mov
adc
(bad)
jmp
cld
add
push
cmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
std
add
push
cmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
inc
add
cmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
inc
add
cmp
(bad)
(bad)
inc
add
xor
add
add
add
sub
jle
add
add
leave
inc
add
cmp
mov
add
cmp
nop
add
add
xchg
add
add
call
add
sub
add
cmp
mov
sub
add
or
sub
push
mov
xor
jns
add
push
inc
add
sub
add
push
add
sub
add
sub
push
sub
and
sub
add
dec
inc
add
sub
add
push
push
lea
add
add
mov
mov
push
sub
add
cmp
(bad)
inc
cmp
inc
cmp
(bad)
jmp
dec
add
or
data16
(bad)
jmp
mov
popa
(bad)
(bad)
inc
cmp
(bad)
jmp
xor
add
cmp
(bad)
jmp
cli
add
push
cmp
(bad)
inc
cmp
(bad)
dec
sbb
jle
add
add
xchg
inc
add
sub
add
push
pop
sub
add
or
mov
add
add
add
add
add
add
in
add
or
add
add
add
call
add
add
add
add
leave
inc
add
cmp
add
cmp
add
add
mov
add
push
sub
add
cmp
call
add
cmp
add
push
sub
add
push
sub
add
push
sub
add
push
sub
add
push
push
sub
add
sub
add
push
sub
add
push
sub
add
push
jle
add
add
out
inc
add
sub
add
push
sub
cmp
call
sub
(bad)
(bad)
jmp
sub
add
push
cmp
(bad)
jmp
mov
jb
(bad)
jmp
add
add
cmp
(bad)
jmp
adc
add
cmp
(bad)
jmp
add
add
cmp
(bad)
jmp
adc
add
cmp
(bad)
jmp
add
add
cmp
jmp
adc
add
cmp
(bad)
jmp
add
add
cmp
(bad)
call
xor
add
add
adc
add
add
pop
inc
add
sub
add
add
test
add
sbb
add
push
sub
xor
jle
add
add
dec
inc
add
sub
sub
sub
sub
sub
add
or
or
add
leave
add
push
fiadd
fidivr
add
into
sub
add
or
leave
sub
add
push
sub
add
iret
sub
add
sub
or
add
add
push
inc
add
sub
add
push
push
sub
add
or
mov
add
sub
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
and
add
cmp
(bad)
jmp
mov
outs
(bad)
(bad)
inc
add
sbb
add
add
add
inc
add
or
add
add
sbb
sbb
push
add
adc
add
add
mov
add
add
dec
add
add
cmp
inc
add
add
add
add
mov
cmp
outs
add
add
pop
add
add
jns
add
xchg
inc
add
cmp
add
add
xor
add
xor
add
sub
add
jns
add
cwde
inc
add
cmp
add
add
add
add
jle
add
add
mov
sbb
add
xor
add
pop
add
add
jae
add
pop
add
add
jns
add
pusha
and
add
add
add
jle
add
or
add
or
add
add
mul
add
sub
add
push
jle
add
or
add
or
add
add
outs
adc
add
push
jle
add
or
add
or
pop
adc
add
or
jle
add
add
jns
add
scas
inc
add
sub
add
push
sub
add
xor
add
cmp
(bad)
(bad)
jle
add
add
lds
add
sub
add
push
xor
add
cmp
(bad)
(bad)
jle
add
add
ret
inc
add
sub
add
push
xor
add
jns
add
enter
sub
add
push
cmp
add
sub
sub
pop
add
or
mov
sub
mov
(bad)
jmp
sub
add
cmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
sub
add
cmp
(bad)
(bad)
inc
add
push
add
adc
push
add
adc
mov
add
add
adc
sbb
add
add
jp
add
sub
sub
sub
sub
add
push
sub
add
in
int
add
sub
add
xor
add
add
add
add
add
add
or
sbb
add
sub
fiadd
sub
add
add
add
add
or
add
or
add
push
add
adc
sbb
add
jae
add
mov
add
sub
sub
push
sub
add
add
inc
adc
push
sub
fimul
ds
add
jo
and
add
sub
pop
or
fidiv
sub
add
or
les
add
or
mov
or
mov
or
mov
sub
add
or
mov
sub
fiadd
push
sub
sub
pop
push
sub
adc
add
add
add
add
add
add
or
add
and
add
add
add
sub
adc
push
sbb
add
jae
add
or
or
adc
lahf
add
or
jmp
or
lock
sub
adc
add
add
add
and
add
add
add
xor
add
adc
pavgb
lods
add
add
add
stos
add
add
lods
add
add
mov
add
adc
push
cmp
mov
mov
mov
mov
test
add
or
jo
lea
add
adc
adc
push
pop
sub
adc
outs
jp
add
adc
and
add
adc
push
push
push
pop
adc
push
push
push
push
sub
adc
dec
call
sub
adc
dec
pop
pop
call
dec
sbb
push
dec
adc
imul
add
or
add
add
pusha
add
or
add
adc
jnp
add
add
push
add
or
test
add
or
push
sub
adc
sbb
call
sub
adc
sbb
pop
pop
call
push
push
sbb
sbb
sbb
push
sbb
adc
imul
add
or
mov
add
add
pop
pop
xor
pop
adc
add
or
pop
push
push
pop
dec
pop
pop
outs
add
or
push
push
pop
adc
push
pop
jp
jnp
add
push
inc
inc
push
push
pop
adc
push
pop
je
jnp
add
push
inc
inc
push
adc
pop
pop
outs
push
add
or
add
add
adc
sub
add
or
add
add
add
or
jle
add
add
add
or
or
add
enter
adc
or
pop
adc
cmp
add
add
pop
or
adc
outs
add
push
pop
or
dec
lea
add
adc
adc
adc
push
push
pop
or
dec
outs
retf
or
push
pop
adc
sub
adc
sub
add
adc
adc
or
pop
adc
sub
retf
add
or
or
adc
push
pop
adc
push
fimul
es
pop
adc
push
fiadd
push
pop
adc
sub
jb
add
jo
int3
add
or
add
or
or
or
int
add
adc
adc
jnp
add
add
inc
add
jo
and
add
adc
adc
sub
add
or
into
add
or
or
or
or
adc
mov
pop
add
or
or
iret
add
or
or
sub
add
push
adc
adc
sub
add
push
adc
sub
add
or
or
add
fiadd
jle
add
add
add
add
or
or
or
adc
sub
add
or
adc
adc
std
(bad)
inc
cmp
(bad)
jmp
add
or
dec
std
(bad)
jmp
pop
add
push
cmp
(bad)
jmp
push
add
push
cmp
(bad)
dec
inc
std
(bad)
jmp
push
add
or
cmp
cmp
add
or
aaa
std
(bad)
inc
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
sub
add
test
add
add
add
add
add
adc
sub
cmp
add
jae
add
or
repz
add
add
add
mov
add
cmp
mov
rol
add
rol
add
add
add
mov
push
sub
add
sub
cmp
add
mov
sub
sub
cmp
dec
add
jo
sbb
add
es
add
add
add
lods
add
or
push
jb
add
jo
sbb
add
es
sub
push
add
add
add
pusha
add
or
add
add
add
add
jo
sbb
add
es
jb
add
jo
sbb
add
es
add
add
add
pusha
add
or
add
add
add
add
jo
sbb
add
es
outs
add
jae
add
or
cmp
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
cmp
(bad)
inc
cmp
(bad)
inc
cmp
aad
add
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
add
adc
add
cld
add
add
adc
add
and
add
jge
add
add
jle
add
or
add
add
jle
add
or
add
add
pop
lea
add
or
push
pop
sub
or
add
or
lods
add
add
adc
or
outs
(bad)
add
or
pop
jb
add
jo
xor
add
sub
add
push
outs
push
add
or
add
or
add
add
jp
jb
add
jo
xor
add
sub
add
push
outs
push
add
or
add
add
jnp
add
add
jp
add
and
add
sub
add
add
or
add
add
inc
pop
jb
add
jo
xor
add
sub
add
pop
movq
add
jge
add
add
jnp
add
add
scas
add
jo
and
add
sub
add
add
or
add
add
pop
add
jge
add
add
add
pop
adc
add
mov
dec
(bad)
(bad)
jmp
push
add
fild
add
sub
add
fild
add
sub
add
fild
add
sub
add
fild
add
sub
add
fild
add
sub
add
fild
add
sub
add
fild
add
sub
xor
add
sbb
cmp
jg
add
add
add
add
sub
pop
sub
sub
sub
ficomp
add
hlt
sub
add
or
lock
add
or
jmp
sub
(bad)
add
cmp
add
sub
add
push
ins
add
add
outs
add
add
sbb
push
cmp
add
add
or
pop
sbb
call
or
push
push
push
push
push
push
sbb
outs
pusha
add
or
pop
push
sub
push
sbb
outs
popa
add
or
add
add
jle
or
pop
sbb
pop
push
sub
pop
push
push
sub
jle
add
add
push
pop
dec
xchg
adc
push
push
push
dec
pop
cmp
push
pop
dec
pop
push
sub
push
push
pop
push
push
pop
dec
pop
pop
push
push
push
pop
dec
pop
cmp
rol
sbb
sbb
pop
pop
push
push
cmp
sbb
push
das
call
dec
and
add
or
fadd
add
sub
add
or
add
adc
jp
add
adc
or
or
add
or
add
or
push
fisttp
add
fst
add
adc
or
pop
push
pop
or
adc
mov
pop
push
push
pop
or
dec
lea
add
add
or
or
rol
add
add
pop
add
or
pop
push
sub
adc
push
pop
adc
adc
push
pop
adc
pop
pop
call
push
pop
adc
pop
adc
pop
pop
push
push
pop
adc
push
pop
or
dec
xor
jle
add
or
add
or
or
pop
jae
add
or
or
or
add
or
or
or
add
or
add
or
pop
or
dec
pop
xor
or
add
or
add
or
pop
or
dec
sbb
or
or
add
or
add
or
pop
or
dec
sbb
or
or
add
or
add
or
pop
or
dec
sbb
xor
pop
adc
sbb
adc
jle
add
or
pop
adc
dec
outs
in
add
push
pop
adc
push
pop
adc
dec
pop
pop
push
push
pop
adc
dec
push
pop
or
dec
xor
adc
jle
add
or
add
or
or
pop
sbb
inc
sub
add
sub
or
add
or
or
add
or
add
or
or
outs
jmp
add
adc
fiadd
fimul
or
push
outs
dec
add
or
add
fiadd
push
pop
sbb
pop
sbb
pop
pop
push
push
pop
sbb
adc
mov
mov
or
pusha
std
(bad)
inc
cmp
push
add
or
mov
(bad)
call
or
mov
(bad)
inc
cmp
add
add
add
add
sub
add
add
jmp
and
add
add
add
add
sbb
adc
add
or
add
add
outs
add
add
add
add
add
jge
or
add
adc
add
popa
add
add
add
pop
cmp
and
add
sub
push
sub
add
sub
sub
push
sub
or
push
call
add
sub
add
or
shr
pop
add
or
fmul
sub
push
sub
sub
add
or
(bad)
outs
in
add
or
shr
add
or
into
add
add
xor
add
dec
loopne
push
add
add
push
add
add
sub
add
dec
add
add
push
add
add
push
add
add
push
cmp
add
add
push
add
add
push
add
add
cmp
add
cmp
add
add
add
or
pop
add
add
pop
add
or
add
add
add
or
dec
add
add
pop
add
or
lea
add
add
push
adc
push
ror
add
pop
add
or
out
add
or
jae
add
or
outs
fiadd
add
or
add
outs
loopne
add
shl
add
sub
add
or
sbb
add
or
pop
push
sbb
push
sub
pop
push
sbb
call
add
or
dec
add
add
pop
add
or
xor
jle
add
or
outs
repz
or
(bad)
(bad)
inc
pop
outs
in
add
or
add
or
add
or
jle
add
or
add
jmp
adc
sbb
sbb
pop
pop
push
push
sbb
adc
mov
lahf
or
add
or
add
or
sub
pop
adc
rcr
add
pop
add
or
add
or
add
or
pop
push
sub
cmp
(bad)
(bad)
jmp
fiadd
push
push
dec
pop
pop
push
push
dec
adc
(bad)
(bad)
jmp
or
test
(bad)
inc
cmp
push
add
or
cmps
(bad)
(bad)
call
add
inc
cmp
cmp
cmp
cmp
add
inc
sbb
add
add
add
add
add
add
inc
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
xor
add
sub
fiadd
sub
add
add
add
add
or
add
or
add
push
add
adc
or
add
and
add
add
add
sub
adc
push
xor
add
jae
add
or
or
adc
lahf
add
or
jmp
or
lock
sub
adc
add
add
add
and
add
add
add
xor
add
add
add
xchg
add
add
add
xchg
add
add
add
jo
sbb
jle
add
add
or
xchg
add
push
or
sub
add
or
fild
add
or
jmp
sub
add
or
sub
push
add
cmp
add
push
cmp
add
sub
jle
add
add
imul
sub
add
or
sub
xor
add
sub
xchg
add
pop
pop
pop
or
pop
sub
jle
add
add
push
sub
push
sub
div
rcr
pop
(bad)
(bad)
call
or
fs
(bad)
jmp
lds
add
cmp
(bad)
inc
cmp
rol
add
cmp
mov
(bad)
dec
cmp
cmp
add
adc
add
add
add
inc
add
add
add
sbb
add
mov
add
adc
and
add
pavgb
mov
add
sub
push
sub
pop
add
add
push
sub
sub
dec
call
add
or
add
or
add
or
enter
xor
sbb
push
sbb
push
fimul
push
dec
pop
pop
push
push
dec
pop
mov
sub
imul
push
push
fidiv
jae
add
or
stos
outs
cld
add
or
mov
cmp
cmp
sub
(bad)
dec
sahf
or
call
pop
pop
push
fiadd
push
sbb
sub
cmp
(bad)
inc
add
add
add
add
(bad)
jg
add
add
add
push
add
adc
dec
adc
xchg
add
lea
add
or
sbb
add
add
and
add
jle
add
add
cmp
add
add
add
add
pop
jle
add
add
adc
add
adc
cmp
add
add
cmp
add
sub
cmp
add
add
push
cmp
add
add
adc
add
cmp
add
jle
add
add
and
or
add
pop
sub
cmp
sbb
jle
add
or
or
inc
pop
sub
pop
push
bound
add
add
and
pop
push
cmp
(bad)
dec
sub
or
sub
sub
pop
pop
sbb
mov
add
and
pop
adc
jle
add
add
and
push
bound
sub
pop
jle
add
add
and
pop
or
push
add
or
add
add
pop
outs
bound
add
sub
add
push
add
or
add
adc
imul
std
add
or
add
add
adc
mov
add
adc
or
add
fiadd
adc
es
push
fiadd
adc
sub
cmp
(bad)
(bad)
call
add
fdivrp
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
out
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
out
(bad)
inc
sbb
add
add
add
adc
add
add
add
add
add
add
add
add
sbb
add
push
add
add
lea
add
mov
add
xchg
add
jo
mov
add
or
sub
add
or
aam
mov
add
lea
add
pop
add
sub
pop
or
add
add
jle
add
add
xchg
add
or
add
add
mov
add
cmp
xchg
add
jo
mov
add
cmp
aaa
outs
add
add
or
sub
or
sub
add
add
outs
retf
or
or
cmp
add
or
pop
outs
iret
add
or
adc
sub
pop
sub
adc
add
add
fcom
cmp
(bad)
jmp
sub
add
or
addr16
(bad)
push
add
or
push
(bad)
jmp
add
add
cmp
(bad)
jmp
enter
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
add
or
ins
(bad)
(bad)
dec
cmp
inc
add
adc
add
add
cmp
add
push
add
fild
add
sub
add
fild
add
sub
xor
add
add
sub
cmp
add
cmp
add
cmp
add
cmp
add
jno
add
cmp
add
cmp
add
adc
add
sub
push
adc
add
add
sub
sub
push
or
sub
sub
or
sub
sub
sub
or
pop
mov
out
sub
cmp
add
add
cmp
add
add
cmp
cmp
cmp
add
add
cmp
add
add
cmp
cmp
cmp
call
xor
add
add
xchg
add
adc
push
cmp
add
push
sub
or
sbb
sbb
sbb
sub
sub
add
add
or
sbb
fisubr
add
fiadd
sub
add
loope
sub
outs
push
add
or
fild
sub
add
fistp
or
sub
push
sub
add
or
pop
sub
add
or
mov
cmp
add
adc
add
add
add
add
add
xor
add
add
xchg
add
adc
push
cmp
add
push
sub
or
sbb
sbb
sbb
sub
sub
add
add
or
sbb
fisubr
add
fiadd
sub
add
loope
sub
outs
push
add
or
fild
sub
add
fistp
or
sub
push
sub
add
or
pop
sub
add
or
mov
cmp
add
adc
add
add
add
add
add
xor
add
dec
loopne
sbb
add
cmp
add
add
push
add
add
cmp
sbb
add
sbb
sbb
cmp
push
add
add
adc
sbb
push
add
add
cmp
add
sub
jae
add
push
or
add
adc
or
add
push
push
push
dec
and
add
sub
add
push
pop
sub
or
add
push
push
or
add
push
push
push
push
pop
or
add
push
push
push
dec
sbb
jle
add
push
sub
add
push
push
pop
sub
dec
pop
adc
or
sub
dec
push
or
add
jo
or
add
jp
outs
pop
add
push
or
add
push
sbb
or
add
push
es
pop
or
or
add
push
push
push
pop
adc
outs
pop
add
push
push
push
pop
adc
or
add
push
push
push
pop
adc
push
xor
push
pop
adc
adc
add
adc
push
pop
adc
outs
retf
or
push
pop
adc
dec
push
xor
push
pop
adc
dec
lea
add
adc
or
push
push
push
pop
adc
dec
outs
retf
or
or
add
or
outs
or
add
pop
push
sub
add
add
pop
or
pop
push
adc
mov
retf
or
adc
jae
add
push
adc
push
pop
or
dec
lea
add
adc
or
add
adc
imul
adc
pop
cmp
pop
sbb
dec
pop
sbb
push
push
dec
push
pop
sbb
pop
sbb
push
push
dec
and
jge
inc
push
add
add
pop
sbb
pop
inc
mov
add
push
pop
sbb
or
add
push
push
push
pop
sbb
dec
lea
add
adc
pop
and
push
sub
pop
and
or
add
push
push
push
pop
sub
outs
pop
add
push
push
push
pop
and
dec
lea
add
adc
or
or
adc
mov
retf
or
adc
jae
add
push
adc
adc
adc
pop
and
push
pop
sub
outs
inc
add
push
es
pop
and
pop
and
push
pop
sub
pop
push
push
pop
and
push
pop
sbb
dec
xor
dec
sbb
pop
push
lea
add
and
add
in
add
or
or
lea
add
and
add
in
add
or
or
or
or
sub
add
push
adc
add
or
add
adc
adc
sub
add
adc
or
or
outs
add
add
fadd
pop
sbb
sbb
popw
adc
and
add
in
add
or
nop
lea
add
and
add
in
add
or
adc
movups
pop
sub
add
push
adc
adc
add
add
or
add
adc
adc
sub
add
adc
pop
adc
sub
adc
outs
add
add
fdiv
add
jo
or
add
jp
outs
iret
add
or
cmp
cld
(bad)
jmp
or
add
cmp
cld
(bad)
dec
cmp
cld
(bad)
jmp
enter
cmp
cld
(bad)
dec
fdivrp
(bad)
inc
cmp
cld
(bad)
dec
cmp
cld
(bad)
dec
cmp
cld
(bad)
inc
cmp
cld
(bad)
inc
sbb
add
add
or
add
add
add
add
add
or
add
add
add
adc
jae
add
push
jge
add
add
jae
add
push
jge
add
add
sbb
add
add
jnp
add
add
push
add
add
sub
add
adc
add
xor
add
cwde
add
adc
or
pavgb
out
add
add
lock
add
add
add
in
add
add
icebp
add
add
ret
add
add
in
add
add
pop
cmp
add
add
add
add
cmp
add
add
pop
dec
sbb
add
sub
add
xchg
add
add
add
add
add
add
lea
add
cmp
add
add
add
add
lds
add
outs
dec
add
push
pop
adc
and
add
das
add
sub
jnp
add
add
jnp
add
add
push
add
push
and
and
(bad)
(bad)
call
mov
add
das
sbb
push
sub
adc
popf
add
add
adc
pushf
add
add
sbb
add
add
sub
jle
add
add
and
add
add
jge
add
add
jle
add
add
and
add
add
jge
add
add
jnp
add
add
xor
jge
add
add
sub
push
add
add
add
jnp
add
add
inc
add
push
push
push
dec
push
das
add
sub
jnp
add
add
jnp
add
add
inc
add
push
add
add
dec
pop
jge
add
add
pop
or
add
add
jnp
add
add
jnp
add
add
push
add
push
or
push
das
add
sub
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
jnp
add
add
xor
pop
or
add
add
sbb
jnp
add
add
jnp
add
add
inc
add
push
push
push
sbb
push
das
add
sub
jnp
add
add
jnp
add
add
inc
add
push
add
add
sbb
pop
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
dec
add
push
pop
add
add
add
or
sbb
add
and
add
add
(bad)
(bad)
call
call
sub
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
adc
add
pop
add
add
adc
pavgb
push
add
add
pop
add
add
or
cmp
xchg
add
add
cmp
add
add
or
dec
push
cmp
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
cmp
add
add
add
add
push
cmp
add
add
or
xchg
add
add
sub
rol
add
ret
add
add
add
cmp
push
dec
push
das
add
sub
jnp
add
add
outs
inc
add
push
push
dec
pop
pop
sub
add
jge
add
add
pop
adc
dec
pop
arpl
adc
inc
add
add
add
add
push
add
add
inc
add
add
add
inc
add
push
add
jge
add
add
xor
jle
add
add
pushf
add
add
jle
add
add
popf
add
add
sbb
add
adc
jae
add
push
jge
add
add
sbb
xchg
add
add
sub
add
add
add
adc
add
push
and
add
push
das
add
sub
jnp
add
add
adc
add
push
add
jge
add
add
sbb
jnp
add
add
adc
add
push
push
push
sbb
push
das
add
sub
jnp
add
add
adc
add
push
add
jge
add
add
push
pop
add
add
add
jnp
add
add
jnp
add
add
dec
add
push
push
add
add
push
pop
dec
pop
jge
add
add
jnp
add
add
cmp
(bad)
jmp
xchg
add
add
sub
jnp
add
add
inc
add
push
push
inc
sub
jnp
add
add
jnp
add
add
pop
add
push
sub
add
add
add
pop
add
push
jge
add
add
add
add
add
pop
add
push
jge
add
add
sbb
add
sub
add
push
push
sub
push
and
jmp
or
in
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
inc
add
xor
add
add
push
dec
loopne
ja
js
add
push
push
cmp
add
jnp
add
add
or
cmp
add
pop
cmp
add
jnp
add
add
push
outs
sub
jbe
add
sbb
pop
adc
push
push
dec
push
sbb
pop
push
add
pop
adc
add
sub
sub
add
push
sub
add
add
push
add
push
push
xor
add
or
(bad)
(bad)
inc
dec
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
(bad)
jmp
add
push
cmp
add
add
jl
add
add
add
pop
sbb
add
add
push
or
inc
pop
sbb
add
add
inc
adc
out
push
lea
add
add
xor
pop
push
and
add
add
add
and
push
sub
sub
in
add
or
test
in
add
or
mov
or
enter
add
sub
adc
pop
add
add
add
enter
jnp
add
add
les
add
cmp
add
add
rol
add
add
add
mov
mov
or
cmp
sub
adc
add
add
mov
sahf
add
add
and
add
cmp
pop
jge
add
add
pop
add
xchg
and
add
add
mov
add
jnp
add
add
and
add
cmp
add
pop
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
mov
and
add
adc
mov
jnp
add
add
pop
add
sub
bound
sub
repnz
push
imul
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
dec
cmp
(bad)
inc
mov
add
add
pop
pop
pop
pop
fs
add
add
sub
mov
or
add
sub
sub
sub
add
lock
sub
jnp
add
add
add
idiv
add
add
and
add
add
sub
repnz
add
sub
sub
sub
add
fld
sub
mov
and
add
and
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
add
fld
add
pop
sub
jnp
add
add
or
add
add
add
add
out
add
repnz
add
add
dec
loopne
or
add
cmp
add
add
push
sub
push
add
add
add
add
add
mov
pushf
push
cmp
jnp
add
add
fs
add
add
and
add
pop
jge
add
add
fld
add
pop
pop
cmp
add
add
fiadd
add
cmp
add
add
pop
push
add
add
add
and
add
sub
push
dec
sub
sbb
jnp
add
add
jnp
add
add
push
add
xor
push
sbb
adc
add
add
add
jnp
add
add
add
sub
sub
add
add
pop
jge
add
add
jnp
add
add
sub
add
add
add
pop
and
call
cs
sub
sahf
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
mov
push
jge
add
add
dec
add
repnz
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
add
idiv
(bad)
inc
cmp
(bad)
(bad)
inc
call
add
sbb
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
add
push
add
adc
adc
push
add
add
add
add
adc
sub
cmp
lahf
add
add
xchg
add
add
add
add
push
cmp
cmp
nop
add
add
nop
add
add
cmp
adc
pop
add
cmp
push
push
add
push
add
or
pop
pop
sub
add
add
add
pop
pop
adc
xchg
and
add
add
jnp
add
add
pop
pop
bound
mov
and
add
pop
jge
add
add
add
add
add
add
lahf
add
add
push
jge
add
add
add
gs
(bad)
inc
cmp
(bad)
push
add
or
imul
inc
imul
inc
dec
cmp
(bad)
inc
push
(bad)
inc
imul
inc
cmp
(bad)
inc
adc
add
jbe
add
call
movs
add
add
sub
pop
jge
add
add
sub
add
push
sub
sub
push
sub
sub
mov
and
add
sub
pop
pop
jge
add
add
xor
xor
pushf
push
sub
add
add
(bad)
jg
add
movs
add
add
or
stos
push
sub
or
mov
sub
pop
sub
add
int3
add
adc
push
add
add
sbb
add
adc
sbb
sub
mov
and
add
sub
pop
jge
add
add
inc
sub
mov
and
xchg
pushf
add
add
(bad)
jg
add
movs
add
add
sub
sub
and
jg
add
and
sti
sub
push
xor
or
mov
sub
sub
add
aad
add
fcom
add
loope
xor
add
add
add
and
add
mov
and
add
add
add
mov
add
and
add
xor
cmp
cmp
movs
add
add
scas
add
add
(bad)
jg
add
test
add
add
add
movs
add
add
pop
xor
jnp
add
add
das
pop
add
dec
add
add
add
add
add
add
jnp
add
add
sub
and
add
pop
jge
add
add
add
add
add
and
add
or
add
add
add
add
add
and
pushf
add
push
xor
sub
push
add
dec
add
push
sub
cmp
(bad)
dec
inc
(bad)
(bad)
dec
cmp
(bad)
push
add
or
inc
(bad)
(bad)
inc
cmp
(bad)
inc
dec
(bad)
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
dec
cmp
(bad)
call
xor
add
add
add
add
push
dec
loopne
ret
add
ret
add
add
add
or
mov
movs
add
add
cmp
mov
mov
ret
add
mov
add
add
pop
and
add
add
add
add
push
add
sbb
xor
push
add
jnp
add
add
jnp
add
add
sbb
outs
dec
add
push
push
push
dec
push
sbb
xor
push
push
dec
add
jnp
add
add
add
sbb
pop
outs
dec
add
push
pop
push
sub
mov
jnp
add
add
outs
dec
add
push
push
add
jnp
add
add
dec
pop
and
jg
add
movs
add
add
and
add
dec
pop
jge
add
add
dec
sub
cmp
(bad)
(bad)
inc
aaa
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
call
add
xor
(bad)
inc
cmp
(bad)
(bad)
inc
add
add
jnp
add
add
sub
sub
add
sub
jnp
add
add
add
not
xor
add
add
add
add
pop
or
pavgb
aad
add
cmp
add
add
xlat
add
add
add
add
cmp
add
add
rol
add
jnp
add
add
cmp
sub
xor
cmp
add
add
add
add
rol
add
pop
cmp
add
add
rol
add
add
add
jnp
add
add
add
add
pop
push
push
sbb
push
push
sub
push
push
pop
add
push
push
pop
dec
push
and
add
add
add
add
pop
dec
pop
add
push
pop
dec
sub
push
push
pop
dec
pop
adc
push
dec
adc
add
add
add
dec
add
sub
and
add
sbb
pop
jge
add
add
jnp
add
add
das
push
jae
add
or
sbb
sub
cmp
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
add
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
and
add
lea
add
jge
add
add
sub
adc
add
test
add
and
add
add
cmp
cmp
cmp
adc
cmp
and
add
add
pushf
cmp
nop
add
add
in
sub
sub
sub
add
pop
and
add
add
or
and
add
add
loopne
or
xchg
add
pop
and
pushf
pop
and
add
add
sub
push
pop
and
pushf
pop
and
add
add
lock
jae
add
push
and
lea
add
or
or
or
pop
and
pushf
pop
pop
and
repz
sub
push
jae
add
push
sub
cmp
(bad)
dec
cmp
(bad)
inc
cmp
dec
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
sub
add
push
add
push
sub
adc
pop
add
add
popf
add
adc
inc
dec
loopne
adc
add
pop
adc
cmp
add
pop
adc
cmp
add
add
pop
add
add
push
sub
add
add
sbb
add
add
cmp
add
dec
xchg
push
cmp
add
add
pop
dec
push
xor
cmp
add
add
sbb
(bad)
dec
add
add
add
pop
or
pop
pop
push
push
dec
add
push
pop
push
push
push
pop
or
and
add
add
adc
push
sbb
or
pop
adc
push
push
pop
dec
sahf
push
push
pop
push
push
pop
dec
pop
push
pop
adc
xchg
pop
adc
pop
adc
pop
pop
pop
pop
bound
push
pop
adc
pop
or
inc
push
pop
adc
or
pop
adc
xchg
and
push
push
pop
sbb
push
pop
dec
and
push
push
pop
or
push
pop
or
dec
push
pop
sbb
push
pop
adc
dec
pop
pop
adc
pop
adc
pop
pop
pop
pop
arpl
push
pop
adc
pop
adc
pop
pop
push
push
pop
adc
pop
(bad)
jne
(bad)
inc
push
pop
or
dec
lea
add
jge
add
add
pop
sbb
and
add
add
and
andps
cmps
add
add
pop
and
push
push
pop
dec
and
push
push
push
pop
push
push
pop
dec
pop
push
pop
and
xchg
pop
adc
pop
and
pop
pop
pop
pop
bound
push
pop
sub
push
pop
dec
and
push
push
pop
sub
push
pop
sub
push
sub
jnp
add
add
pop
sub
dec
sub
push
push
pop
sbb
dec
sbb
pop
and
pusha
push
pop
push
pop
sbb
dec
pop
push
pop
and
pop
or
pop
pop
bound
push
pop
sub
push
pop
sub
dec
and
push
push
pop
sub
dec
push
pop
and
dec
xor
pop
and
pop
pop
push
push
pop
and
pop
or
(bad)
(bad)
inc
pop
xor
push
cmp
add
push
pop
xor
add
pop
xor
xchg
push
push
pop
xor
dec
cmp
add
add
push
pop
or
pop
xor
dec
xchg
push
push
pop
cmp
push
pop
dec
sub
push
push
push
pop
xor
dec
pop
or
cmp
add
pop
cmp
push
pop
xor
sbb
pop
xor
dec
pusha
push
pop
push
pop
cmp
pop
push
pop
xor
dec
pop
pop
pop
bound
push
pop
cmp
and
add
add
lds
jp
pop
cmp
add
add
add
pop
cmp
and
add
add
push
push
pop
inc
pop
pop
push
pop
cmp
dec
pop
maxps
pop
pop
bound
cmp
push
pop
cmp
dec
sbb
push
add
add
add
pop
cmp
dec
push
pop
cmp
pop
or
push
pop
xor
sbb
pop
xor
dec
pusha
push
pop
push
pop
cmp
pop
push
pop
xor
dec
pop
pop
pop
bound
push
pop
cmp
push
pop
inc
pop
dec
xor
dec
push
push
pop
dec
pop
pop
adc
pop
xor
dec
pop
pop
pop
pop
bound
push
pop
xor
pop
xor
pop
pop
push
push
pop
xor
add
(bad)
jmp
or
call
cmp
cld
(bad)
dec
hlt
cld
(bad)
inc
cmp
cld
(bad)
inc
cmp
cld
(bad)
inc
cmp
cld
(bad)
inc
cmp
cld
(bad)
inc
cmp
cld
(bad)
inc
cmp
cld
(bad)
inc
add
xor
push
add
add
cmp
add
add
adc
pavgb
or
add
cmp
add
add
or
add
push
and
add
aas
mov
add
cmp
add
add
add
add
sti
add
add
add
push
xor
sub
add
cmp
add
add
maxps
hlt
add
add
push
sub
push
or
arpl
push
sbb
pop
maxps
sbb
outs
inc
add
push
and
add
add
add
dec
pop
pop
or
xchg
or
or
maxps
add
push
or
arpl
push
push
pop
add
add
push
push
add
push
pop
dec
outs
inc
add
push
or
jnp
add
add
dec
pop
pop
or
xchg
or
sub
or
maxps
push
pop
dec
xor
add
pop
maxps
add
push
push
sub
sub
pop
add
add
push
push
add
pop
or
dec
outs
inc
add
push
or
jnp
add
add
xchg
or
push
xor
or
maxps
pop
or
dec
xor
add
pop
maxps
add
push
or
arpl
adc
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
add
(bad)
inc
cmp
cmp
(bad)
jmp
add
push
cmp
(bad)
(bad)
call
add
adc
adc
add
add
or
pavgb
cmps
add
add
cmps
add
add
pop
cmp
scas
add
add
cmp
pop
dec
inc
push
add
add
add
add
add
test
add
sub
add
add
add
add
(bad)
cmp
add
add
add
add
add
add
add
das
add
sub
and
add
add
add
pop
jge
add
add
cmp
pusha
add
add
outs
inc
add
push
add
jge
add
add
add
outs
inc
add
push
jge
add
add
jnp
add
add
das
add
sub
and
add
pop
jge
add
add
sbb
add
push
add
jnp
add
add
jnp
add
add
jge
add
add
add
add
add
imul
add
add
sbb
add
add
add
outs
inc
add
push
jge
add
add
jnp
add
add
das
add
sub
and
add
pop
jge
add
add
sbb
add
push
add
adc
jge
add
add
push
jge
add
add
sbb
add
add
cmp
add
outs
inc
add
push
push
push
dec
push
das
add
sub
sbb
add
push
add
add
add
mov
add
jnp
add
add
push
dec
rcr
add
pop
jge
add
add
jnp
add
add
jnp
add
add
cmp
add
add
mov
add
add
add
push
add
push
jge
add
add
adc
stos
add
add
sub
add
jge
add
add
sbb
add
add
cmp
jnp
add
add
and
add
or
add
add
add
shl
add
add
add
add
add
add
jnp
add
add
or
cmp
sub
jnp
add
add
outs
push
add
push
and
add
add
sub
pop
lock
sub
pop
push
das
add
sub
adc
pop
add
jge
add
add
pop
pop
adc
mov
add
sbb
add
add
sbb
stos
add
add
jnp
add
add
push
add
sbb
outs
inc
add
push
or
push
das
add
sub
push
sbb
outs
inc
add
push
or
add
add
jnp
add
add
pop
or
cmp
std
(bad)
jmp
and
jnp
add
add
and
add
adc
add
add
add
add
or
xor
add
add
add
jnp
add
add
add
sub
sbb
add
add
pop
std
(bad)
dec
cmp
inc
cmp
(bad)
inc
cmp
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
add
push
cmp
(bad)
inc
cmp
(bad)
inc
cmp
add
xor
add
and
add
imul
sub
add
sub
push
sub
jnp
add
add
adc
sbb
sbb
add
fmul
sub
add
loopne
sub
add
in
or
in
sub
jae
add
push
sub
add
xor
add
sub
add
add
imul
sub
jnp
add
add
pop
jnp
add
add
sbb
sub
jnp
add
add
pop
sub
sbb
or
fild
sub
add
fiadd
sub
add
loop
or
loop
sub
jae
add
push
sub
add
add
pop
add
add
add
add
lea
add
add
cmp
push
sub
pop
lea
add
add
daa
sub
in
adc
add
add
add
adc
mov
add
sub
add
or
shr
add
or
shr
in
add
or
in
xor
dec
add
add
add
add
add
add
xor
pop
or
jle
add
add
sub
arpl
maxps
mov
sbb
pop
xchg
sbb
jle
add
add
adc
or
xchg
pusha
push
add
rol
sub
add
in
adc
add
mov
add
sbb
add
pop
adc
and
add
pop
add
add
pop
adc
and
add
push
add
add
and
add
add
cmp
add
add
cmp
pop
push
cmp
add
add
sub
add
sub
add
pop
xor
sub
add
pop
push
bound
add
add
mov
and
add
add
pushf
cmp
nop
add
add
(bad)
sub
jle
add
add
adc
add
and
add
add
pop
sbb
add
popf
jle
add
add
and
or
add
rcl
cmp
(bad)
(bad)
jmp
sub
add
add
and
(bad)
(bad)
inc
pop
pop
or
pop
add
push
popf
sbb
(bad)
jle
add
add
and
pushf
push
and
add
add
shr
push
jle
add
add
pop
test
pop
push
bound
pop
add
push
popf
jle
add
add
and
pushf
push
and
add
add
ficomp
push
lea
add
cmp
lea
add
cmp
(bad)
(bad)
call
or
sub
add
add
push
pop
or
pop
add
push
popf
sbb
mov
mov
sbb
(bad)
call
pop
or
pop
push
xor
sub
in
add
or
cwde
(bad)
(bad)
jmp
in
add
or
movs
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
pop
add
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
sub
sub
push
bound
add
rep
adc
add
sub
add
in
outs
adc
add
sub
add
add
sub
sub
pop
adc
sub
sub
sub
add
sub
add
in
sub
add
sub
add
add
push
sub
add
or
add
push
add
fild
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
add
pop
nop
add
add
xchg
add
add
add
ins
push
xor
inc
inc
sbb
push
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
cmovb
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
push
add
and
add
add
and
add
push
je
imul
add
add
and
add
jp
add
add
add
inc
push
dec
inc
add
add
jp
add
sbb
add
inc
ins
outs
bound
add
add
add
add
add
push
mov
add
add
add
add
add
mov
add
leave
add
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
fld
push
add
add
add
add
push
add
dec
add
add
dec
add
add
add
push
add
add
add
add
dec
add
add
js
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
out
add
cli
add
sbb
into
add
dec
add
add
push
push
push
add
fld
push
add
fld
push
add
add
mov
push
add
dec
add
add
add
add
add
mov
add
or
add
add
add
or
add
into
add
js
push
add
dec
add
add
or
or
add
or
or
add
or
or
add
or
jnp
dec
add
add
or
int
dec
add
add
push
dec
push
push
add
nop
push
add
bswap
add
ins
movntq
jg
add
push
add
add
add
bswap
add
pop
clts
add
adc
add
into
add
into
add
(bad)
push
add
add
pop
clts
add
add
add
adc
adc
sub
add
push
add
add
add
in
dec
add
add
adc
push
add
adc
push
add
adc
push
add
adc
inc
add
add
push
add
xchg
adc
add
adc
push
add
adc
push
add
adc
push
add
add
adc
adc
add
adc
push
add
push
adc
add
add
add
add
adc
adc
add
adc
push
add
adc
push
add
adc
adc
add
adc
add
adc
add
add
add
add
add
inc
adc
bound
jo
dec
push
push
add
add
add
lods
adc
(bad)
adc
(bad)
adc
sbb
js
push
add
pop
add
add
dec
add
add
add
push
dec
add
add
push
fld
push
add
push
fld
push
add
push
fld
push
add
pop
dec
add
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
lds
js
push
add
pop
dec
add
add
pop
pop
add
add
sbb
or
push
sbb
sbb
push
add
sbb
sbb
add
sbb
sbb
add
dec
add
add
add
sbb
push
add
sbb
sbb
add
fld
push
add
sbb
sbb
sbb
sbb
sbb
add
into
add
into
add
dec
add
add
into
add
into
add
into
add
into
add
into
add
into
add
ins
clts
add
dec
add
add
dec
add
add
js
push
add
js
adc
(bad)
sbb
fistp
repnz
sbb
or
xchg
add
push
add
push
add
or
push
add
or
push
add
lods
push
dec
add
add
add
pop
(bad)
push
add
pop
add
add
add
mov
sub
add
push
add
retf
add
add
pop
pop
add
add
ins
clts
add
dec
add
add
add
add
and
push
add
and
push
add
dec
add
add
add
and
and
add
add
and
and
add
and
and
add
pop
clts
add
add
add
add
and
add
into
add
dec
push
push
add
add
add
and
add
add
xor
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
adc
add
adc
adc
push
add
add
add
add
adc
adc
add
adc
outs
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
xor
push
add
add
add
add
add
add
add
pop
add
add
dec
add
add
add
add
dec
add
add
or
jno
push
add
add
add
add
pop
add
add
add
nop
add
add
pop
add
add
add
add
data16
add
add
add
add
add
pusha
add
add
adc
xchg
add
xor
test
je
add
jg
or
add
add
add
add
add
add
mov
mov
add
adc
iret
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
add
jle
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fild
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
nop
add
add
add
adc
ds
add
add
add
add
adc
xchg
add
add
add
add
add
add
add
add
add
add
add
adc
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
fld
or
add
add
add
fld
add
add
nop
add
add
add
add
add
add
fld
add
adc
rol
push
add
add
fld
add
add
rol
mov
or
pop
add
add
add
add
add
out
add
add
add
add
add
push
add
add
ins
add
add
add
add
mov
or
outs
add
add
add
add
add
add
add
adc
add
adc
pop
add
add
add
adc
add
adc
xchg
add
add
add
push
add
add
add
add
sbb
or
add
add
add
add
add
add
adc
add
and
add
add
add
test
and
add
adc
nop
add
and
add
add
add
push
add
add
add
add
add
adc
pusha
add
add
add
add
add
add
cmp
test
daa
add
add
or
test
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
mov
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
adc
add
mov
add
xor
retf
add
add
add
add
add
adc
add
xchg
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
mov
aaa
add
add
add
add
push
mov
dec
add
add
push
sbb
add
mov
dec
add
nop
add
adc
add
add
add
adc
pop
add
xchg
add
add
add
add
add
pop
add
add
add
add
add
adc
pop
add
adc
add
add
add
add
add
add
add
add
aaa
add
add
cmp
adc
xchg
add
adc
xchg
add
adc
mov
aaa
add
add
add
add
adc
nop
add
add
add
add
xchg
add
add
add
add
imul
aaa
add
add
add
imul
aaa
add
add
add
add
add
imul
aaa
add
add
leave
add
adc
push
add
add
add
cmp
add
pusha
add
add
add
aaa
add
add
cmp
add
leave
add
add
add
add
add
add
add
push
mov
dec
add
iret
add
adc
ins
add
fiadd
ins
add
out
add
xor
ins
add
sti
add
add
ins
add
or
add
(bad)
ins
add
add
add
xor
add
add
add
add
add
push
push
mov
dec
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
push
add
add
add
aaa
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
pop
add
add
rol
aaa
add
add
add
add
add
add
add
xor
pop
add
xor
pop
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
push
mov
dec
add
add
add
add
add
add
add
add
add
add
inc
add
add
imul
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
scas
add
add
add
mov
add
pop
add
mov
add
add
add
add
add
ds
add
add
push
mov
dec
add
lds
add
retf
add
add
aam
rol
sbb
rol
adc
add
jmp
xor
rol
cmp
rol
add
rol
or
rol
adc
rol
and
rol
sub
add
push
and
loop
push
xor
cmp
loop
add
ds
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
dec
add
inc
add
dec
add
push
add
bound
outs
add
ja
scas
add
jg
scas
add
test
mov
xchg
add
mov
add
xchg
add
sahf
add
or
cmps
add
mov
dec
add
push
add
add
hlt
add
add
inc
add
mov
dec
add
es
cli
add
add
push
add
add
hlt
add
add
aam
adc
push
add
adc
push
push
mov
dec
add
inc
add
lods
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
dec
add
add
lods
add
add
add
add
add
add
add
push
mov
dec
add
lds
add
aam
xor
push
sbb
xor
push
adc
add
jmp
xor
xor
push
cmp
xor
push
and
xor
and
add
add
add
add
add
and
pop
add
and
mov
imul
inc
add
add
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
xchg
add
add
add
add
add
push
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
inc
add
add
add
add
add
add
add
adc
add
add
add
xchg
add
add
rol
inc
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
xor
pop
add
xor
mov
dec
add
add
add
add
push
add
inc
add
add
add
push
add
dec
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
aaa
add
add
add
dec
add
add
add
add
add
add
add
push
add
add
push
add
dec
add
add
add
push
add
inc
add
add
add
push
mov
dec
add
add
push
sbb
add
push
mov
dec
add
add
push
sbb
add
mov
push
add
nop
add
push
adc
xchg
add
xor
add
add
add
aaa
add
add
add
add
add
add
add
add
pop
add
add
rol
aaa
add
add
add
add
xor
add
add
add
aaa
add
add
add
add
add
add
pop
add
add
add
add
add
xchg
add
add
add
adc
pop
add
adc
add
adc
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
xchg
add
add
add
xchg
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
push
add
add
add
aaa
add
add
add
add
add
add
add
add
add
push
cmp
aaa
add
add
adc
ds
add
add
add
add
add
add
push
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
xor
add
xor
ds
add
add
hlt
add
add
add
add
add
add
pop
add
add
mov
dec
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
mov
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
hlt
add
add
add
add
add
call
add
add
add
add
add
pop
add
add
mov
dec
add
add
add
add
add
add
add
add
add
xor
mov
hlt
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
adc
add
add
add
and
adc
add
add
add
add
add
sub
adc
mov
push
add
add
add
adc
xor
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
cmp
and
add
add
add
mov
add
add
xchg
sbb
push
das
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
dec
add
add
and
add
add
add
push
cmp
and
add
add
sbb
push
das
add
add
and
add
add
add
add
add
add
add
add
add
add
add
sbb
push
das
add
add
sbb
push
xor
add
mov
add
add
mov
push
cmp
add
add
adc
xor
das
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
in
sub
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
loopne
add
add
xchg
add
add
add
push
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
xchg
add
add
aaa
add
add
xchg
add
add
add
xchg
add
add
add
test
add
add
xchg
add
push
add
mov
add
add
xchg
add
add
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
xchg
cmp
jns
add
and
add
add
xchg
sbb
push
das
add
add
add
add
xchg
sbb
push
das
add
add
add
add
xchg
add
add
add
push
inc
add
add
xchg
add
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
add
dec
add
add
xchg
add
mov
dec
add
add
xchg
add
add
add
add
xchg
add
add
dec
add
add
xchg
add
mov
dec
add
add
xchg
add
add
or
cld
dec
add
add
xchg
add
add
add
add
add
add
add
add
sbb
push
das
add
add
dec
add
add
xchg
cmp
ret
add
dec
add
add
xchg
add
dec
add
add
test
add
add
add
add
add
xchg
pop
add
dec
add
add
or
or
jo
add
add
xchg
mov
cmp
dec
add
add
or
or
nop
dec
add
add
xchg
nop
add
dec
add
add
or
or
mov
add
add
xchg
ds
add
add
add
add
sbb
push
das
add
add
add
add
xchg
cmp
into
add
add
xchg
add
add
add
add
dec
add
add
xchg
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
push
das
add
add
push
add
add
xchg
add
add
add
add
push
add
add
xchg
add
out
or
sub
add
add
add
add
push
add
add
xchg
sbb
push
das
add
add
push
add
add
xchg
cmp
jns
or
cmp
add
add
xchg
add
push
add
add
xchg
pop
add
push
add
add
xchg
ds
add
add
push
add
add
xchg
add
or
xchg
push
add
add
xchg
pop
add
or
test
add
add
add
add
test
mov
jns
or
mov
add
add
or
pushf
pop
add
add
xchg
sbb
push
das
add
add
add
add
xchg
add
add
add
add
pop
add
add
xchg
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
sbb
push
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
das
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
xchg
xchg
add
outs
add
add
adc
xor
das
add
add
add
add
mov
push
cmp
push
add
add
add
push
add
add
add
add
add
sldt
xchg
lds
add
add
add
add
add
add
adc
add
add
add
les
adc
fs
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
jno
add
add
add
push
jns
adc
in
add
add
xchg
jmp
add
add
add
add
push
jns
adc
dec
jb
add
add
adc
push
jb
add
add
sbb
push
das
add
add
add
add
add
add
add
add
xchg
add
add
adc
loopne
add
add
xchg
cmp
jns
adc
call
add
sbb
push
das
add
add
xchg
cmc
push
cmp
jne
add
add
add
add
jne
add
add
add
pop
pop
add
add
add
add
xchg
add
add
add
add
add
add
fdiv
add
add
add
pop
jb
push
add
jne
add
add
add
push
cmp
jne
add
add
add
add
add
add
xchg
or
pop
push
sbb
sub
add
add
xchg
cmp
jns
sbb
xor
add
add
xchg
cmp
jbe
sbb
inc
jbe
add
add
add
add
add
add
add
pop
jbe
add
add
add
fs
add
add
add
aam
add
add
mov
push
cmp
ja
add
add
sbb
push
das
add
add
ja
add
add
add
add
add
add
xchg
sbb
push
das
add
add
js
add
add
add
add
js
add
add
add
add
add
add
xchg
fwait
pop
call
add
add
add
add
xchg
sbb
push
das
add
add
xchg
add
push
movs
add
add
jp
add
add
add
pop
jp
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
jp
add
add
add
add
jp
add
add
add
add
jp
add
add
add
add
add
add
xchg
add
push
(bad)
add
add
add
add
xchg
add
push
fild
sub
inc
jnp
add
add
add
pop
jnp
add
add
add
add
add
add
add
xchg
add
push
out
add
add
xchg
add
push
hlt
add
add
xchg
add
push
stc
add
add
jnp
add
add
add
add
add
add
xchg
add
push
mov
jl
add
add
add
add
add
add
xchg
add
push
or
ss
jge
add
add
add
add
add
add
xchg
add
in
jle
add
add
add
add
jg
add
add
add
add
jg
add
add
add
add
add
add
xchg
add
pop
ss
add
add
add
add
add
add
add
mov
pop
dec
add
add
add
add
mov
or
add
add
add
add
add
dec
add
add
dec
add
add
sbb
push
das
add
les
xchg
cmp
jns
dec
add
add
add
xchg
xor
arpl
add
add
add
xchg
cmp
arpl
add
add
add
add
add
dec
add
xchg
add
jo
dec
add
add
add
les
mov
jg
dec
add
add
add
loope
add
add
add
loope
ds
add
in
add
add
test
cmp
jns
push
add
add
add
adc
xor
das
add
adc
xchg
cmp
jns
push
add
add
add
xchg
stos
or
add
add
xchg
mov
add
add
add
xchg
cmp
xor
push
add
add
add
xchg
fimul
lea
add
add
add
add
add
add
add
xchg
test
add
ins
add
add
xchg
add
xchg
add
add
add
add
xchg
cmp
pushf
add
add
add
add
add
push
add
test
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
xchg
add
add
add
adc
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
xchg
push
or
add
ins
mov
add
add
add
js
add
add
add
push
add
mov
add
add
add
xor
add
push
add
add
add
add
mov
add
add
add
lock
add
add
add
add
lea
add
add
add
add
add
add
add
push
add
nop
add
add
add
push
add
add
add
add
push
add
add
add
enter
add
add
push
add
xchg
add
add
add
push
add
xchg
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
xchg
add
add
add
push
add
add
add
add
sbb
add
push
add
add
add
add
push
add
cwde
add
add
add
push
add
cdq
add
add
add
push
add
add
add
loope
imul
test
add
push
add
add
add
xor
adc
xor
das
add
dec
call
cmp
jns
push
add
add
add
add
pusha
call
cmp
loope
push
add
add
add
add
je
add
add
xchg
cmp
xor
push
add
add
add
add
xchg
xor
call
call
dec
or
add
add
call
fs
add
add
fwait
add
add
xchg
cmp
jns
pop
add
fwait
add
add
xchg
jae
sti
add
add
add
add
xchg
jae
push
add
add
add
add
add
add
add
pop
add
add
pop
add
sahf
add
add
add
pop
add
lahf
add
add
add
pop
add
add
add
add
add
add
add
pop
add
mov
add
pop
add
mov
add
pop
add
movs
add
add
xchg
cmp
sub
pop
add
add
add
xchg
cmp
dec
add
add
add
popa
add
cmps
add
add
add
popa
add
add
add
add
arpl
inc
test
add
add
add
add
add
add
add
add
add
arpl
push
stos
add
add
add
arpl
sbb
add
add
adc
xor
das
add
cmp
xchg
cmp
jns
arpl
inc
stos
add
add
xchg
add
arpl
in
add
add
adc
xor
das
add
add
or
add
arpl
sub
add
add
xchg
(bad)
or
arpl
aam
add
add
xchg
aad
jnp
arpl
loopne
add
add
xchg
in
add
xchg
repz
add
lods
add
add
xchg
add
jg
add
add
add
xchg
fimul
lea
add
add
add
add
xchg
and
lea
add
lods
add
add
xchg
xor
scas
add
add
lods
add
add
xchg
aas
or
add
loopne
add
add
xchg
dec
or
add
hlt
lods
add
add
xchg
cmp
mov
add
add
add
imul
add
add
imul
add
add
imul
add
xchg
pop
or
imul
add
xchg
adc
jns
imul
add
xchg
popa
or
imul
add
xchg
jb
jns
imul
add
xchg
or
push
add
add
jl
add
add
xchg
lahf
or
add
or
xchg
mov
jns
push
sub
add
push
movs
mov
add
add
add
les
add
push
xor
add
add
add
push
xchg
mov
add
add
add
add
add
add
js
add
add
add
push
les
add
push
hlt
mov
add
add
add
or
add
add
xchg
les
jns
push
and
add
add
xchg
ror
xor
push
cmp
add
add
xchg
out
xor
imul
mov
add
add
add
mov
add
add
add
add
add
xchg
out
movs
add
add
add
xchg
out
test
mov
add
add
add
add
add
xchg
out
mov
jno
sub
xchg
out
or
jb
dec
mov
xchg
out
mov
mov
xchg
out
mov
mov
xchg
out
scas
add
add
add
add
add
add
xchg
out
mov
xchg
out
int3
add
add
add
xchg
out
rol
add
add
xchg
repnz
add
mov
add
add
xchg
add
xor
jnp
or
add
add
loope
mov
jns
jl
and
add
jl
inc
mov
xchg
sbb
push
das
add
mov
xchg
cmp
jns
jl
mov
sbb
push
xor
jl
xchg
mov
xchg
cmp
loope
jge
mov
add
add
add
add
xchg
add
mov
xchg
ds
add
add
add
xchg
ds
add
in
mov
xchg
pop
add
add
clc
mov
xchg
mov
out
add
add
add
add
les
ds
add
add
add
xchg
ds
add
add
add
xchg
cmp
jns
jg
in
mov
adc
xor
das
add
or
xchg
add
jg
sbb
add
add
xchg
cmp
jns
jg
xor
xchg
cmp
jg
jg
inc
mov
xchg
add
mov
xchg
add
jg
enter
add
add
jg
xor
mov
add
mov
xchg
sbb
push
das
add
pusha
mov
xchg
add
add
add
add
add
xchg
add
add
push
jg
xor
add
add
xchg
add
add
push
jg
movs
rol
add
xchg
add
add
rol
add
xchg
add
add
push
jg
adc
add
add
adc
xor
das
add
xor
add
add
xchg
add
add
push
jg
test
add
add
xchg
add
add
push
jg
or
add
add
xchg
add
add
add
adc
xor
das
add
enter
add
xchg
add
add
jg
clc
lds
add
add
add
add
add
add
xchg
add
add
jg
mov
add
push
jg
sub
add
add
xchg
add
add
jg
push
mov
add
add
jg
mov
add
add
xchg
add
add
add
enter
add
push
xchg
aam
add
add
xchg
add
jbe
xchg
ror
add
add
push
xchg
lods
retf
add
add
xchg
add
add
add
add
xchg
add
add
int3
add
add
xchg
add
add
int
add
add
push
xchg
test
add
add
xchg
add
test
xchg
fmul
add
add
xchg
add
add
add
add
xchg
add
add
iret
add
add
xchg
add
add
iret
add
add
xchg
add
add
rol
add
add
push
xchg
test
add
add
xchg
add
add
push
xchg
in
add
add
xchg
add
add
push
xchg
pop
rol
add
add
sbb
push
das
add
add
add
push
xchg
or
add
add
xchg
add
add
push
xchg
inc
rol
add
add
push
xchg
adc
add
add
push
xchg
ins
rol
add
add
sbb
push
das
add
add
add
pop
xchg
rcl
add
add
pop
xchg
adc
add
add
xchg
add
add
pop
xchg
sub
add
add
xchg
add
add
xchg
dec
aam
add
add
sbb
push
das
add
add
add
pop
xchg
xchg
aam
add
add
add
push
cmp
aad
add
add
sbb
push
das
add
add
add
pop
xchg
mov
add
add
xchg
add
add
push
mov
or
add
add
xchg
cmp
jns
mov
add
add
add
and
add
pop
mov
add
add
add
and
add
lea
add
add
add
and
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
and
add
xlat
add
add
xchg
add
add
xlat
add
add
xchg
add
add
fadd
add
add
pop
stos
add
add
add
xchg
add
add
pop
stos
add
xchg
add
add
pop
stos
add
fiadd
add
add
pop
stos
add
fild
add
add
pop
stos
add
add
add
xchg
add
add
pop
stos
add
add
pop
stos
add
fld
add
add
pop
stos
add
add
add
xchg
add
add
pop
stos
add
add
add
pop
stos
add
fild
add
add
pop
stos
add
add
add
xchg
add
cli
pop
stos
add
loope
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
sbb
push
das
add
add
add
or
add
add
add
add
add
or
add
add
sbb
push
das
add
add
add
stos
add
add
add
add
add
add
add
or
add
add
lods
add
add
add
add
lods
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
push
lods
add
add
add
xchg
add
add
lods
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
push
mov
mov
add
add
xchg
add
add
add
add
add
mov
add
add
add
and
add
mov
add
add
add
add
add
clc
add
add
xchg
sbb
push
das
add
add
add
add
add
add
add
add
add
stc
add
add
xchg
add
add
mov
stc
add
add
test
add
mov
sti
add
add
xchg
pop
add
cld
add
add
xchg
mov
cmp
cld
add
add
xchg
ds
add
add
add
add
add
xchg
sbb
push
das
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
pop
add
add
add
mov
or
add
add
add
add
add
add
add
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
push
cmp
or
add
add
add
add
or
add
add
add
add
or
les
mov
jns
mov
add
les
les
jns
mov
add
les
fld
jns
mov
add
les
out
push
jns
mov
add
adc
xor
das
add
add
adc
add
add
add
add
adc
add
add
or
add
add
sbb
push
das
add
add
xchg
or
add
mov
add
xchg
or
push
or
add
add
add
xchg
or
add
add
add
or
add
xchg
or
add
adc
add
add
or
add
add
add
xchg
or
add
mov
add
xchg
or
movs
adc
add
add
or
add
adc
add
add
or
add
adc
add
add
add
add
add
add
add
add
adc
xchg
add
add
or
add
sbb
add
add
add
add
sbb
add
add
add
add
add
add
xchg
add
add
push
mov
add
xchg
add
add
or
add
add
add
add
add
push
add
add
xchg
add
add
mov
add
xchg
add
das
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
cmp
jns
mov
add
xchg
cmp
jns
mov
add
xchg
add
mov
add
xchg
add
add
add
add
and
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
add
xchg
add
add
or
add
add
add
xchg
cmp
jns
int3
add
add
add
xchg
sbb
push
das
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
cmp
jns
into
add
xchg
cmp
jns
into
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
xchg
sub
add
add
or
add
xchg
sbb
push
das
add
add
add
add
xchg
add
push
cs
add
das
add
add
xchg
add
add
add
add
add
add
xchg
cmp
jns
xlat
add
add
add
xchg
add
add
add
add
add
add
or
add
add
add
add
add
add
add
xchg
cmp
jns
xlat
add
add
add
xchg
sbb
push
das
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
or
add
xchg
add
add
xlat
add
add
add
xchg
add
cmp
xlat
add
xchg
add
add
xlat
add
add
add
xchg
cmp
dec
or
add
add
add
add
add
add
xlat
add
add
add
xchg
add
add
aas
add
add
xchg
sbb
push
das
add
add
add
add
xchg
add
add
add
add
xchg
add
xlat
add
add
add
add
xchg
pop
add
xlat
add
inc
add
add
xchg
add
xlat
add
inc
add
add
xchg
ds
add
add
add
add
xchg
add
add
add
add
add
add
add
add
or
add
add
add
xchg
add
xlat
add
inc
add
add
add
xlat
add
add
add
xchg
add
xlat
add
add
add
or
add
add
add
add
xchg
pop
add
xlat
add
add
or
add
dec
add
add
xchg
cmp
jns
xlat
add
dec
add
add
xchg
sbb
push
das
add
add
dec
add
add
xchg
cmp
dec
or
add
dec
add
add
add
xlat
add
add
add
xchg
add
xlat
add
add
add
add
dec
add
add
xchg
add
push
add
add
xchg
add
add
add
xchg
pop
add
add
add
xchg
sbb
push
das
add
add
push
add
add
xchg
add
add
push
add
add
xchg
sbb
push
das
add
add
push
add
add
xchg
add
xlat
add
push
add
add
xchg
pop
add
xlat
add
xchg
cmp
dec
or
add
push
add
add
push
sbb
push
xor
xlat
add
adc
add
add
add
pop
add
add
add
add
add
add
add
mov
add
add
nop
add
adc
add
add
add
pop
add
add
add
add
add
add
mov
adc
add
pop
add
add
add
add
fwait
push
add
add
inc
add
add
or
add
add
push
pop
add
add
pop
pop
add
add
sbb
add
add
pop
pop
add
add
sbb
add
add
pop
pop
add
add
sbb
add
add
dec
pop
add
add
pop
pop
add
add
inc
add
add
jb
add
add
test
add
add
mov
add
add
lahf
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
xchg
add
add
int3
pop
add
add
aad
add
add
xchg
add
add
xchg
add
add
repnz
add
add
xchg
add
add
xchg
add
add
aad
add
add
xchg
add
add
repnz
add
add
aad
add
add
add
add
add
xchg
add
add
adc
add
add
sbb
add
add
sbb
add
add
xchg
add
add
xchg
add
add
add
add
add
jbe
add
add
jg
add
add
popf
or
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
or
add
add
add
add
xchg
add
add
mov
add
add
xchg
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
fmul
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
dec
add
add
adc
add
add
sbb
add
add
sbb
add
add
and
add
add
pop
add
add
add
add
add
add
add
mov
add
add
nop
add
add
xchg
add
add
add
adc
add
mov
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
add
nop
add
add
xchg
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
nop
add
add
xchg
add
add
add
add
add
add
add
push
add
add
add
add
or
imul
leave
add
add
sub
and
add
add
add
add
add
add
mov
add
add
pop
add
add
add
add
add
add
add
add
mov
add
add
nop
add
adc
xchg
add
add
add
adc
add
mov
add
add
add
add
add
add
add
mov
add
add
nop
add
and
add
add
add
add
add
add
mov
add
add
nop
add
add
xchg
add
add
add
add
add
and
add
add
add
add
add
add
mov
add
add
nop
add
adc
add
add
add
pop
add
add
add
add
add
add
add
mov
add
add
pop
add
add
add
popf
or
movs
or
mov
add
add
mov
add
add
fisttp
popf
or
out
or
femms
add
add
cs
and
and
and
add
add
int
xchg
add
push
out
add
jmp
jns
sub
repz
xlat
or
add
push
cmp
push
jns
rol
push
xor
leave
add
push
add
fld
cmp
xor
loope
cmp
xor
jmp
add
add
push
jg
stc
add
push
xor
add
cmp
xor
or
cmp
xor
adc
cmp
or
sbb
cmp
xor
and
cmp
jns
sub
cmp
push
or
add
push
jns
adc
cmp
jns
xor
cmp
jns
xor
and
cmps
or
xor
mov
dec
add
adc
push
dec
add
mov
adc
adc
add
add
push
jns
xor
gs
or
or
daa
pop
mov
adc
dec
add
aaa
add
popf
adc
or
popf
adc
or
mov
add
pop
add
adc
adc
add
add
fist
(bad)
add
add
add
lds
dec
add
adc
inc
add
adc
add
adc
dec
add
adc
add
add
add
adc
imul
dec
add
or
sub
hlt
or
adc
out
add
adc
or
or
or
or
add
or
ja
int3
or
or
or
add
or
or
or
add
adc
or
add
add
adc
or
add
cmp
add
adc
rol
push
push
or
add
push
or
add
add
adc
add
adc
stc
add
push
jo
fld
push
adc
or
add
adc
or
add
adc
or
add
add
xchg
add
adc
cdq
add
repnz
or
add
xor
mov
jle
xor
mov
mov
add
jg
mov
lods
adc
or
add
add
or
icebp
add
int3
or
add
adc
add
into
adc
or
add
loopne
cdq
add
adc
or
adc
out
add
adc
or
jmp
add
cmps
or
adc
add
adc
jns
jl
gs
or
add
adc
or
jns
jno
cld
adc
or
mov
pop
mov
adc
xor
cmp
xor
sub
inc
adc
dec
adc
push
adc
cmp
jns
cmp
jle
lods
or
mov
dec
add
mov
adc
mov
add
add
add
adc
ret
adc
or
add
or
jns
into
adc
ficom
cmp
jns
jns
cmp
jns
pop
add
push
jo
popa
add
adc
or
add
adc
es
cmp
push
xor
xor
not
jb
inc
add
cmps
or
push
jns
imul
imul
sbb
dec
push
push
sbb
mov
add
push
mov
pop
adc
add
xchg
add
lds
xchg
add
cmps
or
jns
cmp
or
cdq
add
push
aad
cdq
add
add
add
add
add
push
add
sbb
cmp
jns
xor
fist
push
pop
add
cmps
or
push
jns
adc
sbb
jb
or
cmp
jns
or
cmp
adc
or
cmp
jg
mov
cmp
xor
xchg
add
push
sbb
adc
mov
add
unpcklps
not
jb
adc
cmp
xor
pushf
add
adc
add
push
dec
nop
cmp
pop
nop
and
ins
nop
or
ins
pop
add
push
imul
ja
dec
add
add
pop
test
mov
add
mov
pop
lea
popa
add
push
xchg
bswap
add
push
xchg
psrlw
ds
xchg
psubusw
ds
xchg
cmpxchg
ds
xchg
psraw
ds
xchg
psubsw
ds
xchg
pop
add
push
xchg
cmovns
ds
xchg
psllw
ds
xchg
wbinvd
add
push
xchg
jno
movups
test
xchg
add
add
push
xor
stc
add
add
cmps
or
cmp
stos
wbinvd
add
push
xor
leave
add
push
cmp
push
xor
and
cmp
jns
sbb
pop
loopne
and
adc
mov
pop
push
repnz
or
nop/reserved
adc
sbb
jns
adc
sub
adc
test
adc
sub
xor
and
sub
xor
sub
sub
inc
sbb
adc
add
xor
sbb
adc
add
push
loope
dec
add
push
jns
mov
cmp
jns
mov
and
cmps
or
mov
imul
add
mov
push
or
mov
je
jb
sub
jns
mov
sbb
sbb
sbb
adc
sbb
or
mov
add
add
add
add
or
pop
add
push
jns
pop
add
push
xor
pop
add
push
loope
xor
push
xor
cmp
sbb
adc
and
pop
add
add
sbb
adc
xor
fcom
inc
add
sbb
sbb
dec
add
push
xor
inc
add
sbb
adc
mov
add
les
xor
mov
leave
add
sbb
adc
add
add
add
lds
sub
fist
push
sub
mov
add
inc
adc
add
add
push
or
pop
add
sbb
adc
and
mov
add
adc
add
sbb
fadd
adc
adc
out
add
pop
push
push
xor
not
jb
xor
push
sbb
adc
add
add
sbb
add
test
add
xor
cmp
inc
add
rcl
cmp
and
in
mov
cmp
jg
mov
or
not
rol
or
rol
or
rol
adc
add
add
add
push
or
add
add
add
push
jo
leave
add
xchg
add
add
push
fadd
and
cmps
or
cmp
jns
sbb
jno
dec
adc
cmp
pop
adc
add
adc
cld
add
add
adc
cmp
adc
mov
add
add
adc
adc
adc
not
jb
sbb
mov
add
sbb
or
into
adc
aad
mov
sbb
add
push
sbb
out
add
add
add
add
adc
adc
add
add
add
sbb
sbb
sbb
sbb
sbb
add
add
add
sahf
adc
add
sbb
adc
pop
sbb
adc
adc
add
sbb
adc
sbb
push
add
add
add
mov
adc
int3
add
push
jns
mov
adc
lds
adc
adc
add
push
jg
imul
and
cmp
cmps
or
add
sbb
add
add
sbb
push
sbb
adc
mov
dec
add
sbb
push
fcom
sbb
xchg
adc
adc
adc
xor
cmp
xor
dec
add
sbb
dec
adc
adc
add
adc
dec
sbb
cmp
lahf
add
cmp
add
inc
adc
add
pop
or
add
push
xor
stc
add
adc
or
add
adc
imul
mov
adc
add
add
add
test
ror
adc
adc
popa
add
add
dec
add
adc
add
add
add
jl
and
cmps
or
push
jns
and
sub
cmp
popa
add
sbb
pop
adc
add
cmp
xor
inc
add
loope
popf
push
cmp
push
xor
push
add
loope
lds
adc
add
push
jns
push
add
push
add
dec
add
add
les
add
jmp
add
add
pop
sub
cmp
jb
loope
cmp
add
pop
dec
adc
jg
jno
out
adc
popa
add
outs
adc
or
rol
cmp
jne
sub
not
jb
rol
outs
pop
(bad)
adc
jns
sub
dec
push
push
sub
and
ins
sysenter
add
push
xor
and
ins
cvttps2pi
jne
pushf
adc
mov
inc
add
adc
out
add
cmp
jns
mov
mov
jb
add
jns
mov
inc
add
add
add
add
cli
adc
add
fld
cmp
add
adc
dec
add
adc
dec
add
pushf
adc
mov
pop
add
adc
jo
pop
add
add
add
and
dec
add
pop
push
push
dec
add
and
push
push
dec
add
ins
cmovl
cmp
jns
fld
cmp
mov
and
adc
or
push
loope
push
and
and
push
or
add
mov
push
ins
add
push
ins
add
add
add
and
push
icebp
add
or
add
and
push
jns
out
push
or
repz
push
imul
icebp
add
or
loope
sbb
jecxz
ins
add
pop
ins
pop
add
cdq
add
push
cmp
push
jns
mov
xor
cmp
add
cmp
and
and
cdq
add
and
pop
cdq
add
and
add
add
and
leave
add
rol
rol
loope
and
push
pop
fld
loope
xor
add
loope
inc
and
loope
dec
and
fld
loope
push
and
loope
pop
and
loope
arpl
push
pop
fld
loope
ins
and
rol
icebp
add
loope
mov
push
mov
lods
pop
mov
pop
rol
mov
pop
loope
(bad)
push
pop
leave
add
and
loope
hlt
and
add
loope
loop
jecxz
loope
or
jmp
or
xor
not
leave
add
and
and
push
adc
cmp
jns
adc
inc
and
pop
dec
add
mov
adc
je
mov
sti
adc
xor
cmp
jns
popa
add
sbb
push
and
sbb
push
imul
or
inc
sbb
push
fwait
and
sub
cmp
jns
xor
cmp
jns
cmp
cmp
xor
icebp
add
and
mov
icebp
and
add
add
movs
sbb
add
push
jns
dec
add
push
jns
adc
icebp
add
jb
jns
cmp
fstp
adc
add
add
add
add
and
fiadd
or
and
push
add
add
add
or
sub
pusha
add
add
add
add
add
add
add
or
call
add
add
or
lock
or
hlt
add
or
clc
add
or
cld
add
or
add
jg
or
add
test
or
sbb
pusha
add
add
add
or
and
push
add
add
add
or
sub
jne
or
clc
add
or
cld
add
or
add
pop
add
add
push
add
add
add
or
or
jne
add
sbb
add
add
mov
add
test
push
add
add
mov
jp
or
mov
jg
or
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
pop
add
add
add
or
fadd
pop
add
add
add
add
add
jo
or
or
pusha
add
add
pop
add
add
add
or
adc
push
add
add
add
push
add
add
add
or
and
jg
or
and
test
or
sub
into
add
add
rol
or
xor
fadd
or
xor
fld
or
cmp
add
or
cmp
push
add
add
add
add
pusha
add
add
add
add
add
add
pusha
add
add
add
add
push
add
add
add
add
jne
or
jo
jo
or
je
pusha
add
add
mov
pusha
add
add
mov
add
rol
add
add
add
or
enter
or
and
add
add
pusha
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
jp
or
inc
add
add
add
add
add
into
add
add
add
add
fadd
or
push
add
add
add
add
sbb
pop
add
add
sub
sub
push
add
add
add
xor
push
add
add
add
hlt
add
clc
add
xor
fimul
add
add
or
add
or
add
std
or
add
std
or
add
std
or
add
adc
add
std
or
add
std
or
add
std
or
add
add
add
add
adc
or
fwait
add
add
pop
or
add
and
mov
or
or
or
or
or
or
or
or
or
add
mov
or
or
pusha
add
add
cmp
pop
add
outs
add
ja
cmp
test
cmp
add
je
add
pusha
add
add
add
add
add
je
add
jo
add
js
add
jno
add
or
add
jb
add
dec
add
add
iret
or
or
or
or
or
or
or
pusha
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jae
test
fmul
and
xor
push
ja
xchg
push
mov
push
call
cvttps2pi
jne
or
int3
pminub
dec
adc
adc
pop
adc
bound
push
adc
adc
adc
adc
pop
adc
jo
jl
mov
stos
adc
adc
adc
adc
adc
adc
adc
adc
jb
mov
(bad)
adc
adc
adc
adc
imul
adc
adc
fist
in
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xor
pop
adc
les
adc
cs
pop
push
outs
push
xchg
push
test
pop
adc
js
iret
pop
lock
add
pop
sbb
sbb
sbb
push
sbb
xchg
sbb
sbb
sbb
sbb
add
add
add
add
add
sbb
add
and
add
and
add
add
add
add
adc
add
pushw
xchg
or
add
fwait
or
add
xchg
or
add
xchg
or
add
mov
push
movs
or
add
add
add
add
push
mov
add
add
or
add
add
mov
push
mov
push
iret
or
add
mov
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
or
or
adc
push
add
or
or
jnp
in
or
or
or
or
push
cmp
adc
adc
adc
adc
nop
adc
adc
ja
jnp
movs
adc
adc
mov
push
es
test
mov
add
add
add
add
cmp
mov
add
add
cmp
add
add
add
add
mov
add
add
inc
add
or
add
add
fisttp
add
add
inc
add
or
add
dec
add
or
add
add
cs
add
add
add
inc
add
add
mov
cwde
or
add
add
add
lea
mov
add
add
mov
push
or
mov
das
or
mov
push
or
xor
or
add
add
xchg
mov
add
mov
add
add
add
add
push
add
rol
push
add
ret
push
add
ret
add
add
add
enter
mov
push
add
mov
enter
add
leave
add
add
add
add
add
adc
xchg
add
add
add
sbb
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
std
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
pop
add
data16
data16
data16
data16
data16
add
data16
outs
add
outs
add
outs
add
outs
add
outs
add
add
add
test
jge
test
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
(bad)
add
adc
add
psubusb
les
and
mov
fiadd
mov
and
les
push
add
add
add
ins
outs
outs
gs
ins
imul
jae
jb
fs
jo
gs
fs
ins
add
outs
gs
ins
imul
jae
jb
fs
jo
gs
cmp
outs
fs
gs
add
arpl
ins
imul
add
jae
gs
add
add
push
arpl
add
add
outs
ja
gs
jns
add
outs
ja
gs
je
ins
imul
jae
je
jo
inc
outs
ins
ins
outs
outs
add
add
push
add
add
fs
bound
dec
popa
jb
push
push
gs
bound
arpl
fs
je
imul
gs
outs
outs
jae
data16
dec
jae
outs
add
jb
popa
jns
dec
imul
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
popa
jbe
push
arpl
jo
inc
outs
outs
jae
jb
arpl
add
jbe
push
arpl
jo
push
popa
jb
ins
gs
jb
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
bound
arpl
imul
jb
pusha
xor
dec
jae
outs
inc
outs
outs
jbe
jb
add
outs
outs
inc
outs
outs
jbe
jb
gs
dec
jae
outs
inc
outs
outs
jbe
jb
gs
outs
ins
ins
arpl
outs
add
ins
ins
arpl
outs
pusha
xor
dec
jae
outs
dec
popa
outs
fs
gs
push
jns
je
ins
cs
bound
dec
dec
je
jo
popa
outs
fs
gs
dec
jae
outs
dec
outs
outs
jb
inc
je
jb
bound
add
je
imul
jae
outs
push
jb
jo
jb
jns
je
jb
bound
add
popa
je
add
outs
outs
push
gs
fs
dec
inc
imul
ins
add
outs
outs
push
gs
fs
js
gs
imul
gs
imul
outs
push
gs
popa
ins
imul
inc
js
gs
imul
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
outs
push
gs
popa
ins
imul
outs
outs
push
outs
imul
dec
jae
outs
push
jns
add
imul
add
jb
popa
je
imul
outs
push
jb
je
jb
dec
jae
outs
push
jb
je
jb
js
gs
imul
jne
push
jns
add
add
jns
fs
outs
ins
ins
arpl
outs
pusha
xor
push
ins
jne
imul
je
jo
inc
jb
ja
gs
fs
jo
gs
inc
gs
je
imul
jb
inc
jae
gs
bound
inc
gs
gs
je
jae
dec
jne
je
arpl
je
gs
gs
je
add
ins
bound
push
gs
jb
js
add
popa
jb
inc
jae
gs
bound
dec
outs
jne
gs
inc
popa
jb
jae
push
je
imul
dec
gs
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
inc
jne
add
jbe
ins
jne
pop
pop
add
jb
imul
add
add
add
outs
js
inc
push
add
je
jb
gs
js
ins
outs
jb
jb
dec
jo
jb
add
imul
fs
push
outs
jb
push
popa
jb
add
arpl
je
push
imul
add
sahf
add
xchg
add
add
add
add
ret
push
add
mov
ret
ret
ret
ins
pop
push
ins
jne
imul
add
gs
add
jae
gs
cs
push
imul
gs
imul
inc
ins
jo
jns
push
jb
add
ins
jae
add
ins
ins
add
fs
inc
popa
je
push
imul
ret
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
push
gs
fs
push
jns
gs
xchg
add
popa
jb
add
ins
jo
gs
add
outs
jo
jb
jns
dec
bound
arpl
popa
jb
add
jb
jns
je
jb
add
jb
jns
inc
ins
outs
jae
add
jae
push
popa
ins
jne
add
outs
jae
jb
arpl
add
outs
jae
jb
arpl
inc
outs
add
jb
jb
inc
imul
add
outs
outs
jb
add
jb
popa
ins
imul
add
popa
jb
dec
bound
arpl
je
jb
inc
jb
popa
jns
push
jb
jo
jb
jns
popa
ins
add
ins
ins
outs
je
dec
outs
je
addr16
inc
ins
outs
popa
je
push
je
imul
ins
gs
outs
add
fs
bound
arpl
outs
fs
jb
popa
jns
inc
popa
je
add
fs
je
add
je
jb
je
jb
ret
dec
gs
bound
dec
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
cdq
add
xchg
add
ret
ret
push
imul
add
xchg
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
jae
ins
bound
dec
outs
fs
gs
popa
outs
fs
add
arpl
outs
jb
arpl
add
je
imul
imul
fs
push
jns
je
ins
cs
gs
add
imul
dec
imul
push
gs
imul
push
gs
imul
jne
add
imul
gs
imul
imul
outs
outs
add
je
ins
jne
imul
inc
outs
push
je
jb
add
outs
jo
inc
outs
push
je
jo
dec
outs
jae
popa
ins
ins
add
imul
add
outs
imul
add
jo
inc
outs
inc
jne
jo
addr16
dec
popa
ins
add
ins
add
jne
ins
jae
outs
bound
data16
arpl
outs
add
bound
inc
gs
popa
jae
inc
outs
fs
pop
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
ins
gs
bound
xor
arpl
ins
arpl
outs
add
jo
arpl
jns
addr16
push
popa
jb
ins
gs
jb
add
jb
ins
gs
jb
add
imul
imul
popa
push
arpl
jo
dec
bound
arpl
gs
imul
jbe
ins
add
je
inc
arpl
popa
ins
add
imul
gs
popa
ins
imul
arpl
outs
fs
je
add
outs
jbe
jb
gs
add
gs
popa
ins
imul
arpl
jns
add
jb
je
dec
jae
outs
add
imul
fs
jae
outs
add
popa
fs
outs
bound
arpl
jo
add
outs
inc
outs
outs
jbe
jb
add
fs
inc
jb
outs
jb
jb
ins
outs
jbe
pop
inc
jb
outs
jb
push
jb
je
push
gs
ins
je
dec
jae
outs
push
gs
outs
outs
jae
add
je
push
gs
outs
outs
jae
add
je
outs
outs
pusha
xor
jb
jae
outs
outs
jae
add
imul
outs
add
inc
jb
outs
jb
inc
jbe
outs
je
jb
jae
add
je
inc
outs
outs
je
js
add
je
push
jb
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
outs
jo
jb
jns
popa
ins
add
je
push
jne
je
inc
push
gs
push
outs
imul
jns
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
push
jns
add
popa
add
outs
jae
add
jae
popa
add
outs
gs
js
gs
imul
pop
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
inc
outs
outs
jbe
jb
gs
add
gs
popa
ins
imul
je
jb
je
jb
push
outs
outs
push
jb
je
jb
dec
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
dec
dec
imul
arpl
outs
popa
jb
add
je
push
jb
je
push
je
je
add
je
inc
outs
jb
popa
je
imul
pop
inc
outs
jb
popa
je
imul
pop
dec
outs
fs
je
je
outs
outs
add
je
dec
outs
fs
je
je
outs
outs
add
je
push
jne
je
inc
push
gs
dec
outs
fs
je
push
gs
dec
outs
fs
je
push
gs
push
jne
je
dec
popa
ins
add
je
push
jne
je
dec
popa
ins
add
jne
push
je
push
je
jb
dec
bound
arpl
jb
je
inc
outs
fs
bound
arpl
jb
je
push
je
jb
inc
jb
popa
jns
push
jb
je
inc
outs
fs
jb
popa
jns
push
jb
je
push
jb
jo
jb
jns
popa
ins
add
imul
jb
je
dec
jne
ins
add
imul
imul
imul
popa
jbe
push
arpl
jo
add
imul
add
imul
outs
je
je
js
add
imul
jae
popa
arpl
ja
add
outs
ins
ins
arpl
outs
pusha
xor
push
jb
jo
jb
jns
outs
outs
add
outs
imul
jae
dec
inc
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
push
je
imul
gs
dec
jne
ins
popa
bound
xor
push
gs
jo
outs
dec
gs
js
inc
fs
jo
xor
cs
ins
add
addr16
jb
popa
je
dec
gs
js
push
gs
gs
popa
ins
jne
inc
js
push
gs
ins
outs
jae
dec
gs
push
gs
jne
jb
push
popa
ins
jne
inc
js
popa
fs
jo
xor
cs
ins
add
addr16
gs
gs
dec
gs
push
gs
gs
gs
push
popa
ins
jne
add
addr16
outs
jne
dec
gs
js
push
gs
outs
jne
push
popa
ins
jne
add
dec
inc
push
dec
dec
inc
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
addr16
jne
jb
dec
outs
outs
dec
gs
dec
popa
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
jbe
inc
imul
jb
gs
xor
cs
ins
add
push
outs
ja
xor
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
inc
gs
outs
fs
gs
popa
outs
fs
add
je
jb
arpl
fs
jae
add
outs
inc
arpl
jae
dec
gs
ins
jae
push
jns
je
ins
cs
arpl
imul
arpl
popa
ins
add
outs
push
jb
arpl
jae
outs
imul
push
outs
imul
ins
jo
jb
outs
outs
popa
je
outs
outs
dec
gs
ins
add
ins
imul
imul
js
inc
jb
popa
je
inc
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
jne
gs
outs
jbe
fs
ins
add
gs
je
push
jb
arpl
jae
jae
jae
jb
ins
gs
popa
addr16
popa
ins
add
jb
gs
xor
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
popa
jae
gs
bound
jne
ins
dec
popa
ins
add
push
arpl
gs
outs
add
jbe
imul
add
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
inc
jb
popa
je
dec
gs
bound
push
gs
gs
gs
je
jae
je
jo
dec
inc
add
gs
je
inc
gs
je
imul
addr16
je
add
outs
gs
jns
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
dec
popa
ins
add
jb
ins
gs
jb
add
outs
je
inc
push
outs
imul
jns
add
ins
jne
add
outs
jbe
jb
gs
add
fs
je
je
outs
outs
add
fs
je
push
jne
je
dec
popa
ins
add
push
bound
jo
imul
add
outs
arpl
jae
gs
gs
add
je
dec
jae
gs
popa
bound
inc
imul
inc
gs
gs
outs
jb
je
ins
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
jae
gs
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
xor
aaa
xor
sub
sub
sub
xor
xor
jge
jnp
xor
data16
sub
sub
sub
sub
xor
cmp
xor
jge
inc
fs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
jae
jne
ins
dec
jb
ins
jo
jns
push
gs
popa
arpl
inc
jo
outs
add
jbe
dec
gs
add
je
outs
jne
gs
je
jb
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
gs
jb
inc
outs
outs
arpl
add
ins
gs
gs
imul
add
je
gs
imul
add
je
inc
imul
outs
outs
add
outs
ja
jb
inc
outs
outs
je
imul
xor
add
ins
add
gs
add
je
inc
outs
jne
je
push
je
jb
jae
imul
arpl
jns
inc
js
jae
jae
inc
outs
jb
popa
je
push
popa
je
add
ins
bound
add
ja
jne
add
jbe
jb
outs
ins
outs
je
inc
gs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
inc
gs
outs
ins
fs
popa
je
add
arpl
ins
inc
outs
ins
fs
push
popa
jb
add
outs
imul
je
outs
outs
push
gs
imul
jae
gs
cs
outs
outs
imul
je
outs
outs
add
je
inc
jo
push
gs
imul
je
dec
je
ins
add
arpl
imul
pop
inc
gs
jne
je
addr16
push
outs
je
ins
push
arpl
fs
inc
outs
jne
ins
add
gs
push
jo
imul
addr16
jo
imul
jae
push
bound
jno
gs
add
jae
gs
cs
gs
inc
jb
popa
je
add
je
push
bound
jno
gs
add
je
push
gs
gs
inc
popa
arpl
push
outs
ins
imul
je
ins
cs
gs
inc
popa
arpl
add
je
push
gs
gs
inc
popa
arpl
dec
gs
ins
add
je
inc
popa
arpl
push
outs
ins
imul
jne
jae
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
bound
jae
outs
outs
jae
add
je
push
bound
jae
outs
outs
jae
add
je
push
je
je
jae
outs
fs
je
push
je
je
jae
outs
fs
je
gs
outs
outs
jae
push
je
gs
ins
add
jb
popa
ins
add
outs
popa
jb
push
gs
fs
addr16
inc
outs
outs
je
outs
je
outs
addr16
add
popa
fs
jns
gs
addr16
dec
gs
fs
add
bound
popa
fs
outs
ins
ins
arpl
outs
add
fs
data16
bound
jb
outs
add
bound
arpl
je
outs
outs
add
je
push
push
inc
cmp
inc
gs
jns
gs
jae
je
dec
gs
outs
add
je
inc
outs
outs
je
outs
je
jns
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
je
push
imul
inc
gs
gs
gs
push
je
gs
ins
add
imul
dec
outs
addr16
add
je
inc
push
push
je
imul
popa
jb
jae
outs
add
fs
imul
popa
ins
jne
jae
inc
gs
imul
inc
imul
imul
je
outs
jae
outs
outs
add
je
imul
imul
inc
imul
jns
popa
ins
add
popa
jb
dec
jae
outs
ja
jb
push
outs
push
jo
gs
addr16
push
outs
imul
dec
inc
xor
popa
gs
jae
inc
ins
outs
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
je
outs
outs
jbe
jb
gs
inc
jns
add
outs
outs
ins
add
js
inc
jns
gs
inc
imul
imul
pop
inc
push
inc
dec
dec
add
je
jne
data16
push
outs
inc
jb
popa
jns
inc
outs
outs
jbe
jb
add
popa
jae
ss
je
imul
ins
inc
popa
jae
ss
je
imul
gs
jns
je
ins
dec
outs
outs
add
je
inc
js
jae
jae
inc
imul
jns
outs
outs
add
je
inc
jne
ins
dec
popa
ins
add
popa
fs
ins
ins
push
gs
add
imul
js
add
outs
je
imul
push
gs
outs
jbe
add
gs
fs
je
jb
add
je
dec
jae
ins
imul
jb
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
inc
jb
jne
outs
je
jne
ins
inc
js
gs
imul
jne
outs
je
js
gs
imul
popa
ins
imul
jb
jb
xor
dec
inc
jno
popa
ins
imul
jb
jb
xor
dec
inc
imul
jb
pusha
xor
jae
je
dec
je
ins
add
je
push
imul
je
xor
outs
jo
dec
gs
push
push
jne
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
outs
jb
popa
je
jb
jbe
fs
dec
outs
je
add
outs
je
add
outs
je
xor
push
dec
outs
je
xor
push
imul
inc
jns
add
outs
outs
jbe
jb
imul
je
jns
add
je
jns
gs
outs
fs
gs
outs
fs
jb
outs
addr16
gs
fs
dec
outs
je
ins
jo
gs
outs
je
fs
js
gs
imul
gs
outs
arpl
add
ins
jo
jb
inc
js
push
add
gs
je
add
gs
jb
gs
fs
add
gs
jb
outs
outs
je
outs
je
addr16
dec
jne
jo
je
addr16
push
gs
outs
outs
jae
add
fs
jb
outs
jb
addr16
inc
jb
outs
jb
dec
je
jo
outs
push
gs
js
gs
imul
outs
jbe
inc
je
push
gs
jae
push
jo
arpl
dec
jae
gs
gs
jb
imul
dec
jne
bound
add
dec
gs
gs
inc
outs
ins
jo
jb
dec
jb
imul
dec
outs
je
xor
push
outs
inc
outs
jne
ins
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
gs
gs
jb
jo
outs
jb
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
je
outs
outs
jbe
jb
gs
push
jns
gs
outs
outs
jbe
jb
gs
inc
popa
outs
inc
outs
outs
jbe
jb
inc
jb
ins
add
outs
jbe
jb
push
outs
dec
outs
jbe
jb
popa
outs
je
je
imul
jbe
jb
inc
jb
ins
dec
outs
jbe
jb
popa
outs
je
je
imul
jae
imul
inc
jb
ins
add
jbe
ins
imul
imul
jo
imul
jbe
jb
inc
jb
ins
add
jns
gs
gs
jb
jo
outs
jb
outs
outs
je
js
add
inc
gs
popa
ins
jne
add
inc
imul
inc
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
outs
ins
jo
outs
outs
je
outs
outs
jbe
jb
gs
inc
popa
outs
inc
outs
outs
jbe
jb
push
outs
add
outs
jne
gs
je
jb
xor
dec
inc
outs
jne
gs
je
jb
inc
outs
jo
push
outs
add
je
outs
outs
popa
jb
inc
outs
je
jns
addr16
dec
gs
dec
inc
imul
jb
inc
outs
jne
gs
je
jb
addr16
dec
gs
imul
pop
inc
arpl
imul
add
jo
add
je
dec
jae
jb
popa
jns
inc
jb
popa
jns
imul
inc
outs
gs
arpl
addr16
outs
je
add
je
outs
outs
jae
jb
arpl
jae
inc
outs
outs
jae
jb
arpl
dec
outs
outs
add
je
outs
fs
popa
jae
add
je
popa
jb
ins
gs
jb
add
jb
ins
gs
jb
outs
outs
add
je
push
popa
jb
ins
gs
jb
jns
add
je
dec
popa
jae
popa
ins
jne
add
je
popa
ins
jne
dec
jb
gs
jne
je
addr16
dec
jae
outs
gs
arpl
gs
imul
outs
outs
add
imul
jae
bound
jb
arpl
gs
dec
jae
outs
je
jb
popa
arpl
addr16
dec
jae
popa
ins
jne
push
jns
add
je
outs
outs
jae
jb
arpl
add
outs
fs
push
popa
jb
ins
gs
jb
outs
imul
gs
outs
je
jb
popa
arpl
add
je
dec
jae
outs
gs
arpl
add
je
outs
gs
arpl
gs
imul
outs
outs
add
je
inc
popa
jae
push
jns
add
je
ins
gs
outs
je
jns
add
gs
fs
outs
outs
add
je
inc
imul
add
je
push
jb
jo
jb
jns
jns
add
outs
je
outs
outs
add
je
inc
jbe
outs
je
popa
outs
fs
gs
jns
add
je
dec
gs
bound
push
jns
add
ins
bound
push
jns
gs
inc
gs
outs
fs
popa
jb
ins
gs
jb
add
je
popa
ins
jne
add
addr16
popa
jb
ins
gs
jb
outs
jne
je
js
gs
imul
push
popa
ins
jne
add
je
inc
popa
outs
push
gs
add
je
inc
popa
outs
push
jb
je
add
je
jb
jo
jb
imul
push
popa
outs
add
je
imul
gs
jne
je
ins
inc
je
jb
bound
gs
dec
popa
imul
outs
gs
arpl
add
outs
arpl
jae
inc
ins
outs
jae
dec
popa
imul
ja
dec
imul
dec
popa
jae
js
je
add
je
jb
arpl
jae
jae
jns
popa
ins
add
push
jb
jns
push
outs
dec
outs
je
xor
dec
popa
jae
dec
outs
fs
data16
je
je
add
jb
add
outs
je
je
add
ins
jo
jb
push
outs
add
js
add
ins
gs
outs
outs
add
jo
outs
fs
gs
add
jb
popa
ins
push
jb
je
jb
addr16
push
je
dec
outs
ja
addr16
inc
jne
jb
outs
je
push
add
je
dec
popa
outs
popa
addr16
push
dec
add
imul
inc
outs
outs
imul
je
outs
outs
dec
popa
outs
popa
addr16
dec
popa
je
add
ja
push
jb
outs
arpl
add
jb
add
imul
arpl
gs
popa
je
push
je
imul
je
ins
cs
popa
outs
popa
gs
outs
je
dec
popa
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
dec
popa
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
outs
jbe
imul
je
outs
add
outs
popa
gs
outs
je
bound
arpl
popa
jb
push
gs
push
jb
arpl
jae
popa
ins
add
jae
gs
inc
js
gs
imul
arpl
jae
je
jb
dec
outs
outs
add
je
inc
jb
jne
outs
je
add
je
push
jae
push
push
js
arpl
add
imul
je
jae
je
inc
imul
dec
popa
jb
push
imul
gs
popa
jae
push
imul
outs
jb
addr16
push
imul
ins
push
je
jb
add
je
jb
arpl
jae
jns
add
je
dec
popa
outs
fs
add
push
popa
jb
add
gs
popa
ins
ins
bound
imul
push
add
je
dec
gs
add
jns
outs
ins
ins
arpl
outs
add
je
dec
popa
push
jb
addr16
dec
push
push
gs
imul
jb
je
outs
addr16
jns
je
ins
add
je
push
gs
imul
pop
dec
imul
jb
popa
fs
outs
je
jb
jne
je
fs
js
gs
imul
gs
fs
bound
je
js
gs
imul
gs
jne
je
push
gs
outs
arpl
jno
popa
ins
jae
addr16
inc
jae
gs
bound
addr16
dec
add
outs
ja
jb
outs
jbe
jb
popa
outs
je
inc
gs
bound
arpl
jb
je
inc
ins
ins
inc
jns
gs
addr16
dec
popa
imul
add
outs
arpl
jae
outs
fs
add
je
dec
outs
fs
gs
popa
ins
add
jae
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
outs
imul
gs
inc
gs
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
add
je
gs
jo
popa
je
add
gs
je
inc
imul
jns
dec
jo
outs
push
jb
je
add
ins
gs
je
gs
ins
add
fs
imul
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
ins
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
outs
je
ins
gs
gs
outs
fs
popa
outs
fs
add
je
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
outs
fs
outs
outs
add
je
dec
jae
je
je
arpl
inc
jb
popa
je
inc
gs
gs
je
add
je
push
gs
jb
push
jns
add
popa
ins
imul
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
inc
outs
gs
je
jb
dec
dec
inc
outs
gs
je
jb
dec
jo
outs
fs
dec
fs
jb
pop
xor
dec
jo
outs
fs
imul
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
push
add
ins
arpl
ins
add
ins
ins
add
ins
ins
jbe
jb
add
je
push
jne
je
ins
gs
gs
jo
jb
add
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
je
outs
fs
gs
dec
outs
fs
add
je
dec
outs
fs
gs
popa
outs
fs
add
je
dec
outs
fs
add
je
gs
outs
fs
dec
arpl
xor
addr16
dec
gs
fs
je
push
outs
imul
push
jne
add
fs
push
gs
jne
arpl
gs
ins
jbe
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
push
je
arpl
jb
ins
add
je
gs
outs
add
popa
arpl
jb
arpl
inc
gs
jb
ins
gs
dec
outs
je
jb
add
je
popa
ins
add
jae
ins
bound
popa
ins
add
je
jne
ins
imul
jns
ins
gs
imul
imul
popa
je
inc
arpl
jo
outs
jb
inc
jb
popa
je
inc
outs
arpl
jo
outs
jb
push
imul
dec
popa
outs
popa
gs
push
inc
jb
jo
outs
push
gs
imul
imul
ins
popa
je
js
gs
imul
pop
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
imul
arpl
inc
gs
popa
ins
ins
imul
ins
bound
dec
imul
inc
jns
add
add
add
ja
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
add
add
ins
add
pop
add
inc
add
pop
add
add
dec
add
add
add
jp
add
dec
add
add
dec
add
xor
xor
add
xor
add
push
add
jp
dec
add
ins
add
dec
add
inc
add
add
add
dec
add
dec
add
add
dec
add
xor
arpl
ins
add
cmp
bound
ins
add
xor
add
dec
add
bound
inc
add
add
dec
add
imul
ins
add
push
add
add
xor
add
add
pop
add
xor
cmp
dec
add
add
xor
dec
add
dec
add
add
inc
add
xor
add
xor
dec
add
push
add
add
push
add
add
jp
pop
add
aaa
add
add
arpl
aaa
add
add
add
xor
sub
add
cmp
sub
add
add
add
add
xor
add
popa
add
add
cmp
jge
sub
add
ins
add
pop
add
inc
add
pop
add
add
dec
add
add
add
jp
add
dec
add
add
dec
add
xor
xor
add
xor
add
push
add
jp
dec
add
ins
add
dec
add
inc
add
add
add
add
pop
add
aaa
add
add
arpl
aaa
add
add
add
xor
sub
add
cmp
sub
add
add
add
add
xor
add
popa
add
add
cmp
jge
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
adc
push
add
jb
jae
imul
cmp
add
add
jne
ins
add
add
add
add
jne
je
jb
popa
add
and
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
ins
add
adc
add
jae
imul
cmp
add
ins
add
add
add
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
jnp
cmp
arpl
data16
bound
add
xor
sub
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
cmp
add
add
cmp
add
sub
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
xor
sub
add
add
add
add
add
add
add
add
xor
cmp
bound
xor
xor
data16
jge
add
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
add
ds
fs
in
(bad)
dec
test
dec
lods
sbb
pop
push
sbb
mov
sbb
adc
push
adc
sbb
adc
add
adc
or
or
adc
add
adc
push
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
push
adc
push
add
push
adc
add
add
add
push
add
add
add
add
add
add
push
adc
push
adc
add
adc
adc
push
adc
or
push
adc
push
adc
push
adc
push
add
adc
add
adc
push
adc
sbb
add
xor
or
add
add
add
add
add
add
adc
add
adc
adc
push
adc
adc
push
add
add
adc
cmp
or
adc
add
add
add
push
push
adc
add
adc
push
adc
add
sbb
cmp
push
sbb
push
sbb
push
push
add
adc
and
add
add
add
push
adc
add
push
adc
push
add
adc
push
adc
ins
add
adc
aaa
add
add
add
add
xor
xor
sub
add
popa
add
add
cmp
sub
add
add
add
aaa
add
add
add
add
add
xor
add
or
adc
adc
push
adc
push
adc
jno
push
sbb
add
sbb
or
add
sbb
and
sub
push
sbb
add
adc
add
les
adc
or
add
add
push
add
add
sbb
and
push
add
or
add
add
add
inc
add
xor
push
add
sbb
and
add
adc
and
add
adc
and
add
add
or
add
push
adc
push
add
push
push
adc
pop
add
sbb
or
add
adc
add
add
push
or
add
push
adc
add
add
adc
push
add
push
add
add
push
and
add
push
push
add
add
push
add
xor
add
adc
xor
add
push
and
add
adc
add
add
add
push
add
add
adc
pop
add
add
adc
jns
and
add
inc
add
add
add
and
adc
or
add
dec
pop
and
add
xor
push
add
add
js
and
add
js
add
adc
pop
add
and
sbb
and
add
inc
add
add
inc
pop
and
add
inc
adc
add
adc
xor
add
or
add
sbb
and
add
push
adc
push
or
add
adc
add
add
or
add
je
and
add
adc
add
adc
sbb
and
add
sbb
and
sbb
add
push
add
push
add
or
add
add
add
add
add
or
add
push
add
add
pop
add
add
or
add
or
add
or
add
or
add
push
or
add
add
add
push
adc
push
adc
add
push
push
add
add
sbb
add
push
sbb
add
or
add
sbb
sbb
add
sbb
push
add
sbb
adc
adc
add
add
or
add
push
add
sbb
add
sbb
adc
adc
add
add
or
add
adc
adc
and
add
push
push
and
add
add
add
add
or
adc
add
adc
adc
and
adc
adc
and
add
pop
push
and
add
xor
add
add
add
add
add
and
add
xor
xor
add
and
adc
add
add
push
add
add
and
add
adc
and
movs
add
test
and
sbb
adc
adc
adc
pop
pop
and
adc
and
adc
push
push
and
add
popa
sbb
and
add
pop
adc
add
add
adc
or
add
adc
or
add
adc
or
add
adc
push
and
add
sbb
adc
sbb
and
adc
adc
add
cmp
or
add
xor
add
push
adc
add
add
add
or
add
or
add
or
and
add
push
add
add
pop
add
add
add
add
and
add
add
push
or
add
add
add
add
gs
and
push
adc
add
or
adc
add
adc
push
add
add
push
add
or
add
sbb
jge
push
add
pop
sldt
adc
adc
popf
pop
add
add
popa
add
or
add
adc
add
push
add
push
push
add
add
add
or
pop
pop
add
add
pop
adc
add
add
pop
adc
adc
add
adc
pop
adc
adc
add
adc
pop
push
add
adc
gs
gs
add
add
sub
gs
add
add
gs
or
adc
adc
pop
adc
add
add
xor
sbb
mov
or
add
pop
adc
adc
add
sbb
pop
adc
sbb
add
sbb
pop
adc
adc
sbb
add
add
push
add
adc
add
or
push
add
add
popa
add
add
add
push
add
or
adc
push
add
push
add
push
push
add
add
push
push
pop
and
add
or
push
add
add
add
or
or
add
or
push
or
or
or
or
or
add
or
push
or
sbb
add
or
push
or
push
or
or
add
or
push
push
add
or
or
jns
or
sbb
adc
or
or
jns
or
sbb
sbb
add
or
jns
or
adc
sbb
adc
sbb
sbb
adc
add
push
push
push
add
push
add
push
push
sbb
add
add
sbb
push
push
pop
add
sbb
push
add
add
push
sbb
push
pop
add
adc
push
push
push
add
add
push
push
pop
add
sbb
push
add
add
add
push
add
add
sbb
add
sbb
add
or
or
add
add
adc
add
add
or
add
adc
add
or
push
adc
add
adc
add
add
add
add
add
push
add
push
add
add
inc
add
add
pop
add
push
push
add
pop
add
or
push
add
add
add
sbb
add
add
adc
add
add
adc
sbb
or
and
add
adc
sbb
sbb
or
sbb
push
adc
sbb
add
sbb
adc
sbb
push
add
add
je
add
pop
add
jb
outs
add
jae
add
inc
add
add
je
add
add
add
ins
or
add
adc
push
or
add
or
add
add
push
or
add
adc
adc
push
add
sbb
add
or
and
adc
aad
push
and
push
adc
add
add
pop
pop
add
add
jno
jno
add
adc
add
sbb
and
add
or
and
or
pop
and
add
and
add
or
add
or
and
or
and
push
and
add
and
add
or
sub
push
add
add
je
sub
add
mov
sub
sbb
sub
adc
sub
adc
adc
adc
adc
or
sub
add
or
add
and
adc
adc
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
add
sub
add
add
add
add
or
add
add
add
add
add
or
cmp
xor
xor
aaa
add
daa
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
aaa
add
push
and
add
sbb
add
add
add
inc
ins
ins
outs
ja
jne
je
jo
add
add
ins
add
add
add
add
call
add
add
or
add
add
add
or
add
add
add
add
inc
add
add
add
push
add
add
adc
push
add
add
add
push
add
push
or
add
adc
or
add
jns
push
adc
push
add
add
or
add
adc
sub
push
add
push
push
push
push
add
push
add
sub
sub
or
pop
push
push
push
push
push
push
adc
sbb
push
adc
dec
pop
adc
adc
or
dec
adc
adc
push
push
push
adc
and
adc
and
add
sbb
add
push
add
pop
add
adc
add
sbb
pop
add
push
push
pop
adc
adc
push
adc
xor
pop
add
add
xor
xor
adc
adc
add
add
and
add
add
inc
adc
pop
add
adc
add
xor
xor
adc
add
inc
push
pop
add
inc
adc
push
add
push
adc
or
add
rol
push
or
adc
push
adc
push
adc
adc
push
add
dec
add
add
add
and
or
adc
add
push
push
push
push
adc
adc
push
or
sub
and
add
adc
sbb
or
add
push
sbb
adc
add
adc
add
sub
ins
add
jne
and
adc
add
cmp
and
sbb
add
add
lgdtd
sbb
jns
cmp
test
pop
add
adc
add
push
adc
push
add
push
adc
push
sbb
adc
adc
adc
add
add
or
pop
add
add
jns
push
pop
and
or
adc
or
adc
adc
adc
xor
pop
add
adc
add
xor
xor
adc
adc
pop
add
xor
xor
adc
or
adc
adc
adc
adc
xor
adc
add
or
adc
add
xor
xor
xor
adc
or
adc
add
add
or
adc
pop
add
push
push
add
sbb
add
sbb
or
add
sbb
push
push
sbb
push
or
add
or
adc
add
add
add
and
sbb
add
push
sbb
and
or
sysret
or
push
push
sbb
add
sub
add
push
sbb
lgdtd
sub
add
add
add
lidtd
add
sbb
adc
dec
adc
and
and
sbb
pop
push
push
adc
mov
adc
add
adc
adc
adc
adc
adc
and
pop
or
adc
mov
adc
or
add
push
add
add
and
adc
adc
or
add
js
js
js
js
adc
adc
adc
add
pop
adc
add
pop
adc
and
pop
or
pop
adc
or
adc
add
xor
xor
pop
adc
adc
and
adc
add
add
push
push
and
add
cmp
add
add
adc
add
xor
sbb
push
adc
sbb
add
add
add
add
push
adc
add
push
add
or
sbb
pop
add
jns
or
add
adc
adc
push
adc
push
or
add
adc
or
add
adc
adc
adc
add
adc
adc
adc
adc
adc
pop
and
add
add
add
add
push
push
add
push
sbb
sbb
pop
add
pop
add
add
push
adc
add
adc
push
push
adc
adc
adc
push
and
add
and
add
mov
sub
or
push
add
push
add
add
sbb
adc
or
add
push
add
push
add
add
add
add
push
or
add
adc
adc
adc
pop
add
push
adc
push
or
adc
adc
pop
add
add
and
add
adc
xchg
add
mov
sub
xchg
add
add
sub
sub
add
xor
add
add
cwde
add
add
add
mov
pop
add
add
pop
add
add
push
add
add
sbb
pop
add
add
adc
jo
add
or
adc
or
or
add
push
sbb
xor
mov
xor
adc
adc
sbb
xor
add
add
and
pop
push
add
adc
add
sbb
and
sbb
sub
sbb
adc
and
or
pop
adc
add
add
adc
add
rol
adc
adc
or
adc
add
pop
add
adc
gs
adc
adc
adc
adc
adc
and
add
or
add
adc
pop
sbb
or
adc
adc
adc
pop
pop
add
adc
adc
adc
or
add
add
pop
add
and
or
and
adc
adc
or
adc
adc
and
adc
or
adc
int3
pop
and
add
or
add
add
inc
or
add
cmp
add
add
sbb
pop
add
xor
les
and
add
adc
adc
add
mov
xor
add
add
add
adc
add
add
add
pop
and
adc
pop
add
adc
or
add
or
adc
adc
add
add
add
add
int3
or
add
adc
or
add
add
adc
push
add
adc
push
add
add
add
sbb
adc
add
add
add
pop
add
add
pop
push
and
sbb
and
sbb
adc
adc
add
and
adc
add
sbb
pop
sbb
lgdtd
sbb
pop
adc
add
adc
adc
adc
or
add
xor
add
adc
add
or
lods
adc
sbb
pop
add
pop
or
add
add
pop
sbb
add
sub
add
sub
add
sub
push
and
sbb
sbb
add
push
adc
sub
sub
add
sbb
sbb
sbb
sub
and
lods
or
add
gs
add
and
sbb
pop
and
adc
adc
or
adc
pop
add
add
adc
pop
add
jns
xor
cmp
add
add
pop
add
sbb
sysret
add
add
xor
xor
add
add
add
sbb
pop
add
sbb
sbb
add
add
or
or
push
add
or
add
add
add
or
pop
add
add
push
add
add
lgdtd
adc
pop
add
add
adc
add
add
inc
adc
and
or
inc
push
add
adc
add
push
add
add
dec
push
and
add
sbb
push
push
or
cmp
sbb
or
add
or
push
sbb
adc
sbb
push
or
adc
or
adc
adc
push
push
adc
adc
add
xchg
add
cdq
push
and
sbb
sbb
or
xchg
adc
and
popf
sbb
adc
lidtd
xor
movs
sbb
add
adc
pop
add
push
sbb
sbb
pop
add
sub
add
pop
or
add
adc
adc
sub
sbb
add
add
pop
pop
add
add
adc
sbb
push
or
adc
add
pop
pop
add
sbb
sbb
add
pop
pop
lidtd
push
sbb
add
add
adc
or
add
adc
push
adc
push
or
add
xor
and
add
or
adc
add
and
adc
adc
adc
pop
adc
push
push
or
add
adc
adc
pop
adc
push
push
and
adc
add
xor
adc
add
push
push
push
push
push
push
push
adc
push
adc
push
push
add
mov
add
add
sub
sbb
add
add
jno
and
add
adc
pop
add
ins
add
add
adc
or
adc
push
or
adc
push
or
pop
or
adc
or
adc
add
adc
mov
adc
or
add
push
push
adc
lidtd
xor
adc
adc
or
xor
adc
add
push
sbb
push
push
sbb
sbb
add
adc
adc
push
add
and
add
or
add
add
adc
adc
add
adc
and
adc
add
jno
add
cmp
add
push
and
adc
add
adc
push
adc
jno
push
adc
add
adc
pop
add
jns
pop
add
sbb
add
sub
adc
add
or
loope
add
adc
and
and
sbb
add
in
add
adc
add
xor
and
add
xor
or
add
adc
pop
and
adc
pop
or
add
pop
adc
and
adc
adc
adc
sbb
add
add
or
add
and
adc
and
adc
add
adc
adc
add
or
add
sub
adc
adc
sbb
adc
adc
sbb
push
or
adc
sbb
pop
add
add
add
or
or
pop
push
or
or
add
or
or
add
jno
cmp
add
or
sbb
add
sbb
add
add
adc
sbb
pop
add
sbb
sbb
and
sbb
or
adc
jno
xor
sbb
adc
add
fstp
sidtd
or
or
add
or
add
or
or
or
or
or
pop
add
add
pop
push
sidtd
or
add
sbb
add
or
jnp
jge
xlat
icebp
loope
outs
jmp
sbb
add
movs
sbb
lock
adc
dec
out
xchg
rcl
int3
cmp
outs
shl
sub
push
inc
sbb
pop
inc
and
inc
test
mov
cmp
mov
sbb
stos
xchg
sub
fwait
inc
cmp
pop
mov
or
mov
xor
sbb
loopne
loop
mov
mov
push
test
lods
jg
sti
dec
or
lods
nop
fwait
fwait
js
mov
ret
push
icebp
fs
int
push
sub
push
rol
lea
scas
test
mov
dec
ins
(bad)
mov
dec
jmp
ds
pop
(bad)
fisubr
and
sbb
dec
out
jp
test
clc
fst
aad
(bad)
aam
pushf
jmp
iret
cmps
outs
fistp
pop
stos
mov
icebp
test
push
push
sub
std
(bad)
adc
outs
sbb
inc
pop
xchg
stos
cmp
sbb
jo
xchg
out
popa
leave
or
mov
adc
sbb
es
push
jnp
mov
push
sbb
sbb
scas
in
cmp
fild
ret
mov
mov
nop
jl
pop
sub
push
dec
popa
data16
cmps
lods
mov
jge
ins
jbe
sub
inc
jle
stc
loope
cmp
fldl2e
xchg
imul
inc
test
push
nop
sub
adc
cmp
adc
mov
ds
mov
rol
add
jb
rcr
add
pop
inc
imul
outs
sub
pushf
rcl
pop
adc
stos
inc
loopne
movs
pusha
inc
out
cmps
mov
stc
icebp
fadd
fist
das
or
inc
sub
xor
(bad)
and
dec
xchg
xchg
or
sbb
cmp
mov
ror
dec
aam
add
lods
adc
imul
fmul
inc
pop
es
test
sub
fsub
lahf
icebp
clc
test
inc
dec
ins
loope
and
jbe
jnp
outs
lea
mov
out
adc
push
gs
mov
jl
sub
cdq
loop
sub
in
xchg
pop
test
sbb
mov
outs
imul
or
call
int3
movs
pop
mov
sub
push
mov
les
jae
(bad)
scas
or
cmps
mov
pop
xor
mov
sti
jl
popa
out
sti
outs
pop
pop
inc
push
mov
repnz
lods
mov
sub
scas
dec
push
shl
hlt
popf
jno
sti
rcr
in
fdiv
mov
sbb
ficomp
sahf
xchg
iret
or
fwait
mov
in
rcl
iret
int
fisttp
retf
test
out
addr16
cmps
leave
push
jbe
outs
lods
adc
adc
and
or
push
aaa
sar
ss
push
div
aad
mov
aam
mov
pop
fdivr
jo
pop
jl
jl
mov
into
cmps
xlat
push
xchg
stc
jmp
imul
mov
imul
(bad)
stc
cmp
mul
outs
fisttp
mov
mov
(bad)
jge
lods
test
je
jnp
or
push
aaa
in
mov
xchg
inc
dec
dec
xchg
fadd
enter
sub
push
rcr
lock
jp
leave
dec
mov
std
not
sub
push
push
mov
ins
push
add
adc
or
sub
cmp
sti
and
add
or
jl
pop
mov
enter
xlat
(bad)
mov
xlat
jno
pop
rcr
mov
push
mov
push
cmc
push
cli
retf
xchg
mov
mov
sbb
mov
adc
data16
outs
and
jg
stc
test
ret
outs
jb
inc
(bad)
jmp
push
xor
jmp
or
jb
call
mov
data16
mov
imul
push
mov
adc
out
ja
int
imul
push
dec
or
fsubrp
daa
xor
xchg
xor
imul
aam
aas
call
outs
div
sahf
inc
movs
(bad)
jmp
(bad)
js
pop
mov
mov
mov
or
loopne
jg
lods
out
push
jmp
test
mov
adc
mov
call
fdivr
test
repz
ins
int
pop
push
outs
mov
and
push
jecxz
and
adc
inc
jno
(bad)
stos
jno
arpl
dec
mov
push
mov
ret
and
ins
out
pop
mov
adc
mov
or
ins
sub
pop
ins
shl
sbb
setno
push
cmp
(bad)
push
dec
fcom
mov
loope
stos
or
jle
scas
scas
pop
xchg
push
int3
sar
sbb
jne
outs
pop
mov
cli
xchg
(bad)
movs
dec
or
cmp
sub
gs
rol
pop
or
js
mov
mov
xor
(bad)
pop
cmp
test
aas
lods
cs
test
xlat
(bad)
aad
jae
ins
jae
daa
std
ins
inc
shl
sar
ffreep
(bad)
(bad)
cmp
pushf
push
cmp
cmp
cdq
inc
xor
pop
lahf
xor
aam
and
xchg
xor
mov
xor
fistp
mov
test
arpl
inc
pop
mov
mov
pop
inc
lods
mov
stc
test
push
inc
addr16
mov
fdivr
mov
mov
and
mov
es
(bad)
cmps
mov
das
pop
cmps
mov
xchg
jecxz
fwait
loopne
lods
les
mov
xor
inc
or
sub
es
xchg
movs
inc
mov
sbb
cmp
cmps
fistp
xor
sar
gs
dec
xchg
out
fcom
mov
fidiv
push
or
xorps
les
cli
push
pop
push
lods
int3
sbb
and
repz
aad
cld
sti
lods
xchg
fisub
add
call
sbb
test
mov
inc
mov
je
les
outs
out
sub
aam
and
cld
mov
and
ficom
pop
jg
push
push
xor
sbb
mov
xchg
fist
(bad)
jle
pop
lea
mov
fsub
sbb
pop
in
mov
jo
cmp
cli
in
mov
dec
jae
xor
stc
mov
push
sub
add
stos
sub
adc
(bad)
jne
mov
cmp
pop
(bad)
jo
or
adc
add
add
mov
push
mov
dec
mov
cmp
es
inc
push
and
mov
xlat
bound
xchg
scas
add
in
add
mov
cli
fcom
(bad)
shr
mov
sbb
daa
cmc
sahf
push
cdq
pop
push
or
sub
push
ds
pusha
outs
shl
sub
mov
sbb
push
jle
nop
push
push
xchg
enter
mov
out
rcr
enter
fiadd
mov
mov
test
scas
cmp
push
popf
or
jns
adc
ins
int
cli
daa
mov
test
push
repz
std
test
mov
pop
add
mov
xor
repz
xchg
dec
mov
jg
xchg
mov
test
mov
adc
in
fdiv
and
dec
popf
out
enter
(bad)
int
add
sar
sti
(bad)
mov
sbb
out
or
in
call
loopne
dec
xor
stos
aad
jo
lods
jge
cwde
pop
fwait
dec
cwde
inc
push
xor
lds
mov
pop
pop
nop
scas
push
sbb
pop
dec
ja
dec
xchg
ret
add
xor
mov
fcomip
retf
jle
std
inc
jbe
xchg
dec
mov
mov
xchg
jae
or
push
into
mov
mov
test
iret
mov
data16
inc
hlt
add
dec
daa
mov
inc
fmul
mov
cmp
jmp
sbb
enter
pop
outs
std
in
cmps
scas
rcl
mov
fld
sub
ret
(bad)
pushf
enter
jnp
daa
out
imul
xchg
out
popa
(bad)
cld
cmc
fldcw
call
je
ins
ror
sbb
imul
pop
lods
pop
sti
in
rdpmc
std
or
imul
in
mov
les
push
lahf
sub
adc
push
adc
xchg
repz
inc
pop
call
mov
retf
inc
or
test
in
jecxz
shl
cs
mov
pusha
outs
(bad)
movs
inc
sub
sbb
jb
imul
add
loop
mov
mov
js
sti
imul
dec
popa
mov
or
lods
(bad)
mov
inc
lds
sti
in
sbb
add
test
out
or
and
pop
rol
jmp
cli
mov
jnp
or
cmps
mov
jg
mov
and
cld
retf
outs
cmp
gs
cmp
sub
push
daa
sub
xchg
mov
mov
push
mov
cmp
adc
jo
adc
aam
and
icebp
(bad)
cmp
das
push
div
dec
imul
bound
out
jo
imul
inc
mov
jmp
push
push
push
push
nop
dec
repnz
add
movs
adc
mov
dec
sub
pop
mov
jmp
lock
xchg
ret
ss
sub
mov
sub
and
test
xlat
jne
mov
icebp
cmp
lds
jnp
test
xchg
imul
outs
push
fstp
stos
pop
jae
jge
out
pop
lea
(bad)
and
xor
jecxz
repnz
scas
xlat
fpatan
aas
fwait
mov
into
adc
inc
fidiv
int
shl
sar
les
mov
test
mov
xlat
js
mov
pop
inc
jmp
mov
or
pop
outs
xor
inc
jecxz
rcl
pop
cmp
imul
cs
mov
int
in
xor
xor
fisub
push
inc
cli
imul
mov
outs
xchg
enter
or
push
out
push
(bad)
mov
add
add
stos
mov
dec
pop
lds
dec
dec
mov
xchg
sub
int
mov
jl
nop
pop
test
mov
cmp
fwait
mov
out
ja
mov
jnp
in
test
or
fcmovbe
add
scas
mov
cmp
jmp
leave
push
retf
xchg
call
sahf
popf
(bad)
out
cmp
sub
imul
iret
sub
mov
cmps
push
sub
add
movs
call
push
test
les
nop
mov
(bad)
ds
xor
add
sub
or
arpl
adc
movs
fld
jp
or
cmp
mov
into
(bad)
dec
cmp
nop
pop
arpl
lahf
fld
add
inc
cmc
mov
leave
cmps
cmp
add
jb
mov
push
xchg
mov
popf
mov
gs
cdq
sbb
jg
dec
mov
(bad)
stos
setg
xchg
xchg
or
pop
or
icebp
xor
ja
add
cli
mov
add
jmp
push
xchg
mov
fisttp
inc
jge
mov
nop
sbb
jle
fwait
push
in
idiv
pop
sahf
cmp
sbb
int
dec
mov
(bad)
cmp
out
xor
mov
repz
or
dec
sub
ds
xchg
popf
add
xchg
add
ins
or
jno
out
jae
cmps
mov
jae
push
cld
pushf
mov
les
aas
cwde
mov
and
pop
movs
fwait
xor
loop
fst
push
clc
mov
popa
jno
and
enter
rcl
push
xor
neg
lea
movs
mov
loop
enter
or
xchg
stc
add
dec
data16
mov
mov
(bad)
cmp
dec
stos
aas
push
hlt
pop
in
jb
dec
in
pop
cmp
(bad)
pop
hlt
aaa
adc
(bad)
and
inc
jg
jbe
pop
xlat
jecxz
lds
(bad)
in
push
cli
push
push
(bad)
mov
les
cs
test
jmp
pop
pushf
jns
sbb
cmc
inc
imul
dec
popf
das
pop
xor
xor
ja
es
adc
jo
jno
sahf
rol
push
dec
add
iret
xor
mov
vcvtps2pd
cmp
sti
stc
xchg
in
pop
fistp
push
(bad)
fistp
pop
cmp
push
mov
mov
push
jecxz
push
add
xor
sti
xchg
xor
add
xor
in
jbe
inc
rcl
xchg
retf
cwde
sbb
fisubr
ror
mov
push
mov
imul
jae
sbb
stos
pop
xchg
cmc
xchg
and
inc
scas
jae
and
pusha
mov
xor
fistp
pop
push
adc
fild
aam
inc
arpl
popa
in
push
addr16
or
and
jge
pushf
mov
dec
jl
push
mov
push
jae
xchg
(bad)
sbb
jnp
lds
and
xor
cmp
in
cmps
call
or
xor
pop
ja
lahf
mov
enter
mov
int
adc
sub
push
mov
xchg
jne
lods
das
mov
dec
in
sbb
jle
dec
pop
or
ja
hlt
fdivr
mov
ins
(bad)
addr16
dec
pop
aam
jle
xchg
call
pop
dec
xor
mov
outs
or
(bad)
sbb
mov
mov
adc
cmp
xor
and
dec
std
xor
xchg
xchg
sahf
pop
dec
pop
scas
test
repnz
add
pusha
stc
pop
or
repz
sar
jecxz
mov
push
push
xchg
xor
int
xor
fsubp
mov
dec
push
idiv
iret
jmp
inc
xchg
retf
les
cs
mov
mov
pop
fstp
adc
aad
push
inc
mov
jmp
fistp
js
fist
add
add
int3
shl
fisubr
pop
adc
and
aam
int3
out
pop
out
jns
test
add
dec
call
call
ror
jbe
call
fcom
sar
adc
cwde
popa
pop
loop
jg
sbb
inc
or
imul
xchg
mov
das
fwait
sub
sbb
bound
fist
or
jp
pop
clc
sbb
xor
cmp
xor
xor
in
leave
xor
or
movs
cmc
mov
aam
mov
inc
xor
push
cmp
push
ja
mov
mov
ja
push
and
pop
arpl
add
addr16
movs
pop
xor
inc
test
cwde
rcl
mov
gs
jg
sub
in
or
je
adc
retf
ret
xor
pop
retf
fld
(bad)
scas
ss
loop
push
inc
xchg
mov
iret
jns
icebp
aas
cmc
fcomp
push
mov
js
jnp
xchg
ins
push
shl
adc
sahf
or
ja
sub
and
movs
das
cmp
(bad)
pop
and
mov
ret
inc
fdivr
ret
bound
add
enter
pop
xchg
xchg
jae
lods
stc
mov
push
mov
popf
pop
inc
inc
mov
enter
imul
or
inc
cmp
push
add
fldenv
stc
inc
mov
je
xchg
lods
jg
add
sbb
xor
mov
out
mov
pushf
cs
ret
(bad)
scas
mov
push
or
and
jnp
and
and
mov
call
adc
jne
sbb
icebp
shl
rcl
fcom
nop
dec
rol
mov
fcom
mov
dec
jmp
fisub
push
jge
stc
lods
dec
pop
pop
repz
and
inc
rcl
data16
sub
imul
enter
cwde
ret
cmp
or
scas
jmp
test
xlat
in
mov
test
push
push
stc
jbe
in
shl
or
sub
inc
cmp
ins
sbb
inc
imul
mov
pop
in
pusha
test
cmp
cmp
imul
or
push
addr16
pop
paddusw
jmp
xchg
jns
and
jno
sbb
loope
sbb
(bad)
aaa
lods
ds
cld
pusha
mov
fucomi
into
stos
sbb
mov
cli
jb
pop
add
in
fstp
and
xchg
xchg
arpl
loope
scas
out
pop
bound
cmps
cmp
pop
mov
cmps
inc
and
and
or
pusha
mov
adc
or
loope
data16
fucomi
and
mov
cmp
jbe
dec
mov
ret
inc
pop
lods
aas
arpl
out
push
xchg
xchg
adc
scas
call
mov
jo
mov
ins
jp
call
shr
lods
or
dec
push
pusha
enter
sbb
mov
mov
pop
add
clc
or
leave
sbb
mov
sar
inc
nop
addr16
jge
push
rcl
fs
mov
outs
dec
pop
rcl
outs
xor
jno
dec
pop
and
mov
cmp
aad
mov
and
pop
jae
int3
mov
sub
test
jecxz
dec
iret
retf
lds
(bad)
bound
sar
push
fild
sahf
add
gs
in
fnstsw
cmp
out
popa
shl
mov
push
(bad)
sub
call
cli
dec
fidivr
fisttp
push
sbb
pop
lds
aas
jo
into
jo
js
sbb
sbb
jge
adc
sbb
fsubr
or
repnz
cwde
mov
jmp
adc
add
xchg
mov
mov
cmps
popf
outs
aaa
jecxz
mov
xchg
or
(bad)
ror
hlt
call
jmp
mov
(bad)
mov
addr16
dec
or
push
jl
inc
push
imul
fisttp
hlt
cwde
leave
je
cmp
lock
ja
xchg
inc
mov
stos
cld
xchg
call
movups
je
xchg
pop
repz
cmp
inc
pop
(bad)
out
int3
lds
mov
call
movs
js
jb
push
ja
push
inc
and
in
mov
(bad)
cmp
jle
xor
mov
test
(bad)
mov
arpl
jg
inc
into
push
dec
inc
fwait
sub
mov
mov
add
les
mov
popf
fisub
loopne
leave
dec
fadd
jle
dec
int
int3
(bad)
push
add
push
mov
inc
sbb
xchg
mov
mov
dec
std
stos
pcmpeqb
and
cmp
dec
cmp
push
(bad)
jg
std
inc
xchg
(bad)
div
movs
inc
scas
inc
call
ret
leave
push
out
xor
cmc
push
push
mov
mov
pushf
jge
inc
aas
sbb
mov
adc
clc
pop
and
outs
adc
jne
xchg
or
fdivr
hlt
daa
xor
add
sub
bound
adc
sbb
xchg
cwde
in
mov
pop
hlt
push
stc
stc
xchg
adc
ins
std
lock
adc
mov
mov
pop
xchg
push
mov
out
xchg
dec
mov
loopne
ja
add
jg
sbb
sub
adc
arpl
dec
lock
nop
jbe
(bad)
mov
sar
jno
pop
cwde
jecxz
dec
pop
mov
mov
sahf
pop
vmread
mov
aaa
out
xchg
mov
test
jmp
outs
push
div
outs
sbb
movs
(bad)
jns
je
mov
dec
xlat
mov
and
dec
int3
cmc
jnp
xor
(bad)
xchg
ret
jmp
cmp
fadd
movs
not
sbb
pop
xor
mov
je
or
adc
add
fs
pop
bound
dec
les
xchg
arpl
xor
call
inc
inc
push
sahf
movs
aas
dec
out
neg
mov
in
sub
cmp
jns
xchg
jnp
sbb
sbb
ret
and
jecxz
int
in
mov
jmp
inc
out
(bad)
fiadd
pop
div
xchg
ss
pushf
mov
rol
jno
fcom
lea
mov
pop
adc
cmps
(bad)
jae
outs
cdq
mov
ins
add
icebp
sub
xchg
das
dec
dec
test
xchg
mov
lods
push
jge
xchg
ins
into
jmp
push
outs
adc
xchg
pop
push
xchg
imul
jg
cmp
sub
xor
mov
xor
cmp
xor
cmps
out
add
stc
sti
cmp
dec
mov
mov
jmp
ret
ja
les
mov
mov
mov
(bad)
jg
xor
cmc
xor
popf
hlt
(bad)
cs
xchg
pop
xchg
jne
sbb
es
cdq
vmovss
(bad)
fstp
dec
jl
add
pop
jb
retf
dec
or
pop
and
jno
pop
lahf
sbb
je
rcr
cmps
ss
mov
or
jno
out
out
leave
add
js
pop
(bad)
cmp
lods
and
mov
(bad)
push
dec
jns
ret
adc
inc
cmps
adc
adc
or
mov
sub
pop
push
sbb
mov
mov
scas
dec
mov
jne
xchg
mov
cli
xchg
pop
leave
pop
pushf
fst
push
and
mov
leave
pop
pop
mov
loop
dec
clc
push
add
cs
mov
push
loop
mov
aad
adc
test
cmps
cs
fidiv
and
mov
enter
mov
imul
out
stos
repz
sub
arpl
pop
pop
add
repnz
gs
jecxz
mov
in
out
lods
sub
push
lea
out
or
pushfw
cmps
shl
stos
xlat
inc
xor
or
or
retf
or
stc
fmul
(bad)
in
sbb
cmps
push
fld
inc
mov
out
jmp
ins
mov
fmul
jecxz
pop
loope
push
xchg
pop
cmp
sbb
xchg
pop
xchg
sub
and
ret
and
xlat
test
rcl
cdq
test
fstcw
dec
sub
loope
sub
aam
repz
jg
sti
bound
fcomp
(bad)
lock
in
mov
add
xchg
sub
push
outs
fldenv
xor
imul
cmp
sbb
das
stc
jg
stos
jl
ja
outs
add
imul
cwde
cmp
mov
cli
addr16
push
sub
not
aaa
push
jmp
mov
push
pop
pop
xlat
(bad)
jecxz
fwait
cmp
jae
mov
push
fnstsw
sbb
data16
mov
xchg
ins
ss
outs
imul
sti
or
xchg
sub
ror
lods
mov
lods
pop
imul
pushf
sbb
dec
je
mov
sahf
xchg
xchg
lds
fimul
add
retf
jmp
pop
push
in
xchg
aam
imul
jbe
push
adc
mov
xchg
push
outs
inc
xor
jns
mov
bnd
arpl
sub
sbb
push
stos
aas
ss
cdq
shl
mov
cmp
in
xor
int
mov
and
adc
cmc
dec
cmp
jmp
xor
mov
adc
add
mov
inc
inc
not
pop
pop
cmp
jg
jno
ins
inc
in
(bad)
fisttp
addr16
xor
cmp
xchg
mov
jecxz
dec
(bad)
mov
inc
mov
and
call
call
cmc
cmp
stos
push
mov
pop
fistp
scas
imul
iret
js
mul
jmp
pushf
das
sbb
enter
cld
shld
sub
fld
mov
retf
repnz
adc
loopne
out
xchg
jo
push
sbb
or
shl
jbe
add
mov
mov
jbe
sbb
ret
dec
enter
dec
jo
mov
mov
(bad)
mov
sub
xor
push
adc
add
ins
mov
mov
cli
inc
push
fst
aas
std
pusha
push
movq
fisttp
mov
imul
pop
xor
sub
cmp
not
or
ds
dec
add
adc
enter
ficom
inc
xchg
jnp
jg
cmp
je
fisttp
adc
stos
mov
retf
popf
(bad)
adc
je
pop
std
cmp
call
pop
adc
sbb
pop
xchg
lds
lock
mov
jnp
outs
dec
stos
xchg
clc
ret
jnp
inc
ds
adc
add
and
fild
xchg
push
aad
aad
stos
stc
xchg
callw
sub
std
jb
div
sub
movs
ins
cmp
jecxz
scas
push
outs
(bad)
xor
loop
mov
cmps
push
jne
call
data16
cmp
pop
xchg
scas
jecxz
iret
rcl
cmp
call
adc
shr
adc
jbe
aas
js
call
mov
jp
test
jge
dec
imul
(bad)
out
mov
lds
cmp
or
xchg
movs
stos
enter
cs
popf
outs
pop
imul
pop
call
lods
mov
xor
(bad)
xor
lahf
jae
push
adc
cld
loop
cmp
pop
out
mov
adc
cmp
mov
retf
cmp
retf
mov
xchg
stos
sti
cmps
mov
jae
addr16
jns
mov
dec
mov
sahf
out
leave
push
pop
mov
cmp
addr16
nop
in
enter
test
fwait
sub
xchg
out
xchg
retf
sbb
add
out
fdivrp
ss
sub
repnz
sbb
bound
popa
out
pop
ins
xchg
mov
test
push
push
fst
push
sbb
dec
add
out
fisub
into
pop
shl
fcom
clc
fcom
fidivr
cmps
cli
jae
hlt
mov
lahf
adc
push
call
icebp
mov
cmp
stc
add
xchg
mov
pop
mov
dec
cmp
mov
or
fdivr
dec
clc
cdq
loopne
and
add
cli
sub
jno
push
and
stos
leave
std
adc
mov
es
shr
shl
outs
jns
pop
ret
dec
inc
sbb
mov
enter
jmp
es
adc
arpl
jns
int3
jp
xchg
or
out
mov
(bad)
es
push
js
call
cmp
test
popa
retf
dec
pop
mov
(bad)
sahf
scas
pusha
mov
fcmovb
or
jp
sub
sbb
icebp
add
sbb
lds
arpl
mov
movs
fild
lods
inc
sub
pop
cmps
dec
push
mul
xchg
out
inc
fidiv
imul
jbe
dec
mov
push
xor
mov
and
nop
push
fisub
adc
and
xor
test
clc
lea
xlat
xor
ins
jae
mov
stc
inc
and
xchg
in
ins
movs
rcr
ss
imul
jns
lods
mov
ja
sub
ficom
out
sub
cwde
mov
sahf
add
div
ja
mov
cli
push
xchg
out
cmp
mov
push
and
das
mov
std
hlt
sti
push
jecxz
cdq
sbb
cdq
ss
and
mov
test
shr
retf
in
adc
inc
jbe
pop
cmp
lods
popf
imul
arpl
nop
fwait
dec
dec
xor
stos
(bad)
mov
xchg
sti
ret
mov
fidiv
sbb
(bad)
pop
xor
(bad)
jae
adc
mov
es
xlat
push
cmps
adc
inc
and
loopne
imul
push
mov
push
xchg
test
sbb
mov
jnp
adc
adc
lods
sbb
jno
retf
dec
call
shr
test
jle
cdq
pop
stos
or
xchg
cmp
mov
xchg
int3
mov
sub
jmp
xor
cmc
or
sar
mov
pusha
lods
push
mov
jg
jmp
lods
leave
mov
shr
scas
mov
mov
push
cmp
add
adc
jle
or
and
sbb
mov
imul
jmp
cmp
out
or
xor
sub
push
adc
sub
push
fiadd
sub
push
std
jle
add
mov
sub
push
out
stos
mov
lds
shl
mov
test
adc
fwait
in
aad
mov
jl
fwait
call
mov
and
cmp
jmp
pop
cmp
imul
in
call
jle
hlt
outs
je
mov
js
pop
mov
gs
retf
sbb
mov
pop
xor
jle
imul
xor
add
and
pop
jae
adc
add
gs
jnp
mov
repnz
icebp
xchg
mov
jb
rol
jl
rol
(bad)
mov
lock
ror
xchg
mov
cmp
pop
ret
cmps
int
mov
push
push
fcmovu
cmp
adc
jno
shl
push
in
add
cli
jae
push
and
inc
and
out
jns
call
sub
jne
xor
mov
mov
sbb
cmp
sub
je
sub
xor
in
(bad)
in
test
aad
ret
mov
mov
lock
mov
mul
jp
mov
int3
cld
test
sub
cmp
dec
enter
inc
imul
test
(bad)
inc
scas
test
mov
cld
mov
ret
adc
int
fst
jle
pop
out
jns
sbb
xlat
div
mov
inc
outs
mov
fmul
push
ja
pop
inc
jnp
leave
jns
mov
ret
mov
add
push
shl
mov
daa
cmp
xlat
mov
in
fst
jecxz
arpl
lods
xchg
stos
mov
xchg
pop
dec
cmc
outs
in
lods
movs
push
loop
cmp
push
and
imul
mul
and
fimul
xchg
inc
movs
aam
inc
push
adc
fadd
in
xchg
mov
retf
ror
aas
push
adc
js
popa
mov
push
mov
movs
daa
inc
neg
and
jno
jbe
inc
cs
mov
movs
mov
movs
ror
mov
icebp
pop
pop
mov
int3
test
dec
fucomip
pop
inc
pop
ret
mov
sbb
out
xchg
imul
xchg
lea
leave
mov
(bad)
sbb
les
push
xchg
mov
out
ins
mov
ja
or
aas
mov
xchg
jbe
ror
jmp
es
ja
and
mov
xor
dec
mov
cmps
das
in
jno
shr
or
jg
es
imul
pop
xor
es
fucomip
lahf
cmp
sbb
sub
jp
lods
fdivr
push
fdivr
mov
pop
addr16
and
bound
and
call
ret
lds
sbb
dec
cmp
pop
(bad)
das
cmp
adc
stos
jnp
outs
add
out
cmp
jns
nop
inc
std
outs
push
inc
xor
gs
test
in
pop
mov
iret
mov
je
cdq
jb
mov
jle
push
imul
push
imul
cmp
dec
ficom
test
xor
xor
icebp
lea
jp
paddd
loopne
dec
mov
stos
les
aam
mov
aaa
adc
add
mov
jp
int
cmps
mov
pop
xor
cmps
xchg
lods
into
jle
mul
ins
pop
fdivr
ins
xchg
cmp
lds
jns
test
sbb
xchg
mov
shr
hlt
test
jb
dec
mov
in
imul
xlat
mov
iret
mov
adc
xor
mov
mov
ret
or
push
in
adc
cmp
fisubr
add
mov
inc
ss
jp
es
or
(bad)
fstp
jl
mov
and
dec
call
(bad)
push
cmp
loopne
test
xchg
and
je
xchg
or
stos
xor
es
sahf
seto
mov
mov
mov
mov
les
push
mov
pop
jge
dec
dec
(bad)
stos
mov
add
iret
dec
lock
aad
out
sti
and
mov
scas
call
cmp
add
or
sbb
sbb
ret
pop
or
sub
sub
fadd
inc
push
jmp
sbb
stc
lahf
movs
dec
ss
ret
xchg
clc
xchg
shr
adc
movs
sbb
mov
ins
ret
movs
idiv
lea
sbb
ds
mov
pushf
push
icebp
fadd
imul
es
(bad)
call
sub
or
mov
nop
stos
cmp
call
push
(bad)
dec
(bad)
call
lock
cmp
jo
shr
adc
or
inc
or
leave
cmp
pop
addr16
and
push
pop
ss
repz
cmc
mov
sbb
and
fiadd
push
adc
dec
test
sub
jne
adc
(bad)
ret
xchg
xor
adc
adc
in
sub
pop
icebp
shufps
pop
cmp
out
jmp
ja
xchg
add
ror
shr
pop
imul
jecxz
clc
movs
or
iret
fimul
scas
(bad)
sar
adc
(bad)
mov
sub
sbb
sar
mov
repz
pop
inc
adc
imul
pop
push
test
out
sub
mov
daa
fsub
out
movs
inc
jnp
stc
ss
or
(bad)
int3
xor
call
add
fisttp
cs
mov
loope
sub
(bad)
popa
aam
dec
fcmovnb
sti
cmps
jge
mov
aam
fild
sub
popf
in
pop
(bad)
dec
cmp
pushf
or
xchg
pushf
push
cmc
mov
pop
xlat
inc
or
cmp
add
inc
daa
pop
int3
mov
xor
(bad)
push
sbb
sar
sbb
cmps
jne
xor
andps
push
push
lods
mov
dec
icebp
inc
(bad)
mov
je
adc
jo
shr
jne
add
jbe
or
stos
test
xchg
pushf
inc
mov
adc
mov
pop
jmp
sub
into
mov
and
add
adc
adc
jecxz
aad
lea
add
jmp
mov
sahf
loop
cmps
shr
fucomi
popf
scas
xchg
lea
add
xor
mov
pop
(bad)
retf
int
in
in
adc
jb
sub
out
push
cld
cmps
and
push
mov
jle
mov
out
mov
push
and
jp
fdiv
push
sub
pusha
stc
scas
sbb
nop
dec
xor
pop
jmp
mul
push
dec
mov
sar
pop
retf
jno
pushf
stc
pop
in
icebp
add
or
sub
push
int
lahf
mov
and
inc
jl
adc
(bad)
pop
mov
xchg
sbb
sbb
push
mov
pushf
stos
mov
fcom
xlat
sar
pusha
shl
xchg
out
push
repnz
fstp
mov
mov
or
ss
sbb
cmp
add
(bad)
jmp
add
(bad)
out
(bad)
fsubp
test
push
scas
sti
push
dec
sub
sub
mov
jl
nop
cmp
sti
inc
push
push
jbe
jge
xchg
pop
mov
xor
call
sbb
push
cmp
(bad)
sbb
cmc
fcmovu
mov
jmp
cmp
ficom
movs
jmp
mov
cmp
jmp
dec
inc
aas
sbb
daa
in
pop
sub
xchg
scas
xchg
add
jl
loope
int
or
xchg
fimul
xor
pop
fmul
lea
in
lods
cmp
push
sub
jo
test
cs
jl
pushf
cmps
call
sbb
xor
pop
push
dec
das
jnp
and
daa
or
xchg
pusha
jbe
or
cmp
cmp
push
or
mov
leave
push
xor
dec
xor
adc
ds
fwait
popa
add
cmp
sub
and
cdq
js
ins
cmps
jmp
adc
inc
(bad)
pmulhuw
jp
mov
inc
loopne
adc
retf
xchg
and
rcl
out
fwait
add
imul
jne
pusha
(bad)
cmp
pushf
test
shr
or
mov
lods
scas
sbb
xlat
push
jle
mov
cmp
jae
repnz
sbb
movs
cmc
aam
inc
sub
sahf
int3
outs
stc
aam
push
mov
mov
in
push
mov
add
test
sbb
test
push
retf
mov
(bad)
(bad)
les
cs
jl
pop
pop
rol
setbe
mov
test
mov
dec
aam
sbb
cli
jl
dec
mov
repz
and
or
dec
xor
mov
cmp
pop
rol
sbb
shr
dec
enter
in
imul
mov
jno
mov
int
dec
in
cmps
cmc
fs
add
ret
push
js
jg
xchg
inc
ds
pop
fist
push
xor
pop
adc
es
sub
adc
icebp
sub
rol
imul
into
jmp
sti
ror
xchg
mov
test
aas
inc
mov
(bad)
cmp
stos
lea
mov
push
cmp
fiadd
cmp
adc
rcl
pop
sub
jnp
adc
das
or
cmp
cld
mov
fiadd
sub
mov
mov
inc
jp
mul
dec
mov
in
sahf
mov
cmps
mov
int
nop
ins
retf
adc
nop
dec
ret
mov
push
les
push
sub
or
rol
(bad)
and
sub
xor
inc
cmc
pop
jle
pop
jmp
pop
aam
pop
pop
aam
push
sub
xchg
ret
mov
jmp
loop
cmp
pop
in
test
(bad)
cmp
mul
sbb
movs
xor
push
rcr
sahf
xchg
cs
ja
cmc
or
mov
dec
stos
addr16
(bad)
push
pop
aad
jne
nop
test
push
and
dec
daa
pop
data16
mov
mov
(bad)
and
leave
xor
push
sub
cmp
pop
or
hlt
fstp
sbb
in
pop
movs
outs
or
and
rcr
cmps
les
daa
cmc
in
dec
fimul
pop
call
mov
(bad)
mov
ds
loopne
xchg
push
and
mov
sub
in
mov
mov
sub
mov
push
not
sbb
cwde
das
fldenv
xor
retf
mov
ins
sar
ins
js
ret
(bad)
(bad)
int3
sbb
jl
mov
mov
inc
loop
mov
mov
mov
xchg
ss
shl
jae
xchg
sub
push
adc
pop
jns
jecxz
cmps
lahf
pop
adc
sbb
push
icebp
imul
into
or
inc
fidivr
fs
push
jg
sbb
push
clc
jns
mov
ins
inc
(bad)
test
loop
mov
pop
into
adc
adc
cmp
leave
xor
enter
mov
sbb
mov
sbb
cmp
inc
loope
mov
lock
aad
out
jo
adc
or
mov
dec
sub
ss
pushf
call
je
jle
das
leave
pop
push
nop
mov
movs
bound
dec
int
ret
jno
pusha
mov
mov
fisubr
inc
jmp
imul
fs
push
xchg
push
inc
or
push
inc
push
in
push
cdq
jle
fld
aaa
(bad)
jg
adc
bound
xor
cwde
jle
push
aas
shl
ficom
xchg
jnp
lods
push
adc
xor
test
test
adc
test
ret
xor
xchg
fstp
lea
fwait
sbb
aaa
adc
mov
pop
cld
cmps
aam
ja
les
jb
retf
sub
in
xchg
and
dec
cwde
test
jmp
(bad)
sbb
dec
adc
mov
push
movs
scas
sbb
outs
or
mov
pop
dec
xchg
cmps
add
mov
add
test
fdivr
and
stos
daa
dec
fnstcw
not
lea
jecxz
jo
inc
fild
cli
mov
sub
mov
jecxz
pop
fadd
pop
outs
and
fsubrp
push
(bad)
fisttp
jne
sbb
outs
add
mov
sub
jmp
mov
mov
adc
dec
jns
cdq
daa
or
mov
cli
inc
cmp
or
(bad)
aad
dec
fwait
xchg
leave
jmp
lods
xor
int3
push
jge
(bad)
xchg
or
xchg
sub
das
mov
outs
add
xor
push
jb
xor
fwait
cmp
add
pop
cmp
aam
push
call
pop
lea
xchg
jge
pop
push
push
addr16
test
pop
inc
add
nop
stos
cld
adc
fistp
div
shr
xchg
das
jmp
stc
adc
xor
js
imul
ds
lock
xlat
outs
xchg
rol
fild
sub
cwde
push
lds
mov
jmp
leave
retf
adc
add
enter
jns
lods
dec
mov
xor
pop
jns
push
lods
push
mov
hlt
cli
adc
out
in
mov
cmc
sbb
mov
jg
mov
mov
fld
xor
mov
ror
sub
inc
mov
fisub
popf
cmp
stc
dec
push
jmp
shr
iret
push
js
mov
js
in
inc
fnstsw
jg
pop
push
add
ret
jl
or
fsubrp
adc
sub
cmp
mov
and
sbb
adc
mov
add
inc
in
mov
sub
test
jae
out
or
add
loope
pop
mov
jno
mov
or
sar
popa
outs
jge
sti
push
xor
in
cmps
jg
out
retf
pop
cdq
and
fisubr
inc
add
lods
push
rcr
cdq
adc
xor
imul
rol
dec
data16
mov
or
xchg
mov
shl
(bad)
(bad)
mov
sub
push
les
ja
mov
mov
leave
(bad)
sbb
test
sbb
pop
sub
mov
xchg
mov
pop
inc
in
fild
or
ins
push
out
xchg
push
cwde
aad
std
cmc
push
mov
shl
hlt
cmp
dec
jbe
push
lods
iret
mov
out
fst
xor
add
aam
xlat
push
pushf
fistp
sbb
jnp
lods
push
(bad)
cli
cwde
dec
xor
clc
aaa
lds
scas
fcmovnb
xor
out
and
stc
loop
inc
cmc
cs
fnstenv
dec
add
and
mov
push
out
xchg
sbb
dec
xchg
jne
adc
(bad)
sahf
outs
pop
pop
repz
inc
xchg
mov
and
rcl
add
mov
mov
jecxz
add
das
pop
loop
iret
jb
jl
mov
sar
dec
movs
(bad)
fistp
push
in
mov
sahf
ret
int3
bound
push
sbb
(bad)
cmps
in
ret
mov
test
or
push
cwde
cmp
stos
pop
cs
and
inc
imul
mov
adc
ins
sub
ins
push
cdq
pop
call
jmp
ret
test
lock
sub
ret
jg
mov
xor
push
adc
dec
ds
jno
sbb
pop
ins
loope
(bad)
ror
or
xor
dec
inc
adc
ss
popa
(bad)
test
mov
test
push
mov
les
test
sar
cdq
repz
popf
stos
add
int
xchg
sbb
mov
xchg
fwait
dec
repnz
(bad)
out
add
sub
outs
stc
rcl
or
pop
movs
fnstcw
in
adc
pop
sub
and
cmps
ror
cld
stc
mov
push
pop
add
sub
ds
cmp
cwde
push
inc
xor
call
xchg
or
test
popa
lock
outs
test
(bad)
jp
mov
sbb
xchg
sahf
or
nop
or
imul
xor
cmp
lea
inc
inc
and
nop
dec
push
and
popa
jne
add
add
jmp
(bad)
mov
sub
mov
popa
mov
aam
cld
or
fdivr
cs
gs
imul
jecxz
push
push
sub
sbb
fidivr
out
aas
mov
nop
dec
jle
cwde
jecxz
cli
push
mov
sub
mov
(bad)
pop
rol
cs
pop
xchg
daa
das
call
(bad)
je
imul
adc
cmps
jno
add
sub
(bad)
pop
mov
push
cmps
rol
mov
data16
sbb
je
dec
lea
xchg
enter
mov
pushf
into
mov
mov
push
scas
pop
ror
arpl
test
ret
cmp
cli
or
mov
jno
int
inc
test
(bad)
dec
mov
xchg
mov
lock
xchg
test
sahf
xchg
in
ins
xor
out
xchg
ja
int3
test
mov
cs
and
inc
sti
adc
(bad)
shr
(bad)
(bad)
mov
or
cmp
pop
sbb
inc
and
icebp
push
dec
(bad)
sub
movs
add
ds
xchg
imul
inc
pop
pushf
pop
cmp
and
xchg
icebp
cmps
mov
inc
stc
xchg
neg
cmp
lods
hlt
ss
mov
dec
adc
jns
dec
push
scas
sbb
push
push
jmp
push
dec
xor
jbe
pop
test
fimul
js
cmps
xlat
adc
cmp
push
clc
inc
xchg
add
jne
sbb
push
ret
test
jbe
in
retf
lock
mov
les
ror
das
lds
stc
and
and
jecxz
sbb
xor
or
xchg
sub
mov
jle
add
test
dec
ss
cmp
stos
aaa
xchg
sub
aam
jns
lods
mov
push
scas
xchg
add
jne
in
inc
xchg
sbb
push
inc
out
pop
stos
loopne
retf
loopne
pop
mov
gs
xchg
lds
add
jne
enter
out
dec
je
sub
call
cmp
add
or
mov
pop
retf
or
add
sbb
pop
mov
inc
out
icebp
leave
or
outs
lock
call
lds
pop
in
in
sbb
mov
ss
(bad)
ins
ss
test
jae
mov
loopne
mov
mov
psubd
pop
xchg
push
jno
cmp
fnstsw
xor
sbb
pop
pop
pop
push
(bad)
int3
mov
jb
call
imul
add
pop
scas
stos
cmp
jecxz
xor
sub
or
imul
fcomi
and
fst
dec
push
sub
mov
jl
pop
icebp
mov
sub
hlt
push
sub
rcl
mov
and
sbb
aas
cmp
push
sahf
sti
lods
dec
loope
mov
hlt
aaa
cmps
in
pop
clc
sbb
mov
pop
test
retf
movs
outs
xlat
jae
in
xor
inc
js
sbb
mov
mov
ret
add
aam
mov
xchg
adc
push
neg
sub
and
jo
rol
dec
mov
shl
sub
inc
into
inc
sti
or
jo
pop
dec
mov
xchg
ficom
cmc
stos
cmc
cbw
test
fs
lods
jno
imul
fdivr
in
iret
loop
push
ins
push
clc
mov
je
jge
mov
inc
pushf
in
sbb
push
bound
enter
fisttp
push
inc
in
dec
out
cmp
and
ret
pushf
jnp
cmp
aam
dec
pusha
into
and
pop
out
mov
(bad)
mov
or
enter
and
dec
xchg
xchg
mov
jmp
add
and
mov
mov
iret
xor
es
cmp
and
shl
(bad)
cwde
mov
xchg
and
sub
test
in
inc
or
dec
xchg
xchg
pop
cmp
pop
or
push
mov
repnz
ins
xchg
inc
mov
cmp
mov
or
inc
outs
inc
imul
cmps
ins
and
stos
pop
and
sub
stc
faddp
ss
neg
mov
xchg
ja
aam
or
xor
aaa
rep
push
inc
ins
sub
int3
fidiv
(bad)
jge
repz
aad
sub
(bad)
fst
cmp
or
call
mov
and
and
in
jns
xchg
push
cmp
(bad)
(bad)
outs
(bad)
mov
adc
leave
shl
or
out
xor
icebp
(bad)
mov
adc
inc
jp
mov
mov
jmp
popa
not
aam
push
out
mov
jl
call
test
pop
push
sbb
mov
inc
and
jbe
gs
xchg
lods
sub
mov
push
and
push
(bad)
xlat
push
push
popf
mov
inc
push
(bad)
cmp
push
cmp
inc
hlt
pushf
mov
sbb
ficom
fcomp
mov
iret
out
add
test
dec
or
(bad)
test
pusha
mov
mov
aam
push
pop
repz
int
(bad)
in
mov
lahf
inc
stos
mov
fisubr
movs
jl
ds
pop
jmp
nop
mov
cmp
inc
adc
adc
mov
jge
or
(bad)
out
iret
les
cwde
mov
in
sbb
jo
inc
std
dec
dec
test
inc
and
cmpps
sar
scas
cdq
out
push
inc
push
inc
test
adc
nop
outs
mov
xor
adc
xor
pop
repz
mov
ds
(bad)
in
popa
cli
int
push
sub
add
push
fisubr
lock
hlt
in
pop
adc
adc
sbb
add
inc
or
mov
pop
push
xchg
xchg
mov
das
cwde
in
out
fsub
ficomp
inc
inc
xchg
int
jge
adc
add
mov
inc
push
jmp
rcl
pusha
push
push
dec
dec
repz
ja
frstor
sbb
sub
xchg
ds
inc
push
mov
sub
das
sbb
xchg
mov
daa
jnp
add
push
lahf
(bad)
fadd
rep
ficomp
add
popf
push
(bad)
pop
outs
jbe
ret
movs
jno
pop
jbe
xchg
pop
jmp
push
ret
repnz
jnp
je
pop
aam
xor
imul
pop
lods
ds
lods
jl
dec
lahf
and
add
ss
ja
fisttp
jnp
outs
jb
dec
sbb
inc
scas
or
xchg
repz
in
adc
or
lsl
mov
pop
or
jo
not
sbb
out
jl
pop
add
cmps
and
pop
retf
pop
in
(bad)
iret
enter
xchg
ja
mov
bound
ins
mov
mov
repz
pop
jg
fs
cmp
sub
adc
outs
sbb
adc
mov
adc
fmul
popf
fld
cmp
mov
hlt
sub
xchg
xor
pop
adc
inc
xchg
clc
ret
(bad)
adc
(bad)
cli
das
push
daa
push
call
xor
and
dec
or
rol
pushw
ins
push
pop
sub
movs
dec
es
movs
xchg
fild
and
jle
pop
xor
stos
retf
dec
push
aad
ss
jb
sar
xor
inc
icebp
retf
push
mov
inc
outs
outs
xor
stos
cmp
ss
inc
fiadd
sub
xor
and
jb
(bad)
jle
je
xor
gs
or
faddp
fnsave
fwait
mov
xor
aaa
es
push
pusha
pop
neg
sbb
daa
mov
cmp
xor
sbb
jne
mov
out
and
inc
nop
stos
sbb
iret
jp
icebp
stos
rcl
mov
pushw
sbb
fisub
enter
mov
mov
call
cmp
add
aad
int
inc
or
push
imul
cmp
(bad)
icebp
xor
xchg
xor
dec
aas
shl
mov
in
dec
sub
out
aam
pop
mov
(bad)
les
push
imul
and
mov
fist
adc
xchg
es
jp
scas
push
push
loop
test
dec
out
or
mov
jl
mov
mov
leave
sbb
jb
jo
sbb
add
int
jg
dec
fsub
and
ins
cmp
sbb
dec
(bad)
pop
jg
test
jo
and
aas
add
movs
das
cmp
shl
repz
lahf
les
mov
xchg
pop
int
mov
or
in
mov
sahf
or
mov
adc
popf
or
nop
mov
cmp
scas
mov
shl
out
and
sbb
jb
inc
neg
jbe
pop
mov
pop
add
add
jmp
in
mov
fild
sbb
mov
sub
call
inc
test
clc
mov
aam
jge
mov
push
sbb
inc
sbb
iret
push
out
mov
xchg
fistp
scas
pop
(bad)
pusha
inc
pop
retf
out
popa
and
adc
mov
cmps
and
cwde
pmuludq
adc
lods
fisubr
xor
call
xor
imul
jge
icebp
jp
cmc
adc
pop
enter
mov
pop
mov
inc
cmps
jb
pushf
push
lock
in
mov
xchg
ja
dec
(bad)
imul
xor
jmp
and
ss
pop
scas
loopne
stos
xchg
cmp
lea
push
pop
sbb
jno
mov
xchg
adc
int3
rcl
mov
inc
sbb
mov
shl
test
and
sub
or
xchg
out
add
rcr
fmul
imul
es
stc
ins
lods
mov
jg
ins
or
cmp
or
adc
stos
xor
sahf
call
retf
add
xor
or
jecxz
inc
push
stos
call
cwde
ficomp
movs
fidivr
sub
loop
jns
out
test
sbb
pop
cmps
cdq
xor
test
cmc
in
push
add
aas
inc
inc
pop
ss
fs
cmp
ja
rol
mov
cli
pop
ins
cdq
loop
fcomp
push
mov
or
jl
mov
xchg
cmp
mov
pop
sbb
and
(bad)
adc
jmp
push
lahf
pop
int
mov
retf
sub
jl
loopne
je
mov
fbld
dec
dec
pusha
aas
cmp
jle
dec
test
pusha
(bad)
imul
out
cs
popa
or
jb
sub
fcom
push
popa
aaa
push
mov
dec
xchg
stc
and
sub
cmp
out
hlt
shl
cmp
in
xchg
cmp
xchg
or
push
mov
jl
dec
les
cmp
push
mov
inc
outs
std
in
jg
retf
rep
cli
repnz
or
ret
test
jbe
in
stos
sub
xor
sbb
lahf
fwait
call
js
int
sub
mov
shl
sbb
iret
shr
mov
fnstenv
inc
das
std
repnz
xchg
popa
sbb
mov
je
add
jnp
mov
sbb
(bad)
(bad)
fimul
dec
leave
sahf
pop
mov
jmp
cmps
cld
push
xor
sbb
ret
or
les
retf
adc
xchg
fst
retf
std
jle
mov
mov
jecxz
cmp
cmps
out
movs
push
push
dec
mov
clc
jno
(bad)
mov
or
ja
inc
imul
aam
outs
jle
repz
jnp
fwait
push
dec
retf
iret
leave
jg
sbb
mov
lods
ds
imul
out
out
mov
push
pop
sbb
repnz
fbld
jmp
in
loopne
aas
popf
xor
push
sub
pop
or
cmps
jae
xor
cli
jne
push
sbb
jmp
mov
push
adc
lods
mov
ja
jns
repnz
dec
call
and
aam
(bad)
push
test
inc
leave
or
jge
movs
push
jp
cwde
(bad)
(bad)
mov
xlat
mov
push
ret
jmp
sti
mov
mov
icebp
adc
aaa
adc
inc
or
into
sub
xlat
and
pop
das
mov
xchg
(bad)
mov
icebp
xchg
mov
inc
loope
or
inc
stc
sahf
fisttp
adc
mov
ins
sbb
and
sar
adc
inc
inc
je
test
lock
imul
pop
into
ds
jns
mov
push
loopne
into
mov
enter
les
xlat
push
xor
enter
mov
sbb
or
sbb
(bad)
or
push
jle
mov
call
pop
jns
or
icebp
sub
inc
mov
test
pushf
pop
bound
(bad)
mov
jns
cmp
sub
jge
lock
hlt
and
cli
inc
dec
leave
adc
(bad)
mov
xchg
dec
scas
sbb
pop
mov
loope
pop
outs
ret
xor
inc
dec
jo
push
call
pop
(bad)
fild
es
push
adc
push
rol
pop
cmp
popa
and
in
pop
ins
pusha
leave
jecxz
xchg
sbb
push
retf
(bad)
jmp
adc
cmp
or
sub
bound
jnp
jle
repz
sub
std
dec
pop
xchg
cdq
and
xchg
dec
mov
fistp
dec
jno
pop
sbb
or
clc
pop
(bad)
loope
jmp
out
mov
lods
sti
call
jbe
pop
pop
push
out
add
adc
dec
mov
or
and
inc
jae
mov
cmp
call
mov
cmp
xor
lahf
push
push
dec
pop
mov
pop
cmp
repnz
mov
cs
dec
lock
sar
inc
pop
pop
cmp
mov
ror
rol
jne
shl
inc
mov
or
das
ficomp
idiv
lods
aam
jae
jbe
pop
fmul
fs
popa
and
dec
push
mov
jmp
cmp
dec
sbb
test
xor
push
mov
pop
sub
jg
pop
cmp
scas
repz
xor
stos
and
fwait
pop
ret
cmp
fs
(bad)
shl
retf
mov
test
inc
pop
cmp
adc
sub
mov
jp
mov
xor
or
adc
cmp
ret
pop
cdq
sar
(bad)
addr16
int3
movs
lods
mov
shl
sbb
pop
xchg
mov
fst
mov
pusha
aad
mov
call
push
push
(bad)
push
nop
rcl
(bad)
pop
or
mov
jbe
pop
cmps
xchg
out
pop
mov
push
ins
sbb
loope
sbb
dec
xor
sub
ja
sub
popa
sub
ds
(bad)
pop
sbb
xchg
movs
out
in
pop
and
bound
popf
mov
inc
xor
sbb
pop
push
in
jle
fcmovnb
push
repz
mov
pop
lods
popf
dec
fwait
arpl
loop
cmp
pop
push
xor
add
shl
cmp
push
out
dec
std
jp
stos
sub
inc
adc
fadd
and
ret
mov
sub
cmps
(bad)
push
inc
sbb
imul
(bad)
sub
fst
outs
mov
and
ins
mov
fnop
sbb
sbb
imul
dec
(bad)
xor
mov
jns
cmp
or
int
in
ja
mov
pop
mov
stc
mov
loopne
add
pop
and
sti
mov
push
vpmulhrsw
or
xchg
pop
xchg
fiadd
push
jae
jb
cli
dec
cli
daa
or
ret
jbe
ret
bnd
pusha
fisubr
cli
div
sbb
add
mov
xor
ins
sbb
repz
mov
inc
jne
ins
clc
fld
push
pop
jle
push
add
daa
mov
sub
in
mov
jge
xchg
into
push
ror
rcr
pop
add
into
cdq
fcomp
mov
fnsave
lds
inc
in
out
cmc
mov
and
pop
jp
data16
pop
mov
ror
aas
sbb
iret
mov
outs
mov
js
sbb
in
xor
test
dec
sar
addps
jp
dec
ror
mov
sub
cmps
and
adc
test
js
xor
fild
or
add
mov
add
or
mov
push
mov
mov
lods
cdq
jmp
ja
idiv
xor
in
push
inc
int
mov
movs
cmp
jg
div
and
dec
bts
mov
add
jle
or
jg
popa
mov
scas
pop
stos
mov
mov
mov
xchg
scas
fcomp
mov
(bad)
mov
xor
sub
pop
(bad)
ss
retf
push
std
rcr
fdivr
sbb
and
lea
mov
cmp
cmp
scas
mov
scas
jb
mov
xor
mov
inc
pop
and
mov
pop
add
and
mov
push
sahf
dec
sbb
fadd
imul
ins
mov
jnp
repz
sbb
xchg
inc
mov
jae
jb
xchg
pusha
cmps
mov
fild
jp
mov
mov
jb
popa
addr16
add
push
lods
les
mov
movs
inc
es
jge
mov
retf
lods
ins
nop
jb
dec
shl
fidiv
cli
xchg
and
adc
push
push
jbe
shl
sbb
out
nop
icebp
push
(bad)
repz
mov
mov
lods
cs
aam
out
cmp
lods
xchg
xchg
adc
adc
xor
in
lods
sbb
push
sbb
stc
xor
rcr
mov
or
js
sbb
inc
leave
div
out
(bad)
cmp
cmps
dec
cmp
or
mov
inc
pushf
mov
stos
mov
cmc
cmc
ret
push
sar
pusha
jns
gs
les
lods
sbb
test
cs
sbb
mov
call
(bad)
ror
int3
push
cmp
stos
rol
mov
arpl
mov
push
sub
inc
inc
cmc
fidivr
mov
std
xlat
and
mov
pop
arpl
mov
clc
or
cdq
lahf
aam
in
lds
adc
cmp
pop
lods
push
mov
xor
ins
fnstsw
jae
push
ror
mov
imul
mov
pop
fnstenv
jmp
add
fisub
inc
xor
call
adc
loope
or
mov
mov
add
adc
push
sub
test
fwait
xchg
jmp
loop
and
dec
int3
pop
rol
xor
and
xlat
or
cmps
sub
or
(bad)
loopne
iret
push
xchg
or
ds
pop
js
xchg
sbb
retf
sub
xor
jb
enter
mov
ins
jl
aas
pop
call
xchg
aaa
or
jno
mov
add
(bad)
repz
pop
jnp
cmp
je
fsub
fld
cmp
inc
scas
nop
call
retf
ins
fsubr
mov
mov
je
(bad)
fisttp
xchg
xor
dec
mov
out
(bad)
inc
or
(bad)
aad
fiadd
cmps
jns
out
repnz
js
and
ins
std
sub
icebp
sub
inc
shr
imul
nop
xchg
dec
push
fistp
sti
add
pop
jb
cs
and
or
pop
sbb
mov
mov
or
inc
cmp
push
je
lods
jle
daa
dec
in
mov
into
sbb
mov
cmp
inc
daa
dec
in
jp
std
xchg
rcl
cs
(bad)
or
adc
cmp
and
jmp
arpl
ins
and
sbb
cmp
push
mov
fistp
push
xchg
mov
push
dec
push
enter
movs
gs
mov
inc
shr
fdivp
pusha
or
fimul
add
cmp
push
mov
loop
push
in
add
fistp
leave
xchg
mov
out
repnz
push
sbb
cmps
inc
sub
cdq
rcr
pusha
pop
fsub
mov
sub
fsub
push
sar
cmp
jb
test
sbb
test
in
sbb
fidivr
retf
rcl
mov
lods
fsubr
cli
int
cli
or
jp
ror
adc
mov
xchg
or
xor
sub
mov
retf
push
sahf
das
cmps
aad
pop
ret
ss
mov
ins
int3
push
std
jle
and
pop
sbb
stc
push
xchg
out
inc
push
mov
popa
popa
out
push
dec
inc
jge
mov
dec
dec
xchg
dec
mov
xchg
xchg
xchg
test
pop
lods
lods
pop
cs
ins
out
out
inc
fstp
push
imul
scas
and
lea
mov
sub
ins
aas
jne
test
js
ror
enter
frstor
pop
inc
pop
ins
xor
mov
ja
adc
and
pop
jne
and
push
div
inc
cmps
add
or
mov
out
repz
mov
popf
out
nop
inc
pop
iret
xchg
xchg
ins
mov
in
lahf
mov
inc
inc
xlat
dec
xchg
js
jne
or
je
push
mov
xchg
sub
in
imul
aas
loop
jl
cmp
lea
add
mov
cmp
push
pusha
test
xchg
and
jo
add
jb
enter
or
hlt
add
sbb
enter
and
push
leave
dec
movs
mov
in
push
cs
clc
push
add
inc
cmp
stos
add
jmp
mov
xchg
js
(bad)
movs
pop
or
(bad)
cmp
mov
sub
or
or
stos
loopne
sbb
leave
stos
(bad)
push
sar
xchg
or
dec
sbb
cli
int3
cmp
xchg
xlat
fsubr
je
mov
push
dec
push
pop
popf
push
inc
daa
pusha
cmp
mov
out
dec
mov
jns
bound
pushf
mov
iret
xor
ins
jno
scas
sbb
dec
lods
repnz
inc
in
jl
push
and
adc
sub
mov
and
les
imul
cmp
xor
retf
push
and
push
cmp
sub
jbe
sub
mov
inc
in
pop
imul
(bad)
xor
mov
and
jns
ins
or
stc
or
sbb
jb
test
in
mov
cmp
adc
sti
pushf
xchg
jae
cwde
adc
add
mov
(bad)
jmp
pop
enter
and
cmps
popa
inc
xor
scas
cld
enter
scas
inc
jmp
xor
mov
sti
xchg
cmp
out
ins
inc
test
xor
outs
push
loopne
inc
mov
bound
(bad)
aam
imul
push
and
fld
aad
mov
adc
jbe
test
ins
cmc
fldenv
int
pop
mov
(bad)
or
push
mov
mov
mov
int
ret
xchg
jmp
ins
push
sub
fdiv
cmp
jmp
mov
dec
cli
push
cmc
fdivp
pop
adc
inc
pop
adc
sub
dec
xor
or
xor
pop
cs
stos
inc
fmul
aas
add
pop
inc
jg
hlt
cli
or
xchg
add
jb
add
leave
pop
xchg
jmp
leave
and
les
inc
or
ja
inc
loop
push
jns
fs
fs
inc
xchg
jne
int
aam
cmp
out
inc
xchg
sub
repnz
lods
push
mov
xor
xchg
adc
(bad)
cmp
xor
clc
xor
test
shl
add
aam
sub
jno
push
js
and
shl
and
inc
sub
inc
cs
popa
pop
jle
jne
lods
leave
icebp
in
push
sbb
mov
mov
clc
(bad)
gs
ds
push
js
push
mov
inc
sbb
das
dec
popf
dec
(bad)
js
mov
test
xor
test
xor
push
pop
xchg
daa
and
or
stos
imul
lahf
push
add
retf
sbb
sub
arpl
dec
imul
cmp
hlt
or
sbb
sbb
jle
cld
cli
push
dec
adc
dec
mov
jns
lods
test
aam
sbb
sbb
iret
mov
or
add
ret
iret
add
adc
retf
push
jge
in
bound
or
mov
dec
arpl
sti
add
int
xchg
xchg
jno
xchg
aas
(bad)
cwde
dec
xchg
or
or
push
mov
sbb
adc
xchg
pop
jmp
jmp
call
push
and
add
sahf
xchg
jmp
sbb
push
xor
sbb
mov
push
push
or
hlt
aas
xchg
fsub
adc
scas
call
xor
lea
mov
repnz
mov
out
jno
adc
pop
retf
mov
dec
and
mov
push
adc
gs
cdq
fsubr
adc
cmp
lahf
in
mov
xchg
into
add
inc
jno
nop
and
fcomp
inc
push
mov
mov
mov
xor
sub
push
test
cs
push
inc
nop
pusha
int
int
leave
jb
ficomp
xchg
jno
cld
pop
iret
hlt
pop
call
cdq
mov
mov
mov
add
(bad)
ds
mov
pop
mov
mov
lods
fxch
jl
push
(bad)
hlt
xchg
sbb
jae
jnp
std
pop
mov
inc
scas
sbb
mov
pop
rcr
sbb
jmp
jg
out
lods
push
and
aam
fld
fdivr
dec
adc
mov
dec
sbb
ss
imul
mov
adc
call
repz
scas
xor
push
inc
test
jp
retf
dec
adc
imul
mov
test
and
inc
xchg
sub
test
ins
cs
add
push
mov
sbb
in
xchg
pop
cmp
fucomp
loopne
sub
loope
es
test
lods
push
dec
inc
xchg
sbb
mov
fistp
movlps
arpl
hlt
jle
mov
fcom
dec
fneni(8087
adc
(bad)
sub
cmp
(bad)
adc
fild
sub
mov
mov
outs
enter
pcmpgtw
inc
add
ss
(bad)
cli
(bad)
mov
cmp
or
mov
mov
rcr
or
(bad)
adc
push
mov
add
std
ret
sbb
push
jecxz
or
xor
lods
inc
xor
daa
in
fdivr
dec
fwait
push
cmp
and
xchg
adc
fmulp
ins
iret
dec
addr16
imul
push
scas
push
adc
adc
adc
mov
addr16
je
xchg
retf
pop
cwde
xor
in
fdiv
sbb
xchg
loop
aad
pop
mov
sbb
pop
mov
scas
retf
out
popf
mov
inc
dec
sub
cmp
cmp
aam
pop
adc
mov
pop
shr
dec
sub
not
or
and
or
bound
call
push
test
cmp
imul
jl
sbb
push
(bad)
into
cmp
dec
push
sub
addr16
inc
xchg
loope
ds
(bad)
(bad)
push
or
js
aaa
fadd
lods
lea
nop
mov
std
ret
pop
cmps
xor
add
mov
jl
mov
dec
jle
outs
push
or
jns
or
(bad)
fadd
retf
mov
out
repz
fstp
inc
in
xchg
inc
push
pop
movs
cmp
add
sub
movs
push
sbb
sbb
popf
addr16
in
xchg
mov
test
mov
push
shr
jne
add
mov
out
jo
fcomp
xor
stc
mov
cdq
mov
out
jge
fs
inc
dec
xor
shl
or
add
mov
ins
retf
push
out
jbe
xchg
and
xchg
pop
scas
dec
pop
out
mov
jge
leave
imul
mov
mov
or
sahf
push
ins
rcl
out
retf
jg
mov
ja
lahf
dec
xchg
cs
pop
mov
mov
dec
xchg
push
push
(bad)
fcom
cli
mov
cld
pop
outs
or
sub
ret
test
jb
mov
dec
das
sbb
pop
or
mov
sub
inc
inc
aaa
add
outs
nop
or
ins
mov
inc
pop
lahf
mov
mov
arpl
arpl
jmp
mov
jb
repz
pushf
jns
cmc
xchg
out
jp
mov
fcom
or
adc
aas
out
int
call
mov
mov
pushf
and
test
push
push
add
loope
lds
ins
dec
or
out
jno
ins
mov
lahf
pop
sbb
add
enter
sub
xchg
cmp
(bad)
fistp
mov
sbb
bnd
in
adc
push
scas
xchg
jp
jmp
xchg
push
sahf
imul
iret
mov
pop
cmc
mov
out
ds
jns
in
xchg
or
test
add
pop
mov
sub
sub
add
sub
add
(bad)
popa
push
mov
ror
iret
into
sub
sbb
add
push
mov
push
ret
push
movs
out
test
ins
ds
pop
je
pop
xor
test
dec
xchg
iret
enter
xor
mov
xchg
inc
push
xchg
mov
cmps
ret
and
aas
xchg
rol
dec
xlat
nop
jne
rcl
xchg
fwait
xchg
adc
jnp
xchg
rcr
cdq
and
add
jg
test
push
xchg
pop
mov
and
je
ss
out
(bad)
lods
out
push
xchg
bound
test
mov
int3
(bad)
stc
sub
in
enter
imul
ja
hlt
cli
pop
rcr
cs
xchg
pop
scas
mov
mov
gs
adc
aaa
cmps
lods
cmps
aam
jl
sbb
jl
das
or
sahf
jp
cmp
sbb
arpl
adc
xor
test
cmp
pushf
add
xor
addr16
pop
jns
rcl
pop
jno
push
rcr
jno
(bad)
(bad)
cmp
xchg
sub
jecxz
fs
jne
fmul
(bad)
xchg
arpl
add
fcom
mov
push
movs
mov
sbb
icebp
in
fisttp
xchg
pop
jp
xchg
sar
sbb
and
pop
stc
in
(bad)
bound
dec
test
in
cmc
test
mov
mov
ins
clc
in
inc
clc
sbb
adc
sub
inc
xor
jecxz
xor
ds
xchg
icebp
cwde
dec
rcl
out
xlat
les
xchg
mov
adc
stos
xor
cli
xchg
imul
cmps
cmp
cmp
int3
movs
and
add
iret
clc
xor
push
outs
daa
inc
lahf
jp
test
add
lahf
inc
mov
xlat
push
in
mov
(bad)
mov
add
dec
sti
fcom
inc
inc
repz
loopne
xor
dec
(bad)
gs
and
push
pop
mov
inc
xchg
xchg
mov
loope
jg
(bad)
mov
and
push
push
fs
add
dec
(bad)
push
add
int3
fbld
stos
into
out
add
push
scas
(bad)
lds
rcr
add
and
cmps
cmp
call
mov
loopne
test
inc
(bad)
pop
lock
adc
pop
pop
add
ret
cmp
rcr
mov
cmps
fistp
cmp
jbe
and
xchg
adc
dec
jmp
pop
cwde
inc
jge
test
cmps
mov
jbe
adc
movs
mov
and
aad
add
mov
sahf
lahf
popf
dec
and
jg
xchg
and
mul
cmp
add
mov
shr
push
mov
xor
jmp
ja
xchg
sub
push
cli
mov
mov
push
aad
mov
inc
into
push
fwait
jge
dec
jg
xchg
push
xchg
test
jae
add
sub
lods
test
fdiv
out
nop
pop
adc
mov
cmps
popf
cmp
xchg
rol
cwde
jo
mov
mov
jbe
jmp
push
xchg
cmp
inc
mov
scas
pop
xor
cmps
and
leave
packsswb
clc
jae
int3
sub
or
cmp
inc
sahf
fwait
inc
enter
or
xchg
or
sub
dec
cdq
cmp
lds
sbb
aaa
add
mov
rol
mov
cmp
xchg
arpl
inc
int3
iret
pop
push
dec
imul
popf
add
ret
sub
push
in
std
imul
mov
jae
ins
arpl
test
xchg
mov
es
adc
cmp
sar
gs
in
or
(bad)
repnz
cmc
repz
(bad)
lods
or
ret
ficom
jp
mov
dec
xor
inc
cmp
adc
pop
lahf
push
inc
adc
mov
aas
pop
add
jmp
fstp
mov
sahf
xchg
push
lods
call
xor
test
mov
js
xor
xor
fiadd
mov
sqrtps
pop
cdq
je
in
out
dec
dec
addr16
setp
bound
jle
cmp
(bad)
xor
adc
test
mov
pusha
cmps
mov
mov
clc
jns
mov
out
xor
sub
xlat
cld
xchg
lods
mov
adc
mov
adc
jmpw
bound
mov
jnp
adc
sbb
sub
push
mov
fiadd
mov
aaa
lds
ret
xchg
mov
push
out
sbb
or
(bad)
xchg
mov
mov
and
fwait
xlat
pushf
inc
push
cmp
sub
adc
add
push
pop
cmp
ficom
sub
shr
(bad)
(bad)
mov
ret
pusha
xchg
mov
cmp
imul
mov
or
daa
out
or
and
test
call
mov
cmp
test
fstp
lock
das
loop
daa
push
fist
(bad)
(bad)
sbb
cdq
inc
sbb
out
out
add
in
sar
paddw
add
push
push
pop
mov
outs
lds
pop
into
out
mov
mov
loope
mov
jae
push
out
adc
retf
jg
dec
and
ror
outs
xor
lods
mov
inc
jno
push
rcr
add
xchg
xchg
inc
sbb
add
fisubr
jno
inc
xor
sbb
pop
cmp
bound
(bad)
into
addr16
lods
sahf
mov
stos
ins
gs
lahf
cmp
xchg
mov
ficom
ror
dec
retf
sub
fld
out
mov
pusha
xchg
into
mov
push
lods
xor
lock
mov
ins
fidiv
jo
test
mov
sub
jmp
xlat
in
add
test
leave
jbe
arpl
(bad)
jg
hlt
(bad)
cmps
fcomp
mov
jmp
jno
pop
xor
xchg
push
ins
hlt
xchg
loopne
xor
pop
sbb
adc
adc
out
shr
enter
jb
sbb
aam
mov
je
mov
or
mov
imul
adc
inc
int
pop
mov
fidivr
jns
xor
lock
loopne
sbb
mov
lea
cdq
jo
cwde
jo
inc
sbb
jnp
sub
rcr
sub
push
and
sbb
xchg
pop
jbe
ja
xchg
sbb
in
add
pop
jbe
es
dec
ss
cmp
xor
jo
or
cli
cmp
stos
loop
cdq
fwait
lds
test
cmp
inc
and
outs
clc
test
fld
adc
inc
je
and
shl
cmp
ret
repnz
jl
in
inc
pop
outs
out
lock
jae
jle
mov
test
push
mov
xchg
std
ret
xchg
mov
setle
cmp
inc
cmc
and
add
scas
stc
and
push
sbb
xor
pop
add
mov
push
cmp
out
jmp
cmp
ror
in
fild
cld
scas
(bad)
lahf
mov
sbb
adc
stos
mov
int
loopne
enter
mov
dec
adc
fdivr
and
or
cmp
and
(bad)
mov
movs
pop
xlat
ret
xor
sbb
ss
xor
jle
ins
sub
or
pushf
loope
addr16
jge
xor
pusha
xor
add
push
push
lods
aam
xor
pop
sar
jl
xor
mov
(bad)
bound
sar
xor
in
retf
mov
mov
push
push
push
pop
mov
xor
aam
fdivr
mov
ror
inc
neg
lods
fucom
std
aas
jle
xchg
neg
jno
mov
add
pop
inc
xor
std
shl
adc
mov
jae
enter
adc
int3
adc
jmp
mov
dec
test
into
push
out
cwde
jp
add
mov
inc
xchg
dec
xor
imul
nop
jge
xor
scas
jo
pop
dec
cwde
into
mov
mov
fucomip
inc
mov
in
mov
idiv
test
stos
mov
mov
adc
shl
idiv
in
mov
dec
push
pop
loope
repz
mov
call
ja
out
sbb
or
setns
xor
pop
sbb
lds
xlat
cdq
stc
popf
mov
lea
sub
sbb
fsubr
(bad)
das
push
cmps
pop
ror
and
(bad)
ret
xor
shl
ds
dec
cdq
stos
aad
mov
sar
nop
fucom
popa
inc
xor
sahf
(bad)
loope
add
pop
and
imul
add
and
xor
aad
sbb
pop
cmp
addr16
pop
push
into
dec
adc
push
cmps
jge
or
jno
movs
cmps
push
cmps
inc
jns
or
lods
cmp
mov
ss
js
sbb
les
div
sbb
scas
popa
mov
push
sub
(bad)
sar
ret
cmc
(bad)
jge
push
jecxz
xchg
cs
fsub
fild
das
ins
ret
add
jne
pop
iret
cmp
in
fimul
dec
ja
cmp
sti
mov
dec
cmp
(bad)
repnz
add
xchg
mov
sar
imul
sub
mov
dec
cs
or
jmp
jle
push
arpl
les
mov
ror
test
or
and
push
int
pushf
xlat
mov
scas
jb
xlat
outs
imul
dec
mov
repnz
iret
fwait
add
and
xor
sbb
cmp
mov
test
jmp
push
daa
loope
push
sub
xchg
ret
jb
adc
aad
call
pop
xor
or
or
retf
mov
call
push
mov
sbb
mov
xchg
fadd
lahf
pop
or
mov
mov
or
jp
jb
aam
stc
pop
mov
jmp
mov
out
(bad)
mov
sbb
sbb
aad
test
pushf
sub
xlat
pop
stc
cmps
or
sub
adc
shl
push
cmc
jmp
fisub
test
jmp
stos
aam
jle
adc
sub
mov
mov
hlt
movs
mov
in
int3
mov
test
or
mov
in
out
nop
cmp
ja
sub
scas
test
movs
xor
sbb
test
ret
ss
xor
pcmpgtb
sub
inc
xlat
jo
push
dec
mov
lods
mov
cmps
or
les
jmp
jae
jle
sbb
data16
push
mov
inc
cmps
xchg
sub
ins
sbb
cli
or
test
add
cmp
in
sub
push
data16
stc
sbb
popa
xor
sbb
dec
sub
scas
(bad)
cmp
mov
push
mov
retf
fs
rol
sbb
mov
and
or
xor
jns
js
mov
fst
lock
xchg
or
into
jmp
cdq
jecxz
fwait
jl
pop
in
jb
mov
es
dec
and
dec
fcomp
push
imul
xchg
push
add
fdiv
inc
leave
mov
scas
add
ficom
int
bound
or
int3
cli
cmps
loopne
movs
xor
push
xchg
fcomp
pushf
xor
dec
retf
push
adc
jns
mov
fsubr
stos
mov
jmp
std
sub
jo
or
inc
ss
inc
test
pop
inc
loop
cmp
mov
inc
mov
jp
add
aad
sub
fwait
cmp
mov
lds
and
cmp
data16
stc
mov
xchg
adc
std
icebp
stos
adc
adc
sbb
push
xor
add
pop
and
jp
xchg
inc
sub
jl
cwde
out
sub
stos
and
push
lock
or
and
jp
repnz
mov
imul
mov
js
lahf
jl
jne
pop
sub
and
sub
ins
pop
stos
jbe
dec
dec
mov
xlat
imul
or
test
cmps
mov
cmp
jecxz
pop
or
jmp
jl
mov
nop
movs
fcomp
int3
and
ror
aaa
inc
imul
cmc
stc
cmp
call
cmp
xor
arpl
push
pop
pusha
or
inc
outs
jl
outs
or
in
dec
je
sbb
mov
stos
or
dec
mov
mov
nop
sbb
inc
mov
nop
gs
pop
lea
movs
call
stc
inc
ficomp
jns
pop
js
out
movs
inc
(bad)
icebp
mov
test
or
inc
jl
sar
iret
in
retf
cli
and
push
cwde
push
or
dec
lock
movs
call
xlat
jge
xchg
xor
repz
daa
dec
mov
sbb
outs
dec
mov
retf
or
sub
pop
xlat
xchg
pop
jb
add
adc
ja
dec
(bad)
sti
out
jge
jbe
cdq
test
push
std
psllq
jmp
add
and
dec
jne
test
ins
push
retf
sti
or
ds
aaa
push
into
push
adc
std
popf
jmp
inc
inc
mov
jne
pop
ss
loop
lods
mov
or
jg
repz
fld
pop
pop
ins
mov
outs
inc
test
xchg
mov
push
aad
test
add
ja
and
sub
xchg
popf
leave
xchg
enter
lock
(bad)
push
ins
in
dec
push
(bad)
retf
mov
sbb
and
cmps
ds
xor
jl
lods
pusha
xchg
(bad)
jecxz
sub
mov
or
push
sbb
mov
gs
jle
call
ud1
adc
dec
test
adc
xor
popa
jmp
cmp
loopne
push
stos
movs
shr
xchg
ret
pop
and
sub
into
xchg
(bad)
pop
pop
mov
hlt
inc
sahf
push
add
and
sub
xchg
jb
sub
and
push
neg
mov
fsub
pop
push
ds
mov
mov
mov
int
stos
add
adc
or
dec
push
mov
pop
cmps
pop
stos
or
jb
or
in
rcr
push
(bad)
dec
cmps
into
xor
test
sbb
push
mov
sahf
xchg
mov
adc
out
mov
std
push
mov
mov
jl
cmp
push
sbb
xchg
dec
into
jae
xor
pop
add
mov
addr16
mov
push
test
std
sahf
push
call
mov
mov
inc
push
stos
xchg
je
ret
popa
cld
cmp
mov
into
cmp
les
imul
push
jge
sub
xlat
sub
ret
adc
cmps
stos
nop
(bad)
mov
add
mov
sub
call
ss
add
xor
mov
mov
pop
mov
sub
dec
mov
cmps
cmp
adc
cmp
mov
mov
and
fnstsw
inc
inc
mov
mov
bnd
xchg
icebp
push
inc
dec
gs
and
dec
mov
or
(bad)
push
pop
scas
fnsave
or
mov
imul
mov
je
sti
imul
mov
loope
icebp
push
pusha
jbe
stos
fisubr
jle
push
test
add
sbb
shr
ds
in
or
xchg
cmp
fisub
and
dec
mov
cwde
(bad)
daa
sbb
mov
xor
or
sbb
sbb
push
xor
jp
add
idiv
mov
iret
pop
mov
pop
pop
xor
sub
arpl
and
test
add
jl
adc
sub
icebp
inc
and
ret
jnp
push
sar
add
mov
sub
mov
push
jp
fistp
bound
mov
mov
jne
push
test
repnz
leave
stos
sbb
pusha
jl
stos
add
fstp
sbb
outs
cmp
add
sbb
sbb
rcl
jno
stos
xchg
cwde
or
push
fstp
mov
or
sbb
test
inc
xchg
jae
dec
mov
movs
mov
aas
je
fwait
and
shr
rcr
jecxz
movs
hlt
jae
mov
lahf
ins
jmp
adc
mov
pop
rol
sbb
or
xchg
jmp
aaa
test
jbe
hlt
inc
xlat
xor
adc
lock
in
mov
jns
ret
jns
ins
iret
lock
pop
arpl
jge
jle
inc
mov
stos
inc
mov
sub
data16
loope
xchg
jae
sub
std
push
mov
push
stos
in
adc
je
scas
mov
je
inc
rcl
push
xchg
movs
sbb
les
inc
and
mov
jecxz
ss
mov
or
sub
push
stc
dec
xor
repnz
dec
movs
and
jne
jge
mov
jecxz
dec
adc
hlt
call
(bad)
std
ins
sbb
adc
mov
jne
xor
xor
test
mov
mov
add
mov
aaa
pop
jg
sub
lods
inc
mov
cmp
mov
pop
mov
(bad)
xchg
lods
push
cmps
xor
jbe
js
push
dec
fidivr
and
push
mov
stc
pop
out
or
mov
push
mov
sub
sub
push
jmp
xor
and
bound
in
test
stos
call
mov
int
dec
psubw
jbe
push
inc
mov
pop
std
ss
lahf
xor
cmp
jecxz
lds
shl
in
cwde
push
cld
mov
cmc
push
mov
cmp
sub
or
mov
adc
scas
xchg
mov
inc
mov
dec
dec
out
inc
mov
(bad)
push
add
movs
fcom
add
jnp
neg
xchg
and
adc
jmp
mov
movs
mov
or
push
fs
xor
xchg
adc
push
and
lods
xlat
or
mov
fisttp
pop
xrelease
or
(bad)
aam
retf
adc
movs
push
pop
sub
push
inc
jbe
cmp
adc
pop
and
jno
into
popa
test
scas
mov
aam
fild
in
mov
mov
inc
in
adc
mov
out
aas
pop
shl
gs
rcr
stos
nop
imul
nop
sbb
dec
loopne
jmp
test
pop
call
jno
push
retf
mov
inc
movs
(bad)
or
adc
retf
scas
(bad)
pop
jbe
mov
sub
clc
je
call
loopne
add
adc
repz
sub
xchg
imul
fimul
ja
(bad)
test
jo
pop
jnp
movs
sbb
pop
xor
fistp
cmps
test
das
inc
cmp
push
ins
cs
sahf
and
push
aad
mov
push
std
aam
popf
popf
les
adc
in
mov
rol
xchg
inc
pop
lds
aaa
cmps
xchg
inc
mov
or
pop
rol
(bad)
sti
pop
stc
scas
rol
cmp
xchg
inc
adc
push
adc
loope
daa
lods
ss
nop
rcl
jno
mov
sub
jg
add
pop
lea
or
test
mov
push
shl
loop
mov
int3
add
mov
lods
fbld
jno
(bad)
jns
test
cmp
mov
ret
mov
xor
call
cmp
push
push
push
mov
pop
jl
mov
pushf
sahf
jno
pop
inc
(bad)
jmp
aam
jns
push
push
jns
sbb
ror
mov
icebp
xchg
mov
xchg
pop
bound
xchg
pop
mov
ja
xlat
imul
pop
rcl
xor
imul
jecxz
cmp
mov
cmc
push
(bad)
push
jnp
sahf
out
pop
out
dec
sbb
imul
(bad)
repnz
lea
pop
jne
imul
das
mov
int
lods
out
out
test
daa
dec
pop
mov
mov
imul
sub
dec
(bad)
xor
xor
lods
pop
pop
movs
jp
rol
push
sub
nop
mov
bound
loopne
jae
and
adc
inc
pop
dec
add
(bad)
outs
dec
xor
inc
sahf
jge
shl
(bad)
cmps
jle
cmp
and
and
push
adc
sbb
inc
cmp
fnstsw
push
idiv
xor
cli
in
shr
xchg
pop
jmp
int
das
dec
gs
sbb
sbb
mov
ret
mov
fs
scas
(bad)
mov
adc
adc
gs
pop
add
pop
inc
mov
jb
jo
cmp
xchg
out
push
stc
(bad)
jmp
in
into
mov
jge
enter
stc
and
stc
add
aaa
ss
add
cmc
xor
cmps
jg
adc
in
lds
sahf
pop
data16
push
mov
enter
(bad)
sub
push
and
xchg
inc
or
sbb
leave
push
jb
dec
mov
pop
rol
sahf
mov
imul
mov
pop
lds
jl
lods
outs
dec
sub
fisub
pushf
popf
aas
mov
pop
push
(bad)
fs
retf
lea
mov
dec
mov
sar
fmul
retf
inc
mov
out
lods
jae
iret
ja
sbb
pop
loop
pop
fwait
out
sbb
imul
jmp
add
jns
jmp
sbb
adc
ja
xchg
lahf
mov
push
cmc
movs
inc
and
mov
cdq
(bad)
pop
mov
int3
js
dec
pop
mov
inc
(bad)
loopne
inc
sbb
fnstenv
data16
inc
mov
fucomp
push
loopne
cmc
leave
inc
mov
or
xor
xchg
add
xchg
retf
jno
pop
cwde
arpl
cmp
fwait
imul
jns
(bad)
mov
daa
inc
loop
mov
push
icebp
test
cmp
or
jle
push
or
adc
dec
sub
jne
push
and
mov
daa
mov
call
add
inc
pop
repnz
mov
push
mov
dec
fs
mov
jmp
jle
imul
rol
xor
xchg
adc
mov
pop
addr16
out
ins
outs
jg
mov
lea
push
ret
dec
stos
jmp
fwait
jno
adc
mov
mov
mov
ficom
gs
or
pushf
fwait
pop
add
xchg
sub
push
cmp
jg
pop
xlat
mov
dec
ja
xor
mov
in
in
and
sbb
adc
push
sbb
dec
and
jne
rcr
outs
imul
mul
je
pushf
push
fadd
cmp
inc
lahf
pop
adc
(bad)
add
int
pop
mov
pop
or
adc
movs
mov
dec
sub
ja
aad
mov
dec
cwde
mov
add
ja
lahf
jae
mov
and
cvtps2pi
out
jmp
out
or
mov
imul
ficomp
das
imul
pop
cdq
jnp
mov
mov
pushf
rcr
pop
mov
add
pop
mov
sbb
pop
das
retf
mov
pushf
mov
mov
mov
shl
push
push
push
inc
push
imul
ds
sbb
xchg
and
rcl
push
rol
dec
push
into
ror
jno
jbe
in
hlt
cmp
and
fstp
jnp
(bad)
or
stos
cmc
push
ror
retf
cmps
jge
pop
add
sbb
pusha
xchg
je
sbb
fldcw
popa
mov
ja
sub
sub
jmp
xchg
cmp
sbb
cld
(bad)
rcr
cwde
jle
lods
out
xor
icebp
out
fcom
ins
mov
loope
jns
adc
out
arpl
mov
js
mov
fwait
iret
scas
nop
scas
mov
(bad)
xor
mov
clc
jo
stc
push
enter
lods
mov
sbb
pop
cmp
(bad)
or
ins
int3
mov
xchg
push
or
dec
mov
call
and
mov
das
popf
mov
das
jns
into
dec
push
mov
sbb
cmp
stos
pop
test
and
add
icebp
add
scas
push
fcom
pop
pop
sub
fldcw
(bad)
dec
popf
jbe
cmps
pop
sbb
dec
rcr
lods
jne
rcr
out
int3
jmp
sub
xchg
and
cmp
mov
push
aam
push
xchg
cld
bound
xor
xchg
out
inc
xchg
test
xchg
int
xchg
cmp
xchg
or
mov
movs
or
fbstp
adc
out
retf
fnstenv
gs
mov
lods
cmc
stos
or
loop
cwde
call
mov
mov
or
push
pop
cmp
rol
retf
push
mov
es
dec
or
push
and
cwde
mov
int3
pop
mov
test
push
pop
ret
mov
sbb
movs
mov
loopne
cmp
fs
and
sub
mov
cmp
je
ret
or
push
xchg
jmp
lahf
jl
cmp
cs
in
inc
fsubr
gs
push
clc
cmp
mov
stos
xor
mov
fs
mov
enter
in
dec
mov
sar
sub
fucomi
xchg
and
dec
mov
dec
int3
or
stos
cmp
int
or
inc
inc
call
call
and
sub
sar
pop
cmps
jecxz
(bad)
jb
add
sti
mov
fwait
jo
inc
not
inc
cmp
sub
cmp
loop
mov
push
jle
or
push
and
push
mov
xor
push
dec
inc
pop
pop
add
pop
test
xor
inc
push
fs
or
popf
js
enter
inc
mov
test
add
jmp
inc
mov
imul
pop
aad
(bad)
jnp
fimul
lods
movs
shr
and
stos
jmp
movs
int3
mov
hlt
jmp
imul
cmp
add
mov
mov
pop
mov
addr16
(bad)
arpl
pop
sub
cmp
xchg
push
popa
int3
mov
arpl
xor
test
cs
sub
xchg
pop
mov
in
test
mov
jmp
stc
fs
test
jecxz
push
mov
mov
mov
aam
and
xor
push
out
fsubr
fisttp
add
dec
mov
aas
shl
xchg
rdtsc
mov
fcom
inc
jle
test
lods
sub
arpl
or
adc
ja
cmp
imul
repz
and
inc
ffreep
stos
mov
push
cmp
inc
jle
add
pop
push
sbb
ror
popf
and
scas
jmp
out
icebp
fisub
fldln2
(bad)
sahf
inc
jne
ret
popa
push
cwde
retf
lods
rcr
shr
ret
enter
adc
rcl
in
xchg
sub
add
cwde
aam
ficomp
data16
add
pminsw
and
mov
push
popa
mov
cs
fcom
jo
xchg
lds
mov
fadd
sub
adc
loop
push
add
call
inc
cmp
cmps
push
arpl
call
mov
das
pop
in
iret
sub
gs
push
fdiv
and
mov
mov
jmp
mov
cli
pop
sub
add
cld
js
dec
sbb
sub
xor
idiv
jmp
sti
xchg
xor
aam
inc
jge
mov
pop
jmp
out
fmul
mov
jno
inc
outs
mov
popf
imul
jl
cmp
mov
inc
mov
nop
jmp
dec
ficomp
push
not
popa
dec
mov
cmps
cmp
mov
daa
repz
idiv
adc
sbb
sbb
pop
(bad)
push
jbe
in
mov
js
movntq
ror
jge
into
or
sub
mov
pop
stos
dec
aad
int3
mov
push
popf
mov
jp
test
xchg
mov
cmp
in
sub
mov
pop
movs
adc
imul
xchg
mov
sbb
pop
or
repnz
jmp
sbb
in
push
cdq
movs
data16
mov
in
pushf
pop
or
fs
pop
mov
stos
jae
xlat
or
aad
mov
dec
cmc
and
sbb
fsubr
push
pop
adc
cmp
ja
sub
xor
data16
sub
repz
jmp
dec
popa
mov
jmp
mov
inc
push
nop
pop
xor
mov
cmp
(bad)
xchg
fild
mov
mov
test
cmp
adc
imul
jbe
jge
iret
mov
sbb
dec
pop
jne
ds
adc
push
xchg
pop
jge
mov
mov
nop
mov
jae
jne
mov
pop
dec
push
xchg
and
sbb
pop
push
pop
out
rcr
imul
adc
push
xor
das
xor
call
add
push
jno
test
rcl
or
cwde
mov
mov
ins
inc
out
sti
push
pushf
ss
and
sbb
je
dec
icebp
xor
clc
sub
xlat
and
aas
jmp
push
pushf
popa
imul
daa
ins
adc
xor
cs
add
inc
and
mov
popf
jl
cmp
ss
ins
cmp
sbb
push
inc
loop
test
es
dec
jne
sti
push
mov
lods
cmp
test
sbb
push
icebp
dec
es
icebp
arpl
or
jnp
jmp
es
jo
mov
test
test
sub
pop
mov
or
adc
outs
xchg
cmp
xchg
dec
pop
cmp
push
sbb
jge
jle
mov
enter
ret
dec
mov
and
enter
stc
ins
cmp
push
sbb
sub
dec
xor
mov
movs
and
das
or
stos
(bad)
es
pop
retf
sub
mov
test
dec
lds
cmp
test
xchg
pop
jae
jge
xor
mov
data16
push
movs
fmul
inc
sti
std
gs
ins
ins
or
fnsave
pop
mov
mov
xchg
push
adc
add
aaa
jecxz
daa
xchg
ret
cmp
or
rcl
scas
xor
or
ins
add
fs
test
lds
cmps
sub
in
xchg
sub
pop
sbb
sub
and
mov
push
ss
sbb
mov
jmp
adc
jecxz
xor
mov
xor
scas
leave
adc
mov
stos
imul
pop
cmp
push
(bad)
fild
into
mul
pop
or
xchg
mov
(bad)
mov
sbb
test
add
jo
dec
je
jp
hlt
adc
cmp
cmp
(bad)
repz
ins
mov
repnz
inc
sti
push
hlt
push
push
repz
xor
sbb
add
xlat
test
xchg
push
jns
xor
mov
(bad)
fcomp
retf
sbb
fisubr
mov
mov
leave
in
mov
sub
es
xchg
cs
push
cmp
jno
pop
imul
stos
adc
dec
(bad)
repz
push
mov
xchg
add
test
stc
out
cli
xor
push
xor
aad
rcl
shl
shl
push
test
out
dec
es
cs
sti
pop
add
mov
jecxz
xchg
xchg
xor
js
inc
jp
ret
or
stos
mov
fsubr
xlat
out
jl
in
hlt
push
cmc
fsubr
icebp
mov
shl
or
xor
xchg
pop
not
bound
outs
test
adc
ja
pusha
popf
mov
add
cld
in
and
jae
pusha
fcom
mov
xor
cmps
cdq
shl
xchg
out
add
retf
xlat
imul
idiv
mov
jne
or
sbb
mov
das
push
mov
and
inc
retf
mov
retf
push
and
jmp
jb
inc
pop
aad
inc
jne
pop
xchg
sub
cli
sti
stc
iret
in
and
sar
push
dec
pop
rol
jae
clc
out
imul
jmp
sbb
iret
fdiv
outs
add
pop
outs
ror
jmp
je
xchg
aam
jge
pop
int3
dec
ret
inc
call
mov
stos
(bad)
or
lock
lahf
inc
sbb
mov
mov
sub
sbb
push
mov
in
loopne
add
pop
fldenv
cmp
cmc
xchg
adc
test
pop
imul
outs
mov
pop
sti
jg
cmps
cmp
shr
pop
mov
std
sbb
adc
pushf
sbb
data16
je
in
cld
(bad)
leave
aas
pop
sub
test
sbb
push
mov
cmps
imul
mov
xlat
dec
sub
test
xor
and
mov
int3
in
ins
retf
sbb
add
fist
in
and
mov
pusha
and
adc
stos
rsqrtps
and
push
sub
cli
in
pushf
xor
jecxz
xchg
jp
lea
mov
lea
cmps
arpl
loop
push
lods
leave
popf
pusha
jge
and
int
dec
mov
loop
mov
jg
inc
(bad)
(bad)
retf
mov
mov
arpl
mov
clc
call
jae
mov
enter
xchg
out
dec
scas
iret
test
dec
out
sub
mov
add
inc
xchg
jbe
or
jge
ror
sbb
in
or
xor
loope
xchg
(bad)
xchg
pop
leave
jo
sbb
scas
pop
outs
add
mov
jns
stc
push
imul
and
xchg
lock
pop
shl
arpl
add
aad
movs
sar
popa
sbb
jg
int3
xchg
inc
add
pusha
pop
xor
and
sbb
and
fs
lock
or
inc
test
mov
mov
sub
les
dec
inc
int
shl
dec
std
or
test
scas
dec
cmp
movs
fcompp
dec
sbb
mov
jmp
test
jle
in
ins
in
xchg
ins
push
xchg
adc
cmp
mov
sbb
nop
cmps
sub
arpl
fs
mov
(bad)
int3
aam
push
cmp
test
aam
mov
add
lods
repz
pop
pop
(bad)
sbb
push
fild
ret
or
push
pop
cmp
push
(bad)
imul
push
xchg
sub
sar
clc
jmp
(bad)
stos
and
xor
sub
push
pop
out
ja
and
xchg
xor
mov
leave
jne
xchg
add
(bad)
mov
mov
push
add
(bad)
pusha
(bad)
nop
xor
cmc
sub
(bad)
aas
sub
fs
mov
cwde
jns
into
mov
fstp
addr16
fchs
nop
outs
add
into
and
ud2
inc
test
leave
mov
(bad)
lods
iret
retf
push
int
sbb
stc
fucomip
std
into
cdq
into
in
mov
in
pop
out
jmp
pop
push
xor
stos
jo
xchg
cli
mov
popf
daa
mov
cmp
arpl
ret
and
mov
sbb
and
push
imul
mov
rcl
mov
leave
xor
cmps
ins
ds
dec
rcl
out
sbb
mov
inc
enter
push
push
jl
ror
add
mov
data16
repz
lahf
xor
cld
rcl
pop
icebp
jns
imul
push
dec
cwde
inc
add
ss
sbb
add
push
loope
imul
(bad)
xchg
fidivr
sbb
pop
loope
(bad)
sahf
mov
adc
rol
fst
aad
and
mov
addr16
aam
mov
popa
popa
imul
jle
in
pop
push
retf
mov
inc
xchg
sub
jae
dec
aas
test
addr16
inc
cmp
ficomp
jae
rcr
std
push
jecxz
lahf
fidiv
out
(bad)
push
xor
in
mov
add
push
xchg
je
ret
scas
mov
jne
push
ss
jns
sti
add
stos
pop
jbe
adc
ins
mov
nop
fst
mov
mov
cmp
pop
jns
jge
(bad)
cmp
loope
js
daa
popa
sti
jno
cmp
stos
mov
fld
mov
repz
scas
jecxz
pop
inc
dec
fisubr
xchg
jmp
pop
cmp
push
ficom
mov
arpl
push
mov
pop
cmp
scas
sbb
lods
pop
(bad)
mov
into
ret
mov
in
jle
aad
sub
pop
shl
sub
jnp
in
add
push
aam
sbb
test
jae
xor
mov
xor
cmp
pop
and
loopne
dec
jne
out
sub
int
imul
dec
jge
neg
xchg
bound
sbb
pop
and
mov
ss
pop
loopne
mov
pop
and
mov
sbb
and
push
pop
and
ja
pop
aaa
or
movs
sub
scas
jle
ret
(bad)
ins
sub
adc
iret
jle
push
sub
icebp
push
cwde
xchg
dec
sti
bound
fstp
repz
and
(bad)
retf
out
call
out
lahf
mov
add
pop
pop
dec
sahf
cmp
cmp
mov
xchg
popa
inc
cmp
out
ret
cmp
push
adc
in
cwde
push
add
scas
inc
jge
scas
das
push
and
adc
out
mov
sbb
dec
imul
add
mov
imul
rol
or
jnp
out
es
imul
in
pushf
pop
xor
nop
std
loop
xor
push
pop
fcomp
jmp
ror
(bad)
fidiv
add
aam
popf
jg
push
or
rol
(bad)
aam
jno
inc
jp
inc
ror
daa
push
inc
inc
imul
call
jmp
push
bound
add
and
std
test
add
pop
pop
je
repz
mov
and
mov
(bad)
dec
fsub
pop
mov
xchg
ds
cmps
fdiv
inc
xchg
aam
mov
jle
sbb
mov
jecxz
in
out
bound
das
outs
add
pop
and
out
sbb
jbe
imul
(bad)
das
fstp
fdivr
out
nop
pushf
xchg
push
push
adc
mov
cli
add
jne
rep
test
(bad)
out
shl
add
and
add
xor
and
pop
cld
inc
xor
and
fs
xor
in
stos
adc
cmps
inc
mov
and
popa
jbe
inc
xor
adc
stc
xchg
lea
cmc
push
out
mov
mov
sar
pushf
cdq
mov
add
sub
and
cdq
js
hlt
stos
or
sar
lahf
add
jbe
pop
int3
push
jne
sbb
xlat
test
idiv
je
std
cwde
cmp
jb
nop
or
adc
pusha
sar
emms
fsubp
mov
outs
mov
movs
in
dec
iret
lods
dec
jb
cmp
ret
popa
xchg
stos
inc
sub
mov
xchg
mov
imul
inc
mov
test
out
add
push
mov
or
add
pop
sti
jmp
sar
push
aas
fistp
(bad)
mov
popa
pop
inc
lahf
cmps
adc
or
push
lods
jb
add
mov
dec
push
outs
mov
sbb
adc
jl
call
xor
test
imul
xlat
mov
sar
sub
pop
ds
push
sub
mov
(bad)
jmp
pop
lds
inc
pop
movs
mov
hlt
pop
sbb
push
iret
call
sbb
dec
ins
sbb
aaa
(bad)
shl
mov
in
inc
mov
mov
mov
jmp
cdq
sbb
rcr
and
mov
cmp
dec
cs
push
(bad)
mov
loope
xchg
sbb
lods
inc
add
out
jb
cmp
packuswb
mov
pop
add
aas
mov
cmp
pop
inc
pushf
adc
das
dec
(bad)
xor
fild
mov
call
jle
cld
add
repnz
jb
xchg
(bad)
sub
int3
nop
loope
lea
or
push
mov
mov
inc
mov
(bad)
in
xor
aam
dec
call
imul
and
inc
sub
xchg
out
neg
sahf
imul
dec
add
ds
shr
lock
hlt
nop
sub
xchg
cmps
in
call
add
data16
ds
aaa
push
mov
mov
adc
sahf
retf
movs
xchg
xchg
test
in
fwait
scas
jl
mov
pop
push
mov
pop
add
add
out
fdivr
cmp
outs
xchg
cld
rcr
call
stc
cdq
data16
ret
movs
add
addr16
adc
inc
sub
push
retf
xchg
jle
movsx
and
in
mov
dec
mov
push
aad
push
pushf
adc
mov
inc
(bad)
in
xchg
adc
sbb
stos
jb
xchg
lods
jg
int3
retf
mov
ds
cwde
jb
jb
das
ja
or
xchg
leave
stos
xor
int
xor
test
sbb
js
gs
mov
mov
push
in
jecxz
(bad)
fidiv
data16
jo
inc
call
mov
cmp
push
jne
emms
lods
dec
xlat
dec
inc
xlat
cwde
inc
push
sub
hlt
sbb
jl
inc
in
dec
pusha
ds
retf
or
mov
test
lahf
and
inc
mov
lahf
cdq
(bad)
arpl
sub
test
(bad)
and
mov
add
mov
sti
js
xor
movs
inc
lock
xor
das
mov
dec
outs
pop
out
outs
cmp
or
mov
lods
jmp
xor
inc
dec
out
cdq
imul
or
sbb
adc
enter
sbb
retf
mov
int
mov
cmp
inc
movs
sti
jne
push
fs
jmp
jb
jae
add
xchg
or
lds
add
xor
iret
mov
inc
bnd
aam
lods
es
imul
sar
sub
mov
dec
(bad)
in
cdq
ret
cmps
dec
hlt
cmps
loope
(bad)
mov
cdq
mov
lods
push
and
pop
ret
jecxz
push
xor
in
pop
addr16
das
jle
mov
xor
jmp
sub
push
push
dec
jmp
std
inc
dec
(bad)
xchg
adc
scas
das
rcl
fmul
inc
cld
repnz
add
rcr
mov
out
push
sub
movs
xchg
push
or
dec
lds
xchg
or
retf
inc
add
add
pop
jae
dec
jp
mov
xor
mov
pop
and
cli
std
test
fcomip
into
(bad)
scas
lea
or
das
cmp
icebp
js
popa
stos
mov
loope
cmp
data16
fiadd
xor
aas
pop
jo
test
pop
inc
(bad)
addr16
mov
mov
jmp
mov
mov
pop
or
stos
repnz
xchg
jb
jno
push
into
les
test
fcom
gs
adc
div
fbld
mov
aad
daa
push
stos
ror
jmp
add
loop
sar
rcl
add
dec
add
cmp
gs
jp
gs
and
mov
jg
in
dec
xchg
cmp
imul
pop
call
cmp
out
inc
data16
mov
mov
pushf
and
cmp
fild
jle
push
les
inc
cs
mov
jno
fmul
sbb
loopne
and
les
fs
dec
fucomp
ins
in
jg
mov
lock
and
and
(bad)
pop
pop
cmc
mov
fldcw
add
push
cld
sub
or
inc
cld
int3
inc
push
or
adc
inc
mov
xchg
adc
dec
mov
imul
test
xchg
jecxz
out
out
mov
push
mov
xchg
iret
das
inc
retf
xor
gs
cmp
retf
stos
pop
mov
(bad)
xchg
cmp
push
cmp
in
repz
adc
loopne
xchg
outs
xchg
aad
mov
test
pop
pop
xchg
jecxz
sub
cdq
sbb
xchg
jbe
jns
push
bnd
jno
jae
repnz
outs
pop
mov
(bad)
and
fimul
jbe
shl
dec
fidiv
pusha
inc
pop
mov
int
push
(bad)
dec
adc
jbe
aam
cmps
xor
lea
retf
mov
pop
cmp
mov
xor
cmps
cmp
mov
cmp
cmp
sbb
lods
or
cmp
es
adc
pop
icebp
arpl
jmp
mov
aas
fcmovb
cld
xor
pop
push
add
xchg
or
cmp
xchg
mov
ret
inc
stc
(bad)
fs
ja
dec
cli
iret
push
stos
jne
pop
imul
mov
in
mov
lods
cmp
cmps
mov
call
add
mov
mov
pop
dec
inc
adc
mov
mov
jecxz
pop
pop
(bad)
xor
adc
xor
fnsave
pusha
retf
outs
scas
stos
mov
add
xchg
push
fst
or
push
jo
pop
fst
ret
mov
fdiv
inc
cmp
mov
in
frstor
stos
outs
dec
cmp
js
add
adc
bound
inc
shl
movs
xor
sub
mov
cmc
stc
in
sbb
add
lea
xlat
add
jo
push
and
cld
push
clc
shl
push
stos
out
pop
pop
xor
or
push
lahf
xchg
push
fs
add
fcom
ja
pop
retf
arpl
xor
mov
mov
into
xchg
vpshlb
xchg
fld
dec
loop
jne
adc
and
cmp
clc
cmp
jle
outs
mov
jne
pop
or
pop
push
ds
push
jle
ds
popa
jbe
js
dec
mov
adc
mov
mov
or
adc
fldcw
leave
or
xor
cmp
mov
daa
js
pusha
es
into
in
jge
out
or
mov
cmp
pop
ja
(bad)
retf
push
mov
sbb
sub
imul
dec
sub
ret
push
imul
cmp
mov
xchg
cmp
xor
data16
(bad)
mov
in
in
jmp
dec
mov
adc
lock
je
xchg
imul
dec
out
sbb
or
stos
neg
xchg
or
mov
mov
fld
dec
push
mov
and
push
shl
jo
out
pop
dec
sbb
cmps
loopne
push
inc
fistp
lock
loop
mov
outs
das
enter
fidivr
add
or
repnz
cli
out
jge
nop
dec
mov
dec
jae
or
jl
mov
ds
jno
iret
jmp
popa
and
xchg
loope
jmp
pop
mov
sub
jne
sbb
jle
dec
cmp
cmps
sub
sbb
push
lods
mov
cs
das
sub
jmp
lahf
inc
xor
xor
(bad)
sub
pop
inc
pop
push
dec
mov
sub
mov
jg
nop
hlt
shl
dec
cs
dec
fcomp
clc
ret
ins
ror
inc
inc
dec
add
dec
mov
jl
int3
popa
hlt
sbb
shl
or
daa
ret
inc
add
mov
dec
mov
pop
xlat
mov
jmp
(bad)
pusha
movs
(bad)
in
inc
xchg
mov
cmp
fmul
or
jmp
sub
aas
add
xchg
loop
int
aaa
push
ret
xlat
movs
pop
out
pop
movs
push
or
cmps
call
arpl
addr16
stos
pop
sar
push
imul
aaa
sti
addr16
sub
(bad)
sbb
imul
outs
push
sub
or
and
and
push
daa
mov
adc
and
or
dec
cwde
std
mov
cmp
jl
add
hlt
mov
pop
mov
push
pop
repz
push
dec
cs
jmp
pop
and
mov
mov
push
dec
lahf
sbb
inc
pop
mov
imul
jmp
push
int3
int
jmp
or
mov
fsubr
(bad)
(bad)
jbe
mov
cwde
int3
inc
pop
faddp
cli
pop
push
enter
ins
retf
sbb
jnp
sbb
pop
jle
fmul
leave
int3
outs
jno
outs
push
scas
mov
fdivr
or
adc
cli
scas
into
cmp
or
popf
ss
repz
mov
and
push
test
out
dec
push
xor
div
pop
pushf
cmp
mov
fs
add
in
call
int3
dec
pop
(bad)
adc
loope
mov
les
dec
bound
add
ins
and
xor
mov
sbb
fld
mov
pop
stos
ins
xor
neg
inc
clc
popf
cmps
sub
stc
call
shl
(bad)
mov
xchg
cmp
jbe
xchg
adc
lock
imul
fistp
and
cmp
neg
popa
test
fcomp
int
repnz
ins
(bad)
in
popa
add
or
popf
inc
fld
adc
popa
ret
mov
and
fwait
(bad)
sub
mov
mov
pop
jmp
dec
push
leave
mov
scas
or
xchg
ss
push
xchg
and
cmp
out
repnz
imul
shl
xchg
xlat
pop
and
pop
push
dec
add
(bad)
loopne
sbb
pandn
ss
jnp
arpl
sbb
dec
xchg
add
out
xchg
push
sub
outs
add
inc
hlt
inc
repnz
(bad)
and
adc
retf
jmp
ins
xchg
push
push
cmc
xchg
jmp
(bad)
sbb
adc
int
inc
xor
scas
retf
pushf
cld
scas
mov
cmp
mov
cld
jmp
cdq
dec
pop
outs
xchg
pop
test
mov
mov
adc
pushf
mov
dec
dec
mov
add
test
(bad)
int3
ja
pop
ds
(bad)
cmp
or
dec
mov
xchg
or
rcr
js
test
rcl
xchg
in
or
aaa
xlat
pusha
(bad)
mov
push
shl
(bad)
and
loopne
ja
dec
dec
jae
mov
sub
mov
adc
xor
adc
jbe
(bad)
es
js
cmp
cmp
cmps
cmp
lock
outs
shl
push
jle
sbb
inc
push
nop
loope
pop
inc
icebp
xor
lds
or
push
adc
outs
retf
aas
call
and
push
repz
jl
aam
stos
mov
mov
xchg
ret
test
sub
adc
(bad)
(bad)
nop
inc
mov
out
add
jmp
adc
mov
sub
pop
mov
pop
retf
fnstsw
ja
sbb
pop
aaa
das
sbb
jb
dec
popf
lock
xchg
pop
(bad)
cmc
inc
or
fneni(8087
mov
and
scas
daa
(bad)
adc
fs
fadd
push
fnstenv
mov
(bad)
outs
dec
cmp
dec
mov
sti
test
mov
and
das
jg
push
icebp
push
cdq
inc
dec
mov
icebp
sar
dec
sahf
(bad)
fsub
inc
adc
daa
repz
jl
loope
jg
mov
or
sbb
clc
repz
jle
sahf
mov
jge
xor
push
repnz
jbe
push
fild
outs
ja
pop
dec
sub
and
adc
or
xor
fwait
push
add
mov
xor
aad
push
movs
pop
mov
jge
pop
jno
js
or
pop
sti
sbb
xchg
jno
pop
xor
xchg
movs
test
pop
addr16
jmp
xchg
stc
push
jmp
jecxz
mov
je
jmp
mov
cmp
fwait
(bad)
bound
pop
aad
push
stos
int3
cdq
nop
clc
pop
repz
out
jmp
les
and
fsub
or
mov
mov
add
pushf
jecxz
into
cdq
lahf
jmp
mov
push
movs
sti
sbb
dec
in
imul
inc
mov
in
not
and
push
in
rcl
ret
and
ins
pushf
mov
mov
cmp
cmp
jne
jbe
lods
xchg
gs
out
sbb
mov
inc
jno
cmp
sbb
mov
mul
sar
in
imul
and
js
cmps
out
jmp
cmp
mov
scas
xchg
dec
xchg
jae
cli
and
das
inc
sbb
jmp
ret
shl
loope
mov
lds
fnstenv
retf
push
int
mov
jmp
dec
adc
sahf
inc
jbe
iret
jg
sub
push
leave
out
mov
xor
shl
(bad)
and
sbb
sub
and
cmp
mov
adc
mov
movs
cmps
sbb
inc
xor
shl
fidiv
inc
aas
mov
sbb
pop
cmps
mov
aam
repnz
pop
cmp
adc
repz
jae
mov
mov
out
das
fs
movs
fldenv
pop
add
mov
mov
in
sti
icebp
pop
xlat
xchg
icebp
push
xchg
jo
dec
int
or
adc
jp
shl
cmp
push
inc
fwait
iret
cdq
je
loopne
movs
sahf
push
pop
jo
stos
pmulhw
(bad)
cdq
push
push
cmps
pop
push
je
jge
push
xchg
jg
les
loope
out
adc
retf
sbb
add
mov
ror
push
dec
loope
xchg
adc
fxch
aas
aad
mov
jp
pop
ja
mov
adc
lock
hlt
addr16
into
mov
mov
mov
cmps
xor
adc
lock
movs
out
lea
mov
test
xacquire
mov
in
cmp
jg
data16
push
movs
xlat
sub
dec
push
lahf
fld
xchg
sub
dec
stos
clc
call
cmc
int3
call
xor
dec
movs
pop
dec
and
mov
xchg
cmc
and
push
or
je
test
mov
int3
or
sbb
xor
or
dec
nop
push
jle
clc
fdivr
sbb
pushf
xor
mov
popa
mov
mov
sub
(bad)
aam
(bad)
jmp
jns
push
adc
ret
cdq
add
add
pop
push
jle
sub
inc
hlt
mov
rol
pop
inc
pusha
mov
push
repz
cmc
jb
pop
cmps
dec
(bad)
fdivr
xchg
mov
movs
out
or
lock
es
aas
dec
xchg
cmp
sbb
adc
std
cmps
lahf
in
sti
xchg
sub
push
jnp
cld
iret
rcl
jg
pop
outs
mov
sbb
iret
adc
sti
xchg
mov
mov
push
inc
mov
mov
or
(bad)
mov
rcl
pop
ins
mov
pop
ja
jmp
sahf
nop
inc
and
mov
push
ins
test
icebp
or
jns
push
inc
adc
push
sbb
xor
lahf
xchg
push
je
adc
fisubr
ret
jbe
pop
repz
sub
cld
in
call
or
dec
mov
sbb
jecxz
jbe
and
xor
adc
arpl
aam
nop
sbb
in
jno
mov
mov
loopne
push
pushf
xchg
mov
xchg
int3
popa
rol
in
das
jno
and
mov
add
xor
push
outs
int3
adc
jns
fadd
sti
sbb
jo
sbb
xor
fistp
mov
xchg
adc
lahf
sbb
or
mov
out
aam
nop
inc
jp
out
fwait
mov
and
outs
std
lahf
fst
or
inc
add
adc
mov
dec
cmp
leave
test
loope
dec
pop
fnstcw
mov
cmps
lock
int3
js
xlat
clc
pop
retf
out
mov
inc
sbb
cwde
jl
stc
(bad)
call
movs
mov
dec
pop
push
out
pop
cmp
mov
or
and
jl
inc
dec
cli
mov
push
icebp
dec
(bad)
ja
(bad)
out
push
pop
repnz
clc
push
mov
push
fwait
lahf
cmps
inc
xchg
xor
nop
pop
es
jnp
js
cmp
in
sub
cld
cmp
lods
aas
mov
loopne
leave
(bad)
and
leave
ins
ret
es
cmp
jl
cmp
xchg
(bad)
(bad)
inc
in
jp
pop
add
prefetcht1
add
(bad)
and
movs
xchg
in
fs
add
inc
push
or
inc
inc
mov
ja
movs
test
imul
mov
outs
xchg
rcl
stos
xchg
arpl
mov
sbb
(bad)
xchg
not
dec
add
repz
lods
pop
int3
pop
cmp
pop
dec
dec
mov
xchg
rcr
cmps
cmp
mov
in
mov
pop
out
sub
stos
push
push
in
test
mov
aam
and
into
sbb
lahf
stos
dec
jae
or
ret
inc
into
std
and
ins
pop
cmp
sbb
in
imul
push
lods
idiv
arpl
mov
cwde
sbb
adc
int3
out
vmread
inc
fisub
ror
sti
lods
test
xchg
add
(bad)
test
idiv
mov
sbb
popa
jnp
in
imul
fsub
bound
dec
rcl
mov
mov
adc
or
adc
fild
cld
int3
call
test
ds
sbb
fwait
adc
adc
lds
jl
add
push
xchg
ret
imul
jmp
jnp
sub
es
mov
or
scas
add
call
sbb
cmp
xchg
dec
pop
lahf
mov
mov
cmp
or
iret
add
mov
xchg
sbb
jmp
call
push
inc
adc
aas
mov
adc
iret
and
(bad)
dec
aas
inc
mov
sbb
adc
mov
dec
lods
xchg
cmc
test
sbb
leave
loopne
inc
cmps
cdq
addr16
jge
loopne
xchg
(bad)
into
and
xbegin
lds
call
jno
btc
or
out
outs
push
push
mov
aas
stc
aam
mov
mov
push
xchg
jae
js
ror
popa
inc
iret
xchg
and
jmp
call
push
ds
sbb
leave
das
add
mov
inc
add
sub
cdq
inc
aam
or
cwde
dec
sti
dec
or
sbb
jmp
push
sbb
and
mov
ret
ss
xchg
add
scas
nop
loope
stos
ret
cdq
mov
enter
cmp
dec
dec
retf
mov
pop
mov
ins
les
push
fs
les
add
retf
pushf
and
cld
mov
imul
bound
inc
xchg
cmp
mov
mov
aad
fld
cmp
imul
add
mov
test
pop
mov
sahf
outs
sbb
out
push
addr16
int
out
inc
cmps
in
pop
leave
fcomp
clc
lods
adc
shr
dec
mov
stos
shr
fld
mov
push
jbe
adc
mov
pop
arpl
mul
mov
inc
jg
fs
jae
dec
rol
mov
xor
aam
and
sub
shr
pop
xchg
cmp
push
(bad)
xlat
push
imul
cld
jno
mov
pop
mov
xchg
mov
xchg
mov
in
(bad)
(bad)
and
mov
sahf
adc
ror
add
dec
and
scas
add
inc
mov
jmp
mov
enter
aas
loop
jmp
dec
mov
jbe
push
adc
in
push
call
mov
call
push
xchg
out
scas
mov
pop
mov
xchg
xor
push
dec
xchg
stos
mov
shr
aam
pop
dec
xchg
sti
add
fimul
(bad)
adc
fistp
in
cdq
popf
ins
mul
lds
and
and
cmp
push
push
xor
adc
jle
out
lock
cmp
xchg
xor
imul
aas
sbb
addr16
pop
adc
out
pop
push
xchg
imul
leave
sub
or
mov
icebp
ja
adc
dec
sub
xor
mov
jl
push
push
xchg
in
add
push
popfw
push
call
scas
push
rol
mov
push
clc
inc
iret
movs
mov
xor
lea
ds
(bad)
xlat
add
out
daa
sbb
and
bound
push
lods
push
into
and
rol
mov
scas
mov
cld
mov
jp
xchg
iret
cmps
pushf
inc
lock
and
fst
jbe
sbb
in
aas
outs
into
lds
retf
dec
ror
jns
jbe
xor
(bad)
dec
daa
(bad)
je
ds
fnstenv
cmp
aam
ror
jmp
sbb
cmp
or
test
mov
or
xchg
sub
inc
js
mov
retf
in
cwde
jns
pop
add
sub
jle
jae
pop
in
mov
sbb
mov
adc
adc
jmp
(bad)
aad
xchg
cwde
fnstcw
mov
xchg
sbb
add
dec
lods
call
sub
dec
fcom
daa
inc
imul
mov
ja
neg
(bad)
enter
add
jbe
xchg
mov
cwde
repnz
adc
adc
jecxz
in
xchg
leave
mov
sbb
dec
pop
pop
and
or
sar
daa
push
rcr
inc
ret
or
pop
and
test
retf
popa
xor
cmp
mov
movs
add
push
cmp
mov
scas
in
sub
cmps
dec
shl
sbb
mov
(bad)
and
mov
nop
mov
mov
xchg
push
or
fs
pop
mov
bound
mov
push
sbb
in
pop
jb
adc
rcr
xchg
clc
mov
cmp
mov
add
outs
push
mov
lods
jae
ss
mov
fistp
add
mov
jmp
in
mov
(bad)
aas
add
mov
xchg
cmp
outs
fs
call
sbb
xchg
pop
jnp
enter
pop
xor
inc
mov
push
out
int3
movs
(bad)
mov
in
jns
inc
sbb
dec
xor
(bad)
jmp
leave
mov
mov
pusha
xchg
mov
adc
and
inc
pop
xchg
mov
cmps
aaa
cdq
push
out
mov
push
cmps
inc
mov
mov
loope
sbb
jb
xlat
popa
(bad)
(bad)
(bad)
out
mov
dec
(bad)
rcl
test
and
rol
out
nop
inc
mov
pop
retf
sti
in
jno
ret
adc
mov
pop
jmp
mov
push
dec
pop
(bad)
adc
daa
test
test
mov
xchg
je
ins
pop
jmp
jne
(bad)
icebp
rol
and
adc
in
rol
arpl
pop
not
cmp
pop
mov
jle
imul
je
inc
push
test
mov
mov
loope
jmp
jne
enter
jle
mov
mov
retf
inc
xor
nop
(bad)
pop
ror
je
push
fucomp
ins
and
pop
ror
std
retf
push
lea
in
mov
call
lods
int
mov
in
or
es
push
std
cwde
mov
jg
mov
add
fisub
sbb
sub
test
or
xchg
mov
inc
pop
and
or
clc
les
and
dec
push
dec
pop
jle
inc
xchg
add
push
lock
adc
jns
jg
aaa
xor
mov
scas
sub
fld
cs
add
pop
cli
mov
mov
fldenv
add
sbb
out
dec
jg
out
mov
out
jne
jmp
or
mov
jbe
and
jge
pushf
dec
loop
xor
jge
pop
mov
cmp
push
(bad)
or
and
cmp
cmps
jnp
sub
ds
pop
xchg
(bad)
test
out
(bad)
mov
lock
fist
mov
cmp
adc
add
clc
jle
aam
in
jns
mov
lock
pop
push
add
cmp
mov
add
shl
mov
call
pop
cmp
retf
call
fild
inc
retf
mov
push
test
lods
mov
sub
scas
jns
gs
xor
push
scas
add
mov
out
jle
std
inc
mov
sub
not
aas
mov
jle
jge
sub
sar
stc
xchg
push
push
(bad)
lock
test
pop
lods
lods
into
pop
scas
jae
xchg
(bad)
nop
xor
fs
rcr
jb
rcr
inc
lea
pusha
dec
in
fstp
xor
retf
jb
in
dec
aas
mov
rol
mov
push
pop
test
stc
ds
and
outs
push
inc
and
pop
jne
mov
add
xchg
pusha
xchg
mov
iret
test
dec
dec
ja
std
sbb
and
xor
jnp
jno
mov
sar
outs
xor
mov
int3
sub
data16
stc
inc
xor
lds
sar
xchg
pusha
les
stc
stos
movs
mov
stc
repnz
jo
sbb
mov
mov
adc
pop
enter
ins
adc
xchg
(bad)
cmp
loope
inc
jbe
mov
not
mov
movs
ja
aas
sub
lea
shl
scas
inc
loopne
fcomp
cs
cwde
ret
sub
clc
jbe
rcl
add
pop
int
neg
xchg
out
fmulp
sub
das
ja
ins
pusha
push
cmp
mov
int
and
xlat
mov
or
adc
xchg
mov
xor
dec
hlt
iret
fisubr
movs
mov
shl
pop
neg
(bad)
jae
cmp
jne
daa
or
cmp
fiadd
pop
pop
fsubr
mov
add
(bad)
call
arpl
gs
mov
jg
cmp
mov
push
xchg
push
push
xor
mov
dec
dec
js
mov
or
(bad)
mov
mov
mov
retf
push
test
sbb
inc
dec
add
sbb
(bad)
mov
loope
rcl
retf
xchg
cmp
(bad)
lods
test
aaa
mov
xor
pop
inc
and
cs
mov
dec
retf
mov
mov
inc
cli
bound
sub
inc
mov
pop
mov
jle
mov
pop
clc
cwde
xlat
push
xor
push
jp
xor
push
retf
test
mov
xchg
jle
add
fs
inc
shl
mov
xor
into
cwde
cmps
add
pop
call
stos
mov
aaa
movs
dec
dec
add
sub
mov
jmp
retf
push
jle
daa
add
cmp
mov
and
(bad)
stos
mov
cld
loope
pop
jp
sub
sub
sti
sbb
out
nop
jp
mov
cs
add
xchg
fs
(bad)
aam
rcr
bound
inc
rol
push
(bad)
cmp
xor
nop
or
mov
lea
inc
out
mov
out
xlat
out
loop
inc
xchg
gs
or
std
dec
mov
push
xor
adc
xchg
push
xor
inc
sbb
and
jp
mov
ins
dec
cmp
fnsave
enter
push
std
cmc
rol
mov
and
cmp
out
adc
stc
stc
mov
mov
inc
mov
push
repz
push
jge
add
in
call
cmps
clc
jbe
pop
daa
(bad)
jns
(bad)
into
jp
dec
mov
loopne
into
cmc
mov
push
movs
push
aaa
xor
bound
adc
cmp
call
dec
jp
push
add
test
jmp
ds
sbb
xchg
out
test
test
in
jno
add
push
jae
sar
adc
push
and
add
nop
jl
mov
jns
test
imul
cmp
cs
inc
es
jmp
or
and
mov
lods
aas
retf
mov
mov
inc
lods
(bad)
movs
(bad)
sbb
push
sti
stos
fidivr
pop
dec
enter
paddsb
inc
(bad)
popa
xchg
dec
cwde
fcom
cmc
addr16
cmp
jnp
xor
je
sar
push
ret
sbb
pop
dec
test
sar
mov
(bad)
and
push
pushf
rcr
cmp
retf
hlt
sbb
enter
push
ins
or
in
pop
fsubr
push
and
repz
aad
aas
xlat
or
(bad)
inc
sti
jns
lds
jecxz
lods
out
scas
xchg
dec
loope
scas
xchg
aaa
cdq
mov
gs
iret
mov
or
arpl
mov
out
mov
push
xchg
inc
cmp
pop
sbb
push
neg
mov
and
idiv
mov
inc
div
lods
out
cmps
outs
ins
xor
xor
mov
sbb
add
stc
out
inc
mov
jmp
dec
fs
pop
pop
mov
shr
push
and
stos
in
frstor
aas
nop
jbe
sbb
dec
xor
push
inc
xor
pop
adc
mov
lods
dec
mov
fcmovb
adc
(bad)
aam
stos
cld
inc
jo
xor
add
pop
js
cmp
cmps
pop
icebp
mov
cmp
inc
ja
jl
mov
cmps
xor
cmp
in
sti
add
fnstsw
les
stos
imul
out
cld
adc
and
shr
or
jmp
jbe
mov
test
add
movs
pop
xchg
pop
sbb
call
adc
sti
jne
fs
mov
dec
and
imul
pop
push
in
into
test
jge
add
xor
mov
adc
xor
fisub
inc
(bad)
mov
jecxz
cmps
mov
ja
imul
and
cmc
mov
loope
ins
lods
repz
xor
or
js
retf
imul
imul
pop
jae
jg
sub
iret
jbe
imul
aad
rdtsc
jnp
mov
mov
mov
xchg
dec
dec
jae
pop
dec
xchg
push
lock
pusha
in
sbb
mov
or
rcl
icebp
imul
cmp
push
push
mov
mov
mul
push
mov
mov
gs
mov
mov
push
jp
popf
shl
add
arpl
push
mov
ds
mov
dec
shr
call
add
aaa
mul
pusha
rol
push
jae
push
dec
push
inc
mov
inc
inc
inc
mov
inc
(bad)
xchg
push
pop
add
xchg
cld
loop
mov
xlat
retf
sub
mov
pop
xchg
dec
jns
mov
adc
sbb
es
xchg
les
pop
mov
adc
mov
out
test
jnp
push
or
outs
cs
sbb
hlt
jp
dec
mov
mov
fcomp
push
dec
pop
jmp
cs
data16
xchg
xor
outs
jb
mov
(bad)
mov
data16
mov
inc
into
fist
(bad)
push
sbb
stos
xlat
das
sbb
jb
lahf
xchg
pushf
dec
pop
mov
mov
xor
shl
sbb
jbe
cwde
(bad)
inc
mov
rcr
xor
loopne
aam
jg
xchg
int3
inc
fist
mov
je
lds
or
mov
(bad)
popf
mov
retf
jne
push
mov
ret
es
call
dec
outs
shl
sbb
sub
adc
mov
inc
mov
movs
enter
sar
dec
out
jl
mov
ss
inc
neg
mov
in
xor
jge
cli
lock
adc
pop
xor
in
(bad)
adc
xchg
retf
pop
or
xor
push
cmovnp
push
mov
fdiv
pushf
sbb
jle
mov
bound
das
and
dec
rcl
adc
cs
outs
and
sbb
cwde
push
push
(bad)
cmp
out
(bad)
push
sbb
add
jmp
into
adc
xchg
mov
retf
ret
stos
jl
in
and
push
push
(bad)
pop
push
rcl
sub
mov
pop
loope
mov
mov
sub
push
mov
mov
xchg
sub
gs
pop
hlt
add
fs
push
xor
lds
sub
stos
inc
je
mov
lahf
push
popf
inc
(bad)
call
mov
(bad)
push
fistp
pop
push
cs
clc
pop
fmul
mov
inc
stos
inc
and
mov
mov
push
push
mov
fwait
popa
cmp
pusha
or
xchg
pop
mov
or
in
sbb
out
cmps
pop
xchg
pushf
in
call
and
bound
ret
push
mov
sbb
fcmovb
aaa
push
push
push
ja
jae
(bad)
cld
pop
and
adc
add
mov
stos
iret
shl
out
ds
mov
retf
pop
xchg
enter
es
rol
shl
daa
mov
jne
jns
cmp
sub
ret
cmp
stos
xlat
out
mov
movs
test
ins
jg
cs
cmp
repz
jecxz
ja
stc
fsub
sub
shl
rol
popf
and
fnstsw
cli
sub
xchg
mov
lea
mov
repnz
jle
add
sbb
fnstcw
or
out
push
mov
cwde
popf
lock
js
add
(bad)
faddp
sbb
fdiv
mov
dec
mov
xchg
mov
or
aad
xchg
push
(bad)
mov
in
call
fs
push
test
or
(bad)
adc
mov
stc
arpl
add
ss
mov
xchg
and
or
loop
mov
add
push
popf
mov
jmp
lock
rcr
mov
inc
mov
push
xor
jge
mov
jnp
jmp
or
call
int
cmp
xchg
pop
cmc
dec
enter
cmp
pop
add
lods
xlat
sub
sub
dec
jne
mov
pop
ja
inc
or
mov
add
aaa
sahf
in
fst
push
out
inc
ins
(bad)
fcmovb
cmp
pop
xor
ret
or
std
and
or
and
sbb
sti
cli
dec
mov
sbb
cmps
push
inc
push
push
push
test
adc
movs
dec
mov
data16
jmp
(bad)
mov
out
mov
repz
mov
idiv
popf
(bad)
and
mov
lea
ja
cli
in
or
and
cmp
shl
loop
arpl
xchg
ret
rol
aas
leave
push
sbb
outs
xchg
xchg
add
inc
dec
imul
jnp
cmp
add
adc
mov
mov
cmp
fistp
jle
iret
cmp
and
mov
and
mov
push
imul
push
arpl
test
jb
rol
movs
mov
stos
pusha
icebp
imul
xor
push
stos
cmp
mov
retf
mov
ins
jb
aam
adc
pop
mov
add
mov
mov
mov
mov
adc
dec
inc
and
sbb
or
ins
repz
jecxz
les
daa
jmp
jecxz
int3
push
lods
jmp
rcl
je
movs
mov
xchg
inc
mov
sbb
mov
xor
cmp
(bad)
mov
jle
sbb
dec
call
cmps
xchg
sub
shl
sbb
cwde
sbb
fiadd
or
aam
scas
mov
inc
popf
aad
lods
leave
or
imul
test
dec
loopne
mov
sub
mov
cmps
stos
leave
pop
mov
mov
sti
sub
sbb
out
adc
outs
or
std
in
mov
cmp
mov
pop
test
xchg
scas
or
xchg
cmps
xor
mov
mov
cmps
shl
sub
gs
cwde
or
outs
jb
add
outs
fidiv
data16
lods
sbb
mov
jo
jmp
dec
cmps
jnp
and
pop
sbb
jno
xchg
(bad)
stos
jno
sbb
xchg
mov
mov
pop
ja
fdivr
out
leave
fcomi
test
mov
jl
lods
(bad)
push
and
xor
sbb
lods
and
test
pop
int3
mov
dec
or
pop
sti
jecxz
adc
push
fnstenv
push
popf
scas
fwait
mov
push
mov
fsubr
scas
sub
(bad)
add
xor
and
fwait
in
xor
jb
jnp
test
call
push
mov
aaa
push
pop
in
loope
(bad)
push
pop
shr
pop
mov
cld
jne
adc
mov
jns
mov
dec
mov
leave
sub
clc
jno
lods
jno
iret
popa
ror
add
scas
stos
and
cmp
mov
mov
jp
pop
ss
push
in
add
dec
dec
push
mov
loop
jmp
mov
mov
scas
ficom
add
xlat
lds
aam
and
add
and
jnp
xor
adc
adc
mov
xor
xor
ficomp
xor
push
lock
repnz
in
repnz
jmp
adc
gs
xchg
rcr
jl
pop
jl
test
push
cdq
outs
test
jno
pop
adc
inc
sbb
nop
jecxz
nop
inc
jmp
daa
hlt
aad
cmp
out
fmul
aad
mov
jmp
sub
dec
into
jmp
xchg
or
mov
jb
add
mov
pop
fwait
pop
sub
int
mov
xchg
in
mov
lahf
mov
in
cmps
add
add
sbb
xor
je
sub
test
rep
fmul
pusha
daa
call
fistp
or
sahf
push
push
or
enter
fucomp
call
pop
push
div
sbb
ds
push
add
xor
xchg
arpl
sub
(bad)
mov
mov
out
xlat
rcl
ror
xor
jmp
div
jg
xchg
xor
cmps
inc
retf
push
mov
sahf
lds
ins
fs
jecxz
cli
loope
loope
retf
shr
and
leave
jmp
jmp
std
mov
or
sbb
lods
les
shr
inc
push
adc
xchg
fldcw
not
(bad)
loope
add
fwait
jecxz
mov
scas
and
aaa
shr
cmc
jle
push
or
mov
in
adc
pop
cli
inc
jnp
add
fwait
mov
fimul
cmc
pop
mov
adc
fdiv
xchg
jl
in
sti
mov
outs
imul
out
xchg
jns
ds
xor
push
in
cs
das
repnz
or
add
leave
adc
retf
mov
mov
scas
push
push
iret
test
ja
cmp
cmps
inc
jo
mov
jne
inc
pmaddwd
or
into
pop
loopne
mov
ret
dec
fs
aad
movs
pop
cmp
mov
mov
adc
push
jbe
mov
cld
out
and
pop
ret
cmp
xor
test
push
lock
jno
repz
sub
inc
ficom
sbb
sbb
jp
mov
jg
adc
test
cmc
mov
addr16
sbb
(bad)
retf
fimul
ror
jp
mov
add
(bad)
in
nop
aam
sub
test
xchg
or
(bad)
movs
aas
adc
scas
mov
or
adc
and
lea
int
or
adc
xor
pop
out
stos
jge
scas
and
out
pop
xchg
jge
stc
lahf
push
sti
shl
das
or
dec
cmp
rcr
fimul
test
push
aad
ds
cmp
(bad)
jmp
jmp
dec
dec
xchg
ja
aas
es
add
out
push
cmps
inc
add
repnz
sbb
and
cmps
rcl
pop
sub
arpl
in
xchg
sbb
ret
or
outs
fisubr
add
cmp
(bad)
imul
hlt
jbe
test
shr
retf
stc
cmp
sub
data16
push
stc
les
push
jne
fnstcw
inc
stos
push
sti
call
mov
inc
mov
dec
(bad)
sub
aas
adc
and
cmp
and
outs
cs
mov
gs
or
xor
retf
add
int3
fistp
ret
xchg
fadd
pop
mov
mov
and
xchg
cwde
xchg
and
add
pop
repz
or
repnz
ffreep
call
leave
push
shl
jno
jp
or
dec
ret
pusha
xchg
mov
mov
dec
inc
sub
pop
mov
sub
sbb
aas
rcl
adc
jg
lock
popa
lods
dec
and
je
retf
into
cmp
fld
(bad)
pop
cwde
jno
test
(bad)
pusha
fistp
lahf
pop
mov
dec
enter
add
jge
xor
push
jo
cmp
inc
mov
inc
push
imul
jge
pop
cmps
mov
scas
ins
jp
jg
or
pop
cs
cmc
dec
cdq
jp
jecxz
lods
lds
sub
or
or
dec
shr
rcl
inc
je
rol
icebp
sbb
bound
mov
sar
sahf
ret
sbb
or
adc
rcl
pop
xor
call
sbb
xor
cmp
sti
pop
(bad)
int3
(bad)
jb
(bad)
lods
movs
cmp
test
dec
call
int
jle
xchg
mov
in
call
into
(bad)
(bad)
or
sbb
and
push
mov
imul
shr
add
dec
loope
ins
jge
mov
xor
ret
rcr
sub
mov
mov
xchg
xchg
mov
mov
xor
mov
pop
dec
push
div
sub
inc
jo
xor
cmps
ja
cld
sti
xor
ins
clc
inc
and
ds
rol
mov
pusha
xor
sub
push
xchg
icebp
push
or
icebp
adc
add
int3
int3
imul
xchg
inc
sub
xor
sub
pop
xchg
or
sub
xor
mov
ds
mov
sar
push
fdivr
jmp
call
hlt
push
jg
pop
add
movs
sbb
mov
rol
fcomp
std
popf
sbb
xchg
pop
mov
stos
jnp
ret
xchg
jmp
mov
or
scas
lds
and
jnp
mov
movs
add
jne
dec
mov
or
jecxz
aam
ret
sti
iret
test
std
fsub
adc
arpl
mov
in
das
ror
xchg
in
mov
sbb
jecxz
lock
movs
pusha
or
mov
out
call
inc
sbb
ds
inc
jne
or
test
fwait
cmp
inc
retf
not
test
imul
jbe
aaa
ffreep
add
mov
dec
les
and
inc
xor
mov
in
mov
cmc
push
dec
je
in
adc
and
sti
jae
xor
cmp
fs
movs
popf
(bad)
fld
ins
(bad)
bound
out
mov
dec
imul
sbb
or
fldl2t
xchg
ret
retf
(bad)
mov
sub
and
lds
xchg
mov
dec
push
jae
xor
add
mov
inc
pop
cmp
loopne
xchg
push
std
jmp
cmp
out
aaa
cmp
xchg
cli
pop
in
add
pop
fidivr
adc
ja
enter
or
pop
test
aam
enter
ret
mov
mov
add
dec
cmp
js
gs
lods
enter
imul
sbb
(bad)
repz
and
jecxz
mov
adc
pushf
pop
nop
test
or
and
add
test
add
fist
call
fcmovnbe
jmp
lahf
loop
pusha
sbb
mov
inc
mov
jecxz
call
mov
adc
and
push
imul
mov
cmp
sub
and
add
test
cs
xchg
mov
push
mov
push
out
dec
and
jmp
pop
popf
cmps
mov
ror
xchg
cmps
leave
mov
jmp
adc
push
fcomp
mov
repnz
and
lea
dec
jae
sub
jb
(bad)
xor
pushf
aad
mov
mov
add
into
scas
jp
hlt
mov
adc
(bad)
(bad)
fs
mov
mov
popa
aas
mov
es
push
push
movs
and
fist
jb
xor
int
mov
or
push
mov
adc
xor
pop
sbb
xor
push
cmp
das
jg
sub
xor
test
gs
jp
(bad)
es
enter
ins
adc
call
aas
int
ret
fisubr
ins
ds
xchg
jno
scas
mov
or
push
jle
xor
movs
push
xchg
add
mov
pop
inc
in
pop
jnp
dec
jnp
xor
imul
jmp
fidiv
add
push
dec
mov
push
mov
sbb
or
leave
jmp
scas
add
jns
les
xchg
mov
ret
imul
sub
and
jge
or
lea
adc
test
gs
call
out
iret
pop
out
inc
sbb
xor
sbb
and
dec
inc
push
stos
dec
adc
adc
in
push
jle
aam
sub
dec
daa
push
or
cmp
fcom
add
out
sub
pop
push
or
adc
int
int3
pop
mov
pop
addr16
pop
aaa
push
int
ins
cmp
push
lods
cdq
and
adc
adc
shl
pushf
pop
retf
fistp
(bad)
jp
adc
xor
in
(bad)
(bad)
sbb
jmp
lods
xor
dec
retf
test
inc
and
cmp
add
std
adc
xor
cmps
movs
mov
out
pop
xlat
adc
mov
mov
in
dec
sbb
xchg
mov
or
xchg
inc
test
std
pop
clc
out
(bad)
pop
ss
(bad)
(bad)
add
lahf
mov
sti
xchg
stc
xlat
test
loopne
xor
pavgw
loop
adc
adc
push
iret
push
cmp
scas
cmp
push
inc
in
rol
cmp
sbb
jmp
pop
pop
cmp
sbb
push
or
push
idiv
xor
mov
dec
mov
test
mov
mov
rcr
xchg
invd
call
jl
mov
mov
test
adc
add
stos
mov
jnp
xchg
pop
cmc
in
in
mov
aaa
mov
clc
dec
and
stos
xchg
(bad)
ins
mov
mov
cwde
out
pop
xchg
lock
in
repnz
sbb
dec
cmp
jp
pop
push
or
sahf
and
jb
pop
sub
add
pop
sbb
and
mov
retf
test
and
dec
pop
scas
add
add
imul
leave
mov
outs
cs
adc
or
add
mov
loopne
cmp
pop
fmul
ret
pushf
loope
push
loopne
adc
mov
adc
addr16
popa
out
sub
add
mov
mov
ror
xor
jns
out
inc
(bad)
jge
dec
(bad)
aas
xor
ret
push
dec
aaa
pop
rcl
xor
adc
adc
or
inc
mov
add
retf
sub
dec
sti
or
pop
repnz
ja
into
and
jne
mov
stos
cmps
sbb
inc
loopne
push
push
pop
aas
(bad)
or
call
and
fisub
cmps
add
add
fst
xchg
or
adc
or
and
or
fwait
or
les
mov
adc
lods
cmps
out
push
cmp
jo
mov
xchg
rcl
sbb
xchg
ret
cmp
mov
das
add
imul
test
mov
enter
mov
in
out
mov
fist
arpl
clc
mov
stos
jecxz
popa
dec
adc
in
xchg
jae
popf
jns
call
mov
push
sub
sbb
shr
cmp
dec
test
sub
retf
cmp
add
inc
xchg
stos
or
adc
sbb
and
sub
repnz
bts
int3
inc
inc
xchg
cmp
cli
xor
jns
adc
mov
or
jp
into
popa
or
adc
daa
inc
mov
adc
mov
dec
mov
sub
pop
mov
sbb
lods
and
scas
in
xor
or
je
mov
movs
xchg
das
push
sbb
je
add
lahf
mov
sahf
fnstcw
aaa
call
fcmovnb
outs
in
(bad)
ds
(bad)
div
pop
mov
mov
btc
adc
sbb
das
data16
das
add
mov
jmp
xor
inc
or
push
mov
pop
ret
jge
sbb
inc
cmp
or
push
pushf
popf
sar
lock
arpl
jae
dec
mov
das
push
cld
cmp
scas
adc
fwait
bound
clc
mov
mov
jmp
imul
movs
jl
jp
jo
(bad)
out
je
dec
xchg
loop
jg
xor
loope
mov
inc
(bad)
es
movs
xor
retf
mov
repnz
retf
je
shl
cmp
add
lock
data16
fstp
hlt
das
add
and
stos
fdiv
and
fistp
cs
push
iret
jmp
shl
inc
aas
fild
sub
cmp
(bad)
pop
push
pop
dec
dec
or
sti
pop
popf
add
stos
cli
xlat
pushf
adc
inc
jg
jmp
data16
imul
xchg
xchg
sbb
mov
out
inc
adc
mov
in
out
in
int3
test
int3
into
ins
adc
stos
fcom
sbb
jno
ins
add
arpl
dec
imul
ret
inc
jle
mov
xor
sub
jne
shl
add
add
mov
sbb
je
adc
aam
fimul
jne
sbb
push
stos
cmp
dec
pop
test
push
adc
pop
dec
pop
pushf
push
and
jp
adc
clc
sahf
lock
sub
sub
sbb
mov
pop
aam
sbb
xor
jl
fs
pop
mov
adc
pop
inc
in
add
mov
out
pushf
leave
mov
bound
and
xchg
push
cld
add
test
sub
pushf
cmc
dec
lds
es
pop
ins
cwde
mov
aas
pop
into
add
ret
and
lahf
(bad)
js
aam
cmps
xlat
sbb
jge
int
adc
cmp
sahf
adc
imul
iret
mov
dec
pop
call
movs
push
push
out
adc
xchg
addr16
jb
dec
jmp
mov
jae
fisttp
ss
sahf
mul
mov
ins
xor
xchg
mov
dec
out
jp
stc
movs
enter
nop
dec
push
pop
jmp
sar
dec
call
xor
dec
gs
fnstcw
jne
ja
cmp
sub
loopne
or
push
aam
mov
push
lock
ficomp
mov
jmp
pop
push
test
ror
dec
inc
jnp
sub
dec
fisttp
jle
data16
ins
mov
pop
(bad)
std
stc
dec
mov
mov
movs
fdiv
sub
mov
xor
call
jns
sub
scas
dec
test
arpl
ds
outs
mov
or
rcr
jp
inc
fs
mov
fistp
cwde
xlat
movs
jb
inc
mov
mov
pop
mov
and
movs
xchg
(bad)
inc
xchg
add
cmc
xchg
outs
xor
repz
push
popa
inc
jecxz
pop
jmp
xor
js
loop
outs
xchg
ins
es
jl
mov
sti
leave
xchg
shr
mov
cmp
das
mov
dec
fsubr
cmp
add
mov
loopne
pop
fwait
outs
xchg
jl
dec
(bad)
fisttp
mov
mov
xchg
push
push
cmp
add
mov
mov
test
sbb
or
out
repz
xor
mov
popf
fiadd
mov
pop
rcr
and
bound
add
loop
push
ja
and
cld
xchg
or
xchg
cmc
dec
mov
pop
jmp
jmp
sub
pxor
and
test
sbb
dec
imul
int3
pop
cmp
xchg
jmp
icebp
loopne
push
dec
ins
pop
push
jae
ds
ret
shr
xchg
dec
pop
aam
inc
pop
clc
dec
and
or
fmul
loopne
dec
fs
rcl
in
cmc
or
mov
shl
adc
addr16
xchg
push
in
shl
add
(bad)
stos
das
mov
sub
(bad)
jns
adc
sbb
dec
cli
pop
add
adc
fldenv
cmc
mov
stc
sub
stos
mov
pop
popf
out
int
arpl
dec
es
sbb
hlt
stos
mov
sbb
jg
dec
xor
ds
push
ins
add
mov
sub
jle
xchg
pop
std
movs
dec
mov
pop
push
imul
inc
mov
sbb
popf
and
xor
in
sub
cmp
jg
dec
mov
inc
call
out
dec
(bad)
jp
test
(bad)
adc
jmp
sbb
fidiv
push
aad
pop
pop
gs
ret
icebp
mov
push
adc
pop
xor
loop
int3
sub
movs
fucomi
rcl
xor
out
or
dec
repz
imul
jae
fstp
cs
fs
push
lock
arpl
xor
aaa
ret
cld
mov
(bad)
sar
retf
das
es
xchg
mov
icebp
mov
iret
loopne
mul
inc
call
rcr
xor
mov
(bad)
mov
xor
(bad)
pop
inc
shr
and
or
in
test
lahf
je
sub
stc
outs
xor
pop
or
ins
pop
out
hlt
pop
push
ret
xor
inc
jl
xchg
test
cwde
int3
pop
cmc
mov
repnz
mov
adc
lahf
cdq
fidivr
leave
pushf
mov
icebp
ret
mov
je
push
pop
add
scas
cmps
sbb
scas
cdq
data16
(bad)
loop
add
(bad)
sbb
ja
iret
mov
iret
idiv
push
pop
pop
fist
clc
mov
repnz
rcl
sahf
push
out
mov
cmp
lods
dec
sbb
scas
xor
jl
adc
jl
lock
addr16
pop
inc
mov
popa
jae
stos
xlat
jle
ficom
jnp
mov
mov
je
popa
ret
push
div
test
into
nop
adc
nop
push
fidivr
push
mov
push
repnz
sar
fimul
mov
mov
jmp
mov
(bad)
xchg
sub
sbb
mov
retf
push
sub
ins
cmp
mov
shl
add
adc
std
lods
or
push
jno
test
jo
add
inc
rcr
loop
push
jno
fldenv
dec
or
retf
call
retf
scas
and
push
fisubr
test
mov
xor
ret
iret
imul
push
mov
add
or
xchg
or
jge
je
(bad)
mov
pop
repnz
leave
ds
stos
neg
fucom
ret
cmp
jmp
int
sub
jge
mov
pop
jns
pushf
nop
cmp
test
mov
or
add
out
add
add
cwde
(bad)
setnp
fild
lods
sbb
or
hlt
aaa
and
jae
sar
mov
comiss
adc
int3
rcl
push
pop
cmp
sbb
dec
cmp
and
mov
sub
pushf
dec
push
mov
jae
fwait
and
inc
xor
loopne
ss
dec
or
and
push
jg
push
jmp
rcl
imul
adc
(bad)
lea
aas
rol
push
sbb
data16
call
push
es
cmp
push
test
outs
call
dec
cmp
push
push
std
sub
mov
sbb
je
pop
retf
adc
sbb
pop
ins
(bad)
or
push
push
leave
rcl
inc
shl
mov
das
pushf
mov
call
movs
or
leave
(bad)
push
push
xchg
mov
jle
jo
inc
and
es
fwait
data16
xor
sbb
jae
and
inc
enter
lds
sbb
add
(bad)
inc
scas
pop
aad
pop
in
dec
rol
mov
cli
mov
je
rol
mov
into
int3
gs
add
dec
ja
fwait
xchg
and
jecxz
push
mov
std
ds
es
ficomp
add
fst
xchg
in
(bad)
xchg
inc
pop
xchg
jp
sbb
test
push
fld
pop
sbb
gs
stos
cmp
xchg
pop
and
xchg
xchg
rcl
or
fucomip
adc
dec
mov
mov
push
out
fsubp
mov
cmp
fdivr
pop
add
mov
fsubr
cwde
jmp
inc
cmp
inc
push
out
adc
pop
cmp
mov
mov
inc
cmp
mov
add
adc
cmp
add
mov
adc
push
push
mov
div
sub
inc
mov
push
daa
sbb
jno
push
mov
rcl
mov
ror
es
xchg
loop
cmp
jmp
pusha
out
push
aad
push
ret
xchg
or
jp
fiadd
dec
call
retf
aaa
movsx
icebp
mov
push
lock
dec
dec
loopne
inc
imul
xor
sar
cdq
sbb
or
movs
jmp
sub
jmp
das
push
jbe
hlt
mov
data16
sub
cmp
mov
inc
shr
rol
fst
xchg
or
and
ret
bnd
and
jp
retf
(bad)
stc
adc
ret
shr
add
ds
cs
push
cmp
jecxz
adc
push
(bad)
jmp
(bad)
daa
loop
push
ret
rol
xor
xchg
jmp
xor
enter
lahf
mov
gs
aad
imul
rol
xchg
mov
inc
shl
das
in
je
mov
repnz
arpl
sbb
fld
std
and
dec
ja
cmp
js
dec
dec
clc
jne
jb
(bad)
scas
cld
sub
out
imul
daa
lock
xchg
popa
retf
jge
add
sub
fld
addr16
nop
pop
cmp
dec
mov
daa
dec
jp
mov
cmp
add
jo
je
(bad)
in
nop
test
dec
mov
jo
sbb
imul
shl
inc
push
sub
shr
fcomip
(bad)
xor
rcr
xchg
adc
dec
push
fisubr
outs
loop
dec
(bad)
popw
sbb
inc
stc
aam
and
mov
sub
out
out
test
mov
leave
hlt
fisub
xchg
jge
out
addr16
mov
inc
mov
dec
mov
(bad)
mov
(bad)
jle
shr
out
ss
xchg
cld
hlt
fst
(bad)
test
loop
fsubr
inc
ins
aad
jmp
jge
pusha
push
xchg
adc
imul
loope
aam
clc
mov
ins
retf
fdivp
mov
ja
mov
enter
loop
sahf
xor
fwait
rcr
les
or
mov
fmul
aaa
ror
pushf
sbb
pop
movs
int
pop
stos
xchg
aaa
cwde
scas
xlat
cmp
add
outs
inc
cmp
push
xchg
inc
cwde
lods
inc
mov
pusha
sbb
icebp
mov
inc
mov
mov
scas
gs
aad
or
xor
lods
mov
sti
push
cdq
jge
(bad)
ins
fcom
push
and
outs
jl
ins
inc
mov
sub
(bad)
jge
pop
fs
cld
dec
add
loope
sbb
pop
or
loopne
repnz
dec
mov
mov
cs
jne
and
popa
xor
sbb
fwait
xor
inc
and
push
sbb
sub
js
push
pop
neg
fninit
jmp
xchg
xchg
test
mov
mov
xor
mov
in
pushf
pop
add
out
les
(bad)
push
sbb
or
cmc
pusha
mov
mov
sub
les
(bad)
push
ret
ret
mov
cmp
cmovb
and
jmp
adc
jae
jge
sbb
in
test
les
lds
xchg
inc
dec
test
xor
fsubr
ja
fwait
push
or
(bad)
pop
xor
in
test
retf
cli
(bad)
fcmovu
or
arpl
icebp
and
(bad)
mov
adc
inc
inc
leave
push
mov
dec
adc
pushf
adc
mov
xor
push
shl
jb
pop
mov
loop
arpl
lods
xor
(bad)
cmp
mov
stc
push
or
sub
rcr
pusha
cmc
or
xor
(bad)
int
dec
mov
mov
rcl
push
cmp
jns
js
push
xchg
pop
fbstp
inc
es
xor
std
jmp
sbb
or
inc
add
and
clc
mov
adc
fcom
das
mov
mov
fisubr
cli
cmp
mov
xor
std
push
inc
fist
out
sbb
xchg
aam
or
or
jmp
jl
cmc
cdq
adc
outs
rol
or
int
mov
sub
shr
push
pop
dec
push
sbb
xchg
repz
xchg
lahf
cs
xor
bnd
mov
adc
icebp
cld
clc
out
mov
js
or
bound
loope
push
sub
jbe
mov
cmp
pop
pop
push
mov
sbb
(bad)
push
jp
mov
jmp
pop
mov
loope
icebp
push
lahf
fstp
or
ret
into
shl
jmp
add
cmps
(bad)
sub
add
xor
push
movs
jae
test
sti
ror
add
fnstsw
and
jge
int
and
iret
xlat
sti
mov
test
dec
sar
lods
imul
(bad)
jbe
xchg
call
pop
iret
loop
jp
clc
cmp
xchg
dec
cdq
fwait
cli
inc
fwait
mov
lahf
dec
inc
(bad)
iret
jg
ror
mov
sub
js
sbb
dec
mov
shl
test
shl
data16
push
stos
or
or
and
cmc
push
add
and
add
cld
jno
out
je
cmp
push
lock
pop
push
retf
push
xchg
and
and
xchg
pop
cdq
loopne
inc
mov
movs
sub
fwait
pop
lods
xchg
data16
inc
in
fisubr
das
in
test
pusha
aad
cmps
cmps
dec
jge
retf
fnstcw
xchg
je
cs
sbb
and
add
imul
sub
sbb
lds
sub
jp
fucomip
loope
jecxz
jmp
add
(bad)
daa
mov
mov
loop
outs
std
sbb
cs
or
mov
loopne
fwait
cmp
push
bnd
cmc
mov
scas
inc
jge
test
lea
mov
mov
pop
pop
out
mov
lods
jl
sub
xor
hlt
jmp
push
js
jno
int
or
pop
sbb
mov
pop
fbld
cmps
fisubr
pusha
or
sub
cmp
jb
xchg
push
cmp
push
xchg
and
not
push
push
scas
test
sub
loope
xchg
mov
retf
sbb
call
push
and
daa
jb
inc
mov
cmps
mov
cmps
jg
sbb
cmc
adc
es
mov
sbb
mov
pop
cmp
loop
mov
pop
push
lds
sub
retf
xor
scas
mov
or
xchg
adc
cli
sbb
adc
mov
scas
lods
pop
std
das
mov
xor
sub
ret
pop
jecxz
mov
sbb
loopne
xchg
nop
jbe
or
fs
lea
and
xchg
mov
dec
(bad)
gs
je
push
inc
mov
jg
test
cs
cmp
out
ja
enter
lds
call
es
mov
inc
jno
daa
xor
outs
adc
jae
mov
lock
aad
enter
cwde
addr16
div
add
mov
or
addr16
pop
mov
sub
ss
dec
mov
leave
cmp
sbb
and
ds
pushf
sbb
cmp
mov
sar
mov
push
clc
pop
mov
enter
imul
adc
outs
fcom
xchg
aam
mov
icebp
cli
in
leave
or
mov
xor
sub
(bad)
sbb
sti
adc
adc
xchg
inc
jno
push
(bad)
adc
mov
add
dec
(bad)
lods
cmp
inc
inc
sbb
mov
jg
outs
int
daa
ins
fcom
mov
sub
hlt
pop
sub
sub
jbe
push
cs
adc
in
into
rol
jl
call
dec
pusha
mov
adc
and
jecxz
fldenv
stos
movs
and
push
or
jl
add
inc
sbb
lods
cwde
jbe
dec
pop
xor
mov
inc
cmc
fistp
dec
or
(bad)
dec
add
data16
jp
fist
adc
xchg
(bad)
int3
cmps
sbb
mov
and
sbb
cli
cmp
test
call
adc
bnd
xchg
cmps
push
adc
imul
jmp
jl
pusha
inc
gs
or
aas
fnstenv
jb
mov
sti
mov
shl
xchg
push
gs
mov
in
sbb
ror
fwait
or
out
and
adc
mov
mov
jg
inc
and
mov
mov
mov
mov
xchg
ret
pop
pop
xchg
inc
push
outs
mov
in
cli
sub
xor
stc
mov
stc
mov
add
pop
adc
mov
shl
cld
jae
sahf
imul
enter
xor
sbb
(bad)
(bad)
fsubr
mov
enter
sbb
movs
xchg
add
jne
sub
adc
pop
pop
ror
div
fmul
rcr
xor
cs
clc
jae
pop
ins
retf
sub
cmc
xor
xor
mov
stos
stos
sbb
test
iret
push
sub
adc
gs
ror
dec
fisttp
fmul
mov
cmps
in
nop
pop
inc
fcom
mov
in
popf
or
sbb
push
shr
pushf
sub
leave
xor
sub
je
jne
(bad)
mov
cmp
adc
mov
inc
xchg
inc
lock
fsubr
sbb
sbb
mov
repz
mov
enter
in
pusha
outs
dec
jp
lods
push
or
pop
lahf
xor
inc
ret
sbb
movs
jl
in
icebp
jns
mov
(bad)
out
or
xor
adc
fisttp
add
addr16
jl
jmp
and
idiv
(bad)
xor
sbb
mov
idiv
add
outs
fadd
cmps
fist
rcr
(bad)
icebp
ror
(bad)
out
ror
in
adc
or
(bad)
test
outs
test
iret
repz
inc
mov
inc
call
mov
(bad)
sahf
(bad)
fs
pop
(bad)
stos
sbb
dec
sbb
orps
dec
ds
lods
pop
pop
enter
sbb
sub
xchg
sbb
jmp
push
(bad)
cmps
nop
xchg
adc
outs
jl
lahf
and
test
sbb
jecxz
dec
xor
js
xchg
out
mov
add
mov
fsubr
mov
shl
ficomp
push
arpl
stos
fdivr
ror
inc
sub
icebp
sub
test
or
cs
xchg
out
mov
call
imul
jge
adc
(bad)
out
adc
xchg
pop
sub
xchg
sbb
ss
lahf
test
dec
push
sbb
arpl
xor
out
and
xor
sub
cli
test
stos
mov
js
xchg
jns
sbb
sbb
in
mov
sub
rcr
test
ss
jae
and
add
rcl
cdq
in
rcr
(bad)
push
ds
push
pop
dec
mov
cmc
mov
test
xor
push
outs
push
mov
and
imul
inc
shl
stos
xchg
es
test
inc
jmp
out
dec
inc
adc
mov
jge
push
mov
add
jecxz
mov
into
outs
daa
mov
sub
sbb
jg
adc
fisttp
xchg
mov
cld
fwait
and
test
mov
bound
jmp
mov
pusha
out
push
sub
or
inc
fmul
and
int
in
jmp
inc
dec
sbb
dec
jp
dec
xor
pop
loope
jns
or
stc
sahf
bound
ins
pop
add
mov
arpl
jecxz
jb
and
and
lods
imul
push
popf
xor
call
fwait
scas
cmps
jp
pop
mov
jbe
jae
pop
add
test
add
(bad)
icebp
and
lods
dec
call
pop
xor
cwde
mov
stc
xor
adc
cwde
mov
aam
clc
pmuludq
test
call
xor
lds
xchg
push
inc
cmp
mov
mov
fdivr
sbb
pop
inc
imul
mov
sbb
xor
out
add
cld
mov
cmc
and
add
enter
push
adc
cdq
jmp
dec
sbb
push
or
or
mov
inc
jo
in
stos
(bad)
mov
mov
push
arpl
or
and
jne
xchg
jns
push
pop
cwde
sub
push
jl
dec
xor
rcl
push
push
mov
inc
(bad)
push
adc
inc
sbb
sbb
in
sar
jle
xchg
xlat
mov
les
mov
adc
loope
push
sbb
jne
test
cmp
xchg
sbb
pusha
es
xchg
xchg
rcr
sub
jg
aaa
(bad)
fstp
push
into
push
loope
xor
ins
dec
cld
fdiv
int3
jb
pop
or
mov
(bad)
ds
loope
das
inc
pop
(bad)
(bad)
mov
dec
js
sub
loopne
call
mov
dec
mov
loopne
mov
cmp
lea
out
test
out
cmp
fisttp
push
rol
jo
cmp
add
xchg
inc
adc
pushf
(bad)
mov
mov
xchg
xchg
outs
jle
bound
push
int3
cmp
xchg
dec
or
in
cmp
inc
adc
inc
jmp
sbb
(bad)
iret
pushf
ds
aaa
xchg
aad
jmp
ins
pop
push
je
cs
outs
ret
out
adc
dec
sub
or
dec
lds
shl
jns
ins
movs
or
jnp
daa
jnp
or
vpaddq
jl
or
jbe
cld
cmc
pop
fcomp
inc
stos
jmp
jg
hlt
cwde
neg
test
aaa
jns
adc
sbb
call
ja
retf
inc
mov
pop
xor
pop
or
(bad)
or
loop
lea
imul
sahf
int
ins
aad
jecxz
inc
imul
adc
fiadd
or
icebp
lahf
xor
mov
inc
pop
fcomp
jb
sbb
ficomp
(bad)
pop
shr
adc
stos
out
push
inc
pop
test
xlat
pushf
ror
pop
cld
mov
dec
movs
pop
mov
jle
bound
push
pusha
or
jno
mov
sahf
adc
ror
mov
mov
xlat
mov
dec
ss
add
ror
adc
add
xchg
dec
mov
cdq
xchg
lock
jno
ss
push
leave
pop
ins
xchg
push
adc
stos
cld
jo
bound
leave
sar
xchg
test
mov
mov
loopne
sub
scas
int3
jmp
movs
pop
mov
inc
or
lock
das
shl
xchg
or
pop
cli
sbb
and
mov
cmp
out
jb
scas
ret
sbb
popa
out
or
mov
mov
push
out
fst
idiv
sbb
and
mov
je
retf
lahf
out
sahf
test
xchg
les
ret
sub
loop
inc
cdq
cmp
add
ror
push
fist
adc
idiv
or
in
adc
int3
fcom
pop
mov
and
(bad)
icebp
xor
enter
(bad)
out
mov
sub
inc
cmps
stos
fwait
push
aam
fisttp
sub
ins
jno
hlt
fisubr
add
xor
and
push
jp
push
pop
mov
or
inc
jle
pop
ret
mov
xchg
loop
inc
cmps
xchg
outs
mov
addr16
add
mov
push
out
jmp
add
fcom
ins
cmps
sti
loope
fnstcw
mov
pop
inc
test
loope
mov
sbb
dec
sbb
fld
push
mov
xchg
inc
test
adc
jp
mov
repnz
add
test
pop
inc
retf
jecxz
jp
mov
adc
sahf
ss
push
sbb
je
add
addr16
test
iret
cdq
ds
dec
push
into
test
adc
lock
int3
daa
mov
dec
xor
add
shl
xor
jnp
retf
push
cmp
jmp
test
adc
addr16
sahf
int
push
push
es
outs
sbb
pop
out
and
jge
inc
mov
xchg
push
repz
ds
add
jmp
add
fistp
mov
ins
push
lds
xor
movs
mov
dec
fld
daa
jmp
pop
or
mov
xchg
arpl
ss
sub
shr
and
xlat
ins
pop
in
retf
imul
xchg
mov
imul
push
int
xor
push
jmp
pop
(bad)
out
les
mov
push
inc
sub
xchg
cmp
mov
fst
xchg
loope
mov
push
sbb
shl
je
sub
pop
add
mov
cmps
inc
lea
out
pop
out
mov
pusha
push
stc
xlat
fwait
inc
dec
xor
inc
rcr
or
inc
stos
retf
fst
xchg
in
jle
outs
pop
xchg
test
xor
ins
scas
pop
movs
xor
adc
push
add
mov
cmp
test
push
test
xchg
out
and
sub
cmp
pushf
jae
imul
movs
ds
inc
push
sbb
stc
ret
add
inc
call
sbb
js
sub
adc
(bad)
aaa
pop
(bad)
mov
mov
xchg
lea
sub
aad
and
push
mov
mov
call
xor
or
and
push
loope
lods
sub
fs
(bad)
enter
pop
or
cmp
les
out
(bad)
xlat
add
in
sbb
mov
jmp
push
dec
stos
int3
cs
add
jp
ins
outs
pop
hlt
mov
jl
mov
pop
sub
inc
jmp
pop
cli
js
jbe
pushf
pop
je
and
mov
xor
dec
add
and
xor
popa
dec
repnz
stc
push
les
aaa
xchg
xchg
or
enter
(bad)
sbb
jo
fsubr
call
push
and
aas
pop
cmp
test
sbb
push
jns
jno
xchg
pop
fisubr
lods
xor
in
les
push
xchg
adc
jb
push
icebp
out
adc
mov
loope
rcl
inc
bound
sub
jb
cmps
js
and
in
sbb
in
inc
loopne
sub
cmps
retf
pop
xor
cmp
(bad)
nop
sbb
ins
aas
mov
inc
mov
lahf
sahf
mov
scas
mov
inc
push
ds
and
mov
pop
jae
aas
mov
inc
repnz
out
push
or
jecxz
loop
or
ja
and
aam
loopne
sub
imul
jo
sub
pop
dec
cmc
jg
out
pop
call
retf
jp
jbe
(bad)
out
stos
std
xor
(bad)
gs
add
fdiv
mov
xor
dec
adc
aam
cmps
sbb
pop
cmp
dec
loope
mov
leave
mov
leave
mov
jne
call
pop
repnz
out
iret
jns
fnstcw
adc
push
minps
push
out
stos
push
xchg
xor
cli
pop
pusha
jnp
mov
or
mov
mov
repnz
hlt
and
add
iret
call
sub
push
and
out
mov
lods
inc
in
call
mov
or
(bad)
lock
je
jno
or
push
push
imul
jg
das
lahf
sub
shr
pop
xchg
inc
jns
outs
cmp
cmp
pop
mov
popf
push
sub
cmp
cmp
inc
jmp
mov
sub
pushf
pop
add
out
pop
push
(bad)
ffreep
sub
dec
hlt
xor
xor
cli
clc
mov
pusha
int3
test
jecxz
push
out
ds
mov
neg
jo
ds
cld
rcr
jmp
cwde
fnsave
cmc
or
lea
pop
hlt
fidiv
cli
and
lods
dec
xor
mov
xor
push
aaa
add
jne
ins
push
aad
mov
add
es
or
ds
test
cmc
jmp
pop
jo
push
or
fist
add
lods
(bad)
rcr
retf
in
pop
test
fist
push
xchg
and
retf
movs
mov
pop
ret
imul
jecxz
ret
xchg
movs
ja
div
retf
hlt
and
pushw
je
and
xlat
push
push
pusha
adc
in
jnp
in
add
xor
or
dec
cdq
test
nop
lahf
mov
les
ret
es
push
pop
cmc
mov
push
cmp
and
(bad)
cmp
dec
ja
sbb
ficom
jb
xchg
inc
jno
xor
mov
ret
jb
fsub
bound
aas
jne
add
push
or
loop
jecxz
(bad)
jae
cmp
or
mov
and
ds
or
movs
retf
and
fnstenv
mov
aaa
dec
std
cld
add
lds
sub
imul
cmp
mov
xor
push
inc
repz
cdq
mov
shl
shl
jo
lods
pop
sub
fbstp
dec
inc
sub
out
lods
add
inc
hlt
(bad)
xchg
lea
fadd
inc
xor
jns
into
jle
mov
stc
jbe
aas
add
sub
jge
mov
dec
out
jg
test
push
dec
jns
push
inc
jmp
mov
sbb
add
dec
pop
call
push
pop
ret
repz
push
inc
mov
mov
pop
cli
sub
imul
bound
stos
fcom
sbb
into
stos
add
(bad)
pop
xchg
daa
adc
mov
hlt
mov
in
cli
daa
movs
mov
les
stos
int
jmp
push
das
cmps
int
cli
clc
jns
mov
mov
push
jle
mov
mov
in
jnp
sbb
aad
adc
push
dec
aam
xchg
sub
push
pushf
mov
mov
adc
fistp
jns
sbb
push
add
push
ds
pop
shl
mov
sbb
mov
pop
adc
retf
inc
dec
jecxz
out
sbb
(bad)
mov
outs
sahf
adc
test
(bad)
jns
inc
push
pushf
loope
mov
push
shr
cs
je
fldcw
jp
or
loop
mov
cmp
enter
xlat
jmp
fdivp
mov
jae
in
xor
sub
add
data16
les
pop
cmp
test
ja
imul
not
ds
pop
cmp
mov
mov
jge
nop
add
sbb
xchg
in
xchg
and
adc
cmps
sti
dec
xchg
mov
add
(bad)
test
sar
dec
das
jp
xchg
or
mov
bound
add
add
mov
jecxz
inc
lods
xor
es
ins
jmp
pusha
and
data16
mov
ja
dec
clc
imul
jmp
aaa
push
stos
cmp
xlat
cli
mov
xor
cdq
push
mov
mov
js
and
data16
jo
aaa
pop
mul
mov
mov
sub
call
pop
stos
fstsw
push
in
test
jmp
enter
pop
nop
adc
movmskps
push
sub
rcl
das
icebp
fidiv
or
mov
sbb
adc
sti
and
std
lds
mov
push
sub
sbb
retf
mov
dec
sar
or
push
and
test
movs
shr
push
sub
pop
jl
cs
ins
xlat
mov
sub
imul
(bad)
push
daa
ds
enter
fisub
push
pop
sub
pusha
fmul
add
daa
mov
popf
sub
dec
mov
push
or
loop
daa
and
sti
test
aad
repnz
ins
mov
sbb
nop
dec
inc
test
in
popa
outs
fs
mov
jb
dec
sub
mov
rcr
mov
fdivp
int3
in
dec
push
add
leave
scas
add
cmps
adc
std
popa
loopne
mov
imul
(bad)
in
jg
js
mov
adc
and
dec
cmp
mov
stos
adc
add
or
shr
pop
inc
xchg
outs
outs
xchg
and
fldenv
cmp
std
stos
in
sbb
xchg
pop
sti
fsub
in
or
sbb
test
jae
mov
sub
push
mov
xchg
cmp
aaa
cmp
shl
cmp
dec
loop
mov
test
push
xor
cmc
rol
mov
cld
sbb
pushf
fstp
push
shl
add
xor
mov
adc
dec
in
fisttp
jmp
pop
mov
add
ins
jae
int3
ret
cwde
pop
mov
mov
dec
inc
jb
xor
loope
add
ins
xor
add
jns
iret
aad
mov
call
in
adc
div
xchg
movs
push
movs
arpl
test
mov
loopne
frstor
aad
test
fcomip
xor
neg
sahf
sub
(bad)
gs
std
add
out
je
add
adc
not
pop
mov
lea
retf
jge
mov
mov
cld
(bad)
pushf
mov
movs
and
jecxz
pop
jns
arpl
mov
int3
inc
and
cmp
push
cmps
mov
sub
sub
xchg
inc
mov
(bad)
adc
inc
push
and
xor
aam
pop
lods
xor
fdivrp
icebp
call
jnp
xor
(bad)
xchg
push
mov
dec
leave
cmc
lds
sub
and
loopne
dec
jg
jbe
ret
add
(bad)
sar
movs
cmp
out
push
enter
int3
aas
daa
cmp
mov
idiv
xchg
xchg
push
dec
ja
push
add
mov
aam
stos
sahf
cmp
aad
push
ins
pushf
or
push
fbld
pushf
jmp
jmp
rcl
int3
stos
xor
jmp
fwait
aas
ret
inc
call
dec
jle
sahf
rcr
mov
xchg
sub
loope
ficom
adc
lahf
test
mov
rcl
ficomp
pop
add
xor
dec
outs
sbb
cmp
stos
ret
mov
cmp
ret
mov
xchg
xchg
shl
and
cld
jmp
mov
dec
push
call
xchg
jo
mov
shl
out
mov
jnp
ja
repnz
inc
pop
dec
mov
or
adc
mov
cmp
adc
push
jns
jb
inc
in
(bad)
jbe
lds
inc
jmp
pushf
dec
or
pop
rol
lods
adc
jo
jo
jbe
cmp
dec
push
mov
test
cmps
and
add
imul
or
adc
mul
or
xchg
dec
lock
jne
inc
fs
or
bound
add
sbb
icebp
hlt
dec
dec
aam
inc
repnz
xchg
mov
mov
push
push
inc
xchg
xchg
lods
inc
in
rcr
jno
push
push
mov
cmp
sbb
std
ror
dec
aam
nop
mov
xchg
jle
imul
int3
dec
loopne
aad
push
movs
cli
cmps
scas
or
stc
add
das
rcr
dec
adc
push
int3
dec
xchg
call
cwde
add
pop
jg
je
pop
mov
xor
pushf
lods
push
retf
fld
aas
stos
jne
hlt
or
inc
jmp
mov
mov
push
xor
dec
mov
dec
in
sub
and
cmp
cs
out
cld
fwait
jl
sub
mov
(bad)
push
es
and
sar
dec
cmp
push
mov
scas
cmp
shr
cdq
inc
adc
(bad)
in
sbb
add
retf
cdq
push
ss
shr
dec
mov
cmps
aaa
mov
(bad)
cmp
jb
pop
and
in
mov
sbb
jg
sbb
(bad)
into
loop
test
sub
out
pushf
xchg
ficom
add
test
push
jge
fbld
or
call
(bad)
cdq
imul
push
sub
mov
push
sub
icebp
mov
nop
mov
push
xor
push
pusha
add
jbe
or
jmp
hlt
xor
cmp
push
cmp
pop
mov
pushf
mov
lock
and
lahf
icebp
push
xor
rcl
adc
and
push
gs
jbe
fstp
and
mov
shr
mov
pop
hlt
xor
ds
mov
aas
(bad)
shl
sub
adc
jmp
imul
inc
xchg
inc
cmp
js
xchg
push
iret
mov
ins
mov
xchg
xor
sub
hlt
dec
sub
(bad)
add
ja
xor
aaa
push
sbb
mov
in
hlt
adc
dec
cmps
jmp
xor
ss
and
xchg
sub
adc
std
xchg
push
mov
mov
out
bound
xor
xchg
mov
fcmovnbe
out
fsubr
add
sub
jns
out
(bad)
sub
pop
movs
cmp
test
ret
or
push
push
mov
xchg
mov
jnp
jnp
pusha
rcr
retf
and
addr16
xchg
xor
jne
mov
pop
mov
jmp
pusha
loope
mov
jle
fiadd
loop
adc
mov
mov
mov
sbb
pop
dec
outs
jge
daa
test
cdq
dec
pop
scas
add
mov
pop
ds
clc
retf
inc
scas
dec
gs
jle
xchg
neg
and
sub
jp
(bad)
(bad)
jno
mov
scas
pop
call
loopne
pop
adc
mov
scas
cld
in
leave
pushf
(bad)
sbb
lea
inc
(bad)
in
not
clc
adc
in
mov
xor
sub
xchg
inc
or
fcomip
aad
xchg
lods
movs
loopne
xchg
js
leave
lds
dec
jo
xchg
pop
mov
inc
lock
mov
fidivr
mov
ins
dec
ret
jg
es
inc
out
lds
mov
jno
movs
fidivr
lea
scas
and
jecxz
lods
rcl
and
or
sub
retf
rcr
jp
add
push
add
pusha
xchg
iret
aas
or
push
leave
jbe
cld
mov
push
xor
push
ret
or
pusha
retf
popf
pop
pop
jnp
retf
xor
mov
mov
cmp
xchg
fcom
jmp
mov
out
aas
arpl
dec
ins
sbb
jne
cdq
xchg
(bad)
xchg
test
es
shl
mov
cmp
in
int3
jo
push
push
xchg
sub
push
cs
fidiv
fcmovnbe
push
fdiv
inc
fstp
in
adc
jl
or
mov
adc
add
int3
jl
test
inc
push
outs
fnstcw
imul
xchg
xchg
push
jp
cmp
jno
pop
xlat
fst
jecxz
mov
es
push
in
mov
xchg
pop
popf
jo
gs
inc
push
test
call
mov
les
sub
fsubr
in
inc
scas
(bad)
or
test
sbb
jmp
or
in
adc
lahf
out
out
ror
lds
enter
cdq
xchg
mov
sbb
pop
hlt
cmp
pushf
fbstp
mov
jp
sub
(bad)
icebp
jno
ja
jmp
(bad)
push
and
scas
leave
and
loop
mov
add
and
data16
lock
add
imul
mov
dec
dec
adc
mov
push
or
mov
mov
jl
inc
in
les
pop
lods
scas
and
pushf
pop
loope
mov
das
pop
sbb
mov
jno
test
pop
inc
xor
call
jmp
lea
gs
mov
cmp
pop
dec
add
dec
popf
inc
repnz
aam
pop
(bad)
fsub
in
and
cli
aas
jp
or
cld
and
stos
(bad)
mov
aaa
fsubr
lahf
loopne
jge
pop
inc
jmp
sbb
ss
std
pop
fsub
ins
(bad)
(bad)
jb
icebp
adc
pop
sbb
mov
mov
push
(bad)
inc
loope
and
fdiv
dec
inc
mov
jae
call
cmps
cmp
int3
mov
push
sbb
punpckldq
retf
into
stos
xchg
mov
sbb
mov
or
push
iret
push
test
clc
dec
xchg
jg
(bad)
scas
push
inc
shl
inc
inc
sti
test
or
and
loope
mov
xchg
sahf
mov
lahf
and
mov
cs
pop
cld
push
xlat
fistp
pop
adc
jge
xchg
nop
mov
scas
mov
ret
inc
aad
jns
mov
mov
jns
retf
scas
iret
xlat
push
add
shr
jge
mov
xor
cmps
hlt
iret
pusha
pop
mov
ret
imul
mov
jp
pop
int3
fistp
cmp
jne
out
ja
scas
or
sti
cdq
adc
jne
mov
xchg
lods
push
adc
into
fdivr
fld
or
outs
xor
cld
xor
shr
add
and
(bad)
cmp
fistp
mov
rol
neg
test
lock
pop
test
ret
cs
dec
jno
test
sub
test
clc
push
xor
imul
mov
popa
(bad)
adc
int3
ret
jnp
cmp
xchg
fld
test
div
mov
cmps
aam
jmp
jo
add
jne
sbb
jl
test
and
sbb
sub
fwait
ror
and
les
mov
fdiv
mov
cmc
out
imul
leave
repz
call
cmps
mov
sub
xor
cmps
jbe
mov
sbb
xchg
dec
test
xchg
lods
dec
push
jg
ja
into
mov
adc
stos
push
std
mov
mov
mov
lea
mov
inc
arpl
xlat
lock
aaa
mov
dec
pop
bound
push
sub
jmp
or
rcr
mov
fwait
bound
les
push
(bad)
sbb
ss
in
adc
imul
push
test
fisub
jae
movs
sub
or
in
mov
jnp
cmp
sub
rol
xor
retf
enter
jno
(bad)
int3
cmps
cmp
fidiv
adc
add
cmp
mov
and
bswap
icebp
dec
mov
enter
dec
jl
or
mov
popf
jb
pop
jbe
and
sub
(bad)
xor
xor
in
fist
sbb
add
push
out
sahf
pop
leave
push
inc
jne
inc
sbb
div
inc
inc
sbb
sbb
jge
or
cmp
jo
es
fisttp
rcl
jp
push
iret
cmp
or
fisub
fdivr
inc
adc
or
cmp
aaa
xor
fisttp
xor
int
pop
xchg
inc
add
sbb
(bad)
movs
mov
(bad)
call
in
repnz
cmp
dec
sub
or
jb
xchg
bound
sub
pop
shl
nop
and
jae
or
xchg
or
test
mov
add
(bad)
or
fiadd
push
jb
add
push
adc
pop
inc
(bad)
loopne
sbb
ret
sbb
pop
mov
or
pop
ins
inc
(bad)
int
push
mov
add
int3
sbb
daa
fstp
add
rcl
arpl
nop
(bad)
jo
mov
add
sbb
fs
pushf
outs
(bad)
dec
sbb
test
icebp
add
gs
push
popf
daa
pusha
iret
mov
pusha
retf
je
adc
outs
jle
jb
into
int
idiv
push
ret
push
inc
inc
scas
(bad)
pop
dec
dec
mov
and
and
xor
std
xchg
les
pop
or
xlat
es
cmps
je
(bad)
adc
sar
jmp
movs
inc
xchg
pop
mov
jb
adc
inc
lahf
movs
mov
lahf
or
mov
scas
xchg
push
test
cli
jp
rcl
repnz
mov
imul
test
loop
mov
add
xchg
ror
pop
test
sub
loope
into
daa
jmp
into
xchg
cmp
mov
xor
jne
loop
scas
and
mov
adc
sahf
cdq
or
push
pop
and
popf
add
jno
and
test
add
mov
push
adc
pushf
ficom
daa
ds
pop
test
paddd
loop
pop
fbstp
inc
sbb
xchg
xor
cs
out
pmaxsw
dec
dec
jns
xchg
pop
and
push
dec
gs
sti
push
lock
div
fcom
xor
and
enter
rol
arpl
daa
push
xchg
xlat
dec
lods
ds
xor
movzx
push
fidivr
int
test
mov
scas
xor
cli
pop
jg
cld
push
xchg
mov
icebp
add
or
loop
mov
jo
loope
push
adc
inc
xor
sbb
sbb
and
(bad)
push
sub
aam
xchg
(bad)
or
shl
jae
not
dec
or
cld
imul
inc
xchg
dec
sbb
xor
adc
and
lock
out
(bad)
imul
arpl
sbb
sub
test
pop
lds
dec
hlt
mov
cwde
imul
hlt
sbb
enter
ds
icebp
mov
ds
arpl
retf
pop
pusha
bound
cs
ror
or
fwait
loopne
rep
test
lahf
inc
out
mov
mov
xor
jmp
jnp
fimul
stos
push
jge
add
dec
fcomp
int3
(bad)
repnz
jl
(bad)
movs
mov
lock
mov
lahf
jnp
mov
fisttp
xor
test
and
mov
and
retf
push
aam
stos
ss
xor
dec
aam
mov
pushf
dec
into
fcmovne
sbb
mov
(bad)
imul
imul
push
out
push
jecxz
rcr
fmul
call
out
stos
push
call
jl
mov
jmp
mov
in
outs
dec
(bad)
push
push
mov
mov
or
mov
xor
cmp
into
or
adc
add
mov
or
xchg
repz
(bad)
or
xchg
(bad)
dec
shl
ficom
inc
scas
cmp
cli
loope
jmp
xchg
xor
xor
xchg
mov
jle
or
sub
jge
outs
xchg
cmp
cmp
inc
mov
popa
ret
or
std
in
xor
sar
and
sahf
mov
call
cmp
xchg
outs
inc
test
dec
push
sbb
dec
pop
scas
pop
adc
push
push
jle
sbb
push
dec
mov
push
push
and
int
and
scas
js
push
pop
dec
fst
xor
(bad)
sub
ins
lock
jmp
xchg
cmps
sub
and
add
jecxz
fstp
inc
push
add
inc
or
xor
xbegin
repnz
call
add
xor
dec
push
xchg
movs
iret
mov
stc
(bad)
jle
lds
cli
pop
push
test
not
test
cmc
xchg
jmp
sbb
mov
add
jo
inc
hlt
jns
push
rcr
cmps
sbb
add
push
add
ficomp
dec
in
mov
jno
mov
adc
les
push
or
fistp
ins
nop
fidiv
cwde
mul
lods
retf
(bad)
push
push
push
push
icebp
mov
cld
out
inc
push
nop
lock
arpl
adc
add
adc
nop
inc
fisttp
pop
outs
push
mov
xchg
mov
addr16
sub
rol
into
pushf
in
mov
leave
add
scas
push
sub
add
repnz
cmp
mov
pop
mov
or
sbb
pop
jno
push
(bad)
push
mov
mov
add
push
push
(bad)
lahf
stos
into
pop
xchg
std
in
mov
push
movs
push
sbb
or
(bad)
mov
jns
in
fst
cmps
pusha
outs
(bad)
sub
xchg
push
adc
leave
clc
rcr
dec
jmp
enter
data16
cmp
jns
mov
jle
sub
xor
cmps
sbb
mov
or
sbb
daa
repnz
sbb
sub
psubusw
and
or
fisttp
dec
xor
jmp
(bad)
lahf
jne
imul
inc
and
ds
ds
call
jmp
push
sub
inc
jbe
inc
dec
fsubr
movs
sub
std
rcr
movs
dec
out
mov
or
retf
lock
mov
fcomp
in
mov
(bad)
mov
cmp
dec
and
outs
mov
jge
push
in
leave
and
rcl
mov
push
aad
loop
jae
sbb
jle
jp
sbb
xor
jbe
dec
sbb
int
retf
nop
retf
adc
sar
aaa
jge
pushf
or
or
sbb
jl
xchg
push
mov
addr16
xlat
push
rol
lea
xlat
rol
sub
sahf
or
cwde
outs
mov
xchg
mov
lods
jno
xchg
(bad)
cld
mov
cmp
inc
clc
(bad)
je
outs
and
cmps
dec
xor
cld
ins
lods
push
push
dec
(bad)
movs
(bad)
arpl
faddp
lods
js
(bad)
adc
out
xor
call
push
fnstenv
icebp
stc
sahf
shl
jb
jne
sbb
shl
adc
xchg
pop
retf
inc
mov
imul
push
mov
das
dec
adc
mov
jp
bound
outs
mov
inc
mov
mov
test
test
dec
and
adc
mov
xor
inc
mov
sbb
popf
test
add
pop
sub
(bad)
int3
push
cs
push
enter
and
jo
test
ret
jge
neg
nop
(bad)
loope
mov
sub
adc
fwait
rcl
sbb
js
loop
cmp
sub
clc
xchg
adc
and
outs
sbb
mov
test
shl
daa
dec
in
icebp
adc
test
adc
pushf
adc
int
mov
(bad)
retf
mov
mov
cmp
xor
pusha
add
fdiv
pop
pushf
inc
xor
push
movs
pop
jae
jae
xor
rcr
add
lods
sbb
inc
lods
and
push
jb
rcr
stos
xor
jmp
pop
out
movs
in
iret
pusha
xchg
jae
jne
loopne
rcl
mov
ss
and
pop
mov
mov
xor
loopne
jmp
adc
lea
aad
lds
lock
in
xor
mov
cmp
sbb
mov
push
mov
push
es
sti
add
dec
mov
mov
adc
in
ret
enter
movs
imul
les
ror
imul
push
mov
pop
cmp
les
retf
enter
int3
dec
outs
inc
ret
push
dec
fst
loop
bound
mov
or
lods
add
sub
and
sar
(bad)
xchg
xor
es
mov
mov
out
pop
iret
xor
dec
push
fisttp
mov
fs
sub
loop
or
je
in
imul
and
push
sbb
add
adc
and
adc
dec
out
mov
out
sub
inc
call
aas
pop
xor
outs
enter
iret
push
test
retf
inc
add
adc
pop
cmp
jb
inc
xor
mov
dec
mov
add
imul
xchg
scas
imul
jecxz
or
inc
cmp
add
adc
sbb
inc
in
inc
les
cld
xor
fsub
inc
adc
fnstsw
in
mov
frstor
call
xor
test
iret
mov
adc
dec
mov
(bad)
nop
push
adc
jg
retf
popa
inc
inc
and
adc
fsub
cmp
mov
jae
out
lahf
mov
imul
pop
or
mov
hlt
or
push
out
mov
mov
gs
inc
js
xchg
scas
or
out
(bad)
cli
ja
sub
test
neg
lahf
inc
jnp
imul
hlt
call
enter
pop
ins
(bad)
jle
retf
enter
test
mov
popa
sub
pop
ficomp
mul
(bad)
lock
iret
and
or
enter
hlt
push
pusha
sub
pop
lahf
jne
xor
inc
popf
pop
mov
push
cmp
imul
xchg
jns
adc
mov
and
pop
sub
pop
xor
jp
inc
inc
fwait
sub
lods
addr16
test
arpl
and
gs
les
popf
fimul
xchg
jle
sub
loope
add
outs
fnstsw
xchg
mov
jnp
cmp
push
in
sbb
mov
and
and
leave
cmp
leave
sbb
push
xor
movs
retf
xchg
xor
in
popf
add
add
dec
inc
cmp
inc
and
jle
xchg
outs
and
jp
push
adc
lahf
lock
shr
in
mov
pop
out
imul
js
stos
pop
mov
pop
xor
scas
xchg
sti
ins
jecxz
fld
mov
loope
mov
push
jae
out
xchg
rol
sbb
jle
stos
or
pushf
jecxz
mov
mov
mov
ins
sub
test
(bad)
pop
ror
jae
dec
jae
sub
push
out
jmp
shl
shr
in
cmc
jne
push
scas
add
jbe
and
lea
in
(bad)
sbb
imul
jmp
mov
call
popf
xor
jg
adc
loope
pop
add
dec
nop
cmp
mov
test
icebp
mov
jmp
dec
xor
(bad)
lds
test
lods
mov
loope
scas
fs
sbb
mov
xor
add
mov
or
in
inc
(bad)
xchg
popf
lock
frstor
mov
ror
les
test
mov
xor
jmp
mov
sahf
enter
int
outs
xchg
xor
lea
push
daa
sbb
xchg
sub
adc
mov
clc
mov
push
ins
cmp
aas
or
out
adc
test
sahf
call
popf
and
dec
sub
or
adc
(bad)
fwait
enter
adc
(bad)
adc
test
sub
xor
arpl
xor
inc
outs
fldenv
lahf
mov
add
and
and
and
mov
cli
out
xlat
xchg
or
sti
psubsw
xchg
mov
stos
push
sahf
cmp
sti
cmp
push
faddp
xchg
lea
cdq
and
cmc
inc
mov
test
sub
sub
add
jg
rcl
or
inc
retf
mov
mov
lahf
or
cmc
mov
jbe
(bad)
jmp
jo
pusha
mov
jl
popf
xor
repnz
imul
out
scas
add
aad
bound
dec
cmp
mov
and
add
or
push
or
popa
push
arpl
cmp
leave
inc
loope
mov
mov
adc
mov
fs
adc
mov
dec
adc
inc
mov
lods
xchg
sub
pop
in
dec
dec
xchg
inc
mov
adc
or
mov
mov
push
push
inc
aaa
pop
repz
xchg
push
jbe
add
popa
scas
xor
popf
shrd
dec
xchg
ja
xor
mov
mov
hlt
int
(bad)
outs
push
mov
jnp
icebp
jb
test
ds
cli
(bad)
enter
mov
xchg
gs
inc
jg
sbb
test
in
mov
pop
mov
mov
push
(bad)
movs
mov
test
inc
int3
cmps
rcl
sbb
cmp
inc
je
xchg
js
mov
rcl
mov
into
hlt
stc
pop
xchg
mov
lds
inc
add
test
loopne
xor
mov
or
adc
push
into
pushf
add
add
inc
imul
pop
ds
xchg
push
fcomp
gs
cmc
push
cs
cmp
clc
dec
arpl
std
lods
sub
aam
pushf
or
test
pop
adc
xor
and
int3
in
dec
iret
icebp
xchg
fcomp
retf
jp
sub
jmp
xor
xor
loopne
adc
push
adc
or
fstp
sub
sbb
sti
nop
cmp
dec
cmp
lods
push
dec
(bad)
stc
mov
adc
sbb
dec
jl
in
dec
inc
mov
mov
call
ja
sub
mov
(bad)
leave
sub
aad
or
in
xchg
and
retf
cdq
or
xchg
out
cmp
cld
inc
mov
jns
lahf
mov
or
adc
nop
call
(bad)
loop
jo
pop
inc
push
add
add
jbe
adc
sub
bswap
or
js
pushf
lods
out
daa
imul
or
aad
leave
cmc
fstp
lahf
mov
iret
pop
pusha
inc
or
pop
adc
adc
into
ds
lock
lods
push
inc
pop
out
fcmovnbe
add
test
gs
add
mov
pop
jnp
test
mov
pop
sbb
movs
fcom
inc
mov
or
lahf
addr16
jecxz
call
fcom
adc
mov
add
sbb
imul
in
mov
(bad)
call
ret
fstp
les
sbb
jmp
(bad)
stos
in
(bad)
dec
inc
test
(bad)
arpl
pmullw
sbb
stos
ins
ja
or
and
mov
xlat
stos
nop
aam
std
fwait
aad
add
or
enter
push
dec
enter
nop
mov
xchg
(bad)
popf
dec
and
xchg
scas
adc
scas
mov
or
stos
or
sub
adc
fild
jb
(bad)
push
outs
repnz
sbb
dec
mov
in
shl
cmp
imul
dec
(bad)
call
scas
mov
mov
in
lahf
fdivr
xchg
stos
out
push
test
mov
adc
jecxz
and
mov
jge
sub
push
iret
xor
scas
adc
cmp
cmp
jmp
imul
shl
push
cmp
cmps
shl
sbb
push
test
sbb
je
aaa
ror
dec
cmp
jecxz
out
jae
jecxz
inc
push
pop
dec
fsubr
int3
pop
push
sbb
in
adc
xchg
adc
jb
shl
in
test
pop
fldz
enter
retf
or
sub
or
sub
ret
dec
(bad)
sbb
pop
inc
jns
lahf
jne
stos
inc
pop
and
mov
mov
pop
cmovne
mov
mov
fwait
push
call
mov
sbb
or
aaa
retf
adc
xchg
cmp
loop
stos
add
sbb
fcomip
frstor
popf
(bad)
stos
cmp
test
scas
lods
and
mov
inc
dec
in
jge
pop
stc
outs
jl
bound
ins
ror
fistp
pop
sub
or
lods
(bad)
out
cwde
and
mov
int
mov
inc
scas
fisub
xchg
jle
jmp
pop
in
not
adc
loope
pop
ss
movs
cmps
jl
imul
mov
fidiv
xchg
dec
mov
(bad)
out
jecxz
push
scas
xchg
ds
push
sub
mov
pop
add
scas
mov
(bad)
mov
das
nop
test
bound
add
aaa
fwait
shr
cmp
cmp
and
jp
mov
or
xchg
popf
jp
jmp
mov
add
and
push
test
xchg
xchg
cmp
mov
into
sti
cmp
aam
cmp
fwait
mov
pop
js
xor
mov
ss
pop
lods
xor
lea
hlt
popf
iret
outs
push
imul
sbb
mov
and
movs
arpl
out
pop
mov
jecxz
cmp
call
hlt
and
pop
punpckldq
dec
dec
mov
inc
xor
fidiv
int
cmp
jbe
jne
push
sar
mov
loope
adc
or
lock
or
inc
test
daa
sub
leave
clc
shl
scas
pop
ja
frstor
mov
(bad)
sub
jmp
and
inc
lods
pushf
push
pop
ja
les
cmc
leave
cs
and
push
adc
clc
sbb
aam
sub
nop
mov
iret
addr16
daa
int
cmps
fidivr
out
iret
mov
pop
daa
js
adc
nop
adc
push
lods
and
adc
(bad)
cli
ret
mov
adc
xchg
mov
mov
into
sbb
sar
fwait
push
shr
data16
mov
adc
outs
movs
adc
jl
sub
(bad)
push
fsubr
fbstp
pop
xor
jle
jb
nop
cwde
hlt
lock
loope
cmps
adc
sar
add
pop
arpl
pop
outs
clc
cli
xchg
(bad)
and
dec
lahf
imul
idiv
gs
and
mov
call
push
fstp
stos
xchg
pop
mov
test
scas
fs
xor
popf
sbb
cmp
(bad)
out
pop
sub
adc
into
dec
or
push
or
(bad)
jns
es
cld
add
xchg
pop
xchg
pop
fs
retf
aaa
push
and
jae
jecxz
pop
cwde
(bad)
aad
xchg
test
pop
call
scas
ds
adc
fild
push
jno
adc
call
add
pop
mov
clc
je
fs
mov
mov
fidivr
cmp
rol
push
daa
lods
cmp
lods
loop
jmp
cmp
xchg
mov
and
sti
fistp
mov
test
jge
dec
mov
sahf
mov
scas
jge
mov
repnz
cwde
push
stos
pop
cld
adc
ror
mov
pop
mov
mul
jo
jecxz
out
fs
and
add
cli
adc
adc
mov
jbe
shr
push
xchg
fidivr
shl
daa
pusha
out
add
mov
and
cmp
out
cli
in
or
push
mov
jle
ins
cmp
xchg
mov
lock
mov
outs
test
pop
in
mov
push
sub
aam
xlat
or
xor
mov
push
nop
pop
or
leave
inc
adc
loop
clc
jno
mov
fild
mov
or
out
cwde
test
les
sbb
cmp
lods
leave
jl
add
stos
push
dec
push
sbb
inc
sti
shl
int
std
mov
sub
repnz
and
add
xor
repnz
mov
pop
les
rcl
push
retf
fcmovne
push
js
outs
and
nop
cmps
call
xor
xor
push
and
enter
mov
lahf
inc
bound
sbb
dec
stos
sbb
out
jno
mov
xor
mov
aas
jecxz
je
out
mov
lods
sbb
jle
aad
add
sub
call
pop
retf
xchg
inc
push
or
scas
push
and
xlat
cli
shl
pop
js
cmc
into
vpackssdw
ja
call
fidivr
mov
mov
in
sbb
imul
push
mov
in
into
add
push
addr16
fwait
xlat
fs
sbb
and
imul
bnd
jle
cmp
mov
push
shl
cmp
mov
cmc
push
fs
stos
push
mov
dec
or
mov
or
adc
xchg
mov
cmps
mov
sub
in
int3
mov
lds
mov
das
sub
cdq
jge
add
add
xor
push
push
sbb
mul
jp
bound
cli
push
and
iret
dec
test
jmp
dec
mov
int
pop
mov
in
mov
xor
mov
push
into
stos
add
ja
pop
loop
lock
xchg
movs
mov
and
mov
in
mov
mov
cmps
iret
arpl
adc
in
sti
loop
add
push
push
pop
daa
mov
(bad)
sti
scas
test
loopne
dec
mov
add
dec
cmp
js
stos
in
xchg
sbb
dec
mov
leave
jecxz
out
sahf
out
loop
not
test
add
inc
js
stc
sbb
jnp
rcr
movs
mov
mov
cmp
cli
xor
loope
int3
dec
mov
daa
or
test
push
test
rcl
fsubp
sbb
addr16
call
pop
inc
jge
jb
out
bound
int
cmp
inc
sbb
ret
add
jbe
ret
inc
popa
push
add
mov
mov
sub
iret
dec
loopne
inc
or
xchg
and
ds
xor
dec
jns
fidivr
push
les
ud2
mov
sahf
fs
xchg
jne
push
push
pop
leave
(bad)
fst
sbb
inc
imul
cwde
push
adc
int
dec
rcl
shl
mov
xchg
fst
cmp
repnz
sub
call
stos
mov
add
xchg
out
repnz
rol
jo
bnd
outs
inc
sbb
bound
jmp
dec
js
ins
mov
pop
and
xor
mov
add
jp
cld
push
scas
push
mov
xchg
and
mov
push
cmc
xchg
clc
push
xchg
push
scas
ret
imul
push
mov
loop
ret
mov
sub
inc
adc
pop
and
shl
mov
pusha
mov
or
mov
(bad)
shl
push
pop
hlt
jle
or
pop
call
cmps
pushf
xchg
xchg
out
sub
push
cmp
iret
mov
mov
inc
daa
mov
out
cmp
and
cmp
das
(bad)
fmul
imul
shl
jmp
pop
and
cmp
or
xor
dec
ret
pop
daa
pop
imul
dec
dec
int
outs
cmp
and
xor
jl
xor
mov
sbb
mov
cmp
aam
stos
xor
lods
mov
test
lea
fwait
push
fwait
dec
jl
jnp
dec
sub
aas
imul
xchg
lods
and
mov
sbb
retf
(bad)
adc
fs
mov
leave
add
xor
fistp
adc
jge
xchg
xchg
in
mov
imul
ins
xchg
daa
jecxz
xchg
jae
and
sub
lock
pushf
in
imul
fwait
push
fwait
loope
(bad)
addr16
iret
ins
lahf
je
(bad)
rcr
ins
xor
ds
int
push
xor
sbb
js
jbe
repnz
or
add
push
and
test
jmp
and
mov
cmp
scas
int3
cmp
neg
xchg
cmp
out
jge
(bad)
adc
jle
stc
xor
pop
add
jns
jne
xchg
mov
fisttp
rcr
arpl
push
mov
daa
enter
and
dec
stos
adc
dec
repz
fcom
(bad)
popf
jmp
push
inc
jecxz
sub
repnz
les
hlt
aad
push
pop
arpl
aam
xlat
cmc
cmp
stos
adc
dec
dec
cmps
mov
push
not
pop
stos
jno
xor
ret
and
lds
mov
in
mov
fild
xlat
lea
and
sbb
jo
xchg
addr16
bound
fsubr
mov
clc
iret
ins
push
lea
sbb
mov
mov
pop
push
cmps
pop
mov
cld
push
mov
sub
dec
xor
into
jmp
in
gs
sbb
pop
xchg
and
daa
call
push
mov
in
pop
imul
pop
add
dec
mov
cdq
ret
sbb
adc
ds
adc
xchg
push
mov
jge
add
pop
jnp
adc
hlt
scas
daa
xor
clc
int3
xor
pavgb
mov
idiv
clc
push
mov
in
aas
int
add
xchg
fistp
out
adc
cmps
xlat
adc
and
adc
sbb
sbb
stos
inc
hlt
jb
and
clc
rcl
aas
inc
fbstp
inc
imul
sbb
das
in
push
shr
repz
enter
cmc
push
xor
xor
fisubr
lods
in
(bad)
jae
inc
mov
(bad)
jmp
pop
sub
mov
mov
jmp
add
mov
imul
add
push
sahf
dec
lahf
arpl
sar
adc
not
xchg
mov
xor
leave
js
cli
loopne
arpl
inc
add
push
mov
shl
repz
jb
sbb
inc
mov
xchg
test
mov
sbb
aad
add
mov
jge
out
leave
sar
fnstcw
int
out
push
xlat
add
sub
push
xchg
xchg
retf
mov
out
and
fidiv
inc
aaa
cmp
cdq
pop
mov
int
ret
sahf
aam
push
mov
cmps
test
ret
dec
pop
push
push
jnp
cld
ss
and
mov
push
popf
movs
addr16
add
hlt
sbb
jmp
shl
call
dec
xchg
aas
cmp
dec
push
addr16
mov
lea
dec
jbe
mov
daa
xor
cmps
jge
out
inc
cmps
aas
retf
cmps
adc
jo
dec
imul
rol
jmp
jg
cli
mov
adc
or
sbb
dec
rol
(bad)
adc
(bad)
push
dec
inc
mov
ret
(bad)
mov
mov
addr16
jo
(bad)
jmp
outs
test
retf
loopne
(bad)
or
out
jo
jnp
adc
or
sbb
ror
into
sub
mov
jb
inc
jb
repnz
int3
shr
lahf
enter
mov
ja
fnsave
data16
aad
and
sar
mov
sub
mov
cmp
push
jae
(bad)
aam
xor
jbe
xchg
fld
pop
retf
cmps
mov
add
push
out
bound
jne
das
aas
into
int3
lock
sbb
jmp
dec
sub
jbe
sub
pop
add
adc
cmp
xor
call
jae
aaa
popf
loopne
in
add
or
dec
(bad)
fistp
sbb
and
xchg
adc
sub
repnz
jp
mov
jb
(bad)
std
enter
rcl
mov
rol
(bad)
mov
test
fcom
push
imul
jmp
mov
or
mov
and
jmp
out
inc
lahf
mov
jmp
fild
fstp
pop
fisttp
neg
cmc
nop
sti
or
ins
add
push
sub
cmp
pop
pop
dec
lds
dec
nop
das
add
(bad)
out
outs
add
cli
mov
(bad)
(bad)
call
pushf
rcr
loopne
lods
loop
sbb
mov
outs
mov
stc
stos
cmp
push
pushf
and
pushf
pop
fdivr
in
loopne
test
adc
adc
jle
sbb
xchg
pop
in
add
(bad)
fidivr
or
inc
loope
add
sbb
lea
call
loop
(bad)
xor
xchg
lods
mov
sbb
inc
jecxz
nop
mov
and
in
cmp
leave
cli
vpor
push
pop
pop
lods
shr
xchg
mov
shl
ret
cmp
mov
cs
bound
mov
and
dec
dec
rcl
int
xchg
iret
pop
ret
pusha
(bad)
outs
inc
and
jg
xor
in
les
dec
lock
arpl
inc
jns
popf
mov
ss
ins
inc
push
sbb
and
test
loop
mov
pop
scas
pop
dec
add
push
jmp
pop
ja
fnsave
cmp
aad
adc
stos
xor
aam
pop
nop
test
pushf
fsub
in
in
dec
imul
ja
(bad)
mov
mov
add
lahf
pop
jnp
mov
fcomp
push
jge
pop
repnz
adc
push
pop
daa
jno
cmp
inc
shr
retf
mov
hlt
cmp
mov
mov
(bad)
and
test
jg
lods
dec
xor
lds
cmps
jmp
mov
leave
pop
dec
pop
xor
(bad)
jmp
fdivrp
xchg
loop
xlat
add
sbb
xchg
sub
fidiv
shl
dec
mov
rol
shl
push
mov
aaa
nop
stos
dec
mov
scas
add
(bad)
jmp
pop
mov
pop
inc
scas
dec
xor
(bad)
in
mov
pop
pop
je
ins
fild
movs
iret
inc
dec
sub
xchg
cs
mov
cmp
imul
sub
lock
imul
fist
pop
ja
sub
inc
idiv
std
mov
inc
inc
pop
mov
stos
mov
or
mov
mov
repz
ret
jg
mov
push
imul
shl
or
ds
leave
jae
dec
fcomp
loopne
aad
xor
outs
sub
push
jmp
xor
add
push
jno
dec
sub
dec
sete
fnstcw
sub
push
inc
xor
rcr
and
push
mov
lahf
add
push
adc
pushf
aam
mov
xor
aam
(bad)
shl
dec
(bad)
dec
pop
test
push
retf
push
or
add
cmp
xchg
mov
jns
push
scas
fadd
std
aaa
pop
sti
fwait
adc
add
or
stc
in
test
or
cld
sbb
icebp
out
mov
sub
idiv
scas
adc
test
xchg
xchg
aaa
test
frstor
xor
sar
and
jae
fiadd
popf
leave
enter
fiadd
mov
adc
xor
mov
dec
in
xchg
cmc
sbb
adc
inc
add
jmp
(bad)
lods
add
pop
fwait
xor
cwde
neg
retf
and
call
les
xor
out
adc
ins
cli
jae
mov
mov
pop
push
jo
fadd
dec
in
(bad)
stos
mov
cmp
adc
mov
mov
test
add
and
pop
out
repnz
mov
and
(bad)
rcr
inc
dec
pusha
js
lahf
push
rol
sub
add
pop
fsubr
inc
cmp
push
inc
push
cwde
pop
xlat
cmp
loop
push
cs
data16
rcl
sahf
dec
dec
cmp
repnz
push
pushf
(bad)
into
jns
push
jge
jmp
cmp
fisubr
sbb
sub
addr16
and
aam
into
sti
lea
ss
shl
sbb
shl
mov
scas
loope
test
cwde
fwait
mov
cmp
jle
add
ins
mov
lods
jnp
jbe
mov
sub
test
repz
mov
cmps
adc
into
into
call
cmp
stc
inc
xchg
mov
out
mov
test
mov
movs
adc
adc
jb
cmps
sub
into
or
push
xchg
jb
retf
mul
das
jl
lods
bound
mov
(bad)
and
mov
pop
push
loop
mov
(bad)
out
leave
shl
adc
push
jno
mov
not
mov
aaa
jmp
mov
mov
mov
es
lock
cmp
xor
adc
pop
jmp
jbe
pushf
lahf
mov
pop
in
mov
ins
add
and
mov
add
and
sub
pop
push
mov
mov
mov
sti
loope
xchg
mov
inc
movs
dec
sub
pop
mov
cmp
cmps
push
pop
xchg
pushf
sbb
retf
retf
outs
cmp
push
mov
dec
fst
jecxz
jbe
adc
jl
mov
jmp
aas
call
aam
and
jne
pop
ficomp
and
mov
arpl
xchg
ins
daa
push
and
enter
push
add
xchg
inc
and
cld
icebp
mov
sub
xor
jnp
dec
sub
mov
pop
fs
aaa
repnz
les
sar
iret
jle
cmp
cld
inc
push
mov
mov
sub
scas
or
mul
movs
jo
int
rol
mov
scas
mov
int3
fwait
pop
xchg
mov
hlt
js
cmp
hlt
jno
add
push
xor
push
popf
aas
mov
outs
dec
mov
dec
inc
hlt
mov
in
clc
aam
cmp
jge
call
in
sub
mov
int
cmps
ds
fwait
jp
ucomiss
ins
nop
add
imul
pop
mov
call
ds
cmps
out
(bad)
sub
cmps
xor
xor
lds
shl
lds
add
and
push
(bad)
outs
mov
ja
mov
push
call
test
aam
test
sub
(bad)
adc
sub
jmp
lea
daa
xor
fisubr
stc
movs
pushf
push
nop
push
fistp
data16
retf
jecxz
mov
test
retf
into
mov
clc
aad
or
cmp
daa
ss
dec
and
or
or
pop
ror
test
dec
dec
cs
in
lock
mov
jl
fdivr
jp
mov
shl
jg
adc
mov
mov
dec
pop
shl
std
inc
pop
dec
pop
shr
les
mov
or
jne
fs
dec
retf
dec
or
jns
push
dec
mov
into
cmovnp
jo
pop
push
scas
sub
add
movs
dec
mov
mov
clc
clc
cli
xlat
lahf
scas
mov
out
imul
dec
adc
push
sbb
push
outs
inc
cmp
mov
test
xchg
sbb
arpl
xchg
out
xchg
popa
shr
cs
(bad)
push
dec
push
clc
in
push
xchg
inc
test
push
pop
pop
mov
test
add
loope
push
or
adc
xor
repnz
sub
push
push
pop
outs
ret
(bad)
fadd
adc
std
sub
push
mov
or
xor
mov
std
fadd
sahf
(bad)
sbb
sub
jl
add
adc
shl
dec
repnz
push
inc
lahf
and
iret
test
mov
iret
xor
pop
mov
mov
bound
aam
mov
and
jae
loop
sbb
mov
cmp
add
int
rol
or
aad
mov
ret
in
ret
aam
dec
mov
jle
push
inc
cmps
pop
mov
inc
out
xchg
and
fiadd
loop
jns
(bad)
xlat
out
je
aam
mov
xchg
push
(bad)
clc
add
pop
add
sbb
xor
add
xor
mov
or
mov
adc
sub
mov
and
pop
(bad)
sbb
repz
push
pop
xchg
fwait
sti
movs
sub
and
test
pop
xor
rol
jmp
fmul
(bad)
adc
pop
push
mov
pop
pop
loopne
scas
imul
stos
push
pop
adc
into
adc
mov
repz
lea
and
jg
shr
or
ss
inc
into
test
daa
out
mov
mov
sbb
xlat
jg
add
aaa
test
jle
daa
pushf
call
adc
cli
mov
or
retf
shl
sar
test
dec
das
fdivr
pop
in
add
push
ret
int3
packsswb
cmp
adc
test
sbb
loopne
lds
or
leave
jbe
shl
loop
or
mov
and
icebp
jo
ret
test
add
sub
add
jg
xchg
xchg
xchg
mov
inc
push
fidivr
add
dec
fsub
mul
mov
dec
mov
hlt
mov
sysenter
xor
jp
mov
aaa
xchg
les
dec
stos
mov
mov
mov
ins
std
fstp
pop
and
call
fs
mov
addr16
jno
stc
mov
dec
sbb
in
mov
sti
cld
in
fidivr
pop
xchg
mov
test
push
inc
aas
mov
scas
imul
movs
or
nop
hlt
fdecstp
es
pop
inc
call
test
daa
cmps
mov
adc
xor
jle
fwait
sbb
int
test
add
adc
pop
add
sbb
mov
jae
(bad)
scas
push
daa
sub
not
loope
lods
xor
and
push
(bad)
mov
fdiv
not
es
inc
mov
jmp
sub
cmp
outs
add
mov
lods
mov
call
fbld
rdmsr
push
jne
fbld
mov
call
sbb
push
dec
jl
outs
xchg
lahf
dec
jmp
gs
cmp
cdq
adc
jno
inc
fldcw
test
and
dec
sahf
ficomp
sub
retf
dec
sbb
gs
push
pusha
into
jbe
ja
idiv
cdq
pop
or
adc
popf
and
pop
lds
mov
xchg
mov
neg
push
jns
jb
jmp
rcr
pop
sub
in
sbb
cmp
dec
ss
(bad)
cmp
dec
mov
jp
ja
retf
xor
cdq
xchg
jmp
in
or
adc
shr
xchg
inc
xchg
mov
jmp
push
xchg
inc
fsubr
in
mov
mov
sti
cmp
mov
xchg
iret
addr16
pop
aam
mov
push
leave
mov
sti
mov
mov
call
int3
loopne
hlt
out
mov
outs
shr
sub
mov
sbb
mov
scas
xchg
adc
imul
add
xor
mov
sub
or
xor
sbb
pop
or
popf
xchg
jmp
arpl
rcl
xor
mov
pop
sbb
mov
xchg
repz
add
retf
pop
ds
test
cwde
push
(bad)
mov
sti
stc
jmp
adc
sar
jne
(bad)
call
cs
pop
mov
and
cmp
or
mov
stos
lock
mov
jb
(bad)
hlt
ret
stos
mov
retf
popf
adc
push
lods
dec
dec
lahf
imul
jae
or
ins
and
add
data16
ja
cmp
retf
push
xor
lds
push
push
and
lds
sbb
xchg
adc
jne
adc
hlt
mov
sbb
dec
rcl
mov
std
dec
in
call
loope
mov
ffreep
retf
aaa
das
jnp
mov
adc
sbb
es
aas
stos
lods
imul
in
cmp
or
or
mov
xor
dec
or
sahf
dec
xor
movs
icebp
mov
xor
add
imul
dec
enter
xchg
dec
jno
dec
jb
mov
pop
rcl
sub
inc
(bad)
adc
xor
outs
(bad)
mov
sub
imul
(bad)
adc
sub
cmp
enter
retf
fld
mov
shr
xchg
xchg
jg
rcr
sbb
lds
nop
out
mov
adc
lods
adc
clc
sub
shr
or
or
xor
imul
popa
sbb
cli
mov
push
loopne
mov
add
ror
mov
cs
mov
bound
xchg
sbb
mov
xor
ret
jnp
and
hlt
sahf
add
inc
sti
and
sub
lahf
vcvtsd2si
jnp
test
xchg
sbb
aaa
jae
cmp
pop
pop
cmp
jmp
sub
fdiv
xchg
xor
ins
jl
ficom
push
sub
adc
xchg
xor
ds
daa
hlt
xlat
lahf
test
mov
mov
pushf
pop
pop
mov
int
cmp
das
mov
xor
movs
mov
dec
cs
lea
fwait
sub
sub
or
ficomp
(bad)
add
or
pop
sub
pop
shr
popa
movs
mov
inc
and
add
arpl
xor
sbb
shr
das
repz
je
cmp
mov
xchg
fadd
(bad)
fstp
mov
xchg
adc
add
mov
lods
mov
test
mov
mov
aad
cmps
test
pop
fidiv
aaa
or
mov
inc
cld
mov
push
aas
xchg
jp
adc
fwait
sbb
pushf
and
push
ror
aad
je
iret
mov
mov
jmp
mov
sub
jp
addr16
out
mov
(bad)
aad
push
jecxz
pop
cmp
dec
fnstenv
sahf
pop
push
sub
add
addr16
gs
push
(bad)
call
movs
call
mov
(bad)
jmp
push
ss
sbb
jp
mov
push
cmps
sti
inc
cmp
(bad)
daa
mov
push
push
hlt
aas
push
out
(bad)
cmp
std
and
xchg
mov
push
sbb
jg
cwde
mov
sbb
sar
push
xchg
ds
dec
jp
mov
dec
int
loop
js
mov
scas
fnsave
mov
(bad)
fisttp
jle
in
and
out
hlt
add
jecxz
or
mov
add
ret
aaa
hlt
push
loope
jge
ins
call
push
sub
shl
cmp
xchg
aaa
xor
mov
clc
lock
push
aad
push
mov
pop
(bad)
js
in
adc
pop
imul
sbb
mov
mov
(bad)
stos
jne
imul
aas
sub
jne
mov
fild
jmp
inc
dec
add
loop
sahf
scas
jmp
push
push
xor
loope
mov
mov
push
jp
inc
pop
retf
pusha
icebp
xchg
and
movs
pop
ss
pop
sub
sbb
pop
hlt
dec
(bad)
cmp
jge
sbb
ror
fistp
or
xchg
jo
xlat
or
cmps
repnz
sbb
fldenv
jns
daa
sar
test
icebp
test
mov
out
sub
xor
icebp
sar
push
adc
push
test
test
je
xchg
mov
out
mov
pop
leave
sub
push
call
inc
not
or
push
mov
sbb
sub
sbb
or
lock
sub
jmp
clc
sub
add
jbe
jge
in
push
sub
sar
ror
sub
cmps
xor
inc
jecxz
push
call
fidiv
(bad)
push
es
call
stc
cmps
jl
daa
mov
(bad)
sbb
adc
retf
jl
lock
xchg
ret
hlt
ret
faddp
mov
sbb
sti
sbb
inc
add
jge
sbb
sbb
xor
mov
ja
dec
mov
(bad)
aad
sbb
fist
xchg
stos
fiadd
add
add
jmp
lods
xchg
mov
in
fcomp
mov
xlat
push
scas
in
aam
retf
inc
mov
xor
inc
shr
mov
and
aam
pop
sbb
fxtract
sbb
stos
popf
pop
cmp
(bad)
retf
pop
add
(bad)
sbb
sub
loope
jne
jmp
nop
and
inc
fwait
lahf
sahf
sbb
xchg
inc
js
call
xchg
shr
sbb
cmp
dec
scas
das
pop
and
push
and
xor
push
and
ja
xchg
pop
pop
ins
sub
pushf
les
jbe
pop
and
mov
mov
adc
ror
movs
pop
fidiv
sub
sub
xlat
call
sub
cmc
mov
shr
ret
push
pop
test
in
ins
nop
(bad)
or
sub
xchg
out
or
int
pusha
or
in
cdq
int3
xchg
es
in
sub
popf
mov
cmp
inc
cdq
movs
ss
mov
out
(bad)
mov
xchg
dec
(bad)
jns
je
cmc
adc
hlt
mov
cli
fucomp
shr
ss
lahf
jmp
push
and
enter
loop
loop
sbb
fist
out
popa
sahf
cmps
cld
mov
shr
out
adc
mov
mov
dec
imul
pop
aad
cld
xchg
push
pop
cld
inc
sti
(bad)
outs
push
arpl
out
cli
and
div
mov
shl
add
dec
inc
icebp
xchg
xchg
stos
data16
fstp
in
pop
dec
jmp
outs
push
xchg
jae
cmp
repz
xchg
jg
xor
imul
mov
shl
repz
sbb
push
jae
aas
sahf
adc
push
iret
ins
inc
jmp
lds
add
ds
repz
call
sar
jns
inc
cwde
pop
sub
mov
cdq
pop
cmc
mov
xor
cmp
xchg
(bad)
push
leave
push
inc
sub
mov
movs
stos
test
push
jle
imul
sbb
push
(bad)
pushf
(bad)
push
jmp
mov
sahf
pop
adc
mov
out
sti
mov
xchg
(bad)
out
(bad)
arpl
fsub
push
inc
jne
hlt
adc
xchg
jl
mov
movs
pop
aam
or
call
mov
aaa
cs
inc
outs
scas
popa
mov
fs
push
lea
jecxz
aam
sub
add
or
pop
sub
(bad)
mov
and
and
mov
shl
and
xchg
ds
(bad)
(bad)
pop
xor
sub
stos
adc
cmps
xor
fdiv
test
out
adc
lahf
add
jbe
push
stos
ror
popa
popa
retf
mov
mov
xor
out
mov
jne
(bad)
sbb
mov
cdq
scas
(bad)
icebp
xchg
push
fcmovu
mov
sbb
and
or
push
jmp
or
mov
jle
mov
pop
mov
push
fadd
int3
pop
in
data16
add
sti
in
pop
daa
in
push
retf
inc
outs
int
inc
in
and
jmp
adc
xchg
(bad)
pushf
jecxz
popa
push
in
repnz
add
fwait
xor
mov
sub
push
movs
xor
in
movs
std
inc
mov
and
fucomi
pop
or
movs
cmp
call
inc
out
or
aad
mov
ss
and
sub
gs
loop
stos
cwde
fld
ds
stos
dec
pop
dec
aam
fild
push
push
jo
jle
iret
gs
clc
cli
cmp
mov
jmp
cdq
sub
xchg
sar
out
dec
icebp
shl
fwait
jmp
(bad)
and
push
or
popa
add
inc
out
xor
jle
fs
and
sub
retf
adc
scas
rcr
inc
outs
adc
push
loop
ds
pop
shr
and
inc
xor
xchg
jge
push
pop
or
js
movs
stos
mov
fsub
dec
xor
sahf
sahf
lods
loop
mov
jmp
add
push
sub
dec
fdiv
pop
movs
out
imul
in
cmc
mov
icebp
cmp
dec
jl
icebp
fadd
jmp
mov
pop
hlt
into
add
adc
outs
inc
inc
jmp
in
fs
fcomi
dec
pop
sbb
dec
mov
jns
add
jns
int3
ins
mov
jne
xchg
push
jo
mul
cs
xor
aaa
mov
mov
mov
int3
inc
call
outs
jns
loope
jp
(bad)
xchg
xchg
jb
mov
mov
bound
ret
inc
or
pusha
ret
dec
lods
hlt
mov
xor
and
fisttp
stc
aaa
cld
xchg
mov
mov
push
adc
retf
loope
sahf
push
xor
mov
xchg
add
nop
mov
jle
icebp
movs
rcl
sub
nop
sub
dec
aad
mov
hlt
popf
and
js
lock
fcom
in
ror
xchg
inc
ficom
push
dec
sbb
add
sbb
dec
lea
inc
int
jnp
(bad)
js
dec
and
std
shl
call
fsubr
fisttp
fstp
xchg
shl
xchg
fdivrp
stos
push
test
mov
add
dec
inc
and
cmp
sub
aaa
imul
pop
mov
div
cmp
test
sub
jae
imul
jg
popf
pminsw
sub
movs
mov
rcl
sti
add
sub
push
jnp
and
inc
mov
test
dec
push
and
out
call
xchg
pop
mov
or
cmp
xor
sub
repnz
xchg
rcr
xor
mov
push
ja
push
push
sbb
pop
cmp
loop
mov
mov
pusha
jle
cs
out
mov
ja
icebp
cdq
clc
cmp
pop
fisub
push
stos
sbb
xor
test
dec
jl
adc
mov
ss
mov
arpl
stc
pop
pop
xor
push
sbb
fdivr
call
fs
push
mov
mov
lahf
or
mov
mov
jmp
mov
mov
dec
test
ret
ins
(bad)
std
add
lods
fwait
loopne
in
scas
push
xor
int
adc
cwde
in
cmp
pop
jns
lock
pop
pop
loopne
add
jle
fs
adc
not
ror
jmp
jle
retf
xor
fdiv
sbb
push
lds
pop
mov
push
int3
pushf
outs
nop
cmp
mov
dec
iret
ret
ja
aad
js
shr
add
adc
lods
inc
aaa
inc
pusha
out
scas
retf
add
xor
sbb
in
jno
sbb
sti
hlt
stos
jg
xor
pop
adc
xchg
inc
inc
push
fcompp
sub
pop
lods
lahf
sbb
pusha
fistp
mov
test
dec
loope
(bad)
popa
xor
fdiv
nop
mov
mov
mov
movs
punpcklbw
inc
loope
inc
in
dec
or
in
shl
sbb
mov
and
dec
xor
cli
sbb
xor
push
and
pop
jle
inc
push
jle
ret
gs
daa
fcmovnb
adc
or
adc
mov
and
jmp
pop
in
aad
adc
adc
into
les
cdq
mov
aaa
mov
in
inc
and
jecxz
les
xlat
or
out
sti
add
or
fnsave
test
addr16
lahf
push
cmp
loope
xchg
dec
imul
inc
ficomp
dec
in
loop
rcr
(bad)
or
dec
xchg
mov
(bad)
(bad)
jno
loop
gs
xor
adc
jecxz
mov
leave
or
add
dec
ds
cmc
push
fiadd
icebp
push
mov
pop
xor
cwde
js
cs
lahf
mov
sub
(bad)
ret
ins
fsub
in
stos
xor
pop
clc
and
mov
xchg
nop
fcmovne
or
and
lock
int3
inc
jno
mov
or
mov
jne
push
mov
daa
mov
add
sub
mov
push
add
cmp
(bad)
pop
xor
scas
js
dec
cli
into
add
xlat
pslld
cmp
fsubr
dec
mov
stc
enter
jle
xor
outs
ds
test
push
add
mov
hlt
scas
mov
mov
jb
sbb
xor
outs
xor
or
xor
test
fs
in
xor
inc
pop
sub
mov
xor
pusha
mov
mov
sub
add
pop
addr16
adc
int
fnstcw
aas
cdq
je
shl
mov
out
push
sub
mov
das
in
sbb
mov
scas
int
repnz
xor
outs
xchg
pop
ss
sub
data16
dec
sti
dec
add
lods
sub
mov
(bad)
repz
ror
movs
sti
sbb
mov
mov
or
out
xor
cmp
jge
xchg
in
rcl
xor
ja
test
pop
int
mov
leave
aam
or
jnp
jo
imul
aad
in
pop
mov
cmp
push
inc
ins
movs
inc
dec
fidivr
out
add
push
jno
xor
push
jl
ror
shr
dec
inc
or
js
mov
push
jae
hlt
aam
lock
pop
sbb
ficomp
test
pop
aad
mov
(bad)
in
xchg
dec
stc
ret
aas
xchg
imul
dec
push
push
dec
in
daa
scas
hlt
scas
retf
lds
out
js
and
sbb
movs
xchg
div
outs
add
inc
test
xchg
ret
jmp
xchg
cmp
ds
js
imul
mov
xor
cmp
adc
cmc
sbb
cdq
mov
mov
xor
ja
mov
jno
inc
inc
push
cmp
inc
xrelease
or
jp
outs
jmp
cmp
(bad)
dec
jmp
out
pop
and
data16
dec
xlat
inc
push
(bad)
jnp
pop
xlat
mov
cmps
jl
jle
dec
cs
jge
and
jmp
mov
lea
out
test
push
jbe
psllw
pop
jle
mov
add
pop
xrelease
popa
inc
pop
mov
lock
(bad)
cmp
mov
pop
clc
fsub
pusha
dec
dec
int
jecxz
sub
cmp
outs
sbb
les
in
dec
add
sbb
pop
stc
add
sub
and
movs
sub
rcr
in
mov
aas
cmp
xchg
mov
or
loope
jb
mov
mov
aas
xchg
inc
imul
sub
out
jnp
jns
repnz
sub
lahf
jbe
inc
cmc
inc
dec
ret
gs
sub
add
test
xchg
push
(bad)
sbb
xor
cmp
pusha
push
aad
xor
jmp
inc
sbb
adc
nop
ins
retf
std
fidivr
push
jl
test
pop
add
xchg
jmp
push
and
cmp
or
pop
scas
or
and
es
repnz
data16
mov
ins
je
std
pop
mov
push
jne
test
cmp
dec
add
add
mov
xchg
adc
ss
hlt
xchg
push
lds
test
jg
push
out
and
std
scas
cmps
mov
or
mov
jge
gs
inc
jmp
xchg
xchg
jb
(bad)
loop
pop
ja
retf
(bad)
stos
fisttp
sahf
sub
shl
rcr
fs
hlt
jmp
inc
jle
ror
fimul
xor
adc
pop
and
in
inc
jmp
cli
rcl
lds
ins
sbb
(bad)
cmps
sbb
lods
lods
fisttp
out
jl
ret
stos
sbb
in
mov
pop
mov
dec
mov
inc
cwde
cmc
rol
xor
shl
lods
lds
sbb
inc
shl
mov
stc
test
push
je
pop
in
fxch
cld
std
pop
xchg
std
int3
in
arpl
dec
cdq
xchg
call
push
or
mov
iret
push
cmp
cmp
fstp
out
mov
es
pop
xchg
add
xchg
(bad)
(bad)
fucomi
aaa
mov
xor
test
retf
xor
or
fistp
lahf
lds
jnp
jbe
mov
retf
xor
loope
hlt
arpl
(bad)
sbb
sti
test
ret
bound
lods
cmp
jp
xor
rcl
fsub
mov
(bad)
fcomp
mov
add
dec
xchg
cli
cmp
adc
pusha
and
out
rcr
ficom
jmp
sahf
out
loopne
stc
mov
sahf
gs
out
int
test
xchg
pop
jg
push
sub
pop
les
pop
pop
xchg
lds
push
ficomp
jecxz
test
jbe
pop
or
mov
inc
push
cs
and
adc
dec
jns
sbb
sub
pushf
lea
sahf
hlt
retf
sub
mov
ret
(bad)
or
add
mov
mov
sub
sub
fiadd
(bad)
shl
push
or
mov
push
test
dec
cmp
outs
push
add
dec
jmp
pushf
loopne
mov
and
add
xlat
std
mov
inc
jne
cmp
test
ret
cmp
xchg
push
test
jmp
mov
push
daa
in
mov
mul
xor
dec
cs
xchg
rol
jmp
loop
push
clc
test
ror
xchg
add
xchg
pop
push
(bad)
xor
in
inc
xor
add
sub
adc
jnp
jle
(bad)
mov
sbb
jmp
(bad)
pop
jle
xchg
inc
cmps
es
in
es
push
jge
cmc
push
repz
jb
mov
cmps
mov
cmp
mov
pop
xor
ret
call
clc
bswap
dec
arpl
hlt
cmp
cs
jno
loop
jge
in
lahf
stos
jns
aad
outs
and
and
leave
dec
xor
xchg
aas
adc
ret
setbe
inc
add
cmp
arpl
mov
pop
jecxz
pushf
lds
mov
mov
jge
xchg
inc
push
jo
sti
and
cmps
mov
mov
jmp
jge
lds
jmp
xchg
cmp
dec
pop
enter
scas
fcmovne
sub
test
inc
retf
repz
sbb
dec
pop
aas
pop
push
jbe
les
push
lods
shr
ret
push
add
dec
cmp
cmp
daa
cmp
cwde
jmp
mov
pop
ins
fisub
mov
(bad)
aaa
cwde
test
cs
into
push
pop
mov
addr16
xchg
jb
inc
pop
movs
sub
retf
pop
into
popa
cwde
lods
clc
dec
rcl
mov
push
cdq
enter
and
pop
inc
xlat
mov
xchg
in
jb
popa
xor
nop
movs
mov
xlat
or
add
into
dec
mov
adc
and
or
bound
sbb
adc
pop
jl
jle
fist
pop
ins
jnp
imul
jns
test
pop
push
ins
loope
fdiv
dec
ds
mov
sub
ror
pop
pop
inc
test
fsubp
push
jecxz
out
adc
bnd
(bad)
xor
ja
clc
lods
fdivr
in
xchg
dec
nop
loop
push
(bad)
repz
dec
sbb
enter
or
cdq
mov
sub
dec
mov
push
pusha
mov
mov
jns
scas
jmp
out
and
mov
cli
dec
int3
sahf
adc
mov
cmp
jbe
push
repz
test
jecxz
jl
push
movs
test
pop
sub
sub
and
or
cmp
push
push
cmp
or
repz
je
and
dec
inc
add
add
loope
or
jns
or
cld
pop
scas
(bad)
jge
out
push
xor
mov
call
inc
movs
js
mov
pop
stos
sbb
test
dec
sub
sub
add
mov
add
pop
sbb
inc
jo
inc
mov
xlat
and
xchg
inc
mov
dec
jmp
movs
and
mov
sub
movs
sbb
cdq
jl
xor
pop
shl
gs
xlat
je
lods
(bad)
dec
popa
retf
lock
push
xor
push
jmp
or
test
xchg
and
mov
test
cmp
ss
mov
sub
cld
mov
xor
test
cmp
push
imul
out
int
sub
sub
scas
sub
fs
xlat
or
jmp
jns
loop
ds
add
scas
popf
xchg
mov
int3
sti
mov
inc
enter
pushf
dec
lds
int
cdq
imul
push
push
fst
inc
push
fnstsw
repz
adc
(bad)
or
out
pop
jg
stc
mov
call
push
popf
fwait
adc
or
sub
(bad)
cmp
and
je
lods
jmp
push
and
stos
cmp
movs
xchg
pop
out
sbb
movs
or
mov
jmp
mov
push
retf
cli
aaa
fisttp
fs
jae
and
dec
inc
and
icebp
ds
dec
aad
dec
(bad)
daa
sub
xor
out
dec
cmp
cmp
mov
dec
xchg
jg
push
(bad)
jl
push
gs
out
sbb
lods
stos
cmps
xor
stc
dec
jb
daa
cs
dec
sub
aad
psraw
jle
out
mov
sub
add
mov
xlat
and
movs
scas
int3
(bad)
(bad)
pop
mov
in
xchg
scas
and
sub
jmp
je
retf
xchg
daa
out
call
push
push
mov
mov
mov
add
sbb
xlat
out
cmp
pop
xchg
fcomp
cs
xor
sub
mov
sub
retf
push
or
stos
cmp
imul
mov
loope
xchg
cld
fisttp
push
push
pushf
jnp
or
(bad)
xchg
mov
in
outs
sub
mov
inc
shr
jbe
xchg
or
and
les
jle
sub
inc
jb
add
retf
sub
stos
sub
mov
mov
mov
(bad)
retf
mov
cmp
inc
ret
(bad)
enter
scas
in
out
or
sar
mov
mov
cmp
(bad)
lock
inc
mov
(bad)
mov
les
or
ror
xor
in
adc
out
push
shr
push
in
call
stos
mov
imul
sahf
scas
jl
dec
mov
mov
mov
std
mov
or
xor
mov
sti
(bad)
call
add
sub
enter
push
jne
mov
push
mov
xor
sti
mov
sahf
inc
retf
and
stos
mov
pop
ret
mov
fadd
cmpxchg
outs
inc
in
pushf
loope
(bad)
jmp
mov
mov
and
aas
sti
or
dec
xor
test
lods
mov
aad
sahf
test
xchg
cdq
outs
shl
sar
inc
push
and
cmps
(bad)
lock
jb
mov
adc
fld
jle
hlt
push
jl
sbb
pop
mov
in
and
mov
ja
adc
or
fmul
dec
push
mov
mov
pop
repz
jmp
aad
mov
xchg
xor
repnz
(bad)
sub
xchg
xor
(bad)
out
add
sub
push
sar
pushf
and
push
adc
cmp
cmp
dec
or
ja
push
xchg
(bad)
xchg
inc
inc
stos
jmp
scas
arpl
pusha
imul
fistp
xchg
(bad)
push
out
jns
ds
data16
test
test
push
xchg
inc
lods
jmp
jp
outs
lds
imul
or
cmc
sbb
sbb
jae
leave
xchg
xor
pop
clc
cmps
inc
sub
mov
js
mov
cli
das
lea
in
lods
ret
movs
aaa
in
pop
inc
cmp
add
lahf
test
dec
out
mov
pop
call
mov
xchg
adc
into
mov
mov
retf
cmps
fld
push
push
push
mov
mov
push
mov
pmullw
push
pop
call
dec
sbb
inc
adc
jnp
mov
cmps
sbb
mov
push
es
xchg
mov
xchg
outs
mov
aas
mov
cmp
sub
pop
out
pop
cmc
push
cs
mov
cmp
in
in
pusha
pop
loope
sti
mov
jmp
pushf
xchg
pusha
int3
ins
shl
call
and
lock
push
mov
iret
cdq
std
pop
adc
xchg
cdq
stos
in
pop
sti
call
mov
inc
stc
lahf
xchg
bound
lods
cmp
jb
imul
jmp
sbb
outs
out
or
fs
mov
push
sub
out
rcr
pop
sub
xchg
push
xchg
nop
stos
add
lock
xor
mov
cli
push
pop
arpl
in
bound
sar
pop
inc
push
mov
dec
mov
outs
loop
fcom
arpl
lock
sbb
jl
and
enter
test
sub
iret
retf
jge
ss
xor
sbb
cs
stos
mov
or
ss
rol
mov
jmp
dec
jmp
cld
xor
jp
and
xchg
push
retf
call
outs
sbb
sub
mov
inc
or
adc
mov
stc
loopne
push
mov
and
sti
stos
ds
mov
add
pusha
loop
push
push
sbb
es
movs
out
dec
and
mov
mov
ss
fwait
outs
retf
pop
mov
cs
jmp
out
dec
(bad)
mov
sub
pop
mov
mov
outs
(bad)
xchg
cs
push
mov
out
lods
hlt
mov
sub
mov
jp
fst
mov
(bad)
and
call
rcl
cmps
rcl
mov
repz
adc
cmp
ja
lahf
sub
test
lods
jge
or
push
pusha
xchg
mov
mul
cmp
movs
out
aaa
mov
dec
mov
stc
mov
mov
ret
scas
push
into
dec
(bad)
hlt
mov
adc
adc
dec
jmp
pop
addr16
hlt
adc
call
ficom
arpl
adc
xor
cmps
inc
into
push
test
cli
adc
fistp
mov
ficomp
jmp
jns
popf
mov
(bad)
sbb
ret
(bad)
cli
call
mov
clc
push
jnp
iretw
adc
jae
or
cld
ss
xchg
repnz
mov
test
inc
out
pop
inc
bound
je
dec
jl
lods
sahf
sbb
fsubrp
mov
push
push
in
jmp
mov
sub
repz
mov
out
xchg
in
inc
out
push
icebp
jnp
jns
dec
clc
push
inc
rcr
dec
ror
movs
adc
les
(bad)
fsub
cwde
das
aam
sbb
in
dec
dec
and
in
and
cwde
in
xchg
out
adc
jno
push
data16
lock
ss
push
push
xor
(bad)
aad
xor
jnp
and
iret
pop
jecxz
imul
cld
in
lods
cmp
fwait
and
aam
imul
lea
and
(bad)
xlat
es
(bad)
icebp
outs
loopne
mov
rol
aam
fist
cld
xchg
or
jns
outs
adc
and
jp
mov
add
push
jne
push
and
mov
mov
mov
mov
out
call
ret
sub
sub
push
cmp
(bad)
repnz
jge
jp
jle
pop
cdq
pop
sbb
push
popa
mov
cld
xchg
sbb
jae
jo
add
std
or
sbb
les
jg
mov
jo
xor
repz
cmps
and
adc
das
popa
loop
jg
mov
jge
xchg
add
xlat
add
jge
cmp
push
movs
neg
and
outs
fdivr
sub
stos
pop
add
mov
pop
test
or
and
fidiv
loope
sbb
push
fcmove
pop
mov
sahf
inc
pop
sbb
ficomp
mov
inc
or
xchg
call
loopne
iret
fdiv
fcom
add
dec
xchg
shr
ins
(bad)
repnz
inc
sub
or
lahf
leave
or
push
test
dec
xchg
test
pop
call
ins
repnz
pop
sbb
mov
mov
xchg
or
imul
inc
lock
(bad)
retf
out
arpl
pop
bound
lods
jmp
push
(bad)
jl
fs
and
sub
push
(bad)
call
(bad)
pop
icebp
pop
jp
aaa
adc
(bad)
pop
outs
das
and
mov
mov
and
xchg
adc
pop
jl
mov
retf
or
enter
call
js
in
or
jecxz
dec
or
add
dec
mov
push
mov
ficom
sbb
cld
cmc
xchg
mov
ror
popf
adc
and
(bad)
repz
div
outs
dec
fsubr
sub
jnp
mul
add
jb
pop
push
push
and
jle
adc
push
jmp
retf
or
or
jmp
mov
daa
mov
fdivr
xchg
arpl
clc
std
ins
pop
push
fstp
call
je
loope
jg
sbb
push
inc
ret
xchg
stos
inc
in
inc
add
out
mov
or
in
mov
iret
dec
je
or
pop
jno
call
cmpps
clc
xchg
sbb
pmulhw
sar
xchg
add
sbb
scas
test
jo
rol
mov
test
mul
push
jb
mov
xor
inc
call
dec
dec
(bad)
mov
cmp
fisubr
cdq
js
stos
out
arpl
sbb
xchg
sahf
mov
jne
xchg
inc
stos
lock
mov
in
data16
out
fild
sahf
dec
arpl
pop
jno
inc
jbe
stc
jne
ins
mov
ins
jb
out
hlt
xor
push
ja
pop
bound
daa
sar
fstp
lock
test
and
jnp
mov
out
and
inc
leave
fiadd
iret
sub
adc
fadd
int3
push
push
imul
jg
clc
sub
xchg
add
jb
test
fwait
test
add
xor
daa
xchg
icebp
mov
sbb
sbb
in
enter
inc
nop
add
lods
lock
jae
jb
pop
add
ficom
bound
xlat
rcr
adc
in
aaa
xchg
cli
inc
push
xchg
sbb
mov
xor
mov
or
pop
shl
pop
and
jo
add
dec
addr16
pop
cmc
adc
retf
pop
test
dec
sub
jge
xchg
sbb
cmps
fdiv
cli
mov
mov
add
cli
leave
lds
mov
pushf
xchg
loope
mov
mov
in
mov
pop
push
sub
imul
sbb
std
pusha
les
mov
test
cmps
icebp
(bad)
cmp
iret
jns
pop
out
add
pop
pop
xadd
add
pop
xchg
mov
xchg
dec
sbb
in
or
pop
add
mov
mov
mov
jns
and
retf
cmp
pushf
mov
nop
inc
dec
and
cmp
xor
cmps
mov
add
nop
dec
scas
cmc
adc
push
data16
cs
stc
idiv
hlt
aam
xchg
push
mov
int3
mov
(bad)
push
mov
sub
xor
pop
ja
dec
retf
xchg
pop
(bad)
pop
leave
rcr
(bad)
xchg
and
int
(bad)
call
cmp
inc
pusha
inc
je
cmps
dec
inc
xchg
mov
push
ficom
lea
cmp
out
fisubr
sbb
rol
adc
and
add
lods
cmps
mov
dec
repz
es
ret
jmp
xchg
mov
mov
les
xor
or
ficom
push
fs
pop
pop
bound
push
sub
xchg
ins
in
add
rol
mov
push
outs
mov
ds
inc
rol
pop
jno
inc
lahf
out
jl
inc
dec
mov
push
or
rcl
aaa
dec
and
pop
fsubr
aam
sub
sbb
div
cli
icebp
or
cmps
pop
cwde
pushf
(bad)
xchg
sti
xchg
push
movs
(bad)
cmp
add
sub
mov
mov
mov
bound
movs
mov
fst
add
aad
jbe
sbb
pcmpeqb
xor
mov
or
mov
mov
ja
retf
test
stos
loopne
sahf
scas
call
arpl
mov
shl
xor
jns
mov
xor
mov
je
jl
sbb
nop
push
inc
xor
rol
adc
push
mov
pusha
inc
mov
(bad)
adc
ins
push
jge
fistp
int
xor
xor
mov
jl
mov
cmp
dec
mov
adc
addr16
sub
sar
aas
mov
mov
ins
ficomp
mov
imul
cmp
enter
dec
xlat
inc
pop
leave
and
retf
mov
ret
adc
jle
pushf
mov
mov
movs
test
and
(bad)
ss
repnz
fcom
stc
adc
mov
xor
popf
pop
add
retf
call
retf
mov
repz
and
or
scas
xor
inc
shl
or
scas
stc
out
rcl
mov
mov
lahf
sbb
push
and
mov
add
movs
aam
rcl
retf
cmp
and
je
mov
jae
mov
or
ffreep
icebp
xchg
fldcw
adc
jecxz
out
loop
enter
mov
sar
test
loope
mov
cdq
xchg
int
je
loopne
inc
pushf
popf
dec
mov
iret
mov
cmove
inc
lods
jmp
adc
or
sbb
push
jge
inc
mov
data16
cmps
les
fcomp
mov
movs
sti
into
jp
pop
scas
stc
cmp
jle
nop
push
or
xor
cs
sub
dec
mov
xchg
movzx
mov
dec
pushf
mov
iret
xchg
adc
sbb
test
fs
fisub
xlat
stos
adc
xor
and
mov
movs
inc
stc
mov
cmps
push
aad
and
loope
mov
xchg
sub
ror
mov
hlt
into
pop
call
test
int
push
inc
repnz
int3
xlat
jecxz
mov
pushf
dec
push
xchg
mov
xor
mov
adc
mov
sbb
cli
sbb
movlps
xor
pop
inc
dec
mov
out
dec
clc
into
imul
mov
imul
sti
int3
add
pop
sbb
int3
or
lahf
stc
jecxz
(bad)
push
mov
mov
push
fadd
adc
in
ficomp
inc
ds
dec
cld
inc
pop
dec
and
adc
inc
cs
jge
adc
and
jecxz
sbb
sub
push
cmp
(bad)
stc
and
inc
inc
mov
sbb
imul
sub
add
aam
mov
xchg
xchg
add
addr16
shr
cmp
ja
adc
push
mov
jbe
out
(bad)
jecxz
mov
in
(bad)
stos
rcr
das
cs
scas
cmp
ss
sbb
mov
scas
lock
and
jo
xor
jmp
sub
or
addr16
mov
sbb
ds
dec
jo
sub
sar
ss
dec
xor
stos
mov
nop
and
mov
into
and
xchg
xor
lahf
xor
jbe
popf
(bad)
call
outs
iret
dec
out
xor
pop
jbe
in
ss
outs
inc
sbb
adc
push
inc
int3
pop
movs
rcr
xchg
daa
ins
aad
and
daa
shr
adc
and
pop
push
fnsave
ins
(bad)
cdq
or
push
loopne
cdq
mov
and
dec
dec
mov
(bad)
cmp
pusha
pop
in
push
lock
cmps
dec
retf
mov
push
xchg
ror
jl
mov
scas
sbb
push
cs
mov
movs
cmp
jne
sub
sub
fsubr
(bad)
mov
cmp
ss
les
inc
mov
push
gs
cmp
out
adc
xor
lods
std
(bad)
cdq
adc
jg
mov
jo
or
cld
push
push
jb
adc
repz
in
jecxz
adc
cld
xchg
jbe
inc
push
imul
loopne
cmp
adc
lds
ins
pushf
cmp
dec
sti
out
scas
aam
add
sahf
xlat
in
outs
ds
fucomp
mov
push
out
xchg
jns
int3
loope
xor
movs
sahf
mov
xor
jnp
pop
inc
mov
jne
and
inc
repnz
jmp
jg
int
repz
xor
test
scas
ins
scas
mov
lock
jecxz
test
jle
adc
(bad)
xor
mov
sub
or
loop
jg
or
movs
dec
lods
sbb
mov
jg
sub
dec
push
add
push
push
fs
int
mov
fidivr
(bad)
lock
push
out
jbe
fmul
fdivr
pop
and
inc
fldz
bound
test
in
pop
in
sbb
add
xchg
dec
test
ja
test
sbb
sbb
into
sub
sub
mov
dec
mov
out
imul
mov
fbstp
dec
xlat
and
and
jp
test
dec
jnp
sub
mov
rcl
clc
mov
movq
cmps
lds
add
jge
push
imul
or
call
jno
pusha
mov
fcomp
xor
iret
rcl
pushf
push
jmp
add
pop
mov
cli
repnz
and
add
mov
and
aad
jae
pusha
mov
cmp
xchg
shl
ror
sub
sti
ror
dec
dec
loop
jp
mov
movs
and
push
std
data16
xlat
and
jp
dec
leave
leave
adc
jmp
aas
mov
lock
outs
push
iret
scas
mov
call
push
ja
cmps
or
adc
dec
or
sbb
adc
xchg
dec
fnsave
mov
adc
jo
xchg
push
call
push
push
dec
aas
test
sub
jmp
xchg
loopne
mov
pop
mov
lea
xchg
xchg
pushf
add
aad
jne
inc
mov
scas
and
fdivr
daa
cmc
dec
repz
cmp
jbe
jmp
scas
(bad)
outs
inc
repnz
movs
nop
jbe
loop
jno
adc
mov
sar
das
pop
adc
mov
mov
pushf
jge
inc
cmp
xor
sbb
mov
in
mov
fnstsw
xlat
nop
sbb
pop
xchg
inc
dec
enter
scas
fwait
xor
mov
or
or
pop
mov
leave
out
xchg
retf
or
mov
adc
aam
add
mov
es
pushw
in
fs
push
ror
pop
test
cdq
rcr
mov
cmp
out
mov
mov
pop
mov
ins
jp
mov
push
dec
jle
lods
out
inc
outs
push
xchg
(bad)
push
fmul
inc
push
ds
(bad)
or
push
jmp
sub
inc
fcom
mov
fwait
adc
mov
xor
mov
add
adc
mov
xor
mov
movs
inc
in
lds
dec
fwait
lahf
and
xor
sti
mov
int
loopne
sbb
sbb
xchg
add
das
sbb
int3
ret
cld
test
pop
cwde
ret
inc
mov
jns
sbb
mov
sti
pop
mov
and
fisub
aas
mov
jae
jmp
adc
push
cmp
or
std
test
cmp
(bad)
aam
(bad)
rcr
or
scas
int
add
std
mov
ds
daa
cmp
jno
sub
dec
bound
and
sub
xchg
ss
outs
jge
gs
xor
ja
and
mov
push
shl
or
push
call
pop
xchg
lahf
in
push
rol
(bad)
ds
xchg
or
fcmove
pop
(bad)
retf
add
loop
ja
push
cmp
loope
popa
outs
int3
pusha
cwde
fidiv
mov
and
lea
mov
das
cmp
cmp
mov
push
(bad)
fldenv
dec
inc
dec
xor
and
sbb
cmp
(bad)
xor
xlat
jnp
mov
aad
test
sub
mov
jp
pop
mov
jb
fst
mov
arpl
push
pop
clc
test
std
arpl
xlat
xchg
fisubr
adc
or
div
jae
xor
cmp
leave
xor
mov
or
aaa
rol
scas
loopne
mov
xchg
jmp
scas
push
sbb
mov
xor
mov
scas
sub
int3
ins
popa
xor
test
(bad)
jecxz
or
pop
cli
inc
dec
pusha
repz
repnz
pop
outs
outs
sar
pop
out
sbb
inc
loopne
mov
dec
shl
add
push
adc
dec
stos
mov
sbb
gs
push
jle
lds
sub
or
or
mov
mov
and
push
pop
jnp
movs
pushf
pushf
cmps
sar
lods
xchg
aam
arpl
and
sbb
lods
int3
adc
xchg
dec
scas
inc
sbb
sub
retf
xlat
pop
push
inc
fimul
cwde
dec
or
lahf
(bad)
xchg
fistp
lock
jne
mov
fadd
shl
and
loop
jb
jb
and
lahf
mov
and
dec
scas
cs
dec
scas
dec
jns
adc
in
inc
stos
fsub
test
lds
repnz
or
dec
jns
xchg
inc
in
stos
movs
out
jae
cmp
jbe
add
xchg
cdq
cmps
movs
mov
mov
inc
add
(bad)
and
pop
jno
adc
mov
cmc
lea
mov
scas
lds
test
push
mov
cmc
(bad)
call
xchg
stc
cmps
sub
inc
cmp
and
xchg
jnp
add
adc
mov
cdq
mov
sbb
lods
mov
sub
into
pop
addr16
idiv
pusha
cmps
cdq
and
inc
mov
pop
inc
inc
shl
sbb
in
inc
sbb
xchg
sbb
movs
int3
mov
shl
sbb
and
jb
movs
cmps
loop
push
aam
and
call
xor
push
aad
jmp
cmp
or
ret
stc
push
lods
fist
or
jp
aad
loopne
cli
sbb
push
mov
iret
fstp
stos
out
or
fwait
scas
gs
out
cmp
(bad)
fist
lods
das
mov
push
push
dec
ja
and
cmps
mov
int3
mov
shl
push
mov
and
ret
cmp
stos
arpl
mov
shl
fild
jo
mov
xchg
(bad)
jge
stos
jg
and
sbb
and
icebp
in
aas
push
test
in
or
mov
pop
or
(bad)
ret
clc
cs
data16
(bad)
std
sbb
jmp
fdivr
jbe
mov
jg
loopne
or
out
out
xchg
out
in
mov
ins
mov
popf
scas
sub
inc
aas
mov
repnz
pop
out
push
stc
int
mov
sub
push
push
adc
jnp
and
outs
repnz
push
dec
int3
int
jge
mov
xchg
sbb
mov
cmp
call
in
xacquire
test
nop
dec
xor
mov
add
out
mov
fist
inc
mov
push
int3
fld
hlt
cmp
xchg
hlt
dec
rcl
pop
inc
add
or
(bad)
jecxz
sbb
push
inc
hlt
pop
out
pop
imul
jl
xchg
jl
lahf
add
xor
or
push
sahf
lods
jg
jg
fwait
lods
xchg
mov
fsub
ret
shl
push
sub
cmp
fucomp
and
mov
(bad)
jnp
xlat
lock
push
xchg
imul
loope
loop
cmp
std
and
addr16
rcr
mov
repz
mov
adc
stos
mov
in
ret
mov
mov
cmp
(bad)
stos
stc
pop
in
pcmpgtw
dec
mul
sbb
sub
ins
mov
fnstsw
retf
sub
xchg
or
cmp
jp
mov
aam
out
shl
scas
cmp
mov
jno
sub
test
mov
aam
jnp
add
call
xor
jae
dec
adc
add
inc
(bad)
sbb
mov
xor
cmp
inc
xor
in
xchg
mov
outs
xchg
inc
mov
or
mov
imul
out
xor
jnp
pop
mov
xchg
lea
nop
and
push
rcl
repz
mov
call
pop
pop
sub
xchg
aas
js
popa
shl
shl
mov
ds
arpl
and
cmp
pop
bound
dec
xchg
sahf
jle
cmp
pushf
jne
mov
jle
jle
das
popa
xchg
in
rcl
xor
gs
dec
sub
push
data16
(bad)
fwait
mov
fnstsw
mov
jb
sbb
jmp
mov
dec
test
inc
jbe
retf
and
js
aam
addr16
and
in
jge
out
mov
cmp
mov
mov
mov
cli
pop
mov
pop
aad
(bad)
je
in
xchg
fldenv
mov
jb
push
lock
or
and
jmp
aaa
cld
jae
mov
mov
or
pop
cmp
or
shr
mov
cmp
int
sbb
aam
mov
cmp
loope
inc
aaa
jecxz
jb
repz
pop
das
(bad)
jmp
ja
mov
jae
out
or
pop
xor
xor
out
push
sbb
mov
mov
cmp
cmc
add
es
dec
outs
mov
test
fstp
mov
icebp
adc
add
popf
arpl
inc
pop
sbb
pop
lock
inc
sar
into
push
movs
sti
je
fcom
cmp
inc
mov
jnp
inc
mov
aam
dec
outs
mov
mov
pop
pop
xchg
cli
add
xchg
mov
sub
(bad)
add
xlat
adc
sub
xor
dec
imul
mov
adc
daa
ss
inc
mov
mov
mov
inc
inc
mov
shl
inc
sbb
mov
pop
push
sbb
xor
dec
mov
and
xor
ins
(bad)
ins
jae
mov
and
dec
xchg
cli
ret
gs
inc
adc
push
xchg
mov
test
jle
dec
jle
pop
data16
push
jmp
mov
add
in
mov
int
ficom
sub
sub
(bad)
push
xchg
pop
or
cvtdq2ps
mov
jmp
push
fnstsw
shl
xchg
(bad)
lods
inc
mov
adc
lea
cmovno
adc
cli
rep
aas
out
loope
cmp
sub
mov
cmps
xlat
call
repnz
test
test
outs
lea
or
cmp
leave
pop
retf
pop
aas
into
xor
pop
outs
mov
mov
int
imul
out
cmps
int
push
or
xor
nop
out
js
push
movs
inc
add
inc
and
and
sahf
push
adc
add
dec
push
enter
ja
fbstp
mov
sub
loope
xor
mov
je
add
retf
sti
out
aam
out
add
shr
adc
loop
mov
jo
sbb
shr
inc
scas
out
mov
ret
in
jnp
fcom
jo
mov
fsubr
mov
les
pop
sbb
ret
adc
ror
cmps
add
mov
mov
retf
in
dec
icebp
mov
dec
ss
jbe
lds
(bad)
or
jle
cmp
inc
mov
test
call
pop
fiadd
dec
popa
(bad)
cmp
mov
add
popa
inc
loope
call
mov
aam
xchg
jg
mov
aad
(bad)
mov
mov
cmp
das
aaa
sub
mov
sbb
retf
jne
inc
lods
push
inc
movs
cmc
sbb
push
not
cmp
fidivr
out
push
push
xchg
movs
pop
and
pop
popa
aad
(bad)
in
xor
in
mov
inc
(bad)
pop
inc
outs
fs
ds
and
push
cmps
(bad)
xchg
cmp
inc
loope
leave
retf
sub
retf
mov
sub
and
mov
nop
push
ret
fs
add
inc
push
mov
push
and
or
ret
nop
in
fiadd
mov
sti
xchg
mov
pop
test
bound
adc
mov
sub
jge
add
mov
dec
cmps
sbb
xchg
dec
ins
sub
ja
xchg
ret
xor
xchg
and
rol
jnp
and
addr16
into
out
mov
jns
scas
scas
rcl
add
ret
inc
outs
cmps
cmps
in
inc
jmp
out
neg
(bad)
xchg
inc
jge
ror
sub
nop
stc
cdq
mov
inc
dec
int
lods
and
cdq
test
cli
in
scas
xlat
pop
adc
push
in
cld
out
cli
outs
jg
lods
or
icebp
js
jge
out
daa
cmps
sar
cmps
and
sub
jne
popf
xchg
div
sti
in
imul
outs
pop
div
xchg
lock
out
jns
jne
ret
inc
add
xor
xchg
clc
xchg
sub
rol
or
xlat
push
fistp
cmps
add
mov
sbb
and
pop
push
inc
jno
movs
xchg
cmp
je
jg
cmc
sbb
add
(bad)
fild
push
shr
hlt
and
mov
mov
pop
adc
inc
pusha
cmp
cld
pop
push
ret
add
mov
fwait
jmp
xor
pop
jg
dec
sti
mov
inc
fild
or
imul
cmp
fnstsw
sub
add
inc
test
ja
push
into
lea
aas
pop
lods
inc
out
mov
cli
mov
repz
inc
inc
test
imul
(bad)
sbb
inc
add
ss
ja
lahf
inc
lds
pop
ror
movs
sbb
daa
pop
inc
(bad)
das
std
enter
xchg
add
xor
xchg
fwait
sbb
pop
and
adc
test
and
arpl
pushf
mov
jge
les
clc
cmp
fstp
imul
add
dec
cmps
sub
imul
xchg
add
inc
scas
cmp
pop
ss
outs
adc
mov
lods
fcmovne
aad
add
test
movs
jp
leave
inc
lods
push
mov
scas
pop
inc
sub
or
test
xlat
and
sub
cmp
clc
mov
lods
mov
stos
cmc
cmp
xchg
in
push
push
adc
call
push
aas
and
inc
mov
sub
add
push
mov
pop
adc
mov
movs
xchg
shl
enter
adc
rol
push
adc
mov
pop
fwait
add
daa
push
dec
leave
mov
stos
or
and
mov
sub
test
scas
inc
adc
stc
arpl
xchg
push
pop
inc
jb
fld
iret
nop
cmp
shl
jns
jge
cmp
stos
pop
fild
aam
mov
nop
int3
mov
ret
iret
les
std
cmp
lahf
jg
and
ds
jmp
inc
or
cmps
mov
mov
or
ror
sub
jnp
mov
xor
cld
outs
dec
adc
adc
cmc
jl
mov
call
adc
popa
pop
mov
push
stos
sub
stc
dec
cmp
mov
ret
stc
repz
sbb
inc
mov
or
retf
mov
jle
stc
pop
cli
out
or
fild
pop
dec
jns
or
mov
cmp
jmp
pop
xchg
sar
sub
push
in
or
mov
adc
sbb
inc
xchg
pushf
lea
jnp
in
adc
mov
stos
inc
std
scas
pop
sbb
test
cli
hlt
adc
mov
in
jg
das
xchg
jg
not
dec
pop
or
(bad)
idiv
int3
stos
call
fbstp
pusha
cmc
sbb
enter
cld
test
pop
pusha
out
jmp
pop
sub
inc
in
pop
in
ja
out
fcom
sbb
cwde
xchg
js
mov
push
xchg
mov
cmp
jg
gs
push
sub
inc
mov
push
dec
cli
pop
sub
push
push
and
mov
les
icebp
xchg
pusha
inc
xchg
das
mov
repnz
push
inc
lock
mov
mov
and
aam
mov
inc
lea
push
add
mov
fistp
push
dec
jbe
sbb
push
dec
mov
test
scas
cli
daa
lods
mov
fwait
jb
pop
je
fld
fwait
pop
in
outs
fs
iret
mul
inc
arpl
add
pop
jmp
in
jle
sub
add
pop
dec
or
pop
mov
nop
gs
mov
push
std
cmps
or
scas
test
mov
xor
push
xlat
test
shl
dec
xchg
inc
adc
mov
nop
adc
dec
jecxz
xchg
mov
js
es
mov
loope
dec
xchg
and
mov
lea
stos
fcom
ins
pop
xchg
jbe
push
mov
or
retf
lds
mov
dec
and
jg
mov
inc
jns
cwde
adc
out
pop
xchg
clc
js
aas
mov
out
xchg
xor
bound
arpl
stos
fld
cmps
jmp
fist
jbe
pop
jbe
or
in
mov
push
xchg
lods
bound
bound
loope
add
pop
dec
dec
fwait
cmps
add
cmp
or
add
pop
add
xor
jmp
mov
sbb
jnp
push
lahf
fimul
pop
(bad)
(bad)
sbb
jno
xchg
xlat
cmps
xchg
mov
lahf
xlat
test
jno
fld
add
push
int3
call
inc
sub
mov
push
les
add
adc
mov
test
int3
adc
shl
call
sbb
fcom
mov
dec
inc
jmp
jnp
mov
aas
jmp
lods
dec
loop
mov
dec
mov
adc
mov
in
fcomp
sub
dec
loopne
call
mov
push
(bad)
push
iret
inc
cmp
loopne
rcl
jb
mov
jns
lods
inc
(bad)
inc
sub
mov
mov
enter
pusha
jge
test
mov
(bad)
(bad)
sti
enter
inc
xchg
xor
push
add
and
test
add
std
arpl
pop
es
popa
hlt
nop
daa
mov
je
push
add
sti
test
ss
inc
jg
cmovno
shr
xor
adc
fdivr
and
add
rol
in
cmc
in
xchg
inc
call
lock
jp
xor
add
sub
mov
dec
jecxz
cmpxchg
dec
int3
push
(bad)
pop
mov
popf
outs
lods
std
sbb
and
xchg
jmp
and
dec
push
rcr
pop
fcmovb
arpl
aas
mov
aad
cmp
xchg
into
push
rol
cld
jbe
ret
mov
xchg
sbb
mov
fcomip
jnp
and
popf
fidivr
cmp
adc
popf
push
push
aas
jecxz
adc
ja
sar
push
cdq
dec
pop
call
add
daa
dec
adc
clc
aam
cmp
pop
fucomp
adc
movs
jnp
not
sub
popf
fld
ins
jo
adc
and
fs
jae
xchg
or
inc
data16
pushf
inc
jnp
xchg
jmp
jmp
(bad)
cmp
(bad)
sti
xor
clc
jb
dec
cli
out
icebp
push
sub
test
cwde
xchg
mov
out
dec
add
loop
out
or
jae
imul
imul
test
inc
xlat
dec
lock
gs
call
out
clc
push
cmps
retf
fld
leave
cmp
iret
push
fadd
enter
sub
gs
movs
dec
xchg
arpl
sbb
and
and
and
fisub
xlat
cli
xlat
jge
mov
stos
xchg
jnp
mov
sbb
mov
dec
sbb
(bad)
(bad)
jb
in
and
js
add
inc
jmp
enter
xlat
pop
jae
mov
lods
cmc
xchg
jmp
rcr
sbb
jmp
mov
push
pop
pop
fiadd
leave
ret
jl
xor
fld
mov
movzx
dec
sbb
div
mov
clc
sahf
aaa
push
add
int3
sbb
mov
jne
out
xchg
inc
add
sub
add
movs
mov
mov
fisttp
add
mov
and
pop
les
mov
into
inc
data16
sbb
push
add
push
xor
aam
adc
mov
addr16
cli
inc
jl
add
cmp
cmp
pop
mov
test
jmp
sti
push
lock
fwait
mov
int
call
fcmovne
jno
aad
jp
fs
arpl
or
mov
xchg
inc
mov
xchg
xchg
push
mov
les
pop
shl
sbb
ins
pusha
pop
in
pop
pop
push
xchg
dec
add
lea
and
int3
loop
push
mov
sub
mov
sbb
kmovw
push
or
and
inc
and
pop
mov
imul
jmp
das
rcr
adc
ss
in
push
clc
ja
jecxz
scas
pop
fwait
cwde
dec
xor
jns
lods
jmp
push
hlt
sub
(bad)
dec
cmp
daa
lds
jns
push
mov
int3
gs
cs
les
add
daa
stc
jle
ins
out
cmps
cs
pusha
fadd
xchg
aas
push
or
fidivr
out
pusha
cmp
xchg
xor
or
sub
inc
or
fdivr
mov
movs
mov
mov
lea
test
xchg
pop
test
jbe
sbb
bound
mov
out
mov
inc
mov
xor
inc
ficom
cdq
fst
cmp
imul
js
fsubr
pop
mov
or
and
jnp
cmps
add
(bad)
out
or
pop
aad
fs
leave
cld
sub
push
(bad)
repz
mov
jmp
ds
sub
or
mov
pop
jmp
sbb
cmc
into
sbb
fst
add
push
test
xchg
and
cwde
jle
push
sti
bound
jne
sbb
in
(bad)
sar
add
mov
sahf
push
and
(bad)
and
addr16
sbb
sbb
push
and
cmc
mov
xor
test
movs
sub
mov
xor
sahf
xor
pusha
icebp
mov
fcomp
inc
hlt
pop
ss
lods
retf
sub
jne
mov
ret
fisub
mov
mov
fidivr
push
fsub
pop
test
out
dec
repz
ss
and
adc
into
mov
aas
push
xchg
cli
sbb
mov
adc
pop
rol
test
xchg
test
mov
and
xchg
mov
je
push
lods
das
mov
jne
jge
dec
xchg
add
xchg
cmps
popa
sub
cdq
mov
mov
ja
cmp
lock
jb
fidivr
push
push
imul
and
(bad)
mov
test
cmc
retf
mov
imul
int
mov
fnstcw
rcr
pop
dec
ror
jmp
outs
(bad)
jge
mov
jb
sbb
cld
mov
sbb
or
xor
cmp
repz
nop
sbb
aad
fidiv
xor
jno
mov
pop
adc
pop
shl
rol
xchg
hlt
xor
rcl
mov
aad
(bad)
les
pop
push
in
retf
shl
out
fmul
pop
and
adc
in
pop
dec
movsx
jmp
dec
fsubr
mov
clc
xor
sub
neg
in
xor
add
sahf
or
ins
ins
aaa
lods
jno
xchg
(bad)
aam
inc
not
or
xchg
cmp
mov
sub
enter
cs
rcr
add
sub
test
dec
or
fmul
ret
push
les
fmul
adc
out
stos
mov
or
xchg
enter
(bad)
scas
sub
lea
adc
ds
movs
jg
call
inc
fwait
sbb
mov
mov
jg
pop
scas
hlt
mov
jo
aam
fcom
or
mov
sbb
xchg
aas
jno
pop
push
cs
inc
test
js
ja
lahf
outs
add
outs
std
ss
gs
pop
cmp
sbb
jle
xchg
stc
retf
pop
in
mov
inc
mov
(bad)
aas
ficom
leave
out
cs
je
xor
pusha
push
sbb
xchg
adc
ds
xchg
je
pusha
mov
std
mov
adc
fs
adc
aas
inc
push
(bad)
sbb
and
mov
add
xchg
adc
pop
call
lock
ins
pop
ffreep
or
fdiv
push
mov
test
iret
jae
mov
cmc
push
mov
fs
test
rcr
xchg
push
loopne
popa
cld
iret
xchg
stos
cmps
jl
(bad)
int3
mov
lahf
add
sub
cmp
lea
pop
icebp
dec
xlat
popa
and
and
mov
cmp
adc
sbb
(bad)
and
cmp
inc
ror
movs
mov
mov
ss
xor
cmp
fidivr
pop
push
pop
cmp
fucom
mov
adc
xchg
lock
adc
call
lahf
test
mov
add
outs
rsm
shr
leave
cmp
sbb
cmps
mov
clc
iret
cmp
xchg
pop
jp
xor
mov
in
push
inc
jno
ins
push
sub
sahf
jo
adc
push
mov
mov
jg
push
pop
imul
sbb
call
mov
cli
cs
js
jmp
adc
fst
xchg
jae
cmp
lea
pop
dec
es
xor
sub
das
mov
push
xor
pop
or
aam
cli
push
adc
repz
mov
cmp
jb
test
bound
test
dec
sub
mov
arpl
int3
add
ficom
fst
test
cwde
jge
(bad)
test
clc
cli
ret
pop
cdq
adc
adc
mov
sub
pop
mov
push
lahf
fcom
dec
arpl
mov
push
inc
xchg
addr16
(bad)
loopne
mov
cmps
jo
mov
dec
call
jnp
jns
jg
mov
xchg
mov
jo
pop
xbegin
sar
cwde
sub
ins
adc
and
test
sub
or
xchg
pushf
jo
sub
or
mov
stos
imul
(bad)
clc
lock
call
in
mov
sub
addr16
sti
into
je
cmp
inc
jbe
(bad)
call
and
aam
xchg
cmps
dec
jp
sbb
(bad)
bound
faddp
(bad)
out
scas
sbb
jbe
sub
aaa
sbb
mov
add
mov
fnclex
sub
mov
fucomi
xchg
pop
mov
stos
or
xor
inc
ds
mov
mov
movs
(bad)
pop
sbb
cmp
(bad)
cli
add
sti
imul
xor
adc
dec
out
mov
xchg
pop
es
cmp
daa
cs
out
jb
loope
jns
leave
std
outs
mov
in
jle
pop
movs
scas
mov
in
lods
outs
or
push
sti
pushf
add
xchg
xchg
dec
sbb
(bad)
pop
jae
push
mov
pop
fst
add
sbb
outs
retf
or
cmps
sbb
or
jae
out
repz
xchg
sbb
cmp
enter
pop
and
and
pushf
pop
xor
inc
and
add
gs
mov
add
and
daa
jmp
scas
mov
out
dec
inc
mov
icebp
mov
ret
dec
add
jb
fadd
dec
cmp
dec
clc
add
cmp
inc
aaa
jecxz
mov
jge
sub
imul
cmp
ds
fidivr
mov
xor
scas
ror
pushf
retf
pop
xor
xchg
lock
mul
stc
lahf
inc
pop
scas
outs
mov
call
ins
int
aaa
std
pop
ror
test
add
push
push
ja
xor
add
aaa
fnstsw
jg
adc
jne
inc
jp
and
mov
jg
and
outs
cli
push
fcomp
pop
data16
pop
mov
or
addr16
pop
int3
data16
dec
das
add
in
adc
sub
rcl
dec
dec
or
xor
xchg
push
mov
mul
aas
dec
not
jecxz
nop
or
push
(bad)
lods
enter
or
mov
and
loope
fstp
out
pop
sti
cmps
xchg
push
xor
xor
jge
push
test
pop
and
xlat
pop
data16
sub
inc
xchg
fidivr
jg
lahf
sub
frstor
scas
test
pop
mov
adc
rcr
pop
cmp
cmps
sub
jb
cmp
mov
lea
lahf
fcomp
pushf
fcom
aaa
lods
sbb
and
out
mov
inc
call
push
adc
sub
ror
mov
mov
(bad)
sub
ins
pop
cmc
add
adc
pushf
mov
mov
sahf
jmp
(bad)
xchg
int3
or
cli
xor
mov
inc
pop
pop
push
out
or
add
cmc
sbb
cmp
into
popf
scas
xchg
sub
ficom
xor
aad
inc
inc
ret
cmps
call
das
mov
lock
stos
adc
aam
fwait
xor
sub
xchg
cli
push
leave
cmps
call
mov
(bad)
fist
test
xchg
repnz
cmps
std
mov
int3
test
sub
inc
aam
lods
rcr
mov
dec
sub
adc
mov
pop
arpl
add
mov
xor
mov
cmp
adc
mov
movs
or
fwait
push
jbe
fadd
fsubrp
ret
mov
lahf
jne
or
mov
sahf
nop
xchg
retf
addr16
or
stos
xor
and
cdq
hlt
pop
rcl
movs
les
push
int
sbb
mov
pop
cs
push
enter
mov
sbb
nop
fsubr
lods
aad
or
movs
pop
pslld
mov
jo
sbb
movs
push
push
add
mov
and
inc
mov
fstp
xor
stc
sub
xchg
scas
mov
cdq
(bad)
and
out
mov
cmp
lahf
shl
out
pop
popf
cmc
aaa
outs
fsubr
bound
leave
je
hlt
push
sub
and
aad
dec
sbb
cwde
adc
xchg
sbb
paddw
cmp
movs
push
or
push
retf
(bad)
cwde
shl
mov
fs
push
addr16
or
leave
pop
adc
pop
cmps
ret
inc
fucomi
xor
mov
dec
mov
mov
add
rcr
mov
inc
xchg
adc
test
xchg
das
and
and
or
inc
cs
push
mov
push
pop
mov
in
or
js
test
jle
rcr
xor
add
or
pop
dec
test
cmps
arpl
div
adc
daa
add
xor
retf
clc
push
clc
imul
stc
inc
cli
and
mov
leave
adc
fld
jmp
inc
test
loopne
aad
dec
add
and
lahf
dec
outs
fcmovnu
dec
retf
jl
repz
xchg
sar
inc
pop
imul
mov
lock
mov
add
test
shr
loopne
add
repz
ret
push
mov
lods
ror
inc
ret
pop
pushf
inc
fucomi
or
or
out
xchg
retf
and
xchg
ficom
mov
mov
pop
pop
int3
fs
push
outs
cwde
mov
cmp
(bad)
test
inc
dec
push
out
das
jb
cmp
or
mov
jmp
jbe
cs
fidivr
in
sub
call
xchg
hlt
in
pop
cmps
adc
scas
ins
jmp
aas
das
sbb
mov
mov
jl
inc
add
push
bound
outs
lods
in
mov
pushf
xor
and
aad
inc
cmp
call
shr
adc
ins
fisttp
xor
mov
jb
and
or
and
enter
ins
add
bound
pop
cmp
ror
mov
mov
out
or
and
add
sbb
push
mov
mov
and
rcr
rcl
out
clc
push
pop
jle
fstp
xor
push
nop
(bad)
fdivr
cmp
dec
add
xchg
jecxz
xchg
adc
mov
or
cmp
jmp
fmul
sub
pop
xchg
jl
mov
clc
mov
rcr
aas
sbb
idiv
sbb
jb
mov
mov
pop
popa
mov
dec
aam
fs
les
(bad)
ja
sahf
retf
sti
inc
ret
push
inc
adc
repz
not
add
das
cmp
or
call
aas
call
sbb
cmp
(bad)
repz
adc
jg
or
retf
or
movs
xchg
or
jmp
test
and
test
mov
dec
sbb
sbb
fst
sub
(bad)
sbb
mov
inc
repnz
sbb
out
or
jmp
xchg
dec
daa
clc
fs
inc
dec
clc
cmp
cmp
fistp
or
lea
rol
sahf
mov
gs
je
into
ret
rcl
xchg
dec
or
shl
pop
movs
ss
imul
cmp
inc
ins
pusha
mov
inc
mov
jne
int3
mov
cmp
inc
sub
cmps
mov
mov
mov
xlat
mov
aaa
dec
test
cli
mov
repnz
(bad)
push
sub
gs
adc
xchg
jp
jne
out
je
popa
xor
mov
repz
pop
xchg
gs
movs
clc
mov
shl
mov
push
fcomi
mov
sti
push
or
(bad)
stos
loope
push
scas
jae
add
adc
outs
dec
lods
stc
in
sub
cmp
or
mov
in
loope
dec
cld
fcom
jle
jp
push
adc
popf
fwait
mov
sub
add
jl
repnz
fbstp
fld
cmp
stos
mov
sbb
ficomp
jecxz
fist
div
ss
repz
or
mov
mov
inc
xor
ja
in
dec
mov
push
imul
rol
jge
fdivr
leave
movs
pop
imul
sahf
addr16
xlat
(bad)
ret
add
dec
push
mov
mov
pop
(bad)
mov
push
xor
mov
mov
push
cmp
clc
lods
mov
or
adc
test
push
jb
pushf
mov
sbb
dec
xchg
jge
repnz
or
sub
push
push
out
lods
mov
xor
call
cmp
add
lods
jmp
jno
push
fdivr
adc
and
adc
es
push
aas
adc
mov
div
push
and
sti
test
inc
pop
or
pop
leave
stos
out
outs
mov
cmp
mov
push
fdivp
push
or
gs
lods
fcomp
or
sahf
pop
ret
fnclex
cmp
and
or
mul
sub
jo
cmp
fild
jno
jno
xor
pop
mov
push
mov
jo
sar
jns
and
aaa
cdq
fwait
daa
jmp
mul
jmp
xlat
rcr
outs
and
ret
push
in
fsubr
inc
add
repz
mov
lods
retf
aad
lods
jge
sar
push
inc
pop
xor
aas
mov
jge
sub
fisttp
xchg
dec
dec
aaa
mov
mov
pop
push
es
sbb
bound
mov
adc
cmp
sub
das
faddp
mov
lea
into
nop
int
adc
js
test
pushf
add
jp
cdq
jmp
dec
add
jo
xchg
(bad)
pop
retf
push
and
jecxz
push
test
mov
xor
push
mov
lds
sbb
and
in
jo
(bad)
(bad)
jnp
mov
dec
dec
pusha
add
pop
and
(bad)
mov
mov
lock
pop
popf
out
lds
jbe
test
push
ficom
or
les
lahf
sbb
cmp
outs
mov
cmc
inc
scas
stos
enter
gs
cmp
or
arpl
mov
and
cmp
jb
stos
jmp
jge
pop
rep
ja
xchg
call
dec
pop
inc
push
scas
sub
pusha
sub
shl
inc
and
popf
sbb
xchg
(bad)
js
lock
sbb
cmp
jl
and
leave
or
inc
das
xor
movs
ss
aas
push
adc
cmps
or
pop
or
aam
rol
ja
(bad)
stos
jecxz
add
jmp
mov
inc
rcr
pop
jg
int
sbb
or
loope
stos
inc
int3
add
repz
xor
into
adc
mov
xchg
in
xchg
xor
ss
push
cwde
xchg
push
test
or
mov
push
scas
pop
test
mov
adc
int3
(bad)
pop
sub
sti
mov
xor
adc
ins
xchg
cli
xor
jp
mov
cli
xchg
jnp
push
or
mov
sub
ja
mov
ds
fidiv
or
sub
jmp
jno
cmp
push
mov
jno
scas
cmp
loop
sub
cmp
ret
js
xchg
stc
and
pop
in
js
mov
aam
stos
push
add
pmuludq
(bad)
adc
push
cli
jecxz
repz
daa
fstp
dec
clc
xchg
out
or
fcmovnu
mov
inc
(bad)
retf
xor
dec
int3
pop
push
jb
shl
push
mov
lds
or
in
or
mov
call
pop
retf
jno
loope
loop
pminsw
pop
rcl
pop
xor
xchg
outs
retf
sahf
ja
inc
and
mov
sub
xor
xlat
test
movs
mov
lds
pop
cmp
mov
add
cmp
mov
clc
jno
mov
or
hlt
and
cmps
inc
aad
sahf
cmps
inc
(bad)
jmp
dec
xchg
push
pop
cdq
add
pop
xchg
pop
inc
push
in
lahf
stc
mov
inc
outs
fdivp
cli
jb
xchg
in
inc
(bad)
(bad)
imul
mov
out
pop
pushf
shl
xor
push
cmps
jmp
stos
imul
fadd
or
adc
into
jmp
adc
push
cs
stos
sub
push
fistp
lds
rcr
mov
outs
cmp
xchg
sbb
pop
or
dec
cmc
mov
je
call
cwde
retf
mov
xchg
dec
ja
cld
add
cmp
fwait
shr
scas
xor
xor
pushw
push
inc
adc
scas
xchg
and
cmp
dec
jb
fstp
(bad)
sub
push
in
or
popf
lods
int
pop
and
ins
in
cmps
xor
push
lock
int3
dec
aad
and
xor
mov
(bad)
jo
sti
ret
adc
cli
(bad)
pop
sbb
jle
(bad)
xor
jl
es
in
inc
and
cmp
sub
pop
cwde
fcom
mov
lods
add
xchg
imul
(bad)
cmps
pop
mov
movs
push
leave
cmp
mov
shr
adc
jns
into
repz
push
shl
xchg
cld
retf
jbe
fld
loop
adc
jge
call
xchg
fisubr
or
sub
lahf
mov
int3
jb
jno
jmp
xlat
xchg
pop
xchg
(bad)
or
mov
push
je
sbb
leave
sub
mov
push
and
lods
jmp
cdq
(bad)
enter
add
fs
pop
hlt
in
stos
or
cmp
fiadd
mov
cmp
xchg
shl
xor
bound
retf
push
pushf
jns
mov
pop
cmc
aam
or
pop
(bad)
iret
cmp
xor
jne
icebp
mov
popf
retf
adc
ins
jmp
movs
stc
cmps
je
sub
xchg
mov
loop
out
loope
inc
cs
loopne
gs
fdiv
scas
aas
push
outs
mov
adc
out
(bad)
daa
push
xor
pop
cmc
out
push
into
sub
aas
gs
mov
xor
stos
out
mov
inc
sbb
(bad)
xchg
sti
loope
mov
sbb
cmp
mov
in
sub
fidiv
sbb
cmp
jg
and
inc
rcr
sti
push
pop
nop
mov
stos
mul
ja
jmp
sub
sub
test
pop
pop
mov
and
enter
loop
pop
nop
mov
mov
sti
inc
cwde
enter
jmp
add
adc
xchg
mov
inc
inc
or
push
xchg
das
ror
hlt
pop
or
or
cli
sbb
mov
dec
loope
jmp
or
push
ret
dec
ret
xlat
inc
(bad)
jle
mov
fwait
ja
out
or
mov
or
leave
jmp
ds
in
sub
cmp
jne
jb
outs
cs
aam
les
cmp
add
cmp
jb
daa
scas
push
rcr
jb
neg
mov
scas
and
fdivr
ins
and
lods
lock
in
shl
adc
cmps
inc
ins
cmc
std
dec
push
sub
push
les
pop
je
sub
pop
cli
cmp
xchg
call
sbb
sbb
fwait
sub
xchg
mov
mov
test
repnz
push
sti
sar
movs
mov
dec
adc
lods
outs
int
mov
mov
jbe
repz
jo
in
clc
(bad)
adc
les
out
fldcw
fld
scas
push
xchg
cmp
fst
or
add
stc
lock
mov
xchg
pop
rol
or
popa
jne
inc
xor
rol
cli
xchg
mov
pop
xchg
jne
arpl
mov
dec
dec
sbb
fisttp
pop
cmc
mov
push
shr
sub
push
scas
inc
fld
stos
gs
jbe
popa
adc
push
and
in
icebp
pop
js
imul
inc
push
xchg
add
dec
inc
ds
jne
mov
sub
adc
jb
mov
cli
push
or
sbb
ja
fld
add
mov
dec
call
add
shl
mov
in
adc
aaa
std
add
mov
retf
mov
and
jo
push
loop
loopne
lock
lods
daa
inc
cli
mov
sahf
push
adc
in
dec
or
cmp
add
add
pop
into
(bad)
and
in
jmp
out
les
sub
pop
loop
in
popa
pop
in
xchg
pop
std
aas
call
mov
mov
imul
cmp
pop
mov
in
sbb
sub
dec
lods
dec
out
jmp
cld
(bad)
js
lods
fs
mov
jp
mov
sub
shr
pop
ffreep
aam
(bad)
fld
mov
add
(bad)
jb
push
sub
icebp
ror
mov
adc
push
dec
arpl
repnz
mov
cmps
mov
imul
mov
lds
or
bound
mov
push
inc
jb
mov
(bad)
cmp
ret
std
retf
xor
fsub
int3
mov
push
adc
jno
ret
in
mov
add
cwde
add
jg
dec
add
in
xor
retf
mov
mov
mov
int
ficom
inc
shl
loopne
pop
and
push
dec
jg
xor
jp
pop
mov
push
push
sub
sub
in
cmps
xor
bound
xchg
loop
and
jmp
push
jle
sub
das
popf
sub
and
push
rcr
inc
sub
mov
cmp
popa
xchg
and
pop
mov
dec
or
pop
retf
cld
or
jbe
mov
push
add
shufps
xchg
fcmove
test
and
and
mov
outs
mov
lahf
scas
std
sbb
cld
icebp
sbb
pushf
pop
lock
loope
stc
int3
and
test
push
mov
dec
pop
(bad)
int
jns
and
in
sbb
xor
iret
loope
inc
push
jo
jge
(bad)
sbb
sbb
mov
movs
mov
jno
add
fist
sbb
lods
add
jp
stos
sub
lds
adc
int3
inc
dec
fs
and
adc
(bad)
shl
mov
sbb
nop
pop
push
add
or
fwait
or
or
xlat
or
push
mov
cmp
push
fsub
pop
xchg
int3
sub
test
jno
mov
out
push
aaa
push
inc
or
test
leave
in
into
call
push
push
jle
in
ins
cmps
lods
lahf
sysenter
push
daa
inc
repz
ja
jns
push
adc
push
sub
jle
mov
aam
aam
leave
jmp
outs
or
xchg
jl
xor
ins
mov
lock
xor
jecxz
clc
loope
xchg
out
stos
jle
in
mov
ret
scas
push
cmp
jg
mov
mov
or
xchg
bnd
popa
sbb
movs
cs
sar
sbb
call
cmc
movs
and
xchg
pop
std
shr
jge
xor
test
and
test
sbb
xchg
mov
push
lahf
ror
cs
add
xor
mov
sub
outs
hlt
dec
push
cmps
test
dec
jmp
in
outs
into
push
addr16
xlat
dec
inc
or
pop
arpl
sar
push
pop
retf
cmc
stos
cmp
xor
imul
in
(bad)
and
adc
push
xchg
cmc
jmp
loopne
xor
jge
lea
ret
sub
lods
je
inc
ins
add
sbb
lock
rcr
mov
dec
inc
mov
push
int
dec
cmp
rcr
mov
jno
jbe
push
test
add
mov
nop
jmp
push
pop
rcl
jg
inc
jecxz
icebp
pop
jo
stos
inc
jl
jmp
jmp
std
(bad)
fist
jb
sub
push
outs
inc
sub
cmc
es
adc
push
imul
adc
sub
cli
adc
int3
mov
inc
mov
int3
inc
sbb
movs
std
dec
jle
ret
cld
push
fwait
mov
pop
and
push
leave
retf
sub
(bad)
sub
cmp
push
mov
push
(bad)
sbb
movs
cs
cmp
not
cmps
cdq
xchg
sti
cmp
xor
inc
and
pop
(bad)
ss
add
(bad)
fs
mov
xchg
sub
imul
loopne
mov
dec
repnz
xchg
ins
xchg
cmc
in
inc
out
mov
pushf
jae
dec
loopne
push
cmps
or
out
lods
(bad)
cli
xchg
jnp
push
int3
jge
pop
(bad)
ja
mov
shr
dec
push
pop
mov
dec
imul
or
add
lods
popa
pop
sbb
push
(bad)
jmp
popf
mov
fld
nop
cmp
in
lods
retf
push
sub
jnp
test
dec
addr16
xchg
sti
(bad)
push
sbb
mov
or
mov
jmp
test
xor
sbb
mov
inc
dec
push
mov
mov
or
dec
(bad)
jnp
test
push
ins
jno
ss
sub
sbb
inc
leave
pop
mov
out
xchg
aas
idiv
sar
imul
inc
mov
ret
and
push
fstp
dec
inc
xor
or
or
aaa
and
ds
in
es
gs
test
sub
sub
cmps
in
sbb
jae
aam
inc
retf
xchg
or
es
clc
inc
das
(bad)
clc
icebp
xor
push
push
jle
inc
in
mov
sbb
inc
iret
les
push
sar
xchg
sbb
sbb
dec
ja
cld
lds
jecxz
test
ss
shl
push
inc
rcr
sbb
fistp
bound
es
inc
pop
fistp
mov
xchg
xor
call
fcom
and
movs
adc
cmp
push
push
push
sub
mov
pop
push
js
and
out
movs
pop
push
aas
pop
mov
add
xchg
es
cmps
push
mov
loope
arpl
fld
push
repz
ins
movs
dec
in
mov
jle
mov
shr
nop
or
fs
aas
fsubr
mov
in
adc
test
sbb
into
addr16
(bad)
mov
pop
adc
ret
mov
jnp
inc
aad
hlt
jge
inc
inc
xchg
dec
dec
fisttp
xor
sbb
movs
adc
ret
cmps
fs
dec
out
xchg
or
lock
rol
cld
shl
add
scas
fdiv
stos
xor
jg
popa
data16
sub
fisttp
mov
movs
jp
addr16
fild
mov
std
(bad)
mov
cdq
retf
sub
mov
inc
push
push
pop
addr16
lock
mov
sub
mov
test
mov
ror
in
aaa
pop
xchg
fdivr
repnz
jl
xchg
inc
loope
mov
mov
iret
(bad)
out
cmp
icebp
test
loope
fdivr
call
repz
adc
outs
into
adc
pop
add
mov
sbb
mov
jne
test
out
adc
push
stos
icebp
cmp
jl
cmp
mov
xchg
fcmovbe
cmp
cwde
adc
inc
and
mov
mov
inc
mov
xor
mov
adc
jg
or
mov
addr16
pop
loopne
pop
test
gs
pop
js
cmp
js
sub
loop
ins
(bad)
imul
push
movs
adc
fisubr
dec
sub
les
test
not
xchg
fisub
rdpmc
ins
adc
out
jbe
call
les
popa
pop
out
out
outs
pop
pop
inc
std
mov
loop
sub
pop
mov
shl
ja
movs
aam
xchg
add
movs
push
lods
jp
mov
fstp
je
sub
add
push
sbb
xchg
sbb
cdq
outs
mov
add
aas
jmp
xchg
inc
jnp
sub
aam
push
repnz
xchg
mov
xor
inc
sub
or
fmul
push
push
cmp
mov
outs
fmul
in
sysenter
cmp
xor
xor
cmp
mov
ja
out
add
sub
jge
fcmovnu
sub
test
xor
mov
ja
in
inc
jl
pop
pop
mov
mov
fsub
fistp
cmp
push
inc
pop
add
pop
or
fwait
mov
enter
lds
mov
push
cld
sub
clc
mov
(bad)
mov
jmp
gs
or
jns
dec
and
mov
pusha
push
xor
adc
dec
and
ins
fbstp
add
in
add
xchg
movs
fnsave
jge
iret
lods
push
or
pop
(bad)
loopne
or
(bad)
into
xor
mov
lea
or
mov
jp
xchg
sar
loopne
cmc
dec
cmp
mov
cdq
xor
outs
scas
mov
pusha
dec
int3
lock
lds
in
xchg
fs
pushf
call
dec
lods
jne
inc
ins
cmp
pop
mov
fs
fs
jmp
repnz
push
pushf
adc
dec
dec
add
into
ss
jl
cmps
outs
daa
ins
outs
and
or
xor
add
in
cmc
ins
stos
ds
fcom
gs
mov
mov
mov
pop
jb
jle
movs
inc
adc
das
sbb
pop
ja
cmp
adc
mov
xor
fwait
inc
or
cmp
cmp
mov
xchg
fwait
or
push
nop
fwait
pop
push
adc
cmp
fld
cwde
inc
adc
jecxz
cmp
mov
or
push
dec
shr
(bad)
movs
cmp
xor
test
enter
test
pushfw
jnp
jg
mov
jae
sbb
sbb
jbe
mov
bound
push
inc
(bad)
outs
and
std
icebp
mov
aad
stos
adc
and
ret
mov
outs
mov
sar
enter
mov
and
pop
test
imul
jae
jle
jmp
inc
fabs
xchg
js
rcr
nop
mov
sub
ret
mov
push
mov
add
cmp
pop
movs
add
cmps
mov
pop
xchg
mov
pop
mov
dec
pop
push
out
jno
rol
fistp
inc
outs
jmp
xor
adc
jg
jo
mov
pop
cli
mov
retf
les
sub
neg
movs
push
xlat
pop
cwde
retf
into
sub
jbe
outs
inc
dec
sti
lea
inc
xor
mov
mov
daa
cld
lea
in
mov
sbb
ds
cmp
and
in
(bad)
ss
fiadd
in
les
in
xor
mov
out
test
stos
test
sub
pop
fisttp
pop
test
mov
push
cld
jg
ret
ds
or
and
or
pop
retf
or
jne
fldcw
inc
stos
imul
sub
or
loope
faddp
xchg
scas
jmp
sub
int
movs
adc
popf
adc
mov
mov
jg
fiadd
es
mov
mov
jae
and
mov
stos
test
retf
add
inc
adc
outs
cmp
mov
call
jae
aas
pop
daa
push
jb
adc
loope
aas
push
arpl
cld
nop
pop
cld
(bad)
pop
push
es
mov
loop
stos
xor
iret
sub
or
mov
add
mov
js
lods
ja
cld
jmp
push
push
mov
leave
rcl
inc
mov
jns
xchg
jge
pop
mov
(bad)
jno
sbb
icebp
loopne
hlt
icebp
mov
pushf
adc
stos
or
mov
fimul
ins
sub
mov
test
rcl
jb
dec
and
call
cmps
add
popa
fsubr
lock
pop
and
pusha
dec
out
test
mov
add
dec
cmp
sub
and
cwde
rcr
or
ret
sbb
or
cmps
sbb
outs
mov
inc
les
mov
pop
aam
call
mov
(bad)
mov
cs
xchg
jp
loopne
into
movs
aaa
out
imul
into
fild
popa
outs
push
lock
fstp
mov
jmp
cmp
imul
ins
out
mov
retf
sub
aas
ins
add
aaa
cmp
stos
mov
cmp
cmps
cwde
ins
cmps
sub
jns
mov
lods
scas
mov
daa
movs
aad
dec
test
pop
test
cwde
ins
sub
fadd
inc
mov
int3
cmp
sahf
mov
leave
(bad)
or
aad
mov
cmp
in
push
mov
call
into
pushf
out
lea
xor
(bad)
int3
jecxz
popa
outs
movs
and
sbb
push
or
cmp
popf
enter
shl
(bad)
jno
dec
jmp
hlt
shl
cmp
xlat
push
daa
out
pop
xor
fld
sub
ja
aad
div
push
jae
daa
nop
push
dec
pop
xchg
inc
add
(bad)
int3
cmp
mov
clc
mov
aad
add
sub
cmp
pop
clc
inc
outs
adc
mov
sti
outs
test
rol
pop
jmp
adc
add
xor
mov
ja
repnz
jge
push
xchg
pop
inc
jnp
dec
loopne
add
ds
xchg
es
xor
push
xrelease
adc
sbb
mov
imul
inc
pop
repz
jns
and
mov
pop
int3
cmpps
or
or
ins
call
dec
test
cs
lock
or
xchg
imul
cdq
ficomp
mov
cdq
test
mov
imul
pop
fcom
pop
mov
mov
adc
add
push
sbb
bound
jno
adc
pushf
xor
repnz
into
std
and
dec
dec
dec
mov
loop
cmp
inc
sbb
mov
mov
mov
ins
ror
adc
cmps
dec
jbe
in
push
retf
sbb
mov
and
xor
push
pusha
sbb
inc
cmp
push
adc
sbb
adc
jl
xchg
(bad)
push
xor
pop
aam
call
and
fwait
fs
enter
(bad)
pop
les
in
inc
cmp
push
scas
icebp
add
mov
pop
movs
in
imul
inc
jp
jmp
lahf
je
lea
dec
jmp
sbb
pop
cmp
ret
sbb
xchg
lods
imul
aaa
mov
ss
add
mov
or
outs
sbb
inc
xrelease
daa
sti
fs
popa
add
and
cmp
or
pop
and
movs
(bad)
shl
fbstp
es
int
retf
jmp
push
jmp
adc
sar
outs
pop
test
stos
push
inc
jmp
mov
test
leave
hlt
clc
and
arpl
lock
mov
arpl
enter
jmp
lahf
pop
xor
sar
mov
ror
je
ins
jbe
dec
arpl
mov
mul
lahf
std
repnz
xchg
push
jnp
pop
outs
pop
loopne
loope
cmp
jae
mov
xor
popa
movs
enter
das
xor
test
pop
inc
mov
pop
(bad)
sub
ins
arpl
push
iret
ret
jo
das
les
mov
ja
addr16
sub
std
add
fld
arpl
rol
mov
and
ret
fwait
(bad)
(bad)
int
cmp
mov
imul
(bad)
lods
ss
mov
retf
arpl
mov
inc
loop
lods
out
pop
in
dec
cmp
rcr
fcomp
retf
pushf
imul
jmp
icebp
lea
inc
shr
jbe
test
xchg
(bad)
pop
xor
fisubr
dec
xchg
jmp
fcomp
xchg
test
lock
and
aad
test
mov
movs
mov
pop
push
daa
sahf
push
or
xor
jmp
dec
out
fsubr
xchg
fimul
imul
add
sub
mov
stos
imul
add
in
cmc
and
mov
mov
ficom
bound
ins
push
xchg
mov
cs
add
jmp
retf
mov
call
das
sub
pusha
out
jns
cs
ds
push
mov
fidiv
mov
cmp
mov
adc
cdq
jae
add
mov
imul
mov
and
inc
(bad)
scas
fxch
xchg
sub
aaa
adc
sub
cwde
jecxz
xchg
or
in
out
repz
jnp
pop
hlt
daa
xlat
pop
ret
pop
iret
mov
inc
pop
cmp
add
add
inc
ds
jo
add
pop
in
lds
cmp
ins
loop
sti
cmp
(bad)
fidiv
jns
xor
fdivr
js
ficomp
push
ins
xor
aaa
rol
stc
mov
pop
sbb
add
mov
adc
xchg
add
mov
pop
mov
sub
mov
dec
scas
inc
xchg
loop
jecxz
and
push
lods
mov
pushf
dec
rsm
faddp
add
loopne
enter
ins
xor
call
aad
mov
cmp
xchg
sbb
mov
cmp
adc
(bad)
cmps
test
daa
adc
(bad)
(bad)
(bad)
std
ret
daa
out
inc
xchg
test
mov
test
xor
jp
pop
lahf
cli
or
pop
inc
push
add
cmc
(bad)
pop
cmps
xor
mov
add
push
push
sub
push
dec
aad
jmp
mov
fldenv
xchg
lds
les
inc
cmp
popa
push
adc
in
jnp
xchg
cmps
pusha
in
(bad)
inc
add
dec
cs
js
ret
dec
inc
sbb
int3
pop
into
pushf
inc
scas
fist
enter
jmp
das
add
or
push
scas
sub
pop
(bad)
cmp
sbb
loop
add
lahf
jp
push
mov
dec
xor
and
xor
add
fwait
ins
aas
add
inc
test
scas
pop
(bad)
fst
outs
push
mov
push
rol
adc
clc
lahf
adc
push
or
dec
cdq
cmp
shl
fwait
dec
out
push
data16
mov
in
pop
fdivr
nop
add
adc
dec
mov
loop
rol
xor
push
push
adc
xor
rol
cmp
lods
mov
cli
mov
sub
adc
jbe
mov
xchg
mov
ret
in
xchg
or
punpcklbw
inc
add
movs
add
push
adc
cli
jge
cli
imul
lock
push
popf
iret
scas
pop
sub
ins
jmp
inc
ja
movs
mov
and
pusha
(bad)
jo
cmc
dec
imul
xchg
and
mov
pop
scas
mov
mov
or
jbe
mov
addr16
std
sbb
or
mov
loopne
faddp
xor
dec
add
and
test
mov
inc
sbb
pusha
or
push
dec
inc
ja
stos
int3
icebp
scas
inc
inc
push
sub
dec
in
out
lods
out
mov
fdivr
push
sti
popf
cwde
imul
xchg
xor
(bad)
or
push
cmp
dec
test
xchg
in
test
add
xchg
inc
fs
ret
shl
add
xor
sbb
movs
out
push
inc
mov
mov
test
jmp
mul
mov
mov
add
ret
fidiv
out
lds
pop
adc
lods
or
adc
dec
in
pop
mov
int3
adc
mov
lods
pop
cmc
es
data16
(bad)
cmp
aad
shl
pushf
push
jmp
(bad)
setp
mov
and
gs
popa
xchg
movs
adc
sub
mov
ins
pop
xchg
mov
inc
(bad)
jnp
test
mov
call
push
xor
adc
push
ss
mov
les
icebp
lahf
mov
mov
jb
xor
push
inc
call
inc
aad
mov
jb
or
fnstsw
frstor
lods
add
cmps
jl
dec
mov
sub
jl
cmp
call
(bad)
push
mov
jle
jbe
dec
repnz
push
jl
mov
mov
jns
sub
(bad)
push
cdq
ss
mov
xor
jae
movs
mov
jns
inc
push
jnp
cmp
test
pop
push
hlt
bound
in
sar
xor
xchg
movs
sbb
ins
sbb
jmp
sub
add
jbe
mov
jmp
pop
cld
cmp
mov
xchg
sub
addr16
fsub
mov
std
pusha
sbb
or
scas
adc
xlat
out
loop
aaa
fild
rep
cmc
cs
js
dec
cmp
jg
fs
out
repnz
cmp
mov
or
adc
mov
sbb
jbe
xchg
push
dec
adc
mov
mov
imul
mov
and
and
jne
aas
mov
cmp
cmp
cmp
(bad)
jns
scas
pop
sub
or
aad
push
ss
rcr
xchg
lahf
pop
and
jb
sar
into
adc
loop
sbb
retf
mov
mov
inc
in
bnd
popf
mov
or
ret
out
push
adc
sbb
pop
imul
pop
mov
push
mov
les
pushf
outs
sub
sti
mov
xor
pop
jb
lds
xchg
rol
push
jle
pop
pop
aam
repnz
sbb
sbb
mov
dec
mov
test
dec
shl
xchg
jg
dec
add
ficom
jl
fnsave
add
out
push
jb
sti
fbstp
imul
ins
jecxz
cmp
add
outs
mov
lahf
or
mov
stc
rcl
cmp
pushf
shr
popf
pop
push
sbb
rol
push
jb
int
mov
mov
cld
mov
mov
inc
mov
sbb
xor
aas
mov
mov
into
sbb
pop
jbe
mov
add
mov
adc
or
pushf
and
ja
xor
and
(bad)
mov
not
iret
or
and
aad
xor
rcl
cmps
cmp
retf
call
add
jno
outs
and
adc
ret
cli
xor
mov
add
and
mov
adc
aaa
cmp
pop
mov
lods
or
push
(bad)
std
sbb
jbe
xchg
dec
outs
pop
cmp
xlat
and
ror
push
pop
push
jp
sub
fcmovnb
inc
cmp
jge
push
in
jne
jnp
sub
inc
ja
xchg
cmp
mov
and
and
scas
pop
popa
out
out
ins
ret
cmps
sbb
adc
sbb
ja
fsubr
sub
inc
out
adc
sub
pop
cdq
xchg
ins
fmul
fld
lods
add
test
dec
mov
pop
push
call
pop
jg
dec
jmp
ret
and
dec
add
iret
add
inc
jb
pop
out
lea
(bad)
clc
fs
cld
ds
mov
shr
adc
dec
add
lods
clc
in
dec
cmp
(bad)
xchg
mov
mov
inc
retf
dec
inc
out
adc
pusha
rol
mov
int3
arpl
mov
lods
adc
sub
xchg
dec
push
cmp
sar
dec
inc
cwde
lock
mov
pop
mov
test
push
mov
and
mov
xor
pmaxsw
adc
mov
jmp
idiv
repz
js
add
stos
pop
xchg
enter
call
dec
push
mov
cld
jmp
mov
fisttp
lds
adc
sub
push
popa
repnz
mov
stc
mov
adc
sbb
(bad)
jnp
mov
cmps
imul
sahf
sub
data16
movs
outs
sbb
pop
fs
mov
cmp
popa
ret
mov
int
ins
(bad)
sub
repnz
je
push
jge
sub
call
lahf
inc
push
daa
repz
or
fidiv
lods
ret
jno
mov
adc
fiadd
ret
xchg
mov
inc
pop
xor
inc
lods
xchg
mov
jo
sub
jge
stos
add
dec
mov
cs
xor
pop
call
pop
lods
div
cwde
bnd
and
mov
mov
sar
(bad)
cmps
addr16
stos
adc
sub
and
jno
or
loopne
adc
mov
pop
pop
scas
mov
jo
jge
movs
push
ret
hlt
loopne
cmp
pop
lods
sbb
clc
push
loop
mov
pop
int
ins
into
fild
inc
sbb
lea
ins
fsubp
mov
js
mov
or
xchg
iret
push
lods
mov
gs
in
pop
add
sti
xchg
imul
movs
movs
xor
mov
jbe
jecxz
lahf
or
adc
fst
lods
movs
out
mov
push
cld
icebp
mov
cmp
add
and
or
enter
dec
out
int
inc
in
fcomp
mov
lahf
in
sti
pushf
ds
mov
sbb
adc
movs
ss
mov
jl
repz
inc
xor
pop
cmp
movs
push
cmp
xchg
ins
cmps
imul
mov
daa
(bad)
(bad)
mov
jl
xor
gs
test
sahf
(bad)
call
and
and
push
outs
pushf
fst
sub
sbb
pop
jae
pop
xor
fidivr
test
push
or
fcom
fdivr
je
mov
outs
inc
pop
test
xchg
jecxz
fisub
into
sub
dec
sub
adc
gs
inc
sbb
(bad)
jbe
ret
mov
jge
inc
(bad)
stc
push
mov
xlat
lahf
mov
imul
fstp
std
loope
sub
fimul
push
mov
addr16
adc
ret
mov
iret
test
push
pop
push
add
mov
pusha
outs
push
push
xor
pop
sar
xchg
mov
xor
push
ret
sub
push
in
xor
sti
shl
inc
(bad)
lahf
adc
mov
shl
test
sbb
xor
sahf
xor
cmps
out
pop
lds
mov
das
cs
mov
jnp
sbb
jae
mov
sub
js
fld
jno
inc
dec
in
loopne
mov
ins
retf
adc
enter
dec
jmp
clts
retf
dec
push
fdivr
add
add
std
rol
sti
ja
jg
repz
xor
shl
shl
outs
movs
ss
dec
push
lds
test
mov
mov
xchg
add
movs
sub
sub
xchg
test
cmp
lahf
ficomp
mov
or
adc
xchg
xchg
mov
hlt
and
xchg
xchg
movs
out
jecxz
enter
cli
xor
out
cmc
idiv
mov
adc
rol
cmp
retf
in
std
arpl
xor
out
xlat
loop
xor
loope
mov
sar
mov
xchg
test
mov
pop
mov
pop
and
xor
fist
cmp
add
xchg
pop
lods
cmp
cwde
int3
fldcw
mov
pop
popf
jmp
xchg
aam
je
mov
bound
xchg
xor
cmp
cmp
fmul
mov
or
ins
and
rcl
retf
pop
addr16
shl
ins
xor
inc
in
cmp
mov
push
pop
das
and
aaa
into
stos
xchg
push
das
mov
pusha
daa
push
and
int
push
mov
cmp
pusha
imul
push
xor
mov
ficom
jl
loopne
ss
add
sub
loop
neg
push
fisubr
cli
sbb
or
xchg
adc
xor
cmp
ja
ret
out
dec
mov
mov
push
popa
xchg
mov
(bad)
packsswb
jle
in
aam
imul
(bad)
fadd
xchg
push
inc
and
mov
adc
fs
popf
push
fbstp
inc
jmp
pop
sub
adc
cmp
dec
sub
retf
jmp
and
or
xor
test
push
fmul
dec
xlat
lea
mov
pop
xor
add
push
in
cmp
jb
mov
xchg
xor
je
(bad)
int3
xchg
sbb
push
inc
and
xchg
or
(bad)
hlt
imul
pop
mov
movs
ret
fisub
or
lods
adc
mov
inc
mov
mov
call
mov
cmc
imul
js
cld
xor
rcl
inc
mov
or
lock
mov
aaa
imul
push
jns
cmps
inc
fsubr
cs
cmp
dec
cdq
add
out
fild
enter
inc
dec
pop
fild
xchg
ds
rcl
jno
add
inc
ja
add
jmp
rol
pop
jo
scas
mov
imul
(bad)
fs
sbb
stos
out
mov
pop
sub
js
mov
mov
jmp
es
ins
cmp
cwde
lahf
pusha
fistp
xchg
sub
inc
jg
ror
cmc
sbb
shl
les
ss
xor
das
imul
sahf
cmp
lahf
jge
(bad)
push
(bad)
dec
jno
jne
add
cmc
or
ds
jg
(bad)
xchg
(bad)
stos
cmp
jb
test
mov
scas
xor
repnz
fisttp
ins
fdivr
xor
test
movs
inc
jmp
lahf
lods
test
inc
stc
inc
mov
and
sub
and
fwait
outs
pop
xor
into
push
and
repz
clc
mov
loopne
(bad)
pop
lahf
mov
push
pop
dec
push
sahf
jg
mov
imul
ins
cs
cmp
cmp
test
push
jecxz
fldcw
add
or
iret
pop
lahf
(bad)
call
or
sbb
adc
out
push
dec
(bad)
dec
adc
jge
pop
ja
ror
mov
jnp
fwait
jae
rcr
jbe
loopne
jle
enter
call
mov
aam
xor
push
sbb
push
pop
xor
sbb
les
inc
xor
movs
dec
sub
lods
sbb
iret
pop
mov
je
dec
sub
jl
dec
stos
xchg
sub
(bad)
jmp
(bad)
jmp
(bad)
and
dec
leave
jno
jbe
sbb
ja
les
pop
int
dec
popf
and
pop
scas
sbb
test
push
jl
imul
jne
inc
fisub
adc
test
movs
mov
cmp
xchg
jne
jno
pop
jmp
push
fcomp
xor
aaa
sbb
and
les
pop
xchg
pop
ja
ja
pop
mov
cdq
and
push
push
xor
mov
mov
or
mov
dec
cdq
out
mov
adc
jmp
aad
ss
loop
and
jb
fcmove
fdiv
clc
lods
mov
repz
imul
popa
ror
scas
mov
adc
xor
mov
and
nop
adc
inc
fwait
dec
loope
lea
push
dec
and
jno
ret
ds
mov
sbb
js
add
(bad)
and
xor
and
repnz
dec
cwde
lds
mov
jge
pop
jmp
cmp
retf
or
sub
jbe
adc
aam
cli
not
loopne
in
in
dec
dec
mov
retf
bound
dec
fbstp
mov
mov
imul
push
nop
pop
popf
sub
pushf
js
jb
neg
sbb
lock
ins
jns
out
inc
stos
std
sbb
mov
adc
jo
mov
or
mov
cmp
or
retf
shl
out
fwait
xchg
or
add
cwde
hlt
xchg
or
cmps
jp
outs
scas
mov
sub
push
mov
jmp
jge
mov
mov
ins
arpl
int3
test
test
xchg
add
shr
adc
into
sahf
and
mov
repnz
jbe
in
dec
xchg
and
es
addr16
lock
cmp
je
or
push
dec
pusha
and
sub
retf
hlt
xbegin
jmp
out
mov
inc
mov
sub
push
inc
outs
stos
or
mov
xor
fisttp
test
aaa
in
test
stc
loopne
std
jae
ins
popf
call
sbb
cld
mov
mov
and
mov
ja
push
movs
cs
std
xchg
or
loopne
jle
inc
mov
dec
js
jno
or
cmps
mov
jl
ret
add
js
jp
or
push
stc
mov
inc
pop
arpl
mov
inc
push
sar
imul
inc
pusha
mov
jecxz
sbb
ret
push
pop
loopne
xor
cmps
add
test
xor
mov
fimul
xor
mul
jg
cmp
mov
imul
bound
scas
fs
frstor
ds
dec
xchg
or
or
mov
aaa
or
pop
cmp
loope
stc
mov
outs
pop
aam
arpl
movs
not
loop
and
loope
push
imul
int3
into
cmp
popa
jmp
aam
shl
sub
sbb
jns
inc
rcl
mov
xor
push
or
sbb
xor
mov
call
fcom
add
test
pop
call
popf
ins
jae
pop
xchg
in
or
daa
call
rcl
pop
push
xor
dec
mov
cdq
mov
daa
mov
sbb
fist
and
lods
ins
sbb
ins
je
pop
cmp
push
rcr
in
aas
and
inc
mov
jl
loope
ror
(bad)
fcom
call
hlt
pop
int
adc
xor
rol
loopne
dec
xor
jnp
lock
lea
dec
sub
dec
dec
js
leave
int3
cmp
(bad)
and
cmp
mov
je
add
lods
retf
push
xor
push
jnp
ficomp
mov
mov
nop
shr
lock
push
data16
mov
jp
cmps
lock
and
je
lahf
movs
hlt
cmc
xchg
lods
and
out
or
cld
fstp
or
retf
sub
adc
fimul
pop
mov
movs
dec
lds
mov
mov
js
pop
xor
cwde
lea
xor
into
dec
jbe
xor
dec
push
mov
cmp
pop
cmps
mov
icebp
mov
pop
cmp
loop
inc
sbb
aaa
hlt
adc
sub
ror
cmp
(bad)
sub
adc
ins
xchg
push
fld
push
aaa
mov
jl
(bad)
sti
cmp
jo
pop
push
pop
push
popf
fldenv
or
pushf
les
sub
mov
inc
or
mov
(bad)
xor
push
outs
loop
add
in
push
push
fadd
sbb
rol
lahf
imul
jb
dec
cwde
xor
jecxz
int
and
iret
fsub
or
xor
aad
int3
adc
retf
js
mov
pop
fbstp
cmp
push
outs
push
in
cmps
call
jmp
xchg
retf
es
out
adc
lods
bound
movs
jecxz
mov
mov
aad
lods
sub
(bad)
ins
cmp
data16
cs
jb
test
push
mov
stos
cld
mov
call
xor
movs
(bad)
adc
and
fisubr
ds
nop
sar
fisttp
call
ficom
stos
xchg
cwde
bswap
fbld
mov
movs
inc
xchg
test
dec
xchg
jmp
test
push
dec
iret
mov
cmp
in
(bad)
lods
aam
cmps
pop
sbb
test
lea
movs
enter
pop
cli
bswap
retf
test
imul
mov
mov
xlat
xor
inc
adc
cmps
push
cmp
loope
or
dec
jbe
int
in
add
push
mov
in
fcomi
jmp
mov
jno
cld
xchg
sub
pop
fcmovnb
mov
call
jae
cwde
call
fs
cwde
mov
or
aam
out
push
mov
jo
out
popa
mov
scas
out
or
shr
or
js
adc
jno
adc
shl
or
and
jnp
cmp
mov
and
inc
inc
je
sbb
test
sub
xchg
daa
xor
ret
adc
sub
sar
scas
data16
mov
cmp
sub
sti
or
in
mov
enter
out
mov
fs
es
dec
cmps
js
sar
pop
pop
ins
sbb
jmp
mov
push
aad
mov
mov
ror
test
and
xchg
lods
pop
push
add
paddw
lahf
mov
xor
fwait
jb
ja
push
sti
push
cmps
nop
push
jecxz
sti
inc
fs
pop
scas
cwde
jbe
push
and
rol
js
mov
push
unpckhps
mov
or
ds
and
mov
inc
(bad)
jbe
adc
test
inc
pop
mov
outs
stc
sbb
movs
ret
mov
push
sub
cmp
imul
mov
xchg
fistp
sbb
adc
xchg
mov
mov
xchg
aam
inc
outs
adc
mov
(bad)
jne
mov
cwde
imul
lock
sbb
xor
les
and
dec
adc
ret
mov
rol
gs
mov
cwde
dec
mov
movups
stos
(bad)
out
adc
sbb
in
or
scas
call
sbb
xchg
push
sbb
add
fisubr
pushf
sbb
xor
mov
xchg
sub
xor
adc
imul
shl
(bad)
test
add
ins
mov
xchg
clc
(bad)
fs
clc
adc
jnp
xchg
xchg
xchg
or
pusha
push
xor
or
pop
stos
dec
lds
aad
lods
and
mov
iret
cmps
pop
lahf
dec
cmp
push
jae
mov
or
outs
push
add
mov
mov
retf
out
xchg
rcr
loopne
sbb
sub
(bad)
xchg
and
pcmpeqd
sbb
pop
or
ja
add
arpl
push
cdq
pop
lock
sbb
jle
xchg
push
mov
jo
mul
sub
rol
test
jnp
int3
inc
mov
test
or
xor
mov
jb
test
adc
xor
outs
mov
pop
add
push
pop
xchg
outs
loop
jns
leave
stos
out
shl
mov
movs
jmp
inc
mov
test
scas
outs
push
or
and
in
xor
inc
mov
push
fwait
push
add
pop
mov
xchg
sbb
pop
sbb
cdq
js
loopne
push
jbe
xchg
inc
retf
cli
pop
iret
add
outs
fbstp
cmp
enter
jmp
and
clc
loope
xchg
jns
in
and
xlat
imul
xchg
mov
aam
shr
and
inc
mov
int
push
lods
mov
cs
and
jae
mov
enter
push
cdq
in
inc
gs
xor
mov
adc
aam
aaa
inc
and
pop
xor
js
mov
shr
xchg
adc
shr
mov
retf
jnp
sbb
ds
arpl
aad
dec
inc
adc
pop
pop
push
pop
(bad)
sahf
(bad)
pop
sbb
jns
or
jo
fdivr
mov
in
cmp
pop
mov
enter
xchg
imul
ja
cmp
mov
dec
push
and
std
clc
neg
std
cmp
push
imul
push
jmp
aas
inc
jnp
xor
scas
lods
lods
push
imul
in
ins
je
outs
test
sub
das
adc
ins
jmp
mov
inc
fimul
and
scas
mov
ret
pop
hlt
fsub
pushf
arpl
mov
sub
fst
xchg
leave
imul
ins
lods
ins
cdq
fs
xlat
fstp
xor
idiv
mov
pminub
pop
imul
push
inc
cmp
ja
push
mov
dec
mov
frstor
jne
ficom
mov
sbb
push
std
lods
ds
enter
sbb
daa
inc
shl
std
pop
ins
test
ror
inc
or
xor
and
stc
rcr
dec
adc
push
mov
sti
inc
test
outs
jo
jno
cmp
nop
or
sbb
push
add
dec
test
jno
mov
mov
dec
je
dec
aaa
jle
test
inc
mov
xor
call
lods
jle
in
mov
out
cli
(bad)
loope
adc
ret
popf
sbb
popa
and
xor
pushf
inc
dec
jb
ret
mov
movs
out
ds
(bad)
std
daa
cmp
loop
mov
bound
(bad)
mov
pop
adc
jle
dec
pop
push
daa
stc
mov
repnz
je
pusha
out
imul
sar
xor
sti
mov
popf
lock
je
sub
pop
addr16
or
push
xchg
add
cs
xchg
loope
movs
pop
and
pop
xlat
(bad)
(bad)
clc
ds
addr16
mov
adc
xor
lock
ins
sbb
xlat
add
adc
hlt
mov
clc
cli
jg
sti
ja
cmps
pop
or
ss
fmul
dec
jl
sbb
fistp
cmp
sub
sbb
cli
fisub
icebp
in
inc
jp
fmul
(bad)
or
dec
dec
call
cs
sub
jo
loope
mov
shl
(bad)
pop
adc
mov
push
or
and
(bad)
mov
xchg
xor
sbb
mov
dec
imul
xchg
mov
je
pop
add
jge
std
gs
add
cmp
jg
adc
ret
mov
out
mov
xchg
ins
cmc
push
sar
push
jbe
push
mov
int
aam
les
push
adc
loop
add
pop
ror
lods
and
sub
add
inc
pushaw
pop
mov
xor
sub
ss
inc
gs
ret
push
mov
jo
add
and
mov
adc
arpl
mov
xchg
jge
mov
ss
push
add
dec
mov
es
cli
xchg
jo
mov
jle
xlat
enter
out
xor
in
test
or
jp
mov
js
sub
mov
mov
movs
xchg
xchg
fmul
jle
mov
pop
sti
cmc
sub
rcr
sub
in
mov
and
mov
xchg
mov
cmps
popa
xor
add
xchg
jecxz
mov
sub
push
sbb
jno
fidiv
pop
(bad)
mov
scas
xor
clc
or
cld
stc
pop
(bad)
and
and
dec
(bad)
mov
cmp
dec
push
fcomp
out
test
fild
call
hlt
xor
pop
jae
sbb
sub
shl
xchg
dec
and
pop
scas
test
sar
pop
mov
scas
cmp
movs
xor
or
sti
arpl
dec
add
jae
add
mov
cmp
jge
stos
xor
call
jb
in
lock
fidivr
out
xchg
shl
int3
add
lahf
lock
mov
dec
cs
jge
mov
jmp
outs
jb
add
and
lods
mov
mov
hlt
xchg
dec
jmp
(bad)
adc
les
mov
fimul
inc
je
loopne
mov
cmp
mov
popf
test
retf
push
sbb
in
scas
dec
sahf
or
retf
inc
scas
pop
daa
inc
std
fs
push
sete
or
sub
ret
arpl
and
jae
test
jne
mov
or
and
lods
mov
std
sub
std
int3
repz
and
dec
push
nop
icebp
lock
adc
shl
pop
lods
daa
mov
pop
bnd
retf
jmp
xchg
in
cmp
addr16
cmp
cmp
jp
sti
mov
popa
(bad)
jl
test
adc
cmps
mov
stc
out
or
addr16
fld
enter
or
or
adc
loope
rcl
add
pop
xor
(bad)
jb
nop
push
push
cmps
test
mov
lds
ret
div
movs
sbb
or
and
or
mov
ja
jne
sti
ins
frstor
pop
popf
push
mov
push
and
cmps
sub
push
pop
xor
pop
mov
and
fistp
ret
fs
lea
daa
lods
mov
mov
rol
mov
repnz
push
jg
out
aas
jae
popa
sub
cdq
mov
jl
in
inc
cdq
int
xchg
push
pusha
xlat
aad
call
cli
mov
shr
mov
(bad)
push
ret
fcmovnbe
repnz
test
aad
xchg
cmp
push
outs
mul
(bad)
inc
xchg
sub
add
mov
mov
jmp
and
jno
in
stos
repz
movs
jmp
sbb
fist
mov
lods
(bad)
shr
mov
push
xor
dec
mov
rol
leave
or
bnd
sub
mov
xor
pop
cmp
cmp
sbb
data16
pop
cwde
pop
lahf
pop
cli
shl
push
das
pop
cmp
cmp
stc
jne
add
cs
sbb
xchg
add
cwde
movs
cmp
ins
cmps
xor
xchg
or
fimul
sub
xor
and
jl
std
jo
icebp
and
stos
daa
add
ret
dec
inc
repnz
les
add
or
outs
shl
cmps
sub
outs
mov
sahf
mov
add
ror
sbb
jo
jg
fucom
sub
push
mov
not
push
mov
inc
pop
mov
popf
fwait
dec
add
cmp
repnz
hlt
mov
bound
lods
aas
out
repz
popf
xor
mov
daa
fst
mov
mov
rcr
call
call
xchg
ja
arpl
jp
inc
xor
movs
(bad)
rcl
aad
add
(bad)
and
imul
push
push
aam
aaa
stos
push
aaa
retf
push
ret
dec
pop
jg
aad
loopne
jmp
gs
mov
inc
(bad)
pmulhw
sbb
dec
fcmovnbe
ret
or
in
xor
cmc
mov
test
jno
sbb
dec
mov
push
das
xchg
(bad)
jle
push
cmp
xchg
pushf
push
jae
inc
sub
jl
test
mov
cmps
popf
repnz
jmp
or
fucomi
cdq
sti
or
pop
fwait
dec
push
sub
push
jb
pusha
(bad)
mov
shl
jns
stc
aad
xchg
les
jo
and
std
int3
popf
int3
add
pushf
mov
push
xor
iret
xor
mov
dec
mov
adc
es
out
cmp
jnp
push
xchg
fisubr
rcr
test
int3
stc
sub
and
pop
mov
ds
cmp
out
cs
add
pop
or
sbb
push
sti
into
ja
cmp
cli
push
pushf
cmp
xchg
je
ror
mov
push
and
cwde
int3
shr
inc
pop
adc
dec
sbb
lahf
clc
jo
popa
fisttp
pop
xor
sbb
jp
jge
push
add
ins
sub
mov
and
shl
popa
imul
aas
pop
sub
popa
sbb
out
call
push
outs
mov
mov
inc
xor
push
cmps
imul
div
inc
sub
push
icebp
daa
test
cmp
aad
push
mov
mov
inc
xchg
jmp
fadd
rcr
push
repz
pop
test
add
sbb
push
push
scas
fstp
stos
push
jbe
sub
je
in
cmp
adc
pop
call
mov
out
sbb
mov
or
out
sar
(bad)
retf
jmpw
xchg
adc
pop
or
inc
xchg
pop
sbb
std
mov
and
mov
inc
xchg
and
mov
test
aad
pop
test
xchg
imul
mov
retf
jmp
dec
icebp
jl
mov
scas
sbb
sub
loope
outs
imul
rcr
xchg
aam
add
sub
xlat
mov
rcl
pop
les
fisub
das
ins
ror
arpl
or
loop
popa
cdq
sub
daa
jbe
shl
add
jge
xchg
ds
mov
sbb
mov
lods
sub
es
cmps
enter
jo
xchg
inc
bound
cwde
mov
cmp
loopne
push
xor
jnp
pushf
ret
lds
push
mov
fwait
repnz
dec
in
cmp
mov
ror
pop
imul
les
adc
dec
shr
mov
mov
movs
pop
rol
dec
hlt
add
test
repz
out
jne
(bad)
rcr
dec
mov
cmp
xor
adc
iret
mov
and
push
ret
mov
xchg
dec
pop
inc
and
fstp
je
rol
dec
(bad)
(bad)
mov
pop
aas
xchg
mov
add
out
daa
and
fisub
add
retf
dec
mov
neg
or
inc
jle
in
mov
stos
rcl
pop
jge
cmp
and
mov
xchg
stc
je
in
pop
out
rcl
push
pop
mov
daa
cmc
jge
jecxz
cmp
mov
mov
ja
rol
out
jns
mov
(bad)
mov
aaa
inc
mov
jbe
sahf
leave
stc
push
ffreep
xor
xor
rcl
cmp
(bad)
add
add
jp
or
popf
es
retf
pop
out
push
jbe
push
shl
xor
jae
repz
and
adc
fidivr
pop
cmps
push
stos
ja
xchg
test
sbb
mov
imul
inc
mov
cs
mov
mov
push
mov
sbb
jmp
leave
mov
xchg
mov
xor
jmp
xchg
xor
out
adc
fwait
sbb
sti
pop
lods
in
and
shr
iret
adc
or
popa
sub
jae
(bad)
pop
test
add
pop
push
mov
js
icebp
in
ret
les
jno
imul
inc
jbe
push
lea
mov
sahf
xchg
push
test
jmp
pop
mov
inc
pop
cmp
shl
stos
pop
xchg
adc
jb
mov
xchg
jp
(bad)
cmps
call
push
pop
jp
adc
add
mov
jbe
mov
pop
sub
xchg
fcomp
(bad)
ror
idiv
into
sub
cmp
dec
fcom
cli
(bad)
cmps
cmc
inc
jecxz
sbb
sbb
dec
jne
push
pop
call
pop
fs
test
push
xchg
(bad)
icebp
xlat
ror
inc
test
popf
mov
pop
leave
sar
or
xchg
or
retf
mov
and
add
and
jmp
jnp
mov
xchg
inc
dec
(bad)
xor
leave
jmp
mov
cmc
test
stc
ins
jg
(bad)
ds
stc
adc
cmp
pop
or
std
in
mov
xor
loopne
adc
inc
cmps
into
jae
add
add
cs
mov
dec
push
call
outs
adc
jmp
add
shl
xchg
aad
and
rcr
retf
or
jp
fnstsw
dec
cwde
fwait
data16
test
jns
jecxz
les
push
pop
and
ret
push
inc
add
pop
das
das
mov
mov
(bad)
(bad)
shl
loop
mov
lahf
inc
pop
ins
cli
es
xchg
cmp
inc
hlt
stos
fild
mov
push
cld
and
stos
dec
or
mov
xlat
xor
jg
mov
test
and
outs
pusha
neg
sbb
fnstenv
aaa
add
lock
ds
cmp
push
or
and
push
xlat
xor
xlat
fdiv
inc
fsubr
sbb
mov
shl
adc
or
mov
test
dec
xor
dec
arpl
lods
dec
mov
(bad)
repz
(bad)
in
push
(bad)
push
das
xor
sub
(bad)
test
sahf
fld
fisub
jecxz
jns
fimul
or
daa
mov
stos
cmp
stc
das
popf
(bad)
pmuludq
mov
push
scas
in
dec
or
mov
call
movs
(bad)
push
das
mov
(bad)
stc
loopne
mov
shl
dec
mov
shl
aam
fsubr
cmp
jmp
les
adc
pop
add
pop
retf
pop
mov
in
stc
dec
add
xchg
cli
xor
adc
xchg
and
out
sub
popf
sbb
xchg
movs
push
mov
push
leave
inc
cld
xchg
daa
cmp
sbb
jg
mov
aas
mov
cs
mov
pushf
and
pop
and
cmps
push
xor
shl
push
or
out
push
cli
pop
repnz
xchg
stc
mov
fnstenv
dec
nop
jae
pop
clc
shl
and
or
dec
jno
mov
xchg
and
cld
retf
ds
xchg
add
aaa
ret
std
ja
lock
and
sahf
adc
test
int3
push
inc
sub
pop
sub
(bad)
nop
ins
and
(bad)
hlt
mov
test
xchg
nop
retf
call
adc
push
mov
xor
dec
sub
(bad)
in
sub
sbb
ins
sbb
push
cmp
(bad)
test
adc
cmp
inc
pushf
sbb
data16
jp
mov
in
and
sbb
stos
inc
pop
shl
movs
push
mov
or
push
aad
hlt
out
cs
add
test
mov
mov
fist
mov
jne
dec
dec
or
leave
xchg
nop
jg
jno
jg
dec
sub
addr16
push
aaa
mov
call
or
cmp
loope
fisubr
sbb
jp
push
push
sbb
xor
push
outs
mov
mov
(bad)
cli
push
cmp
inc
add
xchg
mov
ret
fstp
aaa
gs
call
pop
icebp
sar
and
push
jge
pop
inc
add
sub
lea
gs
lock
pop
push
mov
inc
dec
gs
ror
test
lds
call
repz
and
mul
push
dec
repnz
and
cmp
shl
pusha
mov
add
add
adc
outs
sbb
loopne
push
mov
cmp
fdivr
add
pop
xor
iret
jl
hlt
mov
xchg
mov
jns
cld
lods
fadd
xor
mov
inc
mov
jmp
mov
aad
lods
imul
push
shr
imul
aam
mov
adc
sbb
ror
xchg
push
sub
into
das
cmp
inc
dec
fdiv
int3
push
pop
in
or
loope
movs
aad
pop
jmp
loop
cmp
jne
dec
push
cmps
push
sub
add
jb
mov
mov
jmp
ror
mov
nop
rcl
sbb
inc
inc
add
fwait
mov
iret
lahf
bound
or
push
pop
mov
(bad)
jmp
push
cwde
jp
push
or
jg
jge
clc
popf
gs
xor
inc
mov
rcr
add
repz
inc
out
or
sbb
mov
and
div
jno
ins
nop
int
les
jg
sbb
inc
dec
ret
pop
jmp
popa
into
add
fnsave
mov
mov
xor
in
lds
xchg
in
add
cwde
dec
or
or
xchg
mov
imul
sti
enter
es
lea
(bad)
call
push
sub
outs
add
mov
bound
js
sub
mov
or
cli
lods
addr16
sbb
jmp
icebp
mov
mov
enter
pushf
mov
mov
push
lea
xor
fwait
cli
push
and
xor
mov
mov
dec
push
pushf
dec
pop
jmp
xor
jno
movs
mov
sti
pop
es
data16
imul
push
pop
pop
cmp
fcmovne
dec
sub
cmp
mov
and
icebp
and
push
outs
test
int
ins
mov
out
adc
jb
inc
imul
in
sti
in
push
repz
popf
icebp
jo
cmps
or
cdq
or
adc
lahf
mov
fld
adc
inc
inc
test
imul
mov
in
in
sub
ss
out
in
stos
inc
mov
cli
cmp
jmp
mov
test
jge
imul
pop
sub
jge
ds
mov
fisttp
xor
cli
int
fwait
mov
xchg
(bad)
xchg
xchg
and
xchg
push
das
cli
push
(bad)
rcr
aas
(bad)
aam
dec
vpminsw
(bad)
mov
outs
bound
and
pop
sbb
xchg
aas
pop
bound
mov
idiv
(bad)
sti
gs
pop
or
cmp
cmps
dec
mov
push
push
mov
lods
adc
out
xchg
xchg
nop
into
cmp
dec
test
out
jg
jp
aad
xchg
sahf
sub
imul
dec
stos
sahf
retf
test
adc
pmuludq
lock
cmps
mov
mov
xor
out
add
and
mov
adc
test
push
shr
jno
xor
aas
gs
jo
pusha
xor
imul
cli
popa
hlt
in
je
or
adc
lock
jb
or
add
div
push
push
pop
imul
push
rcl
inc
dec
pop
neg
and
push
jne
std
mov
(bad)
push
(bad)
in
add
inc
inc
ret
(bad)
fild
cmp
dec
repnz
xchg
push
cmps
xor
in
int3
cmp
pop
idiv
scas
mov
js
sub
dec
gs
retf
and
jbe
fstp
and
jg
int
sbb
pop
xchg
dec
in
daa
mov
fadd
nop
mov
dec
xor
sbb
add
in
jno
or
cli
or
test
mov
xchg
rcr
and
cli
sti
add
movs
retf
dec
fwait
outs
or
xor
ret
mov
outs
out
adc
mov
or
mov
sahf
pop
mov
sub
xchg
jne
push
les
lds
aaa
pop
add
jbe
std
ret
icebp
(bad)
mov
movs
outs
call
pushf
repnz
cmp
fmul
sbb
push
ss
cld
jl
inc
add
daa
push
shr
pop
bound
sub
daa
add
mov
fdivr
jnp
xchg
fnstcw
add
js
and
int
(bad)
cmps
shr
int
(bad)
mov
out
inc
in
add
stc
pop
mov
cdq
xor
cmp
std
jo
inc
xchg
shl
pop
xchg
(bad)
xor
arpl
leave
add
jecxz
shl
push
int3
retf
xor
or
pop
xor
pop
xchg
jae
xchg
cmp
sbb
add
jp
jne
daa
test
addr16
test
fcmovnb
clc
mov
inc
or
clc
jge
pop
dec
push
popf
outs
fild
add
push
inc
(bad)
mov
jecxz
loope
jmp
inc
ss
stc
nop
fistp
icebp
dec
or
ds
icebp
les
test
loopne
mov
out
pop
inc
lods
cmp
hlt
adc
cli
pop
call
push
cmps
cmp
inc
or
call
jp
jns
and
inc
jmp
inc
dec
out
adc
mov
inc
pop
pusha
jnp
jno
cmp
arpl
cdq
aam
cmps
cmp
adc
pop
cmc
std
enter
test
mov
in
not
shl
setle
mov
aas
sub
pusha
jmp
mov
mov
pop
and
pop
ficom
mov
je
and
je
div
shl
mov
into
out
push
leave
sbb
xor
jnp
adc
in
adc
sub
bound
cwde
repnz
jecxz
jno
xchg
jp
inc
push
mov
or
sbb
xchg
or
in
mul
jno
dec
mov
adc
cmps
adc
sbb
jae
mov
test
pop
pusha
int
dec
fwait
icebp
leave
dec
jns
arpl
enter
push
jnp
jae
cmp
lods
hlt
mov
aas
adc
inc
xor
ins
mov
mov
rol
xchg
in
ret
pop
loopne
lds
fidiv
rcl
push
xchg
dec
(bad)
int3
jp
stos
mov
leave
mov
pop
ror
inc
cmc
add
or
imul
in
add
add
aam
scas
push
outs
aas
xchg
je
movs
loop
int
xor
les
mov
xor
add
mov
mov
loopne
pop
or
mov
(bad)
cmp
leave
iret
std
lock
je
or
inc
sahf
xlat
push
dec
hlt
or
daa
dec
cld
mov
lahf
aam
inc
sbb
fnsave
cmc
stc
popf
xor
fdiv
and
or
push
mov
ret
test
pop
pop
pop
xchg
sub
jmp
gs
inc
test
jmp
aas
or
ror
or
dec
sub
and
mov
popa
inc
mov
dec
enter
lds
fist
pop
pusha
fs
popf
mov
inc
or
ficomp
arpl
test
int3
pop
nop
cmps
cmp
arpl
sbb
hlt
xor
pushf
outs
aam
shr
xor
dec
mov
sti
and
call
fdivr
stc
add
mov
sbb
in
adc
sti
movs
ror
popa
ja
jb
sbb
mov
inc
add
pop
movs
cmp
lds
mov
inc
jns
lahf
adc
cs
pusha
nop
daa
das
nop
xor
jl
ins
push
fwait
ret
hlt
nop
xor
push
arpl
ja
xchg
xor
bound
adc
or
mov
add
jmp
loop
inc
cmp
adc
add
ror
ror
xchg
mov
dec
jo
sbb
sbb
gs
cmp
xlat
sub
add
dec
jno
mov
push
cs
fs
stos
mov
aam
add
cli
mov
into
in
mov
cmps
xor
fnclex
jbe
xchg
dec
mov
lea
shl
jae
mov
lods
sub
popf
(bad)
jl
lods
xchg
adc
mov
les
xchg
(bad)
or
sbb
cmp
add
retf
sub
(bad)
push
jb
push
ret
call
mov
push
test
push
sbb
push
fstp
push
sub
mov
rol
pop
mov
hlt
int3
ins
xor
sub
mov
jne
(bad)
push
adc
pop
hlt
add
pushf
jg
or
add
xchg
ss
shl
(bad)
inc
add
or
xchg
ins
add
and
ss
clc
popa
jae
mov
dec
sbb
(bad)
add
pop
ins
pop
push
jb
sahf
addr16
xor
dec
test
(bad)
mov
cmps
sahf
(bad)
movs
push
inc
call
mov
push
sbb
push
sbb
dec
sub
sub
mul
call
popa
push
xchg
neg
lods
or
shr
adc
lods
add
cdq
call
out
out
jmp
lds
xchg
jecxz
int3
and
adc
pop
popa
lods
pop
cmp
push
cmps
aam
cmp
or
loope
(bad)
dec
sub
aam
mov
fld
(bad)
icebp
out
add
mov
pop
ret
mov
das
stos
retf
fcom
pop
sti
push
out
pop
add
push
fcom
cmp
xor
leave
cmp
add
(bad)
push
and
xchg
inc
sti
cmc
gs
test
aam
ror
dec
pop
xchg
int
(bad)
jae
mov
pop
inc
mov
shl
inc
sub
sahf
fisttp
addr16
rol
hlt
pop
(bad)
sub
out
test
jp
and
sub
cli
lea
xchg
adc
dec
jl
or
pop
xor
clc
jns
inc
and
test
dec
cmp
pop
scas
leave
stos
xor
pop
push
add
clc
adc
add
mov
gs
(bad)
in
jmp
jle
add
mov
push
pushf
jae
gs
cdq
es
aam
push
push
addr16
test
dec
pop
xchg
(bad)
js
ja
in
mov
sub
lods
sub
fldcw
gs
xchg
xor
add
mov
mov
movs
sub
jg
mov
ret
xchg
dec
add
mov
pop
jmp
mov
xor
aam
dec
retf
iret
mov
dec
sahf
sub
loop
xchg
fcomi
out
sbb
add
(bad)
sbb
and
(bad)
mov
push
xor
add
in
and
rcr
add
test
ins
pop
jb
and
jno
addps
loopne
in
xchg
pop
add
and
shl
test
xor
out
sub
sbb
mov
mov
sti
push
and
call
test
fsub
int
inc
ret
shr
loop
out
jp
mov
fs
dec
sub
jp
xor
xor
adc
xchg
fwait
pop
sub
cmp
jae
in
in
sbb
ffree
jnp
dec
mov
adc
mov
in
outs
mov
movs
jmp
mov
pusha
ins
xor
outs
dec
fst
dec
jmp
mov
sub
sub
arpl
dec
adc
(bad)
sbb
call
es
mov
push
and
and
leave
lahf
shl
test
loope
aas
(bad)
aam
repnz
(bad)
sub
fidivr
xchg
popf
pop
daa
test
jge
ins
sbb
pop
inc
and
inc
jne
push
adc
pop
mov
adc
fst
call
mov
outs
sub
and
or
jo
sub
jle
or
cli
inc
js
iret
daa
mov
inc
loop
cwde
mov
mov
jecxz
fucomp
mov
jmp
xor
and
push
out
and
push
mov
add
add
addr16
retf
in
scas
loopne
loop
fild
mov
fst
sbb
and
in
dec
xchg
dec
sub
or
shl
call
ret
in
or
jge
scas
cwde
sub
in
push
retf
dec
popa
(bad)
mov
fstp
pop
icebp
std
in
daa
pop
mov
pop
cmp
prefetchnta
push
test
fistp
shl
retf
mov
pop
fwait
sysexit
and
ja
loope
into
jl
leave
or
std
xlat
lods
and
out
adc
cmps
mov
dec
lahf
sahf
mov
iret
mov
push
scas
cmp
pop
jge
xor
(bad)
arpl
adc
xchg
mov
call
(bad)
add
or
aas
pop
ja
pop
xlat
lds
in
neg
arpl
xlat
mov
mov
int3
fldcw
sub
movs
xor
leave
into
dec
js
pop
dec
test
les
in
jns
sub
(bad)
mov
xchg
sbb
push
out
ret
mov
sbb
dec
push
jb
mov
lahf
not
fcom
int3
pop
jecxz
fwait
lds
mov
fild
mov
pop
out
jo
sbb
inc
aas
jmp
jp
sub
lahf
push
mov
dec
ja
xchg
xor
sub
dec
lea
mov
lods
sar
mov
adc
(bad)
lock
rcl
add
add
or
imul
sub
lahf
es
mov
ins
fstp
stos
cmp
xchg
xchg
test
lods
cmp
je
in
jae
jae
inc
add
add
int
jb
cdq
pop
ins
ds
stos
ds
fwait
ins
xor
nop
mov
js
push
cmp
std
fild
fdiv
inc
jmp
dec
dec
inc
mov
sub
inc
mov
push
mov
sbb
cmp
or
xor
outs
jo
rcr
jmp
xor
inc
add
sub
push
popa
cmps
or
pushf
add
adc
dec
xchg
push
into
push
in
sbb
dec
xchg
mov
fs
sub
jp
and
lods
xchg
xchg
jbe
xchg
test
stc
jecxz
add
mov
or
pop
and
sbb
push
bound
ret
mov
lods
cdq
(bad)
or
mov
imul
mov
ror
call
(bad)
xlat
ret
mov
push
xchg
xchg
call
inc
movs
retf
sti
sub
inc
mov
pushf
jb
mov
cmp
scas
iret
sub
cs
pop
jnp
outs
jae
lock
dec
or
pmullw
xor
out
xchg
fld
jbe
cmc
mov
pop
dec
pop
sahf
shl
jb
adc
push
sbb
into
mov
aas
cmp
push
in
sub
jb
inc
mov
cmc
les
xor
fwait
xchg
jle
daa
mov
add
daa
loopne
mov
sahf
int
lods
mov
mov
ds
mov
movs
push
push
adc
pop
cmp
mov
mov
push
jne
pop
mov
in
mov
xchg
lahf
out
push
cdq
push
jne
jns
dec
addr16
xchg
jmp
shl
mov
jbe
int3
xor
mov
es
imul
pop
pop
cmps
inc
in
mov
sub
xchg
mov
cmp
or
movs
fwait
cmps
cmp
fld
or
adc
sbb
ja
cmc
inc
dec
std
inc
push
test
es
imul
enter
js
cmp
outs
sub
fcomp
jno
and
arpl
push
loope
push
sti
out
rcl
dec
call
xor
push
mov
and
movs
lock
hlt
pop
pop
mov
mov
inc
cmps
and
fbstp
rcl
cmp
fadd
dec
(bad)
scas
cmp
mov
retf
loope
stc
loopne
cld
cmp
push
aaa
mov
es
mov
push
popf
pushf
retf
xchg
repnz
repz
xor
jnp
and
ror
mov
rcl
dec
retf
and
loope
mov
pop
adc
(bad)
inc
cdq
dec
inc
int
in
add
add
push
pop
pop
mov
scas
lock
ret
ror
xchg
cmp
sbb
loop
cld
jmp
rcr
cmps
mov
enter
xor
data16
popf
bound
idiv
adc
call
lods
jmp
movs
call
stos
cld
xchg
push
fcom
jecxz
lods
lods
xor
inc
pop
int
jmp
pop
clc
cmp
bound
ds
popa
dec
or
and
inc
inc
dec
test
mov
dec
dec
sti
popa
fdivr
jp
push
(bad)
(bad)
cmps
jmp
sbb
cmp
push
push
movs
push
xlat
stos
in
xor
cmp
int3
jle
or
jge
cmc
push
jb
xchg
test
clc
movs
jl
cs
pop
push
cmp
mov
xchg
push
xchg
clc
rol
fdivr
in
jge
outs
pop
in
aas
dec
sub
ja
or
and
inc
sbb
ins
sbb
dec
out
xor
adc
xchg
mov
xor
and
ins
and
xor
leave
lods
das
xor
add
add
pop
mov
jbe
sbb
fld
mov
push
xor
daa
mov
xor
cmc
cmc
das
cmc
jge
cmp
js
enter
out
mov
mov
imul
dec
jns
fiadd
xchg
lods
shl
mov
adc
sbb
mov
xchg
test
cwde
or
call
call
test
add
jae
inc
and
cmps
push
cld
push
ins
inc
jno
jle
retf
(bad)
outs
and
jp
jmp
mov
and
test
mov
add
ror
fs
scas
adc
loop
fwait
inc
push
sbb
inc
mov
mov
cmps
(bad)
icebp
xchg
outs
stc
inc
adc
aam
test
lock
mov
pop
aad
dec
out
mov
mov
mov
sbb
pop
push
js
iret
sbb
jno
cmp
in
mov
loop
clc
mov
out
jmp
lahf
dec
push
stos
je
pop
(bad)
in
out
xor
or
pop
lds
ret
jae
imul
mov
stc
jge
mov
jo
pop
pop
jbe
or
jnp
and
push
inc
add
pop
rcr
jae
scas
adc
cld
aaa
jb
mov
shl
xchg
out
xchg
imul
mov
push
hlt
int3
and
or
(bad)
sbb
call
xchg
fsubr
adc
es
mov
inc
inc
jae
cmp
push
loopne
pusha
lods
lahf
mov
jecxz
movs
push
aad
adc
sub
sbb
mov
jno
gs
movs
mov
in
push
aad
xchg
fcomp
out
pop
add
and
in
mov
mov
movs
aaa
movs
retf
call
cmp
cmc
cmp
lds
dec
movs
pusha
aad
test
int
add
mov
cmp
sbb
mov
retf
push
test
dec
xchg
jb
ficomp
push
push
add
adc
data16
cmp
lea
test
push
fbld
mov
inc
push
dec
pop
add
imul
stc
test
arpl
loopne
fild
ja
sbb
and
sub
(bad)
iret
ds
sti
or
cmp
sub
mov
cmp
repnz
mov
nop
add
retf
(bad)
push
movs
pushf
int
xor
or
sub
test
stos
add
pop
push
mov
push
fcomp
mov
retf
in
inc
ret
(bad)
push
cmp
xor
and
cld
je
jno
(bad)
cli
fild
cs
dec
pop
inc
je
add
fs
sti
leave
ss
int
jne
push
jo
arpl
loopne
xor
fwait
adc
mov
sbb
inc
xor
jb
inc
(bad)
fbstp
add
loopne
mov
or
mov
(bad)
jb
sub
mov
mov
and
and
push
push
retf
sbb
xlat
inc
dec
cld
pop
or
stos
test
pusha
add
sbb
dec
adc
or
xchg
and
xchg
adc
adc
call
mov
add
popa
pop
mov
push
push
cld
pop
xchg
ins
xor
dec
sahf
fst
push
call
data16
ror
out
ret
imul
fsub
add
outs
or
imul
inc
nop
retf
sbb
cld
or
jae
lods
retf
inc
jg
xor
mov
inc
mov
and
jge
mov
rol
fldenv
inc
or
shl
adc
sub
das
retf
ds
fld
sahf
jnp
push
call
imul
lock
into
into
push
and
retf
shl
inc
mov
test
mov
cmp
inc
dec
popa
push
sub
pop
add
mov
push
in
mov
mov
jne
ss
fs
scas
push
pusha
adc
jae
and
fs
push
enter
fsub
lock
xor
xor
adc
or
clc
ja
leave
test
out
lock
das
es
add
inc
sub
push
mov
nop
stos
dec
fiadd
and
int
rcr
test
sub
sub
sub
out
leave
xchg
ret
rol
stc
inc
outs
mov
xchg
enter
enter
sbb
push
mov
scas
lds
retf
cmp
push
lahf
cmp
mov
xor
pop
les
ss
sub
xchg
arpl
jbe
xchg
daa
stos
rcr
(bad)
jmp
adc
mov
and
sar
ja
iret
jp
jnp
aad
popa
xor
inc
sub
and
mov
int
ret
std
call
lds
into
shl
pop
call
mov
nop
mov
enter
xchg
jmp
imul
jle
mov
pushf
imul
clc
mov
loope
jecxz
pusha
mov
xor
pop
mov
sbb
inc
cmp
clc
imul
jmp
loop
push
sahf
push
xchg
data16
sbb
inc
fidiv
movs
jp
enter
ss
xor
add
lock
push
fnstsw
loope
adc
lock
push
xor
rcr
pop
xcrypt-ecb
cmps
mov
pusha
inc
rcl
xchg
push
and
pop
loope
cmps
add
or
pop
aaa
jle
fcomp
int
push
mov
les
minps
mov
inc
xor
scas
stos
cmps
adc
adc
shl
lea
(bad)
sub
fnstsw
aam
cmc
xlat
sub
test
pop
push
sbb
scas
fsubr
fistp
push
inc
test
push
add
rcr
mov
and
mov
jns
shl
cmp
repnz
add
loope
pop
cmp
pop
lds
in
loop
arpl
push
loope
sbb
test
fisub
icebp
stc
jge
in
jae
mov
enter
leave
mul
aam
js
dec
xor
sbb
mov
inc
out
inc
fidivr
xor
cs
fwait
int3
sub
shl
ja
push
jg
cmp
sbb
mov
mov
retf
stos
xor
cmps
xchg
stc
int3
mov
add
jo
imul
pop
pop
into
daa
cmp
pusha
push
mov
in
fnstenv
mov
aaa
(bad)
out
or
xor
call
inc
addr16
xor
test
mov
add
add
lods
(bad)
add
popf
mov
mov
or
mov
pop
(bad)
(bad)
push
xchg
cmp
data16
retf
in
movs
jb
call
jnp
mov
lea
cs
leave
add
jmp
xchg
push
(bad)
ins
pop
mov
and
adc
cmp
add
(bad)
pop
xchg
call
dec
arpl
jns
test
ffree
iret
ds
inc
or
lods
and
out
cmp
jne
sbb
cmp
loopne
icebp
aaa
popf
out
pop
jb
jp
test
adc
mov
shr
ins
and
test
adc
push
bound
into
scas
lds
scas
pop
fdivr
icebp
dec
xchg
jle
inc
dec
sbb
sub
mov
mov
mov
mov
rcr
inc
arpl
inc
inc
addr16
add
shl
mov
mov
mov
add
popf
movs
fs
or
(bad)
adc
cmp
add
mov
sub
push
(bad)
jmp
mov
dec
add
out
mov
in
sbb
jmp
cmp
and
daa
addr16
fadd
add
xchg
jge
push
outs
add
cmp
sbb
mov
mov
mov
pop
inc
push
shr
div
or
xchg
aad
in
or
lock
icebp
int
iret
rcl
into
fist
and
add
pop
cmp
or
mov
test
add
dec
xchg
xor
js
jl
retf
mov
retf
xchg
fcomp
mov
loopne
xor
jle
cli
pushf
xchg
pop
ret
xor
or
(bad)
jle
jle
cmp
and
adc
retf
add
sbb
in
and
push
sbb
xor
or
and
push
call
mov
dec
adc
push
into
movs
xchg
mov
inc
and
dec
je
xchg
stc
mov
pushf
sub
movs
in
dec
push
jmp
mov
lahf
sbb
and
fsubr
mov
int3
pop
push
and
xchg
lods
jmp
ror
add
movs
mov
icebp
bound
cmp
add
retf
jo
movs
test
outs
imul
stos
xchg
scas
ds
sti
jmp
(bad)
mov
xor
in
pop
xlat
fild
pop
or
(bad)
mov
adc
inc
nop
push
jl
stc
push
xchg
ret
and
jg
imul
sub
(bad)
mov
push
adc
inc
inc
shl
xor
mov
or
inc
bsf
xor
dec
cmps
add
call
and
loop
shr
jg
xor
mov
push
aam
xchg
xchg
call
dec
sbb
dec
sub
bsf
and
pop
sahf
pop
data16
rcl
push
or
mov
ret
or
inc
out
jmp
jecxz
sahf
push
mov
std
fsub
add
jbe
iret
das
mov
addr16
mov
(bad)
retf
mov
lds
js
out
arpl
loopne
call
scas
ins
pop
shr
aas
dec
shl
ret
cmp
pop
push
retf
cmc
xor
pop
mov
add
loopne
push
xor
loope
call
xchg
jo
pop
out
aaa
jg
dec
out
mov
pusha
leave
sbb
cmc
aas
push
loope
stos
xor
mov
mov
jg
test
les
setae
mov
jmp
sbb
push
lods
fild
lods
sub
xchg
sbb
xchg
lea
mov
inc
jnp
mov
inc
pushf
mov
pushf
cmp
(bad)
div
push
mov
int3
(bad)
fild
xchg
test
adc
shl
or
bnd
sub
movs
pop
fdivr
mov
and
or
xchg
test
dec
aaa
repz
xchg
push
ins
push
mov
(bad)
pop
ja
jl
popa
xchg
jmp
mov
outs
int3
push
pushf
aaa
jno
sub
enter
cmp
int3
add
int3
mov
pop
test
sub
stc
pop
popa
mov
mov
pop
js
inc
jns
cmps
jae
frstpm(287
adc
and
inc
mov
fwait
in
sub
adc
in
xchg
fnsave
aad
inc
add
dec
push
(bad)
mov
inc
retf
shl
pop
mov
jns
lods
mov
pop
fwait
jg
jbe
ins
mov
daa
push
sbb
cmp
(bad)
out
fnsetpm(287
add
jnp
lods
adc
push
(bad)
jmp
or
es
sti
(bad)
xchg
pop
jp
popf
or
mov
icebp
xchg
not
retf
jbe
lods
xlat
pop
dec
mov
mov
pop
(bad)
(bad)
mov
in
inc
std
and
in
ss
rol
mov
std
lea
jmp
jae
stos
mov
lods
jl
xchg
imul
adc
mov
outs
cmp
and
lods
mov
jge
in
mov
jae
jp
dec
push
sbb
mov
in
cdq
cli
imul
cmp
rol
jo
sub
inc
inc
lods
cdq
outs
sub
jmp
scas
mov
stos
push
jo
adc
rcr
(bad)
loope
jnp
adc
mov
sbb
mov
push
mov
mov
mov
test
das
iret
movs
mov
or
inc
or
mov
in
movs
jg
jns
fild
stc
data16
outs
xlat
pop
sub
pop
inc
ror
push
leave
jmp
mov
pusha
sbb
add
repz
dec
mov
and
or
sub
sub
jp
sub
fidivr
mov
shl
ror
in
outs
cmp
test
mov
ret
mov
mov
ss
adc
clc
mov
pusha
mov
pop
bound
jnp
div
inc
mov
cmp
jmp
out
push
ss
ret
aad
xchg
(bad)
mov
sub
addr16
push
cs
ins
outs
div
lea
sub
iret
xor
test
(bad)
pusha
mov
(bad)
cmps
dec
push
movhps
push
imul
and
stos
rol
bound
(bad)
jl
outs
arpl
retf
imul
addr16
mov
push
sbb
pop
sbb
cmp
xor
sub
fist
add
or
lods
sub
aad
inc
adc
inc
add
mov
mov
mov
mov
cmp
push
add
imul
ret
mov
jmp
sahf
adc
jp
call
cdq
inc
mov
daa
dec
xor
stos
das
test
mov
mov
cs
sbb
dec
adc
imul
leave
adc
jg
xlat
sbb
stos
xor
icebp
pop
pushf
lods
inc
in
mov
push
je
jbe
xchg
cmp
push
cmps
shl
cmps
dec
popf
dec
in
pusha
sbb
shl
mov
ret
icebp
sub
push
jmp
inc
and
mov
sub
dec
sub
pop
(bad)
gs
dec
or
xor
(bad)
movs
(bad)
ins
mov
ins
mov
(bad)
fcmovbe
xchg
mov
cmp
bound
(bad)
shl
nop
adc
jae
vmwrite
int3
test
lahf
cmps
xchg
xchg
dec
xor
adc
cs
cli
not
inc
scas
mov
xor
dec
pop
test
add
sub
or
popf
imul
xor
add
xchg
jns
sub
dec
fild
pop
mov
jp
pop
int
int3
and
jne
arpl
inc
out
mov
mov
push
fimul
xor
in
movs
(bad)
sub
push
xchg
fisubr
mov
jl
sbb
clc
sbb
sub
dec
push
retf
inc
pop
ins
sbb
nop
mov
test
bound
add
imul
jmp
mov
das
mov
fdivr
outs
cmp
adc
pop
pusha
imul
cmp
and
or
rol
cld
or
dec
pop
ss
cmp
or
shl
cmps
arpl
mov
shr
and
dec
loope
sub
or
push
push
mov
sub
lods
push
mov
outs
mov
test
add
sbb
sbb
cmps
dec
push
cmp
jmp
or
neg
rcr
imul
ret
pop
add
xchg
xchg
push
test
ret
scas
mov
fisub
icebp
js
xor
loope
jnp
retf
mov
jae
sub
retf
dec
jmp
xor
dec
jno
scas
loopne
adc
cmc
fs
stos
das
add
arpl
dec
cmps
retf
ret
sub
xchg
push
addr16
popa
loope
rol
fs
xchg
pop
dec
push
mov
cld
mov
xor
stos
xchg
xor
push
push
int
pop
rcr
dec
mov
cmc
push
into
stos
stos
loop
les
mov
push
jns
and
dec
(bad)
cmps
xchg
push
mov
pop
mov
in
jno
loop
repz
jmp
push
scas
cmp
sahf
mov
mov
mov
cmp
imul
gs
jmp
int
loope
test
seto
scas
fdiv
push
push
icebp
sbb
pop
and
cmp
shl
sbb
mov
mov
add
sub
mov
(bad)
call
sub
adc
js
jns
jno
dec
fnsavew
es
and
mov
ins
xor
adc
leave
test
jl
adc
cmp
xor
fistp
or
sahf
std
std
(bad)
xchg
mov
jo
test
xor
(bad)
jmp
iret
push
mov
je
xchg
or
cmc
stc
dec
dec
test
out
(bad)
pop
cld
cdq
xor
test
(bad)
xor
pop
stos
push
cmp
or
outs
or
push
out
xchg
push
test
test
and
in
(bad)
push
fisubr
mov
pop
push
jae
xchg
inc
jo
jl
ret
dec
hlt
mov
loope
fnsave
inc
pop
adc
push
pop
out
sahf
add
fs
nop
jnp
addr16
mov
mov
inc
push
pop
jmp
pop
outs
test
stos
mov
scas
movs
push
ret
mov
sar
cmp
or
lds
lea
inc
imul
mov
jae
jg
popf
add
or
into
lahf
dec
int
sbb
sbb
loop
fucomip
push
aas
pop
scas
sub
or
sar
push
xor
aaa
mov
sub
inc
repz
(bad)
das
fs
jmp
and
dec
leave
xor
pop
or
ja
add
jb
ds
cmp
fmul
inc
cld
push
sbb
jbe
jmp
shl
cvtdq2ps
or
sbb
sbb
inc
hlt
out
or
xchg
je
xchg
fs
fisubr
stos
mov
mov
push
dec
test
hlt
push
sub
or
cli
repnz
jecxz
call
stc
(bad)
mov
cmps
movs
in
mov
mov
repnz
push
mov
sbb
mov
adc
ins
movs
push
int
daa
push
mov
mov
fdivr
std
fnsave
dec
es
std
aam
cli
cmp
dec
cdq
jge
cmp
outs
cwde
lods
and
push
pusha
cmps
jmp
sti
jno
mov
pushf
sbb
daa
sub
pmullw
in
inc
sbb
repnz
mov
cmp
dec
cmp
ins
iret
xchg
add
fisubr
int3
dec
mov
jge
mov
ja
cmps
test
add
leave
rcl
xchg
lahf
call
jbe
fimul
fwait
xchg
mov
sbb
leave
lods
inc
or
(bad)
mov
inc
shl
in
pop
sub
inc
out
imul
add
(bad)
loope
clc
sub
sbb
js
lods
dec
test
loope
jbe
push
xor
in
and
cmp
in
fcomp
sti
test
pop
popa
or
cmp
lods
mov
das
cli
or
jne
fild
jae
lods
test
dec
fmul
dec
cmp
mov
add
pop
jg
push
cmp
jl
xor
mov
add
dec
add
div
es
jmp
push
lods
xor
jbe
or
imul
lods
mov
dec
dec
pop
in
mov
adc
jns
inc
or
mov
push
sbb
aaa
ins
imul
xchg
push
outs
(bad)
sub
adc
sbb
stc
inc
xchg
dec
pop
dec
sti
adc
movs
pusha
imul
push
fs
jge
not
fwait
jae
add
std
hlt
cdq
xchg
mov
adc
mov
daa
call
cmp
mov
mov
idiv
shl
ret
retf
jo
fbstp
mov
rcr
or
addr16
mov
call
pop
xor
retf
fld
and
or
mov
sbb
mov
hlt
add
sti
rcr
sbb
jp
adc
fisubr
add
xchg
aam
jno
popa
cmps
xchg
mov
mov
popa
sbb
pop
adc
jb
fistp
sub
cmp
(bad)
(bad)
out
out
inc
popf
fcomp
clc
push
push
cli
mov
nop
add
std
in
xlat
add
inc
xor
jns
stos
out
dec
or
xchg
inc
stos
mov
jno
or
pusha
(bad)
ss
pop
std
inc
aad
ins
push
into
push
ds
idiv
ins
cmp
shl
repnz
inc
icebp
jg
push
push
cmp
mov
push
mov
mul
sahf
fwait
sbb
jmp
sbb
dec
icebp
fwait
retf
stos
dec
test
lahf
aaa
jp
fmul
jns
test
jecxz
push
in
pop
je
dec
fisttp
(bad)
(bad)
das
pop
aas
push
fld
pop
push
add
(bad)
mov
gs
inc
xchg
out
int
mov
mov
test
stos
mov
fidivr
es
into
dec
out
rcr
push
ficomp
xor
pop
or
cmp
sti
mov
mov
out
xchg
pop
cmovs
dec
int3
adc
adc
xchg
mov
lahf
test
push
and
sbb
push
in
xchg
cmp
sub
inc
aaa
loope
in
pop
aad
mov
cmps
mov
inc
push
ins
sbb
jle
jl
push
out
ja
xchg
scas
call
outs
push
fld
add
sub
mov
jb
das
loop
xchg
jle
out
mov
adc
pop
hlt
inc
aas
adc
pop
jns
out
cmovae
and
test
push
lods
inc
jbe
fwait
ins
and
xor
ret
jle
push
test
lods
sbb
movs
xchg
(bad)
je
sbb
mov
fsubp
mov
cmp
sbb
mov
adc
inc
sbb
loop
call
push
adc
xchg
je
cmp
pop
fdiv
cmp
imul
loopne
dec
cwde
adc
imul
sti
xchg
in
fldcw
inc
stos
inc
sub
stos
shr
aas
xlat
js
add
xchg
js
xlat
(bad)
push
aam
lfs
aaa
ins
or
add
and
fsubr
xor
adc
inc
movs
sbb
cmp
not
out
mov
pop
fadd
ret
call
lds
dec
jecxz
bound
mov
and
out
and
outs
jb
jp
mov
mov
test
cmp
inc
fsub
out
repnz
push
das
sbb
aaa
mov
cmp
scas
icebp
test
and
or
addr16
push
and
sbb
add
sbb
aas
popa
jecxz
inc
cmp
mov
lods
jmp
add
(bad)
repz
or
fsub
out
shl
cs
push
cdq
and
fs
cli
call
(bad)
not
dec
xlat
pop
repz
fcomi
mov
addr16
aaa
stos
loope
mov
sbb
sbb
stos
inc
jecxz
dec
inc
jg
add
hlt
(bad)
xor
or
fsubp
dec
in
test
push
mov
fsubr
popf
jg
lods
and
retf
mov
jo
pop
cmp
dec
shl
jmp
cmc
aad
arpl
lahf
sub
xor
out
xchg
scas
sub
fwait
add
jno
inc
pop
mov
mov
es
mov
xchg
out
inc
and
shr
xchg
in
mov
pop
rcr
into
add
dec
xor
pop
leave
sub
xchg
stos
jne
leave
dec
add
and
retf
loope
retf
loopne
mov
pop
adc
cld
leave
(bad)
and
push
daa
daa
popf
ja
push
lock
cmps
sbb
fwait
out
pop
dec
test
cmp
push
out
call
adc
into
jno
inc
cwde
clc
xchg
vmwrite
iret
push
mov
loop
repz
loop
ins
cmp
jl
fisub
mov
stos
sbb
ja
dec
jle
xor
and
cmp
mov
aam
fadd
popf
ds
call
neg
or
pop
pushf
adc
push
(bad)
sar
jb
adc
xor
aaa
aaa
jp
push
outs
in
mov
test
inc
outs
cs
test
mov
das
outs
add
cmps
movs
cmp
add
shl
or
aad
push
dec
hlt
out
push
jae
sar
pop
icebp
sbb
hlt
dec
cmp
sub
aaa
ds
add
adc
fistp
sub
(bad)
stc
sub
mov
(bad)
mov
mov
cmps
das
sbb
enter
enter
jmp
mov
stc
adc
sbb
add
xor
not
ror
mov
inc
cmc
cmps
ins
ror
(bad)
maskmovq
not
imul
scas
dec
call
add
mov
and
cs
mov
jae
stos
mov
dec
js
pop
push
dec
or
push
loope
ror
into
jo
xchg
das
xchg
push
dec
add
push
and
adc
cmp
repz
out
(bad)
nop
aad
inc
add
cmp
cmps
fistp
out
and
mov
loope
nop
rcr
repz
cmp
push
les
jecxz
test
iret
jnp
jg
fsub
ror
lahf
xlat
add
retf
cmp
leave
jb
mov
mov
not
cmp
stos
cli
and
fst
sub
fdiv
aaa
xchg
dec
fbld
mov
hlt
neg
push
repnz
xlat
sbb
retf
dec
mov
jl
cmps
adc
(bad)
(bad)
call
push
dec
leave
test
call
popa
mov
push
pusha
pop
sub
add
das
sar
(bad)
test
dec
xor
sbb
repz
mov
or
xchg
cmp
inc
(bad)
out
dec
outs
add
imul
(bad)
or
imul
mov
sahf
inc
ins
mov
sti
movs
addr16
inc
mov
mov
sti
in
cld
pop
dec
movs
jne
push
pop
dec
cmp
fist
test
mov
mov
push
aam
add
dec
iret
sbb
sbb
stos
cmc
dec
sti
ficomp
cmp
(bad)
out
ret
cmp
pop
mov
mov
lock
inc
pop
jmp
jl
ds
or
sbb
add
pusha
cmp
sbb
repnz
xor
les
xchg
mov
mov
mov
jmp
call
xor
ror
jmp
sub
mov
inc
mov
(bad)
int
mov
dec
push
mov
shl
push
add
fistp
aaa
aam
mov
cld
mov
aaa
not
ror
adc
test
hlt
imul
sahf
inc
cld
mov
sbb
in
sbb
push
aaa
xchg
out
gs
mov
jmp
push
add
(bad)
pop
test
clc
jle
cmp
outs
sub
and
in
mov
sbb
add
test
(bad)
mov
div
fisub
mov
test
(bad)
pop
dec
inc
movs
jne
xor
push
mov
movs
xchg
ficom
sti
mov
mov
mov
mov
xor
nop
fyl2x
sub
jl
ror
nop
in
push
call
in
xchg
lahf
movs
jne
ins
jg
outs
fisub
imul
cmp
repnz
ja
mov
cmps
xor
inc
out
xchg
leave
data16
pop
sbb
and
or
add
inc
mov
ror
mov
xchg
xchg
in
(bad)
int
dec
push
leave
(bad)
and
jl
imul
mov
in
xchg
xor
scas
push
ret
adc
(bad)
mov
sbb
(bad)
imul
jb
push
sti
cli
pop
fldpi
loopne
sbb
pop
cmp
dec
and
add
stc
xor
inc
mov
stos
and
ss
aas
pop
sub
cmps
add
inc
xor
fnsave
mov
add
fmul
outs
cmp
xor
jae
paddb
adc
sub
dec
pop
push
inc
cmp
mov
push
in
mov
rcr
lods
mov
cmp
lods
(bad)
push
xchg
fcom
xor
mov
pop
(bad)
xor
loope
ret
inc
ds
lods
lods
dec
mov
(bad)
sti
std
add
jo
adc
sub
sbb
jno
sbb
sub
add
jb
xchg
adc
int
in
retf
mov
ffree
imul
sub
es
adc
inc
jg
dec
dec
mov
imul
rep
xchg
sub
push
mov
leave
stos
test
mov
add
push
mov
jo
sar
sbb
push
and
adc
mov
in
push
mov
inc
(bad)
dec
pop
push
cwde
lahf
mov
jns
pop
in
pushf
lds
cld
inc
hlt
out
push
adc
sbb
sub
mov
cmps
sub
cwde
xor
xor
sbb
inc
and
add
xchg
push
icebp
add
ror
imul
sub
push
jns
or
lock
and
lock
retf
dec
psubsb
lea
sar
ja
sbb
add
retf
fucom
repz
sub
xor
fstp
push
cmps
aaa
dec
jno
hlt
cmp
sub
xchg
fsub
std
in
sar
fst
xor
and
test
sbb
add
or
into
(bad)
rol
and
std
(bad)
icebp
lea
leave
shl
fsubrp
mov
mov
pop
int3
stos
push
mov
mov
(bad)
jmp
pop
movs
enter
jnp
sub
mov
sub
std
in
rcr
mov
loope
outs
jae
dec
sar
adc
and
call
adc
cs
sub
sub
mov
push
daa
in
jl
or
sub
cmp
test
push
mov
(bad)
not
int
sbb
scas
jno
jo
mov
jmp
xchg
push
popf
out
cmps
push
fnsave
sbb
dec
das
mov
sub
std
(bad)
icebp
movs
lock
push
jb
jecxz
test
ins
xor
and
mov
and
bound
dec
xlat
call
or
lahf
test
push
inc
cmps
stos
sbb
add
in
or
dec
inc
cmp
pop
mov
gs
and
cmp
xchg
inc
dec
ret
or
test
sub
or
jbe
daa
mov
cwde
fcom
repz
xchg
xchg
cmc
sar
imul
cmp
hlt
mov
push
loopne
(bad)
es
mov
jmp
loope
or
scas
rcr
pop
inc
std
pop
cmps
ret
xor
lds
push
xlat
out
test
fild
lods
push
and
add
pop
test
or
sbb
mov
xchg
mov
inc
fwait
cmp
xchg
or
aaa
int3
mov
int3
add
stos
push
jecxz
add
pushf
iret
loopne
xchg
mov
cmc
mov
push
push
(bad)
xchg
jnp
add
sbb
adc
add
cs
xchg
sahf
inc
jnp
jg
sbb
pop
mov
daa
mov
pop
(bad)
outs
dec
mov
mov
cmp
(bad)
mov
push
pop
sub
cli
pop
dec
sub
mov
int3
nop
inc
push
push
cmps
cs
or
sub
cmp
(bad)
fcomp
push
pop
sbb
mov
js
js
mov
add
xchg
xor
push
sub
jae
inc
out
nop
test
and
mov
cmp
adc
adc
mov
pop
rcl
pop
fimul
mov
outs
adc
mov
rcr
xchg
cmp
cmc
ins
mov
fnstsw
addr16
mov
pusha
and
push
pop
mov
les
clc
sbb
mov
aas
mov
ins
mov
or
pushf
dec
push
mov
stos
pushf
jge
jae
aam
sub
jg
js
adc
dec
repz
inc
mov
dec
sahf
cmps
or
test
inc
xor
fadd
nop
popa
inc
push
sbb
sbb
mov
sbb
(bad)
lds
jbe
adc
push
xchg
and
loopne
cmps
stos
aas
push
mov
test
out
ds
movs
fdivr
pop
cwde
adc
fwait
aad
mov
enter
pop
cmp
xchg
lahf
ds
cmp
jne
cmp
xchg
aad
xlat
adc
imul
in
outs
hlt
lds
bound
mov
xor
adc
xchg
mov
sbb
mov
cmc
std
mov
div
aad
pop
fiadd
cmp
dec
sbb
adc
fscale
jecxz
jge
stc
shl
pushf
outs
jg
mov
mov
sar
std
cmps
lock
adc
adc
jmp
scas
pop
cld
jmp
test
dec
mov
jne
retf
cmp
fld
mov
mov
test
and
inc
push
sbb
ja
jnp
pop
loop
in
fdivr
lahf
push
stc
pop
pop
xchg
xchg
sub
inc
mov
pop
not
jge
xchg
xchg
iret
jno
jmp
pusha
es
push
mov
or
xor
fbld
call
push
test
pop
sbb
jmp
int
push
and
out
push
lahf
jge
sub
xor
stos
stc
mov
cmps
xor
dec
shl
rcl
or
cmc
xchg
pop
repz
xor
xchg
dec
push
sti
and
pop
mov
pop
xor
je
lahf
mov
pusha
cwde
imul
dec
mov
rcl
add
imul
mov
jl
dec
push
add
and
add
push
jb
sbb
dec
call
cmps
push
inc
xchg
xor
(bad)
adc
inc
sti
cmc
push
mov
xlat
adc
fwait
ins
shl
bound
in
rol
lods
aam
sub
adc
cmp
out
xor
inc
ror
cs
inc
(bad)
jb
cmp
xchg
cmps
sbb
cmp
cmp
mov
lwpval
adc
push
ds
mov
cdq
mov
(bad)
lds
adc
sub
add
test
cmc
add
push
push
(bad)
aam
into
mov
scas
mov
push
inc
sti
cmps
push
aad
dec
cld
add
cmp
leave
lods
mov
dec
(bad)
cmp
ja
cmp
xor
inc
inc
sub
loop
(bad)
mov
outs
cmp
mov
xor
test
add
jp
jno
stos
test
ds
xor
xchg
fist
cmc
add
ds
cs
mov
add
push
xchg
jge
int3
pop
scas
inc
call
jns
jp
cmp
jge
dec
js
ret
call
mov
or
cmp
mov
xchg
adc
xor
ds
push
xchg
mov
in
aaa
xchg
loope
lock
cwde
dec
jae
(bad)
je
push
test
sbb
into
pusha
(bad)
dec
pop
ins
mov
daa
jae
dec
add
aad
sbb
and
fmul
pop
mov
mov
mov
pop
(bad)
or
(bad)
mov
push
lahf
dec
xchg
mov
stos
lds
jbe
fistp
ss
add
scas
stos
scas
push
rcr
stc
mov
enter
lahf
jae
add
retf
popa
pop
ja
into
fbld
cli
jb
xchg
imul
ds
aam
xchg
imul
pop
pop
(bad)
pop
sti
ja
movs
or
cs
je
and
je
data16
pop
cmp
outs
adc
sbb
(bad)
mov
pop
sbb
add
push
cs
jge
enter
ret
shr
dec
jge
enter
loop
hlt
or
dec
stc
sahf
xor
cmp
jmp
lds
(bad)
fldenv
xchg
mov
sub
pop
and
aam
imul
fistp
add
xor
and
sub
xchg
mov
sbb
lea
fbstp
pop
loope
mov
out
idiv
inc
std
xchg
jbe
lahf
aam
cli
and
mov
out
sbb
call
out
outs
out
int3
adc
push
or
sti
lods
mov
dec
icebp
in
and
xor
jmp
lea
cs
repz
test
xor
cmp
push
jge
dec
push
loopne
adc
xchg
fisub
add
inc
ds
dec
add
jne
popa
jnp
push
mov
dec
xor
gs
shr
das
iret
push
sbb
mov
xchg
push
jp
in
or
fnstenv
idiv
sbb
cmp
jae
mov
push
xor
retf
jo
(bad)
dec
pop
out
mov
stos
pop
ret
sub
call
sbb
and
add
daa
mov
and
add
adc
arpl
push
das
or
lods
xor
inc
adc
in
movs
loop
pop
mov
loopne
aad
xchg
call
cmps
jmp
adc
out
jecxz
jmp
out
mov
pop
fnsave
es
xchg
xchg
int
pushf
ss
add
clc
aam
xchg
push
adc
(bad)
pushf
in
sar
inc
stos
mov
cmp
sbb
pushf
pushf
je
loopne
pop
lds
xchg
push
jp
inc
leave
inc
pop
cmps
loope
ficomp
xchg
sub
xchg
or
popa
cs
pop
nop
pop
add
test
sub
fcomp
shl
js
adc
xchg
sub
push
mov
add
or
adc
cmp
jl
dec
add
test
mov
fdivr
mov
and
push
or
and
call
stc
sahf
cmp
imul
lea
iret
cmp
sub
out
mov
mov
shl
ror
mov
aam
pop
pop
cmps
push
adc
popf
inc
push
pop
pop
pop
mov
add
repnz
in
ret
lahf
or
sbb
mov
into
sti
fcomp
int
repnz
push
push
mov
sti
inc
xchg
mov
call
adc
ret
push
fsub
rcl
dec
pop
xchg
add
sbb
adc
sti
push
pop
cli
aas
popf
jb
cld
xor
inc
jge
fdivr
into
pop
pop
mov
mov
xor
retf
pop
(bad)
and
mov
lods
pop
std
mov
cmps
outs
mov
aaa
xor
xor
test
pop
and
or
jl
arpl
xor
in
cmps
or
pcmpgtd
pop
jecxz
mov
push
xor
sub
rcl
jnp
rcl
xchg
adc
xchg
mov
mov
push
bsf
xchg
mov
(bad)
dec
or
ror
jmp
pop
pop
mov
jae
xchg
shr
ss
or
and
dec
or
mov
mov
jmp
sar
test
inc
jle
pop
cmp
mov
pop
and
jle
adc
xchg
sub
cmp
cmp
into
xchg
imul
shr
mov
test
jno
mov
dec
xor
dec
and
cs
leave
add
sahf
jne
jne
sbb
dec
xchg
sub
cmp
movs
or
mov
mov
add
out
cdq
cmp
cwde
jnp
fwait
cmp
jle
add
xchg
addr16
popf
sub
test
jb
int
in
arpl
pop
fcomp
stos
pop
icebp
fidivr
clc
pop
(bad)
xor
xor
(bad)
daa
mov
movs
jne
imul
in
shl
adc
or
(bad)
push
mov
xchg
rol
test
jp
shl
push
mov
adc
idiv
out
dec
iret
fucomip
ja
int3
retf
not
sbb
push
sub
in
addr16
test
push
lock
(bad)
in
scas
fwait
je
cs
mov
sbb
push
and
cmps
adc
cdq
push
inc
mov
(bad)
mov
ficomp
ja
outs
mov
push
dec
sub
out
scas
aas
loopne
add
out
icebp
test
shr
mov
jecxz
add
jmp
mov
cmps
pop
(bad)
call
sub
pop
arpl
daa
in
fmul
sbb
in
sub
stc
adc
mov
jno
xor
sub
add
push
iret
in
leave
(bad)
xchg
adc
das
or
sysret
cld
xchg
shl
adc
xor
cwde
sub
sbb
jg
adc
add
ret
cmc
ins
outs
or
(bad)
and
sbb
xchg
out
xchg
sbb
jmp
lds
jg
addr16
test
mov
push
or
sub
stos
sti
popf
pop
fild
mov
pop
nop
xchg
sar
push
ret
push
movs
mov
aam
rol
mov
mov
retf
cmp
mov
cmp
xlat
jno
xor
sbb
lea
mov
es
push
mov
popf
dec
dec
sub
pushf
imul
out
xor
xchg
mov
dec
pop
movs
mov
lds
pop
pop
xor
cmps
fbstp
outs
clc
ja
lock
mov
jns
xchg
mov
daa
shr
or
adc
rol
lods
popa
lahf
cwde
push
ins
and
je
(bad)
and
adc
mov
xor
mov
js
ss
inc
aad
outs
jno
jmp
sbb
push
neg
fs
loope
leave
add
pop
xor
adc
xor
gs
outs
dec
inc
aam
and
cmp
movs
sbb
cwde
sub
nop
test
mov
or
dec
retf
xchg
fstp
push
test
hlt
mov
push
arpl
jbe
retf
mov
fdiv
jbe
and
and
shl
js
adc
mov
inc
mov
mov
xchg
adc
rcl
adc
movs
and
fcmovnbe
imul
dec
paddusw
push
mov
test
aad
inc
add
cmp
gs
lea
fiadd
pop
dec
fs
jae
not
adc
mov
test
aas
mov
or
out
mov
mov
movs
fldl2e
pop
xchg
add
ret
test
push
xor
jae
and
mov
movs
(bad)
shl
mov
shl
xor
sub
xor
mov
inc
dec
call
push
mov
fadd
pop
mov
scas
out
xchg
inc
jbe
mov
xchg
repnz
push
cs
cdq
mov
std
push
xor
dec
sub
sti
scas
mov
inc
data16
repz
push
mov
and
or
cmps
lea
pop
add
jl
cmc
push
sbb
ds
(bad)
cdq
mov
daa
fidivr
pop
and
outs
mov
dec
adc
mov
movs
add
and
mov
test
jnp
and
pop
dec
adc
mov
sub
cmp
into
sub
cs
outs
mov
add
mov
jle
sti
sar
or
(bad)
mov
ins
std
ins
test
mov
mov
push
xchg
icebp
cs
jns
nop
pop
ss
rol
xor
push
cmc
popa
push
scas
test
push
push
cdq
or
sbb
inc
dec
div
test
enter
push
xor
jnp
setns
push
aaa
mov
dec
push
jnp
push
aad
fbstp
rcl
ja
xor
into
add
icebp
les
dec
jmp
mov
in
iret
pop
push
fsub
and
retf
repz
push
add
out
push
out
lods
pop
mov
push
repz
int
jae
test
or
cwde
push
or
into
or
(bad)
xchg
aas
jmp
dec
and
test
lods
sbb
push
in
lahf
mov
ja
out
cmc
jle
push
jle
in
cmp
dec
popf
push
les
jno
sbb
cld
rcl
in
jecxz
jp
mov
adc
test
xor
test
daa
jle
popa
dec
xor
mov
fwait
push
shl
pop
mov
pop
adc
ins
mov
loopne
sbb
sbb
fcomi
(bad)
test
icebp
mov
cli
mov
fmul
ror
or
cmp
add
pop
std
push
pusha
xor
mov
lahf
push
and
jg
pop
stc
xor
sbb
push
pop
inc
cwde
cmp
das
push
adc
adc
dec
add
and
xor
sahf
mov
sbb
jns
inc
mov
mov
push
lahf
push
xchg
(bad)
adc
in
add
popf
dec
fs
push
push
add
(bad)
sub
adc
ins
pushf
xchg
mov
jl
mov
out
mov
movs
icebp
shufps
mov
xor
cmp
repz
loopne
or
sahf
sub
pop
pop
mov
retf
sub
pop
dec
mov
int
dec
aas
xchg
pop
fsubr
sti
aad
inc
imul
xlat
mov
outs
lods
xor
enter
or
out
retf
sti
shl
add
icebp
(bad)
or
ins
fmul
fnsave
sbb
xchg
push
mov
jmp
movs
test
(bad)
repz
pop
call
xor
idiv
push
pop
test
fadd
inc
lods
adc
and
loop
adc
ror
cli
sub
push
push
mov
push
and
sub
sbb
mov
dec
jecxz
xchg
mov
push
test
lahf
pusha
jno
je
call
clc
xchg
out
pushf
inc
pusha
inc
call
pusha
dec
ds
push
sub
and
dec
out
lock
sar
adc
fwait
gs
in
out
ins
jns
addr16
pushf
fbstp
push
test
enter
xchg
(bad)
loopne
sub
in
movs
cmp
clc
loop
mov
pop
aam
jp
jmp
jecxz
ror
add
sti
fstp
jne
push
movs
add
adc
dec
movs
jmp
scas
jae
ror
dec
scas
lods
push
inc
les
addr16
aam
fs
fnstsw
enter
enter
bound
pop
pop
sub
popf
fbstp
mov
fimul
dec
test
test
repz
sar
and
hlt
nop
mov
out
faddp
jns
in
sub
xor
add
loopne
push
and
dec
jno
push
jns
ins
pop
data16
add
out
adc
das
add
dec
and
mov
rcl
and
in
pop
ins
mov
ins
mov
aad
fld
add
in
lock
in
sar
sbb
gs
sti
in
mov
int
jg
jne
jmp
jg
fwait
push
cld
xchg
daa
cmp
or
and
inc
mov
xchg
pop
fisttp
imul
push
mov
jecxz
cmps
pusha
fcom
and
stc
add
sub
fidiv
pop
add
(bad)
push
add
shl
scas
fbstp
xor
sar
add
inc
mov
push
test
outs
or
fnstsw
mov
and
mov
scas
iret
adc
retf
sahf
cmps
inc
ficomp
and
sub
pop
add
shr
cld
xor
dec
outs
call
push
mov
xchg
cmps
and
(bad)
mov
test
push
jle
xchg
xor
add
fst
fcmove
retf
out
fdiv
pusha
not
mov
dec
aaa
mov
mov
mov
test
retf
cmc
(bad)
and
pop
jmp
fwait
rol
mov
ror
mov
pop
ret
mov
cwde
shr
xor
shr
mov
sbb
inc
(bad)
xor
jle
pusha
xlat
ins
cmp
add
arpl
fldcw
mov
lds
inc
push
daa
bound
daa
push
in
inc
aad
mov
adc
or
sahf
jb
leave
cmp
mov
or
xchg
test
inc
jne
jmp
pop
adc
popf
mov
(bad)
rcl
cmps
ror
aaa
push
rcl
das
ins
int3
xor
inc
sahf
arpl
cld
sub
add
add
pop
jmp
xlat
or
cmp
cmp
repnz
pop
(bad)
dec
jne
cmp
add
jno
retf
and
in
leave
lds
push
inc
out
loop
jb
loop
(bad)
fdiv
xchg
adc
movs
jo
sbb
dec
jmp
or
jmp
in
dec
pop
ins
or
pop
fwait
push
pop
pop
add
dec
cmp
movs
adc
push
jns
mov
(bad)
(bad)
cwde
lods
add
sbb
fidiv
fbld
clc
sti
int3
pop
scas
pop
xchg
adc
inc
add
mov
mov
push
jnp
(bad)
into
inc
cmp
xor
xlat
add
push
fs
or
rcl
pop
dec
jb
sbb
or
lds
cmps
pop
or
add
out
mov
lds
adc
mov
pop
push
outs
sahf
scas
cmp
clc
jns
inc
fxch
outs
sahf
lock
mov
or
aam
push
sbb
test
pop
dec
ds
lea
cmps
push
xor
popf
push
mov
inc
into
out
shl
adc
dec
sub
pop
jns
xor
fdivr
rcl
push
fst
popf
cmc
ja
and
cdq
popf
ret
xlat
mov
sub
out
test
aaa
scas
pop
mov
dec
sub
test
call
stc
pushf
lahf
or
je
mov
(bad)
mov
inc
cmp
stos
jmp
retf
loop
dec
and
sbb
fidivr
sbb
and
jno
hlt
cdq
push
jmp
jne
xchg
push
pop
jmp
test
pusha
lds
inc
jecxz
loope
cdq
out
fsubr
push
mov
cmps
sub
dec
(bad)
cmp
fucomi
(bad)
jo
add
les
pop
aam
fsub
pusha
scas
pop
fadd
push
pop
sub
adc
mov
gs
xchg
sub
dec
inc
movs
adc
jmp
in
data16
ins
(bad)
xchg
xor
daa
dec
lods
xor
mov
fwait
int
leave
jp
cld
mov
cmp
mov
mov
icebp
scas
test
in
sub
test
and
aad
jnp
ret
add
ins
repnz
xor
adc
stos
cmc
mov
sub
loop
adc
mov
xchg
stos
adc
or
pop
pop
call
sbb
push
jge
aaa
inc
or
in
sub
push
sub
fwait
rcl
jns
(bad)
popa
in
lea
cdq
pop
shr
mov
and
pop
call
xor
leave
add
repz
adc
mov
out
pop
int
cmp
rcl
mov
push
out
jle
pop
pop
adc
push
mov
push
dec
cld
ins
out
sub
int3
inc
cmp
mov
(bad)
or
adc
into
sub
loop
cwde
repz
repnz
int
(bad)
dec
jge
push
dec
or
fmul
xchg
outs
mov
mov
add
movs
mov
ins
loopne
pop
sub
mov
push
mov
ins
loopne
imul
mov
jmp
outs
test
mov
popf
imul
dec
outs
adc
(bad)
sub
push
sub
add
xchg
stos
js
data16
dec
aad
stos
sahf
in
xlat
jp
push
sbb
ficom
xchg
xor
xchg
sbb
sbb
sti
jbe
lea
sub
sub
sbb
sub
clc
mov
cld
int3
mul
pop
xchg
mov
mov
cmp
cmp
or
out
dec
mov
sbb
mov
add
loopne
imul
shl
inc
jae
daa
(bad)
jmp
in
retf
xor
(bad)
mov
mov
pusha
sbb
pop
inc
imul
sub
pop
(bad)
jle
lea
and
mov
add
movs
jbe
movs
push
div
sub
test
xchg
rol
lods
ret
and
xchg
out
mov
(bad)
mov
jle
xchg
cmp
push
or
push
jle
mov
fmul
jb
ss
mov
sub
cmp
fist
mov
fdiv
mov
bound
es
cwde
pop
adc
loop
out
jns
or
mov
(bad)
pop
sub
addr16
stc
sub
or
imul
dec
daa
retf
lahf
and
inc
sub
(bad)
and
rcl
shl
jne
mov
adc
inc
push
or
test
fwait
jecxz
xchg
and
jge
mov
push
cmp
fs
mov
dec
sbb
sub
and
jo
out
xor
mov
cmp
(bad)
dec
adc
and
xor
daa
jmp
add
pop
push
mov
push
call
mov
aam
imul
xor
xchg
rcr
popa
aaa
in
aam
or
adc
jbe
jae
aaa
fwait
and
sub
icebp
call
ss
mov
jl
fwait
mov
mov
adc
sbb
pop
mov
cmp
ror
xlat
(bad)
out
arpl
sbb
jo
addr16
fwait
into
(bad)
in
xchg
and
add
mov
inc
add
inc
stos
test
aam
sbb
ja
jne
xchg
in
xchg
test
pop
out
sub
ror
in
retf
push
inc
pop
jns
pop
mov
std
lods
dec
test
(bad)
sbb
in
rcl
fdivr
mov
scas
into
in
jno
push
ds
push
adc
pop
pop
xlat
push
xchg
dec
jno
jle
arpl
(bad)
imul
icebp
pop
loop
jae
shr
test
and
sbb
imul
cmp
in
lock
es
fdiv
call
xor
in
in
add
shr
mov
adc
cld
xor
add
jmp
in
call
and
cmps
ret
aam
retf
setns
out
dec
xchg
pop
daa
call
sti
and
aad
cmp
pop
lods
leave
pop
cdq
xchg
dec
sub
inc
mov
jmp
mov
rcr
cs
cmp
lods
std
and
(bad)
inc
in
mov
popf
xor
cwde
cmp
sub
call
jne
dec
fld
test
or
push
pop
ins
repnz
adc
jb
test
ds
scas
mov
jne
sub
add
or
sahf
test
sbb
push
imul
and
mul
jb
jo
or
out
add
scas
mov
xchg
ret
outs
pop
and
cmps
jo
div
mov
(bad)
adc
iret
jecxz
push
or
mov
xchg
inc
or
mov
loope
push
int
test
pop
xor
fild
fild
shl
and
mov
mov
mov
out
dec
sti
pop
aaa
adc
faddp
(bad)
imul
cmp
push
mov
add
mov
not
mov
push
dec
push
mov
adc
lods
arpl
movs
xor
xor
jl
scas
and
dec
fistp
dec
dec
and
mov
mov
jp
imul
outs
xchg
adc
and
mov
mov
xchg
repnz
mov
shl
aas
inc
cmp
xchg
inc
out
push
sbb
lea
lods
sahf
retf
xor
or
stos
push
fsubr
mov
inc
sahf
js
retf
rol
mov
pusha
mov
pop
inc
mov
cmc
and
popf
fs
fst
sbb
sub
jmp
repnz
daa
mul
mov
sbb
cmc
adc
scas
(bad)
sub
ret
adc
push
movs
fs
add
xlat
in
lahf
or
dec
cmp
xchg
jno
dec
or
cmp
jbe
lods
sub
es
bound
out
jl
mov
sub
push
call
cmc
mov
or
test
lods
inc
ficomp
sub
adc
add
add
je
jg
dec
shr
mov
call
cmp
scas
clc
enter
mov
dec
(bad)
mov
cmps
in
xor
adc
lods
jl
mov
sub
stc
cld
in
fwait
aad
inc
mov
add
loope
jmp
mov
or
or
jp
pop
add
stos
push
shl
dec
dec
jbe
sbb
ret
cwde
mov
xor
inc
lea
ins
stos
inc
call
dec
imul
in
add
pop
imul
push
(bad)
(bad)
inc
mov
pop
lahf
push
addr16
dec
jecxz
jo
cwde
ss
fcomp
dec
jmp
push
mov
ret
add
pop
mov
add
xchg
gs
iret
dec
pop
retf
push
out
sub
xchg
scas
sbb
jmp
mov
into
mov
adc
push
mov
pop
repz
mov
int3
inc
iret
inc
mov
(bad)
les
(bad)
jmp
inc
push
cmp
inc
xchg
lods
aas
inc
mov
out
mov
mov
jecxz
fmul
inc
int
and
retf
dec
mov
cmp
push
add
and
ficomp
mov
adc
mov
cwde
fisttp
stos
ins
retf
pop
les
enter
mov
mov
fsub
aad
mov
pop
cwde
pop
int
lahf
jno
(bad)
cli
(bad)
pop
out
(bad)
pop
ret
xchg
pop
sahf
cmp
inc
test
ds
jae
test
cmps
call
call
jno
cmps
mov
aad
push
cld
mov
xor
out
mov
test
aam
(bad)
fnstenv
imul
div
push
sbb
je
fwait
dec
xchg
out
push
cmp
add
in
rol
pusha
in
sti
mov
loop
cdq
nop
cmp
mov
add
cdq
shl
div
xor
arpl
xor
loope
or
scas
add
(bad)
aam
out
enter
scas
aas
fld
data16
jmp
push
in
and
ins
push
push
xchg
test
sbb
push
nop
mov
cmp
add
sub
cdq
or
enter
(bad)
call
adc
adc
sbb
jo
or
xor
shl
pop
(bad)
push
jb
xor
jmp
js
fcomp
sti
add
pushf
push
mov
and
adc
and
mov
imul
movs
nop
shl
xor
jle
add
test
adc
shl
addr16
call
push
push
mov
mov
ret
fcom
cmc
fwait
mov
jmp
dec
cs
je
push
ss
xor
fs
lea
ins
cmp
xchg
or
and
nop
mov
pusha
ret
dec
pop
(bad)
adc
and
jb
sar
test
int
xchg
call
push
xor
mov
into
js
popa
and
int
pop
lds
sub
adc
push
sar
xchg
and
ss
in
mov
dec
xchg
xchg
add
aaa
xor
and
dec
mov
jg
rol
inc
rol
sbb
lahf
cmp
test
in
or
jge
or
inc
or
pop
push
nop
retf
jo
or
ja
xchg
or
pushf
jl
enter
and
mov
retw
inc
jle
jp
jo
ret
push
push
jle
jo
mov
mov
(bad)
mov
cdq
sar
aas
stos
sahf
sub
not
sub
sar
out
mov
mov
mov
xor
mov
xor
mov
xchg
test
btr
pop
adc
cli
stos
retf
fimul
ins
call
outs
loop
int
dec
dec
push
stos
repnz
jge
clc
or
dec
jns
push
sar
mov
(bad)
pop
jl
cvttps2pi
xchg
pmaddwd
test
stos
aaa
jmp
and
test
pop
clc
in
adc
(bad)
jns
mov
push
and
das
dec
fimul
xchg
call
mov
lock
adc
js
xor
nop
(bad)
enter
jecxz
mov
outs
dec
jmp
iret
movs
sbb
add
cdq
sub
cmp
jnp
sar
ja
jg
mov
adc
xlat
and
add
rcr
stos
fiadd
data16
int3
or
bound
mov
lock
repz
pop
mov
push
pop
popf
xlat
outs
jecxz
adc
or
cwde
xor
ja
xchg
pop
and
lods
stos
push
sahf
push
push
cmps
sub
xor
mov
outs
or
dec
mov
jecxz
mov
or
adc
retf
add
leave
dec
xor
mov
push
add
inc
and
sub
popf
jo
popa
push
loopne
mov
mov
sbb
add
xchg
jecxz
ret
aas
aam
ror
addr16
inc
pusha
cdq
sub
cmp
inc
fld
pop
mov
in
xor
jecxz
dec
lods
(bad)
pusha
push
push
dec
dec
aad
arpl
sbb
es
adc
cmps
sti
xchg
sub
jge
mov
stc
leave
loope
mov
mov
int
add
enter
in
xchg
in
test
lds
jecxz
jg
cmp
fld
outs
sets
xor
cmp
outs
cmp
push
dec
push
adc
and
enter
inc
jo
sbb
stc
sahf
test
jbe
lods
sub
push
mov
sbb
ja
repz
pop
sub
mov
xchg
adc
lds
mov
into
xchg
jp
out
jle
mov
outs
cmps
jo
loopne
pop
jmp
int3
mov
jg
js
rcl
data16
rcl
cmc
adc
lahf
shr
fs
scas
xor
pop
out
int3
pop
sub
mov
popa
aam
jo
cmp
inc
(bad)
imul
(bad)
mov
aam
aaa
test
sbb
xchg
jae
cdq
pop
les
cmps
push
add
mov
or
sbb
inc
mov
in
fsubr
and
ja
leave
ins
add
pop
mov
ds
sub
sbb
dec
popa
sub
addr16
mov
push
inc
xor
jl
xchg
jne
mov
repnz
(bad)
das
fldenv
ins
enter
ret
ss
sbb
iret
mov
sti
loop
pop
lods
push
xlat
jmp
loope
les
sub
sub
addr16
outs
mov
call
inc
in
or
mov
jl
paddsw
dec
jns
lods
rcr
je
pop
push
or
xchg
into
push
jnp
dec
mov
inc
retf
out
pop
aaa
dec
sbb
call
imul
lods
xchg
es
retf
test
pop
dec
imul
jo
jg
push
pop
and
or
stc
imul
lods
stos
out
out
rcl
pop
imul
shl
lock
push
retf
inc
xor
fsub
sbb
adc
jg
xlat
push
push
(bad)
push
mov
mov
push
adc
retf
dec
push
adc
movs
jns
sahf
or
xor
sub
dec
mov
jne
cmp
pop
cmp
fcom
out
jae
outs
in
mov
ss
and
mov
jg
movs
cmp
and
call
pop
jne
out
sub
inc
fstp
jae
inc
push
mov
ret
leave
and
jmp
ja
scas
cmp
outs
std
stc
sub
and
out
mov
daa
rol
std
cmps
sub
push
leave
hlt
push
ins
clc
ret
mov
jne
das
xlat
leave
in
dec
hlt
inc
sbb
push
sub
inc
mov
push
cmp
adc
push
fcomp
test
shr
in
add
xlat
(bad)
test
mov
cmp
xchg
mov
scas
retf
push
cmp
les
xchg
mov
adc
add
or
push
cli
out
and
mov
js
adc
cmc
bts
cmp
inc
sub
jmp
nop
repnz
cmp
pushf
cmp
movs
int3
xlat
mov
sbb
mov
cmps
add
lds
int
sbb
push
inc
gs
jo
and
out
in
push
mov
gs
repz
and
inc
push
ret
pop
dec
adc
push
retf
pop
adc
out
push
jmp
je
in
call
stc
jno
mov
jge
shl
inc
fdiv
xchg
icebp
sar
xchg
pop
icebp
out
aam
jb
cmc
pop
jb
call
push
adc
aas
jmp
dec
lock
jge
sub
sub
mov
and
push
xor
scas
movs
sub
cmp
clc
add
fdecstp
inc
sbb
je
jl
or
enter
retf
test
jno
test
das
lahf
jge
cdq
repz
pop
pop
dec
inc
in
mov
and
icebp
sub
icebp
sub
ret
fisubr
jns
loopne
sub
adc
jl
push
and
push
cdq
out
xchg
pop
les
fadd
(bad)
pop
push
push
rol
xchg
xchg
pop
push
and
jo
add
das
jns
jb
fidiv
add
movs
mov
cmp
dec
fild
inc
in
push
rol
xor
loopne
xchg
scas
shr
or
xlat
and
push
and
outs
ror
retf
or
sub
bound
xor
pop
or
push
movs
sub
jg
adc
jnp
daa
dec
fstp
jns
adc
sbb
push
cmp
mov
fistp
or
mov
xchg
add
sub
mov
(bad)
push
fs
jg
cmp
rcr
pop
adc
cmp
xor
or
xchg
push
shr
fsub
jge
lock
xchg
push
sbb
stos
mov
inc
hlt
cmp
jp
lahf
jle
cmp
sbb
mov
out
pop
fwait
lock
or
retf
jb
mov
pop
add
jp
outs
in
pop
pop
rcl
pusha
cmc
aam
xor
xor
sub
sub
aaa
inc
iret
ret
dec
fistp
cmp
push
lea
mov
scas
cmp
push
and
jmp
icebp
popf
inc
pusha
(bad)
add
dec
movs
push
dec
add
jnp
sub
jg
mov
nop
ins
ror
frstor
rcl
cmp
mov
ret
pop
xchg
std
in
and
add
hlt
mov
lods
out
sbb
cmc
pop
cli
rcr
xchg
movs
inc
movs
fnsave
jb
cmp
test
xor
ja
fucomp
idiv
xor
push
sbb
xor
lock
mov
std
sbb
movs
push
stos
gs
out
into
ins
fcomp
std
ret
sbb
mov
cmc
pop
or
xchg
outs
xchg
mov
call
dec
ror
sub
cwde
imul
fcmovb
adc
call
inc
push
push
xor
icebp
push
xlat
aad
in
ss
leave
push
lea
mov
mov
xchg
sub
cmps
pusha
ds
xor
bound
std
sub
(bad)
pushf
push
xchg
sar
int3
(bad)
and
int3
adc
cmp
gs
gs
xor
nop
out
test
and
call
data16
pop
mov
lea
scas
into
mov
int3
or
and
xchg
movs
xor
loopne
xor
call
lods
sar
adc
xchg
popa
mov
int
sub
popf
arpl
xlat
cmc
jno
arpl
(bad)
mov
jmp
fdiv
sub
pop
cmp
and
mov
jae
mov
aas
or
mov
pop
mov
push
ret
enter
sub
adc
xor
mov
adc
and
retf
mov
std
mov
retf
retf
in
mov
rcl
or
repz
inc
xchg
cmc
mov
jbe
inc
jl
fild
pop
mov
into
add
(bad)
or
call
cli
(bad)
add
cs
ficom
(bad)
inc
add
sub
mov
jmp
push
test
xchg
cmp
and
mov
pushf
add
adc
jl
ror
shr
xchg
mov
xchg
mov
out
das
xchg
cld
lock
xchg
inc
ins
retf
test
mov
inc
mul
cwde
cmc
ja
mov
sti
xchg
sub
pop
pop
or
inc
loope
out
xor
hlt
es
jmp
aam
jne
push
stos
ret
fisubr
retf
retf
pusha
mov
out
sub
or
aam
cmps
mov
sub
xchg
dec
jmp
fbstp
mov
sbb
sub
loope
out
in
fistp
and
das
xor
(bad)
push
push
add
mov
xor
jo
inc
leave
retf
sbb
fbld
adc
push
(bad)
jnp
leave
sbb
jp
mov
lods
pop
ret
pop
fwait
stc
in
xor
out
test
test
and
or
aaa
popf
mov
pushf
repz
adc
jnp
(bad)
in
xor
sahf
mov
mov
jmp
add
mov
cmp
pop
xchg
jmp
movs
jno
int3
fcompp
fadd
push
xchg
jge
clc
xchg
adc
outs
xor
popa
imul
aad
scas
add
adc
imul
or
sub
pusha
add
add
inc
dec
jl
and
stc
ret
int
call
mov
add
jns
xor
sub
pop
inc
pop
sub
jle
out
ss
fsub
sbb
xchg
push
clc
fisttp
jo
sti
mov
pop
push
in
mov
dec
imul
mov
mov
xor
je
iret
xchg
mov
sbb
cmp
mov
mov
push
(bad)
gs
dec
and
mov
(bad)
and
sub
leave
mov
xchg
ds
jmp
jecxz
xchg
inc
out
sub
xor
ins
sbb
mov
sbb
jle
push
pop
imul
push
xor
jmp
test
mov
push
sub
push
cs
gs
les
sub
jbe
inc
sbb
push
popf
cwde
mov
push
lods
jg
std
mov
and
sub
mov
xchg
cmps
bound
mov
or
jl
jno
in
or
jae
gs
stos
rcr
push
inc
inc
push
xor
mov
mov
xor
aam
ins
add
lock
jge
xchg
mov
mov
and
jns
pop
bound
(bad)
sub
fdivp
movs
adc
sub
stos
xchg
dec
mov
cmp
lock
add
loop
mov
pop
adc
mov
xchg
sbb
in
repz
(bad)
rcl
xchg
adc
sbb
jnp
(bad)
add
mov
movs
xor
pusha
pop
and
enter
rcr
scas
repz
pop
mov
inc
shl
mov
mov
dec
xchg
out
or
and
ror
push
add
in
mov
or
scas
cmps
or
jp
out
pop
call
lock
mov
cmp
adc
or
cli
adc
lahf
sbb
pop
cmp
(bad)
jns
(bad)
loopne
fwait
les
jne
or
cmc
and
inc
jnp
js
scas
dec
jmp
cmp
shl
out
mov
push
add
arpl
dec
mov
cmps
dec
xor
popa
enter
test
inc
pop
mov
ds
ror
adc
sbb
fcmovu
mov
lahf
inc
mov
push
(bad)
in
mov
retf
push
xchg
stos
xchg
rcr
ret
jae
push
retf
add
imul
xor
mov
es
outs
sub
push
xchg
dec
jmp
sbb
setae
retf
jmp
test
inc
loope
or
shl
lahf
jmp
sbb
mov
shr
movs
test
shl
pusha
mov
fnstenv
imul
retf
mov
gs
repnz
shl
push
and
mov
lds
adc
xlat
test
jl
ret
imul
imul
mov
outs
jbe
mov
xor
(bad)
mov
add
jge
fimul
push
loop
add
adc
mov
out
in
test
and
iret
pusha
fiadd
mov
fmul
adc
cwde
xchg
jo
mov
push
out
jmp
fdivr
mov
iret
add
rcl
mov
test
mov
sub
in
shl
xchg
ds
jmp
mov
xchg
pop
(bad)
push
mov
xor
jg
jbe
test
add
movs
aam
and
fisub
(bad)
mov
lods
cmovbe
push
xchg
call
sti
and
adc
call
loope
dec
popa
pop
fucomi
xchg
mov
push
aam
ja
les
fnstcw
xchg
push
jecxz
add
shl
inc
xor
daa
xor
jns
inc
inc
jae
aad
push
add
mov
mov
outs
or
es
push
xchg
addr16
cmp
sbb
div
dec
mov
push
pusha
repz
ret
inc
xor
daa
cmp
or
movs
inc
iret
jae
test
sbb
lods
and
xor
and
cmp
sub
in
sar
and
inc
xor
in
cld
push
push
ins
mov
dec
adc
mov
xor
pop
fmul
imul
cmp
inc
mov
mov
sub
xchg
jae
push
cmp
cmp
add
in
and
rcr
sahf
inc
mov
nop
pushf
xor
scas
xor
sub
lods
hlt
ds
jb
pop
xchg
fadd
outs
(bad)
jle
dec
inc
inc
fiadd
in
loop
in
call
push
retf
fist
outs
and
test
leave
ret
add
inc
arpl
dec
xor
jecxz
or
in
cld
xor
rol
test
in
or
in
dec
or
mov
out
test
adc
std
xchg
mov
cmp
adc
fadd
out
mov
popa
out
fdivr
xchg
mov
mov
ins
sbb
mov
fcom
cmp
dec
loopne
pop
sar
and
add
jbe
enter
xor
ror
pop
mov
(bad)
outs
bound
inc
sbb
push
pushf
in
out
pop
ins
adc
mov
scas
jae
xchg
dec
test
movs
or
push
dec
adc
les
pop
std
xor
out
jns
lods
mov
add
and
fild
out
inc
adc
fimul
not
pop
arpl
pop
xchg
push
sbb
sar
enter
cld
mov
push
(bad)
retf
push
and
xchg
hlt
jne
push
sbb
add
xchg
repz
daa
(bad)
xor
xchg
jmp
jno
jmp
sub
ret
mov
sbb
loop
push
cmps
cs
sbb
xchg
mov
pop
jmp
or
gs
jp
lock
jmp
scas
ror
clc
test
popa
out
icebp
inc
fist
cmp
into
pop
test
sbb
jo
fs
dec
retf
dec
into
sbb
int
cs
mov
add
mov
xor
or
cli
inc
sbb
mov
sub
adc
mov
cli
stos
lea
movs
bound
xchg
retf
mov
outs
ja
stc
cdq
xchg
xor
lahf
rcl
das
sti
sub
sub
or
lods
nop
push
sbb
stos
neg
loopne
retf
cli
add
ins
outs
pop
mov
loope
and
cdq
xlat
and
sub
clts
dec
das
push
or
xchg
xchg
fistp
(bad)
xchg
dec
sub
jns
call
and
push
inc
rep
out
sti
xchg
xchg
aad
jno
(bad)
sti
out
push
out
loopne
push
arpl
es
jg
retf
pop
jae
dec
and
lock
pop
xor
add
push
mov
out
or
xor
mov
adc
cwde
push
mov
and
call
cld
xchg
jno
mov
cmp
fs
push
mov
jbe
inc
push
sbb
repz
mov
jl
loop
aam
(bad)
pop
fcom
sbb
ret
in
mov
sbb
xor
fild
pop
jmp
or
ja
sahf
cwde
inc
das
cmp
sbb
pop
mov
sbb
ret
jno
stc
gs
rcl
pop
loop
jmp
and
ret
xor
nop
push
mov
inc
(bad)
aam
inc
fdiv
jne
ins
loope
mov
inc
movs
call
add
adc
push
jno
xchg
xchg
dec
push
or
ins
shr
cmp
repz
cmc
add
lock
mov
popa
push
sbb
cs
test
mov
add
out
retf
repz
jnp
add
cmp
cs
cmp
clc
shr
sub
sub
dec
or
mov
push
mov
mov
ds
sbb
popa
aad
pop
retf
xor
lahf
push
stos
(bad)
or
mov
push
mul
or
cmp
shr
push
adc
jb
leave
cmp
mov
imul
mov
adc
dec
dec
mov
pushf
xchg
inc
mov
repz
fsubr
sti
xchg
(bad)
jge
out
(bad)
gs
repnz
popf
dec
imul
xchg
cmc
xlat
sbb
xor
adc
jge
mov
adc
sub
sub
rcl
sbb
mov
jb
adc
bnd
icebp
xor
mov
pop
(bad)
xor
retf
sub
lock
fwait
mov
arpl
mov
sub
xchg
xor
das
push
into
aas
mov
fnstcw
lods
jae
jno
and
fcom
mov
(bad)
fisubr
push
fwait
push
fisttp
mov
dec
adc
shl
outs
nop
lock
stc
jae
dec
(bad)
rol
aaa
ins
pushf
pop
dec
mov
in
xor
sbb
mov
jl
ficom
aaa
cli
jno
adc
inc
sbb
pop
leave
sub
jmp
inc
sbb
fsubr
mov
mov
retf
push
js
push
shr
mov
adc
jp
and
(bad)
js
sbb
loope
cld
cmp
pop
mov
arpl
push
adc
popa
cmc
cwde
push
pop
nop
das
test
and
test
repnz
sahf
aas
pusha
iret
call
pop
imul
jecxz
icebp
cld
xchg
stc
push
stc
aaa
shl
fild
pop
rcr
pop
neg
pop
jle
pop
or
push
mov
xor
pop
pop
adc
pop
pop
sbb
jae
clc
jo
sbb
push
and
shl
xchg
mov
test
pop
into
pop
rcl
lods
cwde
call
jbe
icebp
retf
nop
ins
dec
push
push
cmc
dec
mov
lods
(bad)
lea
aaa
sbb
imul
sbb
in
mov
ja
ror
mov
mov
mov
pop
dec
cmps
jb
dec
ds
pop
sub
shl
aad
and
xchg
inc
mov
aas
into
data16
inc
mov
push
mov
loope
fwait
retf
pop
out
test
loopne
jnp
mov
xchg
mov
add
mov
xchg
(bad)
fisub
inc
in
xchg
cmp
add
outs
push
jmp
xchg
push
dec
ror
loop
rol
(bad)
fsub
das
daa
cmps
sbb
icebp
ficomp
test
je
add
xor
pop
cmp
mov
cmc
jecxz
xchg
aam
ins
jmp
sub
adc
leave
pop
mov
jg
sbb
clc
push
or
mov
ds
or
cmp
(bad)
jo
lahf
mov
in
jge
or
mov
cmp
outs
ja
arpl
fidivr
ja
pop
(bad)
jmp
inc
scas
test
adc
mov
push
sbb
imul
mov
xchg
xchg
sub
jecxz
cmp
or
pop
gs
push
jl
in
jg
push
adc
mov
sbb
mov
(bad)
xor
sub
scas
cmp
or
sahf
or
stc
(bad)
sbb
mov
cmp
fstp
fcom
sbb
sub
jo
in
xor
jl
xchg
ins
mov
cmp
jg
xor
sub
jl
pusha
imul
add
or
or
xchg
imul
inc
sub
add
sub
inc
cmp
repnz
dec
and
inc
jge
or
jl
or
lock
fmul
imul
mov
hlt
in
cdq
mov
xor
pop
inc
pop
jns
jo
hlt
sub
hlt
sbb
mov
shl
lds
jae
xor
lahf
inc
push
push
fild
mov
or
and
dec
push
xchg
inc
sbb
mov
xchg
(bad)
ret
icebp
sub
leave
fnstcw
mov
mov
popf
adc
std
sub
jnp
dec
sbb
and
jns
jnp
sub
bound
pushfw
scas
mov
fxam
lods
fmul
inc
out
hlt
outs
mov
shl
ins
dec
and
push
fild
idiv
mov
push
dec
sar
push
add
cld
adc
or
sbb
pop
or
stos
mov
push
stc
cmp
ret
data16
mov
(bad)
lods
sahf
push
sbb
cmc
stos
pop
push
mov
outs
push
out
fimul
sbb
aaa
imul
fsub
jp
cld
or
stc
or
push
mov
imul
fisub
rcl
rcr
test
xchg
in
jmp
enter
sub
js
call
mov
mov
dec
xchg
xor
jle
out
popa
or
movs
mov
mov
pop
pop
daa
movs
xor
and
addr16
neg
(bad)
jnp
jmp
push
fdiv
std
das
sub
cmp
mov
cmp
pop
pop
sbb
push
mov
xchg
inc
fmul
repz
dec
and
dec
fcomp
xor
add
in
jp
loop
push
cld
push
jp
dec
(bad)
cmp
and
mov
test
aas
cmp
out
jo
daa
dec
ret
pop
and
ss
and
(bad)
clc
push
icebp
add
mov
data16
adc
les
dec
data16
outs
inc
outs
lea
dec
aaa
mov
fs
cwde
ins
and
inc
pop
iret
shl
daa
pop
ins
xor
es
xchg
xchg
ret
aam
or
(bad)
or
fidivr
or
sbb
popf
adc
inc
out
push
stos
cmp
push
xchg
mov
and
add
jmp
popf
pop
fwait
ins
mov
inc
fwait
aam
xchg
pusha
push
call
out
loopne
and
(bad)
xlat
sbb
xchg
inc
out
shl
fidivr
pop
call
jge
sub
dec
xchg
out
leave
mov
clc
cmp
jbe
adc
enter
fstp
add
aas
sub
mov
leave
jl
fs
jo
out
or
or
loopne
jbe
shl
push
mov
icebp
fucomp
push
add
pop
mov
jo
test
(bad)
ret
mov
ss
push
cmp
cmp
xchg
mov
test
fidivr
xchg
xor
ret
push
sub
cdq
pop
add
jecxz
addr16
shl
jnp
cmps
shr
dec
jns
dec
pop
retf
mov
push
pop
fcomp
test
cli
xchg
mov
mov
push
add
out
test
adc
(bad)
movs
mov
jp
in
and
mov
push
mov
mov
sub
out
pusha
mov
pop
mov
xchg
push
fimul
out
into
dec
xchg
mov
daa
push
add
push
xor
or
xor
jmp
dec
jae
cmp
mov
cwde
mov
dec
(bad)
dec
mov
sub
jb
scas
xor
fld
popf
out
sub
jne
das
dec
cld
push
or
iret
add
cmps
xchg
popa
int3
js
int
adc
shl
cmp
(bad)
fld
cmp
sbb
inc
lea
dec
jb
xor
call
mov
dec
push
ja
mov
add
gs
add
dec
mov
and
call
xor
(bad)
retf
cmp
fbstp
xor
xor
cmps
ss
pop
fcmovb
xchg
scas
push
dec
jl
jb
jnp
jmp
cmc
adc
ror
fsubr
mov
mov
sahf
lods
ss
das
inc
rol
gs
pop
cli
fdiv
pop
in
mov
ins
add
mov
ja
cwde
lahf
push
test
ins
mov
mov
out
mov
call
pop
aad
aaa
inc
cmp
dec
sbb
inc
shl
mov
push
dec
aad
js
adc
sti
lahf
push
push
scas
fcom
ds
stos
adc
(bad)
in
pop
test
gs
(bad)
(bad)
cmc
inc
mov
dec
aas
push
lock
cli
adc
retf
jmp
addr16
(bad)
push
pop
in
and
mov
mov
lods
mov
sbb
ret
push
cs
cli
shl
ins
pop
ins
test
pop
sub
pop
mov
push
nop
or
and
cmp
dec
and
imul
adc
mov
xchg
nop
or
or
sti
movs
lock
gs
cld
cld
shr
ret
int
push
(bad)
xchg
aas
out
pop
test
fnsave
rol
scas
test
xchg
jo
push
fsqrt
pop
out
(bad)
dec
or
imul
cmp
or
aaa
outs
(bad)
in
add
push
cmp
xchg
push
sub
(bad)
fbstp
leave
add
inc
ror
pop
inc
fiadd
xchg
imul
sbb
and
rcl
repz
ret
or
cmp
fs
adc
imul
lock
or
scas
sbb
idiv
clc
cmp
aas
dec
or
mov
sub
and
lods
cs
adc
add
test
sahf
sbb
addr16
inc
pop
inc
cmp
dec
arpl
dec
outs
das
and
push
cmps
aas
mov
stos
dec
and
xchg
adc
xchg
mov
jno
pusha
(bad)
adc
jecxz
into
or
inc
xlat
(bad)
stc
mov
xor
jae
out
test
scas
xor
lahf
add
inc
shufps
adc
sbb
or
cld
retf
in
xchg
and
mov
jns
sbb
cld
loope
call
shr
mov
(bad)
pop
mov
mov
imul
add
mov
mov
(bad)
pop
dec
xchg
xor
mov
inc
ja
jo
jne
fistp
jo
aad
mov
mov
addr16
sub
mov
(bad)
jne
sar
test
pop
imul
test
xor
sbb
xchg
leave
cmp
cs
dec
xchg
fcomip
or
neg
jae
fist
xor
cmc
fdivrp
fidiv
enter
das
out
into
out
retf
jmp
setae
and
iret
fs
fisubr
daa
push
sahf
pop
xor
and
mov
mov
push
cmp
movs
jnp
aam
outs
stos
test
ror
aad
cli
jmp
mov
fcom
int3
aam
push
gs
pcmpeqb
test
cmp
outs
loopne
aam
pop
rol
pop
xchg
mov
or
(bad)
mov
xchg
adc
retf
jle
xchg
dec
add
in
mov
push
and
dec
div
imul
inc
xlat
sti
(bad)
mov
jbe
data16
je
jmp
(bad)
addr16
pop
in
test
int3
xor
lock
sub
adc
daa
push
aad
lahf
mov
or
adc
pop
out
pop
pop
inc
popa
fidivr
mov
loope
popf
daa
mov
in
and
sar
jae
pop
sahf
cmp
sub
(bad)
inc
jp
jo
adc
xchg
add
or
cs
pop
inc
(bad)
sub
aad
lock
stos
aad
fstp
nop
fild
mov
cmp
cmps
loope
or
bsf
jb
movs
mov
loopne
scas
mov
test
xchg
aaa
inc
push
(bad)
lock
inc
or
fs
add
inc
pop
movs
mov
mov
mov
push
fdiv
pop
retf
loop
pop
pop
add
sbb
push
mov
mov
inc
cld
adc
call
fnsave
retf
and
sar
push
fistp
xor
mov
sub
imul
and
adc
cs
ins
dec
xchg
les
fstp
sub
add
shl
adc
push
sub
jg
lock
pop
dec
fbld
stc
out
(bad)
xchg
mov
(bad)
xor
or
js
popa
sbb
jmp
adc
bound
mov
pop
(bad)
into
sub
add
xchg
(bad)
lahf
dec
ja
test
popf
bound
dec
aaa
loop
push
xchg
push
dec
sbb
adc
xchg
loope
mov
or
inc
xor
cmp
dec
lock
cmc
bound
push
stos
jp
mov
(bad)
test
out
mov
hlt
ret
xlat
mov
outs
pusha
adc
cmp
out
sub
iret
je
lods
jo
adc
sub
fistp
out
ret
push
dec
push
xor
mov
cmp
and
(bad)
pop
in
inc
push
hlt
xchg
fmul
dec
add
mov
inc
imul
aaa
stos
mov
mov
xchg
dec
nop
sbb
and
stos
popa
movs
shl
cwde
test
test
inc
push
cmp
add
fidivr
pop
sub
pop
mov
sbb
aas
add
je
mov
pop
mov
cmp
jbe
in
lahf
dec
adc
imul
sbb
(bad)
and
or
lahf
jmp
in
sbb
in
fbstp
sub
jmp
adc
jnp
mov
xchg
jns
jg
les
or
inc
(bad)
cwde
test
cmc
jno
ins
pop
or
mov
ja
mov
outs
add
push
imul
push
push
push
mov
push
bound
(bad)
mov
(bad)
out
pop
aad
xchg
outs
pop
addr16
addr16
movs
ret
mov
cmps
int3
and
push
dec
(bad)
sbb
xor
xor
xchg
and
adc
clc
loopne
ret
adc
std
retf
(bad)
cwde
jge
(bad)
bound
(bad)
mov
enter
fwait
jne
call
adc
retf
or
rcr
fsubr
ss
cs
adc
out
mov
push
es
leave
test
es
outs
and
dec
xlat
(bad)
(bad)
call
add
xor
fwait
repz
stos
jp
pop
dec
(bad)
jecxz
and
adc
dec
outs
(bad)
jp
shr
xchg
(bad)
sbb
sub
scas
sahf
xor
pusha
and
sub
ss
fild
in
idiv
test
dec
repnz
jle
mov
mov
inc
push
aad
adc
sbb
out
add
jp
mov
aaa
pop
mov
ret
pop
in
or
(bad)
adc
imul
nop
or
mov
push
jmp
ins
mov
mov
mov
das
xor
or
sub
jae
mov
imul
popf
xchg
push
xchg
popf
push
pop
inc
adc
mov
data16
vphaddubq
jp
ret
aaa
lods
fnsave
clc
ss
pop
ja
aad
pop
jmp
sar
pop
ins
ja
dec
cld
(bad)
xor
dec
sbb
xor
adc
nop
(bad)
sbb
jb
lea
cs
sub
mov
add
call
loop
fsub
add
test
mov
cdq
mov
push
aaa
fbstp
daa
lea
outs
push
sti
sub
mov
dec
and
mov
mov
and
loop
pop
xchg
aaa
sbb
jnp
push
call
lods
cli
cmps
lahf
out
lea
je
pusha
stc
out
xchg
jnp
mov
dec
imul
cmp
mov
out
adc
outs
push
cmp
int
push
shl
pop
mov
jg
push
fcom
adc
popa
loop
addr16
popf
cmp
xchg
inc
dec
dec
imul
loop
popa
ret
enter
cmp
push
ins
adc
loope
jmp
stos
cwde
je
push
push
and
or
fcomp
test
mov
repnz
ret
stos
cmp
mov
xor
scas
lods
add
call
jno
push
js
push
out
pushf
cmp
lods
cmp
pop
daa
retf
push
add
sbb
out
mov
mov
push
mov
ins
jbe
push
mov
movaps
mov
dec
mov
clc
push
add
aas
sbb
enter
push
xor
mov
jp
push
mov
push
retf
in
mov
and
mov
es
js
mov
dec
mov
pop
ret
jns
jmp
xor
int
lods
mov
cmps
test
in
sahf
lds
rol
xchg
cli
sub
mov
ret
imul
pusha
xchg
into
pop
fild
pop
mov
mov
ret
les
repz
adc
test
repz
fwait
sub
data16
retf
test
call
mov
xchg
es
jmp
(bad)
clc
cld
push
aam
lds
lods
mov
(bad)
sub
icebp
inc
out
xchg
out
in
jmp
lock
cdq
add
movs
jg
sub
push
pop
add
mov
mov
pop
cmp
gs
bound
dec
nop
jbe
mov
sbb
retf
ret
loop
mov
adc
ja
mov
stos
add
and
hlt
push
mov
lahf
loopne
test
pop
sub
repnz
in
xor
xlat
icebp
cmp
mov
cmps
ss
push
add
shr
fisub
ja
das
rcr
cmp
int3
sbb
popf
cmps
pop
leave
pop
test
call
js
es
in
shl
sub
lahf
outs
(bad)
movs
mov
dec
int
jae
jo
xor
(bad)
lock
sub
test
and
mov
or
sahf
cmps
popf
adc
mov
arpl
xchg
icebp
xchg
leave
jb
pop
popf
pop
cwde
(bad)
out
lds
mov
sti
pop
jl
add
mov
jo
cmp
test
add
mov
adc
push
ficom
pushf
add
jg
jge
ror
lea
leave
sar
fldcw
add
xchg
mov
fimul
xchg
add
lods
mov
ds
mov
add
inc
(bad)
aad
in
stos
adc
aas
lods
inc
pop
cmp
int
add
cmp
jae
retf
mov
cmp
xor
gs
repz
sbb
mov
sbb
pop
bound
mov
retf
loope
into
mov
mov
xchg
mov
jno
jg
sbb
shl
or
movs
aaa
inc
imul
add
dec
push
les
inc
sbb
sbb
mov
mov
push
push
retf
push
jae
mov
inc
and
sub
jmp
mov
iret
cdq
mov
addr16
std
cmp
cwde
sbb
push
shr
ss
push
ss
(bad)
in
outs
inc
dec
adc
sub
pop
outs
hlt
mov
push
xchg
and
add
enter
adc
in
jo
mov
push
push
loop
mov
xchg
aam
dec
rcr
mov
scas
data16
loopne
aam
inc
test
pop
popf
mov
mov
jge
mov
adc
jmp
or
cmp
fld
not
pop
xchg
test
dec
adc
mov
dec
outs
sub
jmp
inc
mov
xor
cmp
adc
mov
pop
xchg
(bad)
cmp
pop
adc
int3
retf
adc
fsubr
xchg
(bad)
int
mov
pop
movs
cmp
cmp
adc
scas
adc
je
add
mov
jle
sbb
push
mov
popa
or
ins
push
popf
jl
or
xchg
push
aas
(bad)
fwait
js
xor
mov
sbb
push
pop
fwait
in
pusha
sbb
add
mov
pop
fdivr
xchg
hlt
and
xor
xchg
jno
aas
push
jnp
mov
test
icebp
repz
enter
sbb
jo
je
mov
sbb
inc
xor
out
fisub
lods
xchg
out
sbb
or
push
scas
lock
sbb
xchg
jecxz
daa
add
jp
push
bound
rcl
scas
push
jns
sub
test
out
jg
push
mov
lods
adc
dec
ins
int3
cmc
jecxz
hlt
fcomip
or
fxch
scas
jbe
jbe
push
xor
cmp
outs
push
jns
imul
cdq
setl
dec
repz
std
fsubr
lea
cmp
repnz
dec
icebp
mov
fs
out
ds
mov
sub
xchg
imul
daa
or
adc
or
imul
imul
daa
es
leave
(bad)
mov
cmp
mov
test
sahf
cdq
push
je
or
cmp
outs
out
lods
lods
mul
fcom
xor
fsubp
cli
stc
push
pop
sbb
scas
jg
sub
ret
(bad)
sub
addr16
jbe
mov
jle
push
xor
and
pop
in
mov
dec
xchg
gs
jno
push
jmp
or
call
xor
pop
sbb
jno
or
mov
add
dec
jecxz
inc
dec
xchg
leave
lock
cmp
pop
mov
sub
les
lods
repz
and
fwait
inc
test
sub
xor
ja
dec
sub
pusha
in
and
hlt
mov
push
or
mov
out
adc
sub
mov
das
jmp
(bad)
jb
sti
shr
adc
sbb
lods
mov
retf
or
enter
shr
pop
dec
in
sub
dec
dec
xchg
pop
xchg
cmp
scas
test
fnstenv
test
or
xor
stc
adc
(bad)
call
pop
data16
or
mov
push
repnz
sbb
test
ret
out
inc
or
pop
mov
fist
ins
sbb
inc
stos
jbe
ins
cmp
jnp
mov
clc
xchg
push
cmp
rcl
mov
ins
iret
bound
sub
jp
xlat
ficomp
adc
loope
movs
lods
adc
lock
and
pop
push
cmp
add
xchg
std
inc
adc
movs
in
test
sub
mov
ins
clc
add
les
neg
retf
cs
xor
jmp
retf
pop
mov
dec
dec
dec
and
pusha
pop
jecxz
mov
pop
clc
repz
or
sahf
cmp
in
out
in
mov
add
cmp
dec
mov
push
mov
mov
sbb
pop
imul
or
sub
and
pushw
gs
enter
sub
test
scas
mov
cmp
pop
aam
shl
xor
xchg
inc
pop
pop
push
fild
addr16
pop
pusha
mov
mov
xor
adc
retf
cmp
inc
jb
inc
mov
or
out
mov
push
int3
pop
cmp
iret
push
dec
mov
or
cmp
adc
sub
add
mov
sahf
cmc
inc
xor
or
mov
pop
test
retf
push
lock
scas
inc
mov
ret
inc
(bad)
jle
iret
xchg
outs
(bad)
pop
push
(bad)
shr
stos
lds
dec
gs
sub
or
scas
dec
push
movs
pop
push
sbb
fmul
shr
mov
fist
loope
dec
push
movs
adc
sub
xchg
imul
push
mov
jg
mov
aas
(bad)
imul
aaa
sbb
mul
scas
scas
lods
aam
sti
dec
mov
and
stos
jle
repz
es
jno
lods
xchg
jge
xchg
sbb
ins
out
aam
jmp
test
jmp
jp
pop
out
and
sub
mov
jge
int
xchg
jbe
test
and
lds
jle
aad
xchg
ins
xchg
sub
ja
(bad)
fdiv
pop
inc
cmp
lds
xor
inc
or
pop
mov
mov
sub
sub
loope
push
loop
das
xlat
adc
sub
pop
mov
in
dec
sub
add
cmps
push
lahf
xchg
ins
sbb
dec
into
mov
add
push
(bad)
sub
sbb
mov
call
push
mov
fld
dec
add
pop
mov
pop
cli
xor
mov
mov
sub
rcr
fs
dec
pop
inc
add
pop
pop
jne
lods
dec
in
jae
dec
mov
sar
in
sahf
cdq
mov
mov
jae
hlt
rcr
sbb
mov
stos
adc
mov
repnz
out
aam
pop
and
loop
shl
shl
and
push
push
jl
sar
inc
(bad)
stc
dec
jne
jle
xor
sti
lds
fnstcw
pop
jbe
push
daa
and
cmp
nop
jno
cld
(bad)
repnz
nop
xlat
clc
imul
mov
jecxz
ins
and
(bad)
push
movs
and
repz
mov
mov
inc
ins
je
sahf
outs
mov
xchg
and
bound
jmp
dec
mov
das
mov
rsm
pop
fcmovnbe
xchg
(bad)
fadd
inc
and
adc
fs
iret
aaa
mov
pop
jb
(bad)
out
mov
pusha
rcl
call
push
mov
test
mov
pop
outs
and
push
mov
sti
pop
call
outs
xchg
and
dec
ss
shl
in
jl
mov
and
push
pop
add
sbb
dec
sub
out
ds
push
push
es
inc
popf
xchg
xchg
outs
cmc
lods
(bad)
ja
sub
xchg
inc
cmps
push
(bad)
arpl
imul
cmp
xchg
(bad)
in
in
push
inc
pushf
add
inc
jb
or
sbb
adc
and
es
push
inc
adc
or
rcr
hlt
loop
dec
scas
dec
adc
mov
fwait
jmp
sbb
dec
inc
sub
sub
idiv
adc
sub
fs
les
popa
pop
es
dec
sbb
add
pop
and
dec
mov
push
ds
fstp
pop
sbb
pop
fist
test
sub
xchg
leave
mov
mov
jo
pop
adc
fdiv
(bad)
add
xchg
cmp
scas
inc
sub
shl
xchg
scas
mul
jmp
xchg
inc
mov
cmp
ss
call
xchg
test
cmp
mov
repz
xchg
jg
loop
daa
(bad)
repz
int3
(bad)
push
xor
pop
inc
movs
ja
repnz
fbstp
adc
jno
or
(bad)
mov
into
lods
mov
jg
sub
add
lea
ret
cmp
adc
test
fnsave
push
ds
push
in
sub
xor
jae
iret
int
xlat
jecxz
repnz
lds
test
ja
stos
fcmovu
ret
in
retf
and
dec
and
shl
out
imul
addr16
jo
and
push
addr16
add
test
(bad)
jnp
ret
push
jp
mov
add
retf
clc
loopne
mov
sub
jb
or
jo
not
mov
inc
mov
cwde
call
or
mov
xor
and
push
repz
adc
sti
push
push
lods
aas
pop
jns
dec
sbb
adc
jb
inc
(bad)
mov
cmp
cmp
fxch
xchg
test
loope
div
sbb
dec
popf
sbb
mul
repz
xor
mov
std
xchg
mov
sub
mov
cwde
int
or
(bad)
sub
mov
loopne
sbb
cld
es
mov
inc
push
ins
xlat
test
jne
ss
dec
ja
jmp
add
es
mov
dec
inc
pop
sub
pop
call
push
xchg
loopne
xor
popf
in
iret
mov
add
pusha
mov
and
add
lock
in
cmps
mov
mov
jmp
sahf
mov
fidivr
and
(bad)
lods
xchg
mov
enter
dec
rcr
add
dec
push
add
fstp
stc
test
push
fcomp
int
dec
pop
nop
push
sub
enter
in
outs
scas
mov
retf
adc
inc
xchg
and
add
in
les
dec
scas
pop
dec
xor
xor
xor
inc
xchg
sub
ss
jle
jmp
fidiv
add
fadd
jle
or
mov
sbb
sbb
ss
cld
adc
cmc
jp
scas
mov
test
push
lahf
mov
add
pop
sub
pop
cmp
xlat
lock
sbb
iret
sub
pop
inc
loope
and
mov
call
test
(bad)
test
pop
lods
neg
imul
mov
xor
pusha
mov
jmp
stc
js
push
bound
das
pop
pop
out
or
sti
outs
rcl
push
sbb
sub
fwait
add
dec
push
test
out
dec
inc
dec
mov
sub
sub
ss
sbb
sbb
std
sub
adc
xchg
cmc
out
sbb
(bad)
stc
adc
leave
jmp
jo
leave
dec
pop
sub
ds
outs
(bad)
aad
ins
mov
imul
outs
out
xor
pop
(bad)
dec
dec
das
sub
adc
loop
dec
jmp
mov
ret
les
jne
(bad)
icebp
out
pop
jo
and
push
js
fst
nop
push
(bad)
push
adc
dec
pop
or
dec
fcomp
ss
jno
fs
jp
sbb
mov
or
das
xor
push
inc
shl
stos
inc
cdq
cli
cmp
ss
sbb
pop
push
ret
ror
std
cwde
dec
jmp
shl
idiv
xabort
call
out
mov
hlt
aas
loope
mov
sbb
dec
cmp
in
cli
leave
cmps
or
mov
daa
add
movs
in
xchg
shl
and
jne
movs
cmp
aaa
fcos
jmp
jmp
or
jg
sub
fcmovbe
or
cmp
cli
scas
inc
dec
out
inc
xchg
mov
aaa
stos
cmp
push
in
push
adc
adc
mov
in
cmp
ins
hlt
sbb
loope
loope
fbstp
iret
inc
sbb
scas
cs
mov
rol
sbb
fcomip
mov
imul
xchg
xchg
dec
(bad)
sub
push
adc
pop
jecxz
inc
and
adc
dec
pop
retf
pushf
inc
vcmppd
ficom
sub
iret
push
rol
push
sti
repz
jmp
lfs
(bad)
sub
addr16
out
xchg
inc
fs
ret
jg
cmps
sub
add
or
mov
pop
jns
xlat
mov
cmp
das
ror
mov
adc
jmp
sub
xchg
sub
mov
push
movs
pop
nop
ss
cmp
jmp
cmp
clc
lahf
arpl
cdq
add
sbb
push
sbb
lods
icebp
cdq
jmp
and
xchg
or
adc
add
out
sub
js
xlat
ret
push
gs
and
pop
mov
jae
mov
js
movs
cdq
int3
mov
sub
test
lea
mov
cmps
dec
adc
nop
(bad)
pusha
add
jge
inc
sti
mov
jle
jb
add
sub
stos
mov
cmp
pusha
cmp
call
add
jl
jp
adc
pop
cmp
lods
jg
xor
sbb
fld
jmp
and
ds
or
call
int3
popf
in
shl
pop
dec
idiv
repz
ret
ss
sub
add
movs
mov
push
addr16
cmps
mov
sub
pop
adc
or
pop
mov
adc
out
push
add
push
dec
dec
addr16
aam
cwde
scas
pop
mov
scas
jnp
dec
xchg
sub
inc
cmps
mov
push
mov
adc
push
rcr
loopne
sub
dec
test
mov
ss
or
xlat
inc
aad
push
imul
iret
mov
pop
sub
pusha
ins
lock
test
int
and
fyl2x
iret
sbb
repz
fcmovnu
fstp
pop
and
aaa
aas
aaa
inc
jl
mov
push
out
cmp
mov
data16
bound
(bad)
dec
jnp
xchg
ins
mov
xchg
cmps
pop
or
out
xchg
xor
popa
sbb
dec
add
add
cmp
ins
fadd
push
cs
std
jo
sub
aad
sub
jns
fldenv
shl
lahf
xor
mov
jnp
test
jbe
std
mov
cs
lock
in
xchg
inc
ja
sti
dec
jle
ret
ds
loop
pop
nop
stos
test
repz
sbb
test
cmps
dec
fmul
daa
les
xchg
push
xlat
data16
and
jb
sbb
shr
mov
stos
aad
fdivr
bound
push
adc
mov
inc
add
fwait
sbb
fmul
pop
sbb
fmul
test
xchg
pop
push
scas
mov
fs
push
scas
jne
jmp
sub
xchg
call
mov
loop
pop
aaa
cmps
push
xor
add
or
outs
retf
push
push
cmp
adc
jle
xor
fidivr
lods
and
inc
xchg
dec
aaa
or
inc
scas
or
xchg
xchg
push
xchg
stc
jae
outs
inc
sar
jb
setns
cmc
imul
cwde
fdivr
in
mov
iret
mov
imul
ja
ins
dec
popf
cmp
or
push
adc
inc
add
sbb
jp
ss
sub
jns
data16
hlt
pop
es
sub
xchg
sti
mov
sbb
fs
test
sbb
fnstenv
dec
cli
gs
icebp
(bad)
movs
xchg
scas
in
dec
or
in
repnz
or
cmp
hlt
mov
sbb
inc
jle
cmps
add
loopne
sbb
xchg
lock
test
icebp
xchg
xchg
push
mov
hlt
add
jle
sub
daa
sbb
fcmove
movs
ficom
push
addr16
jno
ss
xchg
adc
(bad)
hlt
stos
ins
cmp
test
xchg
dec
pop
imul
loop
test
mov
dec
ss
or
inc
in
pop
and
leave
call
dec
push
not
xor
in
in
sub
dec
jnp
push
and
int3
xor
mov
fwait
mov
add
lods
add
jecxz
pop
movs
lahf
jnp
sbb
es
dec
mov
popf
movs
leave
dec
test
(bad)
adc
push
fs
or
and
movs
fcmovnbe
jecxz
pop
movs
xchg
inc
add
not
or
xor
pop
es
hlt
arpl
hlt
call
and
add
xor
in
ret
into
xor
xlat
jmp
(bad)
loope
and
lods
push
dec
gs
repnz
je
mov
test
in
rcr
push
dec
aad
add
outs
push
sbb
fwait
(bad)
and
lea
mov
int
xor
mov
jmp
pushf
sti
stos
lea
push
or
adc
clc
and
cdq
mov
(bad)
pop
and
je
(bad)
dec
cli
pop
test
inc
cmps
clc
jmp
adc
and
ins
sub
mov
sub
xor
cld
scas
imul
outs
sub
cmp
cmp
inc
in
fstp
dec
mov
arpl
test
call
fcom
aaa
fcom
inc
xor
mov
mov
jle
imul
out
mov
hlt
sbb
add
add
xchg
inc
fisttp
movs
ja
push
je
adc
xor
outs
sbb
pop
setns
cmp
push
mov
outs
and
dec
sub
add
mov
ss
push
adc
fst
lods
sub
sti
out
iret
inc
into
pushf
mov
or
inc
or
xchg
jecxz
cmp
sahf
xchg
mov
sar
sbb
or
push
retf
xchg
sub
add
xor
and
in
xchg
sbb
stc
add
fiadd
(bad)
cld
jno
popa
and
popf
arpl
push
sbb
or
xchg
loopne
loop
lods
push
xchg
frstor
std
pushf
mov
dec
or
neg
jb
sbb
and
inc
cmp
lahf
retf
dec
jl
loop
shl
push
repz
cmp
pop
mov
sbb
or
jl
mov
pop
mov
fdivr
rcl
fxch
jno
mov
(bad)
pushf
jge
sub
xchg
xchg
sbb
loopne
je
(bad)
or
push
xchg
daa
aam
hlt
dec
and
or
dec
mov
mov
daa
xlat
imul
call
xchg
push
aad
inc
pop
test
xchg
aas
mov
sbb
mov
aam
stos
aam
cwde
imul
enter
push
cwde
jnp
sub
jmp
cmp
js
std
dec
fisub
out
jge
in
movs
mov
pop
mov
fucom
cwde
mov
sub
mov
pop
out
or
repnz
push
scas
mov
push
jle
xor
push
popa
fs
mov
and
adc
and
xlat
sub
xchg
ins
rcl
push
xor
inc
cs
mov
cmp
xchg
xchg
pop
(bad)
stc
movs
push
retf
jne
int3
pop
xor
mov
cs
mov
xchg
ret
js
scas
xchg
lods
dec
cmc
cli
mov
add
xchg
dec
test
add
in
xchg
sub
mov
sbb
mov
xchg
jmp
(bad)
mov
sbb
push
xchg
(bad)
sbb
pop
ss
fwait
out
and
bound
shr
js
or
or
call
rol
movs
sub
add
outs
ds
or
dec
push
adc
loop
jecxz
xchg
arpl
jbe
mul
dec
xchg
dec
sub
repnz
pop
jge
imul
jne
jbe
push
jb
push
je
pop
dec
out
jmp
sub
jecxz
mov
dec
or
push
or
xchg
xor
jae
test
imul
neg
fidiv
test
scas
out
sub
xor
push
out
(bad)
xor
daa
jp
jl
mov
push
jns
mov
mov
das
addr16
imul
push
int3
dec
in
ret
rcr
inc
cdq
loopne
push
shl
es
cmp
sbb
mov
hlt
in
push
sbb
cmp
das
push
jmp
pmaxsw
jmp
aad
fidivr
daa
mov
repnz
adc
mov
adc
jbe
rcr
and
push
adc
sub
mov
cli
fwait
mov
sar
test
call
jns
repz
pop
mov
add
fnstenv
pop
lods
xor
push
push
mov
out
fild
xor
shl
mov
(bad)
cmps
adc
mov
jae
retf
bound
dec
or
dec
jl
je
clc
retf
dec
add
hlt
fdiv
popa
adc
setno
or
sahf
sbb
sar
mov
and
loopne
(bad)
shl
sub
sahf
cmps
test
bound
out
sti
ins
mov
mov
cmp
mov
push
and
ja
mov
in
add
mov
cmps
jge
popf
sbb
add
dec
xor
adc
sti
je
mov
ja
fcmove
inc
cmp
push
sbb
mov
xor
or
or
(bad)
sub
repnz
das
inc
stc
mov
mov
sub
outs
push
aaa
jmp
loope
scas
js
scas
xchg
hlt
aaa
das
push
(bad)
fisubr
lds
(bad)
sub
sub
push
out
das
sahf
mov
mov
xchg
sub
mov
cmps
or
je
mov
xchg
add
repz
jg
mov
fmul
dec
pushf
(bad)
out
ins
idiv
sti
fldcw
adc
xor
cmp
fstp
iret
adc
dec
dec
or
stos
cdq
dec
jno
fldcw
cmp
in
xchg
cdq
push
mov
out
jge
nop
jp
inc
push
push
pop
jns
sbb
cvtpi2ps
stos
jmp
lahf
push
fist
lahf
mov
xor
push
lods
sub
aad
mov
addr16
xchg
mov
jbe
es
fisttp
push
mov
(bad)
sbb
test
(bad)
pop
sub
push
out
mov
dec
fisttp
sti
sub
jno
inc
add
xchg
sbb
jmp
mov
std
lods
add
retf
dec
mov
add
jle
xor
fwait
jae
cmp
in
jp
inc
mov
add
dec
mov
jmp
mov
or
cdq
(bad)
push
std
add
movs
fst
sbb
bound
mov
sub
ss
aam
push
rol
jnp
mov
es
pop
and
cwde
add
inc
or
dec
jg
ja
mov
xchg
xchg
lock
mov
cwde
ins
stos
les
add
or
add
push
loope
jns
es
cdq
pop
add
stos
push
pop
aam
mov
sub
ret
push
in
sbb
out
adc
cs
mov
int3
sub
xchg
sbb
jne
cmps
jg
sub
dec
push
in
sbb
jge
mov
push
push
pop
hlt
(bad)
sti
adc
imul
stos
adc
inc
es
jmp
loopne
cmc
cdq
loope
cmps
pop
in
ret
mov
loope
fisub
pusha
dec
hlt
sub
add
sub
jbe
rcr
jp
mov
mov
sbb
xchg
add
dec
test
push
in
mov
dec
sub
rol
jl
scas
fbld
popa
push
mov
xor
sbb
mov
hlt
inc
pop
sti
pop
inc
mov
sbb
pop
jo
lds
jecxz
fisubr
mov
loope
cmp
inc
fild
pop
jp
in
ja
jp
or
cmp
xor
mov
addr16
dec
pop
fidivr
pusha
dec
clc
fwait
(bad)
call
xchg
es
mov
(bad)
jo
stos
lods
outs
pop
(bad)
popa
aaa
mov
xchg
scas
call
ja
xchg
cld
ret
shr
xor
imul
inc
js
dec
jmp
int3
in
pop
jg
mov
xlat
mov
mov
push
sub
push
adc
inc
jnp
loopne
retf
nop
dec
xchg
nop
fsubr
in
es
in
cmps
push
adc
test
jnp
in
mov
pop
jo
cmp
add
mov
or
dec
cmp
aad
leave
sahf
jmp
ins
sar
jecxz
add
loopne
(bad)
jecxz
cmp
retf
push
sub
out
add
jp
lods
sbb
inc
xor
in
mov
nop
(bad)
or
mov
inc
and
push
pop
imul
lods
mov
inc
stos
stos
test
outs
pop
xchg
sbb
push
(bad)
push
fstp
loop
xchg
js
xchg
pop
jmp
retf
or
jae
mov
out
jecxz
cmp
push
(bad)
sbb
mov
lods
mov
adc
mov
cmps
xor
lock
retf
pop
frstor
enter
cmp
xor
xchg
cmp
dec
cmp
mov
daa
fwait
mov
shl
jl
jg
or
jnp
shl
ja
sbb
scas
fcomi
dec
repnz
xor
xor
enter
mov
mov
cs
xchg
outs
(bad)
push
pushf
dec
dec
sbb
js
test
mov
push
outs
repz
or
jbe
push
or
mov
xor
imul
popa
inc
jne
call
xchg
enter
in
mov
lods
xor
dec
rol
mov
adc
aam
js
(bad)
sti
in
loopne
mov
pop
xor
cmc
jge
mov
loop
jae
mov
sub
lahf
mov
pop
ds
data16
pop
dec
mov
call
call
mov
push
lods
xchg
mov
mov
mov
test
repnz
cmp
popf
sub
movs
je
xor
aad
scas
mov
test
(bad)
(bad)
mov
mov
xchg
jmp
xchg
js
inc
cmc
adc
mov
daa
add
adc
imul
leave
adc
pusha
sahf
daa
or
rol
mov
xchg
loopne
sub
je
or
pop
cmp
pop
mov
dec
cdq
je
mov
into
(bad)
(bad)
inc
xor
imul
cmp
mov
cmp
dec
dec
dec
or
adc
mov
test
xchg
out
sbb
sbb
pop
jbe
mov
mov
shl
addr16
out
adc
ret
sbb
mov
push
jmp
sub
enter
loop
js
in
sahf
sar
mov
mov
mov
jne
sbb
lds
loop
outs
jg
lahf
inc
jns
jnp
push
(bad)
pop
outs
sbb
jb
cmp
fcomi
xor
(bad)
adc
dec
pop
cmp
retf
out
jnp
add
dec
mov
push
pop
test
add
mov
out
mov
enter
stos
cwde
dec
and
adc
lea
push
mov
add
inc
push
int
ror
popa
mov
cmp
or
call
pop
xchg
xchg
mov
sti
repz
fdivr
xchg
lds
out
inc
cmp
jmp
or
jae
jns
dec
imul
retf
pop
or
sbb
stos
pusha
iret
pop
jns
addr16
lods
mov
(bad)
adc
imul
stos
push
dec
and
sub
and
add
mov
jge
out
cld
stc
jno
adc
fimul
outs
xchg
xor
(bad)
daa
in
jg
xor
jp
ss
xor
add
xchg
hlt
push
sub
std
mov
mov
and
test
out
mov
adc
out
test
sbb
loope
leave
ss
mov
inc
pop
out
jge
inc
cmc
lea
repnz
xchg
jne
lea
and
lods
rcl
aas
pop
cmps
fldcw
and
cmp
inc
psllq
outs
pushf
jecxz
shl
push
push
fs
jne
mov
cdq
(bad)
aas
movs
inc
aam
pusha
mov
dec
leave
(bad)
(bad)
mov
mov
js
and
aas
into
cmp
inc
scas
stc
sbb
icebp
push
or
sahf
outs
adc
pop
xlat
dec
jbe
mov
pushf
iret
in
call
out
lds
pop
pop
mov
sar
add
data16
adc
lods
xlat
movs
and
cld
pop
mov
call
xchg
inc
neg
cmp
outs
cmp
rcl
popa
cmp
test
jns
xor
pop
shl
jg
pop
cmp
inc
or
pop
fcmove
aas
call
inc
nop
push
jne
jbe
xchg
and
mov
push
(bad)
sub
enter
jmp
ja
add
mov
jmp
cmp
ret
movs
data16
in
fidiv
scas
cmps
repnz
mov
pop
sub
xor
in
mov
cmp
xlat
push
cmc
pop
(bad)
jmp
adc
add
inc
push
push
push
mov
pop
aaa
push
sahf
mov
jl
ins
movs
les
adc
les
imul
push
cmp
sbb
xor
jge
imul
lock
push
mov
into
mov
xlat
xchg
sbb
or
mov
cmp
call
jo
repz
mov
cmp
out
and
pop
cs
push
hlt
xchg
out
test
ret
mov
jle
fcom
push
and
(bad)
xchg
inc
iret
in
in
push
jmp
loopne
or
ret
cmp
push
xor
mov
pop
cld
xlat
repz
sar
lahf
iret
push
test
mov
ja
das
ret
xor
cld
aad
sbb
int
cmp
dec
mov
cmp
and
jmp
mov
add
and
or
js
mov
adc
pop
jmp
ret
pop
push
rcl
ins
jnp
xor
mov
jne
test
mov
cmp
imul
push
into
fild
inc
sahf
ja
push
stos
adc
add
sbb
sahf
scas
ss
xor
inc
ins
ins
push
ror
jnp
bound
movs
lods
adc
mov
cmc
mov
(bad)
in
fidivr
adc
mov
aam
rcr
push
mov
inc
xchg
push
push
(bad)
xor
add
loopne
adc
jg
shl
das
jp
ins
stos
(bad)
jo
(bad)
movs
fdiv
sbb
cmp
cmps
arpl
fisubr
mov
shl
dec
std
jae
inc
or
fstp
shr
mov
out
xlat
popa
jecxz
dec
(bad)
jmp
retf
out
inc
push
sbb
sub
iret
jge
repz
cmp
jae
jmp
mov
and
(bad)
stc
add
out
jo
mov
call
and
xchg
mov
mov
ret
ret
lock
mov
int
jmp
mov
ins
sbb
push
mov
enter
int
xor
arpl
lea
retf
xor
xor
retf
add
push
fdivrp
adc
std
(bad)
imul
(bad)
out
stc
sar
sub
fbstp
out
pop
mov
adc
imul
push
dec
in
xchg
push
jg
xlat
test
inc
inc
cmp
jge
mov
add
pop
dec
adc
mov
iret
adc
call
test
ins
sub
xchg
movs
jmp
loop
iret
add
pop
fcom
repnz
add
je
and
sub
adc
shl
test
cmp
adc
mov
movs
xchg
sbb
ja
cld
mov
retf
adc
pop
cld
out
jbe
pop
mov
ss
inc
fstp
xor
jnp
jp
jns
popa
cmp
cdq
xchg
js
lahf
adc
int3
out
cmps
cmp
sbb
into
loopne
movs
je
cmc
mov
hlt
mov
jb
dec
add
(bad)
cdq
and
cwde
mov
push
das
fcom
addr16
iret
or
xlat
sub
xor
iret
out
sub
arpl
arpl
cld
push
xor
je
dec
test
pop
mov
inc
jle
enter
int3
push
xchg
fild
daa
push
cmps
leave
les
data16
fnstenv
push
push
mov
mov
outs
into
mov
lea
mov
test
neg
dec
icebp
aam
sahf
gs
fidiv
pop
fimul
leave
sar
dec
add
sbb
in
pop
sub
inc
or
into
fwait
shr
mov
adc
inc
out
xor
sbb
sbb
ret
cs
sub
test
cmp
inc
jmp
ret
rol
scas
jle
inc
adc
rcr
jp
daa
pop
cmp
mov
and
push
and
daa
pop
test
ss
imul
and
ret
dec
inc
fimul
aaa
je
cmps
retf
mov
jg
push
ss
vmovdqa
mov
iret
jecxz
outs
xor
out
xchg
sbb
sub
(bad)
test
shr
fcomp
xchg
jnp
sub
sub
mov
outs
test
sub
in
dec
or
xor
std
cmp
aas
dec
cmp
push
sub
shr
fistp
scas
jae
out
add
(bad)
mov
pop
test
xchg
sub
mov
pop
ds
xor
cmps
mov
aad
cld
outs
pop
pop
cmc
sbb
xor
jg
push
cmp
pusha
cdq
push
mov
dec
or
add
call
cmp
push
mov
mov
sub
ss
xor
aaa
fst
lds
xor
xor
xchg
cmps
dec
mov
cmps
jnp
mov
les
(bad)
and
pop
mov
inc
push
inc
adc
xchg
leave
cmp
call
xchg
hlt
or
sbb
ror
add
push
mov
xlat
clc
add
sahf
sbb
repnz
sbb
jmp
ret
out
sub
jns
fsubr
sbb
xchg
icebp
gs
cli
jnp
shr
lods
jns
je
adc
aaa
mov
mov
addr16
(bad)
xor
ret
in
jb
inc
add
xchg
ror
pop
out
(bad)
imul
and
imul
mov
daa
es
xchg
outs
das
push
sbb
paddb
into
mov
cdq
(bad)
aam
add
or
inc
and
bound
aas
or
mov
lock
or
ret
or
shl
int3
rcr
jno
sbb
mov
leave
or
sbb
jne
js
push
rol
mov
xor
jp
cmp
not
jno
adc
sub
leave
xchg
mov
ja
cmp
jg
pop
jecxz
cwde
lods
ficom
or
mov
test
jmp
inc
xlat
arpl
lods
xor
adc
jle
cdq
dec
adc
mov
cmp
adc
pop
fadd
mov
push
add
mov
mov
out
sahf
cdq
mov
mov
(bad)
leave
outs
jge
pop
cmp
add
int
in
jnp
push
xor
push
jmp
mov
push
push
mov
xchg
and
test
dec
dec
retf
mov
xor
pop
mov
popf
push
(bad)
in
movs
in
pop
fs
mov
mul
add
mov
cmp
stos
mov
fnstenv
mov
xchg
add
in
sti
arpl
sbb
push
push
shr
push
jns
call
pop
rcr
aas
dec
test
pop
cmp
out
dec
popa
sbb
mov
ret
sub
outs
out
adc
adc
and
mov
inc
iret
pop
inc
jne
aad
push
sub
adc
retf
repz
aam
dec
mov
add
loop
sub
aas
les
fmul
cmp
add
rol
shl
inc
fisub
mov
xchg
mov
imul
mov
add
add
jb
div
scas
sub
adc
xchg
cld
jmp
inc
cmps
pop
mov
dec
mov
test
stos
dec
fcom
outs
ins
ja
mov
cs
xchg
cmp
loope
sub
les
xchg
and
jl
and
push
ins
nop
inc
lds
sar
ss
js
sub
sahf
xchg
sbb
fs
cmp
xor
jbe
ds
dec
dec
ret
mov
or
and
xchg
inc
into
xor
lods
sbb
xchg
pop
dec
jmp
icebp
xchg
ds
sbb
xor
stos
jb
adc
jb
xchg
cmp
retf
xor
mov
mov
xor
pop
pop
jnp
dec
inc
xor
pop
cmps
lods
mov
jp
lds
push
scas
adc
mov
pop
icebp
mov
test
ret
dec
std
loope
or
dec
sub
and
xor
cmps
(bad)
call
popa
das
lds
cmp
fs
or
jmp
addr16
dec
lods
imul
std
cmps
test
mov
inc
(bad)
std
cli
inc
cmp
cld
lds
xor
jnp
push
cmp
call
jnp
mov
fdiv
push
es
xchg
into
loope
(bad)
cwde
sbb
dec
adc
pop
xchg
imul
(bad)
push
mov
mov
mov
jns
jmp
imul
fpatan
jbe
cmc
add
dec
in
out
jecxz
sub
push
or
std
icebp
jge
sbb
mov
es
in
xchg
adc
dec
or
sub
mov
sti
sbb
(bad)
hlt
jge
push
mov
retf
call
mov
test
(bad)
mov
sub
outs
sti
imul
add
jb
cmp
outs
(bad)
mov
mov
or
loop
jmp
mov
xor
sub
scas
jbe
movs
xchg
pop
stos
dec
push
mov
int3
ret
cmp
retf
call
out
ss
inc
jmp
ss
push
inc
cmp
xchg
jmp
or
es
mov
out
std
inc
and
mov
je
mov
retf
icebp
mov
out
nop
sub
add
cdq
in
jl
add
gs
mov
mov
iret
dec
bound
inc
xchg
outs
and
arpl
sub
(bad)
ret
adc
jl
je
mov
mov
push
jp
mov
punpcklbw
mov
sbb
sbb
inc
in
div
add
push
push
push
push
in
mov
xchg
aam
ss
dec
inc
or
test
push
push
pushf
xor
pushf
out
push
xrstor
loope
fistp
hlt
mov
(bad)
dec
shl
push
mov
mov
inc
in
cld
cmp
and
enter
xchg
std
cwde
js
in
inc
inc
xchg
mov
aas
cmc
pop
test
xchg
mov
xchg
fs
fnsave
(bad)
xchg
and
scas
mov
sub
mov
lods
(bad)
hlt
cld
pop
add
jbe
or
mov
jnp
repz
mov
mov
mov
mov
xchg
jmp
and
xor
mov
repz
loope
inc
rcr
fidivr
xor
xor
fbstp
hlt
out
jmp
pop
ss
scas
or
push
xchg
jbe
mov
jb
hlt
into
loop
jmp
out
or
jecxz
sub
cmp
mov
or
adc
div
ficomp
ins
iret
or
push
pop
mov
inc
test
pop
fwait
mov
ror
jo
jg
jns
pop
ret
pop
pusha
jbe
jg
adc
mov
pusha
(bad)
(bad)
je
cmp
mov
div
test
or
cmp
das
gs
jl
xchg
xor
or
xchg
jmp
and
xchg
pusha
inc
mov
xchg
les
loopne
mov
jp
adc
dec
call
mov
push
push
push
retf
shr
sahf
add
(bad)
imul
adc
or
or
push
sahf
cmps
pop
or
aad
lock
aas
pop
(bad)
pop
lea
fidivr
ret
mov
ds
ds
mov
push
or
xor
pop
dec
iret
cmp
outs
shr
mov
inc
stc
mov
jne
inc
ja
add
movs
lahf
xchg
pop
addr16
mov
push
cdq
push
mov
in
xchg
pop
dec
pop
jecxz
lea
and
sti
daa
push
cmp
ins
pusha
pusha
mov
stc
jbe
xchg
jb
mov
xchg
or
arpl
jb
cmp
test
scas
je
mov
int
xchg
cmc
mov
cli
lock
lods
shl
test
push
mov
cmps
out
push
int
sbb
out
or
mov
jno
push
cmp
test
out
dec
rcr
jp
mov
invd
push
jns
in
xchg
ret
call
sub
mov
jne
addr16
ss
cmp
pop
aam
and
push
mov
mov
movs
in
(bad)
lds
imul
mov
or
loopne
ror
sbb
idiv
sbb
(bad)
jmp
adc
scas
ds
adc
sbb
adc
rcl
clc
test
jno
push
enter
pop
ds
test
jmp
(bad)
out
xor
jecxz
dec
fdivr
ins
cwde
aas
xor
int
dec
std
aad
outs
out
sbb
repnz
mov
xor
push
retf
adc
sbb
addr16
xor
scas
cmps
adc
in
add
(bad)
retf
fmul
jnp
inc
js
enter
shl
mov
push
scas
xchg
out
jl
sub
data16
adc
mov
jbe
push
ror
popa
addr16
cmp
inc
leave
sub
js
push
retf
mov
and
adc
push
sbb
sbb
jns
out
mov
jo
rcl
xchg
mov
out
push
jae
push
dec
adc
jp
shr
push
inc
fdivr
in
repnz
push
dec
cld
(bad)
fcomp
pop
mov
or
xlat
cmps
xchg
cwde
out
sub
xchg
shl
sub
dec
xor
(bad)
fnstcw
mov
or
nop
xchg
jp
xchg
fcomp
(bad)
aam
mov
je
dec
fmul
jmp
push
xchg
mov
fst
inc
arpl
xchg
fsubrp
vmwrite
outs
add
and
pop
and
cmp
sub
mov
stos
sub
mov
loopne
mov
hlt
retf
push
cmc
enter
mov
inc
pop
imul
mov
fadd
pop
inc
mov
les
rol
xlat
adc
and
mov
gs
inc
lock
cmp
push
int3
inc
adc
jns
adc
mov
xchg
xchg
(bad)
int3
or
movs
push
cdq
addr16
out
mov
imul
and
push
mov
jecxz
cmp
mov
and
cmc
int
jle
dec
loop
loopne
fs
adc
push
xchg
adc
jle
arpl
sbb
fcmovb
int3
sub
cmps
sbb
xchg
jmp
lahf
imul
jne
mov
js
scas
out
(bad)
dec
inc
sti
call
outs
xor
sbb
cmp
lock
jo
xlat
jb
xor
adc
dec
jns
iret
(bad)
and
mov
push
mov
mov
jo
xor
inc
shr
ret
adc
ficom
mov
mov
mov
adc
push
inc
adc
pop
jno
cmps
lock
test
(bad)
clc
cmp
mov
cs
sub
xchg
in
jbe
sub
cli
(bad)
mov
test
data16
and
push
(bad)
xchg
push
mov
mov
cmp
add
cmp
movs
(bad)
in
loope
je
(bad)
sti
out
mov
cmp
jle
push
pop
xchg
retf
dec
add
inc
mov
jnp
push
jle
shr
retf
test
sbb
mov
(bad)
test
pusha
dec
sub
add
es
shl
les
add
and
xor
sub
repnz
dec
add
jl
dec
xchg
imul
lock
call
mov
sbb
pop
or
scas
xchg
loopne
xchg
xor
sub
mov
cmp
jns
int
push
clc
leave
push
fisttp
es
xchg
sbb
inc
adc
sahf
ficomp
bound
mov
add
xchg
aam
push
mov
and
es
jns
inc
or
inc
(bad)
xchg
or
(bad)
and
rcl
mov
mov
fisub
cmp
mov
test
in
movs
fdiv
mov
ficomp
scas
in
pop
adc
shl
pop
jg
arpl
stos
daa
outs
(bad)
das
mov
shl
sbb
xchg
test
outs
repz
and
test
jge
bound
imul
shl
and
call
outs
mov
push
ss
pop
push
fist
push
adc
mov
adc
mov
pop
idiv
and
pusha
cwde
stos
or
fld
(bad)
out
push
in
call
add
(bad)
adc
sbb
and
mov
mov
sub
jmp
adc
call
pop
retf
pop
arpl
sar
retf
ja
gs
dec
push
pop
adc
sbb
scas
enter
imul
rcl
mov
cmp
xlat
ins
ret
adc
ficomp
pop
lahf
mov
int
ffree
shr
or
mov
cmp
es
call
int3
xchg
scas
ja
xchg
bound
jae
test
adc
adc
inc
mov
fisub
stos
xchg
dec
gs
xchg
sahf
adc
dec
popf
jb
in
sti
mov
jns
add
je
inc
cmps
loop
out
ret
(bad)
iret
mov
rcr
cmp
inc
pusha
sbb
lds
add
jge
xchg
lds
cmc
and
sbb
mov
(bad)
jnp
ss
pop
cdq
aad
pop
push
mov
dec
or
push
pop
in
dec
popa
lea
retf
pusha
mov
jmp
movs
add
dec
repz
ret
hlt
out
sar
jl
les
int
or
or
scas
sahf
sub
fs
inc
jmp
test
fnstsw
mov
add
icebp
dec
out
mov
fistp
pop
xchg
push
aas
mov
sti
sub
mov
xor
stos
sbb
fwait
push
sub
mov
imul
lds
pusha
push
sub
inc
fwait
inc
xchg
adc
ja
test
lods
or
shl
mov
mov
scas
fwait
jne
mov
je
test
leave
mov
mov
retf
pop
mov
loopne
dec
or
jbe
out
call
scas
dec
adc
(bad)
das
shl
hlt
test
jns
jp
in
pop
aaa
xor
push
and
xor
loope
cmc
mov
out
stos
pop
call
sbb
inc
add
out
push
lock
sbb
fadd
dec
mov
dec
mov
mov
icebp
ja
div
fldcw
xchg
pop
add
pop
in
int3
into
stos
add
dec
aam
int
repnz
add
aaa
mov
sub
cmp
xchg
popf
xchg
and
mov
les
or
sub
inc
fs
repnz
push
in
xchg
inc
pusha
inc
pop
outs
pop
cmp
xor
ins
movs
sub
stc
std
je
push
std
ins
stos
mov
idiv
dec
xchg
stc
xor
movs
scas
xchg
and
(bad)
gs
(bad)
mul
push
ja
cwde
in
not
test
push
adc
test
aam
push
iret
jle
ds
test
int3
jbe
adc
fs
jmp
pop
cmc
je
ror
pushf
mov
xchg
pop
jnp
aam
or
mov
mov
loope
mov
xchg
pop
mov
xchg
mov
pop
inc
push
dec
lods
das
push
mov
jno
jne
sub
push
inc
dec
arpl
loopne
mov
sub
push
push
xor
retf
std
cli
ja
sub
jns
xchg
inc
in
data16
cwde
pop
loop
ret
sbb
in
iret
adc
mov
inc
pop
test
cli
in
xor
fidiv
mov
push
mov
out
lea
push
jmp
scas
jne
push
pop
(bad)
(bad)
fsubr
cmp
jle
xchg
push
dec
jno
mov
push
stc
push
push
je
push
js
pusha
sbb
shl
or
adc
gs
xor
xor
mov
ret
aas
(bad)
xor
loope
(bad)
aas
fnstenv
retf
in
push
mov
pop
xchg
mov
adc
push
and
mov
inc
sub
inc
sub
rcr
mov
mov
jmp
imul
xchg
push
dec
lds
mov
movs
fwait
leave
mov
ror
lods
loope
mov
mov
iret
ficom
dec
sbb
sbb
or
in
push
sub
loope
pusha
cs
imul
nop
add
stc
add
test
data16
das
mov
in
pusha
xor
in
cmp
dec
(bad)
or
and
push
cmp
scas
(bad)
ins
shr
inc
je
push
rcr
popa
inc
jg
xchg
pop
addr16
push
mov
test
jb
mov
retf
dec
fisubr
inc
call
inc
inc
scas
imul
push
daa
dec
das
or
call
test
jbe
imul
sar
dec
inc
inc
jmp
dec
sbb
mov
cmp
xchg
add
jns
push
xlat
inc
pop
mov
aam
add
and
xchg
mov
mov
xor
adc
shl
cmp
dec
cmp
daa
arpl
sub
jno
mov
mov
sbb
mov
xor
lea
out
add
vxorps
xor
or
js
(bad)
lods
push
loop
xchg
jnp
mov
mov
jae
pusha
out
ret
sub
into
popa
aas
in
or
cmp
mov
addr16
dec
shr
sbb
cs
mov
aaa
push
sti
or
lahf
sbb
dec
mov
sbb
test
ret
addr16
or
loopne
jns
out
outs
mov
xor
rol
mov
mov
ret
push
push
(bad)
and
cwde
or
sahf
mov
outs
xor
mov
ror
cmc
mov
jno
xchg
sbb
jno
or
(bad)
jae
push
jb
sbb
lock
pop
mov
mov
imul
inc
sub
xchg
in
mov
jmp
jg
mov
jae
jge
mov
lock
aad
shr
xor
std
mov
std
pop
sbb
inc
sbb
cld
out
dec
and
mov
fldenv
jle
lahf
inc
iret
lock
xchg
fimul
jge
or
jle
or
sbb
mov
(bad)
ja
cmps
push
aad
pop
mov
outs
or
vdivps
aad
mov
sub
sub
add
push
sti
sub
or
cmp
jecxz
mov
mov
inc
xor
fiadd
push
lds
fistp
dec
fnstcw
ins
mov
addr16
mov
add
pop
fs
jmp
mov
xor
retf
jg
adc
pop
cmp
dec
icebp
xor
leave
cmp
mov
inc
ficom
xchg
jne
div
lock
outs
ss
jmp
imul
add
ja
mov
scas
out
xchg
aad
jmp
bound
pop
enter
cmp
das
push
cmp
and
jmp
sbb
push
sbb
adc
inc
in
sbb
cld
push
adc
lahf
mov
fisubr
inc
pop
out
lods
sub
aaa
mov
js
fwait
(bad)
(bad)
cmps
mov
pop
int3
push
imul
int
shl
add
and
mov
mov
sbb
ss
push
xor
call
and
bnd
adc
test
mov
sbb
sbb
mov
adc
mov
rcl
xor
(bad)
(bad)
and
fcomp
mov
push
adc
pop
sub
sbb
xor
clc
popf
mov
popa
mov
aad
pop
mov
mov
out
jne
jg
dec
add
mov
bound
pop
pop
icebp
mov
cmc
imul
jne
test
push
inc
int
mov
fs
dec
add
sub
stc
or
sub
ret
movs
test
jnp
sub
retf
push
cmp
pop
and
retf
pop
ds
xor
retf
hlt
arpl
sbb
sub
push
sbb
ins
push
inc
fs
adc
lock
mov
inc
add
popa
cs
inc
dec
fld
popa
in
inc
inc
rol
das
jmp
adc
sbb
push
push
inc
xor
bound
jne
das
sbb
cld
sub
mov
push
mov
xchg
sub
jecxz
inc
xor
daa
and
sti
dec
xor
ins
xor
test
outs
sbb
adc
call
shl
ror
adc
dec
stos
not
mov
scas
push
(bad)
fiadd
out
add
mov
dec
(bad)
cli
mov
push
adc
jae
(bad)
add
fld
cmp
out
cmps
(bad)
dec
xchg
pop
ret
push
(bad)
mov
and
mov
push
call
push
pop
bound
scas
dec
mov
mov
call
jmp
arpl
sbb
repz
xchg
cli
retf
(bad)
mov
dec
xchg
or
and
test
xchg
retf
loopne
cs
dec
and
mov
ret
or
sbb
jb
push
pop
adc
cmp
inc
std
mov
push
in
mov
test
jle
es
scas
mov
aas
fldenv
pop
push
inc
mov
pop
or
enter
push
push
retf
mov
lods
sbb
bound
mov
popf
imul
lods
fild
into
fisub
xor
or
in
push
mov
in
loopne
movs
fsubrp
pop
nop
cmc
sub
push
jns
dec
mov
mov
cwde
and
mov
in
xchg
xor
enter
aaa
mov
loope
mov
mov
xchg
sbb
test
out
retf
inc
sti
int
push
test
mov
inc
inc
les
arpl
dec
imul
mov
mov
sbb
imul
push
xchg
stos
lea
cld
dec
cmp
jecxz
nop
jle
push
movs
push
pop
hlt
inc
arpl
adc
mov
xlat
lock
mov
push
ins
jb
cmps
cmp
into
shl
dec
pop
in
xor
sbb
add
xchg
fisub
fmul
jp
scas
xchg
dec
inc
pop
pusha
mov
lods
in
dec
push
xchg
and
dec
into
push
mov
daa
and
jle
std
(bad)
stc
adc
movs
popa
frstor
sar
jns
fdiv
sti
or
or
push
xor
test
icebp
rol
(bad)
adc
dec
mov
xchg
(bad)
pop
pop
movs
lods
inc
div
rol
xor
je
mov
lds
adc
shr
arpl
daa
outs
xchg
repnz
nop
mov
jmp
mov
test
retf
mov
dec
cmp
xchg
jb
pop
sub
pop
hlt
pop
ret
fisttp
ins
mov
pop
push
jmp
gs
inc
xchg
adc
div
ja
jmp
lock
fs
retf
inc
sub
mov
adc
push
mov
adc
mov
cli
movs
mov
xchg
bnd
mov
es
fistp
mov
(bad)
xchg
int
sub
out
test
xchg
xchg
xchg
jle
movd
pop
adc
cmps
sbb
mov
jp
ret
or
loop
xor
aas
add
add
dec
mov
int
pop
fs
std
inc
dec
repnz
addr16
popa
and
test
frstor
in
jge
fwait
dec
movs
bound
mov
lahf
popf
call
and
dec
cmp
push
cmp
popf
in
mov
(bad)
imul
adc
fild
mov
int
jg
shr
lods
call
pop
in
retf
and
adc
mov
ds
mov
aam
dec
popa
or
jae
pop
in
inc
add
add
xchg
call
sbb
je
icebp
out
in
(bad)
or
daa
aaa
push
mov
xor
xchg
sbb
aas
dec
add
ficom
movsx
mov
cmp
cmp
xor
xor
add
test
adc
xchg
inc
jne
dec
adc
push
pop
data16
xor
aad
jmp
lea
(bad)
icebp
jae
xchg
mov
mov
out
ds
or
shl
jg
and
pcmpeqb
adc
pop
fld
lods
mov
imul
sbb
ret
mov
xor
(bad)
daa
or
ret
push
int
ror
xchg
arpl
fcomp
rcl
inc
adc
hlt
push
lock
rcl
cmp
dec
adc
pop
sbb
jge
mov
rcr
lods
js
in
mov
mov
mov
aaa
ret
push
sbb
(bad)
out
inc
or
mov
dec
cmps
or
xlat
stos
pop
das
mov
push
jb
imul
sbb
cmp
mov
and
repnz
xor
cld
test
add
rcr
test
xor
test
out
arpl
xor
cli
adc
fdiv
jl
mov
xor
std
arpl
push
cmp
pop
fmul
cli
std
jbe
inc
dec
sbb
addr16
imul
cmp
imul
shl
ds
iret
fld
ror
gs
inc
icebp
fwait
and
hlt
sub
scas
loope
clc
into
pop
stos
add
push
dec
xlat
dec
add
or
pop
data16
cmp
enter
sub
add
call
ret
or
fs
scas
loopne
jno
clc
mov
jmp
out
mov
aas
shl
sbb
jle
sub
adc
sub
push
repnz
(bad)
mov
mov
ins
cmp
push
and
data16
or
and
cmp
push
(bad)
mov
mov
es
test
cmp
das
in
dec
push
xchg
adc
pop
out
pop
out
add
or
mov
pop
aaa
jo
mov
or
mov
lahf
and
cmp
mov
js
lea
out
and
dec
aas
ret
mov
adc
(bad)
jb
mov
cmps
out
(bad)
and
xor
adc
xchg
repz
xor
push
lock
add
rol
mov
push
or
push
(bad)
fcomp
scas
pop
aam
jmp
mov
loop
mov
in
retf
loope
ja
cli
ror
clc
je
retf
retf
pusha
mov
call
mov
lea
ja
gs
dec
sub
adc
push
and
add
nop
xor
sbb
gs
adc
aad
dec
push
jnp
(bad)
jle
das
push
cmp
hlt
xchg
jbe
out
jns
ret
pop
mov
cmps
add
lahf
lea
inc
adc
xchg
rep
push
out
add
imul
dec
ret
pop
into
cwde
push
pop
neg
dec
xchg
add
inc
nop
mov
push
jl
stc
lds
mov
lods
psrlq
pop
das
sbb
push
pop
stc
rol
jns
inc
out
in
add
mov
movs
fdivrp
mov
mov
pop
jecxz
push
aaa
cdq
pop
mov
into
pop
adc
add
mov
into
xor
aas
stos
lds
stc
popf
cmp
push
xor
call
aam
sbb
mov
xor
adc
movs
inc
imul
mov
rol
js
pusha
fldcw
jbe
add
adc
push
out
add
pusha
and
and
les
jle
xchg
std
add
push
sti
sub
aam
and
add
outs
sar
or
ds
sub
push
add
aad
xchg
adc
inc
inc
out
pop
or
mov
pushf
push
loope
push
movs
add
fwait
inc
stos
dec
sub
xchg
sbb
retf
pop
dec
imul
stc
push
fstp
pop
or
add
xchg
pop
xchg
add
int
fcomp
cmp
jmp
call
mov
jb
adc
mov
jecxz
push
xor
mov
lea
in
adc
cld
fwait
in
dec
cmp
ss
xor
lds
cmc
push
dec
sub
push
jnp
jmp
push
gs
sbb
adc
inc
call
pop
ds
or
pop
add
sbb
inc
dec
and
xchg
call
fadd
mov
data16
pop
stc
div
in
lahf
test
push
jb
mov
inc
jg
push
jno
and
jecxz
mov
mov
data16
cmps
mov
je
push
fistp
push
in
ss
sub
je
stos
and
stos
sub
jns
xchg
jmp
test
and
cmp
add
hlt
aas
sbb
popa
pop
leave
or
lock
and
and
mov
push
and
and
mov
xchg
push
mov
sub
addr16
fisttp
xchg
xor
push
outs
sbb
sbb
jb
movs
jmp
hlt
pop
into
cmp
shl
mov
sub
push
push
cmp
outs
inc
mov
dec
mov
ret
fwait
ss
aas
jnp
ret
leave
mov
jl
enter
xor
or
or
and
push
push
mov
adc
pop
jl
aaa
sbb
pop
dec
or
in
dec
int
call
(bad)
push
call
pop
and
push
adc
data16
imul
hlt
or
adc
push
push
lahf
xchg
mov
pop
cmp
sbb
jnp
test
adc
retf
daa
inc
xchg
in
fwait
mov
add
stos
or
or
mul
xchg
aaa
popa
fisub
push
movs
and
mov
(bad)
xchg
aaa
inc
in
cld
imul
mov
inc
test
pushw
rol
xlat
dec
push
ficomp
test
mov
lock
jge
cmp
lds
pusha
inc
cdq
adc
(bad)
js
jne
mov
push
stos
ret
xlat
xor
retf
into
leave
jne
mov
out
mov
pop
jbe
leave
les
mov
cmp
mov
sbb
inc
in
xchg
lock
jns
aad
or
sbb
adc
test
test
xor
ret
gs
add
pop
inc
sti
inc
cwde
xchg
lock
scas
adc
jmp
xchg
les
jb
fnstsw
cmp
push
mov
mov
int
mov
xchg
test
jne
push
cdq
call
(bad)
adc
pusha
out
in
je
ss
mov
test
sbb
aas
cmp
pop
mov
cmp
fcmovb
dec
into
push
cmp
pop
xor
mov
rcl
and
in
mov
cmp
repz
pop
ins
push
cmp
mov
pop
mov
adc
(bad)
cli
sub
pop
add
ret
ins
(bad)
popa
dec
inc
mov
sahf
int3
xor
jl
imul
dec
retf
push
sub
jle
stc
cmp
icebp
add
jae
shl
mov
mov
test
fisttp
jp
sub
jo
pusha
or
xor
jnp
cdq
outs
or
stos
push
mov
or
sbb
jb
(bad)
push
xchg
lds
add
in
scas
fcom
sbb
mov
aam
fnstcw
leave
jp
dec
jne
outs
pop
fwait
pop
mov
sub
sar
ror
cs
les
fadd
pop
cmps
inc
mov
cld
cmp
int3
(bad)
loop
mov
jbe
es
aad
out
ins
jbe
test
mov
pop
(bad)
cmp
sbb
test
lods
aas
sub
push
pop
pop
(bad)
outs
nop
ror
outs
stos
sbb
scas
dec
cmp
ja
std
std
cli
sub
and
inc
pop
adc
dec
inc
jns
sbb
ja
sbb
sub
bound
(bad)
xchg
jg
call
mov
xchg
or
jle
dec
neg
mov
or
cmp
in
lods
and
push
jne
sub
adc
mov
jne
mov
mov
jmp
pop
call
inc
rol
dec
push
cmp
outs
sti
pop
mov
(bad)
lods
ret
clc
test
push
ins
mov
inc
arpl
cmc
jbe
and
mov
add
lea
and
icebp
push
xchg
jno
sub
or
neg
inc
in
addr16
mov
cmp
call
mov
call
ret
mov
inc
dec
sbb
sahf
jl
jb
or
ror
sbb
sti
push
jne
popa
pop
pop
and
push
lahf
(bad)
imul
adc
or
xchg
xor
xor
repnz
mov
stos
es
push
xchg
daa
sub
pop
push
mov
mov
into
hlt
fadd
adc
and
rcpps
inc
std
or
dec
fwait
mov
add
mov
push
xchg
jmp
cmps
pushf
fwait
loop
imul
rol
push
lods
xchg
mov
rol
fmulp
jmp
or
jge
lock
std
sub
sbb
in
in
push
adc
pop
sub
stos
das
jmp
std
inc
xchg
xchg
rcl
scas
std
pcmpeqb
sub
ins
scas
mov
das
inc
movs
cli
dec
and
bound
retf
out
arpl
ret
aad
sti
(bad)
jae
adc
in
je
lock
adc
xchg
jbe
inc
int3
push
mov
das
lock
pop
movs
clc
aad
retf
out
test
out
dec
jmp
ins
mov
push
mov
or
mov
xor
push
add
mov
std
aad
out
push
scas
xor
jnp
popf
mov
ins
sub
xchg
sub
cmps
and
xchg
arpl
loope
scas
js
or
idiv
(bad)
retf
mov
fstp
xchg
(bad)
test
and
lahf
popa
add
add
in
sub
mov
mov
inc
pop
mov
push
movs
movs
xchg
xchg
push
jns
in
aas
inc
mov
ret
test
js
or
ret
pop
sahf
loope
sub
aas
rcl
or
dec
fist
retf
out
or
stos
push
cmp
adc
sbb
mov
(bad)
mov
fndisi(8087
sub
outs
adc
push
je
mov
(bad)
ds
sub
sahf
push
xor
cwde
es
aaa
outs
cmps
and
mov
jecxz
ror
jne
psrld
std
mov
loopne
mov
inc
pushf
push
retf
int3
fld
jmp
ins
ins
push
enter
mov
push
clc
adc
add
xor
and
mov
int
jmp
and
mov
out
loopne
inc
aaa
pop
mov
dec
movs
jg
movups
add
sub
mov
add
adc
clc
lods
mov
inc
les
push
dec
(bad)
cmc
in
clc
cld
aaa
lahf
jg
(bad)
jl
xor
fimul
mov
je
jno
xor
repnz
(bad)
enter
(bad)
or
pslld
js
inc
add
jo
xor
pusha
sahf
jae
retf
aad
mov
aam
ss
movs
std
imul
gs
mov
in
aas
or
aaa
daa
cs
and
call
or
adc
ss
mov
rcl
test
mov
adc
cmc
mov
sbb
iret
cmovns
cmps
inc
xchg
fst
ins
rcl
push
jle
xor
dec
pop
imul
std
ret
pusha
cmps
in
sub
ja
mov
pop
(bad)
mov
mov
sti
jne
inc
stos
jge
clc
pop
popf
push
arpl
movs
enter
stos
pop
and
cmps
jmp
ins
push
daa
(bad)
fist
mov
out
cmp
enter
or
(bad)
fcom
adc
mov
rcl
cwde
fsub
out
ds
dec
ss
jno
dec
sti
jmp
loope
dec
pop
out
fadd
dec
outs
xor
in
movs
mov
scas
dec
aad
sahf
xchg
popa
cdq
jnp
cwd
fwait
test
inc
aam
rcr
pop
clc
adc
xor
cld
cs
pop
scas
int3
push
mov
xchg
push
lds
cmp
das
clc
bound
mov
addr16
push
jmp
iret
pop
xchg
in
rcr
xchg
xchg
sbb
imul
stos
pop
mov
inc
(bad)
jl
pop
rcl
imul
sti
mov
ret
adc
(bad)
and
fwait
adc
push
push
and
mov
fucomi
cmp
push
push
xchg
push
stc
jecxz
ss
sbb
pop
sub
dec
or
and
xchg
imul
enter
xchg
out
push
inc
mov
out
push
ins
and
fist
xor
mov
ret
loope
pop
add
push
jmp
xlat
fcmovu
nop
mov
mov
sbb
ja
shl
loopne
add
mov
jmp
cwde
stc
cmp
ins
xchg
xor
sar
fs
dec
sar
sbb
jne
(bad)
shl
rol
mov
rol
inc
out
out
nop
popa
rcl
fucom
pop
mov
sar
jnp
jmp
jo
mov
jle
add
push
add
push
mov
pop
xor
call
retf
mov
cmps
jmp
mov
movs
cdq
in
stos
vpsllw
pop
push
fidiv
jmp
inc
retf
(bad)
mov
rcl
dec
xchg
xor
fild
push
mov
inc
addr16
mov
mov
pop
(bad)
jnp
adc
aaa
in
xchg
mov
ret
add
dec
loop
add
movs
mov
push
pop
in
sbb
pop
fs
loop
mov
dec
jge
aaa
unpcklps
and
mov
out
inc
shl
or
cmp
call
and
mov
push
adc
sub
iret
es
repz
pop
je
push
cld
jmp
push
adc
mov
movs
lods
test
dec
nop
adc
xchg
sub
cmp
cs
idiv
inc
or
call
js
gs
inc
adc
(bad)
repnz
ss
das
jecxz
cs
cmp
mov
mov
idiv
jno
(bad)
shl
pop
fucomip
pop
mov
outs
or
and
xchg
call
jbe
adc
into
cmp
lods
stos
cld
fist
sub
cmp
call
mov
pop
jno
push
cdq
in
mov
cdq
sub
add
not
pop
fs
mov
movs
xor
aam
enter
xor
xor
cmc
jmp
lods
mov
pop
cdq
sti
jb
sub
jl
int3
pushf
sub
mov
(bad)
and
into
mov
inc
fiadd
push
stos
push
cwde
xlat
repnz
pusha
xor
mov
popf
jb
jg
pop
cli
mov
or
out
inc
cdq
arpl
mov
xchg
(bad)
clc
nop
neg
les
inc
dec
in
dec
fs
in
imul
dec
movs
je
jbe
cmp
dec
fyl2x
lea
cli
inc
cli
xor
lods
push
cmp
shl
les
mov
sub
bound
mov
out
mov
adc
and
(bad)
jl
imul
xchg
xor
mov
sbb
inc
scas
xchg
jl
jae
and
xor
in
or
in
add
xor
mov
xor
inc
add
adc
rol
sbb
out
xlat
sub
and
movs
inc
popa
cmp
sub
aad
cdq
dec
sub
xchg
sub
fist
mov
xchg
jnp
iret
push
mov
sub
and
sub
jmp
cmps
fidiv
sahf
mov
mov
xchg
(bad)
adc
or
mov
pop
jo
dec
retf
cld
jp
and
push
jle
test
das
idiv
test
loop
push
out
inc
add
pop
adc
cmp
add
(bad)
nop
sbb
or
lods
mov
sub
and
je
(bad)
out
dec
fucomp
lea
out
add
push
(bad)
lds
add
push
(bad)
cld
fsubr
and
pop
into
push
cmp
or
shr
push
imul
push
fstp
rcr
sub
sbb
mov
in
mov
cs
inc
mov
inc
cmp
inc
ror
pop
(bad)
clc
imul
(bad)
hlt
inc
outs
mov
jb
inc
in
cmp
add
jne
out
push
dec
xor
or
outs
push
or
or
leave
outs
mov
scas
std
shl
sbb
xchg
nop
jp
pop
pop
add
pop
(bad)
in
popw
in
retf
sbb
movs
mov
int3
sub
push
mov
xchg
mov
push
xchg
add
aas
mov
loop
pushf
ja
out
fucomi
push
(bad)
mov
ja
loope
or
dec
fbld
mov
aam
sbb
sbb
fcom
lods
out
retf
adc
ins
outs
(bad)
dec
shl
out
scas
stos
js
dec
(bad)
popa
and
mov
call
cmc
dec
dec
add
sub
pushf
shl
(bad)
mov
pop
lock
inc
test
xchg
fs
je
mov
mov
dec
fsubr
imul
or
xor
pop
or
mov
hlt
or
mov
hlt
mov
sti
mov
push
scas
sub
push
ret
xchg
nop
inc
lahf
mov
mov
cmp
pop
and
es
mov
xchg
jne
mov
repnz
inc
xor
or
inc
or
xchg
push
fstp
movs
rcr
sub
retf
adc
add
jge
pop
sub
imul
xchg
(bad)
sub
xor
outs
mov
jnp
arpl
ds
into
jecxz
out
mov
mov
adc
sub
mov
inc
es
mov
icebp
xor
loop
repz
cmp
icebp
aam
jge
adc
jg
lds
add
arpl
daa
jae
das
add
popa
mov
mov
test
and
sahf
sahf
imul
jg
pop
movs
shl
push
jnp
push
outs
dec
mov
sbb
push
push
pop
sub
push
push
jmp
mov
cli
retf
inc
imul
jnp
mov
ds
or
fisttp
pop
jb
mov
jns
loopne
pop
call
push
and
call
sub
xchg
xchg
or
iret
fmul
fisubr
fisubr
mov
xchg
lea
add
int3
xor
fist
mov
nop
fst
dec
xchg
jg
popf
mov
fnsave
dec
outs
mov
test
sbb
outs
pop
push
outs
add
mov
lods
mov
inc
pop
ror
outs
test
outs
xchg
dec
mov
push
aam
fsub
add
cli
add
xchg
out
(bad)
jmp
mov
adc
js
fs
push
cli
xchg
lds
(bad)
movs
sar
xchg
dec
fxch
shl
retf
pop
jo
repz
ja
jo
out
jmp
mov
pop
add
xchg
xchg
aaa
xchg
jp
and
ss
movs
pop
mov
jl
outs
inc
add
cmp
jl
lods
mov
mov
pop
hlt
aam
sub
mov
cmps
adc
ins
mov
xchg
inc
cmp
xchg
ins
hlt
stos
mov
mov
mov
(bad)
jmp
mov
(bad)
(bad)
les
test
std
icebp
jp
push
leave
lock
cmps
popa
cmp
hlt
test
in
pop
add
xchg
sbb
rcl
or
jmp
inc
mov
dec
shl
mov
xlat
rcl
and
push
xor
cmp
xor
popa
mov
or
loope
push
mov
sbb
fcom
push
push
addr16
mov
pushf
fmul
cld
outs
gs
mov
jecxz
sahf
shl
gs
sbb
push
dec
and
clc
call
xchg
xchg
inc
inc
test
adc
mov
inc
jmp
xor
jmp
mov
mov
add
iret
int3
jbe
jns
ins
add
in
pop
daa
push
xor
movs
add
loope
or
adc
push
lea
adc
leave
or
(bad)
or
push
sbb
aad
mov
mov
or
not
push
mov
push
(bad)
fcomp
push
retf
enter
or
push
popf
inc
ret
cmps
test
ret
add
cmp
dec
mov
addr16
push
bound
jae
jno
xor
test
ss
jp
addr16
movs
(bad)
mov
enter
sub
fwait
outs
js
bound
stc
nop
jnp
in
dec
mov
data16
fdiv
out
push
fnstenv
jno
xor
adc
(bad)
in
cmp
shr
cmp
ins
or
(bad)
imul
movs
mov
popf
icebp
call
xchg
push
repnz
push
jnp
jae
shl
push
stc
dec
ja
mov
bound
clc
cli
pop
repnz
rcr
xor
mov
leave
mov
popf
cdq
imul
jbe
movs
test
rcr
mov
neg
cdq
mov
dec
loopne
push
mov
jecxz
jno
lahf
inc
aad
xchg
push
sub
scas
inc
pushf
cli
and
jbe
pop
fimul
xchg
out
dec
movs
daa
ds
lods
sbb
sbb
movs
dec
rol
mov
add
dec
add
add
pop
aaa
pop
sbb
dec
mov
pop
mov
(bad)
(bad)
movs
jno
sbb
jle
mov
adc
popf
xor
xbegin
ja
sbb
rcl
in
cmc
cmps
int3
movs
pop
push
adc
(bad)
cmps
ins
jecxz
xchg
clc
popf
rol
mov
js
pop
mov
pop
cld
rcl
mov
cdq
dec
xchg
pusha
mov
fiadd
loope
icebp
sbb
mov
pop
sbb
mov
ins
scas
(bad)
pop
mov
dec
cmp
dec
nop
ja
es
fiadd
pop
xchg
lock
or
or
xor
cld
retf
stos
cmp
je
sbb
or
fldcw
jecxz
leave
sbb
je
dec
std
add
pminsw
xchg
dec
or
push
nop
xchg
cmps
push
hlt
loop
mov
inc
inc
(bad)
pushf
in
(bad)
loopne
add
push
aas
ffreep
adc
cmps
cdq
push
clc
adc
mov
sbb
movs
cmp
xlat
push
mov
popa
scas
gs
mov
mov
xor
dec
cmps
mov
aas
enter
cdq
pop
pop
stos
outs
dec
imul
in
aas
add
ret
inc
in
icebp
out
shl
xor
clc
push
mov
jae
jb
enter
pop
xchg
sahf
mov
lds
push
jne
adc
dec
cmps
adc
mov
sbb
ret
call
push
xor
(bad)
mov
sbb
push
std
sbb
movs
sti
xchg
sbb
sub
push
xchg
lahf
mov
jmp
jle
push
stos
mov
jno
pop
leave
std
jbe
dec
mov
lahf
xchg
test
mov
shl
xchg
xchg
cmps
fstp
nop
into
jne
cs
jns
adc
shr
(bad)
mov
xchg
xor
mov
in
test
ds
dec
dec
out
addr16
sahf
imul
sbb
mov
test
sub
cmp
mov
test
aas
xchg
add
jne
daa
mov
xchg
pop
add
mov
and
sbb
mov
mov
dec
imul
inc
gs
ins
sahf
retf
xchg
int
sub
stc
adc
mov
xor
inc
xor
adc
mov
pop
loop
xor
cmp
lock
push
enter
sti
push
mov
mov
xchg
mov
sub
shl
repz
adc
inc
jmp
xchg
sub
cmp
aaa
dec
cmp
or
lods
xchg
mov
push
nop
loope
mov
mov
xor
cld
push
pusha
leave
mov
mov
add
popf
dec
out
jecxz
adc
or
(bad)
sub
pop
outs
inc
(bad)
rcl
xor
ins
pop
mov
imul
sti
pop
sub
push
aas
xchg
push
shl
mov
les
add
sbb
push
adc
jl
dec
or
add
ins
pusha
repz
pop
shl
iret
mov
xor
push
addr16
in
movs
ins
push
dec
and
and
in
push
(bad)
stos
outs
imul
arpl
sbb
jnp
cdq
cld
lock
push
jmp
stos
mov
icebp
sbb
push
pusha
xchg
enter
push
clc
mov
sti
xchg
into
(bad)
sub
add
mov
ficomp
(bad)
ss
push
outs
aaa
loopne
les
inc
(bad)
aas
aaa
inc
test
and
jb
xchg
xor
dec
das
xor
and
mov
mov
pop
adc
idiv
xchg
sbb
mov
jge
add
mov
loope
add
fs
dec
lea
push
nop
pop
add
sbb
out
mov
sti
dec
sbb
(bad)
(bad)
mov
mov
or
les
jb
push
bound
sub
hlt
pop
xor
or
mov
push
add
or
arpl
mov
jne
(bad)
aam
lahf
div
cmc
jl
(bad)
call
icebp
sub
in
imul
adc
aaa
jno
cmp
sahf
jne
xchg
int
jo
test
adc
int3
xor
movs
stos
icebp
lea
or
inc
or
out
push
sti
jge
adc
jge
dec
fld
(bad)
cmovae
pshufw
(bad)
jp
jnp
dec
inc
aaa
pop
leave
daa
popa
rcr
push
aas
retf
push
sar
lds
mov
add
jns
sbb
jmp
cld
adc
ja
and
fsubr
and
xchg
ss
out
repnz
ret
aas
jae
loope
mov
pop
or
mov
jnp
retf
push
add
fsubrp
sti
jae
mov
mov
repnz
inc
xchg
jle
stos
loopne
pop
lds
retf
sbb
cmp
dec
add
cmp
adc
imul
sbb
mov
ror
data16
arpl
rol
loopne
test
sub
jge
jl
ja
inc
out
scas
test
sar
int3
mov
sahf
sbb
test
mov
inc
test
enter
or
and
imul
adc
jge
gs
jns
mov
test
sbb
inc
ins
nop
rol
icebp
add
xor
and
outs
and
(bad)
mov
movs
pop
out
and
push
lods
xor
pop
repnz
cmp
fsubr
ror
pop
loope
inc
enter
imul
in
push
sbb
mov
mov
sbb
addr16
jbe
add
jle
sbb
out
jnp
lds
pop
cli
btr
fld
sbb
cmps
ja
mov
neg
rcr
dec
mov
ficom
mov
add
mov
setb
push
enter
int3
lods
ret
shl
fsubr
or
xchg
cli
out
mov
cs
mov
outs
pushf
dec
out
js
cmp
(bad)
(bad)
jl
out
mov
push
mov
mov
shl
ret
pop
sub
scas
ret
pop
sub
int3
rcl
mov
jnp
adc
sbb
adc
pop
ret
ins
outs
cli
jle
outs
mov
shl
js
push
aad
or
inc
fsub
mov
xor
jle
jno
ret
jo
into
pop
bound
dec
fsub
loop
iret
xlat
cld
and
arpl
movs
jge
scas
(bad)
jmp
stos
stos
add
and
out
ja
xor
mov
(bad)
das
mov
mov
repz
fisub
sbb
int
fst
jp
xlat
rdpmc
sub
fistp
sti
ficom
popa
call
sti
sub
mov
popf
(bad)
daa
pop
mov
data16
adc
data16
loopne
in
and
add
cmp
movs
jp
jl
push
sti
outs
pop
mov
mov
push
outs
loopne
call
dec
pop
dec
ficomp
pop
and
push
sti
xchg
loopne
mov
fwait
inc
scas
push
fist
stc
cmps
nop
int
mov
pop
(bad)
fisub
aam
inc
les
cmp
mov
arpl
jne
xchg
ins
mov
test
ret
addr16
ror
fst
inc
scas
ss
scas
mov
loop
(bad)
or
cmp
cmp
(bad)
cmps
dec
xor
mov
fidivr
dec
and
in
xor
jno
cld
inc
pop
mov
mov
imul
shr
pop
hlt
xchg
mov
ret
jecxz
outs
mov
bound
(bad)
push
ds
push
fdivr
arpl
les
add
mov
aaa
or
xchg
and
push
cli
jge
or
cmps
jbe
push
out
cmp
cli
cmp
pop
scas
sbb
fidivr
mov
jl
xchg
fidiv
push
int
inc
xchg
xor
fld
lds
sbb
pop
aad
shl
daa
mul
test
dec
fbstp
mov
mov
into
or
xor
or
aam
movs
push
adc
(bad)
mov
mov
(bad)
xor
out
adc
pop
or
stc
in
sub
lds
ins
repnz
jp
out
out
sub
xchg
push
add
(bad)
jne
mov
rol
(bad)
lods
jno
popa
inc
cs
(bad)
adc
sub
mov
and
in
jmp
sub
mov
mov
lds
call
aas
stos
int
push
inc
inc
mov
jmp
out
xor
hlt
adc
sub
lock
into
or
lds
aad
pushf
std
aad
sahf
jmp
(bad)
jmp
push
scas
or
xor
daa
and
pop
inc
jecxz
sbb
mov
push
pop
in
add
(bad)
cs
(bad)
int
xlat
fstp
dec
lea
jbe
pop
out
mov
mov
cmps
aad
rcl
push
aaa
stos
cld
mov
cmp
(bad)
push
push
jl
push
rcl
mov
jle
jne
mov
xor
add
movs
pushf
fisubr
mov
inc
dec
jns
jb
jns
add
not
xor
push
xor
fs
sbb
fcomi
mov
cmp
in
(bad)
xchg
cs
test
or
dec
add
retf
dec
in
mov
imul
pop
cwde
xchg
and
dec
jb
mov
int3
pop
and
imul
sub
jmp
les
pop
pusha
jb
xor
pop
out
nop
xchg
and
data16
sbb
lock
neg
into
jns
push
push
xor
push
loope
sbb
adc
stc
pop
dec
and
sar
clc
xchg
and
aam
adc
jb
and
retf
sbb
mov
mul
in
mov
dec
mov
pop
aam
fwait
je
out
mov
rol
aam
ja
sub
mov
(bad)
in
fnstcw
pop
loope
xchg
ror
mov
add
enter
fst
add
ja
(bad)
mov
test
xchg
pop
sub
dec
rcl
sbb
mov
jecxz
jmp
popa
mov
adc
test
push
push
xor
mov
pop
and
add
ret
push
adc
mov
into
in
stc
loopne
test
aam
adc
je
inc
repz
test
mov
lds
mov
xor
jge
mov
cli
fsubrp
fsubr
ds
test
lods
ins
imul
retf
sbb
movs
int
cmovns
mov
mov
(bad)
adc
dec
ins
dec
lds
icebp
retf
xor
dec
mov
je
int3
(bad)
and
ja
aaa
fcom
push
jl
xor
mov
mov
or
shr
pop
jmp
jp
xor
push
ret
push
test
aad
mov
push
test
enter
test
fwait
cmp
rol
sbb
or
lahf
shl
(bad)
fincstp
pop
stc
in
sub
jge
fs
pop
sub
mov
push
mov
jo
pop
aaa
xchg
jae
push
ins
(bad)
xor
or
mov
fchs
sbb
stc
mov
fld
xor
js
dec
jo
add
mov
in
adc
cmp
and
pop
push
dec
and
mov
xchg
mov
test
cs
mov
jno
std
cmp
clc
mov
jns
psubusb
jmp
mov
and
xchg
jae
jne
aaa
or
and
dec
fcmovbe
nop
mov
dec
sar
fs
mov
mov
shr
aad
das
sub
add
int3
push
add
or
push
aad
mov
retf
test
sar
stc
xchg
ds
mov
std
xchg
adc
js
ror
fwait
mov
sub
cmps
pop
jbe
mov
aad
test
je
fidivr
aas
mov
arpl
in
add
stos
fadd
repnz
push
and
pushf
sub
mov
push
pop
inc
mov
fmul
iret
rcr
sbb
and
jmp
rol
shl
ja
fwait
test
mov
mov
jae
enter
mov
(bad)
mov
sahf
lock
mov
add
(bad)
pop
in
shl
hlt
mov
sub
clc
dec
or
mov
mov
jae
ror
popf
add
ins
pop
adc
and
push
mov
dec
cli
xor
ret
std
cmp
push
std
fild
sbb
push
je
cs
lea
addr16
adc
pop
adc
pop
mov
xchg
lock
popf
stos
sar
mov
lock
cmp
out
in
not
xor
or
and
cmc
and
loopne
jmp
dec
mov
ror
iret
daa
out
sbb
xchg
iret
jb
sbb
mov
push
cmps
jmp
cmp
add
(bad)
pop
ret
add
add
aam
mov
(bad)
ja
cmp
or
sub
aas
sub
adc
mov
dec
cmp
je
cmp
mov
aad
push
mov
or
out
mov
test
imul
inc
adc
sbb
aas
sub
pop
pop
or
cmps
mov
adc
or
or
mov
test
retf
cmp
xor
test
popa
adc
andnps
rcr
lea
or
das
call
pop
leave
push
xor
int
loop
mov
cmps
mov
xor
add
je
sub
leave
sbb
xor
fstp
xlat
or
dec
scas
outs
and
adc
scas
jns
push
mov
bound
mov
mov
pop
mov
outs
ret
sbb
mov
jmp
mov
and
mov
cli
imul
in
lds
data16
sbb
mov
or
pop
mov
ret
ret
jp
ret
pop
mov
in
lods
jae
bnd
xor
xchg
fs
pop
push
push
mov
das
cmp
int
call
mov
jb
shl
push
mov
mov
jge
enter
lahf
es
out
inc
jns
sbb
(bad)
rcr
lahf
xchg
inc
xchg
sbb
or
stc
fcomip
loopne
daa
jp
mov
add
xchg
push
mov
das
mov
iret
adc
jno
sub
mov
mov
mov
mov
sbb
mov
and
jge
sub
cmc
fidiv
or
ss
xor
or
xlat
cmps
aaa
(bad)
jmp
mov
shr
xor
xlat
mov
jp
xor
bound
mov
ss
dec
add
test
xchg
mov
or
nop
sar
enter
dec
cmp
dec
sbb
in
cmp
add
shl
das
pop
cmp
loope
fstp
dec
stc
ins
(bad)
jmp
mov
mov
movs
fs
(bad)
imul
in
aaa
jne
ret
dec
das
mov
xor
jb
sub
xor
in
test
not
out
dec
fidivr
clc
sbb
retf
jo
repnz
pusha
movs
mov
test
sub
jbe
dec
mov
xor
sbb
repnz
(bad)
jnp
(bad)
xchg
and
add
xchg
mov
sbb
ss
cmp
aaa
xor
xchg
shr
mov
jmp
jne
iret
call
mov
mov
mov
rcl
push
inc
and
popf
std
neg
jns
mov
sub
ror
int3
neg
loope
in
xchg
mov
sahf
stos
imul
shl
mov
mov
xor
lock
fs
pop
call
mov
cmps
scas
cmp
xchg
cmc
and
ret
movs
aas
dec
or
(bad)
(bad)
lods
xor
pop
jge
cwde
pushw
cld
bnd
add
repz
push
fsubr
pop
push
xor
clc
pusha
je
xchg
shl
movs
(bad)
and
aaa
je
add
sahf
aas
jne
xor
sbb
fadd
loopne
jl
xchg
ss
(bad)
js
fstp
cmps
xor
jae
mov
in
repnz
dec
fst
aam
and
rcr
xchg
or
or
cwde
loop
sbb
xor
lods
inc
sti
mov
dec
and
les
imul
lods
inc
dec
mov
mov
fild
fimul
adc
xchg
mov
shl
mov
xor
cmps
rol
sub
or
mov
mov
das
stc
and
test
and
or
adc
xor
fucomi
push
xor
into
add
int
xchg
fwait
cwde
mov
(bad)
lock
push
hlt
mov
xchg
push
imul
scas
push
test
pop
mov
fild
leave
(bad)
aaa
cmps
aaa
loop
scas
jl
or
push
cmc
nop
retf
pushf
mov
and
ins
int
outs
adc
fsub
stc
sbb
cmp
(bad)
rol
jg
test
mov
loopne
ja
retf
aaa
jne
rcl
pusha
sti
and
jle
mov
mov
inc
(bad)
mov
imul
push
xchg
stos
cmp
enter
push
dec
mov
or
loope
sbb
ins
or
outs
test
lods
ss
mov
sti
clc
test
nop
ja
ror
mov
js
movs
retf
xchg
bound
mov
(bad)
in
rcl
bound
fwait
dec
mov
ficom
(bad)
dec
fcomp
push
call
shl
into
mov
pop
or
out
ja
and
fistp
push
pop
add
inc
test
push
clc
cmp
mov
cmps
push
push
call
add
and
fcomp
jo
dec
fcmovnu
adc
push
mov
leave
in
or
add
iret
ins
push
test
lock
je
in
imul
jns
test
mov
icebp
jmp
jb
popa
dec
pop
add
jecxz
xor
mov
jbe
jecxz
call
mov
(bad)
or
add
adc
outs
mov
jle
daa
cmps
cmp
test
mov
out
popf
das
pop
mov
jno
cmc
xchg
pop
sub
(bad)
aad
aam
ret
rol
aam
pop
sbb
ins
push
sub
aaa
adc
push
xor
mov
xchg
lock
das
inc
jns
add
call
cmc
and
leave
and
or
outs
or
push
push
div
dec
sbb
sub
std
xchg
sub
adc
les
push
push
(bad)
hlt
and
stc
pop
and
add
push
push
dec
out
cwde
rol
add
repz
js
dec
or
and
shl
ins
jg
sahf
mov
mov
adc
dec
sbb
pop
pop
into
out
mov
mov
jbe
pop
sub
jp
lds
sbb
mov
xchg
outs
daa
cmps
jbe
mov
pop
or
or
call
daa
sub
cmps
dec
repnz
cmp
xchg
mov
pop
mov
inc
leave
fs
and
sub
add
int
lahf
sbb
cs
test
inc
shl
cmp
shl
add
dec
and
shl
out
int3
or
inc
ret
adc
sbb
or
sbb
xlat
loope
sti
or
cmp
cli
(bad)
jne
cli
stos
rcr
xlat
iret
leave
sub
pop
adc
aaa
dec
or
mov
pop
jb
(bad)
repz
xor
cmps
inc
and
dec
sub
jnp
adc
dec
sbb
dec
and
adc
cli
ret
sbb
rcl
mov
inc
jnp
xchg
pop
xor
sbb
clc
mov
cwde
ret
jg
mov
mov
jns
mov
mov
mov
dec
loope
sub
jle
rcl
pop
mov
ret
xor
jne
xchg
mov
add
in
and
dec
cs
mul
mov
cwde
fs
popf
xchg
cmc
mov
dec
fcmovu
or
cli
aas
adc
imul
cmps
add
jle
sub
retf
cdq
jne
or
fstp
das
test
push
lahf
mov
and
les
jbe
mov
or
mov
ins
and
fsubr
in
push
push
gs
shr
inc
mov
push
mov
mov
in
xchg
jb
imul
mov
out
nop
mov
fnsave
inc
loop
stos
sub
scas
je
pop
les
ins
(bad)
and
add
das
push
mov
test
push
in
or
neg
push
add
xchg
fistp
clc
test
sbb
or
stc
ret
test
xor
mov
push
fistp
ja
cmp
test
pop
pusha
sar
ss
and
cs
cli
movs
inc
jle
fist
into
iret
push
(bad)
jno
push
retf
push
ds
pop
in
scas
xchg
shl
sub
das
fldenv
push
xor
mov
cmp
(bad)
in
aaa
lods
lahf
xchg
or
dec
dec
xor
test
stc
test
mov
or
test
lahf
int
add
enter
mov
inc
(bad)
(bad)
std
pop
sbb
rol
xchg
xlat
inc
mov
cmp
add
xchg
les
aaa
jno
dec
cmp
or
push
stos
fild
scas
lea
out
sbb
pop
and
xchg
xor
shr
mov
movs
out
add
and
or
cwde
nop
into
xchg
xchg
out
(bad)
shl
shl
sub
stc
es
xchg
pusha
fmul
xchg
dec
ret
dec
jae
ss
sbb
into
js
mov
xor
mov
xchg
dec
in
pop
rcr
mov
pushf
bound
test
test
and
or
xor
movs
div
jne
test
(bad)
fsubrp
ins
xchg
jbe
jne
cmp
ins
mov
mov
aad
in
mov
mov
jmp
fadd
sar
pop
mov
dec
push
push
sub
leave
xchg
data16
sub
arpl
push
add
shr
cs
js
(bad)
cli
xchg
inc
jnp
mov
fdivp
mov
xchg
sahf
cld
xchg
ins
fiadd
je
dec
or
cmp
in
pop
xchg
mov
and
mov
outs
add
push
mov
inc
or
mov
mov
ds
mov
cdq
aad
aad
xchg
neg
push
mov
dec
pusha
loop
xchg
add
pop
or
inc
in
iret
mov
test
jae
aam
or
mov
(bad)
jg
pop
mov
dec
cld
xchg
pop
popf
sbb
(bad)
mov
ds
jno
sbb
lea
jnp
jmp
movs
(bad)
pop
mov
sub
mov
sbb
push
jbe
mov
xlat
mov
add
sbb
arpl
jb
popa
cmp
xor
clc
or
cmc
mov
push
lock
push
(bad)
dec
in
repz
xchg
xlat
iret
or
mov
pop
mov
leave
icebp
imul
aas
jbe
and
pop
rcr
js
and
fisubr
jg
push
xchg
push
xor
mov
or
sub
xor
push
and
push
int3
or
nop
ror
rol
int
outs
cmps
dec
mov
inc
jl
rcr
xchg
retf
mov
jnp
xchg
add
xchg
aam
sti
cmp
or
add
aam
push
or
jle
xor
dec
jge
inc
ficom
jnp
jnp
gs
sbb
inc
jbe
aad
ds
addr16
and
add
sub
fucomip
inc
jmp
jge
cmps
cmp
cwde
sub
jmp
add
inc
mov
jp
pop
jp
ret
push
call
jge
pop
rcl
push
mov
mov
popa
movs
inc
ficomp
aas
ja
pop
ins
cs
rcr
cwde
and
inc
rol
xor
cmp
cmp
in
or
repnz
xor
dec
das
pop
xchg
inc
movs
cmc
mov
stc
cmps
mov
pop
cmp
mov
add
je
ffree
mov
fcom
outs
loopne
sbb
int
mov
dec
(bad)
rol
pop
dec
movs
retf
and
out
mov
xchg
dec
xor
stc
test
or
mov
bound
inc
sbb
aam
pop
dec
jp
cmp
push
mov
mov
push
lods
inc
hlt
adc
mov
ins
retf
xchg
jae
lods
hlt
add
sub
add
setne
push
in
cmps
mov
retf
jecxz
mov
movs
adc
outs
push
popa
std
sbb
fimul
in
arpl
lock
and
(bad)
stos
mov
cwde
adc
fs
(bad)
fdivp
mov
sar
imul
dec
loope
fs
push
mov
mov
push
xor
jl
push
add
icebp
mov
mov
sub
(bad)
cli
pop
out
aas
mov
mov
xlat
mov
aaa
cwde
scas
xor
pusha
popa
xchg
shr
ins
clc
stc
test
mov
cmps
or
repz
pop
push
dec
mov
outs
inc
dec
adc
in
mov
test
inc
leave
sub
xchg
push
push
pop
sub
cmps
fdiv
add
movs
or
pushf
outs
xchg
inc
push
jge
jmp
inc
mov
imul
mov
ror
das
cmp
adc
mov
xchg
int
jge
cwde
in
outs
mov
push
jmp
inc
js
cmc
int
das
sub
imul
pop
lods
or
add
xchg
inc
cmc
inc
lahf
dec
dec
pop
out
out
push
cmp
and
inc
xor
std
in
shl
jmp
fs
nop
(bad)
add
movups
in
cli
loope
popa
sub
push
add
or
(bad)
jg
shl
leave
or
pop
mov
add
loop
mov
pop
jae
fdivr
addr16
mov
(bad)
cmp
lods
pop
fwait
add
aas
adc
shl
js
add
add
jge
inc
pop
mov
popa
enter
push
dec
or
fmul
imul
imul
ficomp
fs
cmp
adc
ja
pop
mov
add
popa
inc
xor
mov
loop
jg
cmp
lods
mov
jmp
sbb
test
mov
push
test
and
lods
clc
inc
loope
sbb
xchg
retf
in
or
push
fld
shl
jge
or
xor
bound
hlt
cwde
mov
mov
mov
popf
vpsrld
cwde
add
jge
cdq
add
push
arpl
cmps
les
das
adc
jmp
(bad)
xor
mov
pop
sbb
pop
popf
ds
push
dec
xchg
daa
xor
pop
adc
lahf
xchg
and
mov
out
test
sbb
fadd
jl
das
fimul
push
arpl
mov
ja
cld
and
(bad)
lea
jb
cmc
out
mov
stos
movs
xchg
push
fiadd
mov
push
sub
addr16
loope
cmp
dec
sbb
adc
gs
loope
pop
leave
fwait
xor
mov
push
inc
out
inc
imul
bound
mov
lea
add
scas
or
std
sar
jne
adc
call
rcr
shr
or
and
mov
scas
sahf
stc
push
test
sbb
mov
cmova
ja
movs
std
jbe
mov
aas
push
shrd
out
clc
ud2
imul
dec
outs
xchg
adc
rcl
nop
jb
sub
or
in
ret
mov
jle
pushf
and
inc
cmp
adc
outs
jbe
push
xor
ds
ds
and
adc
add
lods
mov
xor
(bad)
jae
stos
sar
mov
xlat
jbe
push
fsub
fst
cdq
fcmovnbe
imul
dec
sbb
mov
scas
push
std
mov
pop
fmul
mov
add
xchg
loop
xchg
stc
mov
inc
cmc
push
sbb
xchg
mov
leave
adc
push
inc
mov
cmp
mov
jae
shl
adc
jb
push
stos
pop
cmps
(bad)
or
or
gs
cmp
stos
pop
sbb
sbb
rol
sbb
cmps
dec
mov
mov
paddw
scas
dec
adc
pushf
shl
sub
imul
repz
mov
stc
outs
repz
push
cmp
call
stos
jb
sbb
call
call
aam
adc
sub
mov
clc
dec
retf
int3
and
cli
push
pop
cmp
test
and
daa
cmps
mov
out
sbb
or
jge
ja
stos
mov
in
leave
push
lahf
pop
ds
out
or
mov
ja
enter
xchg
sub
xchg
sbb
stos
and
push
mov
scas
sbb
inc
(bad)
mov
call
mov
add
dec
push
mov
hlt
lock
xchg
xor
in
fistp
lods
hlt
test
inc
rcr
pop
lock
lods
cmps
loopne
mov
dec
mov
fiadd
pop
add
sbb
lods
xor
pop
pushf
call
shl
sub
mov
dec
pop
hlt
jae
mov
adc
test
xchg
out
out
pop
or
cmps
test
sbb
inc
sub
repz
bound
stos
int
jg
and
in
pop
pop
mov
rcr
pop
adc
xlat
stos
fcomip
jo
xchg
cli
repnz
xchg
(bad)
shl
mov
popa
call
add
dec
jb
push
sub
ss
or
in
mov
xor
into
out
and
xor
pop
xor
std
dec
add
mul
jp
push
adc
cmp
inc
xor
dec
jge
add
add
or
push
fs
or
xchg
scas
pop
retf
push
jge
loop
inc
xchg
mov
test
aas
pop
add
and
rol
or
int3
mov
cmp
in
jecxz
std
xor
xor
loopne
add
add
sub
mov
out
dec
out
inc
sub
xor
repz
cld
adc
inc
out
push
cmp
jns
xchg
enter
add
push
pop
scas
fs
jno
mov
sbb
mov
dec
cmp
pop
push
jg
outs
xchg
xchg
scas
push
inc
mov
push
stos
sbb
test
add
ja
into
pop
stos
stc
inc
xor
sbb
adc
sbb
icebp
and
push
and
mov
mul
adc
cmp
dec
mov
add
dec
fsubr
sub
fcomp
outs
xlat
es
mov
movs
mov
in
sar
xchg
fdiv
fisttp
or
and
add
jg
stos
loope
daa
inc
in
xor
repnz
loope
mov
adc
push
jae
es
or
int3
mov
test
loope
xchg
cmc
lahf
jae
mov
stos
mov
mov
das
cmc
shl
fdivr
mov
je
imul
data16
stc
inc
repnz
adc
xchg
(bad)
icebp
loopne
imul
inc
hlt
cmps
fneni(8087
jmp
push
fild
daa
aad
out
retf
or
(bad)
ins
push
inc
addr16
or
shr
aaa
enter
std
ficom
pushf
inc
jno
gs
dec
call
stos
or
pop
or
push
push
cwde
cmc
rcr
stos
data16
test
xor
jg
in
cmps
xchg
clc
popf
ret
adc
cmp
outs
repnz
adc
nop
(bad)
fisttp
mov
inc
rcr
es
xor
dec
aaa
jl
mov
rcl
lods
fild
add
and
cmps
out
dec
add
jecxz
pop
shl
test
cmp
test
cs
test
cwde
mov
(bad)
jp
mov
mov
mov
ret
xor
cmp
xor
adc
mov
cmp
mov
cmps
rcl
add
es
or
or
int
pop
xor
jmp
and
dec
imul
(bad)
jmp
fs
push
dec
push
ds
inc
inc
and
mov
sbb
push
push
pop
add
pop
fsub
and
jg
out
sar
inc
mov
les
loop
mov
loopne
sbb
popa
retf
and
imul
or
xchg
or
jle
and
and
(bad)
xor
jg
in
nop
popf
sub
rcr
ret
mov
mov
sbb
push
push
fst
mov
not
lds
cmp
(bad)
mov
push
lods
mov
or
xchg
xor
adc
or
mov
int3
pop
jg
inc
shl
jle
call
stc
jge
(bad)
test
(bad)
jnp
mov
pop
inc
mov
or
daa
sbb
shl
aaa
nop
fcmovb
daa
sar
daa
jne
daa
cli
xchg
imul
je
adc
dec
pop
imul
push
pop
mov
dec
pushf
adc
add
nop
xchg
repz
jg
or
fdivr
mov
sahf
in
fs
sbb
dec
adc
cs
in
inc
in
fimul
mov
lahf
pop
pop
xchg
fucomi
fadd
je
pop
sbb
xchg
xchg
push
sub
mov
and
mov
inc
leave
jne
and
cwde
out
fadd
mov
leave
sub
adc
sbb
shr
arpl
xchg
mov
dec
mov
call
jno
mov
or
int3
nop
pusha
jle
mov
cmp
mov
loope
xchg
mov
jno
clc
neg
loop
xor
mov
out
adc
cmp
jge
jecxz
and
(bad)
popf
mov
aam
ficomp
xchg
jg
addr16
xor
jae
jmp
fisttp
fld
sub
imul
scas
clc
mov
in
or
pop
mov
icebp
push
outs
dec
push
push
and
fiadd
ret
lahf
mov
cmp
and
leave
ror
aad
jnp
and
cmp
addr16
dec
fbstp
mov
ret
out
aad
sbb
xor
jae
in
xchg
inc
ss
xor
fist
jb
jg
inc
pop
and
cmc
cmps
test
pop
fmul
mov
cld
dec
int
inc
inc
in
aas
sub
fnstcw
jl
fcomp
xchg
jp
sbb
sahf
push
out
popa
es
repz
mov
aaa
stos
lds
cmp
inc
pop
cmp
mov
mov
push
inc
xor
retf
sub
xchg
test
pop
mov
stos
std
xor
popa
pop
adc
clc
adc
mov
jno
or
xor
repnz
push
sahf
mov
mov
fdivrp
dec
mov
sahf
out
sub
cli
inc
mov
and
bound
imul
jns
xchg
in
mov
sbb
push
retf
loopne
ja
cmp
add
test
pop
call
pop
in
pusha
cdq
mov
cmp
cmp
call
and
adc
fucomp
add
xlat
jne
mov
inc
stos
mov
xchg
cwde
xchg
shl
or
sbb
shl
push
push
mov
and
xlat
imul
fidivr
repz
dec
push
inc
sub
mov
pop
add
mov
in
cmps
div
mov
pop
xchg
jg
inc
sub
push
mov
iret
xor
xor
cmp
icebp
xor
mov
aaa
inc
sub
inc
adc
rcr
jle
int
mov
in
dec
inc
mov
and
push
imul
sbb
(bad)
push
push
push
jmp
ret
xor
test
cdq
lea
xchg
arpl
mov
or
out
fdiv
xchg
mov
dec
mov
sbb
lea
jmp
fild
push
inc
nop
push
ret
dec
jg
push
xchg
jle
xor
xor
and
jae
cmc
jmp
cmp
ins
jae
add
adc
or
rcl
dec
sahf
into
inc
xchg
and
pop
rcr
dec
gs
test
sub
add
and
cmp
mov
icebp
mov
mov
push
xor
outs
movs
mov
jg
adc
pop
cmc
repz
inc
fbstp
mov
dec
retf
push
jno
hlt
inc
pop
(bad)
bound
retf
push
je
int3
pop
loop
shl
jns
sub
dec
outs
and
push
outs
ins
add
and
mov
push
xchg
pop
xchg
sbb
cmp
fwait
sub
dec
fisttp
adc
stos
test
in
push
mov
xchg
ja
iret
inc
or
clc
mov
push
aam
or
ds
add
push
retf
mov
shl
cmps
cmp
xchg
pop
pop
mov
jecxz
mov
add
inc
movs
mov
int
xlat
sub
enter
es
daa
arpl
addr16
jnp
stos
mov
jmp
jp
and
rcl
sub
loop
lods
ins
and
sti
mov
outs
pop
btc
cmp
cmp
mov
popf
pop
scas
mov
xchg
push
push
add
in
mov
cdq
inc
fwait
inc
(bad)
hlt
dec
pop
sub
sub
or
and
mov
fwait
sahf
daa
rcl
outs
ds
fistp
pop
mov
sub
(bad)
scas
sub
cld
add
jmp
(bad)
call
sub
inc
cmp
je
popa
enter
mov
push
inc
and
stc
cmp
out
ficomp
rcr
inc
cmp
mov
call
mov
push
cmp
mov
push
cmc
mul
or
lea
pop
mov
add
rol
ins
pop
xor
aam
mov
push
mov
cmps
out
gs
mov
mov
xlat
xor
test
or
shr
push
test
sbb
sti
rol
mov
lock
dec
jbe
fs
or
retf
loopne
test
fidivr
add
add
nop
cmp
cld
retf
xchg
mov
test
dec
aas
add
ds
rcr
mov
push
icebp
ds
sahf
dec
jmp
aas
pop
xchg
cld
fld
fstp
xchg
outs
jnp
lods
jmp
out
push
int3
push
mov
lahf
or
gs
xchg
dec
sbb
mov
cli
rcl
out
scas
cmc
dec
mov
mov
pop
movs
sbb
mov
or
sbb
fwait
mov
sub
mov
sub
je
adc
xchg
stc
mov
std
jmp
repnz
push
sbb
mov
(bad)
aas
dec
sahf
mov
and
es
mov
call
data16
dec
popf
dec
xchg
outs
cmp
mov
stos
pop
push
cmp
mov
xor
cli
and
movs
das
and
sbb
div
adc
(bad)
imul
test
and
or
mov
fstp
mov
inc
mov
fdiv
sub
jle
out
add
pop
mov
mov
je
hlt
cmps
repnz
into
pop
cmp
push
stos
inc
or
mov
mov
jle
ss
xchg
aaa
mov
add
cmp
jecxz
pop
icebp
cmp
adc
jne
add
ret
fsubr
mov
cmps
aad
loope
es
sub
mov
pop
es
and
ror
pop
ror
adc
adc
stos
push
icebp
(bad)
sub
xchg
pop
mov
pushf
xchg
pop
(bad)
jno
jl
nop
mov
daa
js
jmp
stos
stos
int3
add
mov
dec
loop
aad
inc
lahf
(bad)
jmp
mov
repz
mov
(bad)
out
loope
cmc
pop
jo
push
aaa
adc
inc
push
xchg
imul
loope
mov
pop
adc
(bad)
mov
pop
add
sahf
dec
ud1
push
add
outs
shr
mov
dec
leave
shl
mov
mov
adc
pop
and
or
mov
rcl
popf
xor
xchg
fnstcw
rcr
mov
adc
hlt
ret
and
leave
in
lds
enter
sbb
dec
jae
xchg
dec
inc
jns
jo
cmp
popa
iret
fwait
ins
ja
cmp
xor
psrad
pop
das
jle
shr
dec
push
mov
xchg
lods
retf
cwde
cmc
xchg
inc
xchg
out
test
pop
out
sbb
mov
add
or
scas
mov
je
movs
hlt
xor
inc
gs
jns
sbb
sub
and
popa
pop
pop
call
cwde
ins
pop
cmps
sahf
dec
jmp
adc
pop
xor
mov
sar
les
mov
sbb
ins
mov
or
mov
sub
fdiv
scas
popf
mov
jmp
mov
mov
stc
retf
xchg
jle
xlat
sbb
adc
call
icebp
adc
addr16
mov
push
sbb
xor
add
cmp
test
retf
jecxz
sub
or
push
punpckhbw
adc
mov
bound
retf
add
rcl
imul
jnp
inc
ficom
ret
xchg
jp
mov
pop
test
sbb
aam
das
adc
or
xchg
cmc
lahf
sub
or
xor
inc
loop
test
ret
scas
mov
xchg
rcr
pusha
add
lds
enter
fcmovnu
mov
pop
sub
inc
mov
repz
bound
rcl
add
dec
dec
fdiv
out
adc
jmp
pop
aad
mov
jns
mov
mov
jle
jae
push
jp
pop
jl
ins
arpl
clc
movs
sti
(bad)
stos
mov
pop
pop
pop
mov
in
(bad)
xor
inc
xor
in
cmp
mov
call
jae
scas
stc
xchg
pop
shr
mov
int
mov
mov
mov
in
out
sbb
dec
pop
cdq
stc
shl
push
pop
pop
sub
jno
sbb
mov
(bad)
xchg
aam
and
or
(bad)
ins
mov
sbb
mov
sub
retf
imul
and
scas
lods
outs
ss
jbe
aaa
popf
fld
call
lock
push
push
adc
out
inc
mov
mov
je
xor
push
mov
hlt
(bad)
mov
pushf
fcom
xchg
mov
pop
imul
aam
cmps
imul
xchg
or
jb
stos
fadd
or
arpl
popa
sbb
add
out
push
jo
outs
sub
fstp
jae
dec
cmp
adc
push
sub
jb
add
popa
fbld
dec
mov
pushf
adc
ss
cmps
xchg
and
retf
mov
rcr
xor
dec
mov
cmp
mov
push
sub
hlt
adc
ss
idiv
std
(bad)
stos
add
cmp
mov
(bad)
sar
inc
or
nop
test
aaa
and
aaa
mov
sbb
xchg
adc
sbb
stos
pop
sub
ss
sar
cmps
or
cmp
cmp
xchg
loopne
imul
dec
cs
test
push
pop
fsubrp
sar
adc
popa
popa
jo
leave
ds
pop
jno
dec
div
call
rol
or
repnz
mov
sbb
test
test
fisttp
jbe
pop
bswap
popa
xor
gs
pop
adc
pop
gs
(bad)
js
das
addr16
call
call
jns
ja
and
push
icebp
pop
mov
rol
ja
fisttp
push
(bad)
lods
cmp
clc
inc
mov
mov
enter
repnz
jnp
mov
dec
cmps
(bad)
retf
cmps
jns
imul
pop
sub
mov
pop
pusha
sbb
lods
lea
pop
jae
icebp
sahf
fcom
push
push
dec
(bad)
cwde
call
add
jno
scas
pop
stos
addr16
shl
dec
stc
sti
lds
(bad)
(bad)
loop
fucomp
daa
retf
fsub
aas
inc
mov
cmp
push
in
les
fstp
sub
aad
(bad)
mov
jmp
or
into
adc
test
cli
(bad)
std
fs
mov
dec
xchg
add
(bad)
mov
lods
clc
adc
outs
add
ins
jbe
popf
add
xchg
mov
mov
dec
int3
jmp
add
fs
cs
fmul
cmp
pop
mov
cmps
retf
pusha
data16
cmp
xor
sbb
xchg
and
sbb
cmps
push
adc
or
shl
sbb
adc
and
sbb
out
push
(bad)
sbb
push
jnp
sbb
mov
xor
fistp
inc
in
jae
cmp
push
sbb
test
sahf
out
jnp
imul
inc
nop
jo
and
mov
mov
retf
dec
inc
and
retf
add
push
and
(bad)
mov
mov
mov
loope
in
xchg
call
nop
adc
jmp
inc
mov
dec
mov
add
mov
(bad)
std
push
call
mov
scas
lds
loop
sbb
cs
popf
pop
cmp
call
cmps
mov
inc
dec
punpcklwd
mov
mov
push
ins
mov
or
fisub
imul
clc
ret
add
dec
add
pop
retf
cmc
xor
mov
push
out
and
lods
(bad)
loop
mov
xchg
leave
fmul
jo
lds
ins
sub
cwde
mov
sbb
jmp
xchg
enter
std
xchg
add
lock
sub
into
jmp
retf
add
fld
sub
imul
in
(bad)
xor
ja
(bad)
adc
pop
aam
xchg
in
pop
repz
(bad)
cmc
sub
or
rol
das
pop
sti
stc
push
jl
dec
and
sti
inc
and
repz
movs
pop
mov
pop
test
repz
mov
or
inc
stc
shr
cmp
in
repnz
sub
cmp
int3
inc
xlat
call
outs
inc
inc
imul
ins
push
fcomp
add
dec
sub
popf
mov
ds
push
pushf
(bad)
fistp
retf
es
push
or
mov
lods
and
mov
dec
push
jge
idiv
jg
adc
loopne
cli
stc
jp
pop
or
dec
fs
leave
lahf
cdq
jbe
adc
cmp
xor
ds
addr16
es
mov
iret
loope
aam
push
xchg
jge
xor
aam
aas
cmps
cmp
xor
pop
cli
pop
adc
pushf
xor
movs
mov
push
and
sub
cli
std
mov
sub
aas
add
shr
xor
popa
mov
dec
ret
test
test
aas
mov
outs
rol
clc
pop
or
fild
loopne
add
mov
cmps
pop
fwait
push
xor
xor
xchg
sbb
dec
jge
fidivr
pop
fisub
sbb
fdivr
into
dec
jecxz
lods
add
hlt
pop
ja
adc
xchg
ret
mov
add
mov
aaa
lods
xchg
xor
outs
test
dec
pusha
daa
js
jne
jne
dec
xchg
repz
push
xchg
lea
sbb
les
shr
mov
inc
stc
addr16
test
stos
jle
jp
and
push
xor
repz
test
pop
imul
pop
(bad)
adc
into
push
mov
(bad)
cwde
mov
clc
pop
xor
not
jmp
test
mov
push
mov
cli
icebp
sbb
sub
ja
dec
sbb
movs
add
dec
xor
sub
pushf
dec
inc
mov
sub
das
scas
and
jp
mov
xlat
sbb
arpl
pushf
fcmovne
or
push
jae
les
into
cs
cmovae
iret
cwde
adc
push
push
inc
daa
test
inc
sahf
jg
mov
jecxz
push
sahf
cmps
cmp
sbb
cld
je
loope
push
loopne
das
jmp
adc
into
inc
xchg
cmp
dec
inc
fsubr
rol
pop
mov
or
pop
add
push
stc
sub
test
shl
jmp
mov
adc
xchg
retf
in
into
sbb
inc
clc
(bad)
aad
test
int3
jo
mov
mov
or
cmp
and
xchg
push
sub
mov
cmp
push
push
jne
push
aas
push
mov
pop
fdiv
sub
imul
jge
mov
clc
dec
fldenv
dec
dec
imul
inc
repz
leave
sub
mov
adc
pushf
or
mov
jo
pop
or
aam
push
sub
pop
cmp
or
(bad)
hlt
inc
jae
ins
lea
(bad)
sub
das
push
xchg
int3
(bad)
jmp
cmp
sahf
cmp
das
pop
scas
ficom
cdq
and
ins
test
pop
outs
ins
cs
enter
add
enter
jp
sub
add
idiv
pop
in
xchg
cli
aaa
add
push
fistp
adc
data16
sbb
mov
pop
lods
mov
or
ja
mov
retf
nop
jmp
push
loop
outs
stos
mov
and
out
mov
lock
xor
fadd
pop
pushf
inc
xchg
jecxz
aad
loop
mov
xchg
das
cmp
bound
jg
hlt
xchg
retf
cmp
jo
loope
cmp
pop
adc
fs
imul
js
movs
mov
xor
push
imul
pusha
mov
jno
gs
xchg
adc
cmp
sar
mov
mov
dec
pushf
push
and
fcmovnbe
adc
push
jns
adc
cmp
popa
jnp
sub
push
arpl
mov
cmp
pop
xchg
mov
mov
pop
cwde
add
test
inc
lock
in
pop
add
in
movs
xchg
jb
test
cmc
data16
xchg
fst
cmc
lods
hlt
inc
lahf
mov
inc
jl
imul
stos
cwde
daa
out
outs
sbb
ja
or
pop
xor
aaa
outs
adc
mov
pusha
pushf
mov
repnz
pop
ins
pop
jns
(bad)
sub
test
xchg
fisttp
inc
lods
inc
enter
pop
pop
fdiv
sub
popf
mov
push
push
lods
ins
imul
(bad)
adc
scas
int3
or
pop
mov
cwde
jmp
outs
jns
xchg
xlat
das
test
cmp
cmp
retf
cmp
rol
mov
fst
into
and
std
shl
addr16
or
int
pop
cdq
sub
fsub
into
and
sbb
test
add
and
lods
cmp
fmul
(bad)
jo
out
sbb
icebp
and
inc
imul
enter
test
inc
pop
dec
in
scas
cli
push
arpl
movs
lahf
mov
dec
cli
into
rol
gs
mov
(bad)
out
loop
cmps
cli
dec
out
or
mov
fsub
shr
jo
cli
fcom
cld
push
js
add
dec
or
addr16
mov
inc
lods
sub
mov
call
cmp
(bad)
push
xor
add
add
sbb
icebp
imul
in
out
in
mov
pop
xchg
push
jo
(bad)
int
js
mov
cmps
cwde
dec
arpl
test
data16
stc
idiv
daa
das
sbb
push
int
mov
pop
movs
jno
pusha
ja
jg
pop
daa
(bad)
out
shl
xlat
inc
aam
jmp
idiv
jg
mov
aad
loop
push
xchg
outs
sub
movs
addr16
aas
mov
push
fs
fcmovnb
dec
xchg
jl
jb
inc
ret
mov
sub
lods
fs
mov
sti
adc
pop
cmp
dec
das
xor
lea
pop
mov
ficom
cld
push
inc
sub
cmp
cmps
jb
and
jp
xor
push
daa
jecxz
pop
cmp
push
fimul
imul
into
ror
jmp
pushf
push
into
push
mov
fiadd
jl
imul
jns
out
push
leave
dec
xor
jne
repnz
mov
or
cmp
cmp
jl
retf
in
jle
add
std
mov
mov
je
je
out
xor
jnp
das
fmul
and
push
add
pop
xor
cmp
test
enter
outs
lods
ds
test
hlt
add
addr16
inc
lock
sar
fmul
pop
(bad)
or
call
test
scas
shr
js
sbb
sbb
ss
push
jl
mov
retf
cdq
cmp
ins
mov
jmp
or
xchg
add
jmp
pop
jle
push
dec
mov
or
cmc
jl
lock
push
ret
adc
jae
or
dec
cmp
lods
cmp
jnp
push
adc
xchg
pop
in
jecxz
sbb
aad
loopne
inc
dec
cmp
sbb
sub
or
cmp
jbe
in
dec
pop
inc
xor
cmp
int3
sar
jnp
jmp
jbe
xor
and
shl
or
adc
xchg
jl
mov
das
call
gs
add
test
ins
dec
fwait
loop
pushf
mov
add
mov
retf
xor
add
or
cmp
enter
mov
sub
pop
call
lock
mov
repnz
and
pop
rol
pop
or
push
rol
dec
(bad)
mov
(bad)
mov
ficomp
sub
mov
and
shr
rcl
or
jne
jg
stos
cs
jb
in
clc
movs
cmp
xchg
jmp
lds
push
and
sbb
test
addr16
into
imul
jb
outs
sub
imul
fbstp
inc
xor
std
stos
xor
pushf
das
movs
imul
push
pusha
add
pop
xchg
das
div
ins
cmp
xchg
int
sbb
(bad)
push
sbb
mov
popf
pushf
xor
sar
sub
clc
(bad)
adc
sar
rol
mov
ror
and
inc
es
loop
push
jbe
(bad)
daa
push
mov
ins
ret
adc
add
mov
xor
mov
ins
add
rcl
jg
or
dec
ds
dec
lahf
loope
push
fsub
or
pop
std
popf
push
jbe
lods
xor
fild
or
xchg
retf
xor
and
popf
lea
(bad)
push
icebp
dec
ret
(bad)
enter
sbb
clc
out
dec
sub
inc
cs
cdq
rcr
push
dec
in
inc
mov
xchg
xchg
add
jmp
add
retf
sar
push
mov
fidivr
mov
dec
call
into
mov
retf
mov
lds
and
pop
fist
mov
mov
sbb
ficom
or
mov
popa
test
ds
pusha
mov
(bad)
stc
nop
jmp
mov
hlt
push
xchg
out
mov
ret
or
dec
call
xor
push
push
dec
outs
cmp
loopne
sbb
out
retf
xor
movs
and
cmc
adc
jbe
icebp
jne
das
scas
cmps
cmp
jnp
out
mov
enter
pop
out
xchg
and
pop
lds
dec
call
js
inc
into
xchg
add
sbb
fmul
xlat
sbb
fist
nop
fwait
ret
jmp
inc
aas
dec
or
out
jbe
mov
stc
lahf
dec
mov
adc
mov
dec
and
out
cs
jmp
or
mov
xor
stos
mov
arpl
jo
cdq
sub
xchg
sub
sbb
daa
scas
mov
mov
dec
mov
arpl
inc
adc
icebp
mov
std
movs
test
stos
pop
dec
add
mov
ret
jb
mov
mov
jnp
and
neg
or
xchg
rcl
std
push
mov
das
into
daa
lock
movs
inc
pusha
cmp
aam
rol
sbb
jae
fisubr
sub
push
sub
sub
ins
xchg
and
adc
bnd
aas
ins
xchg
inc
pop
mov
add
cmc
cli
ror
das
sahf
fsubr
call
jecxz
xlat
imul
mov
pusha
inc
pop
call
iret
sti
out
mov
dec
add
idiv
lds
popf
mov
pushf
aas
mov
push
movs
stos
ja
mov
inc
jbe
ja
sbb
adc
cmp
push
test
paddd
pop
dec
inc
ja
inc
cmp
int3
das
aam
xor
jae
ins
aaa
fcom
xor
retf
mov
xlat
cdq
pop
mov
out
jp
jnp
dec
mov
stc
jbe
cmp
arpl
or
inc
dec
xor
fxch
adc
add
add
push
fidivr
jge
and
inc
test
mov
jle
push
or
push
inc
push
mov
add
and
or
enter
(bad)
xchg
cmp
pop
rcl
xchg
loopne
push
sbb
ins
loope
sbb
dec
(bad)
jmp
cmp
add
and
cmps
pop
arpl
lods
fwait
adc
cmp
mov
loop
ins
mov
iret
push
imul
fyl2x
lods
cmp
loop
or
pushf
inc
lock
js
jmp
dec
popf
dec
ss
xor
loope
fidiv
(bad)
aam
xchg
rcl
cli
retf
lahf
out
push
xchg
push
ja
xchg
cmp
add
stc
adc
push
js
in
hlt
enter
sub
mov
lods
arpl
adc
retf
mov
(bad)
scas
sbb
addr16
and
mov
pop
mov
clc
inc
neg
sub
pop
in
gs
cmp
(bad)
ret
dec
xchg
repnz
cmp
fstp
jmp
xchg
cwde
sub
repnz
sbb
add
mov
dec
lods
(bad)
nop
in
xor
mov
mov
mov
xor
fwait
std
jns
dec
xchg
push
mov
xor
ins
jecxz
xchg
sub
and
retf
cmp
fcmove
leave
mov
push
call
sbb
rep
and
xor
inc
ds
xchg
stos
xor
ja
lock
mov
add
mov
xchg
fdiv
inc
repz
movups
inc
jae
jmp
sub
lahf
into
and
cmp
in
jne
lods
cmp
rcr
ror
into
(bad)
push
std
stos
imul
lods
or
mov
push
mov
push
jp
pop
ins
dec
(bad)
scas
lods
fnsave
js
adc
sahf
ret
cld
lods
add
mov
push
adc
push
mov
sub
aad
loopne
pop
lds
or
retf
test
ud1
stos
mov
jb
jle
(bad)
xlat
xchg
into
cmc
xchg
push
repnz
pop
sub
(bad)
mov
mov
push
call
sbb
ffreep
mov
push
les
pop
iret
cmp
jno
pop
pop
stos
data16
test
push
(bad)
out
sbb
cwde
mov
in
pop
pop
jle
daa
pop
inc
inc
pop
scas
enter
imul
fwait
bound
add
mov
mov
repnz
mov
mov
mov
pusha
arpl
ins
jns
jmp
push
ds
pop
aam
ror
sbb
push
pusha
call
push
mov
(bad)
push
jmp
aam
inc
dec
jmp
out
es
movs
mov
pop
int3
addr16
mov
cmp
sub
mov
in
call
mov
loop
xchg
xchg
cmp
push
jne
jg
dec
(bad)
jp
pop
loop
push
mov
inc
iret
lods
fsubr
cmp
cdq
inc
mov
adc
lods
arpl
lds
mov
push
test
mov
test
fsubr
int
(bad)
inc
clc
daa
mov
fldenv
(bad)
dec
rcr
adc
mov
rol
jo
je
pop
push
cmc
cmp
mov
scas
sub
cmp
jne
js
shl
cld
inc
xor
push
inc
test
cmps
xor
ds
mov
xor
cwde
or
push
pop
dec
(bad)
dec
in
pop
mov
and
xchg
fcmovbe
aas
jnp
adc
sub
gs
fisttp
in
pop
popa
hlt
jmp
sub
inc
add
mov
adc
adc
lock
test
les
xor
mov
mov
retf
stc
and
lea
clc
adc
test
adc
addr16
mov
or
shl
enter
das
(bad)
leave
rcr
jp
dec
rcr
sbb
adc
mov
shl
and
lahf
popf
pop
jmp
adc
sub
xor
stos
mov
ins
and
cld
inc
pop
stc
xchg
pop
pusha
ja
mov
popf
(bad)
push
jnp
adc
call
int
mov
inc
sbb
loopne
xor
mov
jnp
jl
xchg
aam
lock
shl
and
pop
mov
xchg
inc
clc
fisubr
(bad)
jge
sar
mul
icebp
adc
pop
loope
xor
inc
dec
pushf
cmp
rcl
addr16
pop
add
adc
ja
inc
inc
iret
sbb
popf
je
xchg
outs
fbld
outs
xor
icebp
jb
jmp
add
ret
jnp
mov
mov
sti
cdq
pop
ror
xchg
mov
mov
or
loopne
loop
(bad)
mov
mov
mov
popa
xchg
out
add
mov
dec
(bad)
jmp
sbb
neg
mov
dec
sub
icebp
jae
retf
mov
jbe
call
(bad)
push
cli
cdq
fisttp
jae
add
xor
cmc
push
ja
out
iret
mov
cmp
mov
cdq
jl
movs
in
xchg
cs
mov
shl
pop
push
dec
and
mov
leave
xor
cmp
sub
les
and
cmc
sbb
pop
adc
jae
pop
std
popa
int3
das
ret
sbb
lds
clc
mov
fiadd
cmp
sub
and
dec
dec
mov
mov
dec
jnp
mov
inc
jae
shr
repnz
into
mov
sub
inc
imul
sbb
jecxz
or
and
sahf
enter
shl
push
shl
mov
mov
cmp
inc
mov
adc
(bad)
or
sbb
inc
push
dec
xchg
xor
pusha
and
xlat
sahf
or
movs
or
clc
mov
mov
imul
jl
in
fsubr
fcom
cmp
into
and
rcr
and
push
mov
and
xchg
push
mov
fwait
in
out
aaa
push
mov
push
jecxz
jg
lods
fs
inc
or
xchg
int
arpl
and
aad
ja
adc
inc
adc
in
in
and
sub
inc
sub
test
or
shl
movs
in
mov
push
mov
outs
mov
pop
rcl
imul
and
mov
xor
pop
retf
jbe
push
jge
mov
xor
fxam
inc
push
mov
ja
add
and
mov
ret
out
add
fsubr
jbe
std
mov
xlat
enter
aam
inc
dec
mov
loop
out
jnp
sub
cwde
mov
lock
test
push
and
es
scas
cmp
test
(bad)
mov
add
adc
imul
dec
out
(bad)
jb
fwait
das
adc
lods
inc
loope
adc
adc
clc
jge
xchg
xchg
pop
adc
dec
out
pop
pusha
inc
dec
ret
cmp
push
stos
pop
out
xchg
rsm
xchg
js
sub
mov
addr16
loop
ja
(bad)
sbb
sub
sahf
jne
test
retf
fcom
inc
call
push
cli
mov
push
daa
sbb
mov
and
scas
jmp
arpl
ror
push
pop
mov
test
cmps
dec
and
fstp
mov
pop
jge
mov
pusha
cmp
lods
test
lock
cmp
add
mov
mov
mov
dec
in
jae
ror
and
adc
or
sub
arpl
out
mov
sub
adc
adc
imul
mov
add
rcr
jp
out
int
outs
xor
icebp
aam
leave
in
cdq
push
adc
in
fdivr
mov
retf
inc
jmp
add
out
cmp
adc
and
or
mov
fcmove
loope
sbb
ja
sbb
push
push
je
rcl
ret
sar
mov
inc
std
lods
xchg
push
mov
sub
or
add
adc
xchg
mov
fisubr
mov
xor
jecxz
cld
xor
jae
push
stos
popf
popf
and
push
repz
(bad)
in
test
fwait
jns
and
gs
les
cmc
aad
dec
mov
imul
adc
mov
movs
pop
cs
or
jnp
xor
out
in
push
jb
mov
push
shl
(bad)
lods
gs
inc
push
ins
xor
mov
ins
pop
jle
call
jmp
xchg
adc
jmp
adc
jl
test
push
pop
xor
xlat
add
jge
dec
mov
sbb
frstor
das
xor
dec
jne
shr
stos
adc
scas
or
jns
rol
inc
dec
mov
or
retf
cmp
in
xor
adc
les
mov
out
les
sub
sbb
pop
lds
add
test
add
and
or
daa
les
push
lods
addr16
scas
dec
test
inc
mov
jno
data16
je
inc
jp
mov
ins
je
sub
movs
test
cld
loop
adc
std
pop
pushf
push
dec
and
or
out
lock
paddb
addr16
xor
movs
es
aaa
imul
mov
ss
dec
mov
lds
push
shl
adc
iret
dec
clc
mov
sub
outs
fdiv
pop
fcomp
inc
jmp
inc
test
movs
pop
mov
mov
xchg
aaa
mov
adc
add
or
sub
cmp
es
mov
or
test
cmp
in
add
and
test
or
ret
loope
js
scas
jno
ror
popf
mov
sti
jno
xchg
sub
rol
xor
(bad)
retf
pop
push
add
mov
mov
pop
xchg
inc
cmp
sahf
pslld
es
inc
in
sbb
xchg
(bad)
test
push
repnz
cdq
ja
jge
repnz
or
push
xlat
inc
mov
or
dec
push
sub
push
mov
fxch
add
icebp
push
sub
fmulp
mov
mov
mov
xor
(bad)
sub
add
xchg
jmp
cmp
into
push
xchg
add
cmps
xchg
and
mov
pop
clc
push
dec
adc
inc
xchg
and
test
int
sbb
das
mov
repz
mov
bound
dec
leave
mov
leave
pop
icebp
dec
dec
stos
movs
push
ja
xor
add
adc
inc
push
mov
iret
inc
mov
mov
mov
push
jle
xchg
movs
jg
xchg
sbb
xchg
fbld
shr
test
in
setp
shl
push
push
mov
pop
inc
ds
jl
outs
(bad)
jmp
test
cmc
jae
sti
mov
test
adc
mov
out
jnp
sbb
jo
lea
dec
enter
push
int
sbb
loop
lock
push
sbb
sbb
adc
xchg
add
inc
inc
jnp
sub
rol
lods
xchg
jg
push
jae
jmp
pop
pop
jb
sub
cmps
mov
sub
loopne
sub
push
and
pop
cld
dec
pushf
push
and
xor
call
cmp
cwde
pop
ins
retf
cmp
movs
inc
mov
add
in
fwait
sti
lahf
or
dec
mov
inc
adc
repnz
push
jl
jge
fimul
mov
call
push
pushf
in
jne
call
and
(bad)
in
int
out
sub
jb
xchg
dec
aas
fsub
into
int3
sub
fist
jge
ret
sahf
or
xchg
dec
shr
xchg
cmp
pop
pop
xchg
and
push
jnp
add
jle
popa
sbb
repz
or
mov
mov
pop
push
fdivrp
adc
push
out
adc
xor
add
jnp
mov
add
(bad)
or
sbb
test
test
out
out
inc
push
add
scas
sub
inc
xchg
cmp
xchg
dec
outs
cmp
hlt
sar
idiv
mov
cmc
movs
mov
jecxz
mov
add
jne
push
call
add
xor
pop
sbb
in
xor
addr16
mov
leave
mov
xlat
sub
in
sub
add
sar
cs
jo
or
scas
sub
jmp
jae
jbe
jne
ins
outs
mov
movntps
ja
pushf
jle
enter
std
push
cmp
adc
mov
in
sub
pop
pop
inc
cmp
adc
repz
out
adc
and
div
or
pop
inc
fs
fnstenv
cmp
test
call
dec
mov
sti
inc
pop
pop
ret
adc
pushf
or
jmp
hlt
mov
test
jmp
jb
add
and
popa
sub
cmc
mov
mov
lds
mov
and
mov
cmps
xor
cmp
fidivr
jl
hlt
push
in
js
push
fcmove
or
inc
daa
or
loopne
in
dec
inc
popf
(bad)
cli
pop
(bad)
dec
push
jge
xchg
movs
imul
fstp
add
pop
pusha
sbb
in
call
rol
sub
mov
sbb
ins
dec
(bad)
stc
add
xor
stc
arpl
xchg
xchg
fimul
lods
xchg
daa
mul
addr16
pop
lahf
add
xchg
xchg
pop
dec
mov
icebp
sar
dec
jecxz
cmp
hlt
loop
mov
ficom
cmc
enter
pop
ret
push
sbb
adc
mov
aas
daa
jmp
sub
or
iret
push
movs
xlat
sbb
into
stc
cli
add
mov
ret
jno
inc
jns
out
sar
adc
cmps
push
out
mov
xchg
sub
xor
pusha
test
jae
pop
mov
out
inc
out
dec
ret
cmps
cmp
lahf
dec
gs
and
mov
add
rcl
mov
call
sahf
adc
jnp
int3
lods
pop
jmp
mov
leave
imul
inc
cdq
mov
push
ins
pop
and
jmp
ins
es
in
jp
add
aas
push
or
leave
pop
add
fcom
lds
out
leave
pop
faddp
push
hlt
lds
cmp
retf
dec
sbb
je
fcomp
push
je
(bad)
cmp
add
cmp
inc
das
fsubr
sub
imul
fs
push
in
lahf
call
mov
ud0
and
xchg
sub
jg
lock
jmp
xchg
aas
fucomi
daa
xchg
sbb
test
adc
iret
test
test
cmp
dec
test
loope
scas
fiadd
adc
xor
das
lods
scas
push
cmps
pop
or
repnz
jbe
jge
fadd
mov
imul
movs
inc
mov
inc
jae
cmp
jle
or
mov
push
sbb
push
setp
scas
pop
shr
jbe
and
jno
popf
add
mov
popf
xor
sbb
sbb
push
push
lock
icebp
sbb
inc
lods
adc
test
pop
push
das
push
les
xor
shl
pop
adc
adc
call
mov
xor
mov
ss
pushf
jl
mov
stos
pop
out
adc
xchg
mov
add
inc
pop
sar
mov
aad
dec
add
popa
ret
fst
cli
sbb
mov
adc
mov
rcl
test
push
inc
inc
mov
dec
leave
or
xchg
sbb
mov
cmp
les
cmc
push
push
push
mov
dec
jle
movs
cmp
dec
sub
sar
adc
sub
rol
pop
mov
add
or
je
jle
pop
call
xor
in
adc
push
enter
xchg
pop
inc
dec
pop
push
jne
scas
fild
cmp
push
fsub
mov
sub
mov
pushf
jns
adc
or
add
aas
cmp
add
mov
or
dec
pop
adc
lock
call
xchg
mov
inc
push
add
mov
pop
xchg
and
pop
leave
ds
nop
add
jge
pop
ins
cmp
cmp
js
or
pop
and
dec
push
ins
xchg
lock
ins
jnp
enter
(bad)
fldenv
repnz
xchg
popa
arpl
aas
and
inc
push
jecxz
fwait
jno
aaa
mov
dec
clc
inc
sub
inc
add
pop
and
mov
xchg
inc
stc
cmp
sub
data16
xor
adc
aas
inc
int3
push
aam
inc
cmp
int
ins
lods
pop
movs
fwait
imul
stc
retf
mov
or
call
in
push
push
jp
mov
xchg
pop
enter
xchg
sbb
cmp
inc
fstp
(bad)
xor
inc
mov
jecxz
daa
fild
mov
or
(bad)
repz
xchg
int3
or
inc
cwde
ins
and
fistp
jecxz
push
ins
or
cmp
ja
push
pusha
pop
mov
and
mov
mov
mov
xchg
or
stos
rol
cmps
sbb
xchg
fs
inc
inc
std
imul
(bad)
out
mov
inc
dec
pop
loop
cmp
and
jbe
jo
aam
xlat
cmps
mov
daa
cmps
je
or
mov
xchg
(bad)
repz
ins
aaa
pop
xor
push
push
pop
call
arpl
addr16
(bad)
out
outs
cmp
xchg
jmp
jg
jnp
inc
repz
jp
jg
in
jbe
fsubp
mov
mov
inc
test
les
lahf
mov
xor
pop
push
xchg
and
cdq
mov
or
call
dec
cs
jae
xchg
xor
pop
adc
out
cwde
ja
or
loop
jb
mov
adc
and
pop
jp
lods
test
jle
xor
push
dec
cwde
jp
retf
nop
loopne
cmp
cli
and
jle
repz
mov
add
and
bound
pop
or
es
test
fptan
rcr
test
mov
jae
ror
mov
mov
test
ret
rol
adc
jmp
add
xor
and
cmp
and
jnp
cmc
and
cmps
rcl
push
jns
fdivr
out
sub
or
nop
pop
cmps
jne
ret
pusha
sbb
inc
std
daa
inc
sub
jge
mov
repnz
test
aam
jo
cli
(bad)
pop
shl
xchg
dec
or
xor
xor
lods
movs
mov
std
test
outs
pushf
outs
push
push
ror
push
cmp
cli
xchg
and
inc
pop
adc
outs
loop
fdiv
pop
sbb
add
jns
push
sbb
mov
xchg
adc
addr16
aam
sub
addr16
adc
mov
sbb
js
movs
add
pop
outs
js
cs
mov
xchg
(bad)
es
fstp
mov
mov
retf
js
dec
movs
dec
inc
jmp
aas
int3
mov
adc
pop
stc
gs
int3
adc
sbb
add
xchg
mov
push
int
sbb
icebp
mov
cmp
mov
fwait
outs
mov
std
push
and
or
pop
cld
dec
fs
stos
test
int
or
xchg
sbb
shr
xchg
xchg
xchg
ret
cmc
push
pop
sar
pop
jns
pop
xor
fisttp
fwait
bound
fnstcw
jnp
pop
push
(bad)
scas
adc
sti
push
or
cs
sbb
lock
ret
jae
movs
ja
xor
xchg
popf
xor
jno
imul
mov
in
sbb
fmul
out
mov
xor
and
dec
pop
aam
cdq
push
cwde
(bad)
hlt
fdiv
jne
out
dec
and
pop
test
loopne
mov
mov
push
or
call
or
out
in
mov
mul
fcom
into
jmp
push
cmp
sahf
adc
out
xor
gs
loopne
jmp
out
pop
aam
adc
sbb
dec
mov
enter
or
sti
or
jnp
xchg
lahf
jne
cdq
ret
and
retf
ins
push
or
xchg
pop
sub
dec
xchg
enter
ficomp
mov
arpl
push
inc
aad
sbb
and
pop
scas
jbe
inc
dec
shr
in
out
stos
xchg
cmps
pushf
movs
adc
fisttp
adc
xchg
inc
stos
xor
jne
and
push
jno
pop
xchg
cmp
shl
mov
adc
jg
xor
pop
push
xor
pop
arpl
inc
loope
mov
dec
cmp
push
mov
jbe
adc
movs
retf
jmp
sub
pop
mov
sti
ret
sahf
je
repnz
and
xchg
pop
push
add
inc
inc
dec
xor
adc
pop
mov
cmps
aad
pop
sub
mov
xchg
shr
neg
out
(bad)
mov
mov
fild
addr16
xchg
imul
jbe
pop
dec
movs
xlat
add
cwde
pop
push
into
in
push
aaa
mov
mov
sbb
pop
ss
dec
pop
daa
test
popa
mov
mov
(bad)
dec
popf
imul
aas
xchg
out
arpl
sbb
call
add
jmp
jae
cmps
mov
fwait
jp
ret
faddp
les
mov
mov
mov
mov
push
pop
rcl
(bad)
(bad)
xchg
inc
ret
or
sub
dec
ror
dec
test
mov
or
sub
stc
mov
dec
stc
enter
push
jne
xchg
push
adc
mov
test
imul
cmps
out
ins
and
cmp
cmps
arpl
out
call
aas
jns
mov
xlat
mov
mov
cli
push
mov
cwde
pop
mov
dec
or
mov
cmp
dec
out
addr16
xchg
in
addr16
div
(bad)
ds
jmp
(bad)
shl
cmp
dec
cli
fwait
es
fcomp
rcl
inc
ror
lock
adc
fwait
or
cdq
xlat
cmp
pop
xchg
dec
stc
or
movs
jge
mov
jnp
add
aas
mov
in
(bad)
pop
nop
cld
(bad)
outs
rol
xchg
outs
sub
dec
xchg
mov
cli
inc
stc
add
loopne
(bad)
and
inc
mov
mov
sbb
dec
aas
loope
cmp
and
test
add
shl
mov
mov
cmps
adc
aas
daa
push
iret
cmps
(bad)
jmp
cmc
movs
enter
xchg
push
inc
fsub
push
and
(bad)
int3
clc
jge
cwde
out
xchg
mov
retf
inc
jge
rcl
and
aas
push
in
test
and
jmp
imul
mov
dec
pop
shl
sub
jbe
fldcw
xchg
dec
fbstp
mul
add
sbb
and
mov
inc
cmp
ror
retf
sar
loope
fcomp
jbe
cmp
mov
inc
push
imul
inc
shl
push
mov
(bad)
(bad)
ds
les
push
cdq
fst
push
cmp
jae
add
mov
cld
nop
loope
cmp
jns
pop
cmp
scas
stos
dec
retf
sbb
mov
sbb
pop
aam
add
jnp
js
stc
pop
xor
mov
sub
and
push
hlt
ret
hlt
repz
cli
mov
xor
(bad)
cmps
jecxz
sub
sbb
mov
fst
inc
clc
xchg
(bad)
(bad)
mov
test
into
ja
sti
in
inc
adc
sbb
lods
xchg
pop
cmc
hlt
xlat
and
mov
cdq
leave
push
cli
cmps
js
xor
std
int
jo
cmps
push
loopne
jbe
jg
icebp
ss
push
mov
fs
cli
jmp
loopne
loope
arpl
mov
das
(bad)
imul
das
sbb
mov
inc
jl
mov
iret
push
inc
push
cs
mov
repnz
rcr
ss
add
call
cmp
leave
add
sub
jge
push
sti
inc
push
sub
mov
xor
sub
xchg
jo
fdivr
inc
call
call
xor
fiadd
int3
lds
mov
sahf
add
push
sub
sub
jmp
jbe
sbb
test
addr16
push
pop
js
inc
jns
xor
fmul
aam
out
jne
sbb
icebp
sar
ins
in
enter
push
lods
std
add
mov
sub
int3
cmp
pop
add
(bad)
std
loop
xchg
sti
jle
adc
jo
mov
ja
cmp
sub
or
in
mov
shl
inc
call
and
dec
aas
xlat
lods
icebp
aam
add
lds
adc
xor
sbb
pusha
addr16
mov
adc
adc
idiv
imul
aas
imul
fs
cmp
lahf
xchg
push
mov
sub
sub
or
popf
sti
push
mov
sbb
xchg
add
ds
push
push
sbb
out
cmp
not
ss
xchg
mov
out
push
mov
fidivr
lock
xchg
inc
lds
cld
lea
iret
jb
popa
mov
scas
cs
iret
in
and
mov
adc
movs
aas
mov
mov
sub
or
or
cmp
xchg
cmp
push
lock
cmps
mov
mov
in
jb
arpl
lahf
in
mov
cmp
inc
in
pop
dec
mov
add
push
mov
push
sbb
fcom
out
cmp
inc
test
mov
ret
dec
inc
stos
xchg
jne
paddd
in
jl
push
cmp
int3
and
sub
cmps
sub
mov
jg
inc
pop
test
mov
jp
xor
(bad)
adc
add
adc
aas
out
pop
dec
jg
lea
push
pop
xor
stc
mov
stc
jne
aas
stos
adc
jb
bound
jg
fld
lea
rcl
xlat
js
(bad)
dec
fwait
cmp
repnz
aaa
sbb
xchg
leave
pop
mov
push
jl
adc
xor
dec
test
sbb
sub
int
mov
sub
adc
dec
mov
xchg
fistp
jecxz
pusha
outs
call
inc
and
fcom
mov
leave
or
call
je
adc
and
dec
push
cmp
(bad)
mov
add
call
scas
mov
test
push
ins
jge
pop
push
loope
mov
stc
retf
pop
pop
mov
shr
adc
nop
into
mov
les
ss
dec
mov
or
popa
in
jg
js
test
jno
fisub
cli
push
push
nop
ror
outs
dec
pushf
in
movs
push
cmp
add
adc
into
mov
pop
cmp
nop
cs
bound
adc
cmp
or
mov
outs
adc
ds
jp
jecxz
ret
pushf
out
xchg
dec
inc
ds
je
pop
xchg
push
ret
and
or
les
xor
test
enter
outs
xlat
(bad)
and
aaa
mov
mov
pop
xchg
pop
mov
jmp
xchg
dec
or
sub
cmc
aad
pop
test
movs
mov
sub
leave
out
pusha
push
call
fwait
cmps
mov
outs
mov
xchg
aas
in
ds
test
xor
and
call
test
rcl
pop
iret
mov
mov
(bad)
sbb
repz
(bad)
mov
fucom
jl
stc
jb
std
push
shl
cdq
inc
push
repnz
retf
jp
inc
mov
add
mov
mov
adc
je
dec
xchg
ins
or
mov
dec
test
loopne
jecxz
xchg
lods
or
jge
(bad)
xor
cmp
dec
fsub
rcl
sti
push
pop
xchg
push
sbb
pop
add
cdq
pop
scas
jecxz
mov
nop
xor
mov
test
icebp
pop
mov
pop
rcl
add
sub
jne
(bad)
push
xor
pop
pop
push
iret
sbb
inc
inc
stc
xlat
and
arpl
test
push
lds
mov
mov
mov
nop
sub
fdivp
add
out
and
and
das
jge
out
pop
and
pop
and
shr
es
dec
sub
test
jecxz
mov
sub
mov
pop
mov
int
int
jle
test
popf
fld
icebp
cmps
cmp
nop
jl
int
inc
cmps
adc
icebp
(bad)
xchg
daa
dec
mov
cmp
(bad)
jmp
inc
xchg
ficom
add
cmp
test
or
sti
ins
(bad)
movs
sbb
mov
mov
push
ds
pop
mov
mov
cmp
sahf
adc
dec
ror
xchg
push
movups
nop
xchg
cli
xchg
rcr
push
adc
cs
mov
add
mov
xor
test
dec
cld
cmp
inc
in
fbld
into
pop
mov
mov
pop
or
push
cdq
call
xor
mov
int
xchg
std
in
mov
out
outs
sbb
pop
jl
fwait
mov
ins
stos
fcom
pop
std
(bad)
push
xchg
pusha
aas
daa
ds
enter
and
jl
push
lock
mov
mov
cmp
dec
dec
mov
rcl
pop
adc
mov
pop
push
aam
lods
retf
ficomp
xchg
ds
fucomip
pusha
cmps
dec
mov
popa
sti
xor
jae
and
push
and
(bad)
in
retf
sbb
mov
xchg
mov
sar
movs
push
ds
pop
enter
xchg
adc
jnp
call
cmp
cmps
add
mov
dec
xor
loopne
les
(bad)
in
gs
sbb
sti
xchg
cld
xor
cwde
aad
je
in
call
(bad)
mov
loope
push
pusha
lea
lock
fiadd
jle
in
(bad)
push
out
clc
test
arpl
jae
jae
mov
mov
xchg
into
stc
ja
outs
movs
mov
in
mov
int
ror
cld
cwde
imul
sub
in
push
xor
fsub
pop
retf
mov
dec
add
leave
arpl
sbb
sub
pop
movs
or
push
jmp
adc
jae
dec
xor
ds
(bad)
adc
or
test
popa
or
ror
pushf
fwait
adc
in
mov
or
mov
icebp
pop
mov
jno
sahf
je
sar
shr
sub
jo
and
rcr
mov
jae
cmp
mov
scas
mov
dec
cdq
cs
xchg
jmp
inc
sahf
add
daa
sub
cld
push
xchg
out
inc
cmp
pushf
aam
sbb
add
data16
sub
dec
inc
or
inc
jp
in
dec
imul
test
cmp
xchg
mov
mov
mov
lahf
inc
in
jno
cmc
pop
mov
lahf
jl
push
pop
fstp
push
cld
xchg
add
cmps
or
cmps
fsubr
and
mov
cmp
pop
mov
mov
imul
add
jbe
xchg
add
xchg
pop
out
popa
gs
pop
jl
add
add
pop
(bad)
rcr
push
clc
sar
sbb
pop
or
call
pop
adc
push
dec
mov
jno
ds
lahf
repz
ja
and
out
rcr
inc
push
aaa
jg
iret
cmp
mov
loope
frstor
movs
add
nop
ins
into
cmc
data16
push
retf
aad
push
idiv
mov
mov
push
(bad)
adc
lods
xchg
mov
sub
xchg
push
cmps
test
push
ret
mov
adc
ja
push
jp
jmp
xchg
pop
xchg
adc
mov
or
xchg
ins
call
fistp
cli
lahf
out
sti
inc
pop
sub
mov
bound
in
jle
add
test
adc
or
mov
mov
adc
lock
xor
cmp
out
fcmovbe
jae
mov
xchg
pop
fnstenv
cmp
sub
mov
jmp
dec
sbb
sbb
mov
ins
xchg
or
dec
jnp
add
adc
bound
iret
fbld
std
mov
mov
xchg
ret
cmps
xchg
xchg
jge
imul
ficomp
mov
and
jae
(bad)
pop
test
adc
mov
fsub
cmp
sbb
aaa
jp
les
push
sbb
(bad)
pop
or
push
sti
push
arpl
mov
jnp
or
adc
dec
sub
ds
es
std
sub
(bad)
mov
add
jb
add
lea
jnp
jl
mov
les
dec
and
ins
mov
daa
(bad)
daa
repz
fstp
pop
xlat
sbb
ins
adc
leave
fwait
xchg
mov
mov
repnz
pop
dec
das
xlat
rcr
add
ja
adc
pop
mov
ss
(bad)
je
jecxz
jne
ss
sar
sub
dec
push
cmp
test
int
or
sti
jae
push
push
dec
call
hlt
cmps
mov
xchg
(bad)
jmp
mov
ret
jmp
loop
add
sbb
mov
fistp
push
pop
jno
shr
or
leavew
push
jecxz
xor
mov
jl
add
sbb
jmp
pop
xor
lds
adc
jnp
add
jo
fstp
pusha
sti
les
cmp
rcr
xlat
cmp
fcmovne
sub
xchg
test
mov
scas
movs
lds
sbb
xchg
loope
sbb
cpuid
push
or
cmovo
nop
push
fmulp
dec
je
rcr
sti
lods
popf
sbb
(bad)
in
inc
sahf
cdq
int3
or
add
inc
jne
ss
mov
inc
sub
cmps
push
mov
fild
sub
mov
ficomp
sub
sub
cmps
in
dec
sbb
popa
jae
scas
inc
sub
cmovno
dec
cs
push
pushf
cmp
retf
gs
in
jnp
mov
es
mov
int
mov
add
neg
sahf
popa
arpl
mov
pop
ds
or
(bad)
imul
cmc
imul
test
icebp
mov
lea
and
in
push
or
mov
xor
inc
jno
jo
movs
fimul
fadd
bound
push
jne
mov
fadd
les
mov
add
mov
sahf
xor
mov
and
dec
adc
push
xchg
push
inc
adc
cmp
mov
imul
pop
fidivr
pop
pop
cmp
and
ds
push
aaa
adc
movs
add
sbb
mov
retf
out
xchg
and
mov
fild
shr
out
and
fdivr
dec
test
mov
fmulp
lods
not
(bad)
loopne
cwde
sub
mov
cld
inc
jp
(bad)
icebp
and
sbb
(bad)
call
push
xor
jg
add
imul
and
lods
adc
and
lahf
cmp
(bad)
call
xchg
cdq
mov
and
xor
and
addr16
sub
or
cmp
(bad)
jl
aam
stos
cdq
xchg
or
scas
retf
push
xchg
jo
je
int
fwait
sub
paddusw
mov
sbb
cwde
(bad)
test
sub
into
or
ins
xchg
and
fnstcw
xor
mov
pop
psrld
xchg
dec
retf
aaa
cmp
es
or
mov
out
dec
cwde
and
pop
or
inc
addr16
fcom
stos
jmp
push
xor
daa
aad
clc
mov
add
neg
shl
push
nop
lods
fiadd
repnz
push
inc
pop
pop
ss
clc
sub
jmp
call
pop
mov
adc
dec
mov
mov
mov
adc
ror
out
and
pop
(bad)
(bad)
imul
and
jmp
inc
pop
(bad)
(bad)
fcomp
lods
jp
addr16
jmp
fisubr
cmp
cmp
rcr
je
inc
xor
push
cmp
cmp
jge
xor
jns
dec
xor
xchg
mov
sub
push
adc
mov
pop
sar
das
repnz
sbb
stos
shl
sbb
repnz
lea
sub
movs
or
fldcw
and
sub
cld
xor
and
lods
fild
push
or
xor
andnps
inc
sar
(bad)
dec
push
or
sub
test
pop
mov
xchg
jmp
mov
push
scas
jne
sahf
loopne
cmp
mov
out
or
cmp
call
test
std
js
push
(bad)
lods
fsubr
push
lods
je
mov
rcr
xchg
(bad)
jle
cwde
pop
or
jb
rcr
or
pop
inc
mov
pop
imul
ins
cmc
lds
cwde
and
inc
xchg
retf
int
pop
ficom
jnp
and
xchg
imul
dec
inc
cld
loope
daa
ja
cmp
inc
jo
std
rcl
push
sahf
mov
int
stos
xor
imul
rol
nop
pushf
push
mov
xchg
int3
enter
mov
xchg
pop
sbb
sub
mov
into
fwait
imul
jb
scas
(bad)
push
adc
jmp
movs
fidiv
xchg
(bad)
mov
mov
test
jb
leave
test
add
mov
pop
mov
jnp
adc
push
sahf
mov
pusha
dec
outs
sub
add
xchg
add
(bad)
aas
cmp
inc
push
shr
or
xchg
data16
test
inc
sub
jbe
jbe
or
ret
jmp
retf
cmp
sbb
(bad)
call
inc
sub
push
iret
mov
call
adc
pop
fimul
mov
fcomp
push
and
sbb
pop
cli
aad
shl
mov
jae
ror
xchg
mov
aam
js
shr
out
adc
jge
inc
mov
push
shl
bnd
and
mov
mov
jp
gs
stos
je
imul
pushf
mov
jb
shr
rep
cmp
imul
leave
in
push
xchg
push
xor
hlt
jbe
jge
(bad)
sbb
add
aas
cmc
cmp
mov
push
pop
push
fdivr
test
jmp
enter
mov
xor
lahf
jnp
mov
loop
inc
inc
xchg
mov
enter
cmp
lods
push
dec
adc
aaa
push
cmp
pop
mov
test
icebp
fisttp
imul
mul
or
mov
sub
inc
imul
cmp
xchg
pop
adc
jb
lock
mov
mov
fild
adc
sub
or
dec
xchg
repz
lahf
jae
dec
mov
scas
or
sti
ins
xor
int3
sbb
jns
mov
sub
mov
cwde
neg
stc
pop
out
or
dec
jbe
daa
jne
or
(bad)
jmp
push
rcr
pop
shl
(bad)
retf
sub
outs
jp
or
xor
aam
mov
std
bnd
xor
ret
jmp
add
mov
retf
aas
lds
jae
pop
cmp
inc
jmp
push
xor
pusha
nop
xor
xor
pop
sub
or
xor
test
fdiv
xchg
repz
fcomi
mov
lea
mov
push
push
inc
dec
jb
idiv
adc
sub
rcl
mov
aaa
in
mov
mov
fcomp
dec
mov
lods
dec
pop
cmp
iret
adc
out
clc
push
mov
jbe
jae
xchg
jg
jns
je
(bad)
into
push
and
outs
lods
push
sbb
push
fiadd
xchg
sub
cmps
cmp
add
mov
sbb
sbb
(bad)
not
mov
xor
inc
xor
sbb
xchg
das
cwde
mov
sbb
fwait
sub
sub
ja
out
sbb
sub
xchg
sti
gs
dec
scas
push
adc
sub
inc
dec
adc
fiadd
and
add
dec
inc
mov
sub
mov
stos
push
sub
ror
jle
and
(bad)
jmp
ja
cmc
cmp
adc
out
jnp
cld
daa
adc
push
cld
icebp
adc
sbb
stos
push
mov
xor
test
xor
mov
mov
push
shl
push
aam
add
std
mov
push
leave
(bad)
int3
inc
ins
jge
movs
in
dec
xor
fist
fistp
mov
daa
loopne
pop
fucom
pop
push
es
add
push
adc
repz
out
gs
adc
mov
mov
repnz
inc
mov
in
movs
call
test
adc
pop
mov
push
xor
es
dec
jb
jl
cmp
out
ret
call
cmp
rol
enter
mov
pop
sub
cmp
jecxz
arpl
nop
sub
mov
xor
dec
movs
neg
out
and
fidiv
inc
or
inc
stos
mov
mov
jle
arpl
jns
dec
iret
xchg
xchg
push
jecxz
xchg
dec
push
cmps
inc
sbb
push
xchg
pusha
adc
aas
pop
(bad)
fistp
sti
xor
jmp
mov
sbb
inc
mov
idiv
clc
pop
add
and
inc
mov
adc
or
push
xchg
hlt
xor
sbb
repnz
aaa
rcr
in
js
push
shr
(bad)
repz
adc
fs
cld
fsub
cmp
std
mov
out
mov
fwait
mov
stos
les
push
jbe
cli
shl
scas
pop
(bad)
cld
adc
sbb
or
pop
sbb
mov
or
(bad)
popa
call
ficom
pop
(bad)
(bad)
in
sti
cmp
mov
pop
call
sbb
dec
popa
std
and
xchg
int
mov
xchg
mov
lock
cmp
repz
mov
and
pop
enter
xchg
add
push
mov
xor
or
movs
(bad)
(bad)
in
imul
enter
out
pop
mov
popf
mov
cmp
push
imul
ficom
xchg
cmp
fldl2e
dec
inc
stc
mov
xchg
ja
iret
cmp
and
pop
adc
out
jae
add
pop
mov
push
xchg
pop
stos
mov
mov
cmp
mov
pop
jae
and
test
jecxz
mov
inc
imul
xchg
test
push
aaa
push
xor
pop
mov
mov
arpl
loope
cmc
xchg
xlat
mov
sahf
adc
in
(bad)
sbb
xor
das
call
mov
mov
popa
jecxz
inc
dec
hlt
lods
test
add
in
arpl
mov
out
sar
jp
push
xchg
ins
fst
xchg
stos
push
popf
(bad)
ret
pop
call
inc
out
ds
icebp
push
xor
mov
pop
jo
aas
fisub
jne
jp
xchg
pop
inc
jae
fld
jnp
outs
aam
fsubr
sbb
cmp
dec
mov
xor
lods
call
adc
fidiv
mov
pop
setne
popa
cmp
aas
pop
arpl
imul
jbe
lea
enter
push
pop
sbb
xchg
stos
sbb
inc
cld
mov
mov
add
inc
mov
xchg
repz
jae
loopne
and
icebp
xor
xchg
int
(bad)
sbb
lods
std
sbb
push
pushf
sbb
lea
(bad)
scas
jle
fisttp
jge
ret
push
fcmovu
fdiv
out
movs
lahf
fsubr
and
sub
in
aaa
pop
inc
or
movs
sub
push
and
loop
std
(bad)
fadd
sbb
arpl
mov
xor
stc
mov
xor
loope
test
xchg
dec
retf
dec
outs
fnstcw
mov
ds
pop
add
retf
sub
mov
add
pushf
sub
push
adc
jno
fxam
aas
cs
and
jo
inc
push
fcmovu
les
cmp
cmc
xor
push
in
mov
xor
adc
mov
sbb
push
(bad)
retf
aas
cmp
sbb
scas
push
mov
xchg
aas
cmp
stos
mov
retf
mov
inc
stc
aaa
fistp
int
dec
adc
adc
jl
fisttp
call
xchg
mov
pop
adc
jno
ins
pop
retf
xchg
adc
outs
pop
dec
or
xor
mov
int
jb
xchg
jmp
lds
xchg
jle
dec
xchg
cmp
sbb
cmp
mov
popf
mov
dec
(bad)
bound
mov
gs
xchg
ret
mov
xchg
mov
adc
mov
mov
jae
shr
lods
add
(bad)
jns
out
cmp
sbb
inc
sahf
cmps
mul
out
mov
push
(bad)
xlat
add
aas
leave
repnz
sbb
hlt
shl
aas
mov
pushf
pop
int
inc
push
jecxz
sahf
dec
or
adc
fwait
push
ror
and
add
fdivrp
xchg
ins
js
mov
jl
inc
retf
jne
jmp
cmps
fnstenv
retf
shl
mov
cmc
inc
mov
lock
ret
lahf
call
pop
fwait
xor
call
mov
daa
push
gs
jb
cwde
cld
call
xchg
inc
std
mov
(bad)
neg
adc
scas
lds
cmps
das
das
mov
rol
mov
movs
jb
adc
xchg
jno
ds
mov
adc
mov
adc
ficom
in
lahf
xlat
add
jb
jne
rcl
mov
push
pop
xchg
stc
rcr
fcom
aas
repz
rol
(bad)
into
sbb
xchg
aad
sbb
pop
inc
mov
ins
mov
repnz
jno
cli
inc
inc
xchg
adc
out
cdq
add
scas
icebp
das
dec
jp
lea
dec
repz
shr
and
cwde
adc
and
xor
sub
jno
fdiv
in
mov
and
clc
inc
js
add
fs
dec
push
mov
sub
cmp
sub
lahf
std
xor
adc
out
jmp
cmp
and
icebp
sti
ffree
mov
retf
lods
inc
mov
xchg
pop
jae
pop
xor
outs
xor
jno
adc
test
xchg
(bad)
and
push
ss
dec
shr
call
xor
cmps
push
cld
cdq
dec
xchg
cmp
jae
pop
cdq
in
or
adc
inc
adc
ret
add
mov
stos
mov
sar
hlt
jns
or
jl
popa
xchg
and
mov
loop
dec
vpsrlq
and
icebp
xchg
dec
pusha
adc
jmp
adc
xor
aad
sub
fidivr
jmp
scas
and
add
lahf
xchg
and
xchg
ret
test
mov
clc
(bad)
or
test
or
inc
fld
jl
stos
jne
jae
sub
cmp
sbb
mov
stos
(bad)
ja
outs
outs
mov
mov
or
movs
xchg
and
movs
xor
cli
mov
push
jmp
es
mov
daa
fisubr
cmp
inc
call
push
bound
pop
shl
ss
dec
pop
stos
fist
sub
push
mov
iret
add
movs
iret
push
push
pop
jge
dec
mov
sub
mov
cmp
add
and
or
das
nop
(bad)
fnstenv
fldcw
pop
inc
out
enter
xor
in
xor
mov
pop
mov
cli
dec
jg
ret
inc
pushf
frstor
inc
hlt
retf
mov
je
fnstcw
xor
cmp
mov
dec
xchg
and
(bad)
fs
push
in
repz
add
mov
aad
push
pop
dec
cmp
adc
sub
pop
test
jae
mov
clc
mov
and
adc
and
test
push
sub
mov
retf
mov
dec
hlt
pusha
imul
(bad)
push
test
pop
(bad)
out
add
cmps
fs
out
cmp
stc
cmp
rcl
aam
mov
mov
mov
retf
dec
fcmovnu
jb
pop
jae
cs
arpl
movs
call
push
xchg
jo
scas
dec
cmp
movs
and
in
imul
or
mov
out
lods
pop
lahf
sbb
add
popf
test
in
pusha
loope
pop
or
inc
int3
gs
mov
je
in
stc
pop
mov
rep
sub
cmp
inc
push
mov
mov
arpl
adc
push
sub
xchg
jbe
cld
mov
div
stc
and
and
mov
cmp
jo
ret
das
js
jmp
xchg
in
scas
and
mov
clc
inc
and
adc
fnstcw
ret
sar
push
cdq
int
loope
or
sbb
into
loop
mov
test
adc
cwde
enter
imul
xchg
lods
pop
test
ins
push
pop
dec
call
mov
dec
push
dec
stc
xor
xchg
cmp
mov
stos
ins
daa
adc
mov
xor
into
loop
les
daa
sahf
data16
jne
jmp
test
mov
add
push
pop
shl
xchg
test
cmp
cmp
daa
mov
sahf
xchg
enter
sub
das
mov
call
sbb
leave
xchg
movs
pop
mov
nop
dec
in
adc
fstp
test
into
adc
sti
jmp
xchg
mov
dec
add
shr
dec
dec
pop
test
enter
and
lods
jmp
or
jl
stc
nop
cdq
and
repnz
loope
in
and
cwde
push
cs
sub
sub
je
adc
mov
cwde
fldcw
mov
and
addr16
dec
data16
(bad)
or
cmc
(bad)
jl
daa
mov
out
not
push
xor
adc
(bad)
cwde
add
add
inc
jmp
jae
jb
sahf
cmp
cmp
clc
pop
ins
das
inc
adc
adc
into
mov
push
mov
xchg
(bad)
mov
dec
pop
xchg
mov
icebp
xchg
jnp
or
enter
fwait
lods
(bad)
sub
jge
xchg
jno
mov
mov
xchg
inc
adc
rcr
mov
in
call
loopne
pop
mov
bound
cmps
pop
xor
inc
movs
mov
cld
push
sub
jl
push
outs
fisubr
mov
les
xlat
xchg
les
div
jnp
mov
std
in
cs
mov
mov
loopne
adc
lahf
sbb
sbb
scas
push
ins
sub
dec
imul
mov
jg
cdq
pop
mov
mov
jbe
mov
pushf
xchg
xchg
jns
mov
(bad)
(bad)
push
pop
dec
je
ds
dec
pop
out
or
sbb
sar
outs
push
fdiv
jmp
mov
xlat
mov
outs
inc
inc
fs
sub
ror
ret
cdq
dec
clc
das
cs
xchg
aas
movs
into
xor
mov
jge
add
mov
mov
dec
add
jbe
(bad)
or
gs
push
adc
jmp
test
push
outs
dec
or
cdq
imul
lods
push
hlt
popa
not
xchg
stc
fiadd
es
pushf
arpl
push
cld
xchg
enter
cmp
dec
add
out
inc
xor
dec
add
scas
loop
push
outs
add
retf
fs
inc
rcr
out
scas
ret
adc
fs
mov
imul
dec
in
jne
xchg
mov
je
mov
and
lea
scas
and
mov
mov
adc
sub
cld
lods
and
lahf
push
push
inc
mov
nop
add
leave
cmps
sbb
scas
ss
rol
mov
xchg
clc
mov
repnz
jge
sbb
xor
mul
pop
test
cmp
fldenv
repnz
test
sub
fsub
enter
popa
mov
mov
pop
rcr
out
cmovs
(bad)
stc
mov
inc
out
gs
movhlps
and
push
push
in
jne
sub
call
pop
lock
push
loope
dec
pop
(bad)
jns
cmps
sbb
jmp
add
mov
cmp
adc
rcl
or
push
push
scas
nop
int
mov
retf
add
jns
mov
hlt
add
ret
outs
rcl
cmp
cmp
pushf
mov
aas
push
jb
cld
jbe
and
nop
push
mov
or
adc
or
lahf
mov
inc
in
int
sub
lds
push
sti
scas
stc
dec
or
mov
jp
mov
ins
loop
xor
lahf
or
test
dec
and
imul
mov
out
pop
arpl
mov
mov
dec
in
cld
(bad)
and
xchg
xchg
std
and
clc
rol
pop
mov
jle
fadd
out
call
ficom
add
jp
jg
and
xor
mov
addr16
pop
out
ja
lahf
sti
sbb
call
mov
enter
aad
pushf
sub
pushf
push
cmp
add
sbb
std
cmps
imul
and
add
mov
call
inc
mov
jge
or
inc
ss
xor
movs
mov
xchg
xchg
aam
clc
sbb
adc
mov
mov
test
and
cmc
adc
imul
in
sub
imul
fnstcw
mov
bound
jle
daa
push
stc
dec
test
and
adc
in
xchg
mov
(bad)
seto
sub
fwait
pop
jge
dec
inc
mov
arpl
mov
jo
gs
sti
jl
xchg
shr
clc
in
inc
mov
sbb
mov
test
and
cmc
pop
fnstsw
sbb
push
ror
dec
test
jb
ss
push
push
jl
aaa
mov
or
sub
xchg
mov
movs
mov
add
movs
call
pop
sbb
xchg
xchg
sub
xor
xor
stos
int
mov
ds
jne
fbstp
mov
inc
or
cmc
mov
push
nop
inc
inc
movs
scas
fld
sbb
nop
stos
pop
mov
movs
or
cdq
xor
cmp
les
xor
mov
push
out
movs
(bad)
call
repz
daa
int3
inc
(bad)
push
jns
inc
loope
sbb
mov
xor
jae
leave
cmps
mov
pop
sbb
and
adc
into
xchg
inc
inc
das
movs
stos
add
ficom
or
mov
jmp
add
pop
add
add
pop
fsubr
mov
jnp
scas
mov
pop
mov
or
mov
jmp
test
push
and
test
cmp
bound
push
pop
xor
pop
adc
sub
cmp
or
add
add
dec
fcmovnb
xchg
sbb
add
push
fs
retf
mov
and
sahf
push
xchg
xchg
scas
jne
inc
jns
idiv
lahf
lods
adc
(bad)
mov
int
bound
fstp
in
test
(bad)
out
adc
ds
add
movs
ins
inc
fwait
and
out
call
(bad)
adc
ja
push
jmp
push
rdpmc
repz
jns
rol
nop
sti
(bad)
xor
or
mov
sub
add
mov
in
sub
daa
jp
clc
push
sub
sub
gs
or
mov
mov
mov
fisttp
dec
lock
in
sbb
mov
test
(bad)
mov
add
cmp
mov
retf
lea
mov
ret
into
ds
mov
add
popf
mov
imul
mov
inc
jge
pop
retf
xchg
push
push
adc
fwait
or
(bad)
mov
(bad)
aas
dec
ds
fisub
and
pusha
(bad)
adc
fdivp
idiv
scas
xchg
rcl
mov
lock
dec
mov
cld
stos
lods
lods
leave
outs
or
mov
icebp
inc
in
outs
out
push
stos
addr16
bnd
popf
das
js
test
jge
bndstx
mov
push
aas
pop
push
add
ret
hlt
or
mov
sti
inc
icebp
retf
push
sub
mov
xchg
xor
inc
into
xchg
loope
inc
ss
popa
sbb
xchg
xchg
repz
popf
scas
sti
dec
or
adc
(bad)
sahf
es
fucomi
cmp
sub
xor
fdiv
mov
and
ja
pop
dec
add
sbb
ja
xchg
push
fs
rol
push
fstp
(bad)
aam
lods
pop
js
xor
jnp
sbb
pop
mov
cmp
add
cmp
int3
or
in
jae
mov
cmp
pusha
xchg
dec
xchg
jns
mov
jno
push
test
stos
mov
fwait
dec
js
push
aam
outs
push
sbb
push
push
push
pop
sti
enter
mov
out
sahf
adc
mov
gs
jne
xor
dec
mov
(bad)
out
nop
sub
(bad)
pop
repz
daa
adc
lahf
ret
inc
or
sub
cmps
mov
inc
or
cwde
(bad)
stc
or
xchg
xor
xchg
jnp
punpckhdq
jecxz
je
fidivr
shr
leave
xchg
cmc
jge
jmp
mov
cmp
push
dec
retf
inc
mov
sbb
(bad)
push
mov
inc
repz
push
fs
mov
in
inc
pusha
xchg
lods
push
or
add
pop
es
out
dec
lods
movs
int3
(bad)
cdq
sub
sbb
sbb
idiv
dec
lods
stos
sbb
rol
mov
iret
nop
enter
jmp
mov
mov
and
inc
sbb
jmp
ss
(bad)
sub
pop
dec
xchg
imul
lods
mov
ins
or
mov
das
pushf
test
cmp
mov
add
ins
out
ret
(bad)
retf
into
sbb
jmp
movzx
push
lods
push
pop
xchg
sbb
fwait
jnp
sti
iret
iret
call
sub
mov
sub
inc
test
dec
push
jae
pop
fwait
test
mov
sbb
pop
repz
shl
test
jmp
xchg
lods
jecxz
ficomp
les
lock
xchg
stc
cwde
fisub
div
(bad)
pushf
inc
gs
push
call
hlt
sub
fucomi
inc
nop
jle
inc
sub
out
mov
cmps
mov
aad
push
test
out
pop
stos
fidiv
jge
jae
dec
in
(bad)
push
cmp
pop
sbb
pop
sbb
cmp
das
fstp
loope
data16
pusha
inc
add
ret
mov
xor
ss
mov
mov
stos
test
xchg
and
adc
jbe
popa
jns
fdivr
mov
sub
inc
in
movs
and
jmp
imul
xchg
cmc
pop
sbb
fcmovne
cmps
movs
push
mov
in
repnz
rcl
fist
sub
sbb
stos
push
and
jecxz
jmp
outs
rcl
mov
xchg
jl
add
(bad)
pop
push
jecxz
xchg
push
push
cli
ja
pop
hlt
inc
sub
arpl
cmp
sub
mov
(bad)
scas
jbe
lods
xor
adc
and
stos
dec
dec
inc
and
cmc
or
cmp
push
sub
pop
(bad)
int3
in
sub
jg
push
or
icebp
es
mov
out
sub
xchg
mov
sti
mov
int
lea
jecxz
ret
jbe
les
clc
push
jb
rol
sbb
jns
pop
sbb
cmc
mov
jecxz
outs
dec
outs
ret
jp
push
inc
mov
out
sbb
inc
rcr
loop
cmp
mov
imul
mov
ins
mov
push
dec
outs
inc
cmp
xchg
test
mov
jns
in
jmp
push
jne
movs
and
dec
adc
out
sub
imul
aaa
out
lock
imul
jp
push
adc
mov
push
adc
xor
inc
xlat
fs
xlat
jp
dec
sub
dec
(bad)
hlt
mov
pop
clc
sbb
xor
pop
adc
mov
aaa
mov
call
add
mov
mov
push
or
push
enter
xor
jne
fdivr
rol
push
rcl
loop
pop
in
jb
and
and
dec
inc
or
push
jle
sub
fld
nop
scas
mov
in
out
sub
retf
jg
stos
js
mov
adc
fild
mov
daa
out
adc
cli
cld
call
jns
aaa
dec
les
and
call
mov
inc
(bad)
fcomi
dec
sar
fwait
bound
add
(bad)
stos
jb
lock
data16
push
xchg
aad
lods
aam
or
js
hlt
adc
sbb
jnp
jl
mov
pop
xor
test
bswap
sub
leave
adc
retf
pop
pushf
jmp
leave
cmp
inc
ficomp
ss
fstp
pop
mov
(bad)
jb
dec
sub
dec
jo
rcr
int3
push
test
xor
mov
cmc
data16
rcl
adc
fwait
add
xchg
cmp
les
dec
stc
test
cdq
jl
outs
add
out
pop
mov
cmps
test
arpl
mov
sahf
lock
dec
aam
aas
push
jo
add
into
and
jge
fild
lea
sbb
xlat
cmps
push
movs
or
cmp
inc
and
fst
sbb
bound
ret
sub
sub
jecxz
lahf
lods
clc
div
add
(bad)
loop
xchg
pop
std
imul
inc
fs
mov
mov
scas
mov
aad
mov
or
repz
jge
cmps
adc
jae
std
imul
popf
aas
jbe
adc
rcr
loopne
retf
sub
mov
outs
movs
push
mov
adc
sbb
sub
inc
mov
adc
stc
inc
mov
mov
mov
dec
xor
xchg
ja
add
pusha
retf
cmps
lods
retf
(bad)
js
inc
push
add
movs
adc
nop
pop
mov
mov
cmp
cmp
add
mov
or
cmp
fistp
push
jne
or
retf
cmps
push
dec
ficomp
sbb
hlt
and
ins
gs
xchg
inc
inc
mov
mov
push
imul
dec
scas
add
sti
shl
pop
sub
push
sub
push
jle
leave
sar
pop
push
and
sbb
dec
xchg
push
push
push
dec
nop
std
dec
adc
mov
dec
or
dec
inc
(bad)
or
jg
add
xor
cld
cs
es
ins
in
cmps
loop
cmp
bound
inc
jnp
sub
out
cmp
mov
sub
cwde
ror
push
mov
movs
sbb
aad
imul
pop
stos
pop
pop
push
inc
inc
lock
(bad)
sub
fadd
imul
imul
lock
dec
sti
sti
dec
add
push
lods
cdq
sbb
fdivr
data16
mov
(bad)
fwait
pop
sti
mov
sbb
jp
xlat
imul
movs
jmp
inc
pop
test
out
pop
sbb
dec
jne
addr16
cmp
mov
cmps
fiadd
div
(bad)
inc
add
mov
mov
sbb
aad
stc
mov
dec
xor
icebp
xor
jno
pop
lods
repnz
imul
lods
stos
xor
xchg
fisub
xchg
jo
and
nop
test
and
rcl
and
js
es
stc
rol
popa
mov
push
sbb
push
jp
rcr
pop
sbb
cmp
jne
inc
push
stos
ss
movs
sbb
inc
jnp
cmp
jmp
jo
inc
push
pop
and
and
adc
mov
mov
in
popa
outs
cmp
pusha
or
push
mov
cli
dec
ds
int
adc
pushf
xor
out
repz
ins
sub
and
cmp
repnz
jmp
sbb
retf
jl
mov
xor
arpl
add
movs
imul
das
cmp
xchg
push
xor
adc
pop
in
sahf
xor
loope
xor
dec
dec
js
inc
mov
cmp
aaa
lods
or
xchg
cmp
jp
ja
addr16
icebp
in
outs
cmp
cmp
loop
xchg
cmc
push
sub
pop
push
sbb
out
out
push
mov
shl
jge
fstp
icebp
sbb
push
sbb
sub
sbb
adc
and
mov
imul
xchg
sub
fcomp
out
test
test
aaa
adc
xchg
inc
add
cdq
ss
cmp
mov
or
pop
aad
mov
out
jg
pop
cwde
jmp
jb
cmps
mov
xchg
in
rcl
xchg
js
enter
js
push
ins
push
push
mov
repz
adc
push
xlat
sbb
enter
mov
out
and
xchg
dec
push
cmc
mov
mov
or
xor
sub
mov
dec
mov
icebp
mov
fistp
aad
mov
sbb
es
in
pop
cmp
dec
sar
adc
outs
push
push
cdq
push
cmc
pop
xor
push
adc
mul
cdq
mov
movs
sbb
jae
push
push
inc
xchg
out
xchg
lock
sub
dec
out
leave
call
push
popf
pop
call
inc
adc
(bad)
cwde
stos
xchg
inc
push
and
test
mov
add
icebp
out
sub
push
cmp
stos
add
xor
mov
xor
(bad)
xlat
sub
sub
add
mov
loope
sub
sub
popf
mov
aas
(bad)
jp
dec
je
mov
mov
and
lock
add
mov
lods
mov
rcl
xchg
jne
dec
pop
jbe
imul
aaa
shl
stos
mov
(bad)
jmp
and
je
mov
adc
sbb
imul
out
rcr
(bad)
mov
adc
test
mov
imul
mov
pop
das
mov
test
retf
fsubp
jbe
loope
leave
dec
(bad)
xor
pop
pop
xchg
int
inc
add
in
and
mov
dec
mov
test
pop
popa
and
xor
pop
aad
jl
aaa
pop
jnp
sar
adc
jae
(bad)
std
adc
mov
mov
xor
ins
clc
sub
es
push
leave
adc
xchg
sti
(bad)
sti
ret
shr
scas
shl
xchg
or
nop
and
jns
fist
mov
jge
jo
movs
(bad)
xor
jne
or
(bad)
je
test
jb
fwait
jg
hlt
movs
lds
or
sub
out
clc
shl
mov
popf
mov
in
(bad)
out
nop
jmp
mov
jle
jecxz
jnp
push
pop
jae
lods
ror
sub
jg
push
div
rol
jno
or
aaa
xor
jnp
xor
jae
mov
pop
inc
push
mov
pop
jmp
mov
or
sbb
xchg
std
add
cs
pop
lahf
sti
outs
mov
cwde
in
mov
jnp
add
xchg
xor
add
out
imul
mov
cmc
arpl
rol
leave
popa
jge
sar
mov
clc
adc
mov
jmp
repnz
loope
fwait
sub
mov
xor
jp
fist
pop
jg
or
mov
lea
xchg
imul
aad
inc
push
in
and
push
shl
add
stos
inc
(bad)
call
js
(bad)
imul
and
aaa
pop
arpl
xlat
retf
or
jnp
xor
jp
mov
adc
fidiv
fldenv
mov
cli
inc
mov
sub
inc
rcr
imul
cmp
cld
inc
pop
pop
in
mov
stc
or
xchg
adc
add
sub
push
dec
nop
das
call
mov
pop
cmps
loop
sbb
dec
cmps
daa
pushf
(bad)
test
stc
rcl
push
jne
dec
(bad)
retf
inc
sub
aad
mov
or
xor
fcmovu
cli
jmp
push
retf
push
mov
jae
sbb
jo
out
cmp
mov
push
retf
and
cmc
repz
jmp
mov
addr16
div
int3
sub
ret
jb
sub
cwde
xchg
std
pusha
sub
or
(bad)
adc
mov
xchg
sti
scas
sbb
dec
jg
fldcw
adc
pop
aam
scas
sar
mov
xchg
adc
not
call
sahf
movs
setg
xor
sub
pusha
xlat
in
jp
mov
mov
cdq
int
push
mov
xchg
sub
lds
into
cld
xchg
fadd
pop
imul
iret
mov
ja
mov
pop
(bad)
shl
xchg
pop
fidiv
xor
cmp
outs
cdq
out
xchg
js
xchg
inc
push
lods
out
popa
in
mov
scas
sub
pop
mov
enter
stc
inc
leave
dec
dec
sbb
and
mov
ja
pusha
mov
int3
je
or
cdq
call
fcmovb
lea
fistp
aaa
pop
call
mov
dec
gs
inc
and
imul
and
movs
and
sub
mov
mov
or
scas
(bad)
jnp
adc
xor
pop
(bad)
sub
mov
pop
ja
dec
sub
retf
dec
aas
repnz
aad
jg
test
adc
cmp
xchg
test
pop
test
sub
ins
mov
xchg
mov
pusha
lods
out
jbe
add
push
(bad)
gs
pop
popa
jmp
movs
push
and
out
test
jbe
ror
popa
ds
imul
mov
retf
and
les
mov
jg
xor
dec
lea
xor
mov
cwde
xchg
xor
cdq
call
je
lods
jae
cmp
dec
jns
adc
push
push
sub
es
or
jg
lahf
aam
or
pop
pop
jnp
push
mov
xor
xchg
cmps
dec
shr
addr16
dec
inc
or
jecxz
jmp
aaa
lds
(bad)
mov
daa
adc
ins
pop
popf
test
mov
mov
daa
inc
in
mov
aam
cmps
popa
adc
ins
data16
sbb
or
mov
sbb
adc
adc
jmp
mov
adc
rol
xchg
das
cs
es
mov
leave
lods
stos
mov
daa
adc
mov
ja
push
(bad)
gs
outs
mov
jmp
push
in
sub
stos
in
lock
pop
lods
aaa
add
hlt
push
mov
sub
pop
cmp
jecxz
mov
inc
xor
add
cmp
xchg
(bad)
adc
pop
fld
mov
test
ficom
sub
repz
test
lock
jmp
jo
icebp
mov
aas
pop
clc
cmps
or
xor
jge
int3
cdq
not
or
mov
push
test
jno
mov
loope
mov
push
dec
mov
popa
fidivr
sbb
mov
aam
dec
sub
es
inc
mov
jecxz
adc
jnp
xchg
and
lea
sbb
or
outs
cli
or
call
mov
(bad)
lods
or
mov
cwde
(bad)
sbb
mov
imul
inc
loopne
sbb
mov
ins
inc
icebp
daa
repnz
xor
(bad)
retf
dec
xchg
shl
sub
adc
in
mov
add
mov
repz
es
or
pop
add
icebp
stos
ds
xor
test
enter
aas
fwait
daa
ins
xchg
xchg
movs
scas
int
jnp
pop
dec
ss
adc
js
mov
pop
xor
dec
dec
push
mov
ins
fiadd
clc
sbb
dec
sahf
cmc
push
pop
sbb
mov
mov
arpl
movs
jle
fcom
adc
mov
push
jns
jge
push
movs
mov
push
mov
push
pop
dec
dec
mov
push
sbb
test
lods
sub
enter
pop
xor
xor
cmp
ret
sar
ret
xchg
add
mov
jecxz
push
movs
jl
enter
adc
(bad)
ror
lds
sti
stos
int3
jb
cmc
inc
pop
cmc
stos
mov
hlt
push
cmp
pop
mov
add
push
pop
retf
push
inc
rcl
adc
dec
dec
fild
es
int
inc
bound
push
sti
aam
and
jmp
out
mov
push
ds
jns
add
stc
pop
lea
stos
or
sub
cmp
stos
enter
enter
sbb
out
mov
loop
les
adc
mov
lods
jmp
and
adc
and
sbb
into
push
fistp
in
xor
xchg
test
test
clc
out
xor
jle
retf
(bad)
sbb
scas
sub
pusha
or
test
xor
inc
in
mov
add
(bad)
(bad)
sti
popf
jl
mov
cmps
sbb
and
fdivr
stos
sub
stos
sti
mov
neg
mov
leave
sar
lea
fcmovu
jnp
je
jno
mov
sub
inc
mov
addr16
pop
add
sbb
movs
addr16
jo
or
int3
shl
imul
inc
test
mov
pop
test
dec
push
icebp
pop
jbe
cmp
jb
xchg
jmp
push
inc
stos
sbb
addr16
lahf
mov
mov
push
adc
mov
mov
dec
rcl
loope
callw
dec
adc
test
jmp
neg
sub
push
inc
cmp
repnz
ficomp
add
push
push
pop
mov
es
mul
or
xchg
mov
js
xchg
mov
dec
xchg
ins
mov
sub
dec
push
call
dec
movs
stc
add
das
dec
mov
push
sub
mov
cli
retf
push
pusha
gs
iret
in
ficomp
jl
jae
dec
or
cwde
dec
mov
sub
(bad)
int
mov
aaa
fs
pop
xchg
adc
loope
stos
mov
pop
jne
push
mov
adc
frstor
shr
and
out
dec
fmul
shr
in
push
daa
bound
push
imul
gs
mov
leave
push
mov
jmpw
neg
inc
xchg
cld
dec
fwait
out
movq
jmp
xchg
dec
push
xor
clc
outs
mov
mov
movs
mov
sbb
push
cmps
mov
mov
adc
test
mov
adc
add
sar
push
or
xrelease
jb
jg
ficom
cmc
das
pop
or
stos
es
mov
bound
jp
adc
push
xor
fwait
cwde
adc
inc
sbb
mov
mov
pop
lods
push
aaa
inc
arpl
xor
adc
jl
xchg
xor
stos
in
fdivr
mov
mov
test
push
mov
mov
pop
sub
mov
fisttp
scas
stc
xor
push
retf
cmp
xchg
sbb
les
mov
iret
jge
jmp
sub
sbb
loopne
add
mov
fsub
jae
push
es
push
lods
xchg
lds
ins
pop
push
adc
inc
aas
repz
int3
or
jmp
add
rcl
jne
xchg
(bad)
scas
aam
aam
and
mul
jle
cwde
fcom
daa
or
cmp
repz
rcr
mov
dec
push
(bad)
sbb
mov
call
les
addr16
nop
call
movs
out
jle
sub
sbb
js
adc
pop
xchg
loope
mov
dec
into
retf
movs
mov
sub
and
or
daa
shl
sbb
dec
loope
pop
or
jb
jmp
out
mov
xor
ja
(bad)
mov
loop
js
and
mov
xchg
shl
cmp
bound
cmp
mov
arpl
call
xchg
or
dec
test
cmps
sub
cmp
scas
int
icebp
(bad)
out
mov
int3
add
nop
mov
jmp
out
(bad)
pop
xor
jecxz
inc
push
dec
cli
or
mov
fadd
sub
repz
push
movs
retf
xchg
aas
ret
jmp
adc
hlt
mov
lods
cmps
or
fwait
loopne
sub
out
daa
int3
jp
cmp
cs
lock
sbb
dec
sbb
les
jp
adc
pusha
dec
xchg
les
dec
outs
imul
mov
inc
xor
test
sub
mov
jnp
or
inc
jb
or
sub
dec
dec
loopne
clc
mov
mov
mov
push
xchg
ror
dec
cdq
jmp
cmp
div
ins
icebp
call
dec
lock
inc
ss
ds
add
mov
mov
sahf
inc
cmc
add
leave
xchg
and
adc
cmp
or
pushf
pop
sub
jne
dec
xchg
add
pop
jg
inc
jo
(bad)
mov
jge
add
pushf
pop
aad
es
adc
push
cmps
sub
(bad)
retf
mov
mov
imul
and
mov
mov
loop
out
xchg
imul
jecxz
mov
fwait
out
hlt
jp
cmp
aad
inc
pop
lahf
(bad)
push
sbb
pop
test
xchg
loop
outs
xlat
in
out
inc
jge
inc
adc
out
xor
jg
mov
movs
int
in
jp
scas
xor
leave
mov
movs
into
rcl
and
icebp
retf
dec
lock
std
cs
js
pop
scas
imul
daa
mov
xchg
hlt
mov
jns
pop
out
and
cmc
test
outs
pop
pushf
mov
jae
xchg
inc
sub
idiv
xchg
add
in
lahf
mov
and
movs
test
ss
add
movs
fiadd
loope
test
pop
adc
retf
add
call
fcmovu
mov
adc
jmp
sbb
xor
mov
push
or
das
push
in
or
inc
adc
(bad)
fnstsw
mov
loop
pusha
fstp
xor
jmp
pop
loopne
daa
(bad)
arpl
and
push
mov
mov
sbb
xchg
loop
in
push
in
stos
in
fst
mov
jge
pop
dec
xchg
lods
dec
add
cmp
es
or
mov
rol
outs
hlt
push
jb
pusha
cmp
ret
or
cmp
add
dec
push
add
and
lock
cmp
mov
shl
push
pop
sbb
mov
dec
arpl
cmp
pop
cmp
outs
sbb
xchg
pop
inc
out
push
or
xor
or
clc
repz
sbb
(bad)
outs
int
add
jmp
adc
in
lahf
(bad)
cmp
push
push
xchg
dec
cmps
jge
push
xor
callw
push
ret
xchg
cmc
retf
mov
mov
jge
sub
jmp
pop
ins
mov
scas
sbb
add
push
dec
stc
push
data16
or
retf
inc
fwait
pop
pop
retf
mov
jne
iret
jecxz
and
inc
repz
cmp
pop
loope
push
mov
xchg
inc
test
push
and
xlat
aaa
mov
and
adc
add
scas
push
xor
(bad)
int3
inc
sub
lahf
cmps
add
add
add
mov
mov
push
jmp
xor
push
pop
stc
sub
es
adc
dec
mov
(bad)
loop
sahf
jb
xchg
dec
inc
adc
push
or
push
retf
jl
cld
fst
(bad)
shr
loope
inc
adc
dec
sti
(bad)
test
sbb
call
iret
(bad)
fmul
push
cmp
adc
push
jmp
pop
dec
les
add
mov
or
(bad)
add
mov
es
xlat
adc
aad
xor
xchg
cwde
or
out
sbb
imul
imul
push
imul
into
test
sub
ret
mov
into
rol
dec
mov
jecxz
in
loopne
mov
mov
inc
dec
int
mov
xor
xor
rcl
fnsave
std
push
iret
sbb
stos
jbe
sbb
call
mov
jecxz
lods
out
ret
out
in
sahf
mov
repz
mov
es
sbb
out
sbb
stos
adc
lods
xor
jecxz
mov
out
inc
push
or
cwde
pop
lds
add
xchg
push
ja
les
add
pop
leave
mov
or
cdq
adc
jmp
das
(bad)
stos
enter
cdq
test
push
(bad)
push
add
pop
mov
cdq
je
icebp
sub
sub
and
pop
out
shr
imul
xor
iret
mov
test
and
xor
stos
test
cwde
leave
es
lea
pop
loopne
adc
mov
pushf
jle
jnp
int3
sar
arpl
xor
ss
fs
pop
pop
pop
stos
cmc
adc
das
rol
das
dec
in
call
cmps
ins
int
ret
mov
cmc
inc
js
jb
sub
jbe
xor
xchg
sub
out
cmc
xchg
mov
cmp
push
jno
pusha
(bad)
lods
add
jbe
fmul
xchg
sbb
mov
in
and
pop
mov
push
inc
mov
jle
jge
aas
popf
cld
mov
(bad)
adc
add
jmp
mov
out
cdq
sub
call
cwde
pop
pop
(bad)
test
cmp
jmp
push
sbb
and
sahf
pop
stc
xchg
xor
test
scas
in
js
pop
mov
nop
sub
in
test
mov
xchg
xchg
adc
jecxz
rcl
clc
lahf
adc
push
ds
call
sbb
out
out
dec
js
test
je
cmp
or
push
test
imul
pusha
in
xchg
adc
sub
cmps
and
int3
sbb
sbb
sbb
jp
(bad)
(bad)
xor
pushf
mov
and
jle
sahf
stc
mov
adc
cmp
push
push
or
ret
fisub
push
push
xor
lahf
ins
fnstcw
outs
push
add
dec
mov
push
out
dec
dec
xchg
repz
sbb
pop
aaa
or
mov
retf
dec
bound
call
in
xchg
rol
sbb
mov
xor
ins
mov
out
bound
out
or
sub
ret
pushf
sti
daa
lock
add
push
or
mov
inc
pop
scas
nop
mov
fldcw
xchg
mov
sub
(bad)
lahf
mov
mov
add
gs
shl
add
add
inc
ret
fistp
out
jno
xor
inc
fisttp
movs
mov
mov
mov
sbb
ror
inc
mov
bnd
loope
ds
idiv
gs
pop
xchg
xchg
imul
mov
jl
int3
frstor
cmps
in
and
xlat
(bad)
mov
in
xchg
fcomp
enter
fcom
pop
xchg
cmp
xchg
loope
mov
push
inc
mov
sbb
loop
pop
mov
mov
jmp
mov
fiadd
xor
(bad)
pop
repnz
fcomp
movs
pop
add
scas
and
dec
std
imul
sbb
push
rol
in
mov
test
lods
push
mov
xlat
dec
cli
sbb
inc
mov
outs
mov
jle
xchg
dec
stos
jmp
lods
fldenv
(bad)
aas
xchg
cwde
inc
cmp
xor
pop
push
stc
adc
jb
(bad)
aaa
repnz
ja
pop
mov
sbb
sbb
sbb
push
int3
jp
sub
js
shr
fmul
cmps
mov
nop
push
fadd
mov
xor
mov
cmp
mov
sbb
mov
xor
mov
outs
sbb
push
aas
imul
mov
shr
mov
xlat
pop
(bad)
sahf
xchg
adc
rcl
xor
nop
cmp
test
test
stos
push
add
or
pop
xor
daa
add
sbb
and
ret
jp
(bad)
iret
or
mov
scas
sbb
sbb
sbb
shl
arpl
lock
test
dec
mov
or
gs
popa
jmp
jg
rcr
push
push
popa
call
adc
clc
ds
(bad)
cdq
je
pop
xchg
aad
cmp
in
lahf
lods
push
into
and
cli
sub
add
adc
cmp
pop
in
push
add
push
push
and
push
jne
popa
lock
stc
in
add
sub
fimul
rol
sub
xor
jp
fwait
leave
lds
jge
ins
lahf
mov
ins
and
and
out
mov
int3
and
mov
imul
shl
fwait
xchg
hlt
aam
cmp
ss
rcl
mov
push
dec
mov
ins
fwait
cdq
push
inc
scas
jge
xchg
jo
pusha
jg
sub
jp
pop
in
outs
mov
imul
test
adc
pop
or
push
push
or
push
sub
add
cmps
xor
lods
les
test
movs
std
adc
test
inc
call
cli
pop
add
adc
jl
jmp
xchg
sub
loop
sbb
retf
dec
or
cmc
pop
mov
in
pushf
adc
repz
cli
xchg
dec
imul
nop
sti
push
cmc
cmp
inc
les
ins
sti
mov
xchg
addr16
jae
xchg
jnp
cld
cmps
xor
test
fstp
ja
stos
sti
push
imul
pop
and
js
dec
mov
adc
int3
call
mov
pop
inc
ss
scas
mov
out
or
and
int
adc
adc
(bad)
enter
xlat
clc
stos
jae
pop
fsubr
mov
loopne
pop
movs
xor
aam
sbb
ret
inc
pop
xor
fwait
jecxz
daa
mov
cwde
lods
ror
jecxz
push
mov
add
xchg
lock
pop
jl
xchg
mov
xor
push
jnp
daa
(bad)
add
cmp
out
mov
dec
pop
mov
mov
jmp
daa
cdq
movs
mov
jae
sub
je
mov
fiadd
lahf
add
test
loopne
add
ffreep
arpl
(bad)
or
add
sar
div
inc
rcl
jbe
lock
movs
es
(bad)
sub
sahf
std
adc
adc
in
cmc
lea
sub
mov
rcr
mov
xor
test
xchg
or
ds
das
inc
jb
inc
mov
mov
ja
xor
(bad)
loopne
ds
cmp
or
imul
jg
sar
cli
push
jle
xor
add
adc
cli
inc
adc
add
xchg
jnp
adc
adc
imul
out
cld
mov
pop
lea
xchg
inc
jp
ss
dec
jnp
fiadd
test
jnp
cmps
inc
sub
add
adc
neg
or
adc
test
repz
fwait
jno
or
rcl
add
fsubr
(bad)
pop
lods
retf
and
mov
nop
popf
stos
and
push
stos
cmp
lds
or
pop
lock
or
dec
rcl
push
nop
sub
push
sub
ja
mov
jb
fwait
or
lea
pop
dec
jecxz
xlat
sub
add
lds
and
jmp
mov
pop
xchg
mov
aaa
pusha
stos
sub
call
push
std
mov
into
mov
imul
push
test
pop
dec
daa
mov
sbb
imul
enter
pop
pop
jmp
outs
push
adc
or
lds
sbb
or
sub
cmp
or
mov
and
jecxz
pusha
fst
test
cmp
retf
dec
retf
stc
push
and
push
jb
cmp
lods
push
loop
xchg
xchg
sub
add
sar
daa
cs
jmp
push
cmp
mov
popa
pop
shl
repnz
jmp
jmp
jg
ret
sub
fdivr
(bad)
jecxz
push
push
(bad)
dec
push
popa
ja
push
dec
add
rcl
fisub
jb
xor
test
xchg
xchg
out
inc
inc
repnz
shl
icebp
scas
leave
push
push
push
mov
push
fwait
jb
pusha
fsub
ffreep
adc
inc
add
or
fidiv
mov
stos
xchg
sahf
xchg
lds
out
jno
lahf
xchg
and
out
jg
sahf
xchg
pop
daa
or
jg
test
jmp
mov
iret
xor
aad
arpl
pop
addr16
fisub
xlat
pop
jp
push
pavgb
in
xchg
scas
fbld
inc
ja
add
push
sar
pop
adc
aad
sahf
inc
ret
into
mov
jbe
sub
push
pop
imul
lahf
enter
paddusw
or
cdq
movs
xchg
mov
pop
aaa
xor
jb
retf
fisub
int
push
add
pop
sub
pop
lods
jle
push
ret
aad
mov
or
dec
pushf
jmp
cmc
push
and
cdq
fild
cdq
call
jno
imul
add
mov
daa
ds
jnp
xchg
inc
jb
and
sahf
je
out
in
fisttp
daa
cmp
imul
repnz
pop
pop
in
jbe
xor
mov
mov
cmp
push
lahf
(bad)
ins
loopne
sbb
in
mov
(bad)
stc
movs
cmp
xor
jg
scas
ds
call
lods
or
ins
jg
xor
mov
dec
and
ins
and
test
add
es
jp
sub
cmp
pop
clc
dec
ror
inc
sub
jbe
movs
jp
add
ins
imul
push
xor
cmp
imul
jbe
fs
shl
retf
(bad)
mov
push
jp
xor
adc
sbb
stos
mov
add
and
xor
ret
retf
add
jno
inc
addr16
imul
push
nop
(bad)
mov
adc
or
popf
lock
mov
cwde
clc
(bad)
and
cmp
test
dec
mov
test
add
retf
xor
jle
loop
mov
lods
jle
push
test
mul
popa
ss
adc
popf
cmp
scas
add
adc
jno
jae
test
jb
(bad)
xlat
and
into
pop
pop
scas
xchg
bound
fsubp
mov
mov
sbb
or
js
ja
sub
int
add
and
(bad)
outs
jnp
push
test
in
mov
test
or
jo
xchg
sar
jo
lds
add
and
(bad)
es
add
sbb
adc
jle
int3
add
pop
(bad)
lds
cmps
ins
mov
dec
ins
pop
in
fiadd
or
cmp
push
and
dec
and
jne
rol
pop
xor
adc
jo
jmp
add
arpl
xor
stos
pushf
int3
mov
xchg
repnz
xor
adc
jge
ret
push
mov
jg
call
pop
mov
mov
inc
fcomp
mov
test
nop
fidivr
das
pop
addr16
(bad)
fistp
add
retf
loope
mov
and
bound
shr
sub
cmp
mov
and
or
jp
aam
(bad)
jmp
scas
(bad)
or
sbb
jge
lods
test
in
sbb
add
ror
repz
sub
push
das
lock
loop
xor
lods
mov
push
stos
sbb
add
push
in
xchg
mov
test
les
xchg
scas
sbb
std
mov
arpl
stos
jbe
sub
rol
into
jecxz
sub
pop
(bad)
cmp
pop
mov
in
fcomp
cwde
fidivr
setb
mov
das
cmp
pop
cwde
(bad)
pop
fstp
add
ds
inc
cli
les
aaa
add
pop
cmp
cmp
jmp
ret
imul
dec
pop
leave
xor
or
fst
outs
retf
xchg
stos
or
jo
std
mov
shr
pop
mov
ins
mov
(bad)
sbb
cmps
sti
les
test
jo
mov
pop
cld
or
(bad)
mov
adc
add
popf
jns
jno
fstp
xchg
and
or
or
fisubr
ss
mov
(bad)
push
xlat
pop
sar
mov
or
xor
scas
dec
inc
push
ds
retf
cld
jge
mov
lock
daa
jmp
pushf
cmps
in
rcl
dec
call
dec
retf
std
mov
repz
out
leave
cmp
outs
mov
adc
fcomi
or
xchg
movs
inc
aas
in
fwait
rol
mov
push
inc
bound
test
cld
aaa
fwait
adc
in
add
pop
cwde
add
push
adc
aaa
jne
rcr
jae
cwde
push
inc
(bad)
or
pushf
add
fist
sahf
pop
test
test
cs
lahf
test
cs
mov
js
lock
mov
int3
in
ror
pmullw
call
sub
js
call
ins
in
or
ficom
sub
jo
pop
mov
fmul
or
mov
dec
xchg
cmp
inc
cmp
mov
and
int
xor
jg
mov
cs
les
cs
mov
xchg
xchg
mov
fucomip
cdq
outs
or
repnz
retf
jge
nop
ins
inc
pop
pop
cmps
or
lods
into
clc
jb
dec
dec
sub
or
cmp
xchg
sahf
pusha
mov
xchg
mov
retf
fwait
stos
arpl
dec
int3
xchg
adc
fdiv
mov
lods
(bad)
test
loop
clc
lea
xor
add
sbb
mov
test
cli
xchg
inc
adc
sub
mov
dec
(bad)
adc
idiv
xchg
and
scas
cld
dec
outs
pop
movs
shr
xchg
inc
test
mov
mov
add
xchg
lea
xchg
bound
gs
out
mov
adc
inc
or
mov
adc
xor
sahf
mov
lods
jp
pushf
mov
and
xchg
das
in
adc
mov
in
ficom
cmp
push
mov
cmp
inc
sub
sub
sub
test
pushf
(bad)
pusha
je
nop
mov
xchg
arpl
or
stc
es
leave
fimul
jae
ds
dec
jb
hlt
or
jl
dec
and
lahf
adc
and
inc
lds
pop
mov
mul
stos
mov
or
push
push
outs
mov
cld
out
and
and
ret
mov
hlt
jbe
xchg
fisub
mov
enter
xor
push
mov
pop
popa
add
enter
clc
mov
mov
nop
fdiv
in
arpl
mov
jo
fwait
adc
push
dec
sbb
mov
(bad)
jp
test
xchg
imul
out
sbb
scas
cmc
and
out
and
cld
aas
sub
lahf
ja
je
cld
rcr
pop
es
sub
push
cmp
jp
sbb
outs
push
inc
rcr
movs
scas
test
aaa
jo
adc
mov
into
mov
sbb
sub
es
and
enter
push
sbb
and
xor
pop
or
inc
and
test
nop
sahf
sub
test
sub
jle
dec
call
add
cs
pop
adc
mov
not
push
sub
and
push
jo
dec
stc
mov
sar
les
pop
mov
xchg
or
adc
add
jo
leave
and
mov
retf
or
movs
je
sbb
retf
sbb
int3
loopne
fnstenv
push
cmps
cmp
fistp
test
test
pop
xchg
sahf
test
mov
mov
fistp
adc
dec
mov
jb
mul
jae
add
popf
fbstp
cs
int3
add
js
inc
lods
test
push
outs
pop
test
call
cs
ins
(bad)
les
sti
fsubrp
test
mov
push
cdq
leave
jb
xchg
mov
retf
jge
push
fidivr
sbb
gs
inc
mov
mov
mov
pop
mov
pop
jne
adc
jg
xchg
jmp
aaa
mov
or
popf
pusha
pop
mov
retf
pop
mov
fs
stos
mov
mov
mov
loopne
xlat
ror
mov
inc
sub
jmp
ins
into
in
(bad)
(bad)
lock
and
and
jae
cmp
push
cmps
bound
outs
je
xor
(bad)
les
sub
(bad)
fsubp
es
jmp
jp
sbb
jecxz
pop
sub
and
fld
xchg
xor
inc
add
sub
adc
aam
enter
cwde
sbb
jo
jecxz
(bad)
das
jmp
cs
xor
mov
scas
push
cli
outs
sub
inc
inc
fadd
mov
(bad)
rcr
cli
push
pop
rcl
xlat
or
in
js
mov
adc
pop
mov
rcl
ins
in
mov
push
xchg
outs
hlt
adc
ret
lds
inc
sub
fdivr
adc
aaa
not
lds
jns
pop
lock
pop
push
and
push
sub
pop
sbb
dec
aad
xchg
outs
(bad)
out
adc
or
movs
sbb
ret
popa
push
pop
ins
xor
dec
or
(bad)
dec
aas
outs
cmc
xchg
push
cmp
sar
fwait
pusha
in
mov
aas
pop
and
xor
scas
es
in
mov
fwait
popa
jbe
adc
mov
ins
pop
inc
adc
and
xchg
out
inc
adc
dec
mov
xor
dec
fcom
loopne
iret
leave
fdiv
fs
popf
inc
inc
mov
fisubr
scas
aam
in
or
ja
aas
jmp
mov
mov
jmp
jle
test
ss
scas
mov
jb
rcr
pop
sti
dec
idiv
lods
inc
aaa
mov
mov
scas
add
in
cmps
push
jmp
repnz
xchg
aad
sbb
(bad)
sar
retf
sbb
xchg
std
sub
ss
or
nop
pop
aam
fwait
jmp
xlat
ja
dec
pop
and
aas
loopne
cmp
xchg
(bad)
sbb
cmc
pusha
nop
daa
cmp
test
mov
push
in
jge
inc
cmp
loop
sahf
(bad)
inc
jmp
leave
mov
mov
aad
repz
int
jae
mov
ret
mov
ffreep
xchg
jmp
sbb
stos
fild
add
fwait
push
add
mov
retf
(bad)
or
mov
rcr
scas
addr16
adc
adc
add
sub
push
stc
push
push
ds
xchg
imul
jmp
and
cmc
test
mov
lock
stos
cli
test
cmp
je
xor
mov
clc
retf
repz
or
push
jp
push
call
pusha
out
xor
push
push
add
out
xchg
aad
outs
mov
xor
sub
call
cmp
pop
test
retf
jecxz
adc
pop
scas
cmp
and
and
push
and
ret
xchg
push
fldcw
retf
xchg
sahf
into
clc
jne
test
jmp
push
cs
test
dec
fcomi
dec
jg
jle
jg
nop
loopne
retf
shl
or
push
loope
pop
fcmovnu
iret
shr
fild
ins
call
xor
(bad)
xchg
aam
iret
ds
and
sbb
loope
push
xor
(bad)
sbb
mov
popf
lods
xor
pop
(bad)
popf
stos
shr
ins
out
pop
inc
inc
xor
pop
xor
add
fwait
shr
repz
in
sub
jmp
jmp
adc
cmp
dec
sbb
loope
mov
xor
mov
push
xchg
fwait
outs
es
mov
adc
imul
dec
repz
cmc
mov
(bad)
push
cmp
jnp
mov
lahf
pusha
mov
mov
jae
inc
clc
(bad)
shl
hlt
dec
(bad)
and
xor
loop
loope
xchg
xchg
gs
fwait
mov
(bad)
fcom
out
jecxz
les
pop
xchg
xor
mov
retf
mov
pushf
push
int
inc
jmp
pusha
lea
ret
iret
sbb
test
cdq
je
dec
in
dec
jmp
hlt
xor
jb
and
push
mov
pop
add
ja
inc
ins
or
fdiv
retf
pop
cmps
dec
sub
mov
ret
pop
sub
jo
jg
add
ds
or
in
je
jmp
and
pop
ret
inc
mov
add
in
inc
aaa
add
std
xchg
jp
loope
xchg
aaa
mov
frstor
xchg
ret
fcom
addr16
pop
sbb
scas
cmps
mov
add
pop
dec
stos
es
jbe
out
cmp
cmp
ss
pop
dec
mov
jae
xor
mov
lock
leave
int
xor
cmp
mov
xchg
dec
adc
leave
loopne
imul
jp
jno
and
in
div
fmul
lods
mov
out
dec
inc
jecxz
fidivr
scas
and
ficomp
cdq
lods
(bad)
fwait
aam
and
(bad)
fnstcw
rcl
in
cmp
fmul
dec
pop
fs
jno
or
ror
cmps
mov
pop
mov
inc
in
sub
xchg
inc
push
mov
bound
or
clc
mov
in
nop
xor
mov
xor
ins
adc
inc
out
push
popf
xchg
movs
mov
pop
ins
ret
sbb
dec
or
mov
hlt
sbb
into
out
xor
adc
mov
fs
scas
mov
xchg
pushf
or
jp
sbb
pop
fs
pop
mov
mov
enter
hlt
bound
cli
jne
repnz
cmps
jl
sbb
jl
les
jmp
emms
jne
dec
and
int
mov
pop
(bad)
pop
and
push
fldcw
xchg
ja
sub
push
push
lods
in
(bad)
ds
data16
sub
pop
outs
sbb
jne
mov
push
cmps
push
jl
xor
mov
lahf
push
mov
push
in
les
int
and
mov
rol
sub
push
xor
mov
xlat
stos
push
sbb
mov
iret
bswap
hlt
xchg
jmp
loope
inc
sub
pusha
stos
leave
xchg
inc
jge
adc
cli
fsub
inc
sub
mov
pop
mov
mov
cdq
pushf
push
out
stos
daa
rcr
pop
xchg
add
push
in
pop
cmp
lods
aas
sub
sub
sub
idiv
add
mov
fsubr
xchg
mov
es
(bad)
test
test
cmp
xor
dec
mov
pop
xchg
mov
fsub
mov
mov
stos
(bad)
gs
faddp
out
add
fnstsw
sub
mov
push
shl
mov
fcomp
sub
popf
jno
(bad)
pop
inc
adc
lahf
inc
jno
push
mov
loope
jecxz
icebp
out
outs
fwait
jl
fs
add
xor
cmp
mov
imul
mov
mov
xor
jmp
xchg
push
stos
or
push
sbb
inc
pop
adc
hlt
fisub
xchg
mov
dec
xchg
sbb
jne
in
mov
xchg
xchg
cmp
dec
fdiv
xchg
das
jl
outs
add
int
mov
push
sbb
push
stos
jne
adc
cmc
fdivr
or
arpl
xor
xor
aam
arpl
daa
mov
out
fisub
std
sti
pop
fstp
cmp
pop
push
aad
inc
mov
pushf
xlat
mov
cld
addr16
mov
sub
ja
icebp
sub
stc
psubq
sbb
loope
xor
icebp
dec
mov
test
push
movs
(bad)
jge
cmp
push
dec
scas
(bad)
fsubrp
xchg
xchg
xor
out
pusha
jne
sbb
les
ret
mov
adc
push
dec
scas
call
addr16
sbb
cmp
or
ds
scas
jne
test
jp
xor
test
loopne
or
sub
mov
scas
ret
out
cdq
adc
mov
push
out
jg
push
lds
icebp
dec
xchg
and
fwait
(bad)
fucomip
cmp
add
loopne
xor
test
ins
jg
cdq
fst
jb
xor
pop
inc
mov
gs
stos
push
jl
inc
jns
in
jle
xchg
loopne
fwait
pop
(bad)
xchg
and
mov
xchg
loope
mov
into
rcl
jge
(bad)
cmps
jmp
repz
sbb
jp
xor
mov
fidivr
dec
mov
or
arpl
clc
lods
gs
sbb
mov
in
cwde
das
fwait
pop
inc
xchg
xchg
xchg
std
std
pop
add
call
test
cmc
stos
inc
jge
in
sbb
add
jmp
dec
and
sub
pop
movs
(bad)
std
adc
(bad)
(bad)
enter
scas
push
dec
ficom
cmps
and
sbb
xchg
fcomp
or
fwait
or
jg
movs
cmps
stos
mov
test
adc
inc
sbb
ins
and
popa
xchg
ret
jne
add
(bad)
mov
inc
inc
cld
dec
test
cdq
inc
(bad)
not
in
pop
js
or
xchg
push
(bad)
aas
mov
cli
inc
sub
pushf
sub
gs
pop
cli
pop
in
adc
ins
adc
out
push
push
scas
pop
push
je
repz
push
in
mov
jl
dec
dec
call
(bad)
pop
jmp
enter
xchg
mov
xor
aaa
inc
outs
lea
fnstcw
and
pop
cmp
mov
sbb
rol
lods
addr16
retf
jbe
out
rcl
into
test
and
dec
pop
dec
mov
jmp
dec
xchg
dec
xchg
jns
push
test
lock
adc
mov
mov
and
out
adc
and
jne
repnz
scas
ins
dec
fisttp
add
(bad)
clc
sub
cmp
inc
mov
push
mov
shr
cmp
mov
jo
jae
scas
ss
sbb
mov
xchg
int3
mov
arpl
cmp
jnp
inc
gs
shr
sbb
jno
test
jg
or
sti
mov
pop
mov
(bad)
mov
shl
mov
cmp
jb
aaa
retf
and
or
mov
das
mov
fisubr
mov
dec
jb
(bad)
je
mov
xchg
outs
mov
leave
push
inc
cdq
(bad)
test
push
adc
jno
adc
adc
sub
add
jae
xchg
popa
cs
mov
cmp
pop
ja
jp
dec
sbb
jge
aaa
push
mov
pop
inc
jecxz
jno
lds
cld
jp
add
mov
sub
xor
mov
cmp
and
push
and
and
out
dec
call
ror
inc
shl
pop
ins
cli
out
xlat
icebp
call
hlt
add
push
ja
call
pop
mov
loop
add
inc
(bad)
ss
mov
test
cmp
inc
neg
pop
push
and
int3
fsub
adc
shl
dec
shr
xor
xchg
and
das
or
xor
out
loop
push
call
or
icebp
addr16
outs
push
retf
mov
jmp
add
mov
pop
or
inc
es
cmp
rcl
sub
fs
push
sbb
(bad)
lahf
xlat
jmp
int
mov
lods
push
stos
mov
addr16
push
inc
pop
xchg
jae
retf
pushf
inc
push
cmc
or
sti
pop
iret
cwde
fsubr
out
or
js
add
test
xchg
(bad)
das
movs
ins
in
hlt
pop
cmc
mov
xor
dec
popa
fbstp
mov
and
cmp
dec
adc
cwde
cmps
(bad)
mov
repnz
fs
rol
inc
and
mov
(bad)
sbb
push
xlat
movs
(bad)
cmp
mov
jl
aam
pushf
into
scas
ret
(bad)
aas
xchg
fucompp
test
daa
(bad)
xchg
or
fidiv
icebp
mov
(bad)
stc
(bad)
or
arpl
fcom
sar
cmp
cwde
std
fwait
vprotw
clc
aad
es
cmps
xor
inc
inc
jmp
imul
sub
fcomp
dec
repz
and
fld
push
mov
pusha
adc
aaa
rol
pop
aas
neg
aaa
popf
add
inc
lods
xchg
push
cmc
add
dec
push
and
ja
stc
and
add
enter
push
shl
pop
mov
pop
pop
(bad)
inc
jb
mov
dec
cwde
xor
sub
push
call
hlt
repnz
lds
adc
enter
ins
div
mov
test
hlt
mov
pop
stc
das
push
push
fisttp
mov
ins
jae
(bad)
push
sbb
ins
stc
fstp
xchg
out
add
add
in
enter
nop
rcr
aad
fdivr
test
std
gs
and
mov
and
loop
xor
xchg
aas
and
mov
mov
ret
or
sub
call
and
adc
icebp
daa
stos
inc
adc
repz
jne
inc
les
stos
imul
jnp
movs
or
test
sbb
jle
sub
scas
cmps
or
addr16
mov
inc
push
std
pop
sar
push
sub
ins
mov
stos
stos
test
mov
push
lahf
cdq
das
js
sbb
mov
mov
xchg
fs
pop
push
retf
call
adc
push
loope
sbb
fwait
cwde
sbb
mov
pop
cmp
loope
out
ret
aaa
cdq
sbb
ret
and
jecxz
xor
cmp
or
push
or
pop
add
and
neg
cmps
push
jmp
mov
cmp
mov
inc
mov
stos
nop
jbe
test
test
xchg
dec
in
sub
leave
sbb
inc
add
fwait
aas
jae
xchg
lock
xor
stc
std
adc
xchg
cwde
inc
jo
mov
daa
pop
xchg
sbb
sbb
test
int
jg
iret
int3
push
jne
fistp
sub
or
scas
retf
cmp
pop
out
jg
dec
int
mov
imul
xchg
jle
mov
mov
call
pop
pop
mov
add
xchg
jo
(bad)
iret
test
adc
sub
dec
push
xchg
xor
callw
xor
inc
sub
out
mov
jmp
scas
sbb
xchg
mov
lea
xor
push
pop
cmp
data16
xor
fbstp
daa
js
addr16
inc
stc
xor
lods
adc
in
adc
sub
pop
cwde
xchg
jle
mov
cmps
lahf
dec
mov
ror
arpl
xchg
nop
inc
mov
ret
shl
mov
movs
sub
cli
retf
jmp
fbld
add
push
es
call
sub
shl
adc
fisttp
mov
dec
das
mov
pop
sar
mov
aam
sbb
inc
xlat
bound
xchg
les
xor
mov
ds
ds
mov
loope
push
and
(bad)
and
push
sbb
mov
pusha
mov
aad
push
pop
(bad)
out
iret
jecxz
or
push
(bad)
movs
or
iret
sar
les
cdq
aaa
retf
inc
movs
mov
jne
inc
mov
enter
(bad)
inc
imul
movs
loope
ror
aam
pop
sub
cld
and
ins
inc
repz
outs
add
sub
sar
push
jecxz
add
retf
ret
test
mov
inc
cmp
or
jmp
xchg
fmul
pop
push
pop
inc
pop
jle
sbb
or
ret
pop
in
data16
jb
or
iret
popa
lahf
xor
mov
sub
(bad)
lods
mov
lock
inc
push
xor
hlt
imul
inc
and
push
pop
push
call
repnz
inc
sub
(bad)
lock
jp
and
clc
cs
fs
pushf
xchg
dec
vphaddwd
pop
pop
ret
dec
add
cdq
retf
lahf
retf
ret
jle
cmp
dec
push
mov
adc
sub
lods
(bad)
cmps
loop
jge
fisttp
mov
imul
jmp
mov
adc
leave
lods
in
inc
sbb
in
push
inc
aam
cmp
push
ret
call
inc
enter
stos
fsubr
in
(bad)
in
jecxz
or
sbb
xor
cld
xchg
je
dec
sbb
pop
ss
std
sar
sbb
sbb
aas
mov
dec
dec
aas
pop
es
(bad)
jle
sub
lods
push
imul
push
dec
dec
clc
pop
cli
cld
push
xor
cmp
(bad)
inc
pop
xchg
xor
lock
xchg
call
adc
lahf
rol
add
das
cwde
and
xor
sub
mov
out
sbb
pop
pushf
sbb
xchg
and
in
rcr
pushf
out
pop
lahf
mov
dec
mov
add
mov
xor
or
fmul
sbb
in
data16
inc
pop
mov
jg
jno
jecxz
(bad)
add
pop
xchg
loop
add
shr
xchg
ficomp
sahf
pop
lea
push
jle
in
sub
add
or
sbb
shr
gs
dec
icebp
push
in
hlt
sub
jl
mov
and
jmp
xchg
ret
xchg
pop
js
cmp
mov
das
push
xor
jnp
push
push
xchg
ffreep
mov
or
cmp
out
mov
inc
xor
push
out
cmp
std
adc
das
popf
inc
test
mov
retf
stc
outs
fdivr
pushf
inc
aam
ins
retf
js
loopne
daa
jno
fs
mov
jae
jp
out
sub
cmps
mov
sub
pop
(bad)
movs
fild
fdivr
dec
mov
jns
dec
int3
aad
es
in
push
popa
int
(bad)
xchg
lods
(bad)
cld
and
and
mov
or
aad
sbb
or
call
retf
xchg
popf
fstp
rcr
hlt
inc
(bad)
icebp
sahf
jle
dec
pusha
or
loopne
inc
jmp
icebp
xor
jnp
inc
adc
add
dec
shl
jge
imul
push
jp
fstp
ret
pop
pop
jo
pop
ret
sub
lock
jnp
adc
xor
cmps
das
dec
movs
or
adc
outs
or
cmp
in
adc
fcomi
add
jle
push
fwait
lods
dec
imul
jmp
push
push
fbld
jbe
pop
xor
jmp
gs
inc
lea
xor
pop
sub
fsubr
pop
pop
mov
inc
in
out
cs
mov
dec
(bad)
push
push
pop
sub
adc
or
loope
inc
add
mov
retf
xchg
cmp
pop
retf
dec
push
jmp
imul
xchg
and
daa
aaa
not
xor
test
pusha
in
mov
scas
push
movs
out
cmp
jns
push
scas
sbb
cmp
pop
je
inc
push
iret
into
jae
jmp
mul
fisubr
xchg
ins
xchg
cmps
retf
es
pop
out
dec
pop
pop
cmp
or
repnz
sbb
inc
(bad)
not
enter
sbb
jmp
les
adc
pushf
sub
inc
int
mov
sub
mov
pop
fimul
int
mov
pop
adc
mov
ss
xor
test
mov
addr16
inc
mov
dec
ror
push
dec
das
push
xchg
push
cmps
inc
xchg
ret
leave
xchg
retf
and
sti
dec
(bad)
push
dec
ror
sub
xchg
lds
mov
cmp
xchg
inc
popf
mov
retf
jne
js
or
es
arpl
mov
nop
xchg
nop
(bad)
gs
ret
mov
mov
sahf
add
xchg
aas
and
sbb
jmp
mov
jnp
mov
cmc
inc
mov
and
cmp
test
mov
test
lods
cld
sub
jnp
xor
in
cmp
pop
retf
repnz
jp
sub
in
mov
shl
jl
fidivr
pop
loope
add
cwde
sub
xchg
inc
out
jp
mov
inc
sub
js
je
xor
lods
ret
int3
outs
scas
inc
daa
fst
rcl
mov
mov
mov
or
cmp
ss
rol
and
test
and
movs
xor
push
lock
push
nop
push
inc
xor
xchg
dec
adc
xchg
pop
xchg
fs
retf
jmp
call
jne
mov
out
cwde
stc
xchg
popf
data16
sub
inc
(bad)
jl
or
jb
retf
stos
push
push
loope
dec
dec
std
scas
mov
cmp
dec
out
test
repz
jb
gs
aam
and
push
sub
add
imul
and
icebp
adc
stos
test
call
push
xor
adc
pop
xor
mov
jmp
jns
cdq
enter
ror
fwait
daa
jo
xchg
xor
popa
stos
mov
mov
inc
retf
xor
dec
outs
push
jp
dec
dec
sbb
mov
lea
pop
arpl
inc
mul
(bad)
cmc
lock
jae
out
scas
cli
mov
out
stc
cmp
add
push
adc
in
(bad)
push
inc
or
cmps
stos
jg
iret
movs
dec
jno
dec
sti
shl
cmp
iret
loopne
iret
push
loop
push
adc
xchg
test
mov
dec
add
repnz
cmc
ror
dec
push
mov
or
retf
adc
(bad)
adc
lds
inc
lods
movs
loop
dec
lods
loopne
cmp
jmp
in
xchg
stos
mov
into
imul
sub
icebp
sbb
xchg
xchg
add
outs
push
inc
push
aas
pusha
mov
mov
xor
std
test
cmps
sub
ins
xchg
sahf
sub
cmp
mov
xchg
mov
js
pop
add
jno
lods
push
retf
ror
out
fsubrp
(bad)
jo
inc
xor
repnz
(bad)
hlt
xchg
cmp
cmp
enter
lahf
dec
push
mov
sbb
push
pop
sahf
fcomp
aas
cs
mov
lods
mov
fwait
mov
aaa
push
jo
mov
push
lods
sub
test
fistp
dec
pop
dec
xchg
sbb
cmps
cmps
jp
mov
shr
and
or
pop
xchg
mov
fimul
push
jmp
mov
int3
in
movs
and
ds
and
fwait
das
mov
fdiv
mov
mov
xor
mov
and
sbb
imul
neg
fidivr
mov
sar
shl
(bad)
fidiv
and
stc
pop
mov
xchg
clc
aas
lea
pop
fbstp
jmp
fadd
or
jb
pop
sbb
fs
xchg
stos
sbb
dec
out
adc
push
ins
call
ror
sub
pop
or
stos
pusha
jne
and
imul
cmp
hlt
xlat
cmps
jno
lds
push
or
fs
jb
jb
inc
pop
imul
aaa
(bad)
xor
mov
sbb
or
mov
(bad)
scas
push
mov
xchg
dec
pop
mov
sbb
inc
hlt
lahf
push
in
mov
leave
inc
ins
dec
push
jecxz
gs
cmp
adc
frstor
sti
cmc
ins
mov
push
mov
xchg
push
jae
inc
out
out
loop
mov
leave
pop
add
or
popf
mov
cs
mov
in
xor
dec
cdq
arpl
rcl
retf
sbb
adc
(bad)
mov
fidiv
mov
and
in
pop
das
xchg
aas
addr16
xor
mov
add
mov
pop
mov
lods
inc
cwde
jecxz
mov
(bad)
cmp
mov
xchg
jge
dec
cwde
and
adc
sbb
xor
sbb
and
hlt
jmp
lods
stc
inc
out
and
xor
add
mov
mov
pop
xor
inc
je
stos
lea
in
push
mov
lahf
jle
xchg
sub
jl
mov
xchg
xchg
inc
jl
mov
mov
in
test
pop
out
sbb
mov
jle
hlt
stc
inc
mov
xchg
mov
sbb
sti
inc
test
jb
push
or
mov
xor
cdq
clc
pop
mov
cmc
sub
out
ds
xchg
adc
push
or
sahf
in
xchg
test
inc
int
dec
inc
add
cdq
push
imul
into
add
jmp
test
mov
or
inc
mov
mov
mov
add
or
inc
or
addr16
add
or
adc
ins
stos
into
pop
inc
loope
mov
fcomip
cdq
das
nop
je
push
dec
inc
and
js
loope
inc
loop
jg
xchg
iret
cld
adc
(bad)
mov
and
retf
lea
(bad)
or
imul
lods
mov
lahf
(bad)
inc
imul
push
ret
je
push
pop
data16
or
clc
dec
mov
jmp
fwait
mov
push
fwait
sub
and
mov
xrelease
cmp
outs
add
in
xchg
jg
cmp
in
int
into
jnp
sbb
mov
dec
mov
popa
xchg
dec
mov
ds
sbb
test
and
in
adc
mov
xor
push
xchg
call
pop
push
je
add
dec
push
sub
ja
(bad)
retf
jno
lahf
add
mov
push
mov
and
data16
add
sub
and
addr16
dec
adc
jg
xlat
imul
(bad)
xchg
push
lods
inc
out
ds
pop
sbb
inc
stc
and
mov
dec
cmp
xchg
lods
jmp
sub
and
je
pop
mov
dec
clc
fs
xor
cwde
xor
fwait
dec
or
sub
pusha
mov
add
mov
ins
xor
or
pushw
sub
es
xchg
daa
sub
cmp
cld
dec
movs
mov
pop
enter
inc
and
les
leave
xor
inc
ja
and
or
out
mov
push
fwait
or
fisubr
fsubr
pop
mov
sub
dec
out
pop
(bad)
sbb
xchg
test
loope
mov
call
jmp
test
(bad)
out
adc
cmp
fdiv
into
fwait
push
aaa
mov
mov
sbb
lea
call
or
pop
std
mov
mov
ds
push
xor
outs
sti
or
mov
test
fimul
mov
xchg
xchg
out
leave
jns
(bad)
mov
pop
jb
push
mov
rcl
jmp
call
dec
test
(bad)
and
jbe
test
or
es
call
xchg
cmp
add
retf
out
xor
leave
out
lock
inc
or
sbb
add
bound
cld
or
push
push
add
sbb
out
pop
ficom
push
or
pushf
fild
push
das
dec
xchg
mov
add
je
test
lgs
and
shl
aas
std
mov
add
and
jo
js
popf
mov
les
cmp
and
in
cmc
dec
pop
cld
test
add
xchg
push
(bad)
mov
imul
add
and
in
jns
jp
es
mov
cmp
or
xchg
repnz
pop
aam
cwde
loope
mov
sahf
jae
cdq
mov
out
into
sahf
and
idiv
addr16
(bad)
cmp
loope
pop
outs
jbe
test
ror
mov
xchg
sub
scas
xor
mov
pushf
enter
pop
shr
or
jge
lock
sub
loopne
add
test
mov
fbld
lds
pop
unpcklps
sti
inc
addr16
or
pop
dec
movs
scas
dec
(bad)
pop
out
sahf
mov
fisubr
and
jo
jnp
cmp
scas
(bad)
shl
call
cdq
stc
idiv
jb
mov
mov
sbb
nop
in
xchg
movs
das
ds
outs
sbb
outs
xchg
(bad)
mov
out
xor
mov
div
mov
fldlg2
in
out
xor
add
and
sbb
test
xchg
and
test
xchg
sbb
mov
fcomp
(bad)
cmp
xchg
loop
and
retf
ret
adc
lods
mov
cwde
scas
mov
daa
lods
dec
arpl
sbb
pop
sub
dec
sbb
mov
leave
cld
ins
xchg
ja
mov
mov
jbe
push
(bad)
add
bound
jae
adc
scas
jno
outs
cmp
adc
jb
mov
out
lahf
inc
or
and
pop
pop
pop
jns
xor
inc
ficomp
push
cmps
and
pop
xchg
cmp
sub
icebp
ins
push
jge
clc
les
cmp
(bad)
pop
movs
movs
mov
xlat
fild
dec
int
in
jae
push
imul
aam
mov
dec
and
add
mov
lea
addr16
push
xchg
cmps
sub
iret
jo
fdiv
mov
call
xor
data16
ins
dec
mov
sub
shl
sbb
adc
xchg
lods
dec
data16
add
dec
mov
mov
fs
jecxz
sub
dec
mov
sub
fidivr
pop
mov
dec
outs
xchg
xchg
stos
and
push
or
pop
mov
pop
retf
add
push
movs
pusha
rol
fiadd
pop
inc
cmps
bound
in
mov
in
into
je
movs
rcr
jno
jb
int3
cmps
adc
lahf
and
pop
(bad)
outs
inc
mov
pop
cmps
pop
andps
arpl
pop
xchg
out
fadd
aad
xchg
fwait
dec
xchg
sub
aaa
sti
jns
pop
or
and
pop
add
xchg
outs
pop
jge
sub
adc
mov
clc
(bad)
dec
cmp
rol
inc
sub
fxch
inc
ja
retf
mov
nop
das
ins
iret
adc
and
mov
stos
pop
or
sbb
call
(bad)
movs
or
add
and
mov
scas
shl
ret
sti
cmp
lock
push
stc
adc
cli
std
push
mov
(bad)
std
out
movs
inc
fwait
sbb
inc
nop
dec
in
(bad)
fdivr
call
push
mov
adc
(bad)
jmp
adc
fmulp
fsubr
jne
adc
jno
enter
mov
fwait
mov
mov
rcr
gs
adc
pop
jbe
mov
push
imul
sbb
ds
mov
and
ret
jb
mov
loope
ror
imul
cmps
test
aam
xchg
mov
push
icebp
fstp
or
lods
adc
add
adc
jle
cmp
arpl
popa
push
mov
popf
sbb
stos
test
and
les
mov
retf
mov
iret
sti
cmp
xchg
or
clc
sbb
add
xchg
mov
icebp
jbe
int3
adc
pop
jb
xchg
mov
dec
fdiv
outs
lods
loope
movs
and
cmps
dec
mov
std
test
adc
retf
xchg
cdq
fwait
xchg
and
mov
dec
dec
outs
adc
xchg
jmp
movs
not
leave
pop
scas
nop
(bad)
(bad)
lds
xor
retf
cmp
adc
movs
add
and
xor
adc
pop
sbb
jmp
mov
sbb
sti
xor
dec
rcl
cmps
ror
mov
out
aad
dec
scas
inc
repnz
lods
mov
out
dec
add
fisttp
popa
pusha
push
stos
call
cdq
fnstcw
inc
sar
sbb
mov
jmp
and
sbb
mov
enter
ror
jbe
push
frstor
add
fucomi
inc
fnstenv
push
pop
adc
push
sbb
lods
lds
repz
mov
bound
popf
loopne
pop
xchg
dec
mov
cmc
gs
push
mov
inc
idiv
ja
cmp
ret
xchg
cmc
ins
xlat
imul
add
pop
xor
(bad)
and
or
icebp
xchg
jg
adc
pop
add
fist
xlat
mov
popf
out
xchg
adc
cmps
fistp
loop
loopne
call
add
repz
dec
aam
pop
cmp
xor
mov
pop
in
dec
cmp
fdiv
es
int3
push
scas
ficom
adc
stc
sub
out
cmp
ss
cmps
int3
popa
loopne
or
popf
and
xor
push
mov
aad
leave
xlat
sbb
sub
mov
aad
cmp
movs
int3
push
and
dec
repz
adc
shl
inc
push
lahf
test
push
adc
shl
jo
sbb
rcl
mov
xchg
outs
dec
(bad)
jl
dec
in
or
xchg
dec
xlat
push
adc
or
sbb
cmp
adc
adc
scas
test
sbb
hlt
(bad)
mov
jle
mov
(bad)
cmp
push
das
addr16
pop
adc
sbb
cmps
sub
xor
mov
imul
test
and
adc
pop
push
shrd
jmp
cmp
mov
adc
fnstsw
(bad)
ror
jp
adc
jnp
fist
xchg
js
(bad)
loop
and
inc
fdivp
push
push
push
lock
in
pop
push
jp
clc
jle
push
xchg
lds
rcr
jg
dec
fcmovu
loop
jae
jp
sbb
push
adc
rcl
mov
xor
jns
or
shl
xchg
add
movs
jns
xor
(bad)
mov
test
icebp
sub
dec
mov
sub
neg
pop
dec
clc
ds
add
mov
add
scas
cmp
xlat
call
jmp
adc
inc
adc
in
adc
retf
int
fwait
loopne
hlt
pop
and
addr16
lock
xchg
mov
mov
mov
(bad)
nop
pop
int3
loope
test
fnstsw
scas
and
inc
jmp
xchg
js
js
(bad)
iret
push
sub
dec
sysret
push
mov
push
movs
(bad)
int3
das
push
mov
jb
iret
xor
pop
cli
imul
nop
aas
lea
popa
add
imul
(bad)
js
ins
jp
push
fwait
scas
adc
pop
sbb
rcl
sti
xor
sbb
loope
cli
loope
aam
mov
int
stos
inc
dec
or
push
test
add
mov
push
mov
mov
and
fstp
rcr
test
sar
sub
into
push
sub
sar
add
sbb
mov
dec
jae
pop
in
push
mov
ror
mov
sub
mov
xor
cmp
or
jnp
jbe
push
xor
push
sub
jb
dec
mov
jns
push
or
aad
push
sbb
mov
iret
xchg
popf
popa
lods
mov
ja
ins
das
xor
int
mov
ror
test
hlt
(bad)
loopne
or
fld
popf
sub
mov
pop
pop
mov
mov
jb
and
pop
dec
jnp
adc
sti
pop
mov
and
movs
xchg
cmp
(bad)
xchg
cli
into
test
jnp
loopne
xchg
pop
sbb
loope
sbb
test
inc
fsubr
into
inc
das
xor
mov
das
pop
mov
mov
scas
nop
lahf
stos
and
sbb
pop
lods
cmp
jg
ja
nop
or
retf
adc
fdiv
into
xchg
cs
push
inc
xchg
sbb
mov
jns
out
nop
pop
sub
jecxz
out
icebp
cld
xor
cdq
fcmovne
inc
int
stc
sbb
gs
fsub
cmp
xchg
jp
scas
bound
les
xor
test
ins
inc
jne
cmc
mov
outs
jne
hlt
movs
jl
jmp
mov
fwait
jmp
pop
mov
xchg
pop
outs
xor
ror
cmp
sbb
imul
rol
pop
fsubr
xor
lods
test
iret
xchg
cld
in
mov
in
or
mov
sar
jns
sub
xchg
dec
test
arpl
clc
test
add
cmp
push
arpl
mov
cmc
sbb
dec
sub
jns
xchg
addr16
and
lahf
fstp
es
shl
jmp
push
cli
sti
and
cmp
arpl
addr16
lods
sub
mov
scas
clc
xchg
inc
hlt
imul
dec
(bad)
xor
fsub
cmps
loop
xchg
xchg
mov
lea
in
push
fild
mov
rcl
add
add
inc
push
iret
icebp
jbe
and
lock
push
mov
in
aad
add
or
sub
mov
daa
(bad)
or
sub
jbe
dec
test
or
inc
in
pop
loopne
adc
enter
adc
mov
and
stc
ss
out
jno
test
daa
mov
pop
jno
cmp
in
rep
shr
or
cmovge
mov
fidivr
loopne
jbe
gs
outs
or
xchg
rcr
dec
mov
sbb
fstp
xchg
and
ins
btc
stos
movs
mov
aaa
inc
adc
jmp
adc
daa
into
cmp
imul
pop
test
or
jbe
push
sbb
dec
test
xchg
(bad)
gs
call
sub
mov
popa
adc
ret
test
in
xor
shl
mov
lods
jno
sbb
inc
cmps
push
cld
xchg
mov
jo
and
hlt
hlt
imul
dec
mov
mov
adc
xchg
jmp
cmp
cmp
mov
push
xor
add
shl
aam
add
xchg
xlat
je
(bad)
sub
jo
fs
dec
dec
dec
leave
xor
or
inc
inc
ret
mov
jo
inc
cmps
ficomp
and
sti
add
fcomp
adc
mov
ret
ins
in
push
jl
leave
aaa
jg
shr
jns
sahf
or
xor
add
ss
es
sub
mov
jg
(bad)
mov
or
cmp
aas
sbb
cmc
mov
mov
movs
aad
aad
or
(bad)
loop
lahf
jb
fiadd
leave
pop
adc
push
sbb
add
fimul
adc
jl
lods
inc
jbe
adc
idiv
inc
fucomp
std
dec
es
jl
sbb
test
int3
lahf
std
std
jecxz
shl
loope
les
jge
adc
sbb
call
je
aam
enter
cmps
push
or
pop
loope
or
clc
loop
pushf
cmp
fs
scas
adc
cmp
jecxz
or
test
inc
pop
dec
call
stos
fsub
ret
outs
sbb
dec
xlat
out
dec
(bad)
cmc
outs
or
dec
add
imul
jge
dec
adc
aas
dec
cmp
cmps
aam
mov
xchg
gs
push
aad
mov
and
sub
pop
xchg
pop
jno
dec
xor
popf
sbb
dec
xor
jp
jge
es
movs
jae
xlat
push
sub
call
jae
jp
lea
push
mov
fcom
sbb
and
jg
ficom
mov
pop
dec
test
add
push
test
(bad)
sub
mov
xchg
mov
aad
jl
xor
and
adc
cmp
jmp
(bad)
fisubr
push
adc
pushf
inc
mov
aaa
aam
xor
test
std
mov
repnz
std
xor
cmp
sar
in
ins
push
sub
inc
sbb
mov
push
aad
int3
push
lock
mov
or
ficom
es
lods
push
ret
fldenv
xchg
es
jae
outs
push
or
aam
ror
ds
inc
xchg
or
in
xor
call
and
out
jge
std
clc
pop
je
ret
adc
adc
mov
push
xchg
push
lock
dec
sub
sub
xchg
sbb
inc
les
ret
les
ror
ja
ret
push
(bad)
fwait
sbb
ja
(bad)
xor
sahf
push
jge
dec
aaa
sbb
aas
hlt
mov
add
(bad)
loop
push
movs
(bad)
jmp
jmp
lock
cld
in
sub
mov
cs
pop
mov
xor
les
jg
and
jbe
jmp
ds
test
popa
jl
mov
inc
(bad)
adc
dec
mov
jbe
mov
out
sbb
adc
ficom
push
rcl
mov
xor
sbb
scas
faddp
xor
cwde
mov
cs
ins
lods
in
mov
(bad)
in
pop
mov
inc
retf
aaa
push
mov
xor
out
mov
loope
shr
les
das
es
imul
or
mov
hlt
jle
pop
stos
jmp
sbb
mov
or
fnstcw
adc
or
jmp
adc
pop
pop
xchg
fmul
cmc
rcl
mov
sbb
call
je
mov
sub
or
or
js
sbb
xchg
mov
mov
ret
stc
push
xor
and
xchg
mov
in
mov
cwde
pushf
paddw
hlt
jmp
sub
and
or
push
mov
cmp
fisubr
in
sub
mov
jg
and
test
mov
(bad)
cmp
retf
retf
cmp
adc
ss
repnz
(bad)
fisubr
mov
pushf
jb
or
sub
cmps
call
pushf
movs
inc
cdq
(bad)
dec
mov
add
xchg
add
push
imul
inc
inc
pop
pusha
mov
cmps
out
nop
stos
and
mov
pop
jo
(bad)
jmp
lods
or
xor
dec
js
inc
inc
and
add
mov
cmp
mov
cmp
(bad)
nop
mov
out
es
push
adc
pop
mov
scas
ins
xor
push
cdq
lods
lock
or
push
std
ss
xor
test
retf
dec
inc
dec
cli
jge
imul
ret
add
and
sbb
mov
inc
jns
xor
or
mov
rol
pusha
push
mov
push
sub
add
mov
push
xchg
jl
scas
jo
test
leave
mov
repz
xchg
outs
xor
test
inc
faddp
inc
in
jnp
mov
je
gs
mov
ror
test
jecxz
xchg
loopne
add
xor
(bad)
jns
jge
mov
daa
cmp
sti
cwde
mov
sbb
int
xchg
dec
xchg
pop
mov
sbb
mov
dec
jo
sbb
fnsave
rcr
fst
and
ret
pop
sub
test
ins
into
js
jmp
dec
sub
lds
xchg
loopne
sar
fnstenv
pusha
ins
push
or
pop
stos
xchg
inc
ds
push
xchg
aaa
and
or
sub
movs
mov
mov
std
aad
inc
fs
lods
neg
xor
mov
fld
add
or
sub
inc
sub
mov
loope
xchg
push
sahf
pop
in
xor
out
sbb
mov
aaa
mov
inc
and
ret
test
rcl
pop
adc
sub
jge
push
add
and
sahf
mov
mov
leave
scas
mov
xor
loop
retf
dec
cmp
dec
hlt
jp
xor
sbb
out
add
ss
in
mov
sub
and
jg
fidivr
jbe
push
movs
mov
ret
shl
fadd
(bad)
fisub
xchg
test
dec
or
or
adc
mov
ss
jno
dec
inc
daa
in
nop
add
inc
mov
jle
loopne
jmp
mov
es
push
mov
test
sub
cmps
pushf
imul
add
iret
ins
dec
pop
mov
inc
leave
fcomp
xchg
pop
movs
mov
mov
fiadd
int
leave
ret
int
call
pop
in
and
je
(bad)
sbb
repnz
and
mov
fist
mov
adc
or
mov
inc
outs
cmps
push
xchg
and
mov
imul
js
(bad)
cmp
fcomp
sub
int
ins
inc
in
pop
ficom
xchg
ja
and
test
or
push
add
das
es
imul
add
aas
jno
xor
push
das
loope
cmp
cld
int
mov
push
inc
mov
push
js
or
mov
retf
sbb
stos
(bad)
jp
outs
aad
mov
(bad)
(bad)
jno
push
aaa
int3
and
pusha
iret
mov
mov
ja
outs
sbb
test
xor
sbb
sbb
xor
push
xchg
dec
test
pop
sahf
push
pop
in
js
xchg
daa
mov
adc
rol
das
popa
jnp
mov
enter
rol
scas
mov
sti
jmp
dec
shl
xlat
imul
fisubr
inc
ds
div
jb
jbe
jne
push
xor
add
es
movs
aas
aad
outs
pushf
ret
into
sub
pop
cwde
popa
hlt
jmp
into
int3
in
and
cmp
pop
push
xchg
push
(bad)
cmp
(bad)
xlat
pop
push
xor
sti
sub
in
jge
cwde
data16
aas
mov
jp
int
adc
or
iret
in
sbb
and
sub
das
lods
push
jmp
cmp
dec
loope
xor
inc
iret
out
in
bound
rcr
adc
lock
das
cmp
sbb
jp
jne
int3
pop
int
test
adc
jmp
fwait
mov
cmp
mov
int3
dec
lods
cmovbe
push
ins
dec
inc
(bad)
ror
xchg
mov
arpl
pushf
mov
test
repz
dec
int
xor
cli
in
sbb
movs
dec
pop
and
lock
ds
add
sbb
out
adc
mov
lea
dec
repnz
arpl
mov
jmp
enter
cmp
cmp
call
add
add
mov
(bad)
mov
xchg
pop
cmp
pop
push
inc
push
fbld
pusha
aaa
add
cwde
sub
jl
mov
push
neg
sti
enter
sbb
leave
mov
out
clc
not
nop
sbb
pusha
jae
icebp
adc
jae
lods
fsubr
push
vhsubps
mov
pop
mov
inc
enter
inc
dec
mov
add
jp
push
jg
sbb
nop
fcomp
adc
cmc
or
mov
scas
xchg
aaa
jge
adc
adc
sti
adc
je
lods
hlt
cwde
adc
mov
mov
xchg
mov
push
pushf
pop
rcl
mov
ss
(bad)
aam
cmp
repz
xor
push
cmps
ror
fidiv
dec
stos
push
xchg
std
add
xor
sar
xchg
lahf
jno
pop
push
pop
jmp
cmps
pushf
sahf
adc
cmp
(bad)
fmulp
sbb
das
mov
jecxz
pop
cmp
pop
jno
pop
(bad)
imul
push
jle
or
out
xchg
mov
jp
fadd
clc
xor
nop
mov
imul
mov
sub
aam
or
fild
jp
daa
xchg
jb
sbb
int3
dec
jmp
icebp
out
repz
loopne
sti
stos
fsub
inc
sub
inc
xchg
add
les
jbe
mov
lock
js
aaa
outs
daa
mov
fiadd
call
out
repz
movs
aam
rcl
dec
xchg
cld
add
stc
icebp
xor
xchg
dec
sti
mov
mov
mov
dec
ja
sub
shl
data16
push
push
pop
xor
psubq
aas
or
test
jecxz
jnp
cli
retf
int
or
add
loop
sub
mov
fucom
lds
ret
into
mov
test
pop
add
(bad)
sbb
inc
enter
jmp
sti
push
ins
add
dec
jge
xor
pop
xor
pop
cld
je
ja
dec
inc
hlt
or
outs
lock
sbb
lahf
cli
out
mov
addr16
dec
dec
xor
ins
popa
loopne
xchg
je
mov
inc
and
or
inc
adc
pop
cmp
sbb
jge
sbb
dec
(bad)
lahf
jns
cmps
popf
inc
push
into
xchg
(bad)
in
jne
ds
inc
cs
fs
test
jb
test
iret
dec
jbe
xchg
in
test
or
push
jmp
stos
fldcw
xor
fmulp
push
pop
in
cmp
out
jmp
xchg
shr
pop
into
push
iret
mov
mov
cdq
aad
sbb
hlt
cmps
jl
push
jl
adc
lock
mov
inc
xor
call
inc
lods
das
push
in
jbe
and
cli
aaa
stc
cmp
jg
mov
xchg
mov
sub
ins
int3
sahf
scas
and
ficomp
sbb
adc
imul
xor
or
jmp
shl
cmp
mov
mov
push
mov
hlt
xor
movs
std
or
stc
leave
rol
mov
mov
mov
fisub
adc
pusha
push
(bad)
enter
adc
xchg
sti
hlt
das
push
hlt
out
xor
ja
outs
test
sub
push
daa
and
mov
mov
es
loop
or
and
xchg
and
jle
ins
cli
xchg
mov
cmp
imul
shl
test
(bad)
push
adc
xchg
push
sub
cmps
scas
mov
dec
push
and
xchg
outs
jmp
mov
pop
movs
xor
jo
aas
bound
les
or
fld
pop
sub
cs
mov
xchg
mov
test
cmp
mov
mov
call
jg
push
push
fdivr
jae
sar
or
pop
rcr
inc
push
sbb
fs
pop
mov
push
je
mov
add
fwait
(bad)
hlt
jno
mov
xor
cmp
xor
mov
aam
fld
xchg
movs
inc
lds
rcr
jns
xchg
je
imul
(bad)
in
movs
je
push
cmp
loope
sbb
xchg
pop
adc
adc
pop
arpl
into
inc
ja
xchg
pop
cmp
mov
mov
cmc
(bad)
mov
inc
mov
and
cmps
sub
test
hlt
dec
mov
rcl
repnz
mov
fsubrp
add
aaa
in
gs
je
jb
push
xor
mov
xchg
or
loopne
or
rcr
into
clc
jg
inc
inc
jns
ret
xchg
jbe
dec
out
into
mov
fst
out
push
dec
fild
dec
popa
ficomp
or
or
inc
adc
sub
jl
push
icebp
cmp
xchg
fadd
jmp
jns
arpl
icebp
das
push
ret
push
fbstp
xchg
mov
add
(bad)
and
jmp
xor
dec
inc
add
and
xchg
jl
aad
nop
pop
lds
movs
xchg
cmps
pop
jmp
sbb
lea
call
in
into
stos
sub
int
lea
nop
mov
inc
js
gs
cmps
outs
loop
jnp
push
sbb
sub
jl
fsubrp
sbb
cmp
aam
test
in
mov
sahf
xchg
adc
pop
call
mov
inc
pop
sbb
sub
mov
cld
mov
xchg
outs
cmp
mov
mov
popf
add
fisubr
stos
imul
clc
push
or
ret
ss
cmp
aas
(bad)
or
aas
ins
loope
sbb
cld
stos
jmp
loope
sbb
iret
nop
dec
cmp
imul
clc
test
adc
inc
add
cmp
jb
mov
test
push
pop
gs
adc
ds
call
pop
(bad)
outs
mov
pop
cli
jae
mov
fst
mov
fadd
popf
les
ins
cmp
fmul
mov
xor
aaa
into
mov
cmp
hlt
cmps
jl
sub
jne
push
push
jno
push
scas
inc
mov
(bad)
xlat
stc
aas
cmc
sub
addr16
sub
push
lock
ret
aaa
rsqrtps
inc
lahf
xchg
dec
loop
push
jmp
neg
cmp
xchg
add
add
jmp
fbstp
retf
xchg
jo
mov
push
push
sub
xchg
sbb
cdq
mov
imul
leave
push
jae
scas
add
repz
(bad)
clc
sub
aad
xor
inc
adc
xchg
or
push
fs
jno
and
rcr
mov
popa
aam
sbb
sub
xchg
clc
or
shl
rol
push
mov
mov
push
or
out
or
call
outs
push
mov
xor
je
jmp
pop
jge
mov
adc
psubq
dec
popf
xchg
mul
xchg
and
jmp
jmp
ja
mov
ins
cld
dec
icebp
ret
xchg
ja
cmps
retf
and
(bad)
or
arpl
cmp
dec
scas
rcl
nop
repnz
xchg
mov
inc
or
inc
and
les
fs
into
and
push
xchg
ror
or
retf
(bad)
popa
jmp
push
push
inc
nop
imul
(bad)
fisttp
mov
xchg
pop
mov
jl
xor
pushf
push
fisttp
ds
(bad)
mov
adc
adc
inc
loopne
(bad)
stos
pop
jae
ins
fist
sbb
inc
pop
sahf
scas
cmp
push
hlt
push
or
mov
movs
mov
cmps
or
in
enter
stc
cdq
or
shl
fdiv
int3
push
retf
fldenv
xor
in
jnp
ret
int3
mov
push
dec
add
mulps
mov
in
xchg
fild
cmp
imul
push
leave
not
jmp
jge
adc
jnp
iret
retf
mov
fiadd
lfs
int
pop
pop
mov
daa
mov
adc
push
pop
jo
imul
fs
rcr
push
outs
in
test
cmp
mov
push
inc
add
xor
(bad)
fsubr
inc
dec
inc
sbb
add
xchg
ds
ins
inc
mov
(bad)
call
dec
xchg
xlat
inc
xchg
xor
retf
movs
cmp
leave
sbb
sbb
sbb
repz
lods
fs
test
push
icebp
aaa
ret
in
nop
dec
xor
inc
imul
dec
adc
dec
imul
or
jg
mov
adc
push
cmc
mov
sbb
sbb
cwde
add
xchg
push
stos
sbb
sbb
push
add
jge
jmp
mov
and
sar
out
gs
aad
outs
cmp
mov
dec
or
fs
sub
shl
retf
and
push
out
call
push
mov
popa
arpl
push
pop
ret
test
cwde
inc
jp
pop
and
sbb
mov
add
cmp
fild
add
adc
hlt
jb
jle
and
xchg
cwde
retf
arpl
inc
call
adc
adc
pop
scas
jge
mov
out
sbb
mov
cmc
xchg
push
repnz
(bad)
daa
test
cmp
jmp
cmp
addr16
loope
sahf
add
and
add
fwait
xchg
mov
and
cli
iret
xor
jecxz
dec
shr
cmp
push
pushf
inc
add
ficomp
ret
neg
dec
jg
outs
mov
pop
sbb
mov
inc
pop
mov
dec
mov
mov
in
or
and
cs
lods
add
or
sbb
iret
adc
or
dec
xchg
clc
or
(bad)
or
cdq
and
xlat
shl
in
sub
or
mov
lods
in
or
call
and
aam
sbb
shl
inc
jmp
and
hlt
test
aad
jl
lea
scas
repnz
sbb
add
cmp
mov
jecxz
aam
mov
test
retf
xchg
inc
icebp
mov
sub
fnstenv
push
lock
retf
dec
jns
(bad)
xchg
aad
ror
mov
dec
mov
ret
push
frstor
daa
inc
bound
loop
mov
or
retf
inc
adc
inc
push
cdq
iret
xchg
pop
add
in
push
or
sbb
test
mov
movs
xchg
cdq
inc
gs
stos
sub
ins
and
or
cmps
and
adc
or
jnp
adc
push
mov
push
fmul
sti
stos
lods
gs
movs
icebp
jae
call
mov
sbb
push
loop
cld
in
out
sub
jle
fnstcw
or
imul
sub
pop
scas
stos
ins
mov
or
xlat
out
cmp
mov
test
mov
dec
pop
jp
sub
es
loopne
jmp
retf
push
push
push
or
sbb
cld
sbb
adc
xchg
in
pop
out
adc
lods
out
jmp
test
call
out
push
ror
dec
pushf
and
cmps
fwait
shl
or
pop
mov
xchg
std
or
popa
push
repz
aad
push
aas
fidivr
ins
lock
cld
test
inc
pop
add
adc
dec
pop
sub
lds
adc
pop
and
adc
push
shl
hlt
pop
nop
lods
xchg
mov
inc
xor
xor
cmp
mov
inc
fs
adc
mov
or
and
in
mov
dec
mov
pop
icebp
or
jmp
fwait
pop
sti
jl
in
shr
inc
fwait
pusha
leave
xchg
pop
mov
mov
das
ficomp
adc
stc
cli
das
enter
sar
or
js
not
fist
cmp
push
and
inc
xor
daa
or
jge
or
mov
dec
pop
add
jge
jge
inc
outs
sub
fsub
ja
leave
icebp
push
jmp
inc
inc
jecxz
sub
test
pushf
shr
adc
sbb
dec
inc
addr16
fisttp
bound
mov
fnstsw
movs
js
push
sub
out
xor
mov
cmp
pop
dec
shr
add
sub
cmp
in
cmps
sahf
repz
cmp
mov
shl
call
add
pop
(bad)
mov
adc
gs
rol
into
fisub
pop
cs
adc
loope
ficom
sub
js
int3
and
xchg
iret
cmp
popf
gs
das
xchg
data16
xor
movs
xor
pop
xlat
not
loopne
add
mov
mov
pop
inc
out
daa
dec
aaa
xchg
jmp
addr16
jmp
adc
fmul
pop
sub
mov
pushf
xor
js
push
dec
fcom
push
xlat
cmp
ret
pop
sub
and
xor
jbe
xchg
arpl
mov
in
aad
push
(bad)
pop
inc
xor
pop
push
hlt
and
xchg
clc
inc
shl
mov
imul
hlt
push
cmp
and
test
mov
push
mov
shl
shr
jg
jne
push
mov
dec
sbb
dec
mov
je
add
jns
sub
or
pop
mov
dec
pop
mov
mov
mov
pop
mov
retf
test
fadd
add
pop
(bad)
fidivr
rcl
dec
sub
lahf
or
loopne
jo
dec
dec
jge
test
jecxz
outs
out
inc
xchg
loope
adc
jae
cmp
mov
sbb
out
fdivrp
xor
es
pop
adc
xor
movs
sbb
(bad)
xchg
pop
xlat
scas
in
add
lods
sub
xchg
cmp
test
fstp
std
enter
je
inc
adc
pop
nop
out
in
nop
repnz
jne
jno
je
lea
ins
cmp
sub
fisub
jmp
addr16
jp
cmps
cmp
ja
xchg
stos
lea
aad
add
(bad)
(bad)
sbb
adc
push
pop
call
sub
movs
div
jne
mov
ins
lods
cmp
shl
test
aam
cdq
neg
mov
fldcw
outs
in
cmp
imul
jmp
mov
(bad)
hlt
rcl
push
xor
dec
xchg
push
les
add
dec
ret
shl
sub
jmp
retf
scas
aam
sub
fild
add
or
mov
xchg
lock
mov
adc
mov
add
jb
mov
add
jns
shl
das
(bad)
push
in
dec
bound
xchg
imul
or
push
push
push
idiv
das
sub
mov
xchg
ror
or
mov
mov
sbb
out
das
mov
lahf
pusha
push
jmp
rol
(bad)
enter
mov
pop
out
or
jl
jmp
inc
pop
ror
dec
data16
push
(bad)
cmp
xor
and
jbe
pop
mov
out
jecxz
xchg
sub
ins
ja
out
adc
imul
push
retf
clc
test
mov
out
movs
js
fs
dec
adc
cmc
les
cwde
das
push
mov
out
imul
(bad)
cmp
call
popf
xchg
leave
inc
jmp
pushf
and
inc
mov
outs
mov
test
jmp
sbb
ret
pop
adc
jne
xor
fdiv
mov
pusha
in
adc
xchg
and
mov
push
jmp
clc
mov
push
mov
jns
jecxz
push
jb
ficomp
rcr
movs
inc
out
push
xor
pop
xchg
sbb
jae
scas
es
mov
out
sbb
stos
dec
jne
retf
jns
inc
int
retf
jp
test
mov
push
scas
lds
leave
enter
std
loope
push
shl
jb
sbb
iret
mov
mov
das
shl
mov
cmp
data16
shr
scas
jmp
lahf
add
std
mov
int3
and
inc
adc
inc
lods
cmp
mov
pusha
xchg
ret
xor
ror
xchg
push
pop
add
xor
sbb
xlat
jo
scas
loope
(bad)
pushf
fwait
out
lds
jno
lods
xor
movs
xchg
sbb
inc
aad
movs
sar
mov
cmp
idiv
mov
and
inc
movs
mov
fsubr
(bad)
xor
pusha
in
or
pushf
xor
mov
pop
lds
adc
out
popa
and
cmps
mov
arpl
loop
cmps
jo
dec
or
(bad)
xlat
in
jb
scas
or
enter
retf
cmp
mov
lods
jl
pop
add
sbb
in
adc
test
retf
pop
outs
mov
in
push
repnz
popa
xchg
into
sub
sar
mov
mov
pusha
jo
jnp
outs
jbe
call
inc
out
xchg
pop
or
lods
dec
ds
push
mov
pushf
inc
push
popf
dec
or
and
fistp
sar
or
(bad)
sar
jecxz
mov
jl
ins
retf
add
cdq
cdq
imul
xchg
test
and
mov
outs
mov
movs
sbb
inc
ror
das
add
scas
inc
cmp
cli
(bad)
mov
into
jecxz
loopne
test
loopne
rcl
mov
and
lahf
push
call
retf
loop
inc
adc
scas
fisttp
cs
outs
mov
imul
mov
mov
xchg
outs
xor
fs
jge
daa
pushf
jmp
pop
adc
jo
push
mov
fnstsw
(bad)
stc
xor
lods
ja
ret
mov
test
mov
pop
or
(bad)
(bad)
lds
rcl
ja
mov
mov
or
mov
inc
test
fmul
mov
outs
mov
jmp
jecxz
mov
mov
cmp
mov
dec
daa
or
(bad)
push
nop
pop
sub
int
and
cli
mov
ret
aam
dec
mov
xor
popa
outs
add
jo
sti
movs
imul
daa
cmc
push
push
mul
je
enter
or
xor
mov
xchg
or
mov
in
clc
sub
std
and
adc
jns
mov
psubusw
popa
mov
loopne
cmovne
stc
into
fmul
adc
xor
sub
pusha
sub
shl
in
cmp
ds
int
stos
gs
test
lahf
fidiv
add
add
mov
pop
dec
pop
push
adc
push
inc
fdivr
xchg
out
ror
mov
and
dec
std
cmc
push
out
and
mov
iret
push
dec
pop
sub
xchg
in
jle
mov
mov
sub
add
or
fcmove
mov
popf
dec
sbb
push
cmp
cmp
xchg
call
xchg
movs
push
xor
mov
aam
test
push
daa
lock
sahf
jge
cdq
mov
mov
pop
pop
loope
add
stos
sub
mov
retf
xlat
jmp
mov
test
and
push
pop
scas
test
push
imul
add
arpl
lock
addr16
mov
or
repnz
idiv
pushf
sub
jmp
clc
pop
stos
pop
repnz
sbb
pop
pop
js
aaa
adc
add
popf
sub
out
sbb
(bad)
mov
fistp
int
mov
cmps
dec
imul
add
pushf
neg
and
das
stos
in
fwait
je
call
fisub
cmp
inc
cmp
gs
scas
or
out
or
inc
dec
pop
mov
loope
pop
outs
adc
call
xchg
scas
out
addr16
and
gs
jg
push
mov
cmp
sub
dec
add
(bad)
scas
pop
pop
and
(bad)
das
or
retf
aaa
addr16
jb
inc
(bad)
int
shl
pop
jns
js
xor
mov
sbb
and
out
iret
lock
into
out
jns
leave
push
cmp
iret
jnp
sbb
push
sub
scas
mov
adc
and
inc
adc
aaa
dec
push
sub
mov
jns
lods
out
in
cld
jecxz
adc
ja
push
jbe
retf
xchg
and
sub
mov
xor
jmp
repz
pop
(bad)
push
(bad)
outs
sbb
push
sahf
pmulhw
inc
rcl
jae
mov
iret
sub
cmps
dec
je
call
popa
das
sbb
cmp
aaa
mov
jge
repz
jge
retf
and
or
mov
and
fs
push
mov
lock
jb
jae
add
into
clc
loop
jnp
jge
jo
sub
aas
arpl
gs
sub
addr16
dec
xor
loope
cmp
pop
dec
add
xor
sub
rcr
jle
and
jmp
pop
xor
loope
in
out
(bad)
cmps
repnz
(bad)
fcmovnb
imul
in
loope
cdq
icebp
push
je
sub
ss
call
xchg
jbe
outs
push
mov
adc
pop
cmp
hlt
daa
cmp
ret
jmp
or
cmp
in
xchg
lock
cdq
addr16
push
sbb
out
pusha
fsub
stos
aas
clc
or
popf
call
push
fisttp
mov
test
mov
xchg
lea
xchg
into
inc
sub
test
loope
xchg
cmp
pop
or
or
and
enter
and
aaa
push
lods
push
fsub
(bad)
stos
out
xchg
dec
dec
(bad)
ins
inc
inc
and
test
repnz
or
fwait
data16
jmp
jge
push
int3
in
jns
pop
inc
ins
mov
fadd
in
fs
nop
xchg
jmp
popa
stc
adc
nop
sbb
xor
jns
push
and
and
xor
scas
push
xchg
mov
pop
pusha
push
enter
push
(bad)
or
shl
pop
clc
jnp
pop
enter
mov
ret
jno
jmp
xor
pushf
add
cmp
ficom
xchg
rcr
mov
das
adc
lods
fistp
sub
mov
adc
mov
scas
adc
jmp
loope
cmp
inc
add
idiv
jbe
xchg
outs
imul
adc
sbb
inc
pop
or
inc
cmp
fwait
dec
out
in
(bad)
dec
pop
jle
(bad)
(bad)
shl
arpl
push
popf
adc
cmp
jnp
jge
(bad)
jl
dec
cli
and
sti
xchg
sub
loop
dec
nop
jnp
and
pop
mov
cmp
push
add
jp
xchg
push
push
in
rol
pop
outs
xchg
xor
xlat
out
push
push
pop
jbe
or
add
(bad)
call
pop
ret
fcmovnb
inc
repnz
ret
int3
push
add
sar
mov
pushf
or
sbb
out
cwde
add
xchg
inc
out
sub
mov
je
cmc
sub
sub
pop
and
(bad)
mov
xchg
std
fcmovnbe
lahf
and
inc
mov
leave
and
xchg
push
cmp
loope
or
loop
cmp
jae
stos
(bad)
aas
ret
push
sbb
stos
or
adc
inc
xchg
dec
pop
pop
fstp
leave
push
in
add
fcom
mov
or
pop
out
call
pop
xchg
dec
int3
call
xor
cli
enter
test
das
push
shl
(bad)
mov
jmp
pop
push
pusha
sbb
(bad)
test
jne
cli
ja
shl
jmp
je
dec
mov
mov
mov
out
xor
jns
jns
mov
mov
pop
repnz
mov
(bad)
mov
shl
cmp
test
lea
dec
push
out
rcl
sub
test
sbb
dec
(bad)
fs
hlt
mov
xor
imul
sub
arpl
or
inc
xchg
cmp
fsubr
xchg
mov
mov
xchg
jno
mov
test
test
cmp
sahf
adc
xchg
xor
jns
xchg
push
pop
jmp
pushf
and
xchg
ret
pop
jmp
(bad)
adc
add
fadd
pop
adc
mov
mov
inc
aam
mov
lods
push
or
aad
jbe
(bad)
mov
loopne
pop
scas
sbb
imul
mov
enter
aad
bound
lahf
ds
dec
shl
lea
stos
pop
(bad)
ftst
adc
mov
jbe
aaa
out
adc
inc
and
mov
mov
xor
cdq
pop
cmp
mov
add
outs
int
and
icebp
xor
sti
cmp
mov
repz
pop
jle
and
outs
mov
adc
leave
jo
sub
or
cdq
xor
les
adc
shl
push
mov
ret
dec
or
les
mov
or
gs
pop
push
push
add
psrld
out
ins
or
or
fcmovne
int
loop
push
cmps
das
sub
mov
sbb
sub
mov
mov
leave
outs
add
dec
xor
push
cmp
aas
mov
xor
fiadd
mov
mov
repz
dec
shl
ret
je
pop
(bad)
out
leave
ds
jg
fld
popa
jnp
je
sub
adc
add
in
cmp
xor
(bad)
test
push
xor
cmp
xor
jnp
pop
cmc
sbb
inc
mov
add
test
lods
(bad)
push
and
fcomp
cmp
mov
pushf
add
push
xchg
xchg
mov
imul
and
mov
gs
(bad)
add
aam
(bad)
or
enter
dec
loope
xchg
sub
mov
repz
and
add
jne
call
clc
mov
mov
xchg
xor
mov
sbb
sahf
jp
loop
iretw
es
push
xchg
arpl
adc
sti
mov
cmp
jnp
out
in
bound
mov
fcomp
jae
xor
mov
js
imul
and
add
imul
mov
sub
mov
je
cmp
lods
ficom
(bad)
sti
jbe
mov
mov
aam
xchg
in
sub
push
popa
push
repnz
daa
lea
pop
xchg
push
in
push
clc
jae
test
clc
xchg
xchg
sbb
xchg
movs
movs
in
repnz
iret
pop
je
xlat
adc
push
pop
xor
xchg
fld
mov
ds
xor
pop
add
cmps
inc
adc
fstp
push
mov
push
mov
jnp
movs
jmp
or
xchg
mov
xchg
sbb
mov
jmp
out
mov
lds
lods
ret
or
push
popa
fcmovnb
rcl
xchg
(bad)
stos
int3
or
xchg
outs
lods
les
mov
jnp
adc
imul
in
mov
sub
mov
sahf
push
(bad)
push
pushf
xchg
mov
adc
test
cmp
scas
retf
enter
sbb
push
mov
push
jecxz
sub
repz
jmp
jp
sbb
mov
gs
retf
dec
jmp
rol
add
ror
jge
push
dec
push
sub
imul
dec
stos
test
repnz
sbb
lods
adc
sar
jnp
push
(bad)
fcomp
pusha
inc
jmp
movs
xchg
mov
push
sahf
xchg
cmp
jmp
add
xchg
data16
pcmpgtd
xchg
movs
movs
das
xchg
jne
outs
lea
out
lods
test
repz
xor
xchg
loopne
adc
sti
jne
or
sbb
leave
test
fwait
(bad)
xor
(bad)
adc
(bad)
jl
cmp
mov
adc
jmp
jo
out
mov
clc
jle
std
jae
mov
cmp
cmps
cmc
sbb
sub
sbb
or
imul
jno
jge
mov
outs
(bad)
fdiv
mov
mov
cmovns
jmp
inc
arpl
sahf
adc
inc
pop
je
std
cmps
xor
mov
fstp
inc
fmul
es
xchg
mov
or
xor
hlt
jo
sbb
aas
ret
imul
repz
xor
cmps
or
(bad)
mov
rcl
cmc
cmp
jge
dec
sbb
pusha
ret
out
out
add
je
lods
jb
jg
pop
test
aas
mov
adc
pop
jp
(bad)
sub
mov
lods
sub
cmp
lahf
jl
jmp
pop
push
dec
add
cwde
je
mov
loopne
jge
fist
fcom
dec
pop
scas
cdq
jae
cmps
retf
pop
push
jns
std
dec
pop
push
add
das
or
lods
popa
ss
push
inc
clc
pop
pusha
out
pop
mov
mov
les
jmp
movs
out
add
xor
retf
ins
mov
xchg
aas
scas
jb
lds
leave
jmp
add
iret
fbld
xchg
fdiv
in
or
cmp
dec
inc
sub
mov
int
jg
ds
dec
out
sti
out
icebp
pushf
add
push
cwde
cmps
out
mov
fcomp
dec
out
(bad)
loope
shl
push
and
mov
dec
out
jno
arpl
mov
ds
pop
adc
xlat
movsx
lahf
push
nop
and
cmps
imul
popf
pop
sub
hlt
jbe
out
add
push
test
je
dec
aam
stos
in
rcl
jne
and
(bad)
fbld
jnp
and
les
iret
aas
enter
adc
enter
in
out
hlt
fisubr
dec
dec
cmp
mov
out
sub
mov
xor
push
and
imul
popf
out
fucomip
pop
fdiv
nop
jns
cmp
outs
and
mov
cdq
rol
test
dec
es
dec
hlt
sbb
fld
jb
cmp
or
adc
jne
imul
mov
aam
or
dec
fsubrp
jb
mov
mov
inc
jbe
adc
fisttp
inc
scas
jl
mov
mov
xor
pop
jmp
mov
and
mov
mov
(bad)
push
mov
lock
aaa
mov
fiadd
in
jp
push
jp
dec
outs
and
lods
sbb
jmp
push
les
iret
pop
sub
xchg
ret
mov
popf
or
mov
sub
enter
test
loop
inc
inc
jle
in
jmp
xor
movs
lock
xor
cld
aad
(bad)
xchg
ret
(bad)
rcl
ret
ins
mov
ins
xor
mov
je
mov
ss
in
dec
test
xchg
imul
sbb
xchg
mov
aad
imul
dec
jbe
xchg
pop
mov
enter
dec
jp
pop
xor
inc
imul
mov
jle
pop
addr16
mov
loope
out
jne
in
xchg
sub
cmps
adc
iret
add
or
add
inc
mov
sahf
xor
mov
lock
(bad)
js
adc
pop
mov
out
mov
lock
sahf
mov
das
mov
out
inc
std
adc
and
lods
inc
out
push
imul
xchg
ret
lock
xor
pop
add
hlt
stos
call
fs
dec
repnz
daa
pushf
aas
push
xor
data16
(bad)
cld
scas
call
js
adc
scas
jg
loop
daa
jl
push
imul
mov
jmp
push
enter
cmp
mov
fcomp
pop
adc
xchg
xor
or
aas
xchg
mul
mov
jmp
add
and
add
and
pop
shr
xchg
and
lods
or
stos
mov
clc
sar
or
add
pop
push
ins
sti
sbb
cmc
lea
in
cmc
popa
xor
shr
xchg
aad
ret
je
ss
into
mov
in
fbld
out
mov
mov
push
sub
(bad)
pop
in
imul
lock
std
dec
cmp
fnstenv
outs
mov
mov
(bad)
adc
sti
les
jae
push
jp
cld
(bad)
pop
adc
adc
mov
ins
jmp
cmp
popa
pop
int3
or
retf
xchg
sbb
inc
ja
iret
jno
imul
test
hlt
lea
and
jnp
cld
test
(bad)
sbb
outs
hlt
push
xor
repz
test
xor
push
or
outs
stc
scas
xor
icebp
jae
push
adc
jne
movs
xor
addr16
mov
daa
movs
call
and
jae
ret
mov
rcl
sar
aam
fild
and
push
mov
xchg
retf
cmps
add
add
xor
cwde
mov
ficom
inc
dec
loope
mov
jmp
xor
adc
sub
adc
int
add
mov
dec
adc
adc
xor
ins
bound
cmp
cli
mov
cs
push
push
arpl
push
imul
cmp
out
fmul
aaa
lds
rcr
cmps
retf
jb
mov
and
mov
push
pop
ss
mov
scas
leave
inc
movlhps
sub
lahf
push
xchg
cwde
test
pop
into
out
popa
or
pop
stos
add
rol
pop
pop
fwait
xor
ror
movs
xchg
mov
cmc
call
aaa
inc
mov
fisubr
xchg
repnz
scas
xor
push
jle
retf
add
fbstp
dec
mov
(bad)
mov
scas
sbb
lods
inc
in
xchg
dec
inc
xchg
loopne
mov
nop
xor
push
mov
pop
mov
add
outs
jo
fnsave
jne
adc
push
hlt
push
push
push
stos
jns
cmp
xchg
fidiv
out
fnstcw
cmp
and
out
aad
nop
add
jno
jns
cmp
adc
push
mov
xchg
or
inc
push
retf
xchg
mov
fbstp
inc
mov
mov
cmc
cmp
inc
adc
data16
jmp
xor
pop
cmp
popf
xchg
shl
mov
sbb
cmp
push
add
dec
dec
popa
jl
add
in
loop
sbb
stos
push
(bad)
(bad)
cmp
and
int3
jg
and
lds
sar
cli
mov
aaa
jae
int3
out
and
mov
pop
cmps
add
out
push
call
and
cmp
in
mov
neg
pop
mov
or
mov
add
popf
cmps
or
mov
call
jle
mov
mov
xchg
mov
inc
in
inc
jae
mov
arpl
ret
cmp
cmp
pop
or
das
in
push
xor
push
or
enter
popa
arpl
stos
sub
pop
jo
push
adc
movs
sbb
cmps
stos
repz
xor
inc
mov
push
(bad)
loop
test
pop
or
fild
mov
and
(bad)
mov
(bad)
jl
movs
rol
push
pop
xchg
xor
push
shl
imul
ins
clc
dec
test
int3
cmp
sti
jge
(bad)
loope
cld
sub
dec
xchg
xor
and
aam
push
loop
das
xor
cdq
push
mov
lods
adc
add
aad
stos
fldenv
mov
mov
fdiv
jb
jnp
or
outs
mov
(bad)
stc
pop
push
jecxz
push
cmp
pop
pop
dec
in
push
mov
rol
gs
mov
mov
jg
push
xchg
sti
(bad)
rcl
push
mov
jno
sub
dec
sub
(bad)
xchg
mov
retf
add
and
repnz
pop
xor
mov
xchg
std
test
mov
push
test
mov
fsubrp
pop
ins
std
jbe
das
shl
loop
outs
mov
cli
test
shl
out
xor
scas
push
cmp
cs
and
mov
sub
arpl
scas
jge
cmc
je
into
or
adc
jecxz
jmp
cmp
and
inc
mov
inc
add
push
in
push
shr
add
cs
leave
jmp
popf
fwait
pop
test
pop
repz
pop
jnp
xchg
jecxz
gs
and
or
int3
cwde
pop
into
daa
addps
push
cli
popf
xchg
push
push
mov
jae
dec
cmps
jp
arpl
inc
retf
dec
ftst
and
sub
pop
or
mov
xor
xchg
shl
mov
sbb
in
push
cmp
lods
jns
xor
rol
and
push
test
retf
(bad)
cli
outs
xor
xchg
xchg
add
add
dec
in
and
cmc
fstp
ja
icebp
dec
mov
scas
xor
pop
jmp
icebp
daa
aaa
sbb
jns
xor
out
mov
mov
xchg
or
div
inc
mov
pop
mov
mov
xor
mov
xor
test
mov
test
cwde
cmps
pop
leave
jle
into
jg
aas
sub
or
ret
xor
sti
cwde
fidiv
push
test
sbb
stos
loopne
dec
pop
(bad)
repz
nop
jbe
lea
scas
push
mov
clc
ds
and
mov
ss
jne
test
ret
ja
mov
xor
pop
mov
add
and
cdq
and
in
adc
in
cmp
cdq
add
and
vpminsw
xchg
push
scas
fdivrp
push
std
sbb
xchg
cs
cli
test
sbb
inc
je
jle
add
sbb
cmp
nop
addr16
inc
pop
call
or
sbb
push
cmp
xchg
xchg
pop
imul
adc
outs
mov
ret
add
pop
dec
scas
dec
push
sbb
sub
pop
xor
(bad)
aas
xchg
rcr
cli
adc
jno
sbb
sbb
and
xchg
cli
movs
dec
jl
jae
push
mov
mov
sub
push
dec
enter
nop
inc
jne
loope
pop
pop
shr
inc
frstor
add
cld
cmp
aas
xchg
retf
inc
addr16
movs
cmp
mov
test
jb
mov
cmp
sub
push
xchg
cdq
jns
or
mov
fwait
inc
or
cmp
mov
add
mov
popf
sbb
(bad)
out
movs
or
cmp
jg
sub
sub
cmp
push
sbb
cmp
ror
retf
lods
push
addr16
push
ja
xchg
mov
retf
cmp
stos
test
xchg
sbb
test
and
jno
pop
inc
ret
dec
in
add
aam
xchg
fist
ins
ins
xor
cdq
adc
lds
loope
int
pop
shl
mov
pop
out
imul
sbb
fs
int3
fsubr
test
stos
repnz
mov
fild
dec
inc
in
js
lds
mov
inc
ret
pop
adc
out
in
enter
outs
xor
mov
xchg
fstp
test
sub
bound
or
stc
cmp
jns
push
fcomp
fs
push
pop
test
lahf
xchg
shl
ficom
pusha
push
neg
aas
not
xor
dec
adc
nop
aam
fsubr
movs
sub
scas
stc
aam
clc
push
sbb
adc
sbb
popa
push
retf
cmp
sbb
mov
push
push
jne
sub
ins
inc
repnz
sahf
sub
mov
fidiv
push
push
pop
mov
mov
daa
cmps
je
sbb
dec
jmp
xor
ficom
pop
pop
rcr
fmul
mov
pop
retf
ja
not
enter
mov
int3
dec
mov
sar
rcr
inc
inc
dec
mov
inc
push
data16
pop
or
jg
movs
mov
jmp
out
scas
jle
shl
lahf
xchg
in
scas
call
adc
dec
push
ss
into
fld
data16
jp
push
gs
enter
aad
jl
inc
inc
xor
dec
lahf
cli
push
jb
and
inc
retf
dec
cwde
xor
push
inc
lods
(bad)
(bad)
xor
xchg
popa
aas
cmp
lds
fwait
or
shr
pop
fwait
in
push
xchg
shr
xchg
sbb
in
push
push
out
fcomi
and
cmps
outs
push
cmc
dec
loopne
jbe
ret
cmc
call
(bad)
jbe
les
adc
xor
(bad)
cmp
add
sbb
popf
es
adc
pop
fdiv
xor
stc
je
aam
pushf
push
cmc
jne
popf
scas
dec
push
cdq
push
ficomp
imul
pop
mov
adc
xchg
fcomp
cmp
icebp
mov
and
in
and
push
fsub
jmp
fiadd
sbb
hlt
dec
call
fdiv
jo
pop
leave
add
js
cmps
push
loop
mul
sbb
or
cmp
rcr
pop
xchg
mov
call
sub
adc
mov
nop
and
and
mov
and
and
ds
test
jmp
ds
inc
ss
fdivrp
or
ds
aaa
add
ret
je
gs
inc
es
sbb
dec
(bad)
xor
adc
push
in
rcr
mov
test
sbb
enter
sub
mov
add
jae
ins
movs
stos
test
fs
cmp
cmps
cmp
and
fidiv
sub
sub
push
scas
push
imul
gs
jle
add
(bad)
fwait
das
inc
and
push
sub
lods
adc
xchg
lods
retf
lods
test
sti
adc
adc
loop
lds
popa
cmp
or
jae
cmp
mov
je
(bad)
or
ret
sub
xor
cwde
or
jb
arpl
scas
fwait
mov
(bad)
mov
test
mov
out
int
or
imul
dec
dec
adc
pop
and
jno
data16
mov
fadd
add
xchg
arpl
sub
push
popf
fbld
xchg
aam
push
push
xor
cmp
(bad)
push
loopne
mov
sub
cdq
and
adc
dec
push
xchg
jecxz
mov
add
shl
adc
and
dec
add
pop
or
push
mov
or
cmp
mov
pop
dec
and
jecxz
mov
les
mov
xor
int3
push
mov
cmps
ret
outs
mov
push
inc
out
xor
dec
cmovb
jl
cmc
pop
xchg
(bad)
jl
ins
shr
daa
rcl
sbb
xor
not
ins
inc
push
mov
pop
sar
outs
jno
pop
hlt
stos
dec
push
(bad)
dec
fs
or
sbb
push
jle
imul
cmps
jnp
and
das
mov
mov
into
ret
add
adc
inc
inc
pop
fnsave
in
push
mov
pop
add
xor
mov
inc
jo
mov
and
jmp
lea
enter
pop
lods
cdq
inc
je
mov
sub
inc
outs
jo
rcl
add
shl
sar
mov
movs
das
xchg
push
mov
mov
pop
movs
mov
fsub
xor
mov
mov
dec
scas
neg
mov
outs
push
test
pop
pop
adc
nop
xor
cmps
xor
div
loopne
es
pop
adc
(bad)
add
xchg
jmp
repz
push
jnp
pop
stos
mov
fsub
jo
push
push
(bad)
push
mov
xlat
sub
add
repz
(bad)
mov
pushf
imul
inc
mov
(bad)
cmps
mov
outs
out
mov
xor
popa
int3
nop
popa
or
ret
pop
xor
sbb
mov
pop
jo
sar
into
xchg
scas
int3
pop
and
xor
outs
xchg
cmp
xchg
add
jmp
add
pushf
mov
ja
cmps
and
jp
inc
push
sub
ficom
dec
push
sbb
loop
clc
in
shl
mov
imul
cmps
gs
adc
iret
xchg
mov
stc
je
lock
mov
or
mul
push
mov
cmovl
fisttp
pop
cmp
or
jle
scas
push
jmp
pop
jp
div
test
retf
cmc
adc
int3
cmp
enter
push
hlt
add
lods
stos
int3
std
mov
jl
fld
mov
ret
dec
inc
inc
push
or
push
cmp
add
xchg
jne
shl
mov
lods
retf
push
out
imul
sub
aam
jp
imul
push
sub
push
scas
aad
jg
int
xor
enter
ins
mul
mov
add
mov
and
call
and
mov
lods
push
cli
imul
push
xchg
je
fs
mov
movs
xchg
mov
fs
cmp
pop
mov
das
imul
sahf
mov
sub
sbb
fst
push
test
ficomp
test
imul
mov
mov
cdq
mov
mov
fiadd
adc
inc
test
sub
aam
mov
cdq
sti
pop
aad
sahf
pushf
(bad)
lahf
inc
aas
outs
stos
sbb
pop
dec
out
test
fbstp
and
and
push
adc
(bad)
es
retf
pop
adc
hlt
mov
lods
test
retf
stos
or
and
lods
cmp
cmp
(bad)
push
je
imul
imul
jp
jle
dec
test
xor
jp
gs
mov
fmul
mov
je
push
loopne
retf
popa
dec
xor
inc
in
dec
inc
leave
xchg
xchg
mov
and
ss
pop
inc
mov
jg
push
movs
xor
push
xchg
adc
out
movs
jmp
aam
pusha
fisttp
inc
je
fsub
mov
loopne
outs
sbb
or
add
leave
loope
loopne
pop
fild
mov
adc
or
adc
test
mov
sbb
lds
sub
fs
sub
scas
pop
int3
loope
dec
call
mov
out
inc
sar
(bad)
and
sahf
stc
dec
outs
mov
xchg
xor
cmp
cmc
nop
xlat
sub
ins
inc
(bad)
mov
mov
in
hlt
lods
add
xchg
adc
loope
push
adc
ss
inc
rdtsc
xor
jmp
out
and
fs
pop
xchg
jo
mov
je
jnp
xchg
pop
mov
pop
fnstenv
pop
cmp
ret
fild
shr
out
test
dec
mov
or
push
add
push
xor
fistp
lds
xor
sahf
push
mov
pusha
daa
and
push
add
sub
aas
stc
(bad)
pusha
nop
test
fld
addr16
mov
les
test
sbb
sar
and
mov
cmp
xchg
pop
pop
xchg
sahf
cwde
mov
in
push
shl
outs
add
rcr
aad
call
pushf
adc
mov
fidivr
retf
fdiv
(bad)
cmp
hlt
adc
lahf
rol
inc
mov
mov
mov
imul
inc
clc
mov
adc
jns
(bad)
aam
clc
inc
mov
adc
cmps
mov
lods
ficom
or
mov
mov
adc
out
sbb
clc
lds
push
push
dec
and
sti
div
cmp
and
clc
sub
popf
(bad)
cmps
dec
sbb
dec
cmp
out
dec
adc
leave
ja
enter
jae
ins
retf
data16
mov
mov
lea
lds
add
cmps
cmps
inc
jns
sbb
cmp
imul
sub
lods
and
repnz
mov
int
pusha
cmc
pop
js
aam
push
mov
push
adc
mov
cdq
call
jno
pop
sbb
inc
pop
mov
test
(bad)
bound
int
loopne
ss
fs
scas
xchg
sub
push
xchg
inc
pop
arpl
ret
pop
sbb
das
lea
sub
pop
lods
jmp
adc
cmp
repnz
pop
mov
xchg
cs
mov
jle
cmc
and
and
push
dec
(bad)
in
lock
dec
inc
push
pop
out
aaa
add
in
int3
cdq
pop
pusha
add
jbe
fsubr
fs
adc
jae
imul
sti
sub
in
sti
repz
xlat
int
mov
or
sbb
rol
dec
out
inc
pop
xchg
jns
bound
dec
inc
lea
mov
std
adc
push
push
bound
sub
jb
push
jmp
sub
xchg
ins
stos
out
nop
fcomp
retf
loope
adc
mov
ds
mov
inc
mov
inc
ret
or
stos
imul
sub
push
pop
dec
gs
dec
mov
and
daa
sub
add
call
cs
sub
mov
and
mov
cmp
cmp
clc
mov
pop
stos
lods
sub
mov
jp
add
aam
dec
pusha
mov
stc
loop
cdq
in
jb
(bad)
xor
push
in
aam
frstor
pop
hlt
jo
xlat
mov
fiadd
xchg
in
(bad)
cs
cwde
adc
hlt
sub
add
aaa
cdq
mov
ss
call
cwde
jbe
pop
dec
jbe
loope
movs
ins
lds
add
inc
addr16
and
cld
mov
pop
lock
mov
dec
imul
call
push
retf
or
mov
jmp
in
mov
aam
jmp
scas
xchg
fdiv
pop
sahf
lock
vmread
repz
fwait
sar
or
jge
ds
cmc
pusha
cmps
retf
fisub
scas
repz
cmc
cmp
and
adc
movs
ins
lods
(bad)
pop
dec
(bad)
out
adc
stos
(bad)
retf
or
rcr
mov
fadd
jnp
and
aad
push
mov
sahf
xchg
add
sar
sbb
inc
jecxz
sub
(bad)
into
xchg
test
sbb
gs
jg
dec
leave
add
shl
xor
movs
fcom
inc
cdq
iret
jp
ins
push
add
das
aad
gs
push
mov
rol
arpl
dec
jl
jno
sbb
dec
jge
pop
(bad)
inc
sbb
lods
push
cmp
sub
push
movs
test
add
adc
imul
xchg
jb
movs
pop
push
push
jnp
shl
mov
js
js
rcr
cdq
jo
mov
push
xchg
sbb
add
imul
mov
jle
push
jmp
jl
aas
jp
inc
dec
mov
jne
push
jg
jbe
mov
cmc
(bad)
fs
jns
scas
enter
test
pop
inc
test
or
mov
(bad)
add
xchg
(bad)
loope
retf
retf
out
test
cli
and
mov
sbb
cs
mov
aad
aas
jl
je
sub
sbb
mov
adc
mov
mov
add
cmp
and
sbb
adc
mul
imul
pop
cmps
cmp
fild
test
sbb
inc
aam
fiadd
std
arpl
es
cmps
ds
pop
sub
add
cmps
pop
aad
popf
lock
out
mov
cmp
inc
das
out
call
jp
in
cmp
das
mov
jmp
sub
popa
pusha
mov
loopne
sub
std
push
cmps
mov
test
pop
loopne
or
push
sbb
dec
cmp
out
fs
inc
sbb
int
cmp
or
imul
bts
add
cmp
and
adc
jl
retf
jp
hlt
js
jmp
mov
dec
jle
xchg
inc
test
repz
fnsave
or
cmps
cmp
mov
aad
adc
retf
sbb
out
jmp
xchg
fucom
pop
das
out
icebp
not
pop
in
test
xchg
pushf
out
mov
lds
leave
iret
jmp
mov
jbe
fnstsw
push
adc
cmps
mov
jmp
adc
mov
loope
fwait
add
cs
push
fisub
xchg
pop
push
stos
cmc
loopne
cld
xchg
pop
arpl
cwde
xor
xchg
xchg
xchg
jne
sub
or
popa
into
mov
rcl
xor
sbb
fstp
xchg
mov
pop
imul
adc
rcr
(bad)
push
sub
or
loop
mov
je
pushf
adc
jne
enter
ja
jge
out
sub
pop
and
out
cld
es
scas
retf
mov
mov
aam
aaa
xchg
sti
xor
leave
js
mov
outs
adc
mov
xchg
call
call
mov
(bad)
stc
das
fldcw
push
and
mov
jmp
push
fldenv
popf
in
cli
push
test
push
inc
inc
pushf
inc
les
push
xchg
mov
pop
(bad)
cmp
adc
jge
addr16
ret
xchg
movs
call
jne
aaa
sub
xor
push
add
cld
arpl
xor
std
add
mov
mov
movs
dec
das
push
dec
dec
loopne
add
ss
or
add
(bad)
xlat
cld
jns
sub
jl
and
popa
popa
pop
cli
fidivr
loop
pushf
out
add
mov
sbb
jp
fdiv
mov
inc
dec
out
out
mov
pusha
pusha
stc
add
pushf
aas
xchg
mov
fcom
addr16
frstor
dec
mov
push
setb
mov
ror
(bad)
daa
add
jmp
fstp
(bad)
or
leave
ret
(bad)
dec
imul
mov
loopne
sbb
push
xchg
pushf
fwait
pop
sbb
or
mov
sti
sub
mov
mov
jge
repnz
xor
push
xchg
pop
mov
adc
loopne
ds
mov
std
in
in
and
dec
rcl
add
cli
jmp
mov
jge
push
push
sub
pop
scas
dec
jo
lahf
xchg
mov
sub
call
add
cmps
bound
jmp
sub
lock
aam
jae
add
sbb
add
and
jmp
sub
lock
xor
mov
std
cmp
int
push
(bad)
shr
or
(bad)
mov
pop
pop
sbb
and
inc
fisttp
adc
stc
xchg
ds
adc
mov
cmp
add
sub
fs
pop
in
popf
add
push
nop
xor
and
mov
cmps
int3
xor
ror
fisub
int
test
add
ja
sub
in
jge
push
scas
mov
sub
aad
mov
dec
jmp
pop
int3
mov
cmp
or
and
nop
jg
or
ret
stos
retf
scas
aam
retf
dec
icebp
out
dec
hlt
adc
and
or
cdq
pop
fstp
ja
mov
es
xor
jns
call
jge
(bad)
adc
mov
push
test
jbe
mov
inc
sub
loope
cmp
cmc
sbb
dec
add
push
mov
addr16
das
call
sbb
and
jbe
(bad)
outs
mov
out
dec
push
in
scas
outs
pop
xchg
les
out
adc
hlt
and
sub
mov
xchg
jle
sub
or
push
aas
and
outs
adc
data16
loop
dec
pushf
jbe
mov
sub
sbb
xchg
cmp
add
sub
mov
jns
inc
or
and
adc
mov
nop
push
jno
jecxz
inc
repnz
stc
mov
push
mov
jmp
popf
push
je
push
pop
popa
inc
daa
stc
push
fsubr
(bad)
mov
clc
enter
add
gs
ins
stos
sub
push
test
mov
loop
xchg
jecxz
mov
shl
cmp
rcl
sbb
pop
cmp
and
pop
in
adc
push
ja
test
inc
arpl
ss
push
mov
ins
cmp
lock
retf
push
pop
repnz
sub
outs
push
jae
dec
hlt
and
ins
addr16
rcl
pushf
lea
mov
push
and
out
add
mov
ins
js
sbb
(bad)
mov
adc
ret
(bad)
xchg
icebp
adc
ret
retf
dec
or
(bad)
(bad)
jns
and
dec
test
ja
enter
inc
mov
mov
xor
pop
mov
push
or
push
sub
out
xchg
int3
ins
add
es
mov
add
and
scas
adc
jo
cmp
ss
out
lods
jge
cld
addr16
loopne
sub
lds
fcom
cmps
push
adc
jmp
jecxz
enter
dec
push
dec
or
outs
pop
outs
mov
cwde
cmc
loopne
or
popf
or
lods
push
aaa
and
xor
cmp
pop
(bad)
or
dec
shr
stc
dec
add
lods
sahf
addr16
jno
imul
fcmovnbe
or
mov
push
fcom
cmps
xchg
xchg
repnz
mov
or
push
ficom
cmps
outs
inc
adc
dec
cwde
and
push
sbb
cmp
data16
lea
adc
jno
mov
popa
rol
test
push
shl
fdiv
pop
mov
(bad)
sbb
imul
push
mov
icebp
xor
in
dec
and
and
(bad)
mov
or
lds
mov
add
push
add
mov
mov
test
mov
mov
bnd
lds
dec
xchg
popf
cmp
and
cmc
(bad)
rcr
add
sub
inc
cmp
fidiv
sar
xor
call
std
inc
mov
xor
int
enter
push
push
js
cmc
push
stc
xor
loope
jmp
mov
add
bound
jo
shl
mov
fabs
test
in
and
leave
loopne
call
cmc
push
aam
add
ja
test
shl
mov
push
dec
aam
into
pop
inc
out
ror
retf
sbb
into
push
cld
xchg
cli
cmp
or
jge
fs
dec
mov
xchg
mov
mov
xchg
push
and
(bad)
add
pop
mov
in
scas
push
dec
std
and
mov
std
cmp
aaa
daa
add
imul
pop
xchg
in
pop
in
push
inc
inc
cmp
(bad)
call
jno
inc
fxch
cli
cmp
xor
inc
dec
pop
mov
retf
xchg
lods
mov
xchg
stos
jle
loopne
pop
(bad)
push
adc
test
in
pusha
pop
cmp
push
jnp
mov
aad
lods
adc
scas
pop
hlt
push
xchg
add
bswap
xor
fdivr
push
(bad)
mov
jp
out
jmp
lods
test
stc
xor
push
push
mov
sahf
dec
pop
jmp
test
(bad)
nop
sub
aaa
xor
lods
and
idiv
loopne
ins
sub
cmp
push
fcmovbe
cmps
sbb
push
ficomp
bound
jg
xor
shl
retf
xchg
(bad)
in
pop
out
sbb
rol
jle
push
(bad)
push
icebp
push
xchg
(bad)
lds
(bad)
call
movs
inc
xor
sbb
cwde
test
pop
iret
daa
push
dec
mov
cli
pop
aam
in
inc
add
pushf
cmp
adc
(bad)
std
sbb
and
dec
jmp
repz
pop
imul
daa
ds
inc
mov
inc
dec
sub
inc
cld
inc
jo
push
nop
(bad)
xchg
ds
fwait
arpl
jmp
mov
fmul
ss
fld
outs
mov
and
stos
stos
dec
mov
cmc
inc
cmc
call
and
int
mov
jecxz
stos
(bad)
(bad)
mov
in
jb
adc
fbld
outs
and
jns
repnz
pop
jb
cmp
jmp
jns
stos
pop
sbb
cmps
and
push
or
fbstp
ss
push
or
jo
std
hlt
cmp
push
iret
mov
sbb
in
into
movs
loopne
push
mov
addr16
hlt
call
and
and
les
jg
mov
dec
mov
loope
or
loopne
inc
adc
popa
retf
pop
dec
and
add
or
add
sub
fdivr
mov
cmp
shr
(bad)
cdq
leave
mov
adc
lock
ja
and
ins
sbb
sbb
cmp
xchg
push
(bad)
dec
fwait
in
mov
fdiv
jb
pop
ja
mov
in
adc
sti
dec
cmp
mov
mov
add
dec
fwait
pusha
lds
mov
sub
xor
xor
push
cmp
pop
outs
add
je
xor
adc
popa
retf
(bad)
icebp
xor
loopne
sbb
mov
adc
lods
push
xchg
mov
xor
mov
mov
xchg
fist
jmp
cmc
mov
xlat
push
loope
inc
or
ds
xor
imul
scas
rcl
push
mov
stos
dec
jbe
pop
outs
shr
je
call
loope
lods
mov
jne
add
xor
cmps
and
mov
clc
lahf
jp
mov
sub
je
aaa
dec
xchg
cmc
dec
sbb
int3
test
dec
or
push
xor
xor
mov
mov
mov
mov
repnz
sbb
test
mov
mov
int
imul
test
lods
mov
xchg
inc
dec
or
loope
xchg
fninit
adc
dec
push
push
mov
stc
inc
mov
dec
(bad)
cmps
cwde
xor
xor
and
sbb
inc
mov
leave
mov
dec
sub
xor
adc
cdq
mov
xchg
push
bound
call
pop
cmps
and
mov
mov
dec
jo
out
stos
xor
sbb
cs
sub
or
lock
lea
push
mov
aam
jne
dec
daa
aam
pusha
push
inc
movs
push
fadd
test
icebp
mov
and
adc
and
(bad)
int3
inc
inc
mov
out
out
stc
out
or
sbb
repz
adc
(bad)
repnz
imul
bound
les
loop
popa
sbb
push
mov
sub
add
and
mov
or
movs
and
stos
pop
loopne
seto
jmp
push
hlt
xchg
into
mov
push
mul
push
nop
and
push
push
out
xchg
xchg
out
sub
lods
rcr
in
mov
(bad)
mov
or
adc
cmp
leave
pop
ss
xor
fsin
cmp
xor
test
iret
and
fild
cs
loope
xor
jae
jns
xor
xchg
sub
or
arpl
mov
std
scas
test
div
push
xchg
mov
mov
loop
cdq
jecxz
push
lds
add
xor
or
mov
repnz
and
shl
cmp
in
adc
fidivr
adc
cmc
cmp
(bad)
loope
pop
shr
(bad)
mov
pop
pop
jg
mov
sbb
add
nop
jge
retf
aaa
sub
cmps
lahf
inc
daa
push
mov
hlt
cwde
jns
les
mov
cli
push
mov
dec
pop
inc
push
fist
push
icebp
jbe
jne
scas
mov
sub
add
rol
retf
mov
imul
(bad)
sub
mov
and
inc
imul
pop
fmul
and
inc
mov
mov
bound
mov
fcomp
(bad)
enter
xor
xchg
dec
push
fistp
and
xlat
aam
shl
jb
aad
fidiv
aad
push
arpl
xchg
stc
outs
(bad)
push
push
pop
mov
cmp
inc
jnp
xor
push
xor
jbe
xchg
pop
loopne
fnstenv
inc
out
sbb
les
dec
and
add
xor
inc
push
test
xchg
xchg
add
mov
sub
neg
mov
loope
xchg
cmp
repnz
loope
vcmpsd
ins
adc
sbb
inc
or
mov
cmp
xor
nop
dec
bound
imul
imul
pop
sbb
lods
cli
ins
out
dec
add
fcom
inc
sbb
cld
push
mov
loopne
ret
inc
or
mov
ror
inc
in
jecxz
call
push
iret
mov
sahf
test
call
loopne
pop
aas
div
xlat
outs
in
fadd
pop
not
clc
push
je
scas
sub
mov
jge
sub
in
repnz
(bad)
test
test
mov
xchg
fild
sahf
and
sub
fsub
call
jp
sbb
mov
mov
cmc
sbb
jecxz
xchg
pop
movs
(bad)
and
push
pop
gs
(bad)
arpl
pop
cmp
ror
ins
inc
pop
pusha
mov
in
cs
imul
jo
xchg
rcr
js
or
lods
movs
sub
loop
mov
xchg
push
nop
and
add
(bad)
xchg
inc
inc
loop
in
stc
jbe
test
sar
(bad)
loopne
out
xor
ins
inc
fcomp
jae
mov
fdivr
(bad)
into
adc
mov
stc
xor
or
int3
pop
xchg
adc
retf
aad
xor
pop
mov
push
stos
(bad)
js
xchg
(bad)
mov
sub
(bad)
in
xor
mov
inc
imul
inc
sbb
aas
int3
jno
pop
push
cmp
ds
adc
daa
mov
fabs
pop
sbb
ret
dec
ss
jle
pushf
div
xchg
cmp
je
push
in
icebp
js
lods
sbb
repz
je
ss
mov
cmps
pop
ret
imul
das
fst
dec
addr16
inc
or
es
xchg
cli
sbb
inc
sub
(bad)
adc
jae
frstor
adc
sbb
mov
lds
jne
mov
xchg
push
shl
aam
dec
pop
outs
or
push
sar
mov
cmps
std
mov
mov
inc
jb
xlat
lock
xchg
pop
cmc
cmp
sbb
aam
mov
leave
fstp
adc
mov
push
lea
push
aad
mov
ret
jnp
xor
repnz
mov
push
daa
jle
pop
fnsave
mov
jp
xchg
outs
sbb
scas
mov
into
jbe
xchg
mov
call
mov
push
push
mov
test
icebp
jp
or
inc
mov
jle
inc
mov
xchg
aam
sub
jecxz
ret
mul
jnp
dec
pushf
mov
adc
stos
dec
pop
sbb
das
fistp
mov
clc
(bad)
xchg
out
ret
jnp
mov
mov
jge
mov
not
mov
jecxz
add
push
rcr
push
jne
xchg
jne
cld
test
out
(bad)
rcl
sub
inc
fwait
and
icebp
std
cdq
stc
repz
mov
js
xor
stos
neg
adc
push
pusha
cmc
xchg
out
sbb
imul
and
pushf
gs
idiv
inc
adc
cdq
inc
push
(bad)
lods
or
aaa
pop
div
fstp
in
fimul
jg
and
xor
daa
hlt
ins
ins
push
or
mov
pop
jne
shl
out
inc
popf
pop
out
adc
(bad)
xchg
rcl
imul
(bad)
cmp
sub
test
aam
and
rcr
pop
or
daa
out
inc
cmp
loop
inc
sbb
es
xchg
or
jbe
xchg
and
cli
or
sub
imul
xchg
les
call
gs
adc
std
movs
xor
idiv
lea
(bad)
mov
xor
pop
lods
pop
fxch
stc
jmp
xchg
inc
(bad)
retf
(bad)
mov
lds
push
jle
mov
inc
les
xchg
mov
cmp
pop
xchg
pop
adc
dec
jns
pop
jp
xor
add
test
int3
std
push
adc
out
mov
mov
inc
cmp
sbb
pop
ret
inc
enter
push
scas
cmp
jae
and
jmp
retf
popa
push
pop
das
int3
ret
mov
xor
fild
cwde
sbb
pop
push
xor
xor
adc
or
jl
scas
inc
ret
cmp
clc
retf
add
xor
or
mov
push
cmps
leave
lock
arpl
add
les
and
bnd
pop
jns
xor
push
retf
xor
ficom
lods
jo
not
rcr
icebp
loopne
pusha
outs
lds
mov
xchg
sti
adc
pop
fild
push
out
and
cld
ror
call
int
les
int
pop
inc
aad
sbb
outs
(bad)
xchg
icebp
std
gs
sbb
sub
mov
les
int3
xor
movs
aas
retf
mov
pop
push
adc
xchg
or
std
ins
les
mov
push
mov
sub
movs
jnp
mov
push
js
inc
ins
mov
lods
mov
jecxz
repnz
rol
mov
mov
dec
fwait
adc
cmp
je
sub
lods
jle
jmp
sbb
int3
sar
test
out
fld
out
popa
iret
int3
push
sbb
cmps
mov
jno
sub
cmp
jecxz
cdq
dec
sahf
push
fild
and
sbb
lea
xchg
mov
movs
and
xor
mov
ret
xor
test
add
clc
hlt
(bad)
push
inc
sub
rcr
test
jmp
inc
call
in
lea
(bad)
test
add
sbb
dec
fbld
jecxz
xor
nop
ror
pop
xchg
or
mov
js
out
mov
in
jle
jmp
fisub
lods
test
push
xchg
push
or
cmp
rcr
pop
mov
ins
mov
mov
lods
jbe
mov
jecxz
gs
sahf
rol
ins
test
xor
loop
sub
retf
mov
das
and
jg
in
popa
dec
sub
ins
data16
push
mov
imul
fist
cmps
or
and
xor
xchg
dec
imul
call
shl
sbb
repz
dec
ins
mov
pop
xchg
xchg
inc
lock
fwait
dec
iret
sbb
fistp
(bad)
push
bound
cmps
imul
pop
in
dec
dec
cmp
add
sub
fld
fist
mov
sbb
or
lds
hlt
push
outs
scas
data16
ja
ror
addr16
(bad)
dec
mov
aas
push
rol
add
outs
pop
cmp
call
in
lahf
push
iret
data16
lock
push
paddb
jecxz
push
adc
or
dec
and
imul
mov
icebp
mov
das
sub
je
leave
mov
mov
jg
stos
or
mov
mov
movs
hlt
ins
mov
daa
ins
daa
push
pop
adc
dec
adc
xchg
lods
das
lods
lock
xor
pop
jo
jmp
ins
jae
xchg
and
jns
repnz
dec
xchg
adc
fisttp
cmps
(bad)
mov
loope
cli
sti
ja
mov
cmp
hlt
fadd
das
repnz
and
xor
xchg
shl
imul
arpl
sub
mov
jbe
fld
jecxz
(bad)
cdq
push
mov
mov
fisttp
out
movs
test
lds
pushf
push
leave
push
imul
add
(bad)
je
shr
sar
jmp
adc
push
sahf
mov
je
and
ds
test
iret
adc
cmp
xchg
inc
stos
popa
xor
xchg
in
int3
fldpi
std
jb
xchg
adc
lods
cmps
in
xchg
push
xchg
out
and
adc
call
aad
xor
jbe
test
xor
mov
mov
mov
xchg
xchg
sub
into
sub
mov
sbb
inc
repnz
into
fwait
xchg
jg
ja
mov
ins
ds
test
push
or
adc
(bad)
icebp
mov
aam
xchg
xchg
in
(bad)
ror
ds
into
ficom
inc
nop
push
rcl
push
and
in
enter
adc
ret
rsm
inc
add
fistp
sub
pop
scas
mov
out
icebp
into
jno
lods
ror
push
aam
(bad)
xlat
xchg
add
cmp
mov
push
xor
xlat
pop
jne
sbb
pop
adc
and
jne
sti
retf
sub
pop
imul
push
mov
imul
repnz
rol
pop
pop
test
and
mov
mov
adc
repnz
ret
pop
int
fstp
dec
pop
mov
movs
out
jl
mov
sbb
cmp
je
jae
push
xchg
add
dec
test
push
cwde
lods
push
jmp
mov
and
inc
stc
test
jb
jp
int3
pop
sbb
jne
bound
push
mov
mov
and
sub
dec
jl
push
arpl
push
jecxz
stc
xchg
shr
movs
sub
xor
into
ret
test
cli
outs
jl
int3
cmp
mov
push
dec
and
xor
dec
jmp
mov
fs
pop
ss
sar
(bad)
rcr
mov
inc
loope
loopne
mov
mov
test
addr16
stc
pop
mov
sti
clc
cmp
mov
dec
cmp
pop
adc
dec
in
and
nop
mov
and
push
jl
adc
pop
jno
bound
shr
adc
push
mov
hlt
xchg
and
xchg
(bad)
mov
ins
out
adc
push
(bad)
repz
ffree
mov
cmp
mov
push
arpl
and
retf
sbb
lods
and
cdq
xor
and
sub
pushf
and
call
push
das
cmp
mov
adc
fs
fld
outs
inc
mov
test
xchg
leave
xor
cli
imul
mov
mov
and
or
push
push
ds
sub
cli
jle
sbb
fisubr
test
and
pop
and
(bad)
inc
daa
movs
mov
xor
test
xor
out
fsubp
(bad)
add
sar
inc
dec
retf
or
cdq
pop
in
(bad)
shl
in
repz
dec
and
sbb
arpl
(bad)
and
enter
retf
mov
mov
scas
push
cld
adc
hlt
xchg
xchg
jnp
add
jnp
sbb
mov
loop
lock
sbb
mov
addr16
das
and
add
repz
ins
sbb
cmp
in
std
rcl
cmp
xor
push
mov
fisub
mov
adc
das
dec
fnsave
jb
jg
rol
in
cwde
(bad)
xlat
pop
fucomip
test
mov
mov
dec
lahf
xor
pop
and
int
sbb
in
pop
mov
pop
and
inc
mov
(bad)
js
stos
idiv
jecxz
cmps
xor
mov
inc
inc
sbb
xchg
fs
(bad)
jns
xchg
jecxz
inc
add
imul
jne
imul
xchg
cmc
mov
cmp
shl
or
mov
call
iret
je
icebp
sbb
(bad)
lea
lea
fwait
loope
mov
jae
mov
jg
es
inc
push
test
xchg
jg
cmp
in
sbb
sbb
ins
ja
call
loope
mov
xor
dec
or
cmp
mov
nop
lea
and
mov
jns
cmp
mov
inc
cwde
jmp
jmp
sbb
xor
ret
add
sar
add
stos
mov
sub
sbb
cmp
(bad)
loope
cwde
jns
stos
cmc
pop
ds
xchg
icebp
call
in
loop
mov
push
mov
mov
sbb
jne
sti
icebp
and
loope
call
fiadd
or
and
fsub
add
xchg
cwde
and
push
pusha
push
out
adc
mov
sbb
inc
inc
outs
mov
(bad)
pushf
pavgb
cmp
(bad)
dec
or
test
sub
and
add
or
adc
cmp
mov
outs
repz
mov
ret
ror
fwait
(bad)
mov
xor
ss
jmp
inc
sar
mov
dec
cdq
xchg
js
sbb
pop
out
sbb
and
pop
xlat
push
push
pop
scas
mov
arpl
push
lods
dec
jle
(bad)
mov
fcomp
adc
mov
push
movs
add
aad
sbb
sub
mov
inc
dec
shr
cdq
fwait
ror
cli
xor
pextrw
lahf
add
jae
stos
xor
nop
cmp
jbe
addr16
sbb
fst
aaa
xchg
dec
jg
cmp
mov
xor
imul
xchg
push
sahf
push
cmps
and
and
into
retf
mov
mov
int
jge
dec
and
xor
popf
jne
or
addr16
jl
add
add
xor
dec
mov
bound
out
mov
xchg
dec
enter
(bad)
aam
inc
xor
shl
adc
push
jmp
sub
pop
mov
clc
and
push
push
xchg
mov
das
inc
scas
mov
jns
pop
int
rcr
mov
sbb
mov
jno
in
fwait
mov
std
and
adc
test
xor
imul
lods
mov
enter
movs
cmc
scas
movs
xor
or
out
cmps
or
adc
cmp
push
in
fdivr
mov
xlat
or
mov
adc
in
or
and
and
xchg
sbb
scas
aaa
and
es
sub
nop
cmp
movs
mov
jmp
pop
aas
mov
xchg
hlt
mov
cwde
xchg
fwait
adc
push
inc
ss
jg
movs
mov
dec
ins
ins
in
and
push
inc
dec
adc
retf
push
sbb
push
or
ins
xor
cmp
int
mov
in
test
test
retf
test
std
dec
and
pushf
jne
jnp
pop
or
imul
pop
xor
mov
inc
inc
mov
call
xor
and
fcomp
adc
xor
mov
push
mov
xor
call
jb
sub
sbb
call
mov
dec
ret
gs
xor
scas
adc
cmp
fld
fisttp
mov
fcomp
cmp
push
pop
sub
std
mov
addr16
or
std
cmc
sbb
dec
(bad)
test
adc
hlt
rol
xor
inc
push
sbb
fisub
sbb
and
dec
mov
js
jecxz
in
repnz
inc
sti
pop
xor
mov
xchg
sub
iret
mov
leave
aas
test
mov
fcom
adc
adc
jb
frstor
sti
sbb
fwait
sar
stc
pop
sahf
cmp
in
pop
xor
pop
iret
fisubr
and
jne
shr
xchg
push
push
sbb
fs
and
out
jne
add
pop
cmp
push
xchg
enter
jg
xor
push
cmp
stos
mov
cdq
xchg
je
xor
ror
push
adc
cmp
mov
xor
push
push
fnsave
lods
inc
stos
call
ret
add
jne
ds
cmp
cs
retf
or
push
jne
jbe
mov
pusha
popf
push
jg
stos
or
(bad)
les
in
sbb
sub
adc
jae
shl
in
xor
push
cwde
xchg
clc
pop
mov
ss
and
dec
push
xchg
test
rcr
pop
push
in
adc
mov
fidivr
and
repnz
mov
add
(bad)
shl
lea
adc
sahf
pop
cmps
test
push
xor
mov
cmps
call
iret
xchg
adc
movs
pop
inc
mov
mov
fld
jle
inc
or
aad
ucomiss
mov
mov
adc
cmp
rcr
jns
popa
movs
ins
sub
inc
add
xchg
push
sbb
jo
sub
push
pop
pop
cmp
mov
in
rcl
pop
mov
pop
ss
mov
addr16
sub
clc
stc
push
dec
call
and
cmp
out
ja
sahf
jne
fdiv
outs
fisttp
add
out
push
sbb
bound
stos
faddp
icebp
inc
sbb
fsubr
sub
into
dec
mov
pop
popa
aam
out
push
retf
scas
(bad)
aam
jmp
ret
jecxz
dec
enter
pop
inc
push
and
sahf
pushf
jl
mov
cs
cdq
xor
ss
jl
adc
inc
jae
hlt
leave
leave
ret
mov
lds
retf
xor
pop
sub
xchg
mov
pop
mov
mov
sub
(bad)
or
rol
sub
mov
sti
vpshld
sbb
div
cmps
retf
out
cld
sbb
jno
push
adc
pop
stc
sub
retf
or
adc
xlat
cmps
(bad)
in
(bad)
sti
out
pop
adc
inc
(bad)
mov
movs
add
push
js
dec
xor
lock
dec
pop
sbb
fild
test
pop
outs
les
xchg
test
inc
in
xchg
fstp
xchg
dec
add
bound
bound
and
ror
cmp
ins
mov
imul
ret
fwait
xlat
ss
enter
retf
mov
test
xchg
imul
popa
icebp
xchg
push
mov
je
popf
xor
pop
test
mov
rcr
rcr
stos
xor
sub
push
(bad)
outs
xchg
scas
jge
push
sti
pushf
add
imul
sbb
dec
sbb
push
mov
pushf
std
sbb
dec
inc
fwait
ss
push
stc
jne
mov
ficomp
jle
call
leave
fdiv
pusha
gs
jb
jge
sub
xchg
mov
lock
jmp
xchg
out
repz
adc
cs
pop
repnz
inc
daa
push
into
int3
es
into
xchg
push
les
fwait
repz
cmps
inc
std
fwait
cmps
sar
outs
add
push
int3
add
retf
mov
popf
cmp
xchg
mov
push
cwde
movs
add
ficomp
dec
and
aam
add
das
jbe
arpl
push
mov
and
(bad)
bnd
or
and
push
(bad)
push
lock
in
mov
sti
sub
idiv
push
sbb
fcmovnbe
cmps
pop
pop
cmp
xchg
and
sbb
loopne
popf
sub
cmp
mov
sbb
ins
cmp
cmp
addr16
adc
cs
(bad)
aas
inc
xor
inc
mov
and
out
and
mov
dec
pop
pop
ret
sub
std
imul
sub
aad
xchg
ror
es
jns
dec
cld
out
retf
ret
mov
cmp
or
test
xor
push
inc
aad
mov
or
or
sbb
pop
adc
sub
and
(bad)
mov
int
movs
ret
cmps
mov
push
ins
inc
sub
cmp
hlt
loopne
les
int
jmp
fist
xlat
mov
retf
fwait
or
shl
ret
xchg
sub
push
inc
and
icebp
cmp
or
stc
adc
jns
test
sbb
mul
mov
nop
inc
ins
push
and
push
cmp
loop
dec
mov
cmps
fild
sub
(bad)
scas
xlat
dec
sbb
jns
cs
and
int3
push
test
jecxz
jmp
cmp
xor
fistp
sbb
movs
out
add
and
cmp
sub
cmp
mov
push
movs
es
out
xor
jo
scas
(bad)
pushf
fwait
inc
cmp
inc
inc
xchg
inc
punpcklbw
repnz
push
xchg
je
sub
dec
push
push
sub
arpl
mov
push
sbb
in
add
outs
inc
adc
or
sbb
in
into
out
xchg
push
movs
icebp
fs
repz
xor
mov
push
or
arpl
jno
loop
xor
arpl
(bad)
jmp
pop
or
out
outs
pop
pop
retf
or
push
sbb
scas
sub
adc
or
xlat
mov
jl
ins
sahf
mov
les
gs
mov
jnp
or
xchg
sbb
mov
ds
into
mov
inc
psubsw
lea
xor
mov
into
adc
sti
out
repnz
pop
lahf
in
push
scas
xor
rol
pop
push
adc
or
xchg
or
push
or
gs
fdivr
stos
or
addr16
shl
popa
xchg
data16
mov
sbb
mov
jmp
add
daa
cwde
inc
fwait
mov
div
shl
or
jp
xchg
dec
(bad)
stc
loope
rol
mov
add
repnz
adc
out
add
cli
mov
cmps
movs
jecxz
rep
or
dec
push
pop
das
fs
jl
inc
jmp
jno
and
dec
pushf
loopne
ins
xchg
cmp
mov
xor
push
push
je
into
jmp
stc
nop
pop
in
into
mov
jge
push
jns
adc
push
in
mov
test
fs
adc
push
xor
fwait
push
cmps
push
cmp
ins
bound
popa
mov
lahf
jl
pswapd
test
pop
push
test
dec
xlat
pop
retf
mov
out
mov
cmp
sub
fisttp
ficomp
ds
jae
repnz
and
xchg
pusha
data16
lock
in
les
pop
ret
add
fidivr
outs
imul
mul
pusha
ror
push
retf
and
enter
dec
mov
cld
xor
je
(bad)
jo
sbb
arpl
push
cmps
fiadd
mov
retf
lahf
out
gs
aas
xor
test
adc
ficomp
shl
sub
popa
ds
test
lds
(bad)
jmp
imul
sub
and
pop
jp
cwde
pop
retf
mov
je
fdivr
xor
mov
push
aam
retf
cmp
mov
xchg
repnz
test
mov
mov
fsub
mov
lods
jge
add
stc
jl
jmp
dec
rcr
sbb
sbb
out
fcom
data16
mov
rcr
(bad)
pushf
into
inc
jg
sar
xor
cmps
jl
pop
mov
outs
clc
in
add
into
and
sbb
jecxz
cld
mov
pop
pop
sub
mov
outs
pop
shl
jmp
inc
ror
ins
mov
sbb
xchg
fld
mov
aas
addr16
push
lods
push
out
mov
mov
and
xor
pop
sbb
ss
mov
ins
mov
fst
stos
es
or
(bad)
mov
ss
stos
xchg
pop
mov
cmps
fld
int
mov
jge
jmp
add
out
nop
jl
int3
stc
push
cs
cdq
loopne
ins
mov
xor
dec
ret
adc
add
lahf
cmps
mov
(bad)
cmp
ss
add
fstp
inc
mov
jecxz
push
outs
mov
test
adc
mov
movs
(bad)
repz
daa
fadd
add
mov
les
xchg
sbb
xchg
mov
push
jb
inc
nop
pusha
fisttp
inc
shl
stc
(bad)
stos
pop
aaa
scas
(bad)
rcr
imul
dec
dec
pop
dec
cmp
cli
daa
mov
xchg
sbb
inc
push
mov
imul
inc
jb
arpl
xchg
not
sahf
push
cwde
push
(bad)
cmp
fdivr
js
mov
(bad)
xlat
bound
sub
xchg
ds
or
shl
or
pop
add
mul
mov
adc
or
push
mov
outs
retf
cmp
sbb
jbe
lock
and
jp
fldcw
adc
xor
inc
adc
mov
mov
pop
xchg
xchg
pop
retf
ins
retf
xchg
xchg
and
ficom
(bad)
jmp
adc
jnp
out
xchg
shl
adc
and
aam
(bad)
outs
pop
cmp
mov
dec
cmp
rcr
in
sub
iret
cwde
mov
push
pop
or
and
mov
xor
mov
adc
cld
iret
jmp
fs
mov
sbb
test
pop
lahf
cs
add
jo
cwde
add
jmp
xor
cmc
int
lock
lods
inc
je
into
cli
xchg
xor
stos
imul
dec
sti
xchg
aam
mov
mov
loop
into
in
stc
call
push
int
xchg
arpl
xchg
mov
jecxz
ds
cmp
dec
lock
(bad)
dec
lods
sub
inc
nop
push
and
jo
xor
imul
sub
arpl
inc
xor
push
retf
push
out
cli
push
dec
push
cmp
pop
cdq
adc
cmp
pushf
fadd
push
ret
fsubr
outs
xchg
ins
jle
dec
test
or
mov
sar
out
mov
mov
scas
mov
stc
mov
inc
xor
rcl
scas
cmps
xchg
xchg
cmp
nop
dec
js
scas
push
into
stos
cwde
ja
cli
sbb
add
pop
xor
sbb
test
enter
in
dec
xchg
push
sahf
push
lds
push
sti
pop
mov
je
xchg
pop
and
mov
sbb
or
sbb
adc
cmp
(bad)
cli
and
leave
add
enter
imul
add
add
pop
or
enter
test
inc
add
fwait
cmp
loopne
jge
hlt
push
and
xor
aam
ficom
pop
pop
int3
xor
into
ins
gs
xor
ficom
movs
icebp
jmp
or
lea
xchg
and
bnd
xchg
iret
dec
div
into
pop
mov
pop
fwait
jecxz
xchg
ftst
cmp
in
jg
cmp
and
jb
(bad)
cdq
adc
sub
aam
mov
jmp
aad
std
mov
push
adc
or
add
not
or
mov
mov
lds
pop
sbb
gs
xchg
shr
adc
test
add
es
adc
add
add
push
xor
dec
out
jp
in
arpl
les
(bad)
call
sub
sti
adc
nop
aad
xchg
sub
bound
imul
int
inc
sub
test
pop
fs
mov
mov
gs
add
sbb
sbb
clc
in
jno
mov
das
mov
out
sbb
jmp
sub
jnp
in
es
pusha
(bad)
clc
sub
pop
or
sahf
sub
out
mov
clc
mov
shl
inc
stc
icebp
adc
scas
lods
repnz
jge
adc
js
cmp
sbb
cld
mov
popa
sar
mov
xor
stos
ins
scas
int
inc
jge
clc
scas
stos
aam
and
push
(bad)
(bad)
mov
adc
sbb
xchg
jecxz
mov
imul
pop
jge
mov
jo
sbb
retf
loope
mov
xchg
dec
mov
xor
or
sbb
sub
inc
push
push
mov
pop
or
pop
sub
and
pop
adc
push
pop
push
xchg
jns
jge
cmp
dec
or
out
mov
xor
xchg
mov
retf
sbb
shl
sub
arpl
ficomp
jmp
(bad)
xchg
sub
pop
xor
in
ret
lock
sub
inc
daa
or
call
js
xchg
inc
xchg
adc
aas
adc
xchg
inc
cmps
xor
mov
and
movs
mov
mov
ins
mov
mov
sbb
add
bound
cmp
cmp
rcr
push
ret
(bad)
xor
loope
jecxz
fsqrt
pop
sti
(bad)
mov
cmp
push
out
sub
jmp
aam
dec
jp
scas
jns
rol
paddsb
cmp
jl
(bad)
mul
mov
dec
mov
cmp
int3
pop
mov
cld
push
push
loope
xchg
cdq
inc
xchg
cmp
int3
bound
call
push
push
cwde
int
sbb
push
fst
js
fst
repz
mov
xor
cwde
mov
(bad)
lods
shl
adc
in
mov
sub
verr
stc
dec
scas
ins
(bad)
pop
cs
and
pop
sbb
pop
jno
jmp
out
mov
jg
sub
sub
out
hlt
dec
push
sub
scas
bnd
mov
iret
inc
jmp
mov
xchg
cmp
and
jb
mov
test
jecxz
pop
jns
xchg
retf
int
push
sub
sub
aad
imul
lock
push
enter
rcl
adc
js
pop
adc
xchg
lds
push
mov
sbb
cdq
push
adc
push
cmp
pop
jle
pop
mov
test
cmc
mov
lods
ins
mov
push
push
es
imul
int3
inc
cld
lahf
jge
push
sbb
imul
cmps
push
retf
mov
mov
fisubr
fld
xchg
or
xchg
jecxz
mov
in
xor
(bad)
adc
test
mov
jg
sbb
sub
and
inc
adc
sub
ret
fdivr
sub
sub
jns
push
jne
in
loopne
outs
add
xchg
retf
xor
cmp
fcomi
(bad)
cwde
mov
mov
pop
mov
inc
jge
not
cmp
leave
xchg
call
pop
jg
out
inc
ins
dec
mov
loop
push
arpl
push
and
inc
pop
aas
movs
push
pop
mov
ins
in
in
fsubr
fmul
cld
cmp
and
jns
sub
(bad)
daa
(bad)
fxch
push
sub
cmp
jmp
lods
je
add
add
jbe
cmc
adc
(bad)
out
mov
dec
xor
test
inc
jge
imul
mov
inc
jns
xchg
arpl
mov
jmp
xor
mov
inc
mov
add
dec
ins
pop
es
push
or
xchg
cmp
fwait
mov
adc
push
adc
(bad)
pop
retf
ins
push
leave
cs
in
call
xchg
inc
pop
cmc
inc
sahf
sub
pop
imul
and
cwde
mov
xchg
clc
(bad)
call
inc
adc
sub
xchg
xchg
mov
push
in
sub
mov
sub
fs
stc
imul
stos
push
int
dec
lods
xchg
hlt
sub
xor
sub
mov
jbe
xchg
test
add
jbe
test
lods
or
jmp
inc
xchg
jnp
sti
and
mov
sub
sbb
test
pop
(bad)
nop
outs
test
mov
pop
pop
fsubr
in
push
mov
jmp
leave
jne
(bad)
pop
popf
push
cmp
lods
out
scas
leave
fwait
pushf
cli
rol
mov
retf
(bad)
pop
mov
inc
test
push
pop
xor
lds
xchg
out
sub
cwde
cmps
mov
xchg
mov
cmc
mov
inc
mov
idiv
aas
xchg
test
jnp
into
ins
sar
fwait
sub
push
dec
cmp
mov
sbb
mov
add
mov
dec
inc
add
sti
out
int
bnd
ja
(bad)
push
daa
aas
push
sbb
jg
bound
jle
sti
hlt
imul
loop
lds
ret
inc
mov
mov
outs
enter
les
pop
jp
pop
cwde
rcr
retf
pusha
test
lods
(bad)
mov
lahf
push
js
inc
jbe
loop
mov
sbb
adc
ret
inc
popa
loopne
rcl
mov
jae
jns
push
mov
push
jmp
jb
scas
inc
push
mov
fld
je
out
test
push
(bad)
mov
cwde
mov
and
cwde
mov
xor
xor
fwait
test
or
inc
cmps
sub
rep
mov
iretw
jmp
les
pop
fldenv
mov
dec
or
jl
fild
(bad)
iret
mov
cmps
stos
mov
enter
jb
inc
xlat
stc
shl
cld
and
mov
mov
push
cwde
add
xor
lds
(bad)
mov
and
ja
jmp
imul
mov
xchg
jb
mov
mov
idiv
adc
hlt
mov
les
fld
dec
jg
cmp
mov
cmc
lods
pop
push
jns
xchg
cmps
cld
jns
test
mov
adc
sub
inc
inc
dec
dec
test
xor
inc
fwait
inc
movs
and
add
xchg
mov
dec
push
xlat
pop
stos
inc
mov
sbb
shl
popa
or
and
inc
leave
mov
inc
add
mov
sub
pop
jb
jae
(bad)
pop
into
mov
je
sub
mov
popf
xor
jbe
mov
dec
jmp
cdq
add
(bad)
cmp
test
hlt
aad
xchg
jnp
fs
jge
test
xchg
pusha
xor
hlt
dec
add
mov
xchg
pop
and
popa
shl
fcmovnb
hlt
dec
push
fldenv
cmp
and
data16
add
mov
jne
pop
dec
mov
add
lock
lahf
jno
fdiv
(bad)
into
xlat
jno
enter
cli
push
adc
adc
cmps
dec
sub
mov
outs
dec
or
jb
mov
je
dec
and
sub
inc
push
mov
fnstcw
mov
mov
mov
fcomip
xor
aas
push
fsub
fdivr
inc
xchg
js
pop
inc
xchg
inc
mov
xor
mov
cdq
mov
ror
dec
mov
cmc
fwait
jbe
adc
jmp
add
jo
dec
mov
dec
je
jno
call
xchg
jecxz
cwde
jne
pop
repnz
fwait
inc
xor
icebp
hlt
(bad)
cmp
jo
(bad)
push
test
fs
leave
loop
es
(bad)
mov
sbb
sub
push
in
int3
lahf
xor
xor
movs
pop
sbb
jmp
xchg
mov
ins
stos
sub
into
(bad)
scas
add
and
aam
or
cmps
icebp
mov
imul
jl
xor
test
jg
pop
leave
in
pusha
cmp
dec
aas
popa
outs
mov
out
adc
out
xor
scas
je
fsubr
imul
das
cmp
and
es
pcmpgtb
fwait
icebp
(bad)
es
cmps
js
jne
or
jecxz
inc
leave
mov
in
cmp
mov
mov
dec
dec
lea
mov
mov
dec
call
push
and
mov
addr16
popf
inc
add
xor
imul
movs
push
repnz
hlt
dec
inc
dec
(bad)
mov
dec
push
into
fidivr
mov
jge
jge
ins
test
cmp
jne
iret
and
xor
(bad)
imul
sub
sub
jge
je
repnz
out
imul
pop
retf
xchg
in
iret
mov
and
sub
retf
fcom
test
repnz
call
loopne
mov
(bad)
pop
(bad)
xchg
dec
scas
or
jb
or
add
jmp
test
mov
shl
xchg
pop
inc
xbegin
adc
out
sbb
ins
mov
add
add
jne
fldcw
jl
popa
cmps
xchg
pusha
sbb
push
out
jge
lds
sbb
aad
hlt
fild
adc
dec
retf
imul
add
jmp
mov
mov
and
and
jge
in
jl
xchg
in
jmp
call
imul
jecxz
(bad)
xchg
fldlg2
arpl
sbb
mov
push
mov
jns
inc
rcr
mov
retf
sbb
cmp
mov
mov
popf
je
push
nop
iret
in
or
pop
or
xor
fwait
dec
add
popf
(bad)
adc
sub
and
lds
daa
fwait
loope
or
jle
xor
cmp
adc
and
push
and
pop
retf
sbb
aaa
xor
pop
or
jne
xchg
xchg
loop
xchg
push
pop
jo
xlat
lea
rol
or
jne
jne
sub
xor
pop
mov
push
pop
pop
xchg
mov
sti
sbb
and
mov
and
pop
mov
out
test
ror
jmp
fsub
outs
mov
sbb
mov
ret
es
bound
inc
test
or
call
out
inc
out
add
test
loop
in
jb
mov
push
and
sub
iret
adc
jmp
retf
lods
and
test
mov
cmps
sbb
sub
(bad)
out
sar
shl
push
(bad)
out
and
and
into
mov
loope
pusha
mov
mov
and
xor
mov
push
mov
add
jnp
not
bound
bound
rcl
gs
inc
dec
imul
dec
mov
xor
dec
idiv
call
gs
ins
mov
outs
sahf
inc
add
cmc
and
aas
or
enter
jne
into
and
aaa
and
pusha
jne
test
push
inc
dec
daa
and
push
mov
jmp
lahf
xchg
std
mul
add
mov
push
jecxz
inc
mov
ins
lods
pop
movs
mov
xchg
pop
cli
lods
and
dec
(bad)
std
mov
int3
fwait
out
int
test
or
pop
lahf
cmps
in
cdq
add
xchg
lods
push
pop
sbb
or
fs
repz
pusha
jg
cld
xlat
test
cwde
mov
add
add
jo
loopne
fwait
or
in
inc
lock
xchg
fidiv
retf
in
dec
dec
jno
movs
fnstsw
or
out
push
xlat
mov
popa
cmp
mov
stos
mov
int
in
or
mov
xor
cmp
and
dec
out
fld
jnp
mov
repz
mov
inc
push
out
cli
push
fxch
outs
arpl
bound
push
pusha
movs
std
xor
or
sahf
xor
xchg
dec
and
(bad)
lahf
(bad)
jl
js
pop
ins
pop
lods
fbld
in
fisttp
(bad)
daa
and
es
push
in
imul
sbb
(bad)
sahf
mov
dec
mov
push
es
push
cld
aam
push
adc
xchg
shl
test
mov
push
cmp
addr16
dec
das
cwde
adc
xor
add
sti
nop
fild
mov
or
mov
inc
jns
dec
pop
mov
and
sbb
jne
into
dec
arpl
cdq
mov
scas
bound
sar
dec
pusha
push
jg
inc
scas
add
sub
imul
jne
xchg
sbb
dec
pop
mov
lea
adc
ss
mov
xor
add
ret
add
ret
mov
or
(bad)
nop
pop
ins
add
ds
and
mov
jmp
pop
std
cmps
adc
dec
sub
out
inc
test
sub
push
rol
pop
push
pop
push
xlat
xchg
cmc
push
adc
fwait
mov
pop
loop
xor
sub
sti
fwait
jl
in
and
cmp
das
in
mov
pop
in
xchg
jl
sub
arpl
out
and
xchg
jecxz
daa
movs
cmps
sub
sbb
pusha
mov
ja
pop
imul
nop
popf
cmp
sub
xchg
cmp
test
inc
mov
shl
scas
in
retf
pop
fcmovbe
fsubr
add
xchg
or
mov
mov
jbe
mov
int3
hlt
xchg
es
adc
int3
pop
aad
xchg
js
dec
call
pop
repz
cdq
mov
jge
jl
sbb
int
xchg
xor
lea
cmp
mov
and
add
jg
xchg
inc
stos
cmc
pop
not
pop
pop
dec
in
jbe
mov
mov
sbb
jns
ret
call
cmp
(bad)
push
fimul
mov
call
(bad)
fld
shl
out
jp
inc
cmp
inc
sti
push
cmp
mov
push
fsub
push
cmp
xchg
pop
xor
xor
cmp
cmp
lea
cmp
mov
sub
push
push
repz
or
and
xor
sbb
inc
jb
sub
es
xchg
xor
ret
cdq
pop
addr16
rcr
imul
ret
sbb
mov
fcmovu
es
rdtsc
inc
jns
sub
fdiv
push
and
mov
or
jle
out
into
xchg
pop
mov
jle
int
in
jg
cmp
in
test
sbb
add
jno
ins
das
gs
mov
inc
int3
nop
sub
xor
push
pop
(bad)
push
pop
xchg
iret
adc
jmp
jp
inc
mov
je
ins
sti
adc
pop
add
or
div
inc
inc
(bad)
pop
out
lahf
icebp
jp
out
sub
daa
mov
push
push
mov
push
int3
sub
cmps
pop
push
xchg
(bad)
je
iret
(bad)
and
jbe
loop
cmc
dec
ret
mov
int
jnp
xchg
jbe
inc
pusha
mov
push
movs
pop
int3
iret
jecxz
dec
icebp
jbe
sbb
in
pop
mov
mov
sub
in
ins
dec
shl
push
jno
mov
inc
das
test
pushf
inc
xor
ficom
dec
mov
adc
(bad)
cdq
dec
test
adc
xchg
sub
cmp
nop
test
push
push
not
sub
ror
mov
in
mov
lock
jae
clc
in
sbb
inc
js
xchg
add
stos
mov
fwait
xor
jae
lea
inc
or
aam
scas
mov
cs
loopne
ror
jb
mov
and
xor
inc
push
mov
mov
xchg
lds
mov
out
push
js
test
test
addr16
fsub
add
mov
jb
hlt
ret
cli
addr16
out
mov
cli
mov
pop
test
and
sub
push
mov
push
and
adc
jle
data16
mov
loop
xor
mov
mov
scas
jb
aad
or
mov
(bad)
fldcw
ror
pop
repz
imul
dec
icebp
lods
adc
(bad)
jbe
pop
inc
cmp
inc
pushf
push
mov
jno
ins
xchg
adc
pop
sub
outs
jmp
je
xchg
int
cmc
mov
dec
int
js
inc
xlat
mov
not
dec
movs
or
cmps
cmp
aaa
xchg
cmp
clc
pop
iret
movs
arpl
add
add
cdq
xor
fnstenv
xchg
fdivr
and
(bad)
fwait
adc
xor
popa
add
aaa
adc
lock
mov
jge
in
and
xchg
add
dec
and
fwait
jnp
xchg
lods
shr
add
(bad)
or
add
ja
into
ins
mov
add
push
pop
sbb
cmps
test
sbb
pop
add
mov
movs
loopne
push
mov
cmp
aaa
cmp
pop
and
(bad)
jp
pusha
and
inc
jo
ficomp
retf
add
add
add
jl
xor
jae
call
cmps
popa
bound
cmc
or
mov
int3
inc
sbb
cmp
push
cmc
popf
mov
sub
or
sub
leave
lock
pop
or
inc
inc
xchg
push
test
push
loop
test
xchg
(bad)
cmp
aam
daa
xchg
stos
push
ficomp
clc
inc
sbb
sbb
mov
std
imul
fcmove
pop
push
fild
xchg
inc
sbb
dec
sbb
int
push
arpl
sar
fsubr
fdiv
lea
mov
jo
pop
(bad)
nop
sub
std
mov
inc
adc
(bad)
sbb
push
in
mov
push
scas
sti
push
cli
and
adc
xchg
loopne
or
push
jae
mov
bound
fdivp
lds
sub
mov
push
aad
lahf
gs
mov
jl
mov
sbb
ins
ds
sbb
mov
mov
addr16
jbe
(bad)
repz
sahf
in
in
xchg
inc
mov
mov
lahf
xlat
stc
jp
lds
lea
rcl
jle
retf
jnp
adc
jbe
in
push
jnp
xchg
inc
scas
sub
ins
push
aas
mov
in
dec
pop
sub
imul
or
adc
fdivp
out
sbb
leave
mov
or
xchg
xchg
dec
out
int
jp
or
jp
inc
stc
rcl
fcom
mov
imul
movs
js
jnp
cs
iret
sbb
cli
mov
repnz
inc
iret
xor
cwde
push
jbe
jo
clc
enter
data16
dec
cmp
mov
mov
les
xchg
fidiv
push
xchg
sbb
push
scas
sub
loop
push
push
jae
xchg
jno
cmc
shr
loopne
idiv
nop
mov
jp
sbb
cmp
dec
inc
sbb
push
pop
imul
jb
mov
dec
mov
and
xchg
mul
outs
sub
js
xchg
dec
shl
shl
adc
js
or
mov
push
sbb
sbb
cmp
jmp
outs
xchg
stos
jl
sub
add
in
and
popa
mov
fsubr
inc
sub
jns
xor
rol
inc
ror
mov
popa
in
in
sbb
xchg
xchg
pop
jo
test
test
retf
cld
inc
jmp
pop
mov
stos
mov
pop
mov
scas
shl
adc
mov
imul
test
test
or
push
mov
inc
jg
scas
rol
loop
mov
pop
or
jo
pop
mov
sbb
mov
lea
xchg
inc
jno
sar
nop
push
out
xchg
cmp
in
je
sbb
into
and
shl
fadd
loope
je
xor
xchg
call
dec
mov
fst
add
sub
and
sbb
test
mov
pop
clc
loope
sub
js
and
ja
push
jne
mov
repnz
stc
fld
cli
sahf
sahf
xchg
mov
xchg
push
sub
ret
test
dec
das
lods
pop
push
cmp
enter
jmp
test
sbb
shr
and
int3
dec
mov
xor
cmp
(bad)
data16
dec
cli
fadd
or
leave
or
shl
pop
into
enter
adc
cdq
jno
in
push
mov
mov
and
mov
call
test
in
mov
mov
xor
popf
adc
repnz
enter
pushf
dec
mov
ins
bound
(bad)
jmp
inc
and
aad
fbstp
lods
retf
call
jbe
bound
retf
mov
jmp
call
int3
jmp
xor
sbb
aam
jae
dec
jg
jae
jne
pop
xor
scas
mov
into
outs
jmp
pop
xchg
les
add
sub
jp
out
in
(bad)
gs
repz
inc
jno
adc
jp
ret
cs
sbb
int3
mov
sbb
xor
cwde
inc
test
mov
outs
mov
repnz
(bad)
sub
mov
movs
xchg
cmp
es
sbb
in
arpl
adc
pop
daa
icebp
nop
sbb
inc
xor
push
gs
fcomp
xchg
rcl
pop
(bad)
cld
shr
aad
jne
jmp
mov
inc
pop
out
aaa
call
pushf
mov
push
lock
xchg
pop
add
jb
or
jne
addr16
arpl
inc
mov
inc
cmp
daa
or
cdq
mov
mov
or
push
push
enter
or
pop
cdq
cmps
imul
add
jne
add
stos
and
pop
xor
popa
ins
jno
lahf
imul
int3
jge
mov
(bad)
nop
aaa
ins
dec
mov
mov
int3
xor
mov
add
push
fadd
xor
std
add
es
mov
ja
or
ror
enter
enter
iret
shl
push
mov
dec
add
xchg
mov
call
mov
pop
and
push
sub
loop
mov
lock
mov
sti
sti
scas
pop
jne
inc
mov
aas
mov
js
pop
mov
outs
jge
mov
dec
cmp
xchg
xor
and
call
push
pop
retf
rol
cli
lds
cmp
mov
cmp
jo
push
push
int3
lea
scas
sub
or
sbb
int3
out
add
add
or
sbb
mov
mov
jnp
jecxz
loopne
or
hlt
ds
cmps
xchg
test
cmp
jmp
jecxz
jno
js
imul
mov
cmp
cmps
hlt
outs
lods
into
or
jno
out
movs
je
mov
sti
je
outs
xor
repnz
into
push
jl
jecxz
push
mov
dec
cmp
adc
jg
(bad)
mov
jo
lock
scas
std
mov
adc
cmp
pop
int3
lock
inc
movs
push
xchg
stos
pop
cmp
mov
int
pop
lds
jecxz
or
lea
xor
test
mov
lea
xor
int
hlt
scas
inc
cmovs
and
int
add
retf
dec
cmps
pop
push
add
ficom
adc
push
adc
cwde
lods
pop
mov
cmps
aam
dec
cld
rol
je
fnstenv
leave
fild
jae
sub
pusha
sub
dec
clc
fcmovnb
loop
inc
scas
jb
or
xchg
add
dec
sbb
ret
xor
dec
jmp
popf
sahf
call
das
popf
adc
repnz
mov
jmp
loopne
popf
jbe
sbb
and
ds
call
arpl
push
cmp
clc
or
fdivr
pop
xor
outs
call
les
inc
lock
jo
loope
xlat
stos
call
push
repz
hlt
sbb
lea
mov
ja
and
shl
or
(bad)
in
jbe
xchg
leave
push
lods
lods
sbb
out
out
add
pop
pop
pop
in
cmp
mov
adc
xchg
outs
inc
mov
mov
push
iret
iret
outs
mov
not
jge
addr16
cdq
iret
jo
inc
inc
jae
sbb
mov
stos
mov
outs
imul
jb
pop
and
std
mov
addr16
sub
in
(bad)
push
jns
(bad)
bound
push
out
test
jg
pop
das
push
es
xchg
call
adc
cmps
cwde
js
int3
sbb
(bad)
shr
ret
jmp
mov
cmp
shr
scas
dec
adc
mov
pop
sbb
outs
jl
cmp
xchg
daa
imul
ins
push
cdq
ja
jg
out
(bad)
xchg
clc
jb
push
push
mov
push
mov
jo
and
(bad)
sar
add
add
fisttp
cmp
loop
cmps
fdivr
cdq
push
dec
jge
mov
js
mov
fisttp
outs
xor
adc
psubusw
pop
ret
aas
imul
jbe
dec
ds
pushw
xor
add
or
mul
fwait
jmp
das
sbb
icebp
adc
(bad)
and
and
adc
test
into
or
test
fcmove
(bad)
scas
js
retf
daa
ja
cdq
das
pop
inc
dec
or
test
(bad)
test
in
cmp
popa
hlt
mov
subps
imul
mov
dec
xor
sbb
push
mov
adc
cwde
jbe
push
rol
into
or
not
and
push
adc
ds
pop
stos
add
(bad)
cmp
call
jbe
scas
mov
xchg
xchg
xchg
sub
jns
and
xlat
xor
movs
sbb
or
aaa
pop
dec
mov
or
pop
jp
test
sbb
dec
mov
int
repz
pusha
pop
and
cld
adc
mov
mov
neg
xor
jns
fidivr
das
xor
enter
dec
cli
xchg
push
std
test
stos
xchg
pop
test
mov
cmps
push
inc
push
aas
stos
ja
mov
adc
fdiv
in
fcomp
ret
ror
dec
into
jl
and
(bad)
fs
cmp
and
rcl
dec
pusha
je
mov
aam
and
les
mov
cmp
nop
jge
sub
out
imul
repnz
dec
pusha
add
or
jnp
rol
inc
(bad)
jge
(bad)
sbb
dec
stos
scas
cmps
out
jbe
cmp
xchg
loope
mov
fild
rcr
and
jno
sub
push
out
xchg
xor
dec
in
js
mov
aaa
dec
ds
dec
lds
pop
mov
fmul
jnp
call
arpl
cmc
(bad)
loope
pop
pop
push
(bad)
out
fdivrp
pop
les
outs
clc
or
mov
dec
push
push
and
loope
sub
inc
xor
mov
repz
mov
fisttp
mov
mov
jle
and
sub
imul
mov
cwde
xor
jno
cmp
adc
out
adc
stos
xor
pop
pushf
movs
neg
adc
cmp
in
shr
sbb
(bad)
repnz
add
fdivr
fdivr
mov
je
cmps
call
std
mov
clc
mov
(bad)
mov
imul
out
fbstp
fmul
adc
stc
xlat
jbe
(bad)
and
push
mov
xor
lods
scas
shl
cmp
cmp
cs
pop
inc
xor
pop
hlt
xlat
cmp
sar
cmp
xchg
jno
clc
and
pop
add
push
ja
adc
inc
cwde
or
les
xchg
bound
mov
pop
ds
xchg
pushf
add
jae
repnz
cmp
out
bound
add
int
in
dec
adc
out
mov
mov
jecxz
and
inc
add
xchg
imul
pop
retf
arpl
ss
fcos
pop
loopne
loope
sub
(bad)
sbb
iret
call
add
mov
fstp
(bad)
out
mov
movs
mov
xor
xor
jo
xor
pop
test
adc
and
xor
mov
neg
lods
ins
lods
iret
sqrtps
push
inc
cli
xchg
jmp
jecxz
sub
xchg
sub
out
fsubr
sbb
jl
out
push
aad
adc
and
cli
mov
std
iret
mov
cmp
in
sbb
repnz
jmp
sbb
xor
cmp
mov
inc
test
pop
pop
ins
add
movs
aam
jbe
push
mov
lahf
cmp
mov
inc
mov
jo
outs
fwait
aad
out
and
mov
adc
inc
fistp
sub
sbb
mov
fwait
sbb
and
xchg
adc
mov
stos
imul
jg
scas
iret
iret
dec
rol
(bad)
ja
dec
push
sub
mul
mov
mov
gs
adc
adc
dec
cmp
adc
(bad)
sub
add
bound
ds
sub
jbe
outs
js
jp
lds
add
jmp
adc
lea
mov
dec
std
xchg
mov
nop
sub
pop
inc
pop
dec
loopne
lahf
jge
lahf
adc
xchg
stc
dec
and
movs
xor
mov
cdq
lahf
in
inc
scas
out
daa
and
push
dec
pop
int
gs
xor
mov
mov
mov
inc
mov
sub
sub
(bad)
pop
aam
(bad)
pushf
jae
adc
or
mov
inc
xor
je
push
ret
xor
mov
(bad)
cld
mov
es
push
(bad)
lock
fsub
stos
sub
das
mov
sub
cwde
cmp
inc
ror
in
imul
pop
jno
(bad)
and
into
inc
ins
or
lock
daa
scas
inc
test
int3
sub
and
(bad)
jne
sbb
fistp
mov
and
jbe
sub
jp
jno
into
pop
xchg
push
add
loope
jmp
mov
add
adc
mov
int3
cmp
loope
dec
xchg
cs
add
cmp
mov
inc
gs
xchg
mov
hlt
aam
xchg
mov
fstp
fmulp
sub
inc
jge
mov
jae
cmps
repz
(bad)
cld
jge
mov
out
gs
cmp
(bad)
fisttp
pop
mov
push
aas
mov
arpl
and
sub
mov
mov
add
imul
adc
and
mov
wbinvd
jae
xchg
dec
inc
(bad)
cmp
adc
mov
sub
inc
mov
push
pop
ret
je
mov
xor
pop
add
dec
repnz
push
int3
mov
fwait
je
jno
cmps
popa
(bad)
(bad)
sbb
jbe
cmp
sbb
jo
das
xchg
sbb
xor
(bad)
dec
sahf
jge
pushf
inc
out
jb
jmp
mov
lds
or
mov
inc
pop
retf
fwait
bound
xor
pop
pop
mov
mov
push
(bad)
sbb
xchg
lea
push
push
jge
mov
push
push
in
stos
cmp
fcmove
shl
pop
in
pop
sub
mov
add
outs
addr16
push
push
fsubr
js
ja
cmp
push
push
jmp
cmp
push
repz
add
fstp
imul
dec
push
imul
jmp
cmp
bound
mov
fdivr
in
shr
out
jmp
pop
push
add
fdivr
inc
mov
sub
adc
retf
pop
pop
jmp
int
div
pop
sar
jns
(bad)
aam
mov
sbb
cmp
cmp
mov
sar
fcom
adc
jns
mov
pushf
outs
icebp
xor
xor
mov
jge
mul
sbb
cmp
pop
addr16
mov
inc
fldenv
jmp
or
or
push
popa
mov
sub
inc
or
jmp
loopne
sbb
sbb
xor
and
cmp
iret
mov
jne
push
sub
daa
fnsave
outs
push
ds
ret
repnz
sti
(bad)
int
dec
jnp
(bad)
in
mov
addr16
fst
out
arpl
inc
(bad)
stos
sbb
pop
ss
loope
test
nop
xor
out
jnp
aam
cdq
jns
inc
pop
ret
jno
mov
mov
into
push
dec
or
pop
fld
jo
sub
xchg
rcr
and
bound
mov
mov
cli
leave
mov
retf
(bad)
retf
push
std
jbe
add
ret
in
pop
mov
mov
loopne
pusha
and
repnz
scas
pusha
inc
mov
dec
repz
lahf
push
cmp
xchg
int3
and
mov
ins
inc
ficomp
in
mov
mov
pushf
jns
fwait
mov
popa
cmp
or
ret
scas
adc
pop
xchg
add
into
xchg
sar
mov
dec
(bad)
test
inc
pop
loop
hlt
sti
xor
xchg
push
push
fsub
add
cmp
in
dec
scas
rcl
fcmovnbe
dec
aam
jl
and
adc
fidiv
lea
movs
adc
bound
or
fisttp
push
and
xor
in
cmp
mov
or
sbb
xchg
or
sub
jmp
push
lock
pop
xchg
push
sbb
outs
fsub
inc
sbb
mov
aas
lds
imul
dec
xor
div
scas
scas
bound
xchg
cli
adc
adc
xchg
and
and
retf
dec
sbb
stos
lods
sub
and
and
test
dec
and
add
and
daa
lods
mov
fs
ret
pop
sbb
cwde
movs
add
mov
lahf
pop
dec
or
pop
addr16
in
xlat
pop
loope
cld
sbb
aad
adc
fs
daa
in
mov
ror
and
les
ss
push
pop
sub
les
jl
cmp
cwde
aam
lock
ins
xchg
sub
sub
cmp
add
pusha
loopne
dec
mov
rcr
mov
retf
push
mov
sar
inc
dec
nop
cmp
rol
pop
and
add
mov
push
pusha
lds
sahf
call
fstp
or
jecxz
cmps
pop
int3
dec
jmp
pop
gs
test
lahf
sbb
das
call
leave
fdivp
aas
jb
ror
mov
mov
stos
pop
mov
jae
rcr
fidivr
xor
or
and
nop
cmc
cmp
inc
fild
shr
into
cs
mov
out
(bad)
cmp
pop
add
inc
push
(bad)
fnstcw
lods
test
inc
rcr
push
jnp
jno
in
dec
sbb
jo
sti
sub
mov
add
sbb
repnz
cmps
aam
mov
retf
and
pop
mov
cmc
arpl
imul
shl
retf
xor
mov
adc
test
leave
shl
push
pop
inc
mov
cwde
mov
mov
sahf
mov
and
(bad)
cs
inc
aam
bound
xchg
cmps
push
stc
shl
add
stos
hlt
cmp
adc
push
cld
inc
add
enter
mov
cmp
ret
in
xchg
inc
imul
xor
sub
push
inc
mov
jnp
cmp
pop
cmp
dec
add
into
pop
test
mov
add
dec
test
es
popa
rcr
mov
sahf
dec
(bad)
ficom
std
repz
scas
pop
test
mov
add
fild
inc
mov
sbb
adc
or
mov
pushf
pop
mov
fidiv
cmp
stc
xchg
sti
fmul
pop
mov
cmp
(bad)
and
addr16
outs
(bad)
retf
stos
pop
xor
cmp
push
(bad)
mov
or
mov
cmps
jecxz
ja
test
cmp
cmc
mov
mov
jno
jge
mov
xor
cmp
xchg
dec
ret
repnz
call
push
push
out
push
cld
stc
add
mov
jb
rcr
xchg
repz
adc
and
and
imul
jl
(bad)
fbstp
int
mov
adc
cs
mov
push
outs
fs
mov
loopne
cmp
imul
jb
mov
call
pop
(bad)
pop
or
stc
pop
mov
jnp
xchg
xor
xor
(bad)
sbb
stos
sbb
lock
mov
int3
pop
pop
xor
call
lods
inc
fnstcw
repnz
or
test
dec
cmp
or
push
sub
retf
cwde
cmp
int3
push
lea
std
adc
mov
aas
cld
dec
jg
push
sub
mov
mov
rol
cli
lahf
(bad)
jbe
sbb
adc
pop
inc
pop
mov
dec
gs
ins
add
cmp
jae
sbb
sbb
sbb
pushf
pushf
daa
cmp
xor
rcr
(bad)
adc
shr
inc
mov
and
sbb
xchg
xor
xchg
sti
fwait
cmc
and
adc
(bad)
push
add
jnp
dec
adc
or
rcr
fwait
inc
(bad)
cmp
xlat
push
aam
cli
xor
(bad)
and
xchg
ins
call
pop
cmp
lahf
iret
pop
in
data16
int
dec
add
hlt
cmc
add
sub
(bad)
fnstsw
lds
jecxz
leave
mov
sbb
xor
inc
push
(bad)
jbe
out
mov
sub
push
lahf
aad
mov
jnp
lock
add
push
outs
mov
inc
mov
lock
mul
xchg
xchg
and
rcr
mov
xchg
jg
inc
imul
in
push
call
pop
arpl
sub
jg
nop
fdivp
jno
in
pop
std
shr
add
popf
into
je
mov
pop
out
and
ins
lahf
mov
jbe
push
neg
rcr
xchg
cmp
les
xchg
cmp
ds
mov
ss
dec
sbb
mov
xor
dec
aad
mov
mov
jns
and
mov
sub
and
stc
sbb
imul
jae
int3
dec
sbb
(bad)
out
push
stc
iret
or
jno
(bad)
xchg
or
push
ds
addr16
xor
mov
xor
lods
popf
or
frstor
push
scas
lea
jnp
or
dec
in
add
inc
(bad)
fdiv
cmp
sbb
pop
mov
iret
ins
push
mov
sub
mov
fcomi
mov
xchg
and
or
mov
int3
mov
adc
fisttp
cld
into
sbb
dec
pop
dec
fstp
ret
cmp
scas
sahf
mov
push
stos
dec
mov
rol
xchg
adc
sbb
xor
xor
shr
jb
mov
jl
lahf
push
cmp
ret
inc
call
int
pop
jl
jne
dec
aad
out
fcomp
test
mov
imul
jmp
cmc
rcr
in
xchg
push
daa
(bad)
cdq
xchg
mov
shl
dec
adc
sub
out
mov
cmc
or
adc
xchg
bound
repz
ja
mov
mov
into
adc
xor
popa
add
pop
(bad)
add
pop
test
mov
arpl
adc
push
jb
or
xor
cs
lods
pop
cmp
imul
add
test
out
dec
std
xor
adc
je
jmp
xchg
cmp
cmps
cmp
sbb
inc
rcr
mov
adc
pushf
imul
fstp
iret
jnp
ins
or
mov
cmp
mov
test
sub
ins
jb
movs
jmp
mov
rol
in
mov
fcom
out
inc
into
movs
pop
lock
sti
mov
gs
mov
jl
or
add
repnz
xor
imul
pop
cmp
test
xchg
pop
in
jg
int
sbb
out
(bad)
cmp
fcom
add
arpl
jmp
lods
jp
xchg
cwde
add
sub
mov
fdiv
fldenv
aad
mov
repnz
mov
mov
aaa
lds
pop
pop
pop
adc
rol
mov
adc
std
and
inc
mov
fwait
in
pop
mov
mov
mov
ds
push
inc
test
lock
jp
lahf
cli
dec
(bad)
imul
fist
cmp
stos
gs
or
or
xor
bound
test
stc
stc
add
loop
das
loopne
stos
mov
ficom
jae
pop
push
cmp
das
in
push
jl
jns
out
imul
xor
add
scas
js
xchg
mov
or
int
push
jle
or
fild
cmp
adc
imul
push
add
shl
mov
(bad)
mov
sub
test
jb
lds
mov
jb
pop
dec
jne
mov
adc
in
repz
aaa
ret
retf
sbb
pop
mov
out
inc
sub
xchg
inc
mov
mov
movs
js
mov
test
mov
xchg
mov
(bad)
sub
jb
fild
fwait
and
push
test
adc
mov
call
xchg
movd
push
and
test
daa
icebp
rcl
aam
cwde
test
in
xchg
jnp
xor
ret
mov
es
jo
sub
push
push
mov
inc
mov
stos
cmps
jo
cld
mov
addr16
retf
inc
dec
cdq
gs
sbb
add
adc
pop
leave
sar
scas
add
fcom
lahf
or
je
sbb
adc
jmp
mov
push
iret
call
or
mov
pop
in
lahf
fadd
push
les
lea
cwde
mov
cmp
out
mov
xchg
ret
out
lods
cmps
movs
add
mov
push
outs
out
mov
push
inc
dec
pop
xchg
inc
inc
ds
sar
push
dec
xchg
loope
fdivr
mov
sbb
or
jl
cld
pop
dec
ja
inc
add
cmps
jmp
cmp
sbb
or
loope
sbb
aam
inc
push
cmc
popa
cld
lods
dec
ins
pop
loop
popa
test
xchg
mov
lods
je
loope
inc
ret
cmp
stos
out
cs
call
mov
stos
pop
jle
stos
dec
add
dec
imul
push
adc
scas
xor
sbb
mov
ret
mov
mov
mov
push
pushf
popa
sbb
pop
sbb
loopne
loope
jb
test
movs
push
movs
data16
sbb
scas
aad
cmps
lea
mov
js
mov
jecxz
aad
mov
mov
repnz
sbb
int3
push
lods
fadd
mov
sbb
xchg
scas
or
mov
push
lea
clc
xchg
xor
aam
sub
shl
sbb
(bad)
jns
mov
push
xor
inc
cld
lods
xchg
out
nop
push
dec
xor
jle
icebp
sbb
(bad)
retf
nop
ret
cmp
cld
movups
mov
call
imul
jno
(bad)
adc
rol
inc
stos
repnz
test
out
inc
(bad)
imul
or
dec
push
jle
mov
mov
lods
iret
xchg
and
mov
in
mov
push
bound
mov
inc
lods
adc
repnz
inc
cli
dec
sbb
push
mov
pop
loope
mov
sub
test
mov
nop
mov
lea
add
xor
jbe
inc
lods
push
stc
pop
and
push
add
dec
dec
fdivr
jnp
adc
add
out
jo
xor
mov
inc
sub
jns
push
ret
mov
outs
mov
fisttp
pop
push
and
(bad)
sbb
add
(bad)
je
int3
ret
mov
(bad)
dec
div
ja
cmc
dec
inc
mov
stc
(bad)
xchg
pop
adc
push
or
sbb
cmp
xchg
cld
rcr
mov
lock
lea
cmp
sbb
les
cmp
jns
rcr
sub
mov
mov
jecxz
sub
icebp
or
and
pop
or
cs
popf
pop
pop
or
into
call
stos
imul
jmp
call
xchg
xor
mov
(bad)
sbb
add
lea
dec
inc
test
xor
push
arpl
(bad)
mov
mov
fist
or
pop
pushf
rcr
sahf
sub
aad
pop
xor
xor
and
add
jns
inc
leave
mov
jg
dec
out
addr16
push
sbb
push
arpl
cld
test
inc
sbb
aaa
adc
mov
inc
pop
sbb
movs
jo
jmp
lds
iret
fnstenv
jns
jmp
inc
jns
aaa
clc
in
mov
inc
cmp
jmp
mov
push
pop
cli
xlat
jle
and
dec
(bad)
mov
xlat
daa
xchg
(bad)
xor
repnz
cmovae
arpl
mov
xor
jmp
mov
dec
cmp
mov
(bad)
adc
retf
or
ins
retf
pusha
jl
mov
lods
or
daa
inc
xchg
je
movs
mov
dec
sbb
cwde
rcr
cs
xor
aam
xchg
adc
cwde
push
scas
(bad)
sub
scas
(bad)
fst
ins
cs
sbb
dec
(bad)
jne
cdq
jecxz
sub
popa
sbb
sub
out
aam
ins
push
mov
fucom
sbb
jmp
push
xor
sbb
ins
es
push
sar
sub
adc
pop
cs
adc
outs
pop
sbb
pop
ins
daa
push
cld
sub
xchg
test
in
xor
xor
gs
test
ins
ins
shr
and
pop
dec
(bad)
push
inc
jl
add
stc
ja
outs
mov
in
mov
inc
xchg
cld
pop
inc
xchg
dec
sub
ret
add
jmp
and
and
(bad)
xor
mov
add
inc
sahf
mov
in
dec
outs
in
cli
in
mov
outs
pop
das
xchg
and
call
out
pop
or
test
mov
mov
xchg
cmp
ds
push
xor
sub
dec
xor
xor
xchg
leave
(bad)
pushf
repz
repz
and
jg
add
repz
fwait
xchg
jp
test
xor
and
adc
int3
adc
push
cmp
mov
adc
outs
mov
sub
dec
sub
xchg
pop
stc
jnp
shl
pop
mov
push
jno
inc
stc
and
xchg
push
cmp
sbb
add
push
jne
fisub
xor
aam
dec
repnz
cmp
cmp
adc
xchg
add
dec
jg
pop
(bad)
cmp
sub
add
sahf
adc
nop
jmp
movs
fdivr
call
xchg
and
jp
(bad)
jbe
or
xchg
jnp
mov
pop
fcomp
outs
nop
cmp
scas
outs
mov
lds
test
int3
je
retf
mov
aam
pop
lods
pushf
xchg
mov
cmps
cs
jp
pop
ins
daa
(bad)
mov
cwde
in
les
dec
dec
cmc
fist
call
mov
dec
call
call
addr16
mov
data16
lahf
adc
pop
in
pop
imul
inc
mov
inc
(bad)
jno
mov
in
push
fidivr
dec
in
(bad)
mov
ja
mov
push
cmp
aam
xor
sbb
leave
push
push
nop
mov
daa
xor
and
push
sahf
pop
movs
push
push
xchg
daa
jmp
rol
fdiv
dec
cmp
jb
dec
mov
sub
test
or
imul
repz
stos
loopne
mov
popf
jnp
jge
xchg
mov
shl
cmp
lock
int3
pop
mov
icebp
sub
mov
adc
pop
int
push
push
das
ss
push
dec
cmp
test
ins
xlat
addr16
xor
sub
push
in
jo
fisub
push
jno
inc
push
sub
sti
xor
xchg
mov
sub
aas
std
stos
dec
pop
cmc
(bad)
daa
inc
pop
dec
xchg
inc
cmp
ret
aas
adc
xchg
dec
cmp
cmp
rol
sbb
out
(bad)
(bad)
nop
mov
retf
fcom
ins
xchg
jge
lea
(bad)
jle
dec
xchg
lea
sbb
jbe
(bad)
mov
jecxz
mov
aam
(bad)
and
cmps
cld
lock
push
jo
jp
ret
stos
sub
lods
in
in
and
xor
push
jb
aas
lahf
dec
cmp
adc
or
jmp
sbb
iret
xchg
jnp
lahf
ds
iret
push
fcomp
aas
pop
sbb
add
out
sti
push
push
cwde
dec
mov
mov
xchg
scas
out
icebp
test
repz
test
clc
jmp
cmp
js
and
sbb
inc
retf
add
mov
inc
lods
test
clc
pop
pop
dec
push
ds
hlt
cwde
es
and
push
or
mov
sub
mov
scas
mov
cli
add
mov
lods
xlat
sub
mov
out
sub
push
cld
lods
shl
sub
mov
inc
cwde
dec
lods
cmp
sti
push
mov
je
sti
call
adc
pushf
test
pop
out
jmp
mov
fwait
pusha
mov
mov
lods
mov
fmul
into
xor
cdq
push
(bad)
mov
push
cmp
xor
xchg
icebp
mov
add
mov
mov
or
xor
rol
call
and
add
shr
sbb
or
mov
fldcw
or
call
xor
sub
ja
movs
sbb
mov
xchg
xchg
pop
sub
rol
jge
stos
sub
mov
sti
cmp
xor
add
call
jg
inc
addr16
push
ret
aad
mov
rcl
inc
push
push
into
(bad)
imul
fisttp
adc
stos
mov
xor
loop
scas
push
sub
add
fdiv
cld
xchg
add
ss
fld
mov
cmc
cld
pop
mov
shl
pop
in
(bad)
cli
dec
sub
test
mov
pop
jne
push
fist
retf
push
sbb
sahf
data16
sub
jl
rol
ss
movs
mov
pop
stos
nop
or
mov
pop
mov
cmp
ins
jl
jmp
mov
cmps
dec
pusha
js
scas
sbb
inc
push
pop
mov
sbb
and
rcl
or
jl
data16
jno
popf
(bad)
aad
dec
dec
dec
inc
mov
iret
test
in
test
push
cmps
out
pusha
cmc
iret
mov
inc
iret
in
cmps
adc
in
cmp
mov
sub
fsubr
adc
push
(bad)
fist
adc
and
sub
lahf
dec
add
xchg
js
mov
cmp
jno
mov
mov
dec
sub
enter
mov
call
lods
xor
and
mov
aas
jmp
pop
mov
cmps
pusha
pop
cmp
leave
jno
push
mov
or
in
fisttp
push
xchg
into
test
jge
ror
cs
or
fist
sti
das
sub
jp
push
les
js
xchg
stos
adc
and
mov
push
cmp
rcl
push
out
sub
inc
hlt
mov
ret
repz
inc
outs
mov
and
xor
inc
pushf
clc
aas
cmps
les
test
xchg
in
push
adc
scas
adc
scas
dec
push
jle
inc
push
lods
xor
ret
xchg
lods
ds
dec
xchg
je
pop
xchg
retf
mov
div
mov
jns
in
lds
sub
js
inc
jno
and
idiv
dec
inc
iret
mul
cwde
push
hlt
(bad)
out
mov
xchg
hlt
push
sbb
in
inc
inc
mov
pop
sub
idiv
ret
mov
jb
lahf
dec
cwde
addr16
cli
adc
or
mov
xor
ss
xor
cmps
out
fld
test
push
pop
fwait
or
push
cmps
cdq
ins
mov
push
call
les
adc
xchg
xchg
pop
pushf
mov
les
idiv
out
mov
in
mov
sub
imul
repnz
sub
ds
mov
xor
not
or
adc
ds
pusha
fwait
cmps
or
scas
nop
sub
push
jecxz
add
add
sbb
xor
pop
or
add
jnp
mov
sbb
adc
call
fild
jle
and
add
pop
sahf
pop
sti
xchg
sbb
jnp
pushf
pop
mov
xor
push
lods
stos
into
cwde
push
sub
sub
mov
test
cld
in
sti
mov
ins
xchg
jp
jne
mov
inc
imul
popf
test
pop
fwait
sahf
cmp
cmp
and
pop
mov
adc
sbb
(bad)
call
les
dec
retf
mov
in
push
jnp
inc
or
sbb
pop
jl
xchg
aam
cmp
scas
dec
pusha
fwait
aad
cli
xor
mov
imul
mov
out
jmp
jmp
cs
jbe
call
pop
outs
cmps
push
(bad)
dec
rol
sbb
cmp
test
fst
inc
mov
ror
dec
pop
ja
sar
sbb
dec
sub
inc
je
adc
fidiv
mov
mov
sbb
repz
sbb
push
mov
into
push
pop
cmp
inc
add
xchg
scas
push
loope
sub
push
mov
adc
scas
outs
mov
popf
setnp
or
adc
mov
dec
fldcw
sbb
sbb
fld
xchg
ret
mov
ret
mov
cld
mov
in
sbb
aad
cmps
sbb
in
adc
lods
mov
jo
out
retf
repz
pop
ins
jecxz
mov
mov
pop
mov
dec
sbb
dec
and
(bad)
aaa
aam
mov
retf
(bad)
xor
jecxz
mov
retf
inc
out
pop
rol
lods
mov
pop
cmp
add
es
mov
fcmovne
and
js
test
stos
jnp
push
sti
out
pop
or
or
repnz
mov
jecxz
sub
sub
jl
loop
mov
inc
xchg
clc
shl
fdiv
pop
in
cmp
push
sub
mov
add
mov
ret
retf
dec
adc
(bad)
lods
jmp
and
inc
(bad)
push
shr
mov
adc
jge
call
arpl
into
inc
sub
fcomp
dec
stos
pop
pop
inc
hlt
in
dec
jae
in
aas
lds
neg
dec
fcom
mov
call
mov
aaa
out
add
or
in
call
inc
jne
loop
push
iret
call
icebp
xchg
jmp
mov
es
sbb
loopne
jp
into
cmps
inc
ret
out
iret
(bad)
xrelease
and
imul
mov
xchg
mov
out
push
mov
pushf
lea
jmp
add
jbe
cs
stos
adc
and
mov
adc
xchg
jmp
outs
es
scas
mov
std
retf
lock
ss
jmp
pusha
ror
xchg
mov
pop
das
out
push
sub
xchg
in
retf
and
cmps
and
xor
nop
aas
loope
or
imul
add
ror
ret
jmp
sahf
(bad)
xchg
adc
push
hlt
cwde
sbb
cmp
movs
ins
(bad)
in
je
or
mov
sbb
aad
data16
out
sbb
mov
and
repnz
shl
add
mov
push
bound
adc
shl
retf
pop
aas
xor
(bad)
or
mov
pop
mov
leave
sti
jmp
mov
fmul
(bad)
jp
rcl
ret
jns
pop
lods
lahf
push
lahf
cdq
push
sahf
gs
cmp
in
fs
in
cmc
pop
add
clc
rol
mov
pusha
push
mov
jb
or
out
inc
adc
jo
imul
dec
ins
mov
xlat
retf
fs
repnz
jne
cli
nop
outs
push
popa
loope
dec
sbb
mov
ss
or
add
cld
lea
push
sub
retf
sbb
in
aad
ds
idiv
shl
cmp
fimul
mov
ja
cmps
rcl
or
sbb
add
push
sahf
(bad)
ins
(bad)
sahf
or
lea
push
and
xor
jmp
or
test
mov
std
jl
or
fild
mov
pushf
jb
test
(bad)
test
jmp
inc
addr16
xlat
inc
in
mov
dec
stos
jl
add
mov
pop
add
mov
les
data16
inc
mov
jp
inc
and
popf
jbe
fldz
iret
cs
fnstcw
addr16
or
mov
in
or
int
jge
and
mov
stos
loopne
ss
mov
and
sub
ror
mov
(bad)
repz
adc
out
inc
int
mov
mov
cdq
mov
out
es
cmps
push
pop
mov
sbb
sub
rol
dec
mov
int
jmp
sti
inc
sub
push
lock
test
fld
and
mov
ja
jns
leave
xor
jle
in
loop
inc
xor
or
mov
sub
sbb
push
xchg
iret
fidiv
xchg
ss
cmps
pushf
les
push
cli
and
rcl
jnp
jne
mov
mov
mov
ja
jmp
in
mov
jg
fcmove
mov
dec
popa
test
enter
mov
mov
rol
pop
xchg
ds
loope
nop
into
push
dec
into
fcom
test
dec
sbb
push
ds
fwait
or
ret
call
and
dec
iret
or
adc
rcr
outs
xchg
push
pop
or
sub
sbb
xchg
cmp
inc
test
mov
and
test
mov
(bad)
jno
fwait
push
out
sahf
fdivrp
mov
add
scas
pop
sbb
dec
pop
pop
fs
(bad)
mov
add
not
test
movs
aaa
mov
lds
outs
ins
pop
mov
lods
in
fwait
jb
jge
loop
mov
rcl
pop
lock
rcl
ret
pop
cmp
jge
adc
dec
jge
add
gs
jg
sub
in
stos
pop
and
cmp
mov
pop
clc
push
stos
add
pop
mov
(bad)
daa
lock
ins
js
sbb
xor
data16
dec
dec
dec
mov
popa
ins
lea
rol
cmp
mov
pop
push
in
push
push
jmp
mov
neg
loope
call
mov
cwde
nop
dec
ins
add
push
dec
jne
in
mov
fisub
cmps
adc
xor
xchg
(bad)
out
aaa
cdq
in
out
loop
xchg
les
jecxz
push
stc
int3
stos
fwait
add
mov
adc
pop
jle
jge
xchg
neg
cmp
and
ins
dec
mov
pop
sub
add
cmp
push
push
jmp
rol
fbstp
push
ins
(bad)
mov
into
mov
mov
loop
lods
lods
pop
popf
and
leave
add
jecxz
mov
sbb
stos
jg
pop
jnp
call
mov
jo
ja
and
inc
pop
and
daa
icebp
cld
or
or
sbb
icebp
(bad)
cmp
xor
lea
lock
pusha
lahf
mov
pop
inc
xor
pop
out
push
mov
mov
cmps
mov
sbb
adc
mov
mov
data16
popf
hlt
push
mov
sub
inc
cmp
jecxz
dec
js
stc
cmp
mov
xchg
enter
add
movs
add
inc
not
sub
add
jo
imul
out
adc
test
jb
xchg
fild
dec
mov
stos
ja
imul
mov
pop
xor
ds
in
mov
imul
cmc
jns
test
sub
mov
cdq
jb
repz
je
cs
pop
repnz
shr
cmp
out
sub
mov
shr
push
div
sbb
lahf
ror
add
sub
jno
cwde
imul
push
(bad)
out
sub
fdivr
add
push
cli
xchg
enter
ret
fisttp
xor
mov
cwde
(bad)
mov
inc
jle
push
(bad)
fldcw
ins
push
cld
dec
icebp
scas
addr16
add
or
pop
add
cmp
int
mov
fcmovnbe
and
fsub
test
enter
jl
mov
mov
xchg
imul
sub
and
cli
xor
xchg
jmp
repz
mov
vandnpd
adc
ror
(bad)
adc
jnp
mov
stos
sub
jl
dec
enter
adc
mov
or
cdq
xlat
xchg
aas
inc
mov
mov
shl
stc
dec
jns
adc
out
cmp
(bad)
and
popf
sahf
cmps
fs
lods
pop
jg
sbb
jp
movs
and
sbb
cwde
pop
sbb
inc
out
in
jl
scas
add
cmp
dec
dec
icebp
imul
stos
test
movs
(bad)
xor
push
movs
push
jmp
addr16
dec
arpl
fist
inc
add
hlt
(bad)
out
fstp
iret
fnsave
jb
les
jge
daa
mov
xor
shr
xchg
xor
rcr
pop
call
aaa
cmp
inc
clc
xacquire
dec
dec
pop
adc
dec
cmp
in
(bad)
or
inc
test
lods
and
push
or
imul
sbb
inc
mov
jns
mov
sbb
cmc
loopne
sub
ja
cdq
out
dec
sti
aad
ja
int3
mov
adc
push
jnp
and
cdq
sub
call
retf
enter
lea
pushf
lock
and
pop
push
sub
or
rol
scas
out
pop
push
or
mov
push
cmp
mov
ins
mov
pop
loope
or
adc
outs
dec
scas
imul
jp
jne
loope
cmp
imul
cmps
push
fisubr
adc
pop
mov
adc
push
jle
out
js
into
mov
fbstp
les
lock
hlt
lods
sub
add
cmp
add
(bad)
imul
adc
mov
ds
xchg
mov
lock
mov
pop
call
jmp
imul
and
xchg
jg
mov
cmp
es
aaa
jecxz
push
or
mov
das
test
cmp
mov
mov
dec
add
jbe
cli
and
and
and
out
ins
lock
jbe
das
mul
push
mov
sub
xchg
call
fdivr
mov
ja
fst
push
jp
movs
into
mov
adc
dec
repz
or
mov
cmp
mov
mov
mov
inc
or
dec
sub
cli
lahf
in
loop
sub
sar
cmc
outs
or
test
retf
fld
mov
jg
jmp
movs
daa
mov
mov
arpl
jo
punpckhwd
mov
xor
mov
loopne
mov
xor
push
dec
in
add
test
ins
cwde
call
dec
adc
mov
(bad)
aaa
lahf
std
stos
push
pop
jns
pusha
pop
loopne
repnz
cmp
pusha
bound
in
out
or
xchg
jle
mov
sub
pop
sub
mov
push
fdivr
cld
outs
div
sbb
xor
and
and
popf
cdq
push
pop
test
xchg
ds
add
dec
inc
pushf
mov
jg
inc
jne
movs
mov
jg
adc
sbb
inc
xchg
mov
xor
outs
sbb
push
aad
cmp
loopne
movs
jb
dec
or
jnp
sub
shl
pop
aaa
inc
fdivr
cwde
adc
fdivr
(bad)
xor
inc
push
mov
push
daa
mov
mov
hlt
jnp
push
pusha
xchg
adc
call
fcom
loop
rol
aad
jbe
mov
mov
ret
mov
pop
fcom
add
ss
push
std
call
or
cmp
retf
aas
mov
jmp
dec
and
pop
xchg
ja
jnp
adc
mov
xor
mov
pop
(bad)
sub
sub
xchg
add
icebp
mov
mov
dec
pop
std
out
inc
mov
(bad)
mov
dec
cld
jmp
iret
cs
and
sub
or
(bad)
cs
div
outs
mov
loope
pop
rcl
push
jmp
ds
and
scas
mov
pusha
inc
popa
mov
fs
in
mov
inc
fstp
outs
aad
sbb
lahf
mov
out
jle
cmc
mul
xchg
jb
pop
adc
jp
(bad)
inc
cmps
mov
jmp
sub
je
ja
scas
stos
scas
push
xchg
fisttp
sbb
lods
or
xchg
xlat
xchg
adc
fwait
xor
(bad)
mov
and
mov
add
jae
cli
pop
sub
clc
mov
jle
jae
cmp
test
pop
mov
add
dec
lock
cmp
shl
repz
lods
popa
lods
fnstenv
pop
or
cmps
clc
cmp
xchg
shr
add
and
dec
add
shl
in
(bad)
cmp
sbb
fdiv
jne
xchg
cmp
call
xchg
xchg
inc
(bad)
cs
xchg
and
adc
jbe
fld
cmp
jmp
fwait
scas
mov
push
pop
sti
into
pushf
shl
push
dec
or
mov
pop
int
cmp
dec
sbb
mov
cmp
jmp
ins
jmp
xor
xor
xchg
mov
jno
cmp
sbb
movs
mov
ins
es
xor
sbb
add
cmp
cmp
xlat
mov
popf
rep
mov
push
fucom
daa
les
dec
push
(bad)
fidivr
sub
cld
sub
hlt
or
and
sahf
lds
add
sti
cwde
push
add
(bad)
lds
xchg
jle
adc
mov
and
or
fdivr
adc
sbb
push
sbb
xchg
popf
add
xchg
push
fild
mov
dec
xor
inc
sub
jb
xchg
xor
mov
shl
mov
add
cmps
repz
hlt
not
cmp
fild
jle
xlat
movd
daa
(bad)
xchg
cmps
fldcw
gs
push
mov
fwait
je
aad
loopne
jecxz
mov
call
out
pop
push
stos
mov
nop
adc
jae
and
adc
jp
xchg
jae
xchg
ins
bound
and
xor
adc
sub
fs
pop
jae
scas
jle
loope
sahf
mov
jbe
dec
mov
and
cmps
jnp
imul
mov
mov
in
aam
hlt
jp
test
sbb
int
dec
mov
mov
add
fisub
inc
sahf
cmp
pushf
es
pop
inc
xor
pop
mov
jl
sbb
icebp
adc
add
or
dec
xchg
sbb
mov
adc
rcr
push
arpl
cmp
mov
bound
les
ins
xchg
dec
std
es
pop
mov
sbb
scas
fwait
lea
fdiv
ror
fnstenv
movs
push
stc
loop
xor
xor
jl
add
fsub
adc
out
scas
cwde
sbb
cmc
push
pushf
test
and
sub
repnz
mov
das
ficomp
icebp
xchg
sub
test
adc
pop
(bad)
stc
and
gs
cdq
mov
mov
imul
std
dec
cmc
or
mov
and
pop
dec
mov
pop
xor
ror
movs
clc
dec
jg
les
ins
(bad)
(bad)
in
and
das
rol
xor
fst
dec
stos
add
xchg
push
dec
cwde
sbb
push
data16
ds
pop
mov
xor
jl
shl
stc
sbb
dec
loopne
cdq
mov
cmp
add
leave
xor
inc
std
jge
dec
jl
cmps
mov
stos
push
push
bound
std
rol
in
iret
mov
cmp
pop
inc
fbld
mov
dec
or
popf
mov
lock
mov
inc
or
repnz
aad
call
push
inc
mov
mov
mov
jnp
das
xor
inc
jle
mov
movs
push
dec
(bad)
mov
sbb
(bad)
lds
cmp
ror
push
lahf
inc
cmps
adc
sub
sha1nexte
mov
pop
pop
les
(bad)
lahf
mov
in
mov
pop
push
xchg
add
mov
or
lahf
or
fucomi
and
pop
jmp
lock
lods
ins
jbe
adc
sbb
lea
jge
sub
cmps
stc
or
sub
rcl
mov
ret
retf
ror
lods
add
add
ret
sbb
add
sbb
mov
fadd
mov
(bad)
add
(bad)
add
jecxz
adc
mov
lds
sbb
popf
int
mov
sahf
or
push
sub
test
mov
fcomi
int
pop
fucomp
jbe
jmp
or
jg
sbb
xchg
fsubr
cwde
leave
es
je
inc
(bad)
jmp
(bad)
fdivr
fsubp
push
jnp
add
out
jne
fcomip
out
mov
fisttp
loop
jl
mov
inc
jns
outs
jbe
daa
inc
pop
iret
mov
inc
push
outs
inc
adc
cld
or
jo
out
popf
jmp
and
aaa
maskmovq
cmp
scas
xchg
mov
cs
mov
jns
and
(bad)
xchg
daa
dec
scas
cli
stc
cs
ror
and
pusha
sbb
rcl
jmp
fwait
lods
pop
or
inc
mov
or
add
push
dec
xchg
jle
addr16
cmp
cs
add
retf
in
in
into
adc
push
shl
dec
dec
sahf
daa
popa
mov
ins
mov
push
test
push
mov
jle
cmp
mov
add
or
pop
loope
xor
in
cld
inc
dec
xlat
pop
cdq
and
icebp
in
or
adc
stos
int3
mov
sahf
mov
jp
mov
rol
cmp
lea
jno
test
or
test
pusha
in
mov
cwde
and
push
mov
iret
stos
pop
(bad)
mov
jle
mov
aaa
or
add
mov
cs
add
test
mov
je
sbb
mov
lock
mov
outs
cmp
or
pop
sub
push
pusha
cmps
and
arpl
xor
mov
arpl
sub
lock
push
push
add
cli
leave
dec
out
inc
popa
mov
cmp
xchg
out
push
rdmsr
pop
fild
adc
sub
lods
in
sbb
mov
mov
std
rol
pop
stos
dec
bound
and
out
sub
sbb
(bad)
sahf
jnp
leave
loopne
in
pop
xor
sub
push
cmp
sub
or
sub
or
cmps
int
xor
inc
cmp
not
test
cmp
loope
aas
add
push
pop
mov
xchg
(bad)
mov
xchg
scas
fs
mov
sbb
and
cmp
sbb
popf
xor
mov
es
push
popa
repnz
(bad)
cmc
call
add
push
jns
push
shl
fwait
outs
ja
mov
cmp
dec
repnz
jl
push
in
aam
call
out
outs
aam
cmps
loope
sbb
sub
add
fld
call
movs
adc
movs
fiadd
inc
and
test
mov
jl
push
mov
jne
push
fidiv
ins
in
les
mov
sub
ret
in
inc
sbb
test
inc
jne
jns
pushf
mov
stos
fwait
pop
dec
out
and
test
dec
ins
push
cli
xor
mov
ds
push
xlat
adc
cmps
add
or
jbe
sar
out
mov
pop
fimul
mov
shl
test
fnstcw
and
xlat
dec
xchg
(bad)
mov
ret
call
pushf
mov
add
sbb
inc
aas
jmp
dec
pop
dec
or
leave
mov
jge
push
cmp
mov
sub
outs
mov
and
jl
aaa
shr
stos
aad
jge
sar
mov
pusha
dec
cld
or
test
mov
and
mov
(bad)
ins
add
sbb
fstp
dec
call
fdiv
mov
xchg
jae
xor
xchg
enter
mov
add
popf
xchg
push
jns
xchg
xchg
movs
sub
daa
fisub
cdq
ss
push
ret
imul
outs
push
stos
sbb
add
fimul
fwait
ins
sbb
mov
push
nop
(bad)
xchg
adc
neg
cmp
inc
rcr
sti
sub
jo
inc
lds
sub
dec
mov
pop
jle
int3
pop
rol
rol
cwde
pusha
mov
pop
loopne
out
stc
jno
cmp
inc
dec
test
inc
or
or
ror
sub
inc
xchg
dec
xchg
jge
iret
loope
aam
push
mov
jge
jno
xchg
out
push
rol
push
mov
sbb
mov
inc
lea
retf
outs
in
mov
pushf
add
add
push
push
cwde
xchg
(bad)
scas
out
cmp
sbb
fld
jmp
call
mov
ss
mov
xchg
xchg
sbb
jg
add
call
repz
loop
popf
scas
mov
lods
sbb
jbe
cdq
mov
ret
invd
pop
or
xor
pop
sti
data16
jmp
pusha
fst
push
xchg
jge
adc
jbe
sbb
adc
pop
mov
arpl
jnp
inc
iret
retf
addr16
push
movs
adc
xor
loop
xchg
in
retf
pusha
cmp
xor
pop
mov
fs
jmp
int
jnp
mov
lock
or
mov
jo
push
ficom
jmp
mov
push
xor
sub
call
lea
sbb
jmp
jecxz
ret
xor
fucomip
jo
(bad)
sbb
sub
jp
in
sbb
jmp
pop
gs
jg
scas
push
jo
retf
mov
jno
xor
sbb
sar
and
pop
test
fs
xchg
addr16
icebp
cmp
nop
mov
xchg
(bad)
cli
push
retf
sti
mov
mov
or
fldpi
lds
movs
sub
dec
push
addr16
enter
or
outs
mov
retf
push
mov
lock
mov
xor
inc
pop
mov
pop
stc
icebp
pop
sbb
dec
shr
jb
sbb
inc
inc
mov
jnp
jmp
sbb
bound
mov
jge
inc
inc
jp
dec
(bad)
in
int
fwait
jp
push
aas
dec
add
(bad)
in
adc
aam
xor
(bad)
arpl
pop
mov
pop
push
and
pop
add
cmp
(bad)
aad
aam
push
adc
add
and
inc
adc
cmc
xchg
aam
fiadd
push
loope
sbb
and
(bad)
aad
sbb
add
aaa
mov
dec
ja
xchg
fucomp
cmp
fwait
popf
stos
iret
adc
fsub
movs
daa
fsubr
xchg
pop
(bad)
in
sbb
push
inc
int
inc
push
lahf
sbb
xlat
leave
push
inc
mov
sahf
sahf
dec
inc
adc
sub
or
mov
in
jnp
sub
push
xchg
retf
push
ficom
cli
sub
or
fdiv
in
cwde
jmp
inc
adc
dec
pushf
adc
ud2
adc
adc
cmc
or
ins
aam
cmp
jmp
pushf
stos
mov
add
pop
aad
int3
rol
cmps
out
inc
and
pop
pop
ins
ja
(bad)
dec
jmp
aad
lock
push
hlt
inc
jmp
and
movs
out
(bad)
aad
cld
ss
repnz
loop
sub
push
mov
lds
ror
mov
dec
fistp
cli
(bad)
ficomp
jo
int3
cs
jnp
cmp
sub
call
and
call
pop
xchg
jp
repnz
xor
pop
pop
(bad)
int3
xchg
fcomip
(bad)
mov
data16
add
adc
sub
xchg
pop
xor
cmps
mov
cmc
(bad)
fs
dec
jbe
inc
dec
jmp
loope
mov
jb
in
xchg
enter
int
int
ss
cmp
jnp
scas
dec
sti
scas
jnp
shl
dec
cmp
sti
adc
mov
jne
push
loopne
fsubr
mov
call
push
aad
js
leave
imul
or
sub
sub
adc
retf
jne
lahf
jb
imul
pop
std
stos
cmp
pushf
cwde
and
and
jmp
stos
adc
inc
pusha
jp
in
ja
imul
jne
jb
sbb
rcr
or
leave
ins
pop
xlat
push
ja
mov
cmp
outs
cvtdq2ps
icebp
dec
mov
or
ds
inc
dec
xchg
loop
(bad)
xor
std
mov
(bad)
push
cmp
fwait
scas
nop
and
or
in
lock
xor
es
int
cs
mov
push
out
xchg
mov
stos
sbb
int3
sub
pushf
xchg
add
lds
sti
jne
sti
dec
xchg
mov
inc
outs
bound
jno
rcl
loop
repz
scas
ds
jb
call
sbb
movs
push
in
mov
inc
or
jb
test
clc
sbb
and
sbb
fnstsw
xchg
sub
int3
lods
(bad)
fiadd
loope
scas
fs
mov
psubsb
push
adc
sar
xchg
pop
mov
out
xlat
loopne
pop
and
cli
mov
pop
and
sub
and
dec
or
xchg
dec
or
sub
add
sti
xor
xchg
sbb
cmp
xchg
xchg
(bad)
xor
je
dec
pop
inc
mov
outs
push
test
jnp
mov
idiv
and
aad
mov
inc
dec
sbb
pop
sbb
pushf
adc
(bad)
popa
push
ss
int
repnz
and
ror
push
or
dec
sbb
idiv
inc
and
mov
call
mov
lea
loop
cmp
mov
cli
jle
scas
xchg
pop
test
getsec
cmp
fiadd
xor
push
or
lock
in
add
add
add
iret
jl
xor
push
mov
dec
dec
lds
clc
push
leave
push
jae
add
mov
and
ins
nop
fnstcw
leave
mov
xchg
xchg
sahf
dec
iret
jl
mov
xchg
clc
shr
sub
lock
jns
jg
or
dec
(bad)
xlat
lahf
mov
das
mov
pusha
retf
and
mul
inc
jle
mov
push
in
outs
lahf
imul
rcl
sbb
fcom
in
bound
mov
jle
mov
popa
inc
out
push
bound
xchg
jp
pop
lods
push
cwde
frstor
ja
or
cmps
jo
mov
mov
pop
dec
jmp
or
(bad)
push
cmp
pop
outs
dec
inc
cmc
imul
out
push
nop
rcl
push
cmc
popa
bound
in
ja
push
sar
pop
inc
stos
or
test
dec
dec
mov
call
imul
sar
or
sub
pop
jmp
out
int3
mov
inc
movs
dec
mov
cmp
or
add
sub
push
imul
les
nop
or
sub
lds
dec
in
or
bnd
inc
xchg
mov
arpl
cdq
and
add
popa
imul
push
pop
mov
nop
mov
add
pop
sbb
push
jp
(bad)
aas
add
mov
fs
pop
mov
aaa
es
inc
mov
sti
pop
cmps
pop
mov
fldcw
mov
fimul
fld
loop
sbb
pop
(bad)
xor
pop
mov
test
inc
xor
leave
mov
loope
nop
mov
lods
pushf
jg
cmp
lods
jmp
mov
and
je
mov
inc
push
mov
jno
sar
mov
jmp
aas
in
mov
mov
fisub
sbb
inc
stc
mov
out
sbb
cmp
mov
xchg
cmp
xchg
shl
dec
dec
hlt
xchg
setle
add
push
pop
jmp
cld
sub
sbb
pop
jmp
lods
inc
xchg
adc
(bad)
xchg
push
fs
mov
pop
mov
das
fs
call
mov
cmps
sar
popf
scas
and
pop
push
jmp
or
pop
dec
into
cmps
dec
add
imul
clc
popf
xor
cwde
ds
ficom
stos
xchg
add
push
push
push
push
test
jle
aas
fsubr
xchg
int
cwde
inc
mov
int
adc
pop
sub
cli
popf
sbb
arpl
scas
nop
(bad)
push
or
dec
sbb
mov
mov
add
cmp
add
pusha
data16
or
cmp
scas
(bad)
nop
xor
mov
repnz
rcl
jecxz
jecxz
ja
(bad)
push
xchg
nop
bound
mov
or
repz
outs
fcomip
lods
std
add
rol
shr
(bad)
mov
scas
add
xchg
cli
inc
imul
mov
sbb
pop
push
mov
adc
sub
sub
iret
pusha
test
cmp
in
int3
ror
sbb
bound
lods
rcl
bound
lds
test
adc
loopne
cld
inc
sub
cmps
jns
pop
fwait
mov
retf
push
cwde
retf
retf
jge
in
into
mov
dec
jne
movs
mov
mov
mov
ud2
into
aas
jmp
cmp
scas
arpl
mov
mov
mov
dec
cmp
ss
dec
add
stos
xchg
lar
jg
xor
pusha
int3
xchg
push
cmp
sar
or
adc
bound
mov
inc
jnp
aaa
ffreep
cmp
xchg
outs
add
test
movs
jmp
nop
jbe
dec
xor
enter
mov
mov
outs
xlat
sub
inc
pop
mov
jg
sub
scas
xor
arpl
stc
cwde
mov
add
fsubr
xchg
out
scas
jno
jmp
pop
dec
add
hlt
dec
ins
rcr
es
add
in
frstor
arpl
sub
in
ins
ret
repnz
mov
iret
daa
cmp
push
push
jbe
(bad)
jno
mov
inc
call
or
in
mov
repz
repz
nop
xchg
hlt
sar
les
mov
adc
push
sbb
ret
comiss
out
loop
test
icebp
(bad)
sbb
loopne
(bad)
das
xchg
sbb
int
ret
or
sahf
in
xchg
lock
jle
test
arpl
cmp
scas
in
inc
hlt
jno
aaa
mov
mov
nop
scas
add
and
repz
arpl
lods
xchg
loop
pop
mov
shl
cmp
loope
xor
call
mov
dec
jp
push
retf
mov
pusha
sbb
fstp
push
shl
push
push
imul
loop
(bad)
pop
imul
lods
jbe
mov
mov
jg
mov
pop
inc
dec
dec
scas
mov
sti
jns
adc
jns
add
stos
shr
add
call
cdq
sub
sub
fwait
xor
or
add
jmp
int3
test
mov
daa
sbb
cmps
mov
(bad)
out
in
jnp
pop
xor
add
hlt
push
cwde
dec
xlat
dec
pop
fdivr
push
cli
pop
loop
and
sahf
jb
(bad)
aad
push
adc
sub
pop
lock
pop
inc
cdq
mov
push
adc
fidivr
(bad)
dec
jmp
shl
or
fmul
sbb
mov
xor
xlat
enter
lods
mov
mov
jecxz
dec
or
adc
mov
pop
add
mov
sub
mov
arpl
dec
sub
imul
dec
loope
clc
xchg
movs
xchg
test
mov
lock
sahf
imul
inc
aam
daa
jmp
out
or
pop
xchg
pop
and
es
hlt
aad
mov
das
lds
ja
icebp
xchg
mov
jbe
add
ficom
push
dec
ins
retf
push
adc
sub
pop
arpl
pushw
xchg
and
or
ins
jl
adc
adc
dec
fidivr
sbb
cdq
xchg
and
adc
xlat
jne
dec
bound
pop
adc
inc
aaa
test
dec
fist
push
jno
adc
xor
add
push
sbb
imul
jg
ins
dec
imul
sbb
clc
cmp
fnstenv
fwait
ret
inc
test
jns
jae
(bad)
mov
hlt
and
into
add
or
mov
jecxz
outs
jg
fdivr
repnz
cmp
cmp
outs
xchg
push
repnz
fidiv
jmp
mov
jbe
in
mov
cdq
aas
add
mov
call
movs
dec
mov
rcr
xchg
mov
mov
mov
adc
or
lds
xor
add
pop
stc
adc
int
scas
pop
pop
repz
les
push
lods
and
mov
lahf
cmc
and
sub
inc
inc
xor
fadd
or
jne
outs
out
daa
hlt
es
inc
pop
jno
and
mov
push
cs
out
pop
ins
mov
ror
or
xchg
dec
jb
fbstp
jb
push
aad
fwait
push
push
sub
mov
fisubr
ja
lods
test
sbb
std
outs
sbb
adc
aaa
out
cmps
dec
int
fstp
mov
call
jp
lods
and
test
push
ins
ret
cmp
mov
in
or
mov
ffree
dec
je
ret
test
or
or
je
xor
mov
in
nop
push
repz
je
es
mov
sub
rol
jecxz
xchg
or
mov
fisubr
push
scas
pop
mov
add
cmp
int3
xchg
mov
mov
add
xor
dec
cli
out
add
mov
in
and
and
cli
das
pop
cmp
fcomp
dec
ficomp
aam
dec
dec
ins
mov
(bad)
test
inc
dec
mov
loope
and
je
movs
cmp
cli
cli
cld
arpl
mov
pop
mov
in
mov
jbe
add
sbb
cdq
jnp
(bad)
xchg
pop
sub
sub
fwait
movaps
iret
xor
(bad)
pop
loope
in
add
add
lahf
fs
js
sahf
les
mov
cdq
pop
and
sahf
xor
clc
rol
pushf
jecxz
(bad)
into
and
je
dec
pop
ror
pop
out
add
xor
dec
into
push
call
sbb
sbb
outs
pop
cmp
and
shl
adc
outs
das
pop
push
icebp
dec
jne
xchg
dec
xor
imul
add
push
mov
(bad)
dec
mov
int3
push
sar
inc
lods
imul
push
jo
xor
mov
shl
lds
or
pop
fidiv
dec
cmp
xor
mov
inc
add
mul
xor
arpl
mov
cli
dec
ror
pop
data16
cmp
loope
sub
mov
out
jp
and
mov
rol
shl
out
mov
psubusw
jmp
in
adc
cmp
xlat
jle
inc
dec
push
idiv
out
mov
shr
es
mov
retf
jge
call
aad
cmp
xchg
push
es
pop
arpl
inc
push
(bad)
outs
addr16
fidiv
mov
(bad)
xchg
in
sti
clc
sbb
sbb
sub
rcr
aas
add
loopne
loopne
cmps
mov
stos
(bad)
adc
push
dec
and
cdq
mov
jl
pop
cmp
test
js
xchg
xor
lahf
bound
jae
jle
mov
call
jmp
int3
xor
std
movs
(bad)
sbb
mov
or
sub
push
add
loopne
cli
add
mov
xlat
jo
dec
nop
loopne
aad
inc
dec
or
sbb
frstor
jg
shl
and
out
aaa
ins
stc
or
xchg
inc
leave
loopne
test
jge
fidiv
pop
cs
lods
pop
aad
dec
in
mov
xchg
ret
rol
arpl
or
pop
es
and
jnp
int
jge
mov
mov
sahf
imul
lds
jae
(bad)
jb
push
jne
rcr
fwait
push
push
ja
(bad)
mov
test
mov
jmp
or
ds
clc
lds
popa
inc
adc
rcr
add
shr
fild
rcl
mov
fsub
(bad)
mov
fstp
sbb
je
mov
daa
stc
mov
lds
inc
sbb
pop
sar
pop
mov
adc
add
nop
xchg
sbb
sbb
mov
or
aaa
call
ret
mov
sub
xor
rcl
push
dec
xor
mov
mov
mov
jno
jp
jmp
mov
dec
(bad)
cmp
rcr
movs
and
cli
sbb
mov
mov
(bad)
add
out
dec
rcr
sbb
scas
xchg
ret
pop
sub
adc
call
ss
mov
mov
enter
mov
mov
cwde
or
push
xlat
in
jno
test
pop
pushf
sbb
mul
push
and
test
ret
mov
xlat
push
sub
jg
adc
and
mov
inc
mov
(bad)
sub
or
in
mov
pop
test
or
repnz
out
jb
push
js
cmp
fldenv
inc
inc
loop
outs
(bad)
adc
mov
mov
jmp
xor
movs
mov
aaa
sahf
fstp
mov
adc
mov
mov
dec
cmps
sbb
loop
dec
mov
mov
mov
cmp
mov
mov
loopne
or
je
jb
shl
movs
mov
xchg
xor
jle
cld
adc
add
push
jl
dec
data16
ds
dec
rcr
push
dec
mov
pop
mov
adc
sub
xchg
into
call
xor
(bad)
jae
xor
(bad)
pop
or
cmp
in
data16
aad
or
push
jb
or
call
aaa
scas
pop
sub
jg
cmp
mov
push
nop
stos
and
pop
dec
mov
jns
inc
sar
mov
and
loopne
popf
dec
or
xlat
cdq
adc
lock
dec
mov
je
xor
adc
clc
and
push
mov
stc
pop
pop
jo
xor
mov
loop
inc
mov
add
adc
faddp
jno
mov
xchg
sub
(bad)
aas
fist
mov
jmp
or
dec
fs
(bad)
cmp
out
jo
dec
aaa
dec
iret
xor
lock
ja
lahf
or
mov
sub
lds
out
inc
adc
add
cs
mov
fidiv
je
ds
cli
scas
mov
mov
add
in
cld
pop
sbb
inc
or
ror
bound
pop
test
fld
and
xor
ret
jge
mov
fnsave
int3
scas
neg
jl
or
mov
xor
sub
jb
and
fiadd
loop
cmc
add
pop
xchg
inc
pop
push
fmul
icebp
jg
pop
rol
out
ret
adc
jno
add
call
jbe
mov
in
aam
(bad)
or
fnstcw
mov
adc
cmp
mov
dec
int
mov
mov
add
mov
sbb
out
inc
gs
sbb
sub
loop
mov
xchg
mov
clc
mov
jne
ret
push
dec
sub
movs
stos
jmp
pusha
(bad)
repnz
cdq
inc
push
xchg
outs
and
cmp
jo
repnz
inc
sub
ret
jg
std
add
or
pop
sbb
fcmovnbe
pop
and
pop
and
scas
inc
ja
imul
clc
(bad)
push
inc
pop
sub
xchg
xchg
xor
jno
aas
jae
ds
fucomi
ss
jne
fs
sub
(bad)
lods
mov
or
scas
cs
xchg
sbb
cmp
adc
dec
aas
adc
mov
add
fnstenv
push
jmp
ficom
jo
call
mov
pop
mov
push
sbb
cmps
ss
addr16
rol
add
inc
inc
scas
addr16
xor
sbb
dec
(bad)
into
push
das
fidiv
inc
inc
xchg
ins
push
xor
(bad)
push
jmp
pop
pop
xor
in
hlt
adc
jp
mov
pop
inc
pop
inc
mov
retf
jnp
and
sub
cmp
cmp
mov
add
(bad)
retf
dec
(bad)
leavew
mov
jl
xor
xchg
sbb
xchg
dec
mov
lahf
or
aaa
pusha
out
and
push
(bad)
pop
jb
(bad)
into
pop
pop
push
fiadd
call
in
in
inc
adc
pop
dec
cdq
or
fsub
sbb
xchg
mov
mov
pop
loope
fstp
imul
fnstenv
loopne
mov
jge
jle
adc
or
adc
fdiv
std
push
adc
imul
mov
sbb
jbe
pop
scas
mov
sbb
or
dec
les
rcr
mov
pop
jae
out
ds
(bad)
jmp
cs
fiadd
mov
mov
sar
out
jl
push
sbb
or
fs
rcr
dec
push
jno
cmp
xor
jg
nop
jno
push
sbb
cli
movs
jo
outs
add
mov
push
mov
push
test
sti
stos
rcl
sbb
pop
push
es
or
dec
jle
xor
bound
out
and
rcr
scas
arpl
dec
inc
(bad)
data16
push
stc
imul
pop
or
mov
call
push
addr16
daa
cs
mov
outs
lods
scas
xchg
outs
dec
sub
bound
dec
inc
push
add
imul
idiv
mov
popa
test
mov
xor
xor
mov
sti
xchg
push
movs
cmps
aad
lds
push
loopne
test
mov
mov
inc
sti
in
fs
mov
cmps
mov
dec
jae
mov
(bad)
out
outs
jo
scas
ror
retf
and
(bad)
pop
clc
sbb
in
bound
stc
std
mov
mov
stc
jmp
jmp
mov
inc
cmp
imul
mov
pop
mov
sbb
mov
hlt
gs
not
jmp
les
out
rcl
jbe
dec
or
xchg
inc
nop
jg
dec
ss
pop
cmps
(bad)
fwait
mov
jge
cmp
das
dec
(bad)
jmp
outs
push
adc
call
cmp
hlt
cwde
pop
repz
jnp
xlat
xor
loope
and
jb
mov
ds
sub
cmp
loopne
or
add
adc
cdq
mov
mov
lods
iret
mov
pop
dec
out
stc
lea
repz
inc
aas
mov
adc
dec
pop
mov
ins
and
inc
mov
repz
mov
xor
fbld
lea
adc
mov
or
cmps
mov
push
xlat
cs
int3
mov
loopne
adc
in
jnp
ds
mov
loope
mov
dec
or
fwait
jle
loop
inc
xor
enter
movs
into
into
bsf
imul
pop
and
dec
mov
dec
push
dec
cmp
stos
or
dec
push
lods
ret
push
(bad)
or
cwde
shl
and
cs
xchg
icebp
dec
mul
cmp
or
rcr
test
in
inc
pop
sbb
mov
jne
pop
xchg
aas
jg
shl
int3
sti
add
inc
je
xchg
dec
inc
inc
scas
mov
fcomip
pop
pop
push
in
outs
lods
push
test
popa
cld
cwde
call
dec
stos
xor
jne
jmp
add
loope
push
ss
or
retf
ret
out
xchg
mov
ins
adc
jge
push
mov
pop
inc
retf
(bad)
mov
out
add
adc
addr16
inc
mov
ret
repnz
add
test
jg
inc
jno
test
outs
sub
dec
lahf
in
and
jecxz
push
push
mov
dec
in
or
push
push
stos
retf
sub
push
loopne
movs
imul
sti
xor
sbb
adc
cmp
adc
hlt
pop
mov
jl
sub
pop
fstp
sub
push
or
jne
push
add
push
inc
(bad)
and
repz
push
mov
pop
jmp
xchg
loope
mul
fmul
retf
cs
adc
jo
add
mov
xor
jmp
mov
jp
xor
dec
xchg
scas
xchg
sahf
mov
xor
stos
ins
js
xchg
mov
sub
stos
stos
add
nop
pop
mov
sahf
push
dec
dec
cmp
loop
cmp
jns
xor
movs
push
psrlq
mov
adc
xchg
jl
pusha
(bad)
test
mov
rcl
mov
push
mov
push
pop
or
sub
(bad)
add
lods
movs
retf
aam
ins
sub
add
out
fdiv
mov
jmp
fisubr
fcom
sbb
push
inc
pushf
push
je
idiv
test
lods
xor
ins
add
in
addr16
out
sti
inc
adc
not
mov
mov
scas
(bad)
call
in
jl
ins
cdq
sbb
push
mov
not
test
push
mov
mov
cld
inc
mov
sub
cmp
fldcw
xchg
mov
mov
and
call
jns
dec
xchg
mov
clc
fcmove
je
cmp
adc
ror
mov
out
and
pop
push
ins
fnstcw
into
jo
and
jne
retf
mov
xchg
pop
mov
lock
jl
sub
std
test
or
test
mov
inc
xchg
(bad)
in
xor
lds
ss
jp
icebp
pop
leave
or
mov
mov
xchg
adc
in
stc
nop
push
addr16
dec
leave
and
call
mov
cmps
jnp
arpl
repz
movs
xor
cld
sbb
cli
adc
in
rol
cld
or
retf
adc
push
mul
xor
jo
cld
addr16
and
lods
loope
xor
or
push
aaa
add
sub
push
lea
ficomp
fnsave
inc
test
data16
jle
mov
and
bound
add
pop
push
out
call
pop
in
pop
aad
ja
cs
push
cmp
dec
mov
xchg
(bad)
mov
clc
popf
retf
add
adc
(bad)
fcomp
ins
stos
inc
imul
enter
add
adc
daa
and
imul
ja
mov
rol
fcmovnbe
dec
dec
add
mov
push
inc
dec
mov
cwde
xlat
fimul
test
push
add
ss
test
push
je
stos
jmp
icebp
lock
fild
popf
in
lea
cmp
push
add
xlat
push
out
xchg
jb
xchg
push
cwde
push
xlat
(bad)
xor
movs
repz
mov
or
test
adc
fucomp
je
mov
mov
mov
ds
aam
sbb
cmp
inc
push
mov
add
xor
scas
in
fs
or
clc
mov
(bad)
imul
xchg
mov
ror
xlat
xor
das
and
bound
enter
fcomp
scas
xchg
idiv
mov
aad
enter
aaa
call
dec
cmps
(bad)
push
xchg
test
jl
fisttp
mov
or
mov
adc
sbb
(bad)
ja
jmp
or
cmps
scas
push
add
cmp
dec
adc
xchg
emms
lods
push
rcl
ret
or
stos
and
mov
jmp
scas
jmp
jmp
lock
mov
pop
and
inc
pop
sbb
xchg
dec
cmp
test
sub
push
xor
inc
inc
pop
mov
call
pop
mov
sbb
mov
dec
mov
cwde
cdq
pop
stos
pop
(bad)
sub
lds
fs
mov
add
sar
std
movs
sahf
and
jae
movs
jo
xchg
hlt
jecxz
fwait
cmp
mov
pop
(bad)
jae
(bad)
out
(bad)
mov
stos
sbb
jne
fcmovb
movs
es
xor
loope
stos
cmp
xchg
sub
sub
inc
inc
cld
push
jmp
ret
(bad)
(bad)
popa
xor
inc
ds
sub
retf
aaa
repz
rol
pop
cmp
fs
xchg
mov
pop
lea
cmp
sbb
xchg
test
sahf
in
rcl
xor
in
add
xlat
(bad)
loopne
fldln2
dec
aaa
push
fnstcw
sahf
jg
add
retf
test
add
clc
xchg
cmp
xor
outs
mov
hlt
sbb
dec
scas
je
aas
cli
in
(bad)
sub
or
fistp
adc
xor
mov
jecxz
fxch
cs
and
push
sub
ja
call
xchg
push
repz
out
movs
push
les
cld
lahf
xchg
jno
cmp
out
mov
inc
in
push
inc
je
icebp
mov
sub
cmps
push
cmp
cld
call
inc
or
cld
push
xchg
leave
xchg
lock
xchg
pop
adc
jge
and
call
inc
or
mov
fstp
or
mov
adc
loopne
mov
mov
cld
jp
lahf
mov
stos
cs
pop
push
lods
mov
ins
mov
sbb
stos
cdq
in
xchg
lods
(bad)
call
cs
shr
push
cmps
lock
sub
push
mov
cmp
ror
fist
cld
movs
add
call
dec
das
and
scas
fcom
sub
mov
imul
add
mov
lds
xchg
sahf
pop
lods
popf
in
or
in
adc
into
test
ffree
sub
mov
pop
xchg
hlt
fdivrp
add
jns
and
test
xlat
pop
sbb
mov
jno
imul
jge
jns
rol
xor
and
outs
lods
leave
hlt
mov
stos
icebp
sbb
bound
adc
jae
cmp
into
push
dec
jge
add
lahf
out
cmp
mov
(bad)
(bad)
or
mov
repnz
pop
mov
loope
mov
lahf
cld
add
fwait
adc
(bad)
ins
bound
mov
aam
dec
or
push
jno
fnstenv
nop
jae
inc
cmp
xor
dec
addr16
out
mov
push
cmps
ret
call
xor
mov
scas
cld
jno
addr16
mov
xchg
mov
push
test
sbb
ins
mov
lds
mul
adc
mov
rol
std
xchg
js
dec
jo
lds
ret
imul
call
fsubr
sub
shr
xor
mov
or
fstp
ret
jnp
leave
push
ins
sub
xchg
xchg
mov
xchg
imul
xchg
scas
or
mov
in
jmp
mov
and
ds
mov
pop
in
fisttp
sub
pop
iret
xor
add
adc
add
in
ins
inc
xchg
sub
(bad)
cmc
ins
dec
into
(bad)
add
je
jecxz
sar
cwde
repz
mov
cmc
add
out
pop
lods
xor
jge
daa
pop
test
sbb
mov
call
iret
retf
jle
lds
xchg
lea
cmp
and
push
pushf
ret
and
fcom
enter
stos
ins
fldcw
mov
sbb
bound
jmp
je
loop
xchg
loop
fld
out
jle
push
xor
retf
jae
sbb
clc
xor
(bad)
xchg
inc
add
inc
push
mov
hlt
xchg
cli
and
dec
test
test
pop
aas
stc
sbb
xchg
ret
shl
pop
push
add
ins
ror
rcr
push
push
adc
int3
push
mov
int
bound
popa
jns
loopne
nop
call
xchg
retf
repnz
(bad)
push
pop
sbb
stos
rol
sti
mov
ss
xor
shr
mov
adc
cdq
xchg
jnp
add
cmp
xor
retf
pop
faddp
js
pop
push
mov
sahf
fs
push
mov
cmp
popa
imul
cli
nop
test
jp
lds
inc
dec
xchg
inc
out
in
mov
sbb
adc
jecxz
xchg
lahf
cdq
pop
fadd
or
test
out
push
push
test
mov
sbb
test
movs
lock
xchg
pop
xor
leave
cmp
jno
push
ja
dec
(bad)
es
or
cmps
dec
push
mov
scas
call
shl
add
mov
xor
ret
test
push
pop
jns
mov
(bad)
mov
ins
sub
adc
jno
hlt
jecxz
shl
movs
push
in
sub
(bad)
int3
js
push
jle
lods
jmp
mov
jae
jmp
inc
ds
xor
jge
lea
call
mov
jbe
add
test
jo
hlt
ins
adc
js
out
or
cmp
jmp
fist
ror
cmps
cvtdq2ps
mov
cs
xor
imul
fld
dec
jnp
lea
xchg
mov
cwde
popf
or
sbb
fstp
pop
inc
stos
cmp
test
push
pusha
movs
push
mov
imul
xchg
fbld
push
stos
ret
retf
jns
mov
sub
jl
test
inc
leave
inc
xchg
or
xor
sbb
aas
aas
cmp
aas
sar
shr
xchg
push
push
ror
xchg
ins
lds
jnp
xchg
movs
ins
mov
shl
jp
(bad)
jnp
pop
loop
ds
bound
and
sub
jne
not
sahf
fdiv
in
call
aas
clc
xchg
jg
mov
leave
jp
js
sbb
ret
mov
push
mov
sbb
or
jns
(bad)
div
outs
loopne
mov
fst
pop
cwde
pop
jb
imul
cmps
inc
ficomp
xchg
fild
dec
add
xchg
outs
sahf
repz
fisttp
jg
jecxz
mov
cmc
mov
mov
jbe
sub
inc
push
add
mov
rcr
mov
jns
ja
mov
xchg
jae
test
cdq
xor
inc
sub
push
mov
push
jge
pop
dec
out
mov
and
mul
cmp
push
adc
xor
cmp
add
mov
mov
div
add
xor
test
aad
arpl
fadd
je
inc
mov
xchg
scas
add
adc
sub
int
dec
ret
push
mov
xor
out
dec
mov
and
cmp
mov
stos
outs
and
in
cmp
int
test
(bad)
hlt
push
fldenv
xor
rol
jle
out
push
ret
ret
pop
mov
or
fadd
js
or
push
push
xchg
mov
jb
ins
dec
jbe
sub
xchg
aas
repz
pop
ret
xor
jo
mov
mov
sub
out
pop
cwde
inc
dec
gs
imul
jg
lods
fiadd
stos
in
push
push
sub
inc
rol
in
pop
in
or
lods
sbb
loop
cmp
sub
ja
jns
imul
mov
nop
in
inc
shl
pop
dec
push
int
nop
out
xchg
and
daa
enter
lock
dec
sub
push
xchg
jnp
enter
mov
out
cmps
adc
adc
cs
jl
outs
es
jle
mov
lods
or
pop
and
inc
mov
repz
fucomp
ret
lods
lods
jns
in
mov
mov
jg
shr
js
adc
adc
dec
dec
sub
mov
outs
sbb
jg
adc
push
jns
retf
(bad)
xlat
jbe
pop
cmps
xchg
and
push
popf
cmp
mov
sub
shl
push
dec
push
fadd
pop
add
fcomp
enter
gs
xchg
mov
js
ja
shl
pushf
push
test
and
fwait
lds
adc
sar
push
fadd
mov
popa
ins
fldcw
aaa
mov
shl
jp
mov
pop
mov
aaa
xchg
jle
xchg
pusha
adc
mov
sub
nop
leave
jnp
mov
xchg
dec
cdq
mov
hlt
clc
call
mov
repnz
sets
jge
mov
push
aad
dec
mov
pop
test
shr
(bad)
cli
sbb
push
mov
scas
sub
fdivr
sub
push
adc
adc
push
test
(bad)
test
and
cli
bnd
in
jge
push
fimul
push
fwait
and
push
adc
scas
ja
mov
xlat
jb
outs
inc
pop
pushf
lea
dec
dec
xor
pop
jno
mov
je
dec
mov
and
jp
lock
mov
stos
mov
inc
shl
and
dec
retf
inc
ins
aaa
movs
cli
sbb
mov
jl
push
loopne
pop
in
xor
(bad)
cmp
inc
xor
push
push
fcmovne
pop
call
jle
call
sbb
jne
or
adc
out
add
loope
lahf
dec
scas
gs
aaa
sub
call
xchg
dec
aaa
jno
pop
xchg
dec
adc
sti
pop
adc
aam
cmps
mov
adc
outs
cmps
jge
jne
mov
pop
jmp
mov
das
cmp
push
lods
test
loope
cmc
jo
call
sbb
push
sub
gs
inc
mov
in
and
aaa
xchg
in
dec
mov
push
fwait
out
adc
sub
xchg
imul
mov
ret
mov
xchg
call
out
adc
push
jl
out
inc
into
out
xlat
sub
fwait
shl
cmps
jmp
dec
stos
and
pop
sti
fldenv
jmp
push
retf
xchg
ss
cmp
or
mov
push
jmp
fdiv
(bad)
xlat
shl
ror
(bad)
fsub
imul
clc
ret
jno
into
xor
and
sub
enter
xor
sbb
call
pop
push
dec
les
(bad)
movups
mov
or
into
add
add
daa
xchg
mov
jnp
sahf
sbb
or
push
push
int
mov
imul
sub
ror
mov
and
stos
push
lds
out
add
mov
movs
pusha
inc
sub
sub
fiadd
push
out
in
test
or
push
mov
enter
icebp
dec
aad
rcr
and
imul
ss
dec
xchg
cdq
xchg
jl
mov
or
dec
(bad)
imul
stc
sub
mov
pushf
push
ret
push
retf
jne
fsub
stc
adc
cmp
or
pop
sub
fsubr
std
and
jmp
jmp
mov
(bad)
mov
fisub
inc
cmp
lods
cwde
push
daa
out
lds
ret
pop
ret
fdiv
mov
mov
icebp
pop
push
test
mov
xor
test
cmps
out
and
(bad)
xlat
(bad)
loop
es
dec
mov
push
and
fnstcw
iret
int
cdq
fidiv
scas
mov
lahf
scas
stos
sub
repnz
xchg
sub
movs
aas
fstp
mov
loopne
push
add
lahf
iret
out
xor
or
call
stos
xor
iret
ret
stos
dec
and
fwait
jle
jg
inc
imul
sub
mov
xor
adc
jecxz
ror
xchg
mov
jns
mov
nop
shl
lods
cmp
lea
jge
xchg
in
mov
pop
mov
jge
(bad)
in
add
jb
subps
add
xchg
aad
mov
call
mov
ret
jge
mov
fisub
bound
pusha
jecxz
xchg
stc
fstp
test
lods
sbb
inc
movq
push
sub
cs
cmp
stos
inc
mov
or
pushw
arpl
push
in
adc
mov
push
mov
inc
pusha
leave
pop
and
les
pushf
pop
adc
imul
outs
addr16
(bad)
mov
push
ret
xchg
add
rcl
and
add
inc
xchg
lock
jae
mov
cmp
xchg
add
push
mov
call
dec
dec
adc
mov
xchg
mov
(bad)
mov
pop
xchg
stos
adc
mov
jg
cmp
sub
cmp
cmp
dec
push
push
push
push
push
xor
retf
clc
sub
aad
or
cmp
add
xlat
in
shl
jb
push
dec
mov
xchg
sbb
clc
push
dec
mov
pop
int3
mov
loope
lds
push
inc
das
and
sub
or
clc
loope
inc
jbe
mov
pop
je
mov
push
or
mov
pop
jns
mov
sub
mov
xchg
add
cs
mov
stc
sbb
push
nop
lock
cs
push
je
add
bound
add
(bad)
jno
mov
out
adc
mov
adc
cmp
popa
pusha
mov
test
mov
cmp
dec
jge
leave
or
shl
pusha
jg
scas
mov
ret
add
int3
ret
mov
mov
nop
fld
call
dec
sbb
xor
jp
pop
adc
rcr
adc
xor
test
bound
cdq
das
in
daa
mov
or
mov
and
dec
inc
sub
cmp
inc
sbb
retf
loopne
out
or
dec
ret
jecxz
sub
sub
rcl
pop
sub
stos
dec
xor
fwait
sbb
movs
gs
or
fisub
out
add
(bad)
or
pop
jnp
mov
(bad)
dec
cmp
lods
push
mov
test
jmp
add
loopne
xor
jbe
push
pop
push
jne
(bad)
or
dec
dec
or
(bad)
iret
call
ret
popa
das
jns
pop
cmp
repz
add
pop
adc
cmc
stos
iret
fs
pop
lods
stos
jne
retf
mov
add
sbb
xor
in
(bad)
mov
lock
pop
xlat
mov
sbb
mov
bound
and
call
shr
icebp
adc
sbb
mov
jp
sub
cs
mov
mov
out
rol
movs
add
and
mov
sbb
aad
ror
dec
sub
jae
pop
inc
cmp
sbb
mov
xchg
sub
(bad)
mov
or
push
xor
out
(bad)
out
js
pusha
mov
(bad)
sbb
or
out
mov
fisub
mov
add
aad
jmp
sahf
xchg
adc
xchg
aam
pop
xchg
mov
aad
pop
mov
rcr
int
aad
shl
mov
cmp
and
add
mov
(bad)
cli
lods
sub
add
retf
pop
mov
call
mov
iret
(bad)
stc
movs
int3
pop
push
stc
popa
adc
pop
movs
mov
es
adc
bound
xor
add
jle
sbb
mov
je
pop
xchg
push
shl
add
xlat
cmp
mov
cmp
loope
cdq
sbb
mov
test
sahf
call
push
jnp
adc
je
mov
sub
fnstsw
mov
pop
mov
push
ficom
xchg
fwait
mov
dec
mov
inc
into
jns
gs
lock
sub
stos
xchg
jge
cmp
shl
pushf
imul
mov
(bad)
int
stos
es
jmp
and
or
out
mov
sbb
xlat
test
or
out
xor
mov
push
pop
mov
sbb
mov
lods
es
sbb
rol
scas
fild
jne
add
dec
ins
pop
in
test
sub
daa
sbb
je
jle
mov
pop
shr
and
pop
(bad)
cli
inc
ds
cwde
sub
mov
out
(bad)
fbstp
inc
xchg
inc
dec
imul
aaa
push
sbb
outs
test
das
shr
loope
jl
call
cmp
mov
sub
ds
cmp
mov
dec
mov
inc
and
add
xchg
mov
lock
lods
push
pop
pminsw
and
fldcw
ss
push
inc
fdiv
add
cmps
mov
fs
dec
hlt
xchg
xchg
imul
mov
dec
repz
inc
and
sbb
mov
fidivr
iret
test
pop
mov
push
arpl
mov
xor
sub
push
fdivr
add
ins
xor
inc
test
mov
(bad)
xchg
bound
(bad)
mov
mov
loopne
lea
lock
js
and
mov
xchg
jp
xor
shl
leave
dec
dec
dec
xor
push
icebp
icebp
jmp
or
xlat
nop
pusha
mov
and
fadd
lods
dec
shl
cmp
adc
ficom
out
jle
shr
cld
inc
cli
out
adc
ret
or
call
pop
xchg
mov
frstor
ret
sub
add
std
in
add
mov
addr16
and
mov
fstp
dec
mov
push
ret
ds
data16
test
mov
mul
retf
pusha
ror
ja
out
jnp
and
mov
pusha
pop
shl
scas
xor
and
adc
enter
push
sbb
ins
dec
inc
push
push
bound
mov
push
loope
dec
inc
push
dec
fs
(bad)
cmc
mov
in
sbb
in
adc
repnz
mov
test
scas
inc
cmp
sub
mov
cdq
cmp
and
repz
and
xchg
mov
mov
leave
dec
mov
std
cmp
cmp
sbb
adc
rcr
ins
cmp
inc
xcrypt-ofb
cmps
sub
test
popf
fistp
retf
adc
mov
shr
cli
jmp
dec
stc
inc
mov
test
scas
pop
fs
and
loopne
xchg
push
jnp
add
call
xchg
lods
cmp
gs
xor
or
mov
lahf
cmc
imul
pop
jl
push
mov
jp
cs
outs
push
out
dec
push
jbe
loop
mov
daa
daa
sahf
pop
fidivr
inc
adc
movs
stc
shl
loopne
cwde
test
outs
cmp
adc
mov
push
jb
ret
or
aaa
mov
add
hlt
push
xor
mov
xchg
arpl
inc
dec
cmp
in
jmp
add
mov
adc
xchg
cmps
mov
in
ret
sub
mov
rcr
or
cdq
mov
cwde
out
inc
out
push
into
stos
repz
ret
mov
xchg
or
xchg
inc
sbb
pop
ja
jnp
ds
mov
sahf
cmc
jmp
jnp
mov
pop
jge
ins
mov
jmp
mov
fdivr
(bad)
cmp
mov
cmps
mov
add
jle
lea
int3
adc
sti
push
push
retf
stos
nop
repnz
(bad)
dec
xchg
ret
hlt
mov
shl
arpl
push
dec
inc
iret
inc
(bad)
sbb
mov
stos
clc
lods
cmps
xor
mov
je
jp
mov
iret
mov
repz
ret
les
(bad)
lahf
push
cmp
xchg
rcl
and
dec
adc
arpl
xchg
ret
lods
out
loop
sbb
movs
mov
push
test
adc
loopne
(bad)
push
adc
test
jecxz
imul
(bad)
xchg
mov
or
cmp
push
push
pop
xchg
aas
add
inc
xor
call
mov
or
ficom
pop
add
out
and
push
cmp
hlt
cmp
mov
inc
or
test
(bad)
add
fnstsw
xor
repz
pop
add
stos
arpl
cmps
in
icebp
mov
cmp
sub
int
pop
cmp
push
jp
or
adc
ds
mov
mov
dec
add
enter
movs
push
push
dec
not
iret
loop
nop
shl
test
mov
mov
inc
cwde
lock
movs
das
scas
je
ins
hlt
push
pop
pop
adc
ins
adc
pop
(bad)
jp
scas
pop
call
fsub
dec
jg
cld
pop
shl
add
std
in
mov
inc
sub
data16
out
mov
aam
jmp
pop
outs
mov
(bad)
int
fistp
push
cmp
inc
int3
or
mov
scas
lahf
imul
outs
fisub
mov
out
lahf
mov
sub
outs
inc
out
xor
pop
mov
or
dec
repnz
(bad)
push
jg
mov
cdq
mov
push
adc
xchg
movs
ja
xor
xlat
or
xor
sub
jmp
mov
add
out
xor
addr16
rol
arpl
mov
jl
jb
xor
xor
imul
adc
pop
mov
stos
lds
(bad)
shr
ja
sahf
sub
fsubr
adc
sar
hlt
inc
das
xchg
popf
repnz
pop
push
jp
sub
test
(bad)
popa
mov
cmp
scas
xor
sub
mov
in
shl
inc
sbb
clc
sub
stos
mov
aas
pop
data16
sbb
xchg
movs
rcr
shl
mov
jo
enter
cmps
pop
aas
enter
dec
out
mov
bound
xor
jge
int
add
adc
call
adc
retf
and
bound
int
(bad)
imul
aaa
mov
jb
outs
out
ins
loopne
adc
or
or
call
pop
ja
sar
mov
mov
mov
repz
movs
fstp
sti
movs
out
mov
das
outs
(bad)
fsubr
ret
gs
sbb
imul
mov
mov
cmps
push
(bad)
or
stc
push
sbb
ins
dec
xlat
popw
or
pop
sub
adc
push
dec
addr16
add
push
xor
or
xchg
retf
ss
imul
ror
shl
add
stc
fisttp
inc
or
sahf
mov
in
in
xchg
sub
test
imul
stos
push
cmp
movs
lods
dec
and
fwait
int3
cld
mov
push
lock
movs
or
mov
jnp
jp
in
adc
jmp
cmp
cmovnp
test
je
pop
jmp
mov
xor
cmps
loop
lahf
ss
fisubr
cs
mov
cmp
movs
(bad)
mov
xor
je
(bad)
jb
std
sub
in
pop
xor
adc
cmps
jge
push
(bad)
xor
mov
pop
scas
cmp
icebp
sub
cmc
rcr
lds
pop
jmp
sub
and
mov
dec
pop
jmp
xor
sub
icebp
lock
cmp
add
mov
mov
mov
stos
cmp
sets
scas
sbb
out
fnstsw
sub
out
gs
mov
or
xchg
lahf
push
add
push
stos
push
imul
adc
pop
sbb
or
add
fucomi
mov
std
jp
scas
test
(bad)
mov
int
push
and
ret
jns
cmp
sub
les
xor
mov
shl
sub
fcomip
add
cmp
and
hlt
cmc
or
(bad)
es
jl
jp
mov
arpl
or
loope
arpl
lock
dec
(bad)
int3
jno
shr
ret
mov
inc
ja
leave
in
push
imul
pop
dec
(bad)
add
ins
push
in
pop
jb
scas
xor
mov
call
out
sbb
inc
adc
jne
scas
cmp
pushf
mov
rcr
push
out
mov
pusha
loope
es
xor
retf
push
xor
mov
es
jo
movs
add
cmps
cmp
sub
into
mov
adc
mov
pushf
jl
add
out
push
(bad)
call
mov
xchg
pushf
and
test
lods
in
(bad)
adc
lods
jns
mov
loop
mov
fnsave
xor
mov
movsx
push
push
ss
ror
nop
scas
mov
and
and
cmp
cmp
or
xchg
adc
fmul
dec
add
repnz
mov
and
icebp
mov
sub
ins
mov
test
int3
popa
sub
sub
dec
imul
cdq
xor
sbb
sub
mov
std
pop
xor
cwde
ds
mov
popa
and
sbb
mov
cli
jae
repnz
mov
not
and
ss
std
or
push
cmp
ja
rcl
rol
jne
mov
out
sbb
push
rcr
aad
fsubr
adc
lods
into
jl
inc
ins
mov
cmp
in
jl
mov
mov
inc
ror
fwait
cld
popf
(bad)
clc
fs
test
xchg
fcom
mov
inc
out
sub
rcl
fdiv
cmp
mov
scas
dec
dec
mov
cmp
cmp
jmp
jb
adc
inc
fadd
ds
inc
call
xchg
mov
sbb
cmp
mov
inc
dec
das
cs
fistp
mov
inc
sub
jne
inc
imul
fdivr
loop
outs
mov
adc
mov
enter
or
pminub
jne
adc
jnp
jns
in
adc
xor
movs
xchg
lods
shl
popa
js
or
jge
or
(bad)
imul
es
(bad)
into
je
xor
push
mov
mov
shr
add
mov
push
push
idiv
cld
pop
adc
and
addr16
and
jge
test
pop
inc
ret
sbb
add
fwait
xor
pushw
dec
jmp
cmp
mov
int3
add
cmc
fisubr
push
imul
sti
xchg
push
sub
inc
call
jp
rol
push
push
scas
and
cmc
adc
inc
jmp
(bad)
pusha
sbb
out
jno
sub
pop
inc
lods
sbb
mov
je
fchs
call
ds
mov
push
std
sbb
and
sub
mul
ins
fisubr
adc
xor
lahf
cs
shl
rcr
mov
jb
(bad)
ins
movs
fdivrp
cmc
cmp
inc
dec
and
aad
or
sub
cmp
les
loop
bound
adc
les
fisub
ret
sub
fidivr
js
mov
std
pop
cmp
stc
jne
retf
pop
jae
cmps
xchg
dec
jg
xchg
push
arpl
push
mov
sbb
adc
add
adc
cmps
jmp
adc
xor
inc
dec
pop
popf
scas
rcr
mov
jnp
xchg
sub
jecxz
sbb
test
fisttp
mov
dec
sub
push
outs
rcl
push
out
inc
test
and
aaa
iret
outs
xchg
cmp
cwde
cwde
mov
shl
or
inc
sar
jno
inc
jmp
jno
mov
nop
popa
push
push
add
pop
and
sub
retf
add
or
mov
movs
jmp
rol
push
inc
jecxz
mov
adc
out
fidiv
dec
and
rcl
mov
mov
int3
cmps
dec
fwait
or
adc
shl
jae
gs
mov
pushf
data16
fadd
mov
test
or
sub
xor
dec
push
scas
jne
xor
add
movs
sti
lock
dec
sub
xchg
mov
mov
mov
out
mov
test
popa
add
fcom
je
retf
scas
sbb
imul
mov
sbb
lods
loopne
jbe
aas
cwde
xchg
pop
fld
mov
mov
repz
mov
mov
outs
cmps
inc
inc
jo
adc
xor
pop
rol
push
lds
cdq
stos
add
pop
daa
jge
int3
mov
jle
jg
mov
ss
mov
pusha
sbb
out
xchg
mov
jne
lock
in
lods
xchg
mov
jl
jbe
aas
mov
inc
dec
not
mov
xor
pop
xchg
mov
inc
retf
adc
hlt
mov
mov
sbb
push
pop
sub
jne
xchg
push
int
les
xor
test
jb
rcl
lea
ror
out
pop
adc
cmp
pop
fwait
jl
mov
xor
xchg
cmp
push
inc
aam
repz
dec
sbb
jg
or
jnp
fs
cmps
call
pop
push
pusha
stos
inc
clc
dec
loope
jns
mov
int
or
retf
mov
iret
sub
gs
sahf
rol
fist
jnp
inc
and
mov
fstp
gs
out
sub
or
fisub
xchg
mov
sbb
mov
or
cmp
mov
leave
in
fs
jmp
fwait
test
test
add
adc
jae
jl
mov
dec
out
fcmovnu
xchg
mov
popa
ins
dec
sbb
jae
push
jmp
hlt
loopne
ror
cmp
sbb
aaa
mov
retf
enter
outs
mov
les
mov
inc
mov
rcl
mov
lds
fistp
pop
test
inc
jle
and
sti
repnz
ret
pop
mov
adc
adc
aad
pop
dec
dec
iret
cmp
gs
push
jae
fbstp
fldenv
dec
(bad)
jle
pop
cwde
fs
das
shr
popa
ins
movs
cmp
lea
push
stos
data16
push
push
fdivr
add
or
pop
adc
test
ja
dec
lods
pop
dec
ins
es
cmp
movs
add
mov
push
xchg
fcom
cmp
fistp
mov
lds
and
sbb
dec
push
adc
push
jne
add
inc
test
mov
test
xchg
test
dec
mov
(bad)
fistp
adc
ret
dec
adc
push
inc
add
test
aam
push
leave
jbe
ror
or
mov
imul
cli
cmp
pop
test
inc
add
add
loop
ss
xchg
cmc
lock
rcl
add
sbb
movs
xchg
cmps
mov
sub
inc
xor
(bad)
neg
and
(bad)
les
push
mov
pop
or
mov
jns
dec
in
retf
fistp
sbb
push
add
or
leave
into
scas
or
out
push
mov
fst
sub
adc
fs
(bad)
stc
jb
push
cli
popf
cmovae
rol
rcl
stos
xchg
sti
mov
in
fidivr
(bad)
pop
pop
arpl
and
stc
jle
in
in
mov
sbb
jg
jge
inc
repnz
(bad)
push
icebp
mov
push
xchg
es
shl
sub
call
fist
inc
mov
inc
pushf
(bad)
xor
sbb
mov
sar
ret
add
add
add
jmp
add
push
js
movs
jns
xchg
jno
adc
in
cmp
mov
mov
fcomp
in
pop
test
jno
mov
dec
push
test
mov
repz
pop
in
mov
outs
iret
sbb
add
mov
movs
(bad)
aas
push
retf
or
inc
sbb
mov
mov
and
fucompp
xchg
int
call
push
or
jnp
stos
stos
dec
pop
imul
sahf
inc
cmp
adc
retf
push
cmp
dec
jo
jmp
xor
inc
fsubr
pop
out
mov
sti
jmp
jno
out
jbe
dec
scas
imul
sar
(bad)
mov
pop
ror
or
or
mov
aad
iret
not
int
push
idiv
aaa
ror
push
shl
dec
jb
inc
sbb
stos
(bad)
dec
les
add
mov
pushf
pop
outs
xor
and
outs
jb
adc
repnz
mov
xor
scas
or
popf
push
cmp
push
adc
mov
lds
and
jge
xchg
sahf
pop
cs
dec
mov
out
pop
data16
mov
add
rcr
int
jle
sbb
xchg
ror
push
and
enter
cdq
inc
retf
das
cwde
(bad)
not
sbb
fnstenv
outs
repnz
enter
sti
push
imul
dec
dec
pop
push
test
dec
das
in
xor
push
repz
inc
retf
sub
dec
push
cmp
pop
adc
push
or
push
sub
sub
dec
jo
push
mov
leave
push
pushf
jl
mov
mov
adc
jmp
ror
inc
or
sbb
outs
ja
jge
shl
cmp
xlat
lods
pop
ficom
xor
cli
lods
mov
push
push
sbb
dec
into
cmps
or
lods
mov
aad
push
in
std
cwde
jb
cmps
es
mov
jg
imul
test
rcl
movs
imul
or
mov
xlat
mov
mov
jg
scas
lds
jae
xchg
leave
std
add
jg
mov
and
ins
int
cs
xchg
cmp
clc
dec
xchg
xchg
xor
jge
fist
push
push
pusha
cdq
cmp
xor
jmp
jecxz
xchg
bnd
cmc
call
dec
shr
mov
ins
push
mov
mov
pop
pop
aas
out
dec
movs
push
mov
stos
adc
(bad)
retf
add
cmc
mov
call
mov
push
jl
ins
pop
ror
(bad)
std
mov
sub
inc
push
(bad)
add
push
jg
jle
cmp
in
and
cwde
push
rol
adc
xchg
dec
rcl
mov
mov
icebp
das
mov
cmps
fdiv
or
jge
rcr
rcl
loope
loope
repz
leave
mov
cmp
enter
sti
or
sbb
idiv
ins
and
outs
and
lahf
dec
test
psubq
xor
loope
or
mov
or
inc
or
jb
xor
cmps
jp
push
icebp
xchg
push
mov
xchg
shr
mov
into
pop
pusha
ret
ror
cmp
add
mul
scas
popa
fmul
rol
xchg
daa
pop
call
push
data16
mov
mov
lods
add
push
jecxz
xchg
add
les
cld
fwait
imul
and
mov
std
dec
mov
lea
and
cmp
lahf
mov
lods
add
dec
push
or
inc
cmp
cmp
and
jbe
inc
jbe
jb
loop
into
sub
ins
ins
cli
jge
inc
add
cmp
jecxz
xlat
sub
outs
jmp
iret
into
popf
inc
lds
and
mov
sub
dec
(bad)
clc
jns
cmc
ja
and
xchg
scas
jmp
mov
xchg
jb
mov
mov
cwde
(bad)
ss
and
push
sar
pop
mov
jae
movs
mov
mov
pop
sbb
test
pop
xchg
inc
or
or
fnstenv
(bad)
stos
push
adc
sub
ret
xchg
ret
das
mov
mov
stc
inc
jmp
sbb
jmp
push
cld
cmp
xor
mov
js
adc
test
adc
lds
in
jo
fwait
mov
aaa
repnz
and
cdq
sti
outs
adc
dec
jmp
aam
adc
scas
inc
push
mov
dec
and
jge
mov
xor
test
add
mov
pushf
mov
(bad)
fadd
lahf
pop
mov
mov
fdivr
xor
mov
lds
cli
mov
mov
imul
push
ret
push
fistp
fild
jecxz
out
xchg
and
push
and
in
sbb
push
jo
push
lods
pop
imul
and
xchg
ret
jnp
stos
lock
cli
dec
or
dec
int
pop
fcomp
shl
repnz
inc
cmp
adc
pop
dec
dec
or
in
mov
dec
icebp
gs
sbb
ds
and
cmp
xor
pop
cmp
imul
inc
adc
inc
hlt
dec
mov
push
rcr
cli
outs
dec
aad
adc
out
push
xor
fwait
or
push
mov
jo
pop
cwde
sub
stos
mov
or
(bad)
and
popa
dec
or
cmp
cld
cmp
ret
ss
pop
adc
xor
push
lea
ja
xor
mov
mov
bound
or
shl
test
or
imul
(bad)
fadd
loope
leave
loopne
sti
mov
outs
push
mul
jno
mov
add
mov
sbb
fist
ret
and
pop
xor
or
in
std
add
inc
mov
neg
retf
mov
or
fwait
ret
ret
outs
cmps
aad
imul
movs
aad
inc
mov
or
repnz
jo
aas
mov
jmp
and
das
and
dec
leave
lods
mov
push
mov
fwait
xor
pop
push
mov
lea
(bad)
in
pop
cmp
jmp
(bad)
adc
and
mov
out
es
dec
inc
dec
adc
or
and
mov
pusha
int
dec
mov
das
(bad)
mov
lock
aaa
(bad)
push
mov
push
xor
and
mov
(bad)
retf
or
inc
dec
mov
mov
rol
sbb
dec
cs
jns
inc
in
nop
dec
das
mov
push
(bad)
or
sbb
fmul
push
mov
xor
lahf
(bad)
lods
call
popf
dec
sub
arpl
repz
nop
cmp
cmps
imul
inc
(bad)
pop
cmps
out
sub
dec
mov
xchg
inc
enter
xchg
inc
scas
iret
push
push
leave
scas
and
jp
push
int3
aam
xlat
pop
mov
scas
data16
movs
push
dec
xchg
call
cmps
mov
push
bound
xchg
int
pop
xchg
xor
enter
cmp
ins
lods
jns
(bad)
cld
mov
pop
ins
xor
ins
sbb
inc
movs
imul
mov
xor
ja
pop
pusha
enter
xor
mov
sti
or
stos
mov
ins
xlat
aad
das
test
movs
sub
fisttp
sbb
push
adc
jno
jmp
cld
mov
imul
retf
cmp
fsubr
add
(bad)
sti
in
dec
sub
sbb
lock
mov
jno
or
iret
das
rcl
pop
test
idiv
mov
int3
dec
sbb
dec
(bad)
mov
pusha
dec
push
sub
mov
cmp
mov
cmp
leave
test
(bad)
xor
outs
ins
push
cli
mov
mov
sahf
stos
shl
sub
mov
mov
or
leave
imul
fnsave
or
sbb
jne
mov
pop
mov
icebp
fwait
pop
ret
outs
mov
inc
ret
cmp
jp
and
ficomp
push
sub
inc
pop
xchg
mov
int3
push
mov
mov
ficomp
inc
jb
mov
xor
mov
stc
sub
loope
mov
leave
sbb
in
jp
lods
and
sub
mov
sub
and
and
jge
mov
cs
fs
sub
(bad)
ret
test
pushf
mov
es
inc
sbb
aaa
pop
stos
mov
out
mov
shl
jmp
jecxz
cdq
pushf
sub
jge
stos
push
gs
inc
push
in
xor
je
sbb
mov
out
mov
or
mov
and
sub
or
push
fstp
in
xchg
jg
dec
sub
(bad)
inc
bound
inc
sub
push
mov
xor
stos
pop
xor
jp
aam
pusha
arpl
xchg
sub
cmps
rcr
sub
cmp
cmp
cmp
add
imul
add
aaa
inc
loopne
mov
repz
jnp
adc
icebp
cmp
fisttp
sbb
add
(bad)
lock
test
sbb
dec
in
fdiv
cmp
je
xchg
add
jae
mov
dec
dec
pusha
(bad)
outs
mov
enter
xchg
and
jne
pop
pop
xchg
xchg
or
ins
adc
nop
mov
outs
fiadd
and
lods
push
and
add
jns
add
sbb
js
imul
shr
or
ins
ins
push
xchg
call
or
dec
and
in
loope
xor
sub
cmp
popa
fsubr
mov
push
pop
dec
push
push
jp
mov
cmp
and
or
push
je
lea
repz
test
les
sub
mov
(bad)
cmp
ret
push
add
jbe
mov
push
push
adc
loope
lods
sahf
scas
pop
and
hlt
fimul
fnsave
pop
cmp
imul
mov
das
es
cmp
push
icebp
hlt
loop
mov
adc
jbe
adc
repz
jne
fwait
nop
cli
cmps
(bad)
dec
dec
cmp
cs
rcr
call
cmps
ds
stc
in
retf
repz
pop
into
inc
mov
pop
xor
retf
iret
in
mov
mov
sahf
jmp
sub
pushf
pop
(bad)
pop
mov
stos
and
jae
loope
xchg
mov
cmp
cmp
ds
mov
nop
cs
popf
daa
leave
sahf
inc
add
cmc
pop
rcl
outs
mov
xor
adc
sub
mov
mov
push
hlt
mov
push
rol
jp
rol
xchg
fprem1
scas
(bad)
jmp
arpl
jle
(bad)
ins
sahf
nop
mov
inc
(bad)
sar
lods
outs
or
stc
dec
adc
jnp
xor
ror
add
xor
sub
lds
mov
gs
ds
cwde
fld
adc
mov
sar
fsubr
xchg
ficom
jb
dec
inc
sub
mov
mov
push
xor
sbb
jmp
out
mov
push
mov
pop
out
(bad)
adc
imul
cld
sar
add
or
adc
mov
jg
push
mov
int
pop
adc
dec
dec
jno
pop
mov
push
mov
pop
or
(bad)
cmps
inc
out
ja
repnz
loope
sbb
enter
outs
(bad)
in
and
sub
jo
sbb
dec
int3
hlt
jne
lock
cdq
push
gs
adc
out
call
cmc
retf
bound
inc
scas
xlat
repz
jp
(bad)
mov
xchg
mov
mov
or
cld
dec
enter
and
std
nop
inc
inc
and
mul
daa
aaa
jb
push
dec
rcl
add
out
call
cmp
rcl
mov
stos
cli
(bad)
stc
in
fs
inc
jl
test
jne
and
imul
not
das
mov
mov
lods
cwde
push
imul
rcl
(bad)
mov
popf
push
push
xchg
test
pop
ins
int3
cs
cwde
ss
inc
pusha
clc
dec
(bad)
mov
pushf
daa
test
cmps
scas
cmp
int3
cwde
fsub
jecxz
fidivr
repnz
add
stc
jns
or
and
and
loop
xor
jmp
in
ficomp
pop
mov
in
pushw
jne
mov
arpl
push
sbb
or
xchg
or
enter
aaa
push
(bad)
test
ins
xor
inc
lock
dec
sbb
xchg
and
jbe
cli
cmps
sbb
das
(bad)
clc
pop
(bad)
lahf
push
retf
pop
adc
xchg
stos
xor
and
fimul
adc
xlat
jmp
inc
cmps
cld
inc
mov
jge
int
mov
add
mov
scas
inc
sbb
rcl
pusha
test
test
adc
(bad)
fidiv
test
inc
xor
stos
sub
adc
xor
jns
sub
jne
xchg
scas
inc
jno
(bad)
push
mov
pushf
in
jns
shl
mov
(bad)
dec
sti
jge
mov
adc
imul
xor
add
mov
push
cmp
mov
js
ret
inc
outs
adc
mov
pusha
mov
mov
aad
and
fdivr
(bad)
data16
leave
lds
jp
adc
push
and
rcl
loope
mov
push
sbb
push
(bad)
out
or
cmps
lahf
in
jae
int3
ss
mov
push
push
lock
jecxz
or
jp
fistp
jecxz
int3
cli
in
sub
xchg
rcr
ds
xor
(bad)
stc
dec
jle
xchg
dec
aaa
xor
iret
leave
movs
push
test
push
adc
pop
xor
aam
dec
popf
push
movs
xor
daa
cwde
sbb
call
pop
pop
add
xchg
shl
movs
test
lock
and
sub
mov
mov
pop
movs
dec
push
push
rcl
sbb
lods
pop
sub
nop
(bad)
mov
outs
xor
jmp
add
cli
xchg
mov
sar
cmps
pop
lahf
cmp
pop
ins
cdq
mov
jmp
inc
inc
inc
dec
popa
gs
stc
mov
jno
loopne
mov
sbb
movs
sar
(bad)
push
mov
lahf
dec
and
out
jbe
out
int
loopne
lock
jg
test
les
mov
push
iret
ror
xchg
dec
das
adc
mov
adc
and
sub
or
neg
clc
xchg
inc
mov
mov
jne
mov
cs
hlt
mov
cmc
cmp
push
sti
dec
out
xchg
or
push
sbb
or
fidiv
xor
outs
mov
cmc
dec
js
out
xchg
cld
test
lock
scas
aam
icebp
sub
fcom
or
adc
xchg
outs
das
es
repz
js
inc
push
dec
or
fisub
mov
inc
out
repz
imul
sbb
or
push
push
hlt
repz
adc
(bad)
(bad)
aaa
bound
pop
adc
xor
frstor
dec
mov
push
jne
mov
dec
lods
retf
aaa
sub
sar
jo
popa
jo
retf
jg
ror
mov
test
inc
pop
jge
mov
mov
push
mov
mov
sub
jb
retf
cmps
push
mov
clc
mov
int3
mov
xor
xor
xchg
ret
je
jmp
mov
clc
or
(bad)
leave
jbe
push
cmp
and
push
ret
mov
js
popa
(bad)
fdivr
lock
fisub
inc
and
loop
jbe
iret
xchg
in
sub
jmp
or
jae
ds
mov
cs
jp
cld
jecxz
sbb
or
jle
xchg
in
retf
dec
imul
mov
add
sti
movs
mov
push
test
ret
ror
sahf
clc
mov
icebp
test
arpl
xchg
or
pop
sub
dec
sbb
xor
imul
jmp
sbb
call
in
fidivr
jl
sub
xchg
xor
xchg
and
daa
xor
xor
stos
neg
in
pop
inc
lea
jo
(bad)
jb
push
rol
add
inc
arpl
push
mov
add
dec
sbb
dec
mov
jmp
pop
push
sar
ja
fiadd
es
cwde
mov
rep
push
aam
in
test
push
jo
inc
push
ja
push
jns
jg
inc
sub
imul
jno
push
inc
push
repnz
jp
pop
xchg
mov
add
cmp
lods
out
and
pusha
fs
shl
stos
(bad)
fdiv
mov
rcl
fiadd
jae
loop
pxor
xchg
aas
mov
jmp
les
lods
cwde
and
jne
cmp
shr
movs
push
popa
popf
nop
pushf
repnz
push
shl
scas
xchg
adc
sbb
jno
sub
or
test
rcl
mov
cwde
(bad)
fs
es
ret
js
lods
jae
sub
jnp
xchg
cmp
and
ds
ss
jo
sub
pusha
dec
xor
icebp
imul
xchg
div
retf
test
and
pop
and
push
inc
or
stos
jb
add
dec
mov
mov
push
sub
mov
jmp
out
inc
or
sub
mov
aaa
pop
ss
mov
mov
dec
sbb
mov
ret
jle
mov
ds
aaa
sub
cmp
mov
jbe
push
dec
pop
ret
jecxz
retf
test
dec
mov
and
push
cmp
inc
fisttp
mov
and
call
xor
jo
clc
cmps
in
mov
cmp
add
(bad)
push
sti
pop
(bad)
add
fs
stc
xor
aaa
stos
mov
fidiv
cmp
and
test
xor
mov
mov
es
clc
je
mov
and
pop
imul
add
mov
imul
dec
push
int
xchg
les
mov
mov
pop
rcl
fwait
outs
(bad)
(bad)
lea
in
mov
inc
iret
aad
sub
or
(bad)
int
dec
xchg
cld
mov
mov
mov
inc
movs
inc
sbb
jl
push
loope
stos
div
lahf
inc
iret
jne
xor
shl
repz
(bad)
pop
and
and
out
pop
sahf
imul
test
adc
sbb
nop
adc
or
ds
lods
add
sti
sbb
inc
out
(bad)
fsubr
inc
push
mov
xlat
cld
push
push
rcl
pop
dec
ss
out
nop
cmps
and
inc
call
xor
mov
push
xor
cmp
cli
sbb
ficom
mov
(bad)
and
cli
jno
test
mov
add
mov
mov
fs
and
test
ret
bound
js
mov
rcl
pop
scas
jns
ja
iret
or
cld
ret
xchg
ss
dec
pop
in
scas
or
clc
loop
mov
sbb
xor
cld
out
sub
aam
push
rol
push
shr
pop
push
cli
(bad)
das
jecxz
jmp
fadd
inc
adc
or
jns
sbb
jmp
mov
sub
jge
arpl
and
loop
cmp
(bad)
and
mov
jp
imul
inc
leave
push
pop
ror
repz
jmp
mov
jb
mov
std
ins
loope
add
mov
and
add
aam
mov
mov
test
xchg
out
xchg
sbb
cmps
addr16
rol
xchg
retf
lahf
aad
call
pop
mov
jp
fsub
ja
jp
and
stos
pop
dec
sbb
fcomp
fistp
stos
jmp
test
mov
jns
mov
loopne
push
cmc
adc
or
xor
fdiv
dec
lods
pop
mov
mov
add
adc
sbb
mov
pushf
adc
neg
add
jl
sbb
mov
inc
(bad)
mov
hlt
call
adc
lock
ins
push
add
and
test
addr16
xchg
stos
inc
xor
and
jp
pop
retf
xlat
mov
sbb
lock
add
cs
addr16
xor
mov
loope
adc
repnz
xor
(bad)
xchg
jmp
test
popa
(bad)
jmp
pop
sbb
jb
aaa
pusha
lods
pop
mov
ja
fld
push
(bad)
or
dec
fbstp
sbb
sti
cwde
pusha
lahf
cmp
fist
out
mov
inc
push
ss
shl
dec
retf
add
pop
retf
and
or
xchg
mov
add
inc
or
push
call
shl
cwde
fwait
pop
test
xchg
stc
jg
fmulp
push
nop
imul
sub
imul
inc
and
push
jecxz
inc
sahf
fnsave
or
in
ret
aas
xor
retf
mov
adc
pop
clc
pop
test
add
out
sbb
and
xchg
jp
adc
fld
mov
mov
adc
dec
inc
inc
push
cmps
push
push
mov
stos
test
cmp
cdq
pop
pop
out
std
mov
imul
mov
mov
jle
dec
ds
push
inc
push
scas
jecxz
mov
xor
int3
xchg
ret
or
jge
mov
std
movs
test
or
jmp
or
dec
fisub
pop
in
sbb
xor
int3
mov
mov
xlat
in
lds
mov
test
xchg
mov
stc
sub
mov
imul
or
cmp
mov
jge
popa
xor
or
or
and
mov
ds
pop
xor
stos
pop
mov
and
stos
or
sub
dec
in
fs
push
dec
inc
mov
and
xor
out
cmp
sbb
fdivr
popa
leave
out
(bad)
(bad)
xor
mov
mov
mov
in
call
dec
aas
sbb
out
out
test
adc
xchg
aaa
retf
jb
into
xor
adc
in
jne
cli
ret
std
cmp
retf
(bad)
frstor
mov
inc
cs
cmc
xchg
jo
or
aas
mov
mov
push
in
jb
inc
cmp
inc
xor
daa
fcomp
push
stc
push
rcr
es
or
and
and
sub
lea
lods
jmp
jmp
sbb
in
pop
in
pop
test
mov
aaa
ins
cmp
or
push
xchg
dec
jp
mov
imul
pushf
sbb
xor
cwde
jmp
(bad)
test
(bad)
dec
mov
push
xchg
sub
leave
mov
fstp
shl
cwde
mov
pop
(bad)
dec
jg
xchg
inc
or
sub
sub
mov
not
ins
sbb
or
iret
shl
cmp
mov
stos
retf
je
das
ret
push
in
outs
push
adc
push
popf
dec
test
sub
cmp
mov
jecxz
add
test
push
push
and
mov
std
dec
repnz
cmp
xor
xor
idiv
add
mov
mov
inc
or
sar
mov
(bad)
and
adc
fimul
pop
inc
popa
jnp
or
push
out
pop
xor
inc
(bad)
bound
hlt
fisttp
enter
imul
mov
inc
leave
in
lods
pop
cli
rcl
pop
lock
mov
fdivr
add
js
aaa
jmp
dec
movs
xchg
fs
in
mov
(bad)
ss
test
mov
mov
jl
pop
push
sbb
dec
adc
ror
jno
repnz
xchg
jle
out
outs
inc
pop
sbb
add
sbb
push
loopne
jnp
mov
xor
jl
cs
enter
and
push
and
sbb
into
jp
adc
dec
call
ss
push
xchg
xor
jge
sub
add
(bad)
dec
ret
shr
sbb
jno
add
mov
sbb
mov
dec
fidivr
sar
ins
xlat
lods
mov
adc
js
or
jns
and
cmps
and
inc
inc
sbb
ret
xor
retf
shl
and
dec
sbb
les
dec
dec
daa
int
out
jbe
xchg
xchg
not
xchg
mov
or
loop
mov
sub
xchg
mov
scas
fild
jnp
popf
iret
xor
cmp
out
xchg
and
and
push
in
gs
loope
push
jns
adc
stc
xchg
int
add
dec
test
and
ja
pushf
call
jmp
cmps
cld
fs
push
into
enter
leave
sbb
fidivr
mov
es
in
scas
jno
dec
ds
into
mov
fs
loope
jbe
ins
test
push
outs
in
dec
add
imul
fbld
dec
iret
jp
mov
xor
movs
and
push
(bad)
fmul
rcr
ds
xor
mov
addr16
xor
out
cdq
cmp
iret
push
adc
sbb
pushf
addr16
out
add
enter
mov
jno
lds
shl
cmp
jmp
mov
push
cwde
lock
jmp
lahf
cmp
xchg
imul
or
enter
jmp
and
test
sbb
fidivr
mov
call
push
scas
retf
jns
inc
xor
iret
push
js
std
(bad)
mov
aaa
cdq
adc
mov
ds
les
pop
cmc
mov
ret
pushf
imul
jnp
sub
pop
or
iret
dec
xor
or
add
and
inc
mov
lds
daa
gs
jmp
icebp
aam
out
mov
leave
push
xchg
push
sar
pop
adc
in
add
push
fadd
test
gs
jne
dec
xlat
cmc
dec
aam
inc
lahf
adc
sub
mov
lods
mov
push
cmc
inc
sub
mov
dec
push
(bad)
cld
cs
div
dec
dec
ins
(bad)
cmp
push
push
pusha
js
into
cmp
pop
int3
add
out
jne
mov
stos
rcl
nop
pop
mov
out
xor
pop
mov
mov
jmp
jns
and
mov
jmp
jbe
(bad)
hlt
popf
cmp
pop
pop
and
es
sbb
cld
sub
sub
fwait
pusha
xchg
sub
add
arpl
cmp
mov
dec
aad
popa
inc
sub
pop
out
sub
add
and
scas
stos
dec
out
ins
xchg
out
sbb
aaa
dec
scas
mov
test
lahf
repz
movs
stos
xor
jnp
dec
jp
cs
mov
jmp
enter
dec
sub
fsubrp
push
aaa
inc
sahf
adc
loopne
or
push
jae
pop
pop
mov
ins
es
shl
sub
lods
fs
outs
push
and
inc
xchg
call
adc
mov
and
retf
js
lods
adc
lock
adc
jae
pop
push
or
sbb
shl
mov
outs
xchg
mov
adc
cmp
xor
inc
or
xlat
xor
lods
xchg
and
test
push
sahf
addr16
and
sub
stos
jae
test
adc
div
dec
movs
sbb
inc
cmps
movs
ret
mov
xchg
stc
and
fsub
mov
mov
repnz
dec
scas
test
pusha
mov
xor
test
mov
repnz
mov
lods
out
mov
rcr
adc
adc
ret
imul
popa
add
pop
(bad)
fwait
sbb
sub
sub
cmp
call
push
mov
xor
inc
mov
ficom
fist
ins
cmps
fldcw
cmp
or
clc
and
mov
mov
jp
fiadd
pop
sbb
test
pop
out
out
out
sub
jg
shr
ret
add
in
or
test
(bad)
in
dec
push
mov
mov
mov
out
mov
add
jno
ret
dec
addr16
add
cmp
stc
jno
push
cmp
and
push
inc
add
jmp
loop
mov
ror
cmp
repnz
aam
mov
retf
or
scas
retf
mov
jns
xor
dec
mov
pop
lods
push
cld
xor
imul
cmps
movs
das
xchg
shr
and
cmp
add
mov
test
popf
out
test
push
lea
pop
mov
and
idiv
mov
icebp
jecxz
mov
hlt
add
(bad)
xlat
pop
inc
ret
das
fistp
sahf
ror
cmps
mov
sbb
jle
imul
and
pop
mov
loopne
call
xchg
mov
stos
mov
rol
sar
mov
xor
das
xchg
dec
ja
mov
and
je
lock
gs
icebp
addr16
loope
mov
push
pop
jl
(bad)
retf
adc
cld
icebp
js
cmp
jg
xor
sub
clc
dec
bound
or
push
xchg
xchg
(bad)
push
pop
mov
inc
sub
and
jnp
mov
xor
cmp
(bad)
int3
xchg
inc
mov
loopne
mov
sub
sbb
aas
ss
popf
mov
cmp
mov
popf
aaa
or
popa
(bad)
sbb
mov
in
nop
scas
fisub
cmp
xchg
push
mov
shl
out
mov
xchg
sbb
jp
mov
ficom
push
cmp
pop
xchg
cld
xlat
fldcw
ficom
test
inc
push
outs
cs
cmc
or
adc
aam
mov
nop
mov
in
inc
and
mov
cmp
or
adc
or
sbb
inc
sbb
icebp
fdivr
xor
out
cmc
pop
xor
rcl
mov
sub
and
mov
rol
sbb
icebp
sahf
add
adc
mulps
ja
aad
mov
push
in
push
loop
cmp
aad
aam
daa
sahf
dec
shl
mov
sbb
mov
mov
cmp
dec
rol
lods
test
pop
lods
jmp
fwait
sbb
call
or
pushf
lahf
call
in
call
xor
(bad)
push
inc
add
xchg
xor
aam
push
xchg
jle
adc
sbb
arpl
(bad)
scas
xchg
jecxz
mov
sub
mov
jb
push
je
es
xchg
outs
push
clc
dec
aas
stos
lahf
inc
fisubr
mov
mov
call
add
xchg
aaa
and
retf
lock
out
mov
push
mov
add
add
sub
adc
jmp
movs
(bad)
sub
mov
or
shl
retf
gs
clc
adc
pop
lahf
jno
aad
push
je
(bad)
arpl
in
mov
or
in
mov
arpl
xor
jb
stc
std
cmp
div
in
mov
fnstsw
es
loop
stc
shl
sbb
div
pop
jne
fadd
mov
mov
and
mov
adc
dec
fcmovbe
push
mov
cwde
shl
adc
jnp
std
push
cld
mov
imul
vmptrst
fstp
retf
lock
push
fld
cmp
cmps
jp
and
lahf
sub
bound
or
in
inc
das
push
idiv
fwait
xor
fidiv
add
daa
nop
in
adc
push
fs
cld
mov
lahf
ins
or
and
dec
cmp
or
xor
(bad)
stos
cld
inc
repnz
inc
jle
les
stos
imul
mov
inc
(bad)
adc
or
add
ins
mov
aam
adc
lods
sbb
sbb
mov
scas
jb
mov
mov
sub
xchg
xchg
adc
mov
mov
imul
xadd
mov
std
lock
idiv
xchg
icebp
sub
jecxz
ss
adc
inc
jle
imul
pushf
lea
inc
ret
jecxz
inc
cli
das
ins
and
or
iret
push
aas
inc
and
mov
jmp
enter
test
aaa
dec
stc
xchg
popf
retf
xor
jo
mov
jne
sbb
adc
stos
mov
xchg
push
and
jmp
cmps
int
dec
(bad)
mov
xchg
sub
sub
enter
jo
jnp
cdq
pop
push
jge
pop
jns
clc
jge
xchg
mov
mov
push
push
imul
dec
mov
cmp
les
das
jns
jmp
sub
movs
sbb
inc
into
sahf
pop
retf
inc
push
in
gs
ds
out
loope
inc
in
pop
ja
or
add
fwait
and
pop
test
pusha
push
jb
cmp
pop
mov
aas
movs
xor
lods
mov
adc
(bad)
call
pop
adc
inc
xor
jo
dec
jnp
pop
add
sbb
and
pop
fst
fsubr
push
xchg
je
aaa
repz
lods
fwait
sbb
pop
idiv
dec
(bad)
mov
popa
and
fld
lods
mov
bound
mov
aad
dec
aas
stc
ja
(bad)
jp
add
(bad)
fnstenv
and
push
movs
fadd
into
jle
leave
(bad)
cmp
mov
push
add
outs
popf
ficom
jno
stc
ret
xchg
mov
push
call
or
xor
jmp
addr16
and
nop
lods
movs
push
test
cld
jge
js
xlat
in
cmps
shr
stc
inc
inc
adc
test
mov
dec
and
ret
xchg
in
push
fidivr
(bad)
rol
cli
mov
ss
or
pop
pop
das
jl
leave
rcl
mov
or
js
out
loopne
movs
add
daa
and
adc
jae
and
stos
push
(bad)
hlt
cld
add
pushf
jg
xor
imul
xchg
stos
pop
jp
sbb
mov
jmp
mov
inc
fcmovbe
jp
enter
call
sub
shl
shl
repnz
mov
sub
dec
cmps
cmp
fwait
xchg
xchg
sti
add
mov
xchg
xchg
iret
mov
sbb
mov
stc
inc
shr
cmp
imul
pop
add
push
fisttp
(bad)
sub
pushf
add
mov
in
aam
mov
iret
push
hlt
fcomp
fistp
or
lds
jmp
retf
or
cli
sub
test
and
into
cmp
push
mov
enter
cmp
xchg
or
inc
xchg
ret
mov
pop
movq
add
test
xchg
sti
xchg
pusha
outs
dec
loope
arpl
jge
data16
js
mov
std
and
(bad)
shl
cmp
adc
xchg
mov
cmps
inc
out
adc
mov
cs
jne
jae
jmp
jl
iret
push
mov
nop
sbb
mov
push
retf
out
cmp
sbb
lods
imul
lods
cmp
mov
nop
dec
xchg
pop
cld
(bad)
movs
int
pop
std
int3
dec
(bad)
enter
or
or
stos
and
dec
ret
adc
cmp
hlt
jnp
ret
fs
jae
mov
or
retf
ins
sub
es
int3
xchg
lods
xchg
js
std
(bad)
sbb
and
sub
aas
add
movs
rol
scas
push
stos
pop
xor
dec
and
cmc
dec
jmp
adc
lods
data16
xor
xor
sbb
int
add
out
xor
es
push
cli
sub
enter
pop
out
mov
pop
adc
jle
cwde
adc
fild
lock
pop
jnp
jbe
add
mov
(bad)
and
xchg
and
adc
cmc
xchg
cs
jnp
in
test
rcl
not
xchg
push
xor
enter
imul
or
je
fist
push
pop
mov
inc
in
pop
or
out
inc
xor
int3
loop
xchg
mov
mov
pop
adc
test
test
or
das
(bad)
mov
xor
out
lock
jae
or
sub
mov
aam
pop
xor
mov
je
retf
adc
ss
dec
or
xchg
loop
in
push
(bad)
scas
loopne
dec
(bad)
sahf
popa
leave
and
popa
mov
or
je
movs
les
pop
fwait
outs
push
add
js
outs
cld
mov
add
iret
sub
leave
mov
push
cmc
mov
and
fimul
(bad)
mov
xor
push
aas
xor
inc
mov
inc
clc
call
and
dec
aaa
fstp
sahf
inc
add
push
xchg
adc
push
sbb
(bad)
push
je
ins
retf
ins
out
mov
mov
aad
and
ret
inc
arpl
jg
pop
sub
les
mov
movs
mov
pop
push
sar
(bad)
push
aas
fcomp
pop
movs
inc
adc
pop
rcl
gs
sti
call
sbb
mov
mov
loope
cwde
fisttp
push
movs
fld
dec
cld
mov
add
int3
repnz
xchg
int
cmp
rcr
les
fadd
stos
js
bound
mov
sub
ds
jb
ss
jp
and
ins
out
pop
pop
or
pop
inc
aaa
cmp
mov
xchg
lahf
and
jg
jmp
iret
cmps
xlat
jecxz
div
jo
sub
sbb
scas
mov
(bad)
adc
imul
jo
js
into
pop
cdq
fisttp
cmp
sti
mov
rcr
mov
sub
sbb
sbb
test
stc
frstor
or
leave
(bad)
xchg
fdivr
mov
jecxz
xchg
loop
jo
sti
les
jno
inc
inc
in
cmps
aad
mov
fnsave
div
gs
jb
imul
ror
jo
lock
mov
pop
(bad)
in
rcr
jo
xchg
adc
in
xchg
mov
or
enter
fistp
pop
movs
xor
lods
out
in
inc
mov
or
call
scas
jb
mov
out
pop
jo
cmp
cmc
int3
push
jmp
cs
mov
and
push
mov
inc
inc
retf
pop
mov
rcl
loop
mov
aaa
mov
jo
cli
std
or
jne
mov
out
xor
jb
fild
cs
xchg
xor
and
mov
or
out
ficom
xchg
cmp
dec
jle
inc
dec
mov
ja
cmovge
out
or
or
les
scas
dec
pushf
mov
pop
adc
mov
dec
inc
aaa
cmc
or
dec
or
mov
sub
xchg
sub
mov
(bad)
imul
dec
je
clc
lds
fwait
in
sahf
and
rcr
adc
cwde
sbb
push
aaa
sub
jns
movs
test
or
pop
out
cmps
sbb
in
mov
pop
and
xor
movs
mov
mov
jnp
and
mov
jo
mov
jno
xchg
xchg
fsub
xchg
dec
push
ret
sbb
inc
bound
adc
mov
ror
inc
mov
jl
cmp
cli
pop
pop
pop
pop
popf
movs
and
push
iret
sar
(bad)
ret
mov
ins
lods
inc
cld
mov
xchg
sbb
jp
mov
mov
ins
repz
inc
mov
sub
shl
nop
out
enter
pushf
les
inc
jle
(bad)
fmul
out
mov
outs
loop
lea
xchg
fisub
xlat
or
cmp
loop
sub
retf
push
jae
hlt
push
dec
mov
int3
stc
sbb
add
rol
or
push
mov
sub
call
div
ss
dec
mul
sbb
stos
or
ds
cwde
sbb
mov
mov
dec
cwde
es
cmp
dec
mov
push
lods
jl
jecxz
xor
and
xor
rcl
pusha
(bad)
aas
rol
ret
dec
popa
cmp
jmp
xchg
add
inc
test
mov
pop
popf
adc
lods
mov
fdiv
push
push
ret
rcl
xchg
inc
rcl
(bad)
xchg
push
or
in
xlat
stc
or
dec
repz
test
mov
push
rcr
ins
pop
outs
mov
retf
mov
xor
(bad)
repnz
mov
inc
fsubrp
inc
mov
push
(bad)
push
jecxz
add
rcl
retf
int3
pop
out
cld
clc
mov
mov
jge
xchg
dec
mov
dec
xor
jbe
xchg
popf
sub
and
push
mov
cwde
iret
push
jle
jne
lock
lds
push
int3
and
jb
cs
sbb
adc
and
sbb
or
mov
out
ret
mov
adc
imul
enter
push
mov
push
(bad)
imul
xchg
sbb
adc
jbe
cmp
test
scas
in
sbb
mov
icebp
cmp
jns
mov
mov
(bad)
jge
arpl
sub
pop
call
dec
fs
leave
dec
cmp
or
adc
pop
sbb
rol
inc
sbb
aas
mov
xor
push
mov
mov
dec
ins
xchg
inc
inc
mov
push
jae
popf
cli
dec
inc
cmp
push
arpl
cmp
add
or
xor
(bad)
retf
add
lods
push
xchg
jne
mov
dec
inc
call
aam
cli
out
xchg
int3
scas
inc
and
dec
imul
mov
jl
xchg
ficomp
jl
xor
jl
ss
xlat
mov
push
lahf
lock
mov
or
and
jno
jne
test
mov
lods
push
mov
(bad)
test
pop
mov
push
aaa
retf
lea
nop
push
rcr
dec
iret
gs
inc
data16
adc
mov
mov
sti
jmp
xor
call
sbb
push
mov
sti
mov
pop
mov
out
mov
pop
pop
call
adc
add
test
mov
mov
call
cmps
jmp
push
push
push
dec
push
inc
jge
pop
xor
push
xor
cmovns
pop
arpl
dec
adc
sbb
scas
std
inc
add
adc
aam
outs
jns
sbb
test
lock
and
jne
lods
sub
outs
bound
xor
int
or
std
or
div
or
imul
clc
int
pop
dec
add
test
dec
rcr
jb
out
inc
in
mov
aad
or
lock
push
(bad)
jne
or
movs
or
adc
ss
cld
jl
gs
lds
mov
and
jne
adc
adc
dec
fnstcw
cmp
dec
pop
out
mov
pop
sub
fucomi
xchg
arpl
mov
es
pop
or
in
or
outs
enter
mov
call
scas
pop
out
and
sub
(bad)
clc
and
add
xchg
rcr
jno
xchg
jmp
jns
push
js
cmp
mov
out
sub
push
ins
loop
mov
xor
lock
inc
int3
cs
scas
sbb
sbb
nop
cmp
pop
in
push
or
neg
loop
stos
xchg
in
jle
loopne
adc
cld
mov
jbe
sti
jmp
shr
std
sub
mov
xchg
(bad)
cmps
shufps
xor
mov
xchg
pop
xor
dec
popf
pop
sahf
and
dec
dec
retf
dec
mov
mov
pop
loopne
push
push
add
ins
popf
or
push
pop
adc
test
out
cwde
retf
sbb
xor
popa
cld
jns
inc
or
ret
mov
dec
int3
push
stc
aas
in
inc
xor
or
mov
mov
ss
sbb
ja
out
hlt
nop
(bad)
pushf
jae
ss
push
mov
mov
idiv
mov
mov
nop
mov
jmp
fild
sub
xchg
in
movs
xchg
push
test
popa
psadbw
mov
mov
(bad)
jb
xchg
cmc
pop
xor
fs
jge
in
lods
std
cmps
and
push
scas
lock
out
jo
adc
std
push
mov
inc
push
retf
mov
call
pop
repz
addr16
add
mov
scas
out
es
ror
inc
rol
mov
push
inc
out
pop
pop
sbb
scas
arpl
stos
(bad)
xchg
out
pop
gs
lea
cmp
lods
fs
jns
mov
push
pusha
aas
add
sbb
fcomp
add
(bad)
retf
mov
or
push
pop
xchg
jmp
cmp
outs
mov
jle
or
je
adc
jns
fbstp
inc
clc
pop
sbb
xchg
out
cli
and
rcl
in
pop
and
and
sahf
push
ins
push
inc
mov
test
sub
ja
pop
xor
mov
out
pusha
ret
sub
call
xor
mov
outs
(bad)
jecxz
and
and
push
mul
jmp
fsub
push
(bad)
dec
pop
mov
les
aad
shl
stc
cli
xchg
or
jg
jmp
scas
push
mov
jl
mov
test
retf
sbb
aaa
loope
adc
cmc
int
loope
test
xor
addr16
aas
out
in
or
iret
dec
(bad)
in
push
jg
and
pop
lods
mov
dec
imul
and
outs
dec
add
dec
inc
push
sub
jb
add
pushf
jne
sahf
jle
xchg
push
ss
fs
pop
loop
jmp
add
repz
push
and
ja
lods
sub
es
and
mov
dec
adc
popa
dec
test
daa
pop
aaa
adc
enter
aam
lds
mov
inc
call
lahf
mov
in
fadd
int
data16
clc
push
call
cwde
(bad)
jp
int
xchg
call
push
sub
xchg
add
sbb
xor
rcl
mov
sub
cmp
mov
loop
dec
sahf
xchg
xchg
cmp
arpl
fldenv
pusha
push
leave
xor
jp
mov
pop
jnp
das
pop
jge
mov
mov
in
push
js
xor
shr
mov
jo
sahf
xor
pop
test
mov
test
iret
inc
mov
xor
push
pop
gs
addr16
leave
retf
or
pop
adc
add
pop
shl
push
test
popa
arpl
data16
mov
or
aaa
jmp
pop
xchg
xor
rol
push
push
jmp
int3
or
pop
dec
cmc
stc
daa
xchg
sbb
fs
pop
cmp
and
mov
test
ins
repz
fdivr
addr16
int3
push
shl
push
mov
xchg
repz
sbb
aam
sbb
out
shr
dec
mov
into
push
sbb
(bad)
(bad)
dec
sbb
jae
adc
and
xor
mov
push
cmp
inc
mov
push
pop
add
scas
sbb
aas
inc
call
(bad)
adc
shl
xchg
cmp
ja
cmp
add
ins
mov
or
pop
repnz
scas
outs
enter
mov
xor
data16
mov
push
cmp
into
sbb
dec
pop
mov
mov
fdiv
cmp
iret
jp
push
in
or
jl
pusha
lods
mov
out
mov
and
push
outs
scas
retf
cmp
popa
repnz
push
mov
data16
arpl
outs
mov
sub
jo
sbb
ja
das
mov
cmc
jno
outs
jmp
dec
cmp
shl
mov
pop
sbb
adc
mov
(bad)
pop
or
scas
(bad)
jbe
sub
pop
lods
or
push
div
aaa
scas
push
rol
popa
sahf
sbb
or
std
jecxz
mov
(bad)
int3
mov
lahf
adc
ror
cmp
adc
mov
imul
cmp
mov
loope
out
cs
setg
mov
das
test
fidivr
add
out
(bad)
not
adc
scas
pop
pop
jbe
push
call
mov
pop
inc
fs
jl
ffree
out
or
dec
lods
push
cmp
in
push
es
and
xor
dec
cmps
cmp
in
cli
mov
jae
aaa
mov
mov
loopne
pop
inc
inc
and
xlat
inc
cs
(bad)
push
test
out
dec
cmp
pop
dec
or
lods
or
mov
lahf
fistp
fwait
pop
scas
jmp
ins
mov
pop
hlt
mov
xchg
jl
mov
sbb
imul
imul
loop
je
add
add
jae
dec
in
les
(bad)
out
pop
inc
je
cmps
test
pushf
lahf
xchg
xchg
shr
cmp
dec
xor
mov
push
(bad)
fistp
pushf
add
add
lea
pop
push
popf
add
jnp
std
adc
dec
pop
loope
xchg
or
mov
scas
lea
fnop
adc
dec
cmp
pop
pop
popf
xor
push
jge
xchg
ror
das
adc
sub
push
dec
cmp
loopne
mov
xchg
mov
xor
and
out
sub
jae
hlt
pop
sub
fcomp
or
mov
and
out
cli
mov
(bad)
(bad)
xor
mov
adc
(bad)
ret
dec
mov
dec
and
fsubr
bound
xor
push
cmp
cs
jae
mov
outs
dec
push
fcomp
cmp
sub
mov
xor
repnz
cwde
jne
retf
imul
stos
push
mov
cmp
cli
mov
cld
jbe
outs
aam
fiadd
xor
fucomi
mov
xchg
popf
in
ds
int3
aaa
cmps
inc
xchg
jbe
stos
pop
xor
sbb
xchg
adc
cmp
add
test
push
add
mov
jno
xor
daa
pop
mov
imul
lods
sub
xchg
sbb
cmps
sbb
push
loop
pop
rol
loop
mov
mov
std
nop
repz
jg
push
mov
jmp
out
outs
jp
inc
sub
inc
bound
outs
inc
(bad)
pop
push
mov
sub
cmp
les
xor
or
xor
outs
repnz
mov
jae
push
outs
rol
out
sbb
sbb
sbb
ror
mov
pop
fild
pop
cmc
mov
sub
lds
call
mov
xchg
mov
jae
sub
jb
or
fstp
adc
(bad)
cmps
ja
ss
fdiv
pop
jle
pop
or
call
xchg
popa
add
int3
scas
push
mov
je
jmp
dec
sbb
test
mov
fimul
pushf
dec
push
dec
scas
push
add
hlt
xor
push
xor
mov
push
stos
xchg
pop
cmp
xchg
push
loopne
lds
in
cs
retf
js
mov
adc
mov
push
in
jecxz
xor
add
add
in
pop
call
sub
clc
push
inc
sub
jne
push
fldcw
sub
add
ret
push
inc
nop
leave
loopne
(bad)
xchg
adc
int3
(bad)
mov
add
enter
or
je
addr16
rcl
add
push
movs
xor
shr
jp
in
xchg
xchg
push
xchg
jb
loopne
fadd
push
cmp
pop
xchg
popf
mov
test
enter
and
repnz
inc
sbb
lahf
jmp
jmp
mov
xor
ins
xchg
stc
ret
and
rol
clts
popa
jge
push
xchg
aas
arpl
xchg
pushf
lods
sub
push
jno
fld
(bad)
sub
psubw
rcr
sbb
xor
gs
and
popa
and
adc
call
xor
xor
lods
rol
fs
test
pop
les
mov
fcomp
xor
jb
aas
xchg
pop
push
sbb
sar
jmp
mov
pop
(bad)
retf
neg
cmp
inc
daa
mov
sub
xchg
retf
mov
mov
sub
or
inc
inc
(bad)
int3
call
xor
call
enter
push
push
cmps
sbb
dec
or
pop
cmp
test
cld
and
sbb
cli
mov
mov
enter
repnz
ret
shl
fdiv
jmp
xlat
push
sbb
mov
or
repz
sub
lahf
(bad)
fcmovb
inc
mov
mov
repnz
mov
fdecstp
std
enter
sbb
nop
loope
enter
cwde
xchg
bound
or
add
and
jbe
daa
lahf
sbb
jg
and
fwait
jmp
ds
mov
addr16
cmp
bound
retf
outs
mov
je
dec
or
sub
adc
stos
stc
sbb
xlat
scas
test
aas
xchg
pop
sbb
pop
lods
dec
cmp
xchg
jne
aad
movs
mov
add
adc
movs
pop
push
rol
jb
sub
stc
int3
ins
and
(bad)
int3
push
sbb
add
inc
test
ins
retf
xchg
aaa
sbb
loope
add
push
sbb
das
xchg
mov
(bad)
rcr
jo
idiv
sbb
jae
mov
je
sub
add
in
arpl
jge
ins
dec
xchg
inc
sar
cmc
push
adc
xor
jmp
push
popa
movs
test
(bad)
sbb
sub
stc
xchg
jno
sbb
dec
inc
adc
mov
(bad)
sti
cmp
mov
sbb
ret
jl
imul
mov
xchg
jl
mov
jecxz
jmp
cs
xchg
inc
push
mov
or
sub
dec
loopne
mov
and
mov
out
dec
cmp
mov
imul
inc
movs
ins
jmp
pop
ror
and
das
pop
je
addr16
ds
lods
test
push
sub
fistp
add
dec
sub
ds
sbb
adc
sub
dec
int3
mov
scas
add
xor
cdq
js
retf
and
mov
mov
loop
in
mov
mov
(bad)
cmp
mov
inc
push
dec
adc
shl
cmp
out
mov
xor
sub
xchg
int3
out
pusha
jge
inc
dec
mov
in
gs
out
ret
(bad)
pusha
sbb
shl
jmp
out
jbe
mov
imul
mov
in
mov
mov
xchg
mov
jle
dec
jno
cmp
or
mov
ficom
xchg
jge
pop
call
(bad)
mov
jp
inc
add
jg
pusha
pop
jbe
jno
or
mov
in
repnz
and
jmp
mov
sub
mov
fcomi
pushf
stc
pop
or
fs
fidiv
cmp
ja
cmps
lods
xor
mov
mov
inc
add
shr
shr
push
outs
mov
mov
fisttp
out
loopne
adc
push
jo
mov
in
jecxz
inc
lods
(bad)
push
sub
std
adc
pop
dec
je
jns
test
cmc
out
mov
or
in
js
jmp
pusha
cmp
mov
(bad)
arpl
into
movs
jnp
cwde
sbb
iret
stc
pop
adc
mov
fnstenv
in
xchg
mov
pop
sbb
add
out
data16
jecxz
imul
scas
fdiv
outs
mov
xchg
mov
mov
and
dec
and
pop
dec
inc
xor
imul
push
dec
adc
push
jns
ss
ds
popf
or
xor
sub
idiv
and
fcomp
sub
xchg
cli
call
xlat
int3
test
cmp
dec
daa
cmp
sbb
shr
(bad)
inc
in
mov
inc
add
into
js
pop
push
inc
div
mov
or
out
pusha
call
(bad)
jl
jp
pop
lods
xchg
pusha
adc
push
sub
mov
mov
test
cdq
hlt
pop
lds
xlat
add
cmp
and
ficom
mov
retf
inc
popa
in
mov
out
std
cmp
dec
adc
jb
js
leave
push
adc
outs
sbb
ja
sbb
jmp
sub
inc
in
mov
cmp
mov
and
sub
sub
into
ja
jae
inc
aas
inc
jb
mov
and
push
(bad)
jecxz
cmp
lods
cdq
jne
clc
push
fdivr
push
and
adc
loope
pop
mov
ret
stc
mov
or
retf
cmp
in
mov
adc
cmp
int3
sub
xchg
stc
mov
sbb
inc
cmp
jl
sub
and
imul
jno
xor
or
sbb
ret
popa
das
dec
ins
pop
stos
das
imul
adc
loop
xor
rcr
out
sbb
hlt
aam
cmc
xchg
mov
lahf
or
xor
mov
es
popa
or
fcmovnu
or
scas
xchg
xchg
repz
dec
mov
pusha
into
sbb
and
mov
popf
mov
icebp
sbb
jmp
sti
push
pop
cmp
jge
arpl
inc
jne
mov
jns
pop
push
and
sub
mov
ror
ins
test
mov
sub
ficomp
push
fmul
sbb
scas
aas
push
fstp
mov
push
cli
and
pushf
and
mov
les
iret
sub
aaa
xchg
cmovbe
jecxz
dec
test
mov
adc
div
fild
sbb
push
popf
push
cmp
mov
push
xchg
jmp
mov
sub
imul
mov
jns
sti
mov
push
mov
jge
adc
and
and
int3
test
shr
xor
daa
out
sbb
repnz
mov
imul
jl
and
xor
fild
movs
jns
mov
dec
mov
jnp
mov
cmc
outs
test
and
es
arpl
xchg
push
inc
sbb
mov
jl
ror
xor
in
xor
xchg
(bad)
fild
mov
call
icebp
(bad)
(bad)
loope
mov
jmp
ror
mov
in
in
loop
aaa
loopne
imul
ja
cdq
test
cmp
ret
in
jb
jmp
pop
cmps
scas
jmp
dec
add
inc
sbb
add
sbb
inc
pop
mov
test
mov
lock
and
or
popf
and
scas
xor
lea
lahf
fsubrp
inc
adc
in
outs
cmp
dec
and
adc
jnp
lock
std
sub
sahf
stc
fmul
add
lock
dec
mov
pop
and
out
pusha
std
stos
or
pop
mov
inc
(bad)
sub
pusha
fwait
gs
sub
cmp
dec
outs
xchg
or
pusha
push
inc
push
sub
lds
sub
nop
push
mov
push
jle
daa
pop
inc
xchg
rcr
loope
push
mov
mov
in
and
fnstsw
adc
(bad)
out
and
imul
cmps
dec
adc
test
(bad)
jmp
cmp
fcomp
sub
daa
push
clc
test
bound
fld
mov
aas
adc
ja
ds
mov
xchg
pop
shr
xor
stos
pop
(bad)
push
xchg
dec
fst
add
dec
repz
ds
xchg
dec
mov
leave
rol
mov
xor
scas
mov
enter
pop
ins
movs
test
and
out
push
mov
push
icebp
mov
cmps
mov
cmc
and
sbb
ss
push
cmps
adc
inc
mov
loop
sbb
stos
dec
inc
dec
fidivr
test
imul
and
fdivp
fstp
arpl
sbb
ror
(bad)
outs
inc
jp
mov
mov
adc
cs
movs
gs
dec
aad
(bad)
lds
lock
fnstsw
cmp
popa
inc
sbb
xchg
push
xchg
dec
xchg
sar
sub
fwait
jns
(bad)
in
mov
jns
pop
ins
loopne
test
sub
mov
xchg
mov
bound
adc
push
pop
inc
cmc
stc
add
adc
cmp
data16
gs
cwde
bound
or
cmp
or
jae
mov
mov
lods
(bad)
mov
dec
cli
daa
and
mov
in
out
cs
mov
loopne
(bad)
aaa
or
push
movs
bound
add
cmps
inc
mov
fdivr
mov
sbb
cli
adc
sub
jmp
xchg
dec
xadd
inc
loop
int
add
mov
jne
gs
mov
aas
mov
cld
cli
dec
dec
sub
loopne
scas
outs
into
iret
movs
rcr
inc
xchg
push
push
das
cmp
mov
dec
and
and
push
popa
or
or
(bad)
dec
(bad)
imul
adc
dec
(bad)
cmp
lea
adc
in
xchg
fist
mov
adc
mov
loope
icebp
mov
dec
stc
jbe
shl
nop
sbb
add
or
push
dec
and
lea
jg
fild
lds
cs
cmc
das
les
pusha
ja
inc
out
push
leave
xor
fild
in
xchg
adc
mov
mov
jns
fidivr
js
lods
int3
sbb
sub
lea
jo
sbb
in
(bad)
push
icebp
addr16
rcr
mov
sub
pop
mov
jmp
cmp
movs
add
xor
jns
retf
out
cmp
sbb
pop
cmp
fldenv
mov
and
imul
sbb
push
or
loop
cs
dec
mov
push
retf
aaa
test
rcl
bound
sti
xor
xor
mov
inc
jl
fs
cmc
cmc
dec
loopne
leave
inc
test
and
pop
push
sbb
xchg
mov
mov
and
fisttp
inc
push
test
adc
jne
jp
adc
sub
add
das
icebp
ret
rcl
mov
loopne
push
scas
stc
add
addr16
outs
dec
push
cli
dec
in
mov
mov
in
retf
sbb
xchg
xor
(bad)
sub
out
and
sbb
out
sub
ja
or
jp
xchg
or
fst
mov
(bad)
ss
fld
stos
data16
daa
xchg
adc
pop
mov
fdiv
fdiv
xchg
call
jg
mov
cmp
sbb
scas
repz
cmp
mov
dec
pushf
mov
sub
cs
mov
jno
inc
jle
push
cdq
shl
fldenv
jbe
in
jno
cmp
dec
xchg
xchg
js
adc
jns
les
push
rcr
mov
cli
jg
jp
mov
stos
in
cs
inc
mov
mov
fwait
dec
sbb
or
mov
jle
pop
cmp
and
ins
sbb
das
daa
jo
(bad)
sahf
add
mov
and
enter
and
pusha
leave
sbb
push
cmp
icebp
das
fs
data16
sbb
inc
pop
xlat
inc
loop
and
fidiv
aam
ror
mov
les
mov
loope
(bad)
outs
jns
ins
(bad)
in
mov
out
fadd
mov
repz
stc
hlt
xor
jg
push
in
jge
adc
jmp
cli
or
cld
mov
jae
clc
push
popa
mov
fcomip
push
cld
jecxz
jle
into
je
adc
lods
fld
leave
ss
out
sbb
dec
addr16
mov
xchg
mov
xchg
hlt
jg
xchg
sub
push
lock
adc
or
pop
or
and
sbb
inc
or
scas
aas
call
sub
out
(bad)
scas
iret
les
int
adc
dec
movs
xchg
mov
xchg
(bad)
les
mov
adc
pop
(bad)
mov
rep
sahf
sahf
cmp
scas
or
call
jno
and
push
fnsave
mov
outs
dec
pop
ror
(bad)
repz
lds
inc
je
sub
and
pop
out
js
xchg
xchg
lock
lea
lods
fild
xor
sbb
pusha
cld
std
push
add
cmc
mov
jno
(bad)
mov
dec
pop
cdq
iret
xchg
dec
addr16
pop
stos
es
into
rcr
xor
retf
mov
jne
or
dec
inc
cld
ficom
mov
daa
jbe
aam
imul
(bad)
pop
mov
dec
imul
popa
into
ror
and
mov
cmps
push
enter
mov
mov
dec
in
pusha
test
or
sbb
or
jmp
sub
pop
loope
cdq
mov
repz
adc
mov
push
push
shl
adc
in
out
inc
xchg
cs
fwait
dec
sbb
(bad)
or
repnz
xor
pop
and
pushf
stc
pop
xchg
or
rcr
push
bound
sub
push
sbb
gs
shr
std
test
dec
out
icebp
call
in
inc
ret
xchg
cmp
fldcw
push
cmp
cmp
sub
enter
std
add
or
aas
pop
jle
fld
pop
imul
sbb
iret
(bad)
shl
jg
cmp
in
ins
dec
mov
xchg
enter
(bad)
mov
jge
imul
jae
jmp
popf
lahf
in
or
sbb
shl
fwait
pop
(bad)
popa
jecxz
xor
xchg
(bad)
or
jno
adc
out
mov
jb
cmp
imul
shl
jne
push
xchg
sti
and
pop
into
lods
xor
sbb
dec
out
jmp
and
retf
dec
fbstp
jb
jg
popa
loop
iret
xlat
lods
jmp
add
(bad)
mov
inc
ja
jmp
add
jb
shl
cmp
sar
add
xchg
add
mov
push
fld
cmc
and
mov
xchg
adc
push
xchg
cwde
adc
mov
daa
push
movs
std
push
outs
dec
or
je
jmp
push
arpl
xor
lahf
inc
or
push
retf
out
aaa
mov
pop
icebp
xchg
fstp
gs
in
jmp
int
bound
mov
adc
lahf
pop
sub
mov
inc
cmp
and
jbe
xor
jg
xchg
push
hlt
ins
sub
inc
je
jo
mov
ins
jo
fistp
cli
pop
dec
xor
es
arpl
mov
enter
cli
cmp
jmp
jb
aas
clc
jb
pushf
add
shl
adc
leave
int
lock
jae
mov
arpl
loopne
jns
jns
jge
ret
out
int3
push
mov
add
or
xchg
bound
pop
(bad)
jb
cmps
xor
(bad)
push
xchg
sbb
(bad)
push
mov
jge
ss
xchg
call
xor
out
imul
pop
dec
mov
out
loopne
pop
pop
jmp
add
dec
outs
fdivr
(bad)
push
add
adc
pop
jne
mov
retf
add
push
out
mov
mov
outs
mov
stos
pop
faddp
bound
jb
pop
inc
jmp
movs
(bad)
mov
xchg
fild
icebp
adc
mov
mov
mov
mov
mov
dec
retf
jo
(bad)
jns
mov
xchg
out
scas
and
push
jno
add
adc
arpl
adc
retf
out
outs
inc
inc
push
cmc
repz
mov
cs
push
retf
lahf
cmps
push
inc
aad
or
sbb
lds
adc
pop
fidivr
dec
adc
xor
inc
sbb
lods
jmp
mov
jbe
fmul
aaa
adc
jmp
into
mov
cmp
sub
adc
adc
fwait
xlat
repz
jmp
inc
xlat
and
pop
cld
aas
arpl
imul
test
outs
mov
xchg
lock
(bad)
push
inc
sub
fwait
not
int
stos
neg
or
xchg
inc
mov
das
cmovae
(bad)
dec
in
test
pop
pop
fisttp
push
cs
xor
jmp
cmc
std
outs
cmp
add
sub
jae
mov
int3
psllq
or
(bad)
mov
xlat
cmp
mov
mov
or
inc
repz
es
push
mov
(bad)
ret
sbb
adc
pop
rcr
fstp
fimul
test
aam
(bad)
add
sbb
cmp
xchg
push
jne
stos
pop
cmp
retf
cli
or
pop
sub
fs
inc
je
ds
mov
cmp
add
and
test
rol
cmps
movsx
ins
in
xchg
(bad)
xor
pop
call
mov
daa
sub
add
call
mov
lods
daa
out
pop
cdq
aaa
adc
test
xor
jle
xor
sbb
test
inc
jle
pop
sub
fcom
inc
std
retf
mov
cmp
cmps
inc
and
sar
push
shl
imul
inc
push
sar
mov
cld
add
inc
pop
push
adc
xlat
or
jp
shl
imul
mov
(bad)
int
push
enter
jmp
sbb
push
test
adc
loop
sub
pop
lds
add
sti
mov
push
dec
mov
call
cmps
mov
cli
dec
int3
push
add
push
or
into
xor
cs
add
adc
mov
fld
xchg
mov
out
push
push
add
dec
jle
mov
push
cwde
xor
mov
add
adc
clc
arpl
mov
jo
movs
jge
jmp
jbe
loopne
inc
enter
cmp
and
add
dec
test
fnstsw
outs
fstp
adc
mov
mov
xchg
retf
cmp
stc
push
clc
(bad)
jb
and
pop
mov
mov
mov
aaa
stos
inc
das
daa
(bad)
cli
out
sbb
pop
pop
fsubr
in
cmp
push
loope
pop
test
adc
add
adc
sahf
fxch
(bad)
cwde
mov
lods
xchg
pop
or
xchg
xchg
mov
xchg
inc
test
cmp
adc
jb
jo
push
pushf
and
xchg
mov
adc
dec
shl
into
adc
ins
cmp
stc
pop
dec
jg
push
int3
mov
adc
and
adc
mov
retf
(bad)
retf
xor
mov
xchg
jmp
inc
test
or
dec
(bad)
pop
add
adc
sub
inc
or
and
adc
ja
push
xchg
gs
and
fadd
(bad)
daa
lahf
jle
mov
fld
sbb
jp
iret
icebp
call
sbb
imul
hlt
gs
stos
xor
dec
jae
into
fild
cmp
mov
jecxz
call
lods
cmc
mov
fdiv
push
mov
inc
pop
(bad)
stos
sbb
hlt
mov
cmp
mov
and
repnz
icebp
sub
inc
fsubrp
fst
cli
add
mov
and
xchg
xor
(bad)
rcr
pushf
stos
(bad)
cmp
push
in
pop
lods
xchg
pop
add
repz
loopne
jbe
and
call
retf
es
adc
jnp
xchg
mov
push
imul
push
xchg
rcr
push
mov
dec
add
jnp
sbb
test
inc
loop
pop
cmp
pop
mov
fadd
fbstp
call
lock
fcmovu
cli
hlt
push
sub
shr
mov
loope
xchg
mov
nop
lahf
ja
sti
sti
jo
fldcw
cwde
inc
outs
inc
loopne
aas
jp
xor
cdq
add
jbe
push
lods
(bad)
xchg
xor
dec
dec
cwde
xchg
in
in
xchg
xchg
addr16
inc
faddp
sahf
xor
sar
lock
shl
clc
jg
inc
ret
cwde
adc
leave
fmul
cwde
add
ins
dec
ss
mov
fmul
push
clc
push
mov
push
loop
mov
jmp
call
or
sub
or
cmp
inc
xchg
sbb
mov
inc
jmp
and
rcl
dec
mov
outs
jbe
xchg
xor
pop
and
pop
mov
sbb
imul
sub
repz
out
mov
into
and
gs
pop
pop
add
jmp
pop
push
mov
loopne
or
repnz
mov
cwde
dec
mov
mov
jmp
sbb
xchg
pop
dec
inc
repz
fisttp
imul
sub
sub
pop
sub
mov
add
dec
cmp
xchg
cmp
or
in
cmps
push
mov
bound
pop
stc
xchg
mov
sbb
push
sub
cmp
adc
dec
add
mov
adc
jl
(bad)
mov
jecxz
dec
rcr
add
cmp
ror
push
adc
rcr
sbb
shl
out
inc
test
faddp
loope
arpl
mov
test
sbb
(bad)
jmp
lds
cmps
retf
repnz
jp
retf
imul
test
and
imul
add
and
jle
mov
pop
xor
(bad)
push
jp
shl
nop
in
dec
pushf
pop
sbb
(bad)
stc
cmps
inc
cmps
jmp
mov
mov
cld
fidivr
sahf
outs
and
cmp
mov
repz
push
mov
rcr
mov
rcl
popf
mov
mul
adc
dec
add
xor
adc
ja
mov
sub
cli
dec
stc
sub
push
(bad)
jmp
scas
push
sbb
add
mov
add
loope
repz
dec
enter
xchg
xchg
or
mov
or
rcl
pop
and
pop
movs
push
sbb
sbb
sbb
cmp
sbb
rol
or
xchg
xor
add
cmp
dec
adc
jmp
dec
jg
enter
jbe
es
add
xchg
dec
mov
call
fstp
cdq
lods
lock
int
push
sti
sbb
xor
jmp
ror
retf
shl
retf
fild
cs
and
cmp
jp
pop
test
test
pop
sbb
and
or
xchg
cmp
push
pop
loopne
loop
(bad)
test
sub
push
sub
or
std
mov
cdq
mov
push
xchg
inc
loop
xchg
xchg
hlt
sub
movs
adc
lahf
fstp
mov
cli
call
jb
pop
dec
cwde
jg
jns
inc
mov
sar
sbb
iret
jno
lea
repz
sub
dec
cmp
into
loopne
and
push
cmp
rcr
ins
lods
sbb
sub
aam
popa
push
scas
add
pushf
jg
xchg
inc
stc
rol
mov
ins
or
push
sbb
add
adc
and
mov
mov
pushf
inc
bound
int3
xchg
hlt
stos
jecxz
scas
xchg
in
pop
sbb
jae
xchg
pop
(bad)
or
mov
xor
cmp
dec
sub
fcomp
ret
jmp
or
adc
ret
jecxz
outs
mov
repnz
jp
in
xchg
aad
ds
adc
inc
cmp
dec
lahf
xchg
jmp
or
sub
sub
cli
cwde
ret
mov
stos
lea
lock
fwait
sub
outs
aad
aas
aam
pushf
inc
push
and
pop
adc
pop
js
inc
inc
arpl
in
not
sbb
test
lods
xor
out
repnz
sbb
ds
int
dec
jge
add
xchg
push
and
sbb
push
sti
test
dec
mov
sbb
push
xchg
stos
pusha
push
adc
lahf
and
mov
sbb
aaa
xor
das
pop
test
es
cmp
mov
mov
in
pop
pop
scas
sbb
ret
ret
stos
and
jecxz
popf
repz
mov
sbb
mov
fnstsw
in
xor
pushf
rcl
jecxz
(bad)
jae
jmp
mov
and
mov
icebp
inc
daa
pop
icebp
xor
imul
retf
loop
outs
enter
das
enter
xchg
inc
cmp
lock
aam
outs
sahf
frstor
cdq
push
or
xchg
jne
jp
imul
add
loop
xchg
jl
out
outs
fcomp
or
and
lahf
sub
and
pop
and
mov
rcl
pushf
push
pop
scas
mov
bound
ret
(bad)
ins
mov
push
push
sahf
sub
xchg
sbb
push
loopne
and
push
popa
push
mov
adc
out
push
std
aad
int3
push
loop
out
(bad)
dec
pop
jecxz
sub
xchg
mov
xor
lods
pop
inc
inc
fiadd
jo
iret
mov
pop
push
test
push
or
nop
in
inc
adc
pusha
cmc
in
lock
aad
out
mov
pop
inc
aaa
bnd
bswap
ds
add
inc
pop
add
lods
sbb
dec
xchg
loopne
push
sub
sub
aaa
dec
sar
popf
fisttp
cs
icebp
cmp
add
test
sbb
retf
clc
js
pop
in
pop
xor
mov
mov
or
dec
push
fs
jb
call
jnp
mov
(bad)
adc
jnp
fldenv
jae
xor
mov
xchg
mov
xchg
cmps
lds
push
test
js
(bad)
out
and
int
mov
(bad)
adc
fwait
push
xchg
jns
mov
sbb
or
hlt
aaa
pop
ret
and
jge
pusha
push
lea
xchg
jecxz
gs
daa
push
outs
jbe
and
retf
push
shl
jle
clc
cmp
imul
dec
shl
mov
add
mov
loopne
add
pop
dec
xor
push
in
jge
adc
mov
lods
adc
mov
dec
xor
call
pop
inc
mov
lds
(bad)
cmc
cmps
cmp
movd
das
inc
pop
cmp
xor
mov
mov
rol
xor
stos
imul
aas
inc
lds
scas
pop
psraw
pop
lock
popa
add
add
adc
loope
test
dec
jecxz
cmps
xchg
aaa
cld
fcomp
xchg
sbb
jae
pop
int
je
cmp
leave
nop
and
ret
xchg
test
jno
sbb
out
push
add
lahf
push
and
push
mov
mov
or
mul
std
loop
shl
push
int3
mov
sub
mov
iret
pop
movs
sub
movs
adc
test
add
pop
das
mov
adc
or
ins
jmp
cmps
push
(bad)
scas
loop
mov
cmps
call
ss
repnz
fisttp
(bad)
jne
loope
loope
push
sub
hlt
xlat
jno
out
bound
sbb
pop
sbb
xchg
mov
push
and
pop
jne
pop
repnz
leave
lahf
or
inc
pusha
sbb
into
inc
clc
or
mov
ins
iret
call
jp
hlt
out
mov
ja
mov
or
pop
dec
inc
mov
sbb
add
pusha
add
sbb
loope
nop
mov
fisubr
dec
sub
cmp
adc
jecxz
outs
xlat
cmp
sbb
jp
sub
mov
inc
sbb
ret
arpl
stos
out
and
hlt
adc
mov
or
xchg
lods
xchg
les
jl
clc
mov
(bad)
lods
bound
mov
adc
mov
cld
cwde
push
lock
cmp
ret
sbb
mov
scas
stc
fnsave
inc
dec
add
pop
dec
into
dec
push
pop
jge
mov
mov
psrld
sub
(bad)
cs
or
repnz
test
mov
int
adc
push
aad
ds
(bad)
mov
outs
mov
jns
sub
adc
mov
lea
xchg
(bad)
in
pop
(bad)
and
mov
inc
push
rcr
call
dec
cmp
pop
stos
pop
xor
out
push
ret
(bad)
call
lods
adc
pop
div
loopne
mov
push
pushf
push
jp
mov
adc
sub
pop
cmp
adc
int3
stc
cmps
clc
pop
sub
sahf
ror
mov
push
fs
jno
sbb
retf
jo
ret
lock
inc
adc
(bad)
std
sbb
(bad)
nop
cld
lods
pcmpgtb
mov
into
clc
fcom
jmp
aas
add
and
dec
xor
mov
ret
xchg
iret
shl
add
mov
jb
fs
mov
(bad)
loope
push
or
adc
add
and
inc
xchg
jb
mov
out
rcr
lahf
ds
nop
inc
lock
add
into
adc
push
mov
lods
pushf
ins
sub
call
dec
out
add
push
or
int
sub
pop
stc
add
sar
mov
dec
lea
adc
lahf
imul
sub
sub
aam
inc
(bad)
cmc
in
sti
dec
bound
in
jmp
add
xchg
inc
aam
pushf
push
sbb
mov
cmp
test
mov
xchg
sbb
(bad)
pop
xchg
push
xacquire
ins
enter
push
inc
sub
mov
aad
sub
call
xor
clc
test
rol
push
mov
or
xor
pop
adc
add
adc
mov
push
sbb
fs
aaa
aaa
sub
movs
movs
repz
cmps
stc
fstp
sub
sbb
sbb
out
sbb
(bad)
(bad)
mov
rcl
or
xchg
jp
ins
mov
and
imul
aaa
dec
repz
inc
fimul
pop
int
push
add
jmp
es
pop
cmp
mov
jmp
rcr
sahf
inc
mov
mov
into
jp
stos
out
fidiv
mov
fdiv
push
test
pop
data16
inc
xchg
js
xchg
adc
inc
arpl
fistp
mov
mov
sub
adc
dec
sub
or
sbb
shl
out
jns
pushf
das
out
adc
das
push
ja
mov
inc
pushf
test
dec
xor
sbb
paddusw
out
adc
or
int3
mov
cmc
push
or
loope
adc
jne
push
jg
test
(bad)
adc
inc
cld
in
push
loop
daa
jb
cmc
cld
ret
(bad)
pop
dec
cmp
push
cmp
push
push
dec
and
sbb
push
dec
mov
loope
xor
mov
mov
jmp
dec
sub
bound
pop
dec
dec
sti
add
nop
cmp
xchg
cs
push
cmp
inc
xchg
add
loop
aam
test
mov
or
mov
fwait
call
out
sub
retf
fistp
sub
dec
adc
aad
push
or
mul
(bad)
cmp
lods
push
pop
leave
out
movs
nop
test
jb
inc
jne
sub
scas
pop
adc
xchg
mul
imul
hlt
jae
outs
mov
pop
jl
pusha
xor
lock
stc
push
jb
dec
mov
mov
mov
mov
sub
cmp
movs
and
into
cmp
lds
push
fisttp
je
dec
fnsave
dec
pop
pop
mov
sti
lods
(bad)
pop
cld
das
gs
inc
stos
(bad)
mov
push
mov
mov
nop
test
push
sahf
push
test
je
out
sub
adc
fsub
ds
xchg
or
bound
jge
mov
dec
push
push
cwde
mov
mov
pop
aas
pop
sub
sub
adc
fiadd
lods
(bad)
xchg
adc
dec
inc
fsub
(bad)
or
pop
aas
(bad)
test
popa
or
pop
sbb
or
adc
xlat
imul
inc
jle
iret
test
add
sbb
dec
xchg
pusha
add
call
pop
cmp
adc
push
movs
lea
or
in
loop
fwait
pop
dec
dec
xor
ds
fmul
movs
push
(bad)
pop
sbb
stos
pusha
std
jo
mov
sub
xor
xor
pop
xchg
loop
and
lds
imul
jecxz
out
mov
dec
xchg
cmps
in
ins
outs
ret
ja
js
daa
(bad)
rcl
cmp
xchg
cmp
imul
push
arpl
int3
movs
adc
ret
retf
add
add
arpl
fdiv
jbe
fwait
inc
fiadd
call
lea
cli
push
sub
dec
dec
xchg
push
fnsave
inc
sub
lock
lods
adc
sub
adc
dec
xchg
call
cs
push
inc
mov
inc
cmp
cmc
sbb
cmp
push
loop
mov
addr16
xchg
scas
pop
movs
sbb
cmp
rcl
or
out
push
inc
loope
loop
repnz
int3
pop
jno
adc
fbld
mov
cs
stc
jns
ss
pop
ins
mov
xchg
jle
hlt
gs
enter
in
dec
enter
push
pop
out
test
dec
mov
sbb
sar
clc
cmps
dec
and
mov
outs
int3
popa
cmpxchg
cli
dec
sbb
loopne
stos
and
lock
inc
push
mov
test
pop
dec
add
and
ins
pop
push
push
fldenv
xor
pop
jmp
cs
aad
(bad)
ja
sub
xchg
mov
adc
pop
or
test
das
nop
jp
xlat
jb
xchg
int
mov
je
ret
inc
xor
add
out
stos
inc
pushf
loopne
mov
and
pop
jae
sar
outs
xor
test
sti
xlat
xor
mov
cmc
arpl
and
fst
or
int
sbb
ins
adc
mov
stc
add
dec
cmps
(bad)
add
pop
test
test
out
mov
add
mov
sbb
push
push
pushf
fcomp
cmps
aas
aas
out
loopne
retf
cmp
fdivr
xchg
fidivr
xchg
pop
inc
in
inc
shl
xchg
xchg
in
pushf
cmps
jnp
jl
out
leave
cmp
jo
sar
sub
pop
sti
cdq
xor
shr
add
rcr
ins
sbb
xor
mov
mov
cli
mov
mov
sub
repz
repz
fld
jbe
je
cli
ror
mov
inc
jecxz
fidiv
repz
outs
and
or
inc
sbb
fcomp
inc
xchg
(bad)
sbb
push
lds
fdiv
push
(bad)
push
jno
mov
push
cmp
xchg
into
retf
and
inc
jbe
js
push
xchg
pop
jmp
sahf
jmp
cmp
mov
scas
jnp
sub
out
or
pop
cmp
mov
sub
or
out
inc
or
loope
adc
push
mov
cmps
pop
add
jmp
cmps
sbb
jns
ret
push
outs
jle
(bad)
mov
daa
inc
stos
bound
sbb
inc
pop
and
mov
cmp
loope
ins
push
test
xor
retf
mov
das
or
inc
xlat
cmc
xor
xchg
cmps
and
ds
mov
pop
xchg
or
adc
add
xchg
pop
pop
mov
push
xchg
inc
ins
add
inc
bound
cmp
iret
popf
xor
sub
or
sbb
fist
mov
sub
les
sar
aad
sub
mov
dec
imul
cwde
out
and
cs
cmp
mov
push
xchg
hlt
outs
sbb
nop
retf
ins
mov
adc
lock
ficomp
sub
mov
mov
jae
and
xchg
mov
sti
ja
movs
outs
inc
shl
jmp
(bad)
aaa
xchg
rcl
dec
adc
leave
mov
pop
call
test
jb
imul
lock
or
xor
pop
popa
mov
or
add
push
cmp
mov
mov
pusha
cs
dec
es
inc
aaa
dec
retf
stc
fwait
cmp
neg
lods
jg
add
stc
mov
jnp
jmp
lds
(bad)
aad
push
and
jmp
ss
push
and
hlt
movs
add
or
push
push
cld
xor
sbb
adc
mov
cmp
pop
adc
loope
inc
dec
mov
and
fdiv
test
jno
out
mov
jge
into
stc
dec
xchg
fdiv
pop
cmp
dec
out
and
cmp
(bad)
xchg
push
(bad)
pop
push
xor
xchg
sub
ja
test
ss
sub
ret
cmp
aaa
and
mov
test
pusha
retf
call
cli
adc
addr16
mov
inc
jno
not
inc
sub
or
mov
mov
cdq
push
mov
mov
mov
aaa
scas
dec
and
repz
daa
shr
out
mov
repz
in
loopne
dec
jl
enter
scas
int3
jno
xor
jmp
xchg
test
fisttp
push
or
cld
mov
inc
add
add
in
and
adc
fbstp
in
cwde
add
sar
bts
xor
cdq
or
das
sub
jmp
pop
mov
mov
ds
aad
cli
imul
push
rol
jb
push
enter
fild
mov
push
mov
outs
jb
dec
mov
cmp
movs
adc
inc
sub
idiv
shr
ins
fild
lods
por
push
or
sbb
and
(bad)
imul
nop
mov
cmp
aam
scas
push
and
cmp
iret
popa
les
popf
jne
pop
jp
adc
adc
popa
push
cmp
pop
sub
mov
jnp
fdiv
or
xchg
iret
push
cmps
(bad)
cmp
and
icebp
cmp
ret
imul
mov
in
inc
enter
rcr
out
movs
je
int
sbb
je
lock
pop
aaa
jo
scas
sahf
adc
xor
sbb
outs
add
stos
push
xor
pop
dec
mov
push
cmp
and
cmp
adc
cmp
rcl
lods
ins
jbe
fisub
mov
lods
data16
push
adc
ss
jp
jnp
inc
jle
lods
add
mov
test
sbb
call
(bad)
or
es
cmp
add
adc
nop
sbb
jle
ds
mov
shr
or
scas
inc
inc
adc
and
add
(bad)
mov
jnp
push
inc
fisttp
xor
sti
data16
jmp
add
jp
dec
cmp
ror
addr16
in
pop
ins
cli
or
sbb
fst
push
sub
ds
dec
adc
pop
xor
(bad)
out
mov
add
(bad)
pop
pop
int3
cwde
inc
push
cmp
movs
cmps
aad
xor
and
aas
sbb
aas
aam
cmps
cwde
sti
push
std
cs
adc
dec
(bad)
cmc
cmps
(bad)
outs
jmp
out
in
cmp
add
push
jge
sbb
pop
popa
push
data16
(bad)
add
xor
daa
mov
(bad)
sub
test
imul
add
xchg
xor
push
mov
leave
hlt
int3
xlat
fld
fwait
sbb
jmp
(bad)
cmps
mov
out
and
pop
enter
cmc
mov
xchg
mov
fidiv
lea
cmp
shl
ins
imul
inc
lods
jns
cmp
or
pop
(bad)
(bad)
cli
(bad)
ins
push
xchg
add
mov
call
jle
cmp
mov
adc
sub
scas
cmp
nop
xchg
in
xchg
hlt
cmp
out
lds
xor
add
xlat
adc
jmp
in
pop
mov
sbb
xchg
mov
popa
xor
repz
js
push
lds
mov
mov
inc
rcl
in
xchg
and
retf
dec
jb
jmp
sbb
jmp
jmp
jmp
or
cmps
fcomp
outs
inc
out
cwde
add
les
call
push
inc
lods
jle
cmp
mov
jbe
std
jbe
cmp
or
call
or
out
jecxz
ins
clc
xchg
mov
stc
and
fdivr
jge
or
mov
cmps
imul
or
push
jecxz
adc
ret
fldcw
cmps
lock
leave
mov
dec
lahf
dec
cmp
ja
(bad)
jge
(bad)
fisub
jg
and
fldenv
scas
test
fsubrp
(bad)
stos
or
out
xchg
jge
mov
inc
nop
ins
lock
dec
stc
mul
and
sbb
shr
scas
je
jmp
sti
jae
fnstenv
or
sub
ret
xor
jo
jg
or
scas
push
(bad)
mov
dec
mul
push
sti
rol
or
sbb
mov
xor
mov
or
out
shl
sub
push
fsub
lahf
aam
lds
sub
in
pop
sbb
xor
mov
mov
and
in
loope
mov
and
inc
aaa
aas
sbb
and
mov
mov
jmp
ds
(bad)
icebp
mov
mov
adc
lds
(bad)
cmps
pop
cmp
repnz
int
jns
jbe
fs
cmp
and
data16
(bad)
dec
jns
mov
xchg
jp
inc
repnz
push
sbb
or
sub
sub
lods
add
add
ja
pop
dec
cmp
lds
mov
inc
mov
xchg
adc
jae
sbb
sti
mov
bound
mov
test
ja
add
rol
and
lods
jle
pop
mov
addr16
dec
shl
xor
ins
mov
mov
mov
test
push
pop
and
dec
aam
(bad)
imul
int
jp
(bad)
cli
pop
call
arpl
sbb
daa
jg
mov
and
xor
nop
sub
cmp
push
iret
mov
mov
test
mov
(bad)
adc
add
out
inc
cmps
inc
xchg
daa
cmps
jge
xchg
mov
mov
pushf
bound
mov
movs
xor
inc
fld
into
stos
xor
(bad)
and
retf
test
mov
pop
mov
and
sbb
pushf
push
shr
arpl
int
add
ss
pop
push
test
(bad)
hlt
inc
push
push
ret
jmp
fwait
in
shl
push
arpl
add
fild
dec
std
ficomp
bnd
out
(bad)
shld
das
addr16
jb
retf
test
add
add
sahf
push
mov
fisttp
dec
loopne
sbb
ja
xchg
jmp
or
sub
repz
ja
js
dec
ja
and
and
push
dec
loopne
mov
xchg
(bad)
xlat
mov
dec
fisub
js
movs
bound
cmp
jmp
dec
jno
rcr
push
fwait
pusha
push
icebp
jo
jne
imul
sub
movs
aam
jb
test
adc
jo
jb
dec
xor
pusha
mov
and
dec
jle
fwait
test
add
adc
inc
pop
pop
ss
sbb
mov
dec
js
dec
cmp
rcl
(bad)
mov
xor
mov
add
push
ds
mov
sbb
ror
xor
cmps
movs
jno
in
cmp
push
mov
and
inc
arpl
call
xchg
push
cmp
fwait
mov
out
aam
jl
scas
ret
push
es
add
lock
push
jge
fwait
sub
scas
aaa
adc
xchg
pop
enter
cld
or
jle
lds
push
xchg
int3
(bad)
out
add
adc
aaa
sub
push
mov
mul
mov
dec
or
cmp
inc
push
aas
(bad)
sbb
sub
pop
push
jb
adc
and
inc
xchg
xor
mov
dec
sbb
std
pop
sub
add
push
fldcw
inc
out
adc
ja
cld
stc
enter
pusha
out
xchg
sub
ins
pop
outs
xchg
sbb
push
test
jo
or
movs
lods
scas
adc
lods
int
lahf
dec
sbb
sbb
clc
stos
sbb
(bad)
(bad)
sub
rcl
hlt
fdivr
inc
jno
inc
jo
pushf
push
ds
sub
mov
jnp
fnsave
pop
sbb
rcr
lea
test
pop
enter
add
leave
js
int
ror
es
pushf
pop
imul
cli
mov
jnp
mov
fsub
mov
jne
sub
sti
sbb
jb
pop
jle
cmp
(bad)
jge
cmps
or
mov
ja
adc
retf
cmp
cs
lea
adc
mov
mov
mov
es
stos
jmp
fwait
and
rol
jmp
das
inc
aam
imul
dec
adc
mov
or
sahf
call
or
into
cmp
pop
out
dec
xchg
stos
push
sub
ret
iret
cmp
cvtpi2ps
cmp
xor
sub
or
dec
cwde
push
or
jmp
push
retf
xchg
loope
mov
outs
push
inc
push
jbe
loopne
(bad)
ins
pop
mov
repz
out
cmps
stos
lds
push
push
out
add
ins
pop
xor
lock
cmp
mov
xchg
jmp
inc
(bad)
mov
sub
movs
inc
xchg
lahf
and
sub
in
scas
data16
mov
mul
xor
xchg
in
icebp
imul
pop
outs
mov
lock
inc
mov
ja
mov
push
inc
adc
jge
pop
sub
sbb
rol
xchg
xor
iret
mov
arpl
add
or
test
rcr
pushf
or
jmp
jne
ret
mov
cmps
inc
add
neg
xor
cli
data16
cld
pop
popf
xor
mov
fiadd
lods
jns
push
test
leave
jle
pop
rcr
mov
stc
in
cmp
mov
or
fwait
adc
push
nop
push
pop
fild
pop
jge
or
mov
movs
fdiv
sub
fidivr
mov
in
cmps
or
mov
dec
lock
mov
test
adc
mov
xchg
sub
pusha
pop
sbb
fcomp
pop
lds
xchg
sbb
mov
mov
sbb
pop
xchg
push
inc
es
inc
jmp
call
sbb
push
mov
(bad)
imul
popa
or
in
(bad)
retf
ds
jp
push
pop
inc
pop
retf
xchg
(bad)
call
(bad)
sar
pop
stos
fwait
(bad)
(bad)
lea
fdivr
icebp
dec
add
mov
hlt
repnz
cmp
jns
jg
push
setno
sti
pop
or
lods
cmp
add
fs
xchg
ret
adc
push
retf
and
popa
xchg
xchg
sar
outs
adc
dec
lea
popf
outs
neg
ins
jecxz
and
inc
lds
shl
add
pop
add
popf
jl
push
push
add
imul
out
and
push
inc
fld
popa
push
sbb
inc
xchg
mov
or
fisubr
aam
arpl
or
call
push
mov
inc
xor
mov
shl
add
push
fs
jg
inc
xchg
sub
cs
and
push
icebp
es
mov
or
adc
hlt
cwde
shl
jnp
mov
xchg
repz
cmps
(bad)
ficomp
lds
idiv
or
jno
pop
mov
iret
push
aad
mov
mov
clc
adc
mov
pushf
out
jb
sti
call
jecxz
push
mov
mov
std
ds
sbb
loope
and
dec
push
loopne
lock
fsubr
movs
xchg
jmp
call
pop
dec
out
or
fst
adc
retf
cs
push
stc
jno
cs
bound
stc
das
sar
shl
cmps
add
xchg
shl
loop
xchg
inc
or
or
retf
sub
sbb
sbb
sub
arpl
jb
pop
loop
ins
outs
scas
ficomp
add
data16
daa
xchg
nop
out
sbb
in
(bad)
out
jmp
lds
xor
mov
jg
aad
je
push
js
push
loopne
pop
mov
jg
xchg
aam
int
jmp
push
call
nop
mov
lds
cmp
pop
mov
adc
call
cmp
inc
sbb
test
cmp
out
jmp
sahf
push
jp
ss
sub
jmp
dec
ret
(bad)
aas
xor
sar
sbb
sbb
or
hlt
cmp
(bad)
mov
test
mov
ins
call
or
mov
mov
jbe
mov
ins
jae
push
inc
jmp
add
in
movs
xor
xchg
jl
xor
call
mov
jecxz
mov
stos
add
adc
outs
mov
fiadd
out
scas
push
sub
or
stos
jnp
inc
(bad)
cdq
xor
jl
dec
pop
sub
push
cmp
fst
fidiv
mov
dec
xchg
loopne
enter
jbe
add
jo
mov
int
shr
vmulss
mov
scas
cmp
(bad)
scas
out
sbb
dec
loope
pop
gs
ds
ficom
jecxz
int3
pop
jg
in
push
sub
fimul
pusha
loop
test
mov
jmp
pop
and
mov
jmp
cld
jmp
push
test
test
addr16
ins
cmc
int3
cmc
int
retf
out
jg
out
inc
out
push
pop
in
and
ret
cdq
xchg
cmc
fwait
repnz
fmulp
add
add
push
cmp
mov
je
js
xchg
aas
rcr
je
ins
mov
jge
(bad)
popf
in
adc
(bad)
adc
push
movs
sub
jae
xchg
push
stos
bound
sub
push
pop
push
inc
and
daa
les
sbb
inc
nop
xchg
mov
inc
push
adc
mov
lods
adc
fwait
xor
jbe
jge
fist
push
fbstp
push
shl
aaa
add
mov
xchg
sti
jmp
add
lds
mov
retf
mov
bound
jp
push
bound
pop
dec
leave
inc
dec
pop
ret
sub
enter
add
pop
in
inc
dec
mov
jno
popf
in
mov
and
add
clc
sub
add
mov
xor
fsub
cmp
or
clc
xchg
xor
push
sub
mov
repnz
(bad)
push
cmc
mov
cld
shl
dec
in
out
cmps
xchg
mov
and
jle
fidiv
or
push
into
pop
test
stc
sub
pop
mov
gs
xlat
sbb
popf
ins
out
pop
xchg
cmp
gs
xor
data16
sahf
(bad)
inc
imul
jmp
pop
aas
xchg
sar
mov
test
mov
inc
push
ja
dec
adc
sub
mov
or
sbb
(bad)
cmp
jp
movs
mov
dec
push
mov
push
fwait
jecxz
outs
mov
add
pop
test
rcl
sbb
and
clc
popa
test
jg
sub
push
sub
jb
movs
add
mov
lds
call
outs
cli
inc
xchg
push
push
jmp
jg
cmp
bound
fisub
push
das
and
mov
test
inc
or
mov
les
cmp
fwait
adc
out
cli
pop
cmps
sub
ds
test
pop
test
(bad)
es
xor
repz
cmp
sbb
mov
dec
mov
cs
sbb
push
imul
repnz
add
xchg
test
and
movs
cmp
xor
mov
pop
stos
pop
movs
inc
in
xor
daa
sub
retf
aaa
jmp
push
(bad)
or
sbb
jg
loopne
enter
push
dec
ja
out
push
mov
or
push
lea
shl
ins
xchg
mov
sub
cmp
jne
sahf
sub
adc
es
loop
out
loope
sub
add
stc
mov
add
stc
not
push
dec
outs
xor
jns
or
jns
call
jmp
dec
fldcw
push
xor
mov
adc
(bad)
cli
retf
std
rcl
and
fistp
cmp
pushf
adc
fisub
test
in
xchg
or
and
scas
dec
into
xchg
mov
xor
test
adc
mov
xor
cmps
cmp
fsub
mov
cmps
pop
push
xchg
pushf
mov
sti
sti
push
mov
aaa
inc
mov
push
mov
xchg
pop
push
mov
xchg
mov
add
xchg
mov
sbb
cdq
outs
sti
pop
mov
in
lods
shl
nop
retf
mov
xor
fild
rol
sub
int3
dec
les
mov
or
aas
sub
mov
aam
xor
xchg
fstp
out
push
movs
dec
jae
xor
(bad)
in
loope
scas
lds
mov
push
or
ret
ss
mov
or
sbb
lahf
sar
es
jae
and
push
retf
and
mov
xchg
stos
jmp
dec
push
or
loopne
sbb
cmp
mov
idiv
shl
dec
cmps
jnp
sar
xchg
or
sub
xor
inc
mov
push
test
xchg
xor
call
mov
sub
fbstp
lods
dec
cld
jno
xchg
(bad)
sbb
fimul
mov
es
es
mov
into
push
jp
dec
cmp
not
(bad)
es
fld
das
out
fld
loope
sbb
push
sub
test
dec
push
in
push
call
mov
cmps
fwait
xchg
push
mov
shr
shl
pop
add
sub
xchg
test
xor
retf
xor
dec
mov
aas
loope
xor
rcr
std
mov
movs
pusha
cmp
mov
jg
sbb
imul
mov
push
out
lahf
test
in
aaa
inc
pop
in
add
cmp
pop
xchg
mov
je
ins
repz
call
scas
rcr
lea
(bad)
mov
aaa
mov
xchg
xor
test
cmp
mov
imul
(bad)
mov
mov
dec
sub
mov
xchg
(bad)
or
sbb
jmp
dec
pop
aad
scas
stc
(bad)
sub
shrd
out
mov
jbe
push
ret
stos
sub
mov
pop
out
aas
and
aam
mov
inc
fdiv
sbb
cdq
sub
retf
ret
push
adc
cmp
stos
xor
adc
imul
sub
stos
dec
aad
gs
ja
mov
sar
not
shl
mov
sub
cmp
adc
mov
jbe
ja
cmp
inc
(bad)
shr
or
inc
mov
sub
inc
inc
mov
stc
lods
loop
add
or
inc
jns
lea
dec
clc
jae
div
mov
aad
test
cli
mov
adc
loope
aam
fs
(bad)
jbe
jne
inc
add
inc
dec
shl
pop
jmp
adc
push
jge
sub
sub
mov
and
leave
mov
ins
out
mov
movs
outs
or
inc
jg
sub
loopne
jb
in
aas
mov
(bad)
bound
dec
jecxz
(bad)
dec
ins
adc
mov
and
mov
xchg
outs
jb
adc
and
adc
xor
fld
xor
or
pop
inc
lods
retf
sub
out
sbb
mov
sub
mov
pop
sub
lods
call
push
imul
pop
rol
sti
outs
imul
popf
sub
clc
sub
jns
std
inc
jbe
ss
push
imul
cdq
inc
jp
(bad)
nop
mov
pop
aas
rol
mov
out
xlat
pop
test
sbb
and
inc
xchg
sti
shr
mov
jmp
outs
push
mov
fs
mov
mov
pop
in
fist
pushf
enter
out
and
repnz
cmp
fs
mov
daa
test
jl
outs
dec
lods
push
push
out
lods
dec
in
in
sti
or
jmp
jbe
movs
adc
movs
in
aas
mov
pop
or
fild
hlt
pop
repnz
jmp
xor
cmp
jge
stos
jge
mov
mov
int
mul
mov
dec
jae
das
call
pop
push
mov
mov
aas
cdq
call
test
xchg
retf
mov
repz
in
inc
lods
push
in
jle
push
dec
push
mov
add
addr16
add
in
dec
xchg
in
mov
push
xchg
inc
in
shl
sbb
fild
shl
(bad)
rcl
push
out
dec
loop
inc
or
sbb
xor
jp
mov
sti
and
popa
call
into
xor
cmps
cli
sbb
rol
pop
lock
cmp
or
xchg
add
fdiv
xor
and
pop
push
enter
pushf
pop
aas
daa
ror
inc
or
cmp
mov
dec
mov
stc
mov
out
mov
or
xor
xchg
(bad)
dec
fwait
cs
push
and
movs
add
sub
jne
pop
cmp
cdq
xor
imul
sub
outs
cmps
mov
int3
in
nop
aam
push
push
adc
dec
push
retf
mov
mov
jmp
fisttp
or
ficom
inc
pop
mov
jns
ret
dec
repnz
js
mov
jae
xor
in
popa
jbe
ror
in
pop
rol
int
je
shl
scas
aas
xor
int3
popa
js
mov
xchg
push
push
lahf
out
hlt
mov
pop
scas
pop
and
test
mov
vmovd
push
mov
mov
jns
nop
adc
sub
add
js
inc
mov
stos
sbb
lock
or
pushf
cmp
retf
mov
sbb
enter
inc
xchg
push
adc
push
or
js
dec
adc
mov
call
cmp
xchg
test
inc
xor
jge
jns
mov
pop
popa
fstp
mov
jne
and
aad
repz
push
enter
int3
(bad)
adc
les
mov
pop
rcl
in
int
jmp
test
sar
sti
repnz
pop
daa
in
cdq
lahf
aam
jno
xchg
rcl
nop
inc
jge
cmp
cld
cwde
or
aaa
fs
icebp
cli
add
lea
into
loopne
jle
and
repz
cmp
lods
push
mov
adc
fst
inc
push
lock
fldenv
xor
imul
fst
adc
adc
aam
jl
push
std
add
jl
fs
or
inc
cli
data16
cmp
add
mov
test
aam
jmp
sub
outs
shl
inc
(bad)
or
out
ret
dec
retf
outs
popa
cmp
dec
sub
xlat
xchg
jb
jnp
push
in
and
or
aam
inc
dec
jge
mov
outs
fcmovnb
cmp
aaa
push
into
gs
das
nop
jno
xor
xchg
pop
outs
hlt
push
sbb
out
test
imul
daa
sti
(bad)
nop
pop
mov
push
pop
outs
mov
pusha
jo
shr
cmps
imul
cmps
xor
dec
or
call
xor
rcr
out
or
dec
xchg
xchg
dec
sub
cmp
push
out
(bad)
hlt
ficom
mov
cwde
lock
out
and
sahf
jg
xor
int
xor
jp
loop
cmc
in
xor
mov
xor
into
jbe
xchg
inc
dec
add
test
jo
cmp
fxch
rol
mov
mov
inc
inc
fild
gs
or
scas
mov
xchg
mov
ins
icebp
arpl
lods
int
and
push
push
add
jp
lods
test
(bad)
popa
(bad)
sti
add
in
or
push
xor
push
rcr
mov
add
lods
mov
lahf
outs
mov
jl
imul
and
mov
test
pop
leave
and
lea
or
sub
or
cmp
jg
lock
rcl
ret
and
cmp
jns
xchg
ja
repz
jmp
loop
push
jne
leave
xchg
mov
int3
xchg
stos
pop
mov
sub
add
mov
jecxz
aas
cmps
lods
add
enter
ds
loopne
xor
dec
sub
inc
xchg
aad
xchg
or
es
sti
xor
push
bound
cmc
push
stc
pop
jp
dec
bound
js
cmp
xchg
leave
test
leave
sub
les
pop
cdq
ror
pop
(bad)
call
out
(bad)
pop
stos
scas
mov
xchg
shr
stc
iret
mov
test
add
shr
sbb
(bad)
cmps
sub
mov
cmp
movs
addr16
int3
(bad)
mov
stc
pop
pop
cwde
std
cli
mov
or
je
jecxz
mov
or
in
lods
stc
loope
ja
rol
jne
movs
and
(bad)
pushf
fucomip
in
mov
sub
call
mov
ja
and
test
ds
iret
pusha
addr16
sub
cdq
int3
stc
clc
iret
push
dec
push
stc
cmp
xor
adc
dec
movs
dec
pushf
retf
ins
and
mov
ss
out
cwde
or
fstp
fistp
out
ins
dec
(bad)
push
dec
lods
xchg
mov
daa
fs
inc
sub
pop
add
jmp
mov
add
clc
lock
(bad)
repz
adc
push
arpl
push
cmp
popa
sbb
pop
dec
pop
scas
adc
jmp
ss
mov
mov
loope
add
or
add
push
lahf
sbb
mov
loope
scas
jge
sbb
fst
je
xchg
shl
rep
sub
inc
sub
dec
fld
mov
inc
push
xchg
sahf
enter
addr16
and
imul
leave
mov
lea
aas
jg
inc
inc
dec
mov
loope
pop
int
xchg
(bad)
cmc
sub
jg
(bad)
fidiv
mov
pop
or
jp
xchg
(bad)
repz
dec
cmp
sub
sbb
or
mov
inc
inc
movs
in
stc
or
mov
or
mov
ror
pushf
dec
xchg
call
cmc
jnp
mov
js
mov
fstp
push
shl
or
mov
mov
sbb
sub
pop
mov
sub
hlt
jmp
in
xchg
xor
jb
xor
inc
mov
inc
mov
mov
dec
inc
mul
jp
dec
jecxz
mov
aam
sbb
dec
or
sbb
stc
fsub
stc
sub
clc
inc
sar
aaa
dec
aam
fnsave
lods
loope
inc
(bad)
sub
mov
dec
sub
fadd
pop
in
inc
inc
test
xchg
push
mov
dec
inc
call
nop
ja
stc
lods
dec
or
fstp
ins
ds
inc
retf
mov
mov
and
cmc
ds
movs
jmp
xor
mov
fidiv
dec
cdq
xchg
repnz
add
in
or
bound
or
push
mov
es
shl
xchg
ins
pop
inc
mov
xor
retf
aam
push
arpl
(bad)
in
sbb
ss
shl
lds
mov
stos
inc
jle
sub
mov
cmp
or
dec
(bad)
mov
cmp
xor
mov
or
adc
out
mov
(bad)
in
inc
lock
mov
lods
out
in
(bad)
outs
dec
fbld
ins
push
sub
stc
adc
inc
ins
mov
je
test
jp
out
cmp
imul
sub
mov
jb
lds
jbe
xchg
imul
sbb
or
inc
xor
imul
int
adc
repnz
sub
sbb
popf
or
mov
ds
mov
test
mov
in
add
push
sbb
inc
jmp
xor
push
retf
adc
mov
mov
cwde
leave
pop
rcl
sbb
and
fld
ins
dec
shl
fistp
inc
aam
stc
or
pop
xchg
into
xor
mov
imul
push
ret
sbb
or
pop
cmp
dec
jns
ins
mov
rcl
lahf
lahf
add
adc
rcr
pop
mov
pop
lds
pop
push
push
pushf
rcr
mov
lea
sbb
lea
bound
xchg
es
lods
(bad)
jo
popf
fs
popa
cld
push
pop
jnp
(bad)
mov
lahf
lods
sub
cli
sti
sbb
out
sti
dec
ja
pop
sub
cdq
cmp
and
js
xchg
out
es
arpl
into
mov
jp
jecxz
data16
xchg
mov
adc
bound
jmp
or
cmp
cmps
fstp
mov
or
pop
adc
pop
mov
jno
mov
push
mov
sub
mov
aaa
xor
sar
mov
popa
sub
cli
dec
iret
in
inc
mov
inc
push
push
inc
daa
mov
xor
cmps
retfw
add
pop
aas
jne
sbb
jae
xchg
push
ret
jbe
jb
xchg
ins
std
mov
mov
cmp
jecxz
fwait
inc
fld
cs
das
clc
test
push
mov
clc
ds
sbb
retf
addr16
outs
push
sbb
push
dec
scas
retf
sbb
xor
dec
sbb
gs
push
inc
cmp
imul
test
pushf
cwde
xlat
push
outs
or
push
mov
cli
lahf
cmps
or
out
pushf
in
push
pushf
add
dec
mov
push
adc
clc
xchg
pop
sub
(bad)
hlt
psubusb
cmp
imul
and
ror
adc
(bad)
int3
fdivr
fist
xchg
dec
push
adc
cmps
fistp
fst
pushf
mov
push
loopne
cmp
cld
out
mov
pusha
dec
scas
push
retf
jmp
int
vcvttss2usi
dec
(bad)
fcomp
stos
mov
xchg
rol
lea
inc
es
fisub
dec
cdq
stos
sub
int3
das
xchg
stos
retf
jp
pushf
dec
dec
adc
pop
mov
mov
add
icebp
test
pop
mov
ret
test
mov
data16
call
xchg
mov
add
pusha
int3
(bad)
push
xor
cmp
dec
gs
cdq
mov
jnp
movs
outs
cmc
or
cli
(bad)
fcmovb
es
lahf
add
jp
sar
pusha
fisub
repnz
adc
pop
ss
xlat
xchg
jp
or
cmp
cmp
mul
mov
enter
es
pop
test
dec
ret
jns
repz
sub
and
inc
inc
test
mov
mov
mov
mov
cmp
jmp
or
sub
xchg
mov
push
ss
sbb
outs
cld
enter
hlt
stos
nop
data16
add
cmp
pushaw
fidivr
and
mov
ror
clc
sbb
icebp
leave
cs
adc
push
pop
sbb
fincstp
rol
jne
mov
aam
scas
xor
mov
mov
mov
or
jae
xchg
mov
in
popa
hlt
mov
aas
aad
psubusw
andps
out
pop
mov
les
add
dec
jp
retf
cld
movs
push
pop
ficomp
xor
mov
xor
or
dec
scas
or
xchg
or
icebp
adc
fnstsw
pop
jns
mov
into
jmp
mov
popf
xlat
inc
(bad)
fstp
ds
repz
cwde
xor
out
jmp
outs
mov
cs
jge
add
sbb
sahf
je
mov
fstp
xor
aaa
jl
std
xchg
xchg
retf
iret
sar
or
or
aam
daa
mov
stc
aas
and
out
xchg
sar
dec
lock
cmps
xor
xchg
jecxz
sbb
sbb
scas
bound
sbb
loop
fwait
mov
mov
ret
sahf
pop
test
pushf
inc
icebp
mov
adc
inc
fld
sar
jg
out
loop
out
xchg
mov
mov
sahf
lods
mov
test
loop
xchg
in
leave
adc
inc
mov
add
cmp
retf
push
jae
std
pop
mov
push
neg
add
iret
lods
mov
div
outs
lds
loopne
inc
and
stos
(bad)
fyl2xp1
stc
ud0
mov
mov
in
lods
fiadd
xor
xchg
jge
xchg
rcl
jl
mov
lods
in
test
fimul
jge
xchg
les
std
cli
cmp
dec
dec
jle
pop
sbb
loop
dec
(bad)
xor
push
cmp
aad
call
pop
jne
ds
nop
jne
inc
out
mov
xchg
cwde
stc
call
and
xchg
adc
adc
mov
or
add
loope
loopne
es
ins
cmp
dec
pushf
mov
mov
add
jae
inc
movs
pop
sti
jmp
(bad)
call
imul
cmps
movs
addr16
mov
pop
jp
cmc
push
xor
push
sbb
cmp
stos
loopne
cs
sar
test
dec
dec
xor
pop
add
push
jmp
or
test
lds
bound
arpl
jne
cmp
dec
mov
scas
jo
mov
lods
out
addr16
and
lahf
out
add
sub
shr
jno
push
scas
add
inc
shl
xchg
fucomi
fistp
sbb
inc
mov
push
stc
mov
pop
add
les
in
push
in
call
mov
jns
mov
or
sbb
icebp
cs
and
and
push
clc
xlat
or
mov
fwait
mov
scas
ja
cs
das
std
ins
js
sar
aad
inc
fwait
sub
mov
inc
out
int
cdq
(bad)
enter
xor
gs
add
fidiv
std
jmp
sub
ss
dec
add
mov
pop
icebp
inc
(bad)
push
sbb
mov
pushf
or
test
int3
cmp
add
pop
cmp
cmp
mov
stos
mov
ss
(bad)
in
imul
test
add
xor
cmp
adc
push
sub
int3
mov
adc
xchg
dec
mov
fwait
cmp
rcl
xchg
or
xchg
push
xchg
jne
xor
sub
push
jns
mov
adc
mov
out
mov
repnz
sbb
popf
xor
mov
or
mov
adc
imul
imul
mov
and
jno
mov
out
add
lods
xor
adc
pop
lock
mov
out
and
jne
sub
popf
jb
pop
sub
push
jmp
adc
jnp
push
dec
inc
jle
mov
not
push
popf
imul
xlat
jle
mov
dec
inc
outs
outs
cmp
add
fnsave
adc
xchg
repz
and
aas
mov
(bad)
pop
imul
stos
mov
call
repz
retf
fidivr
imul
jge
test
rol
pop
mov
scas
xchg
mov
mov
out
aaa
popa
jb
pusha
lds
imul
lds
inc
hlt
dec
jg
mov
ret
dec
mov
mov
mov
dec
mov
jns
cs
cmps
call
dec
xchg
xchg
mov
mov
(bad)
stc
dec
mov
std
addr16
mov
sahf
xlat
add
aaa
xor
fdivr
push
pop
cmp
ror
mov
test
cmp
or
clc
repz
jae
jp
addr16
mov
or
mov
(bad)
or
or
pop
jne
inc
inc
or
adc
sub
call
imul
lods
mov
mov
pop
(bad)
lea
sub
jo
sbb
dec
movs
dec
call
js
mov
pop
jne
mov
(bad)
pop
pop
je
adc
ror
out
xor
xchg
(bad)
and
adc
and
adc
mov
aas
sbb
pop
mov
jge
outs
or
cmp
inc
xchg
test
xchg
ds
push
cdq
aas
and
(bad)
rcl
ins
pop
movs
dec
mov
pop
mov
imul
xchg
mov
mov
pop
inc
mov
jge
add
push
lahf
clc
adc
jmp
popf
mov
sbb
sbb
push
fld
jg
push
in
xchg
cmp
push
cmps
sub
push
fsubp
cwde
sbb
cmp
loop
aam
and
cmp
cmp
jno
jns
jnp
xchg
pop
or
in
sub
mov
cmc
pop
sbb
or
pop
xchg
mov
aam
inc
enter
out
xlat
or
xor
icebp
sbb
loopne
push
mov
dec
std
jae
clc
mov
xor
mov
scas
and
rcl
jge
repnz
xchg
cwde
popa
test
dec
mov
dec
inc
in
enter
popa
scas
stos
inc
ins
jb
test
xor
sbb
gs
out
xchg
dec
adc
outs
mov
ins
jb
cmp
inc
jb
or
aam
(bad)
lods
xchg
out
test
inc
inc
add
out
and
or
cmp
mov
mov
lea
inc
loope
inc
pop
fs
out
push
scas
xor
cmps
lahf
xchg
gs
cmp
imul
mov
inc
xchg
shr
das
scas
out
movs
pusha
scas
retf
cwde
jp
cwde
push
add
cmp
fcom
xor
add
bound
lods
pop
sub
scas
stos
push
outs
ror
sbb
or
js
xchg
(bad)
call
nop
jl
jmp
scas
jns
cld
sbb
ror
sti
aaa
out
rol
mov
movs
push
and
imul
xor
or
push
pop
fidiv
dec
lock
mov
sbb
cmps
push
aad
pop
push
jecxz
aam
dec
jns
rcl
and
lods
pop
adc
sub
cmp
rol
aaa
jb
call
scas
xor
jmp
xchg
shr
mov
xor
lods
mov
mov
ds
int3
pop
imul
data16
xor
mov
sbb
daa
jg
lahf
inc
mov
ins
inc
shl
mov
or
cdq
pop
in
cmp
dec
out
xchg
outs
mov
cwde
in
cs
mov
inc
sub
add
or
fidiv
pop
push
pusha
lods
je
test
xchg
sbb
cmp
adc
sbb
mov
pop
mov
jnp
jmp
adc
ins
mov
shl
loope
xchg
test
xchg
popf
cmp
aad
iret
loop
pop
sar
mov
out
pop
inc
out
fnstcw
add
sbb
fisub
xor
or
in
lahf
popf
sahf
xchg
mov
dec
repnz
pop
inc
jmp
or
out
sub
or
fs
std
cli
std
pop
inc
jmp
mov
dec
fs
out
mov
push
jae
fcmovu
nop
outs
push
sbb
inc
popf
mov
ss
cs
lods
or
call
cli
cmp
pushf
cmc
jae
xor
std
outs
jg
mov
hlt
xor
(bad)
xor
stos
popf
imul
mov
pop
push
pop
push
or
sbb
or
push
xor
jne
mov
add
push
out
mov
sti
popf
jle
sbb
or
sub
in
es
ins
je
sbb
mov
jns
xor
jbe
sahf
and
sbb
jae
cwde
ficomp
lods
not
bound
repnz
sbb
push
mov
movs
icebp
test
pop
add
xchg
std
std
lock
xlat
les
mov
dec
cdq
xor
mov
mov
cdq
mov
(bad)
add
or
push
push
fcmovu
mov
push
ds
push
add
pop
mov
movs
gs
shr
inc
cmp
xchg
imul
cmp
call
addr16
inc
jae
ins
nop
sub
cmp
adc
inc
inc
js
paddq
xchg
jl
xor
cmp
movs
push
adc
and
sti
mov
sbb
pop
sbb
test
cmc
sub
ficom
addr16
add
push
pop
xor
mov
dec
sub
pushf
ficomp
loope
scas
mul
cmp
pop
mov
xchg
nop
mov
push
mov
sub
shr
lds
iret
mov
pop
xor
addr16
bound
push
ret
ret
dec
and
sbb
stos
add
lea
xor
cmc
or
das
ins
push
(bad)
lock
je
add
sub
mov
mov
or
cmp
jecxz
dec
sub
push
test
retf
mov
cmps
aad
sub
push
ret
mov
call
scas
jae
cmovl
test
pop
mov
sbb
add
retf
jg
in
jge
shr
push
sbb
enter
out
mov
das
std
fnsave
jle
imul
push
and
sub
hlt
xor
arpl
call
cmp
cmps
(bad)
pushf
push
cmp
cmp
push
into
mov
call
jl
mov
jnp
jo
enter
inc
lea
sar
shl
sub
cmp
push
mov
repz
cmp
dec
mov
in
and
out
inc
fdivp
in
in
(bad)
pop
lods
dec
jl
cmp
lock
cdq
gs
sti
scas
cdq
xchg
jge
test
push
pop
pop
retf
mov
cld
scas
cld
mov
inc
adc
cmps
xchg
sub
mov
mov
cld
and
dec
xor
jb
jg
push
push
jae
rdpmc
add
test
popf
jbe
mov
push
outs
popf
adc
mov
loopne
je
fld
inc
pop
scas
xor
rep
movs
std
test
xor
dec
push
add
cld
pusha
and
jge
(bad)
(bad)
pop
fldenv
push
mov
loope
movs
out
fbstp
(bad)
add
dec
les
inc
fld
ret
push
jbe
popf
dec
push
daa
cmp
mov
add
xchg
jmp
push
mov
cli
(bad)
into
sar
dec
mov
inc
out
pushf
pop
int
rcr
sbb
mov
push
cli
or
mov
(bad)
or
sbb
cmp
mov
popf
in
pop
mov
mov
les
(bad)
in
(bad)
test
mov
arpl
add
adc
sbb
jg
mov
cmp
dec
scas
pop
loope
jnp
int
shr
mov
pop
mov
xchg
jno
or
mov
bound
mov
cmp
out
inc
das
outs
in
mov
pop
mov
dec
sub
push
leave
inc
jmp
dec
add
lods
movlps
xchg
out
inc
imul
outs
and
jle
mov
int3
xchg
mov
pop
loope
icebp
cdq
int3
(bad)
faddp
pop
sub
add
loopne
push
retf
inc
inc
data16
es
shl
cmp
ret
(bad)
aam
push
pusha
pop
mov
dec
shr
int
loopne
out
push
push
cmp
dec
mov
adc
ja
call
pop
push
xor
mov
popa
xchg
cli
sahf
lock
mov
and
dec
dec
jo
adc
push
xor
or
jl
repz
mov
movs
jae
jae
ja
inc
cmp
jmp
fcomip
test
add
or
sub
or
inc
movs
mov
or
or
(bad)
push
in
ins
icebp
pop
jb
mov
mov
jns
test
test
mov
dec
mov
mov
pop
cmp
movs
jl
jnp
jg
ret
xchg
xor
int3
inc
xchg
std
cld
scas
or
mov
retf
inc
call
int3
div
xorps
push
inc
bound
mov
aad
data16
lods
adc
pop
jmp
inc
out
xor
ror
movs
xor
es
(bad)
mov
daa
dec
sub
(bad)
xor
gs
pop
mov
dec
ins
and
inc
dec
push
mov
ss
or
add
jns
push
(bad)
scas
adc
pop
xor
jbe
cmp
mov
cmp
push
xchg
outs
mov
bound
mov
out
test
xchg
shr
retf
pop
push
(bad)
enter
les
push
dec
mov
jno
inc
int
retf
dec
ret
add
cli
test
push
(bad)
mov
cmc
lock
push
in
jno
adc
mov
div
sahf
cmps
mov
stos
dec
cmps
inc
fadd
push
adc
jl
sub
je
mov
shr
cmp
push
aam
jb
rcl
mov
xchg
fstp
das
data16
loop
out
pop
push
stos
dec
dec
adc
div
xchg
or
xchg
sub
or
hlt
test
push
push
iret
clc
push
xor
adc
mov
ror
mov
shr
dec
add
cmp
sbb
popa
xor
popa
jecxz
mov
dec
fmul
jae
pop
in
test
shr
jl
jp
push
ds
stos
cmp
nop
xchg
add
sbb
mov
fsubr
iret
pop
fiadd
cmp
push
pusha
pop
les
pushf
pop
cli
cmp
xchg
in
push
mov
enter
cmp
push
stos
xlat
std
or
cmp
dec
jno
and
pop
repnz
in
arpl
mov
mov
retf
jbe
sub
and
ret
aaa
inc
test
leave
aas
inc
add
daa
inc
mov
xchg
mov
jmp
jle
mov
push
lods
or
pop
retf
mov
int3
fst
pop
stos
adc
xchg
xor
xchg
in
ins
aad
push
xchg
dec
jae
push
pop
pop
fstp
pop
fnstcw
jl
mov
adc
sub
scas
cmc
push
out
cld
(bad)
mov
mov
inc
mov
mov
pop
jle
jecxz
push
das
jae
neg
lahf
jecxz
xor
aas
scas
stos
ret
pop
and
call
cmp
xchg
cmp
lods
add
std
dec
and
add
jg
and
mov
in
pop
repz
push
push
jge
in
pop
aas
push
jmp
aam
in
adc
or
jg
lahf
push
jbe
es
test
jmp
jmp
outs
sbb
push
xchg
push
jl
stos
test
(bad)
jmp
pop
dec
pop
add
dec
jmp
imul
cmps
in
shr
sub
shl
adc
rol
std
shl
sahf
in
mov
int3
sahf
pop
mov
inc
sar
mov
addr16
(bad)
lahf
or
push
cmps
adc
aaa
test
xchg
dec
(bad)
std
jno
or
xchg
ins
fist
in
mov
es
into
adc
push
icebp
xor
leave
retf
(bad)
pop
inc
push
jb
mov
fdivp
dec
sub
or
mov
jl
iret
std
xchg
mov
sub
cmp
push
cmps
sar
push
aas
pop
jne
in
add
mov
pop
pushf
jl
push
adc
pusha
mov
shl
push
and
adc
in
mov
jg
dec
pop
rcr
push
mov
mov
push
outs
int3
dec
sbb
fdivr
ins
dec
outs
jmp
enter
(bad)
push
jg
xchg
jecxz
mul
cmp
fisub
mov
fwait
loope
ret
out
jno
ja
lock
push
in
shr
hlt
add
ret
pop
push
test
and
aaa
cwde
lods
cmp
mov
pop
pop
sahf
xchg
jge
fstp
in
movs
mov
inc
shl
dec
faddp
mov
imul
jne
popf
jnp
xchg
push
(bad)
test
xor
adc
xor
repz
mov
rcl
shr
cmc
xchg
ror
cmp
jge
es
aaa
sbb
in
add
push
repz
popf
rcr
stos
jmp
push
and
sbb
shr
push
frstor
mov
aad
sub
mov
inc
xor
(bad)
xchg
xor
clc
call
loope
aam
jecxz
xlat
sub
out
stos
jmp
pop
cmps
or
test
sbb
retf
test
cmps
call
jle
jae
xchg
stos
dec
pop
sahf
ds
adc
cmp
jge
aad
cmc
jnp
push
sti
sub
out
push
and
dec
int3
mov
jno
inc
aas
ficomp
pop
mov
pop
les
adc
fs
mov
loop
jnp
and
mov
push
imul
xor
rcr
pop
mov
call
mov
cmc
iret
jno
imul
outs
xchg
ds
outs
outs
std
inc
les
xchg
int
and
cmp
jecxz
xor
mov
mov
adc
std
jl
pop
popf
dec
or
jmp
jmp
dec
sbb
cmp
sub
cmps
dec
cmp
dec
scas
xor
jae
out
cmp
add
lea
cmp
inc
dec
inc
popf
mov
jg
or
scas
sub
xchg
loopne
lods
pop
fwait
sub
popf
addr16
imul
sub
out
in
in
pop
sbb
jmp
push
(bad)
adc
cld
je
fistp
mov
out
fnstenv
out
fcmovnb
xlat
shr
enter
fdivr
pop
call
adc
mov
mov
ds
ins
mov
iret
mov
or
mul
xchg
cmp
sub
(bad)
or
ret
aad
xchg
call
xchg
mov
mov
adc
sub
cmp
mov
dec
inc
add
adc
add
cmp
in
ret
int3
mov
jle
inc
jnp
sub
push
loope
stos
daa
dec
jmp
outs
aaa
mov
adc
out
sbb
and
fwait
sbb
and
push
xchg
lock
out
and
test
dec
jle
xchg
mov
add
cmp
or
add
inc
shr
jne
sbb
es
push
cld
cmp
inc
daa
mov
sbb
jmp
out
xchg
cmc
pop
push
xor
mov
ret
out
dec
scas
adc
out
out
mov
push
movs
sub
and
add
and
(bad)
call
test
mov
mov
jl
retf
adc
mov
sti
pop
cwde
mov
sub
push
inc
dec
and
or
out
dec
fldenv
hlt
repnz
(bad)
xlat
dec
fstp
clc
pop
mov
add
fild
popf
repz
sti
and
jae
int3
pop
cdq
gs
(bad)
fwait
in
jp
mov
nop
call
dec
daa
nop
cmp
test
jb
mov
sbb
aad
pop
xlat
lock
and
xor
ret
xor
and
and
sub
jb
es
dec
xchg
nop
std
jmp
nop
in
jb
iret
pop
scas
sub
(bad)
fld
iret
stos
add
and
add
xchg
sbb
outs
fadd
or
lea
aaa
dec
out
or
mov
inc
or
movs
rcl
cmp
(bad)
and
sbb
stc
clc
xchg
push
ss
jl
add
sbb
test
jmp
mov
pop
std
scas
add
lahf
add
adc
xor
fstp
push
adc
stc
xchg
mov
jbe
dec
push
call
psrlq
out
es
mov
pop
inc
test
sar
js
jg
adc
or
push
pop
xchg
fimul
pushf
fucom
mov
test
xor
sub
movs
cld
div
iret
push
push
lahf
jle
push
mov
lods
lods
sbb
and
cli
pop
xor
pop
sbb
rol
add
xchg
in
jle
(bad)
xor
jbe
out
scas
sub
jne
and
mov
imul
mov
test
push
icebp
fistp
call
fadd
add
jno
ins
push
cdq
das
mov
test
into
dec
mov
xor
dec
push
mov
loop
sub
clc
push
mov
cmp
shl
imul
neg
push
adc
add
cli
out
leave
movs
and
dec
inc
icebp
repz
test
sbb
movzx
movs
sbb
popf
sbb
fisub
mov
xchg
ss
fmul
dec
push
dec
sub
inc
inc
(bad)
shl
xor
push
call
shl
(bad)
test
mov
shr
das
(bad)
out
ins
stc
mov
mov
fs
mov
lods
daa
std
sub
das
push
cmp
fistp
adc
adc
fwait
jns
lahf
jecxz
adc
inc
or
js
mov
outs
mov
adc
pop
adc
pushf
bound
mov
fsubrp
adc
std
mov
jle
loope
mul
test
pop
cmps
shr
fisttp
and
add
rcl
repz
adc
pop
sbb
jae
loope
lods
cli
push
mov
inc
xor
inc
data16
dec
mov
loop
test
data16
addr16
mov
sbb
stos
and
mov
movs
push
dec
pop
mov
test
push
mov
(bad)
xor
inc
mov
sar
enter
cmp
pop
out
mov
add
and
pop
mov
stc
movs
data16
xor
daa
add
lods
hlt
lods
inc
mov
fadd
mov
add
aas
test
mov
cmps
mov
cmp
add
jae
in
jbe
push
call
mov
jae
es
in
cmp
xchg
sbb
xchg
push
adc
fwait
into
in
movs
mov
mov
jg
cs
(bad)
or
pop
div
enter
cmp
fdivr
push
sbb
or
pop
xchg
stos
rcr
xchg
mov
sbb
test
or
ds
ss
cmp
cmc
sbb
inc
xor
cmp
sub
jecxz
inc
push
cs
mov
xor
cmps
or
adc
xor
mov
or
je
push
xor
rcr
fucomip
(bad)
outs
movs
cwde
leave
in
ds
sub
retf
and
mov
cmp
and
dec
cmps
xchg
xchg
rol
repnz
inc
leave
adc
arpl
mov
pop
xchg
aad
imul
aaa
pop
dec
retf
lock
nop
xor
xchg
inc
ret
jne
mov
mov
popf
jmp
mov
pop
(bad)
popf
cmp
mov
adc
jl
lods
push
push
pop
in
aam
mov
push
fwait
mov
push
jp
push
std
xchg
jae
mov
mov
cmp
loop
push
bound
xchg
pop
mov
std
and
pop
outs
pop
gs
inc
cmp
mov
popf
outs
jno
pop
mov
jo
sbb
sti
jne
dec
sub
repnz
ucomiss
cli
jecxz
fst
mov
inc
call
mov
outs
mov
adc
fisttp
(bad)
(bad)
cli
push
mov
cli
in
jl
test
xchg
(bad)
cmp
mov
add
outs
jbe
bound
sbb
movs
and
pop
das
xchg
sti
add
lahf
rol
add
(bad)
jg
jnp
mov
mov
fild
xor
nop
push
adc
mov
jnp
not
xchg
fdiv
scas
cdq
pop
ror
rol
mov
aas
test
mov
cmp
xchg
fidiv
and
xchg
cmp
fs
aad
xlat
push
dec
xor
call
push
(bad)
pop
loopne
jg
in
mov
ret
bnd
adc
pop
call
add
call
or
(bad)
pop
pop
push
add
inc
and
sbb
inc
sub
jp
xchg
and
mov
pop
cld
dec
adc
retf
adc
je
aam
cli
popa
nop
cwde
or
mov
and
call
or
cdq
arpl
mov
adc
fwait
sub
rcl
push
sbb
push
xor
outs
xor
jle
inc
es
jnp
ins
in
stos
cmc
sub
mov
pop
adc
push
dec
pop
inc
cmc
mov
mov
jmp
test
mov
test
sbb
test
sub
out
stc
scas
mov
pusha
out
cmp
xor
add
aad
les
push
ret
into
out
loop
mov
es
jo
mov
addr16
jl
mov
scas
mov
mov
div
push
daa
inc
data16
and
movs
pop
jle
pushf
iret
mov
push
pop
mov
adc
(bad)
jmp
sub
push
int3
pop
jo
sub
std
out
rcr
lods
sbb
data16
clc
mov
cmps
das
test
sbb
or
ror
cs
mov
outs
dec
sbb
lods
fmul
dec
mov
imul
sub
(bad)
dec
pusha
aaa
cmp
inc
push
sub
retf
cdq
push
fild
and
pusha
pusha
sub
out
ret
or
mov
ins
cmc
sbb
in
jns
mov
xor
fsubr
sub
nop
addr16
loope
fdiv
iret
pop
enter
jmp
sbb
cmps
mov
mov
rol
xchg
sbb
jle
(bad)
cmp
rol
sub
movs
sub
data16
cdq
out
iret
popa
or
test
push
sub
inc
jecxz
sbb
adc
das
sar
pusha
or
out
xchg
ror
mov
fcomip
cs
dec
inc
cmp
mov
sbb
rol
dec
retf
push
ins
push
and
jne
jmp
sbb
inc
cdq
ficom
pop
pop
sub
std
add
ret
dec
repnz
lahf
nop
push
icebp
mov
or
sbb
adc
clc
pop
lods
out
sbb
cmc
push
rcr
push
adc
mov
mov
xor
jbe
test
add
in
in
jle
add
aad
sub
cld
or
pop
xchg
nop
and
pushf
or
int3
or
lds
adc
ja
cmps
jge
pusha
(bad)
pop
mov
adc
ror
inc
in
test
mov
jmp
xlat
mov
xor
dec
into
hlt
xchg
jp
retf
pop
cmp
aam
(bad)
push
jnp
int
es
mov
xchg
cli
fisubr
adc
mov
rcl
rcl
jae
and
sti
jge
pop
mov
jno
(bad)
jmp
stos
je
xor
cmp
call
inc
push
pop
call
sbb
lock
mov
ja
mov
push
inc
out
xor
shl
cs
daa
ss
hlt
popa
shl
movs
je
pop
jp
test
inc
bound
push
mov
or
jns
push
fild
lahf
fisub
mov
jl
push
icebp
add
xchg
push
(bad)
call
xor
push
into
call
das
fisttp
mul
xchg
aas
push
pop
cdq
xchg
jle
cmp
mov
or
jae
pop
add
and
call
out
jb
movs
fsin
rcl
clc
sar
loop
mov
sub
sub
adc
push
cmp
cld
ss
retf
loope
xchg
xchg
imul
cmc
cli
jmp
retf
clc
adc
sar
dec
adc
cmps
sbb
aad
cmc
test
push
sub
pop
scas
fcomp
jmp
push
aad
xor
(bad)
adc
fcmovne
cmp
adc
test
mov
cmp
pushf
dec
bound
call
mov
cmp
jb
test
adc
dec
add
int
retf
jl
jp
inc
jmp
mov
mov
jno
sbb
mov
push
inc
push
mov
cmp
out
push
jmp
scas
and
retf
inc
add
jnp
ja
and
pop
push
aas
pop
dec
mov
outs
xchg
retf
xor
xor
clc
sbb
sbb
jmp
mov
fwait
into
ror
inc
(bad)
pusha
and
pusha
jmp
clc
mov
xchg
jne
aad
mov
test
sti
sub
cli
sbb
fisttp
mov
dec
jnp
or
cmps
cmp
dec
dec
test
adc
mov
in
dec
enter
(bad)
jo
mov
popf
push
aas
pop
and
in
popa
movs
pop
sub
mov
sub
xchg
fdivp
or
sub
and
jbe
pop
mov
das
lock
jmp
xlat
ss
xsha1
cmps
dec
dec
jae
pop
das
mov
xchg
sub
pop
adc
xchg
xor
popa
mov
add
xlat
dec
scas
and
addr16
jae
ret
nop
cmp
mov
push
cmc
icebp
dec
in
iret
fdivr
jnp
fistp
call
jno
mov
pop
in
or
mov
xchg
adc
push
adc
add
add
jnp
or
ss
loope
int
enter
gs
sub
cmp
xchg
lock
shr
ja
pop
pop
mov
pop
sub
push
or
mov
stos
div
mov
int
in
aaa
int3
jbe
loop
sbb
adc
sbb
mov
xlat
push
xchg
(bad)
clc
jl
mov
adc
pushf
inc
fidiv
cli
dec
ret
call
enter
push
push
add
sbb
jle
ret
(bad)
xchg
mov
or
sub
mov
or
pop
and
int
xor
and
mov
(bad)
movs
pop
pop
xchg
ins
(bad)
ds
iret
in
imul
movs
fild
repnz
jmp
push
xchg
inc
rcl
mov
fnstcw
jp
inc
gs
div
cmp
adc
cwde
(bad)
pop
xor
sti
es
mov
aam
ret
lea
mov
push
or
div
(bad)
dec
ins
or
bnd
xor
mov
stos
imul
test
mov
repnz
sbb
xchg
je
or
cmp
pusha
or
outs
outs
pop
mov
sub
xchg
ret
jo
ja
inc
and
bnd
add
add
(bad)
mov
add
mov
mov
leave
cmp
lahf
movs
int3
stos
repnz
test
scas
nop
mov
push
xchg
aad
daa
jp
jb
ds
add
xchg
and
xchg
or
popf
cmp
mov
dec
aaa
cmc
(bad)
pop
mov
and
inc
cdq
dec
cmp
dec
sbb
mov
repz
cmp
lock
xor
sub
js
jnp
mov
ficomp
push
cmp
add
fstp
in
enter
fs
enter
cmp
sbb
add
sti
pop
call
out
jecxz
cmps
cld
dec
dec
dec
sbb
push
pushf
dec
in
ds
or
xchg
mov
mov
push
mov
mov
aas
stc
sbb
shl
or
aad
fnstenv
or
int3
xchg
sbb
and
js
sbb
adc
dec
loope
mov
repz
push
pop
cmp
idiv
in
mov
out
rcl
push
mov
aaa
sub
dec
(bad)
xchg
cmp
mov
loop
inc
jae
aas
or
mov
rcl
add
or
push
or
leave
inc
pushf
(bad)
jno
int
cmp
popf
arpl
test
pushf
mov
and
add
call
add
or
add
push
out
sub
mov
repnz
dec
mov
mov
pop
in
shr
es
inc
add
lock
jne
or
cmp
les
cmp
in
in
out
inc
add
jecxz
iret
imul
push
lds
push
pop
inc
sti
jnp
aad
push
sahf
cmp
(bad)
sub
jnp
movs
popf
mov
ret
xchg
scas
retf
mov
ror
pusha
pop
sahf
pop
mov
mov
ret
pop
pop
push
xor
clc
(bad)
mov
inc
test
in
dec
push
loope
sub
push
dec
rcl
lods
push
daa
addr16
test
fld
jns
adc
int
movs
add
mov
xor
mov
hlt
cmp
sbb
inc
fcmove
mov
aaa
(bad)
push
cmps
iret
jmp
xchg
inc
fimul
cmp
or
jb
or
xchg
dec
adc
xchg
mov
ins
jnp
movs
and
dec
ins
cmp
inc
adc
xchg
jmp
std
sbb
orps
(bad)
xlat
mov
pusha
push
xchg
mov
fwait
jmp
les
daa
(bad)
pop
ja
cmp
cmp
ret
and
iret
push
stos
cmp
sti
stos
mov
mov
mov
inc
lea
push
out
(bad)
dec
sbb
frstor
adc
aaa
inc
pop
xacquire
mov
sub
mov
mov
pop
test
bnd
mov
mov
xchg
add
dec
sahf
or
loopne
sub
add
push
xor
cmp
mov
arpl
stos
xor
mov
pushf
dec
int3
sbb
gs
out
scas
xlat
neg
jg
stos
sar
imul
rcr
xchg
mov
je
jne
add
jnp
dec
out
push
dec
push
ins
pop
pop
ds
pop
clc
(bad)
in
add
or
ret
in
jg
xchg
adc
stos
or
xchg
adc
pop
adc
retf
call
inc
cmp
xlat
cmps
(bad)
inc
out
out
rcr
imul
dec
xchg
popf
leave
stc
pop
sub
pop
sbb
cmp
(bad)
xchg
test
popf
xchg
add
fxch
repnz
sbb
xlat
push
inc
inc
retf
cmp
xor
stos
mov
mov
ins
popf
popa
and
dec
ins
sbb
(bad)
imul
clc
retf
dec
loopne
fmul
call
push
ja
out
imul
jb
addr16
scas
sbb
mov
sub
xchg
jns
jmp
jae
jns
cmp
xchg
out
fisubr
xchg
inc
aas
xor
adc
mov
fimul
push
jecxz
inc
mov
inc
call
sub
ins
pusha
addr16
daa
in
mov
and
cmc
and
adc
or
jmp
push
cmp
in
adc
arpl
(bad)
mov
fwait
pop
xor
fsub
iret
out
popa
add
cmp
xor
ja
mov
adc
sbb
inc
mov
add
add
push
fstp
aas
jmp
lods
(bad)
adc
std
aad
int
sbb
inc
dec
or
nop
popf
outs
sahf
and
les
shl
bound
xor
add
sti
jecxz
dec
retf
ja
sub
cwde
push
pusha
dec
or
dec
jo
push
jb
addr16
dec
lds
push
data16
fidiv
pushf
test
or
xchg
cmp
push
cmp
mov
pusha
mov
xor
pop
pop
cli
pop
sub
mov
arpl
shl
dec
fwait
call
(bad)
enter
or
jecxz
(bad)
cmp
push
or
jo
das
or
int
movs
retf
mov
xchg
add
pop
and
mov
in
jne
mov
mov
xor
xlat
pop
jmp
and
and
outs
pop
pop
popa
and
xchg
ss
out
div
xchg
sbb
push
adc
bswap
cmc
fistp
arpl
dec
xchg
and
call
div
push
ins
xchg
popa
mov
adc
in
ret
ret
cmps
call
scas
jne
in
and
fcmovu
fld
xor
inc
out
sbb
push
or
call
mov
jmp
jl
sub
out
imul
cmp
out
jns
sahf
sbb
das
sti
mov
bound
pop
ja
cmps
and
sbb
xor
xlat
xchg
pop
xor
xchg
bound
inc
mov
push
call
inc
out
mov
daa
in
sar
add
clc
ins
(bad)
sbb
cmp
bound
add
jl
push
imul
add
ds
jb
mov
jecxz
movs
mov
jbe
not
jmp
mov
pusha
hlt
cmps
push
bound
call
xchg
cmps
cli
push
int3
aad
outs
ret
mov
mov
ret
int3
sbb
xor
ror
and
pop
outs
xlat
cmp
or
inc
scas
dec
sub
cmp
neg
push
xor
jmp
mov
loope
rcr
and
bound
xor
fist
into
imul
push
fcmovne
adc
sbb
repz
repnz
push
push
xor
(bad)
adc
xchg
mov
clc
cmp
stos
mov
leave
and
daa
(bad)
mov
dec
push
imul
xor
test
xchg
xchg
and
cdq
ins
cmps
jmp
pop
enter
mov
fstp
mov
mov
inc
push
pushf
pop
nop
out
sbb
into
push
dec
push
xchg
xchg
into
or
xchg
add
imul
cmps
inc
cs
popa
cmp
bound
sbb
scas
js
scas
pop
aad
popa
and
and
mov
sbb
jnp
rcl
lea
add
dec
(bad)
in
movs
ror
retf
mov
daa
jns
xchg
mov
les
in
push
cmp
inc
(bad)
mov
or
adc
mov
push
stc
sbb
xchg
aam
xchg
push
xchg
(bad)
out
pop
inc
aam
and
scas
ret
fnstenv
jmp
cmp
mov
sahf
and
inc
mov
pop
dec
stos
(bad)
mov
es
sub
xchg
adc
jmp
sbb
sti
dec
jmp
pushf
imul
dec
dec
mov
jmp
jo
mov
cli
ret
pop
lock
xchg
out
inc
cli
mov
hlt
cmp
aaa
dec
and
push
adc
sar
xor
fimul
inc
adc
adc
cmp
sbb
outs
mov
in
(bad)
lock
xchg
mov
loope
dec
jmp
push
cdq
loopne
push
add
dec
mov
(bad)
retf
pusha
dec
xchg
jae
out
test
leave
sub
pop
mov
pop
into
rcr
out
or
inc
xchg
(bad)
mov
cmps
test
lahf
dec
jmp
and
mov
cmp
pop
adc
jmp
mov
sub
outs
dec
in
movs
or
(bad)
fisubr
ss
inc
cmps
in
xor
jge
add
adc
mov
jmp
or
fsub
popf
jbe
push
mov
push
fcomp
in
pop
je
cmp
std
sub
in
mov
test
(bad)
push
xor
data16
push
mov
adc
mov
ffree
fwait
sub
in
lods
mov
sbb
jl
stc
mov
js
sub
lock
and
and
and
fisub
cmp
adc
lods
shr
dec
xchg
rol
adc
or
dec
nop
pop
sub
je
shl
push
xor
dec
mov
cmps
xor
cmp
or
jg
xchg
rcl
out
jae
jno
sbb
mov
jno
push
std
mov
(bad)
call
ins
pop
cmps
push
mov
(bad)
adc
aam
pop
jns
pop
push
fnstsw
xor
sbb
test
iret
push
out
sbb
adc
add
cmp
mov
jae
shl
pop
lds
call
mov
jae
push
(bad)
adc
mov
outs
shl
and
or
dec
addr16
push
jmp
inc
push
jmp
cmp
repnz
mul
mov
in
aad
sub
pusha
fs
popf
cld
dec
mov
sbb
xor
call
fwait
mov
nop
xchg
pop
mov
enter
gs
adc
mov
mov
mov
lahf
xchg
rcr
out
push
or
cmp
das
mov
shl
pop
or
pushf
and
push
pop
ds
or
push
or
fld
mov
pop
ja
adc
and
xchg
sahf
xchg
mov
fs
push
rcl
inc
fsubr
shl
sub
in
xchg
ffreep
retf
sub
mov
adc
mov
ins
in
adc
mov
and
xchg
mov
test
hlt
xchg
int3
fdivr
mov
imul
enter
jl
ret
in
mov
idiv
ja
sub
push
cmps
cwde
jnp
xchg
es
scas
lahf
xchg
inc
mov
sbb
mov
sar
xchg
retf
mov
or
mov
mov
add
int
xor
fwait
(bad)
in
inc
cmp
sbb
ret
retf
into
repnz
and
stos
fwait
shl
pushf
adc
jae
je
fbld
dec
pop
jns
inc
jecxz
mov
add
adc
in
aaa
cmps
data16
dec
push
mov
(bad)
mov
cmp
popa
clc
jl
mov
test
out
popf
adc
loop
popa
dec
push
dec
(bad)
sub
es
cmps
mov
loop
mov
add
ror
mov
xor
test
or
loope
sub
ins
jecxz
movs
mov
mov
cmps
mov
xor
(bad)
mov
push
scas
cdq
push
dec
add
jns
sbb
add
mov
sub
fdivrp
jns
jbe
adc
push
mul
sub
addr16
pusha
jge
xchg
mov
aaa
push
test
xchg
or
loop
aad
movs
and
mov
jne
push
cwde
jmp
jae
dec
pop
outs
adc
daa
cmps
dec
int
movs
adc
sub
and
mov
call
mov
adc
sbb
pop
add
lock
cmc
mov
(bad)
aaa
mov
fidiv
(bad)
mov
xor
aam
mov
push
adc
push
sahf
xor
xchg
mov
sbb
retf
lock
mov
mov
or
mov
movs
pop
adc
mov
jecxz
sahf
pop
inc
ins
aad
pop
xchg
push
or
xor
mov
mov
xor
sub
lods
mov
push
ja
leave
(bad)
movs
clc
mov
ror
ins
lds
pop
movs
or
ds
mov
dec
pop
jno
mov
jnp
inc
cmp
into
repnz
cmp
std
sub
daa
push
cmps
lahf
add
call
inc
ror
cmp
scas
lea
outs
sbb
and
jno
cdq
pop
sub
jecxz
scas
adc
fldcw
fs
pop
scas
xchg
and
je
ficom
mov
sbb
mov
int3
js
cli
jl
jge
popa
xchg
test
pop
enter
push
add
lods
mov
mov
fsub
stos
mov
lea
in
sub
mov
xlat
test
push
mov
sbb
mov
jae
lods
push
mov
loopne
push
jns
or
xchg
sub
dec
cmps
das
clc
or
and
add
ds
nop
aam
int3
sub
cmp
xchg
cmc
fisttp
jp
jnp
add
inc
(bad)
xor
clc
ret
lea
xchg
cmp
mov
xor
sub
aaa
or
pusha
es
jnp
movs
mov
adc
xchg
and
jb
xor
sub
cdq
repnz
adc
xor
ret
aaa
test
mov
and
xchg
mov
mov
dec
aad
pusha
jge
popf
ds
lods
sbb
push
pop
retf
sahf
mov
inc
jo
jae
gs
push
loopne
jge
arpl
and
and
mov
std
(bad)
push
fmul
mov
dec
lahf
dec
push
jne
outs
xor
retf
xor
bound
outs
sub
sbb
xchg
ss
xor
lock
sbb
xchg
out
lods
shl
hlt
movs
mov
fistp
jp
cmp
add
inc
and
adc
cs
jg
sbb
pushf
sbb
fstp
mov
jo
jo
fnsave
not
jle
shl
inc
fcomp
dec
mov
cli
sbb
jmp
sub
scas
mov
or
loopne
dec
add
iret
js
(bad)
fisubr
mov
ja
cmc
les
leave
cmps
daa
outs
fidivr
bsf
jmp
sub
or
push
sahf
sub
daa
aam
mov
das
adc
inc
stos
sbb
in
loop
cmc
add
sub
xchg
lahf
mov
popa
inc
shl
adc
sub
cmc
jae
sbb
das
ret
jno
test
popf
push
mov
loopne
cli
sbb
inc
(bad)
in
sbb
sbb
push
mov
ror
sbb
sub
mov
pop
call
popf
mov
mov
mov
xchg
out
int
stos
test
xor
sub
pop
addr16
xor
hlt
dec
retf
and
ins
js
cli
mov
sysexit
xor
mov
(bad)
cmc
xor
bound
pop
fnsave
xor
pop
dec
inc
push
daa
inc
push
into
enter
adc
cld
sub
sti
push
rol
cmp
jne
pop
pop
jle
(bad)
mov
stos
pop
add
in
inc
es
ss
cmps
inc
and
popa
pop
inc
xor
sbb
(bad)
std
xor
xor
mov
and
xor
adc
mov
xchg
(bad)
jae
or
imul
aam
cmps
es
mov
cmc
jmp
stos
nop
in
cmp
mov
inc
lods
rcl
and
xchg
fnstenv
sbb
or
ror
push
xor
mov
iret
mov
dec
lahf
cli
push
inc
and
sbb
xor
fiadd
cld
or
int
sub
mov
push
iret
sub
jnp
scas
xchg
or
js
xchg
clc
sbb
lea
cdq
into
jmp
push
and
push
or
shl
sbb
retf
mov
mov
fs
js
into
inc
jae
mov
ret
add
and
icebp
clc
or
mov
jb
pop
sti
dec
mov
js
retf
lods
or
pushf
(bad)
scas
push
sub
nop
mov
ret
sbb
push
dec
push
jle
push
jnp
mov
xchg
bound
std
call
add
ret
and
inc
imul
xchg
jbe
sub
dec
es
cmp
lods
cs
ja
data16
and
push
jmp
(bad)
sub
mov
and
pop
call
cmps
das
push
sbb
xchg
int
shr
or
ret
div
add
cmc
iret
test
fs
movs
(bad)
imul
jge
mov
add
div
dec
xchg
add
inc
dec
push
(bad)
aam
dec
sbb
hlt
mov
std
pop
mov
or
sub
adc
pop
inc
mov
in
adc
(bad)
outs
sub
add
sub
lahf
push
xor
out
and
(bad)
rol
mov
mov
pop
add
or
les
push
or
pop
xor
push
aad
xor
xor
ja
iret
wrmsr
mov
mov
call
cmp
dec
scas
jecxz
sub
cs
inc
not
div
hlt
xchg
les
pop
retf
shl
mov
ss
or
ss
call
cvtps2pi
inc
pop
push
div
inc
mov
xor
cwde
je
call
iret
daa
scas
js
mov
push
jo
and
xor
add
xchg
clc
or
mov
sub
and
adc
jle
xchg
xchg
mov
xchg
sbb
push
dec
(bad)
xchg
xor
daa
push
dec
cmp
pop
xchg
cdq
jns
or
retf
lds
mov
and
cmp
or
inc
es
in
cmc
imul
push
pop
jmp
dec
das
or
pop
jmp
in
jg
imul
add
dec
lock
mov
mov
cs
imul
es
mov
scas
loopne
adc
mov
ins
inc
mov
fcomp
ja
out
mov
mov
addr16
xchg
sbb
je
jle
sbb
dec
in
push
in
div
in
mov
jb
xchg
xor
xor
repnz
jg
adc
sub
mov
sar
aad
adc
cmp
and
jecxz
bound
hlt
scas
adc
in
push
sub
rol
or
ja
cmp
cli
stos
sti
push
shl
sbb
(bad)
pop
data16
or
fbstp
or
dec
in
jne
push
sbb
and
(bad)
cmp
pop
ror
sub
cmp
int3
inc
loopne
in
test
retf
movs
daa
pop
fwait
jno
(bad)
ja
push
sbb
pushf
stos
imul
pop
push
fbstp
dec
es
push
pop
sbb
jbe
cld
push
das
dec
lods
retf
cmp
xor
dec
push
popf
sti
enter
or
loop
ja
add
sbb
out
adc
jmp
mov
cmp
push
add
fistp
ficomp
inc
push
cdq
adc
jnp
lahf
xchg
adc
fld
or
jecxz
xchg
adc
pop
dec
mov
pop
aaa
stc
adc
(bad)
jo
stos
sbb
movs
push
gs
xchg
sahf
stos
loop
cdq
cmp
push
cmp
iret
fbld
scas
cmp
cld
push
call
test
lods
jecxz
retf
pusha
sub
add
mov
pop
push
scas
mov
lea
and
mov
mov
xchg
pop
cs
xor
xor
sti
mov
fadd
rcr
mov
jb
loope
es
push
in
jnp
jl
sahf
dec
icebp
dec
dec
jo
scas
xor
jo
sar
fist
sub
jmp
push
and
ret
fisubr
vmovmskps
xor
sbb
jle
repz
gs
repz
dec
loopne
jg
scas
jge
mov
ret
cmc
test
mov
aam
retf
dec
cli
daa
inc
or
mov
popf
shl
xchg
and
addr16
xchg
inc
mov
pop
inc
sbb
fist
add
sbb
(bad)
or
jecxz
out
call
push
retf
(bad)
sar
ins
adc
cld
sar
sti
xchg
pinsrw
ja
push
xor
push
imul
(bad)
sti
jmp
xor
dec
lea
cld
mov
rcl
mov
(bad)
and
jo
xchg
sub
cmps
sbb
jmp
mov
mov
cmp
(bad)
rol
fs
mov
(bad)
cwde
gs
dec
mov
test
loop
sub
dec
inc
cs
or
jg
inc
out
and
mov
mov
sub
out
(bad)
lahf
ror
cmc
in
adc
adc
fbld
sahf
test
icebp
pop
add
mov
jp
xchg
pushf
mov
jecxz
jae
ds
jmp
xchg
and
ins
mov
xor
xor
lahf
sbb
xor
pop
fst
cmp
xor
std
jnp
(bad)
sub
retf
sbb
inc
mov
leave
jge
push
xor
xlat
dec
je
mov
sbb
pop
xor
inc
fstp
pop
sar
and
pop
(bad)
ins
inc
dec
pop
adc
add
inc
mov
mov
push
jnp
fwait
aad
sahf
or
pop
or
mov
daa
xchg
inc
shr
push
call
mov
pop
jne
shl
sbb
je
adc
rcl
shl
push
sub
lock
xchg
sub
pop
das
bound
and
or
cmps
mov
jae
add
sbb
loope
sbb
mov
push
mov
repnz
fldcw
mov
stos
mov
mov
mov
or
push
inc
pop
outs
mov
mov
movs
stc
dec
pop
mov
int
jae
std
and
mov
mov
dec
mov
je
callw
add
sar
mov
inc
dec
pop
in
ins
fcmovnb
stos
and
adc
neg
aaa
or
stos
pop
mov
inc
lea
inc
cmps
mov
js
xchg
les
retf
or
cmp
stos
int3
mov
jnp
mov
xchg
cmps
jb
mov
mov
inc
movs
pop
xchg
jge
push
mov
pop
sahf
ret
mov
js
cmp
ret
hlt
xchg
les
scas
and
(bad)
popf
imul
loope
data16
mov
ins
aaa
es
pop
add
mov
in
movs
mov
es
jbe
ret
sub
bound
adc
jmp
mov
xchg
fst
aas
std
xchg
xor
mov
test
inc
out
xchg
scas
inc
ret
mov
stc
ror
je
enter
push
push
sbb
loope
mov
inc
adc
(bad)
movs
pushf
into
and
jnp
mov
mov
adc
xchg
ficom
dec
xchg
repz
lahf
dec
xor
cmp
in
pop
fbld
(bad)
repz
sub
sub
or
or
jns
or
repnz
ret
sub
in
pop
mov
das
mov
jb
sahf
repz
mov
mov
mov
pop
inc
lds
in
mov
ds
push
aas
and
clc
or
cmp
in
push
pop
iret
cmp
and
push
pop
in
and
push
dec
cmps
test
outs
dec
aaa
mov
push
xor
cmps
shl
mov
loope
mov
sar
sbb
dec
lock
cs
cwde
mov
not
cmp
call
mov
jnp
push
pop
es
mov
and
mov
dec
mov
out
imul
rcl
mov
mov
leave
mov
pop
(bad)
mov
fst
jmp
sbb
(bad)
fstp
sbb
imul
(bad)
lods
jmp
cmp
leave
sti
xchg
jmp
mov
ds
ret
jbe
sar
xchg
mov
mov
and
hlt
aam
xchg
cld
sbb
ins
and
jg
jne
add
ds
inc
xchg
out
ins
mov
in
call
adc
pop
(bad)
dec
ins
jp
inc
adc
pop
jbe
push
mov
jne
and
js
aam
sub
outs
movs
adc
test
es
imul
cs
ins
jns
retf
jmp
shl
push
jnp
sub
mov
cmps
movs
and
fs
ficomp
dec
add
mov
jmp
inc
retf
fist
cmp
xchg
scas
jns
sub
inc
pop
hlt
pop
pop
mov
ret
pushf
jp
push
adc
retf
into
js
in
jmp
movs
jb
push
rcl
movs
mov
sahf
mov
mov
mov
sbb
push
inc
inc
pushf
jmp
daa
pop
les
std
mov
mov
bswap
mov
fidiv
out
stos
je
frstor
mov
hlt
jns
sub
shl
je
inc
cmp
pop
jnp
das
fisubr
fcom
jbe
mov
test
fwait
inc
mov
cs
jnp
push
call
repz
jns
mov
imul
fnstcw
aaa
loopne
mov
call
sbb
ins
bound
repnz
popa
sub
js
loope
mov
mov
cmps
push
jno
lea
fisttp
xor
cmp
popf
repz
test
scas
mov
pop
xchg
out
rcl
pop
xlat
pop
sbb
sti
out
and
stos
xchg
mov
idiv
dec
pop
loopne
test
pop
pop
cmp
fadd
jns
lods
ret
xchg
lahf
push
lods
or
xor
xor
push
sbb
and
popf
iret
mov
sub
outs
iret
(bad)
cmp
aam
dec
jp
lods
data16
xchg
nop
xchg
pop
lea
push
adc
clc
pop
sbb
add
sti
inc
cmp
xchg
xor
jmp
pop
mov
jmp
rol
mov
stos
and
mov
ds
dec
and
test
inc
loopne
adc
movs
jnp
sub
jae
out
das
sbb
pop
and
jnp
ja
clc
fcom
sub
dec
daa
cwde
movs
cmp
les
arpl
lock
(bad)
hlt
iret
test
mov
sbb
adc
xlat
mov
loop
repnz
and
rcl
mov
mov
sub
inc
daa
(bad)
adc
cmps
mov
push
inc
test
xor
aas
jae
jecxz
add
add
mov
stc
jmp
add
mov
out
stos
add
pop
and
loop
cwde
add
test
dec
push
sbb
fwait
lods
or
or
adc
fbld
fisttp
push
xchg
rol
scas
sub
mov
ins
sbb
mov
sti
std
push
cmp
mov
mov
jmp
ss
sbb
jge
push
jns
popf
mov
cmp
sub
mov
xor
in
hlt
sbb
lahf
loop
jae
push
sub
mov
xor
cld
pop
stc
out
mov
push
jg
xor
mov
adc
push
push
add
sti
add
popf
mov
mov
leave
fisttp
ins
adc
mov
sbb
(bad)
push
pop
mov
xor
xor
xor
dec
jb
repnz
(bad)
mov
push
ss
add
scas
icebp
cli
adc
pop
movs
xor
or
push
je
and
sub
and
mov
lahf
add
cmc
jge
mov
mov
add
xor
add
add
popf
lods
mov
cmp
int3
mov
mov
pop
add
shr
shl
pop
mov
(bad)
lgs
dec
gs
gs
call
pop
push
cld
adc
leave
sbb
pop
cmps
outs
mov
mov
fist
push
sub
fcmovnb
and
icebp
das
xor
enter
adc
and
fistp
int
push
push
xor
das
addr16
sub
or
js
pop
push
xor
loopne
mov
(bad)
cmp
out
adc
aam
mov
dec
stos
dec
cmp
adc
(bad)
shl
adc
cmp
or
pop
xor
dec
mov
rcr
ins
rol
inc
fisubr
xchg
cmp
xchg
ins
retf
test
js
(bad)
xor
inc
cmps
test
dec
xor
iret
adc
pop
retf
stos
adc
sbb
in
out
ds
and
ins
enter
add
movs
cmp
pop
xchg
adc
in
fidivr
and
out
call
ins
imul
(bad)
jmp
cwde
int3
mov
shl
mov
xor
aad
ficomp
jl
lds
les
sbb
nop
pop
fst
sbb
dec
or
ficomp
loop
xor
mov
fist
pop
test
xor
stos
int
mov
xor
or
das
xor
adc
mov
das
lock
sub
stos
cli
sub
scas
cmps
add
fstp
sub
rcl
jmp
add
push
dec
push
fadd
pop
test
and
xchg
test
xchg
add
arpl
mov
cmp
div
and
sub
xchg
mov
ficomp
shl
adc
dec
cmp
cmp
repnz
adc
xor
mov
mov
pop
jne
test
mov
(bad)
mov
inc
test
inc
push
(bad)
dec
out
test
cdq
push
jecxz
and
test
dec
in
jmp
push
fld
inc
(bad)
or
das
pop
sub
inc
mov
stc
push
sbb
jp
mov
or
loopne
xchg
add
xor
mov
call
or
push
jmp
stc
jle
mov
pusha
ja
add
loope
xchg
or
adc
and
xor
mov
mov
in
sub
xchg
fs
cmps
sbb
mov
jb
mov
cmp
mov
aas
adc
or
inc
add
xchg
scas
mov
mov
dec
mov
jmp
mov
mov
arpl
scas
fwait
jl
jge
(bad)
mov
out
stos
mov
lahf
div
inc
loopne
inc
pop
mov
mov
add
sahf
sub
and
inc
sub
dec
jb
out
and
cmp
push
aam
fwait
ret
mov
mov
jno
das
(bad)
mul
test
outs
jle
xor
(bad)
mov
mov
pusha
mov
and
movs
dec
xchg
nop
add
movs
or
jae
jp
jne
add
(bad)
dec
pop
ret
adc
dec
pop
retf
int3
cld
jbe
(bad)
repz
leave
out
fs
xchg
xchg
test
dec
add
mov
pop
sub
hlt
pop
sub
int
push
mov
mov
jge
arpl
shl
(bad)
jo
scas
das
in
sub
test
and
cmp
xor
inc
out
jns
(bad)
int
pop
cli
pop
out
and
mov
inc
jae
mov
int
xor
mov
fistp
loop
or
mov
push
cmp
xchg
or
and
dec
loopne
imul
pop
call
out
adc
mov
aad
xlat
scas
in
out
add
xchg
iretw
les
adc
add
fmul
scas
push
and
pop
add
jmp
xor
and
aam
out
pop
pop
push
lea
mov
pushf
sbb
adc
push
push
out
pop
sub
push
mov
cmc
and
(bad)
pop
mov
aas
int3
ds
repnz
pop
sbb
cli
mov
loope
sub
xor
mov
ds
test
call
imul
cli
mov
adc
jnp
jmp
pop
jns
outs
lods
dec
add
idiv
inc
and
cmp
mul
inc
sub
inc
mov
call
(bad)
cmp
or
mov
test
call
in
pushf
sbb
pushf
xchg
cwde
push
out
sub
ror
jmp
push
jecxz
lea
cmp
outs
inc
into
and
fwait
xchg
sub
jl
je
inc
int
push
xor
dec
bound
push
and
in
(bad)
sub
test
sbb
cmc
mov
pop
aaa
ja
xchg
lahf
in
das
in
out
push
aam
push
inc
scas
dec
xor
out
push
add
das
repz
movs
mov
(bad)
int
std
ficom
cmp
fiadd
sti
lods
hlt
fsubr
jns
arpl
jns
test
push
and
mov
mov
popa
add
(bad)
clc
pop
into
fisubr
into
clc
mov
cdq
mov
out
imul
dec
add
sub
xor
xor
bound
aam
call
test
cmp
add
cmp
ds
out
push
sub
cmps
pextrw
gs
mov
or
stos
mov
out
clc
fwait
in
sub
scas
lds
aas
push
out
mov
push
loopne
and
xor
mov
not
daa
dec
cli
jae
(bad)
xor
out
xchg
xchg
push
aaa
jmp
xor
xchg
cmps
and
mov
mov
mov
push
dec
popa
jbe
movs
daa
data16
cmp
(bad)
into
lock
inc
cmp
and
test
jge
push
sahf
xchg
call
out
imul
jge
sbb
cmp
fild
mov
jbe
pop
imul
test
cmp
scas
je
scas
gs
xchg
xchg
es
xchg
and
sar
out
mov
stos
mov
add
add
dec
outs
into
mov
out
xor
dec
xchg
aam
push
mov
push
add
and
mov
dec
sbb
movmskps
pop
cmp
rcl
std
into
js
add
xor
int
add
test
add
stos
movs
pop
sub
ja
xor
test
push
pop
sub
nop
nop
xchg
ins
fs
test
clc
sbb
xchg
repnz
scas
mov
daa
mov
call
imul
nop
aam
leave
loope
sub
jb
mov
and
push
or
sahf
xor
cmp
retf
movs
icebp
or
div
aam
pop
sub
out
jbe
fucomp
fdivr
pusha
icebp
push
test
test
jge
xchg
xchg
data16
aaa
push
dec
adc
outs
sbb
rcl
iret
jno
adc
add
and
add
sub
adc
out
jmp
xchg
sbb
cs
test
jg
adc
cmps
mov
xor
mov
outs
fisubr
int
iret
fwait
or
pop
(bad)
gs
cmps
ins
stos
repnz
inc
cmp
pusha
push
pop
fild
nop
imul
push
nop
mov
xchg
and
in
leave
mov
pop
ds
cmp
dec
repnz
fimul
mov
shl
push
ret
test
mov
rcl
jno
sbb
jne
jmp
add
js
sub
sbb
ds
arpl
dec
ror
inc
mov
call
js
and
ret
jmp
pop
add
sub
or
dec
and
dec
out
out
stos
aam
add
xchg
sub
inc
sub
mov
push
mov
push
fldcw
dec
and
sahf
fistp
idiv
push
(bad)
daa
loopne
nop
pusha
bound
sti
addr16
inc
inc
xchg
and
or
push
lahf
cld
es
stc
inc
ins
add
add
rol
and
xor
fisttp
cmp
push
mov
das
retf
mov
outs
xchg
imul
outs
call
sbb
dec
xor
jno
jecxz
jae
int3
int3
outs
bound
les
sti
xchg
push
dec
cwde
shl
clc
mov
sub
inc
shl
outs
jo
shl
(bad)
adc
sbb
in
repnz
in
jb
cmp
fldenv
arpl
stos
xor
ins
(bad)
pushf
bound
(bad)
lods
std
in
sahf
lock
mov
gs
mov
add
scas
dec
inc
xchg
mov
out
jl
rol
mov
cmp
push
cs
mov
outs
dec
dec
adc
mov
dec
mov
mov
mov
mov
setb
xchg
out
ins
dec
jbe
adc
sub
stos
push
sar
inc
jno
lahf
sar
shl
jle
in
adc
dec
(bad)
jmp
jae
pop
dec
xchg
out
out
mov
jno
mov
(bad)
ins
xchg
dec
repnz
add
jp
or
xchg
mov
addr16
cmc
pop
sub
outs
or
outs
imul
mov
sub
or
stos
xchg
mov
popa
xor
add
fdivr
inc
(bad)
lahf
add
pop
dec
movs
pop
cmc
mov
mov
push
adc
sub
fidiv
push
lods
dec
ins
push
and
sbb
lds
jecxz
pushf
push
mov
add
pusha
push
push
mov
dec
inc
xchg
mov
ror
arpl
leave
sub
nop
fbstp
movs
mov
xor
sub
push
jle
(bad)
pop
sbb
cs
push
jno
jmp
test
into
mov
pop
(bad)
xor
movs
adc
or
ror
cdq
push
xor
cmc
mov
sub
xor
ret
pushf
fwait
dec
ret
call
enter
loop
fwait
movs
int3
int
sub
test
fadd
iret
dec
cvtps2pd
fidivr
imul
inc
movs
bound
imul
out
jl
add
into
ins
neg
xor
call
push
sbb
addr16
inc
mov
or
mov
and
fninit
cli
shr
sub
(bad)
repnz
cli
dec
dec
ja
xchg
ja
loop
push
push
js
pop
cmp
into
xor
mov
adc
pop
sbb
cmp
jmp
stc
jae
add
xlat
in
jl
out
call
pop
dec
int3
lods
lods
jmp
ret
xor
sbb
movs
add
shr
cs
mov
dec
fadd
mov
mov
dec
sub
sbb
or
push
and
and
(bad)
std
inc
jns
cdq
push
pop
std
adc
dec
sbb
jae
ins
(bad)
in
ins
in
cdq
in
lods
(bad)
jnp
enter
jb
clc
loopne
inc
jbe
mov
adc
stos
jle
push
jns
ficom
scas
scas
xor
xchg
xchg
xchg
jne
pop
aam
xchg
mov
xchg
(bad)
pop
scas
enter
sbb
test
add
xor
inc
pop
jp
pusha
sbb
int
inc
sbb
out
xchg
cmp
ins
push
cmp
fimul
jecxz
ret
ins
icebp
xor
fiadd
add
jns
inc
mov
hlt
jl
out
jecxz
push
pop
mov
(bad)
jle
cli
pop
xchg
fsub
inc
dec
jge
jmp
xchg
imul
sub
xor
scas
ss
xor
dec
and
aam
lods
pop
push
(bad)
jecxz
enter
mov
hlt
jne
push
mov
in
repnz
lods
mov
out
stc
mov
call
lea
cld
and
repz
or
enter
inc
sti
or
out
cmc
(bad)
mov
leave
or
mov
sbb
js
test
jg
inc
xor
xrelease
cmc
rol
mov
mov
test
pop
popf
scas
mov
inc
ja
lock
mov
mov
push
ds
das
push
cmp
fld
jb
or
(bad)
fsubr
add
in
dec
jns
dec
inc
inc
in
call
fldenv
scas
push
push
xor
sub
xchg
fst
xor
fnstsw
dec
popa
adc
fisttp
pop
sub
scas
nop
je
pop
jnp
sub
mov
std
fimul
repnz
mov
cmps
xchg
add
fadd
push
pushf
dec
and
sbb
inc
push
fwait
dec
cmp
cmp
adc
and
mov
pop
sub
mov
ins
add
test
xchg
ins
adc
data16
pop
sub
mov
fsubr
outs
in
mov
aam
mov
iret
sub
call
stos
mov
(bad)
push
repnz
lds
into
popa
outs
jmp
jae
test
dec
inc
in
(bad)
mov
out
mov
jecxz
mov
pop
movs
xor
mul
cmc
xlat
mov
xor
into
cmp
xchg
pop
pop
add
sbb
mov
fwait
lods
fldenv
cmp
dec
push
push
int3
pop
pop
repz
pop
pop
fldcw
cmps
dec
fwait
add
pop
mov
xor
and
stos
dec
mov
sub
inc
mov
or
retf
xchg
test
fisttp
imul
ins
pop
enter
dec
and
push
dec
jmp
mov
xor
adc
bound
inc
pop
mov
retf
pop
sub
add
push
mov
cmps
xchg
das
jp
cmp
or
imul
adc
sbb
hlt
mov
mov
push
inc
sub
adc
enter
sub
ret
adc
repnz
jno
push
out
ret
loopne
or
movs
lods
pop
into
in
xchg
cmp
jmp
pushf
or
aam
repz
js
(bad)
jmp
loopne
std
(bad)
shl
test
repz
cmp
cmp
or
xchg
jl
aaa
mov
xchg
mul
xchg
int
xor
push
neg
jno
xchg
add
xchg
jnp
cmp
loop
dec
push
sti
loopne
sub
cmp
or
pop
xchg
xchg
add
data16
mov
adc
push
fwait
imul
xchg
pop
lds
jmp
ins
cwde
inc
adc
in
mov
ja
in
mov
jge
jb
cli
and
fnstenv
retf
cmp
pop
(bad)
not
mov
or
jecxz
sub
mov
push
push
xchg
mov
ja
pop
inc
gs
rol
jno
push
dec
gs
aam
retf
jnp
hlt
add
je
xchg
rcl
sub
lahf
push
inc
lea
test
push
jp
aam
mov
mov
jg
and
pop
js
shl
jnp
arpl
je
dec
mov
xchg
gs
sub
adc
iret
push
inc
push
adc
and
jbe
iret
jno
sub
xlat
jmp
sub
cmp
sub
popf
pop
cmp
jo
sbb
cmp
mov
push
cmp
jne
repnz
out
cli
ds
(bad)
mov
nop
iret
jmp
jb
fadd
fsub
sbb
lods
pop
out
movs
mov
adc
mov
jnp
pop
hlt
sar
idiv
and
or
mov
push
(bad)
mov
pusha
fcom
jmp
inc
mov
dec
sahf
xchg
jb
out
jg
(bad)
out
cwde
xchg
mov
arpl
push
sbb
stc
cmp
inc
and
inc
pop
mov
stos
xchg
pop
test
dec
xlat
ins
aam
jns
jnp
out
mov
lods
push
adc
in
js
test
sub
cs
daa
mov
dec
mov
jne
sbb
sbb
and
xchg
adc
or
jmp
icebp
pushf
jl
mov
aaa
sar
jns
iret
or
daa
fidivr
stos
jge
push
inc
clc
jl
add
js
fidivr
ins
jae
push
xchg
mov
bound
movs
out
mov
das
or
cld
ds
jl
inc
push
inc
cmp
clc
dec
adc
out
test
push
inc
inc
xchg
js
(bad)
cmp
cmp
dec
push
sub
xor
xchg
js
gs
inc
mov
mov
neg
sbb
mov
push
retf
mov
test
sahf
pop
rcr
retf
and
sbb
adc
sti
test
mov
and
add
(bad)
(bad)
js
push
pop
imul
and
push
movs
mov
loope
rcr
gs
push
rol
jae
mov
lea
aam
adc
das
mov
jecxz
nop
push
add
jge
cmps
adc
mov
sbb
pop
fwait
ret
push
jge
dec
sbb
xlat
jmp
xchg
xchg
mov
and
rcr
paddq
into
xlat
stos
and
retf
jp
sbb
xor
(bad)
mov
jo
stos
stos
dec
pop
pop
sahf
adc
jne
dec
imul
test
adc
add
jns
jbe
mov
scas
push
out
popf
push
sub
call
jmp
lods
sbb
jae
les
dec
pop
cmp
sar
ret
lahf
int3
js
test
(bad)
cmp
repz
fsub
mov
enter
or
xor
sbb
ins
retf
ins
retf
and
ja
push
pushf
test
std
mov
cwde
dec
fcmovu
xor
scas
ret
mov
cs
imul
fsubrp
and
push
out
push
mov
pop
out
imul
cld
mov
retf
adc
mov
mov
ret
jmp
or
dec
cmps
jecxz
outs
mov
dec
xchg
scas
sahf
fisub
inc
xchg
daa
cwde
lock
xor
mov
jb
jp
jge
test
data16
fstp
popa
jl
adc
mov
nop
or
xchg
sbb
in
dec
jg
inc
addr16
sub
sar
(bad)
adc
cmp
adc
or
dec
les
xor
pusha
imul
mov
rcl
push
pop
mov
jp
push
xchg
hlt
fwait
out
or
stos
stos
pop
scas
mov
shrd
retf
mov
xchg
imul
sti
jge
or
sar
push
sbb
and
push
xor
jp
add
mov
xchg
call
dec
rol
scas
outs
(bad)
addps
outs
push
xchg
bound
xchg
gs
fdiv
test
cwde
add
jns
add
xor
jecxz
std
sub
dec
xor
(bad)
pop
and
jns
sbb
mov
cmp
pop
jo
cmc
in
lea
add
rol
jmp
mov
cmps
mov
sbb
xchg
call
int3
xchg
adc
fmul
and
fisttp
sub
add
pop
lods
dec
repz
(bad)
xchg
(bad)
sbb
mov
or
stos
jno
data16
ss
xchg
xor
test
pop
sub
mov
cmp
sahf
and
pop
pop
pop
cmp
les
cli
add
and
dec
xchg
mov
lahf
adc
shl
jno
xchg
mov
inc
add
adc
scas
push
(bad)
fld
cmp
push
int3
mov
and
in
in
es
in
and
pushf
mov
sbb
push
sbb
lock
sti
mov
jg
into
mov
test
ror
icebp
jl
mov
pop
aam
xchg
(bad)
inc
pop
or
mov
mov
test
cmps
ret
ret
movs
loop
mov
addr16
xor
fucom
(bad)
scas
xchg
pop
jo
pop
fisub
or
inc
push
in
dec
push
push
outs
inc
inc
cmps
push
pusha
loopne
psubq
pop
inc
ficom
scas
sub
cmc
push
and
sub
ins
jns
nop
mov
in
cdq
and
add
dec
pop
jmp
dec
jbe
jmp
xchg
mov
mov
mov
xor
clc
(bad)
mov
(bad)
cli
(bad)
shl
push
push
mov
jl
outs
push
adc
cmps
test
mov
push
mov
out
fwait
les
inc
sahf
fist
(bad)
test
rcr
movs
xchg
bound
aad
imul
lea
inc
lods
push
add
mov
fisttp
mov
jl
push
xchg
sub
das
or
sbb
call
push
dec
in
fs
mov
sub
xor
and
jmp
aaa
mov
xchg
lods
inc
adc
shr
sub
xchg
icebp
int
push
pusha
out
push
ja
repnz
mov
inc
stos
add
add
inc
or
jns
dec
mov
mov
push
(bad)
inc
pop
sbb
mov
stc
cmp
or
std
stos
or
push
ins
imul
mov
mov
sbb
sbb
test
pop
and
mov
jl
int3
addr16
out
inc
mov
sahf
sbb
test
inc
sahf
or
into
mov
jno
add
mov
jecxz
hlt
pop
mov
jg
outs
cmp
iret
bound
mov
pop
std
or
lea
rol
cmp
lods
or
sbb
ror
icebp
popf
push
pop
add
inc
icebp
mov
sub
repnz
popa
mov
lds
jae
lea
inc
aam
jmp
xor
xchg
xchg
pusha
(bad)
cmps
mov
cdq
sub
add
shl
jo
fisubr
fnstenv
js
outs
retf
mov
into
imul
mov
or
mov
je
rcr
shr
xor
repz
sbb
dec
or
repnz
inc
add
inc
popa
sti
adc
push
iret
and
push
(bad)
std
adc
sar
ret
leave
sbb
adc
push
call
daa
jbe
std
ror
and
inc
cdq
outs
sti
jno
dec
leave
sbb
stc
hlt
push
pop
mov
sub
jno
lock
pop
adc
and
adc
aam
xor
xlat
je
movs
icebp
loopne
pop
aaa
loop
aas
retf
fcomp
lahf
out
mov
stos
shl
out
mov
xchg
out
call
cli
mov
sub
jns
xchg
jne
sbb
push
sub
loop
not
pop
cmp
mov
aas
and
mov
inc
clc
xor
das
sbb
inc
enter
das
cmps
xchg
in
in
mov
fidivr
jmp
dec
lods
sub
inc
pop
fist
mov
mov
and
and
ret
test
lahf
mov
fmul
loopne
pop
movs
push
or
popa
test
jecxz
sub
sbb
mov
test
adc
or
mov
cmp
or
pushf
lock
iret
push
call
dec
aad
mov
mov
mov
out
lock
aaa
xor
sahf
push
dec
mov
xchg
in
sbb
test
inc
stos
ficom
adc
push
inc
sub
popf
lods
mov
jno
fs
or
push
xchg
jecxz
les
lods
mov
pop
pop
adc
jno
lods
int
lahf
fisubr
or
pushfw
cli
fisubr
xchg
stos
and
sub
(bad)
fnsave
pop
xchg
arpl
jecxz
add
jmp
xchg
mov
addr16
ret
or
test
daa
add
shl
adc
xor
aaa
fmul
fldenv
outs
mov
loope
jg
daa
js
stc
and
pop
mov
push
jmp
pop
lods
sbb
lods
ss
stos
sahf
push
ror
cli
call
pop
out
lahf
xor
xchg
je
mov
dec
inc
jle
push
or
mov
cmp
xchg
jno
test
mov
out
sahf
add
pop
enter
jo
push
fadd
pop
push
xchg
adc
push
retf
or
test
loope
mov
adc
xchg
stos
mov
push
in
xor
mov
jecxz
cmps
sub
or
in
aas
outs
sub
mov
cmp
add
lds
fld
xor
inc
or
loope
push
out
sti
xlat
int
sub
xchg
xor
xor
add
fsubrp
jl
test
in
js
xchg
xlat
rol
jne
cmp
push
and
dec
dec
(bad)
push
cwde
ss
popa
int3
jmp
(bad)
arpl
push
or
and
cmp
mov
xchg
lahf
dec
ja
loopne
test
nop
add
imul
push
sti
mov
adc
icebp
push
adc
sti
out
xchg
xor
test
mov
rol
fwait
xor
sbb
cdq
cmp
jae
iret
into
inc
cdq
imul
cdq
mov
mov
mov
aas
push
push
push
inc
es
mov
repz
cmp
mov
sub
cmps
lds
jmp
aas
repz
jp
xor
inc
sbb
xchg
sbb
mov
inc
icebp
or
xchg
pusha
(bad)
pop
dec
inc
pop
gs
daa
jno
xor
pop
fcomip
sti
sahf
pusha
call
popf
xchg
jns
mov
call
pop
dec
mov
push
mov
je
or
lods
call
mov
or
push
(bad)
addr16
fistp
or
(bad)
loop
rcl
adc
xchg
sahf
and
add
xchg
and
mov
mov
jb
outs
adc
xchg
cmp
call
into
fwait
mov
dec
inc
cdq
int3
jge
rol
jne
lea
inc
mov
imul
push
sahf
inc
mov
ins
les
jmp
add
push
jbe
sbb
stc
push
and
mov
cmps
jbe
stc
mov
dec
sti
popa
push
stos
std
std
lea
stos
inc
adc
call
mov
mov
pop
clc
(bad)
and
movaps
xchg
std
les
sub
and
dec
jne
fcom
and
retf
loopne
mov
fsubr
fsubp
xor
loop
xor
aas
jae
retf
sbb
adc
mov
mov
jbe
push
test
and
add
or
aad
in
cmp
inc
and
(bad)
pusha
pop
push
ins
outs
add
les
push
sub
cmps
sbb
pop
int3
lds
inc
push
add
cwde
xor
aad
jne
pop
cld
je
jb
push
fst
mov
and
mov
sbb
mov
mov
daa
mov
inc
or
mov
and
cwde
jg
in
pop
cmp
mov
cmp
or
adc
pop
adc
dec
lods
or
es
xor
xchg
cmp
nop
xor
mov
mov
xchg
je
adc
sbb
(bad)
mov
aam
popa
xor
out
xlat
lock
into
(bad)
push
(bad)
xor
push
dec
and
push
shl
add
sbb
cs
out
push
loope
push
jo
sub
sbb
in
dec
stc
xor
ret
dec
cwde
mov
mov
cmp
iret
or
adc
jmp
bound
mov
into
adc
or
pusha
sbb
mov
fcmovb
sub
xor
icebp
shl
ja
mov
add
scas
popa
idiv
push
fadd
dec
(bad)
adc
dec
(bad)
stos
cdq
mov
push
inc
out
retf
arpl
(bad)
jl
cld
in
mov
sub
mov
xor
je
dec
push
add
mov
xor
xchg
xchg
nop
neg
aaa
add
btc
push
inc
jecxz
xchg
push
pushf
dec
or
shr
jb
inc
xchg
push
xor
lea
xor
xchg
das
std
xor
xor
jg
and
shr
inc
sti
fimul
movs
add
jp
dec
cs
add
pusha
sub
inc
ret
lods
lods
mov
rcr
cdq
jno
mov
xor
and
push
inc
cmp
iret
dec
cmp
daa
inc
add
sbb
hlt
ds
ret
mov
daa
dec
xlat
jge
push
push
push
sbb
arpl
pop
sub
into
loope
cmp
icebp
pop
std
cmps
rcl
and
push
jno
or
fadd
sub
sub
adc
sub
or
mov
xchg
popf
pop
cmc
and
aam
push
stos
jb
icebp
pop
jo
rcl
or
jmp
in
outs
retf
(bad)
mov
cmp
daa
mov
out
aam
stos
adc
jb
inc
mov
jp
retf
sbb
lock
lock
or
jno
cmp
enter
int3
jp
leave
rcr
(bad)
sub
sub
in
or
jb
pop
xor
imul
jle
lods
xor
inc
mov
inc
mov
jne
adc
add
inc
jno
dec
in
iret
enter
and
imul
shl
mov
mov
lea
das
int
sbb
std
lds
iret
xor
xchg
jmp
ret
lea
sbb
xchg
mov
add
inc
jmp
adc
mov
ret
push
jns
sub
je
cli
or
ins
je
cmp
in
add
sbb
xlat
(bad)
dec
pop
in
ss
adc
rcl
loopne
and
retf
mov
iret
es
push
(bad)
jg
hlt
adc
mov
aas
mov
jmp
in
xchg
cmp
inc
and
cmps
xor
or
cmp
adc
mov
jbe
in
jl
push
dec
movs
add
outs
call
jge
and
fldcw
popf
mov
loope
cmc
ret
scas
lock
sub
leave
popa
inc
xchg
cmp
into
xor
dec
xor
and
add
jmp
test
cdq
fcmovbe
fdivr
xor
neg
arpl
xlat
push
(bad)
aad
inc
sbb
jle
adc
test
lods
sub
imul
loopne
adc
add
push
inc
or
cmp
(bad)
pop
mov
cdq
sbb
fld
xor
xor
dec
in
sti
into
imul
fdiv
dec
inc
mov
hlt
and
jmp
out
hlt
(bad)
neg
jne
dec
ss
pop
fnstcw
mov
xor
and
mov
adc
rcr
mov
movs
outs
popf
mov
xor
loopne
ja
and
clc
cli
mov
call
adc
xchg
fst
pop
sub
int
sbb
call
sub
push
or
mov
enter
mov
(bad)
in
jl
xchg
mov
pop
sub
or
adc
xor
mov
(bad)
jo
jge
push
retf
pop
adc
or
mov
jp
inc
popf
loop
adc
fistp
ret
fisttp
sub
sub
inc
pop
data16
push
call
pop
fsubr
pop
in
push
sub
xchg
enter
rol
sbb
jno
das
lods
pop
mov
sbb
frstor
loop
jbe
fist
aad
pop
fcmovbe
test
sbb
cwde
pop
adc
hlt
cmp
add
popa
je
leave
mov
imul
popa
jecxz
inc
sub
cli
call
jl
mov
std
pop
fdivr
popf
aas
lods
retf
jo
das
cmp
and
push
pop
or
stos
sahf
outs
je
in
sub
in
pop
inc
into
(bad)
or
mov
jno
lds
jae
out
repz
cli
test
jmp
fisub
adc
arpl
ror
mov
je
bound
mov
pushf
shl
(bad)
stos
sub
xlat
pop
mov
pop
and
dec
sbb
xlat
leave
retf
cmp
in
cmp
cs
fild
add
scas
into
movs
jmp
scas
add
xchg
mov
mov
cmc
idiv
aam
cmp
sbb
pop
sub
cmp
dec
dec
add
scas
mov
jmp
jecxz
dec
xchg
stos
xor
xor
call
adc
call
mov
pop
pop
sbb
fcom
pop
js
adc
mov
loop
inc
retf
in
dec
or
(bad)
mov
sbb
cwde
push
call
xchg
jns
pop
out
jns
jb
mov
xor
or
xchg
add
adc
adc
ret
xor
inc
push
movs
adc
mov
push
push
pusha
fiadd
jae
lock
outs
stos
sub
adc
xor
sbb
or
pop
shl
xor
sti
and
add
add
or
push
sub
(bad)
jge
push
add
test
jnp
add
movs
xor
in
mov
mov
or
and
ror
mov
inc
test
shl
ja
push
jmp
jl
or
int3
adc
or
sti
pusha
lods
loop
outs
jno
(bad)
imul
aam
hlt
jmp
mov
inc
add
mov
jge
xor
xor
in
cmps
stos
lods
mov
fwait
std
sbb
push
retf
inc
sbb
fisubr
das
push
and
(bad)
cmp
xor
inc
adc
adc
add
push
movs
cld
out
xor
jne
aaa
inc
fwait
push
inc
xchg
xchg
packssdw
push
addr16
loope
push
int3
and
rcr
leave
dec
xchg
xchg
mov
(bad)
stc
xor
mov
outs
cmp
jle
inc
test
fdiv
ins
and
loope
repz
repz
ffreep
sub
data16
ror
cmps
fistp
mov
das
pop
cmp
aaa
sub
lods
xor
cli
mov
inc
cli
(bad)
push
xor
pusha
outs
mov
jbe
or
mov
(bad)
out
addr16
cmp
cmp
test
push
add
cli
dec
in
imul
inc
loop
and
fbstp
mov
xor
add
daa
jmp
fist
loop
jmp
(bad)
mov
mov
loopne
sub
es
mov
xchg
in
jecxz
xchg
les
cmc
jl
jecxz
cli
mov
std
jns
push
cmp
test
outs
xor
or
ins
sub
push
imul
test
fstp
mov
sbb
push
xchg
jmp
or
jbe
enter
add
rcr
xchg
enter
aad
pop
jmp
neg
dec
daa
sahf
scas
in
inc
cmp
ret
(bad)
imul
pop
mov
xchg
call
xor
adc
inc
in
dec
js
div
xor
jge
shl
in
xor
mov
jecxz
ror
inc
cld
sub
xchg
int3
mov
jno
aad
or
inc
mov
fidiv
test
adc
jmp
out
fdiv
push
pop
cli
or
cwde
fldenv
(bad)
pop
jp
mov
hlt
test
retf
leave
mov
jecxz
shl
shl
push
repnz
fstp
dec
xchg
sbb
test
sub
vsubpd
pushf
cmps
loopne
loope
sbb
fucompp
sub
sub
retf
push
test
mov
call
dec
sbb
xchg
inc
xchg
xchg
loop
push
xchg
mov
and
clc
sbb
lds
sbb
iret
cmp
data16
or
inc
not
mov
mov
std
or
cwde
stc
sub
cmp
out
mov
jecxz
fistp
or
into
es
lods
aam
mov
adc
adc
jnp
arpl
xor
sbb
sbb
clc
jmp
pop
fadd
xchg
enter
mov
in
push
sub
push
sbb
fisub
loope
shl
test
movs
test
fwait
test
pushf
lods
or
nop
dec
xor
jnp
xor
add
fcmove
ss
ins
dec
add
jmp
pop
jl
je
adc
fidivr
(bad)
sahf
ins
dec
jmp
shl
or
mov
outs
shl
add
mov
jecxz
aad
xchg
mov
sbb
xchg
int
scas
hlt
ja
repz
inc
popf
mov
push
jp
push
dec
jne
and
xchg
lea
lock
shl
das
sub
jno
gs
sbb
rcr
mov
jl
sbb
cld
push
(bad)
out
pop
cld
jl
int3
sub
(bad)
jmp
or
mov
les
icebp
fincstp
nop
pop
mov
inc
inc
push
jno
fbstp
pop
push
mov
jno
nop
sbb
cmp
inc
jecxz
mov
pop
sbb
mov
or
cmc
mov
sahf
retf
dec
sub
cmp
mov
xor
push
outs
(bad)
arpl
fcomp
or
adc
popf
mov
aaa
neg
mov
push
add
or
sub
or
addr16
ins
and
pop
fdivr
je
inc
mov
mov
gs
fldcw
mov
and
mov
adc
sbb
scas
mov
cmc
adc
mov
mov
sar
call
aaa
inc
mov
(bad)
jo
(bad)
(bad)
nop
cdq
test
jno
pop
mov
or
pop
fisubr
push
test
mov
test
popa
xchg
sbb
and
cwde
nop
pusha
mov
pop
jo
cmps
test
or
xor
sbb
shl
nop
jle
cdq
xchg
out
pop
into
lds
cmps
sbb
cmp
xchg
cmc
pop
add
fisub
ja
cmp
cld
xchg
sti
popa
mov
inc
lods
inc
pop
cdq
(bad)
push
retf
inc
pandn
inc
jg
pshufw
xchg
inc
adc
cwde
sub
retf
inc
jno
fld
lods
sub
push
stos
pop
and
(bad)
mov
pop
adc
cli
pop
dec
cli
daa
ret
cmovge
call
ja
fcomi
cdq
or
mov
jbe
pop
test
cmp
xchg
dec
push
push
inc
cmp
aas
fdiv
sar
push
adc
pop
push
pop
sub
jnp
xchg
bound
pop
sub
mov
ins
push
sub
cld
aad
shl
mov
dec
mov
inc
test
fwait
pop
aam
inc
movs
lea
pop
hlt
add
sub
std
jge
int
inc
sub
call
push
rcr
dec
scas
mov
iret
data16
add
out
int3
add
or
fdivr
adc
scas
hlt
imul
push
movs
mov
mov
mov
popf
xchg
(bad)
cli
dec
retf
loopne
push
mov
sbb
dec
(bad)
sub
jle
add
cmp
call
mov
sbb
jmp
pushf
xor
imul
das
adc
and
mov
xor
mov
enter
rol
add
test
aaa
inc
test
inc
mov
mov
push
inc
cli
xchg
dec
pop
sbb
in
repz
mov
inc
jmp
sti
push
leave
dec
pop
pusha
(bad)
mov
or
(bad)
dec
add
sub
xchg
sub
cmps
pop
push
sbb
add
shr
jle
and
mov
neg
xchg
inc
push
stc
mov
out
stc
shl
jmp
push
fs
loopne
pop
arpl
aad
mov
mov
add
arpl
stos
push
mov
shl
icebp
ja
xchg
jmp
mov
test
or
ret
popa
fbld
fdiv
mov
fldcw
push
jbe
popa
mov
and
adc
mov
push
and
out
push
scas
iret
ins
adc
mov
xchg
hlt
arpl
jecxz
iret
pop
and
pusha
sbb
cmp
dec
push
inc
ret
cdq
(bad)
mov
add
imul
mov
xchg
div
adc
dec
out
iret
add
cmps
daa
jmp
or
mov
dec
fs
cmp
lock
lods
xor
sbb
mov
lods
inc
sbb
push
or
jecxz
fcmovbe
js
fsubr
sbb
mov
inc
or
fwait
add
and
push
outs
push
push
push
mov
sbb
sbb
jb
xchg
or
pop
mov
adc
nop
loop
std
sub
xlat
xor
int
pop
int3
cmp
ins
add
iret
mov
adc
push
push
fst
adc
and
(bad)
gs
xchg
loope
pop
stos
push
sub
daa
push
push
and
pop
cmp
jo
xchg
int
cmps
mov
ds
out
pusha
jns
sbb
jne
jbe
ds
call
(bad)
(bad)
push
dec
scas
add
push
xchg
push
sub
or
dec
(bad)
test
cmp
mov
jmp
or
out
dec
mov
fld
popa
push
push
enter
movs
push
mov
jne
xchg
mov
sbb
jecxz
jle
movs
cmp
xor
or
int3
jb
adc
out
jae
leave
and
jge
and
repnz
daa
adc
push
push
add
add
lea
push
mov
sti
cdq
sub
ins
jno
arpl
in
lea
pop
out
dec
cmps
add
jmp
aas
lds
mov
leave
shl
(bad)
pop
movlhps
lahf
rol
shr
sbb
outs
push
lahf
mov
add
pop
sahf
repnz
fprem1
shl
xchg
scas
push
push
pusha
bnd
aad
sar
mov
xor
enter
adc
adc
cmp
retf
in
fwait
mov
cmp
sahf
push
and
mov
aam
ficom
push
push
rol
jae
dec
cmp
retf
arpl
add
cdq
xlat
les
pminsw
or
rol
add
test
mov
mov
and
dec
es
fcomp
repz
dec
in
(bad)
and
cmp
jns
jno
in
out
add
inc
clc
dec
sti
jb
and
jp
je
test
mov
cmp
push
int
daa
cwde
mov
jmp
inc
cmp
jae
rcr
jge
mov
push
xchg
and
and
(bad)
fnstcw
cmp
sbb
data16
out
fst
ret
push
mul
popf
out
shr
sbb
push
mov
push
add
cmps
push
jge
and
jmp
inc
(bad)
leave
mov
fst
push
and
(bad)
retf
loop
loopne
mov
shr
shr
adc
lahf
outs
jne
cdq
and
mov
cmp
inc
inc
cmove
sub
cmp
add
mov
shr
repnz
ret
cli
cmp
mov
call
in
xchg
pop
js
(bad)
pop
imul
push
push
mov
add
sub
sbb
xor
and
arpl
ds
dec
mov
dec
dec
mov
sbb
sbb
add
jno
ins
inc
add
cmp
xor
mov
pop
retf
icebp
mov
xor
mov
out
ficom
push
push
scas
sar
jge
cmp
push
jp
and
icebp
sub
arpl
and
shl
and
or
push
bnd
dec
cmp
pcmpgtb
push
xor
(bad)
cli
mov
cwde
inc
xchg
mov
cmp
pop
enter
cdq
dec
xchg
jns
jo
dec
fadd
(bad)
jp
inc
dec
push
or
out
hlt
fist
test
pushf
bound
xor
xor
int
inc
lods
xor
jo
shl
mov
adc
mov
jl
fidivr
imul
fnstcw
adc
mov
je
jecxz
shl
cwde
cwde
add
aad
xchg
nop
ss
mov
mov
jbe
div
repnz
imul
push
in
push
jb
lods
call
adc
sub
leave
jb
pop
mov
movs
inc
push
popf
cmp
out
fdiv
inc
pusha
push
ds
mov
leave
shr
or
pop
mov
ror
adc
popa
cmps
into
mov
jmp
lock
or
and
mov
daa
mov
popf
xchg
sub
aaa
bound
sbb
(bad)
inc
aad
not
xor
outs
call
or
mov
out
dec
aam
jp
jge
or
sub
nop
daa
xor
jno
xchg
mov
and
mov
fist
sbb
(bad)
push
cmp
enter
scas
mov
cwde
add
cmp
shl
sub
das
xlat
jbe
and
mov
fxch
fdiv
sahf
adc
mov
mov
addr16
imul
outs
pop
add
cmp
sbb
scas
push
sub
cmp
xchg
ret
jge
pushf
test
jae
jo
adc
push
jmp
add
repnz
sub
cmp
xchg
fistp
(bad)
data16
iret
mov
in
lock
push
xor
rcl
pusha
icebp
push
loop
sbb
rol
push
repz
ins
mov
xchg
fadd
jno
mov
clc
aad
mov
hlt
fist
nop
repnz
mov
add
jl
daa
dec
adc
adc
jg
leave
ret
adc
(bad)
and
ins
jns
adc
jmp
mov
inc
test
fnsetpm(287
inc
(bad)
retf
push
xchg
cmp
xchg
aas
sahf
add
adc
pop
xchg
loopne
xor
xchg
mov
test
dec
push
cmp
mov
jecxz
cmp
cmovb
outs
inc
in
xor
rcl
ud2
leave
dec
adc
xor
mov
xor
and
adc
shl
mov
cmp
pop
dec
(bad)
je
in
int
push
nop
mov
cmp
inc
out
mov
add
jle
cmp
adc
dec
(bad)
fyl2xp1
loop
mov
(bad)
(bad)
out
call
scas
(bad)
cmp
test
fdivr
das
sbb
or
xor
fcmovnu
or
mov
inc
outs
push
aas
inc
fdivr
punpckhdq
inc
push
and
jg
cli
xchg
(bad)
mov
and
sbb
xchg
scas
pop
(bad)
sar
cs
cs
scas
cmp
cld
stos
dec
fdiv
cs
mov
popf
cmps
(bad)
pop
cdq
(bad)
aad
cli
retf
daa
pxor
mov
ret
mov
mov
inc
dec
out
outs
ficomp
or
test
adc
and
add
clc
and
add
push
test
fcmovbe
adc
xlat
inc
das
xchg
inc
or
mov
pusha
xchg
push
rcl
xchg
jno
sti
mov
mov
pop
outs
jle
popa
mov
lsl
div
lods
xor
iret
movs
jge
retf
imul
inc
pop
and
xor
pop
cs
outs
add
out
cli
loope
jno
sub
jge
push
mov
js
mov
mov
out
mov
jne
stc
rcr
adc
and
cmc
xor
pop
cdq
or
int3
mov
and
mov
push
inc
je
inc
push
inc
mov
push
loope
mov
push
push
cmp
test
xchg
sahf
add
or
jns
xlat
push
mov
cmc
enter
ja
clc
mov
adc
sbb
aam
loop
sbb
cmp
sub
std
into
jnp
scas
mov
pop
fbld
cmp
sub
jne
iret
lock
inc
cli
mov
sahf
sbb
jg
inc
ds
adc
dec
lods
inc
inc
adc
sub
rcl
jmp
mov
push
fisubr
and
inc
pop
xchg
scas
into
jg
pushf
stos
cmps
fs
xchg
lods
and
or
shr
mov
xchg
fisttp
fild
shl
loopne
xchg
sub
xor
stc
and
hlt
jb
mov
jg
xchg
addr16
bound
scas
leave
mov
js
mov
mov
adc
gs
pusha
jmp
ins
jp
pop
ds
push
mov
out
sub
add
sub
(bad)
in
mov
je
lods
jnp
dec
(bad)
sub
movs
outs
fcom
adc
mov
mov
fist
les
mov
test
aas
xchg
mov
ss
mov
xor
push
jmp
or
fs
mov
and
nop
or
scas
push
dec
leave
mov
push
mov
xor
cmovno
jmp
jne
xchg
pop
les
pop
fld
jg
int
cld
sub
out
aas
or
cmp
(bad)
adc
rol
mov
push
out
das
shl
mov
(bad)
dec
imul
inc
or
sti
ja
cld
test
pop
lahf
not
cwde
mov
ss
adc
xchg
gs
icebp
sub
inc
sub
cmp
popa
push
mov
cmp
bound
movs
retf
sbb
aas
aaa
out
out
outs
clc
pusha
and
pusha
lods
add
fadd
push
in
pop
in
daa
cwde
mov
sub
aas
sub
mov
(bad)
pop
mov
imul
add
cmp
ret
mov
pop
in
or
cld
std
gs
add
mov
xchg
inc
mov
push
jne
jmp
push
test
pop
xor
xchg
inc
fld
push
or
mov
adc
adc
aaa
mov
mov
rcl
fdiv
pop
into
xor
aad
mov
jmp
xor
jmp
retf
hlt
jmp
call
cmp
mov
and
retf
mov
out
enter
stos
jle
sub
dec
adc
call
stos
movs
push
dec
mov
clc
into
adc
xchg
xlat
mov
fsubr
add
or
inc
jp
fisttp
sbb
inc
jmp
aad
int3
xor
ret
sbb
xor
call
jo
jns
in
add
xor
(bad)
movs
xchg
sti
pop
or
dec
pop
push
cmps
mov
into
lahf
and
mov
jnp
sub
dec
sbb
jmp
push
data16
jge
repz
rcr
mov
and
inc
add
dec
nop
fsubr
(bad)
adc
push
mov
cmps
xchg
sub
je
jno
out
xchg
pop
lock
(bad)
out
push
cmp
vpmadcswd
jmp
mov
(bad)
sar
mov
test
test
xlat
inc
add
dec
ins
and
dec
mov
in
jne
iret
cmp
(bad)
mov
jmp
imul
nop
dec
jno
sub
sub
(bad)
mov
(bad)
out
push
push
int
add
mov
aas
(bad)
sub
test
aad
mov
sti
retf
mov
(bad)
push
popa
test
mov
mov
bound
xor
pop
and
aam
ds
or
scas
inc
cmps
call
add
push
jb
call
xchg
stc
sar
aaa
pushf
sub
xor
cs
xor
jge
test
test
push
std
adc
fstp
cmp
shl
pop
lock
jp
aas
jb
fist
xor
mov
dec
in
mov
adc
mov
call
into
ds
lahf
cmp
cmp
push
and
cmps
or
(bad)
adc
pusha
scas
xchg
cmp
repz
cmps
in
jge
pop
push
(bad)
sti
cmp
out
fimul
mov
(bad)
in
dec
pop
lahf
jmp
xor
and
scas
xchg
push
data16
bound
fisub
mov
jbe
and
dec
test
in
mov
xchg
mov
ins
pushf
in
ss
dec
mov
lock
xchg
mov
cwde
jmp
out
pop
xor
and
daa
mov
dec
fwait
movs
ss
cwde
inc
neg
retf
adc
cdq
sub
and
js
xchg
jge
inc
add
mov
fxch
sub
xchg
retf
shl
rol
aad
inc
pop
pop
cmp
xlat
rcl
add
push
lods
push
xor
movs
dec
nop
jle
cmp
fcom
xor
and
popa
xchg
sub
imul
loopne
and
ret
les
cmp
in
in
iret
jns
mov
iret
stc
and
(bad)
aad
out
or
xlat
sub
cwde
adc
mov
bound
adc
clc
push
xchg
shl
imul
cmps
mov
mov
das
jbe
dec
push
cdq
dec
jle
shl
xor
shr
cmp
add
mov
aas
add
cs
adc
jp
push
ja
mov
fldenv
fwait
arpl
xor
xor
rcl
xchg
in
jmp
mov
pop
rcr
addr16
mov
lock
in
jb
push
repnz
(bad)
sbb
fld
sub
and
pop
movs
(bad)
mov
fstsw
mov
imul
cmp
retf
push
jl
lock
stos
cli
jbe
lods
mov
movs
out
(bad)
dec
outs
aam
xor
mov
dec
retf
lea
mov
push
lods
mov
mov
fsubr
test
sbb
push
or
outs
retf
jl
mov
xchg
cmp
push
rcr
push
stos
mov
mul
fimul
sar
(bad)
leave
shl
out
mov
jnp
bound
add
or
mov
retf
into
retf
hlt
cmp
push
stos
push
xchg
or
inc
push
stos
(bad)
test
dec
ret
xor
sub
xchg
rol
neg
add
fwait
das
call
add
cmp
jae
hlt
loopne
sbb
pushf
out
cmp
out
int
lahf
cmp
mov
pop
(bad)
in
push
repnz
xor
into
or
jb
inc
mov
pop
movs
cmp
fcom
aad
and
cs
retf
lods
pusha
or
push
dec
(bad)
fisttp
pop
aas
xchg
or
lahf
cmp
inc
mov
repz
push
and
or
ins
push
adc
imul
adc
mov
jns
jb
push
aaa
fstp
lock
in
add
rcr
jne
sbb
pop
shl
add
or
orps
imul
and
push
dec
ror
retf
test
push
mov
out
int
movs
(bad)
popa
or
retf
dec
xor
adc
arpl
jg
inc
mov
mov
cdq
pop
fsub
fidivr
cli
mov
or
add
cmp
scas
test
pop
test
out
push
mov
jp
retf
hlt
cdq
jno
cld
xor
dec
inc
aas
jb
lahf
(bad)
iret
and
mov
pop
adc
dec
dec
pop
(bad)
in
push
(bad)
mov
je
retf
nop
push
and
repnz
or
jecxz
mov
jmp
sub
scas
cmps
mov
sub
ss
out
imul
rcl
call
xlat
sahf
mov
leave
repnz
(bad)
sbb
fisttp
jb
mov
mov
rcr
inc
pop
mov
jmp
fstp
mov
push
xchg
je
es
sub
adc
test
jbe
scas
ds
mov
jno
lods
std
repz
ins
es
je
inc
sub
iret
or
cmp
dec
sbb
adc
inc
push
mov
addr16
jle
cmp
xor
stc
or
adc
mov
test
xchg
into
xor
mov
nop
cwde
in
bound
fsub
or
sbb
mov
adc
jo
xchg
repnz
(bad)
(bad)
rol
shr
jo
mov
push
sbb
ss
scas
leave
adc
xor
out
jp
or
mov
jp
sub
jle
fs
inc
out
and
pop
(bad)
sti
and
pushf
mov
pop
sbb
add
sar
clc
ret
outs
(bad)
pop
fld
inc
imul
inc
jecxz
mov
sbb
mov
mov
jbe
fs
jge
loopne
int
mov
imul
and
adc
retf
dec
lea
(bad)
mov
add
popf
mov
jo
cmp
es
(bad)
sub
int
push
icebp
mov
psrlq
xor
(bad)
rcl
xor
mov
adc
ja
mov
dec
jmp
jmp
arpl
sahf
or
in
in
out
test
push
xchg
shr
pop
sahf
jno
sub
sub
adc
mov
jb
pop
les
push
(bad)
out
sbb
in
sub
adc
imul
sub
xor
ret
fcomp
xor
neg
nop
inc
in
cwde
dec
sub
push
in
adc
int
mov
inc
mov
shr
cmp
stos
xor
xchg
cmp
push
rol
aas
cmps
mov
and
adc
bound
pop
xchg
push
and
pop
xchg
stc
loopne
mov
sub
cmc
mov
push
cmp
test
jmp
dec
push
cdq
idiv
and
add
pop
and
pop
ds
cmp
sub
shl
stos
das
add
dec
mov
ror
pop
shl
push
mov
stos
(bad)
enter
retf
pop
xchg
test
sti
xchg
jmp
push
cmp
(bad)
int3
inc
out
test
fisub
cmps
call
stos
ds
repz
jmp
add
jle
leave
jae
mov
mov
mov
addr16
sub
pop
ror
push
fmul
push
gs
sar
pop
test
or
retf
(bad)
mov
mov
pusha
sub
fimul
ret
adc
pop
or
xlat
adc
mov
test
test
pop
daa
loop
fs
or
mov
retf
repz
test
pop
repz
mov
dec
std
js
push
mov
stos
jbe
sub
jbe
sub
cmp
pop
stos
dec
adc
xchg
ret
(bad)
and
sub
pop
push
cwde
add
fs
shl
mov
iret
lods
mov
and
jg
or
movs
jl
mov
mov
imul
js
or
mov
inc
sbb
cmp
pop
push
lods
ins
retf
stos
push
sub
pop
adc
addr16
xchg
xchg
inc
cs
jmp
hlt
(bad)
arpl
outs
push
stos
mov
mov
clc
mov
imul
dec
enter
jl
adc
sar
push
xor
add
maskmovq
idiv
test
and
mov
lea
daa
mov
aas
push
mov
push
mov
cdq
mov
aas
fcomp
xchg
sbb
data16
xor
mov
cmp
xor
(bad)
or
jnp
jbe
outs
inc
in
dec
dec
xchg
mov
sub
mov
or
mov
enter
pop
adc
(bad)
loopne
sbb
enter
mov
cmp
pop
pop
add
add
adc
inc
les
cld
enter
pushf
scas
cdq
mov
xchg
dec
iret
pop
repnz
inc
and
jle
test
jno
and
movs
adc
adc
pop
aad
push
and
lds
xchg
aad
les
pop
pop
repz
js
push
or
shl
int
fsub
(bad)
mov
pop
cmc
shr
adc
(bad)
mov
dec
call
test
inc
loop
hlt
and
cdq
mov
push
inc
in
add
sub
and
ret
push
clc
add
sub
dec
bound
leave
dec
lods
lods
and
xchg
mov
mov
adc
inc
xor
scas
mov
and
mov
sub
std
jl
pushf
inc
aad
xchg
adc
pop
dec
mov
shl
jne
adc
cmp
vdivsd
cmp
outs
sbb
jo
fistp
inc
sub
dec
pusha
mov
cld
dec
out
dec
cmp
add
add
call
out
movs
cmp
mov
scas
(bad)
movs
scas
sub
retf
xchg
dec
pop
(bad)
jmp
fistp
das
mul
sub
popa
and
xchg
arpl
dec
sahf
jmp
mov
stc
test
ins
pop
jmp
or
loop
sbb
or
inc
push
cmp
test
pop
lock
jecxz
and
fs
cld
jno
and
sahf
adc
sbb
jge
test
in
sbb
push
cmp
jmp
ins
test
xchg
cmps
les
repz
sub
jns
add
jmp
fs
stos
xchg
xchg
jle
xchg
int
int3
xor
push
adc
dec
bnd
mov
and
setle
pop
xchg
hlt
jl
out
fld
xor
or
outs
shl
inc
scas
jge
sbb
mov
(bad)
pop
stos
lds
mov
aad
ins
scas
std
xor
ret
stos
push
scas
inc
xchg
test
movs
or
(bad)
dec
pop
jo
and
or
leave
jmp
adc
dec
fs
out
out
xlat
repz
pop
push
mov
aad
lds
lahf
sbb
sub
in
lock
mov
or
popf
or
xor
xor
push
inc
jg
add
sbb
xchg
outs
sub
(bad)
dec
push
ja
or
fisttp
pop
test
pop
jp
inc
mov
cmp
je
in
jno
push
js
xchg
cmp
fstp
popf
and
xor
push
push
jne
in
pop
fdivr
sti
mov
pop
jae
push
push
mov
adc
or
mov
js
clc
retf
mov
or
ret
dec
fistp
int3
add
xor
arpl
gs
dec
scas
pop
inc
sbb
(bad)
in
mov
push
pop
shl
push
xchg
jae
stos
sbb
daa
jnp
mov
xchg
add
jb
cmp
xor
call
sar
adc
sbb
movs
(bad)
ins
inc
cmp
mov
jno
push
mov
jns
jo
ret
ficomp
fs
ins
pusha
int
push
mov
lahf
cmc
ss
jle
call
fcmovu
dec
lahf
inc
and
cdq
into
jge
mov
add
lods
dec
pop
xor
add
cmps
push
adc
scas
sbb
dec
xor
out
loop
xor
sbb
mov
mov
mov
cmp
lds
cmp
lahf
fsub
movs
jo
sbb
add
outs
pushf
(bad)
cs
and
xchg
jp
or
xor
imul
dec
mov
stos
sahf
jbe
inc
call
jge
inc
mov
jns
imul
mov
push
pushf
xor
ins
push
mov
mov
icebp
sbb
pop
sbb
cmp
lds
mov
jae
dec
std
sti
loopne
add
es
mov
sub
cmp
adc
cld
mov
xor
clc
mov
in
pop
(bad)
lods
and
dec
into
or
and
sbb
(bad)
imul
add
test
adc
lods
into
pop
or
pushf
adc
cmps
xchg
pop
repz
aam
xor
jmp
mov
jno
or
jno
cmp
ret
es
jp
popf
lock
add
lods
out
jb
imul
push
fwait
sub
mov
leave
not
loop
fild
mov
aas
cmp
test
fnstenv
jle
push
shl
loope
(bad)
jb
fld
xlat
add
call
pushf
stos
cwde
push
and
push
adc
add
loope
aad
cdq
jecxz
or
xchg
cld
nop
sub
mov
adc
loope
les
test
xor
add
shl
fs
or
mov
inc
jb
stos
jns
mov
jns
out
add
jnp
mov
pushf
icebp
adc
out
out
imul
dec
push
xchg
rcl
jmp
or
mov
call
ins
adc
movs
add
out
dec
stos
fs
inc
cmps
loope
sahf
repnz
jmp
cmp
stc
inc
call
cmp
mov
fisub
dec
sbb
std
pop
and
push
adc
mov
sub
pop
test
inc
movs
loop
pop
xchg
daa
rol
imul
jb
rcr
in
dec
es
jno
repz
dec
pop
sbb
shl
lods
pop
sbb
pushf
jge
pop
xor
sub
mov
or
fsubr
push
jb
mov
or
and
mov
jmp
jns
test
fstp
xor
call
out
or
push
jo
(bad)
in
pop
js
xchg
sbb
clc
inc
fisttp
sbb
fs
cwde
movs
inc
dec
jmp
sahf
in
fsub
push
xor
sahf
mov
inc
cmp
sar
scas
loope
test
mov
pop
rcl
push
sbb
scas
push
sbb
cmp
and
sub
mov
data16
cmp
mov
inc
mov
pop
inc
sbb
cmp
bound
sar
mov
mov
dec
mov
push
in
and
js
pop
xchg
and
mov
fwait
pop
or
jp
popa
sbb
repz
dec
pop
cdq
sub
cmps
add
fwait
dec
adc
test
push
pop
jl
jge
sbb
push
cli
cmp
stos
mov
(bad)
fdivr
test
xor
cmp
int3
ins
adc
xchg
mov
xlat
sub
loopne
mov
inc
pop
cmps
(bad)
scas
es
and
or
jmp
jl
ss
stos
dec
inc
xlat
and
mov
fild
ror
cs
pop
mov
data16
adc
outs
inc
dec
int3
popf
in
ss
xchg
cmp
mov
in
jae
cs
and
pop
pop
mov
mov
jo
jo
pushf
neg
ss
jns
inc
jle
jl
out
pop
xchg
ds
jle
mov
dec
xchg
cmp
mov
inc
std
or
push
pop
jo
(bad)
shl
scas
fild
iret
(bad)
pop
ins
fsub
adc
push
mov
shl
sbb
pop
inc
loopne
add
js
and
cmps
cwde
xchg
ss
add
les
popa
test
int
xor
push
ds
inc
(bad)
pop
cld
mov
dec
das
mov
inc
dec
in
out
pop
pop
das
pop
sub
mov
and
in
mov
xor
mov
mov
sub
jl
push
sbb
jnp
iret
jle
out
and
scas
es
sub
jo
pop
pop
adc
(bad)
(bad)
push
test
pop
add
mov
pop
mov
test
ins
div
sti
sbb
xchg
xor
mov
aam
(bad)
clc
rol
cmp
dec
bound
(bad)
(bad)
mul
(bad)
fist
inc
mov
retf
test
pop
inc
adc
fbstp
xchg
add
pop
sub
arpl
xlat
int
mov
jle
mov
push
mov
mov
mov
sti
inc
inc
div
into
adc
jbe
retf
pop
mov
push
aad
popf
iret
push
ins
(bad)
rcr
jp
xor
pop
push
mov
mov
call
jae
and
lods
ds
push
add
mov
movs
aad
out
inc
cmp
jge
bound
mov
retf
stos
(bad)
push
sbb
daa
fstp
in
rcl
call
lds
jnp
scas
inc
xchg
inc
in
(bad)
scas
in
jp
sub
in
xor
fldlg2
xchg
and
mov
sbb
call
or
jle
xchg
es
je
in
nop
xchg
iret
pop
idiv
out
shr
das
movs
movs
jo
cwde
nop
jecxz
mov
and
sbb
fsub
mov
push
gs
adc
jge
dec
cmps
pop
sub
ror
loopne
fstp
ins
add
test
jbe
call
cmp
jmp
xchg
cmp
jp
or
add
jns
pop
push
loop
enter
pop
fnstcw
dec
push
test
mov
fild
sbb
push
mov
mov
mov
movs
sbb
xchg
add
out
inc
xlat
and
popf
lods
cmp
jmp
mov
cmp
enter
sub
leave
or
push
xchg
int3
pusha
rcr
ds
into
sbb
in
popa
scas
and
retw
movs
mov
ins
sub
adc
fld
mov
lea
cdq
jecxz
jmp
sahf
add
fidiv
es
mov
les
dec
xchg
fsub
aaa
cwde
test
fstp
mov
pop
dec
mov
aas
es
leave
sub
sub
pop
jge
xchg
xor
sbb
and
sar
and
jo
xchg
sar
scas
cmp
xlat
in
addr16
sub
pop
push
xor
mov
xor
loop
mov
pop
xchg
mov
push
mov
push
mov
mov
mov
movs
shr
cmps
and
sub
mov
test
cmp
jns
es
mov
cs
in
adc
in
mov
mov
icebp
jne
xchg
psubw
adc
sbb
adc
aas
and
mov
sbb
add
dec
in
bound
sub
mov
adc
pop
pop
fild
into
(bad)
or
jno
and
or
mov
cmp
and
lock
dec
cmp
adc
mul
or
fucomip
mov
in
sbb
mov
inc
adc
call
dec
mov
jbe
mov
inc
cdq
push
and
repz
adc
sti
shl
cdq
outs
cmp
arpl
pop
hlt
scas
xor
jnp
mov
inc
dec
jb
cld
pop
dec
sahf
repz
call
mov
add
jae
inc
add
fst
push
in
mov
mov
mov
repnz
bnd
dec
sti
enter
retf
leave
jmp
mov
sbb
call
(bad)
jb
ss
das
and
push
inc
aaa
add
jecxz
push
mov
aas
dec
inc
add
jge
test
ss
jbe
rcl
jmp
das
out
push
mov
adc
ucomiss
pop
popa
(bad)
cmc
movs
dec
mov
(bad)
mov
dec
sbb
mov
mov
shr
dec
arpl
dec
xlat
sub
pop
inc
les
mov
loopne
retf
pop
push
push
pop
rcl
xchg
out
mov
and
sbb
sbb
shl
mov
push
jge
test
mov
sbb
add
cmp
jl
xchg
jnp
das
mov
ret
xchg
cmps
ret
adc
xor
mov
push
fcomp
push
in
and
popf
jo
add
sbb
sub
mov
sub
loopne
mov
aam
ss
sbb
(bad)
push
sbb
je
jae
mov
fimul
mov
sbb
imul
mov
or
scas
ror
jg
repnz
repnz
dec
retf
fldenv
sub
out
pop
les
adc
inc
cmp
mov
push
sahf
mov
fdiv
cli
rol
push
mov
or
sbb
fld
cmp
call
add
loopne
adc
adc
retf
ds
sub
adc
push
ret
pop
stc
pop
scas
shl
xor
inc
sub
jecxz
push
jns
in
data16
cmp
fninit
and
data16
xchg
xor
jle
and
pop
leave
mov
arpl
pop
lea
add
cmps
out
lea
(bad)
int
jbe
push
mov
pop
xchg
clc
(bad)
cmp
fist
push
dec
adc
mov
adc
xchg
mov
scas
stos
loope
sbb
sbb
fimul
jmp
or
(bad)
push
ret
and
push
add
dec
out
dec
pusha
mov
cli
cmp
push
mov
int
ss
jecxz
stos
cmp
dec
inc
in
ret
xor
pop
and
mov
mov
in
dec
xor
in
inc
push
iret
pop
inc
out
pop
xchg
xor
mov
aaa
(bad)
xchg
in
pop
xor
push
scas
inc
out
and
fisub
jmp
int
adc
add
aas
pushf
and
data16
pop
in
mov
dec
icebp
int
je
lods
sbb
sub
add
and
outs
or
int
iret
clc
jecxz
adc
xor
and
cmp
and
pop
xor
jnp
jp
rcr
sahf
pop
and
mov
fidiv
loop
shl
mov
arpl
fld
scas
inc
aaa
push
dec
push
and
xchg
xor
adc
std
ja
dec
inc
test
cmp
push
clc
jmp
cmp
mov
(bad)
jecxz
push
ror
pop
ret
sar
sbb
xchg
ss
lahf
xor
jp
lock
pop
adc
jo
and
push
repz
or
in
pop
icebp
out
mov
(bad)
xchg
ret
out
pop
or
mov
shl
cwde
cmp
out
pop
pusha
jg
mov
and
push
lahf
inc
mov
mov
pushf
pop
jno
dec
mov
mov
mov
adc
icebp
scas
(bad)
bnd
xchg
inc
mov
cmp
adc
dec
mov
(bad)
repz
rol
cmp
mov
imul
mov
xchg
jmp
mov
push
inc
in
mov
ins
popa
mov
test
outs
out
sub
out
jle
mov
fwait
retf
sub
fist
sar
addr16
push
movs
or
ror
fcomp
ins
icebp
mov
add
outs
lds
xchg
test
ret
(bad)
mov
xchg
jecxz
cmp
sti
add
xor
movs
jmp
push
xor
in
push
popa
shr
movs
pop
mov
add
test
dec
add
(bad)
lods
add
call
inc
cmp
sbb
rcr
mov
add
add
dec
scas
xor
imul
and
push
lods
loopne
mov
imul
imul
mov
push
adc
mov
fist
pop
lahf
cmp
cmp
pop
cld
es
fild
push
retf
sub
pop
jge
mov
enter
pop
imul
mov
jmp
adc
xchg
ficomp
push
out
sbb
lods
inc
jo
dec
jno
(bad)
push
mov
mov
loop
mov
jae
inc
dec
sub
ficom
push
or
outs
inc
and
xchg
jmp
not
sbb
stos
mov
int3
ins
ds
pop
retf
add
xchg
add
jmp
repnz
bound
push
adc
ficom
imul
mov
fisub
sti
pop
cmp
aam
sar
adc
aam
push
shl
pop
add
pop
and
imul
pop
jbe
std
(bad)
rol
cmps
cmp
pop
inc
mov
and
add
mov
je
lahf
fwait
cmp
xchg
sbb
jmp
push
mov
out
jae
mov
ins
popf
mov
dec
cmps
inc
test
dec
lock
pop
jbe
rcr
cdq
sti
sbb
imul
inc
cs
inc
imul
clc
int3
sahf
jae
inc
ja
into
lahf
cmp
xor
aad
mov
sbb
add
add
icebp
pop
push
clc
ds
test
push
pop
clc
fidiv
dec
inc
sub
cmp
fsubr
popf
adc
xor
(bad)
pop
cmps
xor
xchg
or
pushf
push
bound
loope
aas
cmp
idiv
inc
mov
push
ret
sbb
sub
inc
inc
test
push
sti
add
add
jns
rcl
pushf
push
leave
fbld
rol
cmp
jbe
ins
mov
xlat
sti
mov
in
adc
aas
inc
test
xchg
push
ins
pop
retf
inc
pop
jmp
jne
push
jge
in
(bad)
cmps
adc
les
add
jo
cmp
jg
aad
push
scas
mov
frstor
xchg
pop
jmp
push
jl
call
mov
pop
jns
and
cs
or
(bad)
loop
push
out
sar
ja
mov
or
pop
and
test
retf
sub
push
or
or
aaa
sbb
and
shr
push
leave
bndstx
ret
mov
clc
movs
xchg
adc
mov
hlt
stos
ror
sti
jmp
mov
rcl
int
pop
ja
mov
call
rcr
wbinvd
sti
add
aaa
fadd
repz
cs
jecxz
pusha
xchg
cmc
and
add
pop
jno
and
fwait
repnz
cmc
inc
es
cmps
jmp
xor
pop
mov
add
jmp
mov
cmps
or
fimul
jl
or
cmp
sub
iret
mov
in
je
jne
loopne
fs
pop
sti
mov
repnz
das
add
pop
or
and
jns
fld
loope
and
mov
int
dec
jge
cmp
lahf
mov
mov
(bad)
movs
sub
xor
aad
pop
push
mov
mov
mov
and
pop
(bad)
das
pop
xchg
or
fs
add
mov
je
sub
mov
add
sahf
cwde
xor
pop
stos
int
mov
fwait
pop
xchg
jo
fs
inc
stc
data16
sub
dec
jbe
xor
ror
movs
xchg
add
repnz
xchg
jne
cmps
fimul
dec
rcr
add
push
xchg
push
std
add
ins
cmp
mov
mov
mov
push
or
adc
arpl
mov
test
mov
cwde
imul
push
and
inc
sti
iret
aas
inc
inc
adc
aam
cdq
retf
jbe
repz
and
or
in
mov
xor
sti
ss
push
sub
xor
mov
push
dec
stc
xor
es
out
aas
mov
dec
ficom
nop
jbe
daa
js
sbb
lods
jge
adc
xor
lea
div
adc
mov
add
cmp
popa
stos
(bad)
or
jno
pop
add
pop
mov
cld
(bad)
ficomp
sub
push
mov
inc
sti
adc
leave
push
addr16
push
jmp
mov
outs
inc
fbstp
cmc
adc
sbb
add
dec
ins
sub
(bad)
ins
cli
ret
stc
lahf
cli
and
repz
not
loopne
fisttp
sub
mov
mov
dec
imul
(bad)
adc
sbb
retf
jmp
add
add
fst
into
das
and
jo
out
jae
jmp
iret
xchg
pop
pop
outs
ss
mov
je
push
(bad)
movs
fwait
mov
add
inc
or
test
push
enter
call
aas
xchg
jb
dec
jnp
jmp
sbb
mul
daa
pushf
xchg
imul
ret
push
aaa
adc
mov
(bad)
cs
in
nop
mov
fbld
(bad)
jo
imul
ret
sbb
sbb
xor
jb
mov
sub
call
xchg
mov
xchg
movs
shl
out
fyl2xp1
ret
jp
dec
cld
or
jecxz
(bad)
ret
mov
cmc
jo
xchg
aas
pop
clc
sub
push
mov
lods
jp
lds
int3
fcomp
cmp
sbb
test
sahf
ret
js
stos
ret
outs
pop
pop
aad
scas
jl
add
dec
or
mov
cmp
jns
xchg
fdivr
movs
xchg
in
cmc
sbb
push
and
and
add
xor
inc
xchg
mov
ds
sti
mov
loop
jb
cli
sahf
in
xor
out
fsub
mov
inc
adc
test
movs
shl
iret
mov
xchg
nop
jbe
hlt
ret
arpl
sbb
cmp
stos
mov
dec
rcr
mov
add
pusha
cmps
sub
lods
mov
mov
(bad)
mov
lods
dec
push
mov
nop
popa
scas
ss
les
pushf
sub
mov
xor
es
sbb
scas
rcl
cmp
ficom
sbb
loopne
xchg
add
imul
mov
xchg
shl
sub
push
sbb
repz
test
dec
push
ins
std
jae
push
jecxz
(bad)
push
sahf
movs
outs
mov
dec
cmps
cdq
inc
xchg
push
iret
mov
fidiv
fisubr
retf
aam
lahf
movs
add
retf
lods
mov
icebp
or
cmps
add
xchg
pminub
sbb
test
mov
or
lock
cmp
push
or
dec
dec
pop
pop
xchg
add
ss
jns
lahf
jl
jno
neg
scas
movs
push
or
jmp
xlat
out
lods
lock
adc
push
pop
or
fcomp
fiadd
fwait
xchg
in
loop
add
sbb
sbb
pop
mov
or
push
mov
imul
push
push
mov
adc
nop
jmp
cmp
fcmovu
mov
xchg
(bad)
xchg
jmp
and
xor
pushf
fs
xchg
hlt
retf
js
jae
pop
fwait
mov
mov
cmps
retf
stos
movs
jnp
jae
xchg
iret
es
rol
(bad)
fdivr
lea
dec
int
fcomp
call
aas
jmp
sbb
xchg
movs
stc
mov
jg
mov
hlt
pop
out
sub
jno
ja
xchg
rcl
mov
or
mov
retf
cmp
sub
mov
mov
inc
sbb
inc
cs
hlt
sbb
sahf
pop
movs
push
lea
mov
xlat
cmp
call
movs
call
in
lods
mov
ror
xchg
sub
jb
xchg
ror
pop
jecxz
outs
das
mov
addr16
movs
imul
pop
sub
pusha
in
xchg
dec
mov
jmp
mov
iret
mov
js
retf
mov
add
cmp
cli
inc
fdivr
ins
cmp
push
jno
jmp
push
push
gs
push
ins
ret
je
sti
cmp
mov
jb
(bad)
mov
scas
jae
rcl
in
mov
outs
jge
rcl
fdiv
imul
cmp
loop
in
push
xlat
cmp
push
inc
xor
std
(bad)
dec
jl
xor
mov
fidiv
ss
push
in
fidivr
sub
pop
mov
loopne
sub
arpl
std
loop
nop
js
fiadd
jnp
xor
das
and
xor
jns
xor
jle
je
and
nop
(bad)
cmp
lock
pop
xchg
test
mov
xor
or
ror
gs
and
stc
sub
clc
add
jno
xchg
(bad)
(bad)
jnp
(bad)
or
pop
and
mov
adc
test
cmp
fidivr
sub
cs
jae
sbb
das
(bad)
xchg
add
and
mov
mov
movs
mov
inc
xor
pop
adc
and
jmp
sbb
push
adc
outs
rcr
mov
clc
push
fsub
mov
push
xlat
neg
and
lods
inc
mov
add
enter
call
loop
sub
mov
add
sar
jo
mov
xchg
sbb
out
jne
push
add
push
inc
fsubr
out
push
nop
ss
cld
xchg
je
test
pop
test
sbb
(bad)
mov
adc
mov
and
pop
push
mov
dec
jecxz
adc
jmp
loope
call
ret
xchg
shr
or
xchg
xor
pop
xchg
dec
icebp
cmp
cmps
or
mov
mov
sbb
push
lock
inc
(bad)
fiadd
cmp
inc
push
cdq
out
mov
not
pop
cli
xor
stos
shr
je
sub
pushf
iret
and
mov
hlt
movs
jl
mov
nop
out
into
jmp
mov
sbb
and
jp
or
cmp
movs
loop
sbb
adc
mov
xchg
cwde
add
jne
loop
jno
push
jge
mov
jno
mov
int
ins
and
cmp
retf
gs
fs
fcompp
into
inc
jl
fs
xchg
sub
out
mov
push
movs
retf
adc
mov
cmp
push
sbb
fld
pusha
into
mov
mov
in
je
xor
in
mov
push
(bad)
into
out
ror
push
lods
adc
fbld
mov
dec
and
sbb
(bad)
pop
xchg
xor
push
ja
cmp
inc
out
xchg
xor
bound
int3
inc
jge
jecxz
or
mov
lds
dec
pushf
cwde
ret
fs
push
(bad)
cmps
mov
jns
loope
sbb
dec
stos
jp
push
scas
sub
popa
jmp
sbb
imul
xchg
xlat
aad
xchg
xor
adc
adc
mov
loop
js
xchg
cmp
pop
ret
inc
hlt
jo
dec
push
scas
pushf
push
cmp
mov
loop
mov
shr
pop
test
push
in
(bad)
mov
sbb
ds
jae
and
rcl
ins
and
stos
sbb
mov
pop
dec
shl
jmp
pushf
inc
jg
cwde
(bad)
outs
xor
inc
fld
cdq
retf
pop
ja
sub
jno
xchg
push
mov
jl
fcmove
cmps
dec
cli
ins
rol
sbb
jmp
gs
xlat
lds
or
paddq
in
add
aaa
pop
cmp
adc
and
jnp
je
or
pop
les
aaa
cmp
mov
sbb
addr16
sbb
pop
sbb
shl
or
fs
and
call
mov
mov
mov
jb
dec
bound
dec
loope
jmp
mov
and
and
push
movs
cmovs
aam
add
push
popf
jne
jl
push
push
cmp
arpl
pop
inc
loop
mov
jb
dec
fmul
js
or
sahf
mov
adc
push
inc
or
shufps
mov
les
ds
retf
in
mov
enter
xor
call
or
sbb
mov
sahf
lods
je
lods
add
jl
cdq
ficom
aaa
jb
push
in
mov
out
mov
movs
dec
dec
shr
push
inc
push
clc
lock
clc
mov
jp
mov
cmps
and
cdq
sbb
adc
jl
add
loope
not
cs
inc
mov
les
and
test
into
xor
pop
(bad)
xchg
out
sub
repnz
xor
sub
xor
sub
leave
sar
xor
loope
test
push
mov
mov
cmp
in
test
mov
in
xchg
jg
xor
fcomp
sti
mov
jg
sar
pop
mov
and
mov
(bad)
fcmovnu
fcomp
stc
js
cli
push
fist
jl
inc
push
jne
and
and
jp
dec
mov
cs
aaa
iret
inc
xor
es
sbb
adc
pop
fwait
test
loope
push
fdivrp
jle
popf
call
mov
jb
mov
ret
push
into
sbb
in
inc
aad
adc
push
cs
popf
cmp
sub
popa
jmp
pop
addr16
adc
pop
xchg
sub
imul
mov
icebp
xor
or
in
mov
add
add
(bad)
cwde
add
mov
sub
pusha
popf
(bad)
xor
retf
cmp
push
sbb
add
pop
mov
sub
or
neg
push
je
push
xor
jge
cmps
(bad)
fsub
mov
xor
push
add
dec
push
movsx
shl
fild
fiadd
gs
(bad)
adc
adc
mov
mov
cmp
or
ret
cdq
fsub
(bad)
in
mov
mov
pop
retf
jnp
jbe
sbb
cmp
scas
add
inc
push
sub
or
cmp
push
(bad)
or
pusha
rdtsc
push
lds
mov
lahf
jl
pop
mov
push
mov
or
lea
out
pop
lods
mov
push
adc
pushf
bound
shr
aad
in
cmps
adc
add
movs
jmp
sbb
or
cmp
and
and
push
stc
test
out
adc
mov
add
dec
push
xor
push
xor
sar
fdivr
adc
jp
hlt
or
in
out
inc
sub
icebp
cmp
and
mov
inc
fdivr
loope
jge
ja
dec
pop
ja
dec
inc
data16
pop
pop
or
icebp
push
jmp
loop
sub
and
out
add
dec
repz
popa
mov
rol
call
inc
push
sub
push
lods
shr
sub
outs
jp
xor
pop
push
push
icebp
hlt
(bad)
je
jo
(bad)
xchg
loop
or
popa
push
cli
add
mov
aam
cwde
ss
mov
lods
loope
xor
out
ret
sub
jmp
jg
jecxz
add
in
mov
and
add
popa
jp
jmp
outs
jno
cmp
jo
add
fsubr
xor
push
and
test
xchg
xchg
sahf
mov
arpl
shl
jne
jmp
fs
sbb
jl
jmp
mov
inc
je
push
mov
out
xchg
jle
leave
mov
push
in
movs
mov
ins
aad
fild
aas
add
retf
and
xor
out
xor
mov
mov
mov
push
pop
sub
mov
or
test
xor
nop
sub
bound
dec
ds
push
mov
repnz
in
ret
mov
mov
addr16
paddb
out
pop
icebp
mov
jo
inc
and
scas
pop
xchg
gs
xchg
ja
popf
dec
push
dec
adc
cmp
mov
dec
es
scas
mov
and
in
push
dec
cld
xchg
ins
retf
nop
xor
mov
pop
mov
sbb
loop
mov
sbb
popa
add
dec
loop
jne
mov
rcl
pop
push
xor
xchg
mov
mov
mov
popf
retf
jmp
movs
sbb
test
dec
or
and
int3
mov
xor
adc
test
loopne
aas
int
add
mov
outs
rcl
ja
aad
add
es
and
loope
and
aad
push
fcmove
add
lea
or
mov
xor
push
or
mov
jno
ret
push
push
(bad)
loopne
cld
in
shl
xor
mov
adc
(bad)
repz
int3
pop
das
dec
cmp
pushf
ja
xchg
lahf
(bad)
mov
sbb
es
imul
xchg
(bad)
call
add
in
in
jmp
and
xchg
push
xchg
add
mov
lock
out
data16
(bad)
push
cld
clc
pusha
cmps
sbb
fiadd
xchg
sbb
outs
xchg
push
jae
mov
out
gs
ja
mov
or
sbb
lds
nop
sbb
jl
lahf
push
dec
jg
retf
fimul
popf
mov
es
inc
jle
mov
sbb
sub
inc
cs
jbe
adc
leave
loope
xlat
icebp
fwait
aam
movs
std
shl
ins
les
mov
hlt
repnz
push
cmp
fcos
lds
sub
lock
in
ja
nop
and
sbb
out
xchg
cmp
dec
xchg
xor
popf
sti
cmp
push
ror
call
mov
inc
enter
outs
nop
loope
add
jb
adc
or
mov
jne
aam
jg
in
adc
(bad)
mov
rcl
xor
adc
loop
adc
inc
(bad)
push
push
imul
sbb
sbb
mov
test
mov
fucomi
pop
push
jno
jno
mov
inc
xor
inc
popf
lea
dec
xor
lods
lock
retf
out
fsubr
sbb
repnz
daa
stos
mov
or
xchg
ins
hlt
inc
mov
or
std
mov
mov
and
nop
leave
ficomp
add
xchg
adc
or
cwde
call
out
pushf
pop
ret
cmc
test
retf
imul
push
das
dec
sar
dec
arpl
shr
imul
pop
sbb
dec
lods
(bad)
mov
sbb
mov
pop
jecxz
es
not
je
out
or
jle
xchg
jle
push
jnp
cmp
xor
call
aad
inc
pop
dec
xchg
mov
sub
ja
in
(bad)
cmp
xchg
imul
stos
popa
sbb
dec
jnp
dec
mov
mov
es
sti
add
cld
ins
cdq
cmp
call
mov
ja
pop
call
jle
ja
dec
or
mov
dec
and
in
pop
pop
daa
ficom
dec
push
out
push
in
bndldx
jno
dec
sub
jns
ja
pop
js
xchg
pop
push
xlat
sbb
cld
mov
adc
leave
int
cdq
clc
cmp
pop
imul
jecxz
fnsave
pop
pop
and
push
mov
mov
dec
pop
pushf
aas
xor
sbb
test
rcr
xlat
sub
arpl
hlt
int
sub
les
jbe
stos
in
xchg
leave
stc
inc
jae
mov
test
sbb
je
xchg
and
mov
icebp
mov
or
loope
lods
pop
push
(bad)
shl
mov
fist
cmp
xor
pop
mov
dec
leave
movs
scas
loop
mov
cmp
jmp
fbld
cdq
in
push
sbb
call
push
mov
pop
push
xor
adc
scas
sar
xor
in
mov
xchg
sbb
mov
add
cmps
mov
gs
add
popa
stos
lods
sbb
mov
jb
sbb
lods
(bad)
and
jnp
imul
fdiv
out
lock
and
fisttp
mov
lods
hlt
bts
in
push
(bad)
sub
in
inc
jge
lds
inc
and
(bad)
or
aad
jle
scas
rcl
add
aaa
jmp
adc
movs
mov
fucomi
sti
movhps
cdq
in
loope
iret
sti
sub
pop
sbb
std
push
jle
push
inc
add
les
loop
fldenv
pop
gs
out
pop
and
xchg
sbb
mov
adc
xchg
pop
fisubr
add
fild
ins
(bad)
rcl
sub
push
xchg
arpl
add
cdq
add
push
pop
push
stc
int3
into
dec
ret
call
retf
pop
push
leave
in
jecxz
test
fnstsw
sub
xchg
rdtsc
inc
mov
inc
rcr
jbe
adc
pop
sahf
xchg
or
mov
out
out
lods
in
in
cmp
leave
mov
clc
jo
pop
jecxz
out
je
hlt
add
frstor
mov
lods
push
call
loopne
pop
sahf
call
repz
popa
stc
repnz
mov
ins
mov
call
sub
loop
push
in
lahf
pop
outs
adc
aas
std
xchg
shl
mov
dec
mov
and
adc
stos
arpl
ret
xor
in
add
inc
fs
(bad)
loope
add
loop
into
outs
out
jg
sbb
lods
pop
outs
adc
hlt
add
les
jno
pop
ret
int3
mov
es
js
repz
jmp
pop
xchg
cwde
and
sbb
cld
sar
lods
sti
out
in
mov
xlat
mov
sub
jl
jle
leave
mov
enter
pop
and
cmps
and
(bad)
fcomp
(bad)
mov
sbb
push
pusha
mov
inc
sub
adc
lods
fsubrp
lea
dec
movs
cmp
call
inc
sbb
je
(bad)
cmp
pushf
es
mov
mov
(bad)
sahf
icebp
add
ja
dec
fldcw
clc
ret
inc
cmp
add
test
or
pop
fist
xchg
int
(bad)
xor
mov
ins
scas
lods
jnp
jmp
into
dec
jle
adc
aad
iret
xor
cmp
cmp
dec
mov
in
push
call
mov
les
clc
cmp
push
cwde
gs
xor
daa
mov
adc
mov
push
hlt
outs
mov
add
fxsave
ret
pop
shl
int
bound
cld
scas
mul
in
mov
pusha
pushf
ret
(bad)
mov
cmovl
add
xchg
test
push
test
xchg
push
jge
es
pop
nop
(bad)
hlt
adc
cdq
sbb
mov
xlat
gs
jecxz
iret
sbb
aam
stos
pop
es
out
repz
fcmovne
es
mov
hlt
cmp
nop
retf
mov
jmp
daa
mov
xchg
cld
rol
mov
mov
loopne
xchg
inc
adc
or
jnp
(bad)
sub
lods
daa
pop
cld
or
sti
push
add
cmc
xor
cmc
rol
mov
pop
and
inc
jmp
daa
hlt
test
ror
repnz
(bad)
pushf
xor
adc
outs
mov
rep
outs
repnz
cmc
dec
jno
fiadd
ss
push
movs
push
push
fcomip
inc
and
push
pop
dec
jge
test
mov
test
adc
daa
fldcw
xchg
pcmpgtd
push
adc
add
inc
sub
pop
sbb
xchg
sar
xchg
mov
out
pushf
or
mov
arpl
inc
out
add
or
js
je
nop
aas
mov
mov
into
lods
sub
scas
std
mov
pop
test
hlt
into
inc
and
jl
popa
sub
fwait
pop
movs
mov
push
adc
cmc
mov
mov
stos
jbe
push
push
loope
test
pusha
std
pop
cmp
adc
pop
test
jmp
adc
jmp
scas
sbb
mov
das
cmp
cli
push
dec
repnz
inc
sub
loope
jecxz
addr16
int3
stc
cdq
sub
cmp
repz
mov
scas
mov
xchg
or
ins
mov
jno
mov
jne
rol
adc
aam
hlt
gs
int3
jle
push
adc
int3
pop
dec
sti
hlt
dec
cmps
inc
mov
or
(bad)
stos
lock
dec
das
pop
pop
das
ficomp
leave
stc
add
stc
add
mov
mov
(bad)
push
pop
stos
cld
rcr
sub
xchg
mov
push
dec
xor
ja
cmps
mov
into
mov
and
sbb
dec
adc
mov
iret
mov
ret
add
cmps
shl
icebp
mov
retf
xchg
nop
add
popf
and
ret
mov
mov
into
test
enter
popa
jmp
push
lds
pop
mov
cmps
(bad)
jmp
mov
mov
idiv
mov
sahf
add
or
sbb
sbb
test
xor
adc
mov
fs
mov
stc
xor
pusha
xchg
sbb
push
or
daa
pop
fdivr
in
ret
fdivr
sub
test
(bad)
mov
pop
ror
icebp
retf
mov
pop
adc
mov
movs
mov
bnd
mov
sbb
mov
test
cwde
sub
call
ja
retf
das
dec
pushf
push
ret
mov
xor
jmp
aad
sub
or
dec
jecxz
xchg
cmp
jno
aas
enter
out
fiadd
xlat
in
push
pop
addr16
int
ficom
call
retf
cmp
fld
jnp
push
(bad)
or
icebp
mov
or
test
lds
add
xchg
cmp
inc
in
push
push
jge
nop
and
adc
mov
stc
add
jmp
(bad)
jg
push
pop
vmovdqa
(bad)
int3
aas
or
sub
in
aad
mov
mov
mov
inc
dec
jmp
or
xchg
sub
pop
sbb
shl
mov
popf
jg
les
cmp
call
jae
movs
push
cmp
mov
cld
sti
int
pop
sbb
dec
bound
jecxz
sbb
dec
cmps
push
jo
xor
cwde
mov
sbb
dec
mov
mov
(bad)
retf
daa
sar
ins
pop
pusha
dec
adc
enter
popa
xchg
xor
mov
int
je
imul
mov
out
pop
sbb
inc
outs
push
jbe
shl
retf
fwait
inc
mov
add
and
jmp
mov
or
out
cmp
jnp
arpl
sbb
adc
ins
ss
imul
jmp
dec
cmc
adc
aas
push
lahf
ret
xchg
daa
ret
xchg
and
or
imul
xlat
cld
jno
loopne
mov
stos
xchg
dec
mov
xor
or
sub
add
sbb
ja
repz
inc
(bad)
lea
jge
push
shl
lea
stc
or
pop
in
dec
xchg
in
in
ins
xor
pop
push
dec
mov
call
pusha
imul
stos
call
cmp
leave
out
pop
ds
xor
mov
adc
adc
jg
stos
push
loope
and
cmp
lds
sub
push
jmp
out
adc
lods
les
jo
dec
xlat
push
xor
leave
cwde
mov
mov
jecxz
cmp
scas
cld
pop
pop
or
dec
fist
std
jns
into
sbb
xchg
sbb
outs
das
std
aas
push
mov
mov
mov
lods
xchg
cs
inc
stos
call
sbb
jmp
sti
in
lea
push
loopne
inc
sub
imul
outs
cs
push
mov
in
add
retf
jp
nop
xor
ds
push
push
adc
mov
scas
lods
into
xor
cmp
xchg
ret
shl
out
sar
hlt
arpl
outs
xchg
jmp
je
sar
das
out
shr
jo
std
jbe
jmp
sbb
pop
pop
hlt
lods
xchg
cli
cmc
and
inc
jle
fbstp
jmp
dec
pop
add
mov
cmp
imul
fs
movs
inc
rol
mov
imul
xchg
inc
push
fsubp
add
test
push
fiadd
(bad)
xchg
add
sub
ret
(bad)
mov
pusha
loopne
not
loopne
adc
inc
ja
mov
and
(bad)
mov
lods
fisub
(bad)
mov
sahf
iret
aad
dec
stos
mov
or
push
call
push
add
jbe
add
je
pop
push
cmp
pushf
xchg
gs
xor
stos
cmp
or
jmp
dec
mov
cdq
ret
icebp
pop
int
xchg
into
ror
(bad)
xor
lods
cdq
dec
or
fldcw
inc
push
call
mov
cmp
adc
adc
ret
mov
addr16
cmp
movs
rol
idiv
add
sar
rcr
jge
xor
stos
xchg
xchg
in
mov
xchg
pop
aad
sbb
inc
adc
pop
mov
add
dec
or
xchg
outs
test
jno
mov
stos
lock
pop
mov
sbb
add
dec
mov
hlt
sar
adc
adc
dec
arpl
int
fsubr
imul
imul
or
xchg
inc
and
(bad)
ds
in
fimul
and
es
dec
(bad)
mov
out
scas
add
loopne
xlat
ret
fstp
lock
mov
inc
jns
xlat
jmp
xchg
pushf
jmp
adc
imul
and
outs
mov
sbb
test
out
dec
or
(bad)
test
dec
mov
ret
int3
imul
cmp
mov
jmp
or
jge
aam
push
xor
fnstenv
pushf
in
jp
pop
icebp
bound
mov
je
retf
sub
loop
adc
mov
pop
xchg
lea
outs
fcmovbe
jb
retf
inc
(bad)
pusha
pop
xchg
dec
or
inc
repz
lods
dec
cmp
lods
into
movs
xchg
add
pop
dec
dec
jne
(bad)
(bad)
ret
fsubr
leave
call
cmp
mov
repz
adc
sbb
inc
call
xor
cmp
imul
mov
leave
ja
push
cmc
pop
mov
cld
pop
cmps
push
in
repnz
movs
cmp
and
les
shl
adc
loop
imul
or
into
inc
dec
mov
add
xor
addr16
sub
cli
(bad)
addr16
test
daa
int
aad
ffree
cmps
push
adc
mov
dec
or
add
aas
cld
out
and
push
and
sbb
jns
fsub
dec
ret
mov
outs
adc
mov
mov
ins
outs
add
rcr
or
inc
mov
lds
(bad)
inc
in
(bad)
pusha
and
mov
adc
xchg
das
sahf
sbb
nop
aam
jg
sbb
or
sub
imul
stos
mov
adc
mov
retf
test
inc
jae
rcl
mov
ss
xlat
mov
pop
loop
cs
ins
(bad)
push
cwde
push
pop
dec
loopne
push
les
xchg
push
push
ja
pop
jb
rcl
jl
out
add
inc
movs
ins
cmp
sub
sbb
push
into
div
iret
cli
inc
push
push
hlt
jmp
mov
and
jecxz
adc
nop
xchg
or
jge
mov
jns
jecxz
pop
test
push
or
adc
mul
and
(bad)
div
xor
xor
repz
sub
(bad)
jb
cs
mov
fs
rcl
sbb
push
iret
outs
mov
add
xor
jnp
push
popf
fwait
cmp
inc
mov
or
inc
movs
cmp
(bad)
in
into
add
xor
and
mov
movs
(bad)
pop
sub
in
xchg
xchg
int
xchg
mov
call
xchg
into
cdq
adc
lds
das
(bad)
mov
fnstenv
xor
outs
(bad)
mov
pop
sub
mov
les
mov
(bad)
sahf
mov
add
ja
fstp
cwde
mov
sti
push
fxch
mov
adc
mov
sbb
arpl
fild
sub
mov
jo
bound
ins
call
or
shr
pop
fxch
jecxz
or
sbb
sar
out
inc
neg
and
xchg
mov
jge
mov
mov
js
dec
jecxz
pop
out
enter
movs
out
jnp
scas
pop
xchg
pop
mov
pop
lods
pop
scas
fld
xor
xchg
xor
scas
out
pop
outs
es
scas
hlt
push
and
mov
pop
mov
sub
jbe
in
and
jbe
in
test
hlt
nop
mov
push
ficom
sahf
cdq
mov
aam
movlps
addr16
test
clc
shl
test
xchg
fisub
fmul
mov
dec
mov
stos
mov
icebp
out
leave
stc
gs
ror
repz
inc
daa
cmp
enter
leave
and
stos
(bad)
ja
loopne
mov
push
loop
into
dec
dec
xor
and
cmps
adc
inc
jno
aas
ficomp
jno
stc
pop
sbb
jecxz
sbb
sbb
sub
arpl
jae
mov
xchg
pop
leave
sub
and
mov
shl
mov
xor
inc
inc
xor
sub
sub
aas
scas
stos
repnz
cwde
call
pop
in
inc
adc
xor
jnp
iret
shl
adc
shr
jg
in
mov
mov
aam
and
mov
retf
test
test
sub
or
fwait
pop
fsub
mov
je
inc
dec
leave
int3
push
outs
mov
push
shl
(bad)
movs
dec
lahf
inc
mov
daa
adc
loopne
sub
ins
inc
adc
pop
xor
add
pop
adc
pop
add
shr
lahf
sar
cmp
jle
out
nop
retf
cdq
aaa
(bad)
cmp
push
mov
push
push
mov
dec
add
push
pop
arpl
pop
je
shr
mov
adc
iret
cmp
jmp
pop
xchg
xchg
xchg
push
mov
mov
or
and
pop
mov
pushf
xchg
pop
cmp
fs
lods
inc
movs
dec
push
out
adc
js
pop
sbb
dec
or
retf
js
sar
mov
enter
out
das
or
icebp
xchg
in
pop
and
dec
arpl
cmp
test
scas
add
cmps
mov
out
and
jl
mov
jbe
xchg
sub
ror
sbb
adc
test
lods
ss
outs
dec
sbb
je
pusha
ins
mov
jg
cmc
sub
push
mov
out
data16
jo
mov
(bad)
xor
adc
sub
jle
ins
aas
ins
inc
jnp
mov
clc
inc
mov
stc
mov
xor
outs
imul
movs
lods
jmp
mov
or
xor
add
stos
push
fcomp
aad
lfs
daa
sub
stos
out
imul
daa
pop
inc
jecxz
rcl
dec
inc
add
nop
mov
xchg
or
out
js
sbb
shl
repz
outs
fsub
xchg
push
xlat
push
test
mov
and
aam
inc
push
sub
fisubr
in
fistp
pop
xchg
mul
and
stos
jbe
and
lods
dec
add
dec
loopne
jle
out
(bad)
iret
and
xchg
mov
mov
sub
sbb
shl
mov
jo
cmp
pop
(bad)
(bad)
gs
pushf
cmp
adc
mov
popf
sbb
sbb
add
test
mov
jmp
jae
ins
je
das
mov
adc
rol
mov
nop
inc
mov
inc
xor
idiv
leave
call
mov
cmp
jp
retf
retf
jmp
add
sub
inc
add
fdivr
jnp
cmp
mov
out
rol
jmp
sahf
inc
lahf
mov
mov
out
sub
aas
imul
push
sub
xchg
mov
mov
jmp
pop
fisttp
iret
sbb
inc
not
push
fwait
nop
mov
jae
xchg
push
fld
dec
mov
loop
jns
cdq
add
cmp
adc
mov
aaa
rol
xchg
jg
aaa
fs
xchg
push
test
jnp
mov
sbb
adc
inc
add
jp
jnp
sahf
xor
xchg
pop
adc
push
pop
or
push
push
sub
outs
sahf
jne
or
xchg
int
ja
inc
xchg
rcr
sub
ins
lahf
pop
cmp
mov
mov
je
inc
xchg
jnp
lahf
dec
cmp
add
stc
arpl
jmp
push
data16
mov
dec
fnsave
adc
sbb
aam
adc
mov
jnp
push
sti
je
mov
mov
dec
ret
aam
sub
push
pop
xchg
sti
sbb
adc
lds
cmp
dec
jge
pop
sub
(bad)
mov
xchg
mov
xchg
daa
std
jecxz
cmp
out
add
sub
test
ins
cmp
lds
pop
mov
stos
nop
push
cmp
sub
rcr
and
sub
or
or
ret
scas
add
fstp
xchg
fidivr
pop
xor
xchg
xlat
xlat
dec
xor
(bad)
int
bound
cwde
(bad)
(bad)
das
xor
rcr
bnd
xchg
inc
and
(bad)
push
sbb
xor
les
fisub
repnz
lock
ror
cmp
xchg
iret
(bad)
and
dec
ins
dec
cmp
mov
ins
inc
xor
and
cdq
xor
mov
and
push
xchg
mov
dec
push
inc
xchg
jno
(bad)
aas
and
ins
test
inc
xchg
lock
add
mov
cmp
sbb
out
pop
push
mov
sti
pop
sbb
inc
add
add
pop
(bad)
mov
jg
and
mov
les
add
lods
lods
ror
pop
into
mov
shr
outs
and
fld
movs
fdiv
dec
mov
and
in
imul
rcr
ss
fucomi
sbb
sbb
nop
lods
mov
ins
call
jnp
out
std
push
jmp
or
add
and
mov
cli
les
daa
xchg
cdq
jns
std
pop
dec
dec
mov
aaa
xchg
(bad)
mov
xor
std
xchg
test
loop
sbb
or
aas
xchg
cmps
sub
(bad)
mov
in
pop
ss
mov
(bad)
test
xchg
and
xchg
adc
sub
jne
sbb
fisttp
shl
xchg
ins
cmps
js
mov
and
into
icebp
popf
fstp
jg
ficomp
(bad)
sti
call
test
bound
fild
shl
push
repz
rcl
dec
inc
jo
mov
out
jl
push
add
inc
mov
push
push
in
mov
in
mov
cmp
call
pop
mov
sbb
xor
(bad)
arpl
repnz
xor
imul
jge
mov
mov
mov
pop
int3
pushf
xor
jb
and
mov
fldenv
cmc
sti
or
pop
push
xor
outs
xchg
jnp
xchg
dec
sbb
add
push
in
xchg
js
js
outs
lods
lock
ss
push
mov
xchg
movs
sbb
adc
test
xor
adc
jmp
fdiv
ret
outs
(bad)
addr16
shl
sub
mov
frstpm(287
cmps
xchg
inc
dec
sub
movs
cmp
in
out
lahf
mov
xor
jl
pop
and
or
mov
or
and
dec
jno
icebp
je
sbb
cmp
dec
jno
shl
push
push
jae
mov
stos
cli
cmc
jno
inc
pop
add
adc
xor
mov
sub
mov
and
imul
xchg
sbb
xchg
sub
out
xor
jns
pop
outs
jp
pop
mov
ja
shl
or
and
aad
fstp
push
dec
xor
iret
adc
out
xor
adc
add
add
sbb
ss
sbb
cli
and
lea
js
aaa
int
adc
cmp
push
sti
ins
mov
je
jb
js
xor
pop
pop
mov
adc
lock
cmps
push
frstor
cmp
sub
into
nop
push
out
mov
jbe
push
lahf
imul
rcr
and
fld
mov
out
or
in
fistp
or
test
jae
lahf
sbb
loopne
call
fisttp
fdiv
xchg
add
sub
pop
fs
fs
pop
push
call
dec
inc
das
or
sahf
mov
cli
cmc
cmps
aaa
jmp
je
sub
dec
fdivr
fxch
sub
mov
aad
or
mov
mov
add
jbe
imul
xlat
lahf
pop
jg
mov
dec
test
ret
ins
(bad)
les
xchg
dec
sbb
test
test
mov
jns
repnz
inc
or
(bad)
mov
jb
pop
adc
jp
call
dec
(bad)
ja
arpl
xor
sbb
call
push
adc
xchg
pop
movs
mov
mov
mov
pop
inc
pop
mov
inc
sub
cmp
div
pushf
or
frstor
sub
xchg
out
mov
mov
in
imul
or
cmp
dec
adc
push
and
inc
test
jo
popf
adc
xor
or
test
jge
push
je
xor
rcl
stc
or
push
pop
xlat
rcl
das
adc
push
sub
push
in
in
mov
dec
push
lds
cmp
mov
xor
mov
xchg
lahf
cwde
outs
inc
push
xchg
mov
je
js
pop
rol
mov
xchg
(bad)
ins
sub
mov
mov
mov
stc
in
jl
aad
dec
arpl
sub
pop
adc
cmp
(bad)
leave
addr16
sub
pusha
ins
xor
jo
jmp
pusha
cmps
test
pop
retf
and
in
loope
outs
xor
cmps
cs
dec
jge
pop
call
push
push
pusha
test
jmp
out
inc
mov
ret
push
pop
stc
xor
in
sub
pop
fwait
add
or
stos
jg
aam
xchg
ins
inc
pop
xor
or
push
ins
lods
mov
fisubr
mov
xor
cmp
outs
push
and
cmp
or
pop
sbb
dec
(bad)
repnz
bound
mov
pop
sahf
xchg
cmp
cmp
ret
lods
outs
stos
fisubr
sub
fwait
sbb
in
adc
xchg
sbb
call
mov
mov
iret
dec
xor
mov
pop
sub
in
cmp
dec
adc
std
jno
lahf
inc
mov
(bad)
mov
(bad)
pop
mov
xor
inc
aas
or
ja
int3
icebp
sbb
push
lods
jg
cwde
push
mov
xchg
mov
lahf
pop
dec
mov
mov
ds
js
xchg
cmp
xchg
push
dec
xlat
and
test
idiv
add
or
mov
pusha
push
fild
pop
push
inc
cmp
pop
out
dec
lods
fistp
pop
push
push
add
stc
dec
call
jecxz
dec
mov
jbe
or
fsub
loop
push
push
mov
push
and
test
fsub
addr16
sar
inc
pop
fdivr
aas
shr
inc
(bad)
push
push
jmp
scas
pop
leave
sub
test
xchg
dec
sbb
in
and
nop
inc
call
imul
sub
or
es
mov
int
leave
in
xchg
or
mov
cld
es
lahf
aaa
push
xlat
je
jne
sar
int3
add
dec
pop
leave
or
pop
mov
retf
xor
xchg
pop
imul
mov
add
jecxz
push
lds
in
call
lahf
aaa
repnz
shl
xlat
xchg
add
push
push
cmc
js
int3
dec
and
cmp
xchg
adc
inc
and
adc
popf
ss
(bad)
mov
lods
fmul
xchg
out
fldenv
adc
nop
jmp
or
lock
xor
add
je
ins
aaa
xor
sbb
pop
jbe
pop
pop
mov
xchg
push
xor
retf
mov
jnp
and
(bad)
add
xor
or
ds
mov
inc
mov
(bad)
jl
xor
sub
popa
outs
jg
add
pop
out
xor
es
cwde
imul
add
(bad)
lods
stos
mov
xchg
fucomi
jns
stc
inc
call
popf
xchg
jmp
dec
arpl
popa
cmp
push
enter
inc
jmp
sub
ds
out
push
test
mov
adc
xor
mov
inc
push
vmaxpd
mov
and
jns
jne
jmp
mov
mov
cmc
mov
push
dec
sbb
jnp
stos
mov
jmp
sub
mov
and
lea
sbb
hlt
vmovhpd
xchg
les
mov
into
adc
enter
outs
inc
cmp
mov
cmp
leave
sbb
mov
pop
bnd
xor
fistp
jns
jmp
dec
fild
rcl
mov
(bad)
cdq
fmul
repnz
pushf
xchg
std
stc
std
xor
outs
inc
into
retf
jbe
push
add
cdq
mov
mov
mov
out
pop
retf
xchg
mov
inc
add
dec
mov
aas
retf
xchg
popf
js
(bad)
xchg
(bad)
(bad)
(bad)
js
fcmovbe
jmp
(bad)
mov
inc
push
sub
mov
sbb
(bad)
and
and
div
lea
sbb
pop
int3
jne
daa
sahf
pop
jecxz
scas
or
pop
add
cmp
mov
stos
cli
test
cmp
pop
pop
je
push
es
inc
xor
outs
outs
retf
mov
imul
scas
out
cmp
mov
jge
sti
jmp
mov
pushf
cwde
ins
inc
les
sbb
int3
pop
data16
dec
pop
data16
adc
cmp
loopne
inc
fwait
push
test
into
popa
(bad)
shl
dec
fs
or
jle
push
leave
jns
movs
fdiv
dec
jl
test
ins
(bad)
shr
xor
cwde
in
jmp
or
inc
cmp
or
xor
into
xor
sub
mov
test
repnz
add
mul
adc
imul
pop
lahf
cmp
push
nop
push
mov
fnstenv
(bad)
out
cmp
and
les
je
bound
xor
stos
and
push
inc
jno
inc
dec
into
hlt
sbb
stc
push
and
fsub
pop
es
mov
inc
lds
pop
inc
push
inc
push
popa
mov
jp
adc
lods
mov
sub
loop
jmp
add
pop
jle
gs
pop
push
adc
scas
mov
leave
jge
fcom
outs
es
das
push
or
cld
out
stc
jae
stos
arpl
adc
and
or
push
out
scas
pop
das
dec
lock
test
and
mov
cmp
data16
std
dec
or
jno
test
(bad)
out
(bad)
(bad)
fdiv
mov
push
std
loop
xlat
mov
and
mov
fcmovne
lods
xlat
pushf
mov
(bad)
lods
xor
inc
jp
sahf
jo
movs
mov
mov
cmps
jmp
not
push
ret
in
test
(bad)
fmul
jmp
(bad)
or
add
or
cmp
add
cmps
ret
push
pushf
inc
mov
test
cmp
arpl
dec
movs
fcom
cs
pop
test
aas
sub
sar
fs
in
inc
imul
jg
rol
xchg
pushf
dec
(bad)
push
leave
push
gs
cwde
mov
pop
stc
inc
pushf
inc
mov
push
test
cwde
push
cmc
shl
es
(bad)
jno
push
lods
and
jns
retf
mov
inc
out
lea
xchg
push
and
mov
dec
inc
lds
retf
pop
xchg
pop
in
and
jae
loop
mov
sbb
add
push
call
fndisi(8087
ja
cmc
lds
pop
lods
jle
dec
sbb
icebp
pushf
jle
retf
loope
cwde
nop
or
push
lods
sbb
inc
leave
cwde
rcl
and
cmp
es
mov
and
aam
cmp
adc
retf
add
jnp
(bad)
push
push
mov
xchg
cmp
ds
jmp
clc
fmul
(bad)
or
sbb
jbe
xor
or
inc
or
imul
clc
bound
hlt
outs
jecxz
lods
aaa
enter
jne
jno
(bad)
cmps
ins
popa
(bad)
js
xchg
push
into
fwait
inc
loop
adc
mov
and
dec
jp
mov
dec
xchg
adc
mov
bound
stos
jb
push
adc
cs
sbb
pop
and
stos
ss
out
(bad)
pop
or
inc
movs
ror
aad
mov
or
add
or
sub
or
pop
cmp
sahf
ds
mov
enter
clc
sub
pop
and
mov
and
jb
mov
stos
call
aas
dec
out
xor
jmp
mov
cdq
icebp
add
stos
cdq
in
push
or
push
inc
jmp
(bad)
mov
adc
xchg
retf
imul
push
inc
clc
addr16
int
pop
mov
xor
in
popa
pop
add
rcl
cmp
call
pop
or
fsubr
call
int
jns
rcr
xchg
aaa
adc
sub
add
inc
das
neg
iret
xor
pop
mov
out
pop
cdq
jns
and
dec
sub
mov
dec
shr
xchg
inc
(bad)
and
add
out
add
scas
push
pop
inc
xor
imul
pop
stc
rol
dec
(bad)
loope
push
mov
add
jmp
sub
clc
rcr
sub
pop
in
pusha
mov
add
and
bound
retf
lods
jecxz
dec
or
rol
cmp
xchg
pushf
sbb
int
push
and
adc
xor
daa
das
ja
pop
(bad)
imul
xor
lods
das
rol
mov
dec
xchg
mov
mov
push
or
pusha
xchg
pop
jl
fbstp
adc
sbb
push
pop
and
and
cmp
sbb
mov
xor
std
shl
mov
jbe
scas
inc
mov
(bad)
sbb
pop
mul
jecxz
pop
push
cmp
inc
jecxz
nop
ret
test
mov
stc
std
sahf
xor
add
fsubr
lods
add
fdiv
mov
or
ins
mov
nop
sub
add
in
mov
sbb
aaa
into
enter
add
pop
out
sub
pushf
sub
retf
add
xor
sbb
mov
les
inc
jl
pop
xchg
dec
pop
jae
pop
or
stc
enter
add
jp
outs
cs
mov
add
xchg
into
sub
movs
dec
adc
pop
movs
pop
xchg
mov
std
daa
xchg
ret
movs
call
ss
mov
stos
scas
bound
mov
out
adc
ds
int
mov
or
stos
mov
popf
sbb
push
movs
daa
inc
cmp
jnp
push
or
loopne
fidiv
mov
dec
popf
push
dec
inc
sar
mov
mov
adc
and
pusha
push
loopne
aaa
push
arpl
call
push
push
adc
mov
sti
dec
jmp
xchg
and
jb
mov
mov
jns
sbb
stos
aad
icebp
jl
mov
aaa
lea
sub
(bad)
stc
stos
or
and
mov
xchg
test
or
repz
adc
hlt
aaa
add
xor
dec
call
xor
stos
or
cmp
repz
add
sub
mov
in
aam
in
dec
cmc
cwde
pop
scas
adc
out
adc
in
fucomi
cmp
dec
sbb
xor
ror
ins
mov
mov
or
(bad)
xor
adc
pop
jns
lods
add
call
lahf
enter
aaa
push
mov
add
movs
fs
test
mov
cmps
gs
xlat
push
loope
push
enter
inc
(bad)
fs
sbb
mov
ins
rcr
fild
fcomp
dec
cdq
movs
push
jne
sbb
sbb
(bad)
pushf
outs
mov
cli
pop
ins
mov
stc
xchg
jo
ins
sbb
aad
outs
jns
mov
test
clc
cmp
pop
fidiv
imul
xchg
(bad)
in
cmp
ret
cmp
mov
mov
adc
xor
icebp
or
push
lahf
call
xchg
(bad)
dec
pop
std
mul
mov
cmp
cmps
imul
scas
out
xchg
mov
adc
pop
inc
push
jg
jb
push
cli
lahf
push
or
jge
shl
push
out
xor
mov
adc
out
movs
test
mov
lea
mov
aad
xchg
stos
jmp
(bad)
xchg
nop
fsub
sub
push
cmps
mov
jb
test
mov
les
mov
(bad)
mov
jae
adc
mov
mov
xchg
cmp
jecxz
jae
popf
adc
mov
fdivr
mov
adc
sbb
scas
push
pop
lods
outs
cmps
sub
out
lahf
ds
push
and
lahf
xchg
popa
xchg
xchg
shr
xor
cmp
rcr
or
lea
aam
push
fwait
outs
mov
call
repz
push
ds
jnp
cmp
mov
mov
sbb
(bad)
mov
cmc
cmp
leave
icebp
ss
push
mov
mov
adc
cmp
bound
dec
pop
adc
cdq
ror
aad
adc
sbb
xlat
xchg
cmp
das
or
jle
(bad)
jecxz
(bad)
mov
push
das
xchg
addr16
dec
mov
or
in
jle
push
inc
test
pop
jecxz
pushf
xchg
mov
xor
pop
pop
sub
in
mov
sbb
and
in
ja
lods
outs
sbb
jbe
inc
sub
adc
jp
stos
cwde
mov
stc
or
mov
mov
aad
jecxz
push
cmp
rol
and
sub
and
adc
jmp
and
add
test
nop
push
or
adc
or
push
rol
es
mov
stos
add
mov
call
fisubr
or
(bad)
adc
mov
dec
sub
and
pop
and
test
cli
mov
fiadd
xchg
icebp
je
test
loop
(bad)
cmp
xor
mov
call
(bad)
adc
shl
icebp
cmp
mov
sbb
jmp
cdq
test
call
sub
mov
out
cmps
push
xchg
loopne
imul
test
mov
mov
loope
in
jmp
hlt
xor
push
into
in
lock
js
jnp
cmp
xor
inc
out
aas
stos
dec
adc
int
inc
ficom
shl
xlat
mov
scas
ror
inc
dec
push
test
or
mov
pop
fdivr
cmp
out
cmps
mov
sub
call
es
fbld
dec
outs
mov
hlt
inc
popf
push
popa
adc
dec
je
push
out
(bad)
out
test
test
outs
push
call
ds
loopne
mov
adc
sbb
jno
(bad)
mov
mov
cmp
test
mov
push
adc
xlat
pop
jo
fiadd
lahf
add
push
mov
test
add
pop
sbb
sbb
cmp
xchg
mov
out
mov
mov
push
mov
or
mov
jae
test
mov
jmp
cmps
xchg
lahf
jmp
mov
or
jle
clc
fwait
sub
xlat
stos
or
adc
and
cmc
push
mov
mov
push
out
xchg
pop
xchg
stos
adc
mov
push
inc
mov
mov
aaa
loope
out
push
daa
lods
jp
not
in
repnz
push
push
lds
out
cmps
pop
jg
repnz
mov
adc
call
inc
imul
call
xchg
mov
aas
pop
sar
inc
dec
inc
inc
mov
inc
sub
push
and
fisubr
inc
dec
in
shr
and
sbb
(bad)
out
mov
retf
data16
movs
jge
sbb
jmp
leave
or
sar
xchg
sub
shr
clc
jp
in
mov
arpl
dec
lods
or
adc
sub
popf
push
movs
cmp
push
mov
cmp
jo
mov
mov
icebp
add
enter
in
mov
push
mov
jg
imul
nop
mov
test
stos
mov
pop
ror
ja
stos
out
cmp
test
idiv
mov
pop
xor
push
adc
outs
les
jmp
jecxz
cmp
jge
hlt
dec
imul
ins
jge
push
pushf
ret
mov
fs
(bad)
cwde
mov
lock
rcr
xchg
xor
inc
mov
dec
pushf
mov
call
add
push
push
inc
(bad)
and
mov
data16
mov
pop
mov
fdiv
popa
mov
or
adc
sti
push
mov
stc
faddp
adc
and
sti
dec
xchg
inc
repnz
test
std
call
sub
movs
ret
(bad)
call
sbb
nop
inc
inc
jle
or
repnz
xor
in
jge
in
xor
xchg
shl
sar
cmps
fidivr
and
sub
fs
mov
imul
(bad)
ins
add
pop
ins
mov
leave
mov
fwait
mov
int
sbb
nop
and
fdivr
inc
movs
xor
cli
test
jg
daa
(bad)
gs
fild
push
dec
pop
mov
dec
adc
mov
int
test
int3
arpl
lods
pop
sbb
sub
stos
fwait
push
popa
and
(bad)
cli
inc
repnz
pop
test
imul
xchg
stos
or
mov
sbb
pop
adc
adc
jb
adc
or
jne
retf
neg
ror
jns
jecxz
cmc
adc
leave
je
sub
fucomip
xchg
xchg
mov
pusha
xchg
mov
into
clc
adc
sbb
or
push
repnz
leave
inc
push
jl
push
jne
and
add
imul
xor
sub
mov
jg
aas
cmp
daa
imul
in
inc
push
xlat
(bad)
mov
test
mov
and
aam
imul
aad
lock
push
add
sub
iret
adc
jp
cmps
push
xchg
rcr
xor
mov
es
loopne
das
adc
mov
add
mov
jo
and
lea
or
or
(bad)
retf
and
rcl
(bad)
jp
push
js
cs
pop
pop
jno
dec
outs
adc
shl
and
je
(bad)
in
jmp
fst
fistp
add
bound
jmp
cmp
cmp
and
lahf
popf
aam
repz
pop
mov
jp
cwde
cmp
loopne
mov
cmp
and
xchg
jg
mov
(bad)
fs
(bad)
aad
add
jecxz
ffree
pop
loopne
mov
xlat
pop
loop
lods
sub
add
push
sbb
lods
ret
jo
aas
add
sbb
adc
aas
inc
push
sub
jae
nop
push
mov
pop
test
icebp
popa
xchg
mov
sbb
mov
test
hlt
cmp
push
dec
rol
fdivr
nop
test
scas
mov
sahf
or
mov
in
cwde
jns
xor
test
arpl
mov
or
pop
xor
jne
ucomiss
mov
mov
add
and
ffree
jmp
xchg
mov
mov
pusha
scas
bound
sub
add
test
outs
fsubr
enter
lahf
and
or
imul
test
stc
mov
xor
pop
repz
and
imul
sub
out
push
shl
fadd
sub
movs
mov
stc
pop
sar
(bad)
mov
dec
ucomiss
arpl
and
mov
js
clc
mov
out
popf
lea
cwde
aam
ins
cli
mov
or
mov
(bad)
mov
mov
xchg
std
xor
imul
std
sbb
(bad)
mov
movs
inc
jbe
cdq
pusha
push
push
out
ja
rol
dec
inc
ja
sar
add
pop
dec
jmp
test
or
out
jle
push
test
jmp
jbe
leave
mov
cs
test
mov
cmp
inc
add
xchg
jo
xchg
sbb
js
nop
in
sahf
sub
pop
mov
cdq
es
pop
jo
dec
(bad)
xor
push
outs
and
in
jnp
inc
xchg
ja
mov
xchg
daa
hlt
xchg
ret
xor
sar
lods
loop
push
aaa
test
or
inc
add
push
add
lahf
jo
test
pop
cs
inc
jne
mov
loop
lock
jnp
fisub
push
lods
movs
xchg
mov
adc
push
(bad)
mov
mov
in
dec
dec
mov
pusha
xlat
(bad)
jmp
inc
cmovne
retf
pop
jmp
cwde
ds
push
and
or
sub
jo
cmp
inc
dec
xor
inc
xor
in
mov
cmp
add
sar
pop
sub
mov
out
inc
(bad)
xor
cwde
mov
sbb
cmp
rol
bound
(bad)
mov
xchg
dec
ret
xlat
dec
popf
mov
or
pop
mov
in
je
push
cmp
push
jge
adc
aad
sub
lock
cdq
jb
xor
sbb
mov
pop
repz
loop
sbb
retf
je
cld
(bad)
call
lds
ds
inc
lds
out
cmc
mov
(bad)
jmp
daa
sti
es
mov
lea
mov
pop
jns
movs
std
adc
aas
or
cmp
stos
jmp
out
pop
mov
xor
jbe
jb
push
outs
(bad)
aad
mov
sbb
scas
sbb
mov
and
xchg
cli
push
repnz
sti
mov
out
push
cmps
mov
add
je
inc
or
mov
in
adc
cmp
fild
and
je
(bad)
aam
mov
jmp
arpl
sbb
out
cmp
push
cmc
mov
push
xchg
daa
jno
addr16
sbb
fiadd
loope
pusha
dec
imul
mov
or
inc
add
push
test
push
dec
pop
movs
lahf
mov
add
pop
in
sub
rcl
sbb
int
repz
mov
into
adc
fadd
jg
and
jp
xor
ins
pushf
arpl
call
mov
imul
mov
jbe
or
dec
mov
(bad)
mov
cmp
push
inc
push
dec
test
into
lods
mov
or
push
(bad)
fmul
push
iret
mov
inc
adc
das
and
and
mov
dec
pop
push
adc
mov
stc
loope
push
ret
mov
and
sub
(bad)
scas
sub
xlat
shl
int3
icebp
sub
loopne
stos
and
shl
sti
aam
in
jns
bsf
sbb
aam
push
in
adc
test
fld
and
nop
xchg
cdq
xor
pushf
rcl
mov
mov
and
jne
cmps
and
div
pop
add
xor
cmc
pop
cs
addr16
stos
leave
rol
xchg
cmc
sbb
lea
aam
xor
les
fdiv
cmps
dec
sbb
ja
dec
test
mov
aas
ror
retf
rol
cmps
mov
scas
cs
jg
shl
add
xchg
xor
jae
jmp
ret
imul
mov
out
xchg
push
push
imul
int
mov
in
mov
sub
push
sub
add
loope
sar
dec
rep
scas
xor
mov
push
cmp
cmp
das
mov
popa
loop
mov
cmc
add
cmovbe
fsub
cmp
inc
clc
int
call
and
mov
gs
aaa
mov
mov
sub
push
cld
out
fdivr
pop
in
xchg
mov
inc
test
call
cmps
fs
pop
sbb
mov
(bad)
fisttp
mov
push
xor
out
sub
mov
ss
inc
adc
or
jno
fist
or
ret
cmp
xchg
pop
inc
dec
call
gs
fwait
pop
mov
jge
fild
push
lods
out
xchg
sbb
cmp
fidivr
fnstenv
push
inc
jg
xchg
xor
and
lods
std
fwait
or
push
mov
fwait
gs
sbb
pushf
fnstsw
shr
enter
push
push
paddd
mov
iret
shl
add
push
fisub
lods
fwait
pop
ins
enter
fst
pop
cmps
xchg
mov
mov
or
lock
(bad)
jmp
sbb
mov
adc
std
or
pop
imul
fcmovu
adc
jbe
iret
das
mov
pop
mov
xchg
les
mul
or
rcl
jl
not
sub
test
dec
push
sbb
mov
cld
repz
or
cmp
shl
inc
test
xchg
pop
add
sahf
mov
jno
or
outs
sub
and
cmc
push
not
shl
pop
dec
xchg
adc
jmp
fxch
push
or
(bad)
test
ds
pop
in
pushf
sti
repz
jp
mov
add
jg
in
cmp
mov
rcr
or
dec
inc
jno
mov
arpl
adc
lods
rcl
xchg
ret
fstp
movs
popw
add
or
pop
sti
pop
cld
sub
add
jbe
mov
lods
mov
mov
(bad)
aas
add
(bad)
nop
add
mov
into
mov
in
pop
xor
int
pop
inc
mov
mov
adc
mov
cmps
fdivr
push
mov
fidiv
pop
or
mov
call
sbb
inc
pop
ins
leave
add
mov
pop
pop
in
lahf
mov
mov
adc
or
imul
jp
es
imul
mov
in
pop
push
rcl
mov
pop
mov
ror
scas
xlat
adc
mov
lds
xor
fdivrp
ins
and
test
loope
fsubr
aad
push
cmp
inc
icebp
xlat
pop
xlat
inc
les
int3
jne
jle
and
iret
adc
sar
push
retf
xchg
push
out
mov
and
mov
loopne
add
add
mov
mov
cmp
adc
fld
or
xchg
lock
ss
xor
in
push
loop
sbb
movs
adc
pop
sub
aas
scas
rcr
xchg
mov
scas
in
jle
(bad)
dec
xchg
std
push
mov
call
pop
movs
or
(bad)
rcr
jl
mov
scas
jecxz
xchg
test
int
daa
mov
dec
fs
dec
sbb
stc
int
retf
clc
pop
out
sub
mov
cmc
mov
mov
popf
mov
add
or
mov
data16
ins
(bad)
stc
jbe
push
push
xchg
gs
ret
mov
mov
addr16
rol
fsubr
bound
fstp
inc
ret
cli
enter
inc
fstp
or
movs
mov
mov
fst
push
add
fld
sub
fst
call
xchg
xor
out
arpl
mov
jp
sub
lock
fstp
sbb
jecxz
hlt
pop
int
mov
outs
inc
dec
adc
pop
dec
push
cmps
cmp
cmp
cmps
push
sub
mov
mov
in
push
(bad)
cmp
lds
mov
aas
dec
scas
sub
loop
mov
mov
push
cmp
dec
push
sar
cmps
pop
pushf
mov
mov
nop
dec
xor
jg
rol
in
add
jmp
arpl
add
or
dec
sub
cmp
add
imul
or
sub
xlat
xchg
jb
nop
fistp
loop
loope
xchg
push
cwde
or
outs
mov
push
fwait
aaa
jl
mov
jg
jns
movs
movs
fnstsw
adc
mov
jge
fst
pop
sar
inc
mov
scas
dec
(bad)
sbb
mov
out
not
push
bound
(bad)
popa
lods
test
out
(bad)
adc
jp
fisubr
sbb
xchg
loop
pushf
enter
sub
pop
ret
in
mov
adc
mov
jp
adc
push
jge
and
pusha
jnp
(bad)
imul
pop
xchg
jae
push
xlat
adc
mov
pop
int
pop
(bad)
leave
pop
mov
scas
jmp
add
outs
addr16
inc
cmc
mov
jnp
shr
leave
repnz
pop
cmp
fimul
lods
cmps
xchg
ret
in
mov
std
inc
sub
pop
jae
outs
jge
mov
mov
(bad)
xchg
addr16
sub
(bad)
adc
inc
ds
xchg
jo
and
ret
sar
cmp
aad
mov
mov
test
ja
xchg
inc
mov
les
out
sbb
jge
hlt
adc
pop
sbb
fwait
pusha
xor
shr
ret
(bad)
push
cmps
or
(bad)
pop
add
aam
inc
sahf
cmc
pop
cwde
cwde
nop
pop
xor
lock
hlt
(bad)
jns
push
or
movs
stc
les
and
or
sub
push
cmc
or
scas
inc
push
out
lahf
pop
adc
sti
sub
jns
(bad)
mov
movs
ins
jmp
into
lods
dec
out
xchg
add
mov
mul
dec
mov
push
pop
sbb
jg
out
ins
pop
loope
loopne
es
cwde
cmc
push
push
jl
cs
retf
clc
dec
icebp
fmul
cmp
xor
sahf
vmovaps
ret
loop
push
jp
pop
xor
push
xchg
ins
out
or
test
ins
dec
push
jae
test
aaa
mov
dec
xor
loop
outs
jae
fnsave
or
movs
dec
xchg
or
mov
xchg
fmul
xchg
adc
loop
outs
jmp
int
ins
test
bound
push
inc
lods
shl
mov
adc
retf
and
in
aas
ins
dec
movq
adc
dec
fdiv
fidivr
lods
or
iret
test
rcl
fidivr
sahf
fadd
pop
jmp
cwde
cmp
scas
and
es
and
cmc
sbb
cmp
loop
mov
ins
rcr
(bad)
xor
mov
ror
dec
mov
sub
adc
loopne
(bad)
das
ror
ins
push
js
rcl
retf
(bad)
in
and
imul
test
ds
pusha
inc
dec
fdivr
xchg
fdiv
stos
out
cli
push
inc
out
xor
cmp
inc
repnz
sbb
mov
mov
sbb
adc
call
sub
push
mov
xor
mov
mov
and
and
pop
push
or
mov
push
inc
bound
xor
jle
aam
mov
mov
sub
adc
retf
mov
or
test
fcmovu
push
cmp
movs
js
jmp
aas
js
fimul
or
lds
sti
js
adc
inc
add
(bad)
arpl
cmps
fstp
pop
cld
pusha
nop
in
cmp
xchg
or
pop
iret
(bad)
jmp
(bad)
push
mov
mov
jbe
js
jnp
(bad)
in
fcmovbe
push
les
pop
aaa
int3
loope
das
mov
out
sub
gs
mov
mov
data16
sub
cmp
mov
(bad)
in
daa
mul
jbe
hlt
ins
pushf
outs
rol
mov
push
xchg
fstp
jmp
mov
pop
ffree
scas
ror
jle
ins
push
hlt
mov
adc
(bad)
iret
call
xor
fdiv
repz
stc
ja
sub
daa
into
sahf
imul
sub
xchg
xchg
int
inc
stos
vmovq
fisub
out
in
out
daa
shr
fsubr
jmp
mov
(bad)
jle
mov
jns
(bad)
jmp
movs
mov
aas
mov
ja
add
lea
fisubr
jge
mov
(bad)
(bad)
and
push
add
sbb
xor
or
mov
sbb
and
or
xor
call
and
lods
jg
movs
add
and
(bad)
pop
popf
addr16
push
enter
mov
mov
lods
mov
mov
jmp
dec
sub
(bad)
popa
inc
mov
aad
lds
jle
dec
stos
ins
aas
sbb
inc
fdivr
js
popa
setg
and
sub
push
jne
add
xor
mov
stc
cmp
into
je
call
mov
in
xchg
sbb
arpl
cmp
mov
(bad)
mov
aam
xchg
gs
loope
sbb
pop
cwde
loopne
and
in
daa
dec
pop
lods
mov
cmp
sub
imul
pop
ins
mov
(bad)
int3
out
test
cmps
sub
scas
mov
mov
xchg
xchg
outs
sub
out
mov
inc
fisub
or
ins
nop
mov
xchg
inc
in
dec
(bad)
mov
(bad)
rcr
ins
movs
in
ins
inc
xchg
retf
dec
cmp
push
cwde
mov
mov
cmc
or
sbb
mov
pushf
push
scas
xchg
lock
xchg
or
sbb
ja
add
inc
sbb
dec
xchg
call
fs
add
call
and
fistp
clc
(bad)
loope
jg
pop
fwait
sub
mov
push
mov
sbb
outs
test
dec
or
scas
lea
bound
pushf
in
sbb
ret
and
cmps
(bad)
jb
push
jae
(bad)
and
hlt
add
mov
mov
xor
inc
push
or
sbb
or
test
sbb
cmp
xchg
stc
mov
rcr
icebp
ret
inc
add
adc
dec
icebp
retf
inc
push
cmp
fs
push
inc
sti
cs
jge
les
(bad)
sub
dec
mov
and
adc
and
mov
add
cmp
leave
inc
cmps
mov
rcr
mov
inc
adc
push
das
dec
push
in
dec
sub
sbb
dec
push
rcr
fstp
into
enter
outs
repz
sub
in
rcr
pop
adc
and
sub
mov
mov
sti
inc
(bad)
jle
ja
fmul
outs
inc
xor
pop
stos
inc
fimul
dec
jbe
addr16
push
out
rcl
in
(bad)
stc
mov
cwde
ins
pop
ret
fs
sar
push
jmp
lahf
pusha
mov
or
sbb
add
pop
cmp
jnp
mov
adc
call
rcl
inc
mov
xlat
xor
push
rep
xor
ror
ins
(bad)
push
pop
mov
mov
out
(bad)
cwde
mov
adc
scas
mov
mov
js
adc
pop
jns
cmps
(bad)
mov
mov
mov
and
ja
inc
in
and
jnp
jmp
(bad)
repnz
inc
shl
mov
lahf
xchg
pop
or
xor
push
push
clc
mov
mov
or
cwde
jmp
add
mov
mov
xchg
push
adc
mov
out
repz
xchg
stc
pop
xchg
and
lds
jb
into
mov
ins
push
cmps
mov
retf
call
in
lds
repnz
imul
aad
or
sub
les
adc
fst
test
push
xor
and
out
jle
jmp
out
mov
jg
leave
inc
inc
and
cmp
ret
adc
xchg
adc
into
cwde
lahf
iret
sub
dec
jno
sub
pop
adc
sbb
nop
mov
(bad)
imul
sbb
mov
test
sub
fisub
inc
stos
xchg
hlt
xchg
mov
dec
pop
or
aas
(bad)
jmp
and
mov
push
lods
fsub
and
je
mov
pop
mov
adc
xor
mov
cmp
or
adc
call
jg
(bad)
call
mov
outs
sahf
leave
outs
loopne
push
pcmpgtw
pusha
or
pop
or
fstp
scas
stc
pop
rcl
add
xor
or
mov
jg
retf
jge
adc
std
xchg
jne
icebp
gs
lods
mov
add
xor
add
std
movs
call
imul
and
sbb
push
cmp
push
inc
dec
movs
push
pop
outs
in
and
(bad)
test
pop
outs
pop
sbb
bound
or
movs
cmp
mov
inc
scas
shl
push
pop
lahf
test
cwde
repnz
and
retf
std
mov
inc
ss
arpl
iret
pop
or
inc
xchg
call
pop
out
inc
mov
jg
sbb
pop
ret
add
add
lea
mov
cmp
xchg
adc
mov
xchg
dec
xchg
fs
ins
ja
sbb
inc
out
stc
movs
pop
push
lds
and
in
cmp
scas
lods
dec
lahf
loope
jnp
or
lea
add
hlt
xchg
adc
and
js
scas
shr
push
jg
stos
loope
jnp
push
loop
push
mov
jns
gs
retf
cmp
and
adc
(bad)
ins
add
jl
add
dec
mov
ss
mov
ds
lock
out
push
fwait
and
rcl
jg
push
cdq
pop
or
jl
jbe
sbb
call
xor
in
xor
sub
mov
dec
arpl
inc
or
push
jge
cli
xchg
xor
(bad)
jne
dec
push
aad
(bad)
lahf
lods
jmp
jno
cs
pop
xchg
xchg
mov
call
or
mov
jge
ror
pop
and
push
xor
lock
sbb
shl
fldenv
ds
mov
push
fadd
inc
push
out
adc
mov
push
mov
rcr
fcmovu
cmp
movs
jmp
dec
mov
cmp
gs
fst
xor
ins
pop
sbb
aaa
cmc
cld
xchg
or
inc
loope
stos
mov
sbb
jmp
mov
mov
jecxz
and
cwde
sub
xor
test
mov
aam
sub
adc
movs
out
test
or
adc
out
inc
mov
in
fist
jg
xchg
xor
mul
retf
bound
ret
mov
outs
mov
loopne
repnz
sbb
(bad)
xchg
lds
mov
xor
mov
daa
shr
cli
in
mov
(bad)
(bad)
and
push
sub
popa
sahf
fcmovne
movs
std
jno
xchg
sub
pop
push
loopne
sub
test
add
push
inc
pusha
out
cmc
call
jmp
leave
push
cmp
pop
xchg
cmp
add
lock
push
fs
shl
dec
dec
or
mov
jne
adc
mov
scas
out
sub
int3
pop
fcmove
push
sbb
icebp
cmp
xchg
leave
jnp
les
cmp
xchg
add
adc
add
aam
(bad)
jmp
mov
inc
xchg
pop
add
(bad)
cmc
mov
sbb
enter
sbb
out
push
stos
out
scas
aad
(bad)
into
pop
xchg
mul
stos
mov
ss
aam
jo
in
xchg
in
daa
ret
ret
xlat
aas
add
pshufw
mov
mov
pshufw
mov
mov
movs
inc
cwde
xor
repnz
mov
push
cmp
fcom
ja
fistp
and
popf
repz
and
mov
pop
dec
dec
hlt
mov
fucomip
jo
stos
pusha
inc
dec
je
mov
mov
add
lahf
xchg
mov
shr
mov
es
lahf
imul
mov
xor
enter
xchg
not
sub
mov
test
mov
pop
fldenv
cmc
adc
ins
ins
adc
sub
adc
pop
cld
xchg
cdq
push
sbb
fist
inc
and
mov
or
scas
sbb
and
cmp
leave
mov
xchg
(bad)
xchg
out
mov
dec
jnp
or
mov
xor
pop
adc
pop
retf
ss
jo
in
or
adc
mov
adc
call
shr
(bad)
retf
push
push
mov
call
clc
shl
stos
int3
icebp
jae
jle
add
sbb
std
gs
push
iret
mov
pushf
mov
lods
stos
xor
inc
cld
movs
xchg
and
and
ds
in
hlt
movs
out
fld
jle
enter
sub
data16
clc
mov
mov
cmps
inc
repnz
stc
pop
das
call
mov
cmp
pop
stos
ins
mov
mov
sbb
imul
xor
push
jecxz
jo
jge
data16
adc
cmp
sbb
aam
sub
(bad)
sub
cmp
mov
cmp
ss
pop
mul
or
mov
dec
js
xacquire
aas
push
cmp
xlat
mov
jo
in
inc
(bad)
xchg
enter
out
sub
sbb
xchg
iret
mov
add
test
js
test
mov
leave
mov
xchg
into
pop
jg
xchg
sbb
push
lods
std
sub
repnz
add
sub
cli
fdiv
mov
ins
jmp
ret
bound
fisubr
jnp
mov
shl
mov
repnz
dec
mov
xor
rcl
xchg
jle
mov
cmps
imul
retf
cmps
cmp
clc
mov
rcr
mov
out
xchg
jo
mov
adc
lods
cld
(bad)
imul
imul
repnz
sbb
and
xlat
jmp
out
jae
sti
(bad)
ds
scas
fsubr
pop
imul
lods
out
mov
mul
xor
lods
mov
outs
cmc
sti
js
not
ret
imul
xor
mov
pop
mov
push
fdiv
xchg
(bad)
cmc
arpl
in
in
call
inc
daa
sbb
repz
adc
(bad)
sbb
push
lahf
xor
push
loope
pop
inc
cli
adc
ja
jbe
lahf
sbb
mov
jo
jge
stos
or
movs
les
out
das
xlat
add
popf
xlat
xor
pop
cmp
je
icebp
imul
(bad)
xor
sar
fst
int3
pop
xchg
(bad)
test
ror
pop
sti
neg
add
jns
arpl
rcr
mov
out
inc
xchg
mov
ret
ja
lahf
jmp
lods
pop
pop
fcomp
and
shr
xchg
push
mov
and
jle
xchg
ss
xchg
repnz
repz
popa
mov
and
stos
jge
mov
xchg
jae
enter
sar
loope
pushf
sti
mov
mov
bound
inc
adc
mov
cld
mov
sbb
and
xchg
movs
test
push
and
push
xchg
fdivrp
pop
sub
add
sub
stos
loopne
rcl
mov
movs
sbb
jmp
mov
adc
call
test
xchg
fst
mov
out
mov
scas
movs
jecxz
cmp
inc
jecxz
sbb
sti
add
pusha
mov
ds
sbb
cmp
push
repz
adc
repnz
stos
sbb
sbb
sbb
sahf
xor
mov
shl
mov
xor
jmp
pop
adc
pop
ins
add
stos
icebp
xchg
add
loope
std
or
js
mov
sbb
dec
dec
movs
icebp
cmc
or
sbb
cwde
lods
test
mov
lods
mov
mov
push
cmp
cli
and
pop
xchg
in
mov
outs
jge
or
pop
jb
or
xchg
cmp
aas
fwait
xchg
and
scas
out
int3
xchg
xchg
mov
icebp
push
test
sbb
inc
xor
jne
jecxz
retf
adc
and
xor
push
fs
popf
sub
pop
adc
icebp
test
push
(bad)
popa
dec
sub
mov
icebp
inc
fist
pop
mov
aad
adc
mov
(bad)
jle
fldcw
or
sub
sti
dec
sbb
imul
aaa
test
ret
dec
ficom
sub
jno
ret
popa
mov
lea
(bad)
js
jmp
cmp
mov
cmp
pop
lea
jmp
dec
mov
or
or
call
fisttp
adc
xchg
loopne
arpl
out
loope
mov
(bad)
imul
sbb
push
inc
(bad)
jo
mov
cmp
aad
add
pop
xor
pop
(bad)
push
gs
and
add
mov
fadd
cmps
xor
call
sbb
pop
push
fidiv
xchg
bound
mov
sahf
fs
loopne
and
pop
adc
cli
push
cmc
adc
pop
cmp
dec
mov
loop
xchg
ins
and
scas
gs
aam
or
(bad)
mov
ffreep
hlt
mov
sub
xchg
mov
je
packsswb
loopne
sub
pusha
mov
in
xor
pop
test
ja
jle
sbb
pop
rcl
xor
(bad)
jl
dec
and
xor
scas
pop
pop
or
idiv
repz
ror
sbb
and
push
jns
call
mov
and
and
mov
sahf
add
jmp
pop
mov
lahf
(bad)
mov
cmp
pop
cmp
jns
adc
or
inc
sbb
sbb
sbb
pop
mov
push
adc
clc
dec
nop
call
adc
add
mov
push
mov
iret
cmp
in
push
pop
jp
ds
popa
retf
pushf
test
ret
cmp
pusha
shl
jecxz
xchg
(bad)
push
push
cdq
inc
jne
popf
jl
out
sbb
ins
push
pop
cli
or
xor
cwde
cmp
cwde
cmc
jb
and
cs
imul
in
fidivr
daa
clc
mov
out
jle
sub
into
test
fs
mov
push
sar
lods
bound
iret
cmp
adc
inc
cmp
fild
popf
(bad)
mov
jnp
retf
dec
hlt
scas
add
xchg
fstp
add
mov
pop
mov
add
das
adc
cwde
(bad)
and
jmp
mov
aaa
mov
stos
cmp
lock
jno
inc
inc
push
mov
and
and
inc
push
shl
int3
ficom
push
fwait
xor
es
dec
adc
fstp
push
sbb
or
repnz
add
jg
inc
jo
ret
jp
mov
mov
jno
cdq
fsub
cmp
mov
push
sub
add
ins
shl
jno
sub
cmp
mov
adc
jmp
mov
mov
jecxz
pop
loope
add
icebp
xor
and
mov
xchg
inc
jae
cmp
inc
test
mov
mov
out
rol
call
xchg
mov
xchg
push
xor
les
pop
loop
jge
mov
and
cdq
dec
stc
call
mov
mov
push
loopne
addr16
push
sbb
fs
jge
(bad)
cmp
mov
mov
ret
mov
jne
fs
mov
push
mul
push
cmp
pushf
jge
shl
mov
pop
call
add
inc
fadd
shl
movs
std
mov
cmp
out
or
sub
and
(bad)
cld
pop
outs
mov
ror
rol
inc
pop
jnp
fsubr
test
mov
cmp
dec
rol
out
push
xchg
mov
xchg
mov
dec
mov
fsubrp
cmp
adc
sbb
xor
loopne
pop
leave
xchg
sub
rol
cmp
push
jns
lock
or
fist
shr
jle
(bad)
sbb
gs
adc
xchg
dec
mov
hlt
add
ins
cs
fwait
cmp
faddp
mov
das
mov
scas
xor
cwde
and
fwait
leave
mov
xchg
inc
cli
mov
xchg
icebp
or
int3
dec
aam
push
fistp
or
add
push
mov
mov
ins
lea
cwde
cs
mov
(bad)
or
mov
jle
lahf
in
cwde
or
sub
dec
xlat
clc
xchg
sti
cmc
lds
les
pushf
sub
mov
and
lods
or
cdq
enter
add
push
xlat
stos
cmp
pop
sbb
fist
xchg
cmp
neg
sbb
aam
lods
stos
push
dec
retf
aas
pop
mov
and
mov
mov
xlat
jle
cli
xlat
(bad)
jb
inc
mov
dec
stc
ds
xchg
movs
and
mov
bound
popf
pop
push
clc
dec
fnstenv
rcl
pop
fwait
pop
rcr
es
xor
shl
push
repnz
(bad)
int
ja
stos
xchg
xchg
jecxz
ja
cwde
xor
cmp
int3
dec
xor
cmc
outs
(bad)
iret
mov
jle
sub
test
shl
sbb
(bad)
adc
cmps
mov
(bad)
jge
or
cmp
xchg
sbb
or
sbb
out
push
pop
in
mov
jp
aas
push
popa
xor
cmp
dec
xor
sbb
inc
enter
retf
mov
sub
jg
test
xor
sub
cmc
ss
movs
cmp
mov
(bad)
cmps
jp
or
repnz
jns
lock
inc
cs
test
cmp
inc
jl
int
(bad)
jle
inc
jmp
adc
retf
popf
jp
out
xor
pop
call
out
pop
and
dec
in
dec
pop
dec
push
mov
sahf
repz
xlat
jl
mov
leave
and
test
scas
jae
(bad)
xor
jg
cs
pop
nop
mov
push
and
sub
push
or
retf
cmp
cld
sahf
cmp
sub
jge
pop
fwait
pop
fbld
mov
popf
cld
add
fcom
mov
in
cli
and
mov
lock
add
or
(bad)
xchg
mov
xor
inc
iret
(bad)
pusha
ss
xchg
jmp
and
call
sub
fdivr
ja
xor
popf
gs
repz
mov
push
jne
aas
dec
pop
cmp
js
xor
dec
fst
and
repz
mov
push
jge
or
cmps
pop
mov
pop
cmp
jecxz
mov
cld
loop
ss
pop
das
pop
sub
dec
mov
adc
add
cs
fwait
movs
fsub
test
data16
loop
pop
inc
mov
adc
out
or
cmc
(bad)
(bad)
cs
mov
add
fwait
and
out
push
add
pop
clc
lods
xor
fnstenv
(bad)
push
push
add
xchg
ins
repz
leave
mov
mov
xor
aaa
sbb
jmp
inc
pop
or
push
xor
mov
pop
pop
(bad)
popa
loope
in
adc
mov
xchg
(bad)
adc
xchg
and
add
je
sub
push
lods
push
pop
dec
fst
inc
sub
(bad)
repz
push
stc
jnp
retf
lods
jg
mov
dec
pop
pop
test
pop
into
into
fisttp
ret
cs
pop
(bad)
imul
and
not
mov
nop
jno
jo
scas
add
pusha
rcr
jae
sub
es
cmp
or
lea
cmc
sub
pop
(bad)
movs
mul
jmp
scas
pop
lock
stos
pop
mov
and
xchg
sub
pushf
(bad)
and
cli
inc
nop
push
popf
loopne
jecxz
fmul
jp
out
mov
icebp
push
fsub
lock
jno
xchg
dec
je
and
(bad)
mov
fs
xchg
out
inc
xchg
inc
add
xchg
xlat
and
stos
(bad)
sar
or
xor
stos
lods
nop
or
cmp
push
fisttp
loop
push
inc
sbb
mov
mov
in
push
sub
inc
cmps
or
adc
out
gs
push
dec
mov
xor
into
out
inc
je
dec
iret
das
aaa
xchg
dec
jmp
mov
sbb
jl
lea
add
es
ss
scas
sbb
sbb
add
fs
sbb
jg
je
jge
add
mov
pop
leave
icebp
in
imul
loop
cmp
mov
ins
mov
shl
js
or
xlat
pop
call
pop
mov
xor
pop
push
test
or
or
scas
in
movs
call
movs
xchg
sbb
stos
add
mov
outs
xor
cmps
cdq
push
fwait
aam
(bad)
sahf
(bad)
xor
and
mov
pop
xchg
push
sub
fwait
xchg
nop
leave
jno
lods
pop
or
xchg
out
les
add
pop
or
dec
sbb
mov
sbb
mov
sbb
adc
xor
jl
jg
(bad)
lock
daa
lock
mov
or
dec
mov
loopne
mov
stc
loope
or
push
rcr
mov
fnstenv
aaa
mov
cmp
and
pop
add
in
dec
pop
cmps
add
and
cld
sti
mov
pusha
push
test
in
pushf
and
or
jo
je
out
lods
jmp
push
cmc
in
push
pushf
pop
xor
fst
dec
dec
xor
pusha
dec
repz
loop
jle
xor
push
ret
xchg
fidiv
(bad)
mov
pop
dec
push
call
mov
cmp
jg
mov
jne
jo
mov
cmps
imul
sbb
test
shl
mov
je
xlat
mov
add
or
jmp
push
mov
in
push
fiadd
test
outs
call
cmp
pop
sub
call
aam
xchg
sub
pop
repz
push
stos
sub
(bad)
xor
pop
rcl
inc
inc
sub
push
inc
or
and
push
test
fwait
ds
repnz
(bad)
and
cld
shl
push
outs
mov
push
sahf
aaa
out
xchg
mov
inc
enter
mov
push
(bad)
cmp
or
jmp
fisub
and
in
xchg
sahf
ret
adc
xor
lds
jb
jmp
xor
jns
fld
hlt
xchg
lea
xor
outs
pop
bound
push
cmp
and
in
std
xchg
cmp
mov
mov
in
dec
scas
iret
add
lods
rol
xor
mov
mov
fistp
inc
jp
in
mov
push
aam
ficomp
loope
add
jo
ins
aad
cmps
add
xor
fimul
sbb
push
pop
pop
xor
cli
popf
xor
leave
pusha
ss
adc
xchg
(bad)
scas
dec
es
out
aaa
leave
cmp
mov
in
ja
xor
sbb
aam
aad
daa
mov
cli
xor
cld
sar
or
add
int
int3
aas
and
(bad)
adc
add
or
fsub
daa
cmps
leave
xchg
pop
fucomip
cli
mov
je
mov
fld
mov
mov
cmp
jp
scas
retf
jb
int
pusha
jl
cdq
pop
xlat
fdiv
xchg
pop
sahf
outs
sbb
pop
lods
and
add
jbe
pop
and
add
rcr
push
sub
push
jge
movs
ret
(bad)
into
cmps
dec
in
std
fwait
and
das
mov
or
jb
nop
loop
sub
dec
fmulp
nop
push
or
in
mov
push
and
fcom
fld
into
ror
xor
sbb
push
mov
gs
lea
xchg
mov
mov
cmp
push
and
stos
xor
push
das
addr16
push
sub
jns
inc
cmc
xchg
sub
mov
dec
cmps
push
outs
sbb
je
aaa
outs
mov
jecxz
mov
cmp
adc
sar
imul
add
mov
xor
mov
test
mov
retf
das
mov
mov
or
test
pop
jmp
sbb
mov
mov
sub
jg
mov
jns
call
mov
pop
js
mov
in
aas
mov
sub
pop
inc
iret
stos
jmp
jge
adc
into
mov
fwait
loopne
mov
pusha
out
mov
lods
lock
call
jae
jecxz
inc
pop
lea
push
xor
lods
sbb
jmp
cmp
loope
adc
out
push
fcmovu
lods
xchg
xchg
sbb
daa
std
inc
dec
lock
in
fdiv
sub
mov
sahf
mov
sahf
xor
fldenv
jbe
xchg
sar
xor
mov
je
sub
daa
adc
pop
dec
and
rcr
ror
jmp
je
jp
jbe
repnz
repnz
or
mov
(bad)
lock
sub
fdivr
push
mov
adc
mov
sbb
inc
fidivr
and
dec
mov
lods
inc
div
mov
mov
ins
dec
pop
pop
ficomp
jle
mov
pop
and
das
fimul
mov
pop
mov
and
sub
push
cmp
jge
inc
shr
mov
xchg
jle
(bad)
out
rcr
pop
sbb
stos
fs
xor
div
fs
stc
pop
push
cmp
outs
push
mov
mov
mov
ror
fcmovbe
cmp
and
push
sub
fsubr
xlat
jns
sbb
in
jae
mov
or
sahf
and
or
add
jp
add
mov
hlt
mov
pop
test
(bad)
dec
mov
xor
iret
stc
popa
lea
jg
cmc
or
fidiv
and
aas
mov
loopne
and
xor
cmp
fild
mov
repnz
dec
mov
imul
jmp
xchg
test
div
mov
xor
and
xor
push
sbb
arpl
scas
outs
pop
repz
cmc
mov
popf
movs
loopne
(bad)
push
adc
daa
adc
cmp
push
retf
jmp
xchg
jge
dec
ins
mul
daa
inc
cmps
movs
loopne
sar
add
fs
inc
jbe
fadd
mov
sbb
aaa
aaa
icebp
push
mov
add
fs
cmp
arpl
xor
jecxz
rcr
xchg
xchg
in
jo
outs
fidivr
mov
call
cwde
sub
iret
stos
and
push
aad
pop
arpl
ret
jle
arpl
test
fldcw
(bad)
cmps
push
add
popa
test
shl
data16
sbb
imul
in
cld
sub
jns
sub
lods
mov
clc
scas
sti
outs
lahf
cmp
sbb
push
pusha
lock
imul
pop
jle
jns
test
in
imul
sub
in
mov
xchg
pop
ror
and
and
xchg
mov
ficomp
das
lods
pop
mov
adc
aas
fistp
cld
xabort
pop
sub
xchg
jbe
sub
(bad)
push
push
popa
sbb
es
xor
les
iret
inc
jmp
rcl
sbb
dec
rcr
mov
or
jnp
mov
pop
and
dec
cmps
mov
sbb
or
shl
fbstp
popa
sub
scas
imul
push
sti
pop
icebp
push
cmps
mov
mov
inc
aad
push
mov
in
jo
inc
inc
pop
out
enter
dec
js
sbb
cmps
repz
mov
mov
(bad)
inc
hlt
jle
lods
test
pop
push
cmp
mov
push
mov
imul
jl
pop
inc
shl
popa
or
push
jl
bound
mov
mov
mov
test
fild
mov
ss
pop
add
cmp
inc
push
hlt
pop
xor
cwde
mov
pop
std
jle
cmp
outs
popa
fisttp
not
(bad)
push
pop
stc
imul
int
xor
sbb
sahf
hlt
je
jne
js
mov
aad
or
outs
or
call
inc
aad
and
stos
mov
push
sub
mov
push
or
sub
push
call
fsubr
jmp
mov
(bad)
(bad)
mov
movs
or
and
sbb
xor
mov
xor
adc
fucomip
cmp
push
outs
inc
clc
and
push
add
retf
or
(bad)
lods
push
jge
pushf
sub
call
out
daa
sub
push
fidivr
fst
add
dec
cmp
xchg
rcr
mov
int
ins
fsub
dec
mov
adc
nop
mov
xchg
mov
push
cmp
mov
mov
xor
inc
outs
shl
fnstsw
jns
fsubr
jns
fnsave
data16
test
dec
or
test
mov
nop
iret
xchg
pop
add
je
pop
or
out
pushf
ret
jg
pushf
jae
jl
outs
sbb
cmps
sbb
xor
(bad)
push
ds
mov
test
ret
(bad)
cmp
(bad)
jmp
jmp
and
sbb
scas
inc
and
inc
test
sub
fidivr
les
mov
mov
imul
adc
mov
xor
clc
mov
push
in
cmp
push
push
cmps
inc
adc
push
and
xor
push
xchg
out
retf
test
add
push
hlt
outs
retf
ins
dec
lods
fwait
cmps
cmp
in
ret
imul
jg
push
das
mov
sub
int
and
mov
push
xor
dec
scas
dec
inc
mov
mov
pop
(bad)
fld
adc
test
test
test
enter
add
pop
(bad)
repz
push
cmp
pusha
ror
xchg
out
and
dec
dec
and
out
je
leave
push
je
shl
push
cs
jmp
pop
pop
mov
adc
dec
out
pop
adc
mov
jae
jmp
out
xchg
ret
rol
add
add
loopne
ffree
out
jg
sbb
retf
(bad)
bnd
cmp
dec
stos
push
rcr
cmp
mov
sub
cmp
jle
xchg
out
test
add
out
pop
cdq
sti
jne
cmp
or
sbb
adc
mov
test
jbe
scas
les
mov
dec
mov
retf
mov
daa
mov
into
cmp
sub
call
int
xor
xchg
adc
adc
bound
pop
dec
aaa
cmp
add
lea
bound
(bad)
xchg
mov
jle
in
xchg
push
xchg
push
gs
jg
scas
imul
sbb
cmps
int3
xlat
clc
pop
fistp
and
pop
scas
ins
push
cli
xchg
out
push
sbb
xchg
jbe
sub
jne
pop
inc
daa
fwait
inc
(bad)
sbb
frstor
setp
and
pop
outs
(bad)
imul
push
jmp
(bad)
cmp
in
gs
xor
ret
pop
mov
pop
fisub
add
int
lds
cs
ficomp
(bad)
(bad)
jp
push
int3
xor
adc
jb
dec
dec
test
pop
jecxz
jb
retf
and
aad
cld
emms
test
outs
cmp
mov
inc
cmp
call
das
arpl
inc
ins
xchg
mov
test
sbb
jb
call
mov
loopne
cmp
pop
mov
mov
rol
push
push
int
retf
xor
in
jb
xchg
fmul
xor
cmp
ins
jmp
push
mov
cmps
(bad)
jmp
scas
adc
dec
movs
jmp
dec
xlat
ja
hlt
out
sahf
fidivr
imul
or
dec
repnz
aam
iret
and
(bad)
sahf
in
xor
mov
into
or
mov
add
xchg
add
lds
ret
pop
xchg
rcl
fs
out
sub
aad
push
sub
mov
jns
movs
sbb
xchg
aaa
sub
pop
xchg
cmps
(bad)
out
mov
or
pop
ja
or
fwait
xor
mov
sbb
push
ins
arpl
and
sub
push
mov
mov
bnd
push
in
frstor
test
fistp
rol
shl
push
adc
jbe
int
cmc
and
adc
mov
loope
adc
ror
loop
jno
dec
mov
fmul
inc
and
cmp
cmp
aad
mov
xchg
aas
gs
mov
mov
sub
nop
jmp
inc
cmp
and
sbb
(bad)
push
add
call
clc
sbb
xchg
addr16
cmp
mov
gs
pusha
clc
jle
push
jle
xlat
sub
lods
mov
xor
xor
inc
adc
fs
test
mov
jmp
jle
mov
stc
sbb
sub
lock
adc
cwde
in
push
push
pop
pop
mov
cmps
push
stos
adc
push
fstp
fsubr
mov
dec
adc
ins
adc
mov
jmp
shr
sub
xrelease
(bad)
fild
out
clc
or
adc
push
bound
loopne
popa
pusha
adc
adc
arpl
push
xchg
bound
mov
ret
ret
adc
xchg
lahf
adc
dec
je
dec
xchg
lds
push
inc
std
sar
dec
jge
mov
jg
mov
mov
rol
aad
add
(bad)
ins
arpl
gs
pop
dec
jns
dec
or
push
adc
inc
mov
mov
add
dec
rcl
test
pop
(bad)
scas
cwde
jnp
cmps
mov
fld
retf
pusha
test
pusha
enter
(bad)
sub
(bad)
loopne
jmp
push
inc
or
sbb
clc
sbb
(bad)
nop
mov
in
aam
sbb
inc
call
sub
adc
mov
sbb
jge
pop
jae
sub
retf
push
or
inc
cwde
inc
lods
and
outs
int
fdiv
jg
cdq
dec
clc
inc
jecxz
jle
fs
sub
fwait
addr16
cmps
mov
frstor
dec
cmps
push
jbe
js
add
ficom
enter
jnp
int3
mov
pop
add
inc
in
sbb
xchg
dec
pusha
aam
icebp
fnsave
in
cmps
mov
pop
dec
xlat
push
sbb
mov
sbb
out
fsubr
jge
or
push
gs
ins
sbb
(bad)
cmp
aas
xchg
pop
leave
jle
inc
movs
pusha
(bad)
pop
adc
inc
std
jae
push
adc
mov
imul
push
jle
cmp
imul
xor
cdq
jne
mov
mov
mov
in
mov
xchg
pop
cmp
add
retf
mov
jmp
mov
or
lds
lahf
in
jae
clc
xchg
and
rcl
push
out
arpl
add
or
xchg
mov
mov
in
sbb
test
add
sub
mov
adc
and
inc
hlt
push
sbb
xor
fcomp
jg
mov
aam
mov
or
arpl
in
test
clc
or
sbb
fldenv
mov
xchg
pop
vpshufd
rcl
nop
or
sbb
gs
(bad)
jno
arpl
push
arpl
rcr
test
mov
dec
retf
imul
sub
inc
jge
nop
cli
sti
sti
loopne
popf
pop
jmp
ins
jle
mov
out
dec
in
xlat
mov
cmc
ret
push
movs
mov
cmp
lea
inc
xor
popa
fwait
mov
and
push
or
lahf
fsubr
mov
outs
xchg
sbb
scas
cmp
loopne
in
lds
sbb
push
mov
cmc
(bad)
xchg
aad
lods
in
test
mov
mov
sbb
mov
daa
xchg
jle
ins
push
popf
sub
pop
sahf
cmp
aas
mov
call
fld
push
dec
aam
xchg
push
popf
fs
xchg
mov
arpl
sbb
cld
out
fisttp
into
adc
test
jns
push
in
xor
sub
shl
pop
mov
inc
mov
inc
add
clc
test
mov
add
push
push
push
mov
mov
add
cmp
jp
imul
sbb
cli
cld
push
mov
push
pop
fst
cmp
js
mov
push
movs
dec
xchg
xlat
pusha
mov
mov
(bad)
shl
scas
push
retf
lahf
mov
inc
dec
retf
jecxz
pusha
add
xchg
cmp
or
nop
or
inc
(bad)
pusha
mov
hlt
addr16
mov
adc
shl
cdq
inc
push
push
test
dec
out
xor
pop
mov
pop
xor
std
xchg
pop
cwde
mov
mov
mov
or
les
outs
(bad)
fidiv
fcomi
(bad)
push
push
scas
aad
aaa
aad
inc
cvtps2pd
pop
outs
stc
inc
fmul
mov
in
sbb
mov
pop
xor
xor
jne
movs
cdq
xor
dec
push
cmp
call
push
into
adc
pop
in
sub
sub
pop
mov
test
sbb
scas
ret
sub
add
push
mul
ficom
push
mov
sub
dec
dec
push
dec
jge
and
pmullw
in
dec
xchg
cmp
jbe
jo
or
(bad)
lea
fdivr
and
xor
jg
rcr
add
cld
jge
mov
mov
mov
mov
movs
(bad)
sbb
jae
loop
ins
fs
pop
mov
or
jp
fsubrp
dec
je
mov
xor
push
fwait
es
xchg
repz
(bad)
adc
fldenv
in
sbb
xchg
and
sub
sar
dec
or
jae
mov
rcl
or
stc
mov
inc
sub
les
in
div
mov
ds
xor
mov
jg
jno
aam
in
jge
push
mov
sub
cdq
add
adc
(bad)
sub
sub
pop
repz
shr
sub
sub
jp
xchg
mov
mov
cmp
xchg
and
sbb
int
iret
icebp
sub
sbb
scas
mov
sub
imul
inc
pop
mov
repz
aam
or
scas
or
xor
dec
cmc
push
retf
fld
jno
push
in
movs
sub
and
adc
jmp
(bad)
xor
cs
push
je
jne
pop
cli
jecxz
test
out
jae
cmp
(bad)
out
cld
push
movs
fwait
test
repz
or
in
mov
inc
mov
sbb
imul
jnp
sahf
test
sub
in
(bad)
fnsave
cmp
in
push
jl
pop
mov
jb
arpl
push
(bad)
sti
sti
data16
(bad)
int3
outs
xlat
and
ins
jp
or
stos
dec
test
cli
mov
inc
push
inc
mov
push
aaa
cmp
ins
jle
call
retf
jnp
mov
mov
xor
adc
ja
fidivr
jl
and
arpl
jmp
sbb
loop
aam
jnp
test
fsubr
cmps
lds
dec
outs
fidiv
cld
ss
inc
pop
add
add
mov
inc
cdq
adc
outs
mov
stos
loope
pop
jo
xchg
sub
push
inc
test
fisttp
push
(bad)
mov
mov
out
xchg
retf
test
xchg
imul
jp
les
popa
inc
inc
and
shr
nop
mov
cmp
cmp
ja
pushf
mov
and
mov
aad
and
pushf
xchg
in
pop
iret
idiv
mov
(bad)
mov
xchg
sbb
mov
xchg
sbb
push
push
mov
jmp
mov
push
or
daa
add
mov
adc
and
call
aas
add
push
repnz
add
call
cmp
cmp
mov
mov
in
sbb
aas
inc
out
pop
in
mov
and
lea
inc
adc
test
adc
dec
mov
pop
loop
cmp
xor
outs
mov
lods
lods
dec
mov
sub
fist
or
fimul
push
pop
loope
int
inc
pop
iret
sub
and
mov
iret
mov
bound
(bad)
pusha
mov
loopne
pop
inc
dec
ja
dec
call
and
dec
cwde
fstp
xor
mov
jg
mov
push
inc
out
inc
cmp
stc
adc
(bad)
ins
int
jg
sub
mov
bound
xor
rol
inc
jle
cmc
or
mov
xchg
dec
cld
fdiv
(bad)
jmp
psubsb
xor
(bad)
stos
dec
lock
test
out
xchg
sub
js
jp
ja
(bad)
mov
mov
jl
sbb
xlat
add
adc
je
sub
push
popf
dec
xor
js
inc
cmp
mov
xchg
ja
and
mov
adc
dec
mov
sbb
or
pop
outs
xchg
push
outs
lea
mov
dec
dec
mov
leave
mov
js
add
sub
cmp
sub
or
inc
mov
jg
loope
cmp
push
cmp
cli
fcmovu
not
out
mov
push
mov
jo
jno
pusha
mov
in
test
push
iret
pusha
in
sbb
fmulp
jno
stc
bound
mov
ror
cwde
and
clc
sbb
pop
mov
sbb
(bad)
test
xchg
cmp
dec
into
sbb
bound
fsub
fild
call
lods
movs
sbb
aad
xor
or
dec
fs
mov
or
adc
add
jmp
push
out
sahf
xchg
sub
pop
jecxz
out
push
dec
fdivr
data16
ins
add
sub
mov
push
(bad)
cmp
out
fxch
int3
clc
xchg
or
test
scas
mov
cli
test
cmp
mov
std
mov
jl
adc
sbb
and
mov
mov
shl
adc
jmp
jo
xor
dec
cmc
jp
out
and
mov
sbb
out
xchg
sub
lock
push
pushf
lea
inc
mov
cld
jle
jmp
daa
fcom
push
push
test
inc
pop
sub
outs
and
adc
imul
sub
add
push
dec
pop
push
hlt
pop
and
jecxz
jge
retf
mov
cwde
add
rcl
mov
sbb
lods
gs
adc
gs
fst
adc
jg
pusha
icebp
(bad)
mov
xchg
inc
push
int
pop
jbe
icebp
outs
inc
push
das
push
fiadd
(bad)
cmps
test
dec
and
clc
or
popf
inc
lahf
or
ror
scas
jecxz
test
jne
repnz
ins
mov
add
pop
test
ror
pop
dec
sub
nop
arpl
ret
loope
out
mov
dec
add
xlat
xlat
addr16
sbb
fisttp
xchg
sbb
repz
aam
test
xor
(bad)
cwde
(bad)
push
pop
je
jp
fwait
lods
or
aad
addr16
jmp
xchg
add
push
movs
push
dec
add
fcmovbe
jnp
add
pushf
and
inc
ret
jle
(bad)
imul
hlt
adc
add
xor
adc
xor
push
push
push
add
pushf
xor
jp
cmp
stos
cmp
jl
rcr
inc
mov
mov
aad
in
sub
push
jle
mov
es
mov
add
add
cmp
mov
pop
push
mov
sub
mov
ror
adc
jne
pop
movs
lods
xor
inc
mul
lds
in
mov
(bad)
sbb
xor
jnp
enter
mov
mov
jg
outs
dec
push
xor
fwait
xchg
sahf
or
adc
dec
or
pop
stos
div
repnz
dec
icebp
or
mov
mov
sbb
mov
mov
das
xrelease
ss
mov
xor
sbb
or
sbb
test
xlat
fs
xchg
arpl
(bad)
mov
dec
dec
inc
out
icebp
movs
fild
loop
wrmsr
popa
xor
mov
aas
pop
lods
cld
push
lods
push
adc
dec
pop
lds
add
movs
mov
daa
xchg
jns
mov
sub
std
es
out
jb
cld
inc
xchg
jnp
fwait
xor
scas
mov
mov
aas
dec
call
mov
mov
mov
movs
iret
fsubrp
push
ins
nop
mov
pop
jns
movs
ss
jne
hlt
add
enter
sbb
loope
inc
stos
xor
cmp
pop
cmp
test
stos
pop
mov
push
loop
outs
adc
jmp
jo
in
push
movs
nop
icebp
out
jnp
push
mov
movs
mov
cmp
push
push
adc
jo
imul
je
fsubr
xchg
mov
jecxz
retf
fs
cmps
mov
mov
lea
sbb
ins
sub
mov
inc
addr16
(bad)
arpl
imul
or
shr
sub
cli
or
test
pop
test
js
mov
inc
loopne
and
push
xor
out
inc
fcmovnu
lahf
(bad)
jmp
enter
dec
push
jl
xor
sub
xchg
push
push
ss
pop
sar
fbstp
xor
lods
xor
fldenv
and
fld
dec
push
and
jmp
jbe
out
add
mov
pop
sub
inc
ror
in
fdiv
mov
dec
pop
test
imul
arpl
ret
mov
adc
sbb
into
inc
call
es
jbe
idiv
pop
or
(bad)
cs
sub
das
mov
xchg
xlat
xchg
and
cwde
xchg
addr16
dec
rcl
ret
dec
pop
out
inc
sbb
pop
rcr
je
adc
nop
ret
pop
push
pop
into
loopne
leave
pop
adc
std
pop
pop
pop
dec
and
inc
fcmovu
sbb
mov
cmp
xchg
mov
mov
call
jb
psubusw
push
cmp
pop
(bad)
mov
lahf
fldenv
inc
xchg
in
std
push
bound
adc
repz
retf
pop
ins
or
inc
(bad)
dec
out
int
mov
aas
mov
xlat
ja
inc
push
xchg
inc
dec
ror
add
or
or
sti
clc
pop
mov
cmovg
ret
jo
mov
pop
mov
jmp
enter
inc
aas
cmp
repnz
cmp
mov
jns
pop
or
ss
test
jnp
shl
pop
jmp
ret
cdq
shl
hlt
sbb
inc
mov
xor
push
int3
adc
retf
jg
lea
mov
and
les
pop
test
shl
pop
fldcw
mov
fnstsw
daa
push
pushf
mov
ins
add
sub
in
ret
mov
movs
or
xor
jmp
cdq
cmp
scas
jns
push
retf
out
or
(bad)
cdq
out
push
test
cmp
sbb
(bad)
mov
les
(bad)
mov
mov
in
clc
push
add
dec
daa
int3
jae
mov
jae
dec
pushf
dec
mov
lock
lods
js
mov
daa
(bad)
mov
rcl
xchg
sti
les
cmp
xchg
fisttp
mov
lock
or
dec
sbb
int
jl
neg
mov
ja
test
cmps
jne
cmp
mov
pusha
mov
(bad)
pop
xchg
movs
inc
inc
jbe
push
hlt
and
int3
shr
outs
leavew
push
sbb
rol
adc
popa
pop
mov
lock
scas
fsubr
push
cmps
arpl
xlat
sub
icebp
shl
or
mov
push
push
and
daa
adc
std
pop
or
ja
ror
in
ins
movs
xchg
adc
cli
or
bound
cmp
out
clc
test
sbb
push
gs
aas
int
call
dec
rcr
xchg
lods
xchg
int3
jmp
(bad)
les
jns
icebp
rcl
ins
ja
and
sub
dec
mov
out
aas
sbb
or
mov
fxch
sub
sbb
or
in
(bad)
xor
jmp
dec
repz
out
ror
add
sub
icebp
in
and
stos
jne
cmp
cmp
pop
pop
inc
cdq
std
movs
cli
adc
nop
pusha
dec
jp
xchg
cmp
dec
fmul
hlt
sbb
jno
mov
pop
int
add
xor
retf
outs
repnz
mov
jno
jns
imul
movaps
dec
in
mov
(bad)
sbb
xchg
ins
jnp
stos
jno
enterw
loop
leave
leave
dec
jmp
cli
sub
out
shl
xchg
imul
dec
test
push
xchg
(bad)
fwait
or
push
dec
cmc
push
mov
push
mov
dec
fwait
and
inc
or
push
das
lea
add
data16
mov
ret
out
pop
jg
shl
cmps
les
lahf
test
dec
adc
and
mov
iret
pop
xchg
xchg
pop
mov
dec
repz
sbb
sub
pushf
std
inc
mov
out
push
movs
inc
repnz
bound
test
ss
sub
mov
adc
addr16
push
push
movs
es
sub
popa
sub
cmp
pmuludq
adc
dec
jno
test
or
inc
call
lods
adc
out
aas
push
inc
fst
sub
inc
not
sub
and
cld
jb
or
sbb
sub
mov
sub
cli
dec
xlat
leave
jnp
mov
cmp
fucomp
mov
(bad)
adc
dec
add
add
jno
jae
into
in
mov
inc
pop
add
movs
jno
mov
loopne
daa
mov
sahf
push
xor
jns
adc
jne
xchg
fwait
scas
(bad)
(bad)
aad
lods
movs
fstp
addr16
daa
in
pop
mov
fisttp
adc
xor
xchg
xchg
out
cld
mov
dec
int3
icebp
cwde
(bad)
adc
push
movs
cmp
or
sbb
add
nop
ret
cwde
or
cld
push
fs
imul
jge
(bad)
mov
and
int3
adc
(bad)
out
stc
lds
pop
mov
pop
mov
inc
cmp
jnp
test
sub
je
bound
pop
mov
(bad)
inc
push
in
call
bound
cdq
push
lds
fist
mov
fwait
or
cmp
shr
xor
mov
shr
retf
dec
(bad)
pop
push
data16
cmp
sub
dec
stc
xchg
xchg
fsubp
out
sbb
sub
push
shr
int3
icebp
and
repz
jmp
call
xlat
push
mov
jnp
adc
test
ret
push
lods
add
mov
sub
jmp
sub
pushf
fwait
shl
popa
or
pushf
fisttp
and
stos
ins
mov
enter
lahf
jnp
cmp
cmps
push
arpl
fcomi
outs
mov
push
sti
xchg
aas
daa
add
cmps
out
aas
adc
js
repz
lods
clc
xor
scas
not
daa
inc
fadd
push
sbb
push
push
outs
jmp
leave
in
xchg
fs
adc
dec
add
call
mov
mov
(bad)
xchg
(bad)
xor
in
inc
cmps
adc
pop
sbb
popa
sbb
jo
jno
gs
mul
hlt
in
or
retf
mov
(bad)
adc
adc
out
push
mov
fst
dec
test
cwde
sbb
adc
sbb
mov
sbb
adc
adc
dec
lock
retf
mov
sahf
inc
ds
pushf
(bad)
shr
lods
push
push
add
xchg
adc
push
or
vpshad
inc
je
push
mov
movs
das
mov
shl
in
popa
dec
outs
add
pop
call
mov
inc
add
aam
in
clc
inc
and
or
cmp
idiv
cmp
or
mov
mov
retf
scas
jmp
lahf
adc
sbb
(bad)
cwde
mov
and
dec
dec
sub
push
push
and
and
push
cmp
je
push
shl
pop
and
xor
jmp
es
adc
or
mov
gs
sub
(bad)
jo
add
cli
pop
ficom
aad
mov
inc
cs
cmc
sahf
sbb
popf
test
cld
cld
rol
and
es
add
jp
pop
or
add
into
xchg
mov
sbb
pop
jae
pop
jg
push
pop
aam
pop
sbb
movs
push
outs
repnz
aas
pop
or
inc
shr
xor
stos
movs
aam
mov
rol
and
cmp
aas
aam
mov
test
call
mov
pusha
pop
mov
adc
mov
mov
int
adc
loop
push
(bad)
test
and
xor
cmp
and
scas
pop
dec
sbb
xchg
test
arpl
push
iret
mov
or
pop
sbb
jge
clc
ret
ret
fmul
stos
push
inc
(bad)
jmp
fdivrp
push
push
cwde
pop
pop
aas
or
xchg
cli
sbb
aaa
push
lsl
int
sbb
mov
push
cdq
xor
stc
dec
xchg
cwde
loope
fldenv
pop
pop
add
and
jae
push
add
pop
add
and
adc
jbe
(bad)
(bad)
bound
and
int3
iret
sahf
xlat
lock
cmps
dec
shl
retf
clc
pop
das
sub
sub
jnp
adc
stos
stos
and
mul
aam
pop
cmc
add
push
xchg
cmp
icebp
retf
clc
adc
add
(bad)
retf
loope
pop
ret
xor
fwait
mov
mov
scas
add
pop
mov
push
sbb
fs
and
or
stc
inc
or
cmp
(bad)
sbb
addr16
mov
lock
pop
or
mov
mov
(bad)
out
arpl
outs
cwde
or
and
adc
faddp
ins
inc
mov
fucomi
add
mov
and
inc
lea
cmp
sahf
inc
sti
cmp
in
jecxz
hlt
jecxz
jne
mov
leave
test
mov
sub
stos
dec
mov
aas
ds
cmp
(bad)
pop
cmp
mov
and
call
cmp
cdq
mov
nop
pop
inc
dec
leave
mov
ins
test
dec
sub
out
push
adc
pop
cld
imul
push
jae
add
sbb
jge
add
stc
inc
sbb
int
xchg
jae
cmp
sub
je
(bad)
jbe
push
aas
push
jne
iret
dec
jno
add
rcr
inc
xor
adc
mov
adc
mov
pop
or
add
stos
sbb
ins
out
pusha
ret
mov
mov
int
cli
jl
call
xchg
hlt
test
xor
dec
(bad)
jmp
or
mov
xlat
xor
cs
mov
jo
jg
loopne
mov
dec
inc
push
xchg
sbb
sbb
lea
push
dec
lods
push
and
test
in
adc
hlt
in
ins
jnp
xlat
fcom
mov
xchg
mov
cmc
xchg
push
mov
xchg
ret
bound
xchg
and
push
outs
dec
push
(bad)
push
jg
or
lahf
mov
pop
adc
sub
fs
xor
cmps
jmp
jmp
add
sti
adc
xchg
inc
dec
mov
mov
mov
jge
mov
sub
xlat
(bad)
sbb
sub
(bad)
loop
pushf
scas
aad
test
enter
ret
test
scas
mov
adc
jecxz
icebp
stos
ins
sbb
scas
and
jns
cdq
shr
in
sbb
inc
call
sbb
gs
jo
mov
aam
cdq
iret
adc
fsub
push
xchg
jns
into
add
pop
adc
add
adc
push
cmp
lea
inc
jb
add
sti
adc
fist
cmp
mov
cs
lds
cmp
loop
mov
loope
leave
bound
adc
push
push
add
mov
or
fbld
xor
aam
fcmove
mov
mov
pushf
pop
jle
pop
mov
fisub
test
inc
test
jmp
in
and
jo
ins
(bad)
std
fs
add
das
mov
mov
inc
jo
xlat
inc
cmp
inc
hlt
pop
outs
mov
mov
mov
and
add
arpl
cdq
push
pop
leave
int3
xchg
jb
jns
retf
pop
adc
xchg
and
dec
pop
fdivr
cmp
rcr
add
pop
and
mov
test
xchg
std
xchg
jmp
dec
iret
out
pop
mov
sti
mov
adc
in
adc
mov
inc
daa
sbb
or
jp
(bad)
popa
retf
xlat
mov
inc
fidivr
cld
and
pop
inc
or
mov
outs
mov
push
sbb
clc
pusha
ret
and
hlt
mov
jne
pop
push
in
mov
movs
(bad)
mov
mov
jne
(bad)
std
out
fs
call
nop
ds
cmp
push
dec
pop
lea
in
fstp
mov
stos
movs
sti
imul
sub
jge
push
stc
int
shl
aam
mov
xor
cmp
and
adc
and
aaa
mov
adc
mov
fldcw
cmc
out
daa
mov
adc
push
xchg
sbb
cs
or
mov
jle
jmp
cld
sbb
cmp
pop
rcr
in
pop
and
xchg
lods
pop
cmovp
out
rcr
jecxz
and
and
es
neg
int
call
enter
mov
inc
outs
xchg
bound
sbb
test
ret
cwde
data16
jge
mov
ret
or
xchg
fld
loope
hlt
and
psubq
je
aam
fwait
repz
jne
leave
sbb
js
sti
add
fs
mov
cmp
xchg
data16
leave
stc
mov
int3
dec
push
xchg
out
aad
mov
test
pop
in
cmps
sub
sbb
push
lea
add
dec
inc
add
sti
dec
inc
mov
in
jns
pop
adc
cmp
jmp
xor
pusha
mov
gs
pop
lock
into
sbb
or
jl
rol
sub
retf
mov
fwait
inc
sti
leave
inc
dec
mov
movs
inc
and
in
jns
aam
repnz
xchg
mov
pop
add
xchg
inc
cdq
popa
jp
add
dec
fs
mov
adc
push
inc
push
in
sahf
jae
xchg
xchg
cmp
cmp
inc
add
aas
data16
jb
popf
into
movs
cmp
pop
pop
jl
mov
adc
fisubr
mov
jp
mov
(bad)
test
int
xor
les
jo
xchg
xchg
add
outs
sbb
dec
pop
iret
mov
xchg
jle
cld
add
dec
or
leave
fsubr
push
adc
stos
mov
mov
add
jl
fisubr
inc
sbb
dec
sbb
xchg
in
sbb
mov
push
mov
call
pusha
test
fistp
aad
add
pop
add
jmp
add
jne
or
fwait
xor
aas
xor
or
ds
call
or
fnstenv
adc
inc
in
or
out
add
call
cs
jno
data16
or
int
push
aam
add
popf
push
push
cdq
inc
(bad)
js
cmp
xchg
gs
ret
add
xor
inc
sar
les
aaa
jae
jb
shl
xlat
mov
addr16
fdivr
cmp
(bad)
out
(bad)
jb
push
push
inc
xchg
adc
xor
ret
out
mov
frstor
inc
frndint
xor
les
repnz
mov
out
push
addr16
in
mov
inc
mov
or
fiadd
pop
and
jl
dec
pop
cli
movs
pop
mov
pop
mov
out
call
fist
cmps
in
cmp
popa
sub
pop
mov
inc
loop
cld
loop
mov
jp
sbb
sub
and
pop
or
pop
push
mov
and
ins
repz
jne
sub
mov
cmp
mov
push
mov
les
and
popf
leave
rol
test
pop
cwde
in
sub
in
mov
mov
jecxz
(bad)
cli
pop
out
or
out
pop
test
cmp
mov
xor
cmp
or
ja
push
pop
cmp
or
push
dec
(bad)
pop
sub
into
inc
(bad)
sub
pop
sbb
stos
cdq
cli
jb
mov
(bad)
enter
dec
xlat
out
dec
cmc
or
push
sbb
mov
popa
movs
xchg
push
sub
xchg
(bad)
xor
push
aas
jp
xchg
sub
jg
or
test
pop
lods
add
push
in
mov
sub
mov
pop
sub
shr
iret
ror
pop
pop
add
leave
lahf
push
loop
mov
xor
and
sub
mov
sbb
adc
sbb
mov
mov
mov
push
sub
inc
jle
adc
add
call
test
cmp
xor
push
mov
pop
cmp
jno
lods
aad
mov
bound
push
sub
cld
push
mov
xchg
jnp
jmp
mov
add
arpl
inc
addr16
aaa
cmp
push
adc
aas
jns
mov
sub
jl
(bad)
pop
inc
xlat
sub
in
retf
mov
hlt
lods
cs
gs
add
cmp
dec
jns
dec
inc
pop
pop
jo
rol
cmp
or
aaa
mov
cmps
sub
movs
rcr
dec
push
sub
popf
imul
dec
aas
std
xor
or
and
ins
fisttp
xchg
sbb
xlat
les
scas
mov
mov
outs
in
js
and
popa
frstor
push
push
test
jbe
gs
cmp
pop
cmp
adc
ret
sbb
push
jne
iret
or
inc
clc
rcr
inc
jg
rcl
mov
loopne
dec
and
add
imul
test
out
jg
mov
aam
sub
ins
xor
fisttp
dec
not
add
cmp
push
or
jecxz
xchg
cmp
int3
ret
aam
out
pushf
sbb
das
out
sahf
pop
lahf
adc
jae
arpl
ja
or
out
and
add
mov
movs
call
jp
fistp
push
test
xor
xor
inc
out
mov
xchg
adc
mov
sub
jnp
aaa
mov
movs
in
add
jnp
jl
pop
lods
js
pop
cmc
pop
pop
mov
mov
jl
jnp
cmps
jp
xchg
and
aaa
mov
pop
xchg
mov
cli
loope
jmp
call
mov
and
push
aam
add
xor
sub
push
ins
mov
retf
aad
cdq
cli
pushf
dec
frstor
push
ret
or
push
inc
lahf
xchg
dec
cmc
pop
fs
sub
dec
aad
stos
mov
pop
xor
sub
jle
xor
das
popa
mov
adc
gs
loopne
loop
dec
fisttp
sti
jecxz
aas
xchg
stos
cld
inc
xor
jno
mov
push
lds
test
ret
cmp
add
xchg
cmp
popf
sub
inc
adc
jnp
add
inc
dec
jno
or
mov
mov
imul
popa
pushf
loopne
arpl
call
les
outs
cmp
jmp
cmp
mov
and
dec
enter
cmp
mov
ds
jp
repnz
xor
sbb
jae
jb
jge
aaa
aas
xor
mov
ins
aam
jmp
jno
add
sub
out
lods
pop
push
iret
lods
cdq
push
sbb
int
push
popf
adc
dec
and
and
mov
std
shr
clc
or
jo
jge
cmp
mov
jmp
jne
call
test
rcr
push
fmul
add
and
add
jecxz
mov
pop
push
and
or
sub
mov
daa
(bad)
mov
cld
pop
xor
pop
pop
push
xor
push
sub
jb
adc
ret
in
sahf
or
arpl
in
sbb
les
test
pop
sar
(bad)
in
call
push
mov
outs
test
arpl
ficomp
iret
rcr
ret
jne
int
cs
(bad)
(bad)
jae
xchg
dec
daa
sub
adc
xchg
jg
idiv
mov
iret
sahf
mov
sbb
cmp
xlat
rol
nop
cmps
test
push
dec
nop
into
push
call
add
loop
push
mov
in
xor
lods
clc
sbb
jmp
xor
outs
xchg
mov
push
hlt
xchg
cmc
and
mov
lods
dec
inc
fst
xchg
adc
retf
dec
lods
add
jp
mov
xor
lods
mov
dec
stos
ror
mov
xchg
bound
test
int
test
jne
cmp
push
popa
adc
cmp
mov
cdq
mov
jge
pop
hlt
arpl
pop
popf
push
xchg
mov
mov
pop
iret
dec
sar
dec
popf
adc
add
pop
sub
jecxz
icebp
inc
sub
cld
shl
and
add
je
push
or
cmc
lock
pusha
lahf
adc
test
ds
(bad)
(bad)
cmc
sub
cli
not
push
in
mov
loop
pop
pop
sbb
imul
inc
sbb
movs
cmp
rol
sbb
stos
jbe
adc
add
push
das
add
cwde
stos
or
mov
jmp
mov
test
and
jo
div
retf
mov
fst
data16
push
dec
int3
push
shl
int
es
inc
(bad)
or
cmp
leave
imul
daa
sti
jg
scas
dec
pushf
jmp
ds
loop
adc
sub
add
sub
fwait
in
mov
rol
pop
scas
adc
sub
shr
sub
push
ror
pushf
out
add
mov
(bad)
sbb
push
int3
mov
scas
add
cmp
sbb
push
bound
dec
adc
xchg
cdq
xor
loopne
loop
shl
jo
lods
inc
clc
sub
xchg
push
scas
test
mov
pusha
ins
xor
je
or
jnp
rcr
pop
movs
add
jg
shl
ret
xchg
or
in
add
mov
jns
and
in
lods
inc
mov
jmp
dec
mov
fs
sub
retf
ja
add
ds
cld
mov
in
dec
cs
out
jns
dec
xchg
mov
out
push
or
(bad)
(bad)
mov
shl
sub
js
mov
xor
pop
pop
int3
rep
cwde
xchg
imul
jmp
adc
push
ret
pop
fs
push
xchg
fidivr
dec
dec
outs
mov
cli
jp
mov
sub
push
hlt
push
bound
jnp
mov
or
jge
mov
jne
push
ret
jge
stos
popa
or
add
nop
call
leave
int3
cmp
mov
mov
jp
not
aad
loopne
pop
mov
xchg
pop
sbb
retf
ret
sbb
xor
data16
sbb
or
xchg
push
sub
xchg
cld
out
in
mov
push
clc
(bad)
push
hlt
(bad)
or
mov
mov
call
adc
aam
xor
sub
mov
rol
mov
mov
adc
cmps
mov
inc
jg
sbb
aaa
leave
push
(bad)
jp
(bad)
mov
and
adc
sub
mov
pop
mov
mov
jg
inc
loopne
and
or
sbb
rol
adc
ins
rol
xor
and
cld
add
xor
ffreep
mov
cmp
push
pop
fcmovbe
ds
imul
fstp
stos
jge
stos
xchg
lock
test
fstp
mov
lds
pop
scas
sbb
sbb
lock
add
lds
jnp
stc
xchg
lahf
add
jp
fcmovne
adc
idiv
sbb
xor
leave
iret
pop
xor
and
dec
cmc
mov
out
sub
shr
jl
pop
adc
call
jl
rcl
mov
mov
daa
dec
shl
out
test
(bad)
xchg
add
xor
cmp
xchg
daa
jmp
sub
popa
mov
and
adc
mov
inc
pop
ja
call
push
cmp
and
std
ss
cdq
sub
ss
fs
cmps
neg
pusha
adc
sbb
cmp
mov
pop
xor
aad
test
cs
les
xor
cmp
std
inc
lods
xchg
lods
mov
sbb
or
imul
jnp
out
push
mov
mov
pop
sub
dec
adc
add
ds
mov
add
fistp
lock
mov
mov
sbb
fadd
dec
loope
inc
cmc
mov
jecxz
cli
mov
mov
(bad)
in
pop
sar
call
sub
test
and
jp
or
stos
(bad)
mov
sub
xor
nop
or
or
xchg
pop
push
popf
mov
mov
pop
pop
jmp
fldcw
fild
inc
movs
dec
into
mov
mov
retf
fwait
add
mov
sbb
sub
call
cmp
xlat
mov
stos
mov
jmp
cmp
push
sbb
hlt
lahf
push
jns
jne
loop
(bad)
arpl
xor
mov
xchg
mov
sub
and
dec
push
push
cmps
mov
xor
neg
lock
inc
out
int
call
and
jmp
out
sbb
or
sbb
add
cwde
mov
stos
(bad)
xor
mov
aad
cmps
add
(bad)
gs
inc
jl
dec
sahf
in
xor
add
xchg
jne
sub
pop
pop
pop
pop
fsubr
jno
mov
mov
jp
pop
enter
shr
mul
pop
rol
mov
push
cmps
popa
dec
cvtps2pi
cmp
call
xchg
xlat
pop
cmp
fiadd
icebp
jmp
shl
(bad)
call
xchg
in
mov
rol
daa
pop
mov
fwait
ins
cmovge
adc
stos
outs
cld
add
mov
test
pop
push
ret
cmp
add
push
xor
outs
cmps
ss
iret
cmp
repnz
xor
mov
add
inc
stos
adc
lahf
xchg
pusha
shl
nop
scas
repnz
fwait
pop
jbe
sbb
gs
inc
jg
into
pop
fs
add
adc
mov
fsubrp
stc
into
xchg
and
sbb
retf
or
mov
in
call
or
mov
mov
in
sti
(bad)
aad
(bad)
pop
mov
nop
add
repz
int
(bad)
cs
jno
outs
sbb
mov
nop
sub
inc
bswap
push
pop
xchg
cmp
inc
movs
inc
jae
shl
mov
or
mov
pushf
mov
dec
push
mov
ds
cdq
aas
std
cmp
jno
call
xor
inc
in
jmp
std
cmp
cwde
lahf
mov
ss
outs
inc
adc
dec
out
rcr
add
sahf
sub
into
xor
add
xchg
das
sub
jp
(bad)
sar
dec
push
dec
mov
and
cmp
jle
ds
ins
xlat
inc
pop
or
outs
ds
mov
loop
outs
mov
popf
mov
push
mov
jnp
or
(bad)
ret
es
scas
ss
movs
jb
movs
test
aas
jns
cmp
inc
jno
add
push
pop
out
and
in
lahf
test
dec
inc
xlat
loopne
neg
inc
jae
cmp
xchg
hlt
add
push
xchg
loopne
loopne
ret
jns
xchg
dec
es
add
fist
outs
mov
pop
xchg
jno
push
inc
mov
push
ja
popf
fsub
imul
jg
lods
lock
sbb
fadd
dec
mov
or
ss
sub
test
xchg
jo
xchg
sub
xchg
mov
outs
repz
xor
gs
aad
out
daa
add
lock
neg
pop
mov
repnz
adc
out
lock
lock
addr16
xchg
add
jno
pusha
mov
sbb
jle
(bad)
and
adc
sbb
push
inc
xor
mov
sub
fwait
(bad)
cmp
rcl
repnz
cmp
mov
pop
push
cmp
outs
and
pushf
and
lods
js
(bad)
inc
loope
xchg
inc
call
push
xor
enter
mov
add
aam
fucomi
sub
mov
push
cmp
jo
cmps
or
mov
push
push
push
fdiv
call
pop
mov
mov
fnstenv
push
(bad)
pop
sub
out
int
add
out
adc
sub
fnstenv
and
sbb
aam
cmps
jle
pop
push
jo
adc
jb
jne
sbb
and
and
mov
push
pop
aam
mov
jns
mov
xor
fld
out
jnp
int3
mov
scas
dec
mov
xchg
cmc
jg
fdivr
mov
dec
cmps
xor
out
sbb
jno
loope
sbb
sub
test
cli
popa
movs
mov
les
jne
repz
(bad)
and
movs
or
in
int3
stc
(bad)
pop
pop
aaa
in
scas
in
push
pop
xor
sub
adc
jmp
(bad)
pop
jnp
sbb
cmc
mov
sbb
cmp
jnp
shl
mov
cli
out
je
pop
ss
iret
cmp
in
sbb
mov
mov
out
stos
gs
stc
dec
xlat
jle
repnz
adc
dec
xor
lods
jecxz
sbb
mov
xor
pop
jg
inc
ins
daa
pop
jge
fst
sar
xchg
es
push
sbb
jae
inc
add
push
pop
xchg
and
push
fs
pop
rcr
mov
xor
push
and
das
add
or
shl
pop
fist
cmp
call
int
cli
test
call
int
fucompp
sbb
xchg
fidiv
dec
xor
stos
add
push
rol
or
outs
cmp
enter
xlat
fwait
ja
push
fmul
daa
add
sbb
add
pop
jge
fcomp
cld
mul
push
int
int3
jae
(bad)
xchg
push
sub
fsubr
cmps
sti
jbe
test
fbstp
dec
imul
cld
push
sub
bound
jl
inc
sbb
pop
das
push
rcr
pusha
loopne
cmp
lds
mov
push
and
iret
stc
scas
jns
not
aad
and
loopne
dec
cmps
daa
mov
jp
sbb
mov
ja
sbb
mov
xchg
cmp
adc
mov
call
sti
aad
daa
sti
sub
xchg
add
adc
mov
jl
popa
adc
and
pop
fwait
mov
mov
cmp
xchg
std
loope
shl
aaa
inc
imul
ja
mov
pushf
shr
aas
sahf
push
mov
pop
outs
aam
pop
jmp
gs
xchg
mov
gs
or
and
jns
xor
mov
and
push
enter
(bad)
(bad)
idiv
xchg
pop
xor
lock
inc
out
mov
call
jecxz
lea
mov
sub
les
ds
push
mov
mov
stos
outs
ins
fmul
dec
jle
mov
cmp
ins
leave
call
jmp
in
mov
cmp
popf
mov
push
add
sbb
lock
scas
jmp
int3
pop
call
(bad)
jmp
in
mov
pop
mov
xor
push
shl
and
hlt
int3
xor
mov
fs
dec
add
mov
mov
jmp
bswap
sbb
sub
pushf
jmp
mov
imul
add
imul
cli
pop
push
push
jno
(bad)
out
jge
inc
jno
shl
pop
adc
dec
jp
mov
stos
pop
adc
cmc
sub
ret
mov
xchg
fadd
lods
jae
stc
out
mov
sub
(bad)
rcr
int
mov
mov
test
cmps
es
xor
jmp
mov
aaa
xchg
jne
rcr
jg
xor
(bad)
cmps
mov
mov
sub
or
fnstenv
ror
(bad)
(bad)
sbb
push
dec
cmp
sub
call
(bad)
(bad)
icebp
ret
jns
(bad)
int3
sbb
pop
outs
xor
push
pop
adc
mov
in
iret
lea
mov
mov
ret
push
les
xchg
fst
(bad)
call
lock
jbe
xchg
jmp
pop
pop
pop
jmp
mov
stos
adc
retf
fidivr
popw
mov
lock
xlat
mov
adc
(bad)
loop
mov
ds
pop
jl
pop
sti
xchg
es
pop
push
ret
stc
cdq
add
add
pop
imul
fistp
jmp
pop
push
push
mov
add
sub
mov
arpl
mov
imul
cdq
hlt
sbb
push
xchg
aas
inc
xor
(bad)
shl
add
aam
xchg
test
sub
dec
inc
or
push
rol
mov
inc
aas
cwde
jns
retf
out
outs
mov
inc
or
dec
mov
mov
std
mov
int3
push
mul
js
sub
sub
xchg
lock
sti
ficomp
sahf
add
lods
mov
pop
push
sub
clc
pop
xchg
(bad)
ret
push
mov
ds
or
ja
ror
cdq
mov
mov
imul
in
imul
test
inc
jmp
adc
mov
dec
icebp
test
dec
leave
and
mov
adc
push
mov
cld
dec
or
int3
sar
pushf
push
push
fdivr
cmp
push
retf
cmps
push
test
inc
push
fst
cmp
loop
js
loop
push
mov
retf
mov
stos
pop
add
into
pop
fnstenv
jo
dec
pop
fidiv
das
aas
add
popf
aam
inc
fsub
mov
cmps
es
jnp
mov
sbb
gs
or
out
mov
int3
xchg
stos
jg
outs
and
je
ss
loope
xor
pop
adc
and
sbb
jb
cmps
cmc
xchg
stos
xor
fmul
stos
aaa
sub
sbb
or
push
xor
xor
mov
inc
sti
mov
test
cmp
(bad)
repnz
dec
add
imul
inc
iret
imul
adc
mov
cs
retf
push
mov
lods
mov
xor
loop
xchg
jmp
ja
outs
push
addr16
std
neg
inc
cmp
stc
retf
push
pushf
js
or
ja
adc
pusha
push
movs
mov
fcomp
sti
out
and
and
jnp
mov
in
cdq
fadd
sahf
pushf
lods
pop
adc
fcom
add
jmp
fsin
loopne
xchg
mov
cmp
or
test
sbb
add
jmp
add
adc
cld
or
sub
jle
mov
mov
add
in
xchg
outs
outs
push
xchg
cmps
rcl
sbb
fnstcw
std
into
in
mov
xor
ret
iret
ins
das
cmps
addr16
dec
loop
call
adc
pop
jmp
add
fmul
and
(bad)
push
test
(bad)
fmul
xor
mov
push
pushf
lea
lahf
cmp
cmp
ja
sub
iret
adc
sbb
enter
mov
mov
cmps
js
push
inc
shl
retf
aaa
xchg
into
xor
lods
popa
lea
cs
adc
inc
mov
inc
addr16
lods
fst
inc
jl
mov
mov
mov
add
push
or
cdq
xor
xchg
push
add
add
loope
inc
inc
mov
scas
(bad)
push
xchg
cdq
pop
pop
adc
outs
sub
xlat
or
and
in
ins
call
pusha
aad
mov
xchg
jns
cmp
add
jmp
adc
or
mov
fmul
js
xor
sbb
mov
pop
call
in
xchg
sahf
mov
xchg
pop
out
je
sbb
mov
mov
push
push
mov
les
popa
repz
dec
dec
mov
call
xor
dec
xor
jmp
cmp
aas
(bad)
std
and
test
aad
loopne
je
sbb
sub
adc
ret
mov
pop
enter
(bad)
adc
cmp
js
cmps
pop
mov
mov
shl
mov
out
cmps
stc
jp
mov
fwait
mov
das
lea
shl
pop
inc
sbb
xlat
add
inc
int
mov
dec
push
dec
movs
or
jecxz
rcl
adc
in
pop
inc
(bad)
iret
push
cmp
cs
daa
imul
jmp
inc
and
mov
mov
push
aam
aas
imul
aas
mov
pop
cmp
outs
or
cmp
fstp
ins
sub
jmp
lea
lea
jns
xor
push
in
add
xchg
xor
fsubr
inc
mov
push
dec
into
imul
sub
push
(bad)
gs
xor
cmp
outs
add
dec
fild
nop
out
mov
daa
out
test
stos
cli
fwait
cmc
mov
xor
stos
ja
scas
mov
lock
fnstsw
jns
mov
ret
xchg
movs
xchg
imul
inc
aaa
ror
test
inc
xchg
rcl
xchg
or
ror
(bad)
cli
icebp
xlat
sahf
in
push
cmp
ror
pop
(bad)
in
add
fcmovnb
jae
cmps
(bad)
jecxz
addr16
(bad)
add
mov
or
fcomp
jno
mov
das
jo
fidiv
cs
cld
in
push
mov
les
test
stos
cmp
scas
push
scas
test
jbe
retf
pusha
add
push
push
aad
mov
(bad)
mov
fwait
dec
mov
sub
sbb
sub
outs
ret
mov
scas
xchg
dec
sbb
out
push
aaa
push
gs
call
push
ret
mov
fidiv
dec
sbb
pop
sbb
cmps
femms
sub
cmp
jle
test
cmp
jp
ins
arpl
or
adc
xor
ficom
(bad)
adc
xchg
cmp
loop
adc
test
mov
mov
xchg
test
jecxz
pop
mov
mov
adc
int3
jb
sub
push
push
push
cmp
retf
bound
mov
addr16
inc
push
mov
jbe
adc
adc
add
jmp
inc
and
jne
stos
ins
inc
enter
pcmpgtb
adc
loop
es
push
scas
dec
sub
mov
mov
or
call
mov
jmp
sbb
mov
pop
jmp
ins
or
inc
cld
sbb
and
scas
cmp
cmp
out
fidiv
pusha
or
adc
inc
pop
leave
pop
ins
xchg
nop
ffreep
inc
out
cli
popf
aad
lahf
mov
cmp
cld
mov
mov
sub
sbb
inc
add
cmp
add
pop
and
ins
jg
call
and
test
fst
loope
mov
and
pop
lea
mov
out
int3
and
xchg
push
int
fmul
xchg
std
ror
ret
mov
and
int
cmp
or
mov
ja
push
push
mov
inc
loopne
ins
sahf
jno
cwde
out
sub
std
lods
or
aaa
bnd
inc
mov
xor
not
daa
sbb
and
jbe
or
jbe
mov
inc
pushf
and
js
inc
mov
(bad)
pop
adc
test
push
sub
repnz
cwde
pop
call
inc
mov
imul
stos
pop
ret
cwde
and
mov
mov
xor
clc
add
outs
popa
jb
mov
mov
push
outs
out
shl
push
cmp
or
popa
xchg
loopne
cmps
jp
or
cmp
shl
adc
sbb
pop
ret
repz
clc
push
in
shl
pop
les
and
cmps
pop
push
push
push
js
ror
adc
inc
cmp
push
inc
jmp
movs
clc
mov
lods
inc
aaa
dec
jle
adc
pop
in
mov
mov
enter
pop
xor
loopne
ss
and
dec
fild
jg
data16
mov
pop
fcmovu
pusha
mov
jb
loopne
pushf
mov
or
dec
lock
pop
inc
out
mov
out
sbb
mov
lods
push
fmulp
or
imul
xor
fbld
cmc
imul
push
jne
and
jmp
js
outs
arpl
call
test
mov
sahf
dec
das
xchg
sub
int3
mov
iret
mov
inc
jecxz
adc
mov
inc
jae
mov
add
sti
sbb
rcl
adc
inc
xchg
call
test
in
adc
fist
fs
inc
loope
cmps
fld
retf
cwde
retf
out
mov
pop
mov
adc
xor
add
xor
scas
xchg
push
pop
stos
loope
call
push
aaa
mov
out
daa
aad
out
pop
mov
mov
mov
adc
jmp
shr
cld
mov
outs
mov
daa
in
sub
div
cmp
mov
les
dec
xor
daa
or
inc
(bad)
sub
retf
mov
adc
jecxz
call
pmulhuw
sub
inc
jge
lds
in
retf
cld
or
popa
enter
(bad)
shr
jmp
fcmovb
leave
call
adc
cmc
outs
inc
stos
(bad)
fadd
sub
inc
leave
enter
inc
mov
jl
scas
jp
xchg
popf
sub
jb
xchg
jp
stos
enter
xchg
push
jl
xor
div
gs
rcl
fsub
(bad)
rcl
loope
pop
outs
adc
pop
arpl
jns
imul
mov
sub
repz
xchg
fimul
hlt
(bad)
mov
dec
bound
pop
dec
push
prefetch
or
add
jne
jae
stos
mov
pop
sahf
(bad)
xchg
xchg
mov
xchg
mov
jns
mov
adc
test
push
xchg
rcr
sar
aad
pop
jae
and
mov
aam
ds
xor
cli
add
adc
scas
shr
mov
lahf
shl
mov
jg
mov
cmp
mov
(bad)
imul
scas
mov
mov
mov
sub
jp
sahf
je
xlat
test
or
xchg
fdiv
pop
pushf
dec
dec
popa
pop
jbe
daa
repnz
in
pop
mov
cs
inc
fstp
inc
cmp
mov
pop
sbb
rol
mov
adc
dec
dec
out
out
mov
push
aas
pop
pop
mov
mov
(bad)
jb
dec
adc
inc
mov
ins
mov
movs
and
and
xchg
call
jle
std
cmp
jmp
rol
movs
shl
add
xor
mov
fsub
mov
push
pushf
cmp
xor
fwait
in
fst
pop
in
jae
mov
mov
ret
fst
aad
pop
fcmovne
loop
movs
mov
mov
data16
fs
mov
fdiv
jge
(bad)
pop
sub
mov
scas
cmps
and
loopne
mov
test
dec
mov
xchg
ror
into
or
adc
jmp
mov
icebp
enter
cmp
fisttp
cmps
(bad)
in
lds
inc
inc
xchg
add
aaa
cmps
xchg
inc
mov
cmp
sbb
cwde
push
fwait
(bad)
div
fist
add
xor
mov
mov
mov
jmp
shl
icebp
jbe
pusha
outs
adc
and
fsubr
mov
jno
and
clc
iret
add
loope
jns
lods
pop
sub
sbb
xor
in
stos
inc
push
cs
(bad)
cdq
mov
xchg
xchg
ret
mov
jbe
cmp
(bad)
aam
sbb
adc
in
add
adc
jl
loopne
ret
inc
imul
hlt
mov
sub
dec
sbb
xchg
lea
xchg
push
icebp
or
add
(bad)
in
loope
leave
or
(bad)
repnz
xor
ins
sahf
mov
mov
repnz
xor
jecxz
(bad)
hlt
jo
pop
inc
mov
js
rcr
mov
test
aam
test
ficomp
mov
jae
popf
iret
retf
adc
push
mov
mov
jno
repz
adc
dec
cmps
jo
idiv
pop
and
fwait
push
(bad)
aam
out
int
mov
pop
scas
out
mov
sub
mov
add
cmps
jmp
fistp
sahf
out
pop
push
sub
pop
cmp
out
retf
cwde
mov
cdq
cmps
mov
iret
mov
int
mov
call
xor
push
cmp
adc
jl
cwde
addr16
add
and
retf
inc
int
or
mov
cmp
mov
hlt
jb
mov
push
dec
inc
xor
sub
xchg
clc
adc
push
inc
rcl
in
cdq
inc
dec
stc
fwait
imul
sub
cmp
push
or
push
test
adc
cli
sbb
retf
cmp
mov
mov
pop
in
jns
mov
dec
aas
dec
add
cvtdq2ps
(bad)
adc
cmp
movs
sub
test
popf
push
inc
add
in
mov
xor
push
jne
stos
repz
adc
xchg
xchg
test
or
or
int
int
and
call
pop
(bad)
mov
pop
ins
mov
es
inc
pusha
mov
mov
or
fwait
std
loop
aam
dec
mov
ror
sti
sub
pop
loop
stc
push
sub
(bad)
pop
neg
mov
jb
and
imul
icebp
shl
call
ja
push
sub
or
adc
bound
fist
lods
in
dec
cmp
daa
sti
jmp
mov
jmp
nop
inc
jmp
xchg
addr16
mov
xchg
(bad)
and
shl
sbb
or
shr
add
xchg
cmp
pushf
ja
test
out
xor
sbb
aas
add
sbb
pop
repz
inc
sub
js
mov
int
sub
jg
inc
fld
lock
and
dec
daa
(bad)
mov
add
jmp
daa
sar
jmp
stos
xchg
pop
aas
xchg
inc
int
add
int
sub
mov
pushf
div
gs
aam
xor
ror
repnz
mov
fs
js
outs
add
repnz
xlat
xchg
jmp
push
(bad)
clc
push
jmp
int3
mov
scas
xlat
fisub
fwait
xor
xor
push
call
adc
cmp
sub
fsubr
pop
sbb
movs
sbb
jge
push
xor
mov
mov
xchg
repz
xor
mov
jmp
mov
rcl
push
pop
sub
int3
imul
enter
(bad)
push
sbb
(bad)
inc
stos
dec
cmps
in
out
or
inc
mov
push
leave
cmps
pop
inc
(bad)
jbe
inc
les
movs
add
mov
push
xlat
cmps
mov
iret
add
pop
int3
sub
mov
push
(bad)
(bad)
jne
ret
cdq
dec
scas
cmp
retf
movs
mov
xor
into
xor
pusha
mov
dec
fwait
dec
jg
adc
mov
jno
in
inc
mov
lock
inc
xchg
or
test
pop
jmp
outs
ins
call
mov
loopne
inc
mov
cmp
mov
or
leave
and
cmps
mov
arpl
jb
sbb
jmp
je
mov
adc
xchg
xchg
mov
pop
xchg
mov
pop
mov
mov
lds
mov
les
inc
call
xchg
enter
xor
cmps
mov
cmp
cwde
xor
mov
and
xchg
add
inc
outs
pop
cmps
mov
mov
and
adc
loope
add
in
xor
int3
inc
sbb
std
out
inc
pop
pop
jb
cmp
lss
icebp
(bad)
retf
ret
dec
pop
adc
inc
dec
pushf
rcr
aad
addr16
push
rol
jg
adc
mov
int3
hlt
movs
pop
pop
cmp
push
rcr
movs
movs
pop
test
pushf
push
sbb
sub
xchg
mov
inc
ror
mov
jns
movs
mov
pop
sub
push
repnz
in
fisub
mov
ficom
loop
cmp
lahf
rcl
fucom
test
mov
adc
(bad)
out
js
cmp
mov
adc
imul
mov
xchg
and
add
int
jl
mov
inc
push
dec
in
or
jmp
not
or
adc
cmp
sub
aas
push
cld
mov
cmp
sbb
or
ins
add
pop
dec
add
les
aam
adc
out
shr
inc
pop
lods
mov
sbb
jl
rol
mov
sub
pusha
pop
ins
and
fsub
and
mov
bnd
mov
repnz
xchg
call
ret
mov
pop
nop
pop
push
icebp
cmps
pop
and
ret
not
xor
fcmove
mov
in
popf
ret
cmp
xor
sahf
sub
cs
pop
inc
push
mov
jl
and
iret
pop
aas
jp
dec
jno
add
(bad)
push
(bad)
dec
inc
in
push
sub
rol
test
arpl
iret
push
pushf
(bad)
das
dec
int
or
pusha
pop
mov
cmp
mov
lods
data16
pop
cmp
leave
mov
imul
shr
mov
mov
xor
sbb
xchg
test
push
js
and
rcr
test
push
xchg
and
xchg
jl
movs
mov
inc
test
mov
dec
stc
ret
sub
aam
fdiv
lahf
or
xor
push
in
imul
lds
sahf
mov
xlat
sbb
sti
outs
mov
lds
in
cmp
jne
and
(bad)
rcl
not
fist
push
lods
arpl
and
or
push
(bad)
and
inc
out
mov
pop
pop
ror
mov
movs
repz
imul
mov
push
hlt
call
outs
jae
bound
push
jmp
xchg
int
dec
mov
jl
mov
mov
stos
vpsrlw
jge
jae
clc
popf
int
adc
cmp
xor
and
sub
sti
out
push
add
adc
das
ret
cmp
lods
stos
(bad)
push
shl
in
push
fadd
mov
jbe
sbb
dec
sar
fcom
pop
clc
ins
ficomp
scas
or
loope
cmp
adc
and
dec
jmp
popa
call
neg
rcr
jb
pusha
call
cmp
push
loope
jbe
test
and
xchg
rol
jge
mov
inc
xchg
cwde
adc
cmps
cmp
aam
jb
jl
ja
or
shl
push
repnz
cmp
jae
iret
cmps
es
sbb
sbb
mov
hlt
jno
push
popf
out
fs
mov
push
jle
add
mov
adc
retf
pop
or
xchg
sub
and
sti
mov
pop
xchg
push
nop
das
jbe
cli
push
adc
mov
neg
add
xchg
movs
sub
ror
cmc
inc
and
shr
jp
pop
pop
pop
and
add
and
les
movs
js
pop
pop
dec
cmp
cmps
fisttp
xor
or
mov
je
cld
shl
and
dec
mov
mov
into
jecxz
(bad)
sti
jge
inc
ss
in
adc
and
cmps
mov
(bad)
ds
jg
jnp
out
dec
(bad)
or
sbb
or
xor
jnp
les
stos
out
and
dec
inc
push
out
je
xchg
imul
pop
pop
and
jg
shl
inc
imul
repz
ja
retf
movs
sbb
inc
dec
je
xchg
inc
dec
div
or
adc
clc
stos
ds
fimul
test
fcom
mov
sbb
and
cmp
jns
sbb
push
push
pop
xor
mov
shl
xchg
pop
add
and
sahf
das
xchg
rcl
fwait
sti
sub
fild
in
jns
repnz
push
loope
popf
je
lock
lahf
in
mov
stos
cmps
dec
ret
pop
xor
int3
shl
pop
in
xchg
pop
dec
push
int
mov
pop
ins
lea
stos
cmp
jp
ffreep
fld
iret
mov
mov
in
mov
mov
js
sub
push
imul
sti
addr16
cs
pop
or
inc
sub
in
ret
jmp
loope
mov
push
cmc
mov
cs
or
les
dec
mov
fisttp
stc
cmp
js
jbe
push
stos
push
jns
pushf
and
pop
inc
sti
fld
xor
pop
rcl
cld
or
outs
dec
in
cmc
push
xchg
lods
and
xor
xlat
scas
jne
jbe
das
fwait
xchg
xchg
adc
outs
mov
mov
popf
scas
pop
cmp
stos
push
mov
add
jl
add
sbb
sbb
pop
add
xchg
test
fs
clc
pop
dec
or
into
and
test
jo
popa
add
xor
push
mov
fwait
or
sub
pop
inc
push
clc
push
test
enter
sbb
mov
cmp
lahf
int
ins
pop
iret
mov
hlt
xchg
xor
jp
pop
mov
mov
push
sub
add
pop
xchg
add
pop
mov
mov
(bad)
lock
test
sub
mov
xor
rol
into
inc
add
imul
cs
push
out
or
add
div
imul
mov
hlt
mov
pop
push
sti
rol
dec
dec
xor
mov
add
inc
fstp
lds
dec
pop
mov
mov
clc
ins
dec
pop
sub
pop
test
lods
sbb
test
lds
dec
cmp
jmp
out
cmps
shl
js
jne
lock
add
fldcw
stos
mov
lods
jb
cld
cld
mov
or
les
add
jmp
fisttp
repnz
pop
push
push
jne
cmp
mov
leave
retf
jne
test
rcl
icebp
push
(bad)
xlat
je
lahf
mov
mov
pop
xor
and
xor
jp
push
jns
xor
inc
(bad)
or
sbb
mov
xor
imul
pushf
xchg
sbb
out
inc
push
push
adc
jb
pop
cmp
pop
add
neg
inc
cdq
add
push
es
xor
push
sub
cli
pushf
aaa
and
fs
cmps
sbb
mov
mov
add
push
xchg
clc
enter
nop
dec
int3
dec
das
ret
jae
add
pop
jmp
test
jns
sub
mov
jne
adc
pop
imul
adc
lods
xchg
mov
adc
mov
leave
xchg
popa
mov
imul
jb
inc
mov
ss
in
add
push
jo
push
loopne
(bad)
xchg
loope
fsubr
mov
call
push
fiadd
mov
xchg
in
dec
repnz
std
div
pop
xor
push
or
pop
test
in
(bad)
cld
mov
sub
dec
rcl
adc
mov
xor
push
ss
jbe
cwde
xchg
or
stos
fisubr
push
xchg
imul
sbb
in
cmc
sub
dec
sbb
add
cmp
push
call
jns
xlat
fwait
dec
clc
inc
stos
xchg
sbb
stc
sbb
mov
outs
fcmovnu
pop
mov
cmp
mov
mov
jnp
ja
dec
and
popa
push
fstp
outs
leave
adc
movs
ffreep
or
inc
ins
lods
xchg
je
jne
add
inc
leave
not
and
sbb
jg
fldenv
sub
inc
scas
xchg
in
in
cmp
add
arpl
push
jmp
adc
sbb
mov
mov
add
(bad)
mov
jns
jmp
ins
outs
or
mov
shr
push
add
icebp
gs
pop
jmp
into
into
jle
loop
mov
jbe
sub
in
scas
into
bound
pop
xchg
mov
jae
jmp
fwait
cmps
mov
xor
pop
fdiv
dec
push
leave
jb
mov
jmp
jno
out
xchg
leave
pop
bound
call
mov
jbe
ja
xor
inc
out
push
loopne
xor
ud0
and
ss
sub
arpl
xor
cmps
scas
icebp
jle
leave
mov
in
dec
adc
sbb
mov
push
mov
mov
iret
ss
imul
xchg
push
push
aam
out
mov
pop
push
lods
out
loop
push
mov
adc
jne
stc
mov
sbb
inc
push
leave
and
loop
test
in
loopne
push
xchg
push
lock
cmp
aaa
add
adc
jns
iret
cmps
fxch
mov
jae
xor
lods
jmp
mov
mov
pop
sub
stos
fcmovb
outs
adc
aad
xor
in
xor
xchg
push
loopne
adc
add
cmps
or
cmp
ins
dec
xchg
sub
ss
or
or
push
and
mov
jnp
in
and
mov
nop
adc
clc
(bad)
out
jecxz
xor
sbb
xchg
and
mov
loopne
cmp
test
push
cmps
test
jmp
data16
jnp
sub
pop
ror
es
outs
fisubr
mov
stos
loope
fstp
jnp
inc
cmp
out
dec
sbb
sbb
cmp
sbb
inc
je
sub
push
dec
mov
popf
and
pop
dec
pop
lds
mov
in
push
jge
pop
add
daa
dec
rcr
gs
mul
inc
add
push
jmp
aam
fnsave
(bad)
dec
or
pushf
mov
sbb
sub
mov
lods
scas
out
es
(bad)
pop
xchg
sar
dec
push
popf
mov
cmp
xchg
imul
iret
js
or
enter
pop
es
or
ret
stc
or
or
fiadd
jp
or
daa
std
add
stc
mov
in
and
xor
jp
das
imul
push
outs
(bad)
loopne
ss
add
push
adc
cmp
gs
mov
mov
dec
imul
cmp
or
pop
das
cmp
dec
inc
inc
push
enter
ret
xchg
push
scas
lahf
cmp
sbb
adc
push
or
mov
sbb
jns
test
and
mov
mov
sub
scas
jge
test
test
jcxz
(bad)
in
inc
(bad)
push
mov
jl
inc
adc
pop
mov
test
cmp
aas
xor
dec
mov
sub
daa
pop
xchg
sub
push
and
mov
imul
shl
cmp
in
aas
push
ja
sbb
mov
mov
leave
mov
and
into
add
fs
xlat
mov
es
ror
out
(bad)
push
mov
lock
test
hlt
ficom
repnz
dec
dec
sahf
push
sbb
retf
enter
mov
xchg
jge
add
gs
xchg
mov
cmp
and
and
jne
xchg
inc
inc
or
push
jp
push
pop
push
mov
lods
push
(bad)
jg
das
or
pop
int
mov
inc
in
test
leave
jecxz
cmp
xor
and
leave
add
and
ret
sub
xor
sub
cs
push
je
jmp
dec
jno
enter
xor
scas
outs
lods
popa
lods
xor
stos
test
inc
mov
and
pop
ins
mov
lea
sub
sar
inc
xchg
cmp
jne
sti
add
ror
cmps
aas
les
mov
jg
cmps
sbb
ja
push
mov
fwait
mov
div
xor
adc
shr
aas
ds
ds
out
loopne
jge
and
loopne
pop
and
loopne
cmp
mov
out
push
ret
xchg
mov
inc
(bad)
mov
js
mov
xor
arpl
and
sbb
pop
mov
repz
movs
loop
jge
cmc
retf
std
mov
pop
push
cld
add
sub
retf
pop
dec
rcr
mov
sbb
scas
xor
cdq
scas
push
idiv
lods
mov
inc
xor
cmps
fadd
push
and
cdq
cmps
les
shl
(bad)
xchg
sbb
cs
mov
pusha
mov
jl
sub
xchg
inc
ins
mov
rcr
daa
pop
movs
sub
xlat
shl
mul
pop
xor
lahf
push
cmc
mov
sub
or
icebp
ret
in
es
shl
fist
jle
mov
mov
pop
pushf
stos
cmp
sub
aad
cmc
int
inc
nop
pop
xchg
dec
sbb
pop
bound
jno
add
mov
neg
mov
fadd
test
movs
int3
sti
cmp
pop
cdq
push
jnp
push
jno
sbb
cmp
ret
repnz
mov
adc
lea
xchg
dec
test
jo
and
mov
adc
push
and
test
bound
in
out
pop
lods
inc
cmc
pusha
or
ds
mov
cmp
or
popa
sar
mov
gs
mov
hlt
and
adc
pop
dec
arpl
fistp
xchg
pop
pop
pop
mov
dec
jno
add
lea
add
push
push
cmp
cli
repnz
mov
jb
xchg
(bad)
push
xor
mov
and
cli
call
pop
ret
push
je
arpl
jno
shr
test
jg
outs
push
adc
pusha
mov
push
cmp
inc
ret
xor
out
hlt
pop
sti
add
xor
add
jb
push
(bad)
inc
xlat
push
mov
hlt
fldcw
je
sub
jmp
ja
mov
scas
imul
shr
repnz
(bad)
loope
(bad)
loope
mov
or
mov
push
jb
(bad)
hlt
xor
sahf
jnp
gs
loopne
stos
mov
into
cmps
mov
and
cdq
add
add
out
and
test
cdq
cmp
cmp
aam
inc
push
(bad)
aad
mov
push
cmp
ins
aas
mov
cmp
lods
push
icebp
inc
or
call
lods
xchg
lods
arpl
cmps
adc
jmp
mov
and
mov
out
stos
retf
xchg
sbb
jmp
out
xchg
cmps
fstp
js
js
mov
sbb
outs
sub
shr
mov
xchg
sbb
mov
or
inc
push
mov
sub
shl
cdq
mov
les
add
cwde
sub
jp
out
test
imul
adc
jmp
xor
xchg
pusha
cs
jmp
(bad)
pop
add
dec
rcr
adc
scas
enter
repnz
dec
cdq
pop
movs
test
jae
jg
inc
aaa
dec
mov
xchg
or
jmp
das
sahf
jb
dec
inc
xchg
sub
hlt
data16
popa
jns
adc
or
daa
mov
cmp
outs
and
or
sub
cdq
pop
jnp
and
xchg
cmp
aam
xchg
push
cmp
mul
jge
add
shr
cmc
mov
push
pushf
sub
fmul
and
adc
add
ficom
mov
xor
popf
fisub
mov
enter
scas
lods
and
rol
scas
into
(bad)
fs
push
je
int3
aam
test
and
repnz
repz
xchg
pop
xchg
xor
data16
pop
add
xchg
xor
jmp
inc
push
arpl
test
inc
rcr
jecxz
mov
push
mov
xchg
retf
jns
int3
adc
fild
mov
push
loopne
xchg
mov
test
jecxz
and
sub
or
sbb
test
and
or
lods
and
cli
or
loope
(bad)
cmp
loope
add
dec
test
xor
pushf
cwde
cmps
je
dec
and
mov
xor
bound
retf
xchg
arpl
imul
push
mov
fidivr
inc
pop
mov
ss
aad
sub
push
lock
aaa
clc
fbld
mov
push
mov
pop
sbb
add
pop
std
mov
xor
mov
dec
repnz
sub
sbb
(bad)
or
imul
pop
arpl
cld
fsub
cmps
jecxz
xor
stos
je
aad
cmps
inc
shl
gs
sbb
sbb
xchg
aad
shl
movs
dec
outs
sbb
mov
jecxz
ss
lahf
popa
sbb
pop
inc
iret
test
mov
lods
and
mov
pop
cli
pop
into
jbe
test
and
sbb
xor
mov
mov
mov
jle
push
out
ret
add
retf
sar
stos
mov
jmp
ret
ds
cmp
xchg
mov
aad
fld
gs
mov
dec
or
push
or
mov
cmps
jecxz
xor
mov
gs
loop
std
xor
xchg
not
aaa
aam
mov
sub
push
into
fs
jns
push
daa
pop
and
mov
xchg
lea
je
repnz
inc
retf
ss
aaa
loopne
adc
xchg
nop
aam
add
(bad)
adc
aas
(bad)
fidiv
loop
pop
and
enter
call
ret
xlat
cld
xor
fdiv
fwait
shl
jg
mov
cli
jne
ins
push
bound
sahf
cmp
cmps
dec
mov
arpl
mov
push
push
sbb
aaa
int
pop
in
inc
pop
test
(bad)
ss
or
dec
xor
push
scas
jne
push
movs
clc
and
shl
or
cs
test
jns
adc
lods
dec
add
out
pop
and
mov
lea
cmp
pop
loopne
mov
scas
xor
iret
xor
mov
mov
mov
in
mov
lds
sbb
or
xor
inc
ins
movs
pop
hlt
pop
les
push
jecxz
add
scas
into
cmp
push
xor
dec
jne
test
pop
pop
sahf
xchg
cmp
or
push
cmp
aam
outs
cmc
pop
adc
xchg
dec
enter
ret
and
iret
xlat
popf
inc
out
aas
pop
das
stos
mov
sub
inc
lea
mov
pop
or
inc
dec
sti
lods
mov
dec
sub
lahf
repz
add
dec
add
dec
mov
neg
ins
scas
inc
mov
push
dec
and
fstp
mov
push
shl
sub
or
adc
push
mov
dec
push
push
push
inc
fild
out
ret
(bad)
int
and
call
cmps
xchg
xor
push
adc
pop
sub
js
popa
inc
lock
test
fist
test
pop
cmp
dec
sub
add
loopne
jmp
inc
gs
sbb
xor
pushf
mov
sbb
xor
(bad)
jne
pop
mov
or
push
jnp
mov
and
mov
push
loope
xor
test
imul
fsub
mov
repnz
push
mov
xchg
mov
lahf
xor
mov
repz
ficomp
arpl
and
or
inc
mov
jmp
and
pop
inc
aam
xchg
mov
dec
cmp
jl
pop
inc
arpl
loopne
pop
retf
test
retf
sub
ja
punpckhbw
(bad)
cld
add
sub
out
(bad)
retf
inc
je
es
fwait
je
add
cs
mov
aam
in
ror
test
test
cmp
imul
xchg
fbstp
fdiv
imul
icebp
xchg
push
adc
push
lock
retf
shl
xchg
sbb
or
mov
push
in
push
sti
push
cmp
daa
pusha
(bad)
or
clc
and
push
mov
dec
pop
xor
repnz
mov
(bad)
pop
mov
mov
imul
push
setns
aam
and
inc
adc
mov
jno
and
retf
mov
inc
jbe
push
jp
not
mov
call
popa
and
fadd
jns
ds
push
out
loop
cmp
(bad)
jle
jae
into
add
cmp
retf
xchg
icebp
jno
jl
pop
fdiv
adc
mov
clc
ss
cmps
sar
aaa
dec
jae
sahf
adc
push
sbb
imul
cwde
or
mov
out
pop
aas
or
inc
push
ja
jns
push
outs
daa
les
stos
mov
pop
in
cli
mov
cdq
in
imul
inc
cmp
and
pop
push
sub
fistp
pop
(bad)
adc
ds
sbb
arpl
ss
jmp
repnz
jb
or
in
jo
sbb
xchg
pop
jg
sub
or
sbb
inc
add
fs
add
scas
and
cli
xor
push
inc
mov
div
hlt
sahf
shl
sbb
ja
dec
not
mov
inc
ins
jns
loop
mov
push
ret
mov
sbb
jns
in
test
stos
sub
push
jp
ds
cmps
xor
push
rol
xor
mov
mov
adc
or
test
pop
jb
out
gs
mov
dec
jbe
call
push
out
into
add
mov
neg
sbb
push
push
and
xchg
xor
mov
dec
sub
cli
mov
mov
add
lods
sbb
mov
mov
dec
pushf
test
mov
xor
add
or
stos
in
or
mov
iret
xchg
rol
scas
jb
retf
dec
xchg
jne
ret
rol
push
das
ins
pop
(bad)
js
and
push
mov
sub
dec
in
aad
sub
push
jl
adc
inc
dec
add
fcomi
jae
stos
rcl
mov
aas
fsub
movs
mov
in
mov
mov
xchg
adc
xchg
(bad)
nop
mov
jmp
aas
ret
test
jno
sbb
and
lahf
clc
push
dec
enter
adc
ficom
clc
icebp
ins
pop
adc
xor
cwde
dec
mov
mov
inc
test
fadd
xchg
outs
and
test
push
sub
ins
stc
cmc
dec
jg
jl
mov
push
sbb
push
pop
xchg
ss
shr
std
jno
pop
xchg
cdq
(bad)
out
mov
mov
fdiv
pop
popf
addr16
fwait
imul
push
pop
mov
sub
mov
dec
bound
push
push
pusha
ret
out
xchg
push
repnz
test
push
sbb
shl
std
pop
lahf
xor
push
fucomip
xchg
push
mov
jmp
push
xor
add
xor
sbb
inc
mov
inc
jge
adc
(bad)
arpl
xor
sti
cmp
dec
lahf
(bad)
cdq
in
dec
stos
push
repnz
pop
jecxz
bound
adc
popw
push
mov
sar
push
dec
scas
shl
stc
test
popf
mov
and
daa
fild
cmp
je
mov
mov
inc
jns
cmp
cmps
jbe
xor
sub
xchg
jmp
cmp
mov
arpl
in
into
nop
push
popf
sub
sub
cld
push
jmp
bound
sbb
loopne
neg
fnstsw
(bad)
fldenv
xor
pop
or
xchg
pop
pop
mov
push
adc
(bad)
out
mov
in
mov
or
pop
pusha
rcl
mov
(bad)
push
scas
hlt
js
cwde
lock
arpl
retf
cmps
mov
cmp
aam
test
repnz
inc
xor
fsubp
dec
mov
pop
imul
call
sub
mov
or
or
and
push
xor
out
sub
add
push
in
jg
jmp
stos
test
call
call
pop
cmp
mov
aas
pop
sti
popa
mov
add
int
sub
cld
cmp
into
pop
shl
jae
jmp
xor
xlat
mov
push
call
jmp
push
jge
push
inc
data16
rcr
aam
jecxz
fabs
addr16
jb
je
sbb
ret
dec
sub
push
pop
xor
xchg
lahf
lock
into
sbb
sub
out
or
jbe
mov
call
xchg
and
test
adc
inc
hlt
xchg
ss
xor
or
mov
bound
adc
sahf
fbstp
push
fcom
jl
pop
inc
jno
dec
shl
cmp
fmul
mov
jne
mov
cmc
in
pop
xchg
stc
inc
int
mov
dec
sub
ror
sbb
mov
inc
mov
add
loop
add
inc
adc
leave
test
pusha
sub
lock
sbb
sbb
js
lods
pop
into
push
(bad)
in
shr
sub
mov
mov
leave
fwait
pusha
dec
stos
arpl
pop
movs
xchg
push
rol
pushf
popf
leavew
cmp
out
pop
xchg
gs
cmc
imul
mov
push
mov
xchg
mov
cdq
cmp
pop
or
fbstp
enter
test
js
mov
or
in
sub
sbb
push
mov
mov
mov
add
(bad)
retf
xchg
pusha
and
or
daa
sahf
and
xchg
mov
sub
int
shl
lea
mov
rcl
(bad)
jl
push
dec
pop
fimul
push
loope
cmps
cmp
rol
shl
int3
inc
(bad)
dec
ds
add
idiv
xlat
xor
enter
mov
dec
push
sub
pop
cmp
ds
sbb
inc
(bad)
(bad)
movs
scas
fist
add
inc
scas
and
fsub
inc
ins
jg
out
cmc
add
shl
xchg
aam
mov
push
ins
add
leave
xor
iret
(bad)
sub
cmps
mov
mov
inc
mov
fcom
push
mov
dec
hlt
aad
xchg
shl
jmp
das
ins
pushf
data16
pop
icebp
into
and
imul
in
or
lahf
popa
int
movs
dec
fdiv
xchg
lods
pop
add
cmp
dec
push
sub
cdq
mov
jb
or
cmc
mov
jno
add
mov
xor
stc
fdiv
xchg
mov
aas
cmc
pop
mov
in
(bad)
retf
pushf
xor
cmp
and
ss
dec
or
out
pop
nop
push
pop
inc
jbe
fs
fmul
jl
xchg
xor
fstp
cmp
push
mov
xchg
mov
je
xchg
mov
inc
scas
adc
in
cmps
adc
repz
bsf
add
cmp
cwde
lods
test
ret
cmp
in
loope
aad
stos
leave
adc
adc
stos
jmp
inc
fisttp
jle
fisttp
jle
nop
lods
mov
inc
imul
sahf
xor
adc
lahf
sbb
repnz
or
sub
or
stc
in
mov
mov
jbe
ja
lods
dec
xor
stos
outs
cld
sub
xchg
mov
(bad)
jp
jae
sub
mov
cli
xchg
cmp
sti
lods
or
mov
push
mov
loop
dec
sar
push
and
icebp
mov
enter
cmp
jns
or
mov
imul
ins
jmp
arpl
sbb
push
repz
dec
or
test
mov
iret
xchg
cs
int
loope
lea
leave
fsubr
test
mov
jmp
jmp
xchg
ins
repnz
inc
add
popf
or
pusha
lea
mov
dec
and
fidivr
arpl
xor
rol
pop
sub
jl
adc
or
out
jle
out
or
mov
int
and
jne
bnd
push
fldcw
(bad)
dec
add
xchg
or
inc
jge
cld
int3
mov
push
jg
aaa
mov
mov
imul
mov
aas
bound
aad
jb
mov
sbb
adc
repnz
aad
sub
repz
lock
or
retf
movs
jnp
add
mov
mov
mov
dec
leave
mov
mov
rol
xchg
push
pop
pop
fisttp
inc
int3
fucom
pop
adc
push
sub
inc
push
fidiv
sub
popf
aam
(bad)
fiadd
sub
jbe
cmp
(bad)
fdiv
lds
popa
dec
push
(bad)
mul
hlt
ins
lods
dec
adc
xchg
and
mov
das
test
ins
pop
cmp
cwde
push
inc
xchg
es
rcr
movs
das
xor
ja
test
sbb
repz
ss
sub
dec
jmp
gs
retf
jbe
mov
xrstor
dec
out
scas
fs
in
pop
mov
xor
pushf
sar
loop
xchg
sub
cmps
push
mov
jecxz
aad
push
in
jb
in
adc
je
sub
cmps
lock
pop
pop
les
pop
and
je
mov
add
test
jmp
aaa
cli
push
fimul
aam
in
cmp
adc
ficom
mov
imul
dec
arpl
xchg
push
popa
lea
jge
sub
out
test
mov
sbb
aaa
(bad)
int
popa
cmp
ret
(bad)
or
dec
rcr
push
ja
mov
(bad)
sbb
and
cmp
aaa
aad
stos
mov
dec
mov
adc
outs
mov
push
jb
mov
ret
dec
fisubr
push
test
shl
(bad)
cmp
cld
shl
jg
mov
daa
dec
shr
rcl
jne
fsub
push
into
jg
mov
pop
and
inc
mov
mov
and
mov
aad
pop
push
outs
add
xor
jne
xor
stc
xchg
leave
adc
pop
shl
and
(bad)
mov
std
in
shl
test
rol
bound
cmp
xchg
enter
and
movs
jbe
pop
push
ja
cli
mov
out
js
and
dec
frstor
push
rcr
xchg
fiadd
stos
bound
cli
xchg
jmp
mov
dec
cmp
dec
jne
lock
pop
lock
pop
rol
sbb
inc
aam
inc
xor
cmc
lea
xor
adc
icebp
icebp
retf
lea
push
mov
loope
jge
pop
push
pop
lock
sbb
mov
outs
cli
push
scas
mov
scas
ins
mov
movs
cmp
loop
cmp
dec
aam
(bad)
push
dec
mov
cmps
sub
mov
and
loopne
lods
dec
jmp
lods
addr16
aaa
xchg
or
xchg
sub
jecxz
jne
popa
xchg
dec
sbb
mov
iret
mov
sbb
sbb
adc
(bad)
fisub
ror
jecxz
lea
pop
sti
xchg
std
mov
jmp
nop
push
imul
shr
lahf
in
mov
das
add
sbb
mov
jne
loopne
jg
mov
clc
pusha
xor
ins
fwait
adc
adc
ins
mov
add
ret
inc
mov
aas
mov
mov
adc
jg
aad
cli
ja
mov
int3
out
addr16
inc
aaa
add
(bad)
mov
arpl
sbb
lock
mov
dec
in
and
stc
ds
jb
adc
sbb
jmp
dec
mov
movs
inc
xor
adc
mov
mov
xor
retf
aad
je
and
pop
(bad)
or
cli
hlt
out
out
arpl
adc
and
jne
retf
out
out
sbb
mov
or
sbb
bsf
add
and
inc
push
xchg
pop
aad
rcl
add
icebp
jne
fistp
iret
test
es
not
xor
stos
xor
pushf
shl
sti
or
dec
xchg
vmaxpd
xchg
push
push
cmp
push
or
shr
mov
add
or
jle
(bad)
push
ds
sahf
mov
lahf
(bad)
mov
cs
pop
and
cmp
or
movs
sub
cmp
stos
(bad)
test
cld
xchg
inc
jnp
fmul
jno
mov
lahf
push
(bad)
mov
bsf
(bad)
std
mov
adc
into
pop
movs
push
(bad)
int3
pop
ins
xor
cdq
jb
cmps
data16
jne
mov
jp
je
mov
out
enter
inc
(bad)
sbb
xchg
adc
push
mul
es
mov
fdiv
lds
and
mov
pop
and
mov
or
xchg
into
push
ror
mov
call
cli
addr16
daa
and
add
jle
inc
cmp
adc
in
mov
outs
mov
mov
bound
(bad)
js
mul
jmp
rol
or
sbb
mov
jb
ret
mov
and
popw
mov
lds
jo
test
int3
mov
(bad)
ror
xor
sub
clc
cmp
mov
call
movs
push
fucomi
adc
mov
xor
(bad)
pop
mov
xor
retf
mov
cmp
mov
lahf
pushf
test
cmp
neg
push
lods
mov
ror
ror
push
or
jg
push
mov
lds
sbb
ror
cmps
and
xor
call
(bad)
cmp
shl
xchg
or
popf
jns
lahf
(bad)
pop
add
inc
mov
jp
xor
cmp
fdivr
stc
mov
imul
sub
cmc
fwait
pop
xor
cld
gs
lock
inc
jecxz
inc
mov
mov
push
js
dec
mov
lods
push
jb
push
into
mov
jge
add
enter
xor
xor
pop
ss
pop
aam
sbb
or
cmp
ja
cli
fs
(bad)
mov
mov
in
int3
out
scas
fadd
push
outs
mov
aas
jecxz
mov
retf
inc
and
ret
stos
retf
or
out
inc
push
outs
sar
pusha
retf
mov
test
or
fmul
xchg
cmp
jg
(bad)
shr
adc
and
mov
(bad)
mov
imul
test
cmps
stc
push
xchg
push
push
aam
cdq
stc
sub
mov
stc
imul
pop
adc
mov
enter
mov
mul
mov
push
xor
sbb
call
or
pop
shr
xlat
dec
add
cmc
(bad)
int3
outs
stos
mov
pop
pop
and
and
xchg
cmp
and
mov
into
repz
adc
test
inc
cdq
enter
mov
aam
xor
scas
int
nop
out
icebp
arpl
fistp
movs
add
ja
inc
out
dec
(bad)
cmp
cmp
shl
ja
mov
inc
add
(bad)
cmp
cmp
jmp
mov
and
std
fisttp
mov
inc
add
nop
push
sub
and
(bad)
test
fnsave
cdq
inc
addr16
out
and
xchg
stos
out
aaa
mov
(bad)
pop
and
sub
fild
xor
and
mov
cmps
out
(bad)
iret
fisttp
jmp
mov
pop
or
sub
or
jl
nop
push
dec
fxch
pop
imul
mov
pop
outs
adc
aaa
inc
dec
add
es
in
jmp
stc
push
ja
out
add
repz
aaa
lods
(bad)
jmp
xchg
outs
pop
mov
jb
ficomp
dec
dec
mov
jo
outs
inc
jo
add
mov
sub
cmps
mov
call
xchg
xchg
addr16
retf
lods
popa
nop
rcl
dec
xchg
jge
sbb
sbb
pop
out
das
aas
clc
jnp
call
dec
push
cli
(bad)
mov
ds
aas
xor
xchg
inc
cmc
js
jae
retf
push
out
mov
and
pop
wrmsr
push
movs
sbb
je
leave
xchg
jecxz
cmp
fimul
push
xchg
jge
ins
add
ja
or
int
xor
jno
sub
out
sub
xchg
lea
retf
jg
rol
mov
pop
push
dec
jecxz
mov
inc
aas
or
aaa
sbb
and
xchg
add
mov
addr16
stos
cmp
add
push
scas
fmul
cli
aam
pop
lahf
sti
mov
out
mov
sub
dec
(bad)
and
and
cs
mov
mov
sub
rcl
out
dec
jg
xor
fnsave
push
inc
mov
pop
cwde
daa
mov
jmp
repz
sbb
iret
cmp
cdq
cs
lea
div
bound
mov
daa
cmp
ror
bnd
xor
xor
push
pop
sbb
xchg
xchg
rcr
or
lods
mov
dec
or
ret
nop
push
dec
aaa
xlat
imul
(bad)
inc
arpl
cmc
cmp
loop
jns
cmp
sub
pop
les
pushf
sbb
popf
leave
mov
fistp
aaa
call
mov
fbld
sub
shl
lods
or
iret
lock
into
iret
push
inc
sub
mov
inc
repnz
xor
(bad)
fiadd
or
(bad)
movs
jg
popfw
nop
icebp
mov
add
cld
fimul
aad
cli
push
sti
pop
mov
lock
ins
push
cmp
jp
retf
int3
cmc
cmp
lahf
ja
leave
ret
movs
dec
in
push
sar
(bad)
lock
sbb
pop
push
jbe
jecxz
ss
or
test
dec
add
cmp
inc
jecxz
arpl
and
repz
(bad)
das
inc
(bad)
jmp
pop
inc
loop
xchg
lods
sub
fs
mov
mov
clc
or
inc
loopne
jo
call
push
xchg
movs
or
adc
xchg
adc
ja
inc
adc
xlat
xchg
call
mov
fwait
rol
add
dec
xchg
(bad)
mov
clc
test
aam
add
dec
sahf
adc
jbe
add
in
lods
or
mov
mov
cli
pop
aas
or
jle
xchg
nop
ds
sbb
sti
mov
mov
mov
imul
lods
push
push
cmp
out
shr
out
mov
test
jmp
push
imul
ins
push
dec
and
stos
cld
fimul
jb
adc
(bad)
mov
fldenv
sbb
push
and
mov
or
ror
or
ds
mov
leave
mov
dec
jle
or
cdq
inc
fstp
or
js
inc
mov
cmp
ret
out
xor
xchg
(bad)
add
mov
jl
stos
add
outs
(bad)
mov
mov
in
or
pinsrw
popa
in
cmp
stos
jl
inc
pop
stos
cmp
out
jnp
test
xor
dec
or
fidivr
fld
stos
xor
ret
cmc
popf
and
sub
mov
mov
inc
and
in
in
in
xchg
add
shl
inc
cdq
je
push
and
adc
xor
lods
cmps
(bad)
rol
loopne
in
xor
lds
dec
sbb
inc
cmp
push
pop
sub
push
ins
imul
fstp
pusha
popa
cmp
in
push
lahf
nop
stos
mov
sub
sbb
ins
cmp
sti
addr16
js
xor
outs
das
cwde
leave
mov
pop
xor
sub
or
dec
sbb
retf
ret
shl
fmul
lahf
cmp
or
sbb
jle
movs
mov
iret
mov
leave
cmp
dec
rcr
sbb
cdq
mov
mov
jae
fdivr
mov
pop
jmp
lds
xchg
mov
mov
push
mov
or
or
jle
add
dec
shl
jae
fisub
dec
jl
mov
mov
les
inc
sub
jns
imul
rcl
scas
fiadd
mov
or
test
aam
ror
movs
mov
test
lods
bnd
xchg
ins
cs
mov
xchg
rol
fadd
aas
dec
and
adc
loop
loopne
or
imul
dec
out
arpl
mov
movs
inc
xchg
lea
scas
push
mov
pop
into
xor
call
pop
arpl
out
inc
xchg
mov
adc
sub
aaa
mov
sub
jb
add
fsubr
inc
jmp
xchg
mov
cmp
das
aam
jl
daa
test
mov
jbe
push
sar
sbb
mov
dec
or
jns
mov
outs
push
ins
add
imul
call
cmp
jns
outs
int3
xor
fsub
mov
xor
int
cmp
in
or
xchg
(bad)
mov
pop
(bad)
cmc
aaa
std
(bad)
sub
sbb
sub
xlat
mov
lock
sub
addr16
or
and
pop
jecxz
add
pop
shl
out
mov
pop
push
fs
push
jmp
adc
add
mov
fistp
dec
int3
xor
repnz
loope
ss
pop
test
pusha
jns
or
push
xchg
mov
lock
add
lods
outs
and
dec
hlt
clc
scas
data16
sub
push
adc
jecxz
xor
ins
xchg
(bad)
fmul
jg
push
neg
xchg
(bad)
aam
xchg
or
jecxz
cmp
and
sub
fsubr
clc
mov
inc
lds
loop
cmc
push
sbb
test
popa
fmul
jb
retf
mov
jmp
jne
jp
fsub
test
jo
std
lock
pop
push
push
test
jg
sbb
fstp
jecxz
mov
ficomp
mov
mov
jl
repnz
cmp
inc
jmp
lods
or
lods
lods
xchg
push
inc
adc
xchg
add
xor
xchg
cli
ss
mov
fstp
xchg
das
jno
jne
cmp
sub
push
mov
and
inc
repz
movs
repnz
inc
repz
add
jmp
into
lods
fs
push
xor
xor
sbb
push
fwait
hlt
and
jmp
jl
cmc
pop
xor
mov
das
xchg
neg
lods
scas
xor
push
mov
cli
dec
or
fidivr
sbb
xchg
fldenv
(bad)
in
xchg
cmp
stc
imul
push
rol
dec
mov
aad
std
outs
cmp
stc
push
mov
in
or
mov
pop
retf
call
aam
movs
mov
push
jmp
add
sub
dec
shl
jle
dec
adc
xlat
retf
dec
fwait
jle
cmps
and
fcmovnbe
mov
retf
dec
push
mov
mov
popf
mul
xchg
sbb
add
popa
lea
pop
push
gs
dec
jl
mov
loope
mov
sbb
xor
xchg
inc
jl
(bad)
cli
jae
test
jno
fwait
push
jae
stc
loop
xchg
mov
jns
imul
repz
and
mov
test
mov
inc
sbb
push
and
mov
push
int
pop
ss
inc
pop
in
push
sbb
cmps
sub
test
rcr
jge
outs
pop
test
xor
ins
jecxz
xor
fucomip
bound
xor
ins
cmps
rsqrtps
cmp
mov
sbb
push
mov
imul
cli
or
js
push
loope
dec
fdiv
sbb
minps
xchg
mov
dec
pop
pushf
sub
xchg
arpl
jmp
dec
(bad)
pop
call
scas
das
mov
push
mov
and
xchg
sub
jp
shl
xchg
inc
mov
xor
xor
aaa
pop
cmps
(bad)
lea
cmps
xchg
sbb
jp
mov
in
imul
(bad)
mov
or
cmp
imul
jb
aad
lds
ins
inc
scas
hlt
xor
cmc
nop
push
or
push
or
nop
dec
outs
jg
inc
mov
mov
xor
and
mov
push
scas
sub
xor
jge
repz
out
in
jae
add
ins
(bad)
shl
jb
ins
xor
and
push
sub
xchg
mov
stos
sub
mov
pop
xor
adc
mov
mov
dec
xor
push
push
xor
hlt
(bad)
cmp
and
adc
int3
inc
xchg
xor
mov
add
or
cmps
test
pop
mov
mov
mov
fadd
push
mov
or
shl
fist
retf
pop
push
movs
adc
sub
outs
jns
fcomi
mov
jecxz
imul
and
ds
fistp
repz
mov
inc
jg
or
(bad)
(bad)
xchg
jecxz
pop
call
cmp
pushf
xor
adc
sbb
fwait
add
pusha
gs
mov
fbld
es
cli
add
mov
push
fwait
movs
scas
out
dec
lods
adc
inc
jp
in
mov
and
scas
push
add
pop
xchg
mov
scas
fxch
aas
jecxz
mov
(bad)
xchg
stc
or
out
ror
mov
mov
cmc
pop
lock
pushf
sub
nop
(bad)
sbb
int3
movs
jmp
aad
xor
rcr
in
cmp
mov
pop
jl
std
aad
pop
cdq
lahf
test
retf
xlat
pushf
push
push
xchg
(bad)
imul
adc
ins
mov
arpl
push
iret
imul
cld
and
pop
mov
ret
pop
lds
shl
rol
ret
retf
jne
les
sbb
fidiv
push
aaa
add
shl
jnp
lods
test
push
dec
fbld
add
div
fucomip
pop
pop
pop
inc
(bad)
mov
lods
js
rcl
and
mov
push
movs
ret
sar
cmp
and
cs
test
mov
call
test
imul
mov
enter
mov
mov
adc
jp
push
aas
ret
jg
mov
dec
pop
mov
sbb
adc
or
in
je
mov
movaps
mov
cmp
cmps
add
cdq
add
push
scas
xchg
int3
stos
aam
jb
dec
xchg
push
cmps
imul
fdiv
lods
stos
or
sbb
sub
adc
jne
nop
jo
add
ss
out
ja
shl
and
sahf
mov
xlat
xor
cld
inc
add
out
push
arpl
mov
fs
adc
movs
cmc
nop
test
cmc
cmp
mov
stos
ret
jmp
pop
pop
jns
test
into
add
pop
(bad)
les
add
stos
push
in
rcr
xchg
cmp
scas
jno
xchg
mov
push
mov
mov
sbb
iret
pop
retw
loop
xor
mov
pop
jg
push
sahf
pop
fdivrp
jb
(bad)
sbb
mov
inc
(bad)
fcomp
sub
add
fs
shl
(bad)
mov
nop
inc
adc
ret
cmp
or
sahf
mov
sub
or
push
fs
loop
pop
or
(bad)
mov
rcl
iret
(bad)
inc
or
mov
jne
inc
mov
pop
pop
ins
outs
(bad)
fisub
aas
or
pop
aad
adc
test
sub
mov
sub
cmp
xor
fisttp
jae
inc
(bad)
xchg
sub
aaa
aad
sub
pop
xchg
jno
jl
mov
sub
fwait
test
jp
repz
mov
aas
shl
std
xchg
ret
cmp
fwait
test
fiadd
jecxz
push
icebp
fld
or
mov
pop
gs
pop
xchg
xchg
mov
mov
dec
xlat
and
cmps
stc
das
sub
sub
add
fs
sbb
imul
jge
cdq
push
hlt
nop
sbb
fsub
mov
sbb
jo
call
pop
push
jle
mov
sub
or
mov
mov
add
loopne
mov
arpl
sbb
popa
push
pop
jno
dec
jne
test
bound
out
das
leave
dec
cmp
or
(bad)
mul
(bad)
ja
pop
test
mov
aaa
rcr
les
ss
inc
(bad)
add
(bad)
mov
imul
sub
xchg
jns
xor
jne
hlt
add
fiadd
shl
add
les
imul
push
lods
sub
lds
movs
xchg
xchg
dec
fild
stc
sub
(bad)
dec
popa
xor
fnsave
sbb
test
leave
std
(bad)
xchg
mov
aas
mov
nop
jnp
dec
out
push
data16
jl
xor
std
aaa
jp
movs
out
inc
in
jae
ja
jmp
sub
dec
pop
jne
aaa
inc
into
lods
cmp
adc
xchg
stos
sbb
in
pop
imul
cmps
xchg
iret
cmps
pop
mov
lea
adc
jecxz
in
cmp
pop
addr16
xchg
inc
fbstp
call
push
fstp
shr
retf
dec
aam
lock
fst
or
sbb
sub
jecxz
jmp
push
push
pop
ss
pop
iret
dec
adc
cld
sar
and
jmp
jp
int
adc
into
in
cs
adc
push
mov
cs
push
movs
aad
mov
scas
xor
stos
sub
mov
ss
xlat
movzx
fistp
hlt
sbb
scas
dec
xor
inc
(bad)
sub
xchg
repz
and
inc
sti
inc
mov
adc
cmp
or
xor
mov
icebp
mov
dec
push
inc
ja
inc
aad
xor
fnstsw
mov
adc
xchg
add
leave
push
push
mov
fnstenv
mov
ins
mov
jmp
imul
xchg
xchg
pop
ss
repz
sbb
xchg
mov
ss
dec
stos
jl
sar
jae
add
clc
pop
xor
mov
call
xchg
mov
pusha
jo
cwde
sti
inc
cmp
ret
loopne
cmp
fcomi
xchg
push
mov
out
sbb
test
xor
imul
xor
sub
enter
or
(bad)
xchg
shl
jo
lods
jnp
(bad)
jno
xchg
scas
shr
scas
push
push
nop
push
fistp
and
push
icebp
scas
cmc
adc
xchg
and
clc
sub
out
aad
cmp
daa
dec
sti
jle
xchg
test
adc
mov
push
pusha
dec
cmp
push
sub
push
xchg
pop
adc
movs
movs
dec
sbb
or
sbb
movs
loope
frstor
push
lahf
lock
sahf
push
daa
shl
sub
mov
jno
icebp
arpl
out
call
(bad)
repz
ficomp
adc
sbb
push
xchg
mov
sbb
das
adc
mov
mov
push
push
retf
leave
xchg
xchg
pop
cmp
in
adc
(bad)
jae
pop
mov
adc
push
push
xchg
(bad)
aas
jb
popf
pop
inc
in
mov
rcl
pop
and
pop
ret
cmps
nop
retf
(bad)
xor
inc
mov
dec
ja
clc
inc
ins
dec
inc
das
aaa
push
stos
inc
sub
lods
loop
mov
adc
mov
mov
sub
aam
int
ror
adc
(bad)
shr
mov
rcl
adc
ffree
out
dec
push
adc
xchg
jo
xchg
jb
jecxz
imul
sbb
inc
jb
(bad)
xchg
not
mov
ss
fadd
retf
or
xchg
sbb
xchg
lea
stos
lods
pop
jg
cmp
adc
(bad)
pusha
dec
sbb
mov
and
movs
adc
sbb
shr
dec
stos
xor
(bad)
loop
fist
push
jge
jae
fwait
cmp
mov
rcr
xor
pop
jp
lock
adc
adc
or
test
pop
jmp
pusha
pushf
cli
cmp
push
and
push
in
scas
xor
loope
jle
out
ds
push
xor
sbb
outs
pop
sub
adc
adc
fwait
arpl
and
push
cmp
sub
and
jne
add
lea
push
and
sar
or
shl
mov
adc
inc
and
cmp
aas
adc
mov
xchg
retf
hlt
mov
sti
or
jns
adc
add
xor
xchg
pusha
jmp
adc
push
daa
out
add
fistp
xor
(bad)
mov
jbe
jmp
cmp
outs
push
cmp
cmc
sbb
jbe
push
sub
std
aad
push
mov
cs
mov
inc
int3
mov
jg
popf
fsubrp
cmp
push
or
in
mov
mov
fwait
outs
scas
das
ins
fld
(bad)
xor
shr
jp
adc
xor
test
push
stc
popa
data16
pusha
arpl
fdiv
adc
out
add
lods
jp
inc
mov
movs
test
test
jmp
mov
test
and
cmps
jne
inc
sti
ins
pop
ds
adc
retf
fidiv
fsub
jno
pop
shl
push
xchg
outs
into
js
loopne
in
inc
in
xor
mov
dec
frstor
in
ss
and
stos
push
mov
adc
mov
dec
arpl
call
jo
(bad)
repz
(bad)
not
lahf
scas
sub
and
mov
sub
add
fwait
sti
pop
cmp
icebp
mov
cmp
sar
or
in
sub
into
jecxz
mov
inc
add
mov
in
fstp
fdiv
jle
(bad)
jae
lea
(bad)
fsubr
xchg
push
xchg
dec
ds
mov
fst
into
in
push
fnstsw
sar
ror
icebp
sar
inc
xchg
shl
int3
and
addr16
pop
and
in
pop
jmp
popa
addr16
ins
repz
mov
inc
mov
and
stos
scas
inc
jae
push
or
mov
pop
(bad)
xchg
push
xchg
adc
and
push
xchg
hlt
cmp
dec
xlat
fmul
aas
inc
jle
jl
cmp
sbb
lock
arpl
les
movs
mov
imul
xor
mov
mov
sar
sub
and
fsubr
sub
cmp
or
pop
add
jnp
push
push
sub
imul
and
pop
xchg
movs
jmp
fmul
test
clc
loop
mov
and
adc
dec
add
mov
into
mov
aaa
leave
pushf
in
xchg
dec
mov
inc
adc
out
or
mov
add
mov
pushf
and
and
or
idiv
int3
dec
xor
add
test
out
jb
out
mov
sub
mov
mov
cmp
push
mov
adc
and
inc
xor
mov
arpl
mov
(bad)
push
lock
(bad)
das
hlt
fdiv
xchg
push
inc
in
lods
jno
and
inc
fwait
mov
inc
call
dec
jp
aaa
fdivr
out
leave
and
gs
std
pop
aad
add
pop
clc
xchg
imul
pop
xor
push
cmps
lds
mov
out
jl
push
jge
mov
fcmovbe
mov
popf
popf
fcomp
xchg
lds
add
shl
iret
nop
pop
pusha
sbb
adc
aad
mov
push
dec
xchg
retf
xchg
jecxz
(bad)
cmp
pop
in
mov
inc
stos
icebp
mov
mov
mov
cmc
loop
loopne
ins
out
cmp
scas
sbb
inc
std
(bad)
imul
pop
sbb
cmp
cwde
mov
or
or
xchg
mov
imul
mov
inc
shl
inc
es
inc
stos
inc
push
test
and
xchg
pop
fs
pop
lock
cmps
adc
dec
retf
dec
mov
sub
(bad)
sahf
mov
inc
cmp
mov
ret
aam
loope
inc
xchg
loopne
rcl
jne
xchg
data16
mov
lods
inc
push
in
xor
inc
jns
mov
jge
sbb
aad
jl
jg
sub
aas
fisub
repz
sub
fsub
pop
push
dec
xor
pop
xchg
shr
pop
fwait
xchg
ds
mov
add
cmp
or
and
test
push
push
imul
loope
sub
or
ficomp
fisub
push
rep
rol
push
xchg
push
cdq
adc
pop
test
adc
mov
adc
mov
cwde
add
mov
dec
mov
mov
rol
dec
adc
mov
loopne
mov
sub
out
les
xor
jmp
jmp
dec
mov
xor
arpl
jb
test
add
adc
mov
push
hlt
not
fmul
movs
cmp
les
pop
pop
xchg
or
sub
jecxz
enter
mov
sub
icebp
mov
adc
jb
mov
fadd
cmc
sbb
adc
cmp
sti
jno
fdiv
(bad)
clc
or
stc
xchg
xor
xor
ficom
cmp
jne
ins
xchg
jo
rol
and
mov
arpl
gs
dec
retf
cmp
ss
mov
mov
xor
inc
ins
xchg
jg
imul
jnp
std
xchg
test
adc
dec
cdq
pop
adc
std
les
jl
inc
jns
and
mov
cld
xchg
aaa
test
sbb
loop
jns
out
ins
or
cmp
cs
aad
test
and
mov
scas
int3
inc
jno
imul
clc
ret
bound
add
mov
and
adc
mov
and
xor
pusha
in
nop
lock
mov
jae
ss
inc
mov
cwde
iret
push
outs
xor
or
imul
rcr
sbb
jb
mov
add
rcl
mov
lea
dec
clc
fadd
inc
scas
in
dec
add
pop
in
test
mov
into
pop
adc
inc
adc
mov
pop
push
mov
loopne
imul
inc
cmp
pop
push
jecxz
lock
test
sbb
xchg
jmp
inc
movs
gs
inc
fs
test
jecxz
push
jbe
jmp
call
pusha
jno
mov
or
jecxz
clc
mov
fild
mov
mov
in
sub
ret
xchg
jmp
xor
repz
fmul
out
and
mov
ds
fwait
adc
push
stos
fs
or
loopne
sub
and
out
daa
fcmovnbe
dec
fs
lods
or
lods
(bad)
shl
xchg
vmwrite
mov
add
nop
sahf
fnsave
or
ins
pop
retf
or
dec
adc
or
cld
jo
int
and
add
rol
fwait
cmps
stc
movs
cmps
out
mov
adc
hlt
mov
push
adc
sub
neg
cmp
movs
mov
xchg
sbb
cwde
les
mov
mov
ficom
inc
pusha
xchg
lods
test
hlt
or
ret
imul
test
clc
lock
ss
out
inc
mov
dec
mov
mov
arpl
or
pop
pop
stos
xor
add
or
retf
scas
fisttp
inc
and
jl
gs
(bad)
mov
pushf
retf
dec
sahf
ja
rcl
mul
aaa
(bad)
add
add
mov
inc
outs
jb
jecxz
cmc
mov
fsub
jae
inc
inc
outs
lods
mov
fs
push
fcomi
iret
pop
std
outs
jmp
xlat
jae
retf
pop
mov
stc
sbb
and
push
sbb
repnz
xchg
stc
pop
and
or
loope
and
cli
and
fist
mov
xor
fcom
int
pop
inc
inc
clc
sbb
shr
cmps
enter
loope
iret
xchg
ror
ds
int3
mov
mov
mov
inc
jns
mov
lds
std
fadd
mov
repnz
lods
xlat
test
mov
fs
mov
adc
or
(bad)
or
push
popf
mov
pop
sbb
stos
adc
fs
pop
mov
rol
mov
fs
mov
xchg
or
lods
in
xlat
xchg
jo
cdq
aad
shl
push
addr16
adc
inc
rol
mov
ins
adc
and
push
cmc
inc
pop
sub
mov
retf
ja
ins
ds
cld
imul
(bad)
test
xchg
xor
dec
gs
pop
mov
sbb
mov
retf
aas
pop
dec
xchg
lds
int
and
sub
fist
outs
inc
nop
in
lds
push
or
and
popf
xor
or
ret
call
sbb
call
mov
dec
push
cs
(bad)
pop
or
dec
fucomi
sub
add
add
or
pop
daa
push
sbb
sbb
pop
sahf
outs
mov
jbe
call
cmp
enter
cmps
and
pop
not
mov
imul
adc
out
stc
nop
or
retf
test
(bad)
retf
sbb
dec
test
sbb
fidivr
dec
scas
stc
or
xchg
fst
add
scas
mov
xchg
nop
daa
sbb
adc
sbb
add
pop
inc
mov
and
inc
mov
jmp
popa
xchg
retf
ins
adc
mov
into
call
scas
adc
inc
xchg
scas
xchg
jno
mov
(bad)
adc
stos
xchg
xchg
sub
jp
out
pushf
stc
sbb
mov
pop
outs
retf
xchg
test
retf
jg
xchg
ficom
pushf
stos
lods
sub
jb
clc
bound
ds
out
out
imul
push
sub
gs
fstp
int
push
mov
retf
and
(bad)
inc
popa
cmp
xchg
test
ins
jnp
popa
mov
gs
dec
pop
xor
jns
xor
imul
mov
jb
outs
mov
lds
push
out
sub
xchg
mov
mov
mov
push
sub
int3
call
and
or
mov
adc
pop
adc
in
mov
imul
sub
xor
jge
xchg
push
jle
push
dec
inc
xchg
mov
or
popf
adc
add
adc
adc
pop
dec
rol
jb
cs
dec
inc
inc
or
pushf
xchg
mov
bndldx
sbb
frstor
inc
icebp
jp
mov
lds
sbb
lds
ret
jl
rcl
out
pushf
add
ds
sbb
adc
popf
loope
push
add
sub
icebp
push
movs
sub
mov
ret
rcr
retf
mov
fcomi
es
je
ret
clc
xchg
xchg
fidivr
retf
jg
pushf
mov
adc
outs
or
ss
scas
fsubrp
jo
jecxz
shl
sbb
cwde
inc
(bad)
push
loop
mov
sub
add
ins
mov
dec
jne
mov
inc
sub
inc
in
aam
call
xchg
movs
add
aam
call
loopne
repnz
sbb
push
loopne
into
mov
icebp
mov
mov
(bad)
push
adc
scas
fist
mov
(bad)
xchg
xchg
or
outs
jno
mov
mov
fwait
inc
dec
fsincos
movs
xchg
xor
jecxz
sub
popf
scas
push
or
imul
ss
popfw
xchg
xor
stos
mov
mov
xchg
and
and
call
ret
sbb
jne
push
cmp
sbb
push
push
inc
xor
imul
mov
xchg
fs
mov
sbb
mov
aam
cs
push
leave
adc
in
cmp
pop
sbb
dec
(bad)
arpl
sub
(bad)
jl
idiv
(bad)
xor
aaa
js
dec
aam
cdq
fs
int
adc
clc
xlat
(bad)
jge
pop
or
xchg
dec
mov
movs
es
inc
outs
outs
loop
dec
test
loopne
adc
test
les
add
pop
jg
jmp
dec
jle
enter
adc
or
mov
add
(bad)
pop
lods
adc
stos
(bad)
mov
sub
mov
xchg
fbstp
mov
cld
cmp
jl
(bad)
int
retf
daa
xor
imul
test
dec
retf
imul
mov
not
and
je
push
cmp
pop
mov
std
aas
shr
mov
xchg
iret
inc
jo
cmp
fdiv
fst
imul
mov
cmp
out
dec
adc
(bad)
cli
cmp
push
sub
imul
dec
jl
push
mov
loopne
mov
xchg
push
push
mov
xor
cli
xor
sar
adc
ret
sahf
jge
sub
or
push
jecxz
mov
dec
fstp
dec
mov
aas
or
inc
rol
and
jb
and
mov
stos
outs
inc
int
aad
aam
inc
(bad)
xchg
ror
in
dec
into
pusha
dec
mov
pop
mov
sar
inc
aam
inc
jne
adc
pop
pop
sbb
mov
in
imul
push
std
les
jge
mov
sbb
sub
jae
repnz
jecxz
mov
sbb
inc
mov
mov
(bad)
inc
test
lods
cmp
push
pop
fidiv
adc
xor
fwait
shl
test
mov
scas
lds
stos
mov
popa
clc
add
sahf
aaa
mov
out
add
lods
sbb
push
ret
imul
repz
pop
(bad)
sahf
xor
push
sbb
sbb
call
aaa
int3
stc
js
and
jl
adc
out
jmp
cmps
fild
bound
lds
mul
mov
sti
or
pop
cmp
and
les
hlt
inc
sub
push
lock
fild
push
mov
mov
cmps
inc
enter
addr16
lea
push
test
(bad)
cli
mov
stc
outs
hlt
out
mov
test
lds
nop
jnp
retf
xor
sbb
add
lea
lods
inc
loop
sbb
pushf
jge
test
dec
mov
jmp
(bad)
jmp
or
lods
cmp
inc
push
mov
and
mov
in
mov
dec
and
cmp
pop
std
popa
sahf
out
lods
sti
sub
push
jmp
xlat
xchg
and
cmp
cmps
mov
retf
jmp
add
int
inc
mov
cmps
mov
mov
lods
mov
push
pop
xor
xchg
retf
pop
mov
ins
sub
fidiv
cmp
cmp
fsubr
xor
push
mov
push
mov
mov
xchg
xor
and
popa
add
inc
stc
sbb
clc
jmp
(bad)
or
dec
mov
cmp
jmp
retf
inc
fdivr
mov
gs
push
or
imul
out
movs
out
adc
mov
fmul
gs
stos
gs
cmp
ins
es
data16
inc
test
cmp
pushf
mov
and
jnp
mov
(bad)
xor
pop
add
cmp
sub
ins
cmp
mov
mov
push
dec
mov
cmp
or
(bad)
xor
stc
popf
push
xor
dec
inc
aaa
xchg
push
(bad)
cmp
inc
mov
retf
cmps
cdq
mov
and
mov
sar
and
sti
fsub
mov
ss
iret
adc
pop
or
xchg
outs
sbb
xlat
(bad)
call
mov
cmc
out
jmp
lock
xor
pop
jb
mov
jg
cmp
lds
mov
ret
mov
or
int
push
mov
scas
call
jp
xor
pop
test
push
jmp
pop
xchg
jbe
jae
out
ja
cmp
push
cmp
pop
jp
add
lock
rol
pop
rol
adc
sub
es
int3
loopne
movs
sbb
mov
std
movs
push
mov
add
and
fcomp
ret
sbb
hlt
imul
add
jl
pop
jae
scas
mov
(bad)
inc
retf
push
retf
fs
fmul
mov
dec
xchg
xchg
cdq
lock
or
jp
push
cmp
neg
stos
cmp
fwait
loopne
sbb
jmp
jl
cmp
ret
fwait
add
pop
aad
sbb
sbb
jno
push
mov
inc
xchg
mov
sub
or
add
pop
fld
pop
fnstsw
xchg
or
cwde
mov
test
(bad)
mov
jg
mov
mov
mov
xchg
mov
not
cli
fadd
mov
and
lock
push
in
imul
cmp
jmp
add
add
pop
mov
push
mov
push
dec
mov
or
sahf
push
mov
pop
inc
dec
jle
adc
jp
in
or
ins
into
mov
shr
cli
in
cld
ds
xor
push
xchg
cmp
shr
inc
and
lods
stos
popa
shr
or
xchg
xchg
jb
data16
pop
test
add
mov
movs
out
jecxz
mov
call
imul
pop
fdiv
jmp
les
mov
scas
fisttp
xchg
sbb
lock
pop
inc
mov
fdivr
fwait
mov
sbb
in
jb
into
xor
cmp
push
xchg
adc
push
and
clc
mov
fdivr
or
adc
jae
inc
fisubr
fwait
stos
cmp
sbb
add
es
in
mov
fs
mov
dec
(bad)
dec
int3
scas
mov
jmp
sbb
inc
pop
and
inc
sbb
lahf
rcr
jne
add
hlt
ins
into
or
fadd
in
inc
jl
push
in
cmp
and
inc
jl
out
sbb
fisubr
xor
pop
mov
pop
adc
imul
sub
movs
imul
das
and
jl
pop
cld
mov
or
scas
sub
add
sti
push
jl
repz
nop
je
shl
bound
sbb
(bad)
in
(bad)
fidiv
mov
dec
xchg
rol
into
adc
mov
cmps
outs
sub
or
inc
fst
xchg
or
pushf
or
jns
inc
cli
fdiv
add
xchg
pop
push
dec
jge
retf
fbstp
jbe
cs
std
mov
dec
fidiv
mov
adc
lods
mov
sub
idiv
sub
das
gs
(bad)
adc
repz
mov
dec
adc
je
xchg
jge
cmp
(bad)
cmp
(bad)
push
sti
fisttp
test
in
cmps
or
fs
out
fdiv
in
das
gs
in
dec
bound
sbb
stos
mov
in
push
lods
or
out
std
jg
pop
mov
je
jmp
dec
jmp
lahf
loope
loopne
push
push
mov
scas
scas
dec
aam
das
mov
inc
loopne
mov
fwait
les
inc
cmc
push
aaa
test
in
(bad)
xor
pop
das
retf
push
leave
enter
sahf
jns
les
bound
jecxz
sbb
push
push
fsub
pop
inc
mov
mov
(bad)
jecxz
in
sbb
sub
rcr
push
aaa
xor
lods
fstp
dec
add
ret
loope
fnsetpm(287
call
(bad)
shrd
sub
xchg
(bad)
pop
sbb
or
(bad)
mov
xchg
xchg
mov
(bad)
push
std
ror
mov
ficom
call
dec
(bad)
std
ins
pop
in
lods
adc
jge
jmp
jb
std
popf
mov
cmp
adc
fs
pop
pusha
inc
js
movs
cmp
add
hlt
push
lss
xchg
mov
pop
mov
xor
aad
sbb
jns
into
jno
stc
call
clc
jp
lahf
adc
push
xor
lock
ret
lahf
dec
sbb
enter
mov
ret
cmp
lods
std
test
pop
pop
fadd
mov
jge
out
or
push
lea
arpl
cwde
sbb
aas
adc
mov
std
push
enter
push
or
rcl
push
mov
cmp
and
inc
iret
xchg
add
jne
fs
or
js
(bad)
xlat
mov
shr
xchg
cmc
push
pop
jle
jns
mov
dec
dec
jnp
or
mov
sbb
retf
stc
pusha
and
lods
and
call
clc
sbb
inc
mov
pop
or
push
xchg
je
push
jno
add
jl
jmp
inc
mov
mov
jmp
jns
sbb
jae
lea
sbb
popa
xlat
add
pop
in
in
xor
push
and
test
fadd
push
pusha
punpckhbw
imul
adc
lds
int
xchg
outs
cli
gs
mov
clc
sbb
add
add
xchg
and
sub
repz
pop
outs
outs
mov
in
daa
mov
push
mov
shr
repnz
push
int
xchg
fidivr
or
sub
mov
and
(bad)
not
leave
rcr
je
and
push
inc
mov
cmc
mov
or
pop
stc
cmp
push
xor
push
sahf
sub
sbb
mov
mov
movs
xchg
sub
cli
dec
add
jle
cld
outs
xchg
(bad)
arpl
hlt
fild
xchg
pop
out
je
(bad)
clc
pop
ficom
jp
out
clc
sub
jl
add
inc
jl
and
loop
inc
outs
(bad)
out
push
lea
dec
test
jne
or
stos
retf
inc
jecxz
imul
call
pop
sbb
sub
mov
xor
and
(bad)
sbb
dec
daa
xor
fisttp
mov
retf
adc
add
cmp
(bad)
cmps
mov
outs
cmove
push
fadd
sti
addr16
repz
push
add
jnp
hlt
xchg
dec
jp
rol
pop
jmp
fdivr
daa
push
jg
sub
adc
in
test
mov
cmps
sahf
xchg
adc
sbb
outs
pushf
xchg
lods
push
inc
call
movs
mov
pop
mov
dec
test
xchg
or
cmp
sbb
(bad)
mov
add
push
out
add
mov
(bad)
cmps
pop
movsx
fst
pop
jne
mov
addr16
sub
(bad)
cmp
inc
push
jns
cmp
gs
pop
or
xchg
mov
stc
sub
fwait
mov
pop
xchg
in
clc
or
popa
mov
scas
mov
dec
cmp
fistp
and
dec
bound
in
fs
cmp
xchg
bound
(bad)
sbb
out
inc
cmp
cmp
cmps
cmp
or
sub
xor
add
femms
fcmovu
int3
jmp
jl
and
inc
push
cdq
popa
mov
or
pop
cmp
popf
ja
fcomp
jne
dec
inc
add
cmp
enter
inc
push
pusha
jb
sub
dec
lds
add
push
mov
in
mov
cmp
xchg
dec
mov
fld
popf
clc
je
or
ret
jge
push
stos
ret
xchg
repz
sbb
push
adc
je
adc
push
ins
mov
cwde
aam
pop
retf
ss
ret
jo
and
loopne
(bad)
int
or
and
retf
pop
lock
mov
cmp
mov
jbe
sbb
or
xchg
push
ss
push
adc
adc
xchg
mov
fnstcw
xchg
popa
pop
add
dec
or
inc
stc
(bad)
fld
push
mov
xchg
fisub
cmp
in
jnp
dec
daa
(bad)
(bad)
(bad)
aad
push
(bad)
add
sbb
js
popa
fwait
aam
or
cmp
ins
mov
inc
mov
push
inc
mov
pop
and
mov
ss
adc
aam
push
aad
and
inc
dec
fsub
lds
lea
xor
or
dec
test
int3
xchg
out
ret
bound
aam
adc
cmp
dec
scas
in
dec
lds
retf
pop
push
dec
push
jnp
jmp
jle
mov
mov
xor
out
xchg
mov
push
mov
pop
push
imul
adc
cmp
aad
repz
adc
jmp
jmp
(bad)
mov
lods
(bad)
cdq
or
pop
repz
xchg
dec
ja
xor
xchg
(bad)
repz
mov
mov
not
cmps
and
scas
dec
xor
outs
or
outs
fsub
out
sbb
dec
xlat
push
fcom
and
add
cmp
gs
ss
ficomp
(bad)
(bad)
into
mov
xor
(bad)
(bad)
test
jmp
in
cld
std
push
mov
inc
daa
inc
rcr
sbb
fcomp
fs
je
loope
popf
cmps
cwde
les
aas
sub
cmp
jbe
dec
push
add
neg
push
mov
ret
dec
jno
ret
jno
xlat
jno
pop
icebp
popa
pusha
stos
clc
mov
pop
repz
dec
and
mov
js
ret
test
imul
lods
xor
in
loopne
xor
xor
push
or
in
(bad)
hlt
push
aaa
adc
dec
and
mov
jmp
dec
and
cmps
mov
mov
outs
movs
xchg
or
pushf
xlat
jbe
in
or
fimul
pop
call
(bad)
fcmovnb
(bad)
enter
cmps
icebp
les
add
jne
out
cmps
mov
fnsave
dec
cmc
xchg
add
sbb
xor
jle
loope
adc
scas
ret
xor
inc
push
cmps
fmul
(bad)
fnstenv
emms
stos
cmp
cmps
and
jo
mov
jl
pop
add
mov
ret
fwait
pop
pop
pop
ds
outs
icebp
loopne
cwde
lods
add
sub
inc
outs
adc
mov
pop
je
rol
or
sub
dec
lods
sub
cmps
xchg
pop
mov
adc
add
and
jmp
mov
std
adc
sub
ret
jp
dec
sbb
into
aad
sub
test
pop
das
mov
das
fbld
test
cli
push
or
fwait
push
inc
call
inc
shl
or
cmp
jnp
pop
int
fwait
mov
ror
cdq
pop
adc
sub
add
adc
mov
or
mov
xchg
retf
sti
cmp
adc
jmp
sbb
scas
xchg
cld
fcomp
in
rcr
or
ss
adc
mov
(bad)
sub
test
retf
out
test
and
int3
test
jmp
adc
push
jmp
test
cmp
push
pop
fbld
test
hlt
sar
and
imul
call
loopne
xlat
stos
xchg
mov
sub
xchg
iret
ja
(bad)
or
test
mov
adc
fcmovnb
jae
adc
push
xor
ds
sub
daa
out
sar
mov
jp
mov
lock
sbb
dec
fistp
jne
dec
sahf
dec
cmp
je
xchg
mov
lods
xlat
inc
ss
sub
es
sub
or
or
cmc
inc
mov
adc
scas
and
nop
mov
sbb
outs
dec
sub
ds
rcl
test
inc
mov
enter
inc
mov
or
cmp
into
add
and
jns
dec
xor
xchg
fucomi
das
mov
adc
lds
or
push
js
popa
mov
dec
pop
cmps
outs
add
mov
or
(bad)
mov
fbld
pop
retf
push
clc
fs
mov
jle
mov
sbb
fwait
push
pop
pop
push
sbb
imul
cmp
ret
cmp
sahf
mov
(bad)
dec
push
pop
mov
sbb
or
dec
imul
scas
push
ins
es
xor
pop
cmp
fucomp
adc
stos
in
jns
ret
push
pop
xor
add
dec
xchg
jnp
sbb
nop
lods
inc
add
popa
iret
rcr
xchg
add
inc
in
scas
mov
mov
dec
and
jne
xchg
add
dec
mov
mov
ds
dec
pop
aaa
aas
adc
push
jne
neg
jbe
jle
cmps
xchg
push
imul
xor
dec
je
outs
cdq
stc
mov
cld
mov
test
or
xchg
cmovg
xor
into
mov
arpl
adc
inc
loop
neg
je
ins
add
pusha
mov
jmp
int3
inc
movs
jae
cs
xor
mov
mov
dec
ins
call
fwait
and
push
cwde
mov
daa
aaa
pop
pop
stc
sbb
mov
push
add
cmp
and
nop
out
xchg
popa
loope
lods
dec
inc
iret
(bad)
pop
sub
push
pop
loope
or
push
xor
cmps
iret
pusha
add
add
sti
push
dec
pusha
hlt
test
mov
test
xor
call
retf
cmps
push
sbb
cmps
mov
push
and
ss
and
cmc
and
in
dec
xor
adc
cs
inc
jns
(bad)
retf
out
loope
push
jl
shr
mov
les
sbb
adc
dec
xchg
mov
push
and
je
inc
popf
and
or
cmp
sbb
repz
xchg
idiv
mov
in
pop
push
test
inc
mov
adc
dec
in
add
popa
and
std
outs
dec
fidiv
xor
or
adc
mov
iret
sub
jne
add
cmps
pop
adc
test
dec
jge
ds
xchg
cmc
test
std
imul
fist
fisubr
add
int3
inc
pop
imul
adc
mov
cli
call
xchg
mov
(bad)
add
ins
push
mov
mov
out
sbb
and
cmps
stos
dec
mov
cmp
loopne
mov
mov
rcl
mov
inc
out
xchg
(bad)
cli
pop
in
inc
lods
xor
cli
mov
xchg
(bad)
sbb
pop
sub
xlat
ror
inc
xchg
dec
cld
mov
mov
mov
and
clc
aam
mov
stos
and
push
cmp
jg
rcr
sbb
push
ja
ins
fistp
(bad)
cld
pop
mov
sbb
loope
or
jae
popf
pop
sub
movs
mov
pop
sahf
cmp
outs
jns
cld
add
ins
fild
lahf
inc
or
lds
xchg
cmps
push
xor
lea
inc
loope
add
ret
mov
jle
out
or
jbe
movs
ror
adc
push
jns
les
(bad)
cmc
and
int3
retf
pop
iret
pop
xlat
inc
stc
jbe
in
and
push
ins
xor
es
iret
mov
push
cs
mov
add
aaa
fcomp
xchg
cmps
dec
add
push
ins
dec
je
pop
leave
add
push
mov
fidiv
inc
dec
sbb
stos
dec
xchg
jbe
mov
push
jp
sbb
fcom
outs
jbe
cld
pop
fxch
cs
aad
adc
fcmovnbe
cld
scas
jb
test
cmp
inc
(bad)
into
imul
lods
fild
scas
and
mov
mov
cmp
dec
(bad)
rcl
adc
jnp
inc
jle
xchg
nop
and
pop
pop
test
push
adc
xlat
mov
jg
aaa
cmp
div
nop
mov
xchg
(bad)
xor
xor
lods
(bad)
push
jne
test
jl
jns
mov
ins
(bad)
cmp
repnz
pop
lea
mov
mov
add
mov
(bad)
hlt
ja
dec
dec
mov
js
xchg
jno
in
push
jmp
call
and
dec
jp
mov
adc
inc
and
sub
adc
cwde
jmp
dec
(bad)
ja
add
aaa
rcl
dec
sub
popa
in
cli
dec
mov
rcl
xchg
or
inc
xor
repnz
int3
cmp
or
ret
cmp
lds
in
cdq
ss
mov
sub
jnp
mov
test
lds
inc
adc
std
add
je
push
dec
pop
pop
or
sub
mov
cmps
cdq
inc
ret
pop
(bad)
xchg
inc
jnp
inc
fidivr
iret
lods
cmp
mov
jo
sbb
mov
rcr
sahf
loopne
xor
(bad)
es
jns
scas
(bad)
jb
int
aam
mov
sbb
imul
add
dec
outs
nop
sub
cld
xchg
out
sbb
lods
jns
xchg
rcr
in
adc
cmp
sub
(bad)
xor
test
lea
mov
es
pop
xor
fmul
int
pop
js
rol
scas
into
xor
cmp
ror
rol
addr16
jge
hlt
lods
mov
cmp
daa
fs
pop
push
xor
fisubr
add
mov
jge
adc
sbb
icebp
pop
scas
mov
das
mov
pop
sub
push
dec
into
in
mov
leave
mul
cmp
addr16
xor
jne
loopne
xchg
arpl
push
out
shl
aaa
mov
sbb
mov
in
mov
(bad)
lods
push
das
mov
xchg
jmp
cmp
mov
or
mov
pop
jg
shl
and
or
pop
cdq
lods
repnz
push
es
retf
and
icebp
inc
or
mov
popa
mov
in
push
jl
or
movs
out
push
mov
sub
jmp
and
dec
push
int
sbb
jbe
cmp
xchg
or
in
adc
pop
das
jbe
movs
xchg
cld
in
jo
jmp
sub
int
jmp
addr16
pop
enter
jb
sar
jne
xor
(bad)
bound
fstp
sbb
retf
inc
cmps
push
fild
(bad)
lahf
rol
push
push
js
adc
xchg
or
das
jp
push
xchg
pop
retf
call
in
in
cli
xchg
mov
psadbw
gs
out
stos
mov
push
add
mov
or
pusha
div
es
leave
movs
mov
xor
mov
movs
jle
adc
movs
pop
retf
sub
mov
mov
inc
adc
xchg
cs
or
imul
jg
scas
xor
test
lahf
fiadd
add
aas
pop
dec
cmps
(bad)
mov
(bad)
or
lock
push
xor
test
push
inc
(bad)
jecxz
mov
cmp
fdivp
inc
shl
enter
jge
sti
mov
lock
es
adc
in
adc
int
xor
jmp
pop
daa
outs
dec
mov
shl
fimul
add
or
repz
stos
mov
cmps
jne
and
stos
push
push
push
addr16
cmp
(bad)
push
and
dec
xchg
mov
mov
cmp
cs
sbb
adc
sahf
mov
(bad)
rcl
or
cmp
pop
data16
mov
adc
out
mov
add
ror
test
dec
sub
jge
mov
ret
adc
push
les
sbb
das
or
add
cvtps2pd
(bad)
iret
push
pop
(bad)
(bad)
pop
jge
mov
stc
mov
aas
mov
or
add
pop
sbb
inc
jge
push
fadd
pop
mov
xchg
xchg
arpl
sbb
push
inc
aas
ins
pop
ja
push
outs
push
ss
inc
mov
inc
adc
sbb
aad
pop
adc
xor
dec
or
push
xchg
psubd
push
pop
mov
(bad)
sbb
sahf
mov
ret
test
neg
and
jbe
cld
add
adc
clc
add
mov
retf
lea
and
fbstp
pop
dec
mov
jp
mov
lahf
mov
enter
bnd
mov
adc
(bad)
rep
ds
cmps
ret
frstor
pop
mov
call
jmp
mov
lea
fnstsw
jl
and
add
lock
std
jmp
cwde
les
cs
jle
cmp
jns
fistp
push
call
or
dec
dec
dec
dec
xor
mov
shl
xchg
sub
cmc
inc
jno
or
loopne
add
xchg
sbb
inc
pop
xor
out
fnstcw
adc
mov
bound
push
add
or
rsqrtps
push
ficomp
cs
jge
shl
xchg
and
sub
ins
cwde
pop
and
mov
xor
and
push
repnz
pusha
xor
loope
js
pop
mov
sbb
add
or
inc
(bad)
scas
ss
add
ss
cdq
icebp
in
mov
pop
cmp
bound
(bad)
arpl
mov
fisttp
dec
or
retf
cmp
icebp
in
adc
call
cmp
or
push
iret
fwait
mov
add
cmps
fwait
test
jmp
fbld
jge
cs
cs
out
inc
mov
jb
adc
push
cmp
fsubr
add
cmp
sar
jg
retf
push
loopne
ins
dec
mov
ins
push
ja
and
jecxz
jp
mov
cli
ins
cli
mul
pop
pop
cdq
shr
inc
jae
add
mov
(bad)
ins
pop
cs
mov
test
jo
xchg
sub
fmul
rcl
aaa
popa
popf
sbb
lods
push
mov
popf
adc
xor
(bad)
push
test
scas
jnp
xchg
xor
popa
stos
inc
es
or
xchg
adc
das
scas
add
xor
fsubp
sbb
jae
sti
inc
es
mov
repnz
in
imul
ins
adc
aad
push
mov
pop
pop
lods
sub
bound
nop
retf
popf
cmp
mov
scas
mov
lods
mov
(bad)
or
(bad)
mov
xlat
sub
imul
neg
cmc
dec
mov
call
lahf
dec
and
xchg
add
into
scas
adc
aas
mov
xchg
call
(bad)
dec
cli
pop
jbe
mov
imul
(bad)
inc
adc
dec
jecxz
enter
jb
adc
pushf
mov
nop
xchg
adc
loopne
push
mov
jge
lods
dec
fcmove
inc
and
mov
jns
test
into
sub
inc
js
pop
cmps
adc
fild
jb
push
int
mov
hlt
and
std
out
cmp
shr
cmp
sahf
mov
pop
leave
pop
sbb
mov
nop
aaa
mov
ror
inc
into
stc
jmp
and
jns
pushf
icebp
mov
and
push
jecxz
ret
inc
mov
push
cmp
mov
cli
clc
sbb
retw
adc
sar
mov
jmp
(bad)
dec
leave
or
mov
aas
test
mov
call
adc
cmc
dec
push
ds
adc
loope
inc
mov
(bad)
pushf
dec
test
mov
sbb
sub
stos
jnp
mov
repnz
lds
mov
addr16
in
ret
sub
sub
mov
ds
sbb
dec
je
jns
fs
in
jecxz
inc
je
xchg
sub
movs
lea
jo
xor
cmp
dec
cmp
mov
mov
dec
stc
push
mov
adc
sbb
mov
mov
jge
mov
pop
in
push
xchg
inc
mov
js
stc
inc
and
dec
cwde
and
mov
test
dec
mul
daa
lds
pop
lods
mov
movs
jg
jmp
and
imul
fsubp
adc
js
adc
adc
mov
xchg
aas
sbb
xchg
(bad)
fdiv
outs
mov
adc
push
jb
js
mov
sbb
mov
inc
sbb
aam
adc
mov
fbld
in
or
fwait
add
mov
jmp
cmp
xchg
adc
or
(bad)
in
test
sub
or
jbe
jb
pop
popf
inc
inc
hlt
ja
(bad)
mov
sbb
lods
inc
rcl
pop
add
xchg
jp
hlt
and
fucomp
jg
mov
lds
pop
pop
push
daa
iret
popa
popa
lock
imul
add
ss
sbb
push
mov
mov
stos
(bad)
mov
cmp
ins
jmp
push
xchg
in
data16
in
gs
lea
data16
jnp
sti
ins
hlt
jmp
mov
sub
push
and
aas
or
or
or
rcl
pop
jg
mov
inc
jb
cmps
push
jmp
xchg
enter
in
pop
dec
repnz
cmps
inc
pop
adc
mov
stc
sub
sbb
pop
or
mov
or
jl
cwde
(bad)
jl
dec
in
or
jbe
mov
call
(bad)
mov
or
mov
sbb
xchg
sub
adc
sbb
fcmovnbe
sub
daa
sti
jnp
cmp
dec
cmp
mov
imul
out
shl
jnp
xchg
push
cmp
pop
xor
ins
pop
or
(bad)
sbb
dec
adc
xor
sub
out
pop
push
inc
iret
out
dec
fyl2xp1
(bad)
out
pop
xor
imul
ds
aaa
sub
cmps
rol
inc
sub
js
dec
cmp
xchg
loop
test
inc
xor
xor
push
and
mov
imul
pop
sbb
rcl
clc
(bad)
sub
test
cmps
fbld
scas
mov
(bad)
cwde
dec
push
xchg
dec
ret
cli
mov
sub
jne
push
xor
dec
rcr
cmp
in
mov
jno
jmp
inc
sbb
and
xchg
fist
not
sub
push
push
fsubr
pusha
cdq
sbb
add
in
rol
cmp
int
gs
mov
sub
jmp
mov
or
or
xor
out
mov
cdq
rcl
jmp
gs
jb
mov
push
fnstcw
out
fnstsw
ss
or
enter
es
ss
xor
add
data16
mov
jbe
not
cmps
aam
and
outs
mov
push
ds
into
xchg
ret
outs
movs
leave
mov
cmp
sqrtps
lds
push
das
sbb
(bad)
adc
and
rcl
mov
mov
(bad)
mov
push
xlat
add
jb
retf
push
push
xchg
pop
popa
test
shl
pop
lea
in
fistp
lea
pop
cdq
push
cmps
retf
xchg
jmp
imul
sub
or
sbb
or
retf
stos
push
jae
pop
in
sbb
pop
ss
cmps
sub
mov
and
aam
adc
stc
jg
call
(bad)
mov
push
or
iret
call
sbb
sti
fidiv
xchg
mov
push
dec
enter
sbb
cmc
mov
pop
adc
push
nop
mov
mov
sbb
psubb
mov
mov
sar
jmp
movs
lods
js
iret
sub
ret
ror
fprem1
(bad)
out
jmp
ror
mov
lods
mov
shr
or
sub
cli
sbb
js
dec
out
mov
mov
push
jnp
mov
dec
pop
push
adc
and
je
in
adc
fsub
xchg
xor
shr
cmp
push
cmp
int3
daa
repnz
xor
pop
fimul
stos
ret
popf
jecxz
call
inc
fisub
mov
xchg
retf
ins
sbb
sbb
or
out
ss
adc
push
leave
(bad)
cmp
iret
in
into
mov
retf
out
in
mov
push
int3
mov
data16
outs
jne
pop
cmp
out
jno
pusha
xchg
cli
fs
and
dec
movs
mov
push
and
push
xor
fisttp
mov
adc
je
push
jmp
int3
cmp
push
ret
sub
adc
dec
stos
jle
jle
or
clc
push
(bad)
icebp
aam
out
jmp
jnp
aad
or
cmps
retf
xor
cdq
ja
mov
pop
(bad)
outs
dec
mov
push
xor
push
test
lds
adc
lahf
jge
stos
dec
retf
in
sub
retf
rcl
inc
(bad)
fldcw
je
(bad)
into
pop
out
mov
into
mov
xor
xchg
sahf
loopne
sbb
xor
mov
sub
dec
sar
retf
dec
add
push
and
dec
sbb
cmps
adc
cmp
mov
es
push
ins
repz
lahf
loope
ja
ja
cwde
push
pop
cld
iret
inc
loop
out
addr16
cli
mov
push
sub
les
outs
retf
sub
out
add
mov
mov
test
inc
repnz
cld
sbb
into
adc
loope
rcl
cdq
xchg
or
outs
imul
lds
loopne
jecxz
adc
(bad)
aam
push
mov
clc
leave
retf
in
inc
cmp
sub
lock
mov
icebp
ror
mov
push
outs
add
adc
dec
sti
jbe
lds
fwait
mov
ins
cmp
(bad)
outs
jns
mov
stc
ror
(bad)
retf
xor
xchg
cmp
sub
dec
scas
mov
not
test
mov
push
jmp
mov
iret
ja
dec
mov
xor
dec
sti
aas
pop
in
lods
int
out
add
jae
inc
cmp
(bad)
aaa
adc
imul
out
ret
outs
leave
lods
push
dec
xchg
test
int
outs
cwde
out
(bad)
(bad)
adc
fst
mov
arpl
xchg
xlat
outs
cmp
and
pop
mov
fistp
mov
stos
dec
adc
mov
push
fidiv
adc
mov
aas
lahf
mov
mov
(bad)
fdiv
mov
jmp
pushf
(bad)
mov
sub
and
data16
pop
nop
movs
pop
mov
rcl
sbb
iret
xor
jle
mov
idiv
mov
sbb
inc
hlt
cmp
cmp
inc
pushf
cmp
gs
(bad)
cmps
xchg
pop
popf
addr16
pop
mov
stos
sub
jns
je
fsub
mov
jnp
xchg
inc
fldenv
scas
adc
or
jns
add
int
mov
jge
fild
neg
and
into
mov
lahf
sbb
ds
adc
sub
cmp
jecxz
fld
loopne
xchg
jb
sbb
fldenv
sbb
xor
mov
out
movs
jns
jmp
mov
and
fadd
call
cmp
or
ss
and
ds
in
fwait
inc
lods
jmp
shl
jns
pusha
sbb
stos
xor
cld
hlt
jmp
cmp
push
es
repz
loop
in
sbb
mov
call
(bad)
mov
mov
test
pop
xchg
(bad)
cdq
(bad)
sub
and
jp
(bad)
fadd
jnp
fwait
sti
or
mul
xor
cwde
push
add
aam
std
inc
in
push
xchg
inc
xlat
aad
xor
push
and
and
repz
(bad)
shl
clc
mov
pop
and
clc
xchg
xchg
scas
cmp
clc
pop
popf
add
sbb
clc
das
cpuid
adc
test
mov
call
or
dec
in
repnz
daa
ja
mov
test
mov
rol
ret
fs
inc
call
shl
div
push
scas
stos
clc
mov
jb
inc
jae
lock
sahf
jb
mov
inc
scas
xor
mov
push
test
dec
enter
mov
call
or
mov
data16
and
sub
mov
cmps
std
mov
dec
mov
mov
das
cld
and
jne
pop
cmp
add
and
out
pop
in
call
in
mov
in
xchg
fldcw
test
inc
call
cwde
mov
mov
and
or
or
sub
sar
bound
pop
aas
or
test
sbb
out
pop
imul
sti
loopne
mov
fisttp
retf
mov
fadd
pop
xor
and
cld
add
push
sti
jno
cli
frstor
push
sbb
lahf
aaa
mov
inc
add
cmc
jg
lea
aaa
jle
dec
push
stos
repz
dec
cmps
sbb
loope
and
fwait
imul
ds
dec
push
aas
(bad)
rol
shl
lods
sub
fld
xor
mov
pop
pop
jbe
ja
sbb
cmp
cwde
fdiv
push
orps
lods
ss
rol
fwait
jl
sar
pop
jne
ins
mov
sahf
mov
enter
pop
xor
sub
out
xor
test
dec
fmul
fnstsw
fwait
jecxz
mov
daa
loop
pop
outs
popa
mov
scas
popf
xchg
pop
jo
outs
daa
xchg
loopne
sub
push
jge
jmp
cmc
mov
jge
pop
pop
mov
gs
pcmpgtb
mov
inc
and
ins
into
out
loop
adc
mov
adc
ret
sahf
fiadd
mov
pop
cmps
movs
fisttp
or
fisttp
and
mov
xchg
pop
push
mov
ret
mov
push
or
cmp
stos
xor
dec
mov
sbb
push
popa
mov
push
mov
mov
sbb
iret
les
in
outs
jnp
jmp
sub
out
call
ret
mov
and
cld
mov
imul
lods
sbb
pop
ret
test
out
and
aam
fdivrp
mov
jge
imul
or
lods
sub
mov
lods
xchg
inc
sbb
dec
xor
daa
movs
js
fwait
stc
lods
icebp
mov
lahf
or
addr16
in
add
stc
adc
push
fistp
adc
xchg
inc
imul
fs
retf
ja
fst
mov
xchg
jp
push
movs
push
inc
inc
arpl
pop
repz
push
and
pusha
dec
push
div
ja
fs
out
sar
pop
lock
push
or
mov
pop
mov
data16
aam
imul
xor
je
out
adc
sbb
and
cmps
inc
lea
lock
sbb
add
dec
jle
mov
pop
arpl
jnp
xchg
das
test
xchg
xor
dec
pop
das
ins
je
jne
fistp
inc
adc
jbe
and
leave
pushf
in
loopne
mov
(bad)
lods
into
hlt
icebp
fadd
data16
call
mov
cmp
fst
jne
cmp
outs
mov
and
push
addr16
ds
and
shr
(bad)
jmp
pop
adc
push
add
mov
mov
jb
loopne
clc
mov
pop
push
loope
bound
jb
outs
pop
sbb
cmps
out
ret
addr16
dec
out
adc
shl
out
add
movs
add
bound
sbb
and
aas
add
addr16
jg
push
les
push
mov
cmp
repnz
call
fwait
sub
inc
or
xchg
and
call
add
fs
or
mov
mov
das
(bad)
scas
add
cdq
dec
imul
std
jnp
pushf
push
xchg
mov
add
test
xor
pushf
xchg
popf
jle
outs
xchg
dec
add
imul
mov
mov
(bad)
retf
inc
mov
add
inc
pop
(bad)
xchg
lahf
sbb
mov
dec
sbb
movs
add
or
lods
test
add
xchg
or
rcl
arpl
jmp
sbb
xlat
shr
push
inc
sub
dec
psubusw
outs
daa
adc
data16
or
mov
mov
add
loopne
cdq
inc
es
movs
dec
jp
cmp
sbb
pop
or
inc
iret
xor
arpl
cmp
popa
sahf
test
xor
cmp
push
or
aas
add
cmp
cli
push
(bad)
push
xor
stos
sbb
je
rcl
mov
and
dec
pop
fld
cdq
sub
ret
leave
ds
fisttp
xchg
loope
scas
(bad)
daa
sbb
addr16
xchg
mov
fucomi
(bad)
pop
jmp
call
xor
inc
pop
sub
dec
jmp
jecxz
cmp
adc
ret
lods
jno
pop
lock
js
arpl
inc
cmp
ins
sbb
loope
add
dec
in
cwde
imul
pop
sub
cmp
aaa
(bad)
(bad)
mov
fist
lds
cld
sub
aad
inc
idiv
or
mov
std
sbb
and
sar
dec
inc
jmp
sbb
aas
jge
pop
push
dec
les
inc
jae
loop
jno
xchg
loop
sub
mov
repnz
dec
adc
mov
bswap
lea
aas
out
dec
push
cmc
adc
ins
fld
pop
mov
cmp
mov
cli
sbb
and
ror
and
xor
stc
not
pop
jl
or
xor
mov
in
and
mov
ret
inc
scas
int3
mov
movs
inc
shl
outs
mov
jmp
adc
out
cld
cmps
sbb
xor
sbb
pop
scas
and
pushf
mov
icebp
in
mov
lock
rcr
fistp
scas
div
stos
or
not
mov
jmp
daa
or
aaa
inc
stos
xchg
lahf
mov
inc
or
into
lock
push
js
or
jbe
adc
and
xor
cmp
jnp
or
or
dec
xor
pop
pop
popf
xor
pop
sbb
sub
cmp
jb
dec
(bad)
sbb
fistp
pop
dec
das
gs
(bad)
jae
daa
popf
pop
pop
and
push
jp
dec
sbb
shl
aam
or
mov
mov
adc
and
cmp
mov
iret
scas
test
lock
pop
ret
jb
dec
push
jb
shl
mov
push
sub
mov
mov
sbb
mov
(bad)
mov
sub
mov
xor
je
inc
xor
sbb
cld
and
mov
mov
inc
inc
and
arpl
adc
or
and
push
push
adc
jb
(bad)
call
in
add
mov
dec
pmaxsw
add
or
shl
jle
leave
aam
rol
icebp
aaa
js
add
dec
loopne
(bad)
mov
ret
retf
sbb
add
jp
call
push
add
scas
stos
xchg
sub
cmp
mov
punpckhwd
call
movs
or
sbb
jb
fldcw
and
(bad)
cdq
repnz
js
shl
stc
data16
call
sbb
mov
jl
push
out
push
jo
add
int3
mov
add
inc
inc
sbb
shr
lahf
dec
aaa
inc
sub
shr
popf
inc
int
pop
and
lods
loopne
stos
sbb
or
call
fsubr
add
add
push
adc
stc
(bad)
fcmovu
test
and
pop
loope
inc
int
dec
fstp
cmp
fwait
lock
test
outs
aad
mov
out
ins
push
stc
xchg
dec
and
mov
pop
int
pop
xchg
xchg
push
das
pmaddwd
call
xor
pop
and
int
out
leave
sbb
gs
movs
out
add
in
loope
mov
pop
inc
mov
sbb
inc
loop
push
dec
push
iret
mov
scas
lea
add
scas
cmps
scas
bound
movs
jbe
repnz
imul
dec
rcl
xlat
inc
(bad)
(bad)
test
les
xor
mov
xor
mov
jo
jle
je
mov
aaa
pxor
enter
ret
adc
(bad)
fstp
pushf
enter
iret
xor
or
mov
in
mov
pop
stos
inc
call
sbb
push
dec
(bad)
sub
add
dec
jle
mov
inc
and
cmp
call
movs
or
cmp
loope
adc
test
dec
xchg
sub
loope
rcr
xor
jmp
out
loope
or
loope
outs
fidivr
ins
loopne
test
mov
xchg
shl
pop
push
hlt
ss
adc
inc
xor
mov
or
int3
adc
jbe
dec
data16
jnp
aam
jg
shl
js
xchg
mov
add
adc
adc
adc
movs
mov
aam
cwde
in
ret
jmp
jmp
js
xchg
mov
es
mov
lahf
mov
stc
add
in
inc
es
int
aad
(bad)
xchg
xchg
fprem1
je
fild
cmps
dec
fdivr
xchg
(bad)
sbb
and
mov
and
pop
fwait
push
sub
pop
jae
sub
or
and
test
pminsw
xor
sar
into
add
fs
jo
or
dec
icebp
xlat
(bad)
sub
xchg
scas
popa
sub
sar
(bad)
and
cld
cmps
out
ins
xor
dec
repz
ss
add
cmp
jno
out
std
pop
cs
pop
dec
pop
dec
sub
outs
lock
add
rcr
out
xchg
mov
aaa
and
(bad)
stos
mov
jmp
sbb
dec
sbb
mov
repz
imul
push
mov
dec
call
mov
inc
push
je
inc
enter
push
in
fisttp
mov
xchg
dec
xor
adc
popa
jno
in
mov
popf
loop
iret
loop
mov
bound
lahf
pop
xchg
sahf
jno
xchg
sub
rol
push
xcrypt-cfb
cmps
and
ss
xor
cmp
adc
cmc
test
daa
ss
call
push
repnz
mov
push
retf
add
retf
add
rol
fld
outs
xchg
push
jmp
cmp
jge
pop
adc
push
aas
cmps
sar
(bad)
and
fisttp
mov
mov
cwde
addr16
cmp
pop
in
imul
jle
cs
inc
jmp
xchg
das
and
push
and
sbb
pop
jp
cmp
mov
xchg
cmc
icebp
test
sbb
imul
ss
(bad)
dec
out
es
outs
ja
lods
fcomi
pop
mov
adc
fucomip
cmc
push
pop
jo
(bad)
sub
call
and
rol
movs
sub
call
cmp
cmp
loope
test
cmps
outs
xchg
sti
daa
aad
mov
mov
iret
in
ss
xchg
mov
in
int
out
adc
test
adc
sbb
mov
xor
xor
mov
push
dec
pop
push
loope
xor
or
push
jp
pop
adc
imul
push
adc
mov
dec
sahf
mov
ror
xor
hlt
in
dec
mov
sbb
int
mov
cmp
inc
xor
test
or
cmp
adc
int3
mov
mov
pop
lds
and
(bad)
rcl
call
arpl
mov
test
jge
sub
outs
jecxz
pop
jbe
sbb
mov
jge
retf
sub
scas
shr
retf
adc
jecxz
sbb
ja
test
and
pop
ja
js
aaa
pop
xchg
mov
sbb
sub
and
fcom
or
jl
jmp
sbb
inc
mov
or
pop
jnp
cmp
lahf
jae
adc
sub
sbb
mov
sbb
repnz
popa
cmps
repz
xor
xchg
clc
push
les
into
stos
lea
sub
cmps
(bad)
and
clc
dec
(bad)
jmp
xor
add
popf
or
aaa
jecxz
push
mov
scas
push
pushf
in
test
cmp
lea
arpl
loop
in
inc
mov
inc
cmp
push
bound
mov
inc
inc
retf
jmp
aas
stos
je
les
dec
aaa
out
std
dec
adc
mov
aad
jl
movs
jp
inc
sti
xor
push
add
nop
push
jl
and
ja
je
xor
call
sbb
out
pop
jne
retf
xor
pusha
test
test
lahf
dec
test
add
xchg
xor
push
dec
mov
or
icebp
dec
xchg
cmp
dec
cmp
or
bound
aas
adc
fadd
push
test
mov
mov
mov
outs
ret
xor
sar
lock
or
mov
xlat
xlat
(bad)
mov
adc
jmp
aad
imul
fs
mov
popa
repnz
test
fnstenv
jl
sbb
inc
and
lahf
xor
mov
jp
dec
cmp
inc
mov
mov
dec
sbb
shl
pusha
push
mov
xor
pop
mov
sub
pop
mov
xchg
fiadd
loop
mov
ins
lods
sub
data16
sbb
mov
lock
fsub
xor
cli
aam
sahf
sub
sar
adc
mov
mov
or
cld
les
or
add
fld
or
shr
sbb
fdivr
and
jle
inc
mov
addr16
out
in
jb
or
xlat
push
fild
xchg
ret
pop
dec
jb
mov
loope
fnstcw
test
mov
add
mov
xor
rcr
push
dec
lods
push
mov
or
pop
push
inc
and
shr
xchg
cs
xor
arpl
call
cmp
dec
mov
pop
push
fwait
lock
jo
sub
jno
loope
pop
std
loop
xor
sti
xchg
pop
out
lds
mul
arpl
inc
mov
fld
std
mov
popf
js
cs
adc
xchg
js
fsub
sbb
inc
push
in
rcl
aas
inc
retf
adc
(bad)
jb
dec
fisubr
out
shl
jbe
jecxz
enter
scas
sar
and
test
les
scas
adc
outs
inc
not
mov
ret
pop
pop
mov
cwde
fisubr
cmps
int3
loop
mov
popf
sbb
inc
aas
(bad)
call
mov
and
ret
pusha
push
mov
mov
add
and
push
cdq
dec
dec
aaa
adc
fucomp
lahf
xchg
xlat
sti
xchg
inc
mov
retf
jmp
ss
rcl
fs
loopne
push
or
fst
mov
int
mov
and
sub
fbstp
rcl
shl
or
lds
xchg
mov
enter
je
pop
inc
pop
(bad)
fist
dec
adc
in
xlat
test
hlt
cmp
(bad)
popa
fiadd
or
jecxz
jecxz
cmp
imul
loop
fadd
sub
cs
adc
push
out
retf
mov
cmp
test
cmp
(bad)
popf
pop
cld
add
mov
jae
inc
xor
je
adc
retf
adc
push
sbb
mov
jge
in
sbb
adc
loopne
stos
neg
das
stos
mov
or
and
mov
repnz
imul
inc
sahf
mov
lock
xor
cdq
popf
test
cmp
mov
xor
lds
(bad)
fadd
cld
or
shr
xchg
clc
cmp
test
stc
mov
xchg
push
in
ins
cmp
sub
lods
pop
bound
sub
sbb
jo
cmp
mov
in
ret
pop
xchg
outs
pop
leave
lds
mov
mov
mov
mov
dec
cmp
call
mov
int3
ror
mov
or
shl
into
iret
outs
xchg
call
xlat
fiadd
add
cmp
inc
or
(bad)
xor
adc
pop
js
push
loop
lea
xlat
sbb
cmps
enter
aaa
fwait
dec
cmps
cvtdq2ps
retf
xchg
push
fmul
xchg
sbb
test
ja
(bad)
leave
and
fst
and
in
repnz
jl
xchg
call
enter
sub
lds
xchg
popa
bnd
rcr
xor
adc
inc
sub
jle
xchg
popa
ret
adc
or
push
sbb
cdq
scas
push
mov
push
or
(bad)
and
shl
adc
rcl
sbb
jno
sub
jbe
mov
lahf
inc
mov
fisub
daa
inc
repnz
shl
sbb
jne
sub
stc
pop
xor
inc
push
ins
fwait
pop
dec
loope
stos
loopne
jmp
cmps
mov
dec
call
xchg
call
or
inc
cmp
imul
jo
fidiv
push
and
cmp
pop
aad
ins
wrmsr
xor
xor
or
jmp
jecxz
sbb
mov
sub
dec
cmp
or
loope
enter
clc
shl
sub
push
pop
sub
pop
imul
sub
push
jmp
mov
add
mov
xlat
popf
mov
cmp
xchg
add
pop
mov
pop
mov
jp
leave
push
add
xlat
pmaxsw
mov
loope
sahf
rcl
stos
cs
push
push
add
popf
push
lea
jmp
jmp
dec
fdivp
xchg
cwde
mov
test
les
xchg
mov
xor
adc
mov
mov
dec
cmps
sti
shl
sub
jbe
fidiv
ret
and
popf
cmp
stos
sahf
cwde
add
cmp
dec
das
push
in
dec
xchg
sub
dec
pop
sub
hlt
mov
push
xchg
sbb
gs
xchg
(bad)
mov
pop
jmp
push
rcr
inc
jae
(bad)
retf
daa
push
dec
cmp
xchg
mov
xor
mov
mov
mov
leave
or
inc
popf
mov
pop
mov
adc
push
or
inc
cld
popa
mov
push
xor
outs
push
int
adc
lods
dec
add
pushf
push
and
(bad)
stos
loopne
mov
add
outs
or
aad
mov
jo
ja
and
add
pushf
ret
test
pop
stos
shl
sbb
mov
mov
sti
out
dec
and
add
cmp
mov
push
nop
jecxz
jle
mov
or
add
lock
fmul
retf
or
lea
rol
js
(bad)
sbb
add
inc
lods
fwait
movs
rcr
pop
test
adc
push
in
sbb
cdq
sbb
adc
jle
out
movs
cmp
xchg
mov
jne
mov
cmps
div
imul
xchg
cs
cwde
leave
mov
push
sbb
bound
or
hlt
xchg
push
rol
imul
mov
adc
lahf
sbb
xchg
sub
pop
xchg
mov
or
pop
movs
adc
mov
jle
dec
xor
jge
cmp
hlt
jge
and
call
aaa
push
mov
mov
das
data16
mov
(bad)
push
ins
cmp
and
aam
sbb
cmp
adc
(bad)
pop
retf
add
pop
mov
lea
scas
push
js
shl
mov
cmc
xchg
xchg
pop
aas
(bad)
mov
pop
or
mov
je
sub
push
inc
mov
out
aas
adc
cli
das
jle
jl
in
or
lea
loope
xchg
stos
jne
dec
xchg
xor
xor
dec
add
cmp
mov
lock
adc
cwde
push
and
pop
dec
dec
je
or
(bad)
or
inc
adc
pop
inc
out
repnz
fisubr
ins
iret
push
cmps
sbb
mov
sub
fs
loope
xchg
call
add
imul
mov
(bad)
jp
mov
fs
leave
(bad)
pop
cld
call
pop
shr
mov
add
push
scas
jle
in
cmp
xor
push
sbb
mov
jmp
rol
mov
(bad)
mov
mov
mov
lds
pop
(bad)
rcl
push
mov
shr
pusha
add
xchg
sar
sbb
sbb
mov
xchg
fwait
add
(bad)
cli
cwde
stos
add
(bad)
call
dec
fs
addr16
lock
lods
inc
sbb
push
loope
outs
cmp
inc
pusha
xchg
retf
cmp
pop
mov
shr
icebp
ja
cmps
add
aaa
adc
pop
fidivr
mov
push
out
aad
dec
test
mov
pop
stos
fisttp
jne
movs
cmp
inc
inc
xor
jmp
pop
sbb
and
add
and
cmp
std
dec
retf
arpl
lods
jle
test
and
(bad)
sub
mov
std
and
imul
shl
repnz
pop
push
push
mov
or
mov
inc
inc
shl
dec
mov
push
sub
xor
dec
or
cmp
call
fucompp
adc
mov
mov
ins
sub
std
shl
jg
jge
test
call
and
mov
call
jo
in
jecxz
fdivr
mov
ds
and
fwait
sti
int3
sahf
ret
shr
jns
mov
int
clc
fistp
push
ficomp
fiadd
pop
js
leavew
xor
fwait
mov
cmp
adc
scas
push
inc
rcl
(bad)
lods
loop
xchg
mov
mov
xor
or
daa
adc
push
test
adc
mov
addr16
pusha
jl
or
jp
loopne
popa
scas
sub
aam
and
ins
dec
push
jmp
mov
rcr
pop
daa
cmp
xchg
rol
xor
cmp
jmp
inc
xor
mov
ret
ja
cmps
js
xor
xchg
stc
loopne
xor
cmp
sar
clc
cmp
jnp
mov
pop
xlat
pop
(bad)
cld
jno
cmc
or
pop
adc
mov
ret
cld
mov
sbb
inc
push
adc
ss
sbb
(bad)
cli
sub
call
dec
jbe
mov
sar
push
jb
mov
ss
loope
aad
inc
pop
sub
lods
mov
repnz
or
sti
mov
rol
sar
push
mov
(bad)
retf
std
ret
inc
test
inc
jns
sub
int3
popf
pop
cmp
xor
into
cli
pop
inc
mov
mov
and
mov
ror
cmp
jbe
xchg
ucomiss
and
cmp
pop
xchg
sub
adc
add
and
jg
lods
hlt
out
arpl
add
add
ins
xor
adc
sub
and
test
pop
into
gs
pop
gs
shl
lock
xchg
cmp
jnp
jnp
pushf
pushf
fs
int3
test
mov
aas
xchg
aas
daa
push
mov
sbb
test
retf
jns
dec
out
pop
pushf
icebp
arpl
mov
sbb
xchg
inc
inc
icebp
and
in
dec
pop
jp
stos
or
lods
add
fs
pop
add
ret
mov
and
mov
fild
iret
fisubr
mov
mov
jle
shr
push
cmp
adc
je
push
xchg
lods
lea
inc
repnz
xor
das
out
(bad)
jmp
mov
stc
pop
and
icebp
call
inc
or
outs
push
jo
push
outs
(bad)
jmp
int
sbb
inc
sbb
inc
mov
fstp
inc
xchg
dec
cmp
sub
lea
or
jne
cs
mov
cmp
imul
out
in
es
xchg
mov
cwde
xor
push
mov
les
call
fisttp
dec
cmp
mov
fwait
lods
icebp
pop
mov
xlat
push
mov
(bad)
mov
add
mov
ror
push
jecxz
scas
pop
test
push
dec
fwait
ret
fs
stos
adc
pop
inc
sbb
dec
scas
xor
jl
enter
movs
inc
jmp
dec
sahf
enter
test
mov
jo
mov
sbb
mov
js
sub
mov
jecxz
and
and
push
test
scas
repz
push
out
(bad)
test
aam
sbb
or
(bad)
call
xchg
adc
sbb
std
loop
jl
sbb
mov
enter
lock
leave
jne
jmp
retf
inc
fucomi
popf
xor
loope
dec
adc
mov
call
xchg
aaa
mov
retf
cwde
jmp
fisub
out
ja
addr16
call
pushf
xchg
sbb
not
fisubr
dec
inc
jno
inc
pop
scas
add
xchg
add
and
pop
outs
scas
jo
aaa
jle
sub
add
in
mov
xchg
in
daa
mov
dec
jge
mov
add
mov
movhps
or
dec
iret
sar
arpl
scas
in
xchg
sbb
mov
add
bound
xchg
movs
cmp
and
xchg
fadd
mov
jb
mov
adc
xor
data16
mov
imul
movs
push
xchg
cmp
std
pusha
iret
das
xchg
jmp
add
shr
aam
add
jb
(bad)
fst
mov
mov
push
mov
addr16
mov
adc
mov
lahf
dec
and
sub
arpl
lods
lock
xor
mov
ss
bound
loopne
pop
outs
mov
jb
into
fisub
(bad)
lock
bound
outs
mov
mov
adc
fwait
lahf
sub
dec
mov
loope
(bad)
push
fisub
push
mov
pop
jle
xor
jle
sbb
mov
repz
sbb
or
or
push
pop
ds
outs
xchg
and
out
cmps
jecxz
or
(bad)
fstp
dec
inc
mov
mov
mov
push
lods
loopne
gs
or
sbb
dec
cmp
nop
outs
inc
retf
loopne
add
dec
adc
push
ret
imul
sbb
mov
mov
push
leave
mov
fsubr
cmc
in
dec
das
jbe
popf
push
sbb
cs
ret
dec
into
sbb
jecxz
daa
(bad)
fisubr
adc
mov
mov
jbe
adc
addr16
jnp
xlat
jge
mov
cmp
xchg
adc
movmskps
test
(bad)
fisttp
test
push
das
adc
mov
lahf
mov
scas
in
xor
or
les
lock
xchg
arpl
jno
adc
(bad)
or
and
retf
int3
stos
int
jbe
call
pop
pusha
outs
mov
sub
and
ja
movs
sbb
lahf
nop
xchg
pop
mov
loopne
pop
mov
sbb
mov
sub
cmps
push
sub
cmp
ret
sbb
mov
arpl
pusha
loopne
pop
or
pop
pushf
add
push
xchg
int
xor
sar
fxch
cmp
enter
test
loopne
add
adc
jl
jnp
jg
mov
cmp
mov
popa
mov
push
push
pop
jbe
jno
shr
clc
cmps
gs
push
mov
jo
stc
xor
and
xchg
mov
ja
pop
mov
dec
xchg
jmp
bound
cmp
dec
mov
push
sbb
shr
fisttp
push
xor
test
xchg
rcr
fcomp
and
lds
cmp
(bad)
cmp
push
mov
push
xor
imul
or
pop
cwde
enter
pushf
dec
push
ins
jne
dec
add
bound
repnz
minps
sub
std
mov
in
mov
stos
add
mov
ds
sahf
mov
shl
pop
or
or
data16
jo
cmps
push
mov
adc
sub
or
add
gs
xchg
sbb
jno
jge
sbb
les
(bad)
jno
loope
stc
loopne
ret
push
inc
push
and
hlt
outs
mov
mov
jl
ins
or
xor
jnp
call
inc
sbb
xor
mov
out
lods
push
jno
add
cmps
mov
add
xor
cli
test
xor
sbb
pop
test
std
cli
fmul
cld
push
dec
ja
cmp
add
outs
fwait
jge
(bad)
push
xchg
mov
cmp
xor
std
add
(bad)
push
cmp
mov
mov
bound
cmp
mov
push
and
xchg
repnz
imul
or
dec
jmp
nop
das
ss
sub
mov
cmp
adc
and
retf
mov
cmps
mov
mov
mov
jbe
jl
push
test
xor
aam
daa
enter
mov
arpl
pop
or
cmp
dec
mov
adc
dec
jne
sbb
push
mov
aam
and
jp
add
xlat
sub
push
and
or
add
add
mov
or
add
icebp
and
xor
cmp
nop
jnp
cld
cmc
jo
sbb
test
cs
mov
sbb
(bad)
out
int3
xor
addr16
scas
dec
cmp
fwait
icebp
sbb
pusha
cmp
les
cmp
mov
mov
adc
mov
ins
push
mov
cld
push
fwait
cli
call
xchg
in
dec
jmp
es
leave
mov
imul
outs
sar
test
xor
ja
ret
mov
sbb
cmp
into
cwde
mov
(bad)
iret
icebp
rcr
clc
js
movs
inc
mov
push
movs
mov
sub
jl
and
xchg
pop
xchg
movs
pop
fmul
jmp
add
xchg
sub
and
add
xor
sbb
jmp
sub
inc
mov
jne
fwait
jg
sbb
pop
and
pushfw
xor
jecxz
fcomp
shr
adc
dec
jmp
inc
jbe
push
aas
jmp
sahf
movs
scas
(bad)
pop
stc
xor
pop
push
cmc
or
sbb
les
cmp
sub
gs
dec
add
gs
mov
inc
lock
adc
mov
sbb
sbb
and
mov
and
add
mov
popf
cmp
pop
mov
retf
fst
xchg
call
imul
mov
cmp
push
stos
push
and
push
jae
sbb
mov
xchg
sar
cld
mov
dec
lahf
or
jle
je
mov
call
retf
in
cmps
jl
jo
aad
push
movs
cli
cmp
pop
xor
xor
dec
dec
jmp
mov
mov
inc
sar
add
pushf
mov
dec
mov
lds
(bad)
cld
dec
out
test
inc
sbb
es
adc
xor
out
ins
inc
mov
mov
cmp
test
jmp
call
test
push
jmp
cdq
or
(bad)
and
xchg
adc
pop
jb
cwde
fld
nop
std
jne
jnp
(bad)
sti
shl
jo
or
push
fidivr
mov
jnp
cmc
call
cmp
test
push
out
out
in
dec
ins
cmps
add
(bad)
and
xor
or
sbb
jo
ds
xlat
or
jne
clc
xor
xchg
pop
pop
cdq
sbb
cmp
dec
inc
xor
ins
es
lds
mov
dec
test
sbb
cmp
xchg
sti
daa
(bad)
cmc
retf
dec
push
int
repz
or
push
pushf
fs
adc
mov
hlt
add
inc
adc
lods
mov
inc
sar
call
xor
pushf
jecxz
or
xchg
push
sub
sbb
add
cmp
xor
fs
ret
in
call
push
(bad)
mov
pushf
mov
xchg
lods
xor
mov
push
xchg
stc
or
rol
fst
inc
push
cmps
retf
rcl
fs
mov
cli
icebp
test
sar
fidivr
shl
sahf
daa
xchg
rcl
xchg
loopne
scas
jno
sbb
outs
mov
sbb
inc
ret
fmul
repnz
fsub
sahf
cmp
mov
in
sbb
(bad)
(bad)
fdiv
sbb
cmp
stos
pop
push
inc
ret
fcomp
test
mov
out
and
mov
pop
and
mov
inc
(bad)
xor
mov
pop
or
xor
sub
sbb
mov
cmp
adc
mov
gs
jbe
aad
in
add
pop
inc
inc
cli
inc
inc
cmp
scas
jns
jge
jo
xor
sub
mov
lods
adc
std
inc
push
ins
push
mov
inc
mov
aas
leave
js
mov
stos
ret
adc
test
and
loope
cmps
pop
movs
pop
push
add
int3
fnstsw
ficomp
outs
out
cmps
ret
push
xor
imul
(bad)
fcom
jbe
les
mov
(bad)
mov
ins
sbb
jnp
loopne
fsubr
retf
enter
xchg
push
not
sbb
adc
pop
das
pop
pop
sub
jne
ins
xchg
inc
pop
inc
sub
jno
out
and
gs
cld
xor
jge
mov
adc
inc
out
inc
adc
jl
mov
inc
(bad)
cmp
cmps
lock
pop
inc
inc
adc
cmp
xor
ffreep
dec
enter
imul
call
enter
push
jl
jp
pop
xchg
es
or
cld
je
adc
and
sub
test
rol
and
outs
pusha
xchg
jmp
dec
cwde
pop
sti
xor
imul
ror
cmp
push
scas
mov
xchg
in
push
xor
not
pop
std
inc
pusha
jmp
call
or
cli
pop
cdq
ret
lods
adc
or
ror
out
mov
xchg
call
cmp
push
scas
daa
xor
out
sub
add
pop
jmp
xor
test
mov
sahf
in
mov
mov
pop
sbb
data16
fucomp
mov
aaa
push
cmp
add
ficom
mov
in
sbb
mov
stc
jnp
fsubp
andps
adc
or
iret
js
cs
sbb
xchg
mov
shl
(bad)
test
lds
adc
sbb
repnz
xchg
call
repnz
imul
(bad)
lahf
adc
stc
pop
push
cwde
cli
add
popf
xchg
pop
xchg
fnstenv
jle
jns
and
repnz
push
jecxz
dec
sbb
hlt
lea
lods
jno
cs
mov
pusha
xchg
mov
dec
mov
loope
call
and
iretw
xor
cs
mov
out
test
cmp
call
push
aam
or
cli
or
pop
or
cmp
sbb
in
je
dec
push
cmp
pop
pop
push
int
pop
xchg
inc
lahf
jns
outs
mov
outs
xchg
cmp
(bad)
push
out
ret
mov
and
or
cmps
(bad)
xchg
ja
xor
add
cli
aas
mov
leave
cmps
ja
sub
(bad)
repz
out
or
cmps
add
clc
jmp
or
not
and
cmp
adc
push
pusha
mov
pop
cmp
fcmovnb
jle
mov
push
popf
sub
adc
pop
fwait
push
aad
jno
xchg
and
addr16
pop
sbb
retf
cld
test
xlat
pushf
test
sbb
jbe
(bad)
push
mov
xor
mov
mov
dec
cmp
sbb
add
jns
ror
leave
jl
int3
or
sub
xchg
retf
inc
dec
xchg
mov
dec
stos
mov
sbb
mov
xchg
pop
(bad)
mov
jmp
imul
ins
lock
add
(bad)
pop
add
out
fsub
add
add
cli
or
(bad)
jnp
cmp
add
js
out
mov
pop
bound
adc
push
out
aas
xchg
cmps
movs
xchg
pusha
cmp
sti
cli
das
cs
(bad)
xor
xor
inc
gs
mov
iret
icebp
in
fsubr
mov
lock
cmc
pop
cmps
movs
push
movs
call
or
xor
pop
xor
int
(bad)
mov
xor
adc
cli
int3
sbb
adc
mov
ins
cmps
bound
bound
sub
mov
and
mov
test
fsin
stos
out
ins
fs
hlt
xchg
repz
fld
adc
push
mov
cmp
sbb
pop
inc
fmul
retf
call
jns
dec
daa
nop
cmp
and
aam
mov
or
out
in
dec
adc
add
dec
adc
push
das
hlt
call
push
loope
pop
clc
inc
pop
(bad)
(bad)
(bad)
jmp
bound
push
mov
jno
shl
into
push
(bad)
mov
mov
inc
ja
jmp
test
push
arpl
inc
adc
popa
mov
aam
cwde
nop
pop
test
mov
push
dec
dec
in
push
test
xchg
cmp
pop
pushf
jno
in
or
jbe
xlat
into
sbb
adc
aad
adc
adc
pusha
push
jno
jl
idiv
std
xchg
aaa
pop
push
push
pushf
pop
pop
fldln2
jle
call
aas
sar
and
out
nop
xchg
push
sub
mov
jns
out
std
xchg
xlat
add
mov
std
add
push
popf
sar
outs
(bad)
mov
push
jne
add
aas
ds
out
rol
sub
jb
cmps
jmp
ds
fld
mov
bound
mov
imul
cmp
add
fsubr
xor
add
mov
pop
adc
lahf
(bad)
stc
stc
adc
pop
pushf
jge
mov
push
(bad)
imul
outs
xor
hlt
sbb
pop
not
mov
lock
js
shr
or
or
xchg
icebp
xchg
int3
mov
cmps
imul
in
iret
jae
xchg
jno
and
ret
adc
cmc
inc
push
push
jmp
arpl
pop
inc
cdq
xor
cli
movs
jne
ror
and
or
jb
add
jno
(bad)
lock
fld
mov
jne
jbe
cwde
lahf
mov
pop
mov
xor
sub
aas
mov
loopne
sub
fsubr
dec
mov
stos
loop
pop
imul
xor
pop
test
and
stos
push
pop
or
cmp
add
(bad)
push
gs
shr
pop
xchg
aam
xchg
test
(bad)
sahf
sbb
(bad)
lock
sub
mov
mov
mov
bound
or
retf
mov
hlt
ret
push
cwde
rcr
xchg
sbb
nop
xor
popa
ins
ret
(bad)
hlt
sbb
pop
adc
sbb
lahf
inc
or
arpl
icebp
mov
add
sbb
jp
aam
les
xor
stc
test
int
sub
lods
xchg
xchg
call
nop
pop
add
add
inc
test
add
xchg
cld
jl
jo
or
ror
pop
imul
in
test
dec
rol
shr
in
clc
dec
mov
jmp
scas
cmp
xchg
mov
js
ror
fwait
(bad)
dec
or
je
adc
stc
lea
loop
cdq
inc
mov
pop
popf
fnstcw
sub
retf
jno
inc
outs
jmp
js
sbb
push
or
mov
shl
mov
xor
adc
fcomp
jb
out
inc
pop
xlat
or
mov
and
cmps
pop
int
mov
and
cmp
pop
outs
icebp
xchg
sub
mov
mov
sub
sahf
call
adc
leave
and
ficomp
lahf
cmp
gs
std
(bad)
and
movs
cs
jns
mov
mov
rcl
retf
push
cmp
pop
pushf
xlat
iret
stc
mov
hlt
sbb
call
cmp
ror
clc
lock
sbb
repnz
out
adc
jae
xor
jp
pushf
hlt
mov
(bad)
in
dec
mov
mov
mov
add
inc
sbb
mov
push
aad
scas
popa
mov
push
mov
ss
test
sub
retf
or
ror
movs
movs
sti
jp
in
dec
push
(bad)
and
adc
or
call
push
daa
aaa
and
sbb
pop
pop
and
jne
leave
and
repz
loop
shl
stc
fcomi
add
mov
xchg
int
mov
inc
leave
repnz
pop
jo
(bad)
in
mov
sahf
jl
and
mov
clc
jl
mov
adc
xchg
mov
daa
inc
sbb
and
and
andnps
ret
add
dec
push
lods
js
cmp
ins
mov
dec
cmps
push
movs
shl
shr
pop
jns
dec
popa
xchg
arpl
mov
jp
popa
movs
cmps
hlt
jo
hlt
add
add
shl
ret
push
jbe
imul
jb
je
lds
jecxz
adc
mov
sub
dec
int
in
inc
lds
test
aad
int3
push
out
jb
stos
cmp
mov
push
setns
ret
push
pop
adc
aam
ror
loope
or
arpl
and
pop
fisubr
fisubr
push
out
ret
iret
mov
jmp
ins
mov
dec
or
push
xchg
add
cld
fwait
outs
repnz
sbb
inc
inc
es
aaa
sub
call
add
lock
fcomp
mov
daa
or
cdq
dec
xchg
fdiv
aam
out
stos
outs
movs
cmp
pop
xchg
cmp
pop
aas
mov
mov
sbb
or
sti
mov
popa
mov
add
ja
cmc
inc
or
call
push
fisubr
and
int3
cmp
inc
xor
inc
xor
jle
retf
out
bt
jmp
adc
imul
mov
inc
jmp
(bad)
or
push
mov
scas
outs
pop
mov
pop
mov
push
ds
mov
sbb
sub
jle
lahf
push
xchg
dec
jae
stos
cmps
or
push
jmp
dec
mov
pusha
ret
(bad)
(bad)
loop
sahf
jg
adc
inc
or
add
arpl
int3
dec
cmp
xor
outs
pop
fistp
ret
cs
clc
je
mov
mov
and
add
mov
out
jb
ins
cmp
adc
mov
push
sbb
std
inc
int3
scas
jne
mov
inc
inc
popf
jmp
mov
stos
inc
lds
mov
xchg
cmp
add
cmc
adc
stc
(bad)
xor
test
mov
ds
or
mov
(bad)
cli
loope
out
mov
push
aas
psrad
int3
cwde
popf
push
lods
icebp
mov
pop
xor
or
dec
ins
cmp
lods
fisubr
mov
mov
sub
add
xchg
mov
inc
dec
mov
push
test
stos
pop
shl
mov
pop
jnp
cwde
xchg
aaa
cli
add
(bad)
scas
in
ret
movs
movs
enter
and
sub
and
sub
mov
sbb
arpl
mov
mov
es
(bad)
and
mov
adc
mov
test
xchg
xchg
cmp
data16
iret
pop
add
arpl
pushf
(bad)
repnz
add
popa
pushf
pop
push
pop
call
loopne
xlat
mov
out
repz
ins
dec
pushf
mov
adc
dec
xchg
out
xchg
es
add
sti
mov
jl
cdq
test
and
add
mov
pop
data16
pop
add
push
and
das
stos
das
and
les
aaa
xor
sbb
(bad)
jp
aaa
std
cdq
enter
(bad)
dec
or
(bad)
jb
mov
add
mov
and
in
mov
fisub
in
div
mov
outs
pop
cmp
bt
fs
out
(bad)
mov
mov
pushf
jg
cmp
xchg
and
jg
rcl
imul
clc
prefetch
or
inc
add
(bad)
data16
pop
mov
aas
and
inc
inc
sub
jmp
(bad)
outs
sub
mov
dec
pop
div
dec
es
adc
and
mov
pusha
ds
dec
call
pop
loop
jbe
jns
mov
xchg
imul
sub
sahf
mov
mov
int3
into
mov
or
stos
mov
sbb
xchg
sbb
jge
inc
pusha
popf
(bad)
or
pop
out
push
pop
pop
(bad)
cmp
jl
adc
or
mov
push
sti
das
pop
cdq
ret
xchg
fs
mov
cmps
mov
ins
mov
jne
stos
cmc
inc
popa
std
stc
mov
add
and
movs
jmp
push
lea
mov
fsub
fiadd
stos
and
enter
pop
mov
adc
jb
add
xchg
sub
adc
pop
xchg
pusha
jmp
sbb
mov
fwait
pop
mov
sub
mov
mov
(bad)
out
retf
in
and
sub
iret
lds
ja
mov
dec
(bad)
out
cmp
out
xchg
mov
pushf
cli
mov
loop
xchg
or
dec
xchg
cmps
loop
test
call
in
cmp
setno
jb
ins
gs
frstor
and
add
push
mov
jnp
adc
push
or
pop
inc
adc
popf
test
lahf
js
rcl
add
inc
aaa
lods
pusha
jle
out
inc
xor
cwde
fwait
movs
sub
mov
mov
sbb
(bad)
jg
movs
icebp
in
pop
sbb
dec
je
ja
pop
inc
clc
hlt
push
push
xchg
je
clc
jmp
cmc
or
and
xlat
xor
sub
(bad)
lahf
gs
xchg
das
(bad)
cwde
mov
xor
xor
int3
mov
and
pop
das
fistp
xchg
xchg
loopne
cmp
cmps
mov
ret
jne
stc
sub
sub
div
ret
aam
movs
stc
cmc
xchg
push
cmp
pop
jo
push
jecxz
shl
fiadd
leave
or
enter
mov
cmps
inc
sub
mov
or
dec
push
pop
jns
retf
rol
adc
sub
dec
add
or
inc
jmp
pop
imul
xchg
mov
mov
(bad)
retf
sbb
push
out
repnz
out
xor
cdq
push
add
rol
cld
aaa
add
jae
aaa
fidiv
cmc
adc
mov
addr16
sbb
stos
mov
(bad)
fld
js
push
and
xchg
out
push
stos
loope
aam
push
scas
mov
and
les
xchg
add
xor
pop
xchg
(bad)
sub
xor
add
stos
sub
jnp
or
imul
mov
mov
lea
cmp
jg
hlt
pop
and
xor
test
ret
mov
sbb
js
pushf
mov
pop
(bad)
dec
jb
add
(bad)
nop
shl
movs
add
fld
xor
jno
mov
pop
stos
dec
fidivr
in
ss
sub
and
jp
mov
xor
rcr
sub
push
out
push
int
xchg
cli
dec
or
hlt
lock
xchg
loopne
in
rol
fstp
or
mov
or
or
add
and
jns
movs
mov
test
pop
aas
pop
(bad)
jae
pop
das
mov
pop
cmp
jle
mov
cmc
mov
leave
shr
fdivr
lds
fld
(bad)
jge
pop
or
(bad)
shl
mov
xchg
movs
mov
push
callw
call
xchg
mov
mov
outs
push
ins
in
inc
adc
popf
inc
adc
push
inc
mov
repnz
sub
cli
neg
mul
loopne
pop
in
or
xchg
xor
mov
lods
lods
mov
push
cmp
(bad)
fiadd
inc
lds
std
xor
sub
jnp
mov
sbb
inc
sub
or
mov
add
into
(bad)
jae
ss
out
pusha
cmp
stos
int3
or
adc
mov
mov
mov
imul
ss
and
call
outs
pop
jp
inc
cdq
cli
xlat
add
shr
add
int3
jl
fbld
es
add
sti
rcr
ret
lahf
inc
cs
jecxz
inc
mov
push
xor
gs
outs
test
fs
pop
cdq
(bad)
scas
xor
rcl
and
stos
movs
movs
and
dec
mov
outs
loope
xor
xchg
xor
add
mov
retf
fxch
inc
jo
(bad)
movs
outs
xor
repnz
fwait
sbb
pop
mov
push
(bad)
push
fsub
lahf
gs
ret
popa
mov
cmp
imul
fisttp
jl
or
add
sti
inc
sub
push
(bad)
(bad)
xor
push
mov
or
ins
hlt
popf
xor
adc
cmp
or
and
adc
push
mov
adc
mov
push
jle
mov
inc
sbb
int
imul
pop
loop
leave
ficom
(bad)
ins
mov
pop
mov
sub
adc
pop
aaa
sahf
mov
pop
adc
dec
daa
into
test
stos
fistp
fidiv
pop
add
ret
movs
sar
sbb
xchg
(bad)
in
cmp
inc
inc
ror
in
jbe
mov
lds
stc
mov
div
pop
sbb
sub
stos
push
inc
mov
or
clc
cmc
rol
and
pop
adc
xchg
mov
mov
pop
fdiv
lock
fs
int3
push
xchg
dec
dec
add
scas
push
pusha
add
cmp
dec
mov
push
cdq
sbb
cmp
dec
push
jb
or
jnp
mov
pop
add
mov
pop
pop
stc
xchg
inc
hlt
mov
jmp
mov
mov
iret
fbld
pop
sub
mov
das
inc
sar
addr16
jno
hlt
(bad)
sbb
mov
pushf
cld
add
stc
test
jecxz
push
out
adc
adc
fsubr
mov
je
push
sub
cmp
xchg
mov
mov
xchg
pop
pop
repnz
mov
mov
lds
push
fcmove
adc
jmp
ret
data16
int3
fcomp
test
mov
push
cli
out
imul
adc
xchg
jb
sbb
out
xchg
lods
iret
sbb
xchg
sub
xor
mov
lock
mov
jg
movs
stc
mov
add
inc
xchg
pop
(bad)
sbb
iret
retf
dec
jns
fnstcw
dec
xor
lds
jbe
fcmove
int
and
or
retf
or
sbb
(bad)
gs
call
jp
mov
mov
aad
jnp
mov
dec
jecxz
push
mov
mov
lea
xchg
pusha
stos
inc
js
adc
and
xchg
mov
retf
ret
dec
dec
retf
sbb
jnp
jae
daa
call
ret
xor
out
or
mov
popf
imul
or
(bad)
shl
jb
leave
lods
xchg
adc
in
cmps
inc
pop
dec
les
pop
jmp
shr
aas
test
pop
sar
dec
dec
add
outs
cmp
and
jle
push
ins
outs
int3
add
fs
mov
push
pushw
mov
mov
and
inc
in
(bad)
sbb
sub
pop
ins
mov
mov
jae
jne
or
sub
test
fldcw
sub
xor
in
pop
fsubp
mov
xor
xchg
shl
movs
mov
mov
call
push
jb
repnz
sahf
dec
in
and
sti
gs
inc
push
movs
maskmovq
neg
(bad)
fdivr
aas
out
imul
aam
push
into
fucomip
adc
(bad)
movs
push
and
mov
stc
mov
cli
shr
fldcw
dec
cmps
or
pop
in
sbb
jle
or
lock
inc
jecxz
gs
in
inc
cmp
les
sbb
dec
aam
mov
sar
std
outs
dec
movs
inc
pop
jl
and
inc
cmp
mov
sti
adc
stos
push
stos
fwait
repnz
fwait
cdq
movs
(bad)
retf
(bad)
or
sub
xchg
sub
ret
scas
inc
jecxz
loope
(bad)
jne
in
lahf
aam
loopne
std
pushf
mov
pop
je
pop
sahf
sbb
mov
push
push
lods
mov
mov
jb
retf
dec
mov
cwde
int
mov
nop
xor
xlat
ficom
hlt
aam
push
cdq
sub
jo
(bad)
outs
mov
test
fcom
daa
xchg
aaa
jle
jbe
ror
data16
movs
jnp
mov
(bad)
jle
ret
sbb
into
ret
fcom
mov
call
loope
push
mov
shl
inc
mov
js
sbb
pop
aad
push
jecxz
adc
push
inc
(bad)
fidivr
rcl
or
iret
push
jmp
or
jo
pop
or
int3
cwde
jns
or
cmp
les
inc
ins
push
(bad)
xchg
out
mov
xchg
sub
pop
dec
inc
nop
xchg
aaa
push
xor
or
lahf
pop
push
push
sbb
icebp
sub
das
or
jp
clc
imul
adc
mov
cmp
clc
adc
and
mov
mov
outs
(bad)
fldcw
dec
(bad)
jp
imul
xor
mov
push
and
xchg
mov
dec
sbb
jne
inc
fs
jg
sub
jmp
mov
les
jmp
push
lock
jbe
jl
mov
mov
or
jp
cwde
jo
test
fs
jl
xchg
mov
imul
pop
jle
rol
xchg
outs
mov
fidivr
repz
leave
xchg
sub
ss
ffree
mov
mov
push
mov
and
test
inc
test
mov
lahf
mov
dec
sbb
stos
mov
(bad)
(bad)
adc
xor
inc
mov
mov
call
(bad)
fcomp
sub
xor
or
jmp
jmp
fidiv
lds
lahf
cmp
mov
(bad)
pop
lods
in
call
cmp
ds
fsubrp
enter
and
enter
shr
pop
(bad)
jge
cmp
ret
jl
mul
cmps
lahf
push
sub
sbb
loop
cli
ds
ficom
jae
aaa
xchg
cwde
ss
(bad)
popf
inc
dec
pop
lds
xor
or
gs
je
adc
imul
inc
fwait
mov
xchg
arpl
clc
mov
arpl
clc
add
add
xchg
jb
or
or
push
ja
out
inc
ret
xor
pop
and
mov
xchg
inc
loop
retf
inc
sub
or
std
sub
cmp
sbb
dec
mov
sub
outs
call
repz
dec
jae
ins
rcl
retf
dec
sahf
ds
outs
inc
lahf
cmp
fisttp
(bad)
es
fdiv
cmp
jne
add
ds
adc
in
xlat
sub
push
xor
aam
cmp
icebp
pop
sbb
mov
dec
inc
loope
cdq
xor
mov
adc
sbb
mov
push
outs
imul
sbb
fadd
in
sbb
cmp
jo
retf
mov
loopne
shl
enter
inc
xchg
xchg
outs
les
push
js
xor
das
push
jno
xchg
sbb
clc
clc
cli
mov
ins
push
test
jp
test
and
mov
ins
cmovge
dec
pop
fld
std
aam
push
xchg
jnp
mov
xlat
test
adc
push
call
or
inc
sbb
and
mov
lock
jb
jnp
test
mov
arpl
(bad)
clc
inc
adc
stc
jmp
xchg
aad
(bad)
test
mov
pusha
fwait
movs
out
sbb
int
pop
(bad)
daa
jmp
pop
repz
vpxor
ficomp
call
(bad)
aad
push
das
movs
xlat
dec
cmc
push
enter
(bad)
push
sub
bound
mov
mov
xchg
and
jecxz
cs
js
xor
call
popa
pop
or
xchg
inc
aad
pop
sub
in
mov
mov
movs
test
lock
pushf
and
xchg
retf
sahf
aam
fwait
pop
jb
xchg
nop
jae
addr16
arpl
ins
jno
(bad)
add
or
fwait
add
and
add
add
sbb
and
mov
sub
or
inc
sbb
jno
retf
rol
mov
add
out
and
fist
into
pop
sbb
retf
in
inc
jecxz
pop
mov
inc
or
out
js
lods
dec
int3
scas
adc
retf
or
jg
imul
retf
shl
xchg
inc
test
ds
retf
xchg
js
icebp
dec
pop
aaa
jmp
out
xchg
jo
movs
sbb
cmp
adc
and
(bad)
xchg
(bad)
xor
retf
xor
enter
cmps
xor
dec
and
fisttp
mov
pop
push
ret
les
pop
stc
imul
loop
mov
xlat
pop
loop
push
out
ja
shl
mov
in
ja
inc
xor
addr16
jg
jg
xchg
ficom
adc
loope
ret
sbb
aaa
push
enter
pop
add
mov
aaa
ins
lahf
sub
mov
movs
adc
pop
inc
je
xchg
push
pushf
movs
scas
push
call
fmul
aam
lahf
movs
mov
or
fist
rcr
xor
inc
mov
or
mov
cmp
lods
lods
ret
rcr
jecxz
add
and
fidiv
fdivr
cmp
imul
adc
push
loop
cmp
mov
and
inc
cwde
repnz
mov
aad
mov
cmps
push
adc
pop
xor
sti
push
out
inc
mov
(bad)
adc
gs
mov
add
cwde
pop
add
leave
pop
jns
jle
jmp
dec
outs
push
cmp
imul
inc
lock
jne
imul
dec
cs
push
lods
shl
ret
pop
loop
xchg
stc
dec
inc
int
daa
cwde
pop
pop
inc
es
push
ss
daa
adc
hlt
mov
dec
stc
out
out
xchg
out
push
mov
(bad)
sbb
adc
push
mov
xor
push
in
rcr
cmp
stos
mov
jmp
aad
clc
dec
pop
test
cmp
bound
in
pop
jo
mov
ja
mov
scas
lods
out
aaa
or
popa
int
pop
xor
inc
(bad)
and
sub
and
jae
adc
push
cmp
lock
das
lods
leave
aas
cwde
ficomp
push
mov
mov
fstp
xor
push
int
mov
in
mov
sub
pop
dec
add
push
cli
sub
das
cmp
rol
sub
sub
movs
pop
mov
push
fiadd
out
retf
or
mov
outs
addr16
mov
data16
cmp
cmc
mov
dec
icebp
stc
dec
mov
push
mov
(bad)
imul
mov
stos
add
sbb
popa
mov
and
jbe
jmp
add
mov
cdq
xchg
arpl
sub
dec
push
les
adc
icebp
(bad)
adc
add
mov
test
xchg
push
push
inc
lea
shr
jne
jnp
pop
sub
iret
add
xor
mov
push
adc
ds
js
cmc
inc
cmovl
xor
popf
adc
movs
hlt
mov
or
xchg
xchg
loopne
not
in
sbb
jmp
adc
mov
call
dec
popf
mov
call
or
sbb
outs
les
cwde
(bad)
mov
push
sbb
push
sub
xchg
pop
jl
cmp
rcr
dec
jl
or
jg
sub
push
mov
mov
mov
ret
loopne
call
repnz
not
test
jle
dec
add
xchg
aaa
test
xchg
popf
shl
adc
movs
add
sub
xchg
ja
pushf
jp
(bad)
aas
sub
adc
mov
mov
mov
out
push
cmp
out
pop
cli
xor
inc
ffree
lahf
in
test
jae
push
jge
adc
loop
mov
mov
mov
fst
mov
xor
cmps
mov
and
or
pop
mov
cmp
cmp
jl
fwait
clc
aas
nop
jg
or
popa
outs
das
std
lods
lods
aas
fidivr
data16
ins
add
(bad)
js
adc
xchg
xchg
xchg
ja
adc
out
jnp
imul
outs
test
rol
hlt
(bad)
mov
dec
ins
and
add
ds
icebp
add
aam
xor
jg
loope
cmps
push
leave
push
sti
inc
fs
cmp
xor
push
jne
test
test
xchg
pop
fs
jg
stc
(bad)
psraw
into
inc
das
scas
sub
gs
daa
jae
pop
and
rol
lahf
xor
lea
inc
popa
cmp
xchg
stos
push
adc
hlt
repnz
push
pop
and
call
retf
(bad)
mov
cmps
mov
jb
or
test
sbb
jb
int3
or
push
inc
sbb
or
cmp
imul
cmp
(bad)
pop
adc
(bad)
retf
pop
daa
lahf
mov
xchg
scas
mov
(bad)
xor
mov
mov
jno
mov
aas
jmp
out
aad
pop
lods
xchg
test
addr16
neg
cli
enter
loopne
scas
cmp
ss
xor
mov
ret
(bad)
add
mov
mov
xchg
test
stc
xor
xchg
out
push
mov
inc
sahf
test
add
mov
lds
imul
shr
mov
add
hlt
outs
lahf
das
or
pop
mov
or
call
enter
in
add
movs
arpl
aas
cmp
cmc
fwait
pop
nop
int
sbb
arpl
cdq
(bad)
mov
(bad)
and
sub
ins
push
int
mov
retf
mov
cmp
popa
test
dec
loope
pop
sbb
loop
push
cmp
adc
fisttp
xchg
ret
out
xchg
loopne
test
fimul
push
rcl
addr16
xchg
repz
aas
xor
shr
mov
jp
cmc
mov
sub
xchg
movs
(bad)
push
cmps
jl
sbb
mov
(bad)
clc
xchg
and
sub
xchg
sbb
adc
fistp
push
ins
add
sbb
in
out
or
je
shl
jecxz
push
cmp
fs
sub
push
das
outs
loop
mov
mov
ja
jbe
sub
xchg
fadd
sar
call
mov
fisubr
pop
push
sbb
cmps
sub
and
into
icebp
aad
call
sub
hlt
imul
mov
js
pushf
add
sbb
pusha
sbb
xchg
retf
ja
cdq
repz
mov
sti
in
in
inc
loop
xchg
pop
and
test
pusha
sbb
call
jg
dec
daa
pop
mov
out
sti
add
push
xchg
arpl
dec
lds
or
jmp
lds
into
xor
mov
addr16
je
dec
call
mov
pop
adc
xor
sub
mov
lds
sub
retf
pop
int3
add
imul
pushf
sub
xlat
pop
sbb
xchg
addr16
ret
(bad)
xor
lock
ins
or
int3
mov
inc
inc
jbe
jmp
mov
test
cmp
dec
dec
mov
inc
aas
fcmovne
mov
ds
add
mov
mov
int
push
jl
test
jg
push
aaa
pop
jg
aam
test
mov
cmps
jmp
mov
adc
and
mov
dec
out
js
dec
push
push
jo
bound
xchg
cdq
call
xchg
pop
iret
sar
shl
je
xor
ins
cli
inc
add
jge
fyl2xp1
push
add
mov
push
pop
xchg
inc
sbb
pop
mov
mov
inc
ret
push
repnz
inc
fwait
cmp
repz
dec
test
repnz
or
xchg
jns
mov
sub
jae
pop
and
scas
dec
add
movs
cmp
cld
xchg
dec
out
xor
cmp
jae
mov
pushf
sbb
ins
xor
gs
outs
add
cli
ret
scas
mov
or
jmp
stos
pop
pusha
mov
mov
outs
pop
lods
xor
add
repnz
ficomp
addr16
or
xchg
jno
add
aas
push
xor
dec
stos
dec
lea
dec
popf
push
jmp
or
js
inc
adc
rcr
jmp
push
jg
fisubr
shr
in
cmp
repz
mov
test
ud0
xlat
pop
popa
movs
or
je
inc
pop
inc
popa
stos
sub
sbb
sbb
(bad)
fcom
cmp
jnp
push
sbb
test
mov
stos
add
jmp
push
xchg
push
mov
out
cld
popf
mov
sti
leave
xlat
mov
jp
sub
sub
sbb
or
cld
aaa
xchg
sub
aam
cld
mov
fstp
adc
sti
add
cli
lahf
inc
gs
movs
mov
cli
inc
popa
xchg
rcr
mov
shl
hlt
xchg
pop
cdq
pop
pusha
popf
arpl
aaa
fsubr
inc
test
xchg
inc
mov
or
cmps
leave
cwde
mov
lods
popf
sbb
pop
add
pop
rcl
mov
mov
outs
es
in
mov
test
xchg
jmp
ror
dec
aam
call
mov
fsubr
sbb
push
mov
push
sbb
mov
xor
dec
adc
stc
scas
pop
mul
neg
mov
jmp
shl
mov
pop
mov
inc
movs
test
pop
aas
leave
iret
pop
dec
int3
pop
pop
retf
add
jg
push
out
cmps
stc
adc
dec
int3
or
xlat
fidiv
fwait
call
and
adc
leave
shl
cmp
mov
(bad)
in
fwait
or
lods
cmp
(bad)
rcr
push
lds
cmps
mov
mov
add
das
icebp
aas
repnz
retf
imul
int3
adc
add
add
repz
shl
cmps
fild
repz
xchg
pop
sbb
in
retf
mov
int3
imul
mov
pop
ds
jae
sbb
mov
push
push
add
nop
outs
xor
rcr
fild
imul
mov
scas
arpl
sti
pop
fdivr
scas
inc
(bad)
xor
jmp
and
mov
popf
adc
ret
xor
push
and
or
adc
adc
mov
in
repnz
cmps
ficom
pop
ror
movs
cs
xor
adc
add
loope
add
mov
sub
popa
jge
sahf
in
or
(bad)
sahf
shl
jae
or
jmp
pop
mov
je
ja
add
fisttp
daa
xchg
jne
je
push
adc
inc
adc
push
or
push
repnz
ror
xor
cld
cwde
loope
test
test
lds
ffreep
xchg
out
aaa
out
sahf
ret
aam
lods
push
xchg
add
jae
jbe
out
jmp
dec
stos
xor
pop
adc
pop
sbb
adc
nop
pop
bswap
jns
jb
stc
or
sub
icebp
push
int
cmp
lahf
adc
xor
sbb
xchg
pop
std
into
push
std
dec
shl
imul
pop
pop
leave
std
dec
cmp
retfw
xchg
pop
sub
sbb
(bad)
mov
arpl
push
adc
movs
pop
lods
popa
icebp
enter
rcl
lahf
mov
sbb
push
xor
xor
mov
jbe
ss
xchg
popa
outs
add
cmps
in
inc
xor
mul
sahf
dec
cdq
stos
movs
daa
retf
dec
cmp
fistp
xchg
mov
xchg
popf
sbb
inc
inc
sub
inc
xchg
cwde
fcom
cmps
mov
(bad)
fs
lods
or
push
push
call
test
mov
jb
pop
cmp
mov
and
or
push
add
pop
mov
adc
sbb
mov
stos
xlat
cmp
daa
test
dec
jp
enter
mov
test
out
out
test
push
loopne
sub
popa
jae
sub
push
movs
pop
push
out
daa
cmp
pop
sbb
stos
jmp
and
push
lds
ficomp
sub
aad
push
fisub
ds
cmp
adc
adc
stos
adc
gs
inc
shr
repz
xchg
mov
inc
out
or
bound
not
add
mov
cdq
jmp
adc
aad
test
ins
and
lods
cmp
imul
imul
cmp
mov
cmp
loopne
push
out
(bad)
or
or
jmp
sub
cmps
test
sbb
cmp
lods
pop
or
ret
cmp
jmp
retf
(bad)
and
push
(bad)
imul
push
xchg
sbb
or
sub
jne
push
push
inc
push
jnp
not
mov
sub
and
and
es
mov
cmps
sub
sub
call
fs
dec
pop
dec
xor
repz
sub
jnp
mov
or
jne
cmp
(bad)
cmp
jno
xchg
sub
out
mov
adc
add
imul
fwait
push
sbb
jmp
and
dec
adc
pop
cmps
and
cmp
mov
xlat
jg
xor
std
fld
and
lahf
inc
mov
mov
imul
les
dec
mov
add
icebp
sbb
and
and
push
(bad)
xchg
fdiv
pop
inc
mov
(bad)
add
pusha
shr
add
ror
xor
(bad)
std
jae
aam
addr16
add
pop
movs
aaa
xor
cld
pop
movs
push
and
int3
fimul
dec
lock
ret
push
dec
cld
pop
ja
mov
fist
out
mov
das
stos
sub
lock
repnz
sub
aas
out
adc
(bad)
xor
leave
inc
sub
xchg
sti
mov
push
pop
adc
mov
fucomi
mov
xor
mov
lahf
in
mov
pop
or
sub
cld
dec
mov
sub
cmp
jb
clc
repnz
push
or
das
(bad)
out
fs
call
cmp
in
pop
jg
push
dec
popf
dec
and
mov
call
lods
dec
xor
add
mov
mov
pop
jbe
scas
push
mov
mov
dec
pop
fwait
jmp
jecxz
xchg
aas
mov
js
loopne
xchg
call
stc
pop
(bad)
dec
bound
xor
or
mov
mov
xchg
test
imul
adc
mov
dec
cmp
outs
mov
xor
mov
addr16
lea
push
sub
bound
lock
aad
pop
lds
mov
sbb
addr16
or
int3
mov
lods
call
jge
push
push
sub
icebp
retf
repz
mov
idiv
cmp
mov
stc
stc
ret
cld
das
inc
out
inc
mov
mov
inc
shl
dec
scas
ins
into
pop
retf
jle
test
das
mov
xlat
cmp
inc
shl
adc
cmp
push
shr
fsubr
shl
test
push
fwait
xchg
push
jle
add
mov
pusha
mov
(bad)
call
mov
pop
push
push
imul
and
les
mov
lods
mov
and
inc
sbb
sti
jl
jno
pushf
lahf
add
mov
or
sub
(bad)
push
and
or
mov
or
mov
icebp
mov
out
or
lods
outs
mov
std
pop
pop
jnp
ins
pop
hlt
pop
xor
jne
inc
sbb
pop
popf
sar
inc
retf
mov
ss
sub
pop
in
aas
cmp
dec
inc
adc
jp
jns
add
loope
jb
je
test
call
pusha
xor
mov
mov
ret
pop
pop
add
js
mov
push
in
loope
mov
pop
je
cwde
ins
fld
sbb
mov
cmps
dec
push
icebp
cmc
(bad)
lock
cli
jle
sub
push
imul
mov
mov
movs
jae
or
into
movs
fstp
cmp
jno
sbb
jae
cmp
popf
enter
popa
into
mov
fadd
into
mov
pop
dec
outs
pop
out
iret
cmp
jecxz
push
inc
add
adc
mov
and
and
jns
inc
aas
jge
bound
pop
jno
sub
clc
push
xchg
shl
icebp
xchg
imul
add
or
popf
add
aas
call
pop
stc
bound
iret
scas
jno
mov
inc
fsub
mov
int
adc
mov
loope
lock
adc
xchg
je
(bad)
cmps
mul
repz
add
jae
bound
adc
cmp
popa
fdivr
mov
(bad)
retf
js
adc
jbe
add
pop
dec
rol
pushw
sub
cmp
fsubr
add
mov
(bad)
popa
mov
call
sbb
es
cs
mov
mov
(bad)
xor
sbb
cmp
xchg
movs
imul
and
jmp
xor
rcr
adc
hlt
adc
mov
cmps
ins
xchg
sbb
cmp
fst
push
ins
loope
aad
shl
mov
adc
jg
icebp
sub
jnp
out
int3
sar
mov
out
xlat
(bad)
sub
add
push
ins
fadd
bound
xchg
push
jle
in
pusha
in
fwait
mov
xor
pop
mov
mov
ja
fdiv
mov
(bad)
adc
mov
xchg
sbb
cdq
dec
pop
rol
fdivr
push
dec
int
mov
xchg
mov
mov
in
xchg
es
cld
lea
test
sub
and
shr
jae
(bad)
out
xor
nop
and
call
add
aad
cmp
and
dec
pop
pop
cli
push
fbstp
push
call
dec
sub
jecxz
fistp
iret
(bad)
mov
adc
in
ins
cmps
leave
idiv
push
add
or
ds
imul
test
and
cwde
mov
sub
and
inc
adc
movs
xor
hlt
ret
js
ss
dec
sbb
int3
std
sub
pop
retf
in
loope
pop
arpl
push
mov
push
cmp
enter
in
xchg
inc
(bad)
int3
icebp
repz
dec
jns
xchg
adc
sub
xor
imul
sub
scas
sbb
stos
leave
cwde
pop
inc
fmulp
sahf
in
pop
mov
clc
cmc
or
inc
and
jecxz
add
sbb
daa
pop
push
test
add
(bad)
out
test
test
out
inc
fcmove
shl
popw
jg
pop
ret
movs
xor
cmp
push
test
or
fnstcw
retf
in
or
repnz
scas
(bad)
push
mov
outs
icebp
inc
cmp
jecxz
or
pushf
idiv
retf
push
sub
push
ins
push
pop
sbb
add
imul
aaa
mov
pop
adc
je
movs
repz
cmp
scas
je
fs
int3
push
enter
mov
in
jge
out
sbb
fistp
pop
clc
or
cld
jg
popa
pop
pop
push
arpl
out
sbb
xchg
or
popa
and
add
fiadd
add
xchg
ja
(bad)
sbb
int3
data16
je
adc
int3
mov
movs
add
adc
mov
das
cmc
jne
lock
lods
popf
movs
loop
sahf
add
xlat
sbb
xlat
mov
sbb
jno
stos
jmp
hlt
outs
xor
mov
fisubr
mov
or
ins
or
jmp
retf
cmp
test
mov
inc
scas
jmp
inc
mov
fmul
dec
cmp
xchg
pop
jns
aaa
stc
jecxz
sbb
mov
aam
or
jl
mov
rol
test
adc
sub
pop
test
cwde
pusha
dec
sbb
aaa
sbb
dec
mov
mov
out
push
enter
push
inc
shr
pop
cmp
inc
mov
pop
jns
push
push
xor
add
pusha
repnz
icebp
cmps
inc
sub
arpl
jbe
cli
gs
outs
retf
jp
mov
lea
adc
loop
jle
and
ins
pop
mul
mov
ins
dec
in
lods
push
lock
or
in
sub
jb
test
mov
stc
in
inc
mov
loope
outs
pop
test
mov
nop
pop
stos
dec
imul
es
aad
js
ret
sti
clc
(bad)
jp
xor
pusha
inc
adc
jnp
dec
shr
jae
cmp
xlat
les
cld
inc
pop
outs
fidivr
iret
mov
lahf
imul
add
mov
add
xchg
arpl
fild
idiv
add
mov
adc
retf
sub
daa
push
adc
xchg
xchg
scas
imul
mov
xchg
into
xchg
mov
shl
push
sti
jae
ins
adc
sbb
cmps
xchg
push
test
clc
push
shr
xchg
sub
shr
enter
loop
add
push
cli
jmp
mov
and
and
mov
sub
pop
int
ja
test
fs
stos
cld
pusha
jno
and
imul
(bad)
sub
in
out
shr
jne
pusha
fnstsw
add
aam
inc
outs
scas
sbb
fcmovu
mov
pop
inc
mov
adc
or
sub
pop
nop
add
iret
jbe
mov
les
or
out
outs
sub
xor
mov
xchg
xchg
icebp
push
std
adc
repnz
xchg
add
mov
lea
sahf
ins
ret
pop
xor
mov
mov
mov
shl
in
lea
ror
(bad)
dec
cmp
daa
nop
nop
xchg
repnz
mov
mov
scas
std
mov
inc
dec
sbb
push
ss
inc
add
cmp
dec
outs
lahf
cdq
clc
shl
pop
icebp
pop
xchg
fcomp
inc
pop
js
das
sbb
sbb
jle
fcomi
adc
push
and
mov
push
mov
fist
test
fsubr
sbb
pushf
in
sub
cmp
cmps
inc
push
lahf
imul
push
(bad)
xor
(bad)
xor
retf
shl
cvtps2pi
add
xor
mov
aam
push
pop
mov
shr
repz
lods
imul
retf
jnp
and
icebp
dec
aas
cs
cmp
lea
in
xchg
sbb
pushf
fstp
lds
jo
test
adc
push
movs
cmp
fsubr
dec
sbb
jae
adc
dec
or
sbb
popf
jge
stos
push
shr
or
sub
xor
cmp
out
pop
fidivr
push
sub
push
mov
int
cwde
cli
lea
mov
push
cmp
pusha
mov
mov
adc
mov
sbb
pusha
xchg
dec
das
push
or
test
mov
outs
cmps
movs
mov
push
mov
add
sti
and
sbb
pop
fst
jb
(bad)
in
jno
cwde
inc
sub
jmp
cmp
mov
lods
scas
add
lods
push
stos
xor
pop
icebp
dec
inc
add
xchg
and
xchg
mov
cmp
xchg
je
daa
mov
mov
pushf
popf
xchg
push
fdivr
push
push
adc
xor
repnz
cmp
jbe
jae
and
scas
outs
int3
movs
jp
pop
jb
mov
sar
lods
call
rol
popa
push
mov
stos
pushf
adc
ins
rol
jle
xor
sub
retf
xchg
es
mov
fbld
push
jno
sbb
cmp
cld
pop
jge
out
pop
js
jecxz
(bad)
and
jne
rcr
out
inc
lea
add
(bad)
jae
cmp
jecxz
xchg
add
es
mov
int3
push
sbb
pushf
push
xchg
mov
outs
push
and
or
or
fadd
bound
adc
int3
fsub
rol
bound
je
ss
js
es
jbe
inc
adc
or
pop
pop
sbb
daa
cmps
pop
dec
sub
cmp
jbe
pop
popa
loope
in
iret
cmps
dec
xor
shr
push
movs
xchg
popf
inc
(bad)
and
jae
es
mov
or
mov
push
popa
xlat
fidivr
test
jg
lods
add
or
outs
and
mov
sbb
fst
mov
pop
pop
mov
xchg
(bad)
xchg
cmp
scas
mov
pop
lods
icebp
loope
mov
inc
pmaddwd
mov
mov
mov
jmp
and
and
sbb
int3
ds
cmp
adc
sbb
ss
lods
sbb
stos
mov
lods
retf
cwde
fsubr
jmp
imul
and
mov
aas
pop
or
daa
xor
mov
into
repnz
js
cld
jno
sub
mov
add
in
mov
gs
test
ror
idiv
mov
jge
ja
push
sub
fistp
xchg
loop
packuswb
les
xchg
jg
add
je
cmp
movs
retf
outs
ret
bound
inc
inc
and
icebp
mov
loope
popa
push
add
mov
jmp
cmp
pop
cmp
js
push
jl
mov
add
pop
xchg
rol
adc
aam
out
fsubp
fild
jmp
scas
inc
xchg
stos
hlt
jge
mov
orps
mov
pop
leave
dec
xchg
stos
adc
mov
xlat
fcomi
or
mov
push
retf
ins
mov
in
xchg
add
sub
mov
enter
sahf
xlat
(bad)
jo
jl
cmp
sub
pop
jp
jmp
push
push
jb
adc
sub
pop
sub
ds
sbb
push
mov
shr
pop
mov
aam
inc
adc
pop
sub
cmps
repz
push
jle
pop
retf
push
lahf
mov
xchg
aad
mov
lods
mov
pop
aad
dec
push
jg
fcom
out
pop
fcom
gs
cmp
fstp
cmp
cmp
aas
popa
sub
add
mov
lock
test
mov
cs
inc
sub
aam
mov
mov
inc
popf
into
jmp
cdq
jecxz
fild
jmp
mov
les
and
jo
mov
mov
xchg
dec
jbe
sub
lods
mov
lods
jnp
push
shl
aaa
sub
icebp
push
(bad)
sti
cli
js
mov
xchg
pop
or
pushf
or
cmp
and
mov
fcom
popf
out
cmps
(bad)
cli
sahf
rol
and
or
dec
add
aaa
pop
sub
jecxz
adc
mov
fnstcw
mov
retf
add
mov
repnz
inc
dec
pushf
in
pop
add
xlat
fs
out
in
inc
sub
mov
sti
jl
cmp
ror
fstp
adc
adc
lds
sbb
jmp
push
jb
mov
test
retf
pop
loope
out
out
xchg
mov
xor
out
lock
lods
data16
lds
int
es
push
pop
sbb
cmps
or
int
fisubr
fisubr
(bad)
xor
retf
xchg
xchg
repz
sub
push
push
stc
mov
aad
in
mov
inc
mov
out
out
push
xor
leave
jecxz
mov
and
xor
test
dec
push
jp
jmp
mov
jno
sbb
adc
icebp
inc
in
es
scas
xor
daa
icebp
xchg
aas
pop
idiv
cmp
jge
out
movs
dec
jnp
daa
hlt
addr16
adc
push
mov
out
das
repnz
or
neg
es
pop
push
xor
nop
mov
jo
lea
cmp
test
mov
mov
repnz
xor
mov
cmps
cmp
(bad)
shr
mov
jnp
jg
and
sub
xchg
mov
(bad)
mov
nop
sub
jmp
mov
mov
in
mov
mov
cmp
into
inc
shl
bound
in
retf
test
add
ror
test
cmp
sub
leave
and
rcl
mov
jmp
mov
in
ret
test
dec
pop
xor
out
add
xor
mov
gs
cdq
stc
sbb
jg
lods
jae
ds
dec
sub
jg
and
jp
adc
(bad)
xchg
or
and
mov
sbb
(bad)
push
aad
mov
xchg
jmp
out
aaa
out
or
sbb
leave
pop
jae
jmp
add
and
push
jmp
inc
gs
jnp
hlt
inc
int
adc
cmp
inc
push
fnstenv
pop
test
push
fs
cmp
ja
push
pop
or
rol
xor
aad
ret
ins
push
pop
and
inc
scas
xor
fiadd
and
aas
data16
sbb
loopne
div
loop
jnp
fstp
sahf
sbb
dec
dec
or
imul
push
ins
pop
es
cmps
mov
loopne
sub
dec
movs
outs
mov
jnp
mov
ficomp
xchg
out
aad
pop
jae
test
ss
mov
(bad)
outs
ins
inc
es
imul
fwait
stc
adc
add
mov
mov
add
cli
xchg
cmp
pushf
jge
add
adc
xor
sub
stc
pop
mov
inc
in
repz
sub
mov
retf
fmul
add
daa
out
pop
es
ds
sub
xor
stos
cmc
dec
adc
add
add
pop
xor
inc
or
shl
das
enter
push
gs
std
xor
jp
sub
loop
xchg
cs
leave
adc
mov
mul
xor
int
shl
pop
rol
pop
ins
ja
std
or
lock
movs
gs
fs
pop
std
ret
cwde
dec
call
dec
mov
data16
sti
ret
loopne
and
loop
sub
test
mov
xlat
xchg
ins
das
inc
jae
jle
jnp
call
dec
out
ss
int
(bad)
jmp
cmp
mov
in
imul
pushf
fdiv
xlat
mov
fcom
mov
in
fsubp
and
scas
(bad)
mov
mov
retf
and
add
mov
add
add
cld
repz
into
lock
in
pop
jle
aad
sbb
pop
loop
popf
mov
pusha
enter
or
cld
push
test
mov
arpl
fucomp
cmps
sbb
or
mov
mov
cmp
cmp
(bad)
iret
jo
or
cmp
push
or
retf
jle
pop
mov
xchg
adc
cmp
sbb
imul
pop
mov
scas
lea
inc
lar
dec
js
push
push
push
xor
mov
arpl
push
outs
or
int
jmp
cld
pop
mov
pop
ins
jae
xchg
pusha
hlt
ss
and
ret
fmul
jmp
and
aaa
inc
jg
test
pop
mov
jb
and
mov
inc
test
ss
je
sub
cmp
dec
out
jg
sub
inc
scas
inc
mov
jns
push
es
sub
cli
mov
jge
test
sbb
adc
imul
retf
push
sti
shl
inc
loop
popa
xor
in
mov
pushf
jb
dec
jnp
jecxz
push
imul
fistp
and
inc
adc
jmp
mov
inc
jnp
dec
xor
idiv
dec
in
mov
jmp
ror
jge
les
pop
loop
xchg
mov
or
mov
das
test
inc
mov
int3
nop
stos
add
clc
fadd
(bad)
loope
ror
mov
(bad)
xchg
mov
pop
pop
add
sbb
clc
jne
mov
jae
mov
rcl
fs
mov
rcr
cld
and
inc
mov
mov
leave
ret
pushf
outs
in
(bad)
lock
xor
xchg
popf
mov
push
mov
cdq
pop
jmp
adc
inc
add
mov
push
jmp
dec
add
sub
mov
iret
mov
mov
out
rol
push
(bad)
adc
add
stos
adc
mov
fs
lock
mov
in
stos
xor
mov
push
pop
ret
cmps
ds
pop
and
push
and
ds
imul
(bad)
outs
push
(bad)
pushf
cmp
xchg
cmp
stc
out
xchg
add
js
mov
sar
out
xor
pushw
dec
inc
mov
xor
scas
dec
call
and
jns
push
mov
mov
call
xchg
fs
int
mov
jl
fs
mov
pop
push
jns
test
cmp
(bad)
hlt
mov
cmp
out
jns
fnstsw
jmp
stos
sub
add
mov
mov
push
lods
lods
inc
aad
sti
imul
scas
xchg
push
mov
aaa
mov
jb
xchg
outs
and
push
push
or
scas
push
mov
jns
pusha
sti
sbb
pop
mov
out
xor
adc
xor
jp
mov
lods
scas
jl
pop
inc
or
push
pushf
xor
fldcw
call
jae
call
pop
cs
hlt
push
imul
movs
sub
shl
cmp
outs
cmp
cs
ret
jle
(bad)
adc
das
push
jne
mov
repnz
and
lock
test
cmps
add
push
lea
mov
test
fsub
dec
je
pop
mov
aas
hlt
bnd
fdivr
test
adc
int
sub
fild
nop
fld
inc
pop
(bad)
loopne
push
jmp
(bad)
mov
(bad)
dec
test
dec
ins
fiadd
pop
rol
lods
pusha
(bad)
dec
jg
jbe
xchg
arpl
pop
mov
sub
cmp
ss
xchg
inc
inc
test
aaa
shr
xor
mov
mov
mov
push
cmc
sub
lahf
rcr
shl
inc
repz
in
call
inc
xchg
push
mov
push
xchg
mov
mov
push
rol
out
movs
cmps
mov
cmp
add
pop
xor
lods
leave
inc
jl
fdivrp
xchg
inc
sub
out
xchg
cld
call
movs
imul
ret
add
popf
test
loop
enter
sub
mov
call
adc
xchg
jns
inc
fcom
push
xor
inc
and
es
xor
xchg
or
xchg
(bad)
push
mov
popa
sub
int
fxch
push
ds
cmp
ret
dec
jae
pop
dec
sub
cmp
in
cli
popf
mov
mov
dec
rol
popa
sub
loopne
mov
pop
xchg
mov
dec
or
jmp
cmp
dec
cmp
pushf
fisttp
aaa
and
fwait
std
jb
fwait
inc
jg
xchg
sbb
outs
les
or
call
shl
and
add
mov
sbb
add
rol
dec
cwde
cwde
xchg
cld
xlat
sub
mov
aas
int
or
test
add
clc
add
mov
push
xchg
ins
mov
adc
dec
cmps
mov
push
dec
aam
mov
or
xor
mov
fild
pusha
lods
iret
dec
loopne
sbb
ficom
cmp
mov
mov
lea
dec
dec
push
inc
jl
mov
push
fist
sbb
push
aas
mov
leave
imul
into
ins
lods
sbb
jle
sub
and
jmp
lods
fst
mov
or
push
fsub
cmp
lds
loop
movs
clc
inc
retf
xchg
push
or
ja
push
cdq
(bad)
test
daa
sub
or
sahf
pop
or
icebp
mov
test
mov
ins
and
cmp
push
in
icebp
arpl
pop
nop
jb
rol
je
xor
push
and
nop
sub
aas
jmp
mov
cmp
pop
adc
int3
xchg
sahf
rcr
xor
mov
adc
xchg
push
push
xor
mov
sbb
adc
or
pop
push
les
jae
ror
xor
pop
jecxz
out
mov
scas
mov
xchg
jg
pusha
push
in
fwait
(bad)
and
sti
imul
das
addr16
lods
xor
pop
retf
pop
rcl
mov
xor
shl
inc
xor
pop
scas
push
gs
sbb
ret
pop
push
ror
cs
lods
stos
ins
xchg
addr16
(bad)
leave
leave
mov
rcr
rcr
mov
cmp
pop
sbb
push
stc
in
cmp
out
stc
add
jecxz
mov
sbb
dec
push
test
cmp
xchg
mov
inc
jmp
mov
pop
xor
xchg
imul
cmps
inc
out
call
out
mov
pop
(bad)
jb
push
fcomp
jp
stc
dec
std
test
inc
repnz
or
fwait
cmc
add
pop
fistp
(bad)
adc
sbb
push
push
or
xor
mov
movs
xchg
and
or
call
gs
repz
cmps
cwde
fstp
push
xor
mov
das
pop
xchg
test
push
sbb
push
inc
iret
inc
loope
jmp
and
shl
hlt
adc
push
lea
mov
sub
push
lods
mov
cmp
das
pop
pop
cmps
mov
adc
stos
sub
xlat
jp
hlt
mov
shr
pop
inc
dec
mov
adc
add
cli
enter
(bad)
xor
sbb
sub
pop
cdq
inc
jbe
fdivr
inc
retf
inc
cmps
inc
das
mov
or
adc
mov
mov
jp
and
xchg
push
out
ja
ror
movs
test
add
adc
es
mov
xchg
pop
push
fwait
pop
aad
popa
mov
push
shl
push
sbb
lods
add
cmp
repnz
inc
add
out
aad
push
int
dec
mov
leave
cdq
push
rcl
ins
test
outs
pop
xchg
rol
dec
xchg
fmul
call
and
sub
cmps
mov
fadd
add
outs
sub
fwait
mov
mov
dec
or
jmp
mov
sub
jnp
sub
out
das
pop
mov
pusha
or
out
or
push
cmps
push
int
inc
fdivr
jmp
adc
jne
icebp
test
aam
xor
movs
pop
add
ret
push
mov
jne
inc
and
add
dec
xor
push
add
sub
aaa
xchg
and
out
(bad)
les
or
inc
ret
inc
cmp
cld
sahf
mov
dec
neg
cdq
movs
pop
jo
push
hlt
mov
cs
aas
and
push
scas
and
in
outs
cmp
fimul
mov
cdq
and
jle
pop
imul
cmc
mov
adc
out
pushf
mov
lods
outs
std
inc
test
enter
popf
mov
cmp
sub
sub
mov
and
fisub
mov
test
mov
rcl
fild
mov
rcr
xchg
lds
xchg
jb
(bad)
(bad)
into
aas
ss
sti
cmp
sbb
popa
mov
pushf
cmps
xor
xchg
push
jl
xor
pop
fdiv
pop
inc
mov
xor
fld
stos
out
mov
in
xchg
ins
fsub
scas
ds
in
sbb
pop
or
pop
sbb
cmps
jmp
add
out
dec
or
xchg
xlat
jmp
gs
(bad)
mov
scas
push
test
outs
or
and
xor
and
ficomp
call
or
leave
push
aad
test
and
in
dec
test
adc
sar
jp
popf
div
pop
aad
mov
mov
cmp
xchg
sub
mov
fsub
dec
out
dec
int
ins
gs
jns
push
imul
xchg
adc
mov
imul
sbb
ds
jb
adc
retf
je
cs
bswap
dec
lods
jmp
add
sbb
pop
int3
xchg
and
xchg
es
aaa
addr16
fstp
add
or
xlat
push
xor
mov
push
test
jo
test
mov
ds
inc
mov
pop
xchg
cmps
xor
jl
test
sahf
jg
loopne
inc
mov
fwait
sub
jp
adc
outs
dec
inc
xor
in
test
jg
cmp
push
iret
je
pusha
js
push
icebp
iret
cmp
push
pop
aad
mov
fild
jb
push
pop
sbb
add
je
xchg
pop
pop
iret
xor
lds
(bad)
imul
pop
jb
repz
push
cmp
gs
sub
dec
xchg
inc
push
aaa
je
ja
daa
pusha
out
dec
(bad)
dec
arpl
icebp
xlat
inc
cmp
mov
sub
add
or
adc
ja
and
pop
inc
fs
nop
sbb
and
dec
test
adc
in
popa
pop
xchg
sub
xor
movs
sbb
sub
jns
dec
sbb
jbe
xchg
mov
add
int
mov
lds
fdivr
test
addr16
cmp
out
lods
imul
pushf
mov
out
pop
fcmovb
sub
fnstcw
ss
mov
cmp
mov
dec
adc
ret
cmc
neg
and
out
sbb
sbb
adc
cs
add
aad
jns
std
dec
dec
(bad)
rol
sub
push
push
les
popa
lds
cmp
and
mov
cmc
dec
jmp
out
lods
call
xchg
push
movs
in
mov
shr
add
or
sub
mov
je
loope
sub
or
fucomp
sub
mov
in
ror
jl
ins
cwde
adc
sub
inc
inc
loopne
in
sub
and
jo
(bad)
call
xor
mov
std
out
and
pop
and
in
inc
(bad)
jge
scas
stos
add
mov
inc
xor
or
movs
jg
shl
ins
sub
sbb
js
mov
inc
mov
loopne
sbb
ins
mov
sub
dec
pop
ss
mov
ss
in
and
mov
retf
pop
movs
adc
sub
push
in
gs
xchg
and
stos
inc
(bad)
xor
test
stc
dec
pop
and
lds
push
dec
mov
or
adc
mov
add
jp
fist
push
jp
and
add
lods
cs
(bad)
pop
test
dec
clc
movs
push
mov
jo
and
jne
mov
xor
cmps
xchg
push
jbe
ins
xor
or
pop
or
and
rcr
popa
loop
cmp
push
in
ret
push
push
and
leave
retf
or
pop
out
sbb
mov
cmp
adc
pop
jmp
pop
jnp
hlt
xor
mov
xchg
pop
fcom
sbb
(bad)
mov
inc
jg
mov
jae
test
ret
stos
push
(bad)
or
sbb
out
outs
mov
push
mov
cmp
mov
lods
ret
mov
les
lods
sbb
push
popa
movs
stos
cwde
push
jp
adc
daa
test
mov
pop
in
test
fidivr
(bad)
mov
iret
push
and
pop
repnz
lds
ins
lods
dec
push
rcr
mov
push
int
push
test
xor
jg
(bad)
pop
lods
push
mov
(bad)
add
mov
scas
jno
test
pop
cmp
inc
fiadd
les
sahf
jecxz
and
hlt
imul
adc
pmulhuw
push
push
scas
pop
pop
pusha
cmp
cmp
push
lods
xor
xchg
nop
jns
ficomp
(bad)
inc
xlat
mov
adc
jo
add
xor
and
es
(bad)
pop
(bad)
cmp
inc
or
dec
lods
(bad)
sar
or
pop
in
retf
xlat
rcl
and
fs
cmp
dec
pop
mov
int3
call
stos
sbb
mov
adc
popa
add
int3
dec
lahf
imul
dec
arpl
(bad)
ins
mov
and
call
xor
inc
inc
jno
enter
xor
jmp
and
cdq
repnz
inc
inc
mov
inc
fsubr
js
cdq
sbb
scas
retf
pop
imul
dec
rcl
in
or
out
xchg
mul
arpl
movs
neg
shl
ja
retf
repnz
scas
cmp
cmps
xchg
mov
inc
and
add
mov
or
aaa
cmp
int3
pop
test
sbb
push
ds
xor
fild
(bad)
adc
aas
shl
sub
outs
dec
ss
pop
mov
gs
out
cmps
jmp
enter
mov
sub
push
dec
mov
push
es
cmp
mov
add
jne
mov
mov
pop
jl
rol
sti
cmp
adc
cmp
cmp
jnp
test
push
jb
repz
mov
adc
nop
cmps
es
mov
fstp
sbb
add
int
cdq
popa
adc
push
jne
sub
(bad)
fsubr
push
mov
pop
xor
cmp
fucomp
pop
dec
movs
sub
and
mov
cmps
addr16
jl
nop
pusha
shr
adc
xor
sub
cmp
mov
xor
lahf
iret
xor
cmp
call
xor
or
pop
mov
mov
mov
ja
inc
fst
jbe
pop
ss
aaa
addr16
arpl
(bad)
cmp
xchg
cmp
js
fldenv
xchg
mov
fdivrp
out
retf
push
clc
movs
icebp
cmp
test
dec
mov
xchg
jae
scas
test
sub
daa
popf
mov
pop
pop
sbb
js
and
iret
pop
push
jb
inc
movs
imul
cmp
(bad)
rcl
lods
mov
lds
dec
int
push
dec
sub
pop
push
xchg
xchg
jae
jmp
js
std
jmp
inc
and
jge
push
push
sub
add
xor
jp
loope
fcom
cwde
xchg
lods
xchg
popf
ret
add
pop
push
xor
icebp
hlt
sbb
and
cld
dec
es
outs
fwait
sti
add
pop
idiv
xchg
jb
and
sbb
sbb
ret
inc
nop
sub
sub
leave
inc
inc
xor
scas
adc
add
adc
push
jmp
and
inc
adc
xchg
cmps
hlt
loop
lds
fimul
jecxz
xchg
jb
outs
movs
hlt
xor
push
inc
sub
stos
(bad)
leave
out
ror
add
sub
int3
shl
xchg
xor
imul
mov
lods
pop
sub
repz
adc
and
add
mov
lea
pop
lahf
jecxz
adc
dec
les
test
inc
mov
lock
and
xor
ds
or
loopne
and
push
in
mov
fld
loopne
int3
mov
xchg
(bad)
call
pop
cmp
xlat
xchg
in
jne
jnp
or
or
iret
xchg
inc
mov
(bad)
pop
ret
neg
loope
cmp
mov
push
mov
jg
adc
in
jno
repz
inc
mov
adc
aaa
call
and
icebp
sbb
sub
push
and
push
dec
(bad)
pusha
mov
mov
aad
jns
inc
xchg
or
out
mov
jnp
inc
jb
fsubr
and
mov
dec
xor
mov
fsub
cmp
xchg
mov
pop
sbb
pop
sahf
sbb
sahf
xchg
inc
push
loop
push
arpl
pop
gs
lds
adc
push
jns
jp
pop
add
popa
sub
mov
inc
inc
mov
les
in
adc
or
or
push
cs
aad
or
cmp
idiv
cmp
popf
xchg
adc
pop
inc
aad
push
popa
pop
aaa
sti
imul
aam
dec
push
mov
fdivr
cmps
dec
add
cwde
test
(bad)
sbb
xchg
scas
cmps
push
xchg
sub
inc
jnp
loope
loopne
movs
data16
pop
add
dec
movs
hlt
retf
lahf
je
xor
or
jbe
mov
dec
inc
lahf
sub
dec
ror
adc
xor
and
hlt
fs
adc
jecxz
mov
movs
es
mov
push
mov
enter
xor
cmps
jnp
sti
push
enter
mov
add
test
mov
das
in
pop
xchg
inc
xchg
shl
sbb
ss
ins
cli
xor
dec
fxch
and
loope
out
ret
inc
call
nop
fdivr
add
cli
mov
ja
sub
rep
mov
mov
lock
pop
dec
call
push
stc
or
jns
sti
xor
es
ret
std
mov
cs
imul
inc
stc
lods
add
(bad)
mov
pop
and
test
add
clc
not
mov
clc
pop
mov
pop
sbb
pop
into
mov
(bad)
xchg
fisubr
jmp
retf
pop
les
pop
stos
js
sub
call
call
mov
push
(bad)
jmp
xor
pop
sti
mov
jb
push
dec
jecxz
nop
std
pop
fwait
add
adc
sbb
and
push
sub
retf
sbb
pop
xor
xor
push
daa
out
dec
cmp
test
lea
jl
cmps
ins
sbb
adc
repnz
popf
dec
fisubr
cmp
push
cmp
fs
fld
mov
xchg
fidivr
jns
add
jb
jmp
cmps
sbb
cmp
retf
dec
arpl
jecxz
push
cmp
sub
call
dec
or
stos
xor
stos
gs
fadd
in
mov
dec
movs
enter
or
retf
(bad)
sub
xchg
xchg
mov
cmc
call
cdq
xchg
in
add
or
fidivr
inc
push
inc
(bad)
out
(bad)
repnz
cld
neg
push
dec
sub
cmp
pop
test
add
push
push
scas
jl
pop
(bad)
not
repz
mov
popa
jp
push
xchg
ret
adc
mov
mov
pop
jae
sub
xchg
int3
jl
dec
jb
mov
sbb
pop
aam
pop
push
pop
fimul
imul
sbb
mov
cmc
sti
mov
push
sbb
xchg
aad
sti
(bad)
fstp
xchg
sbb
lock
ret
ret
lock
or
ret
jecxz
inc
mov
(bad)
in
es
sub
push
call
(bad)
mov
and
repz
pop
adc
fwait
(bad)
imul
xchg
loop
fisub
xchg
mov
mov
aad
mov
inc
xor
loope
mov
fwait
ret
mov
push
pop
mov
scas
inc
rcl
cdq
sbb
mov
mov
shr
stc
or
pop
pushf
movs
or
std
xchg
adc
clc
je
adc
pop
repz
cld
ret
addr16
call
out
jmp
(bad)
xor
leave
inc
gs
push
loop
and
mov
pop
cmp
repz
fisubr
movs
movs
movs
out
scas
fadd
call
pop
add
ins
adc
push
push
sub
or
xor
mov
sbb
fiadd
sar
or
pop
mov
push
retf
outs
dec
jnp
shl
test
sbb
ss
fsubr
or
loop
les
push
cli
out
sbb
lahf
pushf
ins
sub
sar
mov
inc
cmps
shl
js
mov
rol
inc
stos
nop
std
mov
ret
adc
xor
cld
les
repnz
mov
xchg
sbb
xchg
clc
cmp
js
pop
fnstenv
std
xchg
ret
in
push
loope
shr
leave
jle
inc
push
mov
leave
pop
jo
lock
sub
jns
je
jb
jbe
adc
pusha
shr
fild
inc
and
push
in
mov
xor
iret
add
or
stos
sub
or
xor
jbe
shl
call
test
mov
enter
arpl
test
push
stos
aad
call
mov
cs
dec
cmp
jae
das
mov
and
retf
pop
fisub
test
popf
dec
popf
call
xchg
fsub
push
ins
pop
movs
enter
in
les
xor
stos
in
mov
ins
(bad)
mov
test
mov
out
retf
adc
mov
or
mov
mov
std
mov
adc
jmp
fdivr
fwait
sub
call
outs
push
mov
hlt
or
icebp
imul
adc
enter
out
mov
jp
inc
lods
xor
add
in
xor
aad
push
retf
js
push
sub
aaa
pop
jnp
fisub
xchg
and
mov
inc
dec
xor
and
movs
pop
ret
mov
mov
push
push
and
jbe
sub
and
test
lahf
shl
imul
or
popa
mov
add
(bad)
push
xor
loope
dec
jbe
in
xor
pop
or
cmps
dec
arpl
and
jae
mov
mov
outs
ins
ror
sbb
fs
dec
loopne
jle
push
in
jg
test
adc
ret
pop
sahf
iret
push
in
jne
inc
sub
mov
test
arpl
push
add
es
or
(bad)
mov
mov
xor
adc
push
sub
ret
fs
in
out
fstp
inc
or
movs
dec
icebp
cmp
repz
retf
add
arpl
xor
(bad)
ret
outs
into
jp
stos
pop
mov
jne
xchg
xchg
inc
cli
lock
setle
xor
call
push
ret
add
stos
hlt
in
mov
and
nop
(bad)
fmul
cli
bound
aaa
inc
js
js
rol
jg
adc
mov
mov
rcr
fs
repz
pop
xchg
loopne
or
fiadd
sub
jne
pop
jmp
gs
test
mov
outs
fldcw
jae
imul
into
push
gs
jmp
xchg
out
jnp
mov
mov
sub
lods
daa
sbb
xchg
jle
sub
leave
stos
pushf
sbb
push
sub
jle
jp
xchg
dec
jmp
add
cmc
repz
adc
out
adc
mov
push
jno
xchg
ja
inc
push
inc
jmp
pminub
add
lods
mov
repz
add
xlat
jae
daa
mov
cmp
push
pop
es
and
pop
push
repz
retf
rol
and
sub
cs
jmp
xor
sbb
outs
fild
or
pop
test
mov
adc
lds
sbb
and
scas
(bad)
mov
cmps
imul
pushw
add
xchg
and
add
test
mov
cs
adc
rcr
popa
fwait
out
popa
int
fistp
or
pop
hlt
in
or
cmp
push
or
xlat
mov
outs
gs
cdq
mov
add
push
in
(bad)
es
cld
inc
rcl
loope
jno
loope
pop
stos
pop
mov
sbb
aam
das
mov
int
aad
and
ror
pop
xlat
add
and
test
jp
cmova
inc
in
ds
or
jno
add
arpl
pop
mov
aad
push
sbb
cmps
xchg
push
rcl
xlat
mov
cmc
add
cmps
push
(bad)
mov
inc
inc
outs
xlat
and
jo
or
mov
mov
mov
cwde
hlt
cmp
push
add
push
fdivr
into
add
mov
mov
rcl
push
nop
clc
xchg
inc
mov
sub
lahf
sub
lods
fistp
mov
xor
ins
ja
sahf
mov
movs
adc
mov
and
and
sti
dec
xchg
retf
pushf
sbb
popf
add
cdq
loopne
add
stos
mov
daa
push
sahf
dec
mov
cmps
mov
fcmovb
fwait
dec
inc
jmp
rcl
mov
scas
cmp
pop
stos
ret
test
sub
imul
rcl
dec
xor
sub
push
pop
mov
imul
jne
clc
or
and
mov
mov
mov
inc
push
outs
ret
and
pop
ret
call
jb
sub
xor
jmp
scas
or
mov
add
xor
dec
cli
lock
pop
sbb
data16
addr16
shl
mov
push
jp
sbb
stos
add
or
loopne
xchg
push
aad
inc
cld
lea
sub
or
or
pushf
inc
(bad)
repnz
jo
shl
(bad)
daa
xor
mov
pop
rcr
or
mov
mov
cmp
push
jl
push
(bad)
mov
js
mov
ret
inc
mov
jle
in
mov
xor
mov
inc
imul
cmp
or
xor
sbb
add
pusha
jmp
pop
jb
dec
in
or
sahf
call
cmp
les
std
inc
pop
pusha
xchg
cmp
pop
xchg
or
hlt
out
xchg
push
stc
scas
ss
jno
out
movs
mov
or
popf
cmp
add
in
pop
fist
js
mov
cld
cmps
loope
test
sub
xchg
ds
push
enter
je
inc
enter
adc
fs
iret
addr16
loope
leave
sbb
sbb
dec
or
add
test
cwde
enter
pop
cdq
mul
into
and
push
jmp
adc
pop
mov
aas
repnz
adc
call
cmp
jbe
test
ror
or
js
lods
call
and
ja
clc
jbe
xor
mov
push
lea
push
fs
and
sbb
sbb
sub
mov
(bad)
(bad)
mov
xchg
sbb
test
jl
or
pusha
je
cdq
dec
jmp
cmp
pop
inc
std
stos
(bad)
push
or
iret
xor
sahf
mov
dec
push
pop
les
sub
fcmovnu
jnp
cmp
call
gs
repnz
jecxz
addr16
mov
push
leave
ret
xchg
stc
imul
neg
out
jp
xor
hlt
dec
lock
sar
jbe
dec
mov
sahf
cmp
xchg
(bad)
and
out
xchg
lods
std
xchg
cs
jecxz
push
retf
mov
add
jge
jl
in
(bad)
out
scas
loopne
cmc
xlat
fsubr
mov
mov
test
shl
push
call
mov
les
call
out
dec
xlat
shl
cmp
xchg
jb
mov
and
xchg
inc
rol
mov
lods
pop
out
dec
pop
fs
add
dec
sub
jmp
arpl
fist
mov
icebp
cmp
push
ins
pop
or
mov
mov
pusha
std
fwait
mov
pop
cmp
jmp
ja
pop
mov
jnp
imul
fwait
cmps
dec
and
mov
inc
fistp
lock
push
add
sahf
mov
cdq
cmps
mov
ret
and
xor
push
pop
adc
cmps
dec
std
daa
mov
xchg
mov
test
adc
sub
pop
sub
xor
sub
add
jp
idiv
fcmovne
cld
push
push
pop
cmp
test
lds
mov
xor
and
xor
aaa
cmp
jge
mov
in
jmp
xor
xchg
inc
jmp
ret
or
push
outs
test
mov
sub
popa
xor
adc
dec
sub
adc
mov
call
sahf
lea
cmp
test
popa
or
js
mov
add
(bad)
(bad)
pop
fcom
pop
aam
(bad)
mov
sub
imul
fs
js
sub
(bad)
push
pop
shl
dec
push
lock
mov
push
mov
int
or
aas
adc
dec
xchg
jmp
jle
fidivr
pop
sbb
(bad)
push
xchg
pop
or
mov
loop
push
add
sub
dec
(bad)
nop
(bad)
mov
mov
retf
jbe
ins
pop
push
iret
or
dec
es
int3
sub
rsm
and
push
mov
cmp
arpl
jnp
adc
xor
imul
pop
loope
enter
dec
outs
(bad)
mov
push
mov
or
adc
jecxz
inc
test
loope
jb
mov
mov
mov
dec
jecxz
repnz
adc
mov
aam
aas
cmp
add
aam
or
sbb
call
les
into
test
sbb
xor
int
iret
in
sbb
adc
outs
stos
fstp
adc
lods
fs
stos
mov
int3
pop
dec
adc
xlat
in
mov
jo
fisubr
int
jae
or
inc
xchg
jb
mov
leave
sbb
jle
outs
lods
(bad)
(bad)
fwait
call
addr16
cmp
mov
ss
mov
rcr
retf
ficomp
sub
fcomp
jp
(bad)
aam
scas
sub
rcl
adc
mov
jle
shl
sar
push
add
stc
mov
or
cld
dec
leave
(bad)
int3
jb
les
jbe
mov
inc
dec
outs
lods
pop
cmp
jg
in
jbe
shr
je
sub
int3
xchg
inc
push
dec
push
jmp
jo
mov
jmp
imul
mov
nop
iret
and
push
push
test
js
add
test
jmp
mov
mov
xchg
(bad)
pushf
push
cmp
inc
fbld
loope
clc
call
pusha
in
dec
xchg
dec
mov
sub
jnp
sbb
and
pop
add
add
das
pop
retf
dec
test
shr
mov
jno
ss
jmp
inc
cmps
(bad)
pushf
scas
bound
outs
xchg
xor
mov
mov
pop
btc
xchg
or
cmps
and
movs
fld
(bad)
frstor
retf
mov
jmp
and
mov
lods
xchg
jg
and
xchg
test
lods
shr
lock
lods
and
imul
push
out
jge
cli
sbb
sub
cmp
cld
aaa
test
pushf
mov
xchg
std
data16
int
test
in
xor
loope
stos
add
jae
sbb
pop
lahf
sti
adc
xchg
das
push
push
stos
xor
addr16
stc
pop
xor
pop
adc
jne
fistp
pop
push
mov
jmp
mov
adc
jecxz
mov
int3
sbb
stos
test
cmp
shr
in
loope
in
pop
fstp
or
stc
mov
adc
jo
iret
cmc
mov
movs
xor
adc
dec
int3
fdiv
xchg
sar
movs
repnz
mov
pop
bound
sbb
(bad)
rol
shr
cmp
lea
dec
into
mov
fsubr
cmp
add
retf
nop
adc
fwait
xor
iret
in
ja
xrelease
sbb
out
pop
add
lea
out
and
stc
lahf
sub
cmp
push
adc
sbb
fdiv
sbb
jmp
mov
test
ins
imul
lds
out
xchg
cmp
inc
sbb
sub
cmp
iret
out
scas
or
mov
xchg
jge
stc
adc
pusha
inc
js
lock
es
jmp
jno
jp
sti
dec
add
dec
pushf
mov
sbb
shr
mov
and
push
scas
mov
pop
jb
jno
cmp
lock
sti
sti
jmp
and
aad
js
xor
mov
sub
fldenv
gs
push
adc
mov
into
sar
sub
jg
sbb
loop
mov
cmp
adc
cmp
icebp
test
mov
dec
cmp
pusha
mov
jecxz
fadd
into
clc
cmp
pop
inc
das
inc
cmp
mov
stc
cmp
xchg
add
push
pop
cld
pop
fdivr
hlt
mov
sahf
xchg
aas
mov
retf
pop
scas
pop
add
pusha
(bad)
mov
daa
adc
(bad)
repnz
xor
mov
pop
je
mov
ss
and
repnz
inc
pusha
mov
fadd
out
cmc
aaa
sbb
mov
mov
xchg
mov
jg
xchg
inc
movs
outs
xchg
fistp
push
aam
mov
mov
pop
lods
sub
mov
hlt
jnp
mov
add
les
mov
xor
xchg
jp
hlt
sub
xor
mov
mov
(bad)
mov
stos
push
or
lods
icebp
or
call
mov
repz
pop
mov
mov
push
scas
xchg
mov
push
adc
pop
xor
ins
or
and
fbstp
std
jbe
stos
cwde
inc
mov
xchg
fidivr
fs
jnp
inc
out
cmp
jecxz
repnz
inc
jmp
cmp
push
push
(bad)
mov
in
sbb
push
pop
loope
addr16
mov
mov
sub
push
movs
or
call
lods
pop
popa
pushf
idiv
and
push
adc
push
dec
push
mov
loopne
add
shl
movs
sub
and
out
jp
cmps
outs
or
shr
fprem1
push
and
popf
fsub
fisubr
mov
cmp
and
rol
nop
js
sbb
and
out
xor
mov
cmps
sub
popf
pop
fimul
rcr
sub
adc
movs
fbstp
mov
or
jmp
(bad)
sub
fmul
add
stos
ja
dec
jns
cmc
sbb
or
stos
or
jg
xchg
mov
dec
pop
arpl
stos
jo
inc
mov
sbb
fwait
mov
mov
hlt
pop
xchg
sahf
stos
jp
jg
imul
cmc
mov
push
xlat
inc
(bad)
jl
dec
(bad)
div
mov
mov
xchg
lods
ror
jg
push
push
jmp
iret
sub
dec
(bad)
ja
or
out
stos
push
pop
cmp
push
mov
popa
retf
loop
push
pop
jecxz
mov
push
pop
pop
rcl
ret
push
retf
imul
shl
and
mov
test
jp
push
(bad)
lea
movs
rcl
mov
push
push
pop
dec
mov
fld
mov
adc
cmp
sbb
lods
hlt
scas
in
cwde
adc
ret
and
lods
cmc
outs
retf
push
call
jnp
js
test
xchg
imul
pop
(bad)
pop
bound
and
inc
cmc
mov
hlt
clc
mov
rol
push
pop
(bad)
xchg
int3
push
and
or
dec
sub
loop
mov
cmp
xlat
addr16
daa
test
sub
xchg
cmp
das
fisttp
pop
jbe
sbb
loope
add
scas
aas
jmp
in
bound
stos
xchg
xor
jl
xor
jb
dec
or
arpl
xor
(bad)
test
(bad)
cli
push
scas
dec
mov
cld
call
loopne
jbe
mov
mov
mov
outs
call
inc
in
retf
je
mov
out
out
sub
xchg
out
das
jno
sub
test
int
test
mov
in
pop
stos
dec
ins
cs
es
lahf
jl
sub
rol
mov
fmul
xor
nop
pop
pop
push
push
jmp
or
sub
test
inc
push
mov
int
aad
leave
bswap
(bad)
fcom
mov
test
xchg
leave
lock
push
test
scas
icebp
movs
in
out
mov
inc
jae
test
lods
xchg
pop
xor
pop
out
ins
icebp
add
push
xchg
mov
adc
je
jo
popa
jl
rol
js
mov
xchg
dec
or
pop
cli
mov
sbb
pop
cmp
push
iret
mov
jp
jmp
fisttp
xor
lods
xchg
push
cli
std
cmps
dec
call
mov
ins
cs
ds
mov
movs
cmp
loopne
push
or
stos
in
movs
les
aas
es
sbb
add
dec
push
ret
pop
xor
adc
loopne
fsub
cmps
jmp
fsubr
or
retf
dec
adc
add
mov
in
xchg
mov
shr
pushf
movs
cmp
sub
or
cwde
pop
or
scas
loopne
mov
pop
cwde
xchg
sub
and
in
rol
adc
sbb
mov
and
lods
and
cwde
mov
stc
jo
pusha
cmps
inc
adc
cmc
aam
clc
sbb
gs
xchg
xchg
cmp
sbb
pop
inc
fstp
pop
fdiv
xor
dec
std
cmp
or
push
fsubr
add
adc
dec
pushf
or
maskmovq
neg
test
out
sub
ret
aam
sbb
stos
imul
bound
mov
jnp
sub
jmp
pop
pop
sbb
push
ja
sbb
sub
or
and
mov
sbb
or
xchg
stc
call
test
(bad)
or
dec
fstp
fisubr
fisub
sbb
not
xchg
stos
or
gs
dec
in
push
repz
fnstcw
push
cmp
push
cmp
jo
and
retf
cdq
sbb
popa
mov
imul
into
and
or
stos
mov
mov
cdq
mov
dec
jmp
cmp
retf
retf
call
(bad)
imul
dec
cwde
push
mov
sbb
mov
adc
int3
push
ins
imul
pop
xor
add
dec
jmp
sub
or
into
inc
mov
(bad)
(bad)
rol
xchg
imul
and
jae
add
adc
in
xchg
int3
in
out
sub
scas
rcr
aad
mov
and
add
inc
pop
push
nop
rol
push
jns
mov
into
push
std
inc
cmp
fadd
and
pusha
push
in
mov
jbe
jns
mov
js
inc
pop
inc
mov
or
rcl
hlt
mov
sub
dec
out
and
cmp
stos
pop
mov
cmc
ret
dec
sar
mov
rol
xchg
sub
ror
jo
sub
mov
dec
dec
cmp
mov
fist
jnp
aaa
and
add
inc
mov
test
pop
jl
out
pop
jmp
call
test
xchg
pop
and
and
bnd
mov
sub
fist
push
outs
retf
dec
aad
sub
icebp
std
enter
mov
cmp
jecxz
das
cmp
fcmovne
inc
call
mov
xor
pop
sub
rol
in
mov
out
jns
rcl
inc
les
cmp
xor
push
adc
loope
daa
jno
test
movs
inc
xor
sub
mov
add
or
and
ja
mov
sbb
cs
test
adc
cmp
xchg
movs
lods
pop
call
adc
add
(bad)
mov
test
or
jne
test
iret
xchg
gs
popa
mov
vmread
mov
outs
cmc
and
inc
or
clc
xor
jp
add
adc
inc
sar
mov
retf
mov
rol
aas
inc
call
scas
push
xchg
pushf
cmp
mov
jb
or
jb
outs
out
mov
les
inc
pop
or
sub
iret
jae
mov
mov
push
in
sub
mov
mov
es
inc
xor
and
add
or
jmp
cli
dec
jns
xchg
inc
fistp
push
jae
push
cdq
test
stos
mov
push
pop
or
int
push
out
pop
addr16
adc
scas
mov
push
jg
and
cmp
pop
shr
movs
jg
rcl
and
fcmove
mov
(bad)
movs
into
(bad)
es
daa
sub
push
scas
sub
bound
cmp
loop
sub
add
sbb
jle
jb
cs
scas
mov
call
jmp
imul
adc
outs
ins
mov
ret
sub
in
jno
movs
(bad)
dec
bound
or
std
add
mov
push
ret
mov
cmp
je
push
test
dec
mov
nop
ins
push
sti
mov
test
add
sbb
fdivr
int3
(bad)
jno
movs
push
add
cmp
fnstsw
inc
sub
mov
scas
aad
adc
ins
cmc
cmc
nop
pop
jle
sub
cmc
fistp
outs
push
add
jmp
mov
push
aad
inc
movs
pop
imul
loope
jo
mov
sub
xchg
fs
popa
(bad)
loop
into
cmp
sbb
xchg
popf
ins
imul
in
data16
push
pop
shl
mov
mov
or
pop
inc
jbe
in
in
pop
push
sti
fidiv
mov
aam
xor
in
aas
out
jmp
xchg
or
or
jae
dec
repnz
cli
push
xchg
data16
adc
xchg
jle
cmps
pusha
or
or
dec
test
xchg
fld
mov
push
nop
cmp
lahf
sub
mov
push
or
pop
push
xchg
hlt
pop
lods
inc
sbb
cld
cmp
pushf
dec
cmp
sub
mov
ror
pop
mov
ror
daa
mov
arpl
es
xchg
retf
aad
lock
or
push
xchg
sub
and
mov
jmp
jl
das
fisttp
leave
and
rcr
repz
jne
pop
xor
mov
dec
xlat
jb
xor
adc
test
neg
sub
scas
or
sbb
test
fisttp
mov
movs
jnp
mov
fisub
adc
push
push
pop
jmp
add
cmp
addr16
pop
rcr
mov
sti
arpl
shld
ins
xchg
jle
mov
sbb
icebp
jecxz
inc
jp
mov
ja
mov
mov
add
call
aaa
dec
mov
retf
add
mov
push
(bad)
jb
jge
ss
push
arpl
jae
fstp
adc
fiadd
pop
push
jo
inc
dec
sbb
fsub
sbb
dec
scas
pop
push
mov
nop
(bad)
js
jle
fwait
gs
lds
mov
xchg
into
data16
sub
adc
lds
out
repnz
xchg
sub
add
dec
mov
nop
jmp
mov
mov
movs
imul
out
cmp
sub
push
xor
push
outs
fstp
retf
repz
jge
ds
and
rol
ins
jle
and
sbb
retf
or
push
sub
or
out
mov
sti
adc
into
mov
test
mov
(bad)
push
or
popf
stos
xchg
adc
and
sub
popf
cmp
mov
xchg
mov
(bad)
dec
dec
(bad)
retf
mov
xchg
sti
shr
int
repnz
add
outs
shl
pusha
lahf
jle
sbb
not
or
mov
arpl
icebp
xor
xlat
inc
add
pop
mov
xor
adc
inc
popa
lahf
sbb
div
add
xchg
push
jbe
div
jmp
aam
clc
xchg
and
push
lods
dec
ins
into
mov
sub
and
sub
int3
cdq
jae
hlt
out
adc
sahf
test
lods
in
out
gs
je
sub
fisttp
fidivr
cmp
push
jne
xor
push
inc
sbb
shl
rcr
imul
das
cmc
jle
rcr
cmp
(bad)
(bad)
xchg
loopne
adc
xor
shl
xor
push
mov
test
and
js
push
mov
outs
pop
xor
sub
dec
mov
aad
mov
into
add
pop
aaa
mov
cld
mov
sub
les
jns
popf
sbb
in
sub
mov
add
mov
dec
jmp
and
ret
pushf
xchg
arpl
or
pop
mov
or
aaa
mov
add
adc
out
inc
jp
cli
jmp
mov
adc
(bad)
xchg
aas
test
dec
hlt
mov
mov
outs
ret
adc
sbb
push
stc
(bad)
fbstp
inc
xchg
jecxz
stc
cmp
mov
ds
test
ret
xchg
nop
sti
(bad)
iret
mov
xor
lds
sub
fcomi
xor
out
mov
out
imul
fdiv
xor
push
cmp
loopne
lahf
mov
dec
sti
xor
mov
aad
sub
ds
retf
jge
jo
(bad)
and
int3
mov
loopne
mov
popa
xchg
xor
mov
mov
mov
ins
add
fwait
enter
fstp
mov
fstp
mov
xor
ss
mov
call
inc
or
xchg
and
push
ror
mov
shl
test
mov
cmp
sub
movzx
push
pop
and
imul
sbb
or
jmp
addr16
fxch
and
jo
push
jo
adc
js
imul
cwde
adc
loop
dec
in
push
add
xchg
sar
(bad)
pop
mov
test
xor
jb
mov
dec
bound
jmp
sbb
ss
cmp
jo
in
shl
jnp
sbb
inc
cmp
stos
aaa
jmp
add
lahf
rcr
pop
inc
scas
fcom
sbb
jno
(bad)
push
out
add
push
push
shl
hlt
sbb
jl
jo
ja
jne
or
sbb
cli
mov
xchg
test
es
pop
xchg
pop
push
mov
jl
mov
cmp
cmp
adc
stos
(bad)
mov
add
push
imul
or
rol
ret
sahf
in
push
shr
xor
mov
dec
loope
jnp
push
pushf
out
arpl
cli
push
sbb
mov
xchg
sti
mov
push
jne
dec
in
loope
int3
jo
in
(bad)
mov
mov
stos
loope
and
pop
jne
lods
xor
imul
call
shr
cmps
cmp
mov
mov
sub
jae
frstor
test
mov
in
aaa
pop
mov
inc
mov
cmps
push
cmps
push
daa
pop
iret
out
fs
mov
xchg
and
add
push
test
pop
xchg
add
inc
imul
sbb
inc
adc
xor
sbb
cmp
out
imul
adc
and
lods
es
enter
cmc
pushf
pop
mov
stos
ja
sub
ss
fwait
sar
aaa
jne
cmps
les
in
div
xor
addr16
pop
stos
in
rcr
cmps
or
call
ret
xchg
jbe
push
std
mov
or
data16
cmp
mov
push
and
inc
dec
addr16
xchg
pop
sub
shl
dec
popa
aaa
data16
shl
outs
xor
(bad)
xor
xchg
sahf
jne
jnp
xchg
sub
pop
dec
add
cmc
ja
fisub
push
loopne
or
ficom
ror
mov
mov
adc
sbb
pushf
retf
pop
dec
in
or
test
push
cmp
or
(bad)
(bad)
xchg
cmps
fs
aam
into
cld
add
inc
mov
mov
dec
mov
and
fdiv
les
adc
cdq
mov
xor
loopne
aam
inc
add
mov
mov
push
les
mov
mov
popa
mov
dec
jne
dec
add
pusha
(bad)
aaa
iret
cmp
imul
sbb
cmp
mov
clc
push
adc
xlat
inc
xchg
fild
pop
jp
jnp
dec
adc
int3
stos
(bad)
xor
movs
mov
jnp
(bad)
call
inc
push
mov
xchg
pushf
or
add
out
jge
sub
or
or
aad
jmp
sbb
aam
cmp
xchg
std
cmps
ds
adc
(bad)
out
dec
out
imul
shl
and
jns
jmp
add
clc
push
xchg
test
ins
inc
dec
leave
jle
xchg
call
out
lds
aas
xchg
inc
je
mov
cld
push
ds
fbstp
bound
xchg
inc
iret
mov
add
imul
mov
ins
jae
leave
in
(bad)
xchg
ficom
ror
or
sub
in
mov
cli
sbb
stc
sbb
out
outs
stos
aas
out
add
fwait
test
add
sub
(bad)
stc
fdivr
pop
sub
test
idiv
cs
loopne
scas
xchg
daa
mov
jo
nop
and
mov
arpl
cmp
sbb
sub
push
cmp
cli
loop
iret
adc
ds
mov
das
lds
xchg
retf
pop
test
rcr
pop
lods
inc
into
cmp
xchg
repz
inc
pop
fimul
pusha
imul
mov
ret
mov
aam
dec
add
push
mov
dec
cdq
add
stos
mov
cmp
ss
movs
aad
shl
dec
add
daa
or
cli
xor
mov
mov
inc
pushf
pop
cmp
xchg
lds
scas
cmp
xchg
scas
adc
dec
imul
scas
pop
cmp
adc
sbb
jmp
jb
fs
lea
ja
mov
adc
and
or
add
iretw
pop
mov
popf
pop
jns
inc
ret
ins
pop
loope
aas
push
mov
data16
out
lock
sub
lods
push
jp
jb
pop
dec
rcr
xor
cld
in
adc
(bad)
not
out
nop
cmp
pop
mov
ins
xor
pop
cs
std
sub
inc
mov
jmp
popf
ret
add
lods
or
sub
cmp
aas
and
dec
or
pop
jecxz
lea
arpl
fwait
les
and
test
mov
mov
xchg
sbb
in
xchg
cwde
xor
call
cmp
jne
and
out
push
mov
mov
push
repz
(bad)
iret
mov
mov
cmp
push
dec
sbb
jne
js
fst
push
sbb
movs
push
mov
jbe
mov
xchg
push
pushf
adc
stos
out
sbb
popa
clc
mov
adc
mov
das
inc
ror
xchg
pop
lods
dec
cmp
jne
icebp
in
nop
push
repnz
out
aas
neg
jp
cmp
pop
movs
ja
jbe
mov
icebp
loope
mov
xchg
sbb
inc
mov
sub
lock
pop
and
dec
pop
js
mov
xchg
cdq
leave
outs
adc
fbld
mul
sbb
xchg
sub
dec
cdq
mov
outs
jmp
je
xchg
mul
loop
loop
or
(bad)
cmps
push
retf
shl
adc
ror
dec
cmp
sub
dec
mov
sbb
ja
and
jnp
aaa
pusha
push
mov
pop
arpl
inc
xchg
shl
pushf
mov
jmp
inc
xor
in
mov
mov
cmps
data16
mov
or
dec
loop
outs
stc
fs
cdq
ins
aad
repz
daa
sub
mov
fcom
int
fiadd
jo
add
or
push
mov
mov
out
or
ins
arpl
pop
sbb
leave
mov
sti
test
xor
xchg
cwde
xor
ror
out
arpl
das
inc
stc
cmp
gs
push
enter
pop
out
lea
add
arpl
xchg
pop
stos
int
hlt
mov
adc
test
cld
push
add
ins
jle
hlt
mov
push
add
mov
imul
in
adc
test
ret
jns
adc
movs
or
sub
inc
and
imul
cmp
inc
adc
leave
dec
cmp
pop
nop
inc
cmp
mov
cwde
push
mov
ds
jle
pop
jmp
int3
mov
fxtract
jp
jns
hlt
stos
out
or
sub
adc
mov
clc
inc
pop
xchg
adc
shr
sahf
cmp
mov
mov
test
popa
push
or
sub
leave
adc
jbe
div
js
ins
dec
and
cdq
repnz
repnz
inc
sub
and
or
jle
call
popa
cmp
ret
ss
fimul
mov
jp
mov
aam
int
sub
mov
mov
lods
push
push
into
gs
mov
adc
sbb
add
jb
popa
scas
lods
inc
pop
pop
ss
jbe
sub
dec
jmp
shl
mov
cmps
push
inc
and
sub
ficom
ss
xchg
cmp
push
popa
int3
out
xchg
sbb
adc
imul
lea
cmp
sub
ret
scas
dec
inc
and
pusha
mov
sbb
call
pop
jmp
clc
jge
jnp
(bad)
popa
sbb
call
pusha
fdivp
push
cmc
pop
mov
sub
aaa
enter
mov
scas
out
jg
loope
repz
retf
add
push
mov
loopne
outs
cmps
pop
imul
ret
inc
dec
movs
pop
sahf
(bad)
dec
dec
xor
aaa
inc
sub
inc
(bad)
in
data16
adc
in
sbb
add
sbb
inc
mov
pop
inc
aas
out
cs
ret
jmp
jp
xchg
icebp
icebp
add
and
pop
in
stc
add
jge
mov
shl
imul
and
jns
in
stc
cmp
sti
out
push
arpl
mov
mov
or
pop
jg
imul
cmps
lods
add
sahf
sbb
sbb
loopne
xchg
push
jnp
bound
movs
xor
pop
cld
xchg
xor
stos
jge
cmp
call
(bad)
push
push
enter
xor
mov
mov
mov
ss
ss
jl
mov
(bad)
inc
sbb
ficomp
aad
dec
push
xor
pop
outs
aam
sbb
xchg
mov
push
push
xchg
dec
xor
jecxz
out
iret
cmps
jg
jg
imul
and
pop
test
retf
into
in
rol
jne
mov
pop
enter
call
adc
retf
inc
loopne
mov
pop
out
das
xor
xchg
xor
fld
xor
sbb
mov
das
ja
(bad)
movs
call
cmp
ret
inc
mov
pop
push
sahf
and
iret
pop
adc
outs
fwait
out
and
jmp
ret
scas
add
in
fisubr
and
test
rcr
repnz
in
pushf
gs
adc
addr16
ds
les
dec
sub
out
xor
xchg
cmp
adc
arpl
mov
push
icebp
inc
int
inc
sahf
cmp
fcmovne
inc
ins
ret
test
pop
add
xor
xchg
out
add
(bad)
repnz
js
nop
maskmovq
imul
add
je
out
mov
repz
inc
dec
jno
aaa
(bad)
cld
mov
xchg
sbb
dec
shr
adc
(bad)
sub
je
ja
rcr
or
test
mov
xor
mov
inc
sbb
pop
push
aam
pop
inc
xor
fldenv
jae
mov
adc
cmps
xor
stc
retf
xor
sbb
push
cmps
mov
outs
sbb
mov
sub
pop
sbb
xchg
or
pop
or
mov
cmp
add
data16
mov
(bad)
sbb
loope
jb
mov
adc
outs
push
dec
cmp
xchg
push
shl
call
loope
xor
fcmovbe
aas
cmp
ja
push
popf
sbb
mov
fiadd
test
jns
ins
mov
pop
mov
shr
mov
adc
sbb
popa
out
xchg
rol
sbb
aad
mov
idiv
bound
cmp
rcl
cmp
daa
pop
call
loope
pop
cdq
fsubr
mov
hlt
stc
mov
sbb
imul
pop
test
repz
bound
inc
sti
cmp
jno
std
pop
jl
or
sbb
out
pop
xor
adc
js
pop
push
fistp
push
stos
stos
push
pop
(bad)
sahf
pop
cmp
mov
or
xor
lea
sub
jnp
imul
jno
push
mov
inc
aam
dec
pop
inc
inc
pop
imul
repz
and
add
pop
arpl
mov
loope
cmps
cmp
adc
je
in
push
test
inc
and
movs
cmp
cmps
dec
in
push
addr16
in
mov
or
out
jne
cmc
mov
je
and
push
sti
mov
sbb
add
pop
pushf
fcmovnb
mov
(bad)
in
clc
ss
add
hlt
movs
lds
push
dec
dec
push
movs
fst
js
and
or
daa
scas
leave
cwde
cmp
pop
or
ret
test
ret
fs
push
adc
call
movs
jno
(bad)
fnstsw
mov
ret
inc
pop
or
add
fnstenv
movs
dec
push
inc
push
aad
popf
into
push
add
(bad)
imul
or
sbb
push
sub
outs
inc
xor
and
fxtract
pusha
cmp
cli
and
mov
dec
lods
pop
and
and
add
mov
jge
mov
leave
inc
fwait
jnp
sti
das
mov
imul
add
and
pop
mov
test
ins
outs
xor
mov
ret
and
xor
pop
movs
mov
mov
dec
pop
xor
ss
icebp
stos
loop
mov
pop
sbb
push
stos
cmp
mov
fisub
aad
jl
mov
dec
push
xor
jge
push
push
seta
jnp
mov
adc
out
push
retf
gs
mov
out
sbb
lods
push
pop
dec
xchg
int
add
int
loop
clc
sub
sbb
in
sub
cld
mov
in
and
fistp
das
sub
push
mov
int
sar
popa
fs
(bad)
ja
adc
pop
cmps
add
push
adc
lods
cmp
xor
mov
mov
cwde
(bad)
test
es
push
cmc
outs
xchg
xchg
push
jg
sbb
dec
leave
cli
jge
add
ins
dec
shl
fdivr
shr
jbe
iret
sub
add
push
inc
add
jnp
jmp
fdiv
in
(bad)
adc
mov
call
pop
adc
push
(bad)
mov
mov
iret
push
outs
pop
pop
fist
sub
das
jo
pop
or
mov
bnd
(bad)
enter
sub
fsubr
out
stos
jo
imul
and
ds
lahf
sub
bound
(bad)
out
push
mov
push
cmp
scas
in
fs
movs
inc
mov
jnp
mov
nop
enter
add
mov
aas
daa
sub
(bad)
les
add
pop
lds
pop
xor
and
(bad)
jae
fldenv
js
mov
inc
cdq
cli
cmp
fisttp
mov
and
cmp
je
jo
push
mov
es
push
sbb
(bad)
sub
cmp
int3
mov
sar
mov
xor
ins
jmp
enter
adc
xchg
ins
enter
pusha
fwait
pop
movs
or
mov
clc
sub
xchg
sbb
fisub
fidiv
mov
jbe
or
sbb
cs
jmp
dec
clc
stos
pusha
push
jno
jl
mov
rcr
xchg
adc
fdivr
mov
push
jle
cmc
je
ret
cmp
stc
jbe
out
add
inc
loopne
mov
mov
mov
xchg
add
shl
ds
out
das
mov
xchg
inc
fst
stos
mov
ins
push
sub
jns
shl
sbb
or
in
push
mov
adc
sbb
xchg
inc
mov
add
dec
jg
aas
cmc
mov
inc
test
xor
arpl
popa
ror
inc
scas
icebp
xor
lods
(bad)
cdq
jae
inc
mov
jb
scas
mov
outs
add
cmp
jge
sub
dec
arpl
(bad)
mov
cmp
pop
jno
jbe
adc
jge
mov
adc
or
jg
mov
add
lods
adc
xchg
jmp
adc
dec
pop
xor
push
mov
and
add
les
ja
mov
je
push
and
mov
xchg
jecxz
push
push
and
ss
pop
cmp
dec
dec
imul
ss
and
icebp
cdq
adc
daa
es
or
addr16
movs
pop
fistp
xchg
dec
inc
pop
mov
push
stos
xor
dec
test
push
or
inc
or
movs
stc
push
aaa
jmp
mov
xchg
xchg
pop
cmc
xor
(bad)
in
iret
jge
sbb
ins
mov
popa
and
popf
jnp
enter
sub
aad
mov
jne
mov
pop
inc
cdq
sbb
jmp
sbb
mov
fisttp
jge
scas
fisubr
add
out
mov
mov
add
mov
jo
push
(bad)
retf
scas
pop
mov
lea
push
sti
push
push
mov
movs
mov
pop
pop
pusha
dec
sub
jl
call
jmp
adc
adc
xor
mov
imul
inc
mov
in
iret
jns
jl
adc
xor
mov
cdq
fisub
sbb
clc
gs
dec
into
fimul
frstor
inc
dec
je
xchg
or
xchg
push
inc
lea
sub
mov
lahf
test
cmc
xlat
sbb
pushf
jae
mov
xor
xor
and
cmp
aaa
inc
into
pusha
repnz
cmps
mov
gs
retf
mov
xor
xchg
sub
jo
push
std
inc
adc
add
out
pushf
scas
repz
sahf
push
mov
sbb
or
mov
xchg
inc
mov
leave
push
int
and
ds
mov
dec
fidiv
cmp
add
add
adc
sbb
inc
mov
iret
stos
sub
mov
adc
jecxz
clc
sub
mov
cli
sbb
cmp
jne
sbb
sub
xchg
loope
mov
jg
dec
adc
fisubr
cmc
inc
mov
cmp
out
mov
adc
popf
out
sub
xor
arpl
and
ja
or
xchg
mov
or
dec
lods
jmp
fucom
sub
fcmovu
cmp
xchg
mov
push
paddb
sbb
jle
dec
in
jae
add
adc
push
gs
daa
call
xor
add
lea
xchg
jae
push
push
add
mov
sahf
je
add
adc
imul
call
daa
out
test
imul
scas
je
(bad)
(bad)
mov
jge
out
into
pop
cmp
loopne
cmp
adc
jb
ret
or
jae
add
push
push
mov
in
(bad)
mov
je
into
jae
push
mov
ret
push
leave
and
pop
fidivr
sbb
and
es
js
scas
push
adc
nop
mov
out
mov
iret
pop
loopne
pop
cmp
cld
iret
loop
fcmove
jecxz
ss
in
jle
repnz
dec
cmp
mov
and
loop
pop
jb
pop
pop
mov
sbb
aam
(bad)
mov
mov
imul
loop
cmp
sahf
add
jns
push
sub
dec
rcl
out
(bad)
jno
lods
stos
cmp
add
dec
arpl
movs
sub
sub
jmp
cli
ret
xchg
aad
imul
movs
push
xchg
repz
daa
(bad)
push
adc
adc
inc
lahf
add
es
push
test
xor
mov
shl
fisub
imul
mov
push
std
cmps
cmp
cwde
pop
iret
out
inc
pop
(bad)
pop
vpaddb
test
xlat
bound
add
pop
ss
sti
data16
(bad)
xchg
int3
leave
inc
test
cmp
nop
xlat
ss
cmp
push
fcom
adc
pop
cmp
mov
ss
int
mov
ret
jno
cdq
sub
mov
ja
neg
mov
adc
mov
rcr
sub
shl
fdivr
ins
or
jbe
push
and
dec
neg
or
aas
int3
mov
inc
in
push
repnz
or
ss
iret
imul
push
out
dec
addr16
sar
inc
xchg
mov
pop
retf
xor
jb
jne
xchg
add
adc
sbb
xchg
fcom
mov
pop
xchg
mov
xor
cs
or
out
lds
(bad)
inc
fwait
xor
mov
inc
add
ja
mov
ret
clc
pop
xchg
stc
test
inc
es
iret
and
fild
faddp
cs
dec
cmp
pop
cmp
movs
stc
sub
jecxz
sub
sub
lods
fsubr
add
les
(bad)
dec
sub
inc
push
int
gs
xchg
mov
nop
fisub
hlt
mov
sbb
pop
jb
test
out
addr16
ja
xlat
lods
sbb
stos
fidiv
(bad)
jge
jbe
mul
add
mov
mov
cmp
std
jg
das
xchg
out
mov
mov
loop
cld
mov
cld
mov
mov
test
into
inc
inc
popf
cmp
mov
fnstenv
mov
sub
cld
jb
xchg
push
xor
push
in
or
mov
fidivr
sbb
sbb
arpl
adc
xor
and
xor
xchg
sti
adc
adc
gs
(bad)
cli
js
sbb
(bad)
xor
jmp
rol
mov
mov
push
gs
shl
add
aaa
mov
ins
adc
push
dec
xchg
ror
mov
outs
xlat
mov
test
mov
cdq
sbb
pushf
aad
and
inc
fiadd
shl
cs
adc
jne
pop
aam
mov
sbb
mov
sbb
les
and
inc
adc
pop
mov
nop
pop
bound
daa
repz
jecxz
add
or
adc
icebp
mov
sub
adc
mov
out
xchg
jmp
ror
jmp
retf
push
mul
add
cmp
adc
imul
pop
lods
sub
push
mov
push
add
scas
das
retf
pop
xor
aad
cmp
cdq
sbb
push
int
lds
ficom
frstor
push
nop
add
mov
add
mov
push
aas
ret
ss
push
pop
neg
mov
dec
mov
cli
scas
fwait
and
repnz
cmc
push
pop
xor
out
add
mov
int
xor
pop
icebp
adc
sahf
add
mov
mov
ror
xor
dec
loopne
test
adc
dec
cmp
(bad)
sbb
add
sar
mov
or
push
inc
pop
mov
icebp
ja
icebp
dec
xor
dec
aam
xchg
mov
and
dec
out
sbb
xchg
xor
stos
dec
fst
mov
cmc
sbb
scas
sahf
retf
jmp
or
call
mov
or
push
dec
dec
dec
sahf
pop
shl
or
jp
ds
cmps
jl
mov
inc
and
test
push
pushf
mov
cmp
lea
dec
nop
sar
cwde
stos
outs
push
mov
in
call
ins
mov
sbb
sbb
loop
aaa
dec
shl
inc
xchg
push
out
cmp
xlat
ins
sti
inc
sub
es
call
popf
fldl2e
popf
mov
loop
pusha
xchg
sahf
dec
pop
jmp
pop
lahf
dec
outs
fadd
ret
out
lahf
rcr
imul
stos
jl
or
jmp
je
test
shr
sbb
pusha
out
pop
mov
loop
mov
cmps
jnp
push
or
test
leave
rcr
or
mov
ins
pop
ds
in
xchg
jecxz
sub
dec
mov
fist
rcr
imul
(bad)
push
dec
cmps
ja
(bad)
pop
xchg
pop
ds
cmc
jl
imul
fcomp
mov
lods
ret
test
sbb
jbe
mov
inc
std
add
sub
fwait
mov
ins
adc
xor
mov
js
jmp
jecxz
or
outs
inc
dec
inc
arpl
loop
pop
enter
stc
mov
fwait
push
std
push
sub
dec
inc
jmp
mov
in
xchg
inc
loopne
cmp
shl
in
ins
out
sbb
adc
mov
add
test
mov
icebp
xor
adc
into
sub
mov
in
pusha
ret
dec
test
jnp
jns
in
sub
data16
std
push
or
mov
sbb
ret
push
mov
and
jno
inc
out
fisub
imul
ret
into
retf
test
push
xchg
clc
sub
sbb
mov
dec
mov
popa
push
add
mov
mov
ret
in
jp
stos
xlat
cmp
jl
imul
or
mov
dec
sbb
add
fbld
sub
push
sbb
push
test
loope
inc
inc
push
cwde
lods
mov
bswap
cmp
out
xchg
jl
out
cmps
movs
mov
mov
lods
popf
push
popf
xchg
mov
mov
sti
fsubp
jp
ror
mov
(bad)
xor
fidivr
adc
mov
sar
sub
ins
addr16
sbb
or
lahf
inc
sbb
fcomp
or
mov
sahf
lahf
popa
xlat
and
cmp
(bad)
or
push
push
repnz
or
mov
jne
loope
pusha
das
(bad)
ret
and
xchg
inc
stos
dec
stos
mov
clc
loope
mov
lods
inc
add
(bad)
ret
sbb
test
jl
loopne
mov
scas
aas
scas
fmul
sahf
mov
repz
push
push
lea
dec
pause
outs
sbb
or
sub
xor
or
mov
jmp
push
fdiv
into
test
imul
fmul
rol
jmp
loop
cwde
in
mov
jae
dec
test
inc
mov
push
or
aas
clc
stos
xor
pop
mov
mov
(bad)
push
fild
loope
push
shr
mov
sbb
int
jae
(bad)
mov
leave
fucom
cli
mov
inc
std
dec
add
shr
jmp
mov
mov
loop
or
mov
mov
inc
aad
pop
mov
and
into
inc
xor
outs
add
sbb
jno
in
mov
jo
lods
das
mov
mov
jne
(bad)
sub
enter
scas
test
repnz
adc
or
xchg
inc
sub
es
mov
fdivr
clc
xchg
xchg
call
cwde
pop
stos
dec
scas
xor
add
and
pop
inc
push
ja
movs
popf
movs
adc
(bad)
pusha
out
dec
scas
sbb
mov
fld
xchg
test
cmp
inc
push
out
inc
cmp
es
mov
jno
or
out
xchg
lahf
jl
pop
call
sub
in
dec
mov
sahf
and
lahf
inc
(bad)
stc
cmps
adc
cmp
xlat
adc
(bad)
sub
fs
xchg
movs
das
fisttp
call
xor
ret
call
sub
stos
xor
push
push
test
push
sub
jl
xchg
push
lea
add
or
sbb
(bad)
loope
inc
cld
bound
add
pop
hlt
inc
pop
ficom
add
jno
xchg
aas
ja
and
adc
ror
movs
test
pop
addr16
lods
mov
xchg
xor
and
retf
push
push
push
(bad)
mov
outs
adc
xchg
push
out
push
ds
ins
push
push
mov
lds
sbb
mov
inc
call
sub
mov
mov
sbb
jmp
pop
or
aaa
mov
ds
cmp
or
nop
mov
xchg
mov
or
test
ror
mov
cmc
icebp
mov
shl
fiadd
jno
xor
mov
push
xlat
push
add
xchg
cmp
push
pop
add
je
add
jg
addr16
push
dec
mov
(bad)
cmp
xchg
dec
mov
loopne
cdq
pop
ds
cmp
cdq
xchg
mov
ror
cdq
ss
retf
push
mov
aad
cwde
ret
pusha
inc
adc
ins
gs
push
movs
adc
pop
leave
loop
cmp
jmp
and
popa
shr
xchg
scas
jns
cmp
lock
xchg
fild
mov
pop
adc
mov
out
cmps
sub
dec
cmp
xchg
xor
xchg
in
scas
add
and
adc
popfw
enter
mov
imul
outs
xor
mov
(bad)
jne
ds
add
cdq
pop
arpl
aaa
mov
sbb
repnz
addr16
mov
inc
and
xor
mov
lea
fwait
mov
mov
fisttp
stos
xor
iret
mov
push
sub
adc
fadd
lds
aas
ins
les
xor
in
mov
mov
cmc
mov
les
imul
retf
rcl
xchg
mov
xchg
jns
icebp
xor
jecxz
cdq
sbb
das
push
pop
cmp
out
idiv
lahf
jbe
push
push
mov
out
in
shr
sar
lods
cmp
push
cmp
cs
add
mov
ror
xor
jne
imul
(bad)
dec
cmp
out
in
inc
dec
repnz
addr16
pop
adc
icebp
fcomp
cmp
add
out
ret
push
imul
or
sbb
mov
rol
dec
cmp
pop
in
shr
mov
stc
cmps
retf
fcom
mov
fcom
xor
sbb
adc
pop
xor
fcomp
daa
pop
stc
cmp
test
rol
cmp
pop
fwait
add
adc
data16
sbb
pop
or
cmps
or
test
fsubr
adc
pop
inc
lahf
inc
mov
mov
rcr
outs
mov
xor
mov
in
xor
test
push
or
and
fs
cdq
jp
sahf
mov
jnp
push
mov
cmc
sar
adc
sbb
xor
popf
cmp
rcr
jecxz
and
out
pop
jo
mov
cmps
jae
jg
add
adc
xor
push
inc
int3
ficom
ja
test
fwait
gs
push
inc
push
mov
daa
(bad)
aad
mov
lahf
xor
test
dec
into
mov
bound
xchg
pop
jg
pminsw
call
fcmovnb
pop
(bad)
ret
mov
push
mov
sbb
push
scas
xlat
xlat
(bad)
jbe
cli
jne
xchg
inc
inc
pusha
mov
dec
fadd
fbld
fdecstp
pop
std
or
and
clc
mov
bound
jge
fisub
addr16
data16
test
addr16
or
or
mov
sbb
add
loopne
fmulp
or
pop
out
sub
jnp
lahf
jge
rcl
sub
mov
pop
mov
mov
pop
mov
es
inc
jmp
iret
ficom
out
adc
push
add
adc
mov
imul
push
loopne
jae
jne
scas
mov
cld
push
adc
mov
cmc
test
fwait
test
in
jl
pop
lods
test
ret
mov
push
nop
(bad)
dec
std
mov
scas
nop
push
fcom
push
jge
push
repnz
outs
adc
lea
in
cmp
dec
sub
mov
loope
test
mov
shl
xchg
xor
stc
jno
pop
fcomp
leave
cmc
xor
xchg
push
mov
or
gs
fadd
mov
cmp
cmps
sbb
sbb
dec
stc
sbb
int
gs
mov
fisttp
test
adc
pop
(bad)
add
mov
cmp
inc
shl
jl
mov
lahf
cmps
jo
cmp
inc
xor
call
and
jge
inc
jmp
cmp
(bad)
cmp
mov
call
leave
call
std
(bad)
xchg
xchg
mov
pop
mov
arpl
aaa
lahf
cli
mov
jo
mov
inc
inc
fdiv
rcl
xchg
mov
fst
add
dec
imul
adc
clc
pusha
lods
xchg
pop
stc
adc
shl
and
jmp
mov
(bad)
lea
mov
(bad)
dec
xchg
dec
push
mov
inc
mov
outs
push
mov
cmp
inc
test
(bad)
repnz
in
sar
aaa
sahf
cmc
dec
pusha
push
inc
out
lods
rol
into
sbb
push
ins
or
or
push
std
pop
push
xchg
in
jns
test
mov
imul
leave
fist
ins
adc
inc
mov
outs
addr16
inc
mov
shr
sahf
(bad)
fidivr
pop
les
jp
(bad)
fsubp
sub
pop
and
mov
jae
cmp
sub
adc
sbb
stc
inc
out
cld
in
js
mov
mov
retf
xor
lds
push
push
les
mov
out
or
and
push
mul
xchg
fadd
push
xor
out
adc
dec
jb
cli
rcl
fistp
mov
inc
dec
jecxz
sti
test
push
sbb
mov
cs
scas
cs
pushf
bound
fnsetpm(287
fiadd
addr16
dec
stos
sbb
jno
icebp
pop
pop
and
in
lea
je
xchg
call
std
xchg
out
lods
das
push
aas
mov
lock
mov
mov
mov
clc
push
and
mov
inc
int
les
outs
js
push
rcr
sbb
xor
push
mov
pop
loopne
loope
cmp
call
mov
adc
xor
in
xchg
lds
mov
xchg
ja
dec
cmp
xor
aad
popf
std
out
(bad)
shl
loop
ins
popf
cmc
test
jecxz
inc
je
ror
out
scas
test
pop
repnz
in
mov
out
into
lds
push
xor
lds
push
mov
mov
imul
mov
sbb
dec
aam
pop
mov
(bad)
(bad)
call
dec
or
cmps
push
std
cld
stc
imul
mov
ja
fcomi
jle
mov
ins
shl
cwde
push
int3
js
outs
loop
pop
dec
pusha
and
pop
mov
in
out
sub
mov
xchg
xchg
xlat
adc
pop
gs
not
jnp
jle
repz
jmp
div
fidivr
shl
cmp
in
and
shr
push
cmc
dec
iret
push
sahf
dec
fidivr
retf
pop
data16
sub
mul
xor
and
mov
aaa
aaa
adc
mov
xchg
(bad)
jae
aam
enter
xor
mov
ss
pop
movs
popa
jo
mov
xchg
pop
call
or
std
cmp
(bad)
mov
dec
or
push
adc
hlt
fcom
repnz
sbb
(bad)
xchg
hlt
retf
pop
(bad)
out
xor
push
jl
neg
push
mov
int3
cmp
iret
stos
push
sub
pop
mov
das
add
addr16
cmps
ret
xor
and
scas
leave
adc
cld
mov
sahf
imul
aas
push
sbb
(bad)
aas
inc
fldcw
in
repz
sub
movs
pop
jbe
or
add
push
push
(bad)
stc
mov
mov
out
clc
push
inc
jmp
out
cmp
mov
stos
sub
or
push
mov
jne
mov
aaa
pop
mov
jp
jl
out
loop
lods
dec
cmc
sbb
cmps
xchg
daa
nop
dec
add
lahf
adc
dec
mov
jns
repz
lods
nop
lods
hlt
in
xchg
add
fwait
sbb
mov
or
cld
les
outs
(bad)
das
push
call
pop
push
jnp
(bad)
inc
pop
adc
jbe
and
sbb
push
jo
lds
iret
inc
mov
mov
xchg
push
sub
mov
pop
jmp
dec
cmc
pushf
shl
int
fistp
push
fnstsw
imul
add
mov
fidivr
das
(bad)
clc
idiv
dec
pop
inc
test
ja
inc
sbb
sti
sbb
add
rcr
out
enter
pop
lea
sbb
sahf
or
iret
or
ds
jg
xchg
sbb
or
jbe
xor
sar
retf
shl
xchg
inc
test
or
fistp
ja
push
sub
movs
jge
aam
retf
into
popf
stc
mov
adc
aad
movs
lea
jg
jmp
sbb
(bad)
mul
or
sbb
dec
mov
jge
push
xchg
(bad)
cld
outs
pop
mov
aas
cmps
mov
mov
test
jmp
ds
pushf
outs
adc
test
add
mov
add
mov
xlat
jno
push
scas
sbb
dec
push
dec
test
add
mov
iret
je
lods
icebp
push
adc
pop
xchg
int
mov
mov
iretw
shr
xor
xor
jl
int
jge
in
lea
int
mov
bound
or
dec
pop
mov
das
in
push
cmc
mov
lea
in
sbb
rcl
test
pop
push
neg
std
retf
bound
push
call
cmp
or
ret
push
mov
lods
dec
xor
aam
imul
pop
in
cmp
sub
popa
jg
ds
sbb
call
push
ret
sub
xor
sbb
sub
rcr
xchg
sahf
aad
not
adc
scas
scas
jns
pop
add
mov
and
mov
mov
fs
ficomp
pop
test
fcomp
pop
popf
pop
mov
adc
call
neg
ret
mov
sti
sub
pop
jecxz
cmp
sbb
cmc
and
ss
test
adc
mov
mov
mov
lods
int3
stos
sub
add
jnp
jge
into
cmp
out
out
aad
rcl
cmc
lods
push
gs
mov
inc
cmps
loope
std
pop
scas
test
pop
es
fldcw
jne
or
adc
xchg
jecxz
gs
(bad)
cmp
cwde
fwait
inc
adc
int
movs
addr16
arpl
jmp
retf
and
out
retfw
pop
pop
out
sub
into
pop
test
cmp
bound
mov
cmp
pop
dec
test
in
into
mov
pop
stc
and
gs
repz
or
push
push
shl
or
jge
xchg
mov
nop
mov
retf
jmp
rol
xchg
jp
popf
mov
push
xchg
fwait
add
sti
pop
fwait
mov
call
les
repz
jl
push
mov
mov
cmp
or
xchg
out
push
add
lds
aam
inc
jmp
mov
aas
aam
xacquire
test
push
fld
(bad)
gs
in
jnp
xchg
xor
adc
rcr
inc
push
push
push
pop
and
imul
mov
xor
add
xchg
push
jmp
mov
jmp
adc
dec
jb
xor
cmp
stos
hlt
daa
nop
push
or
sahf
cmps
stos
je
mov
jns
mov
mov
sbb
movs
(bad)
(bad)
jmp
push
mov
rol
jmp
jle
push
and
add
and
fild
dec
fsubr
mov
jne
push
cmp
adc
aaa
mov
add
jmp
push
icebp
xchg
adc
jnp
addr16
ror
test
and
mov
push
sub
adc
mov
push
arpl
jl
mov
add
aad
inc
popa
xchg
movs
popf
cmp
cwde
pop
(bad)
nop
into
iret
pop
js
ja
jp
es
fisub
jo
mov
out
and
xchg
test
jge
stos
inc
fild
and
cmps
jecxz
mov
adc
and
cld
xchg
dec
js
std
leave
push
xchg
xor
sbb
sbb
adc
push
stos
dec
sahf
repnz
mov
mov
(bad)
repz
sbb
mov
dec
js
xchg
(bad)
mov
pop
sahf
jl
mov
sahf
fsub
or
test
push
sbb
jb
sub
popf
dec
mov
mov
jae
dec
pop
ficomp
adc
repz
aam
mov
jp
xchg
jp
imul
sahf
or
ret
or
xor
add
pusha
outs
bound
mov
or
cmp
and
mov
sbb
in
pop
lea
iret
ja
jp
call
pop
fwait
mov
daa
adc
scas
aaa
push
or
stos
push
mov
pop
into
mov
cmc
xor
cmps
push
ja
stc
call
xor
dec
mov
adc
icebp
in
daa
adc
mov
and
mov
sub
inc
call
sbb
xchg
xor
jb
in
pop
add
sub
or
dec
mov
ret
test
jp
push
xchg
add
pop
stc
mov
add
sub
mov
mov
inc
adc
dec
dec
in
push
je
inc
pop
mov
xor
dec
jmp
or
xchg
(bad)
cmp
jmp
into
adc
jo
clc
mov
or
dec
lods
cwde
test
jns
sti
and
xchg
sbb
nop
mov
jnp
push
mov
adc
popf
pushf
push
aam
pop
push
xchg
inc
adc
sub
sub
lahf
out
test
stos
test
call
jmp
popa
pop
dec
xchg
out
jecxz
jle
and
popa
sar
inc
mov
add
loopne
inc
movs
xor
jbe
fiadd
xor
pop
lahf
jns
stos
sti
js
add
repz
jns
sti
aad
pop
add
mov
xor
mov
xor
cmp
dec
(bad)
loopne
sbb
push
popa
frstor
daa
cli
jb
ds
ficom
and
loope
sbb
mov
aam
jp
mov
inc
cli
mov
idiv
dec
fwait
outs
shr
jno
shl
push
dec
mov
inc
or
aam
push
enter
movs
mov
sbb
repnz
jnp
out
mov
mov
lock
jp
outs
repz
mov
jg
inc
sub
lods
call
sbb
jmp
outs
and
push
pushf
xor
xlat
push
cmc
mov
xor
inc
xor
test
mov
retf
loopne
sbb
cmc
popa
pop
and
cmc
pushf
aas
scas
das
mov
cmp
imul
sbb
clc
icebp
adc
jecxz
dec
inc
or
add
ins
mov
dec
retf
cmp
inc
scas
adc
arpl
dec
mov
or
test
dec
fimul
out
ja
loope
push
or
cmp
push
into
popa
aam
cmp
mov
lods
dec
out
shr
push
test
test
sbb
pusha
or
fist
dec
sbb
cmp
out
(bad)
movs
and
jmp
cmps
sbb
mov
xor
mov
and
pusha
ret
mov
jnp
repz
icebp
add
add
(bad)
adc
sub
or
push
ds
sbb
cmp
jb
imul
fisttp
mov
icebp
inc
add
push
push
sub
pushf
inc
and
xchg
mov
pushf
imul
loop
dec
aas
pop
jp
fcom
inc
xchg
loopne
das
pop
lahf
popf
xchg
lea
icebp
jno
jmp
loopne
pop
clc
retf
and
push
and
adc
and
in
cmp
cmps
cmp
lods
std
bound
les
cmp
jp
ins
inc
or
jmp
jns
or
in
push
dec
add
dec
mov
mov
aam
or
add
fcmovnu
bound
sar
(bad)
std
push
mov
sub
push
fiadd
sbb
outs
cmc
paddsw
sub
mov
sbb
loop
hlt
jae
pop
fnsetpm(287
push
loope
add
inc
jecxz
int3
sar
test
or
xor
sub
add
inc
mov
(bad)
movs
lods
or
mov
shr
cmp
pusha
ret
pmaddwd
(bad)
jno
dec
and
pop
push
es
out
jnp
adc
rol
xor
(bad)
movs
or
mov
adc
scas
pop
cld
mov
xchg
push
push
push
adc
or
and
cmps
rcr
cs
data16
pop
test
loop
out
push
int
pop
push
icebp
jecxz
shl
xchg
mov
fsub
cmp
repz
push
fnsave
(bad)
js
fisttp
data16
add
inc
and
scas
in
popa
mov
popf
or
test
retf
sbb
nop
adc
mov
xchg
mov
mov
adc
xor
iret
jae
test
arpl
(bad)
sub
push
ficomp
loopne
call
sbb
in
push
pop
mov
fwait
ss
retf
dec
xchg
imul
sbb
xlat
enter
sbb
xchg
aam
sbb
sbb
and
push
idiv
fs
push
out
or
rcl
cli
sahf
outs
mov
mov
and
xchg
test
push
and
ficomp
mov
fwait
sbb
or
clc
aas
inc
pop
jb
neg
hlt
mov
adc
jno
pop
rcl
cdq
ins
movs
push
shl
mov
popf
cdq
mov
cmp
xchg
fisttp
test
jge
push
sub
aam
rcr
fcom
jl
push
sub
js
fwait
call
or
sbb
test
leave
pop
div
dec
mov
add
mov
push
lock
jmp
stc
mov
ins
icebp
loope
xor
sub
pop
outs
adc
xchg
add
pop
mov
push
fdiv
push
das
jmp
sbb
out
dec
xor
cwde
sub
ret
pop
and
test
sbb
pop
inc
or
sub
cdq
cwde
and
(bad)
rol
adc
pop
jbe
repnz
xchg
(bad)
pusha
test
and
je
mul
jp
pop
outs
repnz
repz
xchg
inc
arpl
and
nop
pop
lea
test
imul
psllw
mov
mov
test
imul
movs
pop
jns
xchg
mov
sbb
fimul
mov
xor
idiv
cli
jle
test
daa
pop
and
adc
loopne
fcomi
push
mov
fdivr
hlt
adc
mov
inc
fnstsw
sub
lock
jnp
mov
ds
clc
add
(bad)
jae
cs
fild
pop
pusha
inc
loop
xor
push
stc
sbb
xchg
out
outs
add
jp
xor
adc
cmp
sbb
jecxz
addr16
cmc
mov
and
add
imul
jnp
cmp
sub
ins
(bad)
cli
xor
and
rol
push
stos
stos
ja
pop
mov
add
push
ret
(bad)
aad
mov
mov
jb
repnz
add
inc
mov
idiv
idiv
pop
and
scas
jne
movs
mov
ss
(bad)
or
fs
jnp
sub
or
push
out
fldcw
pusha
and
sar
call
addr16
pop
idiv
aas
xor
mov
call
mov
out
mov
pop
clc
test
repz
add
push
cld
jmp
jp
aas
loope
rcr
xchg
fwait
xchg
or
cdq
shr
jb
movs
pop
sub
inc
arpl
cmps
out
xor
xor
dec
rcl
jmp
mov
add
push
jnp
popa
jmp
jnp
mov
fnstsw
dec
shl
lods
inc
fnstenv
fcom
and
push
cwde
mov
and
fldcw
mov
pop
jle
or
push
mov
xor
pop
pop
inc
arpl
xchg
sahf
int
ret
outs
ret
or
lea
repnz
push
into
and
jmp
push
add
cdq
add
mov
pop
and
cmc
in
popa
gs
pop
scas
test
xchg
inc
mov
inc
and
arpl
xchg
gs
mov
push
xchg
outs
pop
mov
cmp
adc
mov
push
and
popf
adc
jno
aam
scas
jns
mov
scas
sbb
or
inc
out
dec
inc
adc
aad
cmp
inc
out
sbb
mov
sub
pop
stos
push
jp
push
(bad)
push
and
lea
xor
fiadd
sbb
mov
test
ja
sbb
shl
fdiv
stc
adc
(bad)
sti
push
clc
inc
cld
cdq
mov
(bad)
ds
test
sbb
add
outs
cmp
pop
repnz
jecxz
ror
gs
je
loopne
(bad)
jb
push
adc
mov
stc
cli
cmps
jecxz
movs
sub
inc
jl
std
pop
xor
or
lds
lahf
xchg
xor
bound
pop
gs
xchg
stc
in
xor
inc
sbb
stc
xor
outs
rcl
int
pop
retf
sub
jne
or
jle
bound
fsubr
xor
data16
stos
aas
jno
fimul
pop
sub
inc
(bad)
mov
cdq
sbb
jne
push
cmps
mov
sub
mov
ud2
mov
cli
hlt
adc
adc
cmps
js
adc
sbb
mov
mov
fucom
mov
cmp
pop
cmps
adc
popa
in
popa
ins
lods
mov
sub
lea
adc
aaa
or
adc
mov
ins
inc
xchg
rcr
jnp
inc
int
cdq
bound
dec
ffree
dec
pop
pop
jns
xchg
adc
mov
jmp
inc
out
sub
(bad)
loope
sub
push
mov
sub
dec
aam
sub
xor
(bad)
sbb
sbb
adc
out
jmp
jp
ins
test
aas
adc
outs
int
push
fnstcw
pop
imul
fist
pop
and
enter
pushf
dec
cmp
movs
fcmovb
or
rcl
jae
cmp
int3
fild
adc
call
xor
jb
mov
jle
sbb
mov
sub
sub
aam
jae
xor
pop
outs
mov
out
jl
push
stos
sbb
push
jg
out
cmp
add
pop
stc
or
test
jns
imul
fmul
mov
test
ja
in
mov
jns
pop
add
mov
cwde
inc
push
add
out
jo
(bad)
and
shl
ficomp
xchg
int3
sbb
push
(bad)
adc
pop
jmp
shl
jmp
sbb
call
movs
mov
sub
ins
push
jno
imul
dec
(bad)
jno
xchg
sub
add
dec
mov
mov
fstp
jmp
dec
aam
jae
jb
fadd
ja
aaa
cld
dec
push
dec
hlt
push
jns
sti
enter
or
jmp
adc
(bad)
rol
inc
xchg
ins
sub
(bad)
cmp
les
out
mov
scas
stos
out
enter
cs
hlt
jmp
mov
xchg
sbb
hlt
dec
push
pop
mov
dec
adc
and
popf
push
enter
xchg
pop
jns
cmp
jmp
mov
outs
in
add
mov
adc
adc
xchg
cmc
stc
out
mov
mov
or
xchg
mov
xchg
jle
and
sbb
in
into
dec
out
xor
xor
std
clc
sti
adc
stc
and
pop
push
fld
in
mov
mov
jno
(bad)
mov
mov
fcmovbe
ficom
and
pushf
outs
adc
test
mov
shl
jmp
ins
dec
push
push
or
sbb
mov
dec
sbb
test
in
sub
pop
xor
sub
add
xor
xchg
lock
jmp
dec
retf
ja
jbe
js
sub
cld
sbb
mov
call
sbb
fldcw
fstp
sbb
mov
arpl
into
adc
clc
shr
and
fidiv
jo
dec
in
xor
sub
add
adc
adc
bnd
lds
jno
or
sbb
ror
pop
movs
js
fs
push
call
je
push
jle
cmp
push
jns
xor
and
push
hlt
pusha
hlt
mov
scas
adc
popa
nop
pop
mov
cmp
push
mov
mov
jbe
pop
(bad)
call
data16
pop
imul
xor
add
enter
sub
sahf
out
mov
rcr
dec
(bad)
repnz
sbb
cwde
jmp
lods
adc
les
mov
les
and
and
push
or
sbb
cdq
not
or
int3
std
fnstenv
rcl
test
or
mov
xor
xor
adc
cmc
jmp
cmps
xor
das
push
retf
test
hlt
mov
cmc
shl
inc
dec
enter
std
pop
mov
push
pop
maskmovq
div
mov
cmp
jb
je
test
and
push
test
or
lods
inc
(bad)
jp
ret
jbe
fwait
inc
mov
fimul
jb
xor
rcr
xor
sub
or
jbe
call
(bad)
jle
sub
movq
mov
push
sbb
cmp
xor
sar
sbb
fsub
push
cmp
retf
xor
addr16
retf
sbb
xor
xor
lahf
aad
push
addr16
mov
cli
int
fdiv
jb
scas
mov
mov
(bad)
iret
sbb
jecxz
outs
mov
sub
and
xor
xor
out
inc
cmp
mov
pop
pop
gs
(bad)
jo
btr
cwde
mul
xor
ss
stos
xor
ins
mov
xor
mov
xlat
add
and
ret
mov
mov
out
retf
iret
jge
xchg
jge
cmp
dec
out
int
inc
pop
dec
sahf
fst
push
mov
and
pop
(bad)
inc
fdiv
cs
pop
jns
cld
pusha
dec
mov
mov
mov
sar
push
sub
pop
retf
xor
ja
push
xchg
lea
inc
inc
push
fwait
add
pop
scas
fild
add
aam
ret
cli
xor
aaa
daa
jnp
jge
mov
call
out
pop
and
add
popf
loop
js
int
xor
sbb
dec
jo
(bad)
aad
xchg
or
sbb
(bad)
std
sub
neg
loop
shl
xor
mov
fwait
jbe
mov
cmps
mov
mov
ret
and
and
test
gs
mov
rol
dec
adc
adc
out
enter
test
sbb
xlat
(bad)
push
mov
imul
add
inc
mov
push
lock
mov
rcr
test
out
push
movs
mov
inc
pop
sar
test
inc
sbb
in
gs
lds
jne
jmp
lods
and
cmp
dec
xchg
leave
mov
std
int
cs
sub
ficomp
cmps
mov
and
jmp
bound
(bad)
scas
call
bound
or
repz
int
arpl
movs
out
repz
mov
dec
(bad)
fwait
inc
pop
movs
pop
xchg
mov
push
mov
or
push
fxch
pop
lods
cmps
mov
mov
movs
xchg
je
enter
adc
sbb
mov
cwde
inc
jl
or
loope
hlt
fst
add
test
std
sub
xlat
xchg
mov
dec
push
test
sar
js
mov
add
mov
test
jns
sahf
xor
and
sub
xchg
mov
mov
outs
jmp
dec
loop
stc
fidivr
and
dec
push
jmp
push
aam
div
test
inc
mov
rol
mov
push
in
xor
mov
ins
aad
xor
jno
pop
cmps
in
lea
fninit
push
cmc
rol
shr
xchg
aaa
stos
cmp
rcr
jl
pop
push
dec
fld1
ds
dec
pushf
shl
sub
ins
push
cs
push
push
sub
jle
push
fs
xor
pop
sbb
add
add
adc
clc
add
pop
pop
aaa
call
xor
cld
div
sub
push
jb
sub
sub
fsub
jne
pop
scas
test
enter
test
ins
fbstp
daa
jg
mov
clc
fisubr
inc
cmp
les
jp
pop
adc
pop
bound
outs
inc
push
dec
jle
xchg
cmp
cmps
shrd
call
call
mov
cdq
sub
xor
fwait
sub
stc
in
pop
inc
(bad)
iret
xor
mov
scas
imul
or
lods
call
test
pusha
jo
lea
loope
push
jmp
and
jnp
jnp
cwde
test
push
mov
inc
and
retf
test
sub
push
mov
sbb
popa
or
pop
loop
pop
enter
push
xor
xor
jp
push
out
test
cmps
mov
push
xor
push
cwde
ret
jmp
int
adc
dec
imul
aam
dec
mov
sbb
cmps
cmp
mov
call
fstp
or
out
mov
out
(bad)
fwait
mov
fprem1
mov
pop
jno
push
and
inc
inc
sti
cmp
sti
neg
jne
mov
stos
xchg
sbb
dec
sbb
cmc
jne
clc
or
ins
hlt
mov
ror
or
xchg
mov
push
push
sub
ds
pop
fwait
push
int3
push
push
mov
ficomp
sub
pop
cmp
pop
add
cwde
cmps
stc
cmp
jns
outs
repnz
dec
test
ds
ins
(bad)
into
or
leave
mov
fidivr
aam
jns
mov
mov
mov
sbb
pop
cli
adc
sub
ins
mov
mov
cmps
popa
arpl
scas
mov
sub
jl
xchg
repnz
jno
inc
adc
adc
retf
dec
or
cmp
add
enter
test
cld
mov
adc
and
sahf
lock
outs
jge
xor
and
push
fsubr
loope
(bad)
sub
cs
out
sbb
adc
and
xchg
jae
clc
test
mov
das
mov
jg
dec
xchg
movs
inc
lods
in
mov
loope
cmps
ror
sbb
sub
mov
sub
xor
jmp
sbb
jno
pop
gs
xlat
bound
scas
sub
enter
dec
fwait
aam
sub
js
jle
sub
rcl
cmp
cmp
mov
jae
adc
mov
pop
push
push
cmp
retf
xchg
repnz
cmp
sub
hlt
gs
xor
gs
scas
popf
jmp
scas
ret
push
repnz
outs
imul
cwde
mov
xchg
in
pop
inc
pop
int
dec
push
inc
iret
sub
mov
lods
in
in
pop
arpl
in
pop
sbb
xchg
inc
into
inc
xchg
jp
daa
fbld
cmps
push
mov
repz
cmp
fimul
movs
sub
push
scas
fs
aas
scas
push
fcomi
mov
and
cs
retf
mov
dec
jae
inc
inc
cdq
mov
inc
xchg
sub
sub
jmp
in
push
stc
xor
(bad)
adc
into
out
fadd
mov
mov
cmp
hlt
mov
enter
xor
jae
imul
shr
ja
fistp
push
mov
cdq
(bad)
mov
stos
fiadd
mov
adc
inc
hlt
mov
push
mov
aad
and
pop
enter
cwde
(bad)
pop
xor
fisubr
in
xchg
sub
pop
imul
(bad)
out
add
add
das
xchg
xor
int3
adc
int3
int
add
cmp
enter
les
pusha
out
cmps
jmp
jp
imul
adc
xor
neg
mov
xchg
popf
pop
mov
inc
mov
sbb
out
or
mov
jmp
cmp
mov
mov
into
or
fstp
(bad)
xchg
push
sbb
jb
adc
nop
in
push
test
std
jp
push
cli
add
or
jbe
jns
add
lea
xchg
call
loop
mov
sbb
enter
add
push
cmp
mov
jb
pop
push
ins
stos
inc
fistp
push
sbb
xchg
mov
push
mov
cmp
mov
push
mov
shl
shl
lahf
repnz
cdq
lea
xor
push
cmp
loopne
and
mov
popa
cs
push
lea
loope
or
or
lods
mov
dec
jmp
xchg
and
sbb
jle
push
ficom
push
sbb
dec
jo
sti
jo
repnz
inc
adc
push
adc
hlt
dec
js
xchg
sub
shl
int
inc
fcomp
lds
sbb
mov
push
pop
(bad)
cmp
sbb
pop
rcr
popf
xlat
jb
and
es
lock
in
(bad)
call
out
xchg
mov
xchg
and
iret
enter
inc
sbb
and
enter
ficom
mov
or
(bad)
pop
(bad)
and
push
pusha
in
mov
pop
sbb
stos
inc
sbb
jae
dec
inc
pop
into
pushf
pop
iret
cmp
mov
in
add
inc
fdiv
or
aad
and
mov
dec
mov
pop
repz
mov
rcl
outs
push
mov
std
dec
dec
stos
mov
loop
aaa
mov
pop
or
int
shl
add
test
adc
push
mov
adc
adc
(bad)
fsin
cmp
mov
and
xchg
pop
imul
adc
adc
cwde
xchg
in
leave
jle
xchg
stc
xchg
adc
sbb
stos
xchg
(bad)
cmp
pushf
cmc
mov
mov
shr
push
fwait
pop
aad
cmps
and
inc
nop
add
call
ins
scas
pop
ror
mov
cmp
arpl
enter
mov
call
sbb
sbb
sub
xchg
mov
lds
mov
cmps
or
adc
cmps
movs
leave
addr16
call
dec
loope
inc
mov
in
bound
das
sub
push
add
lahf
xchg
dec
inc
add
xchg
and
pop
ss
xchg
pop
into
test
push
popa
iret
jne
pop
xchg
cld
jecxz
je
cdq
cmp
push
fist
mov
call
xor
stc
add
mov
shl
call
sbb
scas
mov
mov
daa
and
xchg
call
pop
pop
mov
loope
mov
inc
sbb
pop
(bad)
jae
xor
pop
dec
cmp
in
adc
and
aad
adc
push
ds
cmp
pop
jnp
sbb
mov
stos
xor
dec
inc
call
mov
cld
ret
imul
daa
std
scas
jbe
mov
jp
clc
pop
je
cmp
jecxz
inc
xor
in
dec
popa
outs
xlat
xor
or
dec
test
xchg
into
outs
xchg
in
mov
call
adc
sub
cli
sar
call
fs
fistp
iret
cmp
sbb
jb
lods
mov
sub
mov
push
mov
out
pop
push
test
(bad)
add
aad
outs
xchg
jo
inc
dec
inc
inc
sahf
call
mov
lds
or
pop
outs
or
(bad)
shl
sub
jle
xor
push
jle
call
or
nop
mov
xchg
into
adc
stos
ins
retf
add
add
and
pop
std
cld
cmovne
sbb
sbb
cli
push
mov
and
lods
fwait
jnp
ins
aas
lods
mov
jb
loopne
dec
jmp
mul
and
add
arpl
xor
cmp
aam
jb
lods
sbb
pop
pusha
jp
dec
dec
mov
mov
jno
mov
dec
addr16
dec
(bad)
jecxz
push
mov
out
xor
addr16
(bad)
mov
ret
dec
dec
adc
mov
inc
fist
xor
mov
dec
and
stos
bnd
test
add
push
mov
mov
mov
call
hlt
fadd
arpl
inc
pop
dec
sub
and
add
mov
cmp
dec
add
sub
ret
arpl
mov
popa
mov
test
adc
dec
int
pop
imul
sar
nop
xchg
add
jmp
add
arpl
in
sub
xor
test
xchg
in
jmp
inc
mov
cmc
jns
xor
xchg
inc
lods
xor
and
jle
test
add
xor
pop
mov
mov
pop
out
pop
mov
or
sub
addr16
add
mov
pushf
jl
push
loopne
jp
loop
cli
imul
jle
enter
xor
and
jg
xor
icebp
mov
icebp
xchg
push
lods
or
mov
mov
and
sti
out
xor
data16
add
jns
adc
retf
xor
inc
retf
in
loopne
adc
cwde
sbb
aad
cld
xchg
loop
or
adc
mov
sbb
pop
fstp
jae
popf
mov
iret
mov
cli
movs
dec
lahf
cs
hlt
fcom
ror
jne
call
ret
call
inc
sbb
popf
inc
out
outs
push
push
adc
rol
mov
adc
rcr
push
retf
out
ds
in
mov
jo
rcl
xor
sub
push
cli
xchg
sbb
out
or
inc
daa
pusha
adc
mov
mov
sahf
scas
dec
jne
dec
add
pop
dec
fdiv
and
mov
dec
inc
bound
in
mov
and
aas
aad
sbb
jecxz
add
popa
jae
retf
push
movs
xlat
mov
inc
xchg
mov
add
mov
jno
movs
or
mov
mov
imul
add
push
add
add
int3
mov
repnz
lods
mov
push
lods
icebp
stos
cmps
add
pop
scas
mov
pop
mov
(bad)
retf
fsub
sub
cmp
mov
pop
xchg
or
mov
cdq
sahf
mov
lahf
lea
sti
adc
inc
std
mov
cld
dec
mov
cdq
jae
and
inc
push
jnp
ror
sar
stos
inc
add
outs
add
jbe
pop
mov
cmp
outs
das
movntps
std
(bad)
imul
stos
push
push
add
js
into
push
mov
sub
push
jmp
sbb
stc
lods
push
cdq
mov
sahf
retf
(bad)
int
inc
retf
daa
fcomi
xchg
mov
jbe
div
push
add
pop
mov
lahf
adc
call
cmp
mov
loopne
mov
dec
sub
pop
call
imul
push
std
mov
clc
fwait
push
mov
out
and
push
test
dec
outs
xchg
xor
cmp
dec
imul
mov
popa
data16
scas
ins
push
dec
jb
scas
aam
cmps
xchg
dec
jecxz
iret
sub
out
lock
bnd
and
and
xchg
mov
fidiv
movs
hlt
dec
enter
lahf
push
xor
mov
sahf
lds
cwde
aaa
popa
push
sar
(bad)
xadd
cmc
dec
aad
pop
sub
cmp
lock
iret
dec
mov
adc
xor
inc
js
adc
test
dec
mov
movs
(bad)
loop
cmps
add
cmp
repnz
cmp
mov
mov
out
mov
dec
mov
pop
arpl
lds
push
mov
fmul
loopne
sbb
cld
xlat
fdiv
in
stc
je
pop
movs
adc
jo
ror
mov
sar
loopne
jae
mov
xor
push
inc
aam
out
call
lds
cmp
mov
sti
mov
fwait
ins
dec
scas
pop
cmc
outs
mov
loop
mov
nop
xor
fcomp
cld
int
data16
popa
xchg
mov
data16
pop
xchg
je
sub
aaa
addr16
stos
cmps
push
or
js
pushf
test
sahf
dec
xchg
outs
xchg
pop
mov
push
ja
push
cmps
jge
inc
pushf
fdivp
adc
(bad)
dec
mov
icebp
sub
add
or
adc
xchg
aam
idiv
mov
call
mov
mov
ret
cmps
stc
int3
in
and
scas
mov
pop
repnz
fldenv
popa
fldcw
add
pusha
sbb
lock
push
ins
jmp
retf
lea
mov
imul
fnstcw
adc
shr
aam
das
adc
pop
clc
fs
sub
add
fs
xchg
scas
jmp
and
and
imul
adc
rcr
(bad)
test
loope
push
test
xor
add
push
xchg
or
shr
mov
imul
mov
dec
xchg
adc
sbb
popf
xchg
(bad)
test
add
scas
inc
add
or
xchg
cdq
je
into
pop
leave
adc
retf
inc
arpl
inc
mov
out
repnz
aas
push
dec
pop
xchg
mov
daa
stc
and
addr16
ja
pop
mov
dec
xrelease
jbe
neg
sbb
jo
dec
push
adc
stos
xor
push
add
test
movs
fild
xor
(bad)
les
sub
mov
dec
test
sub
fist
movs
js
xchg
mov
push
fucomip
adc
repz
cmp
xchg
jp
or
mov
inc
or
sub
icebp
enter
loop
gs
cmc
xchg
icebp
jnp
xchg
loope
dec
add
mov
es
jp
jg
pop
push
pop
cli
int3
imul
sbb
mov
push
sub
pop
push
inc
cli
and
in
stc
push
out
in
xchg
(bad)
jbe
push
call
(bad)
test
nop
mov
cmp
cli
mov
jo
retf
and
not
dec
je
and
loope
push
xor
xor
data16
clc
mov
repnz
out
sub
push
stos
lods
int
xlat
xor
mov
ins
in
mov
test
and
and
cwde
and
add
inc
ss
cmp
xchg
js
xor
jbe
xchg
fs
outs
ins
sub
stos
adc
imul
pop
fs
jbe
xchg
into
cmp
into
xchg
sbb
cmps
pop
jp
sbb
inc
add
cwde
dec
in
jns
mov
or
add
mov
xor
jbe
lods
movs
call
retf
stos
add
sub
fbld
mov
cmp
mov
jle
cdq
jp
or
cmp
iret
loopne
test
inc
mov
pop
push
das
fistp
(bad)
xchg
ds
or
jmp
int
jge
and
cmp
xchg
sbb
dec
xor
push
dec
cmps
mov
aaa
fcomp
pop
xor
lods
into
mov
cmp
(bad)
sub
lods
shl
mov
iret
shr
sbb
mov
jmp
jmp
mov
shl
push
dec
pusha
ins
jp
(bad)
retf
retf
retf
push
sti
sbb
pop
or
out
jnp
mov
fldcw
data16
mov
fstp
jo
pop
into
mov
aam
pop
fidivr
shr
into
and
jbe
pop
cli
or
mov
leave
shr
stos
aam
and
loope
scas
dec
lods
imul
push
cmps
jmp
lahf
xor
dec
cdq
sahf
cli
movs
push
sub
aaa
mov
sub
sub
inc
popa
cli
cmps
pop
mov
pop
int
movs
xor
shl
xor
loop
inc
xchg
fcmovb
pop
dec
adc
mov
push
lds
lods
aas
cmps
ret
dec
mov
aaa
and
adc
push
neg
sbb
out
loopne
mov
mov
stos
cmp
(bad)
mov
fsincos
outs
in
add
push
and
cld
es
and
and
je
xchg
pop
jge
mov
fidiv
imul
sar
int3
adc
xchg
fdivr
sub
add
in
dec
pop
cdq
sbb
fld
shl
cs
sub
into
stc
mov
sbb
sub
or
cmps
je
in
xchg
outs
mov
pop
pop
mov
rcr
pop
xor
addr16
loope
je
xchg
add
sar
xor
adc
mov
outs
data16
js
mov
or
les
les
xchg
mov
rcr
sbb
xor
add
sbb
pusha
mov
sbb
rcl
in
push
mov
and
or
mov
pusha
jl
dec
pop
sbb
xor
aam
daa
shl
push
mov
cmp
jmp
sahf
in
mul
sbb
push
(bad)
jge
cli
mov
sub
stos
inc
sbb
mov
js
aad
movs
shl
test
test
into
sub
(bad)
loopne
cmp
add
lods
mov
push
dec
pop
iret
pop
dec
movs
xchg
mov
ffreep
inc
inc
push
inc
inc
out
adc
das
adc
add
jecxz
ret
mov
adc
ins
sub
out
fadd
sahf
stos
xchg
mov
fidivr
int3
fcom
imul
jae
sub
or
push
jecxz
sub
push
(bad)
int3
push
and
cs
sbb
daa
arpl
and
xchg
sahf
dec
pop
jecxz
jnp
int3
dec
mov
loope
pop
int
(bad)
retf
je
out
dec
dec
ins
sbb
int
mov
push
xchg
lahf
es
pop
enter
pop
test
add
push
jg
jmp
cmp
jns
dec
retf
fld
aad
in
mov
adc
shr
push
loope
adc
movs
inc
jbe
dec
inc
outs
aaa
push
dec
popa
jecxz
fild
push
inc
push
xchg
adc
repnz
cmc
jmp
jno
int3
mov
(bad)
movs
imul
xor
cmp
test
and
sub
movs
mov
mov
ins
push
inc
dec
mov
inc
jmp
into
xchg
(bad)
push
mov
xor
dec
xlat
fwait
pop
xchg
xchg
pusha
ins
sbb
push
mov
int3
fild
sbb
mov
sub
cmp
or
mov
aam
int3
outs
xor
ret
mov
sbb
pop
xlat
push
neg
call
(bad)
cmp
and
cmp
loope
mov
mov
adc
sbb
hlt
sub
mov
cs
pushf
(bad)
sti
xchg
clc
rep
arpl
add
out
sbb
dec
pop
(bad)
pop
stos
sub
(bad)
cli
or
test
xlat
scas
push
dec
in
dec
sti
repz
dec
sub
cli
jae
and
gs
add
call
adc
pop
and
mov
cmovne
inc
inc
call
xchg
mov
pop
and
fsub
rcl
les
xchg
aaa
adc
shl
mov
ror
push
jle
(bad)
mov
jmp
imul
(bad)
fldcw
ss
in
loopne
shl
push
xor
mov
jbe
lock
aaa
dec
ret
pop
xchg
jbe
mov
iret
jmp
mov
mov
push
xchg
aam
fst
in
inc
xor
(bad)
xor
dec
push
mov
jo
scas
loop
xchg
repnz
pop
dec
addr16
popf
jne
imul
xor
scas
pop
mov
mov
adc
cdq
jp
mov
(bad)
push
loopne
inc
mov
das
push
inc
lahf
push
int
popw
push
or
out
mov
xchg
add
and
je
inc
repnz
jo
neg
movs
push
addr16
lods
jae
leave
sbb
mov
adc
pop
clc
push
cs
cwde
call
ret
xor
xchg
cmp
sub
cli
sub
or
pop
xchg
push
pusha
jmp
rcr
cmps
int
ins
out
dec
pop
pop
adc
pusha
adc
retf
adc
mov
push
mov
jnp
rol
rol
xchg
or
jno
or
and
mul
sbb
test
cdq
push
adc
stos
mov
rcl
les
inc
sub
movs
adc
push
pop
stos
adc
pop
pop
or
jp
or
test
sub
ins
cmc
scas
xor
or
int
sbb
ret
test
add
arpl
dec
inc
popf
mov
pop
pop
jl
and
imul
sbb
mov
imul
lock
outs
out
dec
fbstp
cdq
cwde
je
fwait
test
dec
aam
daa
cmp
leave
lea
or
pop
cli
mov
xchg
and
or
xor
push
sti
das
fild
cmp
cld
cmp
cmps
repz
adc
loope
adc
fisub
sub
ret
gs
push
out
cmp
fs
pop
sub
popf
(bad)
leave
cwde
sar
sti
nop
add
mov
push
cmc
mov
jmp
or
cli
fucom
pop
pusha
sbb
or
mov
dec
mov
dec
adc
in
scas
popa
mov
aad
cmp
adc
pop
sti
popf
outs
xchg
and
pop
mov
or
mov
dec
pop
jmp
adc
lock
(bad)
repnz
push
mov
and
stc
or
pusha
or
dec
jg
cmp
jbe
sbb
lock
rcl
mov
xor
retf
push
cld
jmp
(bad)
leave
fstp
inc
test
mov
jge
jb
ret
mov
dec
iret
push
test
call
xor
loope
outs
nop
add
push
ret
mov
xchg
fwait
inc
(bad)
mov
icebp
and
push
sbb
sar
pop
or
sub
scas
loope
(bad)
mov
and
imul
shr
mov
nop
pop
movs
out
jmp
ror
jnp
pop
push
fmul
xor
pop
jg
mov
es
out
ins
inc
mov
xor
mov
push
int3
xchg
test
mov
or
sbb
dec
xchg
dec
cmps
xchg
push
lahf
ins
and
mov
inc
mov
in
stc
jb
or
sub
in
arpl
outs
cmc
push
aaa
sub
stos
rol
lock
inc
mov
shl
(bad)
ds
sbb
fstp
nop
inc
or
cld
ins
xor
adc
xlat
shl
out
movs
dec
call
mov
call
aas
in
nop
sub
jo
jb
shl
hlt
mov
cmp
fisttp
sahf
les
and
(bad)
frstor
add
cmps
js
sbb
mov
and
adc
inc
repz
mov
hlt
push
out
and
sub
dec
ret
mov
xor
mov
fcmovne
sub
jle
retf
stos
sbb
stc
inc
popa
and
jne
mov
loop
(bad)
and
or
and
jl
dec
rcr
mov
and
jg
neg
stos
or
push
stos
pop
lods
cmp
sahf
add
mov
mov
inc
sbb
cmps
mov
test
and
sub
pushf
int
ja
sbb
aad
sub
add
mov
call
jne
outs
stc
mov
cmp
cld
call
nop
sub
lahf
int3
fsub
sahf
fnstenv
fwait
cwde
dec
sbb
fidiv
out
test
add
lahf
pop
cmps
inc
test
repnz
cmps
push
cmc
stos
and
inc
adc
pop
pop
push
in
lahf
mov
sar
or
xor
in
(bad)
jle
mov
xchg
test
adc
push
or
icebp
sbb
pop
xchg
xor
loop
fadd
mov
mul
mov
dec
shl
inc
out
mov
xchg
sbb
movs
add
scas
jg
(bad)
lods
cmp
or
push
dec
dec
popf
dec
nop
clc
stos
mov
mov
imul
or
(bad)
fisub
add
pop
mov
in
dec
test
inc
fidivr
stos
retf
xor
sub
repz
add
retf
frstor
jbe
and
adc
in
lods
xor
das
rcr
arpl
(bad)
retf
loope
iret
cmp
sub
sbb
int
sar
sub
jbe
inc
pop
xchg
lods
cmp
test
movs
enter
jnp
or
mov
dec
mov
dec
inc
ret
mov
dec
mov
sub
cmp
sbb
fistp
int3
mov
es
mov
repnz
push
adc
call
cmp
pop
sbb
jmp
or
loopne
xchg
xchg
dec
jb
or
cmp
push
inc
jmp
outs
sbb
addr16
fs
push
push
push
xlat
xchg
ror
(bad)
cmp
xor
adc
cmp
pop
out
mov
mov
xchg
mov
add
push
or
aas
or
jmp
scas
jbe
out
push
pushw
lods
ret
out
mov
sub
ja
mov
push
pop
cmp
or
lods
push
pop
out
xlat
and
sub
pop
imul
xchg
scas
adc
sbb
xchg
mov
dec
cmp
jecxz
icebp
cmc
push
push
xchg
mov
xor
ins
adc
mov
mov
stos
push
push
mov
(bad)
push
xor
adc
aas
sbb
dec
inc
and
aas
cmp
pop
adc
mov
push
pop
leave
pop
add
ds
mov
outs
js
data16
pop
sub
pop
dec
xchg
rol
in
shr
ret
movs
push
retf
xchg
ficom
ss
mov
jg
mov
mov
(bad)
xor
arpl
inc
test
jl
inc
sub
jbe
in
neg
dec
jbe
lea
add
scas
sbb
cdq
inc
out
ds
cmp
ds
dec
push
movs
loope
mov
mov
sahf
jmp
xchg
jns
shl
push
sahf
pop
mov
sbb
aas
idiv
xchg
and
mov
lods
sti
mov
lock
push
add
scas
mov
aas
adc
pop
test
outs
bound
pop
outs
aaa
xor
sbb
scas
out
and
fcomi
ins
sbb
pop
cmps
inc
mov
mov
test
repnz
into
out
jmp
shl
aaa
push
repz
and
mov
cmps
mov
outs
aad
(bad)
outs
lods
mov
loope
sahf
cld
ror
or
sub
inc
adc
xchg
fwait
and
add
int
xchg
daa
jnp
mov
sub
sub
xchg
sub
pushf
sbb
lds
outs
xchg
retf
xor
xchg
mov
mov
mul
cmp
jbe
ret
(bad)
movs
mov
push
pop
adc
test
and
stos
ins
sbb
or
dec
and
shr
push
loopne
inc
test
add
iret
(bad)
sub
hlt
cmp
add
jb
jae
retf
popf
push
and
inc
ss
pop
iret
sbb
scas
adc
xor
mov
call
push
stc
sub
add
push
div
add
mov
std
cmp
shl
in
gs
xchg
add
mov
mov
adc
loop
mov
sbb
movs
pop
retf
and
cs
in
inc
ins
or
pop
stos
push
iret
ins
hlt
cmp
cld
sbb
clc
jne
mov
xchg
popf
sub
imul
sbb
sub
in
pop
add
xchg
fs
mov
data16
sbb
or
les
xchg
add
sub
sbb
adc
mov
jae
xchg
retf
and
cmps
dec
popf
push
(bad)
pop
or
mov
jge
pop
ja
jle
lock
les
adc
and
or
push
lods
sub
ins
sti
imul
aaa
shl
sar
push
mov
fistp
add
inc
(bad)
cs
je
xchg
mov
es
pop
out
stc
stos
sbb
mov
or
xlat
fs
jmp
loop
nop
pop
mov
pop
jmp
inc
dec
retf
jae
fwait
std
add
retf
sbb
dec
push
push
aam
adc
(bad)
test
ret
(bad)
js
inc
fld
not
push
cmc
mov
cmp
mov
pop
addr16
and
into
adc
or
sbb
fisub
int3
lods
cmp
jmp
sub
cmp
push
xchg
add
retf
cmc
inc
mov
fnstenv
(bad)
or
ja
adc
xor
fnstenv
push
jbe
cmp
pop
dec
add
or
mov
mov
je
xor
rcl
ins
ret
push
test
repz
retf
mov
(bad)
in
pop
cmp
xchg
leave
sbb
aam
sbb
mov
hlt
shr
xor
xor
loope
retf
cli
add
pop
sub
bound
xor
xchg
mov
fs
and
js
jb
imul
pop
rcl
mov
retf
into
fcom
pop
xor
add
push
test
(bad)
lahf
pushf
and
lods
jb
repnz
rol
sbb
jo
xor
push
fisttp
xor
lea
sbb
pushf
inc
outs
jmp
jns
gs
inc
jnp
xor
pop
push
(bad)
ret
push
xor
std
in
sub
ror
retf
shr
xchg
add
fimul
scas
mov
sbb
in
stc
imul
les
adc
repnz
mov
or
es
xor
retf
repz
mov
loopne
mov
add
arpl
pop
mov
les
frstor
jne
jmp
mov
icebp
mov
push
jb
in
add
mov
jecxz
xchg
jmp
inc
mov
adc
das
stos
mov
add
mov
ins
lahf
inc
cs
xchg
sbb
jne
push
pop
mov
adc
and
xchg
arpl
icebp
jmp
push
test
sub
das
xor
jle
shl
cmps
rol
add
xor
or
rcr
jns
hlt
push
(bad)
xlat
add
sbb
lds
xlat
cmp
add
pop
in
in
adc
xor
pop
xor
imul
rcr
rcl
mov
xor
mov
cmps
inc
add
(bad)
ret
mov
mov
fs
push
ins
jno
loope
or
stos
cdq
push
es
clc
and
jne
or
and
sub
or
push
pop
mov
pop
sub
call
adc
fdivr
add
or
and
mov
call
addr16
push
sbb
mov
add
xor
loope
mov
jae
rcr
popf
icebp
out
lods
dec
or
dec
dec
mov
stc
inc
pushf
fdivr
or
test
xchg
mov
shl
aam
push
shr
mov
in
dec
bound
std
mov
retf
push
sbb
aad
ja
add
push
cmps
hlt
test
mov
pop
mov
and
retf
push
movs
sub
jle
pop
mov
shl
jae
xor
xor
dec
sbb
mov
stos
sbb
mov
daa
loop
jb
in
push
mov
fbstp
pusha
sbb
setno
inc
gs
xor
mov
dec
call
jne
mov
add
cmp
jmp
dec
xchg
mov
dec
dec
jb
je
jl
mov
call
mov
aad
jno
popa
rcl
scas
or
mov
and
mov
es
push
dec
mov
data16
loopne
in
sub
mov
sub
in
fiadd
ja
jmp
cmp
inc
(bad)
and
push
jae
shr
cmps
inc
in
add
inc
jns
or
stos
fnsave
dec
cmc
dec
pop
push
mov
fisttp
out
aad
in
xchg
enter
(bad)
cmp
cmp
test
test
pop
cmc
lock
(bad)
lods
push
xchg
into
retf
cli
pop
pop
jns
arpl
jb
movs
icebp
or
std
mov
retf
add
daa
call
mov
shl
js
outs
outs
movs
and
push
xor
(bad)
stc
cdq
jo
adc
sub
xor
aam
or
arpl
ss
dec
and
in
mov
fmul
aam
pop
mov
aas
pop
lods
into
jnp
xchg
jmp
call
addr16
das
call
lods
fstp
sbb
call
add
mov
xor
adc
leave
push
cmp
fidiv
pop
in
mov
int
push
iret
adc
cmp
and
jp
and
sub
movs
xor
jmp
icebp
sbb
dec
pushf
dec
inc
(bad)
ret
aad
adc
iret
mov
jg
aas
mov
das
mov
bound
nop
lods
fsin
test
and
fnstsw
fbld
js
daa
adc
xchg
(bad)
ds
arpl
aas
dec
fbld
and
fs
sub
dec
jge
mov
push
and
ja
aad
js
inc
movs
xchg
adc
and
inc
jnp
ins
dec
add
pop
jmp
jb
mov
or
sbb
jo
int3
retf
dec
call
inc
sbb
sub
add
mov
xchg
inc
cmp
loope
stc
dec
mov
inc
movs
lds
mov
(bad)
rcl
and
lahf
jae
(bad)
jp
or
push
add
and
repz
iret
mov
rcl
pop
mov
xchg
sbb
xchg
dec
call
loop
nop
in
push
inc
mov
jle
lods
in
and
inc
inc
out
xlat
push
out
loopne
or
mov
sbb
sub
aas
stos
shr
push
rcl
and
cmp
out
fstp
mov
adc
push
das
mov
rcl
bound
div
sub
pusha
or
mov
ret
sbb
mov
jmp
pop
in
imul
jl
test
iret
outs
mov
adc
mov
or
out
mov
into
ficom
pop
(bad)
dec
cmp
jne
pop
xchg
(bad)
jmp
lahf
xor
adc
add
add
rcl
xchg
mov
(bad)
retf
ror
inc
mov
imul
xlat
addr16
in
into
jns
and
loopne
xlat
fld
aaa
adc
mov
js
and
pop
mov
test
int
rcr
jb
idiv
xchg
push
xchg
sub
cmp
jne
jmp
mov
aaa
inc
dec
mul
push
retf
or
jge
dec
inc
inc
ret
jnp
inc
xchg
inc
int3
mov
sbb
pusha
mov
bnd
int3
imul
cmps
repz
fbld
push
out
add
in
mov
and
retf
loope
ja
std
(bad)
(bad)
rcl
inc
and
out
cmps
mov
dec
jecxz
xor
clc
test
cmp
mov
fwait
in
lods
mov
lds
int
lock
lds
out
cs
jmp
push
adc
repz
call
push
cli
int3
ds
pop
cld
outs
push
lods
repz
jp
inc
test
mov
out
imul
lock
cmp
sub
xchg
out
push
scas
ret
jae
pop
mov
push
jb
mov
push
pushf
cmps
mov
int
into
sbb
push
out
xchg
imul
inc
jmp
xchg
cmps
push
xchg
adc
ror
and
out
call
or
xor
pop
das
rcr
(bad)
dec
xor
mov
(bad)
pop
in
data16
pushf
mov
pusha
mov
xor
aaa
xor
mov
push
ja
fcomp
in
jbe
pop
adc
pop
lods
pop
nop
add
out
push
cmps
or
jge
xchg
popa
call
mov
test
dec
and
mov
mov
sub
fstp
faddp
inc
inc
mov
loop
adc
test
sub
movs
repnz
fld
es
mov
pop
int3
inc
(bad)
fstp
add
and
aaa
sti
dec
xor
or
jae
repnz
xchg
int3
clc
push
jp
scas
jo
or
movs
jge
cmp
sahf
inc
pop
mov
mov
add
lods
and
sahf
sbb
retf
fsub
inc
jo
(bad)
(bad)
aam
ror
cmp
test
icebp
and
pop
sub
arpl
mov
pop
fs
int
ja
jbe
inc
cmp
cwde
mov
int3
pop
daa
in
addr16
dec
popf
inc
movs
loope
add
mov
and
es
jbe
add
mov
mov
jmp
xchg
jecxz
inc
mov
in
fidiv
sbb
sbb
sbb
and
lahf
repnz
cmp
inc
sahf
dec
dec
mov
ret
dec
enter
mov
and
pop
stc
mov
call
mov
ret
pcmpgtd
push
scas
into
or
cmp
cdq
cmc
mov
jns
xchg
mov
scas
xchg
pop
stc
sub
xor
sbb
push
adc
retf
xchg
fwait
jnp
inc
sti
add
ret
hlt
(bad)
(bad)
je
pushf
jmp
ins
push
sahf
shl
jae
jge
inc
jl
test
jecxz
cmp
dec
sub
adc
cmp
or
xchg
pop
call
dec
xchg
xor
imul
jl
jmp
setae
mov
dec
add
popa
xchg
and
std
imul
icebp
xor
call
inc
bound
lods
nop
sbb
dec
dec
or
aad
mov
cmp
mov
mov
push
adc
mov
xchg
xor
sub
push
sub
out
ins
inc
test
jmp
xchg
sbb
cmps
mov
iret
lock
int3
js
aad
or
cmps
mov
lods
dec
pop
icebp
sahf
cmp
push
pop
jbe
adc
mov
xchg
push
dec
ret
and
(bad)
mov
outs
sub
sbb
pushf
and
push
in
mov
popa
mov
jmp
mov
(bad)
mov
jnp
sbb
adc
int3
xchg
jl
xchg
dec
and
cmps
icebp
or
pop
xchg
arpl
cmp
call
cwde
pop
inc
push
in
and
xor
mov
push
mov
sbb
lods
lods
bound
movs
mov
dec
sahf
out
int
fwait
aas
mov
mov
jae
pop
add
cmp
les
cmps
add
(bad)
inc
mov
mov
push
aad
imul
add
arpl
xor
nop
xlat
js
inc
mov
test
and
add
cmp
retf
out
cld
pop
jmp
mov
add
lods
and
dec
retf
mov
stos
cmp
cmp
sub
jnp
stc
inc
dec
cwde
sub
mov
sub
imul
inc
sub
add
mov
in
cmp
xchg
fs
adc
repz
pusha
cld
dec
mov
rcr
mov
lods
push
adc
out
push
ss
xor
cmp
xadd
dec
push
xchg
push
popf
mov
push
out
add
frstor
xchg
mov
ss
mov
pop
mov
fs
out
or
(bad)
fwait
dec
stc
call
mov
int3
jae
ins
or
and
inc
xchg
fcom
daa
movs
ja
addr16
scas
test
or
lods
and
rcr
loopne
inc
lods
lock
dec
jmp
sbb
in
shr
sub
hlt
push
ror
cmps
mov
pop
int
xchg
mov
sub
xchg
mov
enter
xchg
lea
adc
rol
sub
mov
push
jmp
test
sbb
push
outs
cmp
in
aad
xor
pop
(bad)
push
outs
cwde
test
popf
cdq
push
sti
push
jmp
dec
jmp
add
outs
xor
aam
shl
cmp
or
or
push
dec
mov
sub
and
popf
push
test
ret
xchg
or
aaa
pop
push
push
dec
(bad)
cs
xchg
into
fidiv
mov
dec
ss
aas
cld
xchg
or
jnp
xchg
dec
jmp
neg
lds
outs
daa
fsubr
mov
outs
in
(bad)
jle
mov
lea
dec
push
in
mov
movs
push
and
sub
dec
test
xor
mov
out
aaa
mov
xchg
dec
dec
jle
xchg
mov
gs
sub
lea
jnp
fwait
sbb
nop
sbb
dec
sbb
ret
xchg
inc
movsx
mov
adc
les
aam
or
aad
repz
scas
fwait
cmp
jl
lahf
sti
mov
jns
xchg
jbe
and
sub
sub
push
mov
adc
stos
mov
hlt
mov
frstor
push
push
or
ins
mov
or
ret
dec
and
or
aas
lea
push
or
daa
cmp
stos
jmp
and
sbb
and
ss
mov
sbb
add
fdiv
test
push
aam
adc
ja
jl
fldenv
aaa
fbstp
or
mov
(bad)
adc
int3
pop
ret
(bad)
pop
mov
xchg
jmp
mov
rol
hlt
dec
dec
mov
mov
iret
clc
adc
aas
es
mov
xchg
or
jns
pop
mov
pop
outs
stos
mov
or
push
xchg
inc
pushf
stos
push
xor
in
sbb
pushf
cmc
aas
cmp
outs
rcr
sub
cmc
icebp
test
outs
sub
out
pop
mov
aam
adc
push
sub
pop
mov
or
je
sbb
fcmovnbe
add
(bad)
dec
out
aaa
outs
mov
push
sahf
and
add
pop
out
stos
imul
and
add
rcl
jecxz
sbb
das
je
mov
push
popa
sbb
fcomi
out
adc
fnsave
in
add
jne
(bad)
(bad)
not
test
mov
enter
leave
popa
unpcklps
ins
stos
cmps
iret
ror
pop
mov
bound
test
int
adc
adc
adc
(bad)
mov
inc
inc
sbb
ja
push
gs
push
out
and
push
cld
push
movs
fisubr
(bad)
mov
mov
imul
jo
mov
jge
push
psllw
sti
and
or
popa
inc
dec
rol
push
jle
xor
xchg
dec
jne
lahf
or
mov
xor
outs
out
loope
push
imul
xor
cmps
mov
jmp
push
int3
add
xchg
jnp
adc
add
jmp
push
push
mov
test
inc
je
dec
mov
call
push
cmps
cmp
mov
outs
jle
jg
mov
fcmovnbe
sub
pusha
jb
inc
cmp
fdiv
(bad)
cld
shr
aaa
pop
xor
dec
mov
adc
ins
in
and
adc
aam
(bad)
push
movs
xor
adc
push
pop
(bad)
(bad)
inc
js
pushf
(bad)
push
adc
jb
inc
adc
mov
outs
cli
mov
popa
push
outs
add
mov
jns
inc
shl
pop
fnstenv
mov
sub
pop
lods
xchg
sbb
lea
xchg
mov
test
push
xchg
ins
adc
(bad)
aam
pop
inc
mov
jb
inc
inc
jmp
pop
rol
xor
add
call
fild
ja
mov
jecxz
dec
pop
div
in
jbe
push
and
pop
or
push
inc
sbb
adc
fdiv
inc
jne
xchg
pop
adc
stos
mov
inc
popf
pusha
and
push
cdq
(bad)
xchg
adc
inc
add
pop
pop
push
outs
xchg
mov
xchg
sbb
adc
stos
test
and
push
loopne
inc
mov
rol
sub
mov
add
xor
mov
add
fstp
stc
leave
sub
mov
jb
or
or
sbb
and
fbstp
cmp
retf
das
rcr
push
dec
shr
fwait
es
cmp
inc
sub
jne
retf
sub
je
jecxz
mov
ja
outs
jnp
imul
(bad)
fimul
jle
cdq
push
imul
iret
pop
pop
(bad)
dec
xchg
pop
out
push
aad
adc
icebp
(bad)
jb
inc
mov
pop
or
pop
ficomp
sbb
add
push
(bad)
mov
repz
ror
sbb
jbe
je
lock
gs
data16
sbb
jle
xchg
inc
or
lods
rol
enter
je
push
fst
mov
clc
xor
inc
jae
inc
adc
int
retf
push
fdiv
retf
stos
in
dec
int
inc
out
mov
inc
(bad)
lds
ss
scas
push
nop
inc
or
jmp
test
into
xchg
(bad)
je
jno
cmp
push
mov
cwde
cmp
in
pop
mov
xchg
inc
sub
aad
jg
(bad)
outs
aaa
pop
sub
jecxz
test
bound
scas
inc
and
mov
aam
xchg
push
xchg
inc
lahf
pop
sbb
push
rcl
fwait
push
adc
enter
jmp
imul
jmp
movs
cld
mov
pop
or
pop
cmp
and
or
ret
mov
nop
stc
invd
mov
out
jns
or
cmc
lea
nop
lods
and
loope
mov
in
aas
cmp
aam
dec
inc
leave
sbb
enter
cmp
call
mov
mul
cdq
and
xchg
cmp
cdq
sar
fs
push
(bad)
mov
test
push
ret
outs
fmul
pop
sub
mov
xor
ins
loopne
fst
les
jno
dec
movs
mov
adc
dec
xchg
cli
pop
jle
cmps
fiadd
mov
or
push
xchg
lods
jge
pop
sbb
jecxz
push
push
jnp
int
cmp
push
dec
or
setb
or
test
int
call
out
(bad)
mov
jmp
adc
fwait
or
mov
inc
push
mov
mov
xor
xchg
dec
xor
add
xchg
jne
push
sar
jbe
inc
push
fist
scas
ja
add
push
addr16
repz
lods
sbb
xlat
sbb
pop
mov
xchg
add
jno
mov
mov
cmp
mov
cmps
ins
and
push
mov
fimul
adc
rcl
dec
pop
jns
inc
outs
stc
mov
dec
xchg
add
xor
or
cld
stos
jno
fisub
or
out
dec
or
dec
int
mov
mov
sti
jl
lock
mov
cld
(bad)
loope
cli
mov
lock
pop
in
cmc
std
mov
mov
cmps
in
shl
push
outs
xchg
(bad)
xlat
mov
arpl
es
jecxz
xor
scas
shrd
arpl
adc
inc
shl
inc
icebp
stos
das
movs
sbb
sbb
pop
mov
fild
sub
fadd
sub
sahf
arpl
fld
and
push
hlt
sahf
cmc
sub
mov
mov
iret
test
jbe
xor
rcpps
rcl
push
ret
sahf
add
in
push
dec
out
fwait
sub
xchg
loope
je
test
fld
mov
stos
inc
push
(bad)
adc
jne
test
outs
lods
or
int3
cs
mov
sub
(bad)
sub
xor
cmc
les
mov
aam
xchg
mov
arpl
int3
test
push
lock
fcomp
mov
and
pop
leave
shl
mov
aaa
mov
ja
mov
lock
add
mov
stos
push
mov
ins
nop
test
mov
imul
js
ror
sbb
aas
rcl
enter
aam
push
jo
push
cmps
push
cmc
aas
loope
arpl
mov
sub
mov
adc
inc
hlt
xchg
ja
hlt
je
and
xor
pop
mov
pop
call
into
mov
aaa
movs
jbe
ret
sbb
pop
adc
ret
sub
mov
out
popa
nop
and
xchg
xchg
rol
jnp
test
adc
fs
call
or
bound
pop
mov
addr16
jge
jg
push
je
mov
mov
xlat
dec
shl
and
mov
mov
jo
lea
ds
add
jnp
jno
mov
out
cmp
int
cmps
les
xchg
mov
stc
ret
adc
jp
pusha
push
sti
shl
xchg
mov
into
aaa
jne
jp
outs
inc
mov
fldcw
and
inc
push
cs
in
inc
mov
lods
dec
inc
jae
sub
call
jne
aam
xchg
xchg
repnz
pop
cmc
retf
fucomip
iret
or
jmp
mov
dec
retf
es
pop
clc
dec
cli
jl
jecxz
inc
ins
jnp
inc
jnp
xchg
xor
add
or
dec
jl
jns
das
mov
sub
inc
add
cmp
shl
adc
ins
or
cdq
push
cld
(bad)
and
xchg
pop
int3
sbb
and
or
ins
inc
or
cs
add
(bad)
enter
std
(bad)
cmp
sbb
add
sub
and
add
imul
mov
add
jb
dec
sub
and
pop
arpl
push
mov
pop
jmp
pop
inc
push
cmp
aam
clc
(bad)
icebp
daa
jne
cmp
into
xchg
jge
xor
es
int
les
sbb
fldcw
lods
sbb
addr16
mov
push
je
ins
retf
sub
retf
xor
in
push
(bad)
sti
jmp
jecxz
add
lea
fs
daa
mov
scas
mov
scas
mov
data16
xor
fs
data16
out
dec
xchg
sub
xchg
and
fsubr
ds
mov
test
jp
mov
scas
fs
lds
(bad)
pushf
push
dec
pushf
fdiv
pusha
repnz
ja
data16
add
and
cmp
mov
jmp
mov
push
iret
mov
or
xor
sbb
mov
call
xchg
push
ins
mov
out
mov
push
movs
xchg
add
push
retf
in
call
push
sub
dec
and
inc
test
cld
ret
cmp
jmp
push
test
int3
arpl
ficomp
and
shl
push
cmp
adc
nop
rol
jne
sub
stos
xchg
dec
dec
xchg
xor
xor
rcl
and
enter
daa
pushf
sti
int3
leave
or
je
imul
cmp
jb
xchg
xchg
sub
nop
xchg
loop
cmp
sbb
mov
pop
or
retf
adc
mov
jae
or
push
jmp
stc
or
push
mov
xlat
loope
mov
stos
mov
add
mov
mov
sub
or
repz
imul
icebp
and
pop
rcr
xor
jle
loop
pop
pushf
fisubr
mov
mov
movs
push
retf
shl
retf
fdiv
dec
or
inc
sub
xor
jbe
(bad)
movs
sub
push
mov
dec
sub
aad
adc
pop
xchg
mov
jns
into
add
xchg
pop
stos
aam
pop
pop
out
ins
js
sub
add
imul
iret
call
lods
cmc
mov
push
leave
aam
mov
arpl
(bad)
pushf
es
cmp
cmp
(bad)
jle
push
sub
cwde
repnz
adc
aaa
fs
fdivrp
xchg
sub
imul
cmp
test
or
mov
sbb
outs
inc
push
loopne
outs
in
(bad)
cmp
ins
and
pop
icebp
dec
test
lods
cdq
pop
mov
cmp
fcomp
sub
fmul
arpl
leave
or
ins
scas
xchg
inc
jmp
adc
mov
push
mov
jecxz
in
pop
and
movs
mov
rcr
sub
lods
stos
fistp
icebp
inc
out
mul
sub
push
scas
and
movs
pop
mov
jne
inc
push
sub
mov
outs
les
shl
dec
outs
test
or
pushf
sbb
mov
(bad)
call
mov
xchg
mov
test
je
pushf
jp
or
xchg
inc
loopne
call
sbb
cmp
repnz
in
ss
inc
cmps
mov
or
or
inc
push
and
and
and
push
sub
mov
test
or
xchg
mov
stos
lea
sti
repnz
out
gs
jne
addr16
jge
call
retf
stos
dec
repnz
xor
push
fidivr
les
test
jecxz
xor
jae
push
jge
xlat
hlt
jbe
jle
mov
push
dec
in
gs
gs
xor
sub
push
popa
test
repnz
or
xor
mov
jns
hlt
test
pop
std
lods
pusha
push
cli
jo
retf
pop
fdivp
rcl
sbb
scas
jns
jae
xor
movs
jb
or
or
into
in
mov
xor
jmp
push
sar
push
jge
xor
sbb
mov
in
xor
add
jmp
stc
inc
inc
out
nop
out
cdq
lahf
jmp
fistp
sahf
ss
stos
pop
cld
imul
pop
pop
stos
mov
ds
adc
retf
shl
mov
jae
bound
push
and
xchg
cwde
dec
gs
in
popa
xor
push
leave
mov
add
sbb
in
jl
jnp
mov
retf
jle
mov
inc
sbb
(bad)
dec
(bad)
loopne
jecxz
jge
mov
jae
(bad)
int3
dec
loopne
aam
jnp
pop
push
add
sbb
adc
or
mov
push
and
hlt
jmp
push
shld
aaa
in
test
int3
mov
xchg
and
out
xor
mov
popa
mov
out
jl
ret
aad
nop
outs
dec
lock
mov
inc
ret
inc
mov
movs
aam
lods
test
adc
xor
cli
iret
std
dec
mov
rcl
call
dec
lock
xor
pop
test
shr
fwait
mov
lock
and
or
xor
dec
jg
and
push
xor
out
push
or
rcr
xchg
jle
ja
out
adc
ins
xor
inc
mov
mov
pop
jns
dec
aam
inc
lods
repz
in
hlt
cmp
jne
or
xchg
lahf
push
fnstenv
ret
cmp
outs
ja
pusha
jbe
mov
pop
jnp
xor
hlt
or
pop
xor
out
mov
mov
adc
in
push
xor
(bad)
jmp
add
int
and
call
adc
jmp
dec
daa
dec
mov
pop
mov
mov
or
stc
fwait
shl
and
or
jo
jns
inc
aas
jecxz
fs
cmps
jns
in
sbb
scas
in
outs
add
sub
test
imul
lock
inc
or
data16
clc
loop
sub
mov
imul
mul
(bad)
out
daa
dec
cdq
icebp
adc
pushf
mov
(bad)
sub
data16
pop
inc
adc
and
in
jno
cmp
cwde
loopne
lea
sub
add
ret
(bad)
pusha
or
push
jp
xor
sbb
adc
jb
adc
xor
sub
dec
les
cld
push
xchg
push
cmp
rcr
xchg
imul
push
adc
sbb
lods
pop
dec
or
sti
rcl
aaa
mov
ins
pop
add
fld
ret
(bad)
aad
movs
sti
mov
mov
movs
(bad)
test
shl
fwait
fs
xor
mov
call
dec
ss
sbb
mov
mov
xor
sbb
push
jp
das
xchg
popf
out
fisttp
xor
or
pop
cmp
mov
nop
mov
mov
mov
jmp
dec
or
and
in
sbb
call
mov
jge
faddp
in
push
call
push
xchg
cmp
pop
leave
push
cld
adc
(bad)
leave
stc
loopne
ret
pop
pop
addr16
icebp
and
mov
movs
mov
xchg
jmp
(bad)
mov
outs
mov
(bad)
dec
mov
ss
popa
adc
add
je
leave
stc
push
je
mov
jle
ret
int
cmc
ja
mov
fcom
mov
sbb
dec
dec
in
xchg
outs
xor
stos
cs
call
fs
xchg
jmp
(bad)
in
js
add
xchg
jmp
nop
loope
sbb
retf
loopne
push
loop
lods
clc
test
cmps
or
xor
rcr
add
cld
pop
clc
fwait
in
xor
pmuludq
adc
outs
call
adc
dec
jb
add
call
sub
xor
call
sub
xchg
jno
xchg
xor
bound
lods
test
out
cmp
push
cmc
cmps
out
bound
inc
inc
xor
or
imul
cmp
sub
cwde
sti
jns
popf
pop
retf
fcomp
jge
mov
cmp
add
mov
sbb
adc
adc
repz
test
xor
scas
add
repz
push
ret
call
pop
sub
int
test
cmp
rcr
adc
fnsave
sub
mov
aas
mov
fild
ja
mov
les
inc
push
das
and
jo
imul
adc
lahf
shl
cs
mov
inc
pop
or
xchg
les
cdq
cwde
dec
inc
adc
pop
out
cmp
loope
xor
cmp
loope
movs
ror
and
mov
pushf
dec
jmp
adc
jle
pop
dec
iret
and
scas
add
neg
lods
adc
stos
adc
sbb
xor
or
jns
mov
sbb
(bad)
jmp
test
mov
dec
or
imul
adc
mov
dec
outs
int
lahf
or
xchg
mov
ret
sub
pop
mov
in
sub
xor
add
mov
or
xor
add
and
ss
xchg
out
mov
cmp
push
pop
in
ins
ret
and
ss
mov
fdivr
les
ins
mov
push
inc
pop
push
dec
retf
push
push
addr16
adc
push
or
fistp
shr
scas
imul
nop
scas
hlt
mov
sbb
sub
(bad)
mov
leave
lahf
adc
sbb
outs
add
js
cmps
jnp
pop
xor
mov
push
xchg
cdq
in
mov
mov
mov
pop
ins
std
sub
dec
xchg
mov
or
das
pop
push
dec
xchg
inc
not
rcr
or
mov
out
push
lock
mov
adc
inc
mov
sub
sbb
push
sti
div
in
ins
ror
loop
data16
or
sub
inc
adc
sbb
sti
dec
cmp
pop
jmp
(bad)
lods
movs
pushf
xor
in
xchg
shl
jg
xchg
popa
pop
retf
xchg
es
inc
pop
jno
pop
mov
nop
or
ins
repz
ret
pop
cmp
call
and
fnstsw
xchg
aaa
popa
xor
xchg
xchg
clc
sub
push
or
dec
rcr
fnstcw
leave
je
ficomp
cmp
xchg
dec
jmp
(bad)
mov
out
inc
outs
jle
inc
sbb
imul
aaa
retf
int
pop
mov
fnstenv
xchg
add
in
nop
push
jo
ror
mov
inc
push
xchg
daa
adc
(bad)
adc
dec
out
adc
(bad)
ja
retf
mov
jmp
push
push
cmps
test
hlt
aas
stos
mov
sti
pusha
xchg
or
jae
fs
xor
daa
push
cmps
stos
jae
je
inc
cdq
mov
jmp
(bad)
out
adc
mov
pop
out
push
int3
das
popf
movs
inc
ins
inc
repnz
dec
jmp
movs
fmul
sar
into
sub
push
test
cmp
pushf
jb
aam
shl
mov
xchg
and
(bad)
sbb
add
imul
scas
jnp
dec
hlt
repnz
xor
mov
ficomp
jb
mov
mov
int
pop
shl
test
test
pop
cmps
add
mov
xchg
jmp
shl
aas
cmp
aad
fisubr
loop
adc
mov
aam
push
std
iret
pusha
call
pop
cld
sbb
je
clc
and
in
mov
icebp
ror
xchg
hlt
sbb
cmp
out
std
jmp
daa
or
lock
inc
loope
mov
mov
xlat
pop
cli
mov
(bad)
fadd
and
cwde
out
jp
cmp
cmp
int3
adc
mov
and
dec
movs
gs
or
push
mov
enter
cs
dec
daa
pop
sbb
push
xchg
ret
nop
cmp
call
push
rcl
add
add
dec
fwait
dec
in
mov
mov
sti
xchg
cmp
xchg
outs
add
jns
push
lock
adc
mov
sbb
enter
inc
push
scas
mov
xchg
fcmovnu
inc
add
aaa
retf
loope
das
xchg
mov
pop
neg
jb
push
xchg
and
dec
xor
ins
aas
or
stos
push
jns
mov
scas
dec
or
mov
ins
sti
jmp
retf
out
ss
inc
push
or
cmp
setae
icebp
mov
jbe
mov
das
or
or
or
mov
cld
and
pop
fld1
mov
and
pop
push
pop
call
xor
imul
js
sub
inc
jno
or
inc
cmc
cld
fs
and
adc
sub
jl
stos
repz
sti
shr
cmps
cmp
mov
sbb
and
mov
jmp
sub
addr16
ret
inc
js
xchg
ficom
mov
lock
mov
sub
mov
xchg
xor
sub
jns
imul
pop
and
lahf
je
fld
aas
mov
rol
sbb
aam
push
push
jno
xchg
xchg
out
mov
add
enter
out
out
je
and
(bad)
sub
mov
pop
test
cwde
inc
add
stos
ret
cmp
jmp
fisubr
(bad)
fdivr
mov
out
or
fild
jne
sbb
adc
loop
cmps
jecxz
or
xchg
sub
movs
sahf
jmp
outs
jb
aam
mov
adc
mov
jns
outs
ss
jmp
fnstenv
cld
adc
and
mov
mov
ins
and
aad
and
or
mov
jbe
adc
call
and
xchg
jmp
mov
mov
jbe
jle
aaa
or
mov
jbe
mov
pop
dec
cmps
mov
xor
dec
mov
xchg
jae
cmp
inc
in
(bad)
push
pop
in
out
push
aam
cld
sti
into
call
add
int3
lock
ror
aas
dec
loopne
inc
in
js
fmul
(bad)
test
loopne
sub
jl
xchg
sti
lock
sbb
xchg
dec
rol
push
and
and
or
movd
ds
fstp
outs
push
add
mov
mov
or
std
in
cmp
popf
fdiv
sbb
dec
xchg
inc
or
xchg
cmp
movs
mov
(bad)
sar
lea
pusha
test
or
nop
ja
addr16
div
xor
(bad)
mov
add
adc
inc
add
add
adc
cmps
pop
pop
add
jl
add
fcmovnu
das
push
mov
aas
test
sub
shr
je
mov
mov
call
in
xchg
in
mov
jg
sti
gs
cmp
add
and
push
ja
add
push
pop
mov
push
(bad)
pop
mov
sti
sahf
cwde
test
cmc
daa
adc
hlt
and
jp
push
sbb
in
icebp
fsub
inc
cmps
xor
ds
xlat
movs
lock
xchg
cmps
pop
shl
xor
xor
dec
push
or
inc
movs
push
or
fdivr
enter
or
lock
mov
inc
nop
xor
xor
and
shl
jp
mov
mov
test
dec
jl
push
sti
es
dec
pop
and
js
cmp
cmp
mov
imul
(bad)
pop
unpcklps
cmp
repnz
retf
add
mov
dec
inc
jae
ins
xchg
fst
sub
push
and
sbb
jl
sub
jg
retf
(bad)
repnz
xor
xor
leave
pop
or
fucom
push
push
(bad)
dec
lods
mov
push
mov
jmp
xchg
das
(bad)
imul
xchg
mov
addr16
mov
mov
xchg
aas
(bad)
push
popf
pxor
pop
repnz
or
add
addr16
push
pop
nop
mov
xchg
mov
stc
jp
sbb
dec
out
repnz
xchg
lahf
movs
and
cmps
les
outs
cmp
pop
cmp
fisubr
sub
out
nop
push
movs
outs
mov
sbb
xchg
push
jg
inc
jbe
pop
int3
lock
sete
adc
fsub
mov
inc
dec
dec
push
rcr
push
adc
jns
(bad)
out
sahf
iret
mov
out
sub
lods
repz
mov
push
movs
shl
ficomp
mov
enter
xor
call
inc
arpl
xchg
fadd
mov
pop
jg
test
cmps
lea
imul
cmp
sbb
jno
xor
cmc
dec
jno
push
xchg
sub
sub
cmp
pop
fld
mul
imul
in
xor
sahf
add
daa
or
stos
and
pop
enter
mov
dec
test
dec
pop
shl
test
mov
in
sar
int3
cmp
(bad)
aam
inc
aaa
cmp
jmp
push
sahf
sub
jg
ds
pop
pop
mov
or
dec
add
cmp
int3
mov
jmp
scas
stos
fimul
test
(bad)
push
sbb
dec
(bad)
stc
mov
sbb
xchg
pushf
inc
adc
loopne
std
call
xchg
lea
cld
mov
arpl
rcr
(bad)
enter
mov
out
cs
aam
sbb
aad
jnp
data16
dec
xchg
pop
cmp
retf
xor
pop
in
mov
inc
lods
mov
es
std
sbb
cmps
mov
add
pop
aam
add
adc
mov
pushf
call
retf
adc
test
ja
push
cmp
mov
or
adc
test
xchg
xor
rol
dec
imul
mov
cld
xchg
inc
pop
test
xor
push
fnstcw
mov
pop
push
dec
out
push
sub
out
outs
jno
inc
push
dec
test
data16
push
mov
push
push
xor
inc
cmp
les
es
arpl
cmp
pop
and
push
xchg
push
push
mov
dec
std
cmp
movs
aaa
in
arpl
idiv
imul
shl
lods
dec
je
mov
fistp
imul
into
add
inc
(bad)
pusha
aad
test
out
fild
sbb
lods
sbb
fdiv
sar
jne
add
jl
dec
jp
repnz
mov
pop
or
cmp
xchg
int3
inc
stos
stos
lock
ret
loope
cmp
shl
push
mov
push
lahf
adc
mov
sub
cmps
or
jl
std
fisub
and
addr16
in
xchg
loope
pop
ror
sub
iret
mov
mov
jle
xor
mov
sbb
addr16
xor
loop
adc
(bad)
push
adc
pop
mov
xlat
and
sbb
and
aaa
mov
rcr
out
jmp
ja
push
retf
sar
(bad)
pop
scas
push
push
jmp
ins
fisubr
clc
mov
out
(bad)
sbb
cmps
ds
sbb
aaa
cmp
sbb
push
xchg
pop
cmp
jge
push
or
adc
in
cmp
js
loope
lods
inc
xchg
ret
sti
in
adc
push
pop
and
sbb
add
daa
les
popf
mov
ret
mov
add
iret
add
sbb
jp
sbb
nop
or
adc
sbb
xchg
push
leave
jl
xor
ja
or
jg
loopne
or
rol
jmp
in
jns
dec
js
movs
lds
inc
imul
mov
mov
(bad)
in
repnz
dec
nop
pushf
rcr
ins
scas
mov
clc
outs
retf
aam
cmp
std
or
xchg
add
push
imul
jmp
inc
loopne
ja
movs
hlt
mov
pop
neg
add
in
imul
mov
inc
mov
mov
scas
lock
mov
add
in
xlat
add
cmp
jg
shr
in
repz
jbe
es
jns
jg
pop
data16
loope
sbb
daa
fisubr
lock
loopne
ret
vpshaw
mov
inc
das
ins
cs
ins
cmp
jge
jg
mov
fist
lods
dec
cmps
mov
jns
adc
adc
loope
retf
shl
ffreep
outs
push
out
jb
pop
sbb
(bad)
iret
ds
push
jle
xchg
adc
outs
xchg
retf
sbb
inc
xor
dec
fcomp
push
sub
mov
frstor
shl
dec
std
mov
dec
xchg
and
cmp
push
leave
inc
je
std
je
push
fistp
imul
pusha
mov
push
dec
stos
ins
add
lds
xlat
jnp
dec
push
aad
call
mov
jmp
and
pop
ds
sbb
stos
xchg
push
cmp
lods
push
xor
call
inc
jg
clc
cmps
nop
mov
sahf
js
pop
jb
test
sahf
cld
jmp
outs
in
cmps
movs
stos
jnp
nop
mov
scas
or
jl
and
cld
cdq
data16
(bad)
mov
xor
outs
fisttp
bnd
inc
mov
dec
inc
mov
adc
movs
xor
xchg
imul
or
xor
mov
loopne
pop
xchg
xchg
add
sbb
jp
xchg
inc
call
fidivr
(bad)
(bad)
lock
sti
out
mov
sub
inc
and
pop
cmp
mov
cmp
aaa
cwde
mov
call
or
icebp
shl
mov
mov
xchg
sbb
xor
cmp
retf
cmp
daa
inc
jno
jl
xor
mov
fsub
les
mov
aam
push
jne
push
cmps
xor
scas
jl
inc
loopne
int
shl
sti
sbb
jmp
dec
ss
lahf
jg
or
idiv
mov
lock
arpl
mov
mov
and
ja
sbb
dec
sub
pop
push
add
fs
leave
stos
push
jmp
xchg
ins
cmp
xor
psubusw
mov
mov
add
pop
mov
dec
cli
(bad)
cwde
in
inc
add
cmp
jmp
stos
push
jb
mov
add
mov
sbb
adc
mov
xor
(bad)
leave
cdq
xchg
es
cmovle
mov
nop
push
mov
adc
cmp
(bad)
into
pop
inc
pavgw
(bad)
xor
or
(bad)
jo
jb
daa
iret
test
(bad)
data16
iret
mov
push
mov
mov
iret
or
sbb
pop
mov
mov
sti
pop
nop
push
cmps
jb
out
adc
pop
ja
(bad)
retf
sub
mov
and
push
ret
dec
push
xchg
cmp
push
xchg
das
call
scas
xchg
imul
add
mov
cs
sbb
add
repnz
hlt
xchg
push
jl
mul
dec
sub
adc
sub
dec
xor
adc
movs
push
popf
mov
repnz
xor
push
ja
jo
in
std
fild
pop
and
xchg
test
test
mov
mov
push
pop
inc
dec
mov
cli
pop
push
jne
mov
int3
out
mov
in
mul
lea
pop
pop
jg
call
call
stos
aaa
mov
mov
rcl
cmp
popa
shl
mov
adc
jb
loope
and
mov
mov
retf
loop
test
add
add
hlt
sub
(bad)
cmp
aaa
xor
scas
scas
ret
jmp
xor
push
adc
iret
or
adc
shl
shr
and
leave
mov
push
add
shl
cmc
outs
dec
or
xchg
aaa
int3
mov
retf
jb
popf
retf
push
adc
mov
mov
mov
call
lods
jne
xor
sbb
jo
cmc
mov
int3
cmp
mov
lods
inc
icebp
cmps
add
adc
aam
fnstsw
dec
inc
mov
push
jmp
std
(bad)
mov
inc
fldenv
and
cmp
push
cli
or
lock
das
cld
push
sbb
fadd
or
inc
out
test
fcom
test
sti
loope
mov
sbb
in
mov
bnd
in
pop
cmp
and
sbb
cmp
jno
ret
sbb
pushf
(bad)
or
gs
rcl
xor
mov
mov
loop
jg
fwait
push
into
push
push
inc
cwde
jmp
pushf
push
mov
or
cmp
jg
mov
pop
inc
push
jmp
dec
lock
mov
push
xchg
dec
jne
push
repz
ficom
xchg
ret
je
dec
mov
jge
movs
(bad)
and
aad
test
fstp
push
mov
mov
neg
mov
nop
scas
xchg
push
xor
std
cdq
push
add
fldenv
pop
cmp
rol
(bad)
movlps
xchg
jecxz
out
mov
or
add
fsub
cmp
pushf
cmps
pop
sbb
lods
(bad)
mov
add
push
sub
retf
xor
int3
popa
sbb
shr
mov
jnp
rcl
adc
cmp
stos
lock
leave
aaa
cli
lea
jo
or
xchg
icebp
mov
pop
jmp
int3
pop
retf
add
int3
scas
pop
cmp
jl
shr
push
cli
xchg
inc
aam
pop
retf
sbb
lods
fmul
inc
push
mov
jp
mov
mov
lds
fst
mov
and
rcl
mov
add
pop
pop
int
ret
mov
adc
in
movs
push
cld
int3
and
and
mov
(bad)
(bad)
ficom
mov
dec
push
mul
(bad)
dec
pop
dec
mov
or
in
enter
jbe
popa
adc
mov
or
xchg
pop
aad
clc
xchg
imul
(bad)
retf
aas
arpl
movs
inc
in
loop
fimul
mov
div
xor
js
and
cmp
sahf
lods
xchg
mov
ins
fs
xlat
mov
mov
mov
test
mov
ficomp
fimul
mov
in
and
jmp
(bad)
bound
fbstp
es
test
jno
aas
pusha
jb
iret
mov
loopne
jl
add
cwde
mov
xor
adc
iret
shr
nop
ins
lods
jae
jae
push
out
in
and
std
sbb
push
inc
(bad)
jmp
mul
mov
aaa
in
pop
adc
sbb
mov
inc
les
sar
mov
xor
jb
test
arpl
arpl
loopne
sub
pushf
mov
jno
xchg
rcl
hlt
out
ret
call
repz
mov
or
jle
xchg
cli
outs
add
inc
xchg
jbe
ja
movs
pusha
adc
xlat
cdq
xchg
xchg
sub
push
fld
lds
ja
sub
jl
sar
and
lea
or
xor
sti
sbb
aam
inc
rcl
lods
sbb
sbb
out
add
test
push
pusha
mov
ins
enter
dec
out
inc
mov
mov
adc
imul
repz
xchg
or
push
dec
rcl
push
fdiv
sbb
sbb
mov
dec
or
repz
and
ds
stos
or
js
mov
repz
or
lods
je
and
pusha
pushf
popf
fidivr
xchg
xchg
mov
mov
fwait
pop
(bad)
(bad)
jns
pand
add
test
inc
rcr
jmp
sub
cmps
stc
jo
cli
jno
daa
mov
jae
loopne
fldcw
push
and
add
jbe
sub
pop
ror
jns
test
stos
and
mov
test
fisttp
cmp
sbb
xor
push
cmps
cmp
sbb
cli
stc
jno
aaa
mov
cmps
xor
lds
or
inc
fsub
ss
sub
push
xchg
mov
ret
pop
dec
ins
shl
sub
jecxz
push
mov
icebp
popa
mov
int
mov
mov
neg
rol
mov
fucomp
and
inc
retf
into
lea
aaa
syscall
bound
into
dec
sahf
call
loopne
jp
add
std
cmp
pop
ss
add
stc
push
stos
out
in
sub
dec
push
push
out
xchg
inc
jl
jmp
shr
fild
aad
or
pop
sbb
adc
mov
dec
adc
mov
xchg
xchg
outs
add
pop
test
push
dec
xchg
jb
xchg
loope
push
sar
dec
pusha
sbb
sbb
pusha
push
pop
inc
mov
imul
rol
fadd
fwait
rcl
in
inc
pop
inc
fcom
dec
and
call
adc
adc
jno
inc
frstor
mov
xchg
or
and
rcl
imul
mov
add
inc
in
div
push
js
push
jecxz
out
push
jl
call
dec
cmp
jmp
mov
ret
ror
ds
inc
jo
and
lods
addr16
ss
and
mov
dec
gs
stc
ins
stc
sbb
inc
mov
push
imul
inc
dec
mov
data16
xchg
and
sbb
adc
leave
int3
inc
push
ret
bound
inc
imul
or
mov
scas
call
in
aam
xor
call
xor
dec
movs
mov
push
popf
and
cld
fnsave
xor
enter
nop
mov
fsub
fcmovne
push
push
cmps
mov
mov
add
fsubr
dec
sub
ins
add
shl
movs
and
outs
xor
and
sub
mov
adc
push
and
in
loop
rcr
sbb
adc
pop
js
pusha
mov
es
ss
inc
fisttp
pop
mov
outs
push
sub
retf
fst
cwde
fdiv
add
mov
mov
pop
pop
push
xchg
add
pushf
add
dec
out
icebp
retf
shr
mov
addr16
add
ins
movs
aad
aaa
sub
sub
mov
add
sti
push
push
mov
movs
or
ins
ret
xchg
mov
stos
sbb
mov
stos
mov
push
nop
pop
pop
enter
leave
ds
cdq
xor
cmp
ficom
mov
rcr
call
movs
lock
out
fld
jnp
xchg
push
mov
mov
add
call
stos
adc
int3
mov
xor
aad
cwde
pop
mov
cli
cwde
add
aam
out
out
add
rol
dec
sahf
inc
ret
or
sub
mov
add
sbb
xchg
loope
add
xor
xor
mov
cmp
or
mov
push
xchg
cmp
pop
cli
cmp
data16
xor
lds
out
call
lahf
cwde
push
imul
cli
and
xor
mov
scas
ss
jle
sub
cmp
sbb
or
in
inc
push
push
pop
(bad)
xor
sub
into
es
daa
mov
fsubr
enter
rcr
mov
push
je
or
les
arpl
fs
idiv
xchg
xlat
nop
push
jne
fwait
int3
int
stos
cwde
mov
xchg
neg
mov
jb
mov
pusha
xchg
pop
(bad)
cmc
inc
dec
outs
lds
stc
adc
mov
out
in
pop
sbb
xor
push
in
arpl
or
xor
xchg
pop
(bad)
idiv
cmp
jne
pop
inc
xor
sub
dec
push
lahf
inc
inc
pop
fidiv
loop
ja
adc
stos
mov
push
inc
mov
xchg
inc
cmp
jge
jns
(bad)
lahf
push
int3
add
cmps
pop
jno
push
ss
(bad)
inc
bound
xor
push
sbb
fisub
xor
je
cwde
in
inc
xor
mov
pushf
(bad)
out
shl
mov
jge
arpl
cmp
fcomp
xor
aaa
std
sti
adc
shl
mov
(bad)
std
jecxz
dec
nop
inc
jno
ins
mov
pop
aaa
pop
fnstsw
push
icebp
pop
mov
icebp
sbb
pop
inc
mov
jmp
cdq
fwait
jb
fcomp
push
jae
gs
cmps
clc
rcr
adc
dec
xor
sbb
lods
xchg
or
mov
dec
jb
pop
(bad)
movs
mov
inc
ins
(bad)
fidivr
pop
jle
(bad)
and
adc
xor
or
retf
mov
or
xor
outs
in
push
sub
fwait
xor
fisub
adc
leave
test
mov
push
dec
dec
jbe
add
enter
test
xor
(bad)
aam
jo
jmp
dec
ror
push
imul
popf
pop
push
dec
add
ins
or
ins
iret
pop
cld
sahf
xor
dec
cli
add
jbe
stos
cld
not
lock
sub
xchg
or
inc
mov
cs
jle
xor
sbb
or
mov
xchg
and
pushf
hlt
dec
jbe
inc
adc
cdq
push
cwde
lock
repz
fist
pop
popf
jbe
adc
fild
xchg
cmp
(bad)
out
fcomp
pop
xor
rcl
scas
movs
(bad)
mov
sub
and
dec
sub
(bad)
lds
mov
sub
jmp
cmc
imul
cmps
outs
ret
iret
xor
(bad)
push
adc
ror
ss
call
cmc
rcl
je
pop
mov
xchg
push
lea
inc
xchg
push
sub
jo
push
test
addr16
mov
mov
jae
add
(bad)
retf
dec
push
pop
inc
mov
sahf
daa
test
and
retf
push
mov
lds
cmp
leave
clc
xor
sar
pusha
xchg
adc
push
fmul
lods
pop
xor
jmp
cs
xor
dec
clc
cmp
lea
mov
mov
adc
jecxz
shr
add
xchg
mov
pop
xchg
out
sub
inc
or
fs
cdq
pop
popf
or
retf
pusha
in
adc
mov
and
xchg
aaa
xor
xchg
fs
mov
jmp
ins
daa
dec
xchg
adc
popa
out
mov
push
jmp
jns
xchg
sub
lods
cmp
xchg
je
xchg
inc
mov
movs
pop
(bad)
test
inc
stos
jno
int
cmp
iret
jo
mov
sahf
xchg
and
dec
fcmove
out
fisubr
imul
iret
(bad)
aas
jmp
xor
(bad)
loopne
jae
lahf
rol
aam
(bad)
and
sub
xchg
(bad)
stos
stos
dec
jl
xor
adc
pop
or
fcmovu
jge
dec
test
mov
dec
outs
(bad)
jns
stc
aas
or
js
adc
mov
sub
xor
dec
nop
loopne
cmp
pop
nop
sub
movs
xor
lods
adc
pop
xor
dec
in
movs
mov
push
out
js
outs
outs
mov
mov
movs
movntps
adc
pop
xor
je
lods
scas
push
addr16
(bad)
mov
push
push
out
push
call
es
fnstenv
inc
adc
sub
sub
leave
and
rcl
jb
pop
mov
repz
(bad)
cmc
xlat
jge
in
sti
popf
dec
ins
inc
sub
sbb
inc
aam
inc
mov
jg
mov
sub
ds
daa
mov
pop
pop
push
xor
mov
inc
xchg
ja
push
and
js
cmps
mov
cmp
retf
xchg
aam
dec
out
mov
int
cdq
xchg
sbb
cdq
pop
xlat
fwait
sti
pusha
cli
mov
add
jecxz
call
adc
popf
in
in
outs
push
xchg
push
push
into
inc
call
adc
aam
das
xor
mov
sbb
push
and
(bad)
cld
xor
fbld
mov
mov
iret
hlt
mov
fisttp
retf
sub
or
je
fcomp
dec
jns
sub
dec
(bad)
ins
outs
sbb
pop
mov
jecxz
mov
in
sbb
inc
xchg
rcr
and
and
xor
test
(bad)
call
cli
or
push
ins
mov
cmp
cmc
in
(bad)
sbb
push
or
lds
ds
mov
or
mov
mov
xchg
adc
jb
or
cld
mov
lds
call
and
sti
adc
out
gs
rcl
(bad)
mov
stos
(bad)
mov
xor
sbb
rol
sub
jo
jae
xchg
leave
aad
jmp
jle
pop
outs
test
cmps
mov
inc
lea
call
std
in
adc
inc
sub
add
call
or
jno
push
xchg
and
or
sub
jge
cmp
out
outs
sub
test
rdpmc
outs
aas
popf
dec
inc
cmp
dec
loopne
loop
mov
mov
mov
addr16
sub
repnz
movs
rcr
ror
scas
sub
mov
fs
dec
or
add
sub
and
mov
test
repz
mov
pop
stos
pushf
jg
icebp
fisub
xchg
test
pushf
pop
pop
fisub
stc
scas
call
or
stc
pop
or
neg
sub
arpl
fbld
in
call
xchg
xchg
leave
(bad)
outs
xor
pop
mov
add
sbb
rcr
cmp
cli
jae
loop
nop
push
scas
leave
adc
je
and
bound
dec
pop
in
jmp
lock
fcom
cmovb
push
adc
pop
dec
xor
jne
push
push
adc
sahf
jo
cmps
pusha
stc
aad
popa
and
jnp
call
repnz
sub
mov
mov
fdivr
icebp
out
sbb
out
outs
setl
dec
lods
outs
stos
leave
jb
test
push
fwait
jecxz
pop
mov
cwde
shl
inc
fcmovb
jne
and
arpl
push
cmc
addr16
or
sbb
sar
add
in
push
xchg
pop
and
jbe
int
sub
add
out
or
test
pop
jmp
test
sti
test
fsubr
xchg
jp
lea
or
cmp
mov
icebp
sub
mov
rol
sar
les
aas
mov
inc
fist
mov
in
fst
ret
sub
mov
jecxz
jmp
out
test
jle
push
sti
jle
and
or
mov
dec
out
mov
inc
ds
add
and
inc
sti
shr
addr16
adc
ja
adc
mov
movs
fnstsw
scas
shl
pop
jg
xlat
add
bnd
cmp
xchg
xchg
shl
call
and
mov
adc
enter
sub
and
sahf
adc
pusha
out
aam
aaa
mov
repz
adc
pop
xor
stos
jmp
fist
or
stc
xchg
jmp
aam
dec
adc
sub
aad
out
add
test
pop
dec
popf
jge
jmp
rol
sbb
dec
sub
pop
jns
pushf
inc
push
mov
sbb
add
or
inc
push
xor
mov
icebp
mov
jg
test
push
xchg
jo
fidiv
adc
iret
xor
ficom
cmp
jmp
dec
mov
call
push
xchg
scas
xchg
xor
inc
icebp
imul
lods
or
pusha
(bad)
call
into
and
cli
jle
retf
mov
mov
imul
xor
mov
fs
je
dec
add
lds
rol
ins
xor
(bad)
or
cmps
cmp
loop
pop
stos
mov
fs
aaa
inc
mov
cmp
lds
iret
icebp
add
in
faddp
sbb
ins
daa
push
push
pusha
mov
adc
pop
(bad)
(bad)
jp
xor
mov
in
or
(bad)
cmps
adc
fld
icebp
cmp
mov
mov
cmc
movs
pop
daa
rcr
cmps
pop
stos
pop
out
add
adc
xchg
jno
shl
fild
jae
retf
jecxz
adc
sbb
jmp
jo
mov
push
std
inc
jmp
stc
jno
xchg
pop
cmp
int3
jmp
(bad)
pusha
or
enter
mov
inc
push
sar
repz
push
repz
adc
rcr
mov
xchg
popa
outs
jb
and
sbb
push
daa
in
outs
into
pusha
pop
out
xchg
jo
xchg
fild
loop
rcl
jns
jmp
rol
mov
nop
cmp
inc
retf
dec
push
(bad)
pop
push
cdq
scas
rcl
adc
sti
fs
pusha
xor
sbb
or
clc
inc
cwde
push
inc
jbe
inc
ins
mov
ret
push
bound
shl
adc
sbb
outs
jmp
pop
xor
pop
cmp
and
add
pop
repz
jmp
sub
fld
pop
cmps
mov
and
int
les
push
sbb
push
or
fldcw
adc
jmp
mov
leave
mov
mov
es
cmps
and
jbe
xchg
in
adc
fldenv
pop
lea
retf
retf
scas
mov
push
adc
into
jmp
xor
push
sub
cmp
ror
stc
inc
jmp
jg
xchg
jb
cmp
and
int3
mov
dec
aas
mov
mov
add
pop
xor
mov
xchg
jne
es
fst
jnp
nop
dec
jne
popf
xor
jle
call
(bad)
enter
xchg
ds
sub
and
adc
rcr
push
jmp
mov
sar
jae
adc
add
mov
test
pop
or
pop
pop
loop
rsm
pop
(bad)
dec
add
inc
push
jle
jp
push
sbb
loopne
cwde
cmp
mov
push
fmul
aad
test
inc
sub
dec
jne
xchg
fwait
gs
jbe
xchg
add
popf
retf
stos
pop
inc
addr16
enter
ss
shl
jo
int
scas
call
jno
mov
ins
retf
es
rcr
xor
pop
and
push
lea
rol
frstor
mov
cs
pop
jns
enter
cld
push
pop
cmp
dec
xor
gs
scas
inc
dec
pop
add
mov
repz
fimul
pop
mov
mov
add
push
stos
movs
jbe
jns
ret
fldenv
fiadd
cld
and
adc
pop
fisttp
cmp
push
dec
pop
push
inc
aad
pop
xor
inc
scas
dec
mul
mov
add
subps
or
push
and
inc
enter
movs
aas
sbb
jge
mov
lahf
fwait
add
cmp
push
sbb
scas
cli
cmp
sbb
(bad)
int
push
in
xor
mov
cdq
lods
mov
icebp
in
inc
icebp
xchg
pop
fwait
rcl
jns
dec
daa
cwde
outs
shr
and
xor
xor
jae
sub
cmps
sub
ds
jg
push
fbstp
lea
jge
mov
cdq
imul
frstor
adc
adc
dec
inc
mov
bound
sub
xchg
or
sub
bound
mul
adc
popa
xchg
mov
ror
in
daa
pop
push
jae
aam
lods
add
mov
inc
scas
push
movs
fs
outs
adc
push
imul
dec
imul
and
sbb
shl
mov
out
pop
or
push
cmp
xchg
pusha
rcl
xchg
cmps
outs
stc
jb
xchg
pop
test
add
(bad)
or
cs
add
push
mov
or
and
jo
or
out
mov
out
cli
das
pop
ins
jne
inc
jge
jecxz
dec
neg
dec
pop
adc
inc
aas
adc
xor
jmp
(bad)
jnp
loopne
mov
add
mov
je
loop
xor
pop
movs
xchg
push
test
arpl
sub
cdq
inc
pop
pop
movs
loope
int3
sub
cmp
push
lds
cmps
mov
iret
jbe
shr
mov
mov
inc
push
push
rcl
stc
mov
inc
mov
cmps
je
cmp
sbb
xchg
or
sbb
push
lods
loopne
dec
pop
mov
fisubr
adc
ins
push
dec
rcl
sub
cmps
fidivr
fild
or
pop
dec
inc
stos
lds
mov
xor
lea
ret
arpl
jmp
push
dec
fs
cmp
push
call
je
jb
and
repnz
imul
rcl
push
fiadd
test
cmp
ds
pop
idiv
(bad)
call
push
out
cmps
(bad)
in
pop
dec
ret
pop
or
cmps
sub
and
ins
inc
loop
adc
in
pop
pop
(bad)
dec
in
jbe
xor
sub
cs
ins
pop
movs
lea
das
pop
dec
xor
sbb
jns
mov
sbb
nop
retf
mov
fisubr
loope
xor
inc
stos
inc
push
dec
imul
jg
pop
(bad)
mov
push
inc
iret
cwde
mov
(bad)
xchg
fild
aaa
push
xor
test
out
xor
jne
adc
inc
leave
sbb
push
push
retf
adc
scas
jl
clc
push
push
push
push
jmp
leave
pop
(bad)
ret
arpl
pop
fsub
add
pop
imul
inc
mov
push
cmp
add
push
shl
std
push
stos
push
mov
inc
outs
mov
push
adc
adc
dec
pop
enter
sub
mov
loopne
push
push
cli
mov
mov
aas
sar
stos
sbb
xchg
jge
fisub
xchg
popf
arpl
xor
xor
dec
rcl
div
push
mov
pop
xor
dec
aad
repnz
repnz
ret
daa
jle
or
adc
cs
in
pushf
or
test
xchg
mov
stos
pop
and
into
(bad)
jae
add
mov
mov
dec
adc
lds
push
push
push
mov
int
jmp
getsec
jae
pop
mov
dec
(bad)
and
js
aas
xor
mov
dec
mov
lock
or
ret
arpl
xor
add
mov
add
ins
jge
push
ret
sbb
xchg
test
adc
imul
adc
pop
jl
push
adc
call
mov
inc
cmp
outs
leave
lock
mov
loop
and
cwde
xor
add
push
and
cs
cmp
int3
jmp
repz
es
lahf
xchg
in
ror
xor
stos
(bad)
mov
mov
pop
mov
cmc
dec
sub
(bad)
fs
call
mov
or
ror
cs
cmp
push
jns
cld
xor
lock
or
or
lock
call
mov
rcl
jp
andps
pop
aaa
cmps
stos
add
sub
dec
cmp
xor
cwde
out
mov
xchg
outs
mov
pushf
inc
cmp
and
xchg
mov
pop
jbe
jp
lea
mov
pop
and
ins
push
inc
(bad)
and
out
xor
sti
in
pushf
inc
cmc
or
push
movs
mov
shr
sbb
jbe
and
retf
ins
imul
push
js
adc
sbb
sbb
data16
xor
dec
cmp
mov
push
push
jns
stc
cmps
inc
sub
cld
xchg
jb
add
push
rol
xchg
sbb
add
lea
shl
inc
jne
loope
mov
mov
jae
fild
lea
xor
pop
mov
push
int
stos
inc
jmp
adc
cli
test
(bad)
jne
add
jae
gs
ds
inc
call
jb
arpl
jmp
int
pop
and
dec
out
and
jl
mov
xchg
ja
mov
sti
pop
stos
iret
sub
fwait
push
ins
xchg
addr16
push
mov
or
aad
mov
(bad)
stc
stos
test
ficom
push
push
out
(bad)
push
repnz
xchg
mov
mov
push
sub
outs
daa
add
mov
nop
test
add
mov
pop
(bad)
push
inc
pusha
add
jnp
pop
jg
mov
dec
call
push
inc
ror
cmc
outs
jecxz
aas
jns
pusha
dec
and
(bad)
sbb
jge
mov
sti
push
ret
xchg
jbe
in
lods
mov
sub
fstp
ss
rcl
les
push
aaa
push
jbe
and
cdq
xor
xchg
jecxz
mov
cmp
into
fcom
pop
fild
or
jle
aad
stos
bnd
xor
test
jmp
xchg
cmc
(bad)
std
(bad)
in
js
iret
cdq
mov
lock
ror
icebp
xlat
sub
mov
xor
fucomp
daa
jmp
stc
lods
add
sbb
cmps
dec
in
inc
jmp
je
dec
xchg
jecxz
retf
loopne
scas
and
and
add
mov
not
test
mov
(bad)
add
iret
mov
push
inc
push
sub
shr
scas
loopne
jbe
or
dec
mov
cld
aad
ja
sbb
fadd
fild
jge
pop
add
inc
sub
and
pop
dec
push
fimul
push
jge
repnz
inc
bound
push
or
jg
loop
lea
jg
cmps
jmp
addr16
mov
sub
test
xchg
xor
mov
(bad)
idiv
or
push
xchg
movs
rcr
arpl
aaa
cmp
aad
clc
and
enter
js
fldcw
cmp
xchg
inc
(bad)
mov
fld
cmp
or
sbb
das
push
ins
pop
push
dec
xchg
retf
ins
std
cmc
cld
aaa
push
ins
sub
cmp
jo
mov
popf
fld
ins
aam
out
xor
out
add
inc
cmps
clc
lahf
push
cmps
das
jmp
pop
loop
pop
pop
mov
xor
mov
sbb
cmc
sbb
pop
push
scas
jbe
lock
ret
jmp
aaa
fnsave
(bad)
fwait
dec
mov
inc
hlt
adc
addr16
aad
outs
inc
lods
mov
jg
rol
pushf
jmp
xor
dec
jp
stos
movs
xlat
jmp
outs
mov
ss
cmp
jle
adc
sbb
xchg
sub
push
test
into
mov
stos
add
sahf
es
repnz
dec
scas
mov
sbb
xor
setno
cli
mov
enter
adc
mov
bound
mov
out
xchg
stos
add
jmp
ja
adc
out
or
xchg
or
push
in
movs
test
call
jg
lahf
icebp
out
sti
loopne
cmps
jbe
xabort
sub
scas
or
pop
(bad)
dec
stos
or
jp
jge
add
into
pop
mov
sbb
inc
adc
dec
sub
dec
inc
je
cmc
out
cmp
adc
test
pushf
ret
cmp
pop
sbb
aaa
sbb
cmp
sub
or
dec
jge
mov
adc
(bad)
pushf
(bad)
xchg
fs
xlat
mov
mov
dec
adc
fwait
out
sahf
and
out
mov
or
scas
xor
adc
sbb
xor
push
or
jae
popf
idiv
mov
pop
je
lods
add
mov
sub
adc
gs
je
jae
pop
cmp
mov
sbb
lods
outs
pop
cmps
bound
push
push
xor
rcl
adc
inc
mov
ins
(bad)
dec
sub
inc
nop
inc
out
sub
xchg
mov
fs
jbe
pop
test
cmp
inc
mov
sub
and
retf
clc
ret
cwde
mov
icebp
pusha
idiv
data16
clc
rcl
jg
inc
or
ins
cwde
fstp
aaa
cmp
mov
sbb
in
pop
xchg
rol
out
push
fisttp
and
adc
inc
(bad)
into
scas
sub
xlat
mov
jns
fwait
mov
adc
lock
retf
pop
popa
xchg
jp
inc
sahf
dec
jmp
jl
lahf
loopne
repz
sub
mov
in
or
hlt
adc
pop
xor
lahf
fld
mov
sub
jmp
inc
pusha
js
push
fbstp
or
jle
mov
pop
pop
(bad)
retf
push
add
in
xchg
lds
xchg
xchg
adc
stos
jmp
sbb
mov
mov
dec
sbb
not
int3
or
(bad)
xchg
inc
call
cmp
idiv
out
sub
adc
mov
xor
jno
fs
push
mov
ins
int
jp
(bad)
cmp
loopne
push
adc
repnz
mov
push
icebp
je
mov
pop
mov
dec
popa
pop
shr
mov
(bad)
fmul
fstp
sbb
out
ja
or
xor
inc
mov
test
mov
pop
mov
out
inc
sub
cmps
pop
mov
jmp
nop
jbe
adc
popa
adc
sub
ins
and
add
loope
jb
cmp
push
dec
add
cmp
xchg
jmp
das
ja
sub
jle
dec
in
jb
and
xor
pushf
dec
xor
sbb
inc
jmp
ja
mov
fisttp
sub
ror
sub
(bad)
sub
cmps
ffreep
outs
cli
aaa
push
inc
movs
dec
inc
xor
(bad)
and
cwde
pop
lods
les
sub
lods
and
adc
neg
int3
xchg
ds
int
jns
daa
add
pop
mov
sbb
in
adc
cmps
sar
clc
or
or
sub
jle
xchg
fdivr
vpunpckldq
sbb
xchg
push
xlat
ret
int3
pop
mov
pop
mov
push
in
add
jmp
stos
sub
mov
cmp
out
adc
or
repnz
dec
mov
call
mov
jmp
ins
imul
mov
scas
inc
push
push
iret
int3
clc
lock
jp
or
enter
sub
mov
call
xchg
sahf
cli
jecxz
mov
add
into
popf
add
sahf
(bad)
cmc
mov
dec
cmps
popa
std
retf
pop
add
hlt
jle
bound
lea
fcomp
fwait
sub
dec
pop
sub
cmp
test
addr16
sub
mov
and
push
fsub
xchg
fstp
xlat
add
hlt
push
out
mov
mov
fiadd
adc
cmp
cmps
mov
imul
aam
pusha
js
(bad)
fcomp
mov
or
jmp
retf
add
sti
or
lds
xchg
mov
jmp
je
shr
int3
xor
add
xchg
mov
(bad)
in
aaa
xchg
adc
rcr
cli
imul
test
aam
push
int
lahf
xchg
mov
fsubr
stos
ja
test
test
icebp
pushf
pop
jne
push
xchg
inc
mov
call
scas
mov
pop
jecxz
xor
push
sbb
mov
xchg
xchg
mov
es
mov
cmp
jb
mov
lea
stos
jg
mov
xor
(bad)
ret
dec
mov
push
les
xor
sub
es
push
loope
enter
pop
adc
push
aad
jbe
call
inc
pusha
dec
add
cwde
out
cmp
clc
outs
out
inc
pop
add
daa
jmp
mov
call
int
mov
(bad)
push
pop
(bad)
in
ds
pusha
loopne
lahf
adc
fcmove
xchg
(bad)
js
sub
push
movzx
addr16
xor
pop
dec
or
lods
push
xchg
fwait
movs
push
jle
push
jb
dec
jle
or
sti
aam
adc
fwait
add
cmc
ret
mov
xchg
add
dec
push
int
ror
sbb
jmp
stc
sub
or
jl
int
push
dec
mov
jno
rol
cmps
mov
in
fcomp
dec
icebp
jecxz
jne
mov
and
pop
pop
int3
and
bound
(bad)
fsub
sub
mov
std
loopne
(bad)
jbe
mov
aaa
lock
jno
xchg
lahf
push
addr16
es
pushf
and
adc
jo
lods
test
lds
dec
adc
mov
leave
cmp
ficomp
mov
adc
movs
out
jmp
push
cmp
push
outs
mov
adc
int
inc
mov
inc
jae
lods
fst
jae
jnp
(bad)
jbe
das
jnp
in
out
add
adc
adc
and
jo
xor
and
in
jg
imul
data16
sbb
mov
dec
call
(bad)
dec
jge
fistp
stos
fs
popa
xchg
das
ins
(bad)
fdiv
or
fist
add
jno
icebp
and
sub
shr
mov
nop
fld
test
fs
dec
ins
cmps
inc
mov
sbb
mov
mov
xlat
cmp
push
int3
sub
xchg
in
lahf
test
fist
push
xor
ds
mov
sub
pop
mov
mov
(bad)
mov
and
adc
pop
add
retf
jl
imul
ins
repz
ins
sub
sbb
das
xchg
movs
shr
into
add
mov
in
dec
outs
call
mov
fs
sub
cmp
jbe
cmp
and
push
inc
es
sbb
add
into
push
or
cld
pop
arpl
sub
fs
clc
dec
imul
pushf
enter
mov
fld
retf
xchg
sbb
pop
cli
push
ret
sub
(bad)
pop
push
and
test
int3
dec
inc
shl
mov
ins
cmp
lock
xor
pop
mov
aad
xchg
xchg
jns
xchg
cmp
pop
push
cld
sbb
clc
das
imul
push
pop
mov
push
mov
addr16
xchg
inc
(bad)
mov
mov
stos
or
inc
ins
fcmove
(bad)
fs
add
push
or
inc
pop
sub
in
js
retf
stos
movs
or
and
sbb
(bad)
cmps
les
cmp
sbb
xor
xchg
sbb
push
jle
xchg
mov
leave
ins
loop
lahf
int3
lods
sbb
(bad)
sti
dec
out
xchg
xchg
sbb
out
push
sub
out
inc
call
jp
push
out
hlt
(bad)
call
pusha
sub
cmp
xchg
mov
or
jne
(bad)
cdq
cmp
inc
inc
adc
xor
push
pop
dec
pop
inc
repz
xchg
push
pop
push
cmps
jg
mov
xchg
movs
inc
and
push
aas
xor
mov
frstor
les
out
lahf
nop
inc
clc
test
mov
push
xlat
pop
sbb
cli
imul
or
movs
sub
jp
cdq
in
jae
iret
(bad)
and
xor
fst
cmp
jae
cmp
scas
int
xor
das
push
es
dec
(bad)
clc
scas
add
or
movs
xchg
scas
pop
pop
inc
lods
jg
std
adc
sub
dec
popf
add
stos
loope
enter
(bad)
repnz
dec
in
pushf
ja
mov
mov
dec
and
enter
in
loopne
adc
xor
fsubrp
xchg
jmp
or
fwait
sahf
cmp
push
retf
push
pcmpeqd
gs
push
xchg
aad
push
arpl
ret
mov
mov
out
aas
mov
pop
(bad)
(bad)
sub
mov
popf
or
(bad)
jmp
push
das
out
sub
popa
pushf
mov
mov
xchg
(bad)
push
in
xlat
repnz
add
stos
jle
hlt
or
fisubr
shl
mov
sbb
in
jo
mov
shl
xchg
inc
xchg
jmp
je
arpl
cmp
jmp
retf
dec
das
cmp
mov
mov
push
iret
mov
dec
lods
jg
aas
pop
jle
add
sti
mov
mov
lock
mov
imul
sub
sub
xlat
fs
add
out
adc
or
and
icebp
int
out
push
mov
lods
dec
push
outs
sbb
ret
jbe
cmp
or
inc
mov
push
ins
repnz
xor
push
lahf
sbb
idiv
int3
mov
daa
pop
aas
sub
fistp
sub
mov
inc
and
bt
out
and
nop
pusha
pop
daa
inc
xor
sub
test
fstp
sahf
sub
rcl
add
or
lods
outs
add
pusha
sbb
and
test
(bad)
mov
add
push
push
es
scas
cs
jb
mov
sub
ror
mov
jg
lea
cmp
enter
mov
std
pop
mov
cmp
dec
(bad)
and
lods
cli
jmp
es
jno
pop
int3
mov
lods
mov
sbb
push
mov
sub
dec
pop
scas
shl
push
out
loope
hlt
imul
mov
lea
mov
push
mov
push
mov
mov
sub
icebp
add
mov
rol
int
enter
ja
stc
bound
fs
mov
out
xlat
sbb
sbb
scas
aaa
fisttp
pop
push
jmp
in
and
ret
rcl
cmp
lahf
daa
jmp
pop
stos
sbb
mov
xchg
jo
jbe
std
cwde
push
mov
mov
in
push
sub
cmp
jle
icebp
push
pop
xchg
push
cmc
jmp
int
dec
xchg
mov
(bad)
movs
leave
jnp
mov
or
in
inc
enter
xchg
lds
mov
mov
hlt
daa
test
enter
sbb
cmp
pushf
aam
test
jo
out
jae
repz
or
lahf
push
lahf
xchg
push
ds
es
scas
pop
inc
(bad)
mov
ret
mov
pusha
adc
cdq
cwde
xor
fld
data16
sbb
test
sub
xor
pop
mov
stc
mov
(bad)
lods
push
cmps
cmp
(bad)
je
sub
cmps
jae
and
fimul
push
repnz
sbb
push
or
sbb
(bad)
call
pop
cld
lods
and
aaa
jl
call
ins
xor
push
and
(bad)
mov
ds
fmulp
adc
adc
inc
and
sub
sub
cmps
jbe
adc
mov
call
dec
mov
call
lock
fmul
nop
fwait
push
hlt
cmps
jbe
loop
or
loope
jge
xor
jno
cmp
mov
jns
inc
clc
sub
test
or
je
ja
lds
cmc
cdq
cwde
jbe
mov
jle
sub
mov
adc
stos
jle
cs
fisttp
adc
nop
or
je
test
shl
cli
mov
dec
push
push
pop
cli
or
xchg
push
cmps
xchg
sbb
pop
repz
inc
enter
inc
xchg
pop
stos
dec
sub
sub
stos
mov
into
pop
(bad)
adc
dec
push
fst
inc
shl
aaa
adc
xchg
mov
push
out
in
sub
loopne
aas
mov
push
into
inc
pop
add
into
outs
test
mov
das
mov
loopne
fisubr
lods
sub
lods
inc
push
movs
mov
jbe
repz
or
or
in
adc
pop
movs
dec
mov
dec
in
inc
xchg
push
sbb
push
sub
and
jbe
imul
xchg
retf
in
icebp
popa
jecxz
mov
pop
pop
mov
cmp
fwait
cs
and
jno
jb
adc
pop
int3
dec
xor
add
dec
test
sbb
adc
in
fiadd
jae
mov
inc
rcr
lods
xor
lods
mul
cwde
adc
daa
mul
and
pop
(bad)
fsub
test
aad
jmp
je
pop
and
movs
addr16
jl
mov
mov
dec
ss
std
imul
loop
ds
mov
push
cmps
xor
sub
dec
hlt
(bad)
mov
mov
pop
xchg
adc
sub
add
outs
das
ja
lea
cmp
sub
ins
stos
dec
and
add
shl
mov
and
adc
pop
sbb
push
shr
ror
shl
nop
daa
mov
push
sbb
call
and
and
call
scas
inc
inc
push
and
scas
xor
jmp
pop
jne
fwait
jne
es
xor
mov
inc
iret
sbb
xchg
div
and
test
or
or
push
cmp
int3
ins
sbb
sbb
lahf
jno
cmp
xlat
and
xchg
mov
test
ja
mov
retf
hlt
sbb
inc
loope
mov
xor
bound
stc
jecxz
aas
jb
sub
cmp
or
mov
push
push
cmps
pop
scas
cmp
sbb
dec
sub
lock
sub
test
fdivr
mov
cmp
jno
mov
push
xchg
jg
cmp
test
lods
fisub
arpl
(bad)
push
shl
pop
imul
out
rcl
add
add
dec
sbb
xchg
mov
jns
inc
vshufps
mov
pop
int
push
cld
(bad)
test
push
xchg
enter
mov
sbb
add
rcl
sbb
mov
mov
adc
fmul
mov
fcomp
cmc
jp
jg
mov
repz
jecxz
jbe
(bad)
sahf
inc
pop
jo
loopne
int
push
ds
sub
and
popf
mov
lock
mov
mov
mov
xor
mov
inc
nop
test
mov
jne
xor
jmp
lods
dec
mov
ss
jno
les
cmc
(bad)
jmp
fdiv
cmp
gs
scas
jl
xchg
and
test
pop
mov
lods
retf
int
retf
sub
push
out
or
jb
push
les
inc
jnp
pop
mov
and
and
idiv
jbe
jmp
into
pop
jo
clc
fild
pushf
push
jbe
pushf
push
outs
fidiv
xor
pusha
lea
mov
mov
pushf
push
cmps
and
(bad)
int
mov
inc
sub
scas
stos
xchg
enter
push
dec
push
stos
push
and
adc
push
lods
into
xor
xchg
aas
cmp
inc
jp
ja
les
pop
cmp
jp
shr
pop
pop
test
mov
jne
mov
test
icebp
add
inc
add
test
leave
(bad)
je
loopne
add
inc
into
inc
push
and
call
into
(bad)
and
fld
mov
cmp
gs
and
sub
xchg
leave
fmul
call
mov
jl
and
dec
cmp
mov
adc
sbb
shl
mov
or
and
nop
cs
sub
cs
test
std
in
(bad)
xchg
cmc
mov
push
add
fist
out
xor
xor
sbb
push
cmp
mov
pop
(bad)
(bad)
bnd
cmp
dec
retf
push
sub
sbb
das
push
ret
aad
cld
push
pop
ins
push
gs
mov
dec
mov
jae
add
and
xchg
push
mov
repz
cmc
pushf
cdq
jo
jmp
(bad)
ins
fld
sub
dec
sahf
push
in
jne
test
sahf
in
div
push
clc
mov
jns
retf
push
mov
cmp
cmps
jmp
fwait
push
or
rol
mov
mov
jle
ins
cmp
icebp
icebp
pop
(bad)
lahf
stos
adc
ror
out
mov
push
adc
ret
mov
shl
jo
add
add
push
mov
icebp
mov
sbb
xchg
gs
mov
mov
icebp
xchg
aaa
pushf
cmp
repnz
push
imul
inc
cld
imul
inc
ja
push
iret
add
jl
adc
push
mov
jnp
cmp
xchg
mov
fdivr
mov
js
fwait
je
fst
cmp
pop
cmp
xor
movs
shr
jae
add
sbb
pop
add
mov
fcomp
loop
sahf
xchg
movs
jle
xchg
in
jo
mov
ret
ret
cmp
mov
adc
xlat
adc
popw
cli
(bad)
pop
sub
mov
sahf
scas
cmc
sbb
das
pop
mov
imul
jmp
retf
mov
adc
div
jl
mov
imul
pushaw
out
repz
jnp
(bad)
fbstp
or
mov
test
or
fisttp
lods
mov
daa
dec
xor
inc
xchg
cmp
fs
icebp
jne
sbb
(bad)
jl
repnz
add
adc
(bad)
lds
call
adc
(bad)
mov
lahf
sub
ds
fdiv
mov
in
rol
ja
inc
fimul
rdmsr
lds
or
(bad)
jae
dec
in
out
xor
lahf
and
ror
mov
sub
ja
cmp
and
std
cmovg
rcl
xchg
pushf
imul
int3
sub
mov
push
popf
sub
jl
push
idiv
inc
test
int3
mov
mov
or
mov
mov
push
push
cmps
or
iret
cmc
bnd
or
mov
mov
mov
(bad)
adc
push
stos
inc
xchg
jecxz
shl
loop
mov
(bad)
(bad)
jae
(bad)
lahf
inc
daa
add
adc
iret
sbb
jbe
cdq
retf
mul
(bad)
jno
test
out
inc
pop
leave
lock
cmps
and
rol
mov
or
and
cwde
outs
or
pop
pop
fisttp
inc
or
dec
out
cmp
rcr
lea
out
push
sbb
xor
dec
mov
pop
call
pop
cmp
jecxz
ffreep
xor
or
fs
jp
jge
pop
in
mov
xor
mov
mov
mov
inc
add
xchg
jmp
jecxz
mov
push
fcomip
mov
int
(bad)
xchg
bnd
sbb
jl
mov
sbb
pop
push
jnp
xchg
sbb
push
cmp
cli
stos
cmp
push
in
or
mov
(bad)
mov
cwde
stc
inc
xlat
scas
loope
scas
push
js
enter
mov
rol
mov
outs
or
sub
sub
ins
inc
(bad)
repnz
dec
icebp
sub
or
mov
(bad)
scas
sub
sub
out
pop
xlat
mov
mov
jae
loope
out
movs
mov
scas
jp
imul
out
jbe
xchg
imul
outs
push
fiadd
mov
sar
mov
cwde
xor
and
pop
or
mov
dec
jp
xor
fstp
in
iret
cmc
movs
mov
push
xchg
mov
push
push
in
repz
std
add
hlt
retf
push
mov
jmp
loop
bound
(bad)
sub
dec
add
or
inc
lds
pushf
jbe
int3
sahf
and
sub
xor
clc
data16
sub
(bad)
fiadd
mov
inc
cld
addr16
shl
cs
and
mov
pop
dec
mov
mov
fwait
int
mov
xchg
enter
jbe
mov
jne
sbb
jp
jns
lods
sbb
add
mov
xor
mov
jbe
rcl
lock
shr
jb
sbb
fwait
mov
test
jo
call
dec
dec
cmps
or
sbb
or
nop
cmp
aad
gs
mov
inc
xchg
call
mov
jecxz
int
add
bound
outs
rol
pop
cmp
inc
mov
xchg
pop
inc
inc
sbb
sub
(bad)
push
aaa
dec
sub
and
aad
mov
pop
cmp
pop
movs
jbe
(bad)
cmp
fmul
fsubr
je
rcr
dec
loop
cmps
cmovne
stos
stc
in
push
inc
idiv
push
mov
jp
shl
or
push
ret
clc
mov
xchg
xchg
inc
ja
xchg
xor
push
cdq
sub
ins
hlt
mov
inc
rcl
repnz
jecxz
jge
and
jp
inc
pusha
push
pop
shl
mov
loope
dec
out
fnstcw
cmc
jp
sbb
div
loop
sti
inc
mov
sbb
push
in
xor
test
adc
les
je
test
jmp
mov
jne
icebp
adc
or
icebp
push
(bad)
test
enter
cdq
(bad)
lods
in
int3
push
add
inc
rcl
xchg
jo
ror
(bad)
xor
lods
push
(bad)
jmp
ficomp
nop
sub
sub
xor
mov
mov
popa
test
sub
and
mov
push
sbb
push
jmp
ret
mov
pop
jecxz
test
push
dec
adc
and
xchg
mov
mov
imul
mov
sbb
cmp
xchg
jle
mov
or
js
xchg
push
retf
and
mov
call
dec
adc
fnstsw
loopne
inc
popf
add
retf
(bad)
mov
stos
xchg
rcl
and
xchg
dec
inc
cmps
aas
inc
mov
mov
dec
pop
mov
and
sbb
mov
jg
sbb
retf
adc
pop
ret
lods
ja
(bad)
fs
push
loopne
mov
fld
loopne
in
jnp
cmp
jp
fsubr
adc
xchg
repnz
xchg
sbb
hlt
js
(bad)
mov
cmc
rol
out
cmps
stc
call
fs
push
sbb
dec
or
imul
or
shl
mul
in
jecxz
repnz
mov
pop
mov
push
outs
or
inc
in
in
es
pop
(bad)
jno
mov
xor
mov
popf
sub
mov
fstp
push
jb
inc
cmp
ins
pop
xor
leave
mov
leave
fs
jp
icebp
repz
in
or
call
fwait
cld
xchg
and
push
int
(bad)
xchg
mov
ret
cld
int
popf
inc
daa
hlt
movs
retf
or
retf
call
pop
(bad)
test
sahf
xor
add
push
(bad)
cdq
outs
lds
int3
movs
mov
hlt
push
icebp
cmp
test
icebp
add
hlt
sahf
sub
clc
fst
mov
repnz
repz
push
push
push
mov
and
mov
or
mov
mov
jl
lea
inc
and
sbb
jbe
cmps
xchg
popa
or
out
xor
cld
pop
fst
inc
xor
cmp
fimul
and
pop
mov
mov
pop
jge
mov
cmp
aam
retf
aam
mov
adc
mov
call
jbe
sbb
aaa
shr
dec
push
sub
stos
push
sub
aad
mov
mov
scas
mov
loope
sbb
sub
mov
sbb
push
inc
mov
push
and
jno
cmp
add
jg
push
das
int
cmp
inc
lods
lds
mov
retf
in
js
cs
and
jg
cdq
data16
dec
push
popa
push
or
nop
push
pop
dec
adc
dec
and
stos
sbb
cmps
int
mov
jmp
sar
gs
jmp
and
scas
jle
or
fsubr
add
pop
push
movs
push
or
push
imul
pop
movs
or
popa
call
ficomp
leave
pop
movs
ss
icebp
into
inc
xchg
das
or
adc
cmp
push
jl
dec
dec
enter
xchg
loope
mov
jecxz
nop
popf
mov
cmp
(bad)
aas
das
xchg
sub
into
pushf
clc
int
shr
leave
dec
shl
mov
ds
jno
repnz
into
arpl
into
mov
cld
jp
mov
mov
sub
mov
push
imul
test
test
and
inc
sub
retf
sti
sbb
scas
push
iret
mov
sub
sbb
add
in
dec
test
sub
push
dec
inc
and
(bad)
mov
push
jo
(bad)
aas
arpl
cmps
(bad)
mul
cmp
repz
mov
jge
xchg
cmp
inc
and
push
fs
pop
(bad)
pop
or
(bad)
(bad)
sbb
les
jl
mov
popf
lock
pop
or
in
or
pop
js
inc
jne
inc
bound
fs
dec
add
je
sub
xchg
mov
out
mov
push
mov
jnp
fstp
jae
ror
ds
fcom
repnz
jmp
test
or
xor
mov
and
in
nop
adc
jmp
out
movs
sbb
dec
xor
(bad)
dec
jb
dec
fwait
out
cmps
cs
inc
sbb
xchg
and
pushf
mov
push
aad
fnsave
aam
mov
sub
imul
dec
mov
mov
push
dec
repnz
dec
cmps
sub
dec
sbb
cli
scas
outs
ss
lods
and
xchg
mov
pop
mov
adc
mov
jmp
iret
or
into
jmp
(bad)
dec
into
shl
xchg
mov
add
lahf
pusha
shl
xor
xchg
pushf
push
push
pop
push
js
sub
push
push
aam
mov
add
clc
add
xor
(bad)
pop
fs
pusha
ss
loop
cmp
test
xchg
aaa
rcr
mov
aas
xchg
or
or
shl
les
xchg
dec
stc
jns
pushf
bound
sub
mov
or
arpl
out
retf
inc
imul
loop
dec
out
mov
aad
inc
sub
mov
(bad)
popf
push
scas
xchg
cdq
stos
ins
lea
sub
js
div
jae
xchg
mov
aaa
jb
cs
mov
push
add
ins
ror
jne
jmp
fidivr
jge
sbb
push
cli
xor
and
pop
cmp
mov
push
and
lock
xor
sub
clc
out
std
xchg
inc
pushf
xor
cdq
mov
push
prefetchnta
push
and
scas
mov
sbb
adc
mov
mov
cmp
into
leave
imul
push
mov
xchg
popf
push
js
mov
or
bound
mul
loope
xlat
dec
inc
nop
ror
jbe
add
dec
dec
lea
push
mov
dec
pop
mul
cmp
int
fadd
lock
adc
cli
test
adc
push
clc
push
mov
ja
pop
inc
push
lods
lea
jp
inc
xchg
xchg
sub
jge
jnp
cs
and
push
mov
xchg
test
xor
fistp
sar
push
clc
and
jecxz
lods
sbb
sbb
mov
dec
cdq
shl
retf
(bad)
xor
mov
stc
mov
pop
mov
outs
sub
fisub
push
cli
movs
cld
xor
popa
sbb
test
mov
into
xor
sbb
inc
xor
xor
adc
clc
(bad)
rcr
not
push
stos
sbb
leave
cwde
inc
dec
sub
out
popf
jmp
mov
fld
lock
and
imul
mov
cmps
stos
and
mov
dec
jge
mov
or
out
out
cld
test
inc
mov
push
dec
loope
dec
mov
repz
in
or
inc
cmc
fwait
or
dec
test
scas
cmp
jmp
cmp
int
cmp
mov
(bad)
mov
jno
iret
cli
aad
jno
add
pop
hlt
lahf
or
aam
out
and
add
test
push
aas
push
pop
in
loope
inc
xor
icebp
fwait
inc
imul
fldenv
fcom
int
daa
cmc
mov
stos
mov
dec
repz
sbb
popa
in
std
cs
movs
xor
pop
pop
xor
xchg
cmp
imul
pop
iret
xchg
dec
xlat
inc
lods
push
stc
inc
mov
aaa
ret
popa
jg
in
leave
lds
inc
mov
fndisi(8087
repz
out
ficomp
push
inc
rcr
test
jl
int
ret
jle
cmp
mov
inc
cmps
shl
cmps
daa
(bad)
(bad)
and
ins
push
cmp
lods
add
gs
mov
rol
dec
xchg
xor
adc
sub
cmp
lods
daa
dec
push
cmp
push
les
movs
mov
stos
imul
adc
(bad)
mov
ja
inc
inc
rcr
xlat
(bad)
or
retf
or
push
mov
cmp
sbb
dec
jl
adc
jl
mov
fwait
xchg
mov
aas
jnp
sti
sahf
enter
leave
push
adc
sub
adc
rcl
pop
or
jle
pop
test
lahf
stc
sub
and
retf
shl
test
sub
imul
xchg
fild
mov
mov
mov
inc
pop
jae
cdq
cmc
pop
xchg
retf
xchg
push
addr16
xor
inc
call
scas
mov
scas
push
pop
xchg
iret
fdiv
adc
cld
loopne
fbld
ins
scas
js
xor
cmp
mov
cmp
jmp
inc
mov
popa
(bad)
inc
jae
movs
push
mov
xchg
inc
cli
xor
mov
add
inc
push
hlt
pop
lods
dec
dec
in
ret
retf
fiadd
pop
push
movs
aam
ins
pop
call
mov
hlt
xor
rcl
mov
mov
ins
xchg
cmp
repnz
dec
lods
adc
ins
ins
xchg
push
(bad)
push
adc
out
js
not
enter
pop
shl
out
js
push
shl
(bad)
hlt
loope
dec
pop
pusha
xchg
dec
imul
xchg
pop
xchg
mov
mov
outs
out
push
das
enter
mov
mov
(bad)
js
push
mov
push
sub
sbb
xchg
xchg
rcl
and
lahf
dec
push
fs
ja
jnp
add
fwait
rcl
cmps
nop
fwait
push
dec
and
and
mov
and
jg
mov
sbb
inc
ret
and
(bad)
sbb
inc
jnp
add
std
cmp
cmp
imul
clc
call
mov
sahf
hlt
scas
mov
mov
push
xchg
add
mov
or
iret
(bad)
mov
jb
aas
add
mov
ret
popf
mov
inc
retf
dec
pop
loope
xor
xor
leave
dec
or
xor
xchg
mov
(bad)
fnstsw
cmp
jp
inc
ss
cmp
add
xor
push
push
inc
(bad)
call
mov
cdq
or
int3
xlat
jns
jnp
out
hlt
outs
adc
jg
popf
stos
(bad)
mov
xor
jae
imul
dec
lea
inc
pop
leave
and
sti
enter
push
jmp
dec
aaa
sahf
jbe
sub
dec
mov
push
or
add
popf
cmps
push
push
mov
movs
mov
mov
test
stc
push
mov
xchg
push
sub
pop
mov
test
inc
dec
aaa
loopne
scas
push
loope
into
and
xlat
sub
sub
dec
cdq
lods
xchg
push
int3
sahf
rcl
sbb
je
mov
jne
ror
out
mov
mov
imul
fist
jp
lock
outs
fwait
push
gs
cmps
add
das
mov
xchg
imul
(bad)
jb
loope
cmp
lods
xchg
ds
cmps
enter
add
test
adc
mov
and
cmp
lods
or
daa
adc
or
(bad)
xor
mov
pop
in
jle
je
adc
and
and
fcmovnb
addr16
adc
or
push
push
cmp
std
mov
loop
cdq
in
jb
jecxz
inc
addr16
shl
cmps
pushf
jbe
rcr
adc
dec
test
ins
out
xor
arpl
push
fnsave
stos
push
push
pop
xchg
cwde
mov
push
lods
xchg
rol
add
mov
inc
or
mov
push
ret
(bad)
(bad)
hlt
jns
aam
fisttp
or
push
mov
xor
in
loopne
fld
daa
push
imul
fs
and
ret
mov
jle
and
int
xor
scas
imul
mov
jge
cmps
sbb
add
mov
scas
jg
in
adc
adc
xchg
cdq
and
cmp
lods
pop
call
dec
inc
or
retf
ds
sahf
sahf
ret
aad
push
int3
addr16
xchg
adc
fnstsw
jmp
int
pop
mov
adc
sub
lods
dec
cmps
fcomp
in
rol
aad
or
xchg
(bad)
push
xor
pop
adc
mov
outs
mov
push
mov
nop
inc
inc
xchg
nop
push
xchg
fsub
outs
or
jne
outs
retf
jl
popa
jo
rcl
push
rcl
pop
fsubr
ret
adc
inc
(bad)
and
test
imul
jmp
jp
aad
and
dec
out
sub
call
in
outs
inc
xchg
and
in
or
movs
and
aas
cmps
ins
jnp
call
imul
test
add
icebp
xchg
cwde
and
movs
fcomp
pusha
cmp
push
push
mov
repnz
fmul
dec
pop
add
add
sbb
sbb
xor
sbb
cmps
cdq
sahf
xchg
lods
sbb
cmps
dec
mov
xchg
cmp
or
test
stos
xchg
xor
push
hlt
or
sub
and
mov
adc
xlat
cdq
or
out
addr16
sbb
pop
pop
or
int3
out
push
cmp
lea
in
into
mov
outs
stos
punpcklbw
inc
add
sub
pop
dec
push
xor
aad
cwde
push
je
inc
xchg
push
or
int
push
and
ror
rcl
test
mov
lds
ret
cli
fucomp
dec
aaa
fucompp
jmp
mov
mov
repz
jge
sub
add
mov
ds
cpuid
mov
call
mov
cld
rcl
fs
pop
xor
cmp
es
cli
stos
fnstcw
push
push
stos
loop
(bad)
sti
cmps
sub
clc
or
lods
inc
ror
mov
gs
ret
dec
lods
cld
sbb
jmp
cmps
cmps
xchg
sub
adc
shr
rcl
in
dec
sub
retf
adc
cmp
mov
cmp
jle
mov
xchg
mov
mov
add
jnp
push
add
fldcw
aad
pop
jg
mov
lock
(bad)
and
(bad)
imul
inc
neg
enter
or
daa
fs
mov
cmp
mov
addr16
mov
sbb
and
mov
cmp
leave
adc
jne
mov
into
sbb
fst
push
add
cmp
out
xchg
push
sti
dec
lds
and
xchg
retf
ret
outs
imul
faddp
dec
sar
(bad)
fxch
sbb
adc
ds
(bad)
out
jae
imul
test
outs
sbb
(bad)
hlt
pusha
ja
adc
scas
loope
ins
add
int3
push
imul
add
out
mov
xchg
aam
js
imul
imul
in
mov
addr16
retf
pusha
mov
les
push
mov
fist
sub
and
es
xchg
cwde
outs
nop
pop
out
cli
jp
push
push
cli
xlat
jmp
sbb
jp
xchg
sti
dec
je
fwait
mov
out
mov
xchg
mov
stc
dec
push
mov
inc
cs
push
fs
xchg
push
outs
inc
stc
push
ret
sbb
ins
(bad)
arpl
cmp
xchg
stos
jns
pop
lsl
(bad)
inc
rcl
mov
ds
dec
sbb
movs
aaa
(bad)
push
xor
inc
sbb
pop
xchg
xchg
movs
xor
fstp
push
mov
mov
test
xchg
retf
xchg
ret
icebp
call
call
leave
inc
clc
nop
fdivr
mov
mov
push
mov
or
adc
dec
cmc
(bad)
call
int3
cmps
lods
outs
jno
outs
xor
adc
imul
(bad)
xchg
push
call
(bad)
jb
mov
pop
push
xor
sub
dec
add
outs
shl
rcl
cmp
adc
lea
std
addr16
pop
lds
(bad)
jl
jo
rol
inc
call
stos
xor
pop
ret
out
mov
(bad)
jmp
inc
inc
sub
bound
movs
aas
adc
jg
and
xor
nop
cmp
repnz
loope
enter
fwait
dec
add
test
daa
adc
add
or
inc
icebp
jbe
add
sbb
outs
jmp
call
stos
shl
or
sbb
mov
fcom
push
in
movs
(bad)
cli
jge
call
icebp
pop
xchg
adc
enter
mov
rol
jmp
movs
xchg
rcr
cdq
push
fs
daa
dec
jp
xchg
dec
xor
enter
aas
xlat
mov
pop
adc
and
mov
(bad)
cs
add
test
xor
push
sub
mov
cmp
xor
ins
loope
pusha
shr
adc
daa
xor
xchg
jne
or
jns
jno
adc
mov
dec
mov
cmps
sti
mov
xor
sahf
jns
dec
inc
push
add
mov
push
outs
adc
call
adc
ficomp
mov
mov
add
arpl
xor
rcl
call
in
movs
int
fmul
sub
dec
(bad)
sub
push
mov
(bad)
std
in
dec
dec
cmps
mov
add
movs
in
(bad)
ja
cmp
cmp
add
fistp
jecxz
dec
cmp
sbb
dec
dec
jno
xchg
(bad)
jl
stos
inc
mov
push
ds
cmps
inc
mov
cld
movs
(bad)
mov
loopne
movs
nop
ja
mov
lods
sub
xor
pop
cmp
sub
fsub
mov
add
adc
mov
int
xor
je
mov
int
lds
out
sub
icebp
in
push
fsub
sub
push
ret
loope
push
push
retf
sub
pop
clc
mov
push
sti
ficom
mov
cmp
jns
fsubp
push
add
pushf
jno
jb
dec
pop
add
loopne
mov
int3
xor
cmps
xchg
mov
lods
in
xchg
mov
shl
stc
(bad)
jmp
push
mov
adc
repz
sub
pop
imul
inc
dec
jb
xchg
cmp
or
inc
das
shl
jg
sbb
push
inc
retf
jge
daa
inc
jnp
loopne
in
push
fimul
fsubr
subps
out
pop
jecxz
arpl
adc
test
(bad)
into
lock
inc
int3
sub
sub
jle
mov
iret
adc
sub
or
pop
push
xchg
popa
mov
mov
adc
sbb
cs
push
mov
cmps
lea
jmp
cli
test
fist
test
sub
xchg
lock
sub
push
cdq
pop
mov
rcr
retf
inc
in
cmp
std
test
xchg
pop
jecxz
adc
cmp
dec
dec
or
push
std
loopne
shl
and
cwde
ret
xchg
enter
mov
sar
mov
jmp
jmp
std
inc
xchg
cwde
xchg
or
shl
cmp
pop
fcom
loopne
mov
adc
cld
pop
fstp
aam
xchg
xchg
clc
aam
popa
lds
or
inc
add
out
xchg
(bad)
aad
push
lods
pop
push
xchg
repz
inc
outs
push
cmp
in
dec
fnstenv
not
repz
mov
sub
mov
push
xlat
push
jo
repz
inc
cmps
hlt
inc
dec
and
cs
ins
jge
(bad)
pop
mov
sbb
and
icebp
mov
enter
cmp
test
cmp
sub
adc
dec
sub
or
rcl
call
push
dec
scas
and
das
add
or
push
jecxz
arpl
cdq
mov
sbb
inc
pop
inc
fdiv
pop
sub
pop
outs
push
popf
adc
and
fnstcw
add
xchg
or
push
(bad)
cmp
pop
cmps
out
rol
jnp
jne
mov
fcomi
leave
pop
pushf
aas
lahf
inc
push
pop
mov
neg
repnz
dec
sbb
int
retf
push
and
jbe
push
leave
ffreep
xchg
idiv
push
and
mov
adc
cmps
push
in
hlt
mov
xchg
(bad)
xlat
inc
xor
popa
push
imul
push
cmp
enter
mov
stos
jmp
xor
sbb
inc
rcl
mov
xchg
adc
jno
xchg
pop
outs
ficomp
fs
cld
in
icebp
jp
cld
cmp
out
data16
leave
fiadd
jne
popa
mov
jb
jge
xchg
ficom
pop
pop
or
add
xor
mov
push
rol
cdq
js
jne
cdq
cmp
lods
cmp
ret
out
xchg
cmp
mov
adc
mov
sub
je
pop
xchg
movs
rcr
call
test
test
fst
test
enter
bt
js
(bad)
push
arpl
in
hlt
sub
mov
mov
and
jns
jle
and
xor
jns
repnz
aad
scas
sub
popf
jmp
ficomp
mov
mov
adc
outs
xor
add
into
imul
lods
jno
aam
test
mov
stc
xchg
sbb
aam
lea
push
mov
add
das
imul
stc
mul
mov
test
pop
inc
sub
inc
pushf
xchg
inc
fwait
dec
sub
jmp
push
add
xchg
inc
cdq
(bad)
int
dec
jo
xor
cmps
or
outs
pop
stos
stos
std
adc
mov
push
rcr
mov
ss
add
test
out
stos
inc
movs
retf
push
mov
jnp
mov
add
pop
mov
mov
jnp
(bad)
sub
inc
add
jno
ret
int3
fnsave
in
jle
sbb
out
sbb
into
xchg
loope
ret
fisub
xor
inc
mov
mov
in
sbb
dec
cdq
pop
adc
sahf
test
mov
sub
dec
das
dec
add
pop
pusha
jl
inc
aas
popa
ss
rcr
ds
or
in
jns
jns
fnstcw
lock
nop
xchg
neg
xchg
xor
or
mov
or
or
(bad)
jmp
mov
jne
mov
or
cmps
xchg
hlt
mov
xor
mov
inc
or
fbstp
sbb
cwde
stc
ret
adc
push
(bad)
inc
cmps
sar
loope
cmps
scas
in
out
dec
cmc
test
mov
xchg
cwde
hlt
adc
cmp
push
jmp
inc
dec
call
lods
test
imul
cmp
loope
xchg
and
loop
xchg
ror
push
adc
xchg
mov
outs
sub
cmp
dec
(bad)
mov
stc
cmp
lahf
imul
xchg
fnstcw
pop
or
mov
outs
adc
xor
hlt
icebp
shr
sbb
push
sub
popf
stc
add
repz
cli
mul
in
mov
jae
dec
retf
inc
jg
push
aam
add
jo
popf
fistp
test
xor
or
mov
or
jns
fsub
pop
call
adc
(bad)
push
cli
cmp
xor
jne
test
mov
add
movs
pop
scas
xlat
adc
pusha
push
and
stos
sbb
lds
mov
or
inc
sub
leave
gs
xor
inc
fdivr
cs
push
fimul
nop
(bad)
and
stos
mul
or
xchg
cmc
jmp
fcmovnb
pop
add
or
cmp
jge
cmp
mov
ret
sbb
mov
sub
out
sbb
xchg
xchg
jmp
stos
push
gs
sub
(bad)
sub
push
shl
cmp
popa
sub
inc
mov
xor
sub
push
mov
ror
xchg
hlt
aad
mov
(bad)
les
or
xor
retf
xchg
xchg
fdiv
cmp
sub
shld
popf
scas
mov
les
jp
mov
popw
iret
adc
mov
shl
movs
or
jle
jp
out
adc
pop
push
stos
sub
out
cmp
inc
pop
and
pmovmskb
retf
or
mov
(bad)
hlt
scas
bound
fnstenv
inc
mov
cmp
mov
and
jo
stos
test
mov
ins
push
mov
mov
dec
xchg
sbb
jge
aas
sub
scas
je
dec
inc
adc
les
lds
ss
pop
scas
(bad)
pop
push
sub
call
popa
fld
ret
mov
adc
xchg
or
and
jg
and
stos
push
mov
pop
add
loopne
cdq
cmp
sub
cmp
(bad)
stc
mov
jmp
inc
jbe
or
jb
adc
repz
in
(bad)
int
ins
fidiv
jp
mov
in
stc
inc
mov
stc
(bad)
out
push
(bad)
add
mov
lods
shl
outs
(bad)
out
push
xchg
sbb
gs
xor
icebp
sbb
and
jne
dec
aas
mov
cmc
std
mov
adc
pushf
(bad)
cmp
xor
push
xchg
in
adc
push
test
pop
mov
sub
pop
mov
mov
cmp
mov
call
loope
or
iret
pop
xchg
xchg
push
pop
ja
cmps
lds
retf
jge
dec
out
or
shl
inc
mov
pop
adc
dec
stos
mov
adc
xlat
scas
sbb
call
shl
hlt
jmp
fst
adc
ja
popf
int3
fistp
icebp
aad
clc
stc
rcr
fidivr
(bad)
or
repz
jmp
rcl
jmp
rcl
out
es
jmp
in
fsub
mov
lahf
xchg
cmps
shl
scas
push
pop
repnz
push
pop
dec
sbb
add
call
mov
fistp
mov
test
scas
add
ds
inc
push
stos
push
push
sbb
ja
es
mov
and
movs
sahf
sub
ds
imul
add
cmp
call
xlat
movs
rcl
add
or
mov
jl
or
repnz
addr16
fadd
shl
sbb
frstor
sbb
add
sti
test
xchg
adc
dec
dec
mov
shl
das
sub
sbb
icebp
sti
add
out
jae
or
cld
dec
fbld
pop
jnp
xchg
mov
xor
sahf
fmul
call
aaa
leave
mov
jnp
(bad)
pop
movs
xchg
fs
rol
mov
fiadd
inc
stos
pop
push
daa
lahf
jl
jmp
sbb
fcom
ins
outs
es
dec
push
enter
mov
jp
std
(bad)
repnz
test
jmp
in
jp
push
int3
fstp
mov
pushf
test
ins
sub
lock
loope
xor
ins
push
ss
cli
add
repnz
mov
mov
stos
xor
pop
not
pop
fiadd
test
fwait
dec
push
mov
enter
pusha
xor
mov
xor
xchg
(bad)
sti
aam
push
inc
sti
out
ror
mov
cmps
mov
pushf
cmp
cwde
cmp
into
jns
sub
imul
pop
fwait
icebp
cmc
fisub
sti
mov
clc
mov
cmp
fst
sti
loop
push
mov
out
mov
jl
jp
push
inc
movs
xor
clc
cdq
push
jecxz
mov
outs
pusha
xchg
sbb
cmc
pushf
leave
fwait
xchg
iret
jecxz
scas
loopne
in
or
sub
icebp
daa
mov
or
outs
cmp
call
jns
mov
push
stos
or
out
outs
add
dec
mov
ror
shl
or
mov
movs
xor
jecxz
jg
test
xor
mov
scas
data16
dec
cs
cwde
or
jle
test
jp
adc
lock
call
dec
sbb
movs
cmc
pop
push
jno
popf
clc
retf
popw
xlat
and
jnp
das
imul
mov
inc
mov
(bad)
jle
(bad)
xor
and
dec
jb
stos
jp
xor
lods
or
arpl
cdq
and
sbb
and
in
push
fistp
add
cmp
cmc
rol
popf
sub
test
xchg
out
add
out
mov
push
inc
cmps
sub
push
or
lea
pop
cmps
jg
sbb
and
rol
outs
nop
shr
lods
mov
es
xchg
sub
sbb
jge
sbb
idiv
jno
stc
push
stc
inc
sub
mov
mov
or
xchg
sbb
cmp
mov
stc
(bad)
scas
frstor
call
pop
add
ret
pop
dec
push
js
xchg
int
(bad)
and
rep
mov
and
mov
mov
daa
xchg
repnz
jmp
js
cmc
(bad)
dec
mov
xor
je
loope
popa
movs
popa
mov
xchg
fs
fiadd
push
js
sbb
xor
mov
lock
or
js
in
xchg
cdq
aad
das
xchg
stos
sbb
pop
sub
loopne
xchg
jns
xchg
jb
shl
jne
pop
jo
in
xchg
push
cmps
loop
shl
push
push
cmp
xchg
je
sahf
xor
icebp
sar
jo
cmp
into
or
dec
inc
(bad)
cmp
les
mov
inc
gs
inc
sub
xlat
push
(bad)
bound
mov
shr
sub
dec
mov
repnz
mov
mov
icebp
mov
push
mov
inc
cmp
lods
inc
shl
dec
ins
call
(bad)
in
shl
dec
mov
cs
push
push
add
dec
sahf
dec
push
fistp
cmps
sbb
mov
mov
jae
aaa
(bad)
in
jnp
hlt
out
out
aas
scas
call
ficomp
xor
jmp
jno
pop
dec
dec
pop
and
cmc
stos
add
xchg
mov
aam
test
inc
mov
or
shl
int3
scas
lock
jns
xchg
iret
inc
add
xor
ja
sar
enter
pop
sub
mov
div
lods
sahf
stos
rol
icebp
das
gs
mov
clc
ret
imul
adc
es
push
xchg
ret
pop
inc
nop
and
add
dec
jns
or
jmp
arpl
fsub
outs
sub
xor
imul
data16
jbe
sbb
mov
repz
cmp
fucomp
push
cmp
cmovnp
pop
out
push
shl
mov
repz
js
fistp
lods
in
clc
mov
jae
jne
mov
ins
mov
repnz
je
sbb
stos
cdq
iret
test
fwait
push
test
repz
aas
pop
movs
sub
jmp
add
mov
xor
xchg
cwde
aad
dec
adc
xchg
movs
adc
aam
imul
sbb
cmp
ficomp
push
bound
mov
inc
(bad)
js
inc
push
or
scas
popf
and
jle
push
dec
push
jno
xlat
or
ss
mov
in
aaa
nop
bound
pop
cld
das
sub
and
pop
jns
jg
lea
dec
push
lea
or
inc
or
test
int3
xchg
mov
arpl
pop
sub
jmp
dec
adc
test
imul
pop
lods
je
sahf
les
mov
jns
(bad)
jmp
scas
je
repnz
icebp
pop
iret
call
outs
shl
and
enter
pop
cli
lahf
cld
or
test
inc
dec
and
pop
rol
jno
inc
jno
push
mov
jmp
mov
in
and
xchg
popa
enter
fisubr
cmp
ror
cli
rol
jmp
mov
add
pop
mov
loop
add
mov
mov
fucomp
pop
jg
pop
lock
mov
scas
pop
ins
ins
jl
dec
inc
outs
arpl
adc
sbb
sub
shl
mov
mov
hlt
xchg
sub
std
ss
mov
mov
ja
or
sub
call
pop
rcl
(bad)
xchg
sub
hlt
call
(bad)
pop
xlat
mov
(bad)
ret
pop
dec
fnstcw
fisubr
aas
cmp
xchg
xor
xlat
lods
and
push
out
xor
xchg
lea
rol
ss
jb
push
stos
sbb
movs
js
jge
pop
hlt
loop
sbb
lea
mov
call
cmp
dec
jp
jbe
or
(bad)
xchg
xor
mov
cld
mov
(bad)
imul
mov
call
cmp
and
fstp
sar
mov
xchg
add
cmp
(bad)
daa
or
lds
aas
push
add
jmp
sbb
lahf
jmp
js
mov
bswap
daa
ja
pop
dec
xchg
fmul
adc
or
lea
scas
pop
retf
push
neg
dec
pop
scas
cmp
leave
mov
jae
mov
xor
push
push
or
xchg
sbb
scas
mov
lods
adc
stos
inc
das
addr16
outs
cmp
mov
jbe
add
fbld
(bad)
stos
lods
div
in
xor
mov
in
sbb
pop
repnz
test
push
cmps
sub
and
imul
aas
add
jecxz
jo
xor
inc
mov
or
retf
cmp
(bad)
call
shl
arpl
pop
loope
stos
and
je
cwde
inc
mov
mov
std
jecxz
or
xchg
nop
dec
sbb
mov
mov
push
popa
mov
inc
sub
sub
or
ret
xor
int3
xor
lods
push
data16
pop
out
xchg
ret
or
mov
outs
mov
imul
cwde
jmp
mov
(bad)
add
push
and
adc
xlat
dec
mov
std
lea
sbb
lock
adc
push
test
sbb
rol
adc
mov
enter
sar
lea
add
and
into
outs
pop
fist
std
mov
jg
ja
push
and
fidivr
and
(bad)
push
retf
pop
(bad)
daa
out
int3
add
cmc
mov
jecxz
pop
aas
scas
jmp
and
sub
sbb
mov
mov
sbb
ror
scas
out
dec
add
out
cmp
xchg
cmp
push
add
mov
sbb
movs
sub
aaa
mov
or
xor
enter
xchg
xor
mov
cmp
mov
add
test
mov
mov
out
xchg
push
jle
push
movs
or
fstp
adc
out
pop
std
aaa
(bad)
aas
inc
je
rcr
ss
ins
nop
push
lahf
(bad)
or
movd
mov
int
mov
call
pusha
fcomp
fcomi
and
add
cli
adc
mov
push
cwde
cmp
sbb
jl
inc
inc
xor
inc
sub
mov
and
mov
fisubr
stos
mov
in
jg
jl
and
inc
(bad)
mov
lea
add
fidivr
idiv
inc
call
(bad)
xor
jbe
inc
cmp
cld
(bad)
int
jl
in
fcomp
aaa
mov
das
inc
ret
jmp
int3
jnp
cmps
sub
push
call
movs
cmp
push
outs
or
pusha
pushf
xor
nop
push
jmp
movs
cmp
repz
std
stos
pushf
fcomip
sub
jmp
(bad)
and
and
or
ret
jge
jns
idiv
push
mov
push
repz
mov
ins
iret
push
xchg
mov
push
cli
dec
mov
mov
(bad)
push
and
or
push
jno
mov
cwde
or
icebp
jmp
nop
fild
push
ret
ror
and
(bad)
sahf
pop
cmp
dec
mov
pop
popf
push
jmp
pop
adc
xlat
(bad)
pop
leave
xchg
inc
iret
movs
in
scas
mov
xchg
ins
movs
xchg
das
mov
and
xor
stos
stos
mov
rcr
in
out
mov
jl
xchg
je
jo
bound
push
jge
jo
sub
mov
ret
test
arpl
jnp
pushf
mov
inc
not
sbb
pusha
bound
xchg
(bad)
(bad)
fist
(bad)
leave
xchg
jg
(bad)
int3
push
inc
and
pop
popf
lods
mov
(bad)
fisub
mov
sub
cmps
push
and
pop
inc
push
test
mov
mov
xchg
dec
fnstsw
enter
aaa
and
push
push
test
add
aad
js
xor
adc
mov
jmp
push
repnz
call
mul
cmp
push
cli
jmp
jns
mov
lea
inc
std
push
repz
adc
or
jge
jg
(bad)
cmp
mov
and
scas
and
push
jp
mov
out
jg
sub
mov
sbb
jno
ins
and
inc
popa
dec
mov
mov
add
adc
out
popf
scas
addr16
bound
lock
sub
jl
mov
cli
in
(bad)
adc
jo
or
mov
add
imul
addr16
xchg
std
pop
jg
int3
sbb
cld
pop
lock
retf
mov
add
pop
or
mov
aas
out
out
xor
inc
or
scas
retf
clc
sbb
popa
inc
sbb
call
cmps
push
into
or
pop
retf
sbb
in
cdq
pushf
movs
push
xor
gs
pop
mov
jnp
cmp
jg
inc
punpckldq
outs
or
pop
test
xchg
scas
xor
pop
pop
cmp
call
(bad)
mov
daa
jo
cld
stc
inc
aad
and
repz
retf
mov
in
mov
mov
dec
retf
mov
jae
mov
sbb
cmps
pop
das
jae
(bad)
movs
adc
jmp
xchg
mov
stos
mov
mov
adc
inc
push
add
test
push
sti
cld
pop
xchg
rol
movs
arpl
lods
test
addr16
dec
jp
dec
sbb
pusha
adc
out
mov
cmp
jo
sbb
mov
loopne
mov
xlat
test
aad
and
or
stos
xor
out
scas
mov
enter
call
add
aaa
cmp
adc
add
cmp
xor
xchg
push
cmp
movs
sbb
cmps
ret
nop
mov
in
ins
xor
call
sbb
repz
xchg
in
into
add
xchg
adc
jg
int
bound
pushf
xchg
outs
xor
imul
fsubr
mov
adc
test
scas
addr16
jns
lds
sti
ficom
mov
inc
mov
pop
jmp
fld
test
imul
arpl
dec
lock
push
add
xor
popf
ja
sti
(bad)
dec
jnp
out
scas
push
xor
ja
imul
adc
out
inc
in
out
call
bound
outs
add
movs
stos
loopne
pop
sbb
xchg
test
in
inc
inc
jp
ins
push
and
iret
bound
or
and
adc
jecxz
xor
mov
inc
mov
mov
test
add
mul
into
popf
retf
sbb
fnstsw
movs
pop
fsub
or
dec
xchg
mov
push
push
sbb
xchg
xchg
lods
shl
test
mov
xor
mov
add
inc
xchg
and
sbb
in
nop
sbb
fstp
movs
and
sub
aaa
jmp
xchg
inc
inc
mov
sub
inc
in
jmp
es
aas
bnd
retf
cmp
xchg
mov
push
sti
mov
clc
adc
cs
jb
scas
js
and
push
dec
cli
push
jmp
dec
(bad)
neg
test
dec
pushf
push
jb
(bad)
jno
(bad)
dec
dec
out
(bad)
(bad)
gs
scas
movs
in
jb
mov
xchg
mov
mov
inc
xchg
xchg
sub
call
adc
sbb
fisttp
lods
xor
inc
add
je
adc
test
pop
or
(bad)
add
add
jbe
movs
repz
lds
jmp
jns
adc
add
add
fild
outs
xchg
dec
ja
retf
setns
push
mov
ffree
jmp
shl
xor
push
aas
add
pop
xor
mov
add
jno
repz
sub
pop
jecxz
pusha
ins
push
ror
sbb
adc
je
retf
push
pushf
cmp
pop
mov
and
fistp
addr16
push
push
xor
repz
xor
mov
mov
call
pop
xchg
jl
je
push
scas
call
fdiv
xor
pop
push
lds
jge
xchg
fs
outs
(bad)
sbb
dec
cmp
add
mov
adc
pop
add
out
(bad)
push
mov
push
mov
imul
jb
fnstcw
ins
sub
into
repnz
xor
pop
push
lods
rcl
and
xor
jle
push
aaa
out
inc
stos
shl
fs
cmc
inc
adc
add
pop
jo
fisub
jl
add
(bad)
push
stc
les
test
pop
fsub
pop
rcr
jae
ins
ja
and
xchg
and
sar
ret
push
dec
fiadd
mov
xor
popf
movs
adc
test
setge
push
xchg
aad
arpl
das
dec
mov
and
cmc
jecxz
inc
cwde
mov
pop
inc
adc
shl
jb
not
sbb
outs
cmp
sbb
shl
add
movs
adc
sahf
hlt
pop
xchg
test
ret
scas
cmp
adc
rcl
push
mov
mov
scas
pushfw
push
aam
div
popa
inc
xchg
sbb
mov
movs
ins
jge
push
test
adc
xchg
cmp
lods
pop
push
pop
test
test
dec
mov
jge
cmps
cmp
inc
push
pop
inc
dec
imul
not
lds
daa
jne
adc
push
mov
(bad)
jmp
jle
daa
mov
push
pop
call
cmp
sub
stc
dec
rcl
xlat
cld
stc
pop
leave
pop
ins
fstp
nop
dec
sub
rcr
add
adc
or
jmp
push
push
cmc
or
sub
ficom
inc
jmp
das
mov
fidivr
fwait
push
push
mov
icebp
fdiv
and
xor
fwait
out
stc
mov
out
fmul
mov
xchg
add
movs
ds
(bad)
in
fsubr
and
jmp
xchg
pop
jne
inc
jg
and
sub
add
mov
mov
jge
or
rcl
mov
mov
inc
into
adc
and
scas
pop
dec
jecxz
pop
in
and
lds
sub
ins
mov
dec
jmp
xor
fwait
push
push
(bad)
in
mov
xchg
outs
stos
add
imul
rcl
fild
stos
sbb
jb
jl
mov
push
fcomip
mov
retf
mov
jp
test
add
jnp
out
in
sar
fidiv
inc
rcr
dec
rol
getsec
pop
mov
cmp
mov
xchg
xlat
sbb
lods
hlt
pop
hlt
push
fwait
jmp
or
jmp
dec
pop
aad
mov
xor
test
mov
adc
ret
xchg
call
retf
pushf
imul
mov
gs
add
and
sub
(bad)
and
lock
ds
inc
call
inc
cmc
xor
xchg
push
aaa
repnz
xchg
les
add
nop
rol
add
(bad)
xchg
arpl
push
and
nop
lock
aas
xchg
fwait
mov
xchg
mov
mov
into
jp
loope
outs
adc
adc
push
lods
xor
lock
jbe
mov
scas
inc
shr
dec
cwde
enter
(bad)
mov
inc
rol
add
cwde
xor
adc
mov
or
sbb
js
cmp
outs
ror
cmp
push
out
fcom
ss
sahf
hlt
and
mov
outs
enter
push
sti
(bad)
mov
cmps
es
popf
xor
sub
ins
adc
jge
jne
pop
adc
cmps
cli
cmp
je
and
inc
sbb
push
xor
cmp
fldenv
sub
mov
aas
mov
stos
test
gs
cs
sub
add
pushw
ret
mov
add
inc
xchg
les
hlt
mov
mov
stos
jb
or
scas
push
push
retf
stc
mov
aad
push
(bad)
xor
fisttp
jl
or
mov
scas
ss
sub
inc
xor
add
adc
pop
jg
lock
dec
pusha
daa
push
retf
xor
sbb
dec
mov
xor
xchg
or
push
fcomp
pop
push
xchg
sbb
dec
xchg
inc
lods
cmps
retf
lea
or
div
test
popw
(bad)
aad
inc
mov
outs
int3
add
xchg
ins
jl
add
shl
out
gs
xchg
ss
xchg
sub
push
xchg
xchg
call
mov
push
and
sub
shl
mov
pop
pushf
test
stc
jp
adc
add
push
push
push
xchg
dec
and
pop
pop
retf
popa
repnz
test
xor
pop
js
mov
xlat
in
popf
fild
aam
fdivr
sbb
fst
sbb
cmp
pop
inc
xor
sub
aaa
pushf
cmp
aad
fcomp
retf
sub
xchg
push
mov
inc
mov
test
push
jb
hlt
mov
out
mov
jg
push
imul
pop
mov
retf
sub
push
add
add
loopne
jnp
and
push
repnz
test
pop
dec
mov
arpl
ret
mov
arpl
cmp
pop
nop
cmp
mov
enter
daa
cmp
loope
rcl
xchg
dec
jbe
inc
jle
das
inc
mov
sub
sbb
dec
inc
sbb
icebp
pop
jb
mov
popf
lea
cli
sub
cmp
(bad)
in
ror
mov
mov
sbb
sub
cmc
pop
in
xor
xchg
xor
mov
fild
and
or
(bad)
outs
or
ins
mov
test
push
(bad)
int3
je
push
xchg
lods
pop
js
and
aad
pusha
out
les
sar
cmps
int3
push
xchg
shl
pop
in
inc
bound
lea
(bad)
xchg
test
push
ja
mov
mov
je
into
mov
sti
enter
(bad)
imul
in
gs
jmp
cli
movs
xor
inc
xor
enter
mov
enter
adc
pop
xchg
repz
cmps
mov
mov
mov
xor
into
push
jmp
movs
push
dec
jp
shl
(bad)
jo
lds
ins
(bad)
adc
je
jmp
inc
dec
addr16
and
xor
xchg
mov
pop
aam
stos
inc
outs
jne
fs
add
or
jmp
mov
out
xchg
xchg
pop
jmp
popf
daa
inc
xchg
stos
xor
or
sbb
mov
and
inc
lock
mov
jmp
(bad)
cmps
jns
nop
test
add
or
mov
xchg
ss
repnz
cmp
pushf
or
and
xor
jmp
loop
bound
leave
es
test
inc
or
loop
gs
cmp
aas
mov
shl
jnp
sbb
test
repz
and
sti
es
sbb
mov
or
adc
ret
das
and
nop
xor
jbe
jmp
fwait
sbb
das
fadd
movs
cmp
mov
ins
and
(bad)
or
jbe
aas
loope
add
jns
inc
dec
sub
popa
add
sbb
pop
mov
mov
aam
popa
out
add
pop
sahf
add
adc
js
in
mov
test
mov
jmp
fnstsw
jp
aad
std
inc
xchg
ret
or
stos
jmp
jne
test
ror
add
je
jmp
rol
add
(bad)
dec
test
mov
add
daa
push
in
mov
movs
les
enter
repz
add
cmp
lods
xor
add
lea
lahf
callw
repnz
inc
fnstenv
aas
mov
cld
(bad)
aas
mov
inc
dec
fcom
sub
jbe
mov
sbb
loope
gs
and
inc
daa
xchg
sbb
test
jmp
sbb
(bad)
leave
xchg
push
out
inc
ja
(bad)
int
fxch
mov
and
xchg
ins
cmp
mov
mov
and
mov
das
pop
and
or
enter
xor
jmp
out
cli
mov
sub
fmul
(bad)
mov
sub
in
cwde
fimul
mov
test
(bad)
cmp
in
rcr
fsubp
jno
mov
dec
add
dec
push
lea
ficom
mov
stc
pushf
es
cwde
cwde
loope
sbb
hlt
add
add
mov
jne
inc
ret
mov
mov
jns
push
aaa
fs
and
sub
(bad)
(bad)
je
dec
adc
and
pop
hlt
cmp
xlat
mov
mov
aaa
imul
pop
shl
stc
fs
mov
out
add
cld
lock
pop
xchg
jl
mov
aas
xor
mov
retf
lahf
(bad)
test
push
or
inc
or
mov
and
jae
js
jge
jno
inc
or
cmps
mov
and
sar
and
mov
mov
aam
cmp
ror
mov
cwde
mov
sub
ds
out
cdq
mov
std
movs
ins
clc
dec
fcmovbe
dec
dec
fxch
push
cmp
push
add
jns
or
rol
sbb
push
xchg
or
push
inc
out
bnd
mov
or
je
fs
test
mov
sbb
out
and
push
add
cmps
(bad)
jmp
dec
enter
push
mov
sub
sub
into
xor
cmp
jle
sbb
loope
test
retw
ja
inc
lods
ins
cmps
xor
push
push
(bad)
and
mov
mov
ins
sbb
fcmovne
aad
and
mov
mov
imul
imul
fild
jecxz
mul
xor
fld
cwde
cmp
call
lods
jmp
pop
or
clc
sar
cld
adc
adc
jecxz
popa
idiv
xchg
fdivr
aas
or
push
scas
mov
xchg
fldenv
fs
jne
cmp
xor
cdq
sbb
jnp
daa
push
and
xor
sub
dec
add
cmc
aad
adc
mov
mov
jmp
pop
xchg
sbb
add
or
mov
sub
inc
inc
or
retf
push
xchg
xor
xchg
jecxz
test
pusha
cmp
xor
outs
and
pop
data16
push
jns
xor
xor
mov
jmp
pop
dec
jmp
mov
fs
dec
test
arpl
(bad)
inc
xchg
dec
iret
addr16
ds
retf
add
and
xchg
fcmovbe
mov
shl
sub
or
nop
jmp
sbb
aaa
jno
push
adc
out
test
jbe
stos
pop
ins
pop
mov
repnz
arpl
pop
mov
push
xor
and
imul
pop
push
inc
inc
pushf
push
aas
or
mov
dec
sar
shr
movs
cmc
icebp
or
inc
js
clc
call
mov
fdiv
rcr
shr
and
mov
bound
shl
imul
rcl
fisubr
frstor
int3
ror
xor
(bad)
loop
and
or
aaa
jo
mov
cmp
(bad)
repnz
pop
sub
test
ficom
cmps
inc
je
pusha
retf
fld
sbb
loope
xchg
int3
rol
pop
lods
cld
cli
sar
call
adc
ror
mov
leave
dec
std
pop
xchg
jl
pop
popa
xchg
jg
(bad)
in
jbe
scas
inc
shr
leave
(bad)
push
call
or
adc
adc
test
je
cmp
adc
repz
adc
in
in
inc
jnp
push
add
rcr
loop
js
mov
popa
imul
jp
dec
push
shl
add
xchg
retf
xchg
mov
cmp
cmpxchg
je
mov
xchg
lds
mov
push
retf
or
mov
and
scas
adc
add
add
faddp
loopne
(bad)
jl
push
pop
sbb
cmps
mov
(bad)
into
inc
(bad)
xchg
jp
push
or
mov
xchg
outs
push
fs
pop
sbb
add
scas
shl
pop
sar
dec
mov
sub
pop
outs
popa
cdq
cmp
enter
out
inc
jmp
repz
retf
or
cmp
sub
(bad)
sahf
push
les
xor
(bad)
pop
jp
xchg
cmp
retf
or
in
pop
xor
xlat
cmps
shl
cdq
inc
jmp
adc
and
(bad)
cli
scas
adc
jns
mov
lods
and
dec
aas
movs
mov
or
jmp
ror
inc
repz
add
das
int
aam
xchg
xor
(bad)
mov
iret
lods
out
scas
in
adc
xchg
and
jl
daa
mov
mov
xlat
sbb
loope
push
test
xor
dec
cld
int3
sub
inc
adc
jae
add
addr16
pusha
jo
pop
iret
out
lahf
jne
lea
stos
mov
and
fstp
xchg
sub
lock
mov
in
dec
pop
out
mov
push
or
cmc
hlt
inc
push
mov
aad
sti
jle
repnz
(bad)
cld
push
enter
fild
mov
add
jmp
push
mov
rcr
fstp
xchg
sar
test
mov
imul
push
mov
inc
or
mov
cmc
and
inc
cli
mov
fist
out
cmp
inc
ror
inc
add
test
mov
test
(bad)
adc
scas
(bad)
ins
pop
test
sub
ja
add
ds
mov
jo
mov
cdq
mov
(bad)
rcr
xchg
rcr
icebp
test
int
je
inc
fistp
dec
mov
loope
mov
call
mov
add
sub
ds
jmp
pop
outs
ds
xor
sbb
cld
and
dec
add
popf
fidivr
xor
adc
sub
ja
xor
(bad)
xor
pop
sbb
sbb
push
push
inc
mov
xor
or
adc
imul
cmc
inc
loopne
jno
mov
(bad)
enter
adc
dec
(bad)
mov
fdivr
daa
inc
inc
sub
sar
test
movs
cwde
(bad)
xlat
sbb
pop
mov
scas
pop
mov
xchg
rcr
mov
outs
mov
es
or
fisub
scas
mov
mov
movs
xor
movs
pop
xlat
xchg
les
mov
cs
xchg
jno
out
jne
loope
ins
not
xchg
pop
pop
loop
sbb
call
dec
mov
adc
enter
mov
pop
je
test
sbb
cs
xchg
retf
repnz
adc
xor
aaa
fwait
cmp
scas
add
daa
dec
lods
and
movs
(bad)
mov
push
int
pop
mov
xor
jg
jne
stos
int
ficom
adc
out
mul
adc
pushf
enter
push
imul
sbb
sbb
(bad)
mov
pushf
and
test
popf
adc
add
xor
jg
dec
int3
mov
movs
push
mov
sbb
bound
loopne
push
lods
jg
mov
outs
stos
jae
pop
pop
pushf
scas
lahf
sub
rol
lods
hlt
pop
cmp
push
or
adc
xchg
js
retf
movs
das
add
sub
push
test
cmp
(bad)
push
popa
stos
imul
mov
push
test
dec
loop
sub
xor
add
sti
ins
std
imul
ja
and
int3
es
mov
mov
cwde
dec
sbb
idiv
adc
in
js
inc
inc
adc
push
les
inc
jp
cmp
call
adc
fsub
dec
sbb
sbb
call
cmp
inc
popf
call
dec
push
mov
cli
inc
mov
out
xor
mov
std
sbb
aam
addr16
sbb
cmp
jecxz
aam
shl
bound
xor
lahf
mov
cmps
sub
fiadd
mov
cmp
outs
popf
xor
jl
jl
pop
lock
xor
mov
ror
(bad)
jle
pop
cmps
sahf
lock
jo
stc
call
rcr
call
leave
rcr
push
hlt
push
cli
dec
mov
and
dec
or
int3
stos
jp
lds
jne
jne
xor
sbb
(bad)
adc
fst
retf
es
fidivr
cwde
rol
dec
fs
cmp
enter
std
cld
shr
push
shl
mov
fnsave
jp
idiv
cwde
sbb
and
aam
pushf
inc
push
sti
add
icebp
lds
pop
retf
jle
mov
dec
sar
(bad)
push
dec
sub
add
xor
int3
cmp
movs
outs
movs
pop
xchg
jb
pop
cmc
shr
xor
(bad)
cmp
pop
xchg
pop
push
mov
outs
retf
mov
add
shl
jle
pop
lea
dec
retf
pop
xchg
adc
movs
inc
js
popa
dec
repnz
cmps
mov
push
js
cdq
cmc
push
cdq
xor
adc
repz
ins
sbb
in
pusha
mov
mov
dec
test
cmp
aaa
push
mov
mov
dec
dec
inc
jmp
add
add
frstor
icebp
mov
xlat
cmp
test
jg
imul
ss
mov
mov
mov
jb
and
add
ins
lahf
(bad)
cs
bound
sub
ja
not
dec
push
add
cmp
lds
mov
fs
fld
in
mov
stos
inc
enter
cmp
cdq
xchg
or
xor
test
jae
mov
jge
cmps
retf
jns
mov
push
enter
jecxz
adc
cmp
sbb
dec
pop
mov
pop
or
jno
fs
in
jge
retf
repz
ins
int3
bnd
cmps
cmp
int
test
mov
fdiv
pusha
mov
xor
pop
inc
add
hlt
leave
dec
js
lock
mov
add
retf
clc
xor
cdq
loopne
jmp
or
and
mov
dec
adc
xor
mov
and
sbb
call
push
cli
mov
or
dec
inc
xchg
xchg
fsub
cwde
inc
out
aaa
mov
mov
call
leave
fild
enter
push
xor
jmp
sub
lods
leave
movs
add
or
scas
add
mov
jle
add
pushf
stos
mov
xchg
and
loop
mov
push
enter
(bad)
sub
mov
sub
mov
cmp
lods
mov
shr
js
sub
adc
pop
xor
in
out
loop
das
sbb
add
adc
stos
jno
xor
dec
xchg
xchg
dec
loopne
(bad)
retf
add
mov
add
jno
pushf
mov
mov
add
jge
jno
mov
clc
push
test
stc
or
scas
jmp
test
call
lahf
iret
ret
repnz
sbb
out
retf
or
aad
fldcw
pushf
mov
xchg
jecxz
ret
hlt
pop
in
pop
mov
enter
fisubr
lods
push
mov
xchg
and
ja
in
pop
js
xchg
pop
cmp
jmp
pop
mov
shl
lahf
add
mov
add
xchg
sub
fmul
imul
pop
into
sar
cli
imul
mov
sub
sub
xor
(bad)
pop
pop
test
push
adc
mov
pop
popf
out
sahf
bound
data16
pop
(bad)
faddp
(bad)
xchg
and
cs
fadd
pop
popa
cmp
mov
out
int
shl
movs
pop
lock
adc
inc
popf
enter
fnstenv
lahf
mov
dec
dec
pop
inc
xchg
stos
nop
repz
add
cmp
cdq
nop
or
enter
imul
jnp
pop
(bad)
mov
ror
sahf
mov
nop
add
xchg
sbb
inc
(bad)
lea
aaa
je
sahf
and
lods
dec
scas
aad
add
rol
ds
ins
(bad)
in
cmc
xor
or
call
stos
jne
pop
push
les
fdiv
in
ins
jmp
stos
and
jo
cmp
pop
inc
sahf
clc
idiv
stos
xor
test
rol
xchg
xor
hlt
in
or
les
out
cld
xor
mov
mov
jns
fist
test
sbb
ins
add
xchg
add
repz
mov
mov
adc
push
fisttp
inc
mov
push
push
(bad)
test
out
rcr
(bad)
cmp
fwait
repnz
lahf
sar
ds
pop
inc
test
loopne
mov
je
repz
into
test
sbb
and
cmps
pavgw
or
in
inc
shrd
inc
mov
inc
(bad)
rcl
dec
inc
and
std
aam
rol
cmp
test
xor
call
fcomp
adc
mov
and
dec
add
pop
jnp
loop
jle
(bad)
jnp
hlt
int3
xchg
push
imul
and
xchg
push
lahf
adc
xor
outs
test
bound
sbb
mov
and
jae
mov
lods
pop
nop
inc
cmp
sbb
or
cmp
mov
jbe
popf
cmps
push
pop
call
aam
adc
iret
pop
repz
lds
leave
push
sbb
pop
out
fcom
xor
repz
in
cmps
int3
dec
(bad)
sub
adc
jns
xor
and
(bad)
or
jae
pop
shr
pop
test
adc
cdq
mov
sbb
sahf
push
jb
test
jns
inc
cld
aam
shl
scas
push
or
into
stc
ins
mov
push
inc
sbb
(bad)
or
fild
pushf
shr
sbb
shr
ins
in
test
mov
(bad)
sub
shl
add
call
cdq
add
ret
mov
stos
pop
int3
popa
stc
xchg
cmp
pusha
sbb
or
dec
mov
gs
pop
add
test
push
sub
aad
add
repz
and
xor
push
and
outs
scas
and
and
xor
xchg
mov
adc
push
xchg
adc
sub
iret
mov
xor
jbe
xor
stos
jae
js
in
mov
psubq
inc
push
lods
sbb
pushf
outs
pop
in
jp
movs
push
frstor
push
jns
faddp
inc
cmc
xor
or
pop
test
repnz
loope
push
inc
cmc
mov
sbb
cld
xchg
iret
mov
rcl
mov
mov
pop
and
ret
jae
mov
or
dec
dec
test
cmovns
cmp
and
outs
jno
push
ja
sbb
jmp
push
lock
push
psllq
mov
mov
mov
mov
rcl
(bad)
and
ret
out
push
and
jns
enter
ins
sub
data16
lahf
mov
lea
call
push
cs
or
lods
inc
test
cmp
cmps
xchg
xchg
adc
cwde
sbb
push
enter
dec
sbb
jne
in
(bad)
sti
push
clc
sbb
push
jecxz
lock
lock
add
pop
fiadd
loop
sbb
loope
loope
and
jmp
test
lar
push
pop
ret
jg
fidivr
push
les
(bad)
fmul
dec
ret
shl
add
jb
push
sbb
mov
jg
cmp
adc
mov
fimul
(bad)
push
jg
mov
scas
sub
inc
dec
dec
and
mov
(bad)
cmps
mov
pop
cli
push
ficom
or
xchg
mov
xchg
xor
mov
pop
xlat
faddp
cwde
xor
fnsave
push
jne
rcl
(bad)
retf
fwait
mov
adc
aad
push
mov
mov
les
sti
mov
ds
std
ret
jge
std
enter
repnz
inc
ficom
or
jae
push
fmul
jnp
push
dec
lea
fstp
test
inc
call
push
xchg
iret
xchg
outs
std
outs
or
cmps
jp
sahf
lahf
jmp
mov
xor
dec
loopne
(bad)
dec
mov
lods
jnp
and
and
cmp
retf
sub
into
(bad)
jb
leave
aam
sub
mov
xchg
pop
lea
xchg
sbb
into
pop
cmp
push
xchg
popf
add
(bad)
sar
dec
aam
adc
rcl
jg
mov
mov
mov
cwde
(bad)
and
outs
addr16
jne
pop
add
repnz
jmp
ja
mov
mov
dec
js
cmp
mov
fs
cmp
cdq
aam
xlat
dec
mov
jmp
mov
fisub
and
mov
jne
(bad)
and
mov
sub
push
sbb
pop
add
lods
push
stos
dec
xchg
ret
mov
and
xor
popa
loop
push
cmps
fnsave
pop
rcr
mov
mov
ja
add
leave
xor
call
stos
or
es
mov
sahf
stos
lahf
mov
jmp
xchg
daa
jecxz
int3
icebp
movs
into
dec
cmp
ret
xchg
leave
sub
jns
div
jnp
pushf
dec
mov
cs
in
addr16
test
data16
jb
mov
or
ficom
and
dec
test
jne
sub
cdq
test
adc
test
int3
cdq
xor
arpl
imul
scas
ja
jmp
jae
adc
pop
imul
add
(bad)
pop
sahf
jno
lods
jg
push
test
popa
les
pop
pop
sbb
pop
or
pop
aam
iret
mov
push
dec
and
dec
gs
popf
fs
movs
icebp
jbe
out
mov
cmp
loopne
and
pop
adc
in
into
ret
jecxz
push
retf
pop
pop
mov
scas
or
add
pop
aaa
hlt
jo
ins
cdq
pop
lods
xor
inc
cli
imul
enter
imul
rcl
(bad)
(bad)
adc
jl
dec
mov
mov
adc
fwait
out
inc
ss
sbb
sbb
mov
xor
in
gs
mov
sub
icebp
sub
xchg
cmp
in
push
or
xchg
and
or
out
jne
imul
icebp
jg
push
mov
jbe
fist
or
sbb
push
test
pushf
jg
test
(bad)
mov
aas
and
mov
mov
iret
cmp
mov
lds
push
adc
loopne
mov
pop
push
int3
xchg
adc
or
in
daa
sub
jmp
xchg
mov
loop
daa
sub
xchg
in
out
xchg
retf
push
out
popf
out
call
test
data16
and
sbb
loopne
xor
jmp
cdq
dec
cvtdq2ps
sub
jae
fcmovnbe
push
mov
mov
pop
cwde
inc
enter
imul
xlat
mov
in
push
dec
xrelease
mov
repz
mov
mov
fs
mov
inc
fbld
mov
and
cmp
inc
add
jo
pop
fistp
mov
dec
push
push
mov
adc
sub
call
mov
das
leave
ffreep
dec
pop
xchg
je
cmps
stc
daa
sub
(bad)
mov
adc
xlat
lods
mov
js
imul
(bad)
dec
adc
inc
fdiv
sahf
cdq
pushf
pusha
dec
jl
add
dec
out
icebp
cmp
call
hlt
in
int3
adc
neg
and
cs
adc
mov
int3
pop
inc
(bad)
aas
xchg
repnz
mov
adc
les
jne
cmp
push
cmp
hlt
stos
push
das
pop
mov
imul
ja
leave
xor
sahf
in
pop
in
addr16
sahf
mov
sti
sbb
shr
pop
pusha
jnp
shr
sub
xor
xchg
(bad)
cmp
(bad)
xor
cmps
push
arpl
lahf
out
call
jle
int
push
call
xchg
fcmove
imul
idiv
adc
in
mov
adc
add
fisttp
mov
jb
ror
jl
mov
pcmpgtd
aas
jmp
adc
into
fsub
jecxz
push
push
sbb
clc
push
cs
(bad)
(bad)
mov
arpl
ds
das
xlat
pop
movs
mov
push
mov
push
cdq
mov
and
call
add
lock
sub
(bad)
cmps
scas
pop
sbb
sub
je
adc
lea
ds
call
arpl
jp
mov
xchg
mov
or
mov
das
(bad)
push
mov
push
mov
inc
sub
sbb
imul
leave
sahf
gs
jp
mov
in
sub
fbstp
pop
lods
(bad)
cmp
adc
sar
out
fnstenv
(bad)
bound
push
cmp
and
sbb
and
popa
mov
mov
xchg
movs
jl
lods
sub
stos
leave
cld
fwait
lds
ins
mov
shl
leave
push
push
add
ss
(bad)
pop
sub
mov
and
in
das
dec
cmps
out
fcom
cmp
push
xchg
out
jl
aaa
movs
imul
stos
pop
mov
in
cmp
xlat
shl
js
mov
ins
push
push
sbb
lock
and
sbb
imul
test
push
call
les
(bad)
mov
cmc
or
dec
jmp
pop
mov
out
lock
arpl
xor
shl
repnz
jp
push
repz
jmp
(bad)
fwait
add
jns
out
stos
cmp
int
push
mov
scas
xor
sti
add
xor
xchg
mov
into
fs
loope
and
retf
pop
adc
push
dec
mov
mov
js
push
xchg
fsubp
pop
jae
mov
jle
add
xchg
retf
jmp
push
jecxz
call
push
lahf
std
ror
nop
loop
pop
adc
leave
jmp
in
aas
sub
scas
push
inc
js
mov
arpl
and
out
and
mov
ins
stc
add
mov
rcl
ror
loop
jb
pop
std
push
lds
call
clc
nop
aad
mov
sbb
add
int3
or
fnstcw
mov
ins
lods
xchg
or
repz
(bad)
dec
retf
ds
sti
jns
mov
dec
push
pop
dec
dec
mov
jmp
adc
sub
scas
addr16
jno
ror
retf
minps
jp
popa
mov
push
sub
dec
ret
fstp
mov
nop
sub
pop
mov
fdivrp
add
xchg
jg
push
jmp
mov
int
or
push
push
add
dec
mov
cmp
sub
xchg
bound
retf
call
shr
in
cmp
enter
shl
sub
test
jb
cmp
ret
pop
cmps
loope
in
jmp
outs
retf
test
(bad)
dec
call
mov
rcl
loope
mov
fisubr
sbb
add
cmps
imul
ror
cmp
mov
jns
push
mov
cmp
out
sub
int3
push
xchg
mov
adc
(bad)
jo
push
adc
stos
or
or
inc
mov
aas
je
movs
fadd
aaa
into
fwait
xor
(bad)
enter
push
inc
or
fistp
push
jmp
and
or
cmp
sbb
frstor
push
or
div
xor
movs
int
or
jle
shr
xor
cli
pop
push
inc
in
scas
ja
add
sub
arpl
mov
mov
test
loopne
(bad)
call
loope
in
mul
dec
add
ins
pushf
pop
retf
(bad)
ret
mov
xchg
pushf
ds
cli
push
jbe
(bad)
clc
push
pop
pop
data16
sub
gs
mov
or
jns
fldenv
push
jo
or
mov
scas
xor
stos
jecxz
or
jecxz
pop
xor
ret
xor
pop
push
sub
test
mov
(bad)
xor
lods
dec
xchg
add
fxch
cmps
imul
adc
pop
jbe
adc
jl
xor
test
add
adc
fnstenv
jge
add
add
in
add
mov
mov
or
cdq
sbb
pop
and
js
mov
ror
inc
sbb
inc
sbb
clc
outs
push
push
cmp
mov
repz
(bad)
int3
xor
stc
jl
or
push
xchg
test
popa
les
sub
pop
or
adc
sub
mov
mov
xor
aaa
nop
aad
or
push
sub
jmp
add
inc
sub
xrelease
lds
out
push
adc
stos
add
mov
cmps
stos
test
leave
sbb
push
pop
adc
inc
lock
test
jl
cmp
enter
dec
sbb
cmp
jp
repz
xchg
and
enter
mov
pop
cdq
loope
push
(bad)
out
pop
sub
adc
int
popf
and
mov
sub
and
stc
pop
sbb
int3
jmp
inc
pop
push
stc
inc
dec
dec
fcomp
movs
test
rcr
popa
call
jb
adc
push
pop
ret
ss
mov
and
cld
xor
push
das
and
jne
iret
out
xor
push
add
mov
cmp
mov
cld
pop
cmc
cmp
cmp
data16
js
inc
xlat
in
mov
imul
das
jl
test
adc
ja
adc
cmp
lods
sub
xchg
scas
mov
mov
or
dec
ds
adc
pop
retf
push
(bad)
bound
dec
xchg
lahf
(bad)
adc
mov
sahf
test
fist
retf
xor
enter
push
push
outs
ret
pop
xor
repnz
div
cmp
scas
push
movs
movs
sub
dec
mov
arpl
fild
arpl
div
(bad)
in
and
ds
imul
cmp
pushf
ins
movs
ret
add
sub
shl
pusha
adc
idiv
jmp
pop
lods
xchg
mov
mov
lods
mov
repnz
mov
pop
ror
mov
sub
mov
sbb
pop
sub
stos
lds
dec
jg
push
xchg
call
es
cmp
mov
or
mov
and
mov
adc
cld
xor
lahf
sti
mov
pop
mov
dec
mov
dec
cmp
cdq
lds
les
loopne
mov
in
mov
xchg
les
(bad)
jns
and
loope
mov
pop
cmps
jbe
fild
push
push
lea
retf
fdivr
int
or
sub
loope
sahf
hlt
aad
or
(bad)
call
xchg
push
dec
mov
lds
push
(bad)
add
test
std
outs
add
(bad)
lods
push
in
dec
mov
lods
retf
sbb
adc
ins
add
fmul
fsubp
in
jbe
in
test
fcom
aam
xor
jns
js
push
sbb
sbb
sti
xor
pushf
mov
daa
push
pop
call
ret
loop
rcr
sub
gs
dec
je
cmp
popa
lds
lds
xor
jns
fnstenv
mov
std
cmp
mov
adc
in
retf
xchg
call
in
add
pcmpeqd
pop
aas
jmp
int
es
sub
dec
push
fdivr
dec
adc
out
lds
push
pop
ds
mov
adc
mov
adc
addr16
mov
jmp
jp
or
sub
mov
movs
pop
cmp
inc
repz
sbb
out
test
ret
xchg
into
in
cmp
jl
repz
jp
xchg
pushf
dec
in
xor
mov
and
fistp
mov
in
dec
sub
mov
jmp
pop
js
push
pop
push
les
scas
iret
inc
daa
and
mov
inc
sbb
ins
int3
jecxz
mov
mov
or
sbb
xchg
sbb
scas
pop
push
adc
arpl
movs
and
or
sbb
push
xor
dec
sbb
cwde
pop
add
add
pop
clc
test
sub
jp
dec
push
mov
aaa
inc
push
sub
and
fidivr
fsub
lods
ret
dec
jne
sbb
push
xlat
ins
jle
xchg
push
pop
push
imul
ror
mov
int3
pop
xor
jmp
xchg
jo
xor
sbb
adc
mov
adc
out
pushf
inc
jo
mov
je
repnz
loopne
mov
push
xchg
xor
mov
enter
and
stos
and
popf
and
xchg
test
dec
ins
pop
movs
dec
cmp
sbb
adc
and
movs
mov
xchg
mov
and
jns
pop
(bad)
jnp
mov
cmp
retf
loopne
ret
cmp
gs
push
mov
push
pop
or
jge
xor
stos
push
inc
jge
mov
adc
mov
xchg
rcl
repz
add
xchg
(bad)
fisttp
out
rcl
in
scas
mov
mov
push
imul
push
xor
or
inc
shr
or
popa
jb
sbb
es
bound
cmps
sub
mov
das
xlat
jb
shl
in
dec
sub
cs
mov
or
pop
fisttp
popfw
adc
ret
fs
cli
hlt
push
mov
pop
lds
fstp
or
movs
jle
outs
enter
hlt
test
in
sbb
adc
jno
mov
lock
mov
push
xor
inc
sub
sbb
jl
mov
xor
or
jl
mov
jne
test
sub
xchg
stos
test
fsubr
xchg
iret
add
stos
outs
shl
push
call
mov
dec
mov
fdiv
das
fnstsw
xor
enter
jmp
test
jb
pop
out
dec
pop
dec
or
jnp
loope
or
and
push
fist
lahf
in
dec
scas
std
stos
fistp
mov
aas
pop
jbe
sti
stc
into
idiv
pop
rol
movs
cmps
out
push
xor
out
mov
stc
lahf
or
rcr
mov
jg
in
jnp
gs
jmp
imul
stc
jp
jne
jge
outs
(bad)
scas
mov
div
lea
or
ficomp
and
cmps
and
jb
pop
xchg
sbb
jb
std
dec
xor
and
inc
mov
jb
sbb
jecxz
(bad)
aas
and
(bad)
pusha
pop
hlt
out
xchg
aad
sbb
or
nop
out
popa
nop
mov
jae
push
sub
cdq
js
fs
add
xor
retf
and
and
inc
stc
mov
pop
scas
inc
xor
popf
mov
fcmovnb
inc
sub
cld
sar
xchg
pop
cmps
outs
cmc
int
inc
outs
fs
push
xor
xchg
xlat
loope
jge
mov
push
mov
push
and
adc
std
lods
cmps
mov
xor
sub
push
pop
ret
mov
pop
push
xor
jnp
pop
ins
dec
jmp
ret
push
push
dec
xchg
stc
es
dec
je
call
repnz
rol
das
inc
fld
jp
xchg
bndldx
bnd
gs
mov
call
jbe
jb
xor
cli
cmp
inc
adc
lahf
int3
or
std
ret
mov
sbb
sbb
ins
dec
or
aad
xor
(bad)
ret
das
push
jnp
mov
je
aas
sub
sahf
imul
mov
sub
xlat
dec
or
push
and
mov
or
inc
in
xor
inc
imul
rol
pop
idiv
lods
lods
pushf
xor
pop
and
movs
dec
in
and
js
clc
sbb
sbb
pop
sar
(bad)
movs
das
daa
dec
inc
mov
dec
imul
xchg
in
jmp
mov
or
dec
push
sub
xchg
xor
popf
fstp
hlt
mov
mov
not
jg
jle
push
cmp
ror
add
adc
xor
pop
aaa
loop
mov
inc
and
xchg
inc
test
push
dec
xor
aad
cmp
push
inc
push
ss
loopne
jecxz
jmp
mov
std
pop
adc
xor
lea
and
(bad)
jnp
jo
inc
inc
adc
sub
scas
out
pop
or
pop
in
movs
fild
add
movs
cmp
sti
push
inc
push
mov
fisttp
add
cdq
sbb
out
fwait
mov
xchg
sbb
rol
push
pop
xchg
mov
clc
ret
ret
stos
int3
shl
jo
(bad)
clc
and
fadd
retf
and
retf
push
jns
push
test
mov
je
(bad)
cmp
push
adc
mov
rol
clc
adc
(bad)
shr
retf
push
frstpm(287
add
ret
out
call
push
pop
mov
scas
loopne
out
jae
pop
popf
push
jno
adc
int
fidivr
inc
repnz
pusha
and
cmp
enter
mov
mov
mov
cmp
retf
hlt
inc
iret
cmps
int
jbe
scas
test
sub
test
fs
mov
sbb
xchg
int
jmp
loope
pusha
div
dec
adc
and
add
mov
pop
push
xor
pop
jg
inc
leave
cmovb
lods
out
mov
xchg
inc
int3
mov
inc
and
cmp
xor
or
pusha
test
repz
addr16
in
sub
cli
sbb
sar
sbb
dec
pushf
lahf
lock
sub
cmp
imul
xchg
xor
popf
stc
push
or
pop
mov
jl
or
dec
sti
and
jg
mov
xchg
cmp
and
jl
retf
cmp
je
les
out
sub
lods
popf
jmp
mov
jno
xor
jno
loop
hlt
push
xchg
sub
inc
lods
sti
(bad)
add
sbb
push
pop
jbe
aad
icebp
fistp
jae
(bad)
dec
xchg
push
daa
shl
(bad)
mov
test
jmp
and
(bad)
sbb
retf
(bad)
sbb
rcl
ins
sub
mov
stc
ds
movs
jnp
fwait
push
jp
ret
imul
stos
mov
lods
xchg
mov
cmps
mov
mov
cmp
adc
sub
popf
cmp
fadd
aam
cli
and
dec
inc
pop
js
out
(bad)
into
in
(bad)
adc
test
or
xor
sbb
test
jmp
std
push
cwde
in
sbb
sahf
inc
lock
ja
or
mov
repnz
dec
cli
inc
dec
dec
xchg
out
les
out
aam
push
sbb
imul
push
aas
push
xor
xchg
sub
push
adc
pushf
push
pop
add
pop
adc
arpl
fmul
mov
dec
nop
test
add
data16
shl
and
mov
sbb
or
dec
push
xor
xchg
cmp
repnz
sub
cmp
mov
pop
mul
or
(bad)
inc
xor
dec
inc
into
(bad)
xchg
cmp
xor
test
mov
ja
push
add
retf
or
iret
sbb
and
imul
xor
lahf
pusha
mov
pop
int
test
lods
rcr
add
xor
cmc
cmps
fwait
jle
cld
retf
sti
mov
dec
fwait
ins
or
stos
add
mov
jbe
push
adc
push
cs
jl
mov
cmp
cmp
add
(bad)
mov
scas
lea
sub
cmps
aaa
fsub
sar
mov
movs
lods
fisttp
add
fnstcw
stos
push
xchg
adc
stc
das
dec
iret
xor
add
push
xchg
(bad)
adc
mov
dec
mov
arpl
cmp
scas
(bad)
push
inc
xor
adc
xchg
(bad)
push
repnz
jge
inc
pop
arpl
inc
xor
sub
packssdw
sub
gs
adc
lock
and
sub
(bad)
ret
xchg
clc
(bad)
add
pop
sbb
inc
push
xchg
dec
int3
test
das
pushf
imul
lea
jne
les
cmp
hlt
jl
out
out
icebp
ret
(bad)
mov
push
or
mov
call
push
stos
fsubr
jno
popfw
jmp
lods
clc
jo
outs
jl
ss
mov
shl
call
sbb
pop
int
stos
sub
ja
dec
je
and
ja
add
mov
sbb
in
push
or
outs
sub
mov
out
mov
xlat
push
ds
fsub
jecxz
mov
mov
pushf
or
lds
jl
fidiv
not
xchg
jecxz
add
call
xchg
das
pop
lea
xlat
and
shl
or
movs
mov
test
xlat
je
push
lods
test
or
cmp
ins
cli
ja
inc
hlt
or
loopne
jl
sub
jno
dec
cmc
sar
loop
idiv
push
in
enter
pushf
aad
jecxz
outs
out
xchg
dec
rcpps
xchg
nop
fwait
mov
les
(bad)
xchg
retf
push
das
shl
cld
sub
loope
lods
push
xor
mov
loope
inc
mov
mov
sub
jo
and
sbb
test
ss
fidiv
in
jecxz
pop
ficomp
lods
rcr
xchg
(bad)
movs
fwait
push
in
or
mov
aam
fild
dec
retf
sahf
push
imul
add
mov
repnz
cwde
repz
cmp
sbb
fwait
jg
push
cmp
jo
adc
scas
nop
sbb
xlat
idiv
sbb
pop
pop
push
mov
retf
sbb
nop
mov
cld
mov
movs
inc
cmp
jp
pusha
imul
nop
or
mov
or
mov
push
sbb
mov
push
and
aaa
pop
pop
xchg
add
leave
jb
sbb
cmc
inc
adc
repnz
std
std
xor
adc
pop
mov
pop
or
outs
int3
dec
sub
scas
ja
push
push
inc
(bad)
aam
inc
and
into
nop
rcl
aaa
adc
lods
loope
test
inc
rol
mov
lahf
aad
leave
jg
dec
cmp
addr16
inc
add
and
out
stc
and
les
push
xchg
out
xchg
and
das
push
jns
jns
push
inc
sbb
or
cli
or
fsubr
lods
retf
push
or
les
or
inc
dec
sub
rdpmc
adc
jne
cmp
inc
mov
jns
jno
pop
loope
repz
imul
jecxz
cli
(bad)
cmp
das
jmp
sti
(bad)
in
jo
test
ret
jbe
ss
dec
jecxz
bound
push
movs
push
fwait
add
and
push
mov
mov
ret
pop
hlt
inc
and
lock
cmp
push
adc
int
sub
sub
xchg
fstp
mov
fs
xor
lds
and
sar
mov
ins
cmp
or
mov
dec
ret
je
pop
xor
in
xor
sbb
or
imul
add
test
retf
jge
shr
ret
stc
mov
sub
ss
mov
arpl
xchg
cmps
scas
jo
shr
jns
aam
adc
cli
lods
test
lock
int3
fdivr
mov
ins
sub
test
sar
pop
jl
(bad)
dec
adc
mov
jmp
retf
pop
lock
mov
aaa
adc
gs
sbb
dec
xchg
lea
push
out
(bad)
pop
and
(bad)
jl
inc
pop
ds
mov
adc
jmp
stc
push
mov
and
fdiv
repz
sbb
inc
fwait
mov
stos
mov
and
push
in
call
push
enter
cdq
cmp
clc
pop
sub
xlat
test
push
fild
daa
and
jb
push
aam
xchg
pop
push
test
xchg
lahf
retf
and
push
jne
adc
(bad)
jmp
(bad)
pop
cmp
or
pop
xor
jmp
mov
(bad)
stos
fcomp
in
jmp
loopne
das
sub
pop
call
stos
adc
hlt
test
sbb
push
bound
dec
nop
jnp
mov
ret
inc
test
cli
cmp
loopne
xchg
pop
pop
push
cmp
add
or
sub
fdivr
lahf
jg
adc
(bad)
iret
inc
imul
test
xchg
inc
mov
xchg
dec
inc
cmp
mov
adc
ds
push
push
(bad)
loop
inc
inc
or
aas
push
jmp
(bad)
xchg
inc
rcr
jecxz
mov
dec
pop
stos
push
out
stos
in
les
dec
sbb
popa
retf
pushf
sbb
pushf
inc
ror
or
lahf
inc
cld
xchg
or
sub
out
mov
loopne
mov
xchg
in
fstp
xor
enter
cli
mov
popa
and
out
icebp
cmps
aam
scas
jp
mov
cmp
sbb
add
(bad)
loopne
loopne
in
sub
push
xor
cli
leave
das
dec
jbe
pop
pop
jl
mov
inc
loope
ficomp
rcl
lods
lock
inc
or
push
sbb
int
ret
repz
mov
dec
xlat
dec
push
leave
jl
bound
(bad)
fist
lock
inc
pop
jnp
mov
sbb
out
std
(bad)
mov
pop
push
push
inc
mov
push
or
jmp
pop
and
pusha
or
js
or
jg
sub
and
cmp
dec
stc
fbstp
in
js
dec
imul
fsubr
bound
pop
dec
movs
cmp
out
je
sbb
pop
ins
stc
jbe
cmp
push
push
jl
push
aaa
or
xor
pop
add
icebp
jns
xor
pop
push
mov
xor
mov
dec
mov
jmp
mov
xchg
jecxz
adc
pop
cmp
pop
add
mov
cmp
mov
shl
xchg
cmp
lods
and
mov
out
mov
add
or
cld
aaa
sbb
shr
adc
add
push
mov
out
loop
push
call
xchg
add
pop
xchg
dec
xchg
pop
and
or
popaw
xchg
into
je
fidiv
sub
mov
cwde
sub
sbb
add
jno
cmps
sub
into
loopne
sub
nop
jl
bound
push
std
push
jg
adc
ret
push
inc
loope
dec
iret
addr16
dec
mov
pop
ret
add
jo
xchg
sub
inc
inc
push
sub
aas
and
pop
xchg
push
shl
jmp
out
out
imul
push
fadd
jns
mov
pop
cld
push
repnz
sbb
dec
jmp
sahf
rol
pusha
jp
xchg
das
add
int3
and
ret
repz
and
movaps
ja
cmp
outs
push
jmp
lods
out
cld
xchg
gs
jp
cmp
clc
movs
push
ins
dec
push
jmp
sar
sti
data16
mov
xor
mov
cmp
ret
idiv
mov
push
das
(bad)
cmp
out
or
int3
rol
stos
inc
rol
push
mul
out
xor
jmp
xchg
jae
mov
(bad)
sub
pop
push
adc
cmp
mov
inc
adc
adc
(bad)
mov
sahf
in
push
sub
out
int
mov
(bad)
(bad)
fistp
xchg
sbb
cld
idiv
pause
(bad)
sub
pop
xchg
and
stc
mov
mov
mov
repz
add
and
xlat
lods
dec
cmc
mov
jl
jmp
mov
popa
pop
and
stos
push
push
fwait
popa
inc
imul
add
aam
jg
out
out
call
add
cmp
pop
jno
dec
cmp
dec
adc
xchg
repnz
jge
jp
dec
and
pop
inc
xlat
clc
inc
aaa
xrelease
ret
je
sbb
ins
mov
shl
jmp
mov
rcr
bound
dec
shl
out
dec
jb
lods
mov
pop
test
dec
fst
and
mov
dec
mov
cmp
xor
in
xchg
cli
cmp
push
and
jne
es
dec
das
stos
in
fdivrp
fistp
out
and
mov
dec
out
push
sub
iret
jge
and
sbb
cli
(bad)
push
pop
inc
or
pop
fdiv
pop
jmp
clc
fidivr
inc
ja
dec
pop
or
inc
mov
repz
push
enter
sbb
sbb
popf
imul
ret
mov
shr
je
fwait
jmp
fnstcw
aam
(bad)
mov
add
pop
ficomp
fidivr
push
nop
outs
push
xor
jmp
dec
(bad)
loopne
icebp
or
push
or
push
xor
in
retf
jne
jg
shl
or
imul
aas
mov
or
or
jmp
mov
mov
push
fbld
ror
xor
mov
icebp
pop
lds
outs
sbb
cli
call
stc
or
cmp
pop
jmp
cs
adc
movs
cs
mov
cs
fstp
mov
scas
adc
push
aam
push
sub
(bad)
ins
inc
push
xor
pop
loope
cld
or
lods
imul
pop
out
ins
aad
mul
jle
mov
push
or
mov
adc
mov
adc
fs
mov
xor
or
aam
sar
xchg
mov
clc
stos
test
pop
das
es
lahf
mov
aaa
mov
and
pop
outs
pop
es
test
xor
adc
addr16
adc
push
and
cmps
add
mov
in
loope
les
mov
xchg
mov
push
stc
pop
out
mov
or
mov
jb
(bad)
fbstp
sti
dec
jge
pop
lds
mov
push
mov
in
mov
push
pop
jmp
data16
sbb
cli
pop
inc
leave
inc
mov
inc
(bad)
pop
push
dec
pop
and
inc
mov
push
jno
pop
mov
fdiv
pushf
mov
push
pop
dec
popa
mov
ret
or
stos
fs
jg
mov
and
mov
fsub
shl
je
xchg
rcr
stos
inc
retf
lods
mov
dec
div
pop
lds
out
out
or
ret
xchg
jg
cmp
xchg
sti
sub
int3
dec
or
lea
jae
aad
aas
and
jl
mov
ret
loopne
inc
mov
sbb
xchg
popf
dec
and
mov
jmp
mov
dec
pop
out
or
rcr
inc
mov
pop
xchg
fs
xchg
idiv
scas
retf
imul
add
out
jecxz
iret
add
stc
ror
out
retf
addr16
pfmul
ror
iret
push
clc
xchg
les
push
adc
push
and
cdq
mov
dec
mov
stos
add
cmp
push
cwde
mov
ret
stc
dec
ficom
pop
(bad)
(bad)
dec
jae
imul
div
mov
push
push
arpl
and
vpaddsw
or
imul
aam
cmp
rcl
hlt
ds
add
mov
repz
sub
jge
test
or
jg
repnz
mov
xchg
mov
pushf
in
test
and
out
lods
enter
das
pop
xor
and
push
hlt
push
jmp
std
jecxz
cmp
out
scas
test
clc
push
xor
dec
test
mov
push
or
adc
ins
sbb
int
fisttp
push
scas
dec
leave
push
cli
pop
mov
imul
inc
(bad)
push
push
(bad)
jg
icebp
inc
mov
imul
cmp
sub
das
adc
jae
scas
ret
fld
dec
imul
in
cmp
mov
dec
jl
(bad)
inc
loope
inc
pushf
icebp
ins
ds
stos
sbb
call
or
fsub
inc
dec
push
lods
cli
aaa
jge
scas
adc
outs
arpl
enter
jbe
adc
mov
sbb
retf
cmp
dec
sub
push
daa
mov
mov
inc
and
mov
scas
stos
imul
in
in
lahf
repz
mov
cld
mov
aad
push
jp
cld
out
pop
xor
push
in
jmp
ret
xor
mov
and
sahf
into
icebp
cmp
and
stc
fimul
fwait
mov
ss
aas
(bad)
fldcw
push
out
xor
add
sbb
jne
mov
adc
mov
not
dec
push
rcl
jbe
test
out
aaa
int
cmp
iret
or
inc
es
xchg
les
jmp
xor
cmps
push
mov
movq
jecxz
in
cmps
inc
enter
repz
in
stos
leave
pop
mov
push
mov
aam
pushf
adc
repz
test
movs
mov
pop
call
or
push
mov
aam
cs
add
sbb
cmps
pop
adc
cmp
rep
adc
(bad)
xlat
mov
xchg
or
adc
mov
outs
movs
ins
sbb
xchg
stc
jbe
inc
xor
dec
push
dec
or
in
push
push
ins
adc
mov
mov
push
sub
pop
repz
xchg
dec
add
xchg
jmp
je
shl
push
loope
popf
out
in
xchg
lock
add
pop
bound
sbb
push
dec
lods
or
popf
mov
(bad)
(bad)
(bad)
sub
jmp
scas
jne
aam
outs
ins
jo
cs
scas
arpl
fcmove
mul
or
or
push
mov
push
popa
mov
push
xchg
scas
outs
in
fsub
pop
push
and
ja
fs
outs
cdq
cmp
retf
data16
sub
gs
xchg
lds
sub
or
sub
leave
mov
(bad)
nop
(bad)
imul
push
or
cmc
out
stos
inc
xchg
cmp
in
pop
scas
hlt
or
push
or
inc
leave
dec
inc
inc
jno
loopne
sbb
out
jno
mov
mov
mov
mov
mov
push
loop
leave
bound
mov
inc
pop
cld
lock
pop
into
out
inc
sub
ror
in
push
movs
cmp
inc
in
(bad)
sub
xor
mov
sbb
sar
hlt
cdq
or
les
mov
arpl
pusha
add
inc
xor
mov
imul
fimul
jecxz
pusha
push
int3
pop
shr
outs
out
ds
aas
pop
enter
fwait
cmp
adc
pop
jo
leave
mov
cmps
pop
popa
fild
sbb
idiv
sbb
cmp
sub
std
outs
push
inc
les
or
dec
cmc
inc
add
test
sbb
xchg
(bad)
fist
fbld
cs
int
lea
lahf
dec
jns
jbe
dec
mov
mov
sub
push
lods
rol
ja
fdiv
dec
jg
mov
fwait
shl
ret
add
fcom
js
(bad)
mov
jecxz
daa
add
adc
out
mov
add
mov
in
pop
gs
adc
adc
ds
(bad)
push
std
mov
xchg
cld
push
sub
mov
pop
outs
jmp
push
inc
pop
nop
push
mov
pop
push
cmp
in
stos
xor
adc
ja
adc
ret
call
sub
adc
and
ja
sub
pop
inc
cmp
fcom
clc
ins
scas
adc
adc
pop
push
mov
stc
ss
add
sbb
cmp
inc
mov
cld
push
and
popa
cld
dec
jae
cmp
dec
jle
add
scas
clc
popa
and
mov
daa
mov
lock
push
mov
mov
pop
not
sti
push
mov
and
test
and
stos
iret
mov
das
sub
cld
fadd
retf
aas
ret
pop
xchg
sub
test
repnz
cmp
sbb
push
les
sub
out
lods
es
jecxz
ins
mov
movs
frstor
popa
push
cdq
push
add
add
ins
mov
or
test
dec
pop
fidivr
jb
xchg
retf
mov
iret
cmp
inc
adc
js
bound
repz
ficomp
cli
cmp
sbb
pop
mov
xor
dec
loop
in
pop
sbb
jns
fadd
movs
mov
xor
retf
mov
bound
sub
lods
pop
adc
rol
cmp
add
nop
mov
pop
fidivr
imul
push
inc
jb
fisub
mov
dec
scas
sbb
mov
stc
lods
daa
inc
xchg
jmp
cld
test
mov
dec
pop
pop
cli
cwde
ja
repz
sub
sti
or
out
mov
pop
mov
adc
pop
add
(bad)
jb
or
stc
ret
aam
mov
xor
add
retf
pop
test
pusha
stc
cmp
loope
sub
cdq
push
mov
sub
mov
mov
rcl
in
out
shr
mov
jne
pop
int3
mov
push
pop
adc
fcom
movs
xchg
fldcw
movs
(bad)
repz
jecxz
std
fprem
mov
mov
jg
ret
push
push
shr
xchg
sub
cmps
sub
add
cmc
in
mov
mov
inc
mov
fcmovbe
push
rcl
inc
mov
out
xchg
cs
ficom
jno
mov
pop
xchg
inc
cli
add
mov
cwde
add
jecxz
fwait
and
pop
mov
cmc
add
sub
scas
out
adc
adc
jae
cmp
or
mov
cmp
enter
lds
fisub
shr
mov
aas
mov
sub
and
and
into
push
dec
movs
pusha
mov
pop
cmp
sbb
fcomp
nop
pop
lds
in
pop
(bad)
push
xlat
dec
aam
or
clc
ret
test
mov
sbb
add
jbe
inc
add
sti
pop
mov
pushf
xor
pop
cmp
xchg
xor
jge
idiv
jmp
aam
iret
dec
int3
jne
sbb
lods
push
pop
out
scas
pop
mov
fs
adc
push
pop
xor
mov
xor
loop
ret
data16
jge
lea
call
dec
adc
sar
push
pop
cmp
add
jo
xchg
jmp
xchg
ja
cld
fwait
xor
cdq
in
(bad)
mov
sbb
call
stos
cld
xor
cmc
adc
out
movs
mov
mov
adc
push
sti
lock
push
sub
(bad)
out
test
push
push
xchg
ret
adc
in
mov
call
jae
shr
fs
(bad)
fcos
push
test
inc
cmc
aam
repz
sbb
scas
in
popf
ins
adc
movs
pop
inc
mov
and
jge
mov
xor
icebp
jnp
hlt
lods
cmp
in
in
addr16
pusha
mov
ins
fwait
out
ss
jmp
popf
or
sub
jo
jecxz
mov
cmp
cmp
jg
ja
mov
aaa
pop
inc
retf
cmp
(bad)
mov
mov
xor
pop
add
in
and
rcr
scas
movs
pop
xlat
inc
mov
add
mov
mov
mov
pop
ror
mov
push
ret
push
repnz
jmp
xchg
cli
les
push
cmp
lea
in
cmps
push
shr
jle
lds
dec
rcl
rcl
movs
call
mov
mov
cdq
pop
jmp
mov
xchg
imul
add
sahf
in
cmc
sub
jno
mov
pop
outs
add
ja
mov
add
mov
into
xchg
mov
push
mov
add
cli
push
mov
dec
lock
dec
inc
xor
je
mov
std
data16
mov
dec
push
sahf
in
or
movs
push
scas
jno
jne
cmps
jnp
loope
push
sar
in
bound
sahf
mov
jmp
push
sub
mov
push
mov
xor
mov
mov
or
(bad)
gs
mov
das
cmp
xchg
clc
inc
mov
daa
jb
shl
popa
cmps
cld
mov
inc
add
je
cmp
add
xchg
(bad)
or
pushf
or
or
pop
scas
push
cmp
pushf
or
pop
out
or
ins
lds
mov
es
inc
loop
dec
jle
push
loope
cmp
data16
repnz
or
and
das
jne
in
call
popa
in
inc
xchg
jmp
and
sub
push
adc
arpl
in
xchg
das
leave
push
dec
and
mov
sbb
mov
test
push
jmp
leave
stos
dec
mov
and
imul
cmc
scas
std
ror
or
ret
and
je
mov
jmp
fdiv
mov
loop
sub
push
mov
repz
jmp
mov
jo
jb
je
add
das
sbb
mov
mov
xchg
xor
mov
aas
cmp
outs
push
call
loope
mov
mov
(bad)
xlat
frstor
xor
outs
loope
fwait
inc
imul
xlat
lock
or
add
ins
push
xor
push
mov
push
fild
dec
rcr
pop
(bad)
jbe
gs
sar
das
cs
shl
mov
test
inc
arpl
cs
inc
mov
dec
push
xor
imul
outs
and
jp
adc
sub
mov
rcr
fld
dec
adc
push
add
ret
sub
dec
push
dec
cmp
add
mov
mov
stc
mov
jmp
inc
test
(bad)
mov
jno
popf
inc
sub
int
mov
clc
call
nop
dec
pop
sub
and
cmp
mov
mov
pop
aam
mov
cmc
retf
sbb
and
lods
mov
icebp
push
push
xor
and
leave
enter
addr16
loope
(bad)
js
lds
jmp
imul
(bad)
loop
clc
cmp
hlt
(bad)
jmp
jmp
inc
dec
and
pop
(bad)
add
xchg
das
pop
enter
inc
adc
cmp
xor
ins
inc
les
xor
push
xchg
loopne
bound
test
icebp
je
retf
fbld
ds
out
push
add
test
ret
(bad)
std
ins
sub
jmp
ret
arpl
sbb
bound
das
clc
test
ja
ficomp
jle
into
mov
pop
inc
dec
enter
fsub
mov
gs
(bad)
fdivr
push
mov
mov
pop
cld
adc
push
push
xchg
inc
inc
out
mov
inc
sub
adc
mov
sub
sub
push
fst
(bad)
mov
add
lds
stc
jnp
jmp
sbb
sti
mov
sbb
mov
push
jmp
jge
test
or
xchg
and
push
stos
call
retf
adc
es
xchg
fwait
lock
cmps
jp
mov
pop
imul
addr16
pop
add
xchg
jmp
lock
and
and
frstor
xchg
push
jb
clc
pop
test
mov
mov
inc
sbb
add
mov
push
jbe
sti
or
lock
push
adc
push
dec
inc
xor
mov
push
retf
int
inc
out
stos
inc
mov
ins
and
in
mov
(bad)
lea
cs
push
pop
cld
loope
in
jmp
xlat
xchg
movs
ss
cmp
push
inc
fucomi
xchg
cmp
call
ret
leave
sub
inc
out
pop
jo
push
in
xchg
iret
(bad)
retf
mov
aad
xor
(bad)
mov
cs
cmps
int3
mov
and
lahf
cmp
fisubr
dec
mov
call
je
call
daa
(bad)
and
jecxz
aas
out
(bad)
inc
repnz
push
repz
loope
mov
imul
(bad)
aas
xor
int3
sbb
imul
sbb
pusha
sub
cmc
sbb
xadd
xchg
push
sub
lds
xchg
les
(bad)
lods
add
sbb
mov
repz
and
xchg
mov
aas
repnz
mov
mov
and
pop
retf
mov
mov
test
(bad)
rcr
popa
(bad)
and
sbb
mov
arpl
or
jp
push
cld
lock
sbb
sub
rcl
adc
jno
push
out
jno
scas
pop
popf
mov
push
adc
sub
pop
mov
int3
sbb
pop
data16
arpl
jns
rcl
pop
sar
movs
jns
mov
shr
jle
and
shl
jg
mov
add
inc
in
aam
dec
sbb
enter
push
dec
cmp
ret
sahf
or
(bad)
shr
mov
arpl
mov
mov
pop
pop
push
aam
xchg
mov
sub
mov
mov
xor
push
mov
mov
xchg
int
mov
lahf
cmp
enter
mov
movs
movs
ret
jnp
cli
mov
retf
pop
ss
xchg
cmp
inc
cmps
daa
add
push
mov
sahf
jmp
sbb
(bad)
fdivr
repz
inc
sti
push
dec
std
cmps
into
push
xor
xchg
pop
add
stos
or
call
or
int3
mov
sti
fistp
enter
push
pop
push
ss
call
sbb
pop
inc
out
jae
or
add
or
inc
pop
jno
enter
push
lds
cmp
mov
mov
push
retf
pop
mov
mov
jmp
push
sub
test
fist
loope
(bad)
stos
jb
mov
sar
fild
push
pop
cmps
fdivr
lods
lock
lea
clc
mov
mov
pusha
xchg
loopne
push
loopne
sbb
jecxz
out
push
aad
dec
add
aaa
adc
fninit
mov
js
mov
mov
cmps
int3
fld1
xchg
movs
gs
pop
xchg
or
pushf
out
push
add
mov
push
sub
call
in
in
push
dec
fs
pop
adc
call
dec
mov
ret
das
sub
dec
(bad)
or
int
lea
cwde
retf
push
xchg
jmp
mov
test
xor
int
retf
leave
dec
loope
call
xchg
test
(bad)
push
inc
mov
cli
xchg
out
lds
jmp
outs
mov
cld
add
xchg
push
adc
fwait
lahf
push
push
and
mov
xchg
cdq
cmps
mov
gs
test
cmc
cdq
ja
mov
lods
rol
je
les
les
out
leave
fs
movs
cli
mov
ret
clc
loope
cld
sbb
imul
aad
cs
pop
int
inc
or
mov
mov
into
jmp
xchg
xchg
outs
lahf
add
push
inc
push
mov
mov
iret
add
xlat
aam
cld
or
std
dec
or
(bad)
xlat
nop
jmp
cmp
inc
(bad)
in
mov
sub
xchg
jmp
jecxz
lahf
pop
lods
stc
push
fmul
inc
clc
out
mov
stos
xchg
jmp
or
ins
mov
jle
ret
add
inc
imul
or
push
(bad)
cld
js
fidivr
push
lsl
xchg
out
inc
scas
shl
inc
dec
stos
mov
pop
ret
cmp
test
(bad)
mov
dec
mov
pop
xor
cli
add
sub
or
xor
test
pushf
icebp
mov
push
out
jp
sbb
sub
iret
add
(bad)
popf
mov
fisub
and
pop
jle
les
pop
cs
push
outs
mov
lods
cli
cmc
mov
fnstsw
(bad)
ror
and
cwde
scas
lock
call
hlt
aas
inc
mov
and
call
rdtsc
xchg
push
fsubr
mov
scas
sbb
aas
sbb
cwde
xor
icebp
lods
cmp
repz
cmp
fbld
ret
mov
aas
test
ret
pop
push
jae
jnp
pop
(bad)
popf
pop
and
ds
push
pop
mov
mov
push
inc
leave
fsub
mov
mov
lock
cmps
push
mov
pop
jno
dec
mov
dec
sub
pop
sbb
mov
inc
jle
and
pop
pop
adc
pop
add
sub
xlat
add
shr
add
loope
adc
(bad)
jns
pushf
fdivr
ficomp
and
fstp
dec
add
and
push
cld
pop
xchg
xchg
mov
xchg
add
adc
jae
clc
popf
cmps
pop
sbb
dec
mov
outs
cmp
pop
adc
and
push
and
aad
lods
lods
inc
imul
or
or
pop
jg
xor
inc
fs
jp
jo
imul
int
sti
popa
adc
fst
mov
jne
push
and
add
mov
add
jo
jae
xor
data16
arpl
data16
sbb
mov
test
mov
ins
cs
inc
out
jo
mov
xchg
outs
mov
xchg
xor
fsubr
push
dec
mov
out
popf
add
imul
or
stos
shr
or
mov
inc
xchg
ins
loope
or
cmps
repnz
not
pop
pop
and
cld
loop
sahf
int
fwait
jmp
mov
outs
(bad)
jae
sub
push
mov
jmp
pop
sub
retf
fcom
xchg
inc
fsubr
cmovp
dec
sahf
dec
pop
xchg
pop
jp
pop
jno
fmul
mov
fcom
mov
inc
imul
std
mov
sub
(bad)
out
in
cmp
pop
sub
clc
mov
pushf
mov
and
mov
add
xor
std
nop
lahf
and
fwait
sub
push
sbb
fidiv
lods
enter
cmp
push
push
mov
mov
push
push
stos
ret
mov
push
add
push
pop
jl
mov
pop
mov
movs
icebp
or
hlt
add
jnp
(bad)
test
scas
mov
or
sbb
test
pop
std
jae
outs
push
(bad)
cmp
cld
cmp
mov
sub
shr
repnz
xor
jbe
xchg
push
hlt
and
inc
and
push
pop
inc
sbb
push
movs
cmp
mov
ja
pop
mov
add
pop
and
test
pusha
pop
mov
dec
shr
sbb
mov
push
popa
jecxz
fistp
or
jecxz
add
ss
neg
jo
movs
jecxz
xor
push
rol
jecxz
ret
pop
or
or
call
xchg
cmp
mov
or
lahf
and
lock
mov
in
mov
aam
push
addr16
sti
in
adc
jns
xchg
jp
cwde
sub
test
sub
and
int3
cdq
push
ud1
leave
iret
aam
xchg
xchg
cmp
jmp
mov
push
mov
daa
pop
push
fiadd
loope
xchg
cmp
sub
cmc
fincstp
imul
cmp
xchg
out
out
jge
popf
out
dec
nop
daa
movs
imul
fld
js
xchg
sbb
ins
mov
mov
mov
rcl
mov
jmp
test
inc
xchg
add
add
stos
les
push
cmps
rcl
iret
ss
int
xor
leave
cdq
sbb
lods
ds
push
and
mov
icebp
imul
nop
push
jmp
daa
popa
fwait
sub
lahf
push
dec
mov
addr16
test
mov
mov
cmp
repz
icebp
stos
or
inc
out
addr16
cld
push
cmp
test
push
test
push
in
rol
mov
(bad)
pop
pop
adc
dec
movs
cmp
push
pop
adc
movs
adc
dec
(bad)
loopne
jae
and
in
stos
xchg
in
adc
es
fmul
daa
mov
pop
xchg
add
loope
mov
(bad)
bound
and
jmp
mov
sub
cs
ins
and
push
sbb
mov
and
jecxz
in
imul
sbb
mov
stos
xchg
pop
push
inc
pop
pop
es
pop
inc
fdiv
leave
mov
in
jg
pop
or
mov
daa
add
test
push
mov
mov
jo
repz
popa
(bad)
lds
sahf
mov
in
jle
cmp
es
sub
imul
pop
mov
sti
outs
mov
push
push
repz
cs
fsub
xchg
lods
out
icebp
mov
mov
xchg
sub
in
add
pop
data16
mov
cmps
xchg
fcomp
jb
cmp
aad
push
xchg
xlat
jg
sbb
sub
(bad)
and
and
jmp
sbb
loop
ss
mov
pop
retf
mov
in
mov
pop
aaa
je
sub
adc
pop
(bad)
daa
fild
mov
cmp
pop
out
inc
mov
into
add
mov
xor
(bad)
pand
in
aaa
in
and
mov
sti
xlat
and
retf
xchg
or
push
push
jecxz
dec
mov
mov
sub
ficom
popa
std
mov
pop
add
mov
sahf
adc
cmp
or
cmp
mov
fidivr
out
xchg
push
mov
test
or
cmc
iret
or
cmps
jle
jecxz
lock
pop
and
mov
sbb
jp
inc
xor
sbb
adc
cmc
repnz
jp
loope
add
addr16
cmp
fisttp
mov
je
cmc
pop
cld
out
adc
cmp
sbb
pop
xchg
pop
pop
out
jge
add
mov
and
mov
ds
mov
(bad)
xchg
jg
or
pop
out
xchg
les
mov
mov
adc
add
hlt
retf
test
jne
in
adc
movs
xor
mov
sbb
push
push
cdq
push
nop
jne
jmp
dec
cs
push
mov
rcl
fdivr
mov
loop
mov
pop
xchg
sub
pop
sar
mov
fsub
dec
lds
adc
(bad)
push
loopne
dec
(bad)
in
pop
(bad)
daa
xor
ds
rol
das
mov
pop
add
push
ja
in
jbe
popa
es
ss
mov
cwde
arpl
jae
cmp
xor
bound
pop
inc
outs
popa
arpl
and
cmp
push
(bad)
cli
adc
and
pop
xchg
xchg
push
fimul
idiv
mov
mov
cmps
enter
jge
cmp
or
adc
pop
push
jmp
jne
std
repz
push
xchg
push
vphaddwd
xchg
dec
push
out
add
(bad)
push
shl
pop
add
xchg
sub
cwde
push
xchg
and
fsubr
cmp
mov
int3
cmp
add
and
mov
cld
dec
js
pusha
dec
adc
js
pop
or
in
mov
je
inc
xchg
repnz
int3
mov
or
rol
mov
ret
cld
jecxz
pushf
mov
sub
inc
jmp
inc
or
mov
in
lds
daa
lea
fstp
sbb
clc
ret
cmp
out
adc
push
rol
adc
mov
jge
das
scas
je
push
rcl
adc
jmp
mov
arpl
xchg
mov
mov
popa
int3
leave
mov
jp
dec
cmp
scas
adc
mov
adc
mov
aaa
jge
in
xchg
pop
aam
aaa
ja
and
xor
cmps
lahf
ins
sub
jecxz
mov
ja
pop
fwait
sub
aaa
dec
lods
stos
fisubr
push
xchg
mov
nop
shr
sti
je
pushf
jle
mov
xchg
gs
iret
rol
in
sti
dec
push
cmps
and
div
jne
xchg
sub
cmp
movs
pop
pusha
data16
xchg
scas
arpl
jle
mov
std
cld
xchg
and
clc
jae
shr
adc
mov
inc
iret
test
scas
fstp
add
pop
mov
daa
pushf
dec
arpl
cmps
mov
inc
push
inc
fldenv
adc
jb
shl
test
addr16
retf
mov
ja
mov
push
sbb
enter
int
pop
imul
push
ins
sub
scas
jmp
mov
dec
inc
pop
dec
stc
pop
pop
dec
jle
ins
jmp
cmp
push
pop
jno
lock
ja
or
in
pushf
sahf
leave
jle
jne
jp
add
or
push
cmp
sbb
sbb
inc
and
pop
jl
sub
jmp
loop
sbb
fsubr
mov
cmp
push
jno
mov
adc
jo
or
pop
and
pusha
arpl
cwde
jl
sub
cmp
or
stc
or
dec
adc
test
xchg
int3
(bad)
mov
test
mov
lods
fcom
mov
dec
or
aas
xor
div
clc
mov
cwde
xlat
clc
lock
jae
jecxz
add
repnz
(bad)
(bad)
out
push
inc
adc
mov
cmps
push
cmp
in
enter
ja
xchg
call
dec
retf
jmp
jg
not
and
sbb
es
ret
xchg
add
cld
out
jno
inc
sbb
dec
xchg
pop
cmp
stos
pop
aas
jl
mov
pusha
fst
push
aam
jge
mov
mov
adc
xor
clc
fmul
pop
repnz
ret
loopne
cmc
ficomp
xchg
test
iret
lahf
add
xchg
mov
es
in
push
test
movs
jmp
sahf
adc
sbb
pop
in
push
add
push
mov
adc
(bad)
and
in
cld
(bad)
push
(bad)
in
fbld
mov
push
fcomip
sbb
aam
fstp
fimul
add
iret
ror
adc
add
jns
rol
stos
dec
jmp
push
fisttp
push
cmp
and
push
mov
sti
mov
ins
mov
xchg
adc
retf
retf
dec
push
add
bound
std
mov
adc
fidiv
stos
adc
sub
jae
inc
repz
sub
stc
dec
shl
mov
mov
sub
ret
sub
addr16
lds
mov
mov
adc
in
sub
xor
ss
icebp
call
xor
push
jb
lds
retf
out
fs
sets
push
cmp
xor
nop
(bad)
dec
sbb
shl
jae
aaa
repnz
stos
test
and
or
mov
arpl
mov
shr
jb
xor
int3
dec
jo
adc
lods
sar
add
pop
push
add
sub
add
or
xchg
inc
cmp
xor
jo
stc
adc
aad
dec
jbe
sar
std
sbb
cmp
in
inc
fcomp
pop
(bad)
xor
jmp
push
movs
mov
adc
(bad)
ror
mov
pushf
rcl
dec
stos
stos
fld
mov
mov
aam
mov
clc
cli
rcr
xlat
mov
xlat
mov
test
shr
call
stos
inc
mov
jnp
dec
shr
arpl
jmp
in
push
cli
add
xor
es
loope
jg
mov
cld
(bad)
jecxz
js
or
rcr
dec
jnp
pop
or
shl
jns
lds
push
adc
shr
adc
or
pop
cmp
mov
and
test
adc
popf
mov
inc
mov
sub
push
xor
cmp
inc
sbb
mov
pushf
pop
aam
push
mov
mov
pusha
sti
push
jp
test
in
add
and
pusha
xor
out
or
push
mov
(bad)
xor
sbb
mov
jnp
les
clc
xchg
ret
pop
imul
sub
dec
cmp
push
retf
test
pop
call
inc
mov
lock
(bad)
out
adc
sbb
lea
pop
clc
jae
mov
pop
lds
mov
push
xor
test
loopne
or
or
sbb
mov
enterw
jae
cmp
add
cmp
int
mov
repnz
ret
adc
jmp
clc
movs
pop
icebp
rcr
adc
add
in
movs
sti
lea
inc
test
cli
jns
loop
xor
fmul
adc
or
outs
push
pop
push
mov
xchg
test
pusha
test
cmp
adc
or
or
int3
and
mov
and
stc
outs
jne
adc
cdq
addr16
cmp
adc
or
and
push
test
xlat
dec
(bad)
imul
xor
loopne
xchg
fidiv
outs
add
lahf
in
dec
pop
rcr
call
mov
out
mov
pushf
int3
call
dec
dec
loopne
xchg
fisubr
sti
xor
cmps
fnsave
inc
imul
je
adc
hlt
cmps
rol
cmp
hlt
mov
push
pop
push
cmps
rcl
pop
outs
aas
add
es
jne
dec
jmp
adc
es
or
mov
push
or
aam
push
jno
pextrw
nop
stos
shr
cwde
pop
cmp
js
add
xor
mov
add
xchg
push
fmul
or
push
test
mov
cmp
sub
test
sub
(bad)
enter
imul
and
test
sbb
dec
std
outs
movs
or
inc
adc
or
stc
outs
call
in
cmp
js
outs
pop
sar
loope
loopne
xor
xor
add
ds
adc
push
add
in
cmps
sbb
mov
es
push
xchg
les
ret
call
jmp
dec
xor
cdq
ins
dec
dec
in
in
push
fwait
ror
xor
enter
sub
mov
popf
lea
add
gs
pop
mov
ss
inc
out
jle
pop
xchg
inc
pop
(bad)
cmp
cld
inc
xor
xor
not
call
mov
mov
ins
mov
test
(bad)
pop
jno
jle
xchg
dec
nop
add
imul
mov
and
pop
dec
inc
loopne
loop
sbb
push
test
sahf
jo
and
(bad)
fld
jg
pop
and
enter
cmp
cmps
cwde
jns
imul
push
push
ret
inc
les
arpl
test
jne
mov
fnstenv
mov
test
xlat
call
mov
(bad)
ja
sbb
fbld
xor
sub
push
lahf
iret
jl
xchg
dec
xchg
addr16
fst
imul
fs
mov
cmp
ja
lds
ficom
cmc
mov
dec
popf
cmps
iret
cmps
mov
in
add
sar
or
imul
sbb
inc
adc
dec
inc
int
mov
jns
cmps
or
mov
mov
cmp
je
xchg
stos
mov
push
jmp
(bad)
cmp
jp
ret
call
imul
jne
retf
icebp
dec
mov
and
imul
sub
ss
pop
dec
repnz
fisttp
cmp
sub
mov
lods
sub
fild
inc
adc
ss
mov
cmps
sub
outs
fisttp
imul
or
in
cmps
ins
leave
mov
fcom
push
sahf
xor
mov
dec
add
clc
hlt
push
fild
push
arpl
das
push
jo
(bad)
xchg
xchg
lods
sbb
pusha
icebp
sub
xor
pop
sub
(bad)
lods
cmp
ins
mov
inc
xor
int
movs
inc
cmp
add
and
repnz
add
sti
fidivr
cmp
cmp
inc
mov
push
ror
xor
lock
xor
stc
push
lea
adc
or
dec
imul
add
test
and
adc
mov
sbb
and
jno
or
out
imul
in
aam
scas
rol
cdq
cmp
int3
pop
sar
and
das
mov
cmp
or
add
cmp
cmp
xor
mov
inc
stos
push
push
xchg
sub
mov
fwait
or
mov
jb
addr16
and
jnp
jns
push
xchg
popf
(bad)
add
jmp
sbb
push
xchg
pop
sub
(bad)
not
push
xor
aaa
xor
ror
out
ret
push
sbb
xchg
gs
inc
dec
mov
lahf
push
dec
jmp
push
fsub
cmps
mov
inc
mov
(bad)
das
out
jg
mov
adc
popa
or
xchg
push
jge
mov
clc
lods
fdivp
jns
pop
imul
jo
or
retf
jb
sub
retf
lock
inc
in
jmp
mov
fdiv
mov
lods
push
push
adc
and
lods
dec
scas
imul
xor
mov
xchg
xlat
sahf
and
lock
into
call
in
adc
jecxz
retfw
test
paddsw
popa
jle
jg
inc
stos
cdq
xor
cld
or
jb
add
cwde
lds
mov
jb
xchg
dec
mov
scas
gs
imul
loope
call
das
mov
mov
ret
jb
sti
pop
shl
jl
fistp
jmpw
mov
cmps
push
ffree
inc
or
jno
aaa
add
jecxz
inc
outs
jge
mov
push
and
jo
loope
loope
xlat
add
add
into
cs
lods
mov
inc
mov
push
cmp
push
or
shl
pop
in
retf
lock
stos
call
jmp
(bad)
jle
sub
in
inc
je
jge
lahf
(bad)
jne
les
mov
iret
push
sbb
ds
cld
xchg
mov
ja
fldcw
pop
nop
in
rol
and
inc
xchg
inc
dec
repz
leave
mov
(bad)
mov
pop
cmp
or
inc
xchg
cmc
mov
xchg
dec
mov
shl
jecxz
jmp
(bad)
not
inc
in
pop
rol
fldcw
fwait
adc
fs
lods
dec
or
xchg
lods
pop
sbb
popf
adc
sbb
cld
fld
or
loop
outs
xor
fsub
out
ins
xchg
pop
add
cmp
xor
cmp
xor
inc
loopne
xchg
mov
in
retf
and
outs
xlat
test
xor
or
je
xor
mov
xchg
rcr
inc
push
sbb
add
lock
ror
mov
add
mov
push
push
jecxz
ja
aad
test
add
add
adc
mov
das
add
mov
fwait
js
inc
sub
push
out
xor
xor
inc
push
out
dec
and
sbb
es
test
and
dec
xor
stc
out
mov
xchg
fs
stc
sub
adc
add
cld
(bad)
retf
cmp
in
xor
out
mov
(bad)
jl
pop
popa
sar
push
jge
mov
adc
sub
ins
jae
jl
nop
jmp
add
xor
push
pop
mov
rcr
jnp
les
pop
xchg
(bad)
pop
movs
adc
jg
mov
pop
and
adc
ss
pop
gs
mov
imul
push
jg
ret
leave
mov
mov
push
loopne
cmp
push
push
mov
scas
jo
loope
cld
mov
pop
jmp
jge
(bad)
add
inc
std
add
and
fild
cli
clc
mov
jecxz
jno
or
daa
lods
stos
xor
xor
pop
sar
xor
add
call
pop
out
imul
test
pop
mov
shr
xchg
push
lahf
mov
pop
in
mov
push
mov
test
fwait
popf
cld
cmp
or
scas
cmp
jmp
adc
(bad)
adc
std
adc
inc
dec
aas
and
add
cwde
bound
ss
arpl
test
push
mov
pop
movs
push
add
push
fstp
nop
sbb
iret
sub
int3
xchg
or
call
mov
add
pop
aad
ss
mov
imul
inc
dec
and
fsubr
repz
inc
clc
fstp
xor
mov
loopne
xchg
test
xor
xor
jg
mov
outs
fwait
xchg
rcr
mov
jmp
pop
out
inc
inc
ins
add
dec
les
jl
lds
pop
cld
mov
ret
out
out
aam
adc
out
jp
adc
and
js
pop
aas
dec
and
ins
scas
xchg
mov
(bad)
and
lea
hlt
retf
inc
mov
inc
sti
sub
std
popa
jecxz
cmp
push
mov
pop
shr
push
mov
outs
mov
mov
push
dec
std
pushf
inc
dec
push
not
cld
sub
jecxz
push
dec
xor
dec
fs
cli
sbb
popa
cld
aas
sbb
mov
sbb
adc
aam
(bad)
int
cmps
mov
jp
ret
mov
cmc
sahf
retf
xchg
and
js
je
push
push
loop
cmps
or
xchg
or
fwait
adc
jg
rcr
jns
pop
xor
or
jns
les
popf
jle
dec
mov
pop
dec
pop
scas
pushf
add
sti
jb
push
btr
jbe
add
int
sbb
cmp
fdivr
dec
or
cdq
out
cwde
std
(bad)
rol
xor
xor
push
mov
cmp
or
lahf
jae
js
repz
les
and
jns
stos
xor
cmp
outs
add
test
out
and
xor
mov
mov
outs
jmp
and
std
in
xor
jbe
push
frstor
scas
cli
sahf
into
push
sbb
ror
test
mov
outs
cmp
or
ins
les
fdiv
mov
cmc
std
inc
xchg
sub
fcom
aad
ret
xchg
inc
rcr
imul
arpl
mov
or
imul
rol
test
out
or
xchg
mov
and
xchg
or
ret
aas
mov
or
lds
sbb
fs
add
(bad)
cmps
and
(bad)
jbe
inc
aas
add
xchg
xchg
adc
ja
in
cld
jbe
push
push
mov
loop
imul
mov
lods
or
push
fnstcw
xor
cmp
push
aaa
outs
mov
movs
xor
sti
shl
cmp
jmp
sbb
add
xchg
xchg
fild
test
not
jb
stos
or
xchg
ret
aam
xor
imul
lods
xchg
clc
mov
sahf
test
or
push
(bad)
iret
mov
bound
cmp
sub
xchg
aam
inc
cmps
ds
cli
cmp
outs
into
ins
sub
lods
fwait
pop
mov
dec
test
or
xchg
test
inc
cmp
mov
xor
aam
and
pusha
rcr
xchg
xchg
sbb
mov
jbe
mov
add
sub
and
clc
xlat
or
mov
sahf
lahf
jnp
or
jbe
or
mov
sub
icebp
push
cmc
adc
sbb
xchg
rcl
lds
dec
lea
pop
out
add
icebp
stc
stc
popf
hlt
(bad)
dec
clc
sub
mov
mov
or
sub
lds
jp
hlt
adc
sbb
dec
xchg
cli
in
cmp
mov
mov
inc
shr
loope
(bad)
int3
fwait
add
(bad)
mov
fsub
dec
loopne
mov
sub
lahf
test
xor
push
aas
mov
or
jecxz
xchg
cld
jb
sub
jmp
pusha
iret
(bad)
push
gs
mov
loopne
fcom
mul
mov
lods
sub
scas
ss
outs
js
add
cmps
retf
push
cmps
scas
sub
mov
cmp
cmp
test
xor
fdivr
rol
ja
cli
rcr
(bad)
mov
scas
js
dec
mov
adc
gs
movd
pop
adc
cmc
repz
fist
mov
adc
mov
jecxz
nop
inc
out
mov
(bad)
loopne
cdq
and
cmovge
movs
jp
and
(bad)
call
and
repz
dec
add
imul
int
mov
mov
test
xchg
or
shr
pop
sub
xchg
(bad)
cmps
aad
mov
add
jne
sti
dec
scas
adc
movs
test
mov
cmp
dec
leave
mov
mov
retf
adc
imul
in
or
pop
call
stos
ja
adc
cwde
retf
daa
mov
fwait
push
ja
jmp
mov
fs
adc
mov
xchg
mov
or
rcr
jecxz
cld
es
sahf
fadd
cmp
pop
in
pop
retf
xchg
js
repnz
mov
mov
sbb
movs
hlt
fs
inc
xchg
jp
push
cmps
inc
in
adc
or
push
aam
iret
inc
add
retf
push
xchg
jb
lock
popa
stos
mov
jecxz
pop
test
iret
xor
inc
add
or
test
mov
pop
rol
shl
(bad)
jmp
call
cwde
pop
mov
ror
adc
rcr
pusha
mov
int3
mov
aas
jne
mov
imul
mov
shl
push
xchg
jne
in
data16
out
xor
mov
or
sbb
imul
in
or
mov
test
in
neg
add
push
sub
test
pop
xchg
retf
out
icebp
aad
arpl
dec
dec
xchg
jg
es
lods
cmp
(bad)
data16
stos
push
adc
cli
dec
clc
je
or
ins
test
sub
daa
movs
mov
bswap
ret
sub
jae
sub
loope
jp
cwde
xchg
jns
ret
mov
jge
xchg
dec
out
mov
pop
pinsrw
sahf
cmp
mov
adc
adc
jns
jae
das
in
xor
mov
mov
int3
push
mov
xor
aad
cld
sub
mov
xchg
inc
sbb
(bad)
daa
fmul
in
daa
lods
or
out
rcl
sub
jb
push
mov
leave
sbb
sbb
push
hlt
js
xor
pop
jb
(bad)
pop
call
fyl2xp1
aad
hlt
data16
imul
aad
leave
jb
sub
mov
xor
or
js
mov
pusha
repnz
test
movs
div
mov
(bad)
adc
shl
add
sub
aaa
jne
inc
dec
xor
dec
ss
retf
pop
push
xor
(bad)
pop
dec
pushf
sbb
aas
fdivr
(bad)
repz
pop
or
popf
cmp
xor
push
lods
mov
hlt
sub
ja
pop
stos
mov
imul
stos
cmp
jecxz
dec
(bad)
push
jae
jnp
sbb
lea
pop
add
jno
retf
scas
cmps
neg
jmp
cmp
jmp
xchg
inc
xor
ret
mov
adc
movs
xor
add
mov
jecxz
movs
scas
call
ins
loope
ja
fild
sub
adc
or
movs
push
(bad)
jl
and
imul
mov
ins
cdq
sub
add
and
jp
out
enter
pushf
add
dec
push
(bad)
add
dec
sbb
arpl
rcl
dec
(bad)
dec
inc
sub
sub
lds
ds
add
xchg
jle
mov
mov
inc
or
pop
mov
mov
mov
nop
stc
ret
jecxz
aas
out
mov
mov
in
clc
in
outs
or
iret
push
inc
jbe
mov
lahf
dec
std
mov
les
adc
(bad)
fisubr
addr16
fmul
sbb
and
sub
pop
cmp
dec
pop
ja
inc
pusha
xchg
sbb
jle
enter
add
lods
jmp
movs
mov
cmp
test
imul
scas
jecxz
pop
pop
push
adc
int
xlat
jecxz
or
pop
imul
mov
imul
ds
mov
jne
clc
outs
fcom
and
or
sbb
inc
mov
pop
push
call
daa
adc
mov
sub
je
jne
cmp
out
lds
nop
and
xchg
sbb
inc
inc
neg
pop
dec
jmp
fcmovnu
aaa
sub
je
retf
mov
pop
inc
adc
inc
daa
pop
ss
push
cmp
sub
fldenv
fs
rdpmc
xor
adc
xchg
fsub
sub
ret
dec
cmps
add
test
icebp
clc
arpl
mov
cmp
jg
rcr
sub
push
or
lea
or
xor
adc
inc
mov
sbb
xchg
push
fwait
xor
lock
and
retf
icebp
fiadd
push
mov
push
(bad)
enter
loop
movntq
pop
int3
push
dec
inc
fbstp
aas
push
xor
adc
add
(bad)
in
pop
lds
push
shl
arpl
jne
jmp
cmp
(bad)
clc
adc
and
mov
dec
lds
adc
fiadd
inc
dec
(bad)
adc
push
pop
dec
xor
pop
or
mov
lods
push
push
in
dec
adc
adc
add
popa
sti
dec
scas
gs
cmp
add
mov
(bad)
cmp
pop
dec
add
dec
xchg
enter
setne
inc
jge
(bad)
mov
adc
ja
adc
sub
add
outs
xchg
(bad)
repz
xor
fwait
jmp
pop
xor
sbb
ins
call
mov
ja
cwde
fwait
sbb
(bad)
push
pusha
push
aam
add
push
lods
and
js
loop
add
in
test
inc
retf
push
xchg
arpl
xor
mov
push
sbb
mov
xchg
sbb
jle
push
pop
loopne
xchg
mov
push
test
std
jle
stos
and
add
aam
or
xor
inc
xchg
nop
dec
cmp
stos
retf
add
mov
jp
hlt
inc
rep
lods
rol
mov
pop
call
pop
cmp
or
test
pop
push
(bad)
ins
add
fcmovnu
and
add
je
out
mov
(bad)
jns
inc
cmp
js
aaa
xchg
jmp
rep
push
test
cmp
icebp
aam
cmps
in
and
dec
fdivr
xchg
cld
push
and
jns
lahf
or
(bad)
arpl
push
(bad)
and
stos
jmp
int3
add
ds
rol
(bad)
div
adc
mov
test
sbb
xor
jns
jno
inc
aaa
push
aaa
fisub
or
js
aam
js
inc
and
scas
pop
call
test
pop
test
mov
rcl
inc
test
and
inc
push
cdq
stc
lea
dec
push
push
ja
cdq
and
xchg
jmp
(bad)
cmc
pop
pop
jge
xchg
out
add
and
cmp
daa
in
jns
fs
xchg
or
sbb
int3
dec
jns
inc
mov
loopne
jle
cld
cld
out
movsx
aaa
popf
nop
mov
mov
or
xchg
mov
enter
push
jnp
mov
xchg
cld
cmp
adc
cmp
and
mov
xor
fidivr
icebp
and
lds
into
dec
mov
xor
jmp
pop
(bad)
fisub
(bad)
xchg
mov
sub
inc
out
imul
mov
imul
iret
sbb
shl
inc
pop
jmp
aas
mov
cwde
cli
ret
xchg
ins
cwde
rcl
(bad)
xor
test
inc
dec
and
or
dec
imul
or
dec
(bad)
or
iret
das
sbb
(bad)
enter
add
jo
xor
mov
shr
dec
cmp
push
int
hlt
dec
xor
or
popa
add
xchg
add
mov
or
adc
pop
and
fadd
jbe
sub
call
jo
addr16
test
and
int3
rcl
push
mov
dec
mov
pop
dec
xchg
adc
adc
lock
arpl
jno
mov
lock
ror
(bad)
fistp
stos
mov
mov
arpl
bound
in
dec
cmc
in
mov
cld
pushf
mov
in
test
mov
adc
(bad)
cmp
jl
aas
inc
jp
xor
sub
popf
and
mov
ret
push
loope
loope
xor
mov
xor
scas
mov
pop
daa
call
mov
imul
fsubr
into
mov
jge
xor
push
dec
test
add
cs
lods
cmps
lahf
push
push
mov
sbb
test
ror
in
loopne
sbb
jl
imul
cwde
or
jmp
enter
pop
push
sti
mov
cs
in
xchg
call
mov
push
jo
popa
adc
outs
cmp
pop
in
xchg
inc
xor
push
je
mov
inc
inc
pop
adc
(bad)
sub
cmps
int3
cmp
jge
out
xor
and
lods
cld
rol
(bad)
(bad)
push
(bad)
loopne
je
add
add
xor
sub
mul
int
xlat
aam
sbb
test
in
cmp
push
xor
leave
iret
dec
cmp
or
inc
sub
(bad)
in
jp
mov
mov
out
jb
fs
outs
(bad)
cld
add
cld
or
scas
sub
neg
imul
jo
lods
vpaddq
pop
call
retf
aaa
loopne
retf
pop
(bad)
sbb
pop
cdq
retf
dec
xor
fdivr
aaa
call
dec
xchg
mov
fidivr
sub
fld
ret
cmp
mov
out
fnstsw
xor
pushf
push
push
fst
fadd
call
pushf
loope
les
push
cmp
mov
inc
dec
cwde
aas
xchg
pop
rcr
xchg
cmp
repz
aam
mov
sub
std
scas
sub
out
push
sbb
jg
jp
pusha
jnp
fs
sbb
mov
mov
sti
sar
imul
hlt
cmp
retf
pop
xchg
cmps
fbstp
loop
call
adc
xor
jns
(bad)
push
pushf
(bad)
enter
fwait
jne
jecxz
cmps
sbb
xor
adc
shl
jecxz
push
call
fdiv
xchg
xor
data16
leave
jmp
cmp
and
sbb
push
dec
jae
clc
pushf
pop
rcr
inc
adc
fxch
add
adc
or
adc
xchg
inc
daa
jmp
or
dec
popa
adc
push
out
xor
nop
scas
pop
mov
movs
pop
mov
mov
mov
adc
pushf
mov
(bad)
aad
push
in
lahf
int
aas
aas
ficom
(bad)
xchg
stos
fnstenv
in
mov
retf
gs
rol
push
adc
fiadd
repnz
xor
mov
scas
(bad)
loopne
(bad)
in
pop
xlat
stos
(bad)
in
inc
fistp
lea
xchg
jnp
jmp
jno
ja
add
test
hlt
ins
mov
repnz
shl
pop
or
stos
jmp
cmps
iret
call
imul
push
dec
fisttp
int
lods
dec
dec
imul
clc
cmps
aad
adc
sub
and
sti
mov
mov
mov
sub
mov
imul
neg
cli
pop
fwait
sub
loopne
jle
lods
lahf
cmp
or
sub
jae
or
(bad)
call
bound
and
cmps
fisttp
sbb
mov
pushf
lods
jle
adc
inc
in
arpl
mov
push
jp
jmp
mov
push
lock
cmps
stos
rcr
je
xchg
aam
repz
xchg
push
inc
xchg
ffreep
outs
cmp
mov
mov
add
mov
push
nop
mov
fimul
out
in
mov
jae
cdq
loopne
sub
test
xchg
iret
in
bound
in
add
inc
fst
dec
mov
mov
hlt
sub
mov
test
mov
icebp
ds
cwde
jl
mov
mov
push
ret
jl
inc
dec
aas
dec
mov
dec
fmulp
or
mov
push
push
cmp
add
jmp
out
xchg
or
addr16
cmc
cmp
enter
into
jecxz
xor
xor
sahf
push
ret
lahf
scas
add
sub
jle
push
push
int
inc
pop
mov
dec
iret
invd
std
call
jmp
jns
push
outs
cmp
je
out
es
jmp
jmp
or
mov
gs
movs
fadd
mov
xlat
xor
and
enter
mov
iret
jno
(bad)
jmp
sbb
imul
(bad)
mov
inc
test
out
mov
sbb
inc
or
mov
inc
adc
or
ror
mov
push
inc
pusha
out
adc
lock
fwait
sub
mov
dec
adc
or
ja
mov
mov
cmovs
aaa
(bad)
lds
or
popa
rcr
mov
mov
je
outs
sti
ror
fldcw
and
das
and
movs
or
rcr
fucomi
pop
neg
test
sbb
daa
adc
jne
mov
test
test
mov
pop
fidivr
and
dec
js
pusha
cld
mov
inc
outs
lods
das
pop
stos
push
hlt
jle
adc
hlt
jno
push
imul
loope
mov
inc
int3
push
sub
add
adc
push
ficomp
test
das
repz
and
aas
scas
mov
mov
(bad)
inc
retf
(bad)
xor
push
sub
lods
mov
cmp
jg
sbb
dec
xor
jbe
mov
push
call
mov
add
loope
and
xchg
cdq
aaa
mov
or
inc
jl
les
loopne
xchg
mov
(bad)
cli
in
jbe
push
push
xchg
mov
mov
out
adc
scas
scas
pop
push
jl
pop
mov
xchg
and
mov
jo
(bad)
out
sbb
outs
mov
aad
xchg
cli
push
je
mov
popf
mov
push
lahf
mov
pop
outs
jno
movs
mov
mov
enter
(bad)
adc
sbb
xor
or
mov
(bad)
mov
scas
sub
adc
sub
test
(bad)
loope
stos
std
jmp
retf
jns
inc
inc
jle
sub
mov
mov
push
mov
inc
fwait
lods
and
push
xchg
push
add
int
push
popf
fist
fnsave
test
and
inc
(bad)
hlt
stos
jnp
jge
jae
push
adc
loope
adc
iret
xchg
repz
dec
jecxz
lods
push
fadd
sbb
pop
arpl
sub
pop
js
cmp
xchg
cs
sub
scas
mov
and
stc
and
dec
fcom
cmp
sbb
data16
dec
push
test
lods
stos
sub
push
jae
add
push
sbb
adc
cdq
sti
stc
fstp
push
xchg
(bad)
push
sub
xor
shl
aaa
push
xchg
jge
(bad)
in
jo
and
xchg
into
outs
sbb
fsubrp
jbe
sbb
movs
xchg
rol
ins
enter
imul
pop
(bad)
adc
imul
sahf
push
sub
(bad)
rcl
cs
lods
or
inc
mov
xchg
and
cmp
pop
data16
push
push
lock
or
das
adc
ins
cmp
add
push
aas
inc
mov
jg
test
arpl
and
or
shl
jmp
xchg
sbb
and
(bad)
call
clc
push
mov
inc
int
frstor
pop
pop
add
adc
add
fdiv
rcr
xchg
cmp
xor
aam
jae
les
mov
inc
sbb
bound
jns
in
mov
arpl
xchg
mov
and
pop
punpckhwd
out
adc
mov
cmovge
imul
and
jno
jne
leave
aas
pop
mov
lods
push
jo
cwde
xchg
add
dec
icebp
dec
dec
movs
xor
mov
loopne
mov
out
int
sbb
in
inc
xor
or
push
mov
imul
es
inc
jp
cmps
dec
mov
ret
mov
scas
mov
leave
and
jle
push
and
pop
push
push
mov
jb
push
popf
ficom
cmps
mov
and
data16
or
adc
imul
dec
cdq
leave
sti
jne
mov
mov
in
repz
(bad)
clc
mov
movs
test
add
add
mov
inc
and
call
xchg
xor
fcomi
push
dec
cli
pop
jae
inc
jno
loope
test
ds
shr
adc
nop
add
imul
push
cmps
jl
inc
xchg
dec
js
xchg
mov
mov
(bad)
dec
leave
bswap
adc
inc
outs
fistp
lock
xchg
dec
dec
unpckhps
mov
mov
mov
mov
test
aas
fs
mov
or
push
xor
nop
add
lock
xor
int3
(bad)
and
xor
hlt
int3
dec
fldl2t
sub
mov
jmp
outs
cmp
adc
(bad)
fadd
sbb
cmps
mov
(bad)
sti
xchg
repz
scas
in
aam
jmp
retf
and
jmp
int
sti
sahf
adc
(bad)
int3
mov
mov
cmp
push
adc
inc
cmps
sbb
pusha
xor
inc
mov
jecxz
mov
dec
outs
cld
mov
pop
jae
jle
and
dec
fdivr
mov
and
mov
repnz
add
dec
in
jecxz
jns
mov
push
xchg
dec
lods
les
out
push
dec
or
fistp
fild
pop
xchg
or
das
iret
in
mov
call
test
push
push
lock
xor
xchg
vmaxss
ja
or
mov
inc
loop
dec
add
mov
add
sub
mov
jb
gs
pop
dec
daa
mov
inc
jno
mov
or
cli
xor
pop
les
jecxz
(bad)
cmc
pop
inc
add
in
push
stos
mov
(bad)
xor
loopne
xchg
mov
lea
call
jae
sub
push
mov
mov
enter
fdiv
das
test
cmc
in
sti
rcr
aaa
sbb
into
lods
(bad)
push
sub
shl
adc
cmps
(bad)
xchg
xlat
mov
or
jne
pop
and
jge
repz
jmp
dec
push
sbb
test
jl
popf
jo
xor
shl
daa
ss
add
mov
jmp
mov
push
lock
sub
mov
mov
push
into
push
jg
jb
out
movs
push
mov
(bad)
pop
and
mov
mov
push
inc
mov
cmps
sub
in
aas
pusha
mov
scas
xchg
stos
inc
sbb
cmp
xor
ins
mov
pop
pop
imul
(bad)
push
lahf
out
sub
aam
jb
mov
pop
mov
xor
jo
movs
and
fldcw
xchg
xchg
dec
fwait
and
jo
daa
pop
lea
ror
xchg
icebp
dec
sbb
aad
jnp
fadd
mov
mov
pop
sbb
sar
out
out
jmp
add
fwait
lea
out
aas
rol
les
mov
pop
in
jnp
inc
sbb
dec
mov
jno
xor
pop
aam
mov
jno
sub
jl
test
sar
inc
add
cmp
push
fcmovnbe
mov
mov
mov
mov
jne
jecxz
jl
sbb
sti
(bad)
push
outs
fsub
mov
pandn
cmp
jg
out
outs
das
sahf
sub
pop
jo
sub
xor
pop
stos
in
mov
or
and
push
push
nop
(bad)
and
pop
rcl
out
fidivr
pop
cs
(bad)
retf
shl
jmp
mov
dec
mov
ins
pop
(bad)
fucom
push
es
(bad)
jmp
pop
pushf
jl
mov
and
pushf
jge
mov
ja
or
jp
cmp
fcmovne
adc
in
cmp
add
dec
push
ret
xchg
test
gs
nop
frstor
push
cwde
cmp
jbe
repnz
and
cmp
sbb
inc
out
ror
lods
in
inc
mov
call
xor
mov
inc
push
daa
add
enter
sub
or
and
out
adc
loope
add
pop
test
arpl
sub
push
mov
inc
cmp
sub
ss
sub
adc
jb
rol
scas
clc
mov
xor
and
loop
call
lds
pop
shr
cmp
push
lods
mov
inc
and
push
aas
mov
add
scas
cmp
mov
cmp
fwait
inc
in
dec
fild
and
mov
test
gs
add
sub
xor
sbb
pop
aas
push
sbb
cwde
ret
jae
add
mov
sbb
popf
js
add
sbb
out
lahf
and
aaa
sub
std
dec
adc
movs
stc
pop
in
ret
pusha
loope
mov
add
xchg
repz
lahf
cmp
sub
pop
ss
sub
or
cdq
pop
sahf
inc
sar
mov
or
adc
mov
mov
mov
adc
clc
ret
(bad)
add
cmp
jecxz
push
inc
pop
push
out
cwde
(bad)
fsub
fst
sbb
inc
xchg
imul
das
shl
stos
push
mov
pop
out
pop
out
mov
std
jl
push
pop
push
es
not
and
test
loopne
(bad)
jmp
jmp
fnsave
mov
rcl
shl
mov
cmp
mov
jb
mov
cli
fwait
out
push
pop
mov
or
cmp
fcom
ror
push
stos
ficom
imul
jnp
fwait
sar
jle
push
push
test
push
fisttp
outs
fnstenv
aam
fdivr
das
mov
(bad)
outs
scas
rcr
cdq
cmp
push
sbb
lods
cmp
mov
or
imul
jo
outs
cmc
int
pop
sbb
mov
and
scas
les
test
dec
inc
mov
outs
jl
das
paddsw
mov
mov
cmp
stc
adc
push
test
add
and
push
jmp
lods
sbb
sbb
sub
out
mov
ret
mov
push
shr
cmp
push
jp
mov
cmps
sbb
inc
mov
lock
cmp
mov
pop
inc
mov
test
(bad)
mov
pop
dec
pop
lahf
retf
pop
xchg
xchg
xor
scas
cmp
retf
mov
lods
jg
retf
leave
sti
xchg
pop
push
shl
mov
cmp
dec
leave
(bad)
sbb
jns
adc
xchg
icebp
bnd
les
jle
stos
daa
lods
cwde
xor
inc
inc
in
je
stos
rol
add
push
pop
push
xchg
lds
or
jno
int
pop
mov
lock
es
mov
test
jl
cli
mov
int3
sar
mov
cld
ret
ss
push
mov
mov
sar
ins
xor
sbb
jg
rcr
das
mov
scas
jle
gs
mov
push
and
lods
jb
call
push
pop
and
(bad)
mov
sbb
shl
pop
dec
mov
xchg
xor
cmp
dec
sub
repnz
ss
out
inc
jne
lds
out
add
daa
and
xor
ds
fistp
mov
sahf
sbb
and
stc
dec
cmp
xor
pop
sub
and
scas
lods
stc
aas
and
int3
xchg
(bad)
mov
xor
mov
mov
adc
lds
in
repnz
push
mov
ja
cmp
sbb
mov
mov
clc
movs
popa
ja
push
push
cli
mov
int3
fld
imul
inc
cmc
(bad)
or
pop
push
push
test
xor
xor
(bad)
or
xor
jno
ja
xchg
add
sbb
add
push
repz
cmc
sub
das
cli
push
setg
aas
jp
addr16
fld
sub
pop
leave
shr
outs
loope
xchg
jl
cs
sbb
xchg
inc
dec
aad
pop
xchg
test
push
push
push
inc
inc
add
hlt
pushf
test
out
pop
push
out
out
add
pushf
and
das
sbb
mov
sbb
ins
mov
push
punpckldq
dec
push
ja
repz
imul
aad
pop
outs
sub
rcr
cmps
iret
jmp
(bad)
adc
aas
pop
adc
or
xor
popa
push
imul
outs
into
inc
xchg
xchg
push
push
aam
mov
loopne
pop
mov
cld
not
es
call
mov
lods
pop
imul
xlat
call
sbb
(bad)
out
out
aas
pop
call
mov
cwde
je
jge
push
icebp
mov
pop
or
jo
and
pop
es
outs
clc
in
pop
cmps
rcl
into
mov
std
(bad)
test
cmp
or
sahf
ja
ret
xchg
mov
lds
out
dec
or
xor
(bad)
and
aam
rcl
push
and
sahf
mov
and
mul
loope
icebp
dec
rcr
jecxz
es
push
mov
xchg
call
sahf
ins
call
out
dec
ds
sti
jnp
ja
movs
cwde
inc
jp
mov
cwde
dec
nop
mov
gs
mov
xchg
imul
sub
sbb
push
mov
mov
inc
fmul
loop
or
and
pop
sub
lods
dec
xlat
push
iret
sub
and
jnp
arpl
pop
test
mov
jp
pop
pushf
xor
sar
or
arpl
mov
movs
popf
jo
(bad)
loop
mov
adc
arpl
clc
movs
fdivr
push
push
cli
mov
add
test
and
or
(bad)
push
gs
rcr
cmps
ror
inc
fisub
dec
or
xchg
movq
ins
add
mov
pop
mov
shl
add
sub
test
int3
or
inc
fwait
int
out
adc
cmc
ds
cli
mov
lahf
dec
das
jl
std
hlt
fidiv
mov
push
dec
and
shl
mov
ja
es
and
push
or
add
sub
sbb
cmps
dec
push
fidiv
cs
mov
pushf
push
xor
mov
mov
push
cs
mov
cmp
cmp
adc
outs
dec
cmp
mov
lods
repz
pop
pop
sub
mov
adc
push
ret
pop
lea
loopne
add
lods
imul
dec
pushf
sub
sub
stos
mov
jne
out
jae
dec
jne
cmp
cld
scas
das
out
fidivr
sbb
pop
mov
add
jecxz
pop
leave
js
pushf
(bad)
mov
xlat
xchg
pop
jg
adc
arpl
pop
rol
(bad)
lods
addr16
int
push
test
sub
psubd
ror
push
test
loope
aas
sub
push
scas
cld
or
pushf
push
mov
mov
(bad)
hlt
sbb
sub
dec
shl
pop
cs
cmp
je
sar
inc
popf
cli
(bad)
(bad)
sbb
inc
sub
dec
arpl
aas
jo
pushf
mov
arpl
and
adc
jp
sbb
fldpi
sbb
imul
retf
mov
call
jnp
push
fwait
scas
dec
cwde
nop
icebp
inc
arpl
xchg
or
out
jbe
jl
pop
inc
lea
mov
rcl
scas
push
lods
scas
(bad)
out
ins
sub
push
add
pop
push
xchg
mov
sti
pop
and
mov
call
repz
sbb
stos
and
xchg
ret
push
in
sbb
iret
xchg
rep
cmp
scas
hlt
jg
mov
js
mov
sbb
leave
pop
repz
hlt
arpl
add
mov
stc
pop
sbb
les
push
mov
add
xchg
cmc
adc
fbstp
out
or
aam
xchg
sbb
dec
mov
lds
mov
xlat
mov
or
loope
shl
shr
mov
jbe
push
xchg
sbb
fwait
stos
lods
cs
add
int3
cmps
mul
xchg
js
jo
xlat
mov
and
cmp
(bad)
xchg
xchg
int3
sbb
stc
inc
push
jge
dec
pop
fs
push
push
mov
ins
test
outs
imul
mov
sar
jg
fstp
std
outs
xchg
ret
inc
mov
rcl
test
mov
add
pop
sti
push
das
ins
add
mov
mov
cwde
out
push
movs
pop
dec
test
push
adc
cmc
pop
push
inc
retf
popf
jne
pop
scas
push
stos
dec
push
sbb
mov
(bad)
push
loopne
mov
test
ins
ss
xchg
and
xchg
adc
mov
xchg
in
fwait
push
cmp
bnd
mov
cmp
push
mov
jae
or
sub
(bad)
mov
xchg
mov
jl
pop
mov
fs
loope
pop
ja
jle
xchg
lods
fidivr
cld
mov
sbb
fild
pop
lods
cmc
pop
aad
hlt
xchg
and
es
push
mov
lock
idiv
ja
mov
imul
addr16
jg
inc
jmp
call
or
popa
addr16
push
test
jle
xlat
xchg
jecxz
mov
pop
push
sbb
push
jmp
int3
pushf
cdq
sub
nop
fld
or
sub
stos
cmp
sti
enter
div
cmp
ror
js
icebp
dec
(bad)
sub
xlat
lahf
pop
jp
fadd
and
xor
fwait
shr
ss
lahf
cmp
retf
fsub
or
imul
jo
out
int
pop
outs
mov
ret
addr16
das
call
push
mov
inc
inc
push
test
sub
ficomp
pop
les
vmread
fcomp
sub
or
add
lahf
adc
mov
jmp
movs
pop
sub
bound
arpl
mov
dec
mov
jb
xchg
out
aam
jmp
push
mov
sbb
push
add
jns
xchg
adc
mov
out
fisubr
xchg
jo
into
sub
and
jp
adc
sbb
dec
outs
test
repz
jbe
aaa
test
xlat
sahf
lock
mov
call
popf
shl
loope
vpcmov
ficomp
jae
push
scas
fst
adc
ret
cmps
pop
retf
hlt
mov
mov
or
lods
push
xchg
scas
fwait
lea
sti
or
fisttp
movs
mov
sbb
pop
cmp
and
stos
outs
ret
out
int
dec
dec
sti
jns
aas
inc
pop
in
mov
inc
out
sbb
loope
rol
pop
sub
or
aam
inc
outs
mov
and
xchg
dec
mov
and
je
jle
push
xor
in
and
cmc
stc
loopne
icebp
xor
push
jnp
repnz
push
iret
add
rcl
push
push
dec
jnp
mov
in
mov
dec
int
xchg
mov
aas
and
aaa
and
bound
sub
sub
add
add
fs
(bad)
adc
push
mov
cmp
pop
ins
mov
add
test
fwait
jmp
idiv
(bad)
xchg
out
xor
outs
ins
add
std
fcom
ret
mov
cmp
and
icebp
cwde
xor
jmp
cmps
out
stc
adc
je
add
es
scas
or
in
popa
call
sahf
add
pop
sbb
enter
fstp
icebp
xchg
pop
rcr
icebp
sti
loope
data16
rcl
mov
jno
inc
jp
test
jecxz
mov
and
sbb
adc
push
jnp
mov
dec
xchg
sub
pop
sbb
or
iret
xchg
(bad)
and
pop
aas
dec
jne
inc
dec
lock
cli
push
test
xor
jns
mov
adc
xchg
cmps
movs
loope
arpl
mov
mov
cld
pop
mov
pop
cmp
outs
shr
pop
cmc
retf
xchg
ins
jp
js
in
cdq
inc
dec
add
add
push
int3
fidivr
outs
js
push
jbe
adc
jae
jge
cmc
shl
mov
cmps
cmp
mov
fwait
or
jbe
mov
loopne
popa
sub
add
imul
dec
pop
and
push
sub
pop
and
mov
(bad)
out
sbb
nop
push
mov
(bad)
out
ins
or
cmp
call
sub
mul
mov
push
repnz
leave
cmps
push
xchg
in
stos
cdq
in
sub
xor
add
cmp
jp
inc
cmp
jl
mov
pop
arpl
stc
fidiv
cli
call
mov
shl
sahf
aas
into
mov
outs
push
cld
pop
sub
arpl
ficomp
push
ja
and
pushf
div
xor
mov
cs
sbb
xchg
test
xor
mov
mov
scas
cwde
xchg
xor
enter
and
dec
sub
and
daa
add
and
(bad)
or
sbb
cmp
out
jne
(bad)
stc
in
mov
xchg
and
stos
dec
aad
mov
push
mov
lahf
ds
jo
ja
scas
dec
sbb
mov
add
push
popa
inc
lods
jbe
and
into
cwde
xlat
dec
in
lods
fnstenv
cmps
inc
add
or
cs
inc
mov
jns
mov
mov
add
sbb
pop
test
push
loop
adc
(bad)
pushf
js
sub
jns
cmc
mov
xchg
je
adc
cmps
inc
sub
hlt
lods
mov
and
xchg
lds
mov
inc
jo
outs
or
pop
mov
out
lahf
addr16
add
xchg
pop
add
and
addr16
rcl
shl
mov
lahf
loopne
in
test
or
test
push
in
jle
cli
mov
jmp
int
(bad)
mov
sub
mov
xor
dec
test
in
pop
xor
xor
iret
inc
leave
test
adc
inc
leave
adc
loop
jae
jno
fs
xchg
(bad)
outs
cwde
movs
adc
mov
mov
inc
pop
push
dec
aad
mov
leave
jmp
cmps
inc
push
adc
movs
cmp
jg
(bad)
adc
lods
inc
pop
dec
out
inc
adc
addr16
shl
and
pusha
int
xor
pushf
pop
mov
dec
sub
fldcw
add
pop
repz
clc
aam
add
dec
test
fisub
add
add
sub
mov
jbe
clc
sub
(bad)
lods
jae
ss
push
jnp
mov
jge
push
add
pop
jbe
mov
addr16
xor
fs
scas
jns
pop
cld
and
(bad)
sahf
rcr
stos
inc
sub
or
mov
cdq
push
dec
imul
sub
sti
outs
push
call
and
ja
cmp
dec
sub
sti
xadd
jo
stc
mov
and
push
repnz
fidiv
xor
xchg
mov
mov
out
xchg
fcom
cmps
lea
(bad)
(bad)
push
cmp
inc
movs
mov
sbb
pusha
bound
adc
std
jb
or
cli
sbb
(bad)
push
jle
neg
dec
repz
cmp
dec
jae
xchg
cmp
ins
in
out
pop
pop
xchg
stc
fchs
or
(bad)
adc
push
cmc
adc
test
mov
lahf
or
leave
nop
(bad)
sub
popa
inc
icebp
dec
xor
pop
xchg
adc
bound
mov
mov
jnp
xor
call
pop
bnd
fidivr
lahf
sbb
sub
push
ins
cwde
xor
jno
cmp
jecxz
inc
sbb
mov
ror
pop
add
dec
(bad)
loopne
sub
mov
loopne
sub
mov
xchg
pop
xchg
(bad)
jae
mov
and
xchg
mov
outs
adc
lds
fwait
hlt
(bad)
xchg
jns
test
loopne
popf
jg
(bad)
jge
cld
imul
sbb
movs
nop
cs
adc
jne
cwde
div
ins
es
movs
cmp
popa
div
call
mov
dec
adc
push
mov
stc
sbb
dec
loopne
ins
repz
arpl
push
xor
add
pop
xchg
sbb
sbb
loope
adc
daa
mov
lods
(bad)
pop
jp
xor
push
xchg
jne
mov
dec
add
fidivr
jo
cwde
js
dec
mov
add
das
pop
adc
aad
imul
ins
inc
pop
cmp
sbb
bound
jmp
jne
into
ds
mov
imul
or
mov
bound
mov
or
outs
mov
jnp
adc
jg
repnz
push
adc
mov
loop
xor
es
nop
icebp
sbb
popa
mov
mov
lds
aaa
not
mov
mov
mov
cmps
clc
mov
or
mov
retf
pop
sbb
gs
loopne
cmp
adc
xor
lods
cmp
movs
aaa
mov
jp
xor
sbb
mov
xchg
sub
arpl
imul
add
jmp
mov
sahf
push
fs
nop
out
imul
adc
sbb
aas
std
fdiv
pop
xchg
mov
mov
push
fwait
out
rol
push
aaa
inc
ret
adc
add
or
adc
ret
mov
scas
fist
(bad)
xlat
or
lea
pop
xchg
(bad)
adc
ja
cmc
not
movs
ds
clc
pop
pop
xor
pop
dec
push
push
jge
mov
je
jno
mov
dec
sub
mov
xor
repz
push
leave
push
outs
idiv
xchg
lea
xor
jle
iret
cmp
jmp
lock
xchg
cmp
sbb
add
ss
cmp
mov
cs
sub
mov
ficom
or
sub
jp
mov
shl
sbb
out
rcr
aaa
xchg
or
aam
push
hlt
mov
sbb
jge
int3
cs
mov
xchg
and
sub
and
sti
cmp
mov
push
fistp
loopne
push
fstp
lods
in
sub
xchg
mov
mov
push
test
rol
imul
rcr
outs
add
mov
sbb
or
jg
(bad)
jmp
fstp
jl
dec
test
je
lds
rcr
pop
xchg
stos
mov
retf
ror
sub
jbe
gs
cli
fild
cmp
xchg
test
(bad)
imul
ja
add
cmp
cmp
not
out
in
mov
out
lds
or
xchg
ret
stos
sbb
mov
add
xchg
fisttp
lods
ret
fstp
popa
ud1
jae
sub
stc
xchg
and
call
mov
in
mov
mov
sub
out
xchg
(bad)
or
jge
ds
dec
xor
into
push
and
push
push
(bad)
arpl
mov
lods
push
mov
enter
jl
xor
(bad)
mov
push
or
cld
pop
(bad)
lock
xchg
xchg
push
mov
les
ret
mov
sub
jne
pop
and
jge
and
jge
pop
call
adc
retf
lock
ins
ret
cmp
jmp
into
int
int
lahf
and
xor
sbb
shl
xchg
std
ja
sbb
pop
dec
inc
popa
pop
fs
adc
into
adc
adc
xor
mov
icebp
xor
daa
dec
mov
pop
in
or
xchg
sub
push
(bad)
jbe
mov
mov
inc
enter
repz
(bad)
out
inc
ret
jecxz
push
aaa
std
xor
fwait
add
adc
out
fnsave
out
sti
pop
inc
jae
jo
fldcw
lahf
fldcw
ret
(bad)
cmp
xchg
mov
push
cmp
stos
punpckhwd
fist
mov
or
shr
cmp
adc
or
cld
jmp
stos
mov
add
cld
pop
push
adc
clc
scas
mov
pop
cmp
aad
pop
cmp
jmp
or
inc
imul
sti
or
dec
test
push
push
mov
adc
rcr
pop
jne
sti
mov
xor
jle
mov
loop
push
imul
mov
dec
push
outs
(bad)
or
(bad)
(bad)
scas
shl
xor
test
ret
gs
cs
add
xchg
(bad)
sbb
std
stc
(bad)
xlat
lods
or
cmps
aaa
xor
adc
ds
xor
jp
call
xchg
int3
cmp
inc
dec
inc
mov
cli
enter
lahf
test
or
into
popa
sub
mov
in
movs
and
lds
inc
xchg
jbe
ret
inc
in
stos
and
xor
cwde
fst
and
retf
adc
out
(bad)
jnp
xor
retf
push
je
xlat
inc
pop
push
pop
push
movs
fmul
icebp
int3
inc
mov
cmps
sub
adc
sub
addr16
rcl
push
xor
aas
(bad)
adc
or
in
mov
cli
clc
push
loopne
add
sub
pushf
push
mov
lea
out
xlat
xor
jno
adc
xchg
ret
push
stos
out
sub
jp
and
lds
jp
xlat
add
jb
push
in
js
adc
fimul
mov
aam
jmp
push
imul
lahf
jmp
dec
dec
pop
pop
dec
pop
and
inc
mov
inc
rol
(bad)
rol
push
fimul
cmps
sti
outs
inc
or
test
loop
xchg
push
jne
pop
mov
dec
fcomp
jnp
int
jg
sub
stc
add
push
pop
popf
out
movsx
daa
pop
jns
adc
xchg
and
aaa
cmp
cmp
cli
push
jl
scas
dec
sub
scas
lds
rol
and
jb
inc
add
jl
int3
push
addr16
xor
adc
fwait
adc
loope
fld
jmp
inc
scas
ds
rcl
push
xchg
mov
jo
mov
dec
ins
push
out
out
iret
jne
in
xchg
fidivr
push
and
xchg
dec
cmp
sti
cmps
mov
fstp
je
scas
daa
shl
cmp
mov
dec
xchg
dec
add
sbb
pop
sbb
and
add
mov
and
dec
cmps
popf
fnstcw
popf
mov
cmp
sub
mov
xor
fstp
dec
es
mov
push
xchg
rol
add
(bad)
fist
xor
outs
jns
mov
stc
mov
out
mov
jo
sbb
aam
mov
or
lfs
fadd
loope
cmps
cmp
es
retf
and
and
mov
or
(bad)
xor
pop
and
xchg
pushf
jp
imul
pop
das
sub
xchg
xchg
pushf
xchg
mov
addr16
add
mov
cmp
loop
pop
stc
jne
(bad)
sub
das
pop
jb
or
cmps
in
sbb
fistp
js
inc
imul
xchg
dec
cmc
mov
fistp
jle
adc
and
add
je
dec
dec
mov
std
pushf
rcl
pop
cs
mov
ffreep
cmc
(bad)
xchg
sbb
jmp
nop
imul
test
aas
pop
not
out
jb
sbb
retf
lods
pop
dec
das
jecxz
ja
push
mov
xchg
and
mov
mov
les
mov
cmp
in
push
xchg
inc
sbb
inc
fmul
fimul
(bad)
repnz
iret
push
and
xor
adc
sbb
ins
cmp
test
sbb
popa
inc
imul
lahf
dec
icebp
xchg
ds
shl
jne
cmp
aam
jbe
jg
xlat
les
scas
xor
sub
sbb
aad
dec
sbb
fxch
clc
fwait
fwait
hlt
add
pushf
je
mov
and
xor
adc
mov
pop
mov
or
mov
dec
adc
cmp
pusha
sbb
imul
cmp
repz
add
adc
mov
scas
cmps
cwde
lahf
xchg
shr
sbb
call
sub
push
jle
jns
lahf
lahf
sub
js
nop
sar
push
cmp
leave
stos
shr
xchg
movs
dec
xor
cmp
mov
mov
pushf
cmps
iret
leave
and
jp
fisttp
mov
xor
aas
inc
sub
sbb
xlat
out
repnz
js
mov
or
ins
add
js
adc
imul
(bad)
lea
or
sbb
sbb
sub
dec
pusha
fiadd
imul
mov
xor
mov
mov
aas
lds
addr16
cmp
fimul
xchg
push
fist
or
test
in
xchg
cmc
cmc
mov
pop
and
aaa
outs
adc
xchg
(bad)
mov
push
outs
retf
add
sbb
lods
add
or
(bad)
out
xor
clc
out
sub
fs
xlat
loope
(bad)
xor
imul
pop
sbb
and
mov
das
mov
ret
push
xchg
jmp
into
pop
into
xor
dec
mov
pop
daa
adc
sbb
lock
mov
fld
lods
test
pop
cmp
call
jmp
ret
mov
sbb
dec
cmp
cmps
push
pop
add
inc
sub
lods
shl
xlat
(bad)
in
sub
loope
gs
mov
stc
mov
push
pop
sub
cmp
cmovbe
iret
mov
push
lods
rol
(bad)
leave
pop
jmp
adc
movs
pop
repnz
or
ret
in
scas
nop
lods
push
sbb
mov
jmp
movs
outs
shl
inc
xchg
xchg
int3
xor
jl
aaa
mov
ret
pop
pop
sti
nop
sbb
xor
add
and
dec
sub
sbb
ds
cmp
popf
sar
push
and
(bad)
mov
xor
xchg
mov
mov
mov
xchg
push
daa
loopne
cmp
rcl
jmp
loope
mov
imul
je
mov
pop
sub
fldenv
mov
inc
aaa
les
xor
xchg
jmp
sbb
fiadd
ins
cld
xor
imul
inc
jno
in
cmp
dec
ins
lds
add
std
dec
lahf
sbb
inc
mov
outs
dec
mov
pop
ret
mov
push
(bad)
xor
xchg
xchg
adc
lods
pop
sbb
or
mov
out
pop
push
and
loope
iret
mov
not
(bad)
fbld
lahf
push
sub
mov
dec
out
(bad)
gs
sbb
ja
sahf
and
hlt
sub
scas
cmps
mov
outs
cpuid
mov
jmp
shr
lds
in
es
leavew
sbb
popf
cwde
inc
fmul
dec
js
movs
jecxz
dec
mov
cmp
lds
imul
ins
push
enter
fistp
in
out
and
neg
fistp
or
mov
jae
inc
mov
(bad)
cmp
cmp
mov
sub
sub
xchg
std
cmp
aad
je
cmp
pop
jg
sbb
pop
inc
loopne
lods
icebp
and
jo
lods
mov
mov
push
mov
xlat
sub
mov
movs
jnp
push
mov
fwait
mov
sub
jne
add
mov
movs
fst
stos
and
cli
add
push
mov
stos
in
pop
je
outs
sbb
outs
jae
xor
inc
loope
lea
mov
movs
and
das
outs
fwait
push
and
das
add
je
out
cmp
mov
sub
loopne
xor
addr16
or
movs
pop
jmp
imul
es
inc
mov
inc
xchg
fild
lock
les
fisubr
pop
jne
outs
scas
jmp
loop
xor
cmps
jmp
outs
mov
mov
leave
adc
scas
sahf
fidivr
leave
adc
cmp
or
pop
xor
mov
jmp
popa
or
and
movs
ret
pop
jmp
pusha
pop
or
sbb
nop
fld
add
lods
je
and
inc
and
bound
jge
fnstsw
repnz
fs
jns
repnz
shr
cmp
adc
mov
adc
enter
jae
push
arpl
mov
ret
(bad)
pop
jo
out
mov
push
ret
xchg
out
pop
inc
retf
mov
(bad)
mov
mov
(bad)
in
leave
push
rcr
fsubr
pop
mov
cli
dec
fdivr
daa
fisttp
and
stos
add
imul
enter
sbb
jg
out
sbb
movs
add
xchg
mov
jp
out
xchg
test
in
daa
mov
sar
mov
cmc
inc
inc
pop
fs
inc
pop
jae
sti
(bad)
xchg
movs
test
test
ins
xchg
mov
ffree
or
aad
push
xchg
(bad)
popa
sbb
dec
enter
push
cmp
mov
and
fld
pop
test
scas
push
pop
imul
aaa
jmp
add
jge
loopne
pop
lds
shl
fucomp
sti
xchg
mov
mov
ud0
xchg
pop
loop
aaa
addr16
push
inc
xchg
xor
bound
jge
inc
popf
xor
jno
and
push
dec
sub
push
into
push
or
adc
movs
fmul
lahf
out
mov
sti
ins
ds
mov
in
mov
cwde
stc
inc
add
pop
xor
scas
lock
mov
aam
cli
jns
jmp
out
mov
lods
xor
ins
fiadd
cmp
in
imul
cwde
addr16
fwait
mov
pushf
and
pop
ss
mov
in
adc
sub
lods
xchg
inc
aaa
xor
scas
cmp
pop
mov
ja
jecxz
cwde
and
add
push
sub
inc
iret
or
jae
call
mov
mov
fild
dec
popf
jo
push
xchg
push
adc
(bad)
stos
int
inc
in
pop
cmp
jns
js
movs
repz
les
fucomi
or
test
dec
pop
and
lahf
mov
dec
pop
inc
outs
shl
dec
mov
push
ret
in
cmps
jae
mov
(bad)
cmp
test
in
loop
mov
int
cmps
mov
push
fld
stc
xor
fisttp
js
aas
jp
fldcw
mov
mov
sbb
or
sbb
mov
das
mov
es
shl
mov
mov
adc
xchg
fnstcw
xor
cmp
push
sub
jl
jg
(bad)
lock
pop
mov
add
xor
rol
inc
jg
int3
mov
jne
or
pop
call
leave
xor
cmps
in
push
loope
shr
popf
mov
scas
fwait
cmp
lods
or
pop
pop
adc
cmp
sar
jae
push
(bad)
ins
fmul
movs
mov
mov
mov
ja
xchg
movs
adc
and
jns
(bad)
movs
mov
fild
xor
xchg
nop
daa
jge
stos
ja
pop
mov
shl
(bad)
call
into
lods
jb
xor
pop
xor
push
cmp
push
or
das
enter
xor
icebp
cmp
ret
popa
outs
out
sbb
cmps
xor
je
movs
dec
mov
fwait
mov
cwde
push
push
ja
push
dec
xchg
adc
fs
jmp
test
jae
(bad)
push
xor
mov
push
jecxz
jg
mov
ds
pop
jmp
jbe
pop
sbb
in
cs
lods
cmp
pop
mov
lahf
ja
ins
mov
jle
pop
cmp
push
sbb
test
cli
rcr
push
sti
mov
cmp
dec
inc
pop
jl
and
sub
add
cmp
adc
rcr
sub
arpl
add
inc
or
sub
stos
std
pop
and
jnp
fisub
bts
(bad)
fisub
cmp
sahf
adc
or
movs
dec
mov
xchg
iret
mov
test
in
cmp
add
xchg
fcom
data16
xor
out
add
jl
mov
sub
je
or
in
sub
sahf
adc
pop
jge
push
int
sub
mov
inc
push
rcl
sbb
cmp
push
inc
sbb
pop
cwde
and
cmp
test
clc
and
or
xchg
push
cmc
call
pop
push
mov
xor
fstp
out
lock
popa
pop
in
push
int
add
mov
icebp
and
cmp
stc
clc
mov
into
mov
mov
add
pop
dec
xchg
jmp
jecxz
mov
pop
xchg
xchg
repnz
shr
xchg
movs
jae
xlat
loop
cmp
push
push
dec
pop
or
add
outs
jnp
lods
(bad)
ret
mov
mov
aad
ins
xlat
mov
or
and
pushf
fbld
cmp
sbb
inc
ror
sbb
dec
sub
repz
xchg
sbb
inc
xor
std
sub
xchg
cli
and
out
not
inc
ret
push
fiadd
sbb
imul
pop
or
and
mov
into
xor
and
xlat
fdiv
in
shl
dec
stos
sub
cmp
daa
into
push
leave
mov
mov
dec
ja
ins
mov
ret
hlt
xchg
push
inc
xor
retf
mov
xchg
ret
repnz
mov
or
pop
movs
xchg
outs
cmp
mov
mov
mov
and
or
pop
out
stc
in
pop
adc
jecxz
ret
out
das
mov
imul
dec
sub
sub
lock
loopne
and
sbb
mov
aaa
jns
shl
or
imul
in
push
pop
out
fwait
shr
adc
into
and
mov
movs
cs
les
jns
rcl
mov
mov
sbb
sbb
inc
arpl
xlat
ins
mov
jmp
cmp
or
ret
mov
pop
cmps
jae
adc
jns
sti
dec
push
or
jnp
iret
adc
mov
pusha
cmp
sbb
test
dec
cmp
(bad)
or
inc
cmp
iret
rcl
repz
adc
gs
adc
inc
jne
mov
cmp
inc
sbb
push
fist
jae
push
repnz
add
sbb
or
aaa
pop
loope
fs
repz
push
lds
(bad)
in
dec
push
fimul
inc
jecxz
jne
push
pusha
jge
mov
dec
es
mov
pop
stos
push
(bad)
outs
add
xchg
mov
xchg
mov
ss
addr16
xor
jecxz
es
daa
cmp
fst
mov
sbb
daa
inc
mov
aas
sbb
mov
mov
xor
push
(bad)
cdq
ret
int3
pop
imul
or
push
sub
scas
popa
stos
lds
sbb
ror
mov
outs
cmp
inc
cmp
adc
fcom
ret
cmp
push
push
inc
loope
or
call
inc
pop
xor
add
and
jb
mov
repz
ret
lds
adc
xchg
es
mov
scas
addr16
ins
sub
pop
iret
or
dec
rcr
add
leave
and
repz
cmp
cmps
daa
xor
stos
jae
dec
call
leave
ins
mov
into
test
pop
(bad)
jge
add
mov
pop
bound
dec
fs
pop
call
shl
xlat
jo
es
push
shr
and
inc
enter
jmp
das
fs
retf
stos
pop
jmp
stos
cmps
addr16
and
adc
push
mov
ror
dec
mov
popf
sti
jne
or
lds
push
mov
movs
enter
cld
rcr
movups
and
push
es
jle
mov
push
jnp
add
and
pop
sub
adc
movs
outs
fwait
dec
stos
jmp
idiv
cmp
ss
mov
sbb
adc
ds
out
cmp
adc
inc
ret
cmps
xchg
int3
movs
inc
xchg
sbb
rcl
leave
mov
pushf
popa
cmp
inc
mov
cs
or
(bad)
ror
pop
shl
or
cli
push
jecxz
lea
pop
jae
and
pop
inc
aam
cmp
std
dec
and
mov
mov
mov
mov
mov
mov
jmp
and
pop
inc
or
outs
fisub
pusha
div
sti
xchg
test
xor
gs
add
cmp
sbb
mov
pop
cdq
inc
mov
xchg
(bad)
lods
sar
daa
or
jmp
jl
repnz
imul
call
sub
xchg
lods
fild
push
cmc
push
inc
sub
push
ja
cmp
fsubr
add
sbb
xor
jg
jmp
fist
push
cld
in
mov
jo
cmps
pop
xchg
mov
iret
pop
adc
daa
call
add
inc
xchg
test
test
push
push
or
pop
push
iret
lods
clc
and
and
cmp
cld
and
enter
test
dec
jmp
into
and
rcr
inc
mov
(bad)
call
inc
idiv
stc
mov
(bad)
push
ss
test
bound
xor
fs
popa
sub
iret
push
and
or
scas
sbb
loopne
fmul
cmp
daa
mov
sub
dec
mov
pushf
xchg
sbb
cdq
es
aad
dec
popf
xor
lds
inc
fwait
cmps
xchg
repz
sub
outs
dec
shl
push
push
(bad)
and
fiadd
inc
js
pop
and
mov
test
ss
retf
mov
inc
jge
mov
(bad)
sbb
mov
test
js
imul
fidivr
in
cmc
cmps
fsub
js
jns
adc
aad
fsub
fnsave
aaa
adc
in
jnp
pop
push
shr
dec
adc
movs
or
inc
lock
cmp
add
sub
movs
sub
pusha
mov
imul
leave
das
syscall
mov
es
adc
dec
push
adc
mov
ins
mov
mov
push
cld
add
xchg
int3
adc
pop
push
or
xor
sahf
mov
stos
dec
ret
pop
js
or
push
mov
out
(bad)
xchg
xchg
aad
enter
jmp
xchg
sbb
retf
cdq
call
(bad)
sbb
push
xchg
jo
cmp
shl
sbb
push
fcmove
and
popf
or
or
mov
adc
cs
(bad)
mov
mov
cmps
jmp
imul
adc
sahf
mov
sbb
cmps
call
xchg
and
cwde
arpl
fst
(bad)
stos
bound
mov
mov
aas
jno
mov
or
aam
test
sub
imul
(bad)
fdiv
xor
fwait
xor
cmp
das
mov
jge
mov
adc
ins
inc
xchg
outs
xor
mov
bound
push
test
dec
cli
mov
out
es
cmp
cmp
lock
arpl
arpl
call
arpl
mov
int
xchg
adc
mov
fdiv
mov
repz
nop
jl
loopne
mov
dec
cmc
pop
xor
rol
imul
int3
push
jae
mov
sti
cmps
shr
imul
out
and
cmps
cmc
arpl
data16
adc
add
stos
lds
nop
daa
mov
in
das
aad
data16
xchg
xor
fnsave
push
test
xchg
sbb
repz
dec
pop
push
inc
add
xor
cmp
iret
mov
cmc
sahf
jge
mov
inc
scas
dec
rcr
fimul
pop
ret
xor
add
cmp
add
hlt
xlat
jp
inc
cdq
(bad)
xlat
inc
pop
je
popa
dec
icebp
and
hlt
mov
push
call
xchg
into
add
fcomp
cmp
or
(bad)
and
mov
icebp
sub
call
aaa
jp
pop
mov
or
movs
mov
sub
stc
addr16
sbb
jnp
jmp
fsubp
out
mov
loope
test
fmul
ret
int
mov
cdq
mov
inc
xor
jle
stos
cmp
movs
sub
(bad)
push
mov
cmp
mov
add
inc
add
popf
cmp
in
out
es
iret
shr
dec
pop
xor
add
mov
cmp
movs
add
fsubr
dec
test
dec
arpl
inc
lods
inc
movs
add
bound
xchg
cmp
cmp
pop
sbb
out
cli
xor
push
push
pop
mov
sti
frstor
fnstenv
or
in
cmc
loope
scas
jbe
cmp
mov
sub
jnp
imul
vrsqrtss
popa
sahf
fs
inc
das
xor
(bad)
ins
lea
jns
inc
imul
xor
jg
(bad)
sti
jo
pop
outs
test
mov
jge
xor
mov
jne
je
dec
fs
fsubp
loopne
mov
or
dec
dec
mov
sub
mov
add
xor
and
jle
mov
ja
daa
jecxz
lds
es
retf
test
cwde
jp
mov
in
dec
out
mov
add
imul
push
popa
mov
jecxz
mov
push
lods
pop
or
mov
pop
stc
jns
sbb
push
add
jmp
push
mov
repz
movs
mov
cwde
dec
faddp
(bad)
cli
cmc
xor
enter
neg
and
push
inc
push
mov
jmp
jne
lds
leave
sti
ins
sar
adc
test
in
rcr
adc
test
jmp
(bad)
rcr
and
pop
fcomi
cmp
xor
cld
fistp
(bad)
xlat
adc
fucomp
test
cdq
mov
pop
jecxz
cmps
aaa
aam
jnp
dec
aaa
jp
xor
rol
in
xchg
sbb
pop
sbb
imul
or
jne
cs
push
leave
pusha
jl
in
pop
fnstenv
add
lods
sbb
sub
cmp
fdiv
pop
lock
sub
add
cdq
cmp
jl
aaa
lods
jge
scas
mov
mov
mov
jecxz
mov
mov
ss
mov
add
sub
aad
test
or
int3
and
xor
lahf
sbb
jno
retf
lds
dec
xor
mov
or
adc
inc
in
mov
add
fwait
retf
das
sahf
pop
pop
adc
fprem
dec
cdq
sbb
out
fadd
push
sub
push
or
clc
bnd
dec
pushf
push
in
sbb
cmp
cmps
xlat
out
push
sub
jmp
test
imul
adc
or
gs
aad
loop
xchg
es
aas
bound
mov
iret
icebp
popf
or
(bad)
adc
dec
daa
and
sbb
lahf
imul
mov
jmp
sub
sub
push
outs
cmp
in
test
scas
fistp
cmc
sub
or
cli
fs
out
xchg
repnz
(bad)
add
inc
mov
lahf
out
je
xor
adc
cli
arpl
popa
cmp
and
xor
pop
pop
addr16
movs
jmp
fadd
push
sub
bound
xchg
dec
enter
lea
cmps
jae
ins
mov
repz
lahf
sub
adc
xchg
xchg
adc
pop
jb
ins
sbb
loopne
and
aam
scas
stc
xor
je
mov
cmps
mov
int
cli
test
aam
adc
jmp
js
pop
push
add
mov
cmp
gs
clc
test
xchg
(bad)
xchg
js
or
leave
cdq
hlt
sbb
hlt
inc
in
jns
cmp
aad
xchg
sti
imul
scas
aad
add
xchg
inc
push
dec
std
repz
sbb
jnp
mov
mov
ret
adc
jle
mov
popa
shl
xchg
repz
pop
rcl
vmread
mov
repz
mov
push
pop
xor
sahf
push
or
jo
cmc
inc
sub
cmp
fld
cmp
fdiv
inc
lods
aad
push
std
mov
outs
adc
jg
jle
inc
movs
sbb
pop
(bad)
and
cmp
mov
bt
test
push
popf
push
jo
and
aad
jg
iretw
ss
or
rsqrtps
and
fnstsw
mov
in
imul
add
dec
add
sbb
inc
add
jb
aaa
cmp
in
inc
add
mov
fbstp
jge
sysret
jo
xor
push
addr16
scas
or
inc
call
jmp
cmp
mov
pop
outs
fsubr
or
mov
xor
clc
rcr
push
or
fcomp
push
cmc
jnp
out
mov
ss
aam
mov
jle
or
and
jne
mov
outs
icebp
xchg
adc
mov
cmps
xor
mov
mov
ins
jmp
or
push
mov
xlat
fldenv
xor
mov
or
fdiv
pop
sar
push
out
int
pop
(bad)
sar
aad
sub
or
add
shl
adc
mul
out
scas
mov
retf
pop
popa
cmp
adc
iret
xlat
sti
sbb
pop
mov
jle
jns
gs
mov
call
scas
sbb
mov
fbld
jl
test
loop
popf
cmp
test
ficom
call
mov
out
das
jb
mov
fidiv
xchg
dec
xchg
cli
lds
scas
sbb
stos
ds
loop
xchg
mov
sar
out
mov
pop
mov
mov
(bad)
fistp
in
aad
inc
les
inc
ds
pop
mov
push
sub
lea
out
pop
js
enter
rcl
add
pop
mov
nop
inc
repnz
and
cmp
cdq
out
test
ja
jne
add
pop
or
or
push
push
jl
jns
adc
push
movs
mov
dec
(bad)
sbb
mov
pop
cmp
in
scas
inc
add
je
jge
jg
lahf
in
add
lods
and
cli
and
push
popa
(bad)
test
jmp
and
imul
push
jmp
pushf
and
xchg
or
adc
mov
lods
push
adc
pusha
mov
loopne
push
mov
adc
add
jmp
loopne
cld
repnz
dec
stos
sub
ja
push
out
cmp
fcmovne
adc
xchg
clc
mov
xor
fs
mov
xlat
outs
mov
or
xor
push
(bad)
pop
jbe
xchg
mov
idiv
cmp
(bad)
and
xor
jmp
lea
push
xchg
fdivp
ret
push
mov
cmp
out
into
lea
pop
push
call
in
xchg
xchg
stos
jns
dec
dec
pop
ins
inc
cmps
mov
in
pusha
aas
pushf
push
xchg
jecxz
sbb
xchg
aam
and
fstp
jmp
imul
mov
pop
inc
jecxz
add
scas
and
sahf
paddusb
rcl
cld
adc
retf
les
into
adc
adc
sti
mov
push
jb
pop
ret
fs
retf
test
(bad)
sti
test
pop
repz
(bad)
xlat
and
pop
repz
(bad)
jbe
dec
gs
dec
(bad)
and
pop
lods
ins
pop
les
cwde
sbb
sub
xchg
in
inc
push
pop
test
add
out
xchg
pusha
inc
push
xlat
je
sub
aam
mov
jne
mov
fcomip
bound
(bad)
sub
pop
and
fcom
(bad)
cmc
movs
out
movs
mov
and
dec
push
scas
and
pop
mov
popa
fidiv
sub
pop
xor
mov
adc
les
outs
dec
sbb
or
mov
cld
cmp
call
dec
add
aas
loopne
pushf
fisub
ins
daa
cmp
addr16
push
cli
jmp
aas
das
cmp
retf
aas
clc
mov
pushf
repnz
int3
mov
fadd
push
sahf
pop
je
push
add
mov
jno
cdq
jp
nop
pop
mov
stos
mov
iret
cmps
in
push
mov
ret
ss
mov
out
outs
fs
sub
(bad)
rol
mov
(bad)
and
int
fiadd
idiv
or
mov
ja
and
mov
inc
cmp
push
pusha
jg
jmp
mov
aas
dec
scas
ins
scas
xor
sbb
jo
scas
iret
mov
jnp
cmp
mov
daa
icebp
inc
xchg
dec
jmp
push
mov
push
adc
adc
xchg
mov
mov
pop
dec
lds
xor
aam
ficomp
popf
push
cs
aas
pop
retf
pop
pop
ja
add
mov
xchg
(bad)
sub
repz
ret
lahf
and
dec
fdiv
cmp
mov
mov
adc
fcom
stos
xor
cmp
push
out
pop
pop
xchg
sub
dec
test
pop
pmaddwd
lds
fsub
popa
lahf
mov
fdivr
push
or
mov
fdivr
cmp
sar
mov
add
mov
lds
ret
adc
pop
pop
pop
fist
aas
dec
daa
pop
sbb
shl
lea
leave
or
inc
sbb
rcr
ror
sub
sti
(bad)
xlat
xchg
(bad)
mov
je
inc
loop
xchg
ror
in
mov
das
js
and
sbb
jle
fwait
call
jge
out
test
aaa
adc
mov
fcomi
mov
ja
sar
or
call
div
jp
jp
mov
cwde
inc
ror
jge
das
imul
mov
(bad)
into
adc
jle
fwait
cld
xor
sbb
sahf
fld
inc
loope
mov
ins
idiv
jno
stc
dec
jecxz
dec
xor
xchg
add
scas
mov
mov
pop
dec
stc
dec
push
dec
gs
(bad)
pop
scas
push
pop
fnstenv
adc
inc
mov
cmp
inc
test
xor
sub
pop
xchg
fdivr
fiadd
cmps
into
nop
ja
xchg
pop
adc
fcom
outs
mov
call
hlt
test
jbe
jge
jecxz
sahf
dec
loope
into
mov
cmp
loopne
jmp
push
sbb
push
rcr
xchg
repz
jg
xchg
not
dec
xchg
adc
cmp
out
dec
push
stos
retf
xor
cmp
pop
fdivp
addr16
and
movs
inc
std
and
out
mov
out
add
xor
jecxz
push
stos
into
push
sti
not
add
add
inc
ja
inc
cwde
push
xor
gs
push
repz
mov
in
jmp
or
fdecstp
ret
daa
test
jecxz
stos
sbb
(bad)
out
and
rcr
sbb
bound
or
dec
inc
loopne
mov
xchg
movs
sub
ins
test
or
es
lea
ret
pop
pop
test
stos
dec
mov
aad
and
and
fdivr
sub
pop
in
lahf
test
pop
xchg
ja
add
jne
fnstcw
adc
arpl
sub
(bad)
mov
mov
mov
add
rcr
repz
push
(bad)
out
or
(bad)
push
adc
mov
sub
das
ffree
push
fs
lods
push
pop
dec
gs
imul
inc
outs
fnstenv
mov
sub
fsubp
pop
imul
into
sub
sbb
jge
xchg
lds
mov
jne
jb
inc
mov
dec
sti
sbb
or
sti
jae
cmps
xchg
inc
repnz
jl
xchg
aaa
idiv
mov
sbb
addr16
jbe
aas
mov
dec
ret
pop
lea
jmp
leave
scas
mov
mov
pop
outs
adc
test
cmp
(bad)
out
and
shl
sub
or
jl
fmul
cmps
jge
xchg
leave
or
dec
push
stos
xor
mov
cmp
leave
fwait
ds
dec
es
dec
mov
mov
or
mov
sub
lock
jle
int
in
sub
dec
inc
add
pop
sahf
sub
sub
test
inc
clc
sti
pop
mov
pop
int
loopne
(bad)
in
jmp
(bad)
mov
inc
sub
ins
mov
icebp
jl
out
pusha
cmp
jge
xchg
or
add
mov
aas
jmp
js
out
sbb
push
adc
icebp
push
xor
pop
xor
mov
iret
inc
jp
hlt
inc
pop
es
jmp
dec
cs
dec
xchg
mov
push
inc
cmps
ficomp
clc
sub
mov
jns
test
and
jmp
push
lock
pop
ret
scas
mov
(bad)
cwde
mov
(bad)
outs
mov
cmp
push
jle
fs
scas
nop
out
js
mov
mov
aad
or
or
mov
pop
movs
enter
and
out
push
mov
lods
popf
or
or
mov
pop
inc
in
fwait
ror
lahf
in
cmps
aad
repnz
jp
dec
push
loop
jno
stc
(bad)
push
mov
dec
xchg
add
mov
outs
popa
dec
jno
jnp
push
dec
mov
ds
outs
cmp
mov
mov
retf
je
pop
dec
jmp
mov
ret
xchg
dec
xor
inc
popa
shl
leave
ret
jg
inc
push
inc
aaa
mov
add
fcom
dec
sub
mov
dec
xchg
(bad)
sti
push
shl
test
xor
and
aaa
jmp
pop
cmps
xchg
fiadd
int
sub
repnz
fwait
cmp
mov
call
iret
shl
sbb
(bad)
aad
add
mov
cmc
mov
test
adc
test
mov
not
dec
in
aaa
das
mov
xor
push
(bad)
jo
mov
and
jle
inc
jmp
cmp
loopne
outs
std
ins
push
dec
pusha
repnz
inc
add
dec
xchg
dec
cmp
enter
jecxz
cmp
repnz
out
sti
aaa
cmp
adc
pusha
dec
hlt
add
loope
dec
sub
sub
xchg
or
cmp
ret
je
rcr
fsub
push
push
xchg
dec
adc
mov
cdq
xchg
call
pop
xchg
mov
inc
adc
jle
int
icebp
push
cwde
inc
sbb
add
call
jns
and
sbb
xor
imul
into
adc
dec
jecxz
clc
psubusw
out
adc
pop
add
jmp
mov
mov
fidiv
sbb
fmul
les
ins
cld
loope
call
test
dec
push
popa
push
fcom
push
and
aaa
leavew
mov
popf
adc
fwait
or
xor
call
sbb
cs
cmp
std
sti
scas
int
cli
sbb
ds
mov
pop
je
jo
cmp
rol
pusha
ja
sbb
int3
rcr
fucomp
movs
pushf
(bad)
and
cmp
jns
aas
ss
nop
pop
dec
retf
hlt
push
push
stos
cs
mov
enter
cmps
ja
test
loop
ds
jns
mov
mov
add
cmp
cmp
adc
dec
adc
scas
xor
jbe
push
repnz
jecxz
dec
dec
lods
sbb
add
sbb
xor
jmp
and
movs
mov
(bad)
adc
push
pop
test
aam
adc
xchg
jp
push
adc
cdq
int
adc
lock
addr16
xor
xor
pop
imul
popf
push
gs
jmp
xlat
push
imul
es
pop
mov
xor
enter
mov
fistp
aam
dec
cmc
inc
xchg
add
ins
sub
(bad)
out
fwait
jae
mov
push
or
ds
mov
jecxz
dec
popa
scas
sub
enter
repnz
dec
xchg
rcl
dec
jmp
add
adc
dec
fisub
outs
or
adc
mov
mov
mov
int3
ds
xor
mov
loop
fist
jp
fstp
push
mov
xor
call
cmc
pushf
stc
popf
cmp
outs
movs
sbb
inc
mov
cmps
popf
cmp
data16
push
dec
ret
xor
or
xchg
pop
jmp
cmp
and
cwde
ficomp
dec
shl
fwait
xchg
and
je
or
mov
inc
add
mov
cmp
and
mov
jmp
call
xor
xchg
sub
sub
xchg
push
and
outs
mov
push
call
movs
test
push
in
dec
and
retf
mov
cld
add
std
int
addr16
sub
mov
call
iret
fcomp
test
pushfw
aam
add
mov
mov
test
sub
dec
cmp
xchg
mov
out
sbb
dec
das
adc
iret
mov
gs
std
pop
retf
cmp
dec
add
aaa
xor
xor
mov
mov
ds
mov
fnsave
sub
test
mov
ret
leave
sub
add
adc
inc
aaa
pop
test
(bad)
int
loop
into
push
xchg
sub
jns
outs
sar
and
jmp
cmp
sbb
out
jns
adc
lock
xchg
pmulhw
jae
mov
ins
ret
les
(bad)
push
sbb
fwait
xlat
jo
adc
hlt
scas
mov
pop
mov
(bad)
stc
xor
dec
movs
jmp
clc
pop
jne
das
movs
xchg
push
adc
push
push
movs
inc
shl
retf
adc
scas
shl
mov
jmp
pop
and
mov
and
scas
repnz
jp
clc
pushf
in
mov
dec
jmp
std
out
xchg
movs
cmp
sbb
out
mov
sbb
shr
inc
pop
xchg
jl
mov
dec
ins
mov
in
lds
cmp
cmps
jb
test
lock
sahf
add
fs
jle
pop
fcomp
stos
add
cmp
std
js
hlt
lds
mov
pop
movs
cmp
jb
cmp
popf
mov
inc
push
jp
cmp
xchg
xchg
enter
pop
iret
lds
mov
mov
push
sti
inc
cli
jbe
retf
xchg
pop
fisttp
inc
xchg
pop
mov
ret
push
dec
cwde
outs
sbb
xlat
mov
retf
(bad)
sub
xor
pop
lahf
jmp
rol
popa
mov
mov
adc
mov
fwait
pop
repz
lock
jl
push
mov
int3
cmps
sti
stos
xchg
lock
pop
in
or
inc
rcl
pop
or
pop
mov
sub
push
call
jnp
add
mov
or
stc
cmps
cs
cwde
add
jge
and
xor
(bad)
lock
ror
sbb
sub
mov
rol
mov
daa
pop
pop
aaa
xchg
mov
movs
fwait
fwait
jne
mov
and
outs
sbb
int
ins
sub
sub
dec
lock
(bad)
div
aam
test
push
lahf
mov
in
stos
fst
retf
leave
stc
xor
jae
out
imul
cmp
movs
nop
mov
imul
cwde
aas
sbb
mov
(bad)
and
or
stos
cmp
pop
add
jmp
and
int
and
in
xor
pop
dec
lods
dec
push
rcl
and
xor
jge
imul
jno
mul
pop
mov
int
xchg
cld
iret
imul
mov
and
data16
inc
adc
adc
fld
mov
and
pusha
push
push
arpl
and
jno
adc
xchg
add
aam
jnp
sub
xchg
rol
mov
inc
shl
pusha
daa
pop
jecxz
addr16
movs
daa
repz
dec
pop
jb
cmp
mov
scas
ds
aad
inc
and
adc
out
sub
pusha
cmp
aaa
out
jecxz
xchg
repnz
in
mov
mov
mov
cs
jae
movs
fmul
push
jo
mov
mov
jns
jne
enter
sub
inc
test
add
test
push
fdiv
mov
jmp
scas
sub
sub
and
sbb
push
inc
das
fld
jb
leave
cld
mov
fpatan
xor
pop
sbb
test
leave
pop
je
cs
or
nop
push
cmps
popa
push
pop
clc
icebp
mov
sbb
adc
nop
xor
jmp
add
xchg
leave
adc
or
test
sub
xor
xchg
test
fld
stc
popf
je
int
cmp
dec
and
dec
sub
sub
add
push
xchg
arpl
(bad)
retf
out
inc
or
mov
fisttp
adc
jns
js
xchg
pop
cmp
cmp
loope
cmc
mov
push
adc
adc
fstp
es
sub
inc
inc
(bad)
stos
mov
ret
mov
sub
adc
push
push
aam
dec
push
cmc
retf
add
sahf
xchg
ins
jmp
push
jmp
ror
xor
xor
pop
mov
mov
mul
dec
push
xchg
out
xchg
add
lds
cmp
adc
pop
add
jo
loop
int3
rol
jnp
add
sbb
inc
int3
shl
jmp
inc
sahf
dec
mov
es
adc
aam
mov
adc
fs
mov
inc
lahf
or
jb
or
inc
or
push
cmp
xor
(bad)
and
pop
push
addr16
jne
aaa
cmp
add
jle
popf
call
nop
movs
and
popa
inc
fs
push
stos
popa
test
add
test
push
cmc
add
adc
push
or
pusha
or
aad
fadd
jmp
rol
jle
fnstenv
repz
or
hlt
sbb
inc
jecxz
cwde
mov
xchg
out
adc
into
inc
in
data16
inc
sbb
mov
popf
xchg
into
shl
ret
int
sub
sub
mov
mov
repz
aas
lea
cdq
mov
out
ret
inc
xchg
adc
cmp
cs
push
pop
mov
nop
imul
pop
mov
gs
test
gs
(bad)
js
dec
call
int3
ins
test
pop
mov
mov
fild
xor
cmp
in
(bad)
rcr
jnp
fadd
fs
inc
and
jnp
sti
mov
pushf
or
fcomp
fimul
sbb
dec
mov
push
popa
adc
cmp
xor
pop
pop
push
cmc
and
call
xchg
xor
sbb
xor
stos
ror
aam
sbb
jo
(bad)
ss
loop
cmps
outs
mov
dec
push
cmp
pop
inc
dec
fistp
pop
xchg
cmp
adc
cdq
mov
dec
xchg
push
mov
stos
(bad)
cmp
call
gs
test
mov
jle
repnz
ror
sbb
ins
sub
ret
daa
xor
cmp
xlat
inc
cmc
xor
sub
aam
sti
sbb
push
xchg
mov
or
(bad)
push
ror
mov
out
stc
jmp
add
dec
xchg
pop
gs
in
jns
pop
pop
sbb
lods
movs
mov
test
(bad)
leave
retf
movs
in
inc
dec
data16
js
in
push
jmp
jne
or
pop
pop
pop
mov
pop
rol
les
movs
cmc
adc
retf
cwde
pop
ins
(bad)
jmp
mov
and
call
or
dec
ins
std
fidivr
dec
add
mov
push
imul
inc
popf
pop
sub
(bad)
stc
fcmovnbe
adc
jle
mov
movs
ret
cmp
and
xchg
mov
repnz
pop
scas
adc
push
(bad)
cld
sti
daa
out
scas
mov
xchg
scas
inc
jl
out
mov
push
das
mov
push
outs
fst
fisub
cmp
sbb
movs
jb
mov
inc
ret
retf
sub
loop
sub
jae
int3
test
sub
rcl
jecxz
int
out
icebp
push
jae
leave
sbb
sub
pop
mov
daa
std
int3
push
mov
(bad)
jecxz
outs
daa
push
jecxz
pop
dec
mov
mov
mov
cdq
push
enter
movs
sbb
outs
inc
les
sbb
pop
ret
loop
in
sub
retf
inc
popf
mov
in
jge
jne
or
je
add
mov
cmp
scas
fs
clc
xchg
dec
into
and
mov
xchg
mov
pop
rol
leave
repnz
xlat
je
push
movs
cs
jmp
dec
int3
push
mov
cli
jno
in
push
fidivr
stos
sbb
daa
mov
dec
pop
pop
sub
int
aas
movs
fmul
sbb
ret
xor
push
inc
cmp
push
add
mov
push
js
in
mov
icebp
mov
add
pop
and
sbb
scas
xchg
icebp
rcl
dec
popf
rol
add
loope
jmp
stos
pushf
push
nop
sub
mov
out
pop
adc
push
mov
pushf
adc
test
pop
mov
jecxz
dec
sbb
xchg
mov
xchg
ja
iret
or
cmp
pop
or
sti
aad
aas
lock
mov
cmps
movs
jb
xor
jmp
pop
adc
dec
add
push
(bad)
outs
and
xlat
mov
lea
ins
dec
fwait
inc
sbb
stos
ret
jne
push
(bad)
mov
mov
cmp
xchg
(bad)
jns
sub
cmp
jp
inc
xchg
xchg
int
mov
sub
pusha
iret
outs
pop
push
mov
daa
pop
cmp
mov
in
mov
js
cwde
sar
cld
cmp
(bad)
dec
fidivr
adc
add
mov
sahf
push
inc
retw
sub
mov
test
or
mov
push
push
popf
out
sbb
pop
jnp
pop
jbe
push
mov
dec
fisttp
movs
mov
movs
sbb
xchg
inc
popf
scas
mov
inc
cmp
dec
call
in
scas
xor
mov
adc
lock
jo
mov
arpl
rol
inc
sub
shl
aaa
aas
shr
mov
or
pop
hlt
sbb
push
jmp
das
mov
in
mov
(bad)
repnz
xchg
sbb
mov
not
and
scas
pop
jecxz
pusha
add
push
sbb
mov
cwde
cmps
retf
jmp
mov
add
mov
mov
stos
dec
jmp
push
inc
push
stc
mov
mov
sbb
jbe
mov
xchg
fidivr
(bad)
pop
sbb
jae
and
in
sub
sti
mov
int
push
jnp
sbb
adc
pop
adc
aad
xor
or
cmp
inc
mov
xor
fldcw
ffree
jae
inc
dec
neg
xor
mov
mov
dec
add
les
mov
cmp
ror
dec
retf
int
add
jge
mov
call
in
or
and
xchg
cli
data16
add
sub
jl
lods
jg
dec
call
pop
lods
stc
mov
inc
jp
retf
add
cld
cmp
scas
adc
aas
cmps
aam
add
cli
loop
ror
jle
retf
inc
movs
rcl
aad
jp
push
ss
cmps
push
push
dec
js
popa
mov
cmc
inc
repz
xlat
cmp
dec
lock
outs
aaa
hlt
bound
outs
ret
mov
loopne
sub
in
scas
mov
xlat
mov
(bad)
jo
mov
mov
je
jo
js
imul
not
push
fsubr
call
push
xlat
inc
xor
inc
fyl2x
push
lea
sahf
out
add
sbb
add
adc
out
mov
out
jns
inc
mov
sub
sub
cmps
test
sub
cmp
cmps
cmp
mov
cmc
xchg
mov
dec
gs
sti
add
push
call
mov
pop
lahf
out
add
dec
test
cmp
shl
loopne
dec
inc
mov
or
push
and
out
sbb
rcl
cmp
adc
or
outs
mov
push
mov
shr
sub
es
sbb
nop
ja
cmp
jg
imul
stos
inc
mov
sub
xor
ret
jno
inc
int3
les
jge
into
test
or
fcom
sbb
or
nop
cmp
call
fisttp
and
jecxz
and
add
or
rcr
cld
push
mov
pop
pop
cmp
jne
out
adc
leave
cli
es
jmp
jecxz
mov
fld
addr16
mov
shl
stos
pop
mov
shr
test
mov
or
pop
and
or
xchg
mov
mov
xchg
push
push
mov
mov
pop
xor
push
mov
repnz
loop
cmp
fwait
lods
and
(bad)
mov
adc
pop
push
mov
retf
mov
jecxz
ror
dec
je
jns
or
pushf
jae
cmp
psrld
stos
lods
arpl
lock
test
sar
sahf
ins
jae
dec
or
sbb
pop
das
jp
adc
jmp
mov
stos
mov
cmp
cmp
jmp
dec
lahf
movs
mov
pop
adc
daa
popa
mov
jb
loop
dec
mov
(bad)
icebp
sub
sbb
dec
daa
call
xlat
pop
call
pop
push
jp
das
in
jge
in
repz
pop
es
xchg
jl
add
ret
fst
(bad)
cmp
(bad)
imul
js
test
mov
sub
push
pushaw
loope
push
lea
shl
es
stc
pop
fs
adc
in
stc
(bad)
dec
pop
xor
add
or
add
add
pusha
xor
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
