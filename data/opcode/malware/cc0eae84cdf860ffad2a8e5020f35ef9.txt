xor
mov
dec
or
xchg
jno
sub
jns
jl
popa
mov
jb
add
jle
cli
inc
or
and
mov
adc
add
sub
jno
mov
xchg
jns
pop
(bad)
repnz
xlat
mov
push
jno
inc
inc
jae
mov
fs
jns
pusha
(bad)
bnd
into
jno
push
mov
add
and
das
pop
jmp
clc
loopne
pushf
es
inc
retf
inc
pop
popa
inc
sub
or
jae
popf
pop
jmp
and
int
popf
or
mov
ret
cwde
mov
xor
cmp
jno
daa
dec
int
sub
clc
inc
rol
adc
mov
(bad)
ss
jbe
inc
or
lods
bound
sub
jae
mov
add
mov
sbb
sub
cmps
sbb
add
sub
mov
retf
sub
dec
mov
retf
jns
gs
adc
xor
push
and
retf
sbb
xor
jl
jne
jbe
sub
and
add
jle
cdq
cdq
das
xlat
xor
cld
outs
cmp
cli
stos
push
jns
and
cli
add
sahf
dec
and
cli
xor
xor
and
inc
ficomp
cli
jnp
in
xlat
xor
jno
sub
shl
mov
jno
stos
push
jns
call
or
jno
sub
jno
and
dec
jns
retf
and
mov
das
jb
add
stos
xor
xor
jp
add
sub
or
push
cdq
icebp
push
retf
in
into
leave
add
retf
ja
sub
out
inc
sub
add
nop
retf
jno
sub
cdq
movs
add
xor
jo
jo
sub
call
retf
int
mov
jp
add
sub
jno
sub
adc
dec
and
fcom
pop
test
jno
icebp
out
xchg
into
sbb
cwde
mov
or
xor
sub
fs
retf
add
add
push
mov
or
add
push
cdq
inc
pop
retf
in
rol
mov
ror
add
mov
jno
sub
jno
mov
retf
jno
push
mov
es
mov
or
sbb
inc
retf
inc
retf
test
push
xchg
push
retf
jmp
mov
pop
into
inc
(bad)
clc
std
fild
(bad)
cli
mov
dec
test
and
mov
ror
add
pop
retf
fisub
xor
fwait
xor
push
rcl
add
adc
mov
call
cmp
ret
inc
mov
out
fisttp
fdivr
cli
pop
or
ja
sub
jmp
clc
loopne
es
jg
pop
adc
sub
clc
ret
mov
(bad)
lea
retf
sub
jno
sub
add
xlat
mov
jno
mov
mov
add
inc
xlat
mov
mov
mov
mov
and
jl
retf
xlat
mov
jno
and
sbb
mov
add
int
pop
sub
jno
and
mov
iret
inc
xor
mov
xchg
das
int3
jmp
clc
loopne
pushf
es
stos
and
and
retf
inc
retf
and
add
shl
add
fidivr
inc
cli
pop
ror
sbb
mov
xor
or
pop
ss
add
jno
fidivr
jp
call
xor
mov
or
int
popf
adc
pop
(bad)
retf
add
mov
sti
test
jno
mov
dec
ds
dec
xor
inc
dec
adc
sub
sub
inc
mov
sub
sti
mov
push
xor
sub
cli
push
and
iret
add
vmovsd
adc
repz
stc
mov
mov
cmp
retf
adc
xor
mov
ds
mov
inc
test
cmc
mov
dec
mov
add
mov
(bad)
ins
xor
inc
and
xchg
xor
jno
shl
xor
pop
dec
leave
cli
xlat
retf
jbe
mov
mov
sar
add
mov
fidiv
cli
inc
retf
mov
xor
clc
nop
aam
(bad)
cli
xlat
iret
add
inc
and
xchg
xor
jno
shl
mov
and
add
xor
clc
bnd
fdivr
std
add
cli
push
and
aas
mov
xor
or
cli
(bad)
xor
clc
nop
aam
(bad)
cli
mov
dec
je
sub
jo
xlat
xor
mov
mov
popf
cli
pop
and
sti
cmovg
clc
cmc
fild
inc
aam
mov
fisub
push
in
arpl
jns
sti
xchg
adc
ret
add
xor
loop
mov
(bad)
dec
inc
xor
scas
jns
inc
xor
out
into
imul
jns
and
inc
sub
out
(bad)
lea
or
inc
mov
fild
clc
inc
aam
xchg
push
and
js
jo
dec
dec
fisub
mov
cmp
mov
aaa
jecxz
mov
xchg
clc
(bad)
stos
or
lea
cmps
cli
sub
inc
xor
out
into
imul
jge
cs
jae
mov
mov
popf
cli
jo
inc
sub
out
(bad)
lea
ins
xor
retf
pop
jle
add
mov
into
dec
mov
jecxz
mov
jle
cmp
dec
aad
iret
inc
lds
pusha
inc
adc
lea
ss
lds
sub
jmp
clc
loopne
pushf
mov
into
int3
sub
daa
mov
retf
mov
mov
pop
(bad)
sbb
mov
ror
xlat
inc
xor
mov
mov
daa
in
pop
aaa
mov
js
or
outs
popf
daa
in
cmp
mov
stos
push
push
pop
jbe
mov
mov
inc
sub
xchg
dec
push
ds
mov
inc
mov
pop
ret
pop
retf
out
mov
mov
sub
and
mov
jno
aaa
mov
jo
mov
retf
ja
sub
lahf
clc
loopne
call
xchg
sbb
inc
sub
xchg
mov
dec
dec
cdq
mov
rcr
mov
inc
aaa
add
mov
and
sub
clc
ret
mov
mov
and
sub
cs
jae
mov
mov
cdq
daa
push
mov
into
mov
cmp
repnz
dec
pop
add
mov
jno
movs
pop
inc
sub
mov
sub
clc
(bad)
nop
fdiv
mov
clc
ret
js
daa
push
mov
ins
and
pop
pushf
daa
ins
cwde
sub
add
movs
pop
add
call
or
inc
int3
ret
mov
sbb
xchg
into
and
sub
add
mov
retf
sub
test
xchg
sub
mov
repz
mov
mov
call
xor
imul
jge
xchg
mov
shr
sub
jp
pop
inc
test
test
xor
jbe
or
retf
pushf
mov
ins
(bad)
jle
out
retf
jno
mov
jle
add
mov
xor
in
cmps
push
jno
xor
cmps
push
and
mov
or
and
mov
sub
cld
or
(bad)
cli
js
add
rol
add
fld
xor
(bad)
xor
mov
stos
push
jge
xlat
xor
repnz
and
(bad)
adc
(bad)
test
retf
fcomp
xor
js
dec
cli
jg
clc
inc
aam
or
sub
cmc
cs
jno
push
ss
lods
jmp
add
sub
jns
mov
xlat
retf
add
mov
and
jno
sub
inc
xor
adc
or
add
retf
push
jle
add
lock
mov
mov
jno
jno
test
arpl
(bad)
xchg
pop
sub
std
mov
jle
add
movs
mov
clc
loop
into
jno
sub
aam
push
ret
sub
cli
cmp
popf
push
mov
lock
mov
or
inc
push
rol
mov
cli
inc
fcomp
dec
add
ins
ss
pop
std
lock
pop
mov
lods
cli
(bad)
xor
xor
mov
inc
xor
and
add
out
iret
or
cli
sub
cli
inc
and
hlt
(bad)
xor
jno
jb
adc
retf
mov
xor
in
cmps
push
jno
and
cmps
push
and
xlat
(bad)
ds
inc
rol
repz
xor
rol
retf
fild
clc
cmp
(bad)
cli
mov
add
jmp
xchg
xchg
seto
inc
mov
inc
mov
fiadd
mov
jecxz
mov
dec
adc
sub
or
daa
dec
sti
add
pop
(bad)
add
shl
mov
jecxz
dec
stos
xor
dec
inc
xor
mov
inc
add
(bad)
jns
ins
leave
jo
inc
pop
rol
and
jbe
retf
and
or
retf
sub
retf
fbstp
jnp
dec
ss
shl
mov
mov
xor
sub
xor
sar
clc
ret
lea
and
add
pop
ret
fdivr
inc
and
xor
adc
or
stos
scas
lea
mov
ret
sbb
jle
adc
lea
pop
lds
pushf
push
retf
pop
inc
mov
inc
mov
sub
jno
sub
sbb
jae
jno
mov
mov
cdq
jne
retf
ins
ret
stos
add
add
inc
retf
fcomp
mov
and
push
retf
movs
pop
cmc
enter
pop
xor
test
rcr
sub
pop
add
loope
and
int
fld
inc
retf
jle
retf
sub
test
pop
adc
add
inc
mov
lods
aaa
mov
xlat
retf
enter
and
cli
(bad)
xor
(bad)
cli
js
lock
xlat
xor
cmc
shl
retf
lock
test
in
pop
mov
push
add
xlat
xor
mov
jecxz
mov
xor
mov
xlat
call
in
(bad)
repnz
mov
add
xlat
xor
push
mov
inc
sub
cmp
popa
lock
add
jno
movs
dec
lods
cli
(bad)
xor
xor
(bad)
xor
cmp
retf
mov
(bad)
and
jno
lock
test
(bad)
mov
push
rol
call
ins
ss
daa
dec
jbe
sub
sbb
mov
popf
or
call
xor
mov
mov
xor
(bad)
cli
mov
call
je
sti
xlat
call
mov
inc
xor
and
jle
xchg
int
add
xlat
xor
add
sub
icebp
mov
sub
cmc
cmps
das
retf
sub
cld
adc
(bad)
cli
js
repnz
xor
mov
mov
xor
jno
retf
inc
hlt
test
jmp
mov
xor
cmc
xor
retf
lahf
dec
ret
cli
(bad)
xor
mov
(bad)
xor
xor
sub
or
jge
mov
xor
ret
sub
and
lea
sti
xlat
retf
inc
jle
add
sub
jno
lock
test
ins
std
sub
add
sub
loope
xlat
xor
mov
sub
add
retf
enter
xchg
aaa
mov
xlat
popf
cdq
jbe
xor
dec
cli
xlat
retf
and
mov
retf
sub
sbb
mov
data16
cli
stos
push
jge
xlat
xor
sbb
jae
inc
sub
clc
xlat
xor
push
sar
cli
xlat
dec
mov
adc
mov
mov
xlat
retf
jno
sub
xor
sub
jge
xlat
xor
mov
sub
add
mov
xchg
aaa
mov
xlat
popf
cdq
jmp
dec
cli
xlat
retf
and
mov
retf
sub
sbb
mov
loop
mov
stos
push
jge
xlat
xor
sbb
jae
inc
sub
clc
xlat
xor
push
shl
xlat
dec
mov
adc
mov
mov
xlat
retf
jno
sub
xor
sub
stc
lock
xor
mov
sub
add
cli
(bad)
xor
leave
xchg
dec
retf
retf
inc
hlt
lods
xlat
xor
mov
mov
xor
sub
and
shl
cli
sub
add
cli
(bad)
xor
sbb
mov
inc
sub
cdq
sub
xor
dec
cli
xlat
retf
ins
mov
xor
(bad)
xor
mov
stos
push
jge
xlat
xor
sbb
mov
int3
clc
xlat
xor
push
sar
cli
xlat
dec
mov
adc
mov
mov
xlat
retf
jno
sub
mov
xor
add
pop
jle
add
xlat
xor
push
ror
xlat
xchg
call
retf
jl
xor
sub
mov
lods
aaa
mov
xlat
retf
sub
cmp
mov
xlat
inc
mov
lods
adc
xor
(bad)
cli
js
dec
cli
jg
clc
inc
aam
mov
lods
cmp
sub
mov
mov
xor
es
lock
test
stc
sub
hlt
mov
lea
mov
xlat
retf
sub
clc
(bad)
stos
outs
mov
xchg
retf
jle
mov
jno
test
retf
lods
push
sti
xlat
fnsave
lods
bound
add
xlat
xor
push
movs
dec
sar
(bad)
xor
mov
xlat
call
ret
push
sub
rcl
xor
push
inc
pop
nop
inc
sub
popf
xlat
xor
push
mov
retf
sub
stc
and
jle
adc
dec
mov
mov
call
sub
clc
inc
aam
mov
inc
retf
call
retf
lods
and
cmp
(bad)
cli
js
dec
cli
jg
clc
inc
aam
mov
add
iret
push
sub
cld
add
(bad)
cli
js
hlt
(bad)
xor
push
mov
inc
xor
mov
or
js
retf
stc
leave
jno
test
retf
int3
xor
hlt
in
xlat
xor
push
mov
inc
xor
and
jle
inc
leave
jno
test
retf
fdiv
(bad)
std
xlat
xor
ins
js
xor
(bad)
xor
jno
stos
push
jge
lea
mov
xlat
retf
sub
jno
sub
and
retf
and
jno
retf
inc
hlt
mov
xor
mov
xor
mov
xlat
call
lods
aaa
mov
xlat
call
in
ficom
ret
mov
xlat
enter
es
xlat
inc
hlt
popf
xlat
xor
mov
call
stos
es
mov
jae
add
movs
jg
cli
(bad)
xor
xchg
mov
fld
mov
jg
dec
cli
jg
clc
inc
aam
test
xchg
jno
lods
mov
aam
xlat
xor
add
(bad)
xor
xor
(bad)
xor
cmp
retf
mov
lock
sub
mov
lods
sti
jae
sub
lods
xlat
xor
push
mov
xor
imul
dec
or
sub
hlt
cli
sub
jno
lea
sti
xlat
retf
sub
jno
sub
and
sub
sub
lods
mov
pop
xor
cli
sbb
or
(bad)
xor
(bad)
cli
js
les
xor
xchg
(bad)
loop
into
jno
sub
aam
popf
mov
popf
adc
sub
jno
lea
test
mov
inc
xor
mov
or
js
retf
inc
retf
jno
stos
outs
stc
cli
(bad)
xor
mov
xlat
call
lods
dec
mov
xlat
call
sub
jno
ins
ss
daa
dec
ins
add
retf
mov
(bad)
sub
jno
lods
stos
mov
xlat
call
(bad)
xor
(bad)
cli
js
dec
cli
jg
clc
inc
aam
test
xchg
jno
lods
sub
sub
cli
and
hlt
(bad)
sub
jno
xchg
mov
jle
out
retf
movs
dec
adc
aad
and
popf
mov
fdiv
xlat
xor
mov
mov
xor
clc
xor
cli
mov
xor
cmc
mov
retf
lods
cmp
add
popf
jp
sti
xlat
inc
hlt
clc
xlat
xor
push
inc
xchg
xchg
inc
sub
clc
xlat
xor
push
ror
sub
adc
or
mov
xor
mov
div
pop
xor
adc
(bad)
cli
xlat
jg
cli
aad
cld
or
cli
js
hlt
std
xlat
xor
mov
and
shl
jge
sub
hlt
clc
xlat
xor
push
inc
xchg
xchg
inc
sub
clc
xlat
xor
push
shr
add
mov
or
mov
sub
jno
fild
clc
xor
mov
xor
inc
cli
jle
mov
mov
xor
(bad)
cli
daa
dec
jl
xlat
xor
(bad)
cli
js
inc
cli
jle
cli
or
cli
jle
lock
test
xlat
dec
popf
cli
(bad)
xor
(bad)
cli
adc
cli
(bad)
xor
mov
stos
ja
cli
(bad)
xor
hlt
clc
xlat
xor
add
(bad)
xor
daa
or
(bad)
xor
hlt
aad
xor
push
mov
jb
daa
sub
xchg
mov
xor
movs
cli
(bad)
xor
hlt
rcl
xor
push
mov
inc
hlt
fst
xor
push
mov
inc
hlt
(bad)
xor
push
mov
dec
mov
cmp
jno
lods
sub
xor
sbb
sub
jmp
clc
loopne
xor
jno
mov
xor
sub
and
out
jno
sub
bnd
mov
cs
pop
cmp
cli
js
inc
pop
inc
add
out
(bad)
lea
jo
jno
shr
add
cmp
xchg
mov
clc
js
and
repz
xor
xor
push
or
mov
ret
out
mov
enter
sub
in
inc
adc
out
(bad)
lods
loop
fwait
sbb
push
sub
call
xor
loopne
ins
cmp
add
sub
fs
jecxz
mov
mov
sbb
or
jno
sub
jno
mov
scas
jno
ja
and
int
popf
sbb
and
inc
hlt
out
std
dec
retf
leave
inc
xor
mov
jle
add
sub
xor
cmp
jno
or
retf
adc
add
mov
iret
popf
cwde
imul
clc
int
add
(bad)
out
iret
xor
add
outs
inc
jno
push
jl
inc
mov
jno
call
retf
xlat
retf
daa
inc
add
sub
mov
lods
pop
lds
dec
jl
mov
jno
shr
jno
mov
call
pop
mov
stos
sub
mov
repnz
inc
sub
dec
pop
sub
icebp
or
push
xor
daa
dec
pop
pop
sub
xchg
push
mov
xor
imul
dec
call
clc
(bad)
add
mov
jno
aad
jno
xlat
iret
add
add
push
xor
call
retf
sbb
jno
test
imul
mov
loope
sub
inc
cli
xlat
xor
xor
call
retf
xor
jno
leave
inc
xor
mov
push
xor
xlat
xor
xor
call
retf
hlt
mov
add
imul
xor
sub
xchg
sti
xlat
xor
xor
call
retf
add
clc
les
retf
sub
enter
and
sti
xlat
xor
xor
call
retf
jl
jno
test
imul
sub
jno
sub
stc
sti
xlat
xor
xor
imul
jno
test
imul
mov
in
inc
sub
je
mov
jno
loopne
mov
sbb
shr
add
imul
je
mov
jno
stc
retf
mov
je
mov
retf
mov
in
inc
sub
je
mov
jno
cdq
retf
xlat
iret
add
add
push
xor
sub
clc
int
add
les
retf
movs
retf
sbb
cwde
fldcw
retf
and
jmp
mov
push
jle
sub
ret
mov
jl
mov
push
int
and
div
add
adc
mov
cli
or
mov
push
icebp
or
push
xor
sub
and
les
add
imul
dec
call
jno
test
imul
ja
jno
mov
(bad)
cdq
mov
xor
jno
sub
mov
jmp
cmp
(bad)
movs
push
clc
int
add
les
jl
jne
mov
call
pop
movs
push
repnz
inc
xor
daa
jl
repnz
(bad)
sub
jno
push
cmp
je
mov
cmp
clc
les
jl
repnz
mov
xor
push
push
xor
push
cmp
or
cs
loope
sub
call
out
icebp
or
push
xor
loopne
mov
fmul
inc
sub
mov
stos
sub
ins
cmp
js
iret
add
test
xchg
and
add
mov
sar
cmc
outs
inc
or
inc
jne
adc
add
push
mov
sub
mov
gs
mov
sar
cmc
outs
inc
or
inc
jne
sub
xlat
iret
jge
push
mov
sub
mov
lds
inc
sub
retf
push
mov
fild
clc
inc
fadd
pop
jae
mov
mov
jne
or
shl
add
jno
xlat
iret
add
or
mov
lahf
xchg
jno
mov
mov
ror
add
push
clc
std
fild
mov
add
add
sub
rcl
adc
and
pop
sub
shl
mov
jno
arpl
add
sub
shl
jbe
xor
sub
rcr
mov
ror
mov
lahf
clc
loopne
sbb
popf
retf
(bad)
jmp
and
pushf
mov
lods
jo
add
xlat
fild
inc
rcl
add
lock
mov
dec
es
ins
(bad)
clc
inc
fmul
jno
stos
scas
mov
sub
repnz
aam
mov
pop
jle
add
test
retf
cld
retf
lock
jno
sub
jno
movs
iret
add
inc
enter
pushf
mov
ins
jp
add
sbb
clc
(bad)
out
pop
add
retf
dec
jb
mov
cld
jo
jae
add
movs
(bad)
cdq
push
inc
retf
sub
loope
xor
jno
lock
test
cdq
js
jno
ins
outs
and
mov
ja
pop
cs
jmp
ins
push
cli
pop
outs
cld
inc
cwde
call
sub
jno
sub
sbb
xlat
mov
jno
test
retf
int3
and
sub
mov
pop
jle
add
xlat
mov
and
cmp
inc
xor
ret
(bad)
leave
lods
or
inc
xor
mov
add
jmp
add
and
mov
jecxz
mov
cli
inc
and
xor
mov
xor
pusha
fmul
inc
xlat
mov
and
add
sbb
(bad)
cdq
push
xlat
mov
xor
js
mov
pop
ret
sbb
add
and
stc
mov
lahf
(bad)
int3
jmp
clc
loopne
jne
dec
pop
sar
sbb
clc
ret
add
jo
mov
out
inc
sub
xchg
xchg
(bad)
and
inc
add
mov
mov
mov
sahf
into
dec
cmp
retf
pop
(bad)
jle
ins
std
jo
xlat
retf
pop
loop
mov
std
jae
xlat
retf
pop
(bad)
jle
ins
std
jb
xlat
retf
pop
fidivr
ins
std
jne
xlat
retf
daa
dec
jnp
sub
cli
inc
cmp
push
sub
fimul
ins
xor
mov
sahf
into
je
xchg
mov
sahf
fimul
jmp
mov
cmp
fmul
daa
dec
stc
add
stos
and
sahf
fisub
jmp
push
daa
jl
adc
or
mov
(bad)
neg
pop
daa
jl
cli
inc
or
sub
sbb
xchg
xchg
jno
daa
jl
cli
inc
sbb
cmp
mov
push
shl
inc
xor
stos
add
push
cmp
jo
stos
and
clc
leave
xor
stos
and
ins
ds
inc
cmp
push
sub
into
cli
push
fadd
add
retf
ret
jmp
cmp
dec
add
jbe
add
ins
xor
mov
xlat
iret
add
cmp
into
add
mov
int3
jne
arpl
xchg
enter
into
add
mov
dec
dec
add
inc
mov
dec
cdq
add
jl
add
add
add
ror
add
fdivr
(bad)
(bad)
popa
mov
xchg
into
repnz
inc
jne
sub
jno
test
dec
pop
pop
scas
clc
std
pusha
dec
dec
add
mov
cdq
pop
test
ja
pop
fwait
clc
std
stos
and
adc
jae
outs
inc
mov
sub
dec
in
sub
jno
das
neg
sub
(bad)
push
cmp
jo
stos
and
clc
retf
test
inc
rol
adc
sub
repnz
sub
and
mov
retf
adc
jo
jp
mov
div
pop
cmp
stos
and
adc
jo
push
inc
mov
cs
add
mov
(bad)
test
pop
adc
mov
jno
mov
fnstenv
dec
fwait
add
retf
test
retf
lahf
aaa
mov
ja
sub
jmp
clc
loopne
es
jle
mov
pop
jle
add
xor
mov
das
dec
dec
cmp
mov
cdq
push
sub
pop
hlt
test
retf
outs
inc
xor
add
repz
lock
ret
and
jno
sahf
lahf
popa
(bad)
retf
cmp
sti
stos
mov
retf
test
cli
xlat
xchg
mov
pop
jle
add
adc
mov
jno
pop
jmp
mov
inc
add
rol
mov
ss
ret
in
sti
add
inc
jne
movs
mov
mov
inc
add
mov
add
inc
xor
movs
mov
mov
leave
ins
add
iret
add
fcmove
stos
sub
inc
mov
retf
mov
inc
ror
sbb
inc
and
mov
jle
add
rol
sbb
into
clc
inc
ror
in
mov
retf
jle
(bad)
push
cmp
xchg
pop
xlat
(bad)
fs
xchg
mov
pop
ss
stos
push
jge
jbe
mov
mov
shl
add
ror
cli
xlat
or
out
xor
sub
sub
add
dec
xchg
fcmovbe
xor
sahf
cli
xlat
retf
pop
jle
add
div
jle
lods
cmp
add
xor
xchg
sub
push
daa
jl
test
mov
push
jae
sub
das
or
xor
mov
inc
add
and
dec
mov
and
(bad)
xlat
xor
call
nop
(bad)
outs
mov
scas
mov
retf
nop
mov
cli
xlat
(bad)
fs
mov
jno
outs
xchg
jno
mov
xor
loopne
sub
test
mov
jl
test
mov
aam
cmp
retf
gs
sub
xor
sub
xor
dec
adc
pop
xor
sub
jno
sahf
pop
sub
xor
adc
xor
xlat
xor
xor
xlat
xor
jo
sub
adc
xlat
xor
mov
xlat
iret
add
nop
cld
adc
mov
or
add
lods
ds
cli
xlat
sti
mov
or
and
daa
xchg
jno
mov
or
std
(bad)
xor
jno
sub
dec
cwde
fsub
cld
sub
pop
sub
mov
pop
jle
add
xlat
xor
jno
inc
xor
(bad)
jmp
popf
adc
call
xor
xor
and
add
fcmovnbe
xor
scas
cli
xlat
and
xor
inc
stos
(bad)
out
leave
and
mov
into
dec
mov
xor
inc
test
retf
test
retf
mov
retf
lods
dec
scas
cli
xlat
and
test
retf
sub
add
sahf
xor
mov
xlat
xchg
lock
mov
sub
jo
mov
xor
jno
lods
es
cli
xlat
vaddsd
xor
lds
xor
mov
mov
jno
ror
nop
(bad)
jae
cmp
push
xchg
push
and
test
xlat
xor
sahf
cli
xlat
or
in
sub
nop
pop
sub
clc
mov
inc
in
(bad)
xor
clc
fsubr
and
leave
enter
retf
mov
sbb
mov
test
xor
add
push
icebp
mov
sub
xor
sub
movs
div
add
jno
mov
xor
jae
lods
push
scas
cli
xlat
inc
hlt
movs
div
scas
cli
xlat
dec
mov
sub
clc
cmp
fcmovnbe
xor
mov
sub
clc
cmp
fstp
xlat
xor
mov
mov
xor
leave
fcmovbe
xor
scas
cli
xlat
and
cld
adc
int
xlat
xor
mov
xlat
xor
mov
sub
fcmovbe
xor
mov
sub
ja
inc
retf
pushf
adc
jge
mov
xor
sbb
sub
jno
mov
and
cli
sub
(bad)
(bad)
jae
movs
push
scas
cli
xlat
loope
shl
xor
inc
nop
push
cmp
pop
mov
mov
mov
mov
and
mov
jno
mov
xor
adc
retf
and
jle
adc
jno
mov
xor
cwde
add
test
jns
daa
dec
dec
add
retf
sub
jno
lods
ds
cli
xlat
inc
add
retf
stos
and
mov
or
cmps
div
xchg
fcmovbe
xor
scas
cli
xlat
inc
or
inc
add
fmul
push
test
jno
cmp
add
fmul
add
test
mov
retf
mov
or
mov
lods
imul
add
mov
retf
shl
or
mov
ret
dec
clc
bnd
(bad)
fsub
pop
cmc
mov
icebp
int3
loope
xor
fsub
daa
jl
cmps
div
cli
mov
xlat
or
add
sub
jno
pop
loop
cmp
retf
test
dec
push
sub
jno
pop
fdivp
cmp
retf
test
dec
add
retf
pop
leave
ss
loopne
mov
test
jns
pop
(bad)
jle
lods
cmp
mov
adc
movs
fcmovbe
xor
mov
retf
adc
xor
xlat
retf
fsub
jae
icebp
or
push
gs
cmp
dec
test
xlat
xor
mov
sub
jno
pop
sbb
add
xlat
dec
hlt
test
mov
jl
test
mov
aam
cmp
retf
pop
xor
int3
jmp
clc
loopne
es
push
jle
cli
pop
and
mov
or
retf
ins
xor
cld
xor
add
sub
aad
inc
xor
sub
cld
js
inc
inc
adc
jno
fld
js
inc
inc
xchg
xchg
mov
das
retf
fld
ds
mov
mov
ins
xor
jno
ds
jb
sahf
lahf
xchg
ins
fist
cli
sub
jnp
ins
cmp
pusha
ja
jb
sbb
rol
int
(bad)
cmp
in
mov
jno
mov
cmp
inc
cmp
retf
test
mov
jl
add
or
sub
clc
(bad)
sub
clc
push
rol
mov
retf
push
xor
jo
jmp
jno
dec
mov
pop
ret
repnz
push
xor
jo
imul
jo
dec
xchg
add
dec
xor
sub
mov
retf
sub
jno
sub
xor
sub
xor
mov
lahf
mov
sahf
leave
dec
repnz
jno
and
add
mov
jne
ins
cmp
test
jle
stos
cdq
mov
xlat
or
lock
addr16
sub
(bad)
push
(bad)
xor
test
jo
and
lock
lock
mov
clc
(bad)
sub
clc
push
rol
mov
sub
jo
sahf
(bad)
mov
xchg
mov
push
js
daa
push
mov
xchg
fld
nop
call
ins
ss
mov
add
shr
xchg
xor
jno
rol
out
es
dec
cmp
ret
ins
std
jo
ret
int3
ds
retf
push
call
mov
xchg
das
pop
loope
and
int
jne
sub
cdq
jge
retf
jg
adc
xchg
shl
repnz
into
jno
nop
jecxz
add
lods
ss
cli
xlat
inc
mov
pop
(bad)
daa
cli
pop
ret
sub
mov
js
sbb
retf
sub
mov
js
jle
sub
repnz
xchg
xchg
das
int3
jmp
clc
loopne
jne
je
loop
repnz
leave
jno
inc
retf
xlat
mov
adc
cs
jmp
clc
loopne
es
push
jle
into
mov
out
scas
cmp
test
jno
inc
leave
sbb
sub
icebp
cli
pop
ret
jp
jno
out
dec
(bad)
cli
pop
shl
js
retf
mov
retf
ret
stos
clc
std
fild
mov
sub
mov
dec
mov
js
xor
aas
cwde
jno
mov
(bad)
jno
fild
mov
sub
or
mov
clc
inc
fsub
ja
ins
xor
inc
fdiv
add
jle
fs
sub
daa
in
pop
fwait
jno
mov
dec
sahf
retf
jno
jbe
mov
xchg
(bad)
and
jne
ins
mov
clc
std
sbb
clc
ret
sbb
sub
jno
sub
mov
and
stos
xor
jo
sti
mov
dec
jb
or
retf
mov
mov
jno
ror
sub
or
mov
cmp
retf
mov
lahf
lea
xor
pusha
push
sub
sbb
inc
enter
mov
shl
sub
mov
cmp
cli
inc
fadd
mov
ja
sub
jmp
clc
loopne
call
adc
inc
mov
sub
sbb
inc
retf
inc
retf
call
in
and
(bad)
xor
call
(bad)
mov
jno
shl
add
ins
ss
pop
fimul
cmp
and
ret
int3
clc
std
sbb
clc
ret
mov
push
jnp
mov
mov
aam
adc
add
stc
xchg
retf
jno
sbb
clc
fcmovb
int
mov
hlt
jo
outs
icebp
or
push
ds
inc
aam
mov
jmp
or
xchg
inc
sub
les
retf
enter
sbb
xor
and
sahf
into
outs
push
inc
call
push
sub
repnz
dec
pop
and
cdq
xor
and
adc
jno
sub
jne
push
lea
and
or
aam
sbb
dec
cdq
jno
stos
push
jns
jbe
mov
push
jnp
mov
cli
jo
or
enter
lea
adc
xor
sub
jle
sub
and
sub
add
sub
or
shl
adc
mov
jecxz
mov
cs
jae
mov
mov
cdq
daa
push
xchg
inc
or
cmp
sub
inc
mov
out
(bad)
xchg
add
dec
adc
sub
in
sub
loope
inc
or
movs
(bad)
jmp
retf
lea
xor
inc
mov
push
fidiv
lods
mov
retf
mov
jle
push
and
call
inc
hlt
inc
mov
sahf
(bad)
mov
sahf
mov
or
ins
es
js
enter
cmps
popf
pop
test
retf
xlat
retf
icebp
js
retf
mov
mov
ins
xor
es
retf
ins
xor
mov
iret
add
dec
or
sub
jae
inc
xor
test
jno
inc
add
inc
mov
ins
(bad)
jle
sub
or
clc
mov
jno
lahf
lahf
xchg
or
inc
cmp
mov
(bad)
retf
mov
jo
int3
inc
xor
daa
jge
add
cwde
ja
clc
vmovmskps
(bad)
sub
jg
sub
or
jge
or
lahf
cwde
jns
clc
retf
xor
mov
xchg
mov
xchg
mov
mov
xchg
sahf
inc
pop
enter
push
xchg
lods
or
xchg
mov
pop
loope
sbb
loope
mov
pop
loope
push
pop
xor
push
pop
dec
fnstsw
adc
xchg
mov
mov
xchg
sbb
out
cmp
xchg
lods
or
xchg
mov
pop
loope
sbb
loope
mov
pop
loope
adc
loope
mov
pop
loope
dec
pop
loope
mov
fisttp
mov
retf
sub
loope
shl
xor
push
pop
loope
mov
pop
loope
js
loope
mov
pop
loope
jmp
loope
mov
pop
loope
les
xchg
mov
pop
loope
adc
loope
mov
pop
loope
mov
lods
cwde
mov
aaa
mov
cmps
mov
pop
ss
add
leave
mov
cmp
(bad)
dec
pop
loope
mov
mov
inc
into
loope
mov
pop
loope
stos
xor
mov
pop
loope
xchg
sahf
inc
pop
clc
fdivr
or
xchg
mov
pop
loope
js
loope
mov
pop
loope
fistp
loopne
mov
pop
loope
mov
ss
xchg
sbb
loope
mov
pop
loope
retf
xchg
mov
mov
stos
xor
mov
pop
loope
xchg
sbb
fdivr
or
xchg
mov
pop
loope
js
loope
mov
pop
loope
fistp
loopne
mov
pop
loope
mov
jg
xchg
sbb
loope
mov
pop
loope
retf
xchg
mov
pop
loope
dec
and
aad
mov
jge
xchg
xchg
(bad)
and
inc
sub
mov
(bad)
jge
ins
ss
jae
xchg
cli
inc
aam
xor
mov
es
inc
int3
inc
xor
sbb
inc
enter
fild
clc
inc
aam
mov
fmul
jno
int
jno
nop
jne
add
mov
ss
(bad)
cmp
in
inc
cmp
mov
jge
icebp
js
retf
out
(bad)
mov
addr16
ins
sbb
cli
push
retf
das
retf
daa
jl
(bad)
mov
cmp
xor
mov
mov
into
outs
cmp
cmp
popa
mov
retf
add
xchg
or
retf
pop
(bad)
(bad)
cmp
or
xor
mov
inc
mov
jmp
xchg
sub
jno
ins
cmp
in
iret
test
daa
jl
(bad)
js
test
inc
fcmovb
(bad)
push
ror
mov
add
ins
cmp
mov
retf
adc
dec
mov
nop
xchg
push
add
mov
ss
lods
mov
(bad)
and
dec
ret
daa
dec
jg
xlat
xor
mov
mov
cdq
daa
push
xchg
jne
dec
pop
inc
xor
test
xchg
(bad)
jno
call
and
jmp
aad
iret
mov
inc
and
stos
div
jo
sti
mov
push
enter
(bad)
xchg
push
xlat
mov
mov
stos
push
jns
jmp
mov
lods
xlat
jae
sub
(bad)
js
or
test
cmp
fnstcw
addr16
or
jg
(bad)
js
or
lods
xchg
mov
test
jno
sar
add
sub
push
sub
leave
xor
js
cwde
dec
sub
repnz
mov
inc
aam
data16
idiv
add
ins
ss
adc
ja
add
aam
ror
xchg
mov
sub
repz
pop
adc
rcl
xor
inc
rol
fst
dec
xor
sub
movs
mov
lock
add
mul
fmul
retf
hlt
and
dec
sub
cli
js
(bad)
mov
or
cmp
ja
add
sub
ffree
mov
add
daa
jge
mov
(bad)
jmp
inc
dec
fst
jae
add
nop
ja
add
call
and
retf
and
mov
inc
fsub
data16
pop
dec
add
ins
ds
adc
ja
add
fmul
ror
xchg
mov
sub
repz
pop
adc
rcl
cmp
cmc
mov
pop
inc
sub
popa
xchg
jne
cld
ja
add
push
dec
inc
fdivr
dec
rcl
sahf
aam
inc
gs
enter
mov
retf
adc
push
adc
vmovmskps
sbb
mov
hlt
ja
add
push
and
sbb
xor
repnz
inc
xor
mov
and
mov
leave
je
xchg
mov
rol
xlat
dec
mov
inc
retf
inc
enter
retf
sub
xor
pop
ret
popa
retf
ins
sbb
xlat
mov
xchg
in
lahf
xor
cmp
mov
xor
cmp
pusha
retf
call
add
jmp
jnp
es
mov
dec
popf
clc
xlat
xor
add
add
xlat
adc
dec
add
lods
and
fild
cmp
cmp
mov
das
or
aad
inc
mov
out
mov
jmp
xor
jno
out
(bad)
mov
in
shl
or
xchg
adc
ret
add
xor
loop
mov
(bad)
dec
inc
in
xlat
xor
cli
test
mov
(bad)
mov
and
cli
xlat
retf
arpl
jno
jmp
sub
hlt
add
xor
mov
xlat
xor
xor
sub
(bad)
aad
mov
movs
cmp
fadd
outs
sub
jno
sub
cld
adc
mov
js
je
sub
clc
sbb
mov
mov
or
jo
jb
iret
push
and
sbb
cld
sbb
mov
js
jo
sub
sbb
xchg
mov
popf
ds
xlat
and
fdiv
mov
sar
sub
jno
inc
pop
scas
inc
sub
cli
(bad)
xor
cmp
fs
lods
xor
test
sbb
push
retf
xlat
iret
add
(bad)
test
mov
xlat
xor
jno
rcl
add
test
jno
test
jns
sub
repnz
loope
and
int
and
popf
cli
jo
jne
dec
mov
clc
std
sbb
clc
ret
add
ret
jno
stos
scas
lea
movs
(bad)
lea
retf
sub
jno
sub
add
xlat
mov
jno
mov
mov
cmp
retf
mov
retf
mov
mov
add
xlat
mov
jno
xlat
mov
jno
ja
sub
jmp
clc
loopne
jne
xor
xor
ret
gs
jnp
jno
inc
retf
and
pop
fimul
or
mov
jno
stos
push
imul
popf
into
jmp
mov
inc
xor
js
add
xlat
mov
cdq
add
retf
in
shr
pop
jmp
clc
loopne
call
test
retf
rcr
sbb
sub
jno
pop
(bad)
mov
and
dec
sub
js
pop
into
inc
(bad)
mov
xor
ins
outs
sub
(bad)
in
lahf
xor
or
in
scas
xor
or
dec
sub
mov
and
push
inc
xchg
xchg
fisub
push
mov
rcl
mov
into
repnz
mov
test
retf
sub
adc
retf
mov
or
add
inc
shl
sub
mov
and
sub
js
pop
into
inc
(bad)
cld
inc
xor
jno
pop
fimul
dec
sub
js
pop
(bad)
mov
and
retf
ret
ror
sub
jno
iret
inc
xor
mov
and
ins
shr
pop
loope
and
int
and
jne
shld
clc
ret
(bad)
shr
jno
or
cmp
sub
and
iret
mov
mov
pop
xor
pop
inc
mov
inc
mov
call
retf
sub
jno
sub
adc
push
cdq
movs
outs
retf
aam
xor
sbb
call
or
xor
sub
stc
ja
mov
into
xor
xor
inc
mov
ins
out
jne
cmp
inc
and
jns
and
inc
add
mov
cmp
out
inc
aam
mov
jmp
xor
in
std
add
and
mov
jno
stos
push
jge
shl
test
add
retf
aam
cmp
call
dec
dec
cmp
mov
pop
test
jno
or
dec
test
ja
pop
sar
inc
cmp
add
sub
mov
and
fmul
test
add
inc
cmp
sub
js
pop
xlat
clc
cmc
sub
and
pop
ficomp
mov
clc
(bad)
sbb
clc
push
aam
test
xor
and
ins
shr
retf
jae
mov
mov
cdq
daa
push
mov
movs
pop
xor
or
in
mov
(bad)
sbb
outs
push
retf
fmul
jbe
retf
fisub
or
xchg
mov
jle
sub
repnz
pop
inc
jne
outs
icebp
add
pop
das
pop
ret
jno
ret
cmp
xor
mov
icebp
clc
std
xchg
shl
sub
cld
mov
pushf
clc
std
xchg
shl
sub
jmp
jmp
cmp
shr
mov
push
inc
nop
scas
inc
sub
jno
in
ficom
cli
ins
xor
mov
xor
inc
sar
cs
jae
mov
mov
enter
mov
jnp
es
test
retf
fdiv
aam
xlat
aaa
mov
mov
xor
add
ror
xlat
dec
mov
mov
int
vmaskmovdqu
shl
add
xlat
xor
add
iret
mov
sbb
cwde
and
retf
pop
ficomp
mov
jb
add
shl
movs
cli
aad
cli
mov
inc
ja
cli
aad
inc
mov
inc
int
sub
jno
jg
xor
mov
dec
(bad)
cli
(bad)
xor
jno
into
inc
hlt
aad
aaa
mov
into
jo
sub
pushf
inc
sub
clc
cmc
sub
clc
ret
mov
push
mov
xlat
inc
mov
loopne
xor
rol
outs
and
leave
xlat
aaa
mov
cwde
cdq
jnp
xor
sbb
mov
pop
ret
ins
retf
in
ret
test
cld
inc
sub
repnz
sbb
sub
enter
jno
fbstp
repnz
sub
add
(bad)
xor
jno
in
ret
ins
retf
and
jno
mov
mov
sar
add
sub
call
mov
jg
dec
fisubr
es
sbb
popa
mov
fild
and
mov
mov
retf
and
jno
mov
mov
inc
cmp
stc
xlat
xor
in
or
jns
pop
adc
(bad)
cli
(bad)
xor
jno
in
ret
ins
retf
and
jno
mov
mov
inc
cmp
stc
xlat
xor
in
ret
mov
stos
push
jns
fdivr
mov
xlat
inc
mov
mov
jno
xchg
shl
push
xchg
stos
xor
and
inc
sub
enter
jno
fbstp
and
xlat
popf
sbb
test
mov
xlat
mov
xor
(bad)
xor
xor
sub
repnz
inc
sub
enter
jno
fbstp
repnz
sub
add
(bad)
xor
jno
in
ret
test
and
sub
repnz
sub
mov
xchg
shl
push
xchg
stos
xor
mov
mov
shl
add
inc
leave
scas
inc
sub
mov
aas
mov
stos
push
jns
sti
mov
xchg
shl
push
xchg
stos
xor
and
data16
jno
fbstp
and
xlat
popf
sbb
test
mov
test
retf
imul
mov
mov
mov
aaa
scas
inc
sub
fcmovnbe
aaa
mov
pop
xor
xlat
aaa
mov
mov
mov
xlat
call
shl
and
sub
add
ror
add
cdq
dec
imul
mov
mov
mov
ja
cli
(bad)
xor
xor
sub
repnz
push
inc
sub
enter
jno
fbstp
repnz
sub
add
(bad)
xor
jno
in
ret
jge
jno
shl
add
sub
call
add
sbb
test
sti
xlat
and
sub
repnz
movs
inc
sub
enter
jno
fbstp
repnz
sub
add
(bad)
xor
jno
in
ret
test
adc
(bad)
cli
js
jmp
push
and
fwait
mov
stos
push
gs
mov
shl
push
xchg
stos
xor
mov
mov
sar
sub
or
sub
mov
xlat
inc
mov
ja
jno
xchg
shl
push
xchg
stos
xor
mov
mov
shl
shl
add
sub
call
add
cdq
sub
dec
retf
mov
mov
ja
cli
(bad)
xor
xor
sub
repnz
or
sub
cmc
jo
retf
lea
clc
xlat
retf
sub
jno
lods
retf
xlat
retf
jb
jno
stos
outs
leave
cli
aad
jno
pop
inc
hlt
mov
lods
jb
clc
xlat
icebp
hlt
std
xlat
xor
jbe
inc
int3
mov
xchg
jb
clc
xlat
(bad)
adc
mov
mov
mov
shl
add
les
aas
repnz
push
mov
xor
adc
ja
add
jb
xor
xlat
xor
jno
stos
push
gs
jecxz
mov
xor
mov
dec
jno
sub
repz
xor
mov
xlat
xor
jno
xlat
xor
mov
xlat
call
rol
shl
add
sub
call
add
sbb
mov
popf
ss
xlat
and
sub
repnz
sub
mov
xchg
shl
push
xchg
stos
xor
mov
mov
shr
add
rcl
sub
add
ror
add
sbb
enter
popf
ss
xlat
and
and
mov
sub
jno
lods
ds
xlat
inc
hlt
std
xlat
xor
cmp
jbe
clc
xlat
(bad)
(bad)
xor
mov
xlat
inc
add
retf
jno
mov
xor
add
retf
sub
mov
sub
cmc
dec
sub
jno
fsub
or
repz
std
xlat
xor
or
inc
hlt
std
xlat
xor
mov
xor
scas
inc
sub
icebp
xlat
aaa
mov
test
add
movs
inc
test
aad
repnz
mov
cmp
retf
mov
je
clc
xlat
dec
mov
adc
jno
lods
retf
xlat
call
xlat
inc
cmc
add
xor
sub
sub
cld
sbb
mov
js
fdivr
xlat
xor
hlt
cmc
xlat
aaa
mov
popf
ds
xlat
xor
cmp
aam
(bad)
cli
js
adc
in
repz
jno
stos
push
imul
nop
xor
leave
cli
aad
clc
ret
shr
jae
add
ror
add
sbb
mov
popf
ss
xlat
and
and
lock
retf
sub
jno
fbstp
repnz
adc
add
(bad)
xor
jno
in
ret
pop
retf
and
jno
mov
mov
inc
cmp
stc
xlat
xor
in
push
cmc
jno
stos
push
jns
popf
cmp
ds
lock
xchg
jno
xlat
dec
test
(bad)
xor
mov
js
(bad)
std
xlat
xor
push
ror
cli
xlat
dec
mov
mov
xor
cmc
sti
xlat
xor
jno
popf
ss
xlat
and
retf
and
cwde
cmp
retf
sub
jno
fbstp
repnz
adc
add
(bad)
xor
jno
in
ret
push
retf
and
jno
mov
mov
inc
add
stc
xlat
xor
in
retf
hlt
jno
stos
push
jns
fsub
or
retf
fbstp
repnz
sub
add
(bad)
xor
jno
in
ret
test
sti
xlat
and
cmp
retf
and
adc
sub
enter
jno
fbstp
repnz
hlt
jno
xchg
test
xchg
jp
int3
stc
xlat
xor
push
inc
hlt
scas
inc
sub
jno
in
ficomp
mov
mov
mov
inc
xchg
scas
inc
sub
mov
arpl
jno
stos
push
jns
(bad)
scas
adc
cmp
retf
sub
jno
fbstp
repnz
adc
add
(bad)
xor
jno
in
ret
adc
retf
mov
mov
inc
cmp
stc
xlat
xor
in
shl
jno
stos
push
jns
lahf
div
xchg
shl
push
xchg
stos
xor
and
cmp
retf
sub
jno
fbstp
and
xlat
popf
sbb
test
mov
inc
jecxz
inc
sub
mov
fwait
div
stos
push
jns
fdivr
mov
xlat
inc
mov
dec
div
xchg
shl
push
xchg
stos
xor
mov
mov
ror
sub
or
sub
mov
inc
div
stos
push
jns
add
jno
xchg
shl
push
xchg
stos
xor
mov
mov
rol
or
sub
mov
pop
div
stos
push
jns
fsub
or
retf
fbstp
repnz
sub
add
(bad)
xor
jno
in
ret
div
hlt
stc
xlat
xor
push
inc
enter
call
in
ficomp
mov
mov
mov
inc
cmp
stc
xlat
xor
in
jecxz
jno
stos
push
jns
fsub
or
xor
dec
add
shl
sub
call
add
sbb
enter
popf
ss
xlat
and
cmp
retf
and
cmp
sub
enter
jno
fbstp
clc
shr
retf
xchg
ss
xlat
popf
sbb
cmc
mov
shl
add
rcl
add
sub
call
add
sbb
enter
popf
ss
xlat
and
retf
and
mov
shl
add
mov
or
in
retf
and
jno
mov
mov
inc
cmp
stc
xlat
xor
in
xlat
icebp
jno
stos
push
jns
xchg
icebp
jno
xchg
shl
push
xchg
stos
xor
and
ds
enter
jno
fbstp
and
xlat
popf
sbb
test
mov
inc
sbb
xlat
xor
in
lahf
icebp
jno
stos
push
jns
sub
jno
sub
mov
and
sub
clc
add
mov
test
retf
aam
(bad)
cli
sar
mov
mov
xlat
popf
and
popf
ss
xlat
xor
mov
cmps
bnd
xlat
jg
cli
aad
cdq
sub
popf
ss
xlat
and
cmc
fild
adc
and
xchg
std
jno
mov
xor
mov
mov
retf
jno
jg
sub
push
mov
clc
ret
mov
xchg
mov
add
js
cli
fsubr
cld
adc
mov
js
lods
aas
sub
sbb
sub
cli
(bad)
xor
jno
test
xchg
cmc
xlat
xor
xor
sub
cli
adc
add
cmc
mov
bound
xor
test
int
xlat
xor
jno
repnz
xor
sub
cdq
ja
xor
clc
std
sbb
clc
ret
mov
mov
enter
pushf
es
nop
(bad)
pusha
add
lods
dec
mov
xlat
inc
mov
lea
cli
xlat
retf
and
add
pop
mov
enter
mov
(bad)
jns
sub
jo
sub
clc
and
std
mov
(bad)
jns
out
dec
mov
jle
add
sub
cli
push
and
pop
sub
aaa
mov
jle
sub
sub
clc
adc
cli
xlat
jg
clc
xlat
xor
jno
jge
cli
mov
mov
movs
sahf
jnp
movs
sahf
jae
push
in
aad
mov
pushf
cdq
sub
lods
mov
les
aas
std
jno
mov
xor
mov
ror
add
mov
xor
cli
mov
mov
movs
sahf
jnp
movs
sahf
jae
push
in
aad
mov
sbb
add
sub
xchg
aad
mov
mov
mov
xlat
call
sar
mov
retf
inc
repz
inc
into
jo
sub
mov
xor
lods
inc
sub
sbb
sub
icebp
in
shl
push
or
mov
inc
add
inc
enter
fmul
add
retf
aam
mov
js
hlt
mov
xor
inc
add
aad
mov
popf
pop
mov
xlat
xor
mov
popf
inc
mov
xlat
xor
mov
popf
push
cli
xlat
pushf
cld
sbb
not
xor
hlt
cdq
aad
mov
mov
inc
add
sub
jno
inc
push
inc
sub
stc
(bad)
xor
dec
add
rol
mov
call
js
int3
cmp
(bad)
xor
mov
xlat
dec
mov
dec
retf
ins
mov
(bad)
cli
xlat
call
in
(bad)
mov
nop
xor
cli
ins
retf
nop
movs
and
sub
mov
xlat
inc
mov
lods
cs
cli
xlat
retf
jno
sub
cli
sub
repnz
sub
cdq
sti
xlat
xor
dec
ins
sub
cld
adc
xchg
jmp
mov
xlat
call
js
jno
sub
jno
sub
stc
(bad)
xor
cdq
adc
vpor
retf
popf
bound
sub
lock
in
xlat
xor
jno
push
push
xor
xlat
xor
jno
stos
push
popa
ret
lods
mov
call
or
mov
js
add
push
cdq
inc
sbb
ret
mov
xor
cdq
lea
jno
lods
mov
sti
add
cli
adc
add
and
add
add
sub
repnz
sub
jno
rcr
sub
xchg
mov
xor
jo
sub
stc
(bad)
xor
mov
sub
sbb
mov
hlt
stc
(bad)
xor
int3
cli
xlat
dec
mov
adc
mov
mov
xlat
retf
sub
clc
ret
repnz
sub
pop
push
retf
das
dec
aam
aad
mov
xlat
xor
jno
test
retf
scas
stc
jno
inc
retf
mov
mov
rcl
add
aad
mov
xchg
clc
jno
mov
xor
inc
std
mov
add
loopne
es
jle
cli
pop
cmp
push
add
sar
std
fild
mov
rol
cli
pop
ret
sbb
jno
jmp
or
adc
sub
arpl
ficomp
mov
lods
clc
push
ficomp
jno
jmp
pushf
sbb
jno
lahf
(bad)
(bad)
lea
vmovmskps
retf
mov
mov
push
inc
retf
sbb
jno
out
sti
mov
push
(bad)
jo
mov
inc
ja
sar
mov
shl
mov
mov
in
sti
push
stos
push
jge
pop
ret
stos
or
cwde
inc
add
daa
jge
sti
movs
mov
push
retf
pop
fidivr
ins
xor
inc
cs
jle
jge
cld
inc
cmp
and
psubq
mov
or
(bad)
je
lahf
lahf
lea
vmovmskps
inc
xor
add
retf
ins
xor
outs
sub
outs
sub
jno
mov
xor
ret
daa
in
xchg
clc
jno
movs
(bad)
and
xor
retf
pop
sti
jno
mov
xchg
mov
mov
rcl
sub
jns
vmovapd
mov
or
mov
push
cmp
cld
adc
(bad)
mov
lods
lods
inc
sub
xchg
sub
retf
and
jle
mov
jno
mov
or
xchg
cli
xlat
and
xor
retf
and
mov
or
mov
pop
(bad)
cdq
push
sbb
jno
cdq
xchg
jno
fild
mov
mov
and
ret
xchg
cli
xlat
mov
sub
mov
movs
dec
mov
xlat
xor
pop
add
adc
push
pop
retf
xlat
jg
in
xor
jno
in
ret
pop
aad
mov
sub
in
frstpm(287
jno
mov
dec
leave
in
xor
xor
sub
aad
call
or
int
ins
and
pop
retf
jle
cli
pop
and
imul
(bad)
fs
into
inc
hlt
icebp
div
or
cli
jno
mov
mov
cmp
retf
mov
adc
jp
jle
xlat
xor
and
push
and
jg
jno
stos
push
jns
push
sub
sbb
mov
mov
xor
inc
cmc
mov
mov
lods
retf
xlat
call
in
ret
sbb
jno
and
jno
mov
mov
inc
cmp
add
ror
add
test
retf
sbb
jno
and
jno
mov
mov
shr
jae
add
rcr
mov
jg
sub
push
cld
mov
jg
in
ss
repnz
or
sub
enter
jno
fbstp
repnz
sub
add
xlat
xor
jno
stos
push
jns
pop
adc
jno
xlat
xor
jno
stos
push
jns
fdivr
scas
cli
xlat
inc
mov
pop
stc
jno
xchg
shl
push
xchg
stos
xor
mov
cld
sub
mov
js
and
sub
repnz
pusha
ss
enter
jno
fbstp
repnz
clc
jno
xchg
test
xchg
jp
int3
add
inc
xchg
lods
inc
sub
add
sar
sub
adc
cmp
jno
xlat
xor
xor
xlat
xor
jno
stos
push
gs
fwait
clc
jno
xchg
shl
push
xchg
stos
xor
mov
cld
sub
mov
js
mov
shl
jnp
push
cld
sub
mov
js
int3
aaa
sub
repnz
xchg
pop
clc
jno
xchg
shl
push
xchg
stos
xor
mov
cld
sub
mov
js
loopne
sub
repnz
jb
push
cld
sub
mov
js
or
sub
repnz
dec
aaa
sub
enter
jno
fbstp
repnz
clc
jno
xchg
test
xchg
jp
int3
add
inc
xchg
lods
inc
sub
add
rcl
add
inc
jecxz
inc
sub
add
shl
add
shl
add
sub
call
add
sbb
enter
lods
retf
xlat
call
in
ret
add
clc
ret
inc
sub
push
shl
sub
or
sub
add
ror
add
sbb
enter
lods
retf
xlat
call
in
ret
test
cli
xlat
call
in
ret
sbb
jno
and
jno
mov
mov
inc
cmp
add
rol
dec
mov
test
retf
and
hlt
add
inc
in
inc
sub
add
ror
shr
add
sub
call
add
sbb
enter
lods
retf
xlat
call
in
ret
test
cli
xlat
call
in
ret
xor
jno
into
inc
hlt
in
div
lods
xor
sub
jno
fbstp
repnz
sub
add
xlat
xor
jno
stos
push
jns
lahf
cli
jno
xchg
and
sub
cld
mov
in
jno
jg
int3
add
inc
fsubr
add
shr
dec
mov
ror
jae
add
ror
add
sbb
enter
lods
retf
xlat
call
in
ret
cmc
mov
lods
retf
xlat
call
in
ret
adc
jno
ror
sub
call
add
sbb
enter
lods
retf
xlat
call
in
ret
sbb
jno
and
jno
mov
mov
rol
add
sub
call
mov
jg
sub
push
cld
mov
jg
je
sub
repnz
mov
sub
mov
js
fs
and
jae
sub
jno
jnp
loopne
sub
clc
adc
mov
test
retf
sub
mov
js
sub
retf
movs
ja
fcmovbe
xor
jno
xlat
xor
scas
cli
xlat
and
aam
mov
ror
sti
mov
ret
xabort
fild
or
mov
mov
add
jmp
jnp
es
mov
or
mov
sub
xchg
inc
sub
jnp
fsubr
sub
cli
push
and
pop
sub
xchg
aad
mov
fild
mov
mov
retf
shl
add
xlat
xor
jno
stos
loope
add
xlat
xor
cld
or
sub
retf
sub
jno
lods
jle
cli
xlat
call
pushf
push
xor
test
shl
xlat
xor
mov
lods
ja
add
sub
cld
adc
mov
js
hlt
mov
xor
pop
add
sub
xchg
mov
xor
sar
xlat
xor
mov
xlat
call
in
(bad)
js
daa
dec
or
sub
sbb
lods
ss
cli
xlat
call
lods
jle
cli
xlat
call
js
call
mov
xor
mov
xlat
inc
mov
inc
mov
ins
mov
(bad)
cli
xlat
call
in
(bad)
clc
std
add
clc
ret
leave
sti
xlat
xor
mov
int3
xor
cli
sub
jno
stos
ja
clc
xlat
xor
mov
shl
sub
clc
std
sub
clc
ret
leave
sti
xlat
xor
mov
jno
hlt
mov
movs
dec
leave
sti
xlat
xor
jno
or
jno
lods
ss
cli
xlat
call
sub
mov
lods
pop
jo
sub
mov
jmp
jno
nop
mov
xchg
mov
inc
mov
popf
push
cli
xlat
mov
sbb
mov
lods
ss
cli
xlat
call
in
fidiv
cli
sub
pop
test
(bad)
push
add
(bad)
xor
lods
inc
sub
push
cs
clc
ret
and
add
inc
and
sub
sbb
sub
icebp
adc
cli
sub
jp
xor
mov
or
retf
sub
jno
rol
add
retf
mov
pushf
cdq
int
retf
sar
mov
push
xor
xlat
xor
mov
stos
push
jge
xlat
xor
mov
and
xchg
fbstp
js
daa
dec
lds
xlat
jg
clc
xlat
xor
mov
js
cmp
retf
mov
mov
js
les
rcr
cli
mov
in
add
xlat
xor
jno
and
xor
sub
jno
sar
add
and
add
inc
shr
sub
cli
cwde
mov
mov
stos
and
mov
xor
mov
fstp
jge
or
xor
and
jg
clc
xlat
xor
mov
fild
mov
mov
loop
add
xlat
xor
cld
sbb
sub
retf
xlat
jg
clc
xlat
xor
jno
shl
mov
xor
jno
mov
xor
mov
sub
popa
push
jle
cli
pop
and
cmp
lock
std
fild
mov
rol
xlat
mov
jno
mov
enter
mov
mov
cdq
daa
in
aaa
in
jno
nop
dec
cs
ins
cmp
ret
push
jo
inc
and
add
rcr
stc
js
jno
inc
mov
inc
sub
js
sub
clc
ret
mov
or
shr
call
jle
sbb
sub
cli
inc
aam
ja
shl
mov
or
int
jne
sub
cdq
lea
retf
jg
xchg
add
jno
iret
inc
hlt
stc
(bad)
xor
je
pop
ret
add
jno
out
inc
mov
inc
mov
fidivr
xor
lds
movs
dec
jo
xlat
xor
pop
add
pop
(bad)
cld
sub
mov
js
cmp
test
pop
test
retf
jle
call
ret
ret
gs
loope
and
int
popf
or
je
pop
out
repnz
jno
dec
or
call
or
and
push
xor
sar
inc
xor
js
jno
imul
add
push
cdq
adc
retf
lahf
(bad)
pop
xlat
adc
add
rol
sub
sbb
inc
retf
sub
jno
sbb
and
xor
jno
dec
xor
xor
stos
xor
xchg
mov
ret
cmp
push
mov
mov
jno
sub
jno
sub
jno
inc
retf
inc
int3
sbb
sub
outs
sub
movs
push
cdq
mov
retf
fistp
add
inc
cli
mov
rcl
sar
inc
cli
mov
test
xor
sub
mov
add
xor
sub
mov
xor
xor
sub
xor
inc
mov
sub
call
jno
sub
call
jno
sub
cmps
push
cdq
adc
sub
movs
push
cdq
add
shl
mov
cli
mov
sbb
add
sub
mov
fcom
add
sub
mov
mov
add
sub
mov
mov
xor
sub
add
inc
mov
jbe
and
int
es
mov
(bad)
lea
and
inc
sub
dec
and
retf
mov
dec
xor
rcl
sar
add
sbb
and
sub
sar
mov
jno
test
mov
test
xor
sub
xor
inc
mov
aam
inc
sub
in
jno
mov
out
inc
sub
sbb
xlat
call
imul
jno
aam
inc
sbb
in
jno
mov
loope
sub
sbb
xlat
jmp
push
retf
aam
inc
sub
(bad)
in
jno
mov
scas
sub
stc
xlat
call
imul
jno
aam
inc
and
stos
in
jno
mov
call
sub
stc
xlat
call
imul
jno
ror
mov
dec
rol
and
and
retf
mov
jno
test
mov
lods
imul
rol
jge
xchg
xchg
fisub
push
xchg
and
lea
mov
aas
retf
fst
xor
mov
or
jmp
ror
xlat
dec
mov
mov
out
inc
sub
inc
cs
sub
jno
ins
cmp
push
shr
sub
inc
mov
sub
jno
sub
icebp
js
xor
add
sbb
js
lods
fisubr
sbb
xrelease
sub
jno
shl
add
imul
inc
call
dec
mov
pop
inc
fmul
popa
js
outs
cmp
jno
test
sbb
xrelease
repnz
add
or
push
xor
sbb
xor
ins
push
add
sub
std
add
and
mov
icebp
push
inc
push
scas
inc
sub
sbb
sub
movs
push
sbb
inc
retf
inc
retf
sbb
inc
jbe
add
sub
mov
sub
clc
ret
test
retf
jle
inc
cli
sbb
and
sub
sbb
imul
xor
adc
sub
jno
sub
jno
repnz
add
or
imul
inc
retf
sbb
xor
ins
push
add
sub
jno
push
mov
jno
inc
shr
fisubr
sbb
sub
cmps
push
sbb
imul
xor
adc
sub
sbb
js
mov
fcomip
mov
sub
test
sub
ror
mov
jno
(bad)
cli
pop
add
sbb
mov
rol
popa
ins
push
retf
jno
inc
je
add
sub
jno
inc
inc
stos
inc
sub
sbb
sub
call
inc
call
adc
inc
scas
sbb
cmp
jb
test
sbb
test
cdq
popa
or
jno
rcl
inc
mov
inc
sub
jno
js
pop
and
retf
repnz
sub
mov
rcl
rcr
add
sbb
mov
rol
mov
sbb
inc
pusha
jno
sub
icebp
push
inc
push
scas
inc
sub
sbb
sub
movs
push
clc
std
sub
clc
ret
mov
sbb
xor
dec
push
add
sub
jno
inc
fs
sub
sbb
test
cdq
lds
retf
add
xor
xlat
mov
out
inc
sub
rol
popa
outs
adc
sbb
retf
sub
jno
inc
mov
stos
fisubr
sbb
sub
cmps
push
lock
jno
inc
retf
sbb
xor
ins
push
add
sub
jno
xlat
retf
inc
fidiv
sub
sbb
mov
repnz
add
or
jno
pop
imul
inc
retf
sbb
xor
ins
push
add
inc
shl
sub
sbb
push
xor
sub
jno
mov
call
cli
sbb
mov
rol
popa
ins
aad
jno
inc
sti
jo
sub
jno
inc
fldcw
fisubr
sbb
sub
cwde
imul
clc
ret
mov
sbb
xor
ins
push
add
inc
xor
mov
sbb
adc
add
sub
jno
mov
inc
sub
out
inc
sub
rol
mov
jno
inc
pop
jno
sub
icebp
push
inc
push
scas
inc
sub
sbb
jnp
jno
mov
inc
sub
out
inc
sub
rol
mov
jno
inc
or
sub
icebp
push
inc
pop
rol
mov
sbb
aas
call
in
sub
sub
inc
mov
sub
jno
sub
jno
xor
jno
inc
ficomp
add
hlt
adc
stos
inc
sub
cdq
fisttp
retf
add
add
sbb
xor
dec
push
add
inc
aas
jno
sub
icebp
push
inc
push
scas
inc
sub
sbb
mov
jno
mov
out
inc
sub
out
inc
sub
rol
ins
mov
jno
inc
arpl
sub
icebp
push
inc
sub
fsubr
sbb
sub
cmps
push
cdq
ins
shl
jno
fild
mov
pop
xor
(bad)
jge
xchg
xchg
fisub
push
xchg
and
rol
jb
retf
fst
xor
or
sbb
xrelease
rcr
cli
xlat
dec
mov
mov
out
inc
sub
sub
inc
mov
sub
jno
fucomi
jno
movs
pop
sbb
retf
stc
call
sbb
xor
ins
ss
inc
fcomp
xor
js
jno
sub
sbb
test
jae
sub
enter
rol
mov
sub
jno
sub
mov
ins
cmp
in
dec
call
sub
ins
loope
xor
sub
jno
mov
out
inc
sub
inc
adc
jno
sub
jno
sub
jno
add
jno
mov
cmp
in
dec
call
sub
ins
hlt
adc
stos
inc
sub
jno
mov
jno
sub
je
sub
jno
xchg
enter
retf
inc
ret
ror
sub
outs
sub
call
jno
sub
jno
sub
jno
dec
mov
gs
sub
icebp
push
inc
push
scas
inc
sub
sbb
sub
cwde
imul
clc
ret
stos
inc
sub
jno
xlat
call
xchg
aaa
retf
pop
adc
add
sub
jno
sbb
and
sbb
retf
mov
mov
jo
retfw
jno
xlat
call
pop
aaa
retf
cmp
jno
sub
mov
rcl
ror
sbb
mov
rol
mov
sbb
inc
ficomp
jg
leave
jno
js
lods
fisubr
sbb
sub
dec
sbb
retf
mov
add
sbb
mov
rol
mov
sbb
inc
ficomp
stos
sub
jno
sub
icebp
push
inc
push
scas
inc
sub
sbb
sub
call
mov
xor
jno
sub
jno
cmp
sbb
fidiv
sub
sbb
mov
repnz
add
ss
pop
imul
mov
or
inc
call
xor
adc
sub
jno
jmp
jno
inc
retf
js
xor
push
sbb
xrelease
sub
or
sub
shl
sub
jno
sub
jno
cmp
sbb
dec
mov
sbb
repnz
repnz
add
ss
fcom
add
sbb
xor
ins
push
add
inc
jae
add
sub
sbb
adc
add
sub
jno
mov
inc
sub
out
inc
sub
rol
popa
ins
int3
retf
jno
inc
sub
add
sub
jno
inc
mov
inc
sub
sbb
sub
movs
push
sbb
imul
xor
adc
sub
sbb
inc
retf
js
fsubr
sbb
xrelease
sub
call
movs
mov
inc
xor
xor
jno
xor
sbb
inc
ficomp
add
mov
retf
stos
inc
sub
cdq
gs
pop
xor
sub
sbb
imul
adc
inc
loop
inc
inc
ficomp
add
hlt
adc
stos
inc
sub
cdq
and
push
xor
sbb
xor
dec
push
add
inc
xchg
sbb
inc
retf
js
lods
fisubr
sbb
mov
sub
jno
shl
imul
inc
call
xor
adc
jno
sub
sbb
inc
retf
js
xchg
fsubr
sbb
icebp
mov
sub
les
sub
rcr
nop
cmp
std
mov
xor
mov
mov
cdq
daa
push
xchg
sub
sub
mov
and
jno
sub
sbb
inc
retf
inc
retf
test
add
rol
inc
mov
(bad)
xor
jno
inc
retf
mov
or
std
sub
clc
ret
rcr
retf
aam
mov
fmul
jno
sub
cmc
js
xor
js
xor
js
add
inc
test
add
mov
dec
pop
aam
cmp
sub
test
sub
mov
xor
xchg
cli
xlat
dec
mov
mov
mov
jne
ins
xor
cli
pop
ficomp
cmp
jno
rcr
xlat
dec
mov
nop
dec
push
add
ins
es
ret
sub
jmp
clc
loopne
es
sub
and
(bad)
outs
(bad)
dec
mov
xor
jno
mov
add
xlat
xor
jno
mov
or
in
xor
jno
daa
retf
mov
mov
mov
add
fistp
mov
lods
retf
xlat
call
push
xor
test
sub
mov
js
jl
sub
icebp
js
leave
add
inc
aas
rol
hlt
add
sar
sub
dec
xor
jno
push
xor
gs
retf
sub
test
sub
icebp
js
iret
add
inc
cli
rol
hlt
add
ror
add
cs
xor
xlat
xor
jno
test
mov
pop
fistp
popa
cdq
mov
lods
retf
xlat
call
fdivr
(bad)
cli
xlat
inc
mov
push
xor
repnz
retf
sub
add
sub
icebp
js
ret
add
inc
push
hlt
add
rcl
cli
and
xor
xlat
xor
jno
test
mov
pop
fistp
add
mov
lods
retf
xlat
call
fsub
or
js
add
xlat
xor
jno
test
mov
pop
fistp
cmp
mov
lods
retf
xlat
call
push
xor
and
push
cld
sub
mov
js
nop
adc
retf
inc
retf
icebp
mov
arpl
xor
xlat
xor
xor
xlat
mov
sbb
push
test
cli
xlat
mov
cdq
loope
retf
in
loop
cmc
fild
adc
mov
mov
xor
mov
sub
mov
into
mov
shl
mov
mov
add
sub
mov
stos
push
jns
call
popf
cdq
dec
xor
jno
jbe
sub
sub
and
int
popf
xor
retf
jle
iret
sbb
pop
mov
sti
or
dec
xchg
repnz
xor
ret
inc
sub
call
rcr
add
sub
enter
jno
fbstp
stc
nop
(bad)
mov
test
cmp
xor
fnsave
lds
cwde
adc
retf
(bad)
mov
sub
xor
xlat
xor
jno
mov
or
mov
sub
xor
xlat
xor
jno
test
cmp
xor
jo
push
cld
add
mov
js
in
sub
icebp
mov
sub
jns
add
xlat
xor
jno
test
retf
(bad)
mov
cs
xor
xlat
xor
jno
test
cmp
xor
ds
retf
lds
xor
sub
icebp
mov
and
xor
xlat
xor
jno
mov
or
mov
and
xor
xlat
xor
jno
test
cmp
xor
(bad)
lds
pushf
adc
retf
(bad)
mov
and
xor
xlat
xor
jno
mov
dec
xchg
repnz
xor
cmp
xor
cdq
mov
retf
lds
fcom
sub
icebp
mov
and
jle
add
xlat
xor
jno
test
cmp
xor
push
mov
retf
lds
or
sub
sbb
mov
lods
daa
xchg
xlat
call
fdivr
xchg
xlat
inc
mov
pop
push
add
sub
call
inc
hlt
in
fbstp
mov
xlat
clc
add
repnz
xor
jb
sub
xor
inc
mov
out
scas
outs
add
sub
cdq
jecxz
xor
clc
add
mov
and
jle
test
add
sub
stc
aam
mov
sub
icebp
mov
adc
hlt
cmp
xchg
xor
jle
add
jno
out
dec
mov
xlat
xor
mov
xlat
call
lods
ss
cli
xlat
call
in
(bad)
leave
mov
into
inc
hlt
fstp
xor
int3
std
shl
cdq
cmp
jmp
push
jns
mov
ret
add
xor
loop
mov
ds
xor
dec
sub
jno
adc
enter
pop
rol
mov
cld
adc
mov
js
jl
sub
lock
(bad)
jno
inc
pop
rol
mov
cld
adc
mov
js
adc
retf
xor
cmp
into
jno
movs
dec
(bad)
std
xlat
xor
jno
mov
dec
movs
repnz
xor
(bad)
std
xlat
xor
xor
xlat
xor
jno
inc
leave
test
sub
stc
shl
add
mov
movs
dec
(bad)
sti
xlat
xor
jno
movs
dec
(bad)
stc
xlat
xor
cld
adc
mov
js
mov
push
cld
adc
mov
js
add
sub
repnz
jno
lods
ss
xlat
call
sub
cld
adc
mov
js
std
cwde
xlat
xor
mov
lods
mov
hlt
stc
aam
mov
(bad)
fdiv
jno
hlt
std
shl
jno
fild
cmp
mov
mov
xor
xor
retf
popf
xor
movs
push
sbb
lock
lods
ss
xlat
call
in
ficomp
mov
ss
cli
xlat
call
lods
ss
cli
xlat
call
lods
adc
mov
dec
int
aam
mov
pop
mov
xchg
xlat
or
add
xor
cli
sub
jle
movs
adc
fstp
xor
lock
popf
ret
jno
xlat
jg
std
xlat
xor
mov
js
cmps
(bad)
cld
adc
mov
js
or
sub
repnz
hlt
stc
shl
bound
fbstp
(bad)
cli
xlat
popf
cdq
mov
retf
xchg
sbb
add
popf
sbb
adc
add
shl
jno
fild
and
mov
mov
xor
icebp
shl
jno
movs
dec
(bad)
std
xlat
xor
jno
movs
ja
sti
xlat
xor
mov
xlat
inc
or
dec
cmp
jno
lods
xor
add
xlat
xor
jno
sub
jno
js
mov
adc
mov
js
mov
shr
xlat
dec
mov
mov
dec
jbe
xlat
xor
mov
rcr
addr16
jno
push
loopne
add
shl
mov
mov
jb
push
sub
cdq
mov
retf
jle
retf
pop
pop
test
int3
ss
push
sbb
sub
fs
sub
clc
or
adc
xor
sub
sbb
xor
add
add
clc
(bad)
mov
push
xor
imul
lock
mov
add
sub
sub
sub
sbb
sub
jno
mov
aam
add
sub
and
xor
jno
mov
or
add
retf
lods
jnp
cli
xlat
call
sub
sbb
pop
rol
inc
hlt
mov
xor
jmp
xor
hlt
sbb
retf
sub
ret
pop
jle
add
push
lock
jae
jno
rcl
jo
dec
dec
fisub
mov
cmp
mov
aaa
jecxz
mov
xchg
clc
ret
xor
xor
pushf
cli
xlat
retf
call
(bad)
lahf
daa
mov
xchg
sbb
cmp
mov
das
or
aad
inc
mov
out
stos
clc
mul
xor
pushf
cli
xlat
retf
sti
sbb
pop
lds
retf
xchg
mov
sub
push
adc
retf
fimul
jo
es
test
xor
fucomip
xlat
xor
pushf
cli
xlat
call
in
xor
xlat
xor
jno
inc
retf
mov
mov
js
hlt
mov
xor
popa
add
les
mov
xlat
dec
sbb
pushf
cli
xlat
call
in
rcr
add
xlat
xor
jno
mov
or
add
loopne
add
push
sbb
out
adc
add
sub
in
push
sub
clc
fstp
adc
(bad)
movs
ja
jmp
xor
xor
sub
pop
mov
sub
sbb
lock
pop
push
add
sub
sub
sbb
jae
add
lea
sbb
out
adc
add
sub
dec
push
sub
clc
fstp
adc
(bad)
movs
ja
call
test
xor
sub
pop
mov
sub
sbb
lock
sub
rol
add
movs
ja
call
out
sbb
add
sub
aam
lock
test
outs
sub
jno
sub
jno
inc
retf
sub
cld
or
retf
pushf
mov
jno
shr
sub
jno
movs
(bad)
dec
(bad)
jmp
jno
movs
inc
(bad)
jmp
icebp
cmp
retf
inc
retf
nop
pushf
and
xlat
popf
mov
and
add
inc
enter
mov
pop
jle
mov
ins
jb
or
retf
nop
call
js
sbb
sub
cld
mov
add
add
movs
mov
int3
mov
xor
vxorpd
jno
inc
retf
nop
call
sub
jle
sub
push
retf
mov
xor
mov
mov
and
add
adc
add
lock
test
call
je
push
mov
ins
or
add
sub
ror
retf
cld
inc
test
ins
sub
cdq
lods
daa
retf
ins
sbb
add
scas
fidiv
mov
(bad)
jno
fild
clc
sbb
shr
xor
int
sub
jno
ins
push
jno
sub
mov
loopne
jno
sub
add
inc
mov
ins
jbe
in
pop
lds
inc
retf
sbb
xor
inc
retf
inc
retf
inc
retf
sub
sbb
xrelease
sub
xchg
or
retf
mov
jno
jmp
sbb
sub
sbb
es
sub
imul
and
sub
dec
add
pop
mov
cdq
icebp
and
jno
push
adc
add
sub
clc
add
ja
retf
and
jno
sub
mov
out
dec
fucomp
xlat
xor
clc
fld
adc
(bad)
movs
dec
leave
call
lods
data16
cli
xlat
call
push
adc
add
sub
cdq
mov
sar
pop
int
and
add
pushf
mov
sub
jno
or
cmp
sub
cld
add
jno
sub
sbb
and
test
add
(bad)
xor
sbb
sub
mov
in
imul
add
sub
jno
sub
jno
sbb
jno
ret
sar
inc
int3
call
lock
mov
inc
xor
js
loopne
sub
sbb
movs
(bad)
xchg
push
shl
add
std
xchg
das
pop
loope
popa
add
(bad)
div
sub
jne
jg
sub
loop
(bad)
lea
xor
lods
pop
jo
sub
jle
inc
retf
jno
rcl
sub
pusha
add
retf
dec
enter
fnstenv
sub
jno
daa
inc
push
or
sub
jno
lods
dec
jo
sub
push
or
inc
jle
add
sub
jno
fst
xor
push
cdq
sbb
xor
mov
xlat
inc
mov
inc
mov
les
xor
xlat
xor
mov
int3
aaa
mov
movs
dec
movs
clc
xlat
xor
mov
xlat
and
daa
dec
hlt
add
in
aaa
mov
js
inc
inc
mov
jno
and
add
clc
xlat
xor
mov
stos
and
mov
loope
rcl
mov
mov
mov
xlat
loope
fst
xor
cli
nop
clc
aaa
mov
add
clc
xlat
xor
sbb
dec
xchg
clc
xlat
xor
mov
js
hlt
(bad)
xor
mov
xlat
call
ins
push
add
sub
sub
inc
mov
adc
retf
mov
scas
lds
imul
std
sbb
clc
ret
adc
test
retf
xlat
call
mov
retf
ret
xor
add
lods
xchg
jbe
sub
jno
jo
mov
jno
cmp
sub
clc
std
add
clc
ret
out
inc
sub
xor
daa
dec
inc
add
retf
rcr
sub
rol
ins
ret
xlat
mov
jno
mov
dec
cdq
clc
xlat
xor
jbe
sub
adc
xor
jno
adc
loope
push
add
movs
push
add
pushf
imul
sbb
push
add
movs
push
add
cmps
push
add
call
gs
jno
inc
retf
cmp
les
sub
cli
sbb
mov
adc
or
adc
push
add
pushf
imul
popa
adc
rol
sub
mov
and
or
retf
lock
add
xlat
xor
mov
xlat
retf
lock
mov
js
sbb
sub
clc
or
mov
shl
add
rol
ins
xlat
retf
movs
dec
mov
xlat
xor
in
inc
sub
mov
mov
sub
jno
jnp
xor
and
jno
sbb
and
sub
aaa
(bad)
cli
xlat
inc
hlt
hlt
aad
mov
lods
cmp
pop
jle
add
sub
jno
xlat
retf
movs
dec
mov
xlat
xor
rol
and
sub
cld
mov
xor
cli
stos
add
add
sub
mov
cld
cwde
aad
mov
jnp
lea
and
mov
sub
add
inc
retf
inc
stc
test
in
xchg
jno
xlat
push
movs
push
cdq
pop
and
jno
jge
jno
nop
mov
add
lods
cs
xlat
inc
mov
lods
aaa
(bad)
cli
xlat
call
js
pop
(bad)
cld
sbb
mov
js
sbb
sub
repnz
mov
aad
mov
js
inc
sbb
ret
jno
test
mov
xlat
xor
jno
sub
sbb
sub
jno
ret
ret
jno
shr
add
(bad)
xor
xor
ror
adc
inc
retf
dec
js
sub
mov
xor
xor
sub
fiadd
sub
mov
aam
mov
sub
dec
or
xor
(bad)
cli
xlat
test
test
mov
xchg
shr
sbb
sub
jno
pop
ret
jno
sar
stc
(bad)
xor
(bad)
sti
xlat
xor
lock
shl
movs
dec
mov
xlat
xor
mov
xlat
call
lods
cmp
and
jno
in
ficomp
cli
sub
jno
lods
aaa
(bad)
cli
xlat
call
shr
sub
clc
(bad)
xor
sbb
dec
and
retf
test
xor
sub
xchg
sub
cld
adc
mov
js
hlt
hlt
aad
mov
out
inc
sub
hlt
aad
mov
sar
sub
adc
sub
clc
(bad)
xor
pop
call
jno
xchg
aaa
(bad)
cli
xlat
retf
inc
retf
inc
bound
in
mov
pop
call
jno
mov
cmp
cld
adc
mov
js
hlt
hlt
aad
mov
push
hlt
hlt
aad
mov
js
add
inc
xor
hlt
clc
(bad)
xor
pop
call
jno
xchg
aaa
(bad)
cli
xlat
retf
inc
retf
inc
mov
jno
scas
ret
xlat
call
imul
jno
add
inc
mov
xlat
xor
icebp
cmp
retf
stos
xor
or
pop
shr
sbb
sub
jno
xlat
int
add
sub
(bad)
(bad)
xor
jle
lods
xor
add
xor
cli
adc
or
and
inc
out
inc
sub
jno
xlat
call
imul
jno
xchg
enter
dec
mov
xlat
xor
(bad)
cli
xlat
div
xchg
dec
mov
push
retf
lods
aaa
(bad)
cli
xlat
call
js
pop
(bad)
cld
sbb
mov
js
mov
sub
repnz
mov
aad
mov
js
inc
and
pop
int
add
xlat
xor
jno
sub
sbb
sub
jno
outs
int
add
sub
call
xor
jle
lods
xor
add
xor
cli
adc
or
and
inc
and
inc
sub
jno
xlat
call
imul
jno
sub
jno
test
mov
xlat
xor
(bad)
cli
xlat
dec
mov
add
mov
mov
xlat
xor
lock
mov
xlat
xor
mov
xlat
call
lods
cmp
and
jno
in
fcmove
in
(bad)
retf
iret
inc
hlt
loope
xor
mov
xlat
inc
mov
sub
jno
sub
sbb
mov
stos
iret
jno
mov
xor
sbb
xlat
xor
jno
adc
retf
movs
mov
xlat
mov
cmp
retf
mov
pop
popf
clc
xlat
xor
call
cmc
(bad)
xor
jno
inc
retf
les
mov
js
jae
fsubr
xor
xlat
xor
jno
movs
cmp
push
mov
in
aad
mov
inc
in
hlt
aad
mov
jg
sti
xlat
xor
jno
sub
jmp
inc
enter
mov
popf
cmp
add
retf
fdiv
cli
shl
sub
jno
or
add
inc
into
sbb
sub
xor
pop
xor
sub
cmc
(bad)
xor
mov
mov
(bad)
cli
xlat
and
add
retf
mov
add
add
inc
retf
les
mov
jp
sbb
popf
cmp
add
retf
movs
dec
popf
clc
xlat
xor
popf
shr
mov
rcr
add
rol
cli
popf
cmp
push
sub
mov
inc
jle
add
inc
into
sbb
inc
cmps
lds
mov
sbb
mov
sub
jno
shr
xlat
dec
mov
inc
iret
mov
and
add
sub
xor
inc
mov
cmp
popa
cli
pop
(bad)
mov
and
jae
mov
sub
jge
jle
cli
jo
jne
push
sub
clc
ret
jge
sub
jno
daa
dec
mov
js
ret
jle
out
retf
adc
cmc
movs
push
add
xlat
call
movs
sub
jno
out
xor
in
mov
jno
and
jno
scas
into
jno
adc
icebp
movs
push
add
xlat
call
imul
jno
sbb
mov
in
sub
adc
sub
dec
xor
xor
add
add
sub
repnz
inc
xor
mov
push
xor
or
add
sub
inc
and
cmp
dec
jne
mov
pop
ror
rcr
add
mov
jno
or
jne
mov
pop
ror
add
sub
jge
popf
(bad)
jno
fild
mov
repz
inc
in
mov
jno
cs
ins
and
sbb
mov
out
inc
sub
sub
inc
mov
sbb
mov
out
inc
sub
inc
sbb
inc
ins
add
sbb
mov
rol
icebp
inc
and
cs
ins
sub
dec
rol
mov
out
inc
sub
stos
jno
xor
popa
cli
pop
(bad)
daa
push
sar
shl
mov
or
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
mov
je
add
pop
call
clc
std
push
retf
in
ret
aam
mov
add
inc
ret
retf
test
jmp
xchg
int
lds
std
or
jle
das
ret
mov
sub
cmp
add
sub
and
outs
and
mov
test
retf
cmp
jno
sub
dec
add
ret
jecxz
sub
in
retf
jl
jns
call
xor
xchg
movs
or
mov
outs
out
inc
and
jns
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
jno
or
pop
loope
sub
.byte
