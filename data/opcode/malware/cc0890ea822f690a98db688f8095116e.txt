call
pop
mov
add
and
xor
add
xor
repnz
jbe
pop
pop
loopne
sub
xor
and
push
mov
pop
and
(bad)
fstp
adc
(bad)
and
push
fnstcw
push
adc
(bad)
(bad)
jl
mov
(bad)
sub
(bad)
(bad)
xchg
ins
or
nop
sbb
(bad)
(bad)
pusha
xor
xor
(bad)
inc
js
sub
pop
jl
add
add
add
je
mov
add
add
retf
mov
xchg
rcl
dec
mov
add
clc
(bad)
mov
cld
rol
iret
mov
mov
add
add
int3
sbb
dec
sub
mov
mov
cmp
add
xchg
xchg
test
inc
movs
retf
frstor
add
cdq
iretw
adc
pusha
sbb
call
adc
lahf
add
push
adc
inc
fs
mov
lods
mov
test
add
test
and
push
ins
js
popa
pop
je
push
add
inc
cmp
add
and
retf
test
cmp
push
adc
into
or
xlat
mov
add
dec
mov
gs
pop
pusha
leave
das
adc
add
add
add
add
push
add
dec
aaa
in
xchg
loope
popa
add
jne
jge
test
sbb
add
add
ret
loope
mov
mov
loope
cmp
rol
fld
in
jmp
pop
add
add
push
icebp
cmp
add
add
pop
rol
or
or
or
add
add
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
push
add
mov
aaa
icebp
sbb
or
mov
mov
mov
add
add
sbb
loopne
pop
adc
add
lods
dec
rol
pop
add
push
cld
dec
frstor
syscall
gs
xchg
mov
sbb
or
jnp
popf
cld
hlt
outs
jge
add
shl
clc
push
adc
add
cli
out
fisttp
push
or
(bad)
cmps
(bad)
jmp
push
bound
add
push
add
xchg
movs
or
fild
inc
adc
dec
pop
pop
retf
mov
arpl
mov
xchg
push
mov
retf
sbb
xchg
cmc
dec
or
adc
sbb
movs
add
call
stos
and
or
loopne
data16
fild
or
mov
adc
in
jp
mov
or
push
loopne
aas
jg
or
test
pop
adc
sbb
add
retf
aaa
imul
or
or
adc
lods
outs
enter
push
rol
adc
adc
push
lds
sub
push
adc
sbb
add
jo
pop
push
push
adc
rcl
mov
pop
fcom
sbb
pop
mov
cmp
or
add
adc
sbb
sbb
xor
sbb
sbb
or
push
sbb
cmp
sbb
xor
adc
adc
mov
dec
adc
add
sar
adc
cmp
sbb
adc
sahf
sbb
movs
je
xor
push
in
inc
or
mov
fwait
dec
xchg
sbb
pop
or
xchg
jae
adc
or
outs
or
jns
out
mov
loopne
fs
adc
repz
cmp
aad
sub
sbb
gs
add
scas
mov
jp
push
retf
cmp
out
shl
sar
adc
pusha
pusha
adc
cmps
jns
pusha
add
pop
push
shl
mov
cmp
add
add
inc
sub
push
in
push
ins
add
mov
jb
add
bound
gs
push
lea
jae
je
pop
pop
in
xchg
loope
add
add
add
add
stos
add
inc
(bad)
nop
mov
shl
and
cmp
pop
add
add
add
add
add
add
add
add
add
push
jge
push
add
add
add
popf
add
pop
pop
mov
into
repnz
sbb
adc
loopne
ret
int
or
cmp
out
add
xor
sahf
inc
sbb
add
or
push
adc
sub
lock
cmp
adc
pop
add
arpl
cmp
and
sbb
ror
adc
cmp
adc
and
repnz
xor
sbb
or
adc
sub
xor
sahf
or
push
sbb
add
cmp
sub
cmp
xor
sub
xor
cmp
pop
adc
cld
sub
xor
and
cmp
sbb
ss
loopne
and
sbb
add
popf
gs
cmp
and
push
pop
adc
cmp
xor
sub
adc
pop
dec
jo
push
dec
and
ja
loope
pop
pop
add
std
fisub
outs
jb
xor
push
inc
arpl
add
push
add
inc
add
add
add
arpl
and
jne
bound
mov
ja
pop
sbb
mov
inc
fiadd
inc
ss
push
bound
outs
ja
gs
add
pop
jb
adc
outs
arpl
inc
je
cmp
retf
add
cvtps2pi
pop
mov
adc
xor
repz
outs
add
imul
movs
gs
and
rcr
outs
xchg
xchg
add
push
xor
xor
cwde
or
lgdtd
cmp
add
outs
pop
pop
call
adc
pusha
loopne
add
inc
push
inc
xor
bound
arpl
(bad)
gs
pop
cs
ins
add
or
or
sub
jl
lods
xchg
xor
sbb
xchg
les
and
xor
push
rcl
jns
retf
or
ds
push
fwait
in
out
cmp
fadd
mov
xchg
add
push
or
add
push
mov
xor
adc
add
add
xor
gs
dec
add
scas
(bad)
lods
dec
add
or
scas
int
ds
loop
push
jl
add
add
add
stos
dec
mov
int
js
inc
sbb
dec
push
mov
test
cmps
mov
or
loopne
dec
dec
and
(bad)
stc
fadd
outs
fsubr
adc
shr
dec
out
xchg
or
cmps
test
pop
push
and
mov
sahf
adc
mov
imul
mov
jno
cli
sti
add
add
std
xchg
xchg
adc
pushf
add
sahf
out
push
or
or
jns
out
pop
or
push
(bad)
repz
jecxz
add
sbb
inc
adc
mov
shr
popa
fs
je
je
jo
and
popa
ins
cmps
pushf
iret
sbb
dec
xchg
hlt
mov
sub
das
jo
scas
sbb
in
or
fsubr
(bad)
adc
inc
fwait
(bad)
in
sar
outs
mov
sub
es
call
push
add
mov
mov
dec
xchg
add
test
lods
pop
in
clc
or
push
or
mov
sub
sub
cmps
jp
dec
inc
jmp
mov
shl
das
inc
add
aad
sub
inc
lock
mov
dec
aaa
mov
adc
shl
inc
ror
or
adc
jecxz
addr16
push
rcl
xor
sub
mov
test
retf
dec
cmp
dec
add
add
mov
pop
push
dec
dec
inc
dec
push
push
pop
jae
jae
loopne
shr
xor
xchg
lea
fwait
mov
int3
add
stos
fdivr
fdiv
jecxz
rol
sbb
add
cmp
enter
push
jno
popf
xor
cwde
or
and
ins
gs
mov
inc
push
repnz
ss
xchg
xor
js
scas
sub
or
fist
lea
or
ror
push
in
mov
adc
add
add
ret
bound
xchg
pop
pusha
push
add
jb
or
retf
xor
je
outs
mov
xchg
das
inc
stos
leave
mov
ja
sub
jbe
jp
mov
retfw
ins
ja
je
outs
(bad)
retf
ins
xor
pushf
dec
xor
pop
rcl
and
gs
inc
outs
cmp
jae
mov
popa
std
lahf
repnz
rol
jb
imul
push
gs
test
cdq
dec
sar
std
cmps
dec
push
pop
daa
lahf
push
data16
ja
and
sbb
xor
jnp
cli
loopne
push
add
ds
mov
jl
les
mov
sti
jns
add
add
dec
push
push
xor
call
test
or
xor
xor
mov
pop
mov
call
mov
pop
jo
(bad)
xor
iret
lds
shl
push
ds
add
sub
jno
sbb
shl
xchg
or
stc
sbb
inc
lahf
inc
sahf
ss
jns
jo
popa
test
jp
inc
cs
fwait
ja
mov
and
mov
adc
stos
mov
xor
and
ins
and
in
cmp
jmp
pop
jmp
add
fs
xchg
xor
mov
pushf
fild
inc
cmp
or
xchg
and
jmp
popf
or
in
mov
dec
xchg
fsub
sahf
das
mov
int3
or
into
jae
int3
push
mov
sub
push
mov
and
dec
push
push
push
mov
mov
fcom
mov
mov
mov
hlt
push
push
push
inc
mov
mov
push
push
pusha
mov
in
mov
mov
and
fmul
aad
add
or
xchg
cld
pop
adc
push
lea
call
push
lea
push
cmp
add
les
lea
push
push
pusha
mov
in
and
mov
mov
not
push
or
inc
xchg
mov
pop
jmp
dec
ins
cmp
and
ret
ret
cmp
pop
xor
or
pop
mov
pop
ret
addr16
or
icebp
jo
sub
clc
mov
jne
cmp
inc
mov
(bad)
push
mov
call
mov
mov
adc
ins
xor
enter
push
rcl
pop
add
and
jp
mov
mov
les
dec
call
test
pop
mov
pushf
or
imul
adc
sub
pushf
or
lea
xchg
push
test
mov
test
mov
pop
mov
xor
mov
(bad)
push
sbb
push
gs
(bad)
adc
push
push
mov
cld
in
out
outs
cmc
or
mov
push
or
(bad)
aas
sub
mov
dec
outs
jb
ins
aaa
xchg
fmul
xlat
sub
or
or
mov
xchg
in
(bad)
bnd
cld
push
mov
in
mov
sub
out
sbb
sahf
mov
xchg
or
cmp
mov
test
xor
sbb
xchg
jo
test
xor
jns
out
xor
rcl
out
cmp
out
adc
inc
pop
loope
xor
xor
cmps
mov
xchg
ret
loope
ss
and
ss
arpl
pop
add
jns
pop
push
cmp
push
repz
dec
xor
xor
dec
push
arpl
popa
fs
data16
popa
outs
aaa
mov
ds
imul
in
popa
ins
xor
jmp
xor
jle
movs
gs
adc
imul
imul
push
inc
dec
push
xchg
(bad)
push
dec
dec
dec
pop
inc
fs
gs
fs
jo
ficom
(bad)
repnz
test
mov
popa
jae
jae
jb
loopne
cmp
jne
jb
dec
outs
jb
retf
inc
cmp
inc
js
dec
shl
dec
fs
mov
test
es
sbb
or
retf
push
imul
outs
addr16
int
std
inc
mov
mov
(bad)
stos
sbb
les
xchg
push
ins
jne
jecxz
cwde
stc
and
cmps
xor
js
add
cmp
