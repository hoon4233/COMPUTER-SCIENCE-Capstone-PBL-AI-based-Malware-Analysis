je
mov
add
call
jae
add
add
add
cdq
sub
loopne
int
fimul
shr
ja
leave
inc
hlt
jne
lods
dec
test
inc
(bad)
jge
jns
(bad)
lods
inc
or
jnp
xchg
nop
sbb
xchg
mov
outs
dec
mov
xor
aas
fwait
sbb
std
clc
into
ret
and
test
lods
inc
les
ja
cmc
add
pop
aas
(bad)
adc
mov
and
lea
lea
cmps
std
mov
dec
sbb
mov
repz
mov
dec
sub
imul
cli
in
inc
icebp
jno
xchg
int
scas
xor
ret
test
ins
pop
inc
push
push
call
bnd
adc
js
in
mov
sbb
call
arpl
adc
adc
mov
push
add
int3
scas
sbb
out
mov
inc
in
aam
dec
imul
pop
pop
and
mov
inc
gs
xor
cs
int3
mov
enter
aaa
or
add
and
test
pushf
push
adc
setg
(bad)
sbb
mov
test
iret
mov
xor
call
movs
ret
jbe
mov
mov
and
push
pop
out
std
sbb
push
xchg
movq
retf
sbb
jmp
cmp
push
addr16
rcr
lods
les
nop
popf
and
daa
mov
test
out
adc
neg
push
push
sbb
cmp
xor
xlat
(bad)
lods
imul
pop
jae
jns
icebp
popf
cmp
mov
(bad)
ficomp
fiadd
scas
pop
xchg
dec
fmul
(bad)
xor
add
mov
iret
jg
pushf
jbe
sbb
(bad)
mov
es
lock
out
mov
xor
popf
xchg
mov
mov
(bad)
push
in
mov
mov
shr
shr
inc
sbb
push
mov
cld
test
xlat
mov
mov
sbb
enter
mov
fwait
mov
and
sahf
push
mov
cmp
dec
dec
pop
pop
fist
fucomp
fcomp
ret
fstp
push
jbe
sbb
mov
movs
add
ins
aas
pop
mov
clc
arpl
shr
test
pop
jo
fsub
call
push
inc
jmp
xor
cmp
aad
call
icebp
dec
push
xor
xchg
cmp
jg
fnstenv
cld
pop
push
sbb
adc
mov
mov
cmp
adc
pop
arpl
sub
add
(bad)
jmp
inc
repnz
mov
push
pop
inc
xchg
inc
les
dec
stos
push
jnp
sbb
test
mov
in
cmp
fucomi
je
fld
mov
dec
pop
cdq
aad
dec
mov
mov
xchg
out
lods
mov
(bad)
pop
dec
or
push
shr
add
scas
int3
adc
pop
out
cmp
add
lock
push
sub
fsub
popa
not
dec
loopne
sub
dec
push
pop
loope
add
arpl
push
aaa
lock
icebp
push
xchg
cdq
dec
xchg
out
jo
popa
adc
mov
jmp
add
xchg
jno
aad
dec
xchg
pop
or
(bad)
or
addr16
mov
cdq
xor
inc
clc
aam
jne
xlat
mov
(bad)
std
into
std
repz
mov
aam
cmp
jge
dec
mov
xor
xchg
sbb
retf
xlat
mov
sub
mov
or
xchg
sti
mov
sub
push
adc
test
inc
pop
out
adc
es
dec
mov
xor
cmp
mov
or
lock
(bad)
mov
jp
imul
shl
(bad)
and
sub
push
out
push
and
sub
into
jecxz
mov
(bad)
jmp
sub
adc
outs
shr
push
loopne
(bad)
int3
sbb
xor
dec
ins
daa
push
jb
inc
loop
sar
icebp
scas
sub
add
mov
pop
sbb
jno
xchg
clc
adc
mul
loop
fmul
call
ret
and
cli
repz
fist
ins
xor
clc
(bad)
push
push
scas
cmp
das
es
mov
leave
pop
fadd
stc
jno
mov
xchg
push
sbb
mov
cmps
mov
xchg
push
mov
jbe
xor
xchg
int
push
rcl
xor
jmp
add
fist
jmp
sbb
outs
push
loop
dec
ins
rcl
xchg
push
xor
sbb
pop
xchg
dec
ja
inc
dec
aas
sbb
jecxz
rcr
add
fistp
jnp
scas
mov
leave
pop
pop
das
mov
sbb
dec
retf
mov
lock
mov
push
jae
jae
sub
je
dec
je
and
sbb
cmc
pusha
mov
jo
cmc
xchg
jecxz
imul
movs
jg
sar
movs
dec
aaa
(bad)
ins
pop
add
jge
and
aas
sti
je
pop
outs
xor
dec
stc
clc
shr
mov
out
sar
in
add
daa
dec
push
xchg
jb
inc
ret
push
aam
aaa
adc
(bad)
mov
std
sbb
inc
add
inc
adc
test
mov
sahf
in
jl
pop
and
repnz
sbb
pop
mov
nop
scas
push
xchg
pop
mov
push
addr16
lds
loop
in
les
ss
pushf
in
jo
popf
jmp
pop
jae
xchg
sub
clc
xchg
jmp
push
mov
adc
ja
mov
sbb
stos
hlt
iret
mov
and
stc
push
and
sbb
dec
call
jne
pop
nop
pop
dec
and
xor
retf
jbe
sub
cld
add
(bad)
adc
or
popf
ds
cmp
cmp
data16
aaa
cmp
sbb
push
push
(bad)
xor
push
pop
adc
mov
xor
call
dec
cmp
push
push
mov
and
lods
inc
adc
mov
jo
mov
popf
imul
sub
add
mov
test
outs
push
inc
fst
dec
mov
out
pop
mov
ins
add
ja
cmp
jecxz
sub
sub
enter
push
mov
imul
stos
loope
cs
cmp
imul
jns
ret
add
cmc
int3
int3
test
cmps
xor
retf
push
out
les
mov
mov
test
fwait
popa
lock
cmps
push
in
pop
jb
and
inc
dec
cdq
in
cmps
loop
bound
js
pop
or
clc
loope
mov
xor
aam
adc
and
cmps
imul
icebp
call
dec
imul
daa
popf
shl
jle
clc
xchg
xchg
retf
and
ret
push
sqrtps
into
outs
jne
cmp
jns
pop
pop
cmc
loopne
icebp
xchg
adc
int
dec
mov
mov
mov
mov
(bad)
cdq
xchg
nop
and
test
or
xor
lahf
inc
sub
dec
or
frstor
mov
call
clc
ds
sbb
push
aaa
push
lock
sbb
push
or
arpl
push
dec
xlat
push
rcr
into
or
push
imul
call
shl
out
pop
or
lock
adc
sub
(bad)
push
rcr
inc
xor
icebp
push
mov
and
es
sar
mov
and
(bad)
cmc
stos
inc
aam
mov
adc
push
mov
jle
sbb
and
into
sbb
mov
jp
sub
test
fxch
cmc
adc
jecxz
mov
add
mov
mov
ss
mov
fisttp
mov
lock
out
es
repnz
jge
or
leave
jge
lods
ret
xchg
xchg
cmp
or
and
scas
pusha
xor
lahf
mov
inc
and
sbb
dec
xor
bound
int3
psubsw
xchg
lds
rcl
inc
jns
xor
sub
loope
sbb
fisub
add
push
pushf
xor
xor
dec
fnstenv
cmp
xchg
push
aas
loop
sbb
adc
and
adc
adc
cmp
les
imul
ret
xor
in
sub
sub
test
call
repz
add
add
scas
retf
jo
aas
push
jno
ja
mov
sub
dec
cdq
loope
xchg
sbb
lods
cdq
xchg
sub
push
sbb
xor
add
and
xor
or
cmps
lahf
sub
adc
cmc
cmp
test
bound
in
dec
(bad)
pusha
jg
xchg
(bad)
cld
push
lahf
(bad)
dec
adc
or
sbb
mov
das
test
inc
scas
lahf
ss
js
(bad)
idiv
jg
push
test
lods
and
cli
mov
jge
out
call
push
mov
fcomip
call
add
dec
mov
out
in
shr
sti
inc
or
shr
scas
(bad)
cmc
mov
sti
inc
xlat
push
fbstp
push
inc
dec
pop
into
cmp
add
fdiv
inc
mov
xor
adc
and
dec
sub
push
ds
fidivr
dec
test
sar
xchg
jle
push
sub
jns
std
xor
add
adc
cmc
xchg
sub
sar
xor
mov
ds
sbb
fsub
test
data16
es
test
mov
outs
rcl
or
iret
ins
dec
aam
adc
sub
mov
sti
pop
pop
ret
repnz
jne
mov
xor
leave
push
xlat
mov
or
dec
mov
vphsubwd
inc
pop
iret
fsubr
int
jnp
out
test
xchg
and
inc
in
call
mov
nop
adc
std
popf
aaa
xchg
push
out
dec
sbb
adc
cmp
lock
idiv
test
sbb
ins
test
xchg
in
retf
mov
icebp
int3
add
xor
jl
adc
mov
jns
xor
jb
or
jno
cmps
push
mov
mov
and
and
push
ja
mov
daa
inc
lods
or
outs
popa
inc
sub
call
jecxz
push
push
add
fsincos
dec
lds
ja
sbb
cli
jmp
rcl
xor
adc
in
cmp
or
inc
cmc
push
mov
cdq
adc
adc
nop
test
mov
mov
repnz
cpuid
(bad)
dec
sbb
loope
push
inc
sbb
adc
repz
inc
add
cli
out
ss
pop
push
mov
dec
into
ror
cmp
adc
(bad)
shr
push
(bad)
mov
imul
sub
jns
jge
or
fnsave
mov
cs
mov
jo
sahf
cmps
outs
adc
and
retf
paddsb
jae
push
mov
adc
inc
ror
cmp
ret
dec
sbb
pushf
stos
popa
mov
loop
or
dec
sahf
fwait
sbb
hlt
jl
inc
push
imul
loop
mov
ficomp
(bad)
lds
push
push
retf
jmp
pop
xor
mov
and
fidiv
inc
int3
aad
test
xor
push
je
shl
int
mov
lea
loope
mov
leave
sub
mov
xor
add
sub
gs
jg
pop
dec
push
or
push
xor
adc
dec
xchg
cli
mov
mov
dec
mov
shl
stc
xor
lea
repz
push
inc
jno
and
ror
jmp
sbb
push
xchg
jnp
test
jp
aam
pop
dec
nop
fisttp
adc
mov
pop
pop
add
les
popa
inc
outs
cmp
mov
clc
daa
and
add
jmp
aas
cmc
or
mov
inc
shr
outs
(bad)
aam
and
fwait
loop
pop
push
in
dec
pushf
sbb
cmps
sbb
cwde
jge
or
loop
mov
xchg
cli
adc
push
push
shl
mov
inc
call
push
xor
cli
mov
push
dec
cmp
sbb
ins
pushf
xchg
in
and
shl
adc
adc
cmpps
sar
out
stos
pop
jle
adc
or
lods
mov
out
cmp
icebp
pop
pop
ffree
shl
mov
(bad)
shr
add
mov
pusha
sub
adc
inc
xor
inc
stos
sbb
sbb
pop
pop
push
int3
mov
sbb
(bad)
sbb
mov
imul
imul
push
aaa
fcmovnu
fimul
push
pop
xchg
jecxz
inc
and
cwde
ins
lods
dec
add
or
cs
pop
xor
push
lds
xor
mov
or
inc
xor
sub
adc
adc
push
mov
aam
or
les
call
push
cmp
and
inc
outs
cmp
mov
xchg
fmul
mov
jge
mov
add
sub
jnp
pop
mov
xor
pop
fsub
data16
fs
(bad)
pushf
cmp
stc
jns
pop
adc
test
mov
sbb
cwde
inc
cmp
lds
icebp
sub
mov
outs
xchg
out
imul
out
pop
lods
je
fmulp
adc
js
pop
cmp
and
add
cmp
ficom
sub
push
or
dec
jbe
call
cmp
pushf
fwait
dec
idiv
mov
sahf
leave
sub
push
add
jmp
or
xor
outs
sub
les
and
xor
std
dec
xchg
or
imul
std
xchg
lahf
data16
pop
pop
jp
jmp
dec
shl
jp
out
sbb
shl
xor
repz
add
xchg
push
add
inc
pusha
and
or
sbb
mov
push
or
pop
xlat
ficom
mov
push
js
xchg
inc
dec
pop
out
movs
pop
mov
cmp
aad
mov
inc
inc
data16
push
add
sbb
pop
ss
jns
mov
push
test
jmp
call
xchg
and
iret
(bad)
fstp
rol
lahf
nop
mov
mov
and
cli
leave
and
ja
ja
sub
jg
add
xchg
popf
ss
jne
push
ins
je
(bad)
cmp
leave
enter
xchg
in
dec
jg
outs
(bad)
out
push
test
pusha
repnz
sbb
lock
mov
es
pop
mov
retf
jecxz
and
xchg
out
jle
jno
rcr
pop
popf
add
aas
dec
rcl
pushf
or
clc
cmp
xor
and
vmread
push
pop
aaa
sahf
retf
lds
mov
cmp
mov
mov
pop
pop
mov
xor
add
ret
xor
adc
shr
(bad)
jb
lea
inc
cmp
into
or
mov
jecxz
jmp
xor
push
fwait
inc
fnstenv
or
int3
ret
mov
xor
lea
mov
add
xchg
jle
(bad)
add
enter
or
lea
sti
mov
add
fnclex
jbe
mov
mov
dec
scas
xchg
arpl
pop
imul
jle
push
fld
push
fcmovb
and
mov
ret
test
cmp
sub
xchg
imul
add
rol
sub
cdq
push
add
sub
mov
imul
cdq
ja
fwait
mov
ret
lea
mov
xchg
cli
fld
fwait
outs
adc
or
(bad)
leave
pusha
fwait
ds
mov
into
or
test
pop
mov
add
xor
pop
and
in
test
push
cmp
dec
gs
pop
leave
mov
mov
push
sti
dec
shl
jno
(bad)
cmp
fcom
in
adc
nop
jns
sbb
movs
mov
arpl
pop
push
xor
push
pop
jne
dec
imul
hlt
sub
xchg
das
mov
adc
repz
fld
mov
and
je
jmp
fist
dec
xchg
mov
bswap
arpl
into
push
dec
add
jb
outs
aam
pop
test
mov
mov
test
and
push
inc
adc
mov
push
jg
test
aad
mov
or
and
js
jle
pusha
mov
dec
xchg
dec
inc
sub
sbb
(bad)
dec
lock
or
retf
(bad)
xor
push
pop
xchg
jle
jae
std
inc
jmp
mov
dec
push
jmp
movlps
dec
mov
jo
dec
mov
ror
aas
pop
adc
shl
loope
sbb
dec
inc
bound
mov
pusha
stc
in
lahf
addr16
out
scas
pop
jnp
mov
enter
mov
adc
fsubp
jno
sub
xor
adc
adc
or
scas
in
out
call
xor
in
inc
cmp
adc
add
iret
mov
mov
std
outs
adc
daa
sbb
sahf
or
xchg
ret
fld
fwait
repz
jp
retf
gs
pop
jge
add
loop
push
mov
loop
add
add
sar
pop
out
popa
rcl
mov
movs
inc
not
push
icebp
mov
fistp
add
adc
push
pop
imul
or
xor
jg
push
and
or
je
ret
xchg
dec
sub
(bad)
cmp
hlt
les
sub
push
ins
add
pushf
mov
pop
push
mov
push
in
cmps
adc
ror
sub
push
xchg
push
(bad)
aas
in
xor
rol
sbb
dec
outs
adc
ss
addr16
push
test
jno
cmp
loopne
scas
cs
cwde
pushf
and
sbb
pop
sub
das
mov
sub
pusha
lea
es
rol
dec
mov
inc
stos
je
test
into
inc
jecxz
jge
xchg
sbb
pusha
je
ins
bound
lods
jg
mov
out
in
push
mov
pop
cmp
xchg
cmc
in
jp
in
lea
push
inc
sbb
sbb
fist
and
push
les
lds
fnstsw
movs
out
ftst
fidivr
sar
jl
inc
adc
push
pop
mov
mov
cmps
mov
push
jb
in
lods
pop
ins
mov
inc
xor
leave
loopne
outs
fmul
mov
sub
scas
cmp
cs
cmp
push
les
mov
iret
push
js
push
cmp
or
jno
imul
sbb
dec
xchg
sub
adc
and
cmc
sub
xor
es
inc
arpl
lds
inc
sbb
push
sub
push
inc
bound
adc
pop
adc
fcomp
sub
sti
adc
mov
loope
push
fiadd
test
mov
pushf
popa
ja
and
ror
fdiv
xor
clc
rol
cld
mov
sub
mov
je
cmps
adc
fisub
mov
and
sbb
mov
sbb
inc
cdq
mov
mov
adc
lahf
jl
jno
mov
sub
les
or
mov
or
adc
push
xchg
rol
in
call
pop
aas
add
xchg
cmp
add
neg
mov
adc
pop
outs
pop
xor
leave
xor
std
xchg
in
mov
adc
loop
loop
(bad)
cld
data16
cmp
sbb
lock
popa
mov
frstor
aas
dec
loop
loop
jnp
and
pop
es
xor
sahf
arpl
repnz
ss
das
jo
or
(bad)
push
aad
data16
fmul
xor
jb
rol
sbb
push
in
inc
lds
xchg
sahf
jo
adc
jb
dec
pop
in
inc
gs
retf
jns
xlat
fucom
pusha
jmp
and
(bad)
cmp
push
inc
lods
vmovsldup
dec
aad
fcomp
mov
fiadd
jno
jbe
xor
add
ins
pop
aam
cld
lahf
scas
hlt
xor
or
mov
xchg
mov
std
push
mov
adc
xchg
(bad)
sub
test
xchg
jnp
rcl
adc
test
out
outs
xor
(bad)
pop
sub
lods
or
cmp
push
jp
push
shl
sub
jecxz
aam
pop
ret
sbb
jmp
clc
ret
pop
or
ror
dec
push
add
retf
loope
push
and
ins
inc
imul
std
push
inc
cmp
(bad)
leave
ins
je
xor
sbb
movs
popa
aam
mov
xchg
and
imul
adc
movs
add
cmp
hlt
imul
daa
lods
push
mov
dec
push
loopne
inc
sbb
stc
cmps
sub
xor
push
out
mov
and
and
lods
mov
outs
sub
dec
jo
mov
push
sti
outs
arpl
and
push
cmps
in
mov
mov
not
adc
sub
xchg
ror
ins
cli
fisttp
iret
imul
xchg
lahf
xor
js
pop
ret
pusha
clc
call
jecxz
cmps
int
loop
jb
sahf
es
movs
mul
clc
xlat
add
and
lds
mov
xor
test
xlat
fdiv
fs
jns
inc
sbb
jge
daa
jecxz
ror
add
sahf
out
repz
xchg
or
jne
mov
xor
cmp
push
lods
xlat
and
mov
xor
xchg
inc
cs
mov
xlat
xchg
(bad)
lahf
cmp
pop
in
sub
out
ret
sahf
xchg
aas
dec
ror
pop
add
sbb
xor
lahf
pop
push
in
pop
sub
and
push
cwde
dec
aad
nop
dec
int3
cwde
fild
xor
and
xchg
dec
(bad)
lea
sub
mov
mov
add
mov
sar
or
cmp
jmp
movs
add
mov
push
fnstcw
scas
ror
push
sub
xchg
inc
nop
pop
test
inc
jl
mov
push
test
jno
dec
sbb
popa
add
shl
stc
rcl
jne
pop
push
mov
int3
popf
ret
ret
gs
mov
or
push
ret
enter
add
xlat
xor
fsub
xor
es
ficom
rcr
ins
and
mov
clc
or
stos
es
mov
xchg
repnz
frndint
cmp
push
inc
xchg
and
add
inc
out
cmps
mov
arpl
and
mov
fdiv
fwait
xchg
dec
lds
cmp
cdq
in
adc
retf
xchg
xor
jle
popf
and
or
fdivp
jmp
mov
cmps
mov
xor
jbe
inc
mov
mov
mov
cmps
popf
cld
xchg
scas
scas
jmp
sbb
ja
adc
sahf
and
or
mov
ds
push
mov
add
mov
mov
push
jle
inc
lods
push
push
std
aaa
mov
push
sbb
mov
adc
mov
test
pop
outs
jb
rcr
scas
sub
ffreep
cmp
add
mov
cmps
push
out
stc
aaa
mov
push
je
call
pusha
sbb
repz
or
les
popa
call
jg
jp
in
jb
adc
pop
dec
sub
mov
daa
popa
movs
mov
push
or
iret
mov
aam
push
cmp
pusha
xchg
xchg
scas
cmc
jle
sti
rsm
test
into
mov
and
das
or
jecxz
add
(bad)
cmp
repnz
push
das
aas
aam
in
inc
popa
pop
push
fs
and
int
cmp
pop
mov
enter
adc
push
rol
icebp
jns
mov
cmp
mov
outs
xchg
fdiv
mov
mov
test
sbb
daa
dec
xchg
rol
mov
ss
sub
cwde
cdq
mov
sub
xor
cli
adc
cld
inc
(bad)
mov
jnp
mov
jne
hlt
sbb
jno
jp
sub
sti
inc
mov
aad
push
dec
bound
int
idiv
mov
imul
dec
and
jmp
sub
push
sub
add
outs
sub
or
xchg
sub
ja
adc
lods
test
sti
(bad)
aad
ins
aaa
(bad)
pop
imul
adc
ret
or
aam
jb
dec
call
lods
call
mov
enter
pushf
adc
popf
cmp
test
cmp
cld
test
leave
test
xor
in
cmp
adc
das
(bad)
sbb
push
lea
in
mov
add
and
xor
add
xor
jmp
fcmovu
adc
and
test
and
mul
or
mov
mov
iret
push
add
mov
inc
dec
cmc
cmp
int
xchg
dec
inc
inc
push
pop
aam
adc
adc
in
sub
add
add
cmp
idiv
jge
sub
adc
inc
aam
jno
dec
ds
mov
cmc
jne
jno
pop
dec
sbb
ins
mul
and
stos
mov
in
adc
(bad)
arpl
push
and
add
and
push
push
scas
add
xchg
ret
and
dec
fstp
sub
mov
add
nop
jecxz
jnp
(bad)
xor
popa
rcl
jecxz
ins
aad
scas
shr
sar
out
sar
pusha
add
sbb
jg
sub
cwde
jo
pop
enter
push
mov
pop
sub
pop
mov
bound
ja
jg
inc
jne
cmp
js
add
lea
jns
sub
mov
mov
shr
cmps
jp
lods
add
adc
adc
(bad)
scas
fmul
jge
inc
and
popa
sbb
retf
adc
ficomp
pop
retf
xchg
mov
add
popa
test
(bad)
scas
imul
push
movhps
xor
add
or
call
iret
pop
retf
add
mul
inc
int3
jne
iret
sbb
or
xchg
cmp
mov
jp
loope
icebp
ins
call
adc
in
and
cmp
mov
loop
mov
xor
cld
cmp
fcmovb
inc
(bad)
in
dec
mov
mov
pop
repz
adc
neg
call
(bad)
and
mov
les
sbb
xchg
(bad)
loopne
aaa
(bad)
fcomp
dec
movq
add
sbb
adc
test
movs
ja
fcmove
hlt
push
stc
pop
dec
nop
pop
sbb
sbb
and
std
mov
jne
dec
test
xchg
sub
cmp
aam
xchg
jae
jmp
sbb
push
aas
ret
cmp
fdivr
shl
data16
das
imul
ja
pop
add
(bad)
and
nop
retf
or
lahf
aad
inc
add
(bad)
xor
or
fsub
mov
inc
fnstenv
sti
stc
fwait
(bad)
jg
cwde
clc
retf
pop
daa
out
es
inc
stc
stos
xchg
push
mov
outs
ins
nop
jns
fcom
lds
ss
aaa
xchg
popa
ret
or
test
inc
ret
jl
dec
hlt
arpl
cmp
xor
jae
test
sbb
jg
jg
out
xor
xchg
push
cmps
(bad)
fld
pusha
cld
add
mov
sub
adc
cmp
mov
ret
test
xchg
adc
in
mov
(bad)
cmc
ret
and
mov
mov
(bad)
jmp
sub
(bad)
iret
fcomp
mov
call
pushf
sahf
ss
add
mov
inc
fwait
mov
call
adc
mov
sub
and
mov
mov
cld
int3
and
mov
cli
jno
sub
jae
inc
test
adc
iret
sub
call
pop
imul
imul
sub
xor
mov
sub
imul
or
cmp
or
mov
inc
mov
adc
pop
outs
jl
push
call
pop
adc
rcr
test
cmps
or
push
cmp
mov
push
mov
sub
cmp
pusha
and
cs
stos
mov
ja
sbb
xchg
call
mov
pop
inc
int3
les
adc
xor
stos
cld
movs
mov
cmps
int
pop
test
jnp
sub
test
xor
and
push
cmp
mov
add
repz
imul
jno
shr
fwait
jmp
jp
adc
mov
mov
enter
leave
out
pop
(bad)
jb
xor
mov
cli
adc
xor
call
xor
loope
pop
pushaw
jmp
xchg
push
inc
retf
iret
jno
mov
adc
xor
or
std
xchg
es
push
xor
push
loope
add
sbb
scas
sbb
pop
cs
xor
in
jns
sub
and
pop
pop
stos
or
imul
inc
stc
mov
sub
retf
(bad)
leave
and
mov
neg
sub
int3
retf
ins
pop
ret
lods
pop
sub
jae
adc
xchg
pop
push
cmp
jmp
ins
mov
ins
and
jns
xchg
dec
movzx
dec
pusha
stc
scas
cwde
test
lock
jp
sti
mov
cmps
xor
push
lea
(bad)
fimul
pop
ins
(bad)
neg
sbb
mov
mov
movs
cmp
inc
mov
movs
inc
mov
cmp
jmp
inc
adc
fsub
(bad)
lock
repnz
adc
stos
ins
mov
add
mov
push
cli
out
std
ds
pop
movs
push
call
jg
xchg
ret
and
push
mov
ret
lahf
mov
sub
js
stos
fcmovnb
cmps
push
fld
push
imul
dec
jp
leave
cmps
jo
inc
inc
into
and
xchg
loop
cmp
push
jp
sbb
les
push
xor
sbb
mov
jmp
out
xchg
fucomip
pop
call
daa
dec
cld
fs
xor
mov
cmp
or
sub
ret
xchg
add
dec
jecxz
jge
mov
add
push
retf
ds
cli
mov
jae
shl
pop
mov
std
repz
(bad)
pop
imul
dec
cdq
jge
cld
adc
outs
pop
inc
xchg
cmps
push
ins
int3
hlt
lahf
xchg
repnz
mov
(bad)
jns
xor
add
std
(bad)
fidivr
stos
sahf
repz
mov
sub
call
xor
call
cli
int3
adc
pop
leave
sbb
sub
fsub
hlt
int
sbb
std
stos
jb
xor
inc
sbb
retf
pop
fisub
add
mov
jne
lods
(bad)
xor
inc
or
stc
movs
clc
ins
out
loope
clc
hlt
pop
jo
mov
movs
(bad)
fld
mov
je
mov
pop
loopne
ins
add
ucomiss
mov
dec
ja
leave
dec
or
inc
int3
sub
out
jne
xor
mov
adc
imul
aad
jo
push
(bad)
call
jbe
stc
ja
xor
loop
mov
xlat
jno
dec
jb
add
call
lods
cmp
ret
sbb
mov
push
pop
into
aaa
scas
jmp
lahf
jae
ror
cs
add
mov
arpl
call
pop
sub
or
cmp
jno
mov
out
mov
test
mov
popa
aad
jl
or
and
jns
ja
add
jae
(bad)
call
lahf
je
fidiv
mov
(bad)
push
cmc
mov
pop
sub
lods
ret
push
jo
shl
mov
adc
cli
jmp
add
add
pop
mov
pop
xor
shl
pop
shl
add
mov
repz
pop
leave
add
cmp
and
in
mov
mov
out
fist
lock
mov
xchg
fcom
add
mov
and
stc
neg
iret
and
movs
(bad)
in
loope
push
loope
mov
dec
add
mov
dec
ret
mov
cmc
call
push
(bad)
es
pusha
inc
rcl
push
(bad)
and
pop
stos
je
mov
pushf
jle
xchg
call
sub
fcomi
out
out
jge
sub
inc
mov
xor
push
cmc
jo
push
xchg
push
jb
sbb
pop
lahf
inc
pop
pusha
mov
(bad)
and
add
ds
adc
aad
movs
add
push
pop
push
js
repnz
vcvtss2sd
jno
push
retf
add
and
mov
dec
jbe
sbb
inc
inc
popf
pusha
and
retf
bound
cmp
leave
iret
mov
jecxz
cmp
cmp
cmc
mov
ins
shl
div
fild
iret
cdq
xchg
jmp
jle
xor
and
es
loopne
test
sbb
jae
ja
ja
icebp
sub
movs
cmp
or
mov
loopne
fstp
test
(bad)
or
movs
dec
xor
push
enter
jmp
dec
pop
das
shl
out
sub
push
xlat
pop
cmps
pop
(bad)
sub
imul
xchg
cmps
adc
in
jge
enter
call
iret
enter
and
xchg
adc
bound
mov
fst
bound
xor
fstp
ret
jmp
and
loop
std
jae
rol
sbb
push
js
jnp
sbb
test
dec
sbb
fisubr
adc
add
pop
cmp
cwde
scas
jae
push
mov
aad
cli
(bad)
jl
jns
ffreep
mov
jmp
lods
in
dec
movs
xor
shl
(bad)
xchg
cmc
pusha
cmp
fwait
repz
sub
popa
or
xor
cmp
add
add
bsr
sub
pop
push
out
stc
ret
aam
xchg
les
or
xchg
dec
cmc
mov
es
jmp
das
jmp
jbe
movs
ins
mov
loopne
(bad)
test
adc
or
mov
or
outs
push
mov
adc
loope
cmp
stos
or
push
add
cs
inc
test
jns
sub
push
or
pop
jecxz
jge
mov
es
mov
repz
loope
adc
fsubr
iret
mov
inc
in
retf
js
push
xor
repnz
nop
mov
fisttp
shl
xor
cmp
push
mov
jg
xor
sbb
cmp
mov
mov
fnsave
xchg
out
add
jae
call
popa
pop
in
aaa
gs
cmps
push
xchg
xor
xchg
movs
mov
cmp
sbb
fcmovnb
popa
imul
das
or
mov
or
je
push
dec
jnp
sbb
(bad)
ins
bound
rcr
repnz
adc
xchg
inc
mov
pop
jae
sbb
inc
(bad)
xor
imul
fiadd
dec
bound
or
pop
xor
daa
rcr
cmp
hlt
add
xor
lock
lea
jge
inc
xor
mov
lahf
addr16
mov
sbb
add
xor
mov
iret
cwde
jae
push
imul
push
out
jae
and
imul
fisub
sub
inc
xchg
jg
lahf
jbe
and
loop
cld
fstp
xlat
pop
xor
jge
jecxz
xor
xchg
out
jecxz
sub
bound
rol
les
dec
sbb
cmp
mov
(bad)
enter
mov
cmp
adc
and
ret
clc
in
out
jl
(bad)
repnz
mov
aas
jle
jl
shl
sub
mov
lea
dec
sub
adc
retf
ret
adc
addr16
mov
(bad)
call
push
(bad)
loopne
lods
adc
jle
retf
icebp
inc
in
and
xor
fstp
js
jo
in
inc
rcr
int
and
into
fcom
es
leave
mov
xchg
int3
jle
int3
int3
xor
pusha
dec
loopne
repnz
xchg
out
inc
xor
test
and
mov
jne
rol
jne
pop
mov
xor
jmp
pop
mov
scas
pop
pop
sub
jecxz
push
stos
jo
fmul
xchg
sub
sahf
enter
add
push
pop
cmp
sub
movntps
rcr
pop
iret
mov
(bad)
xlat
dec
xchg
test
shl
shl
fiadd
nop
add
aas
out
loopne
jns
cmp
mov
xor
push
mov
ja
add
cmp
sbb
push
sub
inc
or
mov
int
retf
daa
mov
and
pusha
retf
xchg
retf
aam
retf
mov
test
mov
outs
dec
mov
fldenv
push
inc
mov
adc
out
mov
mov
(bad)
aas
clc
movs
push
into
pop
xchg
and
sbb
push
sbb
and
sbb
je
enter
loopne
xlat
iret
jae
rcr
push
xor
mov
sbb
inc
mov
push
jno
outs
cmp
aas
mov
lds
(bad)
cdq
sub
push
popf
stc
(bad)
cmp
iret
and
mov
(bad)
pop
cli
pop
mul
sahf
cwde
xor
(bad)
push
hlt
jae
stos
push
fdivr
sub
mov
cmps
mov
inc
mov
cmp
inc
mov
fwait
in
cmp
push
sbb
cs
xlat
fwait
sub
leave
inc
add
call
mov
inc
jmp
and
call
xor
xchg
cmp
inc
mov
test
jbe
mov
arpl
fist
dec
stc
imul
mov
shl
jl
xchg
aam
outs
push
mov
aad
(bad)
fxch
pop
ret
test
cmp
into
mov
dec
popf
jl
mov
jnp
xor
aaa
xchg
retf
add
or
adc
(bad)
sbb
das
pusha
xor
adc
dec
xor
pop
rcr
cmp
dec
mov
retf
sbb
cdq
mov
sub
pop
xchg
sbb
add
shl
inc
int3
cmps
and
push
cmp
cmp
in
mov
ret
dec
xchg
pop
push
mov
dec
cmp
sahf
adc
or
je
test
mov
iret
mov
inc
jp
cmps
sbb
pop
outs
xor
js
cld
push
in
mov
sbb
stc
cmp
and
mov
inc
xchg
jmp
cld
mov
hlt
jns
lahf
int3
push
xor
(bad)
aad
pop
push
add
lds
jbe
call
dec
repnz
push
loopne
(bad)
repz
call
cmp
xchg
adc
inc
in
sub
xchg
pop
ja
jge
cmps
aad
rol
in
inc
hlt
mov
bound
pop
xchg
xor
and
test
cdq
add
add
sub
dec
ins
idiv
movs
pop
imul
inc
jl
dec
mov
cmp
int3
test
loope
das
movs
mov
loope
push
pop
pop
push
push
and
xchg
sub
stc
push
(bad)
sbb
ret
cld
repz
mov
in
inc
mov
xchg
pushf
popf
sub
cmps
sbb
repnz
and
sub
jns
sbb
add
cmc
mov
aaa
aas
lahf
add
jae
lods
jmp
inc
popa
sbb
pop
adc
iret
mov
sub
popa
mov
icebp
sbb
neg
ins
(bad)
push
movs
pop
cmps
push
inc
in
ret
push
mov
pushf
fcmovnu
fnstcw
pusha
dec
pop
xor
cmp
xchg
push
shr
mov
popf
outs
jg
xor
inc
ja
push
jno
xor
and
sbb
lahf
xchg
cwde
jle
loopne
mov
xor
add
ds
ds
loope
inc
(bad)
fxam
adc
out
ret
(bad)
xor
out
mov
jno
cdq
retf
cmp
and
stc
pop
sub
dec
pop
data16
mov
outs
retf
pop
popf
xor
test
and
retf
jecxz
bound
jecxz
mov
bound
mov
js
out
dec
repnz
push
icebp
xor
or
cmps
(bad)
rcr
xchg
or
inc
outs
mov
loope
jg
push
in
or
pop
fst
and
inc
aam
jae
fisttp
mov
mov
fist
dec
and
jle
and
dec
pop
cmp
xor
adc
mov
call
gs
in
cmp
in
inc
xchg
push
jg
stos
sbb
lds
mov
int
rcr
gs
adc
jle
fiadd
ror
push
push
fcomp
cmp
mov
sahf
aaa
arpl
idiv
adc
rcl
pop
(bad)
or
outs
sbb
ins
icebp
(bad)
pop
lods
inc
gs
pop
imul
jmp
std
cli
or
xchg
push
ins
lahf
mov
adc
mov
in
js
stos
cmp
xchg
sub
jae
jmp
mov
xchg
jge
and
lds
js
jne
jecxz
mov
lods
retf
rol
add
xlat
movs
jnp
inc
push
pop
dec
pop
imul
sti
push
xchg
popf
and
sub
push
sub
inc
(bad)
in
jae
out
and
mov
cld
arpl
jb
push
xchg
rol
mov
dec
inc
in
jmp
pop
call
push
std
or
push
push
not
mov
cwde
movs
pop
jmp
movs
mov
push
out
pop
in
pop
sub
push
mov
and
test
popf
dec
sub
or
into
adc
jbe
push
mov
(bad)
jle
xor
fst
rcr
or
cdq
in
out
mov
jae
ss
add
add
cmp
inc
hlt
ror
out
nop
pop
adc
cdq
dec
loope
jbe
add
fimul
in
lods
leave
jns
or
jb
push
sub
cmp
mov
jecxz
lds
outs
xchg
pop
nop
sbb
mov
cmc
les
scas
pop
in
fbld
imul
jno
lds
fild
fbld
fwait
push
jg
cmp
dec
outs
ins
int
cmp
jae
jnp
dec
and
inc
add
jle
adc
dec
stc
shl
shl
je
sub
arpl
(bad)
sub
adc
lods
jge
xor
shl
shl
xor
stos
ds
xchg
in
loope
imul
ja
fisttp
xlat
arpl
inc
or
enter
xchg
loop
scas
jg
popa
dec
mov
dec
xchg
lods
mov
pop
int3
push
enter
xchg
mov
(bad)
(bad)
clc
inc
mov
out
jno
jno
cld
neg
xchg
aas
jmp
loope
push
loope
xchg
shl
adc
movs
adc
mov
and
call
stc
push
add
push
xchg
push
rcl
sbb
push
ins
push
and
ins
not
iret
lods
xor
stos
dec
or
jb
dec
xchg
rol
jnp
ins
(bad)
xchg
retf
stos
push
push
pop
or
ret
into
pop
jae
xchg
mov
leave
or
add
jo
xlat
cld
push
ss
push
nop
or
adc
in
jmp
cmp
pop
sub
arpl
pusha
and
inc
fstp
mov
aam
leave
(bad)
(bad)
ins
sbb
dec
stos
shl
fldcw
adc
jl
mul
daa
mul
in
sbb
push
data16
lods
ret
in
cdq
mov
fstp
inc
and
pop
fstp
frstor
out
sub
imul
xchg
jnp
ret
pop
jp
movs
in
add
mov
gs
add
jbe
mov
pop
shr
lods
inc
pop
sti
retf
dec
cmps
pushf
movs
cmp
mov
xchg
fwait
mov
mov
or
shl
jecxz
jle
bound
mov
xor
jge
stos
js
dec
cwde
xchg
mov
and
in
inc
hlt
add
ins
xchg
pop
call
push
xchg
dec
cs
sahf
add
adc
xchg
cmp
std
lods
mov
xor
mov
mov
pop
mov
dec
out
dec
dec
test
ins
out
jae
mov
add
inc
xor
cmp
sti
cmps
in
pop
lds
mov
ins
mov
cmp
std
mov
dec
mov
mov
adc
cmp
cdq
int3
cmp
aad
(bad)
mov
arpl
or
jmp
xchg
push
jle
xor
mov
jl
test
jle
push
inc
ret
inc
pop
jno
fild
and
(bad)
loopne
mov
in
loopne
test
data16
ins
pop
inc
mov
or
pop
push
aaa
mov
cli
addr16
pusha
retf
inc
hlt
adc
pop
jne
ds
sbb
imul
dec
add
cli
pop
in
test
dec
bound
pop
shl
iret
out
sahf
ficomp
push
push
and
sub
mov
jp
std
ret
mov
shl
sub
fwait
and
jbe
ret
xor
test
mov
shr
push
dec
xchg
out
dec
sub
jg
shr
mov
push
xor
and
jbe
int
jbe
mov
cmp
call
je
and
mov
shl
cmc
or
pop
sbb
jge
inc
mov
mov
int3
test
xchg
xlat
pop
jo
push
pop
js
enter
nop
push
jecxz
fcom
mov
call
fcomp
popf
mov
push
fmul
sub
inc
fst
add
fs
test
xchg
imul
mov
nop
sub
clc
out
mov
scas
sbb
out
repz
mov
outs
push
sbb
(bad)
jmp
xlat
aam
lea
fwait
push
(bad)
lahf
xchg
mov
dec
punpcklbw
inc
jnp
mov
jo
jae
mov
add
inc
popf
or
fucom
(bad)
inc
xor
stos
out
loop
pop
stos
jg
jo
shl
xchg
inc
test
pushf
inc
pop
in
add
cmc
cdq
aas
scas
sbb
mov
in
(bad)
test
bnd
fucomi
xchg
mov
out
mov
xchg
mov
(bad)
hlt
adc
jo
fcmovb
lahf
ret
cmc
sbb
in
ds
fist
(bad)
das
mov
std
or
rcl
retf
(bad)
jnp
add
icebp
div
gs
and
mov
stos
add
jne
cmp
xchg
and
push
(bad)
xor
dec
jne
(bad)
lea
or
and
mov
dec
out
push
or
popa
sub
mov
cmp
call
dec
add
call
mov
push
push
or
and
mov
or
cwde
dec
pop
and
mov
inc
aam
push
cwde
out
sbb
mov
fdivr
enter
std
inc
pushf
ja
inc
mov
push
jno
sub
inc
adc
shl
retf
fld
mov
(bad)
scas
sub
xchg
(bad)
es
out
(bad)
into
(bad)
adc
lea
add
les
out
jbe
jmp
test
pop
out
addr16
cmp
dec
(bad)
push
lds
jmp
rcr
sbb
outs
(bad)
(bad)
imul
ja
(bad)
loop
ss
xor
inc
fldcw
stc
adc
and
out
mov
dec
pop
jnp
push
(bad)
jl
sbb
shl
ins
leave
dec
jo
sub
lahf
mov
(bad)
shr
out
dec
sub
mov
les
scas
ds
adc
inc
and
popf
movq
fs
stos
lock
iret
jle
sub
ja
dec
fidiv
inc
add
lods
pop
sahf
sub
sbb
inc
dec
adc
jo
push
leave
in
call
mov
lahf
sub
push
dec
or
les
bound
add
mov
and
xor
mov
adc
push
inc
dec
mov
dec
push
mov
call
xchg
push
lea
ins
pop
jmp
aam
pop
mov
(bad)
(bad)
frstor
jl
sahf
fisubr
leave
push
xchg
push
cli
mov
mov
inc
lahf
dec
adc
push
inc
jns
int3
pop
or
jg
out
fsub
iret
and
mov
ins
jne
neg
jmp
rol
ds
mov
ins
adc
dec
jmp
out
mov
ins
(bad)
push
inc
sbb
pmaxsw
ret
or
fistp
push
sahf
in
outs
pop
jae
sub
arpl
mov
fucomip
mov
dec
inc
lods
adc
sub
cs
adc
pause
lds
or
fild
pusha
aaa
and
sub
jae
aas
adc
mov
pop
cmps
add
fld
sar
pop
in
jmp
(bad)
aas
mov
in
add
lahf
adc
or
test
add
inc
mov
push
leave
push
mov
imul
pushf
in
push
data16
sub
sbb
xchg
inc
(bad)
push
es
jl
sub
mov
push
fdivr
data16
jl
aam
ret
sub
retf
fsubr
repnz
push
test
pop
pop
push
add
jmp
xor
fsubrp
sar
outs
into
dec
sub
mov
jmp
jne
out
adc
or
iret
and
addr16
dec
jl
mov
clc
fwait
push
xchg
(bad)
adc
xlat
sti
dec
sub
aam
xor
fdivr
and
add
inc
cmp
add
js
clc
xchg
xor
and
imul
fist
leave
inc
out
adc
sbb
sbb
cmps
push
aaa
push
mov
pop
fsubr
jae
mov
jg
stos
popa
aaa
lods
ss
push
jle
sub
dec
in
mov
inc
or
push
inc
std
aam
xchg
in
ds
div
lods
outs
gs
faddp
push
mov
add
nop
stos
sub
dec
ja
pusha
dec
shl
sub
adc
call
outs
dec
cmps
sahf
rcr
xor
jp
inc
cwde
cs
and
jae
retf
es
lods
fmul
sahf
add
cmps
ror
not
jne
mov
and
push
dec
mov
(bad)
mov
retf
xor
fsubr
leave
jge
(bad)
scas
idiv
dec
cmp
(bad)
sar
and
fild
and
sub
adc
daa
inc
and
cmps
push
xor
mov
(bad)
(bad)
aas
mov
ss
cmp
sbb
cld
sub
in
out
adc
adc
call
test
stos
and
sahf
stos
xor
xchg
inc
pop
or
sub
popa
ss
sbb
pop
iret
inc
repnz
leave
or
mov
jg
and
dec
out
fs
and
xor
popf
not
jno
cmp
lock
sbb
push
imul
shr
and
repnz
in
add
inc
fbstp
mov
jle
popa
mov
jge
mov
mov
jmp
adc
stos
ret
ss
inc
push
jnp
fwait
lock
cmp
xor
jg
daa
int
cli
es
ja
jb
add
fsubrp
shl
jnp
mov
stos
jg
mov
sub
xor
inc
cmps
pop
xor
les
add
lock
ror
mov
loopne
in
xor
out
xchg
test
out
xchg
int
pop
int3
test
adc
nop
in
fisub
into
sub
xchg
sub
cmps
inc
jg
div
or
add
addr16
push
mov
ret
mov
jp
inc
call
mov
xchg
add
sub
add
or
repnz
mov
mov
lods
js
jl
push
adc
int
mov
retf
dec
sti
xchg
lods
lea
lock
push
dec
adc
push
call
sub
jb
div
movs
jecxz
cmps
dec
push
push
adc
push
and
xchg
dec
xchg
sbb
inc
cwde
jmp
push
push
push
sbb
pop
sub
aam
mov
inc
push
lock
and
ss
mov
cld
ins
stos
and
add
xor
cmp
dec
pop
pop
addr16
xchg
adc
jmp
fucomip
xchg
repz
ds
popf
cwde
cmp
sbb
(bad)
inc
pop
pop
and
jo
jmp
in
or
fdivr
adc
inc
sahf
mov
lods
in
add
jb
add
adc
inc
push
xchg
rcl
jb
lock
mov
dec
ss
cmp
cmp
hlt
outs
std
pop
fadd
pop
jg
fadd
jle
dec
push
or
jne
push
or
ret
test
jno
xchg
test
cmp
in
dec
xor
and
pop
div
lock
pusha
push
mov
mov
sbb
xor
stc
cwde
sub
sahf
add
fsubr
jbe
cmc
cmp
arpl
shl
pop
jmp
ins
and
push
and
daa
out
movs
call
mov
sub
cmp
(bad)
in
hlt
(bad)
repz
loope
sahf
push
es
cli
call
push
add
cmps
sbb
test
and
test
test
icebp
mov
inc
mov
dec
xchg
sub
sub
jecxz
jge
pop
stos
cmc
mov
retf
add
enter
mov
cmp
loopne
adc
pushf
(bad)
repz
and
dec
popf
aad
xchg
aaa
push
in
jmp
push
(bad)
inc
jno
pop
pop
mov
ja
in
out
push
jo
fldcw
fsubrp
pop
or
(bad)
gs
fmul
cwde
popf
mov
mov
xchg
arpl
ret
fst
pop
movs
or
in
xor
mov
aam
and
into
imul
cmc
jno
dec
das
push
icebp
pop
adc
cld
(bad)
xor
xchg
xor
and
int3
int3
mov
(bad)
push
push
push
jp
dec
mov
jg
inc
push
cmp
sub
adc
xlat
push
cwde
hlt
xor
hlt
lods
mov
jnp
in
mov
shl
loope
cwde
push
push
mov
inc
mov
xchg
sbb
adc
inc
mov
hlt
imul
cmp
dec
pop
mov
and
xchg
mov
add
stos
sbb
retf
nop
mov
ret
mov
mov
mov
xlat
icebp
nop
cmp
xchg
dec
adc
int3
xor
inc
test
int3
dec
jns
xor
push
pop
fucom
or
and
push
bound
dec
(bad)
jge
sbb
inc
xor
shl
call
stc
call
ins
in
push
sbb
jle
sar
call
dec
inc
jl
outs
sbb
daa
ds
arpl
mov
mov
jl
jbe
mov
xchg
outs
pop
outs
xchg
mov
not
push
pop
add
jmp
push
jmp
(bad)
rol
sbb
add
mov
dec
jno
into
push
pushf
fisttp
sbb
jne
jmp
and
out
mov
dec
fistp
jb
add
icebp
pop
imul
xor
or
mul
dec
nop
aas
shl
loop
pop
xchg
mul
ja
das
je
rol
jle
jl
mov
fs
icebp
dec
adc
sbb
inc
adc
sub
in
out
and
mov
cmp
outs
and
fmul
pop
or
inc
int3
lods
cmp
lahf
std
pop
inc
in
movs
dec
jmp
mov
cmps
retf
sbb
ret
ret
inc
dec
add
xchg
cld
xchg
xchg
jo
add
loopne
adc
sti
jg
ret
pop
rol
lods
fs
lea
(bad)
sbb
idiv
sub
mov
aam
pop
and
adc
push
inc
add
sub
jg
mov
push
(bad)
and
clc
in
mov
cmp
dec
sar
aas
dec
mov
push
dec
pop
adc
mov
or
dec
rol
add
aam
stos
fdiv
les
cdq
fwait
add
inc
ins
sbb
push
adc
adc
mov
mov
out
jl
mov
adc
(bad)
fs
test
outs
lods
push
into
pinsrw
outs
dec
xchg
fcmovnu
jmp
mov
mov
jl
imul
and
jle
cmp
xlat
push
test
cmc
jno
sub
adc
rol
(bad)
cdq
pop
or
je
sti
dec
xor
pop
bound
inc
jno
pop
push
sbb
lods
stos
sar
mov
pop
sbb
icebp
out
jg
mov
fwait
std
icebp
stos
popa
popf
mov
mov
das
cmp
jae
cli
mov
cli
aaa
mov
int3
and
movs
mov
fdivp
dec
pop
out
(bad)
test
mov
and
mov
dec
adc
es
push
sbb
je
sub
repz
mov
loopne
push
call
test
add
les
jmp
xchg
das
(bad)
rol
inc
dec
rcl
cmp
loop
lods
xchg
aad
pop
call
sub
sbb
mov
pop
outs
cdq
inc
cwde
inc
int3
jb
ja
dec
add
jno
push
pop
and
pop
xor
dec
pop
mov
sbb
outs
inc
aaa
jl
dec
adc
test
xchg
xchg
ret
add
das
and
dec
stc
rcr
ja
fistp
in
sbb
dec
jae
fimul
fwait
repz
mov
jmp
jbe
fld
dec
pusha
lods
push
fs
xchg
outs
add
cmp
fwait
sbb
hlt
in
imul
fwait
(bad)
stc
gs
mov
cli
out
int
mov
sub
leave
add
xchg
mov
jl
jae
test
outs
loopne
ins
hlt
dec
cmp
scas
outs
adc
fucomi
jb
cpuid
push
shl
mov
push
test
std
xchg
ds
add
aaa
pop
pop
cmp
xlat
sar
jp
jecxz
je
test
pop
push
mov
test
cmp
jle
cmp
cmps
cld
mov
mov
xor
xchg
jle
or
pop
sbb
mov
dec
sbb
mov
cmp
sbb
pop
xor
ret
push
icebp
mov
sub
cli
mov
or
stos
ja
(bad)
das
std
inc
jne
dec
xor
sbb
cmps
xor
and
adc
addr16
std
mov
fs
mov
push
fimul
xchg
mov
sub
adc
adc
mov
inc
arpl
mov
fcmove
sahf
mov
and
xor
movs
(bad)
push
imul
cmp
rcr
cmp
mov
and
sub
xchg
out
push
inc
lock
xchg
or
stc
pop
dec
call
mov
jae
(bad)
jo
and
cmp
int
cli
add
jle
and
and
jns
add
jae
gs
lods
sbb
cmp
dec
ds
pop
in
movs
ret
enter
adc
dec
data16
into
(bad)
or
test
add
dec
add
cmp
lods
xor
test
aad
add
inc
pop
and
fsin
push
dec
fsubr
or
pop
fcmovbe
push
jge
aam
push
xchg
mov
popf
mov
push
add
aaa
fwait
push
adc
out
adc
push
out
sub
mov
arpl
push
sub
sti
inc
loope
push
xor
xor
stc
inc
fist
retf
(bad)
fsubr
push
int
xchg
bound
xchg
xchg
sbb
test
stc
loope
addr16
add
sub
std
xor
aad
daa
sub
mov
fwait
inc
js
int3
loop
push
ja
cmp
and
jns
cmps
mov
cmps
ret
adc
jmp
jg
adc
push
mov
fidivr
rcl
(bad)
addr16
daa
inc
jne
cmps
int
or
add
pop
jne
call
popf
jle
stos
retf
mov
std
cld
(bad)
jbe
adc
mov
sub
shl
nop
push
jns
dec
cli
pandn
js
mov
fwait
adc
aas
mov
adc
cmps
or
ds
and
(bad)
mov
add
and
lea
and
mov
iret
inc
rol
call
xchg
loope
mov
mov
in
and
jb
std
dec
shl
pop
xor
out
test
in
jno
jmp
imul
mov
push
pop
in
test
sahf
bnd
(bad)
pop
test
outs
dec
ret
pop
sub
and
push
fsubr
inc
pop
inc
shl
jp
(bad)
inc
cmc
and
dec
out
lods
repnz
out
xchg
jns
in
cli
enter
dec
hlt
mov
aad
jns
sahf
mov
mov
sub
not
pop
mov
push
xor
push
jo
xchg
test
xchg
jp
out
push
cmp
shr
mov
shl
fmul
sub
mov
sub
mov
stos
enter
sar
cmps
fisttp
push
xchg
mov
sub
jno
es
mov
fs
ss
adc
dec
daa
sub
adc
or
(bad)
or
xchg
or
cmp
cmc
sub
xchg
xlat
retf
jl
jb
mov
rcl
ins
and
pop
dec
jns
jo
xchg
popf
cmp
das
repz
add
call
es
popa
neg
loopne
into
(bad)
pop
or
loope
lock
mov
mov
adc
les
jmp
leave
(bad)
(bad)
jnp
mov
in
adc
call
out
or
fisub
and
je
xchg
sub
inc
mov
push
inc
sbb
test
les
test
fwait
outs
loope
inc
ret
js
lea
out
add
lea
stos
sbb
dec
push
leave
stc
or
sbb
scas
mov
mov
mov
and
loop
dec
inc
loope
mov
fisubr
dec
in
mov
dec
pop
mov
adc
gs
sbb
pop
lahf
imul
push
add
pop
jno
(bad)
fcmovnbe
gs
push
mov
jmp
fmulp
ins
mov
loop
pop
mov
jnp
dec
out
xor
movs
cdq
(bad)
int3
das
ret
mov
mov
dec
jbe
repz
and
dec
xchg
je
adc
repz
pop
push
pop
cmp
mov
or
fmul
pop
xor
(bad)
clc
lods
int3
dec
jl
push
gs
xor
or
xchg
sub
movs
ds
mov
out
xchg
add
retf
mov
or
cwde
fadd
mov
fstp
add
inc
int
test
mov
mov
ja
push
xlat
mov
mov
mov
in
jp
adc
mov
popa
jnp
add
je
out
sbb
pop
jns
popa
cdq
dec
fwait
(bad)
loope
jp
mov
mov
mov
test
in
add
inc
sbb
or
xor
xor
and
add
sbb
rcr
movs
stos
pop
or
cld
in
scas
cmc
dec
ins
xlat
in
inc
pop
pop
jmp
(bad)
dec
inc
cli
test
xor
imul
jmp
ret
cdq
add
and
les
mov
jbe
test
rcl
jb
sbb
mov
cwde
mov
push
sub
fbstp
movs
aaa
mov
pusha
mov
xchg
and
retf
jb
adc
mov
movs
test
mov
push
push
xchg
fistp
lods
push
test
(bad)
enter
or
and
cmp
and
movs
push
cmp
add
popf
retf
cmp
add
pop
cs
lds
(bad)
inc
xor
xchg
shr
inc
cmps
outs
jp
enter
ds
sbb
adc
shl
mov
test
push
pop
mov
mov
push
jp
retf
or
fcom
mov
nop
sbb
sbb
rol
and
jmp
call
and
loope
pop
stos
cmps
push
mov
xor
sub
fwait
add
push
push
and
lods
dec
fisttp
or
ins
aad
mov
mov
sub
jnp
out
dec
mov
call
dec
lock
das
mov
ins
mov
lods
pop
loope
inc
jle
mov
sar
clc
push
inc
sub
loopne
jg
addr16
in
stos
scas
ins
je
ret
and
mov
sub
js
repz
jle
mov
jmp
mov
nop
xchg
or
xor
cmp
leave
or
(bad)
and
je
push
mov
push
shufps
popf
xchg
bound
push
jbe
inc
xchg
(bad)
xchg
mov
cmp
ss
pop
dec
push
and
mov
xchg
jns
cmp
cmp
mov
or
test
and
jl
jmp
push
sbb
jmp
pop
lds
jge
pop
inc
adc
mov
test
pop
xchg
rcl
fwait
push
xchg
sbb
call
mov
pop
sbb
scas
cmp
ror
mov
aas
pop
jnp
mov
int3
sub
push
ret
pop
or
add
and
inc
inc
das
fwait
pusha
int3
push
call
in
and
movs
pusha
cwde
das
mov
je
add
call
or
call
lock
dec
jbe
mov
or
sub
xor
xor
fdivr
and
adc
mov
and
addr16
scas
mov
xchg
dec
mov
(bad)
or
or
and
scas
mov
ret
cli
dec
loop
sbb
and
push
inc
repnz
loope
ret
retf
add
jmp
xor
daa
xchg
stc
jg
dec
and
btr
mov
les
xchg
push
mov
xchg
sub
fnstcw
pop
(bad)
int3
ins
das
sbb
cmps
rol
ja
fidiv
mov
cmc
fs
ins
sbb
cmp
xchg
test
test
and
cmp
mov
lahf
cmp
repnz
stc
push
xor
daa
mov
loopne
shl
pushf
xchg
cmp
out
ss
mov
mov
push
jae
ss
mov
pop
dec
inc
mov
fiadd
ror
jae
pop
(bad)
push
js
add
push
inc
pushf
sub
aad
add
sub
mov
popa
out
out
ficomp
xor
mov
mov
pusha
cld
retf
sub
sbb
pushf
inc
hlt
aam
je
icebp
or
pop
test
leave
or
in
lods
sub
cmc
mov
cmps
in
ja
adc
xor
clc
clc
ins
cmp
jge
fwait
pop
dec
ret
int
into
dec
stc
mov
xchg
cmps
sbb
jnp
clc
std
adc
pushf
ret
xor
movs
test
aad
sti
and
outs
lahf
sub
xor
sbb
mov
cmps
xchg
je
iret
fsubp
mov
and
ins
aas
rol
lea
nop
(bad)
mov
push
ror
mov
ins
push
cmp
pop
or
add
xchg
nop
arpl
cmp
out
jne
sbb
mov
mov
das
stc
movs
aaa
jcxz
icebp
add
sbb
test
and
(bad)
jmp
js
cmps
xchg
mov
sbb
xor
jecxz
mov
adc
xor
neg
jl
dec
into
push
aaa
ins
adc
aad
stc
dec
pop
imul
pop
test
push
adc
mov
pushf
test
or
xlat
daa
fs
repnz
pop
sbb
jnp
and
aad
add
je
jecxz
cs
jne
les
enter
rcr
xchg
bnd
into
dec
test
mov
mov
add
loope
fcomp
pop
js
popf
cwd
mov
sub
or
lock
pop
and
aad
push
jns
bound
pop
lods
loope
bnd
rol
xchg
leave
das
or
add
add
out
sub
shl
and
hlt
dec
in
jb
cmp
xchg
sahf
jo
xor
pop
outs
ficom
das
mov
(bad)
fcom
out
push
repz
jnp
int3
icebp
lock
adc
add
stos
dec
dec
rol
inc
mov
cs
call
outs
add
nop
dec
push
iret
pop
idiv
mov
or
and
adc
dec
xchg
lahf
std
sti
pop
loope
arpl
inc
mov
and
adc
xor
xor
cmp
dec
sar
lahf
cmps
nop
mov
add
aad
xchg
cmps
inc
pop
add
adc
gs
xchg
(bad)
and
mov
int
adc
jmp
(bad)
sbb
inc
and
jbe
loopne
or
aas
or
push
stc
pop
test
cli
dec
arpl
dec
bound
clc
pop
mov
popf
cmps
iret
xchg
dec
jmp
cmp
jne
xchg
aaa
lds
fwait
nop
jo
pop
add
bound
dec
pop
gs
or
es
imul
xor
sub
enter
cmps
and
jno
cwde
es
jecxz
and
cmps
sahf
mov
add
jmp
xchg
jmp
lock
or
retf
xor
add
mov
stos
daa
pop
inc
mov
test
mov
daa
in
adc
dec
inc
clc
rcl
nop
push
add
test
dec
mov
je
cli
cmps
or
aad
sub
jns
dec
push
mov
xlat
sub
test
arpl
cld
lods
imul
push
ja
ficomp
and
add
addr16
fwait
cmc
xchg
add
and
push
out
mov
dec
jb
iret
or
sar
xor
dec
repnz
xor
dec
test
push
inc
mov
sbb
xchg
dec
sub
adc
pop
pop
repz
test
push
int3
push
and
stos
nop
sbb
es
es
mov
mov
shr
int
fs
hlt
int
imul
add
add
mov
cmp
mov
fsub
fimul
sbb
dec
push
jg
cwde
test
icebp
fsubr
fst
or
cmp
mov
mov
xchg
add
cmps
sub
fs
xrelease
push
stos
outs
sahf
fs
pop
lock
xor
jmp
xchg
cmp
pusha
cmp
gs
stos
push
push
clc
xor
daa
movs
fdivr
or
aas
inc
inc
and
les
ror
retf
les
fild
adc
and
or
ss
dec
shl
sbb
inc
jmp
xchg
xor
and
popf
(bad)
rcl
xor
cmp
sub
sbb
cmp
(bad)
in
or
cmps
(bad)
ss
pop
push
add
and
imul
stc
jle
xchg
sub
mov
cmp
dec
mov
lds
arpl
add
repnz
inc
jmp
xchg
les
sbb
push
into
sbb
aam
push
out
jecxz
lahf
daa
mov
pop
pop
enter
lods
push
in
repnz
lods
out
and
in
jmp
adc
sub
rol
xor
(bad)
lock
xor
mov
sar
jne
pop
xchg
lock
bound
stc
xlat
nop
and
inc
mov
std
pop
ja
(bad)
mov
pop
and
sbb
sub
mov
push
mov
(bad)
out
aad
jns
out
mov
ror
aam
push
test
add
inc
dec
inc
fmul
addr16
lods
xchg
mov
in
sbb
test
add
pop
popa
pop
sub
femms
mov
fwait
cld
cdq
jbe
or
enter
push
repz
cs
repnz
adc
sar
inc
mov
dec
gs
repnz
ja
xchg
dec
cmp
xchg
adc
out
std
mov
or
iret
sub
pop
cmp
pop
or
pushf
jae
nop
cmp
inc
pop
pop
loopne
add
lahf
pop
dec
gs
imul
cmp
mov
sbb
or
cwde
jbe
movs
rol
add
sti
push
fimul
fistp
or
inc
xor
inc
mov
xchg
jae
outs
lock
scas
jmp
out
std
inc
dec
idiv
popa
adc
jae
call
adc
jno
imul
sub
out
stos
mov
jmp
sbb
test
out
loop
pop
adc
in
lahf
in
mov
gs
(bad)
mov
scas
sbb
enter
mov
int
icebp
lahf
xchg
dec
jmp
sub
in
clc
out
in
gs
cmp
mov
mov
icebp
push
or
test
shr
dec
pop
adc
sub
dec
mov
scas
push
push
mov
jns
out
test
cmp
in
mov
repz
xor
mov
(bad)
ror
stc
test
arpl
stos
mov
ds
int
push
and
jne
test
ins
sar
rcr
imul
mov
and
fimul
xchg
inc
xchg
loopne
popf
aas
sbb
add
out
sbb
loopne
jmp
jl
fsub
push
shl
into
cmp
arpl
adc
dec
outs
mov
xor
cmc
jp
sub
mov
pop
cli
(bad)
shl
mov
test
mov
mov
mov
mov
ror
sub
mov
push
xor
hlt
xchg
jge
dec
out
jle
jl
repnz
adc
clc
out
and
cmp
scas
and
mov
lock
lds
out
mov
mov
sbb
mov
cmp
not
xchg
stc
jecxz
dec
out
adc
repz
iret
les
aas
jno
adc
sti
or
addr16
and
sub
stos
pop
lods
xchg
aaa
popf
jmp
ret
pop
add
fisub
in
adc
adc
mov
outs
push
mov
bound
mov
imul
ss
popa
jne
push
outs
(bad)
mov
adc
pop
sbb
cli
cld
jle
mov
lods
inc
cs
cmps
mov
xor
int
retf
iret
sbb
cld
dec
adc
test
repz
ret
retf
push
dec
add
(bad)
jmp
imul
std
loope
bts
cs
stc
(bad)
cmp
add
push
mov
cmc
cli
push
out
jge
sar
add
sub
mov
(bad)
cmc
popf
outs
in
and
pop
jmp
push
nop
mov
adc
or
pcmpeqw
out
push
push
cmps
mov
dec
addr16
cmps
stc
iret
push
dec
cmc
cld
add
push
data16
cwde
cmps
push
xor
mov
inc
aad
pop
retf
popa
xchg
test
cdq
retf
(bad)
in
in
ret
nop
inc
lahf
cdq
sbb
pop
(bad)
inc
mov
sti
sahf
cli
adc
lds
shl
cdq
mov
push
movs
jmp
cdq
cmp
or
pop
ret
inc
aam
fild
scas
push
in
push
je
icebp
out
fld
and
fisttp
or
inc
stos
ds
push
imul
(bad)
jmp
fcomip
ret
adc
lahf
mov
icebp
xchg
cmp
lods
int
inc
cmp
mov
pop
xlat
ja
nop
or
sbb
mov
es
or
mov
fcmove
push
iret
jg
shl
mov
mov
dec
es
xlat
adc
mov
mov
dec
scas
adc
and
(bad)
push
test
sub
cmp
inc
scas
ds
or
(bad)
int3
(bad)
cmp
scas
aaa
push
iret
test
add
faddp
cmps
imul
jno
push
scas
or
dec
daa
jno
in
int
mov
xor
ins
add
outs
xor
rol
cmp
mov
sti
xor
xchg
adc
pop
std
cld
cmp
out
sub
xlat
mov
cdq
aad
sub
inc
sbb
push
in
xor
fcomp
shr
fsubr
daa
int3
jle
xchg
inc
jb
mov
adc
cmp
test
mov
push
jmp
sti
test
mov
ja
not
into
add
in
dec
test
stos
mov
push
sub
push
jle
inc
std
sbb
stos
cwde
fld
mov
sub
gs
jo
push
or
add
dec
push
mov
cmc
mov
or
sbb
xor
dec
mul
gs
inc
jae
push
mov
test
(bad)
cmps
mov
scas
inc
or
inc
mov
or
rcr
dec
fidivr
fist
dec
push
and
sar
dec
fsubr
lahf
bswap
xor
stos
call
mov
stc
and
sbb
xchg
pop
(bad)
rcl
je
rcr
iret
lods
addr16
and
jp
mov
cmp
push
jmp
scas
and
push
dec
xchg
pushw
inc
add
pop
fucomp
xor
cmp
pop
push
fild
ins
ds
jae
xchg
pop
pop
xchg
in
aaa
hlt
push
cli
sub
(bad)
jmp
jp
mov
push
ret
out
jno
jns
data16
mov
adc
shl
sub
jmp
leave
jmp
adc
mov
ret
dec
sbb
enter
lock
std
ret
enter
arpl
cmps
in
dec
into
ret
sahf
popf
aad
mov
pop
xchg
mov
sbb
sbb
lock
movs
das
fsubr
es
cmp
cli
ret
cmc
jb
jns
outs
cs
das
xor
mov
cmc
sub
cmp
out
call
lock
sbb
mov
hlt
stos
test
test
pop
xchg
xor
inc
pusha
xchg
lods
and
xchg
popa
clc
out
xchg
or
out
xor
movs
xchg
jp
(bad)
pushf
sub
mov
sahf
loope
in
test
repz
mov
jae
xchg
xchg
mov
adc
push
ins
std
ins
jne
sub
pop
std
lea
retf
jne
mov
mov
je
sub
(bad)
mov
inc
cmp
jg
xchg
lea
pop
adc
lods
adc
jno
xchg
push
push
mov
and
ds
mov
xchg
add
lods
pusha
retf
push
shl
ins
lahf
movs
cmp
out
test
push
test
int3
xor
mov
inc
out
sub
cdq
lds
inc
sbb
loop
daa
stos
jno
addr16
pop
repnz
ret
jl
shl
jl
pop
xor
fldln2
cmp
xchg
cmp
les
cli
adc
(bad)
cmp
xor
addr16
cmp
loopne
popa
jb
fnstsw
aas
inc
arpl
pushf
test
cs
movs
popa
loope
sti
cs
dec
shl
pop
(bad)
imul
cdq
test
gs
in
icebp
sub
push
mov
mov
xor
jmp
mov
and
dec
int
or
mov
aad
sbb
(bad)
fbld
out
xchg
mov
pop
jae
fld
xchg
out
inc
or
cmp
mov
xchg
sahf
mov
sbb
int3
adc
mov
fwait
data16
movs
rcl
cs
and
ja
dec
push
hlt
es
jae
fwait
mov
add
add
cmp
xor
cmp
retw
xchg
jmp
xchg
mov
mov
and
xchg
mov
mov
xor
in
ds
imul
out
pop
push
mov
pop
inc
repz
ds
mov
(bad)
sbb
ss
dec
jge
xchg
xor
add
push
adc
inc
sub
xor
sub
sub
int
jecxz
imul
dec
movs
mov
mov
push
jno
inc
shl
mov
cmp
in
fld
mov
std
jae
mov
mov
sub
cmp
jnp
std
sbb
mov
das
(bad)
mov
jle
push
sub
adc
icebp
jne
mov
push
arpl
icebp
xchg
sar
imul
jmp
mov
(bad)
mov
sbb
mov
add
mov
lods
xor
inc
sub
xchg
mov
push
mov
test
movs
mov
and
adc
push
not
and
sub
inc
add
cmc
movs
add
pop
stos
(bad)
repz
fistp
dec
lods
sub
fiadd
cmps
adc
shr
loopne
xor
inc
ror
sbb
jg
mov
or
popf
in
mov
int3
cmc
dec
and
enter
mov
add
andnps
adc
sub
pop
push
mov
fadd
dec
(bad)
fsub
mov
je
es
es
mov
in
or
xchg
push
lds
jp
inc
add
sar
ds
lods
fbstp
dec
mov
xchg
icebp
loop
shl
ins
loope
scas
(bad)
fild
adc
(bad)
mov
adc
pop
les
and
repnz
imul
push
or
outs
xchg
dec
ret
fld
cmc
inc
jno
test
in
fnstsw
fist
or
add
sub
repnz
popa
cs
dec
add
cli
fmul
dec
adc
shl
mov
mov
ins
int3
cs
push
out
dec
xchg
cmp
dec
outs
jb
pop
xchg
add
test
cmp
outs
mov
lds
adc
inc
in
mov
mov
adc
mov
(bad)
cmovno
in
xchg
cmps
jle
inc
push
cmp
mov
fwait
xchg
sub
das
cmps
sti
xor
xor
sub
and
movs
mov
fwait
pop
inc
idiv
fisub
and
sbb
retf
mov
rcr
lea
shl
and
and
or
sahf
adc
add
xchg
pop
popa
stos
or
jb
adc
xchg
xchg
xor
and
mov
aam
(bad)
sbb
call
std
adc
mov
xor
loope
fcom
xchg
jle
mov
cmp
inc
call
or
nop
push
out
xchg
or
aad
inc
jle
jp
adc
cmp
cmp
sbb
les
inc
push
add
test
mov
xchg
xor
out
enter
les
in
das
aam
lods
push
aas
jnp
xchg
push
add
mov
add
sbb
xor
adc
in
dec
mov
cmp
scas
mov
or
out
push
imul
mov
cs
mov
int
nop
pop
in
fcom
push
(bad)
sbb
call
sbb
dec
in
mov
pop
mov
xlat
(bad)
in
in
jge
jl
xor
in
dec
scas
repz
retf
push
push
xor
mov
in
sbb
dec
dec
aam
dec
push
sub
xchg
ret
retf
(bad)
push
fiadd
mov
(bad)
fisttp
sub
dec
jae
repnz
lds
mov
or
test
leave
adc
xchg
mov
ret
add
fadd
dec
sbb
sar
add
sbb
nop
fs
outs
out
gs
scas
xor
dec
cmp
enter
jne
sub
mov
out
sbb
sahf
retf
mov
mov
adc
and
sub
pop
push
test
call
jns
xchg
sub
lahf
pop
mov
sti
scas
xchg
out
in
outs
mov
fld
lods
hlt
cmp
ret
pop
movs
ret
inc
mov
rcr
movs
loope
stos
adc
scas
and
inc
pop
lea
cdq
inc
xor
pop
js
and
rol
sub
lea
inc
int3
pop
inc
xchg
in
xor
enter
retf
ins
jecxz
push
push
sti
mov
mov
lahf
mul
mov
sub
jge
jge
call
test
push
dec
jle
add
jmp
or
xchg
retf
xlat
pop
aad
pushf
mov
movs
or
jb
and
add
ffreep
mov
stos
movs
into
add
and
inc
popa
test
mul
sbb
mov
adc
mov
sbb
jnp
in
pushf
mov
push
xchg
lahf
pop
xor
or
fcmovnbe
lea
(bad)
pop
pop
imul
es
mov
mov
adc
xor
cwde
inc
enter
sbb
add
cmp
jg
cmc
pop
frstor
js
sub
div
(bad)
hlt
push
stos
add
xchg
arpl
mov
arpl
lods
jae
adc
xchg
pop
mov
call
call
push
outs
shl
movs
cmp
ret
mov
pusha
cld
add
mov
pop
fcmovbe
scas
(bad)
in
jp
inc
jb
xchg
stos
dec
lahf
lock
int3
fdiv
pop
cmp
lea
jg
xchg
ret
xchg
jb
dec
fadd
add
dec
push
push
popf
and
add
fild
add
adc
(bad)
scas
imul
adc
jnp
xlat
aam
scas
sar
lds
scas
retf
sub
pop
pop
mov
pop
sub
xchg
leave
call
idiv
shr
pop
sub
or
jns
and
dec
xor
out
out
mov
mov
sar
popf
cmp
mov
cmp
leave
adc
and
mov
and
xchg
daa
test
in
and
cmp
stos
adc
jno
ins
int3
loop
xor
mov
iret
leave
pop
(bad)
fidivr
retf
cmp
jl
cmp
mov
cmps
and
add
push
cdq
lea
sbb
das
add
in
or
mov
fcmovnu
imul
xor
mov
pop
das
pop
push
jns
jo
push
into
dec
push
adc
std
test
sub
mov
add
int3
sub
push
add
stc
js
dec
ja
inc
jg
aam
xor
cmp
jg
div
jo
jg
adc
in
mov
out
mov
addr16
idiv
ds
cli
mov
add
pop
inc
mov
mov
mov
mov
jmp
aaa
ficomp
sbb
add
mov
(bad)
mov
pushf
iret
or
mov
mov
add
sbb
cs
iret
gs
(bad)
ror
mov
ss
emms
mov
ja
fs
fdiv
fidiv
neg
pop
mov
xlat
idiv
(bad)
mov
adc
push
dec
jnp
mov
loope
mov
popa
push
jle
jnp
in
jo
sub
xchg
dec
mov
out
xor
push
out
add
mul
jle
(bad)
out
addr16
ror
fsub
add
cmp
fdivrp
lods
cmp
sbb
test
scas
retf
cld
cs
ret
sahf
push
std
sub
push
stc
cmc
add
lds
mov
or
mov
mov
dec
sub
sbb
lods
inc
add
mov
cmp
xor
or
inc
jmp
push
push
or
jnp
adc
adc
mov
or
sbb
and
addr16
xchg
inc
jb
ffree
jb
dec
jmp
imul
lahf
sbb
adc
mov
fstp
xchg
out
call
jne
mov
xchg
xlat
xor
jns
or
adc
mov
push
aam
leave
sub
rcr
cmp
mov
xchg
call
adc
add
cmps
fld
cld
jnp
clc
jne
aaa
ror
(bad)
into
retf
pusha
push
sbb
mov
(bad)
and
icebp
(bad)
sar
push
lock
add
or
sub
test
in
arpl
arpl
movs
mov
pushf
lock
add
xor
push
nop
idiv
daa
stc
mov
xor
jl
inc
cmp
dec
add
mov
aam
cmp
bnd
push
jp
loope
pop
imul
push
pop
lods
(bad)
or
leave
mov
pop
cmps
nop
push
jg
popf
adc
(bad)
mov
jge
pop
sbb
int3
mov
dec
lea
jbe
mov
ror
call
icebp
mov
xor
mov
retf
or
lahf
add
test
pushw
adc
popf
repnz
inc
ror
push
std
mov
shl
(bad)
push
sbb
pop
sar
lods
mov
inc
jbe
mov
mov
(bad)
out
push
mov
adc
das
and
mov
mov
inc
std
or
fs
sub
inc
xlat
mov
dec
sub
mov
test
aaa
cli
hlt
retf
cmp
dec
nop
cmc
lock
jns
mov
frstor
scas
pop
fwait
mov
mov
sub
ds
jbe
inc
inc
mov
or
push
push
mov
add
fmul
iret
mov
mov
sbb
add
cmp
inc
inc
xor
jb
push
lods
ret
iret
dec
std
bound
cmp
(bad)
int
xor
(bad)
xor
ret
mov
aas
mov
gs
fwait
inc
mov
and
cmp
jns
xor
repnz
xchg
ja
out
mov
lods
rol
xchg
dec
sbb
es
xor
adc
push
jbe
jb
jmp
xchg
or
mov
imul
ds
loop
test
sub
fnstenv
hlt
pushf
or
test
adc
and
and
cld
shl
mov
xchg
std
jmp
mov
sbb
loopne
mov
sbb
xchg
fidivr
cmps
pushf
mov
xor
mov
cmps
push
lahf
push
or
or
dec
in
dec
or
adc
push
loopne
cwde
das
sbb
rcr
mov
ins
or
jnp
pop
mov
call
mov
sbb
adc
mov
pop
mov
push
sar
sub
fmul
or
scas
mov
out
add
pop
stos
push
hlt
add
or
retf
pop
imul
sbb
mov
jbe
or
hlt
add
mov
jecxz
and
cmp
(bad)
dec
loopne
std
hlt
loopne
mov
rol
inc
rcr
in
push
pop
lods
xchg
test
jle
test
fcmovbe
or
jmp
ret
test
jbe
sbb
in
push
mov
sub
jge
dec
push
rcr
sub
aam
sar
fisttp
call
and
jb
adc
in
cs
aas
xchg
sbb
pop
jne
pop
daa
jnp
addr16
add
push
mov
pushf
xor
cmp
or
push
rcl
push
loop
in
dec
rcl
jg
movs
add
shr
pop
pop
lds
js
data16
test
jmp
fstp
pusha
jge
fnsave
and
(bad)
out
js
add
daa
scas
cmps
cmp
push
mov
mov
test
ja
hlt
mov
ins
cmp
push
arpl
repnz
fild
fcomip
xor
push
aad
dec
push
pusha
icebp
mov
int
stc
daa
int3
in
fild
add
lahf
sbb
and
pop
shr
in
jg
pop
xchg
test
pop
xchg
pusha
or
mov
(bad)
in
int
xor
fs
sub
add
hlt
add
or
or
pop
pop
cmp
out
imul
das
pop
mov
mov
retf
nop
mov
pop
push
cmp
mov
pop
inc
mov
gs
mov
inc
ror
add
int
sub
pop
xchg
sbb
pop
add
fisub
loop
push
dec
or
(bad)
mov
cli
and
mov
and
mov
or
fimul
mov
ror
push
addr16
lods
inc
pop
pop
aaa
fimul
mov
ds
daa
pop
shl
js
es
fimul
xchg
inc
push
inc
mov
sbb
js
js
pop
lods
pushf
ins
or
and
out
idiv
ja
or
mov
push
scas
add
ret
inc
popf
je
push
mov
pop
pushf
adc
mov
jns
inc
mul
sbb
mov
pop
xchg
pushf
jg
fsub
dec
sub
mov
mov
loopne
iret
cmp
imul
pop
popf
pop
sub
lea
sahf
mov
sub
aaa
scas
inc
cmp
mov
fisttp
push
sbb
jnp
xor
stos
dec
inc
mov
pop
aaa
hlt
sub
or
mul
jo
sar
fmul
ret
push
sub
outs
adc
sub
xchg
pop
jmp
dec
mov
xor
mov
icebp
dec
cmc
repz
jge
mov
jl
push
xor
out
cmp
int
fstp
outs
jnp
loope
das
jno
fcomp
cmp
xchg
or
dec
xchg
aam
ret
xchg
fdiv
add
xor
jl
outs
mov
inc
rcr
repz
cmp
outs
add
mov
xor
retf
and
nop
sbb
mov
in
xor
daa
mov
call
push
mov
hlt
aad
xchg
xchg
xor
ss
jmp
jmp
mov
and
adc
pop
xchg
stos
push
sub
mov
and
bswap
xlat
mov
call
icebp
imul
fcmove
popf
sar
inc
clc
imul
rcr
mov
ret
push
leave
mov
call
sbb
mov
xor
xor
nop
or
(bad)
push
icebp
mov
mov
loopne
cmps
outs
jmp
mov
fidiv
das
mov
mov
fmul
fs
xchg
mov
sti
loope
sub
es
adc
adc
add
and
mov
pop
sub
push
enter
sub
xor
clc
mov
js
dec
adc
dec
call
push
lods
bound
pop
mov
(bad)
add
sbb
mov
xor
arpl
fld
jne
cdq
pop
loope
clc
push
cli
jo
call
test
xchg
addr16
mov
out
mov
sub
push
adc
pop
mov
lods
fbld
rcr
xor
lock
mov
rcl
pusha
mov
daa
in
scas
xchg
imul
xchg
and
lds
dec
push
dec
mov
sub
xchg
(bad)
sti
mov
ins
mov
pop
js
push
mov
jne
out
mov
ja
nop
push
jae
add
xor
lds
sub
rol
cdq
(bad)
shl
jns
jae
adc
adc
or
xor
mov
jns
pop
mov
inc
bound
aam
bound
popf
lds
sub
mov
mov
pop
push
(bad)
xor
jge
pop
adc
push
or
push
idiv
repnz
popf
add
out
cmp
rcr
addr16
dec
hlt
mov
in
addr16
cld
sbb
fs
in
and
mov
les
mov
dec
pushf
scas
push
mov
out
sub
(bad)
fst
cmc
ret
out
cmc
daa
xor
inc
dec
xchg
cdq
gs
movs
xchg
or
ins
push
mov
or
push
sar
cs
or
jns
ins
cmps
mov
cmc
jae
fst
add
jmp
repz
push
ffree
mov
add
sbb
xor
dec
pop
mov
pop
loopne
(bad)
fild
push
inc
xchg
mov
outs
call
lods
es
pop
adc
retf
sbb
cld
and
xor
and
and
xchg
das
and
mov
fadd
and
inc
daa
push
int
out
xor
(bad)
stos
mov
push
mov
cmp
adc
pmulhuw
loopne
sbb
inc
adc
dec
arpl
aad
inc
aas
sub
mov
test
mov
adc
inc
add
nop
(bad)
and
test
mov
mov
adc
in
sub
sbb
xchg
loopne
dec
dec
das
call
dec
xchg
inc
xor
add
mov
int3
sub
and
retf
jge
xchg
sbb
mov
ds
mul
xchg
push
shr
mov
(bad)
jmp
repnz
sub
fcmove
fistp
repnz
jno
jbe
cmp
pop
sub
dec
sub
test
jbe
jmp
pop
dec
jno
repnz
mov
cmps
mov
je
popa
mov
jo
int
sbb
push
aaa
in
mov
inc
jge
out
mov
int3
jno
dec
scas
in
push
mov
jge
nop
mov
cmp
xor
pop
sbb
xchg
ss
cmps
loop
nop
and
repz
push
sub
(bad)
out
sbb
pop
std
mov
pop
sbb
call
sbb
dec
mov
cwde
mov
pop
jmp
xchg
sti
pop
dec
sbb
cmp
in
cli
cmp
push
push
xchg
mov
and
mov
jp
in
cld
addr16
fwait
push
das
shr
pop
push
push
cld
daa
xchg
push
cmp
clc
xor
inc
loopne
mov
pop
push
ds
push
std
and
jp
pop
add
xchg
adc
inc
xchg
inc
ffree
push
mov
sub
imul
(bad)
and
mov
shr
fisub
and
xor
shl
mov
cli
or
fld
hlt
mov
dec
imul
and
outs
(bad)
movs
clc
enter
and
xor
gs
lahf
add
ss
inc
sub
or
aad
je
ficom
inc
std
jno
xchg
xor
(bad)
(bad)
pop
in
mov
lods
xchg
ret
scas
dec
clc
xchg
enter
div
test
ja
xor
lahf
sub
out
mov
loope
inc
in
call
xor
jp
mov
push
cmp
add
fisubr
frstor
and
xchg
test
nop
xchg
loopne
or
add
movs
and
test
inc
sti
clc
fmul
jbe
std
add
cli
int
aas
push
pop
mov
push
xor
pop
cmp
mov
nop
mov
movs
push
subps
mov
jae
push
jbe
ins
dec
out
in
lods
xchg
xor
jb
xor
jo
xchg
inc
icebp
pop
or
add
jno
xchg
lock
dec
mov
cmp
outs
(bad)
lods
les
mov
test
mov
jle
das
call
repz
outs
mov
popa
pusha
push
inc
sbb
cmp
shl
nop
fdivrp
(bad)
dec
dec
mov
mov
dec
or
mov
sub
mov
jmp
lds
sub
jno
or
into
mov
xor
pop
ficom
mov
sbb
mov
cmp
push
mov
sbb
bound
jl
sub
mov
inc
sbb
inc
in
repnz
imul
xchg
lock
jns
push
lahf
mov
imul
pop
imul
mov
fidivr
aas
popa
sub
outs
xor
mov
stc
inc
mov
cli
mov
popa
jl
pop
push
in
test
and
xchg
call
jnp
sub
adc
fadd
imul
mov
cmps
pop
xchg
add
pusha
pushf
shl
mov
imul
mov
shl
je
sbb
jp
loop
repnz
add
dec
in
jecxz
cwde
retf
mov
or
adc
les
mov
lods
leave
inc
cmp
adc
mov
test
cmp
cmp
mov
adc
ds
outs
outs
add
mov
(bad)
mov
loop
sbb
ins
ds
js
inc
gs
xchg
sbb
push
dec
push
sbb
mov
push
jge
push
nop
int
sbb
and
leave
mov
push
cmp
jmp
mov
add
repnz
cmp
daa
adc
lods
dec
fwait
mov
mov
sbb
jg
push
outs
sbb
fucom
fs
cdq
pop
ins
scas
ret
fistp
push
xchg
mov
xor
and
(bad)
or
(bad)
(bad)
mov
pushf
ret
and
rcr
pop
push
mov
jno
mov
mov
jbe
mov
jbe
adc
in
mov
jae
hlt
arpl
pop
or
adc
in
pop
hlt
push
dec
jae
aad
pop
sub
rol
(bad)
mov
push
or
inc
ret
adc
lahf
or
leave
xor
mov
(bad)
and
sti
rol
push
imul
xchg
arpl
cwde
inc
es
inc
(bad)
sub
aaa
push
mov
call
repz
fnsave
sbb
add
mov
les
inc
adc
mov
ds
inc
sti
adc
push
les
lea
xchg
or
stos
out
sbb
push
ror
jge
jl
repz
push
pushf
(bad)
shl
cli
std
cmps
dec
mov
icebp
inc
adc
adc
pusha
mov
test
aas
call
icebp
fst
adc
xchg
and
sub
inc
sub
or
das
rcl
jo
or
cvttps2pi
sbb
adc
idiv
cdq
jno
cmp
ret
or
jmp
and
push
movs
lods
sbb
add
push
leave
sar
js
pop
or
js
dec
xchg
cmps
push
bound
or
xchg
cwde
and
dec
mov
inc
int3
jnp
mov
mov
and
shr
adc
ret
mov
cmps
sbb
and
cli
fsubr
mov
in
fs
mov
outs
pop
adc
pop
lods
addr16
sub
in
jle
pop
sbb
pop
or
push
(bad)
xor
jl
or
(bad)
or
pop
icebp
in
jns
jns
mov
aad
rol
mov
xchg
push
xchg
push
jge
retf
adc
nop
jne
xor
jl
popf
push
mov
mov
outs
push
sbb
add
pop
inc
in
dec
js
movs
add
mov
pop
sar
dec
jl
mov
lods
adc
xor
add
mov
retf
adc
cdq
mov
lods
and
mov
push
or
sub
add
int
sbb
dec
ret
sbb
mov
add
inc
scas
fst
fsubr
push
xor
in
retf
not
xor
pop
inc
aaa
inc
(bad)
movs
adc
xchg
xor
sbb
sub
inc
add
ret
sbb
xchg
dec
jns
pushf
int
dec
mov
and
cmp
out
repz
aad
cmp
sbb
jmp
xchg
or
or
js
and
leave
sbb
clc
xchg
jl
ret
sti
pop
hlt
call
leave
push
mov
push
pop
xchg
out
(bad)
movs
xor
mov
shl
sbb
sbb
pop
xor
mov
pushf
lea
mov
cmp
jbe
push
arpl
nop
stos
out
lock
call
je
push
adc
jle
pop
add
or
rcl
xchg
fstp
leave
dec
shl
mov
xchg
les
repz
retf
pop
inc
out
sbb
sti
fidivr
xchg
and
or
cmp
dec
loope
nop
adc
retf
adc
cmc
mov
jns
sti
add
popa
mov
leave
mov
test
fldenv
dec
adc
dec
pushf
mov
int3
imul
and
scas
dec
test
or
cmps
bound
jg
or
popa
sub
aaa
es
cli
cmps
mov
mov
sbb
popf
cmp
ds
jae
inc
ja
mov
xchg
xlat
gs
ds
push
inc
push
xchg
nop
ror
add
fchs
imul
jno
xchg
loope
imul
sub
cmp
mov
cld
pop
cli
pop
jns
push
ret
sbb
aas
push
aaa
jge
rcl
lahf
icebp
sbb
fimul
add
int3
in
mov
dec
mov
and
nop
push
pop
adc
cmps
sub
shl
jo
(bad)
push
cmp
(bad)
add
xor
cmp
int3
arpl
adc
mov
in
addr16
neg
mov
gs
popf
cmp
inc
fisub
call
fsub
outs
(bad)
mov
and
out
aaa
pop
or
mov
fabs
sub
ins
movs
movs
mov
call
jmp
call
push
xchg
add
cmps
xor
or
ins
jmp
popa
ja
cli
inc
jb
sbb
jmp
lahf
cmp
push
and
in
ins
cdq
cmp
inc
inc
mov
mov
dec
cmp
or
push
dec
xchg
xchg
xchg
and
push
sub
dec
xchg
arpl
test
push
cmp
jecxz
js
xchg
sub
int3
fisttp
lods
mov
mov
dec
jno
cli
std
rcr
inc
ins
push
mov
jns
jle
lods
aam
int3
and
pop
ja
in
bound
sbb
adc
xlat
arpl
(bad)
dec
ins
js
adc
mov
jae
mov
outs
repnz
shr
mov
mov
cli
and
sub
aaa
jle
mov
shl
cmps
mov
fnstenv
movs
and
sahf
adc
cld
and
fisttp
imul
inc
mov
push
mov
and
mov
mov
fld
dec
imul
mov
sub
and
icebp
test
stos
js
ss
dec
pop
lea
cwde
mov
sti
jmp
dec
idiv
add
dec
jmp
ret
inc
and
das
and
dec
fwait
xchg
cmp
movs
shl
xchg
popa
xlat
dec
movaps
mov
mov
arpl
(bad)
jg
ins
push
sub
lds
push
pop
xlat
lds
or
cmp
inc
scas
popf
aad
sbb
and
enter
loope
bound
outs
scas
add
and
scas
dec
mov
lods
dec
daa
sbb
idiv
and
add
fisubr
mov
rol
inc
push
dec
les
push
int
je
loop
lock
push
aaa
or
jnp
aas
mov
sbb
sub
arpl
jb
cmps
(bad)
lock
shl
xor
or
movs
fs
or
jbe
into
push
mov
jo
outs
lds
loope
pop
mov
mov
jb
(bad)
bound
adc
adc
jne
out
retf
ja
or
push
mov
sbb
xlat
and
xor
fcomp
cmc
sub
sbb
aaa
addr16
jecxz
jl
mov
inc
out
mov
sbb
int
rcl
fiadd
jecxz
sbb
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
enter
mov
add
aad
add
xchg
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
add
add
add
cmp
add
sub
add
add
add
push
mov
add
add
add
add
add
add
jbe
add
add
add
xor
add
inc
inc
push
inc
push
dec
xor
cs
ins
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
cs
ins
add
inc
dec
dec
xor
cs
ins
add
inc
push
xor
cs
ins
add
xor
xor
fs
ins
add
add
addr16
ins
outs
jae
dec
gs
add
inc
js
je
jb
arpl
jae
add
inc
gs
jb
arpl
fs
jae
add
dec
outs
popa
fs
imul
add
push
imul
jb
je
arpl
push
dec
gs
jo
outs
inc
outs
jne
inc
add
add
gs
ins
inc
js
arpl
gs
add
add
jne
push
imul
fidivr
cmp
ds
pushf
add
in
repnz
pop
std
add
js
adc
add
sbb
loopne
add
push
push
cmp
pop
push
xor
or
imul
ficomp
sub
js
push
xor
adc
sub
mov
or
repnz
(bad)
fdiv
outs
mov
jp
scas
add
call
jecxz
jmp
mov
repz
sub
push
repz
push
sti
retf
sbb
push
loope
mov
push
pop
and
dec
or
xor
jno
jno
jae
add
in
and
dec
and
leave
mov
add
in
cmp
xor
sbb
dec
xchg
or
sbb
int3
mov
xor
mov
pop
fistp
pop
xor
cli
rol
(bad)
adc
out
ja
or
jmp
push
add
inc
sub
int3
pushf
sub
or
sbb
iret
add
icebp
sub
mov
dec
jno
push
add
fisub
adc
cmps
sub
and
xor
sbb
xchg
add
das
mov
cs
arpl
jns
push
cmp
int
cmp
aad
xor
pop
ficom
gs
test
fld
add
sub
test
and
sbb
xchg
adc
mov
fistp
lods
in
pop
aas
pop
mov
xor
fbstp
sub
(bad)
ins
loop
lock
xor
and
pushf
cmp
dec
mov
or
dec
fcomp
inc
cmps
jl
pushf
xchg
xchg
or
pop
sbb
cld
mov
pop
or
arpl
rcr
fistp
ins
inc
es
adc
(bad)
cmps
and
jecxz
push
popa
mov
inc
fwait
sbb
pop
repz
dec
into
lds
cs
call
jg
aam
aam
loopne
outs
adc
cmp
jge
add
arpl
mov
inc
scas
lds
lahf
add
data16
stos
sbb
pop
data16
pop
test
jg
cmp
or
lea
call
push
lea
aad
and
fadd
daa
iret
push
out
add
fisttp
xor
neg
daa
hlt
inc
add
xor
dec
xchg
aas
cli
mov
ja
xor
es
call
pop
jae
push
cs
jg
pop
inc
aas
push
loop
mov
imul
add
in
es
call
add
mov
xchg
xchg
pusha
sub
cli
test
retf
or
mov
mov
xor
jb
das
push
out
loopne
sub
and
mov
mov
cmp
sub
(bad)
ror
outs
inc
or
bnd
adc
push
adc
sub
fwait
xor
in
xor
sti
and
loope
or
loopne
sbb
xchg
jae
stc
mov
and
test
cmps
xchg
cli
and
pop
cmp
dec
sbb
add
(bad)
ret
push
idiv
sub
pop
add
xchg
jle
sbb
jmp
push
std
jno
mov
cwde
ds
int3
ficom
test
das
push
inc
xlat
nop
or
mov
lea
sbb
adc
mov
sub
iret
and
dec
jmp
cs
xor
xor
xchg
arpl
ds
inc
sub
pop
fiadd
int3
mov
pop
dec
pop
push
jb
sbb
inc
es
jge
and
cld
sbb
sub
xor
add
aaa
and
dec
jg
ror
std
sbb
(bad)
int3
cmp
inc
push
cmp
adc
mov
pop
ss
mov
arpl
adc
cmp
in
or
sub
xor
rol
test
pop
jg
pop
mov
push
mov
xor
push
push
stos
cld
push
or
mov
dec
in
xor
or
mov
push
adc
shl
and
(bad)
lds
dec
mov
scas
cmp
in
and
leave
and
cs
adc
or
sub
inc
mov
adc
sahf
frstor
sbb
mov
popf
mov
aas
sub
cmp
cvtps2pi
pop
mov
xor
sbb
fidivr
sbb
inc
xchg
outs
mov
aaa
pop
ret
xchg
es
out
cmp
xchg
or
cmps
and
pusha
neg
lds
rol
add
xor
add
jnp
push
push
fisttp
jne
lods
sbb
out
stos
or
or
jecxz
fnsave
test
inc
adc
jnp
xor
hlt
dec
or
gs
sbb
rcl
clc
imul
push
loope
sbb
out
dec
aas
dec
mov
fdiv
aam
test
add
(bad)
and
(bad)
lea
sbb
jbe
dec
inc
aaa
out
push
jns
sti
fwait
bound
jp
ins
cmp
(bad)
in
sub
xchg
shr
leave
sbb
push
pop
push
and
je
fnstsw
inc
daa
cmp
or
xor
xor
lock
pushf
mov
xor
icebp
xor
inc
pop
adc
mov
repnz
mov
sub
jae
xor
(bad)
aas
daa
jne
cmp
jle
xor
xor
push
sub
sbb
mov
fisubr
(bad)
push
fnstenv
pop
lea
les
add
pop
jo
xor
pop
add
test
cmp
push
adc
and
mov
xor
adc
cmp
addr16
push
xor
daa
and
ret
imul
adc
add
cdq
add
sbb
mov
inc
add
das
push
lea
and
sub
and
dec
or
inc
ins
mov
xor
adc
push
ss
leave
or
lahf
std
sbb
sahf
xor
(bad)
sar
cli
leave
daa
and
jnp
fst
or
inc
jnp
wrmsr
loopne
adc
bsr
mov
lods
adc
jne
xor
in
xor
cmp
pusha
sbb
int
pop
xchg
enter
sbb
sbb
push
pop
cs
les
lods
dec
xor
inc
cmp
xor
xor
(bad)
ja
fcom
push
adc
push
xor
dec
in
or
in
push
and
cmp
sub
xor
and
and
add
cs
shl
add
push
repnz
ja
xor
xor
sub
push
and
mov
addr16
adc
das
gs
aas
cmp
repz
cmp
fidiv
test
pop
add
push
mov
stc
shl
adc
rcr
add
xor
adc
aaa
cmp
pop
push
pop
movs
and
cmp
sbb
sahf
daa
fidiv
jmp
add
sbb
or
dec
adc
pusha
movs
adc
mov
sbb
fsub
cmc
xor
sahf
das
inc
adc
and
or
test
and
or
dec
cdq
sub
icebp
icebp
push
pop
adc
push
adc
mov
hlt
mov
add
mov
push
add
cmp
test
sbb
movs
mov
lds
js
scas
call
mov
sbb
es
mov
adc
rol
push
int3
pop
or
mov
adc
pop
test
jecxz
push
adc
mov
sub
pusha
inc
call
aas
(bad)
iret
cmp
mov
(bad)
jp
pop
sbb
push
out
pop
xchg
push
and
mov
jno
xchg
movs
add
xlat
das
shl
mov
push
es
mov
jl
lock
dec
(bad)
std
ds
icebp
inc
cmp
in
das
retf
pop
enter
nop
lds
push
push
fistp
pop
mov
das
leave
lods
add
mov
or
xor
test
and
stc
add
xchg
sti
ins
scas
sub
xchg
adc
and
mov
movs
fwait
adc
xor
add
ins
test
or
por
adc
adc
add
out
inc
cs
xor
fstp
pop
adc
mov
mov
adc
mov
pop
cmp
sbb
cmp
aam
add
xor
pop
ins
ds
iret
jo
sub
out
xor
mov
repz
pop
mov
rcr
or
test
out
in
mov
jns
test
push
iret
mov
mov
call
push
hlt
xor
cmp
pop
loopne
sub
pop
mov
xor
shr
and
test
pop
mov
pop
xchg
aas
test
mov
add
cmp
cwde
imul
or
pop
idiv
jmp
add
xchg
ret
xor
jecxz
and
add
inc
mov
xchg
mov
or
out
es
sbb
push
cs
cmp
into
daa
add
add
pop
std
ins
add
cmp
add
dec
loopne
mov
push
sub
jo
adc
test
aaa
shl
sub
hlt
lahf
cs
inc
xor
nop
rol
pop
ror
inc
inc
xor
inc
cld
dec
push
dec
icebp
cdq
or
test
lock
sub
retf
adc
sbb
nop
fld
icebp
lods
mov
fmul
and
fcomp
adc
and
das
aad
dec
sub
add
push
pop
inc
adc
aad
pop
mov
int3
cld
xor
in
dec
mov
imul
in
sub
xor
aas
mov
add
cmc
and
push
rcr
cli
(bad)
push
or
lods
fwait
add
sahf
xor
lds
cmp
lock
jae
xor
sar
stc
sbb
sbb
adc
dec
cmp
cmps
sub
inc
outs
add
push
xor
test
jmp
cmp
call
out
or
sbb
add
cmp
cmp
lea
or
dec
aam
cmp
inc
sub
sub
inc
xor
xor
(bad)
fsub
adc
(bad)
adc
mov
movsx
add
cmp
and
xor
sbb
les
ds
nop
xchg
push
lods
pop
push
and
pop
cmp
test
aaa
div
push
jmp
test
data16
js
xchg
cmp
ins
sbb
retf
movs
test
into
add
repz
pop
jae
(bad)
xor
in
cmp
pop
xor
mov
in
or
ins
mov
pmuludq
push
add
push
mov
xor
inc
pop
or
dec
sub
shl
jno
xor
fs
sbb
loopne
and
add
sbb
push
push
das
imul
or
sti
and
adc
cmp
mov
repnz
pop
cmp
xor
push
adc
ja
adc
and
adc
rol
enter
mov
mov
sub
clc
iret
and
jmp
repnz
cmps
xchg
xor
popf
push
in
push
jle
icebp
cmp
sub
push
cmp
fisttp
jle
pop
int
sub
cs
push
stos
and
pop
(bad)
or
jo
sub
xchg
dec
popf
xor
dec
add
sbb
or
ror
mov
scas
arpl
in
scas
adc
xor
dec
cmp
push
xor
xchg
add
or
mov
sbb
and
daa
test
xchg
and
pop
jno
adc
inc
lahf
xor
mov
pop
ins
xor
push
call
xchg
popf
pop
(bad)
out
cwde
and
bound
and
arpl
push
dec
cmp
dec
daa
invd
out
jae
repz
clc
jne
push
outs
repz
cmp
xchg
jo
sub
outs
shr
xchg
clc
push
cmp
lock
xor
sbb
adc
mov
jne
out
test
sub
sub
cmp
sub
out
push
mov
daa
add
lds
pop
(bad)
(bad)
cmp
mov
xor
jae
jb
mov
ds
jnp
and
inc
cmp
loope
sbb
xchg
pop
mov
and
leave
cmp
or
inc
mov
mov
add
push
or
lock
aad
pop
and
sub
pop
mov
cmp
mov
mov
pop
dec
add
and
sub
push
and
in
ins
dec
cmc
add
inc
lock
je
neg
std
dec
and
(bad)
fucomp
xor
mov
outs
and
data16
adc
jno
cwde
outs
and
retf
cs
xor
mov
ror
icebp
aad
xor
pop
das
sbb
ret
pop
xor
cmp
arpl
sbb
sbb
sbb
add
std
pop
add
call
fistp
push
pop
and
mov
int3
cmp
or
(bad)
fmul
and
xchg
or
std
sahf
add
sub
fadd
into
or
iret
mov
or
call
cmp
jne
push
and
adc
add
mov
xchg
stc
add
sub
sub
and
adc
mov
les
bound
fwait
sub
pop
add
fwait
push
mov
stos
and
rcl
in
or
jnp
xor
in
add
pop
cs
or
int
cmp
add
data16
stos
pop
cmp
fsub
cmp
jle
add
movs
and
jge
lds
sub
pop
pop
and
aas
xchg
div
add
movs
pop
and
aad
cmp
jno
sub
pop
and
and
cs
(bad)
or
or
ins
sub
add
or
xchg
cs
out
ret
mov
sar
das
daa
sbb
pop
enter
jmp
mov
push
std
xchg
pop
push
cmp
jo
sahf
sbb
or
pop
push
xchg
(bad)
pop
int3
or
sub
sar
das
adc
dec
cmp
loope
cmp
adc
jno
and
lock
sub
jb
xor
loopne
sbb
bound
push
ins
mov
mov
mov
cs
pop
xchg
repnz
pop
xchg
mov
sbb
push
dec
dec
pop
lds
lea
or
es
mov
les
xchg
neg
or
repz
test
ins
mov
pause
sti
sbb
jo
xchg
inc
call
sub
mov
aaa
inc
in
or
push
jge
jl
verr
push
leave
adc
jnp
popf
sub
cwde
cmp
aam
or
xor
aas
mov
das
leave
mov
sub
or
jge
ss
aam
sbb
or
rol
and
sti
push
push
push
jp
pop
sub
dec
mov
pushf
adc
arpl
push
leave
jp
test
sub
xchg
xchg
sbb
mov
add
aam
mov
dec
fwait
cmp
dec
xchg
and
xor
sub
iret
xor
or
aam
jnp
jns
inc
add
sub
and
xor
mov
pop
or
or
jmp
es
mov
add
cs
jns
cdq
pop
clc
sbb
(bad)
lock
aas
sub
adc
rcr
adc
(bad)
or
hlt
or
pop
nop
je
clc
cli
mov
mov
xchg
xor
and
adc
inc
mov
or
sub
mov
hlt
adc
cmp
test
clc
loop
jb
xlat
das
xchg
mov
cs
es
xchg
nop
jnp
inc
push
xor
inc
mov
mov
dec
adc
sbb
ins
in
sbb
cmp
or
or
test
jmp
sub
mov
arpl
adc
(bad)
movs
mov
cmp
or
cmp
mov
sbb
pop
inc
aaa
mov
popf
cmps
sbb
ins
push
inc
jo
xor
sub
cld
lahf
das
in
neg
cmp
or
cdq
adc
std
cmps
gs
mov
and
into
xchg
or
cmp
push
cwde
jae
cmp
je
out
and
ror
aaa
push
(bad)
cmp
scas
sub
mov
icebp
(bad)
fstp
dec
add
adc
cmp
push
mov
outs
and
sbb
sub
rcr
cli
lock
jae
mov
push
lea
cmp
adc
inc
pop
gs
or
cmc
fiadd
mov
and
xchg
daa
add
or
iret
fsubr
adc
cli
mov
cld
sbb
call
and
jb
fldcw
mov
call
xchg
loop
sub
and
lods
dec
mov
or
adc
sub
xor
aas
or
js
out
add
popf
xor
push
cmp
and
cmp
xchg
sub
push
adc
adc
outs
sub
shr
or
jecxz
and
mov
mov
push
push
or
aas
in
sub
mov
lea
mov
js
push
jmp
stc
scas
inc
and
fiadd
sub
outs
fimul
adc
cwde
in
sub
adc
or
scas
or
cmp
sub
daa
xor
dec
sub
nop
int3
cmp
in
sub
outs
sub
ficomp
es
cmp
int3
clc
pop
cmps
cmp
sbb
js
adc
dec
pop
sbb
shl
push
(bad)
(bad)
movs
fwait
or
sti
cmp
mov
or
jge
push
xor
pop
mov
or
cmp
xchg
in
jo
arpl
aas
imul
sbb
ror
pusha
mov
pop
jge
mov
stos
lock
test
repnz
mov
and
push
push
sbb
popa
leave
or
pop
and
lock
jle
and
xor
addr16
enter
mov
js
fimul
(bad)
xor
add
and
nop
and
inc
sbb
adc
imul
ret
bound
adc
fild
lds
test
sub
cdq
not
retf
sbb
or
sub
sub
sbb
add
pop
or
pop
fwait
or
leave
inc
scas
or
repz
leave
and
push
movs
add
jg
push
out
enter
leave
add
or
rcr
fwait
cmc
cmp
rcr
fld
mov
cmp
rcl
test
pop
mov
and
outs
xor
sub
pop
lods
out
sbb
mov
popf
push
jl
lods
xchg
sbb
jne
mov
add
xchg
push
out
xchg
sbb
add
sbb
and
xor
sbb
aas
and
out
push
push
push
sbb
cld
add
jg
(bad)
leave
je
jmp
sbb
js
sbb
je
das
idiv
stos
xor
xchg
push
sub
mov
retf
and
xor
adc
or
out
mov
jns
mov
adc
adc
sbb
xor
retf
xchg
daa
shr
or
movs
lods
xor
outs
adc
ins
jl
cmp
lods
xor
(bad)
and
inc
adc
pop
xchg
lods
sbb
mov
and
mov
sub
daa
xchg
les
add
adc
sbb
xlat
inc
adc
jmp
push
dec
and
adc
(bad)
cmp
shl
cmp
mov
lahf
xlat
mov
movs
cmp
sahf
add
xor
ss
adc
or
sbb
sub
dec
mov
inc
pop
stos
add
pusha
xor
stc
fadd
xchg
add
iret
sub
ret
fiadd
jae
pop
cmp
je
sub
dec
add
jb
add
mov
(bad)
sub
push
sbb
clc
loopne
in
dec
repz
rcr
mov
and
pop
ss
ja
sbb
sahf
mov
mov
(bad)
pop
(bad)
xor
sub
sbb
fnstenv
or
pop
mov
enter
dec
ja
loop
xor
sbb
or
std
(bad)
and
push
push
mov
sub
sub
mov
pop
mov
cwde
xor
pop
retf
sbb
out
add
add
sub
mov
adc
push
xchg
cwde
or
and
les
dec
or
hlt
and
call
sub
je
sbb
rcl
ss
into
ss
imul
inc
pop
add
mov
cmp
lods
bound
jbe
xor
mov
std
sub
or
xchg
ret
loop
jo
jnp
stc
imul
jp
daa
xchg
pop
aad
int3
mov
cmp
push
es
addr16
aaa
fsub
popf
adc
jnp
ss
or
push
jnp
push
mov
inc
retf
ss
push
mov
mov
or
rol
xchg
sub
or
sub
cmp
into
sub
cs
mov
or
sbb
pop
inc
add
test
push
pop
xchg
jecxz
cmp
mov
cs
mov
rol
xor
in
aam
das
dec
(bad)
add
(bad)
rol
movs
push
sbb
push
ficom
hlt
mov
cmp
xchg
mov
inc
out
ds
push
(bad)
cmp
push
ss
scas
sbb
(bad)
ret
sub
jae
sub
push
mov
cwde
or
hlt
mov
cmp
mov
jl
xor
es
xor
or
and
dec
ja
ins
jbe
cmp
sub
movhps
loope
push
and
push
mov
cmp
sbb
cmp
xor
pop
(bad)
cmp
movs
and
mov
or
lods
add
mov
add
push
xor
shl
jae
sub
cmp
jp
outs
xor
aad
pop
push
repnz
xor
rol
xor
nop
bound
add
data16
xor
adc
fmul
repz
fiadd
lds
xor
xor
movs
or
push
cmp
sub
icebp
jo
lods
jmp
sub
movs
out
mov
jne
cs
dec
retf
sbb
add
lea
jns
xchg
and
fistp
movs
fs
cmp
push
xor
cld
cmp
(bad)
cdq
sbb
jae
and
and
push
and
mov
xor
cmp
push
push
ret
adc
pop
in
sbb
push
sbb
ss
push
mov
in
inc
ds
cmp
cmp
push
adc
aas
cmp
sbb
nop
adc
ins
xchg
sub
cwde
jge
pop
inc
mov
mov
add
dec
sahf
add
push
cmp
mov
dec
xor
pop
daa
pop
jg
sbb
sub
stc
adc
test
adc
mul
and
pop
test
sub
push
xchg
sbb
push
aaa
aam
xor
jge
ds
daa
mul
push
sbb
cdq
es
xchg
stos
cmp
adc
dec
xor
and
scas
sahf
inc
es
or
popa
add
sub
cmp
nop
push
add
mov
arpl
inc
dec
or
inc
nop
adc
pop
les
sbb
cmp
xor
cli
arpl
fnstcw
jmp
into
and
inc
fsub
das
iret
sbb
sub
pop
daa
mov
cmps
add
dec
pop
or
mov
sub
mov
sbb
add
clc
sub
arpl
and
fldenv
data16
push
std
pop
pop
add
cmp
rcl
in
aaa
in
mov
in
sbb
aam
add
xor
pop
xor
aaa
fdivr
push
adc
sub
push
addr16
xor
sbb
adc
gs
inc
jns
ss
js
cwde
or
mov
sbb
shr
cmp
xor
add
sbb
lea
pop
push
mov
inc
add
push
ret
cs
push
clc
sbb
and
call
adc
sub
xor
cs
sub
xchg
or
call
gs
mov
fcomp
daa
test
xchg
or
xchg
add
adc
or
push
push
fdiv
stos
and
cmp
push
sub
push
jp
xchg
mov
adc
cmps
in
cmp
gs
adc
inc
mov
add
add
xchg
call
shl
and
cmps
add
and
(bad)
or
xor
loop
cmp
inc
cmp
retf
aaa
pop
imul
aas
cmp
jno
adc
test
mov
daa
pop
cmovae
adc
outs
xor
out
cmp
sub
sub
aaa
and
xchg
aas
mov
das
repnz
adc
stos
pop
cs
jmp
and
pop
shr
in
mov
add
cmps
cmp
aaa
sbb
out
or
mov
aad
leave
pop
inc
xor
inc
xlat
push
xor
mov
and
shl
out
ds
xchg
cli
or
mov
cld
sub
dec
stos
mov
pusha
jmp
xor
ja
adc
(bad)
neg
pop
movs
push
and
in
xor
mov
ja
test
and
cmp
iret
out
and
pop
lds
xor
shr
jge
retf
push
test
outs
cmp
data16
inc
add
and
(bad)
jecxz
aas
sub
mov
je
sub
jne
adc
or
cmp
push
and
sbb
shr
sbb
daa
pop
outs
fs
mov
sub
les
xor
inc
pop
sti
and
or
ins
or
sub
adc
repz
mov
pop
xchg
imul
and
mov
mov
xor
iret
sbb
les
bound
xlat
je
xor
mov
sub
or
xor
in
das
xor
mov
(bad)
icebp
add
lods
daa
mov
jo
xchg
cmp
xor
mov
cmp
xchg
adc
mov
(bad)
push
jbe
push
inc
outs
xor
inc
cmc
push
and
mov
dec
adc
mov
pop
and
xor
sub
inc
and
inc
hlt
dec
sbb
sar
sbb
jae
add
xor
pop
mov
and
lock
or
mov
xor
aas
retf
xor
popa
jmp
inc
add
xchg
mov
div
data16
lds
call
and
rol
fist
sub
pop
test
in
cmc
aad
push
dec
inc
or
fst
sub
loope
cmp
jb
daa
jnp
jle
fcomp
mov
outs
and
adc
xor
jno
push
pop
js
aas
jb
xlat
adc
call
dec
sahf
adc
or
or
and
std
mov
sub
fnstsw
jne
or
mov
inc
jmp
out
and
pop
push
pop
iret
cmp
(bad)
push
nop
sbb
jae
cmp
sar
fwait
outs
sbb
icebp
sub
mov
jno
jae
jb
cmp
mov
sub
add
inc
add
jge
sbb
mov
cmp
push
stc
mov
sahf
(bad)
sub
sub
add
aam
xor
fdivr
push
fmul
lds
out
inc
mov
outs
inc
daa
jnp
ss
arpl
aad
jbe
loop
mov
aaa
push
mov
adc
cmp
push
cs
ins
lds
enter
int
sub
(bad)
(bad)
sahf
sub
cmp
cmp
and
adc
push
ss
popa
pop
mov
enter
adc
xor
adc
js
xchg
mov
imul
sub
pop
ds
mov
mov
aaa
mov
aaa
test
xor
cs
mov
(bad)
cmps
mov
cmp
pop
mov
stos
sbb
movs
leave
ss
pop
std
sbb
shr
fwait
iret
and
and
cmp
sub
and
dec
das
or
cmps
hlt
and
or
mov
nop
jmp
sub
sbb
mov
xor
xor
int3
cmp
or
push
add
cmp
fiadd
or
xor
movs
cmp
adc
xor
add
jle
aas
(bad)
or
adc
jbe
adc
push
mov
and
mov
cdq
sbb
ds
add
xchg
and
mov
leave
or
(bad)
or
xchg
loope
ins
and
or
jns
and
(bad)
mov
or
fs
js
das
jp
dec
sub
repz
add
xchg
fwait
mov
mov
loop
xor
bound
jmp
fisub
adc
or
sub
xor
or
test
mov
test
mov
sbb
dec
int3
dec
das
dec
sub
sbb
cmp
or
nop
push
sbb
neg
adc
data16
js
or
imul
push
call
mov
and
inc
pop
test
push
inc
inc
and
jecxz
out
xchg
(bad)
in
mov
adc
and
adc
xor
cli
das
or
sbb
pop
sbb
test
push
mov
repnz
out
jb
dec
lods
repz
imul
adc
pop
add
mov
sbb
ja
push
sub
xor
sbb
or
das
sub
pop
hlt
add
dec
ret
push
leave
cmp
(bad)
je
push
clc
push
test
jg
stos
aaa
test
repz
popa
retf
dec
xchg
shl
cmp
call
dec
xor
sbb
aas
je
xchg
push
pop
xchg
lock
xor
and
and
cmp
cs
dec
dec
inc
sbb
pushw
lock
adc
push
movs
and
push
xor
adc
stos
push
es
loopne
sbb
leave
stc
push
jb
mov
cmp
mov
loop
pop
xor
popa
rol
adc
add
fs
and
pop
add
(bad)
push
xchg
xchg
ja
cli
and
cmp
dec
cmp
iret
cmp
adc
and
and
ss
bound
cs
dec
and
pop
das
sub
mov
dec
daa
cmps
sub
ins
or
push
sbb
out
adc
push
jg
sbb
call
and
(bad)
ds
mov
sbb
or
sbb
repnz
sbb
or
adc
in
and
cld
mov
ss
enter
ret
jp
movups
add
mov
sbb
(bad)
outs
cmp
stc
sar
xor
jnp
add
xor
mov
cmp
mov
mov
sbb
pusha
fnsave
fwait
mov
retf
sub
jle
(bad)
jnp
push
out
call
add
mov
into
push
adc
shl
cmp
xchg
adc
jp
xchg
jl
and
js
sub
push
push
sbb
or
or
sbb
jl
cmp
cmc
ret
fsubr
xor
jge
push
ja
add
sub
dec
push
xchg
sub
(bad)
out
xor
icebp
and
repnz
mov
mov
and
mov
and
push
push
add
in
sar
jo
mov
adc
mov
xchg
push
sbb
xchg
sbb
hlt
jmp
sub
sbb
push
movs
cmp
das
xor
sbb
ret
and
jmp
sbb
cmps
xor
xor
adc
mov
add
xor
iret
scas
cmp
sub
cmp
and
sbb
pop
dec
sbb
repz
xor
and
push
leave
imul
movs
add
mov
mov
add
jne
add
icebp
sub
es
mov
test
mov
loope
out
pusha
dec
jo
aas
in
mov
sub
lods
and
fisub
dec
in
and
dec
mov
ficom
jne
push
xchg
xchg
adc
aad
sub
mov
xchg
cmc
sub
scas
mov
lds
pop
cmp
jmp
and
push
cmp
jb
xor
or
add
jmp
pop
xor
loope
aaa
mov
in
(bad)
hlt
sub
pop
out
movs
add
add
sbb
jmp
push
leave
mov
ret
ss
cmp
xor
test
jp
lods
or
popa
sbb
jp
or
in
pop
mov
sbb
xchg
(bad)
sub
inc
sub
mov
es
ss
or
add
sbb
lods
jmp
clc
xchg
aam
dec
inc
pushf
cmp
mov
or
cmp
sub
shl
and
mov
out
mov
push
add
xor
outs
mov
adc
sub
adc
xchg
dec
xor
test
jno
xor
sbb
sbb
mov
aaa
popf
push
or
push
test
jne
not
inc
jg
adc
mov
and
test
xchg
inc
pop
(bad)
xor
or
add
daa
jge
das
cwde
mov
add
mov
shr
cmp
or
sub
xchg
cmp
inc
inc
ficomp
pop
cmps
neg
mov
dec
shl
call
jmp
bound
nop
add
and
retf
push
add
aas
cmp
and
push
and
sbb
push
adc
inc
adc
dec
xor
sbb
test
cmp
inc
repnz
std
arpl
or
arpl
xchg
cmp
adc
sub
es
adc
popf
sub
xor
xor
sbb
sub
into
aaa
adc
cmp
push
pop
mov
(bad)
daa
mov
pop
xor
cld
shl
fisub
sbb
shl
and
fcomp
aas
aaa
pop
jnp
in
lahf
or
inc
jne
sub
cmp
fs
in
mov
or
add
sbb
adc
bound
imul
push
cmp
test
adc
xchg
cs
call
cmp
clc
push
add
lea
add
fs
mov
sbb
pop
rol
test
or
sub
jge
and
xchg
jnp
push
adc
dec
out
cmc
sti
push
add
xchg
stc
or
stc
iret
and
sbb
cmp
imul
iret
jge
sbb
test
sbb
or
cmp
pop
or
push
call
mov
aas
mov
pop
(bad)
clc
and
push
out
push
push
xchg
repnz
push
xchg
adc
stos
aad
adc
pop
das
sbb
das
xor
or
cmps
sar
and
int
jle
or
cmp
sub
hlt
sub
pop
cli
daa
rcr
stc
sbb
push
jbe
inc
ss
mov
push
and
add
pop
jl
dec
cmp
pop
cld
sbb
inc
and
scas
or
push
cmp
das
ror
push
sbb
ds
sbb
mov
pop
adc
adc
jge
sti
sub
fild
aaa
mov
cmps
aaa
ficomp
jne
ds
or
in
aad
sbb
jmp
inc
fisub
ficomp
fs
mov
cmc
enter
adc
mov
aaa
adc
ja
adc
mov
add
pop
dec
push
inc
pop
pusha
outs
rol
popf
inc
(bad)
or
pop
daa
xchg
xchg
ss
retf
retf
outs
jno
hlt
pusha
adc
add
stos
and
pusha
sbb
dec
out
or
inc
pop
adc
pop
imul
cmp
mov
movs
sbb
jmp
add
jmp
mov
cmp
hlt
pushf
pop
pop
add
xor
mov
sub
push
mov
cmp
out
sbb
cmp
or
das
sbb
(bad)
adc
dec
inc
add
or
daa
sbb
or
fimul
add
or
dec
xor
xor
in
retf
es
sub
leave
hlt
int3
sbb
jns
out
or
je
add
addr16
xor
push
xor
xchg
lods
sbb
push
loopne
push
iret
xchg
add
mov
das
(bad)
mov
nop
adc
and
and
dec
fisubr
mov
jp
mov
ret
repz
mov
jne
bound
clc
sbb
or
pop
dec
adc
ins
ss
popa
movs
loope
mov
fisub
test
mov
pop
xchg
xchg
cmp
xchg
mov
das
rol
data16
and
pfpnacc
mov
xor
shl
ror
mov
data16
pop
jmp
icebp
hlt
mov
nop
call
test
mov
mov
cmp
mov
and
daa
lahf
dec
mov
call
stc
sbb
cwde
xchg
fsubr
mov
ja
adc
fnstenv
pop
imul
pop
adc
mov
shl
test
fistp
daa
inc
jmp
push
pushf
imul
sbb
std
mov
mov
adc
daa
adc
aaa
fadd
pop
xchg
inc
adc
ds
aad
movs
sbb
pop
movsx
push
pop
scas
and
sub
cs
sub
mov
xor
mov
jnp
hlt
and
nop
fadd
cmp
and
xor
inc
fist
retf
cmp
sahf
addr16
inc
movs
pop
mov
jl
aaa
dec
cmp
mov
repnz
and
data16
add
icebp
imul
fs
cmp
arpl
add
test
add
sub
and
call
or
aas
push
loope
and
fdivr
daa
add
push
xchg
dec
mov
sub
mov
xor
cld
aaa
loop
das
add
xor
das
sub
xchg
outs
sbb
add
and
(bad)
jne
lods
fisttp
(bad)
test
sub
jb
das
outs
or
sub
add
xor
stos
pop
add
mov
dec
pop
push
dec
push
adc
jb
sbb
jmp
xor
adc
not
jo
loope
shl
fmul
jae
sbb
in
push
cmp
es
mov
ds
loop
stos
popw
aas
enter
mov
inc
pop
pop
pop
loope
out
shl
xsavec
and
aad
adc
xor
sbb
xchg
xlat
sub
sbb
in
add
add
test
jbe
rol
adc
jno
adc
push
or
add
ret
mov
cmp
lea
add
jno
add
sub
fstp
jge
test
int3
fmul
sub
ins
daa
repnz
add
add
stos
stos
pop
test
sub
adc
scas
pop
push
minps
adc
icebp
pop
and
cmp
stc
and
and
jmp
push
fist
stos
xor
or
xor
adc
jge
sub
inc
push
(bad)
imul
add
cmp
popf
sbb
and
inc
pop
es
jmp
sbb
fwait
push
add
and
xchg
ins
ins
sub
js
sbb
jae
and
hlt
push
aaa
pop
jnp
add
push
mov
add
shl
pop
cmc
cmp
sub
lahf
jge
aas
scas
inc
sbb
scas
adc
xor
das
or
push
jecxz
cmps
xor
ss
in
aaa
or
pop
push
xlat
js
add
fwait
daa
xor
adc
push
jb
adc
test
pop
enter
push
dec
or
les
push
xor
adc
xchg
xchg
sbb
xchg
push
and
or
cmp
lds
mov
sbb
jg
jle
push
mov
or
jno
lods
xchg
xchg
or
add
dec
ja
adc
imul
in
int
xchg
mov
add
div
add
addr16
paddusw
add
sub
mov
mov
mov
sub
push
or
repnz
sub
je
sets
adc
add
cmp
and
or
daa
sbb
sub
push
mov
(bad)
ins
adc
and
pusha
mov
pop
or
xchg
rcl
test
icebp
push
sub
jmp
mov
and
cmp
pop
inc
sub
mov
push
cdq
fimul
cmovne
(bad)
sub
jg
push
pushf
jle
adc
pop
cmp
das
cmp
stos
rol
int
or
ret
cdq
xor
movs
or
pop
sub
xchg
repz
icebp
sbb
dec
cs
stos
dec
or
cdq
push
sbb
icebp
loopne
popa
lea
inc
leave
das
pop
dec
mov
cmp
mov
sbb
dec
push
and
mov
xor
ret
cmp
xor
xor
add
dec
add
ja
adc
loope
mov
aas
mov
sahf
or
ret
mov
sbb
cs
inc
je
mov
and
push
xor
ins
pop
xor
ja
pop
adc
sbb
pop
mov
jno
fldcw
push
fsub
sub
arpl
inc
cmp
in
sub
sub
and
mov
in
cmp
in
pop
ja
mov
sub
pop
cmp
cmp
and
xor
cmp
rol
cmp
imul
enter
mov
(bad)
sbb
int3
add
out
or
mov
cmp
cli
dec
les
xchg
jle
or
clc
mov
push
push
in
das
stos
not
shl
das
sub
mov
sub
inc
adc
or
or
add
cmp
mov
cmp
call
neg
int
pop
sub
mov
psraw
std
or
test
rol
jo
icebp
cmp
gs
sbb
retf
call
lods
adc
mov
repz
and
add
outs
pop
push
sbb
xor
xor
sub
fsub
pminub
out
shr
mov
rcr
cmp
jbe
xchg
das
adc
push
scas
cmp
pop
cmps
mov
dec
sbb
stc
(bad)
cmp
xor
jle
mov
leave
push
dec
sbb
adc
or
inc
push
xchg
popa
ins
cs
aas
mov
mov
and
and
dec
xor
xchg
ret
cmp
cdq
hlt
sbb
sub
out
dec
add
pop
mov
and
cli
adc
bnd
or
lea
push
xor
sbb
icebp
or
sar
add
dec
and
mov
push
in
push
(bad)
ds
push
dec
add
cmc
pusha
sub
mov
repz
ins
je
or
or
and
push
xor
push
xor
sbb
and
movs
sbb
sbb
or
or
inc
add
mov
or
sti
xchg
sbb
push
sub
mov
in
pop
cs
xor
pop
xlat
adc
scas
sbb
cmp
xor
cmps
ds
xor
or
stc
inc
add
jge
jp
mov
push
call
cs
pop
or
and
sub
fmul
xor
out
shr
and
nop
push
mov
mov
cmp
test
sbb
add
adc
retf
add
ss
stos
sbb
aas
sub
bound
movs
and
adc
(bad)
jge
or
rcr
cs
xor
ret
cs
jne
adc
cwde
lods
es
cmps
jmp
cdq
mov
or
cwde
fwait
adc
ror
imul
mov
xlat
and
or
inc
retf
and
jg
add
inc
sbb
sbb
and
std
adc
dec
pushf
shr
sub
call
clc
jp
test
adc
mov
nop
mov
sbb
mov
out
or
(bad)
xacquire
lahf
or
adc
sub
push
jb
out
inc
repnz
sbb
mov
stos
push
daa
aad
mov
cmp
mov
xchg
sbb
pop
js
aaa
pop
in
in
sahf
jmp
fs
scas
fs
les
cmp
data16
enter
mov
xor
xlat
es
outs
nop
xor
xchg
add
adc
jmp
push
xor
or
into
dec
xchg
adc
loopne
add
dec
and
jl
sbb
cmp
ins
xor
add
sub
mov
pop
sub
adc
and
or
inc
cmp
xchg
scas
adc
loopne
shr
add
sub
push
push
jae
dec
sbb
lds
das
outs
ret
xor
ss
xor
jnp
fistp
ins
sub
(bad)
outs
mov
stc
div
xor
xchg
arpl
and
pop
sbb
adc
mov
jl
cs
pop
in
adc
push
ds
jge
enter
fwait
add
andps
and
fs
pop
mov
and
(bad)
cmp
cmp
add
cs
ins
mov
fdivr
cmc
add
shr
pop
clc
loopne
int3
xchg
sbb
daa
mov
int
test
or
not
test
inc
ds
jae
cmc
cmps
jnp
mov
addr16
wbinvd
or
fidiv
and
mov
and
add
shl
sbb
xchg
adc
sahf
in
cmps
inc
pop
pop
ret
add
sbb
inc
inc
pop
sbb
xor
sbb
addr16
ds
mov
jo
push
and
mov
es
and
movs
arpl
sbb
mov
and
sub
xor
lds
and
(bad)
dec
daa
xor
lds
adc
mov
jno
sbb
aaa
xchg
sbb
das
adc
jmp
pop
pop
cmps
add
push
add
ds
retf
mov
std
cmp
leave
and
cmp
sbb
adc
push
mov
add
and
sbb
add
cs
call
mov
pop
scas
sbb
pop
mov
add
add
or
scas
mov
in
xchg
or
jmp
pop
ds
pop
ret
sbb
mov
jns
mov
and
out
mov
and
jmp
ficomp
pusha
fucomp
sbb
sahf
pop
adc
cmp
or
cmp
leave
clc
pop
jmp
test
pop
jle
dec
jno
cmp
sti
addr16
sub
fild
adc
dec
aad
add
xor
xchg
sub
leave
mov
push
jg
mov
pop
inc
add
in
cmp
test
and
pop
fisttp
aam
sub
add
jle
cmp
or
pop
mov
cdq
add
adc
mov
push
cdq
ins
push
adc
push
aaa
jne
jnp
mov
mov
and
sub
and
cmp
(bad)
sbb
shr
sbb
and
xchg
push
lock
add
stos
aam
and
mov
jb
adc
xor
(bad)
or
xchg
aas
mov
pop
pop
sub
cmps
cmp
pop
push
sub
inc
adc
sbb
fild
inc
push
and
sbb
push
mov
aaa
cwde
mov
scas
and
aas
cdq
add
jecxz
add
das
inc
sbb
adc
xor
jge
inc
test
cmp
ficomp
cli
and
in
repz
cmp
in
inc
adc
je
movs
or
in
or
sbb
xor
xchg
stos
ds
stos
or
or
cmp
out
sbb
adc
pushf
test
adc
inc
or
sbb
sbb
or
int
mov
pop
adc
into
stos
sbb
loopne
(bad)
pop
pop
pop
jo
adc
push
call
lea
and
aad
sub
aas
xor
shl
inc
jns
adc
inc
add
adc
inc
sub
mov
pop
xor
stc
cmp
mov
cmps
sub
mov
das
or
adc
out
or
dec
or
call
(bad)
pop
or
sub
adc
stc
dec
or
(bad)
test
adc
test
sub
add
mov
imul
sbb
cs
push
stc
aas
mov
and
cdq
sbb
sub
pop
sbb
jne
ds
outs
or
(bad)
pop
and
pop
cmp
dec
aam
mov
lods
add
mov
jbe
dec
push
pop
xchg
and
pushf
stc
cmp
fbld
shl
pop
shl
or
sahf
shl
push
cmp
hlt
xor
sbb
xchg
inc
and
rcl
into
lds
movs
pop
mov
ficom
pushf
aaa
push
pop
cmp
sbb
push
adc
xchg
push
aaa
mov
lahf
xchg
adc
cwde
pop
adc
and
add
sub
add
test
ror
adc
cdq
cmp
sub
mov
push
sahf
scas
sub
arpl
inc
test
stos
sbb
sbb
je
cmp
add
and
mov
sub
or
addr16
retf
mov
xor
scas
repnz
sbb
sbb
xor
pop
add
or
xor
es
add
jmp
push
push
cmp
(bad)
cmp
jnp
sub
pop
and
sbb
push
xchg
xchg
dec
sub
cmps
shl
and
and
adc
xchg
and
jp
iret
pop
(bad)
cmp
push
lahf
ds
push
and
mov
(bad)
stc
loopne
xor
inc
push
jmp
fcomi
add
jl
mov
ror
test
not
dec
xchg
pop
sub
xor
fstp
lock
daa
pusha
add
ds
arpl
sub
add
aas
dec
pop
retf
ror
add
das
outs
fisubr
aaa
push
stos
xchg
xor
mov
pop
sub
inc
out
or
lea
sbb
sub
xor
lea
cmp
push
xor
sbb
xor
loop
cmp
inc
or
mov
shr
add
clc
and
xchg
jmp
or
call
adc
add
lods
and
pop
or
test
imul
cmps
js
xchg
cmp
add
fimul
jb
mov
lahf
into
sbb
mov
inc
add
mov
mov
adc
js
add
ds
xor
idiv
icebp
cwde
adc
push
daa
add
xor
mov
bound
dec
mov
jae
or
out
ins
pop
inc
cmp
pop
rol
popa
dec
leave
xor
and
and
je
inc
aam
adc
sbb
and
cmps
(bad)
adc
push
jbe
cwde
movs
pushf
xor
int
push
and
and
or
loop
adc
shr
lea
loopne
sub
ds
mov
and
inc
and
and
and
cmp
aaa
fcom
je
gs
pop
les
cmp
pop
arpl
outs
or
xchg
xor
cs
in
xor
xor
nop
jl
add
or
das
in
dec
in
mov
pop
sub
mov
jae
aam
retf
or
inc
sbb
scas
sub
or
icebp
loop
inc
mov
cld
add
out
add
push
sub
add
hlt
sbb
sbb
xor
add
and
and
(bad)
(bad)
sub
jns
and
dec
push
jnp
rol
call
jo
fsubr
imul
cli
add
add
das
gs
outs
jl
daa
ffreep
mov
(bad)
ins
mov
xor
rcr
sub
or
test
pushf
or
popa
lea
stc
mov
sbb
ds
(bad)
(bad)
xor
rcr
xchg
ror
push
mov
adc
adc
pop
ja
rcl
sbb
cmp
mov
adc
mov
xor
lods
inc
fwait
xor
xor
mov
and
xchg
adc
push
pushf
hlt
or
scas
and
pop
or
ret
cmovnp
or
sbb
cmp
mov
dec
adc
scas
adc
stos
stos
dec
and
pop
scas
add
push
test
test
dec
xor
mov
mov
and
and
cmp
outs
pop
add
mov
mov
sbb
fwait
mov
imul
or
sbb
jg
mov
inc
in
jge
(bad)
sub
fist
adc
stos
cmp
and
test
ins
or
jae
add
sbb
dec
cmp
popf
sbb
les
cmp
sub
cmp
add
or
push
in
imul
or
sbb
push
ja
adc
xor
pop
aas
xor
xchg
cmps
xor
and
xor
cmp
repz
or
sub
add
hlt
and
jmp
mov
or
jl
pop
jle
maxps
sbb
imul
cli
push
das
ins
jae
adc
mov
lods
pop
xchg
cmp
bound
mov
and
stos
ins
daa
test
add
out
das
adc
push
cmp
mov
push
pusha
and
push
mov
jns
pop
xor
jnp
pop
in
xchg
add
add
das
sbb
es
adc
and
ficom
in
and
sub
int3
neg
out
push
add
lods
call
stc
adc
dec
pop
sub
push
and
ret
add
push
add
mov
aas
or
sub
xor
jae
sbb
enter
xchg
adc
fwait
add
pop
ds
xchg
mov
dec
sbb
sbb
jle
adc
push
adc
jbe
aas
and
pop
sub
add
xor
xchg
and
das
jmp
cmp
cwde
stos
lahf
cmp
sub
dec
sub
fs
xor
sahf
sub
jb
(bad)
and
pop
es
sub
daa
lock
inc
add
pop
pop
or
jg
adc
sub
inc
sub
xlat
dec
push
pushf
rol
cmp
cld
ja
cmp
xchg
xor
mov
loope
jmp
xor
inc
mov
and
popf
xor
lds
dec
les
add
scas
mov
xor
xor
test
icebp
shl
std
jns
and
mov
sub
mov
cmp
int
adc
fdecstp
adc
jb
inc
pop
(bad)
or
mov
cs
scas
inc
test
(bad)
cmp
sbb
lahf
lods
pop
data16
add
cmp
sub
push
mov
adc
fidivr
xor
imul
test
fst
push
cmp
jle
arpl
sbb
gs
adc
mov
adc
sar
or
mov
enter
push
add
mov
sub
daa
dec
sbb
jg
add
popf
xor
call
bswap
sbb
jnp
aad
and
push
gs
adc
xchg
jp
iret
inc
call
test
xor
cmp
je
and
jo
daa
push
lahf
and
sub
mov
imul
push
mov
push
adc
ja
xor
dec
in
sbb
pop
leave
cmp
call
add
or
es
aas
mov
cmp
mov
jnp
xchg
add
and
scas
ja
pop
or
mov
sar
pusha
dec
cmp
xchg
inc
jnp
or
and
xor
dec
mov
or
add
test
xor
push
arpl
and
or
sbb
es
rol
jbe
jp
ja
push
sbb
and
retf
aad
sub
inc
and
out
cmp
daa
sbb
push
sbb
push
es
sbb
sub
ds
cwde
(bad)
sub
push
imul
inc
dec
push
sub
xor
or
add
xor
leave
sub
add
lods
mov
(bad)
sti
test
shr
push
cmp
ins
pop
aas
ret
mov
cmp
adc
adc
dec
sbb
xor
mov
cmp
sub
adc
pop
push
movs
cmp
jl
pop
aaa
add
sbb
adc
das
mov
test
adc
fidiv
xchg
adc
push
push
bswap
addps
sbb
and
push
(bad)
push
jp
lock
dec
aam
adc
vpminub
or
dec
cmc
adc
inc
enter
or
out
inc
add
repz
aas
jecxz
loop
bound
aaa
cmp
add
cmp
sub
sub
std
adc
sbb
pop
fcom
es
idiv
popf
pop
and
mov
and
jns
cdq
ss
inc
out
out
ret
sub
xchg
jecxz
add
jo
cmp
cld
or
xor
sub
mov
lods
add
dec
xor
movs
bound
add
mov
and
mov
cmp
rol
adc
xchg
ins
pop
pop
pushf
test
mov
add
daa
test
nop
sbb
and
add
popf
or
xor
cmp
or
pop
add
(bad)
sub
es
push
sbb
xchg
xor
adc
sub
test
cmp
mov
cmp
fld
pop
and
pop
adc
sahf
add
mov
je
mov
ss
add
xor
iret
push
nop
inc
dec
xor
jmp
mov
push
daa
call
retf
xchg
sub
inc
add
repnz
push
(bad)
push
aam
iret
cmp
pop
cmp
and
nop
cli
add
outs
inc
mov
or
fsub
lea
pop
xor
inc
cmp
cs
dec
sbb
mov
pop
push
mov
into
ret
sbb
shl
imul
les
or
mov
retf
sbb
aaa
pop
sar
iret
fs
(bad)
out
sbb
add
add
and
xchg
or
fistp
loop
test
sub
mov
sahf
bound
inc
mov
and
scas
call
arpl
gs
in
lods
jne
or
push
sbb
jle
fmul
sub
std
rol
and
jmp
das
sub
imul
xchg
add
push
retf
aas
fisttp
and
sbb
add
nop
std
xor
fmul
adc
fistp
push
fs
shl
mov
daa
js
xchg
and
lahf
pop
sub
sbb
cmp
mov
fwait
inc
out
adc
jae
sbb
push
sub
inc
sbb
gs
pop
rcr
adc
jmp
adc
arpl
add
mov
sub
jo
jo
das
cmp
stc
cmp
push
add
jge
mov
xchg
mov
add
mov
and
inc
mov
fstp
add
cmp
jl
or
pop
or
push
dec
add
movs
inc
ss
call
adc
fsubrp
fwait
adc
fwait
and
adc
jg
sub
cmp
or
mov
movs
cmps
cmp
mov
push
clc
push
out
lock
rcl
int3
add
retf
out
cmp
xor
sbb
cmps
inc
add
and
dec
or
sbb
sub
mov
lods
and
mov
mov
cmp
jp
aaa
ret
scas
or
mov
retf
and
icebp
and
stc
pop
adc
sar
scas
lea
or
adc
lods
adc
pop
xor
fstp
sbb
adc
adc
stos
mov
xor
xchg
sbb
enter
jno
pop
add
xchg
add
mov
sub
daa
pop
cmp
sbb
pop
out
shl
das
cmp
adc
mov
sbb
mov
adc
pop
jle
or
std
xor
and
nop/reserved
int
or
add
sub
fsubp
or
sub
cmp
adc
aas
popf
xor
sbb
mov
adc
add
int3
out
or
cs
std
sbb
dec
xor
(bad)
xor
out
icebp
cmp
sar
or
(bad)
jmp
or
adc
adc
in
into
and
adc
and
dec
push
and
sub
fwait
add
stos
jmp
and
mov
sub
add
test
adc
les
out
and
sbb
shl
test
xchg
fisttp
adc
xchg
loopne
jne
inc
das
xor
repz
pop
scas
icebp
or
les
dec
or
sub
push
out
dec
dec
jle
and
mov
cmp
dec
popf
xor
and
or
out
xlat
xor
pop
inc
js
(bad)
popf
frstor
dec
(bad)
lahf
icebp
dec
add
inc
fdiv
jb
dec
daa
sub
mov
jmp
adc
jbe
and
xchg
push
pop
mov
jbe
sub
cmp
(bad)
jae
sbb
cmp
mov
loope
aaa
cdq
nop
test
mov
cmc
retf
or
mov
dec
out
idiv
into
sbb
std
sub
add
mov
rcl
scas
mov
sub
out
aaa
adc
movs
sub
cmps
inc
add
outs
or
fcom
into
pop
xor
neg
cmp
(bad)
shr
nop
sub
ds
mov
leave
sbb
repnz
inc
repz
jmp
cdq
sub
std
movs
sub
cwde
mov
and
(bad)
cmp
dec
clc
fdivr
loopne
aaa
cmp
popa
loop
inc
stos
or
jge
xor
and
adc
cmp
cmp
ret
xor
push
push
inc
das
add
sbb
xchg
frstor
test
test
aaa
gs
pop
fs
lods
add
loop
adc
xor
sbb
mov
cmp
or
pop
cmp
ds
mov
xor
out
add
fisub
push
(bad)
sbb
mov
aaa
jnp
in
xor
add
jns
sbb
jle
or
retf
add
call
adc
out
sub
lods
adc
push
stos
arpl
push
inc
push
or
add
mov
fild
(bad)
jge
es
mov
xchg
iret
adc
push
repz
loope
mov
jbe
sub
stos
pop
gs
in
test
cmp
xchg
xor
mov
test
inc
ret
xchg
movs
inc
or
mov
push
stc
arpl
adc
cmp
sub
aaa
out
xchg
cs
in
mov
add
(bad)
(bad)
adc
neg
and
or
inc
mov
cmps
and
das
cmps
(bad)
push
xlat
cdq
mov
mov
sbb
fidivr
sub
shl
rcl
xor
xchg
sbb
or
cmp
mov
pop
xor
cmp
fwait
xchg
js
cmp
in
and
scas
push
cmp
fistp
mov
ins
and
mov
cmp
add
mov
or
jno
sub
push
xor
xchg
out
push
and
out
or
or
adc
sub
xor
ret
fcmovne
inc
adc
mov
jle
push
and
lahf
mov
mov
out
or
retf
jmp
dec
cmp
and
xor
and
add
loopne
(bad)
std
cmp
stos
pop
sub
test
xor
pop
pextrw
sub
pop
inc
test
mov
hlt
aaa
sub
xchg
and
nop
add
or
push
mul
adc
jnp
mov
sbb
or
retf
xor
or
add
xor
pop
jmp
or
and
ds
and
cmp
sub
inc
ja
or
pop
push
push
dec
rol
pop
call
sti
jl
daa
mov
inc
test
sbb
mov
adc
fidiv
daa
out
add
and
int3
and
(bad)
clc
push
shr
ret
xchg
push
pop
sahf
ds
fcmovnu
das
test
inc
and
pusha
xor
ss
or
icebp
and
aas
hlt
add
jmp
frstor
push
add
adc
push
or
xchg
aas
sub
rol
jb
mov
sub
sbb
cmp
jne
mov
sbb
call
es
sub
in
(bad)
mov
jno
ins
shl
daa
push
add
dec
call
push
lahf
mov
pop
xchg
pop
mov
pop
repz
or
dec
cmp
adc
loopne
loope
std
test
pop
(bad)
pusha
jge
icebp
cmp
es
mov
fnstsw
cmp
add
sub
aaa
and
dec
pop
daa
imul
or
popa
in
lock
adc
mov
pushf
retf
icebp
xor
aaa
loopne
pop
cs
pop
mov
dec
jmp
add
push
dec
das
inc
test
adc
jl
pop
push
loopne
sbb
call
mov
sub
sub
cmps
call
xor
aad
mov
inc
add
sbb
adc
cmp
and
adc
lahf
push
jmp
xor
pop
cli
xor
mov
sbb
lea
cli
cmps
mov
push
imul
sbb
repnz
sbb
gs
cmp
inc
and
mov
fisttp
cs
pushf
ss
(bad)
pop
enter
repnz
call
push
nop
jno
xchg
aad
add
fisttp
pop
shr
cmp
mov
xor
cld
push
adc
stc
lods
test
mov
data16
mov
xchg
arpl
addr16
cmp
cmp
inc
sub
out
retf
and
add
jne
sub
aaa
cmp
bswap
stos
and
int
popa
adc
out
cmp
lds
mov
call
sbb
rcl
das
mov
jbe
xor
ds
ud0
sbb
retf
ja
sbb
push
ss
inc
inc
mov
cmc
imul
xor
cmp
les
jo
xchg
sub
cmps
sub
sahf
cwde
adc
jp
inc
jg
adc
stos
xor
hlt
jge
add
pusha
xchg
xchg
xchg
ss
and
push
dec
daa
xor
xor
add
cmc
sbb
or
inc
pop
xchg
adc
add
adc
add
inc
nop
push
ins
(bad)
cmp
add
add
cs
adc
mov
(bad)
sbb
mov
ins
es
es
sub
inc
pop
pop
xchg
pop
fbld
sbb
daa
and
jle
arpl
fisub
cmc
das
xlat
cmp
out
push
adc
or
jbe
xchg
add
nop
fidiv
and
sub
push
jmp
and
jnp
push
bound
adc
jo
xchg
adc
xor
pop
inc
add
(bad)
mov
sbb
test
add
push
xor
dec
sub
sub
adc
mov
or
sti
dec
sbb
scas
inc
mov
jne
sti
sub
fidiv
sbb
push
js
mov
in
add
sti
sub
xor
jp
(bad)
cmp
sub
mulps
neg
push
sbb
pop
in
inc
es
and
fistp
xchg
xor
pop
dec
cmp
ins
mov
pop
shl
cmps
aam
clc
lds
xor
jnp
cmp
popf
mov
add
in
adc
ins
push
sbb
xchg
call
(bad)
fmul
mov
loopne
add
ja
sub
cmp
xor
mov
pop
mov
cdq
and
ds
ds
mov
or
shr
add
or
xor
(bad)
jmp
es
and
shl
jmp
or
xchg
mov
xchg
mov
and
mov
push
fadd
sbb
mov
mov
lock
bound
pop
repnz
sbb
je
and
test
daa
xchg
adc
not
or
cmp
push
sub
popf
jno
sub
ror
icebp
pushf
daa
sub
pushw
adc
das
cs
adc
sbb
cmp
ins
pop
push
call
scas
retf
neg
pushf
es
sbb
rep
pop
aam
cmps
sbb
xchg
in
icebp
mov
lahf
mov
push
pop
pop
inc
movhps
cwde
adc
fadd
pop
lahf
das
adc
mov
fwait
div
inc
mov
sbb
jp
aaa
mov
pop
sub
loop
dec
ss
retf
mov
pop
adc
mov
ins
fisub
xchg
fild
or
sahf
sbb
add
add
cmp
or
or
(bad)
mov
(bad)
cdq
sbb
add
rcl
inc
jg
and
fld
inc
std
jno
fcomp
lods
or
mov
sbb
mov
das
nop
cmc
in
mov
jo
call
jnp
sbb
imul
add
sar
push
int
pop
fnstenv
(bad)
(bad)
and
add
loopne
fbstp
cmp
pop
fwait
cmp
and
mov
call
push
xor
sbb
stos
jo
outs
int
or
nop
add
ror
add
push
lea
mov
imul
fmul
mov
push
and
aad
(bad)
sbb
sub
xor
stos
test
retf
adc
jae
xor
adc
cmp
imul
scas
sbb
lock
js
and
mov
cmp
add
mov
and
inc
xor
int
sbb
dec
push
enter
sbb
popa
push
push
mov
cmp
mov
sub
jg
or
xchg
push
jl
push
xchg
les
int
test
and
sar
stos
mov
jbe
scas
aas
pop
out
and
xlat
xchg
adc
or
and
inc
add
in
out
and
call
scas
aas
cmps
pushf
loope
ja
cmp
xor
inc
mul
test
mov
fisub
stos
das
push
add
and
(bad)
aas
sbb
stos
repz
xor
sub
repnz
cs
sbb
or
test
add
movntps
pshufw
lods
add
mul
lds
popf
and
mov
sub
sbb
ret
adc
into
adc
repnz
xor
(bad)
jmp
shr
or
sti
push
scas
sub
xchg
xchg
sub
fbld
mov
(bad)
mov
push
push
mov
push
or
adc
pop
mov
sub
cmp
sub
dec
xchg
das
leave
dec
aam
dec
mov
add
ins
out
xor
xor
rol
sbb
daa
jle
in
retf
sbb
(bad)
(bad)
cld
add
inc
adc
not
add
clc
dec
repnz
jmp
sub
cmc
cs
ret
sub
fs
pop
(bad)
add
cmp
lock
xchg
in
cmc
xor
xor
push
shl
out
popf
sub
sbb
jo
sub
rol
movs
cmp
pop
adc
dec
fsub
xor
imul
lods
mov
pop
and
aaa
or
and
pusha
sbb
or
dec
sub
adc
js
mov
js
and
mov
mov
test
mov
outs
movs
mov
or
mov
and
fnstsw
add
sbb
mov
aas
adc
jmp
inc
jp
es
popf
out
daa
or
pop
inc
xchg
movs
ud2
jle
xor
neg
adc
js
cdq
jmp
add
mov
xor
sub
push
add
out
xor
sar
cmp
aaa
and
jle
rcl
add
test
pop
je
push
jge
fisubr
fst
stos
push
cs
and
mov
ins
and
add
cmp
bound
sub
or
xor
ss
adc
ficomp
or
jb
sbb
adc
data16
cmp
(bad)
cs
sbb
in
inc
mov
add
sbb
pop
xchg
icebp
sbb
int3
adc
cdq
jb
jnp
sbb
sbb
add
jb
daa
adc
and
push
sub
mov
sub
push
sub
xor
xchg
pop
cs
xchg
inc
mov
into
ss
jg
sub
shl
enter
or
loop
and
lahf
adc
pop
not
jg
cmc
outs
mov
add
outs
and
sbb
pop
add
push
lds
ss
and
loopne
push
fisttp
xor
clc
sbb
icebp
xor
cmp
sub
mov
outs
stos
clc
or
je
and
or
xorps
and
sbb
add
shr
or
adc
cmp
mov
adc
stos
adc
pop
int
stos
adc
sbb
sbb
sbb
cmp
and
test
xor
jbe
adc
ror
ds
sub
cs
push
loope
push
xor
pop
dec
add
xor
jne
mov
jmp
jno
xchg
sbb
jae
pop
shl
mov
daa
cmps
dec
sub
movs
jp
sbb
jge
adc
sub
push
sbb
iret
int
ret
jb
or
pop
push
cmp
icebp
mov
ss
loope
ins
jno
or
(bad)
stc
sub
pop
dec
sbb
call
lods
push
push
sub
inc
jb
and
add
add
pop
sub
xchg
pop
xchg
xchg
xlat
sbb
out
daa
or
pop
aas
adc
mov
aas
jns
add
push
ins
and
in
add
push
xchg
aaa
or
add
rol
repz
pop
or
mov
cmp
int3
daa
jbe
jge
jmp
push
adc
lods
sub
push
fstp
adc
pop
mov
cdq
xor
js
sub
xchg
pop
sbb
out
inc
adc
xlat
add
xor
clc
push
popf
xchg
cmp
ret
push
or
adc
xor
jb
cmp
inc
jmp
fadd
pop
daa
mov
retf
sub
push
in
cwde
adc
xor
xor
push
and
push
cmp
sub
cwde
stos
adc
push
sar
inc
outs
adc
sub
jmp
pop
and
sub
dec
jns
sub
lds
xor
and
test
ins
sbb
out
mov
xor
(bad)
out
adc
xor
ds
adc
cmps
hlt
sub
leave
dec
sbb
cdq
mov
sub
iret
xor
pop
mov
sub
aaa
test
cs
cs
out
xor
mov
mov
adc
sbb
aaa
not
sbb
jg
sub
jmp
cmp
pop
sub
adc
test
pop
je
add
cmp
aas
sub
popf
and
or
xor
add
stc
or
pushf
push
repz
pop
shr
mov
inc
out
cmp
sub
adc
repz
cmp
test
mov
adc
pop
jbe
and
sbb
sub
jne
ds
lods
lea
cld
cmc
xchg
add
(bad)
bound
adc
add
inc
imul
inc
cmp
and
(bad)
out
and
mov
pop
aaa
nop
mov
xor
cwde
enter
out
push
mov
mov
adc
jo
sub
test
cmp
mov
adc
sbb
and
mov
in
aaa
adc
cmps
out
xor
mov
xor
(bad)
xchg
cmp
xchg
xlat
cmova
int3
adc
fstp
retf
daa
fild
sub
jae
ss
into
(bad)
test
cmp
xor
mov
sbb
loop
sub
xor
inc
pop
mov
pop
add
shl
outs
xchg
jae
jp
(bad)
cmp
inc
sub
inc
out
repnz
mov
mov
fdiv
pushf
and
xchg
lock
addr16
add
or
(bad)
aam
xor
sahf
jae
cmp
add
icebp
push
xchg
push
test
xchg
and
ja
les
cli
int
add
cld
cmps
pop
jl
cmp
sub
ss
mov
mov
sub
pop
cdq
in
sub
fsubr
test
jmp
xchg
push
and
iret
or
adc
ss
add
retf
icebp
test
rdmsr
adc
repnz
push
cmp
sbb
aaa
push
dec
mov
or
pop
cmps
jns
movs
scas
jne
shl
sbb
jno
mov
adc
and
push
add
add
lea
or
fadd
stos
mov
ins
cmp
adc
cs
fsubr
sbb
add
cmp
inc
xor
fisttp
cdq
daa
push
adc
push
int
xor
and
cdq
inc
push
js
mov
xor
fimul
adc
add
adc
test
or
cmp
dec
(bad)
pop
mov
add
and
mov
repz
cmp
stos
cdq
sbb
jmp
mul
jp
xor
cmp
pop
xor
(bad)
push
pop
xchg
mov
push
and
fdiv
aas
das
pop
xor
push
ret
pop
sub
and
mov
sub
add
and
sub
dec
mov
push
pop
push
add
cmp
pop
inc
sahf
or
jmp
pop
in
xlat
inc
popf
xor
(bad)
xor
loope
es
das
ret
arpl
bound
push
mov
(bad)
fisttp
adc
hlt
xor
mov
loop
mov
jl
dec
call
popf
outs
ja
jmp
or
sbb
add
gs
leave
pusha
pop
xor
loope
aas
not
and
test
adc
arpl
mov
sub
xor
push
inc
or
inc
addr16
push
inc
aaa
sub
and
clc
aaa
mov
mov
add
or
dec
out
shl
or
and
mov
aam
mov
jg
dec
add
jne
or
or
dec
daa
jmp
add
mov
test
or
add
lock
in
pop
popa
nop
pop
cmovl
in
es
(bad)
test
leave
movs
xor
cmp
jecxz
cmp
cmps
sub
loopne
aaa
sub
cmp
push
xchg
cdq
jge
add
mov
mov
adc
icebp
loopne
and
dec
and
std
call
xor
cmp
or
inc
jns
les
sub
hlt
iret
add
sbb
sar
mov
push
mov
xor
inc
lds
scas
scas
mov
xor
cld
sub
nop
movs
outs
cmp
or
sbb
inc
and
xor
mov
or
mov
cmp
mov
push
and
sbb
movs
and
lock
pop
aaa
test
data16
sub
in
cmp
adc
inc
push
dec
pop
cmp
nop
push
packssdw
and
pop
cmps
cmp
pop
or
into
adc
pushf
gs
push
imul
push
sbb
add
push
mov
jns
add
scas
pop
cmp
lock
das
adc
cmp
cli
(bad)
xor
rcr
mov
jmp
fsubr
cld
or
jnp
push
and
ja
mov
movs
cmp
mov
push
in
daa
sahf
adc
cmp
pop
aas
sub
aas
(bad)
rcr
push
xlat
xor
or
pop
sar
mul
(bad)
push
xchg
pop
iret
sub
and
in
cmp
call
xor
push
bts
mov
push
or
xor
int
ret
sbb
mov
sbb
or
sub
mov
es
mov
sbb
out
ss
sub
shl
xor
test
or
jne
xchg
xchg
pop
pop
pop
lds
fs
aaa
mov
ja
sub
sbb
shr
dec
xor
fiadd
or
push
sysenter
push
test
add
inc
repz
retf
dec
movs
aaa
movs
in
sub
loop
xor
jmp
push
adc
or
lock
add
sbb
call
push
adc
popf
push
cmp
mov
xor
pop
and
mov
jmp
dec
or
and
sbb
push
cmps
and
or
push
sbb
sub
add
dec
iret
or
sbb
xor
sbb
(bad)
mov
out
aas
cmp
adc
and
pusha
dec
mov
test
loop
adc
and
mov
jbe
adc
push
jecxz
rol
ficom
int
xchg
bswap
cmp
call
mov
push
pop
mov
or
fwait
xchg
or
sar
push
cwde
sub
bound
pop
xor
or
adc
pop
(bad)
lock
jno
and
mov
pusha
push
repz
cmp
cmp
out
dec
adc
mov
pop
sub
mov
(bad)
sub
pop
out
or
sub
popa
cmp
cmp
jg
es
pop
cmp
mov
xor
xor
or
ror
sbb
cwde
or
lahf
sub
mov
outs
xchg
pop
adc
(bad)
sub
adc
das
mov
or
pop
mov
and
push
jo
cmp
loop
lock
push
fstp
cs
jns
or
sbb
adc
xor
adc
pop
fbld
mov
xor
aas
add
scas
add
in
les
not
in
xor
xor
add
mov
push
out
push
hlt
xor
mov
ret
adc
mov
mov
mov
sbb
push
and
dec
sub
das
sub
mov
sub
or
nop
mov
add
xor
dec
aaa
ins
mov
cmp
es
adc
cdq
inc
mov
pop
push
adc
push
rol
inc
mov
mov
aaa
mov
cmp
cld
pop
shl
ins
mov
cmp
mov
mov
aas
loopne
pop
pop
cmp
xchg
xor
(bad)
aas
jb
mov
arpl
inc
das
call
dec
xchg
adc
mov
inc
sub
mov
mov
jns
sbb
loop
pop
adc
add
aam
xor
jae
dec
sbb
inc
pop
cmp
jmp
adc
add
sub
ins
das
cli
out
add
movs
scas
adc
dec
test
pop
mov
fild
sar
fs
cmp
int3
or
mov
sub
cli
jae
sub
add
mov
popa
or
mov
cmp
cmp
and
mov
mov
xor
test
es
pop
sbb
adc
xor
push
stc
sbb
das
imul
aad
mov
mov
and
mov
call
sub
cmp
and
mov
cwde
sbb
sbb
outs
inc
out
iret
dec
mov
xor
fcomp
xlat
sub
mov
cmova
lods
sub
inc
sbb
das
sbb
mov
cmp
cwde
jnp
jbe
and
fwait
jl
and
push
das
lods
and
daa
mov
rol
pop
dec
inc
or
jnp
jo
dec
xor
into
xchg
push
or
xchg
push
es
pushf
pop
push
rcr
mov
jge
js
jae
mov
inc
xor
cmps
retf
push
adc
sar
or
aaa
fcmovbe
or
das
mov
ja
xor
jl
adc
push
ret
or
and
push
push
inc
or
movs
push
sub
add
aad
push
sbb
add
sar
xor
xchg
fld
or
xchg
cmp
int
jbe
int3
lods
jp
mov
jbe
sbb
sbb
das
mov
sahf
pop
cmp
xchg
sub
sbb
pusha
mov
mov
cmp
hlt
(bad)
aad
or
outs
nop
xor
int3
dec
adc
aad
cmp
dec
and
push
push
and
jl
adc
add
lds
icebp
xor
jb
or
push
xor
sar
outs
inc
fidiv
and
stos
cmp
in
and
add
sub
fsubr
pop
jmp
xor
sbb
bound
push
mov
jbe
das
ret
add
dec
xchg
add
and
gs
out
pop
xor
stos
daa
ins
and
pop
clc
xor
xlat
lds
adc
mov
cmp
cmp
bound
mov
add
int
push
lea
adc
aas
add
test
sbb
std
mov
shl
and
xchg
jle
lods
in
adc
ret
jmp
add
cmp
cmp
sbb
mov
popf
and
xchg
fild
mov
add
sbb
sub
xor
dec
and
xor
sbb
repz
and
out
scas
and
aaa
push
cmp
cmc
sub
sbb
dec
mov
push
cld
push
cmp
aad
bndstx
jne
inc
adc
mov
push
pop
push
outs
sub
pop
pushf
(bad)
sbb
dec
data16
xor
dec
cmp
or
and
mov
pop
ins
push
or
inc
out
sub
lock
or
pop
in
movaps
xor
shl
xchg
adc
cs
and
jae
mov
lds
(bad)
lea
je
lods
and
mul
ss
movs
pusha
aaa
adc
fistp
and
xor
fild
icebp
xor
in
call
adc
repz
enter
cld
and
lock
add
jno
sbb
cmp
mov
mov
xor
(bad)
xor
sbb
fldenv
and
repz
std
call
popa
(bad)
in
mov
aas
sbb
in
rcl
push
ja
nop
outs
lds
cdq
movaps
retf
push
adc
shl
pop
cmp
loop
and
sbb
fs
pop
and
xchg
or
repz
imul
inc
or
jg
mov
fst
rol
ja
mov
adc
sub
setbe
pop
jbe
and
cld
cmp
sahf
dec
push
xor
jge
call
sub
push
ret
retf
cdq
sub
stos
sti
or
clc
jo
cmp
adc
add
xor
test
jbe
gs
sub
adc
xor
fdiv
lods
cmp
das
or
loopne
cmp
mov
dec
sub
jmp
sub
mov
and
shl
push
push
push
sbb
jo
mov
add
inc
or
nop
xor
fist
mov
xor
pop
push
inc
ins
mov
push
out
(bad)
xor
shl
push
pop
and
xor
adc
cmp
push
sub
and
add
cmp
pop
and
dec
or
bound
and
xor
(bad)
adc
sbb
fwait
int
or
popa
pop
loope
movs
sbb
fcmove
cmp
outs
pop
and
outs
push
pop
leave
daa
sbb
das
inc
repz
scas
jne
cmp
adc
push
or
mov
sbb
or
xchg
in
ds
cld
cmp
lds
or
inc
ins
mov
sbb
mov
es
jbe
in
arpl
sub
cld
pop
sbb
dec
or
sbb
or
xor
or
jnp
sbb
sti
mov
sbb
push
dec
jno
mov
inc
and
cmp
rcr
dec
push
bound
and
adc
rdpmc
push
nop
mov
adc
cli
or
push
cdq
and
pop
(bad)
push
aas
xchg
jmp
out
mov
xor
and
push
das
push
mov
adc
add
xchg
aam
xor
push
ins
add
push
lahf
cmp
push
ror
cmp
sub
pushf
das
sbb
(bad)
out
sub
push
cmps
cs
cmp
outs
mov
outs
leave
pop
add
cdq
shr
gs
sti
xor
xor
mov
mov
jle
xor
mov
out
xchg
jp
and
cdq
loopne
lods
cmp
add
sbb
sub
shl
or
rcl
and
pop
add
sahf
adc
pop
sub
inc
xor
aas
xchg
ss
not
and
lods
inc
adc
fsubr
sbb
add
dec
rol
dec
cmp
inc
iret
mov
pop
movs
jmp
or
and
mov
push
shl
mov
sbb
and
jecxz
and
sbb
xor
mov
inc
push
pop
mov
cmc
sub
jg
inc
and
leave
adc
lock
ins
xor
inc
adc
das
cwde
fmul
mov
cli
jns
fst
and
std
repz
jmp
push
rcr
ins
jo
sub
and
xchg
or
fimul
or
(bad)
sub
jbe
sub
dec
js
adc
out
cs
shl
daa
(bad)
fisubr
aad
pop
sub
sbb
pop
ja
adc
ins
sbb
mov
sub
in
sbb
pop
fnstcw
ss
adc
pop
sub
push
stos
add
xchg
das
fdivr
clc
add
mov
jmp
add
daa
imul
mov
repz
xchg
or
sub
or
out
cdq
ror
loop
sbb
mov
out
(bad)
into
pop
push
sub
int
js
xchg
push
lea
sbb
sub
(bad)
jmp
add
pop
aas
fcomip
sbb
(bad)
enter
mov
and
dec
popa
xor
xor
cli
add
mov
fcom
adc
std
sbb
xor
ja
pop
push
enter
lods
push
push
or
and
dec
or
push
repz
shr
sbb
cmp
inc
test
sub
jae
sahf
out
sbb
call
adc
pop
mov
cmp
mov
add
stos
call
sub
add
outs
xchg
or
daa
cmp
add
inc
cmp
int
inc
sub
or
inc
jle
push
test
and
xor
test
sbb
or
in
jl
or
mov
retf
push
jl
mov
das
adc
cmps
int
sbb
stos
in
cmp
fistp
ror
add
jb
cmp
and
sbb
mov
data16
inc
sub
out
cmp
aas
fidivr
push
or
adc
add
xchg
or
fmul
add
mov
cmp
mov
hlt
mov
daa
movs
or
cmp
mov
dec
sbb
sub
retf
jg
add
ror
jno
sti
add
movzx
pop
pop
and
inc
loop
sti
add
or
or
push
or
jle
and
into
adc
mov
add
jmp
add
gs
fist
rdmsr
or
add
jle
das
push
jecxz
add
sbb
cmps
(bad)
sbb
lds
adc
dec
mov
or
(bad)
cld
cs
push
or
sub
sti
cs
inc
fistp
add
adc
xchg
stc
sub
inc
xchg
xchg
push
jp
jne
xor
cvtps2pi
jmp
mov
push
das
or
cmp
mov
push
sbb
and
lods
(bad)
xchg
and
(bad)
adc
out
jmp
in
rcl
mov
pop
push
lock
cld
ficom
sbb
sar
jmp
sub
xchg
cmp
test
mov
div
and
jbe
add
dec
fsub
popa
xor
and
push
xor
inc
je
daa
mov
inc
cmp
pop
mov
and
and
xor
xchg
xchg
scas
sub
in
xor
lods
sbb
repnz
or
cmp
or
mov
xor
pop
xor
mov
or
outs
push
xor
imul
ds
mov
imul
or
or
dec
add
test
and
mov
test
and
dec
leave
cs
pushf
mov
pop
xor
arpl
cmp
push
add
mov
dec
iret
sub
je
jbe
mov
retf
rol
in
inc
push
or
les
cmp
aas
add
data16
mov
aad
push
xor
dec
stos
or
push
repnz
pop
sahf
cmp
popf
or
sbb
inc
xchg
push
sbb
push
gs
dec
ret
xor
imul
test
xor
js
add
scas
mov
call
add
jb
sbb
pop
mov
push
xor
add
push
fadd
add
adc
and
lods
outs
or
adc
pop
sub
stos
mov
sbb
js
add
mov
aas
add
arpl
fwait
outs
or
stc
hlt
jbe
fcomp
adc
push
movs
or
fs
fpatan
or
mov
lea
cmp
cmps
cmp
sub
jnp
icebp
sbb
push
ja
adc
shl
aas
and
(bad)
out
cmp
sub
icebp
sub
push
int
es
sbb
sub
call
mov
add
push
movs
mov
or
adc
xchg
loope
jae
imul
in
xchg
jo
int3
sub
adc
or
mov
jo
inc
das
jmp
add
popf
adc
pop
mov
adc
inc
out
ss
pushf
aam
outs
fsubr
das
and
mov
(bad)
mov
sbb
pop
ds
nop
sub
pop
(bad)
push
cmp
retf
nop
sub
scas
das
(bad)
jge
sahf
adc
sbb
lds
sub
hlt
and
call
les
cmp
push
test
outs
sbb
jno
or
push
test
cmp
ret
rcl
loope
out
hlt
or
or
sbb
inc
sbb
sbb
stos
mov
ret
sbb
or
mov
xlat
and
repnz
mov
sub
cmp
xlat
mov
add
sbb
repz
xor
ss
xchg
es
mov
test
cs
sbb
jmp
and
jecxz
sbb
mov
pop
push
add
jo
xor
cmp
jecxz
pop
xor
cmc
nop
or
imul
jp
inc
adc
xor
cmp
in
fstp
mov
cmp
jne
test
or
xchg
sbb
push
add
das
clc
in
sbb
out
xchg
aas
push
add
pop
or
and
xchg
ret
hlt
pop
ss
pop
sbb
push
adc
or
ret
sti
aad
xor
fmul
and
rcl
leave
or
jo
inc
sub
adc
jg
xor
jmp
or
outs
ds
and
and
cdq
adc
popf
lods
enter
repnz
test
or
fscale
das
cdq
push
add
push
xchg
cmp
jnp
push
out
(bad)
not
ffree
rol
cwde
out
push
sbb
inc
push
dec
add
mov
lock
or
push
cs
aam
sbb
cmp
add
push
repnz
or
mov
adc
mov
es
sbb
outs
das
je
mov
adc
add
scas
js
dec
pop
xor
lea
jg
in
add
pop
and
or
das
test
ss
pop
repnz
scas
rcl
sar
mov
dec
cdq
pop
cmp
fisub
add
pop
xor
xchg
xchg
inc
xchg
adc
test
inc
vucomisd
cdq
loopne
arpl
or
into
shl
loopne
mov
add
and
add
cmp
adc
sbb
pushf
into
repz
lods
stc
adc
mov
inc
cmp
sahf
mov
sub
aaa
sbb
test
aam
jae
and
mov
sbb
(bad)
out
add
pop
xchg
aaa
and
jmp
and
add
mov
or
ins
(bad)
aad
cmp
xchg
ret
mov
addr16
sbb
jnp
and
adc
sbb
jae
xor
mov
add
mov
or
and
(bad)
dec
aas
adc
(bad)
ret
stc
cmp
shr
sbb
sub
jbe
xor
inc
cli
and
jge
cmp
dec
push
lods
add
add
push
test
bound
loop
stos
and
sub
es
(bad)
shl
sub
or
rcr
pop
ret
or
and
aas
retf
bswap
shr
adc
jge
and
sti
and
sahf
and
cmp
xchg
jnp
cmps
test
xor
std
test
sub
bound
psubb
xor
cwde
cmp
mov
adc
int3
add
add
shr
sub
inc
and
movs
cli
icebp
xor
pop
in
cmp
push
jns
das
rcr
test
sbb
and
int
jno
or
inc
mov
pop
jbe
aad
inc
cmp
adc
sbb
je
sbb
sub
jmp
and
xchg
pop
(bad)
or
in
shl
push
inc
pushf
xor
add
and
xor
daa
lds
inc
and
and
push
hlt
call
push
mov
or
jmp
or
stos
pop
add
jmp
push
xor
dec
jnp
or
jo
or
pop
lods
add
dec
pusha
cmps
cs
sar
scas
popf
add
adc
mov
or
ret
ds
or
xlat
leave
xchg
daa
out
cmp
mov
clc
or
cwde
lea
or
jge
scas
aaa
dec
fisttp
popf
test
add
adc
in
das
leave
xchg
pusha
cs
or
aaa
mov
hlt
adc
inc
(bad)
push
or
adc
xor
outs
cmp
cmps
fnstsw
add
sbb
add
mov
sbb
mov
pusha
ds
cmp
clc
jb
sub
jo
add
out
jne
js
mov
lock
jle
cmp
xor
add
ds
jo
or
sbb
out
mov
je
push
jmp
(bad)
push
lods
cmp
cmp
out
mulps
or
shr
push
xchg
or
xor
inc
sub
rcl
xor
(bad)
pusha
add
(bad)
mov
cld
xor
ins
sbb
test
sub
lock
sub
cwde
jmp
and
imul
inc
xchg
arpl
es
and
xor
test
pop
fs
aam
bound
daa
int
je
xchg
cmp
pop
jle
sub
mov
pop
dec
dec
cmp
and
add
popa
push
lods
cmp
add
sbb
lahf
cmp
aad
dec
mov
cdq
and
aaa
adc
or
adc
adc
and
pop
pop
jp
xor
test
and
cs
add
dec
adc
(bad)
mov
or
cmp
sbb
fwait
mov
sbb
and
sub
and
adc
sub
call
sub
xor
in
cs
and
sub
inc
mov
dec
xor
fisttp
sbb
sbb
push
mov
xor
xor
add
mov
jb
or
and
out
cmp
call
fmul
and
mov
aaa
adc
cmp
pop
xchg
sbb
pop
aaa
into
push
popf
or
xchg
xor
xchg
int
mov
sub
inc
fidivr
cli
sub
arpl
cmp
cmp
add
xchg
cmp
push
or
or
popa
pop
cmp
arpl
push
repnz
push
push
adc
lods
and
sbb
ss
pop
sub
pop
ret
xor
lock
mov
xor
add
pop
fist
add
rol
ds
aas
fst
js
jl
out
jl
sbb
inc
adc
adc
xor
int3
and
adc
push
leave
or
xor
test
cmp
inc
jnp
ja
ret
add
mov
in
sub
sub
and
cwde
test
cmp
shr
cmc
ss
push
fiadd
sbb
daa
xchg
xor
test
sbb
pop
addr16
jp
sbb
sub
or
sub
sbb
clc
xor
lods
mov
inc
and
xchg
or
and
add
add
ret
cli
iret
and
xchg
scas
sub
lgs
nop
aaa
mov
xchg
and
int
sysexit
adc
rcl
in
(bad)
bound
pusha
sub
not
sbb
les
das
lds
ins
sbb
xchg
call
pop
dec
sbb
sub
mov
pop
push
(bad)
xchg
adc
cmp
cmp
in
mov
pusha
popf
or
neg
adc
ss
or
or
pop
xor
jg
sub
cli
dec
push
stos
sub
pop
pop
dec
mov
pop
jmp
jmp
popf
sbb
(bad)
adc
or
popf
aas
sub
mov
xor
call
sbb
xchg
sub
ja
ds
lods
sub
cwde
push
or
pop
sbb
mov
push
xor
xor
test
mov
das
sbb
prefetchnta
and
in
xchg
push
adc
aas
xchg
cmps
fbstp
rcr
push
dec
add
mov
jl
xlat
or
sbb
cli
inc
sbb
sti
inc
adc
xchg
pop
add
xlat
jo
(bad)
(bad)
daa
adc
push
test
and
and
pop
xchg
jae
repz
cmp
test
add
ror
out
push
adc
sbb
sbb
jecxz
or
add
xor
xor
neg
cmp
or
sbb
xchg
add
dec
sub
jg
mov
or
je
and
fist
add
lock
sbb
mov
add
pop
mov
or
dec
cmp
cld
popf
and
pop
test
aas
and
mov
out
daa
inc
arpl
cmp
sbb
xor
pop
sar
aam
pop
aaa
cdq
cld
popf
cmp
or
ficom
mov
sub
inc
(bad)
loope
mov
push
or
add
test
cmp
inc
repz
das
nop
out
push
(bad)
lods
mov
and
jge
das
jb
jno
sub
das
mov
push
lods
sub
sar
mov
ds
adc
sub
xchg
mov
or
sub
cmp
push
lock
or
jb
ins
aam
push
(bad)
jmp
push
pushf
clc
xchg
or
cmp
add
and
das
adc
iret
adc
iret
xor
(bad)
push
sbb
in
mov
imul
adc
mov
cmp
mov
cmps
pop
arpl
xor
jne
or
stos
sahf
sbb
or
shl
sub
sub
sub
inc
and
cmp
and
pop
ja
popa
out
pop
sbb
fdivr
adc
loopne
ss
jnp
xor
sub
mov
ds
into
pop
inc
mov
cli
xor
mov
push
das
retf
xor
adc
shl
mov
inc
or
sub
xor
push
or
fs
sub
popf
gs
push
mov
stos
or
dec
stos
cmp
or
mov
pop
push
cmc
outs
fdiv
fs
add
je
pop
outs
outs
inc
cmp
sbb
test
mov
adc
stc
iret
arpl
pmulhuw
int
call
sbb
retf
xchg
push
ss
mov
clc
and
pop
and
cmp
(bad)
les
rol
cmp
mov
xor
fwait
adc
mov
imul
xchg
fild
push
movs
in
lods
adc
mov
jmp
shl
sbb
in
xchg
and
mov
push
test
hlt
or
ja
mov
hlt
test
pop
popa
mov
xor
arpl
fsubp
gs
mov
(bad)
mov
cmp
and
adc
aas
add
movs
push
out
in
loopne
add
loopne
add
ret
jbe
sbb
sub
dec
pop
cs
dec
cmp
data16
call
int
scas
(bad)
dec
xor
and
sub
cmp
xchg
or
or
outs
adc
sbb
jl
jo
xor
mov
stos
outs
and
and
add
pop
scas
inc
push
pusha
push
cmp
ror
push
xchg
xchg
or
ins
xor
jle
sbb
rcr
add
ret
and
xchg
add
dec
sub
xor
cld
fcomp
or
fiadd
mov
and
mov
cmp
dec
ds
test
ss
cmc
add
add
cmps
or
aas
mov
pop
mov
and
jle
adc
or
sub
out
pop
fsubr
in
sbb
xchg
fwait
inc
daa
aas
bound
sti
dec
push
add
stos
es
dec
scas
ds
jne
popf
aaa
jbe
or
sbb
push
sub
call
add
mov
mov
clc
jl
sub
push
jnp
cmp
adc
mov
lods
jecxz
or
xchg
neg
div
mov
ds
xor
sub
or
mov
mov
xor
ror
in
retf
cmp
into
cwde
cs
jp
xor
enter
push
push
daa
and
test
xor
(bad)
cs
cmp
sbb
mov
pusha
sub
dec
or
mov
pop
dec
shr
xor
std
sub
jmp
cs
xor
and
fwait
push
aaa
cdq
lds
fisttp
or
cli
loop
aam
call
xor
inc
sub
sub
or
outs
mov
xchg
jnp
pop
es
mov
sub
in
adc
cmp
xor
mov
wbinvd
mov
(bad)
and
int3
cmps
or
stos
adc
mov
cmp
cld
imul
in
cwde
cli
sub
loopne
div
mov
sbb
lds
je
cld
push
scas
mov
sbb
mov
and
inc
movs
cmp
mov
in
pop
ins
in
jbe
(bad)
cmp
push
std
mov
adc
xor
add
sbb
push
clc
and
mov
or
shr
cmps
out
and
(bad)
sbb
pop
sub
lahf
mov
push
cli
inc
sbb
and
pusha
sub
loopne
adc
les
sbb
les
xor
and
xor
cmp
(bad)
cdq
add
and
inc
hlt
jo
aad
(bad)
sub
mov
or
mov
sub
lds
push
ins
push
cmp
arpl
xchg
and
sub
aas
in
cmc
test
or
out
mov
test
push
in
lock
push
jae
imul
xor
daa
adc
retf
das
stc
sbb
xor
arpl
pop
sub
or
pop
xchg
(bad)
mov
ret
outs
inc
adc
push
push
cmp
rcr
mov
adc
rol
shl
out
add
mov
stos
in
jl
retf
cld
adc
and
dec
adc
sbb
push
mov
mov
mov
adc
cmp
add
pop
cwde
sbb
int
dec
xor
(bad)
jmp
mov
adc
mov
push
(bad)
jbe
loop
imul
inc
fist
stos
mov
and
mov
cmp
sbb
mov
and
movs
in
and
cmp
sbb
pop
movs
cmp
cmp
push
adc
clc
jae
rcl
adc
aam
sbb
mov
clc
xor
leave
adc
cmpxchg
sti
mov
cmps
push
and
adc
pop
cmp
mov
adc
xchg
push
ss
fdivr
ret
fdivr
xor
pop
movs
sub
dec
aad
jp
out
test
nop
xor
add
out
pop
xchg
ja
pop
or
mov
jmp
fnstsw
push
leave
xor
xor
inc
fsub
nop
inc
xor
or
out
aas
cmp
xchg
xor
fisubr
add
xor
test
fidivr
add
sbb
jno
xor
test
sub
push
dec
xchg
cmp
les
movhps
adc
cwde
cmps
sub
sbb
pop
in
cwde
xor
inc
in
sub
ror
and
xchg
mov
add
rcl
outs
(bad)
jno
pop
pop
sti
add
ret
xor
ret
in
out
push
or
in
daa
jmp
enter
jg
or
or
(bad)
jmp
xor
jge
in
fsub
bound
push
(bad)
cmp
(bad)
mov
cmp
xor
cmp
and
lods
or
rcl
push
jmp
sbb
add
sbb
sbb
mov
cmp
outs
cmp
mov
inc
cmp
int3
sub
or
xor
sub
dec
lods
ds
add
scas
pop
cmp
das
cmp
jns
or
es
cld
inc
xor
sbb
mov
aas
jecxz
push
clc
fst
sbb
call
addr16
sbb
fistp
daa
xchg
mov
shl
pusha
xor
(bad)
mov
mov
pop
stos
xor
xchg
mov
cmp
lods
mov
push
je
nop
or
mov
adc
sub
pop
dec
sub
dec
adc
adc
cs
and
or
sbb
dec
push
and
out
in
sbb
adc
inc
and
rcr
jb
movs
and
mov
sub
lods
and
sub
lea
mov
add
out
sbb
xor
inc
aad
xor
inc
cmps
pop
ins
push
fadd
fist
and
adc
into
xor
mov
cmp
adc
(bad)
aad
cs
sub
pop
sbb
cmp
retf
push
add
xor
lods
sub
push
icebp
push
jmp
mov
pop
test
mov
jmp
sub
loop
cmp
aad
push
add
or
inc
test
mov
es
mov
sbb
or
xchg
push
pop
adc
out
add
dec
in
cmp
call
or
xor
outs
sub
add
aaa
push
cs
test
aas
ja
arpl
fadd
fbld
imul
int3
aas
iret
push
fdiv
dec
stos
sbb
xor
mov
mov
xchg
pop
or
cld
fwait
or
popa
and
ss
(bad)
or
add
push
jmp
ins
sbb
das
sub
jl
sbb
in
aam
int
sbb
and
sbb
fwait
add
xor
sub
mov
add
jo
add
jbe
pop
test
pop
das
js
xlat
pcmpgtw
xchg
adc
pop
mov
int3
push
popa
cmp
xor
and
in
adc
sbb
push
sbb
or
leave
aaa
pop
adc
adc
(bad)
cli
cmp
jae
add
js
add
adc
cmps
js
xor
add
outs
adc
xor
push
jo
and
mov
sbb
and
out
add
in
das
or
dec
push
mov
jae
ds
xor
movs
ror
sti
add
sbb
sub
jge
pop
cmp
aaa
add
movs
fdivrp
sbb
retf
cmp
int
adc
sbb
sbb
mov
or
aam
mov
push
sbb
imul
sub
cmp
and
inc
or
sub
aas
leave
mov
stc
pop
or
and
in
adc
int
sbb
in
xchg
or
aas
and
pop
hlt
outs
xchg
sub
inc
mov
adc
jmp
xchg
jae
add
pop
sbb
inc
leave
xor
movs
mov
fstp
push
sub
(bad)
or
adc
pop
pop
shr
and
fwait
or
or
lods
pop
out
push
ds
(bad)
sbb
neg
or
adc
lods
sbb
call
add
sbb
sbb
adc
jmp
xor
or
adc
xor
jns
ficom
add
stos
add
iret
es
in
adc
rcr
clc
xchg
and
xlat
or
or
enter
cmp
xor
stos
sahf
sbb
call
call
pop
pop
jle
or
(bad)
out
dec
add
or
jl
xor
adc
mov
mov
xchg
and
jne
push
add
push
cwde
pop
jg
xor
xor
fimul
mov
in
loopne
lock
adc
popa
stos
mov
and
mov
pop
mov
add
pop
into
cmp
mov
xor
jns
pop
and
xchg
(bad)
mov
add
pop
adc
scas
xor
rcr
push
inc
(bad)
call
outs
str
add
jg
and
sar
cmp
sub
adc
xchg
and
push
jmp
mov
in
loope
loopne
mov
sub
out
cmp
mov
xor
adc
adc
add
pop
lods
sbb
adc
xor
ret
pop
mov
sbb
je
mov
inc
mov
and
or
adc
fldcw
mov
dec
out
cmps
sub
cwde
ja
call
mov
clc
adc
xchg
jle
aad
js
sahf
xor
pop
(bad)
retf
in
inc
lds
dec
(bad)
jnp
cli
pop
mov
push
outs
loope
adc
xchg
les
pop
mov
add
bound
xor
jae
mov
fsub
pop
push
mov
out
and
aaa
push
pop
scas
clc
(bad)
sub
test
and
sahf
sbb
imul
push
jne
jmp
xor
nop
xor
and
js
imul
push
cmp
ins
push
call
sub
push
adc
cld
sub
stos
adc
adc
push
mov
hlt
adc
iret
je
add
and
push
mov
xor
push
sub
sbb
sbb
fmul
sub
mov
jecxz
cmps
xor
jae
add
sub
stc
stos
push
cmp
push
xchg
pop
adc
mov
add
push
push
ret
or
push
ret
pop
add
int3
aas
loope
add
adc
fdivr
xor
das
arpl
in
sub
or
add
cmps
push
sbb
or
mov
xor
adc
push
xor
cmp
xor
out
das
ja
jbe
shl
jle
out
sub
hlt
jecxz
push
jge
and
int3
sub
adc
cmp
mov
cmp
and
adc
push
pop
inc
and
dec
mov
or
ins
les
dec
add
inc
adc
rcl
and
arpl
or
inc
sbb
sub
jae
xor
dec
add
dec
pop
nop
adc
add
icebp
adc
cmp
(bad)
sbb
xor
(bad)
or
xor
add
add
out
or
xchg
jae
or
mov
xlat
push
sbb
jp
outs
daa
setge
add
fcmove
cmc
and
shr
aas
add
fcom
out
sti
es
fwait
sbb
sbb
add
pop
sub
jmp
sub
and
bound
sub
or
cmp
inc
mov
leave
inc
jmp
aaa
aam
mov
hlt
pop
pop
dec
add
push
or
push
ror
sbb
mov
gs
jne
and
ret
bound
rol
mov
and
ss
icebp
inc
add
(bad)
mov
xchg
push
dec
aas
shl
loope
mov
ss
pop
add
xchg
pop
xor
jmp
cs
push
add
push
or
cmp
jb
test
cmp
lods
rcl
or
sub
pop
add
push
and
add
pop
out
aaa
fstp
daa
xor
jg
cmp
add
push
repnz
dec
popf
call
xchg
scas
add
jecxz
sub
in
neg
sub
repz
cmp
xchg
inc
push
sbb
fild
.byte
.byte
loope
