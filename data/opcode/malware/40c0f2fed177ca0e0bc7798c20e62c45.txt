add
in
into
jle
test
inc
xor
dec
mov
pop
mov
push
adc
xchg
cli
into
jbe
mov
inc
and
int
lods
inc
xor
int3
pop
or
inc
xor
cmc
dec
mov
repz
js
popa
inc
push
and
xchg
dec
mov
mov
push
adc
sub
test
sbb
clc
int3
xlat
pop
sti
adc
lods
das
xor
jb
push
xor
in
cmp
or
sbb
test
mov
pop
sti
adc
lock
mov
int3
out
inc
mov
or
add
xor
sub
xor
add
test
mov
xor
push
into
inc
add
cmp
add
dec
inc
(bad)
ror
ss
cmp
and
es
xchg
cmp
pop
xor
push
jno
dec
lods
into
jo
push
jge
dec
lods
adc
adc
xor
pop
xor
lods
mov
adc
pop
xor
sbb
pop
and
push
sbb
add
cdq
into
dec
add
lods
sbb
push
mov
pop
sbb
push
fcmove
push
mov
mov
and
ds
retf
(bad)
dec
mov
add
push
je
out
adc
pop
inc
ror
repz
(bad)
test
inc
cmc
or
inc
xor
dec
ficom
inc
xor
fsub
push
and
out
inc
cmp
add
or
(bad)
test
inc
or
scas
adc
es
mov
xor
(bad)
cmp
or
cmp
dec
lods
lods
into
jb
inc
mov
test
inc
outs
push
repz
mov
xor
xor
or
lods
xchg
and
xor
mov
xor
inc
xor
mov
xor
jb
std
and
or
test
mov
xor
inc
xor
and
lods
sub
pop
sub
xor
jo
inc
pop
dec
or
mov
xor
cwde
popa
repnz
lods
mov
xor
lods
lods
jp
lods
inc
mov
mov
sti
test
mov
xor
xchg
lods
inc
xor
inc
test
and
inc
fimul
sti
adc
lea
jns
lods
das
xor
das
xor
das
xor
xor
lods
ret
inc
mov
hlt
and
mov
push
xor
cmp
lods
enter
mov
jle
lods
enter
mov
loop
lods
inc
mov
aas
xor
or
lods
fidiv
inc
add
mov
sub
mov
test
cmp
or
inc
add
in
scas
push
lea
push
or
(bad)
hlt
sbb
push
mov
fld
adc
mov
test
mov
repnz
int3
cmc
push
repz
sti
iret
clc
int3
xlat
pop
fs
adc
retf
int3
ja
and
add
and
mov
dec
push
adc
xor
lods
das
xor
das
xor
fmul
jns
lods
cmps
jo
inc
mov
or
sub
fcom
jns
das
xor
fcom
jns
lods
xchg
jo
inc
mov
in
cmp
or
mov
or
retf
inc
mov
lods
inc
xor
mov
int3
ja
and
add
in
sbb
adc
mov
adc
and
add
and
mov
adc
lods
mov
cmp
fwait
cmp
or
cmp
fld
int3
inc
jbe
jns
mov
lods
mov
into
in
cmp
or
or
push
lods
xor
inc
cmp
fld
int3
inc
dec
add
in
scas
xor
push
pusha
or
sbb
adc
pop
sti
adc
hlt
bound
sub
retf
inc
xor
test
test
push
clc
lods
(bad)
push
lock
scas
pop
cmp
and
sbb
and
retf
cmp
int
jmp
mov
mov
scas
dec
mov
xchg
jl
jns
push
mov
dec
sub
mov
int
pop
into
ja
xchg
add
jns
into
ja
inc
push
mov
enter
pop
int3
ja
jmp
mov
jl
jle
mov
cmp
in
lds
or
call
mov
int
lods
scas
cmp
pushf
xchg
push
xchg
dec
std
xor
inc
ficomp
fiadd
pop
sti
adc
pusha
or
aam
popf
mov
enter
aam
popf
mov
test
repz
lds
or
imul
retf
xor
push
inc
fldenv
and
fstp
and
sbb
adc
xchg
inc
xor
push
add
jno
cmp
test
jmp
mov
mov
inc
mov
repz
inc
mov
iret
repnz
outs
adc
pop
sbb
retf
call
push
mov
and
pushf
mov
sub
dec
or
into
dec
add
xchg
jg
mov
scas
repz
(bad)
mov
(bad)
outs
and
sbb
xchg
mov
cmp
add
retf
xor
push
sti
iret
clc
int3
xlat
pop
(bad)
adc
lock
cmc
dec
push
in
pop
jmp
inc
add
fldcw
inc
cwde
dec
or
into
dec
add
xchg
jg
mov
scas
repz
(bad)
mov
(bad)
outs
and
sbb
xchg
int
aad
jo
add
retf
xor
lods
inc
ins
push
test
sti
adc
sbb
into
in
fnstcw
or
lods
inc
int
aad
jo
and
fst
add
add
inc
or
loopne
cmp
(bad)
inc
add
in
scas
and
call
outs
inc
lock
mov
imul
cld
adc
inc
add
push
or
xchg
retf
int3
cmc
repz
test
inc
add
ret
ror
fidivr
mov
mov
sub
push
icebp
push
mov
jno
sti
lods
cs
mov
ds
jge
or
mov
cmc
push
repz
sti
iret
clc
int3
xlat
pop
sti
adc
add
mov
cmp
jmp
xor
sbb
inc
pop
repz
xor
mov
pop
or
mov
(bad)
inc
xor
test
sbb
xchg
dec
push
fs
xor
mov
add
xor
and
mov
xor
jo
lods
xor
lods
xor
jo
std
into
sub
dec
dec
test
pop
int
movs
int3
retf
int3
cmc
xchg
mov
inc
or
sbb
xchg
dec
(bad)
ficom
(bad)
adc
fmul
daa
in
inc
dec
lea
arpl
mov
mov
test
test
lods
enter
sub
fisubr
outs
(bad)
lds
fiadd
cmp
xor
bnd
adc
pop
pop
xor
das
xor
fbstp
xor
xchg
int3
movs
sahf
cmp
in
test
and
mov
test
pop
xor
mov
inc
xor
xchg
or
test
xlat
mov
mov
add
in
scas
cmp
test
fimul
push
mov
ins
push
test
lods
inc
xor
jg
xor
adc
xchg
and
sbb
and
mov
sub
mov
mov
rol
dec
enter
dec
mov
inc
xor
imul
jmp
pop
xor
pop
xchg
nop
push
pop
xor
int
movs
(bad)
pop
nop
push
pop
xor
popf
(bad)
shr
push
mov
pop
sbb
push
inc
xor
push
adc
cmp
pop
or
lods
enter
mov
leave
repz
(bad)
test
mov
ds
dec
lods
inc
fld
inc
xor
outs
enter
into
ja
es
int
mov
ja
cs
or
ror
push
inc
cmp
or
and
or
js
enter
rep
inc
inc
and
int
sub
add
xor
lods
xor
dec
lods
inc
xchg
mov
xor
pushf
popf
mov
cmp
inc
push
inc
or
sbb
ins
mov
xor
dec
int3
mov
push
mov
cmc
dec
dec
inc
xor
inc
out
enter
dec
pop
adc
ficomp
mov
xor
or
dec
add
cmp
pop
es
pop
(bad)
int3
ja
sub
sub
inc
cmp
fsub
pop
nop
push
pop
xor
jo
es
pop
es
sbb
int3
ja
and
(bad)
shl
push
mov
into
or
jb
mov
int3
repz
in
mov
xchg
mov
xor
jbe
xor
test
push
mov
out
inc
int
lods
inc
mov
rcl
int
xchg
(bad)
fst
nop
fld
pop
or
or
adc
repz
cmps
mov
repz
mov
hlt
mov
mov
jo
lods
sbb
xchg
dec
(bad)
ficom
adc
lods
add
xor
and
add
and
mov
sbb
add
test
ja
sub
shl
push
cmc
dec
push
inc
xor
adc
or
mov
cmc
out
int3
ret
or
push
xchg
dec
mov
cmp
dec
push
cmp
inc
mov
push
inc
mov
shrd
in
xor
or
cmp
test
aaa
lods
pop
pop
xor
dec
bnd
(bad)
push
lock
int3
retf
int3
ja
and
mov
push
inc
inc
pop
or
or
pop
enter
inc
and
add
and
mov
push
inc
add
inc
addr16
xchg
pop
xor
sahf
inc
or
mov
cmp
jl
or
and
or
sbb
inc
je
call
inc
cmp
repz
or
cmp
or
push
int
movs
sub
fcmovu
fld
in
inc
xor
mov
fiadd
lods
das
lods
das
xor
xor
pushf
dec
lods
lods
cs
inc
mov
lods
das
xor
inc
or
into
ja
and
mov
push
add
inc
cmc
and
pop
or
or
pop
(bad)
mov
(bad)
in
aaa
xor
mov
test
lods
mov
lods
enter
das
xor
jo
push
xor
in
aaa
xor
xor
in
xor
imul
adc
lods
cs
inc
popa
pop
cli
inc
push
cmc
pop
mov
mov
xor
popf
sbb
and
hlt
mov
int3
rep
sub
fisubr
inc
xor
push
enter
mov
leave
repz
sbb
int3
mov
inc
mov
dec
int3
mov
push
mov
fst
inc
xor
lods
adc
inc
ficom
inc
xor
push
adc
int3
repz
lods
sti
not
mov
mov
pop
xor
mov
or
popf
(bad)
rol
and
shl
push
mov
jo
std
into
or
cli
or
bnd
(bad)
inc
xor
push
adc
xor
push
adc
(bad)
lods
inc
xor
mov
inc
mov
out
adc
or
shl
push
mov
jo
std
into
or
cli
cmp
repnz
xor
or
sub
int
ins
mov
retf
repz
(bad)
test
jne
adc
jmp
mov
repnz
out
mov
int3
pop
xor
ror
div
std
into
or
cli
cmp
add
pusha
cmp
mov
mov
scas
inc
xor
inc
cmp
or
inc
pop
mov
xor
push
adc
int
imul
cmps
push
mov
pusha
or
dec
test
nop
mov
mov
scas
inc
xor
sbb
cwde
repz
mov
iret
repz
mov
jae
inc
mov
or
(bad)
test
repnz
push
mov
bound
jmp
mov
cld
inc
xor
dec
int3
mov
push
mov
(bad)
imul
and
lods
inc
pop
or
lods
sub
fidivr
pop
mov
psllq
xor
das
xor
jo
and
iret
repz
mov
int
cmp
or
dec
cmc
mov
mov
xor
popf
xor
and
pop
or
lods
sub
(bad)
pop
mov
psllq
xor
das
xor
jo
and
iret
repz
mov
int
cmp
or
dec
cmc
mov
mov
xor
inc
pop
aam
pop
xor
jae
inc
jmp
test
mov
adc
(bad)
out
inc
mov
repz
lods
mov
enter
rep
inc
inc
push
push
sahf
repz
mov
pop
or
lods
sub
fisub
mov
psllq
xor
das
xor
jo
and
iret
repz
mov
int
cmp
or
dec
cmc
mov
mov
xor
mov
imul
sub
fisubr
pop
mov
psllq
xor
xor
lods
inc
xor
sub
pop
pop
sbb
mov
repz
or
dec
cmc
mov
mov
xor
inc
pop
scas
pop
pop
xor
jae
inc
popf
(bad)
repz
(bad)
test
mov
jbe
lods
sub
mov
repz
lods
mov
push
mov
int
lods
inc
inc
adc
inc
pop
xchg
pop
pop
xor
push
adc
xchg
pop
mov
psllq
xor
xor
lods
inc
xor
cmps
mov
repz
mov
add
xor
jo
lds
push
clc
push
mov
int
lods
inc
inc
sub
inc
pop
jl
pop
xor
jae
inc
or
test
mov
cmp
sub
int
push
inc
xor
inc
xor
push
inc
inc
sbb
inc
enter
sub
adc
int
inc
push
hlt
or
xor
out
inc
xchg
imul
xor
lods
xor
inc
ins
aaa
or
int3
jmp
inc
jmp
mov
out
repz
mov
gs
and
into
add
test
std
int
push
adc
int3
repz
into
or
cli
gs
sub
mov
test
xchg
int
push
inc
mov
iret
cs
repz
mov
int
push
inc
cmp
or
repz
or
mov
test
leave
int
push
int3
icebp
push
rcl
push
call
inc
mov
repz
enter
mov
jmp
mov
add
and
mov
repz
sub
mov
repz
into
or
mov
inc
mov
add
add
or
enter
mov
out
push
mov
movs
fsubr
mov
mov
repz
mov
push
inc
cmp
or
rcr
push
mov
int
push
adc
or
mov
inc
mov
cmp
xor
arpl
repz
into
mov
push
mov
int
xchg
int3
ja
and
xor
and
mov
push
inc
cmp
or
scas
adc
lods
inc
mov
repz
into
mov
push
mov
int
mov
ja
movs
test
or
scas
inc
sub
pop
mov
xchg
push
mov
jae
and
iret
repz
mov
xor
cmp
repnz
inc
fild
scas
inc
xor
lods
mov
lods
inc
mov
iret
push
lock
push
mov
int3
repz
sub
mov
repz
lods
jmp
int3
jmp
shl
es
push
mov
int3
repz
xchg
repz
mov
int
push
(bad)
ficomp
mov
xor
or
xchg
push
mov
or
mov
xchg
lods
int
push
adc
test
mov
mov
or
rol
mov
add
int3
jmp
in
int
push
adc
xor
push
adc
(bad)
lods
inc
xor
mov
inc
mov
mov
rcl
sub
int
push
adc
pop
test
mov
enter
mov
add
out
or
inc
enter
sbb
aam
popf
mov
iret
retf
xor
lods
into
mov
push
mov
int
push
enter
mov
dec
repz
mov
aad
test
loopne
mov
cs
ss
inc
shr
mov
gs
add
test
jmp
dec
mov
lods
inc
xor
push
inc
mov
repz
sub
mov
repz
into
or
mov
inc
mov
mov
dec
mov
lods
inc
xor
push
inc
cmp
or
rcr
mov
xchg
push
mov
int
push
adc
adc
lods
popf
mov
or
shr
lods
inc
push
(bad)
adc
cmp
or
clc
inc
repz
mov
xor
mov
inc
repz
mov
int
imul
push
jne
jmp
mov
mov
mov
int3
rep
inc
xor
popf
add
and
pop
or
sahf
repz
mov
int3
repz
sub
mov
repz
lods
and
mov
mov
mov
jb
xchg
inc
xor
int3
mov
push
mov
int
push
enter
mov
retf
mov
int
push
adc
xor
test
mov
repz
sub
mov
repz
lods
pushaw
lods
inc
mov
mov
int3
icebp
(bad)
adc
int
push
inc
inc
or
sar
popf
mov
sahf
repz
mov
int3
repz
rcr
mov
rcr
popf
mov
(bad)
sar
rcl
popf
mov
fdivp
push
mov
int3
repz
rcr
push
mov
int
cs
ret
mov
mov
push
mov
pcmpeqd
mov
add
sti
dec
mov
jge
int3
rep
xor
xchg
xchg
int
push
adc
cmp
lods
(bad)
(bad)
fcom
int
(bad)
mov
int3
repz
into
add
sti
dec
mov
repz
into
add
sti
dec
mov
repz
into
add
sti
dec
mov
iret
es
push
mov
fs
stc
(bad)
repz
sbb
xchg
dec
das
int
and
fbld
dec
lods
and
pop
leave
int3
pop
or
inc
xor
cli
int3
push
in
add
dec
(bad)
adc
repnz
mov
ja
lods
inc
xor
cmp
test
int3
test
mov
xor
aas
das
xor
xor
repz
enter
jns
scas
js
shl
mov
retf
call
mov
ror
call
lods
cmc
dec
jno
add
into
dec
shl
jmp
scas
scas
(bad)
rcr
dec
push
mov
ins
push
cmp
ja
leave
out
or
inc
mov
pop
cli
cli
test
in
mov
retf
vpsadbw
das
xor
sub
pop
or
inc
(bad)
retf
test
ficom
inc
xor
push
ins
iret
clc
int3
xlat
pop
popa
pop
sbb
mov
or
in
and
into
test
je
pop
xor
or
(bad)
(bad)
add
test
scas
mov
jae
push
jge
dec
lods
out
lods
in
inc
mov
int
inc
fisub
lods
inc
cmc
or
in
jae
test
mov
xchg
inc
cmp
dec
lods
dec
repnz
(bad)
xor
inc
cmp
or
popa
mov
imul
popf
dec
lods
add
xor
test
test
repnz
or
mov
xor
add
in
inc
xor
inc
jb
stos
jge
mov
inc
xor
inc
jb
in
inc
xor
in
mov
xchg
jmp
xchg
jmp
lods
mov
test
test
xor
add
in
inc
xor
inc
dec
enter
or
xor
shrd
fisubr
int3
ja
and
mov
mov
jae
mov
inc
nop
sbb
add
int
pop
inc
sub
stos
je
in
inc
xor
lods
xlat
sub
jmp
push
mov
jae
movs
xor
push
lods
inc
mov
adc
xor
inc
cmp
add
call
or
xor
push
lods
inc
mov
rcr
xor
inc
xor
test
lahf
dec
lods
inc
xor
int3
repz
mov
sub
stos
je
in
inc
xor
inc
xor
ins
xor
add
xor
lods
inc
xor
sar
dec
enter
or
lods
stos
jo
inc
mov
mov
jae
in
lods
cmp
add
or
lods
std
jbe
lods
inc
(bad)
add
test
adc
add
dec
inc
mov
fisub
scas
inc
aaa
xor
add
in
inc
xor
add
add
add
xor
test
aaa
xor
add
in
inc
xor
inc
dec
enter
or
lods
nop
or
inc
mov
push
push
xor
inc
or
cmp
test
jmp
mov
gs
int
mov
xchg
inc
cmp
dec
lods
dec
bnd
(bad)
retf
inc
int
sub
cli
dec
lods
js
or
inc
dec
dec
nop
mov
or
cmp
repz
test
inc
mov
mov
jae
in
scas
psllq
scas
pop
lods
inc
call
or
push
inc
or
pushf
lea
mov
mov
inc
xor
mov
test
cdq
mov
enter
or
dec
mov
lods
inc
xor
sysexit
or
cli
or
sbb
mov
lods
inc
xor
xor
ror
and
add
xor
xor
sar
pop
add
cmp
jne
or
repz
nop
lds
or
xor
lods
jmp
inc
cmp
in
jae
scas
xor
mov
mov
jns
lds
stos
xor
test
xchg
dec
lods
inc
fld
cmp
or
outs
mov
mov
jae
sub
inc
(bad)
add
test
dec
daa
inc
nop
call
sbb
mov
stos
int
(bad)
sub
dec
mov
pop
inc
inc
or
inc
cmp
out
or
(bad)
pop
add
pop
mov
add
int
sbb
inc
lods
in
inc
xchg
add
add
xchg
dec
lods
aaa
jmp
test
mov
int
pusha
lods
in
inc
xor
mov
ret
push
lods
in
inc
mov
movs
push
pop
xor
test
xchg
dec
lods
in
mov
mov
sahf
int
aad
jo
and
sbb
push
inc
xchg
dec
lods
je
dec
inc
inc
mov
int
push
sti
iret
sti
adc
test
retf
mov
xor
jo
inc
test
lods
int3
hlt
fs
lods
(bad)
ins
lods
inc
xchg
push
sbb
ins
retf
sub
fs
and
or
push
popf
dec
lods
sub
fs
and
or
mov
dec
lods
sub
fs
and
or
jne
dec
lods
int3
retf
int3
cmc
fs
(bad)
jo
sti
lods
mov
lods
inc
xchg
push
sbb
xchg
dec
(bad)
fidivr
adc
and
and
sbb
and
int
aad
jo
vpsubb
enter
mov
xor
call
inc
mov
fs
or
and
or
add
dec
pop
add
push
hlt
lods
int3
jmp
mov
test
push
fsubr
inc
(bad)
add
fsubr
inc
xor
mov
test
sar
or
test
clc
dec
lods
int3
ja
push
inc
dec
enter
dec
sbb
(bad)
fscale
xchg
inc
xor
call
inc
mov
adc
popf
mov
sbb
inc
xor
or
ja
std
sub
mov
sbb
jae
adc
mov
test
aad
iret
and
scas
pop
mov
or
inc
pop
or
inc
int
dec
lods
out
outs
lods
inc
mov
jns
enter
das
xor
dec
xor
inc
dec
enter
or
xor
test
repz
xor
outs
mov
push
or
mov
xor
fdiv
mov
sbb
jae
es
out
int3
jmp
xchg
test
test
shl
es
test
mov
push
call
call
int3
ja
or
test
mov
add
and
fiadd
mov
pop
and
ficomp
retf
enter
das
int
fmul
sbb
add
out
std
stc
and
int3
ja
and
into
lds
mov
add
jle
hlt
lods
mov
dec
enter
jns
das
int
mov
(bad)
cmc
in
lods
inc
xor
xchg
dec
(bad)
fiadd
(bad)
adc
fmul
push
mov
pop
xor
xchg
js
or
inc
inc
cmp
js
or
inc
inc
and
repz
scas
js
or
inc
inc
adc
js
or
inc
inc
sbb
repz
test
inc
cmp
or
add
sub
jnp
sbb
dec
test
dec
test
test
dec
dec
test
xchg
jl
add
shl
or
int3
enter
sbb
xor
mov
test
mov
int3
enter
cmp
into
fsubr
mov
add
inc
xor
inc
inc
xor
sbb
int3
mov
mov
std
lods
scas
push
lods
inc
cmp
fidivr
mov
call
xor
push
into
addr16
adc
or
loop
call
int3
ja
add
sub
(bad)
fimul
es
test
inc
fldcw
repz
mov
shr
xor
lds
lods
lods
add
or
xor
fcom
mov
or
(bad)
fimul
sub
add
xor
int3
retf
inc
cmp
fst
mov
inc
xor
int3
retf
inc
mov
stos
popa
inc
sbb
data16
(bad)
fmul
test
or
inc
mov
xchg
inc
inc
imul
retf
inc
mov
stos
inc
inc
pop
and
mov
scas
lds
or
(bad)
fimul
mov
lods
xor
inc
xor
push
les
addr16
adc
or
loop
jne
fimul
and
retf
push
mov
hlt
lods
ss
mov
xor
xor
push
or
inc
inc
and
mov
scas
lds
or
fimul
sub
jbe
hlt
lods
add
inc
xor
nop
xor
push
inc
xor
inc
psllq
lods
ficom
inc
mov
pop
test
enter
mov
or
add
or
mov
pop
and
mov
mov
inc
dec
enter
jns
scas
cs
xchg
jnp
jns
add
or
mov
repz
inc
xor
push
je
call
inc
xor
inc
inc
xor
cmp
test
test
test
test
push
es
sub
add
retf
adc
int
push
inc
dec
enter
mov
lods
inc
xor
js
or
inc
inc
sub
and
or
dec
mov
xchg
mov
xchg
dec
lods
jl
lock
sub
dec
mov
mov
test
call
or
call
inc
mov
cmpxchg
dec
lods
(bad)
leave
or
into
mov
push
int3
ror
inc
call
or
retf
jbe
sub
mov
dec
enter
les
retf
pop
aaa
or
and
retf
lods
mov
or
push
add
adc
int
inc
int
mov
lods
inc
lock
mov
ins
push
xchg
dec
std
outs
sub
inc
xor
adc
in
push
mov
in
repz
inc
(bad)
test
lods
inc
xor
call
inc
mov
dec
enter
mov
cmps
in
repz
inc
inc
sbb
inc
mov
push
shr
xor
lds
or
push
cmp
repz
lds
or
mov
scas
xor
out
dec
test
and
call
enter
mov
cld
lods
ficom
inc
mov
repz
cmps
pop
add
xor
sbb
shl
mov
add
jo
cld
test
push
and
xchg
rcl
int
mov
lods
sbb
inc
mov
repz
daa
sub
add
(bad)
push
inc
cmp
repz
repnz
pop
xor
sar
mov
int
lods
dec
test
ins
cmps
xor
in
inc
xor
sub
ss
dec
test
ins
cmps
xor
in
inc
mov
repz
inc
dec
enter
mov
call
lods
inc
xor
fwait
mov
jmp
xor
push
mov
and
dec
push
mov
dec
lods
int3
mov
inc
mov
adc
xor
lods
ret
inc
mov
int
inc
mov
repz
add
or
fadd
jecxz
mov
mov
push
mov
xor
inc
dec
enter
test
lods
lods
mov
repz
inc
xor
sbb
xchg
jb
int
mov
cmp
int3
fldenv
mov
sub
into
scas
mov
int
out
je
test
fmul
ins
cmps
xor
clc
mov
aam
xchg
icebp
(bad)
hlt
inc
mov
mov
lods
inc
xor
cwde
mov
push
inc
xor
dec
mov
or
int3
mov
jae
int
jecxz
icebp
or
inc
xor
lods
xor
push
mov
fsubp
push
mov
mov
repz
loopne
mov
int
push
mov
xor
sbb
dec
push
lods
inc
fisttp
xor
sbb
shl
mov
sbb
rol
jecxz
mov
int
lods
into
cmps
clc
inc
mov
mov
int
inc
xor
into
ds
jb
int
cmp
ror
and
repz
test
push
scas
or
or
push
rol
push
mov
int
lods
inc
xor
repnz
aad
jo
sub
mov
push
shr
(bad)
cmc
inc
xor
push
int3
lock
or
inc
mov
xrelease
scas
int3
mov
jae
int
sub
in
repz
into
cmps
xchg
jae
int
outs
pop
xor
and
cmps
rcl
mov
repz
push
and
mov
mov
call
push
mov
int
(bad)
pop
mov
repz
mov
int
or
or
shl
push
mov
int
fadd
mov
repz
xchg
push
mov
int
sub
mov
xor
gs
or
rol
out
pop
mov
rep
scas
ds
lds
or
jb
int
ss
xor
sbb
shl
mov
mov
daa
and
sbb
repz
inc
int
dec
inc
mov
dec
lods
int3
cmps
clc
inc
mov
xor
lods
mov
lods
inc
mov
rep
test
or
cmp
or
ror
lods
inc
mov
repz
inc
xor
dec
mov
movs
inc
cmp
or
pop
xor
mov
xor
enter
int3
mov
jb
int
sub
in
repz
inc
mov
dec
call
jb
int
pop
or
sbb
sub
int3
ret
inc
mov
lods
xor
test
fimul
sub
int3
ret
inc
mov
lods
xor
inc
inc
mov
or
xor
jae
int
dec
inc
mov
repz
lds
or
inc
inc
xor
push
mov
or
(bad)
(bad)
and
add
and
(bad)
rcl
(bad)
es
push
mov
mov
aaa
adc
fisttp
inc
cmp
repz
test
push
es
daa
test
mov
mov
nop
inc
xor
jns
push
lods
inc
xor
pop
mov
nop
inc
xor
jns
or
dec
mov
nop
inc
xor
scas
cli
add
rcl
shl
mov
movs
inc
inc
adc
mov
out
rcl
int
jns
int
inc
xor
repz
(bad)
test
clc
rcl
push
mov
xchg
clc
inc
mov
(bad)
jecxz
mov
jmp
inc
inc
repz
scas
inc
jg
shl
jb
int
test
stos
int
sub
(bad)
jecxz
mov
inc
fcom
dec
enter
and
int
sub
cmp
repz
repnz
pop
xor
rcr
test
xchg
push
fs
sbb
retf
call
cmp
and
enter
jo
shr
mov
or
ja
and
xor
and
into
adc
mov
adc
xor
xchg
mov
or
inc
xor
mov
mov
imul
jno
call
mov
hlt
dec
push
inc
fstp
daa
inc
cmp
dec
mov
add
or
mov
push
inc
mov
push
push
inc
call
mov
retf
xor
sbb
xor
inc
cmp
dec
mov
inc
xor
sub
or
inc
xor
push
xor
ins
inc
xor
sub
int3
lods
inc
xor
sub
add
test
lock
mov
mov
(bad)
push
inc
inc
push
cs
retf
inc
mov
push
inc
cmp
dec
lods
test
movs
xor
or
add
test
lock
mov
pop
int3
lods
inc
xor
sub
inc
mov
push
inc
mov
push
pop
push
or
dec
test
nop
mov
or
xor
cli
out
inc
or
lds
test
lds
mov
mov
xor
mov
adc
ss
lds
lods
scas
cmp
mov
ja
and
inc
popa
int3
ja
and
into
add
inc
jg
test
dec
test
sbb
xchg
dec
adc
pop
sti
adc
lds
mov
dec
push
int3
icebp
fs
inc
xor
das
xor
xchg
xor
mov
les
mov
lods
inc
inc
cmc
and
fld
sub
inc
hlt
dec
call
rep
cmp
mov
sbb
mov
push
repz
sti
iret
clc
int3
xlat
mov
xor
adc
arpl
das
inc
and
(bad)
ror
push
mov
push
cmp
adc
jns
enter
mov
push
lods
enter
mov
xor
mov
add
and
sbb
and
ins
push
xchg
dec
adc
lea
dec
or
das
xor
mov
fidivr
lock
dec
(bad)
ficomp
(bad)
adc
fdiv
adc
pop
or
lds
or
das
xor
das
xor
xor
adc
or
xor
ror
js
into
ja
cs
lods
je
out
das
xor
pop
popa
or
int3
icebp
mov
jno
or
mov
cmc
test
repnz
das
jb
arpl
xor
add
test
retf
das
xor
movs
into
ja
and
ret
enter
add
repz
fs
push
xor
lods
(bad)
pop
lods
inc
mov
test
aad
call
sbb
outs
adc
pop
adc
pop
jecxz
(bad)
cmc
or
sub
pop
or
inc
pop
or
inc
xor
les
lods
int3
hlt
test
retf
(bad)
int3
repz
int3
inc
adc
mov
pop
lods
inc
mov
hlt
sub
or
add
test
repz
lds
or
outs
das
xor
push
xor
pop
inc
mov
lods
das
xor
scas
sub
fs
push
xor
lods
push
lods
inc
mov
fild
or
inc
xor
xchg
dec
adc
pop
cli
cli
mov
hlt
pushf
mov
pop
or
mov
test
mov
pop
mov
das
xor
sub
int
movs
lods
out
pop
lods
inc
mov
jns
je
out
das
xor
das
xor
lods
pusha
or
int3
retf
int3
cmc
lods
enter
mov
ds
inc
js
or
adc
xlat
cld
inc
xor
push
repnz
repnz
iret
clc
int3
xlat
pop
(bad)
adc
fmul
dec
push
dec
push
adc
xor
or
sahf
mov
or
pushf
mov
xor
dec
clc
(bad)
mov
ror
inc
pop
lods
inc
pop
aaa
pop
pop
xor
retf
adc
or
and
add
inc
sub
lds
dec
lods
lods
bound
inc
mov
movs
push
or
cmp
xchg
mov
mov
out
lds
xor
jnp
dec
xchg
cmp
jo
adc
pop
pop
xor
mov
xor
cmp
iret
clc
int3
xlat
pop
std
push
fs
sbb
xchg
dec
cmc
dec
push
xor
std
mov
imul
into
fs
mov
or
lods
data16
sbb
repz
push
cmp
fs
mov
or
nop
data16
(bad)
test
lds
les
xor
xor
lods
mov
inc
imul
sti
iret
clc
int3
xlat
pop
popa
pop
cli
(bad)
jge
pop
and
xor
dec
int3
ja
and
push
retf
call
and
or
and
or
and
or
cmp
sbb
inc
shr
inc
mov
mov
xor
inc
mov
dec
scas
int
repz
ins
mov
dec
or
repz
mov
(bad)
repnz
xor
(bad)
pop
loopne
int3
jmp
mov
xor
into
ja
mov
add
out
int3
jmp
add
add
add
std
test
push
inc
inc
or
sub
push
adc
mov
test
popf
mov
or
fmul
xor
dec
int3
ja
and
mov
or
adc
add
push
sbb
les
cmp
mov
es
test
ja
mov
movs
mov
call
sbb
cmp
fsub
jmp
xchg
inc
xor
dec
int3
ja
and
mov
dec
movs
into
addr16
repnz
add
xchg
xor
into
ja
inc
inc
mov
iret
repnz
outs
and
mov
or
(bad)
outs
popf
in
inc
mov
dec
cmp
aad
js
aad
pushf
cmp
aad
dec
cmp
add
mov
pushf
cmp
aad
xor
cmp
aad
mov
test
cmp
inc
mov
pusha
cmp
aad
js
aad
pushf
cmp
aad
(bad)
ins
inc
mov
pushf
cmp
aad
pushf
cmp
aad
imul
push
xchg
cmp
lods
xor
aad
pushf
test
or
lods
aad
sbb
add
mov
inc
test
adc
add
cmp
xchg
pushf
cmp
aad
pushf
shr
mov
mov
jge
pushf
cmp
aad
pushf
int3
aad
pushf
cmp
inc
iret
rep
push
jb
icebp
aam
or
and
jo
push
mov
or
add
outs
and
mov
or
das
ss
cmp
aad
pushf
cmp
aad
js
aad
pushf
cmp
inc
mov
pushf
cmp
aad
cmp
cmp
aad
test
mov
pushf
cmp
aad
pushf
cmp
aad
mov
and
add
aad
pushf
cmp
aad
mov
test
cmp
aad
js
aad
pushf
cmp
inc
mov
pushf
cmp
aad
cmp
cmp
aad
test
mov
pushf
cmp
aad
pushf
cmp
aad
mov
add
cmp
aad
or
cmp
aad
ins
cmp
and
aaa
lods
mov
mov
pop
sti
adc
dec
mov
ins
mov
iret
pushf
mov
aam
popf
mov
clc
lods
inc
fucomi
lods
inc
xor
lods
into
ja
lods
mov
in
mov
repz
int3
lock
mov
inc
or
int3
or
outs
fidivr
cld
inc
xor
rol
mov
inc
xor
repz
sbb
xor
retf
test
cld
xor
retf
test
repnz
xchg
push
push
jae
push
mov
dec
mov
or
and
call
inc
pmaxsw
into
ja
lods
mov
add
push
cmp
(bad)
and
xor
or
dec
pop
pushf
lods
inc
xor
aaa
adc
ja
std
into
ja
lods
mov
sub
mov
inc
pop
lods
inc
mov
iret
mov
dec
movs
inc
ret
sbb
lods
(bad)
imul
and
(bad)
add
test
hlt
or
mov
ja
in
hlt
add
dec
int
push
sbb
xchg
dec
(bad)
fisub
(bad)
adc
cmp
scas
sbb
stos
out
add
std
inc
xor
cld
int3
repz
inc
inc
clc
int
dec
repz
mov
clc
test
mov
test
ret
(bad)
pinsrw
or
dec
add
inc
pop
xor
int3
hlt
sub
dec
fidiv
mov
mov
mov
repz
jecxz
mov
add
inc
sbb
nop
jmp
in
and
ficomp
repz
jecxz
mov
sahf
shr
mov
shr
gs
or
or
dec
pop
or
popf
xor
mov
scas
add
pop
inc
enter
(bad)
not
mov
dec
lods
int3
ja
inc
push
mov
jnp
xor
popf
xor
into
daa
fsub
xor
test
inc
xor
jge
jo
xchg
add
jle
in
shr
mov
test
ja
es
rol
out
inc
add
mov
cld
and
mov
push
inc
xchg
aam
pop
xor
test
dec
jl
hlt
fistp
test
cdq
fidiv
loop
xor
push
int3
lock
xchg
repz
mov
xchg
dec
(bad)
fmul
inc
xor
mov
xor
add
in
or
or
cmp
add
mov
loopne
dec
push
cmp
and
rol
out
inc
pop
dec
(bad)
dec
lods
int3
jmp
adc
xor
pusha
pop
xor
and
(bad)
add
test
jmp
mov
pushf
push
mov
pop
inc
xchg
shl
push
xchg
dec
jl
clc
fist
xor
and
xor
into
daa
in
pusha
pop
xor
test
inc
xor
jno
jo
xchg
add
jle
int3
in
seto
test
xchg
rol
out
inc
mov
or
dec
or
lods
int3
in
seto
test
xchg
rol
out
inc
mov
or
dec
or
(bad)
pop
in
dec
test
adc
cli
shr
(bad)
in
mov
cmp
das
xor
das
xor
sub
int
movs
lods
rol
inc
mov
mov
lods
enter
mov
inc
call
lods
mov
jnp
lods
push
ficom
pop
mov
test
xchg
mov
push
repz
sti
iret
clc
int3
xlat
lea
xor
jmp
lods
inc
(bad)
rcr
push
mov
dec
enter
or
inc
mov
or
stos
mov
lods
inc
ficom
jle
push
sbb
int3
repz
inc
test
or
and
and
mov
in
int3
enter
int3
repz
int3
ret
int3
hlt
retf
xor
sub
mov
loopne
and
test
out
mov
sbb
and
imul
ror
repz
mov
xor
fisttp
int
lods
lods
push
inc
lods
inc
mov
jns
xor
imul
repz
mov
ret
enter
mov
or
(bad)
std
out
inc
mov
repz
lods
ds
lods
inc
pop
or
inc
pop
push
mov
or
enter
mov
jnp
lods
int3
mov
push
mov
mov
inc
cwde
jle
lods
(bad)
hlt
inc
test
lods
enter
mov
sub
inc
int
pop
mov
js
lods
mov
int
aaa
or
dec
enter
fs
jo
and
int
push
mov
xor
sub
lods
inc
mov
repz
sub
mov
repz
sub
fiadd
inc
xor
test
test
icebp
std
out
inc
pop
rcr
sub
pop
or
inc
mov
add
or
mov
test
lods
iret
repz
int3
hlt
pop
lds
ret
dec
lods
sub
pop
push
lods
inc
mov
movs
inc
xor
and
clc
int3
xlat
pop
popa
pop
cli
into
inc
sbb
mov
lds
test
test
retf
int3
ja
and
mov
push
inc
mov
dec
push
adc
xor
lods
das
xor
das
xor
fmul
jns
lods
retf
inc
mov
mov
int3
ja
and
mov
dec
sub
mov
inc
hlt
sti
das
xor
mov
into
in
rdmsr
or
xor
in
rdmsr
or
mov
add
mov
pop
and
gs
adc
data16
es
lods
inc
int
mov
inc
pop
or
push
xor
repz
jns
lods
or
sbb
clc
int3
xlat
pop
adc
inc
movs
scas
(bad)
cmc
inc
fld
test
sub
push
int
mov
dec
xor
inc
mov
mov
xor
sbb
pop
and
mov
mov
addr16
push
xor
mov
cmc
lea
and
enter
das
xor
xor
inc
pop
or
inc
int
mov
push
js
lods
dec
bnd
je
out
mov
repz
or
xor
repz
xor
fdivr
xor
fdivr
xor
mov
cmc
cmp
outs
adc
pop
cli
into
inc
sbb
add
push
add
mov
jg
sbb
mov
stos
inc
xor
dec
int3
ja
and
hlt
or
sub
pop
or
xor
repz
scas
in
xor
ins
scas
add
call
inc
pop
or
xor
repz
xor
fdivr
xor
push
inc
retf
mov
jnp
lods
dec
test
sbb
adc
pop
cli
cli
fs
pushf
mov
xor
out
inc
xor
lods
mov
inc
(bad)
in
or
retf
and
mov
lods
lods
lods
jo
xchg
add
jns
je
dec
inc
jnp
or
xor
lods
das
xor
das
xor
jo
inc
dec
jp
lods
out
in
inc
mov
ret
movs
test
pushf
test
sbb
int
lods
lods
jo
inc
mov
or
int3
ja
repnz
iret
clc
int3
xlat
pop
adc
jns
loop
cli
sti
dec
int3
ja
and
mov
ins
pop
pop
xor
fistp
xor
xchg
dec
(bad)
ficomp
adc
fmul
push
mov
imul
in
inc
xor
xchg
jnp
jns
int3
retf
adc
(bad)
fcom
repz
xor
test
ss
lods
les
cmp
xor
mov
mov
lods
inc
jne
xchg
jnp
jns
dec
jmp
xor
or
inc
adc
lods
inc
mov
inc
xor
enter
push
int3
ja
and
jb
loopne
ret
adc
xor
and
add
and
into
add
pop
inc
jmp
add
or
add
test
lock
mov
fstp
pushf
test
push
es
test
mov
push
hlt
and
ret
mov
icebp
pop
and
mov
adc
cmp
call
je
dec
pop
int3
ja
and
(bad)
enter
dec
int3
ja
(bad)
lods
dec
inc
mov
fisttp
cmc
add
das
jb
push
add
or
add
(bad)
shl
cli
inc
push
cmp
cld
fmul
cmps
dec
test
sahf
mov
and
xor
jle
and
dec
push
inc
xor
in
test
dec
test
xchg
int3
retf
inc
xor
mov
test
hlt
ins
sti
int3
retf
inc
xor
or
enter
int
inc
mov
(bad)
xchg
mov
div
dec
lods
inc
mov
mov
dec
test
jle
hlt
fucomip
mov
shl
jmp
int3
ja
es
push
repz
sti
iret
clc
int3
xlat
mov
inc
xor
push
fs
adc
jge
pop
hlt
(bad)
inc
xor
push
inc
mov
inc
mov
ret
int3
hlt
sub
adc
(bad)
jecxz
mov
icebp
add
ins
lods
inc
pop
lods
inc
mov
push
mov
and
dec
jbe
lods
je
in
dec
xor
mov
cld
and
int
mov
inc
mov
repz
mov
hlt
push
mov
int
push
into
(bad)
aam
mov
int
push
ja
cdq
jns
iret
repz
or
inc
xor
add
xor
push
(bad)
les
inc
xor
fmul
or
xor
add
test
xchg
int
push
int3
repz
gs
xor
int3
cmc
movs
into
cmps
fcom
int
push
pop
fcmovb
mov
imul
or
adc
dec
lods
mov
je
lods
(bad)
test
xchg
push
mov
xor
cmp
or
dec
xor
mov
sub
out
inc
int
push
mov
je
lods
(bad)
test
cmp
(bad)
enter
ficom
inc
xor
xor
retf
pop
es
into
repz
mov
jo
cli
lods
outs
dec
lods
inc
mov
mov
inc
xor
fwait
add
or
dec
xor
mov
sub
out
inc
int
push
mov
je
lods
(bad)
test
xchg
push
mov
xor
cmp
or
dec
xor
mov
sub
out
inc
int
push
mov
je
lods
(bad)
test
fld
inc
fcmovu
call
inc
xor
mov
(bad)
push
inc
dec
das
inc
test
lods
cld
push
or
inc
stos
sti
push
pop
mov
repz
sub
gs
add
or
and
push
pop
pop
xor
push
adc
xor
ja
lods
(bad)
neg
sub
in
ins
lods
inc
fidiv
inc
xor
xor
retf
(bad)
push
inc
dec
pop
lds
dec
lods
mov
int
aaa
add
or
cmp
or
lock
repz
mov
xor
call
inc
xor
mov
(bad)
push
inc
dec
pop
lds
dec
lods
mov
int
iret
add
or
cmp
or
sub
int
push
mov
ja
lods
(bad)
test
cmp
(bad)
enter
(bad)
jmp
inc
xor
mov
pop
es
into
repz
mov
jo
cli
lods
ret
inc
mov
mov
int3
hlt
in
add
or
lods
xor
sub
mov
repz
lods
cli
dec
lods
inc
mov
repz
mov
into
repz
mov
jo
std
lods
sahf
dec
lods
inc
mov
lea
mov
lods
inc
xor
test
adc
xlat
add
or
xor
into
(bad)
lock
mov
ret
dec
lods
adc
jnp
inc
xor
or
xor
cld
cmp
(bad)
enter
pop
adc
pop
xor
sbb
inc
dec
lods
inc
mov
movs
lods
push
dec
lods
inc
mov
lods
inc
xor
test
and
jo
push
lock
repz
mov
xor
jmp
inc
xor
mov
(bad)
push
inc
dec
pop
lds
dec
lods
mov
int
mov
xor
cmp
or
sub
int
mov
mov
ret
adc
xor
out
inc
xor
xor
retf
(bad)
push
inc
dec
pop
lds
xchg
push
mov
xor
cmp
test
mov
icebp
push
int3
hlt
in
push
xor
dec
xor
mov
sub
out
inc
int
push
mov
jno
lods
(bad)
test
cmp
(bad)
enter
ficomp
inc
xor
xor
retf
pop
es
into
repz
mov
jo
cli
lods
dec
lods
inc
mov
mov
dec
mov
lods
inc
xor
push
inc
fist
xor
sub
repz
inc
mov
retf
div
push
mov
mov
push
mov
int
push
jle
hlt
push
mov
push
or
shl
push
mov
cli
repz
mov
iret
repz
mov
xor
int3
pop
mov
or
(bad)
jge
imul
xor
push
int3
in
push
adc
adc
pop
pop
xor
push
adc
mov
imul
repz
div
push
mov
cmp
repz
lock
repz
mov
mov
lods
mov
into
repz
mov
jo
std
lods
inc
dec
lods
inc
mov
mov
and
and
repnz
mov
jo
lods
cld
cmp
(bad)
enter
pop
push
pop
pop
xor
sbb
push
dec
lods
inc
mov
movs
lods
adc
inc
mov
lods
inc
xor
test
and
jo
push
lock
repz
mov
xor
in
inc
xor
xor
retf
(bad)
push
inc
dec
pop
lds
dec
lods
mov
int
mov
xor
cmp
icebp
push
lds
or
mov
int
sub
mov
push
mov
int3
repz
int3
mov
push
mov
ret
lods
mov
lods
inc
mov
hlt
push
mov
xor
mov
xor
inc
xor
gs
xor
push
dec
mov
lods
inc
xor
push
int3
mov
push
mov
pop
push
pop
pop
xor
push
adc
xor
pop
mov
int
sub
mov
pop
push
mov
aam
sub
mov
push
mov
mov
lods
mov
mov
push
mov
(bad)
repz
mov
xor
rol
push
mov
int
xor
icebp
push
mov
int
fcomp
mov
es
push
mov
jo
std
lods
fimul
mov
mov
ret
int3
hlt
in
add
xor
mov
outs
cld
out
inc
int
push
mov
jb
lods
(bad)
test
cmp
(bad)
enter
pop
(bad)
pop
pop
xor
sbb
repnz
lods
inc
mov
movs
lods
dec
dec
lods
inc
mov
lods
inc
xor
test
and
jo
push
lock
repz
mov
xor
test
ret
mov
xor
sub
mov
lods
mov
retf
mov
int
cmp
repnz
dec
repnz
ret
push
sub
int
push
mov
jb
lods
(bad)
test
cmp
(bad)
enter
pop
push
pop
pop
xor
sbb
sbb
mov
movs
int3
ret
int3
hlt
in
jp
or
dec
xor
mov
stc
cld
out
inc
int
push
mov
or
add
cld
or
or
inc
stos
sti
push
(bad)
enter
pop
adc
pop
xor
sbb
jmp
sub
int
push
mov
or
add
cs
test
(bad)
int
push
int3
hlt
in
jp
or
dec
xor
mov
push
xor
inc
xor
adc
pop
xor
pop
inc
sbb
sbb
js
or
cld
cmp
(bad)
enter
pop
push
pop
pop
xor
sbb
outs
xor
lods
sub
lods
inc
mov
lods
inc
xor
test
and
jo
push
lock
repz
mov
xor
pop
mov
iret
repz
(bad)
xchg
inc
xor
xor
retf
(bad)
push
inc
dec
pop
lds
dec
lods
mov
int
stos
jp
or
cmp
or
dec
xor
mov
xor
inc
mov
inc
xor
adc
pop
xor
pop
inc
call
neg
mov
int
adc
or
cmp
test
inc
xor
inc
xor
test
and
jo
push
lock
repz
mov
xor
pop
pop
xor
sbb
mov
lods
inc
mov
movs
lods
push
xor
inc
xor
test
and
jo
push
lock
repz
mov
xor
pop
pop
xor
sbb
jp
lods
inc
mov
movs
std
js
lods
inc
(bad)
shl
push
mov
(bad)
lods
cld
cmp
(bad)
enter
pop
adc
pop
xor
sbb
xor
enter
mov
into
repz
mov
jo
std
lods
out
lods
inc
mov
mov
inc
mov
lods
inc
xor
test
and
jo
push
lock
repz
mov
xor
lods
mov
retf
ret
mov
int
pop
js
or
cmp
or
dec
xor
mov
sub
out
inc
int
push
mov
(bad)
lods
(bad)
test
fimul
lods
inc
stos
sti
push
int3
in
push
adc
mov
mov
(bad)
out
inc
gs
js
or
and
test
adc
lods
inc
mov
lods
inc
xor
test
and
jo
push
lock
repz
mov
xor
inc
pop
xor
sbb
push
xor
lods
fidiv
lods
inc
mov
lods
inc
xor
test
and
jo
push
lock
repz
mov
xor
call
or
clc
push
or
cld
cmp
(bad)
enter
fisub
into
inc
xor
mov
pop
es
into
repz
mov
jo
cli
lods
call
sub
int
push
mov
push
or
(bad)
test
pop
or
inc
pop
or
inc
pop
or
inc
jb
fmul
aas
xchg
inc
xor
push
int3
ret
int3
hlt
repz
mov
and
(bad)
repz
mov
into
repz
mov
iret
repz
aam
or
mov
int
xchg
or
lock
repz
mov
xor
mov
iret
repz
popa
in
jge
or
rcr
push
mov
(bad)
ror
repnz
outs
adc
or
jbe
(bad)
dec
and
(bad)
ror
push
mov
int
inc
jle
hlt
test
ja
std
sub
mov
repz
lods
cli
aaa
lods
inc
pop
or
ret
fisttp
enter
mov
xor
mov
ja
lods
iret
ja
xchg
inc
inc
mov
inc
pop
xor
pop
xor
jo
lds
sub
mov
xor
jo
lds
xor
mov
mov
retf
repnz
pop
and
mov
xor
or
adc
loopne
cmp
push
inc
or
mov
test
(bad)
push
int3
cmc
vpcomq
inc
mov
or
dec
inc
mov
repz
xchg
inc
mov
repz
lods
dec
lods
inc
add
and
mov
test
ficom
inc
xor
scas
inc
jo
cmp
iret
repz
int3
retf
int3
cmc
pop
inc
add
or
int3
mov
push
mov
iret
repz
lods
push
xor
inc
mov
je
mov
aaa
cmp
shr
in
jge
or
rol
mov
int
inc
inc
or
mov
iret
repz
lods
(bad)
cmp
into
mov
cmp
xor
pushw
lods
enter
pop
mov
repz
mov
test
sub
repz
int3
cmc
fs
mov
lods
int3
mov
push
mov
retf
das
and
enter
mov
or
inc
(bad)
in
jg
or
inc
xor
mov
fmul
sub
pop
push
lods
inc
mov
shr
add
inc
hlt
add
lods
je
in
inc
xor
stos
jmp
inc
(bad)
push
mov
retf
sub
mov
repz
enter
mov
pop
or
mov
int
sbb
iret
repz
mov
int
sbb
iret
repz
mov
int
sbb
iret
repz
adc
repz
lods
aam
push
mov
mov
push
mov
and
js
or
int3
retf
int3
cmc
cmp
lods
inc
pop
lods
inc
pop
xor
push
adc
xor
push
mov
push
mov
into
repnz
mov
xor
int3
mov
push
mov
retf
das
jbe
lods
enter
mov
or
mov
cmc
mov
inc
xor
rcl
push
mov
push
retf
sub
xor
sub
cmc
(bad)
adc
iret
repz
inc
inc
adc
xor
lods
int3
retf
int3
cmc
sub
adc
int
and
xchg
icebp
push
mov
int3
repz
adc
pop
sub
inc
pop
or
inc
mov
repz
das
xor
jae
xor
test
or
lock
inc
xor
lods
mov
int
mov
cmp
dec
lods
enter
mov
or
rcl
mov
lds
xor
push
adc
xor
cmps
jae
or
xchg
int3
fcomp
in
inc
xor
push
or
rcl
mov
iret
repz
jns
jle
dec
jmp
je
inc
fidivr
cwde
inc
xor
lods
(bad)
(bad)
pushf
push
mov
pop
or
inc
xor
mov
xor
enter
mov
stos
cmp
das
fmul
enter
mov
mov
push
(bad)
test
mov
pop
vpcomq
inc
fst
cs
icebp
push
mov
das
or
scas
aas
vpcomq
inc
mov
push
xor
rol
xchg
jo
or
mov
push
icebp
push
mov
data16
lock
icebp
push
mov
xor
push
xchg
das
jbe
or
shr
test
cs
mov
sub
pop
mov
cmc
mov
adc
mov
repz
mov
outs
and
add
push
or
int3
lock
adc
test
aad
call
xor
in
jno
or
xchg
mov
in
jno
or
xchg
mov
jecxz
jne
or
bnd
mov
xchg
cmp
fsub
add
and
das
xor
aas
jbe
or
xor
pushf
test
cwde
ins
int3
ja
and
add
pop
and
jb
inc
aam
or
(bad)
test
xor
test
repnz
lods
and
lods
inc
mov
retf
push
xor
add
add
sub
lods
retf
inc
int
mov
enter
dec
test
enter
adc
xor
bnd
and
xor
mov
xchg
cmp
dec
mov
je
or
add
pop
mov
or
inc
pop
or
xchg
add
je
test
int
inc
cmp
or
enter
adc
or
je
or
int3
retf
int3
cmc
xchg
mov
icebp
pop
and
mov
xor
push
(bad)
adc
lock
lea
push
pop
mov
das
xor
mov
int
and
xor
and
cmc
mov
movs
int
in
pop
xor
ror
sub
pop
push
pop
xor
cmp
or
cmp
mov
inc
mov
retf
(bad)
mov
int
iret
jo
or
cmp
repz
inc
add
add
int3
cmc
cmp
push
mov
push
mov
mov
pop
dec
xor
ror
sub
fs
jne
or
test
(bad)
mov
int
mov
cmp
repz
inc
add
add
int3
cmc
cmp
inc
out
add
inc
inc
mov
js
xor
sbb
outs
adc
or
lods
push
cmp
inc
popa
pop
cli
into
outs
add
fmul
xchg
xchg
int3
ret
int3
hlt
mov
or
or
mov
int
and
popa
fs
add
int3
hlt
test
repz
lds
or
push
cmp
inc
sahf
mov
push
(bad)
test
fimul
cwde
inc
xor
pop
mov
int
es
push
mov
ret
dec
lods
enter
mov
push
or
(bad)
test
cmp
(bad)
enter
pop
adc
pop
xor
push
adc
xor
stos
inc
xor
dec
int3
mov
jb
int
imul
push
lods
inc
xor
test
sbb
sti
jno
or
xor
enter
mov
fmul
enter
mov
push
or
(bad)
neg
cld
cmp
(bad)
enter
pop
adc
pop
xor
push
adc
xor
pop
pop
xor
push
adc
xor
pushf
mov
retf
add
inc
stos
sti
push
(bad)
enter
pop
adc
pop
xor
push
adc
xor
sahf
inc
xor
xor
retf
(bad)
push
inc
dec
and
lods
cld
push
or
inc
stos
sti
push
pop
mov
repz
sub
mov
repz
lods
sahf
aas
lods
inc
mov
mov
push
ret
dec
lods
enter
mov
ret
dec
lods
enter
mov
add
xor
lods
inc
fisubr
inc
xor
xor
retf
(bad)
push
inc
dec
sbb
pop
ror
mov
dec
mov
add
dec
ret
dec
lods
enter
mov
add
add
inc
fisubr
sahf
inc
xor
xor
retf
(bad)
push
inc
dec
sbb
pop
ror
mov
dec
mov
add
inc
ret
dec
lods
enter
mov
add
lods
add
inc
stos
sti
push
(bad)
enter
fcmovu
lahf
inc
xor
xor
retf
pop
and
xor
push
mov
jo
and
xor
push
mov
xor
and
or
shl
push
mov
xor
cmp
or
mov
int
and
fiadd
cmps
inc
xor
mov
(bad)
push
inc
dec
sbb
pop
ror
mov
dec
mov
add
push
fmul
enter
mov
add
adc
or
cld
cmp
(bad)
enter
pop
adc
pop
xor
push
adc
xor
pop
pop
xor
push
adc
xor
test
add
inc
stos
sti
push
(bad)
enter
pop
adc
pop
xor
push
adc
xor
mov
mov
fmul
enter
mov
add
mov
or
cld
cmp
(bad)
enter
pop
adc
pop
xor
push
adc
xor
pop
pop
xor
push
adc
xor
pushf
mov
retf
add
inc
stos
sti
push
(bad)
enter
pop
adc
pop
xor
push
adc
xor
pushf
inc
xor
xor
retf
test
cmc
sbb
inc
xor
clc
xor
push
mov
jo
and
xor
push
mov
xor
and
or
dec
xor
mov
sub
out
inc
mov
repz
lods
cmp
mov
movs
int3
ret
int3
mov
jb
int
imul
mov
lods
push
cmp
movs
lods
ret
inc
mov
lods
inc
xor
test
es
jo
and
xor
push
mov
xor
cmp
or
dec
xor
mov
mov
inc
xor
adc
repz
adc
inc
pop
xor
push
adc
mov
imul
sub
adc
xor
mov
or
inc
xor
inc
xor
push
(bad)
fmul
sub
repz
adc
xor
enter
mov
(bad)
or
mov
into
rcl
ficomp
sbb
add
lods
inc
mov
test
xor
dec
int3
mov
jb
int
imul
inc
mov
retf
imul
sub
mov
lods
inc
popa
pop
cli
cli
add
sbb
sti
dec
int3
mov
push
mov
xchg
nop
push
mov
xor
and
add
sbb
pop
inc
add
or
into
addr16
adc
or
push
mov
xor
mov
mov
push
mov
sbb
inc
xor
adc
int
and
add
and
pop
or
xor
mov
rcl
mov
repz
lods
outs
and
inc
xor
push
adc
xor
jo
lds
or
lods
cmc
call
mov
sub
xor
inc
mov
repz
enter
mov
sbb
int3
cmc
repz
iret
repz
push
mov
repz
lods
shl
mov
repnz
cmp
or
sub
mov
repz
lods
jbe
lods
inc
mov
repz
enter
mov
sbb
call
xor
mov
pop
dec
mov
repz
lods
and
inc
mov
mov
retf
int3
cmc
retf
sub
int3
repz
add
or
xor
lods
inc
xor
push
inc
inc
adc
xor
lods
(bad)
fst
inc
xor
push
adc
int
and
xchg
icebp
push
mov
int3
repz
adc
pop
sub
inc
pop
or
inc
mov
repz
das
xor
aaa
outs
xor
test
or
lock
inc
xor
lods
mov
int
mov
cmp
dec
lods
enter
mov
sbb
lods
(bad)
neg
ror
mov
lds
sub
pop
jns
pop
xor
imul
and
cmp
fcomp
in
inc
xor
mov
ror
mov
leave
repz
jns
jle
dec
les
sub
or
sub
(bad)
xchg
test
retf
sub
mov
repz
adc
outs
xchg
data16
sub
mov
repz
lods
cmp
mov
inc
cmp
or
sar
inc
aas
(bad)
(bad)
test
cmp
or
inc
int
cmp
mov
in
ins
xor
stos
and
mov
mov
xchg
jg
int
and
mov
push
pop
xor
lock
icebp
push
mov
xor
jo
inc
hlt
sbb
pop
xor
enter
(bad)
neg
movs
test
lds
dec
lods
lods
cmps
lods
inc
mov
repz
or
xchg
(bad)
(bad)
mov
int
addr16
int
cmp
nop
push
mov
bound
lock
icebp
push
mov
int
imul
or
lods
scas
and
xor
xor
sbb
sbb
push
lods
inc
mov
retf
mov
repz
mov
or
mov
int
add
or
shr
and
xor
and
ins
push
test
cs
mov
bound
mov
in
xor
or
lods
(bad)
and
push
mov
sbb
adc
sbb
das
jb
cmps
ins
xor
xor
(bad)
adc
mov
inc
lock
adc
lods
inc
popa
in
arpl
or
add
pop
mov
or
inc
pop
or
loopne
or
int3
hlt
mov
dec
xor
mov
cmc
push
adc
dec
test
sub
nop
adc
repz
test
retf
into
ja
repnz
outs
adc
or
lods
adc
lods
inc
fs
adc
sub
mov
cmc
sbb
mov
sbb
xor
cmp
push
je
test
int
lods
inc
mov
repz
adc
jg
inc
xor
mov
xor
push
mov
int
cmp
or
inc
mov
hlt
test
fs
ins
xor
sbb
repnz
iret
clc
int3
xlat
pop
gs
cmp
jmp
add
test
cmc
dec
push
inc
xor
(bad)
cmp
sbb
int3
pop
lds
dec
lods
enter
lods
data16
lods
inc
mov
or
push
xor
pop
xor
pop
ins
xor
bnd
test
pop
lds
ja
std
lods
sbb
lods
inc
mov
mov
ja
std
das
xor
xor
jo
mov
test
lea
and
dec
test
(bad)
retf
retf
outs
adc
pop
adc
inc
les
int3
cmc
lods
das
xor
das
xor
das
xor
das
xor
sub
pop
or
inc
pop
or
push
fcmove
test
test
(bad)
mov
data16
adc
push
jo
mov
test
data16
adc
push
jo
mov
test
test
retf
das
xor
jne
cmp
mov
xor
jne
cmp
lods
sbb
jne
cmp
pushf
sbb
int3
cmc
data16
adc
push
jo
mov
test
data16
adc
push
jo
mov
test
data16
adc
push
jo
mov
test
data16
adc
push
jo
mov
test
lea
push
or
das
xor
jne
cmp
cmp
or
das
xor
jne
cmp
jae
inc
sub
or
int3
retf
int3
ja
and
pop
or
cwde
rol
and
inc
pop
or
cwde
fld
and
inc
mov
int3
ja
and
ins
push
xchg
dec
adc
mov
das
and
and
add
and
pop
lock
jo
mov
mov
scas
(bad)
loopne
or
nop
mov
repz
lods
lahf
dec
lods
lods
mov
lods
inc
pop
lock
jo
mov
mov
scas
xchg
jmp
lods
das
into
repz
lds
sub
mov
cmc
push
mov
xor
fbld
or
popa
popf
dec
lods
sub
pop
lock
jo
mov
mov
push
mov
xor
jecxz
xor
inc
xchg
dec
lods
sub
pop
lock
jo
test
mov
push
mov
xor
xchg
or
cmp
out
in
inc
pop
lock
jo
mov
mov
lea
cmp
gs
dec
lods
lods
xor
lods
inc
xchg
and
jb
(bad)
mov
jae
inc
mov
or
das
into
repz
rol
lods
inc
xchg
adc
add
fs
jb
(bad)
mov
jo
inc
xchg
adc
lods
int3
retf
int3
cmc
push
xchg
dec
(bad)
ficom
sti
adc
test
retf
sub
int
movs
lods
inc
lock
mov
fisttp
adc
push
mov
xchg
add
add
lea
sub
mov
(bad)
call
pushf
pop
or
das
xor
cwde
jno
dec
lods
das
xor
add
daa
call
mov
pop
or
inc
pop
or
lds
jno
jo
lds
push
lods
inc
fisub
jmp
inc
int
cdq
jmp
xchg
into
ja
xchg
ret
and
mov
inc
mov
lds
shl
out
inc
pop
or
xor
lods
out
mov
pop
mov
cmc
lods
mov
xor
mov
xor
xor
add
daa
call
adc
pop
add
jno
jo
lds
xor
and
push
and
xor
das
xor
das
aaa
data16
das
xor
das
xor
xor
inc
pop
or
dec
pop
sbb
adc
lods
int3
hlt
data16
adc
push
jo
mov
mov
lods
mov
xor
mov
xor
sub
pop
push
lods
inc
bound
jo
lds
xor
outs
pusha
xor
cmp
neg
mov
xor
mov
xor
sub
pop
je
ins
pop
or
inc
bound
jo
lds
xor
sub
or
in
dec
lods
das
xor
cwde
jno
dec
lods
das
xor
cwde
add
fs
xor
das
sbb
xor
fimul
sub
pop
or
or
or
out
mov
push
jo
mov
push
jo
mov
lds
mov
inc
xor
inc
pop
out
inc
pop
xor
lods
sub
add
lods
mov
xor
mov
xor
das
push
fs
inc
xor
push
pop
shrd
bound
jo
(bad)
dec
lods
das
xor
jae
xor
lods
lahf
dec
lods
(bad)
cmc
and
inc
xor
jo
mov
pop
inc
fcom
or
sub
pop
or
push
xor
add
in
popa
xor
inc
int
cdq
jmp
int
jo
lds
or
das
add
xor
aas
pop
shrd
bound
jo
(bad)
dec
lods
das
xor
(bad)
or
lds
repz
jno
dec
lods
das
xor
cwde
and
push
or
(bad)
or
sub
pop
shrd
bound
jo
(bad)
dec
lods
das
xor
xchg
popa
xor
imul
jmp
add
test
xor
push
mov
push
mov
push
jo
mov
(bad)
jle
jmp
xor
sub
pop
out
inc
pop
xor
lods
ret
inc
xchg
pushf
push
pop
xor
lods
das
xor
cwde
jno
dec
lods
das
xor
cwde
add
fs
xor
sub
pop
or
inc
bound
jo
lds
xor
add
or
xor
repz
jno
dec
lods
das
xor
cwde
add
retfw
or
lods
inc
xor
xor
fimul
sub
pop
or
xor
or
out
movs
in
inc
pop
or
jo
mov
push
jo
mov
lds
add
lds
or
sub
pop
out
inc
pop
xor
lods
push
das
lods
inc
xchg
cld
add
test
retf
das
xor
cwde
jno
dec
lods
das
xor
cwde
add
data16
sub
pop
lods
lods
inc
xor
xor
fimul
sub
pop
or
mov
cmps
mov
push
jo
mov
push
jo
mov
lds
or
sub
pop
sbb
inc
xor
inc
pop
add
lods
inc
xor
out
mov
push
jo
mov
push
jo
mov
(bad)
or
sub
pop
sbb
inc
xor
inc
pop
add
lods
inc
xor
out
test
test
int
cdq
jmp
int
jo
(bad)
pop
pop
and
cdq
xor
inc
mov
lds
cmp
out
inc
pop
or
inc
xor
jmp
xor
ins
popf
dec
lods
das
xor
cwde
jno
dec
lods
das
xor
cwde
and
sub
sub
pop
sbb
inc
xor
inc
pop
add
lods
inc
xor
out
mov
push
jo
mov
push
jo
mov
(bad)
or
sub
pop
adc
inc
xor
inc
pop
push
inc
pop
xor
lods
out
lods
inc
xchg
xchg
push
pop
xor
xchg
mov
push
or
mov
test
mov
retf
repz
sbb
adc
pop
cli
cli
in
adc
retf
or
mov
dec
lods
mov
(bad)
repz
int3
hlt
fs
test
or
lods
fsqrt
push
mov
cmp
test
int
movs
jmp
lods
int3
retf
int3
ja
and
mov
in
xor
inc
int
cdq
jmp
call
adc
ja
std
das
xor
sub
pop
rcr
fs
test
or
inc
xor
inc
xchg
dec
sbb
mov
xor
adc
retf
mov
in
adc
pop
or
lds
jl
jo
lds
xor
inc
xor
inc
popf
dec
lods
int3
retf
int3
cmc
lods
mov
xor
mov
xor
xor
add
daa
call
adc
pop
add
jno
jo
lds
xor
pop
xor
and
xor
das
xor
das
aaa
data16
das
xor
das
xor
xor
inc
pop
or
dec
pop
sbb
adc
adc
push
jo
mov
lea
lods
mov
xor
mov
xor
das
push
mov
fs
inc
mov
lds
mov
or
add
or
out
mov
lods
mov
fimul
das
xor
xor
jo
mov
mov
xor
jo
mov
repz
lods
lahf
dec
lods
lods
(bad)
adc
div
cdq
xor
lods
das
xor
xor
jo
mov
mov
xor
mov
sub
int
inc
call
sub
repz
jno
dec
lods
das
xor
cwde
and
push
or
(bad)
push
pop
jbe
inc
xor
inc
pop
add
xchg
adc
pop
xor
mov
cmc
lods
mov
xor
mov
xor
xor
jns
sbb
jmp
or
sub
pop
rcr
and
ficom
inc
xor
inc
jbe
repz
das
xor
cwde
jno
dec
lods
das
xor
cwde
add
fs
xor
sub
lods
inc
xor
xor
fimul
sub
pop
or
fs
mov
push
cmp
or
inc
int
cdq
jmp
jmp
push
pop
imul
xor
inc
pop
or
inc
bound
jo
lds
xor
dec
pop
xor
jne
dec
lods
das
xor
cwde
jno
dec
lods
das
xor
cwde
add
fs
inc
xor
das
push
lods
inc
xor
fimul
sub
pop
or
in
sub
lods
out
mov
sub
or
inc
int
cdq
jmp
jmp
push
pop
pop
(bad)
or
sub
pop
or
inc
bound
jo
lds
xor
(bad)
pop
xor
rol
repz
jno
dec
lods
das
xor
cwde
add
fs
inc
xor
das
sub
lods
inc
xor
(bad)
sub
pop
or
je
or
out
mov
push
jo
mov
push
jo
mov
lds
int
lods
inc
pop
adc
inc
xor
inc
pop
out
inc
pop
xor
lods
retf
inc
xchg
lods
push
pop
xor
mov
xor
mov
xor
sub
pop
and
push
pop
or
lds
cmp
dec
fimul
sub
fidiv
mov
jb
and
add
and
pop
or
jo
mov
push
jo
mov
(bad)
ins
pop
dec
(bad)
push
pop
or
lds
jno
jo
lds
lods
sub
fimul
test
jae
mov
or
inc
int
int
jo
(bad)
pop
pop
push
lds
mov
sub
pop
add
lods
inc
xor
out
mov
push
jo
mov
push
jo
mov
(bad)
or
sub
pop
adc
inc
xor
inc
pop
push
inc
pop
xor
lods
adc
pop
xor
aam
int
and
add
and
fisubr
repz
pop
and
mov
mov
adc
add
xor
sub
pop
(bad)
inc
pop
pextrw
inc
xor
test
or
int3
hlt
(bad)
push
mov
xor
inc
fs
pop
xor
xchg
or
lods
xor
lods
inc
mov
push
inc
cmc
dec
pop
inc
xor
inc
xor
call
mov
pop
xor
xor
xor
(bad)
not
sbb
jg
das
xor
fdivr
xor
jo
push
xor
repz
ss
mov
mov
js
das
ss
hlt
std
mov
test
xor
mov
mov
retf
repnz
outs
adc
or
adc
ret
mov
jmp
mov
pop
lods
inc
pop
xchg
ins
pop
xor
push
adc
xor
xchg
pop
xor
dec
xor
xchg
mov
rep
xor
fs
jo
and
xor
push
mov
xor
push
pop
nop
ins
pop
xor
push
adc
xor
imul
repz
xor
fs
test
and
xor
push
mov
xor
push
pop
adc
xor
push
adc
xor
sub
mov
repz
lods
sub
or
or
cmp
or
push
pop
push
outs
pop
xor
push
adc
xor
sub
mov
repz
lods
(bad)
sbb
dec
inc
sbb
lods
enter
mov
and
rep
xor
sbb
xor
push
mov
xor
stos
xor
lods
inc
mov
push
dec
inc
sbb
lods
enter
mov
and
repz
xor
fs
shl
push
mov
xor
push
pop
cmp
pop
xor
push
adc
xor
lods
lds
mov
test
and
xor
push
mov
xor
push
pop
push
sub
repz
adc
xor
das
xor
jo
lds
(bad)
enter
mov
pushf
dec
lods
lods
jne
push
mov
xor
jo
lds
imul
mov
xor
xchg
pop
xor
sbb
test
add
push
mov
ss
int3
xlat
pop
std
push
fs
xor
mov
inc
dec
dec
adc
mov
test
mov
mov
ror
xor
lods
cli
adc
inc
mov
pop
push
push
pusha
in
stos
int
cmp
lods
push
ficomp
push
adc
xchg
or
int3
xlat
lea
cmp
fiadd
push
ret
int3
ret
int3
mov
pop
mov
ret
int3
hlt
fs
xchg
and
(bad)
push
mov
xor
cld
cmp
sti
push
int
call
int
adc
inc
sbb
lods
enter
mov
and
lods
int3
ret
int3
hlt
mov
mov
repz
inc
inc
sbb
lods
enter
mov
and
lods
lds
psubusb
outs
pop
xor
push
adc
xor
inc
inc
sbb
lods
enter
mov
daa
or
std
(bad)
lods
inc
(bad)
rcl
push
mov
shl
mov
cmps
iret
out
inc
mov
repz
lods
xchg
lods
inc
mov
pop
mov
and
jo
and
(bad)
push
mov
xor
mov
clc
iret
out
inc
mov
repz
lods
mov
lods
inc
mov
retf
shl
mov
inc
into
out
inc
mov
repz
lods
push
sbb
mov
and
jo
and
(bad)
push
mov
xor
mov
or
inc
mov
repz
lods
push
sbb
mov
retf
shl
mov
fcmove
out
inc
mov
repz
lods
sbb
mov
and
jo
and
(bad)
push
mov
xor
mov
adc
out
inc
mov
repz
lods
jmp
mov
and
jo
and
(bad)
push
mov
xor
enter
mov
fdivp
push
(bad)
fcom
inc
xor
jo
lds
dec
lods
lods
xchg
loopne
mov
mov
pop
mov
retf
ja
sbb
clc
(bad)
push
mov
adc
cli
shr
xor
mov
lods
inc
mov
cmp
or
mov
cld
and
add
mov
in
test
repz
repz
dec
repnz
xor
lods
lods
(bad)
lods
inc
mov
push
mov
mov
scas
inc
xor
jg
mov
clc
int
push
mov
xor
mov
add
and
mov
repz
sub
mov
repz
lods
repnz
inc
mov
mov
mov
fidiv
inc
xor
cld
int3
repz
inc
test
or
and
and
jne
adc
mov
scas
inc
xor
lods
inc
inc
cmp
aad
dec
lods
sub
mov
repz
lods
data16
inc
mov
repnz
xor
sub
mov
repz
lods
or
scas
jno
lods
inc
xor
ror
push
mov
xor
stos
mov
inc
mov
repz
sub
mov
repz
lods
ss
inc
pop
pop
inc
pop
xor
push
adc
xor
push
mov
outs
sbb
mov
ss
and
into
hlt
push
mov
jo
and
into
hlt
push
mov
xor
and
lock
mov
es
int3
ret
int3
mov
pop
mov
xor
jo
and
into
lock
mov
int
cmp
pop
lods
inc
xor
push
(bad)
repnz
lods
sub
lods
inc
imul
(bad)
les
movs
inc
xor
add
lock
mov
xor
jo
and
into
hlt
push
mov
xor
and
or
ror
push
mov
xor
ror
push
mov
xor
shr
push
mov
out
sti
push
mov
int3
repz
push
sbb
shr
push
mov
int3
repz
inc
fld
push
enter
mov
int
scas
xor
test
ret
mov
int
sub
pop
rol
xor
push
adc
xor
push
mov
and
lods
inc
mov
repz
into
repnz
mov
xor
clc
jmp
push
gs
lods
push
pop
lods
inc
mov
repz
into
hlt
push
mov
retf
lods
cli
sbb
test
into
hlt
push
mov
xor
clc
into
repnz
mov
retf
enter
adc
xchg
mov
mov
pop
or
lock
hlt
push
mov
xor
das
xor
or
or
lods
adc
lods
inc
mov
repz
push
int
inc
mov
(bad)
repz
(bad)
test
xchg
int3
mov
mov
int
inc
in
and
int3
hlt
fs
xor
or
les
or
sbb
retf
int
repz
sti
into
test
std
push
pop
lods
inc
fimul
mov
adc
test
jmp
inc
xor
jo
mov
in
push
xor
rcl
fst
in
push
xor
inc
fiadd
inc
xor
scas
das
pusha
lods
inc
mov
mov
std
call
xor
popf
xor
and
pop
pop
add
in
push
xor
sub
fisub
inc
xor
das
push
xor
inc
mov
iret
lds
or
enter
mov
cmp
mov
xor
inc
pop
pushf
sbb
xor
push
adc
int
imul
add
push
aaa
je
pop
xor
pusha
dec
enter
or
xor
lods
mov
test
(bad)
repz
int3
icebp
in
push
xor
xchg
jg
mov
scas
repz
(bad)
mov
(bad)
mul
mov
int
lods
scas
add
sbb
or
repz
mov
jle
push
sbb
int3
repz
inc
test
or
and
and
mov
int3
int3
rol
mov
sbb
mov
inc
mov
repnz
fcomip
push
inc
fisub
inc
xor
fmul
mov
test
repz
xor
sub
xchg
pop
lods
inc
mov
repz
sub
pop
fadd
xor
push
adc
xor
enter
mov
and
mov
xor
rcl
add
xchg
loope
mov
int
sub
or
das
xor
push
adc
xor
outs
das
xor
fisttp
or
popf
sbb
and
pop
enter
fs
mov
dec
lods
sub
fcmovbe
mov
daa
fdiv
push
enter
pop
xor
pop
and
or
sub
pop
pushf
sbb
xor
jo
lds
sahf
pop
lods
inc
mov
repz
in
inc
mov
lods
inc
xor
retf
loopne
mov
dec
int3
mov
inc
mov
and
inc
pop
pushf
sbb
xor
jo
lds
dec
lods
lods
inc
pop
lods
inc
mov
repz
in
inc
mov
lods
inc
xor
retf
loopne
out
pop
xor
sub
pop
ret
xor
jae
inc
js
or
(bad)
test
loope
mov
jo
adc
xor
jne
or
cmps
mov
repz
pop
or
inc
pop
or
inc
pop
or
inc
xor
inc
fidivr
call
ja
or
inc
pop
or
inc
(bad)
in
dec
xor
add
sub
lock
push
adc
xor
push
(bad)
cli
repz
lds
or
lods
enter
adc
int
cli
mov
cmp
sub
sub
int
sbb
mov
fisub
or
add
sub
lock
push
adc
xor
push
(bad)
cli
repz
lds
or
lods
enter
adc
int
cli
mov
cmp
sub
sub
int
sbb
int
sbb
mov
inc
xor
dec
int3
mov
inc
mov
fcomip
push
int3
icebp
sub
jno
dec
lods
int3
ja
and
mov
inc
mov
cmp
lods
cmp
or
inc
fcmovb
mov
xchg
pop
psrld
lods
lods
inc
lods
inc
mov
shr
popf
sbb
and
pop
or
loopne
or
int3
ja
push
mov
lods
inc
xor
call
inc
mov
mov
add
or
inc
xor
or
or
inc
int
cdq
jmp
mov
or
inc
xor
lods
sub
pop
in
pop
xor
lods
sub
add
cmp
pop
or
adc
lods
das
xor
fcomip
int
xor
or
inc
xor
scas
jo
inc
push
mov
out
inc
(bad)
in
dec
xor
rcr
pushf
popf
mov
or
das
xor
call
stos
int
test
mov
inc
lods
inc
mov
repz
enter
mov
test
dec
out
inc
pop
pop
imul
xor
(bad)
not
test
cs
inc
enter
in
jecxz
repz
xor
and
mov
repz
das
xor
sub
pop
or
inc
fisub
mov
loopne
or
enter
mov
pop
or
sti
inc
dec
lods
das
xor
lods
add
dec
xor
inc
pop
clc
lods
inc
xor
mov
xor
fisttp
or
pop
mov
(bad)
jg
or
enter
lods
out
lods
inc
pop
or
inc
pop
or
add
pop
inc
xor
or
dec
bnd
sbb
xchg
or
int3
xlat
lea
xor
jl
jmp
inc
xor
mov
inc
xor
(bad)
retf
rcr
fcmovnu
movs
inc
xor
mov
ror
inc
nop
and
sbb
or
jge
or
dec
mov
lods
inc
xor
or
or
js
enter
add
sahf
xor
inc
int
rol
repz
int3
mov
push
mov
push
or
sub
(bad)
in
cmps
int
and
repz
int3
retf
int3
cmc
sub
adc
int
inc
push
repnz
into
xor
mov
jbe
in
inc
ficomp
mov
xor
sub
mov
push
mov
mov
repz
cli
icebp
push
mov
mov
repz
out
icebp
push
mov
cmps
fcom
int
cmp
loop
call
repz
outs
mov
push
mov
shl
push
mov
int
std
das
xor
mov
xor
imul
and
(bad)
shl
push
mov
pop
enter
add
xchg
enter
pusha
imul
dec
or
(bad)
pop
imul
inc
enter
jns
adc
int
sub
inc
xor
mov
xor
mov
retf
int3
cmc
in
inc
xor
mov
xchg
or
add
xor
lds
or
inc
ficom
mov
inc
xor
mov
test
test
cmc
lods
lods
jmp
sub
or
mov
aas
or
lods
add
lods
inc
mov
mov
int
and
mov
hlt
push
mov
or
xor
aaa
test
fwait
dec
lods
xor
aaa
test
lahf
dec
lods
xor
aaa
test
or
cmp
aaa
test
or
dec
popf
dec
lods
xor
aaa
test
popf
dec
lods
dec
mov
stos
inc
xor
mov
ds
into
mov
push
mov
or
and
test
or
jno
dec
lods
xor
fs
xor
in
dec
xor
mov
ds
(bad)
cmc
sub
inc
xor
push
inc
mov
jno
int
lods
int3
retf
int3
cmc
sub
adc
xor
push
lods
ins
or
rdmsr
or
mov
mov
push
mov
fisub
cmps
inc
xor
inc
inc
sub
inc
pop
or
adc
dec
lods
das
xor
(bad)
dec
xor
jo
mov
cmps
inc
xor
push
inc
xor
stos
ins
lods
inc
mov
repz
mov
int
lods
lds
js
pop
xor
lods
inc
pop
rep
inc
xor
push
adc
jo
inc
fdivr
or
enter
mov
jb
xchg
inc
xor
(bad)
retf
pop
pop
or
lods
enter
mov
mov
add
xor
lods
das
xor
jo
mov
repz
rol
lods
inc
(bad)
inc
xor
mov
int
and
mov
repz
enter
mov
fmul
enter
mov
ds
(bad)
neg
enter
mov
cs
movs
inc
xor
inc
inc
sub
inc
pop
or
push
fmul
das
xor
(bad)
dec
xor
jo
test
cmps
inc
xor
push
inc
xor
enter
mov
mov
lods
inc
inc
cmc
cs
xor
sub
pop
or
jo
or
mov
xor
dec
dec
xor
xor
or
mov
cmp
repz
iret
mov
lods
mov
dec
or
inc
pop
or
scas
fisttp
das
xor
pop
dec
xor
jo
test
movs
inc
xor
sub
or
shl
push
mov
int
push
jns
jle
int3
retf
int3
cmc
sub
adc
int
std
sub
mov
repz
lods
call
sub
mov
repz
mov
xor
mov
clc
xor
push
mov
xor
sub
pop
or
cmp
or
mov
xor
xchg
inc
dec
ss
int3
retf
int3
mov
push
mov
mov
push
mov
(bad)
icebp
push
mov
jo
and
(bad)
icebp
push
mov
xor
and
or
shl
push
mov
popf
dec
lods
lods
xchg
add
inc
mov
lods
mov
adc
das
xor
jo
mov
repz
imul
xchg
scas
inc
xor
push
mov
push
mov
(bad)
icebp
push
mov
jo
and
(bad)
icebp
push
mov
xor
and
or
shl
push
mov
popf
dec
lods
lods
push
add
inc
mov
lods
mov
adc
das
xor
jo
mov
repz
ins
popf
dec
lods
lods
data16
inc
fstp
scas
inc
xor
push
(bad)
cli
repz
lds
or
push
inc
inc
sub
inc
pop
or
jne
dec
lods
das
xor
fisttp
or
jo
mov
movs
inc
xor
lods
inc
xor
ror
push
mov
test
daa
shl
push
mov
xor
xor
jo
mov
repz
ins
popf
dec
lods
lods
ror
lods
inc
fcmovne
scas
inc
xor
inc
mov
repz
inc
inc
mov
mov
mov
repz
enter
mov
fmul
enter
mov
cmp
mov
mov
push
mov
adc
stos
inc
xor
inc
inc
sub
inc
pop
or
push
fisttp
das
xor
pop
inc
xor
jo
mov
stos
inc
xor
in
xor
ror
push
mov
test
daa
shl
push
mov
xor
xor
jo
mov
repz
gs
dec
lods
lods
sbb
lods
inc
fild
scas
inc
xor
inc
mov
repz
int
sub
mov
int3
repz
jl
jle
(bad)
fld
xor
push
adc
int
std
sub
mov
repz
lods
cs
mov
das
lods
das
xor
xor
popf
dec
lods
lods
mov
lods
inc
mov
repz
(bad)
rcl
push
mov
int
and
pop
push
mov
repnz
mov
xor
inc
inc
dec
and
movs
in
inc
mov
push
add
inc
cmc
and
pop
or
rol
icebp
push
mov
fwait
dec
lods
mov
int
inc
inc
xor
inc
mov
repz
das
xor
jo
push
lock
repnz
mov
xor
push
(bad)
cli
repz
lds
or
lods
enter
mov
scas
stc
push
mov
(bad)
repnz
mov
xor
enter
mov
pop
adc
pop
xor
sbb
mov
sti
dec
jge
or
lock
repnz
mov
xor
cwde
add
or
inc
pop
or
inc
pop
or
inc
xor
inc
fcmove
test
mov
repz
(bad)
(bad)
scas
das
xor
mov
int
addr16
xor
dec
mov
les
mov
lods
inc
inc
cmc
and
pop
or
rol
icebp
push
mov
or
xchg
push
mov
xor
inc
mov
repz
das
xor
jo
push
lock
repnz
mov
xor
push
xchg
push
mov
xor
inc
inc
enter
or
inc
mov
lods
ja
or
inc
pop
or
xor
dec
out
inc
pop
pop
imul
xor
(bad)
not
inc
int
movs
jmp
lods
int3
retf
int3
mov
push
mov
and
fcom
jns
mov
cmp
pop
inc
xor
sbb
outs
push
xor
mov
fs
xor
mov
jns
push
and
(bad)
add
test
ja
nop
inc
xor
inc
xor
push
dec
sbb
dec
mov
lods
inc
xor
cwde
rol
cwde
lods
lahf
dec
lods
lods
call
mov
fisub
push
jo
mov
test
lds
repz
imul
cmp
dec
int
mov
jb
inc
sub
or
int3
retf
int3
cmc
aaa
cwde
pop
xchg
dec
lods
xor
repz
ins
popf
dec
lods
lods
bound
lods
inc
or
test
jae
fmul
cmp
js
or
std
(bad)
and
add
test
pop
sub
add
jns
lds
js
pop
xor
dec
int
inc
call
ss
jle
sub
add
jns
lds
js
pop
xor
sub
jo
inc
mov
xor
push
ins
retf
je
aaa
cwde
lods
lahf
dec
lods
xor
mov
xchg
dec
lods
int3
retf
int3
cmc
aaa
cwde
lds
xchg
jle
and
add
jns
into
das
sub
add
test
retf
jle
adc
add
das
or
add
popf
dec
lods
xor
mov
or
pop
sub
add
jns
into
das
and
or
xor
mov
popf
dec
lods
dec
jmp
sbb
and
fmul
pop
inc
xor
or
scas
xor
push
ins
retf
sbb
xchg
or
inc
int
movs
inc
jno
cmp
inc
int
mov
aad
or
inc
int
mov
aad
or
inc
int
mov
aad
or
inc
int
lea
or
aad
or
inc
int
add
or
inc
int
popf
inc
jno
cmp
inc
int
cdq
inc
jno
cmp
inc
test
gs
inc
xor
xor
(bad)
int3
retf
lods
bound
lods
inc
mov
movs
int3
ja
movs
test
and
jne
lods
add
out
add
js
(bad)
retf
mov
or
movs
test
cs
xor
imul
mov
inc
mov
imul
push
mov
mov
sbb
inc
inc
out
xor
pop
mov
int3
adc
int
push
ret
add
mov
xchg
popa
dec
shl
or
xor
inc
jno
cmp
inc
int
jmp
aad
or
inc
int
in
jno
cmp
inc
int
loope
jno
cmp
inc
int
std
inc
jno
cmp
inc
int
stc
inc
jno
cmp
inc
int
cmc
inc
jno
cmp
inc
int
icebp
inc
jno
cmp
inc
int
int
jno
cmp
inc
int
leave
inc
jno
cmp
inc
int
lds
or
aad
or
inc
int
rol
cmp
inc
int
fld
or
aad
or
inc
int
fld
or
aad
or
inc
int
aad
jno
cmp
inc
int
rol
or
aad
or
inc
int
sub
aad
or
inc
int
sub
or
aad
or
inc
int
and
aad
or
inc
int
and
or
aad
or
inc
int
cmp
aad
or
inc
int
cmp
or
aad
or
inc
int
xor
aad
or
inc
int
xor
or
aad
or
inc
int
or
aad
or
inc
int
or
or
aad
or
inc
int
add
aad
or
inc
int
add
or
aad
or
inc
int
sbb
aad
or
inc
int
sbb
or
aad
or
inc
int
adc
aad
or
inc
int
adc
or
aad
or
inc
int
ins
inc
jno
cmp
inc
int
imul
or
inc
int
gs
jno
cmp
inc
int
popa
inc
jno
cmp
inc
int
jge
jno
cmp
inc
int
jns
jno
cmp
inc
int
jne
jno
cmp
inc
int
jno
jno
cmp
inc
int
dec
inc
jno
cmp
inc
int
dec
inc
jno
cmp
inc
int
inc
inc
jno
cmp
inc
int
inc
inc
jno
cmp
inc
int
push
inc
jno
cmp
inc
int
push
inc
jno
cmp
inc
int
lods
inc
jno
cmp
inc
int
test
aad
or
inc
int
movs
inc
jno
cmp
inc
int
mov
aad
or
inc
int
mov
aad
or
inc
int
mov
aad
or
inc
int
mov
jno
cmp
inc
int
mov
jno
cmp
inc
int
lea
or
aad
or
inc
int
mov
or
aad
or
inc
int
test
or
aad
or
inc
int
add
or
inc
int
popf
inc
jno
cmp
inc
int
cdq
inc
jno
cmp
inc
int
xchg
inc
jno
cmp
inc
int
xchg
inc
jno
cmp
inc
int
in
inc
jno
cmp
inc
int
jmp
aad
or
inc
int
in
jno
cmp
inc
int
loope
jno
cmp
inc
int
std
inc
jno
cmp
inc
int
stc
inc
jno
cmp
inc
int
cmc
inc
jno
cmp
inc
int
icebp
inc
jno
cmp
inc
int
int
jno
cmp
inc
int
leave
inc
jno
cmp
inc
int
fld
or
aad
or
inc
int
fld
or
aad
or
inc
int
aad
jno
cmp
inc
int
rol
or
aad
or
inc
int
sub
aad
or
inc
int
and
or
aad
or
inc
int
cmp
aad
or
inc
int
cmp
or
aad
or
inc
int
xor
aad
or
inc
int
xor
or
aad
or
inc
int
or
aad
or
inc
int
or
or
aad
or
inc
int
add
aad
or
inc
int
add
or
aad
or
inc
int
adc
aad
or
inc
int
adc
or
aad
or
inc
int
ins
inc
jno
cmp
inc
int
imul
or
inc
int
gs
jno
cmp
inc
int
popa
inc
jno
cmp
inc
int
jge
jno
cmp
inc
int
jns
jno
cmp
inc
int
jne
jno
cmp
inc
int
jno
jno
cmp
inc
int
dec
inc
jno
cmp
inc
int
dec
inc
jno
cmp
inc
int
inc
inc
jno
cmp
inc
int
inc
inc
jno
cmp
inc
int
pop
inc
jno
cmp
inc
int
pop
inc
jno
cmp
inc
int
push
inc
jno
cmp
inc
int
push
inc
jno
cmp
inc
