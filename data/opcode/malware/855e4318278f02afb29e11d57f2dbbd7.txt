sub
cmp
xor
add
shl
lds
rol
add
and
mov
xchg
push
sahf
adc
and
(bad)
adc
fs
clc
arpl
ficomp
aad
lods
xor
fst
pop
mov
mov
mov
pusha
or
jnp
nop
iret
test
fcmovu
outs
das
pop
stos
mov
idiv
jmp
mov
fwait
pop
or
ja
sub
push
cmps
xor
fs
and
repnz
pop
leave
pop
push
dec
pop
mov
mov
adc
or
or
(bad)
(bad)
cli
lahf
jg
js
imul
xlat
int3
cdq
es
(bad)
cld
(bad)
(bad)
push
or
movs
dec
aad
(bad)
loop
cwde
add
push
jge
or
cdq
cmp
(bad)
push
fwait
lock
enter
popf
mov
inc
pop
pop
movs
pop
xor
clc
lods
(bad)
fbstp
sub
sahf
stos
fst
xor
loop
(bad)
mov
mov
test
pop
cs
mov
and
dec
sbb
xchg
outs
xchg
sbb
mov
push
popa
fld
out
out
js
aas
dec
nop
cdq
nop
push
popf
inc
jno
mov
xchg
leave
xor
xchg
cmp
imul
sbb
push
cmp
mov
dec
pop
rol
mov
shl
out
out
popf
push
mov
outs
mov
mov
push
xor
inc
dec
or
cwde
adc
add
ret
xlat
adc
jno
cld
fsubr
icebp
call
sbb
into
shl
adc
jno
adc
add
push
dec
(bad)
xor
inc
xchg
jecxz
aaa
push
ret
push
cwde
xor
and
test
nop
lock
sub
inc
sti
or
fistp
cmp
xor
pminub
pop
mov
out
inc
repz
ins
sti
pusha
out
shl
jecxz
dec
adc
pop
adc
jecxz
pop
movs
pop
gs
cld
push
scas
mov
inc
pop
adc
les
cmp
leave
scas
pop
sbb
pop
push
pushf
iret
sbb
jmp
fs
xchg
out
cmp
jns
push
mov
enter
pop
and
hlt
(bad)
sub
xor
out
push
shl
xchg
xchg
mov
or
fs
fmul
into
sub
push
pop
sbb
pop
or
cmp
ins
jnp
outs
test
cwde
dec
popa
cmp
inc
aaa
push
pop
rcr
sbb
imul
and
xlat
pop
cs
mov
in
adc
stos
aad
or
mov
xor
xchg
push
mov
je
stc
mov
mov
shl
sbb
dec
jle
and
inc
or
fs
ret
and
test
mov
dec
sub
mov
pop
xchg
mov
je
hlt
mov
loope
xchg
mov
or
adc
xlat
mov
enter
in
movs
rcl
cwde
cld
lods
pusha
xchg
pop
ror
pop
mov
js
clc
ret
inc
dec
or
xchg
test
push
mov
leave
jl
cmp
jo
stos
pop
mov
sahf
jecxz
lds
jnp
ret
jbe
push
sub
dec
push
xor
mov
loop
mov
(bad)
test
loopne
dec
push
jno
call
cli
push
arpl
xchg
pusha
jno
push
xchg
xchg
hlt
xchg
mov
leave
mov
xchg
push
stc
mov
dec
add
and
in
pop
out
xchg
out
(bad)
mul
push
in
imul
mov
xchg
push
jecxz
jne
not
xchg
into
shufps
pop
cmp
push
and
jbe
clc
mov
add
mov
cmp
sub
and
mov
pop
mov
add
and
xchg
sbb
sub
stos
movs
lods
cmp
movs
(bad)
cld
sbb
dec
cmp
pop
mov
adc
ficom
cmp
test
aam
scas
mov
add
mov
cmp
pop
push
cmps
ss
pop
adc
cmp
inc
aaa
mov
outs
shl
clc
aad
loopne
push
jmp
fs
jo
dec
push
xchg
jmp
mov
inc
test
mov
sbb
cmp
int
inc
sub
popa
push
dec
inc
push
and
sbb
push
call
sbb
push
xchg
dec
jge
sub
fnstsw
nop
lahf
xchg
inc
mov
test
fst
xor
js
test
xchg
push
or
cmp
mov
fs
dec
scas
pop
enter
or
adc
jmp
loopne
loope
add
mov
mov
push
addr16
ficomp
lock
push
inc
cmp
mov
add
sub
xchg
mov
xchg
xchg
mov
std
sbb
es
je
fs
xchg
out
pop
in
mov
xchg
ds
jmp
jmp
retf
outs
enter
ja
lahf
out
loope
and
mov
and
and
les
pop
in
mov
or
ins
xchg
mov
dec
xor
ja
add
add
mov
mov
leave
outs
shr
cmovge
inc
dec
mov
xchg
cli
and
xchg
retf
scas
lds
mov
daa
xor
xor
dec
daa
mov
xor
cmp
inc
outs
mov
and
clc
push
fldcw
retf
jb
lahf
fsub
jns
and
ins
and
(bad)
dec
aad
inc
mov
retf
popf
cmp
adc
test
sbb
sbb
mov
xor
or
ss
loopne
ficom
test
sbb
bound
add
inc
je
mov
pop
inc
test
mov
test
add
sbb
test
pop
push
xchg
xchg
jb
cmps
loope
adc
mov
sub
retf
cmp
sub
cmp
dec
pop
and
push
xchg
nop
dec
int3
xchg
retf
add
xor
mov
push
add
push
scas
sub
jmp
xchg
imul
dec
xchg
cmp
movs
mov
adc
or
outs
enter
push
adc
cmp
add
iret
ja
ins
mov
pop
jae
jbe
push
adc
out
add
sbb
and
stos
xor
in
cmp
cld
mov
out
outs
imul
mov
pop
mov
mov
jp
dec
rcr
cmp
cmps
adc
mov
movs
fwait
push
fdivr
xor
sti
stos
je
push
(bad)
mov
je
ins
inc
int
xchg
sti
cmps
jl
cmp
xchg
sar
dec
and
xor
ffree
call
punpckhbw
out
push
jg
xlat
pop
call
add
stos
ins
ds
test
jns
gs
ss
mov
cdq
xchg
(bad)
xchg
cwde
stos
inc
sub
stos
(bad)
adc
adc
add
adc
loop
clc
mov
shr
daa
outs
sbb
not
cmp
sbb
push
adc
sub
dec
lds
dec
enter
add
add
adc
and
push
stc
mov
sub
mov
push
popf
rol
mov
(bad)
sub
fisubr
outs
push
mov
fidiv
inc
js
dec
sbb
out
mov
push
xlat
(bad)
loop
sbb
stc
push
xchg
push
push
dec
or
push
icebp
inc
test
adc
cs
pop
mov
xor
sahf
leave
es
push
scas
pslld
cwde
test
xchg
xor
and
and
imul
inc
in
pop
aaa
imul
lea
sub
jns
inc
inc
add
cmps
js
pop
sub
ja
cmp
dec
mov
lods
mov
pop
test
fdivp
loop
sub
scas
mov
push
(bad)
push
adc
mov
cmp
cmp
mov
sub
aam
in
test
cmc
clc
leave
ficom
arpl
adc
and
sub
or
out
pop
call
scas
pop
into
cli
or
inc
jbe
inc
or
repnz
mov
pop
or
arpl
or
sbb
mov
cld
or
std
mov
add
or
shl
push
or
ins
fnstcw
hlt
retf
pushf
aaa
repz
add
or
push
xchg
out
popf
cli
fmul
push
mov
adc
xchg
mov
lahf
aaa
das
scas
jecxz
sub
sub
sub
in
aas
xor
push
(bad)
out
call
mov
mov
sub
jnp
push
push
push
and
ja
mov
mov
(bad)
pushf
push
mov
inc
movs
retf
inc
mov
xchg
pop
cmps
leave
(bad)
dec
xchg
nop
stos
mov
out
xor
inc
or
imul
inc
push
xlat
je
adc
inc
adc
xor
cmps
cmp
shl
pop
(bad)
xchg
repnz
gs
nop
cmc
pop
je
mov
adc
cmp
mov
jl
dec
push
mov
dec
aas
cmp
lea
out
pusha
iret
test
retf
dec
adc
lea
cmc
mov
mov
lahf
mov
mov
scas
scas
xchg
lock
stos
pop
es
(bad)
mov
push
push
inc
jmp
bound
(bad)
loope
push
pop
add
mov
mov
and
test
xchg
jnp
aaa
rcr
out
fild
out
fist
sbb
sub
jbe
mov
xor
jns
mov
xchg
test
jmp
dec
adc
arpl
fcom
in
outs
jb
test
mov
and
retf
dec
fsubr
dec
mov
ja
lods
fnsave
cs
outs
inc
dec
jne
aas
mov
out
xor
ja
or
shr
retf
mov
xor
ss
mov
push
mov
aam
add
fld
pop
xchg
xchg
out
push
cmp
in
cmp
xor
jp
mov
call
bound
imul
sbb
push
retf
(bad)
bound
and
mov
iret
adc
adc
sbb
sar
push
xor
sbb
pop
cmp
in
loope
mov
mov
fcomp
lock
sub
jg
xor
lods
jecxz
xor
stos
or
mov
add
dec
push
out
ficomp
bound
xor
inc
mov
ja
ds
loop
push
out
adc
mov
push
mov
mov
or
(bad)
stos
xlat
bnd
test
sub
jnp
jb
mov
iret
xor
ins
mov
cld
sbb
lods
cmp
mov
cmp
repz
fdiv
fmul
inc
jne
adc
push
cmp
or
xchg
and
dec
clc
inc
cwde
shr
cmp
cdq
retf
dec
inc
pop
and
pop
daa
mov
daa
test
sub
dec
sahf
cmc
fwait
test
call
or
test
cld
fmul
loop
ins
out
add
(bad)
xchg
push
mov
jle
nop
jmp
dec
dec
jo
push
pop
sub
adc
or
or
pop
ins
fmul
pop
xor
div
pop
xlat
dec
mov
push
mov
stc
movups
shl
and
add
mov
sub
add
ins
out
push
ss
or
jl
mov
dec
or
inc
sub
sbb
xchg
xor
xor
inc
mov
rcl
cmp
pop
scas
imul
stos
dec
movhps
ins
adc
xlat
fisubr
sub
lods
jno
clc
inc
popa
dec
jno
push
inc
pop
mov
loope
sub
add
(bad)
fwait
out
arpl
and
xchg
sbb
xchg
clts
sbb
push
scas
je
dec
in
popa
sub
ror
imul
jmp
mov
dec
popa
inc
cmp
add
mov
push
pop
aaa
cs
cmc
test
gs
test
jno
neg
xchg
xchg
push
inc
ud2
neg
jae
jae
pop
imul
mov
outs
dec
and
add
mov
(bad)
mov
fmul
int
xchg
pop
pop
mov
fcomp
pop
adc
mov
jmp
retf
int3
cs
jg
cmp
mov
xchg
pop
sub
mov
mov
test
in
and
jnp
inc
pop
mov
dec
push
cs
loope
repnz
jg
mov
push
mov
aaa
mov
push
rol
sbb
(bad)
push
mov
jle
inc
(bad)
and
jb
xor
cwde
sbb
xchg
xchg
fwait
mov
sub
push
xchg
mov
pop
mov
mov
or
and
push
enter
dec
xchg
nop
xchg
dec
dec
mov
inc
sbb
mov
xchg
sub
jns
cmp
sbb
jmp
inc
out
push
push
cmp
in
scas
repz
inc
nop
fisubr
push
mov
or
mov
xchg
xchg
cld
idiv
les
retf
nop
arpl
xor
pop
pop
sbb
and
cmp
sub
fidiv
js
daa
jae
cmp
jne
cmc
push
inc
add
xor
loop
shl
fiadd
xor
movs
xor
push
icebp
aad
add
int3
nop
jge
outs
jbe
sbb
adc
jns
out
mov
pushf
scas
mov
test
in
jle
adc
adc
movs
push
mov
mov
test
test
push
or
les
pop
scas
test
mov
add
xor
sbb
les
dec
jmp
and
or
cmps
ficom
test
mov
ror
inc
push
or
ss
imul
lods
cdq
xchg
stos
dec
adc
fs
popa
ss
mov
jnp
repnz
aaa
push
outs
ret
(bad)
push
mov
xor
mov
jo
adc
mov
cdq
ds
rcr
and
fs
and
sub
test
(bad)
jnp
cli
inc
cmp
les
mov
pop
outs
and
out
xor
mov
jge
jp
inc
mov
hlt
fist
dec
es
pusha
fs
mov
add
pop
mov
or
test
inc
push
cmp
out
icebp
jecxz
mov
enter
push
dec
cmp
mov
sbb
xchg
shl
and
scas
inc
ja
push
xor
test
(bad)
cmps
aad
xchg
xchg
sub
arpl
cmps
pop
xchg
stos
and
fs
pop
(bad)
fst
les
(bad)
cmp
mov
dec
xor
data16
iret
or
test
sbb
push
or
mov
pop
(bad)
dec
loope
(bad)
lock
cmp
ror
mov
cmp
inc
shl
or
push
stc
mov
sar
dec
sbb
xor
stc
dec
or
das
xchg
cdq
sub
xor
jmp
(bad)
push
xor
sub
(bad)
add
mov
xor
xor
or
or
xchg
mov
shl
push
int3
jmp
aam
int
dec
test
test
inc
jmp
push
cmps
(bad)
imul
cmc
cmp
imul
add
or
mov
push
fs
rcr
(bad)
sar
setbe
sbb
dec
fbld
cwde
or
or
jb
mov
sub
dec
pop
push
ins
sbb
dec
mov
pop
scas
mov
xor
push
jae
pushf
xchg
adc
sbb
pusha
xchg
ret
(bad)
jge
aad
pop
dec
(bad)
sti
adc
(bad)
pop
loop
sbb
cli
jo
hlt
xchg
(bad)
pop
adc
jecxz
cmp
jbe
mov
les
adc
mov
pop
sub
idiv
scas
cmp
lds
retf
lahf
mov
xchg
xchg
rcl
jle
add
iret
inc
lock
sub
outs
mov
imul
inc
xor
out
fs
cmp
ror
pop
fistp
mov
mov
xchg
inc
scas
cli
mov
stos
lea
ror
fld
cmp
or
in
int3
fcmovu
sbb
rol
mov
sbb
sbb
sub
add
dec
mov
enter
sub
aaa
fmul
fldlg2
pcmpgtd
sub
jae
das
jmp
jmp
sub
mov
jnp
shl
pop
xor
push
mov
iret
fisub
and
(bad)
push
add
dec
xchg
or
mov
inc
hlt
lds
mov
xor
lahf
ret
jno
outs
sub
or
jns
or
push
sbb
arpl
lods
push
inc
out
sub
pop
rcl
sub
lahf
in
and
rol
pop
push
ror
je
ret
imul
xchg
mov
jbe
pop
xchg
pop
inc
fst
mov
cmc
inc
sub
push
cmps
jo
pop
push
(bad)
shl
iret
out
jp
in
cmc
push
pop
pop
push
jnp
sub
push
nop
xchg
mov
push
fst
hlt
sahf
pop
fdiv
inc
jle
or
jbe
(bad)
shl
lahf
int3
repz
cmps
fiadd
xchg
sub
add
mov
pop
xchg
inc
xchg
ret
and
mov
adc
inc
hlt
ds
sahf
out
mov
leave
mov
sar
pop
xor
pop
test
mov
jmp
enter
xor
nop
repnz
ins
xor
(bad)
stc
imul
push
mov
cli
xchg
aas
mov
pop
retf
ss
stos
hlt
imul
xchg
into
enter
push
cmp
addr16
in
call
mov
mov
shl
cmp
inc
out
mov
sar
push
fsubrp
iret
mov
js
jae
mov
imul
xchg
jle
jmp
or
or
imul
outs
mov
pushf
mov
push
scas
(bad)
repz
outs
mov
(bad)
fld
push
mov
scas
xchg
xor
cmp
lds
into
into
sbb
xor
xor
mov
mov
mov
cmp
jmp
mul
pop
pop
sbb
mov
test
add
scas
mov
lds
jmp
xchg
mov
xchg
xchg
add
sub
and
test
push
jnp
mov
pushf
inc
out
test
jno
jge
lods
in
mov
cmp
adc
sub
push
cli
or
inc
icebp
mov
pop
cmp
cmp
call
jo
in
inc
js
or
and
clc
cmp
fld
and
jmp
fadd
ficom
iret
dec
out
dec
mov
cmp
or
shr
mov
jge
ins
mov
je
test
or
test
ja
pop
add
mov
jne
lds
cmps
xchg
sub
imul
fs
xor
pop
arpl
lock
jmp
push
mov
(bad)
xchg
std
inc
lods
add
in
repz
shr
aam
xlat
mov
jmp
mov
fisubr
pushf
push
es
mov
xor
xchg
ret
icebp
jge
sub
xchg
and
outs
out
arpl
loopne
rol
or
fwait
mov
ds
fist
hlt
nop
pop
aas
fnstenv
mov
(bad)
cmps
inc
sub
shr
loop
in
add
adc
rcr
xchg
xchg
push
mov
jo
shl
dec
or
mov
icebp
shl
adc
xor
clc
inc
jmp
dec
jb
out
cdq
pop
mov
js
xlat
cli
and
mov
in
(bad)
fistp
or
mov
clc
(bad)
sbb
repnz
or
sub
mov
sar
adc
pop
mul
or
ins
mov
mov
ss
xor
dec
(bad)
std
sbb
sbb
or
movs
xor
stos
and
dec
rep
mov
xor
jb
push
(bad)
or
sar
cs
lods
fsubr
mov
jge
xchg
shr
not
sub
bound
push
iret
pop
ficomp
push
loope
mov
jns
test
mov
clc
mov
lods
cmp
push
mov
jmp
xor
das
or
stc
cmc
xchg
mov
mov
push
lahf
and
inc
pop
test
rcl
push
dec
inc
call
pop
jmp
push
fidiv
xor
ret
scas
mov
pusha
in
sbb
gs
in
outs
int
or
fs
ficomp
dec
ret
cs
ds
dec
sbb
inc
aad
shl
dec
dec
std
dec
rcl
test
mov
add
addr16
dec
pop
xchg
jo
mov
and
cld
mov
cdq
neg
stos
inc
mov
es
fdivp
mov
loop
jne
inc
repz
adc
stos
and
cwde
inc
shl
add
dec
fcom
sar
add
daa
lods
push
push
data16
popa
not
punpcklbw
and
cwde
jge
test
mov
pop
loopne
in
in
lds
mov
pop
rcl
adc
outs
call
cld
imul
add
add
repz
inc
pop
mov
scas
add
ror
icebp
adc
cmp
loope
jo
cmp
lock
adc
add
mov
push
je
retf
cld
mov
nop
iret
xchg
dec
stos
neg
and
mov
jno
popa
push
jno
push
scas
sub
sbb
inc
pushf
outs
pop
push
cmp
add
xchg
adc
sub
and
or
cli
jo
sbb
xchg
mov
adc
jle
psubsb
aaa
jb
adc
jb
mov
outs
clc
out
cmps
enter
xchg
popa
test
bound
test
push
jl
js
retf
cld
mov
pop
retf
rol
pop
xor
out
mov
cmp
sub
icebp
test
push
jae
xor
sub
fwait
adc
cmp
and
or
aaa
jmp
lahf
ins
test
and
xor
cld
mov
xor
je
or
jae
mov
fiadd
or
cmp
movs
add
and
sbb
add
adc
jl
nop
cmp
fst
ins
mov
jp
lahf
jl
out
push
jae
cmp
push
fwait
lahf
mov
movs
data16
inc
push
test
mov
sbb
punpckhwd
(bad)
pop
or
dec
mov
es
inc
fidiv
mov
mov
ins
bound
mov
xchg
pop
rcr
test
cdq
out
addr16
inc
jmp
xorps
pusha
adc
inc
repnz
dec
add
jle
scas
aam
stc
or
pusha
mov
or
pusha
bound
mov
pop
iret
xchg
in
test
pop
(bad)
xor
jns
call
or
or
mov
xor
sbb
leave
inc
mov
add
mov
mov
scas
and
fs
jg
jle
add
out
stc
out
add
stos
xor
fcom
jb
fsubr
sar
jbe
sbb
fisubr
ret
outs
popf
pop
test
sbb
jecxz
or
inc
out
mov
aaa
pop
aaa
dec
ins
pop
mov
repz
mov
pop
dec
(bad)
pop
nop
push
or
fcmovb
cmps
sbb
mov
xlat
mov
mov
jecxz
stc
jmp
nop
jnp
(bad)
icebp
jecxz
enter
frstor
xchg
test
into
sbb
fadd
repnz
stc
in
inc
fs
inc
in
jl
and
stc
xchg
xor
mov
outs
mov
inc
in
pmullw
sti
pop
es
inc
in
mov
gs
in
push
addr16
sti
cs
imul
out
lods
jp
stc
xor
dec
dec
sub
jp
xor
mov
mov
fisttp
cmp
loope
mov
adc
aam
popf
dec
movs
dec
jae
lods
test
leave
push
jl
ror
jne
ins
(bad)
outs
push
add
push
cmps
mov
add
movs
pop
dec
lahf
test
test
push
scas
mov
xchg
inc
fisttp
sahf
xor
psubsb
cs
ror
mov
jl
xor
outs
jns
mov
outs
leave
cmc
push
xor
aaa
enter
pop
mov
pop
sub
mov
ret
add
retf
cmp
or
pushf
test
nop
push
call
xchg
adc
sar
retf
mov
fisubr
not
push
push
mov
call
and
or
mov
cli
inc
xor
sbb
xor
imul
add
ret
mov
cmc
imul
pop
lds
add
sti
dec
paddw
and
fdiv
fldcw
inc
jmp
add
ins
daa
mov
pop
iret
pop
add
xchg
mov
fs
jne
inc
xchg
clc
mov
xchg
pop
pushf
in
fcomp
jno
pop
cwde
jle
leave
popf
mov
mov
jp
mov
pushf
push
push
iret
inc
pop
push
inc
mov
cmp
sub
add
push
into
js
data16
je
push
ds
mov
xor
adc
jo
or
(bad)
sub
mov
paddb
mov
cli
xor
repnz
div
and
push
into
jne
add
retf
jmp
inc
dec
dec
fprem1
jl
jns
into
xor
stc
dec
xchg
mov
lods
push
dec
test
test
xor
enter
ret
rcr
jno
enter
xchg
jp
sahf
sahf
add
sbb
int3
enter
dec
xor
fistp
xchg
scas
push
xor
mov
fwait
lea
jnp
fcmovnu
mov
and
stc
sub
mov
or
(bad)
retf
lods
stc
xchg
mov
pop
stos
psllw
cmp
pop
mov
push
add
mov
cmp
gs
fidivr
mov
jno
add
iret
jo
iret
pop
mov
sub
mov
xchg
sbb
fsub
or
loope
out
pop
ins
lea
or
sbb
push
inc
mov
ret
loope
test
adc
jle
pop
(bad)
cs
cmp
call
or
sbb
daa
mov
xor
sub
mov
xchg
add
fsubr
iret
mov
popa
jo
jp
push
sub
jl
scas
and
add
mov
int
or
cli
add
mov
xor
int3
out
add
jmp
std
jmp
dec
mov
test
inc
mov
pop
xchg
push
(bad)
das
mov
jnp
imul
shr
bound
neg
or
adc
data16
ds
addps
aaa
(bad)
cwde
dec
cwde
pop
repnz
xchg
fidivr
jae
(bad)
pop
stos
adc
fimul
es
xor
xchg
jge
loope
jbe
jnp
cmp
pop
cli
mov
loop
sar
adc
ret
pop
mov
and
xor
jmp
int3
(bad)
(bad)
out
es
(bad)
fbld
leave
xor
sbb
xor
leave
out
and
pop
inc
test
icebp
adc
push
std
test
lods
pop
sbb
xchg
out
jae
ss
xchg
stos
push
mov
xchg
cmp
pop
inc
xchg
inc
data16
mov
daa
jo
adc
jb
add
ret
xchg
pusha
adc
pop
pusha
daa
or
lea
or
fcmovb
jno
(bad)
ret
js
lods
outs
clc
mov
mov
mov
push
and
sbb
dec
sbb
pusha
add
mov
pop
shr
mov
push
jns
add
pop
xor
in
xchg
pop
jae
push
push
das
leave
mov
(bad)
js
out
or
(bad)
sti
and
or
scas
int
aad
mov
ret
mov
xchg
leave
ja
stos
cs
adc
cmp
push
repz
stc
add
iret
dec
jmp
jle
sahf
leave
cmp
popf
popf
fwait
or
xchg
jb
(bad)
sbb
fs
pop
xor
clc
and
repz
ret
mov
fdivr
retf
sbb
call
aam
sub
and
mov
stos
push
pop
sbb
fisttp
cmp
xor
pop
mul
cmps
fcom
xor
fidivr
fst
sub
mov
in
ins
jno
jmp
push
loope
int3
repz
pop
ret
aam
dec
aad
std
xor
xor
aad
xor
in
jge
mov
int3
xchg
mov
sahf
les
outs
or
mov
dec
jg
in
(bad)
repz
xor
imul
leave
mov
in
dec
(bad)
xor
xchg
cmc
mov
ror
sahf
push
(bad)
(bad)
and
je
adc
jae
ret
add
pop
push
ret
gs
cmp
cmp
cli
add
pushf
bound
push
mov
iret
rol
mov
in
mov
cli
dec
fdiv
jo
sti
loope
or
mov
sbb
arpl
pop
dec
dec
and
stos
xlat
mov
mov
iret
(bad)
sub
inc
jmp
or
xor
dec
stos
hlt
xor
push
lods
popf
ror
mov
push
adc
call
fbld
fadd
ficomp
sti
enter
imul
add
neg
mov
jne
pop
inc
and
mov
mov
(bad)
(bad)
fs
push
push
push
add
and
hlt
mov
(bad)
xor
(bad)
cmp
pop
and
xchg
adc
pop
rol
std
push
cmp
js
and
in
adc
loope
pop
cmp
cmp
xor
xchg
sbb
pop
jbe
or
adc
pop
mov
es
repz
lahf
std
pop
cmc
in
rcr
lahf
cmp
loop
(bad)
out
daa
inc
call
push
inc
pop
fcom
inc
repnz
fbld
lds
fidiv
jle
adc
mov
cdq
pop
leave
sbb
stos
(bad)
stos
repz
pop
test
sub
cmp
stos
xchg
mov
in
popf
int3
das
push
mov
add
lahf
dec
add
adc
xor
lea
js
jae
pop
loopne
fs
push
adc
dec
std
jne
js
jge
bound
mov
push
mov
or
dec
jnp
cmp
addr16
sbb
mov
pop
inc
lock
jge
mov
popa
cmc
mov
nop
cs
dec
add
mov
push
js
ret
imul
adc
sbb
stos
popf
mov
cld
push
call
lods
call
retf
push
push
out
mov
add
push
mov
mov
pop
stos
adc
ror
addr16
movs
retf
xor
and
sbb
cs
sahf
(bad)
das
push
dec
add
push
dec
jmp
lahf
xchg
mov
int
movs
scas
cmp
cwde
vcvttss2si
jo
das
add
push
daa
hlt
nop
and
push
pop
inc
clc
and
push
mov
adc
pop
and
add
mov
mov
and
pop
shr
add
inc
and
and
aam
mov
fdivr
scas
repnz
jnp
jmp
in
or
outs
mov
dec
xchg
sbb
adc
cs
jle
dec
std
ret
or
fistp
inc
loopne
xchg
enter
jp
in
(bad)
es
stc
mov
sbb
push
out
imul
retf
mov
inc
pop
pop
cld
mov
das
dec
paddusb
out
pop
xor
into
std
iret
fsub
xor
mov
lods
jo
pop
mov
out
jecxz
push
add
or
test
les
aam
leave
adc
fild
outs
push
(bad)
retf
imul
sub
sub
retf
xchg
movs
out
retf
in
inc
and
cmp
gs
xchg
jmp
fwait
jmp
xor
xlat
or
fdivr
add
push
sti
and
xor
je
fwait
jbe
lock
outs
mov
pop
daa
scas
icebp
aad
fidiv
xchg
vpmulhw
jl
outs
aad
mov
inc
or
in
imul
stc
out
cs
(bad)
push
xchg
ret
jl
int3
adc
aam
cmp
jbe
dec
call
paddusb
jmp
(bad)
push
popa
or
mov
jns
jae
out
dec
xlat
ja
mov
retf
rol
fnstsw
jl
(bad)
cmp
or
xchg
mov
fdivp
cld
push
ret
(bad)
and
vaddss
sbb
call
pop
adc
push
xchg
ins
icebp
xor
jae
sub
pop
mov
mov
hlt
dec
iret
mov
inc
frstor
imul
dec
add
retf
inc
or
popf
(bad)
(bad)
popf
cli
ds
xor
cmp
xor
in
jo
les
ret
test
mov
jne
push
xor
pop
jmp
sub
xor
cs
and
xlat
pop
loopne
cwde
pop
hlt
in
sbb
push
cmp
or
pop
retf
mov
sub
mov
sub
cmps
ss
fidiv
test
lods
or
test
mov
xchg
out
mov
pushf
neg
mov
mov
push
mov
fwait
push
pop
in
inc
xchg
lahf
mov
ret
movs
adc
ins
push
or
popa
das
or
das
mov
jecxz
test
jne
jns
mov
or
xchg
adc
ss
mov
cmps
sub
jle
fcom
xchg
push
rcr
xchg
pop
add
imul
enter
inc
push
xchg
mov
and
jmp
cdq
xor
push
xchg
and
add
mov
pop
xor
push
sbb
mov
mov
ins
cmp
cs
jno
sar
mov
(bad)
dec
sbb
cmps
pop
dec
xchg
push
out
inc
add
sub
push
out
(bad)
retf
cld
fcmovnu
pop
xchg
pushf
ret
cmp
ss
adc
push
mov
xor
xchg
inc
mov
ds
lahf
jnp
dec
icebp
rcr
jb
pop
jecxz
and
ret
push
daa
rcl
loopne
mov
jle
mov
shl
(bad)
sub
xor
cmps
jmp
sbb
push
dec
push
imul
fisub
bound
(bad)
cmc
fisubr
add
xor
ficom
jo
inc
xchg
mov
sti
inc
sub
jle
outs
adc
jmp
mov
repnz
loopne
sub
sub
or
loopne
mov
jmp
inc
jmp
and
xlat
push
movs
je
mov
pop
fidivr
adc
jmp
popa
xor
sub
push
and
push
add
or
call
sbb
mov
movs
push
sti
(bad)
fmul
cmp
in
pop
jmp
cmps
std
jb
or
jne
xor
or
jmp
icebp
push
leave
add
xor
mov
stos
into
(bad)
repz
xchg
add
fnsave
xchg
push
sub
push
test
aaa
addr16
jmp
out
enter
(bad)
in
mov
or
mov
(bad)
outs
mov
(bad)
mov
pop
shl
dec
cmp
popa
in
and
jmp
mov
inc
cmps
jg
push
mov
sub
xlat
sti
shl
mov
or
stos
add
loope
or
dec
mov
mov
dec
shl
dec
ins
cmps
inc
mov
sahf
into
xchg
std
(bad)
aaa
(bad)
push
(bad)
mov
and
bound
or
adc
popf
loope
pop
popa
push
xor
mov
call
pusha
cwde
clc
xor
mov
mov
in
mov
push
pop
fwait
and
mov
mov
or
int3
cmp
dec
mov
sub
out
xor
scas
bound
pop
cmp
push
out
inc
jp
mov
mov
xor
iret
push
dec
pushf
or
js
jae
cmp
adc
inc
sbb
gs
jmp
add
repnz
and
jp
cs
std
push
dec
fisttp
aam
leave
(bad)
scas
push
ret
outs
cwde
cmps
int
push
jb
rcr
dec
ret
mov
and
mov
mov
xor
push
add
pop
ret
sbb
arpl
mov
xchg
inc
ja
sbb
out
sub
jns
sub
mov
and
cmps
jmp
call
shl
pop
outs
mov
addr16
push
dec
cmp
mov
jg
and
das
xor
adc
repz
inc
xchg
cmp
pop
add
jbe
or
sub
jge
push
mov
jae
sbb
push
adc
mov
aas
outs
push
xlat
sub
mov
pusha
lods
xchg
(bad)
push
sbb
mov
pushf
xor
mov
lahf
scas
out
sbb
cli
mov
push
pop
std
inc
(bad)
cmp
sbb
jae
lds
sub
push
pusha
xor
ss
arpl
int
(bad)
cmps
fst
fstp
data16
repz
out
xlat
mov
jle
aas
aas
(bad)
rcl
lahf
pop
fnstsw
mul
loope
ja
pop
packsswb
add
(bad)
enterw
mov
inc
cmp
iret
(bad)
rcl
imul
lods
icebp
mov
js
pushf
mov
repnz
cmp
add
jp
ss
cmp
rcl
inc
lods
jl
pop
cwde
push
mov
xchg
and
push
in
hlt
and
cmc
inc
mov
xchg
pop
pop
call
ja
sub
pop
out
shr
cld
int
mov
cdq
inc
sbb
shl
dec
arpl
and
jno
and
add
sub
(bad)
(bad)
push
ret
push
test
pop
pop
inc
xor
mov
adc
test
pushf
adc
jmp
xchg
add
mov
mov
dec
movs
sub
js
leave
outs
cmp
mov
fild
mov
mov
mov
or
mov
mov
popa
push
mov
and
adc
ds
out
pop
pop
test
add
xchg
mov
lds
je
cli
mov
into
sbb
cmps
pusha
mov
int3
xor
cmp
nop
idiv
push
push
mov
pop
in
push
inc
clc
add
adc
xacquire
mov
mov
out
mov
es
movs
or
sub
mov
adc
outs
or
push
push
sub
jecxz
(bad)
xchg
and
popa
in
jae
std
dec
bound
test
cmps
mov
pop
fild
pushf
or
dec
xor
sti
dec
or
cmp
les
mov
daa
fdivr
push
or
mov
fstp
cmp
gs
xchg
xlat
adc
xchg
mov
out
ret
adc
pop
xchg
call
lds
mov
movs
cs
push
mov
xor
sbb
cdq
pop
(bad)
dec
dec
xchg
sub
jne
(bad)
int
arpl
js
mov
inc
and
call
popf
out
mov
jge
mov
push
pusha
dec
daa
sbb
cmp
repnz
xor
pop
adc
push
clc
aad
jle
repnz
or
or
push
(bad)
push
test
outs
jnp
xchg
daa
cmp
xor
adc
imul
popa
sti
mov
push
(bad)
out
sbb
ds
mov
mov
or
dec
pusha
dec
cmp
(bad)
in
xchg
(bad)
mov
popf
repnz
inc
std
jb
mov
mov
inc
and
arpl
inc
ins
fst
mov
retf
adc
xor
cmp
mov
xor
sti
out
pop
xchg
sub
rol
jae
push
jl
shl
dec
and
outs
cmp
xor
dec
cmc
push
add
xlat
sub
je
outs
xchg
out
repz
cmp
mov
xchg
scas
dec
cmp
not
adc
(bad)
es
ja
sbb
cmp
addr16
add
add
inc
xchg
inc
pop
cwde
xor
cwde
mov
icebp
mov
mov
xchg
std
cmp
jl
clc
cli
arpl
ret
mov
inc
dec
cs
adc
lods
sub
jge
out
icebp
outs
pop
mov
fimul
and
mov
sbb
hlt
mov
sbb
or
(bad)
sti
inc
in
lock
sub
jmp
es
mov
in
repnz
cmp
jo
in
leave
fldz
cmps
mov
push
fisttp
push
aad
xchg
inc
inc
ret
pop
xchg
out
test
cli
pop
div
into
or
jp
xchg
xchg
xchg
jle
(bad)
dec
xor
mov
sub
scas
push
ins
dec
xchg
loope
out
inc
xchg
inc
(bad)
mov
int3
jl
xor
cmp
ficomp
les
add
fs
daa
sahf
dec
bound
cmps
mov
sbb
pusha
pop
cmps
fmul
mov
fwait
and
jb
fild
inc
int3
aam
pusha
loope
iret
xchg
into
push
push
cmp
retf
xor
cmc
inc
jo
inc
adc
aas
das
arpl
pop
mov
push
mov
dec
iret
jae
push
aad
test
xor
jg
inc
adc
test
mov
inc
pop
call
mov
mov
pop
int3
ror
repnz
lea
mov
ja
movs
hlt
std
xchg
mov
pushf
sbb
xor
add
jecxz
sbb
jb
jecxz
loope
imul
xchg
shl
or
pusha
push
icebp
sbb
push
test
pcmpeqw
adc
xor
mov
mov
xchg
clc
or
(bad)
jp
(bad)
and
or
mov
cwde
or
imul
push
mov
aas
mov
add
fldcw
dec
cmp
int
sub
pushw
lds
cs
pop
outs
pop
movs
mov
imul
sbb
pop
(bad)
stc
arpl
pushf
outs
jb
mov
test
inc
loopne
push
scas
mov
adc
scas
push
mov
(bad)
add
retf
fistp
mov
test
gs
cmp
shl
cs
push
iret
cdq
or
movs
mov
sahf
inc
div
mov
loop
inc
jne
mov
gs
cmp
sub
pop
or
sahf
push
pop
inc
sahf
cmp
cmp
popa
mov
das
push
test
cmp
push
jg
jle
scas
and
sbb
int
and
xor
pop
mov
fstp
pop
ja
xchg
or
mov
test
icebp
ret
test
or
or
test
ror
inc
dec
fnsave
mov
pop
push
xchg
cmp
jo
popa
xchg
push
mov
retf
dec
lea
sub
repnz
mov
call
lods
bswap
rcr
sbb
xchg
stos
jp
and
mov
je
fsub
push
xchg
test
movs
push
dec
fcomp
cli
in
shl
sub
fisubr
push
fldcw
cmp
and
or
(bad)
sub
enter
bound
mov
sub
adc
mov
test
enter
push
sub
push
lds
and
push
and
or
and
fsubr
mov
inc
rol
cdq
mov
xchg
xchg
xor
retf
push
ins
lods
bswap
inc
sahf
inc
shl
or
imul
addr16
xor
jmp
lods
call
aas
in
pop
retf
or
xor
cmp
pmovmskb
xchg
out
push
repnz
pop
jl
lahf
les
shl
fidivr
pop
call
jp
jmp
or
movs
stos
mov
pushf
adc
xchg
inc
test
jge
push
jle
test
fidivr
mov
push
add
cmp
call
push
inc
ins
bound
addr16
push
push
pop
addr16
mov
(bad)
mov
clc
adc
enter
test
xor
sub
aad
xor
push
test
addr16
pop
js
cwde
ja
lahf
lds
adc
sahf
gs
add
sar
aaa
cmp
shl
inc
mov
shl
clc
lea
jle
mov
lock
call
shld
lock
fimul
mov
pusha
(bad)
loop
call
xlat
ins
dec
lock
shl
mov
das
adc
ins
adc
ss
push
jno
jmp
pop
mov
loope
je
or
mov
inc
gs
scas
popa
inc
scas
in
inc
pop
sbb
xchg
cmp
jno
mov
or
inc
add
pop
test
inc
(bad)
xor
mov
and
into
add
hlt
xor
fdivr
pop
dec
mov
leave
push
xor
jae
add
push
jmp
std
ins
mov
xor
mov
test
dec
xor
pushf
xchg
xchg
jp
mov
mov
push
xor
ret
pop
cs
pop
pop
shr
jne
mov
aad
mov
jo
sub
mov
std
ja
mov
mov
mov
iret
mov
sbb
leave
mov
dec
or
pop
scas
in
sub
pop
inc
out
jecxz
xor
fld
pop
jb
ins
push
ins
sbb
inc
xchg
xor
xor
nop
ss
cmps
jbe
inc
pop
int3
fimul
les
mov
push
cs
scas
mov
mov
sbb
mov
cmp
jne
dec
dec
dec
fbld
clc
dec
(bad)
clc
mov
inc
push
lods
clc
jnp
adc
mov
inc
push
cdq
popf
inc
xor
adc
cli
mov
or
mov
mov
mov
jne
mov
test
xchg
dec
or
fbld
push
push
pop
stos
adc
adc
into
inc
jg
mov
inc
sbb
pop
and
adc
stos
adc
(bad)
out
xchg
push
cmp
lock
fisttp
mov
mov
fcmovu
scas
xor
pop
cmps
mov
(bad)
fstp
cli
jo
mov
mul
ins
mov
and
je
mov
push
(bad)
das
aam
inc
je
inc
shl
xor
push
hlt
jecxz
xchg
int
push
scas
or
mov
sub
jmp
or
enter
test
iret
jno
add
xor
neg
aad
icebp
adc
mov
in
push
add
movs
cmp
retf
xchg
pop
(bad)
add
or
or
jne
xor
mov
shl
ret
sub
scas
dec
hlt
movs
(bad)
cmp
daa
ss
(bad)
ins
lods
ss
sbb
loope
repnz
nop
call
xchg
(bad)
push
ret
dec
into
sbb
lea
jge
outs
mov
cwde
jae
cli
call
xchg
aas
call
out
inc
stos
cs
xchg
add
push
xchg
mov
out
fld
mov
data16
add
call
test
pop
inc
dec
mov
int
sub
cmps
and
das
adc
add
gs
push
mov
loopne
xor
sub
stc
test
inc
xchg
and
sub
adc
add
dec
add
fnstsw
into
push
movs
imul
mov
fwait
cmp
mov
mov
shld
mov
rol
ror
(bad)
pusha
retf
mov
push
cmp
fs
mov
in
in
stc
das
mov
inc
repnz
jmp
(bad)
cmc
push
sbb
sub
xchg
mul
push
inc
aas
leave
xor
retf
pop
daa
or
popa
add
mov
outs
lods
push
jmp
xor
fst
add
pop
mov
push
adc
daa
dec
and
or
cmc
out
int
sahf
(bad)
sti
jmp
cwde
or
(bad)
(bad)
out
mov
fisub
mov
mov
sbb
mov
test
les
or
nop
lahf
mov
sti
cmp
sub
inc
cmp
sar
cmp
jns
cmps
or
stos
es
das
mov
rcl
sbb
mov
(bad)
xor
les
xor
fcmovne
sub
xchg
js
mov
adc
sub
xchg
mov
rcl
or
sbb
sbb
xor
pop
and
dec
mov
lock
mov
pop
es
mov
fwait
cld
out
inc
sbb
fcmovnb
mov
add
push
sub
fidiv
cli
idiv
lds
xchg
mov
ins
out
enter
inc
(bad)
mov
ja
cmp
dec
mov
pop
pop
shl
sbb
fbld
aas
mov
jge
out
loope
jmp
jl
pop
out
mov
ins
jmp
movs
popf
in
iret
adc
sub
mov
and
and
and
jae
fisubr
xor
cmp
and
jb
lods
(bad)
cmp
mov
xchg
dec
outs
dec
push
push
mov
xchg
sar
and
mov
jmp
mov
mov
inc
mov
and
mov
sbb
xchg
xor
sahf
pop
xlat
leave
out
or
mov
xchg
shl
cmps
sub
aam
pop
xchg
in
cs
inc
(bad)
dec
hlt
jae
cmp
mov
or
lods
cmp
dec
or
lods
mov
push
(bad)
sbb
ds
add
sbb
ins
mov
outs
or
js
mov
js
les
movs
addr16
movs
call
gs
popf
pop
add
pop
in
scas
imul
repz
dec
repnz
pop
loope
jmp
xor
sub
mov
xchg
cmp
xchg
adc
loopne
ret
jmp
fwait
sahf
imul
jmp
enter
outs
ss
ja
lods
bound
or
movs
loopne
xlat
loop
mov
cli
scas
pop
cmc
test
push
test
jmp
lock
neg
xchg
jns
mov
fwait
lock
in
(bad)
or
add
xchg
push
daa
cli
out
inc
ins
out
popa
int
pushf
out
jo
dec
shl
scas
aaa
(bad)
and
mov
test
lods
cld
mov
cmp
ss
xchg
dec
bound
mov
sbb
test
scas
(bad)
jmp
lods
adc
xchg
mov
loope
jmp
fnstsw
xchg
sbb
xchg
add
rcl
in
pop
mov
call
mov
cdq
mov
inc
add
ins
mov
test
scas
inc
xor
pop
cmp
push
pop
cmp
push
push
mov
add
xchg
and
sbb
call
xor
dec
push
cmp
mov
adc
(bad)
and
push
sub
mov
imul
icebp
or
jge
(bad)
out
pop
xor
cmps
xchg
xchg
pushf
add
cwde
outs
out
sbb
lea
(bad)
jle
inc
movs
lods
inc
or
pop
sbb
push
out
out
aaa
icebp
inc
loopne
cdq
cld
mov
cmps
cmp
push
sbb
ins
test
das
jl
loopne
clc
arpl
scas
inc
jmp
les
test
sub
aas
out
sti
or
pusha
movs
push
cdq
or
scas
ret
rcl
ror
shl
push
in
dec
retf
mov
leave
out
int3
psadbw
shr
cmp
cmp
push
adc
test
adc
dec
push
lahf
xor
or
leave
popa
pop
lea
jnp
jbe
jns
loope
outs
stos
adc
popf
out
jo
test
dec
jecxz
sbb
push
or
mov
pop
and
adc
iret
aas
adc
bound
stos
jo
pop
pop
ins
outs
or
mov
jns
mov
int
nop
pop
mul
test
or
in
mov
mov
lock
hlt
ins
or
sub
aad
test
(bad)
or
pop
jmp
inc
xor
jno
pop
or
les
gs
cmps
inc
frstor
test
pop
mov
mov
(bad)
adc
(bad)
mov
loopne
adc
mov
mov
jmp
xor
cmp
jnp
movs
cmps
mov
nop
xor
ficomp
jg
retf
popf
lea
cmps
xor
leave
popa
mov
push
sbb
in
ret
inc
ds
or
adc
sahf
loope
mov
sbb
hlt
or
cmp
scas
mov
xor
icebp
and
pop
adc
jne
adc
in
add
dec
inc
push
inc
inc
jecxz
pop
xchg
mov
pop
scas
jo
hlt
push
or
test
ror
sub
jo
or
push
mov
mov
inc
push
inc
in
dec
inc
inc
push
inc
jnp
pop
outs
jle
mov
dec
mov
retf
pop
in
and
imul
repnz
jns
mov
adc
test
icebp
fiadd
(bad)
call
lods
out
jae
adc
fisubr
rol
jb
xchg
sbb
xor
loopne
inc
inc
imul
mov
mov
add
mov
cmp
(bad)
and
add
sbb
adc
push
pop
std
dec
cmp
inc
imul
fild
add
jle
pop
or
stc
xor
mov
and
test
movs
xor
(bad)
icebp
or
test
add
mov
test
sub
sub
jmp
inc
pusha
int
adc
and
ret
mov
sbb
mov
pushf
mov
add
call
(bad)
mov
icebp
shr
fcom
mov
rcr
sbb
pop
fistp
call
scas
je
push
sub
xchg
mov
inc
push
test
jo
pop
repz
add
out
push
pusha
aas
push
dec
(bad)
jmp
xor
out
popf
test
and
bound
and
into
call
pop
call
or
clc
cld
pop
mov
or
xor
push
sub
inc
and
jecxz
mov
pop
pusha
xor
aas
or
test
add
adc
cmp
pop
retf
fiadd
retf
push
(bad)
xchg
cmps
mov
ficomp
dec
outs
xor
sub
shl
shl
lods
mov
test
mov
mov
(bad)
je
popa
push
pop
push
adc
sti
xor
repz
retf
inc
pop
cld
mov
popf
xor
nop
movs
cdq
and
dec
sbb
jmp
scas
xor
pop
lock
pop
cmp
fst
and
inc
and
nop
in
xlat
cmps
lahf
mov
sub
mov
int
mov
and
lea
dec
fild
outs
pop
push
cmp
out
out
dec
jg
cmps
push
ss
out
mov
test
xchg
adc
repnz
mov
sub
add
sti
mov
in
loopne
(bad)
cmp
aaa
sbb
sahf
shl
sub
ror
(bad)
cli
leave
or
loopne
and
cmps
retf
pushf
bound
mov
and
lds
push
push
jnp
gs
lds
mov
test
fiadd
jle
fcom
inc
fnstenv
xchg
add
iret
(bad)
push
fidiv
imul
mov
push
cmp
ret
push
push
lahf
mov
hlt
mul
int
sbb
loope
(bad)
push
inc
adc
dec
int
into
(bad)
pop
inc
push
xchg
lods
pop
xchg
call
push
aam
(bad)
icebp
mov
mov
int3
jge
fwait
mov
ins
push
lods
pop
cmps
fcmovne
jl
dec
jo
xor
icebp
jecxz
stos
addr16
push
add
(bad)
int
aaa
and
repnz
cmp
(bad)
xchg
push
adc
dec
inc
dec
adc
ss
jg
fcom
pusha
cmp
test
div
imul
imul
mov
mov
jg
mov
sub
xchg
outs
mov
and
mov
push
adc
or
and
pop
inc
idiv
clc
test
mov
mov
xor
mov
mov
pop
loope
retf
xchg
push
adc
das
dec
pause
dec
jmp
(bad)
jno
das
pushf
inc
fild
dec
and
ja
test
sbb
in
xor
cmp
cmps
bound
loope
lods
stos
push
mov
sub
push
test
(bad)
push
in
cmp
out
push
sub
fwait
cmps
sub
add
pop
or
pop
pop
aaa
jno
ds
pop
ins
jno
test
and
pushf
test
sbb
or
cmc
fbld
lahf
clc
mov
int
inc
loop
mov
jl
stc
jnp
sbb
movs
cmps
adc
add
fiadd
pop
jmp
dec
in
jne
xchg
test
xchg
pushf
xchg
push
sub
add
loopne
jnp
inc
adc
or
push
dec
pop
fist
call
adc
mov
xchg
fs
cmps
shr
pop
stos
imul
imul
mov
mov
pop
rcl
fld
cli
push
cmps
xchg
je
mov
xchg
add
sbb
mov
mov
mov
cmp
dec
push
xor
sub
inc
sub
pop
dec
and
(bad)
pop
test
cmp
jnp
add
mov
jne
push
cdq
das
loope
jno
imul
ret
int
sbb
es
mov
sbb
enter
imul
out
lea
cmp
xlat
inc
test
xor
sahf
xchg
mov
mov
loopne
mov
or
mov
mov
pushf
std
stos
inc
out
in
mov
sub
pop
aas
popa
lods
addr16
(bad)
xor
loope
xor
mov
or
sub
mov
xchg
push
loope
and
lods
imul
adc
clc
cmp
sub
adc
pop
mov
cli
ror
stos
xor
jp
mov
dec
push
xchg
push
mov
cwde
lods
sbb
mov
test
nop
adc
adc
(bad)
retf
lock
call
adc
jbe
arpl
sub
pop
loope
call
cmp
fdiv
mov
mov
dec
sub
stos
test
sar
jp
cmp
loop
sti
adc
push
(bad)
fwait
stos
push
movs
es
adc
movntq
out
movs
sti
aas
scas
jmp
cdq
mov
addr16
out
add
cmp
pop
inc
jno
(bad)
das
imul
call
and
arpl
imul
dec
sbb
push
or
fsubp
pushf
outs
dec
or
cmc
mov
cmp
je
xchg
or
nop
xchg
mov
cmps
sti
mov
call
mov
dec
cmp
jb
sbb
test
jg
imul
ds
cmp
lock
mov
sbb
inc
mul
sar
gs
call
arpl
xchg
mov
add
rol
cmp
fnstenv
mov
fsubr
daa
jnp
das
mul
leave
lods
(bad)
int
mov
mov
dec
jne
icebp
js
cmp
xor
test
cmp
aad
mov
mov
adc
test
in
cmp
and
pop
cs
neg
loopne
lahf
mov
mov
inc
mov
jmp
adc
adc
iret
lods
dec
and
scas
mov
mov
pop
pop
mov
jmp
mov
mov
shl
shr
jns
pop
fdiv
sbb
cmp
and
xchg
fld
lods
out
mov
xlat
ficomp
add
clc
sub
pop
mov
je
mov
pushf
scas
popa
xor
test
test
scas
mov
sub
dec
cmp
cmp
clc
jb
cs
test
add
inc
lds
jbe
movs
cmp
mov
(bad)
fucomi
jge
aaa
scas
call
aad
call
mov
pop
mov
push
and
xor
in
pushf
ss
in
pop
cmc
jns
xchg
jo
and
mov
data16
cmps
dec
pop
iret
mov
jg
into
mov
xorps
xchg
push
and
popf
stc
test
retf
jg
cdq
pop
or
adc
xchg
pop
xchg
or
cmp
cmp
in
pushf
cmp
loope
cmp
push
sbb
fidiv
out
cli
inc
(bad)
leave
popa
stos
mov
icebp
(bad)
mov
dec
dec
xor
xchg
das
ret
inc
xor
jae
xor
ja
cmp
inc
es
dec
les
aaa
cld
jge
fiadd
movs
rcl
in
pushf
push
fwait
push
fnstenv
movs
cmp
push
test
repnz
(bad)
mov
mov
pop
je
inc
cmp
sar
xor
push
and
sub
test
xor
sbb
rcl
inc
or
pop
pop
into
inc
inc
xchg
cmp
jo
xchg
in
pop
mov
jmp
retf
mov
sub
jp
sti
shl
inc
or
scas
into
pop
mov
pop
cmps
fnstsw
cli
dec
inc
or
xor
pop
sbb
gs
sbb
inc
int
(bad)
out
mov
scas
lds
loopne
mov
sub
sbb
(bad)
dec
mov
mov
pop
fcmovu
ja
mov
imul
inc
hlt
mov
dec
sbb
xor
addr16
xchg
adc
ja
lods
lea
ja
push
adc
pop
jno
in
fldl2e
popf
mov
neg
cmp
xchg
into
dec
or
out
ror
fidiv
adc
lock
fisttp
enter
sbb
push
ss
sbb
or
scas
popa
sahf
sub
hlt
addr16
mov
int
sbb
stos
xor
mov
adc
mov
jne
scas
in
pop
jnp
pop
gs
fs
jmp
mov
mov
test
jl
pop
ret
sub
es
lods
int
and
cmp
jnp
adc
cmps
addr16
sbb
and
or
mov
dec
aaa
mov
fwait
jns
jmp
push
dec
rol
xchg
popf
popf
test
inc
push
mov
fstp
ins
bound
enter
(bad)
test
push
out
icebp
sbb
xor
and
push
push
ds
loop
loope
cmp
inc
ficom
inc
xlat
sti
mov
out
or
jle
inc
xor
in
mov
cmp
into
xchg
loope
jno
inc
fisttp
rol
or
(bad)
adc
(bad)
mov
es
mov
mov
iret
xor
cmp
pop
push
xchg
cli
push
xor
push
pop
sub
lods
addr16
cmps
jbe
out
repz
mov
ret
loopne
cmp
ret
xor
in
(bad)
(bad)
push
mov
fxch
dec
fwait
mov
sub
add
je
loop
or
jnp
mov
mov
and
xchg
mov
ss
mov
test
shr
imul
or
add
fdivr
jecxz
add
movs
or
into
add
lods
rcl
fadd
sahf
scas
push
xor
dec
js
enter
scas
xlat
mov
add
out
push
stc
idiv
push
push
mov
or
push
mov
cmps
xor
inc
pushf
sti
shr
xchg
popa
sbb
pop
and
and
mov
cmp
push
scas
adc
push
fcmovu
ja
sub
cmp
add
iret
lea
pop
rcl
(bad)
das
mov
or
jle
retf
mov
popa
call
jns
ja
cld
push
sub
cld
sbb
xchg
and
(bad)
fmul
shl
xchg
jmp
int3
mov
jg
mov
pop
lods
(bad)
daa
in
inc
push
icebp
dec
sub
fadd
jecxz
loopne
cmps
ret
(bad)
in
leave
dec
jnp
add
adc
sbb
mov
sbb
sbb
add
jmp
dec
bound
pop
imul
sub
outs
test
mov
inc
pop
add
inc
adc
push
fbld
mov
jp
push
imul
in
mov
popf
push
cmps
jne
xor
mov
sbb
shr
add
mov
sub
inc
push
push
mov
mov
leave
mov
xchg
dec
or
adc
out
inc
pop
mov
adc
add
add
into
mov
cmp
call
iret
ret
call
jmp
lea
or
ret
sub
jbe
dec
leave
in
outs
(bad)
repz
movs
fidiv
pop
dec
das
pop
lds
inc
addr16
pop
jge
sbb
aad
cli
stos
sar
pop
sar
jmp
pop
push
jg
js
sbb
jno
pop
outs
fimul
push
sbb
pushf
das
cmp
call
push
jg
(bad)
je
ror
mov
cdq
ror
out
ja
mov
jbe
push
and
jle
test
popf
out
mov
sbb
je
mov
icebp
in
fistp
adc
inc
push
mov
sbb
jmp
cwde
pushf
lar
jle
jbe
cs
cmps
jg
add
xchg
mov
out
fnstcw
inc
ret
or
arpl
mov
inc
ss
aam
add
loopne
jecxz
aam
xor
sbb
clc
lods
ins
or
jo
gs
cmp
mov
dec
pop
ins
dec
sbb
or
cmps
mov
in
in
imul
sbb
add
push
xor
fistp
pop
jmp
sbb
jne
lds
addr16
or
sub
sbb
cmps
and
jmp
cmp
pop
pop
mov
loop
inc
jne
xor
mov
retf
push
mov
add
add
mov
pop
into
mov
pop
arpl
shl
xchg
mov
test
fdiv
dec
jnp
repz
imul
add
addr16
mov
dec
push
leave
imul
xor
push
pop
loopne
inc
rcl
sahf
idiv
stos
int
ror
int3
cdq
push
fdiv
int3
adc
imul
shl
add
sub
mov
mov
(bad)
arpl
add
or
add
xchg
jp
test
out
fxch
sub
pop
pop
retf
mov
pop
aaa
push
cmp
out
pop
out
retf
mov
sbb
xor
xlat
pop
mov
loope
pop
xor
add
je
mov
mov
loope
adc
lock
sub
pop
jbe
in
jmp
lods
lds
test
inc
das
test
out
adc
fld
shr
inc
ret
sbb
in
pop
(bad)
cwde
lds
and
inc
not
add
mov
add
pop
stos
cld
ficomp
in
shl
bound
out
dec
nop
repnz
dec
inc
sub
mov
scas
push
repz
fimul
jmp
jns
fisubr
cmp
jbe
or
xchg
push
and
inc
mov
clc
popa
iret
dec
scas
test
xchg
(bad)
aad
arpl
mov
aas
inc
dec
aam
daa
and
cli
sub
call
cmp
mov
lods
pop
jl
cld
call
mov
sar
scas
xchg
dec
mov
(bad)
out
pop
cdq
cwde
lds
mov
or
clc
lds
cmc
scas
jp
leave
push
or
dec
xchg
or
das
sar
repz
add
xor
aad
dec
popf
dec
mov
jnp
mov
mov
dec
mov
imul
fidiv
pop
cmps
jne
imul
(bad)
sbb
add
cmp
sbb
ins
fnstenv
test
iret
rcr
mov
iret
dec
pop
mov
mov
sub
hlt
push
fs
aad
or
fdivr
xor
pop
(bad)
fnstcw
xchg
js
inc
fdiv
out
fdivp
arpl
xchg
mov
movs
iret
add
add
add
outs
idiv
test
cs
arpl
int
and
jecxz
repz
call
repnz
icebp
hlt
fild
pop
loope
jmp
addr16
push
cmp
fwait
outs
pop
scas
psllq
es
test
push
retf
cs
dec
push
out
push
xchg
xchg
ret
stos
mov
aam
mov
nop
movs
inc
gs
int
jmp
cmp
mov
repz
mov
pusha
xchg
call
sub
dec
add
nop
mov
aaa
sub
in
push
cmp
push
xlat
and
xlat
aad
jg
jmp
out
inc
loop
lods
pushf
mov
cmp
lahf
shl
test
test
dec
cmp
ds
mov
(bad)
sbb
int
enter
add
loop
add
inc
ins
loop
mov
icebp
mov
xor
or
popf
imul
or
mov
lods
pop
fisttp
outs
pop
jb
jle
fwait
enter
or
out
sbb
fs
pop
inc
das
movs
sti
pop
test
mov
pop
mov
int3
test
imul
cmp
nop
(bad)
mov
call
push
cmps
cwde
lea
das
enter
addr16
jg
sub
pusha
sub
inc
add
aaa
fsubr
loope
lahf
js
clc
and
ins
pop
mov
ror
stos
push
jp
lods
mov
cmc
(bad)
cmp
xor
test
in
pushf
fbstp
xor
movs
into
fmul
jb
ds
movsx
dec
add
(bad)
addr16
jge
idiv
jp
imul
sbb
jne
mov
int
retf
jo
pop
inc
shl
es
and
mov
int
push
dec
mov
xchg
push
ins
lahf
bound
popf
add
pop
stos
cs
add
test
into
add
clc
mov
popf
adc
jb
test
ror
adc
and
aaa
sti
int
lods
push
fs
dec
mov
lea
loope
jnp
addr16
(bad)
mov
dec
cmc
push
dec
jae
sbb
mov
xor
repnz
retf
scas
mov
jg
in
cmp
int
push
jae
fisub
mov
push
lds
cmp
aam
daa
jmp
sub
loopne
test
leave
(bad)
pop
test
jne
sahf
outs
pop
jnp
fadd
push
outs
pushf
xor
mov
xchg
lahf
lock
add
jo
jge
xchg
lods
(bad)
fadd
and
pushf
sub
inc
mov
inc
push
sub
or
push
mov
add
dec
xor
ds
fnsave
in
test
in
daa
les
call
dec
pushf
daa
loopne
xchg
push
sub
int
in
cli
xor
dec
ret
daa
fs
rcl
jmp
bound
inc
jo
popa
movs
(bad)
jmp
jl
or
ss
(bad)
aad
push
sub
sub
sub
leavew
(bad)
push
mov
mov
jmp
inc
ss
or
adc
in
movs
jmp
lds
cmp
repz
jle
retf
dec
xor
mov
arpl
inc
rcr
jb
cmp
pop
push
push
xor
mov
xchg
or
ds
test
ins
std
ss
int3
pop
mov
out
inc
mov
stc
sbb
loop
xchg
enter
mov
call
pop
xor
adc
dec
add
inc
mov
shl
idiv
idiv
jbe
leave
fs
pop
out
shl
pop
sub
fst
xchg
mov
and
sbb
pop
push
loopne
mov
cmp
fnsave
inc
rcl
and
out
mov
into
scas
dec
mov
push
xor
call
movs
cmp
push
xor
addr16
adc
fidivr
pop
rcr
std
dec
icebp
aas
cmp
clts
(bad)
dec
pop
push
dec
ins
pushf
out
sub
adc
fiadd
nop
dec
or
out
xchg
add
mov
call
out
(bad)
xor
leave
hlt
mov
sahf
jmp
or
jno
cmp
repz
addr16
dec
loop
mov
test
repnz
jb
fsqrt
not
cmp
mov
add
pop
dec
pop
scas
sbb
xchg
(bad)
rol
aam
mov
xchg
data16
rcl
xchg
fiadd
push
jae
inc
cmc
inc
jb
push
jmp
addr16
sahf
nop
call
imul
push
xchg
test
and
ds
jmp
in
xor
aas
jmp
scas
inc
pushf
mov
and
aaa
pop
mov
icebp
mov
outs
jmp
out
dec
repz
in
ret
imul
mov
daa
and
mov
add
mov
inc
imul
push
inc
mov
cmps
jne
je
mov
retf
shl
lea
jns
push
mov
je
stos
pop
fidiv
in
cmp
mov
stc
jl
push
call
retf
cmp
push
call
inc
outs
mov
dec
in
push
test
xchg
jmp
sar
push
push
and
cld
mov
popf
jmp
inc
jne
cmp
jecxz
and
mov
add
adc
jle
adc
ret
mov
mov
cwde
sub
je
mov
xchg
mov
adc
ss
lea
(bad)
and
test
fadd
inc
cmp
addr16
jns
in
fs
mov
xchg
sub
cmp
hlt
pop
mov
xchg
and
call
mov
xchg
call
and
ss
xor
js
aam
or
jbe
sub
mov
fsubrp
mov
das
ins
psrld
or
stos
xchg
adc
xchg
in
xor
aad
popa
cmp
cmps
ds
pop
cld
jbe
test
mov
repz
aam
cmp
pusha
call
and
leave
sahf
push
cli
mov
movs
call
sbb
inc
repz
cmp
mov
into
mov
xchg
aam
xchg
adc
loop
mov
inc
cmp
jb
add
iret
jno
shl
mov
push
pushf
inc
pop
addr16
aad
mov
push
shl
pop
mov
sub
xchg
cmp
cs
lock
ja
jno
cmp
jp
and
pop
jmp
test
lods
jno
cmp
clc
xlat
xor
cmp
sbb
xor
mov
out
and
jmp
sar
hlt
xor
gs
enter
pop
dec
test
xor
stc
or
dec
std
(bad)
pushf
les
cld
jl
push
jg
adc
hlt
xor
inc
daa
lahf
pop
repz
gs
into
or
into
mov
mov
add
push
xchg
mov
xor
dec
sbb
out
fdiv
mov
fcom
xlat
xchg
xor
pop
xor
dec
xchg
xchg
popa
sahf
test
rcl
inc
ss
mov
popa
sbb
pop
cdq
sbb
imul
fdivr
popa
mov
(bad)
sbb
add
cmp
dec
mov
outs
jecxz
mov
fsub
lahf
imul
js
ins
stos
xor
jle
lock
nop
inc
mov
lock
push
jg
scas
scas
pusha
add
jmp
inc
or
shl
sti
mov
xchg
inc
xchg
or
add
ins
cli
cmp
jnp
mov
iret
(bad)
sub
and
adc
test
lds
sbb
(bad)
scas
mov
push
arpl
push
call
jnp
xchg
dec
sub
loopne
cli
test
loop
jo
hlt
mov
jecxz
mov
jmp
xor
cmp
xchg
cmps
add
das
in
xchg
dec
xor
pop
nop
mov
rcl
pop
je
jge
xor
mov
test
and
jle
fwait
test
std
mov
shl
dec
cmps
int
adc
cmp
or
movs
adc
mov
xor
sub
jmp
mov
jmp
or
xchg
inc
push
(bad)
or
cmp
inc
and
mov
(bad)
xor
inc
sub
cmp
leave
sar
das
sbb
or
popa
push
mov
out
in
xchg
dec
jno
stos
cs
pop
pop
xchg
xor
popa
aam
test
add
cmp
pushf
or
or
(bad)
cld
callw
mov
mov
dec
outs
add
fsubp
test
pop
pushf
shl
push
bound
jp
sbb
xor
mov
cdq
xor
dec
sub
sub
hlt
or
add
(bad)
cmps
pop
mov
sub
push
xchg
aaa
int3
add
mov
pop
fs
das
imul
sbb
bound
cmc
jnp
cld
loop
add
pusha
into
out
bound
shl
mov
shr
ret
push
lds
ds
(bad)
add
out
clc
and
xchg
mov
jnp
sbb
jl
test
jecxz
scas
push
and
xchg
(bad)
jmp
add
or
adc
pushf
sar
push
cld
cmps
push
ds
shr
jmp
dec
push
sbb
(bad)
fcomip
faddp
loopne
loop
jmp
leave
aad
fsubr
jmp
repz
adc
jmp
sbb
sub
(bad)
pop
test
es
stos
jns
xor
pop
pop
sbb
add
sbb
mov
push
and
jne
cmp
js
clc
add
ins
and
fmul
outs
loope
test
jmp
mov
jl
cmp
adc
js
xchg
call
cs
push
mov
mov
(bad)
mov
fdiv
lods
lods
sbb
int
outs
loopne
cmp
fcom
mov
je
pop
mov
ins
sbb
mov
mov
cmp
pop
cld
outs
fmul
outs
int3
call
out
mov
fcos
clc
call
sbb
retf
clc
add
mov
xchg
push
add
aad
ror
pop
cdq
mov
adc
push
int
sub
jae
dec
xor
dec
add
adc
ror
mov
or
jb
ins
sbb
and
arpl
out
test
inc
(bad)
mov
push
aas
bound
sub
add
aad
push
test
cs
mov
mov
test
xchg
dec
sbb
or
and
push
shr
cmp
jmp
popf
jbe
(bad)
jmp
push
mov
mov
or
enter
push
jecxz
xchg
adc
pop
xchg
adc
add
and
popa
scas
push
lock
test
mov
addr16
movs
push
mov
es
mov
push
movs
sbb
fwait
push
loop
mov
repnz
jp
enter
or
sub
icebp
bound
lock
mov
push
stos
fidivr
sti
shl
pop
ficomp
dec
aad
dec
sbb
dec
and
jns
push
std
out
and
cld
aam
out
mov
les
xor
xchg
push
and
inc
loop
jl
popf
imul
shl
pop
out
call
ret
lods
ret
sub
jmp
sbb
fild
mov
xchg
aaa
aam
inc
(bad)
in
sbb
sahf
cdq
mov
fisub
sub
sub
add
imul
sub
ins
adc
xor
mov
push
sbb
bound
inc
test
mov
push
jecxz
ins
mov
mov
(bad)
out
dec
xchg
xor
bound
sub
inc
adc
xchg
and
xchg
push
daa
cld
add
inc
xchg
int
mov
push
mov
mov
aas
loop
sub
adc
and
cmps
inc
cdq
lock
dec
mov
sub
jmp
fmul
xchg
retf
xchg
movs
xlat
mov
sub
push
iret
and
sub
les
out
xor
scas
adc
xchg
outs
fwait
or
xchg
or
pop
push
mov
sahf
sub
sbb
jle
out
sar
cmp
add
mov
cmp
(bad)
sbb
cmps
gs
cmp
bound
mov
mov
popa
xchg
imul
mul
in
int3
xor
jns
pop
scas
jbe
out
ds
inc
js
lea
inc
sub
unpckhps
movs
pop
ret
cmp
cmp
test
scas
push
mov
stos
push
xlat
xor
push
cmp
jns
cs
xor
push
mov
sbb
mov
or
test
shl
(bad)
xchg
cs
scas
mov
out
hlt
jle
mov
test
jmp
lods
popa
scas
mov
rcr
adc
mov
outs
mov
or
inc
call
fdiv
jno
adc
or
test
jnp
cmc
dec
adc
fnstsw
add
jno
loop
lds
pop
(bad)
jp
ds
ret
ds
popa
scas
pushf
into
mov
jae
mov
loop
cmp
xor
inc
adc
jne
cmp
mov
sbb
fadd
ins
fild
call
or
(bad)
sbb
inc
pop
mov
xchg
test
mov
rep
adc
sbb
(bad)
addr16
call
or
call
xor
xor
and
sbb
outs
jno
ror
jno
xor
adc
lock
cdq
jne
retf
mov
cs
mov
sub
pop
sub
adc
mov
mov
outs
clc
fwait
les
or
sub
scas
mov
neg
leave
lock
pop
mov
mov
jns
sbb
cdq
add
arpl
and
nop
pop
mov
jae
jno
stc
pop
mov
dec
or
xchg
jmp
cli
int
sub
xchg
mov
push
retf
push
fidiv
and
mov
sub
inc
xchg
xor
xor
pop
sub
leave
adc
dec
xor
xchg
inc
lock
and
add
add
leave
dec
fistp
inc
add
mov
inc
xor
fidivr
hlt
sub
int3
popf
imul
add
enter
shr
call
addr16
test
jmp
mov
pop
jae
loope
adc
pusha
push
loope
and
imul
(bad)
mov
leave
ins
in
lds
cmp
inc
icebp
dec
xor
mov
push
repnz
aad
ror
or
daa
or
das
sub
dec
adc
and
adc
cmp
pop
or
inc
xchg
add
leave
ja
dec
mov
ror
add
sub
push
sbb
je
sbb
(bad)
jecxz
pop
mov
arpl
sbb
(bad)
jo
fild
test
aas
es
mov
jo
sub
imul
add
in
cli
cmp
xor
mov
cmp
je
mov
push
cmc
gs
aaa
lahf
cmp
jne
cwde
(bad)
imul
in
inc
iret
mov
cs
lds
adc
or
les
imul
adc
popf
sbb
dec
lds
pop
sub
adc
adc
cmps
loopne
jo
xchg
dec
test
pop
pop
mov
aam
int3
dec
xor
mov
push
cmps
jp
add
aas
sbb
scas
and
add
jmp
cmp
mov
bound
ret
mov
and
jmp
popf
outs
push
in
mov
sub
mov
and
ds
retf
sahf
(bad)
call
pop
loope
in
mov
loop
scas
sub
enter
clc
pop
loop
lds
sub
mov
call
push
in
(bad)
stc
mov
ffreep
mov
loope
test
xchg
retf
repnz
xor
stc
mov
mov
dec
(bad)
(bad)
mov
enter
jmp
mov
jecxz
mov
push
sub
fcomp
and
sbb
retf
clc
scas
sub
mov
cld
mov
loop
adc
mov
mov
aaa
int
out
sub
push
(bad)
and
test
test
sar
out
lea
xlat
fcomp
mov
std
lods
lds
stc
out
jo
imul
add
test
mov
mov
jbe
pop
jl
div
cdq
movs
lea
stos
sub
push
stos
jbe
xchg
cmp
xor
mov
jae
dec
push
or
pop
cmp
jmp
mov
pop
inc
ss
mov
jne
sbb
int
pcmpeqb
inc
scas
jo
mov
fucom
mov
mov
nop
test
xchg
jp
xchg
pop
inc
sti
sbb
cmp
mov
fild
cwde
adc
xor
mov
scas
mov
dec
call
push
push
iret
add
dec
int
sbb
push
pop
add
je
cs
mov
ds
mov
mov
inc
mov
pop
adc
mov
ins
out
jnp
aad
push
cli
icebp
jge
xchg
pop
cwde
or
mov
cmc
sahf
and
arpl
inc
call
mov
push
ret
sbb
add
dec
or
or
js
cmps
mov
sbb
sbb
cmp
retf
aam
popf
mov
fist
cmp
cld
ja
or
inc
pop
xchg
push
inc
cs
loopne
fcom
sub
add
xor
nop
imul
dec
aam
xchg
adc
ret
cdq
cmp
(bad)
xor
sbb
scas
mov
or
adc
cmps
in
int3
inc
repz
in
add
in
xchg
inc
ficom
sub
and
dec
add
push
(bad)
xor
(bad)
hlt
cmp
call
pop
lock
mov
fld
rep
repnz
outs
add
xchg
jae
or
rep
inc
call
fprem1
iret
jge
sub
nop
rol
and
inc
sbb
xor
sti
cmp
aad
retf
xchg
fidiv
xor
mov
fild
mov
and
xor
mov
icebp
pop
imul
mov
sbb
je
mov
mov
inc
fild
test
jbe
fnop
data16
fs
dec
jmp
add
dec
pushw
pop
xchg
add
push
mov
xchg
mov
fs
xchg
gs
xlat
inc
push
loopne
cmps
inc
jo
mov
jp
mov
gs
xor
sub
int3
loope
sub
sbb
outs
pop
jmp
retf
xchg
not
jl
cdq
inc
jne
out
and
ret
sbb
(bad)
mov
loope
neg
jg
mov
jo
(bad)
mov
mov
rcr
mov
mov
inc
les
push
xor
or
mov
jae
test
lock
mov
adc
cmp
(bad)
jae
mov
in
sub
out
dec
pop
lahf
imul
scas
inc
sahf
in
jbe
cwde
sbb
pop
ds
xor
repnz
sbb
sub
or
aad
and
mov
enter
mov
xchg
lods
mov
pop
mov
sub
xor
jg
jne
test
and
jge
test
adc
dec
in
fwait
ss
xor
xchg
ja
call
sbb
xchg
jmp
mov
add
loop
mov
pop
cmp
dec
add
mov
pop
cwde
call
data16
inc
mov
adc
mov
dec
movs
outs
dec
xor
jnp
sti
pushf
mov
lods
adc
lds
mov
das
lods
mov
mov
pop
fwait
cmp
jne
add
fisub
and
dec
psllq
add
das
dec
cmp
es
fldenv
dec
adc
repz
out
inc
mov
cwde
and
sub
test
imul
push
xchg
in
retf
jnp
sub
mov
daa
pop
mov
mov
inc
mov
jecxz
ss
push
xchg
in
xor
rcr
lods
(bad)
lock
mov
adc
pop
loopne
loope
or
push
jmp
cmps
mov
pusha
jecxz
push
test
int3
cmp
cmp
loop
ja
xor
out
mov
test
scas
add
push
and
cmp
add
xchg
leave
scas
or
aaa
jle
es
xor
arpl
jp
xor
pop
mov
mov
jmp
push
adc
ret
xor
rcr
mov
fadd
or
hlt
lock
loopne
mov
mov
and
fdiv
daa
paddw
cmps
loope
fcomp
push
push
test
mov
jg
cld
pushf
xchg
inc
pop
out
sbb
neg
push
movs
rcr
dec
iret
call
jg
movs
(bad)
inc
es
scas
rcr
into
add
dec
cmps
ret
xor
pop
or
je
fdiv
fidiv
mov
push
jecxz
cmp
jns
ja
das
imul
xor
push
sbb
or
cmc
jae
sub
call
dec
in
int
(bad)
or
pop
cmps
sub
lea
fwait
jle
scas
out
sar
cdq
shl
retf
sub
mov
rcl
adc
jae
xchg
pop
pusha
add
mov
icebp
ret
pop
arpl
mov
les
push
adc
aaa
popf
jbe
addr16
and
pop
data16
push
lods
mov
cmp
imul
cli
push
pop
sub
push
push
mov
mov
shl
or
int
adc
adc
out
test
sub
and
cmp
mov
stos
in
pop
imul
(bad)
neg
xor
xlat
mov
(bad)
cmp
in
ins
jle
daa
xor
add
cmps
sti
call
adc
in
add
cmp
lods
scas
push
cmps
mov
sub
xor
push
ja
sub
xchg
and
daa
test
mov
(bad)
mov
fidiv
pop
sub
sub
dec
movs
rcl
mov
inc
cmps
push
or
mov
mov
rcr
test
xchg
lds
mov
push
push
cmp
daa
mov
xor
nop
dec
retf
dec
xor
mov
xchg
(bad)
mov
push
jo
add
lock
ja
rcl
pop
bound
dec
arpl
sub
push
jle
jmp
call
push
addr16
lds
or
shl
mov
(bad)
movs
sub
sar
aaa
fidiv
sbb
addr16
ret
es
adc
jmp
push
sahf
xor
inc
dec
xchg
daa
mov
mov
loope
mov
sub
popa
(bad)
xor
pop
mov
sahf
js
xor
inc
pop
ja
repnz
adc
(bad)
es
cmp
pop
call
mov
and
es
add
jne
test
repnz
lock
fneni(8087
(bad)
dec
js
leave
or
or
lods
mov
popf
loop
xchg
sbb
cmc
xor
movs
aad
and
aas
pop
lock
push
ficom
jp
or
xchg
push
lock
mov
and
push
fisub
out
test
loop
pop
addr16
aaa
imul
xchg
mov
push
data16
loope
jbe
nop
movs
cld
jmp
cmp
mov
pop
ss
pop
xor
push
test
push
aas
ror
xlat
push
out
sub
mov
dec
sub
jmp
sbb
push
lods
xlat
(bad)
push
jns
push
shl
xchg
adc
cmps
mov
sbb
mov
mov
imul
in
les
lea
stos
mov
imul
jge
out
inc
sub
movs
mov
(bad)
push
dec
pusha
jge
fmul
jbe
xchg
pop
mov
mov
fst
or
inc
cmps
dec
jle
xchg
jne
mov
and
mov
std
bound
lods
stos
pop
or
mov
cdq
(bad)
push
jo
(bad)
add
and
sub
mov
xchg
lahf
pop
mov
sub
stos
cdq
push
inc
retf
xchg
cmp
int
xchg
cmpxchg
fdiv
and
div
jmp
enterw
sub
aad
retf
push
push
sub
jl
inc
cmp
pop
dec
add
sub
icebp
dec
lods
ds
sbb
lahf
sti
cwde
or
call
hlt
lds
cmps
test
lods
mov
sbb
mov
adc
xchg
jne
movs
add
dec
jg
xchg
mov
add
call
push
int3
mov
std
push
sub
cmps
push
ss
fist
enter
adc
jmp
scas
mov
lea
out
add
adc
daa
mov
jmp
push
jmp
(bad)
xor
lods
or
or
or
cmp
mov
shl
adc
jl
fcom
xor
pop
mov
push
rol
pop
enter
push
jns
add
mov
mov
loope
fdivp
fst
js
cmp
or
ja
in
rcr
cmp
xor
pop
pusha
cmp
mov
adc
cmps
les
inc
pop
ds
or
fdivr
cld
pop
cmc
jmp
test
aaa
cwde
mul
jmp
adc
mov
pushf
retf
cli
jl
xor
sbb
push
int
cmc
bnd
push
jle
mov
sahf
cmp
in
aam
sbb
push
shr
iret
cmp
ror
pushf
mov
pavgb
fsubr
repz
fs
ror
shl
cwde
faddp
add
add
jnp
and
mov
mov
sbb
scas
sti
cmp
pop
push
in
bound
push
shl
loopne
je
and
mov
cdq
(bad)
dec
es
test
leave
loop
cmps
mov
and
xor
jbe
pop
pop
lahf
xchg
(bad)
mov
addr16
and
mov
jb
ret
and
xchg
xor
bound
cmp
dec
jb
push
xor
push
popa
movs
xchg
pusha
or
test
inc
inc
mov
rcl
pusha
leave
mov
ja
mov
outs
fisubr
cmp
ss
mov
ins
push
pop
adc
mov
arpl
std
dec
push
sub
mov
retf
add
and
xchg
rcr
push
push
mov
adc
stos
push
inc
add
stos
aad
adc
or
pop
pop
adc
pop
jge
mov
sti
mov
or
jge
mov
xchg
cmp
jae
es
ror
shl
xchg
adc
out
outs
inc
imul
rcr
jecxz
jle
pusha
xor
cdq
jno
push
ja
(bad)
popf
fdivp
pop
sahf
out
pop
pushf
mov
mov
and
push
inc
sub
sahf
in
rol
test
or
jmp
jbe
aas
dec
and
mov
jns
mov
add
push
jecxz
dec
repnz
inc
jns
jp
add
mov
mov
shr
mov
outs
mov
jne
jmp
push
(bad)
imul
mov
push
pusha
mov
cs
mov
xor
jne
cmps
push
push
ds
cs
or
mov
sub
aaa
inc
daa
icebp
and
repz
cmp
arpl
pop
test
sbb
cwde
cmp
sub
cmp
sbb
pop
je
je
jle
adc
ret
and
and
nop
fsubp
fcomp
shl
push
push
test
sub
inc
lods
add
not
sub
cmps
mov
dec
fild
idiv
imul
xchg
imul
sub
test
sahf
or
ss
xor
fst
jo
jae
jno
mov
fmul
xchg
shl
fbld
inc
sub
xchg
ds
nop
sti
adc
outs
outs
pop
xchg
lock
xchg
shl
xchg
mov
mov
jg
add
sub
mov
pop
loop
pop
mov
pusha
lea
dec
jae
inc
ja
outs
xchg
leave
sbb
and
xchg
push
add
loop
cmps
and
(bad)
sbb
pop
push
cmps
out
add
pop
inc
fisub
popa
mov
shl
mov
ret
rol
add
add
xchg
fst
inc
lock
stos
daa
jns
sub
shl
pushf
pushf
sahf
cld
cmps
fadd
and
call
mov
adc
mov
dec
sub
or
out
cs
or
test
in
sar
push
mov
call
data16
jb
xchg
sub
(bad)
arpl
push
fs
int3
out
jecxz
rcl
jmp
hlt
in
cmp
and
ds
push
popf
pop
arpl
movs
mov
aad
scas
jne
data16
out
and
out
mov
push
lock
xchg
ror
fdiv
test
cld
into
cmp
lods
(bad)
push
xchg
ds
mov
arpl
xor
cmc
in
lea
or
das
je
stc
xchg
sub
sbb
jl
adc
out
sub
add
cmp
mov
dec
das
ja
dec
mov
xchg
or
pop
cld
icebp
or
fs
push
pop
xor
js
fcomp
hlt
lahf
dec
and
je
xor
or
cmp
lahf
add
loop
dec
mov
cmps
addr16
imul
mov
jle
adc
cmps
daa
in
cmp
call
sub
sar
inc
mov
(bad)
ret
push
mov
div
inc
mov
jnp
loope
dec
pop
icebp
ret
icebp
scas
pop
jne
pop
into
cdq
push
mov
cs
jne
loopne
sub
(bad)
leave
cdq
and
adc
jecxz
lods
mov
in
lock
data16
popa
jno
inc
fcomip
jmp
lds
xor
sti
in
mov
nop
rcr
inc
dec
and
add
sub
test
add
daa
aas
arpl
push
add
push
mov
or
bswap
sbb
ret
or
fwait
push
push
sub
in
in
pushf
mov
movs
lods
push
jg
idiv
ds
xor
imul
imul
stos
mov
or
dec
jbe
xor
mov
or
xchg
lds
mov
mov
fdiv
pop
jle
mov
dec
sub
or
out
mov
imul
xchg
mov
iret
xlat
cmp
mov
sbb
call
jno
mov
pushf
jecxz
mov
pop
jb
push
cmc
xchg
sub
leave
aaa
ror
out
cs
push
jecxz
in
in
pusha
mov
(bad)
inc
push
scas
arpl
cmc
ja
popa
jb
xor
push
cmp
jb
fwait
mov
in
sbb
stos
(bad)
mov
scas
add
ja
mov
lock
scas
ins
out
xchg
sbb
cmp
sbb
fnstenv
es
mov
cdq
inc
mov
xor
adc
ins
jmp
push
mov
xchg
pushf
pop
sar
jge
and
xor
fndisi(8087
je
out
cmps
adc
out
add
push
clc
aas
imul
les
cmp
pop
sahf
push
popa
sti
jmp
jnp
jb
and
test
sub
fwait
popa
pop
pop
or
mov
jno
and
push
add
(bad)
rol
out
push
cld
cdq
inc
imul
sbb
xchg
or
jecxz
jo
retf
jb
sbb
xchg
repnz
add
sbb
mov
cmp
push
arpl
push
ins
loop
inc
xor
dec
mov
xor
setns
enter
mov
xor
add
sub
mov
pop
cmc
addr16
pop
xchg
aad
dec
ins
movs
js
xor
xchg
dec
cmps
ret
shr
push
xchg
push
jle
jp
stos
popa
jnp
adc
xchg
jge
add
mov
push
cmp
fmulp
nop
mov
int
icebp
cmp
into
sub
xchg
adc
outs
inc
adc
xchg
scas
jnp
xor
jae
fwait
sub
push
pop
out
out
out
shl
pop
cmp
mov
add
mov
(bad)
push
ror
push
mov
fdiv
sbb
loopne
and
aad
es
inc
outs
jp
push
xchg
mov
arpl
mov
mov
or
sub
inc
push
xchg
jmp
and
mov
mov
and
fwait
push
inc
inc
push
xchg
xor
cmp
vmread
add
xor
aaa
call
dec
shl
jle
push
cmp
adc
shr
int
pop
pop
add
out
cwde
xchg
pop
ja
ss
and
or
or
add
jge
inc
mov
dec
mov
es
sub
inc
call
and
sbb
les
sub
cmp
xchg
adc
movs
mov
popf
(bad)
xor
pop
sti
inc
and
pop
mov
push
xchg
rcr
push
aam
cmp
mov
adc
loop
inc
fnsave
cmps
xlat
pop
cmp
cmp
jmp
cmp
cmps
mov
xor
loop
stos
jne
fsub
xor
aad
popa
jecxz
mov
inc
ins
mov
pop
int
mov
jno
imul
imul
or
stos
sub
pop
rol
int3
push
push
retf
addr16
jmp
outs
movs
xchg
push
(bad)
jo
xchg
mov
push
aam
(bad)
ins
push
movs
push
xchg
push
xor
xchg
loop
imul
int
inc
xor
jno
frstor
cmps
sub
jl
call
outs
mov
jge
std
mov
fbstp
mov
mov
cdq
jp
sahf
push
bound
adc
adc
cmps
retf
scas
std
sbb
jg
lahf
scas
ds
add
fist
add
cmps
ins
push
jge
rcl
movs
sbb
out
idiv
push
adc
ficom
addr16
test
inc
add
pop
je
xor
mov
mov
movs
sbb
and
dec
sbb
movs
cmc
les
cli
pop
dec
inc
test
adc
jmp
scas
xchg
dec
add
and
xor
adc
dec
jle
pop
sar
jbe
adc
test
cmps
int
fadd
pushf
mov
sub
jge
cmp
test
sbb
popf
and
lods
push
scas
sbb
addr16
pop
push
and
pop
inc
mov
dec
adc
rol
cwde
pop
add
(bad)
in
popa
dec
in
sub
jl
cmp
cmp
pop
jl
test
xor
push
lds
inc
imul
push
pop
mov
mov
adc
sahf
adc
jp
mov
push
(bad)
add
jae
pushf
jmp
mov
stos
retf
mov
xchg
in
lds
popa
pop
in
imul
fsub
dec
inc
mov
ret
fcomp
jbe
and
cld
push
dec
pop
ins
call
or
dec
rol
js
sub
mov
jmp
imul
pusha
arpl
adc
fistp
xor
inc
and
fsub
mov
loope
inc
test
or
xchg
cmp
push
adc
inc
mov
repz
pop
mov
mov
xor
imul
add
sahf
add
rol
xchg
push
fwait
sbb
and
addr16
aam
dec
dec
repz
xlat
les
retf
jmp
pop
jmp
mov
enter
retf
je
mov
cs
fld
imul
xchg
or
cmp
das
cmps
sar
scas
dec
fnsave
xchg
lods
and
xchg
fisubr
clc
test
add
in
sti
shl
inc
and
int
div
xor
jns
and
sar
push
sbb
sbb
add
in
inc
scas
ret
push
lds
(bad)
movs
sbb
out
xlat
and
push
mov
retf
cwde
add
pop
cmp
dec
(bad)
stc
sbb
cld
out
inc
test
jge
or
aad
std
mov
arpl
mov
jae
repnz
rcr
ret
(bad)
sti
sbb
sbb
push
scas
repnz
sbb
xchg
pop
mov
sbb
aaa
loop
je
pushf
sub
scas
or
push
mov
icebp
movs
mov
test
mov
movs
xchg
imul
or
add
movs
div
inc
mov
in
outs
std
xchg
dec
or
xor
and
jge
push
test
hlt
xchg
mov
xchg
xor
pop
inc
xchg
lea
mov
mov
fmul
sbb
jmp
sub
inc
or
sub
call
push
mov
outs
fcomi
jno
loop
inc
lds
push
cmp
stos
pop
xchg
mov
fwait
cmps
cli
dec
mov
loope
pop
hlt
mov
sbb
test
rcl
mov
dec
add
rcl
shl
(bad)
xor
daa
adc
bound
dec
or
xor
mov
es
add
sbb
sub
lods
out
inc
jbe
loope
pop
xlat
call
iret
pushf
pop
out
clc
mov
xchg
sub
arpl
es
dec
out
push
sub
stc
add
cld
mov
xor
aas
pop
shl
iret
(bad)
imul
(bad)
mov
aas
test
xchg
jne
call
jmp
outs
inc
(bad)
xchg
rcr
iret
inc
imul
es
inc
or
jnp
jb
add
inc
mov
add
fwait
xor
or
sub
pop
or
popf
fimul
mov
aad
inc
lock
cwde
je
mov
scas
dec
fnstenv
fistp
xchg
or
lods
jmp
dec
inc
jb
aas
sbb
xchg
fisttp
arpl
aaa
fld
in
jne
sbb
jmp
clc
xchg
inc
gs
fld
pusha
xchg
(bad)
push
push
sbb
mov
ror
mov
sub
shl
xor
xor
add
xchg
sbb
sti
add
out
add
std
aad
push
pop
addr16
push
push
test
stos
lock
mov
sti
loope
push
push
hlt
outs
add
lock
call
ficomp
pop
bound
out
ins
pop
sub
mov
push
ins
cmp
mov
movs
xor
lahf
lods
add
cmc
mov
mov
in
xchg
sbb
lock
jmp
(bad)
pop
test
dec
mov
mov
sti
shl
call
cmp
mov
xor
cmp
(bad)
or
jo
pop
cmps
xchg
sub
call
aam
stos
stos
push
and
push
mov
fsubr
push
(bad)
dec
jge
adc
nop
adc
sahf
cmp
jmp
(bad)
int
fidivr
outs
add
dec
(bad)
and
pop
jb
xchg
or
mov
pop
cmp
mov
mov
mov
out
inc
xlat
lea
lahf
xchg
pop
xor
and
dec
aas
xchg
dec
xor
das
cmp
xor
int
addr16
jg
fisub
pop
inc
jmp
mov
ins
cld
pushf
(bad)
push
mov
adc
mov
jns
jcxz
cmps
xor
push
cmp
pop
icebp
test
jbe
and
push
(bad)
sar
repnz
xchg
iret
xchg
std
pop
xchg
arpl
add
test
lds
add
retf
add
xchg
mov
shr
jne
dec
scas
icebp
imul
jno
adc
cmp
mov
cmps
lea
mov
dec
jbe
push
aaa
inc
xchg
popa
push
jmp
dec
and
test
addr16
cmps
xchg
and
mov
add
mov
cld
inc
push
jae
(bad)
dec
add
dec
lock
add
pop
dec
fldenv
bnd
ret
sbb
inc
retf
sub
or
cli
icebp
mov
jecxz
sar
push
mov
jbe
xchg
mov
cmps
adc
aad
dec
call
shr
pop
ds
inc
xor
lea
push
in
test
js
(bad)
repnz
mov
dec
xchg
fwait
pop
das
movs
mov
pop
fldenv
xor
rep
pop
xchg
pop
xchg
mov
repnz
push
lods
popf
pop
ins
(bad)
in
adc
or
mov
push
dec
lods
dec
mov
cli
pusha
mov
and
dec
and
jp
scas
call
cli
pop
and
adc
hlt
stos
jle
xchg
das
shr
movs
fst
in
push
lds
jmp
sub
mov
lea
inc
out
mov
repnz
ja
mov
ss
xchg
shr
mov
inc
xor
pop
pop
pop
mov
cmp
leave
ret
iret
mov
test
inc
cmp
cmp
ins
add
sub
xchg
sbb
jmp
mov
pop
mov
inc
out
cvttps2pi
cwde
sbb
repz
or
sbb
stos
push
popf
xchg
mov
idiv
dec
xor
lods
mov
jbe
or
inc
in
or
fcom
outs
push
ins
mov
pop
dec
and
cmc
add
repnz
jmp
loopne
data16
mov
fdecstp
sbb
or
cmp
scas
adc
sbb
in
adc
add
push
repnz
ins
sbb
or
adc
sar
shl
cmp
jo
dec
sbb
cmp
mov
cmps
iret
xchg
stc
ret
(bad)
and
xchg
jl
jl
sub
adc
out
or
das
sahf
xor
pop
pushf
lds
and
enter
jp
jmp
rcr
into
(bad)
imul
call
lahf
imul
and
xchg
inc
cld
push
xchg
and
adc
jecxz
daa
xor
rcr
and
cli
dec
sti
and
icebp
out
cmp
test
hlt
push
and
inc
or
and
push
pushf
push
xchg
cmp
movs
inc
out
leave
loope
jne
push
adc
fimul
mov
daa
je
retf
jnp
xor
mov
sub
rol
xor
add
xor
add
(bad)
retf
sub
mov
dec
mov
jp
out
sub
aad
test
sbb
clc
cmp
movs
jb
adc
xlat
add
idiv
movs
push
jns
test
ss
test
cld
xor
cdq
cmp
sbb
pop
xchg
dec
or
stos
rcr
aam
loopne
sbb
and
lea
nop
or
pop
cmp
leave
sti
jno
push
clc
inc
dec
dec
mov
es
jge
pop
(bad)
aaa
xchg
cmp
jmp
cmp
cld
xchg
aam
in
and
mov
fstp
stc
fidivr
fs
sbb
test
sbb
xor
xchg
nop
mov
call
pop
adc
dec
push
into
or
push
inc
fistp
fsubr
lea
retf
jne
push
jg
cmc
mov
mov
cs
adc
pop
paddq
pop
ficom
dec
sub
shr
daa
mov
mov
sub
push
mov
cmp
jecxz
mov
cmps
add
inc
gs
cmp
movs
push
imul
ficomp
ins
(bad)
loop
add
mov
push
mov
cs
mov
cld
cli
fsubr
or
sti
mov
mov
add
fstp
mov
inc
aad
cmp
out
dec
push
addr16
popf
je
pop
cmp
xchg
enter
and
fdivr
stos
mov
enter
adc
inc
xor
push
les
fsubrp
cmp
jmp
shl
nop
out
jg
cmp
mov
add
and
push
lock
das
ds
jno
pop
fist
mov
mov
mov
std
cmp
outs
mov
shl
xchg
pushf
cdq
inc
sbb
sbb
pop
inc
xor
ror
dec
test
mov
rol
out
das
enter
dec
mov
lods
sub
ret
pop
js
loop
xlat
cmp
and
ret
shl
sub
cdq
scas
sbb
mov
inc
and
repnz
fiadd
ja
add
adc
js
imul
xchg
aam
mov
(bad)
mov
mul
data16
out
imul
gs
scas
inc
adc
js
shrd
mov
cmp
sub
pop
sahf
xlat
hlt
xor
push
pop
jmp
test
mov
and
ror
es
lods
popf
inc
mov
jns
cdq
(bad)
adc
push
xor
(bad)
inc
and
mov
pop
jne
fcomi
xchg
ficom
xchg
gs
xchg
pop
sub
add
or
and
inc
hlt
sub
add
lock
inc
fsub
test
pop
pop
push
ds
jmp
inc
adc
jns
mov
add
fdiv
je
je
cmp
inc
pushf
dec
jle
(bad)
cmp
outs
cwde
icebp
inc
enter
aaa
jmp
fdivrp
std
fsub
or
ds
jecxz
jb
adc
adc
fcom
add
jno
xchg
ret
dec
mov
or
mov
sub
jecxz
loop
mov
lock
ds
mov
cmps
leave
add
dec
pop
dec
mov
sub
xchg
push
add
ins
add
and
sub
push
mov
sub
cs
jmp
fcomp
dec
jnp
dec
out
jne
stc
push
adc
inc
pop
or
inc
adc
inc
(bad)
pop
inc
stos
sub
out
cmp
add
push
xchg
pop
mov
and
jbe
movs
mov
fucomip
(bad)
imul
sahf
les
sbb
lahf
fdivp
fnstcw
sar
iret
jns
or
mov
movs
jmp
stos
gs
test
pop
sbb
dec
or
xchg
adc
sub
fcom
inc
pusha
clc
fs
mov
aam
and
mov
(bad)
xchg
aad
nop
mov
ins
cmc
movs
je
sub
jae
ret
ja
aad
hlt
xor
(bad)
push
(bad)
and
pusha
dec
clc
xchg
cmp
outs
test
mov
mov
mov
and
jo
and
int
push
adc
call
mul
pop
xchg
sbb
jmp
scas
cmps
fimul
ins
cmp
jmp
scas
mov
xor
ins
jle
gs
mov
loope
(bad)
jp
lock
shl
(bad)
xor
ror
cs
test
mov
dec
ins
add
aad
neg
mov
jge
imul
mov
ins
and
inc
xchg
leave
adc
int
jmp
fwait
out
inc
stos
(bad)
or
or
mov
fstp
pop
mov
call
sub
sub
dec
lahf
jnp
push
shr
dec
neg
mov
loopne
ror
cmp
hlt
idiv
adc
inc
(bad)
loope
pop
int3
pushw
pop
jno
add
mov
jns
jnp
adc
sbb
sbb
xor
adc
jo
adc
pop
push
mov
loopne
mov
or
icebp
jns
pop
xchg
out
or
adc
add
ret
add
movs
gs
stos
fmul
(bad)
cmp
in
dec
imul
cmp
inc
out
aaa
xchg
les
adc
shl
and
jb
fimul
or
cmp
mov
bound
push
cld
dec
mov
int
mov
sub
xchg
stos
int3
out
xor
mov
cmp
pop
lds
push
push
lods
aad
test
push
clc
jl
es
jo
enter
loop
lock
xlat
ret
adc
xchg
pop
cmc
cmp
pushf
inc
outs
jmp
xchg
outs
push
pop
ds
daa
sub
push
nop
jbe
in
pop
inc
dec
cmp
fst
rcl
popa
pop
adc
sub
mov
add
push
dec
dec
movs
adc
in
(bad)
std
stos
xor
fdivp
push
iret
jbe
popa
shr
adc
(bad)
std
add
sub
loop
leave
in
jg
loopne
lods
cmp
add
mov
mov
or
(bad)
out
cdq
in
pop
push
add
sbb
and
sbb
and
ja
daa
dec
clc
cmp
mov
fstp
popf
repz
mov
add
inc
call
adc
enter
jecxz
cmc
outs
and
xlat
cmps
pop
pushf
push
push
push
ins
sbb
call
and
jmp
add
sar
add
jnp
mov
dec
cli
adc
leave
movs
neg
adc
retf
loop
mov
les
or
in
test
ret
jmp
jns
xlat
addr16
add
push
push
jae
mov
and
mov
cmp
or
xchg
(bad)
dec
pop
clc
adc
or
jge
jmp
cmp
pop
rol
scas
iret
loopne
add
cmp
push
xchg
dec
push
call
in
lea
std
sub
lahf
add
mov
sub
or
ja
or
mov
dec
cmp
test
xor
pop
cmp
dec
ror
in
retf
xor
aam
xchg
rcr
mov
ins
in
xlat
mov
mov
sub
add
jmp
fnstenv
pop
adc
rcl
xchg
test
jle
es
hlt
aad
rcl
inc
bound
shl
pop
pushf
sub
mov
(bad)
or
push
adc
(bad)
mov
pop
mov
push
xchg
addr16
shr
test
es
jnp
es
cld
out
pop
retf
out
add
icebp
repnz
dec
inc
loopne
adc
jg
sar
scas
jo
clc
ins
mov
addr16
aam
mov
fsub
pop
mov
test
and
(bad)
jne
out
leave
or
clc
adc
pusha
rcl
fdivr
pop
dec
add
jmp
outs
into
outs
dec
scas
jae
les
or
pop
or
dec
enter
mov
xchg
cmp
retf
and
cdq
cmc
dec
adc
dec
xchg
mov
cmp
retf
xchg
fucomp
dec
xchg
gs
cmp
test
adc
jecxz
fnstcw
mov
jle
xlat
jle
in
(bad)
out
ret
add
push
pop
and
and
xchg
lahf
or
loop
in
mov
jne
fisubr
xchg
jno
test
in
inc
push
rol
ins
ja
call
retf
adc
stc
adc
cdq
push
jle
add
dec
xor
sbb
out
jb
mov
sar
mov
xor
stos
pop
pop
cmps
and
xchg
inc
daa
mov
push
dec
outs
fbld
xchg
add
cld
and
ja
xchg
sub
ins
xchg
dec
imul
and
pop
sub
add
test
inc
lds
add
sub
jle
lds
(bad)
push
mov
pushf
mov
jmp
mov
mov
mul
stc
lahf
sub
pop
out
rcr
adc
add
gs
jle
jnp
jmp
out
repz
push
outs
cwde
dec
and
dec
leave
mov
daa
ja
or
adc
inc
xchg
aad
jmp
test
mov
push
inc
and
lock
push
xchg
mov
das
add
call
mov
movs
mov
mov
cmps
outs
adc
dec
ja
inc
and
and
test
xchg
mov
sub
in
(bad)
adc
rcl
add
xchg
retf
mov
out
sbb
inc
mov
add
push
add
outs
sub
ret
imul
mov
dec
test
nop
sub
(bad)
sub
mov
fdivrp
push
test
iret
fdivr
leave
notrack
out
fptan
retf
jge
and
sub
mov
sbb
sti
or
mov
in
dec
addr16
jg
add
or
mov
xchg
mov
(bad)
fs
in
call
and
push
jne
test
push
add
idiv
mov
retf
jg
or
adc
mov
in
jmp
ficomp
mov
push
fsubp
dec
inc
lea
aad
test
data16
sub
dec
pop
sub
add
int
xchg
(bad)
fisttp
shl
les
lea
push
sbb
fnstenv
call
xchg
jo
mov
es
(bad)
lock
dec
rcl
hlt
jne
xchg
aam
mov
ds
clc
gs
jnp
repnz
scas
mov
in
test
(bad)
repz
imul
ds
jmp
mov
xor
adc
push
jno
jecxz
dec
mov
scas
retf
std
sbb
push
add
call
shl
gs
in
push
retf
shl
out
sbb
mov
fistp
push
aad
lods
(bad)
popf
cld
jns
cmp
adc
(bad)
cmp
ja
test
xchg
dec
or
lahf
mov
mov
nop
scas
cmp
leave
retf
es
ins
stos
jmp
push
shr
iret
cmp
mov
(bad)
leave
sub
sub
mov
mov
leave
mov
clc
dec
mov
jle
xlat
sbb
or
adc
push
into
enter
nop
mov
mov
add
adc
pop
dec
cmc
push
cdq
sbb
jo
inc
retf
push
das
or
icebp
mov
popf
mov
and
ret
and
sbb
outs
cmps
inc
leave
xor
aam
sbb
fistp
shl
jmp
bnd
std
cld
xor
stos
pop
push
xchg
or
adc
jne
rcl
loopne
test
test
adc
mov
add
data16
xor
nop
push
or
and
ja
pop
pop
cmc
out
fistp
(bad)
cli
lods
push
and
retf
mov
fwait
nop
jp
sub
and
ret
test
cmp
or
and
jmp
xor
scas
cmp
jae
imul
xchg
imul
adc
adc
clc
push
les
adc
cdq
fstp
test
pop
dec
sub
dec
push
das
out
push
jg
repnz
out
fist
xchg
sbb
cld
bound
adc
jae
ja
iret
scas
outs
sbb
repz
daa
mov
cmp
dec
cdq
cs
and
movs
out
call
dec
or
mov
cwde
lea
(bad)
and
sub
std
pop
push
lea
or
pop
(bad)
in
call
cld
pop
mov
ror
pop
pop
jecxz
inc
pop
imul
aad
push
mov
add
(bad)
sti
ret
pop
mov
mov
lock
mov
nop
gs
cs
jge
cmp
jnp
sbb
inc
lahf
sahf
add
js
mov
fs
mov
fwait
jns
rcr
push
jmp
loope
cmp
(bad)
xor
cli
aam
push
loop
call
cmps
mov
mov
add
push
push
mov
mov
fnstsw
add
adc
mov
sahf
ret
xchg
cdq
aas
dec
cmp
push
cmp
sahf
push
out
cmp
cmp
xchg
adc
je
shr
add
fs
push
cwde
test
mov
inc
pop
cmc
cmp
cmp
dec
inc
add
movs
pusha
push
cmps
fwait
out
mov
daa
dec
xor
or
in
pop
stos
mov
pushf
xchg
mov
dec
cld
jo
cmps
pushf
rol
addr16
xchg
push
or
add
outs
pop
dec
xchg
pop
add
iret
ror
movs
mov
call
adc
jle
sbb
pop
mov
mov
cli
adc
enter
adc
dec
in
int
xchg
das
jge
or
push
xchg
lds
repz
push
loope
data16
scas
cmc
or
sub
mov
pop
or
jecxz
(bad)
inc
sbb
(bad)
das
inc
aas
push
sbb
and
xchg
sbb
adc
pop
mov
stos
xchg
jbe
movs
or
add
sahf
add
jbe
aam
daa
shl
adc
cmp
adc
mov
mov
push
mov
sub
xchg
pop
scas
mov
test
bound
jno
in
test
ror
imul
std
and
mov
in
and
je
sbb
mov
rol
stc
sar
cld
add
call
sar
sar
lods
jns
sbb
setae
cld
inc
mov
ins
in
push
mov
xchg
mov
adc
lea
fst
test
aas
out
sbb
cmc
inc
into
pop
adc
test
test
lock
(bad)
les
adc
sbb
loope
retf
stos
pop
jge
ins
jo
xor
in
push
sub
xchg
pop
push
or
test
adc
data16
fst
or
arpl
xchg
inc
or
and
sub
sbb
jne
pop
fist
add
es
jecxz
lods
mov
arpl
and
hlt
scas
pop
mov
lods
xor
js
adc
sub
imul
popf
cmps
shl
ins
add
das
in
dec
sbb
xchg
sti
lock
jp
mov
mov
mov
pop
bound
add
jl
dec
call
lahf
and
loope
fwait
inc
fistp
nop
xor
pop
inc
jns
dec
leave
leave
imul
push
lahf
xchg
inc
inc
dec
daa
rol
inc
rol
mov
out
clc
sbb
test
cmp
push
ins
das
pushf
cwde
dec
sub
in
mov
ret
jecxz
sub
stos
push
repz
mov
fs
fist
cmp
xchg
pop
bnd
imul
pop
std
xor
jnp
lods
in
loope
add
push
test
sbb
call
jge
push
dec
fistp
cmpps
icebp
push
hlt
nop
in
inc
outs
stos
movs
nop
popf
stos
nop
sar
mov
fstp
cmp
push
shr
loopne
in
hlt
lock
dec
add
fistp
xchg
mov
test
xchg
fs
call
sub
ret
and
movs
mov
inc
ins
xor
stos
adc
adc
add
addr16
test
cmp
mov
jno
fnstsw
mov
es
push
dec
out
push
call
in
mov
sbb
cmps
add
xchg
(bad)
xor
ins
push
dec
fs
ror
rol
mov
dec
aas
mov
pop
mov
scas
lds
jecxz
sbb
cdq
jge
arpl
not
bound
jp
into
jae
mov
sub
mov
nop
add
cli
push
jne
jge
push
sbb
leave
dec
inc
ss
aaa
test
jae
es
sub
inc
mov
jne
sbb
sar
sub
fiadd
popf
retf
loopne
lods
sbb
hlt
aaa
rol
sbb
ins
outs
movs
lahf
mov
dec
ror
in
adc
pop
in
je
imul
and
push
shr
pop
adc
ins
ins
adc
sbb
dec
push
push
push
inc
rcl
adc
js
mov
add
ret
sub
sbb
fnstenv
xlat
mov
cmp
pop
add
sub
and
sub
hlt
xor
fadd
inc
sar
sbb
jmp
scas
dec
out
ficom
pop
lock
jmp
es
add
inc
push
add
fdivr
jmp
(bad)
mov
push
outs
inc
(bad)
int
push
ror
clc
rcr
mov
popf
sub
fnstenv
mov
adc
fs
mov
mov
jns
mov
mov
jbe
stos
mov
dec
push
ja
sub
cs
movs
or
and
test
(bad)
sub
cwde
sar
cmps
xor
mov
int
xchg
dec
leave
mov
adc
push
mov
fs
mov
add
call
ret
retf
outs
in
push
call
popf
inc
int3
mov
push
movs
cmps
or
inc
sbb
cmp
jmp
out
call
in
mov
push
movs
xchg
push
cmp
adc
xchg
shl
add
xchg
or
sub
imul
mov
out
enter
add
scas
iret
sub
sub
and
xor
lea
jo
fsubr
jecxz
mov
fdiv
sub
push
sahf
xchg
adc
add
inc
pop
aaa
movs
lock
xor
iret
mov
fcomip
imul
pop
xchg
clc
fistp
in
mov
inc
dec
dec
outs
hlt
xchg
or
sub
inc
hlt
shl
scas
repz
or
mov
hlt
inc
add
xor
aaa
add
pop
push
bound
add
fsub
gs
es
jno
rcr
and
xchg
xchg
xor
cmp
sub
retf
jbe
shr
ins
dec
outs
hlt
test
jp
push
dec
and
push
xor
inc
in
push
lahf
aam
pop
ror
enter
(bad)
fcom
fcomp
out
popa
loopne
and
push
mov
pop
cmp
inc
ins
sahf
push
inc
mov
pop
push
adc
imul
hlt
mov
movs
jge
xchg
shl
je
stc
ins
push
lds
adc
cmp
add
dec
in
lds
jae
fcmovnb
sub
xchg
jmp
fcomip
(bad)
(bad)
cdq
movs
jnp
pusha
mov
xor
xor
fld
xchg
xor
xchg
push
dec
mov
jge
out
into
cmp
dec
in
adc
xchg
stc
lds
movs
inc
(bad)
ja
sahf
(bad)
lock
sbb
mov
movs
std
dec
sbb
adc
ss
mov
(bad)
sbb
push
not
fcomp
mov
mov
ins
jmp
pop
test
mov
nop
fld
call
cmps
jae
fmul
or
or
pop
inc
bnd
retf
jns
and
mov
cmps
adc
(bad)
mov
xor
push
fsub
mov
push
ins
xor
push
jo
popa
sub
mov
and
movs
stos
popa
test
jp
sbb
push
xlat
jno
add
mov
xor
mov
adc
mov
inc
in
and
cmps
mov
mov
addr16
or
sbb
jmp
in
sub
movs
mov
repz
sahf
cmp
mov
push
je
ins
nop
out
inc
out
xchg
(bad)
cmps
add
cwde
jg
cli
xchg
outs
jnp
mov
or
cmps
add
fstp
or
xor
cmp
cmps
cmp
xchg
in
xor
inc
mov
jbe
(bad)
movs
ss
jb
xlat
ins
pop
cmps
cmps
inc
push
mov
cmp
jp
fcmovnbe
push
nop
mov
mov
inc
inc
call
push
mov
pop
pushf
lods
xlat
mov
mov
ret
call
fisttp
push
mov
dec
add
lds
inc
jp
dec
pusha
mov
cmp
jno
mov
out
jle
mov
(bad)
xchg
push
xor
aas
mov
dec
mov
mov
sub
xchg
rol
rcl
pop
jle
ror
push
xchg
fs
pop
mov
mov
dec
fistp
outs
stos
leave
retf
pop
or
or
push
cmps
pop
scas
cwde
ror
aam
jne
test
or
add
out
adc
jne
dec
mov
xchg
in
push
es
dec
sahf
or
fcmovbe
repz
fsubrp
(bad)
js
jl
adc
xchg
xor
in
mov
(bad)
dec
mov
cli
adc
rcl
and
cmp
sbb
mov
popa
(bad)
and
pusha
dec
lods
xchg
jmp
les
or
sbb
dec
dec
or
add
sahf
push
adc
stos
or
sbb
nop
xchg
ret
push
mov
adc
add
leave
push
xchg
and
int3
add
mov
lock
into
pop
into
or
fcom
jg
push
enter
fadd
mov
dec
std
xchg
pushf
pusha
xchg
inc
sub
or
xchg
xchg
sub
or
ins
movs
cmp
and
bound
je
sbb
fs
mov
pop
fs
xchg
mov
int3
add
(bad)
push
push
push
sahf
lods
stos
mov
jno
lock
dec
add
adc
push
mov
cmp
imul
cmps
inc
and
shld
aad
mov
pop
xchg
imul
cmp
push
hlt
cdq
sti
out
mov
popf
gs
xor
mov
int3
and
scas
dec
pusha
nop
push
addr16
aaa
repz
and
sbb
pop
loop
dec
scas
fstp
push
out
in
stos
push
add
aad
xchg
adc
push
cs
dec
mov
sbb
adc
arpl
or
xchg
lods
dec
pop
mov
std
xchg
repnz
out
icebp
mov
cmp
xor
shl
pop
push
xchg
xchg
cli
push
mov
cmc
movs
fist
xchg
movs
lods
xor
or
popa
inc
cmc
retf
inc
push
inc
jne
test
mov
pop
mov
xor
sar
and
mov
aam
inc
icebp
out
imul
ja
(bad)
cmps
rol
xchg
jo
imul
xchg
mov
pop
fucomi
hlt
sub
push
daa
and
jbe
adc
vpcmpgtd
int
icebp
out
inc
and
pop
cmp
cmp
sub
pop
scas
mov
out
cmp
hlt
pop
(bad)
repz
inc
jmp
imul
push
mov
inc
sti
jmp
(bad)
inc
pop
or
rol
xchg
or
mov
frstorw
mov
inc
xor
mov
or
ds
push
adc
dec
int
jl
add
inc
(bad)
xor
bound
test
sbb
enter
pop
push
sbb
stc
mov
inc
cmp
jb
mov
into
imul
dec
jge
xor
sub
shl
cmp
fnstcw
cmp
popa
push
out
sbb
scas
lds
mov
cmp
(bad)
xlat
jmp
enter
shl
add
jbe
or
mov
dec
mov
cs
nop
or
(bad)
fdivrp
dec
(bad)
hlt
movs
pusha
stc
xchg
daa
das
lods
xchg
test
mov
mov
add
jl
stc
inc
mov
or
push
(bad)
jne
out
or
jp
xor
popa
fwait
test
ret
inc
mov
call
mov
jmp
daa
add
push
mov
jmp
adc
jg
adc
ret
lock
sbb
xchg
int3
jbe
dec
lods
inc
sbb
dec
inc
addr16
pop
or
movs
sar
ror
ret
mov
lea
xchg
mov
mov
push
pop
dec
pop
add
sub
dec
cmp
dec
xor
xor
pop
ins
or
loopne
jns
push
cmp
movs
cli
mov
jb
out
mov
push
fisub
pushf
repz
push
pop
mov
bnd
jmp
cmp
idiv
pop
popf
push
mov
pop
hlt
mov
xchg
rcr
pop
and
push
xor
xor
xchg
inc
and
mov
xchg
sub
add
push
sahf
gs
sub
cmps
mov
xor
mov
xlat
nop
aaa
ins
dec
push
out
addr16
ss
icebp
test
mov
dec
dec
xchg
xor
inc
and
adc
add
adc
movs
inc
jno
sub
sahf
dec
xor
mov
inc
pop
push
and
daa
adc
mov
jne
push
cli
js
xchg
enter
ret
xchg
ss
fcomp
(bad)
jne
fnstcw
mov
mov
sti
or
mov
xor
xor
dec
mov
push
jp
shr
imul
jl
aas
mov
pop
(bad)
mov
(bad)
(bad)
test
loope
loopne
addr16
outs
sub
push
xchg
(bad)
xor
out
mov
je
sub
adc
add
xor
xchg
sar
loop
retf
jo
and
jp
je
pusha
leave
sahf
test
dec
xchg
lods
(bad)
mov
xchg
xor
stos
pop
arpl
jg
dec
mov
clc
test
test
mov
or
lea
jnp
imul
inc
test
les
pcmpeqw
lock
cmps
enter
lods
adc
(bad)
xor
dec
and
xlat
and
mov
pop
imul
sbb
xchg
(bad)
rol
ret
and
mov
mov
call
pusha
mov
sub
test
pop
xor
inc
mov
in
and
rol
rcr
adc
sub
push
aam
pop
sar
ficom
ins
cli
ret
jno
mov
jns
cmc
rcr
inc
sub
fistp
fs
pop
and
push
pop
retf
pop
mov
push
xor
xchg
outs
push
popf
repnz
xchg
ficom
xlat
cwde
retf
xor
shr
and
and
and
xchg
fst
popf
jg
lock
sbb
fdiv
xor
sbb
bswap
pop
jbe
sar
aaa
fimul
repz
lea
or
loopne
and
mov
xchg
sub
push
jge
lods
jle
aad
pop
jle
mov
addr16
inc
pop
dec
mov
rol
dec
push
int3
mov
loop
and
icebp
or
sar
bound
(bad)
jno
pop
fs
dec
cmp
mov
jno
clc
mov
mov
outs
rcl
cmp
ins
or
and
in
mov
xor
inc
sbb
nop
test
cmp
mov
xor
in
or
and
or
cmp
push
inc
add
or
xor
jae
and
mov
cs
lea
xchg
retf
dec
push
in
pop
dec
jmpw
mov
nop
sbb
xchg
paddusw
inc
dec
inc
push
xchg
test
pop
sahf
aaa
mov
push
popf
dec
sub
and
popa
sub
jecxz
daa
mov
pop
jo
out
mov
sbb
mov
and
cmp
and
mov
test
popa
mov
cld
movs
pusha
cmp
pop
aad
jge
daa
push
cmp
mov
in
adc
cmp
pop
(bad)
sbb
outs
sub
stos
sub
inc
mov
cwde
sub
pop
fs
movs
jp
bound
mov
mov
and
(bad)
adc
lea
movs
cld
stos
mov
hlt
jne
and
cmp
test
test
xchg
pop
add
adc
push
test
inc
es
js
mov
sbb
mov
ins
cmp
call
stos
mov
(bad)
push
repnz
mov
loope
mov
popf
jl
push
fs
das
aas
mov
dec
push
cli
jb
mov
cmps
out
ins
jecxz
cmps
fisttp
inc
inc
test
arpl
sub
add
rol
fadd
cmp
mov
mov
imul
fdiv
mov
pop
addr16
shl
mov
pop
and
sahf
add
sbb
mov
jmp
xchg
push
inc
imul
cwde
adc
push
test
fist
dec
rol
mov
repnz
lods
xchg
fiadd
(bad)
sar
dec
loopne
dec
sub
jmp
dec
sub
in
push
loopne
push
in
jae
sbb
or
and
pop
in
sub
mov
push
or
enter
aad
loope
test
cmps
mov
int3
push
sub
push
mov
imul
pop
lea
adc
sbb
cmp
pusha
xchg
and
rcr
add
ror
mov
or
pop
lock
dec
adc
out
inc
je
cs
(bad)
xchg
mov
mov
xchg
pop
mov
or
jo
mov
sub
push
scas
sub
jne
cmps
rcr
add
cmps
lahf
xlat
lea
test
or
aad
imul
inc
inc
test
shl
inc
div
sbb
pinsrw
gs
or
xchg
mov
clc
add
push
in
or
mov
ds
or
add
push
pop
loope
aaa
aaa
xchg
cwde
push
pusha
push
aas
pop
mov
cld
setle
mov
push
dec
xor
(bad)
inc
mov
adc
lock
fmul
dec
jge
bnd
adc
jg
in
fldcw
cmp
or
sub
(bad)
push
fsub
imul
sar
imul
adc
cmp
movs
jbe
rcr
xchg
mov
and
enter
push
vshufpd
and
mov
and
mov
scas
bound
lea
xor
out
test
push
repnz
push
adc
jno
push
cdq
inc
dec
inc
or
sbb
push
aaa
rol
pop
cli
aad
sub
lods
jo
cmps
dec
nop
push
cmp
push
inc
xchg
adc
out
hlt
call
in
call
mov
nop
dec
jmp
or
sbb
push
mov
sub
xchg
push
pop
test
adc
adc
adc
xchg
cpuid
cmp
mov
iret
in
sbb
fldcw
sub
and
repz
cs
mov
mov
(bad)
fimul
scas
dec
scas
loop
xchg
jp
xor
scas
lods
adc
pop
aam
mov
xchg
cmp
add
das
xchg
stc
ins
(bad)
hlt
cmp
jle
data16
xchg
fldcw
mov
sar
imul
cmp
gs
ret
int3
xor
fild
xchg
mov
mov
stos
mov
adc
dec
cmp
sbb
jns
sbb
lock
and
in
push
rcl
imul
outs
and
sbb
shl
mov
and
pop
sub
test
mov
jle
(bad)
mov
xchg
jmp
pop
xchg
mov
sub
cmps
push
mov
add
sbb
pop
lea
js
not
sbb
mov
adc
mov
mov
rcl
fs
push
arpl
sbb
mov
push
pop
xchg
dec
jle
pop
cmc
sub
shl
sbb
inc
lea
fs
js
mov
push
rcr
test
push
hlt
mov
xchg
mov
cmp
dec
dec
push
dec
jne
int3
enter
call
xor
sbb
dec
push
fnstsw
cmp
cmp
or
and
movs
jb
mov
in
mov
push
dec
pop
xchg
pop
or
fcomp
rol
and
jmp
mov
test
out
push
sub
shl
sub
jne
fs
bnd
aas
or
xchg
mov
mov
push
jns
lahf
xchg
cmp
mov
adc
fsub
mov
mov
sbb
bound
cdq
add
cmp
sbb
lahf
xchg
push
fadd
sub
dec
sub
dec
cdq
in
repnz
xor
inc
movs
in
ins
pop
mov
jne
sub
xlat
movs
(bad)
out
lods
cmp
fadd
(bad)
xor
mov
bound
fs
or
in
mov
jl
xor
adc
loope
retf
dec
mov
shr
imul
stos
loopne
xor
sbb
cmps
xchg
imul
loopne
cld
loop
scas
push
inc
jl
rcr
sub
add
pusha
sbb
xlat
push
jns
mov
xor
push
jmp
mov
xor
aad
jge
sub
aas
push
fnstcw
pop
dec
fist
xchg
sub
mov
rcr
hlt
(bad)
push
adc
or
mov
xchg
arpl
inc
xor
iret
lods
mov
(bad)
fisubr
enter
sbb
popa
pop
stos
daa
fimul
in
scas
pop
and
or
pop
lods
jbe
inc
cli
pusha
adc
cmp
mov
jno
(bad)
addr16
xchg
daa
push
stos
outs
or
xchg
mov
sar
xor
imul
sub
std
inc
test
or
cmp
jge
and
pop
fs
adc
or
cmp
push
sub
(bad)
(bad)
jmp
or
ds
dec
sar
or
icebp
push
mov
pushf
sahf
adc
test
dec
outs
or
pop
adc
xlat
inc
shr
popf
push
jg
sti
sub
mov
pop
pusha
adc
pop
mov
sbb
xchg
nop
ret
cmp
mov
in
jg
inc
xor
pushf
jnp
cmp
push
loope
adc
dec
push
in
xchg
fcomp
call
je
or
cmp
xor
mov
retf
pop
xlat
loopne
in
inc
fwait
pop
test
in
enter
daa
dec
sbb
aad
mov
in
cmp
or
cmp
fwait
xor
test
daa
test
shr
pop
fist
(bad)
pop
add
test
and
out
sahf
dec
mov
mov
fwait
jnp
xlat
out
or
sbb
str
cmp
or
loopne
xor
sub
add
shr
test
loope
aaa
xchg
pop
xor
xlat
push
outs
mov
(bad)
xor
stos
aad
adc
adc
push
xchg
xchg
pop
push
and
sub
mov
stos
dec
(bad)
sub
and
push
xchg
cmp
adc
xlat
jg
test
xchg
test
icebp
sar
pusha
pop
neg
dec
jle
ror
mov
push
push
mov
(bad)
not
mov
add
setb
inc
daa
fwait
mov
dec
xchg
mov
add
cmp
push
cwde
inc
retf
inc
mov
mov
jne
leave
adc
cld
cmps
push
sbb
cmp
rol
jmp
mov
hlt
fadd
pop
sbb
rcl
fadd
das
test
and
xchg
adc
fisub
sub
fdivr
clc
dec
out
cmc
std
out
and
out
mov
imul
push
jle
inc
pop
arpl
in
jle
mov
add
aas
(bad)
push
mov
outs
je
jmp
frstor
(bad)
mov
dec
xchg
pop
jb
push
xor
outs
fld
pop
sub
movs
push
es
add
les
add
mov
mov
out
nop
ret
mov
(bad)
data16
cmp
sbb
fsub
jae
jge
jge
int3
xchg
jge
or
outs
or
push
pop
mov
test
mov
mov
xchg
loop
aas
fucom
jnp
(bad)
data16
inc
mov
loopne
add
push
dec
cmps
mov
xlat
xchg
mov
(bad)
mov
xor
bnd
pop
cmp
fiadd
xchg
scas
cmc
add
test
fistp
js
sub
rcl
and
in
add
mov
pop
mov
sub
iret
cs
adc
pop
std
mov
adc
cmp
xchg
jae
loop
stos
rcr
mov
push
push
(bad)
loopne
call
leave
lods
push
and
mov
jne
loop
xchg
xor
inc
fwait
mov
lods
test
gs
or
cmp
sub
mov
icebp
iret
stos
bound
mov
jne
sar
iret
fist
shr
inc
cmc
dec
cmp
adc
sar
sbb
jmp
rep
xchg
adc
adc
in
in
mov
outs
lds
cmc
mov
mov
mov
les
pop
lods
push
std
out
test
mov
mov
mov
jne
cmp
(bad)
rcr
iret
ins
adc
and
pop
ins
out
jmp
in
sbb
cdq
mov
in
jecxz
jnp
movs
sub
adc
loop
cmp
cli
add
rcr
mov
hlt
push
jg
stos
mov
popa
xchg
fldcw
push
stos
push
fnstsw
or
shl
cmc
ret
int
shl
pop
mov
fnsave
in
inc
mul
jb
fmulp
fstp
ins
sub
sub
lds
fwait
mov
sti
in
ret
cdq
movs
mov
ss
ror
xchg
pop
shl
ins
and
movs
jmp
xchg
mov
push
inc
jne
popf
fld
lea
mov
or
das
(bad)
loop
adc
push
lods
je
sbb
das
test
jns
cmc
loopne
retf
je
jae
xlat
ret
(bad)
cmc
in
push
frstor
pushf
hlt
out
les
popa
(bad)
cmp
(bad)
test
pop
cmc
pop
mov
hlt
arpl
stc
jecxz
push
mov
mov
scas
push
xor
mov
sbb
popa
movs
cli
inc
fstp
push
push
sti
and
push
neg
scas
sahf
mov
mov
pusha
pop
xor
test
pushf
pop
nop
inc
sub
cs
mov
arpl
cli
inc
iret
dec
or
inc
sub
mov
and
fnstcw
call
jl
adc
xor
mov
lods
xchg
adc
sub
inc
mov
and
or
sbb
(bad)
and
xor
movs
icebp
mov
mov
mov
pop
shr
jp
fisttp
jo
mov
jmp
iret
jo
loop
xchg
inc
dec
and
jno
enter
jb
adc
les
fidivr
mov
inc
xchg
mov
cs
pop
jle
ja
pusha
dec
js
jmp
mov
bound
push
cwde
addr16
push
jns
rol
push
ins
test
loope
js
rcr
fwait
jecxz
inc
(bad)
push
mov
outs
cmp
rol
or
cmp
dec
or
ds
popf
bound
cmp
mov
mov
dec
ins
xor
cld
test
(bad)
cmp
or
jbe
gs
xor
stc
jb
mov
ins
std
jb
cld
sbb
mov
outs
addr16
inc
loope
adc
and
popa
mov
and
mov
clc
out
jp
stos
xchg
(bad)
mov
ret
jle
test
dec
cwde
loope
dec
lar
push
mov
sbb
arpl
sbb
sub
push
pop
push
ret
gs
(bad)
aad
ja
addr16
jmp
sub
pop
sbb
ret
sbb
addr16
add
or
push
jmp
stos
mov
inc
pop
sbb
pop
dec
cli
dec
or
xor
mov
neg
repz
movs
or
add
xchg
mov
mov
and
int3
xchg
adc
aad
ins
xchg
js
adc
xchg
jmp
aad
mov
or
sbb
cmp
mov
xchg
in
fist
aaa
jl
pop
xor
gs
xchg
and
ret
mov
mov
xchg
ds
mov
mov
and
int
cmp
lds
(bad)
les
pushf
xor
stc
es
cmps
push
in
add
xchg
mov
arpl
les
je
mov
mov
leave
jno
cwde
pop
mov
inc
cwde
push
add
in
or
or
(bad)
xlat
fmul
xchg
push
xor
mov
pop
mov
imul
push
ret
pop
das
xor
icebp
add
or
cmps
hlt
pop
imul
sbb
mov
in
mov
or
rep
push
sbb
sub
ins
shl
lods
pop
xor
or
fadd
xchg
fst
jle
bound
mov
mov
add
jl
or
out
cmp
push
lds
retf
adc
push
daa
retf
out
inc
inc
addr16
bound
call
call
sbb
sub
(bad)
fst
cli
(bad)
sbb
ins
sbb
sbb
movs
jne
xor
push
jnp
pop
in
sub
mov
loopne
mov
loopne
mov
mov
aas
sub
sub
out
xor
and
inc
(bad)
mov
push
shr
aad
mov
sub
test
or
cdq
adc
mov
mov
scas
out
lock
inc
adc
pop
pop
xlat
xchg
ds
jp
mov
jno
dec
inc
imul
fimul
push
test
adc
or
or
in
sbb
push
adc
fsubr
dec
inc
dec
xor
(bad)
jns
xchg
adc
sbb
mov
in
test
cmp
repz
jne
cwde
lea
movs
adc
outs
(bad)
fdivr
out
mov
clc
xchg
push
inc
in
repz
xchg
rol
and
pop
data16
popa
xor
adc
and
mov
mov
xor
inc
mov
cdq
sub
lods
int
sub
outs
lods
dec
div
sub
adc
pop
std
movs
mov
jp
dec
cld
sbb
fwait
inc
push
sub
ja
adc
jbe
sahf
jae
sti
enter
sub
inc
xchg
jecxz
(bad)
sbb
mov
mov
daa
imul
arpl
clc
inc
push
sub
loop
test
(bad)
lahf
fwait
mov
call
jb
sbb
stc
sub
sub
xbegin
sbb
aaa
push
sub
mov
bound
sti
cmp
add
int3
push
inc
stos
sti
(bad)
popf
nop
pop
push
push
cs
sbb
mov
mov
push
push
scas
movs
mov
(bad)
push
pop
xchg
xchg
inc
fwait
push
mov
mov
pop
mov
icebp
push
xor
jp
xor
xchg
xchg
jle
pop
retf
scas
(bad)
rcl
jecxz
jbe
(bad)
or
ja
sub
(bad)
sbb
stos
xchg
clc
lods
or
call
dec
xchg
in
xor
mov
scas
sub
gs
mov
sub
inc
push
push
pop
call
mov
repnz
jecxz
outs
popf
mov
and
iret
int3
(bad)
jnp
gs
and
mov
call
in
test
out
mov
xchg
(bad)
push
dec
sbb
int
sahf
pop
(bad)
loop
sbb
call
repnz
jb
cmps
push
or
dec
push
stc
adc
pop
arpl
add
movs
adc
mov
and
leave
je
into
lea
cmp
cld
retf
cmp
xchg
push
ret
adc
push
push
jns
sti
(bad)
jns
(bad)
xor
stos
xor
ja
jne
inc
pop
adc
loopne
cdq
sub
cmp
dec
sub
in
arpl
sar
in
pushf
arpl
out
add
push
loop
div
nop
sti
xor
jle
aas
hlt
mov
jp
(bad)
push
push
out
in
(bad)
push
inc
mov
jno
ret
xor
pop
lods
cwde
lds
dec
out
inc
(bad)
adc
xchg
dec
lahf
scas
mov
mov
adc
jne
push
stc
in
mov
push
push
(bad)
std
cwde
sbb
mov
sbb
jns
pop
mov
jle
jae
inc
dec
or
scas
inc
sbb
adc
(bad)
aad
pop
inc
push
jecxz
push
mov
repnz
sub
add
(bad)
idiv
or
or
inc
cli
(bad)
dec
push
lods
jmp
iret
add
dec
mov
cs
pop
(bad)
popf
ror
cli
and
arpl
jg
and
inc
add
mov
scas
mov
or
sub
leave
fwait
addr16
out
jmp
inc
lock
cmp
push
mov
and
loop
scas
and
xchg
stos
jl
stc
outs
test
xchg
sub
xchg
cmp
dec
cmp
aad
mov
popa
stos
adc
jle
cs
popa
jg
ins
stc
and
dec
and
fidivr
iret
mov
dec
sbb
leave
dec
shl
pop
int3
dec
and
pop
fcomip
dec
mov
(bad)
jmp
mov
mov
aas
sti
mov
jb
or
stos
ins
loopne
lods
add
add
sub
or
adc
cdq
nop
xor
sbb
push
in
repnz
adc
pop
leave
inc
inc
add
sub
icebp
bound
add
jae
lahf
xor
stos
jae
outs
jmp
mov
push
sbb
inc
pushf
jnp
push
retf
rcr
sub
out
cmc
xchg
sub
fild
fwait
pop
mov
pop
pop
and
xchg
ficomp
mov
imul
fbstp
mov
and
xor
xor
scas
xor
jns
in
jmp
fsubr
leave
mov
jne
aad
lea
enter
pop
sahf
retf
loope
rcr
or
push
rol
sub
sub
les
cwde
mov
and
jmp
test
cmps
jle
or
pop
cdq
jmp
rcl
mov
xor
cmps
push
add
movs
or
sti
fisub
mov
sbb
dec
xchg
cmc
or
or
daa
or
imul
or
inc
test
adc
(bad)
jge
pop
or
inc
lea
stc
mov
push
shr
ffreep
xor
cdq
aaa
aam
loopne
xlat
loopne
ret
ds
jmp
sub
jbe
imul
je
(bad)
inc
mov
icebp
lods
in
xchg
cmp
dec
pop
cs
mov
and
pop
cwde
cwde
fsub
cmp
xor
sbb
xchg
mov
and
fisttp
and
dec
bound
lea
add
inc
inc
cwde
mov
sub
mov
rcl
jle
test
mov
sub
jnp
xchg
aas
sub
in
fstp
jbe
(bad)
push
arpl
sub
add
mov
repnz
cli
mov
(bad)
std
stos
jne
lods
push
sub
jbe
xor
test
sub
add
inc
dec
push
jnp
fdiv
and
push
fs
das
outs
rcr
shl
scas
bound
in
push
adc
mov
rcl
cmp
aas
pop
pop
loope
and
inc
push
add
nop
mov
dec
out
inc
pop
jmp
mov
(bad)
add
call
cmp
test
or
int
fs
aaa
hlt
xor
(bad)
outs
les
push
push
mov
ret
in
cmps
adc
sub
mov
rcr
mov
out
mov
setge
int3
add
shr
xchg
adc
add
jo
mov
or
xchg
cdq
ror
and
call
push
add
(bad)
test
adc
sbb
iret
and
(bad)
mov
mov
adc
pop
xor
cmp
inc
mov
js
push
arpl
aam
mov
ja
add
mov
shl
adc
jbe
mov
retf
sub
and
inc
push
addr16
jbe
fs
jge
enter
in
fsubr
mov
out
adc
jbe
xor
and
or
cwde
(bad)
dec
adc
and
loop
push
fbld
movlps
call
mov
jge
pop
mov
xor
inc
int3
inc
xor
mov
dec
mov
xchg
call
scas
lea
cmp
mov
retf
xlat
stos
and
mov
xor
loopne
idiv
leave
das
int
cmc
loop
pop
test
dec
shl
xchg
not
outs
adc
cmps
xor
push
cmp
dec
sbb
sub
push
mov
pusha
xchg
out
dec
inc
or
mov
inc
inc
cdq
pop
shl
adc
rol
mov
cmps
rcl
(bad)
push
cld
fidiv
jns
xlat
frstor
(bad)
cmp
xchg
fnsave
(bad)
xlat
xchg
fdiv
rol
outs
adc
retf
jp
and
cmps
pop
sbb
mov
jne
imul
aaa
jb
retf
jmp
test
adc
cli
out
popa
sbb
dec
into
add
outs
into
or
jmp
mov
ins
jb
test
or
imul
add
dec
pop
inc
inc
in
in
pop
iret
cmp
xchg
fdiv
pop
mov
cmps
daa
mov
movs
mov
stc
or
mov
xchg
xchg
sub
or
out
cmp
mov
ret
lahf
ja
clc
jne
jno
xchg
in
aam
out
sub
sbb
imul
dec
xor
mov
jo
push
stc
jge
mov
mov
push
not
enter
sub
(bad)
fist
jmp
adc
stos
mov
int3
les
cs
ret
cmp
jmp
stos
sbb
xchg
adc
loopne
scas
mov
ret
mov
mov
ins
xchg
sbb
icebp
cmp
xchg
pop
add
in
push
push
nop
adc
outs
mov
mov
push
movs
mov
push
cmps
sub
das
and
inc
adc
mov
xor
dec
popa
push
shr
mov
add
push
test
imul
sar
in
mov
adc
ret
retf
cdq
loope
jb
pop
popa
cmps
rcl
add
movs
inc
sbb
mov
sbb
ins
jg
cmp
es
loop
xor
jg
dec
add
push
rcl
mov
pop
dec
sti
js
or
out
jecxz
in
ret
jecxz
test
mov
jae
fldenv
test
and
pop
in
inc
cmp
repz
es
or
test
push
mov
stos
dec
or
sbb
push
icebp
sti
push
imul
xor
adc
sbb
inc
pop
jg
leave
inc
pop
cmp
ds
mov
aas
mov
mov
mov
mov
jmp
popa
inc
xchg
fcom
xchg
mov
cdq
jns
(bad)
(bad)
inc
cdq
dec
xchg
shl
add
popa
adc
dec
loop
sbb
(bad)
adc
(bad)
mov
inc
lods
stos
fsubr
or
test
(bad)
and
and
out
imul
inc
fs
push
mov
in
retf
sbb
lods
int
adc
neg
push
dec
out
push
ja
mov
dec
gs
lahf
or
adc
icebp
xor
imul
xor
jp
iret
mov
fsubr
loop
loopne
dec
sub
mov
adc
cli
push
mov
test
mov
pop
push
scas
xchg
add
call
ds
test
into
dec
mov
jle
movs
mov
(bad)
dec
adc
ja
inc
xchg
xchg
mov
mov
sub
std
sub
test
sub
dec
add
iret
or
ret
sbb
push
pop
jo
(bad)
xlat
shr
loopne
pop
pcmpeqd
cdq
adc
cmp
mov
adc
xchg
add
mov
fisubr
iret
xchg
sbb
push
add
(bad)
in
ss
stos
or
cmpxchg
cmps
push
and
jg
jecxz
(bad)
loop
mov
(bad)
enter
test
enter
(bad)
int
xchg
in
push
push
cmp
inc
cmp
pop
pop
adc
rcr
push
cdq
push
(bad)
sbb
inc
push
stos
test
std
adc
call
pop
inc
movs
loopne
xchg
rol
in
lahf
js
jg
sub
cwde
mov
test
inc
loope
mov
push
call
and
add
mov
or
ret
jg
cmc
sbb
popf
sub
mov
jecxz
(bad)
out
out
sub
(bad)
das
leave
mov
lock
xor
adc
addr16
sbb
std
pop
pop
das
pop
shl
xchg
lods
ja
popa
push
mov
movs
xchg
mov
pop
mov
mov
sbb
and
shl
push
cmc
std
cmc
aas
cmp
out
jmp
fst
add
jp
bound
xchg
(bad)
dec
or
or
sub
shr
add
push
cmps
or
int
jl
push
sub
mov
dec
jbe
sbb
mov
xor
jp
hlt
frstor
cdq
out
jl
push
in
sbb
xor
push
iret
cwde
sub
pop
jae
add
test
addr16
lock
dec
call
(bad)
dec
inc
dec
popf
dec
push
shl
jae
pusha
inc
sbb
jnp
and
(bad)
fldenv
adc
dec
fisubr
pop
(bad)
adc
pop
jmp
iret
xchg
push
inc
or
push
inc
xchg
fyl2x
add
loop
pop
pop
scas
js
xlat
dec
bound
(bad)
sub
add
mov
or
or
pop
mov
mov
sti
xor
retf
fwait
jo
sahf
mov
or
repz
mov
loop
fstp
fnstcw
call
loopne
mov
out
pusha
(bad)
pop
or
pop
je
arpl
dec
sbb
xchg
add
bound
fcom
push
xchg
aam
int3
jp
shr
(bad)
int
fmul
jne
xchg
push
or
ret
jns
sar
int
cmp
out
mov
stc
pop
das
cmps
lea
mov
jns
add
adc
call
xchg
icebp
shr
inc
cmc
dec
push
(bad)
mov
(bad)
jbe
loope
mov
or
pushf
mov
and
imul
sub
pushf
and
sbb
add
jbe
test
in
cwde
dec
or
mov
inc
out
xchg
ds
mov
mov
push
mov
(bad)
ds
adc
push
xchg
jg
add
iret
hlt
lahf
cdq
xchg
dec
(bad)
(bad)
lods
xor
add
in
movs
adc
mov
ror
mov
cmp
dec
fistp
xor
push
outs
jnp
pop
xchg
pop
aaa
out
fsubr
fdivr
mov
mov
pop
leave
mov
mov
das
ror
pop
popf
clc
jecxz
call
mov
sbb
push
mov
jle
xlat
mov
cld
sbb
cmp
sbb
nop
push
pushf
aam
pop
mov
lods
inc
and
xchg
xor
movs
push
push
mov
inc
jno
xor
aaa
cmp
outs
sbb
sbb
(bad)
outs
idiv
(bad)
(bad)
cwde
push
or
ja
(bad)
dec
frstor
mov
jo
jge
pop
xlat
adc
repz
add
and
dec
icebp
dec
(bad)
(bad)
jmp
pop
add
inc
fsub
pusha
pop
mov
stos
test
(bad)
pop
idiv
setno
loopne
shr
(bad)
pushf
cli
stos
mov
loop
pop
lods
dec
push
jp
push
cwde
fadd
es
jne
mov
adc
sub
sbb
mov
dec
jns
and
jae
xchg
mov
or
and
push
jo
xchg
(bad)
dec
call
mov
pop
or
leave
cmps
int3
ja
adc
mov
ja
mov
mov
inc
cmp
sub
cmp
push
shr
pop
xchg
push
aas
into
int3
add
lds
popf
lea
or
test
jb
xchg
lahf
outs
movs
and
adc
pushf
or
popf
sbb
mov
dec
jmp
setnp
in
add
imul
mov
mov
mov
call
jnp
out
xchg
sub
cmps
xlat
adc
push
push
add
leave
nop
lea
gs
push
aaa
mov
dec
call
inc
push
aas
push
es
xor
add
(bad)
cli
movs
xor
push
sbb
add
iret
mul
(bad)
int
mov
sbb
aaa
inc
push
ins
mov
xchg
cdq
(bad)
ins
es
lods
jmp
test
ss
jmp
call
movs
dec
or
les
pop
sbb
inc
pop
jl
jbe
shl
pusha
js
cmp
fisub
jo
push
nop
mov
cmp
hlt
dec
loop
mov
fild
push
mov
int
xor
loop
xor
imul
mov
retf
call
push
data16
cmp
outs
cmps
ins
jns
mov
leave
mov
mov
icebp
out
arpl
bound
push
adc
out
call
sti
mov
mov
push
cwde
adc
test
xor
sub
movs
jmp
mov
je
sbb
xchg
pop
lods
icebp
(bad)
std
pop
pop
mov
imul
sub
or
mov
pop
out
jecxz
add
mov
push
add
cmps
mov
scas
scas
sub
(bad)
xlat
and
jne
xchg
loop
mov
ds
sub
dec
test
imul
loopne
imul
mov
or
gs
cmp
cmc
xor
call
lahf
jae
add
out
rol
shr
scas
inc
scas
fldenv
lods
je
and
icebp
push
fld
scas
imul
mov
call
sbb
cmp
cmp
outs
clc
cli
rol
out
(bad)
icebp
fdivr
push
cmps
xchg
xlat
inc
shr
xor
int
sub
std
cmp
dec
nop
mov
xchg
mov
scas
les
xor
mov
int3
cmp
cmp
cmp
gs
add
or
pushf
mov
adc
mov
sbb
push
dec
cmp
hlt
mov
mov
in
jle
or
loopne
xchg
mov
sbb
fdivr
push
adc
fcmovu
jns
push
repnz
in
xchg
loop
fist
pop
sbb
out
xor
push
or
dec
inc
inc
adc
mov
xlat
cmps
inc
pushf
mov
add
add
fiadd
adc
cmp
imul
dec
outs
pop
(bad)
jne
fsub
mov
pop
and
and
cmp
arpl
(bad)
xor
push
cmp
inc
imul
inc
mov
push
test
add
call
mov
pusha
adc
loopne
dec
push
xchg
ins
(bad)
jmp
jbe
mov
ror
push
imul
sub
pop
mov
retf
sahf
mov
shl
mov
stos
and
sbb
lods
fisubr
dec
cmp
jg
jnp
test
push
rcl
scas
retf
and
es
fldenv
nop
retf
mov
jle
nop
and
inc
les
loop
mov
mov
mov
mov
mov
inc
sbb
shl
ficom
mov
std
adc
imul
cmp
cmps
ins
sub
jg
ss
or
xchg
mov
movs
inc
mov
jnp
rcr
mov
push
add
repz
fwait
ins
mov
push
push
ror
jmp
pop
xor
inc
dec
leave
mov
fimul
aas
xor
jbe
jle
jmp
cmp
pop
dec
cmp
(bad)
jecxz
sti
stc
inc
push
push
push
data16
(bad)
jge
ja
pop
rol
dec
iret
loopne
cmp
sbb
in
fdiv
xchg
or
sbb
pop
ss
cdq
test
mov
add
test
pusha
push
xchg
mov
(bad)
aas
stos
lea
scas
popa
mov
xlat
and
mov
gs
mov
xchg
xchg
rcr
push
arpl
jl
fcom
dec
ret
ror
push
xor
test
sbb
call
fwait
call
cdq
sub
ins
xor
push
xor
mov
test
dec
sahf
pop
adc
mov
imul
jg
fistp
mov
adc
fcom
and
cmc
std
retf
push
sub
add
call
cmps
inc
jmp
popf
cmp
mov
lds
icebp
into
and
sbb
sbb
dec
sub
outs
mov
retf
add
iret
sahf
xor
ds
dec
int3
stc
cld
cmps
stc
pusha
aas
sbb
xchg
popa
xor
cmps
xor
gs
fdiv
lods
xor
stc
pusha
pop
or
mov
xor
js
sub
cmp
aas
sbb
sub
jne
out
arpl
test
les
je
mov
mov
hlt
jmp
imul
stos
xchg
lds
jl
std
add
inc
enter
adc
vsqrtsd
je
mov
clc
shr
sti
and
outs
iret
mov
pop
dec
test
push
xchg
pop
jmp
mov
pop
outs
mov
sub
in
retf
js
lahf
shl
repz
(bad)
arpl
fisubr
int
sahf
int
dec
add
(bad)
lea
sub
(bad)
mov
fisttp
sbb
and
sub
mov
or
cmc
sahf
xchg
cmc
pop
sub
not
ja
dec
jmp
xor
dec
jnp
es
pushf
sbb
pushf
cmp
scas
sbb
dec
call
shl
push
inc
in
mov
(bad)
gs
cmp
dec
add
jns
hlt
iret
or
fst
mov
or
dec
and
outs
test
pop
xor
fwait
xchg
pop
sbb
xchg
sar
xchg
scas
loop
sub
iret
movs
and
repz
and
mov
sbb
push
jno
popa
cmp
jecxz
iret
mov
mov
aam
xchg
call
das
pop
mov
mov
rcl
jp
dec
cmp
ds
and
arpl
adc
and
cli
xor
inc
in
(bad)
add
jmp
popa
dec
sti
mov
lods
add
xor
mov
in
sahf
sbb
inc
(bad)
and
adc
and
icebp
push
clc
dec
mov
adc
jle
jae
rcl
sar
test
(bad)
loope
imul
dec
cs
not
retf
sub
pop
rol
pop
xor
sbb
pop
xor
fwait
(bad)
xchg
movs
jnp
cld
cwde
ret
xchg
dec
lods
cmp
call
cli
cld
push
ret
inc
(bad)
jbe
clc
(bad)
push
nop
xor
xor
out
sar
inc
addr16
mov
jmp
into
or
xlat
test
dec
mov
jo
xchg
jle
inc
clc
mov
and
ja
outs
sub
imul
push
dec
(bad)
les
pusha
xchg
rcl
add
inc
enter
loop
push
push
jo
mov
icebp
outs
push
jmp
add
cmp
xchg
jge
stos
mov
inc
xlat
jo
mov
fiadd
aam
mov
mov
popf
push
and
and
xor
pop
enter
fidivr
outs
ds
inc
cmp
test
sub
cmps
test
add
fwait
pop
add
jno
jmp
pop
adc
jmp
mov
rcl
xchg
stc
push
popf
mov
push
lods
xchg
retf
cmc
and
cmp
div
call
mov
daa
pop
sbb
sahf
mov
jae
and
jg
movs
leave
dec
xchg
and
and
ficomp
mov
cmp
mov
fsubr
gs
je
mov
xor
call
test
mov
or
mov
mov
lock
test
add
fld
out
mov
jecxz
xchg
les
mov
sar
jmp
not
sbb
jmp
push
in
outs
mov
inc
adc
pop
nop
or
cmp
cmps
nop
mov
sbb
cmp
or
repz
inc
cmp
xchg
int3
popf
inc
xchg
jmp
jmp
out
inc
fimul
push
mov
aaa
es
push
cmc
fnstenv
xchg
adc
aad
cmp
imul
jo
dec
popa
and
sub
or
pop
out
sub
xchg
cmp
adc
pop
push
pop
xor
rol
mov
and
sub
ins
cmc
xor
dec
das
les
inc
sub
cmp
cmp
repz
mov
movs
movs
out
add
sbb
or
and
mov
or
xchg
jbe
lods
jno
cdq
pushf
adc
sbb
pop
int3
cdq
fcmovb
lds
push
addr16
adc
cmp
xchg
mov
ja
xchg
bound
sti
stos
sar
cdq
adc
cli
je
xchg
in
enter
in
mov
inc
lods
daa
fcom
xchg
push
pop
loope
idiv
mov
scas
adc
das
ret
mov
aam
ins
hlt
mov
or
cwde
bswap
xchg
jno
jl
push
rcr
jnp
arpl
jne
cwde
aam
add
cdq
mov
imul
mov
cmp
pop
or
shr
push
add
dec
ds
jae
or
cli
imul
inc
gs
test
pop
adc
call
push
out
sbb
pusha
xchg
mov
or
push
inc
xor
iret
(bad)
jne
and
pop
adc
loope
cld
repz
xchg
push
dec
inc
dec
fmul
outs
test
xchg
leave
adc
es
jno
pop
es
dec
xchg
test
pop
aas
(bad)
out
retf
ss
ja
icebp
jp
(bad)
out
cli
mov
mov
mov
ret
ret
push
cwde
sbb
jb
sbb
ret
push
inc
jnp
jne
data16
mov
mov
inc
gs
mov
mov
shr
clc
mov
sbb
retf
sub
out
adc
adc
(bad)
jno
pop
std
sbb
nop
(bad)
push
dec
ins
jp
lock
lods
pop
out
jp
imul
cmp
adc
stc
inc
in
cmp
sbb
xchg
xor
popf
mov
mov
or
shl
vmwrite
sub
sbb
push
or
mov
or
and
mov
sbb
stos
push
or
outs
dec
mov
cmp
dec
or
and
fsub
fdiv
out
inc
sahf
sbb
push
out
cmp
inc
push
call
dec
xchg
or
xchg
jno
and
ror
push
push
das
mov
stos
outs
and
push
xor
fstp
xchg
enter
aad
adc
std
loope
pop
push
jl
and
in
sbb
sar
retf
out
sub
push
mov
idiv
mov
(bad)
and
cmp
pop
mov
aaa
loop
adc
cmp
lahf
dec
mov
and
push
jno
das
inc
jmp
test
mov
loopne
cmps
push
sbb
dec
je
(bad)
fsub
pop
in
mov
inc
pop
jb
in
mov
jae
push
and
cmp
test
jl
pop
scas
mov
sti
mov
mov
in
movs
inc
push
out
mov
and
scas
sbb
jg
mov
scas
pop
push
and
pusha
mov
adc
(bad)
mov
inc
mov
pop
inc
(bad)
adc
adc
push
add
adc
enter
icebp
out
cmp
out
sub
fnstcw
inc
pop
neg
cmp
repz
ins
(bad)
retf
clc
inc
(bad)
add
mov
scas
test
lods
jg
stos
jns
xchg
mov
out
out
mov
xlat
out
bound
jno
mov
sbb
dec
hlt
enter
xchg
add
ret
leave
push
aas
js
fyl2xp1
push
dec
cmc
cmps
xchg
jb
xor
xchg
cmp
ins
loop
scas
stc
push
retf
shr
cdq
cld
rol
dec
mov
xor
jns
push
add
cld
je
scas
imul
or
xor
stc
loope
inc
sbb
or
enter
inc
ret
dec
sbb
movs
sbb
popa
dec
pop
lahf
xchg
jno
shl
rol
xchg
jo
dec
test
sub
test
loopne
push
(bad)
les
sub
mov
fwait
movs
pop
mov
pop
fisttp
loopne
add
out
ins
cmp
ret
sub
xor
mov
mov
ss
into
inc
dec
xchg
int3
mov
dec
movs
xchg
loopne
inc
cwde
dec
(bad)
sub
add
rcr
jns
add
rcl
or
ret
push
push
cmp
aam
scas
mov
stos
addr16
popf
jl
jbe
retf
pusha
mov
outs
push
fistp
cmps
int3
push
movs
fisttp
inc
mov
test
mov
lods
movs
jmp
test
(bad)
sti
mov
xchg
pushf
sub
ficom
or
repz
or
jmp
std
push
mov
jg
stos
out
sub
dec
mov
add
xor
pop
jl
js
and
arpl
adc
xor
pop
xrelease
push
retf
sahf
sub
outs
xchg
fnsave
(bad)
dec
and
and
mov
or
clc
xlat
cmp
lock
or
rol
shl
push
or
add
test
in
adc
rcr
(bad)
fsub
cmp
pushf
sbb
sbb
mov
pop
jnp
pop
xor
add
cmp
cmp
mov
xchg
aas
fcmovb
and
aas
loopne
stc
lea
lods
setno
call
add
imul
push
adc
mov
cmp
xor
sub
retf
push
fwait
push
jge
xchg
xor
cmp
outs
adc
mov
dec
cmc
das
loope
or
jns
jno
(bad)
and
cmp
or
mov
pop
xchg
enter
icebp
xchg
dec
inc
adc
pop
jnp
dec
mov
cmp
inc
and
lods
adc
push
dec
mov
test
jl
shr
fs
mov
dec
add
loopne
xor
ss
icebp
or
push
lahf
imul
inc
xchg
jl
aaa
fidiv
rcr
jb
stc
pop
int
mov
jmp
scas
out
sub
jle
xchg
aad
jle
mov
dec
stos
xor
mov
fld
pop
push
sub
sar
xchg
push
sub
add
jb
je
out
sti
ss
or
stos
std
ins
lock
mov
add
pop
push
fild
lds
or
sbb
add
leave
stos
fidiv
in
sub
lahf
mov
cmp
xor
and
mov
cmp
inc
jb
adc
mov
or
and
mov
pop
es
mov
inc
mov
push
and
ja
std
mov
mov
sbb
xchg
mov
mov
ins
mov
jp
add
shl
mov
cmps
outs
stos
or
or
sbb
jbe
xchg
movs
aas
popa
xchg
sbb
sub
sub
dec
mov
push
add
loope
(bad)
loopne
fisub
or
xchg
push
sub
sbb
mov
dec
psraw
test
push
xor
mov
cmc
jecxz
sub
test
bound
mov
mov
inc
test
mov
lods
inc
getsec
and
mov
xlat
repnz
pop
xor
clc
cmp
sub
ret
mov
aam
dec
jo
inc
mov
int
xchg
xchg
push
mov
cmp
jp
pop
xlat
cli
lea
js
jge
mov
jb
aaa
std
retf
repnz
pop
jae
aas
cdq
lds
loope
inc
jb
push
xchg
push
cmp
pop
fs
mov
pop
pusha
test
and
out
pop
xor
jae
push
jle
cvttps2pi
cdq
mov
icebp
mov
mov
je
pop
popf
sub
ss
in
xchg
dec
fbld
popf
add
adc
or
lea
and
das
xchg
scas
sub
dec
mov
add
jl
fcomip
jmp
inc
out
loope
jge
cld
rol
call
rcl
fcmove
cmp
mov
mov
pop
dec
push
mov
jecxz
dec
pop
add
sbb
mov
stos
add
jns
loope
int
inc
out
dec
inc
add
jbe
daa
sbb
outs
out
daa
fimul
mov
push
adc
test
std
ins
popf
dec
adc
adc
sbb
xor
lods
jmp
adc
ret
lock
xchg
fild
movs
lock
gs
scas
test
test
jb
jns
mov
out
pop
or
ds
popf
mov
cmps
xor
(bad)
mov
fchs
mov
xchg
jmp
mov
xor
push
hlt
mov
adc
sbb
pop
push
mul
or
les
sub
or
push
lods
loopne
fbld
push
mov
jae
push
pop
movs
test
mov
cmp
dec
push
push
mov
sub
(bad)
scas
pop
push
pusha
out
pop
sub
in
cwde
out
cdq
inc
retf
cmp
daa
ds
out
dec
sti
mov
aad
dec
ret
scas
imul
retf
lods
adc
mov
xchg
jns
imul
dec
jmp
sub
add
and
xor
push
enter
add
mov
(bad)
shl
mov
stc
or
repnz
cmp
loop
cli
cmp
mov
js
mov
repz
stos
retf
aaa
add
pop
pushf
ins
xchg
dec
pop
fnstenv
jge
xchg
sbb
imul
and
sbb
jns
pop
push
and
jae
test
mov
lds
push
sub
inc
jg
cmp
aam
mov
sbb
or
xor
out
call
inc
push
jne
jne
mov
adc
gs
pop
or
mov
inc
ss
xchg
dec
sahf
cmps
inc
nop
in
outs
cmp
xlat
sub
adc
pop
fld
call
adc
jmp
repnz
cs
std
fdivrp
cmp
in
imul
sub
or
je
dec
push
in
push
call
std
out
xchg
mov
das
push
leave
xchg
fistp
retf
leave
into
mov
leave
jle
mov
mov
xchg
pop
aaa
mov
int
popf
in
bt
fbstp
lods
sub
adc
in
ins
sbb
push
push
mov
fs
imul
repnz
dec
adc
jae
call
mov
cmp
pusha
sub
cmp
fst
pushf
arpl
adc
and
ins
cwde
sbb
add
pop
into
sbb
dec
test
ror
sub
dec
push
outs
mov
(bad)
out
dec
jle
js
xchg
adc
fiadd
and
lahf
rcr
sbb
xchg
jp
aaa
mov
fcomp
out
loop
push
adc
sbb
cmp
sub
push
(bad)
mov
out
jb
cmp
call
js
cmps
loope
mov
push
and
push
dec
mov
xchg
add
mov
jmp
sti
scas
data16
ss
add
(bad)
pop
sbb
xor
push
mov
enter
mov
das
pushw
not
repnz
lock
lods
or
push
in
adc
adc
mov
push
or
test
adc
pusha
xchg
ret
adc
push
lock
add
and
xchg
push
or
add
adc
retf
scas
sub
and
loop
mov
les
bound
fadd
mov
lods
test
mov
ins
sub
push
mov
popa
push
ret
pop
or
fs
add
adc
test
sub
add
dec
ret
adc
xor
dec
add
test
and
add
jns
mov
popa
jb
dec
cs
pop
dec
jmp
cmp
xchg
addr16
cli
jmp
stos
int
push
push
inc
imul
dec
xchg
add
outs
add
lock
cmps
pop
(bad)
jmp
fstp
pop
outs
gs
jg
jmp
aad
arpl
cmps
xchg
call
sub
inc
in
mov
sub
push
inc
out
add
push
lods
adc
retf
add
push
inc
loop
leave
ds
aad
mov
add
rol
aad
rol
push
adc
call
in
addr16
into
push
test
inc
cld
rcl
push
push
cmc
add
inc
(bad)
rol
add
pushf
test
arpl
xchg
outs
shr
jb
(bad)
mov
cmp
lds
loope
mov
xor
retf
fild
mov
jge
xchg
sub
jnp
mov
adc
ds
cmp
push
xchg
jbe
mov
movs
movs
jmp
xchg
es
out
sar
test
test
push
mov
movs
into
(bad)
push
js
outs
sar
clc
inc
add
call
leave
mov
aas
(bad)
je
pop
pop
(bad)
test
outs
sar
adc
stos
jg
sar
(bad)
hlt
test
call
loope
inc
out
nop
je
jmp
pop
add
test
inc
xor
das
rcl
dec
push
(bad)
aad
push
hlt
adc
es
cmp
pop
in
push
or
dec
xor
or
inc
pop
bound
mov
jo
add
jg
dec
push
arpl
inc
adc
popa
dec
test
sbb
lock
call
(bad)
in
push
pop
arpl
fidivr
rol
shr
fiadd
adc
or
(bad)
in
nop
xchg
or
mov
test
out
xor
(bad)
daa
push
gs
jg
mov
out
cmp
cs
mov
ins
das
adc
shl
sub
in
imul
int3
dec
inc
aam
adc
add
and
jns
out
in
sbb
add
jo
loope
mov
and
xor
test
sahf
push
test
adc
test
adc
mov
movs
add
inc
mov
push
leave
xchg
movs
int
dec
xor
test
push
cld
bound
mov
out
add
xchg
jae
retf
and
push
mov
pop
sub
jp
addr16
fisttp
loopne
mov
adc
cwde
mov
push
sub
sbb
popa
pop
inc
xchg
adc
add
sub
jb
or
add
int
cmps
xchg
test
les
mov
inc
in
sub
xor
cmps
xchg
mov
aam
adc
mov
sbb
xchg
shl
nop
lods
pop
dec
pop
dec
ror
pop
add
push
pop
sub
clc
sahf
jbe
add
inc
mov
jge
xchg
mov
or
ret
in
cld
lock
sbb
imul
jge
xchg
(bad)
pop
cmp
aam
jne
and
mov
shl
pushf
or
sar
nop
cmp
retf
sub
(bad)
mov
ja
outs
mov
mov
ins
fdivr
adc
pop
or
enter
pop
lock
xchg
outs
add
fmul
shr
inc
mov
sbb
(bad)
(bad)
mov
jmp
idiv
inc
lds
mov
sub
add
mov
popa
push
xor
push
xchg
jge
nop
mov
dec
mov
mov
rol
jne
jns
lds
stc
adc
pop
rol
dec
hlt
jb
inc
xlat
jo
jl
mov
jmp
shl
mov
fcomp
jb
push
mov
imul
push
and
stos
cld
fcmovbe
out
call
xor
dec
pusha
add
outs
stos
or
loop
jg
call
fisubr
scas
retf
add
add
ret
(bad)
or
loope
sub
leave
sub
sbb
pop
push
sub
adc
aam
mov
retf
int
dec
mov
ja
mov
push
icebp
in
jg
les
popa
pop
ret
das
pop
in
and
mov
add
push
test
dec
(bad)
test
call
aas
movs
imul
sub
inc
loope
xchg
ja
ins
push
in
dec
jno
dec
sub
mov
xor
cmps
dec
cmp
pop
ins
mov
jo
or
shl
fbstp
call
add
pop
cmp
test
loopne
retf
ins
xchg
out
(bad)
fisttp
xchg
lds
lods
jno
shl
outs
rol
cvtps2pd
stos
jmp
sbb
adc
push
xchg
inc
xor
sub
or
push
pop
lea
mov
in
pop
mov
inc
ds
movs
push
jg
pop
aad
xlat
std
sti
leave
(bad)
xchg
cmp
sti
inc
ins
add
xor
lock
pop
pcmpeqd
jl
jge
mov
in
mov
rcr
and
mov
or
stos
jmp
cmc
xchg
iret
mov
fwait
adc
mov
pop
call
mov
enter
arpl
pop
cs
fwait
call
jae
sub
mov
idiv
jns
test
adc
cmp
mov
fwait
(bad)
jmp
adc
call
call
js
push
clc
pop
xor
push
push
mov
repnz
lds
test
dec
xchg
xchg
(bad)
add
mov
xchg
stos
aaa
xchg
cmp
cmp
stos
and
push
jge
or
ret
fisubr
ss
ret
stos
retf
mov
dec
stos
mov
repnz
dec
or
mov
dec
pop
cmp
sbb
inc
push
shl
mov
mov
mov
(bad)
js
push
xor
outs
sbb
cwde
ror
enter
ds
jne
inc
mov
pop
test
mov
dec
mov
arpl
sar
(bad)
mov
xchg
rol
das
and
dec
push
push
mov
jno
xchg
cmp
cdq
jg
adc
mov
cwde
loop
push
xor
add
mov
test
fidivr
in
retf
mov
or
mov
scas
and
pusha
inc
mov
out
mov
and
jbe
jne
cdq
out
imul
push
mov
cmp
call
mov
popf
mov
add
je
or
fsubp
inc
xchg
sub
add
mov
(bad)
ins
test
pop
xlat
test
mov
adc
sbb
inc
and
mov
fidiv
mov
jbe
sub
jmp
push
sub
or
(bad)
js
scas
pop
lock
(bad)
dec
je
movs
jl
dec
or
ret
adc
or
aas
retf
mov
jg
dec
pop
jg
push
leave
cmp
or
pushf
cmp
push
push
stos
(bad)
sub
inc
and
fsqrt
fdiv
add
add
(bad)
mov
fstp
jo
xlat
rol
inc
(bad)
retf
inc
dec
add
inc
mov
xor
hlt
xchg
mov
pusha
pop
mov
mul
out
xchg
xchg
xchg
mov
jg
jl
adc
lods
in
pop
cs
sbb
mov
push
outs
add
les
shl
enter
inc
or
fsub
test
and
shl
mul
mov
pop
ret
xor
mov
sub
add
xlat
and
cmps
mov
lea
push
repnz
(bad)
xor
sti
pop
into
sbb
adc
xchg
int3
or
sub
and
adc
inc
gs
lock
scas
ja
mov
push
ins
jecxz
into
adc
xchg
push
mul
push
adc
out
push
std
bound
retf
xchg
xchg
mov
ret
les
repz
push
or
xor
dec
leave
add
mov
jmp
ret
xor
popf
outs
cmp
scas
mov
imul
sti
xchg
in
nop
push
and
in
clc
lods
fstp
add
jo
stos
(bad)
cwde
data16
jne
call
push
je
pop
or
sub
in
nop
aam
push
mov
fmul
nop
clc
and
add
mov
mov
nop
sbb
hlt
cmp
lock
(bad)
jg
xchg
push
mov
cmps
bound
and
add
cmp
fs
mov
jecxz
std
inc
ins
cmp
cmp
pusha
dec
xor
push
adc
test
ret
lods
sub
mov
inc
int
rcl
outs
(bad)
jo
add
inc
push
xchg
ins
mov
pop
add
mov
(bad)
clc
pop
xlat
push
sub
stos
mov
test
cwde
nop
push
stc
lds
mov
shl
mov
in
dec
mov
dec
je
adc
sbb
pop
pop
test
mov
outs
mov
push
jae
mov
in
(bad)
cdq
popa
test
pushf
fistp
std
rcl
inc
push
pushf
dec
mov
or
mov
pop
cmps
push
push
xchg
xchg
jns
mov
js
(bad)
pop
push
aaa
jl
mov
clc
dec
mov
or
les
rol
xchg
hlt
mov
std
lods
repnz
gs
lods
sub
stos
push
sbb
sti
push
jmp
xor
push
enter
xchg
rcr
push
dec
push
or
adc
add
pushf
in
adc
mul
xchg
lea
ret
jmp
cld
xor
ins
pop
jg
(bad)
(bad)
(bad)
sbb
call
push
mov
in
cld
popf
das
loope
mov
push
scas
and
mov
pop
xlat
xchg
rcl
and
fnstenv
adc
test
into
push
inc
test
data16
push
in
pop
xchg
fisub
mov
mov
int
(bad)
out
bts
jno
in
inc
lahf
jge
jne
cwde
jno
adc
pop
inc
sub
add
out
imul
or
xchg
ds
jb
push
jnp
push
je
loop
jne
cmp
sbb
sbb
in
adc
mov
jnp
hlt
(bad)
dec
imul
in
jmp
mov
aaa
sti
and
addr16
adc
dec
sbb
jbe
mov
ss
cmp
add
scas
retf
mov
xor
sbb
dec
cli
xchg
in
mov
mov
cwde
sub
mov
jne
sub
dec
inc
nop
enter
xchg
sar
popf
je
push
je
fbld
retf
in
add
cmc
stos
pushf
cs
fcom
fs
inc
sbb
loope
es
fmul
and
xor
mov
shl
rol
retf
jno
imul
int
add
mov
jmp
inc
ds
dec
jmp
pop
xchg
scas
push
rcl
(bad)
mov
sub
fiadd
fstp
outs
adc
addr16
jl
mov
popf
jae
inc
in
pop
retf
pop
dec
push
out
mov
push
in
scas
cld
mov
cmp
imul
pusha
xor
push
jae
inc
pop
xchg
adc
or
daa
shl
js
pop
mov
(bad)
loopne
xchg
ret
arpl
pop
int
out
mov
xor
imul
aad
out
inc
aas
neg
mov
or
fwait
das
cld
push
inc
(bad)
inc
push
or
add
pusha
pop
dec
jo
dec
mov
call
js
(bad)
test
in
push
test
jp
inc
mov
push
int3
and
xor
sbb
xor
push
enter
dec
sbb
sub
dec
pop
cmp
cli
mov
je
mov
ins
cli
mov
ds
xlat
(bad)
loopne
cmp
and
dec
mov
sub
xchg
push
or
inc
mov
repz
add
xchg
pop
inc
rol
dec
push
dec
pop
fucomp
cmp
mov
mov
ins
or
and
es
clc
mov
add
sub
dec
jle
sahf
lea
add
stc
in
xchg
jne
xor
cmps
in
push
call
cmpxchg
(bad)
stc
(bad)
sti
outs
pop
addr16
push
mov
push
dec
xchg
popa
push
ss
test
or
call
xor
aas
mov
test
pop
nop
stos
xor
jo
add
jo
pushf
cli
cmps
movs
pop
inc
push
lods
je
adc
in
pop
jg
pop
xchg
mov
or
jns
inc
iret
addr16
sub
loop
(bad)
dec
lock
adc
mov
adc
cmp
retf
mov
fst
bound
lahf
dec
in
and
sbb
out
sub
mov
mov
pop
(bad)
aam
add
repz
aaa
int
test
adc
dec
mov
mov
adc
repnz
loop
ins
pop
adc
or
inc
ins
in
or
aas
add
mov
dec
and
inc
xor
mov
dec
aas
adc
aam
outs
in
daa
mov
lods
pop
out
retf
test
ret
and
sbb
popa
inc
fisttp
add
pop
push
sbb
xchg
jns
idiv
int
pop
js
add
in
cmp
je
lock
mov
ss
pop
sbb
pop
enter
stc
mov
adc
mov
inc
inc
add
inc
and
dec
iret
lock
sub
mov
xor
push
(bad)
scas
adc
and
loopne
mov
xchg
repnz
pop
xchg
dec
jecxz
clc
cmps
adc
cmps
cwde
cmps
cdq
dec
or
stos
xchg
jmp
pop
push
cld
push
mov
push
or
push
jg
push
(bad)
inc
addr16
sbb
pop
(bad)
fnstenv
fdivr
cmp
jmp
ret
mov
sub
sti
(bad)
fwait
loopne
sbb
and
rcl
adc
sbb
shl
sub
(bad)
imul
mov
mov
pushfw
cmps
ret
pusha
xlat
push
test
mov
dec
add
xchg
dec
popf
addr16
and
dec
xlat
rcl
cmp
cmp
mov
retf
push
out
and
call
inc
ins
iret
js
jmp
int3
mov
test
in
sbb
shl
stos
out
pop
cmps
dec
mov
dec
inc
dec
jo
iret
sahf
mov
cli
leave
ss
stos
cmp
fisub
loopne
sar
movs
das
js
push
push
bound
in
xchg
jbe
adc
iret
push
xor
dec
aam
xor
rcr
outs
push
loopne
test
fimul
cwde
add
cmps
mov
repz
outs
xor
lahf
in
je
mov
mov
mov
push
xor
ja
pushf
fbld
sbb
cmp
stos
fcomp
(bad)
fxch
jns
sbb
aaa
adc
fwait
inc
scas
mov
stos
dec
std
push
mov
adc
cs
daa
pusha
sbb
mov
popa
mov
mov
sub
cmp
jge
mov
shl
cmp
or
es
sbb
sub
std
lods
pusha
sbb
jmp
lds
cdq
pop
call
mov
sbb
repz
add
div
mov
mul
jp
push
daa
rcr
dec
mov
push
(bad)
xchg
lods
ds
cld
out
mov
mov
call
movs
ficomp
push
xor
stos
fwait
aas
pop
push
jnp
call
rol
or
cmp
mov
jl
dec
out
scas
aad
ficomp
jne
loopne
mov
in
outs
ins
pusha
adc
mov
ds
into
cmp
adc
push
sbb
imul
sub
ret
into
cmc
ds
mov
nop
les
mov
iret
xchg
ja
into
jns
mov
pop
or
and
add
jne
aam
loope
sub
add
xchg
shr
and
es
enter
cmps
sbb
mov
push
adc
or
rcr
inc
dec
ficomp
retf
imul
sar
inc
fld
cld
mov
cwde
mov
jae
push
fsubr
loopne
add
sub
xchg
div
xchg
cmp
dec
sbb
(bad)
ror
ret
ins
adc
lea
loopne
cdq
int3
ja
and
or
test
mov
add
mov
and
add
lods
xchg
push
sbb
jmp
jbe
cmps
enter
add
into
inc
repnz
mov
idiv
jp
push
push
xchg
in
dec
test
or
cmp
fwait
mov
ds
test
mov
pop
jle
mov
in
fcom
leave
dec
mov
in
or
mov
pop
jle
xchg
inc
push
mov
add
mov
arpl
adc
and
mov
retf
xlat
ret
pushf
es
adc
sbb
cmp
mov
inc
adc
(bad)
mov
adc
or
and
mov
push
jmp
adc
mov
fs
aam
sahf
xor
pop
sti
jno
add
idiv
movs
pop
std
sbb
mov
cs
je
jnp
test
sti
pushf
(bad)
outs
add
xlat
sub
je
mov
xchg
pop
pop
pushf
mov
sbb
jp
mov
cmps
push
mov
jno
push
jnp
test
xor
add
jmp
cmp
popf
mov
xchg
or
dec
inc
cli
inc
out
ins
or
pushf
mov
(bad)
fstp
call
or
and
ins
jns
cmp
mov
pop
push
mov
jg
jmp
lods
inc
out
(bad)
test
ins
jp
and
add
or
pop
adc
sbb
pop
scas
pop
call
(bad)
lock
dec
mov
std
stc
mov
sbb
inc
enter
and
push
mov
xchg
dec
dec
jae
jecxz
loopne
scas
xor
mov
aaa
ffree
xor
cmp
push
nop
sub
jmp
jbe
and
fstp
or
pop
fucomp
sbb
jns
adc
mov
aam
dec
and
jbe
mov
cs
hlt
pop
out
mov
inc
push
xchg
mov
mov
sub
rol
(bad)
sbb
add
sub
adc
idiv
or
xor
sbb
icebp
and
aam
push
arpl
sub
cmps
sbb
and
shl
repnz
int3
jmp
mov
pop
std
sbb
dec
dec
das
jmp
xchg
(bad)
jmp
push
jno
aad
cmp
cwde
pusha
fstp
shr
xchg
out
stos
fld
in
dec
imul
push
stos
daa
dec
aad
xchg
jge
lods
iret
jb
dec
jns
dec
mov
mov
jge
lock
mov
cmps
jmp
mov
mov
fst
stos
das
fisttp
in
js
mov
imul
mov
aaa
fs
sbb
xchg
mov
sbb
mov
adc
mov
mov
adc
push
out
out
pop
xchg
mov
(bad)
sar
in
pusha
loopne
mov
mov
inc
xor
jge
hlt
bound
cmp
hlt
push
ins
push
inc
dec
or
daa
cmp
(bad)
addr16
cmp
add
fldenv
pop
sbb
add
pop
je
imul
sub
cmc
iret
lock
inc
loopne
sbb
dec
dec
cmp
cmp
mov
gs
sti
stc
js
push
pushf
aaa
int3
inc
xchg
shl
int3
jl
pop
inc
arpl
lock
xchg
jle
jp
shl
ror
sub
or
pop
test
js
inc
push
into
test
std
cmps
fadd
sbb
jmp
shl
aas
sbb
jb
out
fistp
and
adc
or
add
or
sti
arpl
(bad)
mov
or
push
enter
lahf
stc
outs
test
mov
push
mov
ja
bound
into
lock
or
xchg
fwait
pop
add
retf
push
mov
sub
sbb
xchg
sub
das
inc
inc
inc
cld
push
es
(bad)
xchg
xchg
lds
jge
sbb
dec
sub
pusha
add
sbb
xchg
sti
push
imul
cmc
sbb
dec
cmc
out
in
jg
lock
into
shr
and
pop
push
and
add
je
outs
rol
add
pop
pop
adc
add
mov
or
rol
nop
cmp
add
int3
hlt
push
cmp
sbb
scas
add
ds
shl
repz
(bad)
cli
dec
add
push
add
scas
iret
shl
(bad)
sbb
lock
pop
sub
sub
push
and
cld
mov
pop
mov
mov
movs
cmp
inc
xchg
add
or
pop
shl
pop
jae
shl
jae
daa
pop
inc
jns
adc
addr16
ins
xchg
or
cvtdq2ps
(bad)
fwait
jle
pop
xor
shl
popf
inc
shl
fcmovnu
cs
adc
popf
pop
out
cmp
data16
popf
and
ins
fist
sub
pop
movs
pop
push
xchg
shl
pop
jb
mov
fld
leave
fldcw
jge
pop
data16
sub
jp
cmp
fs
jne
or
lods
ins
push
xchg
bound
sbb
xchg
outs
fiadd
lds
pop
fdiv
push
rol
fdivr
mov
(bad)
jbe
shr
lods
lods
or
shl
mov
jp
cwde
xchg
cmp
(bad)
bound
mov
sbb
(bad)
fisub
xchg
(bad)
xlat
xor
push
data16
xchg
(bad)
loope
ss
xor
hlt
inc
ss
(bad)
and
inc
xor
mov
dec
call
popf
xlat
push
adc
sahf
jo
lods
and
or
and
cmps
push
inc
pop
mov
fist
icebp
xchg
lods
cmc
xlat
(bad)
push
inc
(bad)
rcl
lods
cwde
mov
and
out
test
or
push
jns
push
add
ins
xor
out
(bad)
pop
dec
push
cmp
dec
xchg
jl
xchg
hlt
jle
inc
sub
nop
and
or
dec
add
mov
sbb
xchg
leave
test
mov
cmp
out
jge
and
aaa
bound
jecxz
xor
push
cmp
hlt
(bad)
fldz
arpl
gs
ret
in
push
adc
sbb
dec
sub
loopne
mov
aas
mov
test
test
shr
std
xor
cdq
int
inc
xchg
add
sub
xchg
dec
xchg
pop
loopne
pop
push
aad
mov
ins
mov
iret
icebp
add
cld
or
cmp
cdq
dec
pop
sti
not
inc
fistp
(bad)
fisttp
jg
adc
test
je
(bad)
addr16
adc
imul
aas
scas
fmul
adc
test
addr16
dec
xchg
add
out
ss
gs
or
sbb
sbb
test
shr
fnsave
fwait
jns
sbb
ficomp
mov
sbb
sbb
xor
push
dec
dec
ret
inc
int
scas
push
sbb
js
aaa
adc
call
mov
scas
or
pusha
fs
out
adc
dec
dec
sub
shl
or
adc
jns
movaps
add
nop
inc
mov
int
xor
fwait
and
inc
inc
mov
pop
outs
mov
xor
movs
std
fiadd
addr16
jae
jae
stc
cmps
sub
out
mov
xchg
cmp
test
ss
sub
mov
jl
not
cdq
in
inc
sub
pop
push
clc
das
xor
call
hlt
loop
daa
or
test
mov
sub
mov
adc
repnz
adc
mov
enter
movs
cdq
stos
sub
ins
stos
leave
jno
fadd
xchg
cmp
(bad)
sti
push
add
add
add
push
mov
xor
int3
or
jmp
lds
mov
repz
mov
cmps
push
xchg
fisub
push
and
cs
sbb
jmp
or
pop
mov
and
push
rcr
jmp
(bad)
push
pop
push
scas
cmp
aaa
bound
mov
sub
mov
xor
sub
sbb
sub
addr16
pop
xchg
test
es
pop
push
mov
or
imul
jnp
dec
fs
dec
push
push
fs
in
jb
xor
adc
mov
cli
int3
push
out
loope
fs
jecxz
mov
daa
hlt
dec
stc
cli
inc
and
pop
pop
std
retf
pop
dec
dec
and
jne
push
and
in
and
cs
dec
mov
and
fdiv
add
dec
cli
jne
mov
push
mov
xor
dec
jns
out
stc
mov
inc
out
addr16
imul
ins
xor
popf
jne
pop
jp
dec
loop
add
xchg
sub
add
scas
arpl
(bad)
in
mov
add
xchg
cmc
out
push
scas
sub
sbb
and
out
mov
movs
adc
xor
adc
loopne
adc
mov
into
arpl
in
(bad)
scas
cmp
repnz
sub
test
icebp
je
movs
inc
in
leave
sub
cmp
shl
mov
adc
jo
sub
leave
cmps
pop
pop
fwait
adc
pop
pushf
out
jmp
push
sbb
lods
or
or
cmp
sbb
neg
data16
imul
cmp
call
in
retf
xor
sub
jle
mov
pop
loope
cld
mov
push
xchg
fstp
hlt
mov
sub
xlat
sbb
in
das
jno
(bad)
repz
sbb
cmp
outs
ins
xlat
push
mov
pop
sti
aad
jno
pushf
imul
stc
iret
mov
adc
fnstenv
push
mov
ds
push
test
or
dec
jle
outs
pop
dec
sbb
sub
outs
dec
xchg
mov
ret
test
jnp
jns
push
mov
daa
mov
mov
nop
sbb
push
ins
out
inc
xor
pop
icebp
lahf
jle
in
mov
daa
ins
xor
scas
jmp
fnstenv
int
jp
cmp
push
push
fisub
inc
arpl
sar
leave
les
repnz
sbb
scas
dec
mov
adc
inc
push
sbb
cwde
cmps
add
fbstp
out
idiv
fs
xchg
mov
xor
pop
adc
add
lea
or
cmp
jnp
out
ins
(bad)
cmp
(bad)
stc
ret
push
xchg
mov
js
push
cmp
outs
jnp
cmc
jmp
gs
jns
xor
test
call
adc
jmp
pop
push
bnd
dec
ffreep
pop
daa
imul
ret
push
fiadd
imul
sbb
mov
mov
aas
sub
mov
xor
aam
and
loop
adc
scas
mov
(bad)
gs
mov
mov
int3
mov
mov
mov
mov
es
pop
xor
jo
int3
lea
imul
push
sahf
les
test
jecxz
mov
sbb
pop
xor
push
cmps
movups
fistp
pop
sti
out
rcl
ret
outs
les
xor
push
sbb
mov
enter
int
or
test
xor
js
sub
cmp
enter
mov
cs
ficomp
jmp
fisub
sbb
dec
xchg
(bad)
aad
cmp
add
ror
adc
ins
or
ret
fcomp
push
nop
rcl
lods
mov
pop
imul
mov
and
dec
rcl
xor
ficom
out
jmp
and
inc
and
mov
jp
aas
cmp
lock
mov
rol
enter
xchg
jmp
or
inc
xor
iret
xlat
xchg
lahf
cmps
jge
jle
mov
add
fimul
aam
xchg
(bad)
pop
pop
and
jb
mov
les
pop
cdq
jmp
jae
or
imul
pop
jmp
jno
jno
pusha
inc
cmc
lods
jne
stc
out
or
in
cmp
arpl
icebp
or
popa
clc
scas
out
adc
push
(bad)
fisttp
add
(bad)
es
mov
or
or
mov
mov
mov
popa
mov
or
push
sbb
xchg
sub
cmp
xchg
inc
jnp
cdq
nop
cmp
add
or
cmp
mov
xchg
or
and
push
outs
lock
mov
cmp
adc
in
imul
mov
sbb
mov
sub
fs
in
mov
gs
push
test
test
sub
shl
mov
leave
aam
inc
aam
int
in
xchg
add
int3
adc
xlat
retf
repnz
adc
xor
or
leave
in
cmps
xor
jl
xchg
xor
pop
jp
mov
push
call
pop
aas
(bad)
mov
cld
add
(bad)
and
inc
jmp
adc
mov
and
cmp
and
pop
mov
loopne
ret
pop
sar
arpl
xchg
xchg
pop
test
add
into
ins
xchg
scas
cmp
pop
adc
dec
and
pop
fcomp
aad
sub
(bad)
out
sub
jmp
data16
popa
je
inc
out
scas
lock
dec
pop
fisubr
int3
lock
mov
outs
push
das
mov
scas
fdivr
mov
mov
imul
(bad)
andnps
pop
shr
push
ins
jb
push
sahf
inc
sbb
mov
fist
popf
cmp
mov
ins
aad
icebp
push
mov
arpl
test
sahf
mov
push
loop
jmp
jb
and
scas
out
mov
inc
(bad)
imul
jmp
out
repz
sbb
push
rcl
sbb
xlat
sbb
iret
add
jle
inc
stc
push
mov
retf
jecxz
pop
mov
dec
jecxz
leave
arpl
xlat
ret
push
scas
adc
call
or
test
fwait
sbb
loopne
pop
in
mov
xor
sub
xor
jge
mov
add
sub
ja
jmp
add
sub
dec
rcr
cmp
jmp
xor
mov
pop
xchg
sub
mov
mov
xor
mov
mov
fdiv
mov
xor
mov
fsub
cmps
scas
icebp
sbb
mov
push
and
sub
les
leave
jge
out
jg
ss
inc
addr16
inc
popf
xchg
imul
or
clc
das
or
jb
icebp
pop
push
aaa
lock
stc
dec
test
push
cld
fwait
mov
xor
xchg
or
stc
inc
fsub
sub
fbld
jmp
pop
fwait
xchg
imul
mov
out
popa
gs
fcom
xchg
adc
xor
sar
ss
fs
xor
popa
xchg
xor
jne
jl
scas
loop
sub
mov
hlt
ror
and
mov
inc
adc
call
or
adc
fmul
mov
inc
int3
lods
xor
mov
pop
or
add
pop
pop
jle
mov
pop
pop
hlt
out
cmp
jp
dec
push
xchg
mov
xchg
js
movs
inc
xchg
push
ds
cmps
and
ror
or
ss
push
leave
jle
retf
add
mov
xlat
inc
(bad)
(bad)
push
bound
sahf
pop
inc
xor
sar
xchg
scas
pop
shl
pop
cs
mov
lahf
ds
outs
lahf
sbb
outs
jbe
popf
iret
shl
pop
cmp
add
ja
jbe
pop
call
adc
enter
(bad)
fld
loope
mov
pop
je
inc
repnz
(bad)
lds
mov
dec
nop
pop
adc
ror
fst
rcl
sbb
lds
test
sub
mov
leave
loope
shl
pusha
and
lods
movs
aaa
inc
mov
xor
(bad)
shl
xor
(bad)
fiadd
in
sbb
mov
inc
mov
fisubr
out
jecxz
xor
push
xchg
sbb
lahf
ror
das
ret
sub
sbb
xchg
push
adc
sti
fisttp
xor
add
lods
mov
das
adc
jle
add
inc
(bad)
ret
int3
adc
mov
(bad)
rol
push
je
sub
scas
mov
mov
pop
and
xchg
fistp
push
popa
jbe
mov
ins
xor
imul
retf
cwde
pop
vmovss
adc
sahf
xchg
jmp
jb
cmp
mov
mov
mov
xor
hlt
sbb
pop
in
getsec
xchg
ds
and
and
jecxz
dec
add
pusha
clc
adc
pop
pop
fs
and
aad
mov
imul
movs
lahf
or
cmp
push
(bad)
fst
sub
fsub
aam
fidiv
xchg
fcomp
jno
adc
push
cmp
dec
outs
mov
aaa
fs
mov
mov
fwait
mov
test
adc
sub
jbe
adc
outs
icebp
dec
and
cli
or
xchg
sar
inc
outs
mov
mov
mov
js
or
jno
jp
loopne
or
sbb
movs
(bad)
into
(bad)
jmp
mov
(bad)
jmp
push
mov
nop
xchg
popa
sub
fucomp
cmps
test
outs
adc
pop
inc
ss
or
mov
mov
clc
sbb
inc
in
jp
jb
xor
cmp
xlat
xor
retf
retf
es
fs
cmp
ja
jmp
pop
jns
out
nop
xchg
xor
(bad)
or
xor
sub
aam
test
test
push
xchg
scas
jbe
dec
icebp
repnz
jg
adc
ror
adc
scas
mov
cld
fs
pop
push
js
test
adc
test
pop
push
dec
jbe
rcl
dec
addr16
or
jle
cmc
sbb
loop
xor
cmp
dec
in
fcom
popf
dec
leave
aad
jl
jbe
cmc
lock
cmp
dec
int
inc
or
xchg
hlt
int
fwait
or
xchg
push
push
imul
mov
sbb
cmp
mul
fwait
pop
call
iret
lock
inc
push
jmp
add
mov
(bad)
leave
adc
jle
mov
pop
outs
xlat
pop
mov
mov
fwait
pop
mov
sbb
daa
cli
loope
aas
push
pop
pop
mov
push
add
mov
xrelease
bound
xchg
jbe
adc
cmps
jmp
iret
and
data16
rcl
ret
pop
pusha
mov
push
fdivr
popf
xchg
sub
cld
call
mov
xor
fcom
add
jnp
in
mov
(bad)
mov
pusha
mov
jg
fs
jg
fs
xor
popa
mov
in
out
pop
push
xchg
icebp
jecxz
jg
fidivr
and
sbb
dec
pop
inc
mov
mov
xor
sub
mov
pop
push
retf
jle
and
mov
stos
add
pop
sahf
xchg
mov
jp
adc
mov
(bad)
xchg
sub
fs
(bad)
ficom
jb
jmp
pop
(bad)
(bad)
jmp
mov
psrlq
mov
imul
retf
pop
rol
out
sti
push
fimul
inc
mov
jns
je
adc
dec
lock
adc
dec
stos
daa
and
dec
(bad)
xor
call
stos
push
mov
popa
out
pmullw
adc
jmp
pop
test
mov
fsub
lods
and
bound
fidivr
(bad)
cld
mov
movs
add
stos
adc
test
out
out
imul
out
cwde
lock
xchg
icebp
pop
stos
pop
mov
retf
mov
sti
stc
in
ret
inc
dec
pop
sub
jge
jmp
sub
mov
sub
push
xchg
es
pop
mov
cmp
clc
int3
jae
dec
stos
adc
mov
mov
or
fcmovnu
fs
xchg
not
dec
xchg
sbb
loopne
add
ror
aaa
and
xor
pop
xor
mov
sub
call
nop
cli
sbb
movs
sub
jecxz
add
popa
cld
jnp
sub
popa
pop
sti
int
dec
mov
jae
pop
push
fisubr
jo
in
mov
xor
addr16
pop
adc
hlt
sub
pop
inc
and
addr16
or
stos
mov
std
ja
outs
shr
xchg
enter
cmp
xchg
push
es
xor
add
popa
aaa
retf
leave
xor
dec
cmps
in
(bad)
pop
push
or
loop
leave
inc
enter
lea
mov
sbb
jno
addr16
mov
test
mov
fisttp
out
pop
pop
and
enter
stos
neg
lds
es
mov
add
sub
fs
in
adc
push
xor
adc
adc
cmp
fs
pop
sbb
leave
mov
ror
int3
lahf
mov
scas
jo
mov
mov
dec
sbb
stos
jp
popa
ret
mov
cmp
not
sar
sub
sar
stos
and
push
inc
sbb
mov
fisub
out
pop
movs
repnz
inc
in
movs
dec
jmp
add
pop
xor
outs
pop
imul
inc
in
lock
xor
xor
movs
sub
jbe
addr16
jge
loope
adc
ret
bound
add
test
nop
movs
(bad)
lahf
or
sub
push
in
(bad)
lods
mov
add
enter
aad
lock
lods
inc
repz
sub
mov
jmp
fs
cmp
outs
test
adc
sbb
xor
gs
test
or
int3
xchg
popf
pop
stc
mov
hlt
fbstp
cli
xchg
les
ins
test
gs
in
cmps
push
hlt
xchg
add
ret
pop
lods
pop
je
xchg
sbb
nop
mov
inc
cmp
pop
ret
push
jo
mov
dec
mov
and
xchg
lahf
dec
mov
xchg
lods
mov
lods
jae
scas
sbb
xlat
fdiv
dec
int
int
push
push
(bad)
cmp
adc
(bad)
jle
ret
(bad)
aaa
mov
loop
push
fmul
adc
div
cmp
(bad)
in
xchg
cmps
es
lods
jg
pop
leave
lds
fsubr
hlt
jecxz
push
push
add
mov
lea
aam
push
mul
and
fldcw
jnp
ret
fisubr
cmps
ret
repz
jl
dec
fadd
cmp
aad
rcl
inc
jmp
enter
ins
jae
ror
pop
les
or
fcomip
(bad)
mov
xchg
call
pop
fmul
and
retf
xchg
pop
pop
call
pushf
jmp
dec
(bad)
pop
push
or
(bad)
(bad)
jb
jp
jne
xchg
inc
loop
jge
lods
stos
mov
inc
sbb
call
add
mov
mov
ins
aam
ret
mov
mov
jl
test
and
pop
cmp
mov
mov
jmp
pusha
dec
or
jle
je
retf
jbe
push
cs
dec
dec
fwait
ret
dec
jno
xor
push
lea
cmp
jb
pop
jp
js
call
imul
iret
xchg
fwait
inc
pop
mov
mov
cwde
xor
lock
in
ss
setae
jmp
fwait
jne
test
dec
icebp
daa
add
or
int3
mov
fisubr
mov
jge
mov
mov
es
cmp
or
(bad)
sub
push
jnp
mov
pop
xor
ror
push
xor
jo
adc
shr
into
cmp
fild
loopne
sbb
pop
xor
in
jbe
inc
cmp
jb
(bad)
sub
fldenv
into
jno
ret
test
scas
push
shl
or
push
arpl
add
fcom
shufps
mov
fld
add
adc
add
iret
(bad)
sti
and
dec
lods
cmp
std
pushf
adc
pop
add
xchg
fwait
mov
iret
out
push
fidivr
in
cs
outs
(bad)
sti
stos
inc
iret
inc
ins
pushf
inc
sti
or
cmp
mov
jp
adc
push
iret
je
mov
and
xchg
add
xor
cmp
mov
jecxz
jge
push
and
sub
cmp
jne
inc
out
mov
mov
sbb
cmp
pop
pushf
inc
fxam
xor
lock
pop
mov
retf
cdq
fdiv
int3
shl
jnp
in
cmovl
fbld
mov
movs
xchg
rol
test
jbe
adc
mov
in
and
push
sub
adc
and
xchg
dec
test
push
call
sub
cmps
aaa
sub
lods
lock
jge
dec
adc
pushf
inc
lea
pop
inc
mov
movs
fcomp
or
xchg
mov
adc
add
add
xchg
(bad)
fimul
test
mov
jo
(bad)
jl
jne
mov
fwait
movs
in
loopne
and
inc
mov
xchg
js
xchg
ja
or
cld
stos
pop
mov
ins
inc
pop
je
outs
call
sbb
retf
and
add
in
call
mov
or
sub
cmc
sub
jnp
loop
jnp
fs
std
mov
clc
push
sub
in
fiadd
mov
(bad)
stos
sub
pop
call
mov
retf
loope
js
addr16
leave
fisttp
stc
lock
rcl
lds
clc
ret
mov
and
mov
in
imul
mov
pop
ds
loopne
loop
cdq
xor
stc
adc
mov
and
or
mov
arpl
test
push
push
into
cmp
jne
div
sbb
mov
inc
pop
xchg
inc
call
add
shr
xor
add
inc
jne
mov
in
sysenter
cmps
mov
(bad)
mov
push
pushf
cmovp
pushf
and
push
retf
jmp
dec
jge
cmp
popa
mov
sbb
inc
fwait
xor
fnstenv
push
nop
ficom
pop
out
retf
fcomp
jb
xchg
dec
dec
mov
inc
pushf
mov
or
mov
(bad)
ret
mov
pop
mov
sub
xor
pop
nop
sub
sub
mov
sub
pop
xor
rcl
jg
ficomp
stc
and
cmp
sbb
push
jecxz
jecxz
mov
test
enter
cli
sbb
push
aas
jb
test
mov
aaa
pcmpgtb
jmp
shl
scas
sub
popa
cmps
movs
xor
pop
sub
add
repz
stos
mov
add
fistp
cmp
or
ss
daa
(bad)
jbe
out
push
cmp
jne
loop
inc
sahf
jo
push
adc
push
cmp
jae
dec
retf
mov
cmp
icebp
leave
mov
add
cmp
and
push
xor
sub
sub
(bad)
scas
xchg
nop
jl
sub
int
ins
dec
pop
pusha
rol
jae
movs
dec
loop
push
dec
mov
dec
sbb
movs
or
dec
sub
test
dec
aaa
xlat
stos
add
or
mov
pop
mov
push
xchg
pop
call
cmps
dec
ja
inc
adc
inc
jno
sub
psubd
or
add
xor
jo
mov
pop
(bad)
movs
les
mov
sub
sbb
adc
inc
xor
or
adc
cmp
jle
cmp
in
stos
pop
dec
cmp
push
push
(bad)
repnz
rcr
mov
xor
mov
clc
enter
fwait
in
outs
addr16
xor
(bad)
fidiv
dec
xchg
ins
push
(bad)
sbb
and
pop
call
jmp
imul
call
(bad)
hlt
mov
xor
aaa
cs
in
out
jecxz
mov
loop
cdq
adc
pop
shl
mov
push
push
cmp
mov
loop
inc
jne
and
daa
(bad)
cmp
xchg
in
and
sub
sbb
pop
jmp
scas
cmp
dec
adc
mov
jno
mov
sti
mov
jl
imul
jns
jmp
mov
sub
mov
push
jle
jb
sbb
pop
pop
lds
das
test
ss
ins
rcr
mov
or
cmp
adc
xchg
jmpw
sub
retf
loopne
or
adc
in
out
cmp
and
mov
iret
inc
lock
ja
dec
mov
fisubr
pop
aad
pop
(bad)
aas
sbb
cld
imul
dec
(bad)
lahf
lea
sbb
cld
imul
jg
