nop
test
add
add
add
add
add
add
add
add
pop
add
push
jg
mov
xor
mov
xor
and
xor
xchg
adc
std
outs
fisub
mov
js
push
fwait
and
leave
fucom
ror
xor
ds
inc
and
imul
mov
in
fbstp
popa
or
cmp
jae
call
loope
pop
adc
sbb
mov
sar
in
dec
inc
mov
scas
gs
xchg
ja
mov
or
dec
xchg
int
jge
in
xor
sbb
add
dec
jp
cmps
jo
sbb
push
sti
or
sbb
mov
pusha
jmp
adc
fsubr
mov
ror
test
loopne
push
loopne
mov
mul
(bad)
in
xchg
and
sar
and
mov
or
scas
or
push
scas
fwait
and
scas
mov
cld
or
push
retf
mov
jmp
rol
pusha
cmp
retf
pop
xor
mov
fld
lahf
ffree
pop
and
lds
mov
push
out
adc
ror
movs
inc
inc
test
dec
sti
add
lahf
dec
out
sub
retf
adc
loopne
fimul
fcmovu
pop
lods
jns
pmaddwd
fisub
sbb
std
or
mov
xchg
test
repnz
jb
mov
imul
(bad)
(bad)
jmp
cmp
retf
sahf
mov
jmp
sub
in
cld
jb
movs
pop
ret
inc
ins
faddp
jle
jnp
inc
jmp
repnz
jb
inc
(bad)
inc
enter
mov
addr16
mov
pop
popf
nop
push
retf
or
int
inc
dec
dec
(bad)
sti
aam
mov
je
jae
xchg
cwde
or
jno
cld
(bad)
call
dec
add
sub
sub
sbb
xor
dec
popf
call
mov
movs
stos
mov
xchg
push
sub
push
inc
cmp
dec
stos
ins
out
jmp
jmp
enter
(bad)
repnz
mov
xor
xchg
mov
sbb
push
or
push
inc
xor
push
inc
movs
rol
in
and
mov
ficomp
xchg
shl
outs
fcom
xor
jmp
inc
pop
pop
and
aaa
bound
in
aas
imul
in
push
jbe
jae
push
imul
and
xchg
test
inc
int
or
add
inc
pop
pop
fadd
retf
lock
lods
xor
jge
aad
push
adc
stos
ret
sub
and
clc
push
aaa
repnz
movs
xor
jmp
xchg
push
sbb
stc
or
mov
dec
mov
fsub
imul
sbb
bound
adc
in
jns
pop
lods
jno
pop
mov
jl
dec
pushf
pop
retf
mov
cmp
inc
jmp
fild
pop
pop
jge
sbb
fcmovbe
loope
loope
fisttp
mov
(bad)
sub
xchg
xchg
fmul
psrad
cmp
mul
rcr
inc
int
loope
popf
jne
aaa
es
cmc
aad
lock
xchg
mov
xor
pop
or
lock
movs
sahf
mov
inc
sbb
rcr
add
sbb
mov
jl
pop
ret
or
push
cmp
call
mov
push
cwde
ficomp
pop
sbb
or
sbb
int3
mov
pop
add
adc
sbb
cmp
adc
mov
and
inc
(bad)
movs
push
imul
pop
push
adc
mov
push
ret
rcr
or
inc
aam
imul
enter
and
divps
aas
and
add
div
cmp
(bad)
out
cmps
cs
in
mov
add
sub
mov
push
mov
pop
and
mov
dec
or
mov
and
into
iret
mov
dec
or
and
ins
enter
out
cmp
cmp
mov
sbb
loopne
adc
aaa
dec
jbe
in
xor
adc
cwde
mov
push
ror
mov
outs
call
adc
imul
loopne
push
jle
iret
cld
leave
stos
sub
das
mov
dec
push
dec
xchg
popa
aad
(bad)
jnp
clc
rcr
xbegin
stos
fcom
sub
pop
push
mov
sub
ret
pop
mov
xchg
test
adc
mov
or
pusha
dec
fbld
mov
xor
inc
fs
push
inc
iret
dec
test
dec
xor
push
movs
mov
iret
pop
je
dec
(bad)
inc
sbb
nop
cs
stc
cmp
or
mov
in
mov
add
fist
ins
push
jg
add
dec
xor
mov
out
pusha
push
and
jge
retf
mov
mov
xchg
cld
or
cmc
push
push
mov
cmp
sti
mov
jmp
es
sbb
pop
outs
(bad)
stc
popa
sub
mov
dec
and
stc
cmp
jmp
mov
and
mov
mov
arpl
xor
pop
loop
outs
or
or
test
repnz
das
rol
mov
ret
push
lds
pop
ins
pop
mov
out
fbld
jl
jae
sub
push
shl
dec
iret
mov
nop
into
ins
add
mov
pop
mov
adc
inc
or
push
cmps
mov
fdiv
retw
mov
scas
push
jg
ror
adc
pop
in
sbb
hlt
cmp
test
imul
mov
cwde
sbb
outs
int
lds
xchg
sar
mul
fstp
daa
pop
sbb
loop
or
cwde
mov
loope
push
scas
pop
adc
sub
je
pop
pop
jg
dec
mov
inc
and
test
mov
scas
mov
xchg
mov
call
sub
fsubr
les
rcl
adc
lods
div
fwait
push
and
inc
lods
jmp
(bad)
push
cmp
add
jno
fs
pop
mov
xchg
push
cmp
popf
push
cmps
fs
xor
push
push
dec
adc
bound
(bad)
out
bound
repnz
and
mov
mov
and
into
stos
sbb
fwait
pusha
xchg
shl
mov
cmp
retf
dec
out
jae
daa
(bad)
ror
dec
inc
xchg
mov
xor
jg
adc
push
xor
xor
(bad)
push
loope
xchg
push
out
test
adc
add
and
nop
mov
fild
cmp
jae
add
or
sysexit
xor
and
imul
out
rol
frstor
mov
adc
dec
xchg
aaa
fnstenv
mov
xchg
xor
jecxz
fmulp
aam
inc
add
jge
jae
pop
xor
ret
pop
and
or
add
out
fistp
ret
sbb
in
loop
outs
ins
dec
data16
fucomi
(bad)
repz
jl
mov
inc
push
mov
mov
sbb
mov
arpl
push
xor
enter
mov
popa
(bad)
jno
sti
into
sub
adc
pop
call
xlat
push
(bad)
fwait
sub
pushf
(bad)
in
push
bound
mov
sbb
pusha
xchg
and
scas
or
dec
push
outs
add
das
sbb
or
sub
aas
and
xchg
or
sub
dec
xor
cld
pop
sbb
shr
(bad)
cmp
or
int3
lahf
fidivr
xchg
xor
mov
(bad)
call
sbb
(bad)
and
jns
test
pop
nop
xchg
aas
jbe
add
xor
retf
xor
mov
es
sub
pop
sbb
nop
idiv
or
add
mov
je
adc
je
int3
daa
aaa
lds
pusha
jmp
sbb
pop
stc
jle
xor
test
push
arpl
add
stos
xor
scas
lea
ror
enter
pop
jecxz
xchg
xlat
push
cdq
sbb
outs
retf
adc
cmps
xchg
xchg
(bad)
jle
jnp
mov
in
ficomp
ss
mov
cmp
cwde
repnz
or
add
(bad)
repnz
fistp
je
ror
ret
das
aaa
ret
cmps
les
xor
and
bound
mov
data16
xor
push
icebp
cmps
jmp
jnp
sbb
add
add
ja
mov
repz
div
push
mov
imul
aam
into
movs
and
rol
loope
inc
and
or
das
xchg
push
out
mov
jle
mov
stos
xchg
push
(bad)
and
cmps
pusha
ret
cld
(bad)
add
dec
fdivp
in
cmp
loopne
cmps
fsub
mov
xor
pop
jg
test
inc
sbb
movs
loope
xor
popf
cmp
or
dec
(bad)
dec
mov
xchg
cmp
mov
jp
dec
xlat
(bad)
pop
lods
jne
add
jne
lock
dec
arpl
and
mov
outs
fs
mov
leave
repz
or
sub
sar
mov
sub
nop
xchg
add
push
jp
jmp
xchg
inc
clc
loop
aas
mov
pusha
out
mov
jg
fisub
fwait
bound
hlt
clc
jl
lock
(bad)
xchg
inc
out
mov
cs
push
and
adc
sar
mov
and
(bad)
std
nop
mov
sub
fist
bnd
push
repz
mov
ins
cld
mul
mov
xor
gs
jne
lock
arpl
sar
add
mov
data16
fdivr
mov
push
dec
xor
xor
test
test
sub
adc
mov
mov
xchg
pop
and
push
fsub
pushf
(bad)
pop
xchg
sub
icebp
jnp
and
out
sbb
scas
mov
inc
test
sub
mov
in
stos
inc
and
lahf
mov
call
aam
outs
stos
mov
in
mov
iret
pop
sbb
imul
xchg
jns
xor
lock
cmp
out
add
(bad)
mov
test
push
call
add
xchg
pop
je
jp
test
xor
and
inc
xchg
add
jbe
sbb
bnd
xchg
retf
push
cmp
nop
retf
push
dec
movs
es
inc
fwait
int
leave
jle
dec
mov
sbb
loope
ins
adc
jnp
call
test
push
aaa
xor
pop
sar
aas
jno
add
in
jne
outs
js
lock
pop
and
in
push
push
or
stc
out
adc
int
jo
(bad)
repz
pop
dec
xchg
out
enter
xchg
pop
out
(bad)
clc
pop
push
add
jecxz
adc
(bad)
aad
inc
sbb
arpl
add
dec
jle
sbb
jbe
cmovno
imul
push
sbb
outs
mov
aad
sbb
out
adc
add
movs
lock
sub
(bad)
push
inc
sar
out
push
dec
mov
stos
or
xchg
(bad)
jbe
fwait
xchg
cmp
sub
lds
and
aad
lods
push
pop
cmps
sub
std
mov
ds
add
in
call
repz
xchg
ins
js
mov
dec
sti
bound
mov
cli
pop
jp
adc
jge
jbe
add
push
push
inc
lea
pop
cmp
imul
icebp
cmp
dec
rcl
mov
cdq
movs
adc
iret
mov
xchg
pop
mov
jle
pop
mov
mov
mov
test
mov
push
adc
mov
(bad)
mov
sar
ss
jle
jbe
dec
cld
(bad)
mov
pop
pop
call
push
push
adc
dec
aam
cli
inc
jmp
movs
sbb
mov
mov
leave
push
sbb
inc
frstor
cmp
mov
lods
(bad)
call
jne
jbe
icebp
sub
sbb
pop
shl
jb
jl
pop
ins
(bad)
jb
jo
js
mov
mov
jae
xchg
enter
sar
or
leave
pop
stos
stc
mov
push
push
push
sub
sbb
retf
dec
mov
fimul
sbb
div
mov
es
cli
add
jg
mov
jl
inc
(bad)
aad
(bad)
in
and
in
xchg
cdq
lods
push
out
in
mov
push
adc
mov
xchg
rcr
sbb
mov
or
pop
mov
inc
aas
mov
stos
sbb
ins
push
xor
dec
mov
je
test
add
fild
dec
dec
test
cmc
cmp
in
dec
sbb
adc
mov
push
scas
fldenv
pop
repz
fisubr
cmp
pushf
ds
dec
(bad)
cmp
mov
sub
push
movs
in
ja
cld
mov
inc
adc
mov
(bad)
pop
xor
(bad)
cmp
adc
jo
xchg
adc
out
push
push
jmp
lock
xchg
lods
xor
xor
jge
lds
dec
jae
sbb
and
sub
push
mov
jge
push
in
cld
in
fcom
inc
daa
sbb
jg
push
jb
test
test
cwde
repnz
adc
hlt
test
pop
mov
loop
mov
call
mov
and
ins
outs
inc
xor
and
xchg
xchg
stos
or
pop
imul
int
int
adc
arpl
xor
or
jno
rcl
(bad)
movs
rcl
stos
retf
mov
popa
lods
push
bound
call
shl
xor
add
cdq
sbb
xchg
xchg
xchg
jle
pop
dec
test
inc
aas
shr
hlt
rcr
retf
js
xlat
mov
ret
test
xchg
inc
(bad)
lock
sbb
aam
add
add
mul
(bad)
cli
dec
jnp
aam
out
popa
(bad)
mov
fwait
push
or
and
stc
repz
xor
ret
push
imul
outs
pushf
mov
mov
jmp
imul
fstp
inc
scas
xor
mov
les
add
out
xor
imul
(bad)
inc
scas
iret
shl
test
mov
sub
movs
xchg
xor
(bad)
pop
loop
or
popa
mov
dec
js
jmp
add
lahf
add
inc
test
dec
adc
mov
sbb
push
xchg
sbb
inc
and
shl
lods
or
or
sbb
jmp
mov
pop
jl
dec
mov
push
cld
bound
push
mov
jae
pop
xchg
rcl
mov
gs
xchg
into
fld
mov
and
bnd
pop
sub
add
dec
ss
sti
mov
xchg
leave
mov
sub
or
jle
jae
mov
push
sbb
mov
sbb
cmp
bound
shl
aad
cmc
mov
add
cmp
movs
fst
push
sar
popa
push
dec
bound
adc
xor
repz
mov
jnp
ror
or
push
dec
scas
and
stos
push
mov
aas
lock
clc
sbb
mov
and
sbb
std
sar
out
fild
mov
push
push
imul
lahf
push
xor
movs
or
mov
imul
es
mov
xor
xlat
(bad)
cli
sub
out
adc
inc
push
pop
or
xchg
sahf
and
or
lods
xlat
inc
std
gs
push
adc
pop
aad
or
mov
ret
retf
cmps
push
sbb
ins
icebp
mov
test
mov
mov
shl
adc
and
mov
es
jmp
lds
into
push
sbb
ss
(bad)
jmp
cmp
push
or
pop
and
mov
sub
adc
mov
xchg
sbb
aaa
loopne
into
std
adc
jae
push
(bad)
call
mov
ret
dec
cmp
push
sbb
retf
ss
jo
jl
or
repz
xchg
(bad)
rcr
hlt
inc
fild
jae
dec
mov
mov
std
cmc
out
in
dec
sar
mov
mov
stos
add
push
or
mov
and
mov
int
rcl
mov
xlat
test
inc
mov
add
xor
fs
mov
dec
xchg
jbe
loopne
add
(bad)
call
(bad)
mov
dec
xor
ror
test
add
sbb
dec
sbb
movs
and
cld
xchg
ret
xchg
out
mov
add
pop
dec
je
outs
jb
xor
fimul
int3
mov
sbb
test
repnz
and
sbb
div
cmp
aad
fwait
add
mov
pushf
(bad)
cmps
or
and
mov
int3
cmp
mov
test
pusha
or
pop
sub
(bad)
push
sar
push
xchg
dec
add
ds
pop
xor
jo
stos
lahf
pop
mov
cmp
push
and
inc
cmps
ret
adc
dec
in
pop
popa
aas
mov
(bad)
jg
xchg
pop
pop
bound
cwde
add
repnz
scas
jl
ret
cmc
inc
push
sbb
xchg
fcomip
leave
outs
movs
(bad)
sti
push
outs
xchg
(bad)
mov
sub
sbb
push
jle
cmp
adc
test
scas
sub
stos
out
(bad)
lahf
add
xchg
cs
push
call
pushf
dec
and
mov
call
or
repnz
jbe
scas
in
sbb
pop
mov
mov
loopne
xor
retf
in
jmp
retf
jp
lock
push
aas
mov
inc
dec
dec
stos
fimul
mov
add
(bad)
mov
pop
lock
out
mov
fs
retf
loope
lock
rol
mov
and
mov
mov
push
lods
sar
jecxz
ret
in
xchg
xor
sub
xchg
mov
fimul
add
enter
fdiv
dec
and
out
or
cmp
pop
lods
cmp
push
sbb
mov
mov
add
loopne
retf
cmp
movs
rcl
or
jo
cmps
inc
out
pusha
cmp
push
push
jl
push
xchg
mov
push
mov
addr16
lock
call
pop
fcos
(bad)
shr
das
enter
nop
xchg
inc
aad
cmp
jmp
imul
fcomp
shr
cmp
stos
jnp
ins
stos
cmp
movs
adc
sub
push
mov
lock
mov
stos
cld
xchg
adc
mov
fimul
ds
cmp
ret
stos
xchg
adc
mov
in
ret
and
adc
in
sbb
imul
mov
mov
mov
pop
test
cli
jecxz
(bad)
mov
sub
call
add
cmp
jl
sub
mov
dec
jg
xor
adc
stos
mul
add
ins
xchg
mov
imul
xchg
push
push
dec
loop
mov
int
lds
js
ds
test
lods
lods
inc
pop
(bad)
scas
ror
dec
jnp
loope
jl
ins
mov
and
push
out
mov
xchg
ss
sbb
outs
xchg
int
out
adc
inc
dec
adc
loop
mov
pushf
and
aas
cmp
dec
xchg
jge
test
je
and
jp
rol
or
in
outs
scas
cmp
lods
pop
cdq
jnp
mov
jecxz
pushf
add
int3
je
pop
jl
xor
push
and
out
or
push
fwait
pop
call
jge
movs
(bad)
mov
and
xor
inc
dec
lods
inc
in
adc
or
sub
or
movs
movs
cmp
loope
dec
rol
test
fst
test
aam
retf
xchg
sbb
(bad)
outs
not
jmp
cmps
imul
adc
das
(bad)
jne
loopne
add
mov
adc
stc
mov
push
movs
and
dec
sub
xor
pop
ret
scas
and
loop
jle
push
jmp
movs
add
arpl
jb
pushf
dec
mov
pop
les
mov
hlt
push
sti
xor
mov
push
ss
fnstsw
or
push
idiv
xor
lahf
imul
enter
ins
bound
push
hlt
outs
fsub
sbb
aaa
lds
mul
rcr
es
push
arpl
mov
mov
fist
push
std
call
dec
adc
xor
mov
bound
mov
inc
out
test
loope
cld
gs
ret
scas
xchg
popf
test
jecxz
sub
push
fneni(8087
push
psubusw
cmc
ins
xchg
data16
pushf
js
mov
inc
in
cmp
add
cmp
pop
and
and
test
iret
mov
pushf
std
into
jne
cmp
es
(bad)
call
xchg
ins
adc
in
jp
lea
data16
sub
mov
(bad)
aam
retf
dec
out
xor
push
pop
out
out
pop
daa
clc
sahf
sbb
pushf
push
dec
xor
in
scas
jo
out
inc
xchg
mov
retf
push
sbb
add
jl
mov
pop
mov
pop
add
and
(bad)
cwde
xchg
loopne
loopne
inc
test
out
arpl
mov
shr
sbb
stc
ror
mov
mov
add
sub
mov
xor
cmc
stc
int
jae
daa
ins
cmp
xchg
and
sub
pop
or
dec
jp
stos
call
rcl
pop
imul
mov
ret
inc
dec
ja
cld
xor
dec
cwde
aaa
stc
mov
jo
cmp
scas
sbb
pop
leave
cmp
sbb
mov
lods
scas
mov
sbb
dec
movs
out
xor
xchg
scas
cdq
or
popf
dec
cmp
test
mov
adc
fwait
or
call
mov
adc
pop
jnp
fbstp
cmps
gs
fs
(bad)
jp
dec
int
mov
or
xchg
add
push
mov
or
sub
pop
dec
pop
out
sub
outs
cld
test
div
xor
or
test
movs
dec
add
enter
repz
inc
and
mov
xchg
(bad)
mov
movs
xor
dec
in
call
dec
jnp
pop
imul
(bad)
sub
lock
cmp
jmp
jae
and
cmp
iret
cmp
or
sar
popa
outs
into
in
jg
std
lds
jl
cmp
hlt
xor
push
aam
sbb
and
loop
push
ins
mov
or
dec
stc
and
ins
ss
fnstcw
movs
mov
add
fwait
cmp
(bad)
xchg
test
in
mov
in
test
jno
pop
aas
std
aam
push
mov
jp
pop
stc
mov
jns
jb
ja
movs
inc
enter
out
push
push
(bad)
xlat
xor
jl
jge
mov
mov
push
mov
cmc
jge
jmp
adc
sub
inc
out
es
mov
adc
jle
mov
add
add
jae
or
lods
push
mov
jbe
fsub
into
fild
ins
push
mov
fnstenv
pushf
aas
cs
adc
mov
inc
cmp
fisttp
int3
xchg
mov
fimul
pop
push
sbb
mov
and
(bad)
mov
jp
add
push
lock
jmp
or
mov
rcr
iret
ja
add
cld
add
in
ja
aad
jle
jno
fwait
mov
nop
mov
loope
fild
out
mov
stos
les
data16
xchg
and
push
adc
adc
in
pop
jmp
dec
and
ins
fwait
loop
inc
adc
dec
call
iret
lds
cmovg
(bad)
retf
cmp
dec
add
popa
out
shr
mov
xor
test
std
mov
xlat
xor
jae
ins
mov
add
fld
cmp
leave
inc
mov
mov
repz
aaa
sahf
test
add
retf
push
xorps
mov
mov
cmp
adc
dec
test
sbb
dec
inc
mov
lods
jbe
stc
je
out
rol
bound
add
das
gs
cmp
or
rcr
or
inc
add
es
in
jnp
outs
sub
fnstenv
mov
pop
cld
js
sbb
loope
mov
push
call
lods
lock
std
aad
cmp
movs
mov
(bad)
xchg
sub
sub
sbb
iret
fist
fiadd
jno
pcmpeqb
jo
jno
sbb
(bad)
or
inc
es
test
fadd
mov
push
and
sti
pop
ins
inc
xchg
inc
or
pop
je
stos
and
jmp
jp
push
ins
dec
inc
adc
icebp
(bad)
mov
bswap
push
icebp
imul
adc
push
mov
mov
cdq
jb
es
out
loopne
and
mov
lods
pop
cmp
push
test
push
movs
rol
lea
es
stos
adc
fsubr
in
push
clc
out
cmps
mov
push
sbb
(bad)
mul
fnstcw
push
or
aad
jmp
pop
mov
xor
fild
bound
fsubr
hlt
movs
cmp
add
(bad)
aaa
xor
ficomp
sbb
pop
and
add
cmp
hlt
aad
adc
mov
xlat
jo
pop
rol
retf
pop
(bad)
add
out
sti
sar
add
sbb
jg
xor
fwait
(bad)
ins
outs
mov
xchg
clc
mov
mov
call
outs
adc
add
int3
arpl
push
pop
push
clc
adc
jl
xchg
xchg
cld
in
hlt
adc
clc
inc
pop
dec
pushw
dec
xchg
mov
retf
adc
push
mov
pusha
cmp
sub
push
test
call
or
mov
mov
push
push
xchg
pop
push
adc
cmps
or
sub
mov
jb
and
sub
mov
js
jnp
bnd
cld
fimul
or
cmps
(bad)
call
inc
cli
adc
add
mov
enter
jg
jg
push
and
jne
data16
inc
dec
out
push
xor
cmp
mov
mov
fisttp
in
pop
sbb
ins
mov
pushf
pop
sbb
dec
stos
or
loope
inc
pop
inc
xchg
bound
cmps
retf
(bad)
mov
loop
pushf
mul
retf
jle
fistp
adc
and
dec
xlat
lods
ins
mov
test
mov
mov
dec
jb
fidiv
xchg
sub
dec
mov
push
aad
scas
or
fidivr
stos
aas
add
pop
in
jecxz
pop
in
repnz
pop
fbstp
loope
push
shl
cdq
lea
xchg
or
pop
add
lods
lods
xlat
add
mov
push
inc
lock
call
clc
sub
fist
je
mov
test
xor
adc
push
or
shr
xchg
xor
mov
xchg
(bad)
xchg
cmps
(bad)
stc
jecxz
aam
or
pop
pushf
(bad)
lods
fld
loope
push
fbld
sahf
mov
dec
cmps
loop
pop
dec
(bad)
fstp
sbb
xor
fcom
jb
jmp
nop
mov
es
add
dec
shr
jge
call
test
cld
pop
pop
aas
icebp
ret
or
or
mov
daa
sub
cmp
(bad)
outs
adc
and
cmps
daa
push
fidivr
adc
shl
mov
jne
in
and
in
mov
mov
test
xchg
je
or
add
lea
jne
dec
jge
in
imul
add
sbb
lods
inc
sahf
iret
in
sub
outs
mov
jnp
jae
sub
sbb
mov
sbb
retf
xor
leave
inc
xchg
(bad)
cmp
dec
pop
cmp
mov
fistp
add
mov
add
push
push
pop
fwait
aaa
jl
shl
cmp
popf
pop
add
daa
js
sub
and
adc
pmaddwd
push
xchg
(bad)
(bad)
push
cs
cmp
inc
mov
dec
imul
push
mov
fld
adc
push
dec
adc
jno
add
aas
cmp
mov
fbld
add
pushf
movs
outs
repz
jns
in
lods
cld
aad
sar
in
test
mov
jmp
xchg
adc
int
add
scas
int3
cmps
lahf
pushf
and
dec
cmps
mov
add
cmp
mov
jle
mov
retf
inc
scas
cmp
js
inc
and
and
add
xchg
shl
mov
pop
sti
add
fwait
outs
in
and
lahf
inc
xchg
jb
dec
ret
xor
inc
xchg
mov
loop
sub
je
or
jmp
stos
mov
mov
jne
sub
and
pop
push
jecxz
mov
cmp
sbb
pop
into
fimul
mov
cld
add
add
es
dec
sbb
inc
in
pop
push
sbb
ficomp
(bad)
lahf
jp
pop
rcl
or
dec
jmp
not
imul
mov
rol
mov
dec
mov
lods
jo
sbb
cld
(bad)
and
rol
adc
scas
push
push
sub
cmp
push
test
jl
outs
outs
xor
fs
add
imul
scas
ret
add
mov
xor
add
in
or
mov
ror
inc
push
cdq
xchg
inc
jo
xchg
test
iret
adc
push
cmps
(bad)
lods
fdivr
adc
sti
add
aad
stos
ins
jb
sbb
ficom
or
fs
mov
loope
sahf
xor
(bad)
int
sub
push
mov
clc
sti
cmp
fs
mov
mov
dec
outs
loopne
lea
(bad)
fbstp
ja
and
cld
push
int
cmps
icebp
and
jae
push
fnstcw
mov
dec
cmp
add
push
dec
aaa
lahf
xchg
push
cwde
mov
dec
or
hlt
pop
lods
ds
cmp
pushf
movs
dec
ins
add
pop
jle
pop
xchg
dec
sub
xchg
jae
ficomp
(bad)
mov
sbb
mov
xchg
nop
adc
in
push
mov
ds
gs
adc
lock
or
scas
mov
jmp
sbb
xchg
lock
fstp
fnstcw
icebp
mov
xor
mov
loop
cmp
in
fcmovnu
(bad)
mov
test
adc
and
add
lahf
stc
xchg
nop
imul
sbb
icebp
mov
out
jnp
js
jecxz
add
mov
es
dec
xchg
push
cmp
repz
adc
mov
mov
dec
cmp
jmp
jg
jl
lock
mov
xor
jne
into
cmp
ror
mov
test
xor
sar
mov
stos
call
mov
imul
mov
cmc
jmp
push
lods
je
push
pop
test
fwait
scas
pop
push
rcr
push
add
sbb
adc
add
pop
sbb
fidiv
mov
pop
adc
mov
jmp
mov
jecxz
lods
mov
(bad)
jmp
hlt
jecxz
sub
cdq
cdq
int3
shld
fwait
iret
outs
inc
xor
add
pop
aaa
movntq
mov
iret
xor
mov
mov
xor
sbb
les
or
div
dec
das
xlat
mov
pop
rol
xor
cmps
inc
imul
sub
xchg
test
jnp
ja
iret
inc
mov
sbb
in
scas
ret
repnz
dec
cli
push
imul
sbb
loope
sbb
and
adc
sbb
jecxz
retf
push
inc
xchg
gs
in
aam
aad
or
bound
mov
je
push
out
in
mov
ds
xlat
jge
mov
stos
jo
pushf
rol
jnp
sahf
xchg
or
leave
lahf
inc
jg
adc
gs
inc
push
ins
inc
in
mov
jg
(bad)
push
or
adc
cli
pop
imul
push
les
sub
dec
lock
cmp
cmp
jb
inc
mov
adc
push
or
mov
mov
mov
and
jo
xchg
in
adc
or
pop
mov
in
mov
les
lahf
push
ja
adc
add
(bad)
sbb
sbb
cmc
xor
xlat
addr16
shr
and
test
loopne
sahf
inc
nop
push
xor
adc
icebp
mov
mov
inc
xchg
mov
gs
sub
push
xor
lea
lods
push
test
lods
add
outs
sub
xor
sbb
cmp
in
sub
and
dec
pop
mov
jnp
outs
and
mov
je
leave
pop
call
mov
test
movs
gs
xor
popa
mov
outs
sbb
loope
rol
arpl
outs
outs
fld
push
or
mov
dec
cs
lea
mov
lds
movs
adc
mov
rcr
std
loopne
jmp
(bad)
pop
xchg
xchg
inc
inc
cmc
push
add
sti
das
mov
cmp
fild
push
push
or
mov
xor
js
cmp
les
scas
sub
cmp
cld
repz
xor
push
jecxz
jp
dec
jle
adc
dec
ins
inc
dec
es
(bad)
jg
xor
enter
cmp
adc
scas
xchg
sub
cdq
pop
sub
and
sub
push
mov
out
mov
cld
test
push
push
shr
rcr
sar
cmp
mov
ffreep
stos
test
fs
pusha
mov
cmps
cli
sbb
les
clc
xchg
rcl
and
test
add
inc
jg
pop
adc
bound
loopne
mov
lds
and
cmp
mov
cs
mov
and
pop
sub
cmp
push
sbb
mov
div
adc
dec
mov
ins
repnz
outs
sbb
adc
adc
cmp
dec
sbb
retf
dec
lahf
shr
push
lods
pop
lahf
rol
cmp
cmps
int
(bad)
retf
jb
jb
push
into
enter
call
fisttp
shl
cmp
sub
icebp
repnz
iret
lock
ja
xor
cmp
icebp
icebp
mov
retf
ret
xchg
sub
jae
cmp
xchg
sub
cmp
mov
jmp
sbb
pop
enter
sub
or
loopne
fistp
pop
xchg
sti
add
cld
sbb
pop
dec
inc
shl
pop
ror
mov
out
jo
fisubr
retf
scas
mov
fldpi
xchg
retf
outs
jns
cmc
xchg
(bad)
jl
enter
dec
sar
push
outs
fbld
outs
test
jno
mov
ret
jmp
aam
jg
push
mov
lock
jg
js
jmp
inc
repnz
or
inc
mov
pusha
sahf
mov
sbb
stos
daa
and
jle
and
mov
les
add
mov
mov
mov
cmp
pushf
ins
loop
adc
sbb
jbe
xor
xchg
adc
push
push
push
in
push
pop
push
inc
and
mov
retf
xchg
dec
fdiv
stos
stos
mov
mov
scas
sub
mov
adc
stc
hlt
sub
xchg
jecxz
iret
or
pop
movs
mov
mov
fst
fucomp
mov
out
jp
pop
pmulhw
cmp
sbb
and
ret
push
add
aam
jnp
or
aam
jge
jmp
adc
mov
sub
mov
(bad)
pusha
outs
and
sub
daa
push
ds
sub
jmp
mov
dec
call
outs
rol
xor
add
lock
ret
loope
mov
inc
pop
popa
xchg
fsub
pop
push
jo
stos
xor
mov
cmps
push
leave
sub
sbb
dec
(bad)
pop
add
cmc
addr16
jecxz
dec
repz
add
addr16
pop
mov
push
jb
gs
jns
cwde
movs
xlat
jae
adc
(bad)
lock
cmc
jge
bound
pop
lahf
adc
pop
add
js
jecxz
pop
xchg
idiv
dec
in
cmps
gs
sbb
dec
imul
popf
jne
dec
sub
pop
into
xchg
push
std
call
pop
xor
push
fild
xchg
call
push
jmp
adc
jmp
mov
pop
push
shl
scas
mov
ins
retf
out
stos
mov
dec
push
(bad)
stc
xchg
pop
sub
test
add
pop
popa
dec
push
pusha
sub
lahf
fnstsw
scas
sbb
cli
push
dec
stos
mov
not
jns
mov
clc
sub
test
mov
cmps
push
ret
dec
shr
repnz
jmp
leave
lahf
pop
cmp
adc
xor
mov
push
mov
xchg
in
pop
mov
sub
fdivr
ret
ror
pop
cld
lea
or
mov
retf
retf
inc
adc
xor
aaa
movs
in
mov
sahf
mov
adc
mov
ret
xchg
jecxz
pop
adc
ds
cmps
enter
fmul
mov
sbb
mov
push
mov
out
push
adc
push
in
ja
scas
sub
(bad)
(bad)
xchg
sbb
jne
dec
and
call
pop
inc
repnz
shl
lahf
sti
mov
addr16
add
in
mov
mov
mov
xchg
xor
and
ins
fld
or
pop
gs
or
push
aam
fisttp
xchg
scas
xor
push
shr
imul
mov
jge
adc
sbb
scas
jg
arpl
cmps
mov
(bad)
mov
jp
mov
out
mul
stc
ins
mov
push
cmp
add
mov
adc
pop
jns
cdq
aad
jb
ficomp
daa
dec
je
add
iret
xlat
ret
inc
push
jns
add
js
aad
cmp
daa
dec
movs
sbb
js
pop
or
mov
ret
pop
push
mov
xchg
jg
jge
inc
mov
in
out
call
mov
dec
inc
xor
cld
mov
repz
stos
inc
rcl
push
fcmove
in
sar
popf
(bad)
(bad)
pop
and
and
jecxz
jno
movs
cwde
(bad)
jg
lods
push
adc
and
mov
rcl
icebp
sub
xor
aam
loopne
gs
mov
add
or
push
xor
shl
sbb
cmp
xchg
xor
pop
pop
pop
cmps
pop
lahf
movs
xor
inc
jp
adc
(bad)
and
xor
inc
(bad)
sub
je
mov
jmp
not
cmp
fs
movs
test
sub
sbb
pusha
test
pop
nop
test
cs
jo
inc
cmp
sbb
movs
push
push
pop
inc
adc
push
div
dec
xchg
cmps
xchg
pop
add
shl
jp
cdq
sbb
out
jp
in
dec
adc
outs
retf
jno
out
rcl
js
pop
nop
adc
or
cs
dec
nop
mov
rcl
outs
inc
das
repnz
mov
test
xor
add
lahf
pop
dec
inc
inc
mov
pop
lahf
sbb
aas
xlat
jle
int
cmp
xchg
imul
xchg
repnz
fbld
mov
mov
lock
mov
cdq
mov
fdivr
(bad)
inc
ret
pop
test
cwde
xor
das
push
or
xchg
mov
icebp
xchg
mov
cwde
mov
out
sub
sar
mov
dec
outs
hlt
fiadd
pop
movs
and
ins
ins
pop
mov
xor
add
push
xchg
mov
pop
scas
test
sub
and
cmp
or
loope
adc
mov
popa
xchg
cld
dec
xor
cmp
xchg
fmul
push
mov
xchg
jecxz
sub
stc
test
mov
mov
push
ja
popf
dec
arpl
push
cmp
cmps
add
fstp
inc
movs
ja
retf
in
bound
push
xchg
push
cmp
add
mov
inc
mov
push
jecxz
adc
mov
jne
mov
or
mov
pop
gs
jnp
test
jmp
dec
jbe
mov
cs
adc
xchg
push
and
add
or
mov
sbb
inc
jp
unpckhps
dec
jb
stc
jae
push
sbb
leave
es
mov
adc
cmp
or
in
sub
hlt
out
sub
push
(bad)
mov
jne
mov
adc
fwait
in
icebp
shr
add
mov
cmp
gs
xchg
(bad)
mov
sar
(bad)
mov
(bad)
pop
inc
(bad)
fidivr
outs
jne
lods
inc
(bad)
shl
jae
xchg
stos
aas
or
mov
outs
stos
cmp
nop
jg
xchg
pop
adc
daa
pop
cld
int3
or
mov
xor
gs
sar
inc
mov
and
popa
dec
mov
fnstsw
mov
fidiv
les
cmps
loope
neg
or
js
lea
imul
pop
xchg
fbstp
mov
test
(bad)
sahf
rol
outs
addr16
pusha
fistp
pop
cmps
jno
mov
cwde
cmps
push
mov
mov
xchg
mov
pop
in
es
sub
jns
jg
(bad)
pop
and
ret
mov
pop
data16
and
sub
pop
inc
xchg
(bad)
cmc
repnz
ret
data16
jle
mov
mov
es
arpl
mov
enter
xchg
jnp
xor
(bad)
shr
jae
mov
xlat
cli
imul
sbb
jno
jge
push
pop
dec
push
inc
mov
jecxz
js
lods
jb
mov
and
ret
movs
jmp
sub
sahf
das
inc
jno
ds
dec
sub
push
adc
xchg
cmp
sbb
sbb
sar
mov
sbb
mov
adc
je
(bad)
lock
into
mov
or
sbb
lods
add
int3
(bad)
jmp
or
and
xchg
or
daa
out
push
ds
or
std
dec
or
jg
jg
lods
mov
push
xor
lea
add
aam
push
(bad)
scas
mov
mov
popa
cwde
dec
pop
icebp
test
jmp
pop
shl
out
scas
mov
xor
push
out
dec
mov
int3
xor
dec
pushf
xor
(bad)
push
loope
jns
mov
icebp
add
clc
push
es
bound
movs
lds
push
loopne
or
fcomp
js
and
pushf
xchg
inc
pop
pop
pusha
shl
sub
out
dec
sbb
cmc
sub
cmp
das
sbb
aad
fnstcw
mov
mov
sub
cmp
nop
and
ret
nop
loop
and
pop
mov
lea
inc
inc
test
int
cmc
pop
push
test
dec
cmp
pop
push
stos
mov
adc
pop
pop
xchg
mov
inc
pop
ds
pop
or
add
enter
int
inc
imul
sbb
lock
ds
movs
icebp
stos
test
mov
in
inc
leave
shl
jne
(bad)
mov
mov
jo
jne
cwde
dec
mov
scas
fwait
sti
jp
jbe
push
in
cmp
leave
int3
test
out
mov
imul
stc
push
adc
pop
es
jmp
add
dec
int3
adc
lea
into
dec
xor
out
icebp
cmps
ins
mov
imul
cwde
cmp
sbb
into
dec
adc
iret
adc
es
jle
mov
push
test
sub
xor
retf
xchg
mov
sub
push
mov
mov
mov
mov
xchg
cmc
cmp
sub
nop
or
jge
mov
dec
jg
cmps
daa
jl
aam
ror
inc
bound
dec
push
mov
inc
cmp
push
es
inc
pop
lds
adc
std
jl
ret
xlat
or
mov
jo
outs
jle
out
push
mov
pop
inc
test
lock
lods
pop
sahf
daa
inc
sbb
dec
inc
fisubr
jne
xor
jmp
jmp
sbb
imul
sub
push
dec
pop
cli
fisubr
push
pop
adc
ret
mov
sub
hlt
jae
lods
lock
outs
ja
paddb
rcl
or
test
imul
xor
iret
and
fild
(bad)
int
out
fucom
add
jp
inc
or
adc
mov
hlt
pushf
jmp
aad
mov
ja
and
jmp
cmp
test
xor
stos
inc
xor
iret
ficomp
inc
sub
mov
sbb
cwde
jp
icebp
data16
nop
ror
popf
popa
pop
(bad)
div
in
pop
(bad)
inc
outs
(bad)
ror
cmp
pop
lds
lea
daa
sub
xor
xchg
fmul
sbb
in
or
mov
xchg
fmul
div
push
mov
and
out
jo
dec
jge
fisttp
xchg
(bad)
jmp
cwde
xchg
or
add
dec
mov
sub
pop
dec
fmulp
pusha
rcr
adc
jb
jg
jne
gs
push
mov
hlt
adc
cdq
lods
lea
add
(bad)
cmp
add
icebp
fild
add
xchg
ss
dec
mov
and
sbb
lea
add
and
mov
dec
enter
cmps
das
dec
xlat
jmp
sbb
aam
xchg
fs
jno
push
jnp
es
aam
cmps
cmp
fisubr
pop
es
cli
(bad)
and
dec
mov
sbb
cli
xchg
mov
push
aad
inc
and
mov
or
sub
inc
stc
adc
and
sti
dec
jl
das
sbb
setbe
xlat
xlat
lods
jae
ds
inc
cmp
pop
jae
xchg
mov
xchg
out
gs
test
mov
cmp
pop
sbb
sahf
sub
fadd
or
inc
ds
repz
add
dec
lock
or
pop
mov
or
push
sub
and
scas
add
xor
sbb
cmc
add
push
dec
jle
sub
xor
test
xchg
arpl
mov
mov
retf
sar
jmp
xchg
dec
hlt
push
mov
stos
push
(bad)
(bad)
in
ficomp
imul
jecxz
scas
jmp
fstp
mov
push
mov
mov
add
mov
inc
shl
lods
jg
cli
cmp
sub
fisub
test
mov
push
mov
fstp
pop
dec
pop
scas
cwde
jo
push
lock
inc
adc
ss
lods
out
sub
mov
les
(bad)
jle
inc
movs
xor
cmp
int3
push
xor
jmp
out
sub
fs
repz
loope
sub
jbe
sbb
sbb
mov
(bad)
adc
xchg
or
jge
dec
push
fst
cs
ins
mov
and
ins
adc
outs
out
(bad)
cmps
pop
jne
adc
push
sub
je
xor
sub
dec
stos
add
pop
jo
mov
fstp
(bad)
xor
ins
mov
cmp
adc
xor
mov
out
add
js
jle
jae
popf
mov
adc
mov
neg
aam
jl
lods
mov
jmp
mov
lock
mov
mov
inc
int3
jne
jle
shl
fadd
outs
inc
mov
shl
stos
jbe
mov
or
mov
fimul
or
sub
and
popf
sub
and
mov
loop
adc
stos
add
pand
cmps
ds
xchg
out
stos
sbb
jp
xor
xchg
cmps
mov
popa
ret
inc
shl
retf
cmp
add
adc
cld
xor
sbb
adc
mov
test
(bad)
push
pop
stos
or
jge
rcl
dec
lahf
mov
mov
sub
push
mov
sbb
inc
cmp
sahf
push
mul
or
and
cmps
sbb
in
pop
sbb
and
jno
push
mov
fild
in
xchg
rcr
inc
inc
adc
gs
js
pop
ret
xor
outs
lods
imul
aam
loope
ins
(bad)
adc
jno
push
xor
cmp
push
ja
in
pop
xlat
popf
pop
sahf
mov
and
sub
sbb
fwait
repnz
inc
add
inc
fild
xchg
test
fist
repnz
ja
and
pop
dec
xchg
dec
jp
mov
sub
push
fild
push
in
cmc
cwde
push
adc
mov
adc
dec
fstp
mov
sub
(bad)
out
pop
mov
icebp
xor
sbb
call
(bad)
lock
shl
je
fld
mov
sub
mov
(bad)
loope
(bad)
adc
pop
in
icebp
ds
idiv
call
sbb
or
xlat
add
xchg
inc
adc
ret
cmps
and
aaa
idiv
movs
retf
push
jp
scas
push
jmp
loop
sbb
dec
mov
dec
mov
mov
xor
std
lods
pop
fild
(bad)
popf
lea
ret
int3
das
inc
repnz
test
and
lods
loop
mov
add
xchg
jns
dec
push
loop
xor
xchg
xor
sbb
js
and
std
fs
xchg
mov
push
adc
inc
xchg
xor
add
(bad)
stos
mov
sbb
push
neg
fcom
out
js
push
(bad)
(bad)
cmps
mov
cmp
loop
jbe
mov
adc
pop
mov
push
movs
call
cld
lock
sar
add
iret
out
and
xchg
inc
mov
adc
scas
loop
je
xor
out
push
xchg
or
or
inc
ins
cli
lea
xor
shr
(bad)
fistp
aaa
shl
arpl
mov
and
inc
pop
in
cmc
xchg
pop
mov
(bad)
mov
pushf
push
or
mov
cmp
aad
(bad)
xor
and
sahf
push
sbb
push
stos
(bad)
pushf
not
and
push
sub
mov
xor
(bad)
mov
xchg
test
pcmpgtb
cs
loopne
xor
push
jp
mov
adc
scas
popa
cmc
xchg
push
scas
mov
mov
ja
test
and
push
loopne
paddusw
push
jbe
xor
pop
push
xchg
dec
out
mov
mov
cmp
sub
iret
ror
cwde
loopne
cli
iret
dec
pop
xor
stos
sbb
push
fsubr
in
int
mov
call
dec
daa
dec
xor
movs
mov
or
xchg
xchg
or
inc
sar
cdq
mov
addr16
dec
push
into
fs
and
dec
addr16
js
dec
sub
pop
push
inc
into
xchg
mov
enter
add
imul
adc
pop
and
int3
pop
enter
xor
and
daa
mov
sahf
loopne
jge
sub
xor
shr
xchg
cs
jl
or
or
test
mov
imul
out
xor
pusha
cwde
add
sbb
cld
sub
xchg
nop
(bad)
push
cwde
iret
mov
and
sub
inc
leave
cmp
pop
or
fnstenv
jmp
jle
and
loope
or
into
or
ss
int3
sbb
add
ins
push
xor
dec
and
shl
jmp
xchg
sub
cmp
pop
idiv
ficomp
mov
and
lahf
pop
shl
sub
fs
add
and
loopne
dec
(bad)
jge
nop
push
out
push
movs
cmp
and
dec
and
adc
jp
or
add
daa
cli
xchg
add
adc
inc
mov
int
mov
test
pop
in
(bad)
test
adc
movs
fwait
adc
cmps
adc
mov
pushf
fld
pop
inc
xchg
xor
mov
rol
sti
cmp
inc
pusha
fwait
push
fisubr
cld
inc
xchg
inc
sar
fs
mov
das
sub
xchg
test
or
mov
out
dec
jmp
loope
arpl
test
test
jne
mov
sub
mov
jb
in
daa
and
push
call
jp
out
enter
retf
pop
jb
xlat
stos
movs
std
xchg
(bad)
jp
xlat
ins
mov
(bad)
mov
ds
mov
jo
xchg
and
sub
ds
pop
loopne
aaa
jmp
sbb
repnz
out
jnp
pop
adc
sbb
imul
cdq
jno
call
sbb
push
test
xchg
mov
jl
shl
hlt
inc
(bad)
clc
inc
aas
xchg
xchg
ror
dec
xchg
and
mov
and
ret
ret
cwde
mov
es
inc
addr16
jp
jp
or
fisubr
inc
xor
xor
and
inc
lea
ja
xor
jmp
mov
cmp
and
add
cdq
ret
(bad)
pop
mov
xor
std
sub
movs
push
xchg
xor
ins
inc
test
jle
cmp
cld
aam
inc
fs
jo
cmp
shl
into
xchg
dec
inc
into
sbb
cmc
cmp
(bad)
repz
daa
fs
mov
dec
out
bound
or
mov
mov
test
jbe
cmp
das
jl
xor
jns
sar
adc
aas
into
cdq
and
fwait
shr
jl
hlt
adc
sbb
pushf
icebp
dec
clc
movs
or
mov
pusha
and
call
data16
retf
cmp
stos
inc
xchg
sbb
cdq
repz
sub
xchg
push
in
pop
fcomi
stos
xchg
mov
push
inc
mov
sbb
xchg
add
ret
jns
dec
nop
movs
cmp
in
out
ins
sub
int
movs
jo
ret
jge
rcr
cmps
imul
sbb
cmps
mov
popa
hlt
jl
in
popa
push
jecxz
cdq
jp
jge
inc
add
and
sar
js
sar
imul
and
sub
cmc
and
xchg
cdq
jge
das
push
add
jnp
fld
cmp
jecxz
movs
and
sahf
popf
push
pand
jle
loop
push
cmp
mov
sti
repnz
jecxz
outs
inc
jl
mov
ret
mov
nop
push
mov
fcomp
xor
mov
cbw
jne
sbb
mov
fisttp
sbb
xchg
jae
adc
aad
adc
cmp
clc
jne
mov
sbb
addr16
aad
retf
jb
dec
mov
fsubr
cmps
inc
cmp
or
mov
mov
js
int
dec
mov
mov
xchg
or
inc
arpl
int3
push
jno
mov
push
push
cmovs
sub
movs
and
ins
push
aaa
pop
lock
xor
(bad)
pop
aas
or
mov
test
and
pop
mov
dec
push
cmp
movs
mov
sub
mov
inc
fbstp
pop
inc
sbb
jmp
pop
fwait
and
mov
mov
(bad)
mov
scas
lds
pop
sub
addr16
cld
xchg
mov
stc
ja
or
mov
into
or
and
push
mov
jp
rcr
dec
push
adc
je
int
cmp
pop
sbb
imul
push
push
inc
jo
pop
clc
pop
lods
dec
fwait
pop
fcmovne
mov
mov
jae
sub
adc
xor
in
xlat
icebp
cmp
clc
and
ins
das
int
mov
or
bound
xlat
fwait
aad
push
and
push
lds
lock
pushf
sub
stos
dec
loope
cmp
mov
mov
adc
lods
xchg
inc
mov
jae
aad
cmp
jecxz
jl
mov
out
retf
and
mov
mov
repz
sub
and
jb
inc
mov
stc
cmp
aad
pavgw
xchg
stos
in
jecxz
out
mov
xchg
jg
inc
aam
fcmovbe
and
les
pop
test
outs
and
test
push
cdq
pop
jle
aad
in
lods
pop
push
push
dec
retf
xchg
cmps
adc
mov
dec
cmp
rcr
cmps
std
mov
jle
cs
ror
cmc
fimul
xchg
pop
ret
das
adc
xchg
jmp
mov
sub
xchg
push
imul
lock
mov
call
pop
and
mov
retf
dec
test
gs
add
movs
mov
mov
popf
ret
out
jp
mov
pop
pop
ffreep
movs
add
mov
mov
lods
movs
adc
mov
jp
cmp
sub
mov
sbb
sbb
std
cmp
pop
mov
mov
(bad)
lock
and
shl
nop
arpl
dec
enter
and
and
test
dec
es
mov
mov
test
neg
sar
mov
leave
add
in
inc
jb
mov
or
scas
test
fidivr
or
in
scas
arpl
cmp
mov
xor
jne
cmps
push
test
jae
and
adc
mov
ss
mov
ds
ret
sbb
and
clc
std
repnz
sub
mov
fmul
out
jno
or
sahf
sbb
add
test
in
adc
mov
aam
push
call
mov
xor
cmp
xchg
mov
fidiv
jo
popa
pop
stos
int
outs
mov
div
loop
add
sbb
push
sbb
add
inc
xor
adc
movs
ret
add
sub
enter
ins
add
(bad)
jp
inc
jl
xor
stc
xor
aam
inc
and
outs
push
fild
mov
pop
push
ret
or
sbb
pop
mov
stos
pop
and
cld
shl
std
pop
jns
lods
movs
jb
adc
xchg
in
jp
shl
not
sub
out
and
mov
adc
out
inc
add
adc
fbld
cmps
add
mov
retf
fimul
and
cld
fild
fistp
jb
repnz
(bad)
jecxz
adc
jp
ficom
xor
popf
mov
fs
xchg
imul
pop
ds
imul
pop
dec
mov
sub
cmp
xchg
jmp
or
and
dec
out
bound
add
imul
push
jmp
or
push
sub
js
jp
ja
jp
arpl
or
sti
jp
cmp
dec
mov
out
aas
call
ret
push
push
mov
mov
push
jg
stos
ret
call
addr16
les
sbb
or
repz
and
cmc
mov
xor
jp
xchg
in
ret
or
mov
cli
ret
dec
add
cmp
cs
idiv
mov
jmp
leave
mov
movs
cdq
test
sub
and
stos
xor
(bad)
or
jno
test
ds
add
aaa
arpl
pop
xchg
out
into
les
fdivr
add
add
retf
push
mov
addr16
imul
popf
mov
leave
push
sub
sub
add
jmp
std
jnp
adc
cmp
dec
mov
and
in
or
sbb
aam
mov
jp
test
je
vpmacsdqh
daa
jnp
aas
dec
mov
(bad)
retf
push
cmp
push
out
rol
dec
inc
add
and
sbb
pushf
lock
cmc
ficom
movs
scas
sub
cdq
fcom
mov
mov
xchg
mov
sbb
fldcw
mov
xchg
dec
jp
and
mov
inc
sbb
cmps
inc
push
mov
pop
xchg
ror
mov
call
jmp
lods
outs
jno
mov
lea
and
pushf
aad
popf
cmp
xor
jge
pushf
jg
repz
daa
cmp
fnstcw
or
jmp
leave
lock
imul
jl
leave
or
popa
cmp
movs
(bad)
pusha
(bad)
fimul
inc
(bad)
mov
(bad)
in
adc
xor
inc
pop
pop
ror
sub
imul
mov
push
inc
and
hlt
dec
xor
rol
cmp
cmps
jb
push
ja
aaa
xor
jb
fisttp
sar
and
bound
test
jb
push
rcr
mov
gs
sahf
repz
into
xchg
(bad)
aaa
push
daa
aad
cdq
cwde
sub
dec
adc
test
push
popf
adc
jmp
leave
inc
in
loopne
movs
mov
scas
or
inc
inc
sub
loope
sbb
sbb
dec
mov
cmp
fimul
int3
imul
in
jbe
pusha
mov
not
adc
cmp
mov
push
pop
sbb
rcr
sub
clc
pop
test
add
cmp
xchg
cmc
xor
mov
or
or
mov
inc
adc
outs
cmp
pop
test
cdq
nop
push
(bad)
cmp
mov
or
sbb
pop
and
ds
sbb
les
pop
inc
(bad)
and
fidivr
mov
les
fs
push
sbb
push
xchg
fsubr
cmp
scas
mov
mov
sbb
add
rcr
mov
mov
xchg
lods
cmp
mov
cmps
movs
dec
je
xchg
idiv
or
int
arpl
pop
cli
sbb
retf
pushf
sbb
cmp
xchg
dec
es
pop
pmaxub
adc
inc
push
pop
popf
fisttp
shl
and
cmovae
pushf
mov
mov
(bad)
div
cmc
dec
mov
mov
mov
xor
aas
ins
cmp
cmp
xor
retf
in
gs
scas
std
hlt
lar
mov
cmp
xor
movs
inc
pop
icebp
sbb
(bad)
dec
outs
cmps
js
or
or
out
das
add
mov
test
mov
mov
shl
lds
dec
mov
mov
pop
mov
shr
ins
push
(bad)
pushf
dec
ficomp
out
add
stos
frstor
test
or
mov
cli
jae
icebp
clc
imul
mov
add
jge
cmp
test
xor
scas
push
mov
std
xor
mov
and
cmps
mov
jecxz
stos
sti
cmp
fnstenv
inc
and
ins
sbb
xchg
sbb
xor
jmp
loope
xchg
jge
push
imul
mov
push
shl
int3
sahf
inc
imul
sti
mov
sub
xor
in
pop
mov
jmp
bound
int
pushf
pop
jecxz
adc
cmp
mov
push
aad
xor
ss
jnp
xchg
xor
and
cli
or
xor
xchg
sti
bound
(bad)
sbb
inc
push
in
adc
or
sbb
ret
cmp
nop
nop
dec
(bad)
popf
mov
cmps
cli
mov
pop
mov
dec
pop
jnp
jle
nop
pop
hlt
push
jmp
scas
fwait
jl
push
cwde
jns
daa
cmps
xchg
pop
mov
mov
adc
fld
and
add
ins
je
repz
cmp
and
lods
mov
pop
lods
pusha
test
enter
jl
xchg
and
repz
push
in
es
loop
jmp
(bad)
push
add
cmp
mov
nop
adc
sub
and
lds
push
and
pop
adc
sbb
fsubp
push
lahf
loopne
jmp
mov
xchg
cdq
and
out
ins
addr16
adc
xchg
xchg
scas
sar
jb
shr
popf
hlt
clc
cdq
and
push
mov
call
xchg
call
mov
jmp
cmps
push
fidiv
sbb
call
sbb
js
test
fsubr
pop
stc
ins
dec
inc
cmc
daa
xor
pop
aam
(bad)
bound
push
adc
xchg
scas
pop
repz
and
inc
mov
jle
mov
ror
pop
pop
fwait
mov
jmp
test
in
jo
mov
xor
inc
cmp
mov
sub
adc
int
pop
les
jmp
xor
jae
xchg
shl
mov
sub
bound
pushf
into
adc
push
(bad)
mov
test
adc
test
sbb
inc
add
lods
or
icebp
cmp
mov
adc
pop
inc
or
push
push
add
xor
je
in
loop
addr16
xchg
inc
push
jecxz
cmps
and
add
rcr
mov
loop
push
ret
mov
xlat
retf
mov
pop
out
sub
dec
dec
pop
mov
test
jo
ds
imul
sub
and
stc
dec
js
inc
aam
jg
ss
int3
das
in
pop
pop
ins
mov
mov
cmp
lods
daa
cmp
mov
out
jge
jl
add
cs
pop
stos
pop
xlat
or
mov
add
movs
ins
sub
inc
sahf
inc
inc
scas
in
mov
and
pop
call
lods
push
or
and
aam
test
(bad)
fisubr
(bad)
mov
cmp
pop
add
in
lods
inc
test
push
int3
rol
das
xor
mov
es
pusha
jmp
dec
jbe
and
xchg
in
inc
or
mov
cld
mov
out
pushf
jmp
inc
pop
test
pushf
mov
jae
pop
inc
pop
pop
jl
sar
sub
xor
mov
add
xor
in
and
mov
pop
pop
push
jg
sbb
xor
lock
cmp
cld
mov
(bad)
jmp
loopne
nop
gs
jg
loop
cmps
jnp
mov
rol
into
mov
sbb
sbb
int
ins
cmp
andnps
lea
push
dec
test
aad
adc
sub
inc
pushf
mov
cdq
jne
hlt
xor
mov
cmp
loope
in
gs
mov
and
lds
cmp
mov
nop
mov
cmp
push
xor
push
push
stos
add
mov
sbb
and
fidiv
test
push
adc
or
adc
hlt
jne
loopne
int
add
or
call
stos
cld
imul
pop
xchg
mov
movs
shl
add
jb
push
inc
cmp
jle
and
mov
mov
push
xchg
mov
popf
int
xchg
mov
push
es
mov
jp
inc
std
pop
(bad)
xchg
(bad)
jp
enter
mov
push
mov
lahf
add
inc
or
jmp
mov
and
jl
ins
in
mov
jno
or
mov
stc
jne
daa
jmp
lock
or
xor
(bad)
stc
cwde
cdq
in
enter
(bad)
sbb
mov
addr16
pop
mov
nop
popa
inc
jae
or
mov
push
scas
(bad)
jp
cmp
pop
inc
test
mov
mov
fs
sbb
cmp
sbb
add
jmp
add
push
lods
or
mov
enter
add
test
(bad)
push
push
mov
lahf
(bad)
fcomip
jle
arpl
jle
(bad)
retf
mov
pop
gs
mov
cmp
adc
adc
test
cmp
fisub
ret
into
mov
mov
rcl
cmps
(bad)
and
mov
push
jecxz
sti
outs
jmp
imul
cmp
and
imul
push
jnp
jnp
sub
xchg
aas
repz
cmp
sbb
sbb
retf
or
or
(bad)
cmp
xchg
fistp
pop
cmps
mov
push
pop
ds
cmp
push
xlat
pop
mov
jmp
out
xchg
call
jmp
call
add
pop
je
mov
out
pop
mov
mov
fld
pop
cmp
sbb
int3
pop
add
dec
not
ss
jge
mov
xchg
cmps
bndldx
or
mov
dec
loopne
mov
stos
jecxz
inc
sub
addr16
js
lods
arpl
push
adc
lods
bound
add
mov
inc
stos
inc
dec
icebp
mov
js
sub
arpl
or
push
xor
jecxz
mov
push
adc
adc
outs
fcmovnb
xlat
jge
inc
cmps
clc
mov
sti
in
addr16
mov
and
out
icebp
mov
jecxz
xchg
int3
push
cmps
or
lds
mov
hlt
jo
hlt
sub
leave
fs
aas
dec
out
aad
inc
sub
div
inc
dec
add
lahf
ss
stos
dec
mov
arpl
inc
inc
scas
adc
cli
mov
sbb
mov
sbb
adc
push
and
into
outs
pop
sub
jmp
mov
lods
or
sahf
in
cmps
mov
test
cmp
xor
(bad)
cli
jno
jmp
scas
push
push
jnp
popa
sub
enter
test
stos
leave
xchg
jns
test
je
dec
inc
dec
xchg
dec
xchg
sub
(bad)
pop
and
pop
(bad)
jge
jmp
addr16
jno
repnz
adc
cmp
out
dec
mov
stos
mov
ins
mov
pushaw
dec
mov
jmp
movs
int
fwait
push
jmp
mov
xchg
outs
jle
cmp
leave
mov
in
arpl
mov
repnz
xlat
adc
test
pop
dec
jecxz
fwait
addr16
inc
mov
sbb
dec
pop
adc
ins
dec
sub
jle
cwde
jp
loopne
je
jbe
xlat
cmp
ss
mov
lods
fild
sub
xchg
or
pushf
mov
nop
es
dec
sub
out
and
stos
jg
retf
stos
dec
jnp
cwde
jne
div
loopne
xor
cmp
mov
cmp
push
stos
and
xchg
and
leave
adc
sub
clc
or
bound
not
repz
xchg
pop
jmp
pop
mov
repz
xor
dec
call
call
lahf
cmc
pop
ret
sbb
jns
enter
pop
ins
ins
inc
mov
outs
retf
and
mov
pop
mov
call
aas
iret
jo
or
(bad)
aaa
sbb
adc
or
dec
std
xchg
push
inc
push
mov
jge
cmp
inc
sub
sbb
sbb
lea
mov
(bad)
imul
repnz
rcr
mov
rcr
cmp
jo
pop
add
inc
aas
push
fidivr
xor
adc
push
xor
pusha
outs
push
ret
sub
xchg
sub
(bad)
repz
pusha
push
pop
add
sbb
push
xor
pushf
push
push
mov
add
lea
cdq
and
inc
(bad)
pop
mov
ret
sub
daa
pushf
mov
sti
(bad)
mov
rol
xor
lea
cmp
pop
jbe
dec
cmp
popa
test
xchg
mov
arpl
out
xlat
in
mov
or
add
dec
add
and
adc
and
push
jb
xchg
push
jae
(bad)
les
movs
cli
mov
jge
push
sbb
sbb
push
shl
cmp
jbe
xor
sahf
dec
and
sub
dec
ficom
jne
popa
push
adc
mov
(bad)
(bad)
cmps
sbb
leave
dec
clc
call
xlat
and
lds
inc
clc
das
test
sti
stc
xor
ficomp
or
outs
out
mov
mov
aad
stc
inc
mov
adc
ror
test
stc
cmps
mov
pop
lds
enter
int3
adc
les
push
push
int3
xchg
xor
sbb
pop
shl
jb
add
push
cmc
sub
dec
push
push
retf
push
xor
nop
and
pop
mov
jle
sub
jb
hlt
int
aad
pop
jo
cdq
rol
inc
in
imul
out
lds
pusha
cmp
pop
pandn
js
lods
inc
add
ds
dec
sahf
std
mov
jbe
push
jl
xlat
pop
dec
aaa
aaa
mov
sub
test
push
rcl
cmp
xchg
cs
loope
fisttp
xchg
scas
and
cwde
push
sahf
aaa
push
add
jns
xchg
cdq
mov
jge
mov
(bad)
push
xchg
je
xchg
stos
adc
pop
xor
xchg
clc
add
or
or
call
retf
scas
call
mov
sbb
cs
aad
test
sbb
fs
sbb
cwde
sti
lds
das
sbb
neg
sti
mov
lea
cmps
xchg
leave
lahf
jae
mov
add
retf
bound
dec
xchg
ret
cld
das
aad
lods
retf
les
popf
push
cmp
add
jmp
call
cmp
jo
scas
push
or
ins
pop
clc
cwde
popf
cmp
cmps
repnz
fs
sub
mov
ins
dec
sbb
and
stos
daa
jae
jno
xchg
push
ja
mov
stos
xchg
xchg
push
or
cmp
fisub
not
xchg
outs
sar
mov
dec
jge
ja
hlt
sahf
xor
xchg
sbb
loope
and
js
add
mov
adc
and
sub
leave
sub
sbb
cld
icebp
cmp
(bad)
push
push
inc
daa
sbb
mov
add
or
xlat
mov
aam
mov
out
pusha
sbb
mov
test
cmp
sub
cmp
inc
lock
mov
aaa
pop
sbb
mov
ret
add
pop
icebp
add
pop
stos
(bad)
push
add
add
in
(bad)
outs
test
push
(bad)
fcom
out
es
fst
les
call
ss
test
add
jge
retf
mov
fnstsw
and
int
push
nop
fst
xlat
xchg
cwde
push
jle
(bad)
pushf
lods
mov
and
add
jg
inc
pop
sub
sub
mov
clc
imul
in
in
inc
pop
inc
cs
mov
xor
(bad)
sub
(bad)
fwait
fwait
mov
xlat
ret
lahf
jge
sbb
jbe
movs
mov
pop
adc
call
dec
scas
mov
out
cmp
pop
push
stc
cwde
movs
mov
cmps
call
xchg
rsqrtps
popf
jmp
ss
lods
fisub
pop
add
aam
leave
jecxz
push
cmp
imul
pop
les
in
adc
repz
sbb
rol
mov
mov
or
es
fwait
mov
ficom
push
sub
jecxz
iret
jns
loop
nop
repz
ss
sub
stos
mov
inc
push
mov
popf
pop
push
in
pushf
test
rcr
push
in
in
mov
cmp
xchg
fwait
repnz
xor
retf
pop
out
mov
lds
pop
call
call
mov
jge
std
jge
cmp
and
sti
shr
push
ins
push
repz
push
scas
xor
xor
xchg
shl
jge
(bad)
(bad)
ficom
and
adc
(bad)
lods
dec
retf
mov
sub
pop
lods
mov
psrad
ret
cmp
call
xchg
out
leave
pop
mov
icebp
fwait
cdq
fisubr
ficom
jle
or
lahf
ja
in
cmp
cmp
lods
fwait
stos
xchg
mov
test
xor
(bad)
into
int
mov
xor
aas
fistp
mov
ret
retf
jns
inc
movs
or
adc
aas
push
and
jle
jae
dec
pop
arpl
xchg
popa
inc
cmps
xlat
xchg
sbb
mov
lds
adc
fwait
pop
and
fnstcw
movs
fld
jmp
and
gs
push
fsub
inc
jnp
ficom
pop
xor
fisub
fs
mov
pop
pop
pop
enter
cmp
(bad)
call
rcl
stos
mov
les
in
ret
inc
int3
jle
add
pop
lock
test
ficomp
les
repz
push
add
mov
jp
cmp
push
inc
hlt
ret
pop
int3
adc
sub
loop
lea
out
adc
pop
and
and
lock
and
shl
repnz
cdq
movs
test
jb
sub
(bad)
jnp
or
xchg
stos
pop
xor
push
fs
iret
repz
sub
in
dec
add
adc
addr16
dec
int
push
loop
stos
cmp
or
mov
pop
or
sub
xchg
mov
mov
jo
push
into
xlat
shl
cmp
lods
pusha
sub
xchg
sahf
and
xor
aad
nop
inc
dec
mul
scas
cmp
es
jl
add
fmul
xor
pop
test
push
movs
ror
xchg
pop
add
outs
loope
test
mov
fild
jne
aam
icebp
hlt
fidivr
push
mov
pop
xchg
jno
ins
xchg
mov
mov
repz
pop
das
(bad)
in
ins
sub
cs
sub
mov
cmp
push
ins
cli
enter
fst
dec
sbb
call
dec
mov
stos
adc
fistp
call
jmp
push
mov
mov
mov
stc
ins
mov
call
in
sub
mov
rol
pop
arpl
mov
das
or
sub
push
loopne
adc
lds
movs
ficom
shl
int
jmp
cmp
sahf
inc
rcr
lea
movs
jae
aad
dec
mov
test
push
fsub
outs
cmp
push
in
mov
aad
mov
xchg
pop
fdivp
and
cmps
in
inc
pop
mov
retf
adc
fucomi
stc
ja
mov
mov
jo
sar
mov
pop
shl
hlt
and
out
dec
mov
push
sbb
popf
out
or
jo
sbb
sbb
push
or
add
mov
retf
push
adc
or
xor
adc
sub
xlat
jnp
(bad)
and
idiv
daa
mov
pop
ja
ds
xor
into
outs
sub
sbb
pop
sbb
mov
jo
shr
xor
sbb
jbe
xchg
pop
jge
adc
inc
pushf
adc
(bad)
cmp
mov
ins
fld
xchg
std
aaa
xchg
fst
lahf
pop
cmp
ins
push
jne
lods
inc
jmp
cmp
xchg
call
bound
and
frstor
mov
pop
movs
push
sub
imul
pop
mov
pop
mov
cmps
xchg
je
sti
mov
cdq
repz
mov
pop
inc
retf
in
imul
sub
popf
pop
jmp
fsub
clc
dec
les
push
in
ins
or
lods
ficom
jns
adc
jnp
jno
add
(bad)
(bad)
mov
adc
xchg
xchg
add
div
pop
push
or
add
sbb
daa
ins
pop
leave
dec
mov
mov
dec
or
(bad)
xlat
retf
mov
push
mov
xor
jbe
ss
mov
fnstsw
inc
jb
xchg
es
sti
xor
or
mov
pop
add
pop
out
shl
es
adc
mov
sub
pop
sub
shr
call
cmp
lahf
sub
test
push
sbb
mov
sbb
push
loopne
test
xor
icebp
adc
jmp
jns
jns
scas
stos
ja
iret
mov
mov
call
repz
mov
jae
push
shl
xchg
fld
ror
jne
xor
sti
mov
and
dec
or
cld
adc
pop
mov
jne
xor
test
rcl
jb
mov
mov
inc
xchg
shl
inc
js
or
inc
fisub
add
call
fsub
out
lds
test
jo
bound
jmp
test
sbb
jb
movs
movs
je
sbb
sahf
int
jmp
xchg
sahf
inc
data16
das
xchg
adc
mov
outs
in
imul
mov
rcl
jl
stos
push
jmp
pop
sbb
inc
sahf
dec
das
ds
pop
imul
outs
jecxz
push
mov
push
sahf
inc
dec
aas
xor
retf
popf
cdq
add
and
ficomp
fwait
adc
ret
xor
sbb
jbe
(bad)
movs
sbb
shr
push
sbb
(bad)
ret
(bad)
repnz
add
cmc
jne
cmp
rcr
cmp
push
cmp
mov
imul
sbb
cmp
mov
add
adc
jne
cmp
jns
pop
sbb
inc
je
mov
or
out
stos
and
popa
sar
aas
fptan
call
mov
inc
in
loop
lahf
mov
into
(bad)
and
mov
retf
xchg
mov
mov
mov
inc
int
cmps
or
sub
mov
loop
popa
int
xor
stos
test
(bad)
mov
mov
(bad)
fcmovne
adc
shl
inc
lock
add
mov
dec
mov
inc
out
xchg
repz
push
mov
test
cmc
mov
fiadd
pop
cli
in
xor
jecxz
cmp
aas
jae
or
in
test
jno
out
sbb
in
aas
arpl
mov
aaa
retf
push
sbb
fcmove
loopne
adc
mov
mov
js
push
cmps
jl
out
mov
sbb
push
call
sbb
xchg
fsubr
cmps
enter
add
jnp
jle
jno
xor
inc
out
mov
mov
xchg
out
ins
mov
stos
pushf
inc
outs
jb
jb
data16
clc
mov
add
nop
repnz
sub
mov
mov
jns
jecxz
pop
pop
xlat
push
scas
call
mov
or
adc
movs
bound
or
data16
and
aaa
mov
or
cmps
xor
les
mov
mov
push
cmps
cmp
iret
ret
mov
jp
pop
adc
(bad)
mov
xchg
fidivr
or
stos
repnz
adc
leave
je
imul
in
mov
mov
mov
push
retf
bound
(bad)
ins
dec
or
(bad)
movs
mov
sbb
jbe
or
out
pop
mov
inc
gs
imul
lea
or
dec
lds
fidiv
add
call
out
movs
adc
jl
jecxz
aad
pusha
jmp
cmp
in
and
jl
cmc
sti
mov
mov
add
cs
int3
leave
cmp
mov
add
fbld
mov
mov
or
push
or
add
jmp
or
push
xor
and
push
scas
fcom
adc
mul
mov
cmp
and
daa
pop
ror
or
push
pop
pop
cmp
das
inc
mov
aaa
aas
je
jnp
ret
fcomp
fidiv
xor
push
fwait
imul
jge
mov
cli
cmp
ret
pop
call
mov
fdivp
xchg
or
cmp
and
sub
add
mov
ret
push
addr16
push
retf
push
les
test
arpl
dec
cmps
repz
mov
enter
inc
ror
inc
and
popf
add
push
lds
jne
push
mov
(bad)
xchg
xchg
das
int3
or
unpcklps
mov
jp
jmp
mov
mov
in
retf
xlat
ja
or
shl
loopne
push
xor
or
jecxz
jl
neg
outs
movntps
push
inc
out
cld
inc
push
adc
mov
mov
sahf
ret
call
cmps
loopne
es
(bad)
inc
scas
push
jp
dec
push
cmp
cld
leave
outs
xchg
or
shl
hlt
call
dec
sahf
iret
mov
jb
mov
ins
cmp
mov
mov
jge
inc
cdq
jmp
push
sub
cli
jg
mov
mov
in
mov
adc
fbld
icebp
(bad)
fdiv
call
pusha
ss
push
fidiv
jns
sbb
dec
(bad)
pop
test
dec
push
fnstenv
cmps
nop
adc
lods
push
xor
sub
bound
mov
idiv
mov
xchg
jb
push
into
xchg
lods
jnp
inc
fidivr
sbb
mov
or
das
cmps
(bad)
loop
dec
mov
es
pushf
scas
or
inc
jecxz
je
push
and
mov
rcl
mov
add
push
movs
inc
test
pop
rcl
test
hlt
push
inc
btc
pop
jmp
pop
push
fwait
add
cs
mul
call
imul
outs
das
cwde
repnz
mov
dec
adc
jg
adc
lods
sbb
rcl
mov
xor
push
gs
pop
test
push
mov
mov
in
test
movs
sahf
mov
iret
pop
fdivr
xlat
stc
retf
sub
and
loop
fcomp
sbb
fcomp
jo
ror
cwde
sbb
fsub
push
fdivr
sub
rcl
pop
xchg
mov
int3
mov
ret
inc
sub
inc
outs
fmul
mov
out
pop
xor
pop
add
cmps
in
inc
and
jb
popf
dec
imul
inc
stc
push
das
jb
jb
lods
sub
xchg
ret
sub
cmp
mov
cli
in
(bad)
mov
test
movs
mov
cmps
push
push
push
sbb
scas
dec
out
or
imul
dec
jne
loopne
and
fs
mov
sbb
cmc
xor
fmul
adc
call
leave
mov
pop
or
loope
push
test
aas
sub
sub
adc
mov
shr
mov
jnp
or
test
pop
mov
xchg
out
adc
cmps
mov
and
sahf
loope
ret
sbb
push
pop
sub
(bad)
(bad)
sahf
movs
int3
fadd
mov
loopne
sbb
mov
mov
jge
pop
fsubr
jno
mov
xchg
cmps
in
mov
pop
jo
fcom
fs
fild
test
xchg
push
pop
(bad)
dec
add
mov
data16
adc
and
pop
mov
inc
shl
fnstsw
movs
sbb
push
push
push
mov
sbb
call
out
sbb
sbb
imul
imul
aas
or
push
addr16
mov
(bad)
dec
stc
cmp
cmp
or
inc
cli
sub
clc
inc
in
push
ret
adc
rol
inc
sar
mov
or
loop
test
(bad)
adc
js
gs
adc
sub
and
sub
out
mov
out
ds
xchg
pop
push
xor
push
cmp
clc
loop
inc
add
dec
xor
sbb
repz
rcr
sahf
aad
gs
(bad)
jnp
mov
xchg
cmp
iret
pop
push
sub
lahf
out
lods
mov
adc
enter
leave
cmps
sub
and
jmp
not
mov
or
mov
outs
pop
cmps
push
mov
jns
mov
cmp
xchg
xor
mov
fsubr
pop
inc
ss
jg
mov
bound
and
jns
aaa
pop
jo
das
adc
mov
outs
in
int3
iret
mov
(bad)
out
retf
mov
mov
and
lea
mov
cmp
and
les
push
iret
int
int
mov
push
sti
push
iret
ror
dec
push
pop
jg
pop
inc
jg
mov
scas
aas
ins
outs
(bad)
mov
fdivrp
or
in
ret
int
jg
cmp
dec
sysexit
hlt
das
xlat
cmp
cmp
into
cmp
and
pop
outs
jg
ins
pop
movs
mov
aas
retf
in
dec
jns
push
push
pusha
xor
xchg
movs
push
call
push
cmp
inc
aas
inc
and
adc
adc
inc
add
pop
aaa
or
mov
pop
aas
mov
ins
scas
jle
scas
call
cmc
xlat
enter
sar
push
jmp
inc
dec
in
loope
mov
and
gs
in
gs
or
pop
loop
and
imul
enter
push
movs
adc
or
adc
fsub
and
push
xor
in
call
mov
loopne
lea
rcr
pop
mov
jo
jg
mov
shl
cmp
dec
lods
inc
adc
inc
push
mov
sbb
jbe
in
xor
jno
jmp
cmc
push
or
cld
test
inc
jmp
pop
cmp
jmp
(bad)
cli
lods
jno
add
lods
jbe
push
in
ins
xor
cdq
cmc
and
js
test
jg
pop
xor
sub
mov
mov
sub
cmc
and
movs
sbb
jno
out
iret
arpl
fidivr
adc
add
push
pop
dec
dec
pop
mov
lods
rcl
xchg
adc
cmps
mov
pushf
cmp
inc
push
xchg
cmp
mov
push
dec
gs
pop
(bad)
xor
(bad)
std
out
pop
add
cdq
imul
mov
mov
daa
pop
xchg
cdq
pop
push
sbb
jbe
and
aas
dec
and
shr
and
aam
aas
and
(bad)
cmc
leave
adc
xor
ja
mov
fisttp
iret
lods
xchg
cmps
ins
or
or
xor
loopne
lahf
neg
aad
mov
es
mov
inc
bound
sub
or
ins
sbb
nop
loopne
adc
call
in
daa
test
mov
and
mov
mov
icebp
sub
xchg
dec
sti
or
sub
sar
and
sbb
cmp
xlat
sbb
call
jge
xor
repnz
inc
popf
inc
out
out
aas
jnp
cmp
sbb
inc
push
inc
pop
xchg
cmp
cmp
jne
retf
hlt
cmp
add
mov
clc
xchg
mov
mov
retf
mov
pop
lods
jne
ret
lahf
movs
pop
mov
lock
gs
fdiv
nop
lea
ds
inc
inc
out
(bad)
or
jle
mov
ja
mov
movs
mov
inc
xchg
adc
sub
jecxz
test
cmp
ins
add
add
es
mov
xchg
xor
dec
cs
mov
jle
ins
mov
fistp
inc
scas
add
fcom
jns
jne
in
aaa
adc
ror
add
sbb
xchg
pusha
scas
mov
push
and
fcomp
jle
jecxz
call
lods
fcomi
push
cdq
cmp
fisubr
push
add
sub
mov
jns
xchg
or
cmp
cli
sbb
ret
stos
mov
and
mov
in
sbb
jbe
push
jnp
ja
cs
add
push
or
mov
jp
fwait
push
jle
cmp
pop
repnz
jmp
mov
sub
jns
addr16
or
mov
push
in
ja
arpl
mov
jp
jo
dec
jne
or
lds
jae
inc
popa
xchg
jle
and
sub
je
ficom
daa
and
pop
cmp
loop
add
(bad)
or
inc
jbe
and
imul
jo
shl
and
sub
repnz
bnd
jge
push
std
fld
jmp
mov
(bad)
mov
xor
(bad)
and
jmp
loope
xor
sti
lods
add
sbb
loopne
push
fnstenv
ds
js
or
retf
enter
lods
in
pop
jbe
scas
sbb
daa
in
cmp
fmul
jmp
pop
sub
pusha
bound
leave
ds
sub
scas
mov
jns
hlt
cwde
and
lods
xor
adc
loop
mov
dec
enter
int3
ss
out
mov
popf
(bad)
out
fwait
rol
fld
jne
jl
ins
inc
xor
fistp
xlat
or
mov
or
xor
jnp
ss
scas
dec
lods
out
rol
mov
or
rcr
outs
out
nop
(bad)
sub
jb
(bad)
out
fstp
lahf
ror
pop
cmp
mov
sti
mov
add
dec
xchg
call
cdq
push
(bad)
movs
mov
inc
pusha
arpl
dec
jbe
adc
jmp
(bad)
ror
dec
(bad)
enter
les
inc
mov
cwde
cmp
sub
and
push
lea
out
adc
jae
adc
fwait
pop
ret
adc
fs
xlat
push
jbe
add
adc
sub
call
mov
clc
mov
pop
or
xchg
sub
mov
sub
imul
add
sbb
sbb
rcr
and
mov
jge
adc
pop
sbb
movs
xchg
stos
jae
in
ds
inc
enter
cmps
std
xor
sub
shl
dec
mov
pop
ud0
xchg
call
push
add
cli
jns
lods
or
dec
out
jmp
pop
jge
lds
push
int
cmps
xchg
adc
sti
jp
push
pushf
(bad)
sub
fs
imul
push
or
retf
xchg
or
mov
retf
or
std
mov
mov
call
imul
(bad)
cmp
xchg
push
push
pop
out
push
sub
mov
jp
xor
out
ja
adc
jle
iret
add
bound
xchg
mov
push
dec
test
test
jns
pop
dec
or
xchg
xor
daa
mov
cmps
jmp
adc
repnz
push
stc
enter
(bad)
adc
loopne
mov
icebp
mov
push
xchg
(bad)
inc
cmp
or
add
push
sbb
in
out
sbb
mov
hlt
jmp
cmc
aam
xchg
shl
loopne
fild
dec
mov
jo
test
fs
sub
mov
scas
and
inc
imul
mov
mov
gs
mov
mov
pop
outs
xor
ffreep
mov
out
and
dec
mov
cmps
lock
inc
or
cmp
sbb
xchg
cmp
and
stos
bound
xchg
pop
popf
out
inc
(bad)
retf
out
or
inc
imul
add
mov
test
lock
cmp
data16
mov
push
ds
xchg
clc
inc
popf
mov
cdq
arpl
fabs
add
jg
xchg
sbb
fwait
mov
cmps
jecxz
outs
or
mov
test
mov
imul
test
sub
mov
xor
cld
sub
ins
mov
ret
fdivr
fst
cmp
mov
outs
mov
mov
push
mov
aas
dec
sub
adc
mov
or
inc
int
sbb
and
icebp
and
dec
mov
loop
vpermt2b
sub
test
jbe
push
cmc
add
fimul
sbb
jmp
and
jbe
call
sub
in
cmp
repnz
sub
repz
sbb
push
mov
xchg
lahf
aaa
das
xchg
or
scas
cmp
mov
nop
mov
dec
data16
int3
sbb
cld
aam
add
lds
imul
fst
xchg
sbb
xorps
imul
cmp
mov
retf
inc
ret
or
scas
xor
sahf
fwait
ja
sub
push
iret
jbe
popa
add
ror
cmp
jg
rcl
xor
repz
and
repz
adc
mov
dec
mov
test
push
and
sar
jno
sub
push
aaa
test
rol
sbb
lods
mov
inc
test
outs
push
data16
add
and
xchg
icebp
sub
loop
sub
mov
cmp
sub
mov
aad
cmps
ret
add
fst
add
and
jle
je
cdq
inc
mov
imul
pop
mov
inc
and
stc
jno
and
dec
dec
mov
adc
jecxz
popa
cmp
xor
retf
fcmove
dec
into
cwde
inc
test
(bad)
pop
mov
ins
jecxz
push
cs
or
pop
retf
in
jo
adc
pop
jmp
push
test
mov
fadd
adc
push
push
jo
pushf
add
jo
neg
add
sbb
mov
scas
or
out
mov
cmp
adc
hlt
jmp
dec
fsubp
xchg
and
xor
outs
xor
fistp
pop
cmp
xor
dec
adc
lds
int3
mov
mov
fchs
shr
hlt
xlat
push
cmp
data16
frstor
and
xlat
xchg
cmp
xor
jle
stos
cli
int
sub
push
paddsw
mov
pop
adc
pop
or
mov
pop
jns
les
mov
pop
call
jmp
cmp
cmp
add
add
cmp
shl
xor
popa
sbb
add
xchg
mov
ror
cdq
sbb
mov
and
sbb
clc
mov
loop
dec
sysret
int3
jmp
fbld
inc
sbb
xlat
mov
xor
ret
sub
outs
sbb
loopne
popf
cs
push
fsubr
enter
ds
push
sbb
push
xor
retf
test
jbe
adc
adc
movs
cmps
cli
jae
or
icebp
ds
scas
out
aad
or
fld
sub
and
cmp
(bad)
outs
dec
into
icebp
ss
sub
mov
aaa
xchg
push
xor
ins
xor
add
pusha
pop
xchg
and
sub
aad
pop
pop
mov
dec
retf
add
jns
cmps
mov
xor
(bad)
jl
push
mov
cmp
int
shr
mov
ss
retf
adc
sar
mov
ds
cmp
mov
test
jmp
jne
stos
movs
mov
mov
jecxz
sar
sar
mov
mov
fild
pop
inc
inc
arpl
xlat
mov
xor
icebp
push
pop
retf
sub
jbe
jbe
scas
icebp
packssdw
call
test
mov
pop
dec
aam
push
mov
add
dec
mov
mov
(bad)
call
add
pusha
lods
sbb
fidiv
xlat
mov
mov
(bad)
out
and
cmp
jns
mov
cmp
aas
xchg
or
imul
sub
rcr
mov
or
lods
jb
add
stc
cmps
cmp
dec
(bad)
sub
jg
in
ret
pop
jp
pop
fcmove
adc
cmp
xchg
pop
stos
xor
xor
movs
out
mov
sub
sbb
lds
mov
dec
mov
jge
(bad)
stos
xchg
sahf
pop
js
das
or
cwde
and
cmp
mov
push
cmp
and
adc
sahf
cmp
das
sub
movs
xchg
add
das
sub
mov
pop
scas
mov
adc
stos
sbb
pop
push
mov
movs
mov
ja
add
test
mov
addr16
sahf
out
fwait
pop
pop
retf
push
les
pop
mov
jecxz
not
ret
sbb
jg
xor
xor
push
xor
push
and
fwait
xchg
fld
test
jmp
mov
and
xchg
sahf
lds
inc
mov
lahf
push
jne
imul
fstp
mov
sbb
push
ror
jns
rcl
repnz
inc
pop
pushf
xchg
mov
leave
adc
das
push
mov
sub
or
ja
sub
pop
ret
mov
sub
push
stc
jne
xchg
push
jns
and
push
sbb
xchg
movs
sbb
cmp
ret
and
cmps
movs
and
mov
inc
hlt
pop
mov
jmp
rol
cmp
arpl
pop
imul
(bad)
adc
cli
inc
fsub
mov
and
cmp
out
cmp
nop
or
bound
xchg
cld
push
lods
and
icebp
ins
xchg
(bad)
cli
fcom
clc
imul
ins
lds
jge
not
(bad)
out
int3
stos
mov
xor
into
cdq
fisub
sub
jae
dec
mov
mov
and
jmp
loope
add
ret
sub
(bad)
iret
imul
inc
pop
xlat
or
push
dec
adc
in
push
mov
cmps
sub
cmps
frstor
sub
sets
push
pusha
cmp
cmp
xor
je
js
sub
mov
sub
cmp
mov
clc
pop
(bad)
sbb
push
ds
(bad)
mov
dec
xchg
stc
rep
cmps
cli
lods
(bad)
ficom
in
mov
push
(bad)
aas
movs
adc
fldenv
sbb
or
mov
push
pop
int3
mov
push
outs
es
cmp
inc
fisubr
jecxz
(bad)
jns
or
jmp
jg
mov
mov
add
out
ins
and
xor
test
and
lock
mov
jle
cmp
mov
(bad)
mov
mov
xor
xchg
ds
fistp
out
es
(bad)
or
jae
jg
cmp
mov
in
adc
ss
mov
(bad)
xor
cld
mov
test
xchg
inc
mov
jg
xchg
dec
hlt
add
shl
pop
shl
icebp
daa
inc
shl
sar
pushw
mov
fidivr
cmp
sbb
in
imul
nop
sub
fdiv
out
inc
out
inc
pop
xlat
add
int
sbb
xor
pop
mov
hlt
mov
xor
dec
sbb
xlat
stc
daa
cmps
inc
lea
xchg
jge
fwait
ins
loop
cwde
jo
jmp
sub
test
lock
je
mov
jb
sub
mov
pop
inc
adc
or
cmp
fist
sahf
inc
mov
mov
ret
push
sbb
mov
je
call
popa
mov
mov
sbb
rcr
in
mov
loop
(bad)
daa
mov
cmp
lods
xchg
jnp
cdq
push
xchg
movs
inc
and
not
dec
scas
adc
push
xchg
imul
mov
(bad)
mov
inc
cmp
and
mov
fisub
mov
xor
sbb
push
xchg
xchg
mov
pop
out
mov
mov
sahf
mov
jmp
push
lods
in
out
data16
lods
or
arpl
mov
inc
jae
xchg
cmp
and
mov
iret
std
push
cdq
adc
frstor
cmps
push
sbb
mov
not
ds
les
arpl
test
inc
cmp
inc
push
add
xor
or
xlat
in
shr
inc
shr
mov
(bad)
into
test
pop
shl
sub
xor
xchg
mov
and
xchg
jnp
movs
inc
cmp
dec
jg
not
int
iret
pop
sar
aad
loopne
jle
ja
or
in
retf
cmp
leavew
jg
nop
dec
jae
push
shl
sub
aad
adc
aad
(bad)
call
push
cmps
js
stc
cmps
cmp
mov
test
sbb
popa
fidiv
dec
aas
push
jns
ret
pop
mov
out
sbb
jbe
(bad)
sub
xor
push
pusha
cdq
into
pop
data16
je
std
fwait
aad
inc
push
jmp
mov
out
test
imul
ins
div
mov
add
cmp
pop
mov
add
cmps
adc
test
fs
dec
or
aas
add
mov
or
mov
inc
or
outs
in
mov
fsubr
cmc
mov
or
sbb
jecxz
mov
mov
inc
or
in
imul
mov
hlt
scas
call
and
xor
add
push
and
aaa
movs
cdq
cmp
add
fldcw
push
call
scas
dec
mov
mov
ja
outs
repz
xor
test
xchg
mov
daa
call
mov
mov
(bad)
fidivr
or
ret
sub
push
and
jmp
cld
or
hlt
ror
mov
mov
leave
jge
mov
or
scas
call
adc
sub
jb
iret
enter
imul
movs
cmps
push
std
mov
xor
xlat
jg
(bad)
jns
movs
and
mov
push
pop
loop
xchg
stos
mov
outs
loop
rol
scas
mul
mov
push
and
xor
push
out
sub
or
mov
push
shl
pop
pop
dec
pop
push
jno
and
add
mov
clc
push
push
fnstcw
add
shl
xchg
dec
lods
arpl
sbb
sbb
pop
sub
dec
es
dec
cmp
mov
and
cwde
dec
xchg
xchg
(bad)
mov
jno
mov
ror
cmp
sub
lock
add
mov
lock
es
xor
pop
mov
dec
jbe
fwait
sub
pop
jecxz
sbb
stc
add
das
lock
mov
jno
sub
or
in
ja
push
(bad)
test
adc
mov
imul
pop
mov
xor
fcmovnb
mov
pop
sbb
dec
pop
lahf
push
dec
fiadd
xor
mov
and
add
fidivr
rcl
mov
outs
pop
ror
shr
aas
add
int3
shr
and
fs
sub
xor
push
xchg
push
push
icebp
jg
movs
out
mov
test
xor
lods
ret
inc
retf
and
pop
mov
sti
enter
les
repnz
fcomp
jmp
and
cmc
ret
arpl
jp
xchg
mov
adc
test
xchg
pushw
cdq
stos
xor
add
mov
lds
test
retf
mov
add
inc
dec
scas
xor
fst
retf
lods
outs
sbb
rcr
and
(bad)
jb
stos
xlat
sti
xlat
movs
lahf
pop
stc
lds
out
jle
push
rol
push
mov
sub
push
add
sbb
pop
cmp
mov
push
inc
cmp
sbb
jg
sbb
or
inc
lods
jb
cmp
rol
jge
stc
mov
add
sbb
mov
ds
jb
fsub
outs
xlat
pop
lds
ja
push
cmp
shr
mov
and
inc
popf
xor
pop
jae
jecxz
xor
mov
sbb
inc
sbb
pushf
sbb
shl
fild
mov
mov
mov
pop
movs
sub
dec
sbb
ret
pop
pushf
pshufw
jmp
cmp
pop
push
in
inc
lods
and
cmp
cmp
fsubr
mov
mov
add
xchg
xchg
ins
rol
inc
stos
fsub
out
jb
push
inc
imul
jns
retf
inc
lea
sbb
call
sub
jne
xchg
outs
add
frstor
pop
test
loopne
in
mov
sbb
lahf
jb
rcl
retf
out
sbb
add
or
clc
retf
dec
cmp
adc
xor
ffree
cmp
push
(bad)
adc
ds
ss
pop
xchg
push
and
es
int
cli
fstp
xor
xor
addr16
pop
pushf
push
or
cli
inc
or
xchg
mov
(bad)
popf
push
daa
iret
int
xchg
xor
mov
in
(bad)
jmp
add
add
push
aad
scas
loopne
or
jno
movs
sbb
adc
xor
ret
lahf
and
pop
in
shl
dec
sti
call
xor
fwait
inc
pop
iret
ds
mov
jmp
femms
popf
xchg
sbb
cmp
pop
add
pop
ds
fcomip
js
cmp
sbb
sbb
push
dec
jg
jg
pusha
jnp
call
iret
ret
fist
xor
clc
call
inc
sub
xor
addr16
cdq
(bad)
sub
dec
add
adc
jae
js
aas
jp
xchg
les
stos
ins
inc
mov
cmp
mov
xlat
and
rcl
pop
cmp
sbb
adc
push
pop
jecxz
jmp
push
imul
push
sub
push
je
cmp
stos
jp
xor
pushf
enter
into
call
cmp
popa
jbe
sbb
enter
mov
dec
inc
cmp
cs
and
push
adc
jo
push
or
or
inc
push
test
jne
(bad)
cmp
dec
stos
test
push
mov
ret
and
and
push
sub
or
pushf
cs
ins
mov
mov
cmc
push
jno
pop
and
xchg
shr
pop
pop
cmp
out
mov
jns
out
xor
aam
mov
jge
hlt
dec
or
ins
push
fisubr
repz
jecxz
test
pop
pop
inc
movs
mov
shr
mov
popf
add
mov
jg
in
and
cmp
sbb
push
push
jp
mov
dec
cwde
(bad)
cli
shl
sub
loope
gs
imul
ret
in
pop
ja
fstp
ins
and
cmp
std
mov
jg
add
add
push
test
jp
add
lock
movzx
sub
mov
(bad)
and
stos
mov
dec
(bad)
enter
add
ret
scas
fst
daa
in
test
add
gs
jle
push
pop
(bad)
mov
push
xchg
and
push
or
push
pop
int3
not
jl
in
fs
add
fistp
mov
mov
retf
(bad)
cmp
and
sbb
rcr
or
fistp
stos
mov
outs
hlt
or
out
mov
xchg
xor
rcl
std
mov
mov
or
(bad)
out
mov
bound
xchg
jl
cmp
cmp
mov
nop
xor
push
adc
sub
fsub
dec
cmps
aam
ret
mov
jp
and
sub
or
add
iret
aam
in
cs
xor
add
movs
retf
sti
sub
or
push
lods
push
jmp
jae
dec
bound
dec
mov
or
jp
scas
lock
dec
mov
inc
sbb
sbb
das
sub
or
or
and
shr
ret
lods
in
lahf
test
jnp
hlt
outs
sub
iret
loop
(bad)
loopne
out
add
or
sbb
pop
pop
xchg
jb
xchg
imul
cmps
push
(bad)
push
leave
int3
adc
call
dec
dec
rcr
(bad)
loopne
cli
call
mov
add
push
jl
scas
addr16
adc
cli
mov
lds
mov
xchg
test
out
jmp
sar
loopne
test
ds
sub
outs
or
inc
leave
push
push
jb
cmp
js
in
repz
rol
mov
adc
push
nop
sub
mov
lahf
pop
ja
xchg
in
inc
lea
push
push
and
jecxz
aaa
cmp
nop
push
fwait
sbb
std
sbb
jp
and
push
and
jbe
aaa
dec
dec
jg
and
cli
sub
add
jae
cmp
lea
push
ins
mov
push
retf
mov
or
push
jns
jl
jg
cmp
cli
scas
pop
es
test
scas
xchg
ss
aam
cli
stos
std
cmps
push
lds
std
out
jns
mov
pop
cmp
push
fimul
in
jp
adc
mov
out
push
out
into
xchg
hlt
loope
lea
popf
xor
ins
ins
pop
ins
pop
pop
jmp
shr
fisubr
sub
inc
std
jno
inc
and
cld
jns
aad
sbb
pop
ret
icebp
data16
inc
bound
mov
bnd
pop
sbb
pop
in
mov
sti
dec
sbb
into
arpl
xchg
pop
inc
push
cmp
inc
rcl
mov
hlt
(bad)
sbb
jbe
xor
out
xor
test
aad
inc
cdq
hlt
leave
(bad)
in
cmps
cdq
loope
es
adc
push
call
lods
adc
xchg
stos
loop
sub
scas
jl
cmp
(bad)
xor
scas
jbe
xchg
cmps
les
cs
mov
cmps
retf
xchg
pop
mov
xchg
jl
lock
fld
stos
push
cld
add
adc
adc
pop
mov
push
mov
sar
jbe
sub
(bad)
cmc
gs
dec
ficomp
add
call
or
fimul
imul
dec
into
gs
inc
ja
icebp
push
pop
or
int
or
xchg
dec
jns
popf
and
ret
inc
pop
pop
xchg
jmp
mov
dec
jge
aam
mov
in
out
(bad)
cmp
shr
mov
pop
or
adc
jo
cli
lds
js
cmp
jbe
ror
cmp
loopne
jecxz
mov
xchg
mov
pop
inc
outs
aad
arpl
mov
ror
leave
push
xchg
mov
cli
retf
fistp
loope
cmp
fld
mov
cmps
mov
inc
jae
popf
pop
mov
setns
outs
loope
scas
mov
adc
imul
mov
clc
les
xor
push
inc
into
sbb
and
sub
push
test
ins
jmp
bound
stos
mov
jl
fstp
inc
repnz
in
xchg
push
or
std
pop
inc
pop
push
mov
cmp
aam
jle
xchg
jo
es
cmp
or
mov
(bad)
es
fcmovnbe
ss
xchg
dec
mov
mov
dec
pop
outs
cwde
in
std
out
mov
je
popa
and
cwde
and
je
iret
jecxz
stc
repz
mov
loop
adc
sahf
jne
cmp
jl
out
loop
and
mov
jae
push
xlat
mov
(bad)
cmp
stos
sbb
jmp
fsub
repnz
ret
aas
lea
push
retf
cmp
adc
dec
mov
or
sahf
mov
jmp
mov
aad
out
mov
call
inc
dec
clc
repnz
jb
repz
test
pop
clc
pop
push
fmulp
add
call
add
jp
fwait
jle
leave
scas
inc
in
cmp
icebp
stos
fcomp
addr16
test
mov
push
dec
xchg
add
fwait
push
outs
sbb
loope
pop
out
pushf
cwde
hlt
cdq
sbb
lods
ror
and
imul
sub
scas
inc
ret
sbb
iret
add
add
cmps
jnp
jle
or
inc
mov
sub
mov
push
data16
test
rcl
lea
lods
pop
push
repz
inc
rcr
test
inc
es
cld
mov
or
into
sbb
test
cmps
xchg
push
push
xchg
xchg
jl
xchg
sahf
push
sub
push
lds
or
(bad)
stos
fadd
pop
mov
clc
jae
ror
xchg
xchg
pop
lods
imul
pop
frstor
nop
pop
cmp
pop
xchg
push
cmp
fld
push
outs
call
sub
sub
or
je
lea
pop
pop
pop
xchg
(bad)
jo
adc
pop
pop
(bad)
jns
lea
call
repz
dec
icebp
test
and
jbe
jbe
sbb
lock
sub
jl
sub
enter
pop
rol
push
and
fcmovu
sub
repnz
pop
(bad)
cld
sbb
adc
fincstp
push
push
xor
lds
test
int
ror
cld
jmp
or
or
push
aam
push
jecxz
xchg
xlat
inc
add
sbb
imul
lock
pop
mov
imul
pop
mov
das
xchg
in
and
imul
pusha
ins
push
out
jae
int3
repnz
in
(bad)
repnz
push
pop
dec
dec
jmp
mov
jmp
imul
shr
in
hlt
jns
jbe
fcmove
retf
in
lds
fbstp
daa
mov
lock
sbb
mov
push
dec
push
out
pop
not
stos
xor
or
hlt
pushf
sbb
fstp
sub
aas
dec
xchg
retf
jecxz
mov
push
call
stos
xchg
sbb
scas
rol
scas
lds
mov
push
dec
pusha
ret
fld
pop
les
mov
jg
jae
arpl
adc
sbb
iret
rcl
mov
ror
fldenv
jge
rol
daa
inc
mul
xor
sub
xor
mov
mov
aad
int
cmp
out
xor
outs
lock
loope
aad
sbb
les
outs
xor
cmp
js
mov
sti
jnp
jo
mov
scas
jno
nop
adc
test
lds
es
mov
sub
xor
inc
or
cmp
stos
in
sbb
mov
sti
enter
inc
ret
or
jmp
dec
call
dec
inc
punpckldq
test
push
out
push
mov
mov
jmp
push
enter
xchg
dec
out
movs
popa
js
mov
xor
(bad)
(bad)
jb
mov
dec
aam
mov
js
out
pushf
push
in
mov
lea
call
in
in
out
xchg
dec
int3
add
call
test
inc
mov
mov
jg
bound
loop
xchg
rcl
fldcw
das
mov
pushw
pop
scas
loop
and
push
mov
and
sbb
popf
and
and
leave
lea
call
inc
imul
enter
stos
hlt
je
jo
in
dec
out
cwde
adc
loope
shr
mov
xchg
xchg
fbstp
mov
sub
pop
mov
sub
mov
outs
fs
pushf
movs
or
push
cli
call
scas
and
les
push
adc
das
clc
scas
mov
inc
sbb
(bad)
call
sbb
fdivr
repz
mov
pop
or
xchg
cwde
jmp
push
icebp
daa
daa
ins
lock
mov
xchg
in
xchg
das
jne
add
rol
fld
imul
mov
inc
inc
push
in
or
rol
fidivr
fyl2x
mov
push
and
sbb
jno
mov
and
xchg
(bad)
xchg
ret
ss
add
(bad)
fiadd
sbb
add
inc
inc
jb
je
popf
push
(bad)
mov
add
pop
push
loope
loope
adc
mov
xor
push
and
mov
ret
aaa
fidiv
inc
(bad)
lods
xchg
mov
pop
dec
mov
inc
jnp
cmps
ret
jo
scas
sar
ja
movs
jg
mov
sahf
ins
ret
out
ins
arpl
lods
arpl
xor
fcmovnu
dec
call
dec
jnp
or
dec
dec
scas
fwait
and
(bad)
push
jl
cmp
dec
lock
or
mov
xchg
test
pop
inc
mov
(bad)
mov
xlat
sbb
sbb
dec
inc
mov
(bad)
and
mov
into
adc
cdq
add
lahf
fidiv
jmp
jo
cmp
or
lods
neg
call
xchg
fwait
jno
jb
dec
sbb
int3
movs
jns
cdq
and
inc
add
(bad)
mov
pushf
jle
jmp
push
inc
fistp
sbb
ss
add
pop
iret
movs
adc
xchg
sti
mov
test
(bad)
mov
stos
dec
push
adc
mov
outs
dec
sti
and
or
fdivr
cld
retf
bound
xor
lahf
jmp
push
repz
pop
test
inc
inc
in
pop
mov
retf
rcl
sbb
jecxz
stc
scas
pop
and
test
lock
jge
mov
sub
xor
daa
fcmove
xchg
cmp
add
and
jbe
push
inc
retf
adc
mov
aam
sub
push
or
adc
in
in
outs
in
ins
loop
or
clc
cmp
pop
mov
jnp
shr
ret
jnp
cdq
sub
jnp
test
frstor
out
mov
pop
jp
(bad)
dec
mov
or
sbb
pmovmskb
add
gs
cmps
rcr
xchg
add
into
icebp
(bad)
int3
dec
dec
daa
pushf
aaa
sub
and
or
add
into
das
bnd
cmp
xor
add
rcr
int3
(bad)
into
cmp
push
lds
and
mov
pushf
add
imul
pushf
shl
mov
dec
mov
and
(bad)
xchg
and
jp
ins
leave
sub
mov
and
mov
jg
dec
sbb
pop
jg
in
mov
dec
mov
or
ds
imul
jmp
out
outs
fwait
std
hlt
xor
fs
cld
sub
retf
popw
gs
xor
cmp
mov
aaa
popa
mov
sti
aaa
push
mov
icebp
int
adc
jb
gs
or
sbb
je
add
mov
sub
test
hlt
idiv
aam
and
jno
fwait
mov
jecxz
pop
jbe
pop
push
(bad)
xor
xchg
mov
dec
jbe
test
jns
xor
mov
bound
inc
out
das
cwde
xchg
xchg
mul
cmp
pop
(bad)
out
adc
div
inc
mov
push
(bad)
mov
push
retf
cld
dec
out
inc
xor
pop
mov
data16
in
mov
jne
add
test
add
not
lock
icebp
add
jne
add
mov
cmp
mov
and
xor
sbb
sub
mov
pop
push
neg
pop
repz
mov
ret
aad
bound
xchg
lods
ficom
dec
mov
ret
je
bound
pop
(bad)
loopne
aad
cld
mov
movs
aad
xor
mov
mov
inc
mov
out
sub
enter
add
sbb
out
jns
test
repnz
stc
xchg
sar
push
bnd
fdivp
push
fmul
dec
dec
loopne
(bad)
nop
xchg
xchg
scas
mov
iret
das
push
lahf
aam
cmps
and
push
sub
pop
push
pop
inc
dec
out
push
(bad)
popf
ror
cmp
shl
dec
out
rcr
mov
or
inc
and
xor
fbld
imul
mov
std
cmp
stc
jecxz
addr16
jmp
out
sub
sub
es
xor
or
cmp
and
cwde
sub
(bad)
popf
outs
std
push
mov
test
mov
scas
xor
push
add
cmp
jnp
push
lea
(bad)
fisttp
(bad)
pop
fs
mov
inc
adc
sbb
jge
jmp
mov
mov
and
aad
sets
mov
outs
jg
clc
arpl
test
pop
push
movs
std
sub
lds
xlat
and
inc
xchg
loop
push
xchg
mov
cdq
push
sbb
cmps
pop
cmp
pusha
xchg
push
xchg
das
fstp
mov
mov
or
cs
push
sub
in
int3
and
lods
out
xor
jmp
xchg
movs
mov
push
cs
int3
pop
imul
or
sub
xchg
fidiv
and
mov
pop
mov
cdq
cmp
out
mov
push
cmp
cld
or
cmp
cs
inc
xchg
cmps
jl
mov
rcr
mov
sbb
sub
outs
cmp
cmp
jbe
adc
xor
popa
cmp
(bad)
sub
or
xor
popa
mov
jg
jmp
jns
or
stos
loop
xor
adc
add
aad
mov
inc
and
loope
jbe
ins
int3
stos
inc
pop
mov
test
fbstp
and
mov
push
dec
mov
imul
pop
inc
mov
je
mov
push
jo
sbb
and
adc
bound
add
mov
hlt
hlt
mov
or
sbb
inc
add
xchg
or
sub
cwde
jge
adc
addr16
pop
mov
add
pushf
adc
dec
lahf
popa
sbb
or
push
and
push
cmp
mov
pop
stc
and
push
shl
xor
pop
addr16
jb
retf
loopne
xor
xor
sbb
sbb
or
loope
mov
push
mov
sub
pop
jb
jl
(bad)
sbb
xchg
jl
pusha
jno
mov
cmp
jae
push
hlt
push
xchg
and
in
xchg
ins
popa
sbb
mov
fst
js
sbb
sbb
dec
clc
add
cmp
in
mov
lds
inc
mov
lods
xchg
fdiv
imul
push
lods
rcl
clc
or
adc
jae
inc
mov
jmp
enter
xchg
sbb
fwait
and
mov
imul
cwde
sub
sub
repnz
shr
cmp
cmp
call
les
xchg
fisubr
sub
add
leave
mov
fwait
add
inc
fxch
fld
xor
sbb
int3
pop
out
test
push
mov
sbb
imul
gs
inc
out
mov
repnz
js
mov
jg
push
or
div
test
dec
or
pop
mov
cmp
in
dec
adc
jmp
bnd
paddd
(bad)
popa
mov
daa
sbb
bound
test
mov
cmp
fs
int3
push
xchg
std
jp
fcomp
jl
sub
jle
iret
in
and
ret
movs
or
shl
jae
mov
xchg
mov
fxch
mov
sti
cmp
ins
sub
dec
and
add
adc
cmp
inc
add
and
xchg
mov
sbb
loope
sub
xchg
push
mov
fldenv
in
int
ds
ror
xor
call
adc
imul
fwait
mov
inc
cs
jno
mov
stos
adc
je
or
mov
js
pop
repz
test
out
cdq
std
push
and
aam
pop
mov
fimul
dec
add
cmp
dec
inc
ret
adc
xor
(bad)
push
out
pop
das
(bad)
adc
cmp
shl
jmp
sbb
mov
cmp
pushf
inc
adc
icebp
xchg
pop
xchg
cli
das
xor
in
inc
fdiv
aas
mov
cld
add
xchg
neg
dec
xor
cmc
sub
shr
add
inc
push
or
sbb
int
imul
test
ss
movs
cmps
push
mov
outs
test
push
jbe
xchg
add
fidiv
cld
shl
inc
mov
test
ss
pop
mov
sbb
adc
mov
mov
add
mov
cmp
push
cmp
xor
les
mov
xchg
mov
inc
aaa
test
push
pop
jnp
imul
mov
xchg
sahf
nop
sbb
test
and
push
mov
add
xchg
jp
push
jno
test
push
push
das
pop
xor
cwde
or
xchg
enter
(bad)
xor
ds
mov
add
not
xchg
jmp
sbb
adc
jle
test
leave
xchg
xlat
test
mov
call
lods
es
aaa
lds
fcomp
dec
jg
cmp
hlt
test
jl
xor
lods
xchg
stos
(bad)
(bad)
(bad)
pop
dec
jno
inc
push
dec
cld
mov
andps
lods
xor
adc
sbb
mov
lods
mov
mov
push
xor
or
lahf
cmp
jmp
addr16
gs
mov
or
and
sbb
scas
repz
adc
jb
outs
inc
lods
inc
ret
loop
push
fist
scas
gs
mov
call
imul
fwait
in
shr
mov
mov
sub
iret
push
inc
push
pop
add
cmp
sti
lds
cmps
pop
(bad)
ins
sti
sbb
je
lea
(bad)
loop
fwait
stc
ror
add
or
aas
hlt
mov
cmp
dec
cmps
xchg
fsub
mov
and
and
jbe
pop
jb
push
rol
bnd
sub
pop
jge
adc
cmp
mov
dec
push
push
jg
adc
and
jge
out
pop
repnz
(bad)
jl
adc
pop
imul
and
mov
mov
mov
jg
adc
gs
push
aas
in
jns
pop
popf
mov
or
nop
lock
mov
in
push
lods
or
push
cs
test
out
ret
mov
std
gs
cmps
xchg
fwait
push
pop
addr16
pop
sbb
dec
dec
icebp
mov
lahf
xor
addr16
pop
stc
xor
sub
cli
cmc
jle
mov
dec
dec
xchg
xchg
add
(bad)
or
sar
mov
les
jecxz
fs
mov
dec
mov
shl
fwait
and
push
test
in
jmp
jae
lds
loope
dec
xchg
scas
aad
sub
jnp
sbb
(bad)
cdq
pushf
fld
into
xlat
xchg
fcom
hlt
stos
(bad)
and
push
and
nop
sbb
ficomp
and
xchg
push
dec
popf
adc
push
call
ret
xchg
push
jnp
aad
call
mov
adc
jecxz
push
push
sbb
aam
and
lock
adc
inc
les
dec
adc
(bad)
pop
adc
in
adc
cmp
xchg
sub
mov
int3
inc
sub
add
adc
jl
add
push
mov
jg
rcl
pop
mov
mov
cmpxchg
cmp
adc
adc
ret
sub
jbe
xchg
sub
push
pop
fcom
cdq
dec
inc
mov
mov
pusha
inc
or
loope
dec
retf
das
xchg
jbe
pop
push
mov
out
cmp
leave
jge
pop
daa
adc
and
int
jg
xor
or
clc
or
adc
ja
push
sub
push
retf
in
std
pop
icebp
fdiv
icebp
aas
in
movs
addr16
cmps
push
xchg
push
xchg
rcr
fdiv
mov
xchg
and
test
ret
mov
cmps
sbb
push
push
repz
test
or
mov
rcr
dec
cmc
inc
movs
fld
scas
and
xchg
outs
or
das
jne
ja
lea
pop
jae
dec
mov
clc
or
outs
push
imul
sar
sbb
pop
cmps
adc
push
mov
fstp
icebp
(bad)
xlat
mov
clc
mov
sar
sub
mov
fsub
sti
retf
push
jnp
mov
inc
cmc
je
(bad)
and
xor
cmp
arpl
movs
inc
es
call
inc
test
and
test
mov
add
mov
inc
loopne
popf
lahf
inc
fadd
and
jne
ins
ror
xchg
or
pop
frstor
mov
sub
push
jl
aad
or
arpl
pop
push
gs
jno
stc
mov
cwde
inc
and
mov
pop
stos
jg
cmp
pop
inc
jo
pop
jl
xor
xor
retf
adc
cmp
icebp
xor
cmp
sbb
mov
scas
inc
and
mov
repz
mov
add
cld
inc
sbb
pop
inc
inc
pop
push
inc
out
xchg
call
jo
xor
std
mov
inc
dec
dec
jbe
jmp
lds
hlt
or
push
shl
xor
add
cmp
cmps
and
mov
mov
call
and
push
mov
push
imul
push
movs
cmp
mov
out
lods
inc
xor
push
pop
add
mov
sub
xchg
in
add
sbb
mov
rcr
add
and
aam
and
cdq
and
int
mov
(bad)
mov
mov
xor
dec
and
les
inc
sbb
sub
cld
cdq
and
sbb
push
dec
inc
push
jmp
int
sub
push
adc
mov
dec
sbb
lods
out
jnp
jecxz
xlat
pop
sbb
arpl
ss
ss
pusha
aam
repz
and
(bad)
xchg
cwde
shl
sub
test
sub
and
scas
jbe
xchg
mov
mov
push
lahf
dec
int3
repnz
out
ss
jns
stos
stc
es
xor
pop
sub
stc
pop
rcr
lock
cmp
cs
cmp
fucom
push
icebp
add
mov
xchg
lock
call
jbe
and
in
jmp
jmp
sar
sbb
push
mov
add
daa
mov
adc
cli
or
and
shr
push
jo
stos
jb
and
ins
fld
repz
dec
int3
xor
xor
in
mov
test
in
loopne
add
dec
retf
popa
pop
in
or
sbb
inc
jno
xchg
mov
jns
lods
jae
xchg
daa
pop
adc
or
adc
sbb
dec
cdq
fistp
(bad)
test
neg
fwait
popf
jmp
cmp
adc
dec
inc
cld
outs
repnz
add
add
adc
push
jecxz
dec
dec
cdq
repnz
or
mov
add
out
dec
lods
test
outs
mov
sub
pop
mov
(bad)
dec
add
test
jbe
cld
pop
repz
jp
or
jp
inc
sbb
jp
or
and
fucomip
adc
call
js
add
sbb
xchg
ror
fisubr
cld
popf
or
popf
sub
push
dec
adc
hlt
jl
inc
imul
and
imul
pop
dec
scas
sub
jo
(bad)
adc
cmp
push
cmpxchg
fs
cmc
dec
or
mov
jmp
jb
dec
xchg
xlat
stos
xor
push
std
push
popa
inc
jo
inc
arpl
int3
xchg
pop
cmp
out
inc
(bad)
adc
xchg
sub
cmc
jecxz
lods
in
push
out
test
push
push
add
mov
push
les
nop
fsub
and
mov
sub
push
mov
mov
nop
sub
mov
das
(bad)
xor
movs
repz
mov
fcmove
fld
xchg
cwde
movs
jle
popf
mov
movs
push
mov
mov
test
or
es
retf
inc
fstp
or
lods
add
enter
and
je
dec
lods
outs
fld
lea
or
jge
sbb
in
cld
clc
xchg
push
scas
sub
rcr
adc
push
sub
loopne
and
test
icebp
sbb
add
out
push
mov
pusha
cmp
push
xchg
push
push
push
iret
in
cmc
in
jmp
fild
mov
jl
fist
imul
sbb
out
sub
neg
sub
cs
xchg
xlat
cmp
sub
jne
push
leave
es
test
daa
call
adc
jb
xor
cmp
into
out
dec
jmp
sbb
add
(bad)
sbb
jns
hlt
or
sub
mov
aam
mov
xchg
pop
mov
add
not
mov
das
push
imul
shl
std
rcl
ds
sahf
jp
imul
pop
cdq
sub
inc
stc
mov
aad
push
jmp
push
and
inc
movs
test
or
lods
gs
(bad)
into
dec
xlat
xchg
dec
mov
sub
pop
push
mov
loop
mov
fidiv
pop
xor
pusha
jp
arpl
xor
mov
push
or
mov
or
test
les
add
mov
jno
outs
rcr
ja
call
push
or
into
sbb
xlat
push
fidiv
gs
inc
test
cmp
stc
scas
inc
mov
dec
out
mov
jno
retf
xchg
popa
pop
lods
adc
pushf
rcl
push
mov
xchg
das
aam
push
mov
sub
sbb
in
mov
pop
push
(bad)
in
pop
mov
mov
(bad)
mov
xor
sbb
adc
inc
mov
loopne
(bad)
mov
inc
retf
ins
pop
jb
mov
mov
out
bound
inc
jno
jb
push
mov
out
out
xchg
in
bound
aad
movs
pop
xchg
mov
leave
inc
push
scas
call
adc
repz
stos
outs
mov
inc
inc
mov
sub
jbe
iret
outs
aad
imul
xchg
sahf
mov
pop
lahf
mov
pop
sbb
out
rol
add
xor
xchg
scas
loope
mov
mov
dec
inc
cmp
std
shl
in
sub
aaa
(bad)
ja
test
mov
test
pushf
stc
mov
mov
xor
popa
mov
aaa
push
xchg
out
fadd
jmp
add
outs
cmp
push
push
in
dec
sar
pop
popf
adc
out
pushf
(bad)
aam
ins
cwde
adc
loop
popa
push
mov
repz
adc
daa
xor
out
lods
(bad)
enter
add
lahf
outs
push
leave
xor
lods
hlt
test
or
sbb
push
mov
sub
xchg
jnp
js
cld
fbstp
xor
aad
fst
rcl
lea
addr16
pop
push
jmp
out
hlt
and
dec
pop
pusha
add
mov
fstp
pop
push
sub
lods
loop
xchg
pop
xor
repz
adc
call
cmp
push
aam
rol
shl
add
xor
iret
push
shl
call
dec
fwait
xchg
mov
jb
ficom
pop
stc
jmp
mov
inc
sub
(bad)
pushf
sbb
fwait
mov
ficom
cwde
shl
stos
fmul
je
push
movs
pusha
fidiv
into
cmp
pop
es
dec
jae
mov
and
dec
xor
inc
and
rcr
pop
adc
sbb
mov
push
mov
cld
xchg
out
out
lahf
mov
adc
adc
outs
out
inc
ret
jbe
dec
mov
jne
mov
cmps
clc
and
jg
cli
inc
or
xchg
dec
jmp
imul
cld
(bad)
fcomp
jne
test
imul
dec
dec
ins
jne
add
retf
and
mov
dec
hlt
pop
and
sti
mov
cdq
not
cmc
in
or
enter
sub
mov
bound
inc
addr16
mov
dec
xchg
outs
ficomp
ja
mov
call
stos
test
ins
dec
push
test
mov
or
shl
es
lahf
push
(bad)
arpl
fisttp
cmp
push
jle
arpl
ror
sub
lahf
mov
and
push
jnp
pushf
ja
add
adc
inc
jns
sbb
push
dec
out
mov
retf
fcmovnbe
push
stos
jmp
push
out
xor
idiv
jg
cmp
inc
xchg
dec
icebp
jmp
mov
adc
adc
ret
sub
fcmovbe
scas
sub
mov
stc
icebp
pop
cmp
mov
add
daa
adc
daa
das
dec
lahf
pop
aad
not
dec
xchg
sahf
cmps
fwait
push
dec
test
movs
mov
and
cmp
int3
xor
mov
sti
psubq
(bad)
in
adc
push
jae
pop
or
inc
mov
pop
xor
scas
fcomp
dec
in
rcr
mov
cmp
sbb
push
aaa
jae
stos
repz
mov
loope
dec
add
inc
hlt
adc
pop
in
sub
sub
popf
pop
jae
cmp
sbb
add
test
retf
mov
sbb
mov
les
ins
loope
fcom
iret
cmc
jge
mov
jns
ins
xchg
and
xchg
xchg
scas
stos
inc
mov
dec
add
hlt
mov
add
xor
mov
xor
out
aaa
test
mov
test
lods
adc
add
mov
cmps
jb
mov
pusha
iret
scas
push
dec
and
or
ins
mov
aaa
dec
mov
push
test
dec
dec
jmp
sbb
call
cmp
(bad)
mov
sbb
jo
xor
add
call
cmp
ret
push
(bad)
je
loop
push
fdivr
ror
mov
push
adc
cmps
jle
mov
or
outs
out
test
sub
addr16
or
daa
int
stc
in
sbb
mov
add
or
fisubr
repnz
test
adc
shl
jne
das
iret
cmp
xor
sub
shr
lock
aad
jl
scas
mov
xchg
inc
push
mov
aas
add
mov
call
test
(bad)
sti
add
call
dec
sbb
adc
inc
cwde
repz
(bad)
cmp
mov
xor
arpl
daa
sbb
scas
inc
in
hlt
icebp
je
leave
cmp
push
(bad)
ja
pop
pop
test
cvtpi2ps
sub
pop
fdivr
and
dec
aad
iret
dec
scas
popf
sti
jg
pop
pop
cmp
jmp
stos
cmps
das
out
mov
jae
stos
jecxz
inc
jnp
retf
adc
jle
mov
jo
push
shl
std
sub
mov
pop
mul
adc
and
dec
mov
jle
dec
add
rol
jne
jo
mov
repnz
mov
stos
cmps
sti
mov
bound
dec
(bad)
shl
test
dec
add
test
movs
mov
push
and
mov
sub
(bad)
test
sub
imul
pop
cld
out
xchg
or
in
daa
sbb
mov
imul
mov
jns
xor
(bad)
pop
or
mov
(bad)
int
rcl
pop
mov
cmp
test
fwait
inc
dec
push
cld
or
add
add
in
xor
or
sbb
ret
cmps
sub
push
mov
clc
jp
outs
jmp
ds
leave
inc
imul
in
inc
push
pop
or
mov
add
(bad)
punpckhwd
push
idiv
ja
stos
daa
iret
jno
sbb
jmp
add
fdiv
sbb
bnd
inc
enter
mov
div
inc
cld
sub
outs
xchg
ror
test
ret
fadd
cwde
out
jbe
sub
jecxz
adc
xchg
ins
ins
(bad)
std
nop
nop
in
call
xchg
jnp
fsub
mov
fs
fdivr
(bad)
test
mov
pop
jp
push
fsub
or
sbb
sbb
mov
push
xor
push
shufps
in
sbb
mov
pop
adc
push
pop
in
loop
retf
sub
sub
shl
sub
push
xchg
out
and
add
mov
(bad)
mov
fadd
shl
sbb
xchg
pop
or
ret
shl
inc
mov
push
sub
push
xchg
inc
rcr
rol
icebp
fidiv
repnz
add
pop
push
xchg
fs
push
notrack
stos
fsub
mov
cdq
daa
mov
fldenv
fs
jae
pop
arpl
fwait
jbe
imul
cmp
inc
mov
in
sar
int
cld
out
adc
movs
xchg
ins
call
(bad)
(bad)
jl
(bad)
clc
shl
retf
dec
push
sub
je
jb
sbb
rcr
(bad)
into
or
cmps
xchg
fdiv
js
repz
xchg
mov
push
mov
push
push
enter
jmp
fsubr
add
sub
sbb
cmp
cmp
ja
cmc
mov
ja
mov
jmp
call
(bad)
leave
cmps
push
rol
dec
inc
mov
xor
sbb
inc
arpl
xchg
test
test
call
push
aad
imul
scas
iret
pop
aaa
pop
and
(bad)
cld
jne
xchg
add
mov
ja
push
mov
test
cmps
iret
pushf
push
sub
sub
cmp
sbb
inc
sbb
mov
push
jb
add
push
push
push
imul
sub
and
ds
lea
dec
(bad)
mov
fstp
dec
inc
sub
mov
pop
das
pop
aam
xchg
pop
sbb
(bad)
dec
fwait
xchg
mov
add
mov
in
iret
cwde
or
jp
mov
mov
sbb
movs
sub
or
cs
add
add
jb
lahf
xlat
ins
arpl
call
push
fimul
lahf
jbe
pop
outs
xor
cmp
out
inc
push
scas
jge
pop
push
inc
xchg
mov
into
push
push
rcl
add
outs
mov
sbb
fistp
add
shr
pop
in
or
cmp
dec
xchg
aad
and
sub
and
mov
push
jl
or
mov
dec
mov
xchg
retf
ins
lahf
jl
ja
fdivr
icebp
shr
(bad)
lods
outs
outs
ror
mov
test
jmp
cmp
cmp
int
lock
(bad)
je
es
sahf
(bad)
shl
sub
adc
mov
dec
mov
(bad)
fisub
aam
xchg
xchg
sbb
aas
dec
pop
ret
rcl
adc
mov
(bad)
pop
xor
sbb
mov
stc
mov
mov
lahf
push
mov
cld
pop
mov
inc
jmp
push
sbb
sahf
jmp
pop
test
iret
mov
pop
test
adc
push
inc
inc
jns
sub
xchg
push
add
iret
mov
les
dec
das
pop
xor
cli
fcmove
jo
adc
arpl
mov
add
div
or
std
or
push
and
mov
mov
pop
repz
loopne
gs
retf
je
aaa
je
gs
or
sub
push
int
mov
imul
outs
cmp
adc
scas
loopne
test
inc
repz
in
fcomp
fst
xchg
mov
repz
repnz
fidiv
sub
lds
int3
mov
mov
sub
rcr
fnstsw
hlt
mov
in
paddusb
sbb
mov
outs
push
and
cmp
sub
jns
mov
call
add
clc
adc
pop
shl
cmp
xor
pop
(bad)
outs
mov
fdiv
push
cld
sbb
mov
or
arpl
fidivr
in
movs
mov
sub
jo
shl
mov
adc
bswap
(bad)
sbb
test
les
jle
and
shl
lahf
push
mov
iret
adc
cmps
mov
retf
repnz
fnstcw
int3
mov
cmp
pop
rol
dec
jae
icebp
jecxz
movs
xlat
pop
imul
adc
inc
add
dec
popa
jns
pop
sahf
jmp
add
ficom
shr
rcr
call
fwait
(bad)
test
gs
mov
retf
loop
into
jo
sbb
inc
jg
enter
mov
enter
out
push
xchg
aam
loope
cmp
pop
out
dec
out
mov
nop
push
and
arpl
ret
sub
push
(bad)
cli
pop
bound
mov
push
outs
jge
cs
(bad)
cld
mov
xchg
add
je
adc
sub
div
stos
cld
mov
sub
sub
push
retf
mov
add
push
loope
xchg
cdq
std
and
sub
or
inc
bound
xchg
xor
ja
leave
loope
stos
(bad)
sbb
sahf
(bad)
clc
pushf
pop
adc
imul
sub
add
add
adc
xchg
(bad)
pop
fisub
rcr
pop
add
push
mov
(bad)
nop
pushf
fild
push
xchg
pop
popa
push
mov
aaa
xor
into
cld
or
xchg
cdq
arpl
push
test
pusha
in
arpl
repnz
pop
sahf
or
ret
dec
test
or
not
fdiv
daa
cmp
repz
mov
mov
mov
adc
pushf
gs
push
adc
xchg
aam
clc
(bad)
jmp
jle
mov
sbb
mov
inc
xchg
lds
or
inc
dec
fdivp
jp
lods
icebp
push
adc
sbb
popf
jecxz
jne
lahf
mov
pop
sub
and
xchg
aas
mov
pop
push
sbb
cdq
adc
(bad)
push
xlat
js
xlat
pop
test
test
(bad)
lahf
inc
mov
in
test
enter
push
pop
loopne
push
out
push
out
lock
retf
test
cmp
aas
sbb
clc
push
mov
push
mov
push
cmp
push
cmps
pusha
xor
fmul
(bad)
and
js
jmp
(bad)
adc
or
xorps
xor
adc
add
sub
data16
fsubr
jb
mov
mov
jne
shl
call
pop
or
dec
aaa
or
add
sbb
cdq
arpl
repnz
mov
adc
arpl
add
sti
fdivr
out
cwde
jl
add
cli
sub
sbb
sbb
adc
jno
mov
dec
fwait
sbb
jmp
mov
sar
fneni(8087
jecxz
mov
scas
ja
mul
sbb
data16
push
sbb
or
(bad)
xchg
mov
pop
or
sbb
sbb
cld
adc
sbb
push
cdq
cmp
adc
xor
sbb
imul
mov
dec
pop
test
mov
nop
jnp
es
dec
sub
lss
fsub
iret
fisttp
mov
cs
jbe
xor
adc
push
pop
je
mov
lods
jge
fld
fwait
push
mov
xor
jmp
jns
retf
push
mov
inc
sbb
mov
mov
out
xchg
lock
cmps
add
cmps
xor
dec
(bad)
sahf
xchg
fdiv
das
mov
dec
movs
mov
in
add
dec
stc
mov
popa
xor
dec
sbb
arpl
pop
call
movs
gs
in
loope
or
cmp
dec
stc
and
mov
cld
xor
lods
pop
push
and
lahf
sar
mov
icebp
mov
mov
cmps
in
pop
jae
mov
addr16
ret
das
icebp
outs
dec
and
sbb
vcvtps2dq
mov
jecxz
xchg
ret
test
jecxz
(bad)
neg
fs
adc
das
(bad)
push
push
sub
sub
std
int
push
scas
fimul
jp
inc
data16
cmp
pop
ins
and
mov
sbb
lods
push
sub
push
lods
adc
and
(bad)
or
idiv
mov
mov
mov
int
and
sub
pop
jae
sub
push
and
outs
fdiv
daa
pusha
iret
mov
(bad)
cdq
sub
sbb
fs
into
sbb
fld
pushf
pop
bound
dec
sub
popa
shl
mov
aaa
or
movs
pop
stos
std
sbb
sbb
mov
out
lds
sahf
mov
xchg
xor
add
fdivr
pop
sahf
jmp
imul
and
jecxz
test
fdivr
jno
cdq
dec
and
rol
jmp
loop
cmp
in
inc
push
xchg
int3
jae
ror
xor
ja
inc
lahf
dec
xor
(bad)
out
mov
out
shl
scas
scas
push
dec
push
popf
mov
and
fs
cmp
imul
pop
loop
push
inc
xchg
fstp
mov
xchg
fstp
fsub
sbb
repz
call
mov
outs
jo
xchg
aaa
mov
add
mov
clc
lods
js
stos
sbb
data16
lods
test
outs
adc
lds
xlat
loop
movs
pop
jmp
jns
add
fnstsw
cmp
jae
sub
enter
aad
inc
je
sbb
jno
and
ds
push
push
pop
fidivr
fld
sub
mov
mov
cmp
mov
push
pop
push
mov
pop
cmp
test
ficomp
push
jge
ja
dec
ror
mov
test
jmp
or
sub
cmps
call
pop
sub
pop
hlt
adc
aam
jg
arpl
loope
das
mov
cmc
fld
jle
pop
icebp
push
ss
push
sub
pop
std
ds
sub
pop
pop
push
popf
cs
loop
out
xor
sub
imul
shl
test
aam
ins
sub
add
and
jnp
inc
in
sbb
jo
and
add
xlat
cmp
dec
xor
sub
or
adc
(bad)
hlt
int3
and
in
lahf
nop
enter
je
xor
je
sbb
cmc
data16
popa
cmps
mov
scas
std
sbb
lahf
mov
dec
add
jmp
add
fdivr
out
aaa
fist
xchg
jae
sti
mov
cwde
and
fadd
mov
into
jg
push
lahf
cmc
stc
and
or
push
or
sbb
aaa
jbe
jmp
scas
pop
adc
pop
jno
inc
cmc
out
cs
out
out
inc
push
add
(bad)
js
pushf
xchg
mov
call
push
xlat
xchg
mov
cmps
and
pop
pop
arpl
loopne
inc
mov
mov
(bad)
pushf
dec
dec
aaa
xor
out
cmp
das
lods
rcl
repz
mov
push
or
cmp
fisub
inc
outs
cwde
jmp
push
std
sbb
(bad)
clc
retf
mov
out
mov
stos
dec
mov
push
je
popa
mov
jmp
iret
in
in
inc
(bad)
pusha
jecxz
(bad)
or
push
fsubr
ret
xor
popf
pop
jns
addr16
xor
inc
aad
sbb
cld
cmps
fwait
loope
push
mov
push
mov
sub
xchg
sbb
sbb
xchg
in
push
pop
pushf
sub
arpl
retf
inc
scas
xchg
loope
xchg
adc
xor
shl
fcom
mov
pop
dec
movs
adc
pop
inc
mov
out
inc
dec
cmp
(bad)
dec
int
and
lds
sbb
jecxz
imul
call
in
sahf
fs
pop
js
xchg
not
mov
mov
add
mov
add
mov
xor
call
jnp
jbe
popa
push
fisub
(bad)
call
inc
inc
mov
fidivr
fnsave
cmps
adc
repnz
dec
xchg
imul
mov
jne
std
pop
xchg
jo
out
pusha
add
and
mov
jle
sub
jne
push
not
jmp
jg
sti
jb
stos
test
pop
idiv
mov
and
stos
sub
popa
(bad)
pop
inc
icebp
imul
in
and
fmul
xchg
dec
data16
add
mov
inc
sub
adc
jmp
cmp
mov
add
daa
push
ds
icebp
mov
jns
mov
push
cmps
int3
mov
mov
cmp
mov
mov
pop
or
je
in
sbb
push
sbb
(bad)
jecxz
ret
cwde
pushf
adc
pop
sub
fld
scas
nop
mov
sbb
rcr
lock
add
adc
push
(bad)
cmps
cld
mov
mov
jnp
popf
loop
and
fistp
push
mov
lds
inc
add
dec
int
sbb
jne
enter
cmps
jmp
stos
mov
das
fsubrp
push
jns
or
les
mov
sub
inc
pop
test
cmc
lahf
push
add
cmc
jge
mov
mov
retf
ret
fstp
mov
lea
jae
sub
mov
sub
outs
mov
fdivr
add
jl
and
pushf
jle
stos
jmp
icebp
sbb
cmps
retf
movs
sub
lods
retf
nop
push
es
cmc
ret
dec
(bad)
das
(bad)
iret
push
call
fidivr
mov
and
lock
push
rcr
or
cli
(bad)
(bad)
xor
clc
popf
xchg
jecxz
pusha
push
xor
cmps
cmp
clc
xchg
fnstsw
std
adc
std
(bad)
mov
out
loop
ficom
ss
(bad)
iret
idiv
sub
mov
pop
xchg
(bad)
(bad)
sbb
call
nop
jmp
push
inc
xchg
enter
mov
aaa
retf
out
outs
(bad)
and
(bad)
pushf
fbld
int
pop
(bad)
jge
mov
sar
mov
in
cmp
ret
ins
push
lods
fcmovu
ss
pop
sti
sub
push
(bad)
rcl
das
xchg
sub
retf
cmps
(bad)
mov
inc
mov
sub
dec
pop
xor
hlt
test
jnp
addr16
sete
bound
cld
mov
or
cmp
xchg
stc
jp
jle
mov
adc
cmp
mov
neg
push
fst
cmp
mov
rol
xchg
loope
xchg
mov
shr
shl
int
cmc
icebp
mov
xchg
bound
adc
clc
outs
push
sbb
xchg
sbb
fidiv
push
xchg
dec
inc
xchg
jecxz
add
into
imul
(bad)
iret
jmp
mov
outs
adc
sub
push
cli
xor
aas
aam
cmp
adc
inc
push
in
inc
sbb
pop
pop
movs
xor
stc
fstp
les
ds
or
loopne
mov
mov
imul
scas
mov
lds
(bad)
in
pop
repz
inc
dec
(bad)
push
sbb
mov
cmp
pop
xchg
push
sti
(bad)
xchg
or
fdivr
sub
ror
push
pop
rcl
loopne
js
pop
mov
cdq
cwde
jnp
enter
sahf
dec
pop
es
(bad)
xchg
leave
movs
ret
sbb
shl
push
repz
sbb
push
inc
push
out
sub
xchg
sbb
sub
dec
xor
or
out
imul
cmp
adc
lahf
nop
dec
sub
push
into
ds
sbb
comiss
test
fisubr
sub
mov
add
dec
mov
ss
xor
cmp
or
mov
scas
(bad)
arpl
repz
pop
lock
lods
aaa
ds
es
and
push
xor
push
push
inc
fistp
or
jne
jp
test
call
mov
mov
and
sahf
add
push
out
push
pop
es
push
in
fdiv
test
out
pushf
into
leave
test
mov
dec
adc
hlt
dec
pusha
pop
in
xor
pop
cmp
pop
sub
and
xchg
jle
sub
pop
push
cld
lds
imul
mov
sbb
mov
aam
test
or
jae
dec
scas
out
loop
inc
jl
adc
inc
xchg
sti
mov
mov
add
mov
xchg
stos
or
fnstsw
sub
bound
dec
lods
mov
aas
ins
sub
mov
mov
das
loop
inc
ja
mov
adc
cwde
fsub
icebp
test
out
sub
(bad)
jae
idiv
sar
fild
ins
arpl
add
stos
xchg
sbb
dec
cdq
jnp
mov
lds
jecxz
and
in
lahf
out
add
test
pop
dec
add
jp
rcr
jo
or
mov
inc
mov
xchg
add
pop
inc
outs
(bad)
fild
shr
inc
xor
pop
ss
cmp
(bad)
outs
cwde
mov
pushf
adc
sar
push
add
aaa
loope
inc
sub
aas
(bad)
adc
idiv
popa
imul
mov
enter
test
aaa
rep
ret
push
out
in
xchg
fsubr
sub
mov
push
push
ss
mov
cdq
and
(bad)
pusha
outs
mov
mov
mov
fxch
mov
sub
(bad)
dec
jb
jmp
lods
sub
push
jge
cwde
leave
pop
into
xchg
daa
clc
stc
fnstsw
push
cmp
jmp
cmp
mov
pop
imul
xchg
clc
jo
xchg
push
mov
ja
shr
and
jl
adc
push
xchg
push
jge
inc
loopne
pop
mov
sbb
sub
imul
pop
jl
cwde
hlt
add
iret
mov
lds
loope
loope
dec
lods
ss
rol
xchg
div
loope
mov
inc
repz
sub
pop
mov
inc
and
(bad)
jle
xchg
jp
gs
test
scas
aas
adc
arpl
mov
pushf
jae
xor
inc
lods
(bad)
push
sbb
inc
mov
mov
cmp
sbb
cdq
retf
xchg
loopne
ds
push
mov
xor
mov
scas
and
nop
jmp
fs
xchg
sti
cmp
(bad)
lods
call
cmp
adc
ins
lock
push
int3
or
dec
mov
cmp
jecxz
cmp
jbe
xor
xchg
adc
and
ficom
mov
shl
jecxz
cmp
push
mov
(bad)
out
push
rcl
push
movs
shr
xor
outs
xchg
mov
adc
pop
fmul
lods
sahf
cli
mov
sbb
movs
mov
mov
mov
(bad)
fs
cmp
mov
imul
nop
xchg
out
push
or
jb
stos
xchg
sahf
loop
aas
jns
dec
cdq
ja
aam
add
xor
jecxz
loopne
out
xor
xchg
(bad)
xchg
push
(bad)
aas
hlt
std
aam
sub
push
inc
arpl
sub
mov
dec
inc
add
pop
mov
dec
bound
mov
or
dec
(bad)
or
pop
pusha
push
or
xor
repnz
mov
or
or
lock
sub
scas
addr16
xor
dec
out
cdq
popf
xchg
pop
cmp
js
loop
retf
ins
jge
(bad)
sbb
test
ins
push
aad
xor
aas
or
test
jns
xchg
adc
jnp
jge
sub
pop
(bad)
movs
add
push
dec
sbb
dec
add
fsub
push
jg
cmps
gs
jge
dec
(bad)
(bad)
fbstp
add
out
aaa
mov
(bad)
or
fistp
sub
dec
dec
adc
or
pop
adc
sar
and
jne
inc
push
cmp
in
cli
inc
enter
xchg
pusha
and
or
pushf
sub
mov
cmp
or
pop
es
mov
or
imul
scas
sbb
xor
mov
and
das
bound
and
shl
inc
jle
pop
inc
xchg
in
ret
xor
sub
dec
stc
ret
popa
xor
and
jmp
in
dec
inc
scas
sbb
xchg
add
call
xor
outs
fstp
enter
ud2
cmp
inc
inc
in
jmp
sbb
ror
fs
sysret
clc
push
ins
loope
jns
jecxz
xor
or
push
or
stos
jno
mov
ficomp
mov
push
pop
neg
jmp
ret
inc
or
icebp
mov
add
mov
(bad)
jmp
add
push
aas
aaa
sbb
inc
lods
test
ret
mov
sub
in
in
dec
pusha
adc
test
ss
mov
shr
push
mov
in
(bad)
dec
les
mov
mov
mov
xor
cdq
pop
pop
cmp
retf
outs
cmps
push
xchg
adc
(bad)
pop
jle
mov
shr
cld
push
sbb
jecxz
adc
daa
mov
pusha
bound
arpl
popf
jb
push
cmc
xchg
xchg
sar
jnp
sar
imul
es
js
idiv
jb
pop
sbb
cli
cli
lds
inc
xchg
shl
adc
dec
mov
test
sbb
cli
xchg
rol
pop
mov
in
cmp
xor
lods
mov
(bad)
leave
dec
and
or
out
jae
mov
push
retf
adc
mov
jae
sbb
pop
push
cmp
xchg
imul
test
ret
cmp
rol
ds
pop
mov
xor
cmp
aam
xchg
cmp
cmp
lds
arpl
sub
jecxz
pop
xor
fs
stc
rep
ins
gs
sbb
or
adc
retf
or
xor
out
in
and
cmps
in
sar
cs
jmp
sbb
sbb
or
mov
mov
mov
call
cmps
cmp
push
dec
push
repz
cmp
loop
cmp
jb
jmp
jne
xchg
pop
sahf
sahf
pop
pop
(bad)
cmps
scas
pop
das
mov
mov
loop
mov
pop
or
push
pop
ins
out
sub
ret
div
inc
test
ret
ret
(bad)
lods
outs
repnz
pushf
inc
ss
fist
mov
push
icebp
or
cmp
out
adc
ins
cmp
nop
call
mov
sub
sbb
sbb
jno
sahf
gs
pop
or
imul
sbb
mov
xor
push
iret
(bad)
adc
out
iret
ss
sbb
push
sbb
aaa
cmc
call
int3
sbb
cmps
xchg
or
inc
sbb
outs
dec
loop
bound
mov
push
xchg
std
pop
dec
dec
mov
push
mov
inc
mov
idiv
xchg
mov
xor
mov
loop
push
fsubr
cmp
push
jecxz
sub
mov
or
cmc
jl
imul
inc
or
fs
add
and
rol
inc
(bad)
cli
push
in
adc
xchg
aam
jg
add
mov
leave
fstp
mov
adc
vunpcklpd
outs
or
out
ret
pop
adc
and
dec
mov
or
sbb
add
jno
outs
jno
xchg
jbe
es
test
clc
xchg
xor
adc
mov
je
push
aad
dec
fwait
ret
mov
dec
inc
inc
sub
fmul
dec
push
mov
or
iret
jno
pop
mov
mov
jne
fisubr
mov
or
sar
leave
icebp
push
inc
retf
loope
dec
rcr
xor
outs
push
mov
popf
mov
or
outs
les
pop
sub
jae
and
xor
xchg
das
or
aas
(bad)
or
pop
call
push
sub
or
sbb
push
aaa
jmp
test
inc
lods
cs
inc
sbb
mov
call
call
mov
(bad)
xchg
jmp
sbb
dec
mov
cmp
cli
loopne
and
push
scas
stos
subps
dec
and
push
and
ror
mov
add
call
shl
es
jae
movs
jns
(bad)
ret
or
xor
and
mov
cmc
jbe
push
add
and
xor
mov
cmps
sbb
mov
mov
xchg
ficom
repz
pop
sbb
cmps
push
inc
cmp
loopne
scas
shr
stos
popa
lock
inc
sti
mov
repz
ds
pushf
mov
js
cmp
push
xchg
dec
xchg
and
aas
(bad)
mov
popf
xor
push
fimul
out
mov
sbb
cmp
xor
(bad)
in
pop
test
pop
fist
out
push
jmp
sbb
retf
(bad)
cld
xchg
rcr
rol
test
jp
loop
pop
mov
popa
adc
mov
gs
test
and
mov
add
iret
jmp
jnp
fs
cmp
fsub
mov
mov
repz
jp
pop
sahf
imul
jbe
xor
in
mov
adc
xchg
ficomp
stc
add
getsec
xlat
inc
inc
xor
mov
or
mov
daa
imul
lods
ret
jbe
jns
xchg
pop
mov
retf
adc
mov
push
arpl
daa
mov
inc
fcmovb
lods
addr16
les
sub
add
jge
in
xor
(bad)
inc
imul
xchg
and
rcl
xor
mov
mov
dec
imul
icebp
or
mov
retf
jmp
inc
inc
mov
or
mov
test
ficom
jl
daa
shl
cmp
xor
iret
sar
mov
popf
outs
nop
xchg
push
jne
leave
(bad)
popf
xchg
sub
dec
cli
int3
mov
cwde
loop
dec
nop
pusha
outs
inc
inc
cdq
nop
push
pop
ds
js
pusha
in
push
dec
cmps
fiadd
int
fwait
jecxz
jo
fild
es
mov
(bad)
mov
push
jle
scas
cmp
outs
cmps
sti
add
ds
out
mov
ds
call
and
out
pop
dec
data16
retf
fidivr
pop
into
mov
enter
inc
adc
popf
xchg
xchg
pusha
jo
bound
push
movs
adc
pop
or
add
sub
push
ret
xchg
int3
(bad)
sbb
clc
prefetcht0
call
outs
pop
xchg
add
sub
jg
pop
xchg
cwde
xor
xchg
call
fsubr
stc
xchg
mov
dec
les
call
pop
ss
not
out
dec
(bad)
out
cmp
push
xor
jp
dec
sub
inc
fcom
test
push
lea
pop
jg
shl
fnstenv
mov
repnz
dec
mov
outs
pop
fist
jo
and
jmp
psubusb
ja
sbb
adc
pop
cmp
push
xchg
or
push
arpl
bound
and
adc
sbb
outs
rcr
xor
je
xchg
arpl
jns
(bad)
push
sbb
rcl
fdiv
out
(bad)
jmp
lds
cmps
(bad)
call
sbb
enter
fwait
in
lods
mov
sub
cmps
aam
loope
mov
pop
sahf
loopne
sbb
inc
pushf
cs
movs
add
into
or
shl
into
or
cmp
mov
cmps
pop
sbb
inc
push
cmp
sahf
test
push
push
mov
addr16
ret
stos
mov
cmp
adc
cmps
mov
sbb
aad
cmp
xchg
loope
(bad)
inc
dec
int
pop
inc
mov
xchg
inc
push
sti
adc
push
inc
mov
cmp
cmp
movs
inc
imul
leave
add
mov
sub
sahf
sbb
cmc
adc
aad
test
mov
les
jge
imul
aad
mov
mov
or
out
in
adc
mov
cmp
adc
ficom
mov
sar
(bad)
mov
add
inc
mov
stos
sub
(bad)
jns
aam
rcl
sub
ja
in
sub
push
xchg
stos
(bad)
jmp
and
data16
imul
dec
xchg
sbb
inc
jp
cmp
sbb
fld
lds
(bad)
jne
(bad)
ja
dec
add
and
inc
dec
mov
(bad)
shr
cs
out
or
inc
ja
jecxz
xchg
in
mov
cs
dec
and
repnz
or
jl
scas
in
sub
inc
cmp
cmp
push
dec
mov
dec
jb
out
gs
push
out
rcr
mov
mov
in
xlat
clc
outs
bound
or
inc
popf
lods
jl
mov
jl
inc
in
fadd
inc
les
stos
sub
mov
mov
sahf
(bad)
xchg
sbb
mov
pop
scas
out
mov
sub
outs
xchg
cmp
and
add
enter
inc
jo
js
push
mov
jmp
xor
cli
lods
push
ret
aad
ins
sub
sar
sahf
or
push
test
(bad)
jge
mov
jo
jne
xchg
jnp
dec
scas
mov
das
dec
mov
or
xor
jo
pop
stos
mov
jno
mov
dec
retf
sbb
push
je
clc
xchg
mov
shr
mov
sbb
mov
in
pop
test
lahf
test
mov
imul
movs
test
xlat
arpl
xchg
or
cmp
cdq
retf
mov
mov
(bad)
pushf
out
pushf
ja
push
mov
inc
dec
pusha
push
test
dec
out
add
fimul
movs
out
les
push
in
cmp
outs
add
enter
je
mov
mov
gs
mov
out
pop
sti
jecxz
sbb
push
lods
(bad)
cli
imul
or
popf
imul
jp
and
outs
retf
stos
jmp
retf
sub
sub
ret
outs
cmp
fwait
jae
mov
jmp
addr16
mov
rol
movs
fld
xchg
clc
xlat
jge
mov
fsub
add
mov
daa
adc
repnz
sub
mov
mov
push
addr16
xor
dec
cmps
push
cmp
in
jle
mov
pusha
leave
mov
push
push
repnz
ret
adc
pop
cmc
sbb
aaa
cmp
test
(bad)
sbb
inc
xchg
iretw
and
add
mov
aas
call
and
xchg
call
test
or
repnz
nop
in
jle
pop
sub
lods
outs
or
mov
and
adc
mov
jns
shl
xor
xchg
sub
sub
adc
je
out
movs
test
loope
jae
push
and
mov
cmp
inc
sbb
cs
ins
mov
xchg
push
fisubr
add
rcr
ret
cmps
jl
dec
cmps
mov
jns
stos
data16
add
push
loop
lods
and
and
loopne
sbb
dec
je
sub
ins
fisttp
test
call
mov
int3
or
inc
xor
scas
inc
jae
test
sub
lds
loope
mov
push
inc
(bad)
fsub
jne
div
ds
fadd
cmp
jle
(bad)
or
retf
inc
mov
xchg
ins
aad
and
or
or
into
xchg
mov
adc
pushf
adc
fld
mov
movs
int3
test
cmps
pop
data16
stos
push
sbb
fbstp
xor
adc
push
and
not
jmp
fadd
jmp
les
sub
addr16
xchg
outs
inc
cmp
mov
ds
mov
(bad)
mov
(bad)
out
das
lods
leave
mov
mov
clc
mov
push
cdq
cmps
mul
cmps
addr16
(bad)
call
imul
push
jl
repz
push
pop
pop
jecxz
mov
mov
movs
into
je
test
lock
ficom
add
shl
jno
dec
loope
loopne
jbe
stos
bnd
jp
push
xchg
out
or
xor
mov
or
(bad)
mov
jmp
mov
(bad)
cmc
ds
int
cmps
xor
(bad)
aad
adc
outs
xchg
es
dec
out
cmp
stos
(bad)
pop
xchg
retf
pop
(bad)
jmp
(bad)
aad
mov
aam
fimul
pop
sbb
sub
cmp
or
push
lahf
inc
xor
push
mov
call
int
dec
adc
retf
retf
push
movs
pop
xor
bound
das
inc
ror
pop
cwde
sub
sti
shr
cmp
out
jnp
jne
push
sub
out
out
sbb
and
jg
test
adc
mov
xor
fsub
les
mov
mov
cld
adc
mov
push
push
mov
fs
outs
push
into
sub
add
(bad)
in
fld
pop
ds
retf
jecxz
popa
repz
retf
outs
push
pop
jp
sbb
fnstenv
adc
and
mov
cmp
and
sbb
inc
push
mov
push
mov
xchg
icebp
pusha
xchg
shr
xchg
aas
push
push
int3
mov
fbstp
xlat
mov
mov
adc
repz
push
ret
icebp
outs
lds
fnsave
in
mov
pop
add
hlt
push
sti
xor
(bad)
(bad)
or
jl
jnp
pop
sub
adc
dec
cld
bound
inc
or
or
push
repz
mov
xor
imul
fst
icebp
jg
enter
mov
dec
dec
dec
outs
inc
add
sbb
scas
pop
and
sub
cmp
push
sub
cdq
or
add
jae
lock
retf
dec
loopne
popa
jg
push
js
imul
jl
mov
or
dec
imul
push
jecxz
retf
dec
mov
jmp
aaa
enter
jecxz
enter
imul
push
mov
inc
movs
sbb
(bad)
retf
mov
mov
or
call
in
sub
int
ins
push
aad
cmp
xchg
sub
movs
mov
popa
pushf
and
push
cmc
hlt
ror
mov
pushf
xor
push
movsx
dec
lods
fsubr
adc
or
scas
repz
and
dec
int3
pop
not
xchg
mov
jmp
sbb
cmp
pop
push
enter
call
xchg
movs
lods
scas
push
repnz
ds
pop
stc
je
mov
sti
xchg
and
loop
and
mov
retw
or
xor
leave
test
shl
fisttp
in
jns
retf
aas
int3
sahf
add
adc
add
popf
test
sti
popf
aam
pop
push
jno
stc
xchg
dec
pop
cli
mov
int
mov
mov
lahf
sahf
enter
out
sahf
popf
mov
loope
mov
in
test
es
xor
xchg
mov
jne
cmp
push
xchg
jl
push
daa
push
lods
cwde
fld
xchg
test
pushf
imul
scas
es
push
jecxz
in
js
cmp
xor
xchg
push
push
pop
mov
arpl
scas
jp
aad
in
and
inc
ficom
xchg
cwde
add
fld
xor
rcl
dec
lea
inc
mov
push
cmp
daa
in
stos
push
push
in
aam
not
push
push
stos
and
sbb
out
scas
dec
sub
inc
lds
or
mov
sub
iret
ret
ins
dec
fcomp
aas
pop
(bad)
and
out
scas
loope
pop
pop
cmc
mov
scas
idiv
neg
ficom
lock
mov
add
xchg
loop
(bad)
and
sub
(bad)
cld
dec
outs
jb
mov
dec
push
or
xchg
xor
(bad)
pop
call
jbe
call
xchg
jno
test
jmp
mov
xor
scas
dec
lahf
inc
ror
inc
dec
xor
sbb
cli
mov
cmps
sahf
test
fisttp
leave
mov
dec
or
adc
fs
push
push
cmp
(bad)
repnz
mov
adc
add
or
add
retf
xchg
(bad)
repz
lods
repz
xchg
out
(bad)
jg
add
adc
ror
pop
daa
lods
ja
outs
mov
stos
push
in
mov
int
jbe
popf
mov
and
test
mov
mov
retf
cmp
mov
push
fcomi
sub
mov
fidivr
daa
sub
inc
enter
pop
(bad)
leave
imul
jns
adc
pop
in
fldenv
scas
lea
shl
icebp
les
sahf
js
mov
nop
dec
ficomp
pushf
call
jmp
call
xchg
iret
ins
pop
pusha
sti
or
dec
cmp
mov
push
clc
push
into
ds
ds
test
fdiv
sbb
sbb
and
enter
popf
mov
xor
mov
sub
outs
imul
leave
sub
adc
xchg
push
imul
jae
dec
xlat
mov
sub
out
inc
dec
inc
fcomp
aad
xchg
icebp
push
mov
outs
outs
fild
fdiv
or
push
sbb
shl
push
dec
add
mov
mov
xor
adc
rol
push
scas
adc
fimul
or
jmp
xor
test
js
sbb
(bad)
pop
push
or
aad
adc
xchg
rol
test
xchg
sbb
inc
fdivr
div
into
push
shl
xor
iret
xor
outs
dec
retf
cmps
sti
or
popf
popa
icebp
sbb
fld
dec
test
fmul
scas
pop
xor
adc
jno
cmp
pop
sub
lds
std
int3
pop
mov
shr
loope
cmp
push
dec
dec
cdq
push
mov
dec
jo
ds
imul
sbb
dec
rcl
or
mov
stos
xchg
outs
lea
out
mov
mov
cmp
xor
movs
shl
adc
mov
cmp
mov
mov
sti
mov
popf
push
imul
cmps
in
sbb
fisubr
xchg
call
popf
xchg
inc
and
arpl
mov
and
cmp
aam
cmp
and
adc
out
into
xchg
ins
pop
and
sub
push
xchg
push
mov
stos
xlat
test
je
retf
mov
mov
add
or
into
cmps
dec
mov
nop
dec
jg
inc
inc
mov
add
fnstenv
and
sahf
xlat
movs
ja
test
xchg
inc
(bad)
lea
in
js
sbb
xlat
jl
sar
mov
push
pop
pusha
in
adc
in
or
iret
and
push
jo
ins
sbb
jae
pop
(bad)
sti
add
or
or
dec
jae
data16
xchg
cmp
and
leave
jb
xchg
leave
jb
test
add
or
sbb
out
dec
outs
imul
sahf
out
addr16
cs
sbb
mov
lods
xor
loopne
cs
xor
(bad)
imul
stos
pop
sub
mov
inc
push
mov
es
push
test
nop
popf
loope
jno
inc
pop
movhps
inc
mov
jns
jno
jp
pop
out
sbb
movs
add
add
jbe
push
sub
sti
inc
fimul
jle
dec
push
or
push
cmps
imul
popa
sub
push
adc
push
mov
fistp
ins
ret
sub
retf
repnz
lahf
int
dec
repnz
mov
inc
jns
dec
sbb
jp
mov
ins
aam
mul
xchg
loopne
daa
jns
push
xchg
xchg
pusha
sbb
sub
test
dec
lds
mov
mov
dec
js
sub
lahf
adc
popf
ja
outs
(bad)
dec
xor
nop
xchg
lea
jge
cmps
dec
jae
dec
and
ja
call
push
stos
dec
xor
adc
fidiv
jo
je
add
stos
push
lds
pop
inc
xchg
sbb
mov
push
ja
mov
or
push
repnz
adc
aas
adc
or
mov
lea
adc
out
movs
pop
outs
push
mov
or
dec
fxtract
outs
mov
idiv
ja
cmp
cli
inc
pusha
retf
pop
add
mov
fbld
daa
dec
repnz
ds
add
into
jge
cmp
jne
lea
daa
pop
ret
sar
pop
cmp
ret
xchg
(bad)
jmp
into
add
popf
aam
fimul
mov
out
jmp
push
mov
ds
into
push
or
xor
repnz
icebp
test
out
fwait
sub
cmps
xor
xor
nop
xchg
repz
xor
sbb
in
inc
(bad)
icebp
jmp
mov
rcl
and
jl
ret
mov
addps
push
adc
fldcw
xchg
dec
mov
(bad)
(bad)
ja
outs
mov
sbb
pushf
or
and
sti
(bad)
mov
stc
push
(bad)
jmp
lods
inc
call
cmc
stos
fcmovu
and
movs
js
out
aas
and
dec
jge
adc
inc
stos
adc
adc
test
lods
pop
aad
xchg
mov
in
xchg
int3
fadd
sbb
gs
pop
push
stc
jmp
dec
mov
pop
ror
xor
sbb
pop
retf
xor
leave
mov
mov
int3
ror
mov
mov
or
add
into
bswap
ss
push
xor
jge
clc
icebp
xor
sub
jns
repnz
add
xchg
jmp
push
push
or
clc
pop
jecxz
call
cmps
dec
mov
jb
jnp
mov
(bad)
(bad)
sti
imul
mov
jl
stc
sbb
stos
test
xchg
stos
fbstp
cmp
pop
push
mov
stos
jg
inc
rol
lds
xchg
lock
retf
aas
mov
jl
call
mov
aas
xchg
jo
arpl
push
imul
add
shl
dec
or
jp
pop
cmp
mov
movs
mov
imul
stos
xor
dec
(bad)
mov
sbb
jl
popf
mov
nop
and
xchg
imul
mov
mov
std
es
and
push
aas
inc
jmp
(bad)
in
mov
shl
sbb
cmp
into
ret
aas
push
push
sub
scas
aaa
cdq
pusha
dec
je
mov
cmp
adc
sbb
dec
ret
loope
xlat
jae
jae
pop
push
mov
pusha
jl
enter
imul
mov
call
outs
ficom
fstp
pusha
test
dec
cmp
jnp
cwde
popa
aas
sub
aaa
dec
scas
sahf
(bad)
scas
and
push
loope
out
sub
lods
sbb
jmp
push
fild
cmps
jmp
jmp
pop
test
fwait
gs
in
data16
fild
movs
dec
pushf
and
xchg
test
dec
imul
popf
adc
xor
and
stos
je
daa
das
pop
cmps
cmps
aaa
mov
mov
mov
or
pop
icebp
loop
inc
sub
call
xor
push
adc
and
mov
xor
mov
in
cmp
test
pop
pop
push
mov
gs
mov
jmp
ret
pop
and
bound
(bad)
xlat
sub
(bad)
push
(bad)
out
pop
cmps
pop
fdivr
pop
mov
test
js
or
or
stos
cmp
add
aas
int
(bad)
push
lock
imul
clc
ret
xchg
jg
mov
and
call
dec
mov
adc
aas
fsubr
mov
mov
mov
jmp
adc
std
and
rcl
aaa
or
fisubr
mov
scas
sbb
movs
enter
data16
xor
or
repz
pop
fnsave
and
mov
in
mov
xlat
(bad)
mov
int
add
fwait
mov
outs
cli
out
xchg
retf
scas
js
mov
sbb
mov
rol
jo
cmp
cld
cwde
test
sbb
cmp
sbb
js
pop
test
movs
in
pop
leave
(bad)
repz
aam
fisubr
xchg
adc
retf
pop
test
test
sbb
push
movs
mov
outs
mov
(bad)
mov
jmp
mov
rcl
dec
or
mov
jae
pushf
push
mov
ja
outs
and
sub
cs
push
gs
rcr
mov
jo
jne
lea
and
jg
dec
aam
adc
loope
dec
sbb
or
xor
mov
jns
daa
push
mov
add
loopne
mov
jle
mov
jbe
stos
outs
push
sbb
push
inc
je
xor
xchg
and
fbstp
sub
ficomp
or
or
enter
cmp
xchg
dec
out
and
(bad)
push
arpl
outs
neg
lods
dec
jo
sub
jae
dec
scas
test
ficom
ins
dec
inc
or
out
cmp
dec
xchg
mov
scas
cdq
jmp
mov
fisttp
xchg
inc
dec
add
or
ret
cli
ret
mov
mov
cmps
dec
ss
iret
in
stos
(bad)
mov
cmp
jo
mov
fst
add
and
xor
test
je
(bad)
xor
iret
icebp
mov
sahf
jl
xchg
loop
add
adc
imul
mov
pop
sbb
xchg
sbb
and
sbb
add
ins
xchg
es
cdq
pop
xchg
mov
popf
jp
icebp
add
mov
and
mov
mov
cmc
jmp
into
cmp
enter
jmp
and
xlat
ret
btc
ds
fs
shl
loopne
nop
lods
or
retf
mov
and
ret
xor
gs
inc
pop
fwait
sar
add
cld
adc
stc
jns
in
sub
mov
push
icebp
outs
scas
cwde
xchg
cmp
jo
stc
loope
cmp
fdiv
xor
sahf
nop
inc
push
enter
and
jmp
and
push
imul
inc
fs
and
pop
in
sbb
ja
cmc
mov
cmps
loope
mov
xchg
lods
and
sbb
cmp
pop
push
mov
(bad)
jmp
push
push
leave
icebp
dec
in
out
sub
inc
and
in
outs
ins
pop
jae
movs
jns
sbb
dec
in
jp
fucomip
shr
retf
rcr
fcmovu
jae
jecxz
popa
dec
cmp
or
shr
daa
mov
ss
cld
enter
inc
repnz
sub
mov
repz
push
int3
jns
jae
lods
mov
test
mov
icebp
(bad)
cdq
xor
nop
test
jecxz
dec
call
add
xchg
sub
repnz
aas
xchg
sbb
or
inc
(bad)
daa
aad
push
adc
out
into
sar
daa
push
ficom
xor
adc
mov
add
mov
adc
xchg
xchg
pop
push
mov
push
jns
call
jge
(bad)
xchg
dec
xor
or
jbe
inc
jmp
data16
jbe
sub
add
cmp
xchg
mov
iret
cli
popa
inc
adc
mov
ins
shr
xor
dec
in
rcr
cld
and
sar
add
cmp
jae
sbb
inc
mov
mov
icebp
sub
rol
jnp
outs
mov
adc
out
and
add
les
shl
push
neg
xor
ja
out
ds
jne
ror
inc
fwait
popa
mov
cld
xor
dec
sbb
stos
pop
pop
adc
cs
bound
jmp
dec
pusha
adc
pop
mov
movs
sub
aas
cmp
dec
loopne
mov
and
aam
jae
imul
rcl
call
adc
stc
mov
inc
jmp
mov
loop
fld
(bad)
cmp
scas
push
mov
fstp
or
mov
test
repz
(bad)
pop
ret
fst
cdq
mov
jl
mov
test
xor
scas
push
jno
sub
dec
pop
out
xlat
and
jle
xor
dec
sub
jno
xor
(bad)
out
sbb
cmp
adc
(bad)
arpl
jle
mov
pusha
stc
loope
dec
adc
das
push
or
call
inc
aad
aas
inc
mov
jno
xlat
xlat
xchg
adc
xchg
mov
pop
and
imul
sub
sar
sbb
mov
movs
inc
outs
mov
push
cmp
inc
gs
lahf
push
cs
cmp
push
cdq
xor
out
test
movs
jnp
xor
(bad)
push
ffreep
fsub
and
test
jg
lods
and
jae
cs
dec
jnp
sub
or
add
and
jle
add
sub
jmp
mov
dec
retf
xchg
fstp
ret
fdivr
leave
and
in
mov
js
pop
mov
or
sbb
cmps
loopne
add
adc
outs
mov
jae
cmp
sbb
push
sahf
push
popa
outs
movs
ss
mov
xlat
idiv
mov
idiv
dec
jg
mov
dec
cmp
add
gs
mov
fnstcw
and
or
int
or
or
cmc
jmp
push
mov
test
dec
nop
add
mov
ror
xchg
cmc
movs
jmp
sbb
lds
(bad)
or
mov
pop
mov
xchg
das
jns
je
loopne
jp
sbb
mov
(bad)
js
ja
mov
ss
iret
aad
push
(bad)
frstor
std
(bad)
push
cmp
call
xchg
mov
or
mov
xor
inc
pop
dec
outs
int
mov
stc
scas
add
mov
push
push
xchg
inc
addr16
enter
pusha
jmp
xchg
fidivr
rol
ret
inc
adc
push
jbe
jmp
imul
mov
mov
(bad)
mov
test
(bad)
loopne
stc
das
pop
and
fwait
push
dec
loopne
test
aaa
push
jmp
adc
mov
test
call
and
jp
mov
sub
pop
mov
inc
push
xchg
movs
push
push
call
xchg
push
mov
xchg
mov
iret
nop
cdq
(bad)
or
sti
push
mov
jmp
pop
arpl
aam
dec
sub
cmc
xor
repnz
push
test
enter
mov
cdq
dec
inc
ins
outs
emms
in
push
repz
pushf
sub
fcmovb
sub
gs
out
loope
pusha
jne
fisttp
or
aam
dec
nop
sbb
cmp
out
xor
jge
mov
inc
js
jg
add
mov
mov
jl
dec
scas
dec
mov
sub
and
jmp
repz
push
jp
cmp
call
cld
and
push
and
sbb
fdivr
loopne
adc
lahf
add
call
les
or
inc
add
out
int3
and
mov
adc
mov
out
fmul
xchg
jp
pop
lock
aam
push
sbb
xchg
cli
dec
and
jnp
ss
outs
enter
arpl
pandn
dec
dec
cmp
retf
xor
test
out
into
and
cmp
scas
or
or
test
ds
cld
rcl
mov
pop
jle
retf
dec
dec
mov
inc
xchg
fcom
add
adc
push
fnstsw
jg
xor
icebp
pop
ins
mov
les
cld
fs
arpl
mov
sub
mov
sbb
call
test
pop
fwait
or
dec
cmp
dec
pusha
loopne
out
and
sahf
(bad)
adc
mov
add
dec
mov
xor
pop
push
pop
imul
test
out
imul
jb
addr16
sub
push
mov
xor
sbb
ret
dec
into
push
pop
retf
push
retf
mov
inc
aaa
ss
jnp
dec
call
lods
xor
and
retf
repnz
rcl
pusha
mov
nop
add
fiadd
cli
in
or
out
loopne
mov
rcl
push
sub
test
inc
das
mov
jo
bound
mov
xchg
cmc
sbb
xchg
push
and
in
rol
or
dec
ins
mov
stos
inc
std
mov
push
cmp
xor
add
pop
xor
les
jae
out
les
pop
rcr
cmp
loop
sub
clc
in
pop
(bad)
push
push
push
mov
addr16
in
sub
cmp
lods
arpl
add
push
je
pop
out
or
or
jge
and
ret
sbb
mov
cmp
fcomp
and
jbe
stc
mov
fisub
mov
(bad)
adc
sbb
repz
push
int3
imul
fsub
jns
cs
mov
test
add
dec
daa
add
sub
pop
inc
inc
pop
cmp
sub
push
les
or
imul
aam
cld
dec
hlt
jge
pop
mov
jb
fnsave
sub
jo
inc
aad
arpl
push
push
aas
xchg
and
std
cmp
scas
cmp
xor
push
jmp
test
xchg
jmp
jecxz
pop
js
cdq
stc
call
call
leave
jmp
les
pop
adc
je
add
call
pop
lock
shr
mov
ds
mov
push
into
pushf
xchg
cmps
dec
fnstcw
cmovns
lods
fst
pop
loop
jo
add
pop
jns
movs
movs
fdivr
retf
jmp
or
push
pop
adc
rcl
ret
push
cmp
inc
dec
cmp
fcom
cli
jg
aam
and
and
adc
repnz
push
fwait
cmps
test
popf
out
jmp
test
ds
or
fidiv
idiv
sbb
lds
not
xchg
popaw
add
lock
popa
mov
test
test
ds
jl
pop
cmp
pusha
and
jge
sub
(bad)
addr16
or
xchg
dec
cmc
shl
cmp
inc
sub
mov
sbb
mov
adc
xor
jne
add
and
sahf
inc
(bad)
inc
inc
movs
dec
mov
jmp
out
ja
mov
fnstsw
and
cld
jmp
ret
mov
dec
test
nop
cmp
fs
scas
jge
push
imul
mov
mov
fdiv
mov
loope
(bad)
mov
lock
scas
push
or
jmp
hlt
not
cwde
jp
jno
(bad)
sbb
nop
inc
cmp
jns
int
pushf
ds
adc
ror
das
push
movs
aam
jg
push
lock
bound
call
xchg
fwait
ins
in
es
shl
cmps
jo
arpl
xor
xor
adc
xchg
mov
dec
add
mov
cdq
push
sub
iret
jno
push
fcmove
bound
jmp
sbb
push
xor
cmp
jecxz
sbb
scas
out
daa
sub
unpcklps
and
or
dec
adc
sub
ror
mov
xchg
jmp
scas
pop
movs
push
pop
sbb
dec
nop
push
add
push
pop
cld
cmp
inc
loopne
pop
out
xchg
xchg
and
mov
xor
push
or
cmp
fmul
lds
push
cmc
test
(bad)
sub
das
enter
data16
mov
push
enter
pop
sub
inc
cwde
pop
scas
std
mov
mov
sbb
cmp
mov
ret
mov
push
cmp
(bad)
(bad)
js
pop
adc
inc
ror
pushf
rcr
sbb
cmp
ret
stos
mov
mov
retf
jno
add
push
mov
dec
test
test
mov
jge
mov
xchg
adc
mov
pop
(bad)
jl
cmp
dec
sti
ret
xlat
icebp
fbld
mov
ror
or
aas
fisttp
jmp
stos
xor
shl
add
cmc
push
call
push
xchg
movs
adc
mov
dec
test
div
ret
lahf
sub
shr
fwait
adc
cmp
mov
xor
pop
fldcw
pop
ret
sbb
outs
mov
dec
hlt
mov
cmp
xchg
push
or
fstp
gs
sbb
xchg
es
dec
enter
stos
in
cmps
cmp
mov
inc
hlt
pop
mov
das
xor
xor
sub
imul
(bad)
loopne
push
jbe
scas
fwait
xlat
xor
or
sub
retf
or
mov
mov
je
mov
cld
jns
pusha
arpl
(bad)
dec
clc
jns
xchg
inc
mov
test
ds
jg
jp
stos
scas
add
or
mov
mov
(bad)
lods
(bad)
nop
xchg
les
es
dec
shl
cdq
cld
xchg
pop
pop
push
add
ss
mov
adc
js
push
pop
pusha
inc
in
loopne
nop
dec
lods
jmp
push
and
xchg
ins
jb
push
scas
push
jl
loop
aam
pop
ins
sub
cmp
dec
mov
adc
mov
movs
xor
das
fcmovb
fs
imul
cmp
sar
lahf
sbb
or
sbb
xchg
sahf
sub
pop
push
dec
(bad)
jmp
test
push
out
movs
inc
cmps
dec
xchg
jno
or
mov
xor
sbb
jb
test
pop
mov
lahf
(bad)
lea
fistp
inc
xchg
mov
push
aad
or
sub
popa
int3
movs
fnsave
jbe
das
jp
fcomp
push
cli
or
movs
jne
xchg
cmp
test
in
sub
mov
adc
iret
dec
jne
adc
sbb
arpl
cmp
pop
jnp
ins
mov
clc
cwde
xchg
inc
out
xor
inc
add
jmp
mov
mov
sbb
in
sbb
dec
dec
fcmovnu
mov
xlat
pop
cmp
jmp
push
ret
jecxz
push
jg
sbb
adc
sbb
sub
cli
jge
mov
or
ret
stos
test
cli
cmc
jns
imul
aam
iret
repz
sub
and
fnstsw
sahf
fcom
push
xchg
test
dec
cmp
outs
mov
xor
cmp
subps
cmps
fdivp
neg
ret
fimul
mov
push
jecxz
mov
push
mov
in
outs
ret
jns
ds
mov
push
lock
sub
ret
adc
xor
xchg
mov
jmp
lahf
(bad)
mov
sbb
icebp
out
inc
jl
push
or
adc
sub
aam
push
sub
mov
pop
mov
cdq
fisubr
mov
je
sti
dec
stos
push
pop
jbe
dec
add
inc
xchg
icebp
mov
mov
mov
or
pop
sbb
es
fidiv
xchg
or
xor
mov
(bad)
lahf
repnz
in
retf
add
sub
inc
jnp
push
(bad)
aas
jmp
xlat
mov
dec
out
int
aad
enter
dec
add
add
push
jg
pop
mov
ret
in
shl
mov
shl
fisubr
push
jp
das
mov
mov
enter
push
leave
mov
jae
out
add
lods
mov
test
popf
push
xchg
and
ins
call
lods
in
xlat
js
adc
sbb
sbb
cmp
popa
out
sar
mov
push
push
lock
pop
call
mov
jbe
test
sub
cdq
dec
aas
mov
jle
mov
push
pop
push
addr16
in
jmp
mov
in
inc
bound
pop
gs
out
cmp
gs
in
ins
push
push
ds
or
pop
(bad)
pop
xchg
stos
arpl
inc
xor
dec
ja
pop
dec
fs
jp
cmp
loopne
inc
das
popa
and
retf
les
push
lods
fcom
adc
ins
jmp
or
sahf
or
xor
cmp
repz
out
mov
add
in
mov
test
push
mov
mov
mov
mov
xor
rcl
leave
out
jmp
imul
cld
mov
(bad)
cmp
mov
scas
adc
ss
(bad)
in
xchg
pop
and
or
popa
pop
sbb
repnz
mov
pop
push
into
aas
jnp
arpl
pop
or
loope
ds
sub
fsubr
rol
pop
popf
mov
adc
movs
movs
shr
or
add
sbb
pop
imul
sub
sub
cmp
and
mov
pop
icebp
xchg
(bad)
xor
aaa
pop
xchg
jbe
xchg
mov
arpl
syscall
or
nop
rol
icebp
add
out
int3
inc
ja
jns
pop
inc
sbb
sahf
add
rol
mov
int
jmp
call
pushf
lahf
mov
jo
inc
xchg
jle
xor
mov
shr
into
scas
dec
nop
push
pop
mov
or
cmc
add
or
cmp
cmp
push
fidiv
arpl
je
sub
mov
test
cli
stos
mov
jl
gs
out
jmp
pop
push
fs
push
neg
cwde
call
push
out
push
mov
push
les
bound
loop
stc
cmp
ins
push
push
aaa
fsub
pop
loop
pop
loope
or
shr
cdq
jo
fdiv
mov
shl
push
aam
dec
aas
dec
stc
aaa
mov
jmp
mov
adc
scas
aam
mov
sbb
ins
mov
shr
mov
lds
dec
or
mov
aaa
movs
cmps
cmp
and
fisubr
mov
adc
mov
ins
and
ffreep
jmp
cwde
scas
pop
cmp
jno
(bad)
vpmovzxwd
ret
ret
jae
(bad)
rol
mov
aad
ss
(bad)
dec
pop
mov
push
inc
sbb
repnz
repnz
mov
inc
pushw
and
add
lds
adc
mov
add
jle
cmp
(bad)
in
cmps
dec
xor
(bad)
ds
loope
pop
and
loop
pop
aad
cmp
push
and
cwde
out
mov
or
icebp
dec
mov
mov
out
add
js
call
jmp
ins
adc
pop
pop
iret
pop
stc
in
loopne
shr
(bad)
push
mov
inc
xor
mov
ds
sbb
pop
add
sbb
aas
inc
xchg
jp
stc
xchg
jns
jl
mov
sbb
cli
mov
sbb
test
mov
xchg
fyl2x
adc
mov
xor
leave
inc
ds
and
cmp
jecxz
sbb
ja
icebp
push
(bad)
jmp
jbe
cs
lds
sub
ins
mov
push
enter
and
sub
add
cmp
lahf
add
mov
fiadd
xchg
movs
mov
xor
mov
out
outs
sbb
dec
dec
call
xor
hlt
xor
mov
jg
and
jae
mov
std
lods
dec
popa
sub
and
pop
rcl
dec
outs
rcl
or
frstor
addr16
retf
cmc
not
xchg
je
out
and
fmulp
out
dec
aam
stos
sub
cmp
push
jmp
push
in
ret
dec
pop
movs
push
or
xor
xchg
daa
ret
adc
jae
ins
inc
sub
scas
call
cmp
mov
dec
(bad)
cmp
inc
add
and
test
iret
inc
sub
mov
mov
push
push
fcom
mov
sbb
hlt
dec
mov
pop
sub
sub
(bad)
push
test
je
jp
mov
inc
dec
js
aad
ret
cmc
loope
mov
add
sahf
dec
dec
xchg
cmp
inc
not
dec
inc
push
fnstcw
dec
std
inc
jp
inc
xchg
or
pop
out
add
fisttp
mov
jbe
enter
and
adc
imul
push
cmps
cmp
retf
packuswb
pop
mov
pop
xor
mov
shl
mov
fwait
lods
xchg
call
mov
ja
mov
cmps
ret
cmps
in
leave
(bad)
fld
dec
hlt
inc
dec
das
rol
push
or
std
je
fidiv
xor
push
shr
popa
xor
xor
daa
(bad)
pop
nop
inc
jno
dec
ja
test
addr16
cli
mov
out
and
sbb
inc
jno
adc
mov
test
xchg
icebp
sbb
and
fiadd
jb
mov
mov
call
(bad)
into
rcr
xchg
cmp
in
inc
xchg
or
jecxz
addr16
xor
lahf
inc
(bad)
pop
ss
and
cmp
retf
pop
or
xlat
cmp
call
adc
bound
mov
dec
mov
mov
push
pop
fcomp
or
inc
jo
fldln2
dec
pop
push
in
inc
arpl
inc
outs
stos
sub
aaa
das
loopne
pop
pop
jmp
loopne
std
fstp
inc
inc
outs
or
shl
xchg
sbb
test
enter
add
loope
and
inc
jmp
cmps
fld
fiadd
pop
ds
and
js
adc
in
add
adc
cmp
push
mov
jl
or
pop
pop
cmp
bound
in
pop
cmp
(bad)
nop
add
push
cli
in
hlt
pop
ins
pop
sub
mov
arpl
aam
repz
leave
cmps
xor
outs
movs
add
pop
dec
pop
cmc
popf
in
jmp
pop
push
dec
lods
xchg
mov
jmp
mov
out
div
cmp
pop
rcl
xchg
mov
push
lahf
or
jmp
cld
sbb
lock
xlat
fstp
xchg
aaa
mov
adc
mov
or
sbb
fistp
and
or
into
and
test
cmp
mov
outs
cmp
aas
out
lods
xor
sub
adc
dec
arpl
mov
clc
xchg
xor
push
addr16
mov
jmp
adc
or
cmp
addr16
pop
push
inc
mov
lds
in
jae
xlat
imul
and
rol
push
xlat
lock
push
sub
sar
jp
pop
fs
ret
inc
mov
(bad)
ja
and
jno
cmc
lahf
add
cmp
cmps
aad
call
leave
push
sbb
dec
enter
outs
sbb
test
js
mov
sub
retf
(bad)
adc
jecxz
jns
add
jae
fwait
out
pushf
in
adc
inc
rol
and
inc
fs
ret
jae
mov
push
(bad)
lds
lds
out
gs
lock
add
mov
xchg
mov
pop
sahf
adc
test
es
mov
int
mov
jmp
aas
cmp
popf
cmp
leave
(bad)
push
in
xchg
push
pop
in
pop
adc
mov
xchg
sub
addr16
pop
aad
cli
pop
in
mov
rol
mov
popf
cmp
mov
in
pop
in
fcmovbe
jecxz
je
sub
dec
pusha
pop
in
out
std
out
jae
pop
sbb
inc
xor
pop
add
pop
fldcw
jl
sub
adc
push
xchg
push
or
jmp
jle
push
jmp
ins
dec
cli
fadd
xor
xor
(bad)
dec
sahf
xor
dec
outs
shl
(bad)
dec
push
ins
sbb
or
imul
xchg
jp
test
aaa
arpl
out
dec
imul
push
enter
jnp
or
arpl
mov
adc
jp
inc
xor
mov
scas
ret
pop
cmp
sbb
lahf
jge
stos
dec
mov
leave
stos
lock
in
or
stos
jl
xchg
fwait
mov
jmp
imul
ret
cmp
jge
and
retf
adc
mov
ret
(bad)
retf
mov
dec
mov
popf
push
retf
rcl
sti
clc
shl
sub
mov
inc
and
iret
cmp
push
in
pop
(bad)
sub
dec
mov
jge
out
dec
mov
iret
pop
out
(bad)
jmp
and
outs
fwait
push
jae
(bad)
cdq
jb
bound
aaa
test
xchg
pop
add
push
mov
cdq
shr
into
jge
xchg
cmp
pop
pop
inc
lods
xchg
inc
lea
cmps
sti
repnz
sub
es
shr
(bad)
je
loope
pushf
clc
div
pop
sub
push
ja
leave
xor
mov
inc
pop
jo
mov
mov
sub
fimul
out
leave
sub
inc
adc
xchg
loope
movs
enter
mov
das
sti
mov
(bad)
mov
sbb
xor
or
add
data16
and
stos
jmp
mov
(bad)
aam
cld
sar
pop
xchg
cmp
jl
ins
mov
fwait
pop
js
fdiv
xor
and
pop
mov
inc
xor
scas
lods
mov
in
or
sti
dec
cmp
mov
imul
xor
ret
in
not
mov
sbb
push
mov
(bad)
cli
add
cmp
sbb
jmp
or
or
neg
into
pop
jb
popa
fisttp
jp
aam
mov
xchg
sti
out
into
(bad)
xchg
sub
adc
cmp
bound
in
or
rol
in
lahf
inc
push
std
lock
in
sbb
movs
outs
dec
ja
xor
ins
jg
adc
adc
or
imul
data16
mul
xchg
test
or
scas
stc
stos
dec
das
sbb
cmp
loop
gs
add
ds
in
out
aam
dec
cmps
arpl
xor
test
js
inc
push
call
inc
cmp
dec
out
xor
push
jmp
pop
jmp
push
shl
inc
or
sbb
ret
call
test
sub
mov
pop
ja
adc
pop
xor
xchg
ins
mov
and
shl
cld
adc
fisubr
cmps
fnstcw
dec
and
clc
mov
mov
jg
xor
mov
scas
adc
fldenv
sbb
ss
movs
int3
ja
iret
adc
cmp
fnstsw
mov
cmp
xor
aaa
and
xchg
xor
add
arpl
shl
out
mov
in
push
mov
or
neg
pop
or
nop
cdq
cdq
fiadd
ffree
jnp
clc
pop
push
jmp
xor
sub
sub
shr
inc
in
jg
inc
es
and
arpl
mov
or
xchg
out
adc
sbb
jnp
loopne
mov
(bad)
or
push
je
ret
call
sti
xchg
in
div
sbb
out
and
push
nop
ds
lods
in
cld
(bad)
fisub
xchg
repnz
dec
mov
inc
rol
rol
(bad)
sbb
sar
inc
mov
aad
mov
push
mov
imul
push
sbb
sub
sti
adc
jb
mov
cdq
adc
add
xlat
xor
out
xor
fwait
inc
pop
add
loop
outs
in
xor
call
push
(bad)
inc
jno
stc
ret
ins
mov
inc
mov
lods
xchg
pushf
xor
and
cmps
dec
sbb
dec
pop
jns
pop
hlt
and
(bad)
loop
mov
fwait
aad
push
(bad)
dec
jmp
jns
push
stos
add
mov
aaa
sbb
(bad)
fcomp
adc
hlt
add
jl
out
sub
sbb
stos
cmp
mov
aad
mov
ins
or
dec
push
mov
adc
xor
xor
jle
add
js
xor
cld
arpl
xchg
mov
mov
cmp
ins
add
mov
cmp
cmp
and
pop
add
movs
adc
test
add
not
jge
int3
arpl
ret
sbb
outs
lds
cmps
test
dec
hlt
add
(bad)
push
mov
dec
aaa
jbe
adc
jge
cmp
cmp
dec
mov
inc
inc
inc
retf
inc
adc
mov
jmp
and
dec
sbb
jns
shl
jmp
in
mov
inc
jnp
xor
adc
mov
cmp
aas
add
mov
in
cmps
das
cld
mov
scas
push
mov
pop
jmp
add
xchg
sbb
std
fstp
dec
xor
test
mov
jno
out
jae
or
ret
test
xor
fistp
sbb
and
or
clc
in
cmps
idiv
(bad)
shl
mov
test
or
icebp
add
neg
pop
pop
sbb
mov
xchg
fld
add
cmp
dec
popa
xchg
not
mov
das
mov
hlt
xchg
mov
sbb
dec
sub
rol
stos
les
jbe
les
adc
inc
sbb
xchg
cmps
mov
jb
div
fsubr
arpl
dec
push
push
ja
cli
rcr
int3
ins
sahf
arpl
in
xlat
dec
adc
xchg
loope
enter
rcr
cmp
cli
mov
or
sub
xor
ds
imul
and
push
scas
imul
mov
dec
push
out
mov
cmp
push
sar
xor
mul
pop
mov
xor
in
push
bound
jb
xchg
fwait
cmp
popf
xor
jne
adc
sub
ds
pop
call
sub
push
shl
(bad)
xor
(bad)
pushf
leave
pop
out
popa
ins
into
jbe
cmps
aam
inc
rol
daa
dec
test
fcmovb
outs
cmps
cld
cwde
das
xor
xchg
pop
push
call
mov
aaa
and
cli
cwde
aaa
repnz
xor
pop
fs
pop
lea
cmp
ins
test
fadd
or
out
outs
sub
mov
jle
inc
mov
jg
pop
mov
and
cmp
outs
fisttp
push
faddp
sbb
push
mov
adc
shl
shl
pop
push
sbb
je
in
js
push
cmp
lahf
repz
leave
aad
mov
xor
mov
arpl
out
dec
push
(bad)
sti
inc
xchg
pop
pop
ffree
repz
adc
or
dec
rcr
mov
into
dec
inc
cmc
js
push
in
jno
ja
mov
add
cld
cmp
addr16
ins
xchg
ror
dec
pop
nop
sub
sbb
fisttp
mov
out
push
xor
mov
jg
inc
in
ins
push
div
cs
add
xor
fisttp
jmp
cld
inc
jnp
adc
jecxz
ds
dec
imul
(bad)
or
hlt
push
sbb
aam
das
icebp
repnz
inc
push
test
and
mov
fcomi
imul
stc
aam
or
(bad)
in
mov
pop
cmps
xor
daa
xchg
sbb
or
mov
mov
aad
sbb
lods
and
ret
int3
mov
(bad)
sti
movs
adc
(bad)
loope
or
or
jo
dec
dec
mov
ds
mov
popf
sbb
jmp
lods
enter
arpl
add
pop
sbb
xor
dec
mov
or
xchg
gs
cwde
dec
in
sbb
mov
jae
jno
cmps
retf
push
jmp
mov
push
sub
outs
xchg
jp
icebp
mov
jns
jp
fdiv
shl
int
ret
out
call
xchg
jle
jle
sbb
popf
adc
loopne
inc
mov
das
inc
xor
hlt
inc
sub
adc
jge
fdiv
imul
inc
fild
fistp
das
sbb
mov
retf
push
xor
addr16
jnp
loop
ins
cmp
xchg
dec
inc
jbe
cmp
xor
shr
imul
test
mov
cmp
ins
ror
(bad)
mov
xor
bound
call
(bad)
imul
mov
cld
out
outs
cwde
je
jge
fild
xor
sbb
push
xor
push
jl
retf
ins
mov
imul
pop
dec
sub
iret
or
sub
add
es
or
push
shl
xchg
xchg
inc
jmp
fld
inc
rol
xor
test
xchg
xor
lock
sub
inc
sbb
cmp
push
mov
or
mov
sbb
loope
mov
push
inc
xlat
into
imul
pop
(bad)
jnp
add
pusha
aaa
dec
cmpps
mov
push
xor
dec
xchg
dec
cli
aas
imul
xor
or
mov
cmc
sbb
fcomp
stos
dec
fldcw
loop
sub
pop
add
rcl
mov
je
cmp
iret
jno
push
cld
loop
jne
dec
add
push
push
and
sbb
pop
sub
sahf
sub
call
mov
pushf
mov
jne
cmp
push
cwde
fst
mov
daa
mov
inc
dec
push
push
pop
rcr
aad
arpl
cmp
scas
jmp
push
dec
in
leave
lods
jmp
cwde
ret
int3
cmp
es
cmp
jg
dec
push
mov
sbb
fdivrp
pop
inc
and
push
(bad)
into
push
push
out
xor
retf
stos
jmp
xor
ficom
ins
ja
stos
sub
fdiv
ins
mov
cmps
repnz
repnz
xchg
popf
jae
jmp
(bad)
pop
mov
ffree
dec
mov
lods
sbb
push
ds
popa
sti
xchg
push
fdiv
outs
ret
mov
adc
fs
lea
adc
jmp
cmps
sub
aad
ss
cmp
or
xor
dec
mov
mov
icebp
out
mov
adc
lock
mov
pop
pop
inc
xchg
xor
std
mov
loopne
imul
in
movs
pop
mov
xchg
cmp
ins
jno
xchg
sbb
mov
and
mov
lss
icebp
repnz
stos
lock
fwait
mov
cdq
rcl
fst
cli
xor
inc
xchg
dec
and
aaa
and
dec
std
ficom
sbb
inc
add
push
sub
pop
add
int
inc
mov
push
cmc
mov
cmc
bndstx
dec
rol
add
or
mov
inc
out
pop
sbb
fistp
les
lahf
gs
das
movs
or
dec
push
xor
cmps
aam
ret
ret
cmp
out
shl
add
xchg
push
aam
jmp
sbb
mov
mov
sbb
add
fldln2
xchg
mov
sub
mov
call
mov
mov
pop
cmp
add
or
xor
cmp
pop
push
or
imul
daa
lock
or
call
(bad)
cwde
int3
shr
mov
loop
in
bound
call
or
fld
not
adc
mov
(bad)
aam
or
adc
shr
test
push
or
sub
adc
inc
or
pop
scas
aam
mov
or
es
xchg
cdq
dec
sti
xchg
in
jmp
psllw
dec
jns
nop
adc
sbb
push
xchg
in
or
dec
mov
cmp
test
add
sbb
mov
and
(bad)
jae
fist
cmps
jmp
add
pop
les
xor
sub
enter
stc
inc
jmp
pushf
fcomp
movs
cwde
add
ja
mov
idiv
push
lahf
jne
jecxz
out
jl
adc
arpl
movs
jge
cmps
mov
test
or
dec
sub
and
sub
mov
and
mov
pop
cmps
minps
movs
out
fistp
mov
in
in
out
les
dec
pushw
clc
lock
fcmovnu
add
adc
adc
arpl
fdivr
push
clc
std
outs
sbb
fnstsw
js
dec
sub
jae
jmp
call
pop
mov
inc
sahf
vpminub
xor
pop
and
loope
data16
xchg
mov
lock
and
cmp
dec
mov
mov
(bad)
loop
cmc
xor
adc
cmp
(bad)
enter
iret
ds
jle
movs
cdq
in
and
(bad)
mov
cmc
in
mov
ja
pushf
jae
dec
bound
jecxz
pop
es
adc
es
hlt
jno
pop
push
movzx
cmp
mov
mov
sar
adc
stc
xor
cmps
mov
(bad)
xchg
inc
mov
sub
inc
add
push
mul
rol
and
and
sub
push
ins
cmps
sub
test
add
call
shr
repnz
inc
and
ss
inc
sub
or
(bad)
or
popa
cmp
mov
cmp
mov
test
iret
retf
aas
pusha
sbb
js
mov
fldcw
vpcmpeqb
cmp
dec
je
and
xor
pop
push
lahf
(bad)
adc
pop
push
in
jmp
adc
mul
push
leave
mov
and
pusha
sti
out
out
cmp
iret
loop
cmp
add
(bad)
loope
mov
mov
xor
cld
mov
or
in
jge
inc
sub
cmp
sub
aad
popa
movs
(bad)
xchg
in
pushf
push
arpl
xchg
inc
sbb
and
out
in
aam
js
push
in
lahf
fimul
mov
(bad)
fimul
add
ins
adc
xchg
into
pop
inc
int3
test
xchg
test
std
leave
aaa
sub
sbb
and
add
jae
inc
and
test
jnp
out
mov
movs
cmp
mov
fs
and
sub
mov
loopne
bound
ds
rol
xchg
xchg
and
lods
and
xchg
jbe
fcmovnbe
enter
test
mov
test
cmps
daa
push
pop
movs
pop
dec
int
jmp
test
(bad)
cmp
push
sbb
and
enter
call
arpl
lods
js
mov
mov
adc
int
sahf
stc
ins
ins
or
xchg
sub
xor
(bad)
mov
dec
add
lea
fsub
cmp
add
ins
je
and
dec
mov
outs
dec
xchg
and
cmc
(bad)
outs
(bad)
(bad)
js
inc
mov
mov
je
mov
pop
push
mov
push
mov
movs
or
xchg
data16
cs
add
fnsave
ror
aaa
cmp
bound
ja
mov
mov
sub
mov
gs
call
mov
jge
mov
mov
push
xchg
or
stos
test
push
inc
push
and
and
fldcw
cwde
pusha
mov
into
xlat
and
mov
icebp
aas
movs
movs
adc
dec
xor
mov
xchg
addr16
xchg
xchg
(bad)
arpl
mov
sar
lea
jnp
lods
add
stc
mov
daa
cwde
retf
jns
jne
shl
call
int
pop
nop
and
inc
mov
cmp
arpl
out
rcr
push
test
dec
pop
and
ins
sti
adc
push
and
sub
mov
enter
jne
ja
dec
repnz
jle
add
jmp
push
in
mov
dec
gs
inc
test
out
mov
imul
sahf
lahf
and
dec
repnz
pushf
push
pushf
jmp
mov
cmp
jle
cmp
inc
and
call
sbb
je
idiv
mov
jge
and
aas
cld
push
aad
mov
push
or
dec
out
lods
pop
push
lods
pop
mov
outs
movs
jnp
inc
mov
retf
ror
std
(bad)
fcomi
mov
and
mov
lds
xchg
aaa
sar
sub
loopne
xlat
sbb
pop
das
pusha
and
ss
add
cs
pop
fist
cmp
pop
jmp
cwde
inc
in
jmp
int
rol
and
jg
lods
pop
cmps
retf
and
sub
dec
xor
ins
push
in
jl
in
pop
mov
or
cmps
addr16
retf
jp
dec
xchg
in
inc
dec
out
scas
pop
call
outs
das
push
mov
mov
sti
imul
and
or
loopne
sub
xchg
in
call
mov
sbb
push
cmp
add
retf
push
aaa
or
xchg
out
adc
add
push
sub
mov
loop
pop
loopne
repz
imul
repnz
sub
lods
sub
jne
lock
ret
ret
sbb
aad
mov
mul
cmp
pop
std
cmp
adc
mov
scas
imul
mov
out
dec
xchg
xchg
repnz
lods
xchg
ja
retf
jbe
sub
mov
jns
stos
xchg
popa
rep
xchg
sub
adc
ret
pop
or
jno
pop
cs
sub
push
mov
jmp
mov
push
sti
sbb
sbb
daa
test
movs
dec
icebp
push
cmc
out
inc
mov
lods
pop
scas
and
jo
pop
wbinvd
leave
sbb
int
dec
hlt
das
dec
inc
clc
cs
repnz
xchg
adc
mov
mov
or
fs
addr16
or
xchg
arpl
xor
lds
adc
bnd
aam
cmp
mov
mov
enter
jecxz
cmp
sub
add
or
xor
ret
(bad)
pop
xchg
push
dec
dec
and
sbb
add
add
xchg
mov
pop
and
out
shl
les
(bad)
pushf
movs
jbe
addr16
nop
addr16
out
call
mov
xlat
daa
aam
stos
mov
dec
outs
das
pop
popa
inc
test
sbb
mov
jo
shr
or
dec
ret
jmp
sbb
push
fld
cmc
imul
xchg
inc
dec
call
inc
cmp
(bad)
out
mov
das
cmp
adc
sahf
(bad)
jo
ds
add
sar
inc
mov
leave
scas
and
dec
mov
xchg
mov
mov
jl
sbb
xchg
mov
fdiv
push
rol
fwait
jmp
cmc
xlat
in
fsubr
in
loop
rcl
jno
pop
scas
into
add
mov
push
pushf
inc
das
push
or
sar
push
push
jmp
push
add
in
repz
cmps
ja
aaa
xchg
sub
call
lea
add
sbb
xchg
and
scas
outs
adc
into
and
mov
xor
sub
int3
jnp
sub
bnd
push
lds
test
xchg
xchg
mov
les
fisttp
shr
test
aam
xchg
(bad)
xchg
in
inc
leave
pusha
pushf
jmp
aas
shl
mov
mov
or
push
and
(bad)
out
dec
mov
mov
xor
mov
mul
hlt
push
cmovns
push
inc
shl
xchg
mov
or
ds
jle
lds
mov
xor
test
inc
and
rcr
dec
sub
push
add
mov
sahf
sub
stos
fsubr
in
test
dec
mov
js
test
daa
push
mov
add
lea
add
aad
not
ja
cmp
cmp
(bad)
clc
push
stc
test
mov
mov
test
fbstp
ss
pop
pop
adc
sub
push
call
cld
mov
pop
jne
(bad)
mov
setb
mov
ror
lds
mov
xchg
stc
frstor
xor
push
(bad)
ins
mov
movs
stc
lods
int
push
and
out
sar
xor
push
inc
data16
cli
out
mov
xchg
ds
je
cmp
jg
cwde
lds
std
lea
push
inc
and
into
mov
aaa
test
xchg
adc
out
dec
sub
xor
cld
popf
pop
mov
int
dec
pop
shl
enter
cmc
ins
push
js
scas
sbb
and
sub
ja
shl
das
loopne
(bad)
mov
fs
cmp
into
inc
push
pop
sub
xchg
xchg
cmps
lahf
xchg
adc
add
and
mov
cmp
add
icebp
xchg
jno
inc
fcmove
jno
jmp
dec
fld
(bad)
movs
jae
enter
cmc
mov
repz
inc
pop
movs
sar
sub
push
pop
ret
repnz
adc
sub
lods
test
xlat
mov
mov
mov
jg
sbb
push
std
pop
out
fadd
sub
xchg
sub
shr
sub
clc
xlat
retf
or
arpl
outs
int
(bad)
lea
pop
push
sub
fwait
cmp
arpl
push
cld
and
jno
xchg
mov
push
xor
stc
mov
cmp
arpl
adc
jg
push
push
ss
xor
xchg
xchg
stos
pushf
or
addr16
popf
icebp
xchg
lds
sbb
push
mov
cld
mov
mov
or
out
dec
adc
mov
push
popf
mov
mov
sbb
add
inc
cmps
mov
dec
popf
push
jbe
or
imul
cld
popf
lods
std
cld
pop
or
xor
jo
mov
icebp
movs
int3
sub
inc
daa
vandpd
imul
adc
lock
and
int3
jl
je
mov
or
scas
jecxz
fwait
call
int
pop
inc
and
shl
push
add
test
add
outs
and
pop
fimul
icebp
mov
pop
sbb
test
push
test
mov
pextrw
or
dec
test
retf
dec
mov
inc
sbb
dec
jge
pop
mov
mov
jno
sti
and
test
sbb
mov
inc
push
fisub
add
inc
test
pop
fsubr
push
mov
(bad)
(bad)
sub
or
mov
add
jne
mov
das
in
sub
mov
jne
popa
adc
jle
mov
ret
jns
jbe
mov
(bad)
fdiv
call
es
movs
mov
push
stc
(bad)
xchg
xchg
dec
out
cld
je
shr
or
dec
or
int3
in
mov
out
mov
scas
pop
cmps
jl
clc
inc
inc
dec
mov
mov
lock
sub
adc
pop
stc
inc
push
pop
movs
or
push
xor
out
ficomp
mov
or
mov
add
jae
and
les
mov
or
outs
push
cli
pusha
popf
dec
imul
xchg
aas
stc
std
pop
push
jb
out
rol
mov
mov
mov
sbb
scas
and
push
and
in
jns
jns
std
and
frstor
dec
scas
pusha
inc
mov
rol
cmp
pop
mov
xor
sbb
adc
pusha
jmp
les
out
imul
ret
in
cmp
in
addr16
mov
fisubr
aaa
mov
stc
loope
cmp
add
xchg
adc
jecxz
ja
test
sbb
sar
push
xor
cmp
mov
ja
add
(bad)
cli
bound
out
fsub
xchg
clc
int
dec
pop
cmp
je
ins
sbb
sbb
push
sbb
dec
shl
loope
ins
out
sbb
in
mov
mov
stos
or
lods
sahf
jmp
and
retf
call
ja
mov
sahf
jmp
ror
jns
jg
or
ret
pop
and
in
mov
cmc
lock
mov
das
xchg
inc
push
leave
in
jle
out
dec
jle
(bad)
nop
sbb
xor
or
in
test
test
cs
push
adc
leave
outs
inc
ins
imul
sub
imul
mov
or
ret
inc
sbb
sub
inc
in
mov
leave
ins
push
push
iret
mov
mov
(bad)
aas
jmp
repz
idiv
call
enter
inc
inc
or
(bad)
cmps
xor
xchg
jl
push
xor
xor
sti
test
popa
fisttp
pop
or
les
pop
jp
ins
cmp
pop
jo
jp
inc
inc
jle
repz
std
jl
outs
dec
mov
xor
push
and
scas
and
jmp
jae
pop
xchg
punpckhdq
mov
ja
cld
test
fs
and
mov
cmp
cmps
lds
retf
mov
sbb
into
test
ins
test
sbb
jnp
cmps
sub
out
jns
adc
add
mov
lds
or
adc
iret
mov
mov
popa
shr
pop
ret
jmp
(bad)
scas
ret
cld
sbb
sti
(bad)
imul
mov
or
push
pusha
sub
fisttp
dec
ins
into
sbb
js
sub
ins
add
add
jl
pop
repnz
xor
data16
(bad)
sub
jbe
mov
outs
aaa
adc
loopne
inc
and
or
sub
les
jbe
inc
fs
cmp
cmp
adc
xchg
loopne
out
call
ins
pop
sub
retf
les
ror
test
cmp
mov
ficomp
movs
(bad)
jo
fwait
xor
js
sub
mov
dec
mov
xchg
mov
jb
shl
jge
shr
in
cld
sbb
not
pop
inc
(bad)
adc
ja
call
cmp
or
inc
ror
inc
xchg
rcl
icebp
jno
or
mov
out
retf
or
pusha
es
mov
shl
cdq
jne
ror
fs
imul
mov
call
push
(bad)
out
xor
pop
outs
jle
rcl
dec
pop
in
lds
(bad)
cmp
inc
popa
pop
inc
sub
stc
scas
scas
test
(bad)
nop
xor
(bad)
jne
sub
test
int3
loope
pop
stc
shl
push
(bad)
jmp
mov
xchg
adc
sbb
int
call
inc
jmp
xor
retf
mov
sbb
rcl
dec
repnz
fsubr
xlat
mov
je
mov
inc
or
cmp
rcr
pop
out
mov
test
je
lea
test
cmp
jmp
(bad)
push
push
in
imul
jbe
cmp
jl
ret
popa
xchg
(bad)
mov
add
enter
pop
mov
scas
scas
mul
lea
lods
imul
pop
mov
add
push
je
into
add
jmp
mov
pusha
xlat
(bad)
loopne
stos
or
pop
cmove
xchg
push
and
ins
push
mov
(bad)
sub
mov
push
call
mov
or
sub
xor
enter
cmp
scas
hlt
mov
leave
shl
sbb
movs
stc
mov
and
jo
lods
mov
cmp
in
aad
xor
mov
ins
pop
cmp
fisttp
dec
jp
test
inc
dec
xchg
push
xchg
(bad)
sub
or
dec
in
mov
(bad)
sti
cdq
icebp
push
xchg
lods
cwde
jmp
inc
fwait
or
or
test
repnz
mov
sub
pop
jbe
lahf
enter
(bad)
mov
into
sub
adc
ror
scas
(bad)
popa
out
mov
arpl
cmps
push
and
and
imul
mov
push
and
bound
cmps
fstp
and
inc
test
lock
ret
sub
sti
and
les
test
dec
imul
retf
fwait
push
jbe
clc
call
(bad)
in
jno
cmps
adc
xchg
jbe
cmps
sub
sub
ins
inc
clc
pop
jae
push
jb
test
cmp
add
dec
mov
es
fidiv
fcomp
jne
sub
jmp
push
test
call
mov
test
mov
rcr
repz
mov
xchg
sub
retf
sub
inc
not
out
and
jge
mov
clc
add
lds
retf
jno
(bad)
nop
iret
mov
jo
jecxz
daa
stc
or
mov
jae
pop
xchg
hlt
mov
leave
mov
nop
imul
enter
(bad)
adc
adc
cmc
adc
pusha
xor
jo
pop
mov
ins
add
pop
and
(bad)
stos
mov
inc
adc
dec
sbb
xchg
jmp
or
xor
add
loop
pop
imul
repz
jmp
ds
xlat
into
out
sub
retf
xchg
jns
cmps
sub
pop
imul
sbb
xchg
sbb
mov
add
retf
lea
pop
fstp
dec
cmp
jbe
test
int3
mov
je
dec
mov
mov
add
(bad)
rcl
popf
imul
jae
jo
xlat
leave
add
xor
push
adc
xor
xchg
add
mov
ja
mov
loope
fwait
movaps
or
retf
push
test
push
pop
xchg
pop
test
and
push
inc
ja
ss
jae
cmc
sbb
mov
lds
or
cmp
retf
mov
lea
(bad)
rcr
inc
call
mov
out
test
push
add
dec
sbb
and
or
pop
xor
dec
aaa
dec
pusha
sub
xor
jae
pop
fmul
cmps
mov
adc
popf
pop
icebp
int
push
enter
adc
sbb
jmp
jb
das
imul
fmul
rol
imul
xor
sub
mov
dec
jecxz
sbb
jb
(bad)
stc
jecxz
sbb
pop
dec
or
xchg
push
mov
inc
push
into
(bad)
aas
not
push
aad
clc
push
cmp
dec
jmp
adc
lods
dec
scas
inc
jmp
add
ror
je
es
inc
int3
not
sbb
mov
aad
jb
ss
add
cdq
mov
xchg
rcl
cs
sbb
mov
adc
dec
les
sub
cmps
js
mov
rcl
imul
or
sbb
int
ret
sbb
call
test
mov
pop
pop
fiadd
push
test
xor
dec
neg
sbb
cdq
ins
daa
jns
mov
lds
repz
fidiv
sbb
imul
ja
and
sub
repnz
rcl
inc
jecxz
xor
fwait
mov
push
stos
lea
shld
ins
(bad)
ss
mov
or
jle
mov
test
xchg
inc
loope
mov
int
and
call
mov
xor
xor
and
sar
fisttp
movs
jnp
shl
lds
add
mov
pop
rcl
xchg
add
lahf
not
addr16
cmc
fsub
int3
(bad)
or
cmps
and
int
cmc
mov
jnp
pop
mov
data16
dec
push
mov
ficomp
adc
int3
shl
loopne
in
aam
movs
add
pop
cmp
cmp
hlt
inc
dec
mov
sub
dec
push
xor
adc
mov
lods
add
dec
dec
jbe
into
repnz
mov
mov
and
and
jbe
rol
scas
sub
(bad)
sub
stos
addr16
pop
mov
popf
cmp
rol
test
pop
bound
cmp
pop
and
cmp
lods
(bad)
mov
jmp
stos
xchg
mov
adc
mov
adc
pop
and
xchg
in
ret
int3
jb
xor
jo
ret
cmp
stos
jp
repnz
sbb
or
mov
in
in
lods
mov
scas
jge
or
pop
xchg
pop
mov
xchg
ss
push
pop
cmp
cwde
aam
dec
mov
div
les
mov
movs
cmp
scas
adc
jecxz
jmp
mov
hlt
xor
mov
lods
jl
scas
mov
and
or
call
imul
out
sub
pop
arpl
fdivp
rcr
push
dec
dec
test
jl
jne
add
jle
pop
sbb
mov
mov
mov
stos
call
outs
pusha
clc
push
jg
int3
into
add
mov
push
push
(bad)
retf
repnz
mov
xor
pop
push
icebp
pop
aad
and
dec
xor
ret
pop
and
or
leave
mov
xor
aam
sbb
or
dec
aas
cmp
cmp
mov
sub
sti
push
mov
stos
fnstenv
sbb
stos
pop
mov
mov
push
fdivr
aad
retf
push
cmp
jb
stc
jmp
cmps
je
cmps
es
mov
sbb
mov
lods
jmp
mov
addr16
imul
cmp
arpl
xor
xor
popf
xchg
movaps
leave
push
inc
and
and
mov
add
mov
or
loop
and
push
mov
mov
xchg
mov
test
jp
inc
cmp
sbb
fisttp
(bad)
test
push
mov
pop
cmc
mov
movs
cmp
daa
add
out
js
int
sbb
mov
mov
jno
sbb
cs
jno
mov
mov
xor
test
pop
jp
in
das
movs
jo
(bad)
mov
inc
jg
fistp
pop
sahf
stos
arpl
pop
sub
push
cmp
mov
repz
retf
cmps
test
mov
adc
and
jne
in
cmp
xor
std
adc
outs
rcr
xchg
leave
jg
inc
sbb
lock
xchg
sbb
aam
xchg
sub
pop
adc
sbb
xor
cmovbe
sub
sbb
mov
nop
xor
movs
mov
arpl
(bad)
mov
add
pop
test
out
sti
mov
mov
cmps
bnd
movs
lds
aaa
retf
cmp
lds
retf
ins
adc
cmp
fistp
jnp
push
add
cmc
sub
sbb
inc
mov
inc
(bad)
push
cdq
jg
repz
pop
or
sub
(bad)
repnz
retf
ja
out
repnz
cmc
std
ror
jg
ins
sub
dec
xor
aaa
jns
stos
ret
dec
jno
out
cmp
inc
prefetcht1
pop
cmps
ins
cmp
mov
push
jg
push
push
pop
mov
mov
(bad)
(bad)
xor
xor
aaa
loopne
pop
test
popa
or
pop
jno
(bad)
test
out
sub
inc
lea
mov
xor
out
scas
pop
(bad)
mov
jecxz
mov
ror
enter
addr16
push
test
sbb
dec
xor
inc
(bad)
out
pop
push
daa
pusha
mov
repz
iret
jo
sub
jns
adc
mov
dec
inc
outs
aam
lock
ror
cmp
in
jge
xchg
xchg
or
xor
and
das
cmp
add
jmp
push
sbb
jae
xchg
cmc
(bad)
xor
out
aaa
inc
cdq
sti
adc
push
ss
stos
out
fiadd
data16
retf
push
jmp
ret
xchg
adc
jmp
div
push
cwde
shr
loop
sub
gs
cmp
cmp
fnsave
sub
sub
mov
(bad)
or
mov
mov
in
out
mov
lea
jecxz
leave
pop
jae
loope
adc
add
inc
out
mov
xchg
cmp
mov
out
dec
leave
pop
std
aas
(bad)
lods
sub
std
in
hlt
jb
xchg
push
out
clc
fnsave
cmp
rol
(bad)
fdivr
jb
push
(bad)
outs
xchg
mov
adc
dec
leave
jle
nop
mov
and
pop
popf
adc
and
nop
mov
mov
int3
pushf
xchg
mov
test
and
test
push
stos
cmc
mov
inc
adc
cld
mov
inc
in
mov
and
sub
std
enter
xchg
outs
jns
inc
pop
or
pop
or
push
ret
inc
das
jg
and
and
xlat
adc
adc
fstp
out
cs
out
not
pop
xor
jne
retf
jne
xchg
sbb
cmp
adc
sbb
and
test
faddp
push
sbb
in
(bad)
aad
adc
jl
stos
jmp
call
out
add
aad
or
jle
xstore-rng
cmps
les
mov
dec
mov
cs
xchg
repz
fdiv
lods
inc
rol
jg
mov
fcomip
retf
or
movs
inc
pop
inc
mov
lods
sub
push
mov
fsubp
jae
movs
sahf
jle
loope
xchg
dec
cli
inc
ss
and
mov
jle
fdiv
stos
and
push
inc
dec
pop
divps
hlt
jle
addr16
test
lock
arpl
and
adc
push
daa
jmp
add
mov
ins
and
aam
ds
ds
cdq
inc
and
movs
aam
lds
cmp
sbb
push
xchg
pop
mov
jge
es
adc
pop
and
mov
jns
sbb
in
xchg
ds
push
mov
popa
popf
dec
sti
push
jl
mov
xor
cmp
jp
out
and
loope
add
scas
pop
inc
add
mov
xchg
fldenv
push
or
sbb
pop
out
add
in
test
and
sbb
movs
bound
std
pop
xchg
cld
int
jbe
les
xchg
xchg
xchg
retf
or
into
xor
movs
idiv
je
lock
call
(bad)
cmps
sbb
fisub
or
sti
in
dec
mov
sti
inc
mov
scas
mov
xchg
fsub
pop
ds
xor
daa
loope
nop
lock
pop
jns
test
lods
add
test
stc
mov
(bad)
hlt
aaa
add
ret
cmps
or
push
ror
movs
retf
or
mov
ins
mov
push
push
add
sti
push
call
push
dec
pop
inc
mov
mov
ss
mov
fwait
hlt
mov
pusha
or
das
lods
imul
mov
cmp
sbb
adc
mov
adc
push
movs
sysexit
adc
push
pushf
mov
xlat
sbb
repz
mov
jecxz
push
enter
mov
jb
cmp
aaa
xchg
cwde
jp
stc
xor
fnsave
pop
clc
and
mov
aaa
stc
mov
mov
jne
fucomp
push
xchg
mov
fdiv
imul
push
sahf
mov
xor
stc
xor
stos
jne
dec
mov
idiv
push
push
imul
xor
call
dec
jle
test
and
dec
sbb
mov
mov
mov
in
(bad)
mov
fnstsw
mov
sbb
sbb
addr16
shl
aad
and
rcl
sub
lds
ror
add
call
mov
mov
and
jbe
outs
mov
pop
pusha
cmc
fwait
inc
repnz
(bad)
nop
iret
sbb
inc
std
in
push
mov
das
or
movs
add
jge
mov
push
sbb
lods
mov
outs
push
pop
into
ret
std
mov
retf
pop
xchg
pop
mov
hlt
int3
dec
or
ret
mov
mov
mov
adc
mov
pop
sub
pop
sub
adc
div
fld
add
xchg
fnstenv
push
dec
mov
or
push
enter
cwde
pushf
outs
pop
jge
jecxz
test
jl
(bad)
out
mov
add
and
xchg
and
int3
mov
push
or
fwait
out
jg
xchg
lea
outs
inc
pop
inc
call
pop
lahf
and
dec
cmp
push
sahf
jge
xor
nop
cmp
xor
inc
std
(bad)
iret
jmp
or
scas
pop
(bad)
jg
shr
mov
in
js
and
and
data16
mov
xchg
mov
out
inc
inc
xor
sbb
int
arpl
jae
jns
out
add
adc
jns
repnz
mov
shl
repnz
lds
jmp
test
outs
lods
out
pop
dec
retf
jl
scas
add
out
push
mov
mov
outs
mov
pop
sahf
hlt
add
inc
movs
fcom
adc
std
pop
xchg
sbb
cmps
int
jmp
adc
outs
dec
jno
sahf
scas
jb
dec
xchg
xchg
lea
push
(bad)
aam
loop
ins
or
mov
mov
mov
jae
inc
cli
repnz
cdq
xchg
mov
push
push
cmp
jno
mov
cmps
cmp
jnp
cwde
jle
fsubr
or
iret
loopne
outs
add
pop
adc
hlt
scas
loope
sbb
out
sbb
xchg
in
movs
jecxz
int
mov
add
cld
lock
mov
enter
ins
sbb
out
je
pop
enter
add
sbb
mov
push
mov
scas
push
retf
inc
push
pop
loopne
out
sbb
lock
sub
sub
into
ror
adc
push
mov
pop
add
mov
jae
or
loope
pusha
sub
aas
jge
pop
lock
lahf
cmp
inc
mov
sub
xchg
jp
inc
xchg
push
sub
cmp
lea
jb
push
mov
nop
aaa
popf
or
inc
repnz
mov
xchg
mov
dec
pop
mov
out
ds
mov
inc
pop
cmp
ins
adc
add
pop
test
outs
retf
mov
mov
retf
cmp
(bad)
mov
mov
push
sti
sub
lds
pop
push
cdq
out
sub
push
and
sbb
pop
(bad)
rol
xchg
enter
(bad)
jno
int3
and
xor
jne
pop
adc
les
xor
and
(bad)
sub
aaa
pop
push
ja
in
icebp
out
pop
js
cmps
pop
mov
dec
xchg
into
in
test
das
enter
ss
mov
leave
out
inc
jmp
jnp
scas
sub
pop
aas
(bad)
push
inc
out
jl
jne
mov
outs
mov
xor
and
gs
test
int
clc
imul
or
mov
and
imul
cmp
push
xor
ja
push
scas
and
push
shl
jp
push
xchg
push
jecxz
cmps
test
icebp
loop
scas
fwait
nop
cmp
sbb
cmp
nop
pop
jg
jns
aam
sbb
loop
(bad)
mov
cmp
xchg
lds
xchg
les
xlat
adc
outs
cwde
and
repnz
shr
xor
xchg
scas
cmp
ret
clc
jmp
jecxz
mov
jg
inc
and
or
xor
sub
dec
nop
xchg
jmp
call
(bad)
test
adc
stc
push
or
rcr
loop
dec
fcos
mov
ds
shr
jne
mov
popa
or
arpl
jge
call
jnp
(bad)
jmp
sbb
(bad)
pop
xchg
pop
add
les
mov
imul
rcr
inc
pop
movs
pop
jp
inc
or
jmp
(bad)
lock
fsubr
lea
mov
les
xchg
push
retf
pop
in
mov
popf
add
pusha
inc
ret
int3
dec
push
push
outs
movs
nop
pusha
and
leave
cmps
loopne
movs
add
mov
push
cmc
push
test
jae
jae
jmp
loopne
mov
gs
push
cs
mov
repnz
mov
or
cmp
add
push
cs
test
cwde
dec
jmp
sbb
jns
inc
mov
dec
call
cld
cwde
bound
leave
enter
cmp
inc
push
and
div
(bad)
sbb
and
adc
sub
jge
in
add
jae
sub
pop
adc
cmp
xchg
lahf
pop
sbb
pminsw
xchg
xchg
mov
xchg
inc
inc
fld
sbb
mov
imul
mov
loope
mov
sbb
mov
and
test
xor
ins
aas
sub
mov
not
push
icebp
retf
add
dec
retf
lock
ret
loope
jae
cmp
xor
and
sbb
and
pusha
inc
in
xor
mov
and
pop
mov
jb
xor
stos
inc
sbb
repz
popa
sbb
scas
sbb
jb
sub
dec
or
xor
scas
call
es
ins
ret
jbe
add
mov
add
lahf
mov
sar
(bad)
jmp
hlt
and
xor
rcr
(bad)
mov
(bad)
repz
(bad)
ins
rcr
xchg
daa
int
shl
jo
test
mov
and
dec
sub
popf
mov
xchg
data16
cmc
or
push
push
sbb
iret
xchg
fisttp
sub
not
and
lods
jno
es
cmp
xchg
mov
pop
call
push
test
std
test
cld
call
mov
cmps
mov
jge
fs
aad
xlat
xchg
xchg
pop
jge
add
ror
adc
or
scas
ja
std
xchg
out
fadd
mov
rcr
hlt
push
ret
mov
adc
popf
mov
fs
dec
xchg
cmp
sub
call
mov
sbb
or
lock
pop
mov
sbb
icebp
add
push
push
add
loope
addr16
rol
js
mov
sbb
movs
push
adc
cmp
push
loope
sbb
sbb
pop
xor
scas
test
fwait
cld
pop
jge
dec
adc
mov
inc
dec
adc
dec
fs
in
rcr
lods
mov
xor
inc
inc
call
jecxz
inc
add
mov
push
out
int
mov
inc
dec
pop
stc
lahf
in
xor
inc
mov
movs
sbb
pushf
ret
in
xchg
xor
leave
push
pop
mov
xor
add
cmp
cmc
retf
push
je
loop
pop
or
std
sbb
sub
call
fisub
cmp
sbb
mov
loopne
or
xlat
inc
in
dec
jl
cmps
es
mov
pushf
adc
fadd
xchg
pop
lea
sbb
nop
xchg
lods
jecxz
inc
dec
mov
or
icebp
sti
repnz
cmp
fidiv
inc
xor
fst
cmp
or
add
or
fcomp
mov
(bad)
xor
fldenv
int3
loopne
fwait
jg
dec
call
out
imul
sub
and
movs
jb
or
pop
lods
xor
std
fs
lahf
adc
mov
movs
or
dec
xchg
(bad)
div
gs
test
xchg
das
pop
pop
out
out
dec
pop
and
xchg
jg
jne
or
lock
dec
jecxz
jg
int
mov
jns
rcr
(bad)
loopne
std
add
pop
or
call
jne
in
jb
test
dec
cmp
mov
add
arpl
cwde
rol
adc
add
mov
mov
retf
push
and
xchg
or
(bad)
xchg
or
pushf
fwait
shr
out
add
ins
stos
(bad)
push
or
mov
sub
movs
aas
or
clc
mov
mov
mov
scas
push
mov
add
push
inc
sbb
in
pop
cs
retf
rcr
xchg
jbe
in
mov
hlt
and
dec
jmp
xlat
xchg
jo
inc
lahf
daa
jp
cmp
mov
push
aas
(bad)
dec
mov
call
or
in
mov
and
fdivr
in
mov
stos
retf
sbb
dec
ds
ret
cmc
test
xchg
jge
jp
or
and
xlat
adc
test
out
jb
ret
or
mov
ret
into
mov
in
out
cmp
(bad)
test
jge
mov
mov
jnp
and
vpaddq
and
shl
in
pop
movs
shl
repnz
and
repz
jnp
cmp
iret
daa
rcr
sub
je
(bad)
mov
jbe
cwde
mov
fbstp
lods
repnz
cmc
inc
(bad)
mov
call
xchg
fsub
sub
iret
call
or
outs
inc
mov
push
scas
cmps
mov
loop
cmc
jg
and
ins
cmp
xor
fbstp
push
retf
jmp
std
cmp
jg
push
ins
mov
push
sub
cmps
pop
and
mov
in
nop
inc
in
inc
xor
mov
pop
mov
jne
mov
ret
jp
in
(bad)
out
sub
xor
dec
adc
mov
cmp
sbb
dec
push
fs
frstor
sbb
hlt
push
adc
adc
cmp
daa
xor
pop
push
add
mov
jmp
cmps
(bad)
mov
mov
push
movs
clc
mov
push
ja
pop
out
arpl
cmps
mov
jae
das
push
stos
add
adc
jp
xchg
fwait
mov
dec
loop
aaa
enter
jo
cld
xchg
adc
loopne
pop
xor
sar
imul
outs
ficomp
xor
xchg
scas
ins
pop
and
xchg
out
in
push
mov
outs
mov
push
gs
dec
ja
call
fist
aad
xchg
dec
adc
int
sub
je
fwait
or
mov
retf
dec
jmp
cmp
outs
mov
imul
mov
iret
and
jns
jle
mov
inc
adc
fs
sbb
lea
arpl
or
adc
add
(bad)
jbe
into
ins
bound
sbb
push
cmp
lds
clc
fldenv
(bad)
enter
mov
in
and
in
push
inc
pop
cld
ror
xlat
call
dec
dec
adc
into
mov
sbb
add
ins
out
jg
cmps
push
or
inc
xchg
sub
inc
ret
out
xor
les
xchg
inc
stc
shr
jg
sub
adc
sbb
or
mov
dec
push
stos
sub
enter
mov
dec
ss
or
icebp
(bad)
clc
sub
dec
xchg
cmps
push
cmps
cli
out
rol
stos
mov
xor
adc
popf
jb
test
fwait
mov
ror
neg
cmps
mov
inc
je
and
xor
jo
out
lods
push
dec
inc
inc
xchg
clc
enter
loop
jae
and
imul
aaa
xor
mov
rol
sub
adc
cmp
fcom
addr16
in
dec
loopne
xchg
imul
xor
stos
fisubr
cmps
add
(bad)
icebp
jae
mov
inc
xor
out
imul
mov
or
shl
dec
fist
mov
mov
mov
mov
in
lock
mov
lods
fimul
ins
push
jmp
pop
dec
mov
and
jne
test
and
or
(bad)
cmp
sub
inc
rcl
push
loope
xor
jmp
inc
mov
cmp
(bad)
jp
inc
xor
sub
push
mov
jle
popf
cmp
jmp
out
lea
or
test
inc
jnp
repz
rol
cmps
into
retf
cli
pop
sbb
popa
sub
cmp
push
sti
fs
(bad)
ficom
mov
push
pop
cli
inc
sub
mov
mov
cmps
in
inc
popf
sbb
mov
sub
das
add
adc
cmp
sbb
out
dec
popf
sti
retf
and
retf
in
call
add
jl
sar
aaa
inc
sbb
pop
lds
mov
and
call
mov
or
iret
data16
xlat
push
mov
push
fistp
stos
mov
mov
pop
lods
test
pop
xor
adc
sub
mov
cmp
out
mov
and
xlat
lahf
push
mov
mov
lahf
stos
mov
clc
pop
(bad)
into
cmp
out
adc
cld
int
dec
addr16
rcr
popa
shr
dec
sti
test
test
retf
pop
add
cmp
jo
movs
ins
inc
pop
pop
jo
dec
sbb
or
push
ds
cmp
test
add
xchg
and
shl
iret
jle
(bad)
stos
retf
ins
mov
mov
sahf
xchg
fwait
das
xchg
ror
jge
lock
mov
(bad)
sbb
mov
dec
fninit
imul
out
aad
pop
inc
adc
xchg
mov
ins
fwait
jns
ror
lods
icebp
cdq
xchg
sahf
mov
test
lock
mov
inc
mov
fld
sahf
jne
inc
xchg
imul
shr
clc
enter
or
retf
or
push
mov
add
fsub
push
aas
sub
cdq
aas
test
loopne
pushf
mov
xor
out
js
pop
and
sub
retf
add
les
sar
pusha
into
or
ror
mov
jb
and
mov
xchg
pop
sbb
adc
jno
and
mov
pop
pop
pop
pop
push
leave
push
lahf
aam
(bad)
bound
dec
jmp
cmps
ret
in
jb
gs
push
dec
fadd
fldcw
push
aad
xor
daa
loope
sahf
mov
ins
cmp
sub
into
mov
adc
xor
adc
adc
dec
enter
jne
fstp
push
jns
into
pusha
pop
aad
out
xchg
adc
cmp
ret
(bad)
sub
popa
push
sub
dec
or
ret
pop
xor
sbb
fdiv
push
lods
jns
dec
jne
mov
add
scas
(bad)
bound
scas
popa
jb
dec
cwde
jnp
cmps
leave
push
fisub
push
jmp
std
rcl
sahf
mov
aas
int3
jne
retf
cmp
inc
add
push
js
test
mov
dec
icebp
add
xor
cmp
xchg
xchg
inc
jns
leave
retf
xchg
loope
mov
adc
sbb
adc
and
fwait
pop
stos
cmps
rsm
sbb
xor
pop
cmp
inc
iret
test
pop
fisttp
pop
push
adc
imul
loope
gs
mul
movs
or
lea
aad
xlat
xchg
mov
xchg
das
and
shr
mov
stos
pushf
inc
(bad)
or
mov
retf
lahf
mov
jno
add
movs
sbb
jg
lock
xchg
(bad)
cmp
sub
adc
push
rol
jae
mov
sub
mov
xchg
pop
scas
push
sub
je
xor
xchg
das
rol
mov
neg
mov
and
cmc
cmp
int
cmp
imul
fild
fstp
and
sub
imul
inc
push
jmp
rol
in
mov
jmp
test
cdq
lea
add
xlat
fs
ret
das
sahf
add
mov
stos
sub
outs
in
shr
js
js
pop
scas
loopne
aaa
cmp
int3
inc
dec
cmc
fldcw
xor
loopne
xor
inc
iret
xchg
mov
dec
cwde
repz
fsubr
imul
pop
in
retf
xchg
ins
adc
addr16
lds
in
outs
push
ins
pop
xor
cmovle
scas
out
in
jmp
clc
jl
or
pop
popf
and
push
jne
pushw
ja
clc
js
sub
lods
iret
popf
lea
inc
or
mov
jecxz
pop
in
retf
hlt
nop
inc
mov
xchg
dec
mov
xchg
icebp
leave
pusha
fcomp
jo
inc
call
hlt
enter
sbb
pop
popa
mov
mov
add
cdq
jbe
(bad)
(bad)
mov
adc
dec
and
mov
cld
sbb
add
pop
pushf
dec
jae
adc
push
out
xchg
jno
fcom
loopne
xchg
sub
push
mov
mov
add
adc
ret
xchg
in
mov
(bad)
stc
dec
shl
jp
cmc
(bad)
(bad)
popf
repz
jmp
(bad)
jae
sbb
sti
rol
test
push
pusha
pop
inc
jg
fucompp
clc
inc
push
xor
jne
data16
xor
mov
retf
std
pop
test
or
loope
lea
(bad)
sahf
div
imul
outs
xchg
js
or
adc
out
sbb
hlt
pop
push
or
(bad)
lods
jecxz
(bad)
nop
cmc
clc
(bad)
or
dec
mov
das
imul
out
jbe
movs
mov
sub
xchg
dec
or
xor
clc
std
ins
push
test
push
es
das
push
push
adc
fcmovb
mov
and
aaa
iret
pop
push
pushf
lods
push
inc
adc
ret
mov
ins
adc
data16
addr16
aam
in
mov
add
pop
mov
inc
xlat
xor
jmp
sbb
mov
ds
stc
jb
jecxz
je
xlat
xor
rol
sbb
mov
cmps
adc
movs
cld
retf
sbb
fld
push
or
ror
stc
pop
cmp
je
pop
or
(bad)
fwait
push
jne
mov
mov
repz
test
int3
lods
jbe
mov
leave
shl
ss
or
xor
lock
jl
push
push
sbb
push
and
out
div
jns
dec
and
imul
ret
test
adc
adc
stos
push
push
daa
push
xchg
mov
jae
retf
mov
pusha
mov
movs
sub
ja
in
mov
push
int
fld
and
pushf
outs
mov
cld
fcmovne
dec
xor
les
mov
cmp
lds
loopne
pusha
aam
push
in
gs
cmp
xchg
bound
push
icebp
dec
or
mov
dec
leave
pushf
fld
rcl
push
imul
pop
cmp
push
nop
jge
jne
pop
cmp
jg
test
loope
and
inc
bound
mov
inc
leave
ins
fadd
cmc
movs
or
cmps
cli
das
sub
imul
push
out
xor
popa
sbb
jns
(bad)
ja
sti
rcr
fs
ror
cmp
sbb
bound
xchg
or
pop
shl
mov
sbb
dec
sub
bound
mov
mov
mov
push
add
mov
and
mov
scas
out
pop
pop
rcr
outs
mov
fidiv
test
pushf
fsub
xchg
movs
stc
cld
push
adc
cmp
and
jae
or
mov
pop
mov
or
cwde
ss
mov
dec
jmp
cwde
push
sub
fmul
cmps
(bad)
and
(bad)
das
push
mov
add
jg
xchg
sbb
rol
fadd
add
(bad)
push
pusha
xor
jg
push
push
rol
add
pop
test
(bad)
iret
or
push
push
(bad)
xchg
push
xchg
popf
lds
jne
mov
jge
nop
fucomip
add
dec
in
out
sbb
mov
ds
(bad)
jne
jnp
fcomp
inc
xchg
jle
hlt
dec
or
xchg
aaa
out
jle
sbb
sub
or
push
xchg
cmc
loop
xor
rol
pop
sub
mov
sub
movs
or
mov
mov
popf
or
les
out
jbe
jno
xor
(bad)
mov
into
xchg
sbb
xchg
mov
out
ret
inc
retf
lods
cmp
add
les
dec
arpl
inc
stc
das
pop
retf
jg
(bad)
lods
or
mov
in
push
mov
sbb
jo
inc
xchg
or
add
pop
aas
jp
sub
mov
mov
pushf
fldcw
jmp
mov
xor
clc
fisubr
mov
adc
xchg
mov
dec
inc
inc
aam
mov
jg
rcr
mov
jne
das
jecxz
sub
out
je
popa
push
xchg
mov
and
mov
jne
clc
shl
fbstp
shl
adc
mov
jns
out
cwde
mov
pop
dec
test
leave
mov
lock
out
(bad)
sub
sbb
outs
xchg
aam
inc
retf
ins
jge
scas
enter
sub
or
jle
jo
xor
xchg
add
les
scas
test
pop
push
lds
ja
jmp
jge
or
xor
in
inc
loope
dec
shl
mov
movs
fcomip
add
push
mov
das
inc
mov
daa
xchg
jl
repnz
xlat
push
gs
in
fdivr
xchg
add
cmps
fst
lock
cmp
lock
and
xor
ret
jecxz
add
leave
or
xchg
scas
outs
pushf
sbb
mov
lods
pop
stos
cmp
movs
cmp
mov
int3
hlt
mov
icebp
mov
(bad)
sub
xchg
xchg
data16
and
sti
aaa
cmps
ret
jns
dec
xlat
fld
in
cmps
pop
ja
aad
and
out
xchg
cwde
mov
int
jns
push
sub
repnz
xchg
rcr
push
cmp
mov
retf
sbb
and
lahf
mov
mov
and
inc
ficomp
pushf
add
pop
push
out
movs
or
cmp
sub
push
inc
out
ds
ror
push
loope
sub
dec
dec
pop
std
aad
sub
mov
mov
sub
adc
xchg
sbb
sub
nop
xchg
rol
add
or
mov
mov
and
pop
loope
rol
mov
(bad)
jmp
adc
or
cdq
lds
jno
inc
stc
test
call
call
(bad)
xchg
adc
push
mov
ret
sub
pop
inc
add
(bad)
push
add
cmps
inc
xchg
outs
ret
fidivr
std
stos
add
pusha
hlt
ins
rol
inc
jbe
mov
push
mov
into
fnsave
(bad)
es
adc
xchg
ins
cld
jmp
mov
in
cli
add
es
scas
mov
lds
mov
dec
aaa
test
retf
sub
adc
inc
jo
lods
mov
retf
in
stos
sub
inc
daa
aad
push
xchg
mov
pop
push
mov
cli
mov
movs
(bad)
outs
inc
mov
push
fwait
dec
jge
dec
(bad)
test
mov
cmc
sti
or
jns
push
gs
aad
jne
jl
mov
mov
mov
cdq
jp
cdq
mov
cmp
fnsave
mov
outs
mov
movs
das
call
cmp
test
and
pop
adc
lods
xchg
xor
ds
xor
inc
adc
mov
(bad)
inc
ds
jmp
mov
mov
sti
pop
jbe
leave
int
or
popf
call
xchg
xor
adc
push
fs
mov
mov
and
lds
pushf
(bad)
push
cs
test
or
dec
xchg
ins
cmp
sbb
pop
or
mov
dec
and
aaa
adc
mul
out
out
aad
xchg
mov
jmp
(bad)
(bad)
push
loope
shl
mov
xchg
sub
cmc
nop
or
pushf
add
push
jmp
mov
in
(bad)
out
jns
hlt
push
jmp
fild
(bad)
jnp
mov
mov
sub
push
xchg
push
or
mov
mov
push
cs
in
(bad)
adc
push
(bad)
das
mov
lock
ror
lods
neg
(bad)
stos
inc
cmp
icebp
sub
dec
es
out
sti
mov
ss
inc
fstp
and
in
push
sub
sub
inc
push
test
add
mov
push
push
jge
mov
cmp
int
in
jp
shr
pop
jmp
mov
inc
push
stos
and
pop
dec
aas
hlt
and
or
jo
gs
sahf
ins
cli
or
xor
or
cmc
call
xchg
(bad)
inc
sbb
adc
les
sbb
test
repz
outs
mov
popf
xchg
sahf
mov
xchg
fdiv
mov
arpl
nop
sub
test
pop
fbld
push
and
sub
jecxz
or
in
popa
jmp
gs
and
add
xchg
or
rcr
test
pop
pusha
push
pop
mov
mov
or
in
push
pop
and
in
pop
mov
jge
mov
jbe
sti
lods
add
add
xor
cmp
mov
in
add
mov
inc
mov
mov
or
test
int
hlt
mov
fisubr
imul
ret
xchg
pusha
sti
sub
cdq
js
ss
or
mov
mov
lds
mov
lahf
dec
cld
mov
fmul
xchg
(bad)
push
jp
stos
cmp
scas
mov
shr
test
adc
mov
xor
into
pop
sti
jns
and
fucomi
shl
adc
or
mov
inc
mov
mov
xlat
jp
mov
movs
adc
sbb
sub
sub
cmps
cmp
(bad)
pop
dec
sub
ds
or
sahf
push
aas
out
cli
lahf
lods
lods
jbe
push
mov
movaps
pop
push
xor
dec
aaa
jns
xchg
pop
mov
shl
fdivr
mov
jnp
repz
aad
adc
adc
addr16
sub
popf
dec
pushf
mov
xchg
add
inc
add
sbb
push
cli
fsubr
or
fsubr
push
shl
in
pop
mov
adc
dec
cmp
gs
repz
mov
ret
cmc
pop
leave
rcr
dec
inc
inc
dec
lds
arpl
fstp
inc
movs
pushf
push
movs
int
mov
cmp
or
xchg
cmp
shl
sub
or
dec
jbe
adc
shl
xor
adc
or
clc
add
stos
jp
jo
inc
lea
sub
ins
test
jne
sub
push
popa
add
fsub
push
sti
shl
push
mov
cmp
int
sahf
pop
xchg
pusha
inc
cli
cmp
dec
clc
test
xor
adc
cmps
retf
mov
jb
mov
fild
outs
shl
lahf
fidiv
ins
jo
and
scas
lahf
xlat
rcr
sub
push
cs
pusha
aad
inc
retf
ret
aam
mov
or
enter
retf
cmp
pop
lds
sbb
cmps
push
fwait
push
repz
lock
cmp
mov
(bad)
int
imul
jle
mov
or
cmp
jmp
fs
sub
lea
call
call
and
popa
jno
popf
adc
xchg
jmp
test
das
cmc
sbb
cwde
sub
cmp
lods
mov
icebp
pop
outs
xchg
mov
jmp
sub
or
inc
test
mov
cmp
fld
inc
std
cmp
mov
jb
add
iret
sub
in
addr16
mov
test
dec
push
add
push
leave
movs
mov
iret
push
out
shl
xor
adc
test
(bad)
push
not
pop
cmp
cmp
ss
sub
mov
fsub
pushf
ror
mov
mov
or
idiv
mov
int3
hlt
leave
ficomp
stc
in
cs
adc
fadd
sti
ja
rcr
cmp
shl
mov
and
push
mov
into
fs
outs
cmp
ror
icebp
jbe
je
ret
inc
or
adc
ret
fdivr
mov
lods
dec
nop
mov
movs
out
xlat
(bad)
(bad)
dec
inc
(bad)
loopne
or
cli
mov
cmc
mov
scas
jo
scas
(bad)
daa
ret
dec
movs
ret
stos
pushf
mov
jle
add
outs
jo
push
pop
add
or
xor
(bad)
sub
or
mov
call
fbld
scas
pop
add
enter
jl
xchg
xchg
pop
mov
int3
es
inc
cmp
sbb
clc
sub
lock
inc
jno
jmp
jb
aas
int3
std
or
in
mov
mov
jne
into
inc
sahf
repnz
xchg
xor
ss
or
xor
pop
jmp
out
inc
fidiv
adc
jo
call
loope
(bad)
mov
aas
retf
xor
mov
adc
sbb
jl
sub
daa
pusha
sub
jp
xchg
and
mov
jmp
stos
dec
xchg
dec
ret
mov
and
xor
ds
addr16
call
lahf
add
cli
imul
in
cs
xchg
test
adc
je
pop
push
mov
mov
mov
sub
push
sar
test
repnz
sub
pop
sbb
jl
das
add
(bad)
fstp
add
push
cs
lds
aaa
cmp
out
test
adc
sti
stos
jbe
jmp
scas
xlat
xchg
dec
aaa
fist
aas
lock
cmp
outs
sub
mov
push
sysenter
aas
dec
pop
cmc
mov
scas
inc
jns
ja
pushf
and
lea
ficomp
sub
add
ins
iret
(bad)
adc
stos
movs
and
sub
(bad)
outs
inc
mov
in
mov
addps
jl
sbb
out
(bad)
lock
or
and
cmps
pop
jp
push
ss
enter
popa
movs
adc
call
scas
jl
std
mov
sub
repz
pop
push
cmp
dec
loopne
ret
and
mov
mov
push
push
sahf
mov
retf
into
sahf
stos
mov
in
push
nop
pusha
fidivr
aam
xchg
mov
add
pop
movs
mov
push
sub
push
xlat
and
ror
xchg
ja
sub
xchg
mov
clc
outs
sbb
(bad)
dec
cmps
jle
fcom
adc
cmp
dec
sti
mov
fiadd
jecxz
ror
aad
test
xor
push
jmp
cmp
mov
inc
xchg
stc
push
add
mov
rol
cmp
pop
mov
cmp
test
mov
call
call
cli
enter
je
push
dec
dec
adc
enter
jnp
jo
call
push
jle
cmp
lods
out
inc
sub
add
mov
icebp
pop
and
mov
ins
lods
adc
imul
xor
ins
inc
idiv
mov
sub
inc
hlt
mov
push
jg
in
(bad)
sub
jne
jp
jp
nop
fwait
xchg
cmp
loope
add
push
aam
outs
and
movs
push
ret
stos
mov
sub
mov
mov
(bad)
adc
mov
pop
sub
or
test
jns
adc
jbe
imul
xor
call
outs
add
fcomp
test
and
sar
xchg
imul
inc
ja
xchg
jmp
pop
enter
pushf
test
xchg
jbe
xchg
inc
sub
push
cmp
mov
icebp
adc
aad
push
and
or
ja
daa
out
xchg
pop
mov
fs
jns
xor
loopne
addr16
out
cmp
adc
push
sub
adc
lods
xor
jnp
cdq
ret
cmp
nop
ins
call
mov
retf
sbb
ins
jmp
retf
cmc
loop
dec
xchg
dec
outs
gs
imul
add
mov
std
push
out
xchg
arpl
jecxz
mov
dec
ss
push
mov
adc
loope
iret
mov
pop
retf
dec
xor
inc
cmp
hlt
xchg
adc
or
retf
cmp
ja
xchg
pop
jecxz
xor
mov
mov
dec
ds
and
dec
ret
push
mov
pop
loop
scas
xchg
jmp
add
pop
ret
jne
loopne
cmps
iret
jle
data16
aas
nop
(bad)
stc
pushf
cmp
cwde
cli
dec
adc
xchg
aas
sbb
(bad)
jp
inc
mov
bound
ret
stos
push
sbb
xor
jno
loop
xor
jle
shl
jne
xor
sti
ror
inc
fdivr
mov
jb
push
pop
cmp
(bad)
cs
sar
subps
aas
dec
es
sahf
cmps
sbb
jbe
retf
adc
ins
(bad)
and
retf
dec
inc
jbe
cmps
push
mov
test
lock
movs
xchg
movs
cmp
jbe
std
out
sar
(bad)
or
cmp
cmp
jae
xor
imul
xchg
dec
stos
retf
bound
out
xchg
dec
push
clc
aas
cdq
mov
push
(bad)
cmp
push
and
ins
ret
cmp
cmp
jb
shl
add
inc
mov
rcr
gs
clc
pop
cmps
xchg
add
pushf
shr
neg
sub
arpl
call
outs
shl
jno
scas
cs
retf
mov
sbb
mov
ins
mov
aas
or
mov
push
push
xchg
hlt
cmp
push
or
pop
repnz
sbb
out
pop
ficom
sbb
dec
dec
stos
shl
xor
aas
xor
mov
ret
call
(bad)
adc
daa
and
(bad)
cmp
call
cmp
or
xchg
sahf
pusha
jno
mov
pop
cmp
scas
jnp
data16
add
retf
adc
adc
inc
xchg
adc
loope
addr16
repz
je
inc
jbe
repnz
dec
js
clc
aas
or
adc
xor
dec
sub
xchg
icebp
mov
xor
pop
adc
mov
and
(bad)
scas
push
xchg
je
jl
mov
cmp
(bad)
fndisi(8087
mov
or
jmp
sub
gs
gs
mov
aad
cmp
aad
jno
sbb
sti
jp
fisubr
setne
psubsw
popf
ins
call
test
addr16
adc
hlt
pop
adc
mov
(bad)
jge
jo
add
cmp
fwait
cli
dec
inc
(bad)
inc
movs
cmp
inc
xchg
xor
and
in
push
inc
pop
pop
mov
sub
push
scas
enter
dec
dec
add
sbb
mov
sub
mov
cmp
fs
stos
pushf
sub
sahf
jmp
jns
shl
lods
pop
mov
lods
dec
cmps
outs
dec
or
and
je
and
sbb
cmp
jae
jne
jne
mov
(bad)
dec
mov
in
pop
ds
call
pop
push
loope
(bad)
jl
jae
jbe
inc
test
shl
xchg
push
mov
xchg
or
and
mov
inc
push
inc
das
xor
mov
mov
add
stc
cmp
add
pusha
aas
sub
test
sub
pop
pop
bnd
jmp
adc
pop
mov
aad
xchg
das
fadd
inc
adc
ds
in
adc
jbe
push
scas
popf
iret
ins
mov
imul
movs
sbb
sbb
mov
cli
and
ror
add
xor
sub
or
cli
jne
std
pop
xor
jb
ror
adc
cmp
jnp
and
add
lods
cmc
jno
(bad)
and
neg
mov
sbb
fstp
and
dec
(bad)
call
cmp
or
fbstp
hlt
adc
aas
push
loope
push
loop
pop
dec
xchg
xor
or
rcl
inc
movs
lods
sbb
xchg
cmp
dec
test
xor
sbb
mov
out
inc
sub
fidivr
int
imul
mul
ds
(bad)
addr16
mov
in
mov
cmp
cdq
ins
sahf
sbb
jnp
aad
and
cmp
mov
cmp
lods
xchg
ins
sbb
dec
ret
jbe
int
xor
fcomip
xchg
mov
mov
lock
(bad)
add
xor
mov
mov
(bad)
es
stos
adc
adc
mov
mov
and
pop
mov
jne
mov
mov
cdq
hlt
push
gs
aad
push
sbb
mov
clc
pop
push
jne
aas
daa
js
shl
and
push
sahf
and
add
mov
loop
retf
or
(bad)
cmc
nop
push
outs
cmp
push
mov
jne
xchg
cmp
jle
jmp
int3
cwde
and
out
cmc
daa
mov
jmp
(bad)
mov
push
pusha
imul
xlat
mov
out
shl
cmp
push
fidivr
clc
pusha
inc
or
add
std
repz
inc
pusha
sbb
xor
push
mov
push
jge
scas
movs
repnz
mov
inc
test
pop
ins
jns
cmovne
cld
rcl
sbb
mov
ins
cmp
in
sbb
dec
or
data16
dec
push
div
mov
xor
pushf
add
cld
dec
out
inc
leave
jo
ja
mov
in
sbb
push
inc
dec
xor
sub
rcr
sahf
mov
int3
in
fwait
mov
in
sbb
dec
add
and
scas
lods
ret
xchg
ror
push
jne
cld
mov
fisubr
test
mov
scas
sub
enter
pop
ret
dec
add
(bad)
jnp
and
outs
fistp
jo
ret
xchg
pop
js
push
push
adc
jmp
ins
clc
cld
mov
fsub
mov
inc
add
lahf
jle
sub
push
scas
dec
pop
inc
push
rcl
adc
mov
cmp
add
sbb
jcxz
dec
je
shl
cmp
out
test
call
je
jae
jb
push
jnp
mov
mov
imul
or
sbb
jmp
push
inc
dec
xchg
cmps
ss
adc
pop
mov
and
xchg
push
js
(bad)
mov
sub
jg
outs
jge
push
sti
dec
jle
adc
inc
sub
inc
mov
(bad)
(bad)
hlt
inc
pop
pop
mov
xor
vmovaps
jne
push
lods
rcl
mov
or
(bad)
(bad)
cmp
add
out
and
test
cmc
test
clc
test
adc
adc
ror
lock
jb
cmp
mov
pop
fmul
cwde
and
fisttp
sub
ins
jnp
sbb
ss
pop
inc
fdivr
pop
out
xchg
lods
sub
mov
push
fsubr
mov
jns
push
repnz
inc
inc
sub
and
dec
es
fsub
out
stos
mov
push
repnz
mov
push
push
mov
mov
mov
and
add
out
mov
add
mov
jbe
jb
xor
stc
shl
xor
stos
mov
xor
ficom
and
mov
ins
cmp
cdq
add
adc
mov
add
xlat
stc
jmp
fsub
aaa
jmp
and
sub
clc
pusha
inc
out
or
push
mov
or
dec
(bad)
jns
and
movs
dec
(bad)
cmp
out
test
add
and
addr16
push
mov
imul
clc
loopne
psrlq
stc
mov
int
push
cmps
mov
lahf
fisubr
test
clc
and
dec
repnz
push
fs
xrelease
mov
je
mov
data16
pop
mov
sbb
pop
push
loopne
sbb
out
ror
sti
push
lods
arpl
push
dec
mov
dec
in
mov
cs
shr
repnz
popa
jge
mov
ins
gs
pop
scas
ins
addr16
rol
pushf
mov
jmp
jno
loope
imul
pop
popa
xor
adc
dec
das
dec
fild
je
fiadd
pop
je
dec
xor
mov
pop
test
jo
xchg
push
bound
idiv
sar
cmp
push
bsr
call
and
adc
dec
les
inc
push
dec
cwde
outs
es
loopne
lahf
les
mov
cmps
fisttp
movs
push
mov
cmp
pop
jp
or
(bad)
loopne
cmp
push
xchg
push
ror
pop
jle
int3
retf
push
enter
(bad)
mov
or
mov
std
jmp
add
pop
sbb
push
pop
loope
and
movs
daa
push
jnp
loope
add
sbb
dec
adc
mov
out
and
shl
dec
loope
jmp
retf
dec
repnz
mov
scas
mov
clc
xchg
cmp
jns
std
pop
outs
xor
cmp
cld
mov
add
or
and
adc
popf
xor
or
js
leave
iret
xor
das
repnz
fwait
jecxz
into
sub
adc
les
xor
mov
pop
sbb
push
fadd
test
xor
sub
xlat
adc
mov
xchg
pop
sub
cmp
mov
cmp
jmp
nop
scas
inc
mov
ret
jg
popa
sahf
sub
cmp
imul
lods
cmp
js
popf
retf
fwait
rcr
in
sbb
mov
out
xor
aas
les
sar
sbb
int3
pop
fwait
jbe
lods
cmp
pop
xor
mov
bound
das
in
mov
mov
ret
jns
jle
ja
sahf
xor
sub
fs
sub
mov
lods
iret
inc
lods
adc
adc
cmp
ret
test
test
stos
shl
xchg
lea
jl
mov
fstp
xchg
mov
movs
(bad)
mov
pop
add
and
push
jge
sub
shl
mov
add
jo
movs
sbb
sub
imul
outs
adc
test
ss
sti
imul
jg
fisub
xor
xchg
pop
inc
mov
fwait
sub
jl
js
xchg
jno
sbb
push
lods
cmp
mov
sbb
xor
repnz
shr
xchg
lods
jnp
rcl
and
add
xchg
cld
gs
xor
push
jae
cli
enter
pop
mov
stos
imul
pop
int3
push
outs
sub
jmp
inc
mov
mov
movs
cmp
sub
jne
jno
pop
cmc
sub
jo
inc
mov
dec
or
fs
scas
sub
cmc
jl
in
ins
ret
stos
pop
mov
push
rol
push
and
mov
or
mov
fstp
shr
pop
mov
push
lock
into
bound
or
test
push
mov
lods
imul
xor
icebp
add
das
mov
pop
jp
xchg
push
or
iret
std
adc
xchg
inc
movs
arpl
(bad)
jnp
movs
push
jg
pop
cld
iret
xor
pop
xchg
sahf
sbb
or
pop
stos
lea
cli
mov
repz
std
and
sbb
push
xchg
and
push
jle
lds
sti
pop
xchg
xlat
pop
nop
push
mov
retf
outs
dec
push
jo
clc
jp
xchg
add
ret
push
bound
adc
pop
xlat
mov
dec
jmp
pop
ja
scas
(bad)
imul
shl
pop
adc
out
loop
imul
fcmovb
cvttps2pi
adc
shr
(bad)
into
mov
xor
and
or
dec
and
(bad)
icebp
imul
hlt
cmp
xchg
cmp
cmp
and
stc
sbb
out
xor
rcr
dec
xor
pop
adc
push
fsub
imul
sub
add
outs
scas
lods
sbb
adc
(bad)
sbb
or
mov
dec
sbb
loop
and
int3
mov
cmp
sbb
inc
jno
sbb
cmp
xlat
sbb
sub
jge
loop
sub
jg
cmps
pop
jmp
mov
(bad)
push
scas
bound
(bad)
sbb
pop
rcpps
rcr
mov
mov
sub
xchg
mov
add
test
test
inc
(bad)
loop
adc
pop
xchg
jmp
scas
enter
data16
ins
mov
test
nop
jp
repz
sbb
out
jmp
xor
mov
(bad)
call
into
push
add
and
sbb
sub
push
jp
dec
retf
or
pop
scas
lods
test
cmp
ficomp
sbb
dec
fstp
jmp
and
mov
rcr
mov
das
gs
dec
lods
pusha
mov
pusha
aam
mov
in
(bad)
popa
mov
or
mov
inc
pop
or
add
stc
lds
or
push
addr16
ss
(bad)
inc
(bad)
cmp
dec
iret
cwde
xchg
pop
sahf
add
mov
xor
das
das
or
fwait
scas
add
sbb
pop
jmp
ja
mov
data16
neg
data16
scas
mov
int
aad
sub
fwait
data16
or
xchg
xor
cli
jno
ja
mov
dec
adc
mov
and
jb
or
jb
bnd
frstor
mov
adc
test
jecxz
jno
pusha
lock
add
and
pop
popa
daa
gs
mov
mov
push
mov
pop
xchg
dec
ror
out
push
adc
outs
cmp
sub
outs
adc
mov
int
push
mov
mov
shl
ret
jl
int3
mov
cli
shr
push
daa
setae
test
stos
aaa
jg
xor
adc
add
retf
fnstsw
or
lods
mov
(bad)
sbb
dec
sub
js
in
repz
xchg
sbb
pop
and
in
xchg
out
stc
mov
pop
ror
push
mov
imul
in
arpl
xor
jne
ret
xchg
ss
pusha
jne
mov
sti
jns
or
xor
jno
jae
lea
(bad)
jns
test
lods
mov
test
jo
jmp
vmovlps
mov
mov
mov
and
not
out
cmp
adc
sbb
out
xlat
sbb
dec
in
xor
or
dec
out
std
mov
jl
jbe
cdq
xor
xor
stos
sbb
mov
or
jne
leave
(bad)
into
in
mov
icebp
test
add
and
xchg
gs
sbb
rol
repz
dec
gs
sbb
lods
jno
sahf
inc
retf
pop
iret
mov
shl
mov
cmp
jecxz
push
adc
not
dec
mov
mov
sub
jecxz
push
loop
jp
sbb
int
aad
mov
push
sub
ret
dec
and
mov
scas
fstp
mov
dec
aad
(bad)
pop
dec
pop
(bad)
push
retf
inc
out
push
cld
cdq
mov
sbb
not
iret
fdivr
je
jmp
ret
outs
aas
push
lock
sbb
movs
cmc
dec
ret
stos
shl
daa
mov
ins
ja
js
pop
test
adc
xchg
fbld
shr
xor
adc
jge
fsubr
aaa
jmp
(bad)
mov
dec
test
repz
mov
push
int3
sub
cld
sub
addr16
bound
sub
cmp
loope
out
lods
xlat
jge
icebp
pop
lock
mov
and
mov
mov
sub
lahf
mov
imul
pop
sbb
pop
push
cmp
into
data16
inc
sti
mov
stc
push
or
xlat
jns
fistp
dec
ror
(bad)
mov
fdivr
not
jo
pushw
adc
jge
pushf
jno
je
(bad)
rcr
cmp
sbb
xchg
mov
inc
fs
rcl
mov
mov
sub
sahf
dec
mov
nop
add
inc
rcl
icebp
icebp
cmps
cmc
out
sub
div
cmp
and
xor
pusha
retw
inc
imul
push
or
in
cmp
cmp
or
inc
stos
inc
mov
call
stos
cmp
fsubr
scas
enter
and
pop
mov
jecxz
inc
mov
bound
inc
inc
xchg
push
sahf
stos
adc
fdivr
mov
ret
adc
ja
bnd
mov
xor
sbb
add
inc
shl
popf
cmps
ss
xchg
pop
cmp
stos
lea
out
out
scas
aas
xor
and
mov
mov
dec
inc
mov
adc
out
push
dec
sub
adc
jb
cdq
sahf
cs
loopne
and
mov
test
pushf
xchg
stos
in
stos
fs
sbb
ss
jg
stos
xchg
daa
jne
lods
rcr
dec
sbb
lsl
lds
inc
cmp
mov
mov
aaa
dec
sub
(bad)
out
fs
mov
hlt
in
enter
add
fisub
leave
ins
cmps
outs
xchg
jle
cmps
push
push
movs
out
nop
loope
add
bnd
iret
sub
fxch
fwait
xchg
ins
test
or
fdiv
into
fisubr
mov
das
call
cld
or
std
adc
imul
sar
popf
mov
scas
jo
and
mov
inc
mov
ds
cmps
in
pop
mov
mov
movs
shl
fimul
and
outs
fistp
ret
pop
sbb
sub
fnstenv
pop
xchg
mov
add
pop
fabs
fld
clc
int3
fwait
xchg
daa
or
clc
pushf
rcr
add
loopne
push
out
sbb
push
lods
hlt
call
pop
outs
or
ja
xchg
and
lds
push
rcl
sbb
push
xchg
cs
inc
pop
mov
jb
outs
jne
push
pop
push
cs
dec
ret
or
mov
dec
fst
sub
mov
adc
xchg
hlt
pop
std
out
pop
jb
cli
sbb
rcl
xchg
bound
xchg
push
or
mov
xor
push
sub
push
cmp
outs
push
ja
jmp
push
adc
in
fdivrp
adc
sar
cdq
loope
mov
and
mov
rol
aaa
dec
mov
xchg
add
jg
mov
cmp
dec
into
xor
dec
xor
inc
cmps
and
adc
fstp
fnstcw
xchg
pusha
jo
sbb
cmp
or
and
cmp
adc
cmp
and
ins
loopne
fmul
out
mov
int
fdiv
mov
imul
idiv
or
daa
sbb
aad
sub
jo
xor
outs
push
fistp
xchg
call
aam
sbb
cmp
test
ficomp
addr16
std
pop
dec
mov
lds
outs
push
out
xchg
sbb
retf
mov
ins
jecxz
xor
dec
(bad)
in
scas
loopne
xor
mov
push
dec
mov
rcl
outs
adc
sbb
movs
and
test
xor
fs
sub
arpl
fild
outs
xchg
jle
ret
inc
cmp
pop
mov
cld
pop
push
popa
jle
dec
push
cli
cmp
ror
mov
aas
or
into
lods
fcomp
pushf
cmp
aad
add
push
jle
out
arpl
rcr
test
popf
dec
pusha
xchg
add
retf
dec
cmp
and
push
dec
xchg
dec
shl
jp
cmps
mov
shl
add
pop
cmc
xor
mov
das
adc
sub
push
nop
cmps
mov
cli
jg
and
inc
repnz
mov
leave
and
aam
lds
(bad)
push
fisubr
sbb
sub
mov
idiv
xchg
mov
dec
xor
jecxz
rcl
and
xchg
dec
inc
outs
es
mov
loop
jle
dec
xchg
hlt
mov
lea
sub
mov
xor
ja
lods
sbb
cmp
popf
and
fs
push
(bad)
fdiv
jge
rol
jbe
lock
push
pop
call
push
mov
adc
xor
sub
sti
mov
mov
lds
(bad)
enter
add
aam
cmps
fldenv
arpl
mov
std
test
int
test
push
mov
jp
pop
push
shl
cmp
lods
mov
stc
sbb
stos
ja
add
sub
ss
xchg
sub
test
call
jmp
ins
aam
jmp
or
lock
outs
out
icebp
ja
daa
add
jl
mov
lea
cwde
push
mov
ja
add
leave
cdq
lds
add
mov
pop
push
fmul
sub
scas
out
pop
in
mov
and
cli
mov
sub
push
inc
stc
xchg
adc
pop
fwait
pop
(bad)
repz
pop
or
adc
sti
mov
jg
mov
out
fcmovbe
mov
lahf
sbb
or
sahf
jmp
fcomp
movs
repz
shr
movs
xchg
jge
add
fdiv
push
mov
and
aaa
int3
adc
mov
xchg
xchg
(bad)
sub
cld
ror
loopne
js
mov
outs
pop
inc
push
and
stc
mov
cmps
xor
cmps
leave
fild
pop
sub
xchg
(bad)
xor
sbb
or
inc
(bad)
pop
rcr
and
xchg
xor
pushf
push
dec
nop
lock
in
outs
push
ins
or
cmp
and
aaa
pop
jmp
(bad)
xor
mov
cmp
retf
adc
pushf
cmps
pop
adc
mov
pop
in
adc
pop
mov
cmps
lahf
mov
scas
push
jb
out
adc
leave
add
or
push
and
das
call
out
out
and
in
fwait
in
inc
pusha
mov
cmp
rcr
xor
sbb
xor
addr16
mov
sbb
inc
xlat
xchg
pop
pusha
or
inc
or
mov
aam
and
sti
outs
(bad)
cdq
loope
and
test
xor
(bad)
in
dec
mov
repnz
(bad)
push
(bad)
sbb
retf
inc
mov
or
ja
loope
repz
mov
mov
lea
dec
xchg
and
inc
ins
adc
repz
gs
lahf
mov
or
mov
jne
jno
test
out
pop
mov
push
fdivr
leave
jno
sbb
(bad)
clc
push
imul
push
sub
push
mov
(bad)
ss
adc
daa
cmp
sbb
loop
sbb
cvtpi2ps
mov
aas
out
and
std
(bad)
call
add
fwait
mov
pushf
pop
push
sar
mov
jmp
and
sbb
mov
int3
mov
jno
add
(bad)
inc
adc
popa
into
inc
mov
dec
jl
mov
stos
xchg
(bad)
lods
cmp
jno
enter
lods
cmp
neg
(bad)
shl
mov
xor
call
outs
clc
ins
or
dec
gs
pop
xor
sub
push
aas
add
idiv
or
xor
add
xchg
test
test
je
cmp
sub
add
out
mov
inc
jmp
lahf
movs
lea
inc
out
jl
(bad)
xchg
sahf
outs
movs
dec
inc
inc
mov
mov
daa
xchg
rcl
mov
mov
pop
inc
pop
fdivr
fdivr
or
sub
dec
leave
and
cmp
(bad)
(bad)
fld
iret
pop
mov
jmp
add
sbb
mov
sub
in
movs
and
mov
call
test
sub
pop
jg
jno
push
adc
mov
aad
and
retw
fs
mov
mov
push
enter
out
scas
cli
sbb
call
pop
pop
jbe
in
jl
idiv
or
imul
mov
push
sub
les
sahf
sar
(bad)
(bad)
std
ins
pop
adc
and
and
xchg
or
push
dec
arpl
xchg
mov
push
pop
mov
cwde
stos
pop
jne
cmp
sub
or
mov
xchg
mov
mov
fistp
shl
mov
movs
adc
jb
sti
xchg
in
xor
add
or
jge
or
push
pop
movs
push
cmp
and
inc
outs
test
rol
call
lahf
retf
add
jns
(bad)
aam
inc
pop
clc
push
std
movs
sub
(bad)
(bad)
or
retf
mov
fstp
sbb
dec
sahf
daa
or
emms
xchg
adc
or
mov
or
jp
cli
shr
or
jle
test
pop
cmp
icebp
sbb
jbe
inc
iret
sbb
push
bound
cmp
push
jae
cmp
je
in
int
mov
mov
int
jnp
xor
xor
cmp
and
dec
test
aas
repz
std
lds
and
lahf
cs
pushf
xchg
mov
adc
pop
cmp
cmp
mov
push
hlt
lods
adc
test
inc
arpl
xor
push
popf
data16
jno
inc
lahf
xchg
test
push
test
leave
shl
inc
and
fcomp
sbb
mov
shl
call
pop
mov
repz
test
sbb
inc
repz
mov
hlt
pop
pop
inc
xchg
or
js
iret
loop
sbb
cld
jb
mov
add
fwait
addr16
popf
inc
xchg
aad
sbb
push
fdiv
bound
sub
imul
jl
add
sub
push
jb
lock
or
pop
add
mov
clc
inc
rcl
cmc
cli
lock
jne
jmp
repz
push
mov
push
test
sti
out
dec
cwde
into
add
adc
in
fs
ins
mov
push
retf
cmp
sub
out
add
and
adc
call
mov
dec
and
jo
xchg
call
lods
push
pop
mov
dec
cmps
pop
inc
pop
mov
leave
mov
mov
cmp
shl
xor
jae
sub
adc
adc
mov
das
jb
imul
in
dec
test
hlt
scas
test
jbe
cwde
pop
scas
daa
push
push
sahf
pop
outs
ficomp
jmp
push
pop
ds
fmul
adc
add
nop
enter
test
or
in
adc
push
xchg
(bad)
popa
xchg
sbb
add
pop
loopne
nop
into
stos
out
pop
jge
dec
mov
dec
push
inc
sbb
xchg
inc
and
mov
and
ins
dec
fstp
js
retf
pop
jmp
rcl
movs
push
pushf
(bad)
loopne
push
mov
cmp
jmp
ret
aas
jmp
int
pop
(bad)
adc
sub
mov
cmp
push
mov
and
fadd
mov
inc
jae
rcl
(bad)
jnp
enter
mov
bound
fwait
rcr
popa
stos
adc
sahf
icebp
push
mov
inc
mov
(bad)
cld
jmp
inc
mov
add
dec
mov
jl
mov
pop
pop
adc
int
jmp
push
jns
jmp
pop
jb
cmc
xor
ins
add
je
imul
in
movs
int
cdq
mov
pop
(bad)
add
mov
repnz
jmp
mov
(bad)
adc
xor
push
pushf
and
mov
fisub
(bad)
push
and
popa
in
and
jecxz
daa
sub
mov
sbb
mov
cmc
mov
cdq
sbb
xor
xchg
or
cmc
and
mov
mov
neg
dec
aas
sub
dec
xor
push
mov
mov
js
dec
call
jb
jecxz
cdq
xchg
fstp
aas
pop
adc
dec
add
adc
xor
call
bound
inc
inc
cli
lds
imul
dec
jmp
dec
cmp
xor
mov
in
test
jo
xor
inc
idiv
es
fimul
(bad)
gs
std
dec
(bad)
js
fsubr
dec
sbb
loope
xor
mov
add
mov
fwait
ret
jb
jg
ret
shl
mov
mov
inc
in
movs
sbb
test
out
int
out
adc
add
and
mov
sub
mov
jbe
mov
rcl
icebp
sbb
and
aad
adc
shl
push
ds
inc
mov
cs
xor
fnsave
lock
shl
pop
out
sbb
(bad)
fld
jge
add
stos
inc
mov
jmp
sbb
ja
inc
bound
loope
sbb
scas
cwde
add
or
or
outs
fdiv
call
jb
repnz
sub
inc
cld
ins
mov
sbb
adc
pushf
cmp
sbb
test
dec
stos
sbb
inc
xchg
std
xchg
fnstsw
sub
sub
fwait
sub
into
mov
xchg
aad
xchg
jne
pushf
jecxz
inc
in
lods
mov
pop
jecxz
sbb
cld
jl
stos
in
sbb
mov
ss
lods
inc
jl
popf
cld
pop
push
xor
test
sub
scas
(bad)
mov
scas
mov
fisttp
std
dec
gs
and
aas
mov
hlt
mov
arpl
add
and
int3
xchg
dec
(bad)
rcr
out
ffreep
add
(bad)
mov
cmps
movs
adc
xchg
push
sbb
(bad)
jbe
push
pusha
cwde
int
jmp
dec
adc
add
sti
cwde
inc
ror
in
mov
retf
outs
ins
call
jmp
ss
stc
pushf
sub
adc
jmp
mov
hlt
imul
cmp
push
aaa
mov
rcr
cmps
fld
(bad)
mov
call
or
or
and
or
mov
jl
fbld
(bad)
jl
nop
cmp
push
mov
or
test
push
int
out
dec
test
ficom
cmc
sahf
or
idiv
push
or
call
int3
cmp
sbb
call
jnp
mov
mov
mov
push
pop
rep
sbb
pop
out
pop
data16
sbb
mov
adc
xor
and
jne
xor
out
dec
je
dec
pop
(bad)
and
rep
dec
add
div
inc
xchg
iret
test
data16
pop
pop
xchg
outs
mov
fimul
in
jecxz
xor
popa
sbb
stc
mov
popa
push
mov
aaa
fstp
pushf
fiadd
xor
xor
clc
out
add
push
jle
lods
stos
mov
adc
lds
and
cmp
test
xchg
mov
mov
sahf
lock
pop
adc
push
test
stos
call
jg
mov
bnd
cli
mov
push
cmp
shl
pop
cld
dec
ins
retf
push
lahf
mov
jle
scas
sbb
add
in
sbb
movs
inc
loope
test
push
imul
gs
inc
xlat
aas
or
mov
jge
inc
neg
out
sub
pop
movs
lahf
add
in
(bad)
inc
out
sbb
fidivr
bound
adc
fwait
mov
call
mov
jecxz
repz
push
push
aam
das
xchg
jne
sbb
add
aas
sub
jb
pusha
cmc
pop
add
and
or
popa
int3
add
sar
mov
xor
popa
das
ror
mov
jmp
dec
xchg
xor
in
in
(bad)
cmp
retf
sub
dec
sbb
cmps
mov
ret
rcl
sahf
in
xlat
rcl
jmp
cmp
jecxz
mul
imul
lock
ins
jne
int
fwait
imul
cmp
and
imul
push
lea
fidiv
mov
xor
test
jnp
pusha
jno
pop
int
ret
int
in
es
call
pop
sar
mov
nop
pop
pop
push
xchg
pusha
mov
pop
sub
sub
es
push
pop
sub
cli
xlat
fcomp
arpl
imul
cmp
xor
mov
imul
xchg
cmp
dec
mov
popa
dec
(bad)
xor
push
push
or
mov
jge
loopne
mov
mov
mov
(bad)
jnp
push
mov
outs
jg
mov
xchg
inc
aam
(bad)
(bad)
xor
jmp
cmp
int
call
push
lods
dec
sbb
pop
pop
cli
adc
mov
je
ins
mov
adc
jb
pop
dec
out
retf
ins
in
jnp
inc
xor
mov
repz
or
mov
rcr
mov
cmp
push
fcom
vaddsubps
ins
mov
mov
inc
mov
or
rcl
push
adc
push
fsubr
lahf
cld
jmp
sbb
jno
mov
out
push
enter
push
inc
aad
pop
pop
push
(bad)
sbb
ins
mov
jmp
popf
imul
mov
out
jmp
xchg
es
inc
and
mov
sub
add
movs
out
pop
sub
arpl
jmp
inc
mov
aad
push
retf
mov
xchg
clc
push
mov
lahf
fwait
loope
add
jmp
test
xchg
xor
aaa
xchg
xchg
je
jg
mov
mov
mov
jmp
fmul
in
sbb
popa
mov
or
dec
rcl
adc
imul
nop
into
gs
(bad)
shl
sbb
lahf
int
xchg
jne
aad
adc
movs
(bad)
rcr
lods
xchg
adc
addr16
fild
(bad)
xor
ret
pop
jns
mov
xchg
popf
pop
dec
int
es
pop
and
(bad)
iret
add
xchg
call
sbb
out
push
es
jno
out
nop
push
mov
enter
dec
lods
imul
add
sbb
aaa
(bad)
mov
or
pop
leave
or
addr16
fst
aam
jecxz
dec
arpl
repnz
rol
push
paddd
imul
adc
pushf
imul
push
and
rcr
outs
cli
test
mov
out
sti
mov
ror
sbb
ret
and
(bad)
icebp
scas
jmp
out
jns
enter
inc
arpl
mov
jp
imul
lods
aad
sub
push
pop
imul
cmp
call
dec
inc
sub
sub
mov
arpl
sub
sub
inc
out
xor
shl
jbe
stos
ins
jp
xchg
retf
dec
lods
mov
mov
pop
mov
mov
mov
pop
test
(bad)
and
adc
out
cli
cmps
add
xchg
pop
sar
popa
ins
mov
cmp
fwait
add
les
mov
add
mov
fnsave
xchg
xor
inc
mov
rcl
mov
sbb
outs
jne
inc
stc
lahf
sbb
add
cwde
add
pusha
xor
jmp
xchg
outs
ja
push
pop
fld
push
adc
dec
ja
sbb
xchg
cmp
leave
cmp
out
mov
cmp
and
xchg
cdq
(bad)
loopne
call
inc
mov
inc
daa
mov
dec
lahf
push
add
clc
jb
pop
call
aam
in
aas
fdiv
fs
or
ss
mov
mov
pop
jb
mov
aaa
jmp
jge
mov
xlat
adc
in
cwde
ficom
mov
jmp
dec
cmp
sub
or
jmp
mov
mov
cs
sbb
jl
data16
aas
enter
(bad)
or
in
sbb
ins
call
cwde
jle
adc
adc
nop
adc
jle
in
popa
cmp
fsubr
and
jp
test
or
out
aad
add
pop
xchg
cmps
jle
push
xor
and
movs
repz
repnz
ror
inc
mov
es
cmps
push
imul
popa
clc
jp
cs
mov
popa
and
data16
pushf
aad
mov
or
iret
pop
and
out
mov
loopne
stos
int
xchg
into
fmul
sbb
sub
popa
mov
leave
jecxz
stos
les
retf
dec
mov
jne
ss
(bad)
push
mov
aam
daa
test
fadd
xor
and
pushf
test
jno
outs
pushf
pop
jno
xor
mov
ret
dec
add
and
jmp
lahf
mov
xchg
data16
or
test
call
popa
mov
gs
shl
ss
adc
(bad)
icebp
mov
bound
mov
xchg
push
sub
pop
pop
sub
enter
or
push
pop
pop
pop
sahf
lock
xor
pop
cwde
das
hlt
inc
stos
jae
retf
test
sbb
inc
push
test
push
jge
xchg
jmp
data16
cli
rep
in
icebp
push
push
into
shl
pop
inc
sub
(bad)
mov
fstp
push
leave
mov
push
xlat
loope
rcr
je
loopne
stos
and
repz
push
lds
sub
aad
mov
mov
push
and
cmp
sbb
jl
xchg
psllw
jp
or
mov
sbb
pop
sbb
push
shr
pusha
push
add
xor
and
pop
inc
mov
sbb
and
add
or
lock
scas
cs
js
cmp
push
daa
sti
xchg
mov
mov
sub
xchg
xor
sbb
jp
fild
push
in
xor
adc
push
mov
xchg
xor
repnz
pop
arpl
or
sar
cs
jle
jle
xchg
jns
mov
and
sar
popf
sub
mov
aas
movs
jg
push
scas
stos
jp
push
jg
add
jne
shl
les
jge
ja
(bad)
adc
stc
movs
xor
xchg
arpl
pop
cld
cmps
pop
xchg
jbe
xor
ret
fist
js
sbb
jmp
inc
mov
mov
in
dec
and
hlt
stos
or
pushf
adc
test
inc
movs
imul
and
mov
mov
add
in
mov
sbb
push
mov
cmp
mov
pop
mov
mov
sbb
aam
and
pop
push
in
dec
mov
jb
hlt
movs
cmp
xor
mov
push
jmp
rcr
aad
xlat
push
cmp
outs
sub
iret
mov
ret
xchg
push
mov
movs
push
dec
(bad)
loope
mov
scas
mov
loop
sub
cmp
adc
push
pop
in
mov
movs
icebp
and
push
cwde
sti
jo
sbb
loope
pusha
mov
jge
mov
jecxz
(bad)
popf
and
ins
aaa
pop
inc
pop
dec
sbb
or
loop
fisub
inc
xchg
outs
jne
and
lds
enter
pop
mov
loop
imul
mov
cmp
les
call
fcomp
retf
int3
jbe
outs
mov
test
scas
cmp
jne
mov
sbb
hlt
outs
dec
mov
fstp
xor
cld
cmp
(bad)
push
ja
hlt
dec
xchg
gs
int
inc
jl
lea
inc
in
xchg
dec
sub
mov
scas
repnz
fs
sub
fld
out
mov
xchg
gs
xor
cmp
sub
or
stos
push
and
sub
cmp
(bad)
push
pop
mov
jp
sbb
mov
add
xchg
inc
inc
and
aaa
(bad)
test
cdq
jg
and
adc
mov
mov
int3
leave
and
jae
sbb
dec
and
cli
dec
xchg
sbb
push
sub
xchg
les
std
adc
and
bound
pop
ret
sub
scas
inc
inc
outs
outs
xor
inc
lds
fild
adc
mov
fstp
sub
fst
cs
int3
out
retf
push
pop
xor
imul
lahf
xchg
xchg
lahf
(bad)
xor
cmps
push
aaa
in
jle
or
movs
daa
push
ins
pop
mov
dec
sub
push
add
fiadd
pop
das
push
pop
hlt
cmp
mov
add
outs
jecxz
icebp
push
add
jle
arpl
fucom
int3
pop
movs
test
ret
adc
sbb
push
sahf
fmul
xchg
cmps
xor
jmp
ret
ret
cdq
mov
sbb
jns
cli
sub
int3
cwde
imul
ret
sbb
mov
pusha
rcr
pop
hlt
xor
daa
and
out
arpl
dec
std
dec
popf
in
jne
imul
pop
lock
sub
(bad)
and
inc
mov
jle
xor
test
adc
stos
add
loopne
inc
pop
imul
xchg
outs
or
test
lods
xchg
das
or
jne
cmp
icebp
arpl
sbb
pmulhw
or
jmp
imul
leave
pop
or
je
test
jae
(bad)
mov
(bad)
je
mov
aas
sbb
xor
in
inc
mov
jg
popa
xor
pop
mov
and
mov
repz
adc
push
fstp
adc
adc
and
cmp
xchg
jl
add
dec
fld
stc
and
dec
arpl
pop
sub
mov
pop
push
sbb
and
stos
jg
pop
fldlg2
ins
stos
xor
xor
imul
mov
adc
es
ja
sub
jne
xchg
hlt
cwde
(bad)
mov
pop
and
call
ins
inc
inc
xchg
push
xchg
xor
mov
fwait
cmps
imul
adc
mov
push
xor
jne
pop
sahf
jbe
into
bound
(bad)
pop
sub
ret
(bad)
js
ss
ja
ins
jbe
pusha
sbb
popa
pop
es
das
mov
es
jno
cmps
sub
cmp
jb
or
imul
in
inc
or
sub
push
pop
cmp
test
jl
sub
cdq
nop
push
mov
les
(bad)
out
jp
fsubr
jbe
jle
rsm
ins
(bad)
push
fst
enter
push
stc
fidiv
or
inc
aas
adc
jns
loop
pop
push
clc
xchg
push
mov
int3
push
mov
call
and
cdq
mov
loopne
or
push
jns
add
jno
sub
repz
ja
or
jo
cmps
ror
fs
jbe
in
outs
pop
xchg
lods
jp
mov
xchg
adc
inc
lahf
rcl
jecxz
int3
popa
(bad)
shr
in
sub
(bad)
in
push
push
pop
xchg
cmp
gs
inc
fcomp
mov
jns
std
test
push
xchg
or
clc
test
cmp
mov
cdq
inc
inc
dec
shl
pop
lods
dec
and
gs
pop
pop
inc
jnp
(bad)
jbe
sahf
sub
je
xchg
ret
data16
repz
bnd
ins
das
daa
and
lods
repz
xor
adc
sar
loope
addr16
dec
out
add
mov
test
ud0
mov
sub
out
rcr
imul
arpl
sahf
(bad)
mov
lods
push
and
rol
mov
outs
adc
mul
and
jmp
xchg
jb
dec
repnz
xor
or
data16
mov
sbb
(bad)
retf
cdq
fld
add
retf
and
daa
add
setns
xor
mov
iret
std
mov
jb
xchg
sbb
xor
mov
mov
int
xor
rcl
cmp
test
sar
mov
mov
cli
rcl
fucomip
mov
dec
inc
mov
repnz
mov
push
mov
aam
and
iret
add
jecxz
xchg
in
push
dec
retf
mul
sbb
cmp
mov
sub
cdq
cmp
(bad)
push
fwait
out
outs
dec
sbb
or
adc
pop
iret
mov
cmp
fidiv
(bad)
mul
or
gs
add
mov
mov
popa
ss
neg
or
pop
ret
cmps
and
daa
out
lea
sbb
cmp
add
imul
int
das
mov
sub
arpl
push
or
sub
cmp
dec
xchg
shr
lock
mov
or
ins
xchg
fsub
mov
xchg
lods
stc
add
xor
add
popf
test
dec
or
cmp
add
sbb
jle
dec
test
frstor
xchg
push
pop
xchg
fbstp
and
pop
mov
jb
popf
push
dec
add
jg
clc
aas
adc
ds
or
pandn
jl
fisub
adc
mov
and
cdq
dec
mov
ins
fadd
xchg
gs
fwait
push
cmp
push
adc
sbb
xchg
lods
test
jns
popa
in
sahf
push
idiv
hlt
sub
aas
(bad)
jno
mov
pop
mov
loop
cli
daa
adc
dec
xchg
cdq
and
retf
inc
mov
xchg
fnstcw
and
fs
dec
out
movs
inc
mov
pop
mov
adc
jns
xchg
ret
fld
bound
sbb
outs
imul
cld
sbb
pop
xchg
int3
jle
mov
aas
inc
cdq
or
inc
sbb
pop
test
mov
imul
adc
loope
pop
and
sbb
xor
and
hlt
mov
mov
out
mov
or
xor
push
fs
mov
sbb
outs
fnstenv
cld
mov
rcl
sbb
push
push
xchg
dec
xchg
(bad)
add
pop
jnp
adc
mov
jmp
sub
xor
out
(bad)
lods
cmp
fsub
outs
(bad)
mov
jmp
aas
jmp
pop
or
xor
jmp
add
pop
jnp
ds
and
mov
mov
fisubr
cwde
and
sbb
or
cmc
add
mov
shl
cli
test
cli
(bad)
jecxz
cdq
inc
mov
cmp
dec
mov
push
and
arpl
ficomp
fadd
jae
pop
jmp
in
into
outs
ret
int3
push
add
push
(bad)
cdq
mov
add
xchg
test
lods
cmp
push
push
outs
int
inc
lahf
sbb
sub
jbe
leave
cld
aas
fistp
mov
pop
std
out
bound
mov
shl
or
xchg
cmc
push
hlt
fcmovne
mov
(bad)
sar
push
movs
mov
sub
xor
in
leave
(bad)
jnp
js
stos
repz
add
daa
or
push
mov
jecxz
sti
cs
lods
je
ror
sbb
mov
mov
cwde
js
mov
bound
and
push
pop
pop
sub
add
cmps
loopne
das
inc
loopne
cdq
pop
ror
(bad)
or
push
jbe
lods
std
test
mov
and
dec
jmp
into
std
inc
je
sbb
cwde
sbb
dec
fidivr
das
add
cmp
or
ss
clc
xchg
or
jb
fcomp
cs
jle
or
dec
or
jne
or
dec
fwait
int
cmps
jbe
mov
sbb
pop
xchg
mov
mov
aaa
push
loop
(bad)
cdq
leave
popa
iret
push
je
arpl
imul
lods
cmp
add
(bad)
call
loope
inc
mov
mov
adc
movs
pop
cmp
xchg
cmps
ds
inc
or
fisttp
mov
push
fdivrp
sahf
dec
push
lods
sub
or
lods
cmc
mov
mov
jb
movs
mov
lahf
sub
xchg
cmp
mov
sbb
aaa
add
push
dec
cmp
jne
ss
das
adc
cmp
push
sbb
data16
fbstp
and
loop
push
mov
or
mov
scas
cmp
xor
ret
dec
adc
dec
pop
ins
mov
iret
test
add
std
inc
cwde
mov
test
jp
inc
movs
pop
push
movs
bound
addr16
loope
mov
cmp
mov
nop
adc
aaa
mov
clc
mov
nop
pop
inc
cmp
stos
(bad)
dec
cmc
es
push
fs
daa
mov
aas
sbb
(bad)
dec
cli
add
loop
pop
imul
mov
mov
or
pop
hlt
lahf
adc
(bad)
mov
ffreep
ss
rcl
cli
outs
or
retf
mov
cmps
fs
repz
pushf
mov
add
dec
icebp
clc
stos
movs
sub
les
xlat
out
jne
jns
leave
pusha
mov
(bad)
out
cdq
fmulp
mov
adc
push
xor
hlt
mov
dec
jle
fiadd
int3
jae
in
and
mov
lock
je
ds
or
std
push
ins
mov
stos
jbe
xlat
xchg
(bad)
call
xlat
pop
rol
imul
clc
mov
mov
mov
push
add
jb
(bad)
pop
xchg
call
repz
xchg
mov
add
xor
fadd
mov
into
pop
push
jo
and
xchg
pop
ror
fs
sub
jle
lock
jae
mov
and
and
mov
add
mov
adc
push
sbb
pop
adc
adc
fst
out
addr16
sub
adc
imul
inc
xor
pop
xor
(bad)
stc
cs
cmp
xor
xor
mov
fstp
test
or
pop
cdq
adc
nop
xchg
addr16
and
mov
cmc
xor
mov
stos
dec
inc
jno
in
test
push
popa
or
cmp
and
fild
push
jp
gs
pop
mov
fsub
jmp
lahf
push
int3
mov
xchg
mov
(bad)
sar
jge
jmp
into
jg
pop
test
mov
out
iret
es
adc
leave
mov
sbb
push
xchg
inc
push
mov
fimul
movs
sub
sti
mov
cwde
loop
ja
lods
mov
xlat
cli
xor
fmul
hlt
and
pop
or
(bad)
or
jp
mov
mov
mov
lods
add
retf
test
call
mov
mov
inc
pop
iret
std
das
scas
dec
jmp
xor
push
outs
test
ret
cdq
inc
fstp
(bad)
sub
sub
mov
push
pop
out
test
ins
pop
add
add
and
neg
sbb
loop
call
retf
fisub
jno
cmp
mov
pop
adc
add
inc
daa
out
stos
std
out
inc
cdq
cld
inc
jb
add
mov
inc
outs
pop
movs
pop
fcomp
test
jbe
(bad)
aad
adc
adc
outs
js
mov
ja
add
inc
nop
div
je
out
mov
out
add
ret
and
push
xchg
int3
sar
sar
mov
je
inc
stos
xor
xor
in
in
dec
jo
mov
fistp
ds
push
lods
or
or
pop
xchg
out
movs
icebp
xlat
into
rol
les
mov
test
sbb
adc
(bad)
retf
lock
cmp
sti
in
xchg
fld
ret
xchg
add
inc
nop
mov
mov
mul
out
cmovl
das
mov
mov
jae
cwde
add
cmps
daa
inc
shr
jae
dec
sub
cmp
ds
jbe
mov
sti
add
add
adc
popf
and
enter
(bad)
pop
int3
mov
mov
iret
or
dec
xchg
and
sbb
sbb
xor
jo
dec
inc
retf
pop
jo
add
pop
ins
(bad)
(bad)
sbb
ror
jg
or
or
(bad)
pop
lahf
add
lods
mov
push
mov
xor
leave
nop
movs
jno
cmp
cmp
pop
push
(bad)
cmp
imul
ds
push
push
popa
dec
cdq
(bad)
xchg
mov
mov
out
add
out
ds
pop
loopne
push
aas
sub
out
mov
retf
test
daa
push
pop
(bad)
ds
xor
(bad)
cld
sbb
xor
shl
dec
into
push
in
or
repz
sbb
mov
ja
mov
add
jle
or
loope
ror
outs
jns
sub
out
inc
lea
pop
cmp
nop
leave
xchg
stos
fisubr
push
jne
mov
sbb
setbe
fwait
cmc
sahf
or
(bad)
lods
mov
repz
or
xchg
adc
sub
mov
jo
lahf
and
fcmovbe
jmp
adc
mov
add
xlat
pop
mov
and
fcomp
cmps
add
cs
sbb
movs
in
jmp
xor
lock
xor
cmp
cmps
jecxz
into
pop
ret
mov
inc
or
cmp
cmps
inc
fsubrp
inc
push
or
jns
mov
loope
cmc
into
mov
mov
push
lods
popf
jnp
adc
adc
loope
mov
fild
rol
shr
sub
mov
rcr
cmovp
mov
or
jp
mov
je
cmps
pop
dec
ins
test
adc
and
fs
in
dec
dec
mov
xchg
pop
cmp
sbb
push
xchg
pop
inc
clc
cmps
int
jb
pop
sub
dec
xchg
ret
add
aam
fs
add
mov
(bad)
jmp
lea
add
inc
movs
sub
aad
popf
cmp
aad
fsubrp
nop
dec
loopne
call
inc
and
push
jno
bound
les
rol
push
cmp
out
stc
jle
(bad)
nop
imul
push
push
sbb
cdq
popf
ret
xor
out
and
les
inc
jecxz
fcmovnu
dec
adc
add
cmp
nop
int
add
xchg
inc
daa
ins
inc
and
mov
ror
fimul
ret
pop
addr16
adc
fst
pop
mov
(bad)
jb
xlat
sbb
dec
jo
mov
add
sbb
aas
sbb
lidtd
ins
rol
ja
jmp
enter
movs
dec
jmp
fcom
fbld
xchg
xchg
outs
xor
or
mov
mov
push
push
stc
lods
fmulp
mov
aad
cmps
sub
mov
sahf
add
(bad)
add
jne
xor
pop
jne
jmp
inc
popa
sbb
and
adc
ss
int3
cmp
cwde
jl
mov
mov
xor
daa
rol
in
jo
add
in
jmp
pop
cmp
sub
jno
loopne
jno
add
sub
dec
xor
xchg
mov
ret
fwait
shr
xor
jge
fwait
push
div
mov
mov
int
scas
or
fisttp
push
ds
jb
push
mov
dec
inc
aam
imul
jmp
sbb
ror
xchg
loopne
div
push
in
and
fstp
test
adc
mov
fisttp
(bad)
or
cmps
call
ja
ret
add
sbb
or
adc
sub
and
lods
mov
dec
outs
stos
mov
jmp
(bad)
out
dec
cmp
cli
or
inc
or
mov
cmp
add
ja
jo
push
call
push
imul
out
data16
scas
cmps
push
scas
pop
dec
mov
mov
xor
int
fild
cmp
mov
(bad)
xor
cmp
lods
add
or
shr
sub
lods
jmp
adc
(bad)
sbb
dec
pop
mov
push
into
dec
push
sbb
pop
push
pop
pushf
popf
or
lods
xchg
leave
inc
std
mov
imul
out
loope
mov
and
into
mov
cmps
cmp
add
add
cmp
push
pmulhw
and
cmc
pop
xchg
dec
mov
push
dec
inc
psubw
jmp
jno
shl
mov
loopne
loope
out
mov
das
xor
ror
mov
jg
cs
int3
out
jge
add
fisub
and
retf
mov
cli
sbb
lods
lock
ins
out
mov
cs
xchg
xchg
sbb
call
pop
add
jnp
cs
ins
xor
adc
in
mov
pop
test
inc
in
out
jge
jg
inc
pushf
into
retf
sub
sub
lahf
sbb
ins
test
imul
imul
jns
fild
repz
inc
(bad)
pop
rcr
imul
test
(bad)
shl
clc
call
xchg
adc
fldl2e
pop
outs
out
jno
mov
call
cwde
jg
sbb
aaa
push
push
imul
aad
clc
jo
push
sbb
leave
outs
xchg
pop
lods
and
jae
adc
cwde
jmp
sub
fnstsw
(bad)
retf
bound
repnz
jl
or
stos
shr
test
push
adc
inc
mov
sbb
and
(bad)
jae
and
fcomi
xor
loopne
mov
jecxz
pusha
dec
push
cmp
or
sti
inc
inc
scas
and
jnp
adc
test
or
jb
mov
js
lods
pop
mov
out
mov
ins
mov
jl
jne
loopne
adc
xor
jae
dec
pop
push
ror
sub
shl
outs
ss
ins
movs
ret
xchg
bound
xchg
and
cdq
cmps
mov
or
pop
pop
sbb
or
push
clc
cld
mov
pusha
push
pop
pop
mov
mov
cmc
and
in
test
mov
dec
je
dec
call
add
(bad)
bound
rcr
cmp
xchg
shl
ja
lahf
xor
push
xchg
fnstsw
dec
ins
sbb
retf
fmul
imul
mov
mov
js
arpl
and
cmp
pop
enter
push
into
out
adc
pop
call
fld
fwait
loopne
shl
sub
dec
(bad)
icebp
rcl
fiadd
(bad)
fcmovb
and
sbb
mov
mov
or
sar
test
test
cmp
or
fadd
xor
jns
daa
push
inc
jp
jecxz
movs
jge
cdq
fisub
cmps
(bad)
push
aad
cmp
dec
sub
aam
mov
(bad)
(bad)
sub
iret
clc
out
cmc
lods
xchg
cld
sbb
movs
adc
nop
push
jmp
ins
jmp
push
call
or
mov
jmp
fld
jle
cld
(bad)
neg
in
mov
loopne
popf
dec
popf
mov
xor
pop
ret
cmps
and
and
or
or
jmp
mov
jmp
fsub
pop
cmps
popa
adc
xlat
dec
sub
xchg
push
fidivr
xrelease
icebp
cmp
adc
inc
xor
aaa
mov
test
(bad)
fstp
addr16
lea
cmps
mov
sub
push
stos
sbb
add
int
dec
jmp
out
and
mov
xchg
cwde
(bad)
(bad)
or
(bad)
pop
adc
loop
jo
bound
aas
lods
clc
out
int
popa
or
aas
jl
push
mov
mov
push
or
mov
call
add
mov
mov
(bad)
cmp
ds
and
sub
xchg
es
sbb
mov
push
sbb
mov
das
xor
dec
jmp
stos
xchg
adc
jno
or
not
adc
sub
rcl
dec
xor
or
imul
enter
or
enter
imul
push
and
or
jge
repz
lods
imul
mov
sar
cmp
cmp
aam
popa
addr16
inc
ins
rcl
out
or
inc
leave
or
push
fisttp
icebp
sub
mov
inc
adc
(bad)
repz
mov
mov
imul
and
shl
and
fwait
inc
(bad)
sub
stos
jecxz
daa
scas
xor
mov
jmp
push
mov
push
repz
jo
fiadd
jl
imul
data16
pop
mov
adc
cmps
or
out
cmp
out
aas
(bad)
mov
xor
add
mov
nop
sbb
ret
fcmovnbe
sub
es
shl
dec
dec
mov
js
cmp
adc
int3
lock
pop
mov
addr16
xchg
adc
sub
fsubp
jae
je
popf
mov
movs
cmp
or
leave
dec
test
or
out
and
mov
test
xchg
mov
mov
in
fsub
mov
mov
push
adc
jp
cmp
ss
dec
push
jns
push
add
stc
leave
xlat
mov
mov
dec
in
adc
push
adc
mov
js
jmp
call
mov
(bad)
hlt
sub
cdq
cdq
jl
imul
lods
loope
mov
daa
mul
sub
xor
iret
jge
push
push
ins
xchg
adc
aad
pop
or
add
cs
(bad)
jp
jmp
xchg
mov
and
pop
cmc
push
or
add
shl
scas
jg
shr
push
aam
imul
pop
xor
xchg
loopne
push
icebp
es
mov
test
or
enter
loopne
lahf
or
popf
adc
test
jle
in
pop
call
adc
cmp
pop
pusha
mov
int3
(bad)
hlt
xchg
out
nop
leave
loopne
sub
sbb
jg
xor
mov
sbb
bound
mov
mov
adc
rol
iret
dec
(bad)
xchg
push
call
div
add
pop
mov
or
out
mov
mov
sub
xor
aad
popa
mov
call
lahf
mov
add
jecxz
jmp
or
aas
leave
into
stos
loop
lods
dec
dec
cwde
push
xchg
or
sbb
dec
jl
adc
ficom
add
stc
sahf
dec
not
rcl
imul
fisttp
jl
and
mov
fstp
(bad)
mov
dec
lds
int
retf
cld
retf
daa
add
xor
outs
gs
ret
repnz
shl
or
inc
test
dec
gs
std
nop
dec
jbe
test
jne
mov
movs
mov
dec
inc
mov
mov
sti
sbb
inc
ret
xor
repnz
sub
cdq
iret
das
iret
ss
jmp
sub
loopne
ror
dec
pop
mov
jecxz
pop
cmp
xchg
call
ror
leave
jno
xlat
test
lds
cmp
cwde
lods
add
jp
dec
mov
aad
loope
fs
idiv
mov
out
mov
fild
inc
jecxz
fwait
sub
popa
ror
fucom
loope
dec
pop
jge
jns
and
je
call
jo
out
sbb
cs
gs
mov
out
hlt
push
or
test
call
addr16
out
icebp
mov
jl
dec
int3
(bad)
popf
xchg
js
rcl
push
mov
mov
xor
pop
out
mov
mov
cmp
adc
inc
and
cdq
nop
xchg
fs
scas
fbstp
jnp
and
sti
dec
repz
xchg
movs
mov
lea
and
xlat
(bad)
mov
sbb
xchg
daa
push
cmp
sbb
xchg
dec
xor
and
lock
mov
enter
inc
sbb
and
xlat
mov
outs
dec
mov
ins
sbb
jb
test
cld
mov
es
xlat
stc
(bad)
daa
shr
mov
movs
lar
sbb
mov
cwde
ja
xchg
int
sub
ror
into
pop
sbb
sub
push
inc
daa
jmp
mov
xchg
sub
lock
iret
loop
das
adc
mov
cmp
sub
repnz
pusha
add
scas
pop
jmp
cmp
push
lahf
lea
adc
(bad)
bound
ret
adc
jb
in
add
add
sub
test
icebp
xchg
stos
mov
test
cmc
sar
cdq
(bad)
ins
and
or
in
cld
jl
sub
rcr
movs
(bad)
std
in
lea
inc
retf
pushf
sbb
pop
mov
mov
push
cld
ficomp
push
inc
push
(bad)
xor
sub
(bad)
fisttp
xchg
xor
mov
js
xlat
ret
dec
lods
mov
retf
add
xor
int3
pop
and
mov
loope
mov
mov
daa
pop
out
inc
add
ret
mov
cmps
addr16
mov
lods
pop
xchg
ret
jmp
mov
sub
sbb
sub
jmp
movs
fs
mov
mov
push
shl
push
leave
pop
stos
push
in
xor
(bad)
xchg
cmp
imul
imul
dec
fdiv
and
sti
cmp
xor
mov
jecxz
iret
cmp
mov
fidivr
pop
adc
aaa
fistp
dec
inc
add
shl
and
fld
(bad)
jle
mov
adc
popf
pop
icebp
adc
and
ficomp
pop
jns
pop
rol
cmp
and
cmp
dec
or
pop
popf
xor
sub
ficom
jnp
xor
outs
mov
mov
jne
adc
sub
pop
and
sbb
pop
and
pop
in
xchg
lods
retf
mov
jb
loopne
sti
div
jmp
pop
or
fiadd
aaa
iret
push
mov
sub
push
frstor
loop
fidivr
xor
push
xchg
push
mov
aas
add
hlt
pop
mov
retf
jb
arpl
jmp
outs
xor
bound
(bad)
and
mov
retf
cmp
mov
jno
shr
lods
mov
pop
nop
stc
pop
not
pop
shl
test
xchg
jle
in
mov
and
pop
mov
shl
inc
jmp
out
inc
dec
and
fs
mov
aaa
imul
cmps
sub
icebp
sbb
leave
and
ins
test
ds
sub
in
test
movs
sbb
mov
and
test
mov
lock
mov
adc
cmps
fist
mov
div
add
outs
mov
inc
adc
jge
fdivr
sub
sbb
not
cmp
jmp
sub
pop
(bad)
sub
call
fiadd
retf
stc
dec
xchg
repnz
mov
add
sub
xchg
sbb
xchg
sub
or
or
stos
(bad)
std
lods
add
dec
iret
rol
cmp
movs
(bad)
sub
xchg
cmps
ror
shl
push
sahf
clc
mov
sbb
add
push
dec
sti
cs
inc
int3
push
pushf
xor
mov
js
in
sbb
mov
aaa
push
fidivr
push
mov
iret
pusha
cdq
pop
xchg
or
in
sbb
ret
pop
or
ins
gs
push
aaa
xor
loopne
ds
push
jno
dec
fwait
dec
loop
mov
push
cmp
push
adc
or
xchg
push
pop
loopne
dec
dec
movs
sub
(bad)
mov
aaa
dec
iret
dec
pop
fisttp
retf
rcl
fmul
xor
mov
lods
mov
ret
sub
fld
das
jbe
push
inc
adc
dec
pop
rep
lea
arpl
jae
pushf
push
cwde
pop
call
fidiv
jl
pusha
rcr
mov
in
add
cmp
dec
rcl
mov
cwde
mov
stos
adc
jmp
sub
mov
arpl
pop
mov
(bad)
and
and
pop
sbb
cmc
inc
and
or
cld
repnz
fisttp
xchg
jnp
pop
je
lods
scas
push
popf
cmp
sbb
jg
adc
mov
adc
push
jbe
push
sbb
push
les
xor
(bad)
jae
ror
movs
pop
and
sbb
lock
and
xchg
jne
scas
jle
mov
and
mov
push
in
hlt
add
push
push
rcl
or
xor
ficomp
mov
sar
cdq
sub
ins
inc
das
adc
imul
dec
cld
(bad)
in
sbb
and
jbe
in
pop
jo
or
int
or
sbb
loopne
push
xchg
sub
add
nop
jmp
setg
inc
push
xor
xor
repnz
test
pop
data16
ret
repz
jl
sahf
stos
outs
cmps
xor
jnp
sub
mov
sub
pusha
(bad)
dec
lahf
jo
dec
sbb
enter
ins
jo
loope
dec
push
cmp
aam
imul
add
popa
shr
popf
jg
push
dec
inc
loope
cli
jno
popa
dec
pop
aas
sub
outs
sub
loop
cmp
std
jecxz
and
jnp
cmp
and
hlt
repz
xchg
hlt
inc
push
jnp
inc
and
inc
(bad)
popf
loopne
mov
(bad)
leave
dec
push
inc
inc
xchg
and
test
xchg
leave
icebp
xor
jmp
hlt
daa
cmps
test
push
lahf
xchg
inc
xor
stos
shl
mov
xor
loope
fsubr
jmp
push
bound
push
push
cmc
or
cmps
or
lds
stc
cmp
cmp
sbb
jae
outs
into
push
xor
inc
sbb
sahf
xor
cdq
inc
pop
imul
add
and
shr
stos
pop
pusha
gs
arpl
pop
mov
cmp
add
int
inc
sub
jae
in
adc
clc
mov
retf
dec
xchg
jbe
cmp
mov
and
(bad)
sti
and
inc
dec
cmps
mov
ins
neg
int
(bad)
xor
cmp
inc
add
xlat
jecxz
mov
leave
fld
leave
scas
outs
mov
sub
xchg
leave
fst
stos
pop
int3
hlt
pop
add
test
stos
cmp
jbe
data16
xchg
sbb
or
jmp
aaa
pop
and
iret
scas
push
pop
in
inc
mov
push
test
int3
jmp
rcr
pop
adc
mov
outs
inc
add
in
inc
and
(bad)
pop
pop
mov
or
inc
pop
call
fisub
test
mov
cmps
cwde
test
mov
mov
cmp
inc
pop
test
rcr
daa
mov
pop
add
mov
pop
loop
mov
xlat
test
ds
fsub
jg
aam
ins
dec
xchg
test
aam
sbb
neg
xchg
ds
fdiv
sbb
mov
mov
pop
jge
mov
push
xor
das
push
leave
inc
test
mov
cmc
mov
rcr
sbb
in
pop
dec
sbb
mov
sub
add
cmp
add
(bad)
mov
out
jne
lds
dec
xor
retf
push
popa
xchg
push
sti
lods
jae
outs
stos
dec
clc
ret
rcr
setl
mov
push
ja
inc
and
dec
out
push
pop
xchg
fdivrp
ins
ret
adc
xchg
fsub
push
ins
push
and
retf
add
pop
movs
stc
dec
pop
mov
mov
imul
loop
out
fstp
sub
retf
inc
mov
arpl
mov
sbb
shl
or
pop
dec
xchg
sub
dec
or
es
or
pop
or
push
dec
mov
shl
mov
loop
jg
lock
lea
push
and
or
outs
push
sar
retf
dec
xchg
inc
push
push
mov
arpl
neg
inc
call
push
aad
in
mov
imul
mov
cmp
sbb
lock
pop
fwait
xlat
xor
int
mov
jp
mov
neg
cmps
jns
test
stos
dec
das
stos
scas
mov
adc
dec
sub
std
aaa
pop
cmp
sti
and
hlt
pop
in
outs
psraw
xor
out
call
int
push
imul
jae
sbb
clc
mov
push
push
aad
cli
repnz
or
cmp
sar
imul
cmp
sar
frstor
ins
cmp
cmp
sub
xor
data16
mov
xor
add
je
out
and
sub
sub
xor
out
ss
and
ja
fiadd
in
repnz
gs
std
sub
mov
or
jb
fiadd
xor
jmp
iret
into
or
push
inc
daa
or
or
xor
mov
loope
sub
jnp
mov
pop
xchg
jl
mov
jecxz
retf
mov
in
jb
nop
inc
xor
loop
call
pop
dec
popf
dec
adc
sti
cmps
push
push
cmp
pop
sbb
xor
fistp
mov
sahf
sbb
jle
and
cli
(bad)
or
cmp
mov
mov
(bad)
fsubr
aad
or
ja
mov
nop
cwde
ins
mov
loopne
adc
xlat
lock
dec
xor
sbb
test
rol
enter
aad
push
addr16
jae
inc
lahf
pop
pop
out
add
mov
dec
push
lahf
jle
(bad)
in
scas
scas
fsubr
xor
popf
cmp
mov
cmp
cld
in
fsubr
pop
mov
mov
sbb
gs
loopne
inc
cmp
and
sub
fild
js
inc
pop
xor
and
jae
inc
popf
xor
(bad)
loop
adc
jbe
fld
adc
xchg
(bad)
(bad)
or
mov
arpl
out
stc
adc
xchg
mov
jmp
pop
add
jecxz
xchg
fwait
and
xchg
stos
adc
pop
xor
jnp
jge
inc
adc
jmp
jl
(bad)
sub
xor
loopne
stos
xchg
mov
mov
pop
hlt
pop
cli
popa
mov
retf
sub
mov
mov
and
pop
jp
inc
jo
jmp
(bad)
cli
retf
(bad)
jge
fsubr
es
movs
lods
mov
push
jle
ror
gs
lods
sbb
adc
out
or
outs
adc
lds
out
cmc
sti
cdq
fwait
inc
push
push
clc
ret
jae
sub
mov
in
sbb
iret
rol
cmp
outs
sbb
dec
add
push
xchg
hlt
add
ret
pop
mov
test
mov
jno
push
cmps
mov
mov
cdq
mov
dec
cmp
mov
mov
lods
sbb
xchg
mov
or
loopne
test
inc
jo
imul
adc
and
clc
jb
shl
das
jecxz
push
dec
mov
dec
adc
fmul
add
daa
push
and
not
ins
xor
call
ja
adc
xchg
cmp
jo
arpl
push
outs
cmp
stc
sub
sub
adc
fsubr
cmps
xchg
sbb
(bad)
out
retf
xchg
jmp
test
scas
test
and
test
nop
mov
sbb
aas
sub
mov
in
aad
out
mov
sbb
(bad)
mov
(bad)
sbb
sbb
dec
pop
fdiv
fld
scas
inc
sub
arpl
not
sub
in
and
enter
xchg
cmp
sbb
xor
push
push
or
adc
lahf
sub
lods
fxtract
out
jae
data16
cmp
push
and
sbb
stc
pusha
jmp
push
xlat
xor
adc
mov
ins
dec
icebp
js
fsub
fwait
in
mov
je
xchg
hlt
lahf
and
ret
sbb
sahf
mov
nop
inc
fcmovnu
mov
cwde
cmp
mov
mov
ret
dec
pop
test
mov
jp
shl
loope
(bad)
mov
or
xchg
aaa
adc
cmp
test
data16
cli
in
(bad)
in
ja
sbb
and
dec
fdiv
jne
lods
hlt
retf
scas
or
ret
js
stos
fcom
sbb
or
add
aam
xor
push
les
sbb
inc
pop
mov
mov
fcomp
or
(bad)
outs
mov
pop
jecxz
imul
inc
fcomip
aas
pop
ja
jle
imul
jge
pop
add
clc
daa
xchg
or
fnstsw
inc
pop
pop
das
outs
dec
outs
push
or
mov
sti
scas
fdivr
lock
add
inc
call
mov
xor
push
sbb
sbb
adc
sahf
dec
push
ja
ins
mov
cmps
adc
inc
add
push
test
sub
into
cmp
add
sub
daa
outs
cmc
ror
std
add
mov
leave
loope
aas
fdivrp
pop
or
or
aas
stos
push
xchg
adc
in
not
lea
adc
in
xor
or
push
out
mov
loope
xor
xchg
cmp
clc
pop
outs
stc
stos
jbe
xor
out
mov
ins
mov
push
fwait
dec
cmp
sbb
(bad)
imul
into
xchg
push
xchg
test
or
adc
push
popf
cmp
lock
mov
sbb
sub
sub
movs
adc
cli
or
sub
int
pop
pop
xor
cli
sti
(bad)
popa
addr16
mov
adc
inc
leave
pusha
repnz
cmp
fcmovbe
shl
imul
jbe
push
mov
xor
cmp
add
out
jp
xor
sbb
add
into
jo
dec
ds
pop
bound
xor
retf
neg
dec
leave
cwde
mov
lahf
adc
xor
inc
das
outs
xor
pop
add
or
inc
test
jb
sbb
cmp
mov
mov
push
std
dec
and
ret
ins
cmps
retf
repnz
dec
push
aad
add
(bad)
pop
push
pop
popa
clc
into
sub
rcr
ss
sbb
cmp
test
pop
mov
inc
nop
mov
mov
pop
fidiv
rol
cmps
xor
bound
(bad)
dec
(bad)
loope
inc
adc
loopne
sub
in
cmp
push
jns
push
or
push
adc
cmp
push
mov
mov
pop
sub
rcr
call
add
inc
jb
in
mov
mov
xchg
(bad)
loope
push
jae
lds
dec
adc
out
sub
inc
das
cdq
and
fist
jo
jp
cmps
or
xchg
mov
jmp
push
mov
cmp
aaa
and
fiadd
jmp
mov
into
pusha
fidiv
xchg
call
mov
int
loopne
inc
or
push
jb
cmp
fcmovnu
xor
inc
adc
pop
push
dec
sub
movs
ins
mov
jle
push
or
jl
add
inc
sub
push
pop
shl
sub
mov
scas
adc
dec
dec
add
mov
pop
daa
adc
mov
cmp
push
out
push
sbb
scas
mov
sbb
das
lods
sbb
pop
or
lahf
lods
push
movs
cmc
pop
add
icebp
add
mov
jg
aas
or
jnp
or
and
call
bound
shl
mov
or
dec
jae
cmp
mov
inc
test
sub
pop
test
(bad)
(bad)
ret
sahf
(bad)
xchg
add
lods
jg
call
retf
push
sub
icebp
shl
loopne
mov
(bad)
aam
cwde
mov
shr
mov
sub
cs
into
jo
add
ret
std
xchg
xchg
jmp
repz
jmp
out
xor
cmps
ret
inc
retf
jl
dec
(bad)
push
add
scas
push
push
ins
cmp
es
and
je
fwait
mov
lea
arpl
dec
push
fs
rcr
push
je
ret
mov
adc
xchg
jnp
ja
rcl
scas
cmps
shl
(bad)
dec
les
fiadd
adc
add
fstp
adc
jns
push
mov
adc
jg
sahf
lods
(bad)
out
jo
pop
jns
and
add
repnz
sub
sti
je
sbb
xor
mov
movs
popa
xchg
sub
xor
add
jmp
cmps
mov
aas
outs
dec
sub
ins
cmc
aaa
leave
inc
jle
popa
call
dec
sub
mov
enter
data16
outs
hlt
xchg
lea
pop
cmps
sbb
adc
mov
cs
call
mov
lods
rol
fcomp
das
paddusb
cmc
repz
stc
jmp
ret
add
ss
cmc
outs
hlt
pop
jae
addr16
fsubrp
repnz
xor
icebp
aam
iret
stos
cmp
mov
stos
xchg
scas
cwde
fcomp
sbb
push
mov
dec
(bad)
dec
inc
imul
xor
ficomp
xchg
cmp
test
mov
imul
rcr
jbe
cmps
mov
push
je
jmp
xchg
xor
call
fsubr
hlt
loopne
imul
mov
push
push
cld
int
xor
dec
out
mov
mov
gs
mov
xor
mov
or
cli
frstorw
mov
xor
inc
jmp
pop
dec
push
pop
or
and
or
test
push
sti
xor
rcr
or
mov
inc
xchg
cmp
lods
mov
push
mov
mov
jmp
ss
push
cmp
les
and
stos
inc
rol
movs
inc
jmp
int3
mov
sub
idiv
jmp
and
xor
es
xor
xchg
xchg
aad
mov
clc
mov
in
jle
rcr
mov
fcmovne
dec
inc
xor
out
or
add
pop
xor
lahf
std
jge
xor
int
imul
inc
jmp
imul
icebp
stos
xor
pop
bound
aad
add
(bad)
jp
(bad)
cli
inc
jle
ins
adc
push
(bad)
dec
ss
dec
bound
in
cdq
rcl
inc
movs
addr16
xor
es
push
retf
into
add
hlt
adc
cmp
dec
inc
loopne
icebp
pop
jg
mov
(bad)
cmp
mov
data16
pushf
rcl
outs
mov
add
out
sti
add
mov
and
mov
rcl
and
pop
shl
ss
xchg
jle
cmp
inc
ins
sar
push
enter
shl
test
push
in
jno
fwait
(bad)
in
sub
(bad)
hlt
push
in
hlt
push
outs
push
cmp
cmp
xor
das
test
and
ret
xor
std
ss
mov
xor
adc
and
imul
push
imul
xor
or
data16
mov
mov
ins
outs
add
pushf
cvtps2pd
shl
(bad)
sbb
out
push
xor
jae
popf
fcom
fild
out
popf
js
xor
push
mov
pop
jp
fwait
shl
mov
sbb
push
cmp
and
arpl
push
fmul
pop
dec
mov
sbb
push
out
shr
int
rcr
repnz
dec
(bad)
mov
into
je
mov
fist
loopne
cmp
shl
xchg
rol
jg
fnstcw
call
cmps
push
and
loop
gs
inc
mov
lea
inc
jns
adc
(bad)
call
xchg
lock
jo
frstor
push
fs
fstp
xchg
fild
pop
cmp
xor
push
rcl
movs
sbb
movs
pop
scas
mov
imul
jle
(bad)
lea
sbb
lods
arpl
dec
ins
inc
add
adc
dec
fist
aad
inc
dec
adc
aam
jne
or
je
inc
dec
mov
push
mov
loop
pop
test
mov
inc
xchg
aam
(bad)
mov
(bad)
std
inc
cmps
lahf
cmp
nop
xchg
jg
dec
(bad)
xor
ins
(bad)
push
push
mov
fst
and
pop
test
test
mov
fcom
mov
sub
movntq
out
sub
call
loopne
loope
inc
mov
lods
ret
inc
push
adc
adc
jge
push
cld
pop
ss
nop
setnp
cs
push
pusha
mov
unpcklps
cmp
in
cmp
pop
lods
lods
jbe
imul
in
add
push
nop
(bad)
push
imul
xor
(bad)
sti
out
ffreep
ret
cmp
imul
loop
inc
pushf
fdiv
popa
aaa
jle
fwait
retf
sub
ja
and
or
in
sbb
pop
mov
mov
je
xchg
pop
dec
imul
sbb
or
mov
sbb
dec
jo
pop
sbb
dec
pop
mov
aas
neg
mov
and
scas
dec
mov
into
call
push
movntps
aam
retf
pop
xchg
pop
les
mov
pop
xor
or
jecxz
jnp
xchg
xor
(bad)
aaa
or
lds
or
push
push
rcl
sbb
sub
add
aad
mov
adc
jg
jmp
push
pop
(bad)
dec
int
retf
imul
mov
icebp
mov
dec
inc
outs
hlt
inc
mov
sbb
and
es
inc
lock
xchg
repnz
or
mov
and
xchg
imul
out
cmp
pop
adc
out
ret
jb
sub
mov
xor
xchg
rcl
call
ror
je
jne
lahf
stos
dec
push
mov
shl
xchg
jge
lods
(bad)
dec
into
jle
test
jno
loopne
out
jb
repz
std
outs
xchg
sar
adc
push
cmp
cmp
mov
adc
sbb
mov
int
test
push
xchg
jbe
pop
aad
add
pushf
popf
lods
outs
or
xchg
xor
and
mov
loope
out
imul
mov
fs
rcr
push
mov
es
gs
cli
or
sar
jg
rcl
xor
fsubp
test
cwde
mov
inc
bound
fsubr
lods
inc
into
mov
mov
pop
mov
rcr
add
sub
mov
or
jnp
mov
cmps
call
xchg
mov
aas
mov
jmp
scas
adc
push
inc
mov
mov
iret
sub
or
call
gs
xor
pop
les
or
int
cwde
call
test
xchg
mov
outs
push
xchg
jmp
shl
fwait
pop
adc
stos
xor
pop
in
enter
inc
dec
(bad)
hlt
add
(bad)
fst
or
xchg
cs
adc
push
str
xor
scas
sub
lea
adc
mov
mov
mov
jb
push
xor
das
xor
push
scas
mov
push
pop
pop
fcom
cmp
cmp
pop
leave
clc
or
shr
and
push
imul
jne
test
in
dec
adc
lahf
cmp
adc
dec
xlat
aam
(bad)
push
retf
or
cld
jbe
xor
repnz
mov
mov
xchg
mov
xchg
lock
cmovle
sub
aaa
or
daa
sbb
mov
xor
mov
jmp
das
in
inc
inc
(bad)
jmp
sbb
push
cwde
inc
mov
mov
stc
or
stos
cld
outs
inc
mov
jnp
cmps
test
aaa
push
xor
and
out
xchg
mov
push
sbb
sbb
lock
adc
stos
aaa
dec
ret
cmp
shl
ins
inc
sbb
imul
adc
push
cwde
cmp
and
call
ins
jnp
jne
mov
loope
adc
popa
and
rcr
scas
div
inc
std
xchg
and
adc
idiv
jp
scas
mov
sti
repz
xchg
imul
out
sub
jno
fdivr
mov
jmp
mov
push
iret
sbb
cmps
push
std
out
je
mov
jmp
mov
aam
aam
jno
inc
cmp
js
cwde
dec
sbb
rol
cmps
adc
inc
outs
gs
lods
or
or
fisttp
(bad)
clc
or
scas
inc
jp
mov
aam
in
push
cs
sbb
jno
mov
xor
or
iret
iret
aas
mov
ja
sub
jle
pop
hlt
das
fwait
imul
aaa
cli
nop
inc
and
dec
xchg
jno
pop
push
ret
mov
les
mov
jg
popf
and
mov
das
jmp
cmp
lds
mov
sahf
ins
pop
mov
mov
add
mov
pusha
call
(bad)
lock
pop
jne
cmp
imul
imul
shl
test
jns
pusha
mov
in
ror
clc
or
jl
cmps
fsub
push
and
popf
rcl
mov
lods
enter
cli
fucomip
movs
les
ja
cmps
ret
jmp
rcr
stc
add
ja
jno
add
loope
mov
ror
xor
xchg
fwait
loope
into
dec
dec
cmp
jecxz
push
ror
ins
mov
push
push
add
mov
xchg
inc
cmp
in
rcr
sar
mov
sub
mov
jmp
iret
scas
mov
sub
cld
dec
in
out
adc
aaa
in
cmp
leave
add
lds
shr
cs
xchg
inc
push
dec
sub
inc
pop
add
test
fs
inc
adc
sub
out
mov
jmp
mov
sbb
loop
mov
aaa
sub
jecxz
idiv
test
mov
or
mov
sub
mov
sar
adc
cmc
leave
xor
and
or
push
sub
push
cmp
lods
jp
(bad)
in
std
lahf
pop
xchg
pop
ret
add
xchg
dec
jnp
cs
mov
sbb
pushf
and
xchg
add
out
or
popf
ins
in
fcom
test
cwde
call
dec
mov
push
pop
cmovns
adc
or
in
rcr
ret
fwait
jo
jne
mov
push
call
jbe
gs
inc
and
in
xchg
ss
sbb
push
sbb
stos
jmp
int3
int3
and
mov
or
mov
mov
xchg
push
and
inc
inc
cmp
push
add
scas
fisubr
fistp
jno
pop
(bad)
adc
jno
mov
push
push
mov
dec
sub
push
inc
gs
dec
dec
mov
fmul
pusha
mov
iret
nop
sbb
fwait
push
pop
sbb
sub
or
xchg
and
jne
and
ins
(bad)
in
out
jbe
cmp
sub
cli
xchg
jmp
popa
std
dec
clc
push
mov
dec
push
adc
adc
pop
stc
sub
int
dec
stos
jmp
mov
and
sub
mov
repnz
out
cmp
mov
fcmovnb
js
pop
inc
lods
jns
mov
pushf
xchg
mov
sub
sub
add
jns
sahf
in
mov
mov
stos
pop
dec
(bad)
inc
iret
test
outs
xor
aad
adc
outs
rcr
popa
or
in
cmpxchg
lock
dec
xchg
mov
inc
popa
ret
hlt
arpl
add
mov
fistp
call
xlat
lock
or
sub
jmp
int
loope
iret
pop
pop
pop
sahf
test
in
and
and
mov
push
movs
jecxz
push
mov
retf
push
or
inc
and
fsub
jns
(bad)
mov
stc
pop
sahf
repz
sbb
add
cmps
jo
push
mov
pusha
imul
loop
jnp
test
cmps
jg
xchg
out
call
ins
shl
inc
rcl
iret
pop
cmp
pop
lea
sub
add
and
jo
iret
mov
mov
rcl
inc
mov
push
push
test
jnp
rcl
ins
mov
cli
push
mov
jmp
enter
outs
and
mov
adc
xor
sbb
sub
mov
pop
sahf
scas
mov
and
sbb
mov
retf
mov
fistp
push
pop
scas
mov
repz
jns
pop
jae
dec
mov
sti
retf
jns
xor
(bad)
push
mov
or
dec
lds
popf
js
mov
and
xchg
adc
xor
mov
int
mov
ins
hlt
sub
push
fs
and
in
pop
cmp
sbb
imul
pop
adc
int3
inc
ficomp
mov
jno
imul
push
push
pushf
push
xchg
push
pop
mov
jmp
gs
movs
mov
or
dec
push
push
ins
out
test
mov
test
jg
mov
inc
addr16
jae
push
sub
xchg
comiss
fmul
mov
and
fstp
loop
out
lock
pmaddwd
mov
pop
(bad)
jne
aas
cli
les
jns
dec
icebp
pop
adc
and
sbb
mov
cmp
ror
pushf
push
mov
pusha
jno
stos
(bad)
push
sbb
and
pop
or
inc
gs
mov
in
or
push
pop
push
movs
and
jmp
aaa
xor
sbb
fld
cdq
mov
cmp
inc
pop
push
adc
sbb
pop
clc
and
out
adc
inc
lds
xor
xchg
(bad)
stc
mov
mov
retf
inc
inc
lahf
retf
jg
jp
out
push
ins
repz
cmc
adc
stos
fcmovne
fstp
pop
(bad)
daa
fsub
neg
pop
pop
add
inc
add
mov
js
ret
sub
sbb
pop
cmp
neg
and
fcomp
jns
add
loop
inc
int3
lods
mov
lea
out
dec
aas
retf
and
retf
movs
dec
hlt
inc
or
dec
xor
sub
xor
clc
cmp
adc
dec
dec
push
pop
icebp
(bad)
cs
aad
sub
mov
adc
(bad)
sti
cld
sahf
in
add
xchg
(bad)
ds
cdq
jg
jge
xchg
jecxz
nop
and
ficom
adc
mov
and
dec
mov
dec
xchg
shr
in
(bad)
shl
mov
cmc
jbe
cmp
add
sahf
and
adc
pop
xchg
dec
jecxz
pop
jmp
mov
mov
dec
bswap
daa
push
xchg
pop
xchg
(bad)
in
mov
jae
pushf
dec
stos
outs
cmp
xchg
movs
mov
mov
in
mov
ss
xor
in
pop
xchg
or
add
jl
jp
mov
fnstenv
movs
sbb
sbb
xchg
mov
movs
loopne
or
out
add
mov
xor
add
ja
mov
in
jp
xchg
shl
aam
movs
jle
sbb
cmp
movs
aaa
repnz
push
push
fisub
es
push
sub
dec
and
mov
jp
cmp
imul
mov
fidiv
lods
lods
fcomp
hlt
sub
addr16
adc
sti
sbb
rcl
sahf
and
imul
mov
cmp
fcom
adc
cmp
push
dec
sbb
popa
pop
mov
push
mov
cmp
outs
xchg
inc
lock
retf
sar
pop
fwait
nop
push
(bad)
push
inc
sbb
mov
xlat
cwde
int3
popf
lea
sar
jge
and
cmc
mov
xchg
add
pop
pop
and
jae
xlat
sbb
gs
jb
(bad)
ret
rol
jns
mov
and
inc
xchg
jge
add
daa
mov
test
cmp
xor
push
dec
mov
rcl
cdq
in
jbe
push
mov
xor
test
(bad)
icebp
push
and
daa
mov
(bad)
(bad)
stc
jnp
ror
sub
in
std
push
and
pop
(bad)
adc
stos
jl
or
mov
movs
jno
sahf
in
out
rcl
aam
dec
jmp
jl
add
and
pop
test
mov
gs
mov
out
mov
sbb
pop
ret
fldcw
inc
mov
rcr
(bad)
jae
cmc
callw
test
ja
jns
ins
ret
inc
out
mov
std
fistp
loope
ret
mov
lds
sbb
sub
bound
inc
push
sbb
ins
(bad)
ffree
test
sub
movs
fdivrp
cwde
jge
mov
in
xor
das
mov
dec
je
jg
(bad)
lods
jecxz
outs
(bad)
mul
mov
in
mov
mov
mov
jae
in
shl
out
xlat
int
arpl
and
mov
jno
mov
add
loope
loopne
outs
shl
ins
daa
push
ja
iret
push
inc
in
out
les
lahf
cmp
cmps
and
mov
cwde
push
outs
stc
xchg
leave
movs
dec
popf
xchg
dec
xchg
adc
adc
pop
push
push
push
jns
pop
fwait
jle
cdq
in
fbstp
mov
push
push
push
mov
neg
xchg
stc
cmp
fstp
(bad)
popf
inc
and
or
mov
xor
cwde
(bad)
iret
sub
dec
fdivr
add
ins
loope
jp
out
cmp
cmp
mov
inc
outs
jmp
in
fidivr
sbb
stos
mov
scas
push
or
scas
xchg
pusha
enter
clc
dec
inc
inc
inc
test
dec
mov
jg
inc
inc
lds
aaa
mov
inc
cli
jne
push
rcl
movs
pop
cmp
xor
popf
push
aad
sub
div
jmp
cmp
out
jae
pop
lods
add
stos
repnz
adc
cmp
push
dec
xchg
pop
or
jmp
mov
outs
test
test
or
fsubr
push
cmp
mov
dec
and
dec
push
ss
sbb
xchg
xchg
adc
icebp
xchg
or
imul
lods
in
cmp
fldcw
and
retf
popf
cmp
xor
sub
dec
mov
hlt
lods
test
dec
dec
xchg
mov
loopne
gs
mov
nop
sub
and
imul
mov
mov
xlat
bound
cmp
push
lods
sub
and
inc
pop
push
adc
out
les
jns
mov
inc
dec
retf
cmovo
fcmovu
jmp
in
lea
push
imul
add
bound
(bad)
and
inc
pusha
in
pop
xchg
add
nop
xchg
xchg
jmp
bound
push
pop
inc
jae
cmc
out
shr
hlt
or
or
out
neg
mov
push
dec
idiv
ret
pop
cmps
outs
not
xor
jb
cmp
inc
hlt
mov
push
mov
(bad)
pop
fist
sub
jmp
cmp
mov
pop
sub
ins
lods
test
cmps
push
ss
dec
cmp
sar
jecxz
jle
hlt
pop
std
test
cmp
cmp
mov
push
out
neg
cmp
cmp
(bad)
jl
test
mov
xchg
pop
xchg
popa
fwait
je
sbb
lock
xor
fcomp
loop
jnp
push
stos
push
pop
lea
(bad)
fnstenv
dec
or
popa
js
sub
inc
fild
mov
fsubr
hlt
pop
adc
xor
xchg
das
jle
push
je
ja
pop
in
and
aas
test
ret
cwde
sar
cmps
retf
push
cdq
aam
in
jp
xchg
jbe
stc
pop
sbb
pop
xchg
mov
(bad)
jmp
pop
cmps
xor
mov
in
into
push
scas
fnstsw
dec
jno
cdq
adc
nop
repnz
push
add
jl
cli
iret
mov
cdq
fmul
cmp
imul
xchg
add
into
fwait
clc
xor
jg
into
sti
or
test
jl
test
inc
dec
mov
xchg
adc
cld
scas
ins
mov
into
lock
cwde
rcr
out
loopne
aas
mov
mov
mov
ins
cmp
sub
ret
add
in
add
pop
xor
(bad)
out
out
or
mov
xlat
mov
mov
in
jo
arpl
fiadd
xchg
stos
or
jne
push
or
icebp
movs
mov
dec
sbb
dec
push
xor
ja
in
cld
popa
mov
cmp
jo
dec
popa
std
push
mov
int3
mov
or
mov
loopne
cmp
mov
xchg
cmp
not
xchg
ins
pop
sar
or
imul
in
test
dec
mov
push
aad
fisub
inc
out
outs
or
(bad)
mov
daa
sti
adc
push
mov
in
pop
sub
dec
xor
sbb
mov
jae
adc
ss
mov
dec
(bad)
mov
cmp
mov
mov
data16
ficom
mov
sbb
cmp
(bad)
jno
iret
(bad)
cmp
push
xchg
cmp
jns
adc
adc
mov
adc
jbe
movs
xor
or
xchg
mov
lock
retf
sub
mov
hlt
call
mov
push
or
jmp
fild
ror
cs
loope
push
iret
xchg
and
push
push
sbb
lock
pop
ficomp
inc
clc
(bad)
test
repz
(bad)
sahf
leave
add
aam
lahf
dec
pop
mov
and
in
push
es
sub
pusha
(bad)
mov
cmps
push
dec
mov
pop
(bad)
int
jbe
hlt
lahf
cwde
jl
mov
stc
mov
cwde
sub
cmp
mov
jne
jge
sbb
test
or
inc
das
rcl
mov
mov
scas
jle
(bad)
cs
ins
clts
cmp
and
mov
jbe
pop
repz
loope
and
push
inc
lock
(bad)
adc
xchg
mov
cdq
add
in
je
sub
ret
mov
cli
inc
dec
daa
das
sub
cwde
rol
fstp
icebp
mov
adc
xchg
call
and
mov
out
push
ret
pop
popf
xchg
push
bound
lea
add
dec
jno
fsubr
lea
clc
xchg
mov
retf
repz
pop
lods
sub
cmp
pop
mov
int3
mov
push
loop
int
lock
jo
mov
out
pop
out
push
pop
xchg
mov
mov
out
mov
fisub
adc
stos
test
push
call
push
scas
inc
in
mov
repz
mov
mul
cmc
push
(bad)
mov
xchg
mov
dec
xor
jbe
mov
jb
ror
(bad)
sbb
clc
or
les
loop
loopne
push
je
mov
out
pop
lds
lock
addr16
sub
push
xor
xor
mov
mov
xor
xchg
popa
sbb
mov
push
or
push
cmp
scas
stos
and
or
ja
ja
mov
std
ss
cmp
xchg
lods
add
xchg
sub
iret
inc
and
cmp
mov
loopne
pop
jnp
xchg
fsub
cmps
mov
arpl
sahf
ror
and
pusha
add
mov
lods
(bad)
mov
pop
sbb
sbb
(bad)
sbb
mov
xchg
jbe
mov
xor
pusha
je
js
test
test
xlat
add
mov
dec
or
test
mov
repnz
xlat
jle
enter
push
stos
jmp
ss
rcr
out
mov
movs
mov
xor
mov
test
les
cmp
mov
adc
dec
scas
aam
repz
out
adc
and
mov
je
mov
in
mov
loop
pop
ds
ret
add
and
push
in
fwait
test
rol
cmp
cmp
and
push
cmp
fild
rcr
pushw
push
adc
jae
loopne
adc
adc
and
pop
mov
sbb
mov
fdivr
inc
inc
push
pop
cmp
aam
jns
loope
fild
add
stos
aaa
dec
div
jge
in
cmp
adc
mov
popf
stos
adc
adc
mov
sar
sbb
pop
add
cmp
lods
cmc
rol
ins
or
gs
out
rcr
jecxz
icebp
movs
push
ja
pushf
popa
int3
push
call
ins
jl
mov
jb
xchg
cwde
xchg
cdq
pop
cs
fist
cmp
push
repz
in
mul
xor
jb
in
cmc
popf
test
mov
adc
dec
inc
(bad)
pop
mov
sbb
push
cs
(bad)
sahf
fsubr
sbb
jae
xchg
mov
inc
ret
fstp
jge
sbb
sub
movlps
lahf
enter
jbe
xor
iret
mov
ret
(bad)
aad
test
inc
icebp
int
push
enter
aaa
rcr
jb
in
inc
or
or
sub
mov
sub
leave
pop
(bad)
loop
and
cli
inc
(bad)
jae
jns
xor
in
xor
imul
push
or
mov
fild
sub
pop
scas
cmp
rol
xor
and
imul
lock
ins
(bad)
mov
mov
call
fist
adc
mov
imul
popa
arpl
repnz
push
mov
pop
mov
fucomip
inc
into
add
stos
imul
clc
push
out
repnz
jnp
in
imul
les
sub
pusha
aad
mov
popf
or
cmps
test
inc
outs
pushf
test
pusha
mov
cs
mov
xchg
sub
fwait
dec
sbb
into
in
jmp
lea
movs
xor
leave
dec
xchg
cmp
adc
cs
pop
pop
das
mov
sbb
fcomi
outs
add
and
push
or
gs
stc
loope
fwait
pop
adc
sub
or
jmp
sub
cmp
push
sbb
add
xchg
mov
xchg
mov
fadd
xor
xor
jnp
(bad)
aad
adc
xchg
lods
(bad)
nop
imul
sbb
rcr
cwde
rol
jecxz
cwde
sbb
pop
pop
and
or
stos
jne
popa
cmp
iret
mov
and
inc
retf
xor
sub
rol
sti
mov
clc
test
pop
jo
hlt
or
push
mov
adc
inc
out
mov
imul
imul
test
mov
js
mov
or
mov
xor
imul
push
fidiv
cli
push
pop
pop
cmps
dec
int3
outs
cs
jb
call
mov
test
mov
jbe
and
icebp
adc
mov
daa
and
cli
imul
cmp
bound
sub
adc
ins
mov
mov
pop
retf
adc
mov
jno
cmps
and
push
(bad)
mov
mov
jmp
popa
call
add
std
mov
mul
add
addr16
xor
push
in
adc
xchg
(bad)
stc
or
imul
arpl
xor
js
sbb
hlt
mov
add
mov
cmp
dec
mov
dec
icebp
lods
dec
push
fs
cs
int
mov
cmp
add
push
mov
shr
pusha
int
movs
ret
or
shl
ret
pop
ss
mov
sbb
xor
cli
and
sub
into
adc
add
bound
adc
daa
mov
mov
fmul
stos
pop
sub
ror
fs
cmc
or
jo
inc
inc
pop
xor
push
push
mov
dec
pop
repz
shr
sbb
test
xor
cmps
xchg
int
mov
or
or
cmp
push
sbb
cmp
sub
adc
jo
sbb
fwait
and
mov
out
fucom
std
ss
adc
push
aas
or
inc
outs
lods
lods
mov
aam
add
adc
xor
jbe
imul
test
pushf
mov
and
xchg
dec
fist
or
sub
dec
add
sbb
dec
inc
hlt
inc
xchg
add
test
in
popf
(bad)
mov
fsubrp
not
pushf
cmps
retf
mov
fisubr
or
cld
jmp
mov
push
mov
test
sbb
pop
mov
(bad)
fs
into
mov
jns
sbb
scas
push
lea
cmp
lods
test
sub
in
xlat
lods
call
xor
sti
imul
inc
(bad)
popa
sub
dec
mov
outs
cmp
(bad)
fcomp
mov
ins
cmp
ins
rcr
aam
push
xor
int
mov
rcl
jno
cld
xchg
inc
call
imul
pop
add
sti
ja
adc
xor
mov
mov
inc
jae
aam
mov
mov
dec
and
cs
mov
pop
pop
in
mov
fcom
push
aad
stc
xchg
out
add
jecxz
add
outs
cmp
outs
pop
repnz
fidiv
imul
pop
fld
imul
sbb
clc
clc
mov
cdq
int3
loope
mov
adc
push
adc
push
cdq
call
mov
xchg
sbb
pusha
xchg
dec
aas
jecxz
or
loope
test
scas
mov
jae
cmp
call
nop
add
mov
or
jne
mov
and
jecxz
lea
aad
clc
or
popf
into
pop
retf
adc
push
in
mov
or
gs
rcr
push
xor
jnp
xor
iret
icebp
clc
ins
mov
pop
test
adc
ja
jnp
cli
mov
mov
push
pop
and
out
(bad)
pop
inc
xor
pushw
outs
lods
(bad)
xchg
dec
cli
cmp
mov
cmp
inc
icebp
dec
int
or
clc
cli
repnz
xchg
sar
adc
aam
bound
sub
div
pop
xor
sub
or
dec
pushf
dec
pop
jnp
inc
ins
fucomp
ins
jne
cmps
mov
cmps
cdq
in
retf
test
mov
xor
xor
cwde
inc
pop
mov
(bad)
out
outs
das
push
es
je
inc
jl
sub
lea
sub
call
pop
jmp
mov
sub
pop
scas
pop
or
sub
in
mov
into
ret
test
out
pop
je
aas
mov
fcom
push
mov
mov
imul
fwait
jns
and
mov
sahf
sub
rol
retf
scas
popa
sub
and
dec
movs
(bad)
push
outs
cmps
fdiv
and
rep
cmp
dec
xor
ficom
cmp
inc
push
cmps
pop
jae
adc
sbb
and
sbb
jb
gs
xor
cmp
gs
cmc
int
cmp
ds
shl
jno
rol
iret
ret
cmp
clc
mov
mov
jne
icebp
mov
dec
idiv
mov
xchg
push
retf
out
(bad)
adc
jle
scas
add
and
retf
outs
in
pop
sahf
cmp
rol
scas
sahf
xor
mov
and
cmp
push
fs
loopne
ficomp
xlat
pop
mov
mov
cmps
daa
sar
adc
jo
sub
nop
dec
sub
mov
adc
dec
sub
push
sub
pop
jno
cld
adc
pop
xor
call
test
ror
xchg
nop
(bad)
out
mov
dec
std
xchg
jl
pop
(bad)
jmp
xor
(bad)
jmp
pop
cdq
outs
or
sub
jmp
or
jno
imul
pop
jne
call
fldenv
jg
inc
xchg
pop
xchg
iret
xor
mov
test
repnz
mov
xchg
adc
data16
add
ins
scas
call
cmp
xchg
fcmovb
aam
fnstcw
adc
loopne
and
dec
imul
and
dec
sbb
lock
outs
cmp
cmps
in
in
and
arpl
or
pop
inc
add
mov
or
sbb
enter
inc
mov
daa
fcom
mov
out
xchg
vsqrtss
pop
fucomi
repnz
scas
and
aaa
fisttp
fsubr
arpl
hlt
mov
je
lea
jno
mov
lahf
add
lahf
pop
outs
add
jnp
out
stos
sbb
pop
movs
inc
push
lds
repz
push
aad
sub
loopne
push
push
hlt
mov
in
jecxz
or
repz
in
vpsraw
cmp
sub
or
outs
call
adc
inc
sub
enter
loope
popa
(bad)
repz
popa
ret
push
shl
cdq
ss
fsub
imul
mov
stc
bound
popf
cmps
mov
xchg
outs
aas
cmp
mov
adc
add
stos
and
mov
std
cmp
cmp
xlat
mov
jmp
and
not
push
push
mov
push
jmp
dec
call
mov
loop
sub
jne
and
sbb
in
pop
mov
push
enter
fnstcw
mov
xor
cmps
mov
jmp
lds
push
imul
out
and
inc
lods
mov
imul
push
cmps
in
pop
int3
aas
out
mov
jne
clc
ins
sbb
movs
mov
mov
mov
popa
sub
sbb
cmp
adc
retf
dec
jne
jb
xor
enter
add
(bad)
push
mov
push
or
les
add
outs
push
iret
movs
push
jmp
imul
adc
in
mov
mov
mov
enter
sbb
fidivr
adc
jg
xor
cmc
or
inc
popf
cdq
dec
mov
(bad)
and
jne
dec
out
jae
cld
aad
jl
adc
hlt
or
call
mov
xor
ffree
push
add
repz
int3
gs
xchg
inc
aas
jmp
stos
jp
push
mov
(bad)
xor
imul
pop
dec
mov
pop
push
xchg
cmp
and
test
inc
mov
mov
xor
call
xor
lahf
jnp
cwde
mov
cmp
adc
xchg
jno
popf
leave
dec
mov
sub
xor
cli
pop
pop
push
test
and
cmp
sub
dec
pcmpgtb
cdq
inc
or
inc
sbb
(bad)
ficomp
inc
xchg
cmps
shr
std
into
pop
(bad)
xchg
nop
in
test
cli
jg
adc
dec
xchg
sar
rol
mov
jge
and
clc
jne
sbb
xchg
and
dec
jnp
mov
movs
retf
mov
enter
or
jns
jno
add
xchg
pop
ficom
into
adc
jle
or
bswap
xchg
mov
retf
popf
lahf
pop
das
das
mov
rol
call
in
je
stc
imul
cmp
cdq
pop
jecxz
outs
sbb
pop
imul
sub
out
or
xor
jae
rcl
dec
xchg
mov
stos
pushf
inc
ins
sub
scas
stos
cmp
test
popa
mov
aam
data16
nop
pop
clc
out
adc
xlat
pop
or
mov
dec
inc
outs
bound
and
xchg
jg
pusha
adc
mov
mov
loope
sub
paddusw
push
cmps
mov
mov
(bad)
mov
js
aaa
(bad)
aad
(bad)
xchg
sub
pop
xor
mov
loopne
push
lock
jmp
add
xchg
data16
js
loope
cli
pop
add
cmp
popa
push
push
test
mov
mov
imul
push
(bad)
es
aas
mov
lods
and
inc
cmp
fld
or
aad
sub
or
jnp
ret
inc
and
cs
mov
and
sar
and
pop
jge
and
sbb
ins
stos
in
(bad)
push
loope
and
xlat
mov
popf
les
sub
sub
jbe
push
jecxz
mov
pushf
sbb
jl
mov
jge
popa
repnz
add
loop
pop
fsub
mov
aad
bound
or
mov
jecxz
bnd
mov
xchg
retf
sbb
mov
aam
call
ds
call
nop
hlt
inc
cmp
es
cmp
mov
(bad)
pop
(bad)
lahf
and
fcomp
ss
dec
loopne
cdq
inc
stc
mov
dec
shr
jo
jl
pop
add
cmp
iret
sub
ss
dec
aam
jge
cmp
call
int
mov
stc
jnp
leave
iret
ror
cmps
loop
jns
dec
mov
mov
popa
std
pushf
aaa
mov
cmp
mov
sbb
sbb
int
cwde
idiv
rol
jns
stos
xor
and
sub
lock
inc
rol
adc
cdq
jp
sub
xchg
xchg
pushf
and
jmp
lea
lea
adc
cmp
ret
and
sbb
pop
popf
add
int
test
sahf
sub
cmp
loop
push
rol
jmp
push
xor
fwait
inc
ins
push
cmp
not
cmp
or
(bad)
xor
cmps
dec
xchg
inc
or
nop
ins
int3
loop
sbb
push
mov
pop
adc
mov
jle
sbb
popa
bound
es
xchg
sub
movs
(bad)
cdq
imul
jnp
mov
fist
mov
pop
loop
repnz
sub
out
retf
pushf
js
jb
shr
xlat
mov
pop
pop
and
mov
mov
stos
or
inc
std
std
or
inc
inc
(bad)
lods
leave
jge
adc
mov
stc
push
cmp
ror
or
(bad)
sbb
pop
jbe
sbb
les
ret
cmc
imul
jbe
inc
sbb
mov
mov
sub
xlat
popf
inc
push
jno
xchg
ret
movs
lahf
add
mov
pop
arpl
pop
push
gs
mov
inc
mov
jl
shl
xor
sub
ss
(bad)
gs
js
enter
es
sub
and
(bad)
ja
in
dec
sti
and
or
cmc
mov
jne
cmp
scas
shl
mov
imul
push
cmp
ret
push
test
sti
dec
sbb
mov
jo
ins
pop
xchg
ret
mov
cmps
lock
and
adc
or
fdiv
rol
enter
mov
in
fnsave
repnz
fwait
or
shl
xchg
leave
sub
inc
cmp
jmp
mov
ss
mov
mov
fnstenv
les
mov
cmp
cli
mov
jno
popa
pop
(bad)
dec
imul
jg
cld
cmp
or
mov
dec
scas
xor
popf
out
dec
cmp
daa
dec
fnstenv
push
retf
mov
mov
and
push
icebp
clc
rol
pop
pushf
sbb
movs
repnz
push
popf
xor
popf
xchg
push
push
sbb
dec
jne
movs
movs
outs
pop
lods
add
jbe
ficomp
dec
jbe
sub
ret
and
push
enter
inc
fsub
push
test
push
outs
cmps
cmp
mov
pop
mov
(bad)
fisttp
call
stc
out
leave
dec
pop
pusha
jmp
xor
movs
cdq
jle
nop
int
inc
and
cdq
iret
shl
xchg
jo
movs
xchg
or
ret
scas
dec
js
bound
adc
jb
mov
jno
ss
and
mov
movs
push
dec
xor
sub
and
inc
fwait
cmp
jecxz
mov
call
xchg
aam
push
jg
jb
sar
jb
les
and
push
es
cmp
push
scas
rcr
lds
sbb
jae
movs
mov
sbb
and
scas
xchg
jg
mov
mov
int
test
and
push
xor
ja
cmps
(bad)
iret
jl
add
js
or
push
inc
xor
mov
dec
adc
pushf
fcomip
and
push
push
push
xchg
jo
retf
call
idiv
push
pop
dec
rcr
inc
hlt
xor
in
or
mov
ja
jnp
mov
sbb
repz
and
imul
push
in
push
add
add
mov
jae
stos
not
push
test
push
mov
add
fidiv
xchg
out
push
and
pop
test
fild
inc
push
(bad)
inc
addr16
mov
sbb
add
ret
fimul
jmp
adc
mov
pop
div
adc
or
cmp
sbb
sbb
dec
xor
mov
mov
mov
sti
call
inc
cli
mov
inc
pop
xor
mov
call
stos
shl
retf
fcomp
test
in
loope
adc
outs
test
xchg
pop
mov
jnp
add
xor
and
push
cs
sbb
xchg
mov
mov
in
test
pusha
mov
(bad)
imul
mov
pop
push
rcr
jle
or
push
add
pop
push
push
ret
call
outs
in
and
clc
imul
xchg
adc
xchg
cmps
daa
cmp
xor
call
addr16
sbb
sub
jl
push
and
mov
and
mov
shl
aaa
mov
sbb
mov
(bad)
sbb
iret
xchg
das
add
pushf
icebp
xor
sbb
popa
mov
mov
into
repnz
cmps
ucomiss
adc
xor
dec
ret
sbb
dec
push
push
sahf
std
popf
cmp
fwait
push
loop
mov
mov
shr
mov
add
dec
test
out
nop
shr
sbb
in
ja
pushf
adc
inc
pop
xchg
emms
mov
adc
jne
jbe
dec
push
xchg
pop
xor
jnp
inc
push
fist
int3
xchg
fs
movs
xchg
sbb
jb
push
out
inc
jns
inc
leave
xchg
push
jbe
sub
fcmovne
adc
mov
or
int3
push
test
push
lods
pop
(bad)
sub
cmps
xor
popa
inc
dec
jno
mov
(bad)
out
int
or
jle
sbb
and
out
retf
fwait
(bad)
pop
adc
fdiv
fs
and
leave
rcr
mov
(bad)
dec
ret
data16
ins
push
add
or
inc
popf
adc
jnp
fwait
push
pop
rol
ss
out
xor
test
jge
fidivr
frstor
fistp
jmp
push
stos
out
sbb
mov
inc
dec
add
pop
int3
mov
lahf
popf
fidiv
ins
xchg
mov
push
pop
lds
leave
lds
cmp
sbb
xor
js
retf
(bad)
frstor
xchg
frstor
inc
xchg
or
cmp
jns
rcl
add
mov
sbb
aaa
cs
shl
sbb
jl
xor
push
aam
mov
xor
sti
mov
rol
ret
mov
jnp
retf
push
add
sub
shl
jmp
jge
push
popa
in
sti
in
push
dec
add
or
scas
sbb
mov
sub
inc
xchg
jecxz
(bad)
add
mov
loopne
jmp
cdq
repz
test
(bad)
movs
dec
push
(bad)
mov
jns
daa
pop
cli
clc
add
sub
imul
jbe
lock
pop
cmc
movs
pop
xchg
sub
or
aam
push
iret
sti
adc
mov
out
cmp
fst
cli
pusha
mov
xor
test
adc
out
cli
sub
jge
cmp
scas
mov
mov
cdq
dec
dec
inc
rcr
and
frstor
addr16
in
mov
dec
push
sahf
push
or
mov
dec
outs
pop
std
push
mov
xor
jb
sbb
(bad)
sbb
jae
mov
xor
cmc
xchg
pop
fldcw
call
pop
arpl
stos
add
xor
test
(bad)
lods
fnstenv
call
js
pop
jno
mov
sub
out
cmc
xchg
dec
and
movs
rcr
push
ins
je
jge
icebp
jo
cli
pop
pop
sti
ja
xor
sbb
mov
in
xor
out
es
mov
mov
mov
pop
jmp
pop
add
fist
loope
cmp
or
push
sbb
jmp
mov
pop
dec
sub
and
inc
cmp
dec
outs
adc
sbb
data16
add
das
push
mov
clc
int3
jmp
inc
jmp
aaa
aas
mov
daa
in
cwde
push
ja
jbe
and
and
jnp
push
daa
cli
loopne
in
in
punpckhbw
add
jecxz
mov
movs
jnp
scas
fisub
das
xchg
inc
inc
mov
(bad)
xlat
mov
movs
sbb
dec
or
add
and
mov
pop
sbb
xchg
pusha
out
ficom
adc
add
adc
dec
mov
xchg
cmp
xor
lods
imul
sub
cmp
and
out
cmp
imul
cmps
rcl
lods
xor
ins
shr
ss
daa
xor
add
sub
stos
cmp
push
stc
and
inc
sub
scas
lds
xchg
les
aad
sub
jmp
jmp
loopne
jb
test
call
cld
ret
test
popf
cmc
sbb
adc
xchg
mov
push
int
out
jecxz
retf
adc
pop
sub
jg
pop
ds
cmps
stos
mov
loop
sub
sbb
mov
and
or
xor
jle
rol
sbb
stos
out
xor
aas
fucomp
and
or
sub
push
xlat
sub
test
bnd
sub
or
sub
adc
in
or
xor
aad
mov
xchg
xlat
add
in
or
sbb
ror
repnz
mov
cmp
cdq
xor
jo
data16
add
fdecstp
jmp
ror
dec
or
xlat
iret
jnp
lock
sbb
into
pop
addr16
or
in
je
and
sbb
fpatan
iret
sub
popa
mov
out
jmp
(bad)
and
test
xchg
repz
xchg
pop
jno
(bad)
push
cli
js
jg
idiv
push
in
aaa
int
mov
stos
pop
cmp
ss
mov
jns
fsub
pop
sar
push
jecxz
out
jbe
mov
xor
push
fistp
loop
test
iret
jae
jmp
sub
pop
call
rol
(bad)
push
mov
mov
lods
mov
sbb
dec
mov
dec
cmp
(bad)
cld
mov
aas
ins
sbb
xor
lahf
sub
pop
adc
(bad)
dec
add
shl
or
popf
adc
add
adc
ja
fadd
cli
adc
add
cmps
cmp
hlt
mov
mov
inc
cs
adc
sbb
or
(bad)
lds
bswap
stc
adc
dec
push
not
imul
(bad)
int3
lods
clc
je
loop
adc
ins
xor
mov
jns
pop
dec
jns
imul
sbb
enter
sbb
fistp
push
stos
mov
int
repnz
sbb
or
(bad)
push
rcr
add
and
inc
xchg
xor
dec
and
xchg
mov
es
(bad)
dec
mov
inc
adc
movs
shr
add
push
clc
out
push
cdq
nop
lds
lea
popa
pop
add
dec
mov
sub
jge
test
jmp
mov
pop
inc
gs
or
(bad)
loop
aaa
lea
nop
cmp
cdq
mov
out
mov
sub
cmp
xchg
dec
add
dec
jp
jmp
fimul
mov
xchg
int
imul
xlat
popf
fsub
test
inc
call
adc
xchg
arpl
shr
(bad)
xor
inc
pusha
loop
mov
cli
enter
int
(bad)
mov
and
inc
call
not
mov
and
cld
lock
mov
mov
dec
outs
(bad)
rcr
call
addr16
ss
call
add
push
imul
sar
or
push
jge
add
shrd
lods
imul
imul
cwde
gs
xchg
test
mov
inc
jecxz
out
cwde
mov
cli
or
je
leave
fld
jo
xchg
test
rol
push
push
arpl
mov
enter
lahf
shl
aad
pop
div
mov
push
dec
cmp
(bad)
call
mov
mov
aas
mov
loop
jge
and
mov
jmp
xchg
push
retf
pusha
das
xor
scas
jge
ret
dec
xchg
imul
sub
add
jbe
repnz
inc
and
xor
and
push
pop
cmp
push
out
pop
ins
sbb
lods
cmp
call
dec
push
jecxz
movs
sbb
xchg
aad
or
adc
int3
adc
addr16
hlt
out
aas
inc
stos
xchg
aam
adc
pop
sbb
jmp
std
mov
lds
push
retf
sub
xor
out
adc
nop
js
adc
shl
jecxz
xor
je
cdq
sub
icebp
jns
not
mov
outs
xor
shr
inc
out
fldenv
xlat
movups
adc
out
sub
push
popa
iret
xchg
fwait
xor
pop
call
mov
sar
dec
mov
and
pop
inc
jp
or
sub
push
out
pop
push
fst
xchg
xchg
je
mov
stc
(bad)
fxam
bnd
xchg
lods
ficom
and
sub
xor
ss
or
inc
shr
push
inc
cmp
ret
pusha
jnp
push
and
dec
mov
push
mov
sbb
ja
scas
stc
test
push
sub
inc
cdq
mov
pop
mov
ins
popa
outs
or
dec
or
mov
loope
es
mov
push
test
(bad)
or
add
xchg
ins
sub
(bad)
packsswb
aas
sar
and
in
push
data16
movs
jb
add
ret
mov
ror
jmp
and
mov
dec
retf
fsub
push
cmc
ret
aad
mov
and
call
clc
mov
inc
arpl
inc
iret
sbb
(bad)
stc
xchg
mov
jb
sub
push
xor
mov
nop
ret
pop
sti
mov
nop
test
mov
mov
jo
push
cmp
outs
add
jae
repz
push
add
shl
pusha
(bad)
in
test
xchg
jmp
jno
outs
pop
pop
jbe
dec
sbb
push
popa
retf
call
repz
xchg
inc
or
adc
xor
je
jo
(bad)
loop
mov
test
imul
jmp
jl
int3
daa
shl
int3
loope
adc
fs
int
mov
mov
outs
inc
mov
fcmovbe
pop
mov
es
adc
jns
lods
js
xchg
repz
cmp
cmp
(bad)
(bad)
shr
adc
out
xlat
xchg
mov
outs
sub
xor
loop
cwde
out
push
xlat
pop
seta
xlat
add
adc
in
cld
in
ss
jo
stc
lods
dec
push
outs
push
shl
vmread
mov
push
std
out
mov
imul
jnp
mov
ja
call
mov
in
xor
mov
je
pop
leave
mov
aam
mov
ds
push
pop
lods
lods
mov
add
add
outs
pminub
std
ss
xchg
pop
scas
add
adc
and
lds
pop
iret
gs
repz
pop
lods
pop
dec
push
dec
dec
int3
mov
cwde
xor
hlt
sbb
pop
imul
inc
ins
sub
sar
push
test
mov
loope
push
mov
sbb
cdq
lods
mov
out
dec
and
cmp
mov
sub
pop
les
cmps
aas
push
mov
push
dec
jno
xchg
jnp
and
movs
mov
sbb
dec
adc
ret
inc
out
pop
std
sub
jns
mov
push
mov
xor
cmp
cmp
mov
mov
stos
sub
ins
adc
movs
push
fimul
pop
jge
(bad)
(bad)
shr
test
cmp
test
jbe
cmps
xor
mov
jle
(bad)
neg
cwde
aaa
imul
sbb
inc
add
pop
div
fs
shl
push
ja
test
mov
xchg
mov
and
in
cmp
movs
cmps
jmp
int
cs
pop
daa
sub
int
or
(bad)
call
rcl
ret
test
movs
cmp
sub
add
adc
xchg
ss
fcom
sti
push
sub
(bad)
jge
push
jns
jge
mov
imul
push
sub
fnstsw
cmp
pop
xchg
enter
(bad)
cs
adc
lds
lock
jecxz
xchg
xchg
test
cdq
icebp
sub
(bad)
fadd
adc
xor
out
xchg
cmps
xor
scas
sbb
jle
jp
xor
sbb
lods
daa
ffree
icebp
loop
stc
adc
outs
mov
mov
adc
jno
aas
repz
pop
cmp
pushf
jo
jno
(bad)
pop
jmp
lods
fcom
lea
fnstsw
mov
pushf
loop
xchg
(bad)
aaa
(bad)
movs
js
and
(bad)
iret
ja
dec
into
add
jg
test
pop
das
push
movs
push
cmp
or
adc
in
jns
out
sub
jb
cmp
push
mov
dec
(bad)
ficom
or
pushf
adc
out
or
cwde
cs
xor
jno
(bad)
xchg
cmp
or
pop
mov
mov
idiv
or
pop
or
out
mov
mov
jne
arpl
out
cmp
jmp
pusha
outs
rol
loope
cdq
cli
adc
or
lods
fwait
(bad)
ins
popf
ffreep
jbe
std
je
in
repnz
adc
outs
sub
add
movs
ret
mov
jge
mov
cmp
jne
adc
loope
xor
(bad)
lahf
adc
and
mov
push
retf
mov
fnstenv
imul
sti
sbb
hlt
iret
jl
cmps
cmp
ins
ds
inc
(bad)
xlat
aam
neg
ret
(bad)
shr
or
jae
pop
retf
mov
out
mov
fwait
adc
fadd
nop
repz
push
and
push
retf
lea
cmc
(bad)
out
xchg
push
jge
out
jge
xchg
movs
dec
dec
movs
xlat
cwde
outs
dec
popf
(bad)
aaa
push
and
jmp
adc
stos
leave
xchg
jmp
aaa
mov
stos
repnz
aaa
jl
sub
or
(bad)
jns
leave
xchg
push
pop
daa
mov
fsubr
aaa
adc
inc
retf
mov
pusha
push
es
aam
and
xor
mov
fs
rcr
sub
shl
dec
pop
cmp
push
loop
loope
pop
sub
and
dec
pop
cwde
xchg
pop
popf
fiadd
sbb
xor
jmp
stos
mov
lods
push
mov
int
mov
cdq
xchg
aam
jmp
ficom
inc
cwde
xor
aam
pop
dec
or
xor
arpl
xchg
mov
mov
popa
inc
fdiv
test
(bad)
shl
jo
arpl
leave
mov
clc
pushf
aas
or
mov
repz
lods
sbb
jne
mov
rcl
cmp
jmp
mov
push
xor
and
lods
rcr
test
pop
lds
retf
mov
fisub
cmp
call
lea
mul
ror
iret
dec
fcom
push
sbb
out
into
sbb
mov
gs
call
nop
sub
stos
in
les
(bad)
sub
pop
inc
xchg
cmp
call
(bad)
push
inc
sbb
aaa
cld
mov
jle
movs
mov
cwde
es
in
icebp
lahf
cli
ficom
loope
shl
mov
push
dec
pop
mov
dec
inc
mov
add
push
vpcmpeqd
iret
lods
and
out
mov
int
stos
jge
ret
pop
jo
mov
add
inc
loope
adc
cmp
jl
adc
mov
jmp
xor
jae
std
mov
stc
xchg
sbb
sub
or
and
push
push
and
add
(bad)
push
adc
leave
fldenv
das
jne
cmp
rcr
fnstsw
mov
jp
cdq
sbb
and
outs
mov
lods
jg
mov
not
xchg
pop
cs
cmp
test
sub
sub
lods
sahf
push
mov
jge
fsubr
xchg
loope
inc
shrd
or
nop
inc
push
neg
xor
leave
inc
enter
adc
jo
mov
test
out
inc
sub
jmp
ret
xchg
jb
sub
push
daa
ins
pushf
pop
dec
fcomip
cmc
add
or
mov
mov
mov
mov
add
mov
dec
lods
mov
fwait
push
and
in
outs
sub
cld
dec
pop
pop
ret
ja
sahf
mov
add
(bad)
imul
jecxz
in
fs
imul
fnstcw
fidivr
mov
dec
dec
cmp
cmp
lahf
pop
jecxz
dec
adc
lahf
or
enter
jmp
cwde
outs
ds
mov
fwait
pushf
sub
cld
(bad)
mov
ret
sahf
xor
cs
pop
push
mov
adc
mov
and
sbb
inc
cmp
ins
xchg
cs
(bad)
xchg
stos
pop
pop
(bad)
dec
pop
cmp
dec
mov
and
xor
xchg
test
dec
mov
stc
xchg
and
push
or
test
or
stc
cmc
sbb
mov
xchg
sub
test
pop
sub
cmps
jp
outs
mov
push
cmps
out
fisttp
cmp
ds
ja
mov
lods
scas
mov
mov
ins
mov
fiadd
fwait
loope
fbld
push
pop
(bad)
and
cmp
gs
test
addr16
ret
(bad)
stos
frstor
mov
lods
inc
ficomp
pop
cmps
or
fdivr
lea
shr
adc
(bad)
sbb
pop
add
(bad)
iret
or
addr16
test
jnp
inc
or
sbb
ds
cmp
fwait
jmp
pop
inc
stos
test
pop
xor
xchg
mov
ins
inc
movs
xchg
dec
cmp
and
mov
call
ret
xor
dec
aam
push
fisttp
rcr
data16
or
adc
stos
cmps
push
jmp
dec
sub
or
xchg
adc
and
mov
inc
fistp
stos
pushf
pusha
xchg
ret
pop
mov
dec
sbb
jmp
jle
in
rol
inc
fdiv
retf
cmps
sbb
jle
int3
shr
mov
out
ss
das
sbb
(bad)
in
dec
mov
sub
js
out
jmp
push
cmp
push
fstp
jg
fs
xor
jge
and
popa
cmc
les
test
mov
scas
aas
pop
imul
in
add
mov
movs
jle
cdq
movs
jb
cli
sub
mov
jbe
mov
jnp
pop
pop
add
pop
cdq
mov
mov
retf
adc
stc
shl
loopne
shr
xor
out
test
pop
movs
dec
cld
aam
sbb
sub
pop
cdq
adc
repz
mov
(bad)
dec
dec
jp
pop
int
pop
sbb
popa
inc
popf
sub
push
ds
adc
fnstenv
icebp
pop
nop
jo
mov
jg
sub
pusha
ja
(bad)
(bad)
mov
or
out
jne
cmovnp
jns
push
test
pop
lahf
mov
xor
gs
adc
mov
pop
mov
pop
add
aaa
jg
ins
aas
iret
dec
sbb
dec
aad
aad
and
ret
mov
or
add
mov
adc
or
movs
cmps
retf
xchg
imul
lock
(bad)
pop
nop
cmc
aad
dec
cmps
leave
mov
xchg
jmp
adc
push
jo
lahf
jg
lds
sub
out
mov
mov
mov
stos
fwait
int3
jge
sbb
cmps
pop
add
mov
xor
jmp
aad
retf
push
fstp
jp
cld
out
cld
es
jne
mov
cld
pop
out
hlt
(bad)
sbb
add
xchg
test
jae
popa
lock
loop
ret
lea
scas
in
inc
out
aaa
push
inc
adc
(bad)
fist
push
imul
repz
std
retf
mov
cwde
push
and
dec
mov
ret
add
(bad)
std
sbb
repz
inc
(bad)
xchg
inc
adc
mov
data16
fadd
hlt
in
push
mov
repnz
pushf
(bad)
loop
enter
add
test
lds
add
xchg
mov
push
cld
adc
aad
int
js
fisttp
sub
mov
sbb
cmc
(bad)
xor
enter
adc
add
xor
nop
mov
leave
add
jae
jp
dec
(bad)
pop
int3
sbb
dec
sahf
ins
mov
dec
mov
or
es
aad
js
(bad)
sub
push
push
repnz
mov
loope
int3
popf
and
xor
rol
cmp
push
retf
cmp
adc
popf
bound
push
mov
dec
cmc
mov
arpl
or
imul
inc
xor
ds
sti
fstp
jmp
pushf
inc
add
sbb
or
imul
lods
adc
in
jge
jge
daa
pop
xor
inc
pusha
mov
inc
call
jae
or
pmulhuw
out
or
jbe
sar
icebp
jg
pusha
pop
xor
mov
xchg
retf
fbld
mov
loop
push
mov
add
jb
and
adc
(bad)
sahf
je
mov
das
jge
push
out
mov
hlt
mov
xor
or
cwde
sbb
xchg
iret
inc
test
jmp
sti
pop
loopne
in
inc
xor
out
jle
enter
dec
pop
ins
fld
daa
mov
stos
popa
mov
mov
mov
les
mov
(bad)
in
jp
sbb
pushf
mov
movs
(bad)
mov
push
pop
cs
pop
outs
mov
push
cwde
inc
jbe
adc
mov
jg
out
(bad)
lds
iret
cmps
daa
xchg
stc
(bad)
xlat
iret
int3
fs
add
(bad)
pop
xchg
nop
mov
repnz
push
push
mov
jmp
pop
cmp
add
mov
inc
or
in
inc
and
jns
push
xchg
gs
or
mov
and
nop
jp
out
daa
iret
mov
in
cwde
xchg
out
call
daa
hlt
icebp
test
pop
in
int3
pop
mov
fisttp
fcomp
adc
cmp
ds
shl
dec
push
mov
rol
push
stos
mov
fwait
or
rcl
ret
arpl
and
mov
in
imul
cld
push
xchg
(bad)
(bad)
dec
mov
push
shr
je
push
ins
nop
les
shl
cmp
sub
es
fidiv
stos
jl
adc
pop
push
mov
fidiv
cli
lds
adc
mov
in
inc
adc
lds
clc
mov
push
lods
hlt
in
and
add
retf
(bad)
in
xchg
cs
mov
daa
mov
mov
clc
rol
mov
(bad)
clc
icebp
ins
scas
ja
sar
mov
sbb
or
push
add
ss
mov
xchg
sub
and
xlat
lods
(bad)
std
inc
jns
(bad)
pop
sbb
ins
ds
fistp
leave
mov
mov
retf
cli
mov
or
ret
sar
inc
inc
(bad)
lea
in
cs
mov
stos
adc
sbb
arpl
adc
add
idiv
fdiv
dec
(bad)
(bad)
push
jp
jg
enter
imul
sbb
outs
popf
imul
sbb
or
push
out
into
jl
ds
push
neg
jl
les
mov
jg
jge
fidivr
pop
sbb
mov
cmc
cmp
mov
xor
mov
mov
and
and
push
sbb
jge
fmul
fidiv
and
mov
lahf
xor
jns
loope
or
jbe
aad
popf
sbb
ds
or
lahf
or
mov
push
mov
scas
jecxz
sub
pop
movs
xchg
sbb
cmp
cli
xchg
ja
add
dec
mov
test
sbb
cwde
mov
les
(bad)
push
stos
inc
inc
cwde
pop
inc
inc
in
dec
cmp
ins
icebp
mov
fsubr
push
jne
xor
cmp
data16
xchg
popf
jmp
loope
or
cdq
pop
scas
stc
leave
aaa
adc
dec
ret
test
loop
out
pop
and
mov
popa
rol
mov
movs
pop
inc
jno
pop
and
jge
mov
push
cmp
cld
push
mov
lahf
pop
xchg
movs
push
fldcw
loope
mov
sbb
inc
out
outs
movs
neg
add
pop
cmps
leave
cwde
(bad)
jns
inc
outs
add
sub
or
jae
dec
jge
xchg
icebp
jo
in
les
lods
push
push
mov
and
cmps
imul
jmp
jo
loop
into
jg
pusha
push
sbb
call
jp
pop
ds
ret
dec
imul
fcomp
dec
leave
dec
cmp
jo
xchg
sub
out
icebp
cmp
cmp
mov
test
cmp
pop
dec
xor
and
outs
mov
push
mov
mov
cmps
out
fnsave
out
mov
ret
loope
mov
fld
jne
mov
inc
scas
daa
add
out
ja
lock
fwait
(bad)
fst
call
mov
in
into
push
sar
push
and
daa
inc
xor
push
add
push
xor
push
dec
jns
push
ficomp
into
or
pushf
cmp
adc
or
xchg
mov
mov
int
imul
push
cli
mov
lahf
(bad)
out
xchg
jns
xchg
repz
pop
fbld
inc
ins
mov
fisttp
in
stos
mov
aad
aas
push
sub
fist
sbb
mov
(bad)
jns
jp
es
scas
iret
iret
mov
mov
adc
dec
mov
loop
or
mov
mov
scas
mov
sub
pop
in
arpl
retf
sub
cs
dec
and
je
xchg
jmp
push
sub
xchg
imul
cli
int3
pop
call
mov
jmp
outs
std
jns
inc
cmp
and
retf
pop
popa
add
fisttp
inc
mov
mul
mov
les
adc
push
in
jle
inc
cmp
aas
retf
out
mov
out
int
cmp
fidivr
jae
sbb
mov
mov
js
outs
retf
(bad)
sbb
fild
fwait
out
outs
adc
pop
push
xchg
loope
jo
jo
sti
mov
push
xor
test
inc
ja
ins
loopne
sub
sbb
mov
ss
mov
arpl
push
lods
loopne
ja
pop
and
das
loope
pop
sub
mov
push
ds
dec
jp
push
mov
cwde
mov
fcomip
sbb
ins
sbb
(bad)
lods
cmc
lahf
test
jg
popf
(bad)
je
(bad)
mov
pop
jge
stc
movs
push
xchg
imul
(bad)
push
mov
cmp
les
or
ins
adc
mov
es
aam
out
pop
sbb
and
jl
jmp
jmp
(bad)
daa
xor
call
std
jecxz
dec
test
xchg
mov
cmp
hlt
adc
cmc
add
pop
int3
daa
dec
xchg
imul
add
xchg
stc
pop
mov
mov
stc
sub
inc
adc
fmul
out
cmc
mov
push
(bad)
fnsave
and
sahf
mov
pop
fyl2xp1
push
out
or
xlat
ror
movs
push
movs
(bad)
jmp
mov
es
test
dec
pop
dec
sub
mov
iret
shl
enter
dec
arpl
pop
mov
cmp
fs
ja
(bad)
movs
fsub
sti
fadd
xchg
xor
cli
or
cdq
xchg
add
icebp
pop
pop
dec
mov
mov
es
sahf
data16
paddsb
(bad)
or
popf
or
or
mov
pop
add
and
xor
leave
push
or
repz
jl
or
ins
inc
sub
test
and
arpl
jo
add
jp
xor
lock
ret
cdq
out
jp
mov
jbe
rcl
neg
in
xchg
mov
add
in
enter
cmc
scas
cmp
nop
push
mov
xchg
or
xchg
ret
mov
add
mov
test
adc
outs
jno
jbe
push
jmp
lock
(bad)
cmps
aas
(bad)
mov
mov
xchg
jle
mov
sar
lahf
cmp
arpl
and
xor
sub
mov
popf
dec
retf
mov
adc
cdq
inc
cmp
cdq
loope
or
sub
mov
cmps
cmp
add
jl
adc
inc
sar
jne
scas
mov
add
xlat
repz
shr
test
loopne
xchg
movs
lahf
ds
sub
int3
xchg
icebp
xor
xor
call
cmp
push
fwait
xchg
cmp
cwde
mov
push
fstp
in
cmps
xchg
pusha
mov
test
push
ror
jbe
cwde
jp
js
xchg
arpl
add
pushf
loop
cpuid
lahf
add
cmp
cmp
mov
std
or
jmp
neg
out
mov
(bad)
sti
lods
and
or
jns
add
sbb
mov
sub
push
mov
pusha
xchg
out
xor
cli
push
xor
mov
inc
mov
shl
gs
leave
pusha
hlt
cmp
mov
jg
mov
xlat
cmp
fiadd
shl
loope
mov
push
jl
out
test
fidivr
mov
das
pop
xor
into
push
jbe
and
ja
dec
je
sub
sahf
and
jbe
pop
(bad)
test
fwait
jge
(bad)
adc
pop
test
(bad)
out
xlat
inc
adc
popa
cmp
rol
and
mov
jl
pop
fs
and
or
or
ss
jecxz
xor
adc
dec
outs
cmps
es
cmp
mov
inc
jle
(bad)
in
dec
push
call
adc
cmp
daa
pop
int3
push
xchg
jno
mov
mov
fadd
adc
xchg
jmp
jnp
jmp
fst
jbe
jecxz
mov
ins
mov
dec
data16
push
xchg
sbb
jl
cs
pop
mov
jle
and
lods
retf
loop
cmp
sbb
icebp
movs
mov
scas
ret
dec
shl
call
mov
int
cmp
jo
lahf
mov
push
push
pop
sti
popa
sbb
and
mov
or
and
mov
add
xchg
inc
sub
add
or
rol
mov
loop
mov
retf
or
imul
mov
(bad)
pop
pop
jnp
add
inc
std
push
jecxz
inc
sub
push
mov
sbb
or
lahf
jne
rol
add
pause
sub
or
dec
push
pop
loopne
adc
push
nop
inc
adc
dec
int
es
(bad)
std
mov
scas
pop
mov
fs
pop
push
lahf
cmc
or
and
popa
loop
ret
dec
push
or
pop
jno
in
add
shl
jg
or
mov
sbb
sub
popf
leave
int3
cmp
loop
test
sti
fwait
xor
and
pop
fnstenv
jge
mov
push
mov
sub
sub
jg
ret
mov
pusha
push
or
in
lods
mov
scas
in
les
jnp
xchg
pop
or
out
push
add
mov
inc
xor
mov
retf
sbb
cdq
jl
arpl
add
rcl
clc
and
cmp
or
cwde
push
out
mov
sbb
lods
jle
dec
test
out
outs
shl
in
and
(bad)
pop
xor
pop
sahf
fst
push
or
pop
jmp
jecxz
(bad)
jl
ins
pop
mov
fadd
lods
test
mov
rol
sbb
or
jbe
(bad)
dec
push
push
push
cmp
aam
lea
cs
jle
js
xchg
mov
fstp
daa
jge
cmp
fcom
cwde
xor
(bad)
cdq
in
inc
xor
movs
adc
add
cmp
or
cmps
jbe
jp
mov
ja
inc
jmp
dec
push
adc
repz
xchg
inc
jl
xor
cmc
mov
(bad)
ror
xchg
mov
and
sub
fs
(bad)
push
pop
mov
cwde
mov
shl
add
mov
mov
jno
push
jns
sub
add
aam
inc
pop
push
sbb
pop
idiv
adc
inc
add
movs
jp
out
sbb
push
dec
adc
loope
jl
scas
dec
add
cmps
test
dec
inc
es
or
xchg
in
mov
xchg
into
es
(bad)
pop
js
ja
call
and
sbb
pop
sbb
mov
cmp
sti
xchg
imul
xchg
jmp
pop
mov
push
dec
bound
xchg
out
fdivr
imul
push
fistp
sub
mov
mov
popa
and
adc
push
je
mov
pushf
aad
ret
push
mov
and
and
ficomp
retf
stos
ret
retf
in
popf
adc
push
cwde
retf
das
xor
dec
sbb
mov
sub
(bad)
fdivr
shr
dec
or
mov
sbb
out
out
cwde
fistp
xchg
sbb
and
bound
jmp
dec
out
clc
js
mov
xchg
stc
cmp
stos
clc
or
mov
sub
shl
add
enter
adc
and
xor
and
shl
inc
into
pop
dec
rcl
add
pop
jmp
shl
pushf
daa
jg
and
push
cwde
jge
mov
xchg
in
lea
gs
mov
sub
push
imul
cmps
sbb
jg
adc
adc
std
imul
sbb
xlat
repz
sub
push
xchg
sub
clc
mov
leave
rol
adc
dec
sub
mov
icebp
cmp
sub
stos
xor
and
ja
xchg
sbb
jmp
fiadd
das
arpl
(bad)
iret
loop
movs
sar
in
dec
cmc
xor
jle
adc
cld
dec
pop
and
out
loope
call
inc
movs
xchg
imul
push
je
xchg
(bad)
out
sbb
ins
ret
sbb
adc
mov
or
push
movs
cmp
sub
(bad)
call
or
and
add
shr
xchg
mov
sub
adc
fiadd
sbb
pop
sub
mov
push
cmp
data16
lds
add
and
loop
cmp
or
nop
fnsave
jnp
or
rcl
adc
pop
stc
dec
jne
xor
out
jl
imul
out
stc
in
adc
fwait
es
dec
movs
push
scas
add
pop
lahf
jmp
pop
push
stc
shr
fistp
jl
adc
push
imul
mov
das
xor
ins
add
pop
jge
mov
adc
lahf
jb
mov
fist
ss
movs
and
hlt
mov
dec
adc
xchg
rol
es
sub
dec
ror
popf
cmps
cmps
push
xchg
icebp
mov
(bad)
mov
div
add
scas
mov
pop
mov
mov
mov
popf
sub
cmp
lods
jmp
fsub
sub
fs
jle
fadd
or
div
sub
retf
scas
or
outs
aad
jno
ret
(bad)
jnp
dec
jns
movs
jno
adc
fiadd
adc
(bad)
jmp
mov
pop
mov
adc
cwde
ret
outs
(bad)
idiv
add
fistp
data16
pop
pop
cmps
pop
xor
adc
mov
lock
shl
in
nop
jge
ja
sti
ror
aas
mov
dec
jbe
movs
in
call
(bad)
arpl
jbe
fs
shl
test
ffree
callw
pop
jl
cmc
aas
xor
sub
push
call
dec
scas
lahf
fidivr
sub
and
or
sub
pop
aam
mov
xchg
div
jmp
push
jp
xchg
aad
stos
jb
stos
retf
jmp
cdq
test
push
ss
or
jmp
popf
test
(bad)
jp
mov
mov
and
test
popf
arpl
jne
adc
js
adc
sbb
pop
out
jecxz
adc
push
push
sar
retf
mov
jb
mov
mov
addr16
xchg
ins
mov
stc
push
push
clc
xchg
mov
xchg
icebp
fnstcw
cmc
mov
xor
or
movs
xchg
inc
xchg
das
or
mov
xchg
fs
adc
das
loop
mov
adc
ins
nop
rol
mov
mov
push
push
rol
jp
pop
cdq
add
sets
dec
jno
xor
pop
xchg
mov
inc
out
cmp
or
daa
xchg
jle
stos
dec
pop
inc
cmc
clc
jns
in
jle
in
fld
jno
mov
inc
cmp
lahf
jecxz
neg
lea
jl
cli
jb
dec
mov
outs
push
adc
out
shl
in
mov
inc
sub
fldcw
popf
in
pmulhw
nop
jae
inc
mov
out
add
arpl
push
xchg
push
push
mov
loopne
push
pop
jne
xchg
data16
cmps
pop
repz
dec
sbb
cwde
ret
adc
dec
xor
icebp
repz
stc
pop
push
in
mov
fisub
mov
sbb
xchg
jmp
push
inc
cmps
cmps
push
mov
push
inc
setae
call
sbb
pop
imul
and
outs
test
xchg
push
and
fidiv
inc
sbb
ficomp
adc
sti
adc
outs
shl
nop
xchg
in
pop
fldcw
iret
sbb
sbb
pushf
or
pop
sbb
enter
inc
sbb
inc
shl
fld
adc
movs
out
and
inc
inc
add
std
popf
adc
not
lods
cmp
imul
sub
out
cld
sbb
add
imul
xchg
test
cwde
xchg
lahf
arpl
dec
test
mov
inc
dec
pop
mov
in
retf
sbb
push
push
ins
jmp
mov
and
sbb
add
xchg
jmp
iret
add
cdq
cmp
cmp
and
mov
jnp
ds
and
xor
int
push
scas
inc
mov
sub
push
mov
sar
mov
jecxz
push
and
xchg
call
xlat
fmul
aad
xor
push
add
cld
fsub
mov
in
cmc
stos
pop
stos
push
adc
leave
mov
sahf
jne
call
jne
stc
in
hlt
pop
in
mov
lock
adc
jmp
cmp
cmc
call
push
mov
inc
shl
ret
add
shl
aas
js
push
cmp
sbb
call
hlt
js
inc
jne
jmp
mov
loopne
pop
push
sub
push
in
jbe
mov
jg
jnp
(bad)
test
movs
jl
jl
adc
ja
ror
xlat
icebp
test
or
xor
popa
pusha
mov
mov
neg
xchg
jo
add
xchg
pop
stos
push
jl
sub
dec
sub
test
or
xchg
jns
pop
out
mov
xchg
lock
imul
in
cs
imul
pop
fwait
int3
pusha
(bad)
sub
push
jl
das
mov
xor
pop
movs
imul
das
ret
sub
mov
and
cld
gs
aas
call
out
push
(bad)
outs
(bad)
dec
fwait
rol
inc
cmps
fadd
cmp
fmul
daa
mov
scas
out
dec
fucomi
imul
adc
sbb
stos
mov
aas
lea
out
sub
lock
pop
xchg
or
add
cwde
jbe
dec
sub
push
hlt
mov
imul
xchg
scas
xor
adc
scas
cmp
pusha
sbb
pop
bound
lahf
rol
inc
fild
lea
mov
retf
and
adc
push
ja
jg
fsubr
les
cmps
mov
inc
sbb
call
arpl
fistp
mov
movs
push
mov
pop
scas
stc
aad
(bad)
pop
cmp
or
cmp
jno
adc
mov
ja
mov
mov
sub
mov
cld
shr
arpl
enter
neg
fsubr
(bad)
pop
jle
adc
hlt
loopne
or
sub
lahf
sbb
iret
fadd
pop
pop
mov
fadd
in
mov
int3
(bad)
mov
mov
mov
rcl
or
push
pop
ret
arpl
bound
ja
rcr
mov
sti
arpl
es
aam
cld
imul
inc
inc
icebp
retf
dec
dec
out
test
cmp
fs
or
fld
mov
popf
sti
jecxz
test
add
jno
cmp
or
adc
cmp
xor
(bad)
xchg
xor
push
mov
stos
aaa
fiadd
cmc
adc
(bad)
call
out
cmps
pop
xor
mov
inc
gs
hlt
sub
sar
cmp
gs
cdq
clc
pop
mov
jbe
add
or
mov
push
xchg
push
mov
sbb
cmps
mov
aas
push
inc
(bad)
fmul
lock
shl
push
inc
retf
sub
lea
out
fimul
mov
jg
or
or
ins
pop
adc
movs
mov
(bad)
xor
sub
cmps
push
xchg
enter
dec
sub
pop
mov
push
lods
xor
stos
retf
iret
pushf
add
cmp
mov
adc
push
stos
inc
shr
arpl
movs
out
mov
mov
mov
xchg
mov
int3
pop
dec
test
int
dec
inc
pop
call
clc
out
mov
jg
sbb
mov
xor
and
clc
movs
xchg
xchg
idiv
fs
rcl
and
pextrw
push
pop
imul
sbb
pop
(bad)
aas
in
lods
mov
add
add
sbb
add
loope
jo
pop
mov
sub
sub
mov
add
or
cdq
cmc
jbe
jno
popf
inc
std
ficom
mov
sbb
inc
dec
inc
popf
and
sahf
and
add
xor
inc
mov
mov
mov
fidivr
xor
sub
ins
jle
or
mov
jbe
popf
add
inc
xor
outs
mov
mov
sub
pcmpeqw
mov
or
daa
pop
mov
push
and
xchg
(bad)
test
jae
cmp
push
dec
xchg
(bad)
stc
in
dec
push
push
loope
xchg
pop
stc
cmp
rcl
mov
add
adc
dec
pop
aam
mov
jle
sub
fdiv
pop
fidivr
mov
mov
mov
(bad)
arpl
mov
sbb
ret
lea
int
or
add
dec
les
aad
ins
dec
mov
iret
ja
inc
cmps
or
scas
inc
mov
test
inc
and
sbb
retf
into
data16
xchg
sub
jbe
sbb
sub
call
(bad)
push
bound
mov
enter
and
into
nop
xor
mov
shr
movs
xor
enter
add
fnsave
mov
fimul
scas
in
mov
fnstcw
push
cld
cmp
jb
ret
popa
xchg
push
(bad)
in
pop
mov
stos
lahf
repz
jle
or
xor
push
add
mov
ret
fsub
jl
in
in
pushf
xchg
je
sub
bound
daa
jmp
mov
call
adc
jecxz
scas
xor
inc
pop
xor
sbb
mov
mov
pop
sar
push
xchg
adc
rcl
push
and
repnz
ss
int
sub
add
shr
cdq
test
retf
mov
pusha
cmps
sbb
add
xor
jg
lea
leave
dec
cmps
pop
retf
mov
dec
out
mov
jg
inc
shl
stc
cmc
fadd
mov
inc
sub
lock
mov
adc
stos
cwde
loope
fstp
(bad)
mov
ret
mov
jae
pop
cdq
jecxz
push
xbegin
ds
cmp
cmp
stos
sub
xor
pop
das
add
jmp
test
lahf
sbb
mov
mov
push
mov
out
pop
or
or
movs
vcvtss2sd
repz
jl
inc
and
dec
cmp
rol
xchg
pop
jecxz
mov
out
loopne
movzx
pop
addr16
xor
popf
loopne
or
ret
inc
out
scas
daa
sti
aas
pop
inc
mov
and
mov
pmullw
adc
pop
mov
xor
jecxz
or
pop
addr16
push
lahf
mov
jl
pushf
shl
retf
sti
call
loopne
pop
jmp
or
ret
inc
sbb
outs
js
(bad)
dec
scas
and
das
xor
mov
mov
mov
add
enter
dec
mov
dec
and
pop
stos
cmp
add
xchg
xor
pop
or
push
or
rol
test
sub
leave
iret
repz
mov
jmp
or
ror
push
push
movs
test
cmc
push
push
mov
push
xchg
das
aad
push
pop
mov
pusha
in
ret
cmp
enter
popf
shl
inc
sub
mov
pop
imul
sahf
jo
cmps
(bad)
stc
repz
shl
iret
pop
push
or
cli
adc
inc
sbb
xor
and
pop
sub
into
jbe
fwait
movs
cli
jmp
call
inc
cdq
in
retf
lahf
call
mov
dec
dec
in
xchg
and
movs
in
pop
cmps
mov
xor
and
pop
mov
cmp
daa
cmc
(bad)
into
(bad)
cmp
test
mov
fidivr
mov
mov
dec
(bad)
xor
sbb
(bad)
inc
sahf
cmp
dec
sub
xchg
daa
adc
daa
shl
push
out
stc
imul
int
xchg
and
cdq
sahf
pop
mov
(bad)
jae
fcomip
dec
jns
lds
(bad)
push
test
pop
and
call
sbb
fs
xchg
loop
inc
lea
inc
mov
xor
push
push
xor
sbb
jle
ins
hlt
sbb
mov
and
test
ss
pushf
pop
inc
rcr
fadd
clc
and
ss
ret
jb
in
xchg
mov
dec
ins
jns
pushf
in
(bad)
pop
in
nop
inc
lods
retf
rcl
and
popf
push
dec
inc
mov
push
xchg
or
and
int3
adc
in
dec
aam
lds
mov
jns
pop
(bad)
or
fistp
test
repz
lock
or
add
dec
or
sub
cdq
or
or
push
ret
xor
ins
dec
(bad)
(bad)
rcl
arpl
repz
ins
lock
imul
inc
(bad)
mov
aam
iret
aad
lahf
push
add
mov
xchg
mov
shl
jecxz
mul
or
(bad)
aam
mov
sub
dec
mov
mov
fnstenv
push
std
out
outs
fcom
mov
add
call
push
icebp
sahf
in
cld
add
dec
push
aas
xor
or
fst
imul
cwde
(bad)
push
adc
arpl
pushf
push
cmp
lods
dec
mov
retf
mov
cmp
jl
aas
int
je
xor
repz
xchg
div
ret
cmp
xchg
in
imul
mov
push
rcl
rcr
int
outs
sbb
rcr
fiadd
ror
enter
push
or
into
sbb
out
mov
mul
adc
cdq
into
jne
jo
xor
add
fxam
or
inc
pop
mov
cwde
outs
lods
pop
and
xchg
cmp
inc
xchg
cli
loopne
mov
xchg
mov
jecxz
and
mov
(bad)
and
add
std
push
mov
mov
dec
test
dec
cli
jbe
xchg
pop
mov
inc
or
or
cmps
jg
push
push
fwait
daa
fwait
repnz
bound
xor
imul
and
mov
lea
xchg
clc
or
aad
xor
iret
es
test
imul
dec
(bad)
bound
mov
test
adc
and
ret
lea
pop
fwait
fs
loop
test
loopne
jmp
lock
jno
(bad)
ja
mov
and
xchg
mov
mov
imul
push
jecxz
outs
sahf
ret
or
mov
std
inc
sub
sbb
jecxz
mov
stos
movs
push
fisubr
or
cmp
cwde
add
mov
sub
outs
fcomip
in
push
fist
es
call
fiadd
or
test
pop
cmps
or
(bad)
(bad)
pop
call
stos
mov
rcl
mov
call
cmps
adc
or
mov
jp
(bad)
js
xchg
outs
or
outs
test
retf
ficomp
inc
outs
and
add
addr16
imul
push
jae
cmc
loopne
fbld
lea
add
sub
mov
loope
lahf
call
cmps
cmp
mov
pop
mov
jmp
push
cmp
rcl
sar
out
cdq
mov
cmp
mov
sub
xor
js
jnp
dec
scas
jmp
jge
scas
sbb
inc
add
in
jbe
in
scas
fs
pushf
push
dec
(bad)
test
mov
loope
cdq
xchg
push
dec
mov
mov
(bad)
call
xor
dec
rol
iret
push
jp
cdq
aaa
cdq
in
je
hlt
mov
out
sbb
sbb
sbb
loopne
push
jbe
adc
pop
sbb
(bad)
retf
fs
das
dec
mov
repz
ficomp
dec
mov
push
(bad)
imul
repnz
pop
aas
push
adc
xor
cmp
aad
mov
outs
sbb
push
sub
mov
ins
push
mov
lds
pop
stos
sbb
retf
rcr
shl
stos
pop
int3
inc
fwait
test
add
sub
push
add
mov
inc
jno
cmp
pop
xchg
or
sahf
outs
jae
and
in
sub
dec
iret
or
adc
push
pop
pusha
mov
adc
cmp
out
aas
adc
leave
sub
push
rcr
sub
sbb
aam
rcr
test
clc
clc
pop
retf
xor
cdq
xchg
lea
cmp
stos
test
retf
jmp
jmp
or
test
imul
js
sub
jp
sub
pop
xor
fadd
xchg
gs
fadd
outs
shl
jne
ins
into
xchg
xor
bound
scas
outs
adc
gs
aam
popf
test
mov
xchg
scas
test
shr
rcr
push
adc
dec
mov
jns
xor
add
cmp
dec
int3
sbb
mov
mov
mov
jbe
ss
jns
xchg
loop
mov
or
inc
sub
add
test
sub
and
jl
or
or
push
adc
mov
in
cmps
loope
aas
into
pop
and
(bad)
repnz
mov
xor
dec
int
add
jmp
enter
jle
and
jns
rcr
stc
shl
mov
fldenv
dec
inc
scas
sbb
mov
fucomp
(bad)
dec
movs
les
in
jmp
or
mov
rcr
(bad)
in
nop
add
sar
clc
fild
dec
or
xchg
cli
test
out
sti
xor
int3
daa
mov
test
cmp
imul
lods
and
or
repz
cli
lods
ret
mov
cmps
add
lock
pop
cmp
ins
xchg
cmp
test
jo
stos
push
aam
push
sbb
shr
xchg
pop
and
je
mov
mov
imul
add
sub
(bad)
xchg
cmp
adc
(bad)
retf
dec
aas
into
adc
xlat
add
cwde
cmc
aas
jae
mov
or
sbb
icebp
imul
stos
and
mov
das
and
jmp
mov
int
and
add
or
and
ds
xchg
lods
out
(bad)
es
jbe
(bad)
mov
adc
shl
xchg
pop
cmp
loope
aaa
adc
data16
mov
outs
inc
xor
mov
cmp
jbe
jne
in
dec
and
mov
mov
inc
cmp
jno
cmp
and
jp
or
nop
aas
jnp
ss
pop
push
add
dec
icebp
dec
dec
adc
xchg
jns
adc
into
je
mov
cmp
rcr
pop
lods
pop
mov
dec
pushf
add
shl
dec
push
outs
sub
jg
mov
cli
aas
xor
add
jns
neg
ret
add
add
mov
(bad)
or
cmps
jg
lods
test
jo
pusha
xchg
jmp
sub
outs
jb
sbb
arpl
mov
rol
fld
ss
stos
in
(bad)
fdivrp
lds
inc
and
mov
cmp
nop
jne
cmp
cmps
cld
push
stos
scas
mov
jp
dec
inc
jmp
sub
ror
ror
push
mov
xchg
pop
in
repz
(bad)
hlt
shr
jp
mov
mov
gs
inc
mov
ja
cmc
mov
push
inc
std
scas
lea
gs
data16
cdq
ins
xchg
aaa
mov
es
stc
inc
ds
(bad)
out
cdq
jmp
inc
pop
mov
fsubp
retf
xor
or
aas
jle
rcr
fucom
aas
xchg
stc
pushf
dec
mov
xchg
and
cmp
jo
adc
xchg
mov
jae
jb
cld
pop
aas
vphsubbw
and
push
xor
add
xor
mov
inc
jb
mov
mov
arpl
push
push
loopne
stc
out
neg
inc
inc
and
sahf
repz
inc
ins
or
(bad)
fwait
lea
xor
hlt
sbb
ret
das
pushf
add
jmp
xchg
ja
jle
dec
jle
xchg
call
(bad)
fadd
lahf
in
test
fbstp
cwde
xchg
ftst
icebp
pop
sub
jae
mov
stos
pop
sub
jno
sbb
aam
call
out
scas
es
push
mov
dec
sub
imul
ror
data16
int
sub
jo
outs
push
pop
push
repnz
jno
lea
xlat
dec
vpmullw
push
mov
push
push
dec
test
add
jne
push
jmp
in
cmc
pop
outs
inc
mov
(bad)
sbb
(bad)
retf
out
and
pop
sub
ds
xchg
mov
xor
cmps
pop
jmp
stos
das
sub
xor
out
imul
mov
ins
sbb
push
push
pop
dec
jmp
xchg
mov
pop
add
sti
jo
mov
aaa
xor
inc
mov
data16
mov
pop
xchg
jmp
sub
out
mov
scas
movs
iret
push
adc
push
fild
push
mov
retf
xchg
push
aad
mov
inc
(bad)
mov
out
xor
shr
mul
inc
dec
inc
ror
add
push
and
pop
in
(bad)
mov
cmps
sbb
sti
out
sbb
inc
mov
daa
push
jmp
add
hlt
mov
add
jae
mov
and
test
data16
fcomi
cmps
fcomp
fsubr
jmp
imul
lock
inc
adc
ret
mov
jnp
mov
xor
in
repnz
outs
and
adc
int
jbe
into
out
inc
adc
mov
hlt
call
xchg
out
adc
dec
add
in
or
add
(bad)
(bad)
push
mov
hlt
pop
mov
cmp
inc
je
push
movs
dec
xchg
pop
shl
das
fcom
or
or
adc
add
imul
retf
push
pop
mov
xor
sar
pop
push
in
adc
mov
out
ds
inc
or
call
iret
and
mov
push
stc
cld
aas
call
inc
push
lahf
sub
mov
cmp
in
xchg
dec
ret
mov
sbb
push
add
movs
call
pop
inc
sbb
bound
push
pop
pop
test
loop
or
xchg
outs
shl
or
imul
seto
xor
fcom
pop
push
stc
loop
out
dec
aam
or
jl
outs
leave
test
sub
rol
push
mov
push
call
shr
stos
sbb
in
test
popa
xchg
pop
stc
aad
mov
cmps
ja
in
mov
imul
test
mov
push
(bad)
popa
stos
int
in
out
and
mov
or
mov
lahf
jne
mov
iret
icebp
push
dec
mov
sbb
jmp
ins
push
lock
es
pop
rol
jecxz
jmp
pop
in
retf
aas
mov
mov
fwait
retf
dec
cmp
stos
je
xor
loope
movs
xchg
mov
test
or
test
enter
mulps
pop
cmps
xchg
movs
jle
add
push
mov
(bad)
aas
rcr
dec
jno
xchg
add
outs
(bad)
fdiv
or
jbe
jnp
push
rol
xor
shl
gs
addr16
add
or
push
loopne
cmp
(bad)
mov
cmp
(bad)
js
push
lods
xlat
das
aam
std
add
jmp
jne
cmps
add
push
sub
out
sub
push
call
out
or
or
or
cdq
mov
jno
lahf
xor
outs
sbb
cld
cmps
mov
ret
movs
xchg
inc
ins
jle
xchg
xchg
cmc
scas
push
pop
mov
or
loope
pop
and
(bad)
call
add
les
retf
ror
lahf
or
clc
sub
add
xchg
retf
repz
mov
xchg
adc
fcomp
je
(bad)
dec
aad
jne
dec
or
out
rol
add
mov
loope
sub
mov
rcl
and
pop
scas
pop
mov
add
pop
jge
test
in
outs
adc
mov
mov
fisttp
call
inc
mov
lahf
fbld
in
fcomp
ins
push
mov
cmps
xor
jne
std
popa
inc
popa
shr
pop
(bad)
push
add
add
sti
icebp
loop
mov
mov
fdiv
loopne
jno
cmp
cmp
pop
fsub
adc
xor
aam
jns
push
mov
aam
sbb
mov
ja
mov
mov
pop
cwde
sbb
fwait
pop
jge
pop
out
sbb
cli
adc
mov
fcmovb
(bad)
mov
je
xchg
dec
mov
lods
shl
imul
and
mov
sub
inc
mov
aas
aas
(bad)
inc
or
cmps
cmp
cmp
push
fmul
push
jmp
pusha
sbb
sbb
js
in
pop
pusha
(bad)
jns
xor
add
sub
fadd
pushf
pop
mov
popf
fidiv
jne
cmp
mov
sub
mov
and
push
push
mov
inc
jmp
mov
ror
and
xchg
(bad)
mov
inc
push
fimul
fwait
es
cdq
cs
ins
adc
imul
push
mov
nop
repz
pop
or
hlt
lds
fistp
xchg
xor
inc
mov
cmp
dec
lods
out
retf
sub
jmp
clc
mov
sbb
cmp
pop
jae
jp
inc
push
loopne
xchg
ja
test
imul
scas
mov
mov
push
rcr
jmp
sahf
fwait
cmps
out
rol
cmp
out
cmp
shl
int
and
dec
inc
outs
ror
fdiv
mov
mov
(bad)
data16
mov
cli
hlt
push
es
lock
cmp
push
fiadd
outs
inc
xor
mov
cdq
scas
outs
lahf
mov
mov
xchg
jbe
jne
clc
imul
leave
cmp
dec
lea
xchg
out
sbb
sub
pop
jbe
mov
ins
movs
fistp
frstor
adc
mov
popf
add
or
dec
sahf
mov
jno
sbb
xchg
xor
jmp
or
fisubr
add
xor
cli
repnz
push
mov
cmc
inc
fidiv
test
aam
sub
mov
retf
mov
jecxz
shl
out
(bad)
into
rcl
mov
pop
leave
dec
jecxz
sbb
repnz
loopne
adc
and
xchg
sub
cmps
aas
(bad)
in
jl
sub
aas
cmovs
loope
add
mov
movs
adc
mov
stos
push
and
adc
mov
pop
iret
mov
dec
dec
sbb
ret
ins
jns
call
pop
retf
or
js
push
test
jl
adc
repnz
push
jecxz
stc
mov
pop
dec
popf
fidiv
cmps
arpl
push
sbb
inc
test
fwait
mov
mov
fisubr
add
cmp
xor
fcomp
imul
ror
icebp
xor
mov
and
ret
jnp
ret
aas
mov
pushf
leave
and
cmp
mov
mov
sbb
push
movs
jge
cmp
jns
inc
hlt
add
cmps
xor
(bad)
or
sub
mov
mov
sbb
sbb
push
pusha
mov
ins
push
sub
test
loop
out
mov
fwait
lea
xor
sub
xchg
pop
cmps
cmp
test
pushf
popa
push
and
repnz
mov
mov
dec
lods
pop
repz
cmp
pop
and
data16
xchg
inc
scas
int
popf
aas
scas
les
div
xchg
and
int3
dec
lahf
(bad)
scas
sbb
jns
push
inc
(bad)
jg
fmul
xchg
pop
and
sub
mov
mov
outs
stc
pop
sbb
test
jmp
icebp
mov
sbb
inc
dec
pop
shl
adc
test
jp
pop
fstp
xchg
arpl
inc
aam
and
cli
(bad)
sti
add
xlat
sub
out
or
inc
loopne
ds
std
sub
cmps
dec
jecxz
pop
sar
mov
imul
mov
lahf
pop
ins
out
cmp
(bad)
mov
mov
add
pusha
out
xor
jnp
dec
xchg
pop
stos
or
imul
pushw
fsub
scas
cs
int3
sbb
xor
aam
mov
test
stc
jns
xchg
dec
mov
cmps
outs
dec
and
jbe
xchg
mov
in
xor
lahf
mov
fcom
jns
cmp
cmps
dec
pop
xchg
sub
into
pop
cs
add
aas
lods
mov
jp
sahf
push
hlt
neg
repz
movs
iret
and
inc
imul
stc
test
jp
loope
call
mov
aam
sti
mov
add
push
mov
inc
mov
out
mov
rol
dec
mov
out
mov
retf
mov
cmc
inc
loop
inc
scas
inc
cmp
repz
dec
cmp
inc
mov
and
popa
mov
xor
inc
pop
test
cli
scas
dec
jle
fmul
outs
out
outs
pop
es
out
add
inc
xlat
pop
pop
icebp
dec
and
dec
xor
(bad)
shl
pop
mov
xchg
lahf
iret
std
pop
pop
call
movs
das
xchg
(bad)
fidiv
inc
adc
jbe
shl
jge
mov
jl
mov
ja
cmps
mov
rol
sbb
push
js
test
push
ror
mov
sbb
xor
and
xor
call
call
outs
jmp
dec
bound
add
aas
(bad)
xchg
mov
jg
ins
ret
mov
jp
sub
scas
mov
push
push
js
xchg
adc
aam
in
in
popf
adc
cmp
js
cmps
xor
ret
cmp
jle
mov
(bad)
mov
xor
jnp
scas
xchg
inc
out
xchg
test
or
fst
xchg
mov
fs
cmp
sbb
pop
sti
arpl
pop
aaa
int3
(bad)
movs
popf
stos
jle
adc
pop
or
sbb
hlt
adc
lods
imul
cli
pop
ret
popa
xor
scas
(bad)
int
push
jle
mov
xor
das
xchg
pop
push
adc
addr16
das
aad
xchg
fst
scas
xchg
mov
xor
int3
xchg
mov
lock
sahf
popf
jae
push
es
mov
and
or
sahf
ret
sub
mul
sbb
daa
aad
mul
pop
mov
cs
and
std
ds
(bad)
adc
pushf
loope
mov
jo
cli
(bad)
fdiv
shl
jle
retf
fnsave
(bad)
fsubr
in
lea
arpl
out
shl
rcr
retf
prefetch
popf
xor
adc
mov
pop
sbb
cmp
mov
or
sbb
outs
jmp
popf
(bad)
sbb
pop
or
adc
xlat
cmp
loopne
nop
fmulp
or
xchg
shl
outs
adc
sbb
jecxz
dec
push
icebp
cs
mov
icebp
std
add
pop
mov
xchg
jmp
sub
retf
jb
sbb
sbb
in
outs
adc
jle
xor
aad
pop
pop
dec
loope
shl
xchg
sub
(bad)
ins
sub
retf
stc
and
xor
cmps
jmp
inc
in
cmp
add
push
popf
mov
mov
mov
dec
lock
fadd
daa
mov
jecxz
imul
fnstsw
push
jbe
stc
pop
add
mov
adc
call
shl
jl
adc
fwait
inc
jae
test
cmp
push
dec
addr16
sbb
outs
xchg
fnstsw
inc
mov
repz
cmp
mov
fwait
(bad)
cmp
mov
imul
into
cmp
pop
fisubr
xchg
lds
push
sub
mov
pop
pushf
jecxz
fstp
in
das
stos
dec
pop
jb
les
jb
mov
or
shr
inc
adc
or
pop
cld
fld
pop
stc
and
xchg
pop
sub
stos
dec
xchg
hlt
sbb
sbb
dec
mov
push
sub
cmp
repz
mov
push
inc
data16
and
in
fwait
stos
mov
sub
adc
dec
sahf
out
xchg
push
pop
xchg
push
and
sbb
mov
add
jmp
mov
xor
in
adc
es
inc
test
(bad)
add
sub
jae
dec
in
push
fs
dec
les
xor
xchg
retf
addr16
test
cs
(bad)
das
les
call
jmp
repz
jle
in
iret
and
sub
(bad)
add
mov
or
repz
inc
and
sbb
cmps
pop
out
lods
jo
in
mov
cmp
es
cld
iret
xor
push
mov
or
push
xor
jmp
inc
out
jge
mov
pop
retf
daa
jne
inc
sbb
lahf
sti
icebp
mov
pop
pop
jne
ins
iret
pop
out
into
popa
retf
retf
push
nop
retf
sub
inc
mov
mov
xor
or
bound
out
or
xchg
sbb
shl
imul
mov
in
mul
lods
push
mov
test
push
fild
or
test
aaa
pop
mov
xchg
clc
inc
jmp
(bad)
xchg
ret
imul
jnp
and
ds
test
jne
or
stos
jb
ret
sub
adc
xor
jge
out
mov
icebp
push
jb
test
push
retf
adc
adc
outs
stos
jecxz
vmwrite
or
pop
rcr
jmp
je
mov
shl
mov
inc
mov
lods
retf
in
hlt
or
and
sbb
sbb
inc
cmp
cmps
mov
cli
or
add
mov
ins
mov
lahf
add
mov
xchg
cli
lods
or
dec
sahf
dec
es
fdiv
sub
mov
mov
lods
sub
lahf
data16
or
sti
or
hlt
lods
hlt
sub
in
sar
lea
add
leave
rcl
mov
jg
ret
fcomp
xchg
bound
sub
dec
loope
jle
imul
call
mov
adc
xor
cli
xchg
ins
stos
push
inc
fwait
shl
push
or
mov
iret
das
std
and
jne
jle
out
daa
jns
inc
mov
arpl
pushf
pop
rol
mov
mov
das
xchg
mov
push
sbb
cmp
scas
inc
popf
ja
inc
shr
enter
retf
xchg
mov
loope
rol
shr
mov
inc
sbb
dec
jo
xor
fsub
and
pop
leave
lea
in
aas
loope
js
jns
test
pop
or
pop
and
je
jbe
dec
rol
test
push
xchg
pop
test
leave
pop
adc
cwde
push
sti
push
movs
retf
xor
mov
sub
add
into
xchg
pushf
hlt
inc
jge
cmp
adc
int3
addr16
jecxz
out
adc
xchg
rcl
jl
or
and
sub
test
or
sub
mov
in
cmp
push
mov
cmp
inc
cmc
loopne
jno
xor
mov
dec
imul
jns
push
dec
test
dec
pop
in
push
fdivr
sub
sub
and
fldcw
mov
and
mov
test
int
mov
fbld
call
in
ret
std
jge
dec
(bad)
icebp
xchg
fwait
lock
adc
mov
jmp
pop
daa
jno
(bad)
aas
dec
xor
adc
and
pop
fistp
(bad)
ds
adc
rol
shl
ffree
or
pop
in
mov
push
cli
sbb
jnp
in
dec
ss
addr16
cdq
jbe
jno
out
ret
push
arpl
sti
ins
ins
mov
pop
sbb
add
adc
out
dec
push
imul
test
cmc
mov
inc
cli
inc
xchg
cdq
sbb
lds
test
and
stos
jae
adc
add
sti
mov
ds
call
ffreep
jb
ficom
pushf
out
inc
xchg
cmps
push
rcl
push
fisubr
xchg
fistp
push
pop
(bad)
fs
sahf
sub
push
push
mov
inc
aad
scas
pop
fmul
mov
jae
jg
es
mov
xchg
fst
aaa
xchg
jp
sbb
and
mov
stos
movs
mov
lds
sbb
jge
adc
into
int3
mov
pop
xchg
dec
stos
or
(bad)
std
mov
adc
mov
loop
inc
(bad)
sub
xor
push
mov
(bad)
retf
fdiv
push
(bad)
loope
jge
or
jne
push
cmc
add
sub
cli
clc
mov
iret
imul
mov
sti
adc
or
xchg
int3
fbstp
shl
mov
jne
jecxz
add
xchg
stos
jmp
(bad)
dec
mov
pop
adc
push
mov
push
je
out
inc
hlt
in
imul
add
push
dec
out
dec
dec
call
inc
cmp
lods
adc
mov
and
sub
(bad)
gs
or
shl
inc
(bad)
mov
and
stos
or
add
aas
js
or
fbstp
and
(bad)
push
mov
jg
pop
mov
dec
adc
ror
xchg
icebp
pusha
leave
jbe
and
xor
daa
sbb
push
mov
aad
add
cmpps
scas
sub
(bad)
cmp
aam
cmp
in
neg
loop
inc
scas
pop
ins
dec
inc
jo
xlat
les
popa
addr16
or
mov
shl
sahf
inc
and
ins
aad
int
jmp
test
mov
sub
aas
inc
cmc
add
mov
sbb
xchg
outs
sar
sbb
mov
sbb
add
jbe
pusha
xchg
punpckldq
jnp
bound
xchg
add
out
jne
(bad)
mov
(bad)
or
push
push
add
jnp
pop
mov
xchg
xchg
jbe
hlt
sub
ja
ds
aad
pop
inc
repz
adc
hlt
cmp
pop
fcmovnb
loope
call
push
or
retf
jnp
mov
popf
enter
mov
or
fisubr
sbb
ret
aam
test
lods
das
les
cmps
add
pop
sti
fs
pop
out
cmp
mov
jg
popf
cld
lods
sbb
xor
retf
jmp
sbb
ret
arpl
mov
outs
sbb
inc
sub
jp
push
lea
imul
dec
lods
push
addr16
dec
rol
movs
ins
jno
rcr
inc
sbb
inc
mov
fldcw
jle
aaa
mov
add
jmp
ja
imul
sub
pop
jp
inc
(bad)
jg
lods
arpl
xor
fwait
add
imul
fwait
lods
add
sbb
or
dec
inc
(bad)
je
mov
jg
inc
stc
lods
cmp
xchg
sub
pop
cmp
fs
mov
mov
pop
aaa
in
adc
enter
cmp
jno
add
stos
jg
adc
addr16
inc
(bad)
cld
and
xor
jae
mov
fwait
add
xchg
loop
xchg
cld
xor
xchg
stos
pop
sub
fdivr
or
outs
ja
repz
push
or
xchg
bnd
je
fdivr
and
imul
hlt
or
shl
std
pop
and
lods
test
cwde
ror
xor
mov
aad
in
or
xor
cmp
xchg
sar
inc
mov
enter
add
call
dec
dec
and
ret
cmps
jmp
(bad)
fcom
xchg
call
jmp
js
fild
adc
leave
jp
cmp
inc
lds
jp
test
xchg
mov
test
jl
jge
cmc
call
push
inc
ins
fild
retf
xor
lods
call
push
test
aas
jns
jns
push
sub
add
into
sbb
cli
xor
jge
mov
dec
add
adc
xchg
mov
jae
sbb
add
sti
push
sbb
push
shl
or
push
push
das
fadd
and
icebp
jecxz
fs
sbb
(bad)
into
adc
pop
jge
mov
int
mov
xchg
repnz
cwde
lods
shr
addr16
std
adc
pop
movs
pusha
xchg
jge
adc
mov
adc
loop
adc
dec
stc
inc
cmp
outs
push
das
ds
mov
mov
jns
dec
adc
push
and
cmp
in
rol
ds
shl
js
pop
sub
scas
xor
cmp
inc
and
cli
retf
pop
bound
aad
xor
pop
mov
(bad)
or
sahf
mov
cmps
mov
dec
sbb
push
stos
mov
and
mov
mov
imul
lds
fld
cmp
mov
jmp
fadd
dec
mov
push
add
inc
call
les
pop
sti
not
inc
cdq
outs
hlt
lods
add
nop
icebp
scas
dec
dec
ds
xor
adc
cmp
loopne
and
mov
mov
jo
mov
mov
scas
xchg
(bad)
call
add
enter
call
pop
bound
mov
es
jns
test
mov
addr16
fisub
cdq
nop
loope
stc
jmp
xchg
and
sub
ss
hlt
sub
aaa
fwait
jl
mov
push
clc
dec
or
lods
mov
mov
stos
sub
pop
fdivr
mov
sar
outs
aas
push
shl
je
inc
dec
jle
mov
mov
sti
and
in
fs
loopne
jp
popa
icebp
repz
pop
adc
push
sub
or
cmps
mov
add
cmp
call
sub
mov
push
fnstenv
xchg
push
jle
shl
dec
jl
cmp
jecxz
push
mov
(bad)
fbld
lock
pop
inc
nop
fwait
sbb
add
sub
jl
lea
loope
arpl
or
(bad)
xlat
cwde
xchg
(bad)
xchg
cs
movs
add
and
cwde
inc
(bad)
in
cmps
mov
mov
addr16
inc
mov
out
mov
enter
or
add
scas
into
ins
or
ins
jge
pop
dec
cmp
gs
mov
mov
sub
xchg
cmp
mov
or
adc
jne
jo
pop
(bad)
repz
xchg
repnz
adc
ret
ret
push
pop
movs
sahf
retf
lds
and
mov
mov
mov
push
mov
push
mov
retf
xchg
loope
inc
sub
in
bnd
pusha
adc
(bad)
call
or
outs
adc
sub
xor
add
mov
iret
jns
sub
or
mov
sar
mul
enter
jmp
xchg
icebp
push
push
add
cwde
test
jp
adc
xor
xchg
sahf
imul
and
mov
cmps
gs
sbb
mov
inc
inc
pop
cmp
(bad)
push
hlt
mov
dec
inc
or
push
imul
fcmovu
frstor
fistp
jno
bound
push
add
push
icebp
daa
les
loop
rcr
jnp
inc
lea
ins
popf
push
mov
lods
scas
sti
dec
jp
(bad)
mov
nop
or
call
sbb
nop
xchg
imul
nop
imul
test
add
cdq
mov
cli
psraw
mov
mov
jne
(bad)
call
inc
imul
mov
cld
and
jg
jecxz
sbb
push
jae
repnz
jle
sbb
into
or
test
shl
idiv
adc
data16
in
fwait
cwde
shl
jb
xchg
ins
shl
add
jmp
sbb
stos
dec
sub
inc
loopne
xor
jnp
pop
push
test
xchg
aas
sub
test
aaa
adc
pop
inc
xor
jne
mov
push
mov
repnz
scas
xlat
jae
enter
fnstsw
gs
stc
and
push
aaa
cdq
pop
push
cmps
sub
(bad)
fdiv
push
jge
adc
icebp
fbstp
nop
in
cwde
add
iret
pop
adc
xchg
sbb
out
mov
ja
mov
dec
add
call
out
sbb
repz
cli
mov
pop
push
adc
movs
fld
sub
pop
dec
pop
sbb
xor
jo
add
fmul
add
xor
(bad)
hlt
add
(bad)
push
clc
push
xchg
std
and
adc
lock
mov
ficomp
and
nop
sar
test
push
jl
(bad)
jbe
cmp
mov
fild
lea
retf
rol
sbb
mov
sbb
pop
not
nop
imul
xor
mov
(bad)
popa
das
sbb
rol
xor
jns
call
aas
popf
ss
push
test
std
fidiv
push
adc
shr
sbb
rcl
pop
popf
or
adc
cmp
arpl
(bad)
mov
pop
mov
xor
mul
push
pusha
add
cmp
aad
fsub
mov
ins
test
push
sbb
ds
out
push
sbb
clc
test
xchg
sub
inc
cli
mov
(bad)
mov
ds
push
xor
mov
vcmpps
scas
out
or
je
icebp
jns
pop
xor
jle
dec
pop
enter
add
jns
iret
int
pop
cmp
outs
dec
call
jp
push
and
test
adc
(bad)
(bad)
int
mov
fsubrp
in
(bad)
(bad)
mov
mov
stc
out
imul
jle
mov
jmp
adc
mov
dec
adc
sti
mov
int
mov
and
shl
sbb
add
mov
test
sub
je
mov
and
jge
inc
fwait
mov
ja
pushf
test
das
or
or
dec
or
lea
sub
sbb
cdq
test
xchg
loopne
push
jecxz
pop
or
shl
int
cmp
aaa
sbb
xchg
add
ja
fs
pop
adc
fucomip
sub
pop
cmp
iret
add
xor
fld
loope
repnz
ror
(bad)
data16
pop
jmp
pop
sbb
stos
mov
xor
(bad)
call
call
sbb
test
les
inc
jl
push
pop
cwde
jne
pop
push
cmp
and
mov
pop
jmp
jno
mov
ret
popa
or
pop
jnp
test
jbe
cs
or
das
(bad)
and
shl
mov
scas
push
test
dec
mov
or
mov
sbb
lods
adc
add
mov
sub
(bad)
fist
int3
dec
mov
push
sub
aam
ror
jg
mov
es
dec
retf
and
scas
fsub
ja
xor
mov
stos
and
adc
adc
add
or
lods
loop
xor
adc
stc
pop
test
icebp
js
int3
repnz
mov
xor
xor
out
sbb
test
mov
ja
scas
(bad)
fisubr
out
daa
adc
sub
sub
xchg
mov
dec
out
je
shr
push
out
adc
cld
stc
idiv
add
loopne
sbb
pop
lock
mov
fcmovnb
add
pop
adc
hlt
test
cs
arpl
aas
and
and
add
out
out
aad
push
mov
rcl
retf
jmp
mov
sbb
sub
leave
fwait
jns
xchg
xchg
aaa
or
lea
cld
mov
(bad)
in
mov
lds
js
iret
dec
je
jmp
cwde
cdq
addr16
pop
push
in
ins
fist
scas
ins
xor
adc
lods
daa
mov
cld
inc
jne
test
mov
shl
test
sub
push
jle
push
les
mov
cmp
add
cld
jmp
push
cmp
push
cmps
mov
cmps
je
test
pop
add
push
into
fild
imul
ins
test
xor
add
jbe
xchg
inc
xchg
cmc
iret
pop
mov
fcmovnb
xor
ffree
dec
inc
mov
movs
ja
lock
aaa
push
xchg
xor
inc
outs
push
pop
inc
fdivr
jp
mov
pushf
mov
mov
adc
pop
adc
cmps
dec
movs
loopne
aam
mov
cdq
fcom
ja
sub
pop
mov
addr16
inc
aas
jo
and
mov
dec
gs
sbb
loop
jmp
(bad)
enter
rcl
ret
div
mov
cld
adc
test
inc
or
iret
push
mov
adc
fmulp
mov
cmps
movs
test
ds
repz
scas
add
adc
or
mov
mov
ficomp
std
push
dec
and
std
rcr
mov
inc
sbb
sbb
jle
aas
scas
xchg
jl
leave
mov
xchg
and
push
push
mov
das
js
stc
outs
std
maxps
dec
xchg
mov
mov
loopne
xchg
jle
cmc
in
sbb
push
fmul
sub
das
sahf
cld
push
lods
jmp
jle
(bad)
jecxz
es
push
mov
push
retf
pop
test
xchg
sub
xor
in
pop
dec
fisubr
push
mov
cmps
ins
in
and
js
sub
loope
jle
jae
dec
cmp
dec
mov
mov
push
das
outs
std
fmul
pushf
mov
xchg
es
(bad)
mov
addr16
(bad)
scas
mov
mov
bound
fbstp
mov
lods
sub
out
aas
xchg
sbb
xchg
push
dec
(bad)
arpl
sub
xor
ret
jg
ins
cmp
inc
cmc
mov
test
push
mov
mov
pop
push
push
dec
out
es
jl
fdiv
mov
fiadd
pop
adc
jl
add
lods
ror
fcomip
out
imul
pusha
dec
inc
rcl
pop
mov
or
les
sar
mov
ds
cdq
adc
jne
cdq
dec
fdivr
stos
xor
xchg
mov
ins
xor
aaa
shr
cmc
push
xor
add
sahf
lds
pop
mov
mov
adc
inc
popf
or
nop
pop
data16
cmovo
mov
xchg
retf
sbb
jmp
mov
jl
add
mov
cwde
imul
cmp
mov
push
mov
out
jo
push
cmp
push
dec
dec
into
mov
xchg
outs
cmp
int
fld
je
imul
mov
jecxz
mov
sahf
xor
inc
(bad)
test
fucom
mov
pop
mov
mov
and
xor
jg
call
jg
or
mov
push
jo
jnp
jge
in
bound
or
push
int
int
xor
push
in
pop
popf
fwait
add
das
push
jle
adc
cmp
xor
std
lods
loopne
add
ds
out
inc
es
stos
jmp
cwde
cmp
fisttp
js
pop
adc
lods
lods
popa
lods
stos
cmp
fwait
imul
(bad)
in
jp
sub
xchg
sbb
cmp
stos
jne
jbe
xchg
mov
outs
(bad)
arpl
or
or
mul
add
push
jo
add
inc
out
inc
shr
cmp
inc
pop
jle
sbb
fmul
imul
in
fstp
and
push
in
or
or
adc
inc
(bad)
shl
pop
adc
(bad)
es
daa
sbb
and
out
outs
dec
inc
stos
and
jl
clc
mov
cli
dec
rcl
xor
enter
and
mov
xor
push
pop
mov
jae
hlt
arpl
loope
add
or
sar
mov
pop
cmps
or
add
loop
in
rcr
mov
shr
ret
movs
push
jge
aaa
pop
int
jle
add
mov
rcr
jecxz
xchg
call
test
leave
cmps
jo
adc
xchg
outs
icebp
sbb
cmps
ja
stos
scas
jmp
push
ds
push
outs
mov
push
cmp
mov
xchg
lock
mov
loope
lods
mov
adc
or
es
and
add
int
mov
pusha
out
lds
mov
out
cmps
daa
les
shr
add
xchg
or
xor
stos
imul
pop
lock
(bad)
loope
ror
out
fs
xlat
inc
or
outs
jg
xor
mov
jmp
(bad)
repz
xor
sbb
fwait
(bad)
sbb
aam
imul
shl
das
pop
ror
ins
mov
imul
mov
mov
add
or
inc
test
inc
mov
int3
aad
mov
and
pop
in
fcomp
or
adc
clc
sub
adc
xchg
cwde
jmp
mov
dec
jecxz
out
push
(bad)
fdiv
jne
adc
not
push
sub
nop
push
push
jmp
int3
pop
and
lods
repnz
int
cwde
pop
outs
shr
leave
stos
mov
ins
out
xlat
xchg
fstp
jp
adc
add
add
cwde
jbe
mov
arpl
jmp
mov
lods
stos
stos
je
(bad)
mov
mov
ja
je
and
iret
jmp
in
lahf
retf
and
sub
fidiv
xor
sub
mov
xor
ds
repnz
imul
or
pop
test
inc
in
(bad)
mov
pusha
arpl
aaa
cmc
mov
cmp
mov
push
inc
cmovg
pop
mov
shl
xchg
stc
mov
xor
and
lds
fistp
popa
add
or
mov
mov
add
aad
loopne
jb
iret
xor
sub
pop
inc
sub
inc
jo
mov
arpl
or
(bad)
mov
fnstsw
retf
shl
xchg
dec
push
shl
mov
loope
test
push
idiv
cmp
xchg
nop
int3
fldcw
repz
sub
pop
pop
xor
mov
mov
sub
adc
addr16
or
xlat
sbb
jmp
dec
repnz
and
mov
dec
test
imul
mov
push
mov
aad
xchg
sbb
test
outs
fcmovnb
out
or
adc
push
lds
dec
inc
scas
mov
retf
dec
aaa
fbstp
pop
jno
or
arpl
nop
xchg
pop
fdivr
scas
mov
loopne
rcl
jb
sub
out
cwde
(bad)
jl
sub
fimul
xor
xor
mov
(bad)
jmp
movs
sbb
xchg
inc
cwde
cld
fcmovb
movs
add
push
push
sbb
gs
mov
call
test
ret
iret
rcl
mov
sub
(bad)
icebp
or
gs
adc
in
mov
in
cmp
inc
(bad)
sti
mov
mov
cmp
movd
imul
(bad)
outs
xlat
xchg
out
ret
jg
dec
mov
xchg
clc
std
lock
mov
push
cmp
lahf
aaa
mov
push
es
xor
retf
iret
sub
push
jl
pop
mov
pop
scas
jge
repz
inc
mov
repz
xor
push
pop
push
sub
ja
ficomp
mov
das
call
mov
pop
pop
daa
and
cld
add
fucom
cmp
into
mov
lods
cli
(bad)
stos
mov
mov
nop
cwde
movs
rol
mov
sub
pop
inc
out
sub
mov
push
cmp
jg
add
test
or
clc
pop
push
adc
xchg
or
sti
mov
push
sar
ds
adc
push
lock
push
cmp
jl
loope
dec
iret
fs
leave
in
dec
les
test
callw
push
out
xchg
jle
mov
ret
xor
mov
and
movs
sbb
rol
xchg
movs
neg
cli
data16
loop
es
imul
das
mov
add
push
ins
stos
pop
push
pop
fsubp
movs
sbb
push
data16
jo
sbb
in
aam
retf
imul
mov
cwde
push
jns
jp
inc
add
shr
shl
stos
fadd
dec
pop
and
addr16
pop
sbb
inc
xor
push
add
lock
into
(bad)
movs
icebp
sbb
inc
js
aam
mov
mov
(bad)
mov
and
aas
nop
mov
xor
mov
mov
sbb
ja
imul
mov
cmp
and
pop
and
(bad)
sti
imul
add
cmc
add
xlat
inc
xor
pop
or
xchg
and
les
loopne
cmp
int
imul
stc
mov
in
cld
scas
outs
movs
jg
mov
gs
mov
enter
xlat
neg
mov
add
push
shl
and
sbb
inc
rcl
nop
fistp
ins
inc
and
cmc
cli
ja
adc
push
lahf
mov
and
add
pop
stos
test
push
adc
rcr
and
and
(bad)
scas
mov
movs
test
shl
mov
adc
jge
lods
fsubr
retf
popa
pop
out
ja
(bad)
fadd
shr
cmp
cmp
inc
mov
pop
repz
gs
scas
push
jb
(bad)
mov
in
(bad)
(bad)
enter
fdiv
cli
shl
cmp
add
xchg
gs
jg
xchg
push
popa
ret
shr
clc
cmp
stos
fwait
xor
jmp
bound
cmp
test
fnstsw
mov
aam
daa
inc
scas
ja
dec
in
mov
das
pop
mov
push
jbe
jmp
mov
add
pop
pop
ins
outs
pop
and
gs
adc
movs
pop
mov
dec
push
call
imul
xchg
jg
rep
mov
movs
xchg
push
push
enter
cmp
pop
imul
idiv
shl
adc
loop
xor
aaa
retf
mov
ins
xchg
js
mov
pop
pop
jmp
dec
inc
push
out
icebp
mov
(bad)
fisttp
movs
stos
xchg
xor
xor
or
xor
sub
enter
ds
aas
lock
inc
ror
mov
mov
mov
inc
cmp
inc
enter
jae
bound
stos
and
pop
inc
mov
fidivr
retf
test
push
xchg
in
nop
ficom
js
mov
loop
movs
les
sub
xor
xor
push
jbe
pusha
mov
xor
or
mov
popa
inc
pop
add
lods
dec
(bad)
fisttp
pop
xor
xchg
sbb
icebp
dec
mov
inc
dec
lods
pop
out
(bad)
xor
gs
xlat
test
int
stos
adc
add
fcomp
call
dec
push
test
movs
xchg
cmp
or
ins
lea
sub
fisub
int3
or
out
dec
cmps
(bad)
(bad)
jb
dec
shl
adc
push
cmp
or
inc
cmp
sahf
je
jle
out
shl
scas
jne
inc
int
xor
fdiv
push
adc
test
cdq
sub
mov
pop
jl
xchg
sbb
dec
cmps
ret
sub
xor
xlat
push
and
in
or
xor
int3
fnsave
(bad)
or
shr
mov
rol
sub
xor
call
adc
int
leave
pop
sar
repnz
enter
push
mov
(bad)
rol
xor
dec
js
dec
(bad)
fdiv
mov
in
cdq
jge
push
add
pop
fadd
je
lds
in
mov
test
leave
cmp
mov
outs
retf
dec
rcr
pushf
jo
lods
sub
clc
cmp
cld
push
imul
xor
add
es
enter
psubsw
pop
rol
sbb
retf
jns
jno
jle
xchg
leave
xor
imul
jnp
push
cmp
arpl
shl
adc
aas
stos
xchg
cli
arpl
add
sub
or
xchg
sbb
movs
add
push
mov
push
rcr
stos
addr16
pop
cli
repnz
push
loop
mov
and
ret
fmul
jl
fld
and
pop
(bad)
inc
ins
pushf
inc
pop
jl
jae
dec
sub
int3
fimul
movs
sub
mov
cmp
push
or
(bad)
jmp
fprem1
mov
repnz
mov
out
adc
and
sbb
cmp
ret
jl
fimul
mov
sbb
icebp
int3
ss
sub
retf
shr
mov
push
shl
sbb
les
ja
jge
pusha
sub
inc
mov
push
imul
les
dec
rcr
sub
push
push
fdivr
sub
loope
outs
jmp
jns
add
out
or
fsubr
arpl
scas
push
pop
popa
add
loope
and
pop
shl
movs
xchg
jecxz
adc
xchg
and
jge
jmp
push
mov
add
fisttp
stos
dec
(bad)
adc
jle
jns
jp
addr16
add
stc
push
push
neg
and
data16
inc
fbld
inc
sub
inc
das
and
loop
scas
out
xor
jnp
jb
mov
aaa
or
mov
lods
(bad)
js
jmp
test
bound
push
cmp
xchg
imul
cdq
gs
xor
sbb
clc
in
test
cmp
add
push
or
test
push
push
mov
mov
test
int
jae
dec
or
sbb
sub
mov
test
call
call
pusha
gs
lahf
std
add
jno
pop
and
(bad)
xchg
imul
ds
fs
pusha
xor
fimul
mov
dec
mov
imul
add
lods
scas
pop
pop
or
call
xor
push
lock
mov
stos
icebp
adc
shr
dec
cmc
inc
outs
inc
push
dec
jae
aam
and
adc
xchg
and
cmp
ds
push
les
not
xchg
or
mov
xchg
fidivr
xchg
and
xchg
scas
jp
cmp
sbb
call
mov
xchg
mov
call
adc
out
add
xlat
mov
or
loopne
fadd
aas
jbe
loope
imul
bound
call
cwde
popf
adc
pop
pushf
in
pusha
add
sub
jge
jae
ret
add
inc
shl
mov
inc
or
out
(bad)
popa
jmp
int
lods
xor
in
aas
rol
push
cmp
aam
aas
cmp
or
mov
sahf
pop
inc
sbb
adc
imul
shl
data16
push
push
test
or
cmp
iret
lds
out
inc
xchg
jb
cmp
ret
jns
stos
mov
sbb
or
jbe
jns
mov
and
or
jmp
push
int3
bound
inc
push
cmps
jae
scas
in
xchg
push
js
inc
aam
aas
dec
adc
push
leave
(bad)
fcom
add
cmp
sub
test
jle
mov
jmp
pop
dec
out
sub
popa
test
dec
jle
retf
test
dec
adc
pxor
fstp
fucom
arpl
jmp
cmp
or
xchg
adc
retf
cli
test
call
pop
outs
fsubr
adc
push
lods
mov
lds
(bad)
mov
lea
stc
xor
iret
je
ds
cmp
mov
xor
inc
dec
add
and
cmp
loope
out
out
loopne
aad
add
(bad)
fst
xchg
push
add
or
scas
stos
fwait
dec
pop
sbb
xor
sub
mov
xchg
rcr
fnstcw
dec
lea
xchg
gs
data16
jae
into
mov
stos
pop
adc
outs
jmp
pop
push
enter
jl
mov
push
cld
and
into
push
xor
pop
out
xchg
pop
sub
dec
and
sub
xor
cmp
xchg
cmp
sbb
imul
xor
jmp
mov
push
(bad)
or
inc
das
dec
pop
enter
(bad)
jecxz
cmp
jb
in
iret
jg
stos
pop
rcr
inc
ja
fscale
div
pop
sub
mov
ins
xor
jns
jo
jmp
in
ror
xchg
push
mov
movs
dec
xor
scas
cmp
mov
dec
and
loopne
hlt
lods
je
or
mov
inc
mov
xor
inc
ror
fist
mov
mov
lahf
fwait
(bad)
in
in
jne
add
addr16
loop
outs
sbb
cld
inc
imul
sbb
pop
movs
push
sbb
xlat
push
ins
cmp
mov
stc
ret
and
call
in
push
movs
shl
stos
mov
xchg
cmps
hlt
push
inc
sub
(bad)
mov
fs
adc
mov
add
cmps
pop
jbe
in
push
sbb
or
idiv
adc
das
push
add
cmp
pop
xor
inc
pop
pusha
jne
pop
icebp
js
lahf
js
fs
push
push
es
inc
xor
pop
mov
push
lock
jns
mov
mov
shr
ja
xor
(bad)
sbb
sbb
add
sbb
test
stos
je
mov
cwde
je
xchg
ja
dec
cwde
push
sbb
mov
jp
sahf
sbb
or
call
mov
in
sbb
lds
aam
loopne
mov
aas
mov
fisubr
push
push
push
and
call
int
test
xor
les
dec
xor
inc
or
(bad)
pop
adc
(bad)
das
hlt
mov
aas
mov
xor
repnz
push
pop
xchg
aam
rol
mov
fldenv
and
popa
in
enter
or
mov
sub
cld
ret
out
pop
mov
cwde
pop
mov
inc
out
push
pusha
leave
ins
mov
sub
jmp
jns
outs
adc
push
shr
call
int
les
jno
ss
jecxz
aad
sbb
sub
test
loope
and
and
daa
das
push
cwde
das
test
fsubrp
dec
adc
fwait
es
sub
push
lds
ror
inc
daa
xor
fsub
mov
inc
mov
push
movs
movs
add
cmp
push
mov
(bad)
sub
mov
cmp
cmp
mov
mov
fimul
sub
add
adc
jae
cmp
inc
clc
fsub
mov
loopne
cdq
sub
test
(bad)
retf
sysenter
pop
je
mov
or
and
fmul
loopne
loopne
mov
mov
push
movs
cdq
and
pop
adc
shl
sub
gs
add
mov
cmps
inc
ror
jns
lahf
lock
or
ins
sub
add
movs
adc
pusha
ins
sub
dec
mov
stos
lods
aas
icebp
icebp
cmc
enter
bound
xor
dec
repnz
mov
sbb
or
fdiv
mov
pop
loop
rcl
sbb
aad
in
sub
jb
sar
xor
mov
rol
jl
xor
mov
ror
sbb
pop
mov
out
add
jns
clc
mov
mov
bound
mov
dec
mov
sar
sub
pop
jnp
pushf
test
inc
ror
pop
sub
mov
loop
mov
jmp
add
adc
call
push
pop
push
rcl
lds
lahf
retf
dec
push
or
and
push
in
jbe
and
adc
jmp
or
in
push
mov
cmp
lahf
adc
rol
fcomi
jbe
xor
ins
daa
and
push
mov
loope
sti
push
xchg
push
lods
cmp
mov
xchg
pop
pop
or
mov
adc
leave
aam
out
(bad)
push
retf
add
fsub
push
and
or
inc
aad
imul
adc
add
aad
xor
xor
pop
test
mov
mov
and
add
add
or
add
mov
mov
dec
xchg
sbb
call
inc
bound
sbb
mov
mov
imul
and
push
push
jp
pushw
dec
fcomp
mov
jge
es
fdivr
inc
pop
and
push
add
mov
gs
xchg
stos
in
pop
xchg
dec
icebp
hlt
dec
pop
pop
out
(bad)
in
jmp
mov
jecxz
mov
dec
cmc
in
pop
test
repnz
push
fs
test
outs
add
cmp
scas
(bad)
shl
jae
(bad)
jmp
or
hlt
in
add
jle
fwait
adc
xchg
sbb
jmp
dec
jmp
xchg
shr
out
js
fst
stos
mul
lods
test
rcr
cmp
lds
cmps
shl
cmp
fstp
test
sbb
retf
js
sahf
jmp
mov
cwde
jns
hlt
mov
sbb
mov
movs
pop
inc
in
imul
mov
xor
repz
cmp
ret
lods
and
cmps
mov
iret
push
bound
xchg
push
popf
sbb
cwde
dec
jae
jno
daa
gs
mov
add
aas
dec
(bad)
hlt
xor
push
stos
add
adc
mov
jae
dec
add
and
hlt
js
push
stos
cdq
xor
xchg
mov
fisttp
mov
retf
ror
or
dec
mov
jl
mov
xor
add
ret
movs
sbb
fisub
pushf
fst
push
mov
neg
and
mov
in
sub
in
sub
in
hlt
sub
mov
sub
mov
mov
nop
mov
sahf
add
loop
cmp
bound
ror
add
int3
loopne
mov
inc
xor
pop
mov
xchg
push
cmp
add
retf
test
mov
sbb
scas
xor
sub
mov
and
sub
xor
shl
xchg
bswap
xor
gs
fbld
mov
int3
xor
push
and
add
stos
test
push
mov
(bad)
sbb
nop
pop
jge
loopne
stos
cdq
jge
stos
push
(bad)
(bad)
and
call
or
cmp
nop
cmps
inc
pop
sub
out
add
push
xlat
jae
je
lock
rcl
inc
mov
or
leave
retf
out
je
or
or
mov
(bad)
pop
sbb
stos
pop
sub
test
sub
mov
inc
shl
push
inc
aad
mov
sbb
xor
adc
inc
xchg
push
pop
push
jp
ins
mov
xchg
pop
movs
das
rcl
movs
push
out
mov
mov
push
push
sub
pop
movs
bound
cmps
mov
fistp
shl
std
je
mov
cmp
push
(bad)
add
pop
int3
mov
pop
repz
fsubrp
adc
mov
cmps
lods
jae
jl
sahf
and
icebp
loope
mov
jne
jnp
jbe
test
pop
sahf
(bad)
or
xchg
xlat
xchg
dec
jb
popa
add
aaa
xchg
rcr
ins
loopne
loopne
sub
mov
mov
inc
mov
pushf
fist
sar
ds
mov
mov
push
mov
mov
stos
mov
cli
or
mov
jns
lock
movs
aam
sub
push
sbb
and
dec
clc
aas
addr16
daa
int
jg
mov
push
dec
jecxz
shl
outs
mov
cmp
or
pushf
jne
mov
mov
sub
dec
sahf
pop
xchg
xor
add
test
add
sbb
xchg
inc
das
and
iret
xchg
call
add
sub
frstor
lock
jg
fbld
cmp
push
dec
mov
je
adc
push
fs
push
fs
dec
icebp
cld
xchg
movs
sahf
dec
into
popa
loope
jne
into
mov
lahf
jp
and
outs
aas
cld
mov
or
(bad)
mov
idiv
push
pop
xchg
test
push
cmps
pop
add
lods
push
fdiv
mov
(bad)
xchg
dec
enter
sahf
mov
adc
cmp
int
mov
add
cmps
cdq
xchg
jae
shr
call
fs
xchg
(bad)
jle
adc
or
or
sar
xor
adc
add
add
push
push
lock
sbb
pop
push
jo
int3
fwait
push
popa
repz
add
push
test
ins
scas
mov
(bad)
cmp
inc
dec
vcmpsd
call
fadd
enter
and
add
aaa
mov
outs
cmc
pushf
loope
clc
mov
add
inc
add
xchg
(bad)
sub
outs
sbb
aad
lea
in
mov
add
add
push
mov
or
xchg
fwait
pop
(bad)
cmps
imul
xchg
dec
shl
pop
out
pusha
sub
ins
mov
push
push
aas
jg
icebp
sub
jae
int3
pusha
xor
call
adc
mov
clc
out
add
dec
mov
fucomp
out
idiv
das
pop
sbb
add
cwde
xchg
repz
mov
ins
jo
sub
shl
push
aam
add
adc
rcr
(bad)
xchg
cmps
daa
lods
idiv
rcr
xchg
es
ror
sar
jp
pushf
pop
repnz
mov
or
add
jmp
cmps
or
adc
aaa
sti
mov
xlat
push
in
inc
es
and
jmp
xor
shl
dec
push
cmp
rcr
xor
pop
clc
mov
mov
sbb
xor
mov
jae
cld
jne
xor
and
cmc
pushf
cli
cdq
cmp
push
daa
neg
inc
cs
cmp
pop
push
pusha
outs
add
in
fwait
cmp
add
cmp
(bad)
shl
push
jne
std
aaa
mov
mov
lods
leave
test
mov
sub
pop
dec
pop
stos
mov
fld
ja
adc
nop
pop
dec
mov
mov
lods
(bad)
mov
imul
jnp
rol
cmc
xchg
xchg
(bad)
or
xor
or
pusha
add
rol
movs
sub
jmp
push
xchg
test
pop
std
cmp
push
and
and
fist
(bad)
pop
fstp
imul
fs
or
clc
and
outs
mov
xchg
enter
cmp
or
sub
dec
add
jl
repz
dec
jle
mov
or
jae
mov
scas
xor
xor
jno
fstp
adc
sub
leave
pushf
pop
push
inc
aam
push
mov
jl
xchg
test
inc
cld
add
dec
sub
xor
mov
jge
arpl
enter
push
pop
mov
xchg
pop
and
xchg
and
js
adc
jl
je
dec
fs
pop
add
test
pop
movs
push
ins
push
cmp
in
xchg
xchg
sbb
clc
retf
(bad)
ins
call
rcl
jge
movs
pop
movs
xor
mov
xlat
add
retf
mov
xor
shr
loop
sti
and
cmps
ficomp
pop
push
xchg
ret
scas
pop
pusha
mov
mov
and
adc
jl
popf
pushf
in
mov
dec
lods
xchg
loopne
and
or
es
adc
fst
push
data16
cli
cmp
or
in
mov
xchg
xor
ret
psubd
dec
xor
popa
jecxz
pop
and
aas
mov
lock
adc
ja
adc
xor
stos
xchg
iret
out
ja
and
test
cld
inc
mov
xor
mov
fisubr
(bad)
xchg
ror
or
out
sbb
xor
dec
mov
sti
sti
mov
push
jae
leave
dec
in
mov
dec
pop
cwde
push
xor
mov
mov
es
jl
dec
out
loopne
aad
stc
call
ja
mov
pushf
ins
inc
(bad)
fucom
inc
mov
dec
pusha
fnop
dec
jno
dec
daa
adc
stc
test
lds
xchg
cmp
out
mov
sub
ret
(bad)
jl
loop
mov
loop
aas
add
pop
add
push
push
lds
les
mov
push
stos
fwait
ins
stos
inc
outs
push
imul
push
test
dec
mov
outs
sbb
push
inc
and
xor
xchg
pop
cmp
stos
jb
ins
inc
pop
cmp
sbb
(bad)
sti
or
sbb
add
pop
rcr
mov
or
mov
outs
dec
jae
pusha
sbb
mov
pusha
xor
mov
out
xchg
mov
fwait
inc
cmps
mov
dec
jmp
push
bound
push
retf
and
and
mov
adc
sub
mov
js
lods
push
jp
mov
push
adc
cs
imul
ror
mov
in
lea
push
cmps
dec
and
mov
js
adc
pusha
xchg
xchg
fild
call
shr
add
call
data16
and
and
in
xor
inc
pop
mov
jo
fsub
(bad)
in
xchg
imul
pop
and
jbe
lock
leave
xor
ins
repnz
(bad)
scas
inc
or
std
cmp
in
test
xor
xchg
mov
dec
add
pushfw
xchg
mov
mov
or
inc
bound
aad
shl
pushf
or
imul
dec
or
mov
sub
fmul
jbe
loop
sub
mov
push
(bad)
ins
xchg
cmps
daa
(bad)
movs
sbb
jnp
xchg
or
shr
fs
ins
push
shl
jno
mov
mov
mov
dec
lea
and
fiadd
dec
lock
or
sub
cmps
popa
gs
mul
aad
fld
cmp
out
add
pop
popa
stos
xor
es
or
dec
push
jp
fdiv
push
js
dec
aas
dec
jae
iret
adc
sahf
out
pop
pop
out
push
cdq
fsubr
mov
ins
mov
push
mov
xor
js
cli
getsec
cmp
push
mov
mov
icebp
sbb
xchg
mov
arpl
push
rol
mov
inc
jp
popa
fcomp
or
loopne
mov
pop
icebp
jns
movs
jbe
jae
jae
and
test
mov
cmp
adc
in
cmp
xchg
out
cmc
xor
(bad)
into
aad
movs
sub
cmp
loope
sbb
jge
les
(bad)
push
out
sub
gs
popa
cmp
mov
push
or
nop
in
adc
and
imul
jno
test
and
shl
push
sub
adc
ins
ret
ds
add
and
push
xlat
mov
retf
dec
mov
inc
and
into
dec
cmp
test
popf
push
xlat
sahf
and
sub
int
jg
sbb
cmc
mov
int3
addr16
or
mov
ins
or
hlt
pop
pusha
std
add
fdivr
pop
pop
aaa
outs
pop
inc
sbb
arpl
sub
pusha
pop
stc
fstp
mov
adc
sbb
lock
pop
mov
jmp
cmps
icebp
mov
cmps
cwde
sar
ja
xchg
mov
dec
(bad)
pop
and
fs
push
xchg
imul
(bad)
(bad)
jp
add
(bad)
pop
loopne
(bad)
xor
stos
aas
push
inc
xchg
scas
out
sub
jle
xlat
mov
data16
outs
in
iret
xchg
es
popf
imul
inc
sbb
rcr
call
inc
fimul
mov
sub
add
daa
sbb
mov
(bad)
out
shl
lea
ins
inc
sysenter
out
int
add
mov
or
ror
mov
xchg
cmps
mov
outs
dec
jmp
les
(bad)
xor
repnz
es
aaa
test
mov
pop
in
push
push
jns
dec
cli
test
jg
sbb
repz
jmp
out
inc
xchg
dec
(bad)
cmps
call
cmp
addr16
stos
imul
dec
pop
stc
dec
adc
addr16
xor
xchg
add
retf
push
icebp
ds
dec
movs
cwde
int
enter
xor
push
mov
and
call
int
shl
data16
fnstenv
clc
fmul
jge
or
retf
mov
retf
push
jae
adc
fst
xor
cs
ds
pop
mov
xlat
fist
push
int
mov
inc
or
xchg
test
or
imul
jmpw
jne
out
movs
or
xchg
or
mov
add
mov
test
out
mov
(bad)
push
rcr
dec
bound
lea
lds
fwait
mov
ja
ins
xchg
lods
or
cmp
or
mov
out
fstp
jo
cs
dec
bound
out
jmp
cs
or
cmp
and
retf
cmps
inc
pop
fwait
mov
inc
cwde
mov
lea
outs
adc
dec
pop
cmp
jge
add
mov
lds
and
or
or
dec
or
sub
in
pop
int
jae
(bad)
pop
ins
loop
cld
rol
pop
push
cli
push
add
or
mov
adc
mov
or
jmp
xchg
push
clc
aaa
pop
inc
fsubr
cmc
push
ficomp
inc
leave
add
aam
sbb
hlt
test
js
adc
neg
jle
sbb
aad
imul
ins
ss
mov
(bad)
in
out
jl
jp
inc
xchg
pushf
popf
inc
or
addr16
sbb
fprem1
push
mov
ss
xchg
sahf
test
call
int
xchg
push
cwde
ins
inc
mov
pop
jae
shr
or
sub
ds
scas
and
cmp
(bad)
jl
repz
cmps
inc
dec
test
sbb
lea
mov
jno
retf
rcr
add
push
jmp
(bad)
cmp
retf
inc
lea
xchg
pop
nop
test
mov
push
sbb
mov
add
push
adc
cwde
push
sub
dec
inc
push
(bad)
dec
fnstcw
push
mov
mov
sub
jmp
jnp
inc
add
cmp
sub
outs
arpl
sbb
pop
fs
ins
lods
and
push
pop
lahf
lods
retf
test
jae
push
or
mov
push
xchg
mov
std
jmp
jp
jnp
sub
(bad)
(bad)
xchg
lods
lods
mov
inc
xor
jmp
push
retf
sbb
mov
jecxz
mov
dec
pushf
outs
into
aad
scas
adc
push
dec
outs
jns
dec
mov
loope
xchg
jne
out
pop
mul
je
loop
sahf
cmp
mov
bound
sahf
and
sub
test
out
lds
mov
pop
sbb
cmps
add
cli
cmp
not
mov
call
(bad)
retf
ds
test
enter
pop
add
xor
data16
inc
cmp
xchg
test
jno
nop
clc
and
loope
outs
push
adc
xchg
aaa
push
pop
sti
xchg
xor
out
fist
cs
in
xor
imul
jb
mov
add
int
pusha
add
bound
rol
sub
cwde
es
inc
mov
jbe
movs
fld
jp
clc
push
loopne
jl
sub
rcl
and
xchg
mov
imul
sbb
mov
rcl
shr
push
dec
dec
mov
jnp
cmp
mov
cmps
inc
movs
repz
jecxz
aam
add
repz
mov
jge
pop
pop
daa
mov
xchg
jmp
mov
stos
cmc
stc
add
hlt
xchg
mov
push
outs
retf
jl
sub
adc
mov
adc
add
dec
pop
not
mov
sub
out
lea
sub
mov
cmc
in
jecxz
das
and
mov
lea
(bad)
dec
mov
fstp
fild
retf
lahf
fiadd
(bad)
ss
dec
jp
inc
retf
mov
and
pop
push
pop
cs
mov
fadd
out
mov
and
shl
mov
(bad)
mov
mov
sub
push
adc
imul
add
dec
(bad)
mov
aaa
shr
mov
ss
pop
sbb
dec
cs
cmp
inc
pop
iret
hlt
mov
scas
xchg
fistp
adc
fistp
test
ror
pop
mov
add
int3
mov
cmps
dec
jns
sub
pop
loopne
nop
or
fs
inc
out
movs
fcomi
mov
(bad)
mov
test
stos
sbb
(bad)
and
pcmpeqb
cdq
push
into
clc
cld
add
push
and
outs
popa
push
not
imul
dec
(bad)
pusha
in
cmp
jge
fnstcw
test
cmp
fdiv
cli
fdivr
mov
(bad)
push
cmp
je
or
sub
(bad)
icebp
pusha
mov
jecxz
aaa
and
lahf
cmp
push
mov
es
pop
mov
je
jae
test
js
inc
sbb
std
leave
movs
push
ror
ins
adc
repz
adc
sar
jno
xchg
lock
ss
or
movs
scas
xchg
jne
inc
inc
mov
js
call
arpl
mov
fisub
stos
and
dec
mul
addr16
ret
cmp
pop
ja
data16
lods
ret
push
iret
ficom
add
xor
icebp
mov
fs
lahf
jne
push
mov
scas
xchg
(bad)
pop
repnz
rcr
jl
xor
pop
cld
setb
sub
hlt
mov
adc
std
movs
js
jnp
mov
ret
xor
lock
mov
pop
xchg
in
push
inc
or
pop
xchg
jno
test
test
push
sbb
jo
and
sub
sub
lods
into
stos
pop
(bad)
xchg
aas
push
adc
xor
ss
push
pop
lds
popf
xchg
push
inc
adc
cmp
int
fld
mov
icebp
cmp
mov
pusha
jg
mov
push
adc
lods
out
imul
pop
add
(bad)
fwait
sbb
mov
iret
xchg
call
and
sbb
jmp
mov
adc
sub
sti
cwde
push
mov
sbb
inc
psubw
mov
inc
or
loopne
loope
idiv
(bad)
ins
push
dec
nop
inc
sub
(bad)
mov
je
retf
div
in
fcom
(bad)
cld
pop
mul
imul
das
and
jg
and
test
dec
mov
fcom
mov
outs
jecxz
push
dec
outs
mov
pop
out
inc
aad
mov
ror
mov
add
jmp
sahf
nop
mov
inc
(bad)
cmps
lods
cwde
shl
mov
call
rol
mov
and
pushf
sbb
mov
sbb
mov
adc
ja
mov
call
push
mov
shr
rcr
mov
stc
pop
(bad)
xor
push
dec
aaa
sahf
push
icebp
mov
cdq
cmp
dec
leave
movs
imul
and
jmp
test
test
fcom
inc
pop
arpl
sar
cmp
inc
fiadd
lods
aam
push
fucomp
jl
scas
popf
addr16
shr
pop
outs
jb
pop
sbb
fwait
inc
mov
out
push
js
out
ret
mov
xchg
push
mov
pop
add
movs
add
jae
mov
cmps
ins
inc
mov
push
gs
ja
mov
mov
add
repnz
push
and
dec
(bad)
addr16
adc
pop
out
xlat
stos
int
adc
xchg
mov
fdiv
int3
leave
mov
ja
adc
push
retf
jo
iret
mov
xor
fld
mov
stos
pop
ret
xor
or
adc
ins
(bad)
jge
pop
jns
je
gs
push
sub
(bad)
dec
push
into
xchg
mov
jns
lahf
nop
jmp
xlat
pusha
inc
in
dec
sbb
cli
jne
xchg
sahf
jmp
pop
rol
sbb
jo
sbb
mul
cmp
xchg
xchg
(bad)
jnp
mov
ja
retf
ror
ficom
retf
in
jnp
add
jmp
popa
cmp
je
fnstsw
div
or
adc
adc
test
pop
daa
xchg
push
outs
dec
dec
fisttp
outs
inc
aad
ds
iret
mov
call
fs
gs
jb
mov
mov
std
shl
mov
(bad)
daa
sbb
imul
xor
mov
mov
jno
dec
dec
inc
(bad)
cmp
mov
or
lea
mov
mov
or
dec
js
push
or
into
jb
jmp
cmp
hlt
ficom
aam
lds
nop
data16
ret
or
sub
pop
xchg
fmul
jbe
(bad)
jecxz
js
pop
jg
popa
mov
shl
xchg
je
and
push
mov
dec
sbb
pop
dec
stos
je
cld
imul
in
ds
std
in
dec
aad
inc
jl
outs
mov
shl
xchg
add
ins
lahf
nop
xchg
and
mov
sub
mov
jge
aaa
cmc
aaa
pushf
adc
lods
ss
call
cmc
xlat
sub
mov
int
jecxz
(bad)
clc
lahf
jb
clc
movs
cmp
adc
dec
pushf
cmp
clc
ins
dec
xchg
sub
sub
jp
mov
std
sbb
hlt
iret
jle
out
das
cmp
mov
or
mov
push
fcomp
inc
sbb
pop
(bad)
cld
addr16
inc
sbb
dec
mov
push
adc
outs
xchg
jmp
inc
out
fstp
out
mov
jmp
and
in
lahf
mov
int
mov
inc
cdq
xor
dec
out
mov
fcomp
gs
and
adc
(bad)
leave
inc
inc
mov
jne
(bad)
jnp
add
rcl
xchg
(bad)
cmps
mov
push
push
rol
out
pop
(bad)
fsub
call
inc
in
cmp
sub
pop
push
retf
aas
test
mov
sti
loope
aam
xor
cmp
inc
aaa
adc
dec
loopne
iret
js
in
into
rcr
and
pop
(bad)
aad
sub
das
cmp
in
scas
push
cmc
push
adc
push
daa
pop
retf
cmp
js
sahf
mov
push
dec
test
rcl
call
mov
push
daa
jecxz
bound
repnz
shl
js
jae
ret
jbe
cmps
leave
adc
cmp
(bad)
fsub
outs
(bad)
mov
jae
mov
dec
jno
(bad)
fld
push
sbb
stos
lock
add
stos
push
pop
inc
mov
clc
scas
mov
cmc
jmp
mov
sub
ror
sbb
or
inc
and
sub
scas
xchg
stc
(bad)
dec
cmp
mov
in
arpl
xchg
adc
pop
cmp
sbb
rol
leave
jne
jno
mov
inc
dec
in
mov
push
test
jne
and
push
and
pop
jle
sub
test
push
jge
in
fwait
push
jo
pop
jne
cmp
dec
fsubr
mov
lods
jb
mov
xchg
mov
add
sbb
push
push
popa
in
adc
pusha
ds
pop
fsubrp
cwde
and
mov
dec
and
cmp
push
bound
adc
fwait
cdq
xchg
call
xchg
pop
cmp
test
xor
js
cmp
enter
jns
or
rcr
movs
cmp
cmp
into
jns
aas
add
mov
stos
sbb
jne
pop
dec
aad
sbb
or
xchg
outs
(bad)
pop
sub
call
mov
lock
xchg
adc
xchg
(bad)
out
mov
stos
or
emms
cmp
and
hlt
or
cld
fst
xor
mov
stos
in
rol
cmp
xor
add
lea
mov
lea
xchg
mov
aad
or
dec
cmp
sbb
xor
xchg
movs
repz
dec
and
push
daa
cs
sahf
mov
movs
sbb
push
mov
int3
xor
test
imul
jmp
add
pop
dec
loopne
(bad)
int
cli
and
dec
add
jne
jg
aaa
sub
mov
das
cmp
xlat
push
test
jno
imul
mov
pop
push
xor
cmps
mov
push
not
inc
sahf
mov
mov
push
fwait
push
push
cwde
rol
adc
mov
jo
pop
or
xor
addr16
retf
sti
test
ret
xchg
loope
sahf
cmp
stos
loope
js
jno
frstor
jo
mov
cmp
and
adc
jp
mov
sbb
adc
lds
jp
imul
(bad)
cli
out
addr16
add
aas
jg
mov
push
sti
in
test
pop
je
pop
adc
or
test
je
push
mov
ret
mul
or
and
sub
inc
into
sub
mov
push
jge
sub
call
daa
xor
or
cmps
fisubr
dec
sti
cmps
push
push
shrd
xor
jmp
popa
std
add
mov
mov
test
(bad)
mov
pop
inc
loop
rcr
arpl
imul
std
push
jle
call
aad
mov
pop
psubsw
xchg
sbb
jb
test
cmp
push
cmp
cld
(bad)
pushf
and
add
daa
cmp
popa
inc
ins
loope
inc
mov
mov
jle
pop
mov
xor
and
and
rcl
and
je
inc
test
dec
rcr
cmp
xchg
fisubr
add
xchg
and
ficomp
jns
jg
and
push
cmp
mov
cs
das
sub
clc
and
sar
jge
ins
sar
adc
xlat
dec
cli
(bad)
out
jb
loope
(bad)
jb
push
aaa
xlat
in
jb
cmp
sbb
xchg
sbb
in
xchg
out
mov
jg
and
addr16
fnstcw
mov
adc
out
test
mov
jne
adc
jnp
push
out
push
out
stos
nop
or
ins
loop
fld
ss
stos
adc
jl
cmps
loopne
inc
sub
int
loop
mov
xchg
sub
(bad)
and
xchg
leave
fnsave
ret
pop
jmp
and
lock
test
scas
fbld
dec
push
jne
mov
xchg
ror
add
mov
push
cmp
(bad)
fcomp
pusha
or
adc
(bad)
jb
repz
pop
sbb
dec
push
xchg
inc
outs
ja
pop
mov
jnp
idiv
sub
mov
jmp
mov
pusha
ror
jecxz
outs
dec
leave
sub
jge
sbb
out
inc
addr16
repnz
xlat
ins
and
xchg
in
std
or
pop
inc
sbb
mov
mov
cmps
ja
shr
cdq
mov
xchg
cmp
ror
fucomp
jl
adc
mov
pop
stc
adc
dec
inc
mov
fs
int
ss
cmps
xchg
daa
push
rcl
fdiv
mov
(bad)
inc
test
and
and
xchg
js
arpl
(bad)
xor
cli
mov
dec
pop
jg
call
mov
and
mov
and
test
jmp
stc
add
stos
sbb
mov
shl
test
push
push
sub
bound
xor
icebp
ds
push
mov
ins
icebp
pop
shl
adc
or
fsubr
loop
and
or
test
data16
jo
add
mov
and
and
rol
mov
je
ds
js
fcomp
mov
push
test
rcr
cmp
or
push
mov
retf
push
xchg
jmp
ins
jmp
cwde
cmc
mov
ror
adc
movhps
sbb
retf
out
mov
xor
(bad)
std
ret
add
push
stos
mov
inc
push
xor
cmp
lock
xchg
mov
mov
in
rol
dec
sub
mov
push
out
pushf
dec
cmp
icebp
or
repz
cmp
xchg
stos
pop
lods
and
gs
push
or
retf
push
fistp
cmp
xchg
inc
xor
push
movs
loope
fsubp
cmp
test
xor
aad
jno
xor
xchg
sbb
mov
cmps
test
scas
jle
(bad)
and
aaa
sub
rol
loop
inc
jmp
sub
or
mov
inc
test
movs
int
ja
pop
cmps
mov
imul
and
sti
mov
push
iret
mov
and
(bad)
adc
sti
dec
data16
loope
je
js
mov
mov
test
je
shl
dec
jmp
mov
xchg
pushf
stos
test
jl
nop
sub
(bad)
sbb
in
mov
out
es
sbb
jns
test
out
add
cld
out
cli
xor
or
das
mov
pop
(bad)
lahf
inc
fidivr
inc
retf
movs
int3
mov
stos
cld
add
mov
mov
ins
(bad)
in
bound
rol
cmp
xchg
sbb
test
ret
xor
aaa
push
mov
dec
mov
mov
lods
pusha
sbb
in
or
fs
jmp
fmul
call
(bad)
adc
pushf
mov
add
(bad)
pop
add
repz
cmp
test
jne
push
inc
daa
sub
add
shl
push
outs
mov
inc
jmp
call
sbb
jne
cmps
push
test
out
dec
scas
ds
cmp
xchg
gs
test
mov
xchg
mov
mov
inc
test
xchg
out
cmp
cmp
ja
js
xor
or
jge
xchg
jne
ja
jae
and
jnp
pop
mov
retf
rcl
daa
xor
fs
push
mov
out
jle
std
in
std
imul
xchg
push
mov
imul
cli
mov
and
pop
enter
loope
cmc
loopne
jp
pop
cmps
stos
mov
jne
std
push
pop
xchg
mov
sti
aam
add
sahf
jl
mov
cmp
jb
dec
xchg
sub
fnstsw
jmp
mov
retf
adc
mov
xlat
arpl
lods
loop
leave
sub
fs
out
mov
addr16
repz
jbe
ror
in
outs
test
mov
or
push
xchg
cmp
mov
test
add
out
pusha
and
mov
push
jb
and
mov
mov
in
push
pop
dec
ror
jns
les
test
and
mov
lods
test
jne
fisub
imul
sub
inc
pop
popf
in
fnstcw
pop
es
fiadd
adc
xor
lods
nop
adc
jmp
je
in
lahf
ins
imul
mov
inc
out
in
outs
mov
inc
mov
push
or
dec
push
mov
sbb
push
and
popf
sahf
movs
push
sub
jecxz
outs
xchg
or
sub
dec
scas
mov
dec
ret
loope
and
int
mov
stc
fcmove
mov
or
test
int3
iret
test
jae
lods
std
cmp
sbb
sub
fnstenv
pop
or
adc
sub
push
add
push
dec
mov
fld
sbb
add
stos
retf
mov
test
xchg
inc
test
lahf
xlat
cli
jno
mov
adc
pop
jno
mov
shl
dec
sbb
push
fs
inc
sahf
leave
jmp
test
jl
gs
cmp
gs
fild
out
sbb
or
pop
in
and
mov
jmp
push
pop
retf
and
xchg
xor
or
add
push
fild
fstp
and
inc
push
fidiv
(bad)
sbb
inc
or
sub
lds
jecxz
push
dec
ins
jmp
mov
push
mov
add
les
dec
cwde
inc
pop
sbb
call
popa
(bad)
movs
mov
aaa
sbb
pop
fsubr
pop
fwait
pop
add
xchg
out
ins
sbb
and
cwde
xchg
not
rcr
ficom
adc
sub
enter
scas
pop
das
out
and
sbb
pusha
js
dec
clc
repz
xchg
dec
in
ret
push
out
sub
add
ret
pop
or
loopne
test
mov
ss
nop
fsubr
push
xchg
push
inc
mov
stos
xchg
popf
arpl
movs
cli
dec
mov
ss
sbb
dec
add
xchg
in
inc
call
cmp
mov
test
cmp
or
jecxz
xchg
in
push
inc
sub
pop
cs
mov
jb
jle
movs
pop
sbb
test
popa
aad
in
fidiv
out
mov
fisub
adc
mov
add
mov
stos
stos
xchg
aam
mov
xchg
and
or
ds
mov
or
or
fcom
cli
push
jl
cmp
and
fld
loop
pop
fdivr
scas
mov
scas
jp
movs
cld
jmp
(bad)
imul
(bad)
shl
popa
ret
ret
pop
in
mov
cdq
jne
aaa
sub
dec
jnp
aam
inc
inc
mov
adc
dec
es
icebp
jae
outs
xor
add
mov
sub
maxps
jb
xchg
movs
pop
lods
fstp
xor
sbb
in
xlat
and
jp
(bad)
imul
cmp
loop
pop
std
add
test
rol
pop
(bad)
xor
popf
fstp
retf
retf
pop
mov
or
pop
sti
pop
repnz
loope
fadd
dec
jnp
(bad)
stos
scas
and
mov
cmp
pop
dec
push
fisttp
adc
xor
jmp
pop
hlt
xor
ret
frstor
fwait
retf
fild
push
sub
dec
ins
and
(bad)
dec
jg
sbb
lahf
out
jecxz
retf
jb
push
or
sub
add
and
dec
add
ret
dec
int3
cmps
inc
push
movs
or
(bad)
int3
loop
mov
xchg
add
jb
shl
mov
mov
push
dec
test
cmp
add
test
stos
imul
nop
mov
add
mov
inc
jbe
leave
mov
(bad)
push
hlt
push
into
adc
mov
leave
lea
push
dec
mov
xor
outs
cmps
mov
out
sub
popa
bound
fnclex
ja
fwait
pop
int3
jmp
mov
cmps
add
test
push
pop
push
call
int
fbstp
mov
add
(bad)
fs
sar
jp
pop
out
mov
mov
(bad)
mov
mov
and
pushf
or
fisttp
aaa
add
mov
data16
ja
mov
loop
aaa
add
cli
mov
fmul
pop
sti
sub
fisub
lahf
ds
aas
adc
xor
scas
lods
mov
jo
mov
adc
mov
fstp
xchg
pop
std
inc
pop
inc
addr16
xor
ret
jge
xchg
repz
je
mov
aam
ins
mov
dec
jbe
xchg
(bad)
in
dec
mov
cmc
or
pop
push
pop
add
inc
pop
pop
les
arpl
xchg
cmp
or
repz
in
pop
and
inc
pop
ficomp
into
mov
fs
ror
jmp
loope
add
mov
je
mov
dec
cmp
in
jge
mov
out
sub
or
out
mov
push
xlat
inc
jecxz
xchg
adc
mov
call
sbb
ins
xchg
into
mov
and
inc
jbe
es
mov
sbb
out
mov
je
or
mov
or
in
add
jmp
rcl
js
or
cmp
sub
shr
out
sbb
push
adc
aam
(bad)
std
cmp
push
rcr
pop
adc
mov
in
and
clc
lods
call
mov
lds
or
lods
mov
dec
in
jle
cmp
js
sub
push
or
loope
xchg
push
nop
jb
(bad)
adc
mov
jae
ret
dec
dec
and
or
mov
pop
movs
movs
imul
test
inc
pushf
addr16
dec
add
mov
mov
scas
or
ja
xchg
cld
gs
pop
mov
push
push
pop
dec
cli
or
and
hlt
pop
inc
gs
mov
jmp
pop
pop
xchg
sbb
sar
test
aas
xchg
sub
pop
js
add
arpl
ds
xchg
inc
ret
in
mov
shl
or
sbb
cdq
cmp
ret
movs
cmp
push
inc
aas
cli
cmp
mov
or
xchg
add
cmps
mov
mov
in
rol
lods
retf
das
stos
rol
xlat
sbb
outs
or
jnp
jnp
cs
pop
ins
loope
dec
into
loopne
enter
out
rcr
les
mov
jbe
loop
out
inc
outs
xchg
pop
addr16
inc
adc
(bad)
loopne
gs
sub
js
dec
pop
popa
push
clc
sub
jp
pop
fmul
fistp
jnp
into
iret
xor
fild
test
inc
inc
inc
mov
ins
scas
movs
pop
mov
dec
mov
(bad)
pop
(bad)
mov
rol
fisubr
xor
push
rcl
mov
pop
test
test
or
pop
dec
adc
cmps
fcom
push
enter
bnd
jae
ror
dec
push
xor
dec
ds
cmc
sub
bound
aaa
shl
adc
iret
xor
les
jno
int3
fld
push
test
mov
cmp
cli
fisttp
inc
sub
stc
out
sbb
xchg
test
cs
test
jge
adc
stos
shl
aas
push
pop
jbe
cmp
into
push
into
sub
call
ins
and
push
ss
cmp
mov
sbb
ror
fcom
lods
push
icebp
dec
fsub
xor
sar
xchg
and
or
sbb
arpl
cmps
xchg
lods
sbb
in
cmp
mov
scas
mov
out
dec
shl
inc
(bad)
das
jecxz
ja
add
xor
cmp
lea
aad
imul
xchg
out
js
mov
mov
jo
xor
mov
xor
cmp
ss
add
lods
and
enter
lock
rol
push
es
xchg
loopne
xchg
xchg
cmp
stos
xchg
jne
xchg
mov
and
jnp
mov
outs
dec
and
clc
cmps
nop
jecxz
jne
outs
cld
aaa
pop
push
jle
sub
mov
mov
scas
adc
ror
inc
mov
xchg
div
loope
push
mov
xor
cli
and
movs
ficomp
mov
jbe
sub
and
scas
pop
mov
pop
sar
add
push
dec
pop
inc
and
add
call
mov
mov
mov
mul
callw
rol
add
mov
mov
sbb
sbb
mov
ret
push
nop
xor
jmp
(bad)
xchg
cmps
and
mov
inc
mov
xor
out
add
push
inc
jl
cmp
(bad)
aas
jge
dec
ffreep
xchg
dec
adc
adc
or
shl
fmul
movs
jns
(bad)
aad
(bad)
fst
(bad)
je
stos
(bad)
dec
scas
mov
(bad)
pushw
mov
or
sbb
outs
sub
shl
jmp
mov
fadd
xchg
dec
test
arpl
repz
inc
sub
sub
fdiv
sbb
sar
push
cdq
(bad)
jbe
imul
nop
xlat
ror
or
adc
jo
aaa
inc
cli
jo
jmp
adc
add
outs
mov
dec
jae
pop
cmp
inc
mov
lods
in
in
rcl
mov
sbb
sahf
fptan
(bad)
imul
ret
shr
adc
cld
sub
mov
mov
inc
mov
faddp
in
cmc
fidiv
adc
mov
inc
jg
inc
mov
dec
lahf
jmp
les
xor
sub
sti
inc
clc
lahf
pop
dec
loopne
push
cdq
cmp
in
lea
dec
es
inc
sbb
lahf
lahf
inc
jl
dec
cmps
mov
jg
mov
jns
adc
sub
(bad)
xchg
loope
fcomi
addr16
sub
inc
stc
jle
int3
push
loope
push
outs
mov
xchg
inc
mov
xor
popa
mov
loop
push
mov
pop
jne
std
inc
push
sbb
and
push
or
adc
cmps
inc
push
jmp
ret
cmp
call
lods
and
lahf
pushf
in
cwde
movs
int3
fcmovu
pop
xor
xor
pop
inc
pop
shl
retf
adc
pop
cmp
mov
adc
jle
xor
push
cmc
popf
in
pop
imul
(bad)
aad
mov
in
xchg
je
push
rcr
nop
mov
test
cmp
iret
xlat
xchg
and
pop
repnz
daa
hlt
mov
xchg
dec
ja
pop
fild
push
inc
add
mov
call
fwait
daa
sahf
jmp
cmp
(bad)
lock
test
mov
(bad)
dec
dec
fnstenv
push
ret
aam
cmp
fsubr
pop
pop
xchg
or
jge
mov
and
movs
mov
push
sti
rol
xlat
jmp
pop
or
jnp
push
adc
sub
jp
addr16
cmp
daa
cs
es
dec
sbb
(bad)
ret
xchg
mov
add
sbb
sti
daa
inc
mov
stos
fist
sahf
and
push
jecxz
aad
xchg
xlat
addr16
hlt
mov
jnp
xor
dec
(bad)
mov
adc
jl
repz
mov
pop
adc
iret
scas
pop
int3
pop
in
mov
rcr
(bad)
xlat
add
imul
das
or
dec
cmps
push
adc
sub
das
jae
nop
mov
and
dec
ret
repnz
xchg
dec
retf
pushf
pop
inc
cmp
jl
addr16
aad
sub
add
(bad)
mov
lods
xchg
adc
cmp
aad
mov
mov
pop
(bad)
and
xchg
push
repnz
int
push
addr16
inc
push
cwde
sub
out
das
cmc
inc
(bad)
lds
mul
mov
or
fsub
or
push
sub
mov
xlat
movs
xor
in
(bad)
jns
dec
xor
shl
movs
shl
push
pop
(bad)
cmps
jg
or
mov
xchg
ss
xchg
inc
hlt
jle
(bad)
addr16
push
cmp
add
mov
cld
mov
ret
enter
cdq
inc
outs
int3
test
clc
mov
loop
cld
cmp
jne
sar
push
(bad)
adc
and
loope
sbb
mov
sub
fs
out
mov
cmp
(bad)
je
mov
sub
add
stos
dec
and
push
or
ins
and
fisub
dec
pushf
emms
(bad)
call
pusha
cmc
mov
fstp
dec
or
or
sbb
in
xor
sub
test
fsub
call
in
gs
fcomp
push
inc
mov
cdq
ins
retf
arpl
into
mov
adc
fisubr
call
nop
pusha
sbb
shl
sbb
fcomp
jp
cmp
jge
arpl
leave
fld
push
mov
ds
dec
hlt
ret
fnstenv
mov
out
bound
mov
mov
cmp
jbe
inc
fist
xor
push
rcr
je
adc
push
sbb
pop
outs
sub
clc
lods
xor
xor
and
mov
mov
sub
xor
jmp
or
xchg
xchg
imul
inc
icebp
imul
fcom
arpl
call
xchg
(bad)
(bad)
push
iret
dec
cmp
inc
xor
cmp
xor
lods
popa
jl
fs
js
ins
imul
aam
stc
outs
dec
in
sub
ja
mov
outs
mov
popf
or
pop
scas
adc
lods
mov
cmp
retf
push
js
push
scas
lahf
out
push
push
sub
loope
dec
in
push
add
(bad)
int3
les
xchg
or
inc
inc
jmp
repz
hlt
fnsave
bound
sub
rcr
xchg
stc
iret
push
push
movs
jne
retf
xchg
cmp
test
dec
inc
repz
push
arpl
aam
cli
les
jb
mov
inc
dec
mov
push
in
push
cmp
rcl
mov
xor
movs
sub
jae
sub
and
adc
and
jb
mov
jnp
mov
dec
push
add
pop
and
push
leave
sahf
adc
mov
mov
jns
repnz
call
adc
cmp
fisttp
push
jecxz
hlt
and
xor
pop
sbb
lahf
mov
push
sar
dec
repz
repz
pop
adc
addr16
xor
inc
mov
arpl
data16
pinsrw
ss
jns
je
push
lods
jmp
jge
mov
xchg
scas
jecxz
fs
movs
inc
rcr
xchg
add
fldenv
outs
scas
clc
mov
cli
enter
pop
test
dec
leave
inc
jae
ret
(bad)
xchg
push
mov
mov
jmp
into
cmps
ucomiss
leave
push
lds
adc
add
or
mov
or
jl
mov
add
je
xchg
pop
sbb
mov
in
dec
cmp
fmul
(bad)
xchg
pop
cmp
out
sti
cmps
mov
mov
inc
xor
lock
or
shr
pop
jmp
test
sbb
xor
out
pop
xchg
das
xchg
enter
xor
sahf
and
cmp
mov
cmps
imul
popf
sbb
mov
cld
vpand
jg
sbb
es
sahf
sar
aad
cmp
add
iret
mov
xor
add
movs
pop
inc
shr
loopne
adc
retf
fcomp
cmp
jmp
sub
inc
push
xchg
adc
xchg
gs
xchg
data16
cmp
adc
or
std
ins
mov
bswap
jg
sbb
adc
sub
push
push
in
fstp
xor
cmp
push
mov
shr
xrelease
sub
imul
in
mov
cmp
xchg
sbb
mov
rcl
aam
jg
dec
mov
jne
adc
dec
fbld
push
sbb
ds
mov
sbb
mov
stos
ror
test
or
int
loop
lea
xchg
adc
inc
es
retf
pushf
or
adc
jl
and
in
adc
push
adc
push
mov
or
adc
fidivr
ins
xchg
(bad)
adc
popa
jns
add
call
aam
leave
fist
jg
pop
jbe
dec
cwde
test
push
int
movs
retf
jo
mov
and
mov
(bad)
ficomp
loopne
repnz
pop
gs
sti
push
dec
out
jg
adc
out
add
adc
mov
mov
and
xor
or
retf
dec
clc
mov
and
jno
repnz
repz
pop
mov
pop
cmp
aaa
imul
je
cmp
jl
dec
adc
ds
popf
stc
xchg
loop
scas
ret
dec
mov
sub
xchg
out
mov
ficomp
sbb
sahf
sti
sbb
mov
in
mov
jmp
retf
jecxz
cmp
or
ss
and
sbb
aam
pop
jmp
fwait
pop
inc
test
inc
xor
pop
fsubr
or
movs
in
and
push
enter
imul
(bad)
leave
adc
jae
mov
dec
call
dec
cmp
push
(bad)
repnz
jbe
loopne
inc
mov
leave
mov
int3
in
repz
cmp
loope
movs
mov
inc
mov
retf
imul
rcl
cmps
cmp
jno
imul
mov
test
loop
neg
cmp
push
push
mov
adc
fcom
or
ins
(bad)
aas
dec
loopne
enter
test
add
mov
sbb
out
mov
jl
das
fmul
adc
int3
popf
clc
(bad)
out
fidiv
pop
sbb
pop
out
jbe
fadd
push
and
js
outs
dec
sbb
lods
adc
xchg
aad
or
adc
test
pusha
push
or
gs
fs
xor
pop
repz
in
enter
inc
test
jecxz
mov
xor
ret
movs
jnp
sbb
or
cmp
pushf
call
dec
loop
dec
sbb
es
pushf
sbb
rol
retf
stos
lods
sbb
int
mov
cmc
dec
mov
pop
xchg
push
lods
adc
mov
push
mov
imul
add
push
cmp
outs
or
in
lea
je
or
ret
inc
fimul
ror
imul
neg
cmc
mov
mov
adc
iret
loopne
add
pop
or
cld
test
gs
xchg
add
and
outs
into
sub
jp
loope
jmp
mov
pop
popa
iret
push
outs
scas
cmp
shr
aam
inc
push
inc
or
ins
push
dec
scas
pop
test
jp
push
out
js
mov
fst
ficomp
adc
push
or
shl
fcomp
aam
push
and
adc
inc
out
ins
push
and
mov
pop
sbb
jmp
and
pushw
adc
iret
mov
dec
popf
addr16
add
or
adc
or
and
ret
pop
pusha
xchg
pop
js
inc
dec
xor
cdq
mov
ficom
aam
xchg
cs
popf
jl
cmp
xor
scas
inc
mov
ja
cmc
pop
fadd
dec
or
lods
neg
clc
jle
les
mov
xchg
sub
jmp
xchg
mov
push
cmp
fnsave
or
sbb
inc
out
imul
inc
pusha
xor
enter
out
enter
mov
add
int
out
xchg
fidiv
loopne
jmp
jg
adc
fdiv
(bad)
aam
lds
cmp
sahf
xchg
popa
pop
mov
inc
add
jl
dec
and
jmp
add
inc
xor
adc
nop
push
sub
rcr
mov
lods
loop
or
xchg
or
inc
push
stos
sub
stos
imul
dec
jl
pop
fstp
jle
loop
fwait
loope
ds
test
add
(bad)
sbb
fs
jl
addr16
popa
sti
adc
lahf
ret
push
(bad)
adc
adc
shl
les
jb
inc
xchg
add
add
mov
xor
pop
mov
jmp
mov
sub
js
shr
scas
sbb
mov
ins
jno
ins
adc
inc
ficomp
jl
inc
rol
ja
jae
lea
(bad)
pushf
retf
addr16
icebp
sub
pop
in
retf
mov
dec
mov
mov
and
sbb
mov
and
leave
xor
test
arpl
or
dec
test
arpl
and
(bad)
mov
jmp
mov
pop
cmp
fs
mov
retf
or
inc
add
ret
stc
mov
enter
fmul
stos
mov
jnp
adc
int3
fisub
and
mov
cmc
xchg
xor
mov
stc
out
lods
popf
push
retf
or
jo
arpl
mov
adc
or
adc
outs
inc
cmp
sub
dec
pop
xlat
cmps
or
call
inc
xchg
mov
mov
xchg
or
test
(bad)
pop
dec
rcr
push
test
add
adc
adc
or
pusha
push
or
ins
and
cmc
xchg
xchg
(bad)
gs
mov
sbb
cmp
cmp
adc
inc
xchg
or
or
stos
out
mov
aam
clc
adc
sbb
sbb
mov
shl
or
lods
xor
jp
in
pop
pop
xchg
movs
mov
cmp
xchg
std
mov
shl
adc
adc
arpl
pop
aad
cmc
push
stos
lods
jno
sub
pop
jge
jecxz
inc
xchg
iret
jno
or
in
(bad)
pop
lahf
inc
or
not
data16
push
jbe
fcom
retf
fistp
adc
push
jnp
and
mov
aad
nop
fwait
cmp
adc
iret
pop
setno
sub
fs
sub
sbb
ret
jae
lea
inc
lods
mov
pushf
ror
leave
adc
out
out
xchg
push
popf
fldenv
mov
mov
pop
cmp
arpl
adc
in
cmp
mov
dec
ins
jne
fadd
shl
adc
mov
cmpxchg
jne
mov
push
or
cmp
fadd
fs
(bad)
loope
and
xor
pusha
cwde
dec
pop
inc
xchg
lea
lea
xchg
cmps
sub
mov
jo
xchg
int
mov
push
xor
and
xchg
mov
lds
loopne
adc
add
pop
ficomp
and
pop
and
movs
sti
hlt
(bad)
aaa
push
dec
push
inc
push
mov
mov
je
mov
cmps
and
pop
(bad)
test
xchg
(bad)
out
jbe
cdq
ja
xor
push
ins
mov
fcomp
jb
movs
mov
cmp
adc
mov
and
jo
mov
cdq
dec
push
mov
adc
pop
xchg
popa
imul
jnp
ja
mov
xchg
xchg
cwde
dec
push
fmul
test
in
es
enter
mov
dec
cmp
movs
shl
dec
fs
inc
(bad)
jo
sbb
fist
mov
adc
pop
cwde
inc
or
(bad)
(bad)
loop
leave
dec
lahf
adc
dec
ja
or
je
pop
rcr
lds
or
push
adc
xchg
call
ret
fld
sub
fdivr
xchg
lods
repnz
cdq
mov
dec
push
pop
lods
sub
mov
movs
pop
repz
aad
shl
mov
xlat
jne
inc
jno
fs
xchg
in
test
(bad)
loop
jmp
or
or
sbb
lds
mov
adc
fmul
cmps
and
jle
xchg
dec
imul
add
dec
sub
push
cmp
adc
sahf
push
fwait
pop
cmps
dec
push
mov
push
dec
test
xor
in
cmp
add
lods
cmps
in
sti
out
mov
sar
mov
test
(bad)
mov
xchg
fsub
jne
cmps
imul
aam
mov
mov
(bad)
jbe
in
xchg
test
cmps
popa
jle
mov
cmp
cmp
test
sbb
(bad)
adc
pop
mov
inc
lock
xor
cmp
cmp
in
mov
xchg
push
rcr
imul
fs
mov
ds
cmc
sbb
mov
ds
leave
add
mov
sbb
inc
jmp
xlat
(bad)
nop
fs
mov
dec
mov
test
and
add
sub
push
xchg
test
das
scas
call
fadd
xchg
sub
sbb
pop
(bad)
push
add
xchg
mov
pop
mov
in
mov
mov
inc
je
ja
or
xor
jecxz
mov
inc
mov
hlt
cmp
pop
xor
loop
adc
cmp
in
ret
xlat
fisubr
jne
dec
mov
push
sub
adc
(bad)
fcmovb
jns
fwait
pop
movzx
in
sbb
daa
fadd
fsubr
jp
xchg
in
std
loope
sub
mov
test
repnz
ds
stc
cmps
ds
retf
jmp
lock
icebp
les
xor
(bad)
jg
sbb
lods
jmp
add
sbb
arpl
pop
pop
(bad)
clc
push
sbb
imul
retf
leave
inc
mov
lods
add
adc
cmp
std
sbb
dec
inc
(bad)
cmps
inc
cmps
sub
pop
(bad)
mul
(bad)
icebp
and
push
rcr
mov
dec
scas
outs
es
cmp
xchg
nop
cdq
and
stc
jnp
jnp
jne
fsub
lahf
jb
in
sub
ret
xchg
mov
sbb
push
cwde
(bad)
mov
test
leave
inc
repnz
xchg
sbb
into
enter
push
jo
cld
out
das
add
dec
popa
scas
pop
loopne
aad
aas
repnz
jnp
push
jb
jp
sbb
lahf
sub
fs
test
mov
lahf
sti
out
xchg
sub
out
das
and
sub
push
mov
cmp
enter
out
push
aas
dec
stc
out
retf
adc
movs
arpl
mov
xor
dec
mov
pop
dec
cmc
adc
push
push
cmps
cmp
scas
enter
fld
aas
sbb
cld
add
nop
pop
fiadd
ret
dec
pop
dec
xchg
iret
outs
dec
jb
(bad)
xchg
ret
scas
jns
mov
cli
adc
cs
fadd
mov
push
std
sub
mov
sti
dec
icebp
inc
les
pop
fadd
shl
and
dec
fdivr
int3
lea
popf
xor
sub
mov
jno
jo
inc
cmp
sbb
mov
cdq
or
mov
dec
iret
xor
mov
loopne
fdivr
fs
xchg
jle
cmps
dec
jns
push
cdq
test
cwde
jno
outs
or
clc
int
shr
and
xor
add
or
ret
enter
pushf
push
jno
hlt
and
cli
lea
stos
fisub
out
shl
xor
add
cmp
add
(bad)
(bad)
xor
pop
add
dec
pushf
sbb
xchg
lea
stos
fstp
dec
and
pop
sbb
add
inc
lods
mov
xor
in
and
mov
test
ins
add
push
dec
jecxz
dec
mov
jae
iret
stos
repz
ror
mov
es
imul
mov
daa
call
push
cmp
mov
push
test
sbb
push
jne
and
sub
mov
push
mov
sub
cli
xchg
mov
sti
outs
jnp
jmp
jne
mov
stos
add
js
jno
mov
call
mov
mov
inc
xor
rcr
std
jp
cmp
jbe
enter
int
vshufpd
xor
mov
je
inc
dec
retf
push
cmps
fmul
and
adc
lds
enter
dec
movs
sbb
fld
cmps
cwde
in
adc
add
imul
dec
imul
push
in
in
pop
imul
mov
pushf
in
je
popf
fnstenv
frstor
aas
mov
dec
outs
mov
mov
cmps
test
mov
cmp
mov
fsubr
pop
jns
mov
sub
and
repnz
or
mov
jns
call
loop
inc
push
imul
mov
jmp
test
test
scas
jae
sub
add
jno
fwait
or
sbb
in
dec
and
sub
out
add
inc
aad
add
sbb
bound
in
rcr
push
shr
cdq
js
pop
push
cmp
jne
sbb
aam
cmps
jo
ror
jecxz
std
mov
sbb
mov
aad
imul
dec
aad
xor
sbb
lea
mov
push
push
int
xchg
mov
loope
push
hlt
scas
shr
shl
fld
(bad)
std
pop
enter
mov
jmp
xchg
cs
dec
xchg
push
loope
push
clc
lds
mov
jmp
inc
jmp
sub
and
cmp
mov
xchg
jmp
mov
xchg
mov
cmp
fsubr
(bad)
dec
add
xchg
and
jp
(bad)
mov
cmp
in
cld
and
push
loopne
inc
cmp
int
cmp
or
mov
cmp
xor
mov
push
mov
xchg
pop
in
js
adc
into
cmp
mov
loop
outs
jno
rcl
call
ins
cmp
inc
jbe
loop
fistp
xchg
lock
ins
sub
faddp
aad
imul
xor
ins
test
cmc
outs
sbb
adc
or
sbb
cmp
test
jmp
stc
xor
xor
adc
xchg
push
fstp
out
adc
aad
call
sub
pop
inc
push
push
icebp
rcl
js
mov
(bad)
int3
dec
das
fild
mov
fild
mov
inc
jl
xchg
je
pop
and
mov
shl
cld
add
cwde
jp
jmp
mov
dec
adc
fist
dec
mov
push
and
stos
sub
dec
pop
pop
nop
pop
or
enter
pop
inc
mov
adc
push
and
jmp
cmp
mov
pop
push
jo
cmp
idiv
cld
out
mov
mov
pop
and
jge
movs
call
mov
xor
popa
mov
push
icebp
pop
test
ret
scas
popf
mov
mov
in
ins
inc
ficomp
adc
call
repnz
push
mov
mov
push
sbb
ins
cmp
pop
pop
inc
clc
or
push
rcr
mov
fsin
cdq
inc
rcl
add
mov
mov
inc
mov
imul
out
xor
mov
dec
push
mov
sahf
(bad)
sub
jmp
(bad)
jg
es
mov
shr
adc
inc
dec
(bad)
les
push
out
xor
sti
test
sub
mov
cmp
jmp
daa
hlt
inc
mov
jnp
popf
ins
not
xor
into
xchg
lock
xor
loope
mov
nop
mov
ret
shl
or
into
cdq
push
or
sbb
sub
cmp
icebp
cli
(bad)
ins
test
repz
push
jo
ror
and
loopne
loopne
cwde
adc
inc
sub
push
fwait
or
es
push
or
movs
sub
cmp
fmul
in
loopne
loope
mov
cmp
dec
sbb
push
in
call
(bad)
cs
dec
xchg
cwde
xchg
mov
dec
loop
jo
imul
test
out
mov
ret
enter
cmp
(bad)
(bad)
or
push
mov
xchg
shl
adc
sub
fisttp
pop
push
add
call
js
xor
mov
xor
mov
outs
sbb
or
(bad)
sub
and
sbb
mov
sub
repz
popa
fisttp
mov
sub
ins
jp
into
add
push
xor
dec
adc
xchg
dec
push
lods
outs
xor
and
sbb
fisubr
sti
(bad)
sbb
adc
imul
cmps
sbb
clc
in
jne
fsubr
rdpmc
mov
fist
xor
and
sbb
add
js
xchg
pop
pop
shl
mov
push
jo
jecxz
mov
ret
dec
jp
push
mov
test
fild
xchg
in
mov
loope
mov
lods
in
xor
push
sbb
sbb
data16
adc
adc
mov
mov
in
xor
out
dec
cmp
stos
stc
push
out
xor
int
dec
or
sbb
dec
xor
mov
jl
cmp
sub
cmp
popa
cmp
lods
aas
ret
mov
mov
cdq
lods
mov
test
ins
xchg
lahf
add
or
daa
and
xchg
sbb
jl
or
stos
test
sbb
imul
rol
int3
or
sub
jo
iret
sub
jbe
mov
mov
(bad)
bound
lds
mov
(bad)
push
pop
push
jmp
addr16
pop
pushf
and
xor
push
pop
ficom
test
and
addr16
adc
mov
(bad)
out
(bad)
addr16
and
or
add
aad
adc
push
push
jmp
xlat
mov
stos
pushf
adc
aas
fdivr
xlat
fwait
mov
arpl
mov
rcr
jae
movs
pop
scas
xchg
or
aas
not
sbb
dec
or
(bad)
psubd
cld
mov
cmps
inc
into
ror
jo
scas
xchg
sti
aas
fxch
pop
in
jbe
xor
dec
shr
add
push
out
jbe
loopne
xchg
aad
mov
hlt
inc
(bad)
mov
ins
stos
cld
push
mov
jmp
mov
mov
dec
sti
push
add
or
inc
jg
jae
mul
cs
xor
inc
in
hlt
sbb
pop
push
push
inc
adc
or
xchg
scas
(bad)
xchg
mov
mov
mov
or
or
retf
ret
sub
outs
stos
mov
lea
scas
nop
in
inc
shr
push
dec
cmps
ret
loopne
cmps
ds
mov
mov
sub
shl
xor
mov
imul
sub
xchg
call
cmp
jnp
cmp
sti
lock
sti
call
jg
imul
xchg
js
data16
xchg
int3
out
popa
mov
mov
fisttp
pop
inc
lds
push
dec
jmp
xchg
or
rcl
test
xchg
fnstenv
(bad)
push
cmp
jg
fwait
xchg
mov
in
cmc
sbb
repnz
ins
ins
adc
aas
pushf
in
mov
scas
xor
adc
rol
dec
and
push
jmp
add
xor
jg
jl
xchg
das
xor
das
fimul
dec
adc
pop
push
inc
(bad)
mov
pop
lods
jmp
retf
xor
es
push
stos
psrlq
and
(bad)
dec
xor
jae
or
mov
jae
loop
bound
enter
icebp
lea
mov
adc
sub
cmp
aaa
stc
jmp
inc
mov
xchg
out
aaa
xchg
cmps
or
sbb
test
and
xchg
sbb
nop
and
push
ja
mov
cmp
pushf
ret
mov
loopne
div
and
xchg
jo
mov
sub
and
test
push
or
nop
cwde
stc
iret
test
sbb
lds
cmps
stc
cbw
sar
(bad)
sti
and
loope
sub
jge
retf
rol
pop
cmc
inc
cmp
out
inc
pop
out
xlat
xor
and
out
xchg
int
dec
lock
mov
sub
push
faddp
sub
mov
adc
push
cwde
aam
jge
mov
mov
call
enter
sahf
adc
xchg
icebp
xchg
dec
leave
xor
or
push
and
bound
imul
mov
xchg
or
rcr
adc
and
inc
xchg
jne
sub
mov
xchg
movs
xchg
test
ret
shl
and
cmp
(bad)
test
into
sbb
fcom
cmc
cmp
mov
ins
rcl
mov
arpl
jne
std
jno
ret
xchg
or
ins
mov
ds
dec
cli
dec
lods
movs
jbe
jo
call
mov
icebp
popa
jmp
(bad)
in
xor
loopne
hlt
xor
xor
mov
(bad)
in
call
cld
mov
outs
ds
dec
out
push
dec
clc
xchg
in
test
cmp
jnp
(bad)
enter
stos
sub
outs
inc
add
ins
mov
mov
lock
(bad)
pop
inc
es
sbb
jmp
aam
xchg
dec
or
mov
ret
dec
xor
mov
movs
sub
pop
je
ja
adc
add
or
hlt
in
and
sub
adc
push
shl
fisttp
mov
adc
std
adc
adc
jl
push
(bad)
sbb
xchg
cdq
in
aas
mov
sub
sub
inc
(bad)
xor
stos
shr
sub
jnp
jecxz
jb
xchg
stos
lock
xor
rcr
jbe
dec
push
(bad)
jmp
pop
sar
cmp
jl
xor
iret
(bad)
cmp
test
mov
jg
lods
sbb
jmp
mov
cmp
xchg
push
mov
jb
call
or
cmp
push
dec
jae
sub
mov
jp
mov
pop
rcl
ins
je
rcr
out
(bad)
(bad)
pop
dec
xor
dec
dec
dec
popa
xor
xchg
outs
mov
je
loope
mov
or
repnz
xchg
mov
test
dec
or
mov
sub
pop
scas
icebp
pop
es
xor
mov
repnz
cdq
mov
test
push
sub
mov
xor
xor
ds
sub
loopne
cmp
shl
or
xchg
sub
stos
adc
or
xchg
push
pop
jno
mov
add
push
cmp
mov
or
fsubr
push
mov
ja
pop
arpl
jne
xchg
adc
mov
push
lods
mov
dec
mov
stos
out
inc
jl
cmp
sbb
mov
jno
add
push
inc
arpl
aam
sub
cwde
ss
xor
(bad)
sbb
jp
sbb
call
jle
aaa
das
(bad)
(bad)
push
mov
test
mov
mov
loop
or
out
ret
sbb
aas
lea
mov
and
pop
test
sti
mov
xor
mov
mov
sbb
or
test
fcmovnb
mov
xor
mov
das
fwait
mov
arpl
xchg
std
rol
cmc
push
jnp
mov
loop
je
ja
mov
pop
outs
aas
jno
xchg
inc
pop
xlat
out
int
push
adc
ror
xchg
call
xchg
mov
scas
fwait
add
sar
fs
ins
das
dec
dec
repnz
pusha
adc
jl
dec
cmp
adc
dec
mov
out
push
inc
shr
aas
cld
daa
or
xchg
xchg
xor
dec
pop
retf
sahf
sbb
dec
or
xor
xor
dec
push
mov
xchg
mov
fdivr
inc
adc
xchg
xchg
lahf
and
sub
icebp
push
(bad)
cwde
std
jnp
leave
jns
and
cmp
(bad)
or
mov
shl
inc
sub
js
jno
ss
sbb
mov
mov
add
and
sub
inc
sar
pusha
ins
psllw
aam
jae
sbb
les
mov
xlat
movs
(bad)
iret
not
dec
retf
mov
push
(bad)
pusha
mov
mov
cmp
push
movs
cs
repz
popa
mov
jnp
inc
out
adc
mov
mov
and
test
cmp
add
enter
jl
pusha
stos
push
out
scas
adc
xchg
and
cmc
add
stc
jmp
add
ror
cmps
jmp
jo
or
mov
mov
mov
(bad)
ret
lahf
mov
ret
ds
inc
not
stc
ror
cmp
fdiv
add
cmp
pop
hlt
ins
mov
call
adc
inc
xchg
dec
add
retf
sub
inc
das
daa
mov
ret
push
pop
mov
ror
xchg
push
cmp
add
sub
mov
mov
ror
rol
in
xchg
iret
cdq
xchg
pop
ja
into
scas
adc
add
push
jecxz
out
sbb
std
xchg
jns
imul
repnz
(bad)
pop
jno
imul
loopne
test
pop
add
push
rol
push
shr
(bad)
cli
fdivr
or
ja
aad
out
pop
outs
call
mov
push
dec
rcl
mov
inc
push
fcmovne
mov
push
sbb
dec
data16
xor
adc
imul
mov
ror
pusha
sub
cmc
and
xchg
pop
pushf
mov
call
or
add
or
mov
jmp
rep
mov
xchg
xchg
xchg
mov
ja
dec
aam
mov
rol
fisttp
outs
xor
and
sub
(bad)
pop
sbb
or
xchg
jbe
shl
push
int
mov
xchg
mov
repnz
shl
xor
retf
mov
inc
dec
in
test
pop
sahf
test
aad
aas
movs
xor
(bad)
sub
movs
lods
sbb
f2xm1
ins
es
fwait
adc
jb
mov
arpl
loopne
inc
push
imul
mov
push
jbe
cmp
and
bound
mov
pop
dec
das
sbb
test
sub
pop
mov
aas
stos
nop
ret
pop
loope
push
loop
mov
fiadd
std
cmp
and
push
idiv
loop
jne
fbstp
outs
cmp
dec
clc
test
sub
int3
adc
ror
int3
xchg
cmp
push
inc
xchg
add
pop
and
push
std
or
xor
pop
cmp
inc
mov
mov
mov
inc
adc
sti
xor
icebp
test
ror
lahf
ins
sub
cli
mov
pop
shr
popa
jmp
daa
cmp
push
sub
cmp
retf
xor
jmp
les
or
not
je
push
call
aas
mov
push
popa
adc
je
cld
sbb
xor
out
sbb
xor
or
mov
test
rcr
jle
jo
loopne
les
or
std
call
ins
hlt
push
ss
pop
test
(bad)
js
pop
inc
es
sub
enter
jmp
aaa
pop
in
lods
and
in
mov
mov
cmp
fs
push
add
mov
pop
push
lods
sbb
or
dec
xchg
xor
outs
push
call
add
pusha
jns
mov
fst
mov
add
test
lock
test
scas
mov
inc
cmp
mov
xchg
cmps
adc
push
ret
adc
push
enter
xor
popf
sar
rol
jg
dec
xor
enter
enter
sbb
and
push
jo
pop
dec
loop
out
fwait
hlt
repz
jbe
mov
inc
lea
(bad)
sbb
inc
mov
pop
push
mov
stos
cmp
cmp
sbb
bound
xor
jbe
or
inc
ds
icebp
xor
pop
cld
int
(bad)
cmp
dec
dec
shl
lock
idiv
jg
adc
test
jp
test
or
test
jp
xchg
lods
ret
dec
in
push
fist
in
jmp
cmc
mov
shr
aad
into
mov
xchg
push
ja
out
or
cmp
and
bswap
dec
mov
and
cld
scas
push
xchg
jmp
hlt
jmp
inc
dec
mov
iret
fsubrp
xchg
or
rcr
dec
pop
test
or
push
cdq
push
retf
cdq
test
cmp
and
sbb
pop
inc
inc
pcmpgtd
int3
cmp
fdiv
inc
cmp
xchg
pusha
xchg
test
jno
push
add
pop
movs
mov
out
inc
in
sbb
pop
add
sbb
inc
mov
jle
sbb
lods
addr16
push
out
adc
jge
xor
(bad)
aam
mov
lea
(bad)
sub
jecxz
js
dec
cmps
xor
sub
or
mov
mov
inc
int
outs
stc
jo
rcr
scas
jp
push
add
or
(bad)
and
stc
pop
adc
adc
add
or
inc
retf
cmc
outs
test
shl
test
pop
inc
pop
dec
jbe
dec
pop
psubusw
icebp
inc
jmp
add
jg
ins
jmp
mov
daa
push
pop
outs
dec
xor
mov
xlat
mov
fxam
add
sbb
xchg
popa
pop
mov
dec
jno
jmp
(bad)
sub
call
inc
push
mov
pusha
outs
pop
mov
test
popf
les
lods
jmp
and
jp
movs
in
push
aad
fcom
dec
inc
les
call
and
mov
test
sub
mov
mov
jmp
mov
fcomp
lods
cmps
sub
xor
cld
jnp
mov
push
les
sbb
sbb
test
cmps
dec
xchg
(bad)
xor
inc
fbld
mov
push
ja
fbld
xchg
xor
stc
inc
cmp
outs
mov
jge
xor
or
cdq
cdq
jmp
movs
and
es
jbe
je
pusha
jno
sub
(bad)
movs
nop
sar
inc
and
mov
mov
xor
enter
ror
lods
inc
and
adc
jp
(bad)
lds
jb
mov
dec
arpl
pop
jns
mov
or
fwait
mov
addr16
jmp
scas
mov
lock
or
and
lds
push
sub
fucomp
fcomp
mov
sti
mov
and
mov
in
hlt
mov
mov
and
cmps
leave
adc
mov
dec
test
mov
fild
jo
add
mov
lea
xchg
pop
xchg
popf
mov
xor
pushf
and
(bad)
mov
pop
add
fiadd
pusha
mov
(bad)
add
and
fbstp
fdiv
frstor
inc
pop
mov
or
popa
loop
popf
adc
pop
bound
lea
dec
inc
or
jle
ins
retf
retf
repz
sahf
jno
das
sub
cs
mov
inc
xchg
and
sub
(bad)
fnstenv
sub
aas
pop
jge
fcmovnbe
es
movs
add
sub
push
mov
xchg
outs
push
add
scas
cdq
push
sbb
sub
adc
pop
test
loopne
adc
jbe
cmps
push
cmp
stc
push
dec
mov
add
(bad)
mov
cmp
mov
mov
sbb
mov
xor
lock
repz
or
mov
push
icebp
add
or
adc
arpl
hlt
outs
retf
or
mov
push
cdq
imul
pop
aaa
inc
jo
inc
idiv
hlt
retf
iret
shl
push
inc
retf
push
mov
je
ss
mov
test
sbb
imul
cmps
retf
pop
aas
mov
inc
fimul
push
jecxz
jge
scas
mov
test
mov
hlt
(bad)
dec
mov
test
mov
dec
pusha
jecxz
std
xchg
call
in
mov
shr
and
inc
xor
inc
movs
aas
sbb
mov
cli
or
outs
inc
mov
in
mov
jb
sbb
pushf
mov
imul
inc
jbe
cmp
pop
dec
sub
mov
loope
sub
dec
cmp
fucomp
mov
inc
lock
fs
dec
in
cmc
mov
in
push
mul
dec
xchg
sub
push
loope
fst
je
dec
leave
mov
xor
dec
pminub
cmp
push
pop
stos
mov
cs
mov
int3
pop
and
movs
movs
pop
out
xchg
mov
jecxz
pop
xchg
mov
or
cmc
push
out
ret
les
dec
mov
xchg
and
xor
add
cmc
out
sub
in
push
imul
push
rol
cmc
scas
or
jge
call
fiadd
mov
int
sbb
inc
push
pop
test
scas
mov
add
in
(bad)
mov
push
arpl
xor
mov
repz
jns
inc
mov
mul
test
test
sbb
push
dec
push
fisttp
(bad)
pop
int
stos
push
pushf
mov
jbe
lods
pop
in
jno
dec
add
or
pushf
in
shl
sar
mov
call
xor
jge
test
xchg
sbb
push
pop
sub
test
xor
or
jle
xchg
in
inc
shl
sub
sub
cwde
xchg
cs
std
repz
jmp
stos
fstp
pusha
pop
lds
and
and
popf
scas
(bad)
mov
xor
mov
mov
aam
in
add
int3
xor
add
into
sbb
cmp
cmp
adc
inc
jo
aaa
cli
mov
xor
mov
gs
bound
sub
pop
mov
xor
shl
aaa
fsubr
xlat
or
mov
xor
fs
jle
or
xor
fwait
test
clc
pop
inc
pushf
hlt
or
call
ins
test
cmp
stos
sbb
cwde
mov
rcr
jno
ds
adc
imul
test
add
stos
aad
sub
out
out
mov
xor
xchg
pop
xchg
in
sub
out
sbb
push
adc
dec
cmp
iret
(bad)
xchg
mov
add
into
sbb
aam
jecxz
shr
in
adc
pop
inc
and
clc
mov
or
cmc
mov
mov
dec
sub
xor
jl
adc
jecxz
int
lods
mov
jg
pop
add
je
in
rcr
adc
jno
inc
fcom
lods
add
xor
or
daa
jecxz
test
push
in
scas
jg
push
or
pop
push
xchg
leave
pop
jae
pop
lea
in
scas
fcmovbe
lahf
mov
push
xchg
adc
adc
sbb
ja
adc
leave
pop
and
sti
xchg
inc
ficom
xchg
test
retf
sub
xor
sub
pop
push
movs
mov
enter
inc
add
cmp
inc
out
or
cld
xor
mov
shr
(bad)
mov
xor
sub
jnp
outs
dec
nop
lea
out
adc
mov
sub
mov
inc
push
leave
test
pop
push
xchg
test
pop
adc
fistp
mov
call
add
sbb
das
jecxz
mov
rcl
fs
xor
dec
push
xlat
jno
stos
xor
fisub
ins
mov
fbld
mov
inc
dec
ds
push
lods
jns
enter
sbb
add
sub
cld
push
sbb
mov
xchg
jmp
xchg
inc
and
push
clc
das
push
xchg
and
pop
dec
test
(bad)
jle
cmp
out
jge
xor
xchg
pop
sbb
loope
mov
fisubr
cmp
jns
pushf
in
rcl
xor
popf
stc
retfw
and
addr16
jl
and
dec
mov
cmp
add
ret
xor
add
inc
fdiv
popa
in
mov
jmp
out
sub
(bad)
aad
jo
(bad)
clc
mov
adc
sub
test
add
scas
dec
mov
cmp
mov
inc
call
stos
jmp
pusha
int3
and
jmp
jmp
adc
mov
mov
add
(bad)
add
(bad)
mov
mov
and
and
jge
(bad)
imul
pop
(bad)
into
jg
xor
adc
dec
sar
pushf
int
jmp
jle
add
sbb
xchg
shr
jp
scas
mov
jmp
leave
jl
pop
add
jmp
call
popa
pop
ja
test
cmp
inc
push
loop
adc
gs
push
mov
fld
mov
push
rcl
inc
movs
pop
mov
push
push
dec
cdq
add
add
push
lods
addr16
add
hlt
std
pop
xor
mov
or
ror
xchg
pop
sbb
hlt
(bad)
sub
fdiv
and
adc
ret
jle
and
out
test
xchg
punpcklwd
jl
mov
rcl
lock
pop
stc
push
sub
add
lds
sbb
sbb
or
mov
inc
jb
and
mov
cwde
pop
add
xor
fild
daa
xor
aaa
adc
cmp
aad
push
aaa
jbe
push
test
jmp
dec
and
sbb
(bad)
cld
shl
xor
push
inc
in
repz
jno
enter
sub
sahf
cmp
scas
jnp
lea
sub
loop
jle
inc
jp
repnz
sub
lods
xchg
out
xor
pop
mov
aaa
push
push
and
mov
(bad)
in
test
mov
mov
(bad)
mov
jmp
mov
xchg
ja
cmp
dec
out
and
add
xlat
and
cmp
cmc
fistp
cld
imul
cld
popf
mov
frstor
inc
xor
sbb
inc
(bad)
jg
cli
dec
shl
mov
xor
dec
mov
int
fcomp
movs
in
inc
xchg
mov
(bad)
xchg
mov
rcl
nop
jno
xchg
ret
jmp
cmp
mov
cmps
movs
xor
jno
pop
test
lahf
jnp
ffreep
lds
xor
stos
dec
dec
sub
(bad)
cli
adc
inc
push
inc
(bad)
fcomp
aas
jae
mov
ss
mov
dec
or
rol
aad
sub
scas
sbb
mov
out
mov
nop
rcr
out
idiv
push
sub
sar
pop
fwait
push
(bad)
shl
cs
test
mov
movs
inc
mov
fs
mov
outs
scas
and
xchg
jl
or
cs
dec
and
setg
mov
out
ins
mov
fwait
adc
sbb
mov
movs
pop
sbb
jb
mov
or
shl
dec
xor
(bad)
test
mov
xchg
push
mov
aas
add
(bad)
jb
push
icebp
sub
push
fnstsw
adc
add
test
call
fdiv
outs
dec
mov
retf
pop
call
sub
cli
or
bound
and
fldcw
in
ret
pop
gs
es
data16
gs
add
push
inc
inc
lahf
add
je
jg
jbe
dec
outs
jae
jl
icebp
not
mov
inc
sub
xchg
cmp
call
xchg
push
mov
fs
fadd
div
mov
sub
push
jnp
jecxz
or
and
inc
add
lods
mov
and
pop
je
jne
fldenv
movs
fiadd
xchg
cmp
pop
and
stc
shl
push
data16
push
enter
inc
outs
sub
fldenv
jo
mov
movs
jae
icebp
test
sub
clc
sub
pushf
and
in
mov
ret
and
dec
sub
add
fbstp
pop
push
clc
jbe
pop
sahf
cdq
push
das
mov
lock
(bad)
jmp
hlt
jo
pop
mov
mov
push
push
out
sbb
iret
pop
jmp
leave
xchg
push
loop
cmps
xchg
push
retf
out
add
daa
xor
(bad)
adc
lock
popf
mov
mov
mov
or
xchg
call
ds
out
idiv
jecxz
push
cmps
test
xchg
rcr
arpl
popa
pop
sub
stos
dec
xor
arpl
mov
pop
push
in
movs
pop
pop
cli
int
add
test
add
scas
into
push
loop
movs
imul
mov
add
xor
div
lock
xchg
call
dec
ror
inc
dec
iret
xchg
cdq
leave
mov
mov
test
jle
dec
cmp
mov
mov
add
push
fwait
rcr
leave
and
out
(bad)
movs
xchg
iret
(bad)
por
(bad)
aam
xchg
xchg
nop
fnsave
cmp
div
mov
lods
or
push
(bad)
cmp
in
cs
sub
cmps
sub
cmp
adc
pop
mov
pusha
mov
mov
in
adc
inc
cdq
int3
mov
dec
lahf
imul
sbb
cdq
adc
rcr
xchg
pop
inc
sbb
or
mov
or
les
fidiv
int
cmps
sbb
mov
adc
or
lods
mov
push
adc
push
into
in
adc
fstp
rol
movs
inc
jcxz
mov
pop
stc
gs
cmp
cmp
out
push
sbb
(bad)
retf
punpckhwd
in
push
jnp
retf
fcomp
test
fbstp
aad
test
pusha
and
jnp
mov
(bad)
cmc
xchg
xchg
sub
fimul
ja
add
iret
dec
repz
push
sub
mov
add
add
outs
push
mov
cmp
sub
push
(bad)
pop
mov
lods
push
xchg
not
sar
mov
shl
(bad)
repnz
rcr
ja
push
hlt
push
jo
cs
cmp
jo
jmp
sub
cmp
fdiv
popa
jge
inc
sub
dec
push
imul
push
dec
mov
sahf
sbb
xor
sub
mov
icebp
adc
mov
rcr
cmp
mov
sar
xor
jmp
popf
mov
push
mov
dec
pusha
pop
mov
test
and
pop
mov
sub
dec
dec
or
imul
jle
lea
cmp
daa
sar
mov
push
nop
mov
movs
in
test
add
push
push
into
aad
test
dec
in
aaa
sti
add
stc
arpl
add
dec
pop
mov
xchg
and
adc
fld
jae
hlt
xchg
push
inc
rcr
enter
std
jns
loope
xor
mov
and
daa
and
pop
scas
xchg
sbb
outs
repz
sub
or
repz
jb
push
pop
int3
mov
fimul
or
imul
xchg
aaa
loopne
mov
or
push
sub
push
(bad)
aad
scas
add
dec
fistp
imul
cdq
std
pop
push
cli
call
sti
jmp
add
outs
sbb
iret
loop
mov
aad
data16
test
mov
jl
imul
das
jnp
push
int3
enter
push
shl
retf
xadd
int
aaa
pop
sub
je
aaa
jmp
adc
ja
jns
mov
rcr
sbb
in
sbb
adc
or
mov
xor
cmp
test
xchg
inc
repnz
fisubr
xchg
pop
push
inc
xlat
icebp
imul
push
xchg
aas
mov
sub
test
ins
or
loope
add
out
push
gs
or
ret
xchg
sub
sti
popf
inc
push
aam
(bad)
fwait
push
shl
rcr
ins
adc
xor
jle
pop
jne
ds
test
and
sbb
cli
and
fild
ins
and
repz
dec
dec
or
popf
push
sbb
dec
shl
and
dec
push
xchg
push
daa
cmp
xor
xchg
fild
cmp
ss
pushf
adc
enter
push
mov
shr
mov
push
xchg
sub
xchg
arpl
add
mov
push
(bad)
rcr
sbb
jae
mov
fistp
dec
fsubr
adc
xor
add
or
inc
jns
rcr
mov
les
pusha
repz
test
mov
xchg
xchg
push
rcr
inc
imul
movs
adc
fcom
inc
xlat
xchg
dec
fstp
daa
retf
mov
add
mov
dec
aad
mov
pop
push
pop
hlt
push
xchg
jge
in
call
ins
pusha
in
daa
mov
fwait
cmp
pop
jecxz
fisub
leave
jmp
pop
cmp
xchg
push
(bad)
mov
xor
ins
gs
cmps
std
jae
jge
test
mov
(bad)
jns
shr
aam
aam
jae
lods
jge
xchg
stc
inc
out
push
inc
sbb
popf
sub
cmp
mov
(bad)
call
fist
sbb
popa
pusha
jp
fcomp
mov
imul
mov
mov
sub
lods
loop
and
pop
or
sbb
aad
jg
shr
int
dec
or
inc
xchg
xchg
or
xchg
outs
(bad)
daa
adc
jmp
aad
pop
jbe
inc
mov
dec
push
jne
xchg
nop
push
rcr
xor
jmp
or
pop
sti
lock
ror
bound
ins
jl
outs
leave
loopne
jmp
enter
sbb
add
inc
xchg
ret
push
imul
lods
into
icebp
cmp
sti
mov
es
cmc
data16
ss
je
lods
fs
in
mov
(bad)
ja
xlat
xor
push
dec
test
sub
cmp
loope
rcl
mov
jge
sub
or
jmp
fmulp
les
mov
ja
inc
cmp
into
push
push
pop
mov
stos
mov
pop
xor
and
rcl
mov
jmp
inc
mov
arpl
mov
xor
ret
xor
inc
jns
xor
rcr
cmp
xchg
mov
add
xchg
lods
inc
std
aad
fcomp
dec
sar
cdq
pusha
jb
retf
xchg
jbe
mov
mov
cmp
sbb
fldenv
cmp
sbb
scas
data16
or
in
xor
add
sub
inc
movs
jle
or
mov
stc
ds
sub
mov
imul
mov
xchg
leave
mov
sub
cmp
push
sbb
xor
lds
out
scas
(bad)
jg
int
sbb
pushf
xor
pop
or
stc
push
mov
repnz
cmp
sbb
inc
sbb
jmp
data16
test
je
mov
or
fcomp
fcmovnb
cmp
fwait
jbe
mov
ja
les
jb
or
xlat
movs
pop
inc
clc
inc
mov
dec
int3
cmp
lea
cli
cli
arpl
push
das
push
push
ret
lahf
jmp
cmp
lds
xchg
pop
xchg
cmp
(bad)
popa
inc
dec
adc
mov
mov
sbb
mov
lahf
pushf
imul
mov
call
pop
mov
cld
aas
bound
pushf
call
outs
add
mov
mov
shr
bound
cmps
jmp
jecxz
xor
ss
fdiv
lods
jbe
sub
imul
jne
out
and
push
inc
rcr
dec
adc
mov
lahf
jne
add
je
adc
xor
mov
pop
(bad)
pop
in
dec
es
cld
jl
test
and
pushf
mov
ja
fidivr
adc
out
les
into
add
sahf
es
adc
push
xor
mov
xor
cmc
je
stos
sbb
jle
or
test
add
or
outs
pop
mov
push
dec
mov
mov
loopne
fimul
loope
xor
or
ins
pop
sbb
call
bound
mov
ret
cmp
lds
xchg
ins
dec
mov
add
inc
in
or
fadd
sbb
inc
lea
sub
and
add
loope
ret
outs
add
xchg
push
into
(bad)
fild
push
cmp
mov
xlat
push
test
lods
sub
aam
xchg
pop
push
lods
aam
jge
(bad)
cmp
ss
hlt
cs
sbb
in
mov
sbb
xor
jmp
mov
outs
push
mov
stos
xor
pop
loop
lock
or
adc
jp
(bad)
aam
pop
outs
pop
xchg
sub
push
lock
and
add
cmp
js
call
adc
pushf
in
inc
mov
jnp
mov
pushf
lahf
out
push
fldcw
lods
pop
push
cmp
fdivr
dec
in
dec
and
and
addr16
into
daa
lea
sbb
mov
clc
jnp
add
xor
jle
retf
mov
dec
cmp
clc
movs
or
pop
mov
jecxz
cs
dec
out
lea
popa
mov
mov
xor
pop
jmp
test
lea
ret
and
js
jbe
and
pushf
or
pop
and
mov
push
dec
and
test
ficomp
gs
pop
mov
sbb
xchg
data16
pop
fisubr
mov
imul
cmps
jnp
jmp
adc
push
jmp
inc
leave
(bad)
xor
push
loop
xor
ret
mov
cld
mov
cmp
jmp
dec
pop
fld
mov
ret
outs
push
cmp
lock
and
pop
adc
std
imul
movs
bound
mov
les
(bad)
movs
ja
push
ret
hlt
and
fld
lods
sbb
xor
mov
jne
outs
cmps
push
inc
test
xchg
add
jp
push
add
xchg
ret
sbb
lea
and
jmp
mov
call
mov
test
ret
dec
ficom
inc
fstp
fdiv
outs
xchg
dec
movs
push
and
jmp
dec
xchg
sbb
pop
pop
push
scas
ins
(bad)
mov
push
mov
repz
ror
(bad)
inc
loopne
sub
mov
xor
test
cld
rcr
dec
dec
or
dec
ret
mov
adc
mov
jmp
aam
ret
hlt
rcl
inc
inc
jne
add
retf
not
mov
enter
aad
test
fwait
push
add
scas
iret
ja
pushf
cli
test
cmp
xor
loopne
sbb
mov
fimul
or
lock
or
lahf
test
pop
add
cwde
mov
mov
arpl
jmp
in
imul
out
arpl
cli
aam
bound
mov
rcl
loop
or
jge
add
or
sub
nop
dec
(bad)
cwde
aaa
sbb
dec
imul
and
addr16
or
adc
rcl
adc
mov
sub
jl
mov
cli
xchg
loop
jb
add
push
pop
push
mov
cdq
xor
call
mov
ss
dec
in
push
mov
jbe
aas
sub
xchg
imul
mov
cs
xor
jno
xchg
jmp
add
xchg
jo
xor
scas
add
retf
inc
mov
sbb
inc
inc
add
or
test
popf
xchg
bound
push
add
or
jl
dec
cmp
cli
pop
ret
pushf
into
loopne
(bad)
mov
and
pop
int
inc
fld
cmps
push
jnp
cmp
imul
xchg
hlt
jo
lods
imul
and
(bad)
movs
repz
les
or
sahf
push
pop
mov
dec
lds
xor
mov
xor
imul
cli
in
outs
scas
mov
fadd
cmp
dec
lods
cmp
mov
mov
stos
(bad)
dec
xchg
push
adc
add
or
in
cmp
adc
addr16
mov
mov
pop
fistp
dec
ror
xchg
xor
push
loope
aam
cmc
idiv
mov
fild
cmp
out
push
shl
inc
repnz
jbe
repnz
jmp
add
repnz
jmp
cmp
hlt
add
inc
out
ins
and
gs
inc
cmp
and
dec
sbb
cwde
and
rol
lock
sbb
mov
mov
pushf
mov
mov
test
clc
mov
jecxz
pop
mov
sbb
adc
add
push
movs
sbb
jnp
xchg
cmp
js
fisttp
inc
push
mov
sbb
push
sbb
mov
in
fdiv
neg
int
cmp
or
xlat
repnz
test
(bad)
mov
shl
mov
dec
dec
xchg
dec
cmc
pop
fst
mov
xor
mov
popa
out
cwde
dec
scas
sub
mov
push
jns
aas
inc
add
scas
int3
xchg
clc
push
sub
xor
sbb
data16
in
stc
xchg
shr
mov
popf
jbe
outs
mov
cmp
ror
ins
mov
pop
jg
dec
pop
dec
(bad)
in
popa
stos
aam
sub
mov
std
(bad)
pop
jbe
ss
pop
call
outs
xor
int3
inc
sbb
les
jecxz
sbb
int3
push
cmp
jae
jg
push
out
push
sbb
inc
stos
pushf
jno
sahf
or
popa
pushf
call
jmp
push
jp
mov
(bad)
int
daa
pop
packuswb
pop
sub
pusha
jae
aam
pop
and
aam
ins
stc
adc
and
mov
das
push
dec
sar
xchg
aam
and
dec
test
in
dec
cwde
fidivr
pop
sub
nop
mov
ror
mov
movs
movs
scas
inc
sub
xor
es
push
daa
ret
jnp
jecxz
inc
mov
addr16
in
loop
push
cmp
mov
dec
clc
add
mov
fcmovnbe
xor
fwait
jmp
in
loop
mov
cs
sub
cmps
js
xchg
rcr
add
add
out
cmp
daa
ins
pushf
inc
inc
sub
jb
scas
in
and
shr
cmp
mov
pop
shl
cmp
pop
mov
or
mov
inc
test
push
sbb
or
mov
inc
cmps
scas
out
cwde
cdq
loopne
outs
jb
seto
mov
sar
out
cmp
mov
or
inc
aam
ja
and
(bad)
loop
cmp
mov
std
jno
jne
push
sub
mov
call
mov
mov
mov
or
shr
fisub
xchg
ret
loopne
mov
inc
ss
sub
dec
cmp
cli
jb
mov
test
fisttp
shr
(bad)
aam
mov
mov
sahf
mul
retf
jno
lods
scas
xor
and
mov
pop
mov
jmp
fdivp
and
mov
fistp
push
test
fldcw
ret
adc
fnop
mov
cs
fisttp
inc
je
jle
rol
mov
inc
mov
add
movs
push
pop
xlat
dec
cmp
call
(bad)
fst
and
mov
or
mov
adc
retf
retf
xchg
arpl
(bad)
xchg
cmp
mov
call
sbb
push
daa
cmp
test
test
jge
add
jb
lods
dec
sbb
popf
arpl
shr
jne
push
xchg
das
je
jge
adc
inc
add
push
sti
sbb
cwde
movs
scas
pop
push
jnp
lods
imul
enter
mov
fdiv
xor
loope
into
cwde
stos
(bad)
nop
aam
ret
xchg
mov
sahf
popa
cmp
inc
movs
sahf
adc
imul
bound
pusha
mov
fild
mov
shl
pop
mov
ds
(bad)
pusha
mov
psrlq
pushf
dec
add
cmp
loopne
neg
mov
push
das
retf
cmp
(bad)
daa
ret
sub
adc
dec
mov
jge
in
add
cmps
push
push
mov
bound
scas
jecxz
push
mov
icebp
es
jno
enter
push
fwait
leave
pop
int
das
push
pop
sti
cwde
dec
mov
xchg
movs
fiadd
or
sbb
sbb
sahf
fcomip
dec
inc
jmp
push
cmp
pusha
(bad)
loop
(bad)
pop
mov
daa
jge
or
mov
(bad)
mov
pop
je
jecxz
popa
addr16
mov
or
std
fwait
push
xchg
mov
mov
pushf
ins
iret
cmc
xchg
add
jne
mov
jl
mov
pop
dec
lahf
retf
mov
mov
pop
inc
idiv
stos
jo
cmp
imul
test
sbb
outs
jbe
or
not
adc
addr16
push
les
xchg
push
xchg
push
aad
mov
dec
imul
mov
cmp
repz
outs
mov
mov
repnz
xchg
add
mov
dec
xor
add
enter
lds
mov
(bad)
fwait
push
jecxz
xor
add
aam
cmps
jge
push
aam
(bad)
push
pop
out
(bad)
(bad)
div
inc
sti
jecxz
mov
cmp
stc
jmp
inc
xchg
pusha
inc
js
xchg
fldenv
push
sbb
or
in
pop
movs
sub
ins
(bad)
mov
fs
icebp
xchg
ins
cdq
push
push
xlat
jb
test
cmp
jp
xchg
xchg
jmp
xchg
cmps
push
sub
mov
sbb
push
dec
xchg
(bad)
and
mov
les
adc
or
outs
push
cmp
dec
cmp
(bad)
vshufpd
gs
out
sbb
sbb
jnp
pop
mov
sbb
inc
push
mov
push
in
mov
les
je
test
and
sub
stos
mov
test
out
popf
out
sbb
cmp
ss
sbb
(bad)
and
dec
xacquire
mov
loopne
lods
icebp
fidiv
out
pop
(bad)
(bad)
mov
cmps
cmps
and
aad
xchg
jl
pop
or
sbb
iret
test
retf
jg
adc
ret
dec
je
adc
adc
js
fisttp
adc
mov
rcr
sbb
(bad)
fisub
pop
rol
clc
sub
stc
aam
dec
daa
lods
push
mov
(bad)
in
enter
dec
in
call
and
jg
ficom
fdivr
mov
and
xor
cld
(bad)
rcl
sub
sbb
cli
(bad)
push
clc
clc
and
mov
dec
xchg
retf
sbb
xchg
xchg
cmp
mov
jmp
aas
test
stc
dec
jp
mov
adc
lock
or
add
add
(bad)
pop
mov
into
xchg
pusha
das
jg
leave
xor
jo
xchg
xchg
cld
icebp
inc
fwait
loopne
pop
scas
loopne
pusha
pmullw
mov
cmc
xchg
popf
xlat
int3
and
mov
xor
fwait
stos
gs
ror
adc
leave
out
pop
jnp
ds
leave
pop
dec
loop
xor
lea
dec
clc
stos
cmp
ficom
js
clc
inc
xor
(bad)
cmc
js
sub
cli
repnz
(bad)
mov
(bad)
xchg
push
rcr
fmulp
int3
push
repz
pusha
aad
fs
cld
sub
pop
out
repnz
fild
sub
aam
aaa
movs
push
daa
pop
cmps
clc
jo
out
test
in
call
or
ins
mov
pop
mov
popf
adc
or
aad
dec
push
ja
add
adc
sbb
jl
inc
icebp
mov
xchg
lahf
jae
iret
pop
jbe
mov
(bad)
jne
xor
ret
adc
add
fst
mov
jo
inc
movs
lods
inc
gs
mov
loope
push
jns
inc
or
inc
nop
ins
stos
mov
inc
das
and
mov
push
test
scas
push
push
mov
mov
xchg
test
bound
aas
xchg
jge
push
xchg
sbb
mov
fidivr
fisub
lods
lea
gs
jns
cmp
mov
cmc
or
push
out
out
fild
sub
add
xor
sub
pop
dec
mov
das
aaa
and
add
int3
daa
cmps
(bad)
cmp
and
sbb
scas
in
loop
inc
clc
ja
or
mov
jno
shr
bound
cmps
push
test
(bad)
hlt
and
(bad)
lock
and
add
int3
test
std
(bad)
and
fdivr
sub
push
and
test
or
sbb
jg
div
sbb
or
in
(bad)
in
jb
fidiv
sub
xor
sbb
xlat
aaa
xchg
adc
or
adc
(bad)
jae
jo
dec
scas
lahf
out
sbb
dec
test
or
mov
rcr
mov
int
mov
mov
mov
in
ret
sti
mov
leave
pop
xor
xchg
push
dec
sbb
movs
cmp
sub
stos
jecxz
sub
fimul
cmp
sub
clc
sbb
cli
lock
push
arpl
or
cmp
xor
add
xor
(bad)
push
stos
fstp
shl
inc
adc
pop
test
outs
sub
inc
lods
push
scas
mov
test
rcl
push
sbb
cmp
aas
inc
add
aaa
xor
leave
fcom
retf
mov
xor
into
mov
scas
inc
scas
dec
jge
mov
in
out
mov
xor
outs
mov
cdq
and
(bad)
outs
je
das
sub
add
jmp
jmp
pop
imul
into
mov
sub
pop
pushf
dec
scas
pop
xchg
pop
push
test
call
out
adc
xchg
inc
mov
adc
mul
xor
jns
cmp
push
or
test
and
pop
aad
cdq
popa
mov
icebp
bound
dec
add
in
rcr
mov
jb
xor
pop
push
xchg
rol
stos
fwait
test
mov
into
and
out
cmp
sub
loope
push
xchg
pushf
sbb
shl
ins
cmps
xor
out
sub
das
cld
sar
call
jle
sub
xchg
pop
in
icebp
inc
mov
loope
(bad)
aam
inc
movs
frstor
pop
mov
outs
pop
inc
iret
and
test
enter
mov
fldenv
push
push
or
and
mov
fstp
xor
sbb
adc
(bad)
ja
jmp
mov
mov
cmp
jb
sbb
loop
cli
cmps
js
shr
mov
in
mov
aaa
inc
outs
ror
popa
mov
sub
ret
push
dec
gs
pop
cmc
stos
and
add
into
cmp
jnp
(bad)
(bad)
adc
int
cmp
mov
sub
das
xchg
jmp
and
int3
and
mov
sub
ja
int3
lds
sar
pop
sbb
mov
mov
nop
mov
sahf
ret
ja
std
fsubr
dec
(bad)
(bad)
cmp
cs
jbe
loop
test
mov
scas
xchg
push
clc
and
adc
(bad)
popf
xchg
add
sub
jmp
or
test
icebp
xor
xor
dec
pmuludq
mov
mov
sahf
fisttp
imul
fnsave
mov
inc
popf
arpl
xchg
mov
enter
stos
mov
fs
push
dec
or
aad
(bad)
je
iret
dec
fs
mov
popa
test
jg
scas
sub
mov
aaa
lea
and
add
mov
mov
xchg
les
pop
aas
movs
fnstsw
aam
push
cs
loope
ss
ja
add
pusha
and
add
popf
jl
aam
mov
cli
sub
and
jg
add
pushf
dec
mov
mov
xchg
rcl
pop
sub
cs
std
xor
repnz
imul
jno
sub
aas
arpl
(bad)
jnp
hlt
push
mov
idiv
and
into
jbe
hlt
int3
js
test
jae
lock
mov
movsx
dec
dec
int
cld
loopne
sbb
mov
movs
mov
sbb
mov
popf
mov
popa
scas
cdq
(bad)
jno
sub
retf
inc
gs
jmp
mov
xor
ror
mov
out
add
mov
or
clc
inc
nop
sbb
mov
mov
sbb
fisub
movs
sub
jmp
imul
mov
and
jmp
mov
push
sub
shl
bnd
adc
imul
jmp
cld
inc
sub
mov
jecxz
pop
loop
aad
call
jb
dec
clc
je
fwait
xor
or
mov
inc
cmp
mov
fwait
mov
adc
ins
ret
and
cmp
push
sub
mov
push
sub
sbb
xchg
pop
push
sqrtps
div
cmp
bound
stos
pop
ja
push
sahf
ficom
jne
push
jmp
(bad)
ins
sub
push
addr16
sub
js
(bad)
bound
mov
(bad)
test
loopne
mov
icebp
xchg
add
or
jae
(bad)
pop
pop
pop
push
sub
mov
sub
dec
jmp
fs
fstp
push
mov
les
sub
rcr
outs
loopne
test
ret
mov
dec
jbe
test
pusha
pop
sbb
sub
je
jmp
and
mov
jno
pop
mov
lods
pop
movs
mov
sub
mov
data16
xchg
pop
dec
stos
mov
sbb
sbb
or
push
fstp
push
cld
and
ror
(bad)
(bad)
fwait
add
fs
or
out
mov
and
push
cmps
arpl
jne
ds
pusha
inc
sub
adc
mov
inc
cmps
dec
mov
pop
fild
jbe
add
jl
cmps
aad
aad
jge
xchg
xor
sub
fmulp
inc
push
mov
adc
pop
xor
rcl
push
daa
cwde
cmc
rcr
xchg
push
fstp
add
or
ror
retf
sbb
stos
fbld
push
movs
sub
loop
push
lods
fwait
mov
fwait
hlt
xchg
ret
sti
fsub
scas
push
retf
mov
icebp
sub
enter
in
jecxz
mov
mov
mov
jge
jbe
retf
stos
repz
or
sar
jbe
mov
mov
dec
xchg
pop
push
movs
je
push
into
test
pop
mov
push
inc
fdiv
loopne
fdiv
fldcw
daa
jmp
stos
nop
pop
inc
mov
push
xor
retf
push
dec
mov
jne
and
sbb
add
lahf
daa
das
xchg
dec
lahf
cwde
mov
or
mov
adc
mov
cmp
lods
push
bound
mov
dec
imul
mov
mov
aaa
fisubr
lods
lods
rcr
mov
mov
loope
adc
mov
in
adc
mov
add
cmp
sbb
loop
in
pop
aas
ds
out
sub
or
add
loopne
addr16
cmp
scas
es
mov
std
pop
cmp
les
xchg
pop
test
xchg
out
fwait
cwde
jnp
das
aam
mov
push
cld
sahf
movs
ds
cmps
int3
popf
nop
jb
pusha
and
dec
lods
sbb
test
or
bswap
mov
cld
mov
cld
ror
fs
sub
sti
int3
and
nop
cmp
popf
dec
clc
xchg
rcl
xor
sar
sbb
test
call
lea
cmp
scas
xchg
xchg
ds
cmp
fisubr
pop
rol
rcl
ins
(bad)
mov
dec
aad
cmps
fisubr
mov
push
jg
jns
cdq
push
pushf
or
fcomp
xor
mov
jnp
adc
push
loop
dec
mov
scas
dec
xchg
out
jmp
jp
push
ficom
and
mov
cli
or
cwde
xchg
mov
or
movs
inc
cmp
fdiv
aas
retf
cmp
xchg
pop
mov
in
mov
push
lods
push
push
jl
add
jg
fwait
and
imul
xor
test
aas
add
hlt
dec
int3
pop
std
cmp
mov
mov
dec
or
jmp
mov
xchg
sub
(bad)
mov
stos
mov
fwait
mov
push
xor
add
fsubr
mov
adc
mov
dec
jge
jo
inc
dec
outs
fcmovnu
xchg
in
shl
neg
push
cmps
mov
mov
int3
mov
int
xor
test
fadd
add
hlt
fisubr
xor
ret
scas
xor
clc
icebp
popa
dec
fnstsw
sbb
xchg
adc
ins
dec
arpl
(bad)
adc
clc
push
inc
or
gs
ret
mov
mov
mov
loopne
aam
pop
(bad)
add
retf
in
retf
cmp
xchg
jg
cld
movs
sub
clc
or
loopne
sahf
adc
dec
xor
addr16
or
jmp
popa
sbb
test
pop
push
test
dec
cwde
mov
cmp
repnz
or
cmp
pop
push
inc
mul
repnz
jmp
and
jo
mov
cmps
inc
scas
cmp
and
xor
pop
out
inc
adc
add
dec
push
add
ret
mov
shl
adc
mov
pop
ss
ss
cs
enter
outs
imul
bound
mov
cmp
or
outs
add
pop
mov
bound
movs
push
mov
sbb
mov
sub
and
cmp
inc
dec
aaa
inc
or
sub
adc
push
inc
jmp
cs
fadd
test
es
in
push
retf
bound
mov
out
fldenv
clc
pop
inc
mov
imul
ds
fwait
or
inc
xchg
mov
int3
push
fcmovb
outs
mov
addr16
pop
test
fidiv
cmp
shl
add
fs
cwde
lods
and
shl
and
std
add
icebp
xchg
mov
ins
sub
out
aad
stc
test
loopne
or
push
sahf
hlt
pop
stos
cs
into
lahf
jl
push
bound
mov
das
dec
ins
mov
jg
push
int
inc
sbb
mov
sub
lea
add
psadbw
push
push
je
push
mov
fs
inc
pop
dec
inc
cs
ret
shl
adc
xor
pop
dec
cdq
(bad)
cmp
and
test
or
loope
js
mov
inc
sahf
in
adc
pusha
jne
sbb
call
loope
add
mov
mov
adc
sub
mov
jns
mov
(bad)
dec
adc
mov
mov
mov
push
scas
and
mov
jbe
pop
in
pop
or
xchg
mov
bound
imul
mov
mov
jle
or
adc
movs
mov
aaa
mov
xchg
iret
int3
push
pop
adc
inc
dec
xchg
into
mov
std
sbb
shr
stos
call
xchg
ret
aaa
in
sub
cmps
arpl
pusha
into
push
inc
das
push
ss
aas
js
and
iret
xchg
and
scas
fist
or
fcomi
into
arpl
jno
shl
add
jne
fmul
lods
fild
sar
fisub
push
sahf
cmp
fwait
pop
jp
or
jne
(bad)
mov
fmul
dec
xchg
gs
(bad)
pop
imul
(bad)
scas
pop
xchg
pop
std
sub
test
jbe
jecxz
mov
cmp
dec
mov
je
mov
in
js
test
mov
pop
in
bound
pop
jmp
mov
out
int
fld
aam
pop
fsubr
cmp
mov
(bad)
in
aas
mov
inc
dec
adc
pop
jle
ror
iret
jge
pop
int3
mov
nop
mov
cmc
mov
int
cmp
retf
pop
xor
stc
pop
cli
pop
repnz
xchg
mov
pop
mov
xchg
retf
mov
ror
cwde
sub
add
jmp
and
movs
xchg
iret
(bad)
sbb
lds
add
push
lock
jmp
loope
pop
push
in
inc
mov
cmp
ret
dec
mov
std
ja
xchg
dec
adc
xchg
mov
mov
fisub
cmp
pop
pop
mov
ret
loope
mov
in
fwait
push
fisubr
call
pop
int3
clc
inc
push
aas
cmp
jmp
inc
or
loope
push
adc
pusha
lahf
je
cmps
inc
in
ror
ds
mov
push
dec
mov
inc
(bad)
sbb
mov
daa
cmp
sub
dec
xchg
js
jno
pop
bound
int3
fnstenv
ds
or
push
call
sti
pop
out
outs
mov
(bad)
dec
in
jno
inc
imul
mov
lahf
addr16
cmp
enter
out
inc
je
(bad)
ror
cmp
(bad)
ss
popf
jle
sub
movs
mov
inc
dec
out
jbe
mov
cmp
or
fwait
movs
jbe
popf
mov
push
test
cvttps2pi
pop
mov
cmp
mov
leave
sub
stos
inc
cmp
shr
pop
mov
stos
inc
ret
test
rcl
icebp
jne
jmp
cmp
mov
ret
stc
js
push
aas
(bad)
ror
xchg
scas
dec
jmp
mov
jp
sahf
add
out
mov
fist
jl
mov
jne
jo
sub
mov
ret
(bad)
cdq
loope
(bad)
out
xchg
fadd
test
std
xchg
add
add
icebp
mov
(bad)
inc
popf
test
aad
mov
cwde
les
mov
not
adc
mov
mov
mov
das
(bad)
ficom
jge
adc
mov
push
stos
jle
test
and
and
adc
sub
scas
loope
aas
inc
add
adc
pop
into
scas
into
xor
aam
scas
xchg
xor
xor
sbb
mov
outs
aad
inc
cmp
faddp
xor
or
add
call
call
or
ds
push
jne
adc
shr
pop
or
pop
mov
xchg
xchg
inc
inc
into
(bad)
xor
inc
fwait
ins
push
cmc
scas
out
pop
enter
xchg
xor
dec
iret
or
push
lock
mov
cmp
jge
cmp
sub
push
pop
pop
sti
add
xchg
jmp
mov
mov
sbb
mov
addr16
push
cmp
mov
bound
pop
enter
and
push
fs
cdq
xchg
mov
xor
add
jmp
jns
fst
call
repnz
or
dec
adc
lahf
lods
mov
mov
enter
pop
repz
inc
popa
test
mov
jns
out
test
and
or
out
mov
cld
aas
inc
xchg
sbb
and
cmp
out
mov
add
pop
dec
sahf
leave
dec
rcl
push
mov
clc
inc
jl
inc
mov
dec
pop
movntq
fwait
sbb
and
mov
mov
mov
ja
adc
ds
sbb
add
test
mov
int
jmp
out
imul
jp
sub
clc
jg
push
out
pop
ficomp
int3
retf
jecxz
xchg
adc
mov
mov
fwait
outs
fmul
fild
int3
retf
shr
push
js
rcl
mov
bound
xchg
retf
sbb
aad
sbb
(bad)
out
cmp
mov
sahf
inc
push
adc
xor
test
pop
push
loopne
jne
mov
adc
jp
or
inc
jg
lea
mov
add
sbb
mov
pusha
push
cmp
test
push
sub
dec
mov
icebp
pop
lds
mov
or
pause
adc
cdq
mov
aas
test
cdq
(bad)
rcl
add
fdivr
pop
xlat
shr
push
xchg
pop
push
shl
mov
out
sub
js
sbb
test
push
cmps
or
aad
sbb
sbb
jmp
cmp
mov
jmp
xor
retf
iret
xchg
and
jge
out
add
fs
fisubr
or
jcxz
push
xor
dec
sub
repz
loopne
xor
int
mov
retf
fst
dec
retf
stos
enter
je
and
in
jge
shr
shr
mov
aad
test
jge
pop
or
inc
sub
scas
xchg
movs
jns
in
cmp
push
dec
pushf
scas
sbb
popa
pop
loopne
and
push
dec
or
lds
ror
push
add
int
leave
mov
test
(bad)
fdiv
and
sub
mov
inc
retf
test
aad
and
pop
outs
daa
pop
fsub
movs
adc
fs
out
inc
pop
loope
or
or
outs
or
push
mov
imul
inc
pop
das
loopne
(bad)
adc
dec
aaa
rcr
stos
loope
dec
call
test
mov
(bad)
push
icebp
jbe
call
ins
sub
and
jge
mov
inc
cmp
popf
jp
test
(bad)
jl
jne
imul
cmps
(bad)
nop
adc
fsubr
jmp
adc
and
call
jecxz
fnstsw
mov
jmp
push
pop
inc
pushf
xor
push
push
mov
mov
aad
inc
jmp
pop
adc
sbb
push
bound
inc
aaa
idiv
and
and
scas
sub
push
cmp
xchg
into
loope
xchg
fiadd
jge
icebp
shl
lahf
mov
mov
jl
out
jmp
arpl
push
idiv
nop
jg
add
sbb
mov
not
das
pop
push
or
sbb
mov
(bad)
lahf
adc
xchg
mov
(bad)
mov
stos
aaa
cld
add
std
pop
mov
add
outs
jns
loop
cld
jb
mov
(bad)
jae
jge
mov
dec
out
mov
shl
test
push
das
mov
int3
sub
mov
scas
fstp
popa
adc
cmp
mov
mov
jno
xchg
into
movs
test
push
std
mov
hlt
or
sub
xor
xor
not
cmc
(bad)
sbb
addr16
push
call
jb
sbb
ss
dec
add
push
sub
stos
inc
push
fldenv
add
mov
mov
stos
into
retf
xchg
mov
in
push
and
and
pop
div
xor
push
jmp
inc
mov
pop
mov
out
pushf
leave
xchg
ror
sbb
retf
pop
leave
sub
lds
rcr
push
sbb
push
fimul
seto
mov
inc
cwde
lea
outs
pop
stc
xchg
cmp
bound
icebp
pop
jo
arpl
sbb
outs
push
inc
enter
(bad)
pop
add
rcr
bound
daa
loop
loope
popf
lock
jge
sahf
out
test
in
imul
scas
popa
outs
push
ss
(bad)
nop
nop
js
xor
push
mov
cli
xor
mov
xchg
add
call
jmp
pop
test
pop
xchg
sbb
xchg
std
(bad)
retf
xchg
push
cli
lea
cmp
scas
faddp
jne
imul
daa
inc
pop
sub
jae
lea
call
test
js
mov
aas
jecxz
aad
cmp
clc
sbb
adc
lahf
push
jge
pop
ret
gs
popf
push
pop
lahf
mov
sbb
adc
cli
jo
jmp
push
cwde
cmc
imul
mov
aaa
pop
rol
mov
retf
xchg
xchg
loop
jmp
sahf
sub
(bad)
call
js
mov
and
mov
mov
mov
fwait
arpl
cli
rcl
and
std
retf
je
jb
push
adc
fucomip
shl
cmp
and
sbb
cli
sub
jo
sbb
push
movs
sub
lods
inc
adc
xor
cmp
ror
add
jo
adc
loope
shl
clc
int3
mov
sbb
lahf
imul
aaa
stc
aaa
ins
jb
shl
sbb
es
int
fisub
pop
sbb
into
jecxz
pop
cmp
xchg
push
inc
push
out
loope
call
push
xor
jae
push
inc
in
pop
pop
fidivr
pop
and
out
sbb
xchg
sbb
push
test
adc
push
in
pop
xlat
ss
xor
inc
daa
arpl
scas
adc
push
mov
into
mov
jge
(bad)
pop
bnd
jae
inc
xchg
sub
lds
mov
inc
into
mul
js
jmp
sub
(bad)
mov
(bad)
out
or
sub
jne
std
ficomp
mov
(bad)
dec
or
in
and
mul
cwde
out
cmps
push
ficomp
mov
int
push
xor
xchg
loope
adc
xchg
dec
xlat
adc
popf
(bad)
inc
push
sbb
and
dec
mov
ret
cdq
inc
mov
int3
test
lea
xchg
cmp
pop
push
into
cs
cli
and
xor
jne
and
loopne
push
dec
and
les
addr16
inc
sub
sbb
aad
std
push
jle
xchg
and
retf
out
push
xchg
std
inc
xor
std
adc
in
cdq
leave
pop
or
xchg
or
or
fst
jl
mov
outs
xchg
inc
push
xor
std
adc
mov
or
mov
pop
sbb
xchg
out
add
sbb
clc
cmps
call
in
xchg
push
popa
cdq
cmp
test
daa
fidivr
and
out
sbb
dec
xchg
shr
mov
push
bound
stc
cwde
arpl
mov
mov
xchg
push
sahf
push
(bad)
xlat
jmp
mov
inc
sbb
jb
xchg
rcl
pop
mov
int
pop
xlat
out
test
scas
(bad)
in
xor
mov
pusha
jl
xor
fwait
retf
and
out
test
xor
sbb
dec
mov
scas
popa
sbb
gs
push
jecxz
js
and
push
adc
xlat
mov
lods
mov
sbb
add
adc
adc
mov
enter
xor
addr16
leave
pop
adc
push
in
xchg
sub
sbb
int
jnp
call
movs
fstp
mov
cmp
add
mov
jno
je
and
pop
and
loop
pop
dec
xor
cmp
adc
jmp
inc
xchg
jge
aad
ret
jbe
fisubr
cmp
push
dec
mov
jae
and
xlat
cmp
stos
jne
adc
fisttp
enter
pushw
shl
and
mov
imul
cmp
jg
xchg
fistp
mov
xchg
repnz
mov
jp
lahf
adc
call
imul
push
mov
cmps
dec
inc
inc
pop
scas
mov
add
enter
push
cli
popf
ins
ror
pop
sub
jp
or
xchg
(bad)
sub
cmc
sub
fnstsw
xchg
xlat
movs
imul
jg
xor
xor
adc
or
loopne
arpl
div
add
imul
mov
or
fild
mov
push
aaa
and
daa
outs
cmp
ja
fcmovbe
sbb
inc
movs
ret
mov
jne
jmp
aad
js
mov
aam
stc
cmc
jg
(bad)
cmp
imul
adc
lds
mov
ins
mov
add
in
in
cli
jne
xchg
sti
hlt
xchg
rol
cmp
inc
jb
call
cmp
mov
js
xor
mov
sbb
or
mov
push
sbb
push
rcl
cld
aad
dec
push
pop
xor
fcmovnu
out
mov
add
sbb
shr
mov
pop
cli
mov
leave
data16
cld
pop
or
fiadd
cs
ds
inc
outs
jecxz
sub
mov
jno
test
dec
inc
dec
and
or
adc
mov
rcl
loop
pop
mov
bound
fnsave
mov
rcl
or
mov
hlt
xchg
jle
je
neg
and
pop
jg
pop
cmp
test
(bad)
out
sbb
and
mov
push
mov
int3
xchg
lock
xor
sub
push
mov
inc
call
add
mul
mov
repnz
mov
in
aaa
adc
psubq
jb
out
pop
sti
shl
push
mov
mov
or
repz
dec
aas
(bad)
sbb
aam
fnstsw
or
les
mov
retf
push
outs
xchg
add
xlat
loope
outs
pusha
xchg
jle
shl
push
adc
(bad)
inc
addr16
mov
or
sub
add
icebp
pop
jg
jp
jb
lahf
aaa
stc
stos
ret
adc
fiadd
icebp
loopne
sahf
jle
or
lds
addr16
mov
cmps
push
in
mov
push
rol
mov
enter
sbb
int
nop
add
xor
lea
sub
or
cmps
scas
dec
mov
inc
cmp
stos
sbb
jo
pop
shr
sub
repnz
and
shr
fsubr
repz
pusha
pop
gs
push
push
mov
jno
jmp
sub
arpl
dec
xchg
cmp
jle
outs
inc
jl
hlt
in
fisttp
push
fidivr
out
sbb
xchg
add
ror
sbb
inc
push
sub
jg
or
(bad)
xchg
xchg
mov
jno
(bad)
in
pop
push
mov
icebp
fs
jbe
pop
or
and
pop
fucom
sahf
cmc
popa
icebp
mov
mov
repnz
jb
inc
dec
and
jns
or
and
sbb
mov
cmp
lock
cmc
je
(bad)
jns
in
lea
and
pop
iret
rol
pop
inc
push
outs
lock
call
retf
cmps
or
int
push
mov
push
ins
outs
adc
bound
stos
cmp
lahf
jp
xlat
fdivr
and
mov
test
and
fild
fwait
cli
push
mov
test
gs
sbb
add
pushf
inc
inc
xor
aam
xor
or
ficomp
add
ins
sub
sbb
push
addr16
mov
push
les
mov
je
imul
dec
jecxz
and
push
mov
mov
repnz
aam
ja
jne
mov
lock
or
leave
or
inc
cmp
push
ror
push
mov
mov
push
js
and
addr16
push
jne
pop
fs
jle
dec
fucomp
cmps
popa
daa
and
aad
das
or
fsubp
sti
stos
jmp
xchg
in
mov
js
pop
cwde
out
sbb
(bad)
fwait
retf
cmc
dec
mov
xchg
test
and
dec
mov
xchg
(bad)
fnsave
lds
push
mov
mov
or
(bad)
test
or
adc
in
in
nop
xor
add
fdivr
inc
sbb
das
push
mov
cmp
dec
ja
imul
push
loop
cwde
pop
xchg
dec
fistp
in
int3
addr16
pop
vcmppd
pop
into
iret
jle
jbe
adc
in
xchg
mul
add
xor
in
mov
sub
pop
mov
fist
daa
arpl
or
fcomp
cwde
or
push
adc
pushf
shl
(bad)
jmp
sbb
add
xor
mov
sub
xlat
add
sub
pop
sub
jg
mov
hlt
test
jne
adc
push
push
xchg
test
out
jecxz
shr
mov
cdq
push
jmp
push
mov
data16
movs
sub
mov
push
inc
je
data16
mov
das
sbb
cwde
inc
add
fucomip
test
mov
jl
enter
int3
and
xor
pop
(bad)
push
lock
push
cmp
xor
pop
adc
dec
jg
ins
int3
sbb
fwait
jmp
(bad)
ror
fcmove
pop
cmp
mov
cmp
mov
rcl
sub
push
jge
call
and
dec
jge
push
cld
loop
pop
xchg
sbb
lahf
xchg
fnstsw
hlt
enter
jmp
clc
lods
outs
cmovge
std
inc
call
or
inc
jne
(bad)
push
jg
jae
and
jns
aaa
inc
cmp
(bad)
div
push
cdq
pop
cmp
std
dec
(bad)
lods
xchg
inc
stos
mov
adc
xchg
push
out
push
inc
xor
dec
jge
inc
push
loopne
lea
adc
fisub
lea
xchg
imul
movs
mov
and
cs
mov
call
and
push
cli
inc
mov
stos
inc
mov
dec
vphaddudq
dec
outs
das
xor
sbb
sti
sbb
addr16
arpl
dec
cmp
stos
push
mov
adc
mov
inc
cvtpi2ps
push
add
pop
jmp
jmp
pusha
jge
xchg
or
jne
scas
jl
and
mov
xchg
aas
leave
push
pop
jl
mov
pushf
add
stos
(bad)
stc
aad
int3
js
mov
fstp
push
outs
ins
cmps
arpl
jmp
aam
inc
imul
push
push
lods
inc
and
shr
pusha
jno
fistp
sbb
scas
int
cli
xchg
add
js
mov
aaa
lods
mov
repnz
sbb
lods
xor
pop
sub
(bad)
mov
es
les
and
and
adc
and
cld
xor
fimul
pusha
dec
lea
jno
mul
loop
fdivr
or
idiv
adc
scas
(bad)
aaa
add
ret
pusha
inc
arpl
sbb
sbb
adc
popf
mov
adc
fild
jmp
and
push
(bad)
shr
xor
outs
das
bound
pop
ds
push
js
js
scas
and
fld
adc
dec
add
bound
push
pop
sbb
lock
adc
popa
xchg
sahf
ror
popa
pushf
shr
adc
cmp
out
pop
xor
test
mov
sbb
adc
mov
add
push
and
test
daa
cmp
xchg
cmp
adc
jmp
cs
push
xlat
(bad)
(bad)
mov
std
push
fidiv
into
test
cmps
hlt
fcom
sub
mov
gs
icebp
ffree
and
add
adc
pop
retf
sbb
mov
push
nop
dec
repz
aaa
ds
dec
lea
inc
or
shl
int3
call
fsub
outs
and
das
add
inc
mov
adc
push
jecxz
test
jg
bound
retf
out
out
pushf
lods
push
xchg
(bad)
lock
add
inc
repnz
cmc
adc
movs
repz
add
cmc
(bad)
imul
mov
push
mov
nop
adc
cmc
jmp
add
js
mov
(bad)
in
in
js
push
sbb
inc
movs
mov
ins
sub
popf
fcomp
cmp
jae
inc
popf
aad
lea
sti
push
mov
push
sbb
shl
xor
push
enter
std
adc
(bad)
xchg
cdq
pop
pop
movs
cmp
mov
cmc
js
mov
and
cld
retf
mov
or
cmc
mov
mov
retf
add
cli
(bad)
fisttp
loope
lds
dec
mov
aam
jne
outs
mov
out
mov
add
jb
sub
and
hlt
repz
dec
push
ret
movs
dec
outs
cs
sbb
mov
mov
mov
adc
mov
jne
push
dec
push
pusha
sub
xor
push
ins
push
pop
scas
cwde
push
add
jmp
xchg
cmp
(bad)
jo
xor
pop
add
in
inc
lahf
pop
cld
ja
and
xlat
push
and
push
mov
xchg
push
cmp
in
das
and
push
dec
stc
sahf
adc
xchg
sub
scas
inc
mov
add
push
imul
cmp
add
jmp
jge
stos
xor
and
pop
les
(bad)
cdq
mov
and
and
sub
jo
adc
imul
adc
and
jo
sbb
mov
es
jge
xchg
sbb
es
sbb
fidiv
xor
mov
cmp
xchg
inc
cli
imul
pop
ret
cmps
pop
mov
repz
ret
xlat
scas
push
adc
mov
xstore-rng
cmps
ret
and
xchg
inc
inc
pop
mov
mov
mov
fst
outs
cmp
std
add
mov
pusha
retf
mov
cwde
inc
std
fidiv
sbb
dec
popa
(bad)
and
push
jp
xlat
retf
jnp
stc
sub
mov
retf
mov
std
ss
fistp
inc
mov
ror
outs
popf
mov
cmps
repz
and
lods
xor
jle
test
and
xchg
xchg
push
out
push
cdq
adc
int3
retf
pop
dec
push
nop
or
rcl
pop
xchg
in
data16
and
push
add
ins
mov
ficomp
cmp
mov
inc
push
pop
fwait
repnz
fcomp
dec
mov
jns
add
inc
cmps
fidivr
or
aas
jmp
das
xor
cwde
cmp
mov
popf
push
ret
cmc
sub
sbb
add
jecxz
sahf
sti
outs
dec
arpl
mov
mov
xor
(bad)
std
out
sbb
addr16
cmps
pop
mov
cdq
iret
mov
lock
adc
into
pop
jno
(bad)
mov
or
jbe
mov
leave
daa
and
arpl
pop
popa
inc
sbb
push
(bad)
fld
out
cmp
push
fistp
les
or
inc
mov
jae
adc
push
sub
mov
ja
daa
dec
inc
adc
mov
fistp
data16
push
cs
sub
cmp
popa
bound
mov
lds
push
xchg
in
bound
inc
stc
adc
lods
(bad)
lea
popf
repnz
(bad)
fld
sahf
sti
ins
loope
sbb
dec
xchg
loop
inc
in
cmp
(bad)
retf
cmps
stc
ror
xchg
ror
js
sbb
push
loope
push
fiadd
mov
dec
sbb
call
cmp
xor
(bad)
cmp
adc
xchg
jmp
jns
cs
aas
repz
or
pop
(bad)
xlat
scas
popa
retf
pop
jno
lds
and
mov
cld
sbb
sub
icebp
mov
das
popf
stos
dec
(bad)
add
xchg
dec
mov
ja
shr
repnz
mov
mov
push
sbb
int3
or
loopne
add
lods
adc
arpl
xchg
shl
jno
aad
gs
out
and
cmp
jle
xchg
fisub
jp
jbe
fcomp
mov
out
je
and
inc
mov
ret
leave
adc
out
add
retf
pop
xlat
pop
cmp
push
xor
dec
lahf
sbb
clc
or
jnp
in
popa
and
scas
adc
lods
sub
sar
aas
push
mov
push
push
add
xor
into
inc
das
jmp
jns
pushf
fwait
or
(bad)
and
xchg
mov
mov
adc
lock
call
mov
inc
imul
push
clc
jp
(bad)
sub
add
ret
js
mov
sbb
out
inc
jo
dec
and
out
out
pop
xor
push
push
stos
scas
pushf
ficom
and
mov
mov
je
pop
popa
cmp
adc
ins
test
call
adc
sti
int
(bad)
jns
inc
push
gs
jle
pusha
mov
mov
test
inc
xchg
jp
xchg
sar
pop
pop
jmp
sub
jle
cmp
pop
outs
mov
clc
xchg
je
fld
pushf
sub
add
mov
jge
ja
js
addr16
pop
sub
into
mov
lahf
cmp
push
inc
(bad)
test
in
das
leave
sub
outs
aam
lods
ds
pop
pop
cmc
lock
iret
or
mov
aaa
sub
dec
inc
xchg
dec
cmc
rcl
xor
shl
jae
dec
not
push
repz
dec
xchg
and
mov
bnd
mov
imul
jg
in
cmp
or
leave
cld
dec
jge
jl
lods
popa
pushf
out
sub
clts
pop
mov
mov
clc
mov
inc
dec
ja
sahf
sub
dec
enter
pop
jb
jo
rcr
xor
pop
ss
or
pop
jbe
lea
cmc
mov
popw
and
cmp
in
sbb
xor
cmps
push
ss
retf
ss
lea
add
sbb
pusha
dec
ja
shl
stc
js
dec
aaa
popa
xchg
xchg
dec
jecxz
sub
loopne
mov
and
push
dec
add
sahf
in
cmp
(bad)
out
jne
xchg
jb
xor
jns
cdq
dec
jo
pop
push
add
pop
call
sub
es
mov
pop
sub
mov
cs
shl
(bad)
fmulp
pop
and
adc
imul
mov
fild
int
sub
mov
adc
or
in
out
mov
or
movhps
out
add
dec
sti
add
ficom
jb
and
jbe
out
call
sub
cmp
je
retf
aam
outs
jp
call
xchg
mov
sti
(bad)
ja
es
(bad)
xor
mov
hlt
shl
int
xor
aad
enter
mov
xchg
clc
and
cmp
sbb
xchg
jmp
or
sub
mul
lea
mov
mov
mov
add
or
out
jno
enter
mov
dec
cmp
out
sub
add
mov
sub
inc
cmp
fwait
repz
int
mov
addr16
imul
std
loopne
sub
xor
cmp
gs
mov
popa
push
push
xor
out
out
xor
imul
xor
mov
cmps
cmps
ret
inc
push
dec
mov
mov
and
adc
lods
shl
aad
sti
outs
popa
sbb
inc
and
jns
or
mov
jne
and
lods
sub
addr16
mov
icebp
sbb
push
mov
(bad)
in
pop
xchg
and
and
daa
push
sbb
fidivr
lock
inc
or
ds
ror
mov
and
(bad)
loop
lock
les
je
pop
ss
cmc
(bad)
or
outs
neg
cmp
(bad)
out
das
ds
push
rcr
mov
div
in
xchg
lahf
retf
cli
icebp
jns
or
jae
sbb
pop
test
out
outs
aaa
int
ror
popa
imul
mov
call
cmp
stc
xlat
mov
jno
popa
or
pop
mov
lds
jno
mov
mov
dec
lods
fwait
mov
jo
rcl
inc
outs
dec
fmul
jecxz
sub
push
add
mov
std
push
xchg
(bad)
icebp
mov
cmp
stos
mov
int
cmp
scas
scas
sbb
dec
adc
out
mov
sub
mov
int
xor
imul
push
sub
and
(bad)
add
(bad)
pop
sbb
mov
rcl
sti
stos
pusha
rcl
or
popf
fist
movq
mov
jle
cwde
mov
popf
mov
and
es
adc
jmp
add
add
xor
dec
cmc
sar
cmps
push
icebp
dec
arpl
or
mov
enter
jg
or
xchg
add
mov
xchg
jmp
cmp
fwait
inc
pop
push
jmp
pop
xor
retf
sbb
aam
add
mov
das
daa
or
call
cld
repnz
xchg
fs
int
jmp
dec
push
jmp
dec
mov
imul
xor
lods
cmp
hlt
adc
fs
dec
dec
pop
pop
cwde
cmp
xlat
shl
cmc
sub
sbb
mov
inc
jle
xlat
push
ret
mov
adc
movs
dec
scas
pusha
pop
mov
push
dec
icebp
hlt
ins
push
jl
fidiv
aam
lods
retf
in
cmp
cdq
xor
test
jae
ret
test
sahf
sbb
mov
add
(bad)
jg
arpl
cwde
aam
adc
movs
push
mov
in
mov
loope
fwait
push
xor
ret
pop
scas
jo
js
push
jge
jbe
jbe
daa
sbb
pop
adc
(bad)
adc
jno
ds
jl
cmps
mov
push
push
jg
push
xchg
push
bound
cs
retf
clc
sub
sub
cdq
mov
popa
loopne
xor
loope
je
mov
mov
sbb
dec
cmp
mov
lahf
mov
test
arpl
push
stos
das
xor
mov
mov
inc
jb
cs
lods
and
jb
inc
sub
loope
test
(bad)
dec
add
add
push
pop
enter
outs
inc
xchg
sub
mov
and
outs
and
ja
into
inc
push
imul
dec
inc
inc
xor
or
push
and
mov
adc
aas
dec
jg
data16
or
in
mov
add
jge
cmp
add
sbb
stos
mov
enter
jp
ficom
push
pop
movs
ror
fild
imul
fld
retf
std
adc
dec
retf
adc
mov
xchg
cmp
mov
retf
sub
ja
rcr
inc
pop
out
lahf
cmc
add
mov
loopne
lds
push
ror
sbb
inc
into
in
push
mov
mov
xchg
es
shr
fsubr
jno
js
iret
arpl
ret
inc
je
in
sub
sti
cld
mov
push
mov
mov
mov
pop
popf
push
mov
and
test
sti
ror
shr
adc
xor
sbb
in
cmp
scas
scas
ret
pop
(bad)
popw
jge
popf
dec
jns
xchg
mov
scas
(bad)
jnp
add
stos
dec
push
push
mov
cmp
test
(bad)
mov
movs
call
jno
addr16
xchg
push
jbe
(bad)
push
pop
addr16
adc
inc
in
pop
popf
ss
sahf
daa
and
push
fsub
add
dec
jb
fisub
push
into
hlt
dec
add
mov
shl
pop
inc
lahf
nop
xchg
cwde
(bad)
mov
and
fistp
mov
inc
retf
push
clc
xor
push
imul
js
push
gs
or
clc
adc
(bad)
mov
pop
rcr
jg
jb
cmp
add
pop
popf
mov
jmp
cwde
cmps
push
xor
push
mov
push
push
pop
lods
jp
dec
add
mov
dec
mov
clc
xchg
(bad)
xchg
pop
pop
cmps
in
mov
dec
sub
rol
dec
jle
clc
loop
shr
cdq
test
xor
dec
in
inc
mov
mov
inc
in
aad
pop
mov
mov
cmp
(bad)
push
adc
sub
ret
cmp
arpl
test
pop
nop
push
mov
lea
clc
jmp
jo
mov
ror
push
fcomp
loopne
stc
or
movs
add
or
dec
inc
fnstcw
pop
test
cmps
and
adc
jno
mov
shr
cmp
out
outs
xor
mov
and
pop
cmps
fld
xor
sar
(bad)
xor
and
ds
inc
aas
add
push
enter
icebp
cmp
shl
mov
adc
pop
loope
aas
or
xor
mov
push
(bad)
xor
imul
dec
jns
movs
xchg
movs
add
icebp
imul
jb
sub
into
lods
sub
push
inc
int3
mov
xchg
push
push
std
push
into
adc
sub
xor
movs
mov
movs
js
fld
addr16
retf
scas
out
mov
(bad)
mov
call
mov
add
out
(bad)
pop
mov
test
jo
repz
xor
lar
(bad)
out
retf
aad
icebp
rcr
ds
and
mov
adc
retf
scas
lods
xchg
loope
cmps
sti
pop
jge
and
sbb
rcr
ret
mov
call
or
(bad)
xor
xor
shl
fistp
dec
sbb
dec
retf
mov
fild
jp
sbb
outs
ror
ds
lods
retf
shl
add
leave
xchg
fsub
or
movs
pusha
je
jno
cmp
jg
push
inc
imul
inc
cmp
push
popf
clc
js
(bad)
into
ficom
add
nop
or
dec
adc
popa
and
mov
dec
loop
dec
adc
xor
int
test
mov
fwait
pushf
lock
push
adc
loope
cld
popf
mov
in
and
sti
icebp
scas
das
fst
out
dec
out
test
repz
sbb
call
xchg
xor
push
fucomip
push
xchg
cmps
dec
jmp
mov
push
gs
nop
and
(bad)
and
push
out
movs
fdiv
addr16
inc
adc
jg
or
popf
stos
adc
sbb
and
pusha
mov
scas
cmc
and
ja
(bad)
inc
inc
push
jb
pop
add
jmp
pop
or
xchg
fdiv
jecxz
bound
cmp
shl
add
(bad)
arpl
jne
in
in
mov
(bad)
pop
add
fist
ret
mov
leave
jecxz
add
retf
xlat
out
mov
lds
xor
pop
dec
ins
in
(bad)
xor
sbb
inc
and
sub
popf
push
adc
pop
daa
add
sbb
fistp
pop
shr
cmp
ss
test
push
imul
stos
jmp
or
(bad)
(bad)
mov
or
and
pop
push
mov
mov
in
pop
fstp
sbb
sub
mov
(bad)
jb
sbb
es
inc
call
xchg
mov
adc
mov
lods
lods
loope
sub
leave
mov
in
or
jb
repnz
pushf
adc
mov
mov
adc
jb
cmp
dec
nop
add
jmp
cwde
adc
out
das
dec
shl
(bad)
xor
shl
mov
cmps
mov
aad
push
in
jecxz
rol
iret
jmp
fwait
test
ret
inc
lea
mov
pop
cmp
mov
or
push
pusha
mov
gs
(bad)
mov
adc
and
xor
xor
push
jl
hlt
mov
mov
int3
jo
movs
js
sub
ret
inc
stos
iret
cmp
lds
enter
sub
and
pop
xchg
fcom
cmp
out
mov
jmp
add
jp
mov
fisttp
je
xchg
sub
outs
push
das
inc
cdq
and
repz
outs
push
ret
std
lods
sahf
add
(bad)
cmps
movs
std
mov
icebp
cli
aas
ja
sti
sub
ds
jp
jl
push
fisttp
dec
xchg
xchg
out
push
cmps
mov
mov
cmp
sbb
jmp
cmps
or
cmp
pop
xchg
add
arpl
xchg
ins
adc
movs
push
fwait
clc
adc
into
(bad)
adc
xchg
adc
vshufps
mov
out
xor
and
movs
pop
addr16
jmp
lock
retf
out
test
sahf
imul
(bad)
test
cld
mov
cmps
inc
add
push
xlat
sub
shr
pop
test
aam
ins
pop
out
mov
sub
mov
mov
iret
sbb
mov
jb
leave
mov
sbb
sbb
(bad)
xchg
mov
pop
xlat
cs
mov
call
int3
stc
loopne
and
xor
shl
test
scas
dec
push
fwait
add
pusha
cld
cmp
mov
lods
fwait
(bad)
fldenv
scas
pop
xor
ret
xchg
pushf
fild
cdq
jo
push
loopne
mov
jo
addr16
movs
fisub
fidiv
lock
bound
test
outs
(bad)
fwait
adc
push
jns
clc
dec
add
push
sbb
out
xchg
adc
mov
loope
sbb
xchg
rcl
jmp
popa
xchg
mov
jecxz
js
xlat
ret
aas
ret
add
in
jae
movs
or
dec
fldcw
or
popa
out
add
sbb
xchg
mov
test
mov
in
mov
fdivr
dec
test
das
cmp
nop
outs
cmp
mov
repnz
dec
xor
pusha
(bad)
addr16
xchg
inc
xchg
or
aaa
jle
neg
out
hlt
push
outs
cmp
cld
fucomp
mov
hlt
iret
pop
popa
cld
fs
je
pusha
mov
ins
fstp
mov
mov
cld
lods
int3
into
or
loop
or
inc
dec
(bad)
mov
sub
out
xchg
jno
adc
ins
aad
out
in
sub
mov
mov
add
sub
pusha
cmps
or
cwde
aam
das
aad
mov
sub
xchg
pop
jge
in
mov
lahf
push
cmc
mov
mov
cli
jae
sahf
dec
les
add
popf
push
or
push
adc
(bad)
loopne
(bad)
xchg
inc
mov
jne
cli
es
and
add
inc
fmul
mov
shr
rcl
dec
pushf
retf
pop
cmp
leave
mov
xchg
inc
daa
lea
(bad)
(bad)
test
and
dec
iret
add
mov
test
and
mov
or
sti
xchg
shl
movs
nop
adc
mov
mov
or
icebp
push
push
xor
aaa
xchg
adc
test
movs
test
inc
ficom
sub
xchg
push
jmp
push
pop
loope
jne
mov
lahf
imul
push
bound
push
pop
jmp
ret
jae
test
and
test
neg
pop
cmps
outs
mov
jge
test
outs
repz
dec
adc
jb
iret
xchg
lock
or
push
pusha
add
arpl
cmp
into
jmp
jle
pop
mov
das
cmp
mov
push
inc
mov
(bad)
test
mov
add
arpl
cs
mov
pop
pop
in
mov
and
cld
lea
mov
repz
xchg
neg
jg
xchg
aam
add
ja
pushf
aaa
ja
call
pop
cmp
retf
fdivr
push
or
in
xchg
sbb
mov
retf
add
loop
dec
jg
fisttp
lods
xor
lds
fnsetpm(287
(bad)
cmp
xor
push
ror
inc
cmp
jp
push
jmp
loop
imul
mov
call
adc
in
adc
pop
aam
rcr
jmp
mov
cmp
add
scas
inc
pop
cld
and
push
ss
pop
pop
addr16
icebp
inc
and
pop
js
enter
js
bound
mov
cmp
jecxz
movs
xchg
and
fs
enter
xchg
imul
cmp
ja
sbb
cmp
jmp
xlat
ret
jecxz
lds
lds
repnz
mov
jnp
push
cs
bound
idiv
mov
fimul
fldenv
sbb
jo
in
mov
sub
dec
fstp
mov
sti
aaa
dec
add
in
repnz
mov
adc
shr
or
push
imul
adc
xor
add
pop
nop
sbb
mov
imul
pop
mov
or
and
add
sub
in
or
mov
pop
lock
ss
test
sar
sub
scas
dec
shl
cmp
mov
xor
ds
leave
nop
call
inc
(bad)
jge
or
loop
inc
mov
sub
ret
xor
mov
sbb
dec
loope
push
xor
rcl
cmp
scas
ficom
xchg
sub
out
inc
test
fcomp
jg
or
cdq
push
fidiv
fidivr
ficomp
adc
dec
loopne
popa
mov
jne
rcr
fs
fwait
imul
imul
xlat
retf
icebp
inc
aad
add
pop
xchg
lds
mov
enter
cmp
mov
jmp
push
arpl
dec
pop
xlat
jle
repz
cdq
repz
fwait
or
jecxz
pop
movs
xor
xchg
and
out
test
scas
jl
sti
push
mov
lea
shr
stos
inc
aas
cmps
pop
repz
push
push
xchg
sub
push
ins
punpckhdq
xchg
push
push
adc
xlat
inc
fsub
sub
pop
call
or
lods
add
ret
(bad)
loope
xor
mov
stos
lea
add
sub
xor
xor
xor
inc
xor
cmp
and
repz
adc
push
pop
in
adc
mov
adc
mov
fnsave
push
call
xchg
mov
lods
and
(bad)
fmul
in
mov
jae
mov
jb
ins
addr16
inc
nop
xlat
and
lods
in
movs
xor
stc
rcl
lds
cli
cmp
adc
sbb
aas
jg
inc
pop
jne
cmp
iret
stos
dec
jl
out
fadd
loope
retf
in
cmps
jmp
sub
xor
or
lds
pop
aas
push
shl
icebp
push
ins
push
shr
jno
dec
fisttp
sti
sub
jo
cmps
sub
pushf
push
imul
aad
es
dec
(bad)
sbb
add
int3
in
xlat
nop
outs
ret
pop
mov
mov
sahf
mov
or
sbb
ins
hlt
mov
sbb
mov
aaa
out
sbb
sbb
jno
out
sbb
rcl
ror
jmp
int
test
jp
adc
sbb
gs
nop
mov
daa
(bad)
iret
out
shr
push
rcl
cdq
fucomi
loop
sahf
mov
ret
or
cli
nop
aaa
mov
mov
cmp
mov
leave
(bad)
arpl
or
jge
(bad)
cwde
jecxz
addr16
popa
fyl2x
inc
clc
lods
fdivrp
xor
mov
mov
or
movs
pop
push
call
fucomi
in
and
mov
xor
jmp
bound
dec
scas
push
xchg
cwde
cs
out
dec
or
cld
xchg
aad
sti
ret
(bad)
mov
dec
int3
xor
jno
xlat
pop
dec
add
das
imul
sar
cmp
cmc
pop
jl
mov
push
jle
popa
mov
ss
fidivr
adc
fist
(bad)
call
popf
retf
jae
outs
dec
xchg
and
cwde
mov
fcom
jnp
jb
jns
inc
cli
push
or
mov
sbb
clc
and
or
xor
es
into
or
leave
test
push
push
pop
aas
mov
mov
xor
pop
add
sbb
mov
cmp
mov
sbb
inc
loopne
retf
jmp
cmp
mov
or
(bad)
neg
int3
push
cmps
xor
je
mov
mov
or
loop
stos
xchg
je
ds
movs
sub
jg
jno
in
push
fsubr
inc
jnp
cmp
sub
and
mov
std
and
xor
imul
or
pop
mov
imul
gs
pop
or
iret
jmp
mov
dec
adc
scas
push
and
mov
sbb
cmp
into
test
jmp
mov
dec
(bad)
std
xchg
fldcw
(bad)
in
mov
popa
cmp
ja
or
retf
pusha
fidivr
test
sbb
aam
(bad)
dec
and
std
test
or
sub
aam
loopne
mov
dec
xchg
mov
inc
push
mov
push
cmp
inc
jmpw
call
jle
aam
rcl
push
xchg
imul
out
jge
sbb
mov
lds
dec
inc
mov
adc
push
outs
push
mov
int3
sub
cmp
mov
mov
jle
pop
shl
and
jns
cmc
and
(bad)
fwait
stos
loopne
out
lahf
or
jg
or
jecxz
stos
ja
loopne
call
pop
inc
cmp
lock
inc
test
sbb
mov
cmp
fwait
pop
stc
bound
add
ret
sub
ins
aam
pop
cmc
jle
ins
adc
mov
je
jmp
scas
pop
xchg
push
mov
int3
push
add
fistp
imul
(bad)
test
test
inc
imul
ja
inc
pop
scas
pop
fcmovne
loope
push
in
add
(bad)
cld
push
xchg
push
dec
fcomi
movs
test
or
cmp
movs
add
popf
mov
cli
xchg
cwde
(bad)
jnp
out
jne
xchg
ds
hlt
loopne
cmc
int
scas
xchg
pop
push
jl
int
test
call
repz
pop
icebp
(bad)
aas
mov
xchg
test
movs
punpcklwd
adc
mov
lods
push
mov
or
mov
sbb
out
das
push
daa
addr16
mov
hlt
mov
or
or
sbb
cmps
adc
pop
mov
xchg
cmp
jbe
(bad)
dec
ja
js
adc
and
aam
push
xlat
and
xchg
xchg
out
push
les
pop
movs
jb
iret
clc
enter
fistp
sbb
cmc
ins
ins
call
mov
popa
mov
mov
(bad)
push
push
push
pushf
call
dec
pusha
dec
fisttp
or
div
cwde
popf
pop
push
push
test
mov
in
mov
daa
xchg
cmp
test
(bad)
jge
pop
and
bnd
inc
jbe
cmp
jge
pusha
sbb
sub
mov
gs
or
push
arpl
neg
fwait
or
pop
inc
inc
ja
les
daa
ret
mov
outs
and
(bad)
out
out
jl
dec
push
jg
sub
jns
in
jbe
push
ret
inc
cmp
out
int3
cmp
repz
adc
cmp
inc
sbb
inc
adc
xor
inc
lock
cmp
and
and
and
sub
popf
sbb
shl
test
daa
aad
or
sub
cvtps2pd
in
mov
fs
jmp
fdivr
pop
clc
sti
enter
dec
hlt
dec
adc
dec
in
inc
xchg
and
aam
mov
push
jle
lea
add
loop
into
in
out
mov
push
push
push
push
aas
cmp
mov
jp
cmps
shr
fnstenv
fdiv
in
xchg
loop
or
dec
jmp
cmp
xchg
and
das
jl
or
ret
cwde
hlt
fdiv
aam
(bad)
fisttp
pop
aad
lea
icebp
mov
dec
iret
push
retf
inc
inc
add
dec
mov
in
mov
add
data16
pop
pop
inc
popa
mov
mov
and
cmp
aaa
test
aam
mov
fucom
fucomp
call
sub
lahf
xchg
(bad)
jle
cmp
cmp
xchg
pop
pop
jno
push
imul
mov
fld
repz
jmp
push
push
push
call
sti
lods
mov
mov
sbb
arpl
(bad)
mov
mov
in
sbb
lods
jns
lahf
xchg
push
mov
inc
ja
push
icebp
jge
jb
outs
in
rol
mov
mov
or
sub
mov
pop
fwait
push
or
in
xchg
sub
es
int
sar
mov
arpl
sub
loop
add
out
mov
arpl
pop
dec
cmp
(bad)
and
or
cmp
xor
or
stc
jb
dec
pop
mov
xor
icebp
sbb
dec
add
mov
outs
dec
add
or
cmc
mov
out
or
sub
mov
cmp
jmp
push
jmp
and
adc
xchg
pop
cmp
scas
fdiv
pop
xchg
clc
pop
mov
stos
cmp
cdq
(bad)
in
mov
inc
or
add
lea
jno
repz
xchg
and
aam
jecxz
fwait
stos
pop
ret
xchg
aam
xor
lahf
sub
or
ror
dec
mov
(bad)
out
pushf
pop
inc
cld
js
test
je
push
ins
cmp
std
jb
mov
dec
mov
(bad)
ss
mov
push
pushf
dec
jmp
pop
ror
jnp
nop
or
pop
or
mov
ret
push
sub
mov
and
fcmovnb
sbb
cmp
push
and
ins
(bad)
adc
inc
adc
ret
fisttp
ins
mov
add
push
and
pxor
sub
shl
into
shl
imul
(bad)
xor
mov
and
mov
ss
dec
inc
mov
adc
imul
rol
es
jns
dec
popf
pop
enter
lock
inc
push
loop
inc
rol
xchg
fistp
add
adc
xchg
mov
sub
dec
or
inc
and
and
scas
jb
mov
xor
lock
add
rcr
aaa
cmp
ror
mov
iret
dec
(bad)
mov
dec
sbb
or
mul
add
cmp
out
push
mov
pop
mov
add
lods
pop
test
ds
fdivr
xchg
adc
mov
ins
mov
xor
stc
add
frstor
xlat
xor
arpl
sub
or
imul
jo
jle
sub
imul
add
pop
into
aad
into
sub
xor
dec
cmp
cmps
cld
push
(bad)
fwait
or
and
jmp
out
push
sbb
inc
repnz
jl
shr
and
ficomp
and
jmp
adc
mov
(bad)
jae
mov
scas
pop
imul
push
inc
xor
shl
push
lahf
mov
in
or
push
out
lahf
cmps
ins
xchg
add
je
dec
mov
xor
data16
mov
int3
jo
aad
and
xchg
(bad)
int3
pop
popf
stc
shl
mov
mov
pop
cmc
call
or
push
adc
mov
stos
add
xchg
stos
ffreep
dec
cmps
xor
std
leave
xor
fld
mov
dec
xchg
addr16
lods
ffree
inc
movs
push
daa
cld
mov
dec
fadd
and
outs
(bad)
sub
movs
jle
fst
int3
pop
retf
sub
cmp
mov
xchg
xchg
jb
fisttp
jmp
imul
lds
fistp
sbb
inc
neg
sub
mov
sbb
sub
sbb
vmovsldup
adc
cmp
jne
xchg
cmps
stc
jnp
test
sub
and
push
outs
repz
cdq
mov
sub
loop
jl
push
dec
sbb
jne
lea
or
jecxz
sub
mov
mov
fsub
aad
jecxz
int3
aad
icebp
ins
inc
(bad)
stc
scas
pop
int
int
jb
cs
xor
adc
xchg
push
(bad)
test
or
sub
cmps
in
push
idiv
test
sbb
jb
loope
and
inc
in
lds
lods
cmp
dec
(bad)
imul
sti
sar
jp
popf
push
das
jne
test
into
jns
stos
sub
cmps
clc
fs
adc
in
xchg
dec
sbb
in
push
push
(bad)
mov
pusha
jecxz
bound
outs
pop
mov
jno
(bad)
retf
or
cmc
and
jnp
inc
or
mul
jl
dec
test
pop
cli
gs
push
sub
pop
icebp
cmp
icebp
mov
cmps
adc
mov
mov
pop
mov
movs
xchg
and
or
rcr
leave
xor
inc
cs
sbb
sbb
mov
jbe
pop
or
mov
call
scas
add
or
neg
sub
jo
push
dec
jb
in
push
push
push
mov
sbb
js
stos
push
mov
adc
pop
jno
add
add
xchg
shl
mov
sbb
lock
out
cmps
push
pop
xlat
add
push
sar
fisub
adc
(bad)
imul
xor
int
bound
movs
dec
ret
xchg
xor
mov
imul
inc
cmp
retf
or
xchg
dec
repz
adc
pop
shr
jle
jb
pop
jnp
cwde
cmp
das
adc
push
add
mov
aaa
jl
mov
mov
in
or
mov
das
je
sub
out
arpl
ficom
adc
out
pop
int3
sbb
iret
ins
xchg
icebp
call
dec
or
xchg
add
jecxz
das
sbb
xor
mov
dec
dec
dec
push
movs
(bad)
popf
push
inc
(bad)
movs
adc
or
ins
push
sbb
call
test
scas
sahf
and
scas
sahf
or
cld
and
int
dec
loopne
and
fwait
dec
ret
sbb
dec
(bad)
ficomp
out
cwde
pop
cmp
les
add
jo
sbb
jle
cmp
jne
lods
adc
call
and
outs
push
xor
inc
inc
xor
mov
mov
repnz
sbb
scas
loop
pop
pop
push
aas
mov
stos
arpl
push
inc
jmp
call
inc
cdq
push
add
push
shr
push
mov
dec
ins
mov
cmp
mov
popa
and
add
jno
repz
pop
cmps
sbb
cdq
loop
jmp
out
mov
push
sar
retf
or
push
mov
sub
cmp
add
out
outs
inc
adc
cmp
push
mov
xchg
icebp
jmp
pop
add
aaa
mov
mov
xchg
les
stc
mov
fld
mov
mov
nop
icebp
sub
mov
popa
mov
cmp
add
pop
fld
out
and
jl
cdq
(bad)
stc
leave
sub
imul
(bad)
xlat
adc
push
iret
adc
push
xchg
call
cs
ja
mov
inc
and
int3
unpckhps
push
dec
int
pop
jno
pop
jecxz
mov
mov
ins
xchg
xor
jne
stos
popf
shr
mov
or
adc
daa
fcom
les
dec
loop
mov
scas
add
push
mov
xor
enter
push
sub
and
leave
imul
ins
mov
mov
push
bound
add
xchg
out
test
ja
fs
pop
mov
xchg
sbb
outs
mov
lock
adc
dec
scas
sub
lods
or
icebp
mov
mov
cmp
aad
sbb
shr
ret
mov
test
shl
sub
xchg
add
mov
mov
mov
in
data16
bound
add
or
call
jbe
mov
jmp
sbb
dec
test
pop
sub
xchg
dec
jo
test
adc
faddp
das
push
mov
mov
fadd
ins
add
adc
cmp
mov
adc
movs
retf
pop
cmp
out
fadd
xchg
call
pop
ja
inc
shl
sub
mov
and
data16
and
(bad)
pushf
push
add
xchg
lods
mov
iret
retf
clc
and
ja
adc
ss
sub
(bad)
neg
pop
push
out
adc
mov
mov
imul
mov
mov
dec
sbb
push
fbld
xchg
adc
sub
nop
xor
dec
push
xor
pop
xchg
lock
ins
cmp
gs
mov
xchg
out
cmp
and
retf
add
dec
xor
cmp
mov
sub
sub
gs
sbb
or
xchg
movs
inc
mov
int3
xchg
mov
ret
pop
leave
imul
dec
add
inc
push
imul
fstp
dec
sbb
push
jne
popf
pop
pop
nop
xor
int3
dec
call
pop
add
pop
enter
dec
add
arpl
call
dec
lods
pop
popf
out
call
cmp
sbb
and
sqrtps
aad
sub
(bad)
xor
inc
add
mov
cdq
xor
mov
repz
int3
mov
mov
mov
popa
hlt
add
enter
shl
movs
cmp
push
cwde
movs
push
jnp
ins
rcr
test
out
sub
imul
mov
xchg
push
movs
in
inc
mov
jmp
or
hlt
mov
fldenv
in
mov
cmps
ins
adc
cdq
scas
hlt
scas
dec
jo
test
rol
mov
in
cmp
or
sahf
add
xchg
test
dec
push
cmps
test
inc
pop
js
cmp
loope
aad
or
repz
add
enter
xchg
(bad)
push
xchg
xchg
cli
dec
jne
and
movs
sub
rcr
jb
add
and
ja
pop
mov
jae
mov
hlt
xlat
and
jbe
aad
or
repz
pop
rol
or
dec
icebp
pop
inc
out
cmps
sub
cmp
or
in
pop
push
dec
add
aaa
dec
and
in
outs
jg
inc
sub
je
iret
cmps
std
outs
stos
out
not
xchg
in
adc
pop
leave
mov
dec
test
movs
aaa
shr
add
ret
pushf
pop
adc
das
xchg
mov
(bad)
pop
out
or
repnz
call
es
je
adc
push
rcl
dec
bound
push
clc
enter
and
fwait
or
in
mov
pop
mov
pop
aas
push
nop
or
popa
mov
xor
mov
sub
or
mov
fsub
imul
ja
jo
rcr
mov
repnz
adc
fcom
xchg
aas
data16
rol
push
and
ret
jne
inc
mov
dec
push
pop
push
adc
jp
movs
(bad)
aad
sub
aaa
fnstsw
aas
mov
imul
nop
xchg
cld
int3
xchg
adc
js
xor
dec
enter
pop
mov
shl
sub
xchg
(bad)
arpl
cwde
movs
and
dec
lods
jns
out
add
pop
inc
mov
loopne
imul
ins
mov
test
pop
(bad)
mov
and
cli
in
jno
ret
pusha
(bad)
int3
pop
das
jmp
mov
mov
lock
ja
jo
int
mov
mov
lds
jns
retf
adc
pop
adc
out
xor
and
lock
out
call
es
test
lods
aad
sub
cmp
adc
pop
and
pop
je
enter
cwde
cmps
jae
out
ret
mov
and
mov
xchg
rol
fcomp
sbb
push
retf
ss
jae
nop
adc
push
sbb
mov
test
cmp
shr
ret
pop
js
jmp
and
(bad)
call
add
cmp
cmp
jnp
jnp
push
retf
and
je
xchg
adc
sbb
repnz
mov
mov
cld
add
hlt
xor
add
and
sbb
int
test
mov
(bad)
js
nop
sub
dec
shr
scas
ret
scas
mov
dec
mov
xchg
adc
(bad)
adc
adc
xchg
add
jbe
outs
repz
out
or
(bad)
and
pop
(bad)
adc
add
xchg
test
jmp
call
out
adc
xchg
jne
xchg
jle
sub
or
mov
push
iret
jbe
cmp
push
out
xchg
dec
and
and
push
or
out
dec
xchg
pop
xlat
fdivrp
push
es
jg
cdq
jo
out
pop
push
fwait
aad
xor
jmp
add
jp
adc
add
aad
sbb
xor
ins
ja
jnp
imul
scas
ja
daa
cdq
into
mov
shl
shl
jp
inc
sub
repnz
jbe
ret
mov
popa
scas
out
bound
loop
call
stc
ins
push
js
out
sub
(bad)
xchg
mov
ret
xor
rcl
xor
clc
mov
in
pop
scas
adc
hlt
push
push
adc
dec
sbb
stos
es
dec
lahf
jp
mov
stos
aad
xor
fnstenv
lods
jmp
(bad)
scas
and
lea
and
adc
sbb
jmp
ins
aam
daa
int
adc
out
ficomp
jns
mov
add
cmp
or
inc
rcr
sub
mov
inc
adc
push
addr16
jbe
jae
movs
jecxz
dec
stc
jmp
inc
mov
adc
jae
xchg
mov
out
stos
push
arpl
xchg
mov
push
sti
fild
fisttp
jno
xor
mov
lea
and
enter
pop
rol
fs
gs
push
fsubr
sub
daa
cwde
cmp
adc
pop
or
cdq
cs
ret
pop
or
mul
in
xlat
adc
mov
popf
mov
inc
dec
add
xchg
mov
lods
repnz
ror
movs
mov
adc
dec
push
cmp
inc
lods
mov
push
jle
pusha
add
sbb
inc
mov
std
daa
inc
jg
sub
(bad)
dec
sub
cs
cmp
add
mov
inc
ficomp
fstp
jmp
mov
imul
mov
jno
or
lods
inc
push
test
cmp
pop
and
sbb
cdq
pop
nop
push
jmp
repnz
dec
repz
sub
mov
shl
mov
dec
jb
pop
jo
imul
or
mov
cmp
dec
call
test
xlat
rcr
adc
inc
jne
mov
les
and
fwait
stc
jbe
imul
test
or
out
in
cmp
retf
jle
adc
mov
pop
dec
int
cli
int3
jmp
mov
enter
fcmovnbe
dec
ins
fdiv
lock
cs
(bad)
cmc
xrelease
xchg
(bad)
xchg
xchg
imul
add
int3
sbb
xor
and
xchg
inc
xchg
adc
(bad)
mov
lods
dec
cmp
test
push
push
and
sti
inc
jg
shl
(bad)
and
int3
jecxz
ins
mov
test
in
cmp
dec
retf
add
jbe
jmp
mov
add
aaa
adc
fiadd
jl
mov
xchg
inc
inc
cmps
sar
mov
test
addr16
outs
or
dec
cdq
pop
es
sbb
les
imul
xor
adc
test
mov
lea
mov
(bad)
arpl
and
push
test
pop
inc
xor
mov
mov
ds
add
fsubr
and
adc
lock
xchg
or
inc
inc
pop
sti
stos
sahf
lea
mov
pop
ret
adc
push
cmp
and
or
pop
xor
pop
add
call
lods
or
frstor
dec
stos
xor
retf
jecxz
adc
or
ins
je
push
and
jno
add
mov
fild
adc
int3
daa
dec
mov
pop
pcmpgtd
repz
std
sub
mov
sbb
lea
arpl
aam
xor
pusha
push
repz
pushf
xchg
iret
push
dec
pop
fs
or
arpl
loop
es
aad
mov
inc
cmc
out
aaa
jp
mov
in
test
leave
sbb
adc
pusha
lahf
aaa
inc
in
adc
pop
sub
outs
mov
cmp
aaa
inc
addr16
imul
fdivr
imul
jo
xchg
push
ror
cmc
ins
add
push
into
jp
aas
jecxz
cmp
cmp
ss
mov
jo
mov
nop
xchg
mov
cmp
mov
shr
jg
mov
in
stc
test
pop
dec
or
sar
dec
cwde
retf
jmp
jns
pop
cli
xlat
(bad)
(bad)
cli
lea
mov
lds
mov
xor
stos
loope
and
inc
pop
cdq
aad
push
retf
xchg
pop
inc
xchg
scas
jne
sub
in
and
(bad)
div
dec
add
or
jno
aaa
mov
jo
test
(bad)
fsub
xor
mov
ins
das
sub
outs
sbb
out
sub
pop
fst
and
retf
addr16
or
mov
(bad)
fcomi
test
(bad)
pop
repz
pop
ss
jbe
sbb
cmp
ds
mov
shl
cmp
xor
push
push
sahf
inc
shl
push
popa
inc
jbe
test
cmp
int3
cwde
out
mov
push
or
cmp
cmp
mov
pop
or
(bad)
fld
popf
pop
jge
mov
mov
(bad)
cmp
out
and
out
movs
mov
(bad)
push
xor
imul
jmp
push
dec
dec
pop
call
stos
add
or
inc
sub
stc
int3
mov
xor
mov
in
in
cmp
lahf
jno
(bad)
fstp
inc
pop
(bad)
rcr
jbe
pop
rcl
out
cmps
xchg
rol
cmp
mov
xchg
mov
jge
push
js
jp
or
fisubr
cmp
(bad)
addr16
or
fdivr
add
adc
or
xor
adc
mov
jnp
pop
repz
jnp
push
jl
lahf
fs
or
jb
mov
ror
dec
arpl
xor
icebp
(bad)
xlat
cmc
jmp
call
sbb
mov
xor
loope
(bad)
in
jno
sbb
jmp
fdiv
stc
retf
call
mov
mov
sub
mov
sub
cmps
add
retf
push
adc
sub
inc
dec
mov
adc
jle
mov
pop
imul
fs
sub
out
jecxz
fist
outs
mov
xlat
into
or
sbb
and
call
jns
outs
dec
push
fdivr
pusha
push
out
lds
mov
push
lods
enter
sar
mov
rcr
call
inc
scas
pop
jb
retf
pop
shr
pusha
inc
in
xchg
sbb
or
mov
mov
(bad)
imul
lea
mov
stc
call
sahf
imul
pop
lds
pop
push
pop
mov
dec
ja
xor
in
push
push
sbb
mov
mov
sub
mov
push
not
sbb
jecxz
outs
not
pushf
fs
fcom
stos
sbb
mov
xchg
add
cmp
add
lock
adc
adc
fbld
mov
sub
ret
nop
rcr
aas
lea
inc
neg
in
pop
or
sub
adc
xchg
inc
outs
cmc
push
and
inc
popf
cmps
stos
fwait
and
push
(bad)
fwait
xchg
add
mov
out
or
xchg
pop
add
dec
and
mov
pop
cmc
repnz
sbb
pusha
out
lea
sbb
lds
sbb
(bad)
retf
int
icebp
inc
(bad)
pop
sub
xor
adc
push
and
push
dec
repnz
not
pop
inc
leave
cmp
mov
xchg
lock
xchg
(bad)
aas
iret
push
push
push
into
push
push
jnp
test
and
aad
(bad)
ins
sbb
aas
push
cli
inc
lds
ins
ret
push
stos
cmp
xchg
mov
push
(bad)
fstp
inc
add
jge
jge
int3
sbb
cli
lods
sahf
cwde
mov
sahf
cli
pop
lahf
add
cld
mul
lds
(bad)
je
xchg
ss
mov
icebp
or
sub
dec
xchg
outs
scas
or
out
cmps
inc
iret
in
mov
leave
addr16
daa
in
fs
mov
jecxz
mov
inc
fidiv
out
push
test
aas
pop
lahf
in
jnp
fist
and
jo
sahf
cmp
pop
adc
sbb
jae
mov
jmp
and
addr16
les
adc
pop
inc
out
mov
or
sub
cmc
rol
popa
sti
pop
cmp
in
jns
rcr
xlat
repnz
sub
sti
test
stc
aad
cmps
shr
outs
mov
jl
stos
das
ror
add
push
or
(bad)
js
movs
dec
push
jne
test
and
daa
mov
mov
mov
outs
hlt
aad
add
pop
jle
leave
xchg
js
push
inc
or
mov
sub
imul
mov
(bad)
stc
inc
sbb
cmps
sub
jp
repnz
scas
mov
jecxz
xor
loop
div
fcmovbe
cmp
mov
pop
inc
mov
cli
or
push
xchg
xor
adc
js
mov
push
adc
push
daa
(bad)
pop
in
push
dec
out
arpl
pop
stos
fst
push
(bad)
xchg
adc
fnstenv
sub
lods
mov
dec
push
call
(bad)
cmp
sbb
jl
push
in
popa
sbb
(bad)
in
mov
adc
mov
test
fwait
add
retf
jecxz
jp
aad
fiadd
push
js
pusha
out
push
out
mov
mov
ret
cmps
mov
(bad)
add
(bad)
popa
sbb
je
dec
sub
push
mov
call
xchg
cmp
sub
(bad)
lds
or
push
les
aad
mov
aaa
lods
mov
mov
xchg
push
shr
fisttp
push
test
std
push
dec
push
out
(bad)
lock
mov
mov
sbb
sahf
pop
lahf
or
ins
(bad)
cmp
pop
(bad)
call
adc
dec
cmp
retf
or
aam
js
jge
dec
pop
int
movs
cmps
ja
and
sar
jge
sub
fisub
mov
push
arpl
imul
cld
int3
dec
ins
(bad)
or
jbe
test
xor
lea
mov
xchg
sub
fs
and
adc
add
int3
pop
in
rol
pop
in
into
mov
ret
movs
adc
in
aad
lahf
cs
inc
xchg
adc
mov
xor
pop
inc
add
cmps
sub
push
xor
push
fdivr
out
sahf
fadd
xor
inc
and
(bad)
mov
inc
call
cmps
mov
dec
xlat
xlat
pusha
imul
hlt
pop
push
xor
inc
mov
sbb
js
test
cld
jmp
stos
and
inc
cmp
inc
sbb
shl
cmc
stos
push
sub
cs
adc
mov
in
xchg
sub
out
inc
ror
ret
fwait
push
push
pushf
sub
cld
push
or
push
inc
adc
retf
(bad)
gs
les
push
mov
mov
movs
ds
push
ss
imul
lds
ins
mov
or
push
push
push
xchg
and
lock
ins
push
data16
fistp
rcr
mov
sbb
test
mov
adc
xchg
jmp
retf
jmp
imul
cdq
mov
dec
or
xor
lahf
sub
out
scas
and
not
test
mov
adc
cmp
pop
adc
jnp
xchg
lods
aad
mov
nop
or
popa
test
xchg
sub
movs
hlt
adc
js
mov
xchg
push
sub
mov
add
cmp
daa
push
aam
jp
xchg
adc
(bad)
xchg
dec
pop
lods
mov
dec
sbb
mov
leave
(bad)
aad
loope
push
add
lods
push
push
arpl
fs
pop
jb
lods
iret
xchg
jb
jno
or
or
inc
out
mov
mov
cmp
daa
xor
mov
cwde
in
lea
rol
aaa
into
repnz
adc
xchg
sub
(bad)
xchg
(bad)
cdq
(bad)
call
enter
and
daa
shl
dec
je
mov
mov
mov
inc
mov
in
pop
sub
repz
mov
jae
nop
sub
xor
xor
sub
repz
or
mov
cs
push
aas
adc
cmovne
test
mov
popa
aas
jmp
sub
dec
rcr
inc
cmp
sub
daa
jae
mov
aas
sbb
push
pop
imul
aas
xchg
pop
mov
cmps
mov
sub
popa
mov
jg
cmp
outs
outs
loop
mov
loopne
and
jp
in
sub
dec
push
and
or
sar
(bad)
lds
cs
rcr
dec
mov
sti
inc
out
inc
cmp
loope
(bad)
mov
mov
pusha
enter
cmps
and
dec
shl
mov
push
pusha
xor
test
adc
mov
sbb
pop
popa
(bad)
and
cs
stc
ret
and
pop
arpl
xchg
test
and
das
(bad)
jge
ret
(bad)
adc
xor
sbb
push
push
xchg
repz
outs
push
leave
xchg
mov
sbb
xchg
push
shl
std
stc
int3
inc
mov
iret
jno
mov
cwde
ret
sbb
pop
jns
mov
leave
or
mov
pop
pop
xchg
aam
dec
push
push
push
add
lods
jnp
jns
mul
jl
xor
pop
cmp
daa
and
fdiv
loopne
sbb
pop
sbb
pop
inc
adc
test
in
and
scas
pop
pop
fyl2xp1
ror
call
cmc
test
sbb
popf
adc
neg
mov
mov
xlat
jl
mov
xchg
or
ja
and
call
adc
int3
jbe
mov
and
std
cs
xchg
add
dec
call
inc
fistp
in
out
sbb
adc
inc
inc
adc
add
mov
cmc
or
add
mov
xchg
or
push
jecxz
mov
sbb
mov
jnp
je
and
rol
mov
(bad)
nop
jmp
sub
loop
inc
sub
or
fwait
push
xor
mov
cmp
pushf
lea
(bad)
rcl
mov
test
stc
es
rol
hlt
sub
mov
popf
jl
mov
mov
shl
out
outs
cmp
jno
dec
dec
cdq
dec
out
push
stos
and
aas
shl
loopne
or
sahf
xchg
jmp
aas
add
das
(bad)
(bad)
mov
sub
out
or
(bad)
cmp
scas
int3
jge
cmc
imul
pop
sbb
add
das
dec
xor
mov
daa
sahf
mov
in
xchg
leave
adc
(bad)
sub
mov
pop
xor
mov
ror
lods
push
mov
jae
jmp
push
cmp
imul
mov
and
xlat
retf
add
push
xor
stos
or
and
movs
hlt
add
fistp
daa
adc
jbe
mov
add
add
(bad)
icebp
sti
sbb
xchg
fsubrp
sbb
sub
mov
jge
mov
mov
lds
in
mov
and
and
clc
push
xor
jp
sub
mov
pop
sub
hlt
out
ret
movs
push
repz
(bad)
sub
push
mov
icebp
in
sbb
shl
inc
pop
mov
and
cs
push
add
mov
push
imul
cmp
pop
inc
and
fadd
mov
jecxz
xor
int3
fist
adc
jle
adc
sbb
fisub
rol
pushf
mov
pop
movs
into
fcomp
fstp
mov
shr
idiv
pop
adc
add
pop
or
or
xchg
push
popf
or
aas
inc
dec
sub
jecxz
sar
ja
xor
in
sub
dec
pop
dec
or
add
inc
mov
or
int3
sub
xchg
outs
in
add
jns
and
cmp
push
retf
jge
cmp
mov
popa
cmp
ins
xchg
pop
add
les
lea
shl
xor
add
mov
mov
test
nop
loop
rcr
es
push
sub
adc
jecxz
cmp
mov
sahf
fucompp
iret
push
xor
fld
push
and
dec
add
mov
ror
push
mov
jle
mov
cmp
mov
xchg
out
(bad)
scas
cmp
int
or
xchg
das
or
(bad)
(bad)
pop
out
cmp
and
ds
adc
into
mov
and
movs
xchg
push
push
and
outs
ins
mov
pop
sub
in
cs
int
mov
lahf
cld
cmp
in
mov
jecxz
test
dec
jno
adc
and
push
jmp
dec
das
mov
mul
jle
push
jmp
loope
cmp
inc
retf
fs
rcr
loop
xor
push
sub
das
sbb
nop
mov
cmp
nop
lahf
fcom
jl
sbb
pop
stos
popf
or
push
xor
mov
pop
lea
mov
add
xlat
ret
call
loope
mov
and
inc
dec
cld
add
(bad)
rol
fnstcw
fwait
jne
leave
daa
add
fstp
push
test
nop
gs
sub
jecxz
fidivr
xor
test
mov
outs
pushf
push
push
jge
xor
or
cmps
push
inc
jmp
mov
loopne
and
mov
or
mov
mov
jp
xchg
sub
leave
cmp
jb
rol
lods
dec
xor
jb
repnz
(bad)
stos
pop
sahf
push
pushf
dec
into
xchg
out
std
fsubr
clc
addr16
enter
rol
sub
xor
mov
cmp
lock
popf
mov
xlat
in
lahf
call
add
dec
loope
fcomp
mov
pop
sub
in
(bad)
stos
pop
fs
pop
adc
retf
mov
jecxz
ins
das
call
mov
jnp
jl
scas
inc
popf
inc
outs
or
jne
mov
jmp
lahf
(bad)
movs
jmp
hlt
inc
or
xor
mov
(bad)
rcl
xor
or
mov
jmp
fimul
jbe
pop
outs
je
daa
cmp
and
jb
repnz
jge
arpl
es
jae
les
push
loop
lods
cmp
ins
call
push
push
sub
fwait
movs
es
cmp
jg
dec
push
xor
les
cmp
(bad)
xor
cmp
test
call
call
ss
jecxz
rcl
call
fs
sti
sbb
retf
stc
repz
fld
pop
push
inc
shr
jmp
dec
outs
push
into
push
pop
jecxz
repz
(bad)
cmp
fldcw
retf
stc
test
daa
pop
cs
dec
in
test
sahf
jb
and
sti
jecxz
pop
je
dec
loope
mov
xor
in
scas
repz
mov
sbb
imul
xor
mov
dec
fdivr
jmp
xchg
mov
dec
lea
xor
or
jnp
dec
jne
add
pushf
aam
popa
fwait
shl
mov
mov
popa
cli
dec
out
in
mov
sbb
inc
cmc
mov
xchg
cld
call
pop
pop
pushf
inc
jae
add
lds
ins
mov
imul
les
jle
out
stc
fild
add
popf
jo
leave
arpl
jg
lods
push
add
pop
cwde
sub
fmul
xchg
xor
je
xchg
jl
(bad)
hlt
jg
out
xchg
not
js
retf
movs
jmp
cmp
dec
mov
dec
push
data16
ret
repz
xchg
cli
ins
aaa
push
repnz
xchg
aam
and
and
cmp
xor
aaa
not
lock
adc
sub
mov
xor
cmps
xchg
lods
pushf
inc
mov
mov
xchg
pop
inc
sub
pop
enter
push
sbb
scas
cli
sbb
and
push
add
add
jg
loop
inc
int
cmps
rol
jecxz
daa
jnp
jecxz
sub
adc
cmps
sub
fsubrp
adc
scas
xchg
scas
push
sub
cmp
out
cli
or
sbb
lahf
sbb
push
ds
push
dec
mov
idiv
mov
jo
pushf
fsub
(bad)
sub
push
ficomp
inc
lahf
or
xchg
cmps
jo
in
arpl
or
xchg
adc
fs
ror
mov
int
sbb
and
and
test
call
adc
add
out
ins
fimul
jns
mov
or
outs
push
pop
cld
fdivr
div
(bad)
and
jae
jge
sbb
xchg
aaa
test
retf
pop
cmps
adc
and
dec
xor
xor
pop
ds
jne
adc
jge
loope
sub
rcl
mov
ds
sbb
push
(bad)
retf
int
jno
jl
sbb
loop
sbb
jle
ins
in
pop
and
or
fwait
repnz
fdiv
stos
scas
cli
movs
aas
mov
fld
cmps
or
jle
(bad)
xchg
faddp
add
in
je
push
rcl
pop
(bad)
add
add
adc
inc
in
sub
adc
arpl
out
dec
shr
fsub
mov
adc
push
add
dec
jo
lock
inc
jge
or
jmp
pop
es
mov
aam
jmp
push
pop
in
shl
xor
int3
test
xchg
mov
mov
ret
stos
movs
out
xor
inc
add
jo
xor
test
xor
jae
(bad)
fisttp
jecxz
retf
add
adc
mov
sbb
ins
shl
daa
mov
cli
push
sbb
cs
in
stc
arpl
retf
push
lea
adc
dec
xchg
cli
inc
sti
ret
les
bound
cmp
jns
mov
and
das
sub
inc
sub
pusha
add
xchg
or
adc
scas
movs
shl
sbb
adc
xchg
pop
ret
sti
pop
jmp
daa
dec
jnp
and
inc
(bad)
test
sub
jge
lahf
aad
add
je
jp
es
imul
or
sub
mov
jbe
cmps
push
leave
jmp
div
or
jb
cmp
and
pop
sbb
dec
mov
lds
mov
mov
xlat
sub
into
and
in
mov
sub
imul
adc
les
shr
in
loope
xchg
js
enter
test
in
jae
cmp
int
adc
iret
sbb
and
jmp
inc
ror
mov
mov
xchg
inc
jmp
inc
cli
mov
push
push
in
jl
(bad)
ins
and
mov
loope
xlat
shl
loope
cdq
add
mov
xor
sub
jp
out
xchg
jmp
fs
add
cmp
jmp
enter
popa
or
jl
js
mov
rcr
sbb
(bad)
push
jg
in
outs
or
adc
leave
lock
adc
pushf
mov
lods
mov
and
stos
test
movs
repnz
stc
stos
push
idiv
jmp
add
aam
retf
cmp
pop
stos
je
mov
mov
mov
add
pop
ss
jno
xlat
push
and
cmp
mov
xchg
cmc
mov
pop
jmp
mov
idiv
sub
xor
mul
pop
or
mov
ja
popf
call
adc
jns
adc
cmp
jne
cmp
xchg
clc
dec
sbb
sbb
inc
dec
not
mov
je
shl
xor
sub
sub
inc
or
call
inc
add
in
inc
jmp
sar
push
pop
inc
push
pop
mov
and
arpl
(bad)
and
aas
cld
sti
je
pop
pop
and
rol
shl
popa
adc
cmp
and
inc
(bad)
sbb
mov
push
mov
or
in
out
jg
xchg
add
mov
iret
pop
ja
add
leave
(bad)
cmp
lods
aaa
iret
popf
xchg
xchg
or
lods
rol
and
jmp
int
push
inc
cld
imul
dec
mov
das
dec
dec
stos
dec
mov
gs
cli
icebp
push
mov
pop
add
lahf
push
mov
sub
jmp
cmp
xor
add
and
inc
jns
in
pop
fnsave
call
sbb
cli
sub
hlt
(bad)
test
das
lods
outs
stc
inc
mov
push
enter
push
ds
ret
and
sbb
jmp
fsub
cmp
mov
dec
inc
adc
stos
cmp
mov
fsub
xlat
bound
stc
adc
cmp
das
fsub
dec
add
and
pop
mov
pop
fist
jbe
ror
or
sbb
mov
stos
mov
shr
xchg
in
iret
push
cmp
cs
jne
fild
cld
pop
mov
cli
jae
cwde
scas
imul
dec
push
repnz
add
mov
sbb
test
fsub
cmps
pop
movs
push
fimul
call
lods
jecxz
fisttp
fld
add
push
jae
xchg
ja
sbb
cmp
cmps
stos
inc
mov
mov
fisttp
ins
inc
mov
inc
jl
mov
out
mov
cli
loope
pushf
add
js
or
fcmovb
jl
push
add
jmp
inc
adc
mov
outs
fsub
aad
sbb
push
ins
sbb
add
fcmovu
xchg
(bad)
jae
pop
inc
repz
xchg
jge
sahf
adc
push
gs
inc
cwde
cmp
lods
jnp
adc
sub
and
fsubp
adc
bound
lock
popf
mov
or
ret
rcl
in
dec
jae
aas
les
mov
push
test
test
jmp
push
mov
push
sbb
lods
cwde
and
add
jmp
cmps
add
retf
adc
int3
xor
cmp
out
cs
pop
add
call
(bad)
pop
cld
test
hlt
addr16
leave
sub
fisubr
mov
mov
stos
cld
push
mov
sbb
mov
xlat
mov
data16
daa
lahf
mov
idiv
pushf
lods
xor
dec
(bad)
mov
int3
mov
ss
rcl
inc
into
shr
shl
test
xchg
sti
gs
xor
and
xchg
add
xchg
adc
clc
or
xchg
jnp
retf
fwait
cmp
out
xlat
push
xchg
adc
or
neg
cld
in
es
pop
clc
adc
mov
mov
jle
test
mov
mov
test
(bad)
rcl
dec
leave
jge
jae
js
dec
sub
fadd
xchg
cmc
or
dec
sbb
loope
fcom
call
jmp
enter
ss
(bad)
xor
das
fistp
pop
push
and
push
push
je
adc
das
cwde
or
in
xor
adc
sub
mov
xor
xchg
outs
jmp
push
fdivr
dec
ja
or
push
aam
fld
cld
pop
add
pusha
dec
inc
jns
fsubr
jmp
lahf
mov
xor
cmp
xchg
outs
pop
mov
ret
jp
addr16
aam
sub
ss
mov
push
imul
pop
push
sub
or
mov
jp
(bad)
pop
sbb
pop
sbb
xchg
movs
in
ins
sub
retf
add
cmpxchg
or
cmp
and
push
pop
jle
add
lods
dec
pusha
sahf
outs
mov
cmp
xchg
fwait
mov
mov
and
cmp
inc
out
fwait
xchg
xor
fs
adc
test
dec
or
stos
je
int
(bad)
repnz
shl
out
mov
(bad)
neg
adc
ja
fild
aad
push
mov
std
rcr
jl
pop
test
movs
mov
in
xor
imul
cli
out
cmp
mov
jl
mov
pusha
mov
ins
jle
out
cmp
mov
cmp
sbb
leave
or
sub
loop
push
(bad)
or
in
and
mov
sbb
jle
push
mov
ins
mov
repnz
ja
push
dec
aad
ins
push
or
sbb
scas
cmc
adc
pop
adc
pop
in
nop
bound
pop
xchg
ret
aas
pop
mov
inc
mov
dec
mov
xchg
test
cmc
pushf
call
pop
mov
add
test
and
sbb
jno
xchg
add
(bad)
jmp
xchg
je
mov
gs
sahf
loop
cmc
pop
jl
ss
stos
sbb
cmpxchg
jne
ror
repz
leave
cmp
nop
fisttp
jo
adc
je
shr
stos
xor
dec
stos
shr
fnstenv
mov
jp
cmp
repz
push
outs
icebp
inc
mov
cmp
ins
test
sub
inc
enter
je
jl
mov
sub
xor
ret
test
mov
cmps
call
repz
push
(bad)
rcl
rcr
cmp
xor
push
pop
clc
mov
mov
(bad)
mov
in
xor
pop
stc
(bad)
(bad)
mov
in
dec
jae
mov
cmps
pop
aad
xchg
inc
imul
cmp
repnz
sbb
push
je
aad
fstp
aam
jnp
retf
xchg
rcl
push
dec
mov
or
and
fistp
dec
cmp
or
(bad)
pop
fwait
jle
int
pop
mov
jecxz
aas
cwde
jbe
adc
orps
arpl
mov
dec
mov
xchg
jae
jne
sahf
inc
cmp
mov
fs
mov
cmp
mov
lods
push
fsubr
jnp
xchg
fistp
xor
sbb
in
out
or
inc
nop
mov
sbb
ja
imul
or
mov
arpl
mov
bound
xchg
div
or
inc
lds
lods
in
stc
std
rcr
adc
mov
movs
fistp
adc
cmp
sbb
stos
iret
shl
cmp
mov
pop
xchg
mov
pop
push
int3
cmc
mov
in
fs
(bad)
inc
xchg
aaa
dec
jge
mov
pop
push
in
push
fisttp
stos
sub
push
cld
mov
hlt
xor
adc
sub
lock
push
jb
jmp
mov
mov
aas
mov
push
mov
int
cmp
xchg
outs
dec
cwde
pusha
sti
cmp
push
fld
xor
(bad)
or
push
ss
lds
mov
jp
je
mov
retf
sbb
ss
sbb
test
pop
pusha
lods
out
xchg
(bad)
dec
es
jl
sbb
push
lock
(bad)
aad
push
pop
mov
loope
or
mov
lods
push
push
scas
sbb
retf
mov
scas
inc
xchg
xchg
test
or
jbe
adc
leave
fimul
or
sub
stos
mov
icebp
mov
or
push
push
inc
xchg
mov
inc
sbb
popa
push
mov
pop
sbb
jns
fistp
mov
pop
mov
pop
dec
movs
jne
sti
dec
retf
mov
aas
mov
sub
sbb
mov
fstp
push
mov
pop
repz
dec
pusha
dec
ret
mov
aad
aaa
aad
inc
dec
jmp
das
sbb
mov
or
lahf
(bad)
pop
ins
sub
test
or
inc
push
mov
xchg
mov
les
xchg
push
adc
loope
mov
jmp
xchg
retf
mov
mov
fidiv
stos
hlt
pop
call
mov
mov
jmp
xchg
xchg
mov
cmp
xor
jmp
inc
ror
mov
mov
mov
lahf
jmp
loop
jle
inc
mov
cdq
mov
jnp
add
adc
mov
and
and
std
ret
or
mov
dec
sub
mov
inc
pop
sar
push
iret
in
jge
es
pop
retf
pop
pop
mov
je
sbb
ins
mov
ins
push
not
push
(bad)
sbb
and
jbe
jb
std
rol
sbb
dec
mov
fst
loope
aam
fcmovb
ficomp
test
ja
sbb
mov
adc
adc
or
xchg
mov
fwait
inc
rol
xchg
out
movs
xchg
add
xchg
(bad)
mov
dec
lods
dec
and
sbb
test
stos
xchg
pop
and
xor
in
fidiv
scas
les
(bad)
push
int3
(bad)
jno
ja
adc
mov
push
cld
test
and
repnz
call
xchg
adc
mov
cmps
lods
mov
cmps
outs
pop
mov
(bad)
or
repz
push
call
xor
(bad)
rcl
mov
(bad)
push
inc
jl
les
xor
(bad)
mul
push
push
mov
mov
bound
cli
dec
jecxz
call
aad
lock
mov
test
sbb
xor
in
push
data16
pop
popa
iret
cmps
lahf
mov
and
sub
cdq
ins
pop
jle
jns
and
cmp
xor
fwait
mov
jle
and
ja
mov
xor
and
mov
out
sub
mov
sub
jg
fcomp
in
cmp
cmc
and
jns
call
fwait
pop
mov
sub
mov
inc
jg
jmp
outs
int
loop
sub
pop
mov
icebp
jns
jmp
push
and
mov
test
mov
pop
xor
and
fidiv
rcr
stos
ret
and
xlat
or
jmp
mov
pop
test
pusha
mov
lock
mov
xchg
aam
hlt
jmp
(bad)
ja
jmp
adc
inc
inc
push
dec
mov
lock
dec
fst
lds
pop
(bad)
push
cmp
jg
inc
pop
rol
imul
mov
jg
mov
rol
adc
mov
mov
clc
leave
test
movs
xchg
sbb
push
popf
data16
xchg
call
shl
sti
cmc
shl
lods
jecxz
and
js
retf
(bad)
xchg
cmc
shl
icebp
(bad)
imul
les
leave
jbe
loope
sti
into
enter
inc
pusha
add
test
sub
push
(bad)
mov
xor
pushf
inc
repz
out
nop
in
call
pop
lea
inc
jmp
nop
add
mov
sub
cmps
xor
std
cmp
sbb
add
sahf
adc
and
jo
aad
jmp
int3
push
push
adc
jecxz
bound
mov
into
adc
fsubrp
loop
or
cmp
inc
cmp
shl
cmps
repnz
dec
mov
repz
mov
xchg
aas
shr
and
(bad)
mov
jb
dec
push
mov
jo
push
sbb
and
and
jo
pop
mov
adc
xor
sbb
pop
mov
jo
call
push
push
(bad)
mov
shl
push
fadd
call
rcl
jl
xchg
pop
stos
push
mov
cmp
(bad)
stc
sub
dec
or
sub
cdq
lea
lds
movs
sbb
ins
stos
inc
ins
cmc
cmp
cdq
movd
sub
jecxz
(bad)
mov
ret
xor
imul
dec
idiv
(bad)
fidivr
test
mov
and
mov
inc
xlat
cmp
movs
jle
pop
rcr
loopne
sub
dec
dec
in
push
jl
mov
mov
inc
mov
iret
in
push
(bad)
pop
mov
pop
rcl
test
out
cmp
pop
clc
daa
test
cmp
cwde
shl
push
and
rol
or
inc
jo
imul
(bad)
jmp
sub
xchg
or
xor
in
mov
sbb
std
pop
je
cmp
mov
xor
jmp
(bad)
sbb
push
ins
push
out
or
mov
(bad)
xor
add
sub
mov
sahf
and
xlat
scas
fdivrp
push
cmp
je
ret
sti
sbb
jp
mov
aaa
or
in
pop
push
cld
loopne
add
inc
ror
shl
jae
cld
pop
fwait
in
stc
pop
add
cmps
stos
mov
add
pop
addr16
arpl
outs
in
int
mov
(bad)
cmp
add
daa
inc
pop
cmp
dec
sub
(bad)
or
push
push
fwait
movs
mov
xchg
or
shl
shl
fld
stos
retf
cld
jns
fcom
popa
inc
mov
sbb
mov
pop
jmp
pop
in
pop
push
push
js
xor
fimul
cmc
adc
dec
add
cmp
ins
(bad)
fld
fdivr
cmp
fwait
mov
jo
dec
jle
pop
add
jmp
shl
dec
loope
and
out
fwait
and
ja
imul
cmp
enter
sbb
mov
ret
sub
lods
cld
shl
fst
xchg
push
mov
pushf
out
(bad)
cli
adc
out
iret
sar
jmp
or
mov
fcom
pop
fisub
mov
(bad)
fadd
cld
mov
inc
(bad)
cld
push
hlt
out
cmps
cmc
fsubr
mov
pop
jle
push
xchg
ficomp
push
jne
sub
clc
or
cmp
into
sbb
jae
or
xchg
fsub
cwde
xchg
fistp
cli
loop
in
add
push
push
pop
sub
ds
xlat
stos
dec
(bad)
mov
and
ja
and
dec
and
(bad)
xchg
inc
push
mov
dec
xchg
adc
inc
cmp
inc
dec
mov
dec
pop
(bad)
xor
and
out
push
adc
(bad)
(bad)
push
add
push
(bad)
mov
pop
sar
lahf
mov
test
add
int
adc
mov
or
jno
mov
fcomp
stc
xchg
and
retf
int
add
mov
dec
icebp
add
call
pop
retf
push
fnstenv
jge
fst
push
mov
daa
inc
ins
or
jbe
scas
movs
je
cmps
ret
inc
cmps
fnstenv
test
inc
es
imul
xchg
push
inc
xor
stc
lock
dec
mov
test
or
inc
hlt
xor
mov
push
push
ss
lds
add
push
sub
push
and
pop
mov
push
jnp
enter
clc
(bad)
sbb
scas
sbb
jge
xchg
cmp
int3
jb
lods
xor
shr
xor
loope
stos
mov
xlat
call
mov
add
push
mov
xchg
pop
ret
push
dec
sahf
push
mov
push
and
mov
xchg
int
int
mov
mov
sbb
mov
xor
sbb
fisttp
fdivr
dec
(bad)
mov
icebp
xor
push
pop
adc
add
(bad)
or
dec
jno
fst
aaa
mov
or
pop
mov
lds
fsubr
lahf
add
add
or
sbb
jmp
sbb
nop
mov
push
jo
sub
popf
sub
mov
cmp
retf
and
or
ds
push
imul
mov
pop
out
and
sub
cmp
mov
ins
sub
inc
aaa
sub
fcomp
out
xor
lahf
cld
mov
leave
push
lock
hlt
(bad)
mov
push
dec
push
out
jmp
in
call
jmp
and
add
mov
mov
shl
fcomi
push
xor
daa
out
sets
data16
retf
sbb
inc
test
push
mov
js
mov
test
test
dec
mov
aam
mov
xor
mov
into
sahf
or
and
sbb
add
lea
push
lods
xchg
push
or
loop
shl
cli
xchg
repz
jno
dec
hlt
jae
scas
js
js
xor
jae
add
xor
xchg
movs
cmp
xchg
push
pushf
mov
leave
inc
sbb
outs
push
push
test
loopne
pop
icebp
sbb
call
mov
mov
pusha
cwde
das
mov
push
pushf
sbb
fcmovne
cmp
xor
fstp
fwait
es
add
jg
xor
mov
mov
sbb
adc
mov
cdq
xchg
push
clc
add
shr
std
sbb
les
push
cdq
cdq
arpl
sub
xchg
loope
enter
cmp
rol
leave
aad
push
cmps
jmp
lea
and
cmps
mov
popf
out
inc
gs
sahf
std
inc
shl
rcr
sub
xchg
aam
and
loope
sub
pop
leave
fild
(bad)
(bad)
sub
xor
nop
mov
mov
and
ret
mov
jo
cmps
jmp
rcr
ret
push
sbb
cmps
repz
jp
fs
test
inc
cmps
aad
pushf
jbe
(bad)
mov
jne
mov
aam
hlt
in
les
std
xlat
add
je
fwait
xchg
pop
lahf
push
test
dec
xchg
push
hlt
jbe
xchg
mov
lea
fbstp
sar
int
pop
aad
mov
mov
jl
add
fisttp
pop
neg
(bad)
sub
sbb
xor
icebp
iret
pop
mov
mov
movs
mov
out
and
and
cmp
cli
shl
jecxz
mov
xor
adc
sub
push
jge
mov
jo
mov
push
in
(bad)
in
bnd
into
xor
jno
and
sub
addr16
aam
adc
fist
rcr
aad
inc
jp
(bad)
leave
call
sahf
sti
cmp
cmp
imul
in
sbb
shl
in
stos
sbb
mov
test
mov
push
adc
add
inc
ds
(bad)
inc
xchg
rol
add
repnz
pop
out
fs
add
pop
xchg
push
jge
pop
lea
jno
lods
out
icebp
mov
sbb
or
or
mov
(bad)
js
xchg
imul
pop
push
inc
and
pusha
cli
js
mov
sbb
cmp
sti
dec
xlat
inc
mov
add
arpl
mov
xchg
xchg
or
or
ret
popa
popf
movs
outs
push
arpl
mov
pop
bound
out
lahf
cmp
add
add
mov
mov
mov
push
push
jne
add
jbe
arpl
jle
dec
inc
mov
popf
shr
inc
test
jb
jne
aad
fst
cmps
add
jnp
mov
cmps
pop
cdq
add
enter
fldl2t
add
je
cdq
cld
scas
test
mov
es
neg
mov
push
les
jns
mov
mov
cmps
ja
xor
sub
ja
jmp
xor
in
pushf
out
(bad)
int
mov
adc
push
add
loop
call
nop
push
push
hlt
add
test
or
outs
mov
inc
mov
imul
aam
cli
xor
repnz
test
jecxz
sub
xchg
jae
pop
shl
add
and
mov
out
mov
sbb
stos
add
ret
mov
push
mov
push
retf
pop
dec
aaa
push
pop
hlt
ss
fcmovbe
loopne
xchg
or
lods
outs
rcl
fcomp
mov
cmp
shl
xor
jecxz
cmps
or
xchg
or
push
push
(bad)
mov
in
mov
mov
push
or
pop
xchg
jns
sub
outs
push
fist
aad
fwait
int3
or
dec
rol
ficom
mov
xchg
out
stos
in
xchg
push
scas
cmps
jmp
mov
leave
fadd
dec
mov
push
add
iret
adc
adc
daa
push
cmp
jmp
movs
jno
push
adc
arpl
mov
enter
mov
pushf
stos
(bad)
sub
or
aaa
out
data16
mov
xchg
bound
aaa
out
jno
fist
jle
mov
inc
ja
iret
mov
push
call
mov
or
(bad)
repz
mov
xor
sub
xor
out
and
fstp
push
dec
push
xchg
lea
ror
in
push
xchg
pop
jo
ins
jle
int
add
mov
and
ret
push
mov
clc
dec
jno
movs
ror
pop
jge
div
mov
push
add
icebp
inc
ja
add
sti
pusha
push
arpl
add
pop
ss
add
jge
lods
and
sub
test
or
cwde
cmp
sbb
push
sub
sub
push
xchg
jbe
sbb
push
or
cmp
dec
dec
(bad)
sbb
pop
fbld
mov
push
sub
(bad)
test
and
xor
iret
mov
rcl
ins
imul
mov
movs
add
retf
push
dec
out
jle
pop
in
xchg
ins
xchg
adc
fidivr
sub
xchg
mov
sbb
jecxz
ins
xor
mov
dec
ja
push
popf
inc
or
leave
pop
xor
or
mov
retf
fdiv
jmp
adc
mov
mov
cmp
(bad)
and
sub
mov
cld
ins
xchg
call
jo
mov
jne
call
out
(bad)
pop
std
leave
scas
mov
imul
mov
ret
and
ins
xchg
adc
aam
sbb
fdiv
push
lods
or
xchg
fwait
or
xchg
mov
pop
ret
leave
fwait
aas
fld
mov
pop
push
jbe
inc
aas
js
int
adc
ret
sub
cmp
inc
or
inc
ja
sub
mov
jle
dec
sbb
scas
add
sti
(bad)
jne
ins
movs
fldcw
xchg
jmp
or
in
int3
leave
and
repz
sbb
mov
dec
rol
xor
aam
push
es
std
repz
and
mov
mov
arpl
cmps
icebp
out
std
push
mov
or
call
pusha
push
popf
movs
xchg
cwde
inc
popa
out
dec
fist
mov
adc
fwait
push
jecxz
xor
cmp
shl
lods
push
mov
int
popa
es
push
repnz
stos
mov
sub
jne
test
pop
dec
in
loopne
retf
jmp
jecxz
lds
sub
enter
mov
mov
les
imul
sahf
cmp
mov
enter
jp
(bad)
int
sbb
aad
mov
stc
xor
sub
aad
mov
repz
shr
dec
data16
shr
add
(bad)
xor
push
pop
gs
iret
scas
leave
shl
ins
arpl
add
aas
fild
cld
mov
mov
lahf
nop
xchg
xor
adc
and
mov
in
mov
(bad)
ficom
adc
imul
adc
rcl
mov
sub
jmp
xor
in
mov
rcl
les
mov
test
xchg
cdq
sub
out
xchg
push
fdiv
pop
shr
fwait
dec
in
mov
les
mov
xor
loope
jno
ds
sti
or
or
and
sub
mov
or
popa
std
pop
inc
lahf
(bad)
(bad)
stos
ror
jno
push
sub
add
add
mov
pop
or
lock
inc
adc
fild
inc
movs
out
neg
lock
nop
inc
imul
push
adc
hlt
pop
jmp
jae
push
mov
xor
pop
sbb
xchg
mov
cmp
clc
push
mov
fsubr
cmp
outs
cmps
imul
rcl
mov
mov
mov
out
(bad)
mov
push
xchg
sahf
sbb
push
out
outs
cmc
ja
not
mov
cmc
scas
jae
cmps
cmp
jmp
and
push
out
dec
(bad)
punpckldq
mov
xor
pop
ret
popf
std
adc
das
dec
fdiv
test
cmp
ins
sbb
jmp
jg
enter
lods
push
outs
pop
ss
jae
arpl
bound
pop
je
and
xchg
mov
dec
cmp
jg
mov
in
(bad)
mov
sti
and
stc
pop
sub
dec
sbb
pop
xor
or
in
(bad)
in
movs
sbb
loope
clc
xchg
push
pop
cmp
push
mov
in
bound
pop
cmp
not
mov
or
jmp
popa
ins
mov
test
dec
stos
lock
jle
addr16
jmp
mov
pushf
jb
lods
idiv
dec
mov
cs
clc
aad
ffreep
mov
stos
repz
sub
mov
lahf
call
sub
call
fcmovnbe
iret
pop
fidiv
cmp
add
es
das
inc
out
pop
push
xor
cmps
cmps
sub
or
push
stos
mov
maskmovq
mul
sub
inc
mov
dec
fbstp
xchg
mov
into
sub
jg
xchg
add
sub
jecxz
dec
cmp
movs
adc
inc
xchg
xor
out
out
adc
stc
pop
test
push
scas
mov
pop
shr
pop
mov
jbe
nop
xor
jbe
or
add
ins
sbb
inc
jae
mul
pushf
mov
outs
push
into
pop
cmp
in
clc
cmp
push
test
pop
ds
scas
adc
xchg
xchg
out
sbb
rcl
cmp
mov
adc
(bad)
repnz
xor
es
mov
jae
jae
fsub
pop
jp
sbb
ins
pop
or
retf
push
(bad)
hlt
ins
pop
sahf
pop
pop
ret
pop
jnp
inc
rcr
mov
pop
arpl
mov
into
(bad)
(bad)
movs
cli
rol
in
(bad)
clc
push
out
adc
and
add
sbb
dec
jbe
je
add
sbb
test
sti
shl
and
int3
(bad)
out
xor
rcl
lahf
jns
test
add
test
mov
je
pop
jl
cmp
dec
clc
push
test
pop
xor
jge
xor
push
stos
mov
daa
fistp
rol
dec
bound
fist
inc
mov
loope
test
cmp
push
repz
xchg
fmulp
xor
xchg
adc
ficomp
not
sbb
les
scas
fidivr
dec
fisttp
data16
cmp
and
js
xchg
xchg
dec
xlat
or
sbb
inc
sbb
shl
cmps
(bad)
iret
test
ins
xchg
lock
test
mov
jbe
loop
cdq
mov
inc
or
jnp
xchg
mov
xchg
(bad)
push
pusha
push
fstp
mov
loope
push
push
and
fisubr
leave
(bad)
push
jnp
(bad)
data16
or
add
inc
jo
mov
cwde
and
and
pop
cmp
shr
dec
icebp
pusha
push
sbb
lods
(bad)
xchg
(bad)
mov
jmp
mov
ins
xchg
mov
outs
xor
scas
inc
outs
aas
pop
add
ss
mov
arpl
dec
inc
js
pop
leave
adc
aaa
add
shl
and
sahf
into
pop
mov
das
jnp
jne
pop
and
ins
xor
ret
bound
mov
xor
jle
arpl
add
push
cld
in
sbb
je
mov
ins
jl
xchg
test
sbb
(bad)
scas
pop
inc
push
sahf
aaa
sbb
pop
or
data16
mov
pop
movs
add
cmp
ss
cmps
xor
aaa
(bad)
fst
pop
push
outs
dec
pop
pusha
aam
and
cld
mul
pop
inc
inc
aaa
cmps
mov
mov
(bad)
cli
ror
(bad)
jge
dec
push
jl
mov
ja
add
and
pop
mov
in
xlat
jmp
cmp
(bad)
inc
mov
or
test
js
jnp
dec
adc
in
fisttp
int
lock
pop
pop
xor
shl
cmp
push
aas
sub
fisttp
sti
sbb
cmp
repz
cmp
pop
xchg
arpl
push
(bad)
and
mov
pushf
int3
dec
push
std
add
push
push
aaa
pop
aad
push
and
pop
popa
jbe
xor
ss
pop
je
gs
mov
push
sub
mov
ins
push
imul
and
ins
out
or
jns
adc
fild
ins
mov
frstor
push
mov
retf
sar
jne
jl
pop
aas
push
push
fimul
inc
sbb
jmp
rcl
lea
pop
push
mov
xchg
(bad)
hlt
pop
test
xchg
push
fldenv
xor
(bad)
push
lods
ja
jnp
pop
inc
jl
test
rol
xchg
mov
int
popa
shr
inc
out
mov
icebp
fcom
mov
mov
rcr
jge
test
loope
or
aas
repnz
rol
mov
sub
fsubr
adc
mov
pop
scas
push
pop
mov
mov
fsubr
pop
fbld
push
shl
ret
ss
jecxz
push
inc
mov
je
imul
ins
rcr
jbe
jmp
int
adc
lahf
fdivr
jae
dec
cmp
ins
stc
pop
add
jno
mov
movs
push
add
in
jo
jl
add
mov
ror
and
movs
mov
sbb
jae
fbld
in
repnz
ss
(bad)
sub
cmp
scas
ss
jb
loop
cld
mov
gs
inc
or
mov
dec
shr
sub
(bad)
cdq
xor
xor
mov
call
xor
daa
loope
rcl
sbb
dec
lods
popf
sti
mov
pushf
fisub
mov
mov
gs
enter
in
jecxz
pop
(bad)
(bad)
cmc
outs
loope
inc
out
out
pusha
or
mov
(bad)
ins
cmp
xchg
mov
pop
test
dec
mov
jno
xor
push
mov
mov
and
(bad)
ins
cwde
cmps
pop
lea
cmp
aaa
in
ins
cs
inc
scas
xlat
lods
push
xchg
into
aas
cmp
cld
aaa
iret
mov
add
mov
sbb
sbb
xor
push
add
xchg
dec
les
imul
sub
and
xchg
call
dec
test
mov
jae
and
dec
fnstenv
ret
retf
jno
std
fnstsw
std
push
stc
loopne
mov
inc
push
jnp
push
mov
pusha
mov
enter
push
ffree
dec
ror
sub
(bad)
mov
xchg
outs
stos
sbb
movs
fs
cmp
sbb
cli
xchg
ja
popf
pop
jno
ins
pop
pop
mov
pop
dec
out
xor
iret
imul
retf
dec
sbb
fwait
test
dec
adc
or
cli
stc
js
add
sub
xor
outs
retf
lods
ss
mul
add
ret
pop
mov
xchg
pop
add
cmp
mov
stos
lock
jg
push
mov
loop
cmc
arpl
mov
add
cmp
push
sub
aas
jmp
jl
xor
das
(bad)
jge
jge
push
or
mov
push
enter
test
or
and
iret
xor
sahf
mov
dec
mov
and
mov
jmp
or
stc
jmp
imul
rcl
xor
cmp
mov
call
mov
leave
jmp
xor
xor
adc
dec
push
out
cli
xchg
int
xor
inc
std
fnstsw
icebp
mov
shr
xchg
xor
fdiv
mov
mov
pushf
popf
mov
daa
or
or
hlt
retf
and
mov
or
mov
add
cmp
sub
scas
mov
xor
in
fadd
shr
rep
stos
fcmovnu
jle
sbb
les
sti
inc
pop
xchg
(bad)
lock
ins
in
scas
xchg
adc
sahf
mov
adc
pop
mov
mul
fwait
loopne
push
push
and
xchg
out
ret
jo
xor
xchg
aaa
jne
jmp
xchg
stos
mov
push
push
mov
popf
sbb
mov
sub
push
fwait
ror
xchg
repnz
jge
dec
add
and
sbb
std
and
shl
enter
repz
ds
and
sub
in
push
ins
or
sub
(bad)
stc
or
sub
fstp
popa
xchg
pop
loope
lods
pop
jnp
test
mov
mov
out
fstp
cmc
add
inc
or
mov
add
mov
sub
(bad)
in
mov
xchg
and
adc
mov
add
sub
add
inc
fbstp
inc
jae
pop
sbb
sbb
movs
cmp
call
adc
jnp
adc
add
and
iret
mov
lods
dec
out
test
xor
push
js
lods
pop
sub
xchg
loopne
cmp
jl
(bad)
clc
dec
repz
pop
pop
xchg
pop
loopne
push
(bad)
push
mov
leave
dec
stos
fmul
mov
pop
loop
cmp
mov
movs
jo
mov
mov
pop
adc
imul
div
pusha
stos
push
jl
add
test
adc
int3
mov
pop
std
ja
push
dec
or
loopne
scas
aaa
mov
mov
mov
imul
das
int
aad
mov
or
clc
adc
test
pop
(bad)
push
test
pop
or
test
(bad)
loop
xchg
ret
lods
add
loop
(bad)
nop
aaa
cdq
push
jecxz
add
scas
enter
and
push
movs
frstor
pop
aad
inc
inc
jne
or
push
scas
mov
pop
ds
ins
fcomp
inc
cmc
rcl
mov
dec
scas
(bad)
or
dec
mov
jl
sub
mov
cmp
call
pop
pop
mov
fistp
dec
mov
adc
sub
test
cmp
repz
pusha
jae
mov
sbb
cmp
and
jecxz
inc
call
sbb
call
imul
mov
or
or
jo
adc
xor
mov
cmps
or
ficomp
pop
sub
mov
call
div
jns
popf
dec
dec
push
ficom
lds
inc
cmp
lds
sub
mov
(bad)
(bad)
in
(bad)
je
and
inc
stos
cmp
fisttp
inc
bound
aad
push
mov
sbb
mov
into
xchg
das
pop
pop
add
hlt
loope
cwde
push
lds
rcr
push
add
xor
fdivr
or
and
push
bound
or
and
scas
lea
adc
lahf
daa
lods
xor
aas
mov
cmps
retf
fnstcw
cld
jo
fdivr
dec
pusha
mov
adc
dec
imul
ret
or
icebp
aad
mov
loop
lds
fsub
repz
mov
jge
imul
cmps
repz
pop
dec
inc
nop
and
mov
sub
leave
xchg
pop
(bad)
hlt
cmp
fist
daa
leave
fstp
xor
nop
mov
mov
stos
arpl
sti
cmc
mov
out
(bad)
mov
retf
lods
scas
out
cmp
pop
pushf
xchg
mov
mov
or
frstor
pop
retf
test
xor
xchg
cmp
cmp
outs
pop
mov
pop
scas
out
dec
adc
pop
jecxz
lods
out
xchg
hlt
jne
sub
jl
mov
mov
sub
nop
in
gs
mov
popf
and
mov
mov
mov
bound
loop
or
loopne
out
sub
in
add
ja
in
sbb
or
popf
in
push
(bad)
cmp
fstp
cmp
call
call
push
pop
inc
jecxz
fmul
mov
mov
mov
and
sbb
push
push
push
arpl
mov
jg
push
retf
mov
clc
sub
and
out
pop
test
fwait
lahf
pop
pop
xchg
shr
fst
mov
and
mov
or
out
pop
cmps
inc
cmp
push
scas
jmp
mov
adc
mov
pop
cmps
aas
pusha
sbb
stos
sbb
jmp
scas
pop
jne
xor
retf
sub
fwait
loop
fld
mov
call
cmp
in
pop
int
aas
add
cld
sahf
push
xlat
fisub
mov
call
sub
scas
cmp
repnz
pop
sbb
js
push
push
out
mov
pushf
push
fwait
ds
mov
repnz
add
mov
lds
cmps
xchg
mov
mov
shl
xor
outs
sub
pop
cdq
pop
add
sbb
or
jmp
clc
scas
(bad)
xchg
sub
test
mov
ror
or
pusha
cmp
xchg
pop
loop
imul
(bad)
ret
xor
pop
adc
cmp
in
add
ins
mov
aas
movs
pop
fadd
js
inc
xor
push
xchg
test
inc
pop
dec
sub
xchg
add
je
xchg
sbb
mov
push
mov
mov
sti
push
push
fidiv
sbb
pop
mov
mov
ret
les
push
lods
ficom
nop
mov
imul
cmp
fsub
ins
mov
ret
punpcklbw
(bad)
mov
sar
dec
movs
sub
add
in
push
je
(bad)
jecxz
sar
stos
push
adc
hlt
scas
dec
cdq
cmp
cmps
femms
inc
shl
mov
leave
popf
mov
mov
rcr
lods
in
push
enter
cld
fstp
clc
retf
les
arpl
mov
jge
rol
cmp
xchg
ss
cmps
jnp
iret
cmp
cli
repz
add
inc
leave
loopne
cld
rcr
ins
ds
adc
inc
jmp
mov
mov
or
rol
dec
ins
or
pop
into
div
or
(bad)
(bad)
lods
pop
dec
mov
ins
push
cwde
push
and
jno
pop
das
push
push
adc
ins
aam
mov
ficom
pop
ja
adc
jb
xchg
mov
xchg
sahf
xor
mov
out
(bad)
movs
jg
xor
rol
fadd
sti
mov
sub
fnsave
and
or
mul
ss
in
adc
push
mov
push
(bad)
xchg
sbb
cs
dec
dec
imul
lds
lods
loopne
jae
fnstsw
cmp
and
and
xchg
stos
std
mov
clc
cmps
sti
out
cs
xchg
js
sbb
xor
nop
jbe
jmp
mov
iret
(bad)
push
loope
sub
(bad)
push
pop
mov
in
int
out
fmul
jmp
daa
jo
outs
cmp
push
add
fldcw
lahf
stos
mov
retf
mov
and
cmp
jl
sub
inc
dec
test
std
shl
dec
dec
jmp
dec
push
xchg
mov
and
mov
fmul
int3
rol
fiadd
add
sub
pop
(bad)
and
fcomp
iret
xchg
or
stos
jb
loop
inc
cs
xor
mov
fcmovbe
jge
(bad)
jae
sbb
adc
mov
hlt
sub
xor
dec
add
into
xchg
(bad)
int3
xor
dec
imul
or
jns
mov
aad
cmps
or
idiv
sbb
pop
inc
inc
lods
in
dec
das
and
xchg
push
sub
xor
jmp
lea
jo
adc
pop
test
ror
adc
fs
inc
out
ins
push
add
shl
and
je
test
push
jmp
mov
or
imul
adc
or
cmp
cmps
xchg
sub
loop
fs
rcr
sbb
or
mov
adc
xor
mov
or
jbe
call
cs
jbe
and
sar
mov
or
loop
aad
in
xor
gs
inc
jge
loope
mov
mov
shr
out
das
retf
(bad)
aaa
mov
outs
mov
jp
mov
inc
mov
pop
movs
cmp
test
sbb
js
jno
cmp
sub
scas
fadd
xor
aas
and
in
retf
jae
push
loope
out
pop
inc
int
aad
aam
xchg
cmps
inc
dec
cmp
ror
cmp
sti
pop
movs
lock
sar
dec
jmp
add
dec
data16
outs
sub
rol
mov
pop
dec
inc
cmps
mov
push
adc
jmp
gs
xchg
or
fcom
push
ins
sbb
mov
outs
jae
dec
mov
dec
int
pop
je
sti
xchg
loop
xor
and
pop
add
cli
xchg
loopne
repnz
outs
(bad)
push
or
push
cmp
mov
push
mov
xor
mov
add
(bad)
and
test
inc
imul
pop
sbb
mov
mov
fcmove
fild
jns
sub
push
enter
movs
mov
mov
add
popa
ret
dec
jae
push
test
dec
retf
xchg
bnd
das
sub
pop
sbb
das
loope
popa
cmp
xchg
sbb
xchg
in
mov
or
mov
sub
(bad)
inc
gs
mov
loope
inc
ins
inc
lods
pop
retf
mov
mov
mov
push
mov
push
test
mov
sbb
test
sbb
dec
inc
out
or
movs
pop
sar
inc
xchg
pop
rol
leave
scas
imul
enter
xchg
and
ds
in
mov
pop
dec
pop
scas
popf
xor
cli
dec
sub
adc
test
push
jge
or
add
lock
jne
(bad)
out
(bad)
in
xchg
(bad)
fdivr
popf
lock
fs
or
cmc
push
xchg
and
or
sbb
rcl
xor
(bad)
rcr
jnp
sar
jmp
push
add
rcr
sbb
pop
inc
pushf
pusha
retf
push
xchg
nop
mov
jae
pop
pop
cmp
jmp
jmp
bound
test
aad
pusha
ror
idiv
imul
push
(bad)
jmp
dec
ss
or
dec
jne
xchg
push
cmp
mov
int3
sti
setns
cmps
push
lds
shl
pusha
(bad)
mov
test
outs
push
es
push
sbb
lock
push
mov
pop
test
bound
sub
test
mov
jae
sbb
js
fild
mov
cmps
shl
push
out
cmp
and
add
and
add
std
in
cmp
or
sub
lods
hlt
sbb
sar
sbb
(bad)
pop
fs
(bad)
mov
and
test
ret
jae
out
and
pushf
mov
cwde
stc
fldcw
ds
shl
ret
popf
test
sub
fcmovb
inc
jp
mov
jmp
dec
ds
shr
push
sahf
ds
xchg
xchg
(bad)
sti
pop
cmps
xchg
pop
and
cwde
sub
movs
dec
into
popf
push
push
sbb
cmps
mul
mov
mov
jg
push
ror
lods
fadd
icebp
aaa
lods
icebp
sub
sub
mov
add
in
mov
jge
fwait
imul
test
outs
call
std
nop
ret
or
cmp
pop
sub
out
data16
and
(bad)
ins
mov
ss
jl
movs
push
imul
push
adc
fucomi
ja
sar
scas
sbb
mov
sub
inc
inc
fadd
pop
in
inc
mov
sahf
dec
push
call
mov
pop
icebp
cmp
in
xchg
loopne
(bad)
and
dec
call
call
cmp
ss
jb
mov
outs
dec
es
dec
push
or
mov
out
sub
dec
and
stos
int3
ja
dec
outs
cld
push
daa
and
mov
ret
pop
daa
lods
xor
jb
(bad)
daa
xchg
pop
xchg
mov
pop
jg
jo
fsubrp
inc
add
cmp
cmp
imul
outs
outs
and
sbb
(bad)
adc
aam
call
cvtdq2ps
imul
xor
jmp
adc
fcmovnbe
scas
in
psrlq
aad
sbb
lods
imul
fidiv
mov
nop
dec
scas
jmp
add
icebp
sub
mov
push
rcl
push
jb
shl
cwde
add
(bad)
pop
popf
sbb
mov
dec
adc
icebp
std
repnz
out
sti
test
popf
ja
loop
xchg
jne
mov
fidivr
hlt
imul
retf
pop
xor
cmp
out
jbe
xchg
cwde
std
rcr
xlat
and
js
xchg
mov
push
je
jl
iret
inc
outs
sub
aad
mov
loop
fcmovnb
shl
shl
ror
adc
sub
add
pop
das
or
call
int3
stos
movs
retf
mov
add
ret
jmp
or
xchg
sbb
imul
mov
adc
or
and
pop
stc
add
mov
mov
outs
xor
mov
mov
loop
fcom
lds
cwde
loopne
outs
(bad)
sub
or
xchg
lods
ins
out
in
enter
icebp
cs
mov
div
in
xchg
xor
mov
inc
jns
cmp
mov
xor
cld
aam
pop
mov
xchg
fdivr
and
repz
push
enter
mov
stc
pop
loope
jne
jp
pop
add
push
dec
or
jecxz
ss
adc
inc
mul
fild
cli
ins
inc
inc
ret
scas
fs
dec
fcmovnu
add
ffreep
mov
addr16
fs
sub
pop
mov
je
jge
jo
adc
and
jbe
sti
lods
inc
mov
mov
xchg
(bad)
es
fucomp
loop
(bad)
dec
das
std
data16
lds
out
inc
imul
fdiv
(bad)
cli
cmp
xor
bound
scas
xlat
xchg
lock
cwde
loopne
arpl
sbb
jnp
mov
test
and
xchg
dec
sub
push
push
or
xor
cld
pop
jmp
pusha
and
add
imul
lea
fucom
sbb
mov
aad
xchg
and
cmc
xor
pop
inc
lahf
and
shl
lock
and
sbb
mov
lahf
outs
mov
xchg
dec
icebp
pop
xchg
pop
call
std
jmp
mov
test
lea
ror
jmp
sub
mov
lods
ret
push
je
jns
add
test
and
or
xchg
mov
and
or
jae
fcmove
push
jo
ffree
sahf
aaa
pop
nop
push
pushf
cwde
inc
sub
in
add
movs
jg
rol
pop
mov
push
movs
lock
xor
ret
popa
movs
addr16
and
jmp
sar
push
xchg
push
push
stc
sbb
pop
mov
mov
pop
or
shr
cs
stos
loop
scas
aam
xchg
outs
je
or
mov
bnd
(bad)
sub
cmps
addr16
fisub
sbb
xor
dec
sbb
mov
dec
pushf
adc
adc
pop
push
pop
sub
add
or
in
sti
jecxz
popf
mov
mov
adc
test
inc
les
push
add
repz
fnstcw
jno
gs
jbe
jmp
lods
jle
xchg
icebp
inc
push
pop
test
push
mov
jge
mov
pop
das
ins
and
gs
jl
mov
fsubrp
jmp
mov
daa
retf
pop
jb
retf
xchg
ficom
bound
mov
mov
shr
inc
cs
cmp
xor
(bad)
xchg
xchg
and
(bad)
ret
sbb
gs
xchg
sbb
arpl
jmp
push
lea
ss
or
push
cmp
cld
or
imul
sbb
lahf
xor
dec
jnp
retf
in
cmc
pop
fcomp
repnz
cmp
imul
xor
inc
add
sbb
stc
test
retf
int3
mov
cmp
or
mov
mov
repnz
mov
adc
repz
aad
inc
je
push
fidivr
rcr
scas
xor
push
sar
xchg
lahf
or
inc
mov
xchg
mov
dec
sub
xor
(bad)
and
mov
fisttp
jg
pop
ss
out
int
ins
mov
push
clc
xor
stc
das
push
jnp
loop
add
push
test
test
mov
dec
movs
or
adc
cmp
lods
pop
mov
mov
or
lea
fs
jmp
je
push
cld
inc
mov
xchg
jb
adc
sub
cli
cmp
std
adc
pop
mov
sbb
adc
xchg
sbb
jae
mov
or
icebp
jbe
push
adc
scas
in
cmp
sbb
cld
push
fcom
or
(bad)
leave
les
(bad)
jmp
sub
adc
mov
mov
mov
loopne
sar
into
and
inc
or
imul
bound
fsincos
retf
cmps
sahf
popa
stos
imul
add
cmp
add
test
mov
mov
arpl
mov
or
xchg
and
inc
push
rcl
mov
in
pushw
sub
inc
mov
mov
lds
out
or
adc
stos
sbb
push
enter
sub
gs
mov
stos
mov
or
cmps
and
fs
scas
aad
push
hlt
pop
imul
and
jnp
pop
rol
pop
xchg
imul
or
lock
pop
mov
repz
cwde
sbb
in
xchg
push
and
sbb
pop
cmp
ja
aam
inc
xor
fcmovnb
imul
push
pushf
fsubp
dec
in
sub
call
(bad)
sbb
add
cmp
movs
bound
inc
int3
mov
aad
adc
in
ret
xor
outs
lock
pusha
mov
xchg
ds
sahf
loopne
pop
lea
xlat
sbb
call
loop
push
call
fstp
inc
(bad)
and
cmp
xchg
retf
ja
or
adc
sti
jnp
rcr
inc
dec
pusha
icebp
cli
mov
stos
jmp
fsubr
iret
jne
fiadd
jo
ficomp
and
fiadd
xor
imul
(bad)
int
aaa
fisttp
pop
mov
(bad)
jp
jecxz
inc
add
pop
sahf
in
push
repz
sub
and
jl
in
daa
loopne
icebp
push
pop
pop
xchg
cs
push
mov
xchg
arpl
icebp
inc
cmc
pop
ror
out
add
jle
sub
pop
loop
mov
movs
or
in
(bad)
js
test
mov
push
sti
jno
aas
mov
movs
je
test
sbb
mov
inc
add
pop
or
adc
out
push
mov
mov
mov
(bad)
imul
dec
cmps
xor
mov
push
mov
repnz
int3
push
mov
retf
jo
retf
xor
in
adc
imul
js
test
ret
cmp
sub
popa
jns
inc
aam
outs
ins
jle
push
mov
xor
cmp
data16
outs
pusha
fsub
xchg
sub
dec
push
adc
(bad)
or
jge
mov
clc
and
xor
sbb
sbb
aad
cmp
int3
dec
push
cmps
pop
ds
mov
mov
test
push
fdiv
sbb
stos
pusha
pop
jno
add
or
lods
cmp
adc
or
std
clc
mov
adc
pop
pusha
xchg
cmp
enter
push
or
(bad)
imul
rol
push
jge
das
push
les
jg
iret
pop
inc
fistp
dec
pushf
sahf
sub
loop
pop
scas
jmp
dec
mov
inc
outs
mov
lods
adc
dec
pop
mov
cmp
fidiv
cli
std
int
push
imul
xchg
cmp
sbb
sbb
outs
int3
(bad)
or
shl
xchg
dec
scas
loope
jg
xchg
movs
adc
adc
push
pop
test
pop
xchg
out
cmps
(bad)
test
xchg
in
cli
movs
xchg
mov
std
shl
icebp
sub
push
sbb
aaa
push
jmp
addr16
loopne
cmp
arpl
adc
cli
ds
(bad)
cmp
fldenv
jmp
sbb
dec
xor
dec
lahf
movs
(bad)
std
dec
jno
mov
mov
sub
push
adc
repnz
and
push
call
retf
sbb
(bad)
pop
push
or
push
push
cmp
mov
xchg
leave
pop
test
jp
sahf
xor
inc
imul
jbe
cmp
loope
mov
sbb
adc
mov
sbb
fidivr
xchg
imul
jmp
fistp
cmp
mov
cmp
call
je
push
popf
dec
dec
cmp
and
mov
neg
inc
scas
jnp
jo
push
jo
mov
jo
mov
repnz
lea
sbb
mov
dec
popa
int
jnp
or
test
jns
adc
jo
loope
jg
xor
outs
ror
inc
es
push
fstp
sub
pop
jmp
int3
inc
sub
push
mov
ins
loop
mov
scas
rol
jmp
jns
in
xor
mov
ss
xchg
jb
sbb
sbb
jmp
push
pop
test
addr16
aas
mov
push
xchg
pop
dec
nop
sbb
ds
mov
(bad)
outs
int3
dec
pop
inc
inc
imul
(bad)
loope
rcl
test
inc
jp
cmps
push
(bad)
lods
imul
or
imul
push
(bad)
push
mov
jae
jae
add
adc
loopne
mov
push
mov
jp
and
or
icebp
(bad)
je
lea
out
inc
repz
adc
in
out
imul
jmp
jmp
sub
cmp
std
repnz
(bad)
ret
scas
xchg
sahf
add
aaa
mov
sub
(bad)
(bad)
and
add
aas
adc
sbb
cmc
loopne
ret
and
in
clc
add
or
rcl
sub
mov
(bad)
repnz
or
adc
dec
nop
xor
mov
push
inc
or
(bad)
cmp
sub
cmps
mov
xor
pop
adc
cmps
or
shl
stos
xor
fs
mov
call
dec
add
ret
push
lock
mov
fbstp
int3
sbb
bound
add
test
jbe
stos
push
jl
mov
inc
fadd
out
jo
icebp
pop
mov
xor
js
mov
call
icebp
in
add
jmp
dec
enter
adc
test
mov
or
jge
push
mov
arpl
test
aas
stos
inc
bnd
lock
inc
je
ss
adc
cli
data16
xchg
scas
out
xchg
dec
sar
movs
(bad)
jle
arpl
mov
cmps
xchg
push
and
mov
aas
or
cdq
inc
or
dec
ret
(bad)
pushf
lea
jge
dec
addr16
pop
sub
push
push
mov
sub
mov
inc
rol
int
call
pusha
and
into
add
and
inc
pop
pusha
sahf
ja
(bad)
push
pop
dec
fisttp
pop
jp
pop
sub
sub
xchg
rcr
sbb
push
mov
cs
out
mov
pop
lods
add
inc
xchg
mov
hlt
iret
inc
popf
inc
dec
and
mov
mov
or
mov
test
(bad)
xchg
inc
sub
jle
scas
adc
ret
je
and
jge
shr
mov
cwde
pop
cwde
cmp
test
push
xor
(bad)
mov
psraw
xchg
iret
jnp
(bad)
ret
arpl
pop
fnstenv
aad
ins
lods
mov
xchg
cmps
jge
and
xor
mov
pop
sub
mov
pop
cmps
lds
pop
cmp
test
shl
lds
loopne
cmp
mov
in
dec
pop
aad
loopne
(bad)
nop
push
pushf
mov
in
ffree
sub
sbb
push
or
pop
mov
pop
push
ss
jo
dec
stos
je
loope
mov
jmp
ret
in
inc
sub
jnp
mov
add
ret
jg
popf
(bad)
in
shr
xchg
push
repnz
repz
jno
or
loopne
je
emms
sbb
mov
pusha
ja
push
mul
call
mov
xchg
mov
jp
jl
rol
ret
push
mov
popa
test
jl
popa
mov
cmp
mov
and
cmps
jmp
push
(bad)
sub
xchg
into
jle
and
les
fisub
push
cmp
cmps
or
out
mov
sbb
test
scas
sub
outs
inc
jp
and
pop
out
xchg
retf
loopne
push
int3
dec
inc
out
xchg
popa
xor
into
aam
ds
and
imul
add
jp
pusha
sub
cld
xor
xlat
mov
and
or
sbb
test
jl
push
sbb
add
adc
in
mov
popa
jmp
ret
push
das
shr
or
mov
lea
add
cmps
stos
scas
inc
mov
sti
or
movs
outs
pop
in
jcxz
(bad)
loopne
mov
add
gs
int3
sbb
push
mov
movs
call
in
inc
xchg
sahf
(bad)
aad
sbb
ins
push
leave
pop
cli
rcr
jb
pop
push
rol
dec
test
out
fidivr
xor
retf
push
ret
inc
push
fmul
inc
dec
mov
in
cdq
cli
shl
repz
push
sub
popf
pop
xchg
mov
scas
data16
fwait
xchg
and
push
in
stc
les
pop
les
fldenv
mov
jno
jae
adc
repnz
mov
nop
push
mov
and
mov
xchg
push
icebp
pmaxub
add
das
mov
hlt
add
pusha
push
pushf
dec
inc
mov
(bad)
jne
xchg
xor
andps
jbe
add
xchg
clc
mov
sbb
lds
pusha
push
scas
movs
mov
fimul
xchg
mov
inc
test
iret
sub
cmp
rol
stos
jno
and
or
lock
dec
int
pop
loop
adc
ins
pop
jle
inc
enter
popa
mov
pop
xor
nop
and
lock
cmps
bnd
mov
ss
out
xchg
(bad)
cmc
and
xor
inc
cwde
inc
jge
cmp
push
push
push
movs
cmp
mov
cmps
xchg
lahf
imul
cmp
xchg
lods
test
or
(bad)
mov
lods
movs
cmp
xchg
xchg
and
clc
push
jmp
inc
mov
out
and
xor
ins
test
push
jp
jl
push
push
mov
call
and
and
imul
movs
pop
mov
out
scas
bound
arpl
pusha
xsha1
xor
mov
das
jecxz
iret
jge
push
cwde
sbb
loope
(bad)
iret
out
leave
movs
add
clc
call
mov
or
mov
mov
pop
icebp
xlat
not
xor
sub
add
je
frstor
lock
push
cmp
push
dec
pop
mov
inc
dec
jbe
out
xchg
into
jns
inc
in
inc
lods
xchg
ins
push
sbb
(bad)
push
fwait
repz
push
sbb
dec
mov
test
loope
popf
mov
gs
hlt
(bad)
cmp
add
mov
int
inc
sub
mov
or
jbe
das
sbb
and
adc
or
jmp
arpl
cld
mov
cmp
add
inc
and
scas
jne
mov
or
sbb
adc
push
sub
es
add
and
push
in
mov
imul
cmp
cmp
push
ror
lods
cmp
mov
jge
stos
scas
inc
mov
fdivr
sbb
loopne
(bad)
mov
jle
es
adc
push
ja
push
mov
push
cmps
int3
pusha
cmp
xor
xlat
jmp
add
repz
push
push
loopne
add
test
xor
ja
outs
aam
test
adc
mov
xor
sti
inc
retf
popf
inc
scas
int3
mov
call
cmps
sub
cwde
inc
adc
arpl
stos
mov
in
mov
test
loopne
es
push
call
push
out
mov
xor
imul
enter
repnz
in
aad
enter
or
retf
fld
das
mov
xchg
test
imul
outs
in
fist
sahf
cmp
sbb
xchg
hlt
jge
push
cmp
(bad)
sub
jmp
add
xor
retf
std
repz
lods
bound
lds
ds
pop
and
icebp
data16
mov
inc
sub
adc
je
arpl
enter
push
ja
adc
shr
pop
push
jne
mov
arpl
in
add
jb
jns
jb
js
mov
mov
push
dec
pusha
mov
xor
jp
out
mov
mov
sahf
sub
not
lock
leave
shl
bound
out
pop
cmp
(bad)
lock
xchg
out
adc
xor
hlt
jo
pushf
xor
mov
test
inc
cmp
xchg
pop
ret
scas
and
sbb
inc
mov
cmps
inc
in
lods
inc
sub
imul
icebp
xor
pop
shl
fst
xor
repnz
and
mov
push
iret
in
push
xchg
call
stos
hlt
pop
and
cmc
adc
mov
and
cli
test
cmp
movs
fild
sub
mov
jl
int3
sub
mov
mov
std
scas
retf
aas
ret
iret
xlat
loop
cmp
mov
cs
imul
fidiv
ret
xchg
sbb
movs
sti
add
das
ret
pop
and
inc
ins
add
push
(bad)
push
pop
fisub
cld
sub
pushf
aam
test
popa
cs
or
jge
sti
push
mov
lods
mov
and
scas
mov
fisttp
rcl
call
mov
mov
xor
xlat
sahf
mov
add
push
mov
(bad)
jp
mov
mov
dec
idiv
dec
aad
or
retf
pop
jmp
xchg
cmp
lds
ins
push
inc
xchg
mov
mov
adc
ins
out
xor
scas
pop
push
sub
sahf
cmp
pop
mov
jns
scas
repnz
pop
dec
enter
push
sbb
adc
or
jae
mov
xchg
sti
lock
mov
cmp
xchg
push
fistp
aas
adc
ja
push
sub
and
cmc
add
(bad)
hlt
jmp
add
push
push
mov
jmp
pop
pop
scas
scas
dec
test
pop
push
xor
div
push
lea
inc
dec
bound
mov
mov
outs
pusha
daa
sub
das
aam
jecxz
mov
pop
mov
int3
(bad)
lds
and
mov
jns
mov
push
mov
les
inc
test
pop
jbe
cmc
inc
imul
cmp
leave
and
aam
fs
jmp
lods
popf
sub
enter
(bad)
gs
sbb
aas
cmc
adc
out
mov
adc
inc
pop
mov
adc
ins
cmp
mov
mov
add
cmp
cs
jae
push
mov
pop
xchg
sub
xor
(bad)
int
sbb
shl
into
push
adc
ret
aam
loope
jmp
popf
sbb
or
jge
(bad)
cld
sub
and
mov
pop
sar
add
cmp
daa
imul
in
sar
sub
aam
mov
mov
xchg
dec
jmp
test
or
sub
xor
icebp
jle
and
push
cmps
inc
out
dec
js
sub
mov
cmp
stos
cli
mov
sbb
adc
jmp
jmp
sbb
call
xor
xchg
mov
xchg
xor
or
icebp
push
in
test
adc
mov
xchg
jle
movs
fild
sub
push
movs
mov
dec
mov
into
scas
imul
ret
movs
out
jle
jl
imul
les
daa
hlt
inc
iret
mov
mov
lea
in
iret
movs
push
addr16
js
sar
jmp
shl
in
cmp
dec
adc
or
and
pushf
leave
xchg
data16
push
int3
test
pop
xlat
push
rol
js
cmp
(bad)
call
sahf
ds
lods
sbb
les
xor
enter
sub
int3
inc
sub
ror
ret
retf
sub
movs
int
pop
(bad)
aaa
push
call
or
mov
popa
mov
adc
shr
fadd
jne
or
jle
mov
ret
test
into
sbb
in
dec
push
imul
(bad)
mov
pusha
pop
add
sahf
cmp
push
(bad)
int3
rol
mov
(bad)
fcom
cdq
or
pop
in
or
inc
adc
int3
(bad)
jb
xchg
pop
push
sub
test
cmp
call
fcmovnbe
push
adc
push
cs
sbb
int
sbb
push
add
adc
gs
jo
cmp
mov
cli
outs
std
pop
mov
ds
xchg
jns
loop
cli
fbstp
fwait
mov
mov
or
ffree
pushf
add
int3
jle
cli
(bad)
push
adc
pop
mov
jecxz
call
or
aaa
sub
sub
fadd
inc
xchg
lods
cmps
push
add
cwde
push
fidivr
addr16
adc
out
mov
and
ins
push
jmp
cmp
pop
popa
std
dec
xchg
push
(bad)
(bad)
sti
mov
mov
daa
inc
mov
repz
(bad)
outs
inc
push
inc
(bad)
or
xor
out
xchg
fbstp
and
(bad)
xchg
popf
call
dec
inc
in
adc
pop
fs
lods
dec
push
imul
mov
out
aam
jmp
mov
sti
inc
xor
ins
mov
sub
mov
imul
lahf
iret
or
and
sbb
push
loope
cmp
jne
and
stc
adc
push
jmp
jp
dec
push
cmp
pop
rcl
daa
push
lahf
cmps
outs
shl
sub
jo
mov
sbb
inc
jne
cmp
pop
adc
int
sub
adc
icebp
pop
(bad)
mov
pop
push
jne
sbb
push
mov
jp
cmp
adc
shr
mov
or
outs
jle
jge
call
adc
xchg
cmp
(bad)
mov
xlat
push
pop
xchg
sub
fistp
cmc
test
out
cli
jns
mov
mov
in
fcom
inc
cmc
pusha
mov
adc
iret
push
inc
add
ins
push
int
and
rcr
scas
jb
mov
out
stc
cmps
cmp
pop
mov
test
cmp
jl
fimul
imul
loope
rcl
jno
cmp
mov
mov
mov
loope
mov
jecxz
jg
fwait
xchg
mov
fstp
cmp
ins
out
jle
hlt
push
pop
or
cmps
stc
pushf
inc
dec
cmps
idiv
icebp
mov
pop
or
cmp
xor
aaa
(bad)
push
das
inc
jmp
and
loop
push
leave
outs
mov
aam
add
push
pusha
(bad)
adc
xor
mov
or
xchg
clc
popf
jbe
jnp
push
push
jg
mov
and
cmp
add
lahf
in
out
fcmovnbe
fwait
stc
adc
test
sub
bound
push
gs
cmps
ss
push
pushf
aaa
mov
sbb
fisubr
or
cli
mov
es
add
dec
or
jecxz
push
or
jne
push
out
sub
scas
in
out
mov
mov
inc
outs
cmps
mov
jecxz
pop
cmps
or
gs
scas
aas
sbb
iret
rcr
xor
xor
push
adc
jecxz
xchg
pop
xchg
jae
sbb
int3
(bad)
clc
cmp
add
inc
cmps
test
pusha
mov
je
repz
xchg
mov
mov
add
das
xchg
push
dec
push
cmp
movs
hlt
lods
in
lock
jae
js
mov
push
out
xor
adc
adc
gs
push
fstp
mov
push
(bad)
push
mov
inc
xchg
movs
mov
push
fdivr
add
push
leave
mov
sbb
pop
pop
inc
or
add
idiv
sbb
call
jge
imul
bound
int
jecxz
push
out
pusha
cmp
cmps
jp
jns
and
aaa
xchg
cdq
loope
pop
add
js
jmp
push
pop
inc
jne
inc
ret
aad
repz
(bad)
mov
mov
ror
sub
mov
inc
addr16
icebp
or
cmp
shl
out
mov
sbb
addr16
or
push
jns
dec
add
xchg
out
mov
shr
ret
xor
mov
hlt
cmp
push
push
push
iret
or
pop
and
cmp
jnp
sbb
or
shr
jle
in
cmp
xchg
adc
jg
aad
jl
call
out
fisttp
adc
aas
movs
repz
pop
pop
in
and
xor
or
test
out
pusha
das
sub
xchg
xchg
imul
mov
mov
push
int
movs
jecxz
std
lods
cmp
push
mov
mov
xchg
je
(bad)
push
ins
bound
fbld
xchg
imul
daa
pop
push
div
ja
or
enter
add
ret
sti
mov
in
mov
or
or
test
fwait
mov
jo
in
movs
pop
lahf
sahf
fbstp
and
aam
(bad)
or
nop
ret
jae
jo
pop
std
xor
sbb
sbb
push
pop
call
mov
dec
sbb
outs
rcr
stc
outs
iret
(bad)
cmc
xor
aam
aam
imul
jge
(bad)
sub
sbb
int3
sbb
sub
pushf
mov
mov
sub
mov
jbe
mov
mov
test
pop
and
ss
xchg
bound
jmp
mov
adc
jae
bound
xchg
inc
and
mov
dec
inc
call
xchg
fwait
mov
sbb
ret
xchg
xchg
das
sar
pop
push
jp
mov
xchg
(bad)
pop
inc
dec
pop
push
ss
sbb
lods
pop
repz
les
das
fwait
(bad)
ret
xchg
xchg
add
dec
mov
adc
mov
push
xor
stos
mov
cli
sub
mov
adc
mov
sub
scas
std
or
inc
retf
mov
fsub
test
(bad)
mov
mov
aas
daa
movs
adc
and
xor
cmp
mov
add
dec
addr16
imul
jmp
lods
out
xchg
sbb
out
enter
pop
pushf
xchg
jl
cmp
cmp
xor
je
fwait
stos
enter
rol
dec
inc
imul
shr
aaa
rcr
pop
pusha
iret
hlt
cmc
cmp
pop
sbb
dec
pop
into
mov
(bad)
je
outs
cmp
aad
test
push
or
loopne
cmps
add
jno
fxch
out
daa
push
fidivr
inc
adc
jbe
inc
int3
leave
cmc
mov
mov
dec
dec
in
sbb
pop
loopne
movs
call
push
out
mov
adc
mov
ret
pop
xor
cmp
push
(bad)
push
dec
pop
sub
push
or
mov
jo
movs
data16
mov
add
push
mov
sub
sti
pop
loop
inc
(bad)
leave
mov
jmp
in
fsubr
add
xchg
xor
lds
imul
push
mov
jge
xchg
mov
sar
fs
jl
adc
dec
xchg
ja
clc
(bad)
shl
sahf
movs
sub
sub
cld
out
inc
push
lds
jl
sbb
(bad)
hlt
jl
int
push
adc
inc
outs
leave
pop
push
call
int3
xor
lods
fidivr
aad
je
cmp
lods
dec
xor
push
lods
iret
dec
push
lock
add
pop
lahf
in
sbb
aas
xor
cmp
ret
sbb
je
lods
int3
inc
sub
je
inc
(bad)
mov
or
and
cld
and
(bad)
je
pop
pop
jp
mov
jbe
dec
xlat
lahf
or
in
cli
jmp
iret
cld
retf
jno
inc
mov
mov
mov
es
cmc
into
cmp
jmp
dec
pop
or
cwde
jle
aad
scas
outs
pop
add
adc
into
jp
je
aas
lods
mov
lods
mov
repnz
(bad)
(bad)
push
and
pusha
hlt
cmp
pushf
test
out
push
mov
jmp
hlt
js
daa
sub
add
popf
call
dec
push
std
and
adc
cmp
idiv
leave
sbb
pushf
lea
jo
cmps
loop
sar
xchg
(bad)
out
and
cmc
mov
jbe
gs
ret
or
jno
test
fcomp
leave
repnz
int3
shr
outs
icebp
and
fiadd
cmp
dec
xchg
js
(bad)
mov
fisub
or
and
sub
bound
ret
in
sahf
rcl
or
jmp
scas
cli
jae
js
jg
sub
test
arpl
or
adc
mov
fldcw
stc
shr
adc
cmp
mov
out
mov
ins
and
xchg
pop
(bad)
mov
add
cs
fidiv
out
pop
out
(bad)
jmp
push
(bad)
loope
mov
jg
out
aas
popa
iret
stc
xchg
fbld
lods
call
jb
or
sbb
mov
pushf
push
sbb
out
dec
sbb
xchg
inc
push
mov
add
aam
pop
mov
retf
ins
iret
inc
add
ss
movs
scas
fcomp
out
sbb
mov
mov
icebp
sub
cwde
daa
lds
ficomp
jne
sbb
mov
(bad)
xchg
adc
push
pop
das
fs
idiv
cwde
(bad)
jo
push
xchg
mov
xor
shr
lahf
movs
mov
or
jg
imul
dec
xor
mov
xor
pop
sub
pusha
call
movs
or
(bad)
mov
sbb
pop
xchg
push
sub
xlat
push
in
mov
dec
out
mov
push
loop
or
scas
jge
ins
push
and
mov
cmps
jmp
sbb
shl
or
out
xor
push
fsubr
mov
adc
aaa
xchg
mov
mov
loope
dec
das
lea
jmp
jg
cmp
iret
mov
jl
cmc
mov
sub
rol
or
test
div
sar
fnstcw
xchg
push
imul
pop
xchg
in
and
nop
jns
(bad)
or
ins
loop
xor
scas
out
mov
mov
fs
push
jo
imul
push
mov
imul
cld
dec
lock
out
dec
cs
int3
pop
jmp
repz
mov
dec
mov
xlat
call
test
int3
pushf
adc
add
dec
mov
xchg
in
shr
aaa
cmp
fcom
repnz
rcr
test
push
sbb
jb
xor
stos
jecxz
and
imul
sar
adc
pusha
cmc
test
fs
dec
ror
sti
adc
iret
xor
cmp
repz
or
mov
loop
aad
or
rol
scas
inc
push
cli
mov
ja
retf
mov
push
pop
rcl
popa
add
ficom
xchg
mov
mov
scas
dec
out
(bad)
cwde
(bad)
mov
mov
icebp
leave
iret
jl
add
push
xor
js
xor
icebp
test
ret
pop
jmp
int3
push
push
adc
cld
ror
mov
imul
fs
xor
xchg
pop
adc
xchg
mov
stc
(bad)
call
test
das
jg
jecxz
(bad)
and
test
mov
ror
(bad)
nop
xor
ins
dec
stc
pop
retf
add
jmp
aam
mov
adc
rcr
sub
sar
mov
mov
jne
add
ja
out
dec
push
sbb
hlt
stc
cmp
dec
jno
pop
or
push
pop
xchg
jle
mov
lods
pop
xor
jmp
(bad)
cld
xchg
jnp
lods
movs
sti
shl
mov
and
icebp
fild
xchg
push
sub
mov
push
adc
mov
call
pop
mov
add
jae
mov
mov
outs
shr
pop
mov
xchg
neg
xchg
sar
push
pop
inc
mov
and
sbb
adc
(bad)
xchg
jmp
xchg
jecxz
push
stc
cli
aas
inc
jnp
gs
gs
inc
daa
push
ins
test
push
pushf
jecxz
dec
loop
sbb
adc
pop
mov
int3
fs
add
lahf
mov
inc
xchg
popaw
mov
dec
call
add
add
pusha
pop
mov
push
push
push
push
data16
gs
push
scas
test
push
neg
std
jnp
adc
shl
ss
pop
inc
nop
sbb
cli
bnd
adc
pop
movs
pop
cld
cld
mov
stos
stos
push
push
sar
dec
loop
push
and
out
aas
pop
push
hlt
(bad)
xor
inc
test
push
cld
dec
mov
dec
lock
(bad)
jmp
push
lds
jo
sub
fwait
fs
lods
jge
shl
add
mov
imul
adc
lds
cmp
pusha
arpl
aam
stos
inc
xchg
cmp
mov
lahf
push
adc
ds
gs
sub
mov
lea
push
out
pop
(bad)
cld
cmp
mov
sbb
int
mov
or
test
loopne
dec
gs
cmp
push
adc
jmp
movs
add
je
add
mov
mov
add
scas
pop
out
popa
or
js
pop
in
cld
clc
cmp
aas
movs
mov
xchg
mov
stos
xor
pop
or
xchg
mov
or
std
sti
xchg
inc
xlat
pop
cmp
or
retf
lods
int
xor
ds
inc
pop
xor
retf
ds
push
add
ins
sub
push
jns
stc
and
in
scas
repz
scas
cmps
ds
and
fidiv
test
adc
aad
pop
or
push
lods
mov
ins
fst
xor
jge
inc
loope
cwde
ds
and
mov
cs
fisttp
nop
ja
pusha
xchg
cwde
inc
add
movs
jmp
jl
mov
push
adc
cmps
lea
jne
ret
push
pop
test
mov
(bad)
ja
jo
stos
(bad)
and
xor
and
mov
sbb
adc
push
xchg
js
out
in
mov
(bad)
(bad)
repz
nop
pop
xchg
push
(bad)
cli
or
mov
jl
mov
out
aad
test
cmps
icebp
pop
xchg
into
punpcklbw
lahf
outs
xlat
pushf
fdiv
lahf
lds
dec
add
jecxz
(bad)
jp
push
add
cdq
in
fstp
arpl
retf
or
dec
out
sub
fist
ins
fwait
lahf
inc
call
loop
add
sub
jl
push
xchg
cmps
or
cmp
ins
mov
js
sbb
mov
dec
icebp
dec
sbb
jmp
jp
js
mov
sbb
(bad)
cmc
add
in
outs
(bad)
retf
sbb
sbb
xor
test
stc
sbb
jg
jge
test
xor
das
ja
mov
cmp
dec
pop
ja
sub
dec
and
outs
mov
rcr
in
aad
loopne
xchg
mul
inc
ret
(bad)
jl
sub
rcr
nop
in
es
add
dec
in
out
mov
arpl
jle
sbb
sub
mov
test
cdq
hlt
fbld
jle
sar
ss
aas
jne
enter
dec
outs
push
fucomi
fistp
adc
and
in
jl
data16
sub
test
std
push
gs
dec
cs
imul
cmp
imul
imul
dec
gs
sub
out
cdq
mov
pop
js
or
and
jne
push
pop
es
lea
call
lock
lods
push
dec
dec
call
adc
ret
pop
mov
push
mov
pusha
pop
out
retf
movs
ret
sub
cli
les
inc
lock
xor
mov
dec
out
clc
aaa
jne
stos
xchg
mov
push
(bad)
adc
or
sub
jb
aas
dec
stos
adc
cld
fs
dec
mov
pop
popa
add
into
or
add
xchg
adc
cld
xor
sbb
add
icebp
imul
add
inc
sbb
mov
or
add
imul
push
icebp
ror
lahf
dec
shl
mov
(bad)
push
fsubr
dec
sub
sub
mov
adc
mov
fimul
ret
out
push
and
(bad)
mov
or
fstp
pop
cdq
rcl
fidivr
or
je
aas
adc
inc
dec
and
fiadd
and
stc
cmp
mov
ror
adc
mov
adc
pushf
mov
and
push
ret
int3
cmps
dec
call
sbb
jecxz
pcmpgtd
je
call
ficom
sbb
aad
cld
xchg
test
adc
sbb
sbb
call
jbe
jp
sub
xor
mov
lds
test
je
ja
inc
in
xchg
hlt
or
mov
push
cli
dec
sbb
mov
cmp
aas
mov
mov
jae
loopne
ins
lea
aaa
mov
les
push
popa
xor
dec
mov
outs
sbb
fisttp
ins
mov
test
add
jl
dec
inc
push
in
test
out
xchg
aaa
mov
adc
retf
jmp
nop
add
retfw
(bad)
pop
xchg
add
push
aaa
or
fst
int
sbb
ins
ret
jp
and
(bad)
xchg
jns
jmp
pusha
inc
mov
push
in
push
enter
xchg
mov
mov
xchg
mov
mov
jl
fistp
movs
push
or
loop
icebp
daa
test
lds
dec
movs
jl
and
add
(bad)
rcr
scas
sub
lods
and
stos
rcr
push
cwde
push
pop
call
add
ins
mov
ds
dec
adc
push
inc
sahf
push
mov
pop
icebp
cmps
dec
adc
inc
les
(bad)
iret
and
inc
xchg
test
gs
mov
mov
push
int
dec
lea
xchg
ja
push
and
pop
loopne
adc
in
xor
mov
or
jmp
jns
cmc
popf
mov
mov
aad
mov
sub
mov
push
sub
cmc
sub
dec
out
jo
dec
mov
and
sub
mov
pushf
fstp
js
mov
pop
xor
mov
cmps
fnstenv
xor
clc
and
xchg
adc
loopne
iret
cmp
jno
and
pushf
rcr
repnz
(bad)
outs
rol
jg
xor
inc
imul
fiadd
int3
push
inc
stos
addr16
add
sahf
pop
inc
or
sbb
sti
and
pop
mov
lea
push
sub
jecxz
sub
sub
push
shr
stos
sub
cmp
dec
jae
xchg
lock
mov
lds
mov
jbe
xchg
idiv
test
in
xchg
cmp
ret
into
push
mov
sub
inc
ja
pop
sbb
cmp
ins
mov
addr16
push
cmp
fs
stos
arpl
push
(bad)
sub
adc
js
cwde
out
movs
mov
push
add
jno
mov
or
lock
test
pushf
xlat
addr16
pop
bound
sbb
pushf
out
je
shl
cmp
add
test
mov
repnz
inc
jg
into
adc
movs
neg
dec
xor
sbb
pop
(bad)
into
aad
in
lods
inc
aas
adc
arpl
or
xchg
inc
ss
xchg
aad
ss
push
jmp
sbb
shl
or
out
scas
xchg
or
ret
pop
push
(bad)
es
out
nop
sub
cs
sub
cmp
loopne
loop
(bad)
mov
push
pop
leave
out
sbb
cli
iret
mov
dec
xchg
inc
pop
and
out
lahf
pop
mov
cmp
ror
push
mov
push
(bad)
stos
mov
xchg
cmc
add
lds
inc
cmp
pop
xchg
add
mov
xchg
mov
or
loop
sub
icebp
(bad)
jle
mov
leave
pop
push
inc
(bad)
fwait
lock
ret
mov
cld
xor
shl
nop
xchg
movs
xchg
jmp
xlat
sub
add
call
stc
ret
dec
ss
inc
push
push
add
adc
jae
mov
or
mov
es
pop
sub
cmp
cmp
cld
mov
xchg
mov
sub
imul
add
and
and
push
call
adc
and
iret
out
cmp
pushfw
cdq
in
scas
clc
hlt
or
in
and
(bad)
or
repz
xor
nop
jg
jmp
and
sbb
clc
mov
sbb
fimul
pop
adc
adc
scas
pop
movs
or
dec
imul
outs
jb
nop
fs
jmp
jo
mov
scas
ss
scas
imul
cmps
and
sahf
inc
adc
daa
fdivr
jg
jecxz
lahf
cli
xchg
aas
xor
outs
xchg
mov
test
shl
mov
pushf
out
rcr
xchg
fidiv
ror
adc
jp
xchg
mov
adc
jecxz
cmp
xor
shr
fs
mov
(bad)
and
cmp
inc
clc
xchg
xchg
neg
adc
jae
aas
mul
push
xor
add
xor
mov
jmp
dec
(bad)
cld
xor
sub
jp
xchg
pushf
cmp
cwde
js
imul
fild
imul
movs
push
adc
stos
movaps
jnp
xor
mov
jnp
or
enter
imul
cmp
scas
gs
adc
or
or
loop
push
mov
lock
pop
loop
mov
xlat
das
jmp
dec
ss
(bad)
mov
mov
ds
add
ret
push
or
inc
test
sub
pop
dec
je
fldcw
pslld
fldl2e
inc
add
jns
or
adc
push
ins
pop
adc
loopne
sbb
inc
mov
out
mov
pop
add
cmp
adc
xchg
call
ins
add
mov
mov
xchg
add
push
into
iret
ja
pop
rol
jmp
cmp
sub
jmp
xchg
inc
scas
pop
pop
les
jecxz
aaa
scas
sbb
dec
jne
test
cmp
sbb
lods
fs
call
enter
mov
movs
out
jl
mov
and
cmp
mov
shl
(bad)
in
dec
dec
push
movs
fneni(8087
cmp
sub
xchg
stos
lods
mov
out
mov
arpl
mov
enter
xor
add
pop
and
retf
aaa
mov
xor
mov
lods
aaa
jmp
add
mov
inc
clc
lea
sbb
gs
outs
aaa
pop
pusha
mov
ret
stos
pop
mov
inc
aad
jbe
dec
sbb
es
dec
add
daa
loop
or
loopne
jp
lock
fs
xchg
xchg
js
sbb
bound
repz
jp
test
sub
inc
push
cld
sbb
jmp
fisubr
pop
mov
(bad)
mov
ret
inc
xor
and
js
push
add
cli
ins
pop
adc
cli
fisubr
outs
mov
fisubr
pushf
mov
adc
mov
mov
mov
pop
sub
popf
push
movs
int3
scas
pop
movs
std
pop
inc
push
out
fisubr
cmps
js
out
cdq
repnz
ss
out
inc
int
pop
lea
das
cwde
loop
inc
cmp
sub
div
mov
pushf
add
mov
pop
xor
mov
repz
lock
push
repnz
inc
adc
mov
icebp
add
mov
or
pop
pop
loope
pop
shl
jno
push
xor
lock
or
cld
sbb
xor
mov
jle
pop
jmp
sub
jl
sbb
je
push
add
iret
add
mov
gs
add
ror
call
cmp
std
loope
mov
ins
add
push
mov
ret
aam
stos
xor
test
loope
in
sbb
jbe
jmp
cmp
mov
loop
test
rcl
mov
dec
or
cmp
(bad)
cmp
nop
xchg
int3
loope
xchg
mov
and
pusha
cmp
pop
jecxz
inc
jo
jne
mov
aaa
dec
stos
jns
cmp
lahf
or
pushf
mov
or
sbb
xchg
in
std
cmp
sbb
lods
mov
pop
lock
cmps
mov
jl
sub
xchg
cs
nop
sub
jecxz
fs
xor
lock
mov
pop
sar
outs
mov
push
mov
mov
push
jns
rcl
mov
test
sar
jmp
jo
pop
call
or
hlt
add
sub
add
das
ins
pop
pop
ror
cmp
xor
into
inc
push
push
jmp
jmp
pop
fwait
in
pop
mov
pop
sub
fldlg2
inc
(bad)
aaa
mov
sub
imul
add
fisub
jmp
in
xchg
dec
mov
adc
dec
cmc
mov
fstp
jle
cmps
sbb
cmp
les
jmp
rcl
aad
sahf
xor
mov
xchg
adc
lock
imul
jne
enter
add
xchg
mov
cmps
ins
and
cdq
inc
scas
lea
push
daa
(bad)
push
sqrtps
xor
(bad)
stc
xchg
push
or
imul
jmp
or
fwait
iret
push
dec
pushf
push
jnp
imul
and
or
not
hlt
dec
std
sub
jl
aas
rol
fs
xchg
sbb
lods
call
cmp
mov
mov
test
inc
lods
or
scas
mov
outs
adc
dec
mov
inc
mov
ja
jle
lods
pop
mov
daa
inc
push
in
pop
ds
push
mov
adc
ret
mov
jmp
pop
sbb
push
inc
pop
or
leave
in
pop
jo
aam
dec
mov
jb
bound
jg
mov
std
test
mov
cs
and
pop
xchg
pop
xchg
xor
shl
or
and
push
jb
js
or
imul
les
xchg
pop
loop
jmp
sbb
dec
test
mov
daa
bound
cs
into
xor
mov
shl
ins
lahf
dec
aas
or
push
retf
sub
nop
popf
push
adc
ret
jno
repz
cmp
pop
add
sub
aaa
lods
mov
cmp
inc
pop
or
jl
adc
shr
or
cli
add
xchg
xchg
inc
sti
mov
cmps
pop
repz
(bad)
data16
sub
pop
pop
loopne
sub
jg
pop
mov
sti
mov
and
scas
mov
mov
fnstcw
outs
mov
lds
bound
xor
jo
add
mov
mov
mov
outs
sahf
pushf
lahf
push
lods
adc
in
xor
mov
cmp
jmp
inc
ret
cmps
sub
shl
lea
iret
icebp
jp
cwde
loop
scas
cld
nop
test
retw
adc
aaa
sub
dec
(bad)
xchg
sbb
enter
jno
in
shr
and
(bad)
(bad)
adc
jl
pop
cwde
and
mov
aam
pop
les
push
pop
xchg
or
(bad)
and
test
jbe
call
lea
into
pop
pop
repz
into
inc
mov
xor
mov
or
add
es
xor
pusha
test
sbb
jmp
sbb
mov
out
mov
stc
repnz
int
jno
pop
push
mov
in
nop
jnp
pushf
xor
fwait
push
ins
pop
pop
mov
xchg
dec
out
adc
sbb
xor
push
(bad)
fcomp
sbb
and
lds
mov
mov
pop
push
xchg
data16
push
enter
shr
movs
push
sti
sti
adc
sbb
or
leave
mov
cmps
test
jae
mov
pusha
pop
retf
test
test
and
inc
mov
aas
dec
in
into
push
cmp
xor
mov
and
lods
aam
pop
iret
sbb
jg
or
jo
(bad)
aam
lds
stos
jno
fild
loop
mov
addr16
push
push
push
mov
mov
retf
rcl
fisub
out
scas
lds
push
aaa
or
ins
ret
outs
pop
inc
rcr
or
pushf
das
repnz
stos
mov
jmp
sbb
sub
adc
gs
cmp
movs
bnd
lds
movs
and
es
lock
mov
ja
(bad)
cmp
push
jl
popf
push
std
and
sub
fimul
test
pop
inc
or
cmps
bound
lahf
push
cmp
mov
int3
push
and
push
cmp
movs
push
sbb
loop
add
jge
(bad)
ja
fadd
in
xchg
add
xor
shr
push
imul
and
fmul
outs
or
sub
ss
push
mov
in
and
out
add
push
dec
inc
cmp
js
pop
fadd
xchg
sti
inc
or
sub
cdq
ficom
mov
cmp
sub
ss
adc
call
bnd
sbb
mov
pop
ss
mov
and
(bad)
jns
popf
sbb
jge
out
adc
pop
pop
(bad)
nop
mov
icebp
adc
lods
sub
fs
inc
and
call
mov
mov
cli
enterw
mov
ret
jbe
or
cmp
popa
mov
js
dec
sub
cmps
js
sub
push
add
xchg
in
pop
dec
jl
je
fs
push
jge
lea
ins
aas
data16
xchg
jae
xor
outs
ret
xchg
jns
scas
mov
loopne
jne
cmp
and
mov
(bad)
and
push
and
xor
(bad)
into
or
popa
cmp
xchg
int
out
xchg
push
enter
adc
ds
(bad)
sbb
add
ja
inc
ds
sbb
mov
call
jmp
mov
pop
sbb
pop
sti
xchg
xchg
sbb
cli
inc
fimul
or
pop
ret
inc
pop
ror
ret
adc
adc
mov
mov
outs
jno
or
inc
jne
sub
xchg
pop
out
sar
hlt
adc
mov
jmp
inc
imul
(bad)
test
sbb
inc
mov
rcr
or
jecxz
sbb
sbb
js
in
nop
retf
lock
and
icebp
jno
fistp
div
mov
pop
icebp
cmp
repz
aam
cmps
ret
icebp
sti
nop
bnd
popf
mov
pop
mov
sub
dec
scas
adc
mov
sub
sub
sbb
xor
mov
push
dec
dec
int
cmp
push
xor
jmp
xchg
cmp
fcomi
inc
std
jmp
fstp
jmp
jmp
lds
sbb
jns
xchg
add
sbb
mov
lods
push
pop
shr
xchg
add
ds
pop
pop
lods
cdq
mov
outs
cmp
pop
aad
dec
dec
mov
pop
jnp
jmp
dec
sbb
mov
(bad)
pop
mov
or
arpl
sbb
sbb
push
pop
inc
stc
nop
and
cmp
loope
int
in
xor
cmc
leave
(bad)
scas
call
or
ja
lods
cwde
shr
sub
add
and
xchg
xor
iret
pop
sub
ds
mov
sub
aaa
aad
(bad)
jnp
sub
and
js
repz
cmp
cmc
(bad)
mov
mov
mov
or
popa
dec
add
stc
ret
imul
mov
jp
cmp
sbb
fcom
cmps
ins
iret
aaa
icebp
push
nop
push
jbe
shl
pushf
scas
addr16
or
xlat
add
or
pusha
xor
call
ins
push
jl
jmp
ret
loopne
in
and
scas
pop
les
cmps
(bad)
mov
jno
(bad)
fcompp
or
jb
or
push
add
sub
mov
inc
enter
and
fadd
push
inc
(bad)
jmp
outs
retf
mov
ins
repz
out
jne
dec
push
jno
out
xor
pushf
rcr
daa
fimul
push
add
add
xchg
and
ret
sbb
lds
pop
cmovs
jg
mov
repz
push
cmp
pop
in
jae
and
add
(bad)
cmp
push
fstp
push
xchg
mov
sbb
push
xor
fwait
pop
out
fcomp
or
mov
and
add
call
xchg
hlt
jns
or
add
gs
in
pop
xchg
jbe
enter
aaa
mov
movs
lahf
fild
popf
or
repz
cmp
movs
dec
int3
cmps
repnz
adc
mov
call
repz
adc
adc
rol
int
into
iret
adc
mov
jb
add
adc
push
push
pop
push
aaa
cmc
das
inc
pop
mov
imul
pop
(bad)
movd
jbe
adc
mov
push
mov
push
clc
inc
aas
dec
mov
int3
sbb
inc
push
or
add
lea
int
adc
push
clc
fidiv
outs
cli
cld
xchg
movs
movs
xor
and
fdivrp
aad
jbe
sar
pop
mov
sbb
cwde
or
sub
nop
das
add
aad
bnd
sub
popf
push
hlt
ins
cmc
ja
inc
mov
add
sbb
sub
jmp
int3
and
imul
data16
fs
push
mov
cld
repz
xchg
inc
(bad)
(bad)
jmp
jg
iret
imul
dec
ror
xor
scas
int
out
xlat
inc
mov
push
inc
adc
pop
jo
inc
ss
pop
or
jle
xor
xchg
mov
mov
cwde
mov
(bad)
adc
pop
push
or
jmp
leave
fistp
dec
cmp
xchg
scas
sbb
push
mov
xor
adc
hlt
jle
cmp
push
pop
nop
scas
stc
mov
push
inc
push
in
fldcw
repz
sub
rcl
rcl
fstp
dec
dec
sbb
or
inc
repz
push
(bad)
shl
arpl
fwait
push
lea
jg
jb
sbb
inc
fbstp
xor
mov
xchg
jb
ins
jno
xor
mov
in
mov
cmc
or
mov
cmp
push
push
dec
dec
mov
pop
cmp
test
push
add
bound
mov
sub
adc
fwait
or
jb
fdiv
hlt
test
in
sbb
out
sub
les
pop
rcr
mov
popa
iret
fmul
leave
ret
out
popf
inc
pusha
mov
push
pop
fistp
in
mov
fnsave
int
lea
je
push
cmp
popa
jne
push
enter
pop
pop
fisttp
cmp
jno
xchg
lea
outs
cmp
sub
int
sbb
jae
jg
out
xor
pushf
adc
dec
nop
call
aad
js
mov
adc
push
stc
and
es
fdiv
test
hlt
lock
dec
aas
inc
test
pop
in
xor
cmp
lock
jns
jbe
jle
push
in
repz
pop
movs
xchg
outs
hlt
cwde
push
jb
scas
adc
popf
jg
repz
popf
cmp
mov
xchg
pop
fadd
xchg
pop
in
(bad)
cmp
ds
(bad)
pop
fadd
mov
adc
xlat
jnp
je
push
or
sub
out
xchg
sbb
repnz
and
es
enter
call
movs
stos
scas
pop
ss
pop
icebp
and
mov
(bad)
jmp
pop
jp
fwait
or
dec
aam
inc
mov
lahf
shl
jo
(bad)
pop
mov
cmps
xor
xor
xchg
sub
mov
jl
(bad)
loop
jge
movs
ret
sub
jl
and
shr
pop
or
xor
push
in
imul
iret
aas
imul
mov
popf
stc
xchg
add
cmp
jo
sbb
fimul
cli
(bad)
shl
aas
clc
cmp
mov
adc
adc
xor
add
and
sbb
aam
mov
and
rcl
jp
(bad)
dec
mov
inc
ins
shr
rcr
mov
scas
movs
fiadd
out
rcl
shl
ds
arpl
pop
(bad)
into
inc
xlat
cmp
add
mov
mov
push
and
sahf
mov
or
je
push
dec
das
mov
jmp
retf
jl
xchg
mov
vmaxss
out
fcom
mov
gs
and
imul
ret
xor
je
or
ret
into
mov
test
push
mov
mov
pusha
mov
out
shr
lock
dec
lock
aad
mov
call
(bad)
(bad)
pop
es
jne
cmp
ss
mov
adc
je
pop
and
dec
mov
cmps
mov
xchg
cwde
mov
fdivrp
ins
pop
inc
mov
lods
ins
jle
and
test
inc
aad
std
adc
cmp
fnstcw
stos
fidiv
mov
dec
pop
jge
popa
add
aas
xor
dec
inc
xor
lea
jmp
or
data16
pop
push
push
xchg
jle
cwde
scas
lock
jnp
daa
jp
mov
xchg
js
add
shl
push
inc
dec
or
mov
add
cmp
ins
addr16
dec
xchg
fwait
scas
cwde
inc
mov
ror
ja
or
cmps
xor
inc
lds
cwde
lods
rol
dec
(bad)
push
add
adc
mov
xor
aam
lods
test
or
fcomp
ror
aad
dec
or
push
cmc
nop
iret
and
(bad)
fcmovnb
je
jae
mov
data16
movs
sbb
sub
pop
dec
jne
jmp
cmp
xchg
inc
jbe
leave
mov
xlat
pop
addr16
adc
mov
cli
aad
ret
leave
jae
inc
ret
jge
nop
pop
fwait
popf
mov
retf
out
into
fs
mov
test
(bad)
or
jp
mov
jns
(bad)
and
jg
sahf
or
adc
outs
push
xchg
rol
test
add
mov
or
xor
xor
add
push
pop
stos
lock
int3
cs
dec
fmul
xor
out
popa
jb
add
adc
xlat
out
pop
mov
shl
inc
pusha
sar
mov
movs
dec
and
(bad)
mov
leave
jbe
cmp
jae
xchg
out
mov
or
sti
test
int3
or
movs
inc
jp
add
add
mov
push
test
mov
ret
dec
xchg
mov
and
test
aas
sub
mov
data16
pop
dec
out
rol
pop
imul
js
test
(bad)
cld
lods
das
js
mov
xor
repnz
mov
mov
add
psrlw
ja
lahf
dec
adc
popa
pop
sbb
jo
jge
shl
or
xor
out
ins
sbb
(bad)
or
adc
out
add
(bad)
and
sub
adc
or
pop
retf
xor
test
retf
xchg
hlt
sti
imul
add
sbb
cmp
gs
inc
arpl
xlat
push
mov
and
push
scas
jmp
xor
pop
aaa
xchg
push
ret
ror
mov
es
jno
jno
and
inc
sbb
xor
test
mov
push
shl
imul
int
push
cmp
fldcw
popf
(bad)
imul
and
rol
(bad)
in
xchg
(bad)
adc
leave
jno
test
push
(bad)
add
pop
lds
pop
jns
in
call
and
imul
adc
in
cmp
rcr
shl
mov
xchg
call
outs
push
stos
stc
push
jmp
les
mov
loope
int3
inc
xchg
cmc
fisubr
or
jns
stc
sub
and
hlt
push
mov
cs
push
cmp
cmp
imul
sbb
das
gs
push
cwde
in
cs
(bad)
in
popf
pop
or
dec
ret
cs
sub
mov
push
xor
ins
push
aaa
sub
test
scas
and
shl
add
lahf
cli
cmps
neg
retf
cld
mov
mov
fist
js
xchg
aad
mov
repz
jge
loop
push
test
dec
adc
js
enter
lock
push
in
adc
push
mov
inc
popa
int
out
mov
sbb
out
fld
popa
sub
out
call
in
cli
jmp
pop
sar
retf
mov
test
mov
retf
inc
xor
sub
test
pop
stc
and
repnz
jns
std
es
loop
push
enter
mov
pop
out
adc
or
imul
add
dec
aad
push
cmc
pop
pop
fs
out
and
push
ins
adc
cli
out
pop
dec
xchg
push
sbb
enter
into
mov
or
mov
xor
retf
icebp
lods
inc
scas
addr16
fidivr
out
out
pop
mov
fsub
dec
sbb
push
adc
jmp
sar
popa
jl
xchg
inc
lods
push
xchg
mov
or
adc
aaa
lea
xchg
push
and
dec
cmp
pop
je
(bad)
js
add
adc
mov
mov
mov
pop
mov
sahf
dec
sbb
jp
mov
std
pushf
xchg
out
inc
ror
mov
mov
dec
adc
shl
dec
push
(bad)
xlat
outs
pop
mov
repnz
iret
xchg
movs
sbb
inc
cs
in
push
ds
pop
es
mov
dec
inc
popf
push
mov
xor
and
dec
cmp
push
pop
inc
sbb
push
sub
add
sahf
fstp
xor
inc
movs
xor
inc
aaa
out
mov
cld
icebp
pop
mov
in
aam
mov
popf
mov
(bad)
sbb
sbb
cmps
jae
fcomp
sysenter
int
or
mov
popf
dec
fiadd
adc
adc
jp
jno
jbe
stos
imul
test
ror
add
imul
fist
std
mov
test
push
mov
xchg
xchg
push
test
push
mov
test
lods
outs
or
mov
repnz
retf
inc
sbb
ds
jl
xor
jns
ins
jecxz
fs
ret
add
jae
daa
sahf
mov
loopne
push
into
add
je
xor
lds
repnz
dec
dec
les
ja
push
add
xchg
out
arpl
mov
fbstp
and
test
jbe
adc
cld
test
sar
bnd
cmps
out
sbb
and
inc
ss
test
jle
mov
adc
xor
rol
cmp
mov
adc
sub
fidivr
int
out
xchg
inc
dec
dec
fwait
adc
xor
sti
or
and
xor
daa
outs
imul
fs
les
iret
inc
cmp
lods
xchg
or
ds
sbb
shr
inc
loope
add
dec
jbe
movs
xchg
lods
iret
add
les
sub
mov
xor
pop
(bad)
mov
pop
ins
xchg
xchg
xor
nop
bound
ficomp
xor
add
jb
enter
lods
aad
inc
out
or
test
(bad)
cmp
jb
xchg
mov
or
xor
sub
push
add
sbb
gs
fs
adc
mov
in
inc
push
aam
cmp
mov
mov
je
sbb
dec
and
mov
add
mov
adc
popf
xchg
jl
fld
mov
jmp
rcr
(bad)
xchg
mov
add
or
(bad)
or
jmp
leave
push
out
lds
lea
mov
xchg
cmps
cmc
lahf
sbb
outs
retf
ret
test
test
sti
je
ret
aas
into
call
fimul
and
ret
(bad)
mov
adc
mov
xchg
jge
retf
jns
aam
sub
jne
leave
enter
cs
push
idiv
add
sub
mov
cmps
and
cmc
jo
cmps
xor
or
fisubr
cmp
clc
enter
aaa
mov
test
adc
repnz
push
push
or
mov
xchg
adc
les
clc
jb
pusha
cmps
xchg
xchg
mov
sbb
inc
rol
loop
adc
xlat
push
push
rcl
fcomi
adc
xor
pop
dec
nop
sub
sub
iret
mov
ins
inc
pop
loope
mov
cmp
inc
jae
xor
cmp
mov
out
sbb
xor
cli
jle
aam
js
push
test
bound
in
xor
(bad)
test
in
xchg
adc
sbb
aad
or
mov
push
or
or
inc
mov
xchg
and
jge
cmps
pushf
test
xor
cmp
ins
std
cld
enter
pop
or
jne
xlat
in
push
test
loope
bound
xchg
daa
out
out
mov
xchg
add
shl
enter
or
jmp
cmps
arpl
xor
icebp
data16
popa
adc
fimul
mov
mov
sbb
pop
push
xor
enter
pop
ins
xchg
test
sub
mov
dec
int
mov
hlt
mov
hlt
movs
icebp
pop
mov
pop
dec
sub
xchg
or
test
xor
and
lods
retf
sar
cmc
mov
mov
mov
xchg
xchg
mov
sub
xchg
mov
pop
out
pushf
sbb
pop
inc
pop
sbb
jle
push
out
xchg
push
ss
aam
push
out
xor
jecxz
dec
push
sbb
xor
jae
sub
test
aad
inc
stos
aas
add
ror
add
or
pop
cmp
adc
jne
popf
mov
mov
leave
adc
mov
mov
outs
cwde
dec
sbb
retf
add
sar
call
addr16
ret
add
loopne
fisub
xor
loope
xchg
xchg
ins
xor
mov
adc
mov
xor
addr16
hlt
sub
sub
mov
mov
dec
ins
aad
(bad)
pop
or
int3
retf
cs
je
js
neg
pushf
ret
test
je
loop
pop
cli
cmp
iret
adc
cmp
out
and
je
add
ficom
loopne
outs
iret
movs
pop
and
scas
fist
pop
pop
mov
jae
pop
push
leave
mov
inc
test
out
sub
or
add
xor
mov
xor
adc
xchg
adc
(bad)
imul
mov
push
imul
(bad)
pusha
cmp
add
jle
xchg
out
icebp
rol
adc
aam
pop
fisub
xchg
aam
inc
and
arpl
or
out
je
jae
xor
sub
mov
add
jl
add
push
cmp
pushf
mov
sub
and
and
sub
int
loopne
daa
lahf
aas
add
adc
sub
outs
or
ficomp
mov
and
aas
sub
dec
sbb
adc
mov
push
movs
iret
pop
mov
lods
je
pop
cld
call
cmp
pop
stos
inc
fbstp
retf
ins
mov
fld
int3
ror
hlt
ins
cmps
adc
(bad)
in
call
(bad)
movs
popa
sub
dec
mov
mov
push
adc
ss
pop
arpl
push
mov
xor
int3
mov
pop
daa
pop
cwde
call
test
jmp
mov
pop
mov
mov
cli
push
nop
mov
lods
or
xor
or
lods
xchg
add
jns
mov
outs
mov
test
or
out
cmp
jp
mov
stos
in
fwait
inc
out
stos
xchg
add
dec
add
or
mov
fnstsw
sub
clc
ror
jmp
inc
push
inc
pop
popa
xchg
in
sahf
mov
cli
pop
gs
imul
imul
lea
or
mov
dec
cmp
ss
aad
stos
inc
out
cwde
scas
mov
jae
jne
push
dec
dec
jnp
cmp
stos
lds
inc
jb
jmp
xchg
sti
rol
test
loope
dec
test
sbb
mov
or
dec
mov
push
jmp
inc
adc
imul
dec
jle
out
aaa
sub
xor
jb
test
sbb
push
ds
test
leave
(bad)
xor
data16
jmp
xchg
out
sbb
clc
mov
jl
popf
dec
inc
push
adc
loop
stos
push
lea
rcl
arpl
nop
xchg
dec
inc
and
call
or
int
outs
ret
int3
add
jl
in
popa
mov
sbb
push
and
mov
fsubr
int3
(bad)
test
push
jb
shl
add
cmps
sbb
jmp
sub
lea
mov
xchg
push
sub
sbb
mov
repz
jle
jle
mov
fbstp
iret
push
rcr
outs
out
mov
data16
clc
fistp
and
xchg
mov
pop
cmp
jl
iret
mov
sub
mov
cmp
retf
test
in
sub
xchg
in
mov
mov
adc
mov
cmps
add
hlt
std
(bad)
cmp
mov
adc
sbb
test
in
lods
pop
cwd
fxch
enter
cmp
aas
rcl
dec
sti
mov
inc
jl
sub
push
cld
les
mov
cmp
sub
in
adc
or
cwde
jg
dec
sbb
ins
mov
push
mov
daa
int
mov
cmp
test
sbb
and
pop
mov
lods
aaa
mov
fcmove
out
pop
fwait
out
or
mov
cmp
xchg
loope
outs
cwde
daa
mov
cdq
fnstenv
loopne
push
mov
shl
sub
test
mov
xor
int
adc
add
(bad)
je
push
and
fwait
xchg
cli
pop
mul
inc
pop
or
pop
sahf
add
loope
or
(bad)
xor
imul
es
fnstsw
mov
sub
(bad)
hlt
xchg
leave
loop
test
push
scas
hlt
push
and
push
push
and
dec
adc
xchg
push
push
mov
or
shl
cmp
js
loope
and
mov
dec
sbb
cdq
loop
pusha
(bad)
pop
and
retf
jp
fs
cmps
mov
xor
sbb
ins
es
mov
sbb
push
addr16
rcr
push
push
(bad)
pop
fsubr
add
push
jle
xchg
xor
jg
loope
inc
mov
mov
pop
dec
mov
movs
ret
sub
inc
sbb
loop
mov
push
xor
xlat
(bad)
jl
xchg
inc
unpcklps
outs
mov
or
int3
sub
out
call
std
in
or
jae
cmp
sub
adc
sub
sub
pop
xor
stos
enter
mov
imul
mov
das
pop
mov
lea
mov
ss
dec
jns
scas
(bad)
xchg
(bad)
ror
add
add
(bad)
stos
movs
push
imul
nop
add
cli
(bad)
stc
add
inc
sbb
mov
ja
inc
int
(bad)
mov
cmp
mov
mov
dec
mov
aas
out
sub
dec
pusha
jl
cmp
jnp
push
fcomp
int
inc
sbb
arpl
mov
jne
into
inc
jmp
test
daa
dec
(bad)
lock
iret
pop
xchg
xor
(bad)
addr16
adc
ja
cdq
sub
push
fdivp
vpmacsdql
mov
cmps
das
push
push
add
mov
or
gs
sub
scas
jmp
jmp
adc
push
or
dec
(bad)
pop
ss
ret
ficomp
push
jbe
pop
dec
and
push
popa
ror
iret
dec
aas
adc
add
pop
mov
cmp
adc
inc
cdq
jmp
inc
and
(bad)
or
das
inc
clc
inc
inc
push
loop
(bad)
int3
in
adc
fwait
pop
fdivr
add
add
xchg
pop
fdivr
ja
add
push
adc
lods
les
(bad)
push
pop
(bad)
int3
arpl
les
mov
(bad)
or
scas
cmp
mov
sub
ds
fdiv
cmc
out
push
inc
pushf
(bad)
jecxz
lds
bnd
sub
push
ins
in
sub
mov
push
stos
mov
outs
fldenv
push
xor
loope
push
cmps
mov
ret
arpl
fcmovbe
add
fisubr
xchg
(bad)
(bad)
adc
xchg
fdivr
adc
xchg
(bad)
shr
shl
cld
mov
sub
movs
lea
icebp
push
in
call
lss
or
mov
loope
mov
shl
pop
sbb
inc
add
in
lds
add
jnp
mov
lds
cmps
or
nop
mov
sar
push
les
jbe
inc
inc
jl
pop
sbb
or
dec
fwait
push
cwde
test
loope
fwait
pop
inc
mov
mov
lea
out
or
sbb
bound
scas
out
add
cmps
mov
test
mov
dec
and
push
enter
(bad)
pop
stos
fimul
xor
push
sbb
lahf
push
in
adc
inc
sub
fbld
leave
cwde
mov
cwde
cs
mov
mov
pop
push
repz
nop
inc
xchg
xor
lods
push
mov
inc
test
xor
ret
push
leave
pop
mov
ja
or
movs
retf
xchg
or
or
sub
mov
inc
icebp
inc
sub
or
cmc
lods
ret
inc
push
stc
mov
shr
shl
jg
jmp
shr
or
cmp
inc
aaa
mov
fsubr
cdq
xchg
repnz
test
(bad)
mov
and
adc
mov
das
in
inc
test
ss
push
jno
rep
xchg
pop
ss
fcmovnb
pop
retf
mov
inc
xor
fcom
xchg
push
scas
rcl
fild
add
popf
inc
repnz
out
xchg
jno
fucom
cmp
jns
xchg
cmps
sub
push
imul
dec
pop
inc
and
xchg
mov
cmp
mov
adc
inc
cs
xchg
add
addr16
xchg
iret
into
jne
movs
lahf
jecxz
sti
pushf
cmp
es
dec
xor
mov
xchg
sbb
ret
imul
xchg
cmc
iret
adc
retf
dec
xchg
or
daa
pop
idiv
mov
mov
sbb
cdq
aad
int
dec
shl
jle
jnp
js
jl
or
xor
out
sub
adc
dec
shl
test
ficom
jle
jl
push
cmp
ficomp
push
mov
stc
sbb
jecxz
imul
xlat
sbb
xor
pop
and
cmc
test
push
pcmpgtw
retf
aad
outs
sub
sti
sub
cmp
imul
fsubr
and
and
jns
dec
cmp
cmc
push
mov
and
adc
stos
mov
add
cmps
out
sbb
or
or
icebp
push
(bad)
xor
cmp
and
xchg
mov
(bad)
dec
xor
cs
call
pop
lea
sub
sbb
nop
loopne
nop
cwde
imul
fist
call
leave
jnp
mov
jb
icebp
scas
inc
add
lock
sar
ret
mov
add
stos
push
shl
lods
push
pop
into
test
fldenv
mov
inc
push
inc
dec
adc
icebp
(bad)
mov
dec
shl
shr
mov
add
xchg
cmp
inc
fistp
fadd
or
fsubr
add
stos
pop
loope
aad
sbb
cdq
pop
(bad)
xchg
jne
and
test
iret
mov
xlat
push
fwait
dec
(bad)
xchg
cmc
add
pop
push
push
inc
pop
jbe
xchg
repz
or
movs
jecxz
sub
dec
stc
hlt
jae
retf
out
push
push
es
test
scas
push
push
adc
in
or
pop
jg
ret
push
xor
dec
lock
add
adc
jne
gs
xor
mov
das
arpl
sar
fs
push
aaa
shl
cmp
and
jp
mov
sub
push
pop
or
popa
je
add
sbb
hlt
rcl
stos
mov
mov
dec
jne
(bad)
into
out
adc
mov
mov
jmp
adc
jle
mov
cmps
push
sub
and
lds
adc
sahf
ins
imul
push
clc
imul
or
push
(bad)
jbe
and
cmp
add
loope
jp
mov
push
stc
dec
je
mov
dec
push
sbb
xchg
jne
jg
add
xchg
push
adc
adc
ror
mov
cwde
sbb
inc
nop
fwait
rol
xchg
movs
mov
repz
dec
dec
test
adc
aaa
jo
iret
adc
pop
and
push
or
xor
mov
jb
pop
cmp
mov
xchg
mov
or
sub
xor
jb
pop
pop
mov
popa
inc
lods
cmp
and
xchg
int
fidiv
jmp
push
loope
xor
cmp
cdq
ins
(bad)
scas
dec
push
and
rol
add
cmp
jmp
dec
cmp
sbb
pop
adc
ja
sub
jle
outs
inc
and
mov
cmp
adc
enter
addr16
iret
aam
push
fisttp
xor
xchg
and
adc
and
mov
pop
ret
dec
(bad)
or
cmp
test
mov
out
xor
rol
mov
rcl
sub
add
clc
mov
pop
cld
jnp
xor
repnz
push
and
sub
aam
fisttp
(bad)
(bad)
in
jo
out
pop
rcr
test
stc
xchg
cmp
pop
pusha
jnp
bound
sti
mov
ins
aad
out
pop
sti
je
mov
xlat
cmp
jmp
push
neg
sbb
push
(bad)
daa
dec
xor
nop
popa
retf
repz
rcr
adc
test
and
cmc
std
push
fneni(8087
movs
movs
test
xchg
bound
jne
lahf
and
out
shl
add
mov
sub
mov
in
push
mov
pop
fidiv
add
int3
ss
xchg
pop
ss
repz
icebp
xor
push
or
jae
jmp
cmps
inc
and
test
out
mov
lock
xchg
lock
mov
dec
cmps
cmp
sub
js
bound
fnstcw
outs
pop
mov
add
ds
fisub
jl
sbb
pop
xor
(bad)
cmp
stos
cmp
pushf
pop
in
psubsb
xchg
pop
mov
mov
loop
jno
push
rcr
cmps
iret
sbb
bound
push
push
pop
inc
addr16
ja
and
adc
add
xchg
es
ins
xchg
or
push
loope
fist
ins
fadd
in
in
lods
jg
adc
jge
(bad)
icebp
xchg
ja
mov
ins
pop
ret
mov
push
ja
imul
push
loope
dec
ja
sbb
xchg
je
retf
hlt
add
popa
call
cmp
add
rol
fstp
sub
cmps
out
stos
mov
hlt
int3
fidiv
push
loop
jno
jmp
sbb
xchg
push
push
push
mov
sub
jmp
jne
add
cld
xchg
adc
int3
inc
nop
mov
repz
mov
cmps
xor
or
ds
arpl
and
pop
ins
push
jecxz
loope
xchg
rol
call
popa
not
sbb
clc
jne
mov
dec
adc
mov
cmp
js
retf
out
int
inc
cmp
mov
sub
jae
ror
retf
pop
out
in
test
into
or
cmps
nop
ins
inc
outs
fwait
shr
cmp
cmp
pop
push
jne
ja
in
xchg
adc
push
xchg
adc
and
call
sti
mov
jg
lahf
stos
cmp
dec
sti
sahf
(bad)
cmps
and
adc
inc
into
add
mov
js
test
inc
inc
test
(bad)
inc
sub
std
aam
jmp
fcmovb
pop
test
fstp
or
sub
test
cmp
repnz
jle
in
fucomip
adc
test
inc
dec
mov
pop
mov
mov
lds
cmp
dec
mov
push
out
in
(bad)
and
pop
push
jae
sub
and
adc
adc
in
fstp
mov
pop
add
fs
push
retf
add
push
rcr
aam
nop
pop
or
lock
and
or
mov
push
or
add
leave
xor
or
cmps
mov
sub
pop
movs
or
shl
mov
aaa
jmp
jne
xchg
bnd
aad
sti
or
cmc
retf
push
sahf
dec
sbb
inc
mov
test
into
icebp
sub
mov
sbb
add
or
call
mov
scas
xchg
retf
fdiv
int
add
xor
add
or
shl
xor
(bad)
push
push
iret
aaa
inc
mov
imul
cmp
jle
cmp
sub
mov
pop
call
aad
pop
aam
arpl
cwde
ins
xlat
repnz
inc
arpl
sub
xchg
or
call
sub
in
popa
call
(bad)
adc
bound
imul
pop
pop
sub
or
std
and
popa
or
gs
imul
ss
xchg
add
fimul
lds
xchg
sub
cld
test
fstp
fdivr
cmp
fisubr
pop
imul
push
(bad)
mov
(bad)
loopne
jecxz
dec
mov
mov
xchg
jge
jg
mov
repnz
movlps
movs
mov
or
xchg
ins
arpl
mov
hlt
inc
xchg
jno
sbb
add
pop
jecxz
dec
sti
and
mov
and
jbe
pop
pop
mov
sbb
int
loope
cmp
lds
fld
and
neg
sbb
lahf
fdiv
mov
mov
dec
sbb
pop
and
xor
cmp
mov
test
lea
and
xor
pop
add
je
push
mov
push
into
cwde
stos
test
mov
retf
pop
or
lea
loop
mov
(bad)
dec
push
mov
mov
pop
dec
cld
rol
jge
enter
xor
push
jl
push
jl
and
sbb
int
nop
ret
xchg
mov
(bad)
xchg
pop
jle
push
xor
outs
aad
sub
(bad)
pop
cmp
sub
pop
pop
jle
jp
cmp
lods
inc
push
in
loopne
mov
pop
out
jo
retf
xor
sbb
std
pop
addr16
icebp
nop
or
jb
mov
setg
in
dec
add
ret
rcl
or
jecxz
jb
sbb
jp
lds
mov
pop
in
loopne
scas
sbb
fcmovbe
clc
sbb
mov
adc
cmps
mov
mov
retf
push
and
sub
imul
push
adc
aas
push
and
data16
pop
je
or
das
push
push
fdiv
jle
scas
outs
shl
pop
call
dec
dec
mov
xor
push
mov
or
ror
into
pop
or
inc
push
fs
xchg
xchg
test
daa
fbld
rcr
aad
mov
stos
out
sbb
pop
scas
jg
add
test
jbe
cmp
hlt
int
not
cmps
push
test
xchg
repz
outs
sbb
cwde
in
dec
push
xchg
scas
fidiv
dec
xor
out
movs
jg
mov
and
jg
mov
mov
movs
mov
and
leave
daa
aaa
add
cmp
dec
xor
mov
xchg
add
adc
jne
pop
dec
add
add
and
push
(bad)
sbb
cdq
push
and
mov
repz
xor
or
sub
pop
mov
pop
(bad)
pop
push
test
mov
dec
and
daa
rol
cmps
and
mov
sub
push
retf
retf
xor
ds
ficomp
mov
int
xchg
sbb
stc
and
out
jae
sub
inc
jne
sbb
or
repnz
xor
mov
(bad)
pop
dec
out
inc
popa
xchg
jp
pop
push
push
nop
repnz
addr16
xchg
aaa
sar
in
(bad)
inc
mov
pop
sub
pop
mov
ins
call
ds
and
popf
cwde
xor
mov
sbb
(bad)
xchg
das
xor
pop
push
xor
adc
sbb
jle
mov
or
test
sbb
fs
loop
mov
gs
xchg
out
fild
push
inc
inc
xchg
dec
pop
jae
repnz
mov
sbb
aam
arpl
pop
xchg
ds
pop
jmp
mov
pop
push
push
cmps
ss
or
pop
push
in
nop
(bad)
shl
lahf
dec
push
push
mov
ret
xor
cmp
mov
mov
ins
and
test
std
xchg
mov
push
jbe
fimul
sbb
pusha
addr16
dec
cmps
mov
(bad)
push
ret
in
push
and
inc
pushf
(bad)
cmp
ficomp
mov
sbb
mov
pop
xor
sbb
pop
data16
adc
lods
ret
sub
icebp
data16
aad
jle
adc
lds
cwde
xor
jg
xlat
xor
pop
mov
mov
xchg
jne
jg
popf
mov
fild
mov
adc
jle
leave
inc
jge
pop
(bad)
scas
out
inc
or
pop
xchg
adc
fwait
or
inc
and
and
scas
xor
stc
repz
jl
es
xor
pop
addr16
push
mov
inc
ins
cs
out
fisttp
and
pop
enter
clc
call
ins
pop
and
dec
push
inc
call
movs
aas
(bad)
popa
mov
xor
lahf
and
bound
lods
pop
retf
pop
fs
in
add
pop
xor
adc
hlt
or
dec
adc
bound
cmps
in
inc
xchg
xor
jle
mov
mov
ror
pop
sub
adc
xor
icebp
pushf
loopne
ficom
dec
adc
pop
dec
fsubr
and
add
jnp
out
jp
push
bound
adc
dec
movs
adc
dec
fldcw
jge
leave
popa
(bad)
ss
and
dec
cmp
(bad)
mov
sub
sbb
shl
xchg
sbb
xor
mov
mov
repnz
hlt
inc
cmp
mov
out
icebp
iret
cli
in
sub
cli
or
(bad)
mov
ds
inc
outs
inc
xchg
vmread
cmp
push
cmp
test
std
(bad)
in
fdiv
mov
sbb
add
in
and
stos
jno
mov
std
es
sbb
mov
scas
xor
adc
aaa
xchg
push
cld
mov
sub
xor
mov
scas
and
jns
add
iret
push
push
dec
aas
retf
mov
fsubr
imul
fsub
popf
push
aad
xchg
js
icebp
addr16
xor
dec
retf
mov
xor
jge
adc
pusha
ret
dec
xor
in
or
push
popa
or
ja
jbe
aaa
bound
bound
js
sar
loopne
call
mov
and
ds
sub
xchg
push
xchg
adc
cmc
xor
jmp
mov
jno
add
cmp
pushf
jae
add
out
xor
cdq
in
(bad)
add
xchg
pushf
jle
out
push
or
imul
ret
movs
loope
lds
inc
addr16
dec
push
jnp
xor
sbb
stos
js
add
out
mov
dec
arpl
adc
or
cmp
inc
push
mov
and
ss
cmp
in
aaa
ret
mov
ret
jl
call
test
pop
mov
mov
in
(bad)
mov
mov
fbstp
and
jbe
inc
pop
cmp
movs
(bad)
scas
mov
ret
fild
xlat
sbb
scas
fidivr
addr16
daa
dec
and
cld
fucomp
stc
pop
(bad)
dec
test
enter
inc
jnp
add
stc
lea
mov
bound
mov
cwde
pusha
(bad)
mov
ins
popa
out
mov
dec
inc
inc
push
sbb
push
pop
in
xchg
rcr
stc
into
pushf
nop
add
rcl
xchg
inc
adc
sbb
jl
xor
shl
into
jg
jnp
sbb
add
inc
inc
jmp
inc
push
lea
mov
in
fdiv
test
test
fdivr
mov
imul
jl
inc
pop
scas
lock
sbb
bound
shl
push
cmp
cmps
xor
div
dec
lahf
mov
(bad)
(bad)
in
cmp
sbb
jae
mov
adc
cmp
jbe
ja
xor
movs
sub
dec
fcom
lea
cmc
xor
jmp
push
sbb
retf
sbb
mov
xlat
icebp
fild
daa
(bad)
jns
jae
xor
dec
fisub
jmp
pushf
call
out
stos
test
scas
fmul
jo
mov
add
(bad)
jae
fidivr
cli
out
(bad)
js
cdq
out
inc
mov
enter
cmp
js
push
lods
imul
and
mov
jae
popf
in
sbb
or
std
xchg
ins
and
out
and
mov
(bad)
pop
dec
pushf
jmp
mov
leave
mov
jp
mov
pusha
or
pop
mov
sub
or
push
push
and
inc
lea
xchg
xchg
adc
fisttp
or
lods
retf
adc
sub
addr16
pop
xchg
mov
mov
aad
dec
imul
lock
dec
dec
inc
sub
fist
aam
leave
mov
into
fst
xchg
fcmovnbe
mov
mov
jmp
or
push
push
and
and
iret
repnz
daa
dec
xchg
dec
inc
lds
fisttp
(bad)
cmps
sbb
mov
lods
dec
xor
lock
les
pusha
or
xor
xor
out
dec
call
mov
jp
ficomp
test
fsubr
push
xor
call
jl
inc
or
xchg
xor
lahf
retf
stc
mov
cmp
push
aas
sub
inc
out
mov
adc
push
stos
inc
sub
pushf
les
push
inc
es
je
or
cmps
mov
in
inc
in
ins
and
cwde
add
ins
jno
shl
lock
out
pop
xchg
and
jae
mov
jb
add
cdq
cld
sub
fimul
sbb
and
iret
in
xor
dec
cmp
mov
and
xchg
(bad)
mov
mov
push
into
push
cs
cmc
movs
in
bound
scas
rcr
mov
fdiv
in
or
or
loopne
lock
mov
aam
mov
jo
inc
dec
mov
gs
mov
aaa
test
js
push
dec
add
psrlq
call
out
push
push
cmp
xchg
sbb
fimul
stc
iret
xchg
dec
inc
pusha
gs
cmp
repz
fisub
aas
pop
push
dec
cld
in
out
wbinvd
dec
loope
mov
sub
pop
cmp
retf
mov
iret
in
sub
jo
mov
push
retf
jmp
mov
jae
ins
inc
add
cmp
lds
jmp
es
mov
das
cwde
daa
(bad)
psubusw
ja
aaa
or
and
push
push
(bad)
clc
mov
xlat
jmp
fdivrp
addr16
sbb
xchg
pop
ret
xchg
iret
inc
mov
dec
xchg
mov
fcomp
adc
(bad)
data16
pop
inc
lods
jl
inc
jns
stos
imul
fisubr
clc
mov
in
lods
(bad)
cli
mov
mov
leave
adc
pusha
mul
int3
loope
sub
aam
mov
jno
xor
sahf
fadd
aam
fadd
nop
xor
ret
mov
call
or
inc
xchg
dec
dec
dec
iret
in
xor
scas
lods
pop
jecxz
and
and
add
xor
imul
inc
mov
test
inc
xchg
jecxz
cmp
(bad)
repnz
mov
jmp
mov
popa
push
mov
sbb
das
inc
jbe
aaa
mov
das
adc
push
xor
cmp
stos
cmp
(bad)
pop
fstp
mov
dec
sti
and
mov
movs
inc
sub
imul
data16
(bad)
mov
xchg
mov
call
fwait
ror
push
(bad)
ret
xor
repnz
and
jae
(bad)
mov
retf
(bad)
jge
pop
lods
test
add
mov
mov
je
jmp
jmp
xor
xor
cwde
outs
mov
daa
adc
pop
and
nop
shl
dec
lahf
sbb
jno
outs
inc
fucomip
jo
xor
sbb
mov
push
int3
and
iret
jp
inc
repnz
(bad)
inc
adc
out
ja
pop
mov
cdq
mov
or
mov
jbe
addr16
fsubr
mov
sub
jb
xlat
inc
xor
movs
push
sub
mov
ret
mov
(bad)
out
add
aas
addr16
push
push
enter
lahf
push
jno
movs
iret
rcl
or
pop
sbb
into
cmc
add
inc
push
xor
pop
retf
add
sub
cmps
shr
(bad)
mov
push
ret
pop
call
test
xor
mov
mov
jno
(bad)
cld
adc
pop
outs
mov
mov
pop
jne
ja
add
shl
mov
mov
(bad)
es
int3
sbb
push
icebp
stc
sbb
jno
fidivr
loope
jl
aam
neg
sahf
fucomip
or
and
out
(bad)
imul
xchg
scas
xchg
push
pop
imul
or
cld
gs
cmc
mov
lods
cld
jecxz
in
adc
inc
xor
dec
in
xor
mov
adc
lea
fs
into
lods
dec
imul
pop
or
call
out
add
push
mov
mov
mov
mov
ss
dec
cmps
cmps
sbb
(bad)
test
enter
mov
sbb
icebp
je
fucomi
es
adc
ss
xor
fimul
mov
mov
or
inc
ror
imul
mov
js
adc
sar
pop
rcr
cli
int
cmp
call
jle
push
arpl
pop
dec
cdq
movs
aas
cmp
add
call
(bad)
mov
or
xchg
je
stc
fadd
cmp
and
or
aas
popa
push
push
pop
arpl
mov
mov
mov
inc
int3
dec
jbe
mov
out
mov
sub
les
in
popa
cmp
icebp
call
mov
sub
adc
inc
ins
or
push
dec
(bad)
add
iret
sbb
in
push
xchg
imul
and
mov
jbe
cwde
gs
aam
lds
adc
hlt
sub
lock
(bad)
mov
in
gs
dec
or
mov
and
cmc
cmc
add
(bad)
imul
dec
jl
xor
jle
cmps
sbb
dec
and
lea
pop
cs
fist
outs
stc
retfw
pushf
jmp
mov
fs
sub
jle
jnp
cmp
fucomp
inc
mov
scas
ins
out
push
cmp
or
and
mov
rcr
mov
xchg
xchg
mov
pop
push
mov
push
fist
mov
hlt
adc
aam
sbb
fist
xor
sub
or
ja
cli
clc
and
retf
jmp
push
lods
leave
xchg
or
inc
(bad)
loop
call
sar
mov
retf
jbe
dec
pop
shl
mov
add
cmp
jp
sti
xchg
push
push
xor
xchg
cs
(bad)
mov
ins
mov
sti
fstp
jmp
sbb
xchg
out
pop
sub
ja
lds
push
repz
mov
shl
mov
adc
(bad)
scas
adc
test
push
mov
push
mov
add
or
xchg
jp
data16
aad
std
xchg
jne
(bad)
hlt
das
xor
(bad)
sbb
inc
push
xchg
sub
xchg
sbb
inc
sbb
loope
bndldx
pop
cmps
jle
cmp
aaa
adc
sub
bound
sub
cmp
cli
or
mov
test
xor
jb
les
push
mov
push
fsub
gs
cs
inc
mov
xchg
retf
cdq
cdq
test
leave
int3
pusha
push
or
sub
dec
cmp
dec
sub
aad
stos
std
pop
sbb
movs
icebp
lea
jl
jecxz
dec
mov
(bad)
adc
ror
mov
mov
test
pop
inc
adc
push
or
cs
mov
into
or
sar
push
xor
(bad)
dec
call
sbb
fmul
pop
(bad)
lahf
stos
shl
scas
retf
fwait
push
mov
pop
dec
add
mov
iret
sub
add
sbb
out
mov
int3
les
push
stos
ss
test
aas
jle
aad
and
jle
leave
aas
sub
jp
scas
mov
fcmovu
sub
jns
les
movs
sbb
out
aad
cmp
push
ds
test
sub
lock
jbe
sahf
arpl
adc
or
pop
into
xlat
jmp
xchg
xor
cmp
and
sahf
inc
loopne
mov
push
jmp
bound
jecxz
loopne
daa
jb
cdq
add
pop
sbb
shl
xchg
xchg
in
les
pop
sbb
add
ror
ja
shr
mov
sub
mov
push
daa
xlat
mov
dec
sbb
jl
cmp
pushf
cmp
inc
add
mov
push
(bad)
xchg
pop
and
es
clc
xor
int
pop
xchg
xchg
pop
pop
sub
push
fwait
or
xchg
mov
xor
(bad)
cwde
push
je
cld
pushf
lock
jmp
bound
sub
rol
inc
mov
sub
sub
cmp
dec
out
lea
jns
jno
test
pushf
fistp
add
xor
adc
mov
mov
test
dec
into
dec
xor
daa
into
daa
lock
jg
hlt
xchg
push
stos
adc
pop
(bad)
jno
inc
xchg
js
xchg
imul
scas
movs
cmps
cli
inc
lods
mov
cmps
fmul
xchg
int3
adc
push
dec
cmp
rcl
(bad)
add
hlt
scas
shl
ficom
jecxz
jmp
es
dec
imul
jo
push
nop
repnz
inc
or
retf
cmps
jae
sbb
fwait
les
jnp
(bad)
mov
iret
pop
sbb
push
les
sti
jge
inc
jno
or
mov
out
lods
adc
pop
icebp
or
fcom
lods
out
aas
inc
sbb
ss
fist
dec
es
jae
std
cmps
repz
xchg
inc
xlat
and
popf
dec
out
int
sti
jnp
sahf
pop
imul
sub
mov
sbb
sbb
into
add
xor
packssdw
add
mov
mov
jns
outs
pop
stos
ja
mov
shr
and
aad
idiv
dec
or
pop
mov
xchg
ins
fwait
js
add
jmp
retf
xor
jns
(bad)
sahf
loop
mov
pop
cmp
mov
test
dec
xor
inc
sti
in
mov
and
cwde
or
fbld
pushf
pop
add
mov
push
adc
add
lods
movs
retf
lds
popa
cmp
and
mov
loopne
jp
dec
mov
and
icebp
dec
je
movs
add
inc
lock
(bad)
loop
(bad)
retf
add
mov
pop
dec
mov
out
xor
ror
push
pop
fsqrt
jge
icebp
dec
add
imul
push
dec
mov
dec
dec
call
cmp
sub
mov
mov
imul
mov
stc
xor
jb
xchg
scas
rcl
mov
outs
pusha
mov
mov
jmp
sbb
mov
fdiv
or
retf
std
xchg
outs
adc
mov
pop
pop
sub
sub
add
dec
loope
lea
jnp
xor
ins
ins
cmp
out
push
sbb
std
jno
dec
pop
cwde
xor
je
or
mov
addr16
add
cmp
and
(bad)
rcl
cwde
pop
add
repnz
mov
fisubr
dec
cdq
test
jno
jecxz
scas
jo
inc
jg
ja
mov
es
sbb
loope
dec
cwde
sahf
mov
and
jo
jno
push
push
cmps
jle
jmp
pop
aaa
adc
xor
inc
fsubr
xchg
in
shl
cli
xor
in
into
push
jmp
xlat
shl
fimul
mov
mov
cmps
dec
jp
adc
xchg
sub
or
movs
adc
gs
mov
and
mov
jmp
sub
retf
add
cwde
push
push
cwde
mov
fmul
outs
mov
mov
inc
dec
jae
cmp
mov
sbb
fcmovbe
out
stos
push
fimul
adc
imul
std
xor
jmp
ret
xchg
cmp
push
inc
aaa
or
(bad)
mov
jp
add
mov
xor
popa
movs
int
fidiv
loopne
adc
cmps
cmps
sbb
add
addr16
or
inc
xchg
(bad)
and
dec
push
push
jle
and
inc
cwde
pop
jecxz
push
dec
xor
sbb
ins
xchg
pop
cmp
adc
out
stos
stos
aam
adc
aam
xor
cmps
mov
fadd
test
in
pop
ret
loope
sti
fs
(bad)
fist
scas
fld
ins
sub
(bad)
sti
aaa
jbe
inc
test
jb
popa
in
imul
and
push
sbb
mov
into
lahf
in
pushf
fbstp
dec
or
in
in
push
mov
test
pop
(bad)
jnp
mov
neg
jle
inc
out
xor
lahf
mov
(bad)
(bad)
jno
and
inc
(bad)
sub
aas
gs
popf
jle
cdq
in
retf
dec
xchg
and
jecxz
jnp
outs
xchg
jae
lods
pop
mov
xor
(bad)
push
pop
lds
sub
mov
xchg
xchg
nop
and
scas
jge
test
jp
and
mov
pop
xor
shl
idiv
pop
cmp
repnz
push
cmp
sbb
jg
cmp
sbb
inc
pop
cmc
je
push
jmp
mov
(bad)
push
mov
sahf
and
cmc
les
loopne
jns
cli
push
cmc
(bad)
inc
fimul
adc
lea
mov
jecxz
jo
sub
dec
retf
sub
loope
in
mov
jns
sub
push
aad
ins
mov
mov
and
mov
popa
ja
jb
jae
nop
arpl
sub
push
or
dec
and
and
inc
cmps
add
push
cmp
scas
pop
cmp
and
jno
es
push
fst
cmp
popa
mov
call
fdiv
out
inc
lock
gs
ins
add
jge
and
and
push
xchg
out
ficomp
cmp
inc
scas
push
pop
pusha
int3
pop
or
mov
xchg
popf
les
xchg
adc
pop
call
add
jge
push
fsub
mov
pop
jl
push
dec
retf
mov
ror
sbb
dec
push
aad
push
(bad)
cmp
push
xchg
ret
retf
retf
xor
mov
add
fiadd
jmp
cmp
rcl
mov
data16
loop
ins
ja
out
cli
repz
jnp
dec
push
sar
mov
xor
xchg
sbb
dec
out
push
mov
push
dec
nop
nop
popa
cli
dec
fs
sub
sbb
cmps
xchg
dec
xchg
int3
mov
push
inc
fs
sub
loopne
mov
or
int3
loopne
xchg
ds
aas
aad
neg
sub
les
jp
and
sbb
mov
icebp
inc
imul
in
mov
dec
jb
sbb
jo
test
push
pop
mov
add
push
hlt
cmp
xor
cwde
inc
loope
aam
dec
dec
jmp
xchg
pop
push
and
pop
pop
aad
cmp
lds
(bad)
mov
(bad)
ja
push
mov
cmps
cmps
daa
mov
lods
xchg
jecxz
jle
dec
in
jp
mov
dec
and
and
mov
into
shl
(bad)
lods
add
inc
add
cmps
pop
hlt
pop
dec
fist
push
iret
pop
pop
mov
cdq
inc
add
pop
jecxz
jge
repz
(bad)
stos
dec
fs
jl
and
inc
mov
std
fs
fwait
adc
sbb
ret
call
in
mov
mov
cmps
mov
pusha
(bad)
add
leave
inc
inc
push
nop
mov
mov
retf
mov
leave
clc
xchg
out
add
test
jge
mov
cli
add
mov
mov
(bad)
in
mov
addr16
mov
bound
outs
inc
mov
iret
inc
sar
push
lock
call
jne
add
addr16
loop
popa
sbb
push
xor
gs
or
mov
sbb
push
aaa
(bad)
lds
test
enter
add
add
jns
loope
gs
pop
je
or
ds
repnz
sysexit
adc
stc
movs
push
sbb
xlat
and
xchg
out
and
and
and
mov
cmp
mov
loop
(bad)
in
sahf
inc
mov
cmps
push
mov
pop
inc
test
jno
xchg
(bad)
call
in
(bad)
imul
mov
sub
push
rcl
shl
jmp
lahf
jg
movs
repnz
(bad)
(bad)
and
out
add
xchg
je
outs
push
ins
mov
adc
iret
sahf
aas
aad
xor
nop
mov
repz
iret
sub
xchg
ins
cmps
fbld
or
mov
bound
add
xchg
lea
adc
fwait
fs
rcr
dec
lods
pop
add
xchg
fstp
pop
mov
dec
jno
sbb
repnz
adc
jns
fistp
rol
popf
mov
test
xchg
xchg
repnz
and
add
cwde
pushf
add
test
pop
xchg
and
or
pop
mov
test
mov
lods
inc
adc
xor
jmp
(bad)
push
cld
push
addr16
pushf
cwde
into
ins
inc
pop
out
mov
push
jnp
cmp
into
call
pop
pushf
adc
packuswb
rcl
es
or
adc
cmp
shr
jmp
fld
movs
repz
sahf
neg
pop
pushf
adc
lods
xor
idiv
jbe
pop
lods
aam
aam
cli
cmp
jns
sub
fcom
mov
movs
and
fwait
xor
or
sbb
inc
pop
xor
xchg
js
hlt
mov
imul
sub
cmps
sbb
retf
adc
gs
jae
xor
xlat
cmps
push
inc
stos
push
or
retf
mov
xchg
lds
cmc
xor
ins
mov
loope
cdq
xor
(bad)
or
add
mov
pop
rcr
dec
nop
push
btc
adc
or
cmc
jmp
mov
lahf
sbb
dec
iret
ins
sar
and
dec
cmp
arpl
ds
cs
js
pop
stos
push
sub
dec
ins
pop
mov
lahf
stc
xchg
sbb
cmps
push
shl
adc
cdq
sub
xchg
cmp
popf
inc
mov
and
(bad)
scas
not
mov
push
in
xchg
out
mov
inc
test
lea
gs
(bad)
pop
dec
sahf
in
rcl
retf
(bad)
pop
lahf
sbb
and
inc
aaa
xchg
and
lock
sbb
cmps
iret
bound
stc
sub
jmp
leave
lods
stc
sub
addr16
pop
push
inc
fld
pop
stos
pusha
push
dec
cmp
aad
dec
jmp
loope
stos
movs
jns
sbb
push
inc
xchg
sub
lahf
inc
jp
push
or
or
int
xor
fisub
imul
and
ret
(bad)
iret
inc
push
mov
repnz
adc
jmp
loopne
jnp
mov
add
imul
adc
sbb
or
fld
xchg
in
loop
cmp
sti
stos
rol
mov
(bad)
sti
fsubr
jbe
jecxz
mov
popa
dec
push
gs
ja
xor
adc
mov
cmp
inc
fld
or
mov
pushf
loopne
bound
mov
inc
outs
cdq
and
dec
int
stos
fwait
pop
xchg
aad
sub
adc
xchg
fadd
aas
daa
mov
mov
push
xchg
push
outs
jecxz
jecxz
bound
fwait
std
mov
cli
sbb
test
lods
jb
je
push
out
xchg
sub
jg
gs
or
sbb
push
std
push
pusha
cld
jb
stos
data16
in
mov
mov
inc
jp
shl
push
(bad)
stos
fs
mov
xor
xchg
sbb
inc
icebp
mov
push
xor
jecxz
push
fnstenv
cli
mov
sbb
ss
or
psubsw
xchg
cmp
stos
int
mov
into
jno
lods
loop
test
add
rcl
pop
into
dec
movs
pop
or
mov
cwde
sbb
jo
sbb
ud1
mov
xchg
xchg
cmps
outs
push
inc
dec
iret
(bad)
jl
jb
out
mov
aad
ror
push
mov
fidiv
or
repz
xchg
jl
arpl
leave
mov
jnp
pop
scas
pop
sub
lea
push
pop
cld
mov
mov
cwde
xchg
push
push
test
inc
sbb
pushf
ins
lods
daa
(bad)
addr16
xor
mov
data16
rcl
fcomip
sub
push
jne
xor
mov
shl
inc
(bad)
push
adc
clc
jns
daa
xor
add
outs
cmps
mov
shl
mov
xchg
mov
adc
and
sti
or
dec
call
xchg
xor
pop
xchg
rcr
pop
dec
(bad)
or
mov
cmp
add
or
adc
or
jmp
pop
xlat
stos
cld
pop
or
adc
out
sti
scas
scas
push
push
imul
sti
xchg
jle
ja
jne
out
dec
mov
mov
pop
cmc
ret
aaa
cmp
jmp
in
sbb
dec
pop
dec
div
mov
mov
push
jecxz
hlt
out
ins
cmp
mov
fcmovnu
fldcw
sbb
sar
test
sbb
pop
rol
xchg
int3
mov
aaa
dec
cmp
cli
imul
gs
add
cli
push
sbb
ret
icebp
add
mov
loop
adc
(bad)
popf
aaa
arpl
xchg
mov
arpl
xchg
sub
cmp
add
xor
mov
or
dec
pop
xchg
push
add
push
jae
add
push
cwde
and
fisub
xchg
mov
pushf
xor
fwait
dec
(bad)
stc
cmp
mov
push
scas
adc
jmp
repnz
(bad)
out
fldln2
cmc
jb
or
out
mov
push
mov
mov
add
inc
leave
xor
xchg
ja
xchg
jmp
push
add
fst
xor
mov
scas
cmp
xchg
jecxz
movs
push
cmp
jl
inc
mov
imul
mov
enter
mov
add
int
lea
pop
sub
push
mov
pop
pusha
adc
mov
rcl
pcmpeqb
aaa
adc
(bad)
lea
fdivr
je
iret
dec
je
or
je
dec
mov
leave
adc
mov
jge
xor
icebp
xchg
push
out
or
push
or
test
pop
pop
sahf
(bad)
out
jmp
(bad)
(bad)
cmps
fwait
sahf
jns
ficom
pop
sub
cmp
(bad)
push
cs
xor
in
xor
imul
div
test
(bad)
mov
ret
pop
loope
dec
out
pop
pop
mov
rcr
mov
shl
jae
mov
and
xchg
or
xchg
test
sahf
mov
mov
(bad)
rcpps
(bad)
ins
popa
pop
or
or
add
mov
jle
movs
ret
imul
ins
mov
leave
(bad)
je
mov
retf
out
and
out
and
retf
lds
pop
dec
sub
pop
push
mov
sub
mov
popf
mov
xchg
inc
into
jmp
pop
or
mov
xor
fistp
pushf
or
xchg
sub
jmp
sahf
pop
(bad)
mov
(bad)
enter
xchg
mov
jl
lea
iret
inc
xchg
cmp
sahf
rol
nop
hlt
movs
xor
lods
jae
mov
dec
shl
in
inc
mov
addr16
sub
add
cmp
adc
and
enter
mov
cmp
fadd
mov
sbb
in
pop
or
popf
clc
and
and
in
pop
mov
or
dec
adc
xchg
int
nop
dec
jmp
lahf
inc
neg
adc
sar
fistp
sbb
or
push
(bad)
out
test
arpl
xor
sub
mov
test
pop
pop
xchg
mov
and
mov
cmp
fdivr
push
inc
xchg
add
jnp
in
jno
cmps
adc
or
pop
shl
and
or
dec
es
fdiv
sahf
jae
lock
dec
js
fisttp
adc
scas
mov
fstp
hlt
and
adc
in
(bad)
xchg
mov
mov
loop
sub
(bad)
push
enter
push
cmp
out
icebp
mov
sub
fdiv
jnp
mov
sbb
ret
mov
add
cmc
test
cs
dec
call
jo
mov
in
add
jbe
xchg
lea
cmps
mov
test
or
push
aas
fldenv
mov
xor
xchg
dec
nop
mov
xchg
int
sar
in
arpl
xchg
mov
in
outs
int3
xor
jns
cmps
icebp
push
sahf
cs
pushf
out
aas
pop
popa
out
or
popf
jno
(bad)
and
xchg
or
sbb
push
fcomp
inc
retf
aaa
mov
inc
mov
mov
mov
mov
push
pop
ret
adc
mov
add
gs
aad
cdq
call
xchg
pop
rcl
in
pop
lock
mov
mov
xchg
ja
cmc
rcr
les
stos
dec
les
xchg
dec
add
pusha
(bad)
xchg
nop
sub
mov
fnsave
shl
(bad)
call
add
outs
pop
and
dec
addr16
mov
out
lock
xor
sub
sbb
ins
adc
mov
loope
mov
sbb
adc
sbb
cld
call
sub
call
imul
adc
rcl
ret
adc
xor
(bad)
xchg
cdq
mov
aam
xor
pop
mov
js
sbb
mov
adc
ins
mov
push
xchg
std
out
scas
jp
lahf
xchg
inc
pop
and
hlt
add
ficom
mov
xchg
cld
paddusb
loope
outs
sub
(bad)
in
pop
retf
movs
bound
jg
mov
js
aas
out
movs
mov
stos
pop
pop
mov
hlt
mov
add
dec
(bad)
xor
aas
lock
lea
xchg
cmp
or
out
in
sub
jp
dec
jb
ins
sbb
pop
dec
aaa
mov
dec
pusha
retf
je
scas
adc
mov
push
aam
dec
sub
dec
out
in
(bad)
mov
imul
and
cmp
test
or
mov
pop
das
aam
inc
sahf
jmp
add
push
enter
std
fstp
loopne
mov
add
daa
cmp
ss
arpl
lahf
xchg
sbb
stc
add
(bad)
loopne
dec
in
pop
aaa
pop
cmp
test
and
jp
push
movs
mov
sub
lods
mov
mov
pop
cwde
sub
add
rcl
adc
add
dec
imul
push
mov
fld
add
int3
xchg
and
xor
sub
test
mov
sbb
call
jecxz
dec
sbb
in
adc
dec
cmp
lock
ins
adc
lea
mov
shr
cmp
and
(bad)
sbb
inc
cmp
imul
xor
or
in
ret
cmc
mov
adc
data16
stos
cmp
add
out
dec
in
ja
outs
test
xor
mov
mov
jns
push
push
or
or
mov
daa
push
jo
call
mov
jns
cmp
dec
sbb
inc
jae
cmp
pop
mov
sbb
imul
xor
mov
or
test
mov
mov
mov
ins
repnz
mov
hlt
mov
inc
dec
js
mov
movs
push
jmp
mov
or
outs
ja
jae
test
div
into
mov
adc
sar
mov
pop
lds
bound
in
pop
sub
js
stc
mov
pop
jecxz
pop
dec
ficom
repnz
in
or
and
or
out
sbb
mov
sahf
xchg
mov
and
mov
mov
pop
add
movs
dec
xor
mov
scas
pop
pop
shl
inc
mov
mov
ficomp
fsubr
call
fs
cld
pushf
mov
fisubr
push
jnp
adc
pop
jl
pop
pop
daa
cli
hlt
jae
call
fdiv
movs
jne
sub
and
inc
(bad)
pusha
pop
dec
jmp
aaa
jnp
cmp
loope
adc
pcmpgtw
and
fidivr
movs
add
popa
jmp
repz
or
mov
mov
push
outs
sbb
cmp
jae
test
mov
push
das
lds
loopne
lahf
imul
pop
cmp
ret
inc
(bad)
rcl
cmp
or
neg
popf
scas
and
push
mov
or
dec
mov
sub
fcomp
lea
dec
dec
dec
pop
cs
in
mov
pop
js
fistp
jmp
(bad)
je
jo
mul
jge
(bad)
rcr
sbb
inc
adc
pop
test
cmps
mov
(bad)
es
mov
jg
adc
cmps
jno
les
inc
push
mov
push
lea
bound
jl
inc
push
jo
or
f2xm1
js
(bad)
sub
jmp
je
aas
xchg
sub
bound
in
xchg
stc
arpl
ds
adc
dec
(bad)
inc
hlt
or
cmp
inc
in
mov
(bad)
ins
retf
aas
pop
mul
test
fsubr
mov
inc
jge
push
jo
cmps
dec
je
mov
stc
sub
or
loop
hlt
cmps
cld
aaa
movs
shl
les
cmp
and
dec
pusha
and
ins
outs
xor
sub
shl
adc
pushf
jp
cdq
sbb
shl
ret
imul
xor
or
loop
sbb
sbb
adc
dec
(bad)
(bad)
in
(bad)
jbe
lds
ins
mov
pop
hlt
imul
push
cli
jbe
movs
shufps
lods
add
je
mov
test
cmp
dec
push
xchg
xor
stos
and
push
push
stos
mov
in
pop
push
shr
push
ret
fist
rol
bound
dec
mov
jbe
daa
push
ret
imul
sar
jnp
sbb
push
mov
add
shl
sbb
mov
scas
ret
loope
push
add
xchg
dec
xchg
(bad)
enter
shr
gs
leave
hlt
pop
adc
ja
pop
into
mov
add
mov
(bad)
test
mov
dec
fwait
or
cmp
jecxz
movs
mov
pop
fcomp
adc
stc
pop
pusha
pop
adc
push
sbb
call
dec
sub
adc
loope
repz
xor
lock
mov
adc
inc
(bad)
scas
push
hlt
cmp
rcl
scas
and
mov
clc
imul
dec
and
div
or
leave
iret
pop
retf
mov
jle
fcom
and
adc
add
int
mov
pop
lods
inc
xlat
push
dec
pop
inc
dec
(bad)
xchg
outs
pushf
jg
adc
ins
push
sub
lods
push
adc
jp
inc
bound
mov
sub
inc
(bad)
pop
mov
mov
ror
xchg
jns
xor
neg
mov
(bad)
icebp
fldenv
sub
cmp
dec
sub
inc
xchg
jne
xor
lods
repnz
sahf
ins
scas
push
adc
xchg
in
mov
jmp
popf
bound
jo
imul
sbb
xor
add
jb
inc
daa
pusha
jecxz
xchg
icebp
imul
xchg
push
jl
int3
fisubr
xchg
xor
ins
push
retf
cmp
shl
mov
call
xlat
add
cmp
retf
mov
call
push
mov
fnstcw
xor
repnz
mov
ficomp
push
lahf
push
enter
or
jecxz
mov
sub
push
test
cmp
adc
out
lods
mov
cmp
ins
shl
push
mov
push
pop
sbb
jl
fild
xchg
sbb
or
push
adc
jl
cs
out
xchg
sub
mov
ins
mov
rcr
inc
int3
inc
cdq
mov
test
adc
cdq
or
cmps
adc
or
adc
in
les
out
push
repnz
les
push
cmp
xor
enter
imul
push
into
call
jnp
ficomp
movs
pop
mov
sub
xlat
or
test
xor
cmc
xlat
into
xor
cmp
mov
add
(bad)
lds
fsub
mov
push
inc
int
mov
fmul
sahf
and
jne
mov
pop
inc
jo
mov
aaa
push
mov
sbb
nop
in
(bad)
repnz
or
test
and
cld
aaa
push
ret
hlt
test
fbld
sbb
ja
lods
ror
xchg
popa
fistp
(bad)
sub
pop
sub
xor
mov
inc
pop
adc
add
mov
aaa
or
inc
or
(bad)
fnstenv
inc
idiv
les
ret
dec
(bad)
fdivr
mov
lock
inc
nop
mov
cmp
jmp
cwde
mov
mov
mov
sti
pop
int3
test
fwait
xor
inc
and
out
(bad)
jle
lods
jbe
xor
in
test
cld
sbb
scas
jbe
shl
dec
mov
mov
imul
es
fcom
inc
cmp
push
fs
xor
sbb
adc
out
mov
jl
sar
cmp
adc
das
les
sub
jnp
out
dec
scas
sub
pop
in
inc
call
or
in
out
pop
jg
jl
outs
retw
shl
(bad)
(bad)
out
in
aas
or
xor
cld
add
in
fs
cmp
add
adc
mov
cmp
(bad)
stc
and
fadd
div
(bad)
bound
es
mov
gs
popf
lods
xchg
fwait
xor
jmp
(bad)
into
pop
pusha
cmp
push
xor
bound
xchg
push
clc
sub
pusha
(bad)
lods
repz
(bad)
popf
push
xor
and
xchg
dec
dec
add
fdivp
aam
test
dec
test
lea
sahf
push
jns
std
lods
pminub
mov
push
ss
adc
push
in
xchg
nop
xor
add
xchg
neg
cld
std
cli
les
enter
jmp
xchg
inc
and
mov
js
fs
jbe
je
push
cmps
fwait
and
sti
sbb
pop
pushf
int3
push
jns
adc
stc
mov
xor
enter
es
rcl
dec
sub
add
retf
or
jmp
or
cmp
(bad)
psadbw
mov
mov
imul
fs
(bad)
stc
nop
pushf
in
cmp
xchg
ja
(bad)
retf
push
cmp
and
leave
lods
js
mov
rcr
aam
lods
mov
fidiv
sbb
gs
cmp
or
inc
ret
jbe
push
lds
push
nop
sbb
cmp
mov
outs
cmp
jmp
test
cmp
xor
data16
mov
mov
jbe
adc
sub
out
dec
not
bound
in
or
jle
cmps
adc
leave
nop
bnd
mov
mov
ja
icebp
cmps
rcr
xchg
mov
test
dec
or
xlat
cmp
inc
test
iret
inc
out
or
aam
sub
cvtpi2ps
cmp
add
jl
jp
jbe
push
pop
pusha
mov
mov
jbe
ins
xchg
dec
outs
sbb
mov
and
cwde
add
mov
jbe
aad
pusha
fiadd
mov
pop
fcomp
mov
inc
or
fiadd
aaa
(bad)
or
in
pop
(bad)
cli
jle
inc
push
(bad)
push
or
jno
or
push
inc
ins
popf
mov
sub
lds
adc
(bad)
test
sub
and
sbb
lahf
adc
sub
sbb
cmp
das
push
cli
inc
cdq
(bad)
dec
mov
jecxz
xor
adc
les
test
imul
arpl
sub
mov
push
mov
pop
mov
jo
sub
mov
pushf
leave
aaa
fisub
jp
inc
popf
hlt
out
xor
xor
repz
pcmpgtb
or
push
cmps
es
fcomp
mov
jmp
mov
sub
call
movs
jns
cmp
shl
sub
dec
jns
and
std
cmps
sub
adc
cmps
shl
hlt
push
out
ror
das
push
ja
pop
outs
push
sbb
mov
fwait
adc
and
cmp
mov
dec
push
lods
push
sub
inc
gs
push
nop
cmc
aam
stos
jnp
mov
jmp
fcom
call
xchg
pop
dec
jmp
ret
sub
arpl
push
(bad)
sbb
mov
add
test
add
cmp
and
or
jge
mov
int
xor
pusha
mov
fiadd
jp
jo
shl
shl
add
dec
dec
popa
pop
and
mov
pop
test
cli
pop
ins
cld
data16
lods
stos
xor
push
adc
fnstenv
cmp
into
aas
xchg
inc
inc
or
test
daa
leave
mov
cmp
retf
mov
test
outs
cmps
xchg
inc
retf
nop
cmps
or
loopne
pop
pop
jb
dec
inc
sub
dec
and
pop
push
movs
or
(bad)
cmp
sbb
cmp
fucom
in
add
add
sbb
outs
pop
add
scas
or
loopne
out
(bad)
sub
inc
sub
cmp
mov
inc
imul
(bad)
xlat
aas
xchg
push
or
cmp
push
mov
iret
aas
mov
pop
pop
mov
das
ja
cmp
shl
(bad)
retf
push
movs
jno
push
or
movs
ret
pop
int
lds
and
push
dec
rcr
retf
mov
into
stos
or
mov
sahf
pop
iret
adc
or
(bad)
add
mov
mov
pushf
jno
imul
inc
outs
xchg
outs
add
pop
out
stos
mov
into
sbb
lods
inc
jbe
fcmovne
sub
retf
jge
sub
daa
sbb
push
cmp
repnz
nop
rcl
das
mov
or
add
add
(bad)
add
daa
dec
mov
inc
aas
sbb
aam
sub
mov
cmp
jns
xor
pop
pop
shl
or
call
aad
pop
xchg
cmp
inc
lock
gs
mov
je
fidivr
je
pop
loop
test
jp
addr16
shl
and
je
cmps
push
push
mov
repz
mov
push
push
push
adc
cs
stc
aam
mov
pop
dec
ja
hlt
in
dec
adc
enter
xor
mov
push
and
shl
repz
stc
jb
xor
xchg
adc
pop
vpsubw
cmps
xchg
pusha
push
mov
inc
push
scas
push
dec
mov
adc
fwait
sbb
mov
jp
cwde
cmps
stos
or
aaa
jle
sbb
jmp
push
or
(bad)
(bad)
xchg
mov
loop
sub
idiv
and
je
jno
cmp
sahf
aas
cmp
and
(bad)
cdq
push
fisubr
xchg
add
jne
inc
loopne
icebp
mov
and
mov
gs
xor
shl
ror
loop
inc
xchg
test
ret
jbe
mov
sbb
mov
dec
sub
pop
or
or
shl
fsubr
je
mov
test
xor
push
ror
adc
popf
hlt
loopne
mov
mov
mov
mov
leave
sbb
aam
sub
shl
js
fs
sub
xchg
mov
(bad)
movs
and
or
mov
es
fwait
imul
icebp
and
(bad)
pop
div
out
push
fwait
sub
pop
das
cmps
aad
pop
or
cmps
mov
pop
xchg
push
scas
ret
push
pop
test
int
sub
xor
mov
dec
sbb
leave
mov
std
or
jno
inc
push
rcl
xchg
push
jae
mov
push
or
fmul
and
jns
aam
inc
jns
je
pop
xchg
pop
xchg
mov
mov
scas
or
adc
jb
icebp
sub
mov
sbb
pop
jb
xor
mov
jbe
jb
and
pop
loop
lods
mov
pop
xchg
cmp
mov
cmc
sub
or
ds
cmps
xlat
add
adc
pop
in
dec
mov
and
les
mov
cmp
jo
push
xchg
inc
fwait
sbb
out
and
int3
jecxz
and
nop
xchg
xchg
mov
push
jmp
or
leave
sti
fnstcw
scas
cdq
leave
sbb
sbb
push
sar
inc
fadd
jbe
push
add
scas
outs
jle
mov
pop
pop
cmp
mov
and
push
sbb
repz
fld
pop
fisub
das
lahf
movs
cmp
cmp
popf
(bad)
xor
jg
outs
test
sub
jne
fwait
arpl
into
sbb
sub
je
add
add
fst
enter
or
mov
fdiv
test
jbe
jne
cld
lock
push
or
push
dec
fs
push
cmp
sbb
mov
sub
enter
rcr
pop
jge
ret
mov
ins
cmp
aad
xor
push
ret
mov
lods
jmp
out
mov
ret
push
jg
sub
jno
push
nop
repz
mov
pop
retf
jl
scas
cmp
fld
test
push
cmp
movs
push
retf
add
mov
sub
or
loopne
dec
es
test
out
mov
gs
bound
mov
ss
lea
pushf
loop
retf
not
xor
sti
mov
mov
retf
dec
or
cmp
and
dec
fyl2x
mov
or
mov
adc
in
fistp
xchg
retf
jb
adc
inc
adc
(bad)
mov
fldenv
jb
fidivr
das
(bad)
fisttp
xor
inc
out
push
sub
pop
adc
loop
in
sti
stc
jmp
pop
es
add
fistp
setp
cmp
outs
sub
add
jl
(bad)
sar
sub
arpl
ins
arpl
jo
jmp
pop
xlat
or
inc
mov
sub
ins
mov
ret
sahf
fdivr
jbe
push
pop
(bad)
cmp
mov
mov
ret
add
xchg
(bad)
test
cdq
jp
into
jmp
out
dec
shr
clc
dec
rcr
aaa
sub
push
push
aas
imul
leave
shr
arpl
cmps
outs
pop
sbb
sub
fwait
iret
in
and
xchg
add
cmp
fist
outs
mov
inc
adc
stos
outs
push
fldenv
cmp
sahf
mov
pop
pop
test
idiv
push
or
sbb
shr
lods
bound
test
pop
mov
xor
retf
into
cmps
bound
xchg
sti
pusha
fnsave
pop
hlt
test
pop
arpl
aam
jp
cmp
pop
repz
(bad)
and
call
adc
pop
xor
xor
daa
jecxz
xchg
or
xchg
sub
sbb
out
std
sbb
xor
xchg
mov
(bad)
test
in
mov
mov
nop
and
mov
pop
sbb
into
sub
call
dec
addr16
xor
jmp
neg
pop
dec
loop
fwait
movs
jns
das
cdq
loope
adc
jg
sub
xchg
loop
and
cld
repnz
ret
xor
lods
cmp
push
mov
jnp
sbb
mov
sar
dec
mov
outs
repnz
xor
inc
jge
imul
out
clc
inc
pop
aam
cmp
das
adc
pop
addr16
nop
sub
ds
(bad)
fld
retf
das
es
daa
mov
not
iret
loope
out
or
cli
out
jae
fdivr
ror
inc
iret
ins
pop
movs
imul
push
xchg
or
pop
add
dec
push
mov
xor
mov
in
sahf
and
pop
push
jg
rcr
out
lock
push
aaa
mov
or
add
or
fiadd
pop
mov
push
add
cwde
and
(bad)
pop
out
xchg
dec
pop
or
or
int
bound
cmc
mov
into
test
mov
mov
or
fucomp
(bad)
into
inc
in
push
sti
std
fisub
outs
jecxz
aad
movs
pop
mov
or
cli
dec
and
lea
ret
sub
fwait
scas
sbb
jae
cmp
dec
inc
ss
neg
enter
inc
mov
lock
sub
jecxz
(bad)
cmps
push
lahf
xchg
xor
push
ficom
fnsave
je
outs
xchg
popf
pushf
out
int3
xchg
icebp
aaa
aaa
and
loopne
and
scas
data16
in
bound
xor
dec
sar
ins
push
repnz
push
sbb
sbb
mov
cmp
jmp
push
push
dec
ins
rol
int
popa
and
xchg
cmc
jae
das
xor
std
sub
ficomp
fs
jp
add
mov
cli
sbb
into
out
daa
sub
stos
pop
sub
or
pop
int3
mov
shl
mov
push
add
in
dec
out
xchg
mov
das
in
adc
add
xchg
push
adc
pop
ins
push
sub
mov
push
xchg
push
and
dec
loop
inc
enter
jmp
clc
pop
mov
cs
push
nop
inc
out
call
sbb
mov
mov
fsubrp
lods
lods
rcr
xchg
jmp
loopne
cmp
neg
sbb
pop
jb
push
mov
bound
pop
fistp
push
scas
mov
pusha
scas
dec
sub
cli
sbb
fsub
jns
mov
inc
push
hlt
jl
ja
shl
es
rol
mov
pop
retf
pop
faddp
js
inc
sbb
shl
mov
inc
(bad)
ds
jae
aam
pop
pop
jg
sbb
movs
sbb
call
out
push
mov
aaa
ss
dec
mov
(bad)
nop
add
ins
retf
push
cvtps2pi
(bad)
lods
sub
mov
mov
add
ss
clc
imul
repz
and
cmp
aaa
pop
(bad)
jno
das
mov
loope
mov
ret
dec
add
out
pop
xchg
clc
inc
push
and
fwait
add
and
clc
loope
push
inc
mov
mov
fs
jne
inc
leave
imul
(bad)
push
dec
loope
inc
es
push
dec
pop
retf
adc
outs
add
mov
xchg
ret
push
fidiv
lea
jl
loop
adc
fstp
sub
mov
sub
xor
lock
jae
imul
cmp
ja
push
repz
and
in
outs
xor
jmp
addr16
outs
lds
lea
inc
cmps
cld
(bad)
outs
jge
cmp
imul
cdq
imul
inc
dec
pop
jmp
xchg
ret
mov
aam
jle
jbe
mov
add
pop
clc
xchg
sahf
ror
dec
mov
sub
and
lock
loopne
push
fs
push
pop
mov
iret
mov
inc
push
ficomp
mov
push
fcom
in
sub
pop
call
add
outs
arpl
in
into
mov
into
adc
xchg
push
mov
sbb
outs
fwait
sahf
adc
or
jo
ja
jecxz
or
cmc
dec
inc
mov
mov
rol
stos
adc
xchg
enter
inc
inc
lods
fdivr
pop
(bad)
fnsave
pop
sub
cmp
jno
xor
jl
into
pop
js
(bad)
xor
pop
adc
mov
loopne
fs
dec
std
and
js
(bad)
xchg
mov
dec
cmp
mov
sbb
pusha
jmp
cmp
outs
jo
pop
lds
adc
jp
mov
bnd
xlat
push
fldenv
adc
test
retf
in
out
mov
push
hlt
push
mov
pop
jbe
xor
cmp
cmp
jp
sbb
lock
jne
jae
xchg
sub
retf
adc
ret
mov
cdq
or
mov
sbb
(bad)
scas
inc
ss
hlt
or
mov
les
cli
xor
arpl
sub
mov
inc
push
pop
loopne
cli
test
or
std
(bad)
mov
out
(bad)
push
out
mov
jg
inc
shl
cdq
push
inc
dec
inc
aam
jne
sahf
or
jecxz
sub
pop
test
pushf
into
push
(bad)
(bad)
(bad)
xchg
mov
pop
xchg
xor
and
retf
cmp
jno
loopne
dec
ret
repnz
add
ins
mov
or
xchg
adc
nop
lods
fnstsw
shl
inc
dec
imul
cmp
mov
test
div
enter
cmp
xchg
in
(bad)
test
lea
adc
leave
adc
mov
fisubr
sub
cmp
(bad)
jp
retf
fild
sti
fisttp
fst
mov
in
gs
data16
inc
dec
rcr
lahf
fild
add
aas
sti
dec
stos
out
mov
mov
mov
scas
pop
dec
lds
sbb
mov
outs
aaa
out
hlt
fcmovnb
test
out
cmp
ficomp
adc
outs
mov
mov
pop
mul
test
sbb
(bad)
div
xchg
cld
ja
out
dec
mov
cmp
adc
ficomp
add
xor
jl
push
movsx
bound
test
or
inc
cld
and
(bad)
mov
daa
add
jle
adc
pop
sub
gs
mov
inc
ja
adc
mov
jmp
push
loopne
loope
call
pop
mov
data16
fldcw
fist
dec
and
and
ss
mov
(bad)
push
jle
out
std
into
adc
mov
ret
scas
add
movs
(bad)
cld
in
jecxz
jno
xchg
sub
jmp
rcl
outs
cmps
jbe
pop
pop
bound
jmp
adc
fidiv
in
adc
mov
add
mov
inc
push
cmp
xchg
pop
cdq
push
xchg
pop
xor
inc
and
lea
fisttp
xchg
fisub
loope
pop
ja
dec
or
ss
mov
call
cwde
scas
rcl
cmp
fiadd
sar
int3
push
(bad)
ficomp
xchg
dec
xchg
in
dec
xchg
repnz
das
(bad)
adc
xchg
ret
and
pop
mov
mov
retf
mov
punpckhbw
mov
mov
or
into
std
push
mov
test
pop
inc
xchg
mov
and
sbb
sbb
jmp
retf
and
je
ja
retf
xlat
jl
mov
ss
adc
retf
ret
cli
pop
iret
nop
xor
and
(bad)
(bad)
test
adc
fidivr
pop
fadd
or
cld
idiv
(bad)
jg
or
popf
sub
add
push
popf
jge
sti
test
call
push
adc
adc
ins
mov
outs
shl
push
mov
out
and
movs
xchg
fwait
ror
push
es
mov
xchg
shl
icebp
push
push
push
push
nop
cmps
dec
std
mov
push
cmp
xchg
out
add
lods
add
popa
add
xor
adc
mov
and
in
pop
fidivr
sbb
cmps
mov
xchg
cmp
xchg
enter
mov
and
ret
add
and
int3
push
sar
nop
jl
adc
shl
fnsave
xchg
scas
scas
push
inc
call
xchg
sbb
push
jb
addr16
imul
outs
(bad)
pavgb
add
jmp
or
inc
fwait
ss
pop
push
mov
jno
add
cmp
xor
inc
cmp
aad
leave
jl
les
mov
loop
mov
das
call
jmp
mov
sub
js
(bad)
int
and
cmp
shl
test
sbb
dec
fcmovbe
cmp
sahf
test
xlat
sbb
pop
mov
mov
cmc
mov
icebp
xlat
loopne
cmp
jns
push
sub
das
and
mov
loope
in
repnz
and
mov
ret
movs
pop
lock
cmp
adc
in
mov
pop
(bad)
dec
add
iret
mov
fisubr
fs
(bad)
(bad)
pop
sahf
hlt
jge
ins
popf
cli
adc
imul
sbb
mov
(bad)
or
or
fwait
and
fdivr
pop
shl
xchg
or
dec
pop
int3
lods
xor
push
add
xchg
rcl
jo
std
cmps
sub
xchg
adc
lock
imul
pop
pop
das
clc
fadd
ss
cmc
adc
ins
fwait
test
sahf
scas
push
xchg
loop
out
push
scas
mov
aas
mov
cmp
xchg
pop
imul
adc
inc
mov
es
xor
out
pop
call
retf
and
pop
(bad)
inc
test
jmp
xchg
stos
push
dec
movs
cmps
fwait
lods
das
out
mov
mov
imul
mov
sub
or
adc
pop
and
repnz
xlat
push
add
outs
sub
adc
test
ja
jns
mov
jle
jecxz
into
int3
pop
and
mov
or
or
cmovae
call
rcl
pop
in
into
mov
xchg
jmp
in
loope
mov
jl
lods
sub
push
fldenv
pop
loop
cmps
cmp
or
or
mov
(bad)
jae
xchg
lock
xchg
out
lds
dec
pop
xchg
jmp
cwde
xchg
arpl
pop
sbb
movs
cmp
leave
add
push
jmp
or
mov
arpl
xchg
or
popf
xchg
dec
iret
div
imul
or
gs
int
dec
push
mov
and
or
mov
dec
and
cmp
(bad)
jo
arpl
mov
loop
(bad)
and
xchg
test
ins
mov
mov
sub
xchg
xor
mov
or
cld
dec
daa
or
add
push
rcr
rcr
jle
jno
call
arpl
das
ret
fdiv
repnz
and
pop
iret
fmul
sahf
popf
push
xchg
sub
sub
push
in
imul
cmps
xchg
add
dec
and
mov
cmp
mov
xchg
mov
push
pop
int
mov
cmp
xor
dec
dec
mov
add
jbe
mov
xlat
test
and
dec
loope
adc
aam
add
(bad)
daa
push
out
imul
mov
and
popa
mov
stos
add
mov
pop
mov
repnz
fldcw
jb
push
(bad)
xchg
imul
inc
out
stc
inc
cmp
xor
pushf
pop
or
and
xlat
mov
pop
les
push
div
(bad)
xchg
pop
cs
adc
ror
cmp
or
mov
rcl
out
mov
mov
add
shr
mov
dec
and
and
jle
aas
out
jno
in
leave
ret
jns
and
fild
sbb
cmp
into
pusha
jecxz
jns
cmp
mul
jp
xor
pop
enter
aas
sbb
cmp
push
mov
sub
(bad)
loope
pop
out
adc
imul
inc
sbb
inc
aas
fiadd
(bad)
mov
popf
adc
inc
jp
fimul
xchg
idiv
ja
lock
fdivr
cwde
inc
pusha
ficomp
mov
pop
jmp
mov
popf
aad
out
xchg
call
clc
icebp
in
ins
cmp
mov
inc
xchg
cli
dec
mov
dec
mov
mov
movaps
fnstsw
sbb
popf
adc
add
pop
sbb
and
lea
mov
xchg
mov
mul
cmp
inc
enter
adc
mov
cmp
out
gs
loopne
jno
imul
and
sub
movs
cmc
psrlw
les
rcl
iret
ret
fs
dec
xor
dec
retf
xor
retf
scas
daa
fimul
dec
mov
fwait
lahf
mov
sbb
add
add
cld
(bad)
loope
sahf
jns
bnd
jnp
push
outs
add
aas
sbb
cmps
in
shl
div
popf
jno
cld
push
xchg
(bad)
mov
pop
outs
stc
inc
add
iret
pop
cmps
sbb
stos
mov
test
call
mov
and
mov
pop
mov
cmp
icebp
dec
mov
rcr
(bad)
cld
xchg
std
and
ret
test
cld
dec
neg
jg
add
test
movs
in
(bad)
aam
(bad)
jae
fdivr
stos
ror
int
fst
pop
or
jmp
outs
es
xchg
push
cmps
packssdw
ins
xor
nop
fs
jle
push
xor
adc
das
or
push
repnz
ret
mov
scas
fadd
cdq
add
dec
pop
jne
(bad)
mov
mov
loopne
push
jnp
mov
cmp
in
mov
(bad)
outs
xchg
or
mov
and
cdq
dec
inc
scas
jae
pop
iret
xchg
int
retf
or
test
daa
xchg
jns
mov
retf
xor
and
push
add
mov
loop
daa
leave
mov
mov
test
push
rol
out
inc
inc
mov
mov
pop
ins
idiv
or
in
inc
mov
jbe
xor
mov
(bad)
dec
or
sub
push
jne
mov
and
repnz
xchg
xchg
out
icebp
mov
cmp
stc
scas
fwait
mov
xchg
bound
or
loop
test
clc
sub
mov
add
inc
fld
or
dec
movs
mov
loop
sub
sub
ffreep
pop
cmp
xor
and
mov
dec
sbb
(bad)
movs
mov
push
loopne
dec
sbb
mov
div
int3
cld
daa
adc
lods
test
movs
push
mov
test
repnz
test
inc
test
(bad)
pusha
iret
int3
loop
adc
pop
push
jae
lods
mov
cmp
pop
adc
out
xor
dec
test
lods
xchg
push
mov
push
clc
cmps
fwait
push
jbe
in
mov
cmp
cld
sub
dec
hlt
jmp
push
adc
cmp
sub
xchg
inc
jb
daa
ja
xor
mov
ins
inc
xor
mov
ret
and
movs
jo
sti
arpl
mov
pop
mov
aad
repnz
leave
mov
stos
ins
ficomp
xchg
das
add
call
inc
pop
sbb
stos
(bad)
jmp
test
sbb
and
sbb
ins
in
movs
test
add
xchg
xchg
int
loope
mov
push
sub
pop
adc
cmc
loop
push
adc
xchg
test
jmp
push
int3
mov
jbe
push
jecxz
cs
enter
pusha
lock
inc
ja
or
call
out
stc
pop
mov
scas
(bad)
div
popa
add
sbb
pop
sub
aam
ins
fcomp
repnz
cld
push
or
or
jo
dec
mov
and
xor
push
adc
pop
pop
and
xor
rol
neg
mov
imul
mov
stos
movs
mov
xor
xchg
lods
jge
mov
imul
pop
mov
nop
data16
adc
arpl
sbb
dec
ins
imul
fsub
push
imul
xchg
sahf
xor
shr
sub
pusha
inc
enter
adc
and
(bad)
pop
mov
mov
add
jl
mov
ins
(bad)
repz
mov
(bad)
stos
je
adc
test
adc
out
adc
jge
mov
sbb
adc
aaa
mov
sar
jmp
xor
push
leave
std
adc
imul
mov
shr
sub
inc
sub
cmc
retf
cmp
mov
xchg
add
cs
mov
fwait
xor
ins
cmps
repz
mov
and
retf
scas
fs
cld
outs
test
pop
adc
test
ins
dec
clc
add
add
push
js
mov
pop
or
nop
mov
in
cmps
cdq
in
mov
repz
in
loope
cmp
xchg
cmps
test
xor
pop
sbb
xor
(bad)
aam
fwait
jecxz
jecxz
ret
popa
mov
gs
pop
push
add
pop
dec
fst
push
xor
scas
loope
xchg
arpl
add
daa
sub
or
repz
fstp
adc
jle
jae
call
push
dec
in
jb
mov
push
push
inc
stos
fdivr
loop
fmul
ins
(bad)
push
pop
add
pop
icebp
dec
or
add
iret
inc
std
add
lea
(bad)
lock
arpl
ss
pop
adc
fldcw
push
outs
add
loop
push
test
or
jno
jle
in
cwde
xor
pop
sahf
dec
sbb
jmp
mov
lea
add
leave
xor
mov
push
jbe
shl
pop
ret
cwde
sahf
cmps
jp
rcl
out
mov
push
sub
mov
sbb
aas
in
cmc
in
icebp
lds
stos
mov
cdq
nop
loopne
push
mov
jnp
or
mov
jns
addr16
dec
add
inc
inc
dec
leave
leave
jle
test
dec
div
loopne
inc
aad
ror
idiv
xor
mov
(bad)
mov
inc
fld
cmp
inc
out
mov
dec
ja
fdiv
jp
popf
inc
out
cmp
aad
cmp
repz
(bad)
mov
stos
xor
fisttp
sbb
sbb
out
ror
dec
pushf
pop
push
sub
jo
(bad)
push
adc
sub
imul
imul
jg
jle
call
movs
lea
mov
dec
mov
xchg
add
add
pop
adc
daa
jo
adc
bound
mov
xlat
dec
int3
loope
push
mov
aad
add
mov
lea
mov
in
dec
sbb
fs
inc
loopne
sti
popa
ret
fistp
inc
cld
push
fsubr
in
mov
jl
loopne
mov
sbb
xchg
in
sub
repz
imul
int3
leave
sub
cmp
cmp
push
xor
mov
sbb
loope
mov
sbb
jnp
cld
push
jbe
cmps
call
nop
sti
pop
ss
repz
jmp
jb
call
xchg
xchg
adc
test
xchg
cmps
outs
es
int3
loop
and
lods
jl
sbb
and
push
das
push
out
clc
fld
jge
inc
mov
pop
adc
pusha
mov
mov
pop
ins
add
scas
loopne
sbb
push
sub
int3
int
outs
(bad)
pop
mov
dec
xor
or
mov
or
jb
loop
jle
adc
cdq
shl
jmp
pop
xchg
imul
sahf
xor
fidiv
cmp
out
stos
jmp
mov
mov
jl
add
mov
or
ror
popf
mov
or
nop
mov
sbb
(bad)
cdq
mov
xchg
add
or
wbinvd
(bad)
xor
jne
mov
mov
cmps
or
call
push
inc
cmp
outs
(bad)
sti
cdq
inc
jmp
enter
les
push
lds
pop
int
je
daa
rcl
stos
xor
mov
sbb
lock
cmp
sub
xlat
sar
lods
push
adc
jb
sub
out
fcomp
push
jp
int
xchg
mov
hlt
adc
outs
cld
int
call
lds
push
daa
mov
add
jae
mov
sub
enter
hlt
xchg
pop
jge
adc
adc
xor
add
sub
in
aad
lea
repnz
fxch
xor
fmulp
sub
lods
aad
sar
movs
aaa
xor
lods
push
icebp
in
add
adc
xchg
sti
dec
lock
out
or
push
inc
cmps
jns
std
in
iret
mov
pop
pushf
(bad)
jns
xchg
out
push
mov
dec
pop
mov
fdiv
sub
mov
push
mov
mov
jae
mov
sti
jns
gs
push
sbb
mov
xchg
mov
aas
inc
xor
pusha
cmp
dec
(bad)
sti
imul
and
fsub
outs
or
loopne
pop
mov
push
loope
sahf
xor
jp
cmp
pop
cmp
push
cli
pop
cmp
jnp
out
shl
repz
mov
shl
das
aaa
cwde
dec
cs
xchg
(bad)
mov
outs
mov
mov
add
cs
push
sub
cmp
jge
out
sub
sub
dec
push
or
ds
sbb
or
ins
dec
adc
aaa
movs
or
or
add
sbb
xchg
push
pop
or
popf
cmc
xchg
fwait
ret
movs
pop
push
sub
icebp
lods
pop
vprotq
test
fucomp
int3
pop
dec
mov
out
inc
bswap
push
jp
push
xchg
mov
adc
data16
inc
push
les
arpl
sub
in
jnp
sar
aaa
and
(bad)
cli
in
lock
cmp
pop
sar
iret
pop
sbb
aaa
hlt
icebp
stos
mov
pop
push
aam
inc
pop
retf
call
(bad)
es
into
dec
jbe
test
xchg
xor
and
lahf
pop
cmp
fadd
or
jnp
ss
fld
mov
mov
in
fld
xlat
fs
mov
aad
sub
cmps
mov
out
ins
push
inc
jmp
imul
imul
in
bound
or
mov
int3
int3
(bad)
or
mov
stos
aaa
cmp
fbstp
adc
push
bound
sbb
cmp
xor
fsub
xchg
sbb
lods
or
out
in
sub
or
mov
mov
in
jne
sub
fwait
pandn
adc
shl
ret
cmps
test
ror
sub
inc
inc
daa
outs
push
xor
xchg
and
xor
xchg
ss
adc
jnp
(bad)
pop
bound
add
shl
sub
mov
push
fimul
imul
xor
sti
scas
out
sub
arpl
stos
sbb
outs
jnp
add
out
inc
add
movs
adc
sbb
into
sbb
loop
ja
call
fwait
xchg
call
and
pop
mov
(bad)
jp
inc
push
outs
stc
sar
ja
xor
jp
mov
stos
ss
cmp
scas
not
movs
mov
lods
inc
dec
into
or
cmp
test
pop
inc
xchg
cli
out
repnz
retf
adc
jns
push
lods
mov
aad
cwde
sub
in
jne
pavgb
xchg
ins
xchg
mov
pop
mov
mov
inc
mov
xor
cmp
pop
pop
icebp
es
mov
bound
or
daa
ret
lods
lock
ror
xor
mov
in
ret
push
pop
mov
in
jns
loop
retf
clc
mov
sub
cmps
lahf
imul
jmp
jo
jno
shl
sar
dec
adc
mov
xor
jo
dec
lods
pop
arpl
nop
cmps
mov
xor
outs
cmp
push
add
jb
sub
push
mov
loope
jns
and
pushf
inc
xor
retf
clc
in
call
pop
repz
and
fisub
jnp
cmp
loope
xor
enter
sti
dec
dec
adc
inc
xor
out
aas
xor
sub
movs
xchg
pop
mov
mov
pushf
(bad)
cwde
jne
jmp
sub
stc
rcr
fst
cmp
jmp
pushf
retf
sub
sub
sahf
test
ja
adc
or
call
or
add
pop
cdq
int
outs
lahf
mov
not
cdq
mov
fimul
enter
push
test
int3
popa
dec
bswap
sub
push
not
fcom
push
adc
jmp
xchg
and
sub
mov
pop
imul
or
popa
out
ficomp
(bad)
adc
mov
inc
inc
lahf
sbb
mov
push
or
enter
out
xor
jae
and
inc
clc
jnp
arpl
mov
stos
fild
aad
push
dec
int
lock
inc
std
cmc
add
and
in
lock
lea
shl
fistp
imul
stos
jecxz
fs
or
call
icebp
fnsave
es
pop
test
or
jp
jge
test
retf
add
sub
ins
retf
sbb
xlat
jl
sub
scas
shl
loopne
stc
mov
adc
mov
jae
xlat
pop
ror
jp
or
mov
in
cdq
xlat
or
jbe
cmp
mov
out
mov
mov
retf
lds
jmp
bound
push
xor
mov
push
jp
dec
jg
sub
pop
mov
xor
repnz
dec
add
or
movs
pop
jmp
out
in
push
in
test
(bad)
xchg
add
mov
pop
call
jae
xor
jg
shr
sar
lahf
mov
movs
inc
fadd
mov
repz
dec
rcr
mov
xor
popf
inc
mov
push
jo
int
lods
adc
fld
mov
cmp
xchg
stc
popf
ret
not
icebp
lea
push
ds
jp
sbb
jmp
js
jl
jp
ror
and
cdq
gs
mov
dec
je
push
les
sbb
mov
cmp
push
retf
mov
mov
and
frstor
outs
in
sbb
mov
add
inc
xor
cmp
(bad)
iret
inc
sbb
pop
push
cmp
out
add
jle
fldenv
dec
nop
xchg
sbb
es
mov
mov
outs
mov
jmp
pushf
scas
sub
xor
ss
push
jmp
cli
adc
je
test
mov
inc
arpl
or
push
pop
loopne
mov
sub
stos
sahf
push
in
and
cmc
les
mov
imul
(bad)
out
mov
pop
(bad)
lods
pop
fadd
adc
(bad)
lahf
jl
mov
xor
loop
test
ss
sbb
lea
and
pop
bound
dec
xor
mov
out
test
or
adc
retf
icebp
or
adc
pop
adc
enter
jl
cmp
and
leave
xchg
ins
pop
test
ror
das
cdq
or
adc
das
jp
in
add
rol
xchg
mov
fisubr
jns
loopne
dec
push
dec
pop
sbb
in
mov
cmp
inc
xor
mov
call
fidivr
dec
inc
js
outs
sete
repnz
sub
add
js
adc
cmp
xchg
sub
push
sub
mov
push
mov
cmp
ins
imul
(bad)
fstp
xchg
xchg
addr16
dec
xchg
sbb
popa
faddp
aaa
out
jb
fsubr
sub
sbb
jo
jno
push
jle
pop
sub
mov
and
mov
cmp
in
(bad)
ja
pop
scas
xchg
lods
call
cmp
jecxz
mov
das
jae
cld
cdq
jmp
in
loope
add
imul
push
ja
mov
(bad)
push
popf
or
jmp
daa
pop
cmp
aam
ins
dec
add
hlt
enter
mov
or
xchg
ins
add
test
icebp
or
mov
cmps
jo
pop
mov
movs
loop
jp
add
xor
push
xor
add
pop
sar
lds
jae
jbe
sbb
jo
fdiv
daa
enter
adc
pop
aas
sub
add
dec
stc
or
push
sub
cdq
mov
cmp
or
fwait
ja
pinsrw
or
shr
and
ret
jno
(bad)
or
hlt
push
in
mov
dec
in
aad
fisub
ret
in
dec
cdq
mov
test
addr16
jbe
xor
mov
mov
daa
mov
fistp
cmp
cmp
xor
(bad)
cmp
jo
iret
or
pop
or
xchg
mov
push
ss
pop
or
xchg
push
jp
mov
sar
lods
push
je
imul
nop
mov
dec
cdq
pop
jge
pushf
mov
cmp
stos
xchg
sti
popf
push
dec
daa
fist
call
mov
sub
(bad)
jle
inc
sbb
icebp
imul
out
mov
mov
pop
push
jle
scas
cmp
or
and
iret
lea
mov
or
arpl
out
push
xchg
lock
sub
dec
jl
sti
xlat
ror
fdivr
xchg
cli
sub
retf
push
mov
cs
aad
push
in
test
(bad)
push
shl
sbb
dec
pop
sbb
pop
add
jne
mov
cmp
and
ja
(bad)
retf
jmp
ins
mov
cmp
xchg
pop
jmp
sub
pop
add
mov
jbe
pop
idiv
xor
sub
test
ja
ror
push
fsubr
add
mul
mov
dec
or
out
cli
dec
sbb
sbb
mov
sub
int
arpl
add
mov
xchg
stos
jnp
adc
mov
jae
(bad)
push
dec
mov
mov
dec
xor
push
jo
faddp
adc
repnz
jns
jne
xchg
mov
ret
add
xchg
adc
inc
hlt
inc
pop
pusha
nop
sub
push
aam
xchg
mov
cwde
mov
das
clc
(bad)
push
stos
enter
pusha
sbb
dec
fild
or
or
or
(bad)
jecxz
pop
inc
fucomi
lods
and
int
add
mov
xor
test
push
mov
and
cmp
jmp
sbb
jmp
je
retf
pop
scas
arpl
jmp
(bad)
loopne
lea
adc
andnps
ret
jnp
mov
jecxz
mov
aaa
jge
fincstp
loopne
sbb
dec
retf
push
push
lods
jno
into
sub
fcmove
cwde
add
push
xlat
cmp
scas
jno
push
scas
jns
xchg
inc
add
rcr
or
pop
(bad)
int
hlt
retf
gs
aam
ret
jecxz
(bad)
adc
mov
daa
add
(bad)
nop
xchg
shl
out
in
push
test
jg
dec
test
clc
or
in
icebp
xor
mov
mov
ins
adc
add
call
mov
test
(bad)
pusha
jae
out
lods
cs
sti
jb
lock
sub
dec
jp
in
sub
nop
ss
cwde
mov
out
push
add
in
hlt
inc
shl
cmp
shl
scas
and
mov
sub
lea
pop
mov
(bad)
imul
dec
cs
mov
and
icebp
jg
aas
dec
cli
xor
and
adc
mov
repz
ins
dec
jno
retf
xor
sub
in
dec
mov
push
adc
stc
mov
cwde
imul
xchg
movs
or
popf
mov
cdq
icebp
fs
ret
in
jg
mov
lock
pop
xor
jge
in
sbb
cdq
out
iret
jnp
dec
daa
xor
jecxz
hlt
fcom
add
fs
sahf
std
data16
xchg
jge
cmps
and
(bad)
xchg
pop
xchg
inc
call
fistp
imul
xor
push
jae
mov
test
fnsave
movs
or
(bad)
fbstp
pusha
mov
mov
push
retf
das
in
nop
mov
ins
add
mov
jbe
sar
inc
test
shl
out
(bad)
dec
aad
es
cmc
xchg
pop
sub
aam
jns
mov
dec
stos
mov
or
adc
push
push
fistp
mov
cmc
xor
mov
adc
jo
xor
sbb
retf
out
inc
sub
cmps
cld
cmp
or
sbb
popa
or
ds
and
mov
sti
pop
sub
push
call
mov
stos
enter
dec
or
push
xchg
or
gs
test
in
cli
cld
ret
(bad)
xchg
or
xor
fcmovnu
jp
xor
mov
lock
div
aaa
add
(bad)
mov
cs
mov
inc
mov
jmp
and
in
pop
sub
mov
xor
jge
ret
adc
lock
or
add
mov
push
xlat
cmps
fistp
xchg
aad
cmp
(bad)
or
iret
xchg
dec
push
(bad)
icebp
fucomi
xlat
in
arpl
and
adc
loop
inc
cdq
sbb
(bad)
mul
jle
pop
and
movs
daa
sub
xor
lea
xor
pop
movs
and
iret
loop
mov
xchg
cmp
mov
bound
xchg
add
stos
daa
add
cmp
rcl
jmp
in
sbb
pop
add
aaa
push
adc
mov
(bad)
cmp
(bad)
rcr
lods
push
fmul
daa
adc
dec
xor
mov
mov
push
mov
push
or
gs
add
xchg
adc
xchg
test
inc
xlat
add
sbb
cmps
scas
xor
inc
sub
xchg
dec
dec
mov
out
pop
fisttp
rcr
or
cli
adc
repz
pop
fs
data16
push
aad
stos
push
bound
test
ins
cdq
pop
outs
shl
sub
imul
push
aad
mov
sub
je
push
int3
xchg
gs
xchg
jl
xor
xor
je
mov
mov
xchg
daa
(bad)
pop
bound
push
inc
pop
je
mov
sub
xor
jae
jbe
test
ja
stos
popf
sbb
cld
xchg
mov
stc
cs
push
dec
imul
mov
push
fcmovnu
mov
sbb
(bad)
jg
inc
inc
lods
mov
jns
sub
mov
or
movs
idiv
mov
stos
je
jmp
pop
jnp
int
cmps
or
mov
mov
shr
lahf
stc
xor
addr16
sbb
test
xor
pop
arpl
sbb
mov
lock
dec
cmps
outs
ret
inc
mov
pop
jl
add
lods
xor
loopne
dec
pop
cmp
or
popa
sub
or
test
cmp
lea
cli
mov
or
ficom
add
in
fidivr
sbb
loope
popa
mov
xor
adc
adc
add
mov
mov
lahf
jp
nop
(bad)
pop
sti
inc
add
add
and
leave
int3
cmp
xchg
cmps
xchg
retf
add
les
xchg
les
and
jge
dec
jae
fcom
fcmovnbe
retf
dec
test
int
dec
(bad)
in
imul
jmp
fsub
sub
jno
adc
sub
jnp
in
mov
xchg
sahf
loope
mov
inc
adc
dec
inc
sbb
test
cmc
(bad)
pop
cmps
test
pop
mov
mov
pop
cmp
mov
ja
daa
out
dec
ds
bound
and
or
stc
adc
push
ret
mov
retf
mov
sbb
xchg
test
mov
add
sti
movs
test
in
(bad)
out
add
or
dec
xor
inc
mov
stos
xchg
popf
retf
xchg
div
pop
jns
ret
cmp
in
pop
sahf
add
lock
push
cmps
inc
inc
add
addr16
mov
sbb
mov
jbe
jbe
xor
int
push
fbstp
in
or
out
loopne
outs
or
pusha
lods
push
ret
jecxz
pop
cmp
or
or
mov
ret
push
jns
adc
daa
cmp
idiv
push
cmp
movs
sbb
ss
add
dec
icebp
rcr
leave
xchg
aaa
popf
das
imul
pop
pushf
push
and
inc
sub
add
lea
outs
push
out
push
or
jnp
jmp
aaa
sub
dec
cmps
loop
imul
dec
les
ret
jge
inc
loope
dec
retf
(bad)
dec
jle
aam
mov
sub
ins
xor
adc
in
sbb
jmp
(bad)
cdq
ret
loop
add
inc
sub
jp
ja
inc
repnz
stc
std
jo
cmps
inc
cmc
and
in
cs
and
sub
js
xchg
aam
add
sbb
mov
mov
mov
and
or
pop
mov
das
inc
mov
sbb
sti
xor
idiv
xchg
scas
sbb
mov
mov
mov
ss
(bad)
fdivr
adc
aas
add
sub
gs
xlat
and
stos
in
push
jp
jmp
pop
das
scas
fnstcw
ja
dec
push
in
cld
and
in
test
rcr
shl
add
pop
sub
call
push
sbb
jge
(bad)
jmp
push
pop
and
inc
aad
test
xor
popf
pop
mov
push
push
adc
mov
push
push
pop
gs
jbe
cli
xor
daa
add
ja
pop
pop
inc
or
dec
xor
cmps
push
pop
fs
xlat
call
imul
icebp
cld
test
sbb
rcl
pushf
xor
out
lahf
jbe
xchg
add
pop
xor
mov
sub
mov
add
cmp
mov
sub
pop
jg
in
or
aam
call
mov
add
ins
push
pop
iret
xor
jns
pop
call
dec
repz
mov
inc
ret
js
movs
pop
mov
sub
mov
mov
out
je
ret
mov
add
stc
mov
sbb
lods
jae
push
pusha
sub
or
push
xchg
test
stos
xchg
add
lods
xchg
adc
iret
add
pop
call
jecxz
(bad)
aas
je
daa
or
mov
cmc
or
shl
sbb
fcom
adc
fdiv
add
out
add
rcr
add
lea
xchg
es
cmps
xor
add
jmp
ins
fcmovnbe
sti
adc
or
and
fcmovnb
ja
jne
and
jb
cmps
and
lahf
int
imul
inc
sbb
jmp
adc
inc
inc
sbb
inc
xor
fsub
(bad)
icebp
outs
cmp
and
mov
jb
push
mov
add
retf
xlat
add
mov
cmp
xchg
xchg
ret
pop
fsub
sub
inc
js
xlat
and
ret
jae
add
nop
into
into
das
dec
pop
es
jmp
xchg
jecxz
mov
mov
push
dec
fbstp
push
outs
xor
vmovaps
cmp
or
sbb
sub
and
push
test
movs
(bad)
cld
(bad)
repnz
mov
mov
hlt
das
or
cdq
cmp
cmp
es
cmc
ja
fstp
mov
dec
lods
jge
js
sub
dec
cmp
dec
push
int
es
ja
sub
adc
cmp
int3
seta
xchg
repnz
push
loopne
add
imul
(bad)
ret
in
(bad)
movs
scas
sbb
into
das
xchg
jnp
(bad)
retf
push
and
fwait
cmps
mov
cmp
mov
inc
mul
test
mov
(bad)
jl
mov
jnp
adc
imul
jb
jmp
int
stos
sbb
mov
pop
fwait
cmp
or
aaa
push
or
cmps
out
or
push
adc
push
sbb
cmp
push
jmp
push
push
(bad)
xor
sahf
sahf
aad
mov
sbb
sub
push
dec
pop
mov
sbb
lods
or
cmps
mov
mov
pusha
dec
repz
or
test
imul
(bad)
xlat
add
sub
jg
cmp
stc
arpl
cmp
and
ret
pusha
icebp
jo
popfw
pop
add
call
or
movs
aaa
fs
clc
retf
mov
xor
jge
push
leave
jae
scas
xchg
cli
sub
pusha
outs
ss
cmps
and
js
xchg
dec
popf
rcl
pop
mov
cmps
imul
pop
enter
add
cwde
or
pop
xor
in
mov
fcmovbe
add
dec
int
cmp
pop
nop
sub
les
addr16
adc
and
push
mov
push
test
mov
adc
xchg
mov
shr
std
call
(bad)
cmp
adc
rol
jmp
out
seto
in
add
and
fwait
xor
ret
fdivr
test
mov
not
dec
fs
cmpps
fstp
loope
mov
add
retf
cmp
(bad)
jge
rcl
xchg
les
sbb
add
xchg
shl
xchg
popa
sub
jle
xor
(bad)
cmp
and
call
int
outs
sub
in
aad
cwde
daa
aad
outs
cmp
jbe
mov
sub
fadd
retf
cmp
repz
nop
je
push
test
jg
jmp
pushf
jae
cwde
add
iret
repnz
gs
loopne
in
xchg
lahf
or
outs
xchg
add
retf
cli
cmp
fdivr
das
jae
out
(bad)
mov
inc
cmp
fmul
mov
pop
or
clc
mov
and
mov
std
sbb
cdq
out
std
gs
in
inc
or
fldenv
test
adc
adc
sub
retf
fwait
inc
int3
jg
pop
in
hlt
cdq
inc
data16
je
outs
jl
mov
lods
xchg
pop
jmp
sub
jo
xor
pop
xlat
xor
jae
push
xor
fist
mov
movs
add
or
xlat
scas
out
fld
add
stos
mov
pop
mov
lahf
adc
or
xchg
aad
inc
push
dec
mov
rol
imul
add
jle
xchg
nop
inc
(bad)
pop
sbb
ins
adc
int
enter
nop
or
jmp
iret
sub
and
fisttp
xor
push
mov
adc
loop
nop
(bad)
xlat
mov
jo
xor
xchg
shr
imul
pop
lahf
loope
jnp
fsub
call
ret
mov
into
dec
push
data16
mov
adc
lods
xchg
int3
std
push
push
pop
movs
aad
fidiv
ins
leave
je
xchg
clc
ret
jnp
idiv
nop
jbe
cmp
xchg
mov
into
gs
xor
sub
xchg
cs
dec
outs
clc
cli
test
cmp
pop
mov
js
xchg
xor
cmp
addr16
mov
lods
add
adc
add
adc
push
mov
fadd
lahf
cmps
xchg
xchg
(bad)
jmp
ret
stos
cli
shl
and
hlt
mov
xchg
pop
fwait
and
(bad)
jae
je
fdivrp
mov
mov
in
cld
mov
adc
rcr
sbb
pop
cld
cmp
dec
jg
jg
pop
sbb
icebp
add
add
es
shl
adc
js
test
sbb
pop
ror
in
xlat
pop
mov
movs
adc
les
movs
adc
test
xchg
rcr
xor
push
jge
aad
pop
sub
pop
or
(bad)
retf
cmps
aam
jge
addr16
or
and
or
scas
repnz
maskmovq
test
icebp
std
pop
aas
iret
sub
cs
xor
cmp
test
push
popa
push
cwde
jne
or
pop
mov
xor
scas
sti
mov
inc
daa
sub
add
imul
aam
pop
movs
fdivr
fcom
dec
adc
sub
cli
inc
add
push
(bad)
das
cmp
mov
lods
dec
push
sbb
iret
jg
and
push
cmp
push
dec
pop
push
push
lds
retf
repz
or
push
scas
push
or
mov
daa
fbld
sub
jmp
cmp
aaa
les
cmp
rcl
sbb
(bad)
cmc
popa
inc
stc
cmps
cmp
jno
xlat
jbe
jae
fs
fwait
stos
jbe
repnz
mov
(bad)
dec
jo
and
xchg
in
mov
push
out
jb
push
fisttp
lea
in
loope
pop
pushf
xchg
sahf
sub
retf
xor
lock
icebp
fnsave
or
xchg
or
js
xchg
mov
mov
test
add
push
mov
and
test
sub
and
dec
or
fstp
push
mov
or
and
push
or
mov
mov
jns
or
push
mov
mov
cmc
pop
jl
in
pop
sbb
(bad)
sahf
addr16
sub
and
mov
(bad)
vunpckhps
icebp
add
ja
cmp
icebp
addr16
test
add
ds
push
sub
cmp
jg
outs
cdq
inc
push
aad
dec
(bad)
jb
or
lahf
retf
lods
fsub
mov
ror
ds
sbb
mov
or
outs
mov
and
(bad)
mov
retf
sbb
push
mov
add
cli
cs
mov
cli
and
dec
sbb
fimul
push
mov
sbb
mov
pop
clc
mov
test
xchg
jb
rcr
sub
lods
inc
mov
xor
fadd
movs
cmps
cmps
(bad)
push
repz
adc
lds
pop
adc
enter
lds
dec
and
aas
and
sbb
clc
sub
and
rol
hlt
es
dec
sub
scas
adc
(bad)
add
sbb
cmp
or
xchg
mov
and
not
ins
int
add
cs
out
push
div
stc
push
adc
dec
mov
push
jbe
ret
ror
les
sub
add
out
fwait
sub
mov
inc
icebp
test
cwde
adc
xchg
xor
mov
dec
add
add
and
sub
mov
sub
sbb
mov
sbb
clc
cli
ins
aam
xchg
data16
pop
cmp
pop
fcmovnb
loope
dec
das
adc
out
mov
xchg
repz
jo
iret
xor
xor
xchg
enter
retf
xchg
nop
shl
rcl
mov
sbb
inc
jns
mov
imul
mov
cld
mov
loop
and
cdq
loope
out
and
pop
ror
xchg
mov
test
mov
int
(bad)
and
or
adc
add
push
xchg
lock
dec
xchg
xchg
push
mov
adc
xchg
dec
out
dec
icebp
and
fst
(bad)
rcl
xor
dec
inc
imul
into
push
mov
pushf
xchg
sbb
es
les
xor
mov
ins
stos
jmp
xchg
jae
add
stos
inc
pop
stos
add
sbb
mov
jge
mov
sub
jns
outs
shl
mov
pushf
jmp
push
(bad)
cmc
xchg
xor
scas
dec
in
jb
or
ror
int3
hlt
loop
cmp
in
add
ret
adc
ja
cmp
adc
cld
data16
popf
(bad)
repnz
cwde
hlt
rol
shl
popa
xchg
mov
pop
push
add
pop
add
clc
outs
xor
xor
xchg
aaa
int3
aam
xchg
pop
cli
pop
jg
ja
popa
push
ss
sbb
mov
push
mov
test
sbb
pop
popf
mov
retf
pop
jl
xor
call
adc
dec
xchg
loope
sbb
sub
test
mov
sub
out
int
outs
xor
jle
in
iret
mov
push
xor
retf
mov
mov
mov
xchg
xchg
add
sahf
pop
adc
(bad)
xchg
pushf
xor
mov
inc
cmp
call
repnz
pop
js
xlat
jecxz
(bad)
arpl
(bad)
jge
les
sbb
hlt
daa
add
xor
jae
cs
loop
std
dec
dec
dec
mov
mov
cli
mov
adc
out
dec
cmp
bound
cmp
inc
mov
daa
mov
jns
fucomi
mov
aam
cmp
jb
out
mov
addr16
adc
retf
mov
push
xchg
cmc
dec
out
inc
das
push
fs
jl
frstor
in
das
ss
test
ret
in
mov
jbe
xchg
ret
int3
fistp
mov
mov
mov
jns
jmp
je
arpl
or
cwde
jg
repz
arpl
pop
and
xor
not
sub
fwait
xchg
add
fwait
xchg
nop
scas
mov
sub
add
push
std
rol
add
push
les
push
sub
jbe
aad
out
out
pop
dec
stos
and
xchg
sub
(bad)
push
les
xor
cmp
jmp
push
mov
cmp
or
ss
mov
cmp
cwde
(bad)
mov
pop
ss
xor
ss
mov
outs
arpl
jnp
into
std
push
mov
sbb
mov
jecxz
lods
adc
enter
movs
scas
lock
call
jnp
ins
xor
dec
push
xchg
xlat
pop
aam
retf
mov
lds
call
jmp
ror
pop
mov
test
aad
jle
(bad)
mov
ja
seto
mov
push
hlt
leave
cmp
loopne
dec
stc
push
push
jle
pop
shl
push
mov
inc
ror
sti
out
lock
inc
popa
es
aaa
(bad)
jg
adc
ret
je
mov
test
dec
(bad)
and
xchg
xchg
sbb
(bad)
mov
int3
sub
stos
lods
data16
xchg
loope
std
xchg
(bad)
and
push
or
pop
cbw
popf
aad
mov
into
lods
jle
sub
add
(bad)
jnp
repz
cmp
sbb
xchg
and
push
enter
fadd
jl
push
les
mov
inc
lods
jbe
push
pop
sti
dec
cwde
mov
inc
call
jae
adc
int
mov
inc
mov
in
das
(bad)
adc
mov
lods
pop
popf
push
lahf
jmp
lods
fstp
int3
cmps
jg
push
dec
leave
(bad)
sub
fistp
mov
adc
jg
fidiv
push
pop
mov
pop
add
jl
popa
or
mov
dec
lds
and
or
pop
fcom
inc
cmps
mov
sbb
sbb
popa
(bad)
mov
iret
mov
sub
and
and
jp
add
xor
mov
xchg
xor
rcr
cs
jo
je
sahf
and
(bad)
xchg
pop
xchg
cmp
push
retf
mov
mov
push
xchg
mov
cmc
out
les
div
or
fwait
xor
sbb
or
ret
jmp
shl
mov
ret
pop
xchg
jae
inc
repz
xchg
xor
dec
cmp
xor
adc
shr
or
sub
daa
xchg
sbb
add
int
xchg
xlat
dec
cmp
pusha
xchg
sti
mov
inc
test
enter
jno
fisub
arpl
pop
pop
daa
imul
retf
mov
icebp
inc
xchg
retf
outs
adc
ret
fisttp
push
xchg
mov
push
add
xchg
outs
ja
pop
sub
inc
adc
cmp
push
aad
pop
add
or
add
dec
in
jnp
or
push
cmp
jp
add
not
sar
mov
mov
int3
scas
xor
mov
mov
push
xchg
shl
cs
out
jmp
sub
mov
push
mov
sbb
push
pop
push
fwait
dec
fmul
popf
(bad)
int
dec
movs
sti
ret
mov
loope
add
mov
pop
in
popa
aam
imul
xchg
je
add
cmp
and
xlat
sbb
into
pop
inc
pop
dec
lahf
or
fsub
xor
add
sbb
dec
jne
loope
arpl
ins
dec
test
cdq
push
gs
cmp
xor
jns
mov
subps
popa
inc
fdivr
adc
loopne
inc
jmp
push
imul
cdq
cs
inc
jne
pop
sbb
dec
mov
push
aam
add
mov
mov
cli
push
push
dec
imul
std
fidivr
sti
inc
es
enter
xor
(bad)
push
hlt
mov
(bad)
mov
add
mov
mov
and
not
lahf
pop
dec
cmp
and
push
push
inc
push
inc
xchg
in
test
scas
cdq
lds
stc
sub
push
fisub
ins
mov
and
fldenv
adc
and
test
fsubr
push
xor
mov
movs
stc
sub
out
sub
xlat
cmp
nop
or
imul
xchg
push
sub
bound
and
arpl
pop
adc
repnz
and
mov
stos
fbstp
lea
loop
outs
repz
pop
clc
jnp
add
and
movs
mov
retf
xchg
sub
shl
repnz
jmp
fwait
xor
push
mov
(bad)
cmp
mov
arpl
cmp
cli
dec
xchg
push
cli
ficom
stos
pop
aaa
xchg
pop
cmp
jne
and
push
(bad)
fst
das
repnz
scas
into
sbb
jo
jno
mov
int
paddsw
not
rcr
push
and
inc
mov
dec
add
cmovl
je
dec
sub
sbb
or
loop
jp
cli
inc
call
jno
and
pop
or
(bad)
cld
mov
xchg
nop
std
sub
lods
or
jbe
mov
int
add
and
mov
or
mov
setb
xchg
jne
jle
loope
shl
ret
repnz
shl
mov
stos
xchg
mov
cmp
push
pop
xor
xor
push
fmul
shl
push
retf
jmp
cmp
fisttp
pop
add
mov
sbb
fdivr
js
push
arpl
pop
scas
sbb
adc
mov
mov
movs
or
mov
repz
cmp
cli
fs
adc
imul
shl
cmp
ret
pop
and
lock
or
mov
push
int3
push
push
push
inc
(bad)
xor
pop
cdq
mov
aad
xor
in
sub
ficomp
jns
clc
jmp
retf
loopne
jl
leave
mov
dec
fs
cli
mov
mov
in
mov
aam
mov
fld
pop
cmps
dec
test
int
test
loopne
stc
inc
xchg
dec
pop
mov
push
sbb
sbb
mov
xchg
mov
cmp
push
and
xor
stos
shrd
call
mov
(bad)
imul
inc
imul
inc
adc
dec
xor
mov
lock
add
inc
push
inc
cwde
xor
cli
movs
push
inc
fcmovnbe
dec
arpl
(bad)
das
in
hlt
xchg
cmp
cmps
hlt
xor
jmp
jle
lods
popf
loop
push
arpl
push
mov
test
adc
pop
data16
sub
add
or
xor
sbb
add
ds
dec
push
aas
jg
inc
mov
ss
nop
pop
mov
and
inc
xchg
jmp
mul
addr16
out
js
add
jnp
dec
sahf
mov
sbb
js
jecxz
adc
jg
inc
push
xchg
jle
sti
mov
push
ret
inc
call
lock
mov
jmp
mov
repz
loop
jne
sbb
pusha
push
(bad)
neg
int
fidivr
xlat
popf
mov
add
sub
lahf
sbb
or
xchg
jmp
and
adc
sbb
mov
les
cdq
xchg
sbb
ss
cmp
sbb
dec
xor
inc
pop
gs
push
loope
jae
clc
push
(bad)
in
xor
ins
out
loopne
jno
in
xchg
push
loopne
(bad)
in
std
fisub
ror
in
shr
add
lods
out
push
mov
sbb
retf
and
fs
or
jge
ins
out
dec
mov
les
xlat
cwde
in
sbb
cmp
and
sbb
aaa
repz
enter
xor
xor
into
mov
cli
fs
mov
loope
jle
(bad)
push
mov
or
push
scas
sbb
nop
inc
pushf
dec
cld
nop
lods
int
cmp
mov
jg
push
je
daa
shl
push
pop
pop
retf
imul
and
shl
mov
lea
leave
maskmovq
test
dec
cli
and
popa
inc
(bad)
aas
xor
cmps
mov
dec
call
fcomp
stos
retf
and
fistp
push
xor
out
fs
pop
push
clc
daa
(bad)
xchg
xchg
adc
ins
std
cmps
aaa
in
ds
mov
adc
shr
jb
outs
pop
mov
lods
(bad)
fidivr
sub
rcl
adc
sub
mov
jae
pushf
inc
cmp
sbb
push
movs
xor
sti
push
ret
aad
mov
cmp
pop
adc
pop
popf
inc
and
aaa
cmps
jmp
mov
dec
repz
cmc
inc
pop
jne
mov
jmp
shl
icebp
inc
cmp
adc
mov
into
jae
mov
cmp
loope
add
cmc
jecxz
icebp
push
stc
mov
jne
pop
adc
out
adc
add
push
jg
mov
inc
sub
mov
jge
fcomp
out
jns
pop
in
adc
ins
lds
jns
xlat
pop
dec
icebp
and
jno
es
pop
cmp
inc
std
mov
stos
or
neg
mov
leave
jmp
gs
inc
jae
out
clc
cmp
cs
outs
mov
push
xchg
xchg
lahf
loopne
jle
adc
add
jbe
pop
mov
xchg
add
jge
dec
mov
mov
mov
shr
ins
pop
sbb
xchg
(bad)
jle
scas
loope
lds
inc
sbb
adc
jg
leave
ja
add
ja
adc
jmp
sbb
fcmovnb
pushf
fist
fwait
loop
shl
ss
push
pushf
arpl
loop
dec
out
push
xlat
mov
mov
cmovae
sbb
push
lea
mov
xor
add
sbb
fmul
nop
adc
or
mov
fdiv
popa
pop
gs
lea
push
push
push
or
icebp
scas
call
pop
in
test
sub
test
cli
scas
jnp
and
test
or
(bad)
scas
mov
jp
lock
jg
mov
inc
mov
add
mov
dec
jmp
xor
sbb
xchg
push
cmp
loope
mov
outs
xchg
fdivr
or
hlt
cmp
xchg
pop
lgs
xchg
fsubr
mov
jle
dec
imul
xchg
push
cwde
cmp
dec
pusha
popf
repz
inc
data16
mov
jo
and
or
adc
or
add
popa
mov
dec
pop
cmp
jbe
adc
lods
mov
push
jle
xchg
in
sbb
stos
xchg
push
call
and
or
mov
push
rcr
and
xchg
or
ins
loop
and
daa
mov
or
fwait
cmp
aam
shl
jno
cmps
xor
adc
js
daa
movs
push
sahf
fwait
jecxz
jle
pop
call
push
sub
mov
or
xchg
sub
dec
push
xor
mov
push
mov
jmp
pop
scas
sbb
lods
or
or
pop
cmps
cmp
loop
lock
in
pop
jge
call
jnp
fldcw
add
loop
sub
movs
dec
adc
jmp
jb
cmp
aam
add
daa
rcr
xchg
adc
test
jae
mov
mov
mov
dec
in
std
test
sbb
add
icebp
inc
cli
jge
fsub
in
scas
add
push
js
mov
fstp
mov
(bad)
into
sbb
lods
jo
daa
dec
jb
mov
adc
sahf
or
iret
jmp
and
dec
ss
xor
push
pop
sbb
add
in
dec
stos
dec
popa
rcr
xlat
adc
mov
xchg
and
inc
fldenv
sbb
pop
jmp
vmread
je
xor
loop
in
iret
or
pop
mov
jnp
mov
cmp
add
sbb
clc
repnz
repz
lock
iret
cmp
test
sahf
push
jge
xor
call
xor
hlt
xchg
push
add
dec
iret
sbb
cdq
scas
pop
outs
imul
push
sbb
cmp
aam
std
pop
fs
or
sti
jb
addr16
jbe
(bad)
loope
mov
pop
jo
fld
fwait
jg
mov
push
push
push
jbe
inc
mov
push
ret
xchg
fimul
je
test
cmp
or
add
sbb
fucom
or
or
cwde
repnz
loope
mov
cmp
pop
(bad)
imul
mov
pop
jecxz
gs
mov
xchg
aaa
jae
stos
mov
cmps
sti
mov
mov
(bad)
xor
int
inc
leave
xchg
test
sbb
pop
lds
push
sub
in
pop
ss
inc
jmp
out
and
int3
xor
push
and
fsubr
cmp
xor
cld
mov
add
push
call
fdiv
dec
mov
outs
sub
in
(bad)
jle
es
scas
or
cmp
dec
cwde
outs
fwait
neg
in
or
and
cmps
xor
pop
arpl
pop
pushf
xor
pushf
sub
bound
adc
cmps
int3
loopne
call
and
in
add
rcr
icebp
push
dec
add
ds
(bad)
or
add
pop
adc
adc
call
fs
sbb
mov
les
jns
xor
cmp
mov
mov
adc
(bad)
inc
pop
and
xor
loop
or
and
xor
pop
push
scas
mov
pop
mov
sbb
leave
aad
ins
xchg
jns
dec
inc
pushf
inc
call
xor
pop
mov
xchg
jnp
cmp
aad
fiadd
call
prefetchw
or
inc
pop
pop
mov
dec
mov
xor
sub
outs
dec
test
pop
out
mov
imul
sbb
jl
enter
adc
jno
out
test
mov
jne
xlat
fisubr
cmp
cmp
test
xor
loop
mov
retf
popf
out
jbe
pop
jmp
push
sub
mov
imul
push
test
dec
loope
xchg
ins
(bad)
xlat
dec
mov
adc
je
int
mov
jg
jl
jg
test
out
jg
cmp
cmp
mov
fisttp
jg
shl
mov
jbe
xchg
sahf
pop
push
push
gs
ret
pop
or
and
and
xor
loop
pop
in
sbb
xor
ficom
sbb
mov
ret
inc
mov
sbb
xor
xor
rol
pop
retf
sub
out
xchg
ss
jl
pushf
rol
sub
fwait
nop
imul
test
mov
sbb
sub
add
cmp
push
shl
(bad)
popa
fwait
in
lods
mov
adc
sub
std
pop
pop
jle
(bad)
test
pop
xor
ins
(bad)
cmp
xor
daa
push
mov
mov
xor
mov
outs
fcom
out
cmps
ror
dec
and
dec
xor
and
aam
xchg
push
sbb
adc
jbe
mov
or
and
repz
pop
sbb
in
cmp
jo
(bad)
cmp
inc
sbb
jl
mov
dec
ficom
call
sbb
ror
rol
fcomp
pop
in
mov
pop
push
mov
mov
stc
pusha
cmps
jl
push
jp
les
cmp
clc
in
inc
push
xchg
pop
dec
pushf
and
fldenv
push
pop
fwait
dec
sub
jno
add
test
add
loop
mov
cwde
mov
call
lock
jl
xor
mov
xchg
jmp
gs
pop
sbb
call
popa
push
dec
sbb
call
sub
xchg
fcomp
xchg
xchg
push
je
add
mov
jb
lds
add
sub
dec
mov
sbb
pop
sub
scas
aad
sar
xchg
ret
ins
mov
sub
push
or
je
jo
dec
data16
push
cmp
in
fist
push
(bad)
xchg
dec
jge
jp
add
lds
pop
sbb
sahf
pop
push
mov
(bad)
mov
sub
rcr
lods
inc
mov
xor
xchg
lods
call
xchg
cmc
and
std
adc
and
jne
pop
iret
fwait
jmp
call
cmp
xor
js
pop
xchg
clc
test
aam
add
xor
data16
aad
sbb
rcl
inc
sti
rcl
dec
cs
out
push
iret
dec
ror
push
int
aas
push
push
xchg
pop
shl
pop
add
mov
pushf
or
mul
aam
lea
movs
jmp
call
iret
ins
lahf
dec
mov
mov
or
lods
int
lahf
xchg
inc
mov
iret
add
mov
outs
aas
loope
lea
add
xchg
jmp
(bad)
mov
je
in
sti
addr16
sti
push
cwde
out
retf
fisubr
xor
call
cmp
gs
arpl
mov
arpl
dec
push
aaa
xor
xchg
or
or
je
fwait
in
cli
mov
adc
(bad)
imul
scas
jo
movs
mov
cmp
pop
repz
sub
aad
sbb
mov
and
push
pop
or
cmp
inc
out
jb
inc
int
push
jmp
inc
out
or
cmp
in
shl
mov
sub
ja
idiv
sbb
jbe
pop
pop
cmp
push
cdq
push
inc
jb
arpl
sbb
cmp
mov
push
cdq
mov
out
les
xor
xor
imul
or
(bad)
fsubrp
pop
push
hlt
mov
fidivr
aas
mov
loope
mov
mov
das
xchg
pop
icebp
imul
adc
mov
out
cmp
mov
hlt
jno
movs
xor
ret
(bad)
jmp
outs
sbb
jg
xchg
mov
mov
cli
xor
mov
fld
push
or
mov
rcr
dec
cmp
data16
jp
xchg
sub
push
test
aad
sub
sbb
jle
jne
pop
gs
xor
jecxz
jb
cwde
shl
sti
adc
leave
jbe
movs
loope
aad
inc
test
push
aaa
add
push
ss
cmp
jle
in
mov
ds
out
or
fdivr
push
push
movups
jnp
jp
cli
stos
int3
pop
jl
leave
mov
mov
mov
dec
dec
mov
mov
mov
pop
ret
stos
not
out
add
sti
call
mov
push
cmc
mov
(bad)
mov
fwait
pop
fcom
mov
cdq
jmp
aam
push
(bad)
mov
jle
aaa
jmp
sbb
icebp
enter
xchg
repz
add
ss
bound
cmp
stos
adc
stos
jae
xchg
mov
aas
push
jp
inc
dec
mov
jg
or
lea
cmp
sar
sbb
pop
imul
ror
mov
enter
cmp
je
aas
cmp
cdq
fild
add
int
mov
aas
loopne
fisub
lods
and
push
jne
add
jbe
cdq
mov
xchg
jmp
rcr
mov
ret
or
mov
or
fsubp
cs
sub
pop
pop
nop
add
ds
in
xchg
adc
jae
push
(bad)
in
dec
test
test
jle
leave
pop
int
icebp
dec
pop
mov
lds
leave
mov
aad
push
dec
push
icebp
int
shl
imul
adc
add
push
std
enter
aad
nop
mov
hlt
sub
dec
fstp
fsubr
or
push
sbb
cld
lods
pop
jge
adc
inc
jmp
xor
mov
(bad)
jno
js
jmp
popa
push
cmp
mov
test
sbb
and
test
call
sub
out
mov
inc
push
mov
or
cs
div
daa
xchg
ds
hlt
sub
xchg
add
arpl
add
push
rol
rol
inc
mov
cmp
cwde
aaa
and
fiadd
jns
inc
das
and
shl
sbb
movs
out
and
mov
test
pop
push
jb
int3
aas
and
push
shl
sbb
adc
das
cmps
inc
pop
xchg
cli
nop
xchg
push
adc
cmps
aam
inc
scas
js
cmp
cdq
ds
loope
xorps
ror
popa
(bad)
imul
retf
and
dec
inc
lods
jl
repz
sbb
and
adc
adc
jb
cmps
call
push
xchg
pop
inc
lods
jae
scas
movs
add
xchg
jmp
inc
stos
sbb
xor
push
fwait
dec
ss
sbb
ds
pop
jle
cmp
xlat
out
test
add
cld
pop
fld
pop
mov
mov
(bad)
xor
nop
jno
add
push
dec
jns
call
mov
push
repnz
stos
mov
cmp
pop
xor
les
add
shl
jecxz
jl
hlt
fnstcw
dec
es
sbb
xchg
add
in
jno
adc
dec
adc
pusha
and
fnstsw
fidiv
loopne
icebp
jbe
mov
gs
xor
xchg
test
xchg
sahf
test
xor
fcmovne
test
in
lea
cwde
cmps
test
cld
rol
arpl
add
and
and
jge
xor
adc
jae
mov
sub
lods
sbb
and
hlt
mov
or
scas
cld
mov
dec
leave
clc
sahf
cdq
js
sub
mov
jnp
pushf
pop
test
xchg
cmp
pop
or
cmp
mov
jmp
movs
add
pop
in
ror
adc
sahf
add
test
jo
loop
in
je
(bad)
das
daa
dec
jae
mov
(bad)
lahf
or
adc
arpl
fld
arpl
mov
rcr
out
in
xchg
push
inc
leave
(bad)
ficom
lods
imul
inc
(bad)
pop
xchg
mov
sbb
xor
gs
xchg
and
arpl
imul
jg
mov
xchg
call
stos
cmc
pop
out
sbb
outs
fadd
test
dec
push
xchg
fstp
push
aaa
and
push
push
stc
cmp
scas
pop
sub
inc
add
dec
bswap
mov
jae
xor
cmp
cld
lds
pop
add
ins
dec
lea
push
sbb
push
dec
loope
jbe
sbb
mov
in
dec
xchg
inc
push
or
jecxz
cmp
inc
mov
jle
test
out
cmps
adc
ds
jnp
cs
icebp
sahf
mov
push
fisttp
stc
sub
cmp
rcl
mov
mov
or
(bad)
fbstp
push
and
(bad)
int3
xor
cmp
mov
inc
fcmovnbe
mov
retf
sbb
mov
cmc
ins
bound
or
icebp
pop
stc
imul
or
xor
pop
cmps
inc
fild
std
mov
(bad)
pop
out
mov
ins
pop
fwait
repz
stc
or
hlt
mov
add
add
sbb
inc
aam
js
push
sbb
xor
repz
push
cmps
std
lahf
sbb
imul
sbb
add
mov
jecxz
movs
sti
sbb
je
in
inc
rol
popf
js
pop
test
cmp
(bad)
xchg
add
imul
pop
cli
mov
or
mov
and
icebp
or
mov
sbb
mov
pushf
jle
mov
sub
or
adc
jns
add
aam
and
outs
xor
jmp
mov
xlat
data16
xchg
div
in
loope
push
scas
int3
push
jge
cmp
retf
cs
and
sti
inc
test
inc
jg
bound
(bad)
mov
enter
daa
jno
adc
lods
pushf
sub
scas
popa
fsubrp
inc
fwait
imul
cmps
icebp
xor
pop
mov
pop
je
xchg
mov
sbb
test
test
fadd
push
cld
sub
out
ins
mov
pop
mov
sub
jne
xor
mov
mov
push
(bad)
ss
cdq
pop
cwde
push
lock
mov
jecxz
lock
in
sub
sbb
mov
retf
sub
hlt
push
jb
daa
jne
or
daa
xor
addr16
mov
mov
xchg
ins
and
mov
xor
aaa
jle
fwait
push
cdq
or
push
xchg
test
movs
and
es
ins
push
mov
shl
sub
test
cmc
pop
rcl
xchg
popa
(bad)
fistp
jno
out
jg
dec
or
les
inc
stos
push
es
sbb
popa
adc
aaa
push
xor
call
push
cmp
ins
scas
outs
sub
mov
fcom
inc
movs
test
scas
fist
ret
inc
sbb
jae
addr16
enter
pushf
div
mov
lods
mov
sar
xchg
mov
and
and
and
and
imul
mov
mov
jno
data16
xor
es
jmp
mov
add
xchg
in
ins
ja
push
aad
inc
lods
cmp
fs
jo
sub
add
stos
xor
adc
stos
inc
xor
pop
pop
cmp
add
add
cwde
xlat
ins
int3
sub
mov
or
or
shl
nop
inc
pop
and
js
fnstenv
pusha
mov
cdq
addr16
jb
add
idiv
fcomip
push
(bad)
cmps
push
or
inc
push
mov
loopne
add
cmp
cmc
sub
cmps
ins
pop
stc
jge
pusha
push
fild
or
add
push
clc
cmps
push
or
(bad)
push
xchg
fisttp
pusha
je
aam
sub
gs
ret
pop
jmp
pop
addr16
imul
mov
jns
ret
ins
and
mov
imul
push
xchg
jmp
mov
stos
js
push
mov
mov
push
rol
test
adc
add
inc
cwde
outs
cmp
ins
or
sub
inc
psubusw
and
and
mov
das
mov
sub
arpl
mov
push
adc
call
sbb
bound
jae
ins
cmps
adc
test
mov
xchg
adc
cli
or
cmp
fdiv
fsub
cmp
fsubr
cmp
mov
(bad)
cli
mov
push
test
mov
pop
fmulp
xchg
imul
ret
cmp
mov
or
push
and
add
in
or
dec
test
scas
cmps
not
mov
xchg
imul
mov
and
aas
movs
lods
rcl
repnz
fcomp
fisubr
ret
mov
fcom
out
mov
sub
bound
cmps
fcmovbe
xchg
and
sti
sbb
mov
nop
pusha
xor
jecxz
push
imul
mov
mov
loope
cmp
movs
lds
in
pusha
push
dec
dec
add
ds
mov
fnsave
and
jne
pop
push
repnz
repnz
les
adc
jp
xchg
and
mov
fldenv
test
mov
sub
fnsave
test
or
sti
ret
mov
leave
jns
mov
jb
push
cmp
sbb
mov
mov
add
xor
and
in
xor
stos
xlat
dec
xor
sbb
mov
jle
pop
mov
jle
lahf
xor
call
fnstenv
xchg
in
cmp
inc
fdivrp
ins
not
into
sbb
xchg
and
adc
in
jbe
(bad)
(bad)
mov
add
sub
xor
pop
pushf
cs
aas
icebp
add
and
jp
mov
dec
stc
hlt
xchg
out
ja
nop
inc
push
mov
frstor
loopne
push
in
fs
stos
add
popa
and
adc
mov
and
cmp
sar
push
mov
sti
out
aas
fidivr
cmp
out
loop
and
into
sbb
sub
push
jge
not
mov
xor
outs
repz
adc
dec
ror
xchg
icebp
and
add
push
push
cmp
dec
into
loop
test
mov
mov
xchg
jp
jle
pop
cmp
shl
mov
out
addr16
std
je
outs
arpl
mov
data16
or
call
call
xor
clc
les
int3
sti
aaa
cmps
xlat
inc
popf
xchg
cmp
or
adc
sbb
jp
push
inc
push
arpl
stc
xor
fwait
retf
mov
push
aam
ja
push
xchg
cld
adc
movs
dec
bound
retf
loop
cld
or
pop
jge
sbb
push
lods
clc
jbe
inc
xor
mov
add
sbb
sub
test
inc
mov
push
fst
cmc
sbb
loope
cmc
out
outs
sub
jg
mov
add
adc
xchg
ret
sbb
pop
ror
loope
sub
pop
lods
repz
mov
fild
lea
out
sbb
xlat
xor
lsl
adc
push
scas
stos
pop
xchg
or
imul
call
call
cs
mov
pop
and
sub
cmps
or
out
aas
loope
icebp
imul
lock
les
pop
inc
and
(bad)
push
push
aam
hlt
or
dec
das
or
out
mov
cs
mov
(bad)
in
dec
sub
and
pop
nop
les
inc
fst
mov
inc
or
(bad)
call
push
aas
pushf
mov
ins
std
clc
xchg
dec
inc
and
xor
mov
cld
movs
sar
gs
(bad)
cli
mov
or
cmp
lods
dec
ror
pop
outs
or
dec
mov
sti
push
mov
lods
idiv
dec
pusha
iret
(bad)
xor
or
in
sub
push
push
mov
or
pop
sbb
icebp
loop
push
mov
icebp
sbb
xchg
adc
(bad)
dec
ret
jl
icebp
int3
pop
int
cwde
mov
or
cmp
push
pop
push
frstor
pop
xchg
mov
xor
push
xchg
loop
pop
rcl
jp
cmp
and
repz
xor
xor
call
inc
fisub
mov
push
ins
inc
test
retf
fcos
mov
and
je
hlt
rol
mov
cmp
in
sub
test
xchg
inc
adc
and
sbb
cwde
fwait
out
or
cmp
leave
fcomp
and
test
and
lods
out
cmp
push
test
dec
ror
ins
mov
ja
or
fist
xchg
popa
mov
out
imul
(bad)
mov
retf
mov
push
push
jg
call
movs
inc
rcr
mov
mov
adc
shl
push
dec
xor
add
xchg
sub
movs
dec
xor
stos
aam
cmps
sbb
ss
inc
pop
adc
xchg
imul
ss
pop
push
in
test
icebp
jb
jmp
rcl
std
pushf
cmps
fcmovnu
mov
jo
aaa
and
dec
push
mov
data16
in
das
mov
scas
sub
dec
sbb
loopne
cmps
or
mov
fwait
sbb
sub
jb
dec
les
xchg
test
and
xchg
ja
fadd
or
fldenv
and
fmul
js
cmps
aas
leave
jle
inc
call
sbb
inc
dec
lock
add
in
mov
push
mov
add
jg
and
xchg
enter
stos
mov
pop
mov
in
adc
pop
xor
cmc
outs
fimul
jae
mov
fisub
mov
aas
js
push
ins
mov
jmp
mov
(bad)
retf
shl
xchg
dec
push
scas
cld
or
jne
mov
retf
cmp
adc
lock
je
adc
jp
push
jle
lea
rcl
(bad)
hlt
(bad)
jmp
sbb
clc
mov
ret
or
mov
in
(bad)
sahf
(bad)
pop
jno
int
int
cmp
inc
lods
jne
stos
mov
and
or
jge
(bad)
shl
pop
mov
fs
add
sbb
cmp
cmp
inc
ins
push
sub
out
jnp
jp
mov
gs
cdq
or
mov
out
mov
jge
stos
pop
in
data16
outs
pop
push
mov
ror
in
cld
mov
or
mov
and
pop
push
push
out
cli
cmps
shl
retf
and
xchg
dec
mov
mov
mov
adc
pop
inc
jnp
jmp
sahf
xor
push
out
bnd
das
pop
mov
jns
out
daa
mov
xor
pop
cmp
xor
cmp
adc
popf
(bad)
clc
mov
xor
push
outs
popa
sub
mov
(bad)
lahf
mov
cmc
push
popa
mov
fs
pop
push
inc
mov
mov
repnz
jae
fisub
icebp
iret
pop
movs
mov
(bad)
jb
xor
ins
fbstp
add
push
mov
fldcw
ret
cmp
stos
repz
push
rdmsr
mov
mov
jb
dec
pop
ins
shl
lds
inc
inc
jno
xor
add
push
(bad)
xchg
sbb
outs
jp
retf
test
aam
add
fwait
mov
and
loop
mov
outs
icebp
dec
mov
push
ret
movs
sub
lahf
popf
mov
adc
sahf
ss
sbb
or
jg
inc
push
push
xchg
mov
loopne
ja
dec
xchg
push
pop
nop
ret
jp
les
mov
inc
cli
and
jmp
mov
imul
jl
iret
xchg
dec
clc
int3
cmp
cmp
scas
xor
(bad)
fcomp
mov
aas
push
inc
dec
mov
repnz
jg
jbe
mov
enter
popf
cmp
lods
hlt
push
pop
jg
jno
xchg
sahf
or
gs
mov
outs
and
mov
daa
adc
xchg
jno
rcl
sub
into
mov
imul
xchg
and
arpl
gs
cmp
cmp
ret
mov
mov
rol
aaa
repnz
mov
pop
loope
retf
mov
jae
pop
test
inc
or
jno
push
sar
cmc
sub
cmc
cmps
test
mov
xchg
push
arpl
mov
mov
and
push
arpl
pop
pop
xchg
add
jmp
jno
out
test
shl
push
stc
loope
cmp
sbb
xchg
mov
dec
mov
sub
cdq
mov
fistp
call
push
and
retf
in
es
push
jecxz
test
and
sbb
adc
and
sbb
retf
or
xor
ja
bnd
mov
push
add
jae
daa
fild
xchg
inc
push
enter
pop
mov
cdq
test
test
in
rol
cmp
lods
pop
inc
pop
div
jbe
cmp
ds
push
shr
imul
jns
sub
add
(bad)
orps
sub
in
leave
push
adc
fwait
rcl
jl
in
push
fidiv
lds
pop
pop
bound
inc
arpl
psubsw
mov
js
jmp
(bad)
jo
cmc
shr
sbb
icebp
loopne
inc
sbb
inc
cmc
inc
pop
push
jb
and
mov
add
add
pushf
iret
xchg
mov
aas
mov
mov
mov
pop
dec
int
add
push
xchg
repz
call
mov
push
inc
mov
in
pop
(bad)
cmp
pop
sbb
ja
out
xor
aas
fsub
pop
jne
loopne
arpl
imul
imul
ins
mov
jmp
bound
jecxz
jbe
cmc
out
mov
loop
ins
retf
bound
mov
bound
addr16
push
dec
and
shl
and
xchg
test
inc
into
adc
xor
retf
and
cmc
pop
or
xor
push
call
pop
in
mov
lahf
sbb
jne
movs
jle
cmps
div
pop
das
xorps
cmp
inc
outs
shr
sbb
icebp
mov
ja
mov
sub
pop
cmp
ds
mov
sbb
daa
mov
outs
pop
mov
jecxz
pushf
lahf
scas
test
cmp
add
aaa
(bad)
shl
sti
in
cmps
hlt
jns
test
js
loope
(bad)
imul
and
ror
jmp
dec
test
adc
xchg
mov
xor
hlt
push
push
clc
jae
and
xchg
movs
jmp
push
mov
adc
mov
add
cmp
pop
cdq
inc
mov
daa
imul
jnp
(bad)
movs
jae
and
sub
jecxz
push
(bad)
imul
sar
jno
in
jnp
or
xchg
dec
ror
adc
les
cwde
test
xchg
add
xor
add
sub
mov
iret
stos
mov
fcom
xchg
mov
pushf
mov
popf
mov
mov
mov
jg
push
mov
cmps
cmp
loope
fldenv
xlat
or
and
add
rcr
daa
mov
mov
sar
mov
outs
push
cwde
pop
(bad)
repnz
ja
sbb
add
lahf
enter
xchg
in
jne
loop
mov
int3
lods
jne
mov
push
lods
hlt
fild
cld
sbb
icebp
cwde
pop
xor
pop
call
dec
je
mov
push
(bad)
call
daa
daa
sar
or
bound
sbb
enter
sbb
or
mov
inc
fmul
sbb
cmp
jb
sahf
xchg
sub
push
mov
lods
xchg
dec
in
mov
push
and
sar
mov
in
pop
mov
out
dec
cdq
repz
cs
mov
xor
test
xchg
dec
pop
sbb
outs
lahf
mov
sbb
push
shl
xor
xchg
leave
ja
imul
inc
sti
mov
mov
data16
outs
adc
add
and
jmp
nop
mov
test
clc
mov
and
js
xor
bound
dec
retf
fs
dec
inc
dec
cdq
jmp
hlt
xchg
pop
adc
test
inc
(bad)
add
fisubr
sub
push
jecxz
xor
jp
pop
rol
mov
enter
cdq
push
jg
ret
push
mov
sub
sbb
jnp
xchg
in
in
bound
clc
xor
xor
fisub
outs
and
in
jge
mov
std
imul
leave
dec
jecxz
ds
dec
push
je
leave
cmps
mov
cmp
pop
jle
cmp
and
sbb
sub
pop
leave
sbb
mov
es
cld
and
sbb
jmp
add
rol
mov
inc
jmp
(bad)
mov
and
push
mov
ficomp
outs
jecxz
repnz
inc
xchg
test
inc
cmp
push
dec
es
push
ret
lods
(bad)
jns
or
fimul
scas
repnz
pop
mov
stc
or
add
fdiv
scas
ret
sbb
rol
mov
mov
(bad)
pop
inc
loop
js
imul
mov
ss
int3
xor
(bad)
lock
and
shl
lock
jns
jmp
sub
xor
stos
jnp
mov
mul
dec
aam
aaa
cmp
inc
lods
(bad)
lahf
cmp
or
and
adc
sub
mov
xor
pop
iret
pop
fs
sbb
and
ja
push
fsub
add
shl
cli
push
add
cmp
ror
scas
hlt
jge
xchg
mov
cli
rcl
pop
repnz
jecxz
mov
and
sbb
or
outs
test
jne
popf
popf
(bad)
rol
inc
mov
pop
push
pop
mov
cmp
xlat
shl
xor
xchg
mov
xchg
xchg
push
pop
cmp
aad
dec
pop
or
cs
movs
cld
lock
mov
inc
ins
jp
retf
loopne
jg
repnz
pop
jns
outs
lea
mov
cwde
lods
mov
adc
int
js
test
ins
xor
cmp
inc
xor
adc
rol
rcr
iret
dec
mov
cmp
sub
push
or
outs
adc
outs
adc
mov
les
sti
jp
sub
push
enter
dec
fwait
call
dec
or
xor
ficomp
pop
mov
fld
mov
cli
or
xor
ins
in
dec
cmp
sub
hlt
hlt
cmovns
fsubr
pop
pusha
add
arpl
sub
rcr
mov
xchg
je
mov
cli
pop
xchg
fisub
xor
inc
ins
(bad)
jmp
adc
push
sub
fisub
xchg
cmps
outs
adc
adc
mov
in
sti
out
pop
and
cmp
daa
mov
into
mov
jo
ret
fnstcw
js
xor
fsub
shr
mov
(bad)
push
inc
ja
sbb
fnstcw
out
mov
mov
jo
pop
or
sbb
(bad)
push
mov
cwde
mov
imul
and
pop
sbb
faddp
xchg
xchg
mov
popf
repz
inc
not
popf
jecxz
pop
int3
or
sbb
nop
ret
clc
out
lahf
aad
ss
pop
test
shr
jg
or
cdq
xor
stos
ror
sbb
stos
jl
adc
lods
mov
hlt
or
inc
inc
and
cli
fdivr
fistp
ins
call
popf
das
lea
sbb
(bad)
sbb
nop
jmp
mov
sub
in
enter
mov
loop
mov
ficomp
lea
cmp
inc
icebp
loope
or
sub
aad
shl
jns
je
rol
and
or
ret
test
and
add
cmp
ret
dec
xchg
retf
xchg
mov
popa
lds
inc
lods
push
daa
inc
aad
adc
cmp
or
mov
sub
or
aas
pop
pop
push
dec
sbb
fsub
call
or
sub
mov
aad
out
push
xchg
lahf
movs
mov
pop
dec
popf
dec
push
and
fidiv
xor
xchg
lods
shr
fwait
scas
movs
sub
sbb
cmc
mov
xchg
sbb
div
mov
popa
clc
dec
les
pop
jmp
dec
dec
mov
or
cmp
or
jmp
fsub
add
sub
movs
adc
ror
and
test
jmp
sti
push
(bad)
fidiv
aaa
sbb
adc
adc
inc
dec
sub
out
ins
sahf
(bad)
sbb
jb
shl
mov
push
inc
(bad)
jns
or
push
shr
or
sub
and
mov
sub
sbb
mov
test
or
mov
gs
cmp
add
inc
addr16
sahf
fdiv
(bad)
fadd
fbld
sahf
jle
stos
jge
(bad)
in
adc
ins
jne
fstp
nop
mov
pop
xor
push
and
mov
or
jmp
mov
iret
add
xchg
xor
mov
aad
ror
add
test
cmp
out
mov
mov
pusha
and
inc
adc
mov
mov
dec
pop
aam
in
and
xor
push
int3
icebp
loop
imul
inc
lods
push
add
sbb
cli
imul
in
mov
pushf
das
lea
lds
fwait
out
mov
push
stc
pop
fcomp
push
inc
pop
imul
jno
loope
(bad)
stos
(bad)
mov
ins
pop
enter
dec
inc
jo
add
sub
push
jo
lds
sub
psrld
xor
lock
sub
fcmovne
frstor
(bad)
pop
xchg
fld
mov
fdivrp
shl
(bad)
rol
outs
in
shl
push
adc
rol
imul
sbb
xchg
call
outs
imul
ret
fstp
mov
add
jb
and
or
leave
sbb
icebp
js
jns
jecxz
inc
inc
add
das
pop
pushf
mov
mov
fcmovnbe
cs
jecxz
cmps
adc
xor
pop
adc
das
xchg
leave
mov
cdq
or
dec
jne
and
dec
bound
mov
fnstsw
sahf
sub
ja
inc
stos
ret
and
mov
(bad)
movs
mov
inc
inc
xor
aas
push
dec
les
jb
and
fwait
popa
dec
int3
xor
(bad)
jmp
call
retf
sub
hlt
sti
jl
jo
cli
(bad)
invd
xchg
aam
fwait
popa
ss
push
out
add
sub
fs
pusha
fnstsw
popa
ror
movs
or
jle
mov
sahf
clc
pusha
stc
rcl
dec
aad
jl
xor
mov
sbb
add
cmp
int
stc
mov
pop
mov
push
push
add
or
or
(bad)
test
mov
int
data16
adc
pop
sub
in
arpl
sub
jne
sbb
mov
push
mov
pop
or
or
mov
mov
ror
dec
or
fild
pop
pop
sbb
rol
iret
fdivr
ds
mov
in
jp
ja
or
nop
retf
cmps
nop
pushf
fsubr
push
push
pop
mov
ret
rcr
push
mov
mov
ret
sub
cmp
push
and
daa
pusha
xchg
jmp
mov
std
lahf
jmp
fsubr
shl
jne
push
lahf
lea
lahf
cli
mov
cmps
inc
(bad)
or
sahf
gs
jne
mov
mov
xor
lods
in
jle
jbe
mov
fcom
mov
fmul
repnz
arpl
pop
nop
jp
adc
aam
lahf
ret
fwait
cdq
xchg
out
cmp
repz
inc
mov
lea
mov
dec
xchg
inc
arpl
cmc
popa
jp
push
mov
stos
or
jnp
jp
icebp
sahf
add
jnp
cmp
lahf
stc
xchg
repz
push
gs
rcl
popa
repnz
or
xchg
xor
adc
jb
pop
pop
lahf
fsub
inc
add
and
mov
int3
bound
scas
jg
sub
loope
pop
(bad)
jp
sub
lods
xor
scas
xor
lahf
xor
mov
pop
mov
ja
cmovg
jmp
mov
xchg
jle
ins
sbb
retf
leave
xor
inc
sbb
add
cwde
push
in
ret
mov
fmul
cs
movs
mov
push
cmp
adc
test
fucomip
cdq
mov
ins
mov
imul
leave
(bad)
push
(bad)
add
jmp
ficomp
lods
stos
push
daa
inc
mov
imul
inc
fs
daa
fwait
cmp
xchg
imul
ret
out
adc
es
hlt
and
mov
call
and
pop
lods
imul
repz
pop
(bad)
stos
inc
push
push
and
dec
mov
push
push
nop
cmp
loope
inc
xor
jmp
mov
std
lods
push
mov
int3
pop
data16
stos
mov
jno
shl
imul
rcl
mov
add
and
pop
inc
adc
add
sub
jg
mov
adc
(bad)
into
mov
mov
clc
or
ret
fs
rcl
and
scas
(bad)
mov
popa
mov
inc
mov
adc
pop
jle
cmp
out
add
stc
div
inc
sti
mov
loopne
cmp
ins
(bad)
xchg
into
rcl
fistp
cmc
adc
add
outs
mov
jmp
adc
lahf
sbb
je
mov
add
add
sbb
dec
cmp
fnstsw
addr16
pushf
aam
pop
ror
in
scas
repnz
push
arpl
xchg
mov
dec
add
idiv
int
mov
pop
jno
dec
sub
jne
stc
sbb
mov
loop
push
lds
jp
cmp
bound
pop
mov
fdiv
mov
loop
mov
mov
push
xchg
lock
(bad)
ja
xor
sub
and
nop
outs
add
std
fwait
sub
inc
(bad)
aaa
inc
mov
loop
das
dec
fld
jg
int
cld
das
(bad)
jmp
mov
jb
jo
rol
sub
cmp
pop
fldcw
push
xchg
daa
push
stos
jno
mov
inc
clc
jmp
call
inc
fst
mov
test
mov
mov
fnstcw
sbb
mov
test
jecxz
nop
jge
jb
jecxz
hlt
jg
push
mov
mov
sar
jp
and
inc
inc
jns
popa
jp
(bad)
dec
mov
loope
into
add
mov
mov
in
int
xchg
push
mov
lock
xor
out
lock
inc
adc
add
shl
mov
test
push
xchg
inc
in
xchg
xchg
loopne
jp
fadd
or
or
mov
sar
in
cmps
out
push
and
mov
repz
fisttp
in
cmp
repz
mov
int
ja
pop
xchg
popa
jne
test
aam
cmp
jle
jno
and
les
xor
add
in
bound
push
shl
xor
aaa
push
xor
sub
sbb
ret
lods
call
loope
int
les
ret
push
mov
pop
mov
jno
adc
and
sub
jne
inc
(bad)
or
jo
pushf
pop
mov
cmp
push
xchg
cli
inc
pop
xor
adc
mov
aam
mov
jp
sub
sub
jg
adc
jl
inc
in
xchg
add
rcr
(bad)
lods
and
mov
icebp
enter
das
xchg
jns
scas
pop
es
lods
pusha
jmp
stos
sbb
adc
int
stos
add
pop
push
fiadd
repnz
and
xchg
and
or
cmp
cli
mov
aaa
inc
addr16
sub
fild
in
sub
movs
aaa
rcr
mov
cmp
push
dec
lods
and
and
ss
mov
add
mov
or
sbb
test
lea
push
scas
lock
cmps
sub
sbb
in
sbb
fld
mov
jmp
icebp
xchg
cld
call
and
ds
sub
out
movs
add
int
ins
pop
movs
mov
leave
xchg
fmul
in
xor
push
stos
test
pop
repz
rol
adc
pop
in
retf
jo
fs
test
sbb
inc
and
cld
inc
jnp
jns
mov
aam
rol
loopne
repnz
pop
jge
xor
sbb
aaa
sbb
and
loop
imul
(bad)
mul
out
cmp
or
inc
mov
mov
int
and
push
call
cmp
cmp
test
cmp
xor
fnstsw
sbb
stos
ja
cs
xor
leave
xor
rcl
test
dec
loope
leave
sahf
sbb
pop
sub
push
sbb
and
jg
lock
xor
es
push
inc
dec
loop
hlt
cmp
fst
data16
stos
pushw
test
jle
sub
addr16
popa
test
clc
inc
xor
dec
push
pop
ret
and
jne
js
inc
cmp
popa
sbb
dec
push
lock
push
adc
push
jmp
retf
dec
into
inc
sbb
mov
inc
pop
fbld
jmp
push
test
ins
(bad)
pop
lahf
adc
es
xor
ss
aad
(bad)
jle
and
xchg
inc
cwde
test
pusha
cwde
cmovo
sahf
xchg
sub
and
sti
sbb
push
xor
push
adc
pop
loop
popf
sub
ja
mov
cmc
aas
into
das
retf
loope
mov
mov
iret
cmps
xlat
adc
int
fild
mov
retf
dec
mov
pop
dec
loope
imul
push
das
lds
(bad)
lahf
ss
jg
aam
shl
push
jne
fwait
mov
and
out
adc
ss
ror
jl
bound
sub
dec
pop
add
repnz
or
fimul
loopne
movs
lods
dec
(bad)
lock
sti
push
jmp
sbb
jbe
daa
pop
mov
jecxz
mul
loope
cmp
mov
push
mov
imul
shl
xchg
xchg
mov
or
mov
add
add
add
push
mov
sub
fidiv
add
imul
dec
xchg
ficomp
and
pop
push
push
add
fimul
and
jmp
xor
and
sbb
stos
jle
loopne
lahf
lock
jg
(bad)
in
cld
mov
cdq
dec
jecxz
mov
ins
jmp
add
imul
(bad)
int3
jmp
push
add
sahf
push
dec
scas
fst
jo
mov
jns
xchg
push
cmps
repz
nop
dec
pop
pop
mov
pop
sahf
push
mov
xlat
movs
mov
pop
int
xor
push
or
and
push
call
jbe
inc
dec
mov
mov
ret
sbb
mov
xchg
xchg
lods
or
jno
cwde
cmp
mov
fist
mov
fst
cmp
ins
into
cmp
into
(bad)
sbb
push
cli
test
cmps
jg
ins
scas
gs
add
or
stos
xchg
mov
inc
mov
inc
sub
or
push
xchg
in
jl
jmp
xchg
stos
mov
cmp
repz
xchg
and
dec
add
cmc
cli
daa
xchg
popa
ror
rcl
push
test
xchg
xor
mov
xlat
out
and
and
sub
jmp
fisttp
inc
rcr
cmp
inc
lock
jb
pop
movs
ret
jo
mov
cs
fdiv
jne
mov
(bad)
xchg
sub
repz
push
xor
test
pop
test
(bad)
xchg
sub
adc
int
int3
dec
out
mov
cmp
dec
aas
inc
add
cmp
mov
dec
adc
pusha
mov
(bad)
mov
jo
push
dec
cmp
mov
inc
jbe
pop
mov
fwait
cmc
xchg
(bad)
jbe
xor
jo
xchg
clc
aad
outs
retf
or
pop
jge
cld
ins
add
jmp
sbb
mov
push
cmp
test
sbb
lea
xchg
adc
shl
(bad)
ins
mov
out
pusha
fcomi
lods
das
cmp
xor
and
or
mov
jne
xor
cs
jne
mov
bound
inc
adc
sub
je
pop
push
mov
les
popf
mov
loope
(bad)
mov
sbb
inc
pop
sahf
cmps
mov
inc
sub
out
loop
sar
mov
pop
fwait
imul
cli
lods
imul
(bad)
sub
mov
sahf
scas
enter
pop
adc
inc
daa
ror
call
or
xchg
inc
sbb
pop
sub
mov
jns
cmp
jnp
int
sar
cmp
mov
dec
mov
rcl
sub
adc
and
xor
or
outs
ss
loopne
dec
arpl
ret
call
jle
imul
mov
sub
cld
xor
cwde
les
in
lahf
cld
xor
ds
sub
push
(bad)
hlt
mov
(bad)
in
inc
rcr
ret
adc
jbe
add
or
inc
sub
xchg
jmp
fcomip
or
enter
fmul
adc
jmp
popf
push
shr
jo
fisttp
push
dec
adc
push
stc
mov
fistp
clc
imul
sbb
test
xchg
or
scas
inc
cmp
inc
scas
pop
loope
jne
push
push
inc
fild
dec
repnz
in
pop
mov
shr
data16
daa
lea
add
mov
loop
jmp
adc
ins
dec
add
cld
movs
ret
and
sub
nop
neg
mov
lock
push
inc
call
mov
fild
mov
mov
xlat
pop
xchg
push
xchg
scas
push
mov
clc
ins
xor
cmp
and
fcomp
dec
outs
imul
int
les
mov
dec
in
cmps
cmp
outs
aad
and
mov
add
dec
inc
jo
clc
sbb
fiadd
bound
movs
dec
pop
popa
scas
inc
jle
out
clc
scas
jecxz
adc
xor
(bad)
jp
(bad)
in
(bad)
push
pusha
stc
cmps
add
pop
jo
inc
sbb
int
outs
arpl
mov
pop
add
stos
mov
stos
cmc
push
push
jns
fldcw
out
call
mov
mov
test
push
int3
mov
aaa
mov
int3
mov
inc
lds
call
fld
push
and
hlt
(bad)
push
cmc
cmc
and
out
xchg
add
loop
movs
pop
xchg
scas
pop
add
sub
(bad)
test
jnp
sbb
adc
xchg
push
xchg
mov
out
mov
gs
je
mov
ret
dec
cmp
adc
xor
fwait
pop
dec
lahf
es
add
pop
cmps
sub
inc
jne
in
pop
sub
shl
xchg
es
pop
lahf
ins
loope
lods
dec
int
in
push
inc
fstp
fild
imul
mov
(bad)
cli
stos
jo
push
jg
xchg
push
cs
add
clc
xchg
ret
push
leave
out
jne
ins
push
imul
sub
sbb
cdq
stos
in
cmps
data16
aam
add
cld
ja
dec
sbb
cmp
stos
cmp
cmp
jmp
in
dec
pop
add
ror
aaa
dec
sub
or
sbb
jno
sbb
pop
or
outs
call
sbb
in
jle
mov
fucomi
stc
push
repnz
pop
or
ret
jns
add
imul
xchg
repz
out
fld
cli
cmp
test
adc
xor
add
lahf
cmp
adc
mov
cmp
je
mov
sub
mov
sub
(bad)
mov
add
mov
aaa
push
mov
jmp
sub
mov
into
add
sub
cmps
aam
test
xor
out
scas
imul
dec
(bad)
cli
inc
frstor
push
mov
ret
jl
cmc
cmp
sbb
mov
mov
stos
push
(bad)
jo
adc
imul
mov
or
pop
mov
jb
inc
lea
cmp
pushf
inc
dec
cwde
sub
push
jge
push
ret
cmp
mov
jmp
cwde
cmps
jmp
add
jmp
xor
pop
xchg
sbb
and
outs
dec
ror
js
(bad)
jmp
xchg
adc
add
mov
adc
and
(bad)
jmp
push
inc
push
add
mov
cmps
into
fcom
retf
dec
lock
dec
mov
xor
mov
add
cmp
stos
scas
pop
mov
mov
in
mov
lea
into
mov
sar
sbb
rol
pop
sbb
mov
mov
pop
sub
cmc
xlat
rcl
cmp
(bad)
adc
jmp
xchg
or
mov
mov
or
retf
lock
dec
pop
movs
test
push
jne
inc
xchg
stc
popa
lea
(bad)
mov
push
pushf
sbb
scas
sbb
jmp
jge
(bad)
push
mov
shl
aas
inc
sahf
cmovns
leave
and
sub
clc
sbb
xor
mov
shl
pop
mov
dec
pushf
add
and
gs
and
mov
(bad)
out
test
jns
dec
xchg
dec
mov
push
pop
adc
mov
sub
cmp
out
retf
and
pop
pop
inc
out
push
mov
outs
inc
inc
fwait
mov
and
stos
pusha
iret
hlt
cmp
xlat
ins
stos
dec
mov
xor
jbe
sbb
lods
sub
dec
imul
dec
sahf
shr
push
push
push
pushf
ins
cmp
retf
das
ror
xchg
icebp
fst
dec
jnp
sub
scas
inc
xchg
cld
int3
repnz
jne
or
fnstcw
xor
je
pop
es
cmps
mov
push
call
inc
add
mov
inc
sbb
dec
xchg
jmp
imul
dec
ficomp
sub
mov
cmp
xchg
pop
fadd
sbb
jno
les
ins
pmulhuw
lods
push
hlt
cmp
xchg
mov
(bad)
jb
lods
jecxz
xchg
(bad)
jmp
scas
or
add
dec
in
cmp
not
enter
jmp
pop
icebp
sub
fisubr
mov
cli
pop
push
(bad)
scas
(bad)
popa
and
sahf
scas
cmp
iret
adc
out
jg
inc
xor
lds
add
push
sub
push
div
stc
repnz
push
xchg
add
push
out
loopne
out
or
call
xor
popf
mov
dec
pop
or
pop
scas
std
scas
pop
mov
test
rcl
dec
and
in
imul
xor
mov
ja
dec
or
adc
xchg
out
sti
mov
and
repz
push
sbb
inc
hlt
ins
jmp
push
jecxz
sbb
stos
(bad)
fnsave
repz
ins
mov
lock
jb
ret
push
mov
xlat
scas
pop
loop
lods
mov
outs
popa
add
je
add
pop
xlat
stos
inc
mov
out
xor
pop
jne
cmc
jo
fild
mov
cmps
iret
test
inc
jmp
xchg
xor
push
jbe
(bad)
retf
in
lock
xchg
push
gs
mov
retf
enter
cmp
in
jno
call
jmp
adc
inc
ins
sbb
mov
(bad)
pop
pop
mov
iret
adc
mov
loop
dec
add
push
rol
or
mov
fcomp
jg
and
fcmovnu
mov
dec
ret
push
push
cmps
add
scas
call
or
ja
add
bound
aam
in
pop
dec
xchg
icebp
jbe
jno
retf
in
inc
push
in
xor
inc
test
daa
int3
idiv
pusha
inc
fsub
test
push
pop
pop
add
xor
jmp
xor
mov
jb
fidivr
ss
mov
mov
fs
dec
aaa
jg
push
loop
outs
xchg
jnp
inc
sbb
dec
outs
loopne
push
cmp
push
test
(bad)
cmp
or
xchg
ins
leave
jmp
cmp
sbb
scas
xchg
fwait
pop
imul
call
in
mov
(bad)
int
out
fadd
push
jne
loopne
aaa
cli
sub
sbb
sub
dec
in
mov
mov
jg
call
loopne
lods
sbb
mov
push
sub
xchg
hlt
jne
mov
mov
mov
lods
loop
or
sar
sub
xchg
lods
call
mov
push
xchg
push
dec
sub
stos
mov
pop
mov
xchg
add
es
mov
popf
cmp
push
inc
cli
inc
enter
test
fwait
(bad)
stos
push
popa
mov
sahf
ss
jmp
fmul
xchg
test
lahf
dec
mov
push
call
sbb
ret
inc
or
pop
add
and
mov
cli
mov
stos
popa
fdiv
xor
mov
outs
int3
out
pushf
popa
cmp
cmp
(bad)
lock
add
cmp
xor
ret
repz
pushf
push
in
imul
or
mov
dec
mov
dec
ss
lahf
mov
push
loope
mov
imul
push
sti
in
sub
je
fs
int
or
inc
mov
fdiv
mov
push
sub
jg
mov
fiadd
cmp
ins
pop
dec
cmps
lock
nop
fisub
ja
xor
push
inc
es
adc
mov
in
addr16
sub
sub
push
les
jecxz
adc
ret
xchg
sti
sub
int
push
xchg
aaa
pop
jns
dec
cdq
dec
loop
out
inc
dec
inc
pusha
(bad)
mov
imul
jo
shl
in
mov
data16
test
test
pop
imul
dec
mov
imul
xchg
cmp
push
sub
popa
fisub
sahf
rol
test
cdq
aad
fnstcw
add
jge
xor
and
leave
pusha
mov
pushf
mov
inc
ins
mov
or
test
pop
retf
sub
aad
jl
push
push
jae
cmp
pusha
outs
cmp
xlat
cdq
(bad)
leave
jae
js
inc
test
aas
mov
test
mov
sub
lods
mov
mov
push
pop
xchg
cmp
and
push
call
jno
jecxz
jns
jl
shl
daa
adc
dec
xchg
popa
mov
jmp
dec
mov
add
(bad)
lods
sub
xchg
xor
cld
jno
gs
xchg
dec
inc
mov
sbb
cmp
iret
push
mov
xor
pop
ret
dec
mov
aad
lahf
ret
jmp
test
fisub
sub
aam
adc
out
mov
or
pop
mov
rol
sti
jno
sar
dec
test
jb
pop
loopne
add
sbb
sbb
popf
mov
fs
jmp
add
rol
xor
lods
mov
aaa
test
out
clc
cmc
sar
inc
out
addr16
adc
push
cmp
dec
lahf
pushf
frstor
ja
mov
nop
test
add
and
push
mov
inc
xor
or
cli
ror
fisubr
fs
movs
addr16
popa
mov
lods
mov
call
xchg
pop
inc
mov
and
or
gs
cmp
(bad)
call
cmp
leave
push
(bad)
cld
ins
shl
pop
inc
repnz
xchg
and
stos
xchg
ja
mov
in
cli
retf
pop
imul
ds
mov
pop
push
xchg
add
sar
push
sbb
push
(bad)
pop
inc
inc
dec
mov
rcr
cld
jl
add
mov
jnp
jg
ins
pop
(bad)
xor
(bad)
cmp
fdivp
cwde
in
(bad)
adc
mov
stos
aaa
xchg
mov
cmp
xor
retf
lea
mov
imul
cwde
or
in
imul
sbb
(bad)
jecxz
in
mov
gs
push
jne
adc
adc
mov
jne
add
repnz
mov
ja
lahf
pushf
jae
jle
test
add
mov
and
sbb
push
jmp
xor
xchg
daa
or
pop
push
ds
jno
fnstenv
sbb
bound
and
adc
xchg
mov
mov
popf
xchg
cmps
repnz
add
dec
jmp
pop
and
outs
fisubr
out
lock
xor
push
outs
fnsave
inc
pop
cdq
sub
movs
leave
loop
jle
jo
sub
arpl
je
jp
dec
push
xchg
push
js
test
ret
sbb
xchg
ds
test
pop
in
push
retf
cmp
rcr
mov
ja
ret
test
and
js
xchg
lods
test
push
test
enter
xlat
xor
add
outs
movs
jns
add
retf
leave
jbe
ins
repnz
call
xchg
icebp
mov
pop
sbb
mov
jae
loope
cwde
sbb
pusha
sbb
(bad)
fmul
cld
das
sar
out
mov
xchg
test
jl
xchg
imul
leave
aam
mov
or
in
dec
popa
sbb
icebp
jns
fnstcw
push
jmp
pop
retf
scas
pop
xchg
adc
jecxz
inc
fwait
xchg
enter
pop
sub
add
adc
mov
repnz
jle
(bad)
cmp
into
add
arpl
fbstp
bound
call
or
iret
cmc
cli
fs
dec
stc
cmps
mov
cmp
jne
aaa
test
and
dec
dec
aaa
mov
les
jecxz
pop
adc
popf
jb
jne
(bad)
loop
cmc
pop
popa
sbb
scas
push
sub
push
inc
and
xchg
rol
repnz
test
adc
loop
cmp
cmp
imul
addr16
lods
fcomp
in
cmp
test
and
or
sub
xor
sahf
xor
test
jge
loope
push
xchg
popa
jl
aam
repz
mov
imul
jns
mov
fiadd
xchg
xchg
dec
jp
mov
ins
cmp
lods
or
clc
xchg
push
fstp
in
div
sbb
imul
cmp
in
mov
pushf
arpl
jnp
into
inc
and
(bad)
xchg
out
pop
fidiv
cli
add
popf
xchg
mov
fcmovu
adc
push
ret
mov
sbb
addr16
fisttp
jg
adc
xchg
xchg
push
mov
jae
sub
lds
xorps
push
push
jno
jp
mov
je
mov
call
mov
sub
or
jno
(bad)
or
sbb
pop
(bad)
popa
fld
mov
adc
leave
pop
leave
int3
(bad)
neg
xor
mov
pushf
and
mov
dec
ins
outs
inc
xchg
push
pushf
and
mov
cmc
push
pushf
les
jmp
adc
sub
sbb
ja
and
cmp
mov
inc
xchg
push
scas
jmp
aam
xchg
in
setnp
and
fst
and
add
mov
fcomp
mov
cmc
and
shl
jmp
dec
pop
inc
push
cli
cmp
ds
inc
adc
outs
mov
mov
pop
nop
add
ss
call
xor
leave
mov
push
loopne
and
add
aas
xchg
das
fwait
mov
cmp
cdq
ror
mov
add
outs
mov
je
add
(bad)
jne
adc
adc
into
cmp
mov
dec
jle
mov
imul
rcl
cmp
(bad)
mov
mov
fwait
inc
and
icebp
or
lods
imul
and
jecxz
adc
sbb
loopne
pop
adc
test
cmp
pushf
(bad)
xchg
push
xchg
les
and
pop
jae
adc
inc
cmp
add
sub
xor
sub
jns
cmps
push
or
dec
sbb
inc
push
imul
loope
add
cld
inc
jmp
jge
out
cdq
iret
hlt
push
xchg
mov
adc
es
pop
ret
into
jns
adc
sub
shr
add
mov
push
dec
xchg
add
and
push
xor
xor
cmc
(bad)
movs
pop
add
in
jmp
mov
aas
push
lea
stos
popa
test
scas
add
adc
sar
dec
xor
aaa
inc
pop
retf
(bad)
pop
mov
xchg
push
xor
dec
xchg
out
fs
or
rcl
int
jae
outs
(bad)
pop
jne
jmp
push
sub
lods
xchg
and
push
mov
xor
in
jo
test
mov
pusha
aaa
or
data16
mov
jge
rcr
and
les
aaa
push
cmp
jle
cmp
mov
das
cmc
inc
pop
or
out
sub
xor
cmp
cli
idiv
cld
cmp
and
mov
jmp
ja
(bad)
std
das
and
cmps
mov
add
add
jne
pop
fsubp
jle
in
bound
out
icebp
xor
push
push
jge
sti
cmp
dec
push
sbb
arpl
ficomp
pop
xor
stc
push
pushf
mov
xchg
out
mov
cmps
cli
mov
ins
mov
jbe
ja
(bad)
sub
push
and
repz
mov
sub
mov
pop
mov
lods
outs
(bad)
jns
mov
movs
stos
adc
js
fs
mov
fbld
mov
cmps
std
std
sar
adc
fst
mov
adc
inc
inc
ins
imul
bound
fmul
movs
ret
mov
shr
(bad)
fiadd
gs
jp
sub
sbb
xchg
in
aam
sbb
push
in
scas
out
sahf
ja
ss
or
or
mov
mov
out
ins
(bad)
bound
int
aas
daa
mov
xchg
and
push
adc
xchg
sbb
inc
rep
mov
sub
int3
inc
pop
iret
xor
or
pop
dec
dec
dec
jne
popf
mov
jnp
int
rcl
mov
out
and
enter
mov
test
into
cdq
pushf
std
hlt
mov
or
jbe
mov
dec
sub
cmp
in
xchg
push
fld
clc
push
cmp
fst
lock
mov
adc
pop
loope
mov
mov
rol
sbb
dec
test
lods
into
mov
sbb
jbe
mov
idiv
pushf
enter
aam
cmc
lods
push
lea
js
mov
dec
pop
aad
adc
sub
pop
cmc
lahf
push
cld
or
pop
pop
dec
or
into
stos
push
sbb
adc
mov
and
xor
xor
fdiv
xchg
xchg
test
call
fld
and
cs
add
das
xor
into
xchg
es
sub
lock
mov
or
out
or
push
pushf
mov
enter
pop
mov
stos
sub
xchg
std
xor
scas
mov
pop
jmp
fst
xchg
or
(bad)
shr
add
popf
imul
retf
sbb
mov
mov
mov
and
pop
call
xor
inc
or
sbb
push
dec
cmps
or
shr
call
sub
les
sar
cld
and
mov
mov
or
mul
inc
inc
loopne
and
xor
loopne
cmp
cmp
jo
sbb
inc
imul
push
arpl
dec
mov
inc
jge
mov
mov
push
enter
aam
fadd
lock
in
dec
shr
adc
push
xchg
mov
pusha
dec
push
mov
pushw
call
add
js
sub
call
movs
jne
sbb
and
xchg
lock
push
jb
or
or
xlat
push
sbb
loop
or
add
lods
popf
ins
jge
pop
outs
xor
int3
xchg
inc
mov
sub
leave
lods
jo
fs
jns
pop
inc
pop
add
mov
jmp
pop
sti
fldcw
sbb
mov
sub
xchg
cld
sub
lods
and
lahf
cmp
fld
aaa
icebp
inc
nop
dec
inc
dec
out
sti
dec
aas
test
mov
jae
inc
mov
xchg
or
fnstcw
loopne
pop
adc
push
test
jl
adc
aam
xrelease
clc
and
pop
arpl
inc
stos
jmp
dec
or
lock
jmp
or
stc
push
lods
push
push
sub
ror
add
pop
inc
push
test
(bad)
iret
and
push
popa
shl
pusha
inc
and
adc
inc
xor
js
add
loop
loopne
ror
ja
fdivr
(bad)
stos
sbb
shl
imul
outs
data16
test
test
es
sbb
pop
sbb
jg
jl
mov
jmp
sub
or
das
and
mov
cwde
dec
mov
pop
loop
sub
je
jmp
inc
mov
mov
adc
data16
xchg
jnp
pushf
ffree
mov
aad
fcom
push
push
jmp
ss
push
ins
mov
inc
sbb
jb
(bad)
(bad)
and
sub
test
xchg
cmps
adc
hlt
fmul
ret
jge
jecxz
out
popa
fist
adc
dec
jp
push
xlat
adc
iret
inc
inc
push
out
adc
sbb
lds
hlt
lahf
xchg
arpl
fnstenv
(bad)
shl
xchg
push
add
fidiv
sub
push
mov
and
pushf
fisubr
loope
dec
arpl
sbb
add
rol
imul
push
mov
into
xor
xor
mov
aaa
iret
das
sub
adc
mov
hlt
xchg
push
push
inc
inc
inc
xchg
repnz
jl
mov
pop
fdiv
cli
cmps
xchg
ror
jge
outs
je
int
cmp
and
dec
or
dec
in
jmp
stc
in
outs
xor
pop
add
in
(bad)
neg
ja
lock
aad
mov
or
xchg
inc
les
and
pop
ret
push
enter
outs
int
ret
inc
ja
sbb
or
loopne
mov
lods
dec
loopne
cmp
sahf
es
sub
scas
jne
jg
xor
movs
inc
arpl
push
cmps
pop
jg
mov
jmp
cmc
mov
and
push
repnz
aam
sub
jle
test
xor
std
les
sbb
out
add
pop
sub
xchg
retf
ds
push
frstor
popf
sbb
sbb
sti
aaa
lods
test
mov
out
ins
neg
leave
daa
push
loopne
or
sahf
test
pop
loope
aam
loopne
popf
adc
js
sahf
retf
mov
ret
mov
inc
fwait
std
adc
jns
mov
xor
fsub
pop
sub
dec
pop
pushf
sbb
push
or
das
iret
sub
cld
test
(bad)
xor
out
test
inc
mov
retf
pop
xchg
push
test
lock
push
inc
out
sub
jp
jecxz
xlat
xchg
stos
dec
movs
out
sbb
int
cmp
jae
mov
js
pushf
sbb
add
push
jb
push
sbb
cwde
mov
dec
inc
nop
lds
(bad)
sti
jg
sbb
call
xor
sbb
mov
jp
and
cmp
sbb
inc
push
je
sti
mov
out
cmp
cmps
push
icebp
movapd
sub
out
sbb
mov
pop
add
enter
repnz
xor
in
or
mov
xchg
or
in
adc
push
xor
mov
adc
(bad)
xor
js
or
cmp
fs
inc
leave
pop
mov
ror
dec
push
push
dec
lea
mov
jnp
or
push
xor
push
daa
fistp
cmps
lahf
and
sub
xchg
jmp
stos
inc
(bad)
ficom
add
aaa
fiadd
cli
xchg
pop
sbb
fsub
data16
sub
xchg
out
xchg
xchg
ins
cmps
cmp
add
cdq
push
mov
into
sub
call
inc
and
add
xor
pop
pop
movs
ins
jmp
fcomp
rcr
aas
xchg
bound
inc
add
jne
add
nop
in
outs
fidiv
mov
shl
push
iret
jmp
stos
or
xor
xchg
pop
pop
pop
cdq
sub
mov
dec
jo
ret
and
dec
pop
sub
js
jae
mov
sub
pop
shl
push
addr16
sbb
mov
inc
jbe
aam
aaa
or
cmp
call
fistp
and
push
inc
fst
call
jecxz
pop
cs
adc
and
sub
push
or
pop
(bad)
cmp
inc
or
dec
(bad)
xor
mov
call
push
dec
shl
mov
lea
imul
or
enter
out
shl
cmc
iret
test
hlt
adc
xchg
mov
pop
aad
mov
jbe
fdivr
or
and
sbb
xor
push
test
inc
and
cmp
(bad)
mov
call
out
outs
sub
mov
(bad)
push
call
pop
mov
pusha
dec
or
ja
call
pop
mov
dec
xor
dec
push
imul
mov
mov
push
mov
mov
aad
cmp
dec
mov
cmp
stos
fsub
enter
outs
jmp
fdivr
jne
les
(bad)
inc
in
daa
cmp
jge
call
shl
nop
rol
xchg
xor
sub
out
mov
lock
fidivr
loop
int
xlat
jge
inc
ins
fisttp
fsubr
mov
and
pusha
mov
mov
rol
mov
pop
cmps
pop
jne
xchg
xor
cwde
cmp
pop
fcom
sub
js
mov
mov
test
sub
aad
mov
loop
stos
mov
stc
mov
data16
aam
sub
push
add
pop
mov
xchg
xchg
or
jl
cwde
fs
fcomp
call
jmp
shl
xor
ds
push
sub
mov
mov
out
ja
cmp
jno
mov
mov
(bad)
neg
sub
into
repz
and
pop
test
call
mov
adc
and
movs
sbb
aaa
cmp
(bad)
loopne
mov
xor
mov
outs
scas
nop
adc
mov
push
or
add
jecxz
cmps
xchg
jnp
add
pop
mov
popa
pop
dec
mov
push
ror
sbb
jg
cmp
enter
sbb
push
std
fstp
pusha
xchg
dec
retf
and
xchg
aad
movs
sahf
push
cmp
sbb
js
cmp
into
xchg
inc
(bad)
ret
xchg
repnz
(bad)
call
ja
ja
js
push
sbb
ror
dec
cli
les
or
std
mov
or
cmp
mov
scas
xor
sub
dec
aaa
add
xlat
bound
sub
jl
dec
cmps
fist
icebp
push
fwait
adc
dec
xchg
(bad)
ins
ins
inc
popf
inc
mov
unpckhps
cmp
jmp
in
stc
pushf
jg
movs
push
cmp
popf
movs
mov
xor
fild
icebp
lea
xchg
dec
into
push
push
sbb
cmps
adc
rcl
sub
pop
(bad)
rcr
(bad)
sbb
mov
outs
std
pop
jnp
jb
test
ins
dec
push
test
sbb
jmp
inc
mov
sub
ret
push
add
dec
xor
adc
and
test
cmp
sbb
popa
adc
int3
push
adc
sbb
mov
nop
pop
or
js
dec
test
and
or
push
jb
xchg
ins
add
and
sbb
adc
arpl
neg
add
test
xor
sbb
sbb
adc
mov
scas
xlat
ret
imul
inc
adc
cmp
lahf
(bad)
pop
push
aam
pop
rcr
int3
sbb
mov
js
dec
xchg
ss
repz
mov
sahf
popf
jae
pushf
fsubr
aaa
imul
ror
pop
and
retf
pop
jbe
fwait
les
stc
imul
or
shl
cmps
js
in
fdivr
adc
cwde
adc
clc
or
daa
pop
adc
(bad)
in
movs
push
inc
inc
pop
pushf
jge
inc
dec
mov
cmp
in
hlt
and
xor
fadd
push
jecxz
mov
shl
pop
test
lea
sar
aaa
jmp
movs
bound
xchg
(bad)
(bad)
pop
int3
xor
inc
pushf
dec
mov
push
xchg
mov
sub
jmp
cmps
jbe
jnp
xchg
dec
mov
xor
cmc
mov
hlt
aam
popf
jmp
and
sbb
retf
hlt
ret
jnp
jnp
mov
jno
je
xchg
int
or
in
fbld
sbb
mov
pushf
test
sub
ins
sar
pop
mov
cs
pop
clc
inc
inc
push
mov
in
enter
dec
or
push
and
add
add
outs
mov
push
fcmovb
mov
mov
pop
enter
rol
adc
enterw
adc
add
adc
xor
into
lahf
call
loope
inc
test
mov
mov
xchg
ror
inc
push
jb
sbb
sub
mov
movs
xor
inc
int3
(bad)
and
push
pop
mov
xor
mov
sti
lods
ret
(bad)
lods
in
adc
jle
sbb
sbb
or
addr16
mov
or
repnz
inc
bnd
mov
dec
enter
mov
retf
fwait
bound
push
dec
into
mov
test
scas
cmp
sbb
cli
scas
xchg
cld
and
push
add
dec
(bad)
fbstp
xor
repz
sub
lock
jge
mov
and
div
xadd
mov
pop
imul
ins
cmp
fs
test
mov
sub
hlt
aam
adc
sbb
pop
gs
stc
popa
lea
iret
jns
mov
test
add
popa
mov
cmc
hlt
mov
pushf
in
mov
sbb
shl
mov
rcr
pop
cmove
ret
sbb
(bad)
jb
(bad)
or
js
mov
pusha
add
nop
sahf
cwde
shl
das
js
in
test
mov
stos
ins
pop
jnp
ds
mov
cmp
(bad)
xor
stos
xchg
inc
add
push
inc
ret
push
jo
hlt
xchg
retf
mov
xchg
cmp
xchg
rol
or
xchg
sub
cmp
cmp
mov
and
jmp
into
inc
ss
movs
mov
imul
test
cld
xor
outs
aaa
push
push
add
aad
mov
gs
xchg
dec
add
adc
add
repnz
call
pop
iret
add
retf
rcl
xlat
jns
xor
add
cmps
push
adc
(bad)
dec
xchg
fisttp
outs
ja
sbb
outs
int3
sub
push
(bad)
xor
or
mov
fisub
retf
adc
fisub
leave
sub
jns
(bad)
fs
jp
push
add
nop
mov
leave
pop
(bad)
jne
inc
add
(bad)
aas
push
jmp
fucom
add
jnp
mov
sbb
fidivr
mov
lds
cli
daa
test
(bad)
fist
jne
xlat
mov
xchg
sub
mov
add
mov
xor
les
int3
jmp
sub
pop
and
ret
repnz
and
ins
in
cmp
rcr
inc
dec
dec
cmp
ficom
jp
and
cli
xchg
mov
mov
clc
inc
(bad)
push
add
cmp
scas
add
cli
xor
dec
mov
movs
mov
push
cmps
imul
jge
inc
es
pop
nop
dec
xor
or
inc
xchg
outs
std
mov
shl
lds
dec
push
jno
xchg
call
mov
push
xchg
mov
push
sbb
jmp
ins
repnz
pop
jp
sub
test
mov
xchg
sti
in
or
cmc
imul
jno
pop
nop
retf
mov
arpl
inc
adc
movs
cdq
pusha
add
dec
push
add
retf
fisubr
int3
ret
mov
inc
iret
and
icebp
ss
lea
loope
ret
sar
lea
and
(bad)
pop
sahf
ins
inc
jno
sbb
sub
fnstsw
int3
pop
push
cmp
ins
pusha
cld
adc
sti
out
std
push
in
dec
mov
popa
(bad)
addr16
xchg
pop
mov
pop
add
lods
xchg
repnz
sbb
jl
push
or
dec
loop
loope
rcr
jle
sar
cmp
or
and
in
xchg
mov
pushf
mov
or
pop
mov
out
push
adc
and
fldenv
push
mov
xchg
sbb
jae
icebp
ins
adc
push
inc
cmp
rcl
ins
retf
cmp
mov
mov
(bad)
std
mov
ss
xchg
ds
mov
ror
and
dec
rol
cmp
xchg
jbe
jle
xchg
mov
sar
mov
mov
rol
jge
arpl
imul
shr
cmc
ins
cmp
push
cmp
push
fs
stos
out
xlat
mov
sub
imul
jae
ret
sbb
ins
(bad)
aad
fidivr
jle
ja
fcmovnu
ret
repnz
cmps
mov
jbe
scas
jo
mov
or
test
and
push
xchg
jbe
cmp
lds
call
push
sub
out
test
dec
fimul
pop
in
into
jle
push
retf
js
xchg
fst
scas
xchg
inc
js
es
pusha
out
leave
mov
xor
gs
icebp
pushf
or
xor
sbb
aad
jbe
out
cmp
sub
dec
into
(bad)
in
sbb
in
imul
pushf
xor
mov
inc
aaa
clc
mov
inc
mov
sbb
out
arpl
cs
pop
fld
push
nop
mov
xor
sub
push
ds
xchg
jnp
lds
call
xor
add
int3
popf
ds
rcr
sub
mov
leave
aaa
mov
pop
test
pop
enter
add
mov
ja
out
sub
fdivr
mov
pop
in
push
retf
sti
add
xor
loope
das
(bad)
sti
or
push
fs
mov
sbb
jp
xlat
xlat
inc
sbb
inc
rcr
retf
sub
sbb
sub
and
fld
mov
outs
ror
(bad)
in
mov
les
ficom
fmul
addr16
ja
push
jnp
test
es
imul
rol
mov
mov
xchg
cmp
cdq
(bad)
inc
and
lock
mov
pop
mov
jo
dec
popf
jecxz
cdq
repnz
mov
dec
int3
pusha
jg
dec
jnp
movs
add
jae
call
repz
jle
xchg
adc
jns
inc
push
add
adc
jge
retf
sbb
lahf
sti
(bad)
cwde
jmp
shl
pop
pushf
aas
add
jecxz
into
mov
jne
ret
cwde
ret
xchg
adc
cmp
push
jecxz
das
lock
rcl
fwait
lahf
xchg
sbb
jno
das
div
xor
rol
arpl
js
sahf
mov
mov
repz
adc
mov
push
popf
adc
jl
cmp
mov
push
aad
mov
out
and
sti
and
push
aam
repnz
push
dec
ret
add
sub
retf
shl
cmp
or
lock
(bad)
iret
nop
test
xchg
nop
les
loop
xchg
pop
and
add
les
or
jg
mov
in
lock
or
dec
mov
clc
fucomi
jae
dec
add
ja
js
sbb
call
rol
xor
adc
imul
inc
pop
ss
sahf
jp
outs
jno
inc
mov
lods
loope
mul
movs
sti
or
or
sub
sub
and
out
shl
outs
mov
xor
jnp
test
ins
jbe
push
sub
fistp
or
or
call
mov
fwait
arpl
push
daa
inc
xlat
gs
mov
pop
arpl
inc
inc
push
fs
jmp
jge
or
dec
sub
mov
mov
sub
dec
and
or
pop
add
(bad)
sbb
push
call
mov
outs
jmp
ds
cmp
pop
sbb
stc
mov
fs
and
jecxz
mov
int
jecxz
pop
(bad)
shl
lea
in
cmp
add
dec
int3
ficom
clc
mov
sbb
popf
out
neg
cmp
or
int
pop
rcr
sbb
cmp
pop
fidiv
dec
xchg
iret
cld
inc
shl
and
outs
and
dec
jbe
popaw
fistp
or
scas
inc
dec
fwait
pop
dec
mov
lods
mov
das
jno
iret
sub
xchg
mov
shl
push
jae
jp
sbb
mov
lea
fiadd
js
test
pop
mov
jge
push
mov
inc
push
push
cmp
cmps
shr
mov
jl
fld
adc
in
xchg
call
add
mov
sbb
repnz
into
mov
scas
add
adc
fucom
lea
dec
dec
cs
add
gs
add
inc
mov
dec
jne
xadd
mov
daa
out
mov
in
repz
push
push
dec
inc
cmp
mov
cmp
retf
dec
stos
sbb
push
sbb
jge
leave
mov
and
jge
enter
jmp
and
xor
sbb
or
(bad)
enter
or
pop
push
adc
mov
pop
jp
xchg
mov
mov
push
pop
call
je
(bad)
sub
loop
lock
cmc
sbb
int3
stc
inc
fwait
div
or
ja
push
adc
jp
call
sbb
inc
jne
mov
jmp
or
ja
push
pop
idiv
mov
jge
sbb
dec
mov
aam
mov
push
xor
es
cmp
push
lods
ret
sub
fist
cmps
sbb
rcr
lds
push
and
shr
push
out
cs
int3
hlt
iret
xor
mov
or
xchg
and
and
test
push
xchg
sub
mov
gs
xor
mov
iret
xchg
inc
cmps
mov
or
jo
jp
bound
mov
xor
jp
outs
lea
dec
pop
clc
push
cmp
aas
scas
jae
or
inc
push
mov
cmc
xchg
add
inc
sbb
mov
or
ds
pop
mov
jle
cmps
push
xor
inc
mov
cdq
ret
addr16
icebp
adc
adc
icebp
lea
ret
jle
push
js
xor
cmc
inc
mov
dec
imul
leave
cli
mov
pushf
jge
pop
pusha
pop
lods
imul
movs
mov
or
mov
addr16
movs
sub
and
stos
sbb
mov
outs
(bad)
fisttp
cmp
leave
int
sub
imul
jb
mov
cmp
mov
xor
jmp
ja
or
push
fwait
sbb
sbb
adc
cmp
aas
js
daa
xchg
fsub
pop
repnz
sbb
xor
popf
repnz
(bad)
das
mov
fisub
loop
out
jle
clc
dec
mov
xchg
(bad)
hlt
ret
jl
pop
dec
aaa
push
pop
jmp
xor
xchg
into
lahf
add
(bad)
inc
push
enter
pop
push
xchg
push
cld
sbb
mov
mov
inc
ror
ror
ja
add
pop
jle
outs
call
movs
stc
aad
loop
or
or
and
loop
dec
call
mov
aam
ror
add
ja
int3
push
or
ins
retf
cmp
adc
icebp
ins
mov
push
cmp
lahf
mov
sbb
dec
xchg
cmp
jg
push
jecxz
push
gs
add
add
aas
nop
cmps
xchg
(bad)
cld
xchg
mov
cmp
aas
mov
cmp
jae
sub
nop
jp
outs
push
push
inc
ins
gs
and
imul
enter
cmp
pop
gs
mov
cwde
fs
scas
or
cld
in
jae
stos
shl
mov
loope
pop
loop
stc
clc
sub
dec
into
sbb
lahf
jnp
(bad)
outs
adc
mov
pop
ins
cmp
lds
mov
(bad)
mov
mov
jb
push
gs
arpl
or
outs
push
pop
ins
xlat
je
or
pushf
pop
call
mov
push
fmul
and
mov
ins
shr
mov
(bad)
push
mov
pusha
or
call
in
xchg
pop
or
adc
jne
jmp
or
scas
aam
(bad)
bound
lods
mov
out
(bad)
jecxz
mov
jmp
frstor
cmp
mov
clc
pusha
rol
les
mov
sub
(bad)
xchg
cld
add
jb
mov
mov
fdiv
sub
ins
(bad)
mov
cmps
rcl
outs
(bad)
lds
lea
mov
mov
push
aad
adc
inc
shl
ss
fist
add
(bad)
sar
js
jmp
test
xor
dec
pop
lahf
out
adc
sbb
mov
adc
clc
and
mov
pop
xor
out
aad
cmp
sar
xor
xlat
cmp
xchg
push
in
in
movs
stos
jmp
mov
in
(bad)
jle
enter
pop
cli
mov
mov
in
dec
jmp
std
dec
xor
add
inc
clc
pop
ins
lea
imul
cmp
adc
test
jecxz
pop
and
sub
or
test
mov
add
fisubr
je
dec
popa
(bad)
xor
xor
repnz
pop
or
mov
mov
nop
add
xor
jnp
or
js
nop
inc
retf
popa
cmp
or
xor
or
fidiv
xchg
xchg
sub
mov
or
jg
jo
addr16
and
mov
sub
xchg
popa
sahf
stos
cs
call
dec
retf
stos
xor
and
test
pop
popa
adc
pushf
cmps
lock
adc
push
add
xchg
(bad)
(bad)
mov
lahf
pop
and
mov
fstp
xchg
mov
mov
jae
outs
fisub
mov
and
bnd
sbb
or
in
sub
sahf
loopne
stc
(bad)
call
mov
dec
call
sti
outs
mov
push
cmp
push
test
pop
cs
vandnps
in
cwde
mov
call
retf
(bad)
(bad)
cmp
cld
ins
push
xchg
pop
rdtsc
xchg
adc
jmp
retf
shl
arpl
mov
lods
mov
lock
cdq
pop
inc
sbb
nop
rcl
(bad)
dec
(bad)
test
fcom
pop
push
or
call
and
push
shl
(bad)
cmp
test
mov
out
lock
imul
pop
jo
mov
gs
movs
(bad)
ret
push
fadd
sar
cwde
pop
push
call
jno
adc
jmp
inc
or
add
loop
pop
mov
adc
pop
ret
test
rcl
aam
popa
mov
prefetchwt1
or
jmp
fbld
jg
popa
ret
jno
mov
jle
mov
cmps
or
test
ja
fs
retf
inc
fstp
(bad)
cmp
lock
std
call
dec
xor
push
add
dec
mov
inc
(bad)
bound
jnp
add
cld
pop
pop
into
dec
xor
or
pop
xchg
adc
mov
mov
pop
fisttp
and
sbb
iret
outs
push
and
sbb
jle
loopne
mov
inc
jmp
dec
xor
adc
sti
repz
adc
in
in
stos
ins
aam
or
jmp
cmp
ds
cld
hlt
call
imul
jmp
sub
pop
mov
or
mov
xchg
jbe
mov
imul
jb
mov
fcomi
sahf
pop
std
mov
fdivr
ins
cdq
adc
xchg
xor
mov
and
aam
sbb
dec
scas
pop
movs
inc
adc
int
fwait
lods
ret
rcl
xor
inc
cmp
mov
stos
mov
call
stc
(bad)
and
stos
xchg
cmps
cmp
mov
dec
(bad)
(bad)
mov
stos
mov
xchg
sub
xchg
inc
mov
idiv
test
adc
mov
out
push
imul
xchg
xchg
push
xchg
cli
lods
jecxz
ja
mov
inc
xlat
xor
and
xchg
xchg
shr
and
and
call
das
xchg
adc
dec
ror
popa
lods
jnp
(bad)
fadd
sub
shr
stos
jecxz
test
iret
pusha
outs
pop
stos
iret
stc
daa
or
fst
sub
mov
and
mov
daa
retf
(bad)
cmp
inc
mov
je
sub
jno
inc
and
inc
add
hlt
imul
and
dec
mov
mov
dec
pop
cmps
fisubr
add
jg
repz
stos
cli
stc
ja
sbb
push
cmc
dec
popf
inc
loope
add
(bad)
adc
mov
jmp
(bad)
test
cmp
mov
lds
(bad)
mov
cld
stc
test
test
dec
movs
adc
jns
shl
push
cmp
push
pushf
cwde
mov
add
sbb
and
scas
adc
leave
inc
imul
mov
iret
and
ds
push
fldpi
fistp
lock
xor
dec
lods
pop
fmul
and
jbe
idiv
(bad)
movs
jle
xchg
mov
xlat
mov
inc
dec
sbb
adc
es
jno
fs
cmps
jle
lea
out
les
(bad)
jmp
fimul
and
inc
mov
ins
mov
inc
fadd
or
mov
aas
cli
mov
fidivr
sub
cs
xor
pop
leave
xor
xlat
jg
ja
push
mov
add
add
pop
adc
pop
in
sub
shl
inc
mov
push
dec
out
test
mov
or
mov
sub
xchg
xchg
jl
into
pop
pop
movaps
fcomp
rol
test
adc
sahf
and
cwde
scas
adc
pop
stos
push
jo
stc
jl
sar
repnz
lods
pop
iret
out
(bad)
(bad)
cwde
int
(bad)
push
dec
pop
ds
mov
aad
xchg
mov
(bad)
retf
je
jo
stos
mov
inc
aam
mov
xor
stos
adc
clc
sbb
sub
mov
retf
or
test
(bad)
repnz
imul
inc
inc
adc
js
pop
mov
in
mov
ds
(bad)
std
push
push
mov
shl
cli
mov
(bad)
mov
jmp
jle
add
lods
scas
out
dec
sbb
adc
pop
push
icebp
call
std
inc
test
out
pusha
test
sub
mov
adc
mov
fldenv
lds
sub
pop
fiadd
jg
pusha
mov
std
test
xor
mov
lods
mov
loopne
fadd
add
or
movs
bound
inc
jno
ret
icebp
mov
jmp
hlt
sub
xor
aas
ja
adc
shl
test
add
jmp
xor
test
lea
or
or
fdivr
stos
outs
mov
sbb
arpl
shl
cmps
xor
mov
jp
repnz
sub
in
pop
fnstsw
or
adc
mov
aas
lahf
mov
icebp
daa
iret
jg
cmp
pop
pop
jmp
fidivr
add
das
inc
cmp
repnz
lea
or
push
test
ins
jo
adc
cmp
ins
or
adc
pmulhuw
into
fbld
cmp
and
xlat
nop
mov
push
cwde
outs
and
in
retf
leave
mov
inc
pushf
imul
add
enter
sub
es
and
or
pop
or
cmps
loop
and
push
daa
movs
sbb
push
cmp
cmp
xchg
fnsave
stos
sub
cld
inc
iret
sub
xor
movs
jg
aaa
jecxz
in
int3
call
out
xor
xchg
idiv
cmp
leave
jb
mov
and
pusha
shl
aas
mov
in
sbb
jle
xor
(bad)
push
das
and
mov
aaa
das
faddp
movs
lock
imul
add
or
stos
or
dec
mov
sub
ins
sub
ss
stos
inc
mov
rcl
sub
daa
dec
popa
ret
pop
inc
(bad)
sub
mov
pushw
loopne
and
scas
add
cld
inc
int3
imul
jmp
test
imul
adc
pop
inc
cmp
xor
pop
leave
inc
xchg
mov
xor
ss
cld
mov
lea
jnp
int
sbb
ja
paddd
sbb
mov
mov
add
jno
ret
mov
inc
ds
cld
or
ret
inc
mov
push
sahf
pusha
hlt
das
push
cmp
aas
or
xor
retf
mov
test
enter
adc
or
push
out
jmp
add
pop
imul
imul
mov
fnstsw
pop
test
adc
xor
jb
xor
adc
retf
movs
data16
aas
xchg
dec
aad
xchg
push
mov
stos
cmp
pop
loop
fcmovnbe
mov
lahf
movs
test
and
dec
jle
sbb
leave
cs
ds
hlt
dec
and
pop
mov
scas
fstp
xor
cwde
sub
mov
test
js
cmps
lods
sbb
mov
aas
sub
push
inc
cmp
retf
dec
and
pop
sbb
stc
push
rol
scas
fwait
retf
pushf
ret
push
xor
sar
xor
adc
lahf
and
jb
push
bnd
dec
movs
jecxz
int
lahf
fs
or
xchg
mov
add
aaa
jmp
dec
(bad)
out
sbb
and
xor
xchg
leave
xlat
fidivr
and
leave
in
in
cld
or
adc
(bad)
mov
inc
out
push
mov
gs
sub
xor
inc
cmp
not
popa
(bad)
mov
in
push
mov
inc
sti
mov
lods
mov
icebp
mov
test
dec
out
cs
ins
out
mov
sbb
in
dec
pop
call
test
out
cmp
mov
cwde
stc
sbb
cmp
lods
std
mov
outs
retf
imul
xor
pop
aad
in
and
gs
das
dec
jle
xchg
push
add
int
iret
stos
adc
adc
fild
pop
pop
int
mov
jne
xchg
arpl
mov
or
and
mov
xchg
fadd
fsub
xchg
pusha
jmp
pop
inc
mov
ss
fst
push
mov
jb
dec
jnp
sbb
sbb
shr
int3
int3
mov
or
sbb
add
scas
ret
imul
and
call
dec
movs
out
xchg
retf
outs
repz
fnstsw
adc
xchg
addr16
inc
popf
mov
(bad)
call
cmp
add
mov
push
cs
cs
ins
xor
pop
jg
inc
pop
fadd
mov
in
fisub
icebp
or
push
jmp
std
mov
jb
das
out
popf
das
stc
fst
stos
gs
mov
and
cmp
(bad)
outs
test
stos
push
mov
lds
add
push
or
popf
cmp
sbb
inc
add
mov
xor
in
in
ins
lahf
jmp
je
enter
ja
ja
mov
and
cmp
pushf
adc
int
retf
push
xchg
push
in
fnstenv
sahf
idiv
iret
sbb
sbb
in
inc
daa
push
sbb
xor
or
dec
cmp
adc
test
mov
cmp
sbb
sbb
int
jno
xchg
dec
data16
mov
pop
and
jb
mov
dec
fistp
mov
cwde
dec
mov
sub
pusha
push
dec
mov
add
xchg
nop
loopne
fst
and
push
outs
loopne
mov
cmp
or
and
(bad)
pop
fsubr
xchg
adc
mov
gs
ret
jo
push
jnp
mov
push
aas
add
xlat
pop
test
nop
call
pop
(bad)
cld
ds
pop
and
inc
outs
pop
out
ret
arpl
addr16
dec
psadbw
inc
mov
fldenv
sbb
add
inc
mov
push
cwde
fld
lods
mov
add
aaa
cmc
call
cmc
rol
xchg
or
inc
lar
ja
addr16
sbb
fxch
shl
pushf
inc
push
addps
mov
jp
pop
xchg
ss
les
icebp
movs
pop
push
jnp
ja
pusha
xor
scas
or
int3
push
data16
jge
sub
outs
popf
inc
call
test
cld
fwait
sbb
ja
xor
dec
(bad)
push
mov
ins
fwait
into
adc
(bad)
xor
jecxz
adc
inc
mov
ltr
push
sub
pusha
int3
xor
add
movs
adc
sub
in
xchg
add
setge
(bad)
cmp
mov
fisttp
push
mov
imul
dec
xor
sub
add
sbb
outs
fs
fild
adc
push
movs
jb
mov
sbb
inc
movs
aam
(bad)
ins
nop
inc
and
jne
dec
aam
adc
pop
nop
lock
in
rol
call
ret
mov
jp
stc
and
xchg
add
outs
lds
lods
xchg
nop
xchg
jl
push
(bad)
div
mov
jnp
xor
jne
int3
stos
fnstcw
mov
sti
add
mov
sbb
unpcklps
inc
mov
dec
xchg
or
ret
cs
cs
mov
lods
mov
pop
lds
sub
fld
or
jbe
scas
js
cmps
aam
sar
inc
neg
sbb
or
cmp
stos
outs
nop
pushf
jl
push
test
aas
pop
push
jge
add
jg
repnz
in
dec
sub
das
mov
icebp
add
pushf
lods
sbb
cmc
adc
cmp
mov
push
xchg
xlat
rcl
sub
xor
pop
loop
lahf
retf
pop
cmp
test
lea
lock
cld
icebp
xor
sbb
cmp
xchg
mov
pushw
test
jl
lahf
lea
out
xor
push
jb
pusha
sbb
dec
(bad)
jmp
das
shl
ret
mov
test
xor
mov
push
jno
sbb
pop
dec
dec
ror
pop
scas
inc
mov
mov
test
or
call
inc
test
sub
std
jp
and
pop
popf
push
enter
mov
ror
outs
xchg
pusha
and
mov
inc
mov
mov
mov
ja
mov
mov
pop
cmp
je
js
mov
xchg
das
in
jae
dec
dec
psllq
pop
std
jbe
cmp
push
and
or
sub
gs
pop
cmp
lea
push
or
popa
ficom
loop
mov
push
ins
mov
fldenv
inc
in
inc
shr
jge
ins
in
pop
jl
gs
mov
mov
dec
pop
enter
cli
ret
not
int3
jp
push
in
sub
add
adc
mov
adc
cmc
inc
jl
mov
xor
jo
jl
aaa
xchg
test
movs
shl
mov
scas
jmp
or
ins
push
mov
cmps
pop
and
dec
call
imul
in
sbb
add
dec
jbe
mov
scas
pop
arpl
out
mov
lock
mov
pop
mov
imul
lds
adc
lahf
add
dec
gs
sbb
dec
test
push
(bad)
mov
call
push
cmps
(bad)
sahf
imul
inc
sbb
pop
outs
mov
push
das
mov
xchg
(bad)
lods
and
xlat
pop
xchg
outs
movs
bound
sti
fwait
and
xchg
ror
jl
and
xor
cmp
test
inc
mov
fwait
or
inc
pop
xchg
sub
adc
jns
inc
or
inc
and
out
test
(bad)
loopne
dec
inc
retf
test
call
sub
xor
push
mov
mov
data16
cld
cmp
sbb
sbb
xchg
add
xchg
test
push
xor
xor
and
and
xchg
fistp
push
push
fs
jbe
add
int3
std
xor
ret
cmc
pop
push
nop
xchg
(bad)
adc
aas
or
pushf
push
into
push
adc
dec
xchg
mov
or
adc
movs
jecxz
bound
aas
(bad)
push
imul
aas
movs
xor
leave
lock
shr
repz
imul
mov
add
fistp
outs
and
inc
push
dec
pushf
mov
push
jae
pop
or
mov
(bad)
fnstsw
jbe
jmp
cmps
sbb
xor
jnp
sar
(bad)
into
cdq
jmp
xor
stos
mov
(bad)
fstp
or
dec
and
int
push
sbb
(bad)
je
ins
arpl
mov
xchg
mov
pop
imul
and
lahf
outs
xchg
fs
dec
ins
or
mov
jne
jne
(bad)
fimul
clc
adc
push
or
enter
inc
and
loope
pop
xchg
js
inc
jl
in
xor
jae
test
push
mov
cmp
xchg
dec
js
lea
fisttp
inc
mov
push
cli
or
push
aaa
add
nop
scas
mov
or
push
por
mov
ror
mov
sub
ficomp
push
pop
xchg
jnp
and
(bad)
icebp
jmp
xchg
jge
fidiv
pop
inc
cmp
fadd
or
inc
sub
mov
jl
stos
mov
pop
cmp
call
add
sbb
jecxz
fwait
lock
push
mov
lea
out
adc
icebp
xor
add
mov
or
mov
cmp
(bad)
mov
int
es
xor
xchg
mov
imul
sub
retf
sbb
sbb
ds
shr
pop
test
push
push
sbb
push
sub
push
push
mov
adc
aas
dec
test
sbb
mov
int3
mov
or
xchg
sar
std
fiadd
adc
sub
loope
sahf
mov
call
fdivr
push
jno
jbe
mov
jo
or
pop
xlat
rol
jl
xchg
stc
in
daa
test
das
mov
in
cld
inc
ja
mov
mov
popfw
(bad)
adc
iret
mov
jmp
mov
dec
lods
cld
jge
into
add
(bad)
in
dec
jle
jge
leave
mov
pop
lds
(bad)
push
xchg
xchg
dec
mov
in
inc
push
popa
popa
push
dec
mov
jae
pop
popa
mov
loop
int3
cmps
adc
in
lahf
mov
int3
or
or
mov
mov
and
je
cli
push
xchg
(bad)
repnz
add
stc
add
pop
xchg
or
call
inc
fst
sbb
xchg
jge
loopne
add
mov
lahf
add
jmp
sbb
ins
xor
jmp
in
xchg
in
in
mov
and
sub
pop
(bad)
cs
retf
push
jb
mov
jmp
ficom
jmp
dec
(bad)
shl
sbb
sbb
xor
and
xchg
mov
push
sub
inc
add
push
inc
movs
fnstenv
shl
ja
cmp
mov
mov
jo
sub
sub
mov
lahf
dec
sar
cld
fsubr
icebp
mov
push
push
mov
adc
out
push
in
or
push
sbb
clc
pop
js
xor
pop
mov
add
mov
mov
mov
xor
scas
pop
pop
jl
mov
pop
xchg
xchg
fdiv
sbb
dec
or
call
cld
stos
in
pop
mov
xchg
punpckhdq
and
aam
retf
std
sbb
sbb
js
pop
mov
sbb
out
mov
in
repz
dec
repz
mov
jnp
lock
pop
hlt
shl
sub
ror
imul
fcom
xor
mov
enter
mov
in
mov
ds
sbb
adc
lock
push
pop
jae
cmc
mov
jbe
bound
mov
ins
pop
or
adc
mov
aaa
fistp
sbb
aad
fwait
aaa
movs
mul
repnz
movs
lods
jg
out
push
sahf
pop
loopne
mov
mov
loope
pusha
sub
push
or
mov
mov
sub
pop
or
xchg
std
scas
sub
jle
xor
mov
add
int3
(bad)
jmp
stc
inc
add
sub
and
std
lock
scas
add
clc
xor
xchg
ja
stc
gs
pop
push
xchg
sar
es
icebp
daa
jge
sbb
mov
adc
scas
xchg
jb
mov
push
mov
or
mov
lahf
(bad)
jge
bound
add
arpl
scas
hlt
(bad)
enter
fsubr
scas
sbb
inc
xchg
fwait
xlat
mul
push
ins
sti
rcr
jns
cld
jns
les
in
add
imul
adc
cli
mov
dec
mov
ins
mov
repz
inc
and
cmc
fistp
ret
dec
(bad)
or
inc
jno
push
dec
aam
sub
lods
sbb
add
ss
pop
cmps
gs
stos
push
fwait
sub
sbb
push
fimul
inc
dec
mov
imul
inc
add
or
out
out
pop
xor
int
mov
fs
or
stos
fnstcw
dec
inc
cmp
mov
(bad)
cmp
mov
scas
leave
sub
cmps
in
xor
add
dec
lds
mov
in
daa
shr
in
fimul
das
and
push
das
and
pop
mov
out
mov
hlt
fstp
stos
cmp
mov
mov
sub
nop
ins
pop
imul
adc
shr
xchg
enter
nop
and
sbb
push
jle
movs
xchg
iret
and
inc
sub
arpl
or
mov
imul
sbb
int
jbe
mov
jle
ins
mov
xor
sbb
xor
and
std
ret
repz
fwait
sbb
xor
sti
xor
hlt
push
inc
and
rol
jo
jmp
ins
xor
hlt
aad
add
and
fild
rcl
sbb
aam
lahf
sbb
sbb
into
lock
inc
and
enter
or
lods
sub
cdq
push
jle
rcr
jno
ror
(bad)
jp
xchg
scas
mov
rol
shl
mov
in
loope
mov
(bad)
aas
jp
add
mov
(bad)
enter
test
das
xchg
aad
inc
adc
mov
push
or
out
and
xchg
pop
loope
les
push
test
xchg
and
pop
ja
cli
dec
add
ret
push
sub
(bad)
push
sbb
div
or
call
sub
add
sbb
cwde
icebp
dec
enter
aam
mov
dec
scas
gs
inc
enter
(bad)
xchg
nop
or
out
enter
add
daa
(bad)
popa
out
mov
or
addr16
movs
dec
adc
xor
test
in
push
fcomi
jbe
mov
lods
out
push
mov
xor
fwait
aas
add
(bad)
mov
fadd
std
into
int
cmp
adc
jno
or
scas
pop
xchg
jge
mov
imul
enter
aam
into
mov
call
cmps
ds
dec
and
pop
retf
and
cli
(bad)
shr
sbb
es
retf
mov
mov
aam
scas
adc
dec
int
mov
outs
jle
fsub
pop
or
cmp
jmp
mov
pop
out
jmp
jno
inc
movs
movs
(bad)
cwde
repnz
add
lods
test
fisubr
sbb
aaa
jnp
mov
sbb
gs
stos
sbb
test
mov
mov
ja
mov
(bad)
mov
jecxz
cmp
inc
sbb
je
rcr
jne
cmp
inc
into
push
xchg
push
int3
pop
jno
cmc
pop
lds
mov
dec
add
mov
sbb
dec
jp
pushf
jbe
add
pop
and
inc
ret
lds
popw
mov
in
jle
push
pop
(bad)
jp
rcr
retf
gs
in
dec
or
rcl
pusha
jl
xchg
fucomp
mov
or
addr16
sar
xor
in
movs
stc
pop
sub
jns
add
jg
call
mov
xchg
cdq
gs
adc
push
(bad)
xchg
and
pushf
arpl
and
xor
cmps
pop
xchg
(bad)
fidiv
gs
aam
or
jecxz
(bad)
jle
adc
jg
push
mov
push
xor
in
mov
mov
jl
jmp
in
lods
sub
movs
dec
popf
in
in
pop
add
and
jns
push
fidiv
push
mov
pop
pop
or
add
shl
jecxz
push
or
in
pop
movs
inc
push
dec
add
xor
cmps
and
shl
in
je
inc
ucomiss
std
push
sub
mov
dec
push
shl
push
mov
mov
mov
jb
call
loope
mov
xchg
(bad)
pop
loopne
stos
and
adc
iret
inc
xor
dec
inc
jg
pop
pop
xor
ffreep
test
push
fild
enter
push
sbb
cmps
outs
fmul
cli
test
mov
push
or
push
push
jp
sti
nop
sub
sub
mov
les
sub
pop
xchg
mov
outs
mov
test
xchg
test
jecxz
icebp
jbe
jno
xor
pushf
(bad)
stos
jle
jo
xor
ds
(bad)
jmp
aad
dec
mov
lock
mov
cs
outs
test
shl
pop
mov
(bad)
fucom
aam
fwait
mov
jl
sub
xor
mov
jecxz
and
cmp
mov
jle
mov
pop
mov
and
ror
mov
add
inc
lahf
out
or
mov
retf
xchg
mov
jae
jns
pop
push
push
cmps
sbb
daa
imul
mov
fadd
adc
mov
mov
rcr
add
push
xchg
mov
inc
pop
or
adc
jmp
xchg
mov
xor
sbb
sbb
or
and
mov
add
mov
test
in
pushf
ja
jo
call
or
inc
out
push
iret
ret
outs
mov
cmps
fld
jnp
mov
mov
into
sbb
sahf
jp
and
cdq
add
les
cmp
not
mov
outs
dec
in
inc
push
jns
mov
cmc
out
int
ss
ds
mov
mov
(bad)
fsub
mov
aas
aaa
movs
mov
aas
mov
fnstsw
pop
xor
arpl
inc
sbb
test
je
sar
mov
(bad)
pop
aad
cmp
pusha
loope
or
jbe
pop
sar
push
jns
xchg
jmp
fwait
test
push
(bad)
dec
rcl
repz
stc
sub
shl
inc
imul
dec
mov
imul
shl
nop
popf
fld
inc
jle
push
clc
mov
push
gs
pushf
popa
daa
dec
inc
dec
lea
ret
sar
idiv
test
inc
(bad)
imul
jp
imul
add
pop
(bad)
neg
icebp
ds
dec
cmp
jle
push
xchg
add
mov
xchg
xlat
sbb
fst
stos
mov
imul
jnp
bound
mov
mov
dec
popa
(bad)
daa
adc
jge
add
mov
sbb
cmp
cli
add
mov
pop
dec
je
(bad)
daa
mov
cs
sti
jno
cmp
push
xor
and
inc
rol
push
ins
xchg
inc
das
sub
repz
fmul
cmp
add
stc
in
push
push
in
lds
adc
lahf
adc
popf
push
sub
xchg
or
dec
jns
dec
sbb
mov
sub
pop
push
test
and
dec
pusha
(bad)
push
icebp
movs
or
or
scas
pop
jge
or
sbb
sub
add
inc
(bad)
jnp
and
movs
cmp
add
cdq
popa
xchg
test
jb
ss
pop
call
inc
mov
pop
cmp
xchg
push
fcomp
outs
push
enter
adc
mov
outs
leave
cmps
xchg
pop
in
inc
push
sub
push
mov
sar
and
popa
scas
adc
fwait
ret
mov
es
sub
dec
stos
push
rcl
add
iret
es
sti
les
push
cli
jmp
inc
pop
popf
ret
int
pop
push
dec
push
mov
sub
fmul
push
sbb
outs
leave
je
pusha
dec
push
repnz
mov
jb
js
sub
mov
pop
mov
cld
add
cli
call
add
mov
xor
imul
and
jne
pushf
and
or
aas
push
int
cmp
andps
fistp
add
lods
dec
push
dec
cmp
xor
pop
sbb
movs
inc
inc
mov
mov
mov
inc
inc
or
mov
jge
dec
xlat
and
cmp
jge
adc
sub
ja
inc
mov
arpl
sub
mov
push
mov
dec
mov
add
jp
xor
mov
ret
ja
xchg
push
in
mov
into
retf
imul
cmp
sub
sbb
dec
(bad)
popf
mov
shl
xchg
adc
inc
out
daa
adc
cmp
jo
push
jb
mov
xor
imul
xchg
mov
call
or
jmp
push
ins
cmp
leave
iret
or
and
test
xchg
call
fld
and
loop
shl
cmp
cmp
add
jb
cmp
push
std
mov
test
aaa
das
sbb
outs
mov
sbb
fcomp
mov
jge
pop
sbb
xor
not
data16
xchg
jmp
scas
mov
test
pop
jmp
sub
neg
(bad)
into
ficom
test
jmp
popa
adc
sbb
or
sub
fnstsw
fadd
lea
aas
xor
jb
or
inc
adc
mov
(bad)
scas
repz
jmp
xor
xchg
dec
sbb
repnz
test
cmc
push
addr16
(bad)
cmps
jp
pop
jno
or
xor
pop
adc
jl
pop
sar
xor
mov
xor
pop
xor
loope
ds
dec
push
sahf
push
inc
movs
push
cmc
pop
loop
jne
jge
int3
xchg
mov
ret
inc
cld
aad
rcl
cmc
shr
sub
and
pmaxub
dec
not
call
add
test
push
clc
ds
or
leave
push
fs
and
jl
adc
repnz
sti
add
adc
js
xchg
sbb
dec
cmp
push
out
mov
call
(bad)
xchg
pushf
fst
jbe
sbb
jecxz
or
es
les
cmp
daa
fwait
xchg
test
arpl
int
inc
imul
jl
pusha
push
pop
mov
mov
add
fcmovbe
pushf
aas
leave
lods
xchg
loopne
je
xor
not
xchg
ret
add
xchg
mov
lahf
pop
nop
(bad)
call
push
rcl
push
and
loop
sbb
je
popa
dec
fcomp
(bad)
movs
cmp
jg
call
inc
cli
sbb
popa
fdiv
jno
sub
rol
inc
das
pop
in
outs
add
data16
jno
sahf
not
cmp
inc
cmp
icebp
mov
sbb
mov
or
(bad)
sbb
and
or
lock
das
arpl
add
inc
or
add
mov
or
sti
cmps
imul
fs
hlt
adc
push
cld
inc
retf
test
pop
jae
movs
scas
loope
add
push
outs
sbb
addr16
cmp
xchg
adc
push
inc
push
mov
jns
pop
pavgb
or
std
std
pop
adc
jmp
pop
cs
(bad)
mov
push
cmp
lock
dec
jg
jno
mov
cmp
adc
xchg
xor
xor
or
std
popf
pop
mov
into
dec
cmp
and
cmps
aaa
adc
sub
mov
ja
cs
icebp
std
xchg
das
push
pushf
int
pop
call
xchg
(bad)
lods
jmp
cmc
add
jmp
popf
xor
inc
inc
mov
jge
push
mov
cli
mov
jne
scas
loope
leave
dec
xor
adc
dec
pop
scas
js
call
xchg
jo
and
push
and
je
xchg
jnp
es
outs
pop
adc
or
dec
(bad)
mov
inc
jnp
adc
sbb
test
xor
or
sbb
cmc
mov
xchg
jp
xchg
cld
cmp
or
dec
jo
pop
mov
jl
ss
lahf
sub
mov
xlat
mov
xchg
push
cli
inc
(bad)
adc
out
retf
xchg
mov
dec
repz
repnz
and
mov
xchg
adc
je
sbb
mov
fstp
call
icebp
adc
aaa
sub
pop
(bad)
repz
sahf
(bad)
mov
add
jmp
mov
mov
dec
stos
into
(bad)
fadd
add
add
jbe
pop
out
mov
psubq
pop
fisubr
pop
mov
hlt
ja
psubb
lds
mov
xchg
sub
inc
mov
mov
out
dec
jnp
fcom
dec
pop
aam
jg
mov
int
out
pop
push
and
cdq
sbb
inc
movs
add
push
mov
outs
ss
in
sbb
sbb
pop
mov
int
or
popf
movs
adc
scas
ror
and
push
dec
mov
cmp
movs
ss
jae
das
adc
popf
test
xlat
xchg
jo
in
fsub
cld
xchg
jns
cld
xchg
repz
cmps
add
mov
lds
mov
lods
rol
xor
mov
sub
or
fbld
xchg
jnp
popa
dec
lea
fcmovne
adc
movs
in
ds
ins
and
loope
pop
les
pop
ror
(bad)
hlt
add
jo
dec
ins
ins
or
shl
push
xchg
pop
xlat
test
lock
jb
inc
cli
movs
popf
mov
test
sti
inc
and
mov
push
pop
call
rcr
rcl
add
and
pusha
call
les
out
stc
fisttp
lods
scas
inc
stos
adc
fmul
add
stos
pop
(bad)
lea
lock
in
dec
shl
test
aam
cmp
mov
sub
sub
loop
mov
mov
inc
(bad)
mov
pop
scas
not
xlat
jge
dec
mov
aaa
ins
push
sub
xchg
test
xor
jg
mov
adc
retf
inc
dec
jae
(bad)
sub
or
lahf
leave
xchg
loop
stc
pop
pop
das
clc
inc
sbb
rcl
lea
shl
sbb
call
mov
mov
fs
jp
test
xchg
dec
adc
xchg
push
cld
mov
fldenv
pop
lods
movs
out
lods
in
mov
mov
cmp
popa
mov
jno
mov
js
pushf
ins
mov
cld
ss
push
inc
adc
sbb
data16
push
lahf
sub
ja
loop
xchg
imul
mov
ins
inc
shl
pop
nop
pusha
test
sti
dec
add
aad
and
jp
xor
mov
dec
jmp
sub
mov
inc
not
jb
aad
push
cmp
cmps
adc
outs
xchg
sbb
sub
pop
ja
inc
adc
fwait
push
repnz
jge
loope
jmp
outs
xor
ret
sub
idiv
cs
xor
or
jl
mov
bound
xor
dec
fisttp
mov
iret
xchg
dec
stos
mov
shl
adc
mov
bound
in
cdq
rcl
mov
rcl
xor
adc
sub
cmp
sar
mov
lds
inc
scas
ficom
out
in
lea
cwde
jae
mov
add
adc
pop
sbb
xchg
repnz
sbb
and
cmp
mov
xchg
movs
xor
mov
cmp
scas
push
xchg
push
out
inc
ins
(bad)
xor
add
div
cmps
sub
mov
pop
out
pop
jmp
arpl
adc
adc
and
mov
pop
adc
sbb
jg
xchg
cmp
cmp
sub
lods
sbb
cmp
add
leave
push
and
enter
sahf
jbe
mov
enter
cld
dec
int
add
sub
mov
(bad)
or
pop
fadd
je
scas
jae
stc
mov
sahf
mov
jno
jmp
sub
lds
ins
hlt
xor
sub
jno
push
mov
std
mov
out
data16
je
jg
stos
or
in
mov
adc
in
push
sub
xchg
sbb
mov
aad
in
mov
push
or
clc
xlat
pop
sub
or
mov
fwait
push
pop
xchg
aam
ja
int3
add
mov
sub
ins
and
mov
shr
and
xor
je
mov
or
cmc
dec
cmps
iret
loopne
scas
test
js
mov
mov
js
cmps
cwde
jl
cmp
out
mov
bnd
cmp
mov
lock
test
mov
cmp
sbb
fsub
int3
pop
mov
pavgb
in
loop
js
dec
adc
or
call
pop
scas
aad
mov
in
sub
xor
jg
popf
int3
xchg
inc
xlat
dec
pushf
jo
sbb
cmp
iret
icebp
add
lahf
fld
or
cmp
xchg
sub
xchg
pop
cmp
xor
fidivr
jge
inc
call
cwde
jg
mov
jge
retf
jge
dec
aad
test
or
scas
ficomp
sti
jp
and
iret
pop
scas
pusha
scas
and
jns
gs
adc
in
fs
hlt
lea
xor
iret
add
jo
mov
shr
sbb
jnp
popf
xchg
cmp
dec
add
popa
push
js
in
and
jb
subps
ja
mov
mov
scas
scas
or
sbb
push
or
ret
push
xchg
idiv
outs
es
jno
push
inc
and
lods
aaa
shl
pop
xchg
and
or
xlat
arpl
call
inc
adc
mov
outs
adc
int
stos
sub
ins
dec
mov
xchg
(bad)
lods
ror
cmps
repz
push
inc
mov
or
int
pop
jne
mov
enter
rcr
iret
xchg
lods
shl
test
rcl
xchg
xlat
fsub
test
in
stc
cmp
sub
dec
cmp
jno
int3
jmp
(bad)
(bad)
aas
(bad)
icebp
adc
xchg
cmp
jle
cmp
dec
es
icebp
sbb
test
and
pop
iret
scas
mov
push
or
push
leave
and
ret
dec
mov
cld
(bad)
popa
mov
jg
repnz
jle
sub
bound
pushf
inc
nop
xchg
lea
fstp
das
ret
dec
push
daa
sub
sar
popa
lea
cs
jno
mov
adc
in
(bad)
jmp
jo
jns
and
pop
in
aaa
add
sbb
xchg
cmp
idiv
sbb
ret
(bad)
jmp
or
add
cmp
pushf
xor
ss
out
xor
ret
adc
rcl
or
dec
out
leave
lods
fist
test
dec
(bad)
fdivr
add
scas
test
inc
outs
cmp
mov
movs
into
sub
jae
(bad)
(bad)
loope
jg
mov
addr16
adc
push
(bad)
std
out
mov
lock
fadd
push
sbb
(bad)
push
jne
ss
push
cli
ja
push
xor
jno
movs
call
into
mov
xor
pop
sub
addr16
jp
or
mov
mov
xchg
outs
lock
add
inc
loopne
fld
push
inc
outs
cmp
test
mov
add
(bad)
sub
aam
dec
and
dec
mov
ss
mov
mov
cmps
dec
mov
sahf
rep
imul
fwait
das
shl
add
mov
fs
fwait
iret
inc
jmp
xchg
add
xchg
das
mov
sub
nop
clc
sbb
js
lods
mov
jns
push
cmp
xchg
daa
mov
mov
clc
cmp
ret
adc
mov
and
popa
aad
xchg
fdivp
hlt
jae
shl
je
ret
lock
adc
sub
xchg
int
aas
jmp
mov
pop
leave
and
dec
mov
movs
stos
mov
cmp
dec
cld
nop
xchg
mov
fnstenv
cwde
sbb
sbb
mov
jp
pop
xor
sub
adc
repz
mov
aam
or
pop
leave
cwde
(bad)
mov
int
aaa
or
aaa
add
shr
dec
cdq
cli
lds
movs
dec
outs
das
push
mov
(bad)
xchg
or
sbb
lods
adc
dec
xchg
ins
cs
adc
and
frstor
jge
pop
inc
push
xor
jmp
or
push
ret
inc
inc
movs
jmp
cs
push
xchg
dec
mov
jns
and
cmp
xor
push
add
push
cmc
ins
jecxz
pop
mov
or
clc
pusha
imul
inc
movs
dec
outs
pop
aad
shl
sahf
std
mov
in
fist
sahf
adc
(bad)
xchg
imul
sub
jl
push
mov
add
jb
xor
xchg
sub
cmp
jo
loopne
adc
add
jl
fwait
imul
mov
loopne
test
adc
jmp
jno
(bad)
daa
cmp
aas
es
mov
popa
xchg
push
scas
loope
or
xchg
dec
xchg
sbb
cdq
jl
aaa
dec
mov
mov
(bad)
ins
push
shl
enter
sbb
push
popa
mov
js
and
mov
mov
sub
call
leave
aas
add
or
dec
cmp
or
gs
sub
popf
sub
dec
pop
adc
int3
pop
dec
fadd
fidiv
das
ja
or
jg
xchg
test
lahf
jle
repz
xchg
jge
jae
sbb
jmp
jmp
(bad)
and
rol
and
adc
ins
add
push
popa
retf
fcomp
ins
enter
out
movzx
sbb
fst
(bad)
movs
movsx
test
lea
mov
xchg
int3
cld
fbld
loope
shr
xor
inc
push
fiadd
xlat
cmc
out
stc
ins
in
stc
bswap
adc
cmps
es
loope
pop
mov
call
movs
inc
movs
jbe
fbld
loop
leave
and
dec
inc
xor
scas
fdivr
(bad)
xlat
push
mov
cmps
pop
in
aas
(bad)
lock
sub
stos
loop
popa
mov
sbb
adc
mov
dec
sbb
vmovq
in
aad
mov
jb
loopne
xchg
mov
jae
adc
dec
inc
scas
dec
add
and
adc
in
inc
dec
cmp
mov
push
dec
(bad)
cmps
fwait
test
and
ins
les
lods
sbb
(bad)
jmp
xor
aaa
leave
jns
fsubrp
movaps
or
mov
pop
adc
or
xchg
in
std
xchg
inc
loope
mov
jge
push
mov
cmp
sub
cmp
and
xchg
mov
int3
fcomp
inc
cmp
push
and
pop
cdq
daa
jle
push
mov
cwde
rol
dec
enter
pop
shl
(bad)
push
shl
scas
test
dec
clc
mov
mov
(bad)
pop
xor
aam
retf
add
retf
jae
aad
cli
add
imul
adc
retf
mov
imul
adc
jbe
in
adc
pop
(bad)
fsub
call
add
cmp
gs
sets
adc
jle
pop
sbb
inc
das
aam
pop
inc
push
or
mov
push
mov
lea
sbb
add
nop
iret
jmp
lahf
inc
(bad)
mov
imul
cmp
jne
push
cs
ret
pop
xchg
sbb
inc
aaa
sub
xchg
mov
xor
loope
stc
xchg
mov
push
aaa
pop
push
cwde
outs
mov
(bad)
dec
cmp
push
lock
pop
and
mov
(bad)
mov
ret
push
ss
dec
jmp
jno
inc
xlat
jp
cli
lds
sahf
and
jb
in
in
pop
mov
cs
xchg
add
outs
in
mov
sbb
outs
cwde
ret
jle
cwde
in
repz
jmp
in
inc
sbb
xchg
xlat
jno
xchg
xchg
xchg
adc
in
push
mul
xchg
int3
cmp
pop
dec
xchg
pushfw
or
mov
and
xchg
(bad)
(bad)
mov
lds
in
ds
test
mov
ficomp
fwait
add
jg
mov
(bad)
jg
aaa
push
popa
test
push
popa
push
inc
(bad)
mov
push
or
lods
leave
lahf
mov
enter
jl
rcl
sbb
lock
sub
mov
es
scas
shr
adc
pop
stc
mov
xchg
loope
push
addr16
stos
push
leave
dec
push
jmp
in
jno
jbe
jne
mov
push
cmp
gs
leave
mov
push
sbb
xor
inc
mul
rcl
pop
push
cmp
nop
loop
and
ja
fs
push
mov
ret
ret
mov
xchg
mov
xchg
imul
jl
mov
cmps
hlt
xor
or
sbb
xor
lea
mov
mov
shl
mov
aaa
mov
push
mov
mov
adc
adc
and
mov
mov
mov
xchg
cmp
pop
fs
test
jl
jge
div
pop
in
add
scas
mov
sub
add
pop
mov
into
adc
push
not
iret
push
es
leave
xor
cld
les
daa
fisttp
jae
dec
outs
jo
sbb
jno
mov
scas
push
test
inc
out
cmp
pop
enter
mov
addr16
jo
fwait
popf
mov
ret
hlt
add
popf
test
lods
inc
ret
mov
neg
sub
or
clc
call
pop
fsubr
sub
rcl
sbb
adc
seto
int
xchg
or
xor
pop
pmullw
push
ins
in
sbb
jno
push
movs
pop
loopne
and
dec
enter
stos
test
cdq
fimul
rol
dec
adc
in
stos
cld
nop
rcr
xchg
dec
mov
jbe
dec
ins
jb
xchg
or
sub
xlat
sub
push
push
sub
adc
sbb
push
adc
fwait
push
clc
jbe
mov
ss
cmp
popf
jmp
inc
sbb
call
cmp
inc
pop
and
jnp
push
movs
stos
cs
and
push
sbb
dec
dec
xchg
sub
pop
jo
and
into
not
js
rol
mov
fwait
addr16
or
(bad)
hlt
test
test
std
das
mov
fbstp
fcomip
leave
outs
stos
inc
sbb
pop
(bad)
jle
cld
cmp
call
rcr
test
mov
xor
xor
mov
ret
sub
cmps
jl
mov
add
fwait
xchg
sti
call
repz
inc
sub
and
inc
jecxz
fsub
into
cmp
aaa
push
(bad)
into
pushf
jge
enter
in
daa
out
mov
jbe
retf
jno
shl
push
mov
add
ds
add
adc
mov
adc
xchg
cmc
icebp
xchg
mov
mov
or
sbb
or
gs
push
call
jg
outs
push
xor
cmps
out
pop
daa
mov
or
popf
jae
cmp
inc
or
push
jne
ret
mov
push
dec
sbb
cdq
sbb
mov
into
fld
mov
mov
test
movs
aas
xchg
add
lahf
adc
sbb
jg
sahf
clc
and
adc
cdq
jmp
stos
xor
test
(bad)
out
mov
loopne
and
xchg
mov
retf
xlat
xor
xchg
outs
sbb
lds
je
ret
mov
lahf
xor
jmp
sbb
test
ins
mov
ja
in
xor
dec
inc
push
ret
mov
xchg
mov
cmp
in
cdq
enter
cmps
loopne
jp
fdiv
sbb
fsubr
cmp
cld
imul
add
hlt
ret
mov
dec
mov
mov
arpl
push
lea
daa
inc
ins
ss
and
add
in
or
aam
add
cmp
and
mov
xchg
sbb
fist
dec
sub
xchg
cs
loopne
xchg
ja
test
xchg
pusha
je
out
test
push
icebp
lahf
or
sbb
mov
loope
mov
jl
out
dec
dec
pop
push
fnsave
and
inc
adc
int3
cdq
stc
add
adc
and
aas
aaa
shl
loop
cmc
sub
mov
pusha
xor
xor
xor
lea
mov
cwde
xor
xchg
mov
cmp
bound
cmp
call
xchg
and
mov
mov
aad
inc
xor
aad
fist
clc
inc
loope
mov
xor
aad
jmp
retf
out
out
aaa
loopne
or
popf
mov
test
call
(bad)
jge
push
cmp
jmp
js
aas
add
adc
xor
push
push
dec
es
fwait
xchg
cmp
lahf
movs
and
inc
sbb
xor
dec
jnp
mov
fwait
pop
xchg
or
mov
popa
ret
cmp
imul
adc
mov
adc
jno
inc
mov
sub
fcmovnb
mov
mov
aas
mov
sbb
dec
xchg
xor
pop
xlat
sahf
scas
dec
xchg
xchg
mov
jge
and
mov
inc
(bad)
js
mov
xor
addr16
test
test
xlat
sub
pop
inc
xor
mov
sub
call
(bad)
retf
popa
cld
into
push
aad
dec
xchg
inc
sti
sub
adc
pop
cs
lahf
mov
scas
xor
and
jnp
sub
jg
add
popa
push
(bad)
(bad)
xor
push
mov
sti
dec
imul
loope
(bad)
fadd
dec
mov
inc
cmp
lods
into
and
jmp
mov
cld
xchg
les
sub
ss
and
jg
push
adc
shl
rol
scas
push
or
jmp
fsub
dec
(bad)
(bad)
(bad)
imul
xchg
addr16
aad
inc
push
sti
jns
rol
cmp
lds
jp
fsubr
fadd
mov
ja
pop
adc
pushf
outs
lea
in
pop
lock
imul
fbstp
test
addr16
add
add
subps
jns
dec
mov
fs
test
jae
cmp
imul
dec
aaa
mov
jecxz
fstp
iret
loope
inc
outs
xor
or
fcomp
or
sar
pop
shr
fbld
es
xor
inc
jb
imul
mov
mov
xchg
push
cmps
inc
xor
lods
dec
mov
or
pop
stos
and
sbb
mov
sub
(bad)
adc
mov
xchg
and
sub
nop
cmp
jg
ins
jmp
stos
ds
sbb
in
and
loop
adc
sub
clc
(bad)
sbb
mov
mov
test
xor
dec
repz
outs
fcomp
retf
adc
pop
fwait
push
sbb
jle
stc
dec
jp
pop
out
in
sti
sar
test
jbe
sbb
pop
push
mov
lods
and
add
cmp
inc
repz
xchg
xchg
mov
mov
aas
cwde
or
mov
es
je
fldcw
setg
dec
inc
push
ds
js
retf
cdq
imul
ja
adc
mov
pushf
jge
and
push
les
test
jb
(bad)
pop
ror
iret
dec
add
mov
sahf
xchg
push
pusha
dec
in
(bad)
xchg
cmps
movs
mov
xor
jb
call
and
and
dec
mov
push
sbb
ins
mov
sbb
adc
xchg
xor
fdiv
fild
inc
xchg
shr
dec
push
setnp
pop
mov
xor
(bad)
pop
push
and
cmp
mov
scas
sbb
lods
cmp
dec
rcr
dec
imul
stos
cmp
jmp
sbb
out
cmp
fwait
mov
mov
add
inc
mov
scas
xchg
cmc
add
retf
imul
cs
and
mov
in
cmp
add
fistp
push
inc
inc
rol
lods
fs
enter
mov
pop
jp
sahf
fwait
and
xor
jp
dec
mov
push
inc
leave
jecxz
aaa
stos
inc
cmc
int3
inc
or
or
jns
call
mov
repz
shr
jecxz
je
sub
adc
out
or
dec
movs
fnsave
rol
aaa
or
fisttp
mov
out
sub
push
add
add
push
lods
sti
iret
pop
xchg
mov
gs
sub
or
mov
out
int
and
add
mov
jg
jmp
(bad)
jae
push
popf
js
jno
sub
jns
mov
dec
repz
pop
mov
and
sub
(bad)
fdivr
sbb
xchg
pushf
dec
jmp
push
and
jns
pop
pop
cmp
cmp
js
adc
clc
mov
sub
xchg
pop
or
retf
hlt
fs
je
fistp
ja
out
jmp
sbb
mov
and
mov
sbb
stos
jbe
sbb
cmp
adc
(bad)
sahf
aaa
and
fisub
fwait
push
pusha
pop
fcomp
les
cmp
cmps
scas
(bad)
imul
mov
pop
mov
jg
jo
inc
lock
or
push
jae
add
dec
fidivr
fld
push
and
in
inc
push
test
rol
ds
cmp
ja
jne
icebp
fs
xor
mov
add
test
(bad)
std
ins
jl
imul
fild
sbb
stos
leave
ficom
hlt
imul
xchg
xchg
adc
cdq
loope
sbb
out
mov
dec
pop
mov
sahf
push
mov
setg
bound
(bad)
shl
xchg
mov
imul
jns
es
ins
div
fdivr
das
out
cmps
and
leave
fmul
movs
dec
pop
pop
push
mov
xor
imul
pop
push
ret
inc
sub
rol
cs
mov
mov
cwde
(bad)
invd
call
movs
clc
jb
scas
mov
sub
pop
test
inc
rol
stos
(bad)
in
mov
cmp
add
cmp
jmp
jmp
mov
leave
mov
xor
ds
daa
ss
popf
daa
call
xchg
push
dec
lock
lods
xchg
scas
stos
popa
push
lods
mov
sbb
imul
dec
int3
fisubr
sbb
pop
cmp
leave
xlat
sbb
pop
mov
mov
sbb
je
in
aam
rol
leave
inc
pop
cs
adc
mov
xor
js
movs
add
and
mov
dec
nop
outs
cmps
xor
gs
call
in
and
xchg
sbb
sub
sub
add
sub
ins
idiv
mov
ds
fisubr
mov
lods
not
sti
in
test
loope
mov
mov
mov
sbb
sub
lahf
in
xchg
push
pop
sbb
jmp
push
fidiv
inc
popf
mov
gs
cli
inc
or
cmps
xor
sti
push
sar
cmp
mov
sahf
jae
mov
and
ins
or
jbe
pop
daa
adc
enter
mov
add
sub
sub
(bad)
shl
lahf
push
ins
adc
push
ds
mov
xor
push
nop
ja
push
sti
add
jnp
je
mov
repz
cmc
mov
xchg
mov
out
retf
push
stos
arpl
ffreep
not
adc
fisttp
xchg
mov
mov
add
mov
cdq
add
mov
fst
popf
push
or
hlt
in
sub
pop
jae
int
mov
ret
add
lods
and
mov
mov
stc
nop
add
jg
mov
gs
or
imul
cli
sub
push
movs
xor
xchg
in
sub
mov
(bad)
stc
or
push
jmp
sub
mov
(bad)
cmps
cmp
mov
cmp
ret
sbb
test
mov
cs
aad
adc
in
push
mov
inc
inc
je
pop
pop
inc
sub
cdq
inc
dec
je
push
aam
(bad)
(bad)
xchg
dec
lds
stc
jbe
(bad)
pushf
dec
clc
out
fmul
loopne
icebp
jb
push
inc
aad
stc
aad
jnp
inc
push
enter
sub
out
or
xchg
xchg
fwait
popa
imul
xor
aam
mov
or
push
jecxz
mov
add
dec
inc
cmc
scas
inc
dec
push
push
dec
mov
loope
sbb
add
outs
and
push
scas
(bad)
sub
sbb
or
scas
out
inc
mov
sub
mov
mov
js
pop
les
das
shl
das
stos
enter
mov
add
dec
push
cs
inc
mov
cmp
dec
add
push
mov
push
fdiv
lahf
or
or
add
cmp
ja
in
dec
je
pop
push
dec
sar
jae
test
sbb
loop
push
ss
outs
mov
shr
addr16
in
adc
inc
push
test
add
mov
ja
add
jge
jp
push
pop
test
dec
mov
ror
aaa
fimul
jge
out
rcl
idiv
aaa
mov
mov
jnp
lock
inc
aaa
dec
retf
out
mov
or
jg
cmp
xchg
inc
mov
or
shr
mov
stc
(bad)
fbstp
sub
xchg
jmpw
out
xchg
into
aam
mov
pusha
movs
sbb
and
inc
cwde
sub
hlt
dec
jo
xchg
cmp
xchg
xchg
sub
rol
or
dec
fidiv
xchg
sbb
pop
enter
ds
adc
or
cmp
rcr
movntq
out
imul
push
ins
cmp
xor
(bad)
mov
(bad)
loope
push
pop
mov
mov
aam
shl
push
mov
xor
push
movs
stos
test
jns
cmp
add
adc
ins
sub
out
or
imul
test
hlt
fst
xchg
xchg
sar
pop
fist
sar
mov
jb
fld
pop
mov
fimul
shl
dec
es
addr16
inc
push
sbb
stos
stos
add
aad
gs
les
retf
aad
add
je
leave
clc
sahf
ret
in
mov
scas
jnp
sub
icebp
sub
sti
xor
jmp
mov
or
push
mov
or
push
ins
sbb
(bad)
loop
int3
imul
adc
aaa
int3
cmp
retw
mov
in
sub
nop
gs
test
shl
iret
inc
mov
xchg
fiadd
aas
sub
retf
out
in
or
mov
add
(bad)
loopne
and
xchg
mov
add
ja
test
mov
sar
loop
mov
imul
push
push
mov
adc
or
jne
pop
add
into
jp
js
push
add
loopne
imul
adc
push
or
fadd
inc
inc
mov
mov
mov
and
(bad)
sub
and
mov
outs
pushf
or
add
movs
call
(bad)
ror
out
cmps
aad
rcr
inc
repnz
mov
repz
ror
mov
sub
adc
mov
outs
fdivr
push
push
mov
fadd
fild
out
pop
mov
xchg
fwait
xor
sbb
sbb
mov
adc
dec
sbb
mov
pop
jge
sub
popa
fadd
mov
mov
dec
inc
jecxz
push
leave
jmp
jmp
xchg
jge
imul
and
outs
inc
clc
push
adc
fild
pop
aad
sub
fisttp
mov
scas
xchg
and
imul
ss
mov
stos
aaa
dec
mov
inc
push
adc
test
cli
adc
pop
or
add
inc
aaa
and
shl
out
xchg
cli
push
add
out
repnz
(bad)
and
pop
out
mov
sti
test
add
sbb
(bad)
xlat
cmp
dec
leave
push
test
test
jp
nop
fidiv
xor
mov
xchg
add
ror
push
cmp
pop
mov
adc
ror
pusha
repz
cmp
ret
ror
cmc
sub
jmp
xchg
sbb
push
addr16
cs
ror
jns
imul
(bad)
mov
mov
lods
shl
icebp
stos
push
jmp
push
ja
fxch
push
lods
add
sbb
pop
push
sbb
js
adc
jle
sar
outs
mov
(bad)
xchg
inc
lds
add
test
mov
xchg
pop
mov
pushf
packuswb
mov
mov
in
jbe
dec
sbb
sbb
out
cmp
jecxz
jl
pop
lea
es
sbb
push
addr16
jne
dec
repnz
add
xor
lods
adc
rcr
jp
push
cmp
stos
pop
push
paddusb
push
or
cmp
stos
sbb
into
popf
sbb
mov
ss
cs
test
push
or
cmp
add
pop
out
loopne
inc
loope
inc
add
div
adc
fwait
jle
cmp
je
pushf
cld
test
loop
push
sbb
movs
push
lock
ins
bound
(bad)
addr16
(bad)
stos
int
inc
dec
and
ins
sub
fdiv
jbe
xor
and
push
cmps
leave
mov
jmp
mov
cmp
push
test
mov
mov
out
or
xor
arpl
mov
scas
pop
mov
outs
test
or
and
mov
mov
scas
or
mov
push
mov
jne
push
int3
sub
aad
inc
rol
pop
push
cmp
pop
xchg
mov
sti
aas
repz
add
inc
adc
test
jae
pop
dec
lock
lods
inc
sub
test
cmp
call
outs
dec
jl
outs
mov
idiv
xor
int3
jg
pop
outs
ret
dec
xchg
test
es
jmp
lahf
sbb
pusha
aam
aam
daa
inc
add
xor
daa
not
push
in
push
pop
clc
add
fmul
dec
and
dec
movs
cs
push
add
gs
push
shl
sub
fxch
inc
(bad)
fs
or
sub
fsubr
std
push
xchg
into
sub
test
jb
xor
sub
and
in
aad
sub
shr
jbe
xchg
jnp
pop
scas
imul
jp
pop
inc
aaa
push
add
(bad)
jae
dec
jnp
fcom
mov
cwde
in
pop
mov
test
cmp
adc
jns
(bad)
idiv
cli
sbb
movs
xlat
scas
scas
(bad)
cwde
repz
movs
scas
jl
mov
rcr
inc
clc
int3
test
and
pop
xlat
lea
dec
or
aad
push
cmp
inc
(bad)
adc
mov
xor
rcl
ja
inc
test
mov
retf
jbe
cs
or
push
mov
bound
cwde
out
xchg
or
xchg
pop
jmp
jne
xlat
scas
push
or
fsubr
push
sub
jns
jmp
pop
xor
xor
neg
lods
int3
mov
or
pop
jmp
add
test
and
das
sbb
mov
rol
sbb
scas
cwde
add
scas
dec
mov
sbb
js
out
xor
sub
div
dec
add
sbb
inc
jnp
cmp
out
mov
pop
sub
inc
mov
loopne
mov
pop
loope
sub
mov
pop
movs
mov
nop
and
xchg
loop
inc
leave
nop
pop
icebp
cmps
dec
or
out
and
call
mov
mov
mov
add
xor
fild
outs
popa
pop
shr
cld
jecxz
cwde
(bad)
sbb
push
pop
test
xchg
test
sar
out
cmp
adc
cmps
repz
push
cmp
ja
or
mov
jmp
adc
in
lods
push
jl
stos
inc
or
dec
mov
adc
nop
dec
popa
or
scas
xchg
and
loop
mov
mov
stos
adc
or
(bad)
cmp
sub
push
add
aad
ja
pop
aaa
xor
pcmpgtd
or
xchg
push
cmc
mov
fist
add
xor
in
inc
fisubr
int
addr16
jg
cmps
retf
(bad)
fisubr
mov
mov
push
jmp
inc
xor
add
mov
sbb
repnz
adc
fsubr
call
pop
test
(bad)
xchg
hlt
int
pop
and
iret
(bad)
xor
add
jmp
jns
inc
scas
mov
ins
and
pushf
iret
ficom
mov
ins
popa
sbb
test
(bad)
shr
jmp
jg
push
cmps
mov
das
mov
sub
cwde
in
inc
ins
inc
xor
jne
into
mov
or
push
nop
shl
test
sbb
or
add
mov
mov
jbe
(bad)
ds
inc
stos
iret
dec
mov
fimul
pop
push
dec
rcr
sub
iret
je
int
pop
push
out
mov
std
mov
sbb
cdq
mov
sbb
jmp
pop
pop
hlt
push
rol
dec
xchg
in
add
jmp
loope
test
dec
sub
into
mov
push
sar
leave
mov
punpckldq
mov
(bad)
cli
lods
rcr
fs
sti
adc
cmovo
xchg
adc
into
cmp
mov
jae
or
or
xchg
outs
dec
and
xor
or
mov
fstp
call
rcl
mov
std
cmp
call
jecxz
cmp
aam
outs
hlt
mov
jp
cs
and
stc
pop
fadd
inc
dec
xchg
enter
out
clc
jl
mov
jb
adc
inc
xchg
in
test
leave
and
icebp
pop
mov
repz
movs
out
and
add
xchg
add
popf
cmp
jb
mov
cmc
lods
cld
mov
xor
mov
dec
popfw
pop
popf
push
(bad)
in
dec
pusha
or
push
or
pop
clc
loop
sub
pop
pop
push
add
retf
xchg
div
add
push
dec
pusha
imul
adc
das
cmp
cmp
dec
mov
dec
das
cli
mov
scas
stos
fchs
pop
imul
cld
xor
das
pop
xchg
(bad)
fistp
mov
xor
aaa
cdq
add
pop
adc
mov
sbb
fcmovnb
mov
adc
adc
cmps
ja
jmp
icebp
mov
push
or
dec
test
inc
sbb
rcr
inc
push
repz
jne
xchg
push
inc
out
js
jge
push
retf
or
sub
in
push
stc
rcl
adc
jnp
inc
addr16
test
sbb
pop
cmc
push
xor
dec
and
test
mov
push
inc
jle
push
js
add
inc
ss
or
in
jmp
cli
xchg
push
aaa
mov
aam
and
pop
mov
bound
fwait
jae
(bad)
inc
cmps
fmul
pusha
mov
loopne
ror
mov
cmp
pop
cs
popf
neg
jno
pusha
or
and
cld
lahf
cmps
std
add
popa
popf
jnp
mov
add
cmc
sbb
out
push
lods
fadd
sbb
jmp
adc
fstp
fsub
in
jns
call
call
adc
push
test
stos
mov
jle
inc
mov
aaa
xchg
in
xchg
jno
loopne
sub
in
mov
inc
pushf
outs
in
push
ja
mov
test
or
fcmovnb
push
pop
bound
adc
sbb
xlat
sbb
inc
cmp
fcmovnb
push
in
rol
jg
xor
scas
xchg
loope
push
or
enter
test
push
ja
sbb
js
pop
xor
aaa
test
mov
loope
pop
or
mov
fld
movs
enter
inc
push
or
xchg
test
lea
repz
pop
js
mov
push
in
(bad)
jmp
inc
test
inc
mov
sbb
push
addr16
jno
sbb
or
cld
(bad)
in
or
std
sahf
or
xchg
sahf
jae
rol
cmp
(bad)
daa
(bad)
mov
loop
movs
neg
mov
aas
das
outs
add
scas
mov
imul
es
lea
aas
and
cmp
push
loopne
mov
mov
ss
pusha
ja
add
jmp
in
jmp
xor
lods
push
xlat
xlat
les
outs
xchg
jp
leave
call
das
mov
and
fs
jne
pop
fsubrp
sub
and
xor
xchg
cmc
aad
mov
xchg
ror
outs
add
in
sub
jo
jns
or
xor
cmp
les
imul
repnz
dec
iret
mov
xchg
mov
popa
push
test
mov
pushf
je
lea
out
jg
cmps
rol
stos
cmps
call
mov
xor
or
cmc
fcom
and
add
jo
sbb
movs
loop
std
xor
jmp
xchg
mov
push
or
cmps
lods
adc
addr16
xor
sub
push
stos
retf
mov
jno
outs
add
arpl
jnp
or
lods
jae
aam
clc
mov
les
out
nop
bound
push
dec
xor
arpl
mov
sbb
int3
fwait
hlt
sub
fcmovnb
sub
jmp
adc
sbb
outs
cli
xchg
cmp
mov
repnz
sub
(bad)
xor
mov
push
push
jl
movs
xor
lds
xchg
dec
cmp
xor
retf
fwait
jmp
sbb
push
icebp
cmp
and
push
or
jne
and
xchg
popf
scas
fsub
jae
aaa
dec
mov
sbb
aad
fst
mov
push
mov
fimul
std
inc
xchg
push
std
pop
(bad)
fsubr
shl
js
data16
or
mov
dec
sbb
inc
pop
ret
call
mov
lahf
les
xchg
push
js
cdq
dec
out
xor
pop
js
push
or
leave
push
ret
call
inc
cmp
xchg
cs
(bad)
push
inc
mov
push
dec
int3
mov
and
pop
jno
fcom
rcr
fucomp
fld
pop
lds
add
fadd
clc
and
in
(bad)
fdiv
rcl
push
sub
jo
pop
xor
sub
mov
mov
or
mov
cmp
or
loopne
daa
cmp
xor
mov
sub
push
dec
retf
jmp
in
pop
jno
adc
arpl
mov
outs
ss
xor
cmp
adc
push
pop
icebp
add
(bad)
fistp
mov
shr
cmp
fldenv
ins
dec
stos
inc
aas
jmp
push
and
push
(bad)
cs
mov
sub
test
fcomp
les
mov
pop
mov
sub
repz
dec
int3
mov
mov
cdq
scas
aas
dec
std
xchg
inc
adc
adc
lds
ins
jne
or
or
mov
ret
adc
or
xor
sub
push
pop
mov
jb
out
sar
inc
adc
es
xlat
es
loop
or
gs
es
sbb
inc
and
je
js
nop
pop
jb
push
mov
cmp
push
pop
pop
pusha
jl
div
jge
pop
shr
jg
arpl
lods
(bad)
or
inc
xchg
fidivr
dec
add
push
sub
and
ss
(bad)
sub
mov
dec
pushf
xchg
dec
push
mov
jecxz
adc
sbb
leave
push
jp
std
call
sbb
sbb
push
dec
push
retf
leave
scas
push
add
xchg
(bad)
fist
sar
loop
jl
mov
dec
(bad)
mov
cmp
rol
and
sar
mov
sbb
in
dec
ja
es
int3
out
repz
enter
in
ret
das
test
sti
pusha
lods
xchg
add
loop
lock
cld
mov
cmc
loope
or
jae
je
out
inc
xchg
mov
(bad)
mov
pop
mov
mov
cwde
cdq
and
scas
imul
cmc
pop
inc
sahf
out
cmps
xor
std
je
jo
mov
lea
dec
mov
push
loopne
mov
cmp
xor
call
push
cmp
jg
je
dec
adc
push
jge
shr
jle
bound
stos
xor
pop
lahf
fwait
imul
or
out
push
test
hlt
jae
pushf
popf
dec
int
sbb
enter
aaa
jne
repz
xor
cmp
jecxz
jg
retf
inc
adc
and
rol
or
dec
xor
aas
fcmovb
paddsb
loope
lods
or
pop
outs
out
ficomp
push
mov
mov
jns
mov
mov
(bad)
das
(bad)
sbb
jle
sbb
xor
jmp
inc
fwait
cld
jge
xor
lea
pop
std
test
inc
cmp
cld
and
xchg
add
push
jne
and
push
dec
pushf
out
adc
cld
test
retf
lea
ror
cmp
xchg
pop
cmc
and
mov
out
sub
test
cmp
adc
popf
jae
lea
icebp
addr16
xor
pushf
stos
xlat
cmps
adc
xchg
aas
mul
jmp
cmp
push
mov
pop
fs
inc
jno
scas
push
push
jle
in
adc
xor
mov
cli
fmulp
sbb
sub
inc
fld
mov
int
pop
mov
repnz
ins
sub
popf
mov
ja
pop
jne
adc
fucomi
dec
nop
jmp
jne
pusha
mov
mov
push
xchg
xor
cli
sub
lea
push
sub
ret
push
imul
xchg
(bad)
aad
jb
arpl
aaa
cmp
or
jle
lods
pop
in
and
outs
inc
data16
mov
pop
adc
push
cmps
stc
pop
adc
bound
sti
mov
dec
addr16
outs
cmp
add
push
or
popa
es
aam
loope
fs
inc
ja
dec
lea
cwde
or
std
imul
pop
jb
pusha
add
dec
dec
es
stos
das
or
mov
jg
and
in
mov
std
adc
call
or
loop
add
push
hlt
pop
sbb
push
pop
rcr
add
lods
call
push
sbb
dec
xchg
int
hlt
retf
add
mov
cld
popf
in
int3
sub
mov
(bad)
in
push
xor
inc
dec
je
sbb
mov
adc
dec
jns
cmp
xor
jo
imul
push
repnz
pop
dec
xor
scas
pop
loop
sub
push
cs
fst
fcomp
dec
aaa
pop
test
scas
pop
and
sub
sub
in
or
in
and
pop
fldcw
jo
int3
stos
imul
rcl
jno
retf
sbb
and
sbb
scas
test
lock
pop
retf
pop
mov
(bad)
adc
sahf
mov
ins
xor
jg
out
dec
mov
icebp
jl
(bad)
push
or
sbb
adc
retf
jo
daa
cmp
sub
fprem
push
icebp
iret
fld
or
pop
push
lds
test
mov
push
int3
movs
adc
xchg
leave
std
xor
popa
imul
dec
mov
push
cmp
stc
or
fild
add
push
mov
and
ins
movs
shr
add
sbb
leave
pop
mov
push
rol
jl
dec
mov
ins
inc
call
fmul
outs
and
xor
popf
push
retf
addr16
fidiv
xor
push
cmc
enter
popf
shr
pop
push
shr
sbb
xchg
sbb
(bad)
mov
xchg
jne
mov
ins
popa
add
movntps
jmp
cli
or
ins
aas
sub
push
lock
out
popf
repnz
dec
jl
push
mov
mov
pop
call
sub
addr16
arpl
and
lock
jge
pop
adc
jmp
cmp
xchg
jo
bound
bound
ror
pushf
popa
call
in
mov
xchg
fwait
cmp
hlt
jns
mov
pushf
mov
push
mov
ffreep
fld
enter
jb
pop
ror
xor
cmpps
add
adc
jns
cmc
aaa
dec
fcomp
inc
dec
pop
adc
mov
add
lods
xor
fwait
aaa
gs
mov
iret
lods
jb
stc
pop
push
push
mov
ficomp
mov
stos
add
mov
mov
pop
lods
repz
ins
mov
jns
mov
test
or
test
cmps
lds
jno
(bad)
imul
and
push
int3
inc
out
jle
je
sbb
lods
cmp
pop
inc
shr
test
stc
xor
out
leave
pop
lahf
int3
mov
cs
push
scas
jo
jl
xor
mov
inc
cld
jmp
dec
je
mov
jmp
ror
pop
mov
sbb
add
call
jl
pusha
push
mov
fstp
cmps
push
cmp
mov
push
cdq
(bad)
loopne
mov
xchg
or
lahf
inc
ret
call
dec
mov
in
sub
js
add
shl
jb
xchg
jne
sar
jnp
pop
out
and
dec
sbb
rcr
mov
(bad)
fdiv
stc
mov
ins
and
fcmovb
sbb
les
sbb
sbb
aaa
mov
and
mov
sub
jb
sub
pop
rcr
or
jp
lea
sahf
fild
push
xchg
je
out
mov
xchg
es
movs
stos
into
mov
les
cli
aam
int3
mov
jecxz
xlat
inc
add
hlt
mov
fst
loopne
popf
mov
in
adc
fisubr
add
push
in
shl
and
in
repnz
inc
or
in
fucomip
xchg
mov
or
aaa
jmp
adc
inc
mov
sbb
jmp
outs
(bad)
daa
fsub
inc
js
xchg
test
mov
pop
enter
es
arpl
(bad)
and
loopne
sub
and
mov
or
and
mov
dec
adc
mov
jp
(bad)
mov
repnz
jne
fwait
add
(bad)
sub
out
and
stos
add
cmc
add
xlat
and
(bad)
cld
add
add
sbb
pop
test
mov
ss
setns
pusha
and
les
mov
jbe
mov
pop
out
push
inc
ss
lods
ret
ret
and
shl
xchg
xor
sub
jb
and
or
jae
scas
jns
and
xor
movs
xchg
pop
test
jne
and
push
dec
mov
or
shl
and
mov
enter
pushf
and
inc
adc
test
xor
fptan
push
cmp
adc
dec
sbb
mov
cdq
xchg
out
xchg
mov
dec
pop
test
fldenv
addr16
inc
xchg
mov
mov
push
test
cmp
lock
aad
daa
xchg
test
das
xor
out
sbb
fwait
in
call
lahf
xchg
xchg
cdq
jnp
fistp
stc
je
inc
pushf
xor
jns
(bad)
std
js
push
pop
xchg
cmp
push
mov
xor
xchg
xor
lahf
inc
ja
jmp
mov
push
inc
adc
push
pop
adc
jae
add
inc
mov
jno
lea
jmp
mov
mov
enter
outs
aam
arpl
mov
jecxz
jge
xchg
mov
xor
jl
mov
inc
mov
test
les
jno
setle
or
mov
shr
mov
and
inc
stc
inc
(bad)
popf
dec
imul
push
pop
push
or
push
mov
mov
sar
ret
push
aas
je
push
pop
ror
mov
(bad)
dec
push
jbe
dec
cmc
stos
dec
std
push
in
push
sahf
sub
daa
out
inc
inc
cmps
lods
dec
dec
jns
inc
xchg
push
rol
inc
mov
ficom
adc
aad
add
and
hlt
test
xor
mov
sahf
push
jmp
bound
mov
xor
icebp
xor
in
mul
loop
push
(bad)
lahf
mov
cmp
les
jmp
mov
pop
addr16
(bad)
jmp
cmps
pop
mov
jo
jmp
nop
pop
lds
in
jl
stos
pop
not
mov
call
mov
xchg
leave
pop
push
arpl
je
xchg
ins
dec
or
inc
mov
push
add
xchg
fbstp
iret
cmc
daa
retf
leave
xchg
pop
out
mov
lods
jnp
mov
push
fild
jno
mov
jmp
mov
xchg
adc
and
pop
add
retf
adc
inc
mov
pop
data16
out
das
push
jle
(bad)
sbb
push
addr16
mov
or
lahf
jmp
and
in
out
xor
rol
push
jge
pop
pop
scas
outs
jle
movs
cdq
repz
in
cld
ret
push
mov
nop
jecxz
inc
and
push
sbb
pop
imul
fwait
js
les
xchg
mov
mov
jae
jae
xchg
fimul
jo
inc
cs
neg
xchg
push
mov
test
data16
pop
lods
or
or
push
aad
sbb
sbb
mov
imul
aas
inc
inc
sbb
popf
xchg
add
add
je
pop
pusha
inc
je
lods
inc
pop
push
out
mov
mov
(bad)
icebp
dec
xchg
loope
dec
sbb
(bad)
and
popf
dec
out
pop
add
mov
adc
hlt
inc
sub
mov
sbb
xchg
sbb
mov
das
es
in
les
cmps
pop
in
or
sbb
(bad)
adc
iret
mov
out
dec
inc
adc
push
jbe
mov
gs
pop
mov
and
sbb
sahf
mov
and
xchg
(bad)
ss
call
outs
mov
stos
jo
add
cmp
add
pop
pop
mov
sbb
out
jl
(bad)
add
sar
test
add
pop
mov
inc
ret
push
and
xor
aam
movs
pushf
aaa
ja
jae
rcl
fwait
into
sub
xlat
mov
jmp
sbb
fisub
xor
cli
push
nop
xor
outs
mov
xor
xchg
or
fimul
xor
push
mov
and
jp
in
and
out
ret
lock
fiadd
add
js
push
or
xor
mov
pop
fist
jae
pop
sbb
popf
add
imul
inc
sahf
dec
mov
xor
nop
jg
mov
jne
lods
into
sbb
test
dec
test
iret
(bad)
cmp
xchg
int3
stos
hlt
sub
pop
enter
xchg
mov
aam
push
mov
pop
add
out
sub
addr16
arpl
lea
popa
aaa
inc
(bad)
cmp
push
into
cld
(bad)
cmps
(bad)
(bad)
push
mov
in
(bad)
inc
dec
scas
push
test
and
add
rcr
dec
or
mov
mov
jnp
call
(bad)
cli
adc
mov
push
(bad)
add
leave
call
stos
xchg
and
mov
mov
leave
and
fdivr
cmps
nop
data16
adc
das
rep
stc
mov
adc
adc
pop
rcr
mov
or
pop
sub
stos
imul
add
mov
popf
adc
and
idiv
cdq
out
pop
test
adc
xor
or
xchg
inc
pop
xchg
imul
adc
test
aad
lods
call
and
les
mov
daa
or
pop
xchg
add
xchg
(bad)
jne
and
leave
mov
pop
test
(bad)
mov
xor
adc
add
mov
call
sbb
repz
and
fdivr
out
add
lds
or
in
test
push
mov
cmp
and
nop
add
xchg
pop
add
outs
mov
es
js
mov
arpl
xor
pop
sbb
bound
or
fld
jb
imul
and
pop
or
mov
mov
pop
xchg
mov
sub
repnz
sbb
cmp
mov
adc
and
(bad)
repnz
inc
mov
test
or
shl
imul
mov
(bad)
xor
push
sub
or
psrlw
push
dec
push
cmp
out
not
adc
lods
sub
out
daa
mov
xor
cmp
inc
or
cmp
(bad)
sbb
data16
out
aas
push
mov
pop
adc
push
movs
pop
mov
jb
cmps
xlat
lahf
test
fld
dec
push
cmp
xchg
mov
sub
cmps
sbb
js
jge
mov
fidivr
cdq
mov
jns
or
push
movs
mov
and
xchg
adc
sbb
jb
jns
mov
inc
out
sbb
ss
mov
pop
pop
aaa
loopne
xor
scas
pop
fsubr
mov
push
or
cmpxchg
cmp
leave
sbb
int
xor
jnp
popa
pop
je
(bad)
in
xchg
int3
cmp
xchg
cmp
push
(bad)
popa
xchg
stos
scas
test
cwde
daa
jo
mov
or
retf
rcr
jns
adc
aas
int3
dec
aad
pop
clc
xchg
stos
jbe
xlat
shl
mov
mov
fdivr
cwde
cwde
push
xor
dec
push
(bad)
js
mov
fwait
mov
ret
repnz
mov
cmp
mov
mov
test
mov
rol
mov
mov
sbb
sub
call
dec
repnz
or
sbb
or
mov
aad
dec
ins
mov
mov
dec
faddp
pop
pop
fsubr
push
(bad)
fs
mov
(bad)
and
pop
jp
sbb
mov
or
pop
xor
mov
sub
in
outs
jle
jge
test
add
inc
out
jbe
mov
or
pop
stc
push
adc
inc
scas
xchg
bound
mov
js
mov
jg
xor
(bad)
out
fmul
mov
mov
ins
and
xlat
mov
mov
test
lock
jle
add
and
lds
jnp
jb
mov
push
and
inc
push
hlt
and
lock
push
test
test
push
or
mov
cmp
lods
xor
pop
jns
push
sbb
mov
clc
(bad)
push
cmp
inc
sti
xchg
fwait
pop
repnz
stos
mov
loopne
sub
popa
jle
and
jl
sbb
leave
jmp
mov
ja
mov
(bad)
lods
mov
cli
cmp
pop
mov
cmps
mov
movs
call
mov
sar
pop
sar
adc
inc
add
and
xor
xor
stos
jnp
mov
aas
xchg
fcmovb
dec
aaa
clc
ss
and
and
sbb
ins
cs
and
call
jmp
adc
fdivr
fnsave
movs
pop
mov
iret
fwait
adc
xor
mov
jae
cwde
dec
aad
sub
add
push
cmps
pusha
(bad)
jge
sub
fnsave
mov
movs
scas
sub
or
int
jecxz
mov
mov
push
in
mov
pop
sti
iret
cwde
or
xor
dec
push
outs
outs
dec
mov
ret
sbb
xor
xor
ror
xchg
or
das
or
sbb
ss
mov
push
fild
and
dec
stos
or
sar
icebp
(bad)
pushf
mov
sub
mov
or
lahf
je
adc
punpckldq
add
les
adc
push
(bad)
jno
lods
sub
and
fdivr
sbb
dec
(bad)
fild
add
pop
retf
dec
aam
jne
imul
or
imul
das
shl
xor
mov
add
xchg
xlat
aas
jge
inc
and
sub
inc
mov
add
int3
push
fwait
inc
mov
xchg
and
jl
push
xchg
test
stc
movs
les
mov
loop
loop
dec
push
rol
out
std
retf
mov
ror
sti
movs
sbb
mov
(bad)
loopne
mov
adc
xor
pushf
sar
push
or
div
aam
adc
pop
not
cwde
test
xor
adc
shl
addr16
adc
xchg
jle
or
sbb
(bad)
cmp
jmp
out
shl
arpl
add
xor
mov
add
outs
aas
movs
push
lods
mov
dec
shl
fnstenv
sbb
hlt
pop
arpl
dec
(bad)
ja
jo
(bad)
push
push
cli
push
div
sbb
inc
retf
pop
adc
ret
and
daa
or
pop
mov
(bad)
rcl
std
push
popa
or
cmp
retf
mov
xchg
in
jl
pop
sbb
dec
rol
mov
pop
popa
sbb
lds
lods
clc
idiv
mov
xor
test
xchg
cmps
push
mov
cmp
imul
jle
loopne
mov
bound
test
push
push
out
fwait
pop
push
xchg
ins
or
mov
cmp
dec
fidivr
cmp
sub
pusha
cli
dec
xchg
jp
(bad)
push
xor
int3
les
daa
xchg
(bad)
mov
in
push
(bad)
movs
push
push
cmp
mov
push
mov
xchg
push
das
data16
inc
and
retf
test
and
jp
dec
fild
jne
scas
push
mov
jno
xchg
and
(bad)
inc
movs
mov
xchg
popf
lods
mov
pusha
retf
or
jecxz
or
fstp
push
enter
cmp
dec
addr16
ja
adc
push
push
xor
jg
jns
test
lods
xor
jb
adc
fdiv
stc
jmp
jmp
fmul
inc
and
ror
add
in
add
outs
icebp
xor
jae
hlt
call
jae
jle
icebp
adc
out
pop
xchg
in
(bad)
xchg
push
xchg
out
gs
add
bound
iret
cdq
pop
pop
xchg
dec
inc
xchg
popf
push
pop
jb
cmp
ds
inc
sub
pop
dec
pop
pop
sub
xchg
or
fst
dec
(bad)
and
xor
ja
fs
xor
dec
xor
ss
ja
ret
xor
or
es
jecxz
and
sub
push
inc
ins
sub
add
repnz
or
call
arpl
movs
dec
push
loop
(bad)
xor
xchg
adc
xchg
inc
adc
sub
repz
adc
pop
pop
mov
outs
or
mov
push
or
cli
cmp
ds
jns
jge
cld
js
mov
dec
test
setne
jae
retf
fistp
or
xor
mov
call
jecxz
gs
and
test
popf
mov
add
(bad)
cmp
mov
call
lea
xchg
scas
fwait
mov
pop
xchg
gs
mov
sub
xchg
in
bound
ins
mov
lods
pop
mov
add
mov
lds
or
addr16
js
addr16
clc
and
adc
xor
gs
(bad)
sti
shr
js
or
mov
push
fisttp
mov
jno
mov
push
adc
pop
xor
lods
xchg
daa
imul
(bad)
cmp
dec
sti
es
or
pushf
scas
dec
xor
ss
out
enter
xlat
xor
xor
mov
cs
clc
push
dec
push
adc
out
jae
(bad)
retf
cmp
push
popf
mov
movs
pop
(bad)
xchg
pop
ficom
dec
sub
cs
addr16
repz
in
pop
sti
jle
(bad)
fs
and
add
xchg
js
daa
retf
or
sbb
dec
mov
mov
cmp
inc
retf
sahf
loop
add
cmp
xchg
pop
mov
ss
ror
js
fs
xor
pop
aam
push
sub
rol
jne
jle
test
scas
cmp
mov
cmp
push
gs
ins
mov
pushf
cmp
jnp
in
sub
jecxz
(bad)
das
jl
fsub
and
jo
cli
mov
dec
retf
dec
mov
mov
cmovnp
call
or
fmul
push
rcl
loop
ja
std
pop
and
pop
int
xor
scas
sub
dec
add
xor
call
jp
pop
clc
int3
push
jle
repz
js
ss
sbb
inc
dec
in
sbb
inc
mov
iret
xor
out
cmp
push
call
cmp
and
les
add
mov
cwde
xchg
xlat
xor
clc
jle
and
paddw
inc
xor
sub
mov
outs
dec
and
ret
jmp
and
inc
sub
inc
not
add
mov
mov
pop
(bad)
stos
js
adc
push
sahf
push
jnp
and
add
jle
test
jecxz
jo
int3
jg
dec
push
add
jae
add
loopne
cmp
movs
xchg
mov
cmp
add
std
fidiv
sti
scas
add
mov
fsubp
or
loop
pop
pop
scas
ret
dec
and
push
xchg
push
test
ss
ret
(bad)
or
inc
lea
stos
xor
aad
movd
cld
cld
or
or
fistp
mov
push
xlat
xor
pop
test
das
adc
sbb
dec
rol
addr16
mov
mov
cmp
out
push
pop
shl
mov
mov
fild
or
leave
mov
mov
sbb
adc
push
retf
(bad)
mov
leave
test
and
jnp
std
or
stc
sar
out
lea
jnp
jmp
sbb
mov
jbe
inc
dec
cmp
pop
push
mov
loopne
clc
into
mov
sbb
mov
cli
sahf
xchg
dec
pop
dec
sub
or
cwde
lea
(bad)
repz
dec
mov
lods
cmc
es
sti
mov
fs
xchg
sti
inc
pop
repz
or
sub
push
add
xor
or
xchg
stos
imul
sbb
stc
dec
mov
push
fist
jl
jle
lahf
xchg
aas
mov
fdiv
sub
stos
push
retf
mov
mov
add
punpckldq
dec
push
jmp
mov
dec
jp
mov
push
mov
cs
jbe
pop
or
inc
cli
fidivr
loopne
cmps
xchg
pushf
dec
(bad)
aam
adc
lods
adc
inc
test
jmp
adc
and
mov
dec
pop
pop
jne
lea
mov
aad
inc
dec
jbe
(bad)
mov
sbb
imul
dec
pop
sbb
adc
add
mov
cmps
push
js
aad
cmc
test
inc
cmp
mov
in
mov
sub
stc
push
push
(bad)
mov
push
or
in
icebp
jmp
test
mov
jecxz
sbb
mov
sbb
ins
jo
mov
fsubrp
lahf
ja
out
int3
pop
ss
xor
test
pop
test
out
out
loop
ss
dec
sub
loope
inc
push
fdivr
fs
push
fwait
mov
jo
not
pop
mov
inc
push
mov
mov
mov
mov
sub
pop
pop
in
(bad)
sti
adc
dec
sbb
rcr
(bad)
pop
adc
xlat
jo
jl
fcomp
in
lods
and
mov
xchg
sbb
ret
fcomip
mov
push
push
pop
retf
imul
jo
or
shl
xor
lahf
inc
(bad)
loope
jmp
push
jmp
mov
pop
in
push
dec
fxch
mov
mov
inc
xchg
mov
loope
mov
mov
mov
jl
push
fild
inc
lods
cmps
and
ret
out
xor
fimul
pop
push
ret
push
mov
inc
stos
adc
or
ins
mov
fmul
and
mov
pop
xlat
test
pop
mov
dec
into
in
imul
adc
lods
cmp
ja
and
mov
cmp
add
fs
outs
inc
lea
push
and
cmp
mov
lock
fs
ins
test
mov
lahf
fwait
sbb
jae
and
dec
test
or
fidiv
dec
and
fsub
or
movs
add
int
int
lahf
in
xchg
add
inc
jmp
cmp
xchg
cs
cmp
pop
out
cwde
cmp
sub
push
adc
int3
fisub
shr
sbb
xchg
scas
xchg
call
imul
pcmpgtd
pop
pop
dec
mov
jne
mov
out
adc
xor
xchg
addr16
cmp
inc
stos
stos
xchg
je
mov
xchg
pop
jnp
adc
sub
mov
test
dec
enter
clc
test
mov
lahf
sub
loopne
xor
mov
out
cmp
push
adc
cmp
adc
stos
jns
jle
add
pop
jge
inc
add
test
clc
sbb
popa
fst
vmovlpd
hlt
jmp
xor
test
dec
dec
clc
mov
adc
out
enter
mov
sub
mov
cmp
and
das
fwait
cli
or
aad
arpl
and
stos
jecxz
add
jecxz
xor
xchg
jno
iret
inc
fs
mov
mov
stos
xchg
mov
and
bound
pop
cmp
jmp
cmp
jmp
adc
dec
jns
inc
leave
ins
push
adc
out
pop
jp
stos
mov
xor
ja
std
or
aad
shr
inc
xchg
call
or
int
repnz
fld
jno
pop
ss
add
mov
jb
or
test
gs
cld
loop
lahf
pop
xor
fwait
pop
cli
mov
fisub
mov
inc
movs
pop
jae
cwde
add
add
and
mov
loopne
vpaddusw
ds
pusha
out
(bad)
mov
add
outs
aad
xor
cs
das
push
call
rcl
push
jle
push
cmp
test
sub
fld
fcmovnu
sbb
cmp
jg
xchg
inc
jmp
pop
cmps
out
pusha
loop
test
adc
fwait
pop
inc
add
imul
fwait
cmp
mov
mov
ret
and
test
(bad)
retf
add
add
mov
hlt
push
inc
js
scas
xor
mov
adc
jmp
dec
dec
shl
ror
mov
push
xor
test
mov
push
sti
(bad)
pop
fidiv
stos
dec
inc
stc
imul
xchg
retf
cmp
pusha
push
mov
dec
xor
xor
add
push
jae
pop
pushf
mov
fdiv
cmps
mov
xlat
xor
mov
add
lods
pop
shl
retf
sti
pushf
movs
xor
push
shr
inc
sub
lds
scas
jb
xor
pop
xor
xor
jne
mov
xor
push
and
mov
aad
repnz
scas
fwait
test
inc
mov
mov
and
ja
fadd
pop
add
jbe
cmps
popf
mov
call
or
daa
or
xchg
int3
aaa
jne
push
push
into
stc
and
fs
adc
and
loopne
and
cs
sbb
sub
ins
dec
aad
scas
add
cwde
fchs
jae
jmp
lods
pop
inc
sbb
and
jnp
dec
mov
fnsave
mov
stos
data16
sti
pop
and
aas
dec
hlt
inc
sbb
js
test
inc
adc
clc
outs
dec
rcr
inc
sub
in
adc
sub
mov
push
sbb
dec
mov
mov
mov
retf
dec
sar
ret
xor
fldenv
cmp
dec
cmp
adc
add
call
in
push
jge
pop
int3
scas
or
sub
jbe
cmps
fist
dec
mov
push
add
lods
not
dec
js
enter
(bad)
test
sub
mov
inc
and
out
out
xor
push
pushf
aaa
daa
mov
out
adc
pop
cld
addr16
inc
es
jnp
xchg
dec
stos
xchg
mov
add
out
push
rol
pop
adc
inc
and
xchg
mov
in
in
dec
xlat
and
sub
push
push
or
movs
fcomp
mov
outs
or
or
mov
aam
xchg
xlat
daa
ds
call
pushf
test
out
sahf
cmp
pop
jmp
das
ds
into
(bad)
pop
add
push
jge
sbb
xchg
shl
jecxz
jl
test
mov
and
jl
xchg
cmps
dec
inc
movs
inc
in
rol
(bad)
cmps
call
mov
lock
push
movs
sbb
fcomp
repz
retf
mov
jecxz
pushf
ja
arpl
idiv
fnsave
popa
pop
cmc
cmp
xchg
add
pop
fwait
push
sub
dec
rol
xchg
xchg
in
dec
daa
loope
push
mov
mul
cmc
mov
int
pop
pop
cmps
test
jle
xchg
sub
push
out
fsubr
cmp
aaa
inc
addr16
icebp
dec
cmp
jb
add
(bad)
push
daa
xchg
push
and
sbb
mov
cld
adc
ror
jle
and
pop
sub
pop
aad
outs
dec
pop
(bad)
inc
mov
xlat
popa
xchg
test
mov
in
outs
loop
jo
dec
popa
add
xor
or
lods
les
mov
es
mov
jmp
and
xor
mov
cmp
iret
jmp
adc
and
daa
pop
pop
xchg
test
xchg
inc
adc
leave
mov
adc
inc
stc
sub
aas
les
es
adc
mov
push
mov
pop
sub
(bad)
cdq
push
std
iret
xchg
sbb
jg
sbb
sahf
xchg
xlat
xor
dec
xchg
scas
mov
shr
xor
jge
sub
inc
fdivr
cmp
jge
jae
xchg
jg
rcl
daa
sbb
xchg
or
pop
xor
dec
in
mov
cmps
push
xor
ror
loop
iret
call
and
pop
pop
mov
pop
(bad)
imul
ds
xchg
add
cmps
xchg
cmps
test
sbb
pop
movs
adc
scas
add
and
das
cs
jb
mov
mov
cs
mov
push
sbb
loopne
sbb
imul
xor
and
dec
shl
movs
(bad)
(bad)
xlat
ret
inc
sbb
inc
arpl
test
push
mov
in
dec
das
push
outs
pop
xor
lods
cmp
sbb
test
hlt
sub
shl
add
dec
scas
xor
pop
icebp
push
das
mov
loop
add
mov
das
sub
cmp
loopne
lods
loop
pop
shl
retf
lock
(bad)
jmp
lea
or
cld
mov
jo
loop
mov
outs
ds
outs
fmul
sbb
jle
ja
sbb
inc
shr
rcl
sub
pop
ins
hlt
mov
sti
mov
stc
xchg
mov
jl
arpl
and
jae
xor
loopne
aam
dec
inc
iret
push
cmps
nop
arpl
ds
movs
sbb
addr16
dec
in
jo
push
aam
js
sbb
xor
ds
mov
ror
mov
push
movs
int3
loop
xchg
jl
cs
mov
fisttp
out
test
cmps
addr16
xor
ret
call
stc
mov
or
xchg
add
push
and
test
outs
dec
daa
push
push
xchg
rcl
lods
sub
mov
xchg
nop
jecxz
jle
sub
mov
dec
mov
cmp
mov
lock
pop
mov
cmps
mov
jb
sbb
in
jo
das
sbb
nop
cwde
cwde
bound
popf
dec
sub
mov
push
and
xor
pop
jae
adc
sar
cmp
lahf
and
dec
gs
mov
sub
stos
sub
jb
repnz
push
or
repnz
retf
or
xor
push
mov
inc
out
cld
inc
and
mov
(bad)
push
mov
call
jecxz
pop
das
gs
int3
fwait
and
adc
pop
sub
jb
sub
mov
inc
sbb
cmp
call
les
popa
imul
jno
cmp
mov
sti
sbb
or
mov
xchg
sbb
movs
lahf
loop
cmc
retf
cdq
pushf
(bad)
(bad)
call
sub
cmp
loop
into
jne
aaa
lods
pop
xchg
xchg
push
jmp
fadd
pop
mov
add
jp
movs
pop
mov
inc
iret
adc
ja
mov
push
sbb
or
ficom
data16
js
fdiv
cs
(bad)
adc
cs
push
mov
loop
dec
pop
add
jmp
dec
es
aad
addr16
repnz
test
pushf
lock
pop
lods
jmp
cmp
dec
iret
imul
pop
int
adc
mov
bound
adc
repz
push
jb
sbb
in
cmp
push
mov
js
adc
and
outs
sbb
push
addr16
sub
into
pusha
mov
pop
out
movs
dec
mov
push
push
and
lock
inc
xor
push
mov
fdivr
and
fst
mov
push
sub
retf
cmp
ss
mov
adc
aas
mov
inc
adc
inc
add
es
or
jne
stos
inc
jne
stos
mov
(bad)
push
pop
popa
xor
lods
inc
fwait
sar
sbb
push
cmp
loope
mov
mov
cmp
xchg
ja
repnz
cmps
mov
mov
pushf
fcom
scas
mov
pop
js
je
clc
mov
aam
mov
lods
push
ret
push
pop
push
pop
ins
pop
pop
pop
jmp
loope
es
loope
lock
push
call
cli
sub
mov
or
mov
pop
mov
cmp
sti
dec
imul
je
lods
dec
add
jne
jp
addr16
pop
and
repnz
iret
and
jecxz
inc
xchg
not
and
fst
leave
fcomp
in
(bad)
pop
mov
cdq
fwait
sub
adc
std
scas
dec
fcomp
jnp
fwait
add
jnp
nop
test
jnp
scas
xchg
mov
jecxz
enter
test
and
aaa
jmp
cmp
dec
int
cmp
dec
js
jle
inc
fmul
mov
data16
rcr
pop
push
in
xchg
xor
fistp
jb
lds
in
dec
cmps
cmp
sub
pop
pop
loop
sbb
sbb
fs
fcomp
mov
shl
movs
cmovo
inc
pop
lea
xor
std
or
mov
mov
in
push
adc
cmp
jg
mov
mov
adc
into
add
rol
sbb
inc
inc
add
popf
mov
push
or
repnz
push
add
popa
jbe
push
mov
sbb
bnd
and
xchg
cmps
xchg
je
push
push
sub
add
data16
xor
stos
jmp
pushf
aad
pop
jb
aaa
test
sub
nop
mov
hlt
sub
outs
and
xchg
(bad)
(bad)
lea
adc
xchg
stc
lahf
fnstcw
add
push
cld
out
push
inc
(bad)
jae
cmp
int
div
cmp
neg
in
xor
or
ds
xchg
scas
xor
hlt
add
xlat
cmps
test
and
push
pusha
xchg
call
bound
push
movs
int3
lock
sahf
push
and
push
shl
add
pushf
mov
xchg
loope
inc
dec
and
loop
enter
dec
leave
inc
xor
adc
cmps
out
retf
sub
ret
mov
mov
iret
inc
cli
js
(bad)
push
mov
mov
and
cmp
fild
rol
mov
adc
ds
push
cmp
popf
ins
fadd
add
push
fisubr
stos
(bad)
(bad)
dec
into
sahf
jnp
push
stc
in
data16
mov
sti
mov
aas
adc
retf
push
dec
ins
mov
out
bswap
or
rcr
mov
es
jle
aaa
add
out
int
add
addr16
arpl
mov
sbb
cdq
push
jp
(bad)
jnp
jae
icebp
sbb
test
adc
cli
xchg
pop
bound
xchg
inc
push
sbb
fnstsw
out
ficomp
hlt
inc
jnp
sub
push
mov
cmp
mov
mov
cmp
mov
in
xor
mov
loop
outs
jae
imul
mov
adc
push
daa
adc
out
cmp
mov
cmp
iret
imul
dec
rol
fidivr
push
mov
push
gs
repnz
push
xor
sub
mov
inc
or
pushf
call
adc
xchg
inc
lahf
push
aas
enter
mul
ja
test
add
sahf
jge
mov
addr16
lahf
dec
ins
mov
inc
movs
pushw
daa
sub
enter
sub
rcr
push
sahf
mov
mov
es
xchg
add
or
pop
adc
push
inc
inc
(bad)
enter
sti
(bad)
mov
ds
je
das
jp
xchg
lds
push
mov
je
enter
popf
or
inc
mov
scas
jno
out
ret
stos
add
fs
cli
or
mov
ds
xlat
mov
adc
das
jo
in
inc
neg
setg
xchg
(bad)
out
iret
add
js
in
cmp
jns
je
(bad)
sti
int3
sbb
xor
int
dec
ror
sbb
lea
scas
inc
jae
sub
cmps
cmp
outs
(bad)
mov
call
imul
mov
test
fild
scas
mul
pop
cmp
push
sub
xchg
cmps
mov
mov
sahf
push
stc
push
mov
mov
aad
fs
in
add
cmp
leave
xchg
stos
outs
jmp
jo
inc
xchg
(bad)
retf
gs
bound
lods
xchg
cli
mov
int3
cmp
dec
jmp
in
mov
mov
mov
bound
sbb
pop
xor
daa
outs
sbb
push
sbb
cld
and
push
adc
lea
pusha
cli
push
or
fnsave
retf
pop
cmp
or
les
mov
scas
jnp
jne
push
dec
sbb
bound
lahf
cmc
aas
stos
inc
jnp
cmc
pushf
push
adc
xlat
pushf
std
jp
mov
pop
test
xor
jbe
add
lds
cmc
dec
sbb
(bad)
pop
ja
repz
leave
xchg
(bad)
hlt
je
stos
mov
pop
inc
xor
idiv
push
popf
pop
stos
mov
xchg
sar
call
sbb
push
mov
cmps
mov
lea
push
inc
inc
clc
cmp
sar
mov
retf
out
jno
or
popa
pop
mov
ins
bound
pop
push
dec
xchg
icebp
sbb
push
cmp
gs
loop
cmp
adc
popf
out
add
arpl
xor
cmps
mov
dec
mov
mov
add
ins
std
and
jnp
sub
std
into
pop
push
mov
stos
js
(bad)
fidiv
add
sbb
fisub
add
imul
mov
mov
pop
test
lahf
mov
js
xchg
jge
jo
in
cmp
push
cmps
xor
and
push
leave
and
call
mov
imul
or
pop
(bad)
cmp
pop
and
sub
dec
push
enter
cmc
push
stos
or
ja
mov
jbe
mov
aam
outs
(bad)
(bad)
in
in
inc
pop
or
retf
repz
into
in
fdivr
mov
xchg
cmc
aam
pop
arpl
jl
pop
in
inc
push
int
cmp
dec
enter
pop
fcmovbe
mov
out
adc
pusha
ror
(bad)
mov
movs
cmp
pop
jno
mov
or
(bad)
or
mov
xchg
xchg
imul
scas
ret
or
sbb
inc
pop
sub
xchg
add
imul
adc
xor
cwde
lahf
sub
push
call
mov
push
or
in
imul
rcl
or
mov
je
(bad)
repnz
sar
sub
xor
or
imul
test
mov
dec
cmp
pop
rcr
ret
or
jmp
(bad)
stos
cld
fstp
shl
push
pushf
loop
inc
adc
pop
mov
pop
fdiv
vpsubb
ficomp
shr
mov
push
shr
add
popa
pop
rol
sar
cmc
mov
and
push
aas
les
in
sub
rcr
sub
sbb
fbld
sbb
minps
pusha
xor
lods
aad
mov
jb
repnz
jle
cli
std
jae
shl
jae
cmp
shr
and
sbb
fnstcw
dec
inc
popa
inc
jge
int3
dec
test
inc
aad
xchg
test
push
div
inc
sti
fsubr
retf
(bad)
sbb
ins
xchg
adc
fcmovnb
je
jns
fs
hlt
xchg
push
mov
sub
cmc
cs
pop
dec
xchg
adc
mov
sbb
cmp
(bad)
es
cli
sar
js
ins
js
add
mov
fist
mov
into
cli
call
int3
lods
popf
rcr
cmp
aad
sbb
pushf
fs
aam
pop
mov
adc
pusha
ins
inc
aaa
cmp
in
(bad)
cmp
stos
std
cmps
cmp
sbb
inc
xchg
loop
jnp
bound
out
xchg
test
and
icebp
or
js
jecxz
add
xchg
cmp
mov
addr16
jae
cmp
loopne
dec
mov
cmp
arpl
lahf
pop
pop
pushf
mov
movs
push
cmp
mov
mov
(bad)
mov
dec
adc
dec
pop
jne
or
into
daa
xor
mov
addr16
fwait
rcr
or
(bad)
in
ins
xchg
clc
jmp
mov
mov
pop
ret
int
je
lods
cmp
(bad)
je
jo
push
xor
pop
stos
adc
mov
inc
icebp
dec
add
xlat
mov
jg
(bad)
push
mov
inc
cmp
sahf
retf
inc
and
cmps
fidiv
not
xchg
mov
sub
mov
aam
sub
daa
inc
inc
push
in
sub
sahf
xor
xor
inc
in
xchg
xchg
rol
lods
test
inc
cmp
jne
mov
xlat
aaa
aad
cdq
xchg
and
jp
dec
mov
jnp
fisub
sbb
mov
mov
sub
mov
add
outs
xchg
mov
pop
(bad)
aaa
daa
mov
mov
push
mov
pop
pushf
mov
mov
shl
imul
jb
xor
inc
pop
(bad)
fisttp
movs
dec
mov
dec
sub
push
cmp
outs
ins
xor
cdq
pushf
push
cdq
xor
popa
sti
int
in
inc
idiv
add
loop
xchg
add
push
mov
sahf
fs
xchg
sub
sub
mov
push
mov
pop
push
pop
fsubr
sbb
pusha
icebp
test
inc
cmp
int3
mov
rcr
or
xor
pop
mov
das
and
daa
push
outs
pop
iret
leave
jp
mov
xor
pushf
(bad)
ja
jae
jecxz
sub
jnp
ja
fs
call
push
cmc
repz
lds
or
pop
cmp
nop
test
mov
or
inc
pop
stos
jns
call
outs
stos
mov
ficom
clc
lea
loope
aad
add
scas
fdivr
mov
ss
int
fstp
dec
and
loopne
pop
(bad)
jne
std
jne
or
lods
leave
push
pop
sbb
fdivr
sti
lods
inc
or
retf
pop
mov
out
clflush
loopne
pop
and
sub
in
or
mov
(bad)
stc
fwait
imul
cld
adc
mov
mov
mov
dec
sub
(bad)
in
js
mov
cwde
(bad)
enter
daa
rcr
sub
mov
or
(bad)
pop
or
jge
pop
(bad)
je
loopne
adc
push
push
(bad)
sbb
ds
adc
cwde
and
leave
adc
cmp
popa
sub
push
jns
rcl
cmp
rcr
fbld
test
sub
mov
cdq
push
fiadd
test
ret
fmulp
mov
sub
leave
ds
aad
arpl
add
movs
je
and
pop
aad
lahf
and
cmovle
and
(bad)
and
movs
stos
lods
mov
jmp
adc
cmp
mov
xor
dec
std
adc
xchg
out
cmps
stos
add
and
inc
xor
loop
daa
mov
hlt
retf
in
inc
jns
pop
push
mov
mov
mov
loope
cmp
shl
outs
sub
adc
leave
or
outs
int3
inc
adc
jb
sbb
test
aam
ficomp
dec
mov
enter
es
shr
xchg
push
je
lock
mov
mov
es
lahf
add
pushf
popa
and
ss
lods
idiv
fwait
pop
ins
popa
sbb
loop
dec
sub
mov
pop
jns
mov
push
push
mov
or
clc
mov
dec
mov
mov
ins
lahf
ret
shl
push
pop
lods
pusha
ffreep
and
mov
inc
sbb
jbe
cmps
out
dec
mov
push
(bad)
mov
xor
adc
stos
inc
iret
and
pop
inc
dec
or
push
int3
rcr
je
jno
pop
aaa
inc
push
sahf
sub
sbb
xchg
inc
ds
js
shl
pop
gs
clc
into
inc
push
jle
test
and
jmp
aaa
jnp
out
mov
fstp
jmp
sti
fnstenv
jnp
adc
push
stc
dec
push
xchg
mov
mov
push
aas
arpl
xor
xor
xchg
test
sbb
pop
in
mov
cmp
sub
jmp
cli
jg
jmp
fidivr
inc
(bad)
pushf
pushf
adc
mov
mov
jns
lahf
add
je
xchg
lods
mov
ja
and
jo
adc
jns
push
std
dec
jl
pop
and
or
shr
sbb
push
and
dec
sbb
clc
pop
aas
mov
xchg
fadd
sbb
xchg
call
fst
jmp
dec
cmp
mov
out
add
or
jae
shl
imul
inc
push
pop
pop
or
(bad)
stc
rcl
pop
adc
pop
pop
xchg
add
or
call
fistp
(bad)
cmps
scas
pop
mov
sub
sahf
mov
jb
repnz
aam
pop
cwde
add
mov
xor
enter
adc
adc
mov
cmp
adc
(bad)
mov
in
mov
xor
icebp
jo
and
dec
mov
hlt
imul
aad
xor
inc
jp
jge
mov
(bad)
fbld
pop
sar
add
pop
call
jne
pop
nop
xor
(bad)
fistp
rol
cmp
adc
cmp
in
jb
idiv
xchg
aad
lahf
pop
xlat
sbb
(bad)
(bad)
mov
xchg
mov
(bad)
in
inc
mov
cli
cmp
loopne
lock
adc
push
cs
add
pushf
pop
int3
fldenv
xchg
sahf
or
ins
aaa
ret
rcl
aaa
mov
fs
in
(bad)
fisubr
xchg
rep
test
xchg
imul
fisttp
adc
call
in
es
or
pop
push
or
and
pushf
mov
jg
mov
lods
popa
les
push
push
js
(bad)
and
xor
adc
and
adc
arpl
mov
std
dec
push
mov
push
ins
mov
jns
pop
popf
push
and
inc
adc
inc
ret
outs
test
ret
jb
cmp
adc
inc
call
push
push
(bad)
std
jb
(bad)
fcom
dec
mov
inc
ja
adc
fwait
push
dec
das
pop
loopne
adc
lods
push
xor
adc
adc
push
rcl
inc
popf
inc
xchg
in
pushf
mov
loope
sbb
push
inc
popw
or
sti
mov
xchg
and
imul
add
stos
pop
xchg
lds
je
stos
lahf
dec
inc
gs
shl
push
or
push
mov
jbe
adc
jno
xor
js
shr
daa
lods
rol
mov
stos
cmc
dec
(bad)
out
mov
repnz
nop
aam
and
pop
inc
addr16
xchg
ret
lock
ds
xchg
pop
inc
sub
mov
add
xchg
sbb
movs
jns
das
pop
inc
in
retf
out
out
scas
fwait
and
push
pop
stos
and
mov
xor
push
inc
mov
ds
mov
mov
test
mov
scas
xor
mul
pop
xchg
addr16
cmp
sub
scas
push
aam
inc
push
push
sbb
jle
xchg
adc
xchg
or
int
test
js
dec
pop
push
dec
and
int
mov
jmp
fild
and
xchg
xor
jp
sub
scas
pop
push
push
(bad)
call
mov
mov
xor
jge
sti
push
es
add
pushf
ja
lock
dec
xchg
fcomp
in
mov
test
mov
call
push
loop
jp
je
scas
push
pop
cmp
rcr
pop
retf
xlat
es
mov
(bad)
fwait
je
xchg
push
mov
cmp
out
das
aam
outs
daa
aas
dec
into
fwait
(bad)
retf
ficom
lahf
scas
cmp
pop
mov
out
push
aad
pop
hlt
mov
lods
mov
pop
lds
jo
jmp
out
dec
mov
jecxz
inc
sbb
push
xchg
inc
jle
icebp
repnz
call
sbb
xchg
addr16
leave
jle
rcr
mov
add
xchg
mov
pop
add
fsubr
fldenv
mov
pop
js
clc
push
dec
stos
sti
and
loopne
call
and
jmp
or
xchg
mov
repz
popa
and
cmps
out
stos
xor
and
sbb
test
push
mov
sbb
or
fidiv
sbb
iret
leave
pop
xchg
scas
cmp
mov
dec
clc
cmp
cwde
cmc
push
aaa
sub
test
bound
sahf
jb
mov
mov
pop
inc
icebp
(bad)
push
ror
pop
(bad)
hlt
out
mov
cmps
xor
inc
sbb
jo
sub
pop
pop
push
xor
neg
ds
inc
imul
push
jns
inc
iret
jno
out
(bad)
cdq
cmc
pop
ss
inc
and
imul
test
rcr
in
mov
repnz
mov
add
sar
xchg
aad
test
mov
int3
sahf
icebp
sti
mov
dec
inc
inc
xchg
jle
or
pop
movs
adc
push
lods
pushf
inc
xor
mov
out
ret
and
stos
cmp
xchg
fcom
mov
xchg
xor
gs
scas
int
xchg
xlat
lds
cli
test
jns
jmp
cmc
pusha
pop
inc
ja
(bad)
jnp
aas
xchg
hlt
loopne
outs
adc
call
sub
push
das
js
inc
mov
fild
or
(bad)
fucom
xchg
push
shl
or
sub
jecxz
jnp
push
loope
mov
daa
pop
or
sahf
(bad)
cmp
push
xor
pop
test
sbb
inc
inc
outs
loope
jecxz
enter
push
inc
push
stos
dec
push
clc
retf
movs
call
loopne
dec
retf
sbb
gs
sti
or
mov
xchg
fs
jl
test
test
leave
inc
push
loope
pop
and
arpl
or
imul
adc
xchg
cmp
pop
fild
ins
inc
sbb
cmps
xor
in
ror
pop
sbb
popf
jnp
dec
push
push
xchg
aaa
dec
loopne
mov
(bad)
retf
mov
leave
out
icebp
jb
sub
aaa
bound
and
sub
mov
and
xor
movs
and
movs
stos
(bad)
fnstcw
movs
push
or
aad
sub
cld
jmp
jg
mov
or
pop
call
call
sub
outs
add
mov
adc
sub
jle
cmp
or
sub
ret
xchg
jmp
aam
arpl
pop
mov
xor
cmp
adc
jns
or
test
xchg
xchg
cmp
sub
mov
fs
sbb
mov
jle
(bad)
push
jbe
mov
popf
xlat
dec
and
ror
mov
popf
daa
adc
or
das
stos
xor
or
jg
daa
jecxz
or
fadd
mov
cmc
leave
out
into
imul
sbb
sub
pop
icebp
js
mov
mov
clc
mov
fistp
ds
mov
std
pusha
ret
mov
add
cmp
pop
add
mov
popf
lahf
add
shr
outs
adc
mov
cli
leave
nop
std
in
pop
les
jle
sub
mov
pop
sub
fisttp
and
mov
movs
in
cmp
push
jnp
xchg
cmps
pop
xchg
push
jmp
dec
mov
push
pop
lock
jg
aad
cs
(bad)
loopne
xlat
cmp
pop
sbb
inc
jne
adc
mov
pop
pusha
shl
xchg
dec
push
inc
stc
mov
nop
(bad)
out
test
test
dec
jl
mov
fild
cmp
out
adc
lds
push
cmp
(bad)
test
dec
fwait
(bad)
jns
rcr
ss
jne
cwde
imul
out
pop
adc
fcomp
retf
std
and
clc
adc
adc
sti
adc
lods
fdivr
sub
pop
loope
mov
xchg
aaa
cdq
and
inc
dec
inc
daa
shl
mov
xor
push
sar
int
jno
(bad)
ret
cmp
leave
in
stos
sub
jbe
xchg
xchg
pushf
mov
and
cdq
test
lock
out
mov
sti
mov
inc
bound
std
push
add
sub
jmp
fiadd
xor
je
imul
loop
xchg
cmc
mov
pop
test
adc
xchg
iret
xchg
xor
nop
pop
adc
stos
add
push
leavew
pop
mov
or
(bad)
call
stos
shl
retf
inc
cmps
(bad)
fbld
adc
ds
(bad)
and
pusha
cmp
out
xchg
rcr
push
cmp
out
test
dec
mov
add
xchg
loopne
(bad)
aam
stos
enter
mov
adc
repnz
nop
xchg
pop
sbb
and
scas
sbb
dec
pop
xchg
int3
mov
loope
push
fincstp
ss
jl
inc
(bad)
fst
cmc
daa
dec
shl
add
sbb
mov
out
pop
push
xor
xor
push
les
imul
aaa
ror
push
cmp
or
and
mov
jmp
aaa
and
mov
iret
lea
ins
adc
mov
mov
add
inc
in
and
cdq
loopne
sub
retf
in
push
or
cld
xor
cld
sub
ret
mov
jle
sbb
jmp
fistp
shr
and
test
stc
mov
mov
in
pop
cli
ins
(bad)
mov
jb
jne
loope
mov
ins
je
ins
mov
cmp
test
sbb
mov
je
adc
pop
xchg
ins
mov
dec
lds
ss
dec
stos
cmp
or
fucomp
cmp
dec
and
jg
inc
out
push
fs
xor
and
adc
call
retf
sbb
pop
ret
sub
fimul
xor
cmp
xchg
jns
sbb
lea
(bad)
and
(bad)
clc
cmp
xor
dec
cmp
icebp
cmp
fld
sahf
push
mov
mov
xor
add
test
and
rol
movs
imul
jge
(bad)
and
das
out
sahf
and
sbb
or
sub
inc
rol
out
mov
test
icebp
loope
sub
xor
jle
add
loope
inc
jb
pop
retf
rol
jmp
cmp
sbb
stos
xchg
sar
(bad)
jmp
ins
dec
into
sar
adc
fbld
adc
push
sbb
dec
adc
xor
cmp
fisttp
(bad)
scas
and
in
fwait
jmp
into
not
loope
out
or
cmps
xor
retf
out
or
call
push
or
test
cmc
dec
mov
mov
or
leave
pushf
dec
fstp
lahf
dec
mov
pop
sub
or
add
ror
(bad)
lods
push
or
(bad)
push
jp
movs
add
int3
or
retf
jmp
cmps
and
popa
out
dec
call
in
push
iret
retf
popf
jmp
adc
sub
xor
mov
xchg
xchg
mov
icebp
mov
out
jge
adc
mov
push
loop
or
xor
loopne
xchg
test
mov
sahf
inc
packuswb
xor
mov
add
jbe
jae
mov
xor
cli
ret
aad
or
aad
jg
(bad)
pop
jg
inc
loopne
(bad)
popa
adc
mov
inc
loop
dec
sahf
mov
add
imul
dec
mov
push
cli
xchg
mov
xchg
lea
stos
dec
xchg
int
pop
xor
adc
fnsave
lock
in
in
jbe
add
fld
icebp
mov
push
std
enter
and
xchg
test
dec
sbb
xchg
or
pop
or
pop
xchg
add
ret
aas
sbb
nop
jecxz
and
sbb
push
dec
ja
out
mov
dec
popf
into
(bad)
fsub
and
and
scas
and
and
out
stc
sbb
sbb
and
adc
push
adc
ins
sahf
pop
add
pop
out
mov
dec
xchg
sbb
dec
enter
xchg
jns
outs
mov
hlt
sub
mov
pop
outs
pop
jno
popf
arpl
cmp
test
push
jo
mov
add
hlt
out
mov
div
mov
push
lahf
dec
mov
jecxz
ror
mov
mov
dec
stos
xchg
dec
arpl
cdq
or
push
fisub
or
push
xchg
sub
popa
mov
out
add
mov
jo
into
shl
dec
xchg
fiadd
jae
sbb
pop
loopne
popa
outs
xchg
jmp
sub
pop
jnp
aad
push
imul
leave
pop
lds
fimul
mov
mov
xchg
inc
js
imul
lods
test
popa
add
mov
inc
call
gs
xor
push
cmp
dec
fldenv
mov
fidivr
jg
stos
xchg
fwait
inc
xchg
test
inc
nop
js
add
retf
jmp
bound
push
cs
nop
mov
fsubr
(bad)
pop
call
or
stc
dec
data16
fmul
inc
mov
cmp
cmp
push
mov
jle
cs
or
add
cmp
dec
xchg
in
cmp
gs
push
pop
cmp
popa
mov
xlat
bound
or
gs
jp
mov
call
sub
xchg
sub
cmp
hlt
xchg
and
xor
sbb
in
mov
movs
cld
mov
dec
es
lea
inc
popf
or
into
ja
adc
mov
pop
icebp
test
jnp
fcmovu
in
inc
mov
or
cmps
mov
pop
lds
xor
rol
jno
fisubr
push
out
add
lock
mov
add
add
pop
sar
jecxz
mov
vpmaxsw
gs
mov
loopne
add
mov
pushf
jl
jno
push
or
mov
and
test
ret
inc
add
xchg
xchg
jne
push
adc
fwait
out
out
test
jmp
add
push
pop
mov
add
div
adc
or
xchg
xor
loope
imul
into
or
and
cmp
sbb
push
cwde
(bad)
out
inc
stos
test
(bad)
fadd
stos
push
add
vunpcklpd
add
xlat
out
dec
dec
iret
mul
test
pop
jo
loopne
ret
in
xlat
mov
hlt
test
jp
xrelease
inc
add
dec
fsubr
call
cmps
dec
fnstcw
pop
jb
inc
dec
nop
xchg
das
je
sbb
adc
and
les
adc
mov
or
sbb
adc
ins
jmp
mov
sti
or
dec
in
scas
std
mov
sbb
movs
pop
test
or
jle
(bad)
aaa
inc
add
fcom
test
enter
(bad)
xor
ret
mov
out
ror
cli
js
mov
jmp
lahf
push
jne
ins
loope
cmp
xor
push
lds
daa
ror
add
push
out
stos
fwait
hlt
jne
ins
std
retf
daa
sub
cmp
out
scas
push
mov
test
movd
cmp
jo
pop
adc
adc
pop
cmp
aaa
and
mov
xchg
mov
addr16
mov
(bad)
adc
inc
es
ret
cmp
cmp
out
jo
pop
mov
scas
mov
test
pop
imul
add
sbb
fldcw
fiadd
jbe
sbb
inc
clc
pop
adc
test
into
xor
(bad)
sbb
jo
icebp
cs
into
xchg
fld
cwde
xor
icebp
cmps
xchg
push
ss
pop
pop
sbb
sar
xchg
jmp
adc
retf
cmp
xchg
cmp
xchg
cmp
sbb
out
and
jns
retf
data16
pop
fidiv
(bad)
mov
xor
xchg
cmp
dec
push
imul
outs
cmp
sbb
dec
ins
ss
inc
movs
lods
in
enter
mov
es
loope
popf
cmp
and
aad
sbb
sbb
xor
mov
cmp
shl
push
xchg
mov
clc
xlat
pop
xchg
out
loope
jg
mov
xchg
mov
jnp
xlat
xor
rcr
dec
cmps
pop
test
fdivrp
outs
cli
jg
push
add
stos
(bad)
mov
fst
and
les
bound
and
and
mov
xor
pushf
jmp
mov
out
(bad)
clc
(bad)
push
pusha
pusha
loopne
mov
mov
inc
fistp
jmp
aam
lods
mov
fwait
xor
push
dec
xchg
sbb
ins
iret
sbb
out
jmp
cmc
push
jo
pop
add
repnz
aad
sub
ror
(bad)
pop
loopne
lock
aas
and
pop
addr16
jmp
cwde
fild
popf
mov
fcmovnb
jge
and
(bad)
stos
popf
inc
sub
jb
dec
push
iret
mov
ror
pusha
mov
nop
mov
popa
jecxz
mov
jge
fadd
outs
inc
retf
lea
ret
xlat
jo
mov
xor
dec
in
push
ja
in
inc
leave
in
push
xchg
xchg
cmp
faddp
mov
loopne
popa
movs
push
adc
call
xchg
stc
neg
ins
cwde
xchg
hlt
loopne
xchg
and
jns
repz
cmp
sbb
(bad)
ret
(bad)
jl
mov
mov
xchg
sub
cmps
or
mov
aaa
xlat
adc
arpl
into
push
jecxz
dec
enter
ficom
xor
lods
fsub
add
xor
int
mov
jmp
mov
inc
pop
xor
mov
sbb
cmps
add
sbb
fs
sbb
je
stc
jg
out
inc
aas
(bad)
xchg
aaa
scas
xor
and
pop
call
jge
jnp
jle
lods
xor
iret
add
ss
aas
mov
jae
mov
cmp
ja
cmc
arpl
mov
rcr
scas
ss
pop
jno
not
rol
sbb
mov
xchg
ret
imul
jle
mov
jecxz
cmps
sbb
ins
push
das
jecxz
iret
test
and
into
int
mov
mov
pop
xor
xchg
repnz
or
add
fmul
sbb
popf
out
push
add
push
dec
push
dec
jae
mov
xchg
repz
or
push
arpl
pop
mov
and
les
clc
out
dec
inc
cmps
sub
outs
cdq
mov
jbe
call
dec
or
popa
jnp
sub
aad
lods
mov
jbe
add
ret
enter
dec
(bad)
mov
outs
mov
xor
add
or
xchg
fisubr
dec
int3
push
loop
mov
jl
cmp
clc
stos
mov
cmp
and
pop
ret
into
adc
xor
pop
add
inc
xlat
jecxz
es
pop
lods
stos
aam
or
shl
jne
inc
sub
in
je
cwde
call
in
loope
jg
in
scas
stos
inc
dec
stc
mov
sahf
push
addr16
fild
sub
sub
mov
pop
retf
and
repz
in
movs
mov
mov
stos
cmp
in
sbb
sbb
imul
(bad)
(bad)
into
out
inc
fbstp
in
aaa
lgs
mov
xchg
outs
xor
sub
aaa
mov
ja
loop
mov
sti
push
adc
xchg
xchg
jle
ret
or
dec
mov
mov
or
xor
mov
mov
ja
repnz
mov
in
dec
retf
jge
sub
fsub
pcmpeqw
dec
mov
sahf
ss
in
ins
popa
push
xchg
call
xchg
aad
cmp
popa
mov
out
ja
mov
cmp
out
inc
retf
jae
push
mov
hlt
jge
push
pop
test
int
xchg
pop
popf
mov
pop
push
aad
xor
(bad)
test
scas
iret
mov
pop
jnp
dec
call
iret
push
pop
cli
int
imul
jae
and
and
pop
adc
inc
jle
sbb
xor
imul
hlt
scas
sbb
outs
add
cli
xor
jle
scas
jo
mov
push
xchg
call
ins
fldenv
mov
add
or
ficom
das
call
add
std
out
sbb
cmps
ss
mov
mov
nop
jne
pop
jae
add
fld
jbe
xor
leave
sahf
aam
xchg
ds
xchg
cmc
and
sub
xchg
fist
pop
stos
jnp
ror
int3
mov
adc
sar
(bad)
jmp
cmc
adc
sub
mov
sub
or
cmc
stos
adc
mov
dec
xchg
clc
jl
dec
or
mov
push
pop
aam
mov
repnz
cmps
mov
sbb
push
mov
cdq
data16
xchg
or
sahf
shl
jmp
jb
mov
cmp
imul
ret
pop
outs
sub
std
stos
in
mov
cmp
jns
sub
rcl
out
jecxz
(bad)
ins
leave
mov
and
daa
push
sub
movs
push
inc
jbe
and
pop
loop
mov
cmp
pop
int3
xor
test
(bad)
mov
jle
aam
xlat
clc
shl
call
sub
out
int3
add
push
add
scas
je
push
add
shl
inc
mov
push
inc
fadd
movs
xchg
pop
mov
test
pop
sub
or
push
retf
push
and
mov
jp
sbb
mov
loope
fnstcw
dec
adc
pop
in
jmp
fisubr
xor
and
pop
repnz
and
cld
mov
hlt
cmp
out
in
out
loope
xchg
fistp
mov
(bad)
icebp
push
test
adc
dec
enter
(bad)
rcr
push
pushf
mov
pop
dec
enter
jmp
loopne
cmp
cmp
mov
add
cld
xlat
mov
dec
sbb
add
dec
fisttp
stos
mov
cmp
popa
(bad)
shl
cmp
mov
sub
adc
push
add
scas
jno
ror
jno
gs
jo
push
dec
pushf
xlat
sti
shr
imul
cmp
(bad)
cmp
push
outs
test
aam
jnp
push
shr
int3
ja
iret
test
call
push
fstp
aad
mov
xchg
xor
fsub
test
out
cmps
mov
leave
jb
into
stos
cmp
imul
sti
movs
call
and
ret
mov
mov
(bad)
aas
inc
dec
icebp
mov
sub
int3
repnz
test
sub
mov
arpl
loopne
adc
add
iret
dec
mov
mov
jno
add
(bad)
fmul
ja
mov
imul
scas
test
imul
sbb
fsub
pop
jmp
jmp
call
(bad)
sbb
add
addr16
arpl
push
sub
mov
jg
data16
and
retf
xchg
adc
pop
out
stos
ds
pop
xchg
popa
push
movs
rol
imul
mov
jle
mov
adc
fs
add
clc
stos
adc
jmp
inc
inc
cmp
cli
call
imul
fs
fdiv
or
inc
jnp
stos
and
jp
mov
jle
fbld
dec
or
imul
test
push
sbb
enter
movs
cld
(bad)
jmp
mov
jae
cmc
daa
(bad)
hlt
std
dec
inc
outs
pop
push
jae
inc
dec
xor
mov
(bad)
loop
jmp
mov
adc
cli
cs
mov
loopne
mov
ror
push
xor
push
mov
add
clc
les
cmp
cmp
and
ja
mov
or
jae
fcmovnbe
sbb
ret
mov
bound
xor
or
mov
cwde
loope
stos
outs
hlt
cld
pop
push
stos
pop
fisttp
test
jl
inc
jp
inc
sbb
sar
test
fcom
(bad)
out
test
iret
das
addr16
jbe
inc
imul
imul
and
ss
dec
mov
xor
not
and
cmp
mov
adc
add
iret
adc
add
shl
or
in
jae
and
push
mov
mov
fisubr
mov
out
cmp
(bad)
popa
icebp
xchg
sbb
pop
and
ss
int3
inc
pop
mov
mov
ret
pusha
loopne
idiv
inc
rol
in
mov
fmul
adc
cs
dec
fisttp
icebp
cmp
repz
cmp
xchg
push
push
jmp
or
pushf
(bad)
mov
adc
ror
loope
ins
inc
retf
adc
sahf
and
push
mov
add
data16
nop
lahf
je
adc
imul
push
and
cmps
or
cmp
test
pop
sti
mov
cmp
inc
mov
cmp
leave
out
fwait
xchg
push
mov
test
inc
jmp
cli
leave
stos
retf
xchg
arpl
adc
sub
mov
adc
xor
adc
daa
leave
or
cs
jmp
call
out
xchg
xchg
jmp
jmp
cwde
push
mov
mov
in
test
into
fsub
sti
ret
js
mov
js
mov
mov
cmp
add
addr16
aas
add
sti
cmps
clc
stc
mul
lock
xor
gs
ror
loopne
push
inc
and
mov
xchg
cmps
or
xchg
arpl
fst
inc
scas
int3
jb
mov
ss
pop
pushf
sti
mov
data16
popa
in
mov
scas
pushf
xlat
jp
popf
push
sub
lock
ja
push
xchg
(bad)
nop
loope
aad
pmaxsw
mov
das
or
push
(bad)
or
rol
add
leave
xor
jle
xchg
dec
mov
jl
pop
mov
push
(bad)
popa
push
addr16
jmp
xor
fldenv
adc
push
sub
clc
movs
xchg
(bad)
jno
outs
outs
xchg
lock
mov
and
aam
arpl
sbb
into
xor
xor
test
pop
out
cmp
jnp
mov
gs
popa
add
pop
or
fsub
push
mov
lea
popf
retf
dec
sar
adc
xor
fs
dec
dec
dec
stos
push
pop
dec
cmp
pop
add
add
push
adc
xor
test
aad
and
inc
sub
sbb
bound
dec
test
shl
jmp
bound
es
shld
pop
jns
cmp
cmp
push
loope
xchg
pop
stc
sbb
xchg
sub
fistp
imul
lds
mov
in
daa
pop
in
push
mov
stos
es
cli
sbb
addr16
mov
mov
js
js
add
jmp
aas
xchg
mov
loopne
mov
add
pushf
cli
or
inc
test
bound
add
outs
lds
cdq
jae
es
cmp
add
xor
xchg
lock
lock
cmp
or
popa
aam
test
popf
in
push
push
mov
xor
cs
jg
ins
and
dec
jns
cmp
add
jp
int
push
cmp
inc
repnz
movs
sub
call
mov
popf
jae
cmc
outs
jo
jbe
mov
xor
xchg
outs
mov
fcmovnb
sub
mov
push
shr
jb
stc
test
cmp
aaa
xchg
sub
jmp
addr16
or
rol
and
push
dec
xchg
add
xchg
ret
fidiv
(bad)
jge
mov
push
push
add
cmp
out
adc
sahf
sub
daa
es
(bad)
mov
outs
outs
mov
mov
add
and
xor
mov
enter
xor
xchg
jmp
int
(bad)
mov
sub
mov
movs
out
xchg
rcr
sbb
or
push
dec
inc
adc
ret
add
gs
sti
rcr
(bad)
mov
aam
mov
sbb
scas
sbb
add
jnp
mov
adc
xchg
ins
jp
daa
xor
sbb
xchg
jne
jmp
cmp
imul
out
xor
cmc
jmp
test
push
out
in
mov
imul
cld
xchg
jg
les
mov
jmp
and
movhps
das
sub
mov
jb
ja
xor
aas
push
int
mov
test
retf
pop
adc
adc
mov
adc
sbb
test
and
push
xchg
aam
adc
stc
mov
jle
add
stos
movs
xchg
mov
push
pop
movs
adc
ror
or
jns
mov
or
cmp
(bad)
pop
mov
cmp
cmp
pop
or
add
mov
rcr
daa
popa
cmc
lock
mov
xor
cmp
popf
int
addr16
movs
icebp
int3
daa
pop
int
(bad)
clc
icebp
or
adc
out
sbb
add
pushf
sub
cld
cmp
ret
inc
xor
fist
mov
mov
mov
sub
jne
jg
out
je
arpl
int
fisttp
stc
lea
sar
and
jno
jecxz
data16
mov
inc
and
inc
(bad)
in
cmp
test
out
jl
pop
fdivrp
sub
xchg
fcom
mov
mov
fst
and
fcomp
jne
in
push
add
shl
movs
mov
xchg
dec
lods
pop
icebp
jmp
sbb
jbe
add
adc
daa
add
xor
jbe
adc
punpckhwd
retf
aas
ins
jb
mov
pop
repnz
sub
jo
adc
or
js
and
push
ror
loopne
test
inc
and
mov
arpl
mov
xchg
jae
fst
in
(bad)
xlat
cmp
and
int3
and
imul
jp
dec
data16
popa
ror
jmp
adc
mov
in
pop
arpl
in
ins
sbb
stos
adc
jb
push
and
mov
jne
jae
mov
imul
test
aas
mov
mov
mov
adc
jne
enter
jbe
xchg
pop
ja
and
ficom
or
mov
aaa
fs
or
adc
(bad)
jno
pop
ror
test
call
sbb
ficom
adc
mov
push
rol
adc
cmp
xchg
dec
pop
xlat
mov
and
in
cs
sti
adc
add
push
(bad)
pushf
push
loope
int3
cmc
sub
cmp
aaa
push
push
jbe
jb
ins
inc
push
fld
rol
pop
jae
push
dec
push
les
hlt
das
popf
out
push
sar
xor
addr16
sbb
mov
aam
(bad)
add
jecxz
call
ret
mov
(bad)
shl
jne
outs
cmp
test
lods
(bad)
xor
enter
leave
es
pop
mov
mov
test
mov
aad
push
fisttp
add
sbb
mov
cmp
rcl
popf
cmp
scas
inc
push
in
scas
daa
add
std
jp
adc
pop
pop
test
mov
in
adc
mov
pop
sub
mov
fstp
pop
pop
aas
add
jne
call
pop
or
mov
sub
jbe
pusha
cmps
jp
or
xchg
ret
pop
repnz
mov
les
sub
mov
pop
(bad)
in
dec
pop
out
inc
mov
and
aad
xor
daa
jno
movs
adc
pop
pop
sub
adc
out
movs
mov
xchg
jo
aad
mov
clc
sar
movs
jecxz
pop
cs
lods
gs
sub
stos
xlat
mov
jb
ret
jno
jmp
dec
inc
leave
lea
in
test
push
sbb
(bad)
dec
out
call
or
in
push
xchg
pop
ret
jmp
or
mov
mov
cwde
pop
mov
xlat
jmp
sbb
adc
adc
mov
or
add
xor
add
and
push
pop
fld
xor
stos
dec
push
loopne
fistp
cmp
adc
push
into
push
xor
jge
nop
jmp
lea
xlat
in
adc
sub
mov
adc
adc
pop
stc
push
push
loopne
mov
movs
mov
adc
dec
cdq
pop
push
in
jg
adc
add
icebp
add
pop
adc
cmc
fsubp
shl
movs
shl
fild
lock
movs
in
inc
mov
stos
nop
jnp
or
push
pop
cmp
and
jp
push
jno
das
dec
rcl
pop
mov
jmp
push
cli
xor
pop
jbe
les
mov
or
fcom
cmp
hlt
out
mov
je
lea
jle
dec
outs
in
mov
pop
or
and
push
and
pop
xchg
test
jne
mov
xor
xor
jmp
sbb
jno
inc
aam
pop
nop
sahf
les
sub
dec
or
push
(bad)
dec
mov
jmp
pop
adc
mov
sbb
sub
xor
cld
ds
lahf
das
daa
xchg
xchg
pop
adc
test
jae
sub
fcom
jle
in
ja
in
sbb
xchg
lds
pop
fcmovnbe
xor
in
add
out
xchg
iret
push
ins
adc
and
paddusb
dec
adc
jb
and
cmp
test
ja
push
pop
test
mov
test
or
adc
inc
sub
out
dec
push
xor
out
daa
add
pushf
in
push
movs
fstp
mov
xor
mov
xchg
mov
int3
shl
call
xor
xchg
pop
mov
sbb
add
enter
ret
jnp
sub
popf
mov
(bad)
pop
aaa
pop
mov
inc
fst
and
adc
mov
pop
ja
cmp
pushf
das
add
cmp
push
pop
cmps
dec
or
jbe
push
in
xchg
out
sbb
js
mov
add
scas
sbb
iret
ret
mov
xor
ret
jnp
add
inc
add
out
retf
retf
or
sub
fs
lea
mov
add
xchg
rol
retf
jo
lock
cs
push
cmps
and
into
add
adc
aaa
sbb
mov
cmp
icebp
mov
sbb
pop
mov
dec
pop
scas
scas
xchg
cmp
iret
sub
outs
pop
test
test
loop
aam
mov
mov
repnz
lods
inc
ret
jo
mov
inc
inc
leave
movs
mov
shr
aam
mov
clc
inc
jb
ror
clc
push
daa
and
push
fs
mov
cmp
fsincos
mov
cs
fst
pusha
stc
cmp
mov
pop
(bad)
div
adc
or
push
cmps
mov
fsubr
(bad)
sub
inc
(bad)
fcom
xor
xchg
(bad)
cmp
cmps
into
cwde
jp
and
push
mov
pop
mov
dec
and
xor
push
add
imul
sbb
inc
mov
xor
hlt
ins
aad
xor
sub
inc
xchg
loope
int
aam
pusha
sbb
jbe
pop
jg
(bad)
mov
fwait
out
rol
ficomp
nop
xchg
jmp
push
pop
mov
addr16
mov
cmp
xchg
js
imul
sbb
add
(bad)
mov
adc
(bad)
jg
push
add
sahf
mov
les
mov
int
repz
jecxz
cmp
jae
mov
jb
inc
jge
cmp
and
jmp
cmps
jge
pop
adc
xchg
ins
mov
ret
lock
pop
push
jle
mov
movs
mov
pushfw
(bad)
cmc
stos
bound
fwait
cmp
cmp
hlt
scas
adc
scas
js
cmp
jno
fisub
in
icebp
and
mov
jno
adc
ror
es
popa
mov
repnz
outs
pop
xor
xchg
jne
inc
cdq
xchg
mov
jmp
out
mov
push
imul
pop
cmp
int
daa
push
pop
mov
stos
les
fadd
mov
jmp
lea
shr
push
cmp
inc
cld
add
pop
sbb
pop
dec
pop
aaa
rcl
aad
sbb
out
ins
or
fld
push
inc
fisubr
cld
inc
sbb
cmp
xchg
jmp
movs
test
out
je
int3
or
add
mov
adc
sbb
shr
ret
sbb
sbb
or
test
aas
in
(bad)
js
push
sahf
rcl
xchg
call
mov
adc
mov
jmp
xor
mov
ja
cmp
fstp
(bad)
add
pop
or
mov
sbb
or
outs
cmp
into
push
call
ret
ror
push
fisttp
push
test
(bad)
jo
adc
mov
cmp
pop
mov
push
inc
push
cmp
outs
mov
inc
push
sub
or
iret
cdq
outs
cmps
inc
neg
rcr
xchg
sbb
cmp
sbb
xchg
(bad)
fcomi
stc
mov
jbe
adc
push
clc
mov
add
or
sub
scas
cwde
data16
ja
push
or
movs
pop
fidiv
into
or
int3
movs
inc
inc
ret
xchg
jl
repnz
ror
cdq
cmps
mov
daa
shl
cmps
loop
push
or
mov
sub
mov
dec
jg
loopne
repz
add
cmp
xchg
jno
cdq
je
fild
or
xchg
or
push
out
inc
loope
mov
call
xchg
clc
nop
inc
icebp
int
ret
data16
add
sbb
addr16
cld
out
imul
iret
cmp
call
jmp
lock
xor
fdiv
mov
call
test
test
stc
cmc
cmp
daa
pusha
ins
push
inc
ret
jbe
movs
ds
(bad)
fnsave
dec
jae
or
sbb
daa
fcomp
addr16
fnstcw
xchg
mov
xlat
xor
pop
hlt
jns
or
add
mov
jnp
fdiv
cwde
xchg
mov
iret
cmp
icebp
les
push
je
xchg
fnstcw
sahf
and
sbb
pop
test
or
fwait
ds
dec
cmps
push
loop
ror
cmp
out
in
out
fisub
bound
imul
adc
mov
mov
inc
fcomp
lahf
cmc
imul
push
mov
push
data16
add
push
mov
gs
jnp
dec
call
je
sbb
fcom
push
arpl
jnp
jle
outs
pop
data16
or
outs
sbb
jmp
xchg
fcmovnb
ja
lea
int
pop
pop
cwde
or
mov
add
push
jne
lods
dec
out
pushf
cdq
sbb
xchg
scas
mov
lods
movs
stos
cs
inc
scas
lods
sbb
push
ja
jmp
sti
(bad)
rcl
xor
pop
stc
retf
stc
sub
arpl
mov
retf
mov
mov
xchg
fwait
push
pop
sub
cs
scas
xchg
sub
inc
ret
sub
xlat
jb
daa
pushf
lods
pop
inc
push
mov
imul
leave
add
dec
dec
test
popf
lea
aaa
js
and
int
out
shl
js
mov
imul
jge
js
ja
sbb
sub
add
push
in
arpl
fcmove
push
mov
fcmovnb
mov
and
lds
retf
inc
pop
ins
int3
fstp
mov
repnz
stc
les
push
add
(bad)
jb
(bad)
push
or
pop
cmc
ins
mov
retf
sbb
stos
popf
retf
mov
inc
cmp
pop
and
fidivr
mov
sub
retf
fnsave
cmp
inc
xchg
les
inc
xchg
mov
xor
repz
xor
dec
sbb
fnstcw
push
sub
dec
pop
xchg
rcr
pop
mov
shl
jne
sub
clc
sub
dec
sbb
dec
pop
ss
lahf
scas
in
sub
outs
scas
cld
cvtps2pd
pop
dec
lea
popa
push
pushf
and
adc
(bad)
sub
outs
ins
ret
sub
rol
and
mov
push
cmp
(bad)
cli
inc
jo
dec
dec
outs
je
sbb
xor
inc
sti
sub
xchg
push
pop
cld
and
mov
sbb
sar
retf
inc
loope
inc
xchg
xchg
jnp
cmps
stc
mov
rcr
loopne
xchg
and
dec
stos
fnstenv
fdivrp
enter
daa
pop
mov
cmp
mov
in
sbb
mov
sbb
cs
lea
sub
sbb
outs
call
push
dec
fisub
or
adc
xlat
cmp
dec
sbb
inc
cmp
jb
jecxz
stos
stos
imul
test
mov
sub
mov
aas
std
or
add
lahf
add
push
jne
or
into
cmp
scas
add
inc
adc
sar
fs
popf
ins
(bad)
pop
dec
rcl
ret
ret
xchg
jecxz
xor
jns
cmp
fs
out
syscall
jecxz
in
gs
fwait
xor
sub
jl
push
inc
in
fcmovnbe
retf
ror
mov
sub
mov
cmp
sbb
inc
add
in
or
sbb
fstp
(bad)
adc
xchg
test
xlat
sbb
icebp
or
adc
fcomp
sub
mov
sbb
loop
in
nop
pop
daa
and
pop
out
repnz
bound
dec
mov
scas
jl
jmp
bound
(bad)
stos
(bad)
vmread
aam
imul
sub
push
shr
push
lods
js
dec
mov
inc
or
xor
push
or
jo
call
dec
mov
out
mov
and
push
adc
jecxz
ss
jle
ret
daa
jl
sbb
aam
jmp
xlat
mov
xchg
mov
shr
ins
jmp
xlat
xchg
(bad)
pop
cdq
sub
adc
arpl
sbb
xchg
or
inc
inc
inc
outs
push
inc
fsub
push
pop
mov
pop
aaa
pop
mov
out
aam
rcl
repnz
cmp
push
ss
mov
stos
sbb
fidivr
cmp
xchg
and
ror
jbe
aas
xor
movs
sbb
repz
mov
mov
(bad)
or
jg
sahf
cmps
popf
cmps
outs
jle
add
mov
or
add
and
cdq
in
add
xor
push
repnz
lods
shl
sub
mov
and
out
xchg
fcomp
xor
jg
mov
ja
mov
xor
push
scas
jmp
adc
cmc
in
sbb
jg
pushf
jbe
and
test
pop
dec
(bad)
sbb
dec
cmp
loope
xlat
jae
mov
aas
xlat
setp
cwde
and
push
in
mov
fldenv
lods
faddp
sub
xchg
push
pop
jmp
push
add
mov
xor
pop
out
out
pop
fst
inc
fstp
xchg
pop
pop
push
xchg
push
retf
or
adc
push
inc
outs
xchg
jmp
lss
dec
mov
sbb
out
je
mov
inc
mov
sbb
and
jnp
imul
mov
jb
loopne
icebp
rol
mov
cmp
sub
test
stos
mov
out
push
cmp
scas
out
cld
xchg
cmp
lds
or
fst
sbb
data16
adc
xor
cmove
mov
push
push
cli
sbb
cmp
mov
arpl
jmp
cmps
mov
xchg
adc
or
out
hlt
pop
add
sbb
mov
and
dec
and
mov
in
or
nop
aam
bound
(bad)
fxch
bnd
repnz
cmps
test
(bad)
and
mov
lock
bound
add
and
aam
pop
mov
fs
mov
sar
in
mov
mov
data16
in
sti
loopne
xor
mov
jne
add
mov
cmp
mov
outs
xor
sbb
mov
cmp
ret
mov
call
xor
clc
mov
in
jbe
cmps
xlat
and
push
daa
xor
pushf
outs
stc
jmp
xchg
js
outs
pop
popf
mov
clc
inc
xchg
iret
shl
cmp
fs
or
lock
jmp
push
dec
add
pop
int3
mov
cmp
pop
xor
loope
ins
mov
xor
push
cmps
lods
call
mov
test
xchg
das
xchg
sub
jb
scas
out
adc
dec
sbb
cmps
das
loope
aad
xlat
aam
scas
mov
jno
xchg
out
mov
nop
xor
sub
pop
cld
aam
jmp
aad
call
add
cli
retf
icebp
push
inc
pushf
cli
daa
push
mov
aaa
scas
iret
jae
fdivp
sub
into
mov
xchg
in
in
jle
loop
cmps
mov
xor
inc
shr
cmp
or
or
add
mov
dec
add
sub
mov
add
adc
int3
mov
movs
inc
inc
or
mov
rol
sub
ror
scas
push
stc
xor
test
pop
adc
pop
in
dec
cmc
xchg
sub
sub
mov
into
mov
div
cwde
pop
cmp
cmp
out
js
push
enter
out
out
loope
scas
sbb
in
mov
daa
push
repnz
cmp
and
cmp
mov
inc
mov
rol
sbb
call
cmp
jge
sahf
add
sbb
pop
or
xor
shl
sbb
add
popf
(bad)
mov
or
repnz
imul
jnp
mov
inc
addr16
cli
fs
stc
in
mov
sub
out
mov
cld
add
and
rcl
fld
sbb
push
mov
ins
sahf
clc
cs
aaa
xchg
jg
push
mov
xchg
in
mov
push
retf
xchg
js
or
jmp
sub
pop
sub
outs
call
push
cmp
jecxz
outs
mov
call
xor
pusha
pop
imul
push
loopne
ret
sbb
aaa
sbb
mov
in
lods
inc
and
jl
mov
imul
addr16
ficom
mov
sub
cmps
pop
inc
das
leave
and
mov
cmp
cs
sbb
je
outs
xor
cmp
lods
ficom
jnp
mov
mul
cmp
call
(bad)
sub
lock
loope
imul
jecxz
rol
and
lahf
adc
mov
outs
jmp
sbb
(bad)
cmps
in
jne
cmp
cmp
in
hlt
cdq
pop
jmp
xchg
mov
(bad)
mov
ds
or
adc
cmps
xchg
inc
out
imul
push
shl
aam
out
inc
test
call
enter
fmul
rcr
push
xchg
mov
or
sbb
xchg
jl
sbb
xchg
or
and
sbb
cwde
cmp
jecxz
lock
nop
add
cmp
stos
and
arpl
sub
or
adc
jnp
lds
xor
test
ja
adc
aaa
mov
sahf
adc
and
sub
pop
mov
sub
dec
ret
out
xchg
ins
mov
ins
into
sub
sbb
fist
(bad)
mov
out
inc
stc
loope
push
mov
lods
push
sbb
xor
ins
stos
xchg
cld
dec
adc
lock
mov
mov
mov
ins
jmp
outs
push
leave
and
mov
icebp
outs
sbb
call
nop
(bad)
or
mov
rol
or
pop
rcr
retf
mov
lea
mov
xor
(bad)
loope
jg
call
and
(bad)
push
xchg
retf
mov
clc
jmp
lods
sbb
jo
and
sub
ret
sub
mov
or
sub
sub
push
push
xchg
lds
aam
fs
inc
fs
loop
gs
and
push
sub
jmp
adc
pusha
pop
rcl
std
inc
ja
xlat
imul
popa
in
es
mov
scas
fstp
(bad)
call
mov
icebp
std
lods
out
ss
rcl
dec
in
inc
out
ins
mov
push
loopne
loope
call
cmp
inc
mov
mov
(bad)
stc
repz
xor
ss
fwait
jg
jnp
aaa
retf
fdiv
and
int3
cmp
cmc
in
inc
push
cmp
nop
sub
sahf
xor
fwait
daa
cli
mov
std
stc
jl
call
pop
ret
or
loopne
aaa
pusha
in
sub
inc
sahf
aas
ror
or
enter
xor
aad
sub
jge
aad
add
add
xchg
fstp
out
fsubrp
and
bound
mov
lea
inc
sysexit
sbb
mov
imul
push
add
or
or
adc
jg
cmps
mov
pop
lock
adc
adc
test
rol
aas
stc
(bad)
xor
mov
out
inc
mov
jne
scas
or
es
shl
data16
retf
cld
xchg
mov
sbb
jmp
rol
ror
cdq
pop
or
fstp
push
and
fs
(bad)
sbb
les
iret
mov
pop
loope
or
sbb
mov
mov
mov
pop
mov
xchg
fisubr
cmp
push
dec
into
fistp
mov
dec
cld
sbb
jo
loopne
sub
rol
xchg
cmp
ds
js
xchg
cmp
or
mov
cli
add
arpl
loope
push
bound
jmp
out
jo
jb
add
stos
shl
jbe
mov
retf
movs
imul
out
repz
mov
movs
mov
lds
invd
sbb
mov
mov
inc
mov
shl
dec
lods
cmc
inc
fcomp
dec
aad
jnp
movs
jb
jmp
xchg
(bad)
aam
xchg
test
sbb
add
add
fistp
mov
in
adc
jp
es
vfnmadd231ps
int
out
mov
push
or
sub
scas
inc
movs
cmp
test
int3
jp
adc
lock
jmp
lods
icebp
pop
ds
xchg
fwait
pushf
mov
push
adc
mov
and
xchg
add
pop
(bad)
sbb
fld
inc
inc
imul
mov
mov
sub
push
mov
clc
inc
retf
(bad)
shl
mov
gs
inc
test
call
out
fmul
xor
sub
sti
loop
xor
movs
aad
sub
mov
jmp
hlt
mov
stos
shl
pushf
pop
sub
or
push
int
movs
call
mov
fidivr
xchg
jae
add
push
stc
aam
rcr
icebp
gs
xchg
les
inc
(bad)
sbb
jmp
xchg
jno
sbb
pop
mov
inc
dec
cmp
out
push
mov
scas
in
hlt
mov
jg
test
pop
pushf
jb
das
loopne
push
int
(bad)
fcmovnbe
cdq
push
push
mov
adc
mov
aad
cs
fdivp
mov
dec
aaa
xlat
sahf
out
xchg
mul
xchg
jecxz
(bad)
lock
(bad)
xrelease
mov
sbb
inc
mov
sub
sub
test
in
inc
repz
lods
das
sbb
test
dec
dec
fistp
jmp
(bad)
aad
and
ret
push
cmp
ins
push
cmp
mov
adc
xchg
or
mov
mov
inc
sar
das
mov
adc
xlat
xchg
push
fld
push
arpl
xor
dec
div
test
xor
and
or
cmc
lea
test
push
mov
inc
push
xchg
popf
fistp
int
movs
shl
and
push
out
aad
inc
xor
mov
ret
cmp
inc
dec
sbb
sbb
pop
in
inc
mov
imul
xchg
sub
fbstp
push
test
(bad)
test
nop
push
outs
ins
or
xchg
xchg
repz
jmp
int
stos
mov
movs
mov
or
(bad)
loop
dec
into
inc
data16
add
nop
push
clc
into
outs
jno
xchg
fcomi
xchg
mov
add
out
mov
rol
pop
add
outs
pop
xor
mov
push
sub
lods
into
outs
mov
jnp
icebp
xchg
ret
fidiv
shl
pop
sbb
ins
lods
ret
jo
sub
pop
rcl
test
pop
and
movs
add
(bad)
cmp
mov
in
jp
stos
outs
enter
dec
je
mov
(bad)
repz
cmp
mov
sbb
jae
outs
sti
sub
push
dec
sti
push
iret
or
shl
pop
mov
push
sar
inc
inc
sub
call
push
cli
and
dec
push
cmp
fidivr
cmp
or
ret
scas
adc
push
jge
push
frstor
in
pop
sub
stc
daa
mov
dec
push
sbb
popf
aaa
jne
scas
sbb
(bad)
add
push
mov
inc
call
sub
mov
xchg
and
add
not
test
jle
(bad)
xlat
pop
cmp
out
mov
int
daa
dec
xchg
mov
fdivr
push
push
mov
cld
movs
pop
or
mov
lods
inc
or
adc
sahf
sbb
xchg
xchg
bound
stos
sbb
(bad)
loopne
test
or
xchg
mov
inc
inc
xor
iret
sub
fsubr
stos
pop
mov
test
jne
fbld
push
ds
xchg
scas
xchg
push
popa
cdq
mov
test
jae
mov
(bad)
or
jle
pop
ret
add
mov
xor
mov
mov
or
pop
inc
inc
jp
loopne
in
cmc
out
enter
jl
test
mov
mov
adc
mov
lods
int3
and
pop
imul
fistp
ror
inc
retf
outs
(bad)
addr16
fdivr
fist
lock
imul
mov
popf
icebp
repnz
fbstp
mov
jno
lods
xchg
lock
(bad)
imul
cmp
xchg
jmp
enter
xchg
ds
inc
pop
jmp
mov
push
hlt
fadd
(bad)
xor
lock
jle
imul
inc
gs
adc
mov
mov
ja
mov
add
je
stc
push
mov
lock
leave
sti
je
xchg
mov
push
stos
pop
or
xchg
and
out
jp
push
mov
pushf
jl
mov
pop
adc
push
push
inc
int
sub
cmp
loop
ins
dec
fwait
hlt
jmp
sbb
pushf
push
pop
mov
pop
jb
jecxz
sahf
inc
test
cdq
sbb
jl
mov
loopne
out
jmp
test
or
hlt
dec
pop
aaa
stos
lds
outs
pop
and
nop
xor
add
add
jge
retf
aaa
ret
scas
jbe
sbb
adc
fucomp
ds
(bad)
pushf
fnsave
pop
pop
(bad)
add
push
push
mov
mov
dec
sub
dec
out
addr16
in
lea
mov
xor
jl
sub
loop
sti
movs
xchg
shr
xlat
pop
inc
jmp
mov
popf
jmp
ins
dec
pop
stos
cmps
mov
mov
in
dec
leave
js
ds
mov
or
mov
add
sbb
mov
pusha
and
aas
inc
mov
add
or
aam
test
out
mov
fucomp
pop
jmp
addr16
jecxz
fcomp
clc
and
pop
imul
js
jne
(bad)
push
pop
jge
stos
xchg
sbb
pop
and
jno
fwait
jne
pop
push
or
outs
(bad)
sub
jp
stc
xor
sub
inc
push
outs
call
cmp
push
push
aaa
into
das
ret
mov
stos
hlt
add
mov
mov
adc
adc
mov
hlt
and
push
sbb
std
fnstsw
sub
adc
inc
into
sub
shl
inc
jge
or
dec
scas
mov
xlat
and
cmp
aam
pop
imul
lahf
inc
inc
xor
fimul
inc
out
bts
inc
loopne
xor
aam
stos
xchg
rcl
ins
sbb
xor
jbe
dec
xor
and
push
or
arpl
pop
adc
cwde
sbb
pop
mov
adc
jecxz
test
dec
jmp
cmps
pop
jae
push
mov
or
dec
inc
call
jge
mov
test
daa
mov
arpl
loopne
mov
je
xchg
and
adc
pop
fdivr
imul
ret
add
push
clc
xchg
mov
sbb
xchg
push
addr16
push
or
cmp
xor
out
lods
mov
lods
out
shl
add
sar
jb
psubusw
cmp
mov
pop
call
arpl
pop
pop
outs
stos
dec
xchg
xor
jb
xchg
jmp
mov
add
jo
pusha
in
mov
mov
sti
jecxz
fwait
cmp
xor
daa
rcl
icebp
sub
(bad)
mov
push
mov
adc
push
pop
(bad)
cld
cmp
adc
mov
jb
lds
or
mov
aas
sub
dec
leave
in
test
cs
push
add
outs
scas
xor
stos
and
js
cmc
mov
and
call
inc
aaa
cmc
inc
cwde
aas
ret
cs
cmp
mov
daa
scas
sub
(bad)
in
push
push
mov
aaa
push
xchg
inc
xchg
jb
sbb
fld
pop
mov
push
mov
xchg
mov
aad
sbb
inc
pop
inc
shl
in
dec
jge
and
pop
inc
xor
imul
ja
adc
cmp
lock
sub
pop
stos
call
inc
cmp
mov
(bad)
xchg
ja
in
sbb
jmp
(bad)
sbb
push
and
(bad)
mov
mov
adc
movs
loope
jae
gs
sub
(bad)
ror
jecxz
xor
xor
cdq
les
test
mov
cld
pandn
sbb
arpl
cdq
std
in
push
inc
lods
cmps
xchg
leave
or
inc
loope
lock
(bad)
(bad)
daa
dec
xor
add
xchg
pop
xor
leave
push
mov
and
fisttp
dec
xor
xchg
pop
sbb
inc
sbb
xor
xor
push
shl
loopne
(bad)
popf
add
sbb
cs
lock
and
in
dec
(bad)
cmp
mov
imul
loopne
in
(bad)
sub
test
xchg
pop
mov
cld
lea
mov
cmpps
inc
push
clc
jp
bound
pusha
adc
jb
repnz
mov
inc
into
aad
xor
xchg
shl
and
mov
xor
pusha
call
sub
call
mov
data16
lock
mov
shl
cmps
mov
loop
sti
pusha
inc
ficomp
iret
dec
out
sbb
mov
inc
paddw
push
fwait
test
cdq
mov
addr16
xchg
jg
outs
sub
sar
dec
lea
mov
(bad)
cmp
sbb
sub
xchg
shr
hlt
or
jge
int3
mov
inc
cmp
pop
ins
mov
and
data16
ret
ror
push
mov
mov
ficom
mov
sub
nop
adc
xor
sub
adc
(bad)
div
in
div
mov
cwde
rol
mov
fsub
cli
(bad)
mov
xor
dec
jmp
mov
pop
jge
stos
inc
into
jbe
add
out
add
outs
bound
fdivr
jp
inc
scas
jl
and
inc
inc
lds
xor
(bad)
mov
scas
pop
shl
dec
mov
or
and
or
sar
punpckhwd
aaa
add
inc
(bad)
pop
xor
jns
repnz
lea
dec
in
sahf
daa
jp
xor
dec
mov
in
adc
cmp
jp
sbb
pop
and
xchg
pop
loop
jecxz
les
cmp
lock
add
pop
push
ficomp
je
pop
push
test
sbb
inc
xchg
adc
movs
repz
and
aaa
ds
mov
dec
inc
in
inc
adc
and
pop
dec
icebp
sub
mov
sbb
dec
ds
and
mov
pusha
sub
dec
push
aas
push
push
out
dec
xchg
iret
fwait
sub
push
loope
jae
lahf
out
fmul
pop
xchg
mov
arpl
push
mov
cli
outs
xor
push
fld
movs
enter
adc
rcl
add
in
add
icebp
cmps
push
xchg
sahf
xchg
cdq
mov
pop
je
in
jle
xchg
and
shl
pop
sub
inc
test
cmp
test
sub
cwde
movs
pop
leave
loop
xchg
aas
mov
addr16
dec
and
cs
adc
hlt
mov
in
mov
inc
mov
sub
loopne
imul
pop
inc
or
(bad)
imul
gs
jne
cmp
ds
jle
mov
or
imul
pusha
out
push
add
shr
pop
in
jmp
mov
cli
ja
fnsave
call
add
add
cmc
jge
(bad)
jp
jecxz
cmp
mov
icebp
mov
xor
lea
stos
pop
push
rcr
inc
push
xor
pop
pop
push
in
and
mov
push
push
ja
xchg
test
js
popa
popf
cmc
repz
cmp
or
test
sub
fmul
pop
scas
fisub
jge
mov
call
movs
jmp
jmp
call
and
mov
fmul
pop
enter
loopne
xlat
push
inc
or
mov
mov
and
and
pop
bound
sub
(bad)
pop
out
rcl
cmp
mov
and
xor
pop
push
adc
sbb
pop
pop
pop
push
out
mov
jae
sub
xor
shl
(bad)
in
scas
mov
push
aas
stc
pop
rol
mov
enter
scas
xor
xor
sub
and
sbb
or
sti
jbe
outs
jge
jo
add
sbb
in
adc
push
lods
jl
movs
jmp
push
mov
mov
sub
push
mov
cwde
cs
cdq
mov
out
lods
sahf
xor
sub
mov
mov
dec
sbb
push
mov
ins
clc
cmp
into
inc
inc
sbb
sub
int3
rcl
xchg
inc
out
div
add
int
pop
std
aad
sub
adc
movs
dec
bnd
mov
dec
xor
neg
imul
icebp
mul
and
call
push
xchg
sbb
in
pop
out
aas
std
sbb
scas
xchg
mov
inc
pop
rcl
aad
and
imul
js
inc
pop
sub
retf
test
test
push
push
rol
push
jg
add
(bad)
jmp
fisub
outs
and
int
gs
xor
fwait
mov
cmc
nop
sbb
jecxz
xor
sub
aam
jmp
arpl
sbb
push
adc
adc
adc
inc
mov
enter
(bad)
pop
mov
pushf
push
add
and
hlt
sbb
lock
mov
add
jbe
jne
data16
cld
stos
mov
mov
test
and
push
pop
retf
adc
jecxz
mov
fisttp
outs
sub
nop
mov
inc
cmp
push
pop
fsubr
cld
dec
mov
jmp
das
shr
popf
popa
leave
pop
loop
push
push
dec
fild
es
push
pop
into
inc
test
mov
adc
jnp
repz
inc
ins
jno
sahf
xchg
adc
sahf
sahf
mov
(bad)
mov
loope
xchg
pushf
pop
outs
cmp
cmc
loop
sub
xor
dec
dec
cmp
jp
cmp
pop
pushf
arpl
enter
mov
jbe
add
dec
push
mul
dec
popa
cmp
stos
jg
lds
sti
icebp
fcomp
ror
out
xor
or
not
pop
test
cmp
mov
adc
or
loope
loope
mov
xor
shr
imul
mov
xchg
mov
push
jge
nop
sbb
xor
imul
xchg
ret
and
mov
icebp
ror
sbb
nop
icebp
xchg
in
arpl
sub
mov
sub
aad
retf
mov
ret
mov
jns
call
scas
sahf
cwde
and
sub
dec
sbb
adc
or
add
push
dec
dec
dec
inc
and
fcomi
test
and
ret
jo
retf
xor
adc
adc
ds
retw
popa
mov
sub
cmc
mov
mov
in
pop
mov
clc
enter
call
lea
sub
push
dec
stos
lods
mov
(bad)
ss
sbb
ficom
cmp
mov
inc
mov
sar
xor
fsubp
xlat
xor
cdq
or
xchg
adc
sti
mov
pop
add
and
arpl
mov
xlat
shl
aas
pop
scas
cmps
movs
and
ss
sbb
jmp
jo
jp
imul
shr
pop
imul
jl
cmp
in
and
add
inc
fidivr
sahf
outs
fst
dec
ret
xchg
xor
movs
lds
scas
ja
mov
push
push
sub
ins
inc
(bad)
or
cmp
mov
jbe
cdq
imul
xchg
lock
mov
ins
mov
mov
stos
push
jg
pop
cmp
(bad)
cmp
stos
(bad)
hlt
or
sbb
gs
sub
mov
daa
xchg
adc
sbb
hlt
rol
out
sbb
(bad)
shl
or
call
pop
xor
sbb
scas
mov
popa
mov
adc
ins
add
xor
bound
sub
mov
(bad)
sbb
sbb
or
fiadd
pushf
cmp
addr16
fcom
push
aas
push
xchg
adc
in
pop
mov
(bad)
leave
(bad)
fild
xor
dec
push
ja
dec
pushf
call
cdq
sbb
xchg
ss
cmp
or
mov
add
sbb
inc
das
aas
dec
add
adc
stos
lds
xchg
ins
fidiv
push
aas
sti
nop
pop
fnstenv
bound
call
in
xchg
pop
inc
push
or
pop
js
daa
fwait
cmp
ja
(bad)
jno
xor
and
mov
f2xm1
call
loop
ds
sbb
pop
dec
(bad)
lods
sbb
lea
into
sahf
cmp
rol
mov
sbb
fst
lods
dec
add
loopne
shr
xor
addr16
movs
int
xor
sub
dec
(bad)
xlat
xor
aad
loop
(bad)
dec
pop
sbb
dec
cdq
ja
sub
movs
imul
loopne
dec
enter
mov
sub
rcl
repnz
dec
xchg
push
cli
lods
(bad)
sbb
movs
sub
data16
(bad)
fist
cmp
addr16
or
or
lea
int3
bnd
fwait
out
adc
mov
and
dec
leave
xchg
pop
ja
push
mov
pop
arpl
cmp
cmps
(bad)
repnz
loop
cmp
scas
cmp
mov
sub
stos
test
pop
sub
jbe
pushf
ret
in
lock
sbb
popf
jg
mov
inc
fbstp
scas
imul
jmp
sub
lea
and
jmp
popa
mov
test
jle
gs
or
in
enter
pop
jnp
mov
mov
mov
xchg
push
aaa
push
xchg
cwde
out
call
inc
popa
dec
ss
adc
ret
hlt
test
xchg
out
scas
(bad)
rol
sub
fwait
and
hlt
xchg
xchg
fmul
js
cwde
pusha
and
add
sar
adc
call
retf
mov
mov
push
fild
jo
popf
retf
push
loope
mov
lahf
xchg
sub
lods
pusha
inc
and
std
pop
sbb
dec
and
je
pop
push
out
daa
mov
mov
or
sub
mov
les
xlat
imul
jmp
add
movs
ret
or
ror
iret
lock
cmp
fidiv
mov
pop
cmps
daa
loop
mov
inc
outs
jmp
es
cmp
xor
lock
stos
movs
inc
jns
(bad)
xor
sahf
stos
sub
add
jle
ror
jp
int
neg
adc
int3
add
mov
daa
fs
out
push
imul
mov
mov
hlt
mov
mov
les
nop
xor
xchg
mov
pop
jae
jmp
jb
popa
(bad)
bound
jne
dec
dec
std
add
out
dec
cs
dec
rol
push
pop
ret
or
pop
fwait
inc
xor
lods
lahf
or
cmp
push
js
jne
frstor
ret
jbe
jb
xor
mov
sub
aaa
(bad)
cmp
add
sub
bound
pop
inc
cmp
imul
xor
mov
inc
pop
xchg
dec
cdq
and
iret
int3
fadd
pop
add
pop
add
sbb
lods
icebp
je
xor
xor
in
in
and
mov
dec
(bad)
nop
ins
gs
xchg
jb
ds
out
cli
sub
(bad)
add
inc
xlat
mov
cli
pop
(bad)
arpl
test
icebp
fucom
push
aaa
out
add
xchg
push
sbb
std
inc
pop
dec
jnp
sub
in
or
xor
jg
adc
lahf
aas
jge
add
sbb
mov
rol
je
cld
stos
dec
iret
ja
addr16
push
pop
xlat
in
mov
adc
push
mul
arpl
or
mov
dec
jbe
push
and
push
lahf
cmp
pop
cmp
cwde
arpl
iret
in
push
ss
or
daa
jno
mov
ret
rol
ja
sub
std
outs
xchg
fs
add
ror
popa
in
sbb
jp
mov
test
cmp
dec
inc
sbb
sub
ins
add
lahf
xor
mov
mov
test
add
imul
pushf
lahf
daa
enter
cmp
int
xchg
mov
push
adc
test
(bad)
mov
or
ror
(bad)
outs
cmp
out
pushf
mov
adc
pop
xlat
and
add
mov
sbb
push
and
std
dec
je
and
cmps
mov
xchg
mov
xor
dec
mov
add
lahf
(bad)
push
scas
xchg
mov
inc
jns
(bad)
jno
pmuludq
sbb
add
arpl
pop
push
jmp
sub
in
dec
daa
jle
in
daa
push
out
ins
call
clc
mov
jmp
fsub
repnz
lods
jmp
test
rcl
cwde
jo
out
pop
in
iret
or
push
jno
add
dec
xchg
mov
and
imul
outs
sbb
dec
add
inc
sbb
test
fcomp
icebp
jecxz
sbb
ds
and
scas
movs
(bad)
push
rol
xchg
shr
sub
imul
aad
and
or
push
es
cs
lahf
pop
add
imul
ficom
nop
nop
outs
enter
mov
sahf
popf
(bad)
push
cmp
les
popa
sbb
mov
mov
add
pop
test
mov
dec
ret
inc
xchg
in
adc
sbb
sub
in
mov
js
dec
shl
enter
sbb
jg
lods
xor
sub
push
mov
jno
xor
dec
ja
xchg
scas
xchg
cmc
(bad)
xchg
in
movs
ja
sub
int3
dec
adc
(bad)
scas
pop
cdq
scas
fsubr
dec
mov
cmps
stos
sub
in
stos
test
data16
or
pop
push
push
mov
or
dec
enter
xchg
sbb
stc
rcl
fldenv
add
neg
mov
jo
rcl
jnp
stos
dec
mov
inc
test
dec
jecxz
ja
aam
ror
dec
aaa
jl
jno
or
jge
or
dec
add
test
pushf
or
lods
sbb
pop
cmps
(bad)
popf
call
inc
addr16
push
aam
div
inc
call
pop
or
leave
xor
dec
cmp
aad
push
dec
dec
loopne
cmps
push
cmc
pusha
inc
(bad)
(bad)
xlat
or
std
test
mov
mov
inc
jmp
adc
add
retf
inc
and
es
jge
mov
out
pop
push
test
xor
and
adc
fadd
xchg
or
clc
inc
sti
ret
outs
rol
and
stos
xchg
xor
or
jp
ja
jbe
cdq
jbe
fcmovnbe
fisubr
cmp
pop
jne
pop
pusha
pop
xlat
jle
push
fild
adc
cmp
sbb
adc
test
lock
mov
or
xchg
add
mov
dec
(bad)
mov
mov
stos
dec
loopne
cmp
push
div
fmul
ss
mov
loope
mov
xchg
and
xchg
bound
(bad)
aaa
mov
xchg
dec
mov
dec
(bad)
popf
movs
sub
xor
inc
dec
mov
arpl
sti
or
cs
enter
ret
jge
jmp
mov
mov
aad
test
cmp
ss
and
add
mov
mov
je
inc
lods
sbb
ja
mov
dec
adc
retf
jae
pop
rcl
push
pop
sub
dec
jge
mov
xchg
gs
push
popa
inc
or
mov
enter
shl
ss
jns
sti
pop
je
cmp
sbb
clc
sbb
add
dec
xchg
sti
jne
mov
retf
je
inc
into
cwde
pop
mov
inc
clc
xchg
loopne
sahf
lock
jns
mov
jo
imul
pop
push
sub
fwait
ins
dec
jg
ret
nop
cli
cmp
dec
cld
pop
and
xor
or
(bad)
(bad)
jae
jp
stos
mov
or
mov
stc
ss
sahf
adc
stc
cli
shr
mov
pop
mov
aad
clc
and
jae
pop
inc
sub
pusha
cmc
push
cmp
xor
xor
ret
or
ror
pop
stos
sub
adc
pop
xor
mov
and
stc
fs
mov
mov
dec
clc
bound
sbb
popa
ds
mov
stos
pop
adc
cld
out
adc
jl
int
or
(bad)
neg
test
jg
and
ret
pop
out
inc
cs
mov
inc
xor
imul
jg
std
push
xchg
adc
add
mov
mov
dec
xor
stc
out
sub
sar
rcr
sub
cld
repnz
das
adc
sahf
mov
lea
retf
pop
jmp
xchg
in
xchg
ins
mov
mov
mov
push
xor
cdq
pop
repnz
hlt
add
shl
sub
xor
lock
mov
and
push
pop
jmp
cmp
repnz
fs
xlat
xor
add
pusha
adc
sti
mov
xchg
test
mov
je
out
pop
adc
pop
or
dec
cmp
sbb
or
vmovaps
xor
pop
and
sahf
ds
cmps
fidivr
add
mov
rol
scas
adc
addr16
mov
retf
imul
jecxz
outs
repz
inc
or
mov
sti
in
dec
mov
and
jmp
xchg
vpaddb
mov
(bad)
into
ja
dec
adc
mov
mov
out
aas
sbb
(bad)
int3
xchg
dec
sbb
(bad)
(bad)
cmp
adc
xor
lods
xor
sahf
cmp
outs
ins
xchg
adc
push
repz
and
jle
mov
mov
fcmovnu
popa
pop
call
cdq
daa
fldenv
leave
hlt
cld
inc
fsin
pop
dec
sahf
dec
sar
ja
push
xchg
adc
jp
mov
in
dec
mov
aad
pop
push
sbb
gs
cmp
ss
cmc
push
dec
sbb
mov
int
in
or
arpl
xor
fwait
mov
cld
mov
das
mov
loop
pop
(bad)
dec
popa
out
retf
add
(bad)
xor
sahf
retf
imul
jns
stc
inc
add
jns
xchg
test
test
mov
cmp
xlat
hlt
mov
adc
or
js
xlat
icebp
cmc
inc
add
sbb
loope
add
(bad)
xchg
lahf
leave
std
std
xor
in
bound
adc
add
lods
arpl
mov
pop
push
pop
sub
pop
out
jnp
mov
aam
sub
and
jmp
jecxz
mov
mov
and
jns
mov
(bad)
mov
int3
sbb
cld
mov
imul
jo
les
push
clc
ret
inc
jge
pop
outs
mov
jmp
jg
hlt
(bad)
inc
jo
fnstcw
push
adc
xchg
mov
ret
ror
inc
or
enter
sbb
cmc
jp
xor
inc
and
int3
mov
int3
inc
fst
es
xchg
retf
jb
lods
xchg
xor
enter
mov
hlt
adc
inc
aad
mov
ja
push
daa
push
dec
mov
xchg
outs
inc
scas
pushf
mov
sub
mov
ja
sbb
dec
out
(bad)
mov
jmp
mov
jb
lock
mov
add
aaa
call
out
sar
add
mov
jp
add
(bad)
sub
pop
mov
std
xor
push
jmp
push
add
mov
arpl
and
sbb
inc
inc
inc
xchg
jge
xchg
sbb
pxor
loopne
mov
jo
jl
test
push
iret
fiadd
mov
cli
faddp
push
loop
inc
mov
clc
lods
mov
outs
ficom
scas
outs
mov
pop
inc
push
push
xor
xor
neg
xor
ficom
inc
xor
lods
xchg
mov
movs
jp
cs
push
in
jnp
mov
sbb
rcr
xchg
jno
aam
fstp
popf
stc
add
and
jg
mov
das
test
outs
xor
test
mov
cld
or
jge
inc
call
inc
aam
scas
inc
push
aaa
jns
mov
pusha
mov
mov
mov
adc
add
scas
aad
movs
mov
(bad)
sti
adc
inc
in
pop
movs
es
(bad)
fcomp
repnz
test
scas
add
test
popa
fdivr
(bad)
xor
adc
sar
out
mov
(bad)
aam
popa
and
xchg
push
adc
add
push
mov
sti
shr
es
fadd
imul
in
adc
adc
add
(bad)
(bad)
add
fist
daa
div
jno
mov
in
jg
mov
les
xlat
call
mov
pop
adc
out
add
into
test
ret
mov
test
sub
dec
pop
xor
bound
movs
adc
into
ds
mov
stc
test
ja
xchg
dec
pop
jge
adc
xor
cmp
push
pop
mul
sti
sar
out
mov
cmp
inc
pushf
mov
lock
and
hlt
test
fimul
inc
adc
xor
in
inc
push
xor
in
sub
dec
enter
cmp
push
adc
test
loop
mov
clc
mov
sub
(bad)
out
in
cmp
movs
test
fidiv
jmp
daa
out
mov
sahf
xor
xor
push
inc
in
jmp
xor
mul
les
fucom
pusha
ja
aaa
sub
iret
or
sub
sar
icebp
lds
pop
scas
jmp
xchg
je
jmp
or
ret
scas
neg
scas
cs
dec
jno
sub
(bad)
(bad)
mov
dec
daa
out
or
push
and
pop
mov
jg
sbb
sbb
add
jmp
call
xchg
sbb
xor
stos
push
sbb
xchg
std
(bad)
ss
mov
xchg
or
push
mov
xchg
int
mov
cmps
cmp
out
xchg
cmp
adc
test
cmps
dec
add
or
push
(bad)
mov
push
mov
rcl
cli
imul
enter
in
jns
out
in
mov
clc
push
adc
dec
inc
shl
push
out
xchg
aaa
jg
and
mov
push
sub
ret
mov
icebp
inc
inc
jmp
int3
rep
mov
cmc
lock
pop
mov
mov
pop
fstp
or
xor
repz
and
not
movs
pcmpgtb
in
dec
sbb
dec
stos
and
push
xchg
inc
adc
adc
jbe
cld
aad
adc
adc
aam
mov
jecxz
pop
mov
xor
ja
imul
outs
imul
icebp
rcl
push
push
aas
sbb
mov
jge
push
mov
cmc
mov
lds
in
std
fistp
inc
pop
mov
fadd
adc
fucomip
xchg
pushf
jnp
adc
push
daa
jg
fld
dec
xor
sbb
int3
leave
mov
adc
movs
(bad)
popa
fwait
dec
mov
cmps
mov
loope
movs
add
dec
out
cli
pop
outs
inc
pop
repz
add
mov
adc
and
mov
scas
sbb
xchg
test
or
mov
shl
lods
xchg
add
and
pop
out
in
enter
test
mov
fwait
ins
push
mov
fmul
ror
enter
nop
sbb
push
pop
mov
rcr
pushf
jo
js
(bad)
fisttp
cmc
ds
and
pop
arpl
scas
test
mov
push
sub
xchg
movs
cmp
pop
xor
stc
adc
mov
cmp
repnz
dec
mov
pop
stos
in
add
aaa
jae
push
int
pushw
(bad)
fnstsw
xchg
or
mov
mov
cmp
cmp
xchg
mov
xchg
push
push
jns
xor
cmp
mov
scas
stc
daa
jnp
xor
inc
aaa
mov
outs
dec
jo
xchg
ins
sbb
inc
xlat
mov
pushf
fsub
cmps
sub
pushf
jge
push
arpl
xchg
aaa
xchg
daa
dec
in
sub
jecxz
sub
(bad)
push
psubd
and
push
lods
call
nop
or
inc
mov
mov
daa
out
pop
inc
inc
mov
bound
ret
(bad)
add
inc
mov
push
loope
or
jae
in
mov
dec
and
or
aaa
icebp
mov
inc
pop
mov
mov
dec
jge
xchg
adc
movs
(bad)
rcl
jmp
rcl
mov
movs
add
pop
fistp
xor
fadd
fnsave
rol
mov
ds
in
and
adc
cmc
xchg
adc
cmps
aas
aad
(bad)
nop
pushf
mov
test
push
xor
dec
sub
xchg
push
aas
or
retf
das
dec
sub
stos
mov
mov
push
pop
shl
jo
enter
pop
sti
cld
xor
dec
sbb
and
les
add
xor
xchg
and
dec
pop
icebp
dec
in
pop
imul
pop
sbb
in
add
je
mov
sub
lds
xor
inc
sub
enter
adc
lahf
add
xchg
xchg
in
mov
adc
outs
mov
mov
cld
pop
icebp
jno
xchg
call
push
loop
mov
mul
retf
add
or
(bad)
mov
outs
pop
mov
inc
call
or
nop
lock
scas
ret
in
pushf
xchg
pop
pop
shr
mov
mov
inc
gs
ret
mov
pop
sub
leave
mov
loopne
fidivr
adc
mov
mov
jle
fwait
push
or
xchg
add
es
mov
fimul
mov
adc
jmp
scas
and
sahf
cli
fisub
outs
push
cmp
mov
scas
sbb
xor
lahf
push
clc
xchg
pop
aad
cmps
scas
cdq
add
xor
pusha
fidivr
lds
movs
push
stos
ss
mov
into
mov
loop
dec
jnp
sbb
call
hlt
cli
movs
stos
stc
lds
out
ins
dec
push
jp
stos
gs
jno
push
and
imul
enter
mov
(bad)
in
das
lea
scas
push
les
std
fst
cwde
and
fdivr
scas
jle
popf
cmp
daa
jb
fdiv
xchg
data16
not
push
leave
dec
int
sub
repnz
and
ret
cmps
out
jbe
not
les
jo
out
adc
mov
icebp
jns
xchg
rol
jbe
mov
inc
pop
cmp
call
int3
pushf
cmp
xchg
rcl
push
into
ins
mov
fstp
add
nop
int
enter
inc
jmp
jb
das
into
cmc
shl
(bad)
sub
popa
clc
leave
inc
ins
das
mov
loopne
cmp
xchg
es
inc
ret
inc
xor
(bad)
mov
fs
push
xchg
mov
jns
lock
inc
sbb
mov
stc
repnz
cmp
iret
jmp
jl
into
pusha
sbb
adc
and
and
dec
imul
je
test
cmp
adc
in
loope
sbb
jp
sbb
mov
dec
mov
cmp
push
ret
jae
ins
inc
lds
sbb
cmps
outs
sbb
cmp
loopne
cs
cdq
sbb
add
inc
cwde
in
push
dec
sbb
cmps
sbb
xchg
mov
push
jl
sub
mov
popf
in
mov
lds
push
and
dec
push
ret
sub
cmc
mov
jae
sub
jmp
fnstsw
addr16
sar
add
xchg
xchg
adc
cmp
inc
jb
fidivr
adc
mov
xchg
cmps
dec
mov
pushf
pop
inc
cmp
mov
nop
xchg
jge
enter
jmp
add
cmps
pop
cli
out
jmp
out
ret
fsub
shl
(bad)
sub
xor
push
sti
(bad)
test
jb
ror
outs
pop
es
loope
sub
xchg
mov
mov
ins
lods
cmps
das
ret
ja
jecxz
imul
stc
add
jecxz
imul
add
mov
push
jo
int
cld
bound
xchg
mov
call
cmp
fnsave
adc
lock
add
shl
xchg
fistp
jmp
mov
mov
iret
(bad)
cmp
(bad)
sub
or
push
outs
enter
outs
addr16
les
inc
into
div
add
adc
and
repz
add
inc
jno
jecxz
cmp
arpl
in
inc
retf
xchg
cmp
ja
arpl
cmps
dec
sub
sbb
(bad)
sbb
sub
cdq
call
call
inc
add
dec
mov
adc
jno
std
jecxz
lods
popa
pop
adc
and
pop
xchg
mov
int3
mov
jecxz
xor
pop
ins
inc
push
dec
outs
inc
fisttp
cmp
mov
daa
pop
cdq
rcr
adc
(bad)
fnstsw
out
and
arpl
push
out
pop
and
fcmovb
pop
scas
add
dec
fcom
popf
or
mov
jecxz
mov
popa
iret
stos
jmp
call
sbb
pop
push
dec
jmp
inc
sar
cwde
and
xor
jno
xor
sbb
call
dec
add
rcl
mov
fwait
scas
and
jbe
stc
add
mov
mov
shl
cli
sbb
xchg
xchg
dec
pop
ror
cmps
cs
mov
int
fcomp
pop
call
dec
sbb
mov
and
dec
rcr
pop
push
imul
jg
into
test
jge
sbb
push
ds
adc
xchg
inc
imul
bound
test
jmp
ror
stos
push
std
in
xchg
loop
sub
jns
adc
mov
movs
fisub
(bad)
sbb
dec
mov
push
mov
bound
fucompp
rcr
ror
ins
in
arpl
mov
stc
cmp
outs
nop
mov
into
mov
cmp
lods
retf
pusha
xchg
and
in
or
cmp
jmp
leave
or
cmp
fwait
lods
scas
pop
mov
fistp
outs
or
repz
dec
fbstp
or
mov
sti
push
xor
scas
jo
xor
xor
inc
dec
sub
push
(bad)
(bad)
fldcw
mov
dec
call
push
lahf
clc
mov
pop
xor
fdivr
add
inc
(bad)
aam
js
mov
push
cmp
loopne
(bad)
dec
movzx
aas
xchg
adc
js
sbb
lock
sbb
push
stos
out
or
pop
popf
jle
ror
pop
idiv
pushf
into
loopne
test
xchg
pop
rol
mov
jbe
pop
cs
stc
aaa
sbb
mov
cmp
or
data16
cmp
icebp
pop
sbb
stos
stos
adc
dec
mov
mov
jl
add
pop
int
add
test
test
lods
dec
xlat
(bad)
cmp
scas
cmp
dec
gs
mov
es
stc
add
inc
cs
and
repz
mov
mov
xlat
adc
lds
xor
push
xor
fimul
dec
(bad)
dec
ss
call
xor
mov
jno
dec
mov
(bad)
int3
stos
popa
icebp
add
mov
clc
jg
dec
sahf
dec
cmp
inc
leave
imul
inc
not
out
in
ins
cmc
xor
out
fldcw
arpl
movs
push
and
jmp
rol
xor
xchg
mov
out
jmp
pop
jg
cwde
(bad)
int3
push
loopne
dec
aaa
out
jae
xor
push
push
lods
lea
push
fcom
mov
std
add
jmp
mov
mov
push
loop
shl
sar
push
clc
or
sub
jae
fld
fsub
jbe
pusha
es
lods
adc
fimul
mov
sbb
movs
out
ret
mov
lea
pushf
cmc
or
jne
jne
pop
lea
pop
sub
push
stos
pop
pushf
lahf
stos
jmp
cmp
xchg
mov
daa
cmps
and
xor
jmp
inc
leave
jbe
xor
jmp
ror
ins
mov
push
xlat
(bad)
cmps
mov
fcomp
jne
dec
cmp
retf
sub
jmp
sbb
call
sbb
fstp
sbb
pop
es
adc
mov
ins
pushf
cmps
imul
mov
test
mov
cmps
add
imul
jae
call
js
(bad)
cmp
sub
cmp
add
and
inc
mov
ss
and
xlat
jns
push
popf
lea
adc
(bad)
pop
lods
cwde
jne
jnp
enter
jmp
sbb
jge
dec
not
ds
(bad)
fdivrp
ret
xor
push
mov
aaa
pop
xor
pop
cmp
clc
stos
cmp
movs
pusha
pop
xchg
xchg
add
movs
mov
adc
jns
out
addr16
adc
loope
loop
adc
leave
jl
outs
pusha
out
inc
test
imul
xchg
inc
or
sub
cmc
pop
inc
pop
into
repz
and
sbb
sub
inc
mov
cli
xchg
xchg
push
mov
dec
stc
jecxz
xchg
mov
into
sbb
cmp
mov
jecxz
mov
mov
pop
dec
pop
cmp
lea
or
in
mov
repz
(bad)
sbb
jecxz
push
lea
or
pop
or
outs
icebp
mov
cmp
mov
mov
sbb
(bad)
jl
mov
ret
and
push
jne
in
cmp
sbb
(bad)
(bad)
fcmovbe
adc
std
cld
xchg
mov
pusha
push
push
movs
leave
push
xor
xor
push
adc
xchg
dec
rol
add
jbe
mov
sub
dec
repz
and
pushf
sub
(bad)
ret
mov
sahf
ds
jbe
aam
fild
pushf
into
jns
xor
or
push
fwait
adc
rol
out
loope
push
jnp
bound
mov
dec
scas
and
xchg
push
inc
daa
scas
push
test
mov
in
dec
dec
addr16
add
call
dec
xchg
jmp
mov
xor
mov
dec
(bad)
xchg
enter
sub
jne
inc
adc
fild
scas
mov
cmp
cmp
dec
jb
fistp
stos
jmp
jecxz
loopne
cs
ret
pusha
lahf
mov
sbb
out
jno
mov
ins
inc
dec
sub
xchg
out
cmps
cmc
xchg
mov
jae
movs
jl
xchg
(bad)
cmp
ret
sbb
mov
mov
xor
xchg
mov
shl
lock
mov
mov
(bad)
pushf
fimul
push
stc
jns
jmp
mov
dec
scas
(bad)
dec
sbb
cmp
(bad)
imul
and
mov
enter
adc
retf
leave
mov
cmps
cdq
mov
and
cld
adc
mov
lods
pop
add
sahf
(bad)
loopne
or
xchg
jecxz
rol
sbb
mov
ins
mov
pop
movs
xchg
or
and
mov
icebp
xor
(bad)
cmp
push
adc
lods
stc
mov
xchg
jecxz
xlat
leave
mov
mov
call
cs
daa
inc
cld
fnsave
dec
ins
(bad)
stc
or
int
mov
(bad)
fst
pop
or
nop
ja
into
test
xlat
cmp
push
pop
dec
mov
fidivr
ins
xchg
les
adc
jge
mov
iret
push
sbb
inc
stos
xchg
jno
not
dec
mov
ja
cmp
mov
mov
or
imul
es
aad
loop
jno
repz
or
mov
and
loopne
in
push
mov
inc
fidiv
jbe
xor
ja
sub
stos
xor
dec
pop
fs
test
sbb
xchg
dec
popf
pushf
xchg
and
inc
jae
pop
xor
dec
add
cwde
add
push
mov
cmps
dec
ret
lahf
shr
push
stos
dec
loop
in
cld
cmp
cmp
shl
adc
stos
adc
cdq
xchg
add
dec
adc
mov
and
add
and
sub
ret
gs
jae
sub
push
jne
and
dec
cli
inc
mov
and
mov
addr16
lahf
mov
sbb
scas
xchg
lods
pop
std
aad
and
aas
daa
shl
dec
sub
ins
or
jmp
sub
nop
or
or
pop
jno
or
shl
push
mov
inc
int
jl
sbb
add
sub
iret
(bad)
mov
inc
inc
or
inc
add
cmp
es
lea
imul
lods
adc
push
xlat
aaa
ds
jno
cmp
xchg
in
movs
adc
push
cmc
out
jae
arpl
ja
fistp
xor
div
and
es
cld
xchg
jne
lods
add
or
int3
rcl
cdq
and
sbb
pop
xchg
mov
xor
mov
mov
mov
jb
scas
xchg
add
das
cmc
(bad)
push
fbld
int
cmp
pop
add
arpl
jecxz
xor
ins
mov
inc
call
cmp
into
jp
les
push
push
dec
int
test
jg
inc
mov
ss
adc
mov
inc
or
jecxz
mov
ret
jnp
xor
pushf
xor
adc
mov
clc
xchg
imul
ins
(bad)
stos
adc
mov
pop
repz
test
inc
div
jne
sub
les
(bad)
out
add
js
xor
xchg
out
adc
repz
test
retf
sub
test
rcr
leave
sbb
xchg
call
pop
cmp
cmp
(bad)
(bad)
scas
dec
push
(bad)
mov
push
xchg
jno
stos
call
jg
cld
popf
sub
imul
inc
fisttp
(bad)
idiv
dec
xor
(bad)
xchg
outs
adc
pushf
fld
fsubr
shl
pop
das
add
jmp
or
popf
test
add
in
sub
das
xchg
daa
push
pusha
xchg
or
or
test
dec
ds
lods
stc
jo
fstp
icebp
cwde
or
cmp
leave
repz
dec
in
cmps
and
leave
pop
xor
inc
in
push
es
jge
jle
test
xor
jecxz
aad
mov
pop
cmc
(bad)
repz
popf
mov
sub
add
push
retf
add
mov
sti
outs
adc
fld
pop
in
pop
adc
jecxz
mov
dec
in
pop
loopne
int3
push
js
out
sub
mov
(bad)
cmps
inc
xchg
aad
mov
sub
cmc
pop
repz
ret
mov
xor
es
(bad)
retf
ror
add
nop
push
and
bound
cmps
pop
mov
cdq
outs
bound
push
aad
mov
push
dec
lea
aas
mov
stos
push
push
sub
loope
inc
cmps
popa
aaa
lahf
xchg
pushf
sbb
or
sub
cs
push
cmp
push
jns
js
stos
push
pop
push
movs
not
daa
lock
cmp
fst
out
or
xchg
mov
daa
mov
scas
jae
mov
xchg
out
jg
sahf
int3
lds
stos
pop
push
icebp
sbb
mov
sub
lea
out
push
xor
mov
add
ins
cmc
ror
pop
dec
ficom
hlt
lahf
push
cwde
mov
cmp
ins
pop
mov
loopne
out
pop
jae
in
mov
popa
inc
shl
jle
and
dec
jl
jg
jns
dec
jge
ins
mov
xor
jmp
out
jecxz
loope
pop
popa
sahf
int
arpl
xchg
push
mov
push
mov
push
adc
inc
xchg
xor
jmp
push
andps
fstp
adc
pop
inc
jno
and
lds
shr
pop
jae
ss
mov
sub
sbb
pop
and
(bad)
fistp
sar
aas
das
jl
or
(bad)
adc
pop
aaa
xlat
mov
cmp
div
xchg
(bad)
(bad)
jae
mov
cmp
outs
ret
pop
inc
mov
cwde
in
jno
(bad)
jo
mov
arpl
loop
mov
xchg
outs
xchg
xor
pop
aam
xchg
add
hlt
clc
inc
cmps
adc
fwait
inc
fisubr
ror
mov
lahf
cwde
call
imul
or
push
lock
inc
push
stos
jp
imul
jle
imul
lods
jns
iret
mov
sub
fnstsw
add
movsx
dec
mov
mov
jge
fldcw
fistp
stc
sbb
fdivr
pop
inc
cwde
test
(bad)
scas
fdiv
pop
inc
cwde
or
add
ror
sub
fs
(bad)
xor
gs
sahf
(bad)
addr16
cdq
pop
hlt
or
data16
in
dec
jle
popa
repz
stos
pop
mov
xor
inc
xchg
jnp
ror
clc
retf
sub
xor
sub
imul
xor
dec
and
dec
sbb
cmp
cmp
aam
mov
mov
pop
or
jae
imul
push
pop
and
mov
sub
mov
sub
ds
bound
pop
pop
repz
adc
sbb
push
lock
pop
icebp
movs
retf
shr
cmps
mov
and
xor
ss
psllw
dec
sbb
sbb
enter
pop
je
lea
mov
(bad)
dec
inc
mov
test
aam
mov
call
adc
sbb
daa
mov
imul
popf
repz
mov
dec
mov
xor
cdq
iret
into
inc
enter
cs
inc
cmps
hlt
jg
jo
ins
and
(bad)
mov
(bad)
lea
lods
retf
cli
and
or
pop
xchg
lahf
jnp
(bad)
(bad)
mul
add
out
push
mov
pop
loop
inc
(bad)
add
adc
adc
fistp
xchg
push
inc
xor
sti
lods
cmp
and
mov
out
inc
push
movs
and
in
fwait
mov
repz
repnz
or
mov
(bad)
aaa
movs
or
xchg
pop
mov
pop
jle
shr
mov
das
mov
loop
adc
cmp
mov
mov
jge
dec
pusha
fst
cmp
out
add
movs
lahf
aas
push
out
cmps
jne
xchg
scas
cdq
mov
sti
fdiv
leave
jl
in
xchg
aaa
mov
fnstenv
fs
aaa
xor
outs
popa
js
ror
mov
pop
repnz
in
rcl
jle
jb
jbe
jp
inc
mov
loope
dec
nop
mov
xor
stc
mov
mov
loopne
ins
fimul
sbb
pop
add
mov
pop
push
jmp
xor
out
mov
dec
iret
fiadd
movs
int
ret
xor
loopne
push
sub
mov
retf
mov
enter
ficom
or
es
stos
je
mov
jg
(bad)
out
cdq
add
shl
sti
push
jmp
clc
aas
xor
mov
aas
xchg
or
daa
outs
fsubp
mov
cdq
mov
ret
adc
(bad)
clc
mov
lock
movhps
hlt
sub
lods
push
in
jno
mov
call
pushf
push
arpl
fisubr
in
fisub
cdq
std
data16
fld
cmp
enter
push
retf
jle
and
stos
xchg
popf
or
mov
mov
(bad)
jle
jb
loop
shl
sbb
dec
jno
sub
cmps
ror
xor
inc
pop
in
sub
mov
adc
(bad)
mov
leave
lds
jmp
loopne
and
loope
test
jne
sub
mov
add
in
adc
loope
or
mov
aam
xchg
xchg
loop
inc
jmp
das
dec
inc
aaa
xchg
rcl
sbb
adc
cdq
movs
dec
sub
jae
cmc
(bad)
mov
push
add
stos
out
or
pop
xchg
fadd
jle
adc
neg
xor
int
and
xchg
push
jae
inc
retf
cmp
dec
and
movs
mov
mov
add
sbb
or
adc
mov
mov
pop
jmp
sub
or
or
ins
push
inc
xor
inc
stc
addr16
push
cdq
push
fnstsw
and
mov
stos
dec
dec
out
in
sub
inc
fisub
pop
push
adc
jmp
movs
jg
and
push
push
movs
jae
in
pop
xchg
pop
imul
mov
jae
xor
or
dec
cmp
push
mov
push
sbb
lahf
test
jg
mov
jmp
dec
ins
aam
scas
aas
or
sar
or
jne
sbb
pusha
push
leave
xor
xor
js
cmp
(bad)
jecxz
mov
aas
pop
fnstsw
add
sub
mov
dec
lds
adc
add
sbb
xor
xchg
test
mov
dec
jp
stc
div
ret
popa
dec
xchg
xor
add
add
or
push
jl
repnz
scas
shr
xor
mov
pop
mov
adc
(bad)
xchg
mov
cmp
ret
add
cs
lahf
push
adc
je
ss
adc
and
pop
mov
fnstenv
dec
rol
cmp
mov
aam
adc
stos
mov
nop
movs
sub
arpl
add
lds
popa
adc
out
add
inc
mov
jo
je
jbe
fiadd
mov
jb
cwde
rol
dec
or
inc
xchg
out
(bad)
jmp
dec
cdq
clc
cmc
enter
dec
sbb
pop
jb
outs
xor
add
sbb
cld
push
mov
mov
lea
inc
fwait
or
das
jmp
sbb
add
inc
push
xor
mov
and
ins
mov
ins
jno
mov
push
daa
dec
icebp
mov
xchg
das
xchg
xchg
push
dec
(bad)
xor
push
mov
dec
out
pusha
xor
call
and
add
imul
cmc
sub
or
imul
fdivr
out
pop
cmps
imul
retf
xchg
sub
cs
cmps
cmp
xchg
outs
sbb
(bad)
das
mov
jmp
ss
imul
ror
sub
mov
xchg
push
movs
dec
scas
pcmpeqd
push
in
pop
pop
addr16
and
xor
xor
sbb
dec
div
jl
test
pop
popf
aam
add
cli
lea
pop
xlat
mov
(bad)
cmp
push
mov
cmp
(bad)
or
shr
hlt
cdq
fldcw
add
fs
jnp
loope
fist
sbb
and
add
jne
stos
out
aas
stos
lods
bound
or
ja
add
push
(bad)
hlt
mov
sti
push
cdq
cmp
pop
ffree
dec
mov
cmp
inc
stos
es
sbb
aas
mov
cmps
xor
pop
jmp
jmp
xlat
mov
mov
cmp
ja
add
ja
ret
mov
pop
pop
test
cmp
pop
mov
(bad)
mov
jg
or
mov
daa
add
nop
pop
push
loopne
ret
pop
sub
shl
fild
out
cmp
push
in
in
ror
push
fnstenv
push
adc
inc
push
mov
jbe
sbb
ret
pop
dec
or
into
jmp
lods
out
xchg
xor
push
stc
out
gs
fst
mov
int
or
or
fwait
add
neg
cmp
repz
adc
test
mov
and
push
jo
mov
loopne
arpl
iret
cld
pop
pop
push
loop
(bad)
push
fild
mov
xchg
pop
and
ficom
sub
pop
adc
cdq
push
int
(bad)
xchg
stc
mov
int
addr16
loope
outs
cs
dec
xchg
jl
jb
mov
mov
inc
gs
lea
lods
out
adc
push
or
shr
dec
fs
cmps
call
pop
cmp
pop
pop
jo
fmul
mov
(bad)
fistp
jo
sbb
daa
pop
jmp
and
je
xchg
jae
int3
cmp
sub
aam
and
cmps
leave
outs
push
sub
loope
out
aad
mov
retf
add
or
outs
and
mov
push
jbe
frstor
fwait
sub
daa
sub
cmp
retf
add
ss
and
jne
push
movs
out
movs
scas
stos
xchg
mov
and
jne
sub
test
ja
and
fwait
pusha
cmp
lock
ret
jmp
sbb
je
mov
cmp
test
xor
push
pop
pop
aam
retf
xor
xor
test
jl
(bad)
jo
push
stos
bnd
call
cmps
in
mov
mov
pop
add
xchg
jle
icebp
test
adc
cmps
jbe
mov
jmp
sbb
ret
pop
dec
cmp
shl
dec
call
and
mov
ins
cmc
jl
addr16
int3
push
dec
pop
sbb
push
xor
mov
aad
iret
mov
add
repz
repnz
add
sbb
out
das
fisttp
xchg
pop
push
add
repnz
arpl
movs
xor
push
lahf
cmp
(bad)
sbb
aam
inc
xor
jb
das
ins
lods
jno
pusha
mov
mov
ja
stc
add
and
adc
out
sbb
push
xor
stos
or
outs
sbb
mov
adc
mov
popa
or
mov
pop
sbb
cli
inc
ret
iret
cmp
and
cmp
sbb
adc
xchg
mov
and
enter
and
cmp
lock
sbb
inc
mov
ja
xor
leave
out
cmps
pushf
bound
ja
ins
cwde
add
mov
retf
retf
mov
mov
gs
pop
shr
add
mov
addr16
jmp
mov
inc
(bad)
cwde
inc
add
rol
int3
loop
mov
arpl
fsubr
sbb
push
mov
mov
add
jl
cmp
out
aaa
cdq
retf
or
aas
les
jmp
arpl
jge
not
sti
popa
(bad)
int3
test
scas
fcmove
jae
xlat
mov
dec
cmp
mov
cdq
add
dec
sti
sar
cmp
pop
leave
scas
ins
sahf
xchg
jno
and
mov
push
or
mov
cmp
(bad)
and
gs
ins
fild
pop
mov
pop
cmp
aas
xor
xchg
repnz
xor
push
dec
fwait
mov
pushf
xor
fistp
cmp
dec
jae
and
retf
mov
jmp
jmp
loop
(bad)
lea
out
sub
and
lea
mov
jl
and
aad
mov
cmp
and
xchg
lods
inc
(bad)
jae
mov
mov
mov
aaa
addr16
and
test
repz
jg
xchg
aam
mov
pop
dec
pop
xchg
mov
jge
test
sub
mov
(bad)
push
pop
xor
dec
ds
push
repz
fidivr
ja
and
add
sbb
xchg
xlat
mov
xchg
dec
ss
mov
rol
mov
mov
jp
repz
enter
sub
retf
inc
and
xchg
pop
xor
(bad)
xchg
test
adc
sti
clc
mov
iret
fadd
cwde
scas
jecxz
xchg
into
stc
dec
adc
popa
cmps
rcr
dec
jmp
mov
or
cmp
mov
(bad)
ror
iret
(bad)
xchg
and
ss
into
outs
mov
mov
test
pop
jp
aaa
push
popf
cmp
call
mov
std
adc
mov
jnp
jl
div
inc
push
mov
mov
test
cmp
aad
pop
pop
stos
test
jmp
dec
jl
outs
dec
jno
(bad)
bound
into
xchg
fcomp
pop
les
sahf
push
xor
fld
xchg
jne
push
jb
cmp
push
shl
neg
and
inc
test
repz
cmp
imul
xchg
dec
xchg
cwde
icebp
sub
sub
sbb
fidivr
clc
test
sub
fidivr
dec
pusha
outs
pop
sbb
(bad)
jecxz
mov
inc
(bad)
dec
dec
sbb
sbb
jno
pop
fimul
loope
mov
and
adc
sub
xchg
sbb
fwait
dec
(bad)
push
pop
push
mov
mov
sub
xchg
push
sbb
sub
ret
sub
fidivr
jns
ret
adc
add
popa
dec
(bad)
retf
sbb
ins
jg
mov
xor
(bad)
or
or
jb
ins
or
jl
pop
mov
sub
sub
pop
mov
retf
pop
test
and
cmp
arpl
push
inc
xchg
stc
cmp
dec
sub
add
push
call
(bad)
rol
bound
stc
xor
and
dec
and
in
loope
fcom
and
xlat
hlt
push
leave
jno
int
pop
movs
push
push
or
inc
adc
(bad)
jmp
cli
jae
jecxz
inc
cli
xor
les
cmp
xor
out
mov
jg
push
dec
push
mov
movs
in
arpl
add
inc
jbe
stos
ins
js
push
push
sbb
xchg
aaa
cld
push
out
jle
mov
mov
test
mov
or
dec
jbe
adc
loop
cmp
out
push
pusha
cmp
aas
das
and
jp
sub
shl
js
jmp
js
js
stos
jge
cs
xchg
pop
push
dec
(bad)
cwde
push
jmp
jae
or
add
push
loope
mov
jns
je
xchg
mov
jo
fsubp
shl
add
jae
mov
dec
jne
sbb
in
pop
mov
push
ja
inc
mov
or
mov
cdq
into
and
repnz
pop
stos
and
sahf
iret
or
sub
cmp
xchg
mov
dec
retf
test
inc
cwde
leave
fstp
aaa
pop
rcr
in
mov
jnp
mov
loope
addr16
xchg
xchg
sar
xchg
test
out
pop
xor
test
sub
adc
jbe
or
enter
xchg
mov
aas
dec
pop
xor
(bad)
fmul
cmp
push
push
cs
into
cs
nop
xchg
cdq
cmps
mov
movs
(bad)
clc
jns
bound
jle
ret
sub
test
(bad)
adc
(bad)
pop
sbb
fnstenv
xchg
xchg
ror
cwde
sub
or
adc
(bad)
ror
xchg
pushf
not
std
xlat
sub
jmp
nop
xchg
call
popa
push
scas
mov
pop
or
bnd
add
jns
sbb
test
xor
pop
add
pop
adc
xor
(bad)
stc
jp
cli
mov
push
(bad)
cmovge
popa
adc
shl
pop
icebp
xor
(bad)
ds
test
bound
xor
dec
dec
enter
mov
mov
xchg
xor
xor
push
xchg
adc
rol
arpl
mov
mov
mov
loope
cli
jo
xor
jno
or
pop
fnstenv
int3
gs
jg
sub
je
es
mov
cdq
popf
adc
data16
call
shl
(bad)
nop
dec
mov
jecxz
outs
add
outs
dec
pop
imul
cmp
mov
jg
in
stos
shl
jb
inc
idiv
xor
sar
or
cmp
ins
xchg
pop
jne
stos
stos
xchg
xchg
out
mov
gs
sti
xchg
jno
cwde
aad
push
add
ret
push
push
adc
mov
mov
ror
mov
jns
out
jmp
lods
inc
pop
out
cmp
test
mov
and
mov
(bad)
pushf
add
xor
push
jge
xchg
lods
push
and
sbb
cmp
addr16
movs
in
mov
repz
(bad)
fidiv
retf
out
call
gs
daa
add
outs
mov
add
dec
sub
xor
cmp
jle
test
xchg
(bad)
not
or
not
and
xchg
xor
pop
cmp
or
xor
ret
call
out
jle
jecxz
adc
jb
(bad)
test
pop
pop
rcr
icebp
xchg
ja
add
fadd
or
jp
cmp
je
lods
dec
ins
lahf
ds
shl
pop
repz
jge
mov
outs
mov
dec
lahf
iret
mov
and
xor
mov
or
xor
fidivr
ret
xchg
lds
retf
lea
or
and
jno
loop
and
popa
icebp
clc
pop
nop
cmps
pop
scas
sbb
pop
xor
xlat
test
cwde
push
in
push
add
jecxz
dec
xor
in
and
lods
sbb
xor
inc
mov
addr16
mov
leave
add
(bad)
jno
and
dec
and
xchg
rcl
dec
sbb
adc
mov
call
sub
(bad)
pusha
test
and
outs
iret
push
jne
inc
std
or
jbe
(bad)
push
scas
jno
inc
loop
or
pusha
mov
ret
int3
pop
cmp
clc
into
inc
push
cmp
out
dec
jae
arpl
mov
fnsave
sub
das
imul
ror
dec
nop
mov
mov
inc
xchg
mov
adc
pop
jge
inc
inc
adc
adc
gs
push
mov
(bad)
addr16
mov
mov
xor
gs
inc
ss
or
sbb
push
cmp
add
test
pop
cmp
jmp
(bad)
aam
fild
in
ins
and
add
(bad)
xor
dec
ret
pop
rol
sub
or
test
stos
or
jae
std
xchg
les
aad
test
inc
test
call
mov
jp
fcom
(bad)
repz
test
adc
jno
pop
inc
inc
add
jle
movs
dec
leave
sbb
cs
in
stos
dec
mov
push
sbb
loop
fcom
jg
cli
cld
iret
leave
and
sahf
std
xor
ror
sbb
inc
out
jecxz
(bad)
jmp
scas
lea
jb
lea
std
arpl
pop
sub
push
dec
(bad)
in
gs
xor
ficom
sbb
iret
sub
cld
pop
jae
xchg
iret
sahf
jne
mov
movs
sysret
mov
retf
push
lea
idiv
ds
and
add
aaa
xor
sub
outs
outs
das
daa
pop
call
xlat
in
add
inc
xor
fild
dec
sbb
popa
aam
xor
cmovo
retf
fs
inc
sbb
lods
inc
sbb
mov
pop
movs
mov
cmp
cmp
pop
test
jmp
(bad)
(bad)
cmp
jge
push
sbb
popf
repz
pushf
xchg
int3
stos
jge
stos
push
or
es
iret
jno
loop
rcl
jmp
jo
and
les
sub
ret
imul
mov
xchg
mov
pusha
xor
mov
cmp
shl
arpl
in
je
repnz
scas
jns
xchg
sar
and
pop
jns
xchg
or
mov
push
int
lods
into
repnz
shr
mov
mov
xchg
pop
outs
(bad)
dec
sbb
jb
repz
pop
jg
xchg
push
int
jp
leave
in
inc
jae
in
lods
addr16
jne
pop
stos
xor
lahf
sahf
xor
rol
fwait
push
or
mov
jecxz
(bad)
jnp
mov
sbb
jle
mov
gs
dec
pop
call
dec
cmps
arpl
mov
test
cmp
add
leave
push
call
inc
mov
xor
cmps
scas
in
sbb
loope
or
(bad)
mov
inc
xor
dec
sub
adc
lahf
dec
cli
or
xor
repz
push
push
inc
imul
in
into
mov
outs
and
and
pop
xchg
in
add
jns
popa
(bad)
mov
or
cmp
lea
pop
test
or
mov
add
jmp
xchg
ret
inc
ret
(bad)
sub
jne
inc
mov
and
scas
jge
jo
add
inc
xchg
and
ss
push
cmp
xor
push
cmps
scas
jmp
sbb
loope
jnp
jbe
inc
xchg
lods
ficom
xchg
cmp
push
push
pop
fisttp
repnz
mov
jp
pop
mov
jns
adc
mov
mov
jno
cmps
cmp
outs
jae
popa
mov
movs
xchg
xchg
sar
loopne
(bad)
jp
retf
inc
dec
push
dec
push
cmp
lds
mov
push
shl
es
retf
sahf
inc
in
loop
fsubp
in
jge
pop
shr
lock
fcom
cmp
xor
jbe
cmp
outs
cmps
mov
mov
lods
push
fdiv
out
lods
xchg
inc
xor
sub
pop
cmp
or
movs
cmp
imul
fs
adc
pop
dec
sub
xchg
xor
popa
in
mov
dec
call
xlat
adc
cmp
shl
dec
icebp
pop
iret
or
mov
in
dec
fwait
sbb
imul
jb
in
mov
or
ss
jb
xor
adc
and
in
sahf
sub
outs
std
movs
lods
ins
cmp
push
pop
sub
scas
(bad)
bound
test
scas
pop
int
xor
push
or
arpl
and
mov
sbb
or
int
retf
mov
stos
mov
and
cmp
pop
dec
sti
push
fiadd
out
cmp
repz
inc
ds
test
pop
cmc
sbb
fsub
push
or
arpl
push
pop
jmp
neg
inc
dec
sti
pop
cmps
pop
imul
div
addr16
xchg
arpl
xor
adc
and
call
outs
in
pop
out
dec
sub
retf
xor
mov
out
jno
mul
sbb
jnp
(bad)
xchg
dec
not
ins
mov
imul
out
in
hlt
aad
xor
mov
xor
retf
mov
cdq
sahf
repz
ins
xor
sub
xor
(bad)
push
addr16
enter
stc
sbb
fsubrp
pop
ror
push
imul
sub
push
scas
xor
ins
pop
xor
(bad)
mov
and
jmp
pop
and
iret
enter
cli
mov
test
sub
lods
sbb
add
sub
xchg
dec
xchg
(bad)
fadd
mov
sbb
xor
push
loopne
or
and
gs
int3
ret
adc
ja
imul
mov
sub
inc
or
movs
add
dec
call
pop
jge
(bad)
aas
sbb
ins
jl
fadd
std
cmps
sahf
sbb
inc
mov
mov
ror
pop
jp
lods
xchg
stos
retf
xor
push
mov
ficomp
fsubr
adc
xor
call
cli
xlat
bound
(bad)
xor
and
xchg
jle
mov
pop
xchg
and
outs
cmps
arpl
(bad)
rcr
push
sbb
sub
movs
sub
jnp
push
inc
xlat
and
mov
imul
pop
retf
push
sub
inc
jmp
icebp
ds
jo
or
or
mov
push
mov
xlat
mov
cs
loope
xlat
dec
das
and
bound
loopne
add
or
or
lds
dec
fst
imul
cmp
enter
adc
hlt
push
shl
pextrw
aas
fiadd
pop
add
in
scas
mov
retf
outs
pop
sub
and
sub
push
imul
xchg
dec
mov
push
pushf
in
scas
sub
mov
sahf
das
xor
outs
or
cmp
in
ret
stos
xchg
movs
cld
leave
xor
jb
xchg
sti
in
pop
lods
mov
call
xor
pop
sti
mov
addr16
pop
loopne
jp
jmp
jl
sti
mov
call
mov
fbld
xchg
mov
xor
fs
into
es
push
jno
pop
movs
das
je
mov
pop
lods
repz
call
test
cld
dec
cmc
jo
push
xchg
and
push
jle
pop
xchg
push
cmp
cmp
mov
inc
dec
xchg
mov
inc
jno
push
call
mov
mov
repnz
out
push
xor
stos
jnp
es
jo
push
lods
pushf
adc
sbb
push
rcl
xchg
cmpps
dec
(bad)
jmp
adc
shl
je
sub
dec
ror
lea
nop
dec
xchg
or
xchg
sar
mov
std
xchg
adc
ins
jmp
ret
mov
lds
lods
ret
rcl
xor
(bad)
or
xchg
push
enter
dec
cwde
push
retf
xchg
jns
scas
cmp
pop
or
dec
push
pop
and
mov
call
je
ror
mov
push
inc
pop
mov
pop
or
pop
sbb
cld
inc
jmp
iret
pop
jmp
sub
int3
int3
out
xchg
clc
jmp
cmp
popf
push
inc
push
popa
add
out
push
cli
arpl
lds
or
add
bound
jmp
addr16
push
je
pop
cld
stc
enter
iret
mov
iret
(bad)
ins
jge
sbb
fst
xor
cmp
cmps
mov
mov
mov
xor
test
inc
out
adc
or
pusha
push
fucomi
iret
loope
jl
fisttp
jl
xchg
push
data16
xor
jno
test
hlt
ins
loope
mov
cdq
clc
push
mov
test
pop
popf
xor
push
jae
mul
add
stos
jge
in
sub
out
xor
jae
adc
pop
or
push
test
iret
dec
xchg
xlat
xor
lea
dec
fist
adc
mov
iret
sbb
(bad)
pop
mov
xor
repnz
test
mov
pop
jecxz
cmps
cwde
cwde
fdivr
fistp
scas
stc
mov
and
adc
pop
scas
add
or
(bad)
jecxz
adc
add
jae
in
xor
int3
fiadd
nop
mov
sbb
adc
clc
and
test
jle
and
xor
stos
adc
sti
xchg
ins
fmulp
sbb
dec
pushf
cli
enter
fimul
dec
idiv
push
call
ins
arpl
ja
ror
mov
xor
addr16
xor
xchg
fcmovne
movs
xchg
mov
popa
mov
pop
stc
lea
add
ins
mov
or
add
loope
cmp
mov
xchg
mov
(bad)
pop
inc
or
ffreep
arpl
mov
out
jmp
cmps
es
leave
ins
pop
push
aad
jecxz
popw
ucomiss
cwde
cmps
adc
pop
mov
adc
cmp
xor
add
pop
push
leave
sub
daa
sar
sub
test
lea
sub
jo
pop
jge
mov
clc
pop
mov
mov
int3
ja
sbb
fidiv
xor
fwait
mov
div
jns
adc
les
mov
test
inc
add
ficomp
pop
pop
mov
or
test
fldenv
jmp
pop
retf
mov
repz
jmp
add
es
aad
in
xor
popa
inc
push
pop
clc
sti
push
dec
aaa
lock
dec
cmps
ficom
stos
cmp
repz
(bad)
repnz
xchg
cs
test
fiadd
or
jl
scas
pop
cmps
push
inc
pop
(bad)
push
push
dec
lods
iret
gs
retf
popf
push
inc
cli
mov
outs
pop
sub
cmp
scas
inc
inc
jno
aam
mov
(bad)
aam
aaa
add
mov
leave
and
add
je
shr
cmp
mov
cmp
mov
imul
add
jo
outs
cmp
xor
rcr
or
jg
pop
nop
lock
jmp
mov
sub
arpl
sti
(bad)
mov
push
arpl
ds
stos
mov
adc
mov
push
sub
xchg
mov
nop
sub
imul
xchg
ins
cwde
pop
jmp
jo
aad
push
test
div
cmp
and
ja
pop
mov
std
retf
(bad)
repz
dec
aad
jg
dec
in
leave
xchg
sti
pushf
pop
xor
pop
popa
mov
xchg
sar
inc
push
and
les
mov
loop
repnz
fnstenv
aas
mov
and
and
loopne
xchg
daa
add
push
push
mov
jmp
cmc
lods
mov
jmp
ds
mov
(bad)
js
test
mov
mov
cmp
lock
mov
cmp
(bad)
mov
sahf
sub
mov
(bad)
mov
sub
cmps
cmps
push
cmp
in
scas
gs
jl
in
aaa
mov
test
sub
iret
lock
loopne
push
push
jmp
jp
add
jae
xchg
test
xchg
bound
adc
cdq
jbe
and
pop
out
cmp
xchg
stos
loopne
loopne
nop
loope
mov
add
inc
test
sahf
mov
jle
int
pop
ror
push
out
xchg
movs
dec
pop
popa
inc
mov
ror
or
xor
jb
or
mov
inc
add
inc
cmp
push
jge
pop
pop
call
ins
cmp
test
hlt
in
cld
shr
and
xor
push
mov
gs
or
movs
push
imul
and
retf
sbb
or
sahf
fsubr
sbb
add
mov
sar
xor
rcr
adc
inc
data16
mov
pop
jp
cmp
iret
xor
mov
xor
adc
aam
gs
lods
lahf
xor
xchg
cmp
cmps
(bad)
into
into
popf
pop
test
in
popa
or
movs
lea
sub
popa
cwde
in
(bad)
lods
adc
mov
test
imul
mov
and
push
or
dec
mov
fdiv
out
fs
push
cmp
xor
daa
inc
sub
cmps
mov
xor
and
jl
ret
dec
push
stos
jo
sahf
shl
jae
sub
xchg
retf
cs
gs
xlat
push
inc
jno
nop
popf
pop
jno
(bad)
dec
ins
loop
in
mov
cmc
mov
or
icebp
outs
lods
mov
sbb
addr16
dec
ror
stos
mov
inc
es
out
sti
xor
and
ins
mov
imul
loopne
rcr
mov
and
add
xor
into
rcl
dec
scas
lods
(bad)
pop
or
mov
ds
popa
fucom
and
fwait
movs
aam
add
fldcw
xor
mov
leave
cmp
jge
mov
adc
daa
adc
cmp
lods
ss
ror
and
(bad)
mov
push
or
mov
or
xchg
mov
and
or
fwait
jmp
ins
xor
push
call
mov
or
es
xor
add
fs
push
dec
pop
inc
cmp
adc
pop
ds
mov
idiv
pop
hlt
lods
cmp
dec
cmc
mov
aad
lea
loop
inc
sbb
cmp
mov
ins
jnp
pop
push
cld
push
xchg
xchg
les
fsubr
sub
mov
mov
push
add
inc
add
shl
cld
inc
mov
pusha
push
js
mov
int
inc
inc
repz
in
fs
test
and
repz
mov
(bad)
jne
outs
sbb
imul
in
sub
test
or
ins
dec
jns
loope
sbb
and
mov
and
mov
bound
cmp
inc
inc
lods
cmp
into
or
repnz
push
cwde
and
cmp
mov
daa
imul
(bad)
shr
jne
mov
shr
stos
pop
pop
imul
mov
mov
hlt
dec
mov
nop
in
inc
cmp
ins
je
cmc
adc
inc
loopne
pop
fisttp
and
pop
pop
jp
fwait
in
call
ror
(bad)
adc
push
cmc
fwait
or
repz
mov
push
adc
add
in
add
jo
fwait
cmps
int
mov
hlt
nop
retf
cmps
push
push
push
xor
mov
xlat
push
push
retf
inc
(bad)
jns
xchg
xchg
or
out
aam
sbb
jl
mov
pop
lea
xor
mov
lock
xchg
outs
sahf
sbb
pop
in
cmp
xchg
out
cmp
or
ror
jg
xchg
pop
neg
retf
cld
js
cmp
int3
push
dec
popa
sub
ins
inc
lods
in
pusha
in
mov
dec
xchg
js
jmp
sbb
sub
dec
std
ins
inc
lock
fadd
inc
xchg
(bad)
and
es
jb
aad
or
add
xor
xchg
aam
inc
cwde
popa
xchg
test
les
and
(bad)
jecxz
inc
adc
ja
sub
scas
sbb
or
cmp
rcr
xchg
jp
hlt
daa
in
cmp
cmps
xchg
rol
rol
mov
jns
add
aaa
retf
loop
inc
stos
stos
inc
in
daa
xchg
xor
sub
in
mov
das
xchg
cld
xor
add
cmp
mov
mov
scas
dec
dec
sub
sub
inc
cmp
mov
mov
fistp
into
sub
test
push
cmp
push
mov
in
xchg
pop
ins
mov
dec
add
gs
lahf
test
int3
jge
xchg
daa
sbb
(bad)
pop
and
push
dec
xor
and
pop
mov
pop
enter
or
in
adc
dec
mov
sub
rcl
mov
lahf
loopne
mov
into
sub
or
or
ins
dec
adc
fcomp
arpl
cmp
xchg
jmp
dec
inc
in
or
cmp
push
call
les
out
les
and
pop
fdivrp
push
fwait
xor
sub
sbb
xor
hlt
cli
repnz
sbb
cdq
imul
jnp
jl
push
(bad)
cmps
sub
fs
sahf
push
outs
mov
adc
and
xchg
jo
ret
loopne
pop
js
jmp
mov
inc
cmp
dec
jns
cmp
xor
(bad)
retf
mov
fwait
mov
sub
loopne
dec
lea
jmp
adc
cli
fisub
pop
dec
sbb
pop
pop
das
cmp
xor
fadd
test
cmps
fisubr
xchg
sub
shl
pushf
push
aaa
or
inc
dec
mov
lahf
adc
in
dec
cmp
add
fcom
add
jno
js
mov
nop
sbb
in
das
ins
scas
or
stos
mov
(bad)
mov
xor
dec
fdiv
lods
div
cmc
out
into
mov
pop
pop
sub
mov
fbld
lods
cmp
add
fimul
mov
data16
movs
add
sub
cdq
test
jp
mov
dec
push
xchg
xchg
out
cwde
in
dec
mov
add
call
adc
or
int
or
pop
pusha
daa
inc
adc
mov
inc
pop
inc
adc
loop
xor
push
icebp
sbb
pop
xor
scas
and
mov
(bad)
pop
and
xchg
inc
jmp
sbb
xor
test
xor
sub
adc
push
push
rcl
add
jmp
xchg
cmc
mov
mov
jbe
sub
dec
dec
push
hlt
mov
push
popf
pop
cmp
lock
cmp
clc
mov
fdiv
mov
mov
call
aas
mov
or
push
in
push
mov
js
mov
ror
movs
clc
jecxz
xor
(bad)
in
rcl
retf
sbb
fiadd
in
cmc
sbb
outs
mov
push
jl
(bad)
leave
xchg
inc
xchg
movs
push
fld
sub
mov
xor
xchg
sub
pop
lods
jbe
mov
push
push
les
pop
inc
push
iret
lea
mov
nop
jns
pop
dec
lods
mov
out
pop
repz
and
jmp
call
call
mov
push
cmp
stc
adc
push
sbb
mov
retf
sbb
scas
pop
nop
out
pop
pop
je
jns
push
jg
or
xchg
stos
das
or
(bad)
lahf
xlat
clc
inc
aas
sub
add
inc
daa
aaa
xchg
xlat
xor
fisttp
outs
jmp
jp
int
xor
cmp
push
jne
jno
arpl
jne
mov
es
int3
cmc
xor
and
cmp
xor
pop
xchg
popa
outs
inc
or
cmp
cmps
fincstp
push
out
mov
fwait
pop
and
ret
push
loopne
repz
sub
retf
jecxz
daa
fmul
rcl
inc
dec
xchg
mov
pop
dec
test
pop
jecxz
or
mov
aas
add
inc
or
outs
icebp
es
jno
mov
in
retf
and
repnz
add
call
jecxz
imul
add
popa
inc
pop
jno
dec
mov
jecxz
std
or
jne
add
arpl
rcr
cmps
out
jecxz
addr16
xchg
idiv
cdq
ror
mov
sbb
(bad)
ins
fcomp
push
xchg
int
jmp
mov
movs
das
cdq
rcl
in
cmc
jae
and
std
jbe
jle
int
arpl
jne
in
pmaxub
sub
push
dec
and
sub
shl
jb
outs
leave
and
fistp
pop
mov
cmp
idiv
pop
rol
xchg
aam
jbe
add
sahf
push
add
and
gs
ds
sbb
daa
(bad)
imul
dec
dec
aas
mov
xchg
sbb
(bad)
mov
iret
outs
stos
or
test
(bad)
in
mov
cli
and
dec
push
mov
mov
sbb
cdq
aad
mov
(bad)
and
adc
stos
push
enter
ins
mov
inc
sbb
xor
fcom
or
inc
xor
adc
test
sar
mul
div
push
pop
or
mov
mov
inc
cli
add
sbb
pop
or
dec
loopne
adc
mov
fcomi
and
adc
sub
mov
add
pop
cdq
and
repnz
stos
aam
retf
ins
dec
sub
addr16
faddp
sub
mov
inc
addr16
aaa
pop
pop
or
mov
icebp
sub
xlat
in
int3
call
mov
xor
arpl
icebp
fcomp
push
stc
sar
neg
pop
xlat
and
(bad)
ret
pop
imul
jnp
in
adc
aaa
shl
jns
push
mov
out
and
mov
mov
sbb
lea
mov
pop
inc
mov
pop
add
xchg
sbb
cmp
sub
push
pop
js
fcomp
adc
pop
retf
jne
mov
outs
or
cmp
es
sbb
adc
addr16
inc
out
jmp
mov
ret
or
inc
add
les
retf
inc
mov
or
dec
cmp
sbb
or
jge
push
xor
mov
mov
inc
jae
mov
add
ins
jp
into
jecxz
in
or
jo
mov
je
nop
(bad)
jae
stc
mov
or
cmp
mov
call
(bad)
dec
inc
popf
repz
xchg
dec
test
xchg
ins
mov
(bad)
cld
inc
ds
mov
pop
pop
dec
(bad)
or
or
daa
rcr
xlat
fcom
icebp
or
pop
or
(bad)
scas
sbb
stos
mov
jl
xlat
push
dec
inc
repz
fwait
pop
inc
pop
fld
imul
sti
fidiv
push
xor
out
xchg
sti
out
add
fld
pop
arpl
pop
mov
scas
or
inc
mov
cdq
cld
mov
fld
ss
pop
jb
int
imul
icebp
mov
mov
call
jne
jmp
xor
adc
pop
adc
inc
lods
inc
cmp
pushf
repz
int
sbb
xor
push
test
pop
mov
loop
aam
push
cmp
adc
cmp
mov
push
jae
icebp
xor
add
mov
mov
sub
adc
adc
push
lods
ficomp
mov
pop
sti
pop
inc
or
mov
lea
xor
loop
aad
pop
mov
jne
shl
inc
xchg
and
pop
sub
jp
mov
push
xchg
xor
(bad)
mov
leave
cmp
fld
loope
and
test
in
gs
jl
lahf
call
push
add
aad
mov
cmp
push
loop
push
xchg
mov
pop
mov
mov
mov
pop
xchg
xchg
enter
lods
loopne
sbb
repnz
aas
xchg
test
stos
jmp
mov
sbb
and
or
adc
dec
mov
sbb
jne
xchg
jecxz
int3
int3
mov
pop
scas
das
neg
mov
ss
out
idiv
dec
(bad)
enter
xlat
jns
shl
hlt
mov
pop
sbb
lods
imul
loopne
retf
leave
adc
xchg
mov
loop
(bad)
and
inc
out
dec
sbb
aam
dec
xchg
xchg
pop
pop
std
and
out
ins
movs
adc
mov
fadd
cmp
inc
cdq
jo
les
aad
mov
mov
loopne
push
sbb
fs
lahf
das
(bad)
aad
in
add
jns
sub
mov
(bad)
sub
(bad)
mov
push
movs
imul
shl
rol
ficom
adc
fld
mov
std
and
adc
ret
ds
ins
push
pop
stc
nop
test
add
icebp
push
jb
adc
aaa
and
push
test
ror
sahf
in
call
or
push
jg
push
sti
xor
test
movs
movs
and
pop
or
inc
int3
xchg
xor
(bad)
not
fsubr
shr
jbe
mov
jg
test
out
push
jmp
adc
adc
add
jnp
jmp
mov
in
cmp
xchg
mov
leave
cmp
inc
inc
mov
mov
std
sbb
mul
aas
out
jl
mov
scas
in
shl
push
lds
mov
(bad)
mov
fimul
mov
ins
fisttp
cmps
dec
movs
add
int3
mov
gs
pop
ds
xchg
mov
add
jle
outs
pop
loope
mov
push
test
inc
and
(bad)
mov
movs
(bad)
inc
mov
int3
inc
repz
shl
mov
jmp
sti
inc
pop
jp
sbb
jns
mov
inc
or
xchg
dec
cmps
and
sbb
xchg
int
adc
in
mov
out
pop
arpl
dec
scas
or
mov
xchg
(bad)
mov
mov
inc
pop
(bad)
add
mov
push
mov
dec
(bad)
xor
push
mov
ss
les
cmp
inc
or
and
or
cmps
fs
(bad)
push
mov
mov
jo
mov
mov
mov
jb
and
sbb
add
jle
in
fisttp
popa
or
test
jae
popa
jns
pop
xchg
imul
sbb
xor
aaa
inc
mov
pcmpeqw
sbb
push
daa
ror
add
push
adc
pushf
mov
cwde
test
pop
out
dec
xchg
loop
dec
adc
sub
ficomp
and
js
cmovnp
(bad)
and
xchg
call
xchg
loop
into
cmps
les
ror
loopne
dec
loop
cmp
enter
jb
pop
push
xchg
ds
and
mov
push
sbb
loop
gs
sti
test
sbb
xchg
and
sbb
or
std
fdivr
imul
lods
xor
data16
mov
pop
inc
mov
adc
xor
xchg
(bad)
adc
inc
mov
test
jne
adc
xchg
xor
(bad)
loopne
mov
ins
fimul
dec
cdq
adc
inc
inc
dec
fsubr
addr16
jb
and
dec
mov
xor
fucom
sub
cmp
mov
jg
mov
cmps
sub
test
repz
icebp
mov
popf
jp
loope
js
add
jb
xor
pop
test
out
test
es
push
push
adc
pop
sti
cli
in
mov
bound
cmp
cmpps
stc
xor
add
cs
rcr
adc
rol
xor
jne
stos
xchg
or
xchg
(bad)
out
or
in
(bad)
in
xchg
in
popa
ss
push
jge
ss
mov
stos
jns
xchg
or
and
mov
loopne
test
lds
mov
fwait
stc
test
in
lea
jge
sti
sahf
loopne
cmp
xchg
js
mov
cmc
mov
addr16
lds
push
in
mov
inc
or
fidiv
lock
lahf
ret
sub
out
push
dec
xor
arpl
ficomp
inc
in
mov
or
xchg
and
stos
mov
rol
mov
cmp
dec
jmp
push
js
test
out
xor
or
inc
mov
and
xlat
fsub
mov
sbb
pop
cmp
cld
push
test
inc
inc
pushf
or
and
push
fwait
hlt
cli
fsubr
repnz
push
pop
jae
retf
outs
ja
xchg
pop
pop
cmp
in
movs
xchg
push
mov
loope
je
leave
jge
add
mov
fbld
fisub
cli
pusha
imul
in
gs
call
add
in
dec
lea
mov
aam
cmp
ror
pop
push
push
out
push
inc
cmp
sar
dec
loope
push
pop
jmp
pusha
jmp
jmp
out
arpl
xor
jmp
jo
sar
xor
jge
es
fstp
add
ins
test
lea
loope
cmp
mov
imul
inc
sub
(bad)
xchg
sbb
fwait
js
aaa
and
or
mov
jb
gs
into
fsubr
mov
mov
lahf
in
fwait
mov
mov
test
mov
pop
movs
push
cmp
mov
addr16
cmp
or
imul
fidiv
scas
(bad)
fldcw
sbb
ins
inc
mov
dec
or
jae
daa
push
lock
les
pop
bound
stc
mov
and
pop
push
adc
cs
call
outs
imul
movs
xchg
aaa
ret
cmp
inc
imul
mov
sbb
sbb
ficomp
add
cmc
push
cmp
scas
ss
push
rol
or
mov
addr16
bswap
xor
fcomp
loop
sahf
in
add
push
jge
dec
add
cmp
mov
aaa
jmp
or
inc
pop
dec
pop
shr
enter
test
ja
loopne
xchg
mov
jnp
in
enter
cmp
ffree
cmp
dec
xchg
inc
push
push
jnp
sbb
jecxz
pop
(bad)
jne
mov
inc
pop
shr
ja
mov
or
iret
fcom
mov
repnz
xor
push
(bad)
out
xor
pusha
cdq
mov
jo
mov
sbb
inc
lods
frstor
retf
and
and
das
push
add
scas
repnz
cmp
push
mov
retf
jmp
loope
push
(bad)
fnstenv
ja
pop
inc
(bad)
sub
inc
sbb
out
es
mov
cmp
pop
mov
mov
xchg
mov
outs
cs
mov
jae
stos
in
xchg
mov
stc
dec
mov
movs
xchg
pop
lahf
add
jb
pop
or
mov
repz
int3
(bad)
jmp
xchg
sar
mov
xchg
sub
into
dec
test
pusha
ret
sub
jo
sub
and
repnz
add
aam
fdiv
and
rcr
xchg
ret
jle
inc
sub
pop
into
popf
or
cwde
sub
movs
out
les
rcl
push
or
test
pop
popf
pop
pop
aas
clc
rcl
or
bnd
sbb
jp
and
les
jno
add
movs
inc
or
bound
push
dec
jb
inc
mov
or
jge
clc
nop
bound
or
out
cmps
adc
out
cmc
call
dec
fmulp
sti
mov
jb
cmp
mov
cld
xchg
mov
inc
outs
push
ss
das
jb
mov
ds
retf
push
sti
adc
xchg
outs
call
shl
sbb
xchg
inc
pmaxsw
dec
push
leave
jns
dec
inc
pop
cwde
push
ss
addr16
xchg
stos
lahf
and
pop
daa
sahf
mov
jge
and
stc
ja
call
jns
loope
aas
sub
mov
(bad)
(bad)
aad
retf
mov
xor
(bad)
jmp
xchg
jo
push
mov
call
xchg
movs
or
inc
push
repnz
xchg
dec
pop
push
cmp
inc
push
add
or
inc
inc
add
addr16
mov
inc
inc
and
and
cmp
mov
fldenv
rep
aaa
push
mov
outs
fs
mov
lahf
dec
push
ret
jb
fcomp
loope
clc
cmp
test
cmp
sub
imul
mov
push
movs
push
ins
arpl
fst
movs
push
and
mov
mov
mov
add
not
push
outs
mov
inc
xchg
outs
(bad)
cld
shl
mov
xchg
mov
imul
movs
mov
mov
imul
pop
out
and
and
pop
mov
sbb
sbb
outs
inc
aam
ds
jl
jmp
sub
lea
(bad)
adc
dec
inc
out
mov
rol
mov
mov
into
fsubr
aaa
fs
lods
sub
stos
aam
mov
retf
je
test
sub
(bad)
repz
pop
add
in
cmps
test
les
test
mov
pop
mov
in
aaa
mov
adc
mov
add
test
hlt
rcr
js
mov
ds
mov
rcl
icebp
push
mov
fst
popf
pushf
pop
lea
nop
cmp
pusha
cmp
sub
jb
(bad)
jmp
inc
aas
and
nop
mov
nop
in
adc
sub
xchg
sbb
les
imul
ins
jl
cli
arpl
imul
pushf
bound
push
(bad)
mov
ret
pop
nop
gs
mov
push
cmp
inc
fldenv
test
xchg
jnp
popf
call
fwait
pop
jo
popa
or
mov
sub
pusha
xchg
xchg
add
test
inc
mov
call
mov
fistp
push
hlt
fdivr
iret
ret
jae
mov
hlt
jmp
int3
cmps
ds
and
not
aam
push
mov
(bad)
popa
xchg
cmp
js
jmp
popf
pop
out
jecxz
imul
out
lods
xchg
xchg
or
(bad)
mov
adc
and
pop
data16
test
(bad)
(bad)
cli
lock
test
xor
imul
pop
sub
xor
adc
and
pop
in
jmp
dec
stc
(bad)
std
cmp
sbb
popf
push
lea
scas
inc
repnz
pop
and
mov
shl
ficom
loopne
dec
fnstsw
jle
and
push
or
dec
pop
adc
cmp
cmp
popa
mov
mov
cmp
and
cld
add
inc
fucomi
popf
push
push
xchg
cmp
sub
pop
sbb
fdiv
pop
cmps
mov
xor
mov
add
xchg
retf
jae
imul
pop
dec
xchg
in
lods
pop
pusha
jmp
rcl
or
or
out
or
jb
pop
inc
sub
in
mov
push
mov
jle
sbb
jp
movs
pop
in
push
pop
pop
inc
jmp
stos
add
xor
outs
cld
das
les
push
inc
fdivr
xchg
xchg
jmp
or
xor
fwait
and
add
jbe
mov
dec
out
out
mov
jge
adc
xchg
add
fstp
push
loopne
sub
jbe
cmp
fs
loope
or
jmp
jecxz
dec
xor
sbb
pop
outs
push
push
fstp
je
out
add
cmp
adc
or
retf
jmp
sbb
xchg
js
clc
pop
clc
cmps
fiadd
push
xor
mov
js
push
dec
inc
add
push
icebp
mov
pop
dec
cmp
mov
mov
sahf
jbe
test
mov
pushf
jbe
enter
pusha
aad
adc
sbb
jno
pop
ds
iret
adc
xor
mov
fsubr
jns
popa
jg
in
and
ja
(bad)
ja
jmp
sub
out
mov
outs
jecxz
rcl
sbb
cmp
fld
push
jg
mov
jb
mov
push
jnp
adc
scas
(bad)
int
add
aad
es
daa
fdivr
jbe
ficomp
fadd
inc
mov
dec
jg
jb
or
cmps
sbb
sbb
fs
push
(bad)
xor
out
or
les
rcl
add
add
inc
and
push
mov
lea
fs
jb
push
repnz
cdq
pop
jecxz
xor
xor
loopne
or
lods
into
mov
hlt
out
cs
aam
stos
adc
or
ret
(bad)
xchg
or
stc
and
mov
jle
(bad)
jnp
and
(bad)
into
int3
popf
icebp
mov
or
xchg
addr16
mov
mov
ds
pop
std
arpl
nop
sbb
xchg
neg
aaa
sub
jmp
or
mov
xor
ret
test
adc
stos
sbb
in
and
jo
cmps
fisttp
inc
mov
mov
scas
test
lods
and
int
std
adc
jae
push
cmc
nop
fadd
and
dec
jmp
imul
mov
mov
aas
enter
fst
jno
test
scas
out
push
das
mov
pop
jns
adc
cmps
dec
sbb
cmp
jle
and
ins
aaa
out
leave
jmp
fs
pop
sbb
pop
push
test
fs
and
xlat
imul
pop
jns
push
mov
xchg
fbstp
inc
lods
aad
cs
xchg
mov
mov
mov
(bad)
dec
mov
lahf
mov
ret
inc
mov
pop
xchg
pop
or
call
cmps
lds
cmps
xlat
cmp
or
push
or
add
pop
inc
or
cmp
lahf
or
inc
add
mov
hlt
mov
sbb
leave
jge
or
adc
fadd
pop
shl
mov
jnp
pop
push
and
push
rcr
sbb
xor
push
outs
cmps
inc
xchg
retf
jecxz
ret
mov
fcomp
cmp
bound
sub
sub
shr
push
iret
pop
pop
mov
(bad)
sbb
mov
movs
push
cmp
xor
pop
sbb
pop
mov
xor
jecxz
clc
mov
test
or
push
or
cmps
cli
(bad)
cld
sub
push
push
cmp
pop
xchg
in
or
(bad)
loopne
pop
sbb
inc
jns
ror
xchg
push
rcl
xchg
test
jmp
push
mov
mov
stos
aam
(bad)
jo
xchg
imul
adc
in
sub
cmp
movs
pop
psrlw
add
mov
adc
enter
shl
sbb
adc
xchg
mov
pushf
xor
xor
xor
xor
pusha
sahf
shl
cld
fs
push
and
je
daa
mov
arpl
std
aaa
dec
ins
aam
int3
stc
and
add
sahf
adc
out
adc
add
xor
in
lahf
mov
and
aad
sub
and
in
test
push
dec
sahf
xor
mov
inc
aas
or
test
nop
xchg
dec
call
ret
out
inc
das
jl
cld
mov
loop
xchg
(bad)
mov
stos
ins
(bad)
repz
push
and
sti
imul
or
fcmovne
repz
imul
lods
call
pop
(bad)
push
retf
pop
ret
outs
and
pop
inc
jl
or
sahf
retf
mov
icebp
jae
mov
std
jo
pop
clc
mov
aam
outs
lods
dec
add
and
push
or
sub
inc
ss
add
mov
fwait
test
push
push
and
in
fistp
inc
jb
hlt
das
mov
inc
jae
pop
leave
pop
jae
inc
push
mov
jne
adc
arpl
push
or
add
repnz
repz
je
sbb
rcl
pop
ficomp
inc
xchg
pop
xor
cmp
mov
fdivp
jle
retf
pop
cmp
pushf
xchg
dec
jnp
xchg
adc
repz
mov
call
xor
xor
stos
mov
scas
sbb
pop
jno
mov
sar
push
or
sbb
iret
pop
jnp
push
pop
int
adc
rol
loop
fisttp
stc
in
leave
shl
data16
ins
sti
repz
retf
inc
or
sbb
icebp
pop
mov
xor
repnz
sub
adc
gs
loop
cmp
movs
pop
cmp
mov
mov
out
and
outs
or
lahf
pop
call
inc
in
xor
(bad)
aaa
sbb
out
in
cld
test
add
imul
add
mov
adc
cld
fnsave
xchg
mov
(bad)
xor
mov
lea
mov
addr16
xchg
sbb
shr
cli
ins
and
loopne
dec
push
cdq
inc
mov
jno
rol
pop
shl
cmc
hlt
sti
lds
arpl
test
pop
sub
cmp
pushf
pop
sbb
loope
out
xchg
inc
lahf
adc
inc
push
cli
movs
je
repnz
mov
out
test
inc
in
into
cmps
dec
ins
adc
pop
jns
fcomp
fs
mov
pop
mov
cmp
into
out
add
faddp
xchg
fwait
call
pop
mov
dec
sahf
add
in
lods
mov
or
mov
ret
ins
add
mov
xor
xor
rcl
jl
int
ja
jp
jle
sub
inc
xor
lods
ds
sub
pop
xchg
icebp
imul
(bad)
(bad)
out
mov
mov
cmp
shl
out
in
jns
dec
cs
addr16
out
jb
cwde
ds
psadbw
adc
and
into
xchg
mov
lds
outs
mov
push
out
mov
out
fwait
mov
(bad)
push
push
scas
aaa
push
xor
sar
shl
imul
mov
pop
mov
or
aad
loop
mov
stos
in
pop
cmp
in
cli
outs
cli
sub
mov
push
in
cmovg
pop
das
push
daa
adc
xor
ds
dec
xchg
sbb
out
(bad)
bound
stos
pop
call
movs
add
or
inc
cmp
sub
idiv
pop
ja
jae
(bad)
cmp
outs
test
out
js
aad
enter
int
or
test
cmps
mov
adc
pop
inc
mov
popf
dec
fisttp
mov
jmp
neg
test
rol
enter
sub
adc
frstor
out
mov
jae
xor
mov
ret
jno
push
dec
popf
lock
xchg
fwait
pop
les
push
into
scas
jno
leave
xchg
dec
adc
ja
ins
dec
jl
sub
popa
add
dec
(bad)
pop
call
mov
(bad)
stos
xchg
xchg
jbe
movs
jle
xchg
sbb
sbb
xchg
or
cmps
mov
add
mov
scas
sub
pop
mov
pop
mov
xchg
aam
pop
xor
sar
jo
ret
cwde
ins
ret
xor
pusha
fidivr
cmp
cmp
jmp
in
cmp
and
jmp
sbb
pop
fstp
pop
aad
daa
call
add
pop
and
int
push
add
mov
loopne
call
sbb
jecxz
rcr
dec
fstp
test
and
sahf
in
out
add
in
pop
dec
nop
(bad)
out
shl
into
repnz
sbb
in
dec
fcmovnbe
fst
fs
std
loopne
test
rcr
fisttp
cmps
jne
pushf
aad
push
pop
imul
sub
shr
or
inc
(bad)
push
gs
push
retf
leave
outs
push
pop
xchg
lock
mov
cmc
mov
cmp
mov
jno
mov
mov
(bad)
lods
fstp
fadd
jbe
out
push
(bad)
call
shl
in
xor
push
jo
out
movs
rcl
cmc
jno
aas
pop
pop
pop
ret
mov
xor
lods
into
gs
ret
mov
arpl
mov
or
push
imul
pop
imul
pusha
fwait
push
ror
test
aaa
cdq
jmp
int
add
clc
push
pop
out
lods
fwait
push
movs
sub
jmp
lock
outs
dec
mov
fnstenv
ja
mov
mov
and
gs
mov
js
mov
mov
iret
xchg
add
aaa
pop
add
fild
mul
inc
gs
int3
mov
sub
sahf
loope
aam
inc
adc
punpckhbw
sbb
ins
outs
outs
pop
in
pop
xchg
sbb
push
jno
nop
mov
js
cmp
int3
dec
xchg
xchg
lds
inc
je
mov
ret
push
push
mov
aad
(bad)
jle
enter
cld
mov
xchg
mov
xchg
leave
ins
jbe
int
xor
fwait
mov
fnsave
jmp
add
mov
icebp
sbb
dec
imul
xchg
dec
mov
xlat
sub
daa
repnz
out
adc
pop
call
xchg
shl
int3
pop
scas
jno
mov
pop
dec
rol
pop
cmp
ret
add
jecxz
popf
mov
jp
clc
jp
jns
shl
mov
jo
(bad)
cmp
push
nop
and
mov
jge
jge
in
fbstp
std
jle
push
push
push
ja
dec
or
dec
xchg
loope
ret
adc
mov
and
mov
lea
dec
lea
out
sbb
or
mov
mov
lahf
jp
mov
cmps
push
push
cli
iret
jne
xchg
xchg
ja
add
pop
or
add
cs
fmul
cmp
sar
in
movs
sbb
scas
dec
in
scas
sub
cs
mov
add
jo
dec
fidiv
mov
inc
add
aaa
add
out
call
or
add
rcr
jle
or
xor
stos
test
out
test
mov
mov
push
adc
or
fmulp
sbb
dec
push
sbb
daa
cs
mov
jle
sar
jl
mov
out
add
(bad)
(bad)
out
push
push
push
(bad)
repz
ret
mov
xor
xchg
imul
cmp
pop
and
sbb
mov
fdiv
cmp
mov
jb
cmp
test
inc
std
arpl
mov
and
cmp
iret
inc
fwait
rol
sti
xor
cmp
mov
pop
std
cwde
lods
(bad)
cmp
frstpm(287
xlat
and
mov
cld
and
hlt
fwait
iret
cmp
pop
adc
sar
mov
rcl
xchg
jl
ror
and
xor
sahf
clc
into
inc
out
out
pop
sbb
adc
push
movhps
lahf
cmp
ret
mov
inc
inc
push
inc
maskmovq
xor
out
test
inc
or
xor
stos
dec
jle
cmps
or
icebp
cmps
dec
xchg
xchg
je
sbb
out
xor
push
cs
clc
push
outs
lock
adc
cmp
(bad)
pushf
jg
pop
push
push
add
das
adc
aad
scas
sub
mov
repnz
inc
fld
mov
mov
xchg
bound
(bad)
push
fsub
mov
mov
push
jge
mov
or
fcomp
shr
sub
add
xchg
lods
add
xchg
retf
adc
xchg
cs
leave
das
movs
lds
sahf
sti
inc
jb
dec
shl
xchg
adc
pinsrw
into
sbb
jle
icebp
or
rol
lock
stc
popf
(bad)
pop
inc
scas
shr
fsub
in
cmps
shl
xor
jmp
dec
daa
dec
int3
xchg
pop
sahf
test
jle
out
adc
in
mov
mov
pop
add
inc
scas
add
aam
int
dec
inc
pop
jecxz
add
push
imul
xor
mov
add
and
int
mov
adc
sbb
(bad)
sub
adc
lock
inc
popa
inc
mov
loop
add
cmc
dec
xlat
cli
jbe
jnp
daa
and
cmp
fs
jno
cmps
jmp
pop
adc
lods
sub
push
sub
mov
mov
lea
xchg
in
and
call
inc
pop
sti
(bad)
mov
ins
jo
pushf
out
div
fdivr
sub
sub
or
inc
mov
shr
int
dec
dec
imul
push
mov
fmul
mov
cmp
(bad)
in
sub
xchg
mov
xor
pusha
jne
fwait
jge
inc
add
and
push
inc
jl
(bad)
idiv
cmp
sbb
mov
aad
and
das
push
mov
add
xor
mov
pop
jae
mov
(bad)
std
dec
popf
aam
adc
sub
jmp
adc
retf
ret
std
psllq
loop
xchg
sbb
adc
movs
xchg
aas
and
iret
add
pop
xchg
imul
cmp
sub
movs
jns
outs
push
add
addr16
xor
cli
ss
lods
imul
gs
sub
pop
nop
adc
dec
int
push
movs
ret
aas
mov
in
pop
adc
hlt
push
fsub
scas
ror
test
mov
xchg
xor
sub
mov
aam
mov
adc
add
sub
pop
mov
xchg
loope
jmp
mov
(bad)
adc
mov
mov
daa
retf
mov
sahf
inc
(bad)
nop
mov
jb
shl
dec
bound
in
data16
movs
mov
(bad)
clc
test
(bad)
lods
mov
pop
sub
pop
les
xor
rcl
mov
xchg
xchg
cli
cmps
xor
add
addr16
sar
test
leave
lahf
inc
adc
xchg
bound
stos
sub
mov
jmp
mov
jl
scas
mov
fwait
rcr
pop
jmp
sub
mov
cmc
je
jmp
int
fdivr
push
scas
in
jp
mov
push
lods
inc
cld
mov
ror
mov
cmp
(bad)
aad
sub
jo
retf
pop
test
scas
fnstsw
sub
lea
or
mov
dec
addr16
jecxz
push
mov
imul
retf
cdq
out
imul
mov
cmc
adc
jne
xchg
pop
sub
xchg
addr16
jg
rcr
das
scas
or
in
push
xchg
in
add
xchg
jb
pop
mov
inc
nop
or
cmp
aaa
mov
add
dec
pop
or
push
mov
movs
les
sti
xor
bound
dec
mov
xchg
cmp
and
out
xchg
out
and
imul
test
mov
xchg
ins
pop
add
popa
xchg
out
or
dec
dec
sbb
shl
push
and
(bad)
mov
xor
push
fisttp
cmps
out
sbb
mov
mov
add
out
nop
xchg
(bad)
(bad)
(bad)
(bad)
push
xchg
push
cmp
(bad)
nop
mov
jb
dec
sti
rcr
rcr
rcl
cmps
in
sub
lods
sbb
aas
mov
xor
or
clc
mov
xor
dec
push
sub
neg
fst
pop
add
js
sub
dec
in
loop
in
mov
xchg
ds
jg
inc
rol
cmp
sub
adc
push
jmp
sub
aaa
push
adc
sub
sub
or
cmc
clc
lock
or
add
daa
lea
out
pop
test
mov
mov
sub
cmp
jge
add
mov
ffreep
push
in
or
mov
retf
adc
inc
lahf
fisub
inc
sub
xchg
add
push
shr
pop
icebp
shr
movs
movs
pop
and
push
cmps
sbb
test
mov
add
icebp
add
cld
cmp
sub
pop
int3
and
js
inc
(bad)
jle
test
or
loope
in
ss
retf
scas
jecxz
aad
mov
lods
les
sub
push
xchg
jg
sub
cmp
cmps
ja
or
jle
dec
push
xor
jnp
inc
cs
cs
lods
sub
in
sbb
push
ins
jecxz
imul
ins
scas
data16
mov
push
xor
cmc
aas
pop
mov
xchg
es
mov
into
jnp
test
popa
jecxz
add
lock
xchg
sub
iret
fiadd
call
mov
pop
in
scas
mov
dec
mov
je
cmp
mov
mov
inc
ss
sbb
adc
and
imul
lods
mov
mov
push
mov
loopne
lahf
mov
test
sahf
mov
shl
push
sub
(bad)
xchg
bound
imul
repz
push
test
(bad)
aaa
jecxz
bound
mov
ret
push
inc
and
push
hlt
outs
push
push
jmp
push
dec
pusha
movs
pop
push
cmp
mov
sbb
dec
push
jo
jge
dec
mov
xchg
mov
icebp
in
xchg
daa
xchg
jg
add
jno
cmc
jmp
dec
dec
jbe
inc
scas
retf
cmps
fs
repnz
loopne
pop
lea
push
inc
inc
imul
mov
int3
addr16
or
ret
cmp
xlat
out
call
sub
pop
mul
js
fucomip
inc
pusha
sar
loope
sbb
dec
mov
into
(bad)
and
outs
in
lahf
gs
or
inc
pop
sub
jg
cld
cmp
sub
xchg
and
ds
push
dec
sbb
stos
inc
or
dec
dec
cmp
(bad)
jbe
or
pop
mov
int
lock
movs
sbb
imul
fst
pop
jg
mov
push
stc
es
dec
mov
sar
out
push
mov
scas
data16
jecxz
cmps
test
rcr
add
es
sbb
fadd
push
pop
sub
push
(bad)
cld
retf
mov
sbb
cli
mov
movs
fwait
gs
aad
shl
stos
iret
adc
pop
(bad)
mov
icebp
stos
xchg
pop
into
add
mov
mov
adc
adc
jp
cmp
fisub
sahf
test
fidiv
mov
loopne
push
outs
cmp
mov
jae
loope
pop
scas
neg
outs
sub
cmp
jecxz
sub
push
(bad)
mov
sahf
or
vmread
mov
xchg
cli
jl
xor
mov
and
and
mov
inc
iret
nop
fisttp
scas
bound
repz
(bad)
ss
popf
imul
mov
sbb
or
int
fidivr
retf
(bad)
adc
das
stos
xchg
(bad)
pop
and
rol
rcr
sahf
mov
test
dec
inc
and
retf
cwde
sahf
call
pop
sub
(bad)
int
push
lods
jecxz
rcl
add
add
(bad)
aam
sub
hlt
out
cmp
jbe
mov
push
sbb
imul
into
jbe
push
retf
scas
and
cmp
aam
leave
or
test
lods
jb
setno
addr16
push
inc
clc
es
mov
pop
mov
sub
mov
xor
call
xchg
jns
jmp
inc
and
les
loop
into
ret
retf
or
shl
mov
imul
cdq
popa
cdq
xlat
into
nop
xchg
sub
push
inc
pop
pop
adc
jp
stc
pop
xor
(bad)
into
pop
adc
inc
imul
and
sub
shr
loope
outs
adc
cmp
test
xchg
hlt
cli
stos
lods
(bad)
gs
pop
scas
mov
pushw
jns
jp
sbb
xchg
sbb
xor
pop
scas
je
cmp
xchg
test
mov
mov
(bad)
out
add
mov
push
sub
mov
sbb
lods
aam
add
mov
dec
call
sar
jo
jecxz
mov
add
stc
pcmpeqd
dec
sub
cmc
(bad)
ds
push
sbb
xchg
xor
int
mov
clc
imul
xchg
and
ret
dec
inc
push
push
std
rcr
addr16
mov
in
cmp
cmp
movs
jnp
inc
and
mov
jns
lods
push
inc
hlt
icebp
movs
sbb
ja
adc
push
sbb
push
cmc
jb
push
xlat
movs
shr
jecxz
adc
lds
pop
arpl
mov
xlat
push
pop
add
and
shl
rcl
imul
stc
fisub
pusha
out
push
ret
in
stc
jae
rol
mov
stos
cmps
bound
sbb
ds
mov
sub
xchg
enter
mov
lahf
mov
cmps
pop
push
jo
adc
push
(bad)
fcmovu
leave
mov
in
test
and
push
fwait
imul
ror
mov
adc
enter
adc
cmps
ret
rol
cmp
test
enter
cmc
mov
lods
mov
cmps
lods
jl
pop
cwde
mov
enter
jmp
std
and
std
out
retf
add
stc
outs
aaa
das
cmps
movs
test
in
in
cwde
iret
sahf
scas
imul
test
push
sub
call
aad
add
and
daa
popa
fild
sbb
sub
sub
jb
jg
js
pop
loop
movs
int
loope
cdq
inc
and
cmp
stc
aad
inc
jp
rcl
ret
mov
or
push
jg
and
mov
push
aaa
fld
or
jp
iret
aaa
lea
imul
shl
sub
fucomip
xchg
mov
stos
(bad)
clc
scas
inc
js
jb
mov
xchg
mov
pop
push
cmps
or
jns
rol
xchg
(bad)
inc
scas
pop
cmps
mov
mov
fs
adc
mov
mov
mov
cmp
mov
inc
mov
adc
fucomp
data16
jmp
mov
mov
mov
movs
inc
inc
jl
jbe
mov
push
sahf
or
pusha
nop
shr
aas
pusha
push
or
pusha
pop
in
mov
add
jecxz
test
xchg
fild
arpl
and
sbb
mov
inc
cmc
(bad)
scas
fist
inc
imul
enter
add
leave
fiadd
add
in
pop
xlat
pop
xchg
loop
mov
inc
das
das
mov
mov
xor
addr16
in
hlt
test
mov
mov
mov
mov
mov
rcr
xor
movs
sbb
imul
adc
xlat
fwait
sub
pop
(bad)
test
add
fistp
inc
iret
jne
in
and
add
and
fs
cmpps
push
popa
nop
popa
jp
ja
adc
ja
fistp
ror
(bad)
std
mov
pop
dec
stos
xchg
int
adc
loopne
aas
in
test
push
or
xchg
ret
mov
and
mov
pop
out
mov
call
idiv
xchg
imul
dec
adc
std
adc
add
mov
inc
out
adc
jp
call
cmp
je
dec
rcl
ja
and
push
int3
sbb
fld
lock
test
cmp
adc
or
mov
or
scas
push
daa
and
sub
fs
dec
mov
mov
sbb
das
push
mov
fst
pop
leave
retf
enter
sub
div
ret
(bad)
neg
out
mov
dec
into
mov
int
cli
xchg
loopne
fnstcw
sub
mov
mov
jmp
cs
push
sub
out
mov
les
stos
xchg
sbb
ret
xor
sub
lods
aas
scas
in
fcmovnu
jno
mov
lahf
mov
rol
jb
sub
sar
int
push
out
push
mov
mov
xlat
push
repnz
(bad)
lea
nop
xchg
out
shl
sbb
test
ss
mov
xor
dec
shr
jb
push
loopne
or
push
(bad)
mov
and
cld
ins
jno
jo
pop
jmp
sbb
test
adc
movs
mov
call
pop
cwde
lods
scas
(bad)
sub
(bad)
mov
mov
push
aaa
inc
stos
jae
adc
mov
vorps
fwait
mov
aaa
or
mov
test
ficomp
es
sub
test
stos
ins
cmc
adc
push
int3
sar
out
pop
mov
mov
les
shl
xchg
inc
sub
les
mov
call
not
addr16
cmc
or
jnp
cli
adc
lock
fldenv
mov
test
iret
call
jno
and
pop
jl
fisttp
test
cmp
mov
(bad)
jl
sub
mov
(bad)
push
or
fs
pusha
sub
jnp
dec
xchg
daa
jnp
push
pushf
dec
retf
dec
cld
int3
mov
add
loope
mov
mov
jnp
adc
(bad)
rcr
in
dec
dec
in
aas
mov
adc
and
in
pop
xchg
inc
mov
int3
loop
test
stos
data16
xlat
outs
outs
mov
pop
add
cmp
rol
ins
sub
sti
sub
dec
xor
and
(bad)
loop
xchg
and
pop
sub
push
adc
retf
nop
in
stos
ret
repz
and
xor
lds
adc
jecxz
xchg
(bad)
jecxz
scas
out
mov
lahf
mov
sahf
fstp
mov
xor
outs
lods
dec
dec
pop
sbb
or
test
pop
push
add
sbb
movs
xor
scas
xchg
jae
add
cmp
sub
ins
adc
adc
movs
fdivp
push
add
add
int3
sub
loopne
(bad)
or
sub
mov
add
xor
enter
mov
push
pop
retf
(bad)
rcr
imul
or
into
aas
mov
xchg
xchg
pop
jp
xor
sahf
arpl
aad
push
fwait
xchg
sub
mov
out
mov
mov
add
mov
mov
xor
add
out
cs
dec
mov
push
mov
dec
pop
mov
in
jp
add
and
add
mov
dec
int
cmp
mov
cld
pop
and
xor
fnstenv
cmp
pop
dec
iret
pop
sub
or
adc
sar
ficomp
(bad)
sbb
rol
out
fld
pop
cmp
jb
mov
stos
nop
sbb
leave
mov
mov
sar
cmp
ins
test
aam
mov
mov
jbe
ins
or
dec
adc
cwde
cld
or
sbb
mov
pop
mov
mov
jnp
fnstsw
loop
dec
cwde
adc
sub
and
xchg
lock
mov
lahf
xchg
ret
add
les
neg
retf
xor
jmp
xchg
xchg
or
mov
inc
or
sub
xor
jo
mov
jbe
jg
mov
or
ja
test
sub
das
rcl
dec
sub
test
mov
in
hlt
mov
retf
xchg
jge
or
adc
pop
test
data16
out
in
jo
jae
das
mov
ss
adc
push
mov
ror
sub
in
pop
popf
xor
hlt
stos
lds
cld
push
ss
sbb
push
sub
xlat
sbb
or
enter
inc
mov
or
xchg
nop
imul
scas
loop
jne
mov
test
hlt
adc
fstp
xor
mov
mov
push
(bad)
fimul
lock
mov
cmps
xchg
je
sbb
xchg
inc
outs
mov
sub
sub
je
xor
mov
fcmovu
sahf
into
test
scas
jge
pop
outs
jle
cmp
xchg
pop
push
jle
mov
stos
scas
or
mov
out
lods
outs
retf
out
add
sti
cmps
loope
and
or
scas
mov
outs
(bad)
sub
rcr
cdq
daa
in
mov
add
add
adc
into
out
pop
(bad)
xchg
test
test
test
pop
inc
cdq
stc
xor
xchg
fs
mov
add
mov
jge
das
add
xchg
cmp
push
sub
lea
cli
ins
jnp
out
push
pop
stos
cwde
or
jne
in
xchg
and
or
js
xchg
int3
sub
scas
or
inc
jl
loopne
repnz
xor
xchg
ins
cld
dec
ror
jo
pop
mov
test
xchg
imul
pusha
inc
aaa
pop
in
mov
in
retf
jno
push
jge
sub
cli
and
jmp
dec
retf
popf
ds
mov
jle
stos
cmp
push
dec
movs
(bad)
sar
jbe
popf
out
mov
mov
xor
outs
ret
and
stc
pop
sub
cli
xchg
mov
or
out
mov
mov
ror
mov
call
dec
or
fnstsw
lds
movs
or
mov
out
pop
xchg
pop
rcl
mov
jl
mov
xchg
jb
clc
mov
add
enter
push
sti
pop
jl
cmc
int3
mov
rol
xchg
adc
adc
push
shl
(bad)
cmp
int
pushf
sub
cmps
movs
mov
adc
ins
fiadd
xor
imul
jo
inc
mov
push
jge
mov
fidivr
jb
pushf
sub
dec
sbb
icebp
pushf
lahf
out
aam
jo
xor
lds
(bad)
loopne
ror
inc
jmp
dec
push
sti
and
loop
retf
mov
ficomp
dec
js
push
(bad)
xlat
xchg
aam
jmp
push
ins
push
enter
ins
in
jnp
xor
xor
xchg
std
sbb
mov
call
and
jbe
lods
mov
mov
inc
cmp
rcl
fst
imul
cld
ss
stos
pop
push
xchg
jmp
iret
adc
sub
dec
dec
mov
jb
mov
jmp
dec
pop
mov
test
das
add
mov
xchg
sub
and
dec
daa
sub
inc
push
cdq
in
xchg
sar
stos
data16
int3
sbb
jmp
xchg
neg
mov
int
aam
fcom
or
out
push
retf
shr
pusha
inc
mov
and
lods
push
cmps
ror
mov
sbb
je
cmc
and
jo
in
mov
ds
enter
xchg
and
xchg
jo
push
xlat
add
xor
outs
add
in
call
lahf
pop
mov
imul
push
push
pop
test
cs
outs
inc
loopne
dec
test
sbb
imul
repnz
cmc
mov
xor
scas
mov
mov
nop
pop
pop
dec
movs
or
jmp
(bad)
pusha
xlat
sbb
inc
in
fnstenv
outs
jns
xchg
mov
inc
jo
frstor
dec
sahf
call
jg
dec
inc
xor
inc
pushf
adc
jge
jnp
cmc
and
xor
jmp
xchg
cs
and
sub
into
into
out
nop
mov
bound
nop
adc
push
push
fnstenv
xchg
adc
loop
or
mov
pop
jge
and
icebp
arpl
test
(bad)
shr
dec
cmps
ret
inc
in
mov
(bad)
enter
or
leave
repz
jl
pop
out
pop
jecxz
pop
scas
xor
inc
or
out
mov
and
loope
jno
mov
mov
xchg
push
or
mov
jbe
inc
hlt
adc
or
jns
pop
in
pop
out
sub
mov
push
dec
dec
(bad)
and
cs
addr16
out
cli
push
jle
cli
ja
push
mov
pop
pop
xor
cmc
fist
arpl
in
fwait
in
xchg
fs
dec
data16
jb
outs
mov
cmp
jp
sbb
sub
int
mov
cmp
jp
jmp
fistp
and
jns
xchg
lods
add
cmp
mov
lock
mov
test
mov
push
pusha
sub
ficomp
in
jl
ret
scas
jno
xlat
add
inc
xchg
dec
inc
leave
mov
mov
pop
out
dec
leave
push
fs
jno
ds
pop
mov
xchg
pop
pop
and
fist
popf
cmp
cdq
push
(bad)
mov
(bad)
in
cdq
sbb
mov
shr
pop
daa
push
repz
push
and
add
jno
imul
retf
mov
jp
imul
add
hlt
mov
mov
repz
push
jmp
test
je
push
in
and
add
or
mov
push
in
sbb
imul
pop
mov
xchg
add
aad
dec
dec
push
dec
xlat
and
xchg
push
shl
retf
jp
ins
add
in
mov
imul
adc
sbb
jmp
jo
call
hlt
mov
mul
mov
inc
mov
sar
nop
movs
(bad)
repz
mov
mov
push
dec
push
jae
sub
add
and
retf
xchg
das
mov
dec
dec
cmp
mov
(bad)
fs
pop
cmp
pop
int3
imul
and
test
inc
add
mov
mov
cmp
ds
in
lods
lahf
clc
das
cmp
popa
cli
imul
or
aam
mov
and
sbb
scas
lahf
stos
into
dec
inc
cmp
mov
scas
jmp
std
shl
push
stos
fwait
sub
aaa
fistp
fadd
ffree
lahf
dec
inc
stos
inc
mov
and
sar
mov
or
and
iret
or
jmp
ret
ror
mov
aam
fst
sub
and
mov
arpl
clc
in
jb
jmp
bound
jmp
or
fisubr
dec
repz
inc
jns
pop
add
rcl
adc
(bad)
adc
xor
mov
loopne
fcomi
mov
push
test
or
pop
xor
push
mov
mov
sub
push
push
cmc
pop
mov
cmp
iret
jae
pushf
sbb
jp
shl
inc
dec
pop
retf
or
ds
inc
dec
cmps
mov
in
ficomp
cld
shl
dec
jmp
lods
cmps
int
inc
div
adc
sub
in
fisub
ins
xor
mov
push
mov
(bad)
mov
cmp
iret
es
sahf
aad
cwde
dec
inc
add
mov
inc
xchg
pop
cmp
cli
xchg
xor
lods
in
mul
push
call
call
xchg
mov
out
jo
sub
cmp
mov
jbe
push
js
push
push
lahf
cdq
gs
(bad)
mov
call
add
xor
jo
pop
sbb
dec
sahf
mov
cmp
xor
adc
sub
mov
into
pop
pop
cmp
fwait
std
add
sub
les
sbb
push
das
cmp
in
movs
cmp
inc
cmp
lods
aam
jno
or
xchg
ret
shr
loope
(bad)
dec
aas
lods
adc
(bad)
cmp
add
sbb
xor
xlat
shr
pop
pushf
jmp
(bad)
or
sub
xlat
aas
movs
enter
jb
or
pop
lods
retf
jmp
xchg
dec
je
mov
or
in
mul
dec
push
xor
inc
sbb
pop
sbb
mov
dec
jne
push
mov
jns
int
xchg
xchg
dec
daa
daa
mov
cmps
(bad)
lea
(bad)
pop
xchg
cwde
xor
imul
add
lea
aaa
dec
mov
jbe
inc
pop
shl
mov
jne
movs
push
jecxz
mov
or
pop
nop
xor
xor
fist
out
inc
fs
add
sbb
movs
(bad)
push
ret
outs
jbe
out
mov
sti
loop
add
push
mov
popf
xchg
mov
ret
sahf
mov
sub
push
jge
and
ret
(bad)
adc
cmps
mov
lahf
dec
push
and
inc
shl
dec
mov
inc
js
push
adc
daa
pop
inc
push
pop
fisub
scas
pop
frstor
stc
ror
aas
mov
jne
or
call
leave
sbb
fdiv
inc
ss
shr
mov
xchg
xchg
maskmovq
imul
inc
call
idiv
out
push
or
push
adc
push
adc
mov
into
stos
int3
xchg
xchg
sbb
jle
ins
out
fwait
lods
push
pop
jle
addr16
lods
fdivr
and
pop
int3
popf
dec
sbb
push
cli
fld
push
mov
fwait
shl
test
cli
xchg
out
lahf
daa
dec
sbb
or
lods
mov
jnp
pop
or
je
jmp
stos
mov
cmp
pop
test
pop
repz
xor
jbe
sub
adc
cmps
lods
xor
ss
lods
outs
(bad)
sub
sahf
and
cli
add
sbb
mov
es
push
push
nop
mov
stos
ds
push
xor
lock
cmp
xchg
lahf
call
aam
cdq
fild
pop
test
test
mov
mov
mov
(bad)
scas
retf
stc
inc
inc
cwde
(bad)
out
test
jp
xchg
xor
and
das
cmps
mov
inc
sub
and
push
daa
pop
shl
ja
aad
test
outs
push
ss
push
test
and
enter
(bad)
dec
movs
cmp
fstp
outs
or
mov
push
pop
cld
fwait
inc
sbb
(bad)
mov
cmp
add
xchg
xor
fisub
mov
pusha
je
fs
jae
cmp
push
arpl
jg
and
cmp
repz
jecxz
dec
adc
xchg
lods
jecxz
out
push
and
jnp
stos
push
mov
stc
pusha
cwde
inc
inc
cwde
mov
lods
xor
mov
jle
arpl
(bad)
andps
or
das
clc
push
ret
xor
ds
or
(bad)
jp
lods
std
xchg
jecxz
fs
add
and
inc
mov
add
jle
enter
jo
dec
xlat
addr16
pop
fldenv
cld
int
or
jle
sub
add
lock
xchg
sub
es
std
popw
stos
mov
push
dec
mov
xor
pop
push
pop
dec
sub
cld
hlt
repnz
(bad)
fsubr
push
sbb
(bad)
add
sbb
inc
fwait
scas
dec
jl
loop
jg
mov
rol
test
call
xlat
cmp
xor
push
dec
ds
stc
xchg
mov
fcom
add
mov
adc
gs
dec
adc
mov
push
shl
jns
jb
dec
xchg
popf
cmps
pop
pop
test
call
imul
test
cwde
xchg
test
push
mov
jg
jae
mov
xchg
dec
out
dec
adc
and
loop
iret
add
paddusw
cmp
xor
or
mov
sub
out
scas
mov
dec
mov
xor
(bad)
das
xor
loop
mov
sbb
dec
ss
xor
cmp
add
aas
shl
jno
mov
movs
aad
mov
xchg
sub
sub
aam
outs
xor
(bad)
push
ret
aaa
or
int
xor
dec
dec
outs
xlat
sub
ins
iret
pop
cmp
test
nop
repz
cli
bound
mov
mov
add
dec
rol
iret
les
in
xor
(bad)
or
adc
jae
xchg
cld
jno
push
mov
lds
repnz
jbe
cmp
fldpi
(bad)
adc
iret
jg
jg
xor
mov
nop
sub
cmps
mov
test
bound
push
dec
or
(bad)
pop
je
dec
cld
pop
push
test
pop
push
or
cmp
call
(bad)
pushf
nop
test
es
sbb
push
jl
push
jl
cmp
mov
dec
cmps
push
jp
jmp
jns
push
fisub
ret
stc
das
movs
ds
mov
or
push
sub
sahf
inc
inc
jl
je
test
js
pop
and
mov
or
icebp
clc
xchg
xchg
in
in
inc
mov
(bad)
pop
or
repz
in
(bad)
xchg
mov
ja
push
in
jnp
mov
stos
fiadd
mov
pop
push
scas
fisub
dec
adc
das
inc
pop
lock
leave
btc
dec
fnstcw
inc
or
(bad)
add
jno
jg
adc
xchg
inc
sbb
push
fmul
fld
call
pop
jmp
push
out
outs
jg
cmp
push
or
popa
sbb
sub
pop
lock
cmp
jbe
cmp
add
dec
inc
jle
mov
movs
adc
xor
xlat
shl
cmps
(bad)
sub
pop
push
mov
adc
sub
into
sbb
ret
std
or
or
mov
sub
pushf
dec
cmps
mov
daa
pop
aaa
sbb
push
dec
popf
arpl
mov
div
aad
stos
mov
rcr
mov
cmp
retf
shl
cmp
out
xchg
ins
push
in
push
loop
pop
jmp
xchg
cld
xchg
stos
mov
or
lods
add
xchg
push
std
jbe
and
in
sub
mov
sub
and
jmp
aaa
cdq
repz
cmp
cmp
retf
out
gs
cmp
outs
ds
fdivr
daa
xchg
inc
lods
sbb
push
mov
mov
les
xchg
sub
outs
jno
movs
or
sbb
jecxz
xchg
cli
not
mov
cli
pop
mov
pop
mov
aaa
sbb
ja
sub
adc
cld
cmp
mov
inc
jbe
(bad)
push
clc
jmp
jmp
or
inc
xchg
add
cmp
and
fisub
outs
mov
and
movs
into
out
cmps
jnp
push
jmp
in
test
sbb
adc
mov
sbb
into
cmps
int
and
xchg
mov
ret
mov
xchg
into
jecxz
fidiv
ret
loopne
test
fimul
out
or
jmp
outs
add
inc
pop
pushf
pop
inc
mov
xchg
xchg
or
lea
push
inc
lahf
mov
sub
push
sbb
cmp
mov
mov
call
sbb
add
js
into
fst
ins
add
sar
add
cwde
das
or
add
cmc
push
call
and
dec
jnp
and
jae
lds
add
mov
test
lea
xor
sub
sub
jns
jb
out
push
dec
stos
out
out
jge
xor
loope
mov
sub
cmp
mov
push
and
enter
js
push
dec
mov
lods
in
das
pshufw
jmp
adc
push
jno
fnsave
jnp
adc
(bad)
mov
mov
inc
pop
xor
loope
imul
mov
int
and
jle
mov
stc
mov
xlat
lods
xchg
loop
xchg
jmp
sub
(bad)
enter
leave
push
in
cwde
pop
outs
mov
dec
dec
sar
ror
stos
cmp
bound
cs
mov
ficomp
test
xlat
shr
ds
test
scas
jmp
jnp
test
dec
(bad)
sub
sub
repnz
int
xchg
stos
xor
je
sub
mov
dec
ret
imul
ja
cwde
sub
push
scas
lods
add
cmc
cwde
lods
xor
out
cmps
sbb
inc
pop
cwde
pushf
push
scas
push
jnp
test
(bad)
xchg
(bad)
cmps
das
and
push
loopne
mov
and
out
add
xor
aas
aad
adc
leave
add
mov
mov
stos
test
mov
mov
or
jno
stc
pop
fild
in
and
nop
dec
mov
cdq
sbb
mov
out
or
push
cwde
leave
repz
je
push
fiadd
sub
outs
not
mov
inc
scas
pop
movs
xchg
les
data16
mov
jo
fld
xor
mov
jb
sbb
outs
shl
imul
pop
(bad)
pop
fcomp
add
not
les
fld
xor
mov
int
mov
sub
mov
std
fwait
mov
mov
jp
int
loop
(bad)
xchg
fstp
lea
sub
std
outs
cmps
adc
sbb
js
jge
inc
lods
mov
dec
in
and
pop
push
push
lds
pop
pop
inc
outs
sub
pop
aas
dec
xor
out
js
ret
or
cs
pop
out
int
int
pop
mov
cs
dec
retf
cmps
xor
aaa
popa
xor
mov
and
push
not
jp
sub
test
retf
and
es
movs
dec
add
mov
xchg
inc
fdivr
sub
scas
daa
push
das
(bad)
jmp
push
icebp
fcomp
push
mov
not
add
xchg
mov
add
pop
mov
dec
test
into
inc
cmp
mov
and
out
ins
xchg
(bad)
mov
xchg
cs
dec
addr16
test
and
enter
ds
mov
add
rdtsc
jnp
and
push
jl
sub
test
mov
mov
jmp
inc
pop
iret
mov
push
ret
cmps
in
dec
adc
popa
mov
xchg
pop
mov
enter
outs
scas
rol
dec
dec
sub
aas
call
sbb
cs
test
je
mov
add
mov
pop
add
fwait
jno
or
xor
sub
sti
cdq
xchg
and
popf
popa
dec
aam
ins
inc
or
jle
inc
fidiv
mov
cwde
push
xchg
adc
mov
pushf
lahf
pop
cmps
adc
in
mov
rcr
adc
sub
and
call
xchg
fsubr
pop
and
pop
jns
add
jae
scas
inc
or
inc
mov
inc
into
cmp
mov
scas
fs
sti
std
mov
push
(bad)
jb
leave
scas
jb
pop
rol
cmp
xor
cmp
push
push
mov
out
sahf
stos
sbb
or
fst
call
sub
mov
add
(bad)
scas
pop
iret
and
xor
xchg
clc
sub
dec
call
int3
jae
mov
cmp
sub
dec
lea
push
xchg
outs
mov
ja
xchg
(bad)
pop
xchg
mov
cmp
or
inc
rol
ja
xchg
mov
idiv
inc
xchg
shr
gs
sub
imul
mov
shr
fstp
push
dec
and
(bad)
adc
movs
movs
push
sub
test
in
ins
mov
scas
fs
mov
test
dec
jmp
or
and
xchg
outs
out
inc
mov
dec
ffree
mov
add
xchg
aas
(bad)
jns
cmp
ins
lock
pop
fsubr
cli
mov
adc
dec
clc
jle
fwait
mov
dec
add
retf
and
not
sbb
jne
ror
inc
jnp
mov
cmp
jg
or
fwait
and
or
cmp
aas
outs
loope
cli
ficom
mov
push
lock
test
ret
xor
out
push
mov
jmp
adc
retf
mov
sbb
push
(bad)
xor
in
cmps
push
adc
xlat
not
dec
adc
xor
mov
cmp
pop
add
sub
cmp
inc
retf
jecxz
inc
cld
sub
pushf
pop
push
imul
cmp
idiv
loope
lock
repz
enter
adc
movs
add
jo
and
or
xchg
mov
loope
retf
add
stos
push
push
xchg
mov
xor
xchg
mov
fist
mov
dec
sbb
adc
es
jle
fldcw
push
add
adc
ja
test
inc
lock
push
std
(bad)
adc
aas
call
sti
rcr
dec
mul
bnd
mov
loop
inc
test
sbb
int
sub
ret
daa
jo
adc
cmp
fucomi
fiadd
pop
jb
rcr
test
push
icebp
sub
jbe
int3
int3
(bad)
push
jp
jmp
popf
adc
out
inc
adc
dec
daa
xchg
sbb
ret
dec
mov
rcl
imul
add
push
icebp
jb
inc
(bad)
pop
xchg
jp
std
ret
xor
icebp
enter
ret
xor
xchg
ds
test
(bad)
out
pop
inc
sahf
and
outs
or
or
std
cmp
xchg
mov
mov
jecxz
pop
leave
mov
test
not
outs
outs
iret
(bad)
and
fdivr
test
fcom
sub
inc
dec
iret
pusha
outs
aas
ret
sub
(bad)
popf
xchg
arpl
jecxz
inc
xchg
xor
ficom
inc
fsubr
shr
dec
xor
jl
cdq
and
cld
inc
cmp
sbb
dec
or
imul
pop
ja
pop
je
sub
mov
push
pop
push
jle
pushf
mov
adc
test
push
sub
xor
or
or
fwait
imul
(bad)
repz
xor
sbb
ret
cmp
and
mov
add
test
jo
and
xchg
ss
clc
jbe
stc
rcl
or
jmp
xchg
shl
pop
stc
adc
out
inc
popf
jb
aam
jne
jns
and
xchg
iret
(bad)
imul
cmp
cmp
or
mov
xor
rol
enter
out
cs
xor
jae
sbb
jle
les
mov
sbb
push
test
(bad)
in
test
cld
dec
xlat
xor
pop
pop
ins
cmp
enter
sbb
dec
cld
fstp
mov
sub
sbb
ret
mov
mov
jns
test
imul
mov
push
dec
ret
loopne
mov
and
ret
imul
push
pop
ins
test
inc
dec
fcomp
int3
ds
int3
scas
xchg
and
mov
fs
in
xchg
xor
(bad)
mov
test
mov
outs
dec
sub
pushf
xchg
mov
inc
inc
sbb
or
mov
into
cdq
(bad)
movaps
dec
push
mov
mov
cmp
mov
mov
iret
xlat
or
ds
gs
(bad)
xchg
push
repz
jno
push
pop
nop
push
adc
ficom
div
in
int
ins
hlt
inc
cmp
lods
nop
cli
sbb
out
mov
ins
sbb
push
(bad)
movs
pop
jbe
scas
scas
xor
add
popf
pop
inc
aas
jp
scas
clc
xchg
inc
sub
imul
call
(bad)
mov
icebp
inc
out
es
mov
sub
and
clc
dec
(bad)
sbb
dec
pusha
xchg
mov
xlat
cmps
push
sahf
jns
inc
loop
jo
(bad)
mov
repz
arpl
sub
sahf
call
fnstenv
sbb
xchg
lods
icebp
repnz
pushf
jmp
xor
or
leave
mov
gs
mov
push
dec
int
dec
rcr
add
(bad)
retf
popa
shr
cwde
shl
or
cmp
pop
shl
sub
adc
add
rcl
vmwrite
xchg
out
jmp
loop
jle
pavgw
(bad)
pop
cmp
or
shr
stos
xchg
into
imul
aam
push
mov
imul
imul
mov
cmp
inc
jmp
stc
and
lahf
daa
les
and
jne
test
je
jl
popa
xor
mov
mov
std
mov
dec
jns
es
out
imul
out
xchg
sbb
and
(bad)
cmp
cld
je
iret
pop
dec
dec
stc
dec
stos
sbb
jmp
test
imul
outs
scas
clc
sti
push
mov
mov
imul
mov
outs
mov
aaa
test
lods
push
mov
mov
add
mov
jl
mov
mov
arpl
pop
jno
jp
mov
pop
dec
xchg
inc
out
pop
clc
xor
enter
jns
mov
inc
sub
inc
xlat
ins
sub
pop
push
je
add
jnp
fidivr
(bad)
in
xor
mov
aas
popf
push
xor
mov
and
mov
(bad)
(bad)
sub
rcr
stos
pop
bound
jmp
pop
(bad)
stc
jnp
sti
bound
(bad)
dec
jmp
popf
into
sbb
cs
repnz
out
jne
cmp
out
lea
mov
cdq
repnz
mov
pop
sti
call
mov
xor
mov
cld
push
mov
push
inc
adc
xchg
mov
push
int
jp
or
in
jne
dec
fadd
mov
xor
dec
mov
fidivr
xor
or
mov
adc
cmps
add
in
popa
inc
cld
cmp
addr16
push
into
test
inc
and
mov
inc
cmp
je
sbb
fs
dec
fldenv
sub
cmp
sbb
pusha
push
je
outs
fwait
out
inc
aas
fnstcw
lea
fsubr
add
jb
call
cmps
xor
stc
jge
jl
or
loopne
addr16
lods
in
and
or
loop
sbb
test
sti
test
fisubr
cmp
fnstsw
stc
dec
pop
inc
paddw
cwde
dec
push
repz
push
cmp
xchg
(bad)
or
mov
adc
scas
lods
or
ins
cmps
popf
mov
push
dec
and
adc
into
je
jp
int3
sub
adc
shr
sub
enter
and
xchg
xor
lds
jecxz
call
shr
sti
xchg
cmps
xchg
xchg
sbb
clc
into
test
fcomp
mov
mov
fs
(bad)
sub
sbb
stos
jns
jmp
pop
mov
jl
(bad)
sbb
jmp
or
cdq
ds
shr
rcl
hlt
pop
cmps
jb
repz
adc
jge
add
int
or
push
dec
add
mov
push
ror
movs
(bad)
ins
or
bound
sub
inc
pop
iret
mov
jno
mov
test
xchg
(bad)
pop
and
dec
jae
dec
out
dec
in
nop
in
mov
hlt
mov
mov
jb
and
popf
add
adc
jb
pop
sbb
out
imul
cwde
pop
into
pop
out
sub
dec
mov
dec
inc
test
mov
adc
mov
repnz
sbb
xchg
popf
fs
cmp
test
inc
movmskps
sbb
fsubr
jae
dec
mov
sbb
mov
stc
stc
add
sub
es
out
les
lods
or
push
call
icebp
adc
fidivr
xchg
ret
sub
inc
sbb
jmp
stos
and
shl
bound
mov
jmp
sbb
repz
out
pop
ins
mov
pop
call
mov
(bad)
xchg
cdq
aaa
cmp
mov
aas
mov
enter
pop
loopne
adc
push
mov
js
rcl
mov
sbb
mov
enter
inc
or
aaa
repz
inc
test
mov
sub
sbb
dec
jle
and
xlat
mov
sbb
(bad)
xor
in
imul
xchg
js
or
sub
pop
loope
cmps
or
xor
inc
push
mov
add
sbb
outs
sti
arpl
add
add
out
pop
adc
mov
cmp
addr16
imul
xlat
adc
inc
out
add
add
cwde
movaps
ret
sar
jne
jle
or
push
gs
push
rcl
ficomp
xchg
or
clc
pop
pop
lahf
fimul
xor
dec
jg
add
inc
in
loopne
mov
aas
test
xchg
adc
cld
mov
ret
movs
aam
xor
xor
push
or
sbb
add
adc
mov
xlat
sub
lds
lods
mov
dec
jb
cmp
fld
adc
pushf
mov
ins
adc
jae
(bad)
enter
jle
in
std
fcmove
outs
xor
inc
inc
scas
jb
xor
cmps
jmp
rcr
(bad)
int3
hlt
fs
into
out
ss
stos
enter
(bad)
sub
int
call
arpl
pop
add
mov
xchg
add
cmp
sub
cli
sub
shr
pop
xor
adc
int
cs
xor
ret
clc
loopne
mov
mov
lea
stos
add
pop
add
loopne
sbb
lds
add
ins
bound
sar
push
xor
cdq
aaa
inc
in
les
cmc
xor
aas
inc
push
repz
outs
ror
xchg
and
sti
jmp
inc
pop
imul
std
iret
sahf
aad
imul
mov
call
fist
js
mov
jmp
push
dec
das
sbb
mov
push
imul
add
call
jmp
inc
cmc
inc
ins
stos
mov
movs
jb
scas
add
pop
ss
int3
adc
jmp
test
ds
xor
in
and
sub
push
push
mov
and
jbe
xor
inc
dec
add
push
gs
jae
les
sbb
pop
xchg
pop
ins
sub
int3
aam
add
jb
cs
jne
dec
inc
call
mul
and
or
sub
push
push
add
cmp
pop
adc
in
movs
loope
cmp
adc
ss
retf
mov
adc
pop
sub
es
sub
jmp
rcr
jg
in
test
mov
cmp
mov
iret
daa
ror
idiv
mov
js
aas
mov
push
add
jbe
and
xor
pop
adc
inc
inc
out
neg
out
bound
cmps
cmps
add
fdivr
mov
(bad)
pusha
mov
pop
mov
cmp
inc
mov
aam
(bad)
cmp
mov
aas
js
leave
mov
add
mov
cwde
sub
add
wbinvd
sub
or
push
in
xlat
pusha
xor
xchg
fisubr
ins
ret
adc
arpl
cli
jmp
sbb
adc
dec
mov
cmps
inc
sbb
stos
inc
pop
ss
xchg
test
ja
fucomp
jae
add
sbb
daa
jnp
les
daa
push
pop
jb
jb
imul
sbb
scas
push
sti
mov
pop
data16
jmp
gs
adc
dec
call
pop
pusha
test
cmps
nop
jae
push
xchg
mov
pusha
mov
sahf
frstor
mov
sub
sbb
fs
imul
sbb
add
jo
ret
push
adc
mov
psubw
inc
iret
ins
inc
loope
push
xchg
jl
stos
push
mov
inc
and
mov
outs
mov
fbstp
sub
inc
xchg
and
(bad)
in
scas
mov
and
sub
aam
not
fild
jg
and
or
fwait
xor
fnstenv
dec
xor
or
inc
inc
xor
in
inc
add
sbb
stos
push
add
jns
hlt
pop
test
and
mov
imul
inc
dec
push
xchg
add
lods
push
lahf
jnp
repz
xchg
js
and
call
not
pop
sbb
sbb
jl
in
fbstp
mov
int
repz
popa
jl
mov
add
pop
scas
out
push
je
sahf
or
xchg
cmps
dec
pop
or
dec
add
cmp
movs
xor
sbb
xlat
inc
add
es
jmp
sbb
in
bound
aam
xor
add
cli
test
aaa
dec
dec
test
sbb
sub
push
shl
cmp
push
idiv
cmp
in
cdq
sbb
mov
(bad)
mov
loopne
repnz
mov
adc
pop
cli
add
stos
or
inc
popa
mov
loop
aad
and
sbb
mov
sbb
and
cmp
sub
inc
jne
stos
xor
sub
cmp
mov
test
mov
cmp
mov
mov
or
xor
pop
mov
jl
add
hlt
loopne
clc
(bad)
mov
iret
sbb
cdq
cdq
stos
daa
sar
and
stos
pop
sub
imul
std
xor
push
add
pop
icebp
xor
outs
arpl
sar
and
cmp
call
aad
in
lock
adc
es
add
ja
xlat
clc
imul
loop
mov
sub
mov
nop
xchg
push
stos
add
stos
jmp
push
jns
mov
jmp
aam
(bad)
ins
mov
mov
mov
inc
fsub
out
(bad)
aaa
aas
xor
mov
dec
iret
pushf
test
inc
scas
push
xchg
imul
jg
xor
mov
stc
out
push
pop
and
lea
pushf
jl
lds
xchg
in
test
inc
sub
mov
popa
push
xor
in
jge
lock
push
ret
or
mov
(bad)
cmp
mov
jg
mov
div
inc
dec
and
cmp
jne
mov
and
ror
imul
fstp
sbb
stc
fnstsw
mov
jo
mov
push
(bad)
repz
dec
xor
mov
cmp
and
pop
cmpxchg
rcl
jmp
fild
adc
scas
mov
sbb
and
out
or
je
cli
stos
out
jmp
or
pushw
shl
push
inc
pusha
and
xchg
stos
push
fsubr
dec
rcl
pushw
xor
test
sub
test
inc
scas
xor
int3
push
sbb
sub
mov
mov
dec
fstp
adc
ficom
addr16
fimul
adc
pop
loopne
test
mov
add
scas
mov
jecxz
mov
or
cmp
inc
push
add
mov
push
push
xor
std
inc
sbb
test
daa
sbb
dec
loope
mov
in
sub
or
sahf
pop
add
cli
fdivr
and
jae
push
retf
idiv
data16
inc
lods
ja
push
xchg
and
push
mov
loop
and
out
mov
cld
mov
div
sqrtps
pop
scas
mov
clc
daa
ja
cmp
add
pop
shl
push
xchg
xor
mov
fmul
adc
lea
sub
mov
xor
scas
(bad)
sbb
xor
mov
push
test
push
enter
ret
adc
jbe
mov
fwait
call
pop
mov
pop
add
inc
adc
adc
sti
fdiv
or
adc
dec
sbb
mov
or
cmp
repnz
mov
mov
sub
xchg
mov
xor
jl
sbb
jbe
dec
inc
sbb
mov
aaa
pop
js
inc
jno
inc
pop
adc
popa
call
sub
inc
dec
sar
test
jecxz
sbb
jecxz
xchg
jg
pop
mov
outs
and
pop
xchg
or
call
(bad)
or
cli
xchg
pop
jecxz
ret
xor
sub
or
lods
sbb
xor
ja
mov
gs
fld
dec
inc
cmp
xchg
sbb
jno
xor
inc
sbb
jo
in
pop
call
mov
inc
ja
ja
dec
or
and
ss
ins
sub
sub
outs
push
dec
in
and
mov
mov
(bad)
sub
inc
jne
stos
int3
es
or
es
data16
push
jbe
test
(bad)
push
inc
aam
ss
sti
adc
mov
std
mov
xchg
mov
int
shl
xchg
sar
jae
add
mov
ss
cli
or
add
xor
test
push
fwait
jbe
mov
(bad)
push
test
gs
or
pop
int3
mov
(bad)
sub
dec
sub
cdq
in
out
fstp
push
jle
pop
mov
jg
xchg
add
out
loope
inc
push
pop
fadd
xor
mov
dec
jae
mov
movs
cmp
dec
jbe
jae
mov
cli
add
cmp
popa
xor
jae
out
mov
sub
mov
sbb
adc
or
iret
fsub
add
sub
pop
and
stc
xchg
pop
inc
stos
or
(bad)
fbld
in
jmp
stos
test
inc
xchg
(bad)
and
and
fisttp
jb
repnz
lock
imul
xor
mov
fist
(bad)
fstp
hlt
test
aas
jle
jne
push
cdq
xor
inc
xchg
jbe
leave
add
test
xor
nop
stos
push
and
cmps
fild
scas
imul
mov
lods
xchg
adc
jl
(bad)
mov
shr
add
pop
ins
jmp
pop
je
mov
pop
(bad)
push
mov
loopne
out
fst
push
xor
dec
xchg
mov
xor
ret
test
jns
inc
and
call
inc
scas
or
mov
(bad)
mov
fst
xor
scas
add
iret
mov
cs
xchg
xor
cmp
aas
ins
mov
sbb
inc
mov
push
outs
cwde
rol
add
ins
add
sbb
lods
xor
mov
jle
adc
pop
push
(bad)
sbb
js
sbb
adc
ret
call
lea
xor
xchg
adc
lods
lods
adc
and
pop
xor
bound
movs
je
dec
fcom
dec
cmc
ror
cmp
icebp
push
jae
jbe
das
fimul
idiv
xor
lods
jno
int
clc
in
adc
dec
ja
movs
or
outs
test
test
movs
mov
mov
add
mov
jbe
dec
test
xchg
test
(bad)
movs
and
jbe
int
arpl
dec
int
mov
dec
out
(bad)
mov
xor
adc
adc
dec
and
mov
adc
push
fisttp
add
imul
mov
test
enter
dec
inc
shrd
pop
or
sub
daa
iret
dec
(bad)
pop
int3
adc
not
mov
fdivr
mov
ss
push
cmp
add
retf
jle
ins
mov
(bad)
push
pop
movs
nop
daa
mov
sbb
xor
out
or
ret
inc
out
cs
mov
and
push
ret
fist
lea
repz
mov
jne
add
push
cmp
nop
rcr
fcomp
pop
jl
mov
add
test
iret
pop
gs
sub
idiv
sar
cld
je
mov
adc
enter
out
xchg
dec
nop
out
dec
lds
leave
pop
push
icebp
mov
(bad)
mov
lea
pop
leave
sbb
mov
jnp
mov
loope
mov
sbb
and
and
dec
jbe
hlt
dec
ret
jecxz
aaa
mov
imul
inc
js
inc
dec
or
imul
mov
or
das
daa
arpl
or
mov
sar
xor
aas
add
in
add
(bad)
movs
pop
dec
jl
cs
jo
or
stc
jecxz
ja
sub
pop
xchg
arpl
cmp
dec
sbb
inc
mov
pop
cs
push
pop
pop
adc
pop
dec
mov
jb
push
(bad)
cdq
jae
jecxz
xchg
and
inc
iret
pushf
hlt
jne
hlt
xchg
xchg
(bad)
jns
std
inc
xchg
adc
cmc
sbb
out
add
sub
enter
(bad)
stc
dec
out
fsubr
adc
xor
cdq
jb
das
sbb
fsubr
or
push
es
cmp
inc
mov
iret
mov
and
stos
ins
pop
aam
cs
push
mov
sub
pop
inc
mov
aaa
xchg
mov
cmp
sub
push
daa
adc
and
mov
mov
lahf
adc
pusha
xchg
mov
push
mov
xor
lods
into
jne
dec
xchg
ins
mov
jne
(bad)
popf
and
int
addr16
pushf
xor
jbe
mov
jns
push
clc
scas
loopne
push
sub
mov
jp
imul
xchg
iret
les
sub
ret
(bad)
push
add
dec
adc
push
sti
sub
popa
cmps
int
icebp
out
xchg
xor
sbb
mov
adc
popf
cs
dec
mov
mov
popa
ja
pop
pop
push
jl
sub
jl
adc
inc
call
hlt
xchg
jns
scas
inc
sar
movs
fidivr
or
xor
lods
lods
cdq
push
ins
lods
push
mov
scas
cmps
mov
mov
scas
test
mov
lock
retf
mov
mov
sti
pop
repnz
fcmovu
icebp
mov
fnstenv
inc
mov
inc
lds
jb
das
(bad)
mov
mov
(bad)
mov
pop
dec
inc
fs
(bad)
jecxz
sub
fwait
movs
push
dec
or
loope
xor
jnp
fwait
outs
pop
stc
push
jno
push
xchg
mov
stos
mov
repnz
lock
inc
xor
push
mov
test
in
push
out
xor
dec
dec
pusha
dec
hlt
jp
mov
sar
pop
(bad)
mov
in
mov
add
xor
hlt
sbb
cmc
or
(bad)
ins
or
sbb
xchg
or
sbb
push
mov
dec
pop
cs
adc
ds
cmc
ror
mov
inc
cmp
sub
nop
mov
xor
mov
ins
xchg
jbe
pop
cmp
(bad)
mov
push
jl
loop
sbb
mov
push
inc
push
(bad)
pop
or
or
(bad)
movs
scas
in
xor
imul
rcl
sbb
out
and
add
js
repz
and
fs
and
sbb
or
sbb
mov
rol
fsub
xchg
sbb
fistp
jo
retf
inc
add
or
push
out
(bad)
shl
push
or
jnp
pop
mov
push
test
cwde
test
mov
and
mov
mov
jp
popa
add
ror
and
cmp
mov
test
pushf
sub
in
sti
pop
adc
gs
cmps
cmp
xchg
adc
sahf
sub
loope
inc
pop
inc
adc
fwait
or
sbb
pop
outs
sbb
shl
mov
imul
mov
sbb
jmp
nop
xchg
fist
bound
add
mov
xor
push
rcl
scas
pop
cwde
arpl
fsubr
mov
push
sub
cmp
adc
push
and
dec
or
or
test
adc
pushf
xchg
mov
sub
cld
and
inc
fst
pop
(bad)
jmp
cs
loopne
lods
gs
xchg
imul
mov
pop
mov
pop
pop
cld
jg
mov
push
xchg
mov
add
inc
inc
hlt
movs
das
or
aaa
mov
cdq
jae
xor
gs
xor
pusha
cdq
cli
adc
cld
in
add
and
jmp
jg
mov
sub
retf
out
xchg
bound
jae
out
dec
sub
mov
inc
inc
adc
ds
iret
mov
jae
push
jae
jo
jbe
inc
cmp
sub
jae
test
jns
lds
or
mov
sub
adc
ds
sti
add
xor
int
mov
mov
mov
mov
xor
jp
stos
out
mov
in
or
out
hlt
int
std
dec
out
loop
push
stc
inc
jno
das
movs
fwait
mov
leave
xor
cmp
(bad)
into
not
call
mov
dec
cmps
pop
xchg
xor
dec
imul
mov
sbb
sub
mov
mov
jg
pop
pop
add
cmps
loop
retf
mov
mov
dec
jae
cmps
mov
mov
xor
js
test
arpl
and
xlat
js
jge
lahf
push
les
push
mov
retf
add
xor
jnp
xchg
out
bound
or
cs
ret
jle
shl
xlat
scas
push
mov
icebp
imul
retf
adc
jg
xchg
adc
or
and
cdq
lock
inc
sbb
mov
pop
sbb
or
mov
adc
jns
mov
test
sub
mov
sub
jmp
dec
out
mov
inc
mov
push
inc
call
pushf
push
xchg
jl
cwde
(bad)
jle
test
fs
mov
xor
mov
pop
pop
inc
(bad)
inc
fild
sahf
pop
mov
mov
add
mov
sbb
in
shl
jne
or
or
jmp
xchg
bound
leave
push
xor
sub
ret
loop
in
add
(bad)
std
ins
and
xchg
and
add
inc
shl
push
and
sbb
pop
sub
test
mov
adc
ins
add
add
enter
jmp
lahf
imul
clc
add
(bad)
lock
inc
jb
(bad)
xor
ror
es
dec
push
dec
push
jbe
rol
fwait
pop
fwait
dec
sbb
inc
mov
loope
xor
and
add
mov
mov
popa
and
enterw
dec
pop
cdq
rcl
push
cmp
xchg
into
lock
fst
mov
into
jg
xlat
pop
sbb
mov
mov
pop
outs
inc
ds
sar
add
jo
mov
add
lahf
xchg
retf
push
adc
xor
sbb
pop
mov
and
mov
imul
in
jmp
xchg
pop
jmp
jne
loop
lds
mov
fldenvw
dec
sbb
out
imul
sar
cmps
test
dec
adc
pushf
push
jle
push
and
add
(bad)
scas
call
and
jnp
dec
je
das
test
push
std
and
lock
cwde
push
cmps
popf
xchg
add
mov
stc
popa
retf
sbb
sub
xchg
adc
stc
(bad)
rcl
ja
cwde
push
jnp
add
lock
(bad)
mov
jb
xor
pop
push
push
outs
sub
and
cli
and
xchg
fndisi(8087
rcl
loop
push
popf
cwde
call
es
call
outs
ficomp
dec
sub
mov
retf
and
sub
(bad)
mov
xor
sbb
and
xchg
nop
jcxz
test
ins
fisttp
retf
mov
jg
fadd
mov
ret
xor
dec
jl
jmp
sahf
test
and
test
inc
add
add
or
sahf
dec
push
mov
mov
gs
out
sub
pop
dec
dec
jno
(bad)
xor
lods
xchg
xor
out
imul
aad
test
stos
cdq
jge
arpl
scas
jge
ret
cmps
shl
cmp
scas
mov
push
push
adc
jg
push
in
into
mov
in
ret
pop
retf
dec
scas
and
mov
(bad)
shr
stos
cmp
mov
sub
sysenter
jno
js
cmp
call
and
pop
repnz
in
ret
jae
loopne
clc
aad
shr
sbb
mov
pushf
nop
add
out
packsswb
popf
xchg
dec
or
aam
mov
and
fwait
jnp
test
aas
jmp
inc
addr16
jne
aad
shr
mov
add
test
inc
out
fnstenv
test
lahf
ret
and
ret
shr
jnp
sbb
sbb
dec
mov
mov
dec
mov
mov
jp
scas
xchg
add
and
mov
call
mov
(bad)
mov
sbb
jb
push
out
in
mov
mov
stc
and
fidiv
mov
xor
ins
jmp
cmp
(bad)
iret
sbb
(bad)
call
in
cmps
sar
mov
mov
or
or
push
xor
push
jp
xor
repnz
repz
movs
or
inc
loopne
and
sub
test
jnp
cmps
mov
fsubr
jmp
aad
xor
lods
das
or
xor
dec
test
jns
inc
dec
dec
pop
mov
fs
cmp
mov
loopne
pop
movs
pop
in
test
ret
daa
out
aam
(bad)
jmp
iret
mov
pop
mov
push
mov
jmp
add
jno
mov
movs
(bad)
(bad)
xor
dec
inc
in
mov
and
jmp
mov
mov
or
(bad)
pop
lods
ins
call
out
push
shl
sbb
and
movs
js
jb
aaa
push
js
aas
sar
lock
lds
mov
loope
rol
and
outs
inc
(bad)
js
out
jbe
mov
and
aaa
in
jmp
and
mov
jle
push
jno
je
gs
pop
xchg
repnz
or
and
mov
std
xchg
repnz
cdq
add
dec
xchg
mov
pop
push
and
jl
dec
lods
fs
jecxz
rcl
es
aam
pop
mov
or
cwde
repz
loopne
lahf
mov
inc
jnp
rol
(bad)
adc
mov
add
jge
mov
jmp
je
in
or
sub
jne
sahf
and
mov
pop
leave
in
aad
and
cld
mov
in
(bad)
adc
pop
cmp
gs
repnz
aad
push
mov
adc
dec
scas
pop
in
imul
jo
int3
mov
cdq
fstp
mov
add
shl
dec
pushf
aam
pusha
sahf
and
(bad)
cmp
xchg
in
add
mov
xlat
cwde
(bad)
fsub
jae
adc
nop
rcr
sahf
add
mov
in
repz
shl
add
sub
push
inc
push
fwait
mov
loopne
push
xor
dec
cmps
or
xchg
cwde
into
dec
adc
out
ins
test
xchg
adc
(bad)
fldcw
cmp
scas
push
push
and
xchg
cmps
mov
das
not
or
sub
cmc
cs
dec
cmp
mov
jnp
push
fwait
inc
push
mov
movs
pop
jns
cli
adc
xchg
xchg
mov
xlat
bound
sub
imul
mov
and
jmp
add
aad
mov
pop
xor
inc
xchg
imul
jp
test
and
sti
sar
sub
fcmovnbe
popf
fdiv
xchg
ficomp
xchg
ss
(bad)
fisub
stos
jnp
rol
pop
sti
mov
mov
(bad)
out
xor
xchg
jmp
call
mov
mov
cmp
sbb
ret
mov
pop
fdiv
cmp
mov
and
outs
loopne
loopne
xor
mov
or
dec
ds
push
mov
daa
scas
movs
xlat
call
mov
je
repz
les
mov
lods
out
stos
cmc
adc
and
jecxz
(bad)
fld
dec
cli
and
or
mov
out
adc
scas
cmp
and
clc
or
and
fsub
xchg
add
in
jns
xor
jmp
push
repnz
out
call
mov
push
out
(bad)
std
(bad)
cld
add
mov
mov
repz
(bad)
lock
std
sub
icebp
push
dec
inc
xchg
cmp
dec
stos
dec
cdq
in
inc
pop
icebp
in
push
icebp
js
sub
lds
inc
icebp
jns
xor
sahf
adc
sbb
add
xchg
retf
hlt
dec
repz
push
adc
pop
fs
fwait
and
movs
in
push
call
sbb
test
pop
fsub
cmp
cmps
push
cmps
xchg
pop
cmp
xor
sbb
jle
imul
mov
pop
pushf
(bad)
sahf
jle
cmp
add
int
and
add
lds
fwait
push
sbb
inc
or
lea
js
cmps
lea
ss
sub
arpl
bound
lahf
pop
xchg
(bad)
es
pusha
std
imul
xor
sbb
daa
out
ficom
movs
ins
or
cmps
lahf
inc
mov
pop
sbb
pop
sbb
mov
scas
dec
loop
call
in
pop
enter
int
in
lods
mov
xchg
adc
push
ret
adc
pop
fbld
js
out
sbb
push
inc
jle
addr16
outs
mov
push
fnstenv
cdq
arpl
mov
sar
(bad)
mov
fist
leave
aam
sbb
cmc
cs
out
call
rol
inc
int3
stc
movs
outs
cmp
outs
leave
sbb
jnp
mov
add
or
in
sbb
xor
test
sub
ror
dec
je
pop
or
cmps
loop
outs
jmp
inc
adc
popa
lock
pop
dec
in
xchg
push
int3
bound
sub
repz
jmp
sbb
pop
pop
push
dec
sbb
and
or
lahf
fstp
adc
aam
pop
leave
(bad)
jo
xor
out
test
pop
dec
in
xchg
push
int3
bound
sub
add
pop
add
add
add
adc
sub
add
and
imul
or
pop
inc
add
add
fdivr
(bad)
jmp
add
add
add
add
add
add
sub
push
push
and
and
retf
sub
add
add
push
and
fcmovnu
dec
pop
and
sub
adc
or
push
add
add
add
adc
push
inc
ret
shr
add
add
or
cmp
dec
mov
popa
and
inc
or
add
xchg
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
cmp
mov
add
or
lea
add
adc
and
add
add
sub
add
push
mov
add
push
sub
add
push
sub
sub
sub
and
adc
and
repnz
out
pop
popa
cmp
(bad)
inc
and
mov
add
sub
lea
add
add
add
add
shl
add
sub
add
push
mov
add
push
or
push
and
test
pop
and
inc
xchg
or
cmp
(bad)
call
push
add
add
jae
add
or
or
or
sub
add
push
or
sldt
push
and
inc
shr
cmp
(bad)
(bad)
call
or
add
adc
and
mov
cmc
pop
and
loope
mov
(bad)
call
arpl
add
sub
add
push
or
push
and
and
push
loope
cmp
(bad)
(bad)
dec
sub
and
outs
cmps
push
sub
and
adc
and
(bad)
cdq
and
cmp
add
adc
add
jl
add
add
add
add
add
add
and
jg
out
fbld
and
inc
or
(bad)
(bad)
jmp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sub
jg
and
and
iret
and
retf
jo
pop
popa
sub
add
pop
and
and
and
scas
popa
sub
push
sub
and
(bad)
movs
and
cli
dec
int3
and
xor
arpl
(bad)
call
push
add
add
jae
add
or
adc
add
or
and
and
cmp
(bad)
(bad)
call
pop
add
push
and
and
das
(bad)
(bad)
jmp
hlt
add
add
adc
add
pop
and
and
jmp
jmp
call
sbb
add
and
(bad)
(bad)
(bad)
inc
pop
sub
add
push
pop
and
retf
lahf
jmp
and
xchg
pop
cli
popa
cmp
(bad)
(bad)
jmp
adc
or
cmc
mov
and
mov
cmp
(bad)
(bad)
inc
sub
add
push
sub
add
push
pop
and
and
cmp
sub
add
push
sub
rcr
in
mov
xchg
(bad)
(bad)
jmp
stos
adc
push
add
add
adc
add
add
sub
add
push
sub
add
or
sub
sbb
add
or
div
dec
mov
cdq
popa
and
add
add
mov
or
add
add
mov
add
test
add
test
add
jle
add
and
add
loopne
add
sbb
add
pusha
adc
add
push
add
xor
add
hlt
or
add
pop
add
mov
or
add
fisttp
add
push
or
add
add
add
or
add
add
add
add
jmp
add
add
adc
add
add
test
add
sub
add
sbb
add
mov
add
sub
add
xor
or
add
push
or
add
add
add
add
add
lods
or
add
stc
add
add
add
add
add
add
sldt
xor
add
mov
add
std
add
add
adc
add
adc
add
add
add
or
add
add
lock
add
bound
add
mov
add
mov
add
cld
push
add
fisttp
add
jae
add
lea
add
inc
add
jno
add
enter
std
add
add
add
cmp
add
dec
sldt
sbb
add
loopne
add
push
or
add
add
add
mov
add
push
add
add
add
stc
push
add
pop
add
add
(bad)
(bad)
jl
add
mov
add
je
add
(bad)
or
add
imul
add
pop
add
in
or
add
add
push
adc
add
push
add
jecxz
add
adc
or
add
add
and
add
add
or
add
lds
add
pop
adc
add
sldt
xor
add
push
add
add
adc
add
add
(bad)
or
add
or
add
add
add
aas
push
add
stos
add
add
add
add
pop
add
(bad)
or
add
pusha
push
add
arpl
add
pop
add
push
add
add
push
add
fmul
add
arpl
add
push
adc
add
adc
add
add
test
add
inc
or
add
or
add
add
and
add
movs
add
add
pop
add
inc
add
add
add
add
fld
add
dec
or
add
sldt
ins
sldt
inc
add
add
add
sti
or
add
adc
add
sub
pop
adc
adc
xchg
sbb
or
popa
cmp
(bad)
call
or
and
pop
(bad)
out
mov
sub
(bad)
call
sub
rcr
sub
sub
add
sub
cmp
std
(bad)
call
adc
adc
mov
cmp
rol
popa
cmp
cld
(bad)
call
sub
inc
(bad)
and
sub
or
add
sub
push
dec
ficomp
mov
jns
popa
cmp
cld
(bad)
call
pop
pop
pop
adc
and
je
(bad)
cmp
nop
pop
adc
adc
mov
and
jle
popa
cmp
pop
or
pop
push
push
or
es
adc
adc
les
or
push
popa
cmp
or
or
or
or
and
loop
cmp
(bad)
call
pop
pop
dec
pop
inc
adc
sub
add
adc
inc
mov
pusha
pop
and
cmp
(bad)
dec
push
pop
inc
adc
sub
add
es
lea
add
push
or
sbb
add
push
sub
add
push
and
cld
(bad)
call
sub
and
clc
mov
jb
cmp
cld
(bad)
dec
adc
pop
adc
pop
adc
adc
pop
inc
push
adc
pop
pop
adc
and
and
call
pop
adc
or
add
xchg
inc
cmp
sar
(bad)
dec
adc
pop
adc
rcr
adc
push
adc
and
je
(bad)
cmp
adc
and
test
adc
push
adc
xchg
pop
xor
and
mov
and
sbb
lahf
and
div
sub
popa
cmp
(bad)
call
or
or
adc
adc
inc
push
adc
pop
adc
xchg
out
add
popa
sti
(bad)
call
sub
rcr
sub
sub
fild
or
inc
add
pop
popa
cmp
(bad)
call
sbb
pop
adc
and
(bad)
(bad)
call
sub
xor
and
sbb
push
and
aad
cmp
sti
(bad)
jmp
adc
or
inc
sbb
and
cmp
sti
(bad)
call
nop
pop
adc
adc
call
and
push
inc
(bad)
popa
cmp
cli
(bad)
call
(bad)
rcr
movups
ja
mov
pop
push
fisub
(bad)
cli
(bad)
call
and
adc
push
adc
adc
test
in
test
cmp
push
adc
or
rcr
sahf
adc
in
mov
add
fwait
cli
(bad)
call
sub
xor
sahf
sub
popa
cmp
pop
push
rcr
or
add
adc
and
in
push
retf
mov
cmp
(bad)
call
movhps
pop
or
pop
adc
adc
sbb
lods
xchg
pop
and
enter
cmp
call
sbb
pop
adc
sub
movs
lahf
cmp
(bad)
call
adc
es
test
sub
and
dec
sbb
(bad)
call
(bad)
rcr
movups
mov
and
cmp
stc
(bad)
call
push
pop
or
pop
push
push
adc
fstp
inc
test
cmp
stc
(bad)
call
sub
pop
adc
and
sbb
sar
(bad)
call
adc
or
test
fbld
and
and
adc
xor
call
and
add
or
or
push
stos
and
sub
xchg
stc
(bad)
call
sub
sub
or
sbb
mov
retf
mov
jge
(bad)
call
or
or
or
or
sbb
test
fsub
(bad)
dec
pop
sub
pop
or
cmp
push
pop
and
cmp
(bad)
call
sub
fmul
inc
pop
and
xchg
sbb
aaa
stc
(bad)
call
bndldx
inc
adc
sub
add
es
shr
(bad)
call
adc
push
xor
add
imul
and
(bad)
dec
adc
pop
pop
or
inc
adc
sub
add
es
push
sub
call
pop
sbb
pop
push
push
adc
inc
dec
or
pop
and
cmp
clc
(bad)
call
sub
movs
pop
in
pop
and
sbb
(bad)
dec
pop
cmp
pop
or
inc
push
pop
pop
and
cmp
adc
adc
adc
adc
sub
sub
pop
and
mul
popa
cmp
push
sbb
pop
and
ins
push
adc
dec
rol
pop
and
and
clc
(bad)
call
and
add
or
lahf
or
and
adc
and
(bad)
call
sub
pop
inc
adc
sub
add
and
rcr
cmp
clc
(bad)
dec
adc
pop
pop
or
inc
adc
sub
add
adc
and
inc
outs
push
adc
out
push
fwait
rol
popa
cmp
clc
(bad)
dec
or
or
or
stos
movs
mov
sahf
inc
inc
lods
popa
cmp
idiv
call
sub
mov
and
cmp
idiv
call
sub
push
adc
pop
rcr
sub
cs
idiv
call
sub
dec
xlat
cli
movs
pop
and
sbb
fsub
scas
idiv
call
adc
adc
es
cmp
mov
cmp
adc
push
rcr
pop
adc
adc
into
lods
jo
pop
and
cmp
(bad)
call
sub
rcr
sub
sub
retf
imul
dec
push
idiv
dec
pop
js
pop
dec
sub
scas
retf
push
and
xor
and
mov
popa
cmp
(bad)
call
push
push
rcr
ins
push
adc
dec
jno
pop
pop
and
xor
and
(bad)
call
adc
xor
and
sub
and
cmp
idiv
call
sub
into
push
jle
pop
and
repnz
cmc
idiv
call
cmova
adc
and
loopne
pop
and
dec
lods
xor
cmp
idiv
call
adc
adc
adc
adc
xchg
pop
adc
sub
mov
mov
mov
(bad)
call
sbb
adc
push
adc
js
js
and
mov
in
and
aas
pcmpgtb
idiv
call
movd
push
loopne
movups
adc
ffree
je
popa
cmp
call
sbb
add
or
jns
jo
and
in
add
(bad)
call
adc
sbb
or
pop
pop
push
into
and
cdq
push
cdq
and
(bad)
call
push
and
fs
push
adc
test
lds
lds
cmp
idiv
call
sbb
adc
adc
adc
sub
or
and
cmp
cmc
(bad)
dec
pop
sub
pop
or
and
push
pop
and
js
(bad)
popa
cmp
cmc
(bad)
call
adc
adc
push
adc
retf
xchg
movs
push
and
mov
cmp
and
ret
scas
xor
cmp
adc
adc
adc
xchg
pop
adc
adc
movs
sub
pop
and
cmp
sub
or
scas
fmul
in
sub
and
adc
mov
popa
cmp
(bad)
call
sub
sub
sub
rcr
sub
sub
pop
ret
xchg
xchg
pop
and
repz
popa
cmp
(bad)
dec
push
pop
inc
adc
sub
add
es
lea
add
push
or
sbb
add
push
sub
add
push
and
sbb
cmova
adc
(bad)
rcr
movhps
adc
sub
pusha
aad
fwait
pop
and
daa
add
popa
cmp
hlt
(bad)
call
add
data16
add
adc
lods
or
sbb
fcomip
(bad)
call
sub
push
pop
cld
push
loopne
sub
sub
rcr
sub
sub
aaa
and
cmps
pop
and
cmp
or
js
pop
dec
pop
adc
or
or
adc
or
or
or
pop
dec
pop
adc
or
or
sbb
pop
adc
adc
pop
or
inc
adc
sub
add
adc
and
fs
push
adc
sbb
pop
and
ins
push
adc
inc
push
cwde
pop
and
sbb
popa
cmp
(bad)
call
push
adc
push
adc
xchg
pop
xor
and
sub
push
and
adc
and
xchg
pusha
pop
jge
popa
cmp
hlt
(bad)
call
sub
or
xchg
xor
dec
cmp
adc
stos
cs
pop
popa
cmp
hlt
(bad)
call
pop
push
push
adc
adc
push
pop
and
repnz
popa
cmp
repz
call
movhps
(bad)
rcr
movups
inc
sub
ds
and
ror
scas
and
(bad)
call
push
push
rcr
ins
push
adc
jl
mov
cmp
mov
push
sbb
pop
and
imul
pop
and
add
push
adc
add
jbe
and
mov
xchg
repz
call
sbb
and
inc
and
cmp
movups
dec
pop
adc
adc
test
xor
pop
and
pop
mov
repz
call
(bad)
rcr
movups
icebp
and
lods
pop
and
cmp
(bad)
call
sub
push
adc
inc
pusha
aad
pop
and
imul
(bad)
call
adc
adc
push
adc
xchg
pop
xor
and
sub
and
sbb
and
push
adc
cmp
repz
inc
sub
add
push
push
sub
add
push
pop
cmp
or
xor
sub
and
mov
sub
loope
xchg
stos
pop
popa
cmp
repnz
call
adc
popa
(bad)
pop
and
mov
repnz
call
sub
rcr
sub
sub
aaa
outs
shl
movs
movs
popa
cmp
sub
jb
pusha
sub
dec
xor
popa
cmp
and
adc
push
adc
xchg
pop
xor
and
mov
push
and
adc
jnp
je
pop
popa
cmp
call
or
dec
adc
adc
fimul
imul
push
push
popa
cmp
(bad)
call
sub
inc
mov
clc
pop
and
fwait
cmp
(bad)
call
sub
rcr
sub
sub
sbb
inc
pop
and
and
popa
cmp
adc
pop
adc
pop
adc
adc
pop
inc
push
and
mov
test
call
adc
adc
inc
mov
mov
push
aad
es
icebp
(bad)
call
push
adc
adc
adc
xchg
pop
adc
adc
dec
dec
add
pop
and
cmp
icebp
(bad)
call
sub
push
and
call
sar
icebp
(bad)
call
adc
adc
or
mov
mov
and
arpl
icebp
(bad)
call
daa
pop
pop
adc
and
data16
xchg
icebp
(bad)
call
or
or
inc
adc
sub
add
adc
inc
out
out
pop
and
es
cmp
dec
or
adc
pop
dec
pop
adc
adc
(bad)
cmp
push
icebp
(bad)
call
add
data16
add
push
adc
inc
in
mov
inc
add
popa
cmp
icebp
(bad)
call
and
adc
adc
adc
xchg
pop
adc
adc
ret
sub
push
dec
mov
popa
cmp
icebp
(bad)
call
sbb
sbb
adc
sub
fwait
dec
cmps
fcomp
mov
push
movs
popa
cmp
lock
call
adc
adc
lods
pop
mov
jnp
popa
cmp
lock
call
pop
push
rcr
push
adc
pop
or
pop
push
push
adc
sbb
inc
adc
sub
add
adc
fsubr
pop
scas
pop
and
loop
icebp
popa
cmp
sub
pop
inc
adc
sub
add
adc
sbb
pop
adc
and
lock
call
sub
cmps
popf
fidiv
pop
and
imul
call
and
pop
adc
and
cmps
cmp
(bad)
call
adc
adc
or
lea
cli
and
xchg
mov
pop
lock
call
movhps
(bad)
rcr
movups
inc
sub
pop
xchg
and
movs
out
(bad)
and
(bad)
dec
pop
adc
pop
dec
adc
or
js
pop
dec
adc
aad
fs
sbb
(bad)
call
pop
adc
or
adc
pop
dec
sahf
adc
int
jg
pop
and
cmp
out
(bad)
call
and
or
or
sahf
sub
mov
mov
push
nop
and
(bad)
call
sub
xor
leave
inc
pop
and
shr
(bad)
call
push
sbb
pop
and
imul
pop
(bad)
pop
pop
and
cmp
sbb
add
or
jne
dec
cmc
and
xor
hlt
and
(bad)
call
adc
adc
jbe
push
mov
and
cmp
sub
mov
pushf
test
mov
add
popa
cmp
(bad)
call
and
pop
adc
adc
(bad)
outs
pop
sub
and
cmp
(bad)
call
sbb
add
or
gs
rcr
aaa
add
and
(bad)
call
sub
push
and
das
out
(bad)
call
adc
adc
or
and
popa
cmp
out
(bad)
call
push
pop
pop
adc
adc
push
std
sbb
pop
and
dec
popa
cmp
out
(bad)
call
sub
xor
push
hlt
pop
and
and
popa
cmp
out
(bad)
call
adc
pop
adc
adc
adc
cmp
mov
out
(bad)
call
sub
rcr
sub
sub
or
es
daa
pop
and
retf
and
aad
mov
pop
popa
cmp
adc
pop
adc
and
out
mov
fwait
out
(bad)
call
sub
rcr
sub
sub
xor
sbb
dec
js
cmp
daa
adc
or
jns
jg
and
scas
(bad)
mov
cmp
(bad)
call
nop
inc
adc
sub
add
adc
sbb
pop
adc
and
ins
fnsave
call
and
sbb
pop
push
push
adc
push
and
dec
in
sub
adc
adc
mov
and
pop
out
(bad)
call
sub
stc
sbb
shl
(bad)
dec
adc
adc
and
mov
cmp
in
(bad)
call
movhps
(bad)
rcr
movups
ins
into
jg
pop
and
(bad)
in
(bad)
call
push
pop
or
pop
push
push
push
adc
sub
xor
and
cmp
(bad)
popa
cmp
sub
pop
inc
adc
sub
add
adc
push
push
adc
pop
or
pop
adc
adc
adc
dec
pop
adc
adc
loopne
cmp
and
xchg
sub
(bad)
call
push
push
rcr
jne
add
push
adc
pop
or
pop
push
push
adc
mov
and
loopne
ret
pop
in
(bad)
call
adc
and
or
rol
push
and
into
lods
and
call
adc
adc
xchg
inc
sbb
popa
cmp
in
(bad)
call
push
and
inc
outs
push
adc
dec
push
jae
pop
and
jecxz
or
adc
(bad)
call
and
pop
adc
sbb
add
(bad)
call
sbb
pop
adc
adc
shl
push
sbb
in
(bad)
call
sub
xor
sub
mov
cmp
in
(bad)
call
add
data16
add
pop
adc
aad
cwde
ficomp
cmp
(bad)
mov
adc
pop
adc
pop
inc
adc
sub
add
es
icebp
imul
or
pop
push
push
push
adc
adc
(bad)
leave
adc
(bad)
mov
popa
cmp
call
and
or
or
dec
(bad)
jle
and
or
cmp
(bad)
call
adc
or
pop
dec
sahf
adc
mov
and
shr
fldenv
inc
in
(bad)
call
movhps
(bad)
rcr
mov
fimul
cmp
in
(bad)
call
adc
sbb
and
(bad)
call
sub
outs
sub
pop
and
out
popa
cmp
in
(bad)
call
push
adc
or
mov
sub
and
mov
and
(bad)
jmp
add
add
xor
add
add
add
add
adc
sub
add
xor
add
add
adc
add
push
add
or
add
add
xor
or
add
add
add
add
sub
add
or
adc
add
add
add
adc
add
and
add
sub
add
adc
add
or
add
add
add
add
outs
and
add
sub
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
jae
add
or
add
xor
or
add
add
add
add
outs
and
add
sub
xor
or
add
add
add
add
outs
and
adc
add
push
add
add
add
adc
add
or
add
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
sub
add
sub
add
xor
add
add
add
add
adc
sub
add
sub
add
xor
add
add
add
add
adc
outs
sub
add
sub
adc
add
pop
add
add
add
adc
outs
sub
add
sub
adc
add
pop
add
add
add
adc
sub
add
sub
adc
add
pop
add
add
add
adc
outs
sub
add
xor
or
add
add
add
add
outs
add
or
adc
push
add
add
add
add
adc
add
or
add
adc
pop
add
add
add
jae
add
or
and
rol
out
fcom
shl
or
or
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
push
or
lea
add
or
or
sbb
add
or
pop
or
add
push
push
push
adc
and
and
sub
add
add
push
adc
and
test
ins
stos
popa
cmp
(bad)
call
adc
or
sub
mov
(bad)
(bad)
inc
outs
xor
add
adc
outs
push
adc
pop
aas
pop
bound
and
fneni(8087
cmp
(bad)
(bad)
call
add
das
or
and
push
and
cmp
push
pop
jae
add
or
pop
push
outs
xor
add
pop
or
adc
and
(bad)
pop
and
mov
cld
(bad)
(bad)
call
add
pop
adc
or
jge
pop
xchg
pop
and
or
(bad)
inc
push
adc
adc
or
add
push
adc
and
mov
retf
iret
popa
cmp
(bad)
(bad)
call
push
sub
adc
pop
add
add
add
pop
jo
pop
jo
data16
add
add
xor
and
inc
or
jecxz
and
pop
inc
and
add
add
add
add
add
lahf
add
add
add
add
add
jmp
add
inc
add
add
(bad)
jmp
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
mov
add
iret
add
add
add
add
add
add
cmp
add
adc
push
adc
push
xchg
or
xchg
popa
sahf
adc
push
(bad)
pop
and
imul
cmp
(bad)
(bad)
call
or
adc
or
shl
push
and
inc
mov
sbb
pop
adc
pop
adc
sahf
and
mov
cdq
cmp
(bad)
(bad)
call
pop
sbb
pop
sbb
or
sbb
or
or
and
or
sub
jecxz
cmp
(bad)
(bad)
dec
or
sbb
or
add
sahf
adc
pop
adc
or
and
push
pop
and
adc
cdq
popa
cmp
pop
pop
movups
pop
setne
pop
setne
push
adc
adc
retf
sub
mov
xchg
popa
cmp
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
adc
pop
cmp
inc
pop
and
xchg
sahf
popa
cmp
(bad)
call
or
push
and
adc
pop
adc
adc
ror
lock
pop
and
nop
pop
ss
cmp
(bad)
call
adc
or
or
jl
jbe
pop
and
push
sbb
cmp
(bad)
(bad)
call
adc
adc
pop
scas
mov
inc
outs
popa
cmp
(bad)
dec
or
or
popa
or
jecxz
or
(bad)
call
add
adc
or
push
inc
loope
and
fst
icebp
std
(bad)
jmp
stc
or
sti
push
dec
mov
aad
(bad)
call
or
pop
adc
adc
mov
mov
pop
and
fdivr
cmp
push
adc
push
xchg
or
xchg
popa
sahf
adc
pop
or
pop
pop
or
popa
sahf
adc
add
mov
pop
and
cmp
pop
pop
or
xchg
or
or
or
cmp
mov
push
cmp
(bad)
call
or
adc
and
sti
push
lods
popa
cmp
(bad)
call
pop
sbb
pop
sbb
sahf
adc
and
and
test
cmp
(bad)
call
or
es
or
add
jecxz
cmp
std
(bad)
dec
or
sbb
or
es
pop
and
or
repz
cmp
pop
pop
or
pop
pop
or
popa
sahf
adc
pop
or
pop
pop
or
popa
sahf
adc
pop
or
pop
pop
or
or
or
popa
sahf
adc
cwde
out
mov
pop
and
les
cld
(bad)
call
adc
and
push
pop
and
or
cmp
add
add
or
shl
popf
cld
(bad)
call
pop
adc
xchg
adc
and
loopne
mov
call
or
push
and
adc
push
rcr
retf
and
push
pushf
movs
popa
cmp
(bad)
call
or
and
add
add
add
or
aad
out
adc
cwde
sbb
(bad)
call
or
push
and
adc
pop
sbb
adc
push
xor
js
sar
(bad)
call
or
adc
or
lods
ja
loopne
sub
and
cmp
cld
(bad)
call
adc
and
sbb
(bad)
call
adc
adc
push
sbb
lea
add
adc
adc
imul
inc
pop
and
cmp
sti
(bad)
call
pop
pop
adc
pop
xchg
or
xchg
popa
sahf
adc
sbb
pop
sbb
sahf
adc
xchg
or
sub
addr16
sub
cmp
adc
(bad)
data16
add
add
or
data16
add
or
pop
adc
adc
std
and
loop
and
cmp
or
push
and
adc
rcr
adc
pop
and
(bad)
(bad)
popa
cmp
(bad)
call
pop
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
mov
and
or
popa
cmp
add
or
(bad)
mov
push
and
dec
call
sti
(bad)
jmp
add
adc
or
retf
add
add
adc
and
mov
add
adc
and
test
and
and
and
pop
inc
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
fiadd
add
cmp
add
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
pop
push
jmp
popa
cmp
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
adc
jbe
and
aam
cs
cmp
(bad)
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
add
or
pop
and
xor
pop
and
cmp
(bad)
call
add
add
sub
aaa
add
or
add
or
push
adc
and
jmp
jbe
stc
popa
cmp
(bad)
(bad)
inc
outs
sbb
or
xchg
add
pop
and
pop
xchg
and
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
xor
adc
imul
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
cmp
or
retf
ds
(bad)
dec
push
mov
or
pop
and
sbb
pop
and
inc
(bad)
popa
cmp
(bad)
(bad)
call
pop
and
cli
pop
or
cmp
(bad)
(bad)
inc
pop
push
or
pop
and
and
jp
jno
cmp
std
(bad)
inc
outs
pop
push
or
xchg
sub
and
adc
and
sub
aad
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
cmp
add
jle
add
add
or
add
or
cmp
add
movs
add
add
or
pop
and
std
cli
out
pop
and
cmp
(bad)
inc
outs
push
push
or
popa
(bad)
mov
and
push
lods
add
std
(bad)
inc
sub
add
xor
add
add
adc
and
mov
pop
and
jo
popa
adc
and
sahf
out
and
cmps
in
and
pop
inc
or
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
pop
and
or
and
popa
sub
add
sbb
adc
and
jo
mov
sub
popa
sub
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
mov
clc
pop
and
mov
popa
cmp
(bad)
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
add
or
pop
and
dec
add
and
cmp
(bad)
(bad)
jmp
cmp
add
jle
add
add
or
add
or
cmp
add
movs
add
add
or
pop
and
fs
and
push
and
popa
cmp
(bad)
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
and
mov
(bad)
(bad)
inc
outs
pop
push
or
imul
test
jle
out
and
(bad)
inc
outs
sbb
or
aas
fist
and
jno
adc
pop
dec
adc
cmp
push
push
or
cmps
into
cmp
and
rcr
addr16
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
sbb
aaa
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
pop
sahf
pop
and
pushw
popa
cmp
pop
push
or
add
adc
adc
and
cmps
jnp
pop
and
and
popa
cmp
sub
add
xor
add
add
add
add
adc
and
int3
xchg
mov
adc
and
add
and
and
pop
inc
adc
add
stos
(bad)
(bad)
call
add
add
add
add
add
add
add
mov
add
sub
add
cwde
add
add
add
ins
add
add
add
(bad)
add
add
add
add
jb
add
add
(bad)
(bad)
(bad)
aas
pop
adc
adc
and
aas
pop
and
push
nop
push
popa
sub
xor
and
sub
and
cmp
(bad)
inc
pop
push
or
pop
and
outs
stc
mov
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
add
or
push
mov
or
pop
and
and
push
(bad)
(bad)
inc
outs
pop
push
or
stos
nop
ins
mov
sub
and
popa
les
(bad)
call
pop
and
adc
aaa
or
add
(bad)
call
add
add
sub
aaa
add
or
add
or
push
adc
and
and
mov
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
adc
xchg
(bad)
inc
sbb
add
outs
sbb
or
sub
sub
and
outs
and
pop
fild
pop
popa
cmp
(bad)
call
add
adc
adc
and
and
or
inc
(bad)
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
cwde
stos
scas
pop
and
pop
pop
or
(bad)
call
lea
add
sbb
push
mov
imul
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
call
ret
dec
popa
cmp
(bad)
jmp
cmp
add
jle
add
add
or
add
or
cmp
add
movs
add
add
or
pop
and
and
test
cmp
(bad)
inc
sub
add
xor
add
add
add
add
adc
and
xor
pop
and
mov
add
add
retf
sub
sahf
and
mov
adc
pop
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
dec
add
add
add
add
add
add
add
cmp
add
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
sbb
aaa
add
or
add
or
push
adc
and
and
imul
cmp
(bad)
(bad)
inc
outs
pop
push
or
xchg
lahf
mov
push
stc
sub
and
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
mov
add
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
adc
and
or
mov
mov
(bad)
(bad)
inc
sbb
add
outs
sbb
or
inc
mov
push
and
adc
and
popa
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
ret
pop
and
cmp
(bad)
inc
pop
push
or
pop
and
and
mov
dec
(bad)
(bad)
call
pop
and
test
push
xor
xor
push
movs
add
add
or
pop
and
mov
lods
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
and
or
fsub
(bad)
std
(bad)
inc
outs
push
push
or
outs
mov
push
and
mov
(bad)
dec
push
mov
or
pop
and
cmp
and
cmp
cmp
add
jle
add
add
or
add
or
cmp
add
movs
add
add
or
pop
and
lods
add
pop
lods
ja
popa
cmp
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
add
or
pop
and
and
or
mov
(bad)
inc
sub
add
adc
or
mov
add
add
sti
sahf
imul
mov
add
pop
push
or
int
leave
loopne
fnsave
mov
and
pop
inc
sldt
add
add
mov
add
add
add
bound
add
cmp
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
sub
aaa
add
or
add
or
push
adc
and
and
popf
bound
xchg
push
mov
or
pop
and
and
imul
inc
outs
sbb
or
sti
shr
mov
pop
xchg
and
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
dec
jo
pop
and
cmp
(bad)
(bad)
jmp
cmp
add
jle
add
add
or
add
or
cmp
add
movs
add
add
or
pop
and
and
xchg
shl
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
fidivr
jnp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
xcrypt-ctr
cmps
pop
and
daa
(bad)
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
adc
ins
(bad)
popa
cmp
std
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
add
or
pop
and
sub
test
inc
popa
cmp
std
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
outs
pop
push
or
adc
sub
and
and
xchg
and
dec
mov
pop
pop
popa
cmp
lea
add
sbb
ficom
and
cmp
outs
sbb
or
cmp
leave
and
add
mov
std
(bad)
call
pop
and
and
mov
push
std
(bad)
inc
sub
adc
pop
add
add
add
and
nop
add
or
lock
add
lea
add
and
add
xor
and
leave
mov
or
and
add
mov
add
in
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
push
add
add
pop
pop
or
xchg
or
or
or
jge
cmps
mov
and
(bad)
clc
punpcklwd
xor
(bad)
call
adc
adc
movs
push
sbb
enter
popa
cmp
(bad)
(bad)
call
or
adc
or
icebp
jle
xchg
lods
enter
cmp
(bad)
call
or
and
add
sub
add
add
add
cmp
inc
sub
add
jae
add
or
add
or
or
ins
movs
imul
inc
aaa
xchg
popa
cmp
(bad)
(bad)
call
or
(bad)
sub
int3
pop
and
jo
push
popa
cmp
adc
adc
adc
scas
(bad)
jmp
lods
jmp
popa
cmp
pop
pop
or
pop
pop
or
popa
sahf
adc
mov
(bad)
pop
and
or
popa
cmp
(bad)
call
or
push
and
adc
push
rcr
pop
pop
adc
adc
pop
adc
adc
adc
and
adc
pop
sbb
or
or
and
add
or
data16
add
or
pop
in
mov
and
(bad)
call
or
adc
or
das
mov
push
and
pop
test
pop
(bad)
(bad)
call
or
sub
push
inc
pop
and
cmp
std
(bad)
call
add
add
add
xlat
pop
and
leave
stc
jge
cmp
std
(bad)
call
pop
pop
or
pop
pop
or
popa
sahf
adc
cmps
push
xlat
pop
pop
and
enter
cmp
adc
and
stos
std
(bad)
call
pop
pop
or
pop
pop
or
popa
sahf
adc
outs
mov
pop
pop
and
xor
cmp
add
or
sub
sub
and
arpl
xchg
and
(bad)
call
pop
pop
or
pop
pop
or
or
or
popa
sahf
adc
je
call
add
dec
std
(bad)
inc
sbb
lea
add
adc
adc
and
push
lds
mov
icebp
mov
(bad)
call
pop
sbb
or
pop
push
adc
push
xchg
or
xchg
popa
sahf
adc
mov
pop
icebp
pop
and
xor
add
(bad)
dec
or
or
or
sbb
or
lahf
cmp
cld
(bad)
call
adc
adc
call
(bad)
shl
cmp
cld
(bad)
dec
adc
sahf
adc
pop
adc
or
dec
mov
pop
pop
and
cmp
pop
push
adc
push
xchg
or
xchg
popa
sahf
adc
pop
adc
pop
xchg
or
xchg
popa
sahf
adc
or
popa
jbe
and
(bad)
cmp
pop
adc
or
js
cli
shl
lock
mov
cmp
(bad)
call
pop
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
and
sub
and
sub
cmp
(bad)
call
pop
adc
xchg
adc
adc
adc
and
adc
rcr
cmp
or
pop
adc
adc
(bad)
xchg
mov
mov
add
(bad)
call
adc
or
js
or
adc
out
rcl
pop
and
cmp
sti
(bad)
dec
or
sbb
adc
push
stc
lahf
push
pop
and
cmp
sti
(bad)
call
or
pop
adc
adc
inc
mov
ret
frstor
lods
sti
(bad)
call
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
adc
idiv
icebp
gs
and
adc
popa
cmp
pop
sbb
pop
sbb
sahf
adc
jns
in
pop
and
loope
out
cmp
call
pop
adc
pop
adc
sahf
and
push
sti
(bad)
call
pop
pop
movups
pop
setne
pop
setne
adc
pop
dec
xchg
and
aaa
fisub
xor
(bad)
call
adc
and
sub
and
cmp
sti
(bad)
call
pop
sbb
pop
sbb
or
and
jb
pop
and
cmp
cli
(bad)
jmp
add
xor
push
add
add
add
adc
add
add
inc
add
or
outs
inc
add
or
inc
add
or
and
outs
ret
and
test
out
and
add
add
loopne
(bad)
inc
add
add
add
add
adc
add
push
and
and
lahf
das
sbb
into
adc
adc
add
or
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
adc
jnp
add
add
or
add
or
jnp
add
add
inc
add
add
and
aam
and
leave
jl
and
inc
or
add
sub
add
jnp
add
xchg
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
cmp
add
add
add
add
add
add
xor
and
push
and
inc
mov
and
cwde
mov
pop
popa
sub
add
add
bound
jnp
add
add
xor
add
shl
or
add
and
add
bound
add
add
and
xlat
jecxz
pop
and
test
(bad)
(bad)
inc
and
add
add
add
add
add
add
sbb
add
and
and
std
popa
cmp
jnp
add
add
add
add
aaa
or
push
call
out
inc
lock
nop
test
add
(bad)
inc
and
add
pop
jge
add
add
and
add
pop
jge
add
add
je
and
cmp
(bad)
(bad)
call
sub
fstp
(bad)
(bad)
inc
and
add
jnp
add
add
fs
jge
add
add
and
push
call
adc
daa
popa
cmp
and
add
bound
add
add
and
pop
clc
addr16
and
cmp
push
jge
add
add
and
add
mov
add
(bad)
inc
add
add
add
bound
jnp
add
add
xor
add
shl
or
add
and
test
and
and
cmp
(bad)
call
sub
adc
push
add
add
add
add
adc
add
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
add
add
adc
or
js
pop
or
jns
movs
pop
popa
and
push
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
pop
push
pop
pop
or
and
and
sub
add
add
add
loopne
add
add
sub
add
push
and
ja
push
stos
pop
and
js
pop
and
leave
xchg
push
popa
sub
pop
add
add
pop
pop
bound
or
jecxz
(bad)
sub
mov
cmp
(bad)
jmp
adc
push
add
add
adc
or
jnp
add
add
and
jp
cmp
ret
and
add
(bad)
(bad)
call
add
add
add
add
add
cmp
add
sub
push
xor
and
dec
mov
and
pop
push
and
pop
bound
jnp
add
add
loopne
add
add
add
sub
add
pop
or
pop
pop
or
pop
outs
jmp
sub
fstp
inc
mov
sub
add
add
pop
pop
bound
adc
push
add
add
add
add
adc
or
or
jp
aas
xchg
and
test
add
or
or
add
add
add
add
add
add
add
add
pop
add
add
(bad)
(bad)
inc
test
add
push
or
pop
or
pop
pop
pop
bound
adc
push
movs
xor
xor
pop
pop
or
add
mov
sub
sbb
sub
adc
in
std
inc
dec
pop
and
sub
mov
add
scas
inc
mov
or
(bad)
call
or
add
push
jns
cmp
lods
mov
pop
(bad)
(bad)
dec
add
add
add
or
dec
idiv
and
xchg
push
and
(bad)
inc
jnp
add
add
loopne
add
add
add
sub
add
or
mov
inc
sub
add
adc
push
add
add
add
add
adc
or
pop
xchg
cmp
and
ins
nop
in
popa
and
inc
or
add
retf
(bad)
(bad)
call
add
add
add
add
dec
add
add
add
add
pop
add
add
push
pop
loopne
add
add
add
sub
add
or
and
loope
sub
and
sub
and
sub
and
cmps
ret
push
pop
and
sub
adc
ds
sti
pop
and
stos
add
popa
cmp
(bad)
inc
or
pop
pop
pop
bound
or
pop
or
add
in
mov
pop
and
cmp
(bad)
call
or
add
push
jnp
mov
and
cmp
(bad)
inc
sub
add
adc
add
add
add
adc
add
add
add
div
mov
xchg
sbb
or
pop
inc
or
add
int3
(bad)
(bad)
inc
add
add
add
adc
add
dec
add
add
add
add
add
cmp
and
fiadd
pop
pop
and
sub
add
add
bound
jnp
add
add
xor
add
shl
or
add
fstp
jge
fwait
push
pop
pop
or
and
and
cmp
popa
sub
and
sub
and
push
and
(bad)
inc
push
jge
add
add
and
and
cmp
(bad)
inc
adc
add
or
and
je
fistp
dec
cmp
mov
(bad)
jmp
add
add
xor
or
add
add
add
add
sub
xor
add
add
adc
push
and
xchg
push
xchg
and
cwde
lods
popa
and
add
add
xor
add
add
add
fdivr
(bad)
call
add
sub
add
add
add
bound
jnp
add
add
xor
add
shl
or
add
and
add
bound
add
add
mov
scas
add
add
add
add
add
xor
and
xchg
push
xchg
and
push
mov
and
add
xor
add
add
or
add
add
add
add
add
add
add
and
jno
jo
gs
adc
or
add
data16
add
add
add
add
mov
add
add
add
add
add
rol
add
cmp
add
add
push
bound
jnp
add
add
xor
add
shl
push
push
bound
adc
je
and
jl
call
pop
adc
pusha
or
add
adc
and
or
pop
or
and
call
or
add
jle
and
cmp
(bad)
inc
and
add
add
or
xchg
sub
and
or
adc
sbb
cmp
(bad)
(bad)
inc
or
push
and
scas
or
popa
cmp
(bad)
(bad)
inc
push
adc
pop
pop
pop
or
add
jmp
fwait
arpl
pop
(bad)
(bad)
inc
pop
or
push
pop
pop
pop
adc
inc
dec
push
pop
cmp
(bad)
(bad)
dec
push
xor
and
cmp
push
and
and
and
(bad)
inc
push
jge
add
add
pop
jge
add
add
sub
add
xor
add
add
add
add
adc
sub
add
sub
adc
add
jmp
add
or
add
add
rol
add
lea
add
add
add
add
and
add
add
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
pop
jb
lea
add
add
add
add
sbb
lea
add
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
sbb
add
push
jge
add
add
sub
add
add
add
or
sbb
jnp
add
add
pop
add
add
sub
add
add
push
pop
pop
or
push
push
fild
add
xor
add
add
adc
jnp
add
add
cmp
xchg
shr
add
xchg
pop
popa
and
add
add
add
add
add
add
add
add
fdivr
(bad)
jmp
data16
jge
add
add
and
and
inc
loopne
nop
popa
sub
add
add
add
outs
dec
add
push
pop
and
and
add
popa
sub
add
add
sub
or
add
add
jnp
add
add
add
add
sub
or
pop
and
sub
dec
mov
jne
(bad)
jmp
add
add
xor
add
add
adc
jnp
add
add
add
inc
add
push
sub
add
xor
add
add
adc
add
pop
pop
bound
and
fstp
and
and
add
add
sbb
add
add
add
add
(bad)
(bad)
jmp
add
add
add
outs
aas
add
push
pop
and
pop
jns
pop
and
les
jnp
add
add
outs
aas
add
push
pop
and
cmp
and
in
sub
jge
add
add
add
add
xor
add
jnp
add
add
outs
xor
add
add
add
add
add
add
add
dec
add
push
and
jmp
and
mov
and
inc
pop
add
add
add
in
add
xchg
add
add
add
xor
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
inc
add
add
add
test
add
nop
add
add
cmp
jnp
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
or
push
das
cmp
into
dec
cld
sahf
popa
cmp
(bad)
call
or
sub
cmp
(bad)
call
or
and
and
lds
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
or
ja
fwait
push
pop
and
mov
popa
cmp
or
and
inc
inc
pop
and
inc
and
popa
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
cmp
ss
(bad)
(bad)
inc
pop
jb
or
add
sub
and
jmp
enter
push
pop
or
or
xchg
xchg
xchg
sub
frstor
and
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
push
jle
xchg
(bad)
(bad)
dec
and
(bad)
pop
and
cmp
jnp
add
add
inc
add
push
or
jle
fist
and
fadd
(bad)
(bad)
inc
pop
pop
or
and
mov
cmp
movs
cmp
in
popa
cmp
(bad)
inc
sbb
pop
or
jnp
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
pop
pop
pop
or
(bad)
cmp
cmp
(bad)
(bad)
dec
and
loop
and
xor
jmp
add
(bad)
call
or
and
and
hlt
mov
popa
cmp
std
(bad)
dec
and
mov
jmp
std
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
or
or
scas
scas
pop
and
push
jb
popa
cmp
jnp
add
add
inc
add
push
or
sub
sar
and
inc
mov
popa
cmp
add
add
add
or
sbb
sbb
and
(bad)
je
cmp
pop
pop
or
and
fistp
and
adc
xor
push
(bad)
inc
sbb
and
mov
jle
sub
and
mov
push
std
(bad)
inc
jnp
add
add
inc
add
push
add
add
add
push
sub
xor
add
add
adc
add
cmp
add
and
push
idiv
and
std
adc
popa
and
pop
inc
xor
add
ret
add
add
add
add
dec
add
add
jo
add
xchg
add
add
push
add
add
add
jno
add
cmc
add
add
add
add
add
sub
add
jbe
add
sahf
push
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
fld
add
stc
add
add
add
clc
add
add
add
push
push
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sbb
add
les
add
xor
add
(bad)
(bad)
inc
add
add
cdq
push
add
pop
or
add
add
add
jnp
add
add
or
add
push
pop
adc
adc
sub
add
add
add
add
or
add
push
loopne
add
add
add
add
add
das
add
push
adc
or
stos
pop
(bad)
lock
xor
adc
and
enterw
cmp
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
sub
add
sub
pop
xor
aaa
pop
cmp
inc
or
mov
cmp
(bad)
call
add
pop
add
push
adc
and
and
cmp
inc
jnp
add
add
adc
outs
push
add
push
adc
adc
sar
cmp
(bad)
call
or
enter
and
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
sub
add
sub
lea
fwait
inc
cdq
(bad)
and
(bad)
inc
jnp
add
add
or
add
push
adc
sub
add
and
aad
(bad)
inc
add
add
add
or
repz
add
cli
lods
ds
pop
add
and
cmp
add
or
adc
dec
stos
sbb
dec
adc
mov
into
cmp
pop
and
adc
lods
popa
cmp
or
or
mov
or
rcl
popa
cmp
(bad)
call
add
add
add
adc
and
cdq
daa
fidivr
pop
std
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
sub
add
pop
or
scas
mov
xchg
and
lea
es
(bad)
call
add
push
add
push
add
add
add
jnp
add
add
push
outs
inc
add
push
adc
adc
and
and
idiv
(bad)
inc
jnp
add
add
jnp
add
add
add
inc
add
push
adc
and
or
cmp
cld
(bad)
inc
or
or
and
cld
(bad)
inc
adc
jb
ret
and
mov
cmp
jnp
add
add
jnp
add
add
add
jnp
add
add
outs
push
add
push
outs
inc
add
push
adc
adc
and
sub
js
sub
cmp
(bad)
inc
jnp
add
add
jnp
add
add
outs
push
add
push
outs
push
add
push
adc
add
jne
ret
pop
and
sbb
(bad)
inc
cld
(bad)
dec
adc
mov
(bad)
sub
ss
lea
cmp
cld
(bad)
dec
adc
or
(bad)
cmp
cld
(bad)
call
add
and
repnz
mov
leave
and
(bad)
inc
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
sub
add
adc
and
scas
aam
pop
and
fs
cmp
sti
(bad)
call
add
and
repnz
and
fstp
cmp
push
aam
cwde
pop
popa
cmp
mov
cli
mov
mov
das
popa
cmp
mov
fdiv
sbb
aad
popa
cmp
add
add
add
push
sbb
xor
bound
and
ins
sti
(bad)
call
mov
(bad)
clc
sub
jmp
cmp
(bad)
inc
add
add
add
adc
jnp
add
add
push
sub
add
push
pop
or
mov
dec
mov
adc
popa
cmp
sti
(bad)
inc
jnp
add
add
push
add
push
and
xor
cmp
or
adc
sbb
or
push
pop
pop
pop
bound
adc
and
and
movs
in
popa
cmp
cli
(bad)
inc
outs
adc
sbb
and
ds
(bad)
and
(bad)
dec
or
repz
cli
(bad)
call
mov
popa
fistp
fwait
mov
cli
(bad)
call
add
add
jmp
pop
and
dec
and
call
and
push
mov
inc
jnp
add
add
pop
outs
push
add
push
adc
and
push
rcr
ret
popa
cmp
(bad)
call
add
pop
add
push
adc
and
jne
pop
pop
and
loop
mov
(bad)
call
add
adc
adc
and
and
int3
or
popa
cmp
cli
(bad)
inc
jnp
add
add
outs
push
add
push
adc
adc
sub
add
sub
and
sub
and
ss
and
sub
jne
popa
cmp
(bad)
call
adc
push
add
aam
xchg
pop
and
cmp
stc
(bad)
call
add
add
xor
mov
cmp
stc
(bad)
inc
add
add
jnp
add
add
xor
add
pop
or
mov
mov
push
pop
and
(bad)
jb
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
sub
add
sub
and
sub
and
add
dec
and
and
pop
popa
cmp
inc
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
sub
add
sub
cli
jo
sub
and
sub
adc
and
xchg
imul
(bad)
inc
jnp
add
add
jnp
add
add
or
add
push
sbb
or
sub
mov
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
sub
add
sub
and
pop
mov
sub
and
es
clc
(bad)
dec
add
push
adc
and
and
and
and
clc
(bad)
call
add
push
add
push
adc
and
pop
jge
pop
and
pop
push
mov
(bad)
call
or
and
arpl
stc
jne
cmps
and
inc
jge
scas
pop
popa
cmp
jnp
add
add
dec
add
push
add
add
add
xor
add
sub
adc
push
add
add
sldt
adc
push
xchg
pop
or
add
xchg
pop
or
pop
sbb
and
test
out
stc
dec
popa
and
pop
inc
or
add
pop
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
mov
add
adc
and
or
and
adc
push
and
and
ins
mov
push
adc
xlat
pop
xchg
pop
and
push
sbb
xchg
add
pop
adc
push
pop
pop
pop
pop
bound
add
xchg
cmps
or
cmp
(bad)
call
add
dec
mov
push
and
aam
and
(bad)
inc
adc
cmp
add
add
push
sub
add
push
adc
and
adc
pop
and
cmp
sbb
adc
and
and
sub
popa
cmp
(bad)
(bad)
call
push
and
pusha
xchg
xlat
pop
and
cmp
(bad)
(bad)
inc
or
cmp
add
sub
xor
add
add
add
adc
sbb
add
sbb
and
pop
cmp
bound
pop
popa
and
add
add
loopne
(bad)
call
add
add
add
add
adc
sub
and
sub
in
and
sub
sbb
add
adc
add
fwait
add
add
add
adc
jnp
add
add
and
out
push
cmp
push
popa
and
add
add
add
add
fdivr
(bad)
jmp
add
add
add
bound
add
or
mov
and
sbb
sub
add
add
add
loopne
add
add
sbb
add
push
add
jnp
add
add
loopne
add
add
sbb
add
push
add
pop
pop
or
mov
mov
and
pop
cmp
stos
icebp
dec
xor
jns
(bad)
inc
add
add
add
add
xor
add
add
or
add
add
add
sub
add
and
ret
xor
or
or
or
add
jge
add
pusha
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
mov
pop
pop
or
and
mov
cmp
add
add
sub
add
pop
and
push
sbb
jl
inc
in
sub
push
shr
mov
cwde
pop
popa
sub
add
add
push
pop
and
jmp
je
mov
(bad)
inc
add
add
add
or
jp
idiv
fsub
jecxz
cmp
(bad)
inc
and
adc
in
jmp
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
and
(bad)
(bad)
jmp
add
adc
add
add
add
adc
jl
add
add
sub
add
cmp
add
add
jp
dec
sub
sbb
or
or
or
add
call
add
(bad)
(bad)
inc
add
add
add
pop
add
add
add
add
mov
and
jbe
mov
and
sub
add
add
loopne
add
add
add
das
add
push
pop
or
and
pop
and
pop
and
inc
sbb
sub
add
loopne
add
add
add
das
add
push
sub
and
mov
pop
and
adc
popa
cmp
(bad)
inc
push
pop
or
xor
jno
pop
(bad)
(bad)
inc
add
add
sub
add
push
pop
or
and
mov
loop
daa
popa
cmp
(bad)
(bad)
call
or
in
jp
cmp
(bad)
(bad)
inc
jl
add
add
sub
add
sub
and
int3
jmp
and
mov
and
jnp
outs
pop
popa
cmp
(bad)
(bad)
inc
sub
xor
inc
add
add
add
adc
pop
adc
lea
add
add
add
add
pop
adc
lea
add
add
add
add
jl
add
add
adc
add
add
adc
add
jae
add
push
jge
add
add
sub
add
sub
adc
push
add
add
add
add
adc
jnp
add
add
test
cs
dec
mov
xchg
popa
and
inc
or
add
out
add
add
add
add
add
add
(bad)
(bad)
call
add
test
add
add
add
add
jmp
jnp
add
add
xor
and
sub
and
jmp
and
mov
mov
add
loopne
or
add
jge
add
add
or
and
shr
push
ret
popa
sub
loope
add
outs
xor
(bad)
inc
push
aaa
or
sbb
sub
and
xor
and
(bad)
inc
add
add
add
pop
add
pop
pop
bound
pop
jge
add
add
add
and
add
add
add
jnp
add
add
pop
pop
pop
bound
and
lea
(bad)
inc
jnp
add
add
xor
and
ss
sub
and
or
inc
xor
(bad)
(bad)
(bad)
inc
jnp
add
add
loopne
or
add
sub
add
pop
pop
pop
or
rol
(bad)
cmp
(bad)
(bad)
jmp
add
xor
add
add
adc
add
add
add
jnp
add
add
pop
pop
pop
bound
and
mov
mov
popa
and
push
add
add
add
add
add
add
add
push
add
add
(bad)
(bad)
call
add
add
push
push
or
and
mov
pop
and
sub
add
add
add
loopne
or
add
sub
add
and
lods
pop
pop
pop
or
and
ret
nop
popa
sub
and
leave
adc
sub
and
sahf
leave
push
sub
add
add
add
add
adc
add
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
add
add
add
add
adc
jnp
add
add
add
sub
add
loopne
or
add
add
dec
add
push
sub
adc
push
add
add
adc
jnp
add
add
add
sub
add
loopne
or
add
add
add
dec
add
push
sub
add
adc
add
adc
add
add
add
add
add
add
lea
add
add
add
add
add
add
xor
jno
add
or
add
push
or
pusha
and
enter
imul
and
add
(bad)
(bad)
inc
add
add
add
aaa
add
add
add
add
inc
push
and
add
add
or
sar
and
es
add
add
add
pop
add
add
sub
add
push
pop
pop
or
cmc
les
and
and
icebp
enter
sub
add
adc
add
add
add
adc
or
cmp
mov
shl
or
pop
inc
add
add
fdivr
(bad)
inc
add
add
add
and
add
sub
pop
bound
jnp
add
add
loopne
add
add
add
sub
add
pusha
or
cli
mov
int3
sub
push
and
add
add
or
cwde
pop
stc
cs
int3
aam
and
out
sub
popa
sub
adc
add
add
or
(bad)
iret
cmp
mov
or
or
add
test
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
repnz
add
or
or
cmp
sub
and
sahf
dec
cmp
or
and
adc
popa
sub
adc
or
shr
mov
lea
popa
sub
retf
iret
pop
and
xchg
clc
or
jnp
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
sub
add
pusha
or
xchg
mov
(bad)
(bad)
inc
and
add
add
or
mov
int3
stos
and
iret
cmp
(bad)
(bad)
dec
and
and
sar
popa
cmp
(bad)
(bad)
inc
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
sub
add
or
pop
bound
pusha
or
and
(bad)
in
adc
test
cmp
(bad)
(bad)
inc
and
jmp
and
add
add
and
(bad)
lock
addr16
stc
and
(bad)
inc
shr
add
add
xor
pop
add
add
add
adc
jnp
add
add
cs
iret
pusha
push
adc
or
pop
inc
add
add
loopne
(bad)
inc
add
add
add
add
sbb
add
lea
add
jge
add
add
and
int
mov
fwait
es
sub
add
jge
add
add
push
jge
add
add
push
jge
add
add
add
add
xor
arpl
add
add
add
add
dec
add
push
add
jge
add
add
sub
jmp
mov
and
add
add
fdivr
(bad)
inc
add
add
add
add
add
add
sub
push
jge
add
add
and
clc
hlt
pop
and
jae
popa
sub
add
jge
add
add
and
aaa
xlat
mov
popa
sub
pop
add
add
add
add
add
push
add
push
and
xor
in
popa
and
add
add
loopne
(bad)
(bad)
cmp
add
add
add
sub
add
add
add
add
imul
add
add
add
add
add
imul
push
and
shl
and
inc
neg
popa
sub
adc
push
add
add
add
add
adc
jnp
add
add
jnp
add
add
or
(bad)
pop
push
lock
mov
or
inc
push
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
sub
sub
and
and
jb
sub
and
loopne
and
xor
pop
popa
sub
add
add
and
and
mov
xlat
popa
sub
add
jnp
add
add
jnp
add
add
outs
inc
add
or
jnp
add
add
jnp
add
add
or
and
hlt
xlat
and
pop
mov
and
(bad)
jmp
pop
and
mov
pop
and
gs
popa
cmp
(bad)
inc
add
add
add
sub
add
adc
or
dec
add
add
add
adc
jnp
add
add
pop
pop
pop
or
add
add
add
inc
and
ja
stos
push
popa
and
inc
or
add
iret
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
hlt
add
add
xor
cmp
push
and
jbe
imul
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
and
out
fbstp
cmp
(bad)
inc
add
add
add
or
xlat
push
push
and
inc
cmp
cmp
(bad)
inc
add
add
add
or
and
(bad)
cmp
popa
cmp
(bad)
dec
and
and
cmp
(bad)
(bad)
inc
pop
adc
and
adc
cmp
(bad)
(bad)
inc
sub
add
or
mov
and
ret
popa
cmp
(bad)
(bad)
call
or
and
inc
loopne
pop
popa
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
or
inc
mov
and
pop
shl
cmc
xchg
pop
popa
cmp
(bad)
(bad)
jmp
add
xor
add
add
or
add
add
add
add
and
add
or
pop
jge
add
add
loopne
pushf
add
add
add
jnp
add
add
aaa
and
ja
mov
pop
inc
add
add
pop
add
add
add
add
(bad)
(bad)
jmp
adc
add
pop
and
call
ds
fs
popa
sub
sub
xor
pop
add
add
add
adc
jnp
add
add
pop
pop
pop
or
add
add
add
cmp
cdq
and
xor
arpl
or
pop
inc
add
add
loopne
(bad)
inc
add
add
add
add
sbb
add
add
add
or
and
cdq
mov
pop
and
hlt
dec
and
add
add
add
loopne
sub
xor
or
add
add
add
add
jge
add
add
adc
add
add
add
adc
jnp
add
add
xor
and
cld
hlt
and
and
push
add
add
add
add
add
add
sbb
add
aam
(bad)
push
add
add
bound
push
jge
add
add
and
scas
pop
mov
aaa
sub
mov
and
add
pop
jge
add
add
push
and
cmc
fld
and
sub
add
or
and
jmp
and
sub
ss
mov
xchg
or
(bad)
inc
and
add
pop
jge
add
add
adc
add
add
add
adc
add
add
add
aaa
add
or
add
add
add
add
xor
add
add
adc
add
add
add
aaa
add
or
add
jge
add
add
add
add
xor
add
add
adc
add
add
add
aaa
add
or
add
or
add
add
add
adc
add
or
add
add
add
add
add
add
inc
xor
add
add
add
add
adc
sub
add
sub
adc
add
add
add
adc
jnp
add
add
and
jmp
push
mov
or
pop
inc
add
add
fdivr
(bad)
inc
add
add
add
adc
add
sub
and
cmp
pop
and
jo
popf
popa
sub
add
jge
add
add
and
cmp
lock
add
sub
sub
add
sub
add
and
mov
jae
add
add
sbb
pop
add
push
or
push
sub
add
and
xchg
sub
adc
add
adc
add
add
add
jae
add
push
and
push
sub
add
sub
add
xor
or
add
add
add
add
jae
add
or
adc
add
or
add
add
add
add
sub
add
sub
xor
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
adc
outs
dec
add
or
add
xor
popa
add
add
add
adc
add
add
push
and
leave
push
mov
sbb
add
add
loopne
(bad)
inc
add
add
add
sub
and
add
add
ror
add
add
add
push
sub
add
sub
add
sub
add
and
and
sub
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
xor
add
add
xor
add
add
add
add
adc
outs
dec
add
or
add
xor
or
add
add
add
add
jae
add
or
adc
add
push
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
sub
add
sub
adc
add
adc
add
adc
add
push
sub
add
je
add
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
sub
adc
add
or
add
adc
sub
add
add
outs
add
push
sub
add
adc
add
add
add
add
adc
jnp
add
add
and
mov
repnz
and
add
add
adc
add
xor
add
fdivr
(bad)
inc
add
add
das
sub
and
fistp
fs
mov
pop
jge
add
add
fs
pop
mov
add
add
sbb
jno
add
or
jns
add
mov
push
sub
add
sub
add
adc
add
or
add
add
add
add
jge
add
add
adc
add
or
add
adc
sub
add
add
je
add
sub
add
adc
add
js
add
adc
add
add
add
add
dec
and
fistp
inc
add
or
pop
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
sub
and
scas
jle
sub
add
sub
sub
add
or
and
push
leave
pop
and
add
mov
add
add
push
sti
and
lods
sub
and
and
sbb
popf
add
sub
add
sub
xor
add
add
adc
add
jns
add
sub
add
adc
add
or
add
add
add
add
jge
add
add
adc
add
add
add
adc
add
push
add
or
add
add
xor
add
add
add
add
adc
sub
add
and
add
dec
and
and
add
add
pop
add
add
add
add
(bad)
(bad)
jmp
adc
add
push
and
and
sub
sub
add
xor
add
add
add
adc
jnp
add
add
and
std
cdq
and
in
or
popa
and
add
add
adc
add
add
add
fdivr
(bad)
push
add
add
das
sub
and
and
sub
add
jge
add
add
and
outs
cld
sub
add
sbb
jge
add
or
ficomp
add
sub
add
sub
add
adc
add
dec
add
add
add
adc
pop
xor
and
jge
and
xor
inc
add
add
loopne
(bad)
inc
add
add
add
add
sbb
add
sbb
add
jge
add
add
push
and
sub
ins
pop
and
bound
popa
sub
add
jge
add
add
add
adc
add
add
add
add
adc
sub
add
and
test
sahf
popa
and
add
add
loopne
(bad)
inc
add
add
add
add
adc
add
push
and
sbb
xchg
call
add
xor
js
add
adc
add
add
add
add
cmp
cmc
stos
pop
lahf
and
cs
or
pop
inc
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
inc
sub
and
and
mov
retf
add
jge
add
add
mov
mov
sub
add
sub
sub
add
sub
and
and
aam
mov
adc
add
or
add
add
add
add
jge
add
add
adc
add
or
add
adc
sub
add
add
test
add
sub
add
adc
add
js
add
adc
add
add
add
add
cmp
jl
jae
and
out
fbstp
popa
and
add
(bad)
(bad)
inc
add
adc
add
add
add
xor
add
sub
pop
and
popa
stc
pop
and
push
fisttp
pop
jge
add
add
(bad)
out
xor
add
sbb
xchg
add
or
das
dec
mov
sub
add
pop
and
ret
pop
popa
sub
add
add
add
add
adc
pop
jge
add
add
adc
add
adc
add
add
add
add
add
add
xchg
add
push
movs
jb
add
sub
add
adc
add
add
add
adc
jle
add
add
mov
add
sub
add
adc
add
add
add
adc
sub
add
and
inc
ss
jmp
pop
inc
add
add
fdivr
(bad)
push
add
add
add
sub
add
push
mov
add
jae
add
or
xchg
add
push
add
inc
lea
add
jae
add
or
xchg
add
push
push
and
and
sub
push
add
push
mov
add
jae
add
or
xchg
add
push
push
and
pop
fcmove
pop
and
sub
xor
add
add
add
add
adc
sub
add
xor
add
add
adc
sub
add
cwde
add
push
or
mov
ret
and
scas
or
pop
pop
pop
inc
pop
add
add
add
add
sub
add
lock
add
add
add
add
add
add
lds
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
mov
add
bound
add
cmp
sub
or
sub
and
push
adc
and
add
cmp
(bad)
inc
sub
adc
and
and
aaa
popa
cmp
(bad)
call
adc
adc
and
jl
pop
and
push
fdivr
(bad)
inc
sub
pop
or
adc
pushf
dec
les
imul
sbb
pop
sub
adc
and
(bad)
in
pop
and
clc
cwde
popa
cmp
(bad)
(bad)
inc
sub
push
sub
and
pop
and
loopne
cmp
(bad)
(bad)
call
or
adc
add
popa
cmp
(bad)
(bad)
call
push
add
xchg
add
push
sub
and
sub
and
pop
mov
(bad)
jmp
adc
adc
add
adc
and
das
inc
sbb
je
add
(bad)
(bad)
inc
sub
or
cdq
add
push
jne
add
add
call
add
and
(bad)
(bad)
inc
sub
xor
xor
and
jbe
fwait
and
clc
mov
xor
(bad)
call
push
pop
pop
adc
and
and
(bad)
call
add
adc
and
add
pop
and
cmp
(bad)
(bad)
inc
sub
ins
pop
or
jae
nop
pop
and
sbb
jmp
(bad)
call
adc
cmp
add
add
adc
dec
shl
pop
jno
popa
cmp
std
(bad)
push
add
or
add
adc
in
cmp
pop
pop
adc
mov
cmp
mov
sub
pop
sub
or
adc
imul
test
std
(bad)
call
pop
sub
or
or
mov
and
mov
adc
fld
cmp
(bad)
call
pop
sub
aaa
or
out
add
and
mov
adc
and
pop
scas
stc
pop
popa
cmp
or
pushf
enter
sub
and
jnp
jmp
xor
popa
cmp
std
(bad)
call
add
push
add
or
or
mov
and
scas
or
pop
or
or
add
ret
(bad)
cmp
add
jno
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
out
add
adc
sub
adc
adc
inc
jmp
sbb
lock
xor
test
add
or
outs
xchg
and
mov
and
or
movups
pop
or
inc
loope
cmp
loopne
fistp
adc
and
popa
cmp
(bad)
call
or
or
push
and
pop
jns
cmp
(bad)
call
adc
or
movups
pop
adc
adc
adc
not
call
push
sub
adc
adc
xor
cmps
or
(bad)
(bad)
call
or
or
push
xchg
mul
js
and
adc
cmp
(bad)
(bad)
call
push
sub
movups
and
push
push
rcr
into
mov
popa
cmp
(bad)
(bad)
(bad)
fimul
adc
add
outs
pop
add
or
adc
xor
add
and
jns
mov
xor
adc
pop
or
inc
or
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
or
or
movs
add
push
adc
and
and
mov
mov
or
or
mov
or
mov
adc
sub
pop
stc
pop
and
cmp
call
or
sahf
add
push
adc
sub
or
adc
sbb
jle
pop
and
mov
push
(bad)
(bad)
inc
push
sub
adc
les
jns
adc
popa
cmp
(bad)
(bad)
call
or
or
movs
add
push
adc
and
fst
and
in
cmp
(bad)
(bad)
call
or
sub
pushf
add
push
aas
ds
(bad)
jmp
or
(bad)
call
or
pop
adc
and
out
(bad)
(bad)
call
add
or
add
or
adc
arpl
xchg
imul
sar
(bad)
inc
sub
or
cdq
add
push
je
add
add
or
mov
inc
repnz
add
or
pop
add
or
adc
and
movs
out
pop
and
sub
popa
cmp
add
fiadd
sub
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
adc
push
add
add
add
add
and
add
jb
add
sub
push
add
add
cmps
add
push
pop
mov
add
sub
test
cmp
add
adc
add
or
add
add
add
add
sub
or
adc
add
add
add
adc
add
pop
add
or
add
add
xor
or
add
add
add
add
sub
add
sub
xor
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
adc
sub
add
sub
adc
add
or
add
add
add
add
outs
popa
add
or
adc
add
pop
add
add
add
adc
sub
add
sub
adc
add
pop
add
add
add
adc
sub
add
sub
adc
add
or
add
add
add
add
outs
add
or
adc
add
pop
add
add
add
adc
outs
add
or
add
xor
add
add
add
add
adc
outs
data16
or
add
xor
add
add
add
add
adc
outs
add
or
add
xor
add
add
add
add
adc
sub
add
sub
adc
add
pop
add
add
add
adc
outs
imul
adc
add
pop
add
add
add
adc
outs
push
add
sub
adc
add
pop
add
add
add
adc
outs
imul
or
add
xor
or
add
add
add
add
outs
ins
add
or
adc
add
pop
add
add
add
adc
outs
ins
add
or
add
xor
or
add
add
add
add
outs
outs
add
or
adc
add
or
add
add
add
add
outs
outs
add
or
adc
add
or
add
add
add
add
outs
jo
add
sub
xor
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
adc
jae
add
or
add
xor
add
add
add
add
adc
add
or
add
adc
add
add
add
add
adc
sub
add
and
pop
test
das
popa
and
add
add
loopne
(bad)
inc
add
add
add
add
adc
add
push
and
rol
pop
and
adc
sub
add
xor
add
add
add
add
adc
add
add
xor
js
add
adc
add
add
add
add
pop
and
loopne
and
clc
sub
or
pop
inc
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
sub
and
and
call
retf
popa
sub
and
add
add
sbb
scas
add
push
or
and
and
mov
fsub
stos
add
jge
add
add
pop
push
loope
sub
add
push
sub
xor
add
add
adc
add
mov
add
sub
add
adc
add
pop
add
add
add
adc
pop
xor
loope
pop
shl
sub
cmps
std
popa
and
add
add
fdivr
(bad)
inc
add
add
add
add
sub
add
sub
add
jge
add
add
and
and
cmp
sub
sub
and
jmp
repz
sub
add
add
add
xor
add
add
add
add
adc
sub
add
and
js
dec
mov
and
add
add
loopne
(bad)
call
add
add
add
add
adc
add
push
and
lods
pop
pop
and
sti
rol
popa
sub
sub
add
xor
js
add
adc
add
add
add
add
push
and
xchg
cdq
adc
cmp
and
add
add
add
add
add
add
fdivr
(bad)
call
add
add
inc
sub
and
mov
fnstenv
add
sub
and
in
mov
les
bound
mov
pop
jge
add
add
stos
sub
add
sub
sub
and
push
sub
add
add
add
add
adc
add
mov
add
add
xor
or
add
add
add
add
jge
add
add
adc
add
or
add
adc
sub
add
add
mov
add
add
xor
add
add
add
adc
jnp
add
add
and
push
pusha
and
push
cmp
sbb
add
add
xor
add
add
add
fdivr
(bad)
call
add
add
das
sub
and
sahf
fwait
push
pop
and
sub
add
jge
add
add
cmp
lods
sub
add
sub
sub
and
mov
push
sub
add
add
xor
add
add
adc
add
mov
add
add
xor
or
add
add
add
add
jge
add
add
adc
add
or
add
adc
sub
add
add
rol
push
sub
add
adc
add
js
add
adc
add
add
add
add
push
and
cdq
pop
pop
and
in
and
and
add
add
add
add
add
(bad)
(bad)
call
add
add
add
sub
pop
and
cmc
test
or
sub
add
sub
add
push
pop
and
aaa
jecxz
pop
and
sub
add
add
test
add
add
sbb
les
add
or
cmp
xchg
sub
xor
add
add
adc
add
mov
push
sub
add
adc
add
or
add
add
add
add
jge
add
add
adc
add
or
add
adc
sub
add
add
enter
sub
add
adc
add
mov
add
adc
add
add
add
add
dec
and
xchg
and
sub
and
popa
and
push
add
add
add
add
add
add
add
aam
(bad)
call
add
and
add
sub
rcl
sub
sub
add
push
or
and
and
push
icebp
popa
sub
add
add
or
test
add
push
pop
and
and
pop
ret
ret
xchg
sub
and
les
mov
sub
adc
add
or
add
add
add
add
jge
add
add
adc
add
or
add
adc
sub
add
add
int
add
sub
add
adc
add
add
add
add
adc
jnp
add
add
and
sbb
and
add
add
fdivr
(bad)
call
add
add
add
add
add
add
sub
and
mov
pop
and
sub
add
jge
add
add
jne
popa
jg
add
add
sbb
iret
add
push
or
push
sub
add
push
and
test
adc
add
or
add
add
add
add
jge
add
add
adc
push
add
add
add
add
add
je
add
and
or
stc
fcom
pop
inc
add
add
pop
add
add
add
add
add
fdivr
(bad)
jmp
sub
xlat
add
push
es
and
sti
pop
and
cs
popa
sub
add
aam
add
push
and
and
mov
mov
fadd
add
add
inc
(bad)
add
push
jae
add
or
add
sub
add
adc
add
js
add
adc
add
add
add
add
dec
and
int3
dec
pop
and
jg
sub
pop
inc
add
add
add
add
add
add
add
add
fdivr
(bad)
jmp
ds
clc
jp
sub
add
sub
sub
add
push
or
and
or
mov
les
mov
add
add
inc
imul
and
dec
and
adc
popa
sub
add
push
sub
xor
add
add
adc
pop
pop
inc
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
shl
fstp
popa
and
inc
sldt
add
add
add
add
add
add
add
add
add
add
fiadd
add
cmp
add
sbb
add
mov
add
add
add
add
adc
add
sub
add
jge
add
add
cmc
xor
outs
sub
add
inc
rol
add
jae
add
or
fild
add
and
jnp
(bad)
inc
add
sub
add
jge
add
add
pop
or
inc
cmp
(bad)
jmp
push
and
pop
mov
pop
and
cmp
(bad)
inc
add
sub
add
jge
add
add
and
cmp
(bad)
inc
add
sub
add
jge
add
add
jle
bound
cmp
push
and
(bad)
cmc
pop
and
cmp
(bad)
(bad)
jmp
push
and
mov
sbb
(bad)
(bad)
(bad)
jmp
push
and
jns
sbb
dec
outs
punpcklwd
in
(bad)
(bad)
inc
add
sub
add
jge
add
add
adc
js
cmp
(bad)
(bad)
inc
add
sub
inc
add
add
and
inc
test
cmp
push
and
mov
pmulhw
lods
(bad)
(bad)
inc
and
jmp
(bad)
(bad)
inc
pop
jge
add
add
add
xor
xor
add
add
add
add
fadd
add
and
inc
cwde
sub
fld
add
sub
add
fiadd
add
add
fild
add
xor
add
loopne
add
fiadd
fiadd
sub
add
add
add
add
and
add
add
adc
add
push
add
add
add
adc
add
or
add
adc
add
push
add
add
add
adc
jns
add
sub
add
xor
or
add
add
add
add
outs
jp
add
sub
xor
add
add
add
add
adc
outs
jnp
add
sub
adc
add
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
adc
outs
jl
add
sub
adc
add
pop
add
add
add
adc
sub
add
sub
adc
add
pop
add
add
add
adc
sub
add
sub
adc
add
add
add
adc
movs
jp
add
or
or
push
or
fisub
stos
bound
int
and
inc
sldt
add
add
add
add
add
add
cmp
add
dec
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
and
add
sbb
or
inc
dec
pop
pop
and
inc
popa
sub
xor
and
push
aaa
and
or
jle
or
frstor
jl
(bad)
dec
and
and
clc
(bad)
push
(bad)
inc
push
xor
and
cmps
jmp
and
mov
cmp
(bad)
call
or
and
retf
pop
and
pop
sub
ds
(bad)
call
or
and
mov
out
outs
jle
cmp
(bad)
(bad)
call
adc
or
fistp
pop
or
cmp
popa
cmp
and
and
pusha
add
(bad)
call
or
and
jmp
or
inc
push
out
(bad)
(bad)
inc
or
or
push
push
(bad)
mov
sub
and
es
(bad)
(bad)
call
or
and
and
inc
xchg
in
popa
cmp
(bad)
(bad)
inc
or
pop
xor
and
pushf
leave
call
xor
(bad)
inc
or
pop
xor
and
sub
and
inc
test
and
(bad)
inc
mov
add
sub
add
xor
and
add
add
add
add
in
add
sub
add
push
and
xchg
sub
out
add
sub
add
push
jp
xor
add
add
add
add
adc
sub
add
sub
adc
add
pop
add
add
add
adc
outs
add
or
add
xor
add
add
add
add
adc
jae
add
or
add
xor
movs
add
add
add
add
or
mov
add
sbb
jmp
add
cmp
add
add
push
adc
cs
sbb
pop
or
or
add
add
add
add
add
add
add
loop
add
pop
add
(bad)
(bad)
(bad)
push
xor
add
sub
add
push
and
es
sub
in
add
push
jne
add
add
call
aas
sub
add
push
sub
and
gs
pop
and
arpl
in
popa
sub
push
and
push
ins
sub
in
add
push
jne
add
add
pop
and
and
cmp
inc
mov
add
push
mov
add
sub
add
push
sub
push
and
sub
cmp
in
add
push
and
icebp
sbb
add
in
add
push
jne
add
add
pop
and
jno
bound
adc
outs
cmp
adc
(bad)
inc
mov
add
pop
mov
add
sub
add
push
sub
cmp
and
ja
inc
and
(bad)
inc
mov
add
sbb
jmp
add
sub
and
sar
and
lods
cmp
(bad)
jmp
in
add
push
and
retf
js
sub
add
sub
in
add
push
jne
add
add
pop
and
and
and
cdq
lahf
xchg
dec
popa
cmp
in
add
push
and
add
add
sub
add
push
jne
add
add
add
add
xor
and
add
add
add
add
out
add
push
sub
add
push
and
add
add
sub
add
push
sub
add
push
jp
xor
or
add
add
add
add
sub
adc
add
push
add
add
add
adc
add
or
add
adc
add
or
add
add
add
add
outs
test
add
sub
xor
jmp
add
adc
movs
jl
add
or
add
aaa
cmp
clc
rcr
popa
and
or
add
data16
add
add
add
add
add
add
(bad)
(bad)
call
add
add
sahf
add
add
sbb
or
gs
cmp
or
and
cmc
add
push
sub
add
push
sub
and
ja
pop
and
enter
sub
push
sub
add
push
sub
and
sbb
sbb
add
xor
and
and
and
repz
and
(bad)
jmp
cmc
add
push
sub
add
push
sub
and
push
cvtps2pd
frstor
xor
dec
(bad)
(bad)
inc
pop
xor
and
sub
and
mov
pop
and
mov
xchg
cmp
(bad)
(bad)
jmp
cmc
add
push
sub
add
push
sub
add
adc
add
and
add
add
add
add
cli
add
push
sub
add
push
and
add
add
sub
add
push
sub
add
push
jp
xor
add
add
add
add
adc
test
add
sub
add
xor
add
add
add
add
adc
outs
xchg
add
sub
adc
add
pop
add
add
add
adc
outs
xchg
add
sub
adc
add
pop
add
add
add
adc
outs
mov
add
sub
adc
add
pop
add
add
add
adc
outs
mov
add
sub
adc
pop
add
add
adc
je
add
add
inc
add
or
add
add
add
add
outs
inc
adc
sub
and
add
add
loopne
inc
add
sub
sub
and
add
add
loopne
inc
adc
sub
and
add
add
loopne
inc
add
sub
sub
add
add
add
add
outs
inc
adc
sub
and
add
add
loopne
inc
add
sub
sub
jae
add
or
add
add
xor
add
add
add
add
adc
outs
xchg
add
or
add
xor
sub
add
pop
add
adc
cmp
add
add
mov
sub
jl
or
popa
and
inc
or
add
xchg
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
in
add
add
or
and
fdivr
and
cmp
popa
sub
cmp
xchg
add
or
push
sub
and
sub
and
or
hlt
scas
push
das
pop
popa
sub
add
or
add
add
or
and
sahf
loope
pop
and
and
push
popa
cmp
inc
icebp
sub
add
add
sub
and
out
sub
call
or
aam
aad
pop
popa
cmp
(bad)
(bad)
jmp
push
add
push
sub
add
push
sub
jmp
outs
sub
and
(bad)
call
add
xchg
add
or
add
or
iret
and
and
mov
and
mov
cmc
pop
popa
cmp
(bad)
(bad)
jmp
or
add
sub
add
push
sub
shr
es
(bad)
(bad)
call
add
xor
and
add
add
add
add
or
add
sub
add
push
and
outs
clc
sub
add
sub
or
add
sub
add
jp
xor
add
add
add
add
adc
outs
xchg
add
or
add
xor
add
add
add
add
adc
outs
xchg
add
or
add
xor
add
add
add
add
adc
xchg
add
or
add
adc
add
pop
add
add
add
adc
jae
add
or
add
xor
add
add
add
add
adc
cwde
add
or
add
adc
add
add
add
adc
jnp
add
add
and
fisub
imul
mov
and
add
add
add
add
add
add
add
(bad)
(bad)
call
add
sub
or
xchg
(bad)
lds
rol
add
adc
and
add
or
and
pop
arpl
pop
and
mov
jl
add
add
pop
sub
add
sub
push
pop
or
mov
pushf
or
sub
and
or
pop
xor
pop
popa
sub
xor
add
add
adc
jnp
add
add
and
jmp
popa
and
push
add
add
add
add
add
pop
add
add
(bad)
(bad)
jmp
add
add
sub
jl
add
add
pop
sub
add
sub
or
adc
icebp
adc
sti
bound
mov
and
push
fbld
js
js
and
mov
sub
push
pop
int
xchg
pop
add
push
add
push
je
add
add
and
and
sub
push
popa
cmp
(bad)
jmp
adc
add
add
add
adc
sub
add
push
adc
add
jae
add
or
add
add
pop
add
push
or
add
add
add
sbb
add
add
sub
add
push
sub
add
xor
adc
add
add
add
add
add
add
sbb
add
jne
add
add
add
add
xor
add
add
adc
jle
add
add
sub
add
push
sub
add
adc
add
mov
add
sbb
add
add
add
or
sub
add
je
add
add
push
jnp
add
add
push
and
or
push
arpl
popa
and
push
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
push
(bad)
sub
pop
jb
add
jo
or
add
fwait
add
or
add
or
add
or
mov
scas
pop
push
jnp
add
add
sbb
mov
dec
push
sub
in
push
cmp
js
lea
popa
sub
add
add
popf
add
or
and
in
outs
pop
and
xor
popa
cmp
(bad)
jmp
adc
add
add
add
adc
je
add
add
and
sbb
inc
and
and
add
add
pop
add
add
add
add
(bad)
(bad)
(bad)
cmp
push
add
jge
add
add
push
sub
add
push
sub
add
push
add
jge
add
add
jnp
add
add
or
ficomp
das
and
stos
gs
and
or
movs
add
add
add
add
sahf
add
or
and
rcr
push
cmps
xor
popa
sub
adc
or
inc
add
add
add
adc
cli
dec
adc
sub
add
shl
add
sub
add
push
shl
add
add
pop
add
push
jb
add
jo
add
add
adc
push
adc
add
jae
add
or
and
add
sub
add
push
or
add
adc
add
or
add
add
add
add
sub
adc
add
or
add
add
add
add
sub
adc
add
push
add
add
add
adc
add
or
add
adc
add
or
add
add
add
add
outs
popf
add
or
adc
add
or
add
add
add
add
outs
mov
adc
add
pop
add
add
add
adc
outs
movs
add
or
add
xor
or
add
add
add
add
outs
movs
add
or
adc
add
pop
add
add
add
adc
outs
cmps
add
or
add
xor
add
add
adc
add
cmps
add
or
add
add
xor
add
add
add
add
adc
sub
add
xor
or
add
adc
jne
add
add
outs
and
add
sub
add
sbb
add
push
add
add
add
adc
add
fwait
add
or
add
sbb
aas
add
add
retf
mov
stos
xchg
jbe
popa
and
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
cmp
add
fwait
add
or
add
sbb
adc
mov
and
sub
push
outs
test
ds
add
add
add
fdivr
in
out
popa
sub
add
outs
stos
add
or
sub
call
stos
xchg
jbe
popa
and
inc
push
add
add
add
add
add
xor
add
add
add
add
add
(bad)
(bad)
jmp
arpl
outs
lods
add
or
cdq
mov
push
or
add
or
add
or
add
or
jns
ins
pop
and
jbe
sub
outs
scas
add
or
and
test
mov
sub
and
iret
jmp
lea
or
add
or
add
cmps
xchg
test
jle
scas
popa
cmp
(bad)
(bad)
fidivr
das
shl
call
in
and
inc
add
add
(bad)
(bad)
inc
add
add
add
add
push
pop
outs
pop
add
or
add
sbb
gs
pop
and
sub
sub
fsubr
add
add
adc
add
add
xchg
adc
cmp
adc
add
adc
add
add
add
add
add
add
sub
add
je
add
sbb
add
add
xor
add
add
adc
jle
add
add
sub
add
push
sub
add
adc
pop
add
add
add
add
adc
and
add
sub
push
add
sbb
sub
add
shl
add
sub
add
push
adc
push
and
add
jae
add
or
sub
add
sub
add
or
add
add
adc
add
pop
add
add
add
adc
jae
add
or
add
xor
add
add
add
add
adc
sub
add
add
add
dec
inc
add
add
add
add
adc
add
jbe
xor
xor
xor
cmp
add
add
add
add
add
add
and
add
add
xchg
add
and
jb
outs
addr16
add
add
add
add
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
or
add
inc
ins
outs
bound
add
push
add
add
inc
push
dec
inc
add
add
add
add
add
and
jb
outs
addr16
add
add
add
add
and
outs
bound
add
add
add
add
and
push
add
add
add
inc
add
mov
or
add
add
and
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
pop
adc
add
add
add
add
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
loope
push
add
pop
loope
push
add
add
add
adc
add
add
push
add
add
add
cmp
or
xchg
inc
mov
inc
add
add
and
push
add
push
inc
push
add
add
dec
xor
dec
and
add
pop
dec
push
add
dec
add
cdq
dec
or
in
and
add
mov
push
mov
push
mov
push
add
mov
push
mov
push
mov
push
mov
push
and
add
push
es
push
add
push
add
push
push
or
xor
inc
sbb
(bad)
pop
mov
pop
push
pop
or
dec
pop
and
add
add
add
push
and
dec
push
add
push
xchg
push
inc
imul
cmps
push
mov
imul
add
ins
cmps
push
es
push
add
add
add
add
add
mov
sbb
jne
add
add
sub
add
jns
push
and
clc
jns
jp
add
add
inc
or
sbb
add
add
add
and
add
xchg
xchg
add
xchg
mov
add
xor
mov
mov
mov
mov
add
add
loope
push
add
loope
push
add
loope
push
add
add
add
mov
add
add
mov
add
add
mov
mov
add
mov
mov
mov
add
add
or
stos
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
add
xor
mov
mov
mov
push
push
add
lea
add
add
add
add
add
sbb
or
cmp
push
add
xor
mov
add
add
add
fmul
add
add
add
add
ror
add
push
add
nop
add
add
add
and
add
cmps
push
add
aaa
push
and
fst
cwde
xchg
ror
sub
add
xchg
popf
or
add
ror
and
add
xchg
xchg
leave
xchg
add
add
pop
add
add
add
add
add
push
add
sub
add
sbb
add
add
sbb
add
add
add
add
and
add
add
add
add
sub
add
add
add
add
add
add
or
add
sub
add
cmp
add
add
add
or
aas
add
sub
add
inc
add
sub
add
inc
add
sub
add
add
add
jno
cmp
add
add
adc
ins
inc
mov
cmp
add
add
add
inc
out
inc
xor
das
add
add
adc
adc
out
inc
dec
add
add
add
adc
test
add
add
adc
mov
add
add
add
add
adc
outs
dec
add
add
jp
add
adc
mov
add
add
add
add
adc
mov
add
add
rcl
dec
add
add
add
pop
add
add
add
add
pusha
add
add
add
add
dec
push
add
mov
add
arpl
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
ins
adc
add
loope
add
adc
jg
adc
add
call
add
jae
outs
xor
inc
add
add
js
outs
xor
inc
add
add
add
add
adc
add
add
add
adc
mov
jle
add
or
add
popf
jle
add
and
add
add
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
and
push
sbb
add
add
sbb
add
add
add
sbb
mov
sti
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
and
and
jp
or
add
mul
pop
add
add
fiadd
add
jmp
fiadd
add
sub
add
add
sub
add
add
sub
mov
add
cs
add
add
add
das
and
add
stos
das
fiadd
add
pop
xor
add
xchg
xor
add
add
call
xor
add
add
ss
add
sar
sub
add
dec
cmp
add
add
cmp
add
add
fiadd
add
mov
add
inc
fiadd
add
rol
add
inc
ret
add
add
add
hlt
add
add
inc
pop
add
add
inc
pop
add
add
add
inc
pop
add
add
inc
pop
add
add
inc
pop
add
add
push
sub
pop
fadd
add
rol
add
inc
pop
add
add
inc
pop
add
add
inc
pop
add
add
inc
pop
add
add
inc
pop
add
add
add
add
addr16
addr16
addr16
add
add
push
rol
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
sub
add
add
add
add
pushw
add
add
add
add
xchg
add
add
add
add
add
add
add
add
and
push
add
add
add
add
push
add
add
add
add
push
add
add
add
je
push
add
add
add
add
adc
pop
push
pop
add
add
add
add
add
add
add
pop
outs
add
add
jge
add
add
add
add
jge
add
add
add
or
add
hlt
jge
add
add
add
or
jle
add
add
add
xchg
add
loopne
push
add
add
add
add
jge
add
add
add
or
jle
add
add
add
add
jle
add
add
add
or
jle
add
add
add
inc
jle
add
add
add
or
add
add
push
add
add
add
int3
jge
add
add
add
or
ins
jle
add
add
add
int3
jge
add
add
add
push
je
add
xor
add
add
add
pusha
jge
add
add
add
cmovge
add
cmp
add
adc
mov
mov
jle
add
add
add
adc
jle
add
add
add
add
adc
pop
adc
jle
add
add
add
add
jle
add
add
add
adc
jle
add
add
add
add
push
add
add
add
add
push
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
cdq
push
add
add
add
add
cdq
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
fwait
push
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
lahf
push
add
add
add
add
add
pop
add
mov
sbb
add
add
add
mov
sbb
add
add
add
mov
add
sub
add
add
mov
add
sub
add
add
mov
add
sub
add
add
add
add
add
add
push
add
add
add
add
scas
push
add
add
add
add
scas
push
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
xor
add
add
mov
add
add
add
add
add
add
add
add
add
xor
aam
push
add
add
add
add
push
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
loopne
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
mov
add
inc
and
add
js
push
add
add
add
add
add
inc
and
add
sar
add
add
in
push
add
add
add
add
mov
xchg
push
add
add
add
mov
xchg
iret
inc
and
add
cwde
mov
xchg
add
inc
cmp
add
cld
mov
xchg
push
add
add
add
add
add
inc
cmps
add
add
mov
adc
jo
scas
add
add
mov
adc
in
inc
mov
add
hlt
mov
adc
push
add
push
add
add
add
add
mov
xchg
or
retf
add
add
push
add
add
add
add
xchg
or
add
push
add
add
add
add
add
add
fild
add
mov
push
add
add
add
add
mov
xchg
or
clc
add
add
mov
xchg
push
add
add
add
mov
xchg
sbb
cmp
add
adc
push
add
add
add
std
add
add
mov
xchg
push
add
add
add
add
add
add
inc
and
add
mov
add
add
or
add
mov
add
add
add
mov
adc
cmp
add
int3
mov
xchg
push
add
add
call
add
add
inc
and
add
ins
rol
add
add
dec
lar
test
push
add
add
add
or
push
add
add
add
dec
cmps
add
add
mov
adc
jbe
mov
or
cwde
rol
add
adc
repnz
pop
add
add
add
add
add
rol
add
out
iret
inc
and
or
jo
push
add
add
add
or
or
mov
add
add
add
mov
adc
xor
add
rol
add
xchg
push
add
add
add
push
add
add
add
inc
and
or
cwde
ret
add
loope
jno
or
or
mov
add
add
dec
cmps
add
loopne
push
add
add
add
mov
or
lods
ret
add
xchg
push
add
add
enter
add
out
iret
inc
and
or
dec
ret
push
add
add
add
or
or
mov
add
add
dec
cmps
add
add
mov
adc
push
push
mov
push
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
dec
add
add
add
add
push
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
push
outs
add
add
add
add
add
push
add
add
add
add
add
retf
push
add
add
add
push
add
add
push
add
add
add
push
xchg
adc
add
add
add
add
add
add
add
xchg
add
add
add
add
push
pushf
add
add
add
add
mov
retf
push
add
add
add
pop
xchg
add
add
add
add
xchg
add
add
add
add
pop
test
adc
add
add
add
scas
add
add
add
add
pop
xchg
add
add
add
add
scas
add
add
add
add
pop
scas
add
add
add
add
mov
adc
add
add
add
add
push
add
add
add
pop
dec
add
add
add
add
add
push
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
inc
and
pop
add
push
add
add
add
add
push
add
add
add
or
sbb
mov
add
add
cmps
add
add
mov
adc
in
pop
mov
sbb
cwde
rol
add
adc
imul
int
add
add
add
add
into
push
add
add
add
inc
and
sbb
lods
into
push
add
add
add
add
into
push
add
add
add
or
sbb
add
add
add
pusha
cmps
add
add
mov
adc
ins
popa
mov
pop
add
add
add
popa
pop
add
add
into
push
add
add
add
add
into
push
add
add
add
inc
and
pop
add
push
add
add
add
add
add
add
or
and
mov
add
add
cmps
add
add
mov
adc
out
bound
rol
add
adc
push
pop
add
add
xchg
push
add
add
add
add
add
inc
and
and
xor
push
add
add
add
add
add
add
add
or
and
add
add
add
arpl
mov
adc
js
mov
daa
add
add
add
fs
add
add
push
add
add
add
add
add
add
add
inc
and
daa
add
push
add
add
add
or
daa
add
add
add
add
mov
adc
pcmpgtd
rol
add
add
add
add
add
add
add
inc
and
sub
mov
add
add
or
sub
mov
add
add
loopne
push
add
add
add
addr16
sub
int3
rol
add
add
add
add
int3
push
add
add
add
add
int3
push
add
add
add
add
add
add
inc
and
das
add
rol
add
add
add
or
das
add
push
add
add
add
add
aam
add
add
add
push
aam
push
add
add
add
push
add
add
add
add
imul
add
add
mov
xor
call
add
add
push
add
add
aam
add
add
add
add
add
aad
add
add
add
imul
push
add
add
add
xor
xor
cmp
push
add
add
add
ins
cmp
xor
dec
aad
add
add
add
inc
add
add
push
add
add
add
outs
inc
add
add
(bad)
push
add
add
add
inc
add
add
push
add
add
add
add
xlat
push
add
add
add
push
add
add
push
add
add
add
outs
push
add
add
adc
outs
outs
pop
add
add
push
add
add
add
outs
pop
add
add
add
add
add
outs
inc
add
add
fld
add
add
add
inc
add
add
push
add
add
add
cmp
push
add
add
add
add
push
add
add
add
jno
add
fld
add
add
add
add
xlat
push
add
add
add
jb
add
xor
push
add
add
add
add
adc
(bad)
jb
add
dec
xlat
push
add
add
add
pop
add
js
push
add
add
add
outs
inc
add
jo
push
add
add
add
inc
add
or
push
add
add
add
pushf
fiadd
add
add
add
je
add
mov
push
add
add
add
add
fiadd
add
add
add
jne
add
fcomp
push
add
add
add
add
fiadd
add
add
add
jbe
add
and
push
add
add
add
add
push
add
add
add
ja
add
mov
add
add
add
add
push
add
add
add
js
add
add
push
add
add
add
mov
add
add
js
add
fild
add
add
add
outs
inc
add
fadd
add
add
add
inc
add
or
push
add
add
add
fld
add
add
add
popf
add
jge
add
add
add
jp
add
fld
add
add
add
inc
fld
add
add
add
jnp
add
fld
add
add
add
push
add
add
jl
add
xlat
push
add
add
add
xor
push
add
add
add
add
adc
xchg
jge
add
xlat
push
add
add
add
add
add
add
add
fiadd
add
add
add
mov
push
add
add
add
lock
add
add
add
adc
push
add
add
add
sub
push
add
add
add
in
fild
add
add
add
and
add
add
add
shl
push
add
add
add
add
loopne
add
add
add
add
loopne
add
add
add
add
push
add
add
add
sub
loope
add
add
add
add
add
add
or
add
adc
popf
adc
add
push
add
add
add
cmp
pop
add
push
add
add
add
add
add
add
add
test
add
add
push
add
add
add
add
push
add
add
add
test
int3
push
add
add
add
add
add
add
pushf
loope
add
add
add
mov
add
add
add
jecxz
add
add
add
add
push
add
add
add
add
add
add
add
nop
retf
add
adc
or
add
adc
mov
pusha
jge
add
add
add
add
adc
or
add
adc
std
mov
add
shl
add
add
add
add
add
xchg
inc
add
add
stos
dec
add
add
mov
add
dec
add
add
repnz
add
add
stos
dec
add
add
mov
add
add
add
add
add
add
add
add
add
add
jle
add
add
ja
add
add
jle
add
add
ja
add
add
jle
add
add
ja
add
add
jle
add
add
in
add
add
repnz
add
add
stos
dec
add
add
mov
add
dec
add
add
repnz
add
add
stos
dec
add
add
mov
add
dec
add
add
repnz
add
add
stos
dec
add
add
mov
add
dec
add
add
repnz
add
add
stos
dec
add
add
mov
add
add
add
add
add
add
add
jle
add
add
ja
add
add
jle
add
add
stos
dec
add
add
mov
add
push
xchg
inc
add
add
inc
outs
add
add
push
outs
add
add
pop
outs
add
add
xchg
inc
add
add
inc
outs
add
add
push
outs
add
add
pop
outs
add
add
xchg
inc
add
add
inc
outs
add
add
push
outs
add
add
pop
outs
add
add
xchg
inc
add
add
inc
outs
add
add
push
outs
add
add
pop
outs
add
add
xchg
inc
add
add
inc
outs
add
add
push
outs
add
add
pop
outs
add
add
xchg
inc
add
add
inc
outs
add
add
push
outs
add
add
pop
outs
add
add
mov
add
js
add
add
add
add
add
push
outs
add
add
pop
outs
add
add
xchg
inc
add
add
inc
outs
add
add
push
outs
add
add
pop
outs
add
add
xchg
inc
add
add
xchg
inc
add
add
xchg
inc
add
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
jle
add
add
xchg
inc
adc
pop
add
add
adc
pop
add
pop
add
add
sbb
pop
add
add
sbb
pop
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
add
and
mov
mov
add
and
dec
add
jmp
push
add
and
pop
add
jnp
imul
jno
push
add
add
push
add
add
add
add
add
add
add
add
add
int3
add
add
int3
add
add
int3
add
add
int3
add
add
and
loope
push
add
jmp
add
add
and
stc
add
jmp
add
inc
add
xchg
pop
and
dec
(bad)
fild
and
dec
(bad)
in
sbb
lea
sbb
ja
jmp
adc
or
popa
add
add
add
add
cmp
lahf
lea
add
add
add
add
lea
lea
lea
lea
lea
or
jle
sbb
enter
xor
cmp
add
inc
add
dec
mov
or
push
mov
or
push
add
mov
push
add
push
or
cmps
mov
sbb
mov
jle
pop
add
mov
mov
xchg
or
add
mov
mov
(bad)
cmps
or
pop
jns
xor
inc
(bad)
add
add
add
sub
add
add
or
jb
add
add
add
push
add
or
js
sbb
jno
xchg
xchg
(bad)
xor
sbb
cdq
(bad)
and
mov
push
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
test
sbb
push
nop
je
test
add
cs
jns
adc
xor
inc
nop
test
icebp
add
or
add
rol
add
xchg
or
add
cdq
or
add
lahf
or
add
add
add
add
add
nop
cmps
or
add
nop
xor
mov
fist
loope
cmps
or
add
add
nop
xor
sub
call
lea
setno
xchg
mov
xchg
jmp
stc
add
mov
add
or
add
retf
add
push
add
add
push
add
xchg
mov
add
add
add
add
push
add
or
jbe
enter
xchg
xchg
xchg
ror
push
add
add
add
add
add
add
xchg
in
jno
push
nop
outs
add
leave
xchg
jmp
leave
add
xchg
jnp
leave
add
xchg
test
test
test
test
add
mov
ins
xchg
or
loope
jo
pop
loope
jbe
add
loope
jl
pop
loope
adc
xchg
pop
rol
push
add
or
add
add
add
add
add
xchg
cdq
add
add
xchg
lods
add
add
xchg
lods
add
add
add
and
add
sbb
add
add
add
add
xchg
pop
mov
add
add
add
and
stc
add
xchg
jno
stc
add
js
or
sbb
add
add
jg
add
add
jle
and
push
add
add
rcl
arpl
test
or
xchg
ror
xor
scas
nop
aad
and
add
xchg
fmul
cmp
push
add
or
add
and
daa
add
add
or
add
add
add
add
add
push
add
outs
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
lahf
add
add
lahf
add
add
aad
add
movs
add
add
mov
add
scas
add
add
add
add
add
add
add
push
add
mov
add
add
and
add
add
add
add
and
add
and
add
and
add
and
add
or
add
add
and
add
test
ror
add
add
pusha
bt
and
add
test
or
add
add
add
mov
adc
adc
adc
adc
add
mov
push
mov
add
adc
adc
adc
add
adc
adc
mov
push
mov
add
adc
rcl
adc
pusha
push
stos
add
and
add
add
test
mov
add
pop
inc
pop
stos
add
and
add
and
add
add
adc
add
and
add
and
add
test
pusha
sbb
sbb
add
add
mov
sbb
sbb
sbb
add
and
stos
add
test
mov
add
sbb
sbb
add
rcr
add
and
add
test
mov
pop
mov
add
sbb
pop
sbb
and
add
add
jg
jg
add
add
add
add
add
inc
push
add
jp
jle
cwde
pop
sahf
pop
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
pusha
or
mov
and
add
add
les
add
add
add
add
add
add
and
add
add
add
jmp
add
add
dec
add
add
fcomp
add
add
xchg
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
or
or
add
or
jmp
add
add
and
add
retf
jmp
(bad)
test
fmul
xchg
add
mov
cmp
test
(bad)
push
movs
cmp
daa
jg
adc
jp
sub
mov
mov
fiadd
cmp
sbb
sbb
(bad)
fsubr
test
pusha
add
add
aaa
adc
and
add
or
mov
xchg
pusha
pop
push
fild
add
add
add
mov
(bad)
jg
add
add
sbb
adc
add
add
add
add
popf
add
add
add
sbb
add
add
add
sbb
cmp
add
add
add
add
add
add
add
popf
add
push
add
add
add
add
popf
add
add
add
add
add
or
aaa
push
add
add
add
add
add
add
add
jg
add
add
add
add
xor
lds
add
add
sbb
test
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
adc
add
add
out
add
add
dec
add
adc
add
add
out
add
add
push
add
adc
mov
dec
add
pop
push
add
pop
in
add
or
add
add
add
cmp
inc
cmp
cmp
jae
popa
ins
cs
add
arpl
ins
imul
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
jb
cmp
outs
fs
gs
sub
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
add
sub
stos
loop
mov
sub
mov
sub
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
mov
or
stos
loop
stos
loop
lods
loop
mov
sub
scas
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
mov
or
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
mov
or
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
or
loop
stos
loop
mov
sub
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
sub
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
(bad)
loop
mov
sub
loop
stos
loop
(bad)
loop
(bad)
loop
mov
or
loop
scas
loop
mov
or
mov
or
lods
loop
mov
or
(bad)
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
mov
or
scas
add
arpl
outs
jb
loop
scas
loop
mov
sub
(bad)
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
scas
add
sub
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
or
mov
sub
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
or
lods
loop
lods
loop
mov
sub
stos
loop
stos
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
sub
loop
lods
loop
scas
add
jb
jne
ins
push
jb
je
arpl
gs
gs
xor
cs
ins
add
sub
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
or
mov
sub
mov
sub
stos
loop
mov
or
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
mov
or
lods
loop
mov
sub
loop
mov
sub
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
scas
add
add
jae
gs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
gs
sub
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
or
lods
loop
scas
loop
stos
loop
lods
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
scas
loop
lods
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
mov
sub
loop
scas
add
je
outs
fs
outs
outs
add
sub
stos
loop
(bad)
loop
mov
sub
loop
scas
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
sub
mov
sub
lods
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
or
mov
sub
stos
loop
lods
loop
mov
or
lods
loop
stos
loop
mov
or
(bad)
loop
lods
loop
stos
loop
scas
add
je
outs
fs
popa
jae
add
sub
stos
loop
mov
sub
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
scas
add
or
(bad)
loop
scas
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
mov
or
loop
mov
or
stos
loop
mov
sub
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
or
mov
or
mov
or
lods
loop
mov
or
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
mov
or
push
add
jae
gs
cs
push
imul
popa
ins
gs
jb
jp
fs
push
push
je
jb
add
or
lods
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
mov
sub
mov
sub
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
sub
stos
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
scas
loop
stos
loop
lods
loop
scas
add
sub
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
loop
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
scas
add
sub
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
mov
or
stos
loop
mov
sub
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
sub
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
(bad)
loop
mov
or
(bad)
loop
mov
or
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
mov
sub
scas
add
or
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
mov
or
mov
sub
sub
loop
mov
sub
lods
loop
scas
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
or
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
mov
or
(bad)
loop
scas
loop
stos
loop
mov
or
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
scas
add
or
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
(bad)
loop
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
mov
sub
loop
lods
loop
lods
loop
scas
loop
mov
sub
scas
add
or
loop
(bad)
loop
mov
or
mov
or
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
add
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
add
sub
mov
sub
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
mov
or
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
scas
add
or
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
sub
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
or
lods
loop
stos
loop
scas
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
scas
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
or
scas
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
add
sub
(bad)
loop
mov
sub
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
scas
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
scas
add
or
loop
scas
loop
stos
loop
lods
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
loop
(bad)
loop
mov
sub
scas
loop
mov
sub
scas
loop
mov
or
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
scas
add
fs
gs
or
loop
mov
sub
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
add
or
lods
loop
mov
sub
loop
scas
loop
mov
sub
loop
mov
or
(bad)
loop
stos
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
add
or
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
add
sub
mov
sub
lods
loop
mov
or
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
add
sub
stos
loop
mov
or
lods
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
or
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
scas
loop
scas
add
sub
mov
sub
stos
loop
lods
loop
mov
sub
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
mov
or
loop
lods
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
mov
sub
sub
stos
loop
stos
loop
lods
loop
mov
sub
scas
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
stos
loop
mov
sub
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
(bad)
loop
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
mov
or
scas
loop
scas
add
loop
mov
sub
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
or
scas
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
mov
or
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
sub
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
sub
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
add
or
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
mov
or
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
scas
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
scas
add
sub
mov
sub
loop
mov
sub
scas
loop
lods
loop
mov
sub
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
or
mov
sub
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
add
sub
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
or
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
mov
sub
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
lods
loop
stos
loop
scas
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
mov
or
mov
sub
mov
sub
ins
jne
push
jns
gs
sub
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
mov
sub
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
scas
add
or
scas
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
sub
or
lods
loop
(bad)
loop
stos
loop
mov
or
scas
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
mov
sub
stos
loop
lods
loop
scas
add
sub
lods
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
stos
loop
scas
loop
mov
or
scas
loop
stos
loop
scas
add
sub
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
add
or
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
sub
mov
or
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
mov
or
loop
mov
sub
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
add
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
mov
or
loop
stos
loop
mov
or
stos
loop
mov
or
mov
sub
(bad)
loop
lods
loop
mov
sub
sub
stos
loop
mov
or
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
mov
sub
mov
sub
stos
loop
stos
loop
lods
loop
scas
add
sub
stos
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
or
mov
sub
mov
sub
(bad)
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
add
sub
scas
loop
lods
loop
stos
loop
lods
loop
mov
or
mov
sub
lods
loop
lods
loop
mov
or
(bad)
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
mov
or
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
sub
scas
loop
scas
loop
scas
loop
scas
add
or
loop
lods
loop
stos
loop
mov
sub
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
scas
loop
mov
sub
lods
loop
scas
add
push
arpl
or
stos
loop
stos
loop
(bad)
loop
mov
or
scas
loop
stos
loop
lods
loop
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
loop
lods
loop
scas
add
or
loop
stos
loop
lods
loop
stos
loop
mov
sub
loop
mov
sub
mov
sub
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
mov
sub
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
or
mov
or
(bad)
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
or
scas
loop
mov
sub
loop
lods
loop
stos
loop
mov
or
lods
loop
scas
add
jb
popa
ins
add
jae
gs
cs
dec
add
sub
mov
sub
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
loop
lods
loop
scas
loop
mov
or
loop
scas
add
sub
mov
or
lods
loop
mov
sub
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
mov
sub
mov
sub
sub
mov
sub
scas
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
add
sub
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
or
scas
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
add
or
stos
loop
scas
loop
mov
sub
mov
sub
mov
sub
stos
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
mov
or
loop
(bad)
loop
scas
loop
stos
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
mov
or
mov
or
(bad)
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
scas
loop
scas
add
sub
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
stos
loop
mov
or
mov
sub
mov
sub
mov
sub
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
add
or
stos
loop
mov
or
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
or
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
sub
loop
stos
loop
lods
loop
mov
sub
stos
loop
stos
loop
lods
loop
mov
or
stos
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
loop
scas
add
sub
mov
or
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
add
sub
mov
or
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
mov
or
mov
sub
add
sub
loop
lods
loop
mov
sub
mov
sub
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
mov
or
loop
(bad)
loop
scas
add
sub
(bad)
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
or
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
scas
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
scas
add
sub
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
mov
or
loop
mov
or
mov
or
(bad)
loop
stos
loop
mov
or
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
or
lods
loop
mov
sub
or
stos
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
or
scas
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
or
lods
loop
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
add
or
lods
loop
mov
or
stos
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
or
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
mov
or
loop
(bad)
loop
scas
loop
lods
loop
scas
add
or
lods
loop
stos
loop
mov
sub
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
loop
(bad)
loop
stos
loop
mov
sub
sub
lods
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
sub
or
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
or
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
lods
loop
mov
or
loop
stos
loop
mov
sub
mov
sub
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
add
sub
mov
or
mov
or
scas
loop
scas
loop
scas
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
lods
loop
lods
loop
mov
sub
scas
add
or
loop
scas
loop
stos
loop
mov
sub
stos
loop
mov
sub
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
add
or
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
add
sub
scas
loop
stos
loop
(bad)
loop
mov
sub
(bad)
loop
lods
loop
mov
or
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
add
or
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
mov
or
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
scas
loop
scas
add
sub
stos
loop
lods
loop
scas
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
loop
(bad)
loop
mov
or
stos
loop
scas
add
or
scas
loop
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
or
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
scas
add
or
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
add
or
stos
loop
lods
loop
mov
or
(bad)
loop
lods
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
scas
add
sub
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
scas
loop
mov
sub
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
mov
or
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
add
sub
scas
loop
scas
loop
mov
sub
mov
sub
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
scas
add
sub
loop
scas
loop
stos
loop
mov
or
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
stos
loop
mov
sub
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
add
sub
stos
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
mov
or
(bad)
loop
(bad)
loop
mov
or
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
add
sub
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
scas
add
or
mov
sub
mov
sub
lods
loop
mov
or
mov
sub
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
mov
or
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
or
lods
loop
lods
loop
scas
add
sub
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
loop
mov
sub
mov
or
mov
or
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
sub
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
or
mov
sub
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
mov
sub
scas
loop
scas
loop
mov
sub
sub
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
sub
sub
lods
loop
lods
loop
mov
sub
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
mov
sub
scas
loop
stos
loop
stos
loop
mov
or
stos
loop
(bad)
loop
scas
loop
mov
sub
add
sub
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
or
mov
sub
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
scas
add
or
scas
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
or
(bad)
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
mov
sub
scas
add
sub
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
mov
or
lods
loop
lods
loop
scas
add
sub
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
mov
sub
loop
mov
sub
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
sub
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
or
sub
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
mov
or
loop
scas
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
stos
loop
stos
loop
lods
loop
lods
loop
mov
sub
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
mov
or
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
scas
loop
mov
or
or
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
lods
loop
(bad)
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
add
sub
mov
sub
mov
sub
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
scas
loop
(bad)
loop
stos
loop
scas
add
sub
stos
loop
lods
loop
scas
loop
scas
loop
mov
sub
lods
loop
lods
loop
mov
or
scas
loop
(bad)
loop
mov
sub
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
add
sub
stos
loop
lods
loop
mov
or
lods
loop
mov
or
scas
loop
lods
loop
mov
sub
mov
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
mov
or
mov
sub
scas
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
mov
sub
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
scas
loop
scas
loop
stos
loop
scas
add
sub
(bad)
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
mov
or
scas
loop
mov
sub
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
add
or
loop
scas
loop
(bad)
loop
mov
sub
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
or
scas
loop
lods
loop
stos
loop
scas
add
sub
loop
(bad)
loop
lods
loop
mov
sub
mov
or
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
loop
scas
loop
mov
sub
stos
loop
stos
loop
stos
loop
mov
or
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
add
or
mov
sub
lods
loop
lods
loop
(bad)
loop
mov
or
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
loop
stos
loop
scas
add
or
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
or
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
mov
sub
sub
lods
loop
stos
loop
mov
sub
mov
or
scas
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
mov
or
mov
sub
scas
loop
mov
or
stos
loop
mov
sub
loop
scas
loop
stos
loop
mov
sub
sub
mov
or
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
mov
or
scas
loop
mov
or
lods
loop
mov
sub
scas
loop
lods
loop
mov
or
lods
loop
stos
loop
mov
sub
lods
loop
scas
add
or
scas
loop
scas
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
mov
or
mov
or
mov
or
stos
loop
scas
loop
scas
add
sub
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
mov
or
loop
stos
loop
mov
or
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
or
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
add
sub
lods
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
mov
sub
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
loop
lods
loop
mov
or
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
add
or
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
mov
or
or
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
mov
or
add
or
mov
sub
mov
sub
lods
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
mov
or
lods
loop
mov
sub
lods
loop
lods
loop
mov
sub
scas
add
sub
mov
sub
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
add
or
mov
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
mov
or
(bad)
loop
lods
loop
lods
loop
scas
add
sub
mov
or
(bad)
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
mov
sub
scas
loop
scas
add
sub
mov
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
or
(bad)
loop
mov
or
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
or
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
add
sub
loop
lods
loop
lods
loop
scas
loop
scas
loop
mov
sub
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
mov
sub
mov
sub
lods
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
add
or
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
mov
sub
mov
or
(bad)
loop
stos
loop
mov
sub
scas
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
sub
(bad)
loop
scas
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
or
loop
scas
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
add
sub
scas
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
or
mov
sub
scas
add
sub
mov
sub
scas
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
stos
loop
mov
or
mov
or
lods
loop
(bad)
loop
scas
loop
scas
loop
scas
add
sub
(bad)
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
or
lods
loop
lods
loop
stos
loop
scas
add
sub
scas
loop
mov
or
lods
loop
mov
sub
lods
loop
scas
loop
mov
or
loop
scas
loop
mov
sub
mov
sub
(bad)
loop
mov
sub
stos
loop
mov
or
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
mov
or
stos
loop
mov
or
stos
loop
(bad)
loop
mov
or
loop
mov
sub
mov
sub
stos
loop
stos
loop
mov
or
loop
mov
sub
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
scas
add
jo
inc
cmp
xor
cmp
push
imul
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
add
jo
imul
add
jae
gs
cs
imul
inc
cmp
cmp
cmp
push
imul
arpl
je
outs
je
outs
popa
fs
imul
inc
outs
ins
jo
outs
outs
je
dec
popa
imul
sub
stos
loop
lods
loop
mov
or
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
sub
push
jb
dec
imul
loop
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
mov
or
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
add
or
scas
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
mov
sub
loop
mov
sub
mov
sub
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
scas
add
or
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
lods
loop
(bad)
loop
mov
or
stos
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
add
jae
jne
arpl
add
cmp
inc
cmp
cmp
jae
popa
ins
cs
jb
jo
jb
imul
outs
jne
arpl
popa
outs
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
jne
je
jb
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
sub
scas
loop
stos
loop
mov
sub
mov
sub
mov
sub
lods
loop
scas
loop
mov
or
(bad)
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
mov
sub
scas
loop
scas
loop
mov
or
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
scas
add
sub
mov
sub
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
or
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
mov
sub
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
stos
loop
scas
add
ins
je
jb
add
je
imul
jo
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
loop
mov
or
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
or
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
imul
add
popa
jne
je
inc
inc
dec
outs
outs
push
imul
cmp
cmp
push
imul
imul
jb
outs
outs
je
outs
ins
add
jae
gs
cs
imul
inc
outs
outs
je
outs
ins
jae
push
jns
je
ins
cs
popa
ins
ins
add
outs
ins
jo
outs
outs
je
outs
outs
outs
arpl
add
jae
gs
cs
imul
dec
popa
jb
jne
add
jae
gs
cs
imul
dec
popa
jb
jne
cs
inc
outs
ins
jo
outs
outs
je
outs
outs
outs
arpl
cs
outs
outs
outs
arpl
outs
outs
outs
arpl
outs
outs
outs
arpl
outs
dec
add
addr16
loop
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
or
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
or
lods
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
mov
sub
scas
loop
scas
loop
scas
loop
mov
or
(bad)
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
add
fs
ins
dec
outs
imul
outs
push
imul
gs
je
inc
gs
gs
je
add
gs
je
add
gs
je
push
jns
add
outs
fs
gs
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
mov
or
stos
loop
mov
or
lods
loop
mov
sub
stos
loop
stos
loop
mov
or
mov
sub
stos
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
sub
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
mov
sub
stos
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
mov
or
or
scas
loop
stos
loop
stos
loop
mov
or
(bad)
loop
(bad)
loop
stos
loop
mov
sub
(bad)
loop
mov
or
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
mov
sub
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
scas
add
outs
gs
ins
inc
outs
outs
imul
ja
push
outs
jne
fs
outs
ins
jne
gs
outs
je
addr16
jo
outs
ja
add
gs
jo
cs
outs
outs
ins
imul
dec
outs
je
addr16
jo
outs
ja
add
or
mov
or
mov
sub
stos
loop
mov
sub
mov
sub
lods
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
add
sub
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
scas
loop
stos
loop
stos
loop
mov
or
(bad)
loop
mov
or
mov
sub
jb
popa
arpl
outs
outs
imul
ja
loop
lods
loop
mov
sub
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
add
or
(bad)
loop
mov
sub
stos
loop
stos
loop
scas
loop
mov
sub
mov
sub
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
stos
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
or
scas
loop
scas
add
je
jb
popa
arpl
jbe
jb
imul
imul
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
add
sub
lods
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
mov
or
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
or
jne
je
ins
dec
je
ins
jae
outs
outs
je
outs
ins
add
gs
jae
outs
outs
je
outs
ins
add
jae
jne
je
inc
outs
ins
jne
outs
push
jb
jo
jb
jns
push
imul
popa
jae
add
outs
fs
arpl
jb
jo
jb
jns
addr16
dec
popa
jae
jne
je
inc
outs
ins
jne
outs
add
je
dec
popa
jae
jne
je
inc
outs
ins
jne
outs
add
dec
outs
popa
fs
gs
outs
je
je
outs
outs
inc
outs
jb
add
jne
gs
jbe
outs
je
jb
jae
jae
outs
fs
add
push
imul
gs
jp
inc
push
fs
jbe
outs
je
jb
jae
dec
outs
dec
je
ins
jae
push
add
outs
je
jb
jae
inc
jb
popa
outs
addr16
gs
arpl
outs
outs
je
outs
ins
push
imul
lods
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
or
loop
mov
or
stos
loop
stos
loop
mov
sub
mov
sub
scas
loop
mov
sub
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
scas
add
outs
fs
arpl
bound
arpl
sub
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
or
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
add
or
mov
or
scas
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
mov
or
scas
loop
mov
or
lods
loop
mov
or
loop
mov
sub
stos
loop
stos
loop
lods
loop
mov
or
lods
loop
mov
or
add
popa
ins
gs
jb
inc
ins
gs
outs
je
push
outs
jne
gs
jbe
outs
je
popa
outs
fs
gs
loop
scas
loop
lods
loop
scas
loop
mov
or
stos
loop
lods
loop
stos
loop
(bad)
loop
mov
or
stos
loop
mov
or
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
mov
sub
inc
push
fs
jbe
outs
je
popa
outs
fs
gs
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
mov
sub
loop
lods
loop
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
add
gs
inc
outs
ins
ins
arpl
outs
add
or
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
stos
loop
mov
or
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
add
ins
ins
arpl
outs
push
imul
je
ins
cs
imul
inc
popa
je
add
outs
je
popa
outs
fs
gs
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
mov
sub
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
mov
sub
lods
loop
scas
add
or
loop
mov
sub
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
add
sub
mov
or
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
mov
or
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
mov
or
scas
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
sub
stos
loop
mov
sub
scas
loop
lods
loop
lods
loop
mov
or
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
or
(bad)
loop
scas
add
cmp
inc
cmp
cmp
inc
gs
arpl
imul
ins
add
cmp
inc
cmp
cmp
push
imul
gs
outs
fs
add
sub
lods
loop
stos
loop
stos
loop
mov
or
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
mov
sub
loop
lods
loop
mov
or
loop
mov
sub
mov
or
loop
lods
loop
mov
sub
or
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
scas
add
sub
lods
loop
mov
sub
(bad)
loop
mov
or
loop
mov
sub
scas
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
mov
or
loop
mov
or
scas
loop
mov
or
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
sub
stos
loop
lods
loop
scas
loop
scas
loop
mov
or
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
mov
sub
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
add
or
scas
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
mov
sub
mov
sub
stos
loop
mov
or
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
scas
add
or
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
mov
or
(bad)
loop
scas
add
sub
(bad)
loop
mov
sub
lods
loop
mov
or
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
or
scas
loop
(bad)
loop
scas
loop
mov
sub
loop
scas
loop
mov
sub
or
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
(bad)
loop
mov
or
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
lods
loop
mov
sub
mov
sub
loop
scas
add
sub
loop
mov
sub
mov
sub
mov
or
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
mov
or
mov
or
(bad)
loop
mov
sub
(bad)
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
or
scas
loop
mov
sub
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
loop
lods
loop
mov
sub
lods
loop
scas
loop
mov
sub
lods
loop
mov
or
mov
sub
loop
stos
loop
mov
sub
or
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
mov
sub
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
or
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
add
popa
ins
gs
jb
push
jb
jo
jb
jns
gs
fs
je
add
sub
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
mov
or
lods
loop
mov
or
mov
sub
scas
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
mov
or
jb
jo
jb
jns
gs
fs
je
add
jae
jne
je
inc
outs
ins
jne
outs
add
imul
jb
ins
push
imul
outs
imul
push
arpl
ins
add
jae
gs
cs
imul
push
push
add
addr16
outs
jae
jne
inc
popa
je
inc
jb
fs
inc
jne
outs
inc
outs
gs
je
outs
addr16
outs
ins
jne
outs
add
popa
inc
jb
fs
jne
outs
inc
outs
gs
je
outs
addr16
outs
ins
jne
outs
inc
jbe
outs
je
jb
jae
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
or
stos
loop
mov
or
mov
or
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
(bad)
loop
scas
loop
scas
add
sub
mov
sub
mov
sub
mov
or
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
mov
or
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
scas
add
sub
mov
sub
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
or
scas
loop
lods
loop
lods
loop
lods
loop
scas
add
imul
add
sub
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
scas
loop
mov
sub
scas
add
or
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
mov
or
lods
loop
mov
or
scas
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
mov
sub
lods
loop
stos
loop
mov
or
mov
sub
or
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
or
(bad)
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
mov
or
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
scas
add
je
jb
popa
arpl
imul
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
loop
scas
loop
(bad)
loop
mov
sub
mov
sub
sub
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
mov
or
scas
add
or
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
lods
loop
scas
loop
mov
sub
jb
popa
arpl
jbe
jb
imul
add
sub
stos
loop
scas
loop
scas
loop
mov
sub
scas
loop
stos
loop
lods
loop
mov
or
mov
sub
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
scas
loop
scas
add
sub
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
sub
scas
loop
scas
loop
stos
loop
(bad)
loop
mov
or
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
or
scas
add
jb
ins
gs
inc
outs
ins
ins
jne
imul
push
je
je
jae
imul
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
mov
sub
mov
or
loop
mov
sub
mov
sub
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
mov
or
lods
loop
scas
add
sub
lods
loop
scas
loop
lods
loop
mov
or
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
arpl
outs
outs
imul
ja
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
mov
or
lods
loop
lods
loop
mov
sub
mov
sub
scas
loop
mov
sub
stos
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
mov
or
add
sub
scas
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
scas
add
cmp
inc
cmp
xor
jae
popa
ins
push
imul
outs
ja
jae
outs
jo
jne
je
outs
add
popa
add
popa
jb
inc
jne
je
outs
add
outs
ins
dec
jne
dec
gs
fs
ins
popa
add
outs
ins
dec
outs
dec
gs
fs
ins
popa
add
ins
imul
imul
inc
ins
outs
arpl
push
gs
inc
ins
outs
arpl
outs
outs
ins
imul
imul
inc
outs
jb
gs
dec
outs
jne
dec
outs
jne
gs
outs
ja
add
jne
gs
jne
je
outs
inc
jbe
outs
je
jb
jae
push
jns
je
ins
cs
imul
dec
outs
jo
je
dec
outs
jne
je
ins
pop
inc
ins
imul
je
jb
bound
xor
add
ins
popa
push
outs
data16
dec
jbe
ins
dec
imul
je
imul
outs
outs
dec
gs
popa
add
ins
popa
push
outs
data16
dec
jbe
ins
dec
imul
jae
popa
imul
loop
(bad)
loop
mov
sub
loop
mov
sub
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
or
scas
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
or
loop
mov
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
cmp
inc
cmp
xor
jae
popa
ins
push
imul
ins
add
sub
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
mov
or
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
add
gs
outs
addr16
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
or
mov
sub
add
sub
mov
sub
mov
sub
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
stos
loop
(bad)
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
add
sub
loop
lods
loop
mov
or
lods
loop
stos
loop
lods
loop
mov
sub
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
dec
inc
ins
gs
outs
je
dec
outs
jne
gs
jne
je
outs
inc
jbe
outs
je
popa
outs
fs
gs
loop
mov
sub
mov
sub
mov
or
stos
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
sub
scas
add
sub
mov
sub
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
mov
or
scas
loop
mov
or
mov
sub
mov
sub
mov
sub
sub
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
popa
addr16
popa
jae
add
sub
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
lods
loop
lods
loop
stos
loop
mov
or
loop
scas
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
scas
loop
scas
loop
scas
add
sub
scas
loop
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
or
lods
loop
scas
add
outs
popa
ins
push
je
outs
addr16
push
outs
dec
ins
popa
addr16
outs
fs
outs
outs
jbe
jb
gs
inc
cmp
cmp
cmp
push
imul
imul
jo
jb
dec
push
popa
ins
jne
inc
outs
outs
jbe
jb
gs
inc
outs
outs
jbe
jb
add
addr16
jns
add
jb
ins
gs
jb
arpl
je
jb
add
outs
jbe
jb
inc
popa
arpl
loop
(bad)
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
add
or
scas
loop
lods
loop
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
mov
sub
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
(bad)
loop
mov
sub
gs
outs
outs
add
sub
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
mov
or
mov
sub
lods
loop
mov
sub
loop
mov
sub
scas
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
stos
loop
scas
add
sub
mov
or
loop
scas
loop
(bad)
loop
stos
loop
mov
or
loop
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
scas
add
je
ins
jo
gs
outs
je
fs
js
gs
imul
jb
inc
outs
ins
outs
jb
outs
outs
jbe
jb
gs
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
mov
sub
stos
loop
mov
sub
mov
or
mov
or
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
scas
add
jne
add
sub
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
or
mov
sub
or
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
loop
mov
or
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
or
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
add
or
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
add
sub
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
mov
or
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
scas
add
or
lods
loop
lods
loop
stos
loop
mov
or
loop
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
or
lods
loop
mov
sub
mov
or
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
or
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
add
gs
imul
ins
inc
outs
ins
outs
jb
outs
outs
jbe
jb
gs
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
inc
cmp
cmp
dec
gs
jo
jb
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
mov
or
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
add
ins
imul
jb
jae
add
jae
gs
cs
imul
dec
gs
sub
loop
scas
loop
(bad)
loop
mov
or
mov
or
lods
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
mov
sub
mov
sub
stos
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
sub
scas
loop
mov
sub
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
or
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
mov
or
lods
loop
mov
or
stos
loop
scas
loop
lods
loop
mov
sub
scas
loop
scas
add
sub
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
or
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
or
mov
or
scas
add
sub
scas
loop
(bad)
loop
scas
loop
stos
loop
mov
or
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
sub
sub
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
mov
sub
loop
stos
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
scas
add
sub
lods
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
mov
sub
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
add
jne
push
gs
dec
imul
inc
jb
jae
add
imul
bound
addr16
jae
loop
mov
or
scas
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
mov
sub
lods
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
(bad)
loop
mov
or
stos
loop
stos
loop
mov
sub
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
scas
add
ins
outs
jb
inc
gs
arpl
je
je
push
outs
inc
outs
ins
outs
jb
outs
outs
jbe
jb
gs
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
mov
sub
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
scas
add
gs
arpl
je
je
add
popa
inc
jb
fs
popa
je
push
jb
jo
gs
inc
cmp
cmp
cmp
cs
outs
fs
cs
imul
imul
popa
je
outs
outs
add
or
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
or
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
or
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
or
mov
sub
sub
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
mov
or
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
sub
lods
loop
mov
sub
loop
stos
loop
mov
sub
or
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
mov
sub
loop
mov
sub
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
loop
scas
loop
scas
loop
mov
sub
sub
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
or
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
scas
loop
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
or
mov
or
scas
add
sub
lods
loop
mov
or
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
or
lods
loop
mov
or
stos
loop
lods
loop
mov
sub
stos
loop
scas
add
sub
(bad)
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
mov
sub
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
mov
sub
mov
sub
scas
loop
lods
loop
scas
loop
mov
or
stos
loop
mov
sub
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
loop
stos
loop
mov
or
mov
sub
(bad)
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
mov
or
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
add
sub
stos
loop
lods
loop
mov
or
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
mov
sub
popa
bound
popa
jae
ja
jb
inc
outs
js
inc
cmp
cmp
cmp
push
imul
imul
je
outs
ins
jae
inc
arpl
popa
je
jb
push
popa
jae
ja
jb
inc
push
add
jae
ja
jb
push
jb
jo
jb
jns
imul
outs
je
popa
ins
ins
bound
imul
popa
jbe
fs
popa
ins
ins
bound
imul
fs
push
popa
jae
ja
jb
inc
push
add
ins
outs
jbe
pop
push
popa
jae
ja
jb
inc
push
add
je
push
popa
jae
ja
jb
add
je
push
popa
jae
ja
jb
add
push
popa
jae
ja
jb
push
jb
jo
jb
jns
push
add
outs
fs
arpl
jb
jo
jb
jns
push
fs
jbe
outs
je
jb
jae
add
outs
je
jb
jae
dec
popa
outs
fs
gs
popa
jae
ja
jb
inc
push
fs
sub
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
mov
or
stos
loop
stos
loop
scas
add
or
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
mov
sub
sub
(bad)
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
add
jae
ja
jb
inc
outs
js
loop
mov
sub
mov
sub
mov
sub
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
add
sub
stos
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
mov
or
mov
sub
mov
or
mov
or
mov
sub
scas
loop
mov
or
scas
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
sub
lods
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
scas
add
sub
lods
loop
stos
loop
lods
loop
mov
sub
mov
sub
scas
loop
scas
loop
scas
loop
lods
loop
mov
or
scas
loop
mov
sub
lods
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
or
mov
sub
scas
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
lods
loop
scas
add
sub
mov
sub
scas
loop
(bad)
loop
lods
loop
mov
or
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
or
stos
loop
scas
loop
lods
loop
mov
sub
sub
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
mov
sub
stos
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
loop
mov
sub
(bad)
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
add
sub
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
scas
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
add
popa
ins
gs
jb
push
jb
jo
jb
jns
gs
fs
je
dec
jo
imul
outs
jo
jb
jns
push
fs
popa
ins
ins
bound
imul
sub
(bad)
loop
(bad)
loop
mov
or
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
or
(bad)
loop
scas
loop
mov
sub
scas
add
jae
ja
jb
add
jae
jne
inc
popa
je
inc
jb
add
popa
inc
jb
add
popa
inc
outs
outs
je
js
inc
gs
outs
fs
arpl
jb
jo
jb
jns
dec
outs
inc
popa
je
inc
outs
outs
je
js
push
jb
jo
jb
jns
push
add
push
dec
outs
push
popa
ins
jo
gs
jb
jo
jb
jns
push
add
je
inc
outs
jae
jne
gs
imul
je
add
dec
imul
jb
popa
bound
imul
jb
pusha
xor
push
jae
imul
push
imul
je
add
je
inc
outs
jae
jne
gs
imul
je
add
or
mov
sub
stos
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
mov
sub
mov
sub
lods
loop
scas
add
sub
mov
sub
loop
scas
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
scas
add
or
loop
scas
loop
(bad)
loop
mov
or
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
mov
or
mov
or
loop
mov
sub
scas
loop
stos
loop
stos
loop
scas
add
sub
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
loop
lods
loop
(bad)
loop
(bad)
loop
mov
or
(bad)
loop
scas
add
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
add
jae
jne
gs
imul
je
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
jns
je
ins
cs
outs
jb
add
je
outs
jae
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
jae
gs
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
gs
gs
outs
outs
inc
je
jb
bound
add
jae
jne
arpl
imul
jb
dec
outs
arpl
imul
gs
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jae
outs
arpl
je
fs
outs
outs
je
outs
je
imul
bound
add
jae
gs
cs
imul
push
gs
jne
arpl
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
push
push
inc
push
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
je
add
ins
jne
inc
outs
outs
jbe
jb
imul
imul
cmp
cmp
cmp
push
imul
cs
jae
jne
arpl
add
dec
inc
push
jno
jae
dec
push
push
inc
push
ja
push
pushw
dec
jae
bound
inc
cmp
cmp
cmp
push
imul
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jb
outs
add
jbe
jb
outs
ins
outs
je
dec
outs
je
je
add
pop
inc
js
ins
imul
je
add
outs
je
xor
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
je
gs
outs
add
outs
arpl
add
jbe
imul
jno
popa
ins
jae
inc
popa
imul
gs
dec
jae
popa
arpl
jb
jne
add
popa
jb
add
je
inc
jne
jb
outs
je
push
add
gs
inc
bound
addr16
addr16
dec
jae
je
popa
arpl
add
dec
outs
addr16
pop
dec
jae
ins
imul
pop
dec
outs
fs
add
jb
push
gs
dec
dec
push
push
inc
dec
inc
inc
add
je
inc
jne
ins
jns
jne
ins
imul
ins
add
je
inc
push
inc
outs
jo
add
ins
outs
jb
push
je
gs
ins
add
popa
add
popa
fs
jns
add
je
dec
outs
addr16
add
outs
je
ins
gs
gs
jo
jb
add
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
data16
inc
ins
outs
arpl
outs
jo
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
inc
outs
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
gs
add
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
inc
jne
ins
dec
popa
ins
add
je
dec
popa
ins
add
pop
inc
jno
popa
ins
imul
add
js
push
jb
je
add
je
push
je
jb
jne
push
jb
add
fs
outs
ins
jo
outs
outs
je
push
jne
add
je
inc
jae
gs
bound
push
jns
arpl
outs
outs
imul
gs
je
inc
gs
gs
je
add
outs
ins
gs
outs
add
je
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
outs
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
dec
outs
jbe
dec
gs
add
je
inc
jne
jb
outs
je
dec
inc
imul
ins
add
jo
jae
add
add
ins
outs
jbe
add
arpl
je
outs
outs
add
je
popa
ins
jne
add
je
popa
ins
jne
add
fs
dec
outs
popa
fs
fs
push
imul
gs
je
dec
je
ins
jae
popa
fs
inc
jne
jb
outs
je
push
add
je
inc
arpl
ins
push
imul
pop
inc
arpl
ins
dec
imul
je
dec
je
ins
add
je
dec
jae
arpl
add
je
dec
imul
add
je
inc
outs
jne
je
inc
ins
outs
outs
jb
addr16
inc
popa
outs
jbe
jae
outs
jo
addr16
inc
outs
ins
jne
outs
dec
outs
fs
jae
je
inc
arpl
ins
push
imul
pop
inc
popa
outs
jbe
jae
gs
jae
je
inc
popa
outs
jbe
jae
outs
jo
jae
je
inc
outs
ins
jne
outs
dec
outs
fs
jae
je
dec
imul
imul
arpl
outs
pusha
xor
dec
outs
jne
dec
gs
outs
addr16
popa
fs
dec
outs
jne
gs
outs
ja
add
je
dec
outs
je
imul
outs
outs
add
je
push
outs
fs
addr16
inc
popa
je
inc
outs
outs
je
js
add
outs
jae
add
je
xor
inc
gs
jns
add
popa
jae
je
je
jae
dec
popa
jae
ins
popa
add
jns
imul
jne
arpl
inc
push
imul
popa
je
outs
outs
inc
ins
popa
jb
inc
outs
ins
outs
jb
inc
cmp
cmp
cmp
cs
outs
ins
ins
outs
outs
push
imul
ins
add
je
dec
outs
jae
popa
outs
arpl
addr16
inc
addr16
gs
jb
jae
add
je
inc
addr16
gs
ins
outs
ja
jb
jae
add
je
inc
addr16
jb
outs
addr16
jb
jae
add
je
inc
addr16
jb
outs
jae
popa
jb
outs
je
jb
jae
add
je
push
add
outs
add
je
push
add
je
inc
add
je
inc
add
je
inc
add
je
inc
add
je
inc
outs
ins
outs
jb
dec
gs
popa
ins
jne
push
popa
imul
push
je
imul
pop
push
popa
ins
jne
add
je
inc
gs
arpl
je
je
add
je
dec
jae
gs
arpl
outs
outs
outs
arpl
add
ins
outs
jb
add
je
inc
jb
outs
add
je
push
jb
outs
jae
popa
jb
outs
je
dec
outs
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
je
dec
gs
popa
ins
jne
add
ins
bound
add
je
inc
push
addr16
inc
push
dec
inc
outs
jne
gs
je
jb
xor
inc
popa
je
inc
jb
fs
outs
ins
jne
outs
add
je
inc
outs
ins
jne
outs
jae
dec
bound
jb
popa
bound
outs
ins
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
ins
ins
arpl
outs
pusha
xor
addr16
dec
gs
fs
dec
inc
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
jae
je
push
imul
je
add
add
add
mov
mov
inc
mov
jnp
repz
add
inc
outs
outs
data16
gs
js
jbe
xor
xor
add
mov
pop
push
sbb
mov
and
add
add
add
push
sbb
sub
push
adc
add
adc
add
add
add
add
sbb
add
syscall
or
adc
push
add
adc
add
adc
adc
push
push
or
add
sbb
add
add
add
push
push
add
adc
add
adc
add
sbb
adc
or
add
add
sbb
and
add
adc
adc
push
or
add
sbb
push
add
sbb
adc
add
add
pop
add
adc
sbb
sub
push
or
adc
sbb
or
add
or
add
sbb
adc
add
adc
adc
or
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
and
add
xor
add
adc
add
add
or
push
adc
push
and
or
adc
add
sbb
add
or
adc
or
adc
or
add
add
and
add
xor
add
or
add
add
or
and
add
xor
dec
xor
cmp
add
add
cmp
cmp
sbb
cmp
adc
add
adc
push
adc
add
adc
add
adc
add
add
dec
push
add
adc
adc
inc
push
adc
add
add
inc
add
add
dec
add
adc
add
adc
add
adc
push
add
add
inc
add
sbb
and
adc
or
adc
or
inc
imul
add
adc
push
adc
and
add
push
and
add
ins
push
and
add
jno
and
add
jne
add
sbb
jns
imul
jns
imul
jge
add
jge
add
mov
or
add
adc
add
jge
add
sbb
or
adc
or
add
or
or
push
add
or
adc
adc
adc
add
or
sbb
imul
adc
add
adc
add
and
add
adc
xor
adc
cmp
push
and
add
cmp
rol
or
add
adc
push
add
push
adc
add
push
push
add
sbb
adc
add
sbb
jge
add
add
sub
adc
add
adc
push
adc
adc
add
adc
add
add
cmp
add
sbb
cmp
in
add
adc
or
add
sub
sub
or
add
xor
sub
add
adc
push
add
add
cmp
add
adc
adc
add
adc
add
add
and
add
or
add
adc
add
pop
adc
pop
add
add
adc
or
add
adc
or
add
or
cmp
add
push
adc
adc
or
or
adc
adc
push
adc
add
push
adc
adc
or
add
push
adc
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
xor
add
add
add
add
push
inc
cmp
cmp
cmp
push
imul
add
add
add
add
inc
add
sbb
add
inc
outs
jo
jb
addr16
and
xor
xor
sub
add
or
add
adc
or
add
add
add
add
add
add
add
xor
xor
xor
xor
add
add
and
aaa
inc
inc
inc
inc
inc
xor
sub
sub
sub
xor
xor
inc
inc
cmp
add
add
addr16
jo
imul
je
imul
outs
add
sbb
add
addr16
jo
imul
gs
outs
je
cs
add
sbb
add
addr16
jo
imul
gs
outs
je
cs
add
sbb
add
addr16
jo
imul
gs
outs
je
cs
add
sbb
add
addr16
jo
imul
gs
outs
je
cs
add
sbb
add
addr16
jo
imul
gs
outs
je
cs
add
add
and
popa
jo
imul
gs
outs
je
je
jo
gs
outs
cs
add
daa
add
and
popa
jo
imul
gs
outs
je
je
jo
gs
jb
outs
addr16
add
and
add
addr16
jo
imul
gs
outs
je
je
jo
gs
fs
add
inc
add
sbb
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
add
inc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
push
and
add
push
jb
jae
outs
je
je
outs
outs
inc
jne
ins
fs
popa
jae
jae
xor
xor
xor
xor
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
and
add
add
outs
jae
data16
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
add
add
add
add
add
pop
and
add
or
add
jns
je
ins
cs
outs
je
xor
jns
je
ins
cs
outs
je
xor
add
pop
add
sysret
pop
push
adc
sbb
or
or
push
add
sbb
or
sub
add
syscall
syscall
syscall
syscall
syscall
syscall
or
or
add
or
or
or
add
or
or
or
or
add
pop
or
or
sbb
add
and
adc
push
and
sbb
sbb
add
and
add
sbb
and
adc
or
pop
or
and
add
or
and
or
and
or
and
add
add
adc
or
or
or
or
or
or
add
add
sub
add
sbb
adc
add
add
or
sub
add
adc
add
mov
sbb
add
push
push
push
add
adc
sbb
adc
add
add
or
or
pop
add
or
add
or
pop
push
or
or
or
add
or
pop
add
or
or
pop
adc
sub
or
or
or
or
or
or
pop
or
or
or
or
or
and
add
pop
add
cmp
add
adc
and
add
cmp
or
and
add
adc
sub
adc
adc
xchg
or
adc
adc
adc
adc
or
adc
adc
adc
adc
or
adc
adc
add
add
add
imul
imul
add
mov
and
add
adc
and
sbb
or
adc
add
sbb
adc
add
mov
adc
sbb
pop
add
or
or
pop
add
sub
add
and
and
sbb
push
pop
add
xor
adc
adc
add
or
add
xor
and
adc
adc
push
adc
or
adc
push
adc
adc
add
cmc
or
add
add
or
push
add
push
add
add
add
add
add
adc
or
and
add
or
and
adc
add
or
pop
add
add
adc
add
adc
adc
adc
sbb
adc
add
or
or
add
adc
or
adc
adc
adc
push
and
add
sbb
adc
ror
inc
cmps
outs
cdq
out
adc
out
or
test
add
add
add
sahf
test
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
