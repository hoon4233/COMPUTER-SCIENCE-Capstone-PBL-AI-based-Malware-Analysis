push
pusha
call
pop
sub
mov
sub
mov
lea
rep
jmp
call
pop
sub
call
mov
lea
push
push
call
mov
lea
push
push
call
push
lea
push
push
call
mov
pop
push
call
call
push
lea
push
push
call
mov
pop
lea
push
push
push
push
call
push
mov
mov
mov
cld
rep
pop
lea
push
push
push
push
call
lea
push
push
push
push
call
mov
mov
xor
cld
rep
lea
push
push
push
push
call
lea
mov
cmp
je
mov
mov
add
sub
test
je
pusha
lea
push
push
push
push
call
popa
add
pusha
lea
push
push
push
push
call
popa
inc
dec
inc
jmp
add
jmp
add
mov
mov
popa
ret
push
mov
cmp
je
mov
jmp
add
mov
xor
cmp
jne
mov
cmp
je
sub
jmp
pop
ret
push
push
push
push
mov
mov
mov
add
xor
mov
add
cmp
je
mov
push
mov
add
push
call
test
je
inc
jmp
mov
add
movzx
sub
inc
mov
add
mov
add
jmp
xor
pop
pop
pop
pop
ret
push
push
mov
mov
xor
lods
cmp
jne
test
je
inc
jmp
mov
pop
pop
ret
inc
gs
jb
arpl
fs
jae
add
jb
jne
ins
push
jb
je
arpl
gs
popa
jae
inc
jb
outs
jb
inc
gs
gs
inc
je
ins
add
add
add
inc
inc
add
ret
adc
add
add
add
xor
add
jne
add
inc
add
add
inc
add
and
add
mov
xchg
fdivr
imul
js
fsubr
addr16
outs
outs
arpl
imul
js
pop
pusha
pop
movs
pop
pop
pop
pop
pop
push
js
push
push
pop
je
mov
cmp
dec
dec
push
ret
xor
push
jmp
sub
push
les
daa
xor
xor
dec
sbb
sbb
pop
cmp
or
adc
sbb
add
or
adc
std
mov
push
gs
hlt
repz
add
add
pop
mov
jmp
jecxz
in
or
push
movs
(bad)
dec
dec
cmp
(bad)
fisttp
inc
popa
ror
fsub
(bad)
shl
retf
add
ret
(bad)
rol
div
lods
mov
mov
mov
ret
fbstp
test
cmps
retf
fisub
mov
call
xchg
or
mov
xchg
jg
jge
loope
mov
jns
jae
inc
loope
ins
imul
imul
pop
pop
pop
pop
push
push
push
push
push
into
pusha
push
push
push
xchg
dec
dec
dec
add
fld
inc
inc
mov
dec
cmp
cmp
js
xor
das
dec
sub
sub
cli
and
and
push
lea
and
and
and
sub
pop
add
sub
jns
cld
sti
(bad)
sti
jae
div
clc
bound
lock
adc
or
jmp
mov
add
loop
fisttp
fucomi
add
jmp
aam
loop
fmul
retf
fild
(bad)
jmp
rcr
mov
mov
inc
cs
sub
lds
xor
movs
pushf
fwait
sahf
fwait
adc
ret
iret
xchg
lods
or
xchg
xchg
cmp
mov
jg
jg
movs
jbe
pushf
jae
jl
ins
jo
in
push
arpl
bound
popa
mov
pop
push
push
push
push
jo
int3
push
dec
dec
dec
dec
les
inc
dec
inc
mov
lods
pop
cmp
inc
inc
aas
dec
gs
dec
pop
xor
xor
mov
sub
mov
es
and
sbb
adc
sub
adc
or
adc
jnp
(bad)
std
add
stc
clc
std
add
or
hlt
pop
sbb
imul
arpl
out
call
in
add
fcmovu
fsub
cs
(bad)
rcl
ror
int
iret
int3
inc
rol
(bad)
leave
(bad)
ds
rol
sub
mov
mov
or
lods
stos
scas
scas
enter
movs
fild
lahf
lahf
sahf
mov
sahf
rcr
xchg
xchg
xchg
add
leave
ror
int3
xchg
mov
and
mov
out
jns
jo
cmps
ss
imul
push
cmps
ins
pusha
pop
pop
bound
cld
pop
push
push
sub
dec
push
dec
dec
(bad)
dec
dec
dec
leave
dec
inc
inc
lds
inc
rol
mov
cmp
ss
mov
cs
sub
push
das
es
cs
daa
pop
push
and
inc
sbb
and
sbb
adc
or
xor
adc
outs
or
adc
(bad)
clc
or
push
icebp
hlt
cmc
add
in
sub
in
loope
cmc
(bad)
fcom
fcmovu
fadd
sbb
dec
loopne
rcl
ds
int3
ror
loop
into
mov
out
repz
fnstsw
mov
shl
scas
lods
mov
(bad)
es
cmps
cmps
test
ret
lahf
sahf
mov
pushf
cdq
mov
fwait
xchg
xchg
xchg
cmps
mov
mov
xchg
add
xchg
jge
jl
movs
jbe
pushf
jae
jl
ins
jo
jp
jbe
imul
push
xlat
push
les
push
push
pop
push
fs
popa
je
ret
push
inc
inc
dec
bound
dec
aas
ds
ds
mov
cmp
cmp
scas
inc
xor
xor
test
sub
xchg
cmp
and
and
outs
xchg
push
adc
adc
mov
or
push
adc
push
or
add
or
cli
std
addr16
cmc
cli
or
repnz
imul
arpl
out
call
in
fcomip
add
(bad)
aad
inc
not
rcl
dec
(bad)
retf
into
retf
retf
(bad)
xor
sar
mov
mov
mov
fdivr
rcl
shr
mov
fwait
call
cmps
ret
xchg
xchg
in
(bad)
mov
sahf
mov
mov
dec
mov
test
js
jbe
fisttp
outs
jo
ja
imul
addr16
popa
mov
pop
jle
push
push
pop
jle
push
leave
pop
dec
dec
dec
mov
pop
je
inc
mov
pop
inc
ins
jmp
pop
fdiv
pop
loope
pop
sub
and
aas
cmp
push
sbb
sbb
call
ds
xchg
adc
push
adc
sub
sub
inc
add
add
ss
sti
cli
std
pop
adc
repz
shr
in
lock
adc
jmp
loopne
fild
lods
sbb
(bad)
push
aam
push
xlat
ror
shl
hlt
retfw
bnd
pop
ret
ret
and
mov
mov
mov
jecxz
mov
scas
scas
lods
mov
stos
mov
movs
push
mov
xor
sub
nop
(bad)
xchg
pop
lahf
mov
scas
test
cmp
js
out
xchg
je
js
(bad)
call
ins
test
fsubr
pop
pop
pop
jl
push
pop
data16
retf
dec
dec
dec
fsub
inc
inc
inc
mov
mov
cmp
cmp
push
xchg
xchg
xchg
scas
inc
xor
xor
push
cmps
inc
sub
sub
jl
cmp
and
and
xchg
sbb
jb
sub
ins
jbe
or
add
add
add
fs
cli
stc
stc
stos
and
sbb
repnz
hlt
sbb
or
dec
dec
data16
out
jmp
neg
fsubp
fbstp
out
fcom
(bad)
(bad)
(bad)
scas
aam
mov
clc
mov
retf
repnz
inc
fcmovb
ret
shr
dec
out
xor
mov
mov
mov
mov
xlat
mov
stos
mov
retf
test
xchg
mov
xchg
xchg
mov
mov
jecxz
call
xchg
mov
jp
ins
shr
xchg
jb
outs
xchg
imul
bound
mov
outs
pop
pop
pop
and
push
push
push
dec
push
jns
push
ja
dec
je
dec
jno
push
jae
inc
pop
aas
ds
dec
outs
std
xor
push
arpl
sub
daa
dec
cmp
xor
fwait
xor
sbb
cmp
pop
xor
and
or
push
pop
push
or
pop
jg
add
add
adc
dec
dec
push
outs
or
lock
lock
lahf
in
adc
jmp
loope
push
in
(bad)
fld
loopne
fiadd
aam
(bad)
iret
inc
(bad)
leave
int3
leave
inc
fadd
ret
mov
(bad)
out
mov
xor
mov
mov
or
lods
and
cmps
pop
mov
mov
enter
adc
mov
mov
xchg
mov
test
jg
jge
clc
(bad)
jns
jnp
xchg
icebp
mov
je
jae
xchg
jne
pushf
addr16
popa
pusha
pop
arpl
pop
jbe
jle
push
push
pop
jnp
jg
dec
ror
dec
dec
inc
inc
push
outs
mov
inc
push
cmp
cmp
lods
xor
xor
sub
daa
mov
push
es
jnp
sbb
xchg
push
das
jbe
dec
push
cmp
adc
xor
popa
sbb
xchg
and
pop
add
cld
sti
(bad)
sbb
push
pop
push
jno
repnz
hlt
icebp
adc
jmp
in
push
aas
arpl
in
out
jecxz
lock
(bad)
fst
(bad)
aad
aad
dec
in
into
shl
int
dec
retf
cmp
ret
ret
dec
mov
mov
mov
sti
shr
(bad)
stos
stos
lods
int
in
mov
mov
mov
cdq
pushf
retf
not
or
lods
add
mov
jnp
cmp
ja
out
mov
jae
test
enter
gs
imul
push
lods
push
push
push
push
dec
dec
pop
ja
jne
ret
pusha
inc
inc
dec
outs
mov
pop
ds
dec
(bad)
mov
xor
ss
xor
sub
es
and
fwait
cmp
sbb
sbb
jne
adc
adc
or
imul
pop
adc
xor
cld
and
add
mov
and
icebp
mov
out
in
hlt
jmp
cli
and
cld
loopne
loop
test
fcmovu
xor
push
jl
rcl
dec
jmp
into
rcl
dec
loope
enter
aaa
and
sar
mov
xor
mov
mov
mov
scas
lods
add
movs
sbb
movs
retf
cmc
popf
popf
enter
lods
xchg
xchg
xchg
xchg
xchg
or
add
stos
mov
mov
jnp
int
lea
je
jo
test
ins
push
loope
arpl
ins
jbe
fidiv
pop
pop
popa
pop
shr
push
push
push
jne
cmps
push
fucom
dec
outs
pop
mov
adc
inc
fs
cmp
ds
cmp
xor
xor
sub
sub
popa
jnp
and
and
pop
push
sbb
push
scas
push
adc
adc
inc
mov
and
push
or
xchg
add
inc
ins
or
cli
jmp
pop
div
inc
hlt
outs
pop
out
out
icebp
out
data16
call
jmp
(bad)
(bad)
push
icebp
(bad)
aad
fiadd
ror
aam
rcl
std
repnz
retf
ffree
ret
ret
lds
sub
mov
loopne
mov
sub
scas
scas
mov
les
mov
mov
sbb
out
adc
xchg
xchg
xchg
lock
lea
mov
jg
and
jne
lods
fnstenv
outs
xchg
aam
ins
jne
shl
gs
loope
popa
pusha
arpl
pop
pop
mov
push
jg
push
push
jle
push
enter
dec
jb
jno
push
jae
inc
in
ds
jo
ss
xor
data16
sub
popa
mov
es
and
dec
daa
push
xchg
xor
sbb
sub
sub
push
adc
xchg
or
add
add
add
(bad)
call
dec
and
out
out
icebp
push
jmp
jmp
push
loopne
call
fcmovnu
out
xlat
dec
in
rcl
aam
shl
iret
iret
iret
icebp
add
call
ret
cmp
mov
iret
mov
mov
fidiv
and
mov
or
rol
xchg
xchg
xchg
xchg
xchg
xchg
out
xchg
or
mov
xchg
test
test
je
repnz
jb
sub
jg
out
arpl
jae
bound
pop
pop
pop
popa
push
push
data16
shr
dec
push
ins
ins
dec
dec
dec
aad
inc
inc
inc
outs
mov
inc
addr16
pop
dec
pop
sar
push
shl
cs
sbb
das
das
dec
cmp
mov
sbb
dec
or
sbb
cmp
push
sub
or
or
div
or
pop
or
add
sbb
clc
imul
in
data16
lock
outs
or
jmp
or
je
in
in
imul
or
jecxz
add
xor
bnd
repz
(bad)
inc
out
int
ror
enter
into
out
inc
int3
jmp
(bad)
call
and
mov
fdiv
stos
rcr
retf
scas
retf
mov
xchg
sahf
xchg
xchg
mov
nop
mov
xchg
cmp
jge
jg
rol
stos
push
jb
outs
test
xchg
xchg
cmc
jo
ja
jae
data16
pop
pop
pop
jl
mov
push
dec
dec
push
pusha
mov
lods
je
push
push
inc
pop
cmp
cmp
dec
cmp
dec
cmp
cmp
aas
xor
cmp
das
cmp
sub
ds
je
push
sub
and
sbb
pop
movs
das
mov
sbb
and
pop
adc
push
add
or
push
adc
adc
dec
push
inc
push
sti
out
(bad)
aas
stc
jmp
jmp
loop
xchg
jmp
gs
aad
push
out
rcl
shr
int
retf
retf
inc
loop
(bad)
(bad)
aad
jmp
iret
rcr
mov
rol
mov
mov
mov
mov
rcr
sahf
pushf
cli
lods
movs
test
ret
xchg
or
(bad)
mov
mov
pushf
jecxz
mov
in
mov
jle
xchg
xchg
rcl
mov
mov
jno
nop
daa
ins
gs
imul
jae
and
cli
dec
dec
dec
dec
pop
push
(bad)
push
push
push
push
jns
ds
int3
dec
cmp
pop
pop
xor
xor
dec
xor
sub
xor
das
sub
jge
sub
mov
and
and
das
cs
outs
fs
sbb
sbb
push
pop
add
xor
sub
sbb
cli
std
or
push
hlt
cmc
repz
add
add
cld
or
inc
push
add
repnz
stc
inc
inc
out
in
fcom
(bad)
fxam
in
loope
fdiv
sub
(bad)
es
ror
fstp
sbb
mov
in
mov
ret
retf
mov
(bad)
add
mov
scas
test
call
fcom
(bad)
xchg
mov
test
jle
jge
stos
jle
pusha
ja
jne
jae
sub
jae
xor
mov
je
loopne
pop
pop
pop
shl
push
push
pop
jecxz
pop
fs
dec
push
push
inc
inc
dec
dec
pop
mov
lahf
inc
aas
push
inc
xchg
inc
cmp
push
xor
mov
sub
ds
cmp
pop
ss
adc
push
sub
push
jns
or
or
or
adc
add
idiv
cld
stc
adc
push
dec
cmp
or
dec
stc
jmp
repz
add
aas
dec
in
fstp
loope
repz
jmp
xlat
inc
loope
rcl
loope
iret
fmul
cmp
mov
faddp
mov
ror
int
aam
adc
mov
mov
or
mov
cmps
stos
stos
mov
mov
cwde
pop
movs
xchg
xchg
call
lds
mov
stos
xchg
scas
cmp
jp
xor
lods
int
jno
jmp
push
popfw
mov
gs
pop
pop
pop
pop
pop
pop
xchg
push
push
push
in
push
push
arpl
dec
int3
dec
dec
dec
inc
inc
outs
cmovae
lods
dec
cmp
inc
mov
aaa
cmp
scas
pop
xor
xor
inc
push
sub
dec
and
and
push
jne
inc
sbb
sbb
xor
mov
or
push
or
and
add
or
(bad)
inc
(bad)
jbe
stc
clc
sti
or
test
repz
out
add
push
out
call
(bad)
jecxz
fst
fcom
fcmovbe
dec
cli
rcl
aam
dec
test
into
retf
retf
(bad)
dec
out
sar
mov
mov
mov
mov
sbb
shl
retf
mov
les
xchg
xchg
lods
jmp
nop
mov
xchg
jle
stc
popf
jp
jl
mov
mov
mov
xchg
ins
imul
push
aam
arpl
push
je
pop
jno
pop
jno
fs
push
pop
push
int3
jb
dec
push
retf
dec
dec
dec
shl
inc
aad
adc
aas
popa
mov
cmp
cmp
mov
xor
xor
test
sub
push
fsub
and
lea
sbb
sbb
cmp
adc
or
push
or
test
add
jge
(bad)
std
add
xor
jae
div
clc
cmc
pop
ins
sbb
out
icebp
adc
out
add
adc
in
repz
out
add
loope
add
xlat
(bad)
fisubr
dec
cld
iret
into
ror
inc
repz
enter
fucomi
les
mov
fdivr
shl
(bad)
fsubr
mov
pop
int3
mov
mov
xchg
xchg
cwde
xchg
lods
push
mov
mov
mov
xchg
mov
jg
or
fidivr
jno
out
imul
pusha
arpl
mov
xchg
sar
push
pop
push
ja
jl
dec
push
jno
push
pusha
mov
inc
push
dec
inc
mov
(bad)
inc
pop
dec
pop
arpl
xor
sub
sub
cmp
pushf
inc
sbb
adc
mov
adc
and
inc
scas
or
or
or
cmps
add
add
adc
add
das
sti
cli
stc
add
test
sbb
lock
bnd
jmp
jmp
loop
in
in
ficom
(bad)
(bad)
adc
rcr
xlat
inc
out
into
int
cmc
int3
hlt
popf
shl
mov
shr
ret
mov
les
sub
cmp
stos
stos
stos
ror
ror
pop
(bad)
mov
ret
pushf
fwait
sahf
lahf
scas
cdq
adc
(bad)
mov
mov
mov
stos
jge
enter
je
jb
mov
mov
cmp
nop
loop
pusha
pop
bound
nop
pop
pop
pop
jl
cwde
push
push
push
jl
iret
outs
dec
dec
dec
imul
adc
push
mov
pusha
pop
iret
xor
cmp
push
enter
push
add
and
xor
sbb
sbb
push
adc
adc
inc
sub
push
sub
test
add
sub
sbb
or
pop
pop
push
je
hlt
repz
or
jnp
dec
inc
fs
jecxz
jecxz
jmp
outs
cmp
add
add
std
mov
call
int
int3
retf
mov
rol
in
mov
mov
mov
mov
int
(bad)
xlat
movs
movs
cmps
shl
mov
xchg
cdq
mov
adc
nop
(bad)
xchg
lods
mov
test
jg
jle
dec
mov
movs
jne
jb
cmps
outs
outs
jno
jnp
xchg
push
test
sbb
ficom
adc
fld
or
les
inc
into
outs
aas
ds
dec
outs
cmp
lods
sub
xor
sub
dec
and
and
sbb
push
xor
or
sub
or
add
(bad)
std
add
pop
and
div
cli
nop
jo
lock
repnz
inc
repz
lock
jecxz
loope
adc
fcomp
fdiv
aam
rcl
(bad)
daa
in
(bad)
cs
enter
std
ret
ret
in
adc
fmul
mov
mov
mov
into
sub
mov
push
lods
inc
push
retf
retf
movs
cmp
aad
call
mov
xchg
push
mov
fs
mov
mov
add
ja
add
stos
outs
ins
jo
je
test
mov
addr16
rol
aad
push
push
push
pop
ins
in
push
movs
push
push
enter
dec
ja
ins
push
inc
aas
dec
jne
cmp
cmp
ss
das
cmp
sub
sub
dec
xor
daa
cmp
inc
sbb
test
cli
adc
test
or
adc
adc
push
sub
(bad)
inc
sbb
pop
pop
and
and
sbb
repnz
neg
fsubr
pop
aam
jmp
or
loop
jmp
fldenv
(bad)
aad
rcl
loop
std
stc
add
add
adc
(bad)
ror
retf
rol
out
mov
into
rcl
scas
push
aad
stos
stos
mov
stos
mov
mov
cmps
(bad)
gs
xchg
xchg
lahf
mov
(bad)
cwde
mov
sahf
mov
scas
test
jle
rol
jl
ja
jbe
mov
outs
ins
jp
push
mov
ja
addr16
pop
pop
arpl
mov
pop
bound
mov
push
dec
dec
mov
add
jo
inc
inc
ja
cmp
cmp
movs
dec
shl
xor
cmp
les
xor
data16
sub
xor
push
arpl
sbb
sbb
fwait
adc
sbb
xor
ja
push
add
pop
push
cwde
adc
or
push
or
or
lock
push
add
jmp
and
jecxz
loopne
loop
cmp
(bad)
loope
(bad)
xlat
jmp
cmp
retf
retf
int
leave
aad
fstp
das
add
retf
xor
mov
mov
stos
lods
mov
or
jmp
fstp
fwait
call
xchg
add
nop
(bad)
cwde
mov
xor
xchg
cmp
pop
jne
xchg
cmp
je
cli
push
push
push
imul
push
push
ret
jp
push
dec
pop
pop
push
jae
dec
dec
push
pop
push
push
dec
push
inc
aas
dec
arpl
inc
popa
ins
aaa
cmp
inc
cmp
xor
dec
jno
and
sub
sbb
and
daa
and
adc
sbb
sbb
sbb
pop
sbb
xchg
outs
jae
add
or
or
mov
cli
add
add
sub
repz
pop
add
push
sub
hlt
cli
repz
in
in
shl
mov
mov
mov
(bad)
sub
(bad)
aam
xor
(bad)
mov
mov
mov
mov
jmp
scas
scas
scas
(bad)
sub
movs
movs
retf
retf
loope
sahf
popf
pushf
fwait
call
xchg
xchg
xchg
sbb
mov
test
jle
clc
jnp
jns
js
jne
jae
jno
outs
outs
outs
ins
imul
movs
bound
pusha
pop
pop
pop
pop
pop
pop
jl
push
push
push
push
push
push
push
dec
dec
dec
adc
or
inc
inc
inc
inc
inc
inc
fs
ds
imul
(bad)
cmp
xor
inc
das
data16
das
sub
popa
xchg
sub
and
and
push
xor
sbb
and
sahf
adc
sbb
jg
push
or
or
adc
add
jno
mov
adc
(bad)
adc
nop
add
pop
xor
in
idiv
push
clc
call
repnz
out
loop
in
loopne
repnz
fld
push
into
int
not
rcr
iret
fstp
iret
rol
aad
into
ret
rol
in
shl
(bad)
idiv
mov
popf
cmps
enter
xchg
xchg
lahf
cmps
xchg
or
cld
adc
xchg
mov
adc
mov
lahf
jl
cmp
xchg
ja
outs
jge
jbe
jb
push
mov
pop
lds
mov
push
dec
dec
pop
dec
pop
mov
inc
inc
dec
bound
pop
cdq
stos
cmp
inc
dec
aas
inc
aaa
dec
inc
cmp
pushf
jno
sub
cmp
aaa
xor
xchg
and
sub
sbb
xor
sbb
sbb
pop
xor
push
femms
pop
and
push
pop
push
or
or
inc
(bad)
std
push
adc
std
push
cmc
test
cli
push
inc
pop
xor
jmp
jecxz
push
repz
push
dec
(bad)
in
pop
xlat
(bad)
fxam
xlat
inc
inc
ror
fdivr
in
adc
enter
xor
ret
xor
rcl
xchg
mov
lods
lods
mov
shl
cmps
cmps
scas
mov
adc
mov
lods
cmps
shr
xchg
movs
lahf
add
nop
(bad)
cwde
neg
mov
test
nop
mov
js
sbb
jge
je
imul
js
sahf
inc
arpl
sar
hlt
pop
pop
popa
addr16
jl
push
push
pop
bound
pop
jae
dec
dec
push
ins
push
push
push
inc
mov
scas
movs
cmp
test
xor
aas
push
les
xor
les
es
xor
sbb
sub
daa
and
and
lahf
jns
mov
sbb
push
add
ss
inc
sub
or
nop
cmc
hlt
stc
sbb
out
clc
add
cld
cli
adc
out
cmc
repnz
fucomip
out
in
pop
sub
xlat
(bad)
fyl2xp1
out
stc
cmp
into
xlat
dec
adc
leave
int3
fmul
xor
ret
ret
aam
add
mov
sub
mov
scas
sar
cmps
test
movups
stos
mov
add
mov
mov
arpl
stos
xchg
lea
or
xor
xchg
cmp
fcmovnbe
mov
cmc
pop
pop
bound
jge
push
push
pop
arpl
popa
je
dec
dec
push
ins
push
pop
push
inc
mov
scas
cmps
cmp
ss
inc
push
lds
cmp
mov
xor
sub
sub
cmps
add
es
or
sbb
xor
or
adc
adc
and
cli
stc
(bad)
sbb
repnz
cli
add
retf
out
adc
jmp
call
dec
(bad)
out
and
fcomp
out
in
inc
inc
ror
fsubr
xor
aam
jmp
jmp
repnz
mov
mov
or
stos
lods
stos
rcr
test
mov
neg
call
xchg
xchg
xchg
(bad)
repnz
mov
xchg
sbb
sbb
sub
xor
outs
outs
outs
ins
imul
jae
push
bound
sub
pop
jbe
push
push
push
push
cmps
push
pusha
mov
push
dec
dec
dec
dec
dec
outs
jge
inc
dec
imul
mov
bound
pop
and
pop
xor
cmp
es
mov
and
push
mov
sbb
push
mov
pop
push
pop
(bad)
pop
adc
adc
pop
or
xor
or
js
add
dec
(bad)
std
push
and
sti
jae
div
clc
bound
stc
adc
pop
jne
jmp
in
or
loop
sub
(bad)
dec
sbb
xlat
loopne
(bad)
dec
sbb
iret
sar
sar
xor
out
xor
mov
mov
fstp
scas
mov
out
stos
stos
mov
scas
test
out
mov
adc
fwait
or
call
cdq
add
nop
(bad)
cwde
mov
fmul
test
jle
jl
mov
js
jbe
jne
mov
outs
ins
jge
push
mov
fwait
bound
(bad)
pop
pop
push
push
ror
cwde
dec
dec
dec
dec
(bad)
jle
inc
dec
ror
jae
cmp
aaa
cmp
dec
mov
cmp
dec
push
lds
xchg
push
xor
push
leave
sbb
sbb
sub
scas
push
sbb
sbb
jge
or
ja
dec
add
or
adc
add
stc
add
cmc
hlt
std
outs
cmp
out
repnz
pop
fldl2e
out
push
sub
loop
or
loopne
cli
dec
push
(bad)
loope
pop
aam
(bad)
ror
into
int
cmp
out
add
ret
int3
in
push
sar
mov
mov
fcomip
mov
sbb
mov
shl
in
sahf
cmps
sbb
call
xchg
xchg
add
std
mov
mov
add
leave
jge
jg
cmp
mov
je
mov
shl
mov
push
pop
pop
pop
int
pop
push
pusha
lea
push
push
push
xchg
dec
dec
dec
pop
ja
inc
jne
inc
inc
push
aas
ds
push
pop
dec
cmp
push
pop
push
cmp
inc
pop
xor
test
sub
xor
es
pop
xor
inc
and
cmp
cmp
sbb
in
or
or
cmp
or
(bad)
std
pop
sti
cli
stc
clc
div
cmc
sbb
repnz
test
adc
jmp
jmp
in
loop
out
fsubp
add
fcmovu
neg
dec
out
shl
sub
retf
aam
out
out
and
ret
int3
jmp
shl
mov
out
mov
mov
mov
scas
scas
lods
xlat
scas
aad
xchg
shr
retf
xchg
leave
mov
ret
(bad)
rcr
test
(bad)
mov
mov
scas
jns
xchg
jno
jg
ins
mov
sbb
js
pop
xchg
jnp
push
mov
popa
pusha
gs
int3
imul
adc
push
arpl
push
dec
dec
dec
xchg
xchg
dec
dec
dec
inc
inc
inc
push
jae
inc
mov
cmp
cmp
dec
pop
inc
xor
cmp
inc
inc
pop
inc
push
inc
inc
push
aas
push
aas
cmp
cmp
cmp
cmp
inc
xor
cmp
repnz
sub
out
and
loope
pop
sub
daa
push
and
rcr
sbb
retf
pop
adc
in
push
mov
icebp
(bad)
in
mov
add
(bad)
movs
iret
mul
shl
cdq
(bad)
shr
(bad)
mov
mov
mov
fnstcw
popf
shl
xchg
retf
mov
test
xchg
movs
rol
pushf
mov
jbe
xchg
mov
scas
xchg
lods
outs
out
mov
test
popf
(bad)
ja
pop
fst
ins
imul
data16
pusha
pop
push
pop
iret
push
push
push
push
push
push
push
jnp
into
cmps
dec
dec
dec
je
(bad)
mov
pop
rcr
mov
pop
dec
mov
xor
xor
cmp
push
add
dec
add
dec
add
inc
inc
inc
(bad)
aas
and
cmp
aaa
and
out
das
push
sub
out
(bad)
cli
stc
add
(bad)
repz
sbb
popa
repnz
jmp
adc
pop
out
in
or
fucom
push
mov
jmp
xlat
aad
rcl
shl
iret
into
fimul
retf
ss
(bad)
in
rcl
mov
mov
xor
mov
lods
mov
test
scas
mov
sahf
scas
sbb
call
popf
mov
lea
xchg
add
ja
jg
jb
xchg
jle
enter
(bad)
jo
fs
mov
(bad)
pusha
pop
mov
pop
pop
jo
push
data16
jge
retf
lods
dec
dec
push
jbe
(bad)
cmps
inc
inc
dec
outs
push
mov
addr16
gs
arpl
sbb
pop
sbb
pop
pop
push
cmp
push
xor
dec
cmovnp
inc
pop
inc
and
aas
push
cmp
getsec
sti
or
stc
das
pop
add
adc
push
std
jne
cli
stc
clc
div
cmc
pop
adc
out
in
lock
jmp
adc
in
push
or
push
pop
cmc
add
aad
(bad)
jmp
sti
jmp
cmc
mov
out
fucomp
movs
jmp
jmp
cdq
jecxz
loope
(bad)
fst
xlat
ret
aad
sar
int
retf
mov
lds
ret
mov
add
lea
imul
pop
jnp
jns
cmps
jp
fnsave
mov
jle
sub
repz
jae
pop
pop
jae
pop
pop
je
add
pop
mov
push
dec
int3
lods
dec
dec
dec
jne
lds
inc
inc
aas
pop
jne
cmp
cmp
ss
call
sub
sub
and
and
pop
push
sbb
sbb
xchg
je
adc
(bad)
outs
femms
adc
or
or
aas
icebp
add
out
(bad)
(bad)
std
daa
add
cmc
hlt
push
clc
sbb
sbb
sbb
push
lock
adc
adc
push
call
or
push
loopne
into
add
add
(bad)
fdivr
(bad)
cli
aam
ret
hlt
mov
mov
jmp
mov
or
mov
(bad)
mov
mov
sbb
cmps
cmps
scas
mov
mov
stos
mov
add
pop
mov
(bad)
(bad)
call
xchg
mov
xchg
cmp
enter
jecxz
outs
ins
jbe
call
xor
mov
pop
pop
retfw
pop
popa
xor
jp
xchg
dec
dec
dec
jno
inc
inc
dec
jl
inc
inc
aas
scas
mov
cmp
jb
aaa
ss
cmp
sub
sub
xor
and
and
sbb
sbb
aas
jle
adc
dec
sbb
push
or
adc
add
add
sbb
std
std
sti
push
aaa
retf
mov
out
pop
in
jle
jmp
call
adc
loope
(bad)
(bad)
fcmovnu
jmp
shr
aas
cli
into
int
neg
fcmovne
vshufps
fucomp
into
inc
mov
in
loop
loopne
ficomp
fdiv
rcr
int3
stos
retf
cmps
(bad)
mov
mov
mov
xchg
mov
cmps
mov
stos
xchg
scas
cmp
jp
xchg
ja
xchg
jp
jp
xchg
js
pop
xchg
je
push
mov
push
mov
xchg
inc
and
pusha
jl
jp
js
jbe
je
jb
jo
outs
push
ins
cs
cmp
gs
bound
cmp
pop
int
das
cmp
sub
sub
push
daa
and
daa
pop
push
cs
push
inc
push
inc
inc
sbb
or
cmp
add
adc
xor
cli
or
sub
repnz
and
and
sbb
icebp
lock
sbb
out
push
fsubrp
sti
pop
out
out
jecxz
loope
(bad)
out
lods
(bad)
fcmovu
(bad)
ds
(bad)
shl
dec
int
retf
retf
mov
(bad)
jmp
in
loop
loopne
fidivr
fsub
shr
xchg
retf
xchg
ret
rcr
xchg
mov
nop
(bad)
aad
mov
scas
mov
mov
mov
sbb
js
push
xchg
je
push
mov
dec
mov
xchg
inc
and
jle
jl
ja
dec
dec
push
jne
dec
jb
dec
outs
xor
inc
aas
dec
push
dec
addr16
xor
aaa
das
cs
cs
cs
push
sub
sbb
dec
and
adc
inc
push
inc
sbb
or
sbb
cmp
add
adc
xor
xor
sub
add
or
lock
es
stc
or
div
push
repnz
or
out
(bad)
mov
cmovle
in
or
repz
fisttp
fcmovnu
fprem1
xlat
(bad)
out
(bad)
std
(bad)
cli
cli
aam
(bad)
hlt
mov
out
enter
(bad)
call
scas
loop
loopne
fidivr
fsub
mov
cwde
cmps
into
xchg
mov
loopne
call
mov
test
mov
nop
mov
mov
jb
xchg
push
pushf
jp
pusha
cwde
jbe
pop
xchg
jb
pop
nop
jno
push
mov
test
pop
test
push
jge
arpl
dec
mov
dec
bound
push
outs
push
push
inc
ds
aas
cmp
mov
pop
pop
aaa
pop
sbb
push
sbb
push
sub
dec
daa
dec
adc
inc
pop
inc
or
cmp
cmp
push
xor
cmp
adc
(bad)
std
sbb
cli
stc
push
div
push
jb
repnz
cli
jnp
in
in
push
pop
lock
data16
in
pop
jmp
fsubp
push
add
(bad)
add
ret
repnz
or
iret
fdiv
(bad)
ror
sub
mov
ret
ret
out
mov
jecxz
(bad)
mov
push
lods
lods
mov
mov
mov
mov
into
mov
xchg
mov
add
test
cmp
pushf
mov
mov
mov
scas
xchg
lods
push
xchg
test
cmps
xchg
movs
bound
and
jo
cdq
push
outs
xchg
push
fsub
imul
inc
popa
mov
pop
pop
lds
push
push
push
push
push
jnp
jp
ja
lds
dec
outs
push
mov
addr16
sbb
pop
inc
pop
pop
pop
cmp
push
pop
push
xor
dec
cmovnp
inc
pop
inc
and
cmp
sti
aaa
sbb
repz
adc
jmp
cmp
stc
add
loope
pop
fcomip
sbb
icebp
sbb
out
out
adc
push
jecxz
loope
out
(bad)
(bad)
fcmovu
cmp
(bad)
fst
rcl
shl
call
int
retf
retf
mov
pop
jmp
sar
clc
fnstenv
out
fcomi
fyl2x
xlat
hlt
rcl
shl
mov
ret
(bad)
mov
(bad)
loope
in
jecxz
out
ins
xchg
xchg
add
mov
(bad)
cwde
lods
shr
movs
iret
mov
daa
call
jno
and
adc
outs
mov
arpl
pop
test
pop
add
jp
push
ja
mov
jo
inc
ins
in
scas
jmp
out
arpl
movs
out
xor
(bad)
pop
xlat
fwait
(bad)
sub
xor
daa
dec
leave
xchg
int
pop
sub
sbb
sbb
jae
adc
xor
push
push
inc
or
or
add
jg
add
sbb
jp
cld
sti
xor
div
sub
or
jno
in
jmp
and
in
add
cli
cmc
pop
(bad)
(bad)
fcomi
adc
(bad)
aad
or
ror
test
add
(bad)
cli
push
sar
and
out
inc
mov
mov
jmp
ret
cmp
test
movs
mov
sahf
popf
mov
cmp
daa
cwde
xchg
xchg
int3
and
xchg
nop
lods
(bad)
and
mov
xor
jnp
add
jecxz
jb
fst
test
push
push
fwait
bound
and
ins
push
dec
push
imul
arpl
scas
pop
imul
dec
pop
dec
dec
inc
push
(bad)
ins
aaa
ss
aaa
inc
xor
xor
sub
xor
aaa
sub
xchg
pop
and
lea
sbb
aas
dec
adc
sbb
mov
sub
add
dec
add
push
ud2
std
cmp
repz
lock
out
xchg
jmp
stos
loop
loope
(bad)
(bad)
fcmovu
(bad)
xlat
(bad)
aad
rcl
ror
iret
into
int
retf
retf
mov
rcl
mov
ins
mov
mov
mov
mov
mov
mov
cmps
fsubr
cmps
out
lahf
sahf
popf
pushf
fwait
call
pusha
xchg
xchg
nop
mov
lea
test
jg
xchg
test
adc
jge
jmp
movs
loop
push
fisub
pusha
mov
pop
pop
xchg
int3
push
push
push
jle
push
push
pop
mov
dec
dec
dec
pop
push
cmp
inc
inc
dec
js
cmp
cmp
cmp
inc
outs
sahf
xor
xor
push
xor
and
and
sub
sbb
sbb
adc
es
dec
jnp
or
jb
push
add
(bad)
(bad)
(bad)
es
cld
sti
add
pop
cmc
cmc
hlt
pop
cli
sub
out
in
repz
call
in
in
(bad)
lock
fcmovu
cmp
fsubrp
aam
xor
jecxz
hlt
iret
into
into
hlt
out
retf
movs
fadd
ret
ret
ror
in
mov
mov
mov
mov
stos
test
movs
mov
sahf
popf
xlat
popf
call
xchg
xchg
xchg
mov
lea
xchg
call
mov
jl
jns
adc
je
adc
outs
in
mov
add
data16
pusha
in
xchg
pop
pop
pop
xchg
in
pop
push
push
jne
push
push
push
fld
dec
dec
inc
jle
inc
inc
inc
jns
inc
ds
cmp
retf
xor
ret
sub
sub
es
mov
ss
mov
sbb
push
mov
push
adc
adc
push
inc
lods
or
or
pop
add
add
mov
or
cld
sti
xchg
add
out
div
add
adc
out
or
add
loopne
fimul
mov
in
jecxz
loop
pmulhw
jecxz
xlat
arpl
call
and
retf
ror
lds
(bad)
retf
ret
mov
ret
mov
stos
rcl
cmps
movs
scas
stos
mov
popf
cmps
shl
lds
fwait
enter
mov
pop
movs
test
or
jbe
je
iret
test
ja
add
jp
jo
outs
jne
idiv
jno
outs
bound
clc
push
push
pop
bound
and
dec
dec
dec
dec
movs
fistp
inc
dec
pop
sbb
cmp
aaa
inc
dec
mov
sub
cmp
aaa
xor
xor
inc
sbb
and
imul
adc
jnp
push
pop
adc
in
ins
pop
push
cvtpi2ps
add
inc
(bad)
inc
cmp
clc
idiv
gs
hlt
repz
add
test
stc
out
adc
sbb
loopne
fcomip
jecxz
cmp
(bad)
dec
and
aad
or
add
fcmovne
(bad)
and
ret
leave
mul
mov
lock
mov
mov
sbb
out
stos
stos
mov
push
movs
movs
mov
popf
popf
pushf
cmps
sar
xchg
xchg
xchg
cdq
int
xchg
xchg
nop
xchg
(bad)
repz
jmp
or
call
lods
into
jo
outs
cmp
imul
bound
addr16
mov
pop
pop
ins
gs
scas
push
push
push
jl
push
push
pop
xchg
dec
pop
ja
inc
ret
inc
inc
inc
bound
ds
mov
dec
popa
push
pusha
dec
movs
(bad)
xor
sahf
std
push
sub
sub
push
ds
ds
ds
ds
sbb
xchg
jnp
push
sbb
sub
cmp
icebp
and
xor
in
sbb
sub
fldenv
adc
and
ficomp
or
sbb
sbb
push
or
adc
retf
or
pop
inc
fstp
in
mov
fdivrp
mov
pop
iret
into
xlat
imul
icebp
movs
in
inc
ror
call
mov
mov
mov
ret
scas
lods
mov
stos
test
or
leave
xchg
scas
retf
mov
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
xchg
in
jnp
mov
lahf
sbb
push
xchg
jne
push
(bad)
jno
dec
mov
dec
xchg
inc
sub
jg
jge
jnp
jns
je
dec
dec
push
jb
mov
imul
ins
cmp
inc
fs
cmp
push
pop
sub
xor
cmp
and
and
push
sbb
inc
sbb
aas
and
push
cmp
cmp
ss
xor
xor
xor
cs
sub
sub
sub
es
and
push
loopne
add
fcomp
add
fcom
adc
push
adc
retf
(bad)
loopne
rol
aam
std
mov
push
into
int
imul
test
ret
mov
mov
mov
mov
sbb
stos
stos
test
movs
fld
mov
pushf
fwait
call
stc
xchg
xchg
xchg
mov
mov
test
jp
jl
ret
mov
jbe
pop
cwde
jb
pusha
xchg
outs
xchg
pop
nop
push
pop
mov
push
mov
push
test
dec
sbb
jl
jp
js
jbe
je
jb
jo
outs
cmp
xor
mov
sub
pop
and
push
call
es
xchg
push
sbb
sbb
push
ds
sbb
jle
or
or
push
cs
add
push
or
stc
cli
neg
cmc
pop
xor
lock
out
in
call
jmp
out
out
in
jecxz
repnz
fucom
add
cmp
(bad)
mov
push
sub
ds
mov
rol
mov
mov
mov
scas
scas
lods
mov
stos
test
mov
mov
popf
lods
fwait
call
xchg
xchg
xchg
stos
(bad)
mov
stos
xchg
xor
ja
jne
jae
jno
outs
outs
ins
fild
imul
arpl
and
pop
aas
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
aas
ds
cmp
ss
xor
cs
sub
es
and
push
sbb
sbb
push
adc
adc
push
or
or
push
add
add
(bad)
std
add
cli
stc
cld
div
cmc
stc
repz
cmc
out
out
in
icebp
jmp
jmp
in
loop
loope
(bad)
(bad)
fcmovu
fcmovnbe
(bad)
aad
rcl
rcl
iret
into
int
retf
retf
mov
rcl
mov
mov
in
mov
icebp
scas
scas
lods
or
cmps
cmps
movs
mov
sahf
popf
sbb
cdq
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
add
xchg
jp
jns
jbe
jne
jb
jno
outs
ins
ins
retf
push
push
arpl
pusha
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
aas
ds
cmp
xor
xor
das
cs
das
daa
es
sub
push
sbb
and
push
adc
sbb
push
or
adc
push
add
or
(bad)
std
or
cli
stc
add
repz
repz
out
in
out
jmp
jmp
out
loop
jecxz
(bad)
jecxz
fcmovu
call
rcl
shl
iret
into
int
retf
retf
mov
ror
mov
mov
mov
scas
scas
lods
mov
stos
test
cmps
mov
sahf
popf
sahf
fwait
call
xchg
xchg
xchg
lahf
(bad)
mov
cdq
xchg
add
ja
jne
jae
jno
outs
outs
ins
jbe
push
ins
outs
arpl
fs
pop
pop
push
push
push
push
popa
push
push
push
push
dec
dec
dec
pop
dec
dec
dec
dec
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
dec
ds
inc
inc
cmp
inc
aaa
cmp
jne
add
add
push
jne
add
add
add
jne
add
add
add
and
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
cs
mov
call
repz
inc
(bad)
jb
push
add
inc
jns
and
int3
iret
mov
in
jb
mov
push
adc
jo
add
xchg
into
mov
add
mov
sahf
inc
mov
fwait
js
mov
add
xlat
pop
mov
mov
std
pop
sub
imul
imul
xchg
or
cmc
test
mov
sbb
or
xchg
das
cmp
xchg
xor
cmp
adc
push
dec
mov
sub
inc
mov
call
out
outs
mov
pop
ins
aaa
sti
ja
jl
in
(bad)
adc
jmp
or
mov
iret
ss
cdq
ja
xchg
dec
fsub
(bad)
dec
daa
mov
mov
imul
adc
ins
mov
and
jle
cdq
faddp
dec
aad
mov
sbb
inc
add
jae
pop
test
addr16
add
push
inc
cmps
shl
pop
movs
or
in
sub
xchg
(bad)
imul
mov
mov
loope
outs
jbe
pop
xor
fs
cmp
mov
push
push
in
movs
add
out
stc
push
cmps
and
push
aam
xchg
in
dec
loope
test
(bad)
cmp
retf
sub
ds
sbb
cld
shl
adc
outs
stos
inc
scas
inc
xchg
adc
les
xor
sub
mov
pop
lods
inc
std
jge
aaa
mov
shr
in
and
jno
(bad)
jecxz
test
add
xor
push
ret
sub
xor
sbb
scas
mov
iret
(bad)
loope
jns
dec
cdq
das
jne
cmc
adc
jle
pop
pusha
fsubr
inc
ret
sbb
ret
pushf
dec
add
mov
cdq
sub
or
mov
jnp
dec
idiv
hlt
cmp
neg
out
push
or
js
xchg
imul
call
push
xchg
repz
inc
jle
enter
call
jnp
pusha
aas
shr
call
std
ds
sbb
pop
outs
mov
cmps
jnp
stos
mov
rol
push
mov
mov
inc
or
fidiv
mov
movs
mov
push
dec
lahf
push
call
data16
clc
pop
push
or
and
mov
add
icebp
jbe
ret
data16
push
or
popf
fist
imul
(bad)
scas
push
ja
jmp
daa
xor
push
cwde
xchg
into
sbb
sbb
movs
jns
jo
add
enter
cmp
mov
jge
in
or
push
sti
rol
popf
mov
es
fld
add
xchg
mov
xlat
mov
mov
lea
test
and
push
sbb
in
js
lods
cmp
jb
jg
in
mov
push
hlt
aas
xchg
pop
es
add
repnz
arpl
rcl
shr
in
shr
test
jnp
mov
xlat
aas
cmp
out
sbb
dec
inc
popf
mov
mov
mov
es
inc
lahf
enter
outs
sub
mul
inc
xchg
mov
cli
sbb
push
cmps
mov
addr16
adc
loop
push
sbb
mov
in
nop
mov
jae
test
cmps
adc
jmp
mov
call
lock
dec
inc
js
pushf
and
cmp
aaa
ss
mov
data16
sub
es
push
xchg
and
sbb
push
adc
adc
push
or
or
push
add
add
(bad)
std
cld
sti
cli
stc
clc
div
cmc
hlt
repz
xor
das
in
jmp
jmp
lock
loope
adc
or
(bad)
aad
rcl
sar
into
int
out
leave
jmp
mov
faddp
rcr
fisttp
sub
and
mov
int3
fsubr
test
inc
aam
mov
mov
xchg
xchg
xchg
inc
les
lea
xchg
add
xchg
jbe
je
jae
jo
outs
ins
ins
imul
lea
popa
(bad)
pop
pop
pop
jecxz
pop
pop
rcl
or
push
push
dec
dec
dec
mov
dec
dec
push
inc
inc
inc
dec
inc
inc
inc
gs
ds
inc
aaa
ss
xor
cs
sub
es
and
push
sbb
sbb
push
adc
adc
or
or
pop
push
add
add
(bad)
std
cld
sti
add
xor
xor
out
hlt
in
(bad)
jmp
jmp
inc
jecxz
loope
fistp
fnstenv
aam
rcl
iret
(bad)
loope
ror
out
fcmovnb
retf
ret
les
mov
mov
mov
mov
lods
mov
inc
stos
sbb
adc
or
mov
xchg
call
lea
lahf
mov
test
xchg
jnp
js
jne
jne
jb
outs
fisubr
ins
je
add
outs
arpl
arpl
popa
push
pop
bound
push
ds
pop
push
push
push
cmp
dec
pop
dec
jae
push
inc
pop
inc
ins
inc
dec
aas
pop
inc
cmp
bound
popa
xor
pop
das
cmp
jne
addr16
daa
jge
dec
and
and
sbb
adc
push
sete
aaa
or
or
add
std
stos
(bad)
and
clc
pop
repz
int3
repnz
cli
jmp
in
adc
hlt
in
out
loope
(bad)
loopne
fucomi
(bad)
fild
aad
shl
aad
iret
fmul
out
iret
cmc
leave
(bad)
(bad)
out
leave
out
ret
rol
out
ret
jmp
mov
out
mov
mov
scas
add
add
add
or
xchg
sbb
sub
mov
lea
xchg
test
jg
and
jae
jne
jno
ins
xor
jbe
xchg
push
gs
test
pop
mov
pop
push
fs
rcr
push
pop
dec
aad
mov
dec
mov
push
inc
inc
inc
dec
cmp
inc
aaa
and
xor
dec
das
xchg
sub
and
cs
lea
jbe
sub
xchg
sbb
cmps
pop
xchg
adc
scas
movhps
fisttp
test
add
cli
add
cli
add
(bad)
out
or
jmp
repnz
call
sbb
call
fsub
(bad)
shr
(bad)
(bad)
fcmove
xor
(bad)
into
aam
dec
retf
into
mov
enter
and
mov
lods
cdq
mov
mov
cmps
into
lods
scas
stos
mov
fldenv
out
mov
fwait
int
mov
mov
xchg
or
jg
jge
xor
les
jno
ja
ins
ins
imul
jne
gs
popa
pop
pop
pop
ins
pop
pusha
bound
iret
push
push
push
push
push
push
push
pop
dec
xchg
pop
push
push
rol
dec
inc
inc
inc
push
aas
inc
inc
inc
inc
mov
cmp
cmp
xor
cmp
sub
xor
sub
xor
ins
das
and
xchg
sbb
sbb
sbb
adc
or
or
pop
push
adc
jnp
sbb
sbb
stc
inc
add
adc
adc
repz
in
jmp
imul
out
in
jecxz
loope
loopne
(bad)
jmp
adc
(bad)
rcl
rcl
iret
sbb
rcl
inc
leave
add
repz
ret
enter
mov
leave
mov
mov
mov
rep
xlat
test
test
mov
popf
leave
fwait
lods
call
adc
lahf
mov
test
jg
jle
jnp
add
out
jne
jae
jno
jo
ins
jb
push
jmp
arpl
jo
test
cmps
imul
push
pop
push
bound
pop
dec
dec
int
xchg
dec
add
push
inc
mov
aas
mov
cmp
inc
ss
xor
xchg
sub
jb
and
and
jns
popa
sbb
and
adc
imul
btr
or
push
add
movs
paddd
dec
or
stc
clc
test
add
repnz
stc
arpl
inc
out
in
in
loope
out
mov
fnstenv
(bad)
(bad)
in
push
fistp
fnsave
and
enter
rol
sbb
mov
mov
scas
or
test
mov
lahf
sahf
sahf
lods
fwait
sahf
mov
in
xchg
cmc
xchg
xchg
nop
mov
add
xchg
enter
fdiv
jne
je
jno
jge
jnp
imul
loope
data16
lods
ins
or
pop
aad
pop
pop
push
push
mov
dec
mov
int3
dec
dec
dec
pop
inc
mov
mov
aas
sar
inc
test
xor
sub
cmp
jo
ret
and
sub
sub
sbb
adc
and
pop
sbb
or
lock
add
add
std
dec
or
sti
stc
test
inc
std
fsubr
in
jmp
not
jmp
shl
loope
cmp
rcr
fcmovnu
ss
xlat
aad
xor
int3
ror
int
fld
retf
leave
(bad)
int3
into
rol
ret
ror
test
mov
mov
lds
lods
mov
cmps
mov
in
scas
mov
test
mov
ficomp
nop
xchg
jb
xchg
xchg
jg
xchg
nop
jns
test
movs
jae
jp
jno
ins
mov
push
imul
outs
jae
arpl
ins
ins
pusha
pop
pop
test
push
pop
push
push
movs
popa
cmp
push
dec
mov
dec
pushf
push
xor
inc
cwde
dec
sub
cmp
cmp
nop
inc
push
xor
pushf
xor
sub
test
or
xor
and
push
sbb
add
and
adc
or
sbb
push
adc
add
call
pop
loop
pop
cmc
dec
add
repz
inc
sti
shr
sti
jmp
cmc
jecxz
out
das
loop
fnstsw
jmp
xor
and
jecxz
xor
fst
(bad)
rcl
ds
push
sar
(bad)
rol
ret
mov
das
mov
sub
mov
clc
mov
cmps
mov
hlt
lods
pop
mov
sbb
mov
call
mov
or
(bad)
mov
jle
jp
pop
jae
jno
jge
ins
jb
jo
push
imul
pop
fs
pusha
pop
mov
push
push
pop
push
push
dec
cwde
pop
pusha
dec
dec
inc
xchg
push
cs
dec
inc
nop
dec
sub
inc
cmp
mov
xor
adc
xor
xor
das
or
dec
sbb
dec
pop
pusha
and
inc
adc
push
adc
or
add
push
inc
rol
stc
inc
add
clc
cli
or
out
in
repnz
stc
out
cmp
repz
loope
call
and
adc
out
fcmovu
xor
loope
sbb
mov
shr
retf
les
(bad)
iret
aad
leave
push
mov
mov
mov
inc
scas
mov
inc
stos
stos
test
movs
mov
mov
popf
fwait
(bad)
fstp
xchg
xchg
call
mov
mov
mov
or
jae
mov
imul
ins
jo
arpl
pop
pop
pop
loop
pop
popa
cmps
pop
push
push
clc
xchg
push
push
push
dec
iret
dec
push
push
lea
inc
retf
inc
inc
inc
sar
dec
jg
cmp
lods
jle
xor
xor
xor
sub
daa
es
mov
pop
sbb
sbb
pushf
adc
adc
push
push
push
or
or
add
add
add
cld
sti
add
add
cmc
cmc
repz
out
out
in
jb
ss
out
in
sub
loope
fbld
in
(bad)
xlat
jle
(bad)
rcl
rcl
rcl
bswap
retf
leave
mov
enter
dec
rol
ret
mov
mov
retf
mov
ret
scas
scas
lods
fs
lods
test
test
scas
mov
sahf
fwait
call
xchg
xchg
xchg
inc
ficom
mov
xchg
int
jg
jge
jnp
xor
ja
pop
mov
hlt
ins
jo
mov
or
out
bound
pop
pop
pop
adc
push
pushf
pop
inc
dec
dec
dec
push
xchg
dec
inc
inc
inc
retf
dec
inc
inc
aas
cmp
cmp
mov
xor
das
mov
sub
and
and
ins
and
pop
and
bound
femms
or
push
or
add
add
jg
add
sti
stc
test
div
cmp
in
jecxz
stc
fsubp
icebp
fstp
(bad)
fcmovbe
(bad)
aad
rcl
fisub
ror
int
and
leave
enter
enter
sar
mov
sbb
mov
lods
stos
cmp
jmp
cmp
movs
mov
sahf
popf
xor
xchg
xchg
int3
jmp
pop
movs
iret
cdq
and
xchg
add
iret
js
je
clc
jno
jge
ins
ins
imul
jmp
pop
pop
pop
pop
pop
fcom
jne
pop
fist
jp
dec
dec
dec
dec
fisttp
dec
add
aam
inc
cmp
cmp
int3
xor
xor
cs
mov
daa
and
and
movs
xor
sbb
fidiv
adc
adc
or
or
or
add
in
add
sti
mov
div
cmc
jp
lock
mov
out
in
in
jmp
jmp
call
fistp
fldcw
fcmovu
cmc
aad
rcl
xor
int
retf
push
loope
iret
fld
mov
mov
ret
mov
mov
scas
je
idiv
cmps
movs
movs
mov
movs
cmps
ret
lahf
mov
xchg
xchg
xchg
pop
xchg
xchg
cwde
mov
mov
mov
jge
jnp
jns
ja
jp
jl
jne
outs
outs
ins
ins
imul
ins
ins
outs
ja
je
pusha
pop
pop
pop
pop
pop
and
pusha
call
dec
dec
dec
adc
push
mov
inc
inc
inc
inc
inc
inc
aas
add
inc
inc
test
xor
xor
div
ss
inc
sub
daa
es
sub
aaa
sbb
sbb
pop
push
adc
jo
sub
or
int3
or
or
add
cld
sti
cli
stc
mov
not
icebp
lock
out
in
in
jmp
out
out
lock
jmp
loopne
pop
frstor
(bad)
aad
rcl
rcl
xchg
rcl
aam
int
mov
rol
out
mov
mov
mov
mov
stos
test
push
test
cmp
call
pushf
cmp
mov
mov
cmp
cld
jnp
jle
sub
jae
jno
outs
out
ins
xor
jb
imul
pop
and
bound
xchg
push
push
push
push
push
push
push
push
push
cwde
pop
cmps
dec
mov
inc
inc
inc
inc
inc
or
dec
jge
cmp
ss
outs
xor
sub
sub
sub
and
sbb
call
pop
pop
adc
femms
or
push
adc
or
add
add
jle
ret
add
sti
dec
cmc
hlt
repz
jo
mov
ss
ret
out
inc
out
loop
jbe
loop
jb
xor
or
fcom
aam
pop
jmp
and
add
retf
lds
ror
mov
mov
int
mov
test
stos
stos
test
mov
mov
cdq
pushf
mov
push
repnz
(bad)
mov
fwait
xchg
test
in
add
ja
xlat
jbe
jb
jbe
ins
jne
imul
adc
push
jns
ins
hlt
pop
mov
mov
pop
push
pop
inc
push
test
xchg
scas
dec
dec
dec
inc
pop
dec
dec
dec
inc
inc
call
cmp
cmp
inc
cmp
sub
cmp
sub
mov
and
push
sbb
cmp
adc
adc
adc
adc
push
bound
push
imul
pop
add
test
push
stc
mov
cmc
hlt
repz
hlt
clc
jle
inc
jmp
dec
jmp
jmp
(bad)
fcom
fsubr
rcr
in
sub
retf
retf
leave
test
mov
pop
shl
add
adc
scas
lods
das
stos
scas
mov
lods
add
fmul
movs
mov
push
movs
jl
not
xchg
xchg
(bad)
xchg
dec
xchg
js
call
test
jne
fstp
loope
ja
jne
jae
jp
je
ins
xchg
shr
lods
sbb
popa
mov
pop
pop
pop
imul
push
or
dec
dec
dec
push
jmp
stos
inc
aas
ds
dec
aaa
xchg
xor
xor
xor
mov
pop
mov
and
and
aaa
sbb
das
sbb
push
sbb
adc
sbb
push
pop
and
or
push
add
inc
call
xor
cld
stc
clc
div
cmc
clc
cld
add
push
out
jmp
jmp
(bad)
call
loopne
(bad)
lock
loopne
(bad)
cmp
xchg
inc
ror
into
int
ror
rcr
int
lds
xor
rol
rol
rol
mov
mov
mov
ret
mov
mov
mov
test
movs
mov
xor
add
xchg
xchg
call
lea
mov
mov
xchg
jg
out
jle
jp
mov
jle
jns
jno
loope
ins
ins
imul
jo
imul
fs
popa
pop
ret
pop
pop
pop
(bad)
gs
push
push
push
int3
pop
push
dec
push
dec
leave
pop
dec
dec
dec
inc
(bad)
push
inc
inc
inc
inc
mov
cmp
xor
xor
sar
sub
les
(bad)
das
and
pop
sbb
sbb
(bad)
and
adc
lea
mov
or
or
add
ret
or
sti
sti
stc
int3
add
outs
push
out
icebp
in
retf
jmp
in
in
pop
in
(bad)
(bad)
mov
aad
loope
rcl
iret
rcr
retf
retf
leave
(bad)
aad
(bad)
(bad)
rol
mov
mov
les
scas
lods
scas
stos
retf
cmps
stos
movs
int3
mov
shl
pushf
cdq
mov
xchg
xchg
xchg
xchg
ret
(bad)
xchg
lea
mov
add
jnp
mov
js
int
jb
jae
sar
imul
data16
pop
retf
push
pop
pop
push
shl
push
push
fstp
dec
dec
dec
loop
dec
inc
inc
inc
jmp
inc
inc
inc
aas
in
dec
cmp
cmp
push
cmp
add
das
xor
cs
or
and
and
sbb
sub
pop
pop
adc
adc
adc
or
pop
or
add
(bad)
std
add
cli
stc
cli
mul
add
hlt
(bad)
out
or
call
repz
jecxz
push
in
(bad)
fcompp
push
out
aad
shl
loope
iret
iret
int
fcmove
leave
leave
(bad)
out
aam
ret
ret
shr
mov
enter
mov
ret
mov
mov
nop
mov
adc
retf
mov
call
xchg
xchg
xchg
mov
mov
xchg
mov
jle
jnp
add
call
jnp
imul
arpl
outs
pop
pop
pop
pop
xor
push
das
arpl
push
dec
ds
dec
dec
dec
dec
pusha
pop
inc
inc
inc
inc
pusha
push
inc
aas
aas
cmp
cmp
inc
xor
xor
pusha
inc
cs
sub
daa
and
and
bound
sbb
sbb
data16
adc
adc
prefetch
or
or
gs
add
add
sbb
(bad)
std
std
sti
dec
or
idiv
cmc
dec
add
icebp
out
test
icebp
sti
out
in
jmp
loope
(bad)
in
fist
(bad)
fucomip
aad
rcl
(bad)
iret
repnz
aam
leave
hlt
(bad)
retf
ret
test
enter
mov
cli
mov
mov
lods
mov
stos
shr
int
mov
popf
mov
int3
cdq
rcl
xchg
mov
int
mov
iret
xchg
retf
xchg
sub
cmp
mov
lahf
ins
push
jge
mov
arpl
pop
xchg
pop
and
push
(bad)
push
and
rcl
es
ret
dec
inc
dec
rol
inc
dec
push
aas
scas
cmp
mov
xor
inc
xor
sub
mov
scas
and
test
sbb
adc
stos
xcrypt-ecb
cmps
or
mov
add
std
xchg
sti
dec
add
std
add
cmc
cmps
jmp
jmp
lods
jecxz
jmp
ds
fnstenv
shr
int
retf
rcr
int
shl
mov
mov
mov
mov
pop
mov
test
mov
xchg
mov
lea
xchg
or
add
bound
push
jb
jns
outs
jge
jb
pop
addr16
mov
pusha
jno
jns
imul
js
gs
outs
pop
js
pop
dec
jno
ja
pop
dec
jbe
es
push
inc
js
and
push
inc
ss
imul
xor
imul
es
cmp
add
aaa
push
addr16
sbb
sbb
adc
adc
pusha
push
and
or
push
popa
push
in
and
or
and
je
pop
imul
out
das
out
jmp
lock
in
loop
jmp
dec
fsub
(bad)
rcr
in
sub
int3
aad
retf
sub
(bad)
iret
fld
inc
les
mov
inc
mov
inc
mov
mov
lods
lods
test
mov
stos
bound
and
xchg
push
xchg
test
xchg
sbb
xchg
sbb
xchg
jge
jl
or
jo
jns
imul
jae
gs
fs
imul
ins
pop
popa
pop
push
pop
addr16
pop
push
jp
test
js
xor
dec
inc
jle
lock
dec
inc
or
aas
dec
xor
inc
das
dec
das
sub
cmp
sub
push
fstp
push
sbb
dec
pop
js
fist
dec
adc
ror
or
fild
cmp
add
call
hlt
std
mov
cmp
out
imul
icebp
test
aas
out
jmp
loope
loope
in
fild
(bad)
fist
fst
xlat
stos
retf
xchg
stos
les
mov
stos
mov
stos
mov
lods
mov
mov
mov
stos
pop
stos
cmps
scas
movs
pop
movs
stos
lods
mov
cmps
fwait
fwait
push
cdq
ja
cmps
xchg
dec
xchg
ja
xchg
pop
jbe
jg
aas
xchg
pop
xchg
jge
jnp
test
jle
jno
outs
jle
mov
imul
pop
mov
pop
jge
mov
push
and
dec
push
lea
dec
dec
dec
inc
dec
pop
inc
dec
inc
inc
dec
xchg
inc
cmp
cmp
xor
inc
xor
jle
je
push
mov
cmp
dec
sub
lea
imul
pop
inc
push
adc
and
inc
adc
or
add
or
std
cmp
div
clc
enter
xor
iret
cli
(bad)
jmp
in
xlat
hlt
inc
out
out
out
inc
loope
loopne
jecxz
fnstenv
(bad)
jecxz
aad
aam
fisttp
xlat
cmp
iret
aad
sbb
sbb
add
xor
xor
pop
scas
shl
shl
retf
popf
xchg
popf
les
mov
xchg
mov
mov
xchg
cmps
ja
jns
jns
jno
jae
jae
imul
xchg
gs
popa
mov
bound
mov
pop
push
pop
adc
dec
push
xchg
dec
mov
stos
push
mov
mov
(bad)
dec
retf
inc
stos
inc
out
inc
in
movs
cmp
ds
ss
xor
cmp
xchg
movs
xor
sub
scas
add
xchg
bound
sbb
sbb
imul
adc
push
gs
outs
pop
sahf
or
imul
push
sti
test
push
neg
loopne
push
lock
out
jns
jmp
dec
out
jmp
(bad)
fistp
fld
push
adc
ror
ror
int3
pop
(bad)
mov
rcr
dec
rcr
mov
mov
mov
mov
scas
xchg
test
pop
cmps
mov
sahf
sub
or
xchg
jno
ja
(bad)
nop
imul
test
or
pop
jg
jns
jle
jp
ja
js
je
outs
dec
jae
outs
retf
push
pop
popa
aam
and
pop
inc
pop
enter
inc
dec
ret
push
lods
dec
ror
test
inc
mov
sbb
stos
cmp
aas
fnsave
ss
cmp
xor
sub
and
sbb
push
push
and
mov
adc
or
movs
lgs
push
mov
add
add
(bad)
mov
clc
movs
in
pop
out
es
out
call
push
loop
out
fimul
je
test
inc
(bad)
outs
fisubr
int3
pop
ror
retf
and
dec
les
(bad)
ret
pop
mov
mov
cmp
sbb
cmps
(bad)
stos
call
xchg
and
add
mov
xchg
out
adc
lock
jp
jl
and
iret
ins
stc
jo
jbe
push
adc
fs
push
pop
out
mov
orps
pop
rcr
push
rcl
repz
mov
inc
mov
fimul
ds
inc
fadd
lods
cmp
dec
cmp
inc
xor
movs
and
cmp
mov
ss
mov
adc
or
add
add
or
(bad)
std
or
sti
stc
inc
div
cmc
add
repz
add
out
in
std
jmp
jmp
jmp
ret
jecxz
loop
loopne
fiadd
fdivr
rol
int3
fmul
ror
enter
(bad)
out
aas
rcl
mov
jb
jg
xchg
shr
cmps
ret
popf
mov
xchg
popf
xchg
mov
(bad)
cwde
lea
xchg
and
jnp
jns
jl
jne
test
jbe
outs
jp
jecxz
push
call
jb
fs
pop
icebp
popa
cdq
pop
pop
push
mov
push
(bad)
pusha
mov
dec
dec
fcomp
dec
dec
inc
test
inc
inc
inc
aas
mov
cmp
xor
sub
sub
(bad)
and
mov
sub
daa
pop
sbb
adc
nop
or
mov
sbb
adc
sti
adc
mov
stc
imul
js
jle
test
mov
in
cmp
fucom
fadd
(bad)
aad
inc
aam
or
push
aas
into
retf
pop
leave
or
enter
jbe
ret
mov
clc
mov
sub
and
sbb
aam
movs
mov
sahf
fistp
ficom
xchg
lea
xchg
lea
jge
jnp
jns
ja
jne
jae
jno
outs
sub
push
push
data16
pusha
pop
pop
pop
pop
test
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
push
inc
js
inc
inc
inc
inc
inc
aas
ds
cmp
ss
xor
cs
sub
es
and
outs
sbb
sbb
push
adc
out
push
or
push
pop
or
or
add
add
idiv
cmc
push
div
std
out
cli
in
cli
jmp
jmp
hlt
jecxz
loope
fucomip
fucomp
fucomi
fldln2
xlat
jmp
iret
loop
in
fmulp
loope
fcmovb
faddp
(bad)
rcr
sar
fdiv
aam
mov
mov
mov
jnp
cmp
jne
xor
adc
and
pop
cmp
daa
jnp
cmp
jbe
jae
jb
ret
int
into
int
int3
fmulp
fs
rol
mov
ret
mov
mov
ret
mov
stos
inc
cwde
mov
aas
stos
mov
stos
lods
movs
mov
cmps
cmps
xchg
popf
pop
test
fwait
push
ins
xchg
xchg
nop
xchg
and
xchg
xchg
or
adc
jb
jl
jp
jge
pop
outs
js
outs
inc
popa
jb
pusha
sub
imul
pop
inc
push
pusha
arpl
dec
pop
call
jecxz
push
push
inc
inc
dec
push
inc
cmp
inc
and
shl
ss
inc
das
cmp
adc
sub
ret
adc
sub
sub
das
sbb
and
sbb
adc
sbb
adc
adc
push
(bad)
cld
push
add
add
xchg
fdivrp
repnz
(bad)
cli
lock
mov
out
clc
stc
in
ret
loope
out
stos
mov
fucomi
je
loope
loopne
loop
fisubr
rcl
int3
mov
into
pusha
mov
int3
mov
ret
mov
mov
mov
mov
mov
cmps
movs
cmps
mov
mov
test
xor
stos
js
sahf
mov
xchg
lea
arpl
xchg
(bad)
jg
pusha
cmp
xor
je
outs
jns
dec
jge
jns
addr16
add
popa
outs
imul
ins
and
push
pop
xor
push
dec
sbb
push
dec
push
xor
inc
inc
dec
fisubr
cmp
inc
ss
aas
xor
xor
cmp
cmp
ret
xor
and
and
sbb
daa
pop
adc
adc
cmps
cmc
pop
push
or
adc
or
or
in
add
cmc
repnz
in
(bad)
jmp
(bad)
out
icebp
test
int
jmp
fnclex
mov
(bad)
rcr
fbstp
cmps
ror
ror
int
retf
rcr
pushf
mov
mov
push
xchg
mov
sar
mov
xor
jnp
popf
cmps
mov
movs
lahf
mov
cwde
mov
je
xchg
xchg
or
test
jg
jae
cmp
jl
outs
je
dec
push
ja
imul
ins
imul
push
addr16
pusha
push
push
pop
sub
dec
sub
mov
dec
dec
inc
inc
aas
dec
fcomp
cmp
inc
xor
xor
cmp
xor
cmp
cmp
daa
rcl
xor
and
call
push
sbb
and
and
sbb
sbb
pop
in
adc
lahf
fisttp
stc
or
add
out
add
dec
jmp
in
xchg
(bad)
div
out
scas
ret
out
jecxz
jmp
call
rcl
loope
ins
mov
(bad)
mov
(bad)
(bad)
int3
les
mov
push
xchg
mov
mov
ret
ret
mov
lods
mov
mov
mov
lea
xor
stos
movs
movs
xchg
fwait
pop
adc
xchg
lea
mov
nop
jp
test
push
jno
jne
imul
push
dec
jp
jo
inc
jno
jo
dec
pop
ins
arpl
cmp
pop
xor
pop
jmp
dec
pop
push
push
pop
dec
sub
dec
push
es
aas
inc
ds
xlat
pop
inc
inc
pop
inc
xor
cmp
or
sub
cmp
ret
add
daa
xor
and
das
push
sbb
sub
and
sbb
or
add
pop
add
adc
add
add
(bad)
hlt
neg
std
lock
repnz
cld
imul
sti
retf
std
out
repnz
jmp
hlt
out
fidivr
(bad)
out
mov
fsubp
rcr
loopne
scas
(bad)
aad
lods
vshufpd
rcr
retf
int
mov
mov
mov
scas
dec
xchg
mov
jbe
inc
mov
test
ss
test
jge
xchg
popf
mov
pushf
xchg
mov
jnp
adc
mov
xor
pop
cmp
data16
outs
data16
imul
pop
ds
pop
popa
pop
cmp
push
pop
push
in
inc
push
pop
pop
push
push
push
in
pop
push
push
inc
dec
or
inc
dec
aas
cmp
inc
cmp
sbb
inc
xor
ss
sub
sub
adc
das
and
or
sbb
push
pop
hlt
es
and
stos
cld
cld
call
add
add
xchg
jmp
(bad)
mov
lock
std
icebp
div
clc
test
jecxz
call
loopne
mov
fcmovnu
in
in
faddp
aam
(bad)
iret
iret
cmps
(bad)
aad
ret
aad
ret
pop
mov
mov
mov
mov
pop
sar
inc
mov
mov
mov
xchg
xchg
jb
mov
sahf
mov
imul
or
cmp
jp
push
ja
test
jbe
jb
js
ins
jns
push
jl
jne
ins
sub
popa
popa
pop
pop
imul
repz
pop
dec
pop
fs
dec
pop
and
dec
push
dec
inc
inc
inc
dec
sbb
inc
cmp
iret
cmovo
xor
sub
sbb
and
xor
(bad)
xor
sub
sbb
sbb
adc
and
sbb
sbb
pop
push
adc
add
adc
fisttp
cld
add
add
sti
add
lock
ret
jecxz
fsubp
repz
fucom
out
(bad)
scas
loope
fst
retf
fstp
retf
movs
(bad)
aad
int
retf
(bad)
into
lds
mov
dec
mov
mov
mov
mov
cmps
stos
test
lahf
xchg
test
nop
mov
xchg
sahf
xchg
mov
gs
add
xchg
jp
outs
ins
jbe
sub
jae
add
jb
outs
pusha
inc
addr16
data16
bound
push
pop
pop
push
in
aas
fs
pop
dec
push
adc
dec
push
push
push
push
inc
inc
push
fsubr
dec
cmp
and
aas
xor
xor
int3
push
inc
cmp
sub
repz
cmp
xor
add
es
and
and
push
sbb
pop
or
add
cld
div
clc
out
add
iret
add
std
repz
sti
jmp
(bad)
repnz
xlat
jmp
loopne
in
in
jmp
xlat
jno
in
shr
leave
fcmovnu
leave
arpl
retf
test
mov
mov
mov
scas
mov
cmps
mov
mov
xchg
mov
pushf
sahf
xchg
jl
(bad)
xchg
jno
lea
xchg
and
mov
xchg
fs
add
outs
jns
pop
push
outs
push
pop
jge
jbe
ins
sub
arpl
and
pop
pop
push
popa
inc
push
pop
popa
push
dec
dec
pop
out
pop
push
push
dec
dec
inc
es
dec
dec
aas
dec
dec
xlat
sbb
cmp
cmp
cmp
cmp
sub
cmp
xor
and
and
and
sub
pop
add
push
and
push
adc
adc
adc
add
add
sti
or
fdivr
cmc
icebp
add
into
add
cld
repnz
out
hlt
call
out
fldpi
(bad)
fstp
frstpm(287
jmp
aam
(bad)
int3
mov
(bad)
(bad)
int
mov
mov
rol
mov
mov
dec
xchg
mov
xchg
mov
lods
mov
stos
lods
cmps
cmp
cmps
mov
xchg
call
push
cwde
mov
mov
add
je
imul
inc
ins
imul
gs
cmp
push
popa
xor
pop
pop
push
out
pop
pop
push
xor
sub
aas
fstp
inc
dec
inc
aam
cmp
iret
and
inc
xor
leave
xor
xor
das
cmc
repz
mov
cli
sbb
push
cmc
daa
scas
lock
adc
sbb
or
add
sbb
inc
add
call
retf
mov
mov
mov
mov
mov
loope
mov
scas
mov
lods
test
jae
aam
fsubp
ins
outs
imul
retf
retf
retf
xlat
aad
into
aad
pop
lods
iret
(bad)
pop
retf
mov
mov
mov
dec
mov
mov
xchg
cmps
sahf
cmps
lahf
lea
mov
pushf
xchg
sub
(bad)
popf
xchg
fwait
mov
je
xchg
xchg
xchg
pop
mov
adc
outs
xor
pop
ins
jp
ins
jno
je
ins
inc
jne
outs
cli
ins
pop
imul
push
pop
inc
pusha
fs
dec
call
sub
inc
dec
inc
xor
dec
cmp
dec
inc
cmp
inc
xor
sub
ds
sub
sub
and
and
icebp
sbb
push
pop
out
adc
or
or
mov
in
adc
cdq
in
fcom
sti
aad
(bad)
fild
in
aam
jmp
loop
hlt
jecxz
cmc
jmp
jns
jmp
ret
(bad)
shl
mov
fcmovnbe
fldenv
leave
xlat
mov
iret
leave
ret
rcl
int3
retf
(bad)
leave
push
cwde
sar
mov
scas
mov
mov
mov
cmp
popf
stos
movs
stos
cmps
xchg
xchg
test
imul
jne
add
pop
jle
add
jp
jb
ja
outs
jg
add
jne
std
arpl
pop
inc
pop
pop
arpl
push
pop
push
out
xor
pop
sub
push
pop
xor
inc
push
push
fsubr
dec
cmp
(bad)
cmp
inc
xor
aas
xor
xor
sub
sub
aaa
cmp
sbb
sub
movaps
sub
and
mov
and
std
(bad)
prefetch
or
pop
or
adc
loop
or
xlat
add
not
mov
stc
out
idiv
in
jmp
stc
jg
loop
fidivr
jne
loop
(bad)
loope
(bad)
int3
jecxz
iret
int3
fcmovb
mov
ror
aam
pop
mov
mov
les
(bad)
popf
mov
sahf
mov
pushf
lods
mov
inc
xchg
scas
mov
test
mov
sub
mov
sub
sbb
mov
adc
ja
outs
pop
jae
jg
jno
or
jns
dec
jo
gs
jne
pusha
push
popa
data16
aaa
gs
push
fs
aaa
pop
pop
pop
dec
push
dec
dec
out
dec
push
inc
das
inc
dec
inc
fnstsw
cmp
inc
dec
inc
xor
cmp
inc
das
leave
sub
sub
and
ss
and
mov
sbb
adc
and
pop
adc
push
in
pop
adc
push
adc
adc
ror
in
or
xchg
fld
std
shr
add
sar
jmp
iret
loop
jg
out
jnp
fsubrp
(bad)
mov
out
(bad)
fsubr
outs
mov
fistp
xlat
rcl
stos
ret
retf
movs
enter
ret
mov
mov
nop
ret
inc
xchg
scas
mov
cmps
stos
scas
test
test
jnp
xchg
pushf
cs
cwde
cdq
lahf
lea
ins
mov
test
mov
data16
pop
jp
ins
or
pushw
ins
inc
jo
pop
addr16
pop
pop
push
pop
fs
push
push
cmp
dec
pop
out
dec
push
daa
pop
inc
inc
push
push
inc
dec
inc
sbb
cmp
aas
dec
shl
xor
sub
aaa
cmp
sub
pop
cmp
sub
and
add
pop
and
mov
sub
not
and
pop
sbb
push
push
cmps
or
pop
add
hlt
in
popf
add
push
clc
call
cld
add
nop
sar
cld
push
mov
in
call
jecxz
ret
loop
shr
loop
fdiv
out
shl
aad
xlat
(bad)
into
(bad)
(bad)
test
(bad)
aad
pop
mov
int3
pop
cmps
(bad)
mov
les
scas
mov
xchg
cmps
mov
test
cmps
popf
cmps
mov
cmps
xchg
lods
xor
mov
lea
mov
jbe
or
ja
push
jg
je
sqrtps
ins
jl
jnp
jp
dec
pop
add
pop
dec
popa
je
cmp
pop
push
imul
pop
popa
pop
pop
jmp
dec
inc
push
push
inc
inc
dec
inc
sub
dec
inc
xlat
sub
dec
push
inc
ds
xor
cs
das
sbb
sub
es
sub
add
and
sub
sbb
adc
and
push
pop
sbb
sbb
or
out
add
popf
out
add
test
add
cld
lock
in
aam
push
stc
test
int3
fcmovnu
loop
mov
loop
(bad)
fisubr
int
lds
ret
ror
test
retf
mov
mov
mov
mov
test
mov
mov
test
and
cs
(bad)
mov
and
es
and
sbb
pop
es
and
and
jne
addr16
ja
arpl
ins
jo
pop
mul
hlt
push
push
icebp
pusha
push
push
aas
push
dec
dec
jmp
push
dec
push
push
inc
dec
fiadd
inc
cmp
inc
dec
cmp
cmp
inc
cmp
aaa
cmp
cmp
xor
adc
xor
sub
sub
mov
and
sbb
adc
or
push
adc
(bad)
std
or
or
icebp
clc
loopne
cli
out
mov
stc
stc
in
cmc
cmc
out
in
loop
out
(bad)
mov
loop
jecxz
fld
mov
(bad)
aad
(bad)
iret
(bad)
pusha
rcr
stos
mov
int
mov
enter
mov
scas
mov
mov
mov
mov
mov
sahf
cmp
xchg
sahf
cdq
xchg
jb
sahf
sub
lahf
mov
jb
(bad)
pop
jge
xchg
add
jnp
ja
ja
jl
jno
popa
dec
outs
imul
ins
jo
push
pusha
pop
dec
data16
call
dec
push
push
dec
inc
push
sub
dec
sbb
inc
inc
xor
cmp
xor
retf
sub
xor
xor
sub
or
and
sbb
mov
sbb
in
pop
adc
mov
add
(bad)
or
xchg
add
(bad)
repz
add
std
out
cli
std
jmp
test
in
in
jecxz
repnz
jns
out
jne
jecxz
call
rcr
push
(bad)
mov
ror
(bad)
ret
ret
enter
push
les
shl
inc
stos
mov
lods
mov
lods
mov
cwde
mov
ja
mov
mov
lea
jno
mov
mov
jge
jp
pop
ins
ja
or
jno
ins
jne
outs
jb
jno
push
stc
push
popa
pop
pusha
lock
pop
cs
pop
xor
push
out
push
and
dec
xor
push
inc
dec
inc
ds
xlat
inc
dec
dec
and
aas
cmp
xor
sub
adc
aaa
and
and
std
xor
sub
sub
push
sub
push
loop
add
or
sbb
adc
nop
loope
adc
add
or
or
add
icebp
into
add
std
cld
stc
out
out
mul
add
retf
jmp
fcmovu
mov
(bad)
imul
mov
rcl
(bad)
mov
mov
fwait
mov
scas
mov
mov
mov
cmps
inc
scas
aas
test
pushf
stos
jle
cmps
cmps
xchg
sahf
xchg
xchg
sub
xchg
call
mov
sbb
jnp
adc
jnp
outs
or
jb
jns
add
push
bound
arpl
push
dec
arpl
push
push
push
sbb
gs
dec
dec
dec
pop
push
pop
jecxz
inc
push
push
inc
dec
inc
dec
fisubr
aam
(bad)
sar
iret
ror
dec
pop
inc
leave
sti
(bad)
inc
sti
ret
hlt
shl
cmc
mov
in
jmp
scas
fld
fsub
add
rcr
(bad)
cdq
stc
xchg
int
retf
xchg
ret
(bad)
ret
mov
test
and
std
jg
jge
jnp
jns
ja
jne
jae
jno
outs
mov
imul
fwait
pop
(bad)
pop
mov
push
xchg
push
or
test
dec
scas
inc
jge
ja
ja
jne
mov
cmp
xor
sub
mov
mov
jae
xchg
jns
mov
jne
push
sub
js
jae
je
jae
jns
outs
call
std
inc
sti
pop
stc
pop
neg
pop
repz
lock
pop
jmp
jmp
dec
jecxz
loope
(bad)
clc
cmp
xlat
inc
aad
rol
das
iret
inc
int
retf
clc
leave
sub
ret
ret
and
aaa
mov
add
mov
mov
scas
daa
lods
stc
stos
adc
repz
stc
movs
hlt
mov
icebp
pushf
loopne
or
xchg
call
mov
mov
inc
jle
jl
jp
js
jbe
je
jb
jo
outs
mov
into
push
push
test
pop
mov
mov
pop
mov
push
adc
xchg
dec
popf
dec
jp
stos
inc
mov
cwde
inc
jp
mov
cmp
fwait
ss
jge
cdq
xor
sub
and
and
sbb
sbb
adc
adc
gs
push
or
or
popa
push
pop
add
add
add
cld
push
cli
sub
inc
neg
inc
repnz
cmp
xor
inc
jmp
cmp
adc
sub
push
fdiv
fimul
fdiv
(bad)
es
ror
sar
into
sub
inc
retf
inc
xabort
sti
ret
icebp
mov
in
mov
out
jmp
lods
fsubr
aad
xlat
mov
rcr
xchg
not
mov
mov
and
in
cli
jl
mov
js
jbe
je
jb
jo
outs
leave
ins
imul
retf
shl
popa
jne
pop
jge
mov
mov
push
mov
dec
mov
jne
addr16
mov
lods
inc
mov
mov
lods
cmp
inc
mov
mov
sub
and
outs
push
xchg
sbb
sbb
adc
adc
mov
popa
or
or
push
jae
inc
add
or
jb
addr16
gs
test
arpl
(bad)
out
push
in
pop
jmp
es
loopne
ficom
push
fimul
cmp
adc
shl
and
inc
into
das
int3
aaa
retf
sub
adc
sub
cmp
adc
push
mov
mov
add
sbb
sbb
sahf
(bad)
pushf
or
add
mov
mov
mov
test
and
fwait
jp
js
jbe
je
jb
jo
outs
aam
imul
fs
pop
retf
pop
mov
push
mov
(bad)
push
ror
mov
mov
inc
mov
mov
lods
cmp
test
xchg
xchg
sub
sub
xchg
es
and
and
sbb
sbb
adc
jbe
or
ins
or
add
add
outs
(bad)
imul
add
addr16
pusha
repnz
out
add
push
jmp
pop
loop
loopne
fiadd
sbb
fadd
inc
aam
sar
shl
into
inc
int3
pop
retf
xor
cmp
sbb
sub
sub
push
mov
and
scas
add
cmps
or
sahf
adc
xchg
fcom
mov
mov
mov
mov
xchg
test
and
lods
jle
jl
jp
js
cdq
enter
jecxz
shr
ins
iret
push
push
enter
into
pop
rcr
mov
push
push
push
push
add
nop
(bad)
xchg
call
iret
xchg
mov
fwait
mov
ds
scas
(bad)
movzx
dec
sub
sub
daa
sub
push
cmp
pop
cmp
sbb
sbb
adc
and
adc
push
daa
pop
push
push
test
add
cld
std
sbb
div
stc
adc
repnz
cli
in
repnz
repnz
or
push
cmc
adc
out
loopne
cli
in
fcmovu
(bad)
out
(bad)
(bad)
aam
(bad)
fcmovnbe
int
leave
leave
ror
int3
in
ret
iret
into
int
sar
(bad)
xor
mov
mov
test
lods
movs
cmps
mov
mov
movs
sahf
sahf
cdq
cdq
call
cdq
(bad)
xchg
stos
call
movs
test
jle
sbb
je
test
sbb
lea
ins
push
arpl
shr
jge
imul
jae
push
ins
push
dec
dec
dec
addr16
push
dec
inc
push
mov
inc
aas
cmp
cmp
push
xor
xor
dec
xor
inc
xor
daa
daa
inc
and
daa
and
sbb
pop
sbb
adc
sbb
adc
adc
add
or
or
(bad)
sbb
clc
(bad)
sti
adc
add
jge
hlt
or
jmp
push
out
arpl
in
fsubrp
pop
ins
fucomip
(bad)
hlt
aad
repz
loop
outs
ror
retf
fmul
int3
mov
loopne
mov
fcmovnb
retf
mov
inc
mov
mov
int3
stos
mov
cmps
mov
xchg
popf
mov
cwde
xchg
mov
xchg
mov
stos
stos
xchg
lods
mov
xchg
adc
jns
not
xor
mov
mov
jne
gs
jle
jg
jp
imul
pop
push
push
arpl
xchg
push
ins
dec
dec
pop
pop
leave
fs
gs
inc
push
ret
pop
cmp
inc
push
cmp
xor
xor
sub
cmp
and
and
push
push
sub
sbb
sub
adc
sub
(bad)
ud2
or
adc
or
push
adc
in
add
(bad)
sbb
add
sti
adc
adc
sti
cli
not
lock
or
lock
cli
push
jecxz
out
(bad)
in
pop
(bad)
(bad)
fcom
out
jl
icebp
rcl
fisttp
shr
retf
inc
mov
jecxz
ret
ret
fnstsw
mov
(bad)
xor
dec
mov
scas
mov
lods
mov
shl
popf
mov
popf
lods
cmps
mov
xchg
xchg
xchg
xchg
xchg
cmps
lea
mov
(bad)
xchg
jle
clc
ja
ja
jae
je
jb
jo
ins
ins
ins
imul
arpl
arpl
jne
pop
pop
pop
push
pop
push
push
push
pusha
gs
push
pop
gs
dec
pop
imul
aas
inc
inc
inc
inc
cmp
aas
cmp
xor
xor
dec
xor
xor
dec
sub
cs
sub
es
sub
push
sbb
adc
adc
adc
femms
or
or
push
add
add
push
idiv
add
hlt
repnz
in
sti
add
in
in
in
jmp
jmp
loopne
(bad)
clc
fcmovnu
(bad)
icebp
fcom
xlat
aad
into
into
rcl
int3
iret
ror
int3
(bad)
clc
(bad)
enter
(bad)
into
clc
mov
mov
mov
mov
lods
mov
shr
scas
lods
cmps
stos
sahf
lods
sbb
mov
fbld
nop
rcl
mov
add
(bad)
adc
xor
jg
mov
jp
xlat
ja
cmp
loopne
outs
frstor
ficomp
pop
addr16
push
jno
pop
push
push
push
dec
pop
leave
aad
dec
dec
push
push
pop
inc
pop
dec
inc
inc
inc
dec
mov
cmp
xor
xor
sub
and
xor
cmp
pop
pop
sbb
adc
sbb
sub
or
arpl
adc
and
inc
add
std
cli
add
(bad)
cld
adc
repz
inc
div
or
jmp
cli
inc
jmp
in
hlt
inc
out
(bad)
in
in
ds
fcmovnbe
jecxz
(bad)
(bad)
ror
fcmovnu
rcr
rcl
into
out
(bad)
ror
(bad)
(bad)
(bad)
rol
mov
retf
ret
iret
mov
les
scas
lods
sar
cmps
lods
mov
cmps
sahf
movs
fwait
cdq
mov
xchg
sahf
xchg
pushf
xchg
nop
test
lea
nop
loope
fwait
jg
xchg
into
jns
jae
jbe
cmp
xchg
ins
jno
push
arpl
je
ins
shl
push
pop
arpl
push
push
dec
push
push
dec
dec
pop
(bad)
retf
inc
push
rol
ds
aas
cmp
mov
xor
inc
xor
xor
cmp
cmp
xor
sub
test
sbb
sbb
and
lea
adc
push
adc
add
or
mov
or
std
stc
pop
add
out
jmp
out
std
stc
data16
cmc
bound
out
out
pop
pop
(bad)
fsubr
push
push
fcomp
shl
aad
(bad)
int
dec
push
into
rol
fadd
enter
aas
push
ret
int3
cmp
(bad)
mov
lds
dec
mov
scas
scas
retf
test
movs
mov
and
mov
fwait
call
mov
xchg
xchg
(bad)
(bad)
xchg
stos
mov
test
jg
add
jne
repz
jo
ins
jo
push
push
in
jb
adc
pop
pop
jbe
fdiv
bound
pusha
outs
pop
pop
imul
push
pusha
dec
pop
dec
dec
push
ret
iret
dec
dec
inc
pop
inc
dec
dec
push
inc
inc
cmp
cmp
ss
xor
sub
jno
sub
xor
sub
pop
daa
xchg
push
sbb
adc
and
mov
or
test
or
adc
add
stc
or
cld
hlt
cmc
repz
in
jmp
imul
in
pop
jl
loopne
fstp
(bad)
out
jae
fcom
loope
ins
into
jmp
into
fcmovbe
inc
push
ret
inc
(bad)
cmp
leave
ss
inc
mov
mov
sar
stos
mov
and
lahf
scas
sbb
mov
xchg
cmps
xchg
movs
jmp
mov
mov
xchg
test
sub
(bad)
jg
xchg
repz
mov
out
jecxz
outs
lea
test
retf
(bad)
fiadd
int
mov
mov
retf
into
push
dec
pop
dec
dec
push
jge
js
jbe
je
inc
inc
inc
aas
ds
cmp
mov
dec
mov
jno
lea
xchg
ja
xchg
(bad)
xchg
xchg
push
inc
sbb
cmp
dec
inc
dec
inc
cmp
cmp
ins
aas
ins
xor
cmp
xor
popa
xor
sub
sub
repz
repnz
in
in
jmp
icebp
jmp
jecxz
loope
loopne
jmp
push
or
dec
inc
inc
ds
xor
cmp
cmp
retf
iret
mov
sar
xor
or
sbb
mov
mov
lods
stos
stos
test
icebp
sbb
push
or
add
(bad)
xchg
xchg
popf
nop
mov
idiv
repz
test
retf
imul
fsubr
jmp
(bad)
xlat
in
outs
(bad)
outs
ins
test
rcl
into
aad
mov
test
xchg
shl
xchg
mov
mov
lahf
sahf
push
and
mov
xchg
xchg
mov
jae
je
xchg
mov
mov
adc
add
push
pop
push
jns
fs
dec
outs
push
push
and
push
pusha
aaa
bound
cs
push
dec
push
pop
xor
inc
dec
dec
out
pop
dec
aas
cmp
xor
inc
inc
inc
xor
fisttp
aaa
sub
and
sub
sbb
mov
repz
jecxz
daa
and
adc
xlat
cli
or
adc
adc
repnz
pop
or
add
cli
dec
in
(bad)
repnz
cld
idiv
clc
call
in
jecxz
out
sub
movs
je
xor
mov
fstp
rcl
int3
xlat
arpl
popa
pop
test
enter
leave
sub
mov
mov
mov
mov
xchg
mov
lahf
stos
jp
cmps
pushf
cdq
lahf
xchg
mov
sahf
xchg
xchg
mov
lea
bound
jge
ja
add
cmp
or
fwait
push
or
sbb
or
sbb
and
and
push
push
sbb
sbb
sbb
adc
adc
push
or
or
or
push
add
ror
test
cli
cli
sub
std
repz
hlt
repz
in
in
push
in
in
jmp
adc
fnstsw
loope
jecxz
or
fsub
(bad)
iret
(bad)
iret
fstp
leave
(bad)
xlat
xlat
rol
hlt
sar
mov
leave
lds
jnp
jp
fwait
scas
fisub
mov
into
xchg
cdq
cwde
retf
(bad)
cdq
mov
mov
mov
push
push
jns
dec
jno
cmp
stos
stos
stos
jno
jae
movs
ins
outs
outs
mov
cdq
outs
bound
popa
fs
xchg
(bad)
nop
mov
